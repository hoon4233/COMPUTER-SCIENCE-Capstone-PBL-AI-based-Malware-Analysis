rol
add
add
add
add
add
add
add
add
add
add
add
and
or
bound
adc
add
add
sub
add
or
add
sub
add
add
sub
add
adc
add
sub
add
add
add
add
sub
add
add
add
inc
sub
pop
add
push
sub
add
add
adc
add
add
add
sub
add
or
sub
xor
add
add
adc
rol
add
add
adc
add
jae
add
or
add
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jnp
add
add
sbb
add
add
sub
add
or
add
add
add
sbb
add
outs
sbb
add
add
jnp
add
add
sbb
push
add
or
add
add
add
or
or
pop
add
or
add
or
add
add
add
add
add
and
add
add
jnp
add
add
outs
and
add
add
jnp
add
add
retf
add
add
and
add
or
add
or
add
add
add
outs
and
add
add
add
sbb
add
add
or
add
add
add
and
daa
add
or
add
add
add
inc
add
add
jae
add
or
add
or
add
add
add
jb
add
jo
sub
add
je
add
add
add
or
add
add
add
outs
sub
add
add
jnp
add
add
sahf
add
add
repnz
add
add
or
add
or
add
add
add
loopne
add
and
add
add
jnp
add
add
inc
add
add
pop
jae
add
or
add
or
add
add
add
outs
and
add
add
add
lock
jo
daa
add
or
add
add
add
outs
sub
add
add
add
jb
add
jo
sub
add
je
add
add
add
or
add
add
add
sahf
add
add
inc
jae
add
or
add
or
add
add
add
cmp
add
and
add
add
jnp
add
add
inc
add
add
mov
add
jae
add
or
add
or
add
add
add
outs
das
add
or
add
add
add
outs
xor
add
add
jnp
add
add
xor
add
outs
sbb
add
add
jnp
add
add
push
add
jo
add
inc
inc
pop
sbb
jae
add
or
add
or
add
add
add
sbb
push
add
or
add
add
add
sahf
add
add
or
pop
add
or
add
or
add
add
add
jl
add
and
add
add
jnp
add
add
inc
add
add
sub
and
add
outs
and
add
add
jnp
add
add
outs
and
add
add
add
xchg
add
jo
daa
add
or
add
add
rol
add
jae
add
or
xor
add
sub
add
or
add
aaa
add
or
add
or
add
jnp
add
add
cmp
add
add
and
add
add
sbb
and
add
sub
add
or
add
cmp
add
add
add
add
cmp
add
add
sub
add
or
jnp
add
add
cmp
add
add
sub
add
or
jnp
add
add
cmp
add
add
sub
add
or
jnp
add
add
cmp
add
add
sub
push
add
or
add
sub
add
add
push
jb
add
jo
sub
add
je
add
add
cmp
add
add
jo
and
add
add
jb
add
jo
daa
add
or
add
add
add
add
or
add
sub
add
or
sub
sub
add
add
sub
add
add
add
push
sub
add
add
sub
sub
add
add
add
adc
add
cmp
add
add
add
add
add
add
inc
push
inc
or
sub
add
jo
add
add
sub
add
outs
dec
add
or
add
or
push
add
add
jle
add
add
sub
pop
sub
xor
add
add
add
add
add
add
add
sub
push
sub
add
add
add
adc
add
or
add
add
jle
add
add
sub
push
sub
or
add
sub
add
je
add
add
sub
add
dec
add
or
add
add
mov
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
arpl
sub
push
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
gs
cs
jb
ja
outs
addr16
imul
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
inc
inc
push
inc
inc
push
inc
push
call
jmp
add
add
add
add
add
add
add
add
jae
add
arpl
outs
add
add
add
bound
jne
je
je
outs
add
xor
add
popa
add
imul
add
outs
add
outs
add
add
popa
add
add
add
and
imul
jne
jb
add
outs
add
xor
add
ins
add
add
aaa
push
pop
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
arpl
add
add
or
outs
outs
inc
popa
je
or
outs
outs
push
imul
push
jns
je
ins
cs
jb
ja
outs
addr16
imul
add
add
or
add
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
dec
add
add
add
add
add
xor
add
add
add
add
add
add
and
add
add
add
xor
add
cmps
add
add
adc
add
add
add
add
add
add
add
or
add
xor
add
add
add
or
add
add
and
test
add
push
xor
add
adc
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
inc
add
(bad)
inc
add
add
jg
(bad)
clc
add
add
(bad)
clc
ud0
add
aas
loopne
add
loopne
add
clc
add
jg
add
add
add
inc
add
add
add
inc
add
add
add
add
add
jg
add
add
add
jle
add
add
add
cmp
add
add
add
add
or
add
add
add
adc
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
adc
add
add
add
inc
add
add
add
add
add
add
add
add
add
or
add
add
add
loopne
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
or
add
add
add
add
add
add
cld
add
(bad)
inc
add
add
pop
inc
add
add
add
jg
add
add
add
pop
add
rol
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
lock
add
sldt
lock
add
sldt
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
loopne
add
add
add
loopne
add
add
add
lock
add
sldt
lock
add
sldt
clc
add
add
pop
add
cld
add
add
aas
add
cld
add
add
aas
add
inc
add
add
add
add
add
add
inc
add
add
add
(bad)
clc
add
pop
inc
add
(bad)
cld
ud0
add
(bad)
(bad)
cld
ud0
add
(bad)
(bad)
inc
(bad)
inc
add
(bad)
inc
jg
add
(bad)
(bad)
inc
(bad)
(bad)
inc
ud0
add
(bad)
jmp
ud0
add
(bad)
push
ud0
add
(bad)
(bad)
cld
pop
inc
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
inc
add
inc
ud0
loopne
add
jl
add
add
push
lock
pop
lock
push
jo
add
add
add
and
add
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
and
add
add
add
add
add
add
adc
add
add
add
add
and
add
adc
add
add
add
add
add
add
add
push
add
pop
rol
pop
add
add
add
add
add
add
add
add
add
pop
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
lock
(bad)
add
paddb
add
inc
add
cld
pop
(bad)
(bad)
dec
(bad)
(bad)
inc
(bad)
(bad)
inc
jg
inc
jg
jmp
jmp
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
pop
lock
lock
add
rol
add
add
add
add
add
add
add
add
or
add
or
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
(bad)
aas
add
inc
add
inc
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
adc
add
adc
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
adc
add
sldt
add
add
add
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
and
add
and
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
sub
add
add
add
add
and
add
and
add
push
add
add
add
sbb
add
sbb
add
pop
add
add
add
adc
add
adc
add
push
add
add
add
or
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
dec
add
add
add
dec
add
add
add
add
dec
add
add
add
push
add
add
add
push
add
add
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
dec
add
add
add
inc
add
add
add
add
add
add
add
cmp
add
add
add
add
xor
add
add
add
add
sub
add
daa
add
add
add
and
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
push
add
add
add
pop
add
add
add
add
pop
add
add
add
popa
add
add
add
arpl
add
add
add
add
data16
add
add
imul
add
push
add
imul
add
add
ins
add
add
add
ins
add
add
add
ins
add
add
add
ins
add
add
add
imul
add
arpl
add
pop
add
add
add
add
push
add
add
add
dec
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
inc
add
add
add
dec
add
add
add
pop
add
add
add
popa
add
add
add
push
add
outs
add
add
add
jae
add
je
add
ja
add
ja
add
js
add
js
add
jns
add
jp
add
jnp
add
jl
add
jge
add
jle
add
jg
add
add
add
add
add
add
add
add
test
add
test
add
test
add
add
add
add
add
add
ja
add
jb
add
outs
add
add
add
data16
add
add
pop
add
add
add
push
add
add
add
dec
add
add
add
inc
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
push
add
add
add
pop
add
add
add
data16
add
add
add
ja
add
jl
add
add
add
xchg
add
mov
add
mov
add
lea
add
mov
add
mov
add
pop
add
nop
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
add
outs
add
add
add
add
add
add
pop
add
add
add
push
add
add
add
dec
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
push
add
add
add
add
add
add
add
add
add
or
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
daa
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
dec
add
add
add
push
add
add
add
pop
add
add
add
add
outs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sahf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmps
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
add
jo
add
imul
add
add
popa
add
add
add
add
push
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
daa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
xor
add
xor
add
cmp
add
add
add
add
add
push
add
add
add
pop
add
add
add
data16
add
add
add
jbe
add
jl
add
add
add
lea
add
xchg
add
add
add
add
add
add
add
add
add
and
les
add
add
cmp
int
add
retf
add
sub
add
or
add
add
add
add
add
add
add
add
add
push
xlat
add
jae
add
jmp
add
jmp
add
fld
add
add
cmp
add
sbb
mov
add
movs
add
add
add
add
add
add
add
add
add
add
add
jp
add
jne
add
outs
add
add
add
arpl
add
pop
add
add
add
push
add
add
add
inc
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
sbb
add
adc
add
add
add
add
add
add
add
or
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
sub
add
xor
add
xor
add
cmp
add
aas
add
add
add
dec
add
add
add
pop
add
add
add
data16
add
add
add
js
add
jge
add
add
add
add
add
add
add
add
add
add
add
add
pop
xlat
add
nop
in
add
scas
clc
add
inc
push
(bad)
adc
inc
adc
inc
bswap
inc
adc
inc
xadd
add
fwait
hlt
add
jns
add
push
fild
add
add
dec
xlat
add
pop
fiadd
add
in
add
cli
add
(bad)
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
pextrw
rdseed
add
sar
or
out
add
pusha
fadd
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
outs
add
add
add
pusha
add
add
add
push
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
pusha
add
add
add
outs
add
add
add
jge
add
test
add
mov
add
pop
add
xchg
add
add
add
add
add
add
add
add
add
mov
add
inc
pop
int3
inc
pop
enter
ret
adc
mov
inc
adc
inc
btc
add
mov
inc
push
mov
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
xadd
add
mov
inc
adc
add
mov
inc
push
mov
inc
push
mov
inc
or
mov
inc
adc
inc
adc
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
add
pop
add
add
add
dec
add
add
add
cmp
add
xor
add
das
add
add
add
add
add
and
add
sbb
add
sbb
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
and
add
sub
add
sub
add
xor
add
add
add
add
add
add
dec
add
add
add
push
add
add
add
add
add
add
js
add
jg
add
xchg
add
lea
add
xchg
add
add
add
add
add
add
add
add
add
push
aad
or
icebp
add
leave
inc
sbb
inc
sbb
inc
sbb
inc
adc
mov
inc
adc
inc
adc
inc
btc
add
mov
inc
(bad)
inc
adc
inc
(bad)
inc
push
mov
inc
movsx
add
mov
inc
adc
inc
adc
inc
adc
inc
adc
add
mov
inc
bsf
add
mov
inc
btc
add
mov
inc
adc
inc
adc
in
add
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
and
add
sub
add
sub
add
add
add
add
add
add
add
push
add
add
add
add
add
add
ja
add
jg
add
mov
add
pop
add
xchg
add
add
add
add
add
lods
add
push
mov
add
jns
add
mov
inc
push
int3
inc
pop
leave
inc
pop
ret
push
sar
sbb
sar
pop
sar
adc
mov
inc
adc
inc
adc
inc
adc
add
mov
inc
adc
inc
adc
inc
adc
inc
sbb
inc
sbb
inc
pop
(bad)
inc
adc
(bad)
inc
adc
mov
inc
adc
inc
adc
inc
adc
inc
bsf
add
mov
inc
adc
inc
adc
hlt
add
jl
add
jne
add
outs
loopne
add
add
les
add
mov
add
mov
add
add
add
add
add
add
add
ins
add
add
add
pop
add
add
add
dec
add
add
add
cmp
add
xor
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
sbb
add
sbb
add
pop
add
add
add
sub
add
sub
add
add
add
add
add
add
add
dec
add
add
add
pop
add
add
add
jno
add
jnp
add
test
add
lea
add
xchg
add
add
add
add
add
sbb
add
xchg
out
add
mov
inc
adc
inc
sbb
inc
es
inc
sub
inc
and
ret
inc
sbb
inc
sbb
inc
adc
sar
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
add
mov
inc
btc
add
mov
inc
pop
ret
inc
sbb
inc
push
(bad)
inc
push
(bad)
inc
sbb
inc
sbb
inc
sbb
inc
pop
(bad)
inc
push
ret
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
sar
adc
inc
adc
inc
push
mov
inc
adc
inc
xadd
add
ret
inc
adc
inc
push
enter
(bad)
push
mov
add
xchg
in
add
pop
rol
add
mov
add
fwait
add
add
add
add
add
jo
add
data16
add
add
add
dec
add
add
add
cmp
add
xor
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
aaa
add
add
add
add
add
dec
add
add
add
pop
add
add
add
jae
add
jge
add
xchg
add
xchg
add
add
add
add
add
inc
into
add
xchg
in
add
inc
adc
(bad)
inc
movsx
add
ret
call
xor
call
enter
(bad)
inc
and
inc
push
ret
inc
sbb
inc
push
sar
adc
inc
adc
inc
adc
inc
adc
inc
adc
ret
adc
sar
adc
inc
adc
add
mov
inc
adc
inc
pop
ret
push
(bad)
and
retf
and
retf
pop
retf
inc
sbb
leave
inc
pop
enter
ret
inc
adc
sar
adc
inc
adc
ret
sbb
inc
sbb
inc
push
mov
inc
btc
add
mov
inc
adc
inc
or
mov
inc
pop
mov
inc
and
inc
and
inc
sbb
xchg
add
sbb
add
add
add
add
add
add
push
add
add
add
add
inc
add
add
add
add
add
add
add
and
add
add
add
sbb
add
adc
add
adc
add
sldt
add
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
and
add
add
add
add
add
add
add
dec
add
add
add
add
push
add
add
add
mov
add
xchg
add
add
add
adc
add
int3
inc
pop
(bad)
inc
adc
inc
adc
dec
xor
jmp
inc
int3
jmp
inc
retf
call
cmp
dec
xor
inc
sub
inc
and
inc
sbb
inc
pop
ret
inc
adc
ret
adc
sar
push
ret
push
ret
inc
pop
ret
inc
push
ret
push
sar
adc
inc
adc
inc
adc
inc
adc
inc
push
ret
inc
push
(bad)
inc
daa
retf
sub
inc
sub
inc
sub
inc
es
inc
and
inc
and
inc
sbb
retf
sbb
inc
pop
(bad)
pop
(bad)
inc
pop
(bad)
inc
pop
(bad)
sbb
inc
sbb
(bad)
inc
pop
ret
sbb
inc
adc
inc
btc
movzx
add
mov
inc
push
mov
inc
btc
add
mov
inc
and
inc
int3
inc
sbb
std
add
push
int3
add
add
add
add
add
add
add
add
add
add
push
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
cmp
add
inc
add
add
add
push
add
add
add
add
add
add
jnp
add
xchg
add
mov
add
xchg
add
adc
fiadd
and
inc
sbb
inc
sbb
inc
adc
mov
inc
sbb
call
cmp
jmp
dec
iret
jmp
into
jmp
inc
int
adc
sub
inc
and
inc
sbb
inc
sbb
inc
pop
(bad)
pop
ret
inc
pop
ret
inc
pop
ret
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
pop
ret
inc
adc
inc
adc
inc
adc
mov
inc
adc
inc
sbb
inc
es
das
int
pop
xor
inc
cs
inc
sub
inc
daa
iret
inc
and
inc
and
inc
sbb
retf
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
and
inc
es
(bad)
inc
es
sbb
mov
inc
adc
inc
adc
inc
btc
add
mov
inc
sbb
dec
sub
dec
sub
inc
sub
inc
es
inc
adc
cmps
add
add
add
add
add
outs
add
add
add
pop
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
sbb
add
adc
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
inc
add
add
add
add
pusha
add
add
add
jbe
add
add
add
mov
add
ret
sub
inc
and
inc
sbb
sar
sbb
inc
adc
mov
call
inc
retf
push
sar
aaa
push
sar
sub
call
cmp
retf
and
(bad)
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
adc
mov
inc
adc
ret
and
inc
and
inc
sub
dec
xor
dec
xor
sar
add
sar
add
sar
add
sar
add
iret
inc
and
inc
pop
int
add
int3
inc
sbb
inc
sbb
inc
sbb
inc
sbb
leave
inc
sub
dec
xor
dec
sub
inc
sbb
inc
adc
add
mov
inc
adc
inc
adc
inc
sbb
ret
das
(bad)
call
xor
dec
xor
dec
sub
inc
and
ret
add
add
add
add
add
imul
add
add
push
add
add
add
add
cmp
add
xor
add
sub
add
and
add
sbb
add
add
add
add
add
add
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
das
add
add
add
add
add
add
add
dec
add
add
add
arpl
add
outs
add
add
add
add
dec
mov
or
aam
add
enter
(bad)
inc
and
inc
sbb
sar
pop
sar
adc
inc
sbb
call
pop
aam
aas
pop
aam
xor
call
inc
into
dec
sub
inc
and
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
sbb
int3
inc
sbb
retf
sbb
inc
sbb
inc
sbb
inc
sbb
inc
adc
inc
sub
call
in
push
cs
dec
aaa
sar
or
aam
add
sar
add
sar
add
inc
sub
inc
daa
sar
add
sar
add
into
inc
and
inc
push
into
inc
sbb
int3
inc
sbb
int3
inc
and
inc
sub
dec
xor
call
int
push
cmp
dec
das
enter
sar
adc
inc
pop
mov
inc
adc
inc
adc
mov
inc
sbb
dec
sub
call
ss
leave
call
cmp
dec
xor
inc
iret
inc
sbb
mov
add
add
add
add
add
dec
add
add
add
cmp
add
xor
add
sub
add
and
add
push
add
add
add
add
add
add
add
add
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
mov
es
push
xlat
dec
das
(bad)
inc
sub
inc
es
inc
and
inc
sbb
sar
push
sar
sbb
call
cmp
(bad)
cmp
pop
(bad)
push
push
sar
and
call
aaa
int
add
retf
inc
and
inc
push
retf
inc
sbb
retf
inc
push
retf
inc
push
retf
inc
push
retf
inc
push
retf
inc
pop
int3
inc
sbb
int3
inc
push
int
add
int
add
int3
inc
sbb
inc
sbb
inc
sbb
inc
pop
ret
inc
and
dec
call
mov
inc
cli
push
pop
(bad)
add
aam
pop
aaa
aad
add
aam
add
aad
add
inc
sub
inc
and
aam
add
inc
push
iret
inc
and
inc
pop
iret
inc
pop
into
inc
pop
into
inc
and
inc
es
inc
sub
dec
xor
call
inc
iret
call
ds
add
(bad)
adc
mov
inc
push
sar
adc
(bad)
inc
push
ret
inc
push
ret
push
sar
sbb
inc
and
dec
xor
call
aas
retf
inc
retf
jmp
inc
leave
call
xor
inc
sub
dec
cs
inc
adc
add
add
pusha
add
add
add
push
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
pop
add
das
xchg
sbb
mov
call
aaa
retf
xor
inc
sub
inc
daa
(bad)
inc
and
inc
sbb
sar
sbb
dec
xor
(bad)
cmp
inc
(bad)
(bad)
cmp
jmp
dec
sar
adc
int
add
int3
inc
and
retf
inc
pop
retf
inc
pop
int3
inc
pop
int3
inc
pop
int
add
int
add
int
add
int
add
inc
push
out
inc
sub
inc
push
int3
inc
pop
int
add
inc
sbb
inc
sbb
inc
sbb
inc
out
sub
(bad)
dec
(bad)
call
cmc
jmp
dec
fcos
add
aad
add
(bad)
inc
das
aad
add
aam
add
sar
add
sar
cvtps2pd
(bad)
cmp
xor
inc
push
sar
add
sar
add
sar
add
iret
inc
sub
jmp
pop
jecxz
add
sar
add
iret
call
cmp
call
inc
sar
adc
push
ret
adc
inc
sbb
inc
pop
(bad)
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
sbb
(bad)
cmp
jmp
dec
int3
push
dec
into
jmp
inc
retf
call
xor
inc
sub
call
cmp
call
movs
loope
add
jge
add
push
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
pop
push
movs
and
cld
sbb
aad
adc
retf
dec
ss
xor
inc
retf
sub
inc
es
inc
and
inc
sbb
inc
sbb
dec
cs
push
push
sar
inc
fs
(bad)
ds
aad
sub
call
aas
into
inc
xor
inc
daa
retf
inc
and
inc
pop
int3
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
pop
iret
inc
sub
push
xor
add
inc
pop
idiv
add
fdivr
add
inc
push
int3
inc
sbb
enter
jecxz
xor
call
pushf
(bad)
call
cwde
(bad)
jmp
mov
icebp
dec
cmp
aad
add
aad
add
aam
add
sar
add
inc
data16
call
jle
inc
jmp
add
sar
add
sar
add
into
inc
dec
jmp
jmp
fs
add
into
dec
aaa
sar
pop
inc
sar
and
jmp
dec
into
inc
enter
sar
pop
mov
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
and
dec
das
enter
retf
push
push
sar
sub
dec
xor
dec
das
(bad)
aas
(bad)
jmp
inc
(bad)
hlt
add
aaa
mov
add
inc
add
add
add
add
add
add
sub
add
and
add
push
add
add
add
add
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
and
add
add
add
add
add
add
add
inc
push
and
lods
sub
and
call
aas
int
adc
retf
dec
aaa
retf
dec
xor
inc
das
retf
inc
sub
inc
and
(bad)
inc
sbb
inc
daa
(bad)
jmp
dec
sar
inc
arpl
inc
aad
xor
call
xor
inc
sub
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
sbb
jmp
arpl
jmp
outs
(bad)
inc
outs
(bad)
inc
data16
inc
xor
inc
sbb
inc
sbb
jmp
push
(bad)
xor
movs
(bad)
jmp
stos
(bad)
call
cmps
(bad)
call
(bad)
inc
jmp
sub
inc
daa
sar
add
inc
jb
inc
outs
(bad)
inc
(bad)
jmp
mov
in
add
sar
add
iret
inc
cmp
inc
jo
inc
xchg
push
xchg
cli
call
inc
xlat
inc
cs
adc
sar
sbb
and
push
sar
add
ret
adc
ret
sbb
inc
sbb
inc
sbb
inc
sbb
leave
inc
sbb
(bad)
and
inc
daa
enter
retf
dec
into
(bad)
cmp
pop
sar
daa
inc
retf
dec
xor
call
ss
aam
sub
fdivr
or
dec
mov
add
cmp
add
cmp
add
xor
add
sub
add
and
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
das
jp
xor
jmp
dec
sar
sbb
aas
into
call
into
dec
xor
inc
das
int
add
int3
inc
and
inc
sbb
(bad)
jmp
inc
int
inc
pop
aad
inc
(bad)
(bad)
push
push
aam
and
sub
call
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
sar
add
sar
add
sar
add
xlat
(bad)
cmp
(bad)
inc
(bad)
inc
jae
inc
ja
inc
jno
inc
cmp
iret
call
(bad)
jmp
(bad)
call
(bad)
push
(bad)
(bad)
jmp
mov
(bad)
jmp
sahf
std
call
sub
inc
push
out
add
inc
jae
inc
jne
dec
xchg
(bad)
call
cmps
(bad)
jmp
cdq
cld
dec
inc
(bad)
add
(bad)
add
inc
jle
call
xchg
(bad)
call
mov
out
inc
sar
or
sar
adc
inc
inc
cld
push
ja
(bad)
ds
add
sar
pop
ret
sbb
leave
inc
sbb
inc
pop
int
add
int3
inc
pop
int3
inc
pop
retf
and
inc
and
inc
retf
cmp
sar
inc
pop
aam
cmp
call
inc
retf
xor
call
cmp
(bad)
(bad)
cmp
call
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
jbe
cmp
jmp
push
aad
and
inc
sar
sbb
call
cmp
dec
aaa
iret
inc
iret
inc
cs
inc
sub
inc
and
inc
pop
(bad)
call
cmp
(bad)
cmp
aam
inc
arpl
(bad)
cmp
aad
daa
dec
sar
daa
dec
sar
cmp
jmp
and
inc
and
sar
add
sar
add
aam
add
aad
add
aad
add
push
in
jmp
stos
(bad)
jmp
mov
call
cmps
(bad)
inc
test
inc
jl
inc
jge
dec
test
jmp
nop
cmc
call
stos
(bad)
jmp
mov
jmp
sar
push
(bad)
call
jmp
push
(bad)
(bad)
jmp
mov
call
stos
(bad)
jmp
(bad)
idiv
push
outs
in
inc
jle
inc
ja
dec
xchg
(bad)
call
scas
(bad)
jmp
mov
call
xchg
cmc
dec
jg
inc
cmps
(bad)
call
mov
loop
add
sar
add
loopne
add
inc
pop
(bad)
push
mov
inc
loopne
add
ret
inc
sbb
inc
sbb
int
add
iret
inc
and
inc
and
inc
and
inc
and
inc
and
inc
sub
dec
int3
jmp
inc
into
(bad)
cmp
inc
sar
xor
call
cmp
call
cmp
jmp
dec
sar
xor
dec
out
pop
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
sbb
add
sbb
add
add
pop
es
test
push
push
aam
and
aam
sbb
inc
sar
(bad)
sar
or
sar
add
sar
add
int
add
retf
inc
pop
(bad)
dec
xor
push
push
sar
inc
arpl
(bad)
aas
pop
(bad)
push
push
sar
sbb
jnp
call
mov
inc
push
hlt
inc
es
inc
es
add
sar
add
sar
or
inc
xor
inc
sub
inc
sub
inc
and
call
std
call
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
inc
mov
inc
jnp
dec
xchg
(bad)
dec
(bad)
jmp
mov
(bad)
dec
(bad)
call
icebp
(bad)
call
out
jmp
ret
(bad)
call
mov
push
mov
jmp
mov
inc
mov
jmp
test
(bad)
dec
(bad)
jmp
sar
daa
mov
(bad)
call
test
push
mov
(bad)
jmp
mov
call
(bad)
jmp
(bad)
idiv
push
cmp
out
add
inc
imul
jmp
popf
(bad)
dec
out
add
leave
inc
sbb
inc
pop
int
add
iret
inc
and
inc
and
inc
and
inc
and
inc
and
int3
inc
cs
call
dec
iret
(bad)
ds
sar
ds
sar
sub
call
cmp
call
inc
iret
jmp
push
aam
inc
(bad)
fdivr
push
jae
cld
adc
add
add
sbb
add
adc
add
add
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
sbb
add
adc
sbb
sti
ds
push
pop
xlat
jmp
push
aad
and
sbb
call
inc
aam
or
sar
add
xor
inc
sub
inc
and
leave
jmp
iret
(bad)
ds
aad
inc
popa
(bad)
push
pop
aad
and
(bad)
cmp
fcos
sub
cld
dec
(bad)
(bad)
inc
data16
inc
xlat
inc
es
add
sar
and
call
js
inc
inc
sti
inc
cs
add
aad
add
(bad)
push
mov
call
mov
inc
(bad)
dec
idiv
jmp
(bad)
inc
mov
inc
ret
(bad)
jmp
aam
call
repz
call
icebp
(bad)
call
in
jmp
sar
inc
(bad)
(bad)
push
lods
(bad)
inc
mov
jmp
scas
(bad)
inc
hlt
(bad)
dec
aad
jmp
(bad)
(bad)
jmp
(bad)
call
cmps
(bad)
push
mov
(bad)
jmp
(bad)
jmp
ret
(bad)
jmp
(bad)
call
scas
(bad)
call
imul
inc
pop
(bad)
inc
jae
dec
xchg
(bad)
call
mov
(bad)
dec
dec
into
inc
sbb
inc
and
inc
and
inc
and
sar
add
into
inc
sub
inc
sub
dec
xor
call
inc
into
push
sar
aas
pop
sar
aaa
push
sar
push
inc
int3
call
inc
into
jmp
dec
aam
cmp
dec
jecxz
pop
jns
lock
and
add
add
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
outs
aad
dec
outs
jecxz
cmp
(bad)
xor
jmp
push
xlat
jmp
dec
(bad)
call
inc
aad
push
ds
or
sar
add
sar
add
iret
inc
sub
inc
and
call
cmp
push
aad
cmp
sub
jmp
dec
sar
cmp
inc
cmp
sbb
(bad)
inc
cmp
inc
and
dec
inc
(bad)
xor
(bad)
inc
push
std
inc
aas
icebp
inc
daa
(bad)
dec
push
loop
daa
movs
(bad)
call
mov
jmp
ret
(bad)
(bad)
jge
(bad)
call
icebp
(bad)
call
jecxz
jmp
test
inc
(bad)
inc
(bad)
call
repz
call
repnz
call
call
(bad)
jmp
(bad)
cmp
(bad)
push
mov
call
test
(bad)
call
lock
dec
out
(bad)
(bad)
ds
jmp
(bad)
push
mov
dec
cmc
inc
icebp
(bad)
dec
(bad)
jmp
(bad)
jmp
mov
cld
call
fwait
(bad)
inc
jne
call
mov
(bad)
call
test
call
cdq
(bad)
inc
lock
iret
inc
sbb
sar
add
sar
add
sar
add
iret
inc
sub
inc
xor
call
cmp
sar
cmp
(bad)
ds
sar
sub
call
dec
sar
aaa
pop
fdivr
dec
push
jmp
rol
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
pop
stos
mov
jp
inc
fdivr
aaa
pop
(bad)
cs
(bad)
and
fdivr
sbb
call
inc
(bad)
dec
cmp
inc
sar
add
sar
add
inc
es
add
int3
jmp
dec
sar
ss
aad
cmp
push
push
aad
and
sar
cmp
inc
jno
dec
xchg
(bad)
call
mov
jmp
mov
out
inc
sub
jmp
xor
sbb
(bad)
inc
(bad)
std
inc
dec
sti
inc
dec
jmp
sbb
(bad)
jmp
mov
(bad)
call
icebp
(bad)
call
cmc
(bad)
call
out
sub
(bad)
jmp
repz
jmp
repz
jmp
jle
dec
retf
push
enter
call
(bad)
call
icebp
(bad)
call
repnz
inc
sar
dec
(bad)
out
add
out
inc
lock
(bad)
cmp
(bad)
jmp
sar
es
(bad)
jmp
jmp
(bad)
call
stos
(bad)
jmp
ret
es
(bad)
call
mov
(bad)
cmp
inc
das
sar
add
sar
add
aam
add
aam
add
sar
add
sar
add
sar
add
dec
ss
call
inc
iret
push
push
sar
ds
sar
xor
dec
iret
jmp
dec
sar
xor
fdivr
inc
data16
push
je
push
repnz
xchg
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
pusha
pop
popa
xor
dec
jo
(bad)
aas
gs
xor
jmp
push
(bad)
push
dec
fdivr
adc
aas
(bad)
inc
xor
inc
xor
inc
sub
inc
and
into
jmp
dec
sar
xor
push
push
aad
and
pop
fcos
or
jbe
call
stos
(bad)
jmp
sar
(bad)
out
(bad)
push
popf
clc
jmp
jne
jmp
stos
(bad)
jmp
mov
jmp
mov
(bad)
inc
push
sti
inc
jb
(bad)
cmp
(bad)
push
retf
(bad)
lock
call
repnz
call
(bad)
(bad)
cmp
aad
add
out
jmp
std
(bad)
jmp
std
(bad)
push
idiv
add
fdivrp
add
fdivr
add
(bad)
aaa
mov
call
(bad)
(bad)
call
repnz
call
icebp
(bad)
call
out
(bad)
call
gs
add
fcos
add
(bad)
add
fcos
and
repz
jmp
(bad)
jmp
enter
retf
(bad)
jmp
jmp
(bad)
jmp
(bad)
dec
(bad)
jmp
retf
(bad)
jmp
(bad)
(bad)
jmp
mov
(bad)
dec
ja
jmp
callw
sub
inc
es
add
aam
add
aam
add
aam
add
sar
add
sar
add
sar
add
iret
call
iret
jmp
dec
sar
cmp
(bad)
cmp
jmp
dec
sar
and
push
push
xlat
inc
fdivr
push
jb
jmp
(bad)
jnp
repz
push
es
inc
add
add
add
add
add
add
add
add
add
add
add
add
pop
jle
loopne
jp
dec
fdivrp
cmp
jmp
pop
(bad)
and
call
dec
fcos
adc
dec
cmp
inc
ss
add
aam
add
sar
add
iret
inc
sub
call
inc
sar
sub
jmp
push
aam
sub
jmp
dec
aam
sbb
inc
pop
(bad)
inc
mov
call
fdivr
jmp
(bad)
dec
(bad)
push
mov
(bad)
push
enter
in
(bad)
push
mov
(bad)
inc
(bad)
jmp
jecxz
call
repnz
call
(bad)
(bad)
jmp
inc
sub
inc
xor
inc
ss
add
fdivr
push
(bad)
out
test
cli
(bad)
mov
idiv
call
xor
inc
cmp
inc
ss
add
dec
push
in
outs
shl
scas
(bad)
(bad)
jmp
repnz
jmp
jmp
call
sub
inc
ss
add
fdivr
add
inc
sub
call
jo
(bad)
jnp
(bad)
call
push
sar
jmp
(bad)
jmp
(bad)
jmp
(bad)
call
(bad)
call
(bad)
push
sar
jmp
ret
(bad)
call
mov
inc
jle
inc
pop
std
call
loop
add
sar
add
aam
add
aam
add
aam
add
aam
add
sar
add
sar
add
iret
dec
cmp
call
inc
sar
xor
(bad)
cmp
push
push
sar
and
jmp
push
(bad)
(bad)
cmp
outs
loopne
pop
jl
push
jmp
add
push
inc
push
fwait
and
std
dec
jno
inc
fdivr
xor
jmp
push
(bad)
sbb
fcos
adc
or
(bad)
inc
aaa
aad
add
aam
add
sar
add
sar
add
into
inc
xor
call
dec
sar
sub
jmp
push
aam
and
call
push
fdivrp
add
inc
data16
dec
xchg
(bad)
push
in
(bad)
jmp
(bad)
jmp
(bad)
inc
(bad)
ds
(bad)
jmp
(bad)
(bad)
jmp
(bad)
dec
icebp
(bad)
dec
cmps
cld
call
(bad)
call
repnz
jmp
sti
(bad)
dec
fdivrp
add
(bad)
add
(bad)
add
(bad)
add
inc
ss
add
call
repz
repz
xor
loope
add
inc
cmp
inc
cmp
inc
xor
inc
xor
out
call
(bad)
(bad)
call
arpl
inc
sub
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
aaa
(bad)
add
(bad)
or
fdivrp
jmp
(bad)
push
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
call
call
push
mov
(bad)
inc
pop
(bad)
inc
aas
cmc
inc
cmp
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
xor
call
inc
sar
daa
dec
sar
xor
push
sar
es
sar
es
aad
aaa
pop
(bad)
dec
ins
fdivrp
pop
js
jmp
jecxz
jge
in
inc
add
add
mov
arpl
loope
inc
ins
(bad)
aaa
(bad)
fdivr
sub
(bad)
pop
dec
(bad)
push
dec
fcos
or
cmp
inc
ss
inc
xor
inc
cs
add
sar
add
iret
dec
cmp
call
dec
aam
and
and
sbb
add
inc
push
(bad)
inc
jo
call
call
(bad)
push
(bad)
push
(bad)
call
(bad)
inc
(bad)
call
(bad)
dec
idiv
(bad)
jl
cld
inc
dec
loop
add
call
idiv
stos
(bad)
(bad)
jmp
idiv
jmp
fs
add
(bad)
add
fdivr
add
fdivr
add
loopne
add
loop
add
inc
aas
jecxz
add
jecxz
add
inc
aas
jecxz
add
loop
add
loop
add
loop
add
loop
add
inc
xor
inc
push
out
pop
scas
hlt
call
xor
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
das
fdivr
add
jmp
cld
(bad)
jnp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
call
(bad)
call
(bad)
call
(bad)
jmp
(bad)
(bad)
dec
push
inc
cmp
out
inc
das
fcos
add
aad
add
aad
add
aad
add
aam
add
sar
add
sar
add
sar
or
sar
push
inc
sar
cs
sar
xor
jmp
dec
sar
and
aad
xor
inc
(bad)
push
jne
jmp
jecxz
je
out
sbb
or
imul
std
dec
jb
(bad)
ds
xor
and
dec
(bad)
cmovae
dec
xlat
inc
cmp
inc
xor
inc
das
aam
add
inc
sub
inc
sub
dec
dec
aam
sbb
inc
aam
(bad)
sar
add
inc
pop
(bad)
inc
jbe
inc
jmp
(bad)
jmp
xchg
out
call
sti
inc
(bad)
call
(bad)
inc
(bad)
dec
(bad)
out
add
fdivrp
add
loopne
add
loope
cmp
(bad)
(bad)
mov
(bad)
lock
das
(bad)
add
fdivrp
add
(bad)
add
inc
ds
add
inc
inc
in
add
inc
inc
in
add
inc
inc
in
add
inc
inc
in
add
inc
inc
in
add
inc
inc
in
add
inc
cmp
inc
ss
add
loop
add
jecxz
add
loop
add
loop
add
loop
add
loop
add
loop
add
loope
add
fdivrp
add
call
clc
(bad)
jnp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
call
cld
inc
cli
call
(bad)
call
lods
(bad)
inc
je
inc
inc
idiv
add
repz
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
xor
sar
es
sar
xor
jmp
push
sar
and
jmp
push
fdivr
ds
dec
loopne
popa
jle
push
in
adc
ins
data16
punpcklwd
loope
inc
ins
(bad)
ss
fdivr
sub
call
push
(bad)
adc
dec
inc
fdivr
add
xlat
inc
ss
inc
xor
inc
cs
add
inc
sub
inc
xor
dec
inc
aam
sbb
call
inc
sar
adc
dec
cmp
inc
inc
jmp
add
call
sahf
(bad)
push
(bad)
jmp
mov
inc
and
inc
inc
fdivrp
cmp
(bad)
dec
repz
call
in
inc
xor
inc
ds
add
loop
add
loope
adc
dec
inc
ds
add
inc
cmp
inc
cmp
inc
ds
add
inc
inc
in
add
add
add
add
add
add
add
inc
inc
out
add
inc
inc
in
add
inc
inc
in
add
inc
inc
in
add
inc
inc
in
add
inc
inc
jecxz
add
inc
inc
in
add
inc
inc
in
add
jecxz
add
inc
aas
loop
add
loopne
add
dec
idiv
ja
(bad)
jmp
(bad)
jmp
(bad)
push
push
loopne
pop
out
(bad)
inc
(bad)
inc
test
inc
dec
clc
inc
xor
inc
sub
inc
cs
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
xor
dec
cmp
call
dec
sar
sub
jmp
dec
aam
daa
push
xlat
push
pop
(bad)
dec
outs
loopne
pop
jp
jmp
in
jl
out
mov
mov
fs
pop
pop
jge
std
dec
jb
std
ds
das
pop
fdivr
and
fdivr
sbb
dec
fcos
add
cmp
inc
xor
inc
xor
inc
cs
add
inc
xor
inc
cmp
dec
inc
aam
adc
cmovae
dec
aas
aad
add
aad
add
inc
outs
(bad)
call
(bad)
dec
clc
inc
xor
inc
xor
inc
xor
inc
cs
or
pop
mov
(bad)
(bad)
aas
popf
repnz
xor
inc
aas
loop
add
inc
inc
jecxz
add
inc
inc
in
add
loop
add
inc
inc
loop
add
loope
add
loopne
add
inc
inc
in
add
inc
inc
out
add
inc
inc
out
add
inc
inc
out
add
inc
inc
call
inc
inc
call
inc
dec
out
add
inc
dec
out
add
inc
inc
out
add
inc
inc
out
add
add
add
add
inc
inc
out
add
inc
inc
in
add
inc
inc
jecxz
add
inc
inc
jecxz
lods
cmc
push
(bad)
jmp
(bad)
call
jne
inc
sbb
lock
(bad)
push
int3
(bad)
inc
push
clc
inc
das
lock
xor
inc
xor
inc
das
fdivr
add
inc
sub
inc
sub
inc
sub
inc
sub
inc
das
sar
add
iret
call
sar
and
jmp
dec
sar
and
jmp
dec
xlat
push
pop
(bad)
inc
imul
jmp
in
ja
out
xchg
out
fs
mov
inc
outs
loopne
ss
fdivrp
sub
(bad)
sbb
dec
(bad)
or
inc
cmp
inc
xlat
inc
xor
inc
xor
inc
cs
add
inc
xor
inc
aad
or
aad
or
inc
aad
add
inc
aaa
(bad)
inc
ss
sub
(bad)
inc
push
jecxz
add
fdivr
add
fdivrp
add
loopne
add
loope
add
loop
adc
jmp
aas
jecxz
add
inc
inc
in
add
inc
inc
out
add
add
inc
inc
in
add
inc
inc
in
add
loop
add
inc
inc
jecxz
add
inc
inc
call
inc
dec
jmp
inc
dec
jmp
inc
dec
jmp
inc
dec
jmp
inc
dec
jmp
inc
dec
jmp
inc
dec
jmp
inc
dec
jmp
inc
dec
jmp
inc
dec
jmp
inc
inc
out
add
inc
inc
out
add
inc
inc
out
add
inc
inc
in
add
repz
(bad)
inc
dec
loope
add
inc
cmp
cld
call
(bad)
jmp
mov
inc
cmp
inc
xor
inc
xor
inc
xor
inc
das
fdivr
add
xlat
inc
sub
inc
sub
inc
sub
inc
cs
add
sar
or
iret
call
inc
sar
and
jmp
dec
(bad)
call
dec
xlat
jmp
(bad)
aas
gs
push
jae
jmp
in
je
out
sbb
lods
arpl
and
and
dec
jbe
cld
inc
imul
(bad)
and
sbb
or
fcos
add
fcos
add
fdivr
add
inc
xor
inc
das
aad
add
aad
add
aam
add
aad
or
aad
or
aad
add
(bad)
inc
cmp
inc
xlat
inc
xor
push
mov
jmp
in
inc
cs
add
fdivrp
add
loopne
add
loop
add
inc
inc
jecxz
add
loop
add
inc
inc
in
add
add
inc
inc
out
add
inc
inc
call
inc
inc
out
add
inc
inc
in
add
inc
inc
loope
add
inc
inc
out
add
inc
dec
jmp
dec
jmp
dec
jmp
add
add
inc
dec
jmp
dec
jmp
add
add
add
add
add
add
add
inc
dec
jmp
dec
jmp
dec
jmp
inc
dec
jmp
inc
dec
call
inc
dec
out
add
inc
inc
in
or
inc
ds
add
(bad)
add
aad
pcmpeqd
call
(bad)
dec
(bad)
inc
pop
icebp
inc
sub
inc
xor
inc
xor
inc
xor
inc
xor
inc
xlat
inc
sub
inc
sub
inc
sub
inc
xor
inc
ss
dec
cmp
sar
sbb
dec
xlat
jmp
push
(bad)
cmp
dec
loopne
pop
jge
jmp
out
jg
call
repnz
mov
add
addr16
ins
pop
jge
sti
dec
jno
std
cmp
(bad)
sub
(bad)
sbb
dec
(bad)
or
inc
cmp
inc
ss
add
xlat
inc
xor
inc
das
(bad)
inc
cs
add
aad
add
(bad)
inc
aam
add
aad
add
inc
cmp
inc
xor
out
dec
je
inc
ds
add
(bad)
add
loope
add
loop
add
inc
inc
jecxz
add
inc
inc
in
add
add
inc
inc
out
add
inc
dec
out
add
inc
dec
call
inc
dec
call
inc
inc
out
add
inc
inc
loop
add
inc
dec
call
inc
dec
jmp
add
inc
dec
jmp
add
inc
dec
jmp
add
inc
dec
jmp
add
inc
dec
in
inc
dec
in
inc
dec
in
inc
dec
in
inc
dec
in
inc
dec
in
inc
dec
in
inc
dec
in
inc
dec
jmp
add
inc
dec
jmp
add
inc
dec
jmp
add
inc
dec
jmp
dec
jmp
dec
jmp
inc
dec
out
add
inc
ds
add
loopne
add
(bad)
add
inc
xor
push
out
(bad)
inc
push
out
inc
xor
inc
xor
(bad)
add
fdivr
add
fdivr
add
fdivr
add
inc
sub
inc
sub
inc
das
sar
add
iret
inc
cmp
call
ds
pop
inc
aad
sbb
jmp
fcos
xor
(bad)
inc
imul
pop
jnp
jmp
in
jl
call
call
add
add
in
push
jl
cld
inc
outs
loope
xor
(bad)
daa
pop
fdivrp
sbb
dec
inc
(bad)
add
fcos
add
xlat
inc
xor
inc
das
(bad)
inc
das
(bad)
inc
xor
inc
cmp
inc
cmp
(bad)
inc
cmp
fdivr
add
fcos
add
fcos
add
inc
cmp
inc
cmp
inc
ds
add
inc
inc
jecxz
add
inc
inc
in
add
add
inc
inc
out
add
inc
dec
call
inc
inc
jmp
inc
dec
jmp
dec
jmp
dec
jmp
inc
inc
in
add
inc
dec
call
inc
dec
jmp
add
inc
push
out
inc
push
out
inc
push
out
inc
push
out
inc
push
out
inc
push
out
inc
push
out
inc
push
out
inc
push
out
inc
push
out
inc
push
out
inc
push
out
inc
push
out
inc
push
out
inc
push
out
inc
push
out
inc
push
out
inc
push
out
inc
push
out
inc
push
out
inc
push
out
inc
push
out
inc
dec
in
dec
out
dec
arpl
inc
dec
jmp
add
inc
dec
jmp
dec
out
add
inc
ds
add
(bad)
add
fdivr
add
inc
(bad)
inc
dec
jmp
add
(bad)
add
fdivr
add
inc
xor
inc
xor
inc
das
fdivr
add
inc
sub
inc
cs
add
sar
add
sar
adc
aam
pop
inc
xlat
call
dec
fcos
das
pop
(bad)
inc
push
jecxz
push
xchg
call
call
add
add
aam
popa
and
push
jns
cld
inc
ins
loopne
xor
(bad)
and
call
fdivr
or
add
(bad)
add
fcos
add
inc
xor
inc
xor
inc
xor
inc
xor
inc
xor
fdivr
add
inc
cmp
inc
cmp
fcos
add
(bad)
add
fdivr
add
loopne
add
fdivrp
add
loope
add
loop
add
inc
inc
in
add
add
inc
inc
call
inc
dec
call
inc
inc
jmp
inc
push
jmp
dec
jmp
dec
jmp
add
inc
dec
jmp
inc
dec
out
add
inc
dec
jmp
inc
push
in
inc
push
out
inc
push
out
inc
push
out
inc
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
out
jmp
(bad)
sti
jmp
xchg
inc
dec
in
inc
push
in
inc
dec
jmp
inc
in
add
loope
add
inc
cmp
inc
xor
dec
jne
inc
inc
jmp
cmp
inc
cmp
inc
ss
add
inc
xor
inc
xor
inc
xlat
inc
sub
inc
sub
inc
das
sar
add
iret
inc
xor
sar
adc
call
fcos
sub
(bad)
cmp
jne
jmp
push
call
call
stos
aam
push
and
(bad)
cmp
loopne
sub
sbb
dec
fdivr
pop
inc
(bad)
add
fcos
add
inc
xor
inc
xor
inc
xor
inc
xor
inc
aaa
fdivr
add
fcos
add
inc
cmp
inc
cmp
(bad)
add
fdivr
add
fdivr
add
(bad)
add
loopne
add
loope
add
inc
inc
in
add
inc
dec
out
add
inc
dec
jmp
inc
dec
jmp
pop
in
call
idiv
pop
mov
hlt
jmp
je
inc
push
in
inc
dec
jmp
add
inc
dec
jmp
dec
call
inc
dec
jmp
push
out
inc
push
lock
push
lock
push
icebp
inc
push
icebp
inc
pop
icebp
inc
pop
icebp
inc
pop
icebp
inc
pop
icebp
inc
pop
icebp
inc
pop
icebp
inc
pop
icebp
inc
pop
icebp
inc
pop
icebp
inc
pop
icebp
inc
pop
repnz
pop
icebp
inc
pop
icebp
inc
pop
icebp
inc
pop
icebp
inc
pop
icebp
inc
pop
icebp
inc
fs
(bad)
ds
idiv
cs
(bad)
call
xchg
call
xchg
(bad)
jmp
mov
inc
(bad)
lock
push
out
inc
push
in
inc
dec
jmp
inc
jecxz
add
loopne
add
inc
aaa
loope
add
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
ss
add
fcos
add
xlat
inc
cs
inc
sub
inc
cs
add
sar
add
sar
add
sar
or
aad
sbb
jmp
push
(bad)
cmp
dec
loop
popa
and
inc
in
call
add
add
in
pop
jle
cld
dec
jb
(bad)
aaa
gs
daa
pop
fdivr
sbb
dec
inc
(bad)
add
fcos
add
fcos
add
fdivr
add
fdivr
add
fdivr
add
fdivr
add
inc
cmp
inc
cmp
inc
cmp
fcos
add
inc
cmp
inc
cmp
inc
cmp
inc
cmp
loope
add
inc
inc
in
add
inc
dec
out
add
inc
dec
jmp
inc
dec
jmp
outs
out
call
sti
call
(bad)
(bad)
dec
js
call
jnp
inc
std
call
clc
jmp
xor
add
inc
dec
jmp
add
inc
dec
jmp
inc
push
in
inc
push
out
inc
push
lock
push
icebp
inc
pop
repnz
pop
icebp
inc
pop
repnz
pop
repnz
pop
repnz
pop
repnz
pop
repz
pop
repz
pop
repz
pop
repz
pop
repz
pop
repz
pop
repz
pop
repnz
pop
repnz
pop
repnz
pop
repz
pop
repz
pop
bnd
jbe
dec
cli
jmp
(bad)
inc
stos
(bad)
push
scas
(bad)
call
pushf
(bad)
jmp
mov
inc
pop
lock
push
out
inc
push
in
inc
dec
jmp
inc
inc
loop
add
fdivrp
add
(bad)
add
loopne
add
loope
add
loop
add
loope
add
inc
cmp
inc
aaa
(bad)
add
(bad)
add
inc
xor
inc
das
xlat
inc
sub
inc
sub
inc
cs
add
sar
add
sar
or
jmp
push
(bad)
xor
(bad)
dec
outs
loope
pop
jg
push
out
sbb
call
add
add
out
push
jge
std
inc
jno
(bad)
xor
pop
loopne
pop
push
(bad)
or
inc
inc
(bad)
add
(bad)
add
(bad)
add
fcos
add
fcos
add
fcos
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
inc
aas
loope
add
inc
inc
in
add
inc
dec
call
inc
dec
jmp
dec
jmp
add
jmp
jl
call
std
call
call
and
jl
inc
outs
(bad)
dec
(bad)
push
mov
dec
idiv
push
jno
inc
push
in
inc
dec
jmp
push
out
inc
push
lock
pop
icebp
inc
pop
repnz
pop
repz
pop
repz
pop
hlt
inc
pop
hlt
inc
pop
hlt
inc
pop
hlt
inc
popa
hlt
inc
pop
hlt
inc
pop
hlt
inc
popa
hlt
inc
popa
hlt
inc
popa
hlt
inc
popa
hlt
inc
pop
hlt
inc
popa
cmc
inc
arpl
inc
arpl
inc
data16
jmp
mov
dec
std
call
test
call
mov
(bad)
(bad)
cmp
(bad)
jmp
scas
(bad)
jmp
mov
clc
inc
pop
lock
push
out
inc
dec
jmp
add
inc
inc
in
add
inc
inc
loopne
add
inc
inc
jecxz
add
inc
inc
in
add
loope
add
inc
cmp
inc
cmp
inc
ss
add
inc
xor
inc
cs
inc
sub
inc
cs
add
sar
add
aam
add
aam
cmovae
jmp
push
(bad)
xor
inc
call
in
outs
mov
inc
test
call
add
add
inc
mov
rcl
in
inc
outs
loope
xor
jmp
pop
loopne
adc
(bad)
or
inc
aas
(bad)
add
(bad)
add
(bad)
add
inc
xor
inc
xor
inc
xor
(bad)
add
fdivr
add
(bad)
add
(bad)
add
(bad)
add
loopne
add
inc
inc
in
add
inc
dec
call
inc
dec
jmp
push
in
inc
dec
jmp
xor
(bad)
call
mov
(bad)
push
mov
(bad)
jmp
movs
(bad)
jmp
xchg
(bad)
jmp
nop
(bad)
call
jg
call
jne
(bad)
aas
(bad)
cld
(bad)
cmp
inc
push
jmp
add
inc
pop
icebp
inc
pop
repnz
pop
repz
pop
hlt
inc
popa
hlt
inc
popa
cmc
inc
(bad)
cmc
inc
arpl
inc
fs
add
add
add
add
add
inc
fs
add
add
add
inc
addr16
inc
outs
idiv
aaa
xchg
cli
inc
(bad)
jmp
mov
jmp
cwde
(bad)
inc
(bad)
dec
jmp
(bad)
push
ret
sub
(bad)
jmp
xor
add
inc
push
in
inc
dec
jmp
inc
inc
jecxz
add
inc
inc
jecxz
add
inc
inc
in
add
inc
inc
loop
add
loope
add
inc
cmp
inc
aaa
fdivr
add
fcos
add
xlat
inc
sub
inc
cs
add
sar
add
sar
add
aam
or
xlat
call
dec
(bad)
sub
(bad)
inc
push
call
in
imul
dec
mov
retf
add
arpl
out
push
jp
std
inc
outs
jecxz
xor
call
push
fdivrp
adc
pop
inc
fdivr
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
fdivr
add
(bad)
add
(bad)
add
(bad)
add
fdivr
add
fdivrp
add
fdivrp
add
inc
inc
jecxz
add
inc
dec
call
inc
dec
jmp
push
out
inc
push
out
push
test
inc
(bad)
call
mov
(bad)
(bad)
cmp
(bad)
inc
(bad)
jmp
push
(bad)
dec
(bad)
inc
(bad)
cmp
call
sbb
jmp
cli
jmp
jge
dec
repnz
repnz
pop
repz
popa
hlt
inc
arpl
inc
fs
inc
gs
inc
data16
add
inc
addr16
add
inc
push
idiv
add
inc
addr16
add
inc
push
idiv
add
dec
jnp
(bad)
ds
sti
push
xchg
(bad)
(bad)
aas
stos
(bad)
jmp
(bad)
jmp
idiv
jmp
out
dec
(bad)
push
sar
and
mov
hlt
inc
push
out
inc
push
jmp
add
add
inc
inc
loop
add
add
inc
inc
out
add
inc
inc
in
add
loop
add
loope
add
inc
cmp
inc
ss
add
inc
xor
inc
cs
add
sar
add
sar
add
sar
add
aad
or
xlat
call
dec
(bad)
sub
(bad)
ds
in
imul
jmp
popf
mov
call
imul
in
ds
jecxz
cs
loope
sbb
loopne
push
dec
(bad)
add
aas
fdivr
add
(bad)
add
(bad)
add
(bad)
add
fdivr
add
fdivr
add
inc
aas
fdivrp
add
(bad)
add
fdivr
add
fdivrp
add
loopne
add
loope
add
inc
inc
in
add
inc
dec
jmp
inc
push
in
inc
push
out
inc
push
out
jmp
xor
call
mov
(bad)
(bad)
aas
enter
sar
jmp
(bad)
jmp
cli
(bad)
(bad)
mov
call
(bad)
call
(bad)
(bad)
ds
(bad)
jmp
mov
inc
(bad)
inc
pop
(bad)
inc
popa
idiv
add
inc
arpl
inc
data16
add
inc
imul
inc
imul
add
inc
ins
clc
inc
ins
clc
inc
ins
clc
inc
imul
add
inc
ins
clc
inc
outs
clc
inc
outs
clc
dec
cli
push
xchg
jmp
xchg
(bad)
dec
(bad)
inc
idiv
jmp
repz
jmp
hlt
(bad)
push
(bad)
inc
(bad)
push
(bad)
jmp
stos
(bad)
jmp
std
inc
push
out
inc
dec
jmp
dec
in
add
inc
dec
call
inc
inc
out
add
add
inc
inc
loop
add
loopne
add
(bad)
add
fcos
add
xlat
inc
cs
add
aad
add
aad
add
(bad)
inc
xlat
call
dec
(bad)
sub
(bad)
cmp
call
in
xchg
(bad)
jnp
jmp
call
mov
sub
add
add
out
popa
xchg
dec
out
cmp
jecxz
sub
call
push
loopne
or
inc
(bad)
add
fdivr
add
(bad)
add
fdivr
add
fdivr
add
fdivr
add
(bad)
add
fdivrp
add
fdivrp
add
(bad)
add
inc
aas
loopne
add
inc
inc
loop
add
add
inc
dec
call
inc
push
in
inc
push
out
inc
push
out
call
jp
dec
(bad)
call
(bad)
jmp
mov
(bad)
aas
leave
(bad)
dec
push
(bad)
push
idiv
inc
idiv
dec
clc
(bad)
call
cld
(bad)
call
cld
(bad)
(bad)
mov
aam
inc
jmp
xchg
(bad)
inc
dec
(bad)
inc
aaa
sti
inc
cmp
idiv
add
inc
imul
add
inc
outs
cli
inc
outs
cli
inc
jo
inc
jo
inc
jno
inc
jno
inc
jno
inc
jo
inc
jo
inc
jb
inc
jnp
call
jge
call
(bad)
jmp
xchg
(bad)
call
(bad)
call
clc
(bad)
push
hlt
(bad)
jmp
repz
call
repz
jmp
(bad)
(bad)
cmp
mov
(bad)
jmp
nop
cli
inc
pop
out
inc
push
in
inc
dec
jmp
inc
dec
call
inc
dec
call
inc
inc
out
add
inc
inc
jecxz
add
loope
add
loopne
add
(bad)
add
fdivr
add
inc
xor
inc
cs
inc
xor
inc
xor
inc
ss
inc
(bad)
and
gs
dec
jne
jmp
(bad)
js
jmp
call
jmp
outs
xchg
out
pop
test
dec
(bad)
cmp
jmp
pop
loope
sbb
or
inc
(bad)
add
inc
cmp
inc
cmp
inc
aaa
(bad)
add
fdivr
add
(bad)
add
loopne
add
fdivrp
add
inc
inc
(bad)
add
inc
inc
loopne
add
inc
inc
loop
add
inc
dec
out
add
inc
push
jmp
add
inc
push
out
dec
outs
repnz
call
call
aas
leave
(bad)
dec
(bad)
push
(bad)
push
idiv
(bad)
mov
idiv
inc
idiv
dec
clc
(bad)
call
clc
(bad)
(bad)
(bad)
(bad)
(bad)
fdivrp
(bad)
push
(bad)
(bad)
jmp
xchg
(bad)
inc
push
inc
pop
idiv
add
inc
push
inc
ins
clc
inc
outs
cli
inc
jo
inc
jb
inc
jae
inc
je
inc
je
inc
jne
inc
jne
inc
jne
inc
je
inc
je
inc
jbe
inc
push
inc
popa
(bad)
call
mov
(bad)
inc
cli
(bad)
push
cmc
(bad)
jmp
hlt
(bad)
jmp
repnz
call
icebp
(bad)
call
(bad)
(bad)
cmp
(bad)
jmp
mov
jmp
movs
(bad)
call
cmc
inc
push
in
inc
push
jmp
dec
call
inc
dec
jmp
inc
dec
out
add
inc
inc
in
add
inc
inc
loope
add
fdivr
add
(bad)
add
fdivr
add
(bad)
inc
xor
inc
xor
inc
ss
inc
ds
adc
jmp
push
(bad)
xor
je
jmp
out
jbe
jmp
call
mov
pop
ins
(bad)
out
pop
test
dec
(bad)
cmp
jmp
pop
loope
sbb
or
fdivrp
add
inc
inc
(bad)
add
fdivr
add
fdivr
add
fdivr
add
inc
aas
loopne
add
inc
inc
loopne
add
inc
inc
fdivrp
add
inc
inc
loope
add
inc
dec
in
add
add
inc
push
in
inc
push
out
inc
arpl
inc
sti
call
mov
jmp
mov
(bad)
cmp
sar
push
(bad)
jmp
idiv
push
idiv
inc
idiv
inc
idiv
dec
clc
(bad)
call
clc
(bad)
call
cli
(bad)
jmp
(bad)
(bad)
(bad)
call
aam
call
xchg
inc
outs
hlt
inc
ins
idiv
add
inc
outs
clc
inc
jo
inc
jb
inc
je
inc
jbe
inc
ja
inc
js
inc
js
inc
js
inc
jp
inc
jp
inc
js
inc
ja
inc
jnp
inc
ja
inc
(bad)
call
(bad)
dec
cld
(bad)
dec
cld
(bad)
(bad)
mov
cmc
(bad)
push
hlt
(bad)
jmp
repz
call
icebp
(bad)
dec
out
(bad)
dec
(bad)
push
sar
and
(bad)
jmp
pushf
std
inc
imul
inc
dec
out
add
inc
dec
jmp
dec
jmp
inc
dec
out
add
inc
inc
in
add
inc
ds
add
inc
xor
inc
xor
inc
xor
inc
xor
inc
xlat
inc
ds
push
inc
fcos
pop
push
fdivr
xor
dec
jecxz
pop
and
je
jmp
call
mov
jb
add
add
out
pop
test
dec
(bad)
cmp
jmp
pop
loop
sbb
dec
dec
fdivrp
add
inc
inc
(bad)
add
fdivr
add
fdivr
add
inc
aas
loopne
add
inc
inc
loope
add
inc
inc
loopne
add
inc
inc
loop
add
add
inc
dec
out
add
inc
push
jmp
add
inc
pop
lock
mov
call
test
call
(bad)
(bad)
inc
(bad)
push
(bad)
jmp
hlt
(bad)
push
cmc
(bad)
(bad)
mov
idiv
inc
idiv
dec
clc
(bad)
call
cld
(bad)
(bad)
fdivr
(bad)
jmp
mov
call
cmc
dec
je
inc
outs
idiv
add
inc
outs
cli
inc
jno
inc
je
inc
jne
inc
ja
inc
jp
inc
jnp
inc
jl
inc
jge
inc
jge
inc
jge
inc
jge
inc
jl
inc
jl
inc
jle
inc
test
dec
mov
push
iret
(bad)
push
cli
(bad)
(bad)
mov
cmc
(bad)
jmp
hlt
(bad)
jmp
repnz
call
(bad)
dec
out
(bad)
cmp
mov
(bad)
jmp
mov
inc
pop
in
inc
push
call
inc
push
jmp
add
inc
dec
jmp
dec
call
inc
inc
in
add
inc
inc
loop
add
fdivr
add
(bad)
add
fdivr
add
xlat
inc
xor
inc
xlat
inc
cmp
fcos
sbb
popa
loopne
inc
jno
call
push
jmp
call
mov
test
add
add
out
pop
xchg
dec
(bad)
cmp
jmp
popa
loop
sbb
dec
(bad)
add
inc
aas
(bad)
add
fdivr
add
fdivrp
add
inc
inc
loope
add
inc
inc
loope
add
inc
inc
fdivrp
add
inc
inc
jecxz
add
inc
dec
call
inc
push
in
inc
push
out
call
jp
jmp
xchg
dec
(bad)
(bad)
push
mov
(bad)
jmp
(bad)
jmp
hlt
(bad)
jmp
hlt
(bad)
push
idiv
inc
idiv
dec
sti
(bad)
dec
sti
(bad)
push
leave
std
(bad)
aas
test
idiv
adc
hlt
inc
jb
inc
outs
idiv
add
inc
jb
inc
jae
inc
jbe
inc
ja
inc
jnp
inc
jge
inc
jg
inc
jg
inc
cmp
inc
cmp
inc
cmp
add
(bad)
inc
test
dec
mov
call
mov
(bad)
push
(bad)
jmp
idiv
jmp
repz
jmp
repnz
call
lock
inc
lock
call
(bad)
push
(bad)
jmp
jne
inc
dec
call
inc
push
jmp
add
add
inc
push
jmp
dec
out
add
inc
inc
jecxz
add
inc
aas
loopne
add
inc
xor
inc
xor
inc
xor
xlat
inc
cmp
fcos
sbb
push
popa
loopne
inc
jo
call
out
jo
call
call
mov
xchg
jo
out
pop
mov
dec
out
cmp
jmp
popa
loop
sbb
dec
fdivrp
add
inc
inc
(bad)
add
(bad)
add
fdivr
add
(bad)
add
inc
inc
loope
add
inc
inc
loop
add
inc
inc
loopne
add
inc
inc
loop
add
inc
dec
out
add
inc
push
jmp
gs
push
sti
inc
(bad)
jmp
scas
(bad)
(bad)
ds
(bad)
call
(bad)
call
repz
jmp
hlt
(bad)
jmp
cmc
(bad)
(bad)
mov
sti
(bad)
jmp
retf
(bad)
dec
cld
push
cmps
cld
jmp
call
add
imul
add
inc
jo
inc
jae
inc
jne
inc
ja
inc
jp
inc
jge
inc
cmp
add
(bad)
inc
cmp
add
inc
test
inc
cmp
add
(bad)
inc
test
inc
mov
dec
(bad)
call
fwait
(bad)
jmp
movs
(bad)
push
lods
(bad)
dec
(bad)
jmp
(bad)
call
cmc
(bad)
jmp
repnz
call
lock
inc
out
(bad)
(bad)
jnp
(bad)
dec
(bad)
jmp
sar
and
sti
inc
pop
jmp
push
in
inc
push
jmp
add
inc
push
in
inc
push
jmp
dec
out
add
inc
inc
jecxz
add
inc
ds
add
fdivr
add
fcos
add
inc
xor
xlat
inc
cmp
fcos
sbb
jmp
pop
loopne
inc
outs
jecxz
pop
and
outs
(bad)
sahf
jmp
xchg
lods
out
jmp
add
add
call
dec
out
cmp
in
sub
call
push
loope
or
loopne
add
inc
inc
fdivrp
add
inc
ds
add
loopne
add
inc
inc
loop
add
add
inc
inc
jecxz
add
add
inc
dec
in
add
inc
dec
call
inc
push
in
inc
pop
out
jmp
xor
or
xchg
(bad)
push
ret
(bad)
dec
(bad)
dec
repz
call
repz
jmp
cmc
(bad)
(bad)
mov
out
(bad)
push
(bad)
inc
std
push
mov
std
call
mov
inc
ja
inc
push
inc
push
idiv
add
inc
je
inc
js
inc
jge
inc
jge
inc
jg
inc
cmp
add
(bad)
inc
test
inc
mov
inc
xchg
inc
xchg
inc
xchg
inc
test
inc
test
inc
xchg
inc
mov
inc
mov
dec
(bad)
call
call
xor
(bad)
inc
jmp
(bad)
dec
hlt
(bad)
call
lock
inc
out
(bad)
(bad)
jl
(bad)
jmp
(bad)
(bad)
cmp
(bad)
jmp
mov
(bad)
call
jle
inc
push
jmp
add
add
inc
pop
out
inc
push
out
inc
push
jmp
add
inc
dec
jmp
inc
dec
out
add
add
inc
cmp
inc
aaa
(bad)
add
fcos
add
xlat
inc
cmp
inc
cmp
(bad)
sbb
jmp
pop
loopne
inc
outs
jecxz
push
jg
jmp
jmp
call
mov
movs
jae
jmp
dec
out
cmp
fs
sbb
dec
dec
loopne
add
add
inc
inc
fdivrp
add
fdivrp
add
inc
inc
loope
add
add
inc
inc
jecxz
add
inc
inc
loop
add
inc
dec
in
add
inc
dec
jmp
inc
push
jmp
or
jmp
jp
inc
ja
jmp
mov
inc
(bad)
push
(bad)
call
(bad)
call
repz
jmp
hlt
(bad)
(bad)
jp
(bad)
inc
std
jmp
mov
cld
call
nop
std
dec
mov
inc
cmp
inc
repnz
repz
imul
inc
jbe
inc
jnp
inc
jg
inc
cmp
inc
test
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
(bad)
(bad)
inc
(bad)
dec
xchg
std
call
popf
(bad)
jmp
mov
(bad)
push
test
std
call
std
jmp
(bad)
(bad)
jg
(bad)
dec
icebp
(bad)
(bad)
jle
(bad)
push
(bad)
push
(bad)
call
(bad)
jmp
sar
and
(bad)
jmp
call
add
add
inc
pop
lock
pop
out
inc
push
out
inc
push
in
inc
push
jmp
dec
out
add
inc
inc
loop
add
fdivr
add
(bad)
add
xlat
inc
cmp
inc
ds
or
call
push
(bad)
sub
(bad)
aas
ins
jecxz
push
jle
jmp
call
call
mov
test
je
jmp
call
out
cmp
gs
sbb
loop
or
dec
loopne
add
inc
inc
fdivrp
add
inc
inc
fdivrp
add
inc
inc
loope
add
add
inc
inc
in
add
inc
dec
loope
add
inc
dec
out
add
add
inc
push
jmp
add
jmp
(bad)
call
ret
(bad)
call
(bad)
dec
lock
call
(bad)
jmp
loopne
inc
(bad)
jmp
pushf
std
jmp
call
adc
cli
inc
mov
inc
mov
inc
jge
inc
ins
cmc
inc
arpl
inc
repnz
imul
add
inc
js
inc
jge
inc
cmp
add
std
inc
mov
inc
(bad)
cld
inc
mov
inc
mov
inc
(bad)
(bad)
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
dec
xchg
(bad)
call
call
movs
(bad)
jmp
mov
std
dec
std
jmp
std
call
(bad)
inc
(bad)
dec
push
inc
out
(bad)
push
(bad)
jmp
(bad)
(bad)
cmp
mov
(bad)
call
jg
inc
pop
out
inc
pop
out
inc
pop
lock
pop
lock
pop
out
inc
pop
out
inc
push
jmp
add
inc
dec
call
inc
inc
loop
add
fdivrp
add
fdivr
add
(bad)
add
xlat
inc
cmp
inc
aas
fcos
or
call
push
fdivr
sub
(bad)
ds
jecxz
push
jge
jmp
call
call
mov
stos
js
jmp
mov
call
(bad)
aas
jae
jmp
addr16
sbb
loop
rsqrtps
inc
loopne
add
add
add
inc
inc
loope
add
add
inc
inc
in
add
inc
dec
in
add
inc
dec
in
add
add
inc
push
jmp
jno
dec
arpl
inc
imul
and
(bad)
(bad)
jle
(bad)
dec
icebp
(bad)
call
jmp
and
cdq
(bad)
call
xchg
std
dec
(bad)
(bad)
dec
mov
inc
cld
inc
test
inc
xchg
inc
xchg
inc
jge
inc
ins
idiv
add
inc
repz
ins
idiv
add
inc
jnp
dec
mov
inc
cld
inc
(bad)
std
call
xchg
cld
call
cwde
std
dec
(bad)
(bad)
inc
(bad)
(bad)
inc
nop
(bad)
inc
mov
inc
mov
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
mov
inc
mov
inc
xchg
(bad)
call
movs
std
dec
(bad)
(bad)
aas
stos
(bad)
push
cmps
(bad)
(bad)
cmp
cld
call
std
push
(bad)
jmp
(bad)
(bad)
cmp
cdq
(bad)
call
fwait
(bad)
inc
(bad)
push
(bad)
push
(bad)
jmp
(bad)
call
(bad)
jmp
mov
(bad)
dec
jge
inc
repnz
pop
lock
popa
icebp
inc
popa
repnz
pop
icebp
inc
pop
out
inc
pop
in
inc
push
jmp
add
inc
dec
call
inc
inc
loopne
add
(bad)
add
fcos
add
inc
inc
(bad)
or
call
push
(bad)
sub
(bad)
outs
jecxz
push
jge
jmp
call
dec
mov
movs
jnp
out
movs
push
jmp
jbe
push
imul
call
push
loop
add
dec
loope
add
inc
inc
loope
add
inc
inc
loop
add
inc
dec
jecxz
add
inc
dec
in
add
inc
dec
jecxz
add
inc
dec
call
inc
push
jmp
add
call
outs
idiv
add
dec
cmp
sub
(bad)
jmp
(bad)
inc
repnz
dec
(bad)
jmp
movs
(bad)
call
xchg
(bad)
call
xchg
(bad)
dec
xchg
std
dec
(bad)
std
inc
mov
inc
xchg
inc
test
inc
mov
inc
mov
inc
mov
inc
jg
inc
ins
idiv
add
inc
repz
outs
idiv
add
pop
xor
cmp
cld
call
cld
call
cwde
std
jmp
mov
(bad)
call
pushf
cld
dec
xchg
std
inc
xchg
(bad)
inc
xchg
(bad)
inc
(bad)
dec
xchg
(bad)
dec
xchg
std
dec
xchg
std
inc
xchg
(bad)
dec
xchg
(bad)
call
cdq
(bad)
jmp
mov
(bad)
jmp
(bad)
call
std
dec
(bad)
call
push
std
inc
mov
(bad)
call
nop
(bad)
inc
mov
call
std
jmp
(bad)
jmp
(bad)
(bad)
cmp
(bad)
call
fwait
(bad)
inc
jae
dec
imul
add
inc
repz
repz
(bad)
icebp
inc
pop
out
inc
pop
in
inc
push
jmp
add
inc
dec
in
add
inc
ds
add
fdivr
add
inc
cmp
(bad)
or
call
push
fdivrp
sub
(bad)
cmp
jge
jmp
jmp
dec
mov
popf
jle
in
cdq
outs
xchg
jmp
pop
xchg
inc
out
xor
jmp
popa
in
adc
dec
push
loop
add
add
inc
inc
loope
add
inc
inc
jecxz
add
inc
dec
jecxz
add
inc
dec
out
add
inc
dec
jecxz
add
inc
dec
call
inc
push
jmp
or
icebp
inc
dec
clc
inc
pop
(bad)
call
xchg
(bad)
dec
(bad)
(bad)
jnp
(bad)
inc
(bad)
push
xchg
(bad)
call
xchg
(bad)
dec
xchg
(bad)
dec
nop
(bad)
inc
(bad)
(bad)
inc
mov
inc
xchg
inc
test
inc
mov
dec
mov
call
xchg
std
dec
std
inc
cmp
add
inc
fs
inc
repz
outs
idiv
add
call
mov
call
cld
(bad)
ds
push
movs
std
inc
std
call
std
push
pushf
cld
call
(bad)
call
call
sbb
(bad)
call
cdq
(bad)
call
pushf
(bad)
jmp
mov
sti
jmp
(bad)
(bad)
js
(bad)
jmp
std
jmp
(bad)
jmp
cld
dec
into
(bad)
push
(bad)
push
xchg
cld
inc
mov
inc
mov
inc
cmp
add
call
xchg
sti
dec
(bad)
call
(bad)
call
fwait
(bad)
inc
je
inc
pop
(bad)
inc
idiv
add
inc
push
hlt
inc
repz
popa
lock
pop
out
inc
push
in
inc
push
jmp
inc
inc
loop
add
loopne
add
(bad)
add
(bad)
add
dec
dec
fdivr
push
push
fdivrp
sub
(bad)
cmp
jecxz
push
jge
jmp
jmp
dec
mov
pop
add
add
cwde
in
call
dec
out
outs
out
and
in
adc
push
loop
add
inc
dec
loop
add
inc
dec
loop
add
inc
dec
in
add
inc
dec
in
add
inc
dec
in
add
inc
dec
in
add
inc
push
jmp
pop
hlt
inc
cmp
inc
outs
(bad)
jmp
lods
(bad)
jmp
(bad)
push
(bad)
dec
(bad)
call
cld
dec
(bad)
std
dec
nop
(bad)
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
dec
(bad)
std
jmp
cwde
clc
push
std
call
popf
(bad)
inc
test
inc
jo
inc
fs
inc
repz
outs
idiv
add
push
clc
dec
sar
pop
mov
call
cld
jmp
cld
push
std
dec
push
cmps
cld
push
test
(bad)
push
test
(bad)
cmp
sti
jmp
movs
std
jmp
(bad)
jmp
cmps
(bad)
(bad)
lods
cld
jmp
cld
inc
into
(bad)
(bad)
jle
std
push
std
dec
aad
call
ret
cmps
cld
dec
xchg
std
inc
mov
inc
mov
inc
test
inc
cmp
inc
jb
jmp
idiv
and
(bad)
inc
dec
std
inc
pop
cli
inc
jne
inc
imul
add
inc
push
repnz
pop
lock
pop
in
inc
push
jmp
inc
loop
add
inc
aas
fdivr
add
(bad)
add
or
call
push
fdivrp
sub
(bad)
cmp
jle
jmp
jmp
dec
mov
add
add
add
pushf
out
jmp
jmp
dec
jg
(bad)
cmp
jmp
in
pop
pop
in
or
add
inc
dec
jecxz
add
inc
dec
jecxz
add
inc
dec
out
add
inc
dec
out
add
inc
dec
out
add
add
inc
push
jmp
gs
inc
ss
inc
inc
sti
inc
jg
dec
(bad)
call
call
sti
inc
cmp
inc
mov
inc
mov
inc
(bad)
(bad)
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
call
xchg
std
(bad)
cmp
(bad)
cmp
(bad)
inc
jb
inc
repz
push
idiv
add
inc
clc
jmp
into
std
(bad)
jp
sti
jmp
sti
inc
cld
jmp
cli
call
call
std
call
(bad)
call
(bad)
call
inc
sti
(bad)
cmp
std
push
mov
call
cld
push
cld
call
aam
dec
int3
std
call
(bad)
jmp
(bad)
(bad)
push
cmps
cld
dec
xchg
(bad)
inc
mov
inc
xchg
inc
test
dec
test
dec
xor
add
inc
pop
out
inc
ins
repnz
pop
cli
inc
ds
inc
xor
inc
imul
add
add
inc
ins
cmc
inc
push
repnz
pop
out
inc
push
jmp
add
inc
dec
in
add
inc
aas
fdivr
add
fdivr
add
or
pop
push
loopne
sub
(bad)
cmp
jg
jmp
jmp
dec
mov
outs
mov
out
jmp
jmp
push
sub
ds
jmp
imul
dec
push
jecxz
add
inc
dec
in
add
add
inc
dec
out
add
inc
dec
in
add
inc
dec
out
add
inc
dec
in
add
inc
pop
in
inc
dec
repnz
daa
repnz
push
std
call
xchg
(bad)
jmp
scas
cld
inc
jl
inc
js
inc
cmp
add
(bad)
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
(bad)
(bad)
inc
mov
inc
mov
call
fwait
(bad)
call
cli
jmp
std
call
(bad)
inc
nop
(bad)
inc
jne
inc
push
cmc
inc
jo
inc
js
call
cli
push
fscale
call
retf
sahf
sar
call
cli
(bad)
jp
std
inc
int
(bad)
jg
std
push
std
call
dec
(bad)
inc
(bad)
call
std
jmp
sti
dec
(bad)
(bad)
call
sar
call
fsincos
jmp
fsin
(bad)
js
(bad)
push
test
dec
(bad)
inc
mov
inc
mov
dec
mov
call
mov
call
mov
inc
jb
inc
lock
popa
lock
repz
pop
cmc
inc
sub
inc
aaa
hlt
inc
jle
inc
jne
inc
jno
inc
imul
add
inc
pop
lock
push
in
inc
dec
call
inc
inc
loopne
add
inc
ds
add
inc
inc
(bad)
or
call
pop
loopne
sub
ds
call
call
(bad)
jnp
in
dec
mov
pop
mov
out
jmp
in
call
jmp
imul
sbb
pop
in
add
dec
in
add
inc
dec
in
add
inc
dec
out
add
inc
dec
out
add
inc
dec
out
add
inc
dec
in
add
inc
pop
out
inc
sub
inc
das
hlt
inc
pop
sti
inc
je
inc
outs
idiv
add
inc
jl
inc
cmp
inc
test
inc
mov
inc
mov
inc
mov
inc
mov
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
mov
cli
dec
ret
(bad)
call
ja
inc
push
inc
imul
add
inc
jp
call
sti
(bad)
mov
(bad)
jmp
aad
push
fdivr
call
(bad)
jmp
(bad)
call
int
jmp
sti
call
(bad)
call
std
jmp
std
(bad)
jl
sti
call
fcos
jmp
aam
call
(bad)
push
fsin
push
std
push
test
call
xchg
(bad)
dec
(bad)
(bad)
dec
std
call
xchg
cld
push
cli
jmp
jb
inc
lock
fs
inc
addr16
inc
jae
inc
jae
inc
inc
hlt
inc
pop
idiv
add
idiv
add
inc
push
lock
pop
jmp
add
inc
dec
jecxz
add
inc
inc
fdivr
add
inc
inc
fdivr
add
dec
loopne
sbb
jmp
gs
aas
jb
call
jmp
jmp
stos
out
call
add
add
out
sti
jno
in
call
dec
call
jmp
gs
adc
or
inc
push
in
add
inc
push
in
add
inc
push
out
add
inc
push
out
add
inc
push
call
inc
dec
in
add
inc
inc
lock
sbb
inc
dec
repz
repnz
imul
inc
jbe
inc
jp
inc
jg
inc
cmp
add
inc
mov
inc
xchg
(bad)
inc
xchg
(bad)
inc
xchg
(bad)
inc
xchg
(bad)
inc
xchg
(bad)
dec
test
cld
call
into
(bad)
jmp
mov
cld
inc
ins
hlt
inc
ins
cmc
inc
jo
inc
jnp
call
cld
(bad)
mov
loopne
push
(bad)
(bad)
mov
loop
push
loopne
(bad)
mov
out
push
aam
(bad)
js
sti
jmp
(bad)
jmp
std
push
cld
dec
(bad)
(bad)
jmp
aad
call
sti
jmp
(bad)
jmp
(bad)
std
(bad)
cmp
(bad)
call
xchg
(bad)
jmp
cdq
std
(bad)
movs
cld
dec
sti
jmp
xchg
clc
inc
jo
inc
lock
gs
inc
push
inc
jbe
inc
cmp
add
cld
inc
js
dec
clc
inc
jge
inc
jae
inc
imul
inc
pop
jmp
add
inc
dec
jecxz
add
inc
inc
(bad)
add
inc
inc
(bad)
add
dec
pop
loop
sub
in
inc
jae
call
jmp
(bad)
jle
out
dec
mov
and
add
add
fist
mov
out
jmp
in
dec
jmp
imul
dec
pop
in
add
inc
push
in
add
inc
push
out
add
inc
push
jmp
inc
push
jmp
inc
push
out
add
inc
push
jmp
dec
out
inc
repnz
repz
push
inc
jo
inc
jne
inc
jnp
inc
jle
inc
cmp
inc
mov
inc
nop
(bad)
dec
xchg
(bad)
dec
(bad)
dec
xchg
(bad)
inc
xchg
(bad)
inc
cwde
(bad)
call
sahf
(bad)
dec
dec
fdivr
call
lods
(bad)
inc
jg
inc
outs
hlt
inc
ins
cmc
inc
jno
inc
jnp
call
std
inc
loop
inc
jecxz
(bad)
mov
loope
dec
in
dec
out
inc
in
inc
out
dec
jmp
shl
jmp
retf
gs
addr16
jl
cld
call
fcos
jmp
aam
call
frndint
jmp
fdivr
jmp
(bad)
std
(bad)
cmp
(bad)
jmp
cld
call
cld
jmp
sti
push
xchg
cli
inc
outs
hlt
inc
lock
repnz
jno
inc
jle
inc
mov
call
nop
cld
call
cld
call
mov
dec
cmp
inc
push
inc
popa
icebp
inc
pop
jmp
add
inc
dec
jecxz
add
inc
inc
fdivrp
add
inc
dec
fdivrp
add
dec
push
loop
sbb
imul
call
jmp
(bad)
jg
out
dec
stos
aam
mov
lock
in
call
jmp
ds
jmp
ins
out
sbb
dec
pop
out
add
push
out
add
add
inc
pop
call
inc
pop
jmp
inc
push
jmp
inc
push
in
add
inc
push
in
inc
popa
lock
(bad)
repz
push
inc
outs
idiv
add
inc
jnp
inc
jle
inc
cmp
inc
mov
dec
xchg
(bad)
call
call
adc
pushf
(bad)
dec
pushf
(bad)
jmp
(bad)
call
loop
jmp
mov
inc
test
inc
jno
inc
ins
hlt
inc
jno
inc
jnp
call
inc
loope
inc
in
inc
in
inc
in
call
jmp
sti
dec
call
std
call
out
(bad)
call
out
std
inc
out
jmp
int3
(bad)
jmp
(bad)
jmp
cld
inc
aad
jmp
xlat
clc
call
(bad)
cli
jmp
(bad)
jmp
aad
push
std
(bad)
aas
stos
(bad)
push
mov
(bad)
call
cld
push
cld
jmp
sti
jmp
(bad)
clc
inc
push
inc
lock
imul
add
inc
mov
call
xchg
std
jmp
call
and
clc
inc
jbe
inc
push
inc
pop
lock
push
jmp
add
inc
dec
jecxz
add
inc
inc
fdivrp
add
inc
dec
loopne
add
loop
adc
call
popa
in
xor
inc
call
jmp
inc
lods
out
ret
xchg
mov
pushf
and
call
jmp
inc
jge
push
jo
call
data16
adc
inc
pop
out
add
inc
push
out
add
inc
pop
call
inc
pop
jmp
push
jmp
inc
push
in
add
inc
pop
jmp
add
inc
arpl
inc
repz
push
inc
outs
idiv
add
inc
jle
inc
cmp
inc
test
inc
mov
dec
xchg
(bad)
call
pushf
(bad)
jmp
mov
(bad)
call
mov
(bad)
push
stos
(bad)
jmp
(bad)
jmp
in
push
mov
(bad)
inc
jae
inc
outs
hlt
inc
jno
inc
jp
call
sti
(bad)
mov
in
inc
out
dec
out
call
jmp
call
in
sti
call
jmp
call
in
cld
(bad)
(bad)
std
call
in
std
inc
in
jmp
(bad)
jmp
jmp
std
inc
xlat
(bad)
jmp
(bad)
clc
call
sti
call
(bad)
std
jmp
aam
jmp
std
inc
(bad)
inc
(bad)
call
(bad)
push
cld
inc
sti
call
mov
inc
imul
inc
jo
inc
cmp
push
mov
std
(bad)
cmp
cwde
sti
call
mov
inc
ja
inc
push
out
inc
push
jmp
dec
loop
add
inc
inc
fdivrp
add
inc
dec
loope
or
call
arpl
push
outs
out
inc
jp
call
jmp
inc
lods
out
xchg
xchg
mov
push
je
out
call
in
dec
jmp
imul
adc
pop
call
inc
push
out
add
inc
gs
arpl
inc
pop
jmp
push
out
add
inc
pop
jmp
add
inc
(bad)
hlt
inc
imul
add
inc
jbe
inc
test
inc
cmp
add
std
dec
xchg
(bad)
call
fwait
(bad)
jmp
cmps
(bad)
push
stos
(bad)
jmp
test
(bad)
(bad)
ds
jmp
(bad)
jmp
out
push
mov
(bad)
inc
jne
inc
outs
hlt
inc
jo
inc
js
call
cli
push
in
dec
out
call
jmp
cld
(bad)
(bad)
cld
call
out
sti
(bad)
fsubr
cld
(bad)
fcomi
std
dec
jmp
xchg
(bad)
(bad)
push
(bad)
call
std
jmp
std
inc
fdivr
jmp
clc
call
sar
call
aam
jmp
sar
jmp
std
call
(bad)
call
(bad)
push
std
dec
cld
call
cld
dec
jge
inc
push
repnz
ja
dec
mov
jmp
mov
std
call
std
dec
std
push
pushf
cld
call
ja
inc
repnz
pop
out
inc
push
jmp
inc
dec
loop
add
inc
dec
loopne
add
inc
dec
loop
or
call
pop
in
and
jo
dec
call
push
in
inc
in
bound
add
add
scas
out
(bad)
jnp
lock
out
call
jmp
cmp
jmp
call
out
or
pop
call
inc
pop
jmp
dec
addr16
adc
dec
(bad)
jmp
add
inc
push
call
inc
push
jmp
inc
arpl
inc
addr16
inc
imul
add
inc
ja
dec
(bad)
cli
inc
mov
inc
cmp
add
(bad)
call
cwde
(bad)
jmp
movs
(bad)
(bad)
cmp
(bad)
(bad)
cmp
mov
push
jmp
call
(bad)
jmp
(bad)
inc
xchg
(bad)
inc
js
inc
outs
hlt
inc
jno
inc
ja
inc
jmp
loop
dec
out
call
jmp
(bad)
(bad)
(bad)
(bad)
cld
(bad)
fsubr
std
call
out
std
(bad)
mov
fscale
inc
sar
push
mov
std
inc
fdivr
jmp
aad
call
iret
(bad)
inc
sar
call
iret
cld
jmp
cld
call
(bad)
jmp
(bad)
dec
into
cld
(bad)
jge
cld
(bad)
aas
pushf
cli
inc
jae
inc
repnz
outs
repz
cmp
and
(bad)
call
jmp
(bad)
call
std
inc
sti
jmp
hlt
inc
gs
inc
pop
in
inc
push
call
inc
dec
loope
add
inc
dec
loope
add
inc
push
jecxz
or
in
sbb
jmp
push
out
dec
jg
call
jmp
cmps
in
std
lea
add
cdq
cdq
dec
xchg
mov
loope
cmps
icebp
jmp
out
call
in
inc
jmp
imul
inc
pop
call
inc
pop
jmp
call
push
call
jo
call
jae
dec
jmp
add
inc
push
out
add
add
add
inc
push
cmc
inc
jo
inc
ja
call
xchg
jmp
clc
dec
(bad)
std
inc
cmp
add
(bad)
dec
xchg
(bad)
call
popf
(bad)
(bad)
cmp
(bad)
dec
(bad)
call
(bad)
(bad)
js
(bad)
jmp
out
push
mov
(bad)
inc
jl
inc
outs
repz
jno
inc
jne
push
idiv
mov
fdivrp
inc
in
call
jmp
loopne
(bad)
(bad)
fucomi
std
call
in
std
dec
call
cld
(bad)
jg
std
jmp
(bad)
call
std
dec
std
call
(bad)
inc
xlat
(bad)
call
aam
dec
std
(bad)
jl
cld
inc
sar
dec
sar
jo
(bad)
inc
sar
call
mov
jmp
mov
inc
imul
add
inc
jb
inc
mov
(bad)
aas
test
call
(bad)
jmp
(bad)
jmp
(bad)
call
std
dec
cli
jmp
(bad)
idiv
add
inc
popa
out
inc
push
jmp
dec
jecxz
add
inc
dec
loope
add
add
inc
push
in
adc
call
in
sub
(bad)
cmp
sub
push
in
inc
xchg
inc
cdq
mov
stos
mov
lock
out
dec
jmp
xor
jmp
gs
inc
pop
call
inc
in
call
ins
out
call
js
call
jbe
dec
imul
add
inc
pop
jmp
inc
pop
jmp
add
inc
repz
imul
add
inc
jbe
dec
clc
jmp
xchg
clc
call
test
inc
cmp
add
(bad)
dec
xchg
(bad)
jmp
movs
(bad)
inc
(bad)
dec
(bad)
call
(bad)
(bad)
js
(bad)
call
loop
jmp
mov
(bad)
inc
cmp
add
inc
outs
cmc
inc
jne
jmp
int
jmp
loope
call
call
std
jmp
repnz
(bad)
fldz
std
call
jmp
push
cld
call
std
dec
(bad)
cmp
std
(bad)
cmp
std
call
(bad)
(bad)
jle
(bad)
call
aad
dec
retf
(bad)
push
std
push
std
inc
iret
std
inc
ret
std
inc
sar
call
ret
dec
mov
cmc
inc
repnz
imul
jmp
cdq
(bad)
call
(bad)
jmp
(bad)
push
std
push
jmp
cld
dec
cli
jmp
mov
inc
outs
repnz
pop
out
inc
push
jmp
dec
loop
add
inc
dec
jecxz
add
inc
push
jecxz
pop
push
in
adc
call
fs
das
outs
call
call
jmp
jmp
jp
out
dec
add
add
mov
(bad)
jnp
icebp
jmp
out
dec
in
(bad)
cmp
sub
call
imul
inc
jmp
inc
arpl
dec
imul
push
jne
jmp
jl
jmp
jle
call
jne
inc
push
jmp
add
inc
pop
jmp
repz
imul
add
inc
je
inc
cmp
sub
sti
inc
xchg
inc
cmp
add
(bad)
inc
(bad)
(bad)
call
fwait
(bad)
push
stos
(bad)
inc
(bad)
call
(bad)
push
(bad)
call
(bad)
call
mov
dec
cwde
(bad)
inc
xchg
inc
je
inc
outs
repz
jae
call
ret
mov
fdivr
dec
out
(bad)
(bad)
std
(bad)
(bad)
(bad)
call
jmp
inc
out
call
std
push
stos
(bad)
jmp
test
jmp
(bad)
dec
push
(bad)
dec
into
(bad)
(bad)
jg
(bad)
jmp
(bad)
jmp
std
jmp
(bad)
(bad)
jl
(bad)
dec
enter
(bad)
(bad)
call
aam
call
mov
jmp
mov
inc
outs
repz
lock
ins
repz
test
(bad)
cmps
(bad)
jmp
(bad)
(bad)
js
std
(bad)
jl
std
push
sti
jmp
cld
dec
jmp
test
inc
imul
inc
push
jmp
inc
dec
loop
add
inc
dec
jecxz
add
inc
push
in
or
call
pop
out
and
push
jno
inc
call
jmp
mov
in
pop
xchg
scas
in
sbb
sub
out
inc
in
jmp
jne
call
ins
jmp
(bad)
jmp
inc
jmp
or
jbe
jmp
jg
jmp
xor
and
jb
inc
gs
inc
pop
jmp
inc
pop
out
inc
repz
imul
add
inc
je
inc
jp
call
mov
jmp
cdq
sti
dec
mov
inc
jg
inc
cmp
add
(bad)
inc
xchg
(bad)
call
popf
(bad)
push
stos
(bad)
dec
(bad)
call
(bad)
(bad)
js
(bad)
call
int
(bad)
aas
mov
inc
mov
inc
js
inc
outs
repnz
je
inc
test
call
cld
dec
xlat
cld
inc
jecxz
call
out
cld
(bad)
fsubr
cld
dec
jmp
cld
jmp
(bad)
jmp
cmps
cld
call
popf
(bad)
call
sahf
(bad)
call
mov
(bad)
inc
(bad)
jmp
(bad)
(bad)
jle
(bad)
(bad)
jl
(bad)
jmp
(bad)
call
std
call
call
(bad)
push
(bad)
inc
enter
retf
(bad)
call
std
(bad)
jnp
sti
inc
clc
dec
data16
inc
lock
jb
call
xchg
cld
call
(bad)
push
(bad)
(bad)
jge
std
(bad)
jge
sti
push
sti
jmp
cld
inc
call
jle
inc
gs
inc
pop
jmp
add
inc
dec
loop
add
inc
push
jecxz
add
inc
push
jecxz
add
dec
pop
out
sbb
jmp
push
push
je
dec
jmp
jmp
in
(bad)
jle
out
lock
add
cwde
mov
repnz
lock
out
dec
in
push
in
jmp
jo
call
push
dec
jmp
inc
jmp
or
out
call
jbe
jmp
xor
ss
push
test
call
outs
out
inc
(bad)
jmp
pop
in
inc
repnz
push
inc
jo
inc
jae
inc
ja
inc
xchg
sti
call
(bad)
sti
inc
cmp
add
inc
cmp
add
(bad)
inc
xchg
(bad)
call
mov
(bad)
inc
(bad)
call
std
push
jmp
(bad)
jmp
stos
(bad)
inc
xchg
(bad)
inc
mov
inc
jl
inc
outs
repnz
jb
inc
cmp
inc
cmps
cld
push
std
call
cld
call
jmp
shl
call
mov
dec
fwait
cld
inc
xchg
(bad)
inc
xchg
(bad)
inc
popf
(bad)
push
lods
(bad)
call
(bad)
jmp
(bad)
jmp
(bad)
call
std
dec
dec
std
call
std
push
(bad)
(bad)
jge
std
inc
into
std
call
enter
stos
clc
jmp
idiv
add
inc
arpl
inc
lock
jnp
push
sahf
(bad)
jmp
(bad)
push
std
(bad)
jge
sti
(bad)
jp
cli
push
std
call
push
xchg
idiv
or
popa
out
inc
push
jmp
inc
push
loop
add
inc
push
jecxz
add
inc
push
in
pop
pop
in
adc
call
outs
call
dec
call
jmp
jb
in
inc
add
add
mov
(bad)
jnp
icebp
jmp
lock
out
(bad)
cmp
out
jmp
je
call
outs
jmp
adc
inc
gs
or
call
jne
jmp
xor
(bad)
cmp
bnd
push
jmp
inc
fs
inc
push
idiv
add
inc
jne
inc
jnp
dec
mov
dec
mov
inc
cmp
add
inc
cmp
inc
mov
inc
mov
inc
xchg
(bad)
call
pushf
(bad)
jmp
movs
(bad)
push
stos
std
dec
(bad)
call
(bad)
jmp
movs
(bad)
inc
xchg
(bad)
inc
nop
(bad)
inc
cmp
add
inc
jno
inc
jge
jmp
call
jge
cli
jmp
in
inc
in
jmp
ret
(bad)
jmp
movs
(bad)
inc
xchg
(bad)
inc
nop
(bad)
inc
xchg
(bad)
inc
xchg
(bad)
dec
(bad)
jmp
cmps
(bad)
dec
(bad)
call
(bad)
call
(bad)
inc
(bad)
(bad)
cmp
(bad)
call
std
jmp
(bad)
(bad)
jnp
(bad)
dec
sar
call
sti
push
xchg
idiv
or
inc
addr16
inc
arpl
inc
imul
pop
test
inc
(bad)
jmp
(bad)
push
std
push
cld
push
std
jmp
cld
dec
cli
jmp
mov
inc
icebp
inc
pop
in
inc
push
call
inc
push
in
add
inc
push
in
add
inc
push
in
or
call
popa
out
and
push
jno
inc
jmp
jmp
push
out
inc
add
add
mov
in
stos
repnz
lock
lock
out
push
jp
jmp
jno
call
jmp
or
inc
push
call
lock
icebp
push
icebp
(bad)
cmp
mov
jmp
jg
dec
jno
inc
arpl
inc
pop
jmp
inc
repz
imul
add
inc
jne
inc
ja
inc
jg
inc
cmp
add
inc
jle
inc
cmp
add
(bad)
inc
(bad)
(bad)
inc
xchg
(bad)
dec
cdq
(bad)
call
popf
(bad)
jmp
cmps
std
(bad)
cmp
(bad)
inc
xchg
(bad)
inc
xchg
(bad)
inc
test
inc
jo
inc
outs
repz
jnp
call
stos
cld
jmp
cli
call
(bad)
push
retf
cld
dec
(bad)
call
call
add
(bad)
inc
nop
(bad)
inc
(bad)
(bad)
cmp
(bad)
(bad)
cmp
(bad)
push
cmps
(bad)
jmp
std
(bad)
cmp
(bad)
jmp
(bad)
js
std
dec
int3
cld
(bad)
js
cld
dec
clc
call
xor
add
inc
lock
fs
inc
jae
call
xchg
cld
call
std
jmp
std
jmp
cld
jmp
cld
call
std
dec
cli
(bad)
cmp
repz
push
jmp
push
in
add
inc
push
in
add
inc
push
jecxz
add
pop
out
sbb
jmp
ins
call
dec
jmp
xchg
in
(bad)
jl
in
fdiv
dec
cwde
mov
repz
bnd
lock
(bad)
cmp
out
call
outs
jmp
or
push
in
call
jno
call
jge
push
mov
(bad)
cmp
repnz
cmp
test
call
js
inc
push
inc
pop
jmp
inc
gs
inc
push
inc
jo
inc
jae
inc
jne
inc
jp
inc
cmp
add
sti
inc
jnp
inc
cmp
add
inc
mov
inc
mov
inc
xchg
(bad)
inc
xchg
(bad)
dec
std
call
(bad)
dec
xchg
(bad)
inc
xchg
(bad)
inc
mov
inc
jb
inc
outs
repnz
jbe
inc
cli
jmp
popf
sti
dec
clc
(bad)
jg
cli
jmp
sar
jmp
cld
jmp
cmps
(bad)
inc
(bad)
inc
(bad)
(bad)
inc
mov
inc
mov
inc
mov
inc
nop
(bad)
dec
cwde
(bad)
jmp
(bad)
jmp
movs
(bad)
jmp
(bad)
jmp
sahf
(bad)
jmp
std
push
std
call
(bad)
push
cld
inc
sar
push
test
jmp
idiv
add
add
inc
arpl
inc
push
idiv
xor
cld
call
cld
call
sti
dec
cld
inc
sti
(bad)
cmp
cmc
dec
jne
inc
arpl
inc
pop
call
inc
pop
in
or
add
inc
push
in
add
dec
pop
out
adc
out
push
addr16
das
jno
(bad)
cmp
test
call
in
push
out
(bad)
jle
out
jnp
add
add
mov
hlt
jg
repz
icebp
call
lock
out
push
jl
jmp
jae
call
jmp
or
inc
outs
out
call
js
jmp
test
(bad)
cmp
hlt
push
mov
jmp
jg
dec
jno
inc
arpl
inc
pop
call
inc
push
idiv
add
inc
je
inc
ja
inc
jnp
inc
jg
inc
jle
inc
jp
inc
jnp
inc
cmp
inc
mov
inc
mov
inc
mov
inc
mov
inc
xchg
(bad)
inc
xchg
(bad)
inc
nop
(bad)
inc
xchg
(bad)
inc
mov
inc
jne
inc
imul
add
add
cli
push
mov
dec
sar
inc
test
(bad)
inc
(bad)
(bad)
inc
mov
inc
mov
inc
mov
inc
mov
inc
(bad)
(bad)
inc
nop
(bad)
call
xchg
(bad)
call
xchg
(bad)
call
std
call
cwde
cld
push
mov
(bad)
call
(bad)
jmp
cld
push
cli
call
cli
jmp
idiv
or
inc
ins
repz
lock
fs
inc
jo
call
clc
inc
cld
dec
cld
inc
sti
(bad)
cmp
call
and
repz
imul
add
inc
pop
out
add
dec
popa
out
pop
pop
out
add
inc
push
in
add
in
push
pop
out
sbb
jmp
imul
xor
jle
call
jmp
xchg
in
(bad)
jns
in
out
je
jmp
add
mov
push
repnz
icebp
dec
lock
xor
call
jb
dec
outs
out
dec
push
dec
imul
adc
and
repnz
aas
xchg
hlt
(bad)
cmp
hlt
jmp
test
call
icebp
inc
imul
add
inc
pop
jmp
push
inc
outs
idiv
add
inc
jbe
inc
ja
inc
jnp
inc
jge
inc
jp
inc
jne
inc
jnp
inc
cmp
add
inc
mov
inc
mov
inc
mov
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
mov
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
jnp
inc
imul
add
inc
jg
dec
mov
jmp
xchg
cli
inc
cli
jmp
std
call
idiv
and
nop
(bad)
inc
mov
inc
mov
inc
test
inc
test
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
dec
nop
cld
call
xchg
sti
jmp
popf
std
(bad)
cmp
mov
jmp
sti
call
push
cwde
clc
dec
jno
inc
imul
inc
push
cmc
jmp
popf
sti
jmp
cdq
cli
jmp
xchg
cli
jmp
cli
call
mov
call
xor
(bad)
hlt
inc
icebp
inc
gs
inc
pop
jmp
dec
fs
inc
push
out
add
dec
pop
out
adc
out
and
push
jb
(bad)
cmp
test
call
in
jmp
out
(bad)
jge
in
xchg
add
add
mov
bnd
repz
bnd
lock
lock
jle
jmp
jne
call
jno
dec
push
dec
lock
jp
jmp
test
(bad)
cmp
hlt
push
mov
call
repnz
jb
inc
data16
inc
pop
jmp
inc
push
cmc
inc
jo
inc
jae
inc
jbe
inc
ja
inc
jnp
inc
jp
inc
je
inc
je
inc
jge
inc
cmp
inc
mov
inc
xchg
inc
xchg
inc
mov
inc
mov
inc
mov
inc
(bad)
(bad)
inc
mov
inc
jle
inc
outs
repnz
outs
repz
jnp
inc
xor
push
mov
jmp
call
xor
cli
inc
mov
inc
test
inc
xchg
inc
cmp
add
(bad)
inc
test
inc
xchg
inc
mov
inc
mov
inc
mov
inc
mov
call
cdq
std
push
mov
cld
dec
cli
push
call
add
inc
ins
hlt
inc
addr16
inc
out
inc
outs
repnz
xchg
cli
call
cli
call
mov
call
mov
dec
test
dec
jge
inc
icebp
inc
addr16
inc
popa
jmp
jmpw
imul
or
inc
pop
out
add
dec
pop
out
adc
call
call
push
jbe
inc
jmp
xchg
out
push
in
jmp
add
xchg
mov
hlt
push
jmp
icebp
dec
lock
cmp
call
out
call
outs
out
dec
imul
or
call
je
jmp
jge
push
mov
(bad)
cmp
repz
test
dec
ja
inc
push
inc
arpl
inc
pop
jmp
inc
push
inc
outs
cmc
inc
jno
inc
je
inc
jbe
inc
jbe
inc
js
inc
jne
inc
jno
inc
jbe
inc
jge
inc
cmp
add
(bad)
inc
cmp
inc
xchg
inc
mov
inc
mov
inc
mov
inc
cmp
inc
outs
repnz
ja
inc
jg
inc
xor
push
mov
jmp
(bad)
idiv
add
inc
cmp
add
std
inc
cmp
add
std
inc
test
inc
test
inc
test
inc
xchg
inc
xchg
dec
(bad)
cld
call
fwait
cld
push
xchg
idiv
adc
js
inc
jo
inc
imul
inc
imul
dec
xchg
dec
xchg
dec
xor
or
idiv
add
inc
jb
inc
push
inc
out
inc
arpl
inc
pop
call
call
jno
call
imul
inc
pop
out
or
dec
arpl
call
callw
ins
jmp
(bad)
aas
jl
dec
jmp
pop
(bad)
out
jmp
out
(bad)
jnp
out
ins
mov
repz
hlt
jmp
repnz
icebp
inc
lock
icebp
jmp
jae
call
outs
out
dec
out
dec
jbe
jmp
xor
xor
(bad)
repz
mov
call
jle
inc
addr16
inc
(bad)
jmp
add
inc
arpl
inc
ins
hlt
inc
outs
cmc
inc
jno
inc
je
inc
je
inc
jbe
inc
ja
inc
jno
inc
jb
inc
js
inc
jge
inc
cmp
add
cld
inc
jg
inc
cmp
add
cld
inc
test
inc
cmp
add
inc
outs
repnz
je
inc
jnp
inc
jl
inc
idiv
or
idiv
add
std
inc
cmp
add
inc
jp
inc
jge
inc
cmp
add
(bad)
inc
cmp
add
cld
inc
cmp
call
xchg
sti
call
xchg
clc
call
mov
inc
jnp
inc
jae
inc
ins
repnz
data16
inc
in
inc
outs
lock
jnp
inc
xor
inc
jg
inc
jl
inc
jbe
inc
jno
inc
imul
add
inc
fs
inc
popa
jmp
jmp
jmp
or
inc
call
dec
arpl
call
addr16
jmp
jae
(bad)
cmp
jmp
(bad)
in
jmp
out
push
out
retf
inc
xchg
mov
cmc
(bad)
js
repz
bnd
inc
icebp
push
xor
and
call
jae
call
jo
dec
jb
call
jnp
jmp
test
push
mov
push
mov
jmp
xor
emms
repnz
imul
add
add
inc
pop
jmp
inc
outs
hlt
inc
jo
inc
jno
inc
jae
inc
jne
inc
jbe
inc
je
inc
outs
repz
jnp
inc
jnp
inc
jle
inc
jle
inc
ja
inc
cmp
add
cld
inc
cmp
add
idiv
add
inc
jno
inc
js
inc
jnp
inc
jg
inc
jge
inc
ja
inc
jp
inc
jl
inc
jle
inc
ja
inc
je
inc
ja
inc
jg
inc
cmp
add
cld
inc
jg
inc
jp
inc
jge
inc
test
dec
xchg
dec
xor
add
add
add
inc
addr16
inc
fs
inc
imul
inc
jge
inc
jge
inc
jl
inc
jp
inc
jbe
inc
jno
inc
ins
repnz
imul
inc
arpl
dec
imul
jmp
js
dec
popa
jmp
fs
imul
sub
push
js
inc
call
in
jmp
out
push
in
stc
jp
jmp
xchg
mov
cmc
push
jmp
repz
icebp
(bad)
cmp
jg
jmp
js
call
jae
call
jno
dec
jno
call
jbe
jmp
sub
xor
repz
test
call
jl
inc
addr16
inc
arpl
inc
popa
jmp
push
inc
jno
inc
jo
inc
jno
inc
jb
inc
je
inc
je
inc
outs
cmc
inc
jno
call
xor
inc
js
inc
jge
inc
jbe
inc
ja
call
mov
inc
cmp
add
inc
jle
inc
jp
inc
ins
repnz
imul
add
inc
jp
inc
cmc
inc
js
inc
outs
hlt
inc
ja
inc
jge
inc
jl
inc
imul
add
inc
jb
inc
jl
inc
jl
inc
jl
inc
jge
inc
js
inc
jae
inc
jl
inc
jge
inc
jle
inc
jl
inc
ja
inc
je
inc
jae
inc
imul
inc
in
inc
outs
icebp
inc
ja
inc
jl
inc
jnp
inc
ja
inc
jne
inc
jno
inc
outs
repnz
imul
inc
addr16
call
outs
jmp
xor
push
jg
call
imul
or
dec
(bad)
jmp
addr16
jno
push
jg
call
in
call
out
jmp
out
(bad)
jnp
out
js
add
add
mov
hlt
jmp
repz
repnz
icebp
(bad)
cmp
icebp
jmp
xor
and
call
je
call
jb
call
jae
call
jl
jmp
lock
repnz
icebp
dec
ja
inc
outs
lock
gs
inc
arpl
inc
(bad)
jmp
je
dec
jnp
inc
je
inc
jno
inc
jno
inc
jb
inc
jno
inc
push
out
push
(bad)
cmc
call
test
inc
jle
inc
jge
inc
jo
dec
cmc
call
nop
sti
inc
cmp
add
inc
js
inc
outs
repnz
arpl
inc
outs
out
dec
ja
dec
repnz
push
inc
jbe
dec
jg
dec
jnp
inc
(bad)
jmp
jb
inc
jnp
inc
jl
inc
jnp
inc
jae
inc
ins
repz
jae
inc
ja
inc
jbe
inc
jne
inc
jae
dec
jnp
call
xor
or
inc
arpl
inc
data16
add
inc
je
inc
js
inc
js
inc
ja
inc
je
inc
jno
inc
ins
icebp
inc
push
inc
imul
call
test
push
sub
adc
fs
or
dec
gs
push
push
jmp
ja
(bad)
aas
jle
dec
in
call
out
jmp
out
push
out
mov
(bad)
inc
xchg
mov
es
mov
jmp
scas
hlt
jmp
repz
repz
icebp
(bad)
cmp
lock
js
call
jne
call
je
call
ja
jmp
sub
sub
lock
xor
adc
jb
inc
push
inc
gs
inc
gs
add
add
jg
push
mov
call
js
inc
jno
inc
jo
inc
ins
hlt
inc
addr16
call
jge
dec
hlt
inc
clc
jmp
xchg
clc
inc
jl
inc
repnz
jp
dec
cmp
add
inc
jae
inc
imul
add
add
dec
outs
jmp
dec
outs
jmp
jo
call
icebp
dec
ins
jmp
gs
or
jae
idiv
push
jp
inc
lock
imul
add
inc
jge
inc
jl
call
xor
cmp
lock
je
inc
pop
call
inc
imul
add
inc
je
inc
jne
inc
je
inc
jae
inc
jo
inc
outs
icebp
inc
ins
lock
lock
jne
push
sub
(bad)
cmp
in
dec
jmp
dec
data16
adc
ins
jmp
jbe
(bad)
cmp
test
call
out
jmp
out
push
out
shl
loop
xchg
mov
repz
jge
hlt
jmp
repz
repz
repnz
cmp
lock
jnp
call
ja
call
ja
jmp
jge
jmp
sub
sub
lock
jge
dec
jbe
inc
outs
lock
push
out
inc
in
inc
fs
sub
push
fwait
repz
idiv
xor
cmc
call
jne
inc
jo
inc
jnp
call
hlt
jmp
idiv
inc
fwait
idiv
or
inc
pop
out
inc
imul
inc
push
inc
arpl
inc
push
loopne
add
add
inc
(bad)
(bad)
add
inc
popa
in
or
out
add
inc
dec
xlat
inc
jp
call
jge
call
je
inc
addr16
mov
dec
cmc
jmp
hlt
jmp
repnz
out
dec
in
dec
call
inc
arpl
inc
push
repnz
jno
inc
jae
inc
jb
inc
jno
inc
outs
icebp
inc
outs
lock
jno
call
ja
jmp
lock
call
lock
test
call
ins
jmp
or
dec
jmp
imul
jmp
jbe
(bad)
cmp
jmp
dec
test
call
in
jmp
out
push
out
jecxz
call
xchg
mov
repz
jl
hlt
jmp
hlt
call
repz
repnz
cmp
repnz
xor
and
jp
jmp
jp
jmp
sub
xor
lock
jge
call
js
dec
jae
inc
imul
add
inc
addr16
inc
in
inc
data16
add
jmp
call
out
push
hlt
jmp
idiv
dec
call
sbb
repz
out
call
jmp
xchg
repnz
repz
jo
inc
pop
call
inc
pop
out
add
inc
dec
sar
add
inc
inc
int3
inc
inc
sar
add
add
inc
dec
aam
add
add
inc
dec
aam
add
inc
pop
loopne
add
inc
push
(bad)
add
inc
out
jmp
lock
out
jmp
jmp
dec
(bad)
jmp
inc
pop
in
add
inc
pop
jmp
inc
imul
inc
outs
repnz
outs
repnz
outs
icebp
inc
jno
dec
jge
push
mov
dec
icebp
call
icebp
call
lock
sub
push
imul
or
dec
push
jmp
jno
jmp
jbe
(bad)
cmp
jmp
dec
test
call
out
jmp
push
in
call
xchg
mov
hlt
clc
jge
hlt
jmp
repz
repz
(bad)
ds
push
xor
sub
jmp
out
jmp
jge
push
sub
xor
out
call
out
call
je
dec
jo
inc
ins
out
inc
imul
inc
imul
inc
addr16
jg
call
out
jmp
repnz
repz
repz
jmp
jge
dec
addr16
or
out
sbb
ins
out
add
inc
dec
(bad)
add
inc
inc
aam
add
leave
inc
inc
stos
inc
dec
pushf
inc
dec
mov
inc
aas
mov
inc
dec
sahf
inc
push
stos
inc
inc
sar
inc
(bad)
inc
inc
sar
inc
(bad)
inc
dec
sar
add
jmp
outs
loope
sub
and
addr16
add
inc
push
in
add
inc
pop
call
inc
addr16
inc
push
inc
ins
lock
outs
icebp
dec
lock
icebp
jmp
test
inc
bnd
jmp
icebp
jmp
bnd
icebp
jmp
jnp
dec
jmp
or
jmp
punpckhwd
call
imul
call
jno
push
jbe
(bad)
cmp
jmp
dec
test
call
out
jmp
out
push
out
loopne
popf
jmp
add
mov
out
jle
cmc
jmp
hlt
call
repz
repnz
repnz
test
jmp
xor
jmp
sub
xor
test
jmp
jge
call
jne
dec
jo
dec
outs
out
inc
out
inc
imul
add
inc
imul
inc
gs
jmp
jne
(bad)
ds
dec
(bad)
jmp
dec
(bad)
jmp
inc
mov
jmp
ja
dec
(bad)
fdivrp
add
inc
dec
aad
add
add
leave
inc
cmp
xchg
inc
test
inc
push
xchg
inc
push
xchg
inc
dec
(bad)
inc
pop
sahf
inc
bound
inc
push
cdq
inc
push
xchg
inc
dec
movs
inc
aas
(bad)
inc
inc
(bad)
inc
retf
inc
dec
(bad)
inc
push
fdivrp
add
call
push
jmp
ja
call
jae
call
jo
call
jne
call
jge
jmp
sub
inc
lock
bnd
jmp
icebp
jmp
icebp
call
lock
ds
call
jno
dec
imul
call
push
call
jmp
pop
imul
sbb
jb
push
ja
(bad)
aas
jg
dec
out
call
out
push
lock
mov
add
xchg
mov
cmc
rol
cmps
repz
call
repnz
repnz
cmp
test
jmp
sub
xor
out
(bad)
cmp
out
call
jbe
dec
jo
dec
ins
in
inc
ins
out
inc
imul
add
inc
push
inc
imul
inc
fs
call
arpl
call
gs
adc
pop
(bad)
pop
push
fcos
add
inc
dec
sar
add
inc
ds
inc
cmp
inc
inc
mov
add
inc
push
xchg
dec
ins
mov
add
add
add
inc
push
xchg
inc
arpl
inc
pop
mov
inc
pop
mov
inc
cmp
inc
cmp
inc
inc
int
add
inc
push
loopne
sub
out
push
(bad)
(bad)
mov
call
out
call
lock
lock
lock
icebp
jmp
icebp
jmp
lock
out
call
out
(bad)
aas
mov
call
jne
dec
imul
call
jmp
push
imul
sbb
jmp
jo
jmp
jne
push
jnp
inc
in
call
out
jmp
out
(bad)
jl
icebp
dec
lahf
fist
xchg
hlt
movs
test
hlt
jmp
hlt
call
repz
repz
icebp
(bad)
cmp
lock
sub
cmp
lock
ds
push
sub
and
in
call
jae
dec
jo
dec
outs
out
inc
ins
out
inc
out
inc
push
inc
push
inc
push
jmp
popa
in
or
or
dec
pop
(bad)
adc
(bad)
mulps
inc
dec
int3
inc
inc
(bad)
inc
inc
movs
inc
pop
xchg
inc
pop
fwait
inc
push
cdq
inc
scas
dec
ins
mov
add
add
inc
push
cwde
inc
bound
inc
pop
mov
inc
pop
fwait
inc
aas
mov
add
(bad)
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
inc
iret
dec
push
fcos
sub
inc
call
call
out
jmp
out
call
out
call
out
call
dec
jmp
je
call
jmp
dec
jmp
ins
jmp
push
ins
jmp
sbb
call
outs
jmp
js
(bad)
aas
sub
jmp
(bad)
js
icebp
dec
mov
push
add
add
mov
loopne
scas
cmc
jmp
hlt
jmp
repz
repz
inc
icebp
(bad)
cmp
icebp
(bad)
cmp
lock
icebp
dec
icebp
dec
lock
out
(bad)
aas
mov
push
test
jmp
jle
jmp
jnp
call
lock
jne
call
jne
call
jp
jmp
jnp
jmp
jmp
outs
loope
or
inc
enter
stos
inc
pop
xchg
inc
mov
inc
push
fwait
inc
popa
cmps
dec
jb
inc
pop
mov
inc
pop
sahf
inc
pop
mov
inc
pop
movs
inc
bound
inc
push
cmps
inc
cmp
inc
inc
retf
inc
inc
int3
inc
inc
retf
inc
inc
retf
inc
inc
int3
inc
inc
int
add
add
inc
push
fdivrp
add
dec
pop
jecxz
or
inc
pop
jecxz
add
jecxz
add
inc
pop
in
add
out
or
call
push
jmp
sbb
call
jb
jmp
jne
push
jp
(bad)
cmp
in
dec
out
jmp
out
push
repnz
repz
mov
add
test
hlt
mov
stos
hlt
jmp
hlt
jmp
repz
repz
repnz
icebp
inc
out
(bad)
cmp
mov
inc
icebp
dec
icebp
call
lock
lock
icebp
dec
icebp
dec
repnz
icebp
inc
lock
out
inc
out
(bad)
ds
(bad)
cmp
call
dec
pop
xlat
inc
dec
retf
inc
inc
enter
mov
sub
inc
mov
inc
pop
popf
inc
pop
mov
inc
gs
inc
bound
dec
popa
movs
dec
cmps
call
addr16
push
mov
inc
dec
sar
or
call
pop
(bad)
adc
dec
push
(bad)
add
inc
dec
fdivr
add
inc
dec
fdivr
add
inc
dec
fdivrp
add
inc
push
loopne
add
loop
or
call
(bad)
in
push
addr16
sbb
call
jno
jmp
jmp
sub
push
jl
(bad)
cmp
out
call
out
call
out
push
icebp
dec
mov
repnz
mov
hlt
cwde
jle
repz
jne
hlt
jmp
repz
repz
bnd
dec
lock
lock
out
inc
lock
lock
icebp
dec
lock
dec
icebp
dec
icebp
inc
lock
cmp
jmp
sub
jmp
outs
out
sbb
fs
sbb
jmp
gs
sub
jmp
imul
jmp
fdivrp
pop
mov
movs
inc
pop
mov
dec
mov
add
inc
scas
inc
pop
mov
inc
jb
call
push
mov
inc
inc
iret
inc
push
fdivr
sbb
push
je
(bad)
cmp
cs
call
outs
out
pop
imul
call
in
adc
in
push
addr16
pop
push
out
push
ins
call
jmp
je
jmp
js
push
jge
(bad)
cmp
out
dec
call
lock
lock
icebp
(bad)
jle
repnz
mov
repz
jg
inc
add
add
out
and
scas
hlt
aam
lods
hlt
push
hlt
jmp
repz
repz
repnz
icebp
call
lock
inc
icebp
inc
icebp
inc
lock
ds
(bad)
cmp
out
(bad)
cmp
push
sub
cmp
out
inc
out
dec
call
in
jmp
in
jmp
jmp
push
mov
jmp
outs
loopne
sub
fdivrp
xchg
retf
inc
(bad)
mov
inc
push
ret
inc
stos
inc
scas
inc
popa
cmps
call
jo
dec
cmps
jmp
jp
call
popa
int3
inc
fdivr
push
pop
(bad)
sbb
loopne
cmp
xchg
jmp
popa
cwde
in
call
in
inc
jmp
aaa
sub
xor
das
jnp
push
jl
push
sub
inc
in
dec
out
call
out
call
out
jmp
push
icebp
(bad)
jnp
repnz
mov
repz
shl
stos
ret
cdq
int3
inc
xchg
repz
jg
repz
jnp
hlt
push
repz
bnd
bnd
repnz
icebp
call
icebp
call
repnz
repnz
icebp
call
bnd
jmp
repnz
repnz
jl
repz
mov
dec
cmps
icebp
jmp
in
inc
jmp
jmp
out
dec
je
inc
popa
cmps
call
add
inc
gs
inc
stos
call
outs
mov
or
test
sub
push
jl
call
popa
in
push
push
in
es
cmp
call
jmp
mov
dec
stos
repnz
icebp
jmp
lock
lock
icebp
jmp
icebp
push
icebp
push
repnz
jnp
repnz
mov
call
mov
cmc
shr
(bad)
cmc
dec
lahf
mov
inc
mov
repz
mov
mov
scas
repz
repz
jg
repnz
mov
dec
mov
call
mov
idiv
movs
(bad)
test
idiv
stos
(bad)
cmc
cli
cmps
(bad)
cmc
out
mov
repnz
out
call
out
inc
jmp
(bad)
lock
mov
call
jbe
jmp
mov
inc
imul
dec
imul
push
xchg
aam
xor
push
jmp
(bad)
cmp
jmp
xchg
jmp
ja
out
dec
mov
hlt
jmp
(bad)
idiv
test
enter
(bad)
hlt
mul
(bad)
hlt
fisubr
enter
retf
scas
int3
repnz
scas
int3
lock
add
add
stos
jmp
sub
mov
icebp
dec
movs
(bad)
repz
test
retf
mov
neg
retf
cmc
dec
mov
hlt
inc
mov
icebp
cmp
lock
lods
icebp
jb
cmps
lock
jmp
lock
out
call
mov
test
jmp
into
call
jnp
inc
gs
dec
ins
mov
adc
call
ins
test
bound
out
call
call
out
call
jmp
out
push
lock
mov
lock
mov
int
xor
into
lock
mov
lock
mov
add
cdq
cdq
inc
mov
icebp
rcl
(bad)
jmp
inc
popa
movs
call
jl
jmp
mov
dec
outs
mov
pop
push
mov
push
cmps
dec
mov
inc
lods
repnz
mov
in
(bad)
mov
stos
(bad)
mov
push
cdq
int3
inc
stos
stos
inc
pushf
mov
cmc
les
ret
dec
stos
jmp
(bad)
int3
jmp
add
add
outs
mov
or
jmp
jae
push
into
jmp
ret
mov
mov
sbb
add
add
(bad)
call
mov
stos
inc
cmps
call
jne
jmp
mov
call
je
dec
push
dec
stos
dec
movs
(bad)
test
ja
add
add
fucomp
rol
mov
adc
dec
data16
and
leave
dec
outs
mov
pop
push
test
sbb
jmp
mov
inc
shl
mul
mov
jmp
ja
dec
push
dec
test
call
jp
inc
push
inc
push
scas
inc
shl
sub
add
add
fldl2t
rcl
mov
dec
stos
dec
jo
call
or
inc
scas
dec
push
lods
(bad)
cmp
mov
loopne
(bad)
out
dec
mov
mov
sbb
mov
or
stos
call
je
call
(bad)
dec
stos
dec
imul
inc
int3
fiadd
add
add
(bad)
push
jnp
call
jb
dec
scas
call
mov
dec
outs
mov
add
stos
dec
push
stos
jmp
stos
jmp
mov
jg
xchg
mov
mov
retf
pop
cwde
mov
call
jb
dec
push
call
je
call
jp
dec
ins
mov
add
stos
dec
lods
dec
imul
push
(bad)
into
xor
add
mov
mov
es
call
mov
or
dec
jo
call
outs
mov
add
inc
cmps
call
data16
jmp
jae
dec
jmp
sar
cdq
int3
add
test
scas
int
dec
mov
adc
mov
or
dec
ins
mov
adc
dec
mov
add
inc
popa
movs
inc
movs
dec
movs
call
imul
jmp
mov
jp
fwait
mov
add
stos
retf
inc
jmp
jne
call
mov
or
dec
stos
dec
jno
dec
jae
inc
scas
inc
popa
cmps
inc
pop
mov
dec
mov
jmp
jae
inc
scas
call
mov
pop
nop
mov
adc
inc
push
jg
adc
add
add
(bad)
inc
sahf
(bad)
fistp
inc
mov
call
push
inc
imul
or
inc
arpl
inc
pop
sahf
inc
pop
popf
dec
pop
popf
call
outs
movs
push
ja
(bad)
aas
jg
inc
mov
dec
xchg
mov
inc
jle
pop
cmp
xor
push
sbb
dec
xchg
pop
(bad)
(bad)
inc
mov
lods
retf
dec
mov
es
call
jno
dec
data16
inc
outs
mov
or
mov
inc
pop
movs
inc
pop
sahf
inc
pop
pushf
inc
pop
call
bound
call
imul
cs
push
jbe
push
test
jmp
jae
out
sub
fisubr
outs
mov
push
mov
mov
call
mov
call
outs
stos
dec
outs
mov
or
inc
arpl
dec
outs
mov
or
inc
gs
inc
pop
mov
inc
push
call
pop
pushf
inc
pushf
dec
pop
popf
dec
bound
call
data16
call
addr16
call
addr16
call
imul
add
mov
out
arpl
lods
call
imul
add
inc
popa
cmps
inc
ins
mov
or
inc
fs
inc
pop
mov
inc
push
cdq
inc
push
call
pop
pushf
inc
pop
pushf
inc
pushf
inc
pop
cdq
dec
pop
cwde
dec
cwd
push
sahf
rcr
xchg
mov
(bad)
mov
call
movs
dec
lods
inc
test
inc
pop
mov
dec
imul
inc
pop
mov
inc
push
fwait
inc
push
fwait
inc
pop
fwait
inc
pop
call
push
cwde
inc
push
xchg
inc
pop
cdq
int
add
add
mov
int3
cli
pop
xchg
mov
call
push
movs
inc
pop
mov
inc
pop
sahf
inc
popa
cmps
inc
imul
inc
pop
movs
inc
pop
movs
inc
pop
mov
inc
push
cdq
inc
push
cwde
inc
pop
cdq
loope
push
jg
xchg
mov
iret
(bad)
outs
mov
mov
daa
outs
mov
inc
sahf
inc
pop
mov
inc
pop
pushf
inc
pop
fwait
inc
pop
mov
inc
stos
inc
stos
inc
stos
inc
lods
inc
fs
inc
popa
cmps
inc
pop
mov
inc
pop
popf
dec
cdq
int3
int3
add
jl
(bad)
call
cmp
call
addr16
dec
pop
cwde
inc
pop
fwait
inc
pop
mov
inc
pop
fwait
inc
push
call
pop
mov
inc
gs
inc
scas
inc
mov
add
scas
inc
gs
inc
pusha
movs
jb
add
add
stos
enter
mov
jmp
movs
call
pop
xchg
inc
pop
cwde
inc
pop
pushf
inc
pop
popf
inc
pop
pushf
inc
pop
fwait
inc
pop
pushf
inc
pop
mov
inc
fs
inc
scas
inc
lods
sti
add
das
jns
ret
mov
mov
inc
sub
push
arpl
inc
fwait
inc
pop
mov
inc
pop
mov
inc
pop
sahf
inc
pop
mov
fadd
pusha
movs
push
imul
mov
aas
jle
jmp
jb
call
arpl
inc
mov
inc
pop
sahf
inc
pop
sahf
rol
(bad)
adc
add
add
mov
push
lea
jecxz
sub
sbb
popa
fwait
dec
pop
call
push
cwde
inc
push
jg
adc
mov
inc
sub
ins
mov
fmul
pop
fwait
data16
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
ud0
(bad)
(bad)
(bad)
(bad)
jmp
jg
(bad)
(bad)
(bad)
(bad)
inc
pop
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
inc
add
ud0
(bad)
cld
add
add
(bad)
(bad)
jmp
jg
inc
pop
(bad)
inc
pop
(bad)
cld
add
push
add
jmp
add
jg
add
aas
rol
pop
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
pop
rol
aas
loopne
add
add
(bad)
cld
add
(bad)
dec
pop
(bad)
inc
ud0
lock
add
ud0
loopne
add
add
(bad)
jmp
pop
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
pop
(bad)
jmp
pop
(bad)
push
ud0
lock
add
ud0
clc
pop
(bad)
(bad)
clc
pop
(bad)
(bad)
cld
aas
(bad)
(bad)
inc
add
add
(bad)
inc
add
add
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
jmp
add
pop
(bad)
(bad)
(bad)
push
add
ud0
(bad)
(bad)
clc
add
pop
(bad)
(bad)
(bad)
(bad)
cld
add
jg
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
jmp
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
aas
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
ud0
(bad)
jmp
add
add
add
add
add
add
and
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
sbb
add
sbb
add
sbb
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
aaa
add
add
add
add
add
add
add
inc
add
add
add
inc
add
add
add
add
cmp
add
xor
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
add
add
add
pop
add
add
add
ins
add
add
add
jb
add
jne
add
jns
add
jge
add
jle
add
jle
add
jge
add
jns
add
jb
add
push
add
add
add
dec
add
add
add
add
add
add
and
add
sbb
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jae
add
add
add
pushf
add
or
add
sub
add
add
add
add
add
add
cmp
add
sub
add
add
add
add
add
jno
add
arpl
add
push
add
add
add
xor
add
daa
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jae
add
add
add
add
add
add
lock
inc
adc
inc
adc
inc
xadd
add
cld
add
lahf
cmc
add
scas
cli
add
(bad)
adc
inc
adc
inc
(bad)
inc
push
mov
icebp
add
ss
add
add
xchg
add
add
add
ins
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
ins
add
add
add
adc
add
(bad)
out
add
mov
inc
sbb
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
sbb
inc
sbb
inc
sbb
inc
adc
inc
adc
inc
adc
inc
adc
inc
or
add
jle
add
dec
leave
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
cmp
add
add
add
xchg
add
mov
add
mov
call
aam
sbb
(bad)
inc
pop
ret
inc
push
ret
pop
ret
inc
pop
ret
inc
adc
inc
push
mov
inc
cs
add
into
inc
and
inc
sbb
inc
pop
(bad)
sbb
inc
and
inc
adc
mov
inc
pop
enter
sar
add
lods
cmc
add
sub
js
add
pop
add
add
add
xor
add
and
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
or
add
sar
add
sar
dec
into
push
dec
sar
add
retf
sbb
inc
sbb
inc
sbb
inc
sbb
inc
sbb
inc
adc
jmp
pop
loope
pop
xor
inc
cs
add
sar
add
into
inc
sbb
inc
push
retf
dec
xor
dec
xor
inc
adc
inc
adc
inc
adc
inc
sbb
call
cmp
inc
adc
aad
add
jp
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
das
xchg
cmp
hlt
push
cmp
inc
daa
leave
inc
sbb
jmp
inc
int
cmp
dec
xor
inc
pop
int3
inc
and
inc
sbb
inc
cmp
inc
push
lock
push
iret
inc
sub
jmp
clc
call
mov
loopne
add
iret
inc
dec
jmp
sbb
inc
dec
out
adc
call
sar
or
(bad)
adc
inc
sbb
inc
and
jmp
dec
into
jmp
xor
jns
add
xor
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
or
add
adc
add
sbb
add
sbb
(bad)
jae
push
xlat
sti
sbb
inc
xor
inc
and
call
cmp
inc
aam
daa
push
(bad)
add
sar
add
iret
inc
and
sar
pop
xchg
dec
fwait
(bad)
inc
(bad)
icebp
(bad)
ds
(bad)
dec
(bad)
jmp
pushf
idiv
add
inc
cmp
and
out
dec
nop
(bad)
jmp
xchg
inc
ss
adc
inc
xor
inc
pop
enter
int
add
retf
xor
(bad)
cmp
call
inc
aam
sub
test
add
adc
add
or
add
add
add
add
add
add
add
or
add
pop
add
push
inc
cmp
push
(bad)
adc
sar
add
iret
inc
sub
(bad)
cmp
push
test
inc
aaa
fdivrp
or
inc
cmp
inc
dec
loop
xor
(bad)
(bad)
jg
(bad)
(bad)
cmp
iret
(bad)
dec
cmc
(bad)
call
(bad)
jmp
mov
jmp
(bad)
jmp
(bad)
(bad)
ds
(bad)
push
(bad)
(bad)
dec
jp
inc
test
jmp
pushf
clc
dec
ds
add
into
inc
and
int
and
push
iret
jmp
dec
fcos
dec
imul
xor
add
add
add
add
inc
bound
call
dec
xlat
inc
sub
call
inc
sar
ss
sar
adc
jmp
mov
hlt
jmp
cmps
sti
dec
pushf
cld
jmp
(bad)
jmp
(bad)
jmp
(bad)
(bad)
call
icebp
dec
pop
out
jb
cli
push
repnz
call
fs
sbb
call
dec
(bad)
dec
(bad)
jmp
leave
(bad)
call
mov
inc
xor
inc
and
sar
or
iret
push
sar
dec
outs
jmp
rol
add
cmp
xchg
imul
(bad)
or
inc
xor
inc
sub
jmp
dec
sar
push
inc
(bad)
add
call
(bad)
jmp
(bad)
call
(bad)
jmp
sti
jmp
mov
jmp
mov
(bad)
add
(bad)
sbb
jmp
inc
das
fdivrp
add
call
bnd
jne
inc
cs
add
dec
pop
in
arpl
cld
push
(bad)
call
(bad)
call
scas
(bad)
inc
aas
icebp
inc
sub
inc
sub
inc
sub
jmp
dec
sar
cs
sar
xor
xchg
(bad)
js
aam
aas
pop
mov
shl
fdivrp
adc
fcos
add
(bad)
inc
sub
inc
xor
call
inc
sar
add
call
js
jmp
mov
(bad)
jl
std
call
ins
call
jmp
jb
inc
push
in
add
fdivrp
add
inc
ds
add
inc
inc
out
add
inc
cmp
inc
cmp
inc
inc
in
add
inc
ss
add
pop
frndint
inc
repz
mov
clc
inc
daa
fcos
add
aad
add
sar
or
iret
jmp
dec
sar
sub
call
loop
xchg
add
push
jb
jmp
push
fdivr
add
xor
inc
cs
add
aad
or
loop
sbb
fdivr
add
in
add
in
add
inc
ds
add
inc
inc
jecxz
add
inc
dec
jmp
dec
jmp
dec
jmp
dec
jmp
inc
call
inc
pop
call
call
jb
jmp
clc
inc
sub
inc
das
fdivr
add
(bad)
inc
xor
call
sar
and
dec
loopne
jp
out
xchg
cmps
call
add
in
cmp
loope
adc
(bad)
add
fcos
add
xlat
inc
xor
inc
cmp
inc
cmp
inc
cmp
inc
cmp
inc
inc
jecxz
add
inc
inc
out
add
inc
push
jmp
add
inc
inc
call
inc
dec
jmp
add
inc
push
out
inc
push
out
inc
push
out
inc
push
out
inc
push
out
inc
push
out
inc
push
out
inc
repnz
inc
jmp
inc
cmp
dec
ins
jmp
xor
inc
das
fdivr
add
inc
xor
call
inc
(bad)
(bad)
cmp
fdivrp
jo
out
xchg
test
add
pop
and
xor
dec
inc
(bad)
add
fcos
add
fdivr
add
fcos
add
(bad)
add
(bad)
add
inc
dec
out
add
inc
sti
call
cmp
push
jo
inc
push
jmp
add
inc
push
lock
pop
repnz
pop
repz
pop
repz
pop
repz
pop
repz
pop
repz
popa
repz
idiv
sub
(bad)
inc
push
inc
dec
jmp
inc
cmp
inc
aas
loop
add
fdivrp
add
inc
sub
inc
cs
or
jmp
out
xchg
stos
out
ret
data16
adc
jle
jmp
fdivr
add
(bad)
add
inc
cmp
inc
aas
fdivr
add
(bad)
add
inc
dec
out
add
add
lock
movs
std
inc
(bad)
jmp
inc
(bad)
jmp
cmp
add
inc
pop
repz
arpl
inc
gs
add
inc
addr16
add
inc
outs
idiv
and
(bad)
call
fdivrp
jmp
cmps
(bad)
inc
pop
lock
inc
in
add
add
add
loop
add
(bad)
add
fdivr
add
sar
add
aad
daa
push
fdivr
pop
and
call
push
loope
dec
jnp
cli
and
inc
inc
(bad)
add
fdivr
add
(bad)
add
(bad)
add
inc
inc
in
add
inc
pop
lock
sahf
std
inc
(bad)
call
(bad)
call
std
(bad)
call
jl
inc
push
idiv
add
inc
jo
inc
jb
inc
jae
inc
jno
dec
jne
push
(bad)
(bad)
mov
clc
(bad)
call
aad
call
xchg
sti
inc
push
jmp
dec
call
inc
ds
add
aad
add
(bad)
call
push
fdivr
pop
jge
dec
mov
sub
add
add
cmp
pop
pop
loope
add
add
inc
cmp
loope
add
inc
inc
loope
add
inc
push
out
call
test
(bad)
cmp
lock
(bad)
mov
std
(bad)
dec
idiv
inc
jge
inc
outs
clc
inc
je
inc
jnp
inc
jle
inc
jle
inc
jl
dec
(bad)
inc
hlt
(bad)
jmp
hlt
(bad)
inc
(bad)
or
inc
dec
jmp
inc
dec
call
inc
cmp
inc
xor
inc
aaa
xlat
call
dec
(bad)
push
jp
dec
mov
cmp
add
add
call
jmp
pop
loop
add
inc
ds
add
inc
inc
jecxz
add
add
inc
dec
jmp
jmp
test
(bad)
jge
(bad)
push
repz
(bad)
jg
(bad)
(bad)
cmp
idiv
add
inc
jae
inc
jnp
inc
cmp
add
(bad)
inc
test
inc
mov
dec
xchg
(bad)
(bad)
cmp
sar
dec
idiv
jmp
jmp
std
inc
pop
out
inc
push
in
inc
push
jmp
add
inc
inc
loopne
add
fcos
add
fdivr
push
dec
fdivr
dec
jbe
inc
mov
inc
je
jmp
jmp
jecxz
add
inc
inc
loopne
add
inc
inc
in
add
inc
dec
out
add
dec
jbe
call
(bad)
call
fdivr
push
(bad)
dec
mov
inc
test
inc
jae
inc
repz
jp
inc
mov
dec
(bad)
std
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
mov
call
call
dec
scas
std
call
dec
(bad)
push
(bad)
inc
(bad)
inc
pop
lock
pop
lock
push
jmp
add
inc
cmp
inc
cmp
call
(bad)
dec
jne
inc
mov
inc
jge
jmp
data16
add
inc
loop
add
inc
dec
in
add
inc
push
call
call
call
(bad)
dec
(bad)
(bad)
inc
mov
inc
xchg
call
js
inc
repz
cli
call
dec
std
jmp
mov
(bad)
call
std
call
popf
(bad)
call
std
push
(bad)
inc
mov
inc
test
dec
nop
sti
push
mov
(bad)
inc
fs
add
inc
pop
out
inc
dec
out
add
(bad)
add
(bad)
adc
(bad)
inc
jne
(bad)
jg
in
call
add
add
xchg
jmp
xor
dec
push
in
add
add
add
inc
dec
in
add
inc
inc
idiv
pop
cwde
cld
dec
(bad)
inc
mov
inc
mov
dec
xchg
std
call
std
dec
test
inc
fs
inc
sti
jmp
into
cld
(bad)
jge
cld
(bad)
jp
std
call
std
dec
std
dec
aam
jmp
mov
inc
mov
dec
ins
repnz
pop
cmc
inc
push
idiv
add
add
inc
push
call
inc
inc
fdivr
push
push
loopne
dec
ja
(bad)
jle
jmp
xchg
lods
in
sub
add
add
pushf
in
out
inc
js
call
pop
in
add
inc
push
out
add
inc
push
out
add
inc
push
repz
outs
idiv
add
inc
xchg
inc
(bad)
inc
xchg
(bad)
jmp
(bad)
call
xchg
std
inc
gs
dec
sti
dec
in
inc
loop
inc
in
inc
out
(bad)
jnp
std
push
jmp
xlat
sti
push
mov
jmp
fwait
(bad)
dec
sti
inc
ins
repnz
outs
idiv
or
cli
inc
imul
inc
inc
fdivrp
add
call
pop
loop
dec
jl
inc
stos
out
stos
stos
inc
xchg
jmp
push
out
add
inc
pop
jmp
add
add
add
inc
outs
idiv
add
inc
xchg
call
fwait
(bad)
call
mov
(bad)
(bad)
mov
cmps
std
inc
addr16
dec
cmps
sti
call
jmp
(bad)
cld
dec
jmp
jg
(bad)
jmp
sti
jmp
mov
(bad)
jmp
sti
inc
push
sti
(bad)
cmps
(bad)
jmp
sti
inc
repnz
dec
out
add
inc
dec
loope
pop
(bad)
in
push
sub
int3
add
inc
xchg
mov
pushf
popa
xchg
out
jmp
jo
inc
pop
call
call
jo
inc
arpl
inc
push
call
inc
jo
call
cli
inc
mov
dec
xchg
(bad)
(bad)
cmp
(bad)
(bad)
mov
stos
(bad)
inc
push
push
pushf
clc
inc
out
(bad)
(bad)
(bad)
(bad)
(bad)
std
call
mov
(bad)
call
int3
std
dec
ret
std
call
xchg
clc
inc
push
(bad)
cmp
(bad)
push
cwde
cli
inc
popa
out
inc
dec
in
add
inc
imul
inc
add
add
mov
jmp
pcmpgtw
inc
(bad)
jmp
and
jmp
jnp
inc
pop
jmp
outs
idiv
adc
cld
inc
test
call
popf
(bad)
call
(bad)
call
stos
(bad)
inc
jb
call
mov
jmp
lock
(bad)
mov
stos
(bad)
call
(bad)
jmp
(bad)
(bad)
jg
(bad)
jmp
std
(bad)
jge
std
call
mov
repnz
jge
jmp
(bad)
(bad)
jg
cld
push
nop
idiv
add
inc
dec
loop
add
dec
jo
jmp
in
dec
add
add
lods
lock
mov
call
in
inc
jmp
sbb
(bad)
cmp
out
inc
pop
jmp
add
inc
jnp
inc
cmp
add
inc
call
mov
idiv
add
push
sti
inc
in
push
std
inc
nop
(bad)
inc
xchg
(bad)
inc
(bad)
dec
(bad)
inc
std
(bad)
jnp
std
call
(bad)
idiv
add
jmp
cdq
sti
(bad)
js
(bad)
jmp
sti
call
jnp
inc
push
out
add
add
pop
arpl
(bad)
aas
jp
jmp
in
jecxz
mov
add
xchg
mov
mov
icebp
push
jl
dec
jmp
(bad)
out
(bad)
cmp
repnz
arpl
inc
gs
inc
jae
inc
jl
inc
jl
inc
cmp
add
(bad)
inc
xchg
(bad)
inc
cmp
add
jmp
sti
jmp
mov
(bad)
inc
mov
dec
xchg
(bad)
call
mov
std
dec
clc
inc
push
inc
jo
(bad)
aas
movs
cld
inc
sti
jmp
data16
inc
pop
out
add
inc
pop
in
daa
ins
call
(bad)
jnp
in
mov
add
add
stos
repz
mov
call
imul
and
icebp
(bad)
cmp
lock
pop
jmp
add
inc
jne
inc
ja
inc
ja
inc
cmp
add
inc
test
inc
jno
inc
test
jmp
cwde
clc
inc
mov
inc
cmp
add
inc
mov
jmp
cdq
cld
push
sahf
cli
inc
js
inc
lock
xor
push
mov
inc
lock
fs
inc
out
sbb
(bad)
ds
jmp
in
call
xchg
mov
repz
cmp
out
call
jb
push
mov
call
xor
inc
(bad)
in
inc
jno
inc
jae
inc
jo
inc
jnp
inc
jnp
inc
jg
inc
cmp
add
inc
jp
inc
jl
inc
jl
inc
jne
inc
jl
inc
jle
inc
jp
inc
cmp
add
inc
push
lock
jge
inc
jbe
inc
push
in
call
jae
dec
arpl
call
jne
call
in
(bad)
jns
in
add
add
lea
repz
je
jmp
jl
jmp
xor
or
inc
arpl
dec
outs
in
call
js
dec
jae
jmp
(bad)
idiv
adc
clc
inc
push
inc
gs
outs
out
inc
fs
or
inc
jne
call
test
jmp
xchg
dec
jno
inc
gs
inc
jb
inc
jno
inc
outs
icebp
call
jnp
jmp
out
dec
push
jmp
mov
push
in
pushf
mov
hlt
mov
aaa
test
jmp
jnp
jmp
out
call
out
inc
push
inc
in
call
jbe
dec
lock
icebp
push
sub
and
jmp
add
inc
dec
(bad)
add
inc
dec
mov
inc
dec
(bad)
inc
push
sar
sbb
(bad)
aas
mov
call
call
inc
outs
icebp
call
jp
jmp
mov
dec
icebp
push
test
dec
addr16
call
in
push
lock
dec
xchg
inc
mov
repz
imul
lock
sub
and
dec
jo
inc
imul
call
jo
call
pop
(bad)
add
add
inc
pop
mov
inc
pop
pushf
inc
pop
popf
inc
inc
scas
inc
cmp
inc
inc
aad
sub
inc
in
dec
call
out
inc
in
jmp
jbe
dec
jmp
sbb
push
jmp
lods
lock
add
add
stos
hlt
(bad)
pop
call
inc
mov
inc
(bad)
ds
push
xor
sub
and
arpl
dec
dec
(bad)
jmp
jb
inc
cmps
inc
scas
inc
arpl
inc
dec
mov
dec
push
(bad)
or
or
dec
in
adc
jmp
jae
(bad)
cmp
out
dec
mov
add
jno
dec
mov
lods
outs
mov
lock
pop
xchg
icebp
call
icebp
call
icebp
call
lock
out
call
jmp
dec
mov
(bad)
mov
inc
jb
call
pop
(bad)
and
call
in
jmp
dec
out
call
call
out
push
icebp
hlt
mov
hlt
xchg
mov
(bad)
inc
jg
fist
xchg
repnz
popf
mov
hlt
fs
repz
mov
repz
xchg
repnz
(bad)
pop
jbe
dec
jb
call
jb
jmp
jecxz
xchg
lock
sub
gs
repnz
mov
retf
repnz
inc
mov
repz
xor
mov
adc
stos
call
ret
retf
(bad)
(bad)
inc
cmp
dec
push
inc
add
add
loop
ds
lea
dec
outs
mov
adc
sahf
shr
add
add
mov
or
inc
mov
add
jmp
je
icebp
pop
xchg
mov
inc
dec
jg
push
xchg
mov
mov
pop
lods
inc
imul
call
imul
cmp
mov
je
mov
add
add
lea
inc
arpl
inc
pop
mov
inc
pop
pushf
inc
pop
cwde
mov
pushf
rcl
outs
mov
cmps
inc
pop
popf
inc
pop
mov
inc
pop
cmps
inc
pop
cmps
inc
pop
lahf
mov
add
add
jg
add
movs
lds
sub
add
inc
pop
mov
inc
bound
add
stos
or
mov
ret
adc
pop
xchg
add
add
(bad)
cld
add
(bad)
inc
add
add
pop
inc
add
add
add
jg
add
add
add
pop
add
rol
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
lock
add
sldt
lock
add
sldt
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
loopne
add
add
add
loopne
add
add
add
lock
add
sldt
lock
add
sldt
clc
add
add
pop
add
cld
add
add
aas
add
cld
add
add
aas
add
inc
add
add
add
add
add
add
inc
add
add
add
(bad)
clc
add
pop
inc
add
(bad)
cld
ud0
add
(bad)
(bad)
cld
ud0
add
(bad)
(bad)
inc
(bad)
inc
add
(bad)
inc
jg
add
(bad)
(bad)
inc
(bad)
(bad)
inc
ud0
add
(bad)
jmp
ud0
add
(bad)
push
ud0
add
(bad)
(bad)
cld
pop
inc
add
add
add
add
add
add
add
and
add
add
adc
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
pop
add
add
add
add
add
add
add
add
add
cmp
add
cmp
add
add
add
add
add
add
add
add
sbb
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
dec
add
add
add
outs
add
add
add
test
add
mov
add
xchg
add
mov
add
xchg
add
add
add
add
add
pop
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
or
add
adc
add
and
add
xor
add
inc
add
add
add
jp
add
xchg
add
or
add
mov
add
xchg
out
add
mov
add
push
add
jle
add
mov
hlt
add
in
add
dec
rol
add
test
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
cmp
add
push
add
add
add
add
push
(bad)
add
xchg
lock
sub
inc
adc
retf
inc
adc
inc
bswap
inc
and
inc
sbb
retf
inc
pop
int3
inc
push
leave
inc
or
cld
add
call
add
stos
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
or
add
sbb
add
sub
add
inc
add
add
adc
add
mov
jmp
dec
fdivr
add
int
add
(bad)
inc
pop
(bad)
inc
adc
sar
ds
add
es
inc
sbb
inc
sbb
dec
sub
inc
sbb
inc
adc
inc
pop
sar
wrmsr
(bad)
pcmpgtb
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
xor
fdivrp
add
push
push
iret
call
cmp
inc
sbb
inc
sbb
out
add
loop
or
mov
dec
push
loop
add
inc
pop
call
call
xor
ret
pop
(bad)
das
int
sub
loopne
adc
mov
push
add
add
add
add
add
add
add
add
add
add
ficomp
loop
add
int3
jmp
inc
int3
push
push
inc
dec
in
add
loop
inc
sar
ds
dec
(bad)
dec
mov
(bad)
dec
(bad)
(bad)
cmp
dec
jbe
call
addr16
add
int
add
int
push
inc
into
push
push
loopne
xor
aam
add
and
add
add
add
add
add
add
dec
xchg
sahf
xor
aaa
aam
add
iret
jmp
dec
aad
sbb
cld
push
scas
std
jmp
mov
(bad)
dec
in
inc
in
call
icebp
call
push
dec
repz
push
loop
inc
ret
clc
call
push
out
add
sar
add
sar
sub
sar
inc
imul
cwde
imul
fcos
add
aam
or
sar
or
fdivr
sbb
repnz
clc
call
fs
inc
inc
fdivrp
add
in
add
loop
add
inc
inc
jecxz
add
loopne
add
call
idiv
dec
sar
inc
ja
inc
and
inc
sub
call
inc
sar
sub
(bad)
jmp
in
repnz
mov
add
add
popa
and
sub
inc
aaa
xlat
inc
cs
add
aad
add
add
inc
xor
in
add
inc
inc
in
add
inc
dec
jmp
add
inc
dec
jmp
dec
jmp
add
add
inc
push
loope
sbb
fdivr
add
(bad)
inc
xor
call
inc
aad
push
je
dec
add
add
aas
inc
jns
leave
adc
xor
inc
xor
inc
cmp
inc
cmp
inc
cmp
out
add
call
pop
icebp
inc
dec
jmp
inc
pop
repnz
pop
repnz
pop
repnz
pop
repnz
data16
jmp
jo
inc
cmp
inc
inc
loope
add
(bad)
add
sar
add
sar
inc
imul
(bad)
jg
inc
add
add
add
add
loope
dec
je
in
or
inc
xor
fdivr
add
fdivr
add
inc
dec
call
(bad)
cmp
(bad)
push
(bad)
call
js
inc
pop
hlt
inc
push
idiv
add
dec
cli
jmp
(bad)
call
(bad)
(bad)
inc
popa
lock
inc
in
add
inc
cmp
inc
xor
inc
xor
push
pop
fdivrp
sbb
sbb
add
add
add
add
das
inc
jb
cli
pop
dec
(bad)
add
fdivr
add
loopne
add
inc
inc
in
add
jmp
stos
std
call
(bad)
dec
idiv
push
gs
inc
jbe
inc
jl
inc
jne
jmp
cwde
(bad)
jmp
(bad)
(bad)
inc
movs
sti
inc
dec
jmp
add
inc
inc
in
add
fcos
add
(bad)
jmp
pop
(bad)
jl
jmp
add
add
add
add
jno
call
sti
pop
dec
fdivrp
add
(bad)
add
add
inc
dec
jmp
push
(bad)
jmp
(bad)
sbb
sti
inc
imul
add
add
(bad)
inc
xchg
inc
mov
jmp
cmps
(bad)
jmp
(bad)
inc
(bad)
dec
jge
inc
push
in
inc
dec
jmp
inc
ss
and
push
out
popf
mov
aaa
jge
out
dec
jge
sti
or
loop
add
add
inc
dec
in
add
push
(bad)
jmp
(bad)
call
test
inc
cmp
add
jmp
nop
cli
(bad)
cmp
std
dec
(bad)
call
sahf
(bad)
call
std
jmp
std
jmp
pushf
(bad)
jmp
mov
call
mov
inc
pop
hlt
inc
pop
out
inc
inc
in
add
(bad)
pop
pop
fdivrp
jno
call
xor
add
add
add
add
mov
cmc
adc
dec
in
add
inc
dec
out
add
or
std
inc
xchg
dec
xchg
(bad)
dec
std
inc
ins
idiv
addr16
jmp
sar
jmp
std
jmp
std
jmp
aam
call
xchg
(bad)
dec
xor
add
inc
push
hlt
inc
dec
in
add
fdivr
and
push
jmp
add
add
add
add
aam
jae
in
frstor
push
out
add
inc
push
out
add
inc
jo
inc
test
dec
cdq
(bad)
inc
(bad)
dec
jne
push
cli
(bad)
(bad)
sti
(bad)
(bad)
std
call
into
std
jmp
iret
std
call
(bad)
(bad)
cmp
idiv
sub
cmc
inc
dec
in
add
jmp
data16
jbe
jmp
mov
add
mov
inc
pop
call
inc
fs
add
inc
js
dec
mov
dec
sar
xchg
aad
inc
jl
call
clc
jmp
hlt
std
inc
in
call
(bad)
(bad)
jle
(bad)
dec
retf
(bad)
retf
std
call
cmc
jmp
cld
jmp
(bad)
inc
outs
icebp
inc
dec
loop
add
push
jb
(bad)
jge
in
test
call
dec
jae
jmp
xor
add
inc
jno
inc
std
jmp
mov
(bad)
inc
cmp
and
cld
jmp
inc
xchg
(bad)
dec
call
std
dec
test
inc
outs
repz
std
call
inc
pop
jmp
pop
in
dec
jg
inc
add
add
cmps
icebp
xlat
sub
dec
out
push
jno
inc
gs
inc
js
inc
jl
inc
test
inc
xchg
(bad)
inc
test
inc
jnp
call
cli
call
xchg
(bad)
inc
xchg
inc
mov
cld
inc
jae
dec
jg
push
mov
repnz
pop
call
jmp
imul
aad
stos
jmp
add
xchg
icebp
call
jl
jmp
xor
add
inc
outs
hlt
inc
jae
inc
jbe
inc
cmp
add
idiv
add
(bad)
inc
jle
inc
jle
dec
mov
dec
jge
inc
push
idiv
add
dec
push
dec
jmp
dec
jmp
jnp
in
arpl
add
add
nop
repnz
jbe
jmp
xor
add
addr16
call
xor
pop
xor
inc
jne
inc
pop
call
inc
pop
loopne
add
call
xor
add
inc
outs
repz
jle
call
jno
call
jmp
push
in
xchg
mov
repz
push
xchg
repnz
xor
and
out
dec
outs
out
dec
jo
jmp
jnp
call
outs
in
add
add
inc
push
mov
inc
dec
mov
add
call
gs
and
test
(bad)
cmp
call
mov
(bad)
jp
out
mov
dec
mov
ret
lock
lock
jle
jmp
jbe
jmp
data16
jmp
mov
pop
push
inc
push
mov
jmp
imul
jmp
jno
push
jge
dec
icebp
jnp
lock
mov
add
cwd
dec
sub
mov
shl
mov
jmp
imul
fs
bnd
sahf
mov
bnd
(bad)
repz
mov
int3
inc
pushf
(bad)
dec
add
(bad)
cmp
in
ret
dec
sub
inc
addr16
aas
mov
xor
add
add
jne
inc
popa
stos
call
ins
test
cmps
dec
mov
sbb
adc
stos
stos
inc
xchg
sti
add
inc
pop
mov
call
arpl
mov
cdq
mov
mov
or
inc
pop
sahf
inc
pop
movs
inc
pop
mov
add
add
add
mov
pop
sub
pusha
pushf
loope
pop
mov
add
add
push
add
pop
rol
pop
add
add
add
add
add
add
add
add
add
pop
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
lock
(bad)
add
paddb
add
inc
add
cld
pop
(bad)
(bad)
dec
(bad)
(bad)
inc
(bad)
(bad)
inc
jg
inc
jg
jmp
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
inc
mov
add
setb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fwait
hlt
add
(bad)
adc
inc
pop
sar
add
fdivr
add
(bad)
inc
adc
add
dec
mov
add
add
add
add
add
add
add
add
adc
pop
(bad)
call
aas
(bad)
and
clc
call
retf
sbb
inc
xor
dec
aaa
(bad)
sbb
mov
add
add
add
add
dec
xchg
jno
inc
in
or
xlat
jmp
fwait
cmc
call
idiv
push
movs
repnz
retf
pop
ins
jmp
mov
inc
and
jmp
fdivr
jo
into
outs
add
add
cwd
inc
add
(bad)
inc
cmp
out
add
add
inc
inc
jmp
add
inc
push
out
inc
out
add
sar
outs
mov
leave
jg
inc
mov
pop
es
loopne
add
(bad)
add
inc
out
push
(bad)
idiv
add
jmp
jmp
inc
push
inc
cmp
inc
xor
call
jecxz
stos
mov
in
sub
add
loopne
add
inc
std
call
(bad)
dec
cmp
inc
mov
jmp
(bad)
jmp
mov
out
inc
cmp
dec
loope
lahf
mov
sub
jp
jmp
dec
in
add
add
(bad)
jmp
xchg
sti
dec
(bad)
call
mov
dec
cmp
add
inc
inc
loop
dec
jnp
jmp
add
push
addr16
add
inc
jbe
jmp
cmps
(bad)
push
mov
sti
push
(bad)
jmp
push
sti
push
fwait
cli
jmp
hlt
inc
dec
jecxz
pop
mov
mov
add
add
xchg
mov
pop
das
jg
call
imul
add
inc
test
dec
mov
inc
xchg
dec
xor
or
in
call
push
in
pop
jp
repnz
test
dec
jo
call
push
(bad)
inc
pop
enter
in
or
call
out
jmp
jae
jmp
in
xchg
add
add
icebp
dec
data16
icebp
movs
pop
cdq
lock
sub
out
pcmpgtd
shr
lock
lods
cmc
popf
xchg
mov
inc
xchg
(bad)
jmp
jmp
arpl
add
add
retf
imul
jne
push
stos
add
add
add
lds
movs
(bad)
add
mov
loopne
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
(bad)
aas
add
inc
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
sub
(bad)
fdivr
loopne
adc
dec
inc
add
add
add
dec
add
(bad)
fild
inc
add
pop
pop
or
push
or
or
or
or
push
sbb
push
or
push
adc
and
and
and
sub
das
sub
and
xor
xor
cmp
ds
cmp
aaa
cmp
add
or
or
or
sbb
sub
sub
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
rol
or
inc
or
add
and
add
add
adc
inc
add
add
add
add
add
add
add
add
push
pop
or
les
dec
adc
add
add
add
add
add
adc
add
add
add
adc
xor
adc
push
popa
xor
adc
pop
and
adc
and
bound
loope
push
xor
icebp
and
pop
es
ret
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
adc
and
xor
adc
push
popa
xor
adc
mov
push
xchg
rcl
lock
fiadd
or
add
add
add
add
add
hlt
popfw
iret
inc
lods
arpl
scas
ss
fsubp
add
sub
sub
mov
in
xor
inc
jne
jmp
xchg
dec
sub
and
xchg
push
add
ins
out
push
enter
cmp
sub
push
pushf
mov
add
dec
movs
nop
test
mov
shr
add
and
jnp
add
inc
add
mov
ins
push
dec
push
dec
add
inc
add
push
mov
and
stos
add
cmps
fstp
mov
cdq
or
push
fdivr
add
inc
popa
aam
mov
test
add
jnp
push
fs
or
scas
enter
fwait
popf
mov
stos
movs
cmps
cmp
mov
rcl
pushf
loope
pop
out
cmps
adc
jnp
and
pushf
jnp
(bad)
dec
push
out
ins
pop
aam
test
xor
(bad)
in
ss
mov
push
das
test
sub
std
aas
sar
in
and
mov
cmp
retf
mov
mov
or
pop
pop
pop
adc
xchg
mov
div
add
mov
aam
sbb
cli
push
jno
pop
sti
xchg
fiadd
popa
ret
and
push
mov
sub
jno
sub
std
xor
and
stos
or
test
out
mov
push
movs
(bad)
cmp
ins
mov
mov
enter
mov
and
add
test
add
xchg
lods
sahf
push
or
sbb
call
int
mov
test
add
and
fisttp
inc
add
dec
jno
inc
adc
test
adc
add
jmp
add
push
test
cmp
cld
and
adc
pop
or
imul
sub
out
sub
in
adc
fdiv
push
mov
mov
stos
in
inc
add
xchg
push
and
sbb
xchg
inc
test
jae
cmp
mov
push
adc
or
shl
xchg
and
sahf
cld
sub
dec
aas
sub
jp
inc
pop
fs
jge
dec
or
and
adc
fwait
dec
inc
out
ins
icebp
(bad)
cmp
add
lock
cmps
in
mov
sbb
mov
mov
inc
rol
rol
test
adc
test
adc
test
adc
test
adc
test
adc
hlt
inc
sbb
jne
mov
inc
push
inc
movs
ins
sub
cmps
movs
ins
cli
pop
test
mov
stos
add
inc
push
or
sahf
ins
les
scas
mov
dec
add
fld
mov
and
adc
push
push
enter
mov
aas
out
add
mov
cmps
fwait
inc
adc
test
int3
pop
jno
out
mov
fwait
xlat
mov
fstp
add
xchg
sub
mov
and
(bad)
mov
mov
nop
or
or
or
or
and
test
adc
pop
push
cmp
mov
jne
xor
inc
cmp
cmp
daa
inc
push
sub
(bad)
lods
xchg
inc
imul
add
mov
jo
inc
mov
sbb
mov
xor
and
mov
sub
leave
jae
cmp
and
or
mov
es
cld
test
arpl
add
cwde
cld
mov
test
pop
and
fidiv
sbb
dec
push
sbb
int3
out
ret
repnz
or
test
arpl
scas
sbb
pop
jl
add
cs
mov
dec
daa
stos
(bad)
jne
jne
out
lods
out
push
cmp
jle
lea
ficomp
inc
pop
jae
cmp
ins
jne
enter
mov
push
movs
test
into
imul
adc
or
test
adc
sbb
inc
je
sbb
add
ror
xchg
leave
repz
retf
mov
and
and
fcmovb
inc
cmp
mov
cmp
add
mov
pop
stos
mov
or
aad
test
adc
inc
and
add
add
lahf
je
jo
inc
and
inc
and
rcl
sub
push
inc
and
inc
and
inc
and
inc
and
inc
ret
dec
and
(bad)
push
enter
inc
adc
inc
sub
test
add
test
add
test
add
test
loopne
adc
adc
(bad)
mov
adc
inc
add
add
test
sub
or
or
ins
push
jmp
stos
jl
mov
adc
into
rol
sub
mov
push
in
sahf
in
mov
mov
mov
jmp
and
adc
sbb
inc
aaa
xchg
out
push
sar
shl
cld
xchg
test
sub
(bad)
jns
nop
inc
ror
mov
mov
dec
push
mov
jns
in
mov
iret
or
mov
jmp
(bad)
sbb
push
jle
(bad)
or
(bad)
jl
adc
fisttp
div
jbe
adc
je
and
pop
fbld
jb
sbb
imul
int
in
mov
or
xchg
cmp
loope
mov
sti
hlt
push
mov
mov
adc
mov
or
xchg
add
test
sub
retf
jmp
cmp
push
xor
and
xchg
xchg
adc
or
adc
add
pop
pop
sbb
rcr
sub
je
or
push
jae
push
sub
dec
ja
jae
stos
sub
nop
jmp
push
cli
xchg
or
xchg
mov
movs
dec
retf
es
ffree
or
imul
and
test
adc
inc
or
add
adc
push
xchg
push
fwait
ja
mov
loope
ins
xor
mov
push
xor
or
sub
add
test
stos
and
das
jo
ficom
(bad)
add
and
fnstsw
adc
add
test
(bad)
add
out
mov
scas
retf
and
and
out
push
cwde
jg
xchg
add
addr16
push
pusha
mov
pop
aaa
add
push
ja
cmp
fcomp
das
sbb
loop
jno
lods
cmps
dec
jmp
sbb
(bad)
xchg
gs
push
push
and
ret
cmp
jecxz
inc
sub
loope
and
stos
add
sub
pop
fs
and
or
xor
fsubr
xchg
dec
inc
daa
jne
add
mov
dec
mov
imul
or
or
or
or
or
inc
add
test
cmp
sbb
or
clc
push
call
jp
inc
or
or
or
or
adc
and
call
xchg
out
mov
sub
add
adc
dec
pop
pop
or
and
in
mov
xor
xor
add
xchg
sar
mov
test
nop
xor
fbstp
add
dec
push
dec
cwde
fild
push
pop
leave
in
sub
fnsave
icebp
pop
adc
shr
inc
mov
add
or
test
test
adc
adc
or
or
or
or
or
or
or
or
or
or
or
or
or
or
dec
and
stos
(bad)
jmp
inc
adc
inc
adc
inc
adc
inc
ins
imul
enter
jge
push
popa
push
imul
jno
push
and
or
xor
test
add
mov
mov
fwait
xor
pop
mov
inc
mov
or
or
in
ja
and
or
cwde
out
mov
inc
or
add
mov
or
sub
mov
xchg
retf
rcl
sub
lahf
cdq
inc
or
mov
je
sbb
aad
mov
xor
ss
aad
mov
mov
jg
adc
call
lahf
mov
push
pop
vandps
call
and
add
sub
ss
jge
in
xchg
adc
xchg
mov
cld
sub
push
(bad)
mov
int3
or
jnp
movs
nop
enter
test
push
or
or
or
jbe
fwait
mov
mov
and
add
adc
lea
or
push
test
adc
or
fsub
xchg
test
adc
or
or
or
or
or
or
or
or
or
or
or
or
cmp
add
test
loop
xchg
fs
leave
ds
cmp
and
xlat
push
les
adc
push
mov
sbb
idiv
scas
push
ficom
add
cwde
xor
rol
jns
test
mov
mov
and
test
adc
test
adc
test
jmp
movs
xlat
push
push
push
xchg
jno
push
repz
push
pop
leave
jmp
aaa
loope
leave
add
push
outs
repz
lods
jnp
movs
xor
jle
inc
pop
(bad)
mov
loop
dec
sub
push
cmp
aaa
cmc
mov
xor
jg
neg
cwde
sbb
into
loop
outs
imul
mov
add
cmp
or
vaddpd
imul
mov
sub
mov
xchg
and
and
fs
jl
xchg
and
mov
fdiv
jmp
cmp
push
js
push
or
movs
dec
mov
cmc
push
sub
imul
add
out
popf
mov
enter
test
add
dec
adc
push
(bad)
ror
add
mov
scas
aam
xchg
fld
pop
adc
fimul
ins
add
and
and
lds
mov
repnz
mov
js
add
dec
sbb
sbb
(bad)
addr16
and
je
pop
mov
jbe
aam
dec
in
push
mov
mov
or
sub
rol
add
cmc
push
jns
xchg
popa
or
retf
lss
add
inc
sbb
nop
sbb
inc
adc
lods
add
movs
ror
pop
retf
adc
mov
mov
mov
cmc
aaa
movs
xchg
lea
adc
data16
idiv
inc
sub
stos
sbb
daa
mov
push
and
adc
scas
test
sub
mov
jmp
mov
mov
xchg
lods
add
ins
movs
xchg
add
nop
push
dec
add
push
cmp
fsubp
dec
add
pop
push
xchg
adc
adc
adc
push
or
inc
pop
jbe
push
dec
add
test
adc
mov
add
add
add
test
adc
test
sub
and
test
add
lea
imul
xlat
mov
push
or
fdiv
mov
mov
shl
fadd
sbb
mov
xchg
and
add
and
test
add
or
rcr
and
or
pop
mov
and
adc
adc
inc
add
add
pop
aad
clc
pop
shl
fld
jp
xchg
call
xor
xchg
fild
pop
or
sbb
sbb
dec
sub
xchg
(bad)
imul
(bad)
mov
pop
fbld
jnp
and
push
cdq
sti
in
pop
xor
retf
jne
pop
sbb
sub
nop
aaa
push
push
out
mov
test
adc
jo
pop
sub
add
shr
adc
jmp
dec
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
int
sbb
jnp
pushf
ins
sahf
dec
dec
inc
daa
mov
add
or
or
mov
dec
sbb
out
loopne
out
pusha
cmp
dec
mov
or
adc
inc
popa
scas
cmp
sub
adc
in
adc
inc
jle
xchg
jno
and
(bad)
push
sub
in
stc
or
in
cmp
xor
rcr
jle
pop
test
push
movs
pop
cmp
or
or
and
adc
dec
daa
push
xor
mov
clc
test
sub
fisttp
ss
inc
je
and
inc
es
test
add
cwde
push
sub
ret
push
or
xchg
and
outs
dec
(bad)
mov
jne
es
or
or
or
or
or
or
mov
inc
add
xchg
and
test
mov
or
or
stos
sub
rol
sar
dec
mov
mov
adc
test
add
test
add
test
add
adc
or
or
or
pop
dec
inc
or
add
add
jno
loopne
stos
js
lea
mov
pop
jp
ret
outs
enter
retf
cs
out
jmp
sub
inc
adc
adc
adc
adc
adc
inc
adc
jno
fsubr
pop
sbb
lock
mov
cmp
movs
enter
arpl
lahf
sahf
ins
jns
ins
popf
mov
adc
push
mov
and
retf
lods
outs
int3
jae
pop
rcr
imul
mov
xchg
pop
dec
test
test
dec
pop
xchg
gs
paddsb
pop
ds
test
(bad)
frstor
into
push
out
test
dec
test
xchg
lock
es
stos
fsubr
jecxz
xchg
daa
sahf
test
cs
lock
jnp
mov
sar
add
dec
adc
mov
sbb
dec
add
scas
xchg
and
out
inc
sar
leave
ins
loop
inc
xchg
es
sub
sbb
push
and
(bad)
rcr
and
cli
mov
push
add
jns
mov
and
and
xor
sbb
movs
cdq
lods
sub
add
jne
jp
scas
(bad)
scas
jae
fstp
mov
loope
inc
dec
cmc
mov
rol
in
fld
sbb
xlat
xor
sub
adc
sub
in
add
sar
or
je
inc
es
inc
(bad)
fisttp
outs
inc
mov
push
leave
and
add
push
add
retf
inc
stos
and
or
or
or
or
or
or
mov
sbb
add
imul
movs
mov
test
push
sti
push
push
adc
dec
inc
xor
adc
mov
lods
adc
js
add
dec
sub
inc
and
inc
and
inc
out
test
dec
fld
cmps
sub
push
sub
jne
or
or
or
or
xor
mov
ins
and
inc
add
push
retf
or
add
push
adc
adc
add
xor
sub
pop
fstp
dec
movs
or
ror
sbb
sub
movs
add
add
adc
sti
mov
shl
or
or
xchg
ret
inc
mov
xchg
sub
or
or
and
or
cs
popf
mov
test
xor
jne
push
jns
sbb
xchg
sub
aaa
aas
mov
(bad)
sahf
in
into
and
fsub
add
pop
pop
mov
ret
nop
and
jl
and
sbb
push
aaa
sbb
sar
or
iret
cmp
or
or
mov
adc
inc
dec
mov
repnz
aad
fs
sahf
out
sbb
pop
push
movs
add
mov
out
jge
inc
nop
test
adc
repz
aas
stos
retf
data16
sbb
cmp
add
(bad)
sar
hlt
or
cmp
push
xor
stc
inc
(bad)
out
sahf
shl
push
mov
not
jno
fsubr
dec
xchg
repz
sahf
fbld
pushf
dec
lea
ficom
rcl
push
ins
dec
pop
jbe
and
inc
pop
cli
inc
mov
and
inc
and
inc
and
inc
and
adc
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
int
adc
xlat
in
and
push
hlt
xchg
ret
push
sbb
nop
out
rcl
ins
mov
arpl
iret
xchg
sub
mov
imul
ret
or
sbb
frstor
fbld
sti
adc
leave
mov
mov
inc
push
out
adc
sahf
movs
mov
mov
stc
movs
jmp
dec
loope
or
mov
or
or
or
or
or
or
call
cmp
jb
call
int3
dec
(bad)
and
add
shl
sti
and
sub
adc
pop
add
dec
in
jecxz
aad
ins
pop
sub
dec
ins
sbb
imul
fld
jns
and
outs
movs
xchg
xor
js
jns
and
jne
or
mov
mov
dec
add
test
add
mov
stc
xchg
fucomip
cmp
mov
cmp
out
scas
call
stos
inc
push
inc
leave
sti
push
retf
xor
fsub
jp
push
inc
or
or
or
imul
or
dec
imul
jae
jl
movs
xchg
ds
jge
shl
test
add
(bad)
xchg
outs
jne
std
shl
add
inc
add
and
test
adc
sbb
fstp
push
inc
add
inc
add
inc
add
inc
and
dec
call
add
inc
adc
adc
and
add
and
add
or
or
or
or
or
ret
cmp
mov
pusha
jge
cmp
add
test
adc
test
jns
in
add
xchg
add
xchg
adc
mov
inc
adc
inc
adc
inc
adc
mov
shr
jl
sub
cmps
push
mov
in
or
call
adc
daa
cmps
nop
jle
push
shr
inc
ds
aas
je
fsub
pop
sub
xchg
cmp
add
in
dec
cdq
sub
cmp
pop
lea
cmp
aam
add
push
call
fnsave
popf
and
sub
add
dec
xor
push
call
sbb
and
(bad)
mov
and
int3
ret
leave
(bad)
icebp
cmp
cmps
add
ins
outs
retf
(bad)
jb
mov
(bad)
enter
shl
cmp
add
jecxz
xor
lea
jae
pop
sahf
test
ret
mov
mov
jo
adc
fs
dec
outs
(bad)
repnz
xchg
movs
(bad)
jnp
iret
jne
shr
dec
add
push
(bad)
fbstp
int
fs
pop
imul
xchg
mov
pop
or
add
xchg
(bad)
pop
arpl
push
call
jmp
mov
nop
or
or
or
or
or
or
add
cmp
inc
dec
lods
mov
xor
add
loop
in
push
dec
dec
dec
push
movs
cdq
jno
mov
jno
nop
(bad)
lods
cld
xlat
fsub
mov
dec
mov
lds
push
xchg
imul
jecxz
mov
movs
and
mov
dec
inc
add
sub
nop
sbb
or
and
or
adc
rcl
cmp
mov
or
or
or
mov
jbe
lods
and
adc
ins
and
jo
and
xchg
fcmovb
jns
adc
and
popa
add
pop
stc
push
in
mov
ror
loope
sbb
inc
es
and
or
nop
or
and
test
add
add
mov
test
and
inc
stos
inc
and
inc
and
inc
sub
test
push
out
out
stos
inc
push
dec
fwait
sub
mov
or
inc
fs
or
xor
hlt
inc
push
push
leave
mov
cmp
call
adc
test
sti
and
dec
dec
and
out
retf
adc
test
push
mov
mov
pop
cmp
sub
dec
mov
retf
ret
arpl
cmp
shl
dec
jnp
dec
fsub
adc
jns
out
inc
sar
in
dec
jno
and
inc
adc
push
sbb
adc
xor
xor
jle
inc
ins
daa
mov
es
fwait
pop
or
test
inc
dec
push
imul
xchg
mov
xor
mov
add
and
adc
inc
outs
mov
add
or
or
or
or
or
or
push
pop
push
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
xor
call
xchg
jns
jo
out
hlt
imul
test
pop
pop
hlt
mov
in
fwait
pop
xchg
inc
and
cmp
mov
sub
sub
and
cmp
call
repnz
daa
pop
dec
shl
(bad)
mov
xchg
(bad)
mov
push
lahf
test
and
mov
std
fcom
sar
jbe
jbe
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
or
or
mov
inc
add
inc
add
xchg
jecxz
mov
ror
fdiv
jle
push
push
jns
retf
pushf
dec
and
dec
mov
dec
jne
aam
es
or
repnz
cmp
xchg
in
add
mov
or
push
pop
test
cmps
push
mov
dec
in
loope
fld
mov
js
sbb
mov
(bad)
cld
xchg
jnp
int
ror
pop
add
adc
xor
jo
xchg
mov
add
push
jo
lods
scas
mov
xchg
inc
and
es
xchg
xchg
(bad)
dec
(bad)
ins
test
stc
push
test
loope
leave
xor
cli
mov
jle
test
and
inc
shl
mov
add
xor
inc
push
fcomip
mov
cmp
mov
or
or
or
or
and
xchg
mov
mov
stos
inc
add
lds
add
test
add
test
add
test
add
test
add
mov
add
and
add
or
or
or
or
or
or
inc
rol
cmp
mov
popf
and
mov
repz
fst
fwait
sub
add
test
add
inc
inc
add
test
adc
test
pop
fnstenv
sub
popf
push
add
pop
je
push
and
adc
add
nop
nop
test
rcr
mov
pushf
sar
pop
cmp
push
and
adc
dec
mov
add
test
sti
cmps
push
jp
add
adc
add
xchg
nop
push
or
mov
sub
mov
dec
xor
push
test
cmps
sbb
adc
and
aad
out
je
mov
xchg
popf
out
mov
mov
and
inc
outs
xchg
ds
jne
stc
push
sbb
dec
mov
push
xor
mov
lahf
jne
inc
es
rdtsc
movs
sub
jo
inc
rcr
fst
scas
jge
and
mov
or
lods
rcr
push
retf
push
stos
inc
push
jnp
dec
repnz
or
dec
inc
and
inc
xchg
add
test
xor
or
add
test
add
sub
cmps
shr
cdq
aaa
aad
fwait
sub
xchg
mov
test
cmp
push
xor
call
aam
push
push
xor
div
jecxz
jnp
sar
je
shl
pop
cmps
push
fs
mov
push
jmp
mov
xchg
adc
xor
or
adc
and
inc
and
inc
and
fld
inc
pop
adc
push
mov
cmp
mov
popa
adc
daa
mov
rol
push
sub
mov
push
sahf
loope
pmaddwd
pop
xchg
test
in
cmp
and
out
aaa
inc
loopne
pop
mov
jecxz
xchg
jle
dec
mov
outs
dec
jae
test
aaa
int3
aas
jp
mov
rcr
push
dec
or
mov
mov
xor
cs
add
sti
mov
jbe
lock
test
repnz
inc
fiadd
or
mov
xchg
call
push
div
mov
mov
out
cdq
adc
cmp
and
cld
(bad)
cmp
mov
push
adc
jmp
sub
es
jg
or
je
pop
adc
add
inc
nop
adc
push
lds
or
and
adc
test
jp
ja
loope
imul
(bad)
sbb
sbb
push
jp
mov
xor
cwde
xor
imul
rcr
rcl
out
popf
call
sbb
jecxz
scas
test
inc
test
jecxz
mov
add
adc
pop
test
aam
or
test
pusha
pop
ss
adc
adc
ds
mov
fld
cmp
cmp
mov
adc
enter
xor
loope
sbb
lods
fsubr
jo
or
(bad)
push
imul
adc
pusha
mov
push
mov
and
repnz
iret
push
inc
lds
(bad)
jne
jb
sbb
lea
ss
xor
sbb
rcl
test
loope
and
jae
lods
sub
mov
or
and
add
or
or
or
test
adc
inc
adc
inc
adc
inc
adc
dec
mov
sbb
out
rol
mov
jp
inc
jmp
sar
push
sub
inc
popf
or
or
or
or
push
add
inc
push
test
and
xchg
and
add
dec
sub
push
leave
add
cmp
cmp
mov
pop
or
test
and
cmp
mov
aam
fiadd
xchg
loopne
movs
test
ja
inc
jae
push
xchg
and
test
add
rol
pop
push
nop
test
adc
test
adc
add
sub
or
jno
cmp
out
sti
movs
pop
inc
add
mov
adc
adc
sub
dec
xchg
or
sub
outs
add
mov
sbb
fcomip
fcomp
cmp
push
dec
cwde
in
cwde
pop
fstp
add
jp
pop
call
mov
stos
ret
fiadd
mov
pop
(bad)
aas
dec
jle
std
add
fadd
retf
leave
pop
dec
push
rcr
(bad)
mov
jecxz
(bad)
xchg
cmp
cmp
mov
add
mov
and
pop
(bad)
or
test
push
(bad)
sti
test
inc
out
mov
dec
ror
push
jne
pop
cmp
aaa
sbb
mov
mov
out
mov
or
sbb
xchg
rcr
dec
cbw
imul
or
dec
sahf
push
add
and
test
adc
test
adc
test
adc
test
adc
test
adc
test
adc
test
adc
test
adc
(bad)
in
fcmovbe
ds
xor
and
add
or
or
xlat
and
test
adc
test
adc
test
adc
cmp
xchg
js
pop
sub
or
push
loopne
shr
and
mov
and
test
jl
xchg
push
push
xchg
sbb
inc
sti
sub
sub
sbb
cmps
sahf
push
cmp
jbe
sub
ret
pop
inc
pop
push
xor
repz
scas
adc
fild
sbb
dec
pop
xchg
pop
inc
jbe
rcr
jmp
pop
popf
push
push
stos
sub
rcr
dec
je
mov
or
or
ja
jge
daa
sahf
add
and
or
mov
xchg
daa
mov
xchg
dec
dec
push
sub
sub
ror
inc
and
mov
gs
xor
add
inc
nop
and
or
or
or
or
or
or
adc
test
je
sub
aad
stos
inc
adc
push
call
push
inc
dec
sbb
adc
ret
or
cmp
add
pusha
mul
or
jp
je
cmps
stos
sbb
sbb
push
or
sbb
test
retf
mov
dec
fwait
inc
cmp
nop
adc
add
or
cmp
pop
stos
pop
fisttp
adc
fld
push
dec
and
adc
and
adc
add
and
add
jge
jg
pop
mov
push
sbb
fld
fistp
sbb
pop
jp
sahf
ficom
out
fld
je
sar
inc
je
retf
and
in
xchg
pusha
add
mov
ret
or
or
and
test
and
add
or
add
mov
sub
xor
adc
inc
jge
inc
and
inc
and
inc
and
inc
jl
aaa
xchg
in
xchg
inc
jae
or
jae
arpl
jno
repnz
inc
(bad)
out
mov
ins
and
and
icebp
jno
int3
xchg
inc
or
push
out
pop
jae
add
(bad)
dec
gs
cmps
aaa
call
mov
or
ss
pop
inc
nop
movs
pop
mov
aas
stos
mov
xor
or
outs
loopne
sbb
xor
ss
mov
xor
gs
fld
mov
popa
rol
pop
mov
add
inc
inc
or
in
mov
mov
aam
or
mov
mov
mov
add
mov
sbb
vpshab
mov
ja
je
dec
fadd
inc
rcl
(bad)
jmp
fwait
pop
cmp
push
xchg
mov
push
nop
add
(bad)
arpl
inc
pop
jne
outs
xchg
in
pop
(bad)
sar
or
add
mov
mov
cmp
mov
ret
fcomp
add
ret
(bad)
push
push
cmp
sahf
ins
push
mov
push
das
push
fs
xlat
push
xchg
inc
hlt
sbb
popf
push
mov
and
pop
retf
dec
cmp
jnp
and
mov
fdiv
rcr
mov
pop
mov
mov
pop
cmp
or
inc
jp
push
inc
int3
xchg
mov
pusha
cmp
sbb
outs
loope
xchg
or
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
push
(bad)
mov
out
add
push
in
in
adc
xchg
inc
iret
ss
je
mov
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
ret
mov
inc
fldenv
adc
add
test
xlat
(bad)
mov
or
or
or
or
inc
enter
add
(bad)
mov
sub
add
or
inc
adc
nop
test
shl
inc
sahf
out
jno
xchg
adc
inc
adc
inc
adc
inc
adc
inc
adc
mov
nop
and
and
push
call
ss
out
mov
fmulp
test
inc
and
push
pusha
jns
inc
pop
rcr
ja
pop
stc
cmp
call
shr
rol
sahf
leave
add
dec
cmp
inc
lds
or
imul
popa
sbb
icebp
push
push
pop
push
mov
aas
push
sub
clc
pop
fs
jbe
and
call
fild
jmp
jb
push
add
ror
pop
(bad)
sti
adc
mov
mov
mov
mov
ds
xchg
aas
push
xchg
sub
repnz
cmp
pop
rol
test
adc
mov
fucomp
in
cmp
or
or
or
or
adc
and
mov
mov
adc
pop
or
mov
add
and
clc
jae
out
loopne
push
mov
add
shl
cmp
inc
adc
inc
adc
inc
add
nop
movs
stc
sbb
je
inc
and
inc
and
call
inc
adc
adc
adc
adc
add
add
test
add
icebp
dec
sbb
mov
out
jmp
call
adc
adc
inc
and
test
add
mov
fwait
dec
stos
aam
scas
sub
ret
popf
mov
inc
in
repnz
rcr
jmp
sub
push
mov
rol
in
push
fmul
push
cwde
and
shr
mov
push
xor
push
sub
fnsave
loopne
push
shl
mov
test
xchg
xor
call
cs
imul
outs
ret
xor
inc
movs
je
cmc
push
arpl
stos
(bad)
aas
gs
xchg
ror
fld
cmp
fsub
xor
js
mov
sub
mov
xchg
adc
out
adc
pop
cmp
mov
sbb
mov
daa
dec
loope
inc
xchg
and
inc
rol
inc
nop
test
adc
test
adc
in
pop
je
inc
push
push
or
sub
shl
inc
pop
sub
es
mov
nop
test
add
cmp
in
add
fsub
mov
sbb
loop
sahf
add
jl
xchg
fs
test
lahf
adc
inc
ret
loope
and
test
and
stos
inc
adc
inc
jge
or
or
adc
or
add
inc
in
push
mov
rcr
dec
and
push
inc
nop
test
or
dec
inc
nop
cdq
mov
add
and
mov
or
pop
push
enter
leave
not
cs
dec
or
aam
push
fld
inc
adc
jmp
out
cmp
dec
nop
or
pop
retf
repz
adc
shl
inc
aaa
push
aaa
sub
mov
or
test
adc
add
in
xchg
mov
mov
fistp
mov
and
xlat
data16
retf
jg
cmp
inc
(bad)
mov
dec
(bad)
in
in
jnp
and
fsubp
out
movs
fwait
and
add
adc
xor
cmp
dec
or
test
mov
jecxz
inc
stos
or
cmp
pop
jo
scas
push
frstor
add
data16
inc
call
xor
fisttp
adc
and
push
sahf
test
sti
test
lods
jmp
mov
jo
outs
jmp
into
pop
jle
or
shr
mov
xchg
stc
retf
test
cli
jl
mov
jb
jbe
iret
xor
lea
ja
scas
jne
or
push
fmul
std
pop
and
xor
loope
cli
xchg
push
mov
xchg
lds
cmp
xor
stc
pop
xchg
sub
pop
sub
mov
sub
neg
mov
pusha
push
dec
xchg
test
pop
or
mov
(bad)
xchg
ror
in
inc
xchg
mov
call
aas
or
dec
add
fcmove
ins
imul
fisttp
gs
fisub
mov
add
adc
mov
inc
xchg
sahf
idiv
cs
fwait
aam
lock
arpl
and
in
in
pop
and
or
pop
stc
pop
mov
data16
pop
sbb
xor
jno
das
cmp
fadd
loope
mov
fwait
test
arpl
scas
(bad)
leave
xor
inc
inc
les
push
adc
xchg
aaa
lods
sub
adc
or
inc
add
inc
add
inc
add
and
or
or
imul
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
and
test
adc
sub
and
test
adc
test
adc
adc
je
mov
loop
dec
add
or
push
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
fsubr
rol
clc
loop
stos
pop
and
cmp
sar
(bad)
xor
dec
mov
ja
mov
sbb
mov
ret
add
mov
ret
jns
mov
add
add
test
stc
jo
std
scas
cmps
(bad)
gs
sar
sti
xor
mov
arpl
in
dec
jo
popf
scas
imul
adc
mov
fcomp
sbb
push
sub
xor
mov
and
(bad)
or
xchg
in
push
add
or
adc
into
jne
jno
ror
add
arpl
and
add
or
or
or
or
rol
adc
shl
or
or
or
or
or
or
or
or
dec
lods
jae
add
leave
inc
cdq
adc
inc
mov
adc
lods
mov
(bad)
sub
scas
retf
adc
adc
fadd
and
inc
and
inc
and
inc
and
inc
and
inc
and
adc
inc
adc
inc
outs
jno
mov
and
inc
and
inc
and
inc
and
inc
sub
aaa
cmp
sar
sub
add
xchg
inc
adc
inc
adc
inc
adc
push
jae
sub
mov
or
or
or
cmp
out
(bad)
jb
or
sbb
call
fld
test
adc
or
adc
retf
and
inc
and
inc
and
inc
ret
push
or
movs
popf
cld
and
lea
(bad)
imul
mov
pop
jp
daa
push
add
ror
(bad)
mov
stos
ins
ins
popa
aaa
fs
add
mov
push
lods
cs
test
dec
dec
movs
add
in
sub
mov
add
and
xor
or
and
mov
test
push
test
ds
push
sub
ss
mov
inc
and
inc
ret
add
movs
and
adc
cwde
add
cdq
dec
add
cmp
cmp
dec
cmp
imul
rol
or
add
sub
loop
fs
dec
frstor
inc
xchg
xor
addr16
and
adc
sub
(bad)
pop
and
movs
cmp
sub
pop
loope
cmp
out
inc
cmp
ins
std
ret
faddp
push
xor
stos
mov
and
jnp
stos
dec
and
jl
test
sti
and
sub
fst
(bad)
or
add
jbe
fbld
adc
sub
adc
test
add
out
mov
inc
inc
jbe
cmp
add
imul
out
mov
add
rol
xchg
nop
add
push
add
leave
scas
test
fstp
loope
sti
and
push
jl
nop
and
sub
test
adc
test
adc
test
adc
ror
add
or
or
push
xor
pop
add
sub
scas
arpl
clc
or
mov
sub
cdq
shl
(bad)
out
jns
into
xor
out
push
scas
xchg
push
addr16
mov
inc
fbstp
sub
dec
(bad)
sbb
retf
adc
(bad)
mov
adc
pop
and
arpl
add
lahf
aaa
and
mov
mov
push
push
or
pop
and
(bad)
pop
jo
pop
cld
scas
cmp
jo
shl
movs
mov
out
sub
es
mov
cmp
xchg
xchg
adc
adc
js
jb
push
pop
fst
mov
cdq
pushf
out
sub
in
stos
and
idiv
cmps
push
xchg
mov
push
sbb
int3
nop
fldenv
jmp
je
addr16
ss
aas
jmp
adc
int
(bad)
push
cvtdq2ps
push
jmp
fcmovbe
cmp
stos
push
mov
cmp
popf
movs
test
les
xlat
xor
mov
xchg
pop
mov
mov
js
push
xchg
adc
shl
sub
fdiv
loop
or
mov
push
push
dec
mov
imul
int3
leave
sbb
pop
repnz
idiv
test
pop
idiv
movs
fistp
dec
mov
adc
test
adc
test
adc
test
adc
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
inc
adc
adc
mov
ss
jns
push
cmps
lea
ret
mov
test
(bad)
stc
test
leave
(bad)
ins
xlat
dec
ret
dec
jmp
outs
pop
push
retf
imul
pop
jg
jae
out
mov
call
clc
es
repz
lock
inc
cmp
ds
mov
jmp
cmp
sbb
pop
out
in
fsub
icebp
xor
mov
xchg
lds
jle
pop
es
jmp
jb
enter
jmp
nop
outs
ja
cld
mov
or
or
or
or
or
or
nop
test
adc
test
adc
test
adc
outs
out
dec
xlat
retf
add
inc
add
inc
add
inc
add
dec
or
and
ret
sub
aam
ins
fld
jge
fimul
push
fs
xchg
add
add
push
cmps
mov
xor
fwait
shl
xlat
mov
in
dec
(bad)
jmp
test
stos
addr16
imul
xor
pop
std
mov
test
fwait
ss
push
add
test
adc
test
adc
test
adc
test
adc
jbe
movs
add
inc
adc
adc
inc
adc
inc
adc
inc
adc
or
mov
test
or
xor
or
inc
push
add
adc
push
leave
push
adc
adc
adc
add
push
ins
outs
js
mov
inc
add
mov
test
pop
daa
test
dec
xor
mov
adc
or
push
add
or
adc
add
adc
or
or
or
loope
xchg
adc
dec
and
mov
or
or
or
or
or
cmp
popf
push
add
dec
xor
adc
xchg
push
or
inc
add
test
adc
or
or
sbb
or
test
add
adc
sub
sbb
lods
or
test
lods
mov
test
or
dec
xchg
cmp
cmp
sub
retf
retf
and
ds
push
add
add
adc
inc
xchg
rcl
mov
sub
inc
mov
add
sub
fs
add
inc
adc
adc
loop
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
jbe
out
pop
in
xor
xchg
pushf
mov
or
adc
xchg
and
test
jae
pop
inc
sub
mov
jecxz
repnz
in
mov
xor
shl
ss
loopne
pop
mov
xchg
call
paddd
fistp
mov
fs
scas
dec
sub
dec
loopne
mov
mov
pop
pop
xchg
call
call
lea
mov
mov
out
frstor
stos
mov
adc
out
nop
fcmovne
fcmovnbe
repnz
jnp
mov
fdivr
imul
cs
or
ss
pop
pop
or
in
pop
aas
stos
mov
push
shl
cli
ja
inc
sbb
xor
inc
(bad)
and
call
outs
cmp
pop
cdq
lea
lods
xchg
mov
shl
xor
jo
sub
jns
xchg
scas
das
xor
ror
inc
pop
fwait
iret
push
shl
xchg
sub
lds
test
jmp
cmps
std
iret
jne
repz
in
xor
retf
fsub
cmc
xchg
fist
rcl
popa
cmc
jmp
fs
mov
push
mov
shr
add
inc
adc
adc
adc
adc
add
add
test
add
cwde
mov
add
or
or
or
or
or
or
or
or
or
or
or
or
dec
in
nop
xor
fnsave
sub
mov
mov
cmp
es
dec
sti
sti
sub
mov
adc
nop
inc
fs
sub
std
sub
xchg
mov
movs
sbb
pop
mov
jle
adc
inc
mov
test
adc
adc
fidiv
fdecstp
dec
mov
sbb
cmp
push
test
add
mov
jecxz
inc
ins
add
cmc
sub
add
out
ds
jo
or
jp
hlt
and
sub
inc
jecxz
ss
scas
dec
cmp
push
rcr
dec
or
fcmovne
repz
cdq
out
xchg
call
xchg
inc
aad
das
cmp
aad
inc
adc
test
out
add
inc
adc
mov
fldenv
adc
test
adc
test
adc
rol
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
pop
sbb
xchg
movs
push
fsub
fmulp
mov
mov
jmp
and
fisttp
or
mov
jecxz
daa
mov
ds
xlat
push
cmps
sbb
push
fld
imul
mov
mov
cmp
dec
add
sub
sub
xlat
ds
mov
outs
sbb
test
or
xchg
push
test
mov
cmp
adc
test
adc
test
adc
test
jno
out
and
mov
or
ds
mov
adc
add
inc
adc
pusha
jns
iret
imul
sub
test
add
test
add
add
inc
add
inc
add
inc
add
inc
add
test
adc
test
adc
test
sub
mov
adc
xchg
xor
adc
add
dec
dec
sub
and
nop
add
and
sub
jnp
fimul
xchg
xchg
in
arpl
and
sbb
ror
xor
cmp
ja
pusha
jo
hlt
repnz
inc
or
adc
xchg
inc
pop
or
add
or
or
or
xor
ror
and
or
add
xchg
pop
add
push
xchg
sub
movs
adc
push
stos
stos
adc
inc
adc
push
mov
mov
mov
inc
adc
inc
inc
pop
dec
sub
adc
dec
xchg
movs
push
test
test
dec
add
clc
inc
fisttp
cmp
push
inc
xchg
sbb
nop
sbb
dec
or
add
(bad)
(bad)
pop
mov
in
adc
or
mov
es
mov
adc
aad
fdivr
leave
push
arpl
adc
mov
inc
xchg
arpl
add
mov
add
or
and
lods
sbb
sbb
stc
inc
sar
jg
pop
add
movs
and
test
adc
test
adc
push
add
inc
add
ins
fimul
ds
add
loopne
jb
sub
and
jnp
loope
ss
xor
ret
repnz
lock
and
pop
fstp
loop
xchg
ret
retf
inc
enter
lahf
mov
lahf
xchg
in
aaa
inc
mov
repnz
gs
xchg
cwde
mov
aam
out
int3
test
pop
rcr
cmps
ror
es
pop
in
push
fild
stos
push
mov
js
push
sub
es
mov
stos
(bad)
and
cmp
sets
bound
scas
gs
xchg
clc
icebp
mov
mov
mov
fs
mov
pop
fidivr
scas
jae
fstp
test
mov
adc
(bad)
sub
and
loope
(bad)
(bad)
or
fwait
push
add
push
rol
mov
jl
cmc
pop
push
jno
outs
(bad)
mov
pop
push
pop
mov
inc
xlat
(bad)
jecxz
xlat
addr16
data16
sub
adc
push
(bad)
mov
adc
gs
mov
ret
scas
loop
mov
xchg
shl
cwde
out
push
mov
pop
add
das
arpl
dec
xor
xor
dec
and
add
jae
fistp
push
push
repnz
jae
(bad)
ja
sbb
gs
sahf
cmp
jnp
mov
jmp
and
add
or
or
or
or
adc
inc
adc
adc
adc
adc
adc
adc
adc
adc
pushf
jle
jo
adc
push
cmp
sub
test
adc
test
adc
test
adc
dec
and
cmps
adc
fwait
mov
in
mov
shl
pusha
outs
pop
test
stos
nop
(bad)
pop
aam
inc
jb
jns
dec
push
xchg
jae
outs
loope
jae
pop
jbe
sub
daa
gs
and
mov
inc
hlt
sbb
jae
sub
push
sbb
add
lods
add
ins
push
aas
test
inc
in
lods
jae
xlat
xlat
(bad)
pusha
mov
loope
sub
imul
(bad)
or
in
mov
(bad)
inc
sbb
jge
js
inc
add
add
sbb
cld
outs
pop
lods
adc
cmp
into
stc
in
test
daa
(bad)
imul
std
(bad)
jge
jae
loope
sub
lds
push
test
push
and
movs
add
test
adc
test
adc
push
fimul
add
test
add
mov
or
or
or
or
or
adc
inc
test
sub
inc
add
ror
xchg
popa
push
adc
and
inc
ret
fwait
inc
arpl
fidivr
rcl
dec
sbb
cmp
inc
and
inc
and
inc
and
inc
and
inc
jne
add
mov
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
push
xchg
fs
inc
add
and
test
adc
inc
and
inc
sub
imul
or
or
mov
movs
pop
sub
adc
pcmpeqb
add
inc
add
mov
adc
test
adc
loopne
mov
outs
push
add
dec
rcl
add
sti
adc
enter
arpl
add
sub
adc
movs
xchg
push
or
loop
ss
push
dec
test
xor
push
dec
movs
or
push
and
ds
xor
and
mov
mov
xchg
adc
inc
adc
dec
mov
and
add
or
mov
xchg
push
repz
adc
movs
sbb
adc
push
or
or
sub
and
inc
nop
test
adc
call
inc
adc
test
inc
push
add
cli
jns
inc
mov
dec
mov
or
mov
aad
enter
imul
xor
or
inc
adc
sti
adc
mov
aaa
lahf
xchg
mov
adc
inc
in
adc
mov
nop
or
jns
shr
mov
out
sahf
retf
push
pusha
mov
in
ins
sahf
adc
cmp
ins
mov
add
rol
push
push
mov
jne
addr16
and
cmp
popa
test
ret
enter
rol
cdq
jne
inc
or
inc
xchg
cwde
loop
bound
sub
jmp
inc
adc
or
and
push
test
adc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
ror
fldenv
test
xchg
cld
fadd
and
out
add
outs
sbb
(bad)
mov
xchg
daa
mov
jno
adc
(bad)
pop
imul
xchg
cwde
mov
jl
inc
sbb
jmp
imul
cmp
js
jmp
lock
mov
ja
std
xor
push
cdq
in
xor
arpl
in
ds
sar
out
jne
or
push
rcr
pop
sbb
out
and
scas
jmp
fwait
jnp
mov
mov
jge
shr
ds
push
shl
inc
sub
test
xlat
stos
inc
add
mov
call
mov
xchg
in
sub
jae
popa
loopne
adc
and
inc
test
lea
outs
(bad)
nop
inc
fnsave
out
mov
mov
(bad)
(bad)
cld
sub
das
pop
xchg
inc
add
add
adc
mov
enter
loopne
push
and
dec
sub
lea
movs
and
add
or
ss
mov
adc
xchg
popf
sub
nop
fs
jmp
mov
lods
fs
jmp
sub
add
(bad)
outs
shl
sub
loopne
jno
mov
test
xchg
xlat
pop
fs
push
(bad)
cmc
inc
retf
or
in
pop
fs
(bad)
repnz
push
lahf
mov
outs
dec
mov
imul
gs
std
rcr
ja
pop
arpl
xor
loope
xchg
pop
iret
xchg
or
js
adc
push
xor
inc
inc
cli
mov
fild
xor
push
xchg
aas
xor
lahf
xchg
sub
sub
sbb
in
mov
mov
push
xchg
shr
mov
mov
sub
inc
(bad)
fisubr
push
cmp
xor
add
xchg
call
dec
cmp
out
frstor
fsub
fwait
jno
add
(bad)
push
cmp
imul
sub
imul
aad
int
mov
lock
mov
aaa
fdivr
imul
or
fistp
jp
daa
shl
outs
jbe
mov
fdiv
loop
inc
test
je
inc
repz
retf
stc
dec
in
sub
inc
test
inc
sbb
adc
icebp
mov
push
inc
enter
in
ss
mov
movs
ret
jp
call
xor
out
sub
and
xor
jne
xchg
lock
outs
lods
or
xor
icebp
pop
les
push
jp
fnstenv
or
scas
rcr
mov
sbb
jns
hlt
(bad)
jmp
mov
in
sub
das
test
test
sahf
jge
mov
mov
jge
into
and
out
pop
inc
ret
or
xchg
pop
imul
stos
shl
sbb
aas
sub
adc
scas
retf
iret
test
clc
push
jg
retf
xor
jno
loopne
sbb
add
dec
or
mov
cmp
sar
mov
mov
jg
enter
inc
cld
and
dec
loop
xor
ds
paddw
(bad)
push
or
xchg
mov
xchg
in
es
push
cmp
push
cmp
jmp
gs
push
fisttp
pop
cmp
add
sub
test
in
test
adc
test
adc
xor
mov
imul
fst
lock
add
inc
add
dec
lods
jae
nop
dec
jnp
or
call
inc
sbb
ins
xchg
shl
test
cmp
push
out
cmps
fwait
jg
adc
idiv
inc
shr
inc
and
sub
mov
pushf
dec
jno
cmp
pop
mov
inc
pop
pop
xchg
jg
stos
or
push
outs
adc
jno
pushf
test
loop
sti
sar
(bad)
dec
fs
ja
mov
pop
sbb
fnsave
repz
js
dec
or
add
stos
and
xchg
sub
int3
cmp
stos
pop
sbb
dec
mov
outs
cmp
mov
iret
(bad)
xor
mov
jecxz
in
mov
sbb
xor
loopne
adc
xchg
ret
les
outs
imul
cmps
jmp
enter
dec
shl
xchg
imul
push
test
shr
rol
and
add
or
or
or
or
or
or
mov
pop
and
sbb
fcomp
aam
outs
aad
add
or
or
or
dec
jmp
test
add
cmp
mov
cmp
or
jl
test
pop
mul
inc
xor
imul
out
out
push
mov
mov
ins
and
inc
inc
fsub
fisubr
and
sub
jge
icebp
pop
xchg
adc
push
push
lods
pop
outs
sub
push
mov
sub
adc
test
adc
test
adc
test
adc
test
adc
test
jnp
mov
icebp
in
xchg
adc
inc
adc
inc
adc
inc
ja
stos
shr
dec
xor
stc
inc
or
adc
mov
and
jns
jo
sub
mov
(bad)
mov
sbb
add
and
jp
mov
xchg
dec
lods
xchg
jge
fsubr
sub
cmp
dec
push
and
adc
inc
adc
inc
adc
inc
adc
inc
add
inc
add
shl
or
pop
fs
enter
mov
call
cmc
jmp
sub
mov
in
ja
ror
ins
outs
mov
add
stos
ret
dec
add
or
or
adc
stos
or
call
fld
add
cmp
lahf
inc
nop
or
add
push
and
mov
push
aas
fs
push
and
add
cmp
or
add
adc
mov
pcmpeqb
xchg
push
mov
pop
inc
add
and
test
inc
adc
adc
and
jne
push
popf
ficom
add
inc
mov
adc
test
adc
cmp
sub
push
lock
jmp
push
adc
or
adc
pop
adc
movs
test
mov
fs
push
icebp
rol
xor
cmp
or
fimul
add
xchg
pusha
sbb
push
adc
fs
movs
adc
sub
js
lea
and
cmp
ret
add
xchg
scas
dec
add
movs
push
pop
sbb
jmp
or
pop
fsubr
arpl
retf
hlt
xchg
cmp
mov
enter
test
rol
adc
adc
ds
inc
adc
adc
inc
adc
inc
adc
inc
adc
mov
shl
fdivr
xor
inc
in
shl
or
mov
sub
sar
add
add
inc
dec
arpl
jmp
into
add
xchg
dec
outs
cmp
jne
cmp
push
(bad)
inc
nop
std
test
jmp
out
mov
xor
cmp
xchg
jmp
outs
jno
jb
or
xchg
jae
cmp
cmp
lahf
rcl
or
fldenv
outs
out
dec
adc
movs
stos
mov
nop
xor
in
pop
mov
push
dec
adc
dec
push
mov
jge
mov
sbb
or
jnp
inc
gs
out
shr
sbb
movs
shl
movs
fsub
jp
stos
cmp
push
js
jne
mov
and
mov
and
outs
fld
mov
xchg
adc
leave
cli
pop
(bad)
(bad)
jb
jecxz
pusha
(bad)
sbb
jmp
mov
jg
aas
test
inc
mov
inc
xor
shl
stc
aas
xchg
mov
mov
cmp
retf
sbb
data16
in
push
xor
jae
pop
pop
cmps
xchg
sub
mov
pusha
test
xchg
retf
and
xchg
or
inc
fs
xor
and
mov
xor
out
add
adc
and
sbb
sbb
mov
and
and
out
add
inc
mov
test
outs
ret
adc
add
stos
dec
xchg
cmc
pop
add
aaa
dec
iret
shl
and
int
xchg
mov
push
mov
push
mov
icebp
xlat
xchg
int3
js
push
dec
pop
nop
sidtd
(bad)
jae
sub
adc
imul
cmp
mov
pop
(bad)
push
inc
pop
int3
int3
dec
ror
dec
jae
add
ret
adc
cmp
cmp
loopne
mov
inc
mov
push
inc
test
out
daa
test
pop
fsub
pop
cmps
das
lock
xor
and
cmp
and
retf
std
push
fisttp
sub
cmps
cld
test
xchg
mov
test
dec
mov
scas
fldenv
jmp
out
test
es
gs
fnstcw
mov
xchg
dec
mov
or
jge
mov
xor
mov
stc
out
mov
xchg
adc
dec
sbb
test
xor
pop
lods
xlat
or
and
stos
ds
sub
dec
sbb
jl
mov
sti
movs
gs
cmp
or
or
xor
ret
inc
jle
or
imul
daa
outs
aam
adc
mov
in
and
in
push
jl
loop
xor
dec
mov
sbb
push
add
mov
movs
add
pop
push
mov
xchg
push
mov
icebp
mov
movs
idiv
aaa
xchg
mov
push
push
or
or
or
or
and
cwde
fsubp
fsub
add
jmp
sbb
fiadd
cmps
rcl
not
pop
ficom
shr
push
cs
add
jo
mov
push
mov
addr16
sub
jns
ja
mov
jns
iret
(bad)
fiadd
dec
mov
xor
push
adc
sbb
mov
cmp
pop
xor
xor
sbb
jecxz
data16
jnp
lock
dec
inc
xchg
ins
and
dec
pop
int
sbb
sub
mov
test
rcr
cmps
addr16
out
xor
mov
hlt
xchg
push
fild
mov
inc
into
arpl
pop
nop
jl
and
(bad)
std
int
pcmpeqw
fmul
test
xor
outs
mov
sahf
mov
scas
ss
fdiv
xchg
push
jecxz
adc
push
popf
rcl
adc
(bad)
jmp
ror
add
jp
or
inc
add
inc
pop
mov
jbe
leave
and
sbb
and
add
or
lea
add
test
add
lock
push
add
aam
test
sbb
leave
inc
push
dec
arpl
or
push
dec
lea
in
cmp
lods
add
shr
dec
push
inc
int
cmp
call
outs
cdq
pop
(bad)
jne
loop
cmp
and
rcr
cmp
pop
aaa
fsub
(bad)
icebp
imul
mov
xchg
in
xchg
sbb
(bad)
inc
cmps
jle
sub
movs
imul
jno
addr16
ins
ret
cmps
outs
mov
out
repz
push
dec
sub
ds
jbe
stos
xor
sub
cld
sub
dec
inc
outs
add
and
je
push
jmp
adc
add
test
adc
cmps
fdivr
mov
add
and
cmp
add
aad
test
adc
and
add
add
adc
test
repnz
sbb
je
inc
adc
add
in
push
test
(bad)
jne
jl
and
jbe
pop
inc
add
jmp
add
add
dec
pop
xlat
cmp
scas
xor
jp
outs
outs
cmp
mov
in
mov
test
xor
test
mov
sub
imul
jp
sbb
xor
scas
adc
ret
and
push
(bad)
in
push
push
scas
push
xchg
pop
adc
add
je
nop
or
or
add
and
adc
adc
inc
adc
inc
and
mov
je
push
dec
scas
scas
shr
or
sub
add
(bad)
imul
cmps
xchg
sbb
cmp
cs
movs
leave
mov
sbb
movs
add
push
and
cdq
adc
or
adc
xchg
adc
adc
test
add
and
dec
mov
inc
icebp
dec
and
in
nop
inc
sub
or
lods
add
inc
movs
(bad)
or
dec
stos
add
mov
mov
add
test
adc
or
push
mov
adc
in
or
inc
add
inc
pop
(bad)
frstor
test
sub
jmp
inc
mov
iret
sub
adc
push
pop
xchg
sub
dec
add
outs
(bad)
leave
fst
xlat
mov
cmp
popf
jge
in
(bad)
retf
cli
(bad)
xchg
sbb
add
or
lods
mov
cmp
test
(bad)
not
inc
and
xor
fstp
addr16
leave
or
pop
sbb
fld
mov
ja
mov
add
stos
mov
jns
inc
aaa
or
outs
xchg
call
scas
lea
cmp
mov
(bad)
cmc
or
jp
out
mov
repz
dec
cmps
dec
or
push
lock
loopne
adc
push
in
loopne
loop
stos
inc
out
out
xlat
outs
xchg
ss
pop
pop
pop
push
js
pop
rcl
cmp
push
push
xor
xor
jmp
leave
sub
or
pop
and
inc
adc
and
adc
mov
mov
movs
fdecstp
inc
or
lea
cmp
xor
and
push
mov
sbb
xchg
out
sbb
sbb
xor
mov
call
int
inc
ins
and
fabs
jmp
jbe
sub
int3
aas
imul
push
jl
enter
popf
nop
xchg
pusha
and
jae
(bad)
pop
retf
es
outs
xor
out
mov
scas
repz
jecxz
xchg
inc
bound
mov
rcr
pop
xchg
and
in
test
mov
cmps
lea
(bad)
mul
loope
mov
imul
mov
jle
test
jecxz
add
mov
and
mov
shl
arpl
xor
inc
sbb
mov
repz
dec
scas
jmp
aaa
jae
cmp
call
sbb
popaw
ins
and
shl
idiv
aaa
cmps
das
mov
add
es
out
into
pusha
sbb
scas
or
lock
(bad)
js
push
xor
fstp
cld
ret
rcr
jl
cmp
je
inc
ret
xor
and
hlt
mov
sbb
fsub
mov
mov
jnp
sub
push
mov
ret
pop
adc
push
fdiv
cmp
sti
shl
pushw
fwait
and
js
fist
add
ss
cmp
pop
ins
ret
in
mov
sub
or
(bad)
(bad)
cmp
push
and
aas
add
push
imul
(bad)
mov
imul
jae
mov
in
sbb
mov
(bad)
(bad)
cmovnp
adc
adc
(bad)
xor
out
mov
cmp
ins
shl
xor
sbb
ss
hlt
cld
jne
inc
lds
adc
xor
jmp
and
mov
repz
inc
mov
xchg
xchg
sbb
fsub
out
(bad)
push
jo
retf
shl
enter
sbb
mov
pop
lods
int
xor
push
xchg
inc
push
pop
inc
js
push
(bad)
fst
pop
mov
cwde
arpl
mov
(bad)
popa
or
add
aad
repnz
pop
fadd
fldcw
mov
xchg
mov
sbb
cmp
out
sti
sub
popf
int
sub
jl
pop
mov
jge
mov
loopne
and
call
mov
dec
call
mov
cmps
add
sbb
sub
imul
inc
push
mov
(bad)
push
or
movs
ret
movs
sub
inc
pop
xchg
add
movs
pop
pop
mov
xor
xchg
push
lahf
imul
ret
mov
inc
loopne
pusha
cmp
jmp
ret
dec
fcmovnu
pop
daa
dec
ret
outs
jle
adc
dec
and
test
aad
pop
(bad)
cmp
enter
leave
ror
jnp
jns
cld
scas
sub
(bad)
enter
clc
jae
mov
out
data16
pop
(bad)
xchg
cmp
or
cmp
not
fwait
lds
sub
sbb
adc
xlat
repnz
push
loop
sub
loopne
movs
sbb
call
(bad)
mov
dec
outs
sub
inc
xchg
test
stos
sar
mov
bound
mov
ret
mov
add
xchg
dec
inc
stc
lods
scas
pop
sub
mov
lds
stos
fcmovbe
shl
jecxz
cwde
shl
shl
fadd
and
xor
mov
inc
out
jne
push
and
test
jmp
jmp
stc
mov
cli
movs
xchg
hlt
out
mov
in
rcr
call
and
movs
xchg
loope
mov
jno
sbb
xchg
mov
out
mov
xor
aad
jae
fwait
pushf
add
mov
pop
loop
or
mov
add
nop
add
jo
and
cli
stos
and
in
test
mov
dec
pop
(bad)
cmc
jno
cmp
sbb
mov
inc
cmp
addr16
retf
les
test
cli
and
cld
xchg
(bad)
movs
aaa
adc
mov
pop
inc
mov
nop
sbb
mov
push
or
inc
cmp
add
test
adc
and
or
into
adc
jns
cmp
mov
push
loopne
jmp
add
sub
mov
and
imul
fidivr
dec
mov
das
ss
hlt
add
dec
xchg
xchg
in
sub
daa
adc
xchg
xchg
cmp
xor
xor
and
jp
add
jno
jae
rcl
mov
jnp
push
pop
dec
cmp
mov
mov
jo
ins
scas
jbe
push
pushf
add
jmp
fnsave
ins
imul
out
outs
mov
repz
push
(bad)
xor
je
push
adc
mov
and
hlt
rcr
add
jb
ret
xchg
aaa
xchg
into
scas
scas
mov
mov
out
sbb
sub
aas
dec
add
dec
imul
in
fs
ja
dec
mov
xor
out
mov
sbb
cmp
xor
mov
pop
mov
mov
sbb
inc
out
pop
mov
cmp
mov
in
repnz
out
push
inc
test
or
add
mov
aad
ret
sub
push
sub
and
pop
loope
das
pusha
lods
mov
cmc
in
shr
jne
push
loopne
jae
scas
sub
pop
fist
xor
or
out
sbb
jno
ficom
mov
scas
pop
cmps
(bad)
and
jg
mov
xchg
cmp
cmp
or
lahf
xlat
and
inc
in
xlat
aas
push
popa
test
mov
in
push
enter
ds
adc
loope
xchg
(bad)
mov
add
cmp
jge
mov
nop
xchg
(bad)
or
inc
out
inc
aas
or
retf
mov
add
(bad)
fistp
sahf
fsubr
dec
sbb
in
mov
pop
cmp
adc
movs
or
push
test
mov
add
movs
sub
mov
adc
push
imul
and
test
pop
das
jo
cmp
and
adc
int3
jmp
pop
nop
popa
stos
cmp
xchg
cmp
jns
out
inc
mov
add
mov
in
jnp
inc
test
paddusw
xor
retf
jb
loope
ins
test
cli
inc
aaa
(bad)
mov
mov
sub
in
xchg
xlat
(bad)
nop
add
or
fst
pop
inc
mov
out
and
mov
inc
mov
jae
mov
xor
je
mov
dec
daa
movs
out
icebp
mov
fld
push
enter
in
pop
sub
cs
repnz
mov
mov
retf
jo
inc
loopne
call
aad
repnz
(bad)
xor
daa
xchg
aaa
lods
xchg
aad
inc
mov
cs
jae
fmul
push
or
add
test
add
mov
std
inc
xlat
ret
std
aaa
stc
push
in
test
adc
test
adc
test
adc
test
adc
and
add
test
movs
or
inc
and
test
sub
inc
add
inc
add
dec
add
inc
and
loope
sub
cmp
and
rol
inc
fs
mov
sbb
adc
add
and
inc
or
adc
aam
dec
test
mov
dec
mov
jnp
pop
test
ja
test
and
inc
mov
push
ret
pop
loopne
test
push
add
out
push
inc
imul
outs
in
mov
mov
inc
mov
je
inc
mov
add
or
nop
add
inc
pop
fs
or
test
add
push
mov
xchg
inc
cmp
fld
test
scas
dec
jge
and
dec
jne
add
movs
or
and
adc
inc
or
fiadd
or
sbb
sbb
push
inc
cmp
adc
add
adc
add
jl
and
cmp
add
push
test
adc
lods
mov
and
add
jns
iret
jne
inc
xchg
mov
ds
inc
mov
cmp
push
jmp
inc
jb
popa
in
stc
or
fistp
lea
(bad)
lods
xchg
arpl
inc
test
add
push
add
mov
jge
clc
cdq
cs
(bad)
sti
adc
pop
and
jmp
outs
inc
sub
in
sub
adc
cld
xchg
(bad)
movs
mov
mul
pop
jns
out
mov
jmp
in
mov
not
add
(bad)
mov
sbb
dec
adc
cmp
sar
mov
mov
push
jl
push
push
lock
push
jnp
jl
arpl
fidivr
cs
daa
jecxz
cwde
leave
mov
jae
js
adc
out
mov
lock
mov
pop
sbb
jmp
mov
lea
xchg
push
xchg
mov
pop
or
fldenv
cmp
cmc
pop
mov
dec
pusha
pop
test
mov
xchg
inc
mov
sub
jge
ins
sbb
pop
stc
lock
(bad)
fimul
xor
daa
xchg
jmp
jge
mov
or
call
sbb
cwde
dec
push
lea
xchg
xchg
out
and
mov
xchg
lea
js
and
aaa
das
cmp
jns
mov
les
mov
sbb
cmp
push
cdq
xor
test
test
test
add
xor
pop
sbb
in
mov
rol
xor
cli
jp
(bad)
mov
inc
sub
xor
xchg
jmp
pop
fabs
jl
fdivr
jl
int3
and
mov
ss
lods
adc
xor
mov
repz
jnp
and
inc
sub
fidiv
bound
retf
(bad)
and
repnz
call
mov
dec
xchg
lods
and
in
cs
mov
mov
(bad)
loopne
add
pop
jp
add
dec
(bad)
sub
lea
arpl
and
mov
dec
sbb
inc
jmp
jb
sub
repz
imul
jne
shr
mov
sub
xlat
add
hlt
or
call
sbb
out
(bad)
sbb
mov
cmps
dec
aam
retf
pop
mov
sub
jmp
mov
movs
ret
mov
cmps
add
test
jg
int
cmps
int3
xchg
sbb
push
sbb
or
out
pop
xlat
gs
icebp
fldenv
jbe
mov
cmps
popf
in
jno
imul
add
(bad)
mov
jecxz
mov
sahf
mov
and
xor
push
xchg
(bad)
cmp
add
cmp
fs
and
aaa
aaa
stc
mov
jp
inc
fcmovnu
jo
lods
sub
out
arpl
outs
loop
les
cmp
xor
jb
sub
xchg
mov
std
std
xchg
push
cmc
lea
les
jns
mov
adc
fs
fs
pop
es
fnsave
cld
push
clc
mov
push
dec
jb
add
out
push
cmp
mov
or
js
pop
aad
or
iret
sbb
jns
xchg
xor
sahf
sub
data16
mov
push
adc
es
adc
push
xor
scas
ins
mov
cmp
sub
ins
aaa
push
aam
and
jge
inc
dec
mov
into
jmp
jecxz
(bad)
imul
mov
jge
invd
in
inc
cmp
inc
in
mov
pop
loop
mov
mov
xchg
adc
mov
ret
cmp
sbb
push
or
or
sub
inc
pop
invd
cmp
cmp
or
push
dec
enter
cs
sahf
stos
cmps
and
cwde
gs
(bad)
jns
sbb
leave
adc
cdq
cwde
sbb
mov
xor
sbb
xor
push
repz
mov
and
mov
mov
dec
stc
movs
push
jnp
(bad)
pop
cmps
(bad)
(bad)
and
fisttp
repnz
std
mov
test
ins
(bad)
(bad)
jl
call
(bad)
fwait
(bad)
xor
sbb
push
xor
lahf
dec
xchg
leave
jb
inc
rol
mov
and
inc
sub
test
lea
dec
sub
jo
jge
in
imul
je
out
ret
stc
cmp
and
pusha
jno
adc
xchg
in
lds
fdivr
lods
dec
into
sahf
outs
punpcklwd
and
jle
ss
pop
mov
popf
mov
xchg
test
or
popa
or
pop
in
jl
cmc
dec
outs
adc
and
and
push
arpl
cmp
stos
retf
addr16
mov
dec
in
(bad)
test
sbb
into
lods
sahf
aaa
inc
std
scas
add
loopne
or
dec
add
push
ins
jne
sub
adc
and
mov
out
add
cmp
inc
xchg
cld
js
mov
bound
mov
js
push
xchg
sub
das
xchg
out
cli
sbb
(bad)
mov
sbb
setp
xchg
adc
cs
movs
aaa
aas
les
(bad)
outs
inc
ret
jae
dec
not
std
push
mov
sar
pushf
fimul
aam
push
loop
push
dec
dec
and
or
shl
hlt
out
leave
test
pop
jne
fidivr
inc
imul
ret
xchg
cmp
(bad)
(bad)
jnp
enter
clc
and
inc
fsubr
fcmovu
mov
or
loopne
in
fcomi
inc
jmp
inc
mov
adc
daa
mov
out
in
lods
data16
inc
xchg
mov
das
pushf
inc
mov
push
cmp
mov
cmps
mov
and
ss
jmp
in
mov
repz
mov
and
xor
dec
fdivr
sbb
sar
xchg
cmc
dec
pop
js
or
pop
dec
ins
mov
jo
pop
mov
pusha
sbb
sub
bound
in
pop
call
jmp
dec
xchg
test
in
add
(bad)
mov
pop
sbb
lea
pop
adc
es
lods
jne
out
js
pop
cmp
data16
jbe
or
mov
(bad)
jno
push
cmp
add
push
cmp
xlat
mov
cmp
imul
pop
fld
cmp
push
(bad)
mov
mov
in
loopne
jmp
mov
xchg
loope
inc
in
pop
repz
fldenv
outs
mov
add
aaa
adc
lods
out
adc
das
cli
xchg
mov
fimul
push
push
cmp
cmp
mov
cmp
xor
jmp
int3
jae
jae
loope
push
push
add
pop
jmp
mov
and
out
sub
in
mov
jp
xchg
aam
xor
test
mov
push
push
xchg
(bad)
sub
add
sbb
xchg
dec
and
mov
pop
mov
xchg
ins
jl
sub
xchg
sbb
cmp
jg
sub
lahf
sub
xor
in
adc
and
cmp
(bad)
jns
mov
xlat
xor
inc
popa
mov
(bad)
shr
adc
sbb
add
fxch
and
add
cmps
push
cmp
mov
gs
pop
pop
cmp
ds
cmp
dec
xchg
mov
(bad)
adc
pop
mov
jo
test
(bad)
outs
and
rcr
js
or
jp
mov
lahf
add
jmp
(bad)
cdq
cld
pop
mov
dec
in
pop
out
jae
or
pop
fdivp
mov
mov
mov
lods
gs
xchg
retf
loope
int
sbb
xchg
cld
push
loop
aam
int3
js
je
(bad)
call
cmp
cmps
enter
ins
repnz
mov
int3
mov
push
xor
(bad)
ja
xchg
pop
and
outs
popf
xchg
xor
sub
cmovg
jbe
mov
xor
jo
jle
nop
push
dec
cs
jmp
sti
scas
aas
xchg
xchg
es
out
call
lds
adc
test
add
cmp
push
aam
daa
xchg
and
push
sub
push
sbb
jo
outs
pop
mov
aad
mov
push
push
mov
xchg
in
in
mov
icebp
in
shl
call
xchg
pop
lods
jnp
push
add
pop
cli
fs
sbb
xchg
xchg
pop
test
jo
dec
(bad)
xor
stos
cld
xchg
pop
imul
mov
popf
cmp
pusha
jo
pushf
outs
clc
loopne
shr
and
int3
or
mov
loope
xor
sbb
inc
es
fwait
mov
xchg
not
xor
stc
popa
mov
sahf
loope
(bad)
xlat
pop
cmps
adc
bound
icebp
es
mov
cmp
iret
mov
sbb
js
fwait
mov
push
sbb
fnstsw
outs
shl
(bad)
and
push
adc
stos
loope
shl
mov
push
dec
adc
and
mov
and
mov
pop
xor
cmp
pop
xlat
mov
pop
cmp
add
sub
jo
sbb
and
inc
pop
adc
test
adc
fwait
pop
out
push
and
and
push
jle
cwde
mov
cdq
test
ins
push
out
xor
sub
pop
mov
add
je
js
cmp
inc
fdiv
xchg
in
fucomp
aad
mov
mov
mov
fsubr
mov
and
cmps
sbb
mov
sub
repz
leave
push
sar
inc
adc
mov
in
push
lods
(bad)
in
inc
rcr
test
iret
adc
inc
mov
xchg
cmp
push
mov
push
lock
(bad)
popf
(bad)
mov
jbe
sub
cmp
je
jo
cmp
mov
std
(bad)
jno
nop
sbb
xchg
retf
push
shl
push
push
cdq
mov
bound
push
mov
mov
test
adc
lock
xchg
xor
(bad)
std
rol
(bad)
jmp
dec
push
mov
test
inc
repnz
and
inc
and
jb
inc
add
inc
add
inc
add
inc
add
inc
add
in
test
inc
and
ret
inc
adc
inc
adc
fldenv
adc
cmp
xor
cli
and
jne
adc
inc
adc
inc
adc
inc
adc
rcl
test
adc
xchg
arpl
jmp
adc
test
and
jno
mov
dec
les
adc
add
jbe
add
test
adc
add
adc
(bad)
in
jbe
jno
sbb
pop
cmp
inc
cmps
mov
push
fs
pop
or
push
nop
push
push
adc
out
movs
(bad)
clc
loope
loope
pop
mov
and
push
popf
and
inc
mov
jnp
xchg
add
add
inc
add
adc
push
test
inc
(bad)
or
adc
add
stos
mov
arpl
cmp
and
jp
add
inc
adc
add
inc
shr
inc
add
inc
add
inc
add
loope
and
or
rol
or
xchg
dec
push
call
repnz
xchg
stos
inc
call
add
xchg
pop
dec
mov
test
or
and
imul
and
sti
mov
add
add
test
adc
test
add
dec
jo
inc
mov
or
xchg
fs
and
push
xchg
sti
call
(bad)
or
sub
mov
inc
fmul
ins
jg
push
aaa
cmp
sub
add
sub
pusha
jle
mov
jge
inc
xchg
jns
cs
or
or
call
add
pop
stc
cli
cmc
pop
adc
cli
cs
dec
jmp
mov
shr
mov
and
outs
push
sbb
shr
or
xchg
sub
sub
jl
jno
fild
sub
sahf
pop
mov
ret
inc
popf
outs
jno
xor
imul
fsub
mov
mov
jge
es
repnz
and
das
xchg
popf
mov
mov
out
mov
out
loopne
call
jno
loopne
or
push
cli
fwait
inc
mov
pop
cli
js
jmp
je
shl
ret
repz
(bad)
jae
aaa
in
add
neg
(bad)
or
inc
bound
fcmovnb
sbb
pop
out
push
push
inc
dec
stc
sbb
hlt
sar
mov
cmps
ds
or
rol
ret
xchg
mov
add
or
in
loop
xchg
xlat
jnp
pop
jp
arpl
bound
sub
repnz
scas
nop
lock
dec
xchg
xlat
aas
popa
add
xor
jne
cmps
cmps
xor
cmp
rcr
cs
sahf
and
inc
lods
add
sbb
ss
jmp
outs
test
xor
pop
inc
mov
or
push
xchg
loope
stos
jne
aaa
xchg
hlt
pop
(bad)
adc
js
xchg
xchg
clc
retf
inc
movs
lds
push
mov
jl
(bad)
movs
sbb
out
shl
xor
pop
jle
clc
(bad)
push
push
and
mov
shr
push
aas
sti
jp
inc
cmc
adc
fidivr
test
sbb
pop
push
sbb
cmp
mov
outs
sbb
outs
add
ja
out
jl
xchg
clc
pop
xchg
and
sahf
jg
aas
jne
xor
jb
gs
jl
div
pop
pop
sar
inc
add
(bad)
cmp
ror
or
ffreep
cmp
xchg
packsswb
and
mov
dec
inc
into
cli
jo
push
xor
std
dec
in
fild
shr
ror
inc
add
and
out
mov
pop
pop
out
lock
js
xchg
call
cwde
add
out
es
or
and
jne
adc
pop
fs
popa
fbstp
clc
inc
cmps
sub
arpl
or
cld
cmp
jae
div
inc
cmps
(bad)
in
aas
cmp
xor
sti
cmp
xchg
pop
mov
clc
clc
sbb
or
adc
imul
push
push
stos
idiv
ins
fldenv
repz
add
out
enter
sbb
sub
mov
or
ror
out
mov
jmp
in
lahf
and
int
and
jb
(bad)
int
loop
lock
popf
xchg
adc
das
jae
(bad)
pop
in
adc
fwait
cs
arpl
lea
push
ret
fbld
cld
es
shl
stc
dec
gs
push
push
rcr
or
js
xchg
dec
ret
fucom
mov
(bad)
cld
test
jmp
dec
in
movs
retf
gs
add
shl
mov
shr
arpl
mov
add
int
clc
or
rcl
mov
xor
nop
pop
jmp
outs
outs
out
loope
sbb
outs
jae
pop
ret
mov
cmp
outs
add
or
xor
cld
imul
xlat
cmp
loop
aaa
push
lods
inc
in
sbb
push
outs
std
push
inc
pop
jbe
fbld
jbe
mov
lods
daa
data16
mov
jae
(bad)
mov
(bad)
fnstsw
ss
cmp
xor
pusha
xchg
iret
sbb
(bad)
sti
jnp
xor
jb
mov
fisttp
pop
fldln2
enter
pop
arpl
in
shl
sbb
push
int
dec
retf
or
repnz
pop
jge
xchg
retf
shr
or
jbe
in
movs
push
ja
in
xor
je
inc
jecxz
jae
repnz
aam
mov
(bad)
ins
mov
pushf
loopne
mov
push
xchg
imul
fmul
or
cmp
in
adc
test
sbb
fcomip
and
sub
jmp
adc
and
aas
mov
ror
(bad)
mov
repz
and
mov
xchg
je
dec
xor
adc
pop
neg
or
dec
fcomp
cmp
mov
ffreep
cmp
cmp
fldcw
fwait
xchg
lea
sub
or
dec
sar
lahf
test
mov
sbb
movups
cmps
lock
push
scas
mov
mov
call
(bad)
cld
sub
iret
jecxz
push
sub
aaa
mov
retf
aaa
push
into
inc
in
out
mov
add
xor
xor
(bad)
out
cmp
mov
ja
loopne
loope
int3
lods
addr16
inc
push
xor
mov
outs
mov
idiv
xlat
cmp
xchg
cmp
or
xlat
pop
stos
lahf
jmp
fisttp
(bad)
xor
pop
icebp
ds
out
dec
jl
jns
pop
push
cmp
sub
retf
jmp
add
mov
xor
pop
clc
or
inc
icebp
scas
xlat
icebp
or
aad
xor
xor
test
loopne
daa
fnstsw
jl
jbe
lea
sub
dec
cdq
xchg
push
jle
mov
stc
mov
arpl
adc
inc
loop
adc
js
dec
lds
pop
je
pushf
(bad)
adc
dec
xor
inc
jno
mov
cmp
pusha
leave
je
kxnorb
ins
popa
in
sti
xchg
imul
lds
enter
daa
(bad)
frstpm(287
jne
jae
loop
pop
cmc
or
(bad)
in
cmp
mov
add
or
int3
dec
mov
mov
div
add
mov
adc
or
or
sub
aam
in
cmp
cli
cld
sub
jge
ret
sbb
xor
icebp
mov
xchg
push
retf
and
jnp
int
hlt
pop
adc
xchg
inc
movs
mov
ja
mov
xchg
push
inc
mov
int
mov
out
out
xchg
cmp
dec
cmps
popa
enter
in
cmp
sbb
xor
(bad)
aad
call
cli
adc
movs
mov
fs
ja
pop
cmp
cmps
xlat
dec
nop
imul
lds
je
fnsave
shl
mov
es
or
mov
stc
sbb
sub
test
jae
add
ret
aam
fsubr
loopne
and
aas
push
les
sub
shl
lahf
fist
pop
loopne
enter
mov
add
ja
pandn
(bad)
lea
jmp
es
or
test
or
xchg
inc
cwd
out
frstor
mov
std
dec
push
retf
jmp
icebp
call
movs
(bad)
sbb
(bad)
mov
mov
mov
mov
pop
imul
aam
mov
xor
add
mov
inc
bound
shr
add
cmp
shl
and
inc
inc
addr16
xchg
shl
pop
out
ins
push
(bad)
repz
out
push
in
cs
xchg
cmps
sub
and
inc
cmps
rol
pop
out
aam
lahf
(bad)
xchg
xchg
inc
xchg
test
ins
sar
jmp
fcmovb
cmp
or
sbb
and
sbb
(bad)
mov
es
(bad)
enter
mov
jp
test
ror
cdq
addr16
mov
inc
or
push
pushf
in
xchg
dec
fsub
mov
jnp
retf
or
inc
popf
lds
movs
adc
hlt
push
xor
adc
inc
and
sub
adc
inc
adc
enter
pop
out
mov
or
mov
dec
mov
and
add
std
mov
outs
cs
(bad)
sar
pop
push
mov
xchg
cmp
ror
(bad)
loopne
jns
mov
(bad)
jmp
test
lods
(bad)
sbb
or
jae
xchg
jecxz
add
xchg
dec
pop
dec
jle
xor
jl
out
mov
outs
lahf
dec
xchg
sub
fisubr
pusha
std
(bad)
xor
fist
popf
cld
test
fs
loopne
cmp
sti
xchg
mov
add
dec
int3
xchg
int3
jg
xchg
call
pop
(bad)
mov
jecxz
sbb
lea
sub
popf
ins
xrelease
out
ret
push
mov
jo
dec
jo
cmp
push
mov
or
inc
lock
fisub
jae
inc
or
out
sub
inc
ss
fwait
movs
and
(bad)
(bad)
sub
and
outs
aas
add
retf
ins
repz
xor
push
adc
iret
nop
std
nop
inc
stc
pop
jg
lea
add
push
mov
daa
mov
das
push
inc
int3
pushf
imul
(bad)
stos
outs
pop
adc
movs
jae
fidiv
jmp
pop
dec
pop
das
inc
loope
or
add
js
call
or
jb
dec
(bad)
mov
dec
inc
loope
sub
imul
xchg
mov
lahf
jnp
jg
pop
xchg
ret
ror
xor
xchg
arpl
fs
inc
movs
inc
push
mov
sub
or
and
loopne
adc
pop
adc
add
shl
adc
xor
cmps
xor
enter
push
jle
cmp
icebp
dec
xlat
imul
mov
fdiv
int
jno
and
push
shl
cmp
(bad)
bswap
ret
inc
sub
imul
in
arpl
das
loop
aas
mov
push
sbb
outs
inc
movs
sbb
sbb
mov
push
cld
shl
jns
mov
sbb
sbb
jl
outs
sar
out
aaa
jl
jp
cmp
mov
sbb
mov
xchg
dec
(bad)
jmp
cmp
int
add
sti
stos
xor
adc
es
pop
or
push
ds
int
imul
in
ins
mov
fadd
mov
stos
pop
cmp
vprotd
mov
shl
inc
adc
jle
outs
push
mov
ret
pop
cmps
mov
cli
sti
scas
mov
xor
add
(bad)
test
jle
cmp
pop
ret
and
outs
and
js
push
shl
mov
lea
sub
je
dec
cmp
push
inc
inc
and
lods
repz
jbe
lahf
test
lahf
sar
xchg
nop
or
sub
or
jmp
adc
(bad)
fcmovbe
push
jp
imul
iret
jmp
xor
mov
(bad)
jb
jo
clc
out
clc
pop
inc
std
faddp
xor
ds
inc
mov
cmps
xchg
lock
outs
scas
loop
or
jmp
mov
mov
fistp
sar
add
icebp
and
aas
dec
loope
jbe
xchg
aas
dec
shl
lea
pop
gs
xchg
aas
jne
xor
mov
dec
test
push
loope
loope
fdivrp
sub
(bad)
int3
shl
int
out
and
in
imul
call
mov
mov
push
popa
add
cld
xchg
cmp
in
(bad)
enter
aad
loopne
js
push
add
push
xor
loop
and
shl
lods
stc
jle
inc
cmc
xor
or
sub
mov
push
mov
lds
test
mov
enter
shl
pop
and
iret
mov
cmp
fs
adc
test
test
adc
xor
pop
pop
xor
sub
mov
movs
(bad)
ds
push
mov
(bad)
test
mov
repz
out
cli
pop
cmp
and
ret
cmc
jo
xchg
stc
inc
retf
leave
and
mov
lods
mov
sbb
sub
inc
cmp
jne
jmp
ds
or
xor
rol
dec
popf
mov
pop
fwait
cmps
xchg
mov
rcl
les
aam
mul
clc
inc
sbb
push
sub
imul
mov
mov
enter
sbb
rcr
dec
jae
xchg
out
add
sub
out
scas
rcr
sbb
(bad)
cmp
inc
popa
imul
sub
(bad)
mov
xchg
xor
add
or
in
jmp
xchg
es
inc
xor
mov
loope
jno
ins
jnp
mov
imul
pop
mov
stos
add
ret
jns
dec
in
movs
stc
fwait
mov
xor
pop
mov
aaa
mov
xor
out
scas
jl
(bad)
repz
dec
mov
fsubr
movs
push
outs
fstp
call
test
sbb
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
fs
mov
mov
xchg
scas
cs
dec
movs
and
and
test
add
test
or
or
or
or
push
retf
and
mov
mov
mov
or
or
or
or
or
stos
scas
adc
or
push
add
dec
add
add
xchg
pop
pop
je
mov
and
or
or
inc
inc
add
add
add
fwait
pop
add
or
adc
sbb
mov
test
inc
adc
and
lock
add
shl
inc
sub
or
add
adc
stos
mov
lahf
je
ins
inc
shl
sub
call
mov
imul
jp
mov
call
xchg
daa
jl
add
mov
or
or
sub
or
je
push
adc
test
sub
sbb
xor
mov
sar
inc
cmp
xchg
push
or
xor
sub
and
or
adc
and
dec
and
imul
call
and
inc
xlat
jge
fimul
and
push
inc
mov
and
call
and
or
inc
dec
sbb
scas
lods
adc
cli
fsubr
mov
cmp
inc
sar
adc
or
or
add
dec
inc
daa
cmp
add
sub
add
pop
mov
scas
push
ror
in
and
mov
sbb
sbb
jge
xchg
stc
or
jecxz
and
xchg
mov
add
loop
sbb
sbb
arpl
or
adc
mov
xlat
shl
jl
mov
test
(bad)
inc
idiv
test
je
cmp
mov
ja
retf
xchg
xchg
push
int
push
ins
arpl
imul
push
das
(bad)
popf
sti
arpl
outs
(bad)
inc
test
push
jnp
stos
sti
push
sub
popf
test
mov
add
jg
dec
leave
push
ret
mov
cdq
mov
cmps
and
push
mov
sti
scas
inc
xchg
adc
adc
in
inc
repz
adc
mov
aas
lock
mov
cmps
hlt
mov
xchg
retf
sub
loop
or
(bad)
daa
sbb
jns
cmp
aad
dec
into
in
ficomp
loop
outs
inc
clc
movs
sub
cmc
call
xor
dec
or
mov
repz
jns
loopne
pop
out
scas
pop
cli
fisttp
inc
sub
scas
mov
mov
cmp
cmp
loope
add
imul
jbe
mov
loopne
push
jl
dec
jb
cmp
ss
imul
pop
xchg
jb
arpl
ins
pusha
jae
arpl
jno
call
movhps
mov
data16
test
ins
cld
test
fild
xchg
dec
test
cmp
dec
sub
sbb
lea
sbb
xchg
push
jo
sub
xchg
pop
mov
loope
rcr
xchg
lea
gs
pop
aam
xlat
pop
pop
jns
push
jnp
sbb
jbe
mov
and
fstp
push
fwait
je
in
xchg
xchg
or
fisttp
daa
cmp
je
into
shl
or
mov
mov
call
jb
mov
test
mov
push
clc
iret
test
mov
mov
pusha
mov
test
cwde
xchg
mov
mov
fmul
or
stos
out
lds
gs
jno
loop
imul
sub
jbe
arpl
rcl
js
mov
inc
jnp
fadd
inc
ffree
mov
mov
sub
pop
sbb
ret
aaa
ret
imul
test
mov
retf
aam
push
out
fwait
cmps
fs
jecxz
(bad)
(bad)
sbb
pop
sbb
mov
push
push
es
test
pop
pop
xor
jmp
xchg
jle
xchg
mov
push
dec
mov
sub
mov
test
into
sub
mov
rcr
jae
adc
aad
fs
mov
daa
mov
repnz
xchg
dec
xchg
push
sub
iret
sub
nop
fld
add
mov
movs
and
add
or
xchg
loope
repnz
pop
ss
or
scas
rcr
cmp
fwait
cmp
stos
cmp
mov
cmps
lock
cmp
pop
aad
add
xchg
imul
sbb
add
stos
cmps
sbb
add
loope
lock
leave
xchg
stc
cmp
out
cmp
loope
sub
pop
das
cdq
mov
xor
ja
or
add
imul
sub
rol
sub
test
sbb
jne
push
jmp
mov
mov
(bad)
mov
sub
cmp
sub
js
test
pop
popa
xchg
clc
jnp
(bad)
in
lods
out
cmp
inc
dec
pop
inc
inc
jmp
dec
dec
add
dec
(bad)
push
arpl
div
mov
cmp
ret
(bad)
outs
fs
jo
(bad)
pusha
aas
mov
call
xor
nop
adc
add
pop
les
cmp
das
jmp
loop
or
fisub
(bad)
(bad)
fld
push
push
adc
(bad)
push
out
ret
es
jle
push
jle
mov
inc
and
movs
mov
mov
ss
(bad)
clc
xor
inc
jecxz
cwde
jle
dec
sti
sub
pop
rcl
cdq
cmps
dec
push
jnp
xchg
(bad)
jmp
push
rcr
cdq
cmps
ror
mov
fwait
mov
(bad)
fldenv
sysenter
dec
(bad)
arpl
inc
aaa
ins
cmps
dec
sub
imul
cdq
mov
inc
jle
inc
dec
aam
add
push
sub
push
inc
xor
lea
or
add
cld
shl
(bad)
ret
mov
arpl
xchg
lds
sbb
hlt
sahf
(bad)
(bad)
cld
sub
cmp
sub
loope
(bad)
and
jl
xchg
repnz
out
and
adc
(bad)
cmp
out
call
mov
xor
cmp
repnz
dec
sbb
(bad)
mov
jae
stos
jnp
jl
(bad)
sbb
in
ret
xor
mov
mov
pop
dec
data16
leave
cmps
mov
cmp
add
mov
hlt
scas
ror
test
inc
xlat
outs
ins
dec
mov
cld
cmp
shl
cmp
cmp
push
cmp
mov
rcr
cwde
jecxz
jl
mov
mov
mov
pop
or
cli
into
mov
iret
or
sbb
sbb
mov
adc
xchg
lahf
mov
fcmovbe
iret
movs
lock
xor
cdq
inc
xlat
fcomi
mov
fwait
movs
push
xchg
jb
addr16
and
cmps
mov
add
cld
lods
stc
sar
das
das
(bad)
cmps
or
ret
nop
sahf
popa
call
xchg
stos
repz
mov
scas
repnz
(bad)
mov
les
xchg
das
les
out
shl
retfw
fwait
mov
nop
cmp
dec
call
xor
dec
outs
ss
jo
sar
jecxz
jno
and
leave
test
repz
mov
int3
pop
int
mov
and
push
retf
cld
mov
inc
iret
lds
inc
inc
out
cmps
mov
jmp
test
sub
nop
sbb
fsubp
xor
xchg
in
(bad)
ds
mov
pop
lds
sbb
inc
icebp
xor
or
inc
jno
mov
sbb
cmps
cmp
mov
enter
adc
je
fmulp
cmc
pop
sbb
and
xchg
add
mov
mov
(bad)
imul
dec
das
mov
fcmovbe
hlt
mov
cmps
in
es
and
jns
fbstp
xchg
jg
push
aaa
sbb
xor
call
ins
retf
ret
sar
rcr
addr16
cmps
inc
sbb
inc
sbb
push
std
inc
imul
and
mov
pop
sub
out
pop
mov
loopne
retf
sbb
mov
data16
nop
pop
sbb
(bad)
sbb
mov
pushf
jl
jl
mov
mov
or
mov
and
push
stos
out
inc
ret
mov
xor
jae
push
adc
stc
jl
(bad)
(bad)
push
mov
pop
ins
pop
loope
add
mov
(bad)
(bad)
call
add
cs
cs
and
cwde
or
aam
int
jb
xchg
es
popa
mov
jecxz
(bad)
jnp
in
dec
push
push
push
push
cmp
xchg
mov
push
dec
add
or
sub
pop
(bad)
pop
push
and
fcmovbe
jnp
adc
daa
mov
test
add
and
test
adc
shl
sbb
in
push
cmp
jecxz
add
xchg
sub
out
leave
addr16
push
rcl
inc
dec
and
push
pop
add
out
sbb
data16
scas
aaa
pop
jg
pushf
mov
ins
push
jns
(bad)
ret
mov
div
out
mov
sahf
(bad)
inc
dec
cmps
xor
mov
dec
mov
mov
lahf
les
jmp
push
call
jno
fs
(bad)
inc
in
inc
jmp
fsub
mov
and
sti
sbb
jae
xchg
lea
std
xchg
(bad)
stos
loope
cld
pop
jb
dec
cmp
jl
test
pop
and
(bad)
repnz
pop
std
cmp
push
aam
ret
lods
xchg
dec
add
sub
cmps
fdiv
or
push
xchg
xchg
mov
mov
jecxz
outs
std
pop
xchg
sbb
fwait
mov
pop
movs
outs
fdiv
cwde
sbb
out
test
mov
or
mov
test
jmp
inc
popf
jecxz
loop
or
add
jecxz
repnz
setns
jle
jns
cmp
xchg
inc
sar
push
shl
ret
lahf
cmovb
xchg
rcl
lahf
(bad)
sti
xchg
loope
icebp
repnz
mov
mov
xor
xchg
iret
scas
ficom
jbe
xor
std
lods
jbe
cli
(bad)
pop
daa
in
scas
jmp
lahf
shl
fstp
fcom
clc
cmps
daa
adc
or
pop
loopne
jmp
mov
jmp
fs
int3
repnz
mov
mov
lds
icebp
out
push
xor
mov
inc
sbb
neg
pop
fs
dec
pushf
dec
and
adc
in
retf
imul
jmp
call
lahf
jno
mov
xor
push
xor
cmps
mov
scas
mov
dec
sub
nop
inc
or
sti
rol
ss
div
test
pop
retf
cmp
test
repnz
sar
nop
ss
xor
mov
sahf
aaa
inc
aam
(bad)
and
repnz
and
popf
mul
jbe
mov
pop
or
xchg
mov
push
fldenv
add
xor
lea
daa
js
cmp
xor
aaa
sbb
fcmovbe
push
int
mov
ret
dec
sbb
xor
xchg
mov
(bad)
mov
mov
lahf
mov
cmps
call
and
pop
dec
in
push
cmp
loop
xlat
out
outs
test
mov
pop
movs
mov
fs
inc
rcl
xor
adc
pushf
dec
sub
push
xchg
stc
aad
or
loope
(bad)
cmp
fld
or
inc
aaa
sbb
iret
imul
or
clc
jecxz
movs
scas
arpl
push
loope
call
cmps
popf
sbb
xor
inc
dec
push
and
jmp
pop
jne
outs
push
push
jnp
ficomp
ss
shl
or
xchg
movs
loope
ret
adc
jae
lock
bound
std
push
je
jl
dec
(bad)
fwait
cmc
cmp
mov
or
aaa
sbb
jl
xor
cmc
mov
outs
mov
js
pop
and
ss
sbb
lock
xchg
cwde
mov
lods
push
pop
(bad)
sbb
and
pop
and
push
out
and
sub
xchg
in
cmps
xor
mov
mov
xor
cmps
jnp
fbstp
push
addr16
mov
das
adc
stc
cwde
fidivr
outs
push
xor
push
fadd
push
shr
pop
out
fwait
inc
out
adc
stc
sbb
(bad)
ror
jae
mov
mov
xchg
stos
dec
arpl
push
(bad)
jno
rcl
jle
into
shl
aam
fst
xor
add
mov
(bad)
dec
test
xor
loop
das
or
push
xlat
sar
sbb
pop
aas
adc
pop
loope
xlat
cmp
pop
or
fwait
test
addr16
xchg
arpl
xchg
mov
in
and
mov
adc
sub
cdq
cmps
addr16
mov
cmp
pop
jb
mov
jge
and
shr
ror
retf
dec
fwait
dec
leave
jmp
leave
inc
clc
push
rcl
enter
add
xor
cmp
movs
xchg
sub
sub
adc
jge
jp
xor
xor
mov
push
mov
cmp
or
out
retf
scas
repz
out
outs
ins
call
(bad)
int3
gs
mov
popa
stos
sub
pop
mov
jno
jmp
pop
xchg
popa
(bad)
mov
or
inc
daa
int
das
inc
cmp
mov
ret
dec
daa
aad
movs
sbb
push
xor
ftst
jae
sbb
fs
pop
sbb
cmp
and
not
dec
cmps
shr
cmp
rcr
shr
outs
retf
out
sti
sbb
dec
dec
mov
mov
loop
pop
stos
int3
xor
adc
dec
push
mov
retf
adc
adc
pop
push
mov
clc
in
mov
mov
pop
xor
jp
ins
push
out
sub
pop
icebp
mov
outs
cli
push
test
pop
push
inc
out
push
cmp
or
sbb
enter
shl
xchg
push
ret
mov
dec
call
cmp
int3
loop
xchg
mov
xor
sub
xor
mov
ror
pushf
pop
cs
adc
cmp
push
in
sbb
push
clc
push
fsubp
pop
rcl
and
xor
jg
test
jo
rcl
sub
mov
push
shr
(bad)
jns
dec
inc
add
xchg
and
fcomp
out
inc
hlt
mov
pop
xor
out
push
addr16
xchg
adc
fld
imul
sti
lods
push
gs
sub
cmp
lea
push
or
or
or
or
or
add
test
add
inc
add
mov
pop
repnz
add
inc
nop
lahf
sbb
cwde
in
or
popf
and
adc
add
adc
test
adc
or
movs
ss
inc
sub
xor
fisttp
stc
scas
stos
sub
in
add
popf
(bad)
fs
or
add
test
push
mov
adc
ins
and
cdq
add
movs
inc
dec
nop
and
mov
ficom
and
call
mov
loope
add
movs
sub
add
add
pop
das
mov
pop
adc
xchg
and
mov
jle
mov
test
fldenv
adc
or
adc
retf
add
and
pop
fs
mov
rol
jmp
jmp
sub
out
inc
retf
adc
mov
push
int
sbb
jae
ins
jo
fcmovne
mov
jb
repz
arpl
add
xor
jmp
jbe
cmp
add
add
inc
adc
adc
ret
pop
cmc
add
mov
call
mov
test
add
lahf
fld
dec
mov
add
push
push
dec
add
inc
and
inc
data16
cs
and
or
adc
or
or
or
test
and
test
push
dec
add
or
or
or
sbb
inc
and
inc
lods
sbb
sbb
inc
sub
sub
mov
jmp
test
cmps
jae
xor
or
arpl
inc
xlat
inc
icebp
out
arpl
xlat
inc
pop
es
push
pop
scas
pop
mov
or
mov
(bad)
outs
(bad)
mov
push
jp
repnz
popf
xchg
cli
cmp
call
jg
cli
xchg
and
jno
jb
push
ss
repz
inc
jmp
sahf
adc
sar
imul
inc
(bad)
jo
xlat
sbb
imul
xchg
mov
popf
(bad)
sti
daa
push
and
ins
sub
jo
fld
cld
mov
mov
sti
mov
cdq
push
gs
imul
mov
push
xor
dec
cmp
inc
mov
push
push
inc
sub
rol
leave
mov
je
jns
shr
cmps
in
push
xchg
sub
scas
in
cli
jp
sbb
ret
ds
call
and
mov
daa
jg
(bad)
std
dec
mov
lahf
mov
test
and
(bad)
fld
push
sbb
push
fucomip
pop
and
(bad)
push
cmp
mov
fbstp
xchg
push
addr16
sbb
sbb
mov
inc
(bad)
ror
in
jbe
mov
stc
mov
sbb
(bad)
jmp
jns
jno
mov
cmp
jo
out
in
leave
inc
pminub
shl
inc
into
jne
scas
(bad)
push
dec
dec
(bad)
in
push
xor
jl
retf
cwde
lock
(bad)
jg
or
pop
inc
sar
lahf
and
loop
push
mov
cmp
jne
push
pop
push
and
and
ror
inc
push
(bad)
pusha
mov
push
add
sete
adc
cwde
xor
and
or
add
ror
sbb
les
or
or
gs
sbb
call
and
xor
pop
pop
shr
popf
test
cmp
ss
sbb
jbe
pop
mov
repz
cmp
pop
neg
(bad)
hlt
mov
jle
daa
shr
pop
dec
fmul
add
xor
dec
fwait
xchg
popa
jnp
mov
int3
mov
lds
cmp
bound
cli
jae
pusha
cli
iret
leave
push
(bad)
iret
sbb
push
add
sub
jnp
retf
ja
adc
(bad)
out
push
enter
xor
das
mov
cmp
pop
and
arpl
pop
jo
lods
ret
and
ror
add
mov
jl
jae
and
popf
ret
into
outs
jg
xor
mov
fwait
pop
and
aam
leave
xor
arpl
std
mov
xchg
sub
repz
mov
mov
aaa
jnp
or
mov
pop
jbe
jmp
mov
xor
xor
cdq
icebp
rcl
xchg
xor
lds
in
repnz
jle
loop
jo
and
pop
(bad)
adc
jmp
mov
push
jecxz
push
dec
(bad)
(bad)
(bad)
out
and
mov
jmp
dec
sbb
stc
add
add
mov
ins
cmp
pushf
js
xchg
sar
enter
aam
and
faddp
dec
ins
mov
loope
dec
mov
mov
mov
imul
movs
pop
mov
mov
int
lock
dec
data16
movs
fld
stc
outs
pop
out
jg
stc
pop
xchg
aam
jl
dec
enter
outs
xchg
xchg
in
loopne
hlt
scas
nop
pop
imul
aad
cs
xchg
mov
and
out
imul
stos
into
sbb
jno
or
and
(bad)
dec
or
dec
ds
mov
mov
jle
pushf
or
bound
pop
shl
(bad)
push
inc
cli
cmp
mov
jle
repz
imul
(bad)
icebp
mov
icebp
ret
ss
dec
and
xchg
repnz
loop
xchg
dec
imul
mov
(bad)
dec
sbb
inc
add
sbb
mov
adc
cmp
(bad)
mov
jmp
fstp
mov
add
int
inc
fisubr
dec
(bad)
jmp
cdq
lahf
test
fs
push
jae
mov
add
jae
push
and
mov
xchg
lods
out
int3
rcl
loope
(bad)
sbb
sub
xchg
cmps
sbb
cmp
and
loopne
cmp
ins
cs
mov
mov
outs
sub
retf
mov
scas
neg
sar
jns
add
sub
add
xchg
idiv
call
xor
retf
mul
ret
xor
imul
sahf
sbb
(bad)
js
xor
mov
pop
dec
(bad)
lods
cdq
repnz
cmps
fwait
and
xor
mov
in
cmp
popa
ja
pop
mov
(bad)
mov
int3
leave
int3
retf
je
dec
fldenv
jbe
fistp
jmp
or
cmp
daa
sbb
mov
sahf
pusha
jnp
pushf
xchg
shl
lea
retf
popf
shl
fs
cmp
sub
fcmovnbe
shl
jae
inc
sub
sbb
push
and
sbb
jno
jne
cmp
popf
packssdw
je
in
inc
push
push
push
mov
ffree
push
mov
and
adc
ja
mov
shl
cmps
xchg
(bad)
xchg
jecxz
pop
maxps
(bad)
inc
call
int
test
push
scas
mov
push
jns
sbb
mov
sbb
ret
inc
jl
popa
adc
into
dec
dec
dec
jnp
frstor
push
xchg
sbb
loop
dec
cld
pushf
cmp
inc
in
enter
xchg
aad
mov
and
inc
daa
mov
add
test
or
movs
or
dec
or
(bad)
mov
scas
lea
jl
mov
rol
sub
hlt
mov
pop
cdq
jbe
push
xchg
push
push
xlat
lea
aad
dec
push
mov
popf
cdq
cmp
fsub
mov
mov
popw
test
das
mov
adc
mov
mov
jae
fcomp
iret
(bad)
jbe
cdq
sbb
retf
fsubp
in
lods
xor
jmp
add
int
mov
pushf
jmp
out
and
sbb
loopne
pop
mov
pop
xchg
dec
pop
ins
and
sub
jbe
fs
xchg
push
sbb
cmps
jmp
bound
mov
and
fs
fwait
sbb
pusha
fs
(bad)
paddq
or
inc
or
push
dec
sub
jecxz
int3
ds
xor
xchg
or
mov
adc
or
push
xchg
sub
xor
inc
adc
pop
stos
sar
sbb
in
mov
fdivr
xchg
pop
mov
sbb
sbb
dec
ret
ret
js
(bad)
cli
scas
inc
ja
ret
push
and
jle
js
shr
jp
add
push
xchg
xor
xor
push
shl
sbb
add
inc
add
fidiv
add
pushf
into
jbe
mov
xor
ja
fld
ins
xor
repnz
fsubr
fisttp
and
inc
jb
in
popa
mov
dec
loop
push
pop
loope
test
jne
xor
cmp
mov
jmp
outs
xor
xchg
xor
dec
imul
mov
pop
and
pop
lds
mov
iret
cdq
xchg
mov
cli
dec
pop
push
scas
aam
xchg
sbb
ret
cmp
not
cs
mov
ret
pop
and
mul
sar
cwde
pop
jl
ss
shr
jnp
pop
cmps
aas
and
dec
es
pop
cs
push
inc
(bad)
mov
les
lahf
sbb
leave
mov
cmp
adc
fsub
sar
lods
push
mov
call
jns
leave
jnp
cmc
xchg
hlt
sti
lods
mov
imul
jecxz
cmp
call
and
dec
add
xor
imul
sahf
pop
test
dec
xor
fnsave
cwde
add
test
(bad)
dec
push
mov
sub
xor
iret
ret
xchg
adc
xor
mov
in
cmp
push
lea
adc
and
mov
sub
sub
pop
fwait
cld
cs
cmp
xchg
sbb
pop
pop
(bad)
(bad)
(bad)
into
loopne
repnz
mov
outs
adc
inc
xchg
xor
fsub
in
in
sbb
pop
ret
push
mov
xor
cmp
xchg
movs
in
out
sub
mov
and
test
cld
aas
leave
int
jbe
mov
(bad)
loopne
div
arpl
dec
mov
jbe
push
scas
and
pop
dec
outs
arpl
mov
fcos
add
rcl
push
or
div
test
add
hlt
rcr
jp
mov
mov
adc
aas
xlat
inc
jmp
adc
jl
cmp
call
into
daa
mov
and
pop
(bad)
mov
fs
jmp
jl
retf
mov
es
sub
ror
cmp
(bad)
xchg
xor
mov
outs
xlat
pop
sub
push
in
xchg
push
xchg
push
xchg
in
iret
imul
adc
into
inc
jecxz
mov
fiadd
inc
retf
fnstenv
mov
xchg
sbb
cmps
out
mov
pop
js
jo
aad
adc
mov
ffree
jne
retf
mov
setbe
test
sbb
in
push
mov
push
inc
dec
test
xor
fwait
pop
sbb
out
ud0
les
xchg
pop
leave
and
push
cmp
pop
cmp
(bad)
in
rol
add
xchg
mov
jae
dec
sbb
arpl
in
in
je
cmc
jge
ins
and
mov
jmp
fwait
and
cmp
clc
fadd
mov
fbstp
test
ins
push
ret
and
retf
(bad)
in
(bad)
mov
sbb
mov
inc
or
pop
cmps
jae
(bad)
sahf
ret
lock
ja
mov
xor
mov
push
ss
jge
lock
shl
pop
push
fdivr
mov
ror
lods
mov
inc
cmps
(bad)
xor
int
ins
fsub
loop
pop
jge
inc
test
cmps
sbb
mov
je
lea
pop
outs
ds
loopne
repz
sub
mov
iret
and
in
sbb
pop
(bad)
mov
pop
inc
test
add
test
add
test
adc
test
adc
test
adc
test
xor
sti
movs
test
jne
or
dec
adc
cmp
cmp
frstor
loope
(bad)
popa
and
mov
add
adc
xchg
cmp
xor
xor
jae
inc
inc
fldenv
adc
loop
inc
fisttp
and
test
add
inc
and
or
enter
out
ss
sub
dec
aam
shl
inc
push
inc
and
mov
lds
cmp
fldcw
sahf
pop
das
jno
dec
mov
mov
out
inc
pop
pop
fldcw
mov
ret
mov
mov
stc
aaa
cmp
sub
mov
dec
in
pop
xchg
and
xchg
and
pop
xchg
je
inc
ds
or
cs
pop
add
hlt
jmp
or
pop
mov
add
movs
and
add
adc
push
retf
push
add
push
cmp
pop
inc
and
sub
or
adc
mov
sub
pop
fst
js
inc
(bad)
call
dec
cmp
add
test
add
test
adc
test
adc
and
inc
and
inc
and
or
cmp
lea
fincstp
sub
mov
test
out
push
dec
dec
add
or
dec
sar
push
call
dec
and
imul
fldenv
adc
call
mov
xchg
and
test
add
nop
inc
or
sub
add
or
inc
push
test
dec
inc
jmp
dec
dec
rol
or
or
or
add
push
fwait
pop
pop
jmp
mov
push
dec
mov
mov
jb
mov
or
mov
sbb
test
nop
repz
not
aaa
not
pop
adc
mov
dec
shl
mov
cmp
mov
arpl
dec
mov
sar
rol
cmp
adc
mov
shl
xor
jo
add
or
test
fisubr
stc
mov
jmp
jle
xchg
inc
cmps
stc
(bad)
jmp
loop
out
dec
jae
pop
dec
test
xchg
jns
push
not
imul
enter
pop
stc
sbb
(bad)
jp
lock
aad
cmp
out
rol
pop
xor
add
push
rcl
fcomp
outs
sbb
push
xchg
and
mov
stos
fisub
push
test
(bad)
ins
add
inc
pop
imul
ret
outs
sar
sti
cli
sub
sbb
add
xor
and
cmp
retf
stc
dec
jnp
gs
out
sahf
and
mov
fwait
in
adc
xchg
sar
(bad)
fidivr
jg
retf
ds
and
(bad)
stc
js
test
cmp
fwait
iret
and
cmc
mov
add
lods
(bad)
dec
cmp
jne
cmp
sub
xchg
in
xchg
dec
push
dec
fiadd
lods
xor
loopne
mov
adc
inc
and
sbb
adc
mov
stc
sub
lock
add
add
pop
and
inc
or
cld
movs
test
dec
or
or
stos
fprem
jbe
xor
add
cli
ins
mov
enter
sbb
cwde
fs
push
add
repz
shl
les
pop
iret
rcr
je
loop
arpl
and
fcomp
mov
js
aaa
out
jge
stos
shl
sahf
push
inc
into
jae
repnz
jne
push
cmp
mov
js
js
es
out
fild
push
inc
or
mov
fisubr
pop
sbb
retf
cli
call
jbe
test
(bad)
xchg
and
call
pop
call
imul
ret
mov
xor
push
dec
mov
jns
pop
(bad)
(bad)
adc
ja
jge
bound
ins
fwait
aas
ds
out
fyl2x
dec
push
fbstp
cli
push
mov
out
add
cmp
into
mov
imul
push
jns
outs
cmp
jbe
sbb
cmp
mov
inc
das
sbb
arpl
pop
mov
cmp
cmps
into
clc
movs
and
dec
sbb
inc
xchg
xchg
outs
sbb
mov
or
adc
es
(bad)
mov
dec
jnp
and
inc
pop
jb
getsec
or
add
out
push
mov
lods
mov
cmp
jmp
pop
and
pushf
clc
into
jnp
add
inc
and
jg
cmp
(bad)
mov
shl
sbb
call
sti
je
fnstenv
jns
es
int3
cmps
ss
ja
xlat
sub
leave
lock
cmps
xchg
clc
lahf
xchg
stos
mov
ja
or
lahf
cmc
push
push
mov
mov
and
jge
push
xchg
sub
fnstcw
inc
push
cmp
(bad)
xor
jne
fstp
xchg
or
imul
mov
push
mov
cmp
sbb
(bad)
push
scas
and
or
call
pop
std
cmps
mov
hlt
jns
sbb
dec
inc
aaa
ror
sbb
xor
outs
aad
(bad)
and
dec
xlat
xchg
cvtpi2ps
ret
int
add
fcmovbe
pop
out
out
loopne
imul
stos
ret
leave
(bad)
leave
mov
stc
jecxz
cmps
pop
adc
(bad)
loope
jbe
je
pop
cwde
stc
mov
ins
hlt
xchg
imul
mov
cmp
pop
repnz
out
addr16
pop
jecxz
mov
mov
sbb
or
jp
mul
stos
cld
pop
push
aas
hlt
mov
sbb
std
sbb
push
cmp
xchg
repz
mov
pop
push
or
outs
push
inc
test
or
aaa
out
arpl
mov
aaa
popf
aaa
push
xor
cmp
out
fbld
pop
dec
or
movs
push
pop
(bad)
sub
pop
and
inc
pop
in
jp
imul
ret
les
sbb
scas
or
(bad)
mov
fs
xchg
nop
or
adc
dec
(bad)
pop
js
push
dec
and
dec
jnp
sbb
js
cmp
adc
popa
lds
xor
push
cmps
cmp
das
inc
(bad)
xchg
fldcw
lahf
pop
in
mov
mov
xchg
out
jae
dec
rcr
(bad)
mov
xlat
jnp
icebp
jbe
ds
and
jb
xchg
adc
xchg
cmp
or
retf
xor
(bad)
cmp
sti
scas
xor
or
cmp
mov
lds
out
inc
cmp
ins
lock
outs
mov
in
cmp
pop
lock
(bad)
jl
or
push
push
and
das
icebp
sar
das
sahf
addr16
push
nop
mov
int
mov
div
out
neg
adc
cmp
dec
mov
loop
cs
retf
mov
jmp
dec
int3
or
std
dec
lds
ins
jmp
inc
loop
mov
inc
mov
push
xchg
sbb
jne
aas
lock
shl
cmp
inc
mov
and
inc
inc
pop
pop
inc
sub
jp
pop
shl
(bad)
push
sub
mov
cld
xchg
aad
loop
sbb
mov
sub
xchg
arpl
dec
xchg
sub
inc
mov
pop
scas
dec
lock
jle
and
cwde
or
jnp
das
ss
pop
shl
fst
ret
lock
xor
sbb
jg
out
out
pusha
retf
sbb
mov
pushf
loopne
stc
out
rcr
push
push
and
add
dec
rol
xchg
mov
in
rol
sbb
or
jbe
in
fst
ds
xchg
pop
(bad)
js
mov
scas
cmp
aaa
mov
stos
jge
dec
sbb
sbb
les
icebp
dec
jbe
sub
mov
imul
push
mov
adc
in
ja
not
mov
jl
xor
adc
xchg
mov
inc
sub
loop
enter
sub
jmp
inc
mov
and
mov
neg
jge
retf
pop
sub
push
mov
or
or
arpl
outs
test
js
adc
out
pop
adc
inc
gs
imul
test
cmp
aaa
pusha
mov
sub
call
and
dec
call
adc
loope
vmwrite
jnp
and
dec
ret
out
push
(bad)
adc
mov
jg
jae
jl
adc
test
dec
push
pop
out
inc
push
mov
xchg
or
mov
outs
jnp
nop
test
adc
sbb
or
xchg
cmps
dec
int3
push
jecxz
fdiv
les
cli
jbe
cmps
mov
dec
mov
(bad)
sub
pop
dec
mov
inc
pop
aad
add
mov
shl
dec
popa
daa
or
jp
test
ret
xchg
push
push
mov
pop
fsubr
sbb
pop
cmp
jge
int
cld
lods
shl
jecxz
pop
sar
pushf
repz
ins
rol
push
stc
sar
push
arpl
scas
in
push
loop
xchg
sub
int
je
push
fisubr
mov
xlat
mov
push
jecxz
xor
jl
jae
std
int
(bad)
xor
shl
das
xchg
push
iret
sub
loop
and
push
nop
and
loope
popf
mov
adc
sub
or
and
xor
imul
sar
jae
fcmove
mov
cdq
or
push
jmp
jne
dec
shl
cmc
cmp
push
and
xchg
out
out
call
lock
jb
xor
inc
popf
test
mov
arpl
movs
xchg
loopne
inc
xchg
add
sbb
mov
inc
fdivrp
fsubr
or
mov
(bad)
sbb
jbe
pop
lods
xchg
popa
push
mov
out
cmp
cdq
cmps
jmp
arpl
fidivr
out
push
jp
inc
fdivr
jns
and
cwde
sbb
inc
mov
fmul
fcomi
mov
imul
mul
inc
pop
adc
out
iret
retf
xchg
mov
jecxz
mov
in
pop
xchg
xchg
push
iret
xchg
lods
sbb
mov
cmp
cld
(bad)
mov
popf
xchg
and
ins
retf
mov
dec
or
aam
int3
data16
dec
xchg
ss
jnp
ins
jne
jg
mov
mov
mov
sbb
jecxz
pop
stc
das
scas
aad
jmp
in
dec
aam
adc
adc
jecxz
mov
pop
or
xchg
fucomi
pop
cmps
js
hlt
stc
jae
ficomp
cmp
dec
mov
leave
jbe
xor
sbb
mul
adc
stc
(bad)
ds
clc
in
rcr
imul
aaa
arpl
jp
ins
inc
cmp
cmp
hlt
sub
ins
xor
fs
xor
mov
jbe
movs
iret
std
inc
mov
pop
and
and
aam
pop
mov
and
xchg
jp
outs
adc
cdq
lea
push
cdq
sbb
scas
test
cmp
mov
lahf
push
loop
mov
jl
ror
push
pop
arpl
icebp
pop
lods
ret
sub
ss
stc
aas
mov
shl
leave
in
jnp
(bad)
cmc
call
xor
push
add
inc
cmp
xlat
mov
mov
cdq
rol
cmp
repz
push
xor
mov
lea
mov
xchg
pop
call
cmp
rcr
mov
ret
daa
scas
push
movs
mov
pop
cmps
daa
aam
or
lods
daa
xchg
fmul
or
cs
add
hlt
and
jne
xchg
sbb
jae
(bad)
inc
inc
in
cwde
jae
mov
jbe
push
mov
jnp
ret
pop
jo
cmps
xchg
dec
xchg
pop
mov
sbb
sub
aad
fsubr
fisttp
sub
mov
mov
and
sub
fld
pop
jno
mov
retf
jecxz
les
pusha
mov
mov
cmp
enter
shr
ss
sahf
int
retf
cmp
mov
and
idiv
mov
iret
dec
xchg
sahf
sbb
mov
mov
shl
out
bound
out
pop
into
xchg
or
(bad)
data16
adc
retf
(bad)
xchg
pop
and
in
inc
xchg
mov
js
sar
adc
pop
xchg
sbb
out
out
push
ds
or
xlat
cwde
loope
pop
loope
mov
mov
add
mov
mov
shl
movs
jl
hlt
stc
jge
push
inc
or
fisttp
icebp
dec
cmps
es
pushf
add
ffree
cmc
stos
push
clc
stos
clc
test
fsubr
es
or
fadd
aaa
cld
aad
lahf
jne
push
mov
push
xlat
cmp
out
adc
into
adc
pop
cmp
in
pusha
arpl
mov
and
jns
jle
jns
mov
popaw
inc
mov
cli
jb
mov
cmps
fldenv
push
xor
or
jno
xchg
xlat
jmp
mov
inc
gs
or
loopne
jge
jne
(bad)
fsub
sub
cli
cwde
leave
or
adc
or
bound
pop
in
push
push
inc
cwde
bound
sbb
outs
inc
aaa
fs
pop
(bad)
mov
inc
pop
mov
loop
cmp
jbe
dec
test
ficomp
ins
mov
stos
ss
(bad)
mov
mov
imul
xor
lods
xchg
jmp
sub
mov
pop
fild
scas
mov
mov
push
adc
xchg
push
jl
inc
fs
outs
push
call
or
xchg
mov
mov
cmp
xlat
jne
jmp
jl
cs
dec
dec
sbb
pop
adc
and
xor
(bad)
daa
repnz
out
out
ss
cmc
push
movs
sub
add
jl
aaa
imul
sbb
repnz
inc
daa
lds
dec
push
add
inc
das
mov
or
or
or
or
or
test
inc
add
inc
add
movs
and
sar
nop
mov
inc
push
ds
mov
test
adc
pusha
cmp
inc
ja
adc
adc
nop
test
adc
dec
and
gs
inc
or
pop
dec
inc
and
inc
and
inc
es
adc
inc
adc
loope
or
mov
add
push
dec
xchg
cmp
adc
loopne
or
mov
nop
outs
imul
mov
mov
loope
adc
add
stos
inc
jle
xchg
sbb
sub
fadd
movs
add
in
aaa
mov
(bad)
imul
(bad)
shl
mov
dec
sbb
adc
jp
and
fild
data16
dec
loop
and
or
push
out
sub
nop
or
or
mov
bswap
add
jmp
mov
ret
push
mov
and
ret
xor
hlt
out
mov
or
ror
fnstenv
xor
adc
add
inc
and
inc
and
inc
and
mov
push
fild
and
add
nop
add
inc
mov
or
inc
jne
or
rol
and
xchg
inc
add
inc
nop
jle
inc
push
xchg
adc
dec
cmp
jne
or
je
dec
mov
add
jmp
push
daa
loope
mov
jg
shl
push
loopne
out
mov
popa
and
and
mov
and
add
or
or
or
or
or
or
or
or
and
pop
sbb
push
icebp
mov
hlt
mov
jae
adc
ins
mov
and
lds
(bad)
into
inc
push
pop
das
sbb
jl
outs
mov
mov
icebp
sub
fadd
imul
xchg
mov
push
push
fsub
mov
ins
hlt
mov
push
sub
fsubr
(bad)
inc
repnz
imul
andps
movs
aam
std
ds
xchg
cmp
aad
aas
rcr
adc
sub
mov
jle
mov
inc
loope
dec
sbb
nop
mov
inc
or
adc
sahf
out
and
scas
(bad)
jecxz
mov
and
jnp
bound
pop
fsub
rol
or
adc
inc
pop
ret
xor
adc
or
add
sar
loopne
adc
add
sub
and
shl
cmc
pushf
push
loope
fidivr
adc
xchg
test
push
test
pusha
loopne
push
sahf
xor
fstp
es
fsubp
mov
vpcmpeqw
mov
ret
out
test
jnp
sbb
cld
cmps
aas
jae
enter
scas
popa
movs
in
jmp
fwait
push
dec
out
jbe
push
jne
jecxz
dec
jbe
sub
lock
fdivr
addr16
pop
out
dec
(bad)
push
add
sahf
in
xchg
aas
xor
std
pop
and
jno
jnp
add
push
ds
inc
dec
jb
in
cmp
(bad)
neg
push
push
dec
inc
mov
jne
mov
arpl
mov
add
popa
jb
jl
es
cmp
jmp
shl
popf
push
push
shl
push
mov
push
cmp
cmp
mov
push
cld
sub
mov
and
nop
loope
test
pop
enter
sbb
arpl
jecxz
mov
test
pushf
icebp
out
dec
ficomp
mov
mov
shr
xchg
sub
(bad)
fst
sbb
cmp
pushf
rcr
or
loop
mov
pop
pop
xchg
rol
sbb
call
cmp
inc
mov
push
fsub
xchg
aaa
add
sbb
out
cmps
dec
fsub
(bad)
push
xor
mov
mov
retf
aam
scas
loopne
neg
mov
push
inc
dec
in
mov
cld
xchg
pop
cmp
aam
mov
aaa
in
iret
mov
sbb
mov
ror
daa
hlt
js
xor
es
fsub
and
sbb
enter
retf
xor
(bad)
sub
inc
(bad)
inc
gs
enter
sbb
and
imul
mov
pop
sbb
cld
cld
scas
jbe
push
push
inc
pop
mov
(bad)
push
data16
xchg
stos
movs
out
lods
fs
xor
and
mov
sbb
sub
pop
mov
jae
cmp
arpl
jg
adc
or
xchg
push
dec
(bad)
push
adc
fdiv
dec
cdq
xchg
loope
mov
jecxz
js
(bad)
cmps
xor
push
mov
xor
js
int
inc
sub
push
pop
call
in
pop
jne
lods
jmp
jecxz
mov
and
mov
ret
in
mov
inc
shl
xor
mov
add
pop
pop
xor
xor
imul
dec
out
repnz
xchg
mov
(bad)
daa
aam
out
cmp
out
mov
scas
fwait
or
test
ss
outs
push
call
cmp
movs
call
mov
cmp
inc
or
push
scas
xchg
or
adc
cmp
push
mov
and
mov
imul
imul
stos
sti
lods
lods
leave
xchg
lds
dec
mov
jg
fnsave
in
gs
inc
push
cmp
js
fdivr
dec
mov
inc
cmps
je
js
rcr
dec
mov
pop
cmp
jae
push
mov
cli
(bad)
push
cmp
shl
dec
mov
mov
dec
sti
lods
call
xrelease
in
imul
js
(bad)
stc
(bad)
mov
aaa
mov
fld
mov
cmps
loope
or
xor
push
dec
sbb
xor
xlat
cmp
pop
stos
jg
mov
push
scas
xchg
js
mov
scas
iret
inc
mov
repnz
cdq
stos
push
out
loop
xchg
repnz
movs
(bad)
xchg
xchg
fs
xor
add
mov
in
cmp
xchg
test
mov
(bad)
mov
aam
sahf
in
jmp
scas
xchg
test
or
mov
and
jae
(bad)
icebp
dec
hlt
pop
shr
bound
in
aad
fmul
push
xor
imul
(bad)
dec
inc
or
imul
repnz
xchg
gs
and
jns
push
lds
cmp
lods
mov
push
mov
imul
jae
(bad)
mov
ds
cmp
xchg
(bad)
sti
add
cmps
cs
out
sbb
jge
fs
sub
push
out
lock
jo
xchg
stos
int3
imul
cmp
loopne
jp
shr
iret
ds
es
fistp
pop
sbb
xchg
xor
push
stos
sbb
mov
outs
cmp
push
pop
mov
(bad)
ins
xchg
cmp
loope
xchg
arpl
adc
push
dec
add
jnp
retf
out
mov
daa
in
adc
push
xor
jnp
pop
push
dec
and
add
adc
enter
movs
mov
ds
jne
into
push
and
pop
daa
test
fdiv
pop
sub
sbb
jae
nop
sbb
jle
dec
push
movs
mov
jns
dec
(bad)
in
mov
xchg
adc
jb
retf
in
es
aas
jp
lahf
icebp
push
jno
push
adc
fisttp
pushf
repz
pop
mov
fs
dec
sub
aas
sbb
in
and
shr
xchg
aaa
xor
jo
int
es
push
xor
dec
xchg
neg
xor
jmp
lods
xor
bound
jo
sbb
out
pop
xchg
out
cmps
retf
pop
out
mov
dec
pusha
mov
sub
jnp
je
(bad)
jp
clc
sub
push
add
sahf
and
inc
push
jb
in
add
push
retf
das
sar
int
and
shl
mov
pop
or
pop
ins
arpl
add
mov
pop
pusha
test
shl
xchg
jecxz
cmp
ins
and
mov
fnstsw
addr16
enter
jno
lods
scas
arpl
retf
inc
inc
pop
add
test
xor
sub
(bad)
cmp
sbb
push
fcmovne
dec
cmp
movs
repz
xor
es
icebp
lock
jb
mov
pusha
mov
mov
jge
aas
mov
fist
lahf
push
jle
xor
(bad)
call
jb
cmp
sub
mov
lahf
movs
and
fldenv
je
jge
add
aad
test
adc
adc
add
stos
dec
lods
sub
scas
sub
cmp
into
ror
jne
inc
ffree
add
mov
jmp
call
hlt
mov
fucomp
stos
mov
int
das
push
into
mov
ja
sbb
out
sahf
ret
push
test
enter
or
jge
fucompp
shl
jbe
fst
xor
jns
in
arpl
movs
je
xor
(bad)
shr
jmp
loope
retf
fmul
es
inc
nop
push
jmp
adc
hlt
test
popf
cmp
sbb
mov
fild
xchg
jmp
daa
rcr
push
in
jmp
jae
out
call
out
pop
out
sub
cmp
ins
ss
push
dec
in
cdq
mov
cmp
lock
mov
sbb
pop
jbe
sbb
or
mov
inc
cmps
aam
pop
xchg
xchg
mov
push
inc
loopne
fcomi
scas
gs
repz
js
clc
repz
(bad)
ds
cmp
gs
push
into
inc
inc
inc
in
adc
mov
retf
xor
pusha
ror
pop
cmp
sar
sbb
jns
cmp
ins
push
xchg
jp
mov
dec
jo
outs
cmc
mov
push
pusha
adc
jae
loope
scas
mov
xchg
jl
es
mov
dec
xchg
inc
sub
(bad)
retf
mov
ror
xlat
(bad)
cmp
jb
aaa
fndisi(8087
sbb
mov
out
cdq
cmp
or
mov
fs
fdiv
dec
sbb
pop
jg
jmp
and
mov
ins
sub
pop
xlat
in
jp
in
clts
aas
daa
and
xor
in
ds
jns
aam
jmp
lods
xchg
cmp
std
cmp
int3
mov
and
ds
leave
mov
pushf
leave
xor
or
(bad)
ja
xor
daa
ins
cmp
fdivr
stos
pop
jmp
pop
pop
call
jo
mov
inc
pop
movs
mov
cmp
xor
(bad)
into
or
iret
ror
sbb
add
cmp
lahf
mov
push
jp
mov
arpl
jmp
jae
retf
or
pushf
div
into
stos
or
jns
arpl
mov
sbb
ins
cmp
adc
call
pop
xchg
(bad)
inc
dec
mov
xchg
xchg
xor
cmp
mov
jmp
pop
push
call
lahf
dec
test
ret
loope
test
lea
xor
dec
pop
push
retf
mov
xchg
jno
es
jmp
dec
push
loope
fmul
xchg
mov
sub
sbb
inc
jmp
ins
(bad)
std
imul
dec
dec
arpl
mov
ret
scas
add
sub
in
test
mov
cmp
ror
xor
dec
push
cdq
icebp
(bad)
xchg
daa
mov
mov
and
ins
mov
sbb
push
pop
pop
aam
sti
sub
(bad)
cmp
cwde
ins
iret
ds
test
xor
and
fisub
sbb
mov
clc
push
data16
aaa
(bad)
cli
xchg
cmp
sub
outs
mov
lock
xchg
aas
mov
stc
scas
mov
mov
jmp
mov
mov
movs
lods
xchg
scas
jo
push
xchg
mov
pop
iret
clc
cmp
cmp
gs
mov
iret
adc
xchg
push
inc
loop
cmove
jo
pop
je
ins
jb
mov
mov
ja
inc
repnz
mov
jg
xor
std
or
outs
mov
ins
loopne
pop
jp
pushf
mov
into
fimul
pop
jae
and
into
out
imul
stos
es
dec
in
adc
dec
or
outs
xor
push
out
mov
cmps
std
mov
(bad)
pop
pop
or
sahf
enter
sbb
mov
sub
ret
movs
je
jne
sbb
pop
out
mov
cmp
mov
mov
adc
or
test
adc
add
test
add
sub
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
inc
add
or
mov
or
or
adc
inc
adc
adc
(bad)
dec
stos
sub
inc
adc
dec
and
adc
dec
stc
inc
call
aad
jle
shl
inc
sbb
xchg
adc
cmps
sbb
repnz
fbstp
adc
sub
sbb
idiv
fcomp
push
inc
add
dec
add
sbb
stos
enter
inc
rcl
repnz
and
jne
iret
(bad)
loop
mov
jmp
repnz
push
lea
add
xchg
push
out
mov
das
rol
pop
dec
jno
shr
push
arpl
or
cli
jns
pop
pop
retf
pop
mov
sub
ss
fadd
jbe
push
push
std
aad
sbb
cmp
sbb
mov
fdivr
pop
in
out
cmp
jl
push
inc
add
inc
add
inc
add
test
adc
rol
or
stc
inc
adc
or
and
adc
rol
and
shl
inc
pop
dec
lock
mov
sbb
mov
push
and
dec
add
mov
mov
rcr
aam
fld
cdq
sub
add
inc
add
inc
add
add
adc
test
adc
push
adc
mov
xchg
add
and
dec
movs
add
inc
imul
test
adc
sbb
sub
add
xor
xchg
adc
scas
xchg
clc
dec
or
sub
mov
mov
mov
les
retf
(bad)
push
shr
repnz
rcr
sar
add
scas
mov
inc
leave
push
inc
and
jmp
clc
shr
xor
gs
jecxz
aaa
les
retf
sbb
sub
aam
xchg
aad
int
sub
in
or
mov
into
pop
dec
cs
jnp
or
xchg
adc
adc
jg
push
scas
push
fs
dec
inc
add
or
mov
add
and
jge
push
dec
adc
inc
sub
push
dec
test
inc
lds
fcmovu
cld
sub
pop
cmp
or
jbe
cmp
dec
push
adc
cld
pop
sub
movs
xchg
shl
add
jle
loope
pop
sub
dec
(bad)
sbb
loop
sbb
lods
js
push
shl
loope
push
inc
inc
mov
fcomip
sahf
sub
(bad)
fsubp
repz
jnp
pop
pop
xchg
adc
in
test
xchg
mov
mov
test
aam
ror
dec
mov
fucomp
jp
popa
pushf
cmp
inc
es
pop
jmp
dec
xchg
mov
aaa
fwait
popa
hlt
mov
pop
jb
xchg
mov
sub
push
inc
inc
dec
xlat
push
mov
jl
xchg
sbb
adc
rol
mov
pop
(bad)
xor
add
mov
outs
push
stc
pop
or
or
fimul
add
add
jb
lea
sbb
fstp
imul
cmp
in
cmps
lea
xor
jnp
jg
mov
xor
mov
js
gs
lock
ss
movs
inc
xchg
sbb
add
arpl
test
add
shl
mov
jmp
pop
std
cs
cmp
mov
(bad)
loopne
stc
sub
je
fisub
ret
mov
ret
scas
push
repnz
jmp
mov
or
sub
shr
jge
mov
and
xor
aas
jb
cld
sbb
fldcw
loopne
dec
jle
jle
ret
jns
push
retf
in
dec
sbb
arpl
ja
or
jge
jmp
es
inc
cmp
ss
aas
jne
xor
cmp
stos
fs
ror
adc
call
ins
mov
inc
test
bound
cmp
leave
push
and
(bad)
ins
add
ins
sub
or
xchg
outs
pop
retf
add
mov
add
sub
loope
jnp
mov
test
inc
xchg
popa
mov
inc
mov
dec
mov
mov
push
retf
mov
cmp
add
or
dec
gs
mov
rol
sub
mov
dec
push
jmp
int3
int
and
ret
loopne
stos
mov
cmps
mov
pop
fs
pop
(bad)
in
xchg
lahf
and
aaa
aad
adc
(bad)
jne
test
mov
sbb
and
inc
jmp
mov
push
call
ins
xchg
iret
xor
jp
pop
xor
sub
(bad)
ja
shr
push
cmps
xchg
ja
mov
adc
in
ds
sub
adc
jb
stc
adc
or
mov
fstp
push
jae
xchg
scas
lods
scas
pop
dec
loope
jmp
dec
inc
out
push
and
dec
xlat
outs
fstp
test
xchg
cmps
cdq
frstor
sub
mov
xchg
adc
jle
pop
push
mov
xchg
dec
inc
pop
dec
repz
mov
jge
loopne
test
loop
mov
mov
clc
out
call
int
push
sbb
sbb
mov
shl
or
jno
jbe
xchg
pop
rcl
jge
idiv
add
dec
adc
lahf
movs
pop
adc
pop
mov
cmp
retf
jne
sahf
rcl
sti
cs
pop
cdq
and
mov
push
push
mov
ins
out
es
push
out
test
sbb
xor
jns
jo
sti
nop
scas
xchg
xlat
xchg
cs
mov
inc
cmp
mov
out
repnz
outs
out
shl
aas
cmp
in
xchg
(bad)
aas
test
inc
jno
jne
jne
retf
aaa
iret
jne
inc
sub
pop
(bad)
jb
mov
jp
pop
cmp
pop
dec
scas
cmp
pushf
push
pop
xchg
pop
or
jmp
in
fucomp
push
movs
das
mov
push
stc
fs
adc
(bad)
in
aas
jne
popf
xchg
dec
pop
add
mov
cmps
adc
scas
movs
sub
fs
iret
ds
xchg
pop
xlat
sti
sub
pop
cmc
add
mov
mov
sub
add
xor
pop
inc
jge
js
mov
cs
cmp
stos
mov
(bad)
je
mov
fld
add
and
fstp
lock
hlt
cmps
retf
shl
cmp
cmp
out
push
ja
(bad)
fdivr
rol
mov
pop
out
push
push
test
(bad)
icebp
cwde
popf
mov
dec
vcmpunord_ssd
xor
int
sbb
retf
cmp
enter
cmp
hlt
lahf
(bad)
gs
or
sahf
xchg
pop
out
test
inc
mov
cmc
sbb
jmp
inc
mov
in
jo
inc
and
push
xor
clc
jp
movs
sub
add
fs
jmp
cmps
js
push
pop
mov
and
movs
popf
aas
jne
mov
es
cdq
pop
test
or
or
repz
cdq
mov
js
mov
jne
add
dec
cs
int3
jo
fdiv
and
push
jecxz
inc
adc
outs
cdq
mov
mov
addr16
jg
jl
and
pop
xor
inc
enter
mov
adc
add
push
repnz
std
sbb
sbb
push
nop
cli
or
pop
cmp
adc
js
and
mov
sub
stc
mov
int
pop
in
mov
in
shr
adc
cmps
inc
or
pop
adc
test
retf
movs
jle
pop
inc
adc
das
inc
loope
add
jle
jge
arpl
inc
rsm
jns
push
mov
mov
and
xor
add
cmp
add
mov
sbb
push
push
loope
ja
jp
jmp
int
mov
cmp
push
lods
in
pop
ds
add
dec
fnstsw
cld
dec
sub
das
retf
pop
idiv
scas
mov
lods
xchg
fstp
cs
(bad)
push
add
(bad)
sbb
push
fwait
stos
push
loop
addr16
bound
(bad)
sbb
stc
pop
out
mov
int3
jno
xchg
in
repnz
je
xchg
popf
scas
popf
cmps
loop
fwait
mov
js
call
inc
outs
retf
data16
mov
mov
pop
ret
loopne
sub
iret
das
repz
hlt
mov
xchg
scas
retf
jb
popf
mov
or
ins
or
mov
mov
icebp
stos
mov
iret
push
scas
xchg
mov
mov
in
inc
ret
mov
in
(bad)
shl
mov
iret
mov
clc
icebp
mov
mov
popf
mov
and
ja
aaa
inc
sbb
sub
or
outs
movs
test
sbb
cmp
push
loopne
xchg
push
jge
imul
scas
pop
xchg
fsub
xchg
pop
(bad)
imul
std
xlat
mov
mov
fwait
popf
push
sub
test
mov
inc
xchg
xchg
cmp
mov
sbb
(bad)
adc
repz
mov
mov
cmp
add
sbb
lods
enter
jae
imul
mov
xchg
in
or
in
fistp
xchg
and
repnz
jge
push
xor
dec
std
out
mov
jb
jb
mov
inc
adc
test
lods
fimul
cmp
xchg
xchg
cld
mov
add
mov
sbb
mov
dec
cwde
pop
pop
and
loopne
repz
gs
jmp
mov
jmp
add
test
icebp
jbe
push
and
rcl
push
(bad)
popf
lods
and
jl
pop
lahf
ret
pop
push
sub
lea
dec
push
inc
(bad)
loop
dec
and
fcomp
pop
movs
xlat
jecxz
pop
fdiv
mov
mov
pushf
fdivr
push
add
fdiv
fcomp
lock
pop
xchg
mov
mov
sahf
or
or
pop
and
xchg
mov
repz
lods
imul
mov
aam
pop
xlat
pop
loope
ss
xchg
adc
inc
loope
push
xor
ret
fisub
lahf
push
and
push
les
cmc
inc
or
nop
mov
fild
jle
lods
(bad)
dec
xor
add
mov
jmp
mov
ds
xor
fdivp
mov
cmp
call
or
out
dec
and
movs
in
push
lea
mov
daa
(bad)
xchg
xor
adc
jl
and
out
sub
xchg
pop
inc
pop
mov
xor
(bad)
fdiv
lds
in
out
(bad)
mov
mov
inc
add
sti
cs
mov
fcomp
(bad)
ins
iret
xchg
arpl
lods
fdivr
add
clc
aad
mov
fcomp
adc
push
xor
sub
mov
pop
div
mov
fs
out
je
cmp
ret
xchg
mov
adc
mov
xor
pop
shl
daa
xor
popa
and
in
xchg
mov
sub
and
cs
(bad)
inc
je
dec
sub
shr
out
mov
fldcw
call
mul
lods
cdq
jp
ss
sbb
adc
jge
leave
pop
inc
rcr
push
repz
retf
xor
shr
mov
cmp
das
sbb
inc
xchg
inc
pop
push
in
fwait
inc
das
dec
sar
xchg
xor
xchg
popf
int3
fdivr
in
inc
mov
jmp
xor
gs
jmp
xor
or
mov
pop
xchg
lds
fadd
cmp
or
mov
(bad)
jg
xchg
pop
loope
inc
and
inc
paddb
xor
popf
movs
shl
les
test
repz
loope
xchg
das
jecxz
lea
adc
div
pop
psrad
arpl
add
(bad)
outs
loop
hlt
cdq
cmp
jl
pop
mov
jns
dec
fsubp
out
fcom
jb
cmp
mov
sub
cli
or
push
dec
jecxz
inc
fnstenv
add
dec
sbb
inc
push
xchg
inc
pusha
adc
leave
in
and
mov
sub
push
or
bound
es
dec
sbb
stos
push
clc
fnstenv
mov
repnz
wbinvd
xchg
or
adc
call
cwde
hlt
imul
xor
outs
push
jns
test
jge
jns
sbb
call
aam
retf
adc
test
adc
fild
cld
fimul
and
inc
and
inc
and
inc
jbe
adc
test
add
test
add
test
movs
inc
add
and
adc
test
adc
daa
mov
mov
dec
add
mov
or
or
adc
mov
add
sbb
repnz
pop
sub
inc
movs
mov
add
call
sahf
(bad)
push
cmps
mov
mov
test
adc
or
xor
test
add
sub
pop
dec
dec
aad
ret
addr16
ds
lea
inc
mov
loop
repz
les
pop
mov
sub
inc
(bad)
lock
mov
mov
sbb
loopne
sbb
fdivp
dec
loop
mov
dec
dec
and
push
call
add
pop
or
or
mov
dec
nop
stc
lea
dec
mov
push
mov
out
ja
lahf
mov
lea
retf
sbb
out
jns
mov
mov
or
fcom
push
inc
jbe
inc
add
jecxz
inc
arpl
adc
lds
mov
xor
out
push
fist
outs
sub
and
pop
and
and
sub
out
jbe
push
retf
je
inc
cmp
or
or
scas
test
push
adc
add
push
in
test
inc
adc
jmp
sbb
rol
clc
inc
nop
test
add
sbb
test
and
jmp
jno
mov
adc
mov
jp
inc
or
xchg
fwait
and
ja
mov
arpl
popa
add
jmp
in
add
add
test
adc
and
inc
add
or
push
test
pusha
mov
sti
movs
jns
and
inc
or
adc
inc
dec
add
mov
add
or
imul
adc
push
dec
call
enter
rol
mov
xchg
stos
retf
jb
jle
sub
xchg
es
push
sbb
repnz
cdq
adc
and
push
jmp
aas
dec
cmps
inc
xor
outs
add
jp
jecxz
popf
xchg
jns
cmp
and
or
or
fwait
aaa
inc
jge
add
imul
(bad)
mov
mov
fimul
and
mov
pop
xlat
and
inc
mov
xchg
ds
outs
nop
xchg
aas
fdiv
sub
inc
add
mov
pop
adc
pop
sbb
cmps
xchg
pusha
cmc
or
sub
(bad)
outs
inc
cmp
push
mov
mov
push
add
inc
dec
adc
aam
sbb
fwait
inc
dec
add
cwde
xor
mov
jno
mov
je
and
inc
es
lock
jno
lea
outs
enter
sbb
jbe
fisubr
add
ja
sbb
xchg
lods
shl
repnz
jnp
push
loopne
je
das
xor
ins
cmc
mov
mov
lods
arpl
in
loopne
push
mov
xor
xor
(bad)
idiv
xor
cdq
nop
dec
sbb
pusha
outs
clc
inc
movs
xchg
in
push
add
je
bnd
jl
movs
aaa
ror
in
push
dec
fldcw
fsub
xchg
(bad)
lock
mov
je
js
xchg
add
cli
movs
lods
aam
gs
(bad)
jnp
loopne
aaa
pop
daa
push
shl
pop
cmc
xor
push
ss
xlat
dec
ffree
xchg
sub
xchg
jl
xor
imul
push
sub
xchg
add
movs
pop
stc
pop
sub
or
dec
sbb
mov
adc
sbb
fwait
mov
and
pop
pop
mov
(bad)
out
out
and
pop
pushw
and
push
outs
inc
dec
sbb
pop
mov
out
inc
or
add
jmp
mov
clc
mov
int3
adc
movs
mov
mov
mov
jl
rcl
pop
(bad)
das
xor
inc
std
cmps
cmp
jnp
mov
and
leave
adc
inc
sbb
sbb
cld
jne
jp
inc
push
lea
xor
mov
xchg
and
mov
cmc
push
ja
dec
pop
cmp
inc
cli
xor
loop
and
mov
inc
cmp
ss
jmp
outs
test
in
mov
mov
xchg
sub
pop
pop
jbe
push
cwde
fwait
sub
or
add
out
adc
les
jno
data16
jno
mov
sbb
retf
repnz
dec
mov
adc
fs
jae
(bad)
jae
cmp
ins
jo
ja
push
push
jecxz
xchg
dec
push
in
aas
dec
dec
mov
je
int3
sub
(bad)
pop
add
in
movs
sbb
add
sbb
jmp
outs
sbb
mov
push
cmp
add
sub
or
ret
jae
call
pusha
mov
js
sbb
dec
repz
fst
(bad)
aas
xchg
fs
mov
cwde
sahf
sbb
cmp
scas
fimul
fs
sbb
mov
ret
jb
cmc
cmp
fsubp
jno
call
inc
push
sub
or
ret
rcl
inc
dec
cmps
retf
stos
add
les
or
shr
int3
jo
jmp
or
int3
pop
cmp
push
cwde
es
es
cmp
xor
sub
cmps
sub
sub
stc
(bad)
out
(bad)
pop
daa
mov
(bad)
out
push
daa
fst
rol
xor
sub
aaa
hlt
cmp
inc
and
xor
xchg
lahf
idiv
sbb
adc
dec
cdq
scas
cmp
imul
sbb
lock
jecxz
loop
(bad)
cs
(bad)
jmp
or
outs
rcl
mov
sub
pop
xor
in
mov
pop
xchg
and
mov
mov
(bad)
mov
jbe
push
call
dec
xchg
push
(bad)
mov
in
mov
cmp
xchg
lea
push
push
imul
imul
mov
stos
push
inc
stos
jb
adc
sub
cmp
dec
test
inc
ret
jmp
add
pop
xchg
es
in
or
jnp
lods
pop
cmp
(bad)
xchg
retf
nop
push
test
div
jne
jae
fdivp
mov
fcmovb
ja
aam
dec
push
inc
mov
arpl
imul
rol
push
arpl
in
fs
jge
sbb
or
xor
jb
arpl
pop
mov
push
stc
or
mov
push
push
or
or
ret
sar
dec
sub
out
mov
nop
fld
repnz
pop
or
fistp
xchg
and
mov
sbb
jne
mov
mov
mov
jo
push
into
sbb
jne
add
xchg
into
leavew
sub
lock
mov
je
jge
cmp
rol
inc
or
in
sbb
sbb
mov
mov
sar
cs
mov
inc
int3
sub
mov
mov
(bad)
in
pop
sbb
hlt
xchg
out
imul
into
xchg
js
mov
(bad)
xor
jne
or
mov
xchg
pop
cmp
mov
inc
mov
sbb
fcmovne
xchg
add
inc
clc
push
aad
arpl
mov
cmp
es
int3
imul
mov
js
push
rcr
ror
mov
imul
cld
scas
mov
imul
pop
dec
dec
or
xor
inc
xor
mov
outs
(bad)
jl
sbb
outs
addr16
(bad)
iret
shl
test
lock
in
jns
mov
add
jo
pop
sub
retf
pop
or
mov
into
es
sbb
loope
repnz
imul
sub
imul
push
jmp
cdq
push
cmp
xchg
imul
pop
pop
pop
adc
inc
movs
jmp
jmp
dec
in
ret
push
push
scas
data16
add
ds
lahf
jmp
loopne
and
aaa
data16
retf
stos
addr16
mov
idiv
xchg
rol
jg
sbb
cmp
fisub
pop
pop
out
jl
fwait
lock
test
xor
outs
jmp
sar
adc
or
push
out
and
fdiv
and
or
jp
lods
cmps
loop
sub
nop
cmp
icebp
inc
adc
in
sub
cmp
loope
(bad)
retf
or
int
adc
inc
idiv
jo
(bad)
inc
jmp
jecxz
push
iret
xchg
pop
iret
xor
jmp
mov
jl
in
iret
and
outs
xchg
int3
jle
dec
sbb
test
sbb
dec
cmp
jmp
add
(bad)
fnstsw
pop
shr
fild
cmps
aad
mov
sub
or
xchg
das
jmp
pop
int
mov
dec
call
xor
adc
lds
outs
pop
mov
clc
mov
repnz
push
(bad)
nop
in
push
xor
test
pop
cdq
sbb
mov
mov
stc
push
bound
int3
out
arpl
cld
cmp
xor
pop
push
or
(bad)
push
imul
cmp
jl
test
inc
push
inc
mov
(bad)
push
and
inc
fist
popf
in
push
push
jmp
mov
cmp
mov
xchg
retf
data16
cmc
lods
cdq
jae
dec
out
mov
dec
or
loopne
nop
xor
jl
in
into
scas
imul
inc
test
inc
into
ror
pushf
scas
imul
mov
shr
in
mov
xor
out
cmp
ret
aas
xor
adc
push
jnp
push
aaa
push
push
out
xchg
mov
loopne
sub
push
fucomi
mov
cwde
xchg
arpl
dec
mov
xor
pop
fst
rol
icebp
ds
ins
mov
and
ds
popf
das
les
mov
inc
and
loopne
jecxz
in
inc
mov
leave
mov
shr
and
cmp
push
dec
sub
ja
pop
mov
jae
jbe
mov
mov
sub
aam
sbb
mov
pop
mov
xor
aam
jns
fwait
inc
fdivr
(bad)
fldl2t
icebp
xchg
arpl
(bad)
jo
mov
sub
mov
outs
cli
dec
pop
iret
inc
sub
push
(bad)
push
(bad)
mov
gs
xchg
push
ins
xor
cmp
fist
mov
cs
sbb
fsubr
je
cmp
inc
jb
(bad)
stos
scas
in
dec
add
push
push
lea
push
imul
pop
mov
or
xchg
rol
or
test
adc
and
add
add
pop
jecxz
not
arpl
hlt
xchg
cmp
hlt
sub
cmp
aaa
arpl
dec
mov
out
(bad)
pop
jg
(bad)
fsubr
sbb
div
neg
std
push
ficomp
jnp
sbb
imul
mov
lock
sub
cs
dec
enter
test
cmp
and
ins
sbb
inc
cmp
sti
dec
push
sub
mov
aad
popa
adc
nop
jp
and
dec
in
call
popf
shl
aas
and
ins
push
mov
gs
out
pop
out
daa
loope
dec
lds
jns
mov
jecxz
js
jl
pop
cwde
int
pop
popa
cmp
mov
out
fstp
lock
sahf
int
mov
xchg
sbb
inc
jo
aam
mov
sbb
cld
dec
ins
push
out
sub
jle
int
repnz
stc
lods
leave
cmp
fiadd
fsubp
retf
clc
test
sbb
es
adc
mov
out
add
lds
adc
jae
cmp
inc
cmp
push
or
jo
or
mov
inc
dec
fcomi
mov
std
addr16
mov
test
les
jmp
inc
xor
mov
nop
jp
cli
lods
imul
aaa
xor
mov
push
mov
rdtsc
(bad)
mov
pop
adc
leave
xchg
das
sub
dec
repnz
push
dec
sahf
loop
xchg
push
mov
and
push
jg
and
lock
mov
test
loope
(bad)
jmp
mov
pop
and
ds
push
dec
test
dec
and
adc
mov
and
add
ins
dec
test
stos
mov
sbb
xor
and
jbe
inc
xchg
or
mov
and
jns
ds
cli
enter
xchg
and
out
or
aad
f2xm1
loop
cmps
pop
dec
aaa
push
movs
xchg
inc
adc
outs
(bad)
les
cmc
pop
or
int3
pop
int3
sub
push
bound
pop
jns
cli
xchg
sti
movs
push
test
adc
daa
push
mov
or
or
xor
shr
adc
add
or
or
or
or
or
or
or
or
test
adc
inc
adc
inc
xor
test
and
add
or
or
out
and
outs
jo
aaa
mov
push
inc
adc
inc
adc
inc
adc
inc
cs
or
(bad)
imul
(bad)
push
(bad)
jb
add
mov
scas
xchg
mov
or
retf
jnp
sbb
sbb
daa
retf
rol
and
add
adc
dec
dec
or
scas
not
lea
jno
in
or
sbb
cmp
mov
mov
test
cwde
mov
push
call
into
cmp
aas
xor
jmp
inc
scas
mov
cmp
push
and
rol
dec
jmp
push
add
add
or
add
push
add
lock
and
imul
adc
add
jno
inc
dec
lds
out
sbb
pop
inc
ja
push
int
mov
fsubr
call
mov
inc
inc
mov
xchg
dec
inc
aaa
retf
mov
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
add
pop
dec
inc
and
in
add
adc
cmp
add
cmp
inc
and
popf
and
inc
mov
fldenv
add
dec
jl
adc
inc
or
xchg
call
movs
add
cs
stos
icebp
xor
sbb
mov
lods
lock
movs
dec
pop
sbb
pop
aam
sub
mov
popa
repnz
test
fcomp
xchg
mov
xchg
xchg
in
ror
jmp
call
pushf
pop
loop
je
dec
push
and
add
test
add
xor
cmp
sub
leave
and
sar
aaa
dec
or
shl
jne
pmulhw
push
push
data16
add
adc
pop
and
nop
mov
pop
fnstcw
mov
xor
mov
cmp
mov
mov
ret
inc
mov
fisub
pop
xor
in
dec
and
xor
mov
adc
fsub
jmp
xchg
aam
imul
jnp
test
sti
pop
mov
mov
in
out
jg
adc
(bad)
loope
outs
loopne
xor
pop
into
int3
xchg
sbb
or
dec
inc
loope
xchg
push
aam
loop
fbstp
dec
inc
xchg
movs
cmp
sub
js
ret
xchg
push
loop
iret
sbb
(bad)
jle
or
retf
and
inc
xchg
adc
lea
loopne
outs
in
mov
mov
fnstcw
jbe
cmp
pusha
clc
cmp
inc
or
repnz
and
test
add
and
add
or
dec
cmp
lods
popa
and
and
cmp
je
scas
(bad)
les
rol
rcr
adc
loopne
push
lea
and
adc
mov
arpl
jbe
mov
sti
lods
and
in
push
xor
(bad)
push
push
jle
outs
movs
retf
xchg
inc
add
and
pop
jae
inc
inc
jg
pop
stc
nop
push
mov
mov
dec
fwait
sbb
fwait
mov
or
mov
aaa
push
adc
fiadd
mov
push
stos
lds
mov
adc
cmp
pslld
cmp
fwait
xchg
or
imul
repz
ror
mov
push
addr16
dec
xor
jno
bt
scas
outs
into
fwait
dec
lock
loop
mov
mov
sbb
pop
add
adc
sbb
fdivrp
add
sub
aas
push
fwait
push
ja
pop
cmps
ret
push
inc
mov
leave
jnp
mov
(bad)
mov
fwait
cli
ins
(bad)
movs
mov
mov
push
scas
xchg
add
ds
cs
jmp
xchg
mov
mov
push
cmp
cli
arpl
jae
xchg
pop
sub
loope
cdq
mov
(bad)
jmp
pop
out
es
dec
fcmovb
repnz
mov
(bad)
mov
arpl
jns
and
scas
shl
cld
mov
sbb
cmps
mov
sub
repnz
lock
pushf
std
mov
jg
int
rcl
push
mov
push
arpl
cmps
repz
xor
cmp
scas
fs
jbe
and
out
inc
xor
mov
mov
leave
fucomip
popa
outs
ret
retf
or
sets
sub
xchg
or
dec
mov
je
js
mov
repnz
sub
fisubr
xchg
mov
inc
mov
movs
xchg
rcr
inc
pop
(bad)
pop
or
sbb
mov
push
or
mov
push
mov
and
fldenv
sar
jb
mov
mov
xor
or
repnz
add
les
xchg
add
jg
sbb
mov
sar
lock
leave
loope
pop
sub
retf
arpl
bswap
scas
jl
sbb
sub
mov
cdq
fsubp
pop
clc
sbb
mov
or
add
(bad)
jle
fdiv
loopne
in
mov
push
imul
dec
mov
sahf
add
fs
daa
adc
add
or
pushf
ret
sub
in
icebp
mov
dec
add
and
(bad)
push
adc
(bad)
popa
int
lahf
mov
mov
sub
inc
and
nop
xor
sub
ins
sbb
pcmpeqd
cmp
xchg
jle
mov
sub
mov
scas
imul
int3
xchg
lds
inc
mov
cmp
ja
fwait
iret
in
test
mov
retf
jecxz
push
scas
lds
into
push
xchg
test
stc
cmp
inc
(bad)
ret
and
add
xchg
sbb
int
inc
sub
mov
jbe
xor
mov
mov
inc
and
xor
add
adc
adc
repnz
call
mov
push
add
lea
pop
shl
mov
retf
xor
out
movs
add
and
sbb
xchg
(bad)
jmp
mov
push
in
xchg
mov
iret
es
pop
out
(bad)
xchg
es
jae
dec
push
inc
rcl
mov
test
add
sub
rcr
or
pop
outs
jo
push
in
mov
mov
or
outs
sub
or
cs
cs
pop
xor
fsub
push
jno
inc
gs
mov
lea
fcomp
aas
call
lods
push
or
pusha
ins
cmps
pop
mul
loope
adc
ss
pushf
mov
sub
push
mov
lock
cwde
lods
pop
push
aam
mov
inc
(bad)
mov
mov
loope
mov
div
sub
cwde
out
repz
js
mov
popa
aas
sub
xchg
fcomp
mov
jmp
retf
ss
out
outs
clc
rol
or
jmp
push
push
inc
dec
je
mov
xchg
inc
test
(bad)
lahf
fwait
push
push
out
mov
or
inc
mov
aas
fsubr
mov
jae
push
push
dec
mov
pop
in
dec
call
cwde
inc
mov
dec
jo
or
lock
inc
dec
aad
out
popa
inc
xchg
cmps
scas
dec
leave
fstp
jns
xor
push
in
dec
add
aam
and
out
(bad)
pop
jne
in
cmp
sbb
test
ror
fistp
fsubrp
cli
mov
pop
sub
shl
test
or
add
sbb
mov
std
std
sub
or
add
arpl
xor
mov
rol
mov
sbb
sub
data16
out
pusha
div
pop
ja
into
call
fstp
aas
jmp
retf
out
ret
pop
idiv
push
pop
or
mov
sahf
pop
ret
xchg
mov
and
fxch
mov
js
xchg
into
push
sub
jo
mov
ret
(bad)
or
cs
loopne
in
lahf
jnp
popa
sar
jl
mov
mov
(bad)
cmp
mov
jle
sub
jno
call
(bad)
popf
push
cdq
jb
les
(bad)
mov
repnz
sbb
loopne
jne
mov
adc
out
out
out
and
jbe
mov
les
std
mov
jae
aas
adc
ds
inc
nop
dec
and
(bad)
mov
and
movs
cld
inc
stos
dec
cwde
out
mov
pop
inc
xor
fstp
out
pop
push
lock
push
mov
push
push
inc
popa
les
mov
cmp
push
jecxz
mov
rol
shl
xlat
lds
mov
mov
aas
dec
arpl
scas
in
jb
rcr
addr16
add
sahf
stos
je
cmp
xchg
cmp
in
(bad)
loope
jecxz
cs
ins
cs
iret
push
xchg
sub
rcr
sub
sub
push
mov
mov
das
jl
(bad)
retf
jle
out
cmps
repnz
xor
pop
push
lods
(bad)
xchg
sbb
inc
(bad)
pusha
je
sbb
cmp
std
shl
cmp
push
add
jge
and
popa
push
inc
pop
pop
mov
mov
xor
repz
cmp
out
mov
pop
addr16
not
(bad)
pop
xchg
ja
vsqrtsd
retf
repnz
call
fldcw
inc
fiadd
mov
mov
mov
push
mov
arpl
cmps
fidivr
int
scas
push
push
jbe
pop
cwde
out
mov
in
daa
aam
shr
shr
loop
sbb
jnp
xor
int3
(bad)
cmp
jae
push
std
xchg
fiadd
inc
push
jnp
xchg
cmp
sbb
xchg
cmps
jg
jecxz
xchg
xor
(bad)
mov
rcr
test
xchg
and
ds
(bad)
mov
xor
fisub
ss
and
xlat
mov
in
jg
repnz
mov
out
sub
inc
adc
icebp
ret
mov
fsubr
adc
(bad)
fld
sub
(bad)
mov
mov
push
scas
scas
data16
jle
cwde
xlat
mov
mov
lea
loop
movs
(bad)
cli
inc
mov
lea
jo
inc
inc
or
js
les
ret
and
jno
mov
stos
out
mov
fidivr
or
out
out
xchg
imul
enter
loop
mov
bound
jnp
stc
sbb
call
xor
xchg
xor
mov
mov
lods
int
dec
in
shl
retf
daa
(bad)
(bad)
mov
loope
lahf
push
lock
sub
adc
sub
imul
mov
or
xor
xchg
cmps
loop
mov
stc
arpl
jg
xlat
and
push
ss
idiv
out
mov
fwait
or
dec
outs
add
mov
mov
out
xor
jbe
push
in
fs
and
push
shr
jb
retf
out
dec
mov
sbb
jmp
add
mov
js
fstp
icebp
shl
dec
fsubr
dec
in
fadd
xlat
and
push
push
mov
fs
shr
jnp
mov
ins
xor
jae
ror
psllq
sbb
mov
xchg
push
out
sbb
cli
jae
out
retf
cmp
sahf
or
in
clc
arpl
dec
call
xor
mov
inc
leave
out
jae
nop
popf
scas
jo
fbld
xchg
iret
cmp
sub
sbb
(bad)
retf
outs
aaa
mul
movs
xor
popa
into
out
mov
push
xchg
adc
xor
jmp
fldenv
cmp
cmp
test
add
xchg
ins
jno
iret
jnp
push
mov
sub
popf
cs
mov
je
xor
cld
lahf
test
cmp
or
jl
cli
(bad)
test
mov
mov
mov
pop
lock
out
push
push
ins
xchg
jne
mov
sub
xchg
ins
xchg
outs
stos
sub
xor
and
pop
and
mov
mov
mov
aas
xchg
popf
push
test
sbb
fsub
cmc
(bad)
cmp
sbb
push
pop
jl
xchg
lahf
and
inc
and
mov
push
call
add
push
push
dec
fwait
dec
or
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
push
(bad)
shl
arpl
neg
push
jle
and
(bad)
dec
mov
mov
or
and
cmp
add
inc
adc
inc
das
test
adc
test
adc
add
test
out
xchg
adc
fiadd
inc
(bad)
fs
xor
sbb
aad
adc
leave
inc
adc
xor
jge
mov
inc
adc
inc
adc
inc
adc
or
imul
sbb
add
xor
(bad)
jne
push
jno
rol
add
lods
mov
scas
std
aaa
mov
push
push
and
push
mov
leave
mov
fiadd
test
stos
xchg
sahf
or
push
retf
dec
out
mov
call
push
mov
sub
add
test
add
test
add
clc
inc
adc
jle
dec
add
add
inc
add
inc
push
sub
dec
rol
sbb
or
and
inc
sbb
add
or
or
or
or
test
add
or
or
rol
or
push
push
fadd
or
xchg
fdiv
sbb
test
add
and
sbb
je
(bad)
or
cmp
(bad)
mov
mov
movs
nop
xor
inc
adc
pop
xchg
fsubr
mov
mov
mov
popa
dec
nop
or
test
xchg
movs
loope
inc
nop
(bad)
jne
loope
aad
jae
lock
rol
mov
inc
pop
nop
cmc
int3
cmp
iret
pop
das
xchg
fcomp
mov
add
mov
jnp
pop
sub
sub
mov
repz
movs
fwait
in
push
dec
and
adc
push
repnz
mov
and
or
or
ror
scas
mov
loope
xor
push
std
mov
push
movs
(bad)
aam
mov
dec
popa
imul
ins
or
lahf
mov
js
mov
std
inc
aaa
inc
mov
lahf
retf
es
pop
mov
jl
inc
push
pushf
(bad)
xchg
pusha
pop
jl
sbb
pop
inc
(bad)
(bad)
das
lahf
(bad)
jb
or
cmp
jg
jle
cmp
push
in
aaa
mov
add
loop
jnp
lds
jge
and
out
in
lock
lods
int
rcl
ins
xchg
imul
call
sar
sbb
inc
aam
jmp
adc
xchg
mov
jnp
sub
cmp
mul
xchg
jb
out
push
cmp
cmp
dec
mov
or
mov
pop
mov
cmp
dec
ror
xchg
xor
shl
xchg
pop
xor
cs
dec
jb
clc
dec
mov
ret
sbb
mov
jo
das
cwde
js
clc
pop
xor
stc
sbb
not
inc
jne
lock
fisub
mov
sub
mov
mov
lods
fnsave
sbb
loop
in
aaa
mov
cvttps2pi
push
inc
sub
clc
jae
sbb
popf
sbb
push
(bad)
push
out
fisubr
xchg
sar
mov
push
(bad)
jg
or
mov
sbb
je
add
cmp
cmps
arpl
clc
xor
mov
in
lock
retf
push
data16
sbb
das
movs
clc
xlat
dec
shl
(bad)
outs
dec
sbb
(bad)
xchg
or
pop
push
mov
mov
loope
ins
ja
mov
xchg
mov
mov
add
add
aaa
dec
pop
push
stos
xor
sub
div
mov
shl
jno
sub
mov
dec
xchg
inc
push
xchg
stc
jbe
rol
add
xchg
int
jns
cmovne
mov
ins
xchg
pop
inc
inc
frstor
or
xor
cmc
and
mov
enter
xor
out
inc
mov
push
les
fistp
mov
mov
daa
add
xchg
(bad)
inc
sub
mov
outs
sbb
sbb
scas
popa
dec
clc
fiadd
scas
das
std
push
or
add
jo
jns
aam
xchg
sub
jnp
adc
add
pop
in
mov
inc
xor
sub
or
ins
in
sbb
xchg
add
lods
repnz
jnp
xchg
gs
and
fistp
sub
mov
pop
mov
int3
xchg
retf
xchg
xlat
pop
add
xor
inc
mov
fmul
push
pop
xchg
mov
out
idiv
jno
cli
jl
cmp
scas
test
aam
outs
lds
add
and
enter
in
cmp
into
mov
inc
cmc
or
inc
adc
mov
jp
shl
sbb
pop
mov
add
imul
lock
lea
sahf
pop
nop
jl
mov
dec
sbb
xchg
cmp
rcr
dec
sub
retf
mov
mov
and
or
pop
or
shl
xor
ins
rcl
fadd
inc
mov
ficom
out
inc
mov
cmp
jbe
sbb
ror
cmp
inc
retf
xlat
scas
lock
in
out
push
ja
(bad)
xlat
add
push
mov
push
pop
adc
xchg
(bad)
out
dec
fcmovnu
push
push
sub
pop
rol
mov
out
aas
repnz
into
sub
adc
xchg
lahf
push
ss
xchg
pusha
mov
retf
das
jo
pop
add
mov
adc
(bad)
(bad)
dec
es
popf
or
neg
enter
in
outs
shr
mov
(bad)
xlat
inc
(bad)
jle
and
arpl
(bad)
inc
mov
cmp
sti
ss
imul
(bad)
sbb
out
jp
xchg
ror
inc
aaa
jg
mov
int3
imul
pop
out
mov
cmps
jmp
retf
sbb
out
out
hlt
dec
sub
inc
mov
xor
add
fsubr
sbb
add
inc
int
push
arpl
and
call
pop
sbb
xchg
ins
jg
mov
aam
test
mov
cmps
xchg
out
aaa
js
pop
push
das
mov
xchg
adc
sbb
add
aas
xchg
fisttp
pop
sbb
cmp
xchg
add
pop
push
lds
aam
jnp
and
ds
sbb
cs
cmp
fwait
sub
mov
das
inc
pop
inc
jecxz
jmp
adc
call
fsubr
popa
arpl
dec
sub
dec
call
imul
sub
jns
cmps
aad
inc
add
add
outs
mov
push
jle
into
sub
xchg
jne
pop
lods
fisttp
xor
into
inc
mov
mov
and
sub
add
fmul
and
loopne
sub
push
enter
je
and
xchg
nop
jmp
les
ret
inc
stos
in
ss
es
dec
test
call
test
test
dec
jge
jmp
jnp
fadd
pop
cvttps2pi
std
aam
mov
repz
sbb
js
cmp
or
or
push
aaa
bswap
push
inc
adc
ror
jecxz
cld
sub
cdq
dec
call
call
sbb
fst
mov
retf
inc
fild
into
imul
(bad)
(bad)
ss
shr
push
addr16
or
sub
(bad)
jnp
mov
inc
xor
and
cli
dec
mov
inc
test
add
imul
sar
cmp
cmp
sub
jnp
dec
sub
inc
push
push
mov
inc
or
mov
arpl
mov
ins
cmp
mov
cmp
sub
es
inc
dec
(bad)
inc
in
pop
out
std
xchg
mov
loopne
mov
sbb
sub
inc
adc
sbb
in
mov
mov
dec
push
idiv
xchg
sbb
cmp
int
adc
mov
dec
fdivr
loopne
xchg
nop
mov
int3
ret
into
inc
test
mov
and
dec
jg
mov
das
test
fwait
mov
in
popf
mov
aaa
mov
fcomp
sbb
outs
inc
test
push
mov
mov
nop
gs
pop
dec
and
retf
mov
mov
popf
xchg
and
add
dec
mov
xchg
adc
into
les
inc
sub
jecxz
hlt
pop
mov
or
dec
out
jle
ret
push
push
sar
add
lods
sbb
inc
add
les
mov
ja
add
fild
les
mov
pop
or
fadd
cmp
std
xchg
sbb
jno
scas
loope
(bad)
mov
inc
pop
or
inc
mov
jl
aas
push
inc
outs
jae
push
jg
daa
aam
adc
(bad)
pushf
mov
int
or
add
mov
hlt
fsubr
add
ds
ja
scas
lahf
pusha
arpl
sub
sub
in
push
mov
cmp
fst
inc
sbb
push
pop
pop
jp
jp
ins
fnstcw
or
sbb
cmc
pop
stos
mov
push
dec
or
mov
in
lock
cmps
push
test
and
jl
jecxz
jnp
cwde
xor
xchg
pop
xor
inc
xchg
mov
ss
pop
loopne
ja
out
imul
out
shl
clc
add
xchg
in
mov
push
gs
int3
and
mov
pop
add
pop
cli
sub
mov
sbb
xchg
cmp
mul
jmp
fnsave
popf
inc
lods
xchg
pop
pop
add
inc
sbb
mov
js
ds
out
add
into
jg
cmp
mov
sbb
out
mov
adc
mov
retf
lahf
mov
adc
xor
dec
push
xchg
mov
sub
sar
stc
mov
sbb
scas
in
out
fsubr
les
cmp
pop
push
popa
and
lea
add
cmp
and
fistp
jg
or
jns
jmp
cmps
mov
xchg
(bad)
adc
jne
sbb
sub
repnz
arpl
inc
sub
ja
shl
(bad)
lds
xor
sbb
fsubp
in
inc
inc
sub
mov
faddp
mov
xchg
aas
nop
in
dec
and
adc
xchg
jae
push
sub
pop
sbb
mov
ds
out
push
ja
add
inc
or
push
jns
cmc
push
aam
mov
repnz
jl
repz
retf
push
pop
addr16
pop
sub
jo
daa
pop
mov
mov
mov
push
add
cwde
cdq
mov
arpl
ffree
push
scas
mov
ds
cmp
rol
add
test
nop
xor
daa
out
je
mov
nop
cli
xchg
jno
xlat
js
neg
rol
mov
fistp
retf
pop
out
sub
dec
adc
ret
popa
push
icebp
dec
cs
xchg
pop
sub
imul
xchg
cmp
lahf
rol
fistp
rcl
add
jmp
add
scas
je
fcmovu
aaa
shl
xor
pusha
adc
out
adc
not
ror
ins
into
outs
stc
outs
rol
shr
add
mov
stc
jo
jecxz
retf
sti
adc
push
mov
addr16
add
push
(bad)
sti
jge
test
scas
imul
dec
test
(bad)
jg
loopne
in
ins
push
lea
xor
ss
mov
aas
jne
push
(bad)
and
je
xchg
jmp
add
cmps
sub
push
pop
mov
mov
lods
pushf
mov
repnz
out
sub
dec
mov
hlt
jmp
xor
loopne
ins
aaa
repz
ja
in
add
or
retf
xchg
sbb
inc
aad
and
inc
out
test
xor
jae
mov
mov
cmp
push
inc
(bad)
xlat
mov
xor
das
test
movs
jb
je
fcomp
mov
or
ret
jle
push
jbe
fwait
mov
lea
jp
or
je
push
in
loopne
sbb
inc
(bad)
xor
imul
jbe
jne
ins
xlat
and
(bad)
(bad)
mov
rcl
out
sub
and
pop
cmp
jecxz
jge
inc
jl
(bad)
sub
into
mov
scas
jo
or
pop
daa
mov
and
ds
jp
fcomi
pop
popa
jg
mov
pushf
cld
cdq
in
jns
xor
and
clc
pop
es
xchg
xchg
cmps
shl
jo
mov
fcomp
jmp
imul
xchg
jbe
xor
in
(bad)
sar
dec
push
jmp
sub
lahf
push
(bad)
je
adc
test
pop
jbe
rcl
pusha
mov
repz
jmp
mov
loop
inc
sbb
lds
int
dec
lahf
dec
fwait
and
sbb
(bad)
mov
leave
enter
retf
enter
dec
out
dec
daa
push
pop
aas
lods
mov
jmp
xor
gs
mov
mov
popf
xchg
mov
loop
(bad)
inc
cs
inc
sbb
pop
mov
add
mov
out
gs
leave
(bad)
mov
jp
cmp
ins
stos
aas
or
push
add
fs
xchg
je
xlat
retf
imul
sub
xchg
lahf
es
inc
sub
icebp
mov
mov
out
sub
and
add
inc
adc
add
test
add
adc
and
test
adc
inc
adc
inc
adc
add
test
adc
xor
cdq
mov
adc
mov
data16
imul
add
and
inc
and
inc
add
push
test
add
test
add
or
or
or
or
adc
add
add
test
add
add
ds
mov
push
inc
dec
mov
jns
adc
inc
stc
push
jmp
loope
add
shl
push
inc
imul
in
repnz
mov
(bad)
pop
push
adc
and
shl
movs
movs
out
fwait
sub
dec
or
clc
inc
sbb
push
add
add
cmp
push
or
or
test
xor
push
mov
add
shl
jnp
jbe
dec
sbb
adc
adc
test
adc
adc
mov
or
or
or
or
push
test
mov
test
adc
sbb
call
jl
add
movs
and
push
sbb
test
mov
jbe
sub
jl
add
mov
je
je
sahf
push
push
pushf
sbb
cmc
or
or
fdivr
shl
sub
xchg
cmp
or
lea
cs
xchg
xchg
pop
cs
jp
imul
lods
mov
mov
and
fldenv
and
daa
mov
dec
and
jno
leave
jno
retf
outs
jl
repz
jns
in
lock
add
inc
aaa
push
add
cmp
out
sub
cmp
psrad
push
mov
in
xor
mov
push
mov
mov
push
mov
or
imul
fsubr
cli
inc
and
jnp
enter
add
inc
enter
mov
out
mov
mov
sub
retf
pop
(bad)
push
lock
mov
inc
mov
lods
ret
mov
or
cwde
cmp
test
test
movs
or
xchg
in
xchg
neg
pusha
or
inc
aad
icebp
mov
sbb
fdivr
in
jl
ss
ds
int
je
arpl
xchg
shr
fild
mov
pop
popf
loope
or
inc
cdq
lea
xchg
xor
inc
lahf
iret
inc
neg
push
shl
sahf
sbb
or
js
icebp
fsubr
paddw
js
icebp
mov
mov
xchg
repz
inc
add
xchg
jle
fnstsw
jne
or
xchg
movs
leave
out
fist
cwde
out
mov
or
ds
fst
imul
repnz
add
imul
js
sub
imul
mov
xlat
sub
mov
fbld
inc
div
jg
xor
rol
or
loope
xor
and
data16
sbb
xchg
inc
fwait
imul
or
rcl
inc
adc
dec
dec
push
mov
xchg
mov
jl
mov
fnsave
jnp
clc
xchg
or
pushf
(bad)
cmp
or
retf
jbe
test
mov
shr
outs
jns
sar
jne
gs
shl
push
jle
xchg
cmps
loop
call
push
pop
ins
push
in
neg
xor
out
scas
aaa
ret
add
and
sub
iret
js
pop
xchg
push
fmul
outs
jmp
sahf
xlat
or
pop
outs
vmread
jo
mov
xchg
and
or
and
push
ja
mov
cmp
or
xchg
mov
ins
fisttp
or
dec
shl
push
ret
scas
imul
enter
mov
pop
fnstcw
pop
or
loop
out
pushf
mov
das
dec
mov
mov
imul
outs
(bad)
icebp
xchg
sbb
fstp
(bad)
mov
fdivr
out
cmp
jo
mov
cmp
out
hlt
jge
mov
shl
das
cmc
mov
add
sbb
stos
in
pop
outs
aas
les
sahf
adc
cmps
inc
nop
xchg
cld
dec
adc
adc
into
fsubr
rcl
push
sbb
cld
and
repnz
arpl
xchg
fwait
ret
clc
mov
add
lock
pop
xchg
dec
add
arpl
in
lods
dec
sbb
cmc
adc
mov
xchg
xchg
cld
sub
xlat
dec
xchg
and
mov
xlat
imul
scas
bound
mov
neg
int
retf
push
lsl
jge
xor
pop
dec
or
jmp
loop
cmp
into
neg
and
sar
add
into
xor
jno
pop
and
mov
shl
icebp
fcom
mov
lods
movs
sahf
inc
call
xchg
ret
aaa
ins
cmp
in
mov
lods
(bad)
mov
and
xchg
xchg
xchg
ss
push
jnp
sub
pop
add
fs
jb
out
push
xchg
and
cmp
(bad)
movs
jg
push
out
mov
xchg
fwait
or
jae
(bad)
mov
pop
mov
out
xor
jmp
sbb
fmul
iret
sub
push
or
xchg
adc
dec
jmp
adc
jle
nop
sbb
lods
dec
int3
outs
xlat
jb
scas
arpl
lea
add
jae
jno
jmp
jmp
ss
jmp
push
mov
addr16
test
push
ss
lahf
test
and
mov
gs
sahf
mov
cmp
cmp
adc
ret
cmp
stc
add
(bad)
mov
loopne
ins
outs
add
add
fcmovbe
pop
mov
in
(bad)
test
jmp
and
arpl
add
and
leave
fs
stc
inc
movs
lods
sbb
fsub
(bad)
adc
fwait
xchg
adc
jecxz
ret
dec
and
nop
int
scas
jnp
ja
xchg
sti
stos
loop
sbb
into
(bad)
outs
inc
cwde
jle
mov
(bad)
loopne
sbb
test
sub
cmp
fidivr
fisttp
mov
sbb
loop
xchg
cmps
xchg
mov
ins
jb
sbb
neg
xor
mov
mov
aad
add
mov
(bad)
adc
or
ja
or
push
mov
bound
aas
dec
mov
test
cdq
lods
pop
adc
nop
syscall
iret
sbb
mov
xchg
sub
add
stos
arpl
mov
pop
xchg
push
mov
dec
dec
out
jae
or
inc
add
push
ds
in
jnp
sar
and
inc
dec
push
pop
adc
xchg
pop
dec
sbb
inc
mov
test
mov
jge
mov
cmp
cmp
or
push
sbb
xchg
mov
popa
adc
inc
mov
cli
xchg
pop
push
push
adc
dec
pop
sub
leave
and
pop
and
push
cmp
mov
xchg
mov
jb
fwait
dec
shl
push
mov
adc
lods
retf
iret
mov
(bad)
xlat
sub
add
adc
inc
mov
add
enter
in
and
mov
sub
ret
clc
push
xor
fs
scas
(bad)
mov
cwde
pop
rcr
outs
inc
stos
je
ss
leave
sbb
jns
inc
push
ins
adc
sbb
xlat
push
sub
push
jnp
cmp
mov
ret
lods
jg
and
push
xchg
jecxz
clc
mov
pusha
popa
adc
fs
xchg
xor
and
ins
inc
pusha
jecxz
test
imul
add
stos
leave
mov
sbb
add
vmovntps
jmp
js
ret
fldenv
push
xchg
inc
repnz
stc
push
in
sar
test
in
sub
cs
imul
and
outs
push
mov
pop
sbb
mov
ss
retf
mov
gs
mov
add
imul
mov
xchg
retf
cmp
adc
or
add
jp
je
ret
stos
fidivr
sbb
out
stos
or
inc
jmp
push
mov
dec
xor
into
out
nop
xchg
addr16
std
iret
mov
xchg
cmp
add
mov
test
cmp
ins
xor
add
pop
neg
lea
je
sub
mov
xor
and
lahf
pop
mov
xchg
push
inc
and
xchg
cmp
inc
xchg
fstp
and
jg
and
scas
xor
test
lds
fcmovnb
test
xchg
and
pop
inc
xor
das
mov
or
ja
and
mov
fisub
cmp
out
ror
lea
test
ror
inc
repnz
out
push
inc
mov
dec
cmp
and
and
jle
pop
das
(bad)
pop
aam
ss
cmps
lahf
std
fdivr
add
dec
jo
jae
loopne
adc
cmps
xchg
hlt
in
adc
out
scas
jns
add
jle
push
sbb
push
popa
mov
mov
adc
mov
es
in
shl
cli
sub
push
cli
test
shl
or
aas
push
stos
(bad)
xchg
test
addr16
push
cmps
stos
mov
dec
aas
jmp
sub
std
ror
or
bnd
arpl
cmp
inc
fnstenv
push
mov
add
xor
mov
pop
(bad)
lds
mov
call
xor
xor
inc
mov
lock
sub
cmp
out
mov
xlat
and
add
xchg
ds
dec
call
(bad)
xchg
das
(bad)
scas
ins
sahf
aaa
(bad)
(bad)
aad
push
inc
outs
inc
movs
nop
pop
test
jnp
xchg
sub
pop
pop
push
imul
jmp
xchg
or
leave
xor
sbb
sub
sbb
jmp
adc
ss
pop
xchg
shl
cwde
cmc
mov
(bad)
xchg
mov
std
xor
xor
push
aaa
xchg
out
les
test
xlat
inc
jle
loope
adc
fdiv
ret
cmp
pop
paddsb
mov
into
jecxz
(bad)
(bad)
hlt
inc
test
ins
lea
cmp
pop
xchg
inc
xchg
jl
pop
fcomp
jmp
bound
inc
ins
jae
jmp
movs
lock
fdiv
sahf
inc
or
call
xor
cdq
sbb
test
mov
xor
popa
cmps
push
xchg
das
stos
dec
mov
adc
jae
sbb
outs
pop
jb
test
and
cdq
fwait
mov
fcomp
sub
sbb
jp
je
(bad)
in
sbb
sub
or
add
test
loopne
inc
int
ss
cmp
lea
mov
adc
sbb
fistp
add
mov
push
jns
jo
fisttp
in
sub
clc
pop
fisubr
jmp
shl
push
jo
inc
fcomp
add
cmp
and
aaa
sahf
cmps
clc
sub
mov
inc
push
or
jno
imul
fwait
pop
push
pop
sub
nop
mov
xchg
fnstenv
or
loopne
add
retf
enter
push
les
mov
mov
dec
gs
jmp
cmp
out
mov
cs
inc
mov
retf
ss
xor
clts
mov
stos
jno
push
ds
aaa
jg
inc
push
loopne
xchg
shl
push
dec
mov
jae
pop
xchg
movs
out
jns
lahf
sbb
dec
aaa
xor
loope
push
inc
out
imul
(bad)
cdq
in
pop
xor
ret
cwde
adc
stos
mov
and
scas
sub
(bad)
hlt
mov
push
loope
fdivr
sbb
repz
enter
dec
outs
lods
mov
push
mov
inc
repz
mov
jecxz
push
jbe
in
xchg
mov
mov
mov
and
xchg
int3
sbb
mov
mov
or
add
dec
std
mov
xchg
mov
stc
mov
mov
inc
ret
enter
leave
push
cmp
(bad)
sub
or
std
mov
jns
or
push
arpl
mov
fcom
sub
xchg
mov
inc
add
imul
mov
mov
adc
xchg
popf
movs
mov
faddp
xchg
pop
or
add
pushf
xchg
in
inc
sbb
dec
pop
pop
lahf
jle
mov
and
xor
lock
dec
push
jl
(bad)
sub
cwde
out
inc
rcr
outs
mov
repz
je
adc
call
xchg
or
test
jne
push
dec
jmp
(bad)
out
pushf
jns
sub
jmp
jnp
jmp
add
jle
or
andnps
(bad)
cld
pushf
xchg
inc
sbb
sar
push
rsqrtps
inc
ja
cmc
out
xchg
ror
mov
(bad)
punpckhwd
xchg
cdq
out
cmp
ret
fcomp
mov
imul
dec
mov
jae
xchg
addr16
pop
out
dec
ins
sbb
or
stc
pop
aaa
clc
imul
mov
pop
push
loope
cmp
adc
adc
jecxz
fwait
sbb
jmp
inc
mov
loop
icebp
xchg
and
lahf
daa
cld
mov
xor
push
jae
jnp
xor
pop
cdq
inc
je
add
repnz
jb
stos
shl
xchg
sub
sbb
dec
(bad)
lods
outs
xor
xor
loope
mov
mov
data16
mov
jge
pop
ret
xor
call
inc
or
xlat
sahf
outs
lock
jae
imul
(bad)
push
dec
aaa
push
add
ins
js
push
or
(bad)
fisttp
pop
int3
and
lock
add
leave
jnp
pop
fldenv
clc
dec
movs
pop
mov
enter
js
mov
cmp
fldenv
adc
cmps
and
pop
inc
lods
or
jmp
push
leave
rol
leave
test
add
jb
sbb
xor
inc
ficom
mov
adc
stc
mov
inc
fsubr
push
cs
inc
ins
mov
jnp
mov
sbb
test
xor
stc
jge
jle
mov
fwait
cmps
jecxz
lods
ins
and
cmc
pop
mov
int
mov
push
(bad)
and
add
push
iret
aad
sub
mov
push
sbb
fisub
inc
xchg
cmp
in
iret
jno
dec
ins
dec
imul
(bad)
jb
and
retf
sub
es
(bad)
sub
pop
pop
mov
mov
mov
ins
jnp
lock
or
push
(bad)
dec
push
arpl
nop
leave
pop
inc
jnp
xor
xchg
inc
call
out
stos
push
or
stos
mov
or
or
or
or
or
or
or
or
stos
sbb
sar
and
int
xor
mov
jecxz
sub
add
xchg
nop
adc
mov
inc
sub
imul
and
test
adc
test
add
mov
add
and
test
adc
test
adc
fwait
push
inc
jno
and
mov
test
add
push
and
popf
adc
out
inc
mov
sub
dec
mov
xchg
idiv
ja
push
pop
enter
sbb
mov
pop
fsub
mov
imul
pop
dec
mov
mov
shl
adc
test
push
cwde
mov
fnstsw
jge
add
or
push
inc
jmp
sub
popf
mov
push
adc
inc
adc
inc
adc
mov
(bad)
adc
cmp
push
cmps
out
out
clc
pop
mov
jle
out
xchg
sti
ja
scas
(bad)
cmp
xor
add
inc
add
in
test
adc
adc
adc
adc
adc
stc
inc
nop
fwait
mov
cmps
jmp
and
ss
test
adc
inc
adc
or
xor
aad
or
xchg
jp
not
test
inc
xchg
adc
xor
and
in
test
xor
mov
dec
mov
push
and
sub
push
add
jno
cmp
mov
cmps
pop
popa
imul
push
dec
ret
cdq
call
pop
sbb
(bad)
in
mov
inc
sub
xor
out
jbe
add
add
sbb
add
sub
pop
dec
jmp
stos
and
or
inc
mov
cmp
(bad)
jmp
jmp
fwait
pop
out
mov
push
mov
add
push
out
xchg
test
push
push
out
adc
inc
sbb
mov
mov
xor
cmovbe
dec
imul
jae
jge
out
(bad)
hlt
or
icebp
or
adc
sbb
cmps
mov
test
xor
out
cmp
dec
or
ins
mov
or
dec
shl
or
jnp
pop
add
add
pop
inc
pop
adc
mov
(bad)
mov
xchg
cmp
cld
out
pop
out
xchg
(bad)
fild
xor
movs
repz
pop
ficom
mov
and
push
pop
mov
fst
xchg
xchg
inc
clc
movs
in
jg
and
inc
dec
cs
sar
pop
xchg
or
stc
dec
jbe
mov
sbb
push
pop
shl
je
dec
jne
xor
xor
jg
mov
xor
(bad)
jno
test
fwait
xor
out
test
dec
and
aas
add
adc
mov
rol
mov
pop
arpl
mov
push
sub
and
rcr
enter
sbb
pop
shl
out
mov
loopne
sahf
aas
sub
push
inc
cmp
sbb
sbb
loop
mov
pop
and
(bad)
outs
adc
mov
mov
div
mov
sbb
pop
mov
sbb
xor
jg
jne
daa
xor
pop
push
addr16
xor
add
inc
enter
mov
aas
cmps
js
inc
fs
sbb
jbe
mov
adc
ins
fwait
pop
xchg
pop
sar
cmp
or
cmp
cmp
pop
popf
pop
inc
jne
icebp
cmps
test
mov
fdivr
xchg
or
cmps
popf
pop
cdq
addr16
(bad)
and
push
cmp
movs
loop
mov
xor
clc
mov
aam
dec
cmp
repz
pop
call
fsubr
mov
movs
repz
jge
lds
jmp
aaa
xchg
mov
xor
xor
cmp
push
movs
sub
rcr
jmp
sbb
jno
lds
hlt
outs
push
loope
dec
lock
mov
in
and
mov
ja
cmc
pop
jp
adc
push
dec
push
stos
stos
loope
cmp
in
test
test
jo
aam
fld
xor
stos
mov
pop
ret
cmp
sub
loopne
sahf
mov
enter
pop
mov
cli
sub
mov
pop
leave
out
push
int3
jge
sbb
das
cmc
jae
arpl
std
lea
popa
nop
mov
xor
xchg
cmc
cmp
ja
dec
aad
mov
rol
inc
(bad)
mov
pop
sbb
sub
pop
pop
sub
xchg
in
mov
push
shl
lods
ins
int3
ins
dec
jo
add
push
addr16
pop
or
rol
in
fidiv
loope
xchg
in
stc
jle
loop
std
pop
xor
cmc
xor
cs
and
add
jp
cmps
xchg
push
ins
fsub
cmp
mov
not
fwait
cli
dec
inc
pop
push
mov
mov
jmp
pop
into
cdq
cmp
add
adc
leave
cdq
cmp
fild
jo
add
pop
sahf
(bad)
daa
mov
push
outs
movntq
dec
and
jmp
sub
popf
cmp
fsubp
fiadd
mov
nop
or
jge
nop
in
imul
mov
neg
in
cmp
fsub
jnp
cmp
mov
pop
mov
dec
in
sbb
mov
mov
jnp
jne
jl
retf
inc
inc
rcr
inc
cmp
call
jmp
jnp
movs
fcmovnbe
ds
popa
push
pop
mov
jno
test
xlat
pop
pop
jbe
shl
aam
jnp
sbb
adc
iret
repz
in
jno
test
scas
jno
mov
movs
jae
test
adc
mov
mov
dec
(bad)
mov
sbb
inc
retf
or
pop
into
out
and
(bad)
int
inc
sbb
push
aad
cmp
(bad)
jecxz
arpl
lea
xchg
cmp
je
ins
xchg
lock
shl
jmp
inc
repnz
mov
popf
mov
and
sbb
dec
fistp
adc
sar
lahf
mov
arpl
ins
xchg
cmp
scas
inc
fidivr
add
xchg
ret
and
inc
loopne
mov
and
push
dec
enter
jmp
jo
retf
in
add
inc
and
push
lods
jo
stc
mov
jae
add
jp
pop
mov
or
icebp
add
ins
add
in
xor
out
mov
lahf
or
push
leave
dec
pop
jmp
pop
(bad)
inc
int3
jl
jnp
mov
jle
and
inc
fcom
jl
movs
pop
stos
mov
loope
push
push
mov
in
sub
or
pop
pop
sahf
adc
dec
mov
sahf
or
fcmovnb
adc
daa
(bad)
and
fcmovb
aam
in
push
in
add
push
add
(bad)
xor
push
sub
xor
inc
(bad)
mov
jmp
or
mov
sbb
cs
loope
call
iret
push
les
and
mov
jne
inc
arpl
push
outs
xchg
hlt
arpl
out
or
sub
ss
mov
mov
das
cmp
bnd
xchg
cld
outs
dec
out
adc
dec
push
jmp
cwde
cwde
mov
jae
repnz
mov
mov
fwait
sbb
jb
add
cld
inc
test
imul
lock
movs
mov
imul
mov
fnstsw
scas
push
push
(bad)
cmc
mov
test
aas
xor
and
sti
pushf
dec
call
shl
or
dec
popf
ret
mov
xchg
jecxz
pop
arpl
sbb
pop
arpl
shr
sub
int3
daa
int
fstp
fiadd
(bad)
fs
jp
cmps
ds
mov
je
out
ret
sti
movs
inc
repnz
fcomi
sar
gs
cmp
push
xchg
jns
mov
push
call
in
push
add
aas
jne
pop
jnp
fcmovnu
sub
(bad)
or
lahf
test
adc
or
aas
arpl
imul
pop
ins
jmp
mov
(bad)
rcr
mov
and
push
das
cmp
xchg
sub
xchg
jg
lds
push
scas
jecxz
cmp
mov
ficom
outs
and
scas
ret
retf
mov
aad
pop
dec
loop
ins
pushf
popf
ret
push
ret
sub
pop
inc
mov
or
lds
push
js
mov
(bad)
sbb
push
(bad)
push
frstor
xor
lods
imul
lock
or
fist
push
scas
hlt
xchg
mov
adc
and
icebp
(bad)
(bad)
mov
dec
sub
ror
inc
outs
(bad)
cmps
sti
stos
enter
cmp
pop
outs
jmp
pop
or
inc
pop
dec
jge
xchg
mov
push
pop
pusha
push
add
xlat
not
into
jmp
xchg
in
or
add
adc
sti
add
movs
mov
mov
pushf
jo
retf
ret
in
cmp
sub
lods
retf
pusha
and
rcr
sub
or
in
mov
jge
fisubr
pop
enter
dec
jno
push
push
ret
xchg
inc
xor
ds
xchg
mov
dec
sbb
xor
fcmovb
test
cli
inc
mov
xor
test
mov
pop
mov
shl
sbb
and
fcmovbe
aad
lods
sub
pop
sub
cmp
jae
fldcw
sbb
mov
or
adc
cli
mov
ror
ds
jmp
dec
imul
cmp
pop
daa
jns
add
test
push
xor
xor
cmp
pop
iret
push
jecxz
fwait
jcxz
push
push
int3
jl
jns
nop
ja
int
push
ins
sbb
fstp
es
cmp
jmp
cmp
fwait
cmc
or
sbb
ins
add
movs
xchg
daa
mov
mov
cmp
cmp
aam
sub
push
fldenv
call
daa
aam
mov
mov
(bad)
cmc
jnp
enter
nop
mov
out
in
inc
push
xchg
fs
stos
add
mov
xchg
and
mov
pop
or
adc
pop
and
mov
(bad)
mov
cmp
cmp
sahf
pop
icebp
pusha
stos
mov
gs
fstp
xchg
adc
push
jbe
jno
mov
(bad)
push
mov
pop
and
loope
add
out
adc
movs
xchg
sbb
inc
inc
and
mov
cmp
pminsw
iret
jne
dec
sub
mov
xlat
ret
jae
cmp
adc
jmp
mov
cmp
and
fs
xchg
adc
sar
jnp
xchg
xor
add
cmp
jg
fdivr
(bad)
int
dec
or
push
outs
and
xlat
push
mov
ret
das
add
cmp
sbb
cmps
mov
inc
or
fbld
cmp
ins
xchg
push
inc
jle
or
lods
shl
jne
mov
mul
std
(bad)
aaa
push
aad
pop
fsubr
cmps
aas
sub
mov
call
imul
scas
(bad)
mov
cmps
sti
adc
aaa
xor
mov
mov
dec
xchg
cmp
cmp
addr16
add
stc
js
jnp
push
xchg
cmp
fdiv
sti
cs
shl
test
fld
clc
jecxz
add
push
xchg
mov
call
fs
les
and
mov
sti
sub
xchg
lahf
test
call
pusha
inc
out
mov
jmp
mov
pop
lock
cdq
cmp
jmp
mov
fbstp
mov
les
fsubr
add
rcl
mov
and
lods
pop
inc
imul
mov
xchg
(bad)
mov
mov
mov
cmp
push
cmp
fwait
jge
dec
or
mov
sysret
jae
shl
push
mov
psrld
cmp
retf
les
push
ds
popf
(bad)
lods
lods
jp
cmp
(bad)
movs
in
js
dec
sub
add
sahf
fwait
or
xchg
mov
jp
or
add
retf
scas
leave
xchg
rcl
std
and
cmc
pop
jbe
xchg
cld
jns
popf
dec
pop
movs
xchg
cmp
mov
sub
call
adc
inc
fwait
retf
add
pop
mov
div
mov
fdiv
out
push
cmp
xor
jns
or
mov
data16
xchg
int3
jno
shr
inc
inc
add
adc
or
or
shl
push
mov
dec
inc
cmp
call
add
push
mov
outs
and
mov
out
out
pusha
mov
add
and
lds
addr16
clc
(bad)
pop
outs
push
jno
push
jge
pop
icebp
push
mov
imul
(bad)
ret
arpl
sbb
rcl
repz
jmp
aas
test
cs
call
ss
sbb
icebp
xor
sub
es
and
(bad)
call
sub
int3
shl
pop
cmp
retf
das
cs
ja
imul
cmp
push
lock
pop
mov
pop
retf
jne
out
push
scas
fnstcw
sbb
jp
call
jl
push
stos
fidivr
ret
mov
pop
push
jmp
mov
cmp
fcomp
push
or
dec
sbb
(bad)
iret
xor
mov
cmp
shl
xchg
and
std
clc
pop
mov
imul
add
std
clc
sbb
and
sbb
pop
ret
pop
pusha
or
mov
cmc
pop
cmp
fbld
push
xchg
lods
inc
jb
imul
pop
std
xchg
mov
popa
call
and
shl
inc
bound
out
shl
inc
in
mov
aas
inc
mov
bound
push
jl
ret
ins
addr16
(bad)
test
adc
sbb
loopne
inc
loop
mov
lods
nop
cmp
mov
pop
jne
inc
inc
cmp
fbld
sar
fptan
mov
in
xchg
cs
test
cmp
add
(bad)
fsubr
(bad)
shl
cmps
xchg
jg
sbb
sbb
sbb
popa
aas
stc
mov
push
inc
adc
es
or
dec
jne
xchg
xchg
inc
out
push
(bad)
enter
cli
mov
jecxz
lahf
push
cmova
int3
ins
mov
enter
icebp
addr16
or
mov
xor
enter
and
mov
sub
stos
add
inc
add
inc
add
or
or
or
or
or
or
stos
dec
or
or
out
not
add
or
or
adc
es
inc
xchg
pop
sub
or
or
arpl
mov
aad
inc
add
inc
add
inc
add
test
adc
mov
add
inc
add
inc
add
inc
add
in
(bad)
mov
add
xchg
dec
es
iret
inc
pushf
loop
gs
adc
or
and
cmp
cwde
imul
je
(bad)
or
or
and
jge
sub
sti
add
mov
das
fdivr
in
mov
mov
dec
and
xchg
dec
clc
movs
nop
or
or
or
or
inc
add
sbb
es
dec
inc
and
test
xchg
jno
fmul
pop
movs
test
adc
and
test
add
add
popf
and
popa
add
inc
and
adc
mov
jbe
dec
push
scas
call
adc
test
adc
test
adc
and
inc
mov
inc
or
inc
dec
sbb
and
test
imul
fs
adc
and
les
mov
or
add
lods
mov
iret
sub
mov
bound
aam
test
mov
pop
shr
aad
jb
xchg
inc
jnp
adc
je
and
and
fstp
adc
retf
aaa
enter
inc
xchg
mov
repz
arpl
fld
xchg
loop
ret
dec
inc
cmp
(bad)
pop
push
dec
bound
outs
fstp
and
push
adc
mov
leave
daa
fimul
ss
loop
lock
lds
sbb
mov
mov
clc
das
pop
aad
fisttp
repz
pop
ds
fnsave
cld
and
push
xor
std
pop
dec
aas
mov
mov
sbb
outs
push
es
pushf
fs
add
ror
lock
jne
psubsb
(bad)
scas
popa
mov
pop
std
xlat
sbb
push
jle
test
mov
inc
clc
inc
jnp
(bad)
adc
loop
cmp
cmp
in
out
mov
mov
mov
pop
and
inc
sbb
mov
mov
mov
mov
in
cmp
stos
jae
fisub
pop
lea
pushf
aas
lods
fst
sbb
call
mov
adc
mov
mov
ds
and
outs
dec
fcomp
xor
int
jmp
xchg
pop
cs
cmp
jmp
push
fnstenv
xchg
lock
data16
arpl
cdq
sbb
out
lds
xchg
repnz
loop
mov
mov
pop
pop
xor
cmp
(bad)
div
iret
pop
dec
test
fiadd
clc
test
mov
fsubr
loop
fadd
push
pop
ins
cld
ja
call
xchg
stc
repnz
out
mov
std
in
jbe
pop
adc
cli
mov
push
iret
jo
cmp
aaa
adc
aam
adc
loopne
cmp
stc
retf
in
out
imul
mov
fcmove
(bad)
cwde
sub
jno
push
sbb
xor
in
aas
adc
pop
repnz
and
aaa
mov
jmp
xchg
cli
jecxz
icebp
mov
cld
ja
dec
adc
push
ror
mov
jl
cmps
mov
inc
popf
(bad)
bound
cmp
stos
loope
mov
push
jo
inc
sahf
push
jns
jge
cmps
in
jg
mov
add
cmp
inc
and
dec
ja
fdivr
xlat
retf
pushf
std
sub
hlt
stc
clc
xchg
arpl
dec
mov
dec
fwait
pop
sar
test
cli
mov
add
mov
lock
inc
xchg
dec
fwait
test
adc
neg
aad
jno
mov
and
and
adc
xor
clc
sub
lock
sub
repnz
pop
(bad)
pop
retf
sbb
jl
adc
sar
scas
pushf
js
fwait
inc
repz
les
out
mov
and
jle
mov
xchg
clc
jecxz
icebp
ftst
pop
add
lahf
xchg
adc
sub
popf
xor
ds
mov
adc
mov
sbb
fwait
inc
xchg
pop
and
loope
or
imul
pushw
pop
ins
fcomp
sbb
std
daa
mov
jmp
push
cmp
jns
dec
and
sub
cmp
fs
xchg
sub
pop
and
sbb
je
sub
pop
jne
mov
push
cwde
cwde
or
pop
mov
enter
xchg
mov
cmp
imul
frstor
out
pop
mov
pop
push
jecxz
dec
ins
push
jne
push
jns
fstp
xchg
sar
or
and
imul
sub
fnstenv
cmp
fmul
jno
inc
test
aas
and
pushf
jg
repnz
test
jmp
xchg
xor
cmp
arpl
popf
xchg
and
ins
(bad)
prefetch
imul
jno
(bad)
mov
mov
sti
cmps
int
push
xlat
push
call
xchg
movs
inc
fs
repnz
lods
addr16
ror
out
xor
(bad)
jmp
sar
movs
and
iret
mov
gs
add
imul
and
xchg
pop
and
mov
mov
sub
mov
mov
xchg
sbb
adc
(bad)
shl
dec
pushw
cmp
movs
adc
add
mov
mov
xlat
dec
jg
imul
add
div
xchg
sbb
movs
int
lock
mov
bound
or
xchg
cdq
mov
pop
add
jge
xor
adc
scas
dec
inc
sbb
hlt
cvtps2pi
scas
popf
rcl
xchg
jbe
int
idiv
push
pop
sub
and
sbb
push
add
inc
dec
daa
xchg
fs
shl
clc
pop
test
sub
in
sub
cmp
and
inc
mov
retf
xchg
sub
pop
jno
mov
push
bnd
test
jb
not
and
xor
and
das
push
cmp
and
fs
data16
scas
cs
ret
(bad)
mov
clc
fstp
jne
xor
fstp
sbb
jmp
cmp
arpl
lock
xchg
int3
(bad)
jae
lods
dec
xor
ror
add
or
or
out
or
xlat
mov
jmp
fcmove
xrelease
imul
iret
pusha
inc
cld
popa
inc
clc
stos
push
jae
cdq
fcomi
fsubr
xor
and
cmp
js
sar
sbb
add
aaa
or
test
adc
fsub
pop
inc
test
push
fsubr
mov
int
pop
jmp
dec
stc
dec
and
adc
imul
add
push
jae
jb
daa
mov
ja
mov
ret
jmp
shl
in
push
sar
ins
jnp
pop
cmp
mov
aaa
sbb
pop
push
cmp
jo
cmc
dec
mov
aaa
(bad)
aam
mov
add
mov
scas
imul
adc
shl
xchg
sbb
iret
mov
into
inc
es
stos
or
push
mov
scas
arpl
inc
mov
fsub
push
or
xchg
imul
lods
call
retf
in
mov
popf
or
jno
shr
cmp
mov
outs
mov
dec
dec
jne
dec
gs
dec
push
sbb
sub
push
mov
lods
mov
push
repz
mov
loope
lods
in
ds
sete
imul
movs
int
pusha
jb
mov
or
ret
rcr
jnp
shl
push
(bad)
mov
mov
sub
cmp
inc
lock
stc
mov
pop
dec
js
inc
add
ret
dec
dec
mov
mov
out
sub
or
or
fdiv
(bad)
out
cmps
ins
ds
out
iret
jge
sbb
enter
inc
dec
add
scas
scas
push
mov
fsubr
sub
hlt
rol
push
(bad)
push
cs
add
dec
imul
or
imul
jno
int3
clc
mov
sbb
fimul
ins
xor
sub
ror
sbb
xchg
les
mov
xchg
jecxz
stos
add
sub
fprem
or
loope
shr
(bad)
or
push
mov
mov
mov
je
or
(bad)
sbb
mov
push
into
aaa
jae
rcr
jge
pop
aam
push
enter
movs
cwde
std
inc
rcl
xchg
mov
mov
hlt
cmc
push
neg
out
jno
retf
cmps
div
in
imul
jl
scas
fsub
iret
and
stos
inc
mov
fcom
push
inc
xchg
test
dec
jns
gs
sbb
jmp
push
jge
addr16
icebp
mov
inc
inc
jns
scas
ins
lds
leave
pusha
xor
enter
ror
aad
arpl
jno
dec
lods
pop
and
hlt
or
ret
fwait
not
pop
xor
mov
fld
xlat
sbb
jns
ins
cli
push
mov
xchg
jp
dec
mov
mov
push
add
xor
mov
sub
shr
test
push
out
jp
xchg
mov
out
not
sbb
imul
push
outs
xchg
xor
stc
bound
mov
jo
fld
push
in
pop
fdiv
push
shr
dec
pop
(bad)
(bad)
nop
jmp
pop
inc
adc
lea
push
fidivr
fsub
(bad)
xor
and
mov
mov
inc
adc
dec
imul
fcmovnb
stc
push
aaa
sub
aaa
fdivr
xor
(bad)
nop
imul
mov
add
dec
cmc
je
push
leave
in
mov
pop
jmp
or
imul
aad
adc
rcr
clc
mov
sbb
out
and
nop
outs
mov
cmp
or
addr16
mov
sbb
xor
rcr
js
and
sbb
jns
pop
dec
ror
mov
mov
xchg
(bad)
pop
outs
out
inc
mov
cmp
jp
xor
xchg
nop
(bad)
leave
inc
(bad)
fadd
xor
fnstenv
aaa
push
sub
dec
xchg
arpl
lds
jb
out
add
xlat
mov
mov
out
js
adc
xlat
lahf
push
cmp
out
inc
sar
ja
dec
retf
ret
imul
sahf
inc
pop
popf
iret
jmp
mov
cwde
fs
pop
jmp
adc
push
sub
(bad)
(bad)
imul
popw
dec
xor
popa
addr16
sbb
test
loop
sub
ds
push
jnp
ror
jae
cmps
lds
pop
jge
idiv
test
fwait
push
test
push
sub
cmp
xchg
retf
jmp
mov
scas
fisttp
leave
lock
adc
hlt
jnp
mov
add
mov
jl
pop
aas
adc
push
mov
add
mov
imul
scas
outs
xor
xchg
aad
sub
xor
in
sub
and
es
add
add
loopne
or
inc
lods
and
retf
es
bound
add
sbb
jg
push
clc
dec
sub
mov
or
(bad)
add
jmp
movs
stos
in
outs
sbb
(bad)
or
mov
lds
and
fistp
cli
sbb
add
jle
popa
lock
(bad)
sbb
enter
pop
dec
out
and
ds
cmp
xchg
test
mov
pop
icebp
cmps
mov
loope
aas
dec
jl
pushf
pop
jmp
in
ja
jns
xor
push
lahf
icebp
shr
bound
shl
mov
test
jecxz
aas
pop
adc
push
cmp
test
pop
imul
sti
jl
cmps
xor
imul
lds
rol
mov
cmc
aas
push
inc
adc
addr16
add
aaa
jle
sbb
call
out
outs
cmps
mov
rol
call
xchg
jnp
mov
rcl
cmc
dec
jl
pop
dec
lods
sbb
lods
adc
std
in
dec
jle
(bad)
ficomp
jnp
dec
and
scas
cmp
mov
aaa
cmp
in
in
mov
inc
mov
test
pop
lods
xor
mov
lods
popa
push
dec
es
pop
sbb
rol
jnp
jno
cmc
pop
sub
stos
retfw
mov
mov
jg
hlt
out
icebp
std
xor
ror
div
mov
shl
sbb
(bad)
loope
(bad)
fwait
cs
or
jns
cdq
adc
jmp
pop
jo
pop
cmp
mov
jae
push
cld
xchg
mov
sub
cmp
nop
mov
fcmovnb
repz
into
push
inc
mov
stos
out
jbe
cdq
jp
clc
lds
xor
mov
xchg
and
scas
cmps
scas
arpl
les
fwait
mov
fsub
loop
ss
dec
test
or
or
inc
sub
in
push
push
jmp
fist
fisttp
push
inc
push
retf
rcr
enter
mov
arpl
in
sub
arpl
jmp
ror
shl
xor
xor
add
or
or
inc
adc
and
add
or
or
or
or
add
test
adc
test
fwait
pop
rol
cmp
or
dec
add
cdq
or
xor
pushf
xchg
dec
mov
imul
add
push
adc
and
add
add
push
into
call
xor
call
jmp
div
inc
and
test
add
imul
add
pusha
jno
adc
and
shl
cmp
mov
outs
add
hlt
cmp
fstp
mov
inc
adc
adc
add
mov
push
nop
push
cmps
pop
movs
xchg
adc
enter
push
cmp
adc
fistp
adc
push
sub
outs
fwait
rol
and
or
adc
and
or
or
adc
add
inc
adc
adc
and
and
push
push
push
and
or
push
xor
icebp
jl
xchg
adc
sbb
and
mov
(bad)
cmc
sub
nop
or
add
test
add
movs
shl
rcl
sbb
dec
inc
adc
and
ror
push
adc
inc
and
jle
test
push
and
jns
adc
jmp
xchg
xchg
or
aas
je
sbb
addr16
fnstenv
aam
jmp
mov
aam
daa
jmp
aaa
iret
jmp
iret
and
push
sbb
mov
into
mov
clc
jae
sub
and
sbb
adc
sbb
std
inc
add
scas
mov
pop
jp
push
ror
sbb
imul
fs
dec
jle
pop
fidiv
(bad)
test
leave
xor
ins
iret
aas
test
push
pop
push
in
jmp
fpatan
sbb
sbb
pop
ror
xchg
lds
(bad)
cmps
movs
or
or
xor
enter
into
push
inc
sti
test
loop
sbb
retf
xchg
adc
xchg
adc
dec
sar
cdq
xchg
sbb
enter
mov
jp
das
(bad)
mov
ret
xor
enter
aam
pop
clc
pop
sbb
scas
ins
je
lods
clc
cli
out
dec
dec
and
mov
outs
mov
js
and
inc
out
(bad)
mov
div
imul
loop
es
jmp
pop
(bad)
int3
xor
fild
(bad)
loope
lea
cmp
dec
fadd
jmp
pop
xchg
call
fadd
(bad)
mov
cmc
clc
or
jg
cld
jl
adc
pop
inc
outs
jl
stc
(bad)
addr16
cdq
in
imul
(bad)
xor
push
inc
dec
fisubr
scas
aas
jmp
int3
dec
push
out
cmp
cmp
popf
and
test
cmps
fucomi
cwde
xchg
ret
stc
int3
iret
jnp
neg
cs
dec
hlt
sbb
mov
sbb
jge
push
jle
fwait
inc
lods
mov
ficom
shl
mov
adc
cdq
sub
mov
add
mov
jg
add
mov
es
fimul
mov
mov
popf
cmps
push
outs
popf
in
sahf
movs
cld
das
mov
or
xchg
les
xor
mov
inc
push
jge
dec
xor
sbb
mov
(bad)
dec
jmp
sbb
nop
jg
out
neg
sub
enter
arpl
test
retf
mov
stos
repz
mov
enter
pushf
jns
addr16
imul
arpl
pop
repnz
push
jae
mov
jg
jl
pop
xchg
cli
xchg
int3
jno
or
outs
sbb
loope
daa
jbe
les
adc
shr
pop
cmp
imul
dec
jae
sbb
mov
pop
inc
shl
sbb
xor
xchg
lods
xor
xchg
(bad)
stc
push
pop
sbb
inc
mov
mov
add
push
jae
jns
sbb
lea
idiv
jo
pop
movq
jecxz
adc
fstp
ds
call
cmp
cmp
mov
pop
fwait
dec
aad
imul
je
add
cmovae
ss
jbe
out
ins
xor
pop
aaa
les
push
aam
test
arpl
(bad)
sahf
sbb
lods
(bad)
jmp
imul
cmp
cmps
or
imul
icebp
mov
push
and
or
pop
lahf
out
jl
or
mov
aam
inc
pinsrw
cmp
into
ret
arpl
mov
push
pop
sbb
cld
mov
pop
mov
ja
xor
inc
mov
xlat
retf
adc
imul
loop
push
fbstp
ins
sbb
inc
ja
push
imul
adc
pusha
(bad)
fsubrp
mov
inc
(bad)
int3
imul
mov
cmp
and
scas
femms
popa
out
lock
mov
movs
rcl
mov
fs
repz
ss
stos
aam
lock
mov
adc
dec
jnp
imul
push
(bad)
mov
retf
jae
inc
mov
sbb
in
sub
xchg
pushf
outs
loopne
push
imul
sub
neg
fcmove
frstor
ret
cwde
xor
pop
sub
jle
out
dec
push
xor
loope
pop
in
xor
fs
xchg
nop
sbb
mov
enter
push
leave
mov
push
inc
pop
xor
inc
test
xor
ret
mov
cmp
mov
mov
xchg
mov
mov
je
pop
repnz
stos
sub
fwait
loope
cmp
mov
sub
popa
popa
inc
pop
cdq
or
pop
inc
cmp
jge
in
dec
mov
or
in
cmp
std
and
xchg
int
test
imul
sbb
cmc
push
inc
daa
xchg
add
(bad)
cmp
imul
sti
add
jb
jb
lods
aaa
adc
mov
(bad)
add
xchg
arpl
dec
or
sbb
or
pop
mov
pop
xchg
xor
dec
or
mov
inc
dec
cwde
and
(bad)
push
mov
xor
mov
ret
sbb
ss
retf
mov
cmp
into
cmp
adc
and
and
jae
dec
push
lods
fcmovb
push
sbb
scas
enter
ror
push
imul
iret
and
(bad)
mov
dec
retf
fcomp
lock
imul
int
js
(bad)
rcr
sbb
movs
cmc
jae
(bad)
jno
aam
jb
dec
repnz
inc
cli
pop
push
mov
cmp
mov
mov
lock
mov
stos
mov
pop
mov
xchg
dec
stc
pop
inc
mov
mov
jge
je
add
push
lock
pop
jp
test
and
shl
jmp
add
and
lahf
push
jmp
sbb
and
loope
add
pop
fwait
cwde
call
mov
cmp
sbb
jnp
inc
jmp
addr16
div
mov
mov
fwait
sbb
rcl
arpl
or
and
mov
jae
jns
sub
cmp
jne
(bad)
cdq
je
bound
mov
sti
add
sub
xchg
arpl
jb
mov
jno
mov
push
or
fiadd
inc
push
imul
adc
cs
lds
mov
sbb
mov
sbb
inc
mov
retf
call
mov
sub
adc
iret
jb
xchg
out
xchg
dec
lods
mov
adc
sub
sbb
jp
out
pop
sti
test
jo
push
lods
repnz
stos
fucomi
aad
dec
cmp
outs
inc
push
bound
dec
cmp
adc
jecxz
cwde
mov
popf
mov
movs
mov
pop
arpl
out
fstp
jns
cmc
push
dec
lods
int
add
shr
jge
fucompp
and
or
sahf
ds
cwde
faddp
sub
mov
retf
xor
in
jmp
mov
or
fwait
aas
in
mov
mov
and
and
and
jno
or
and
xchg
sbb
rcl
xor
enter
stc
jmp
inc
(bad)
out
jp
(bad)
loope
aaa
ja
loop
mov
sbb
xchg
push
cmp
add
xchg
movs
into
hlt
mov
pop
movs
sub
mov
mov
ins
into
hlt
mov
mov
xor
pop
pop
xchg
mov
aam
leave
xor
clc
mov
cmp
aad
jae
xchg
xor
popa
add
daa
imul
adc
out
hlt
mov
cmp
xchg
xchg
ret
and
cwde
pop
xchg
dec
fucom
cmc
scas
adc
cld
xlat
jp
jecxz
test
pop
jge
jmp
retf
pop
pushf
xchg
pop
push
sbb
inc
inc
test
sti
mov
inc
mov
push
cs
mov
push
fwait
cs
rcr
ins
(bad)
imul
inc
test
add
aam
sbb
sub
push
imul
pop
mov
inc
mov
ret
sahf
or
mul
test
call
mov
inc
jmp
rcr
pop
cmp
mov
pop
sbb
daa
xchg
adc
leave
mov
push
or
xchg
inc
pop
shl
stos
mov
xchg
push
mov
sbb
call
jns
repnz
fbstp
loope
ss
cmp
outs
outs
repnz
mov
je
adc
arpl
pop
ds
sbb
fdiv
jno
pushf
sbb
fwait
push
jns
mov
push
sbb
stos
gs
xlat
inc
pop
shl
ficomp
int3
cmps
mov
push
(bad)
enter
ins
sbb
dec
xchg
pop
jae
scas
(bad)
jmp
mov
xor
push
mov
neg
repnz
nop
push
(bad)
mov
lods
mov
xchg
out
stos
repnz
mov
pop
out
mov
xlat
jne
pop
ja
add
rcr
xchg
popa
push
add
stos
jecxz
mov
mov
(bad)
cld
test
mov
sbb
mov
clc
fidivr
or
xor
imul
pop
sbb
fstp
repnz
inc
pop
cmp
les
fisubr
fst
pushf
(bad)
out
(bad)
mov
jle
add
in
add
(bad)
into
jbe
jmp
neg
out
cld
jbe
pop
int3
mov
xor
sbb
into
sbb
cwde
pop
jle
sub
sub
fs
aad
fwait
sbb
addr16
call
int
jle
scas
movs
ror
adc
ins
repz
not
sbb
pop
and
jge
mov
fstp
ret
test
hlt
pop
imul
aas
dec
mov
inc
aaa
cmp
push
pop
ds
sbb
push
(bad)
dec
out
ret
(bad)
mov
(bad)
xchg
mov
sub
pop
pop
or
idiv
cmps
cld
lods
sbb
enter
fcomip
fsubr
and
jge
add
imul
xor
popf
(bad)
jge
mov
(bad)
int
inc
xchg
sar
pop
mov
push
jnp
cmp
ret
xor
not
jno
add
sub
dec
in
popf
mov
jmp
cmp
mov
mov
jmp
icebp
jmp
or
retf
inc
dec
and
icebp
sti
jb
xor
in
pop
leave
mov
xchg
sbb
xor
shr
enter
sbb
xor
lock
(bad)
mov
fbstp
dec
ins
cmp
nop
sbb
xor
jae
imul
sar
pop
pop
add
cwde
mov
add
aaa
inc
es
cmp
sahf
jecxz
cwde
mov
movs
xchg
repz
dec
in
push
rcl
mov
pop
and
jmp
mov
pop
ins
pop
mov
in
mov
lods
add
inc
dec
xchg
ja
out
pop
out
jle
movs
push
popf
aam
jae
pop
mov
out
dec
popa
sbb
or
lahf
adc
(bad)
adc
arpl
jnp
out
fild
cmp
xchg
and
jl
ins
ror
push
pop
pop
push
daa
or
in
loop
loope
jg
mov
lahf
paddd
clc
jbe
daa
pop
(bad)
push
(bad)
imul
das
sub
popf
fnstsw
pop
jmp
mov
daa
jmp
sub
add
jnp
pop
adc
dec
xchg
inc
push
ins
imul
fisubr
hlt
int3
js
lock
cmp
out
loope
out
jle
and
int
cmp
xor
sbb
aaa
push
xchg
pop
sbb
out
popa
neg
jbe
mov
sub
cli
mov
fisttp
add
out
repnz
dec
lea
xor
sbb
cmp
jmp
in
lds
and
cs
into
call
cmp
and
fild
repnz
adc
shl
xor
cmp
mov
xchg
cmps
lahf
cli
leave
lea
and
jmp
jnp
in
mov
dec
jmp
dec
add
lock
shr
or
mov
xchg
les
(bad)
sbb
cmc
fadd
stc
test
xor
(bad)
retf
call
mov
push
ins
data16
arpl
mov
loop
dec
in
sub
xor
mov
ja
std
xchg
mov
adc
fwait
and
push
fistp
push
jge
sti
das
jge
call
xor
int
imul
in
js
or
pop
add
adc
stos
push
jmp
loop
es
(bad)
mov
aam
cmp
inc
mov
(bad)
stos
pop
mov
test
int
inc
dec
xchg
mov
fnstcw
bnd
(bad)
clc
dec
clc
cdq
mov
int3
int3
cmp
mov
psubusb
stos
gs
mov
mov
in
imul
pop
and
es
xchg
mov
jge
mov
cdq
scas
mov
xchg
(bad)
cmp
adc
and
int3
lea
mov
dec
clc
idiv
call
jno
out
imul
shl
push
rol
retf
bnd
shl
xchg
push
xchg
mov
add
imul
fs
fst
and
aam
xor
mov
sar
jo
sti
xchg
adc
inc
test
xchg
push
or
iret
add
sbb
pop
dec
test
stos
or
fisttp
stos
sub
in
mov
push
jle
ins
imul
add
mov
(bad)
loope
push
jmp
in
cmp
mov
stos
je
sbb
cs
icebp
cdq
mov
mov
cdq
pcmpeqb
push
jae
dec
movs
test
push
mov
cmp
call
call
add
inc
adc
stos
inc
mov
jo
and
ins
pusha
jo
lock
jle
and
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
fstp
(bad)
jo
jg
push
push
in
inc
outs
jnp
jle
test
dec
inc
and
add
add
inc
adc
adc
cwde
inc
ror
xor
add
push
hlt
inc
ror
retf
shr
scas
jns
mov
add
and
xchg
nop
stos
inc
adc
and
cld
and
add
ror
call
inc
adc
pop
add
cmp
xchg
mov
push
add
test
jmp
or
or
push
or
sti
and
sub
not
test
adc
dec
mov
add
or
dec
inc
rol
or
cmp
sbb
cmc
inc
sub
sub
add
add
dec
mov
inc
jl
adc
and
mov
mov
mov
stos
sub
xchg
xchg
and
test
dec
inc
test
or
add
inc
adc
adc
shl
sbb
sbb
cs
jb
xchg
adc
popa
sbb
dec
jbe
fcomp
jnp
xchg
mov
test
xor
pushw
xor
inc
aas
aad
bound
loop
gs
cmp
fwait
or
ror
or
mov
dec
mov
test
inc
cs
jae
pop
pop
(bad)
xchg
cmp
je
xor
xchg
out
push
xchg
mov
shl
dec
sub
jmp
jno
retf
(bad)
enter
mov
pop
in
inc
cdq
jb
jns
or
push
xchg
adc
lock
jecxz
sub
add
jmp
add
test
xchg
pop
out
cmp
xchg
push
adc
js
lds
cmp
mov
jne
mov
mov
test
jae
jle
dec
mov
mul
test
push
shl
out
adc
outs
and
(bad)
sar
clc
inc
loopne
jne
xlat
jmp
les
neg
test
arpl
nop
xlat
xor
ins
stc
add
xchg
xor
shl
ret
mov
jl
loopne
outs
mov
and
sbb
xchg
cmc
nop
mov
or
in
or
imul
mov
add
dec
xor
int
lds
mov
js
pushf
clc
xchg
je
add
sub
imul
clc
jno
cmc
sub
int
xchg
cmp
or
jnp
mov
adc
push
xor
sbb
jae
xor
fsubr
xor
add
cmps
call
fisttp
call
mov
inc
or
cmp
mov
call
sub
jb
sar
mov
add
cdq
mov
scas
xchg
ss
mov
jne
(bad)
jmp
jl
jno
pop
inc
cmp
mov
xor
inc
sub
push
outs
cmp
repz
mov
inc
fsubr
int3
outs
bnd
push
mov
jns
fdivr
sub
or
outs
mov
xor
ficomp
push
and
test
cmp
xor
mov
ror
cli
fucomp
ds
sbb
pop
dec
cmc
add
clc
add
movs
xor
jle
test
sub
push
in
mov
neg
cmp
cmps
call
jle
test
and
arpl
(bad)
es
push
jg
out
std
aad
sar
popa
scas
jno
pop
pop
push
mov
add
hlt
sbb
dec
vpaddusw
sub
popa
in
enter
fucomip
ds
inc
fs
int
inc
sub
or
ds
pusha
push
mov
sbb
lods
jae
out
int3
repnz
push
arpl
mov
cmp
or
mov
mov
lods
cmps
sbb
call
ret
and
jmp
addr16
cmp
fiadd
xchg
loop
pop
cmp
jecxz
xor
outs
out
imul
fisttp
sbb
push
push
jmp
pop
sbb
cmp
mov
stc
sub
inc
dec
shr
jle
or
fild
dec
imul
daa
mov
cld
sub
xchg
xor
fnstenv
cs
enter
call
stos
fnstsw
xor
cmp
pushf
repnz
cmps
xchg
push
ds
jg
xor
mov
ret
mov
jl
pushf
add
les
or
lods
fadd
fild
push
ds
cld
clc
mov
ret
fdiv
inc
movs
int
fwait
out
lock
shl
and
jle
jg
xor
mov
pop
outs
aas
mov
sbb
mov
mov
cmp
pop
ror
push
lods
and
dec
je
xor
movs
xchg
fstp
push
leave
popf
mov
hlt
mov
inc
mov
aaa
retf
adc
in
jl
outs
mov
xchg
mov
mov
push
or
dec
mov
dec
jno
cs
jp
mov
push
inc
dec
inc
sub
fimul
mov
es
arpl
nop
add
xchg
outs
mov
xor
and
jnp
imul
mov
and
jge
imul
dec
lea
xlat
fld
nop
adc
pop
lahf
xchg
sbb
mov
add
push
jnp
push
mov
repnz
out
scas
jno
mov
in
cmps
(bad)
hlt
stos
cmp
pop
shl
pop
or
xor
aaa
mov
ret
cmp
jnp
xchg
aad
and
xchg
xlat
inc
cmps
fstp
retf
and
sahf
cmps
fst
loop
sti
fcmovb
push
out
dec
(bad)
pop
dec
xor
in
cmp
jmp
push
mov
mov
aaa
xchg
mov
add
mov
daa
mov
movs
mov
mov
imul
xchg
inc
and
cwde
out
arpl
pop
sbb
enter
das
xchg
jo
inc
pop
cld
(bad)
sbb
mov
mul
xor
cmp
call
stos
lea
mov
pushf
pop
dec
sbb
pushf
das
sub
jno
cmp
hlt
sub
and
xor
jb
clc
pop
xor
das
aam
jae
sbb
in
xchg
(bad)
ror
or
rol
ins
test
pop
xchg
movhps
add
arpl
mov
loope
fwait
and
ret
xchg
cmp
out
imul
inc
sar
xchg
fwait
call
dec
jecxz
sub
sahf
stc
and
mov
push
push
sahf
ds
jmp
outs
add
push
inc
sbb
fcomp
sar
mov
xor
shl
stos
push
ins
outs
(bad)
push
aam
sbb
push
sub
pop
neg
xchg
xchg
sub
fcomp
sbb
retf
sbb
test
arpl
push
bnd
mov
push
retf
cmp
or
pop
int3
sub
pushf
lea
adc
and
sbb
mov
daa
or
sub
ss
scas
push
push
jmp
jge
cmp
retf
adc
dec
gs
pop
je
fs
(bad)
jne
ss
nop
sbb
das
or
inc
shl
in
ss
stc
or
sti
mov
sbb
mov
je
mov
popa
push
xor
mov
xor
xchg
sahf
rcr
clc
mov
sbb
pop
jae
test
cmp
and
cmp
movs
retf
repnz
(bad)
in
add
or
mov
je
xchg
mov
xor
mov
push
xchg
and
xchg
in
cmp
and
std
inc
xor
dec
pop
test
(bad)
and
inc
xchg
daa
jl
nop
mov
push
sub
stos
pop
mov
loopne
sub
(bad)
sbb
pop
in
pushf
cmc
cld
daa
(bad)
mov
adc
mov
dec
pop
push
jb
and
dec
jae
inc
(bad)
mov
sbb
cmp
cmp
lods
push
cdq
jmp
cmp
call
int3
lods
dec
cmc
sbb
and
jmp
ss
inc
and
cld
sub
movs
(bad)
mul
mov
fcmovbe
mov
dec
sahf
push
inc
data16
pusha
rcl
ja
into
nop
mov
jg
rcr
xchg
movs
jo
cdq
lods
out
out
add
dec
lahf
sub
xchg
pop
push
retf
ss
mov
or
inc
and
out
je
punpcklbw
xchg
xchg
cwde
mov
xchg
sbb
mov
outs
jge
scas
gs
xchg
xlat
cmp
and
push
mov
xchg
pop
popf
xchg
nop
popa
leave
sub
psubsw
sbb
mov
or
ficomp
rcr
test
std
sub
pop
lods
fisttp
sub
mov
outs
jecxz
adc
dec
imul
scas
mov
push
das
clc
mov
int3
jno
jbe
cmp
(bad)
cld
inc
int3
lds
push
outs
fwait
in
fwait
in
ds
dec
ja
scas
mov
and
out
pop
pop
rol
outs
fcom
mov
cmp
dec
sbb
cmp
jl
cmp
fidiv
leave
mov
inc
mov
and
inc
cmc
loopne
gs
ins
ss
xchg
dec
mov
inc
in
(bad)
lahf
inc
jge
mov
leave
std
cmp
div
sbb
je
sub
pop
mov
aam
mov
pusha
cmp
push
in
ss
imul
pop
icebp
rcl
jle
out
ja
inc
sbb
lods
js
(bad)
xor
dec
push
mov
xchg
mov
push
imul
outs
mov
arpl
mov
and
push
stc
outs
fstp
movs
mov
in
sti
shl
fcmovnbe
xchg
and
xchg
and
or
shl
stc
jb
jno
int3
rcr
enter
mov
mov
sahf
ret
inc
sbb
xor
daa
in
scas
in
fidivr
icebp
retf
ret
mov
mov
imul
pushf
fild
clc
push
or
mov
xchg
pop
ret
es
sub
ret
ret
(bad)
in
es
in
scas
push
outs
aam
add
cmp
push
outs
ds
fsub
clc
sub
inc
jl
cdq
jge
mov
dec
iret
jmp
stc
mov
inc
mov
aaa
pop
push
mov
fdiv
push
cdq
push
int
scas
data16
mov
imul
xchg
lods
test
out
xchg
sahf
mov
and
or
pop
dec
xchg
mov
std
rcr
arpl
mov
in
sbb
imul
in
stos
arpl
scas
xchg
jecxz
cmp
and
popf
mov
outs
jns
pop
dec
sbb
cmp
inc
add
add
inc
sbb
pop
pop
je
cmp
in
movs
cmc
inc
ins
sub
fstp
xchg
push
inc
xchg
mov
or
loopne
push
adc
and
push
cmp
push
mov
addr16
ret
data16
test
push
jle
jne
outs
aam
es
(bad)
add
pop
cld
pop
push
or
ss
in
jge
push
aad
repnz
mov
sti
data16
and
jecxz
add
int3
(bad)
icebp
sbb
nop
ins
add
and
jle
or
xchg
fnstenv
call
out
adc
ss
cmps
cld
enter
nop
inc
sub
out
pop
add
inc
ficom
sar
add
xchg
and
pop
pop
dec
inc
pop
and
cli
cmp
dec
cmp
push
sti
test
mov
and
mov
fadd
push
repnz
jmp
lahf
adc
fstp
std
iret
inc
jbe
movs
out
stc
loop
dec
jb
in
mov
psubb
cmp
cmp
push
cmp
scas
scas
xchg
mov
sahf
fnstenv
mov
in
jge
add
(bad)
arpl
ss
out
pop
inc
in
mov
stos
dec
ret
or
fild
shl
loop
leave
test
inc
aaa
and
add
loope
imul
pop
sbb
fwait
and
fld
clc
mov
cmps
icebp
push
push
jl
ss
push
imul
inc
pop
aad
pop
inc
ret
retf
fs
cmp
jge
retf
dec
mov
dec
push
xor
lods
cli
mov
sahf
fs
jge
outs
xor
stos
push
xchg
(bad)
mov
push
iret
mov
sbb
inc
pop
or
xchg
mov
dec
movs
bound
call
jle
mov
cwde
mov
cs
jl
icebp
nop
inc
and
add
sahf
cld
push
adc
dec
pop
addr16
cmc
outs
loop
xchg
mov
aas
stos
jnp
(bad)
fs
sbb
pop
cs
push
jl
or
(bad)
clc
pushf
cmp
lds
iret
inc
retf
push
mov
mov
sub
es
jae
add
sub
cld
addr16
dec
lods
xchg
push
pop
out
aas
je
std
daa
inc
int
fbstp
aad
mov
xchg
outs
xchg
xchg
cmps
xchg
or
lods
ins
sbb
pusha
imul
push
test
fdivr
cmp
cdq
in
loope
pushf
int
ins
ret
mov
push
addr16
popa
in
jb
imul
(bad)
add
push
js
int3
xchg
xchg
mov
push
inc
sub
pop
cmp
enter
pop
arpl
ss
and
push
mov
cmp
outs
repz
mov
push
pop
(bad)
stc
scas
and
std
pop
cmp
fldenv
xor
jno
mov
sub
js
ins
ins
mov
std
fcomip
mov
iret
adc
sbb
pop
jae
sahf
sub
leave
int3
xchg
ds
out
add
cli
inc
fstp
clc
out
(bad)
xchg
cmps
dec
cld
cmp
sahf
fld
(bad)
scas
inc
jnp
sti
cs
dec
pop
(bad)
mov
cmps
cwde
shl
fst
push
outs
clc
loope
xchg
aam
jbe
cmp
popf
outs
push
arpl
jae
mov
icebp
loop
jge
dec
nop
imul
stos
loop
push
out
fidivr
(bad)
sub
jae
imul
ds
rcr
push
in
scas
nop
daa
inc
mov
push
movs
xor
mov
cmp
pop
ds
cmp
pop
xchg
clc
push
push
adc
jns
sub
mov
xchg
adc
xchg
bound
fwait
movs
and
loop
pop
mov
dec
leave
adc
or
cwde
add
sbb
shr
enter
in
sub
pop
xchg
data16
fcmovu
in
pop
icebp
hlt
adc
test
push
pushf
in
out
mov
retf
inc
pop
add
xor
and
es
jnp
fst
dec
or
pop
loopne
shl
popa
push
int3
sbb
sar
xchg
pop
js
(bad)
mov
jecxz
enter
xor
stos
leave
shl
and
cwde
aas
enter
inc
sub
popf
out
jmp
add
or
inc
adc
mov
add
or
or
ss
jo
call
adc
fwait
pop
mov
and
add
adc
test
adc
or
add
inc
adc
adc
or
or
dec
xchg
jns
rol
mov
add
test
adc
or
adc
jns
or
or
dec
mov
push
ror
mov
dec
mov
mov
je
xchg
dec
cmps
or
stc
inc
jb
mov
add
mov
call
loopne
adc
(bad)
in
mov
iret
jb
cdq
adc
cmp
loope
dec
cmp
dec
or
or
or
sbb
or
lea
mov
adc
push
mov
mov
inc
adc
adc
es
push
pusha
je
or
mov
movs
and
sbb
xchg
add
or
out
clc
dec
xchg
mov
xchg
nop
test
sub
push
inc
es
add
and
test
add
test
add
add
or
adc
daa
loope
inc
movs
cmps
mov
xor
mov
ffree
cmc
clc
or
shl
fnstenv
or
mov
jl
icebp
loope
jbe
mov
or
jmp
cmps
lahf
xchg
push
xchg
mov
jo
inc
movs
jg
retf
and
clc
ja
stos
or
dec
jmp
(bad)
xor
sub
(bad)
in
repz
rcl
push
jbe
pop
xchg
mov
and
mov
ret
ficomp
dec
adc
cmp
jae
pop
xchg
xchg
xchg
iret
or
sahf
out
jno
in
pop
test
je
push
test
push
xchg
mul
repnz
jae
add
add
inc
cmp
scas
fwait
retf
mov
jmp
or
pcmpgtb
ins
mov
outs
mov
push
sub
test
nop
mov
cmc
inc
nop
cdq
dec
nop
or
or
jbe
or
inc
test
rcl
in
in
or
loop
pminsw
leave
xor
fs
out
jbe
jg
cld
test
sbb
xlat
pop
xor
sbb
mov
arpl
cmps
dec
inc
or
loop
leave
je
cmps
jns
cmp
aas
test
xlat
imul
sub
cmp
fldenv
call
icebp
into
mov
out
shl
mov
sbb
popf
cdq
cmps
imul
jecxz
(bad)
and
test
mov
sbb
in
(bad)
pop
sbb
imul
and
pop
aas
adc
pop
push
test
adc
jmp
cs
aas
sbb
lds
and
mov
daa
ret
fdiv
push
or
cld
sahf
lahf
test
aas
push
xor
pop
sub
lahf
stc
sub
jmp
mov
hlt
cdq
movs
or
out
addr16
push
fnstsw
in
xchg
inc
pusha
xchg
cmp
es
popf
in
mov
add
outs
repnz
pop
and
xchg
mov
xchg
cmp
add
int3
imul
rol
xor
les
retf
js
in
aaa
xor
into
inc
(bad)
aam
sbb
(bad)
xchg
ffree
xchg
inc
mov
xor
jb
fxch
xchg
div
or
pusha
mov
pop
jae
sub
inc
ja
cmp
fisttp
imul
xor
into
dec
push
pop
adc
arpl
arpl
dec
inc
inc
pop
mov
or
pushf
pop
rol
stos
es
and
rol
loope
test
push
test
dec
and
inc
xchg
ja
sar
in
pusha
mov
dec
fsubp
addr16
ret
xor
(bad)
sbb
int3
add
cmp
cmp
das
enter
xor
popf
fs
jb
xchg
fdiv
std
cmp
scas
imul
imul
push
or
dec
fisubr
scas
adc
xor
jge
xchg
xchg
push
out
push
repnz
mov
jnp
ret
pop
in
cli
jl
int
xchg
aaa
hlt
adc
add
dec
ins
inc
add
or
xchg
xchg
scas
jb
cmps
or
out
fdiv
adc
inc
mov
inc
in
jae
add
add
jns
push
mov
ja
les
mov
lock
ins
inc
push
xchg
pop
clc
xchg
and
ss
movs
jnp
test
retf
aad
or
sahf
shl
fstp
js
ffree
fnsave
cmp
dec
ins
movzx
pop
and
cmps
cmp
cmps
push
cwde
push
mov
in
hlt
pop
adc
mov
or
xor
mov
push
mov
adc
out
xchg
movs
jbe
inc
mov
test
xchg
adc
sbb
loopne
xor
loopne
xchg
jnp
jge
imul
mov
std
ret
mov
pusha
ss
test
push
inc
add
outs
ja
dec
rcl
push
mov
call
inc
or
mov
sbb
and
mov
mov
dec
loopne
and
gs
aad
lea
sar
(bad)
dec
mul
pop
mov
cmp
adc
adc
out
mov
jmp
push
aas
jne
pop
add
fcomp
xor
movs
iret
lock
mov
or
scas
popa
jo
std
mov
mov
int3
cwde
sbb
xchg
(bad)
test
into
cld
sub
xchg
stc
jl
shl
mov
loopne
lods
imul
mov
hlt
lahf
mov
pop
xchg
loop
ret
pop
add
xchg
jo
lahf
cdq
mov
mov
jb
pop
iret
xchg
xlat
dec
in
xor
std
inc
cmp
inc
add
ja
jo
cmp
sbb
mov
xor
loop
cwde
mov
stos
push
lods
div
out
cmps
loope
mov
clc
rcl
xor
call
cmp
out
pop
xchg
ret
cmp
cli
mov
jnp
enter
pop
pushf
call
pop
sub
inc
jmp
sub
xor
arpl
adc
je
(bad)
push
loope
mov
lea
scas
ror
jne
xor
test
scas
in
push
cdq
sahf
or
lock
rcl
pop
in
inc
mov
jmp
inc
add
jo
pop
sbb
enter
repz
mov
adc
jle
push
int3
repnz
xor
jmp
inc
and
mov
jo
or
pop
mov
fcomi
lahf
mov
dec
in
push
xchg
push
jl
lar
movs
std
lods
jg
repnz
mov
in
(bad)
pop
cmps
sbb
fldz
xchg
mov
inc
ins
adc
mov
fld
lock
mov
es
cmp
mov
scas
(bad)
test
adc
outs
nop
fld
xor
push
retf
mov
ja
mov
xchg
mov
ins
inc
in
dec
in
cmp
sbb
cld
sub
dec
pushf
cmp
popa
inc
enter
cwde
fbstp
and
fstp
jno
pop
push
sahf
cdq
add
retf
sub
stc
adc
in
pop
pop
dec
ja
jp
dec
cld
pop
xor
je
loop
add
data16
inc
aam
stos
retf
adc
jbe
into
mov
retf
aad
aaa
dec
xchg
nop
out
mov
mov
fs
sbb
mov
pop
sub
pop
xchg
aad
int3
or
bound
lea
add
cld
test
pop
mov
cmp
int3
daa
in
aam
mul
cmp
lock
jbe
inc
(bad)
push
in
(bad)
push
mov
push
clc
or
rcr
enter
jmp
fldcw
mov
pop
repnz
lds
(bad)
add
mov
cmp
addr16
jno
push
mov
pop
mov
ret
xor
sbb
aam
xlat
stos
sahf
push
jns
out
sbb
fisubr
mov
sbb
mov
pushf
cld
mov
cmp
or
pop
fild
fcmovbe
sub
xchg
aas
push
jle
jns
mov
push
dec
cmps
ds
rcr
sbb
fsub
jne
rcr
push
shl
jns
dec
aam
aam
jbe
adc
ins
sar
xchg
pop
add
push
(bad)
aam
xchg
enter
fidiv
cmp
cmp
fmul
jmp
je
stc
cmp
and
lea
jae
arpl
out
je
jno
mov
cmc
add
or
jmp
std
cs
adc
test
loopne
mov
inc
sahf
(bad)
(bad)
icebp
cs
jns
jmp
pop
sbb
xchg
je
add
push
and
(bad)
(bad)
xor
push
add
dec
fsubp
in
hlt
clc
loopne
mov
ja
and
xlat
xchg
mov
sub
inc
and
add
int
push
data16
dec
adc
and
rcr
cdq
dec
(bad)
fcomp
cli
and
or
sub
mov
sbb
lahf
xor
in
pusha
gs
mov
test
mul
xor
jbe
fnsave
pop
and
psubusw
(bad)
pop
cmp
retf
cmp
xlat
cmps
loopne
xor
jnp
and
cs
cli
addr16
je
into
push
call
pop
jae
sub
fild
push
mov
lods
mov
call
cwde
inc
dec
cs
and
popf
(bad)
das
test
sbb
fcomp
jle
(bad)
gs
cmp
jb
and
shr
out
fadd
out
mov
mov
repz
sub
or
sbb
fld
sar
seta
(bad)
jnp
ss
pop
sbb
std
(bad)
loopne
mov
sub
repnz
ret
dec
cs
add
(bad)
rol
sub
mov
or
mov
fisttp
sub
jg
dec
ss
pusha
add
xor
mov
dec
lods
cmp
or
push
test
dec
shl
fptan
and
and
rcr
inc
and
inc
pushf
mov
iret
(bad)
sbb
pop
mov
imul
cmp
icebp
in
mov
or
leave
fidiv
pop
inc
mov
call
xchg
adc
gs
or
dec
adc
das
clc
daa
mov
mov
fs
stc
push
es
dec
sbb
nop
lds
out
xchg
push
dec
xchg
aaa
(bad)
es
cli
scas
pop
clc
pusha
(bad)
int
pop
cli
mov
jno
xor
jle
dec
ret
arpl
jbe
cmp
pop
imul
pusha
jne
bound
cmps
retf
or
and
inc
mov
imul
xchg
js
jns
and
imul
pop
cmps
(bad)
ja
int3
rol
add
mov
inc
lock
mov
and
xchg
nop
das
imul
mov
dec
outs
pushf
addr16
jmp
and
mov
ins
out
leave
sbb
sub
add
jb
xchg
(bad)
enter
pop
icebp
hlt
arpl
mov
xchg
andnps
adc
jmp
repnz
xor
(bad)
mov
mov
dec
nop
out
repnz
es
out
mov
cmp
inc
pop
test
jecxz
nop
lods
addr16
mov
or
jnp
cwde
jns
(bad)
inc
mov
call
pop
mov
mov
pop
ss
pop
fcmovnu
bound
fidiv
fwait
imul
retf
mov
pop
sub
dec
xor
mov
imul
dec
jo
div
xlat
ds
mov
dec
mov
mov
sub
mov
sbb
mov
cmp
call
push
rcl
cmp
push
es
cmps
push
xchg
pop
dec
or
imul
pop
cwde
cld
shl
(bad)
pushf
loopne
xor
repnz
std
aas
cwde
popa
imul
sub
in
stos
and
push
mov
push
fiadd
fs
stos
cmp
mov
ss
call
mov
jp
push
xor
dec
dec
pop
cmp
stos
mov
sar
push
pop
outs
aam
xchg
dec
ucomiss
call
lock
mov
cli
push
mov
(bad)
xlat
mov
jecxz
cmp
mov
mov
sbb
mov
xchg
lods
iret
xchg
adc
ret
rol
add
ins
jne
jne
add
loop
mov
enter
mov
pop
popa
push
mov
cmp
lea
cmc
ss
aaa
lock
push
cmp
xor
fcomp
ss
mov
fidiv
push
(bad)
ret
jbe
add
ffree
fadd
cmp
outs
jmp
cmp
fisttp
stos
fistp
lds
iret
idiv
mov
jo
or
and
sbb
ds
stos
add
xchg
leave
add
enter
sbb
inc
rcr
xor
or
retf
pop
out
(bad)
mov
js
js
xchg
inc
pop
inc
fbstp
stos
in
push
loope
and
in
jae
mov
add
jbe
fild
jne
jne
xor
sbb
xor
push
xlat
adc
push
icebp
jno
aas
and
rol
ins
mov
jo
popf
mov
imul
xchg
pop
or
jl
dec
int
and
out
sahf
xor
add
les
add
fbstp
mov
call
mov
int
cmp
cmp
xor
push
icebp
(bad)
push
sub
cs
or
or
int
xchg
fwait
repnz
fst
push
(bad)
out
sub
dec
push
ret
jae
jae
fst
mov
into
nop
mov
sbb
js
rol
mov
add
daa
push
je
outs
cmp
jg
inc
das
xor
dec
ror
imul
sbb
mov
adc
ja
cmp
and
ror
dec
call
out
mul
rcl
dec
int
js
sbb
push
jmp
(bad)
xor
fs
scas
ret
in
xchg
loop
cmps
ret
sub
pop
ret
and
add
jge
sti
aas
lea
cmps
push
dec
xor
mov
and
dec
out
inc
or
dec
mov
loope
icebp
mov
out
sbb
mov
adc
mov
jne
popa
loopne
jmp
push
inc
aas
ror
inc
push
add
dec
ret
in
or
ret
xchg
xor
jl
push
aas
loope
jb
call
push
fcomi
inc
leave
mov
add
(bad)
push
adc
sbb
in
pop
mov
push
ja
add
cmp
aaa
xchg
retf
(bad)
xchg
in
xchg
stc
cwde
loopne
(bad)
pop
(bad)
neg
arpl
mov
add
pushf
loopne
aaa
out
mov
les
xchg
int3
in
add
sub
push
js
loop
stc
sbb
stos
js
scas
xchg
aas
push
xchg
std
ds
pop
or
rcr
sbb
push
arpl
test
(bad)
out
sbb
and
out
mov
jl
in
out
jnp
mov
(bad)
leave
mov
pop
pop
(bad)
leave
es
jo
ret
fidivr
pushf
push
pop
mov
lods
mov
imul
ins
(bad)
adc
fwait
inc
icebp
dec
sbb
mov
daa
dec
sbb
and
sub
mov
sub
shr
test
rcl
rcr
retf
jbe
mov
push
sub
xchg
mov
enter
out
sub
push
loope
in
test
aam
jp
mov
add
je
cmp
cmp
fldcw
sub
adc
mov
test
add
ins
sbb
rol
call
mov
(bad)
pop
inc
pop
inc
jnp
sbb
add
sbb
push
dec
ins
inc
cli
cwde
retf
out
iret
mov
rol
inc
cmps
jmp
in
(bad)
lods
xchg
cwde
sbb
mov
sub
mov
cs
jl
iret
or
xor
sub
sub
(bad)
loopne
push
jl
(bad)
jmp
shr
je
and
sbb
sahf
ds
fsubr
add
or
aaa
lds
mov
stos
cld
mov
inc
pop
ror
sti
and
nop
or
add
sub
test
adc
test
adc
test
add
test
add
cmp
mov
add
inc
push
pop
loop
sar
xchg
inc
adc
inc
adc
inc
add
or
xor
or
dec
je
mov
inc
xor
pop
or
nop
push
cmp
and
dec
adc
jnp
mov
push
sub
jmp
inc
add
movs
ret
and
and
inc
adc
adc
shl
add
inc
outs
fisub
aam
jmp
cs
and
xchg
mov
mov
push
xchg
pop
out
ret
xchg
mov
xchg
mov
out
xchg
xchg
mov
call
mov
and
and
adc
or
or
or
or
or
loope
test
sub
ins
or
inc
and
inc
and
and
xchg
pushf
add
adc
ror
and
add
dec
mov
or
rcl
xchg
in
leave
xchg
mov
pop
mov
fmul
inc
add
jb
xor
leave
ja
fmul
fs
mov
fiadd
daa
je
cmp
fst
and
enter
enter
clc
push
mov
sub
mov
mov
or
jg
test
call
ds
xchg
outs
sub
loope
sbb
sbb
pop
xor
push
ins
mov
xchg
push
mov
xchg
sahf
dec
popa
clc
push
mov
fwait
pslld
jo
mov
add
daa
mov
cmps
loopne
sub
sub
mov
ret
and
inc
inc
cwde
add
xor
shl
cmp
mov
outs
and
fwait
pop
pop
sahf
dec
mov
sub
xchg
call
xor
ror
cs
sahf
jmp
cmp
push
cs
jecxz
addr16
imul
xchg
or
mov
dec
add
and
mov
imul
mov
pop
enter
add
xchg
or
loope
lea
shl
arpl
out
mov
fwait
or
mov
(bad)
or
push
icebp
js
sbb
das
sub
ret
sbb
push
(bad)
leave
adc
dec
pop
inc
fwait
or
sub
lds
cwde
shl
jle
mov
pop
jne
daa
xor
or
jp
enter
ins
pop
dec
fisttp
lea
cli
scas
test
mov
sbb
sbb
hlt
xor
ins
jno
pop
fistp
(bad)
push
adc
das
mov
push
dec
jl
mov
hlt
ins
mov
xlat
xor
xchg
aaa
es
pop
cli
add
(bad)
out
ret
pop
dec
loope
mov
mov
shl
pop
xchg
retf
loopne
xchg
jge
movs
rcl
mov
xor
xor
mov
fstp
lahf
cmp
call
xor
shl
dec
out
push
xchg
mov
out
arpl
out
mov
test
lahf
repnz
mov
jp
fdiv
jg
cld
cmp
(bad)
call
xchg
sbb
repnz
push
push
jmp
dec
cmps
mov
mov
popf
adc
or
push
xlat
ins
mov
retf
xchg
xchg
in
nop
pop
ror
movs
lds
repnz
mov
hlt
mov
(bad)
clc
nop
jl
imul
fwait
inc
xchg
sar
push
ret
(bad)
sbb
outs
nop
xor
inc
add
cmp
shl
mov
push
retf
add
mov
sub
test
mov
jns
daa
sbb
(bad)
sar
mov
jp
mov
loopne
pop
dec
lock
pop
icebp
in
in
mov
(bad)
mov
xlat
pop
test
ret
mov
loop
pop
fwait
or
cmps
inc
push
xchg
jp
ins
lods
repnz
cmp
(bad)
push
lea
mov
sub
pop
cdq
sbb
xchg
pop
jmp
sbb
jge
out
lods
mov
push
sbb
and
jb
inc
je
mov
arpl
fld
lahf
int
loope
es
sbb
adc
pop
jae
pop
test
fadd
cmp
(bad)
jne
shl
xchg
out
jae
sbb
push
jnp
lea
xlat
pop
pop
push
stc
push
jbe
sbb
cs
jae
retf
xchg
sbb
jmp
bound
cmp
jns
aad
adc
lods
inc
dec
aam
inc
and
push
rcl
out
jmp
or
inc
adc
(bad)
cld
push
inc
sahf
cmp
mov
mov
cmps
jo
sahf
push
mov
shld
fbld
and
iret
scas
xchg
mov
ins
mov
mov
aaa
mov
lds
mov
pushf
cs
mov
cmp
icebp
mov
lods
xchg
das
aam
mov
movs
ds
iret
push
icebp
sub
popa
nop
cmp
and
jle
sahf
loop
rol
sahf
pop
leave
stc
clc
push
xor
xchg
pop
enter
inc
aaa
jle
xchg
mov
mov
repnz
xor
dec
ins
int3
arpl
ins
mov
mov
std
xchg
jbe
and
cdq
in
mov
jmp
into
xlat
jg
std
shl
movs
jp
cs
sahf
mov
inc
pushf
bnd
push
rol
mov
pop
inc
adc
mov
sbb
jle
not
inc
push
and
scas
cmp
sbb
lock
sbb
in
mov
xor
push
xchg
outs
stc
xchg
fnstsw
sbb
or
mov
nop
shl
xchg
sub
stos
add
dec
sbb
test
sub
push
mov
xchg
out
gs
mov
mov
inc
js
leave
iret
jo
push
loope
xor
sbb
fs
in
gs
sar
fbld
fstp
icebp
push
in
mov
es
sar
xchg
mov
jmp
pop
xchg
and
and
xchg
push
pop
fcomp
add
sar
pop
push
(bad)
jmp
mov
mov
pop
cli
pop
icebp
xor
push
jns
inc
rcl
aaa
(bad)
mov
xchg
mov
mov
sti
sub
mov
ret
sbb
stos
imul
lods
int
mov
xchg
cmps
xchg
ins
mov
jg
stos
inc
push
int
pop
test
imul
sar
cmp
loop
sar
add
imul
(bad)
enter
or
mov
add
in
sbb
imul
dec
scas
jmp
jecxz
cs
fsubr
jno
push
out
dec
test
loopne
mov
enter
fadd
pop
add
jne
mov
mov
mov
aas
loope
ret
and
sbb
imul
jbe
in
jmp
xchg
xchg
pop
jg
and
fucom
mov
repnz
call
js
cmp
ret
or
jae
xchg
out
dec
retf
call
jl
loope
xchg
and
and
outs
(bad)
pop
aam
aam
and
movs
fcmovnu
addr16
xchg
fld
cmp
adc
cmp
ds
aad
data16
popa
retf
add
cmp
mov
mov
cmp
ficomp
fld
cld
lock
push
test
add
mov
scas
jbe
test
xor
sbb
pop
ret
test
sbb
fild
in
xor
add
xchg
repz
mov
mov
mov
fisub
inc
test
out
hlt
fimul
rcr
test
mov
xchg
(bad)
es
lds
dec
add
aaa
mov
stos
shl
icebp
cmp
xchg
ror
js
pop
(bad)
int
mov
xor
arpl
xor
aam
rol
inc
(bad)
int
sbb
retf
and
in
xchg
dec
xchg
sub
jge
outs
adc
inc
sub
lock
or
sbb
sub
scas
in
out
xor
sub
inc
mov
(bad)
hlt
pop
arpl
push
data16
pop
and
in
dec
cli
mov
xor
push
xor
bound
je
and
pop
sub
int
pop
xor
lods
repnz
and
(bad)
xor
cdq
icebp
or
xchg
xchg
dec
(bad)
xchg
in
repnz
push
sbb
loope
inc
pop
icebp
ret
mov
fiadd
cwde
clc
fst
push
or
xor
data16
leave
popa
nop
xor
retf
xchg
ss
sbb
stos
xchg
rol
out
pop
and
arpl
daa
lods
scas
xchg
int
jbe
jno
test
outs
mov
jge
imul
dec
add
call
sbb
inc
sbb
test
mov
rcr
stos
push
loope
data16
lods
imul
xchg
out
add
pop
(bad)
call
ficomp
lea
jbe
lahf
jmp
leave
sbb
clc
cmps
and
ffree
(bad)
jb
sub
push
cmp
sar
fist
fsubr
cwde
daa
leave
jle
cmp
push
retf
dec
lahf
xchg
sbb
xchg
sbb
mov
popf
mov
mov
push
outs
repnz
pop
adc
adc
(bad)
jge
clc
add
mov
xchg
lods
mov
xchg
mov
cmp
repnz
mov
test
cmp
xor
sbb
inc
adc
rol
pop
add
sbb
pop
ds
mov
dec
jbe
(bad)
sub
imul
add
out
repnz
daa
jmp
inc
ficomp
(bad)
mov
and
sbb
jbe
and
add
stc
pop
scas
push
shl
(bad)
dec
js
mov
dec
push
aad
cmp
ret
retf
jae
outs
xchg
mov
in
mov
lahf
daa
xor
mov
or
cmp
loop
mov
(bad)
shl
pop
test
das
push
dec
test
xor
ret
add
ins
out
add
ss
leave
or
xor
cdq
inc
dec
out
add
es
int
inc
enter
cmp
jne
das
cmp
pop
outs
and
push
imul
pop
adc
ins
cmps
cwde
(bad)
call
pushf
fsubr
xchg
(bad)
loop
pop
mov
ret
setae
mov
pop
xor
jecxz
mov
cmp
or
sbb
shr
cmp
dec
imul
jnp
mov
and
popa
cmps
mov
cs
sbb
outs
inc
popf
mov
lea
dec
cmp
imul
retf
cmp
xchg
add
pop
out
inc
cdq
xor
adc
imul
inc
aaa
(bad)
ins
mov
outs
ss
arpl
xchg
dec
jg
xchg
(bad)
iret
sar
stc
stc
cli
mov
sbb
(bad)
jnp
jae
mov
jns
movs
push
push
ds
leave
sub
rcr
in
mov
mov
mov
or
gs
cmp
cmp
cli
lahf
mov
sahf
and
inc
fldcw
dec
imul
xchg
leave
push
ds
mov
xor
inc
stos
and
(bad)
xor
sbb
loop
mov
sub
mov
pop
loope
pop
add
pop
lea
jae
out
ins
dec
les
add
repnz
xlat
jp
icebp
mov
(bad)
leave
mov
fwait
add
pop
push
imul
pop
js
jl
retf
aaa
repnz
ret
test
movs
std
xor
inc
mov
lds
vunpckhps
inc
and
(bad)
xchg
adc
pusha
shl
jno
(bad)
dec
and
lock
or
push
fs
outs
or
in
push
adc
xchg
mov
retf
jno
jge
inc
jb
jle
and
scas
fmul
jns
pop
nop
bound
pop
ret
(bad)
shr
xchg
xor
jnp
(bad)
and
inc
mov
sub
jg
or
jg
mov
jo
mov
loopne
sub
pop
fwait
sar
fcomp
mov
pop
push
xor
inc
jno
jge
push
loope
push
loope
dec
mov
inc
daa
ins
scas
imul
and
push
(bad)
in
jmp
scas
icebp
push
mov
frstor
retf
pop
add
pop
fidivr
outs
inc
fst
hlt
repz
retf
outs
stc
cmp
sbb
out
in
scas
aam
push
inc
pusha
xchg
or
rol
pop
pop
push
sub
sub
cmp
or
jae
or
in
add
mov
out
mov
cmp
fisttp
mov
test
sub
test
jno
enter
jb
ss
fst
mov
aas
and
xchg
mov
mov
mov
das
jo
dec
outs
cwde
pop
sbb
sbb
loope
pop
xchg
in
mov
xchg
mov
out
mov
mov
sbb
xchg
div
push
or
fwait
sub
xor
(bad)
push
cmp
cmp
and
bswap
outs
nop
mov
retf
leave
jae
mov
push
(bad)
(bad)
rol
lea
cmp
push
inc
js
push
dec
mov
aaa
imul
popf
sbb
nop
popf
mov
mov
(bad)
mov
mov
cmp
aas
icebp
mov
movs
addr16
int3
and
(bad)
shl
sahf
ss
dec
xchg
leave
jmp
jno
pop
xlat
mov
stos
imul
lock
shr
sbb
jmp
or
and
lahf
jmp
sbb
lea
pop
xlat
mov
gs
je
or
(bad)
int
lods
mov
movs
cmp
sbb
fimul
pop
ja
neg
leave
xchg
dec
or
jae
ins
xchg
inc
inc
in
stc
or
pushf
div
inc
lds
fcomip
cmp
inc
arpl
jmp
add
mov
xchg
movs
pop
push
stos
dec
xor
add
movs
mov
or
ins
pop
stc
mov
or
push
pop
cs
(bad)
popf
xor
ret
xchg
ins
ins
clc
movs
xor
cmp
pop
mov
mov
add
loopne
loopne
ficom
shl
xchg
lock
cld
das
xor
pop
xor
and
mov
push
loope
pop
mov
(bad)
cdq
in
ins
adc
pmulhw
call
sub
xor
aas
in
scas
mov
xchg
ins
adc
gs
lea
xchg
mov
cs
mov
pop
popf
scas
dec
(bad)
pop
jns
repnz
fidiv
ror
xchg
inc
xor
in
sbb
aas
mov
mov
outs
arpl
jno
jmp
js
ins
pop
dec
mov
std
mov
push
inc
pop
pop
jns
add
sbb
jmp
and
arpl
test
sbb
movs
sub
mov
(bad)
enter
(bad)
in
and
mov
ror
jo
out
imul
imul
jl
push
aad
(bad)
std
xchg
int
les
xchg
pop
or
fs
or
shl
jmp
and
push
adc
sbb
hlt
inc
jne
movs
enter
aaa
(bad)
mov
jmp
xchg
test
xchg
add
inc
xor
loop
xchg
pop
lds
cmps
xchg
mov
(bad)
cmp
xchg
inc
mov
adc
pop
jbe
jle
iret
xchg
inc
rol
dec
sbb
pop
cmp
imul
push
mov
nop
popf
adc
and
cwde
add
push
cwde
and
and
add
shl
add
xchg
outs
pop
mov
add
repz
(bad)
mov
push
out
mov
cmc
sbb
sbb
in
dec
sub
addr16
ins
lods
adc
adc
or
daa
rol
shl
int3
popf
mov
xor
mov
pop
mov
mov
sbb
pop
pushf
adc
movs
imul
jns
imul
pop
in
mov
pop
or
inc
cwde
neg
imul
int
bnd
and
(bad)
leave
sub
repnz
shl
pop
push
ror
out
sub
test
adc
test
imul
jg
cmc
ds
mov
fwait
idiv
xor
mov
outs
es
(bad)
sub
popa
mov
mov
cmp
fmul
fdivr
jno
fcom
inc
lods
popa
sbb
pop
cmc
sub
adc
jo
mov
enter
pop
cmp
xchg
dec
(bad)
adc
js
cmp
pop
test
or
inc
retf
add
or
adc
test
adc
scas
(bad)
cdq
cwde
repnz
or
lea
retf
xlat
ss
das
frstor
push
dec
cli
mov
adc
add
test
adc
test
adc
add
inc
add
inc
add
mov
adc
cmp
mov
and
test
add
test
add
test
adc
dec
inc
add
movs
or
sub
and
cwde
xor
and
xchg
ss
and
add
push
inc
pop
push
movs
out
(bad)
scas
js
shl
xchg
push
add
cmp
sub
repz
dec
cmc
dec
add
and
push
and
inc
or
test
ficom
xor
dec
(bad)
jne
inc
mov
sbb
or
pop
cmp
jb
inc
mov
pusha
mov
sub
cli
pushf
dec
fsubr
or
or
movs
and
add
or
nop
add
inc
pop
mov
and
test
adc
or
push
test
adc
test
adc
arpl
jbe
test
popf
xchg
fsub
jp
fsubr
mov
(bad)
push
ja
retf
aam
pop
xchg
cs
in
jmp
shl
jb
inc
mov
test
mov
mov
add
mov
and
cmps
inc
ins
fdiv
or
adc
cwde
leave
imul
imul
adc
mov
add
cmps
(bad)
fwait
loope
imul
cmp
div
xchg
mov
frstor
ret
(bad)
in
scas
xor
fsubr
mov
dec
mov
call
mov
cmp
out
movs
inc
jae
jbe
or
and
in
fisttp
fstp
mov
xor
push
push
out
fistp
jnp
pop
pop
loope
sub
in
imul
mov
nop
clc
retf
sbb
adc
lods
inc
aad
in
xor
lahf
add
sub
scas
xchg
test
sbb
dec
sbb
nop
pop
adc
jbe
mov
pop
sub
xor
les
out
iret
xor
pop
jle
jmp
xchg
dec
cmp
ret
clc
cld
das
push
int
sbb
sahf
jl
mov
add
mov
mov
imul
shl
xor
xchg
cs
cmps
cs
adc
retf
daa
xchg
cmp
push
outs
loope
add
fadd
add
inc
dec
ret
ss
iret
xchg
ror
aam
fldenv
ins
jns
iret
xchg
inc
pop
dec
cmps
cmp
retf
pop
jne
mov
xor
mov
jge
imul
enter
jb
fist
xlat
xchg
inc
adc
ror
dec
retf
es
jne
mov
and
mov
mov
push
in
iret
enter
mov
sbb
mov
pavgb
pushf
not
repnz
jp
fnstenv
sti
cs
cmp
push
jp
adc
fisubr
jp
pop
and
mov
mov
cld
sub
ret
and
(bad)
outs
imul
push
xor
xor
push
sbb
xchg
gs
mov
enter
lahf
repz
push
sbb
cmc
jo
xchg
(bad)
stc
popa
cmps
push
shr
dec
jne
int3
add
xor
lods
(bad)
fs
imul
sbb
mov
xchg
(bad)
rol
inc
jno
and
xchg
ss
ja
cmp
jae
mov
xchg
xchg
push
neg
(bad)
and
adc
xchg
test
retf
mov
clc
push
out
mov
inc
dec
cmc
xor
cmp
push
sub
call
pop
fisttp
jno
pop
mov
jae
out
jns
adc
fwait
es
cs
push
sub
and
push
js
jae
mov
cmp
sub
push
adc
xor
xchg
push
push
fyl2x
sbb
int3
stos
enterw
add
mov
xchg
push
in
(bad)
mov
sub
inc
and
aaa
outs
fcmovnb
push
mov
dec
xor
sbb
call
std
sbb
enter
mov
jb
jne
mov
daa
loope
mov
mov
mov
repz
stos
xor
leave
cdq
nop
es
iret
or
mov
and
icebp
sbb
pusha
xor
in
int
xchg
sbb
addr16
jmp
out
push
xchg
pop
aam
neg
jnp
cld
inc
loop
push
clc
shl
scas
xchg
jnp
iret
loope
loop
add
dec
adc
inc
ins
jb
xlat
mov
arpl
add
inc
pop
es
dec
pushf
jno
imul
pop
pop
cmp
xchg
in
adc
xchg
es
jecxz
or
xlat
imul
int
js
(bad)
jmp
mov
mov
sub
push
jmp
or
dec
lods
cli
sub
rcl
sub
sbb
call
cmp
mov
call
imul
mov
ret
xor
sub
jae
inc
call
sbb
stos
sub
into
sbb
mov
call
pop
ins
cmp
aad
mov
int
(bad)
stos
push
dec
dec
mov
shl
mov
cmp
xchg
dec
imul
imul
mov
xchg
and
adc
mov
inc
sub
lods
cmp
popf
imul
or
xor
jno
stc
call
mov
add
xlat
stos
int3
push
fsub
test
out
sahf
hlt
adc
jb
cmps
out
xchg
sbb
daa
xchg
lock
dec
jecxz
jle
dec
outs
cmc
pop
jo
aas
cmp
out
mov
addr16
repnz
int
stc
jns
call
jae
mov
pop
jnp
std
ds
push
xor
ror
fld
add
sbb
sbb
pop
clc
mov
dec
xor
stos
pop
mov
xor
enter
popf
cmps
xor
sbb
xchg
dec
adc
xor
rol
cld
jg
cmc
sbb
aas
pop
cmps
dec
cdq
ds
jno
(bad)
loopne
cwde
pop
push
clc
pop
fcomp
not
dec
adc
mov
fldenv
mov
stos
int
mov
jmp
(bad)
movs
inc
cmp
dec
loope
push
mov
and
xor
int3
xor
fidivr
mov
das
iret
xchg
mov
push
mov
iret
or
sbb
cmp
cmp
ret
xor
fst
aam
into
jle
(bad)
inc
sbb
(bad)
push
sub
sar
mov
mov
xchg
sbb
call
ins
push
dec
push
sub
pop
xchg
xchg
std
repnz
mov
push
les
dec
mov
mov
sbb
popf
popf
sub
or
fmulp
lods
mov
pop
test
shl
lods
lods
cdq
in
aam
xchg
xchg
ss
cmp
imul
cmp
enter
mov
test
data16
adc
(bad)
lock
xchg
pop
dec
xchg
dec
jmp
out
mov
jmp
pop
sahf
pop
cli
cmps
cmp
loope
fcom
mov
jmp
pushf
pop
sub
push
popf
mov
jne
dec
push
adc
fwait
(bad)
xor
cmp
retf
mov
sub
(bad)
xor
xor
ds
leave
fsubr
cmc
(bad)
jmp
ss
lea
mov
lea
daa
(bad)
loop
dec
mov
mov
jp
mov
lods
mov
dec
out
mov
mov
push
xchg
xlat
jmp
xlat
enter
jmp
div
pusha
mov
push
enter
mov
pop
add
aad
out
mov
or
loopne
lock
sbb
xor
jp
mov
or
mov
pop
adc
cmp
push
gs
hlt
cmc
stc
repnz
add
cmps
push
mov
jle
fisttp
adc
outs
ss
xchg
outs
imul
xor
sbb
cdq
inc
push
cmp
neg
lds
cwde
(bad)
rol
gs
leave
(bad)
push
stos
sbb
out
test
das
jns
mov
pop
xchg
int3
call
dec
fwait
pop
outs
jmp
fmul
inc
aad
imul
int
mov
sub
mov
rcr
jle
call
or
mov
neg
push
sar
add
shl
mov
mov
pop
mov
lahf
or
dec
add
and
cmp
mov
jne
mov
sbb
icebp
mov
xchg
retf
jno
pop
rol
retf
mov
lock
int3
cwde
ins
and
je
mov
pop
repnz
or
fcmovu
mov
sbb
idiv
in
leave
lea
add
repnz
ss
inc
test
xor
and
push
and
xchg
jae
mov
iret
push
cmp
jge
imul
lods
(bad)
sub
xor
xchg
or
or
movs
es
inc
mov
in
inc
test
scas
sub
idiv
pop
in
mov
add
in
mov
enter
popf
(bad)
not
pop
mov
das
outs
mov
mov
fdivr
aaa
retf
in
jge
push
or
in
fbld
mov
jmp
retf
xchg
ror
xor
cmps
xor
push
mov
xchg
in
pop
xchg
push
ret
xchg
leave
ror
fisubr
(bad)
fwait
pop
xchg
jl
mov
and
out
fldcw
outs
aas
jmp
add
jnp
push
(bad)
xor
mov
and
mov
cmps
popf
cdq
les
stc
cmp
outs
aas
int
mov
push
retf
movs
mov
addr16
lea
hlt
mov
mov
lods
mov
cmp
mov
mov
add
jb
pop
lea
(bad)
fsubr
lock
sbb
hlt
xlat
fnsave
jl
cmps
dec
adc
inc
inc
mov
nop
pop
cmp
pushf
jae
jb
add
int3
pushf
inc
fist
adc
push
push
mov
mov
pop
es
cdq
ds
cs
ret
sub
sti
scas
mov
jns
push
pop
xchg
xchg
xchg
in
xor
add
sub
shl
jle
fs
aam
lahf
push
call
pop
adc
cmp
dec
and
xchg
(bad)
das
lods
scas
es
jae
cmp
ja
(bad)
inc
and
fidivr
add
out
sub
lds
pop
lea
enter
mov
sub
pusha
mov
sbb
shl
pushf
cmp
cmp
mov
in
in
pop
sbb
(bad)
cmps
daa
pop
push
pop
jnp
push
imul
cdq
loope
cwde
daa
(bad)
leave
xchg
sub
stc
fs
xchg
push
xor
xchg
cmps
gs
lahf
mov
out
arpl
sub
mov
pop
jp
mov
pushf
push
or
lock
arpl
jno
out
or
push
dec
movs
fdivr
(bad)
fild
iret
dec
inc
neg
mov
(bad)
pusha
push
jl
shl
retf
pop
out
dec
mov
sub
sar
jmp
sub
ds
xor
sbb
push
test
je
xor
aad
pop
aam
adc
mov
mov
in
dec
dec
xchg
clc
jecxz
ret
mov
inc
sbb
inc
cmp
test
movs
inc
call
xor
and
mov
push
push
and
mov
into
xor
imul
or
inc
jecxz
sti
popa
xor
lea
ja
push
cmp
rol
mov
pop
jge
ret
retf
fs
ins
sahf
inc
and
(bad)
mov
(bad)
jae
aam
xor
std
(bad)
(bad)
arpl
sbb
jb
push
dec
lods
pusha
fcmovnbe
mov
dec
xchg
mov
jnp
test
lahf
inc
imul
dec
dec
xchg
(bad)
sar
pop
sub
push
mov
nop
dec
into
inc
mov
jle
outs
push
or
jp
pop
retf
mov
pushf
in
outs
or
jecxz
inc
and
xchg
(bad)
push
push
xchg
jo
add
icebp
mov
add
add
mul
pusha
mov
sub
ins
arpl
popf
mov
and
xchg
in
mov
fld
mov
addr16
ds
push
arpl
cli
dec
in
dec
cdq
push
es
leave
pusha
sub
push
pop
push
dec
popa
mov
xor
or
mov
mov
dec
push
dec
repz
fcomp
rcr
sbb
inc
push
cmps
mov
(bad)
loope
inc
imul
push
pop
cmp
adc
xor
jae
pop
outs
fnstsw
not
popa
data16
or
mov
cs
scas
daa
movups
repz
cmp
clc
sub
cmp
xchg
jae
jnp
xor
(bad)
push
in
(bad)
rol
movs
jg
dec
pop
dec
in
lahf
add
aaa
cmp
mov
outs
cmp
jne
or
in
mov
cdq
cmp
loop
fsubr
ins
jns
dec
es
imul
mov
call
pop
stos
pusha
loopne
shl
(bad)
mov
lods
or
xchg
ins
xchg
fld
add
(bad)
retf
mov
loopne
dec
sar
mov
adc
sbb
popa
mov
pusha
movs
xlat
inc
sub
out
adc
sti
mov
movs
int3
jo
jo
in
inc
data16
(bad)
popf
lods
cmp
push
dec
add
cmp
jae
dec
pop
loope
out
ret
pusha
inc
jne
xor
gs
mov
sub
sbb
div
pop
xor
(bad)
in
cmp
dec
outs
mov
sub
adc
call
cmp
jg
sbb
outs
pop
adc
or
gs
pop
jge
in
add
xchg
stc
pop
in
mov
fld
and
xchg
inc
hlt
push
or
loope
xor
inc
addr16
inc
sbb
cmc
adc
(bad)
in
(bad)
shl
les
mov
xor
fwait
push
jbe
adc
fldcw
bound
lods
jae
arpl
imul
int
je
jbe
cs
xor
push
jno
cmc
pop
mov
pop
pop
or
push
sub
fnstenv
add
or
pop
or
(bad)
repnz
imul
lahf
mov
cmp
cmp
fstp
push
mov
inc
lahf
dec
or
loope
xor
push
lahf
and
in
into
aam
movs
and
jne
arpl
xchg
cmp
sub
or
retf
(bad)
(bad)
(bad)
lods
test
loopne
leave
je
ret
add
fldenv
and
(bad)
out
sahf
loope
push
shl
je
cld
in
mov
(bad)
adc
push
push
fimul
mov
(bad)
pop
fbstp
mov
leave
ins
ins
xchg
mov
std
push
mov
sub
jo
fcomp
ja
leave
sbb
jns
push
fidivr
push
leave
out
mov
fstp
push
inc
ret
mov
js
les
push
daa
(bad)
xchg
and
imul
or
call
outs
std
xchg
pminsw
or
mov
or
nop
ret
ja
mul
xor
push
(bad)
and
jbe
push
cmp
fist
lock
loope
aam
xchg
inc
(bad)
cmps
shl
aaa
sahf
aaa
push
fist
stos
fucomp
jl
arpl
sub
(bad)
icebp
sbb
mov
loope
fsubr
inc
xor
(bad)
test
cmp
dec
(bad)
cmps
popa
clc
or
add
xchg
(bad)
push
mov
imul
addr16
ret
pop
push
xor
and
test
mov
push
pop
(bad)
jns
ds
xor
mov
ja
push
nop
jg
repz
mov
inc
dec
cmp
inc
(bad)
(bad)
and
shl
scas
mul
mov
jp
fidivr
pop
or
push
scas
inc
or
mov
jl
aad
out
sub
mov
pop
and
mov
jne
es
repz
nop
and
sahf
sbb
pushf
cwde
loopne
fimul
cmp
sbb
mov
icebp
fnsetpm(287
and
or
cmp
outs
je
scas
repnz
out
xchg
add
jg
das
das
test
ins
aam
pusha
jmp
movs
call
cmp
cmpxchg
sub
inc
sub
leave
pop
adc
add
movs
sub
cmp
mov
ins
call
outs
or
pop
stc
and
clc
pop
test
xor
in
jl
cmp
xor
cmp
loope
inc
and
and
(bad)
push
sbb
inc
add
call
add
mov
mov
imul
test
or
and
jb
push
rcl
(bad)
cmc
movs
adc
dec
and
inc
push
push
cmp
dec
mov
jmp
xchg
gs
repnz
shl
ins
mov
cmp
adc
je
mov
and
out
and
test
pop
or
call
cdq
adc
cmp
and
dec
xchg
fnstenv
sbb
test
dec
jo
and
test
adc
test
adc
test
adc
add
inc
add
inc
add
inc
add
dec
add
rol
push
aaa
mov
sti
sub
mov
js
test
inc
iret
xor
mov
xchg
or
ret
enter
inc
add
inc
add
inc
add
aaa
cmp
ret
stos
scas
stos
mov
sbb
adc
inc
outs
pop
jmp
xchg
test
adc
push
adc
and
inc
and
add
inc
popa
add
cmp
inc
xlat
retf
dec
push
rcl
in
xchg
das
jno
ins
lock
mov
push
ret
jns
push
pop
inc
cmps
and
aad
cmp
dec
lock
(bad)
sub
int3
jmp
js
(bad)
or
add
lea
mov
fld
inc
push
adc
cmp
cmp
dec
and
sub
les
mov
adc
and
add
or
or
or
sub
mov
adc
in
xchg
fs
add
inc
add
inc
add
movs
and
test
adc
or
push
mov
dec
push
xchg
push
cmps
test
mov
or
or
nop
test
sub
adc
xor
and
or
inc
adc
mov
jnp
pop
sub
inc
add
jne
pushf
inc
adc
iret
xchg
shr
push
and
add
in
mov
repz
jmp
cmp
pushf
shr
inc
mov
mov
jecxz
sub
dec
adc
repnz
outs
push
out
enter
cmp
(bad)
test
movs
aas
xchg
adc
or
add
jne
dec
stos
push
push
sahf
or
sahf
xor
jo
loopne
mov
jl
xchg
cmp
xchg
sub
mov
sub
mov
push
sub
popa
arpl
loop
push
test
mov
stos
mov
shl
xor
or
int
mov
arpl
add
out
mov
push
fs
dec
jecxz
lea
sub
aad
sub
(bad)
fs
arpl
cld
cmp
add
das
fst
ja
mov
les
fimul
jne
mov
adc
scas
leave
sbb
dec
test
pushf
mov
ret
adc
fistp
test
stc
and
pop
sbb
fnsave
jl
and
int
push
add
das
dec
push
push
lahf
xchg
pop
(bad)
xchg
lock
fsub
ret
inc
imul
int
xor
jmp
ret
out
fidivr
jecxz
pop
test
sbb
imul
call
icebp
cmc
outs
jmp
arpl
arpl
repnz
repnz
or
pop
repz
ss
dec
fcomp
dec
xchg
add
(bad)
jmp
outs
mov
adc
std
add
adc
out
pop
(bad)
mov
jne
retf
xchg
sub
push
inc
popa
daa
mov
test
mov
add
mov
push
jnp
js
out
push
movs
dec
scas
xchg
cs
push
movs
in
(bad)
mov
enter
loope
jae
and
movs
jbe
and
je
jnp
adc
push
dec
xor
fsubr
pop
sti
sub
cmp
cmps
or
loope
test
into
out
push
and
jmp
mov
les
mov
mov
mov
scas
call
and
test
cmp
push
mov
cmps
rdmsr
bound
push
lea
call
push
xchg
aas
adc
repz
(bad)
xchg
iret
mov
jns
gs
outs
dec
ja
sbb
mov
stos
daa
sahf
das
sub
popa
or
in
xchg
repz
sub
jmp
xchg
rol
retf
push
repz
xchg
xchg
repnz
pop
ss
mov
out
je
adc
fiadd
mov
imul
jecxz
mov
fild
(bad)
cmps
pop
dec
nop
mov
pop
add
out
push
push
mov
out
add
ds
xchg
pusha
aam
lock
adc
mov
repz
fwait
sbb
lods
xor
xchg
adc
ss
retf
cwde
inc
sbb
(bad)
and
inc
xchg
loope
lds
mov
sbb
test
clc
xlat
test
mov
push
push
mov
(bad)
(bad)
add
mov
cmps
and
in
sub
test
mov
test
jp
mov
je
enter
leave
sub
gs
nop
dec
(bad)
inc
mov
add
mov
lahf
mul
pushf
or
xor
retf
fnsetpm(287
mov
add
sti
lods
add
leave
ss
retf
push
sbb
add
cmc
inc
inc
stos
dec
sub
cmp
popf
int
sub
push
push
repnz
push
inc
sub
mov
mov
mov
jns
jnp
ja
sbb
dec
dec
daa
jne
stos
mov
adc
jo
adc
xor
mov
push
and
mov
xlat
movs
xchg
inc
loopne
ins
outs
in
add
cmp
adc
cmp
aad
jnp
repz
pop
mov
mov
adc
xchg
mov
sub
inc
cmp
imul
xor
cmp
outs
sbb
xchg
mov
fstp
mov
imul
add
mov
dec
mov
je
fidivr
movs
pop
stos
imul
neg
xchg
int3
jbe
mov
popf
sbb
imul
push
inc
ret
sbb
int
and
jno
mov
fs
das
mov
(bad)
pop
scas
pop
push
mov
sub
dec
mov
jmp
adc
test
pushf
add
sub
mov
cld
cld
(bad)
cmp
jg
loop
gs
jb
fistp
(bad)
js
retf
imul
dec
(bad)
arpl
test
inc
(bad)
jp
inc
std
xor
adc
mov
mov
inc
shl
mul
push
into
jae
jno
sbb
push
sub
mov
retf
imul
lar
retf
cmp
std
add
out
lds
out
adc
cld
stos
xor
inc
sub
ins
cli
call
into
jns
push
xchg
pop
xchg
jecxz
in
lods
loope
retf
rcl
clc
xlat
(bad)
mov
mov
push
mov
xchg
arpl
and
mov
sbb
cmp
repnz
(bad)
aam
xchg
jecxz
push
(bad)
fsubr
and
pop
push
xchg
inc
pop
out
xchg
enter
fs
cli
cmps
xchg
stos
mov
(bad)
clc
in
ret
mov
inc
xchg
cwde
sbb
clc
imul
dec
adc
pop
fs
aad
scas
repz
mov
out
or
fcom
jne
in
dec
cmp
std
sub
sbb
or
ins
pop
pushf
mov
(bad)
(bad)
gs
sbb
cmp
es
inc
mov
rol
leave
aam
(bad)
cmps
adc
fdivr
pushf
scas
popf
js
jno
jmp
dec
xchg
mov
ficom
repz
xchg
cdq
cli
fst
pop
adc
(bad)
sbb
mov
mov
cmps
mov
xor
inc
xchg
iret
push
lods
hlt
add
imul
retf
aas
retf
jae
cmp
scas
adc
push
add
mov
ins
push
jno
retf
jmp
pop
(bad)
aas
outs
maxps
inc
outs
ja
loop
sahf
jnp
sahf
dec
add
xchg
and
mov
mov
jmp
inc
cmc
adc
ins
adc
fadd
sbb
cld
and
xchg
push
or
scas
push
jmp
xlat
cmp
or
xchg
into
mov
inc
jb
lahf
xor
jmp
xchg
pop
cs
xchg
jo
cs
sahf
shl
pushw
call
mov
sahf
cmp
and
call
xor
arpl
mov
mov
in
aaa
imul
and
mov
inc
and
sbb
js
jle
xchg
iret
aad
stos
pop
retf
mov
mov
popf
dec
sub
mov
ror
movs
fs
sbb
push
mov
test
jae
cmp
retf
push
dec
jae
bnd
fs
sar
(bad)
retf
adc
scas
outs
rcr
not
dec
jns
cmp
adc
mov
ja
xor
jmp
ins
fwait
(bad)
jbe
jl
pop
pop
jmp
mov
fidivr
stos
mov
xchg
pop
jnp
pop
dec
and
adc
push
(bad)
out
jmp
jae
add
pushf
sbb
out
dec
sti
sub
inc
and
(bad)
outs
gs
(bad)
sar
outs
sbb
fwait
inc
adc
in
outs
push
mov
xor
jb
xor
in
inc
adc
or
push
ss
mov
test
pop
aad
int
gs
loop
aam
cmp
jo
(bad)
ror
sbb
cmp
(bad)
sbb
stc
ins
jo
in
xlat
and
fistp
xor
retf
add
cld
and
sbb
push
dec
lods
xlat
mov
mov
inc
sub
call
hlt
in
lds
fwait
mov
mov
(bad)
adc
(bad)
hlt
add
loop
mov
js
retf
push
sub
push
cmp
(bad)
out
mov
or
add
cmp
or
mov
sub
loope
imul
mov
add
rcr
jae
or
shl
mov
cmps
adc
and
(bad)
jle
sub
mov
xchg
push
cmp
cld
clc
in
sub
mov
ds
and
add
sbb
mov
cs
mov
adc
fistp
pop
dec
sub
and
cmp
iret
sbb
cmps
add
fwait
int
hlt
scas
xchg
dec
xor
jp
sbb
sbb
mov
imul
sti
aad
mov
fnstcw
pop
xchg
mov
outs
add
xchg
popf
cs
mov
vpmulhw
or
adc
cli
cmp
das
imul
push
adc
scas
xchg
jle
bound
punpcklbw
mov
cmc
sahf
push
rol
xchg
imul
mov
xchg
repz
mov
out
test
cld
shl
nop
push
sar
in
enter
inc
dec
jo
mov
hlt
adc
push
(bad)
imul
push
cmp
push
sti
scas
mov
pop
cli
mov
inc
int
inc
sub
push
adc
cld
test
inc
fcomp
pop
std
xchg
cmps
(bad)
movs
xor
pop
sbb
sub
cmps
in
outs
cmp
push
mov
dec
stc
and
lea
call
dec
mov
add
cmp
sar
mov
push
cwde
out
dec
push
retf
outs
cs
push
inc
sub
int3
xchg
jo
pop
pop
nop
push
jno
(bad)
mov
push
inc
sub
inc
stos
retf
(bad)
jbe
iret
enter
iret
(bad)
adc
dec
(bad)
sbb
mov
push
mov
mov
and
add
adc
stos
imul
fnstenv
enter
js
dec
sbb
gs
and
xor
fiadd
(bad)
jmp
xchg
scas
imul
out
retf
xchg
sbb
inc
rcr
and
fdivr
repnz
jp
sbb
and
sbb
(bad)
fld
in
push
xchg
sbb
pop
cmp
sbb
pop
jecxz
jae
fsub
xlat
int3
adc
mov
aam
fnstsw
xor
jb
jl
inc
sbb
xchg
(bad)
(bad)
test
leave
jmp
mov
data16
mov
cmp
mov
xor
repz
aas
fst
adc
jnp
jle
mov
lods
mov
jmp
jmp
std
inc
sub
cmp
leave
les
push
arpl
cmps
mov
fimul
ficomp
ud1
out
dec
xchg
test
xchg
sub
(bad)
outs
fsub
inc
add
cs
lea
into
iret
aam
mov
(bad)
jl
xor
fbld
hlt
xchg
jmp
ret
mov
mov
dec
fsubr
hlt
nop
stc
cmps
leave
xchg
pop
pop
adc
xor
out
pop
mov
pop
(bad)
fnstenv
mov
mov
sub
mov
mov
mov
fsubr
scas
daa
mov
enter
sub
xchg
mov
sbb
add
pop
pop
or
push
sbb
push
pushf
inc
cmp
out
dec
dec
jmp
dec
adc
mov
and
stc
xchg
sbb
adc
pop
pop
or
call
cmps
xchg
mov
int3
push
sahf
in
call
xchg
out
sub
push
fsub
cwde
gs
and
jne
shl
and
lock
and
mov
and
add
and
adc
out
sbb
mov
mov
stc
out
cmp
pop
mov
movs
jle
outs
pusha
imul
cs
fsubr
stc
and
mov
mov
dec
cdq
ins
xor
mov
jmp
test
mov
mov
ja
mov
mov
(bad)
cld
(bad)
lahf
gs
push
jno
test
cmp
mov
push
dec
movs
lds
mov
sbb
xchg
and
lds
arpl
aas
sub
shl
add
fcomp
sub
xor
(bad)
outs
push
xchg
ror
xor
out
sub
xchg
lods
mov
scas
punpckhdq
pop
pop
pop
stos
mov
cdq
and
xor
cli
mov
aaa
xor
rcl
push
mov
mov
into
push
fild
loop
and
jae
es
leave
out
cmps
sar
pop
mov
aas
jne
scas
ss
xchg
into
mov
mov
mov
pushf
dec
(bad)
xor
(bad)
pop
aas
dec
icebp
sti
adc
mov
mov
pushf
xchg
add
clc
push
cmp
sbb
dec
lea
sbb
call
je
lock
outs
daa
push
cmp
inc
xchg
sti
add
push
(bad)
jae
xchg
push
int3
inc
leave
mov
xor
inc
out
mov
jg
inc
sar
out
cmp
mov
sub
mov
adc
push
push
loope
movs
(bad)
int
mov
hlt
xchg
mov
stc
push
pop
inc
js
repnz
sbb
cmp
jg
ret
cmp
jo
sbb
push
fcomip
cmps
pop
in
push
dec
ret
rcr
repz
xchg
lea
nop
jg
sub
nop
sub
mov
xor
mov
jmp
int
daa
leave
retf
mov
loopne
mov
or
and
fadd
pop
in
out
lds
jbe
ins
mov
pop
data16
ja
mov
dec
repnz
inc
fimul
lds
dec
push
xchg
leave
pop
aas
or
jecxz
sub
(bad)
fisttp
(bad)
std
xchg
aad
xor
xor
pusha
repz
sbb
out
pop
clc
sub
or
and
fisttp
add
adc
sbb
jl
mov
inc
jg
rcr
xchg
int
mov
fs
loope
jbe
cmp
pusha
jnp
aad
jne
mov
repz
(bad)
xor
mov
add
inc
pop
jmp
xchg
pop
scas
ret
pusha
ds
sbb
mov
cli
cs
and
xor
mov
sar
pop
sbb
aam
arpl
pop
mov
sub
mov
shl
mov
dec
xchg
and
adc
or
pcmpgtw
outs
lds
lahf
inc
jno
jno
pcmpeqw
mov
lahf
adc
xor
dec
jmp
cmp
test
dec
and
in
jae
clc
repnz
in
test
xor
sbb
dec
pop
add
and
mov
xor
xor
xchg
lock
jbe
fsubr
nop
pminsw
add
ret
fwait
inc
mov
dec
aad
jl
ins
imul
inc
mov
lahf
mov
mov
pop
add
(bad)
pop
inc
and
bound
and
hlt
lahf
ret
fwait
pop
cmp
scas
mov
test
cwde
in
pop
(bad)
cld
sub
in
sub
and
in
fst
cmp
adc
ds
or
dec
popf
into
mov
push
mov
not
sub
outs
mov
adc
and
inc
movs
dec
out
xchg
xchg
mov
add
xchg
out
(bad)
adc
test
or
cld
xlat
jo
imul
mov
into
sbb
imul
adc
or
(bad)
cmps
iret
add
mov
and
or
(bad)
sahf
inc
pop
int
and
scas
shl
imul
mov
(bad)
mov
xor
jle
mov
fisttp
adc
push
push
mov
repnz
or
ror
sub
sbb
jge
loope
adc
test
adc
test
adc
test
loop
mov
ins
jno
add
or
add
dec
mov
push
push
je
jnp
pop
loop
jp
jp
mov
and
inc
div
jecxz
call
jmp
cmp
dec
ss
mov
add
inc
adc
and
add
or
or
sbb
or
or
xor
add
jbe
adc
sub
movs
ds
jmp
adc
inc
in
add
dec
and
jp
ror
mov
cmps
xor
xchg
dec
(bad)
fwait
jmp
sbb
popa
add
add
dec
dec
out
stc
push
sti
mov
add
test
adc
or
inc
add
jmp
dec
sub
jnp
adc
enter
inc
and
inc
and
inc
and
inc
and
inc
pop
adc
add
mov
push
inc
adc
inc
adc
inc
adc
movs
movs
js
and
or
sub
or
or
or
or
or
or
sub
arpl
xchg
push
mov
cwde
clc
pop
xchg
enter
sbb
sub
pop
clc
pop
pushf
sub
mov
mov
inc
pop
popf
sub
(bad)
cli
pop
jle
mov
dec
adc
shl
mov
and
xor
xchg
sbb
call
pop
jne
sbb
pop
ja
ret
mov
push
(bad)
cli
sub
das
aam
retf
cmp
out
out
push
pop
fstp
adc
xor
dec
cmp
push
outs
xchg
stos
out
dec
or
je
test
add
add
int
push
xchg
cmp
outs
xlat
push
sahf
dec
xor
int3
pop
xchg
dec
sub
fld
retf
pop
fcomp
stos
adc
test
add
pop
mov
ss
dec
test
adc
add
inc
mov
mov
aad
dec
and
add
repnz
mov
(bad)
push
pop
std
cmp
mov
pop
mov
loop
aas
jne
shl
lahf
and
lods
test
pushw
push
jo
sbb
push
ret
sbb
add
packsswb
lock
repz
or
aaa
dec
adc
jno
loop
add
xor
loop
popa
clc
neg
sbb
retf
leave
hlt
(bad)
pop
shl
addr16
add
fwait
rcl
in
je
fild
jbe
(bad)
jmp
mov
in
push
sbb
xchg
push
xor
push
(bad)
test
pop
push
scas
jns
fst
mov
xor
push
je
mov
adc
jnp
jns
lods
scas
leave
jno
adc
xchg
shr
shl
push
daa
test
adc
pop
test
fisttp
push
popa
mov
dec
test
jecxz
sub
popf
shl
ja
jo
outs
and
dec
pop
repz
sahf
xchg
aam
retf
sbb
jae
sbb
je
out
lods
cmp
in
jne
lock
mov
in
adc
sbb
sbb
retf
mov
mov
inc
(bad)
pop
sub
jnp
aaa
dec
mov
or
fnstenv
xchg
xchg
loope
sub
mov
sbb
xchg
add
mov
inc
cmc
add
xchg
iret
retf
fnsave
mov
(bad)
push
and
iret
pop
loope
pop
jecxz
gs
scas
pop
dec
test
push
push
cmps
pop
fs
jle
stos
movs
pushf
ja
mov
jg
adc
xchg
add
mov
ins
jo
pop
sbb
outs
sbb
pop
inc
aaa
lock
mov
rcr
ins
jl
(bad)
adc
mov
pop
sar
jae
push
jns
pop
pop
out
mov
mov
mov
lods
retf
mov
cmp
push
imul
icebp
inc
xchg
cmps
and
mov
int3
push
enter
cmp
add
jecxz
cmp
dec
icebp
mov
(bad)
pop
sub
add
lods
add
add
adc
mov
xlat
in
jns
cmp
sub
mov
js
push
into
mov
stos
sti
fimul
xor
fisubr
es
cmp
mov
dec
fucomp
inc
loope
in
jmp
gs
lods
sbb
mov
jg
imul
arpl
dec
aaa
ins
mov
daa
xchg
out
jle
mov
int3
or
adc
jae
scas
adc
ja
mov
pop
fcmovbe
gs
retf
jns
jne
test
xor
enter
cmp
ds
cmp
lods
cs
and
lods
cld
outs
hlt
lea
jnp
je
xchg
mov
cld
fwait
pop
ins
sub
cmp
push
or
mov
outs
jo
lods
sbb
ret
jbe
sbb
je
mov
jl
div
aas
pusha
imul
mov
sti
jno
dec
std
sub
and
popf
movs
lock
out
inc
fild
fdiv
sub
js
loopne
pop
xor
(bad)
(bad)
inc
enter
pop
in
shr
dec
ret
pop
pop
cmp
inc
out
iret
add
popa
push
sub
xor
dec
push
mov
add
nop
adc
jmp
or
ins
outs
cmc
adc
aad
xchg
mov
mov
fbstp
out
out
stc
cdq
mov
push
jae
xor
dec
mov
xor
stc
xchg
pop
push
dec
sub
imul
jo
bound
out
mov
mov
fs
push
sub
(bad)
and
jnp
xchg
sbb
aas
push
xchg
sbb
sbb
fld
movs
fdivr
cmp
mov
mov
cmp
jae
pop
inc
fsubr
xchg
movs
cmp
aas
pusha
jle
je
mov
clc
jg
and
xchg
cmp
fadd
retf
push
cmp
jnp
pop
mov
(bad)
fisub
aad
dec
adc
and
aad
pushf
icebp
xchg
retf
fcmovnbe
loopne
bound
adc
xor
cmp
add
loopne
gs
rcr
sbb
sbb
sbb
push
add
inc
and
stc
inc
sub
shl
sub
(bad)
sbb
inc
(bad)
xor
sbb
imul
or
xchg
mov
test
sbb
mov
in
or
cmc
mov
jmp
jb
mov
inc
jae
mov
sti
test
cwde
fst
icebp
push
inc
mov
daa
xchg
push
enter
and
and
std
inc
rcr
mov
test
int3
(bad)
sbb
dec
shl
xor
arpl
aas
hlt
rcr
mov
dec
sub
popf
cmps
movs
test
(bad)
xor
mov
fisttp
movs
daa
sbb
pop
cmps
dec
add
jno
arpl
sbb
out
pop
pop
(bad)
xchg
or
je
sub
jmp
cmps
jge
sti
xchg
inc
mov
cmp
add
jnp
out
pop
in
int3
lea
repnz
movs
(bad)
das
mov
cmps
mov
sti
xchg
or
ja
push
or
dec
inc
rcl
mov
and
xor
sbb
and
int3
fsubrp
push
adc
add
add
mov
and
mov
mov
push
push
arpl
dec
arpl
push
enter
add
mov
or
mov
enter
(bad)
es
nop
sbb
daa
fstp
sar
popf
mov
int3
in
jl
mov
fcmovu
fwait
ret
pop
sbb
sub
add
sub
mov
lods
xor
and
retf
and
push
jnp
dec
ins
fistp
xchg
jecxz
hlt
int3
repz
cmp
ja
shr
xchg
scas
mov
and
jmp
sub
movs
(bad)
js
je
dec
sub
mov
jnp
je
arpl
int
cmp
cmp
mov
jae
test
stc
sbb
popf
loop
push
jmp
ds
in
loop
fisub
fsubr
dec
dec
bnd
push
sub
jae
cmp
leave
ss
(bad)
ds
dec
and
xchg
dec
ins
and
outs
cwde
out
xor
cdq
aad
lods
jb
arpl
xchg
cmp
(bad)
or
fdivrp
aad
sub
dec
mov
cmp
fcomp
retf
mov
arpl
fmul
jae
in
cmp
xor
into
jl
jb
call
jno
sub
(bad)
mov
(bad)
and
mov
(bad)
ins
jb
je
pop
test
mov
imul
add
int
lahf
dec
dec
adc
lea
fadd
aaa
fsubr
xchg
(bad)
iret
or
in
test
ins
cmp
jmp
jle
pop
in
mov
cmp
dec
lods
dec
das
enter
and
jbe
mov
icebp
(bad)
mov
cmp
dec
fisubr
jo
movs
xchg
fisttp
or
and
(bad)
test
sti
sub
and
pop
jns
sub
leave
int3
fst
(bad)
rol
sbb
sub
repz
inc
in
test
sbb
lock
mov
iret
sbb
xor
lea
mov
imul
fild
fucomi
jge
mov
mov
inc
and
add
int
lahf
loop
test
and
repnz
xor
dec
dec
mov
pop
add
fucom
xchg
push
inc
lock
pop
fstp
inc
and
cmp
mov
cmps
push
ds
pop
fiadd
and
fistp
cs
xlat
popf
lods
imul
xchg
cwde
jmp
inc
sbb
mov
add
leave
(bad)
in
fnstcw
push
leave
addr16
pop
sub
xor
mov
mov
dec
(bad)
push
(bad)
test
and
pop
stc
setp
jo
lea
or
jbe
mov
pop
pop
rcr
jno
outs
cmps
out
and
push
addr16
pop
xlat
add
and
outs
xlat
inc
push
aam
jmp
scas
cmps
jne
outs
jmp
pop
cmp
leave
es
ss
(bad)
(bad)
arpl
pop
push
int3
(bad)
xchg
fs
cmp
out
(bad)
xchg
call
icebp
inc
je
in
test
shr
adc
popf
mov
sbb
pushf
in
popa
sbb
stc
sub
ss
lock
xor
jl
sub
(bad)
int3
js
mov
repz
enter
mov
fwait
jb
cmp
jmp
enter
fdivp
pop
cli
mov
sbb
push
fnstsw
rol
in
xor
out
fs
imul
sub
cmp
ja
jg
neg
mov
adc
clc
fsub
mov
mov
jge
cmp
inc
xchg
lea
(bad)
std
(bad)
in
shl
into
or
fdiv
ss
gs
adc
add
mov
mov
mov
mov
push
jle
scas
xor
daa
aam
popf
mov
pop
sub
mov
mov
cmp
in
mov
jl
out
leave
(bad)
jbe
mov
stc
bound
std
sbb
sbb
shl
arpl
aaa
mov
push
cld
das
dec
loope
push
addr16
sahf
fwait
imul
icebp
and
js
and
xchg
jno
mov
ret
jp
mov
sar
outs
imul
mov
or
xchg
sub
sbb
cmps
int3
sbb
popf
push
push
aam
or
sbb
in
cmp
loop
xor
xor
jl
push
dec
das
mov
pop
sbb
ins
push
es
push
icebp
mov
dec
jg
xlat
mov
pop
or
(bad)
cmp
xor
xchg
inc
push
(bad)
lock
cmp
js
xor
inc
inc
inc
lock
pop
out
aaa
push
add
repnz
dec
sbb
pop
sbb
movs
cdq
scas
xchg
(bad)
dec
dec
outs
scas
aad
bound
push
stc
aad
or
je
xor
or
jg
push
jbe
rcl
pop
rol
sbb
push
(bad)
fs
and
packssdw
popf
(bad)
pop
scas
mov
push
ss
inc
xchg
sub
call
shl
out
(bad)
in
sbb
iret
das
jo
push
(bad)
daa
repnz
lahf
cld
sbb
add
push
imul
mov
and
mov
test
sti
scas
jae
jl
add
add
mov
mov
loop
retf
aaa
mov
(bad)
dec
std
pop
xchg
int
aaa
xor
cmp
jo
push
hlt
mov
icebp
fst
test
std
mov
loop
or
jo
pop
cdq
jecxz
and
fucom
jae
hlt
lods
repnz
retf
mov
sbb
sar
outs
mov
mov
adc
xor
adc
sbb
div
jecxz
jecxz
xchg
fsub
mov
bsr
loopne
dec
fcomp
dec
fnstenv
xchg
test
jg
mov
repz
fld
or
xor
out
dec
cmp
xor
popf
xor
retf
and
xchg
inc
or
popf
ror
sti
lods
mov
pushf
sbb
ins
mov
push
cmp
fcom
xor
or
inc
fwait
xor
push
movs
pop
jnp
sub
xchg
sti
lods
ret
sbb
call
es
mov
dec
cmp
imul
(bad)
popa
(bad)
jmp
dec
push
xor
pop
les
jmp
xlat
inc
sbb
pop
fwait
pop
les
mov
inc
in
leave
inc
dec
stc
pop
add
lds
mov
xlat
ror
push
imul
or
inc
fnstsw
cld
and
idiv
es
sbb
call
sar
jg
or
cld
mov
dec
mov
xchg
mov
ds
lock
clc
mov
popa
into
repnz
lods
push
fdivr
add
cmp
bound
ins
push
add
aaa
push
mov
icebp
out
jns
xchg
xlat
out
out
stos
xchg
(bad)
in
jo
rcr
xchg
pop
arpl
sub
call
sub
(bad)
jg
clc
sub
imul
ja
mov
call
ret
loop
push
mov
js
sub
popf
pop
aad
test
fnstenv
dec
jnp
sti
or
mov
arpl
inc
bound
imul
out
sbb
dec
imul
daa
sti
scas
mov
in
test
mov
xchg
sub
dec
jo
mov
sbb
(bad)
pop
xchg
(bad)
aaa
xchg
call
mov
rcr
mov
scas
sub
dec
inc
xor
xchg
cmps
cmp
push
lock
push
shl
aaa
outs
and
xchg
int
fwait
ins
inc
cli
inc
mov
lods
jle
pop
ss
stc
push
sub
mov
lods
push
cmp
gs
(bad)
mov
sar
cli
adc
pushf
dec
popa
not
xchg
or
mov
xor
cwde
iret
mov
sbb
add
xchg
scas
cmc
dec
(bad)
mov
sub
sbb
add
xor
mov
sbb
jg
(bad)
adc
(bad)
sar
add
mov
dec
(bad)
xchg
(bad)
xor
xchg
loope
add
sbb
leave
je
loop
cmp
stc
mov
scas
movs
jmp
xchg
into
shl
mov
lahf
int
or
mov
not
add
(bad)
xchg
loope
imul
out
xchg
sub
movs
nop
xchg
push
test
stos
push
xchg
mov
push
mov
xchg
inc
and
ss
push
add
push
ret
stc
dec
and
push
js
and
sbb
push
push
push
inc
jbe
jne
int
inc
xchg
or
cld
les
out
jne
adc
hlt
mov
jl
dec
fstp
xchg
mov
aam
push
and
rcl
push
dec
cdq
leave
imul
fidivr
sbb
pop
cmp
push
jl
(bad)
xchg
pop
or
and
and
test
add
add
nop
js
inc
and
inc
and
inc
and
inc
and
inc
and
loop
dec
add
test
add
adc
inc
adc
inc
adc
inc
adc
inc
sub
test
xchg
or
and
adc
outs
and
mov
dec
nop
xor
inc
dec
sbb
sbb
cmps
in
xchg
loopne
cwde
sub
fwait
jmp
jp
cwde
call
adc
rol
push
retf
xor
or
mov
pop
and
nop
jp
test
in
aad
xor
push
dec
in
lock
stos
rcl
test
ss
inc
or
shr
mov
and
test
adc
dec
or
or
scas
push
inc
push
jecxz
jmp
or
or
or
push
test
pushf
xor
cwde
loop
stos
dec
in
(bad)
add
add
add
xor
cmp
test
sbb
add
and
test
adc
adc
xor
inc
cs
xchg
mov
and
cwde
add
mov
jl
ss
add
cld
push
popa
xor
push
mov
mov
cmp
jo
lock
mov
push
add
imul
mov
inc
mov
inc
cmp
loop
outs
inc
fsubrp
les
xchg
push
cdq
es
sbb
mov
dec
jne
cli
mov
mov
dec
and
loop
push
add
out
std
add
sub
sub
loop
xchg
mov
or
add
sbb
dec
(bad)
outs
xor
jnp
xor
outs
scas
mov
(bad)
retf
inc
inc
out
mov
mov
dec
mov
loop
imul
xchg
inc
fst
(bad)
scas
and
ss
fstp
push
push
cmps
(bad)
fist
lock
ret
mov
in
adc
pop
jb
jmp
(bad)
dec
dec
setns
cmp
out
push
ss
cmp
push
stos
(bad)
pop
cld
leave
add
pop
cmp
out
test
mov
aaa
shl
outs
je
pop
scas
in
lock
sar
popa
cdq
lods
gs
test
cmp
mov
out
pop
ss
add
sub
int3
xchg
pop
movs
shr
mov
inc
push
leave
xchg
int
jb
mov
aam
imul
push
in
xor
push
fsubrp
sub
call
shl
fdivr
test
pop
mov
add
inc
fidivr
adc
xchg
adc
stos
and
mov
push
push
xchg
ret
imul
add
jo
sahf
and
icebp
ss
aaa
clc
mov
sub
mov
push
nop
mov
mov
or
test
fnstsw
lahf
mov
fdiv
sub
or
mov
sub
arpl
mov
sbb
addr16
cmp
shl
jge
inc
jne
call
scas
pop
int
aas
cmp
cmp
jg
sbb
loop
gs
adc
xchg
sub
adc
fidivr
add
sbb
int3
jo
jmp
mov
jb
outs
imul
ss
stos
stos
ror
in
inc
lods
scas
cmp
sbb
popf
daa
daa
in
test
sub
jno
jecxz
add
hlt
jno
loope
push
(bad)
xchg
sub
inc
push
sahf
add
push
jo
push
mov
stos
inc
jno
inc
mov
inc
push
add
cwde
out
nop
mov
sub
cmp
lods
lods
jno
and
mov
ins
mov
cmp
lods
jge
mov
cmps
imul
mov
dec
jl
(bad)
xor
ds
subps
mov
or
call
sbb
mov
dec
in
mov
pop
pop
jo
out
clc
dec
dec
outs
inc
stc
push
mov
(bad)
das
in
pusha
mov
aad
inc
pop
add
or
rcl
scas
es
xchg
mov
shl
push
push
ror
jle
lahf
or
mov
push
dec
jg
and
dec
sub
data16
or
imul
pop
inc
dec
and
arpl
scas
mov
aas
push
jle
pop
out
jecxz
jne
shl
mov
stos
cmp
bound
or
dec
jno
xchg
fsub
xchg
cmc
add
or
(bad)
div
retf
mov
rol
xchg
outs
mov
rcl
push
dec
sub
xchg
cmp
cli
push
jmp
pop
mov
(bad)
(bad)
and
sub
jmp
xlat
xchg
ret
xchg
out
test
iret
mov
movs
mov
sub
test
outs
test
inc
dec
ds
fistp
or
retf
arpl
enter
add
jge
and
or
jo
adc
pop
rol
sub
loop
sbb
sbb
fstp
mov
je
xor
outs
add
mov
movs
mov
inc
xchg
xchg
or
inc
or
adc
cmc
xor
rcl
xor
mov
inc
outs
cmc
je
xchg
fstp
not
fnstenv
aaa
imul
push
call
adc
(bad)
movs
pop
dec
pushf
sbb
test
fild
mov
je
pop
mov
je
lock
fistp
je
dec
jmp
mov
add
xor
ds
ds
stos
add
icebp
or
in
xchg
int
xchg
retf
xchg
mov
iret
jl
dec
and
cmp
ret
mov
inc
push
mov
mov
cwde
jecxz
test
push
sbb
add
sbb
pushf
inc
mov
mov
or
inc
xor
rcl
xchg
inc
mov
(bad)
pop
out
outs
lahf
mov
jae
cmp
inc
push
pop
(bad)
mov
add
mov
inc
inc
xor
shl
arpl
jmp
aas
xchg
ins
jmp
jmp
int3
out
inc
push
(bad)
xchg
cmp
pop
mov
or
cmp
push
(bad)
sar
cmp
mov
cs
cmp
mov
retf
movs
jno
xor
in
dec
ds
jmp
arpl
dec
lods
mov
stc
pop
mov
cmps
xor
jecxz
sbb
push
xor
mov
cmc
or
dec
add
cmp
loop
jnp
mov
outs
leave
fstp
xchg
nop
data16
or
dec
cmp
mov
cmp
imul
outs
ret
pop
xor
push
mov
and
cmp
mov
xlat
pop
xchg
popa
add
loope
ret
xchg
cld
mov
enter
scas
xchg
data16
test
stos
and
jb
cmp
aaa
mov
sti
stos
mov
lds
dec
mov
sbb
jnp
inc
shl
out
jne
stos
hlt
push
and
hlt
lea
inc
sbb
dec
xchg
xchg
sub
and
scas
and
xor
jecxz
jns
(bad)
jnp
outs
pop
outs
jmp
adc
pop
popa
rcr
movs
enter
push
stc
pop
inc
call
int3
ret
mov
repz
dec
ins
fisttp
adc
out
dec
loope
mov
test
(bad)
imul
shl
cmps
dec
popf
pop
xchg
dec
and
jbe
out
mov
ins
dec
or
je
ins
loopne
lods
bound
jnp
adc
and
aas
sub
(bad)
rcl
add
add
loopne
sbb
ins
dec
imul
fistp
shl
sbb
sub
or
ja
add
ret
mov
int
lahf
jae
pop
loop
mov
add
jl
mov
adc
in
shl
jne
hlt
inc
or
dec
test
lock
add
out
jmp
push
popa
retf
iret
es
jo
fld
sbb
xchg
(bad)
call
cmp
pop
mov
push
out
mov
jecxz
jns
je
mov
push
cli
jo
pop
fwait
pop
cwde
fbstp
retf
jmp
out
mov
add
aad
fcmove
cwde
jo
jmp
in
or
sti
stos
iret
xchg
cmps
pop
and
fnstenv
or
sbb
xlat
fcom
or
fsubr
jno
(bad)
mov
loop
sbb
push
inc
inc
call
shr
jl
fsubrp
outs
sub
dec
retf
pop
loopne
sbb
rcr
iret
xor
sbb
shr
fdiv
jnp
cdq
mov
pop
xchg
dec
or
mov
xor
mov
imul
dec
repnz
call
repnz
jno
inc
lds
or
lea
leave
xor
cmc
sub
xchg
mov
aaa
fnsave
rol
xor
mov
int
mov
mov
(bad)
in
mov
adc
retf
jmp
sbb
cmp
retf
gs
(bad)
(bad)
jb
sbb
icebp
push
inc
push
pop
cmp
and
ss
es
outs
pop
idiv
xchg
inc
das
clc
jbe
rol
loope
imul
mov
fiadd
fbld
adc
xlat
adc
sbb
or
xor
push
mov
clc
pop
xchg
vcvttsd2si
add
adc
push
xlat
xchg
(bad)
(bad)
mov
test
xchg
mov
icebp
aad
or
mov
sub
outs
ss
dec
jle
fild
xor
jne
dec
cmp
icebp
gs
cmp
movs
scas
cmp
cmp
sahf
imul
push
cmp
fcom
xchg
xchg
jbe
arpl
cmp
pop
int
int
aas
sub
mov
xchg
mov
ror
mov
int3
fstp
sbb
(bad)
pop
jne
cmp
bound
loopne
sbb
(bad)
mov
ins
mov
push
rol
sbb
arpl
or
daa
bound
cmp
cs
enter
dec
shl
jns
rol
adc
push
push
adc
hlt
add
pop
test
dec
pop
out
repnz
mov
ins
(bad)
je
fcmovbe
ds
or
sub
inc
(bad)
std
ss
pop
mov
or
loopne
push
mov
add
cmc
push
lock
loop
push
push
outs
fwait
pop
ins
cdq
jnp
jno
in
inc
or
mov
div
adc
(bad)
aad
push
cmps
xchg
push
xor
lea
xor
sub
jne
push
pop
icebp
mov
jmp
(bad)
cmp
outs
dec
lods
aad
jl
jg
xchg
pop
pop
push
jle
outs
(bad)
ds
jae
pop
call
cmp
sub
enter
ins
push
sti
test
daa
pop
or
call
ror
outs
and
cdq
inc
inc
cdq
dec
xchg
jmp
fs
lods
jnp
mov
in
ja
fldcw
or
lock
add
fsubr
in
add
(bad)
mov
dec
xchg
aad
je
adc
sbb
dec
aam
(bad)
pop
and
popa
cmp
lods
cmp
leave
mov
rcr
pop
pushf
jnp
xchg
and
sbb
or
push
mov
or
mov
outs
test
hlt
fdivr
arpl
mov
js
leave
test
mov
sub
mov
sti
in
xor
ret
call
cmps
mov
lds
in
pop
dec
(bad)
and
pop
sub
out
ins
cmp
mov
lods
push
xchg
pop
cmp
jns
aam
add
sbb
xor
or
pop
in
xor
sub
dec
int
xchg
push
jb
and
dec
scas
sahf
jmp
(bad)
mov
push
es
jle
lea
and
repnz
cmp
sbb
pop
fmulp
es
or
mov
jmp
sbb
jg
jno
clc
push
jecxz
inc
int3
xchg
shl
test
adc
xor
push
int
ss
shr
(bad)
leave
mov
xor
push
iret
neg
cmp
ror
sbb
arpl
sbb
pusha
add
imul
jno
mov
mov
jg
cmovne
cmps
ss
xchg
and
and
mov
out
mov
in
(bad)
out
addr16
dec
hlt
(bad)
push
leave
xor
call
lods
pop
cmp
dec
and
add
clc
dec
xchg
popf
out
enter
or
mov
aad
fwait
push
shl
cmp
ror
mov
inc
(bad)
xor
(bad)
ins
cdq
dec
ds
dec
jne
mov
aaa
sub
xchg
lods
or
mov
sbb
cmps
xchg
shl
push
xchg
mov
(bad)
int
adc
push
ds
mov
xchg
movs
dec
test
data16
and
int
fs
sbb
add
nop
add
push
jge
cli
ss
xchg
cmps
mov
bound
adc
mov
ins
cdq
pop
shl
dec
and
dec
cdq
lahf
xor
push
pop
dec
xchg
push
cld
sub
loope
fistp
popf
sub
fsub
sbb
push
mov
mov
pop
mov
nop
xor
mov
mov
scas
pop
and
pusha
(bad)
jnp
and
add
push
lds
call
or
dec
popa
or
dec
cs
clc
pop
int3
cdq
fsub
cmovns
cmp
out
daa
in
mov
jbe
mov
mov
fimul
mov
mov
jne
jb
sub
dec
sub
repz
fnstenv
stos
mov
jl
or
shl
pop
bound
repz
das
mov
dec
icebp
leave
loope
in
or
cld
xchg
add
jmp
iret
test
mov
add
and
inc
out
and
ss
inc
repnz
dec
popa
(bad)
xchg
sub
retf
xor
sub
imul
mov
jmp
(bad)
cli
and
xlat
stos
adc
or
mov
sbb
(bad)
push
mov
xchg
test
add
jmp
stc
pop
mov
add
pop
pop
push
leave
sub
sub
xor
repnz
clc
cmp
cmps
inc
int3
in
pop
and
cmps
cmp
bnd
mov
(bad)
popf
(bad)
imul
call
test
xor
(bad)
sub
ror
jo
add
sub
push
retf
jl
test
xor
addr16
and
mov
jmp
pop
cmp
icebp
in
xor
add
jbe
jmp
jmp
mov
mov
(bad)
fistp
and
mov
adc
rol
adc
add
daa
test
mov
das
imul
sub
lahf
cwde
jmp
aaa
sbb
inc
or
gs
pop
xor
mov
repnz
dec
xchg
adc
mov
mul
xor
fcom
cmp
add
cmp
mov
cmps
mov
mov
inc
and
sbb
test
and
test
add
fadd
or
or
or
or
and
add
or
or
or
mov
mov
push
add
inc
or
out
(bad)
imul
xor
es
loop
and
fsubr
inc
leave
and
jge
ins
jo
dec
sbb
adc
xchg
cdq
fcomp
frstor
or
iret
dec
enter
daa
stos
dec
out
call
mov
sub
add
inc
and
in
inc
call
dec
sub
shr
adc
frstor
shr
xchg
add
and
in
dec
sar
or
dec
push
pop
inc
cmp
rcr
dec
dec
outs
out
pop
push
mov
inc
xchg
or
sub
cld
sahf
leave
push
mov
nop
inc
xchg
es
add
test
stos
in
scas
or
or
or
or
or
or
or
or
or
or
push
and
pop
dec
inc
out
shr
test
stos
or
movs
nop
or
or
adc
scas
je
ins
push
pop
xchg
adc
ror
dec
or
test
cmp
mov
(bad)
sbb
xor
fcmovu
inc
es
gs
and
mov
xchg
arpl
mov
sub
mov
xlat
sub
iretw
push
push
ror
test
loopne
imul
out
fwait
shl
(bad)
mov
lock
push
sub
dec
pop
push
lahf
push
xchg
adc
dec
aam
in
sbb
out
retf
sbb
cmp
mov
mov
sub
sti
inc
sub
sahf
push
inc
sbb
sub
ret
mov
xor
mov
add
mov
cwde
dec
pop
cmp
sbb
and
jnp
loope
add
in
xchg
fmul
xchg
in
fwait
push
or
or
mov
(bad)
das
outs
cwde
cli
jns
push
(bad)
ins
out
imul
cmps
dec
xor
and
loop
idiv
shr
pushf
xchg
add
and
mov
pop
aaa
cs
fadd
bswap
repnz
and
mov
sbb
mov
repz
cmp
inc
cmp
test
ins
outs
jmp
fld
sbb
imul
cmovle
push
add
jnp
jnp
push
mov
inc
mov
xchg
dec
sub
xor
pop
xchg
mov
add
xor
test
xor
ja
in
(bad)
sbb
outs
mov
cli
mov
aaa
retf
ins
data16
and
or
jp
mov
mov
call
pop
sbb
not
retf
mov
push
jae
lds
pop
mov
fwait
je
sbb
imul
jmp
je
popa
mov
dec
sub
lods
out
imul
push
ins
jbe
or
outs
xlat
ja
and
fcomp
dec
jae
add
pop
aaa
shr
lahf
mov
mov
dec
cmp
push
xor
je
into
movs
and
stos
mov
test
adc
sbb
jno
xchg
out
(bad)
xchg
lea
fwait
arpl
and
retf
test
lds
push
mov
in
push
cmp
inc
shr
add
cs
xor
mov
xor
pop
xlat
jo
out
cmp
pop
retf
into
xlat
push
xchg
out
dec
inc
pop
dec
mov
movs
outs
xchg
cmps
cmps
add
jns
jo
add
jo
in
jl
sbb
add
and
repnz
out
icebp
in
xchg
jns
dec
mov
js
and
and
sti
lods
ins
pop
add
jecxz
cmp
sbb
dec
xchg
mov
jns
arpl
outs
gs
mov
cld
xchg
push
sbb
loope
std
mov
mov
(bad)
mov
stos
mov
arpl
jmp
mov
xor
int3
pop
cmp
xor
and
push
mov
fs
loopne
sub
lock
cs
lds
push
dec
sub
add
(bad)
jp
enter
add
lock
bound
sub
mov
push
push
jp
adc
(bad)
aam
xor
mov
push
lahf
neg
adc
pop
push
test
inc
out
scas
xchg
sub
mov
xor
cmc
fst
add
ins
adc
and
sbb
inc
les
xor
(bad)
sub
dec
bound
daa
mov
ins
lods
adc
les
lods
xchg
fsubr
push
test
ret
jmp
loope
jg
test
in
out
or
hlt
push
inc
add
pusha
retf
pop
push
(bad)
mov
mov
fcomp
cmp
mov
lahf
sub
ja
shl
mov
stc
jle
cmp
pusha
sub
aam
aad
add
inc
ror
popf
inc
cli
jae
fnstenv
xor
out
ret
cmp
ins
fild
(bad)
push
data16
imul
dec
in
cld
cmc
or
cmc
ins
cmp
call
jno
sti
pop
ins
xchg
mov
fs
sbb
les
mov
(bad)
pop
sti
scas
pop
jle
nop
int3
(bad)
cld
pop
jb
push
(bad)
idiv
xchg
das
imul
xchg
clc
repnz
fstp
lea
jae
fs
movs
mov
ficom
and
sub
add
jg
push
mov
inc
in
(bad)
xor
mov
jecxz
mov
inc
xchg
or
fs
cwde
(bad)
mov
gs
jnp
cmp
inc
sbb
cmp
mov
inc
xlat
ret
mov
fsubr
in
mov
(bad)
push
lods
mov
fmul
repz
fmulp
push
cmc
cmp
pop
pop
push
mov
cmp
std
sti
sub
mov
add
pop
pusha
add
sbb
rcl
adc
je
cmp
mov
mov
inc
xchg
mov
mov
or
mov
sub
sub
jbe
jnp
nop
add
xor
mov
and
xchg
and
mov
jnp
push
fsub
cmp
cmp
jmp
out
pop
stos
outs
sbb
pop
sbb
loop
and
call
add
or
or
jb
imul
nop
ins
inc
rol
iret
mov
cmps
call
fcmovnbe
mov
pop
or
icebp
inc
jbe
cmps
sbb
xor
fninit
mov
int3
out
dec
mov
out
fwait
mov
mov
jo
or
nop
or
call
nop
div
js
rcr
ins
pop
aaa
(bad)
out
leave
out
jmp
shl
mov
fld
jne
or
mov
dec
stos
mov
add
cmps
popa
mov
ss
sbb
or
jno
jmp
xchg
arpl
arpl
dec
movs
and
neg
(bad)
mov
pop
sbb
dec
mov
pop
popf
push
inc
sahf
jp
in
mov
xchg
shl
cmc
cmp
dec
pop
in
(bad)
xchg
add
mov
xchg
xlat
mov
inc
fwait
pop
int
or
cmp
cmp
rol
pop
movs
mov
add
clc
xor
pop
push
std
push
push
dec
mov
loopne
mov
fmul
scas
outs
ds
in
icebp
xchg
mov
ret
inc
pop
cs
ds
loope
mov
movs
out
add
xlat
ins
repnz
in
mov
in
int3
xchg
and
push
scas
in
mov
movs
jmp
cmps
inc
dec
inc
imul
mov
lahf
cmp
mov
sti
stos
xor
aas
sub
(bad)
dec
and
outs
pop
imul
jle
push
xchg
mov
and
(bad)
jmp
cmp
leave
mov
(bad)
(bad)
add
(bad)
ss
inc
pushf
stc
mov
ss
ja
aad
fsubr
sahf
dec
add
aas
push
cmp
mov
frstor
test
xor
dec
sub
dec
mov
loope
xchg
(bad)
(bad)
sbb
inc
push
pop
pop
adc
jnp
(bad)
out
push
jnp
mov
inc
jne
sbb
aam
xchg
inc
(bad)
mov
enter
dec
mov
push
sbb
call
mov
mov
fst
cld
cmp
stos
imul
fstp
sub
fld
dec
or
mov
pop
(bad)
pop
jne
es
mov
rol
(bad)
in
jecxz
mov
or
(bad)
leave
outs
push
pop
repz
retf
cmp
imul
adc
fldenv
push
fistp
ret
dec
xor
push
mov
sub
pop
mov
(bad)
and
imul
(bad)
stc
adc
cmp
sti
jne
mov
aas
mov
gs
call
cmp
push
jge
pop
aaa
out
sub
jb
imul
iret
inc
enter
or
arpl
push
fadd
pushw
rcr
mov
cld
je
push
inc
jo
(bad)
fs
retf
jno
sar
in
(bad)
int
cs
cmp
inc
sbb
aas
outs
push
retf
ret
jp
add
xor
das
and
shl
jmp
nop
std
push
addr16
mov
rol
push
xchg
jnp
sub
lock
aam
xchg
mov
nop
(bad)
xor
sar
mov
psubsb
mov
or
push
rol
lods
(bad)
shl
mov
sub
push
xchg
rcl
je
adc
leave
je
retf
lods
or
mov
jns
mov
in
addr16
cmps
pop
(bad)
jns
jle
lods
inc
push
xor
xchg
inc
bndstx
or
add
out
repnz
push
fwait
add
push
pop
je
aas
and
xor
clc
in
jb
ss
stos
addr16
fisub
dec
sub
add
fidivr
jecxz
mov
dec
xor
pop
and
cli
fld
xchg
cmp
addr16
int3
and
mov
outs
jmp
jbe
or
inc
inc
popa
adc
fcomp
scas
inc
ja
out
push
mov
test
stos
in
pop
ja
fdivr
fcomp
shl
jle
mov
or
movs
shr
ins
inc
dec
arpl
test
xchg
rol
retf
lahf
push
xor
fmul
inc
mov
cdq
mov
jb
(bad)
xchg
sub
inc
gs
scas
mov
jmp
je
cmp
test
mov
jns
dec
leave
(bad)
fistp
shr
int3
shl
fstp
in
mov
push
jae
jb
in
arpl
mov
mov
fsubr
call
sti
arpl
outs
rcl
popa
shl
xchg
pop
ins
test
sub
(bad)
add
shl
repz
das
xchg
sbb
int
xlat
stos
xchg
lahf
sbb
cmp
stc
dec
sar
jb
sbb
or
fisubr
imul
adc
aam
sar
retf
jne
out
fild
cwde
jle
daa
dec
sub
sqrtps
and
stos
dec
xor
jns
dec
(bad)
inc
push
dec
aaa
movs
(bad)
icebp
ret
repz
mov
arpl
add
movs
pop
jmp
cmp
lods
cmp
jmp
xor
sete
mov
je
jo
inc
aaa
pop
mov
sub
cs
jp
xchg
aas
or
inc
gs
daa
xchg
lea
hlt
fimul
mov
jnp
xchg
adc
in
ret
and
int3
xchg
fnstcw
push
loop
into
and
inc
xchg
mov
xor
mov
in
mov
rcr
push
repnz
pop
retf
mov
dec
call
pop
or
jl
imul
popa
adc
fcmovbe
mov
in
nop
xchg
dec
pop
mov
call
neg
int3
push
inc
or
sub
(bad)
cli
stos
cmps
test
adc
in
js
data16
in
int3
je
pop
cmp
pop
push
ins
fwait
xchg
aaa
adc
push
fs
sbb
lods
mov
repz
xchg
inc
push
dec
sbb
mov
fldenv
push
fldcw
add
push
and
dec
idiv
xor
(bad)
in
push
lss
div
fidivr
fs
outs
aam
cmps
sub
mov
jge
dec
setns
pop
mov
mov
test
ret
fsubr
sub
xchg
and
rol
jo
dec
sub
sbb
jecxz
cmps
fidiv
cs
add
rcr
lds
jae
loop
sar
dec
cs
dec
je
hlt
jae
pop
int
xchg
mov
fwait
(bad)
ret
(bad)
mov
jnp
jg
and
inc
(bad)
xor
neg
pop
and
inc
(bad)
xor
fucomip
jno
sti
sahf
mov
inc
xchg
jecxz
ror
add
fisubr
retf
sub
dec
aaa
shr
xchg
arpl
or
and
cmp
mov
dec
sbb
xchg
sahf
imul
ins
test
ins
mov
mov
loope
inc
in
cdq
xor
mov
sbb
inc
pop
jb
loope
in
cmps
ja
and
jmp
inc
dec
mov
jnp
pop
je
adc
arpl
xchg
outs
test
push
out
mov
shr
lahf
sbb
pop
fild
ins
ds
mov
inc
xor
call
lds
push
mov
into
mov
and
lock
jno
cs
fiadd
mov
fs
mov
pop
add
jecxz
dec
jl
jecxz
sub
cmp
mov
iret
xchg
repnz
xchg
lahf
nop
(bad)
dec
fisttp
imul
jp
movs
and
mov
lds
sub
dec
xchg
cmc
(bad)
aas
and
sar
add
sub
jl
loop
and
xchg
les
in
and
fdivrp
add
xchg
in
mov
imul
inc
gs
fs
sbb
cmps
push
inc
sbb
push
sub
and
adc
aaa
mov
fnsave
rol
mov
pop
add
jp
ss
xchg
or
mov
lea
cmc
cmp
gs
int
scas
fdiv
ins
jne
int3
rol
test
sbb
push
fnsave
mov
cmps
xchg
pop
movs
fmul
cs
pop
pusha
sub
fild
push
mov
retf
mov
and
add
lock
outs
xchg
into
sahf
push
data16
fnstsw
pop
lods
xchg
dec
call
mov
xchg
cmps
(bad)
jnp
jns
jno
test
adc
(bad)
sbb
pop
popf
push
sar
test
cdq
pushf
push
push
inc
(bad)
stos
sub
mov
ins
std
sti
(bad)
jne
loope
fxam
cmps
not
xchg
outs
inc
sbb
push
mov
fst
out
cmps
in
shl
cmp
lods
inc
or
icebp
add
cmp
mov
or
push
cwde
shl
fistp
xchg
fstp
js
sti
stos
mov
mov
cmp
jmp
push
or
lahf
jne
aad
inc
dec
push
jns
icebp
dec
mov
add
(bad)
mov
sbb
dec
jb
pop
sub
std
and
push
xor
mov
pop
sbb
pushf
sbb
xchg
cmps
rcr
sub
cmp
repz
mov
arpl
cs
mov
(bad)
mov
fstp
sub
mov
aam
sub
mov
xchg
push
xor
cmp
inc
(bad)
hlt
xor
fdiv
push
popa
fcmovne
cli
cs
jae
xor
ss
arpl
loope
jnp
imul
push
inc
and
add
out
pop
xor
sbb
and
movs
jae
punpckldq
retf
mov
mov
leave
xchg
cdq
and
xchg
cmp
fwait
cs
call
mov
fild
mov
adc
mov
dec
enter
lea
and
enter
out
enter
or
xchg
fstp
in
jmp
adc
fimul
sbb
sar
es
mov
sbb
push
arpl
fstp
jns
loop
jb
and
imul
ss
xor
fistp
jp
lods
jb
xor
jno
das
mov
ja
test
fwait
push
test
lock
mov
fincstp
jp
mov
mov
mov
jl
mov
std
adc
push
fstp
jmp
cmp
xlat
mov
adc
das
sti
es
out
lock
jmp
xchg
fbstp
in
cmp
adc
jnp
pop
data16
repz
frstor
inc
push
test
lods
imul
sti
je
stc
pop
aas
(bad)
icebp
cs
arpl
and
push
movs
and
jnp
pop
repz
fisub
rcr
sbb
xchg
jl
in
mov
adc
fwait
pop
add
push
out
xchg
adc
jnp
pop
or
std
ror
fsub
loopne
out
jmp
imul
dec
dec
je
outs
les
jle
cmp
in
jno
je
mov
push
add
inc
adc
adc
adc
adc
(bad)
aad
retf
and
xchg
push
inc
add
inc
add
inc
add
inc
add
inc
dec
or
movs
push
xchg
adc
inc
adc
inc
adc
inc
adc
mov
mov
mov
enter
mov
or
ds
xchg
adc
add
xor
adc
rcl
xor
xor
sar
test
dec
mov
inc
mov
rol
sbb
adc
dec
inc
(bad)
ds
add
or
or
adc
adc
clc
loope
rol
add
shr
push
or
pop
rol
add
pop
nop
rol
dec
shl
or
dec
jbe
and
inc
and
movs
add
test
adc
test
adc
out
mov
push
test
adc
push
mov
cmp
jo
(bad)
shl
mov
sbb
test
add
sti
pop
add
and
test
add
xchg
mov
les
loopne
mov
sbb
in
je
imul
imul
in
movs
pop
out
and
pushf
jecxz
sub
inc
test
and
inc
inc
xchg
and
adc
test
adc
pop
adc
es
push
nop
dec
add
movs
call
inc
or
rol
jmp
cmc
sub
inc
ins
pop
and
loope
sahf
int3
pushf
cmps
pop
fldl2t
sbb
int
cmps
out
hlt
rcl
mov
iret
es
mov
es
lods
push
pop
push
cmp
push
xlat
stc
lea
ds
jmp
aaa
ror
jmp
lahf
cmp
dec
add
mov
sbb
in
jo
retf
(bad)
(bad)
mov
mov
popa
mov
fisttp
mov
jne
retf
movs
in
xchg
loop
outs
fsubr
jns
mov
adc
jle
add
and
add
push
xor
and
sub
add
push
(bad)
and
sub
push
sar
inc
push
inc
aaa
push
jo
mov
es
sbb
stc
pop
cmp
enter
xor
std
rcr
mov
jno
int3
mov
sbb
mov
mov
adc
mov
out
ja
xor
push
inc
sub
mov
nop
mov
rol
inc
push
fiadd
shr
cmp
cmp
mov
jno
repz
sub
mov
inc
push
inc
cmc
xor
js
mov
add
push
arpl
push
mov
(bad)
sub
adc
xchg
rcl
mov
test
xchg
xor
or
xlat
jne
addr16
mov
js
pop
popa
push
mov
add
loopne
scas
mov
out
outs
ret
in
ret
sbb
mov
push
push
loop
lds
std
ret
lock
jmp
retf
call
pop
cmp
dec
jecxz
ss
mov
jbe
mov
in
out
sar
cmp
dec
es
cmp
fbld
dec
push
add
sar
out
push
or
mov
in
(bad)
pop
inc
xchg
arpl
loopne
jb
pop
imul
dec
push
xor
shl
or
pop
sbb
mov
pop
int
rol
sub
jle
pop
mov
jg
push
xchg
cdq
loopne
jne
fstp
add
mov
(bad)
lahf
sahf
jnp
out
ret
scas
fsubr
inc
or
cdq
xor
adc
jp
imul
jg
enter
adc
pop
pusha
call
fcom
mov
mov
mov
dec
mov
pop
lahf
sbb
repnz
lea
and
and
sbb
xor
(bad)
fsubr
cmp
mov
mov
push
neg
loopne
lods
pop
jge
leave
cdq
ficom
dec
out
dec
retf
or
sbb
and
leave
aam
icebp
icebp
ja
push
xor
or
cmps
js
jb
out
arpl
clc
ins
hlt
or
and
and
pop
lock
add
mov
add
fwait
xchg
xchg
adc
xchg
sub
pop
inc
imul
in
adc
retf
arpl
(bad)
xor
imul
aaa
or
frstor
jle
(bad)
inc
mov
icebp
push
outs
ds
stos
in
inc
lods
lds
neg
inc
addr16
cmps
aad
xor
int
fs
(bad)
(bad)
mov
cdq
sbb
inc
int3
sahf
ins
inc
sbb
rcl
test
inc
cmp
cdq
call
adc
movs
push
mov
inc
xor
shl
rol
xor
jecxz
xchg
(bad)
mul
stc
jl
sbb
or
dec
inc
xchg
xchg
push
jg
mov
nop
dec
xor
mov
dec
or
sbb
lods
jo
push
imul
int3
cmp
inc
pop
xchg
push
jge
daa
xchg
add
arpl
out
cs
je
dec
jo
sub
ja
ins
arpl
or
mov
adc
out
aaa
lods
or
das
xchg
push
imul
mov
mov
test
cmps
xor
sub
nop
pop
lea
mov
and
dec
mov
jne
xlat
sti
jae
dec
rcl
div
cmp
pop
sub
mov
fs
add
adc
mov
xor
pop
fldenv
sbb
ja
jbe
mov
mov
add
cmp
dec
(bad)
pop
cmp
mov
movs
mov
pop
mov
pop
jno
push
jo
aaa
jae
jb
es
mov
not
ror
ins
sbb
and
xchg
sub
outs
shr
sub
and
dec
pop
xchg
(bad)
or
(bad)
pop
xor
popa
test
pop
neg
mov
jnp
mov
push
fstp
jnp
repnz
xor
cdq
mov
cmp
adc
pop
and
outs
jnp
adc
scas
jmp
out
xor
nop
mov
jecxz
jb
xchg
and
mov
std
xchg
dec
sbb
pop
cmp
mov
gs
fisttp
outs
jmp
repz
scas
mov
pop
sub
dec
fadd
pop
push
ret
dec
and
and
lds
jno
push
retf
xchg
and
and
cmc
in
push
dec
stc
pop
mov
lds
inc
sbb
in
fsubrp
xchg
jge
lds
int3
js
jno
xchg
movs
or
mov
sbb
pop
js
add
jae
(bad)
sbb
sbb
pusha
fisub
ss
xor
mov
mov
push
inc
outs
aaa
(bad)
aas
mov
inc
inc
xchg
cmp
movs
add
cwde
(bad)
mov
and
sbb
pop
int3
dec
jbe
ins
hlt
or
jmp
call
fisttp
out
mov
mov
add
into
sbb
sbb
fsub
dec
push
mov
sar
(bad)
xchg
xor
rol
lods
imul
lods
cmc
pop
neg
sar
cdq
ins
call
pop
movs
fnstcw
pop
add
jl
mov
adc
rcl
fstp
and
add
sub
push
in
inc
dec
and
jmp
fsubr
jp
push
loope
adc
stc
das
(bad)
adc
fnsave
and
cmp
out
mov
pop
jg
push
pop
jb
aaa
add
or
inc
inc
iret
retf
mov
(bad)
popa
imul
leave
popa
(bad)
retf
pop
mov
jno
movs
in
push
jecxz
mov
mov
sub
xor
out
ror
fst
fwait
inc
jbe
pop
test
outs
jae
(bad)
in
imul
push
rcl
sub
fldcw
popa
loop
into
xlat
mov
call
shl
add
(bad)
clc
mov
add
xchg
icebp
je
mov
ja
addr16
out
psrld
lea
dec
ds
(bad)
fstp
(bad)
jecxz
icebp
repnz
arpl
aam
repnz
xchg
sbb
pop
dec
jbe
pop
jo
jle
push
int3
push
xor
cmps
push
dec
std
and
adc
and
pop
and
pop
add
add
daa
dec
out
jb
pop
push
sbb
fstp
daa
mov
and
add
cmps
loopne
movs
push
fmul
and
ds
shl
leave
(bad)
icebp
jecxz
xor
fsub
jnp
dec
lea
icebp
jne
pop
outs
and
and
jl
sbb
ficomp
cmp
shl
test
inc
fcomp
or
retf
xor
mov
mov
xchg
inc
dec
shl
aad
add
shl
cmps
mov
scas
cmp
pusha
lods
iret
xchg
je
cdq
test
mov
mov
or
fstp
and
add
and
push
addr16
push
inc
mov
jne
sub
and
int
and
jb
lea
mov
loopne
fcomp
nop
int3
xor
ins
xor
loop
push
cli
ret
cs
dec
in
aas
imul
not
pop
(bad)
and
mov
xchg
mov
jb
push
mov
fld
inc
mov
mov
or
(bad)
cmp
lods
dec
cmp
es
mov
mov
mov
jno
(bad)
xor
jns
add
(bad)
sub
jns
loop
leave
sub
neg
shl
enter
adc
shl
aam
xor
lods
push
sub
ds
mov
outs
fcomp
and
mov
test
pop
dec
lds
push
mov
and
mov
nop
cwde
xor
ss
fcmovne
loop
ror
sub
(bad)
jne
xchg
mov
jmp
aaa
nop
sbb
xchg
cmp
int3
ret
xor
pop
xchg
stc
add
jg
test
xchg
dec
adc
pop
popa
rcr
and
(bad)
or
leave
cmps
pop
xor
pop
pop
bound
iret
lds
retf
mov
sub
cmps
or
ss
xchg
mov
stos
xchg
xchg
adc
js
cmps
xchg
cmp
mov
inc
jne
mov
cmp
xchg
adc
leave
xor
add
or
hlt
(bad)
xor
ins
mov
inc
mov
scas
xchg
xlat
and
xor
inc
sti
lods
mov
les
(bad)
inc
dec
mov
and
cdq
out
pop
inc
or
mov
test
or
imul
push
mov
sub
aas
in
aaa
inc
stos
in
retf
or
mov
cmc
mov
pop
mov
fild
sbb
pop
das
cmp
xchg
popa
in
adc
pushf
add
loope
jecxz
bound
dec
out
ja
sbb
loop
jg
push
movs
fnstsw
ds
inc
mov
mov
pop
jecxz
test
push
xchg
not
xchg
cmp
jb
cmp
sbb
jmp
(bad)
aam
bound
lea
push
leave
hlt
jge
adc
jbe
arpl
dec
fwait
out
(bad)
or
(bad)
jae
dec
in
in
inc
mov
bound
(bad)
in
ror
pop
xor
rcl
out
xchg
fcom
mov
sub
lahf
or
arpl
retf
cmp
pop
inc
int3
je
data16
xchg
sbb
ja
xchg
xor
out
das
sub
fdivr
mov
sbb
dec
sbb
rol
popf
mov
fst
cmp
lods
dec
sub
aas
cmp
push
inc
push
shl
shl
in
test
test
add
dec
jne
scas
xor
(bad)
ficomp
xor
ins
pusha
nop
(bad)
es
mov
or
lds
xlat
push
mov
add
jl
pop
test
test
mov
imul
popf
mov
mov
retf
mov
adc
mov
xor
fwait
add
push
adc
inc
mov
mov
jecxz
push
cmps
lods
data16
je
jns
pop
cmp
mov
mov
cld
xchg
jne
cli
call
or
repnz
jle
sbb
dec
push
int
dec
in
fistp
(bad)
jecxz
push
test
aam
repnz
fmulp
inc
inc
retf
or
or
xchg
adc
jp
lods
mov
inc
das
cmp
mov
sbb
adc
jb
mov
not
mov
ficom
add
imul
dec
jno
inc
or
cmp
and
nop
test
add
int3
and
push
dec
les
retf
sahf
sbb
aas
in
jecxz
sbb
adc
mov
pop
jno
cmps
mov
xor
arpl
jmp
add
(bad)
fadd
and
stos
fsubr
cmp
std
xchg
in
outs
xor
mov
(bad)
out
jae
cmc
in
mov
lds
sbb
out
jbe
cs
repz
mov
jbe
cli
inc
retf
jmp
cmps
scas
fs
inc
in
scas
jmp
pop
pop
jnp
jbe
(bad)
mov
mov
mov
push
adc
out
mov
jno
push
sbb
xor
jl
mov
js
fdiv
jmp
sbb
cld
lods
pop
xchg
xchg
xchg
stc
mov
mov
ret
(bad)
pop
and
and
aad
(bad)
mov
rol
leave
add
aam
stos
jmp
stc
sbb
adc
outs
in
mov
sbb
ret
push
pop
fneni(8087
jl
mov
jle
push
mov
clc
call
jge
cmp
mov
repz
clc
or
jnp
mov
fldcw
shld
stc
pop
test
icebp
push
mov
dec
rcr
add
fstp
int
push
xor
inc
cmps
xchg
dec
ror
movs
xchg
mov
(bad)
loop
in
scas
sbb
cmp
int3
cmp
xor
sahf
call
ret
fldenv
iret
push
cwde
(bad)
and
dec
cmps
xchg
out
sahf
test
lods
enter
jnp
inc
xor
mov
icebp
pop
xlat
cmc
xor
loop
push
lods
dec
leave
sbb
sar
cli
mov
sbb
xchg
loope
lods
ss
fdivr
sbb
inc
fnsave
dec
test
sub
retf
nop
rcl
ss
je
mov
cmps
push
mov
add
neg
adc
imul
sub
(bad)
neg
pop
es
loope
mov
aam
cmp
cmp
xchg
xchg
sbb
ret
mov
mov
sahf
out
push
fucomp
cmp
xor
push
jo
mov
adc
ss
std
inc
xchg
cmp
mov
(bad)
ds
ret
(bad)
sbb
push
ja
arpl
scas
stos
mov
mov
loopne
inc
fscale
retf
call
pop
cmp
pop
mov
add
stos
aam
ret
sub
(bad)
and
test
lock
sbb
retf
pop
iret
dec
fld
dec
scas
and
adc
jmp
jnp
mov
(bad)
or
lock
ficomp
shl
push
imul
stc
popa
icebp
int
lahf
clc
mov
dec
xor
push
ins
stos
loope
add
jp
fisttp
int
mov
ins
xor
ins
ja
inc
je
pusha
sbb
inc
jne
popa
xchg
movs
dec
lea
test
(bad)
dec
xchg
adc
mov
aaa
and
sub
outs
jae
jo
test
mov
cwde
daa
(bad)
js
loope
dec
outs
lods
ja
mov
pop
add
lods
or
jae
jle
into
call
lds
or
scas
test
std
dec
sub
push
repnz
cwde
cmp
pop
fstp
sbb
stc
pop
(bad)
stc
dec
mov
mov
aas
or
scas
mov
rcr
push
and
jg
loope
shl
ja
adc
pop
jno
out
mov
adc
push
cwde
jmp
mov
enter
into
sbb
ret
bound
xor
xchg
and
test
std
pop
ret
adc
pusha
mov
js
dec
fsubr
cmc
std
aas
xor
ins
or
int
idiv
pop
scas
lahf
sbb
mov
imul
push
push
sbb
test
fadd
test
jne
xchg
or
cmp
popa
inc
test
sub
(bad)
pop
mov
add
(bad)
vmread
jmp
loop
loopne
aaa
icebp
(bad)
sti
movs
movs
(bad)
and
fwait
test
push
xor
fnstsw
adc
jp
cmp
mov
scas
cmps
push
sbb
mov
xchg
arpl
mov
add
fld
sar
xchg
movs
ret
and
xlat
in
jne
pop
dec
call
outs
xor
jnp
div
in
mov
jecxz
xor
ret
cmp
or
pop
repnz
push
enter
inc
fsubr
fcom
imul
retf
mov
cld
int3
pop
repz
fdiv
(bad)
cmp
(bad)
call
inc
push
jns
add
je
aas
jne
inc
and
adc
jbe
mov
add
inc
lds
xchg
dec
push
cmp
dec
sbb
fld
add
hlt
lea
cmp
loopne
dec
xchg
ret
inc
jle
(bad)
js
ret
icebp
int
fdivr
push
mov
lock
test
xchg
clc
pop
mov
daa
aas
xor
pop
aam
pop
pop
test
test
bound
pop
mov
inc
lahf
test
adc
out
or
popf
and
cmps
dec
mov
dec
mov
dec
xchg
mov
sub
cmp
imul
scas
adc
in
call
clts
(bad)
icebp
je
ffreep
mov
aam
aas
dec
and
nop
arpl
sub
mov
and
inc
add
inc
or
fwait
pop
pop
loopne
mov
sub
out
shl
retf
pop
repz
cmp
jno
xor
ins
js
(bad)
jne
retf
in
xor
lock
push
dec
inc
adc
test
add
test
add
test
add
sbb
or
fucomip
and
xchg
mov
cdq
ficomp
fldenv
and
pushw
xchg
mov
popf
lahf
test
movs
scas
inc
cmp
cld
pop
in
mov
in
add
clc
add
push
xchg
push
ss
mov
aaa
push
push
add
movs
and
add
adc
adc
inc
adc
inc
push
nop
push
or
dec
jno
and
or
ins
xchg
inc
pop
or
and
and
mov
icebp
dec
imul
imul
add
push
inc
in
dec
fadd
sbb
or
and
in
lods
fimul
inc
imul
loopne
push
xor
cmc
push
xchg
les
rol
call
cmp
and
test
pop
or
add
or
test
adc
or
or
or
adc
mov
lahf
gs
adc
test
adc
or
or
sti
mov
add
ret
test
imul
xchg
sub
aaa
cmp
pop
and
je
mov
cmp
dec
cmp
sub
inc
add
inc
add
inc
je
adc
test
mov
(bad)
sub
(bad)
or
fst
sbb
push
push
pop
jae
mov
imul
dec
push
xor
stc
xchg
loop
repz
adc
fwait
sbb
add
mov
mov
xor
add
div
cmps
test
sbb
pop
jnp
test
and
aam
aas
or
sbb
or
pop
inc
rol
and
test
adc
adc
icebp
inc
call
dec
add
add
and
arpl
test
push
pop
cli
out
jmp
ins
jnp
inc
bound
aad
frstor
ja
pusha
inc
test
cmp
and
out
out
ss
mov
or
sar
leave
fs
or
mov
jno
inc
ror
imul
loopne
sub
inc
xor
inc
(bad)
mov
push
fadd
repz
fldenv
cld
mov
jne
shl
fild
inc
test
push
(bad)
mov
mov
lock
mov
pop
mov
xchg
fs
push
xor
into
call
(bad)
int
push
mov
sbb
push
retf
mov
jnp
mov
fucomp
pop
dec
sbb
cmp
or
push
sub
xchg
pusha
sub
dec
(bad)
repnz
push
shl
add
in
scas
mov
adc
leave
ja
or
dec
jbe
pop
sbb
cmp
jmp
cmc
ss
hlt
clc
stc
addr16
imul
outs
arpl
xchg
xchg
jb
aaa
push
sbb
ret
sub
pop
xor
cmp
xchg
(bad)
push
push
xor
mov
jmp
xchg
cld
test
out
(bad)
mov
sbb
dec
jecxz
push
mov
int
cmps
jo
bound
bound
mov
cld
cmp
xor
cmp
aam
mov
add
adc
(bad)
(bad)
push
cmp
cmp
mov
(bad)
dec
or
out
inc
ret
fcmovb
sub
pop
and
jne
adc
xor
scas
jo
dec
retf
(bad)
rcr
(bad)
xchg
retf
popf
mov
mov
adc
jge
mov
les
std
mov
ja
jae
popf
adc
into
mov
int3
gs
mov
jae
sar
dec
cmp
icebp
or
loope
int3
pusha
gs
jg
cmps
and
jno
push
je
or
and
xor
bound
sbb
inc
lock
jnp
mov
cli
cs
test
mov
xchg
out
cmps
ss
test
inc
addr16
mov
retf
imul
cmp
cmps
adc
ds
push
xchg
pop
cdq
add
cs
sar
or
inc
(bad)
mov
sar
xchg
lea
fisttp
test
jg
fsubr
inc
out
imul
rcl
mov
int
dec
mov
inc
hlt
hlt
inc
aas
outs
sub
loope
fs
es
mov
pop
in
pop
pop
sub
jae
mov
inc
xchg
mov
fs
and
addr16
int3
adc
ret
fwait
mov
xchg
pop
into
ficomp
add
repnz
adc
adc
and
sar
ins
test
js
lahf
test
into
leave
iret
enter
or
mov
test
arpl
mov
popf
stc
jae
xchg
and
mov
int3
int
sti
push
test
repnz
(bad)
dec
xchg
outs
imul
sub
sbb
popa
inc
push
fsubr
and
shl
retf
mov
fstp
mov
xor
sbb
jge
jecxz
mov
shl
aam
jo
retf
lods
dec
nop
repz
shr
inc
imul
mov
neg
lock
aaa
in
adc
sar
xor
fcmovnbe
ret
imul
hlt
shl
out
jae
rcr
jge
add
sbb
js
xchg
inc
pop
inc
jne
push
(bad)
jecxz
(bad)
sub
(bad)
popa
loopne
test
mov
fist
xchg
xchg
pop
cmp
xchg
jmp
ret
shl
sbb
scas
jne
(bad)
cmc
cmp
and
cwde
out
out
aad
(bad)
sbb
jo
(bad)
enter
out
aam
lods
cwde
mov
mov
push
mov
cmp
cld
cmps
mov
xchg
mov
mov
dec
dec
icebp
jmp
repz
jmp
jno
push
int3
xchg
dec
and
inc
sub
(bad)
(bad)
pop
jmp
cs
in
outs
daa
out
mov
repz
js
in
rol
test
mov
push
push
jmp
pop
js
add
shl
push
in
ret
jg
outs
lds
xchg
cwde
add
es
xchg
(bad)
test
pop
ds
enter
retf
movs
add
aas
sbb
pushf
push
mov
lods
lds
scas
jbe
jbe
ss
stc
mov
jmp
loop
sar
push
pop
pop
fnstcw
outs
xchg
push
inc
xchg
sub
inc
(bad)
jne
pop
rol
cdq
mov
jnp
les
adc
in
das
pop
inc
mov
jecxz
xchg
cwde
sti
add
pop
inc
repnz
dec
rcl
inc
outs
loop
cs
jge
cli
scas
popf
xor
sbb
aad
lods
or
clc
push
pushf
inc
ds
inc
mov
iret
ret
dec
xlat
int
jno
cmp
or
adc
sub
ficomp
out
xlat
aaa
icebp
frstor
jmp
lods
push
gs
add
dec
inc
fisubr
daa
jno
push
jl
inc
fiadd
(bad)
jno
(bad)
in
mov
(bad)
fild
scas
sar
add
mov
movs
jbe
xor
cmp
sub
cmp
(bad)
sbb
jle
(bad)
data16
mov
call
shl
sub
in
popf
cmc
(bad)
aad
and
popa
bnd
std
inc
cmp
xchg
dec
inc
loopne
or
lahf
mov
pop
std
addr16
hlt
pop
jae
into
fwait
pop
icebp
add
inc
xlat
dec
sbb
inc
jle
gs
jne
mov
pop
dec
xchg
imul
cmp
cmp
cmp
sar
dec
ins
adc
xchg
div
test
cmp
jnp
jmp
inc
add
xchg
ins
xor
cmp
scas
mov
data16
cmps
mov
cdq
int
xor
adc
rcr
pop
(bad)
aas
sub
les
repnz
jmp
jb
xchg
leave
or
sti
adc
gs
xchg
arpl
jno
jo
jne
in
(bad)
mov
lods
sbb
out
pushf
push
jns
adc
cmp
sub
aas
add
jg
(bad)
cmp
xchg
inc
out
xchg
daa
sub
mov
push
push
mov
sub
xchg
mov
xchg
out
mov
outs
sub
(bad)
movs
mov
sbb
cld
test
out
hlt
aad
mov
fdivr
mov
(bad)
xchg
inc
sbb
mov
xor
jg
test
mov
mov
cmp
dec
nop
(bad)
ds
mov
push
cdq
sbb
shl
jo
ds
mov
in
mov
pusha
adc
push
aam
(bad)
retf
aad
mov
xchg
or
clc
inc
(bad)
enter
and
sahf
inc
pop
test
inc
dec
fbstp
inc
mov
or
add
fmulp
push
inc
(bad)
xchg
and
shl
ja
sub
mov
scas
adc
xchg
in
xchg
cmp
sbb
int3
sbb
xor
idiv
sub
dec
pop
xchg
repnz
pop
xchg
retf
xchg
push
pop
fdivr
mov
stc
sbb
idiv
out
sbb
mov
inc
repnz
add
pop
xor
adc
mov
jmp
mov
xchg
cwde
inc
in
mov
sti
xchg
cmp
fwait
icebp
retf
pop
mov
cmc
or
test
iret
addr16
mov
fsubr
fdivr
xchg
and
push
cmp
push
cmp
call
sbb
stc
dec
jne
cmps
jae
add
cmp
mov
mov
xchg
adc
jmp
jno
inc
fnstsw
xlat
in
(bad)
in
mov
out
cmp
sub
jbe
call
jnp
xchg
ins
xor
pop
sub
loopne
mov
jne
pop
outs
je
xchg
out
leave
rol
loop
inc
xchg
cmp
repnz
cmps
xchg
and
ror
or
add
(bad)
sub
sbb
and
out
sub
mov
xchg
sub
add
xchg
leave
lods
aam
(bad)
mov
aad
js
ficomp
out
fdivp
cmp
outs
call
mov
adc
retf
stos
out
(bad)
ss
ins
pusha
in
movs
lods
vmwrite
(bad)
repz
ds
lds
push
pop
mov
clc
inc
fs
inc
(bad)
ret
jmp
adc
xchg
dec
(bad)
call
cmp
iret
fnsave
mov
fs
test
push
pop
dec
je
fmul
pushf
mov
in
pop
or
imul
sar
cmc
jb
scas
cmps
xor
shl
sbb
fsubr
lahf
or
add
jbe
add
retf
pop
out
sub
sti
adc
je
je
push
dec
es
mov
pushf
ja
idiv
es
dec
cdq
stos
jecxz
sbb
dec
mov
pusha
cmps
dec
dec
mov
cmp
jns
hlt
mov
xchg
scas
sub
outs
es
pop
ds
cmp
fnsave
popf
es
xchg
ja
xchg
outs
mov
cmps
jl
(bad)
pusha
fs
ins
adc
popa
movs
lods
pop
dec
and
mov
mov
xchg
add
std
and
cs
or
pop
clc
fimul
push
xchg
pop
fdivr
push
ins
aam
xor
xlat
out
add
inc
dec
fcmovu
inc
aaa
xchg
int3
jo
pop
cvtdq2ps
es
mov
out
mov
dec
mov
jae
fidivr
jecxz
mov
pushf
int3
jno
js
sbb
int3
sar
cmp
cld
mov
(bad)
xor
dec
inc
push
out
mov
xchg
movs
jmp
and
jp
das
punpcklbw
push
inc
xchg
sub
sbb
in
stos
stc
and
and
leave
or
adc
gs
pop
dec
repz
aad
xchg
jmp
jo
jne
pop
(bad)
mov
and
mov
imul
retf
das
mov
retf
imul
movs
mov
sahf
pop
pcmpgtb
mov
in
xchg
loope
retf
and
lea
add
out
pop
out
ja
cmp
test
mov
inc
fs
cmp
push
sub
sub
(bad)
jl
out
hlt
mov
sbb
imul
fstp
int
ror
mov
loope
pop
jge
stc
pop
arpl
and
loopne
mov
out
pop
and
out
push
sbb
adc
gs
pop
scas
xchg
xchg
fidivr
pop
aam
imul
jae
and
push
jno
in
cmps
mov
mov
lods
pmulhuw
mov
pop
(bad)
jmp
retf
pop
mov
test
outs
imul
cmps
mov
sbb
xlat
jb
pop
push
add
jns
int
pop
lods
int3
scas
mov
mov
jmp
out
fnsave
adc
in
and
and
(bad)
cmp
sbb
adc
add
xor
jmp
jecxz
mov
jmp
sbb
adc
cmps
and
or
inc
or
(bad)
mov
and
pop
clc
cmc
lods
fbstp
loope
test
stos
movs
inc
xor
dec
in
daa
xchg
xor
jl
push
fadd
push
xor
push
cmp
jns
cmp
sbb
lock
cmp
ja
aaa
xchg
mov
sbb
addr16
aad
push
test
(bad)
or
arpl
in
pop
(bad)
pushf
cmps
xor
in
stos
dec
loope
sbb
push
sbb
inc
dec
cmp
pop
div
pop
shl
mov
mov
leave
dec
mov
cmp
xor
scas
push
iret
(bad)
repz
fild
pop
ds
fwait
and
loopne
fistp
aad
xchg
in
jmp
inc
xor
sub
jmp
and
loopne
leave
add
(bad)
pop
mov
pop
(bad)
daa
dec
jg
out
pop
sbb
retf
leave
jae
rcr
ins
fcomip
jge
popa
mov
inc
jmp
dec
dec
retf
xor
out
shl
out
sbb
inc
shl
aam
jge
mov
cwde
int3
shl
arpl
mov
ins
shl
xlat
jle
mov
mov
call
jmp
movs
jmp
cmp
sub
pop
cmp
sub
loope
or
push
dec
int3
(bad)
js
imul
jnp
je
fyl2x
sub
je
arpl
inc
sbb
push
cmp
not
retf
dec
imul
jae
add
mov
scas
loope
mov
ret
ds
cmps
aaa
xchg
mov
sub
xchg
mov
jbe
lods
jmp
jae
mov
sub
int
sbb
add
fnstcw
or
inc
cmps
mov
push
enter
js
jl
retf
mov
or
mov
sub
jge
sub
popa
in
add
(bad)
lock
lea
aas
imul
gs
jno
in
addr16
fsub
neg
hlt
push
mov
and
retf
and
inc
and
jnp
mov
add
xchg
sbb
ficomp
stos
enter
dec
div
mov
loope
sub
mov
clc
xor
mov
out
int3
(bad)
xchg
dec
aas
cmps
inc
mov
fcmovb
jmp
outs
aam
jecxz
stc
xchg
not
xchg
or
pop
push
jmp
(bad)
fwait
jnp
jl
lods
mov
and
or
or
lods
pop
(bad)
fbstp
sub
pusha
jmp
add
fistp
mov
vpshld
mov
sub
or
mov
xor
push
pop
or
jbe
or
imul
jnp
imul
hlt
add
push
jne
push
out
dec
push
sahf
jns
imul
adc
retf
push
retf
mov
sti
sub
inc
sub
int3
xchg
(bad)
sbb
loopne
cmps
inc
shl
(bad)
repnz
and
xlat
neg
ins
mov
ret
fisubr
xor
popf
jae
fisttp
imul
iret
and
sahf
(bad)
mov
or
ins
xchg
push
mov
out
pop
xchg
out
inc
mov
retf
dec
mov
mov
mov
or
shl
outs
mov
push
fwait
sar
std
fidivr
loope
jle
fsub
mov
adc
dec
lea
and
and
sub
push
pop
lds
(bad)
pushf
shr
fild
jno
fldenv
push
inc
jle
mov
jmp
mov
(bad)
jne
jmp
cld
test
add
loopne
mov
pop
mov
(bad)
arpl
mov
mov
pop
retf
out
mov
xlat
push
xchg
(bad)
shl
push
loope
(bad)
cmps
and
hlt
mov
pop
fst
enter
test
jecxz
mov
lods
mov
test
jnp
dec
mov
push
ficomp
lods
adc
fidiv
ffree
mov
mov
pusha
stc
cmp
outs
leave
mov
xchg
rcr
push
inc
pop
imul
mov
mov
cmp
mov
fldenv
(bad)
pop
jp
ss
enter
outs
mov
loop
or
scas
jle
icebp
js
xchg
(bad)
fbstp
sar
loopne
test
ret
sbb
add
in
mov
cmp
adc
pop
xor
inc
cmc
cmp
pop
call
int3
xchg
xchg
sub
inc
pop
pushf
femms
in
sub
(bad)
sbb
push
push
mov
or
push
arpl
cmp
rol
cmc
pop
out
xchg
in
jb
shl
ret
test
jo
mov
sbb
cdq
jl
lods
ins
je
push
or
cdq
sub
addr16
ds
pushf
xor
lea
int
xor
or
out
mov
and
mov
cmp
arpl
push
fcmovb
cmc
sbb
adc
jge
mov
sbb
cmc
out
cld
das
call
xor
sub
mov
loop
xchg
and
add
fisubr
jp
sub
mov
loope
sub
mov
in
repz
ss
mov
test
xchg
imul
imul
jno
icebp
icebp
mov
clc
ja
das
pop
add
pop
cmp
pop
inc
pop
pusha
mov
add
sbb
mov
movs
jmp
pop
dec
daa
xchg
sub
mov
mov
pop
and
pop
dec
nop
sbb
aaa
sbb
push
cdq
stc
sahf
push
js
mov
xor
in
jae
test
pop
les
xchg
sub
push
lods
sbb
(bad)
xor
in
rdmsr
and
mov
cmp
sbb
and
jle
cmp
cwde
fisub
add
jl
fst
bound
je
mov
push
cmp
scas
cmps
loop
push
push
retf
leavew
sbb
arpl
sub
mov
cdq
cmp
push
mov
push
mov
xchg
push
pop
and
inc
and
leave
(bad)
push
aaa
pop
xchg
rcl
movs
call
loopne
gs
enter
mov
jg
cmc
test
popf
xchg
neg
and
xorps
lahf
or
js
cmp
loope
cmp
sbb
cld
icebp
sar
cmp
mov
jmp
sbb
xor
jmp
inc
fimul
and
add
or
dec
fwait
sub
adc
mov
mov
mov
sbb
dec
pushf
mov
cmp
outs
imul
in
dec
pop
fst
(bad)
rol
sub
or
push
jo
lock
nop
test
adc
test
adc
add
aad
cmp
dec
ss
xor
xchg
adc
inc
or
xor
leave
pop
fsub
repz
push
stos
mov
sub
fsub
shr
test
adc
test
adc
out
imul
add
nop
adc
cmp
dec
mov
lds
mov
xchg
push
push
mov
jl
xor
sahf
mov
sbb
loope
jbe
adc
mov
fwait
sub
cmps
or
xor
push
sti
stos
mov
add
push
ret
adc
repnz
loope
mov
repnz
nop
pop
adc
push
xchg
and
or
and
je
mov
sbb
push
fs
in
ds
lods
cs
and
fstp
cmp
cmp
lds
lods
add
adc
or
push
retf
pushf
ss
stc
push
xchg
pushf
je
sbb
push
push
ja
add
or
add
add
dec
dec
xchg
push
movs
push
xor
mov
add
dec
and
or
jle
inc
mov
(bad)
mov
mov
push
fs
inc
mov
mov
jae
xlat
or
inc
adc
adc
adc
movs
test
cmp
or
rol
pop
mov
mov
arpl
push
push
jnp
inc
pop
movs
cmp
add
and
je
mov
sub
mov
inc
adc
out
imul
jne
add
jmp
xchg
add
xor
outs
jne
int3
add
add
test
adc
into
pushf
mov
pop
stc
pop
add
mov
mov
icebp
inc
repz
lea
xchg
push
cmp
add
sub
xchg
pop
xor
pminsw
xchg
out
push
mov
fwait
aad
in
mov
sub
movs
jg
aas
lock
and
xor
sbb
cmps
fcomp
loope
sbb
sub
inc
xor
loop
jnp
mov
or
dec
push
dec
call
retf
sub
sar
mov
je
sbb
js
adc
lds
sbb
pusha
fstp
push
das
cmova
jb
add
imul
cmp
(bad)
push
cmps
push
adc
add
jns
pop
leave
and
ins
adc
std
lods
jp
xor
imul
or
jg
bound
(bad)
(bad)
mov
scas
mov
ret
jmp
mov
fldenv
mov
shl
lea
mov
mov
movs
or
jns
call
fs
jbe
shl
mov
(bad)
out
mov
pop
xchg
fwait
or
lds
add
xchg
jbe
pushf
sbb
data16
cmp
stos
imul
dec
loope
dec
sahf
dec
call
ficomp
out
mov
cwde
outs
cmp
lods
call
jb
aaa
ins
xor
lock
push
pop
or
shl
adc
in
cmps
xchg
neg
clc
fcomp
xchg
lahf
xchg
hlt
popf
pop
pop
dec
(bad)
outs
int3
push
loop
pop
in
mov
in
daa
mov
xchg
jmp
or
cmc
cmp
arpl
scas
aad
test
push
cmp
add
imul
movs
rcr
mov
sub
xchg
int3
adc
arpl
mov
cdq
mov
imul
xor
adc
add
jno
and
cmp
and
fild
jecxz
lock
sub
and
ja
popf
stos
mov
dec
xor
scas
aam
movs
imul
add
push
jb
mov
cdq
add
inc
or
xchg
pop
pop
or
scas
push
adc
sub
add
mov
sahf
sbb
add
popf
xchg
aam
push
fs
jo
mov
sub
mov
int
int
lahf
cld
lods
sbb
add
das
and
adc
call
jl
pop
mov
jnp
jne
mov
outs
ja
sti
push
jmp
jmp
(bad)
cmp
fwait
sbb
jle
mov
sub
push
rcr
out
nop
pop
sahf
imul
cmp
inc
inc
retf
jnp
gs
xchg
add
call
sti
sub
mov
jne
pop
push
shr
adc
mov
dec
sbb
push
js
test
mov
push
idiv
push
int3
mov
mov
imul
mov
xor
push
mov
adc
movs
mov
push
ja
jge
pop
pop
pop
fimul
mov
out
mov
sbb
inc
xchg
aad
push
jl
dec
and
jl
pop
iret
daa
xchg
cmp
nop
rol
inc
sub
mov
jmp
xchg
imul
xor
and
adc
fdiv
add
stc
or
sti
mov
pop
xchg
int3
jge
cmp
sub
not
or
pop
in
push
adc
cld
stos
inc
pop
sub
or
jmp
das
xor
lods
add
inc
mov
push
adc
dec
dec
in
sub
mov
mov
xor
cmps
xor
rcr
or
jge
pop
sub
cld
and
int
stc
rol
xor
mov
xor
nop
lock
sbb
test
xor
xor
sbb
lahf
and
pop
jo
fld
pop
jns
mov
fstp
cdq
mov
aad
push
jmp
fnsave
xor
sahf
dec
(bad)
leave
or
in
dec
push
or
call
bound
or
je
cli
or
ret
sbb
ret
(bad)
xchg
out
mov
mov
mov
aaa
jmp
mov
cmp
js
pop
iret
or
dec
(bad)
xor
sub
fmulp
sbb
inc
mov
mov
int3
dec
and
mov
sbb
pop
mul
(bad)
mov
imul
std
sub
add
push
cmp
pmulhw
movs
ins
mov
add
nop
jbe
mov
push
aad
aad
xchg
ins
pop
ds
mov
jae
mov
leave
jmp
bound
enter
mov
out
xor
xor
inc
xchg
aas
jae
jg
sti
cs
int
je
imul
fwait
call
inc
aam
dec
mov
out
fidivr
mov
outs
xchg
out
dec
out
push
not
scas
enter
(bad)
sbb
push
enter
jecxz
mov
idiv
imul
ret
and
inc
lods
icebp
ret
sub
mov
xchg
jp
jne
jecxz
mov
xchg
jb
push
mov
stos
stos
push
(bad)
fmul
sbb
push
(bad)
cmp
mov
ret
dec
add
sub
add
push
pop
push
pusha
ins
aas
fstp
out
test
dec
sub
daa
stos
out
dec
sbb
push
sbb
xlat
xchg
lahf
push
neg
ss
arpl
mov
or
pop
sub
cmp
xchg
leave
outs
mov
xchg
cmp
or
mov
aam
push
retf
rol
inc
push
sbb
repnz
sbb
inc
cmps
cmps
fs
mov
mov
pop
jae
mov
sbb
leave
enter
jl
mov
ror
imul
add
loope
push
pop
outs
push
data16
mov
rol
(bad)
jne
mov
enter
les
fnstcw
es
sar
or
sub
fild
and
mov
arpl
mov
xor
inc
sbb
mov
or
jmp
or
fcom
or
das
dec
(bad)
xchg
sub
in
and
add
cli
jns
mov
mov
movs
jecxz
movs
popa
dec
push
clc
loop
fs
aam
popf
iret
loope
jo
int3
sbb
push
and
out
loope
neg
jbe
xchg
es
pushf
jmp
and
scas
or
cmp
mov
int3
std
aad
and
loope
and
fistp
and
in
push
aas
and
and
add
adc
cmc
sbb
cdq
bound
std
inc
retf
clc
mov
xchg
cmps
aas
ja
sub
jle
dec
jno
in
jno
xchg
sub
rcr
out
cmp
dec
out
and
sbb
xchg
jle
jl
fstp
inc
add
mov
xor
xlat
call
ror
push
outs
dec
pushf
int3
push
mov
fsubr
fs
ror
sub
jno
or
mov
push
fs
(bad)
mov
xor
push
leave
or
in
in
loopne
nop
mov
lea
loop
cs
ins
or
sbb
data16
jmp
out
stos
cld
push
stos
outs
sbb
mov
xor
and
pop
ret
mov
adc
popf
scas
out
dec
div
pop
fs
jae
jmp
sbb
or
arpl
dec
outs
cmc
cmp
mov
pop
and
mov
rcr
cld
fldenv
enter
(bad)
pop
sbb
pop
test
mov
xor
lahf
int3
jbe
cmp
xor
jbe
add
stc
xor
jnp
push
mov
push
pop
rol
dec
cmp
add
xchg
xor
and
fidivr
mov
dec
out
jo
outs
inc
push
outs
cs
dec
adc
cmp
mov
jae
dec
in
(bad)
nop
cmp
(bad)
sar
iret
fs
ins
ja
or
pop
cmp
lods
loop
repnz
xchg
in
push
ret
adc
mov
jmp
pop
not
leave
sub
xlat
in
out
(bad)
pop
retfw
or
xlat
ja
enter
(bad)
leave
jnp
mov
(bad)
clc
pop
mov
arpl
pop
cmp
test
xchg
in
xchg
imul
outs
push
int
stos
pop
movs
mov
mov
jmp
xchg
(bad)
repz
call
pop
inc
outs
scas
jmp
sub
jns
sub
dec
dec
cmp
stc
jmp
cmps
ret
or
jo
fldenv
sahf
out
push
cli
jg
pop
(bad)
and
xchg
fldenv
cmc
and
push
cwde
pop
out
and
add
in
cmps
sti
je
xchg
mov
lahf
jmp
mov
inc
dec
lea
push
and
xor
inc
sbb
mov
add
arpl
sar
out
xchg
jmp
call
aaa
push
xor
cmp
ja
out
clc
dec
jae
in
jno
aam
out
push
ds
cwde
sub
dec
fcmovu
ja
rcr
fcomp
icebp
in
aaa
loope
shr
imul
popf
jbe
js
push
mov
imul
arpl
push
outs
push
test
jae
popa
mov
imul
pop
or
cmp
sub
in
mov
stc
iret
pop
mov
(bad)
repz
repz
lds
aas
add
dec
ja
jmp
xchg
sub
pop
xchg
jmp
pop
push
fistp
imul
pop
(bad)
mov
sbb
jne
pop
add
out
retf
xchg
cmp
sbb
or
lods
adc
lods
sbb
ret
jae
adc
iret
popa
add
fdivr
mov
mov
sub
xchg
into
adc
mov
lods
int
cld
imul
in
fdiv
mov
je
xor
mov
mov
and
cmp
dec
and
mov
push
jmp
scas
mov
mov
inc
loop
push
dec
jnp
fbld
mov
ds
pop
dec
neg
in
in
mov
mov
mov
inc
mov
xchg
ins
jg
mov
or
jno
shl
jnp
int
fwait
(bad)
ja
push
lods
jmp
xchg
cmp
mov
jmp
sbb
xor
(bad)
xor
sbb
mov
out
pop
cmp
ss
sub
getsec
mov
jb
cmp
mov
gs
inc
idiv
dec
sti
aas
aaa
retf
pop
(bad)
aas
cwde
pop
in
xlat
leave
adc
push
xchg
dec
lds
pop
mov
in
ins
mov
and
addr16
test
adc
xchg
sbb
ret
aad
mov
les
ret
ret
dec
push
jecxz
out
mov
and
fild
pop
sbb
mov
adc
je
sbb
mov
ss
dec
int3
or
mov
sti
sub
ss
xor
shl
(bad)
inc
outs
je
xchg
or
mov
sub
mov
int
repz
retf
cmp
mov
cwde
aaa
mov
outs
out
scas
jge
mov
push
mov
loope
fwait
int3
lea
pop
cmps
ins
cld
test
cmps
test
hlt
repnz
lea
adc
dec
add
fsubr
aam
mov
xchg
test
xchg
and
mov
test
sbb
icebp
mov
gs
inc
adc
push
ss
and
pop
retf
loop
inc
loope
movs
int3
arpl
pop
push
sub
aad
push
aam
cmp
movs
mov
nop
scas
mov
popf
daa
dec
(bad)
fwait
push
mov
jmp
mov
add
js
dec
ins
sbb
imul
push
mov
pop
cmp
data16
mov
xor
ja
(bad)
in
xor
dec
or
fstp
das
and
xor
je
std
adc
cmp
and
lods
and
lock
retf
int
ret
dec
push
pop
mov
and
fs
cmc
xor
icebp
mov
and
jg
dec
les
xchg
cmc
movs
mov
movs
jecxz
mov
shr
pop
dec
sbb
in
outs
cmp
sub
cmp
inc
adc
pop
div
xchg
pop
pop
mov
or
addr16
enter
jnp
fist
clc
inc
sub
retf
call
cmc
pop
cmp
xor
sbb
rcr
mov
fst
imul
loop
les
jnp
sysret
popf
jle
pop
icebp
adc
int
push
inc
ins
ret
adc
push
pop
pop
jb
jecxz
jmp
outs
ja
(bad)
cmc
ss
cmp
xor
je
xor
cdq
pop
sub
xchg
lds
push
popf
sub
int
dec
jmp
xchg
mov
(bad)
cmp
pop
inc
xor
mov
xchg
ret
test
sub
jno
xchg
call
pop
div
or
mov
popf
mov
fs
mov
cdq
cwd
rol
out
mov
stos
or
imul
cmps
jno
mov
inc
cli
pop
cmp
fsub
leave
imul
stos
ds
popa
push
jmp
push
rcr
mov
fld
mov
jge
jmp
sti
dec
jns
mov
fld
mov
test
das
sub
pop
loopne
dec
jmp
jb
xor
inc
pop
repnz
cmp
xchg
daa
les
ins
imul
push
push
cmp
(bad)
retf
jbe
ret
sub
dec
fcomp
or
pop
test
movs
dec
clc
lahf
adc
dec
pop
add
cdq
xchg
mov
fwait
pop
xlat
xchg
in
ds
movs
jp
sbb
test
(bad)
adc
jne
enterw
xchg
and
lea
std
xchg
xor
dec
xchg
dec
and
aas
jmp
push
cmps
in
out
fnstcw
icebp
jge
sub
cmp
sar
ret
inc
loope
jbe
stc
arpl
mov
data16
dec
xor
fwait
sbb
sbb
lods
cmp
push
or
cmp
frstor
add
cmp
pop
push
and
shl
mov
and
cmp
cmp
outs
in
shl
mov
and
arpl
cld
cwde
push
stc
sbb
pop
and
aas
arpl
cmp
xchg
inc
sar
push
jno
clc
sub
jmp
(bad)
call
xor
inc
imul
outs
lahf
stos
dec
xor
inc
pop
ins
mov
lock
(bad)
push
les
aam
and
cld
movs
sbb
cmp
int3
repz
dec
inc
jmp
popf
mov
add
xchg
rcl
or
(bad)
in
push
pusha
es
mov
adc
mov
aaa
out
test
push
cmp
mov
dec
push
ror
pop
xchg
data16
outs
cmp
mov
lods
jle
arpl
hlt
cmp
jb
ret
xchg
xchg
repz
ret
cmc
lea
mov
sahf
inc
(bad)
cmp
jo
jge
pop
cmps
gs
icebp
xor
mov
sbb
retf
inc
out
frstpm(287
stos
jbe
sbb
push
jbe
mov
jle
mov
loope
(bad)
cdq
xchg
imul
pop
and
lods
dec
scas
das
or
les
add
sbb
and
mov
in
cmp
mov
outs
and
xor
pop
jecxz
mov
(bad)
jmp
rcr
in
das
xchg
stos
push
dec
sub
xor
jno
jns
(bad)
ins
pop
enter
pop
cmp
and
push
enter
inc
mov
iret
cmp
dec
mov
mov
paddq
shl
add
push
lods
rcr
xchg
fs
mov
(bad)
lahf
xchg
mov
sbb
xor
xchg
leave
push
pop
repnz
ret
cmps
fs
cli
movs
jmp
pop
movs
aam
mov
out
nop
mov
popa
mov
xchg
cdq
inc
push
retf
jecxz
push
xchg
mov
in
xlat
cmp
or
mov
sub
and
cs
dec
ret
bound
adc
sbb
leave
daa
fnstenv
call
and
int3
jle
(bad)
stos
fisttp
(bad)
mov
dec
in
pushf
bound
mov
sbb
xor
mov
mov
xchg
xchg
(bad)
mov
pop
or
fsub
mov
repnz
add
nop
out
xor
cmp
daa
repnz
out
xor
adc
movs
jbe
hlt
cmps
jbe
sub
jnp
push
xchg
pop
stc
retf
sub
ror
pop
xchg
cmp
xchg
xchg
sahf
retf
dec
icebp
sbb
xchg
mov
out
lods
and
aad
lods
arpl
(bad)
stc
pop
and
sahf
loope
mov
enter
(bad)
xchg
shl
sbb
mov
mov
aas
aam
pop
and
loope
pop
pop
jnp
and
retf
cwde
ins
mov
in
mov
cmp
jecxz
popf
push
push
inc
pop
mov
jbe
cmp
inc
movs
clc
ret
repnz
jge
adc
sbb
std
(bad)
outs
xor
pop
mov
(bad)
arpl
mov
jg
mov
shl
mov
les
scas
pop
loop
adc
inc
xchg
fs
enter
dec
ins
nop
jle
mov
xor
nop
inc
int
lods
mov
mov
(bad)
lods
out
mov
retf
cmp
sbb
ja
pusha
mov
(bad)
sbb
jg
cmp
outs
cld
scas
pushf
dec
cmp
rdmsr
dec
and
xlat
dec
test
xlat
test
ins
cdq
jns
jns
mov
adc
push
adc
pushf
sbb
dec
sbb
fnstcw
int3
jmp
push
mov
out
and
sub
std
xlat
xchg
inc
sbb
mov
mov
jns
shl
mov
xchg
(bad)
pop
xor
jle
adc
sub
push
into
in
outs
sti
mov
mov
repz
pop
gs
xchg
test
xor
retf
ins
mov
mov
xlat
ror
dec
mov
or
add
push
xchg
jne
and
out
nop
jae
rcl
and
mov
inc
xchg
out
push
adc
cs
(bad)
jecxz
loope
jne
add
mov
mov
(bad)
jne
ret
mov
int
(bad)
jne
xor
(bad)
ror
popa
dec
mov
fcomp
jae
imul
or
pop
add
jbe
in
and
test
adc
imul
pop
mov
sub
mov
xchg
push
test
adc
(bad)
test
adc
adc
fdiv
cmp
xchg
and
mov
cwde
sub
push
cmps
mov
add
scas
outs
inc
movs
add
test
and
test
add
test
add
dec
adc
sahf
rol
cmp
ss
sub
outs
inc
push
dec
jmp
mov
mov
adc
ins
or
or
neg
aad
dec
xor
push
or
jle
cmps
in
jae
sbb
lods
pop
xchg
sar
or
xchg
imul
in
cli
jbe
sbb
jle
xlat
mov
js
ja
scas
adc
sbb
aad
and
push
pop
dec
add
int
mov
cmps
iret
sub
jmp
lahf
sub
pop
pop
mov
aas
sub
mov
mov
mov
mov
xchg
jns
jecxz
and
add
cwde
pop
not
xor
test
mov
stos
dec
mov
imul
mov
jns
jge
inc
xor
pop
stos
dec
push
mov
or
ins
inc
xor
and
pop
nop
fsubrp
sbb
xchg
mov
pop
add
sbb
xchg
adc
add
cmp
push
xchg
jmp
inc
adc
clc
dec
je
mov
and
pop
mov
das
in
xchg
inc
aam
loopne
add
inc
push
adc
dec
add
iret
sub
sbb
push
push
inc
imul
mov
pop
in
mov
add
mov
cmp
es
adc
dec
imul
or
movs
imul
dec
mov
add
out
mov
jne
adc
repnz
push
add
loopne
out
jg
push
push
sub
cli
call
inc
stos
test
push
fild
mov
test
adc
daa
inc
or
adc
xchg
ins
inc
nop
popf
and
imul
test
pop
push
ja
adc
shr
xchg
dec
sbb
inc
adc
or
or
or
movs
test
add
or
shr
push
push
cdq
sbb
jo
dec
in
xlat
(bad)
jne
jno
mov
mov
add
arpl
fwait
xor
jle
or
out
dec
out
ds
fwait
pop
push
sbb
ja
retf
and
and
mov
push
adc
mov
pop
sub
cmp
aaa
je
mov
call
sub
pop
or
jle
out
data16
dec
enter
(bad)
and
mov
daa
std
xchg
ins
mov
sbb
scas
popf
sar
push
les
repnz
fimul
xchg
xchg
and
mov
push
add
jne
loopne
es
xor
call
sbb
aaa
ret
cmp
cmp
sti
aas
mov
pop
retf
sbb
mov
xchg
sbb
int
xor
adc
pop
arpl
fstp
js
adc
out
in
sti
ins
sbb
sahf
and
mov
and
sub
in
stos
ins
inc
mov
out
adc
and
gs
and
cmp
jg
sub
jns
jo
jo
pop
shl
jge
(bad)
xor
dec
out
retf
in
(bad)
aad
xchg
push
retf
into
popf
idiv
push
xchg
popf
mov
xchg
sub
out
inc
jecxz
adc
scas
dec
mov
je
iret
arpl
sbb
cmp
jle
loopne
sub
lods
cmps
iret
and
rol
int
lea
mov
(bad)
cdq
cmp
pop
repnz
ja
jne
mov
mov
gs
sbb
jo
jecxz
cld
scas
sub
push
dec
hlt
(bad)
aam
fs
mov
neg
cmp
jle
ins
jae
in
fcmovb
mov
xor
push
or
clc
dec
pusha
and
pop
inc
test
jns
ins
and
ins
mov
add
ficom
lock
cld
call
std
leave
cmp
pcmpeqw
int
sub
jbe
mov
lods
sahf
adc
les
cmp
cwde
call
out
sbb
mov
icebp
push
cdq
call
jae
(bad)
jg
jg
xchg
mov
mov
adc
mov
jns
dec
sbb
push
jmp
inc
or
daa
and
scas
pop
mov
mov
ss
adc
imul
sbb
ficomp
ss
test
jae
jns
das
push
test
popf
fwait
xchg
aaa
jge
cmp
in
ret
mov
icebp
push
adc
fwait
and
in
cdq
and
xor
popf
add
jle
xor
sbb
dec
repnz
ins
jnp
clc
sbb
(bad)
adc
pop
push
ins
gs
xchg
(bad)
(bad)
xlat
dec
ret
sti
das
das
xor
test
pusha
mov
dec
movs
mov
scas
inc
loop
dec
out
je
xor
(bad)
out
pop
dec
jge
stc
adc
add
cmps
jb
sub
push
dec
div
test
add
mov
mov
out
add
sub
mov
mov
mov
mov
fidivr
(bad)
pop
add
gs
out
mov
xor
mov
lods
inc
addr16
adc
stos
xor
sbb
mov
add
ins
sub
imul
or
and
add
and
stos
dec
retf
mov
sti
and
(bad)
cli
es
mov
cmp
inc
sub
sub
or
cmp
jno
lea
dec
inc
lea
ins
outs
adc
jecxz
stc
pop
push
neg
mov
cmp
ja
mov
icebp
(bad)
ja
pop
inc
arpl
fisttp
mov
jbe
sbb
and
push
icebp
iret
jne
jo
xchg
xor
aad
ja
movs
lods
xchg
arpl
cmp
idiv
movs
into
inc
jge
jl
(bad)
je
fcom
mov
daa
jmp
xchg
cs
jae
ins
jmp
jno
cmp
test
outs
fwait
out
sti
fild
test
clc
sahf
stc
hlt
test
pop
or
popa
xchg
cmp
outs
(bad)
fnstcw
aad
jae
adc
mov
mov
ret
dec
sbb
shr
and
xor
xlat
and
iret
dec
pop
(bad)
dec
cmp
fld
jmp
jmp
xchg
xor
stc
mov
fcomp
div
sbb
pop
mov
test
or
mov
dec
sbb
mov
je
cld
dec
std
jae
xchg
jl
mov
pushf
push
mov
imul
xor
pop
(bad)
sub
mov
imul
sub
gs
lahf
sbb
xor
mov
ja
outs
loop
shl
imul
sahf
call
mov
pop
sub
push
aas
or
nop
jb
and
jg
add
loopne
cmp
dec
ss
mov
(bad)
into
pop
push
leave
nop
arpl
fisubr
aaa
stc
or
scas
dec
mov
dec
cdq
lea
jo
jbe
dec
dec
xlat
icebp
cdq
xchg
sub
sahf
test
add
or
(bad)
(bad)
xchg
mov
push
or
idiv
mov
in
icebp
ss
inc
xchg
xor
xor
inc
push
add
jbe
mov
jp
scas
sbb
fdivr
cdq
push
xor
sti
sbb
add
retf
(bad)
out
outs
xchg
sbb
jbe
push
xor
pop
pushf
dec
inc
sahf
mov
lahf
dec
jnp
cmp
in
int3
ds
aas
jne
ss
and
fild
in
mov
out
retf
cmps
dec
sub
mov
cmp
sbb
out
movs
cld
sub
mov
cmp
mov
lock
loope
sub
imul
cwde
repnz
pop
or
inc
ror
rcl
sbb
sar
add
or
in
shl
(bad)
imul
xchg
lock
lea
arpl
and
call
push
outs
arpl
inc
pop
(bad)
mov
sub
cmp
out
mov
out
push
cmp
push
cmp
inc
inc
pop
jnp
ret
or
(bad)
jle
pop
jmp
cmp
push
sbb
mov
sahf
cmp
movs
push
out
out
mov
cld
pushf
inc
in
cmp
sbb
xchg
and
fldcw
xchg
out
mov
dec
(bad)
mov
mov
pop
sub
jecxz
mov
or
retf
ret
dec
pop
icebp
mov
popa
or
aas
xchg
dec
pop
jg
outs
dec
pop
dec
sbb
ins
sub
inc
add
cmp
fstp
ins
shl
imul
add
rcr
sti
test
jecxz
mov
dec
in
mov
ss
pop
mov
or
xor
outs
es
pop
ja
xor
and
fs
push
outs
mov
adc
sbb
push
arpl
inc
gs
pop
fstp
add
mov
sbb
arpl
push
pop
jl
mov
pop
inc
xchg
cmps
cmp
sub
fild
hlt
mov
sub
hlt
out
adc
inc
call
fwait
fs
inc
xchg
icebp
lds
mov
push
push
ja
scas
xchg
xor
icebp
arpl
inc
sar
(bad)
and
mov
js
popa
stc
iret
jle
popa
je
adc
shl
(bad)
cdq
cmp
push
mov
xor
mov
movs
div
ds
push
fnstsw
and
inc
fst
jmp
xchg
fwait
test
mov
call
fisttp
outs
xchg
or
loopne
loope
jmp
mov
int
mov
cmp
sbb
mov
rcl
lods
std
inc
add
sbb
mov
addr16
stc
pop
les
push
ss
lahf
cwde
and
jge
ins
(bad)
jg
aas
or
cmp
popa
in
mov
jbe
xchg
stc
or
loope
nop
cmp
sub
fstp
mov
adc
(bad)
xor
jo
mov
jge
xlat
int
adc
ss
mov
cdq
and
(bad)
mov
rcr
jae
pop
es
jle
outs
aam
scas
out
iret
push
mov
and
jl
jg
and
sar
mov
enter
or
pop
call
sti
or
sub
and
mov
fs
jecxz
das
mov
jmp
sub
push
in
and
leave
ds
xor
popf
ja
push
es
rol
(bad)
sbb
add
jbe
sub
out
jmp
outs
pop
xor
test
jbe
cli
std
daa
ja
nop
je
ds
fucompp
or
jno
push
stos
test
cmc
xor
ds
dec
sbb
inc
dec
retf
(bad)
jo
jno
mov
mov
and
jns
test
cmp
mov
mov
outs
cld
sub
dec
fwait
xchg
fmul
imul
add
xor
xor
je
jle
out
femms
jae
(bad)
std
push
gs
cmc
or
or
sbb
dec
push
jnp
lods
xchg
in
stc
pop
aam
xchg
xchg
xchg
pop
jns
mov
or
and
ins
pop
adc
lock
cs
lods
neg
jecxz
pop
jne
xchg
cwde
pop
pop
pop
shr
xchg
xchg
iret
cmp
adc
inc
fs
ffree
or
outs
xchg
and
imul
add
pop
add
lods
in
mov
icebp
mov
mov
add
dec
add
mov
jnp
movs
push
repz
xchg
sbb
jns
iret
push
mov
cdq
hlt
pop
cmp
dec
ins
pop
js
loope
and
lahf
jne
mov
(bad)
jle
push
jmp
seto
outs
(bad)
(bad)
jbe
lods
mov
pop
mov
cmps
push
push
fistp
cmps
mov
arpl
pop
and
dec
xchg
and
enter
push
arpl
pop
movs
mov
loop
inc
and
ins
in
push
fdivr
and
out
push
stc
inc
dec
jl
shl
shl
pshufw
stos
mov
gs
add
mov
xor
mov
cmp
dec
push
or
scas
je
xor
popa
rcr
xchg
jecxz
pop
jp
out
jle
cmp
aas
and
xchg
jbe
lock
(bad)
sub
popa
mov
xchg
fstp
sub
xchg
xchg
nop
inc
(bad)
rcr
sbb
mov
and
add
stc
addr16
push
sbb
xchg
movs
mov
pop
add
aam
adc
lods
shl
cmps
test
push
out
push
fistp
mov
cmp
das
xchg
adc
mov
(bad)
add
cmps
mov
sbb
mov
mov
xor
out
jp
nop
out
loopne
sub
xchg
sbb
loopne
js
aaa
je
add
sub
jbe
sbb
pusha
ins
dec
adc
mov
and
xor
(bad)
mov
ret
ins
adc
stos
jo
out
retf
jl
(bad)
cmp
dec
sar
sbb
mov
mov
(bad)
shr
cmp
cmc
mov
mov
cmp
ins
ins
fadd
js
xor
mov
fdiv
loop
int3
fxch
push
popa
outs
lds
xor
js
and
inc
lods
push
cmps
xchg
pop
movs
repz
ds
test
or
sar
mov
ss
into
repz
scas
fwait
mov
mov
jno
shl
add
bound
push
xchg
fiadd
add
jb
mov
mov
xchg
sahf
hlt
jmp
adc
int
addr16
imul
enter
(bad)
enter
into
xor
aaa
neg
test
jno
or
cs
pop
ficomp
ds
inc
pop
cmp
repz
jle
(bad)
fs
push
jle
imul
dec
push
sbb
mov
mov
and
(bad)
stc
jno
into
cli
mov
inc
adc
mov
mov
inc
loopne
jae
xor
(bad)
sub
jo
xor
push
out
push
mov
jecxz
push
mov
mov
lahf
mov
call
repnz
mov
lahf
xor
ja
sar
pop
js
mov
(bad)
lods
fsubr
mov
fwait
cmp
movs
data16
jg
adc
inc
add
mov
es
push
mov
cmps
in
push
outs
jo
mov
es
mov
out
jle
push
mov
jb
sub
add
inc
sub
jl
jle
ja
adc
cld
aas
bndstx
sar
into
pushf
mov
in
adc
sub
mov
xor
outs
cdq
sbb
mov
test
pop
gs
cmp
(bad)
mov
mov
mov
pop
div
fistp
lock
xchg
fst
js
mov
inc
test
pop
aaa
xchg
add
call
js
xor
pop
add
push
repnz
or
popa
inc
cli
pushf
pushf
mov
inc
pusha
fistp
retf
fcom
push
push
loopne
enter
test
jb
arpl
and
push
or
jge
es
jno
ins
cmp
mov
loope
arpl
xchg
hlt
or
outs
ret
xor
cmp
test
or
scas
mov
popf
div
cld
sub
mov
sbb
xor
sub
dec
imul
arpl
and
and
(bad)
mov
sub
jns
xchg
push
es
cld
cmps
enter
and
out
add
outs
cmp
push
std
(bad)
frstor
(bad)
mov
mov
sbb
mov
inc
js
push
fwait
ja
mov
jmp
cmps
ins
mov
stc
xchg
shr
push
(bad)
out
xchg
cmps
lock
in
dec
fmul
addr16
sbb
push
or
clc
sub
mul
sbb
pop
cmp
dec
push
fnstenv
mov
repz
push
mov
daa
mov
imul
push
outs
pushf
sbb
arpl
call
mov
and
push
aaa
fdiv
imul
add
iret
ss
fwait
call
xchg
push
stos
cmp
xor
push
add
sbb
sbb
and
jmp
add
idiv
pop
jae
pop
cdq
push
cmp
push
xor
push
jmp
scas
clc
xchg
out
(bad)
das
(bad)
ins
or
add
movd
std
outs
mov
neg
fdiv
sbb
arpl
movs
fst
aad
pop
mov
xchg
ins
(bad)
fwait
add
ret
pop
shr
dec
and
mov
jb
sar
sbb
cs
and
mov
inc
int
add
push
popa
imul
gs
mov
mov
(bad)
or
jecxz
movs
jae
jmp
cli
(bad)
mov
inc
es
xor
inc
pop
and
scas
lea
lahf
ret
pop
(bad)
pop
push
push
pop
jno
pop
mov
dec
add
push
stos
lods
popf
loop
cld
xchg
pop
and
in
fnstcw
das
pop
enter
daa
gs
jnp
sbb
fdiv
sar
je
add
jecxz
dec
aaa
inc
mov
rcr
aaa
pop
stos
sbb
arpl
sub
dec
ds
inc
sbb
xor
and
neg
xor
jb
mov
inc
stc
inc
inc
pushf
pop
cmp
retf
mov
cmps
addr16
ficomp
aad
std
xchg
pushf
mov
(bad)
call
repnz
fdiv
mov
mov
fdivr
add
addr16
jl
enter
(bad)
sar
scas
imul
popf
inc
movs
adc
sub
inc
(bad)
push
test
jns
pop
bound
loope
cli
movs
leave
mov
repz
mov
dec
dec
jns
mov
jno
inc
outs
outs
pop
mov
fwait
mov
and
int
call
fadd
mov
loope
add
jae
jno
inc
stos
lods
jp
repnz
mov
ror
pop
cmps
mov
push
outs
popf
mov
scas
jbe
mov
lods
mov
arpl
xor
add
mov
arpl
mov
jmp
and
xchg
xchg
(bad)
out
lea
out
test
in
aad
enter
shl
cmps
retf
inc
int3
pushf
xor
out
movs
mov
data16
cmp
push
jns
ins
cmovge
mov
out
mov
sub
push
in
mov
aaa
or
es
xor
and
inc
sahf
inc
lods
mov
lods
jno
cmc
aad
clc
es
arpl
fimul
loopne
iret
sbb
push
xchg
or
push
push
das
out
dec
mov
into
mov
mov
inc
jl
mov
in
push
aas
retf
mov
jecxz
xor
xchg
mov
aaa
push
outs
or
imul
repnz
add
jmp
fdivrp
xchg
sbb
aaa
inc
in
test
ins
xchg
ja
lahf
retf
std
and
mov
loopne
cmp
dec
or
arpl
push
clc
in
cs
pop
sbb
push
adc
aas
aad
push
enter
retf
loope
cmp
enter
cmp
std
xlat
cmps
rol
test
inc
mov
dec
hlt
cmp
addr16
mov
mov
pop
dec
sbb
add
or
aas
aas
sbb
cmp
stos
call
scas
js
cli
imul
sar
adc
dec
xor
push
retf
fiadd
loop
mov
nop
pop
cli
mov
mov
mov
loope
rol
and
rol
mov
sar
in
jg
imul
push
mov
(bad)
retf
adc
enter
cwde
neg
in
imul
aaa
cmp
xchg
add
inc
pop
fild
jp
and
mov
js
(bad)
int3
mov
sbb
mov
cdq
shl
jmp
aaa
loopne
add
out
dec
(bad)
xlat
leave
add
lods
mov
fisubr
mov
xor
pop
scas
inc
or
cdq
movs
rcr
add
sbb
xchg
scas
and
aaa
xchg
cmp
or
pop
inc
mov
ss
lahf
into
jbe
jl
jp
push
test
(bad)
cli
push
repz
dec
test
popf
in
mov
inc
(bad)
sbb
push
ror
push
xchg
retf
inc
jo
stos
xor
cmps
les
js
imul
push
pop
push
or
inc
add
retf
jbe
fcomip
ja
or
or
or
inc
mov
repnz
in
add
and
add
or
mov
sbb
lods
pop
and
pop
mov
fst
(bad)
pop
jecxz
jecxz
in
xchg
mov
add
aad
dec
movs
or
inc
cmps
in
lea
jmp
mov
inc
cmp
add
mov
pop
xchg
lock
lahf
fs
push
repz
push
push
inc
pusha
fild
push
(bad)
mov
pop
fwait
sbb
in
inc
loopne
pop
imul
lahf
or
xchg
inc
sub
repz
mov
lea
cdq
mov
fwait
test
dec
cdq
jns
les
jg
add
imul
cdq
dec
retf
cmp
mov
mov
in
jae
sbb
scas
(bad)
js
lahf
dec
xchg
cmp
ins
sbb
sub
pop
hlt
mov
jmp
ret
mov
ja
retf
retf
retf
adc
(bad)
add
dec
or
es
in
mov
lods
inc
or
jne
jecxz
sti
das
dec
push
lods
mov
xor
lds
jmp
mov
je
scas
popa
cmc
cli
cmp
push
mov
movs
out
cmp
dec
pop
repnz
scas
aam
imul
dec
dec
popa
hlt
mov
fisttp
(bad)
repnz
adc
dec
xor
frstor
dec
aas
jne
mov
xor
sbb
xchg
scas
cmp
cmp
pop
mov
iret
test
cmp
mov
jp
sbb
cwde
idiv
ret
(bad)
push
fimul
jbe
mov
data16
jecxz
xor
push
enter
fisubr
add
and
add
sub
fs
sti
cmc
push
sbb
xor
cmp
mov
mov
fdivr
sbb
mov
stos
add
push
sbb
or
jnp
mov
sbb
pop
pop
push
cwde
and
mov
in
and
add
push
add
xchg
push
add
add
iret
push
add
adc
or
adc
or
test
add
pop
ror
add
add
(bad)
xchg
jns
sub
inc
jnp
adc
pop
lea
xchg
mov
add
and
push
xchg
sbb
or
cmp
inc
and
xchg
int
movs
inc
add
xchg
add
or
jmp
test
nop
stc
inc
dec
popa
dec
mov
add
ret
inc
xchg
nop
mov
dec
ds
mov
leave
mov
cwde
add
lods
adc
fidivr
(bad)
inc
push
adc
sub
add
jmp
mov
ret
inc
ror
jnp
mov
sub
inc
(bad)
daa
jmp
cmps
mov
pop
lods
pusha
cmps
add
ja
pop
cdq
jo
daa
fwait
and
cmp
movs
dec
pop
icebp
(bad)
test
add
popa
push
mov
inc
mov
and
or
xor
inc
add
or
or
ss
adc
cmp
inc
int
cmp
push
mov
iret
out
ss
cmp
cwde
(bad)
pop
push
sub
dec
xchg
push
push
retf
test
bound
out
cmps
ja
in
sub
pushf
jl
inc
in
jge
or
jp
jmp
xchg
test
pop
push
add
inc
mov
rcl
push
lods
pusha
mov
add
mov
nop
jnp
or
mov
cmp
icebp
xchg
sbb
mov
stc
mov
aad
outs
stos
jmp
inc
loop
mov
mov
mov
adc
scas
jmp
sbb
cs
xchg
dec
and
and
test
cmp
mov
inc
or
and
push
sbb
inc
mov
add
mov
ret
cmp
daa
movs
test
outs
xchg
push
inc
mov
xchg
into
out
mov
sbb
test
(bad)
pop
or
jae
btc
retf
jmp
in
cmp
clc
fwait
mov
mov
jmp
cmp
inc
aam
sub
popa
ret
retf
and
test
jge
dec
retf
enter
mov
sub
jne
mov
data16
outs
mov
lahf
pop
movs
(bad)
idiv
pop
aam
fs
mov
mov
movs
icebp
jg
popaw
mov
sub
call
cmps
aam
int3
sub
xor
shl
sbb
mov
and
in
shl
mov
mov
cmp
jle
aad
mov
in
mov
clc
cmp
pushf
xchg
xchg
int3
not
cmp
dec
in
cdq
aaa
ret
sbb
inc
pop
add
xchg
retf
in
dec
pushaw
imul
out
ins
push
and
ja
outs
mov
out
pushf
dec
push
repnz
cli
xchg
cwde
ins
lds
xor
cld
mov
and
add
push
fstp
int3
add
push
sbb
sbb
ficomp
mov
leave
call
stos
ins
mov
into
dec
mov
mov
rol
out
adc
pop
scas
add
mov
jno
imul
pop
mov
int3
add
lods
add
dec
jne
push
mov
pop
fidiv
int
stos
jecxz
test
jmp
mov
pop
stos
add
sub
xchg
xor
add
jmp
mov
dec
mov
sbb
lods
test
(bad)
je
cmps
sub
xchg
pop
fisub
cmp
cmc
pop
stc
aam
out
arpl
retf
out
ins
les
scas
and
jae
loope
jae
push
jo
cmps
repz
mov
xor
mov
shl
push
arpl
sbb
retf
outs
push
or
jmp
ja
nop
in
ds
lock
in
push
clc
push
imul
xor
inc
pop
ficomp
or
dec
ror
movs
ret
xchg
fisttp
mov
cmp
sub
sbb
outs
in
popf
dec
dec
pop
jmp
dec
cwde
std
cs
daa
xor
adc
out
push
cmp
or
jno
pusha
mov
sbb
pushf
pop
and
jae
sbb
mov
mov
inc
push
scas
lods
cdq
sub
data16
and
fs
sub
mul
test
lds
ror
jl
sbb
shl
pop
pop
aas
dec
mov
pop
lea
fcomp
movs
retf
and
xor
jbe
dec
and
lods
lock
ds
cmps
dec
arpl
xchg
push
les
mov
into
fmul
cmp
pop
xchg
cmp
(bad)
lods
movs
inc
jle
dec
mov
mov
out
out
repz
sbb
repz
imul
adc
pop
stos
stos
sbb
push
es
push
push
ret
sbb
cmp
mov
icebp
out
pop
scas
int
lahf
lea
idiv
jle
ja
pop
inc
movs
mov
inc
adc
inc
xlat
shl
fcomp
pop
push
xor
xchg
repnz
dec
cmc
jge
shl
retf
xchg
(bad)
and
bound
mov
cwde
and
out
mov
xchg
xchg
leave
stos
cld
sub
and
jo
ja
add
and
push
push
mov
cmp
jb
pop
jp
enter
jnp
inc
fiadd
in
inc
mov
aaa
add
push
ds
push
sub
jmp
push
jae
in
frstor
sub
mov
dec
daa
sbb
jl
(bad)
add
movs
rcr
out
mov
xchg
inc
push
inc
sub
stos
int
jo
push
mov
push
lods
jae
call
adc
repnz
aas
popa
fidivr
fistp
repnz
loop
mov
push
ja
sbb
jecxz
mov
pop
cmps
jg
mov
or
imul
mov
jns
scas
daa
addr16
cmp
stc
sbb
hlt
in
mov
in
adc
adc
call
(bad)
adc
std
jbe
pop
sbb
xor
dec
xchg
and
aas
arpl
imul
into
and
jmp
fisttp
(bad)
jmp
mov
sbb
cmp
aam
test
lahf
retf
lods
bound
sbb
out
xchg
scas
mov
clc
push
into
out
popa
lds
xor
fiadd
mov
mov
xor
repnz
loop
pop
fnstenv
(bad)
push
(bad)
cmps
mov
xchg
clc
ret
sbb
rcr
cmps
sub
dec
pusha
(bad)
das
int3
popa
and
rcl
imul
repz
xor
out
sbb
or
(bad)
lahf
cmps
addr16
adc
sbb
(bad)
sbb
dec
push
(bad)
xchg
mov
dec
xchg
and
jle
push
inc
push
std
lds
mov
dec
push
adc
pop
retf
pop
jmp
cs
mov
enter
jo
sub
or
arpl
mov
shl
mov
mov
sbb
mov
inc
cmps
in
sub
in
hlt
pop
dec
or
jmp
push
in
ret
(bad)
out
mov
imul
cwde
add
pop
sub
jne
sub
pop
lods
push
sub
or
mov
aas
adc
in
push
pop
call
add
mov
aaa
dec
cdq
xlat
sbb
inc
push
xor
in
and
xchg
pop
in
int3
push
mov
mov
js
jmp
mov
hlt
inc
xlat
mov
movs
xchg
(bad)
cmps
push
mov
ss
xor
(bad)
fstp
cwde
frstor
push
ds
js
add
sbb
jnp
cwde
xchg
shl
out
xchg
mov
lds
and
js
movs
into
mov
dec
(bad)
mov
jge
mov
inc
idiv
jmp
sbb
movs
xchg
rcl
mov
(bad)
lods
lods
test
ret
shr
push
mov
ins
push
add
lods
rol
jne
imul
mov
test
push
cli
sar
mov
add
jo
je
sub
cdq
xchg
mov
imul
cdq
test
aas
gs
sbb
cs
cmp
ret
cmp
xchg
and
mov
(bad)
mov
in
retf
xchg
ja
inc
enter
fmul
pop
cmps
xchg
neg
lahf
push
xor
sahf
dec
sbb
(bad)
pop
sbb
push
retf
xlat
dec
lock
jb
push
cmps
imul
pop
mov
test
arpl
sub
ins
popa
in
repz
and
icebp
fstp
jno
xchg
jbe
clc
sub
and
add
lods
lods
add
retf
(bad)
sbb
xchg
in
hlt
fild
xlat
aaa
aad
jecxz
ins
jae
lods
cwde
cld
inc
mov
or
lea
jo
jo
imul
sub
out
cmp
ret
mov
sti
stos
xor
out
aas
jecxz
xchg
into
imul
sub
inc
add
mov
xor
(bad)
out
ja
jle
ins
jno
outs
pop
add
xchg
out
cs
(bad)
cmp
push
and
ins
lods
ins
movs
lea
mov
cmp
cmp
lea
mov
cwde
mov
test
dec
dec
push
xor
sub
cld
jno
(bad)
jae
jne
mov
adc
add
scas
jns
je
retf
pop
cmp
pop
inc
in
mov
aam
(bad)
xchg
fs
dec
fs
sbb
out
out
cs
jne
and
stos
clc
push
mov
or
es
addr16
daa
(bad)
ja
jae
fs
jge
fdivr
mov
test
ins
add
(bad)
xchg
inc
std
aad
repnz
sbb
(bad)
test
sbb
mov
pop
out
jge
xchg
mov
cmp
pusha
mov
mov
fisttp
rcr
mov
xor
sbb
pop
enter
out
jp
mov
out
dec
iret
xchg
xchg
retf
mov
sub
dec
sti
jbe
push
sub
mov
push
inc
jb
sbb
out
jl
mov
add
repz
dec
loop
xor
dec
mov
in
repz
in
les
xchg
imul
jle
dec
imul
xchg
cmp
jae
ins
jmp
or
shl
cdq
sbb
pusha
call
ret
xor
jecxz
pop
repnz
in
mov
xchg
adc
pop
dec
mov
ds
mov
outs
and
hlt
fbstp
adc
dec
jg
data16
ja
nop
shr
pushf
int3
pop
xchg
pop
(bad)
lea
xchg
and
mov
or
dec
mov
sub
add
cmp
cmps
pop
jno
jnp
push
xor
cli
sub
sti
mov
mov
adc
out
stos
(bad)
add
mov
mov
mov
shl
in
addr16
in
pushf
outs
stos
shl
ss
pop
inc
imul
out
out
in
mov
mov
or
sub
dec
jg
popa
xchg
mov
popf
(bad)
aas
mov
jecxz
mov
mov
pushf
rol
es
std
adc
xchg
hlt
rol
inc
cmp
mov
ja
xor
jno
pop
(bad)
daa
push
loopne
jp
cmp
pop
xchg
inc
or
call
pop
dec
pop
dec
xchg
push
popa
into
outs
loopne
inc
rcl
lahf
ret
into
loop
or
mov
je
pop
sub
es
cwde
cmp
jecxz
jl
scas
cs
repnz
mov
fdivr
fdivr
lock
xor
ficomp
lock
sbb
in
pop
sbb
sub
loope
inc
fnsave
xchg
jmp
ins
adc
std
and
mov
in
jbe
xchg
lea
adc
jle
retf
int
(bad)
popf
scas
clc
xchg
pusha
and
mov
sbb
stos
inc
call
inc
cmp
add
pop
xor
ja
sbb
arpl
ins
sbb
jne
daa
xchg
sbb
add
mov
ret
mov
cmp
push
inc
enter
ja
sbb
jmp
push
gs
ja
(bad)
js
repz
scas
ds
je
fs
dec
pushf
cmp
pcmpgtd
sbb
fs
inc
pop
mov
pop
sub
sbb
push
xchg
frstor
cmp
rcl
ins
ins
add
cld
mov
aaa
jne
push
cs
xor
mov
push
icebp
stc
or
test
jle
inc
fisubr
adc
jno
inc
sahf
fisttp
ins
data16
adc
inc
rcl
xchg
sahf
dec
das
inc
cmps
imul
cli
push
mov
int3
jle
inc
jg
cs
pop
ret
cmp
and
pop
js
(bad)
jp
dec
xchg
fdivp
jp
xchg
and
dec
xchg
sub
mov
idiv
(bad)
idiv
stos
or
ss
xchg
jle
test
dec
mov
aaa
push
and
push
sbb
(bad)
or
cmc
jo
js
mov
repnz
xchg
jno
pop
sar
loopne
push
jl
add
sbb
inc
rol
test
push
lahf
test
sbb
pop
jle
stc
sahf
pop
ja
mov
in
rol
ds
push
dec
xlat
shl
mov
mov
in
cmps
fisttp
cmp
mov
aad
leave
cmp
cld
(bad)
sub
mov
and
rcr
cmps
jecxz
loop
add
mov
xchg
std
daa
mov
imul
jo
ret
sub
es
jno
pop
nop
pop
(bad)
pop
out
jne
(bad)
movs
test
sahf
push
jae
fisub
into
(bad)
pop
cmc
push
(bad)
stc
jb
mov
jns
cmps
dec
in
es
jg
iret
jnp
jnp
pop
jecxz
aaa
imul
fdivr
imul
sub
lods
popf
ins
retf
mov
mov
stc
and
int3
jno
out
add
sbb
mov
sbb
dec
sbb
cmp
xchg
xchg
cmp
push
mov
and
and
cmps
fidivr
ret
xchg
pop
or
adc
fcomp
les
pop
jp
int3
imul
push
cs
retf
jne
in
pop
mov
rol
adc
test
push
mov
jo
mov
aam
aam
retf
cmps
cmp
cmp
jecxz
sbb
sbb
dec
pop
test
xor
xchg
es
mov
sub
popa
lea
(bad)
nop
add
jp
sbb
mov
dec
shl
imul
jae
frndint
in
jbe
idiv
retf
ror
scas
cmp
fisttp
outs
loopne
not
mov
or
pop
add
xor
lock
cmc
pop
stc
lea
mov
jge
pop
nop
addr16
jecxz
lock
xor
(bad)
stc
sub
and
es
sbb
cs
loop
jp
cs
inc
jbe
imul
inc
xchg
mov
shr
cmp
test
pop
shr
add
jl
(bad)
fisttp
ss
fisub
jo
shl
fs
cmp
and
retf
sbb
les
dec
(bad)
nop
inc
and
mov
gs
pop
pop
cmp
cmp
dec
or
dec
dec
fnstsw
jecxz
test
div
push
pop
(bad)
xchg
sbb
jl
enter
jmp
dec
sbb
arpl
mov
mov
sbb
mov
xchg
mov
loop
xchg
jecxz
mov
pop
cs
icebp
xor
mov
div
push
pop
lock
mov
adc
cmp
enter
fs
out
(bad)
mov
xchg
xor
push
xchg
sbb
mov
cmp
adc
mov
mov
mov
cmp
push
into
push
sar
cmp
sbb
cmp
arpl
std
fwait
(bad)
ds
hlt
pop
fbld
mov
add
popf
mov
mov
and
or
repnz
repnz
repnz
sub
test
xor
call
idiv
ins
pushf
int3
dec
sub
ins
data16
mov
mov
add
dec
jl
sub
jg
xchg
xchg
pop
cs
shl
scas
outs
data16
jbe
cmp
and
add
mov
outs
mov
jp
imul
sahf
or
mov
or
mov
fiadd
shr
and
dec
jecxz
dec
sub
cmp
je
dec
aaa
(bad)
out
lods
inc
out
aaa
pusha
in
mov
add
std
mov
inc
push
loope
iret
jne
sti
pop
pop
test
cmp
cmp
add
xchg
mov
inc
shl
push
jecxz
cmp
sbb
pop
push
shr
or
sub
or
jcxz
and
data16
or
icebp
and
adc
jmp
rcl
arpl
hlt
pop
pop
mov
fild
xchg
sbb
shl
cmp
adc
rcl
dec
mov
(bad)
in
(bad)
xor
push
pop
xlat
loop
jo
cmp
enter
(bad)
push
cmp
cmp
jb
mov
xor
stos
or
cmp
fadd
push
mov
cld
mov
dec
add
cmp
pop
hlt
fmulp
aaa
inc
fwait
das
dec
std
es
push
pop
pop
mov
push
jl
aad
cld
inc
loopne
cmp
mov
imul
or
and
pusha
leave
mov
xor
push
outs
(bad)
loope
int3
push
loope
mov
or
out
add
xlat
xor
inc
test
shl
repz
(bad)
enter
arpl
lock
(bad)
out
mov
jmp
dec
pusha
jnp
adc
icebp
sti
scas
shl
enter
push
xor
call
std
jmp
icebp
adc
pop
inc
sub
enter
add
fcomp
pop
xchg
mov
jge
das
sar
push
mov
or
ret
shr
jns
adc
mov
stos
cmp
test
sbb
neg
inc
jne
cmp
jp
jno
xchg
int3
cmp
arpl
(bad)
stos
call
jno
pop
fisubr
popf
pop
sub
add
pop
loopne
in
js
pushf
lea
retf
das
nop
or
inc
or
inc
loope
jp
adc
in
pop
clc
popf
test
mov
xor
out
jg
stos
scas
test
iret
sar
imul
(bad)
push
inc
jno
dec
retf
ja
and
scas
push
rcr
fnstcw
or
push
test
outs
(bad)
xchg
mov
xchg
push
addr16
add
lock
(bad)
cld
pop
add
push
call
push
js
rcr
fucomp
out
mov
and
add
or
arpl
shl
rol
nop
cmp
stos
sbb
arpl
jmp
test
mov
dec
adc
pop
rol
shl
sbb
arpl
pop
mov
bound
inc
push
push
add
call
sbb
sbb
and
imul
add
push
ins
mov
add
add
sbb
dec
dec
dec
xor
xchg
int
xchg
in
daa
in
mov
out
das
aad
push
fldenv
push
mov
mov
mov
cmp
add
sti
or
xor
jbe
mov
mov
xlat
mov
dec
mov
push
mov
cmp
dec
jmp
pop
jmp
jb
mov
sub
in
fcom
gs
stos
xchg
pop
add
in
fld
lods
scas
ficomp
ficom
push
in
repz
dec
pusha
fsubrp
lods
fucomp
add
inc
mov
mov
or
pushf
jg
add
loope
or
xor
loop
jp
jmp
repz
lds
icebp
fadd
psadbw
les
enter
add
je
pusha
mov
cmps
xchg
adc
inc
or
lahf
xchg
add
mov
inc
(bad)
xor
pop
cmc
add
repnz
sub
push
aaa
ds
xor
inc
pop
pop
jb
fstp
int
cmp
clc
xchg
sbb
stc
dec
sub
jae
call
pop
imul
test
add
fwait
sti
sub
int
mov
add
xchg
mov
int
fistp
add
mov
sub
ret
mov
mov
inc
rol
std
pop
test
dec
mov
pushf
(bad)
shl
mov
inc
push
cli
pop
and
cmp
sbb
push
aam
in
ins
cmp
movs
and
lock
mov
and
xchg
popf
xchg
out
add
lods
mov
cmp
cmp
aaa
add
push
mov
jno
inc
pop
mov
inc
add
jecxz
or
mov
ja
sbb
outs
and
rcl
retf
dec
xchg
addr16
inc
cmp
inc
inc
iret
push
cwde
gs
inc
jo
and
dec
repnz
pop
pop
jecxz
xchg
call
pop
not
dec
cmp
retf
out
outs
rol
sbb
(bad)
xchg
nop
add
icebp
(bad)
sub
in
push
inc
imul
sbb
pop
or
sub
adc
jnp
xchg
add
pop
adc
mov
sbb
sub
dec
loop
xchg
push
jmp
repnz
int
mov
and
cwde
jmp
sti
and
test
xor
out
fld
add
push
or
(bad)
sbb
or
fistp
or
adc
daa
jno
and
adc
sub
push
sub
add
fwait
inc
add
loope
cs
cmc
loope
(bad)
mov
in
jp
int3
ror
inc
sub
or
xor
nop
mov
stc
jmp
push
jnp
sub
frstor
xor
sub
lds
inc
cmp
mov
pop
cmp
inc
(bad)
call
inc
shr
mov
out
push
sub
xor
gs
call
ret
pop
cmp
sbb
loopne
add
xchg
add
lods
je
out
(bad)
enter
mov
pushf
outs
xchg
mov
outs
adc
rcr
loopne
inc
out
dec
jge
dec
mov
ins
jne
mov
std
pop
mov
ss
ds
add
fidivr
fldenv
aam
cld
fisttp
sub
pop
hlt
in
in
cmp
jb
ins
int
mov
or
sar
add
imul
fs
mov
stos
sub
scas
addr16
iret
inc
xlat
leave
(bad)
stos
and
lds
test
out
mov
les
sbb
cli
cld
and
ins
dec
xchg
or
mov
je
and
(bad)
call
pushf
pop
or
jnp
dec
mov
sub
xchg
sbb
leave
out
xchg
or
sub
sub
movs
inc
sub
test
adc
cs
dec
inc
xchg
cmp
aam
and
add
mov
and
jmp
xchg
shl
adc
sbb
push
cmp
adc
dec
adc
mov
mov
mov
lods
push
push
and
and
and
or
add
fwait
gs
ret
loope
adc
inc
adc
cwde
jno
dec
sbb
es
and
sbb
iret
sub
mov
punpckhdq
or
xchg
shl
mov
ds
inc
test
fadd
push
(bad)
fimul
xlat
ins
cmps
jecxz
mov
push
xchg
enter
dec
imul
in
scas
mov
cmp
test
add
not
cmp
dec
mov
rcr
clc
pop
xor
adc
push
jae
outs
add
push
call
xchg
out
in
xchg
xchg
pop
inc
sbb
add
xor
sub
cmp
jl
je
ror
clc
push
pop
test
pushf
out
jo
into
kandnb
sbb
fwait
and
adc
jecxz
outs
jle
jb
dec
add
pushf
pop
pop
inc
add
mov
mov
pop
sbb
push
gs
(bad)
in
cmp
cmp
out
dec
pop
sti
mov
xor
mov
(bad)
or
pushf
xchg
inc
sbb
inc
fcomp
stos
mov
pop
retf
out
cs
inc
sub
mov
mov
push
mov
nop
adc
jo
cmp
cmp
push
xor
xor
fdiv
cmp
add
imul
adc
push
aaa
push
jmp
outs
jp
push
or
sbb
pop
xor
dec
and
cmp
xor
in
adc
inc
in
inc
nop
push
outs
mov
mov
lds
je
add
mov
mov
mov
xchg
ss
jo
mov
adc
mov
mov
xchg
jb
dec
inc
movs
js
call
jb
and
add
addr16
rcr
test
int
and
ficom
mov
enter
xlat
retf
aaa
ins
lahf
lds
cmc
or
arpl
(bad)
sbb
iret
jle
sub
cmp
mov
dec
inc
mov
xchg
jp
dec
jmp
mov
mov
(bad)
ret
out
dec
loope
shl
xchg
sbb
test
(bad)
sub
jl
test
fistp
in
jl
or
push
mov
fnstenv
imul
pop
mov
and
test
fdivr
mov
ficomp
imul
pop
bswap
retf
les
mov
cld
adc
jns
arpl
cmp
(bad)
sar
icebp
push
push
xchg
imul
xor
sti
cmp
clc
inc
mov
leave
push
cmc
aaa
sub
imul
out
mov
imul
xchg
(bad)
mov
(bad)
ds
popa
(bad)
call
jmp
sub
mov
jp
pop
pop
xlat
jno
inc
dec
into
(bad)
leave
les
jmp
xlat
call
inc
mov
shr
pop
jo
xchg
retf
xor
ins
sahf
popa
hlt
and
jne
jno
retf
lods
jg
rcr
loop
xor
outs
(bad)
ficom
lea
sub
mov
jle
loop
sahf
jmp
mov
cmps
(bad)
loopne
js
dec
mov
xor
dec
int
lea
or
mov
add
jmp
fsubp
outs
add
sub
(bad)
mov
je
jmp
bound
jg
mov
ficom
cmps
ss
jo
adc
neg
scas
add
dec
arpl
xchg
xchg
(bad)
not
in
jmp
aam
jmp
jno
(bad)
push
rcl
dec
mov
sbb
shl
ret
jae
in
cmp
cmp
arpl
sbb
cmp
push
xor
push
jno
mov
cmp
out
stos
(bad)
out
xor
dec
out
add
sbb
xor
jnp
mov
inc
iret
je
imul
inc
mov
xor
and
xor
int3
aaa
mov
dec
xchg
mov
xchg
hlt
mov
xlat
sti
adc
cdq
test
inc
sub
loope
rcr
fsubr
mov
sub
dec
imul
cmp
stos
arpl
push
leave
mov
cmp
icebp
fld
fs
test
sub
call
adc
call
arpl
in
push
movs
jae
inc
jmp
cmp
pop
and
pop
retf
arpl
jnp
sbb
cmp
sbb
push
(bad)
test
mov
rol
mov
adc
push
push
mov
iret
xchg
xor
call
mov
xchg
dec
loopne
mov
int3
jl
ret
dec
push
sar
out
xchg
inc
jns
int3
out
out
cmp
sahf
xchg
fstp
jecxz
mov
cmp
push
mov
jno
outs
cwde
shr
das
loopne
mov
loop
adc
clc
iret
add
out
scas
enter
pop
push
lds
sbb
fwait
dec
hlt
xchg
(bad)
fcomip
mov
loopne
ins
cmps
mov
ins
shl
add
jmp
adc
or
outs
hlt
xchg
out
inc
lods
fisub
lods
push
fs
adc
and
xchg
inc
(bad)
fstp
js
xor
and
mov
jmp
xchg
xchg
push
xor
loopne
fist
push
mov
xor
mov
rcl
jmp
mov
mov
mov
cmp
pop
imul
lods
mov
mov
int
sbb
inc
dec
xchg
call
adc
dec
mov
add
out
daa
retf
loope
xchg
(bad)
imul
xchg
and
mov
sbb
jae
loope
mov
adc
aad
int3
cwde
dec
and
loopne
movs
push
in
add
push
(bad)
mov
push
ror
movs
je
xchg
out
repnz
test
cmps
jae
pop
stc
jb
xchg
shl
xor
psllq
dec
mov
call
adc
cmp
mov
data16
jns
rcl
jge
aad
imul
or
lea
cld
mov
fld
daa
setle
xchg
xor
call
cwde
idiv
inc
dec
loope
push
test
dec
xor
or
shl
xchg
fstp
(bad)
sbb
jecxz
push
aas
daa
push
add
mov
nop
aaa
jbe
mov
out
add
xor
aas
ins
sub
mov
lea
loopne
and
imul
es
test
mov
or
mov
mov
sub
pushf
or
xchg
cdq
das
push
inc
popa
mov
cwde
dec
jne
test
(bad)
mov
cmp
repnz
cmp
gs
cmp
ss
clc
mov
fidivr
and
imul
xchg
mov
mov
(bad)
je
in
or
pmaddwd
mov
jb
jmp
je
leave
mov
adc
imul
cli
xchg
outs
mov
jns
ds
mov
nop
sahf
mov
imul
mov
fcom
into
outs
cmp
inc
into
fcomip
lea
mov
xchg
nop
sbb
dec
jmp
iret
xchg
(bad)
pop
jl
(bad)
push
inc
mov
dec
loopne
push
jle
mov
loopne
out
fcom
jecxz
test
cmps
jb
loope
fwait
lea
jl
cld
mov
and
stc
ins
push
push
outs
in
ret
jae
xchg
mov
in
out
arpl
xor
sbb
mov
and
pop
(bad)
out
adc
out
and
jp
sub
mov
sub
add
(bad)
fst
mov
jge
das
push
loope
adc
aaa
cmp
cmp
mov
hlt
mov
cdq
xchg
stos
sbb
enterw
pusha
pop
dec
inc
add
cli
data16
xchg
gs
jnp
into
cdq
movs
dec
fwait
lahf
push
xor
mov
sub
cmp
mov
mov
mov
jle
push
int
jecxz
retf
or
gs
movs
inc
or
imul
push
xchg
cmovg
xchg
xor
and
retf
mov
(bad)
xchg
mov
es
arpl
xchg
cmp
mov
cmp
pop
inc
icebp
xor
sbb
mov
add
xchg
push
cmp
mov
mov
sbb
imul
mov
jns
neg
mov
xor
xchg
pop
out
(bad)
inc
dec
out
ficomp
push
stos
or
data16
jae
cmp
cmp
xchg
lea
sar
jo
xlat
mov
fimul
jae
(bad)
cli
sbb
mov
stos
gs
repnz
push
or
push
cmc
jnp
push
add
ins
imul
mov
pop
movd
sub
pop
leave
and
imul
in
adc
mov
fstp
outs
xchg
imul
mov
add
mov
sub
(bad)
aas
jne
dec
xchg
daa
(bad)
xchg
leave
xor
and
ds
cmp
pop
scas
jbe
sti
pop
sbb
cli
dec
sbb
xor
fcmovne
mov
idiv
idiv
sub
pop
add
and
cmp
mov
in
mov
xlat
imul
jmp
stos
and
fcmovu
mov
cmp
pusha
sub
cmps
xchg
dec
sbb
or
leave
popa
cmps
cmp
adc
ds
retf
jle
mov
sub
xor
cmps
and
outs
add
xchg
adc
icebp
and
jnp
add
xor
cmp
cdq
frstor
mov
(bad)
jb
add
mov
loope
nop
pop
sub
je
adc
xor
mov
xchg
sbb
and
adc
int3
adc
(bad)
push
mov
xor
test
adc
retfw
xchg
jmp
cmps
mov
lea
mov
mov
lahf
and
(bad)
sub
in
(bad)
aad
in
test
mov
mov
inc
sub
xor
pop
mov
add
enter
mov
retf
mov
adc
rcl
je
mov
fsub
ret
pushf
pop
aad
loope
mov
jmp
in
rcr
cmp
pop
ss
and
jle
scas
das
pop
or
idiv
mov
ins
and
cld
icebp
sbb
or
xlat
aas
das
dec
(bad)
enter
int3
imul
xor
shr
imul
xlat
mov
movs
retf
dec
or
push
sub
xor
jle
repz
jne
in
test
sub
lahf
shl
inc
mov
cmp
mov
sub
cld
scas
xchg
icebp
andps
popa
xchg
lods
mov
int3
retf
mov
jae
mov
hlt
test
mov
shl
aam
std
pop
popa
lahf
int3
scas
or
add
dec
mov
ins
call
imul
pop
xor
cdq
xchg
push
cmp
jae
daa
movs
int3
gs
int
adc
sub
mov
out
shl
cs
imul
ds
outs
push
daa
lock
mov
dec
xor
pop
es
int
test
sbb
mov
xor
sahf
jl
sbb
ins
xlat
in
mov
mov
jecxz
sub
add
mov
inc
adc
inc
dec
cs
mov
inc
pop
(bad)
xchg
dec
pop
mov
push
in
ds
repnz
js
push
rcr
js
test
mov
pop
xor
xor
jmp
scas
ds
mov
(bad)
xor
mov
hlt
push
test
mov
inc
ror
pushf
pop
fnsave
ret
mov
or
loope
xor
mov
push
scas
xchg
sahf
ret
inc
sub
sub
out
in
cmp
out
cmp
jbe
pop
mov
inc
cmp
jle
es
sbb
fs
in
jge
aaa
(bad)
lea
inc
fs
lods
repnz
scas
sbb
sub
idiv
scas
sbb
cmc
aas
jmp
jmp
cmp
dec
sbb
mov
mov
mov
(bad)
dec
and
movs
outs
add
ret
xor
pop
aam
jb
retf
jo
pop
jmp
xchg
cli
out
rcl
jl
mov
xchg
lods
je
jae
xlat
adc
mov
pop
not
xchg
ror
sub
out
lods
int
stos
mov
ret
repnz
sub
add
push
inc
mov
cmps
ds
out
mov
test
jle
xor
mov
sub
push
fisttp
jo
xor
inc
rol
ss
push
ins
jns
xchg
arpl
or
jo
jne
not
pop
sbb
push
mov
das
mov
ja
jecxz
pop
into
and
push
imul
ja
jl
lea
and
jae
sub
iret
lods
(bad)
fnstcw
fnsetpm(287
sbb
xchg
rol
int
jo
pop
arpl
pop
iret
dec
jb
retf
sub
neg
pop
inc
enter
xor
and
mov
inc
ins
out
test
inc
mov
push
push
out
scas
push
mov
or
fnop
outs
(bad)
jg
xchg
xchg
mov
outs
mov
jae
je
pop
stc
jns
jo
push
aaa
cmp
sub
out
and
pop
sub
icebp
cmc
add
push
jmp
and
mov
fs
aad
xchg
mov
inc
movs
clc
sbb
es
inc
cdq
call
scas
loope
jecxz
div
jns
ror
sub
adc
add
int
mov
cwde
fadd
jnp
xchg
cmp
cmps
mov
dec
movs
cli
pop
cmp
jae
xor
mov
clc
mov
daa
mov
ret
mov
jp
fimul
jo
je
(bad)
cmps
out
cmp
aas
fwait
loop
cld
int
ficomp
pop
sbb
retf
jns
fcmovbe
ds
imul
ret
adc
jns
push
mov
in
repnz
jle
xchg
fs
stos
test
cmp
jp
pop
pop
aaa
jmp
xchg
fdiv
xchg
dec
cmp
fadd
addr16
mov
pop
sbb
into
stos
push
xor
jns
ja
xchg
jp
test
repnz
cmp
mov
pop
(bad)
jl
dec
leave
jbe
movs
push
inc
mov
jge
call
cmp
int
sub
dec
sbb
pop
ret
mov
sbb
inc
and
inc
movs
in
inc
leave
xor
popa
(bad)
shl
fdivr
sbb
data16
mov
jmp
xchg
mov
pushf
test
mov
out
pop
push
push
dec
ins
pop
push
mov
jo
add
mov
fs
(bad)
out
jmp
nop
fstp
pop
das
pop
push
and
and
inc
jb
add
js
cmp
sbb
mov
inc
fwait
out
inc
dec
scas
fwait
jne
sbb
push
enter
addr16
mov
pop
jo
mov
jecxz
mov
sti
sti
cs
sbb
fwait
sbb
(bad)
xlat
loope
je
ja
bound
pop
pop
(bad)
inc
div
out
mov
je
xor
mov
xchg
jle
mov
in
mov
cmp
pusha
int3
add
repnz
adc
enter
fnsave
lahf
cdq
lea
adc
jae
(bad)
out
pop
in
mov
push
and
jmp
sbb
and
div
push
in
shr
lods
push
jne
sub
jl
nop
inc
(bad)
xchg
pop
dec
out
push
jg
dec
jo
(bad)
pop
loope
call
shl
or
cmps
arpl
pusha
call
mov
popa
sbb
xor
mov
jno
push
dec
lock
add
fidivr
add
cmp
jl
xchg
dec
not
div
imul
repz
pusha
and
jns
jmp
jo
out
leave
out
or
dec
cmp
enter
mov
push
fistp
retf
into
ret
fwait
push
adc
jecxz
pop
ss
jp
mov
rcr
xchg
sub
in
sub
push
mov
std
sti
stos
mov
mov
inc
mov
mov
scas
sahf
push
push
pop
xor
sar
jp
pop
add
xor
cmp
xchg
push
dec
shl
jmp
ds
fnstenv
or
(bad)
bound
or
pop
sbb
cmp
sbb
add
pusha
push
cli
les
aaa
arpl
and
lock
jno
out
or
and
loope
rcl
dec
cmp
and
out
sub
imul
shl
inc
push
(bad)
jb
lahf
xchg
mov
xor
(bad)
stc
xchg
scas
xchg
les
mov
aaa
ror
jl
xlat
outs
pusha
mov
push
outs
arpl
push
push
mov
lods
xor
or
mov
dec
jl
cli
lods
adc
mov
and
loopne
cmp
cli
in
sbb
push
pop
and
xchg
inc
push
in
xor
add
lock
xchg
sub
cmps
retf
cmp
fst
mov
aad
lea
and
push
cmp
je
xchg
gs
mov
cdq
mov
aam
or
(bad)
loope
xor
push
pop
sbb
ret
lea
jp
cmp
cld
icebp
sub
aam
cwde
in
or
cmp
cli
pop
dec
cli
scas
fidiv
retf
and
pop
lock
dec
(bad)
push
shl
xchg
xchg
repz
cmp
bswap
and
push
xchg
lea
pop
pop
das
pop
popf
loopne
pop
pop
pop
cmc
jo
cdq
push
push
ja
loopne
out
pop
fsub
ror
mov
mov
cmc
scas
mov
adc
into
out
xchg
imul
movs
mov
mov
cmp
aaa
jns
push
inc
lods
jae
pop
sbb
fnstenv
ds
das
(bad)
xor
into
imul
pop
test
inc
push
shl
shl
sbb
data16
dec
test
into
xor
int
fild
xchg
xchg
out
popa
fnsave
clc
ds
mov
lock
and
xor
jo
stos
mov
mov
(bad)
push
push
add
scas
mov
enter
mov
inc
xchg
loope
icebp
xchg
adc
call
or
imul
adc
and
or
cld
adc
jbe
lock
xchg
sar
xor
xchg
mov
scas
add
mov
icebp
mov
addr16
cmpps
xchg
xchg
je
adc
retf
in
loop
out
jl
adc
xlat
and
fdivr
push
cld
xchg
pop
inc
(bad)
or
stos
loope
addr16
jno
outs
or
imul
cs
adc
push
mov
adc
iret
and
and
push
jbe
mov
test
push
dec
test
pop
adc
xlat
rcl
test
scas
sub
pop
fldenv
pop
js
xchg
sub
mov
inc
cli
ja
sti
test
and
xchg
xchg
xor
test
push
inc
add
fs
je
inc
add
cs
mov
ins
jnp
sbb
lods
test
push
lock
or
arpl
ins
push
nop
repnz
jg
gs
pop
mov
hlt
push
push
int
out
cs
pop
fcomp
pop
jne
jns
xchg
sti
sub
mov
inc
in
lods
xor
xor
adc
add
sahf
push
add
adc
in
lods
outs
cmp
and
sbb
adc
cmp
es
ffree
neg
xchg
or
dec
lods
shl
cmp
adc
inc
xchg
dec
dec
ss
xor
sub
push
xor
ret
scas
and
lahf
pop
call
ins
sub
(bad)
mov
(bad)
sub
jl
inc
lahf
jmp
pop
sbb
and
shl
sti
sub
cmp
int
cs
pusha
enter
sbb
sbb
test
and
push
jl
xchg
jle
xchg
push
pop
pop
xlat
dec
lock
inc
cmove
lahf
js
push
ins
jl
xor
xchg
scas
cmp
or
cmp
cmp
jnp
shl
mov
scas
(bad)
repz
inc
cmp
pushf
mov
jo
(bad)
int3
pop
add
sti
scas
jl
int
push
mov
inc
ins
or
mov
repz
repnz
outs
shl
push
inc
cmp
fnstenv
pop
xchg
idiv
retf
push
sets
sbb
add
fwait
push
jae
es
shr
imul
imul
pop
fldenv
repnz
jge
jmp
test
push
cmp
cmp
inc
cwde
ins
outs
repnz
fcmovnu
mov
or
mov
mov
int3
leave
mov
ins
adc
pop
sbb
fsubr
and
jno
mov
pop
and
fsub
dec
fstp
xor
outs
jne
int3
out
jmp
cmp
xchg
inc
push
mov
fsubr
sti
and
add
xor
mov
and
jge
add
xchg
ja
ja
xchg
dec
or
adc
test
or
cmp
jge
je
scas
sub
adc
pop
mov
test
sub
pop
mov
shl
stos
or
add
outs
fucomp
pop
adc
inc
add
test
aaa
xchg
movs
mov
imul
and
out
cmp
and
imul
or
or
shr
push
jns
dec
sbb
push
jp
sti
sub
inc
aaa
test
retfw
add
inc
sar
jne
mov
mov
out
in
ror
xchg
mov
retf
push
(bad)
out
push
(bad)
adc
mov
sub
jge
into
shl
cmp
(bad)
aam
lds
mov
add
add
add
push
jl
and
adc
inc
adc
or
xchg
adc
mov
pop
adc
adc
not
push
mov
lds
jo
leave
pop
pop
aaa
push
je
retf
jno
xchg
pusha
add
nop
mov
dec
inc
push
ficom
mov
adc
dec
dec
inc
gs
push
jnp
and
test
ss
mov
adc
retf
movs
push
mov
aas
stos
mov
int
or
pop
jl
aam
mov
cs
enter
jne
mov
push
mov
add
mov
(bad)
sbb
int3
and
mov
icebp
mov
sub
push
adc
fmul
cmp
stos
or
call
mov
pop
aaa
hlt
mov
sub
movs
lea
lds
pop
xchg
mov
mov
stos
mov
es
int
(bad)
mov
js
jnp
dec
mov
sti
sub
xor
mov
call
test
inc
sbb
(bad)
call
sbb
and
and
mov
mov
movs
or
and
adc
ror
dec
xchg
and
ins
fsubp
add
arpl
mov
and
aaa
shl
mov
hlt
add
retf
rol
cmc
pop
xchg
sub
loop
sahf
cmp
xchg
and
inc
jno
or
repz
mov
test
retf
les
ret
mov
dec
and
jp
inc
sub
inc
xchg
add
sbb
xlat
fnstenv
add
test
and
je
mov
add
sbb
lods
les
retf
cmps
mov
lea
je
shl
lds
dec
adc
pop
cld
mov
test
jg
ins
jns
adc
or
mov
aad
jl
xchg
push
or
movs
push
xchg
lock
sub
xchg
mov
lahf
gs
fwait
and
push
inc
call
sub
aam
pop
jmp
hlt
dec
jbe
addr16
inc
std
mov
adc
pop
jmp
jle
push
sub
xor
xchg
pop
nop
push
inc
or
push
adc
aam
not
aaa
aaa
aam
shl
test
xlat
push
sbb
loopne
ins
pusha
xchg
int
sub
mov
cmp
ret
test
in
fisubr
dec
scas
scas
cmp
movs
in
outs
rcr
mov
mov
in
xchg
shl
xchg
push
adc
pop
and
push
aaa
(bad)
sub
scas
sahf
or
das
mov
adc
mov
sahf
or
imul
out
sbb
ja
jb
mov
jmp
(bad)
sbb
xchg
adc
mov
cmp
in
mov
jecxz
loope
imul
add
jne
pop
retf
xchg
(bad)
je
add
jns
int
mov
lods
xchg
or
push
loop
xchg
test
push
sub
and
js
inc
ins
mov
pop
push
inc
xchg
xor
aad
cli
pop
push
pop
int
and
shl
mov
(bad)
pop
adc
data16
cs
push
jne
fwait
inc
add
fcom
adc
stc
cmp
test
ret
imul
movs
repz
mov
adc
jno
add
xchg
pop
into
jmp
mov
dec
mov
sbb
jb
dec
xchg
inc
imul
xor
es
or
add
fst
lods
push
jg
retf
fbld
jb
in
push
xor
jmp
loop
je
cmp
add
jecxz
inc
pop
pop
cmc
push
inc
fstp
adc
cmp
xchg
mov
add
push
pop
nop
inc
mov
xchg
in
fdiv
stos
mov
sahf
sbb
xchg
(bad)
iret
aam
stos
push
jb
inc
cmp
pop
lahf
retf
retf
push
xor
push
mov
or
(bad)
fcomp
mov
jne
cmps
sub
dec
in
jl
cmp
dec
dec
add
out
out
mov
shl
xor
adc
pop
jno
mov
iret
shl
test
xchg
dec
xor
cmp
ja
outs
(bad)
pop
push
ins
outs
push
jno
adc
fidiv
xchg
ds
mov
shl
in
outs
pusha
mov
or
cmp
inc
jl
xchg
sbb
jne
cmp
imul
xchg
mov
sbb
sbb
dec
pop
jmp
mov
and
cmp
mov
mov
in
adc
enterw
ins
movs
mov
stc
pop
cmp
mov
mov
cmp
(bad)
xor
div
jae
mov
shl
cmps
retf
xchg
xchg
xchg
cmp
arpl
into
pop
ret
out
enter
(bad)
jmp
pop
fisttp
repnz
repnz
xor
(bad)
stc
stc
dec
call
push
xor
jno
xchg
sbb
adc
mov
jno
lods
push
inc
enter
fadd
mov
sbb
shr
jo
test
int
movs
mov
mov
gs
pop
jecxz
add
mov
mov
inc
in
imul
dec
inc
sub
pop
(bad)
dec
xchg
mov
push
cmp
gs
repz
push
add
mov
fadd
out
push
in
xlat
ret
mov
jmp
inc
lahf
sub
movs
retf
ds
not
nop
jmp
sbb
push
xchg
and
aaa
cmp
aam
(bad)
push
add
sahf
mov
in
xchg
fwait
hlt
jl
xor
dec
scas
sub
xor
hlt
add
imul
loop
jo
add
dec
in
mov
rcr
or
test
pop
sbb
(bad)
fld
mov
or
in
out
clc
(bad)
dec
lea
cmp
mov
movs
loop
cmp
pop
sub
adc
or
sub
out
ja
in
aam
lds
dec
xchg
xchg
xchg
adc
imul
push
jg
push
aam
mov
push
mov
adc
sahf
clc
es
out
jmp
mov
push
ins
cs
mov
sti
sub
in
mov
or
icebp
jb
jno
pop
mov
sahf
inc
or
cdq
add
inc
inc
mov
cld
mov
loop
or
sahf
mov
add
jp
push
sbb
adc
test
and
xor
movs
addr16
fmul
out
cmps
jno
clc
dec
lea
in
jnp
fistp
mov
out
cmp
sbb
cmps
test
mov
mov
(bad)
xor
fsub
std
jbe
xor
xchg
jmp
xor
jecxz
nop
dec
int
ss
inc
mov
ins
add
(bad)
(bad)
or
in
push
fadd
xor
idiv
xor
pop
popa
mov
sti
stos
and
repnz
mov
cs
mov
ror
(bad)
ficomp
daa
test
(bad)
arpl
pop
xor
xchg
inc
dec
imul
inc
push
dec
pop
in
push
cmp
push
imul
out
and
cmps
jecxz
mov
add
and
inc
xchg
sbb
dec
add
mov
rol
sbb
je
in
arpl
inc
inc
and
sub
mov
jnp
mov
sahf
cwde
sbb
jnp
add
push
jmp
mov
mov
pop
arpl
fcom
in
lock
mov
repz
xor
popf
xor
cmp
or
push
cmp
xchg
lods
loopne
aaa
rcl
div
retf
cmc
nop
out
ja
inc
popa
and
cmp
out
iret
(bad)
mov
adc
test
scas
fsubr
pop
lds
loopne
in
jb
mov
or
ret
sbb
add
dec
jbe
mov
(bad)
xchg
dec
(bad)
push
pop
mov
cmps
pop
mov
enter
stc
outs
mov
add
pop
pop
ret
in
dec
cmp
in
lods
(bad)
adc
nop
mov
add
jae
mov
jge
cmp
(bad)
jbe
jmp
mov
in
call
popf
or
rol
das
pop
and
outs
xchg
loopne
sbb
repnz
sbb
adc
ret
lock
and
shl
std
pop
enter
aam
jmp
mov
(bad)
mov
jecxz
xor
int3
mov
xchg
cmp
or
push
push
cdq
mov
and
aas
push
lahf
test
jno
add
(bad)
out
mov
shl
push
mov
add
fwait
sub
in
retf
(bad)
cmps
arpl
scas
xor
dec
fnstenv
inc
pop
retf
mov
cmps
sbb
pusha
ins
mov
adc
lods
js
clc
ins
arpl
leave
fidivr
mov
xchg
xchg
stc
mov
or
fnsave
fdiv
data16
(bad)
je
mov
or
mov
cld
rcl
loope
jmp
(bad)
jmp
dec
test
pusha
aad
xor
inc
pop
sbb
sub
fwait
and
push
mov
jno
jo
sub
fist
sbb
xlat
inc
loopne
jp
call
(bad)
shl
jne
out
pop
mov
and
add
mov
fcomp
or
hlt
or
mov
dec
inc
es
mov
ret
push
adc
imul
adc
inc
sub
jne
div
stos
fs
pop
div
addr16
jmp
xor
sbb
(bad)
popf
rcl
mov
popf
adc
outs
cdq
ret
aam
shl
sbb
iret
lahf
dec
lock
nop
ss
ret
push
into
fisub
rol
cmp
nop
pop
fisttp
mov
adc
and
fdivr
ficom
xor
sbb
es
pop
ja
adc
out
lock
xor
xor
cmps
enter
jg
in
sar
push
sbb
out
icebp
data16
pop
pop
xor
push
arpl
sbb
neg
scas
xchg
mov
(bad)
lock
aaa
xchg
das
aas
arpl
mov
lds
and
mov
adc
jnp
dec
ins
stos
ja
addr16
dec
repnz
repz
(bad)
cwde
sbb
mov
cmp
xchg
dec
xor
jl
add
jl
mov
fisttp
test
stc
js
mov
or
mov
and
xchg
loop
movs
sti
inc
pop
add
mov
shl
inc
in
mov
fst
int3
(bad)
lds
adc
outs
cmp
push
mov
cs
sub
pop
(bad)
jns
stos
xor
dec
js
test
sbb
outs
push
ins
jae
f2xm1
loope
inc
js
dec
loope
outs
jae
inc
out
xor
bound
dec
aas
push
pop
cmp
ret
cld
sub
dec
cs
fld
ins
xor
push
cmps
ret
clc
scas
mov
mov
sbb
mov
push
inc
push
pop
jg
xor
sahf
cmp
push
repnz
pop
xchg
mov
dec
daa
(bad)
and
cli
cdq
inc
test
fiadd
outs
cld
sub
pop
test
xchg
mov
in
rol
mov
push
ins
iret
popa
xchg
imul
(bad)
jmp
rep
pushf
fstp
(bad)
out
mov
jne
outs
lds
pop
push
pop
out
out
lahf
mov
ins
pop
arpl
cmp
lds
jg
and
or
push
(bad)
and
movs
dec
stc
sbb
repz
sbb
add
cs
cmp
dec
(bad)
push
adc
xchg
adc
add
adc
nop
cmp
push
sbb
sub
and
xor
aad
jns
jae
xchg
xchg
sbb
and
jge
call
mov
xchg
push
mov
gs
push
test
xor
pop
push
inc
inc
push
dec
sub
sub
fwait
mov
fcomp
dec
xor
fild
pop
dec
outs
cmps
fsub
fist
sub
and
pop
fs
push
dec
addr16
stos
fsubp
jns
sar
pop
shl
pushf
out
jp
and
addr16
mov
js
gs
ror
fmul
not
xchg
sbb
jns
iret
in
jle
addr16
pusha
fmul
and
push
jmp
pop
mov
add
outs
pop
xchg
mov
(bad)
adc
ficomp
jg
fst
out
repz
xor
push
jle
jno
jbe
aaa
sbb
fst
or
cdq
cmp
aaa
xor
outs
xchg
popa
xchg
sub
pop
push
(bad)
loopne
out
xor
std
fcom
inc
and
xor
arpl
adc
inc
mov
mov
push
rol
push
dec
pop
iret
sub
mov
in
nop
shl
xor
mov
outs
out
xor
(bad)
add
xor
add
jns
cmp
outs
xlat
xor
inc
cwde
repz
push
xchg
jle
inc
std
inc
stc
pop
(bad)
pop
dec
lds
fisubr
xchg
int3
xor
sahf
inc
js
and
pop
sti
sub
xchg
sub
jmp
xchg
loopne
(bad)
aam
cmps
loopne
dec
shl
jo
shl
int
cmp
in
lods
jecxz
fidivr
outs
or
jb
dec
ins
mov
mov
jl
(bad)
in
mov
and
aaa
stos
cli
add
mov
stc
jno
add
cs
fdivr
int
icebp
hlt
jbe
in
enter
mov
hlt
dec
xlat
pop
xchg
jno
(bad)
dec
xchg
call
cmp
in
lods
rol
pusha
push
out
inc
not
push
inc
sub
iret
push
or
ss
xchg
cmc
xchg
ret
sbb
neg
mov
je
pop
mov
dec
dec
fmul
fimul
daa
leave
or
leave
cdq
movs
out
popa
or
repnz
push
call
fadd
psraw
mov
lea
push
cs
rcr
arpl
popa
pop
mov
and
(bad)
jae
mov
fcomp
loope
shr
sbb
packsswb
mov
push
jbe
cmps
xor
daa
inc
(bad)
call
jo
scas
jl
xchg
imul
icebp
clc
sub
cdq
(bad)
sub
loop
dec
in
jne
lods
in
inc
jbe
adc
xchg
(bad)
out
(bad)
pop
shl
(bad)
idiv
call
shl
clc
jno
mov
aas
fnstcw
fsub
shl
hlt
out
sar
add
(bad)
adc
jb
out
cmp
pop
addr16
daa
mov
scas
push
clc
jl
(bad)
nop
jbe
nop
jp
mov
cmp
sbb
sbb
cli
pushf
dec
jg
out
jno
pop
sub
and
fldenv
or
cli
test
push
pop
cs
jge
ds
dec
or
outs
jnp
jae
fisub
cs
dec
jmp
inc
out
pop
cmp
jno
lods
or
cmp
sbb
fidivr
outs
cmps
push
pop
or
xor
ss
push
jo
(bad)
sbb
fisub
cld
test
in
mov
jne
jne
in
pop
stc
pop
fist
js
sbb
cmp
outs
stos
xchg
jle
movs
xor
out
adc
mov
fucomi
test
mov
mov
fwait
shl
sub
jle
pop
neg
dec
cld
sub
push
jns
(bad)
ffree
gs
jbe
popf
je
pusha
cmp
jae
leave
pop
fwait
pop
mov
aad
cdq
jns
lds
ficomp
xchg
mov
and
dec
sbb
jp
lds
out
arpl
fwait
sbb
mov
pop
int
adc
sbb
(bad)
sbb
add
ins
retf
xor
jl
mov
icebp
push
mov
lods
xchg
add
mov
ja
xchg
xchg
fnsetpm(287
sahf
sub
add
jle
in
bound
jle
mov
vpextrw
push
adc
gs
jmp
or
aas
les
jb
xor
inc
ret
cmps
add
aam
push
cmp
pop
rcr
scas
repz
mov
ss
shl
sti
mov
daa
es
dec
inc
xchg
(bad)
mov
sbb
popf
les
sub
cld
repnz
enter
outs
test
ds
mov
lods
sbb
ficomp
(bad)
fs
sbb
inc
xchg
inc
popf
and
fldenv
ror
in
mov
mov
out
and
adc
dec
xchg
(bad)
fsub
fs
dec
loopne
repnz
test
or
sub
xchg
ficom
fs
(bad)
pusha
mov
movs
in
(bad)
mov
mov
pop
sub
jnp
pop
mov
in
xchg
dec
mov
sub
jge
out
fiadd
retf
(bad)
xchg
cmp
scas
cmp
stos
out
push
pop
add
icebp
cld
test
data16
cdq
pop
outs
fnstsw
fwait
je
xor
mov
cmp
xchg
xchg
jae
jae
push
imul
dec
out
je
jne
mov
in
arpl
dec
mov
cli
arpl
mov
cmp
xor
mov
pop
sbb
push
pop
inc
leave
jl
out
imul
push
int3
int3
mov
ja
mov
fistp
(bad)
retf
scas
xchg
push
jle
sbb
(bad)
cmp
iret
fstp
pop
test
retf
inc
daa
xor
cmpps
in
inc
xchg
and
mov
ss
fstp
mov
mov
xchg
das
out
test
jl
loopne
leave
pushf
mov
in
inc
mov
adc
int3
out
jns
inc
sbb
aaa
push
(bad)
retf
adc
lock
arpl
and
mov
retf
aas
push
or
fld
push
mov
ja
jg
rcr
mov
jnp
call
sbb
bnd
gs
sub
pop
push
loope
in
lea
sub
ror
fwait
and
mov
pop
movs
arpl
pop
sub
jnp
jle
inc
push
ss
call
jo
xchg
xchg
fdiv
out
sbb
lock
fbstp
push
je
xchg
in
faddp
ins
mov
xchg
lahf
leave
pop
mov
mov
or
cmp
pop
sub
repnz
jns
cli
jae
push
adc
ror
add
es
push
xchg
or
repnz
and
add
lahf
xchg
cs
mov
mov
lock
out
push
mov
loopne
or
jecxz
cmp
ins
or
pop
lock
add
ds
xchg
fwait
sahf
es
jns
mov
sbb
sbb
scas
adc
xchg
dec
mov
fadd
cmp
sub
imul
jnp
cmp
pop
rcr
mov
loopne
das
sub
(bad)
push
fist
xor
add
ret
(bad)
cld
scas
sub
inc
pop
(bad)
mov
xor
retf
retf
out
mov
retf
clc
loope
ret
xchg
sub
(bad)
out
cmps
cmp
push
pusha
mov
inc
dec
nop
imul
punpcklbw
jnp
enter
rol
popa
mov
ror
lgs
push
imul
or
enter
cs
xor
ja
int3
out
dec
push
push
jmp
cmp
shl
adc
jns
addr16
sbb
cwde
popa
adc
fst
sbb
iret
push
mov
pop
adc
add
xchg
stc
ds
lock
daa
test
cmp
xor
xchg
pop
sbb
aaa
add
xchg
in
popa
cli
fwait
jg
in
jmp
sbb
outs
mov
cli
inc
jmp
add
sar
add
cmp
(bad)
in
in
cdq
(bad)
fcmovb
sub
and
or
sub
addr16
mov
fmul
or
sub
xchg
mov
xchg
pop
(bad)
leave
in
lock
arpl
mov
add
les
lahf
add
neg
inc
lds
arpl
xchg
dec
cmp
ss
std
ds
cmp
leave
push
cmp
cmp
pop
data16
dec
(bad)
inc
mov
sbb
mov
cmp
in
nop
mov
cmp
in
les
push
mov
xor
test
jmp
into
ds
es
cs
inc
lods
aas
std
fsubr
test
aaa
sbb
jae
mov
js
cwde
dec
jl
sbb
mov
fs
leave
mov
xchg
or
push
imul
shl
scas
jae
xchg
fyl2x
std
jnp
jo
aam
add
jecxz
pop
and
adc
pop
sbb
dec
scas
popf
add
sbb
retf
(bad)
ror
dec
inc
dec
xchg
pop
outs
adc
hlt
jge
cmp
test
or
fistp
enter
js
or
fcmovu
or
jecxz
test
xchg
push
aam
fs
repnz
pop
(bad)
mov
repz
mov
or
xchg
dec
xor
imul
das
sbb
push
int3
(bad)
xchg
xor
hlt
cdq
sub
or
mov
test
cdq
push
mov
xchg
icebp
mov
out
pop
jne
lahf
in
mov
dec
xchg
scas
mov
iret
jbe
mov
dec
sbb
jnp
fsubr
xchg
fsub
cli
jnp
test
mov
loope
cld
fst
iret
or
and
jae
sbb
mov
fisttp
pop
sbb
daa
xchg
repz
cmp
cmp
enter
ja
mov
inc
out
dec
ss
inc
int3
mov
push
xor
lds
jbe
mov
(bad)
imul
pop
sbb
mov
and
nop
or
add
aad
jns
ss
shr
leave
mul
sub
and
pushf
mov
push
sbb
std
aad
sub
jmp
jecxz
inc
push
dec
lods
out
outs
in
movs
enter
fmul
loop
xchg
cli
test
shr
out
sbb
jmp
cwde
ds
jmp
xor
imul
ficom
int3
imul
aam
ins
ins
popa
pop
ins
shl
mov
mov
test
add
cmp
or
push
fnstsw
sub
jno
out
mov
or
out
js
and
sar
pop
mov
mov
adc
(bad)
sub
mov
xor
dec
sbb
xor
rol
and
inc
push
fidivr
pop
daa
xchg
and
sahf
xchg
rcr
dec
pop
mov
test
mov
das
test
das
and
out
sub
xchg
fwait
cmps
mov
pop
gs
cs
mov
pop
mov
jns
fs
push
pop
out
dec
and
jl
add
push
and
ds
and
mov
or
outs
adc
jge
cmp
stos
and
xchg
cs
(bad)
iret
jmp
stos
mov
paddw
fsubr
mov
add
cmp
sbb
mov
dec
or
xor
cmp
dec
rcl
ret
mov
xchg
pop
(bad)
dec
mov
jbe
mov
mov
pop
mov
mov
push
xchg
add
jp
popf
out
jae
mov
inc
retf
mov
mov
shld
sub
mov
mov
test
adc
test
pusha
xchg
shr
xchg
jl
(bad)
xchg
xchg
jno
cmp
or
jl
sub
leave
ins
or
int3
add
call
add
add
iret
fld
add
std
mov
hlt
ins
out
sub
sub
xchg
add
or
mov
mov
push
and
adc
sub
and
loope
dec
inc
or
inc
xchg
xchg
jns
add
inc
iret
and
loope
mov
pop
dec
ss
mov
ficomp
out
mov
je
add
dec
or
add
jecxz
jo
push
pop
std
in
cmps
add
jmp
pusha
adc
lods
(bad)
iret
push
cmp
or
test
(bad)
aad
jle
sub
ins
test
jg
push
add
in
xchg
adc
push
xchg
adc
inc
adc
adc
adc
lods
xor
push
adc
xchg
fwait
push
mov
cmp
in
in
adc
pushf
std
and
in
js
mov
out
addr16
retf
fmul
pop
imul
arpl
xor
in
sub
inc
xor
popf
shl
outs
push
inc
dec
cli
cs
xor
repnz
sbb
cmp
dec
sub
cs
(bad)
sar
cmps
adc
cdq
mov
ficomp
test
stc
in
neg
pop
cmp
lods
jae
pop
jmp
(bad)
sbb
fsubrp
imul
fdiv
xor
and
(bad)
arpl
aas
jne
inc
dec
repz
push
mov
mov
mov
inc
xchg
jb
pop
inc
add
cmp
bound
sub
arpl
(bad)
repz
mov
mov
push
in
jno
ins
jae
pop
and
loop
mov
aad
test
add
dec
and
pop
and
aaa
xor
fsubr
push
pusha
jae
mov
inc
mov
pop
popf
or
sbb
retf
mov
pop
cmp
pop
aaa
loope
lods
imul
out
rcr
fst
xchg
js
inc
push
xor
or
mov
pop
adc
adc
and
(bad)
loope
add
sub
jae
adc
mov
jb
mov
jp
jmp
int3
mov
jmp
fucomi
stc
pop
push
inc
retf
sbb
dec
enter
mov
in
xor
imul
and
iret
pop
dec
mov
push
ror
jmp
mov
fldenv
into
loope
repz
(bad)
lods
cmp
fcmovnb
shl
mov
arpl
inc
add
xlat
xor
leave
call
and
(bad)
cld
inc
test
dec
sbb
mov
inc
jecxz
mov
push
pop
pop
inc
shl
cmps
pushf
jecxz
idiv
cmp
mov
neg
or
ss
jl
push
lock
push
mov
or
leave
enter
dec
cmc
cmp
inc
repz
xchg
xchg
push
into
vpackuswb
xchg
ret
xchg
mov
int
jmp
push
(bad)
leave
push
push
xor
jb
jae
sar
jmp
int3
mov
cs
sbb
mov
scas
test
in
xor
mov
inc
cwde
xlat
cmp
pop
ds
fwait
aad
xor
fadd
(bad)
rcl
or
in
mov
adc
arpl
(bad)
lock
and
dec
in
jno
jo
das
adc
mov
out
mov
test
jg
in
mov
addr16
push
add
imul
pop
xchg
enter
ss
in
xchg
ins
imul
mov
stos
jno
out
into
inc
ins
xchg
xor
jp
aam
and
add
icebp
in
and
jnp
lahf
add
mov
adc
add
arpl
outs
inc
inc
call
les
out
inc
adc
in
data16
jl
in
and
enter
add
push
push
jns
imul
cmp
adc
jmp
scas
lahf
test
sahf
scas
les
(bad)
dec
mov
xchg
ss
clc
shr
test
add
enter
pop
leave
xor
inc
les
mov
test
inc
mov
jecxz
not
dec
lea
cli
pushf
jp
sub
cmp
sub
push
sbb
jne
lock
xchg
xor
dec
imul
cmp
fbstp
and
nop
stc
movs
je
in
test
jle
add
lds
mov
stos
mov
and
lods
in
or
rcr
add
sub
pushf
fld
mov
popa
fwait
mov
or
dec
jo
js
pop
push
neg
or
rol
adc
xchg
fs
mov
mov
and
dec
pop
inc
push
pop
ret
ins
jae
rol
cdq
fst
xchg
outs
and
cmps
outs
ja
sub
sub
add
test
push
mov
push
and
movs
mov
bound
mov
gs
push
jecxz
sbb
and
mov
arpl
mov
call
mov
push
(bad)
iret
xor
add
and
ror
jmp
clc
icebp
(bad)
push
retf
shr
mov
push
jne
lock
inc
dec
jecxz
push
jl
leave
pushf
mov
mov
cld
shl
xchg
push
cld
sub
test
pop
dec
ret
sbb
inc
add
mov
sti
arpl
dec
add
mov
mov
mov
add
dec
xchg
ror
jb
mov
push
test
std
sub
(bad)
fst
jae
mov
movs
push
and
ins
popa
mov
cwde
pop
inc
add
imul
leave
stos
out
sbb
or
pop
sar
xchg
sahf
sbb
imul
jg
lock
and
ins
fdivr
jne
bound
(bad)
xchg
iret
(bad)
and
js
cld
int3
imul
jae
scas
(bad)
iret
ret
pop
or
arpl
adc
add
push
jae
sbb
cli
adc
xchg
add
mov
lea
cmc
out
fnstenv
cmp
xchg
stos
(bad)
out
sub
fwait
or
jb
stc
jle
aad
add
xlat
adc
mov
or
cmp
jmp
inc
dec
and
ja
mov
enter
imul
pop
jmp
add
jle
push
xchg
xchg
xlat
jo
test
out
fwait
and
cs
mov
out
retf
xchg
les
lods
sahf
pmaxsw
mov
inc
aas
out
bound
mov
mov
jle
(bad)
xchg
add
or
add
pop
iret
mov
es
retf
push
pop
call
ds
adc
(bad)
jle
pop
fnstenv
mov
sbb
pop
jl
imul
movs
xchg
adc
jbe
lods
je
cmp
pop
rcl
fdivr
push
jae
cmp
in
jns
or
jno
in
stc
in
icebp
mov
push
push
push
and
shr
cmp
or
jmp
jle
sub
jge
out
fmul
sahf
jbe
out
(bad)
mov
dec
jae
pop
fdivp
pop
push
mov
add
fistp
ja
(bad)
pop
retf
jbe
cmc
cmps
(bad)
adc
cwde
inc
mov
or
cmp
in
mov
jns
ins
cmp
xor
jle
fs
mov
dec
retf
cmp
add
fsub
pop
aas
sub
dec
std
ins
in
jns
ror
add
pusha
fs
ss
sub
icebp
(bad)
sub
cmps
jecxz
lea
mov
xor
gs
shl
jle
pusha
mov
leave
cmp
daa
mov
cmp
out
popf
lods
std
push
xor
jp
loope
loope
iret
pop
cmc
jmp
or
test
mov
mov
xlat
adc
stos
jmp
adc
xchg
loop
push
ds
inc
jmp
movs
pop
fnstcw
(bad)
push
(bad)
lock
icebp
enter
daa
push
mov
push
or
mov
mov
fldcw
ffree
call
lods
mov
inc
or
fcomp
ret
shl
xchg
(bad)
xlat
repnz
dec
push
stos
sbb
pop
or
(bad)
(bad)
neg
mov
cmps
mov
push
leave
mov
and
imul
retf
cs
jb
sbb
cmp
(bad)
jmp
nop
cld
es
ror
or
fucomi
xchg
xor
popa
jl
inc
(bad)
xor
push
mov
(bad)
jo
add
cdq
fcomp
pop
xor
and
add
loop
add
add
pop
push
ja
jb
arpl
mov
lss
xchg
stos
cmp
ins
(bad)
int3
and
hlt
mov
mov
mov
out
and
rcl
mov
div
movs
push
neg
clc
imul
xor
int3
nop
or
xor
fcomp
adc
fwait
and
out
in
movs
rol
mov
popa
data16
inc
xchg
in
sbb
mov
je
jge
push
aaa
sub
xchg
gs
gs
pop
ret
fs
je
std
dec
pop
xchg
dec
sbb
retf
js
add
inc
stc
cmps
repz
int3
xchg
sbb
jne
ds
mov
les
in
(bad)
jns
aam
enter
popa
imul
mov
(bad)
jno
ror
leave
enter
fsub
jb
lea
cmp
jo
push
mov
ja
ds
xor
(bad)
bound
(bad)
xchg
aas
outs
xchg
lods
test
loope
data16
adc
add
mov
mov
jp
jno
add
jbe
hlt
clc
gs
leave
lods
pop
in
cmp
and
shr
stos
inc
inc
(bad)
xchg
mov
mov
jbe
ror
pop
dec
pop
fld
push
xchg
jae
mov
retf
push
cmp
jl
mov
jg
fs
(bad)
popa
(bad)
or
out
loop
rcr
in
lea
jp
rcl
jb
cmp
xor
fdivr
sbb
outs
pushf
cld
fsub
shl
mov
mov
fsubp
jmp
jns
sbb
inc
sub
adc
and
(bad)
jae
std
push
fdiv
pop
xlat
int
(bad)
cwde
pop
cmp
cmp
cdq
xchg
es
jnp
push
rcr
sbb
sbb
or
xchg
in
and
sub
imul
inc
sbb
jg
xchg
mov
retf
jle
int
enter
push
(bad)
pop
idiv
imul
cs
(bad)
lock
xchg
add
xchg
add
les
icebp
test
jge
cmp
dec
cmp
sbb
out
fidivr
or
imul
xchg
mov
dec
push
arpl
je
ins
add
(bad)
icebp
shl
mov
es
imul
ss
xchg
push
inc
rol
cdq
jmp
fsub
(bad)
rep
jle
pop
dec
mov
pop
lahf
xchg
push
xchg
xchg
adc
pop
dec
push
dec
rcr
dec
push
into
int
shl
mov
sbb
xchg
mov
mov
js
jmp
pop
dec
pop
out
push
jns
xchg
pop
dec
aaa
push
outs
inc
xchg
inc
inc
das
jne
fdivr
mov
adc
mov
je
mov
jns
xchg
sti
movs
xor
imul
js
cmp
outs
mov
or
movs
pushf
in
out
pop
cmp
repz
mov
adc
mov
retf
xchg
add
dec
xchg
ss
xor
xchg
(bad)
fnstenv
or
(bad)
(bad)
in
int3
xchg
or
mov
inc
mov
fdivr
sub
pop
push
jl
mov
fs
inc
push
std
cmp
jb
cmps
dec
ds
xchg
sub
movs
cmp
cmp
cmp
iret
aaa
cld
mov
jg
(bad)
inc
mov
push
xchg
adc
mov
fldcw
repz
cmps
test
push
lahf
and
outs
mov
lods
mov
jb
pcmpeqw
inc
lock
ins
addr16
mov
sti
ins
das
xchg
and
add
out
xchg
loop
adc
cmp
rcr
and
ss
push
into
cmps
xchg
xchg
pop
sbb
sub
aas
sar
rcl
dec
leave
cmps
jg
lods
int
cdq
in
repz
lock
ror
fnstenv
shr
mov
pop
mov
pop
jp
ds
(bad)
cmps
pop
mov
ins
pop
outs
popf
fstp
iret
xchg
and
(bad)
in
aas
fsub
bnd
mov
inc
jnp
into
push
fsubr
fnstsw
xor
cmp
mov
jmp
mov
stos
gs
push
and
ss
jge
xchg
jb
xchg
call
push
mov
lock
ins
out
std
mov
les
pop
lahf
nop
leave
pop
mov
aaa
imul
imul
sbb
outs
stos
std
xlat
ja
pusha
jmp
repnz
and
mov
mov
aad
in
aaa
je
jl
outs
jl
xor
iret
and
xchg
mov
(bad)
rol
push
movs
out
adc
pop
xchg
in
push
mov
nop
jmp
push
or
enter
xlat
add
jecxz
pcmpgtw
sbb
pop
xchg
ins
ficomp
jmp
in
int
(bad)
xchg
pop
addr16
lmsw
popf
cli
(bad)
jl
xlat
mov
mov
das
popf
(bad)
imul
data16
nop
dec
inc
xchg
lds
jp
mov
push
aas
cmp
sub
int
add
push
mov
jbe
mov
or
clc
pop
jp
mov
dec
and
jg
inc
outs
les
cmp
hlt
jb
imul
outs
fsubrp
loopne
inc
cs
sub
mov
cmp
mov
arpl
hlt
ja
jb
jbe
or
xchg
dec
rcl
outs
jnp
neg
push
pop
push
lea
sub
test
loopne
fidivr
cld
pop
sti
jns
mov
push
push
(bad)
stc
pop
dec
jno
cmps
inc
inc
push
pop
xlat
or
push
sub
inc
inc
cmps
fnsave
leave
in
(bad)
cmps
retf
test
mov
dec
push
sub
jl
mov
mov
mov
cmp
sub
jp
rol
dec
dec
ins
test
in
mov
mov
ss
pop
leave
pop
(bad)
shl
scas
xor
call
cmp
dec
jne
fist
jge
sub
(bad)
xlat
retf
out
xor
mov
outs
pop
rol
loope
cld
sbb
stos
daa
mov
outs
popa
data16
sub
imul
in
clc
sti
dec
shl
(bad)
cli
stos
fstp
(bad)
and
out
mov
xchg
(bad)
loope
(bad)
lds
cmp
ja
cmp
mov
cmp
ja
adc
shl
adc
sti
mov
das
cmps
mov
add
push
jae
cdq
xchg
sbb
psubsw
push
or
aas
jmp
mov
in
leave
mov
push
push
xchg
mov
cs
xchg
addr16
sti
call
enter
es
sahf
or
in
cmp
js
dec
mov
sub
mov
jecxz
mov
jo
nop
cmp
dec
popa
jae
inc
mov
sahf
stos
pushf
data16
sbb
into
jmp
pop
lea
into
aad
out
xor
daa
push
aaa
jmp
retf
cmp
je
daa
hlt
repz
lock
cmp
in
ins
imul
xchg
mov
mov
test
pop
aad
(bad)
fdiv
sbb
ret
(bad)
(bad)
pop
jl
cdq
ds
aam
ds
push
clc
loope
nop
int
imul
and
or
mov
ror
xchg
xor
mov
fldenv
inc
aam
mov
mov
add
clc
ret
call
arpl
mov
cdq
out
adc
stos
jp
out
lods
(bad)
xchg
pop
aam
pop
adc
gs
inc
test
out
mov
movs
bound
mov
or
mov
fsubr
nop
imul
adc
xor
mov
jns
pop
ds
icebp
cmp
xchg
dec
imul
je
stc
test
push
jecxz
sbb
in
jbe
iret
retf
cmp
sbb
aam
bnd
fisttp
out
fnstcw
and
les
and
mov
mov
xor
hlt
call
sbb
push
push
sahf
sar
ror
push
xchg
test
sbb
xor
sbb
pop
in
aas
inc
retf
xlat
gs
add
sti
scas
jbe
sbb
mov
push
mov
push
shl
fisttp
inc
add
push
sub
mov
loopne
(bad)
mov
xchg
retf
pop
push
dec
imul
cmp
mov
pop
imul
mov
fsubr
pop
add
sbb
xchg
data16
(bad)
push
out
xor
clc
push
pop
pushf
fcomp
test
jmp
stos
std
mov
aad
jecxz
cs
push
les
arpl
mov
push
loopne
fs
jmp
mov
cmp
in
out
jmp
fmul
out
mov
xchg
sbb
dec
xor
loope
mov
iret
cmp
mov
(bad)
add
sub
xor
lea
and
mov
pop
dec
mov
adc
cmps
data16
push
mov
inc
push
cmp
clc
mov
icebp
mov
retf
outs
push
dec
je
mov
pusha
add
and
std
mov
pop
inc
sbb
jl
(bad)
retf
push
sbb
(bad)
fiadd
addr16
cmc
add
xor
retf
or
aas
sbb
mov
imul
inc
ins
in
sub
xchg
sbb
pop
mov
xchg
bswap
aas
pusha
mov
in
in
push
clc
xlat
pop
aaa
cwde
mov
cwde
call
aaa
mov
arpl
or
pop
fldcw
jne
(bad)
cmps
or
popa
cs
aam
jge
int3
enter
and
add
cmp
icebp
into
loop
in
sbb
fisubr
jbe
das
test
xchg
cli
mov
adc
rcr
push
outs
mov
loop
rcl
shr
push
xchg
pop
or
adc
arpl
push
repz
(bad)
jl
je
or
xor
mov
call
pop
adc
push
jecxz
or
pop
inc
cld
mov
push
sbb
push
xchg
add
pushf
inc
mov
add
popf
inc
xchg
lods
jae
dec
int3
(bad)
jmp
push
sbb
jmp
in
out
xchg
in
mov
push
fs
jl
aaa
popa
aas
pop
push
stos
lods
jge
ret
jle
(bad)
xchg
sbb
mov
mov
hlt
fbld
xlat
je
cs
and
sbb
(bad)
xor
pop
and
mov
adc
xor
xchg
dec
or
and
das
and
cmps
call
retf
das
(bad)
das
sbb
pop
pop
xchg
mov
sti
stos
fbld
in
sub
ds
sbb
ret
jmp
mov
out
sub
cdq
adc
sub
imul
iret
xchg
(bad)
ins
mov
cmp
sub
aad
add
movs
sahf
pusha
sar
retf
fnstenv
fst
pop
cmp
stc
push
ret
or
repz
pop
xchg
push
shr
sub
and
js
inc
repz
cmp
lahf
outs
xchg
out
shl
or
test
sub
jnp
xlat
mov
mov
pop
dec
shl
int3
(bad)
repnz
fisttp
push
ins
mov
cmp
dec
test
cmps
mov
push
pop
jne
data16
div
adc
sub
jbe
(bad)
dec
ret
ss
(bad)
out
sbb
ror
jecxz
fdivr
mov
fnstsw
cmp
out
dec
sbb
sub
pop
add
rol
retf
jne
inc
xchg
sbb
clc
loopne
pop
sub
arpl
mov
mov
dec
fisubr
sub
cli
sub
inc
aam
retf
inc
lods
(bad)
mov
cld
mov
and
std
test
xchg
pop
sbb
cdq
mov
xor
mov
mov
cmp
mov
in
out
mov
enter
pop
fisubr
nop
leave
push
cs
mov
call
inc
cmps
mov
xchg
mov
and
movs
mov
lea
inc
(bad)
xchg
loope
sbb
out
sti
pop
xchg
leave
lahf
clc
test
jns
jecxz
push
sahf
inc
cs
enter
sbb
add
imul
or
xchg
mov
scas
sub
adc
out
seto
dec
jmp
in
mov
jecxz
or
ins
fs
stc
mov
jp
pop
bound
push
sbb
jl
ss
rol
mov
je
xor
js
test
dec
jo
stc
mov
pop
xchg
pushf
enter
mov
jecxz
add
test
jno
cmp
imul
retf
xchg
in
cmp
fsubr
inc
cmp
pusha
pcmpgtb
adc
dec
cmps
push
(bad)
and
ret
mov
repnz
cmc
jl
stos
pop
cmp
retf
imul
out
xchg
adc
pop
xchg
repnz
add
movs
clc
(bad)
aaa
sub
cdq
fdiv
pusha
mov
or
add
popa
outs
call
mov
jbe
out
cmp
add
int
popa
sahf
jb
dec
adc
sbb
jne
outs
sub
add
popf
push
inc
ins
lock
or
and
(bad)
push
xlat
pop
(bad)
imul
call
daa
mov
movs
movs
iret
push
pop
ins
stc
sub
and
sti
sub
jmp
retf
dec
xchg
retf
jecxz
stos
adc
test
popa
shl
xchg
out
sbb
xchg
ins
popa
(bad)
jg
gs
mov
cmp
es
icebp
pop
jae
mov
icebp
ret
lahf
push
nop
clc
pop
sbb
cmp
sub
cmps
stos
mov
adc
mov
mov
js
or
jns
fstp
cmps
and
repnz
(bad)
pop
sub
fsub
push
cmp
es
xor
jno
jno
or
fadd
fdivr
mov
jae
ins
lods
or
es
popf
sbb
sbb
int
das
sub
adc
movs
mov
cwde
and
lahf
in
rol
pop
mov
sub
cli
ja
jae
or
sti
cmp
dec
dec
fisub
mov
pop
inc
adc
dec
(bad)
fnstenv
pop
cs
test
sbb
pop
ret
aad
out
leave
and
adc
add
jg
neg
pop
popf
icebp
add
dec
and
pop
mov
loop
or
pop
xor
sbb
jo
scas
ror
xchg
mov
aaa
(bad)
jmp
mov
nop
fisttp
fnstenv
daa
lds
(bad)
cmp
nop
ds
(bad)
jl
push
sbb
mov
fs
jecxz
sbb
pop
jl
jnp
gs
fdiv
dec
jmp
(bad)
ins
xlat
push
xlat
int
stos
push
outs
mov
pop
test
pop
and
cmp
inc
out
mov
pop
jmp
pop
jp
mov
sbb
pop
pop
inc
aaa
jns
test
inc
mov
outs
cmc
xor
pop
out
mov
in
das
push
dec
sbb
dec
pop
xchg
(bad)
(bad)
aad
rcl
pop
xchg
fucom
stos
cli
aaa
icebp
adc
callw
aam
popw
inc
cmc
dec
mov
hlt
lahf
jbe
outs
test
sbb
cs
test
sbb
mov
test
fidiv
lahf
jne
pushf
and
jno
push
ret
xchg
rcl
sbb
and
mov
xor
add
inc
mov
or
retf
sub
fstp
fwait
sbb
pop
aas
je
xor
and
cmp
mov
jg
inc
pop
gs
xor
or
push
sbb
jo
(bad)
das
ins
fstp
cmp
mov
sbb
lods
enter
outs
cmp
into
fmul
in
sar
cmp
fs
jbe
neg
(bad)
pusha
xchg
push
mov
fcmove
push
ins
fdivr
inc
mov
in
mov
sub
pop
xor
in
sub
add
or
enter
sub
lahf
cmp
cmp
repnz
cmp
push
push
retf
sub
jmp
imul
push
repz
dec
xor
add
mov
mov
fadd
repz
call
sbb
push
mov
sahf
mov
or
je
enter
call
pop
jmp
jnp
shr
mov
mov
mov
dec
ret
in
push
arpl
dec
imul
out
push
es
xchg
fld
fs
lods
repz
xchg
repz
ds
push
shl
nop
loopne
in
lods
jns
imul
daa
iret
rcr
xor
or
loopne
push
pop
int
jmp
pop
in
imul
cmp
mov
mov
jne
xchg
movs
mov
add
fs
mov
xor
fdivr
loope
jmp
std
dec
jno
and
outs
push
add
xor
xchg
xchg
jbe
inc
or
cmp
xchg
sbb
ss
jmp
leave
out
mov
fs
xchg
jns
idiv
ins
(bad)
xchg
pop
fs
mov
and
pop
cmps
aad
daa
loope
cmp
test
call
cmp
movs
test
add
or
or
xor
add
and
test
add
arpl
(bad)
arpl
add
or
inc
mov
jl
sub
inc
shr
add
out
test
or
sbb
lock
cmp
(bad)
xchg
xlat
xchg
adc
and
cmp
adc
add
imul
sbb
pop
stos
pop
adc
sub
or
inc
push
mov
test
rol
test
sbb
mov
sub
ret
ss
mov
add
xchg
inc
loopne
retf
mov
push
inc
ins
cmp
call
(bad)
imul
sbb
push
add
ja
and
xchg
mov
and
and
sub
cli
jbe
fistp
in
add
inc
fwait
pop
or
lods
pcmpeqb
pop
test
fiadd
jecxz
mov
daa
inc
adc
and
or
or
inc
inc
and
dec
cmp
and
add
inc
and
pop
add
sbb
pop
pop
add
push
sub
push
enter
aad
inc
push
out
pop
pop
inc
mov
push
xchg
(bad)
aam
adc
push
jmp
or
cmps
cmp
fsub
and
push
(bad)
mov
es
sbb
cmp
sub
xchg
rol
sbb
cmp
fwait
pop
call
xor
test
aam
jae
ret
int
cs
addr16
mov
push
inc
jle
jno
xchg
(bad)
inc
(bad)
ret
retf
lea
or
cmp
scas
push
sbb
stc
scas
add
scas
inc
cmp
cmp
in
xor
add
mov
jg
cdq
jo
adc
movs
scas
jo
add
sti
test
fwait
pop
push
sub
pop
sub
lahf
jmp
fs
mov
and
adc
cmp
adc
sub
or
gs
pop
or
aas
hlt
push
jns
mov
cmp
mov
mov
pop
push
sbb
mov
(bad)
jg
add
(bad)
cmp
rol
or
dec
enter
dec
fwait
inc
fnstsw
mov
xor
pop
das
(bad)
fwait
pop
cmps
shl
aam
adc
xchg
and
aaa
jne
mov
and
add
add
retf
sub
and
inc
je
inc
pop
(bad)
lea
cmp
in
sbb
rol
push
inc
or
loope
outs
mov
aas
imul
imul
mov
and
xchg
fdivr
mov
xchg
mov
les
or
in
mov
mov
add
pop
movs
xor
sub
mov
mov
je
int3
bound
xor
gs
jbe
xchg
sbb
(bad)
mov
ret
push
call
cdq
rcl
mov
dec
mov
loop
cmovge
ss
out
and
call
xchg
test
rol
cmp
pop
aam
mov
ja
ins
xchg
add
push
cwde
leave
popa
std
dec
pusha
and
enter
test
test
lea
js
je
dec
mov
in
xchg
mov
sub
retf
adc
(bad)
outs
inc
hlt
arpl
jne
cdq
into
xchg
and
in
push
clc
pushf
repnz
fstp
jle
shl
ds
(bad)
mov
daa
ins
outs
not
push
in
or
xchg
rol
or
xor
ss
stos
icebp
cwde
leave
mov
push
mov
mov
gs
mov
loope
xchg
or
cdq
pop
mul
(bad)
int3
fdivr
xlat
mov
pop
push
ds
iret
movs
or
lock
in
je
test
retf
xchg
mov
mov
pop
retf
push
fnsetpm(287
adc
test
jns
enter
sbb
je
and
stc
xor
adc
jns
call
imul
push
push
pop
ins
cmps
xchg
xor
test
not
push
push
or
out
jmp
jbe
mov
movs
sahf
hlt
adc
sub
jnp
push
mov
and
sbb
push
pop
test
js
mov
inc
push
adc
and
pop
int
movs
pop
jno
pushf
mov
je
mov
mov
mov
mov
in
sar
test
retf
mov
dec
pop
sbb
push
in
iret
dec
mov
sub
or
ret
inc
xor
pop
or
adc
dec
cmp
mov
js
push
enter
popa
fcmovb
nop
(bad)
aam
cwde
int
popa
mov
ret
lahf
pop
mov
xor
loope
push
xor
dec
dec
(bad)
mov
inc
out
pop
inc
jb
in
pop
add
call
in
jb
pop
mov
push
es
mov
mov
imul
add
cmp
rol
xchg
out
mov
repz
jmp
xchg
push
mov
mov
imul
outs
or
xor
mov
push
jmp
push
add
les
frstor
push
sbb
mov
fdivr
ins
xor
jo
jnp
and
dec
xchg
xor
jp
ja
dec
arpl
imul
jp
rol
mov
(bad)
mov
(bad)
dec
lock
fwait
aaa
xor
nop
xlat
add
out
mov
into
cwde
pop
pop
inc
fninit
neg
cmp
movs
mov
repnz
or
out
mov
jl
mov
xor
out
inc
add
and
add
bound
clc
or
lahf
cmp
popf
fdiv
rcr
cmps
mov
xchg
jmp
jp
dec
adc
cmp
pop
sbb
mov
inc
sbb
adc
jl
mov
iret
or
retf
xlat
(bad)
pushf
pop
sbb
stos
push
in
cdq
add
leave
arpl
repz
clc
cdq
pop
(bad)
and
dec
(bad)
out
add
push
ja
mov
iret
outs
sar
lahf
xchg
aam
pop
es
gs
jecxz
or
test
jbe
push
sbb
in
jbe
lea
jecxz
inc
sbb
cs
and
mov
push
fucomi
inc
stc
pop
not
jno
and
sbb
pop
sti
jne
scas
pusha
aas
test
arpl
dec
mov
inc
mov
daa
xchg
add
jno
add
(bad)
stos
ret
xor
inc
sbb
cmp
cmps
push
ss
xchg
popf
lea
test
and
in
xor
in
repnz
inc
jns
jp
sar
cmps
icebp
push
lods
mov
in
add
fnstenv
jmp
jns
lahf
sti
je
(bad)
(bad)
jae
scas
retf
add
pop
mov
sub
addr16
push
(bad)
add
ret
out
outs
aaa
mov
scas
and
mov
rol
mov
stos
mul
ja
ret
adc
dec
test
add
add
xchg
(bad)
in
cmp
mov
add
pop
jae
adc
xor
js
dec
stc
arpl
div
push
stos
aad
int
aaa
push
outs
fdiv
mov
xchg
lea
inc
fcomp
sbb
jne
sbb
out
inc
aaa
mov
(bad)
(bad)
jmp
int
add
lock
mov
loop
xor
mov
mov
adc
imul
cdq
pop
mov
jo
inc
or
lds
jae
and
mov
lods
in
shl
cmp
jmp
aam
sti
sub
(bad)
stc
bound
cwde
xlat
ds
mov
mov
jle
int3
test
cmp
into
popa
mov
mov
neg
daa
dec
jle
popa
lods
fs
mov
retf
fcomp
pop
jecxz
in
inc
mov
mov
jns
inc
out
mov
(bad)
sti
cld
scas
dec
nop
dec
and
in
jb
inc
mov
or
cmp
xchg
les
xchg
cdq
mov
hlt
icebp
ins
in
lods
rcr
ret
xor
or
pop
cmps
call
xchg
daa
cmp
ja
mov
and
and
fidivr
aad
jae
shl
fsub
ret
test
pusha
imul
addr16
push
lods
push
outs
outs
sub
pushf
rol
add
xchg
and
cmp
js
aas
gs
popf
add
jl
sahf
lea
push
add
test
mov
and
mov
(bad)
jle
xor
add
or
std
lods
sub
mov
cmp
jmp
mov
mov
xchg
sub
std
mov
enter
mov
in
xchg
(bad)
sahf
mov
cmp
xor
leave
cwde
pop
call
or
outs
sub
dec
imul
push
xor
pop
mov
lods
xchg
xor
test
dec
dec
mov
xor
mov
mov
jmp
add
cmp
add
inc
fist
dec
add
ror
mov
xchg
jns
xchg
mov
sub
xor
repnz
movs
data16
jo
dec
pop
mov
mov
sbb
lea
(bad)
aam
mov
fidivr
imul
mov
out
lock
dec
cdq
xchg
outs
xchg
rol
in
add
fadd
sbb
sbb
int
mov
ss
lds
jno
lods
rol
inc
std
aaa
in
mov
jl
inc
leave
es
jo
mov
rol
shl
cli
call
bound
rcr
dec
pushf
jmp
xor
scas
fdiv
iret
imul
addr16
mov
retf
cdq
stos
inc
sub
fs
push
mov
(bad)
in
mov
xor
mov
sub
inc
sub
inc
cmp
jge
and
push
dec
mov
clc
jl
ins
mov
aas
pop
(bad)
xchg
mov
inc
lock
shl
xor
fimul
(bad)
cmp
sub
jl
imul
push
loope
lods
in
mov
jnp
push
jp
cmp
fs
jae
fcomp
xor
js
and
loop
sbb
fistp
rcl
inc
in
mov
loope
xor
xor
fdivr
rol
jg
movs
js
mov
adc
aaa
arpl
loope
lods
dec
fdivr
out
outs
(bad)
cmp
cmp
sbb
frstor
test
xlat
and
sahf
(bad)
mov
add
and
xchg
fistp
and
es
outs
jbe
cmp
cld
mov
jmp
xchg
or
and
stc
test
fcmovnu
jno
mov
mov
xchg
dec
cmp
fwait
or
dec
xchg
mov
jno
mov
sbb
sub
mov
pop
sub
dec
inc
mov
cld
adc
ins
ja
jp
sub
fnstsw
mov
jae
push
fst
dec
push
addr16
push
(bad)
pop
daa
and
arpl
out
or
push
xor
arpl
popf
sbb
mov
sub
inc
push
xor
retf
in
or
sbb
(bad)
pop
out
pushf
clc
int3
stc
mov
into
int
lea
sub
mov
lods
jl
pop
enter
neg
je
jmp
fstp
sbb
xor
pushf
ret
out
cli
scas
mov
pop
retf
xor
sahf
stos
push
mov
xchg
mov
fst
dec
ins
jmp
popa
sbb
bound
dec
pop
inc
fnstenv
scas
(bad)
arpl
icebp
inc
jae
enter
jno
clc
mov
nop
dec
push
pop
scas
add
cmp
mov
xchg
add
daa
mov
bswap
out
xor
xchg
out
fst
gs
in
(bad)
fsubp
shl
or
outs
cmp
cmp
push
aaa
imul
jnp
les
popf
lds
adc
pusha
popf
ret
rcl
push
inc
daa
mov
outs
mov
repz
icebp
cdq
pop
mov
dec
sbb
fild
and
repnz
in
js
call
mov
rcr
fild
popf
lods
push
outs
int
xchg
pop
jnp
jne
adc
movq
std
xchg
pop
xchg
loop
fdivr
out
push
adc
imul
add
into
(bad)
imul
stos
icebp
out
mov
enter
rcl
in
ins
jmp
mov
jg
xchg
gs
jo
loope
jecxz
lock
dec
movs
je
cmp
das
test
loope
fs
add
out
jecxz
into
jle
pop
fwait
mov
sub
xor
sbb
inc
fcomp
jmp
in
lods
hlt
loope
jp
mov
loope
pop
cdq
in
cmp
fisubr
inc
rcr
call
xchg
inc
or
pop
inc
stos
push
retf
sbb
mov
push
arpl
mov
inc
pushf
jle
jmp
push
add
jbe
jo
cmp
lahf
mov
xchg
inc
ret
lea
sbb
out
test
cmp
(bad)
shl
add
(bad)
(bad)
leave
mov
sbb
in
and
push
sbb
jle
fdivp
jne
and
cs
rcl
cs
repnz
ret
push
jne
sbb
cmps
in
loope
enter
int3
popf
loop
jmp
addr16
lock
sbb
(bad)
rol
retf
(bad)
xor
xor
xor
scas
jo
sysret
in
pop
sub
sbb
xchg
std
pop
mov
aam
repz
cli
jmp
int3
sbb
stos
fstp
xchg
or
iret
pop
xchg
cmp
retf
mov
push
or
mov
xor
or
pusha
cs
and
movs
ffreep
shl
leave
jae
xor
test
scas
add
stc
dec
ins
cmp
cmps
xor
sub
je
(bad)
pop
or
out
outs
mov
fdivr
out
(bad)
lods
stos
cwde
int3
pop
hlt
fdiv
gs
sbb
pop
in
jp
sti
lahf
pusha
mov
gs
cdq
cmp
cmp
fadd
cmps
mov
jns
stos
xchg
jbe
arpl
scas
shl
sahf
cmp
lahf
push
xchg
push
cmp
imul
aaa
gs
in
test
shl
sub
and
test
fdiv
push
sub
sahf
cmp
ret
jmp
ins
cmps
sbb
out
push
ss
mov
xor
xchg
sbb
pop
call
shl
sbb
not
iret
cmp
into
pop
stc
ja
cwde
cli
jecxz
nop
arpl
and
leave
push
push
arpl
xchg
xchg
nop
dec
(bad)
mov
into
out
fadd
xor
jmp
jl
pop
pop
sub
cld
pusha
fs
or
repnz
push
dec
add
pop
xchg
outs
cmp
frstor
mov
xlat
inc
fisttp
ss
daa
cmp
cmp
inc
rol
test
jge
ret
cmp
cld
stos
call
xor
add
mov
ret
addr16
fdivr
js
xor
div
or
scas
test
xchg
ror
imul
dec
add
fdiv
stc
jns
sbb
xchg
(bad)
pop
mov
xor
sbb
std
call
xchg
xchg
jle
fwait
mov
out
pop
pop
adc
adc
cmp
xchg
ror
inc
ds
cmps
imul
fcmovbe
mov
imul
daa
aas
pop
mov
ja
lahf
push
dec
fbld
pop
test
add
enter
not
mov
mov
pop
dec
enter
sbb
jg
loope
out
and
int
ins
arpl
add
jnp
inc
outs
shl
ds
ins
adc
(bad)
pop
in
sahf
out
fstp
mov
push
and
(bad)
adc
xor
push
in
jmp
xor
retf
cmp
cmps
call
mov
cmps
lahf
ins
(bad)
fisttp
cld
mov
jecxz
pop
mov
pop
les
jno
sbb
dec
fist
repnz
xor
cmp
mov
repnz
aaa
mov
icebp
out
leavew
sbb
into
icebp
mov
retf
fs
in
aas
dec
int3
js
ss
sbb
fnstsw
pop
sbb
inc
jmp
ins
retf
adc
popa
outs
inc
je
movs
mov
into
xchg
jecxz
push
xor
xchg
or
dec
jecxz
jb
push
ror
test
jmp
out
mov
mov
or
lods
ret
int
ins
ins
cmc
aaa
int3
push
(bad)
repz
in
popf
add
rol
retfw
out
cmp
sbb
jb
mov
mov
xchg
addr16
jge
add
pop
pop
add
mov
mov
dec
test
scas
ja
outs
cmps
(bad)
ins
(bad)
(bad)
fbld
xor
jnp
dec
cmp
pushf
dec
mov
inc
(bad)
jmp
(bad)
and
push
(bad)
and
out
or
pop
jp
fidivr
fist
lds
sub
iret
mov
adc
add
jp
mov
dec
xchg
mov
imul
(bad)
dec
pop
aaa
cwde
repz
gs
jno
mov
repz
icebp
jecxz
das
cmc
mov
sub
xor
(bad)
lds
inc
cmp
sahf
push
(bad)
mov
arpl
inc
jae
cmps
cmp
cdq
in
cwde
int3
mov
xor
sbb
fnstcw
jmp
mov
in
pushf
adc
xchg
stc
jbe
mov
int3
retf
add
lock
ds
push
sti
stc
js
jl
fidivr
(bad)
xor
mov
ja
out
mov
and
fcmovu
push
loopne
pop
test
mov
fimul
out
pop
push
iret
cld
cs
adc
cli
lea
push
pop
pop
(bad)
and
ror
or
xor
rol
cli
fmul
or
and
cld
loop
(bad)
imul
sub
xor
(bad)
je
jmp
jb
sbb
dec
test
jae
sbb
iret
xor
pop
pop
mov
in
out
push
repz
fld
sbb
xor
fstp
popa
imul
cmp
sub
fcom
dec
es
cmps
mov
pop
test
cld
xor
dec
xchg
adc
jns
movs
lock
add
fisubr
fwait
and
(bad)
das
xor
inc
and
movs
jnp
mov
repz
mov
nop
mov
pop
sub
imul
lahf
sub
xchg
sbb
push
repz
ss
jne
inc
enter
call
in
xchg
stc
iret
outs
loope
arpl
retf
adc
mov
outs
cmp
add
mov
out
hlt
idiv
xor
push
dec
dec
cmp
out
push
enter
fs
(bad)
lea
div
jnp
dec
xor
xchg
inc
dec
out
push
dec
stc
cmps
xor
int
mov
(bad)
xchg
out
popa
jns
cld
push
add
test
retf
pop
or
in
iret
sub
cmp
dec
or
ficomp
dec
xor
sbb
dec
ficom
test
mov
in
add
pop
jle
movs
enter
fsub
push
movs
(bad)
(bad)
cld
push
leave
jmp
mov
and
inc
test
xchg
jecxz
pop
jns
ftst
ret
lods
mov
add
iret
in
mov
jg
pop
mov
mov
js
pushf
push
movs
daa
lods
push
mov
into
retf
lods
inc
ja
jge
das
sub
out
rcl
sub
daa
in
adc
adc
adc
xlat
xor
movs
xchg
or
lods
je
cld
jns
cmp
or
aam
jns
std
test
cld
repnz
cmp
sahf
daa
xchg
jbe
in
mov
sbb
mov
push
inc
fldcw
mov
inc
imul
test
jae
ins
(bad)
or
mov
add
inc
mov
out
inc
aam
xlat
aad
mov
xchg
sbb
push
adc
dec
pusha
jo
and
call
scas
adc
fstp
daa
fsubrp
jl
xor
fsub
fs
xchg
fbld
inc
or
fistp
xchg
cli
ins
mov
leave
xchg
les
add
jbe
mov
cmps
xchg
loop
pop
inc
jno
es
or
nop
mov
mov
sbb
mov
or
js
hlt
jmp
call
inc
(bad)
adc
mov
xchg
gs
aad
shl
lock
stc
fcomi
je
(bad)
(bad)
and
int3
aas
stc
jl
test
or
sbb
(bad)
leave
mov
jmp
(bad)
into
add
movs
clc
push
pop
xchg
pop
mov
lea
dec
push
add
adc
test
in
outs
leave
mov
out
mov
add
jle
xchg
dec
or
add
or
jae
shl
mov
hlt
sub
mov
sahf
jbe
sub
sub
lea
icebp
pop
in
mov
outs
leave
sbb
mov
rcr
imul
xor
cmp
popf
rcl
cmp
pop
test
pop
ficomp
loope
xchg
cs
stc
js
jecxz
mov
test
in
into
jg
int
aaa
push
fdivr
xchg
ss
sub
xchg
push
cli
adc
fst
das
ins
(bad)
int
stc
outs
lods
lea
in
pop
loope
and
in
xchg
mov
jl
ds
pop
cli
jae
ins
outs
inc
inc
cmps
ins
callw
not
aam
xor
dec
adc
pop
mov
inc
sbb
fmul
or
inc
lea
inc
ins
nop
sar
sub
mov
and
dec
push
pop
push
ret
mov
xchg
inc
dec
sub
mov
std
mov
mov
lods
fstp
ds
inc
dec
jl
mov
loop
fcmovbe
push
retf
sub
fldcw
jo
push
fidiv
movs
cmc
fld
dec
pop
push
into
shl
and
addr16
nop
sbb
call
mov
rol
in
adc
cmps
xchg
(bad)
lahf
push
inc
out
push
mov
xor
cwde
mov
xchg
push
rcr
fdivr
push
fisub
mov
cmc
jb
in
adc
mov
shl
push
(bad)
jno
test
(bad)
pushf
popaw
cmp
imul
pop
jno
test
ret
xchg
daa
push
sub
leave
mov
jbe
push
xor
dec
shr
sbb
aam
xchg
das
dec
iret
sub
fmul
fidivr
(bad)
cmp
cmp
and
ficom
int
lds
mov
mov
rcl
cli
or
popf
sub
loopne
adc
not
fnsave
sbb
xchg
xor
icebp
outs
or
lods
sbb
arpl
mov
stc
xor
loop
hlt
lahf
ret
mov
inc
push
aas
mov
cmp
lods
rol
in
and
xchg
xchg
popf
xchg
xchg
bnd
push
jp
jne
sub
inc
mov
dec
repz
(bad)
(bad)
pop
rdpmc
pop
int
outs
xchg
sbb
mov
mov
or
dec
xchg
gs
sahf
push
imul
rol
inc
adc
inc
push
adc
dec
add
add
nop
add
jnp
and
cmp
add
call
dec
aaa
ror
add
std
shr
cmps
push
sub
cmp
or
push
in
call
add
dec
or
mov
sub
inc
mov
push
mov
add
mov
sub
adc
js
push
dec
and
cmp
nop
adc
cs
(bad)
fsub
inc
or
mov
es
in
test
imul
mov
aad
jae
rol
jecxz
test
pop
xor
imul
andps
inc
add
fnstcw
test
fld
das
and
inc
ds
(bad)
mov
outs
add
lds
inc
imul
ja
jecxz
push
frstor
loopne
scas
jo
(bad)
sub
(bad)
sbb
pop
xchg
sbb
push
mov
add
sub
nop
sbb
hlt
inc
mov
loopne
sbb
nop
xchg
fidivr
and
sub
inc
and
inc
and
mov
pusha
cdq
pusha
or
sbb
dec
inc
jnp
xchg
add
and
test
add
adc
imul
test
pop
mov
daa
cmp
adc
adc
mov
and
lods
scas
push
pop
fcmovnu
fs
cmovae
fsub
jno
mov
xchg
jle
mov
pushf
loop
mov
je
mov
aad
xor
repz
fidiv
mov
aam
add
mov
fwait
cmc
jg
out
imul
cmps
mov
ins
add
add
icebp
mov
(bad)
aam
jbe
sti
jl
or
xor
cs
nop
fcomp
mov
add
push
stos
cmps
cmps
inc
push
inc
sub
jnp
xchg
xor
push
fstp
dec
sbb
inc
int
clc
adc
push
fs
add
jle
retf
fwait
loopne
ins
shl
dec
jecxz
clc
arpl
out
mov
cwde
pop
rcr
rcr
leave
or
push
inc
xchg
sbb
cmp
dec
dec
sub
pop
pop
call
pop
push
mov
mov
int3
pop
inc
sbb
adc
jns
xchg
fnsave
and
fs
imul
inc
push
pop
pop
das
push
xchg
out
xor
mov
mov
aas
xchg
and
jne
in
js
add
xchg
out
(bad)
stos
dec
mov
xchg
inc
adc
inc
xchg
or
push
xchg
cmp
sbb
push
(bad)
addr16
neg
cmp
xor
cmps
jno
pushf
dec
mov
xchg
mov
and
push
stos
ss
arpl
(bad)
fs
sbb
imul
add
hlt
xor
add
lock
enter
stc
pop
sbb
jge
lods
int
jle
mov
and
cmp
jnp
inc
push
xor
ss
dec
ins
(bad)
mov
inc
mov
das
inc
test
aas
dec
lock
mov
inc
sbb
addr16
punpcklbw
bnd
ret
jle
test
mov
push
(bad)
xor
(bad)
jmp
loop
outs
or
pop
pop
(bad)
enter
pop
pop
pop
fimul
movs
adc
aam
bnd
cmp
jnp
ins
cmp
cmp
sub
and
jns
xchg
push
inc
out
xor
jmp
cmp
or
retf
cmc
cmp
shr
out
inc
test
sub
out
dec
xchg
push
retf
call
pushf
xor
or
push
shr
scas
jae
push
sub
add
mov
push
inc
in
imul
inc
adc
rol
xor
(bad)
fsubr
out
jno
push
jns
and
cmp
scas
or
inc
fbld
gs
cmp
cmp
xor
inc
mov
ret
mov
stc
sbb
dec
repnz
or
sbb
fwait
xchg
add
test
xchg
and
gs
xchg
push
in
test
retf
ins
xor
test
inc
sub
inc
sbb
inc
fisttp
mov
xchg
pushf
fst
shl
cmp
sub
jmp
mov
cli
pop
fdivr
push
aam
cmp
jae
adc
scas
jno
ins
xchg
dec
mov
cmp
push
pop
and
not
aaa
jl
xchg
push
hlt
lock
sbb
pop
xchg
not
dec
gs
stos
icebp
in
mov
xchg
ror
lea
nop
pop
push
xchg
fiadd
(bad)
xchg
add
aad
int
ret
fild
dec
out
dec
push
add
ss
cmps
nop
cmp
pop
jnp
mov
lock
and
outs
(bad)
lds
adc
jl
ins
call
psraw
mov
outs
jbe
sub
je
mov
fistp
xor
retf
xchg
daa
inc
and
jbe
jns
sub
sbb
(bad)
in
pusha
pop
iret
inc
mov
aad
fcom
repnz
add
sub
push
sub
imul
mov
in
ret
jmp
lods
sbb
xor
pop
aas
jb
pop
mov
and
movs
xchg
pop
fwait
out
adc
add
ss
stos
xchg
sub
fwait
aam
outs
push
inc
pusha
lods
leave
xchg
jae
(bad)
push
outs
popa
ficom
jecxz
and
push
icebp
mov
cmp
mov
(bad)
ds
fsubr
sub
outs
imul
or
mov
lea
outs
or
(bad)
retf
les
rcr
int
ins
jne
mov
sub
ins
mov
shl
mov
ins
inc
cmp
enter
fdivr
ins
in
imul
fs
mov
lea
fwait
mov
fimul
xchg
cmp
stc
mov
xor
mov
mov
sub
sti
scas
jo
scas
sahf
xchg
pop
call
xchg
fmul
out
jno
cs
es
icebp
(bad)
mov
call
sbb
popf
dec
jecxz
jmp
je
icebp
popf
inc
dec
ins
int3
jns
xchg
sbb
arpl
jns
xchg
sbb
out
daa
jno
hlt
push
jmp
fisubr
aam
out
paddd
call
mov
sub
addr16
in
adc
fst
out
in
not
pop
jo
retf
gs
shl
jmp
or
xchg
jns
add
mov
je
hlt
(bad)
cmp
sbb
out
outs
in
movs
and
retf
or
mov
int3
jnp
push
mov
cwde
cld
lods
mov
pop
jmp
(bad)
fwait
cmp
or
inc
jno
imul
dec
loopne
cld
lods
push
push
push
or
enter
cmp
aam
shl
add
xchg
ror
ror
sbb
pop
sub
aaa
das
push
enter
dec
xchg
out
jne
mov
(bad)
or
fsubr
add
inc
repnz
jae
cmp
(bad)
xchg
push
inc
stos
or
hlt
in
adc
xchg
inc
push
scas
loopne
pop
out
lock
out
scas
je
mov
fistp
pop
jle
pop
sbb
jno
loope
sub
fsubp
je
in
js
and
retf
lea
pop
xor
xor
pop
jbe
fimul
push
dec
neg
xchg
cwde
mov
cmp
fst
push
mov
arpl
outs
push
retf
adc
dec
add
xchg
cmps
(bad)
ds
into
int
fbld
test
or
push
out
sub
aad
sub
xlat
stos
cmp
(bad)
dec
stos
sbb
fsub
sbb
out
mov
mov
out
test
and
into
pop
mov
and
push
stc
js
xor
arpl
cmp
lea
push
xor
dec
mov
adc
add
lahf
test
movs
xchg
aaa
popf
mov
cmps
jnp
jg
sar
aas
dec
shl
push
and
cmp
(bad)
xchg
out
aaa
push
int
popa
ret
imul
mov
and
adc
out
(bad)
es
inc
daa
(bad)
ret
les
mov
repz
das
sub
ror
fnstcw
mov
fld
and
or
fdiv
pop
daa
add
lods
enter
fmul
push
push
inc
xchg
mov
mov
jnp
and
je
xor
push
adc
add
jo
lock
or
mov
xor
pop
call
lahf
mov
inc
je
dec
and
adc
mov
fimul
sub
(bad)
sub
dec
rol
inc
push
neg
out
stc
pop
mov
jne
imul
test
add
sub
mov
dec
xchg
xor
pop
sbb
xchg
movsx
mov
and
retf
and
xlat
mov
idiv
repnz
adc
mov
cld
ins
inc
xchg
sbb
ret
jle
loop
pop
push
dec
cmp
(bad)
sub
mov
imul
sbb
xor
add
inc
js
pushf
daa
mov
or
mov
lock
(bad)
nop
pop
cmovp
push
enter
fsubr
les
add
push
or
jge
(bad)
push
cmp
jno
dec
(bad)
xchg
adc
and
mov
in
dec
lahf
test
shr
int3
test
jl
ins
cld
sub
mov
xchg
jecxz
mov
sbb
fstp
and
sbb
mov
fidivr
nop
mov
jge
ds
mov
arpl
dec
pop
out
mov
pop
jmp
inc
fwait
out
mov
aaa
adc
cmp
cmps
test
mov
add
jbe
fs
into
test
mov
adc
push
mov
int
add
dec
mov
mov
and
xor
rol
lea
xor
cmp
xchg
xchg
out
xchg
push
(bad)
mov
jnp
(bad)
clc
int3
mov
mov
xor
adc
std
sbb
out
imul
inc
dec
cmp
mov
jae
jbe
pop
leave
ss
sub
nop
mov
jg
in
loop
shr
cmp
ret
mov
cli
sahf
ds
scas
outs
fwait
sti
scas
das
loop
in
popf
outs
(bad)
repz
in
iret
push
pop
cs
xor
inc
cmp
cmp
dec
ins
loope
jmp
cmps
les
int3
rcr
aas
movs
jnp
(bad)
clc
in
ret
cwde
gs
psadbw
sar
int
fld
(bad)
xor
and
nop
mov
das
adc
aam
sbb
pop
aam
and
push
sub
lds
arpl
jg
inc
lahf
fnstsw
mov
rcl
cli
fsub
pop
frstor
(bad)
lea
mov
call
and
xchg
mov
cmp
mov
(bad)
mov
jmp
or
(bad)
lea
imul
xchg
pop
jl
xlat
sar
xor
jnp
ret
outs
div
cs
dec
(bad)
(bad)
fistp
sbb
xchg
enter
lods
jl
out
jno
test
scas
mov
scas
dec
cmp
jbe
mov
and
pop
dec
out
add
mov
cmp
jo
mov
aaa
(bad)
div
push
and
vdivss
adc
(bad)
push
jne
cs
clc
loope
jl
cmp
hlt
ror
(bad)
cmp
call
pop
fnstsw
call
mov
push
mov
mov
inc
xlat
dec
out
arpl
and
mov
push
inc
std
xor
sti
movs
and
push
mov
std
mov
(bad)
dec
xor
out
jne
sti
pop
mov
mov
shl
pop
shr
in
out
mov
cmp
cmp
mov
jecxz
mov
inc
mov
ins
sub
xchg
sub
cmc
inc
sbb
rcr
fwait
jmp
adc
cmp
sahf
push
mov
repnz
mov
add
int
(bad)
aam
ficom
push
or
mov
cmp
and
daa
mov
push
xor
fincstp
pop
out
cwde
xchg
ins
in
mov
push
push
out
mov
clc
or
(bad)
out
mov
mov
mov
fbstp
and
fadd
push
dec
jge
neg
or
aam
sbb
popf
shl
add
push
dec
jg
movs
mov
in
dec
push
dec
cli
jb
fcomp
pop
sbb
xchg
sahf
lea
sub
pop
fcomp
test
mov
add
pop
push
retf
cs
mov
bound
mov
cmc
sub
rol
add
mov
xor
inc
sub
sub
inc
pop
xor
mov
xchg
and
retw
data16
dec
xchg
mov
jno
int
repnz
inc
cmp
jno
in
movs
sahf
pop
add
outs
xchg
xor
in
(bad)
mov
or
pop
lsl
aaa
sbb
push
pop
adc
shl
jecxz
addr16
out
sbb
inc
sti
and
nop
sbb
mov
in
xchg
add
shl
jne
mov
cli
dec
sbb
xchg
aaa
and
cmp
(bad)
push
shl
jecxz
out
and
fwait
les
pop
(bad)
mov
mov
xchg
sub
in
xchg
cli
fistp
shr
xchg
jge
ins
repnz
sub
aas
aam
das
and
es
js
pop
sub
xchg
jecxz
out
mov
idiv
lods
test
add
push
push
xchg
rcl
repz
retf
xchg
xchg
xchg
xchg
add
fistp
jne
mov
loop
cdq
adc
ins
sub
imul
loope
je
cdq
cmps
jecxz
adc
in
bnd
test
mov
lock
sub
loopne
dec
loope
mov
inc
inc
idiv
cmps
aaa
inc
and
mov
repnz
stos
das
das
aas
inc
retf
repz
jns
ss
mov
out
adc
or
in
pop
mov
inc
sahf
and
xchg
dec
jg
xchg
retf
mov
jo
push
xchg
enter
retf
js
cmp
fmul
retf
mov
sub
or
mov
add
pushf
inc
and
int
mov
push
push
dec
jle
out
jge
aam
inc
(bad)
adc
pop
ss
nop
stos
repnz
mov
stc
sub
cmp
and
mov
pop
fwait
(bad)
(bad)
jl
daa
fcomi
xchg
jno
or
sub
loope
in
cmc
xor
repz
sub
sbb
dec
sti
cmc
push
retf
mov
jle
add
in
loope
daa
push
pushf
imul
aam
adc
add
mov
repnz
in
in
push
ins
sbb
cmp
adc
dec
xchg
ja
and
mov
pop
add
push
fsubr
repnz
add
pusha
jae
js
loope
sti
imul
xchg
inc
dec
or
div
and
pop
lods
test
retf
rol
je
xor
repz
mov
push
pushf
or
add
push
ror
iret
or
mov
out
cmp
aam
jecxz
shl
pop
jmp
clc
daa
sub
push
stos
fs
inc
cld
cmps
(bad)
pop
xchg
jg
sub
ret
adc
inc
jne
je
aam
dec
push
push
dec
rcl
(bad)
xlat
cmp
mov
popf
inc
push
popa
add
fs
mov
inc
in
(bad)
lahf
cvtps2pd
hlt
cmp
ja
adc
jecxz
ins
dec
gs
push
mov
jmp
popf
popf
xor
add
out
jle
xchg
pop
daa
or
add
cmps
mov
mov
add
cld
mov
xchg
(bad)
int3
xor
mov
cmps
mov
movq
ds
xchg
mov
pop
xor
(bad)
sub
bound
fidivr
jp
retf
jle
xor
mov
xchg
mov
in
jne
mov
stos
xchg
in
fcos
add
outs
cs
fs
nop
xlat
xchg
cli
mov
dec
push
outs
ins
xor
adc
push
mov
pusha
(bad)
pop
xor
dec
(bad)
fsub
ror
add
inc
xchg
sti
cs
xchg
pushf
in
inc
or
outs
add
push
fnstenv
sti
and
mov
leave
ins
inc
repnz
fdivr
mov
in
hlt
pop
sti
(bad)
cs
mov
xchg
add
xlat
in
mov
cmc
cmp
xchg
loope
pop
test
pop
stc
mov
mov
fdiv
in
add
jg
jno
(bad)
cmc
push
cwde
fucomi
in
and
adc
adc
xor
adc
add
jno
or
inc
dec
mov
adc
xor
aam
mov
inc
(bad)
mov
cmps
xchg
outs
mov
(bad)
mov
mov
popf
out
jmp
adc
arpl
add
or
cmp
pop
repnz
cmp
push
into
out
rcl
cmp
and
jb
xor
shr
scas
jecxz
xchg
inc
and
push
jnp
sub
and
fwait
mov
out
mov
xchg
js
sub
sbb
mov
or
nop
enter
clc
push
out
out
cmps
sbb
sbb
cmp
add
pop
popf
xor
cmp
sahf
dec
jp
mov
sti
add
in
jns
pop
fucomi
ud2
cmp
mov
mov
jl
pop
mov
and
rol
mov
imul
pop
dec
into
jmp
sbb
mov
xor
lods
lods
pop
mov
xchg
pop
retf
xor
call
retf
push
shl
mov
and
stos
sub
outs
retf
(bad)
add
dec
arpl
inc
out
inc
pop
out
aaa
sbb
ret
outs
push
imul
(bad)
and
adc
inc
aaa
sub
fs
xor
sbb
lods
(bad)
jle
daa
stc
outs
and
cmp
idiv
mov
shr
and
pusha
sti
adc
dec
push
es
fwait
adc
jno
fs
adc
lods
xor
xchg
ror
nop
adc
movs
sub
cmp
mov
dec
imul
imul
sub
pop
movs
adc
push
and
inc
loope
lods
cli
inc
jb
sub
xchg
js
add
hlt
add
cli
mov
jecxz
and
dec
loopne
fadd
enter
push
jo
xchg
shl
adc
pop
es
cmps
xor
dec
push
out
push
ret
cmp
sbb
retf
sub
jle
or
pusha
retf
cli
jo
fs
jmp
int3
iret
(bad)
addr16
(bad)
add
imul
inc
daa
(bad)
cli
pop
push
xor
test
repz
jae
sub
sbb
or
movs
mov
sub
adc
ds
jmp
jge
sbb
sbb
icebp
mov
leave
ja
lods
push
adc
mov
std
pop
xchg
pop
rcr
dec
jb
add
out
mov
push
aaa
cmp
cmp
push
fs
mov
inc
ror
xchg
jbe
inc
mov
fst
rcr
and
adc
or
js
mov
(bad)
and
shl
scas
cs
repnz
repz
test
sub
push
inc
adc
leave
jge
mov
inc
sub
in
fild
adc
xor
pop
daa
push
sub
mov
xor
adc
sub
push
outs
cmp
mov
mov
push
sar
int3
pushw
outs
and
out
xchg
xchg
pop
add
sub
hlt
jmp
scas
jge
mov
(bad)
(bad)
add
cmc
pop
in
dec
mov
iret
cmp
aas
xchg
ins
arpl
lahf
cmps
bound
pusha
xchg
repz
push
gs
add
test
fld
in
pop
repnz
cmp
push
mov
mov
sar
jle
xlat
das
mov
lods
jb
iret
and
sub
fild
mov
and
xor
lods
cmp
nop
pop
das
mov
in
outs
sbb
jmp
nop
sbb
lods
pop
js
outs
adc
cli
cmp
rcr
int
xchg
retf
imul
add
cwde
sbb
jge
jmp
lods
imul
jge
xchg
pop
or
arpl
out
loopne
lods
outs
out
hlt
xchg
mov
pop
ja
retf
retf
retf
movs
jae
(bad)
nop
cmp
push
sar
xchg
xchg
inc
xor
pop
les
mov
retf
xor
stc
mov
xor
add
dec
(bad)
fidivr
mov
clc
push
push
or
push
(bad)
mov
mov
xor
adc
cmp
das
xor
outs
out
jns
sub
repz
dec
imul
leave
mov
xor
fnstenv
and
mov
pop
pop
inc
retf
inc
fwait
mov
cmps
mov
pop
ins
repnz
popa
mov
push
(bad)
adc
enter
add
fidivr
push
xor
mov
add
jbe
cmps
and
(bad)
lods
fisttp
aam
les
mov
int3
jl
scas
sbb
shr
mov
and
das
xchg
in
cmp
imul
gs
dec
(bad)
iret
cmp
loope
add
neg
xchg
push
pop
dec
repnz
retf
lds
inc
jge
and
dec
ins
jge
es
and
adc
or
or
dec
add
add
dec
and
xchg
jno
or
shl
add
movs
daa
lds
dec
mov
ror
in
mov
and
xor
xlat
pusha
xchg
mov
xchg
dec
xchg
shl
cwde
inc
arpl
repnz
add
push
add
rcl
fidivr
scas
inc
cwde
imul
mov
jle
nop
mov
fistp
sub
in
shr
mov
int
cmp
xchg
mov
iret
outs
ficom
sbb
daa
arpl
cdq
scas
imul
fstp
or
mov
pop
ins
cmp
test
(bad)
(bad)
and
enter
xor
scas
ja
ficom
xor
jecxz
or
loop
(bad)
gs
jp
call
sahf
xor
pop
jns
jnp
push
ret
nop
inc
cmp
loop
push
mov
cmp
mov
outs
mov
jo
(bad)
fnstenv
sbb
and
or
mov
shr
push
add
sbb
jge
push
scas
test
jle
fmul
fmul
test
adc
sti
test
adc
mov
and
xchg
in
sub
add
inc
jb
add
mov
pop
mov
rol
pop
retf
ss
sbb
outs
lods
pop
lock
jo
sub
mov
jmp
sub
cs
mov
test
jb
add
fld
pop
push
retf
sub
jne
out
and
add
and
test
adc
pusha
pop
add
add
fsub
fild
sti
xchg
in
retf
jae
pop
fisubr
add
inc
and
add
and
test
adc
push
test
xor
aaa
(bad)
iret
cs
xchg
movs
neg
push
enter
push
(bad)
or
leave
mov
mov
and
cmc
mov
je
fsubp
mov
xchg
mov
mov
fs
ret
stc
and
aad
arpl
xchg
xor
inc
(bad)
rcr
sbb
add
jg
jmp
cmp
fs
jne
sub
dec
lds
mov
xor
clc
sahf
pop
pop
je
inc
jmp
push
int
in
imul
mov
mov
(bad)
xor
pop
fcomp
popf
sub
dec
sub
push
jbe
lahf
xchg
cmps
sbb
ja
xchg
adc
jns
fisub
mov
and
(bad)
neg
xchg
xchg
dec
mov
iret
retf
out
int3
pushf
inc
cwde
movs
test
mov
(bad)
mov
push
out
adc
dec
xlat
ins
and
cli
mov
cld
aaa
movs
out
xor
cmp
sub
sbb
(bad)
xlat
xor
push
stc
adc
lods
push
pop
fadd
mov
pop
rcr
aas
ds
push
fadd
mov
(bad)
mov
repnz
ror
cwde
loope
mov
call
xor
stos
xor
adc
mov
imul
pop
sbb
push
pusha
mov
mov
pushf
sti
(bad)
sub
mov
mov
stos
pusha
jmp
(bad)
cs
aas
xchg
pop
inc
dec
test
cmps
xchg
xchg
int
ins
repnz
adc
rcr
mov
xor
jae
hlt
sahf
or
js
cli
xchg
jns
loopne
dec
je
(bad)
std
xchg
inc
push
push
jo
icebp
ss
addr16
push
(bad)
adc
sub
pop
push
cmps
jo
sbb
dec
test
add
imul
int3
ins
popa
mov
dec
sti
mov
inc
or
repz
add
jle
or
jns
xchg
cmp
and
cmp
imul
test
sub
xchg
pop
sub
sub
xlat
mov
or
mov
lods
stos
ret
or
or
adc
pop
sbb
add
add
and
add
in
push
syscall
pop
mov
jno
mov
mov
dec
sbb
(bad)
neg
ins
sbb
loope
adc
aad
idiv
or
scas
sbb
adc
pop
je
ins
push
pop
push
sbb
mov
lock
push
add
xchg
ss
add
scas
retf
push
in
add
scas
ret
or
aam
jbe
rcr
cmp
push
aas
sub
dec
mov
xor
out
push
in
xchg
push
fdivr
mov
out
outs
or
sub
aam
jl
movs
mov
arpl
xchg
jmp
pop
and
out
sub
enter
xchg
adc
cmp
popa
fcomp
inc
sbb
mov
jo
mov
jbe
into
shl
add
data16
es
popa
dec
sbb
and
cmp
xchg
add
cdq
pop
or
nop
loop
sub
jo
mov
push
inc
push
test
mov
pop
scas
fnsave
jle
mov
pusha
stos
iret
push
fst
retf
jmp
sbb
dec
xor
mov
stc
or
pushf
sbb
sbb
mov
jb
(bad)
leave
in
cwde
dec
xlat
mov
mov
nop
jle
or
fsubr
div
dec
popa
jno
lods
fsub
sbb
scas
stos
cmp
push
jmp
lods
fnstenv
lock
dec
and
(bad)
sub
jb
xor
mov
jg
sbb
stos
leave
mov
inc
pop
out
mov
in
idiv
pop
or
mov
scas
stos
outs
adc
ins
mov
mov
fnstenv
mov
fdivr
movs
(bad)
je
pusha
fsub
ss
push
shl
mov
loope
aad
pop
jbe
jns
leave
fdiv
mov
cs
sub
dec
sbb
mov
out
repnz
(bad)
xchg
fidivr
stos
jmp
jbe
xchg
mov
fdiv
repnz
inc
out
jae
inc
fsub
out
sub
hlt
(bad)
mov
icebp
popf
mov
xlat
std
pop
jae
lds
xor
pusha
imul
out
addr16
dec
mov
and
es
in
repz
in
mov
addr16
(bad)
jmp
xor
cmc
xor
push
pushf
cmp
xor
adc
inc
loop
es
(bad)
sbb
inc
xor
int
test
xor
push
push
cmp
in
mov
loopne
movs
jmp
fdivp
int
mov
and
mov
lds
xor
out
push
pop
stc
shl
jmp
pop
jnp
ins
imul
pop
cwde
out
ja
ins
fscale
add
mov
mov
push
xor
int3
push
call
cmp
and
mov
or
mov
and
sar
stc
scas
pushw
jmp
pop
xchg
sbb
into
push
arpl
dec
ins
cmps
push
sahf
ss
and
je
push
leave
sub
push
mov
push
sbb
push
dec
fistp
in
cmp
xchg
xor
shl
gs
xchg
adc
in
and
cwde
call
stos
(bad)
pop
sub
icebp
jae
ror
mov
rcr
lock
out
stos
iret
cmp
pop
out
sub
push
enter
and
jns
repnz
and
sub
out
sahf
mov
ret
mov
out
pop
pop
inc
imul
push
mov
std
cmp
jb
inc
sar
cmp
(bad)
cli
test
shl
push
xor
mov
enter
stc
pop
clc
mov
loopne
xor
jl
push
fsub
cmp
(bad)
fsubr
clc
cmps
jecxz
jle
mov
xor
ss
push
and
xchg
fwait
add
xchg
lea
jecxz
enter
jnp
jmp
stos
mov
ins
in
jl
outs
outs
mov
retf
push
jo
jl
xor
ins
cmps
xchg
fstp
cmps
xchg
dec
cmp
sbb
mov
(bad)
cmp
fstp
out
mov
inc
(bad)
mov
fldcw
cmp
add
inc
clc
jmp
jg
(bad)
push
xchg
dec
js
cmp
jno
xchg
in
inc
dec
mov
push
jle
pop
fld
ret
arpl
xchg
push
ja
je
(bad)
jmp
fist
mov
enter
into
outs
std
xlat
push
jns
pop
rol
mov
lds
mov
cdq
push
sbb
fistp
pop
xchg
pop
mov
cld
cmp
pop
or
pop
stc
fcomp
xor
push
cmp
dec
pop
int3
jns
popa
mov
push
out
push
inc
fcmovnbe
mov
das
adc
imul
int3
xchg
mov
fiadd
inc
sti
cs
pop
xchg
xchg
lea
clc
adc
pop
pop
mov
cmp
cmp
jne
jno
push
les
shl
sbb
ins
pop
mov
clc
je
mov
cmp
cmp
std
xlat
sbb
in
xchg
xor
clc
div
cli
iret
add
fld
cmp
sbb
push
cmp
pushf
cmp
pop
loope
ror
scas
scas
stos
pop
data16
push
jmp
fisttp
sub
pop
jns
xchg
leave
pusha
jne
fcomp
into
iret
call
inc
cmc
xchg
out
sub
jg
cmp
pop
push
jae
in
pop
in
jnp
dec
in
call
sbb
in
inc
outs
pop
xchg
out
adc
dec
aaa
xor
adc
stc
pop
jne
mov
sbb
cmp
pop
in
adc
dec
data16
sar
sub
pushf
out
aad
mov
dec
sbb
int3
(bad)
mov
cld
js
jp
dec
aam
(bad)
les
add
ss
dec
dec
jne
push
mov
(bad)
mov
ins
add
pcmpgtw
xor
addr16
jmp
iret
sub
lods
stc
cmp
cmp
mov
sub
sar
mov
pop
test
push
inc
xchg
mov
jge
xor
cmp
popa
in
repnz
loopne
retf
sub
and
sub
ds
daa
and
cmps
es
int3
jo
imul
dec
mov
push
cld
sub
pop
and
pop
xchg
mov
(bad)
stos
rol
aad
mov
addr16
dec
imul
sub
jl
imul
and
mov
add
mov
out
inc
mov
arpl
es
inc
push
cmp
aas
push
fcomi
add
ins
sbb
jge
in
dec
sti
jb
inc
adc
bound
and
add
cmp
xor
cmp
xchg
ds
pop
pop
jmp
add
mov
lahf
adc
fcmovnu
add
push
push
cwde
cmp
sahf
dec
inc
loope
add
jne
cmp
jmp
aaa
lahf
js
push
mov
push
jp
push
outs
jbe
pop
in
popa
ja
jecxz
mov
pop
fcomp
jo
jmp
enter
ror
cmp
pop
sub
jo
jo
out
pop
lock
popf
out
jl
lea
inc
sub
icebp
dec
fisttp
jmp
out
cmp
leave
mov
pop
inc
dec
mov
add
cmp
or
enter
or
push
dec
push
mov
out
mov
daa
in
dec
scas
xchg
mov
lahf
movs
dec
arpl
jno
xor
or
out
xchg
(bad)
cmps
pop
mov
fsub
dec
sbb
or
sub
aas
push
and
jl
mov
stc
fild
pop
test
scas
dec
or
call
push
ins
inc
int3
pop
call
ja
test
rol
adc
xchg
(bad)
mov
mov
cmps
cmp
(bad)
jbe
int3
xchg
dec
ret
sbb
jbe
jae
jmp
jns
lods
xor
out
adc
lahf
cmp
mov
nop
dec
jecxz
sub
mov
addr16
mov
arpl
jae
dec
popf
fild
outs
add
cmp
pop
lds
jl
jl
int
ss
retf
mov
or
ffree
cmc
movs
test
fdivp
retf
cmp
sbb
sete
cmp
push
jl
xchg
pop
push
scas
xchg
retf
shl
cld
movs
call
stos
mov
arpl
fstp
or
fiadd
cmp
test
or
rcr
pop
es
fisttp
fwait
(bad)
cmp
and
cmp
sbb
stc
movs
add
adc
ret
adc
test
xor
lods
pop
ja
jl
mov
bound
(bad)
xor
repnz
xor
xchg
mov
ja
push
out
inc
cwde
jno
inc
aas
int
in
inc
loopne
daa
pop
daa
push
fistp
outs
jnp
jne
adc
outs
pop
outs
dec
dec
or
call
fcomp
and
jnp
sbb
movs
sub
daa
jae
call
or
xor
cmp
sahf
popa
sub
fs
adc
and
jg
sub
(bad)
in
xchg
adc
add
push
or
pop
sub
aaa
or
and
(bad)
mov
jnp
add
dec
xor
mov
add
lds
aas
jne
into
mov
xchg
jmp
pop
sub
mov
pop
cmp
in
dec
and
mov
mov
jge
cmc
cmp
jge
or
mov
sbb
push
repnz
ss
add
je
cdq
xor
or
or
jne
fst
xchg
dec
enter
mov
ret
scas
xchg
cmp
push
hlt
shl
hlt
fcom
cmp
dec
(bad)
test
jae
and
lods
jmp
cmp
mov
ds
shl
imul
inc
sub
sbb
cmp
retf
push
dec
stos
lea
mov
adc
jae
jno
gs
out
fucomi
mov
mov
mov
dec
in
(bad)
cmp
iret
push
cmps
dec
ffree
fist
in
stc
pop
jl
jb
xor
jnp
adc
loopne
mov
shl
scas
lods
and
fsubr
inc
sbb
mov
fs
add
rcr
push
retf
ds
stos
dec
mov
enter
sub
xor
pop
sbb
test
mov
inc
lock
movs
mov
mov
jne
cdq
pop
sbb
sbb
cmp
(bad)
adc
dec
add
and
(bad)
jge
and
adc
dec
xchg
sbb
inc
add
pop
pop
push
outs
push
pusha
jmp
pusha
retf
cmp
enter
sub
mov
mov
adc
lds
(bad)
pop
push
dec
mov
sub
inc
dec
add
adc
dec
icebp
sub
jns
or
fwait
push
inc
rcl
xchg
aaa
inc
push
mov
mov
inc
sub
pop
sub
test
sub
fwait
jge
push
jl
in
fistp
adc
cmps
ss
mov
mov
ds
push
jecxz
mov
add
lds
mov
push
cmp
sahf
xchg
js
(bad)
pop
jecxz
iret
out
mov
mov
inc
mov
aaa
or
sbb
mov
mov
sbb
sub
sbb
retf
bnd
js
ficom
xor
daa
lods
repnz
cwde
push
inc
jbe
pop
popa
test
call
mov
je
jecxz
mov
outs
pop
cmp
fist
push
ds
icebp
adc
imul
lea
cwde
neg
jmp
pusha
imul
test
jo
out
mov
loopne
leave
jne
xchg
js
dec
fisttp
mov
adc
out
jne
jnp
mov
xchg
dec
fs
mov
inc
mov
sti
push
aas
mov
fdivr
outs
jbe
mov
pushf
jp
scas
mov
add
xchg
inc
rcl
push
pop
add
dec
adc
div
hlt
rcl
push
fs
inc
mov
int
rcr
cmp
into
sar
sbb
adc
in
jo
call
ins
lds
cmc
and
loopne
pusha
push
icebp
inc
loope
pop
call
fucomp
stc
pop
fcmovnb
cmps
in
xor
cmp
and
pop
sbb
bnd
nop
pop
popf
fs
aam
inc
sub
inc
loop
bound
clc
mov
aad
dec
cs
xchg
shl
imul
mov
sbb
mov
es
fstp
jl
xchg
movs
mov
mov
iret
xchg
and
pop
mov
sbb
pop
shr
loop
int
pop
movs
(bad)
ret
sbb
jmp
pop
sub
cmp
es
cmp
mov
mov
cmp
outs
xlat
push
mov
scas
adc
jno
pop
inc
jno
int
loopne
and
inc
push
xor
stos
dec
ret
fst
inc
imul
jecxz
shl
mov
sbb
push
adc
popa
ins
pusha
push
mov
paddusw
in
mov
dec
jle
ja
fcom
sbb
dec
mov
jp
int
mov
and
add
xchg
(bad)
xor
dec
sahf
or
movs
add
cmovge
scas
cmp
mov
outs
nop
mov
cli
jnp
adc
sbb
xor
jmp
xchg
mov
cwde
fsub
xchg
fiadd
adc
inc
mov
mov
sbb
rcpps
sub
data16
fld
cmp
out
or
into
mov
jg
iret
sub
js
dec
xchg
std
xor
mov
jne
cmp
repz
push
cs
cmp
scas
xchg
pop
ins
(bad)
adc
pop
call
nop
inc
mov
fldenv
jnp
or
mov
cmp
pop
or
mov
cs
dec
js
push
out
sbb
in
js
iret
push
hlt
js
or
xor
add
push
and
call
jg
(bad)
clc
mov
cdq
popf
test
and
arpl
push
inc
fs
and
mov
or
movs
cmp
imul
cmp
jae
xor
fisubr
out
mov
push
pop
jne
out
mov
xor
lds
cmp
xor
dec
fs
pop
sbb
and
pop
std
push
sbb
mov
dec
shr
mul
mov
sahf
or
(bad)
ror
addr16
data16
dec
sub
jle
xchg
or
jno
cmps
(bad)
bound
mov
push
mov
out
mov
fs
jno
idiv
into
pop
mov
aas
ins
dec
jae
in
(bad)
(bad)
mov
rcl
pop
push
add
xchg
jmp
loop
fwait
ret
mov
jae
cmp
push
adc
mov
mov
ret
inc
sbb
xor
shl
in
std
xchg
mov
add
aas
or
dec
xor
in
sbb
jg
jle
jns
mov
fs
in
shr
in
mov
into
mov
mov
xchg
push
pop
xor
cs
push
shr
jl
ds
fild
in
test
js
inc
les
and
les
stos
loop
inc
cmp
inc
rol
sbb
iret
or
jmp
ret
aad
loope
mov
mov
cmp
inc
sub
retf
cmp
dec
jae
sub
mov
xchg
pushf
lods
push
ja
loopne
fwait
leave
jmp
dec
mov
in
mov
in
pop
or
nop
mov
inc
aad
pop
and
push
and
dec
push
popf
adc
and
test
cmp
xchg
and
retf
rol
adc
or
and
add
std
cmps
(bad)
and
or
fcomp
cwde
es
inc
jmp
fist
push
sub
sbb
and
jl
mov
mov
fsub
pop
sub
sub
jmp
adc
adc
hlt
ja
add
push
cli
(bad)
idiv
or
out
(bad)
(bad)
jmp
stc
pop
inc
(bad)
push
(bad)
(bad)
lahf
cdq
lea
fnstcw
aam
xchg
or
cmp
or
call
addr16
(bad)
je
or
mov
mov
xor
mov
out
popf
(bad)
stc
js
xchg
sbb
fs
jae
shl
pop
xchg
(bad)
call
neg
pop
lea
inc
sar
inc
mov
and
adc
xor
or
mov
mov
xchg
mov
fcomp
dec
repz
(bad)
jg
scas
xchg
xchg
lods
inc
test
cmp
mov
repz
jnp
ss
fisttp
inc
das
daa
hlt
int
pop
in
out
pusha
mov
sub
jns
mov
lea
adc
outs
mov
mov
test
in
idiv
loope
xor
push
push
into
retf
aam
jbe
gs
mov
xchg
repnz
imul
add
enter
sbb
cmps
inc
(bad)
xchg
pop
sbb
dec
xchg
cli
imul
xchg
not
movs
out
inc
pop
int
cmp
out
imul
sti
sub
jbe
dec
fisttp
mov
retf
xchg
xabort
pop
adc
loopne
repnz
or
in
int
jmp
inc
jne
neg
clc
fdiv
leave
xchg
cmps
inc
shl
cmc
jl
pop
or
ret
push
inc
pop
and
cmp
push
orps
sub
sbb
mov
cwde
mov
aas
call
push
or
jo
hlt
mov
jno
imul
or
xchg
(bad)
xchg
call
xor
push
(bad)
lock
mov
push
int3
dec
mov
punpcklbw
push
sbb
dec
jmp
enter
jg
pop
xchg
aad
(bad)
jmp
mov
sbb
inc
fld
pop
cmp
or
cdq
sbb
push
push
jmp
cmp
ds
pushf
popa
outs
in
mov
push
sbb
gs
mov
mov
mov
jmp
in
lods
ror
popa
push
loope
js
mov
rcr
loop
shl
jmp
mov
aas
fst
and
dec
dec
lock
add
inc
push
test
add
add
dec
add
push
mov
mov
pop
scas
add
sub
adc
js
mov
retf
cmp
shl
and
lahf
test
shl
loopne
cmp
add
stos
inc
and
imul
pop
ret
add
sbb
mov
mov
xchg
cmp
(bad)
aad
das
sub
add
sar
jp
jnp
inc
mov
(bad)
mov
rcl
xchg
sbb
psubb
daa
sbb
jbe
ret
mov
mov
aas
cli
pop
jae
mov
mov
dec
mov
(bad)
test
hlt
cwde
je
into
push
push
(bad)
and
fadd
and
xchg
and
cmp
lahf
cwde
xchg
out
mov
cmp
jmp
jne
shl
push
adc
push
dec
cmp
ror
daa
xchg
and
loopne
mov
enter
pop
stc
mov
call
fisub
xor
test
push
or
mov
jno
int
pop
test
test
mov
sub
test
je
outs
aas
and
jo
fistp
add
jae
shr
xchg
(bad)
in
test
fcomip
fucomi
xchg
(bad)
sub
loopne
inc
out
int3
jns
jle
push
aad
stc
inc
or
fs
sbb
inc
xchg
pop
out
mov
xchg
nop
add
add
sub
xchg
sbb
inc
xchg
pop
out
fnstcw
mov
cmp
jno
mov
and
and
xchg
adc
adc
mov
in
xchg
add
and
inc
and
inc
and
and
adc
and
inc
add
add
or
xor
dec
push
out
xchg
test
cdq
cwde
pop
pop
or
jns
xchg
mov
jo
mov
aad
test
xchg
sbb
cmps
push
or
fst
mov
fs
lods
jnp
hlt
loope
jae
fisub
sub
fs
mov
inc
pop
movs
ja
cmp
outs
mov
mov
sbb
aaa
xchg
idiv
pop
push
into
(bad)
push
and
daa
cmp
xor
neg
psrlq
loope
out
and
arpl
test
in
mov
xchg
sbb
cmps
std
push
inc
sub
loopne
sub
or
lds
pusha
idiv
xlat
xchg
int
(bad)
inc
adc
cmp
leave
arpl
sbb
and
or
adc
iret
xchg
in
xor
jno
adc
pusha
out
adc
ins
loope
push
sbb
jo
(bad)
jmp
loopne
push
push
retf
lea
add
cmps
jmp
xchg
sbb
imul
(bad)
int
pop
xchg
jl
movs
sahf
(bad)
jg
fs
shl
mov
pushf
dec
jg
xchg
jl
sbb
jae
and
repz
dec
imul
ds
aaa
xor
pop
and
inc
sub
call
adc
movs
call
lock
jbe
pop
cmp
mov
sbb
or
mov
inc
mov
fsubr
cmps
inc
adc
sahf
clc
cdq
sub
(bad)
and
mov
iret
push
test
or
xchg
jecxz
nop
neg
loopne
mov
and
fwait
in
in
ins
jne
mov
mov
sbb
out
push
iret
hlt
xlat
sar
or
xchg
mov
xor
frstor
repz
fnstenv
adc
cdq
inc
stc
dec
nop
pop
push
xor
repnz
test
sbb
mov
arpl
mov
xor
cmps
fst
call
nop
jle
or
es
fdiv
mov
add
(bad)
pop
test
loop
arpl
adc
add
push
mov
(bad)
mov
loopne
fdivr
pop
shl
push
sub
mov
inc
xchg
adc
cmp
pop
rcl
mov
sub
pop
fcmovnbe
fidivr
repnz
lea
fs
ss
cwde
xor
dec
es
sbb
sbb
mov
fist
push
fst
mov
jecxz
loope
ret
inc
fld
or
(bad)
ds
xlat
mov
dec
lods
cs
or
xchg
sub
mov
dec
out
push
ds
jbe
call
push
mov
pop
mov
repz
add
ds
shl
in
sub
inc
rcr
mov
ss
ds
cmps
dec
cmps
dec
sbb
sti
cmp
add
outs
imul
sub
dec
icebp
xor
test
dec
aas
test
ret
rcr
cs
int3
cmp
movs
push
movs
push
into
(bad)
adc
retf
es
enter
fwait
data16
xchg
inc
das
mov
push
mov
adc
and
fstp
into
add
lahf
push
gs
xchg
dec
xor
sub
ret
push
imul
cdq
cdq
in
adc
popf
enter
push
sbb
leave
sbb
mov
fist
(bad)
mov
mov
cmps
test
jmp
scas
jmp
ror
ja
push
call
push
fisub
loope
movs
xchg
mov
ror
inc
push
push
call
(bad)
ror
ror
stc
pop
retf
jle
xor
(bad)
popa
leave
sub
mov
cmp
jp
xor
sbb
or
push
mov
fucom
je
daa
sub
ret
sbb
pop
push
mov
dec
push
add
cs
jge
inc
push
mul
cmps
mov
aas
sbb
sbb
gs
lods
jl
ja
cmps
(bad)
jbe
test
inc
push
xor
out
push
dec
fst
mov
test
dec
aas
pop
pop
dec
shl
xlat
inc
xor
jecxz
jne
xchg
das
ins
sbb
mov
loop
lea
push
cli
mov
adc
loop
mov
ins
inc
(bad)
push
in
xor
mov
sub
jge
fidiv
hlt
cli
dec
mov
cdq
adc
jle
inc
arpl
fist
aam
pop
repnz
es
sub
jns
xchg
arpl
repnz
aaa
pop
dec
arpl
xchg
ins
xlat
mov
les
sbb
(bad)
sbb
xor
movs
shl
dec
jmp
mov
cmp
test
cli
jle
pop
daa
xchg
(bad)
cs
repnz
sbb
push
loopne
enter
out
popa
jnp
ja
push
cmp
js
xchg
mov
(bad)
repnz
and
mov
jp
retf
in
inc
dec
xchg
and
dec
dec
xlat
push
stos
popf
sahf
sbb
cmp
nop
mov
scas
dec
sub
mov
aam
adc
cs
sbb
repnz
imul
cmc
or
mov
fdivp
xor
(bad)
(bad)
add
out
cmp
in
icebp
xlat
jecxz
pushf
jb
out
test
adc
pop
mov
dec
push
(bad)
push
push
cmp
imul
push
iret
enter
popa
lea
jmp
jl
icebp
mov
dec
repnz
daa
jmp
mov
xor
jmp
mov
add
xchg
stc
add
pop
lahf
xchg
jb
(bad)
adc
arpl
arpl
add
xor
jnp
cmc
push
inc
ret
fstp
jbe
repnz
jno
pop
xlat
mov
mov
(bad)
sbb
aas
sub
scas
sbb
mov
mov
jecxz
ja
in
jnp
xlat
xlat
sti
scas
outs
xchg
or
pushf
out
dec
pop
or
mov
xchg
ins
cmp
ins
sar
scas
bnd
pop
pop
outs
mov
dec
(bad)
sbb
sbb
imul
dec
or
es
cmp
mov
mov
cmp
out
xchg
popa
ret
dec
or
in
out
shr
mov
(bad)
sbb
xchg
jecxz
fsubr
daa
cli
(bad)
push
jb
xchg
push
ins
stc
pop
jae
dec
jae
int
push
or
inc
test
push
popf
(bad)
mov
fcmovnb
sahf
dec
cld
outs
aaa
xchg
xchg
daa
(bad)
add
popf
pop
xchg
mov
xchg
out
pop
mov
xchg
daa
push
add
jbe
xor
pop
aaa
jp
or
push
sub
sub
popf
xor
sbb
inc
movs
add
test
pop
adc
add
cwde
icebp
jmp
dec
mov
iret
je
fcmove
test
loop
stc
sbb
jmp
mov
xchg
fmulp
mov
sub
sub
adc
clc
pop
mov
outs
imul
mov
dec
push
(bad)
fld
hlt
mov
or
pop
aad
enter
dec
jnp
jl
push
in
pop
movs
icebp
or
pushf
pop
cli
mov
rcl
sub
and
cmc
mov
sbb
mov
iret
sti
in
hlt
ins
sbb
ss
hlt
in
ss
xor
ss
mov
add
push
push
daa
push
mov
(bad)
pop
fiadd
dec
cs
mov
stc
ins
jno
daa
mov
ds
js
mov
rcr
idiv
mov
leave
pop
aas
dec
stc
jge
push
aam
ror
mov
and
out
test
fsub
je
arpl
dec
adc
mov
test
xor
xchg
pushf
xor
sbb
xchg
mov
ds
mov
fidivr
mov
mov
das
dec
loope
cmp
pushf
retf
sub
mov
(bad)
retf
mov
xor
mov
mov
test
div
mov
pop
jns
push
add
je
xchg
mov
jns
(bad)
jmp
fs
shl
mov
and
mov
imul
in
mov
int
sbb
pop
sahf
sub
sub
pop
or
pusha
add
cmps
cld
mov
pushf
jno
dec
or
retf
cwde
mov
pop
fistp
adc
loop
mov
int3
pop
out
cmp
mul
int3
std
push
sbb
and
push
out
jae
jmp
lock
push
outs
arpl
sbb
mov
push
jg
xchg
ficomp
retf
xchg
and
sbb
dec
sub
ss
imul
imul
xlat
std
pop
add
jmp
and
outs
adc
ins
repz
cmp
inc
and
(bad)
jne
jle
in
(bad)
xchg
add
and
call
mov
pop
clc
loope
xchg
jne
sbb
(bad)
test
jl
stc
adc
stc
bound
out
cwde
fisubr
(bad)
jae
(bad)
mov
jmp
mov
into
fisubr
vpsubw
mov
in
les
sbb
fmul
mov
push
out
pop
pop
mov
test
arpl
fistp
lahf
fstp
sub
mov
mov
xchg
ja
aam
scas
push
pop
test
xchg
xor
add
sub
shl
dec
push
jecxz
jmp
mov
stc
repnz
(bad)
imul
cmps
sub
sahf
lock
cmp
mov
xor
es
cmps
sbb
ins
outs
push
pusha
nop
adc
mov
ja
xchg
cmp
dec
sar
fist
pop
and
scas
sub
nop
inc
arpl
add
in
push
mov
outs
(bad)
mov
jecxz
iret
loope
scas
fnstsw
push
mov
pop
jecxz
loopne
ret
xor
inc
dec
cmp
xchg
or
xor
ja
sbb
cs
mov
dec
and
pop
repnz
pop
in
aam
ret
xor
rcr
sub
mov
jecxz
xor
aam
xor
mov
(bad)
ss
inc
aad
pop
cmps
xchg
adc
pop
data16
xor
imul
jecxz
dec
pop
push
or
out
movs
enter
aad
jno
fsubp
dec
and
ret
jns
cmc
xor
bound
cmp
push
imul
fnstenv
repnz
sbb
lahf
outs
pop
nop
rol
repnz
dec
jmp
cs
cmp
mov
push
cmp
mov
jbe
outs
add
push
xor
test
sub
inc
and
data16
ja
mov
repz
jns
fs
retf
mov
aas
sub
mov
fild
in
(bad)
or
add
lds
pop
cld
cmp
cmp
push
out
std
and
aas
retf
hlt
mov
test
(bad)
push
movs
mov
jmp
sub
cmp
inc
and
das
clc
or
es
out
imul
xchg
(bad)
arpl
xchg
scas
aad
mov
ret
rol
inc
cld
call
pushf
jno
mov
fcomp
and
mov
inc
inc
test
pop
fsub
out
test
retf
fild
cmp
test
es
dec
cmp
mov
pop
jmp
lds
xchg
add
cmp
neg
cmp
jae
es
fwait
in
movs
xchg
mov
dec
js
(bad)
cli
ja
not
pop
pusha
mov
popf
sub
cmp
into
push
imul
jo
or
inc
retf
cmp
mov
mov
scas
ficomp
jmp
jbe
mov
out
jae
loopne
fs
out
push
cmp
or
cs
xchg
xchg
ror
xor
mov
inc
(bad)
pop
cmps
fstp
fiadd
(bad)
hlt
jmp
and
out
push
stos
mov
sar
in
pop
je
pop
enter
add
ret
sub
mov
mov
mov
gs
sub
pop
sbb
cmp
cmp
pop
jo
aas
clc
stc
push
lea
dec
test
mov
add
add
and
std
push
int3
cmc
pop
sub
shr
in
adc
repnz
mov
arpl
fdivp
in
popa
push
adc
int3
jb
int
fwait
neg
pop
(bad)
xor
aaa
inc
and
mov
inc
lahf
jp
neg
(bad)
sub
adc
jnp
jns
push
xchg
scas
mov
in
xlat
enter
mov
addr16
loop
lea
call
push
stc
or
push
dec
not
jg
(bad)
rcr
and
fdivr
stc
pop
aas
pop
add
jmp
jae
pop
or
enter
inc
cmp
(bad)
fsubr
arpl
sub
sub
cmp
dec
fdivrp
pushf
add
mov
adc
fucomip
scas
sub
aad
test
jle
nop
int
xor
xor
pmaddwd
ss
test
xchg
jae
pop
test
mov
add
(bad)
(bad)
xchg
sub
cdq
inc
mov
pop
(bad)
xor
je
es
sahf
int3
jns
mov
push
fimul
scas
lock
jmp
lds
popa
mov
shl
js
push
(bad)
pop
icebp
push
ss
sbb
imul
retf
xlat
dec
push
mov
jae
loope
jg
xor
or
imul
lea
mov
mov
xchg
sub
(bad)
inc
mov
out
pop
outs
outs
ficom
cmp
retf
mov
(bad)
xchg
xchg
iret
in
inc
sub
ins
(bad)
in
ror
or
idiv
jmp
or
adc
stc
setbe
out
(bad)
pop
mov
imul
jge
addr16
pop
inc
jae
jmp
cwde
test
out
outs
jle
stos
cmps
mov
scas
cmp
nop
fldcw
cmp
add
retf
loop
mov
stc
xor
or
int
loop
ror
pop
xchg
inc
lods
cmp
jo
addr16
mov
mov
cmc
adc
hlt
clc
gs
(bad)
pop
cmp
sbb
add
mov
dec
jo
aam
xchg
xor
into
gs
lods
hlt
push
rol
push
fisubr
jb
or
push
xchg
shl
mov
out
outs
(bad)
mov
loopne
and
xchg
adc
mov
rcl
repnz
pop
mov
pop
iret
add
loopne
es
sbb
xor
fmulp
sub
jb
sbb
inc
lar
and
dec
(bad)
cld
nop
sub
dec
sub
repz
xchg
hlt
sti
push
stos
mov
inc
into
adc
repnz
mov
dec
mov
inc
mov
retf
pop
sbb
mov
xchg
adc
inc
shr
aad
cmp
pusha
fcom
(bad)
or
aas
jne
leave
xchg
daa
es
rcl
push
sub
or
into
(bad)
retf
lea
pop
mov
popf
(bad)
loop
imul
popf
jnp
jbe
lock
push
xor
outs
and
loope
je
jmp
cs
inc
clc
pusha
arpl
pop
add
stc
pop
pop
jbe
test
iret
xor
test
sbb
(bad)
jmp
xchg
xchg
or
mov
mov
nop
mov
jmp
popa
sahf
sbb
sti
pop
sbb
mov
jns
push
mov
fbld
and
test
xchg
mov
aad
jae
or
ds
and
add
cmp
es
jg
rol
pop
cli
xchg
iret
(bad)
jle
retf
arpl
add
addr16
sbb
(bad)
or
aad
jmp
into
(bad)
sbb
shl
(bad)
enter
sbb
out
and
pusha
enter
sbb
icebp
mov
add
enter
mov
stos
xchg
(bad)
dec
scas
aas
cmp
lahf
xor
sbb
lahf
addr16
pop
cld
imul
shl
xchg
stos
ins
dec
repz
inc
ins
aaa
(bad)
outs
shl
and
fwait
sbb
sbb
jecxz
repnz
xor
test
push
pop
pop
xor
movs
iret
fimul
add
jbe
jno
add
scas
movs
pop
add
fwait
jns
pop
jmp
repnz
jnp
mov
aam
push
pop
inc
jle
mov
out
or
mov
push
add
cmps
mov
sahf
pusha
pop
mov
rol
icebp
lock
repnz
xchg
mov
inc
xor
aas
das
inc
cdq
into
jbe
pop
mov
jecxz
ins
dec
sar
cld
test
faddp
or
adc
pop
pop
pushf
jmp
sbb
and
rcl
out
mov
mov
mov
mov
sti
lods
xchg
fs
add
sbb
jbe
adc
dec
nop
fstp
adc
arpl
push
mov
fild
jno
sbb
cmp
sbb
repnz
mov
xchg
push
pop
add
push
sub
fbstp
push
jae
dec
mov
int3
aam
xchg
cmp
cmp
cs
test
aas
cli
iret
or
out
jae
enter
push
fist
leave
xor
sbb
icebp
(bad)
xchg
popa
arpl
jns
jecxz
sub
cmp
mov
cmp
lahf
cdq
stos
jmp
mov
jno
sahf
loope
test
pop
imul
jae
ret
mov
add
clc
push
leave
mov
or
push
pop
xchg
test
mov
adc
sbb
scas
(bad)
arpl
repz
cmp
inc
jne
pop
push
loopne
retf
mov
jne
sti
jbe
in
test
dec
mov
rol
cli
ins
push
sbb
cmp
pop
js
cmovnp
inc
xchg
aaa
imul
sahf
xchg
frstor
xor
cld
mov
or
inc
adc
or
add
adc
push
and
fld
add
sbb
(bad)
nop
out
pop
mov
call
cmp
adc
add
dec
mov
push
sub
ja
and
add
inc
adc
xchg
inc
inc
or
pop
inc
dec
aam
xor
imul
mov
mov
in
rcr
xchg
mov
(bad)
push
aas
inc
shl
pushf
stos
add
imul
mov
sub
adc
or
jae
dec
xor
mov
inc
sub
outs
jmp
jmp
xor
fs
out
jae
je
sub
xor
retf
das
pop
push
sub
sbb
dec
jmp
in
add
mov
stc
pop
addr16
(bad)
inc
imul
addr16
push
xchg
pop
push
and
(bad)
mov
sahf
les
mov
clc
cdq
cmp
mov
nop
inc
out
iret
je
jno
fcomp
and
data16
aas
inc
mov
and
stc
or
xchg
repnz
xor
ror
dec
mov
fild
xchg
or
xor
xchg
push
push
dec
or
mov
stos
hlt
fisub
xor
leave
(bad)
mov
int
jno
out
mov
movs
push
push
sub
jns
jnp
pop
out
mov
dec
pushf
fcomp
cmp
dec
and
jae
mov
ret
inc
mov
push
outs
outs
sti
in
push
cdq
pop
imul
enter
mov
push
cld
add
xor
cdq
call
mov
jae
cmp
push
dec
inc
mov
imul
push
dec
jno
shl
pop
lds
leave
das
mov
cmps
pushf
dec
push
fdiv
jne
xlat
mov
jns
xchg
mov
dec
sar
jle
dec
mov
imul
cmp
test
pop
lahf
xchg
out
fwait
daa
jg
(bad)
push
mov
inc
sbb
int
in
cmp
pop
(bad)
inc
sub
rcr
dec
mov
xchg
xchg
cmp
popf
mov
out
cmp
arpl
pop
rcl
sbb
loope
jb
ins
aaa
imul
int3
int3
(bad)
imul
and
mov
shl
ret
mov
push
inc
xchg
sub
loopne
std
jne
data16
jno
jmp
pop
pusha
nop
jge
inc
pop
test
test
jl
adc
xor
mov
pop
retf
(bad)
fld
push
inc
out
pop
mov
(bad)
cmps
(bad)
sbb
call
aaa
es
mov
(bad)
imul
cmp
add
dec
movs
adc
and
jle
sub
and
xchg
ins
repnz
adc
inc
dec
sbb
sub
test
adc
in
adc
xchg
or
and
inc
popa
dec
pop
cmp
aam
pop
dec
adc
inc
in
mov
adc
jle
rcl
inc
mov
nop
jmp
rcr
dec
or
push
inc
and
or
push
cmp
stos
cmp
mov
pop
push
add
imul
stos
mov
in
loope
mov
repnz
pop
retf
stos
nop
jno
xchg
sbb
sub
call
cmps
sbb
push
outs
loopne
mov
std
inc
nop
xchg
mov
mov
lea
cli
jnp
sbb
push
jge
mov
(bad)
scas
cmp
in
sub
pop
in
pop
nop
adc
xchg
jg
inc
fimul
ins
cmp
jb
cmps
into
push
dec
mov
sar
pop
rcl
mov
push
or
ja
bound
lahf
jno
mov
pop
cmp
mov
fwait
xchg
cmp
fcomip
inc
xchg
push
mov
aaa
mov
(bad)
sub
sar
pushf
sbb
cdq
outs
and
fdiv
adc
(bad)
mov
mov
mov
xchg
mov
mov
test
cmp
mov
fwait
(bad)
mov
push
ja
shl
inc
cmp
test
lock
loop
std
sub
cmp
(bad)
test
and
fwait
jmp
inc
sbb
imul
dec
add
test
adc
stos
aad
shl
xchg
sbb
inc
movs
ins
add
and
rcl
aad
rol
fwait
dec
retf
jno
add
push
adc
outs
sahf
adc
and
add
or
stc
dec
or
test
adc
in
cwde
add
test
test
or
inc
adc
loop
inc
jno
inc
and
dec
inc
xchg
inc
xchg
jecxz
in
loope
push
dec
inc
data16
loope
jmp
cs
xchg
into
ss
mov
je
add
out
dec
jne
cmp
(bad)
xor
xchg
pop
sub
dec
scas
(bad)
into
pop
(bad)
or
mov
push
mov
xor
iret
xor
push
jge
cmp
lea
inc
dec
nop
inc
movs
outs
mov
test
inc
adc
jl
fld
pop
fdivr
test
fild
cmps
xchg
xchg
mov
sar
dec
add
popf
sbb
stc
lahf
movs
in
sbb
in
lea
scas
addr16
out
imul
mov
ja
mov
cld
test
ss
sar
out
add
out
fimul
stos
out
jge
sar
call
ja
xchg
fs
push
and
movs
xchg
dec
jbe
xor
mov
int3
mov
and
sar
cmps
adc
(bad)
xchg
cwde
cmps
and
int
mov
dec
stc
les
add
xchg
test
outs
(bad)
hlt
out
and
call
idiv
lods
mov
mov
pop
push
cmp
imul
jno
je
in
add
pop
or
jecxz
popa
loope
js
add
in
dec
rcl
push
div
push
push
sar
pop
shl
repz
add
adc
nop
(bad)
sbb
stos
in
pop
clc
sub
stc
scas
call
pop
mov
cmp
cld
dec
iret
lock
lahf
cmps
out
jmp
mov
lock
sub
jl
pushf
in
dec
mov
scas
and
jge
jno
aas
add
push
shl
ins
mov
std
sar
bound
stc
cmp
int3
dec
xor
xor
fstp
fcomp
jbe
enter
(bad)
mov
lods
loopne
jmp
mov
shl
push
cdq
pop
(bad)
int3
cwde
dec
sub
lods
pop
retf
arpl
jge
ins
shl
sbb
ja
popa
add
mov
xor
cmp
jmp
sub
add
mov
scas
inc
mov
sahf
es
pop
and
arpl
jg
push
push
arpl
fdiv
and
xor
aam
int3
loop
push
cmp
das
rcr
scas
add
push
dec
adc
sbb
jmp
ja
jg
mov
sbb
mov
jns
jmp
loope
lds
xchg
jp
(bad)
push
stos
mov
std
sbb
ret
pop
cld
scas
mov
aas
rcr
icebp
out
sti
mov
paddd
iret
ds
push
xlat
mov
push
push
jns
out
leave
dec
xlat
push
pop
or
das
or
jnp
cmp
sbb
(bad)
in
add
int
lock
jmp
xchg
sbb
inc
not
sahf
jo
not
fwait
call
adc
push
sar
jne
mov
add
mov
iret
je
cmp
xchg
(bad)
cdq
xor
std
sub
pop
mov
or
dec
(bad)
and
fdivr
or
mov
cmp
mov
xor
dec
sbb
xor
xchg
mov
sbb
or
push
je
aas
adc
ins
cmps
outs
shl
call
sub
mov
add
aad
ret
adc
out
add
inc
lods
adc
jo
pop
ds
xor
aas
jb
jno
fcomp
mov
pop
jne
pop
ja
xchg
lods
cdq
cmps
jo
sbb
neg
mov
inc
add
cmps
pop
das
xor
cmp
pop
mov
ret
(bad)
test
test
outs
shl
fbld
je
jnp
mov
ds
out
hlt
icebp
aad
pop
xchg
dec
mov
int3
arpl
ret
out
arpl
mov
cli
test
jge
test
cmovne
mov
out
ror
cmp
and
jge
pop
enter
sub
sbb
mov
mov
out
mov
mov
fxch
outs
test
das
mov
outs
je
cmp
lea
sub
outs
dec
out
lahf
cs
cmps
aam
retf
jge
sub
xchg
bound
push
inc
cmps
mov
or
pop
mov
xchg
adc
fisttp
rcl
cmp
mov
dec
in
lods
mov
push
ret
mov
pop
scas
cmps
es
das
push
(bad)
hlt
mov
js
enter
and
cmc
dec
push
pop
imul
mov
cmp
fistp
inc
ins
xchg
cmp
cdq
adc
push
jl
mov
int3
xor
mov
cmp
cld
adc
cmp
dec
xlat
xor
push
mov
data16
push
jecxz
push
(bad)
rcr
inc
and
add
out
dec
leave
sub
mov
fmul
hlt
sub
sbb
sbb
jg
dec
xchg
std
xchg
stos
pusha
bound
sub
in
push
call
push
test
arpl
out
push
dec
loopne
repz
push
rcl
mov
inc
pop
sahf
cmp
fadd
xchg
aam
xchg
mov
jl
imul
xchg
fwait
pop
xchg
mov
cmp
mov
jne
cmps
retf
cdq
rcl
add
fwait
and
repz
ins
jne
xchg
arpl
push
arpl
sbb
pop
stos
push
sbb
nop
jno
adc
mov
dec
out
xor
sbb
add
cmps
adc
inc
int
and
fild
push
mov
lds
movs
push
or
xor
push
jno
or
in
mov
push
jl
fsubrp
mov
mov
xchg
pminsw
pop
add
mov
jb
fs
popf
push
jmp
icebp
sbb
lock
or
sbb
xchg
mov
fwait
leave
call
ins
fs
ins
arpl
es
cmp
data16
enter
imul
jp
mov
or
popf
shl
cmp
dec
int3
mov
loop
lods
xchg
xlat
sbb
or
pushf
stos
lods
xor
mov
mov
pop
inc
adc
adc
retf
jmp
pop
push
iret
ja
jne
pop
adc
nop
lahf
pop
mov
pop
sub
or
fbstp
enter
imul
out
dec
xchg
(bad)
sti
test
xchg
in
stos
push
dec
cmp
xor
out
lods
cmp
xor
pop
and
fldcw
dec
in
iret
dec
out
mov
movs
and
xchg
jmp
fwait
sub
sbb
sub
fistp
into
aad
test
jmp
leave
daa
scas
mov
mov
add
xlat
and
movs
jae
adc
ss
pusha
movs
test
arpl
xchg
(bad)
int
adc
pop
aam
les
cmp
popf
mov
dec
push
jbe
lahf
test
dec
or
mov
xchg
jle
mov
clc
ja
push
repz
inc
add
das
sub
je
inc
fcmovb
addr16
dec
xchg
out
je
push
inc
ror
(bad)
enter
mov
dec
sbb
inc
add
jg
push
cmp
les
cmps
mov
jecxz
or
loop
loop
inc
cmp
or
movs
mov
mov
mov
cmp
pop
mov
dec
loop
jmp
lea
hlt
fcmovb
xchg
sbb
mov
arpl
dec
jns
out
and
movs
xor
inc
movs
cmp
push
arpl
mov
shl
inc
adc
test
pop
push
jb
rol
outs
in
dec
mov
push
and
dec
sbb
pop
cmp
mov
fild
les
jno
pop
dec
out
cdq
pop
dec
popf
js
cdq
out
scas
hlt
leave
xchg
xor
cmp
push
jb
xchg
push
sbb
add
fsubr
movs
ja
mov
xchg
out
scas
adc
push
jecxz
add
pop
inc
sub
cmp
lock
mov
fs
jae
(bad)
and
push
mov
cwde
bnd
sbb
xor
imul
jmp
les
adc
add
mov
mov
jbe
lods
jo
test
pop
sar
xchg
inc
ficom
push
push
aam
sahf
out
(bad)
rcr
(bad)
pusha
cmps
mov
scas
std
xchg
sahf
leave
ret
(bad)
neg
test
or
shl
(bad)
das
xchg
dec
sub
inc
or
jge
das
xchg
scas
addr16
xor
popa
fs
push
repz
mov
std
fs
xchg
xlat
jp
loope
in
daa
retf
daa
pop
dec
imul
ds
lahf
stos
mov
adc
push
out
cmps
iret
movs
inc
xchg
sbb
mov
repz
push
aaa
and
jno
daa
imul
mov
mov
or
scas
xchg
cmp
ss
add
test
ds
cld
mov
(bad)
cli
sub
mov
jge
sbb
(bad)
neg
add
fstp
in
dec
mov
jp
mov
dec
fmul
dec
inc
push
pop
pushf
mov
repnz
xor
stc
push
mov
pop
pusha
ins
xor
imul
(bad)
and
pop
fst
call
stos
pop
sbb
mov
fbld
pop
push
es
out
jb
aam
jnp
jl
cmp
inc
inc
sbb
arpl
rcr
mov
lock
xor
jo
(bad)
aam
scas
mov
imul
sahf
mov
add
push
mov
out
iret
add
imul
push
inc
xchg
out
mov
imul
inc
mov
div
pop
mov
arpl
retf
js
(bad)
shl
inc
ds
retf
or
inc
pop
jb
je
mov
out
ja
repz
mov
imul
cdq
sbb
mov
sbb
movs
sahf
cmp
ins
data16
in
repnz
and
bnd
cmc
cmp
out
outs
dec
adc
ins
adc
(bad)
xor
xchg
pop
imul
aam
xor
push
xchg
push
iret
test
dec
test
arpl
imul
or
loop
(bad)
(bad)
push
push
ja
retf
cld
mov
inc
sbb
outs
pushf
leave
movs
imul
retf
cmp
dec
mov
into
sub
sub
mov
cli
dec
bound
adc
cmp
das
push
(bad)
sub
cmp
jecxz
int3
js
dec
in
sbb
movs
leave
jl
scas
xor
mov
jo
and
mov
popf
mov
mov
cmp
sbb
mov
add
jg
push
pop
repnz
xchg
arpl
in
je
mov
out
aaa
or
add
icebp
push
stos
setb
pop
jmp
ret
das
or
inc
enter
cmp
clc
jmp
fisubr
test
nop
(bad)
mov
test
sub
imul
dec
loopne
jbe
out
push
retf
adc
out
add
into
pop
ds
mov
add
xchg
xor
inc
add
aaa
push
sub
int
push
(bad)
shl
pop
cld
cmps
mov
in
adc
dec
in
xchg
fidivr
sar
xor
and
dec
ja
aad
in
jne
pop
out
and
stc
pop
xsavec
repz
cmp
in
data16
call
cwde
(bad)
xchg
add
xchg
lds
ret
popf
xchg
fdiv
cmp
imul
xchg
cld
imul
pop
arpl
test
(bad)
jne
mov
cmp
xchg
sub
jb
pop
cld
mov
jge
xchg
sub
fnstcw
popa
lds
pop
jbe
loopne
pop
out
inc
push
in
cmps
cmp
mov
loop
ins
mov
dec
stc
call
fimul
jmp
jo
mov
je
add
mov
outs
or
imul
cdq
pushf
mov
sbb
fimul
mov
cmp
adc
ja
out
mov
dec
ret
(bad)
cmp
mov
jb
add
in
and
jne
push
xor
loope
mov
inc
jmp
mov
out
(bad)
mov
mov
pusha
scas
sub
in
sahf
inc
aad
test
pop
into
retf
pop
das
cmps
mov
retf
jo
xchg
inc
xchg
cmp
je
loop
xchg
mov
jmp
fs
dec
cli
imul
rcl
dec
mov
mov
sub
mov
jecxz
xchg
(bad)
mov
inc
ror
push
jp
mov
cwde
in
ins
icebp
cmp
les
les
pushf
mov
lds
push
jge
aas
push
iret
jbe
jmp
xchg
imul
test
cmc
daa
mov
imul
mov
imul
mov
sbb
in
popf
test
jg
sbb
jle
cs
push
pop
cld
aam
cmps
int
cmp
lahf
sbb
icebp
cmp
pop
mov
xor
es
call
add
das
arpl
inc
mov
(bad)
sub
clc
pop
test
dec
sub
and
push
out
inc
out
cmc
cmp
inc
and
sbb
xchg
add
fistp
jno
stos
out
fisub
loop
repz
ud1
mov
es
pop
sbb
lahf
inc
outs
ret
cmp
inc
popa
je
scas
adc
push
dec
mov
mov
dec
addr16
jp
aaa
aad
xor
dec
les
clc
out
add
xchg
adc
mov
sbb
or
lods
add
retf
stc
ins
js
loopne
dec
push
jmp
mov
dec
hlt
sub
and
enter
ins
push
std
dec
xchg
scas
jo
mov
lahf
es
lds
or
jbe
rcl
sbb
ret
pop
add
outs
push
mov
aam
jmp
test
les
cmp
cmp
out
and
pop
es
into
pop
push
push
pop
popa
cdq
lahf
jae
test
sahf
aaa
jns
mov
outs
out
mov
test
ret
inc
adc
mov
call
jmp
(bad)
(bad)
sub
xor
push
aaa
mov
daa
xchg
(bad)
(bad)
std
cmp
jae
fcmove
mov
cmc
mov
xchg
frstor
pop
lods
(bad)
jb
sbb
ins
int3
ficomp
shl
out
das
outs
xchg
xchg
push
test
pop
sbb
dec
dec
sar
fiadd
or
jae
leave
and
out
mov
aam
movs
aam
or
int3
(bad)
arpl
rol
ror
dec
in
(bad)
fnsave
mov
ds
sbb
push
fs
sti
stos
xor
push
and
mov
sbb
sti
adc
call
push
sbb
mul
jne
xor
jecxz
sahf
int3
xchg
mov
push
push
mov
cmp
sbb
cli
sub
push
in
mov
push
mov
sbb
and
fisttp
out
mov
xchg
xchg
mov
sbb
es
adc
and
imul
adc
cli
iret
jmp
leave
push
add
xor
aas
imul
add
sbb
sbb
sbb
int3
cs
sbb
out
mov
push
or
and
jae
in
cmp
dec
cmps
push
xor
adc
fsub
push
rol
add
dec
je
and
xchg
int
arpl
mov
popa
mov
jecxz
(bad)
fld
test
or
mov
push
mov
cmps
push
leave
daa
xchg
fnsave
fcom
ja
into
leave
popf
(bad)
out
fiadd
mov
jnp
xor
mov
push
outs
mov
pop
rol
and
mov
scas
and
xchg
xor
push
div
rcl
pop
xchg
cmp
or
shl
add
scas
jae
add
lods
repz
pop
and
retf
in
inc
xchg
and
jmp
test
or
aaa
xlat
sub
test
call
or
sbb
fcomp
gs
cmps
gs
xor
retf
(bad)
or
(bad)
outs
outs
dec
movs
inc
mov
dec
mov
cmc
xchg
sub
enter
jecxz
test
cmps
inc
pop
inc
xchg
cs
daa
adc
pop
jge
xchg
pop
sbb
mov
sbb
std
pop
shl
ins
lods
pop
aas
rol
fdiv
movs
xchg
sar
lods
mov
jbe
jo
out
outs
stos
out
inc
lea
mov
mov
cmp
loop
ins
cs
sub
in
int
(bad)
fidivr
sub
out
sub
sub
aam
push
add
mov
and
mov
or
lds
xor
dec
ror
mov
outs
faddp
ja
jne
jne
dec
addr16
push
jo
scas
scas
xchg
pop
jb
es
les
push
push
push
test
cli
xchg
out
imul
xchg
lea
and
ja
cmp
or
dec
jbe
pop
pop
ja
nop
push
sbb
jae
or
daa
jmp
xchg
adc
inc
enter
fistp
scas
pop
inc
pop
daa
jo
cmp
mov
jmp
jno
jmp
mov
(bad)
fisubr
cmp
adc
test
cmc
test
enter
xlat
dec
out
test
idiv
addr16
jno
or
cmc
mov
add
call
or
lock
mov
jae
pushf
xchg
(bad)
iret
jmp
nop
pmaxsw
jmp
popf
pushf
shl
add
push
mov
cmps
scas
cmps
call
out
xchg
and
stos
call
stc
sub
xchg
mov
popf
push
dec
push
stc
stos
movs
xchg
rol
xchg
push
inc
sbb
or
js
je
scas
sbb
xchg
add
in
cmp
dec
dec
adc
cmp
push
in
nop
mov
sub
sbb
gs
jb
mov
ds
not
fidivr
jne
inc
leave
xchg
jns
mov
out
push
packsswb
loop
push
xchg
fld
xchg
inc
cwde
loopne
and
jp
adc
mov
rol
push
push
(bad)
mov
arpl
shl
inc
lahf
xchg
adc
lea
inc
and
(bad)
in
test
push
mov
mov
push
ins
(bad)
sbb
out
sti
and
outs
pop
dec
int3
xchg
fprem
mov
add
stos
mov
and
xchg
out
imul
fwait
sbb
mov
sbb
int3
mov
sub
pusha
packssdw
cmp
push
xor
xor
sub
not
xchg
pop
mov
push
(bad)
je
hlt
inc
and
and
mov
lea
ds
pop
xchg
sbb
(bad)
mov
pop
xchg
mov
imul
xchg
jg
xchg
ins
arpl
mov
ins
xor
inc
push
mov
jecxz
add
sub
jg
jecxz
dec
iret
std
je
add
sub
xlat
xor
(bad)
xor
pop
fadd
(bad)
mov
loope
xadd
xor
cdq
test
dec
fistp
pushf
or
cld
mov
jae
fld
xor
cli
or
cmp
hlt
jns
ins
lahf
mov
jmp
fcmovu
adc
pop
retf
ds
mov
cmp
pop
loope
dec
je
xchg
outs
ret
out
rcr
mov
(bad)
jo
mov
pop
or
stc
mov
jne
inc
cdq
aaa
inc
sbb
inc
pop
js
int
bswap
adc
cmp
add
jle
sub
call
lods
les
mov
stos
cwde
pop
jno
movs
xchg
nop
cmp
sub
repnz
mov
dec
xchg
cmps
pop
push
or
push
or
(bad)
div
adc
pop
jo
mov
in
push
mov
cmp
std
or
xchg
ds
call
aam
outs
cmp
adc
fs
pop
imul
mov
call
in
aas
mov
pop
dec
mov
ds
enter
imul
xchg
pop
push
outs
call
pop
loopne
stos
leave
lds
repnz
retf
je
(bad)
sahf
cmc
push
xchg
push
xchg
pop
mov
inc
cwde
in
lods
cld
mov
pop
jo
mov
into
leave
popa
es
dec
repz
inc
xchg
fnstenv
fistp
call
xchg
jno
xchg
inc
sub
push
mov
xchg
dec
outs
call
test
mov
add
in
dec
ds
mov
mov
std
pop
pusha
mov
stos
or
or
test
fld
mov
aam
inc
xor
imul
jmp
es
add
add
or
or
dec
inc
rcl
cwde
les
ins
sbb
cmps
adc
and
dec
out
mov
sub
sub
mov
xor
or
pop
aam
fld
cmp
push
cmps
iret
mov
pop
and
inc
sbb
cmp
inc
add
rcr
out
dec
jmp
xchg
daa
pop
fwait
sbb
shr
in
popf
pop
icebp
pop
jne
in
fst
add
je
aam
xchg
cs
sub
jns
or
shl
pop
out
add
jnp
stos
inc
xchg
fwait
cmc
pop
and
loope
mov
call
and
and
stc
inc
jge
dec
push
jp
out
dec
or
jo
repnz
mov
int
pop
cmp
mov
xchg
pusha
and
leave
js
sti
and
mov
sub
sti
stos
bound
(bad)
pop
imul
pushf
dec
sub
test
call
jmp
fnstenv
les
mov
jb
sub
imul
std
outs
fcmovnu
mov
dec
mov
add
mov
adc
cmps
and
lahf
fs
adc
fadd
fwait
lock
add
mov
in
aaa
lahf
xchg
adc
frstor
cmp
das
and
std
xchg
push
xor
adc
and
inc
ja
cmp
add
sbb
jne
dec
ss
(bad)
xchg
xor
and
out
adc
push
add
sar
test
mov
movs
jl
fs
dec
xchg
sbb
xor
shl
mov
add
rcr
sub
add
jb
or
xchg
je
mov
push
add
push
addr16
pop
mov
push
sahf
clc
repz
adc
pop
xchg
outs
enter
fs
mov
dec
ss
mov
and
not
in
out
stc
jb
test
sahf
inc
pop
cli
hlt
dec
sub
jl
out
in
push
and
test
ins
popa
adc
adc
inc
pop
jno
xlat
fs
idiv
xchg
sub
ret
mov
sbb
ss
xor
fdivr
push
jp
(bad)
scas
pop
je
dec
js
out
cdq
scas
and
je
stc
loope
outs
or
fisttp
imul
in
mov
addr16
call
xchg
neg
sub
jecxz
neg
ss
sub
arpl
repnz
lock
adc
ret
sbb
(bad)
fdivr
inc
fnstenv
ret
(bad)
sbb
mov
movs
clc
xor
(bad)
cmp
leave
enter
inc
fdivr
inc
xor
int
push
pop
xor
add
mov
test
je
repnz
in
in
cwde
or
in
mov
mul
jns
mov
sub
sbb
stc
dec
cmp
call
out
imul
fld
mov
xchg
or
cmc
jl
(bad)
sbb
mov
sbb
xchg
cmp
add
pop
xchg
ds
mov
loopne
xchg
stos
dec
or
mov
les
push
fidivr
dec
mov
lds
xchg
inc
movs
scas
test
(bad)
fnstsw
sbb
adc
add
mov
xchg
aad
sub
inc
pop
dec
jb
mov
cdq
cwde
das
jg
(bad)
sub
dec
add
cmps
loope
or
pop
and
xor
imul
movs
(bad)
jge
inc
sbb
ja
pop
icebp
mov
sbb
or
cmp
neg
dec
fcmovbe
mov
push
les
repz
shl
imul
jb
popa
shl
pop
ins
daa
les
lock
pusha
aaa
(bad)
xor
outs
xchg
mov
ins
pop
dec
nop
mov
cdq
mov
lock
pusha
mov
out
(bad)
or
int3
out
sbb
icebp
adc
retf
scas
ficom
call
xor
mov
ds
das
cmp
cmp
sub
out
(bad)
xor
dec
inc
cwde
dec
pop
(bad)
rcl
out
outs
sub
dec
xor
cld
and
adc
es
jbe
adc
mov
ror
movs
fs
sub
push
lahf
sbb
sub
sbb
(bad)
jge
cmp
cmp
in
popf
nop
fs
stc
mov
sub
jmp
js
scas
add
jle
mov
mov
jl
es
xlat
and
ret
mov
xchg
pop
test
cmps
push
mov
inc
(bad)
(bad)
enter
in
out
mov
(bad)
loopne
(bad)
sbb
(bad)
arpl
or
xor
jo
pop
pop
repnz
xchg
fmulp
jne
mov
ficomp
cdq
sbb
adc
pushf
fistp
(bad)
fnstcw
push
imul
add
imul
fldenv
sbb
movs
mov
mov
cmp
lahf
das
push
pop
pop
(bad)
pop
cmp
das
retf
out
or
push
push
lds
mov
repz
sbb
xor
mov
xor
fisttp
add
jg
dec
mov
mov
mov
xchg
push
(bad)
enter
sbb
pop
and
jmp
jb
xchg
xchg
push
cvtdq2ps
mov
xchg
ret
xchg
jo
arpl
mov
push
pop
xchg
(bad)
outs
dec
not
add
fcomp
pop
pop
cld
mov
pop
sbb
repnz
imul
jo
stos
add
outs
out
mov
jmp
lods
shl
je
fbld
push
jns
das
add
ins
mov
ins
js
and
mov
inc
aaa
sahf
pop
retf
pushf
cmp
pop
hlt
(bad)
fwait
pop
xchg
add
retf
dec
ja
out
mov
jb
pop
pop
hlt
test
xor
fadd
mov
aad
lods
jae
jo
test
and
imul
out
pushf
sub
je
cmps
mov
add
nop
push
cwde
cmp
(bad)
in
cmp
mov
ja
mov
push
cmp
icebp
shr
daa
pop
mov
cmp
clc
ins
test
mov
mov
lods
je
jg
rcr
(bad)
out
ds
jne
retf
ss
mov
push
xchg
call
imul
(bad)
loopne
retf
std
inc
lea
aam
das
dec
lea
int3
push
pop
push
ds
mov
ja
(bad)
in
pop
cmps
call
pop
pop
cdq
jl
fld
mov
test
retf
mov
popf
mov
out
and
in
hlt
add
pop
mov
mov
jae
outs
add
push
inc
int3
rep
imul
into
imul
add
push
jb
aad
sub
adc
xchg
es
in
hlt
(bad)
rcl
and
imul
fwait
jae
std
aam
loope
dec
add
ins
ja
into
jmp
xor
fs
in
xor
ret
dec
lds
lahf
mov
ins
lods
xor
stc
mov
shl
dec
jp
sub
pop
push
cmp
cmp
xor
lahf
jb
enter
(bad)
xchg
data16
fstp
lods
mov
cmc
mov
pop
xor
test
sub
sbb
adc
clc
jg
fcmovbe
ins
pop
jnp
and
(bad)
pop
push
add
push
pop
sbb
lea
leave
mov
outs
mov
aaa
(bad)
mov
pusha
xchg
jno
push
jbe
and
inc
xor
cli
fwait
(bad)
cmp
(bad)
mov
mov
add
jp
imul
push
scas
ins
pop
mov
and
inc
mov
sahf
xor
mov
enter
dec
dec
mov
mov
or
call
or
and
jmp
mov
fst
sbb
outs
xchg
pop
add
push
cmp
aad
(bad)
dec
cdq
or
pusha
add
imul
mov
jne
or
aam
cmp
mov
xchg
and
movs
aad
mov
xchg
mov
(bad)
sub
pop
adc
out
(bad)
cmc
xor
div
and
xor
lea
fcmovne
or
ins
cdq
lea
or
call
lock
out
aas
call
mov
pushf
inc
push
mov
xchg
jmp
lods
add
and
adc
pop
jle
jge
popf
shl
std
push
je
repz
xchg
push
mov
xlat
addr16
jnp
call
push
rcl
scas
fsubr
movs
js
cs
adc
add
rcr
lods
addr16
and
js
mov
iret
sub
int
pop
push
fs
arpl
push
jne
aam
out
xor
aas
jmp
push
dec
ins
cmps
sbb
or
movs
mov
and
outs
fsubp
push
pop
jecxz
cmp
adc
std
xchg
mov
retf
ins
sub
(bad)
test
mov
sbb
xor
xlat
ret
cmp
out
es
push
dec
in
jp
mov
sbb
jl
jmp
mov
pop
lahf
dec
shl
aam
(bad)
cs
(bad)
pop
jns
mov
arpl
sbb
and
popf
(bad)
mov
stos
ss
sbb
lock
les
xor
xchg
jle
mov
(bad)
repz
rcr
push
pop
leave
aaa
mov
out
cmp
dec
mov
lds
sbb
jno
dec
push
xchg
dec
pop
xchg
idiv
imul
mov
sub
sbb
mov
out
jp
mov
popa
or
pop
repz
xchg
jge
daa
or
mov
and
in
pop
icebp
jle
enter
int3
into
pop
icebp
(bad)
movs
fistp
sub
fnstsw
retf
and
loop
inc
xor
ror
mov
not
dec
mov
arpl
mov
xor
adc
pop
je
mov
mov
xchg
and
movs
add
pop
sub
sbb
push
jae
scas
cld
jns
cmp
and
push
push
fidivr
movs
(bad)
cli
out
jae
fsub
jp
push
loopne
shl
mov
aam
fidivr
push
nop
daa
aam
inc
xor
aas
sub
rcl
mov
scas
fs
loop
inc
sub
mov
push
mov
call
(bad)
dec
js
aas
pop
push
sub
mov
sbb
mov
jne
rol
int3
mov
cmp
push
jle
sbb
mov
test
xor
xchg
int
in
xchg
ds
cmp
ret
nop
movs
mov
xor
scas
lds
mov
in
iret
sub
xchg
fmul
pop
cmp
inc
aad
mov
(bad)
leave
(bad)
enter
mov
rcl
or
mov
add
andnps
movs
and
add
out
pop
mov
lea
or
push
mov
mov
leave
sbb
jge
fwait
mov
stos
xchg
mov
ret
xchg
data16
arpl
sub
push
(bad)
push
dec
fmul
dec
mov
and
popf
mov
test
jmp
push
(bad)
in
in
mov
xchg
push
es
mov
mov
sti
add
out
cs
retf
add
add
mov
in
frstor
cmp
dec
retf
iret
jns
pop
jmp
mov
out
dec
jle
movs
iret
sub
scas
ins
adc
fsubrp
pusha
mov
loope
sub
xchg
dec
jl
mul
push
cmps
popw
mov
sar
mov
fs
sub
mov
xlat
cmp
pop
sub
movs
test
leave
dec
pop
cld
mov
adc
or
mov
jecxz
xchg
push
js
xchg
jnp
pop
pop
ret
ret
ror
cmc
daa
adc
mov
in
dec
ins
and
push
or
add
pop
pop
adc
bound
mov
mov
aaa
xchg
sahf
dec
or
es
jl
mov
and
jae
test
or
adc
fldcw
lods
cmp
lea
test
daa
imul
lahf
das
mov
call
int
out
aas
stos
popf
nop
mov
jp
pop
xchg
(bad)
arpl
cmp
or
push
sub
repz
ins
nop
fild
push
sbb
retf
push
ds
int
sar
pop
pop
jmp
xlat
mov
adc
fld
mov
push
montmul
cmps
(bad)
cs
arpl
xor
fcmovu
and
inc
or
cs
enter
jl
xchg
inc
adc
adc
pop
(bad)
jmp
ds
lea
repnz
sti
ror
xchg
mov
sbb
movs
call
cmp
in
in
mov
pop
jl
cmps
sbb
mov
retf
(bad)
xchg
pop
idiv
cld
scas
sbb
dec
fwait
mov
aas
sbb
cmp
gs
stc
or
mov
loope
lods
(bad)
std
arpl
imul
dec
call
push
mov
cmp
into
push
xlat
in
mov
int
pop
(bad)
shl
pop
pop
jmp
repz
add
jae
js
jmp
outs
test
sti
cmps
rol
mov
movs
je
call
jae
arpl
and
xor
enter
xlat
or
les
pop
(bad)
sub
push
inc
aam
repz
outs
pop
nop
mov
(bad)
out
sub
(bad)
pop
pushf
std
pop
cmp
sbb
mov
dec
or
mov
and
pop
jnp
xchg
and
inc
dec
sub
xchg
sbb
mov
add
ja
shl
sar
out
sub
ja
addr16
dec
data16
and
xlat
dec
mov
and
in
ss
mov
movs
inc
lock
jb
out
jne
xchg
rcl
(bad)
and
cmps
call
aaa
pop
dec
pop
sar
in
ret
push
cmp
call
or
js
inc
jmp
lds
int
cmp
retf
test
scas
mov
jge
jno
jg
sbb
pop
cmp
imul
(bad)
or
addr16
jl
pop
repz
xchg
sbb
div
jb
jnp
fst
hlt
jl
dec
lahf
(bad)
in
sbb
stos
(bad)
mov
dec
jb
leave
xor
add
inc
scas
adc
(bad)
je
outs
std
xchg
xor
dec
leave
and
(bad)
ror
out
xchg
ds
(bad)
imul
repz
iret
(bad)
popa
loope
jb
shl
addr16
pusha
mov
loope
inc
loopne
out
mov
cmp
inc
repnz
cs
add
fidivr
push
jl
push
jge
sbb
mov
jno
imul
jne
dec
sbb
dec
int
jae
inc
sub
and
out
pusha
outs
and
dec
sbb
pop
test
fldenv
cmp
jl
in
call
dec
mov
call
je
jmp
das
xchg
(bad)
push
pusha
retf
jnp
loope
mov
repnz
add
jns
jg
int
movs
ss
mov
sti
add
rcr
fmul
stc
dec
daa
imul
test
pop
dec
cdq
nop
mov
(bad)
rcr
cmc
jg
xchg
cmp
mov
push
adc
xchg
push
sub
mov
dec
inc
mov
loopne
xor
sbb
call
sub
out
add
sbb
fisttp
repz
ret
xchg
and
mov
or
sti
pop
xchg
pop
dec
arpl
int
mov
jb
sbb
outs
imul
test
rcl
jp
sub
jecxz
imul
out
mov
fstp
cld
stc
dec
and
ret
dec
sbb
out
je
dec
lea
mov
pop
push
iret
(bad)
mov
jns
pop
fstp
iret
sub
sbb
and
xor
mov
mov
jmp
cs
aas
fs
cmps
fcomp
into
shr
sar
lea
mov
cmps
pop
xor
or
xchg
xchg
dec
pop
jle
sbb
sub
or
(bad)
cmp
add
repz
mov
jb
lea
jmp
jnp
xchg
dec
sbb
mov
push
bound
pop
mov
ss
je
call
out
test
nop
ds
sahf
inc
jno
mov
mov
imul
dec
and
jb
sbb
ffreep
jmp
dec
mov
push
loopne
jl
and
out
or
or
sahf
in
les
dec
fdivr
mov
pushf
pop
or
jg
jns
(bad)
sbb
add
repnz
div
pop
daa
xlat
jne
fist
nop
pop
push
int
xchg
cmc
or
sbb
es
inc
inc
fst
scas
jbe
inc
call
and
mov
pop
dec
mov
xchg
fnsave
sbb
imul
add
movs
test
cmps
por
mov
mov
scas
xchg
mov
jo
adc
jns
in
mov
nop
xlat
sbb
or
mov
xchg
dec
mov
jle
mov
(bad)
shl
adc
xor
ins
daa
dec
data16
in
aam
sbb
not
outs
mov
mul
push
test
cmps
arpl
out
in
inc
sbb
mov
dec
shl
mov
ja
lea
scas
and
pop
or
ds
ds
retf
xchg
das
xchg
test
and
lods
pop
push
lds
hlt
repz
sbb
push
adc
jle
das
ss
xchg
or
mov
jp
in
mov
push
adc
scas
cmps
(bad)
xlat
mov
push
fisubr
inc
or
rol
test
fimul
test
dec
cld
in
xchg
adc
push
retf
imul
vcvttss2si
jne
or
cdq
daa
fadd
or
jge
cli
pushf
mov
jno
(bad)
inc
push
rcr
dec
or
ret
xchg
es
pop
imul
and
enter
adc
jnp
add
adc
pushf
jg
repz
data16
out
push
lock
dec
jecxz
xchg
ss
sub
cmp
add
repnz
xlat
pop
jmp
xchg
jmp
test
ds
dec
jl
mov
stc
addr16
xchg
(bad)
iret
xchg
adc
call
arpl
mov
arpl
cmp
inc
loop
xlat
push
pop
xchg
push
jno
out
js
outs
imul
iret
sar
shr
dec
jge
and
pusha
ins
and
ds
jae
push
outs
mov
fist
mov
sub
push
or
int3
stc
or
in
(bad)
xlat
mov
jno
cli
mov
sub
jo
add
dec
xchg
arpl
shl
enter
popf
leave
sub
gs
sub
int
push
or
push
mov
cmc
mov
pop
sbb
pop
and
idiv
sahf
retf
adc
daa
xchg
xor
xchg
outs
(bad)
inc
adc
fiadd
enter
iret
pop
push
ret
cmp
icebp
xor
fcomp
ins
cmps
xor
add
daa
cli
mov
imul
jg
mov
lahf
aas
adc
cmp
ins
ja
mov
mov
mov
test
mov
test
fstp
jae
add
cli
and
cmp
imul
mov
aaa
out
pop
lahf
(bad)
adc
daa
xchg
pop
daa
mov
cmc
neg
das
dec
ret
test
int3
jg
lahf
cld
cdq
hlt
nop
push
aas
push
dec
sti
in
stc
out
pop
pop
int3
lock
sub
loope
scas
push
cli
outs
icebp
sub
jmpw
and
test
out
sti
mov
mov
adc
mov
je
in
dec
es
xchg
push
je
gs
nop
and
popa
add
call
ins
sub
xchg
push
jbe
sbb
or
inc
loope
or
gs
aas
cs
iret
in
mov
ins
sbb
xchg
dec
ins
outs
out
enter
js
sub
dec
arpl
lahf
jo
and
mov
jnp
popf
out
jnp
fbstp
test
nop
sub
scas
lock
sub
shl
cmp
or
xlat
xor
pop
sahf
push
adc
pop
sub
out
outs
fcmovu
stc
out
adc
int
push
add
xchg
ins
in
imul
adc
pop
adc
test
fbld
mov
fwait
pushf
(bad)
outs
push
je
(bad)
mov
lods
js
pop
aam
adc
sub
jae
mov
mov
sub
std
push
dec
jmp
nop
dec
jns
dec
fcomi
mov
stos
and
inc
imul
or
add
int
(bad)
punpckhwd
inc
jns
imul
mov
cmp
cs
fs
sar
pcmpeqw
iret
push
js
cli
dec
mov
jo
jg
ret
cmc
in
sbb
xchg
in
adc
xchg
jnp
adc
shl
mov
in
cmps
sbb
add
inc
and
js
leave
xor
mov
shr
mov
int
inc
in
cdq
and
fcmovu
fisubr
dec
sahf
push
imul
out
xor
and
and
je
into
pop
nop
jmp
jmp
and
push
push
imul
jmp
ja
(bad)
std
fs
inc
lds
les
fs
adc
cmp
adc
jb
pop
clc
mov
or
out
jb
fdivr
fs
and
sar
push
lds
xchg
inc
xchg
inc
add
in
shl
sar
mov
sbb
test
fwait
fwait
mov
sub
and
rcr
retf
jae
fcmovu
bound
add
movs
mov
jg
leave
inc
adc
and
jl
lahf
xor
mul
jge
fdivrp
xchg
jne
adc
xchg
les
jo
dec
or
ja
test
jnp
pop
es
jnp
or
push
mov
shl
add
pop
mov
popa
lock
dec
shl
jecxz
adc
lea
in
js
sub
inc
mov
pop
bound
mov
imul
pop
sub
pop
js
les
add
fcom
pop
arpl
and
inc
jno
and
sub
dec
dec
icebp
sbb
jnp
inc
daa
fstp
pushf
in
dec
sahf
(bad)
or
pop
cdq
cmp
(bad)
mov
repnz
rcl
sub
mov
jb
sbb
lds
mov
cmp
(bad)
das
jo
jo
ins
inc
dec
sbb
rol
cmp
daa
je
(bad)
imul
xor
out
jle
or
and
dec
rol
mov
or
lds
mov
mov
pop
fwait
mov
xchg
cmp
xchg
add
loopne
or
mov
xchg
out
xor
rol
xor
and
inc
push
and
and
test
adc
mov
adc
inc
inc
and
pop
cmp
sbb
hlt
or
pop
sub
not
pop
dec
adc
pusha
adc
xchg
jecxz
inc
mov
push
push
dec
adc
cmp
adc
ficomp
inc
xor
mov
cld
add
in
push
and
lock
fld
dec
push
adc
sub
or
cs
add
bound
mov
fst
dec
imul
cmp
inc
das
test
stos
xor
leave
sub
add
dec
call
test
xor
sbb
(bad)
fs
cwde
cmp
in
cmps
leave
stos
inc
pop
pop
lock
add
sub
push
mov
sub
lock
sahf
test
inc
mov
rol
retf
mov
inc
fs
and
loope
push
mov
(bad)
pop
(bad)
sti
sub
scas
add
and
or
scas
ret
test
mov
xor
mov
jmp
lahf
test
cmp
xor
retf
mov
push
fmul
(bad)
push
mov
xchg
jb
cmp
bound
mov
mov
mov
push
out
shl
and
inc
mov
inc
mov
mov
adc
add
xor
push
cs
and
call
inc
adc
or
adc
and
cmp
inc
add
rol
jnp
and
or
test
sub
nop
or
pop
lods
mov
pop
fst
out
jp
fs
popf
inc
mov
je
out
xchg
addr16
ins
mov
add
pop
inc
sahf
dec
xchg
lahf
jbe
or
leave
jno
sub
dec
and
xor
xchg
xor
shl
mov
addr16
sub
pop
dec
pop
icebp
mov
mov
icebp
cli
mov
jnp
mov
ror
add
push
xchg
enter
push
mov
pop
in
out
pminsw
cmp
outs
xchg
fsubr
loopne
and
mov
mov
ret
and
lock
mov
cmp
push
jns
mov
xor
or
(bad)
sub
pop
inc
cmp
les
jecxz
xor
mov
pushf
(bad)
mov
(bad)
or
das
add
in
pop
gs
retf
mov
iret
loop
aas
push
dec
pop
jecxz
les
mov
sbb
cld
enter
les
(bad)
neg
lods
fnstenv
pop
es
pushf
clc
fcomp
in
sub
jne
jp
(bad)
cmp
int
clc
mov
sti
rcr
mov
cdq
stos
ret
mov
jo
(bad)
cli
jns
inc
xchg
popa
jmp
pop
dec
(bad)
pop
ret
xchg
es
movs
cmp
js
mov
jge
lahf
(bad)
gs
int
in
adc
xor
aad
push
jno
into
les
xor
add
movs
cmp
and
stc
sbb
inc
cwde
(bad)
paddsb
scas
push
and
das
popf
nop
in
(bad)
mov
pop
loope
dec
push
mov
loop
pop
inc
out
add
adc
push
call
pop
cmp
jae
(bad)
cmps
repnz
sti
lods
push
clc
mov
fld
mov
popa
cmps
xor
mov
mov
add
cld
mov
dec
fiadd
pop
sub
hlt
cmp
ror
jmp
out
div
cmp
sbb
push
data16
sti
jl
mov
xchg
adc
daa
stos
mov
leave
into
ror
jae
shl
call
idiv
cmps
dec
push
loope
xchg
jmp
mov
or
clc
and
adc
dec
mov
push
jnp
cmp
popf
(bad)
clc
xor
or
xchg
pop
out
xchg
js
les
push
jae
ret
mov
mov
fwait
mov
cmp
adc
enter
cmps
mov
ins
lock
call
dec
or
jnp
cli
push
popf
jecxz
es
cmp
jbe
mov
adc
outs
mov
cmc
cwde
pop
dec
in
repz
adc
jns
sbb
or
call
sbb
sbb
icebp
mov
(bad)
jb
das
sti
lods
sbb
cmp
jl
add
inc
mov
outs
or
out
adc
dec
pop
jg
in
repnz
cmp
inc
js
sbb
push
dec
push
cmp
mov
mov
jl
pop
ret
pop
dec
repz
mov
loop
mov
nop
inc
cs
ja
retf
addr16
pop
jnp
inc
or
nop
idiv
imul
cdq
jecxz
fcmovbe
xor
into
call
add
xor
and
and
repnz
sbb
cs
rcr
daa
call
cli
jb
in
cmp
rcr
mov
cmp
pop
pop
push
inc
mov
arpl
or
ret
repnz
mov
(bad)
cld
xchg
mov
fwait
das
aaa
aam
push
push
xchg
push
sbb
(bad)
hlt
mov
mov
loope
cmp
fstp
aas
sub
psubw
rcl
pop
daa
stc
inc
push
xchg
cmp
xchg
ror
out
pop
fnsave
je
sahf
pop
dec
test
pop
ret
mov
jnp
and
loope
mov
imul
mov
gs
inc
jnp
enter
(bad)
and
add
pop
dec
mov
push
outs
jmp
ss
test
add
or
pop
adc
gs
(bad)
mov
xchg
(bad)
sbb
cmp
xor
xor
mov
push
daa
cld
cmps
mov
sub
mov
rol
retf
mov
arpl
outs
xchg
sub
outs
(bad)
aas
mov
xlat
arpl
jmp
movs
sti
scas
cmps
sbb
cwde
in
mov
lock
scas
jle
(bad)
jbe
inc
bound
cs
popa
pusha
in
jmp
inc
cmp
jnp
cmp
stc
and
ins
adc
mov
repz
and
pop
ss
mov
fsub
cmp
dec
sar
nop
pop
add
mov
inc
repnz
pop
push
inc
pop
inc
xchg
out
hlt
fld
dec
jle
es
in
or
(bad)
jnp
loope
pusha
ds
(bad)
sbb
xchg
arpl
cmp
gs
repz
int
or
and
sahf
imul
pop
out
movs
pop
in
sub
fstp
adc
scas
lock
lahf
and
sbb
push
mov
sbb
gs
inc
jne
mov
sbb
out
jno
mov
pop
or
sub
dec
(bad)
jecxz
(bad)
popf
fwait
cmp
pop
xchg
clc
mov
cmp
sbb
rol
mov
ja
mov
or
xor
rcr
adc
pusha
rcr
mov
sub
jnp
mov
jae
ficom
fnstenv
leave
add
sbb
pusha
fwait
mov
sbb
rcr
dec
fwait
and
jecxz
fucomp
jp
pop
inc
push
and
test
adc
dec
cmp
push
jp
mov
jge
bound
cmps
jnp
shl
in
mov
test
aad
jg
movs
jecxz
mov
pop
jg
inc
(bad)
jle
fwait
(bad)
sbb
stos
ss
fwait
scas
cld
xchg
pop
int3
xor
neg
adc
dec
fnstenv
aaa
sbb
bts
inc
add
push
and
test
ins
das
add
jle
xchg
leave
push
jecxz
mov
icebp
aad
cmp
dec
data16
fild
jmp
pop
lds
retf
(bad)
rcr
jmp
mov
pop
lea
inc
add
nop
arpl
imul
mov
movs
cmp
push
iret
cs
jl
int
shl
and
pop
js
dec
cs
and
(bad)
xor
(bad)
dec
push
mov
sub
pop
push
pop
xchg
pop
xor
sbb
pop
lds
inc
data16
jo
lods
popf
mov
push
xchg
cmovne
mov
ret
sbb
aas
rep
bnd
hlt
add
ss
push
mov
pop
xor
sbb
hlt
jmp
fsubrp
pop
in
fcomp
sbb
pusha
push
in
fdiv
in
dec
repz
jmp
cmps
popa
rcr
push
ret
or
loopne
(bad)
cmps
iret
dec
mov
shl
push
jnp
(bad)
ins
dec
jno
daa
test
mov
pop
xor
mov
sbb
cmp
jmp
fldenv
out
inc
stos
xchg
popf
fistp
fimul
fnstsw
fstp
cmp
lds
lea
cmp
jecxz
retf
xchg
adc
sbb
mov
in
mov
iret
xor
and
aad
xor
sbb
out
(bad)
iret
mov
std
in
addr16
jecxz
iret
pop
jp
in
pop
jp
cmps
fnstcw
arpl
test
or
or
pop
jne
push
sub
jnp
cwde
js
cmp
mov
imul
rcr
lahf
sub
jo
xor
(bad)
ins
out
pop
loop
cmp
nop
sbb
mov
cmp
jnp
loop
add
pop
lock
jo
mov
lods
out
ins
push
aas
dec
cmp
mov
(bad)
mov
out
ins
fdiv
sub
xchg
ja
dec
push
dec
mov
mov
inc
(bad)
lar
mov
cs
cdq
sbb
pop
inc
jb
sub
jl
cld
ins
xchg
aam
push
mov
xor
imul
outs
aam
push
jl
mov
pushf
pop
push
popf
sub
outs
sahf
sub
fnstenv
stos
sbb
or
stc
pop
shl
cli
inc
cld
dec
cmp
pop
out
jg
cmp
sbb
adc
jl
adc
pop
addr16
or
imul
ficomp
mov
fmul
(bad)
stc
ja
ret
inc
daa
lock
iret
cmp
fs
xchg
test
mov
loop
mov
mov
ror
mov
neg
adc
movs
cmps
bound
xchg
mov
mov
ins
int3
mov
(bad)
jecxz
jmp
or
xchg
fnstenv
xor
xor
and
xchg
xchg
jmp
call
pushf
lds
mov
idiv
mov
mul
sti
test
div
iret
or
outs
push
add
xchg
fcom
je
cmp
int
mov
or
mov
pop
mov
fsubr
mov
rcr
retf
out
inc
ins
adc
and
and
add
pop
pop
cli
test
cld
inc
jns
out
or
mov
sar
adc
sbb
je
lods
sbb
mov
cs
pop
mov
pop
and
cmps
cmp
movs
mov
push
leave
ret
push
jecxz
push
pushf
mov
sbb
(bad)
shr
xchg
xlat
(bad)
pop
inc
ins
js
add
dec
addr16
aaa
cmp
lods
cmp
and
push
cli
push
mov
jp
cs
sar
pop
and
popa
cmp
mov
jo
dec
xchg
fdivr
sub
in
cmp
retf
icebp
jnp
jae
jg
aam
retf
adc
or
jecxz
add
mov
outs
(bad)
int
dec
jp
arpl
jnp
call
cli
sub
aas
dec
pusha
mov
jb
pop
jno
inc
cmps
out
fsubr
leave
cmp
sar
xchg
mov
push
ds
or
(bad)
jae
add
xor
mov
jecxz
lock
aas
sbb
fs
pop
cs
xor
dec
cs
sub
nop
outs
(bad)
xchg
push
mov
retf
popa
jno
not
jmp
mov
jo
and
mov
xlat
outs
das
ds
addr16
fs
jo
scas
jne
sub
leave
test
push
mov
jbe
mov
pop
xchg
out
cmc
jb
test
pushf
cmp
mov
sub
xchg
jo
inc
mov
jl
int3
mov
test
cmp
imul
(bad)
push
mov
or
xchg
cmp
lahf
call
xor
int3
xchg
pop
pop
sbb
push
mov
in
dec
adc
or
push
in
jmp
cld
out
or
inc
loop
inc
(bad)
fidivr
aad
lods
inc
mov
jecxz
fadd
mov
inc
sbb
stc
jg
outs
imul
nop
pop
jle
add
pop
mov
pushf
ret
xor
push
lods
(bad)
into
pop
(bad)
pushf
call
fild
stos
adc
sub
loope
jnp
adc
lods
aam
mov
push
push
pop
rcr
stos
out
in
mov
dec
xchg
sbb
add
aad
inc
mov
ins
cmp
inc
loop
pop
pop
jnp
pop
dec
out
and
dec
push
push
add
jge
xchg
jae
in
or
js
sahf
push
mov
mov
or
sbb
push
int
stos
arpl
xchg
add
outs
mov
into
div
(bad)
movs
fmul
sub
pop
sub
cmp
lods
out
adc
mov
jmp
out
retf
pop
out
ins
pusha
jge
sbb
movs
popa
outs
(bad)
fwait
pop
dec
mov
adc
sub
sbb
pop
xlat
dec
adc
popa
iret
mov
scas
arpl
or
movs
daa
xchg
in
fs
mov
mov
mov
repz
inc
test
nop
xor
call
outs
mov
ja
shr
and
and
or
lods
iret
je
fmul
mov
mov
sahf
clc
mov
rcr
xchg
in
lds
xchg
push
jbe
sub
sbb
sub
cli
dec
jl
addr16
cwde
add
jmp
fld
aaa
rol
mov
lahf
pop
jae
sahf
push
or
mul
daa
push
add
add
enter
pop
icebp
sbb
sbb
repnz
dec
jns
(bad)
call
cmps
xchg
push
and
repnz
jl
push
dec
loope
jb
stos
dec
loop
in
fst
stos
jne
cdq
and
test
cmp
sub
add
xor
dec
xchg
xor
mov
les
dec
in
shl
mov
xchg
cmp
xchg
lods
icebp
into
mov
sub
popa
add
sub
sbb
inc
or
pop
dec
pop
inc
mov
cmp
retf
xor
cmp
fs
(bad)
jno
ja
ror
fldcw
dec
mov
aaa
sbb
in
not
ins
(bad)
outs
push
jae
loopne
jecxz
lds
into
aad
fs
or
dec
and
cli
inc
push
retf
jnp
imul
fnsave
cmps
sbb
clc
out
stos
sahf
push
and
add
mov
push
aas
int
xor
cmp
addr16
inc
imul
mov
shr
xor
and
inc
imul
push
or
adc
outs
inc
push
jp
(bad)
gs
stc
xchg
pop
out
jae
mov
jp
scas
(bad)
in
ins
ins
(bad)
int
lea
add
xor
add
(bad)
in
mov
leave
sbb
sbb
xchg
lods
cmp
lods
es
into
lahf
daa
mov
fwait
push
sbb
sub
jno
xchg
cmp
xlat
jbe
dec
or
bound
mov
cld
es
push
in
sub
out
fsubr
pusha
ins
jns
push
and
xlat
je
popf
test
int
dec
fcom
aaa
test
jp
scas
out
push
outs
mov
jle
pusha
pusha
in
push
rol
ret
inc
sahf
leave
sbb
jl
ss
push
mov
dec
mov
jmp
sub
mov
aam
cdq
js
leave
(bad)
or
ins
pop
je
aad
(bad)
push
lods
stos
jecxz
aaa
cld
inc
or
jnp
sar
sti
scas
out
test
cmc
ins
js
pushf
neg
test
cli
jg
imul
ret
fadd
and
mov
aaa
mov
retf
int
xor
jle
cmc
pop
cmp
js
lahf
(bad)
push
lea
leave
into
icebp
and
in
(bad)
rcl
sub
(bad)
sub
shl
dec
mov
cmp
pop
sahf
lahf
mov
cdq
imul
xor
sub
and
mov
(bad)
jns
imul
xchg
cwde
faddp
jbe
fmulp
mov
loopne
lea
outs
pusha
(bad)
and
pop
std
mov
inc
ret
retf
out
addr16
mov
sti
add
mov
pop
cli
inc
pop
inc
xchg
loop
bound
dec
loop
call
ror
mov
(bad)
and
xor
enter
add
iret
out
aas
xor
mov
dec
out
test
aad
sahf
pop
jge
movs
(bad)
push
retf
loopne
jno
mov
mov
mov
inc
jp
mov
(bad)
cdq
mul
neg
mov
cmp
mov
pop
(bad)
mov
inc
mov
retf
pop
adc
xchg
mov
rcl
imul
xor
or
ror
and
pushf
mov
lahf
std
sbb
fist
fsubr
dec
icebp
jge
pop
icebp
jno
xchg
in
ret
out
jns
mov
push
mov
mov
xchg
mov
mov
(bad)
fcomp
imul
cmp
mov
mov
jg
jo
xchg
pop
faddp
lods
mov
hlt
lock
jmp
int
fs
jae
ror
mov
lds
neg
nop
outs
or
sub
fistp
ror
in
call
fld
int
xchg
mov
(bad)
daa
xchg
xchg
aaa
(bad)
shr
ss
sti
stos
xor
mov
xor
jnp
(bad)
mov
sbb
nop
fstp
icebp
jl
std
lea
retf
sbb
shl
and
pop
add
imul
cmp
shl
fcomip
ins
push
cmp
lahf
sub
fdivr
sub
add
push
mov
orps
pop
or
movs
cmp
or
jge
mov
sub
sub
stos
pop
xor
or
pushf
sbb
sbb
push
push
imul
push
out
mov
mov
(bad)
fadd
gs
sub
xor
out
mov
repnz
xchg
in
jb
xchg
sar
mov
jne
adc
or
cmc
outs
imul
mov
xlat
pop
jmp
inc
sub
jnp
xchg
in
outs
cld
ss
iret
xchg
fisubr
jmp
(bad)
loopne
aam
aam
mov
mov
mov
cli
mov
loop
fs
cli
mov
repz
inc
sub
sar
cmp
pop
out
cmps
add
in
stos
scas
jns
movs
cld
inc
loope
xor
fwait
xor
push
arpl
xor
popf
mov
jl
push
lock
inc
sbb
xor
dec
ds
inc
or
cmps
xor
nop
mov
push
sub
fld
push
mov
mov
xchg
or
dec
or
ret
pop
in
scas
sbb
or
inc
and
cmp
clc
mov
cmp
shl
dec
sub
arpl
push
test
adc
jns
lods
mov
xor
movs
test
fnstcw
ins
or
sahf
enter
jo
and
popf
xor
fild
test
cmp
add
mov
shl
xor
inc
mov
cld
xor
out
adc
ins
jmp
(bad)
mov
xchg
adc
(bad)
mov
pop
jmp
add
inc
add
push
es
repz
push
addr16
lods
and
jecxz
arpl
fcomp
ins
movq
xchg
lock
nop
xor
popa
imul
sub
movs
ds
(bad)
push
dec
xor
es
sbb
adc
inc
mov
pop
fsubr
pop
dec
add
add
neg
repz
mov
xchg
xchg
in
mov
jno
sub
or
mov
dec
dec
loop
or
je
add
cld
stc
loop
adc
loop
adc
push
jecxz
fnsave
clc
mov
inc
xchg
(bad)
(bad)
shl
jmp
sahf
jno
add
mov
and
cmp
loop
cwde
(bad)
cmp
jg
jne
pop
outs
data16
jbe
push
xor
cli
add
jmp
dec
stos
loope
mov
mov
mov
sub
jg
out
in
mov
jp
fnstcw
mov
out
xchg
and
daa
push
outs
sub
imul
jbe
jmp
cdq
out
mov
pop
pusha
scas
icebp
push
dec
(bad)
mov
ins
hlt
sub
stc
jo
pop
add
ins
inc
xor
and
xchg
scas
xchg
push
mov
loope
cmp
xor
sub
mov
fnstsw
mov
push
or
fmul
enter
mov
pop
inc
fist
hlt
mov
mov
xlat
xor
mov
imul
mov
jns
xchg
sbb
jno
adc
jl
ss
xchg
sbb
dec
fcmovnu
jne
icebp
and
shl
leave
popa
jbe
ret
sbb
push
push
in
xchg
inc
loop
push
push
scas
mov
mov
jbe
leave
push
outs
mov
jbe
mov
sbb
in
xchg
lods
cmc
mov
fsub
mov
fidiv
add
daa
jmp
test
add
xchg
cmp
or
lea
test
adc
test
dec
jo
popa
add
rcl
rol
or
xchg
cmp
out
je
xchg
jo
movs
sub
jge
dec
and
inc
and
inc
scas
mov
add
or
inc
sub
and
jmp
inc
fbld
inc
inc
adc
out
stc
push
jmp
xor
and
push
adc
push
mov
retf
dec
mov
xor
test
sar
sub
xor
add
jae
js
and
add
mov
aaa
jl
and
adc
test
jle
add
jecxz
or
adc
jmp
mov
jo
inc
stos
movs
add
mov
xor
add
jge
push
mov
adc
sbb
adc
ret
and
xchg
adc
adc
aas
dec
sub
add
inc
(bad)
xchg
outs
sub
adc
mov
sahf
jmp
mov
mov
mov
adc
nop
movs
sub
aaa
sbb
dec
and
mov
and
mov
inc
jbe
pop
sub
add
sbb
add
xor
jmp
cs
inc
inc
push
add
nop
call
add
and
stos
loopne
mov
fstp
and
add
mov
iret
sub
jmp
iret
mov
test
sub
mov
xchg
jnp
add
or
add
jmp
adc
mov
mov
sbb
mov
xor
inc
movs
xchg
jnp
arpl
sub
or
cmp
and
adc
ins
jno
mov
mov
xor
add
xchg
dec
mov
es
test
cs
inc
inc
shl
mov
(bad)
jo
stos
pusha
leave
test
xor
or
ins
xor
cmps
cmp
test
dec
dec
xor
mov
xchg
jnp
hlt
sbb
stc
inc
inc
cmp
int3
and
pop
test
pop
and
outs
or
shl
mov
out
ins
xor
retf
jbe
adc
es
test
or
out
push
jae
mov
pop
ret
fimul
imul
jmp
hlt
fdiv
push
div
and
pop
jns
clc
xchg
push
dec
jae
ret
in
leave
mov
icebp
sbb
mov
jae
retf
jnp
mov
loope
sbb
mov
mov
inc
push
into
jbe
stc
les
leave
and
cmp
mov
clc
jle
popa
(bad)
aam
iret
arpl
outs
imul
hlt
or
pop
das
frstor
mov
popf
call
mov
das
xor
jb
sub
mov
pop
xchg
cmp
fmul
jmp
imul
dec
or
mov
neg
sub
mov
mov
movs
leave
ss
inc
sub
(bad)
sahf
stos
ds
xchg
lods
scas
shl
out
inc
movs
test
js
loope
ret
xor
cmp
js
and
mov
sti
cld
daa
xchg
mov
lods
inc
in
lds
test
cmovl
mov
jns
popa
je
rol
jl
dec
jae
imul
popa
inc
sub
mov
inc
sbb
xor
shl
movs
xchg
mov
fs
mov
mov
cmps
jnp
cs
aad
bound
aad
mov
fwait
mov
sub
dec
jo
out
hlt
or
jmp
xchg
(bad)
push
cmp
fdiv
out
push
pop
outs
jmp
xchg
sbb
out
addr16
cwde
js
out
mov
jnp
jb
lea
inc
jle
add
xchg
(bad)
leave
sbb
cwde
add
jecxz
push
dec
xor
dec
clc
jae
test
(bad)
aad
sti
push
stos
mov
icebp
fstp
xchg
mov
dec
sub
into
in
arpl
sub
mov
cmp
jecxz
in
mov
xor
push
xchg
retf
repz
dec
add
mov
pop
sbb
inc
cdq
cdq
adc
pop
push
dec
sbb
ja
cli
ja
mov
mov
mov
mov
xor
cmp
mov
dec
imul
(bad)
ins
clc
rol
dec
movs
jp
call
mov
paddd
mov
popa
data16
mov
push
mov
in
pop
xchg
pop
loopne
adc
ret
es
cmc
loopne
jbe
(bad)
cmp
sub
push
cmp
sar
xchg
aas
test
retf
into
gs
lock
xor
xchg
inc
fild
scas
call
cdq
or
adc
push
out
in
sbb
and
add
push
fs
test
adc
loop
in
add
mov
fld
add
into
xchg
jae
pop
out
movs
mov
pop
mov
xor
mov
jmp
out
xchg
outs
sbb
addr16
in
jb
jo
or
(bad)
enter
int
iret
add
or
dec
sbb
js
or
call
push
jmp
mov
cwde
pop
push
int
and
push
push
stc
xchg
rol
pop
mov
jge
inc
daa
ja
outs
aam
mov
js
lds
or
shl
scas
imul
add
das
ret
retf
adc
ror
sti
ja
leave
cwde
push
mov
into
out
rcr
dec
fldenv
add
lock
sbb
scas
mov
xchg
iret
aad
repnz
cmp
pop
jne
ss
pop
mov
clc
mov
popa
ins
inc
bound
sbb
adc
daa
jo
sub
cmp
sahf
inc
pushf
jno
mov
mov
and
sub
xchg
inc
and
pusha
call
jo
leave
xchg
pop
mov
cs
sbb
cmps
jl
fs
je
add
add
pop
adc
sbb
mov
jg
sub
arpl
ins
jnp
jbe
gs
fld
stos
fdivrp
add
daa
jno
jp
sub
mov
outs
retf
jbe
mov
inc
les
(bad)
push
fld
and
push
jmp
mov
add
icebp
cmps
jmp
ins
mov
mov
xchg
xor
jmp
iret
push
mov
cmp
sbb
mov
scas
imul
add
cld
xlat
in
dec
mov
repz
mov
mov
push
push
sbb
add
fwait
inc
call
in
stc
repz
icebp
pusha
or
cmp
popa
and
dec
pop
jg
stos
cld
fldenv
fisttp
dec
lods
imul
adc
mov
xchg
fs
ud2
xor
add
and
mov
pop
fwait
test
and
xor
and
data16
pop
addr16
retf
and
pop
sti
and
ins
imul
lahf
popf
sub
arpl
jns
adc
and
inc
loope
cmps
jmp
mov
cli
push
sub
repz
cmp
or
sbb
in
loopne
xchg
loopne
ja
ss
sbb
cmp
xor
retf
sub
mov
mov
add
not
daa
xor
inc
push
fsub
sbb
add
imul
ds
(bad)
fucom
jns
mov
cmp
mov
in
xchg
movs
xchg
pop
daa
xor
push
or
inc
int
pop
jmp
fistp
imul
sbb
or
inc
mov
out
fimul
mov
ret
jo
pop
add
(bad)
dec
jbe
arpl
xchg
push
mov
ins
add
push
adc
push
ret
sub
out
push
fiadd
dec
mov
jle
pop
adc
xchg
sahf
and
xor
cld
sti
lahf
fnstsw
and
pop
mov
pusha
shl
into
xchg
pop
mov
cli
xchg
scas
or
push
into
sub
mov
fcom
inc
or
neg
test
xor
outs
mov
inc
cs
out
xchg
jne
in
sti
mov
mov
inc
aaa
xchg
cmp
cld
jp
fs
cld
push
ss
mov
sti
sub
fs
cmp
rcr
jg
loope
(bad)
lahf
push
(bad)
in
xchg
jae
mov
jmp
cmc
pop
fcomp
jno
arpl
pop
and
mov
out
mov
ja
daa
adc
out
scas
cmp
cmps
arpl
dec
cmp
inc
popf
ins
add
xchg
cmp
das
call
dec
sbb
(bad)
scas
lahf
push
aaa
enter
fnstenv
push
cmp
into
leave
xchg
mov
dec
retf
pop
ret
jne
mov
mov
or
add
mov
push
cmp
and
fwait
jo
inc
inc
add
rcl
dec
les
xchg
fsubrp
mov
icebp
mov
push
call
rcr
movs
xor
out
push
outs
and
(bad)
and
jns
in
inc
(bad)
int
imul
scas
push
xor
(bad)
test
or
pop
and
pop
imul
xchg
arpl
repnz
jecxz
inc
push
mov
or
xor
and
std
dec
sub
cmp
cmp
out
inc
inc
or
fst
mov
mov
movs
(bad)
dec
fbld
mov
inc
push
test
retf
js
fistp
mov
dec
mov
add
or
cmp
jno
xchg
mov
or
jno
arpl
fsubp
pop
jmp
xchg
xlat
(bad)
add
aaa
outs
loopne
inc
inc
clc
aam
in
out
mov
add
sbb
arpl
or
inc
or
movs
or
mov
xor
cmp
cmp
dec
loop
out
xor
add
stos
test
pop
into
out
shr
test
fsubr
call
pop
stc
mov
mov
das
movs
lds
into
mov
mov
pusha
jmp
push
sub
cmp
push
push
fwait
scas
jbe
(bad)
xor
inc
mov
pop
push
dec
cmp
pop
ins
push
mov
aad
pop
test
lods
mov
mov
jg
mov
inc
mov
sub
dec
fs
wrmsr
xchg
test
gs
xor
push
inc
pop
mov
dec
or
(bad)
(bad)
sub
xchg
mov
jne
fstp
rol
int
(bad)
(bad)
into
stos
nop
fcomp
jne
lods
ins
outs
das
stos
and
dec
movs
ret
xchg
adc
xor
(bad)
(bad)
fcomi
dec
mov
sub
xchg
adc
push
fimul
in
test
adc
dec
mov
movs
pop
fld
xor
sbb
aam
pusha
(bad)
add
fstp
mov
inc
enter
stc
mov
sbb
(bad)
rol
out
jl
cmpxchg
mov
sahf
ss
pushf
mov
scas
add
jmp
mov
dec
and
mov
sti
sub
cwde
sub
loop
pop
push
fld
popf
xor
mov
xor
dec
cmp
inc
and
ja
(bad)
xor
daa
push
outs
rcl
jb
ja
push
xlat
dec
xchg
ja
jno
xor
xchg
mov
sub
and
in
out
test
cmp
sub
and
in
cmps
sbb
fcomp
imul
repnz
das
jnp
sbb
out
shl
(bad)
test
jne
shr
cdq
cmps
mov
sub
imul
jno
mov
aas
sub
mov
test
mov
mov
jl
rol
jecxz
adc
nop
std
mov
out
sbb
mov
dec
sbb
dec
cmp
arpl
in
hlt
mov
jno
push
aaa
retf
les
int
das
fsubr
pop
les
repnz
cmc
cs
scas
push
add
fnstcw
push
adc
enter
out
add
cwde
jmp
call
cmp
div
cmp
arpl
jo
add
sbb
mov
out
leave
std
push
jb
clc
in
lds
cmp
call
and
xchg
push
sbb
cmp
cld
and
mov
add
(bad)
(bad)
cmp
jbe
repnz
mov
ins
cli
xchg
xchg
jp
mov
sub
pusha
aas
jno
les
mov
icebp
jo
mov
movs
imul
xchg
sahf
scas
clc
pop
lea
retf
lods
and
push
aad
jmp
fisubr
repz
and
cmp
adc
aam
mov
loop
pop
inc
clc
fidivr
mov
nop
jp
pop
or
jge
mov
xor
mov
push
mov
mov
pusha
(bad)
aaa
push
popf
int
pop
cmp
or
ror
pop
lods
mov
xchg
clc
(bad)
ja
adc
xchg
push
rcr
scas
cmp
or
in
jg
int
jmp
cmps
pop
out
pop
outs
es
mov
test
in
pop
test
rol
and
cmp
pusha
imul
adc
out
loop
daa
cmp
outs
adc
jg
cli
inc
adc
xchg
leave
(bad)
xlat
push
hlt
call
and
jecxz
sub
or
adc
mov
add
cmp
ret
and
push
mov
xchg
stc
jmp
dec
dec
pop
(bad)
xor
arpl
or
and
jl
adc
and
enter
std
clc
stc
pop
mov
xor
pop
sub
outs
cmp
out
mov
mov
cwde
jp
enter
dec
in
lock
mov
test
jl
cmp
fwait
xchg
mov
push
push
xchg
(bad)
cmps
out
in
into
(bad)
mov
iret
ja
sub
push
or
push
icebp
mov
div
jne
pop
movs
ret
sub
cmp
push
or
sar
mov
fndisi(8087
pop
xchg
hlt
outs
emms
push
mov
jae
sti
add
scas
(bad)
xor
aas
dec
cwde
sbb
lock
fistp
ret
jne
jae
std
mov
adc
(bad)
jmp
jp
popf
sbb
pop
aad
dec
push
push
in
mov
int
mov
inc
cs
int
scas
retf
cmp
loop
scas
dec
fst
lods
in
lods
das
lea
sar
add
mov
dec
sub
or
retf
lds
jle
arpl
pop
inc
mov
mov
popf
mov
cs
pop
pop
stos
cld
lods
fnstsw
icebp
jns
test
aad
xchg
mov
jbe
push
or
cmp
cli
arpl
push
mov
adc
ret
xchg
rcr
fnsave
cmc
pop
arpl
jno
and
pop
arpl
pop
push
sar
inc
pop
add
xor
shl
std
inc
in
ja
jbe
mov
out
retf
sub
push
sbb
shl
pop
mov
call
mov
adc
adc
cmp
dec
nop
mov
cli
mov
les
test
sub
mov
loop
mov
pop
inc
shl
xor
test
addr16
mov
jno
push
push
xchg
push
leave
and
add
imul
jo
mov
out
repz
xchg
shl
(bad)
outs
jbe
dec
or
and
or
dec
adc
dec
shr
mov
jns
mov
loope
xor
cmps
pusha
jecxz
test
sbb
fisttp
out
repnz
mov
dec
and
sahf
pop
or
(bad)
pop
ret
in
pop
sbb
pop
pop
sub
sub
sbb
les
push
mov
dec
xor
loopne
mov
icebp
idiv
dec
out
rol
addr16
in
mov
inc
prefetch
or
or
mov
and
pop
pop
dec
mov
aad
shl
pushf
stc
push
jge
les
lahf
rcr
leave
popa
jbe
lahf
and
gs
fdivp
jg
cmp
jne
pushf
int
adc
push
int3
xchg
push
iret
(bad)
iret
imul
jnp
scas
out
shl
sbb
jae
jo
enter
movs
repz
test
test
(bad)
xor
xchg
adc
outs
loope
into
shl
jl
add
xor
(bad)
int
inc
test
xlat
pop
pop
xchg
test
jg
ror
xlat
(bad)
fbstp
icebp
and
(bad)
mov
inc
mov
std
push
in
xlat
mov
ret
das
enter
jle
clc
inc
xchg
ins
cdq
fcom
cmp
fcmovbe
dec
pusha
pop
repnz
es
xchg
mov
(bad)
mov
cs
pusha
pushf
mov
jno
xchg
jle
sub
aam
mov
ins
ins
cmps
stos
cmp
xchg
adc
rcl
imul
in
mov
mov
xchg
int
mov
mov
ins
rcr
fld
mov
(bad)
(bad)
nop
repnz
ret
lea
int
mov
adc
stos
mov
push
xchg
cld
add
fldenv
mov
into
xchg
push
mov
sbb
sbb
push
mov
ins
fbstp
inc
mov
mov
ficomp
in
sub
inc
sub
shr
out
lods
push
mov
pop
call
mov
or
jbe
xchg
jg
jmp
inc
inc
mov
inc
and
xor
sti
pop
leave
sbb
sahf
inc
cwde
jecxz
sbb
scas
mov
pop
mov
mov
mov
xor
mov
mov
neg
fsubr
jbe
mov
jg
pusha
sbb
add
shl
and
stc
mov
jae
pop
jne
ret
mov
jne
movs
push
jg
jmp
das
stc
fst
fs
lock
test
repnz
fwait
xor
sbb
jecxz
pop
push
sti
sub
adc
mov
(bad)
enter
movs
jno
movs
(bad)
cmp
dec
jmp
aas
imul
adc
adc
jp
sub
pop
mov
outs
sub
xor
pop
(bad)
jle
mov
outs
pusha
outs
cmp
lods
push
(bad)
push
mov
pop
stos
ret
arpl
mov
pop
sub
out
jb
sub
call
mov
sub
cli
jg
pop
cmc
xor
jae
loopne
push
(bad)
(bad)
jp
mov
jnp
mov
mov
sbb
jmp
jnp
hlt
push
ins
ins
stos
pop
sub
push
ins
xchg
jae
mov
inc
loope
jl
das
adc
mov
push
outs
jae
pop
jmp
lea
sub
jae
je
sbb
int3
cs
jp
cmp
sbb
es
pop
sbb
inc
aam
movs
mov
ret
rol
sbb
inc
(bad)
jbe
or
sub
clc
les
push
jbe
and
xchg
in
aad
push
imul
xor
cmps
mov
out
jno
int
add
mov
das
and
gs
jle
xor
mov
(bad)
jmp
clc
fwait
clc
imul
xchg
inc
sbb
in
jg
jmp
sub
inc
neg
ret
jns
shl
arpl
jmp
jmpw
jbe
cwde
stc
push
sub
jbe
cmp
movs
gs
shr
sub
mov
and
nop
and
or
or
dec
xor
add
jno
mov
fwait
pop
mov
call
mov
mov
int
sbb
push
ds
(bad)
or
adc
push
mov
xchg
cmp
cmps
xchg
pop
lock
xor
or
mov
int
sahf
out
cmp
adc
sbb
cwde
rcl
outs
adc
call
mov
sbb
push
xchg
es
inc
ss
mov
adc
cmp
cmp
test
sahf
push
(bad)
lea
iret
ss
(bad)
inc
call
adc
shl
xchg
enter
cmps
retf
sub
cdq
lods
inc
(bad)
xor
mov
ja
out
rcr
fdiv
out
rcl
pmulhw
js
fstp
arpl
pop
data16
ror
vorpd
out
and
inc
mov
mov
dec
jnp
js
dec
fidivr
pop
pop
cld
mov
ja
xchg
call
loope
es
vmwrite
ins
scas
mov
ins
mov
push
fwait
sub
mov
pop
sar
das
jnp
mov
cld
mov
jg
test
shl
dec
cmp
dec
(bad)
fimul
mov
aaa
aaa
push
lea
in
cmp
dec
cld
push
shl
sub
xor
pop
test
icebp
push
mov
cli
int3
sar
cmp
cmp
sub
fisub
add
(bad)
jmp
jle
icebp
(bad)
scas
loop
popf
mov
jl
es
dec
adc
bswap
neg
dec
das
and
xchg
and
cmp
push
in
jno
mov
xchg
dec
jg
jmp
ret
jp
jne
inc
or
or
cmp
fcmovu
mov
pop
jl
xchg
mov
add
in
clc
pop
iret
add
lea
int
push
xor
js
mov
inc
loop
out
jbe
and
fs
add
jmp
je
int
xchg
xchg
dec
xor
std
ds
inc
mov
fisttp
ss
push
sub
or
sbb
dec
jo
cs
add
pop
fs
pop
sbb
cmp
cmp
hlt
mov
mov
jmp
retf
retf
sbb
inc
test
pop
call
mov
add
push
inc
aad
test
push
cmp
in
(bad)
mov
mov
ss
add
leave
mov
lds
push
pop
icebp
push
bnd
popa
xchg
push
(bad)
push
pop
shl
jb
loop
mov
in
xor
sbb
es
mov
mov
mov
pop
inc
inc
data16
call
mov
add
and
sbb
mov
mov
pop
ret
or
add
shl
push
retf
cwde
push
xlat
xor
add
jmp
mov
mov
int
xor
or
cmps
mov
mov
dec
push
jl
sbb
arpl
loopne
cmp
sub
mov
mov
(bad)
mov
xchg
ins
aas
jo
outs
cs
xchg
add
pop
dec
mov
jbe
retf
scas
cmp
jo
pop
jno
call
bound
sub
or
or
or
or
test
push
movs
test
xchg
lds
fldcw
in
mov
and
cmps
icebp
pop
or
cmps
xchg
pop
or
call
pop
mov
dec
and
lea
and
out
xchg
loope
mov
dec
mov
inc
jl
js
je
inc
out
shl
ret
and
push
or
or
adc
push
xchg
nop
push
push
dec
mov
xchg
push
cmp
pop
or
and
mov
mov
xchg
or
sahf
cmp
mov
sub
or
ins
mov
cmp
jo
xchg
mov
add
adc
fsub
cmps
cmp
ja
mov
gs
mov
push
lahf
jo
enter
or
fimul
fld
js
sub
push
call
call
hlt
pop
lahf
pusha
fstp
mov
gs
cmps
inc
sbb
push
push
cmp
fsub
xor
xchg
sar
mov
or
xchg
in
mov
outs
shr
out
stos
dec
mov
jb
sub
dec
add
or
push
dec
dec
or
add
push
xor
or
pop
test
mov
jae
popf
push
xchg
adc
mov
loope
ins
inc
inc
out
and
cmp
push
sub
sbb
jl
or
popf
adc
call
xchg
and
xchg
pop
xor
cmp
mov
inc
and
add
mov
jmp
pop
push
add
ins
sbb
int
and
xor
mov
jbe
add
les
jg
cmps
aad
sbb
adc
fnstsw
jbe
xchg
xchg
sbb
out
cmp
mov
mov
jp
sbb
cmp
retf
jbe
daa
retf
add
in
aad
test
dec
add
ins
scas
fisubr
ja
fcomp
cmp
dec
pop
push
rol
jmp
stos
mov
adc
les
pop
fsub
sti
sbb
sbb
mov
aaa
cmp
or
cmc
push
mov
sub
out
mov
push
mov
ins
jnp
out
ins
pop
jge
jnp
dec
xchg
enter
loop
mov
mov
shl
xchg
int
fldenv
movs
movs
in
jae
sbb
jno
mov
cmps
mov
mov
sub
add
sub
data16
jge
adc
in
jg
loope
push
popa
dec
xchg
pop
jmp
pop
(bad)
pop
add
sub
arpl
clc
lds
enter
aaa
add
clc
movs
scas
push
sbb
ins
xchg
adc
cmps
pop
mov
lock
mov
cmp
fnstenv
mov
in
not
cdq
sbb
add
sahf
loopne
sti
sub
pop
adc
sar
fld
cmp
mov
aaa
pop
add
outs
and
fwait
xchg
jg
les
pop
xor
repnz
nop
enter
push
jb
call
adc
test
mov
fwait
jp
jl
mov
movs
(bad)
mov
xor
and
pusha
adc
aas
xchg
das
loope
dec
dec
mov
cmp
cmp
mov
or
mov
loopne
fdivr
inc
jle
or
js
loop
jne
xchg
pop
scas
inc
icebp
add
add
and
push
dec
imul
xlat
pop
sbb
push
shl
in
inc
stc
xor
add
and
mov
jle
jae
icebp
ss
outs
jbe
pop
lock
cmp
pop
mov
sahf
cld
loope
test
xchg
fld
cmp
ja
stos
loopne
or
cld
mov
repnz
adc
jle
jns
mov
call
cmp
cmp
add
jnp
popa
pop
ds
(bad)
je
inc
lods
mov
enter
in
push
or
jo
shr
jmp
out
pushf
cld
xchg
sub
pop
jle
mov
push
shl
and
inc
sub
test
out
aas
fnstsw
loop
hlt
fnstsw
loope
pusha
out
(bad)
push
mov
pop
ret
push
jg
jo
repz
retf
retf
aad
mov
pusha
xchg
jns
jg
(bad)
test
pop
cmp
dec
pop
(bad)
mov
xchg
add
iret
aad
int
aas
sub
iret
cmps
(bad)
in
movs
mov
clc
jmp
cmp
in
pusha
ss
test
fs
out
stos
mov
mov
mov
cmp
cdq
test
inc
es
cmp
das
cmp
cmp
pusha
cmp
add
hlt
inc
inc
cmp
add
xchg
lods
bound
push
hlt
fistp
inc
lds
inc
aam
rol
xchg
sbb
mov
cdq
jo
jmp
les
dec
repz
xchg
add
das
sub
sbb
sahf
jl
mov
ds
cli
lods
cmp
xor
js
mov
dec
fdiv
push
popf
scas
loope
dec
cli
and
dec
fmul
retf
mov
pop
out
out
call
xor
sub
test
inc
shl
mov
shl
fsubp
stc
dec
ins
xor
add
test
fcomp
int
xchg
dec
(bad)
xor
lahf
xchg
add
add
out
retf
adc
mov
cmp
hlt
xor
repnz
and
mov
cmp
or
sar
sbb
push
mov
fld
cld
sub
fld
int3
push
mov
jmp
add
daa
stos
in
cmp
inc
in
in
imul
push
mov
push
cmp
cli
stos
enter
cmp
and
add
sti
xchg
popf
sbb
dec
add
inc
jne
mov
das
cmp
retf
(bad)
xchg
test
fldcw
dec
ins
xchg
sbb
int
fiadd
add
int
stos
mov
xchg
inc
out
push
mov
lods
cmc
movs
mov
addr16
(bad)
cmps
xor
and
sbb
adc
mov
adc
mov
jbe
ins
repnz
mov
push
mov
pop
shl
sub
xor
jl
add
pop
ds
cmp
pop
aam
ret
mov
lea
inc
mov
ss
outs
sub
mov
(bad)
outs
push
loopne
ss
ins
les
adc
mov
(bad)
mov
xorps
cmps
dec
or
cmps
js
sbb
mov
outs
pop
push
movs
lock
pop
mov
or
sbb
push
outs
push
icebp
(bad)
cmp
cmp
stos
add
push
in
test
jns
and
xor
mov
jo
nop
or
loope
add
mov
int3
and
jle
jmp
cmps
mov
jp
ins
out
aad
adc
movs
call
xor
sub
dec
jl
or
mov
mov
arpl
mov
mov
jmp
dec
push
ror
sbb
in
sub
outs
or
fucom
fninit
push
scas
mov
jbe
mov
push
and
mov
add
or
leave
sahf
sbb
(bad)
loope
push
out
je
call
pop
xchg
jge
lds
dec
xchg
adc
js
(bad)
push
mov
fist
cli
lods
cmp
and
and
aas
fwait
pop
rol
data16
add
cmp
pop
xchg
ds
scas
sub
push
cli
sbb
xchg
sub
repnz
mov
adc
arpl
jge
xor
pop
mov
mov
mov
lahf
je
dec
(bad)
rol
pop
sar
mov
je
lock
xor
enter
sub
sbb
push
ins
jb
add
scas
inc
cmp
ja
add
fnstenv
test
sub
and
call
fdivr
adc
mov
lahf
mov
jmp
ret
pop
popa
add
pop
int
into
xchg
sbb
sar
cmp
fdiv
inc
call
jno
(bad)
in
jmp
scas
test
jge
push
cdq
ret
push
outs
lea
pushf
mov
inc
and
pusha
pop
out
jp
icebp
retf
sbb
jae
clc
addr16
fiadd
aam
mov
dec
or
dec
mov
push
ss
mov
mov
ja
loop
push
mov
call
pop
or
inc
loope
mov
jp
jo
scas
xchg
xchg
jns
sub
jns
mov
adc
push
arpl
add
hlt
push
iret
adc
js
or
xchg
cmp
popa
lods
jns
sbb
mov
scas
arpl
rcl
sbb
dec
imul
xchg
fdivr
cmp
test
lea
cld
inc
ds
cli
lods
xchg
add
out
aas
sbb
cwde
fnstenv
jmp
mov
cmp
xor
ret
sbb
xchg
fdiv
mov
push
adc
mov
imul
jl
(bad)
xlat
fs
jbe
cmp
das
mov
iret
push
mov
ss
repz
stos
and
loopne
jno
xchg
sub
cmp
ret
cmp
dec
(bad)
or
in
lahf
sub
add
lahf
sbb
outs
xor
call
and
sbb
rcr
pushf
jmp
dec
(bad)
sub
lds
cmp
fidivr
lahf
(bad)
push
arpl
xchg
xchg
es
shl
fcmove
mov
sub
inc
push
mov
mov
ins
call
or
ins
jle
mov
leave
(bad)
mov
mov
jns
(bad)
pop
ds
or
pop
out
int
inc
cmp
out
pop
retf
jns
fadd
fs
stos
mov
into
dec
lahf
push
mov
and
inc
mov
push
push
pop
xor
call
add
inc
mov
jnp
mov
rcl
dec
imul
sbb
fist
xchg
push
fmulp
leave
popa
popa
jnp
in
imul
adc
push
sbb
int3
xor
std
dec
jg
loopne
icebp
stos
es
mov
or
mov
mov
imul
push
gs
rol
xchg
sub
cmp
mov
cdq
pop
in
(bad)
fadd
jp
inc
mov
pop
cld
repnz
retf
xor
sar
adc
mov
sbb
ret
cdq
or
pop
mov
pop
pop
popf
in
cmp
adc
jnp
jae
arpl
out
test
mov
das
jmp
xchg
add
arpl
add
fild
pop
pop
pop
leave
jge
outs
pop
cmps
sbb
dec
pop
(bad)
out
imul
cmp
outs
xlat
inc
addr16
mov
(bad)
repnz
xor
inc
push
out
bound
outs
(bad)
pushf
int3
xor
in
call
mov
es
fcmovbe
adc
inc
cmp
movs
mov
jmp
push
sub
popa
adc
cmp
pushf
js
lock
cmps
test
and
jp
sbb
aad
cmp
repz
nop
aaa
cmc
sbb
mov
inc
test
aam
xchg
inc
and
sbb
cmc
stc
or
fcmovnu
add
push
sbb
mov
sub
cmc
adc
fld
mov
pop
jno
fs
dec
sbb
std
xchg
cmp
leave
retf
mov
iret
sbb
aad
mov
ficomp
push
mov
movs
mov
aaa
iret
sub
aas
shl
imul
cli
repnz
(bad)
in
retf
sbb
sahf
ror
xor
fs
dec
sahf
repnz
sti
cs
xchg
xor
dec
int3
dec
pop
rol
neg
xchg
mov
stos
(bad)
es
in
out
pusha
out
xor
stos
push
jle
ins
mov
rol
lea
jmp
dec
add
test
fld
js
mov
js
ss
jmp
iret
(bad)
jnp
mov
ins
test
adc
lods
fs
sub
jo
scas
in
jne
outs
les
xchg
sub
fwait
or
and
in
retf
imul
pop
in
(bad)
cmp
mov
test
pop
pushf
call
xor
pop
ds
cmp
mov
rcl
iret
xchg
test
js
xlat
fnstenv
pushf
fdiv
and
cmp
repz
pop
sbb
cmp
(bad)
sahf
jl
cmps
xchg
neg
xchg
(bad)
and
cmp
scas
add
mov
loop
hlt
jl
jno
or
mov
sbb
pop
xchg
ret
bound
mov
sbb
jg
jne
daa
iret
xchg
lds
outs
jl
jle
sbb
mov
repnz
jmp
out
sub
sbb
sub
adc
dec
xchg
add
lods
jo
loop
mov
(bad)
cwde
(bad)
iret
test
sub
cmp
iret
xor
hlt
in
inc
pop
loopne
adc
cli
cmp
fnstsw
xchg
hlt
fldcw
sbb
mov
push
xchg
add
pop
aaa
inc
enter
mov
sbb
fadd
sbb
dec
jmp
push
retf
dec
sub
aas
fwait
and
push
pop
fild
sahf
sahf
call
jl
xor
in
std
xlat
pop
cld
push
sub
or
pop
push
pop
sbb
aas
adc
or
push
xchg
loop
out
adc
sar
jnp
arpl
mov
jbe
mov
fdiv
bound
stc
stc
push
pop
lock
inc
sub
pop
bound
push
adc
push
xor
retf
mov
jno
push
(bad)
fcomip
pop
sbb
cmp
jge
imul
jl
jo
out
(bad)
jne
jbe
fwait
and
xchg
lahf
xchg
mov
inc
dec
sub
les
or
cld
cmps
and
sub
push
in
neg
and
cdq
push
loop
cmp
sbb
out
cwde
arpl
cmp
div
call
movs
sti
stos
out
repnz
outs
aaa
pop
add
inc
pop
mov
sbb
outs
and
lock
fmul
push
xor
inc
leave
je
jecxz
(bad)
leave
fs
and
outs
out
stos
cli
dec
jne
jle
pop
mov
add
dec
push
xchg
das
sbb
sbb
or
shld
dec
sahf
jp
xlat
hlt
fcmovnbe
sti
pop
cli
fmul
int
add
inc
sub
fld
leave
xchg
pop
adc
xchg
mov
xor
jl
xor
cmp
out
jg
xchg
cdq
cmps
arpl
imul
into
ins
sahf
sub
push
cmps
ds
ja
or
mov
and
loop
jns
mov
aas
dec
mov
pop
scas
mov
dec
fidivr
iret
and
sahf
jmp
cmc
pop
mov
test
dec
cwde
vmovhpd
sbb
(bad)
leave
pop
je
xchg
dec
shl
lods
vorps
mov
outs
inc
sub
xor
xchg
pop
(bad)
out
add
adc
mov
hlt
xchg
pushf
jns
loop
nop
adc
jg
scas
outs
lahf
jmp
push
push
cmp
loope
adc
sbb
pop
lods
dec
adc
adc
sbb
cdq
stc
push
fs
mov
fs
jo
xchg
xchg
fnstsw
in
out
or
not
fist
repnz
imul
int3
jmp
fs
imul
lods
xchg
pop
mov
repz
jp
add
mov
cmp
dec
sbb
enter
push
aad
mov
cmp
enter
(bad)
push
or
sub
jle
ja
stos
pushf
int3
dec
mov
mov
inc
scas
xchg
das
push
loope
inc
lods
jmp
popf
into
nop
je
sbb
cmp
jecxz
or
push
mov
fwait
adc
xchg
(bad)
sbb
mov
mov
push
jae
dec
jbe
cmps
pop
(bad)
fst
sbb
mov
xor
clc
pop
mov
(bad)
imul
ret
xchg
adc
dec
scas
je
jo
ja
mov
cmp
into
ja
lahf
inc
call
xor
and
inc
test
xor
(bad)
fst
push
dec
sub
pop
pand
xchg
and
jecxz
cmp
fcomp
jnp
cwde
dec
stos
jmp
icebp
jbe
pushf
(bad)
shl
dec
cmp
xor
xor
lock
adc
or
mov
imul
in
hlt
shl
test
dec
ja
dec
mov
data16
jns
repz
or
pop
xchg
das
and
jmp
pop
stos
xor
xchg
mov
inc
daa
inc
dec
xchg
rcl
push
mov
adc
mov
jl
lds
outs
xlat
leave
push
or
ss
mov
in
sub
cmp
(bad)
jns
mov
sub
(bad)
popa
daa
sti
outs
fs
push
cmp
imul
fst
(bad)
in
fisttp
(bad)
push
xchg
(bad)
enter
xchg
cwde
ret
mov
pop
mov
or
cs
fidiv
mov
(bad)
xor
xchg
sbb
ds
mov
popf
cmp
push
push
xchg
cwde
sahf
pop
sbb
sub
xchg
jg
mov
mov
arpl
cdq
push
sbb
jl
(bad)
sub
in
rcr
neg
xlat
jmp
adc
pop
pop
cmp
jae
xchg
retf
mov
pop
mov
mov
cld
sub
imul
mov
sbb
mov
popf
xchg
test
push
stc
xchg
inc
loop
mov
lds
push
fdiv
jns
jo
or
ins
mov
and
xor
or
aam
pop
in
sub
sbb
adc
push
out
imul
add
jecxz
cs
ds
repz
leave
pop
arpl
mov
and
push
jmp
ss
(bad)
int3
mov
mov
fwait
jbe
je
sahf
les
xlat
cmc
pop
mov
in
xchg
cmc
mov
ror
gs
ret
fwait
push
xchg
retf
rol
mov
test
and
pop
xor
stc
cmp
loop
xchg
or
inc
cmp
sahf
loop
jg
pop
fbld
mov
out
inc
jmp
retf
pop
add
dec
popa
mov
push
sbb
shl
xchg
cdq
jo
jmp
rcr
ret
cmc
cmc
cmp
ficom
js
sub
retf
mov
(bad)
mov
mov
mov
jl
jo
mov
mov
push
sbb
addr16
outs
add
jg
mov
mov
rcr
mov
adc
aad
inc
add
mov
sub
dec
xchg
out
xchg
or
sbb
pushf
jge
cs
xlat
dec
cs
outs
shl
pop
ds
and
ror
push
add
lods
enter
enter
mov
add
outs
xchg
sub
daa
fcmovbe
dec
data16
addr16
inc
into
ds
dec
mov
and
mov
jnp
dec
mov
int3
sbb
cli
(bad)
pusha
sub
mov
mov
pushf
fiadd
cmps
scas
mov
mov
out
outs
xchg
push
jmp
push
ds
retf
cdq
xor
pop
stc
fs
push
mov
pushf
xlat
or
xchg
and
(bad)
int3
imul
ins
pop
pop
fnstsw
(bad)
iret
jb
ins
push
sbb
and
rcl
sbb
clc
es
rol
das
inc
loope
popa
test
outs
or
inc
test
cmp
dec
dec
jno
into
aas
and
xor
loopne
es
mov
jp
test
jp
and
mov
pop
clc
test
mov
xchg
or
pop
bnd
fwait
aam
nop
mov
mov
mov
imul
jmp
arpl
sahf
rcr
xor
add
push
fs
pop
mov
mov
jae
sbb
xor
sub
into
loope
pop
push
mov
xchg
out
clc
pop
aad
mov
sti
stos
mov
xor
fistp
out
pop
adc
cmp
ss
mov
or
out
pop
dec
add
mov
pop
inc
adc
shl
and
or
loopne
cmps
xchg
test
dec
call
add
xor
mov
mov
sbb
bound
inc
ret
cmp
ret
data16
sar
sti
sub
xchg
cmp
leave
pop
xchg
mov
xor
adc
dec
push
and
mov
fsub
add
gs
cli
mov
lock
ret
fbstp
enter
jmp
push
mov
clc
fst
add
popf
mov
js
jbe
mov
mov
inc
xor
xor
jae
xchg
out
fdivr
jb
push
inc
arpl
aaa
cmp
jns
addr16
add
or
pop
adc
inc
push
inc
xor
cmps
outs
cmp
out
ja
retf
fwait
aas
lock
or
(bad)
loopne
scas
xchg
inc
pop
jg
push
shl
imul
loop
push
repz
or
pop
popa
(bad)
loopne
dec
(bad)
enter
imul
jmp
call
fnstenv
aas
test
(bad)
aaa
push
sub
push
sahf
(bad)
loopne
pop
pusha
aad
mov
xor
pop
repnz
rcr
or
mov
neg
jecxz
mov
dec
popf
clc
sar
in
mov
jle
cmp
cdq
jg
das
sbb
jmp
pop
sub
outs
imul
mov
iret
in
jns
scas
jae
lds
adc
mov
cdq
xchg
in
(bad)
ror
xlat
repnz
scas
outs
mov
or
cmp
xor
sub
(bad)
pop
enter
stc
sub
aaa
adc
pop
jmp
leave
fwait
inc
lds
ins
pop
in
mov
cmps
jmp
icebp
loop
cld
mov
pop
(bad)
sar
pop
retf
jnp
cs
fbld
es
dec
(bad)
ds
pop
(bad)
repnz
pop
dec
pop
jne
loop
pop
daa
jp
mov
(bad)
mov
mov
ret
cmps
or
fdivr
mov
clc
addr16
aad
rol
neg
ret
or
stos
imul
retf
mov
inc
shl
push
push
xor
fdivr
xchg
mov
aam
xor
inc
and
sbb
hlt
aas
loope
xchg
cmps
xchg
(bad)
xchg
and
ss
das
out
sar
jmp
push
mov
imul
scas
mov
mov
dec
pop
mov
pop
dec
pop
imul
cmps
clc
jb
popf
cmp
mov
cmc
ds
jnp
fstp
sahf
sbb
lds
imul
sbb
iret
add
or
pop
fst
in
ret
mov
add
jns
mov
pop
(bad)
outs
imul
cmps
mov
(bad)
int3
arpl
and
fwait
lods
outs
dec
hlt
ins
pop
xor
repnz
sub
ficomp
jle
outs
fwait
sub
and
and
push
aas
sar
clc
mov
xor
in
repnz
cmp
cli
(bad)
mov
hlt
in
js
adc
mov
fprem1
lahf
sbb
cmps
retf
std
xor
das
jle
sub
pop
adc
jmp
out
xchg
(bad)
das
test
xchg
dec
mov
fld
add
inc
sbb
cmp
and
cld
repnz
jne
push
jmp
mov
mov
inc
dec
sbb
pop
mov
js
fisub
into
and
xchg
jnp
(bad)
mov
sbb
in
push
sahf
retf
pop
inc
pop
xlat
inc
mov
mov
loope
mov
mov
stos
push
outs
retf
shl
shl
fld
pop
cmp
sub
mov
loope
(bad)
fcomp
pop
std
xlat
and
(bad)
loope
jecxz
(bad)
jbe
and
jno
fadd
das
dec
inc
xor
xor
leave
xchg
leave
mov
dec
and
vmovntpd
inc
and
in
fs
mov
ins
out
sbb
retf
sbb
mov
(bad)
or
mov
sahf
sub
stos
call
cmp
mov
and
mov
cmp
cmp
shr
popa
and
je
fld
fs
pop
cmp
hlt
push
cwde
(bad)
mov
stos
mov
xchg
mov
popf
ret
shr
or
rcl
mov
mov
icebp
shl
stos
or
sub
imul
or
xor
shr
push
inc
sbb
(bad)
jb
rcr
jne
and
inc
movs
xchg
outs
xlat
jb
fsub
int3
mov
ror
inc
push
jnp
mov
out
adc
loopne
mov
addr16
imul
push
or
movs
mov
daa
mov
push
and
push
dec
mov
xchg
enter
jne
inc
push
push
push
dec
or
cmc
push
inc
xlat
adc
xchg
mov
into
imul
mov
xlat
add
sub
jo
xlat
pop
cmp
mov
jns
fidivr
push
jg
xor
mov
popf
xor
sub
enter
inc
sub
jge
std
lea
cmp
inc
div
scas
not
lods
call
xor
test
mov
inc
adc
dec
sub
dec
mov
sub
sbb
cmp
rol
add
xor
add
movs
repnz
push
leave
xor
gs
in
cmp
pop
adc
ins
outs
adc
cmp
push
xor
xor
inc
xchg
push
push
imul
je
push
and
aas
test
movs
push
test
and
mov
sub
add
xor
imul
and
jmp
sahf
add
jp
or
pusha
sub
push
sub
lods
repnz
retf
add
sub
out
xchg
in
cdq
imul
test
pusha
aad
sahf
mov
mov
mov
mov
push
cmp
retf
cmp
ja
inc
sub
mov
arpl
sbb
loop
inc
inc
shl
fdiv
not
jae
xchg
push
in
and
inc
sbb
pop
dec
movs
add
sub
in
mov
push
cwde
imul
or
sub
pop
dec
push
outs
push
mov
(bad)
lock
cmp
mov
mov
mov
mov
(bad)
andps
shl
shl
mov
inc
inc
std
nop
cs
inc
push
fwait
bound
stos
push
in
int3
jle
out
ins
push
jbe
iret
xor
dec
mov
add
outs
outs
sar
pusha
test
xor
mov
add
push
sub
(bad)
mov
sahf
inc
test
and
dec
jg
jne
jo
xchg
xchg
daa
fldenv
xchg
int3
(bad)
shl
or
sbb
fs
cmp
jno
jmp
mov
xor
xchg
xor
mov
adc
lods
into
jae
inc
mov
cmp
stc
ficom
xchg
xchg
adc
and
mov
xchg
ins
dec
pop
and
push
popf
mov
fild
xchg
sahf
pop
sbb
repnz
push
adc
dec
loop
cmp
aad
in
dec
cmp
pop
rcl
sbb
jle
push
xchg
retf
lods
inc
jae
or
(bad)
jo
mov
cmps
mov
int
retf
std
aaa
push
ret
xchg
inc
iret
enter
pusha
cwde
pushf
repz
push
push
xchg
out
pop
pop
xchg
dec
int
add
leave
sub
lds
sbb
fwait
xchg
ret
add
js
div
pop
out
inc
push
mov
xor
(bad)
fdiv
dec
loopne
addr16
into
add
and
int3
aam
jnp
mov
div
enter
jae
fsub
jecxz
add
add
ja
push
int3
fs
jecxz
jmp
cmps
jbe
(bad)
xor
jne
cmp
adc
scas
jae
ja
push
inc
gs
inc
out
aaa
jl
mov
jecxz
popf
adc
push
and
in
lea
int3
(bad)
or
sahf
imul
in
xchg
pop
cs
xchg
inc
loope
ja
push
cmp
ins
sub
adc
push
inc
loope
mov
jmp
imul
out
or
and
in
add
push
mov
js
mov
pop
sbb
adc
xchg
bound
clc
jg
daa
xor
pop
jecxz
in
jg
push
(bad)
movs
add
inc
mov
imul
xor
out
and
dec
mov
daa
jl
inc
test
push
push
sahf
cmp
fst
inc
stos
or
push
cmc
push
jno
mov
pop
push
push
mov
xchg
pop
mov
loopne
push
mov
aam
xchg
pushf
mov
adc
out
pop
(bad)
pusha
inc
jne
sub
aam
arpl
pop
xchg
xchg
repz
mov
fs
push
stos
leave
and
mov
cli
dec
jne
std
xchg
adc
fisubr
inc
into
call
xchg
jnp
loop
test
adc
enter
inc
out
iret
movs
mul
cmp
pop
xchg
mov
mov
in
add
movs
ss
push
aas
fnstenv
pop
in
ins
int3
xchg
lods
ss
retf
aam
dec
cmp
and
sbb
jns
inc
(bad)
xchg
jno
les
(bad)
add
sub
repz
sar
push
sub
add
fcomip
sub
mul
and
jl
scas
jns
jbe
test
adc
and
movs
clc
fcom
pop
loop
ja
cmp
into
in
cmpxchg
jle
js
xchg
jne
sub
dec
or
mov
sbb
fst
pop
or
mov
repnz
mov
adc
data16
out
imul
sahf
leave
movs
jae
pop
jp
or
fdivr
or
cmc
popf
mov
xchg
call
call
test
xor
enter
inc
mov
fimul
sahf
add
xchg
(bad)
xchg
imul
xchg
adc
xchg
push
leave
xor
ror
es
imul
sub
inc
popf
xchg
mov
test
out
mov
aaa
xor
iret
mov
sbb
or
xor
call
or
aad
int
(bad)
pop
jp
xlat
xlat
hlt
mov
jl
mov
repnz
or
fnstcw
das
or
pop
lods
outs
outs
sub
cld
or
inc
mov
aam
push
nop
shl
in
push
dec
jbe
and
jg
jp
leave
and
xchg
lods
out
out
sbb
inc
pusha
sahf
enter
lods
imul
stos
xlat
xchg
enter
sbb
pop
sub
pop
inc
outs
sbb
pop
imul
imul
xchg
pop
(bad)
cdq
ins
ins
pop
mov
int3
in
popf
inc
out
(bad)
popf
aam
sar
adc
dec
stos
not
imul
retf
(bad)
sti
add
int3
scas
clc
cmps
sbb
out
test
dec
inc
rol
jp
mov
test
mov
dec
movs
into
mov
test
jecxz
hlt
jns
lods
idiv
mov
jecxz
and
es
and
and
scas
jns
jmp
sub
xchg
(bad)
push
not
cs
pop
int
mov
(bad)
sub
jne
rol
cmp
mov
pmulhuw
lock
adc
xor
dec
sbb
clc
jnp
out
int
push
int3
into
mov
(bad)
cmps
jg
repz
mov
outs
cli
add
and
hlt
sahf
retf
aad
pop
clc
mov
push
data16
inc
sub
cmp
retf
cmp
out
dec
cld
pop
mov
fmul
cmp
sub
aad
mov
xchg
sub
jecxz
fisttp
push
dec
xchg
fs
out
jmp
hlt
in
mov
jns
pop
call
clc
mov
sub
je
xchg
test
cmp
mov
scas
imul
repnz
sar
mov
mov
inc
sub
push
jns
xchg
inc
dec
ror
jb
cmps
sbb
retf
(bad)
mov
pop
fs
adc
sar
test
cli
and
add
pop
sub
cmp
pop
jbe
test
frstpm(287
fwait
das
jecxz
sub
pop
sbb
loop
call
dec
cwde
mov
push
xchg
shl
cmp
stc
mov
les
pop
das
outs
jnp
pop
imul
fisub
mov
outs
in
xchg
dec
movs
fistp
leave
dec
inc
imul
mov
or
(bad)
in
fld
jnp
mov
fiadd
pop
mov
pusha
pop
cs
push
stc
pop
mov
xor
dec
popf
jmp
and
mov
jns
popf
cmc
sbb
(bad)
fwait
push
arpl
cmp
add
push
cmp
bound
in
out
sti
pop
sbb
cmps
xchg
popa
loope
push
int
pop
rcl
cmc
xor
sbb
bound
mov
les
fxam
ds
into
xchg
jbe
fwait
lea
jl
jns
nop
sbb
scas
pop
loopne
adc
int3
cwde
(bad)
sbb
mov
loop
icebp
aas
jns
div
jb
lea
shl
test
pop
ds
mov
dec
ret
lahf
fwait
ss
mov
xchg
jnp
in
cmp
add
arpl
data16
sub
xlat
and
es
mov
or
paddd
dec
dec
lods
lods
popa
sub
std
(bad)
push
mov
cmp
sbb
out
ss
sbb
and
push
pop
lods
dec
inc
fldln2
xchg
jecxz
stc
push
xchg
dec
(bad)
jl
imul
out
(bad)
jmp
clc
in
mov
les
push
dec
jecxz
(bad)
in
sahf
sub
(bad)
repz
xor
push
repz
or
(bad)
dec
pop
daa
enter
into
(bad)
xchg
ja
jmp
jns
leave
(bad)
leave
sub
cmp
fidivr
in
sub
mov
(bad)
sub
jl
jmp
fs
mov
mov
xor
cwde
shl
jmp
pop
jae
xchg
inc
imul
pop
sbb
fsubr
mov
mov
mov
in
push
pop
test
mov
(bad)
out
mov
sbb
outs
imul
mov
enter
in
inc
pop
mov
mov
mov
dec
outs
and
jmp
icebp
repz
mov
adc
add
cmps
xchg
imul
jecxz
aaa
pop
mov
pop
xor
btc
dec
mov
popa
adc
ret
leave
push
jp
cmp
push
addr16
push
ins
cmp
int3
das
pusha
cs
push
fincstp
sub
sub
ficom
and
into
inc
into
and
pop
mov
push
mov
push
repnz
inc
test
xchg
(bad)
inc
rcr
(bad)
fisttp
sti
scas
nop
jbe
pop
retf
out
js
pop
ds
and
call
adc
adc
mov
in
fsubr
jne
repz
mov
mov
sldt
push
mov
mov
pop
lods
sub
leave
dec
cwde
in
mov
js
add
cmps
ret
push
pop
out
mov
ret
scas
dec
xlat
adc
push
call
clc
pop
jl
mov
xlat
inc
and
mov
push
pop
adc
xor
add
hlt
mov
adc
xor
out
dec
in
mov
pop
adc
xchg
or
mov
and
xor
pop
rcl
mov
sub
or
mov
idiv
std
ds
pop
fsqrt
jo
pop
dec
in
and
inc
mov
push
arpl
(bad)
retf
pop
ror
xchg
int3
jle
cwde
and
loop
fist
dec
rol
sbb
out
pusha
add
jae
mov
push
cld
inc
outs
push
xchg
mov
popf
mov
sub
idiv
mov
out
mov
cmp
mov
inc
in
mov
mul
pop
mov
sbb
xor
loop
aas
mov
inc
lock
dec
int
xchg
sbb
jbe
cld
jb
xchg
shl
enterw
or
das
jno
jmp
adc
pop
and
lds
popa
imul
push
jmp
jp
dec
xchg
cmp
jb
sbb
cmp
repnz
daa
rcr
push
inc
mov
(bad)
loopne
aam
(bad)
mov
fs
push
cmp
pop
rcl
sar
aas
sbb
and
dec
outs
leave
scas
mov
cs
pop
jno
adc
or
mov
jns
add
ror
lds
sti
mov
mov
xlat
leave
popf
xchg
(bad)
push
pop
shr
rcl
add
mov
ret
push
pop
ds
inc
xor
jae
stos
mov
push
and
ja
sub
dec
int
out
fcomp
movs
xchg
mov
pusha
jecxz
addr16
ret
sbb
mov
ja
aas
mov
leave
lahf
jnp
or
cld
dec
aam
ret
sub
mov
add
push
jle
cmp
cmp
cmps
adc
ror
in
ret
xchg
inc
pop
pop
(bad)
(bad)
and
out
jge
(bad)
out
mov
enter
sub
mov
add
jmp
mov
(bad)
in
into
aas
movs
in
mov
icebp
jo
cmp
mov
pusha
das
je
(bad)
mov
ror
cmp
out
xchg
mov
sbb
sbb
fsubrp
add
fld
mov
add
jp
cli
dec
xor
pop
cli
sbb
ret
xchg
sub
inc
xchg
add
ja
jecxz
movs
cmps
xchg
mov
ret
pop
out
mov
xchg
ret
rcl
xchg
aas
fs
pop
add
loope
add
(bad)
ds
adc
add
ds
dec
aaa
iret
add
pop
mov
cs
ds
xchg
pop
or
push
adc
fucomip
mov
bound
dec
xchg
add
push
add
mov
dec
clc
jecxz
aaa
cmp
add
scas
jae
lods
xlat
cmps
xchg
xchg
pushf
(bad)
(bad)
(bad)
inc
xchg
xchg
rcr
div
push
xor
mov
mov
cmp
xchg
xchg
xor
jo
or
not
aaa
mov
mov
(bad)
fnstenv
out
jmp
seta
outs
or
mov
adc
ins
out
js
mov
mov
pop
adc
jns
out
shl
lea
stc
cmp
pushf
cli
jl
fbstp
aaa
push
out
test
xchg
xchg
mov
fstp
add
dec
sbb
ja
scas
mov
or
jae
pusha
(bad)
mov
mov
js
std
inc
pushf
call
mov
(bad)
xchg
xchg
push
fst
or
fnstenv
in
(bad)
repnz
sbb
mov
add
cmp
and
jnp
xchg
mov
sbb
mov
mov
sub
les
shl
xlat
mov
icebp
inc
lods
enter
xor
rol
jbe
jmp
cmc
test
mov
in
xchg
lds
ret
push
adc
sub
imul
jae
mov
xchg
aaa
adc
arpl
fsubr
jg
push
fistp
out
lods
arpl
les
push
scas
ins
pop
and
push
es
test
mov
int
ins
mov
cmp
mov
xor
xchg
push
sbb
cmp
cs
outs
push
mov
or
ss
jecxz
mov
js
pusha
(bad)
xor
repz
push
hlt
lahf
sbb
mov
cld
sub
mov
cmp
jnp
out
rcl
pop
daa
push
rcl
(bad)
lods
xchg
push
mov
xchg
adc
jbe
xchg
inc
inc
or
push
xor
and
mov
mov
dec
into
fwait
fwait
clc
gs
ins
ins
mov
sub
cmp
mov
pusha
repz
(bad)
push
outs
out
test
shl
dec
or
dec
mov
jmp
hlt
pop
retf
dec
stos
hlt
sar
sbb
cmp
cmp
add
pusha
repz
fcomp
dec
inc
push
test
jns
cmp
inc
and
mov
sbb
std
dec
loope
jno
fimul
mov
jle
movs
mov
scas
mov
push
retf
cdq
cwde
mov
inc
jge
add
pop
aad
pusha
(bad)
inc
sub
jae
cdq
mov
test
test
pop
xor
adc
ss
jmp
mov
mov
add
xor
out
lods
jbe
ds
fistp
jle
shr
fwait
out
mov
add
mov
pop
jp
ins
jo
cmp
push
mov
sbb
je
dec
nop
sbb
mov
in
addr16
(bad)
cmp
and
and
xchg
es
(bad)
jecxz
mov
das
push
push
nop
push
frstor
shr
xor
xor
leave
xchg
out
pop
xchg
fwait
iret
mov
jne
pop
ret
pop
fsub
lock
mov
(bad)
adc
mov
sar
mov
push
cmp
(bad)
int
in
retf
imul
lock
stc
mov
imul
sbb
je
out
and
sbb
mov
test
adc
adc
push
rol
jb
int
test
nop
xchg
push
mov
ja
push
sub
mov
int3
fwait
dec
rcl
not
pop
push
cmp
aaa
dec
sar
cmc
leave
jmp
cdq
pop
jno
add
jmp
add
xchg
cwde
jne
dec
cwde
arpl
sbb
cli
daa
std
ret
dec
es
jns
pushf
and
fidivr
cdq
movs
push
cmp
xchg
iret
out
mov
(bad)
arpl
jns
pop
outs
jo
mov
loope
mov
repnz
out
pop
jae
js
rol
shl
dec
fsub
and
cmp
test
push
sbb
adc
or
(bad)
retf
inc
and
dec
fist
fdiv
push
pop
xor
call
neg
ret
cmp
ins
int3
int3
outs
enter
cwde
ins
(bad)
sahf
cmp
ja
mov
fwait
(bad)
pop
repz
push
jecxz
div
imul
fsubr
mov
out
pop
cli
(bad)
clc
cmps
pop
inc
push
xlat
es
sbb
in
fucom
(bad)
out
xchg
sub
pop
imul
cwde
or
(bad)
sub
jne
aam
jl
fcomp
(bad)
pop
fcomp
sub
jbe
in
xchg
inc
sbb
repnz
dec
jnp
and
sub
loopne
adc
(bad)
jmp
pop
fsubr
into
cmp
mov
out
ja
lds
stc
out
repnz
fucomi
mov
xchg
adc
bound
mul
xchg
or
dec
daa
not
jge
cmp
jecxz
popa
ficom
das
sbb
ins
jbe
stos
pop
ds
jns
mov
in
push
cmp
push
cmps
cmp
cmp
inc
(bad)
push
out
pop
mov
sub
mov
pop
call
mov
dec
shl
pusha
mov
fstp
jns
test
jg
push
xchg
nop
sbb
(bad)
dec
fprem
icebp
lock
mov
int
xor
fsub
xchg
(bad)
gs
mov
ss
fldlg2
dec
gs
enter
cwde
add
push
jns
cdq
mov
mov
inc
jle
and
adc
pusha
mov
gs
aam
xor
mov
inc
imul
xchg
mov
arpl
pusha
cld
lods
(bad)
adc
pop
pop
xchg
je
loope
mov
sbb
(bad)
imul
in
cli
pop
icebp
(bad)
fst
mov
mov
(bad)
xor
xchg
shr
lock
getsec
push
rcr
xlat
pop
pop
pop
inc
pop
js
lods
shl
sub
leave
xchg
std
(bad)
mov
lods
test
inc
fwait
xchg
pushf
repnz
cmp
or
pop
(bad)
popa
leave
xchg
xchg
mov
and
ds
jge
xchg
bound
adc
test
jne
sub
mov
push
and
pushf
fisubr
gs
ret
pop
and
and
int3
jle
test
inc
xor
js
sbb
dec
sbb
(bad)
mov
fisttp
pop
and
push
dec
gs
cs
mov
lahf
cmp
xor
daa
mov
push
inc
and
imul
out
dec
inc
mov
out
adc
adc
enter
outs
pop
out
sub
and
jmp
test
ja
in
stc
pop
fld
gs
leave
and
xor
mov
cmps
xor
jge
scas
jae
jns
shl
adc
mov
pop
cli
stos
pop
push
es
mov
mov
cmps
cmps
mov
in
push
sub
add
sbb
movs
push
push
dec
(bad)
sbb
(bad)
dec
test
and
xchg
push
push
lds
lods
lods
cdq
in
aad
in
mov
fwait
jmp
and
ret
xchg
sbb
ss
je
stc
pop
sbb
int3
adc
test
sub
ds
xchg
in
sbb
add
jmp
mov
ret
movs
retf
in
(bad)
xchg
pop
pusha
stc
cmp
mov
sahf
pop
dec
push
add
mov
adc
xlat
ds
sbb
sbb
sbb
cmps
stos
sbb
inc
push
fwait
push
ds
push
xor
jp
aaa
les
cwde
dec
stc
mov
mov
push
test
int3
lds
sbb
enter
sti
sub
push
int3
int
sbb
ins
cwde
dec
ss
aaa
retf
inc
in
hlt
add
es
adc
mov
mov
ds
int3
(bad)
dec
and
inc
lea
aad
push
add
dec
ret
sbb
jns
es
out
ret
mov
jecxz
(bad)
ins
xchg
xrelease
dec
xor
(bad)
imul
mov
push
ds
(bad)
xchg
sub
imul
xor
xchg
or
mov
and
xor
(bad)
and
pop
jge
fadd
xor
mov
into
cmp
and
xchg
jmp
das
sbb
inc
lds
jo
xchg
jg
loop
add
scas
xchg
call
ret
rcr
nop
icebp
ror
sar
push
push
ins
jnp
mov
icebp
dec
pop
mov
sbb
test
icebp
icebp
imul
xor
sbb
fwait
mov
mov
mov
bound
inc
cld
xchg
inc
jp
add
fild
jae
and
and
lods
jg
int3
mov
(bad)
inc
adc
imul
js
rcr
icebp
es
repz
xchg
mov
shl
sub
in
iret
add
add
push
inc
fsub
pop
jmp
jg
add
pop
and
xchg
and
jno
test
sub
sbb
cmp
jno
push
push
pop
adc
xchg
jbe
push
xor
not
xchg
sahf
arpl
stc
pop
xor
cwde
ds
(bad)
xor
or
arpl
dec
add
dec
and
je
push
jo
ret
ja
mov
mov
ins
push
retf
cdq
mov
repnz
repnz
sub
retf
push
pop
dec
and
aam
push
in
lea
xchg
or
shl
xchg
nop
sub
fild
xchg
ret
mov
xchg
ret
add
fwait
imul
fimul
sahf
stos
(bad)
mov
and
lahf
pusha
lods
xrelease
jge
jb
mov
shl
inc
ja
push
mov
stos
or
movs
cmc
(bad)
into
scas
hlt
push
and
lock
ins
mov
retf
scas
popa
in
in
mov
shr
ffree
js
adc
pushf
loop
sbb
jmp
sbb
add
cmps
(bad)
sub
mov
dec
dec
stos
nop
sub
dec
mov
(bad)
mov
inc
push
ds
out
adc
nop
cmps
mov
push
inc
out
out
test
ret
fild
jmp
cmc
aaa
stos
fwait
jge
fild
inc
es
jnp
sub
repz
inc
jb
adc
xchg
pusha
xchg
outs
lock
clc
pop
(bad)
lds
or
fnstcw
test
in
push
popa
in
mov
loope
call
in
pop
adc
inc
cdq
pushf
xlat
fdiv
mov
loop
out
in
int
mov
mov
nop
out
ret
mov
adc
sub
and
inc
cmp
xor
push
mov
cmps
mov
or
and
dec
or
ret
adc
sub
jecxz
loopne
(bad)
call
fucomip
stos
or
cdq
call
add
clc
fldcw
repz
jbe
leave
fwait
int3
xchg
sar
adc
jecxz
lods
mov
inc
adc
fld
mov
push
push
dec
loop
add
inc
and
inc
and
xor
leave
sub
jmp
inc
or
mov
fstp
jmp
sbb
add
sbb
cmp
push
popa
and
add
fidivr
test
ins
add
je
hlt
fsubr
sub
mov
sbb
cmp
sub
push
imul
and
adc
mov
loope
call
mov
add
cmp
push
jne
jle
ja
xchg
add
dec
sub
add
adc
or
or
and
xchg
sbb
mov
push
sub
movs
sbb
add
je
pop
mov
cmp
cmp
xor
push
adc
cmp
dec
jne
mov
(bad)
sub
add
push
sub
push
inc
mov
sbb
xor
sbb
scas
mov
or
sbb
pop
cmp
push
dec
and
mov
icebp
mov
call
push
bound
cmp
lea
mov
cdq
push
sbb
jecxz
xchg
fisubr
es
or
adc
dec
xchg
dec
mov
inc
mov
sbb
cmp
jnp
sub
cmp
fld
rcr
cmp
mov
inc
fsubr
pop
pop
repz
sbb
pop
daa
xor
mov
and
push
jmp
cmps
inc
repnz
bound
pop
dec
sbb
or
in
dec
sbb
out
jnp
aad
mov
shl
into
mov
pop
adc
add
add
sub
cmp
jns
out
push
loop
out
xlat
mov
daa
idiv
in
mov
fisubr
mov
xchg
shl
(bad)
retf
adc
int
repnz
sbb
sub
neg
jecxz
lods
xchg
popf
dec
jmp
lea
(bad)
je
fisttp
popf
mov
sbb
adc
stos
(bad)
aad
mov
inc
ins
ins
xchg
pop
mov
pop
or
out
jns
xchg
(bad)
mov
aas
push
ins
jo
aas
sub
shr
(bad)
jb
xchg
sub
jb
mov
(bad)
loop
dec
popa
int3
pushf
mov
mov
enter
repz
mov
push
(bad)
mov
out
scas
punpcklwd
shl
enter
inc
push
mov
add
fxch
iret
imul
xchg
mov
fidivr
cmc
ds
retf
mov
mov
movs
sbb
xor
xor
mov
scas
add
lahf
adc
pop
inc
test
mov
push
mov
lahf
call
ds
dec
xor
mov
ret
aam
cdq
lea
xchg
outs
nop
aaa
jae
jge
shl
fnsave
sub
xor
push
xchg
xor
call
ret
popf
cmps
cmp
cmp
lds
loope
fnstcw
mov
add
sub
retf
shl
mov
shl
cs
jg
loop
bndldx
aaa
gs
or
xor
inc
icebp
shr
pop
sahf
dec
dec
xor
mov
sahf
dec
shld
fdivp
std
jnp
icebp
fild
fldenv
outs
fstp
push
pop
jmp
loop
jecxz
std
sub
pushf
pop
jl
and
jle
movs
jg
in
mov
fsin
push
icebp
es
pop
cdq
cdq
mov
fld
fnstenv
xchg
neg
popf
sahf
and
mov
fwait
pop
je
cmp
xor
aas
into
shl
jne
inc
jns
arpl
das
icebp
ret
jmp
push
mov
lea
ret
sahf
adc
or
aad
pop
pop
stc
add
in
loope
cld
add
xchg
mov
fdiv
mov
push
fsub
shl
add
jo
push
sahf
cmp
(bad)
sub
pop
push
sub
inc
mov
mov
adc
add
add
cmp
sbb
stos
cmp
lods
adc
pop
enter
pop
sub
mov
xchg
push
jl
in
in
pop
cmps
pop
fidivr
jns
adc
cmp
cdq
xor
out
cmp
test
sbb
cdq
std
sbb
pop
retf
mov
and
int
jae
scas
or
daa
sub
test
fistp
loopne
jne
mov
pshufw
jle
xor
xchg
sar
push
inc
fisub
out
dec
mov
dec
pop
push
dec
(bad)
mov
dec
arpl
push
popa
pop
std
pop
aad
xchg
and
je
dec
and
sbb
mov
cmc
popf
es
cmp
adc
xchg
add
loopne
call
cwde
test
adc
or
pop
retf
and
(bad)
lahf
push
jl
and
sub
fsub
scas
ds
hlt
cld
das
sub
mov
int3
or
ja
xchg
shl
cmps
cmp
and
inc
push
ror
leave
adc
call
add
xor
ss
repnz
scas
push
jmp
aad
xchg
sub
push
mov
cmp
add
sbb
dec
cmp
pop
jbe
sub
mov
mov
add
in
push
fs
xor
xchg
mov
and
mov
pop
sbb
fisttp
call
dec
mov
cs
mov
xchg
outs
pushf
adc
ror
out
mov
or
pop
sub
mov
pusha
xor
pop
jb
jae
and
dec
js
add
add
jbe
sbb
clc
retf
pop
retf
arpl
inc
add
mov
push
pushf
out
bound
sub
jmp
push
ror
adc
xchg
mov
push
pop
and
push
or
clc
nop
jg
push
add
push
(bad)
pop
mov
fsubrp
or
dec
pop
lods
test
adc
push
sub
scas
cmp
enter
dec
and
icebp
pop
imul
sbb
xor
xchg
aad
call
scas
xchg
xchg
enter
cmc
fsubr
xchg
inc
stc
push
sbb
enter
fisub
neg
stc
fst
in
xlat
mov
sbb
jecxz
add
pop
in
xchg
sub
xor
(bad)
xor
mov
leave
jmp
dec
xor
in
stos
push
dec
data16
cmpxchg
in
cmp
gs
mov
fstp
jl
dec
cmp
in
jb
mov
xor
xchg
fsub
or
int
retf
fdiv
mov
pop
push
ja
test
popf
or
cmps
popa
arpl
js
bound
mov
cmps
push
cld
mov
shl
scas
aad
and
les
add
das
or
push
int3
(bad)
sbb
fdiv
shl
out
dec
ret
and
loopne
int3
pushf
inc
loop
lds
sub
es
imul
clc
(bad)
std
inc
fistp
push
out
dec
sti
stos
pop
fcomp
sbb
adc
mov
outs
cwde
sbb
nop
xchg
bound
ds
icebp
sbb
fld
ror
cmp
std
fadd
and
jmp
push
pop
not
mov
sbb
nop
mov
adc
jbe
and
pop
outs
in
leavew
mov
pop
fidiv
data16
or
mov
scas
jnp
and
mov
imul
mov
lds
jae
sbb
test
hlt
arpl
ds
push
add
sub
leave
xchg
and
lahf
fs
sbb
repz
out
or
sub
inc
xor
fsub
les
sti
sub
out
add
and
int3
stos
jns
stc
not
cwde
loop
int
mov
enter
cmp
mov
in
test
sub
jl
add
addr16
dec
int
lock
lods
int
gs
mov
xchg
jmp
in
fcmovu
mov
outs
aaa
pop
retf
fs
cmp
ror
push
stos
(bad)
icebp
popa
loope
adc
in
pushf
mov
push
jbe
arpl
jecxz
mov
fadd
nop
push
sar
daa
stos
xlat
ret
leave
xchg
icebp
mov
int
jbe
sbb
jmp
ja
xchg
pop
mov
sub
mov
lods
call
add
(bad)
rcr
leave
push
ds
sub
and
outs
mov
sbb
shl
push
ret
(bad)
dec
ret
sbb
das
sub
popa
sub
imul
cmp
or
dec
aam
jne
icebp
inc
fwait
xchg
cmp
jnp
mov
lea
xor
add
mov
lods
daa
aaa
push
leave
retf
lahf
sub
call
in
sbb
mov
push
dec
loope
fld
xor
sbb
int3
(bad)
retf
jecxz
dec
out
and
test
repnz
retf
test
push
inc
add
push
les
mov
add
lods
mov
out
sbb
push
std
sar
inc
daa
dec
sbb
je
hlt
icebp
lea
call
adc
and
in
and
jge
outs
dec
mov
mov
fsubr
ds
js
mov
sub
add
gs
in
sub
out
xor
mov
cmp
push
scas
xor
pop
movs
mov
stos
cmp
xchg
sub
or
pusha
sbb
stos
cli
add
movs
mov
iret
push
xchg
call
mov
inc
outs
jmp
add
or
sbb
sar
cmp
mov
(bad)
outs
push
push
popf
clc
mov
lods
mov
xor
pop
repnz
ds
push
movs
nop
pop
or
sbb
bound
mov
(bad)
mov
mov
pop
sbb
push
dec
mov
(bad)
(bad)
xor
mov
loope
es
out
mov
pop
in
sub
xchg
pop
or
add
stos
dec
repz
add
mov
mov
mov
mov
mov
loop
fldenv
sbb
(bad)
cs
sbb
push
clc
sub
cdq
shr
lea
dec
stc
call
cmps
pushf
mov
push
ja
in
mov
mov
repz
push
xor
mov
jmp
into
ss
mov
push
jno
xchg
and
jo
imul
in
add
add
sahf
push
in
cmps
aam
adc
xor
sub
jecxz
mov
stc
jp
ins
lods
or
pop
cmps
popf
icebp
mov
cmp
sar
retf
pusha
xor
jnp
aaa
mov
js
cmp
and
in
retf
(bad)
jae
fld
iret
or
sub
mov
das
sub
pop
aas
push
leave
ins
rol
in
data16
lahf
popf
(bad)
sbb
sahf
or
mov
mov
mov
sbb
inc
gs
mov
aaa
jecxz
jp
arpl
das
ds
(bad)
retf
jle
lea
pop
sub
ret
je
mov
call
adc
bound
jns
arpl
(bad)
aam
sti
sub
jl
and
xchg
cs
std
and
dec
movs
push
movs
cdq
sbb
pop
adc
xlat
or
jmp
and
(bad)
in
mov
test
(bad)
mov
jno
sbb
and
sub
inc
add
add
jns
sbb
outs
retf
outs
sahf
mov
loop
jmp
sbb
cdq
in
fsubrp
sbb
in
sar
mov
les
ja
add
jmp
add
mov
mov
jne
push
(bad)
sbb
and
jns
retf
test
adc
pop
shl
mov
je
xor
scas
adc
dec
fnsave
inc
(bad)
repz
dec
mov
sub
xor
in
dec
clc
stc
pop
jmp
stc
ins
jae
mov
shr
mov
jmp
out
mov
cmp
fs
retf
fistp
mov
repz
and
mov
add
jae
dec
in
lods
in
pop
push
das
push
in
ret
das
sub
in
push
pop
out
inc
mov
adc
mov
xor
jg
outs
and
ret
add
je
mov
sbb
mov
imul
cmp
push
inc
fucomp
cmp
mov
mov
gs
cmp
push
dec
jge
ins
pop
push
xlat
jle
loope
pop
clc
test
mov
pop
gs
pop
icebp
hlt
xlat
inc
mov
xchg
jns
repz
lods
loop
xlat
mov
pop
sbb
(bad)
das
loope
push
icebp
popf
mov
imul
sbb
inc
cdq
lea
addr16
mov
arpl
push
sub
jg
inc
mov
xchg
cdq
fs
jp
add
daa
cmp
dec
inc
push
add
add
fsubr
jno
jge
retf
lods
aam
sub
jle
movs
cdq
stc
inc
pop
cli
xchg
je
in
(bad)
sti
test
sbb
pop
mov
add
out
and
dec
aad
sbb
loopne
mov
leave
aaa
fcmovbe
sbb
mov
sbb
and
gs
in
jmp
(bad)
icebp
jne
sbb
dec
lock
mov
mov
out
imul
cmp
fdivr
leave
arpl
mov
into
inc
jp
jp
add
(bad)
pop
sub
jo
pop
lock
jbe
fldcw
lods
fcmove
mov
and
mov
adc
push
cld
sub
jns
push
out
mov
push
rcr
out
jb
mov
or
dec
addr16
loopne
stos
(bad)
imul
leave
mov
mov
pop
or
aaa
dec
iret
ret
out
lds
lahf
mov
dec
aaa
pop
sbb
mov
push
(bad)
cdq
addr16
es
mov
pop
sti
sub
lods
int
out
mov
sub
jnp
xor
jae
xchg
out
xchg
daa
inc
mov
pop
(bad)
pop
jne
cmp
ret
mov
test
int
dec
add
mov
ror
sbb
push
inc
call
imul
add
inc
data16
adc
lea
xlat
inc
or
leave
add
dec
cmovbe
test
pop
es
out
dec
xchg
mov
adc
pop
call
mov
cwde
pop
sbb
ds
dec
ret
mov
iret
repz
ins
and
(bad)
(bad)
and
das
xchg
in
xchg
xchg
jmp
jp
mov
or
cmp
loope
mov
loope
push
dec
sub
(bad)
pop
cwde
add
cs
cli
xchg
iret
jne
pop
xchg
stos
dec
pop
lahf
and
adc
mov
add
jbe
inc
test
inc
cmps
xor
int
hlt
out
jns
cwde
out
mov
cwde
stos
push
in
in
and
dec
dec
pop
pop
xchg
jnp
shl
pusha
leave
pop
xor
lock
imul
out
xchg
xchg
sub
push
(bad)
leave
inc
cli
inc
add
mov
daa
scas
stos
(bad)
push
das
retf
imul
mov
pop
add
(bad)
adc
add
sbb
add
loopne
fwait
inc
pusha
lods
gs
and
scas
les
mov
out
mov
jno
and
scas
outs
push
aaa
test
repz
push
push
fwait
movs
ss
jns
or
mov
pop
sub
hlt
pop
xchg
sti
jbe
or
ret
in
cmp
mov
and
xchg
lea
jp
dec
(bad)
sub
pop
inc
jb
xchg
and
cs
sub
out
xchg
fst
jae
push
test
mov
xor
mul
jp
push
call
add
data16
stc
popa
lea
jp
call
mov
into
cmp
inc
mov
mov
rol
icebp
sti
sub
xchg
loope
scas
mov
cs
jbe
lea
addr16
pop
cmp
loop
or
cmp
pop
cwde
rcr
repnz
inc
call
fs
lock
mov
test
aas
and
and
mov
sbb
je
cmp
fcomip
pop
sbb
mov
nop
jno
mov
xchg
cmp
push
sub
nop
call
arpl
aas
gs
adc
xchg
push
mov
or
jmp
cmps
loope
xchg
fsub
xchg
push
(bad)
out
push
ficom
push
pop
(bad)
es
shr
xlat
neg
push
lahf
lock
mov
ins
xor
xchg
cmps
popa
leave
adc
cwde
dec
jmp
in
mov
outs
dec
mov
aas
pop
jl
mov
sbb
cmps
push
pushf
scas
adc
inc
in
mov
jmp
iret
aam
out
scas
xchg
inc
adc
cmp
or
ret
test
push
adc
out
xchg
jp
fist
(bad)
xor
and
push
jne
pop
fst
sbb
push
sahf
dec
cs
fwait
xchg
out
sub
sub
ficomp
les
pop
push
cmp
sbb
(bad)
mov
pop
mov
push
inc
add
fild
out
out
sbb
(bad)
mov
repnz
cli
in
cld
(bad)
push
dec
sar
push
xlat
dec
cmps
fldenv
cmp
dec
out
push
pop
pop
mov
pop
push
lds
ins
int3
lock
fstp
sub
movs
(bad)
xchg
push
test
int3
jae
imul
sbb
add
xor
rcr
aad
jo
pop
daa
or
fsubrp
cmpps
lods
mov
mov
push
not
jne
cmps
(bad)
mov
xor
pop
mov
xchg
ja
lods
shl
rcr
das
int3
jmp
stos
mov
mov
imul
bound
sbb
push
fdiv
test
sar
push
adc
fcomp
mov
pop
aad
retf
xor
nop
mov
jle
cmp
xlat
xor
jb
inc
sub
sbb
cmp
outs
out
bound
std
(bad)
xor
add
sub
mov
jmp
es
or
jmp
retf
xchg
dec
cli
sbb
jo
bound
retf
cmps
cmp
xor
fldenv
(bad)
mov
sbb
test
mov
pop
jnp
das
inc
lods
xor
fisttp
push
jno
xchg
mov
sub
clc
jne
and
push
ja
popf
inc
cli
test
imul
hlt
ins
shr
jnp
jl
cmp
ss
fldenv
imul
lds
ret
cmp
test
xchg
jge
gs
repnz
out
nop
fsubr
in
pop
(bad)
push
xor
(bad)
enter
scas
in
movs
shl
(bad)
mov
cmps
or
pcmpeqw
ds
fs
ins
aas
mov
xor
pop
loop
into
pop
ror
add
push
in
adc
and
stos
jmp
imul
loopne
pusha
jle
shl
xchg
cs
xor
loope
ins
scas
mov
mov
add
and
cs
scas
repz
lea
cmps
fmul
retf
leave
arpl
pop
mov
dec
inc
or
gs
mov
mov
and
mov
cmps
out
sbb
(bad)
xor
pop
(bad)
in
js
call
retf
pop
movs
mov
push
xor
fdivrp
mov
xchg
add
cmps
fs
pop
dec
mov
pushf
pop
or
fild
xor
cmp
mov
adc
jg
in
and
mov
movs
xor
pop
jno
xchg
cwde
mov
jmp
test
int3
push
dec
xor
xor
mov
xchg
in
adc
lahf
sub
sbb
pop
outs
daa
jo
mov
xor
nop
or
mov
leave
jae
mov
jno
ret
jl
or
in
mov
fs
mov
mov
push
scas
test
ja
retf
and
retf
(bad)
cmp
(bad)
je
cmp
pop
jnp
les
arpl
(bad)
(bad)
fdiv
pop
adc
cdq
rcr
hlt
icebp
jmp
aaa
xchg
cmp
push
data16
pop
outs
retf
jl
sbb
in
mov
jge
out
mov
or
rdtsc
add
and
adc
jp
adc
sbb
xchg
xchg
jbe
xchg
fldcw
add
scas
mov
xchg
push
dec
fldenv
dec
loop
and
push
mov
cmp
mov
xlat
mov
jb
(bad)
enter
pusha
cmps
fild
ja
call
mov
outs
movs
push
jge
cmp
xchg
xor
gs
leave
(bad)
and
or
in
test
pop
out
imul
out
scas
xor
popa
jle
fsub
sbb
ja
in
sar
jg
popa
jmp
mov
imul
cmps
jecxz
jnp
imul
add
shl
mul
xchg
mov
jno
sahf
movs
scas
repz
idiv
in
pop
cmp
pop
(bad)
cmc
mov
cmp
dec
std
pop
je
imul
or
or
daa
mov
cmp
add
ret
and
inc
add
popf
adc
sbb
inc
(bad)
retf
inc
stc
and
pop
fbstp
scas
ret
inc
xor
mov
arpl
push
(bad)
sahf
(bad)
jmp
jnp
call
jae
or
or
xor
fs
sub
adc
or
push
inc
add
jmp
pop
test
mov
xor
outs
test
adc
outs
mov
mov
cmps
pop
outs
cmp
aad
test
jne
and
ss
arpl
pop
fiadd
xchg
inc
jg
sub
dec
out
add
mov
sbb
lock
pop
call
pop
dec
add
jb
and
xchg
sub
inc
pop
mov
xchg
ss
test
xchg
pop
jo
(bad)
sti
mov
or
lods
cmps
scas
mov
xchg
fisubr
jae
out
pop
popa
push
(bad)
retf
mov
sub
or
adc
ror
jae
sub
out
adc
cli
stos
cmps
frstor
jne
inc
sbb
fadd
test
or
dec
inc
ins
mov
and
in
jnp
arpl
push
mov
fwait
pop
(bad)
lock
lock
mov
out
mov
mov
retf
lea
mov
sahf
mov
icebp
xor
xchg
mov
(bad)
iret
xor
rol
inc
xor
enter
daa
jbe
jne
and
rol
or
xchg
push
add
push
fisttp
lods
or
retf
inc
push
je
and
cmps
mov
fidivr
add
push
lds
sub
or
mov
push
js
retf
adc
dec
(bad)
mov
push
pop
xor
xchg
fwait
inc
dec
hlt
scas
call
xlat
ret
call
mov
ret
mov
mov
ror
aaa
stos
adc
gs
jb
stos
jecxz
cmp
xchg
push
fs
cmc
inc
cwde
add
cmp
mov
add
adc
es
jmp
push
movs
add
mov
or
test
fwait
inc
or
pop
or
dec
outs
sub
stc
inc
add
dec
push
std
sub
aaa
push
sbb
dec
in
fnsave
cmp
inc
push
retf
xor
sub
icebp
fwait
jle
clc
or
mov
ja
xchg
mov
and
dec
push
int3
add
fs
inc
inc
lea
sbb
mov
outs
fcomp
mov
out
or
push
cmps
aaa
std
xchg
lods
shl
arpl
jecxz
ja
mov
mov
mov
jmp
mov
nop
dec
ret
push
jg
test
jmp
fs
xor
xlat
inc
ds
scas
nop
jns
out
jbe
call
lea
cmp
(bad)
inc
xchg
xlat
mov
sub
sbb
cmps
iret
xchg
xchg
mov
fild
dec
push
(bad)
movs
fs
mov
ins
mov
hlt
pop
outs
xor
dec
fmul
push
call
pop
dec
xchg
lea
or
sbb
push
dec
push
dec
outs
(bad)
in
jo
push
lahf
fdiv
in
xlat
enter
outs
mov
in
mov
in
gs
inc
mov
jne
cmp
retf
movs
xor
cmp
sar
pop
ss
in
sbb
outs
xchg
cmp
retf
jl
push
sub
fnstenv
push
sahf
inc
ret
inc
jbe
pop
cmp
push
das
retf
add
(bad)
jb
xlat
xor
mov
pop
movs
fwait
jno
xchg
pop
sub
in
(bad)
jb
gs
push
jnp
sub
inc
xlat
pop
push
sbb
mov
push
ja
pop
mov
stos
cmp
xchg
ret
sar
mov
and
xchg
push
cmps
or
in
fsub
dec
imul
imul
sysexit
in
das
ret
(bad)
and
pop
stos
or
inc
sar
lock
arpl
das
shl
test
clc
mov
in
loop
pop
(bad)
sbb
jp
repnz
shl
mov
rcr
mov
pop
in
inc
gs
or
push
loop
sbb
and
stc
ins
ss
add
xlat
dec
stos
mov
icebp
fcmovu
jge
and
mov
retf
pop
pop
xchg
mov
dec
fs
js
pop
shl
pop
ret
sbb
fnstsw
cmps
out
push
pushf
pop
loope
stos
xchg
xchg
mov
iret
and
mov
into
shl
movs
cli
popf
das
pop
(bad)
push
push
(bad)
mov
lods
int3
(bad)
int3
retf
into
je
mov
add
pop
(bad)
cld
sub
les
sbb
and
inc
or
outs
outs
or
sub
sbb
adc
adc
test
pop
icebp
mov
div
fidivr
jmp
inc
repz
pop
adc
sbb
sbb
adc
adc
dec
mov
dec
mov
sahf
or
mov
sub
mov
jo
scas
stos
or
sub
loopne
movs
sub
xchg
(bad)
ins
sbb
icebp
daa
and
mov
sbb
imul
(bad)
xchg
sahf
retf
out
pop
fisttp
es
and
and
leave
add
icebp
popf
outs
dec
sbb
and
mov
jno
sub
mov
mov
gs
add
or
adc
mov
call
retf
dec
or
push
sbb
imul
aas
xchg
pop
xchg
int
test
add
idiv
ds
icebp
in
and
sub
pop
inc
shl
or
ins
adc
pop
dec
push
ret
int
xor
adc
cmp
bound
loope
and
adc
shl
mov
jno
mov
cmp
jmp
fcmovu
add
das
push
movs
jmp
or
loop
shl
cs
out
mov
xchg
cwde
cwde
les
mov
push
push
pop
inc
ins
mov
and
mov
sbb
xchg
or
xor
repz
addr16
clc
pop
into
mov
jecxz
cli
xchg
mov
jmp
mov
xor
(bad)
xor
sub
arpl
shl
xor
sbb
retf
dec
loop
sar
js
icebp
xor
mov
pop
mov
inc
ret
pop
pop
push
out
mov
xchg
jl
imul
mov
xchg
outs
retf
xchg
fmul
ret
xor
push
lock
mov
push
mov
mov
add
mov
jmp
popa
in
and
imul
icebp
ret
or
call
and
jae
or
xor
lds
add
inc
add
call
fidiv
fistp
inc
sub
sub
sti
out
loop
xchg
leave
je
xchg
cmp
stos
int3
not
cmp
jno
sti
and
ss
cmp
adc
mov
push
push
push
out
rcl
in
daa
add
fndisi(8087
push
lea
arpl
out
adc
push
fimul
sti
mov
shl
fisttp
ror
jnp
in
lods
jle
enter
mov
sar
cdq
xchg
jmp
std
call
jnp
mov
and
movs
jo
enter
pop
imul
lods
ds
cdq
jbe
addr16
lea
lods
clc
and
xor
repnz
cmp
adc
call
out
js
pushf
jns
imul
lahf
jne
shl
lea
je
aad
dec
mov
and
xchg
lahf
dec
imul
clc
push
sbb
scas
dec
cmp
dec
xchg
in
loop
dec
std
inc
pop
(bad)
xchg
out
fs
sub
jno
or
int3
aas
mov
cld
cmp
jp
icebp
dec
lock
pop
sbb
or
xor
loop
mov
jno
mov
scas
js
repz
jnp
stc
das
arpl
imul
in
inc
lahf
push
mov
lods
test
inc
leave
mov
push
pop
imul
pusha
cmps
out
stc
pop
mov
cmps
leave
(bad)
imul
push
stc
arpl
sub
jbe
ret
sahf
inc
adc
ror
and
push
mov
xor
(bad)
or
lods
pushf
dec
add
add
inc
push
jmp
(bad)
dec
or
bound
out
jmp
pop
retf
jo
loop
lock
sub
div
arpl
inc
fmul
cmps
je
or
dec
mov
lods
mov
arpl
fs
and
mov
cmp
dec
xchg
outs
std
inc
jp
clc
pop
jmp
add
jb
push
lahf
dec
jno
lds
sbb
scas
popa
test
out
stos
call
shr
enter
pop
fsubr
(bad)
pop
cmp
movs
jo
cmp
popa
scas
push
mov
mov
sbb
in
lods
mov
adc
(bad)
jno
mov
sub
fidivr
cmp
loopne
js
xchg
dec
sbb
sbb
loopne
pushf
mov
shl
call
inc
scas
das
xor
sub
(bad)
add
cmp
movs
std
xor
test
call
leave
add
jae
and
mov
lods
lahf
sbb
ffree
(bad)
loope
in
mov
push
in
and
xor
retf
jecxz
shr
inc
cmps
into
xor
sbb
cmps
ss
lock
add
inc
leave
xor
jno
fdiv
pop
pop
outs
jnp
sub
mov
scas
xchg
test
xor
jno
call
out
out
jg
xor
xchg
pop
sbb
div
sbb
movs
je
sub
cmps
(bad)
adc
sbb
fsubr
out
mov
push
outs
stc
add
mov
arpl
dec
imul
(bad)
dec
scas
cs
fistp
xchg
mov
(bad)
int3
jne
push
daa
cmp
sub
movs
and
ss
pop
mov
jo
dec
lds
mov
mov
fs
pop
push
call
rcl
lock
cmps
stc
mov
int3
jp
shl
jp
(bad)
call
out
jo
popa
sub
jmp
mov
out
or
icebp
out
fwait
(bad)
mov
imul
mov
outs
mov
imul
mov
loop
jno
mov
scas
ret
aaa
xor
mov
pop
imul
pop
lahf
aas
fs
out
xor
dec
retf
lock
(bad)
retf
movs
pusha
jne
jne
loopne
pop
pop
sbb
pop
inc
mov
jmp
fstp
dec
cmp
sub
ds
and
xor
mov
sahf
leave
cmc
pop
xchg
sub
outs
mov
imul
int3
mov
pop
pop
int
repnz
cmp
int
rcl
jns
ds
imul
mov
pop
cmp
in
jmp
xlat
mov
or
mov
sub
dec
leave
popf
das
cwde
retf
retf
inc
push
xor
int3
pop
sbb
ins
fnstcw
rol
cmps
jmp
sahf
fwait
sar
xchg
int
mov
dec
int3
mov
pop
outs
sub
or
xor
cs
jns
xlat
movs
pop
push
icebp
mov
sub
mov
xor
mov
xor
aad
push
inc
out
cmp
push
cwde
retf
xor
push
cmps
clc
push
inc
xchg
imul
lds
cmp
sbb
lahf
xor
and
iret
add
mov
inc
arpl
test
mov
xor
pusha
sbb
add
movs
cdq
movs
mov
hlt
dec
iret
enter
dec
sub
push
push
jbe
cmp
shl
(bad)
dec
lods
retf
cmps
xchg
(bad)
das
stc
gs
xchg
pop
cmps
adc
pop
sbb
dec
inc
(bad)
shl
loop
cs
cmp
cmp
add
jl
dec
xchg
xchg
dec
aad
lea
push
inc
rcr
push
push
cwde
(bad)
push
jb
pop
pop
cs
push
xor
cdq
out
pusha
jae
jge
add
mov
cmp
(bad)
or
scas
jmp
mov
add
xor
ins
pop
jno
xor
cmps
cmp
retf
xchg
retf
out
jnp
retf
stos
stc
dec
enter
sar
sub
fistp
and
test
lods
ja
inc
sub
inc
mov
mov
(bad)
sub
stc
push
mov
xor
mov
pop
cs
mov
xchg
sbb
mov
fstp
push
das
sub
add
popf
cld
shr
jl
in
into
mov
gs
sbb
(bad)
arpl
or
call
fwait
pop
retf
mov
xor
xor
mov
cmp
mov
cmp
mov
xchg
xor
into
popf
fstp
neg
push
mov
int3
push
call
aam
leave
in
mov
enter
cdq
mov
loop
test
xchg
jno
in
call
mov
repz
or
xchg
dec
js
cmp
scas
and
invd
mov
arpl
mov
add
mov
jb
cmp
jge
push
inc
cmp
cmp
rcr
sbb
in
push
push
mov
in
fisttp
jle
jno
das
jmp
sbb
rcl
mov
dec
add
scas
(bad)
adc
rcl
movs
outs
mov
cmps
sbb
in
stos
adc
inc
movs
push
add
(bad)
jbe
shl
hlt
pop
scas
rcr
jae
sbb
jmp
xlat
xor
je
mov
pushf
in
fisttp
fistp
push
mov
adc
cld
ret
hlt
adc
xor
mov
int
inc
add
push
inc
sbb
outs
jl
jo
inc
ret
fs
std
movs
lahf
xor
int3
sub
mov
jo
in
dec
jp
pop
lea
mov
(bad)
lock
and
lahf
jno
js
cmp
xchg
mov
(bad)
popa
pop
mul
ret
xchg
pop
adc
mov
xchg
rol
enter
jae
test
scas
fisttp
lahf
sub
jno
mov
imul
mov
imul
fwait
nop
pop
cld
sub
out
and
aam
jno
stc
sbb
outs
and
js
push
in
repz
mov
jl
pop
mov
adc
and
je
dec
dec
ins
bound
arpl
outs
sbb
std
xlat
pop
or
pop
inc
xor
mov
test
mov
mov
fistp
sti
scas
jne
sbb
dec
daa
add
push
int
mov
or
jae
movs
sahf
mov
lock
xlat
and
ficomp
mov
push
pop
arpl
xchg
retf
mov
retf
int3
inc
xor
call
and
push
imul
push
inc
sahf
mul
pop
push
frstor
(bad)
jg
in
js
dec
(bad)
cld
jl
xor
pop
jge
xchg
mov
call
mov
or
bswap
test
fild
movhps
lds
mov
rcr
jp
pop
xchg
ins
or
add
call
mov
pop
hlt
add
imul
mov
fdivr
push
pop
add
pop
mov
fsubr
mov
ficomp
mov
addr16
shl
adc
neg
and
out
mov
xor
inc
dec
inc
and
jae
push
push
and
jmp
loope
mov
push
addr16
shr
add
add
ret
push
leave
imul
cwde
and
out
lods
(bad)
outs
mov
adc
dec
fs
aas
pop
and
(bad)
rcr
or
mov
xchg
mov
mov
pop
sbb
rcl
sbb
bnd
call
adc
and
sbb
dec
repnz
loopne
out
and
or
or
imul
mov
push
mov
mov
in
mov
mov
add
movs
mov
rep
iret
retf
add
shr
push
push
add
in
gs
outs
xor
sar
loop
test
outs
mov
or
mov
out
xor
(bad)
das
sub
pop
aaa
and
xchg
mov
jge
ror
xor
or
jno
xchg
jns
shl
mov
cs
mov
enter
ret
test
dec
cmp
xchg
iret
sub
(bad)
ins
inc
int3
mov
scas
loope
sbb
clc
pop
mov
(bad)
fwait
data16
add
xor
into
mov
or
ficomp
stos
fnsave
dec
int3
aad
mov
ins
adc
push
dec
jle
sub
push
fiadd
cs
xor
out
mov
xor
pop
xchg
sbb
sbb
movs
hlt
pop
lea
sub
gs
ret
outs
mov
hlt
cli
jae
in
mov
jnp
das
loope
gs
shr
shl
jae
ins
xchg
cmp
(bad)
loop
mov
enter
mov
jno
lea
jne
xor
add
mov
icebp
clc
jmp
cmp
out
fiadd
fadd
push
outs
pop
push
call
sub
and
pop
call
push
lods
jmp
xor
cmc
arpl
mov
cmp
enter
fsub
dec
movs
in
ss
inc
sub
xchg
ss
and
movs
xchg
xchg
sbb
scas
pushf
lea
daa
sbb
inc
ss
pusha
icebp
jmp
fcomip
pop
inc
mov
mov
sbb
call
pop
sub
dec
xchg
es
xchg
ret
inc
pop
ss
movs
or
mov
xor
sbb
mov
aas
rcr
arpl
in
xchg
push
inc
ror
lods
retf
or
stc
pop
out
mov
dec
and
fwait
out
jmp
aas
jnp
jno
mov
sub
gs
imul
add
out
(bad)
popa
(bad)
xor
out
scas
call
adc
sub
push
enter
out
arpl
mov
mov
hlt
cmp
mov
mov
out
retf
(bad)
sub
xchg
rcl
jb
cdq
xor
(bad)
pop
and
jb
les
and
ret
cli
mov
call
lds
jno
dec
cmp
xchg
addr16
jne
enter
int3
mov
test
stos
repz
sbb
pop
lock
pop
mov
test
arpl
jno
jmp
(bad)
(bad)
cdq
xchg
mov
in
pop
pop
(bad)
add
jnp
cwde
add
shr
daa
fs
jnp
out
push
pushf
sbb
fnstsw
dec
into
or
cs
jmp
(bad)
dec
les
mov
xor
div
rcr
inc
(bad)
mov
mov
mov
sahf
mov
cmp
(bad)
pop
out
jnp
fsubr
inc
fmul
fst
inc
mov
cmp
add
inc
outs
sbb
dec
mov
fist
pop
sbb
xor
jno
pop
rcl
ins
bound
clc
rol
icebp
loop
arpl
jnp
cmp
arpl
adc
dec
pop
js
sahf
xchg
mov
ins
or
repz
(bad)
inc
xor
mov
les
call
add
fs
sub
popa
das
add
mov
sbb
movs
xchg
xor
jno
cli
jp
push
sub
cmp
in
sbb
pop
outs
inc
fsubp
test
adc
in
mov
and
les
out
ror
jae
add
or
xor
mov
pop
dec
movs
jl
jecxz
and
xchg
xchg
cdq
das
dec
loop
loopne
mov
icebp
gs
pop
and
jmp
jnp
pushf
enter
sahf
xor
nop
sub
popf
mov
fldenv
jno
popf
mov
mov
aaa
cmp
cli
mov
xor
mov
(bad)
fidiv
xchg
inc
retf
mov
sbb
cmps
sahf
inc
pop
inc
(bad)
jmp
dec
(bad)
jp
imul
xchg
test
arpl
push
(bad)
pop
xchg
inc
(bad)
mov
sub
cmp
repz
call
push
dec
mov
jns
xchg
arpl
dec
xor
mov
hlt
or
add
(bad)
into
jno
mov
inc
mov
mov
push
push
sbb
dec
aam
test
jne
mov
sar
cmp
or
popa
in
push
call
rcl
jnp
push
out
mov
cmp
sbb
fs
or
data16
xor
stos
ins
hlt
dec
push
jno
xchg
inc
int3
les
outs
das
ins
cmp
mov
xor
sbb
xchg
pop
fucomip
mov
pop
aam
add
test
or
daa
sub
xlat
in
(bad)
jns
mov
sub
cmp
xchg
sub
out
jmp
aaa
iret
mov
ret
mov
xchg
pop
xor
push
fadd
jno
in
scas
mov
jp
cld
push
xchg
inc
xor
mov
add
xchg
and
les
enter
repnz
repz
and
retf
pop
adc
sbb
or
push
push
xor
call
inc
add
mov
imul
pop
add
and
jb
outs
dec
add
push
or
mov
cmp
inc
(bad)
xchg
ret
inc
mov
or
or
xor
lods
enter
mov
or
jmp
ja
fcmovnb
call
retf
(bad)
sbb
out
(bad)
mov
cmc
pop
sub
mov
shl
daa
imul
arpl
(bad)
retf
cwde
xor
rol
xchg
into
imul
sbb
mov
push
push
add
not
dec
pushf
mov
push
jo
and
and
adc
add
dec
inc
jl
mov
idiv
test
int
adc
movs
and
inc
inc
nop
test
adc
test
adc
jne
rcl
xchg
push
(bad)
xor
(bad)
fsubr
mov
pop
aam
and
inc
jmp
mov
es
xor
test
fucom
mov
jg
add
push
test
stos
jo
(bad)
call
jecxz
adc
int3
outs
pop
mov
(bad)
popa
les
sbb
inc
jge
mov
push
es
xlat
add
sub
inc
mov
mov
mov
test
lahf
inc
bound
inc
jo
cmps
aam
retf
inc
dec
and
cmp
cmp
ds
xchg
add
out
mov
in
jns
movs
or
jle
iret
pop
ins
sub
mov
mov
outs
or
or
mov
fcmove
pop
and
sar
cmp
add
inc
pop
pop
cmp
mov
js
or
xor
or
xlat
loope
pusha
test
jmp
das
or
in
stos
mov
adc
and
hlt
shl
cmp
shr
push
bound
inc
sub
dec
and
daa
dec
inc
nop
mov
pop
ret
add
inc
add
test
and
imul
mov
into
xchg
test
sti
test
(bad)
repnz
mov
add
ds
push
repz
mov
hlt
sub
or
int
nop
jae
aam
fld
mov
sar
mov
fwait
mov
mov
bound
imul
loopne
popf
fist
aad
aad
sub
loopne
out
arpl
jb
imul
sbb
mov
push
into
test
sub
add
sbb
cmp
xchg
cmp
rcr
sub
or
fucomp
mov
(bad)
mov
push
inc
pop
gs
mov
nop
push
push
adc
mov
inc
out
push
and
pop
int
lds
movs
mul
inc
fwait
inc
daa
in
mov
push
ret
xor
or
push
mov
xchg
fstp
add
inc
inc
pop
or
xchg
pusha
pop
rol
cmps
add
mov
fistp
add
jo
fwait
pusha
pusha
cmp
rol
cmp
movs
shl
rcl
sbb
mov
scas
mov
cmc
cmp
lock
jecxz
loop
mov
add
les
jl
xchg
xchg
add
inc
lock
xchg
mov
xchg
je
das
call
push
mov
xchg
(bad)
adc
shl
sub
(bad)
xchg
inc
(bad)
inc
sub
mov
sbb
xchg
push
popf
aam
pop
fs
push
inc
fcmovnb
push
out
mov
fwait
imul
cld
lahf
adc
add
jae
aam
cmp
icebp
(bad)
jmp
mov
inc
push
mov
mov
das
and
jbe
ret
cmps
jmp
inc
in
pop
xor
call
arpl
rcl
mov
xor
rcl
push
in
push
das
mov
movs
xchg
in
(bad)
xchg
sbb
ds
gs
pop
push
inc
sub
sbb
xchg
sub
sub
(bad)
stos
and
test
xchg
ss
inc
pop
inc
pop
xchg
loopne
inc
mov
ror
adc
inc
sub
shl
repnz
mov
test
cmps
push
inc
dec
in
mov
fld
add
pop
out
in
fwait
dec
inc
mov
clc
dec
jno
and
sub
push
std
cmp
je
lods
fst
dec
xchg
cmp
mov
adc
imul
dec
dec
icebp
push
stos
xchg
out
pop
arpl
(bad)
in
mov
setb
inc
or
sub
out
mov
fwait
inc
out
mov
or
push
movs
pusha
jmp
mov
out
mov
rcl
push
das
icebp
inc
fld
push
xor
mov
add
call
mov
lahf
lds
sbb
popa
and
jp
loopne
jle
or
ficom
pop
sbb
dec
inc
clc
lahf
cmp
pop
stc
pop
inc
mov
jl
in
(bad)
add
cmp
push
sub
add
adc
add
mov
arpl
ja
lock
or
mov
pop
jae
clc
xchg
(bad)
pop
xor
daa
aaa
icebp
ret
js
pop
pop
int3
adc
loop
(bad)
push
mov
ret
xchg
aas
and
xor
mov
std
les
push
inc
or
and
and
xchg
mov
cmp
aam
popf
sbb
dec
mov
repz
addr16
fisubr
shl
pop
rcl
xor
ds
fwait
xchg
or
jp
inc
fistp
jns
jge
pop
icebp
mov
xchg
cmp
or
aam
cmp
pop
adc
out
scas
cmp
mov
mov
mov
cmp
ins
mov
mov
arpl
adc
xchg
mov
sbb
lahf
test
inc
out
jo
imul
arpl
pushf
aas
sti
xchg
dec
popf
xchg
stos
retf
xchg
adc
jbe
sbb
imul
ds
and
mov
inc
imul
pshufw
mov
dec
ret
retf
fisttp
xor
inc
xchg
les
or
fdiv
cwde
lahf
cld
mov
arpl
mov
lods
test
in
inc
jns
cmp
das
into
icebp
retf
add
mov
cmp
sbb
or
or
pop
cmp
jbe
movs
pushf
enter
sbb
mov
sbb
fs
rcr
or
jmp
mov
dec
cmps
nop
add
mov
icebp
imul
jl
pushf
dec
xchg
mov
push
xchg
or
and
jae
mov
inc
out
xchg
int
fwait
xor
cmps
je
push
xchg
lods
out
push
dec
pop
fisttp
leave
cmc
sbb
xchg
enter
push
enter
cwde
out
mov
push
dec
(bad)
mov
imul
add
jecxz
jl
inc
(bad)
and
xchg
mov
cdq
xor
inc
sti
neg
dec
shl
out
enter
retf
loope
dec
shl
data16
xchg
outs
xchg
pop
rol
adc
jb
dec
cmps
xor
push
daa
lahf
cmp
xor
inc
pop
mov
imul
addr16
les
aaa
out
jne
fs
lods
pop
lods
(bad)
sub
call
repz
push
mov
jae
adc
test
retf
and
pop
sbb
mov
jg
fwait
mov
mov
cs
in
lods
aad
imul
push
xor
test
lods
retf
push
movs
(bad)
xchg
je
mov
sbb
inc
and
and
add
mov
je
sbb
in
push
fisub
data16
dec
mov
scas
jle
cmp
test
push
pop
lods
dec
mov
cli
sti
and
add
dec
jns
scas
add
jbe
jae
bound
add
adc
aaa
mov
test
jle
rol
adc
lods
push
dec
mov
cmp
pop
ins
xchg
inc
pop
cmp
dec
push
cmp
pop
sbb
mov
dec
mov
push
push
jecxz
cdq
(bad)
xchg
mov
mov
mov
gs
dec
scas
dec
jae
arpl
repnz
push
pop
inc
ja
test
fdivp
lods
arpl
xchg
pop
call
xchg
dec
imul
leave
xchg
xchg
gs
sub
aam
data16
mov
push
mov
mov
xchg
pop
jmp
jge
int3
jl
rcl
sub
and
and
sbb
shl
test
shl
dec
out
sub
push
and
pop
jle
pop
in
inc
xchg
xchg
push
idiv
outs
cmp
(bad)
inc
pop
inc
stc
es
out
outs
mov
sub
cmp
es
ror
xchg
fld
mov
movs
pop
sbb
push
retf
fistp
outs
jno
rcr
stos
mov
mov
jne
inc
cmps
mov
adc
jo
xchg
jle
int
xchg
pop
dec
retf
xchg
mov
int3
rol
inc
jae
add
jnp
jge
dec
xchg
ja
mov
call
sbb
(bad)
dec
dec
stos
add
iret
mov
sub
aaa
sahf
mov
and
es
in
push
jbe
jge
ror
cmp
(bad)
loope
add
inc
repz
inc
push
xchg
pop
and
in
fst
imul
imul
jl
inc
out
mov
addr16
rcr
sbb
mov
and
push
mov
cmp
jo
xchg
pop
in
addr16
js
sub
mov
clc
(bad)
pop
lds
add
lods
mov
int3
lea
out
push
ins
(bad)
push
and
sub
jno
sub
dec
sahf
pop
mov
xchg
popa
lods
scas
cmc
frstor
mov
stos
dec
arpl
mov
sub
jg
xchg
cmp
dec
in
movs
imul
pushf
fidiv
sub
xchg
arpl
fnstcw
cdq
jbe
out
loope
movs
fbld
fnsave
into
sbb
xchg
dec
cdq
fs
repz
das
mov
enter
jmp
rcr
scas
pop
nop
push
call
mov
fild
call
jne
or
fisttp
test
pop
repnz
mov
inc
iret
frstor
lods
push
mov
es
jae
pop
mov
aam
(bad)
pop
inc
fs
jecxz
mov
imul
cwde
(bad)
mov
in
rol
call
pop
adc
inc
icebp
fs
sbb
ret
jecxz
test
into
int3
daa
int3
cmp
mov
sahf
ins
mov
dec
cld
sub
mov
xchg
(bad)
jmp
in
fsubr
xor
sub
inc
xor
sub
daa
mov
xchg
cmp
cld
in
cmps
fdiv
mov
jmp
jbe
lahf
mov
(bad)
cmc
inc
xor
mov
or
push
out
stos
mov
fwait
cmp
xor
pop
inc
ret
(bad)
retf
mov
jne
pop
stc
cdq
mov
xlat
push
jnp
out
retf
movs
gs
in
xor
(bad)
pop
inc
std
loope
add
xchg
cmp
and
(bad)
add
test
call
sbb
not
fsubr
cs
sbb
mov
push
pop
cwde
rcr
adc
cs
int3
enter
push
fstp
inc
in
(bad)
hlt
out
das
pop
pop
push
imul
xor
inc
or
lods
lea
and
jb
sub
in
(bad)
jmp
movs
mov
adc
outs
mov
jae
xchg
popa
sbb
jo
(bad)
mov
ret
lea
push
fimul
jle
xchg
test
sar
mov
add
sbb
xor
mov
mov
push
push
pop
inc
cmp
mov
dec
call
xor
jnp
jmp
inc
mov
pop
nop
loop
mov
out
out
les
rcr
mov
jb
shl
mov
out
sbb
push
outs
push
mov
out
cs
mov
mov
mov
iret
(bad)
cmp
mov
repnz
paddsw
pop
(bad)
(bad)
(bad)
je
call
loop
add
pop
(bad)
jge
mov
pop
inc
mov
les
xchg
pop
iret
jnp
ins
adc
(bad)
jno
push
mov
(bad)
push
and
adc
call
test
pushf
retf
mov
test
pop
cs
jle
mov
jns
xchg
inc
and
xor
(bad)
lea
fs
loop
and
or
imul
mov
push
dec
xor
rep
sbb
sbb
or
cmp
dec
xchg
cmp
aad
fdivr
push
pusha
inc
fistp
push
adc
cmp
nop
stc
fwait
in
pop
dec
stc
xchg
add
or
sbb
loop
sbb
loope
in
mov
scas
sahf
inc
outs
push
arpl
aad
es
aad
add
mov
pop
adc
jp
shr
xor
(bad)
idiv
jb
jmp
pop
mov
cmps
scas
(bad)
sub
xor
call
je
stos
pop
neg
and
pop
(bad)
pop
call
imul
ins
call
xor
test
not
jmp
stos
retf
(bad)
jb
gs
and
(bad)
inc
test
pop
cmp
push
dec
int3
leave
ficomp
xchg
aaa
lahf
in
scas
push
sbb
movs
mov
loopne
inc
test
fcom
adc
xor
fimul
pop
dec
in
xchg
cmp
arpl
add
out
xchg
cwde
jb
sbb
push
cmps
aam
fnsave
ret
or
sbb
or
fnsetpm(287
int3
aas
push
rol
ins
js
outs
xchg
icebp
mov
jnp
cwde
movs
dec
stc
pushf
loopne
or
stc
outs
lea
push
icebp
mov
pop
leave
sub
jmp
(bad)
lods
jg
xchg
and
js
jl
sbb
pop
out
xchg
pushf
out
ins
adc
dec
push
shl
iret
push
dec
or
pop
pop
mov
and
fnsave
je
xchg
push
jmp
sar
mov
loop
test
repnz
(bad)
pop
xor
ss
pop
(bad)
sub
adc
(bad)
jno
shl
fwait
dec
test
out
aam
mov
mov
(bad)
and
lock
out
xchg
(bad)
loope
es
jae
stc
pusha
mov
jbe
pop
dec
stc
add
dec
jl
xchg
pushf
call
into
out
dec
pop
in
mov
ds
fiadd
ss
jmp
scas
cmps
mov
sub
sahf
es
mov
fdivp
inc
add
div
inc
aad
cmp
add
cmp
movs
cmp
push
inc
rcr
cmp
movs
push
psubsw
adc
jbe
movs
mov
ret
test
aas
cli
mov
leave
stos
inc
lahf
(bad)
adc
sbb
fcmovu
lea
pop
not
out
xchg
sub
lea
pushf
mov
cmps
bound
(bad)
cs
mov
mov
or
in
pushf
js
and
dec
jg
and
jle
sub
cs
and
cmc
xor
mov
fcom
dec
inc
es
mov
cld
mov
cdq
and
or
jns
xchg
stos
mov
xchg
pop
jmp
out
push
add
mov
aas
sbb
icebp
hlt
pushf
sub
fwait
sbb
popf
into
loopne
xchg
imul
mov
jns
mov
cmc
and
leave
stos
cmp
movs
cmp
or
nop
ror
fchs
lods
mov
xor
lea
loop
int
repz
xchg
xor
int
ja
je
jp
idiv
sub
jle
loope
cdq
sub
das
into
and
pop
cmovns
dec
outs
std
dec
inc
and
pusha
mov
aad
sbb
dec
and
call
sbb
jo
fsubr
and
cmp
in
fstp
mov
adc
mov
cmp
xor
aaa
ss
mov
jle
sahf
mov
mov
adc
mov
push
pop
dec
fsub
sbb
sub
xchg
aas
push
daa
ss
(bad)
cld
nop
cli
sti
push
sar
and
mov
mov
pop
in
jbe
cmc
sbb
and
sub
push
js
pop
sub
fldenv
out
push
cmp
fdivr
jae
inc
clc
push
mov
dec
movs
xchg
lea
outs
in
mov
es
push
xchg
imul
and
int
outs
imul
rcr
retf
scas
xchg
push
jl
cmc
and
push
push
jmp
inc
jmp
ret
cmp
pop
fisttp
lock
out
xchg
inc
ins
adc
out
mov
pop
jp
cmp
sub
jl
xchg
dec
xor
add
cs
lock
cdq
jno
movs
mov
mov
cmp
shl
sub
retf
mov
jecxz
inc
(bad)
shl
jl
loopne
(bad)
fsubr
hlt
xchg
or
push
fcomp
fdiv
es
xchg
sbb
add
(bad)
mov
push
inc
shr
cdq
cmps
pop
in
xor
std
aad
jnp
loope
bound
icebp
jl
idiv
sub
aaa
add
loopne
aas
sub
sbb
xchg
je
std
pop
and
sub
cdq
jb
ja
xchg
stc
fs
add
and
push
mov
push
popa
stos
pop
mov
ss
int
nop
xchg
mov
or
add
in
in
inc
pop
in
fisttp
mov
lods
jno
mov
mov
cmp
sub
jbe
call
stc
sbb
(bad)
sub
xor
jno
into
jnp
hlt
sbb
test
fldcw
inc
jecxz
and
outs
and
add
(bad)
ror
into
and
fcom
add
(bad)
cmps
loope
sbb
imul
inc
fsubr
test
js
dec
mov
mov
ret
lods
and
xor
nop
jmp
push
pop
mov
xchg
adc
(bad)
fst
mov
lods
addr16
int
iret
lds
inc
jnp
mov
iret
retf
into
adc
push
dec
pop
xchg
rol
ss
or
jmp
jge
or
(bad)
or
pslld
pop
sbb
pop
popa
lods
lea
pop
out
inc
jbe
adc
bound
clc
icebp
and
mov
xor
call
dec
cmps
(bad)
cmps
dec
cmp
(bad)
push
frstor
dec
ror
pop
mov
(bad)
std
sub
jb
cmps
push
xchg
stc
ins
and
(bad)
push
mov
es
mov
fild
fld
scas
mov
in
inc
sbb
push
jecxz
dec
mov
lods
xor
jmp
lea
(bad)
popf
xchg
xchg
loop
jmp
data16
and
rcr
pop
add
ins
pop
push
sbb
jmp
pop
pop
dec
inc
leave
retf
data16
cli
test
enter
repz
lods
stc
fst
popa
jecxz
and
or
fisttp
nop
lods
xchg
movhps
lods
push
in
fdivr
repz
(bad)
cmp
out
jno
jp
cmp
in
xlat
hlt
mov
jnp
call
pop
mov
pop
out
jp
mov
inc
into
fstp
xor
test
and
cmp
pop
ins
mov
imul
rcr
in
cmc
mov
pushf
cmp
jl
push
int
and
out
inc
retf
cmc
add
test
ja
mov
arpl
outs
jbe
mov
adc
in
test
xor
outs
or
stc
mov
in
arpl
ret
fs
mov
jne
push
in
mov
mov
mov
mov
add
xor
outs
xchg
sub
fnstsw
mov
pop
sbb
ficomp
mov
or
cmps
imul
xchg
push
rcl
pop
pop
repnz
cmp
sub
cmp
lods
ficomp
(bad)
lahf
jmp
push
push
mov
or
mov
mov
sbb
add
cmp
repnz
jbe
sbb
clc
lds
imul
sbb
add
stos
xchg
mov
(bad)
out
mov
jmp
leave
and
jo
jecxz
fstp
dec
xchg
retf
xchg
popf
push
in
ds
cmps
retf
popf
and
xchg
inc
lock
jle
pop
gs
xchg
retf
test
dec
jecxz
int3
jl
xor
sbb
loop
jl
call
out
mov
xor
or
jne
mov
push
jp
or
cmp
(bad)
cmps
retf
sub
mov
cld
data16
sub
sbb
push
in
dec
icebp
fsubr
fisttp
push
cmps
mov
lods
sbb
out
(bad)
rcl
mov
(bad)
cmps
imul
call
dec
xchg
xchg
mov
cmp
add
in
fldenv
xor
mov
jge
cmps
out
pop
xchg
js
xor
rol
push
(bad)
in
out
cmp
gs
mov
out
ins
je
loopne
sbb
fstp
pop
ins
sti
lea
jle
fnstcw
mov
sbb
dec
mov
mov
and
dec
call
scas
xchg
outs
lea
push
aas
pusha
imul
scas
push
(bad)
adc
sbb
jnp
mov
lods
fstp
adc
push
jnp
dec
xchg
stc
jne
gs
xchg
xchg
pop
enter
ss
enter
xchg
add
sar
pop
popf
(bad)
sbb
xchg
pop
adc
jnp
js
int3
int
sbb
(bad)
mov
pop
inc
push
bound
add
popa
and
into
jo
shr
inc
push
imul
add
loope
es
imul
call
into
scas
sub
lds
jo
ret
sti
stos
movs
xchg
int
mov
xchg
aad
lds
lea
cmps
adc
jns
adc
xor
ret
aas
pusha
mov
or
inc
call
ret
imul
in
mov
dec
add
xor
sbb
cmp
mov
(bad)
imul
outs
push
xchg
mov
cld
mov
pop
mov
out
out
pop
add
push
fst
push
jl
mov
mov
pushf
ret
repnz
add
test
inc
add
adc
loop
sahf
jecxz
add
shl
cdq
dec
lea
jg
add
lods
arpl
push
mov
mov
aam
xchg
adc
jecxz
push
je
push
add
in
jae
pop
sbb
push
dec
dec
lds
aas
dec
(bad)
leave
aas
push
mov
lock
mov
jl
xor
push
sbb
cmp
ror
mov
addr16
dec
js
das
ds
mov
out
xchg
ds
mov
dec
and
sbb
fcomp
push
(bad)
jne
adc
push
int3
xor
xor
int
lods
jnp
dec
push
fld
mov
shl
mov
sbb
lods
mov
data16
retf
arpl
push
push
dec
mov
or
out
xchg
add
inc
mov
sub
mov
add
mov
cdq
ins
or
test
add
sub
adc
add
scas
mov
push
mov
xor
xor
aaa
sub
inc
inc
add
je
xchg
or
jb
add
dec
adc
(bad)
mov
icebp
outs
daa
fcomip
mov
or
mov
and
shl
push
inc
push
mov
add
fiadd
jmp
leave
aaa
jl
mov
xlat
sub
(bad)
inc
scas
add
stos
pop
das
adc
push
retf
sub
fisttp
shr
ror
mov
outs
loope
std
jmp
jb
pop
loop
jl
into
fnstenv
add
sahf
stos
cdq
xchg
add
push
mov
and
pushf
adc
ins
sbb
push
sub
fcomi
fisub
test
push
mov
dec
inc
icebp
jne
add
add
inc
dec
inc
and
inc
and
add
adc
mov
cwde
push
call
cs
mov
dec
push
dec
add
mov
lea
pop
push
mov
jge
pop
lds
es
mov
int
ins
inc
fimul
sub
lahf
and
xchg
adc
mov
inc
mov
ret
push
xor
or
test
cmps
scas
ret
je
cld
test
in
and
fcomp
pop
pop
lock
ds
jmp
stos
or
ja
les
adc
imul
mov
test
test
movs
nop
test
push
sub
js
cmp
ficom
push
fistp
movs
adc
cmp
add
rcr
push
dec
add
sbb
add
sub
and
(bad)
xchg
pop
in
sti
mov
sbb
lea
inc
xor
ins
pop
inc
jle
dec
movs
(bad)
jge
pop
push
pop
adc
movs
leave
mov
push
push
ja
lods
dec
or
cmp
mov
mov
sbb
test
inc
sbb
rcr
mov
lds
xor
cmp
jle
jg
mov
js
mov
sbb
inc
test
and
ret
cmps
adc
jmp
out
add
dec
pop
lea
dec
js
adc
(bad)
mov
fst
dec
lea
pop
sti
movs
(bad)
xor
cmp
daa
xchg
sar
adc
mov
mov
inc
and
xlat
pusha
cdq
add
and
daa
fst
je
dec
mov
adc
scas
fs
inc
or
jb
ss
jb
push
jns
xchg
xchg
repnz
out
mov
mov
hlt
and
xchg
gs
sbb
mov
test
push
and
cmps
xchg
cmp
jecxz
add
std
or
jae
es
pop
in
arpl
inc
sub
mov
dec
xor
and
imul
mov
or
stos
test
das
sbb
mov
js
inc
call
sahf
arpl
dec
fcomp
mov
sbb
inc
push
sub
out
fst
cmp
inc
repz
in
and
(bad)
fcomp
sahf
nop
push
fistp
js
movs
(bad)
mov
mov
sub
pop
sahf
mov
into
icebp
cs
aad
repnz
neg
test
dec
inc
add
inc
jmp
ret
pop
mov
mov
jnp
add
aad
jmp
cmps
cmp
mov
inc
push
loop
neg
pop
xchg
push
jb
enter
cld
js
std
scas
jae
mov
mov
mov
jl
in
sbb
pop
dec
mov
addr16
fisttp
dec
cmp
lea
mov
retf
xchg
cs
nop
pop
xchg
add
push
mov
call
and
out
jl
and
imul
nop
cmps
sub
cmp
push
fisttp
call
or
pop
xchg
dec
into
adc
jns
cld
sub
ins
add
adc
arpl
xlat
pop
out
fst
mov
pop
jmp
addr16
mov
adc
xchg
mov
fs
ja
test
sub
stos
cmp
mov
add
movs
sbb
adc
jecxz
sub
push
arpl
loope
jmp
scas
or
sbb
cmp
imul
aaa
ficomp
mov
fwait
in
popf
add
cwde
push
call
sbb
add
jns
iret
sub
dec
out
fcmovnb
push
mov
mov
pop
jns
mov
mov
dec
rcr
pop
lds
mov
adc
mov
add
xchg
pop
push
jl
add
rcr
stc
sbb
(bad)
dec
push
fisttp
jno
jae
(bad)
sub
dec
add
arpl
dec
int
pusha
jmp
adc
jmp
push
mov
outs
mov
js
movs
ins
or
mov
movs
(bad)
rol
jb
mov
rcl
pop
test
xchg
mov
retf
jae
xlat
dec
xlat
jno
mov
xchg
(bad)
or
aaa
pop
stos
push
push
clc
push
in
dec
cmp
or
and
aad
add
fsubr
mov
and
or
not
mov
mov
cmp
jp
dec
cmps
mov
mov
mov
xchg
xor
and
push
xchg
fiadd
(bad)
retf
scas
arpl
cmc
push
out
sti
sub
xor
mov
fstp
cs
hlt
mov
inc
leave
repnz
(bad)
pop
dec
pop
pop
aad
ret
adc
inc
inc
dec
xchg
jp
push
fst
cmc
pop
push
ficomp
or
inc
(bad)
sbb
shr
inc
(bad)
pusha
stos
pop
add
jo
dec
add
add
push
ins
shl
sar
cmp
cmp
sub
pop
in
push
retf
jbe
push
retf
jle
popf
lea
fs
test
push
imul
inc
xchg
xchg
repnz
lds
in
retf
daa
(bad)
and
mov
retf
arpl
push
push
sbb
(bad)
xor
push
cs
adc
add
and
in
call
sub
jmp
pop
adc
pushf
out
cmp
ds
je
jecxz
and
loop
inc
mov
and
test
movs
shl
xchg
add
mov
(bad)
xchg
fsubr
out
jg
cmps
jecxz
aaa
sbb
mov
mov
imul
imul
cmps
ret
mov
jmp
cmp
and
nop
inc
and
int
and
ins
pop
pop
jecxz
add
cdq
in
inc
and
and
sbb
out
mov
(bad)
idiv
std
sbb
cmp
lods
mov
and
test
dec
mov
cmp
shl
sub
mov
inc
push
loop
mov
sahf
fimul
mov
dec
fsub
pop
push
dec
dec
frstor
jl
lods
adc
xor
jle
mov
idiv
aaa
jge
sti
cs
add
sbb
outs
popa
push
adc
dec
(bad)
xchg
jp
fild
pop
mov
(bad)
stos
ss
dec
fld
and
fdiv
repnz
mov
xchg
or
push
dec
sub
out
imul
jns
nop
sub
and
mov
lods
lock
mov
pop
jle
rcl
jl
mov
hlt
icebp
js
ja
jae
mov
rcr
push
js
sub
loope
pop
or
int3
fs
imul
je
inc
stos
rcr
in
lods
push
scas
mov
rol
retf
sbb
imul
mov
mov
inc
shl
mov
mov
mov
add
mov
or
test
es
mov
(bad)
bound
das
jno
sub
xchg
rol
jb
idiv
(bad)
aas
ss
mov
sub
test
movs
mov
je
fistp
dec
fsub
shr
sbb
(bad)
or
sbb
mov
clc
sub
lods
into
aad
and
dec
adc
xchg
and
imul
jae
cmp
pop
mov
repnz
aas
sub
dec
sbb
lods
rol
mov
fs
ja
rcr
ins
and
add
sti
(bad)
gs
rcr
(bad)
pop
xor
int3
fs
call
(bad)
pop
call
mov
inc
lods
push
jno
fld
ins
div
shl
mov
sbb
mov
das
in
sbb
aas
push
(bad)
mov
imul
jno
lahf
dec
pop
mov
lea
and
in
ss
je
jmp
pcmpeqd
ja
lock
inc
push
pop
or
iret
pop
mov
mov
sbb
or
aas
int
repnz
lock
mov
adc
bound
pop
shl
leave
xlat
and
mov
jno
dec
add
call
jmp
sbb
in
je
and
ins
ins
scas
hlt
sub
lahf
(bad)
(bad)
pusha
icebp
cs
cmp
or
jge
xchg
sbb
into
div
xor
dec
sub
test
sbb
out
das
xor
or
loop
or
frstor
popf
shl
lock
push
iret
sub
push
(bad)
jge
retf
jecxz
add
or
or
(bad)
and
push
aad
sahf
nop
jnp
in
mov
lods
sbb
cmp
in
sbb
mov
cmp
ds
sub
add
mov
jmp
xor
out
xor
(bad)
jmp
dec
sbb
(bad)
outs
inc
xchg
cmp
fs
adc
cs
or
lock
mov
imul
leave
xchg
ss
inc
arpl
jg
mov
movs
leave
stos
(bad)
ds
fld
dec
stc
outs
push
adc
ss
sbb
das
xor
sbb
loop
mov
sahf
(bad)
movs
enter
xchg
mov
call
daa
mov
test
jecxz
pop
hlt
mov
fcomp
jl
jl
fdiv
pushf
and
arpl
leave
cmc
pop
pushf
cwde
clc
fcmovnbe
xchg
movs
push
dec
outs
shl
jb
push
loop
sub
mov
fnstcw
ret
or
dec
out
out
mov
ja
dec
out
out
addr16
jge
pop
in
in
sub
mov
xchg
dec
stos
sbb
outs
outs
pop
cmp
jl
adc
cmps
inc
ins
sbb
cmc
xchg
mov
cmp
out
mov
jl
jg
out
mov
not
cmp
sbb
pop
es
sbb
xchg
repnz
jmp
int
push
data16
outs
cmps
sar
cli
xlat
jb
dec
call
loopne
out
into
jmp
and
sub
jb
mov
xor
dec
mov
mov
dec
out
sbb
lods
xor
pop
in
jle
xchg
(bad)
cbw
fbld
int3
add
add
mov
jecxz
xor
mov
pop
mov
sub
fwait
add
mov
inc
mov
or
add
lods
mov
lahf
cmps
xor
retf
das
jns
iret
mov
ja
call
movs
(bad)
rcl
push
int3
dec
ins
aas
cmc
outs
mov
xor
test
retf
pop
push
in
int
fisttp
call
call
xchg
mov
dec
std
(bad)
or
pop
pushf
ja
in
pushf
iret
push
aaa
sbb
and
lds
bound
loop
bnd
add
jbe
sub
ss
jnp
cmp
fadd
dec
popf
xchg
sub
arpl
add
sub
addr16
test
sbb
aas
mov
jnp
(bad)
inc
jo
(bad)
(bad)
stos
jmp
jb
or
retf
fs
in
fst
leave
ss
cmps
mov
sbb
pop
(bad)
jnp
cdq
pop
dec
sbb
nop
jns
rcr
mov
(bad)
mov
jns
fs
repnz
(bad)
les
out
pop
pop
fidivr
xor
push
xchg
push
pop
test
leave
push
arpl
outs
xchg
sbb
cmc
iret
aas
pop
mov
jmp
jl
and
mov
fdiv
inc
xchg
adc
xchg
and
in
cmc
pop
push
mov
daa
jno
shl
iret
jae
mov
mov
cmp
push
xchg
xor
div
mov
ins
push
(bad)
arpl
jne
xor
mov
aaa
int3
je
rcl
call
inc
cmp
push
nop
out
repz
dec
jne
imul
loopne
push
mov
(bad)
add
mov
lock
mov
mov
cmp
xchg
(bad)
cld
or
mov
adc
dec
repnz
into
int3
rcr
in
cmp
dec
fcomp
fsub
mov
call
aas
push
or
repnz
xchg
mov
scas
aas
or
into
aas
test
jo
and
loop
jno
imul
pop
and
stc
int3
xor
or
sbb
jns
xor
pop
inc
sub
mov
(bad)
stc
mov
movs
loopne
data16
fwait
das
xchg
(bad)
xchg
xchg
ja
psubw
into
shl
xor
mov
lods
cs
ja
pop
or
cmps
pop
xchg
js
dec
cdq
repnz
mov
imul
ror
inc
aas
sub
(bad)
loop
popf
(bad)
outs
scas
into
popf
int
dec
xor
xchg
xor
or
mov
in
popa
(bad)
in
xlat
cmp
xchg
mov
fcomp
xlat
push
xor
rcr
xchg
fwait
popf
sbb
sbb
out
les
fsubr
sbb
xor
mov
dec
imul
imul
lds
sub
cmp
out
jnp
fsubp
retf
mov
dec
ja
jnp
jp
push
xchg
mov
ficomp
jne
loopne
retf
cmp
popf
loopne
sbb
in
mov
mov
jns
or
sbb
cwde
pop
and
xor
(bad)
add
inc
mov
arpl
mov
xchg
(bad)
arpl
imul
push
xchg
aaa
leave
xchg
pop
(bad)
mov
cmps
jno
xchg
or
add
leave
xor
imul
push
cld
mov
lods
leave
call
outs
xchg
fisttp
pop
mov
cs
and
(bad)
mov
lds
rcr
pop
imul
out
pop
jp
mov
ret
out
out
push
jns
ror
xor
dec
pushf
test
mov
inc
dec
sub
retf
sbb
dec
out
mov
and
lds
sbb
arpl
jmp
pop
shl
jns
mov
arpl
mov
lods
ds
sub
cmc
sbb
retf
adc
lock
xor
jno
call
int3
xchg
jbe
sbb
jne
jo
jbe
call
jo
push
nop
inc
(bad)
mov
leave
retf
xchg
cmp
pop
(bad)
icebp
or
mov
imul
and
int3
daa
lods
fwait
pop
mov
dec
add
call
in
pushf
ss
or
ins
mov
(bad)
jo
outs
imul
arpl
or
in
outs
fs
ret
pop
shl
add
outs
xchg
jb
pop
stc
arpl
jle
add
cmp
and
fbstp
das
test
jge
xor
fild
mov
fsubr
and
push
scas
scas
adc
dec
adc
xchg
(bad)
mov
push
dec
int
rcr
cmp
cmp
mov
(bad)
or
sbb
sar
mov
fadd
aad
mov
cmps
cmp
dec
pop
enter
test
push
cld
fimul
sub
dec
xchg
xor
dec
fldenv
es
mov
je
in
xchg
xchg
xor
cmp
sub
dec
fcomp
add
sti
lods
adc
pusha
pop
ins
pop
xor
add
outs
xchg
in
dec
ds
out
fld
pop
cmp
push
das
aas
pop
xchg
es
cli
push
push
mov
cmp
gs
pop
sub
xchg
nop
jecxz
ins
arpl
lahf
setle
jmp
ins
popa
mov
mov
cmp
mov
sub
iret
inc
mov
cli
pop
movs
(bad)
jno
fdiv
adc
fnsave
xchg
pusha
push
in
xchg
xor
imul
ret
loop
add
sub
sub
pop
sbb
cld
mov
add
retf
sbb
xor
fldenv
jb
jb
xor
in
out
and
pop
es
add
rcr
sbb
stc
xor
xchg
ret
retf
rcl
pop
cmps
fs
jns
jbe
fisubr
sub
adc
pop
cmp
xchg
int3
adc
mov
pop
dec
mov
int
sbb
fsubr
fyl2x
out
outs
dec
fwait
cmp
call
leave
mov
(bad)
jl
sub
loop
sar
leave
mov
shr
pop
dec
lock
mov
cmc
imul
inc
push
and
mov
push
xor
cmps
jmp
out
lea
rcl
arpl
into
cmp
adc
add
inc
int
adc
pop
jg
arpl
pop
adc
int3
or
lods
in
inc
push
shl
sbb
call
into
xchg
adc
jae
xchg
rcl
shl
test
jge
imul
std
ds
retf
aam
aam
test
xchg
inc
repnz
loopne
retf
xchg
adc
fsubr
cli
jle
aaa
inc
call
inc
hlt
lock
sub
mov
ins
cmp
adc
sahf
inc
retf
idiv
lahf
out
mov
adc
stos
jo
clc
sub
addr16
mov
adc
hlt
add
pop
mov
push
inc
inc
(bad)
cmps
shl
ss
mov
xchg
lahf
jne
xor
or
and
pop
in
pop
inc
dec
xlat
jb
cmps
adc
outs
mov
inc
out
lahf
(bad)
gs
mov
arpl
push
pop
jmp
sbb
clc
sbb
lock
sbb
sbb
xor
jle
mov
aas
loop
cmp
fadd
cld
adc
push
pop
ja
imul
cmp
or
in
mov
popa
je
jl
shl
and
xor
add
and
mov
setle
neg
lods
mov
dec
cmp
xor
sub
mov
(bad)
retf
scas
add
push
inc
cmps
bound
mov
jl
outs
mov
iret
in
ins
out
adc
dec
loop
aaa
sbb
xchg
or
push
pop
fisub
inc
(bad)
cmps
xchg
sbb
ret
or
pop
jb
adc
pushf
mov
int
stc
paddd
pop
mov
loope
pop
or
dec
aaa
imul
mov
lods
mov
sbb
mov
add
mov
inc
mov
enter
repnz
dec
imul
cmp
imul
xlat
aad
mov
xlat
sbb
jo
imul
cwde
fst
mov
daa
arpl
aam
or
ret
add
push
stos
mov
sbb
pop
sbb
in
pop
aad
adc
or
cwde
ins
cmp
adc
arpl
fwait
imul
int
aad
push
jecxz
fwait
out
xlat
stos
add
daa
aad
xchg
into
data16
out
scas
pop
rol
int3
mov
inc
aaa
(bad)
(bad)
mov
mov
and
cmps
xor
push
rol
xchg
push
jp
xor
sbb
cmp
mov
int
fwait
cmps
int
out
mov
inc
push
mov
jne
loop
call
out
gs
sbb
(bad)
pop
cmp
lods
pop
mov
fs
jl
or
xchg
mov
jb
movs
outs
sub
test
mov
add
aad
hlt
in
dec
mov
xchg
in
movs
faddp
shl
into
les
idiv
jne
mov
fs
cmp
pshufw
jno
pop
lods
(bad)
(bad)
lahf
outs
push
cs
enter
les
pop
fisubr
or
mov
and
pop
jle
xchg
stc
pop
mov
mov
xchg
add
hlt
push
(bad)
stos
or
in
in
cwde
stc
outs
push
add
stc
dec
xchg
in
(bad)
out
cs
ja
pop
sub
movs
mov
loopne
sahf
xor
sub
iret
push
dec
lahf
sub
ins
push
mov
jmp
rol
test
or
fild
call
dec
mov
ss
and
adc
in
dec
and
pop
pop
std
xchg
in
or
aam
shl
into
(bad)
mov
mov
outs
pusha
cmp
fld
sub
out
sti
jo
or
xor
test
push
push
ss
and
mov
pop
sub
adc
test
adc
sbb
or
xchg
je
inc
xchg
clc
push
loopne
sub
or
sub
xchg
inc
(bad)
lock
push
shl
popf
sub
or
push
mov
inc
cmc
jl
jno
call
add
mov
rcl
mov
arpl
mov
(bad)
movs
movs
add
pop
dec
fcom
sub
lock
or
retf
push
xchg
lock
xor
sahf
pop
push
and
sub
dec
inc
aaa
dec
jmp
inc
and
xchg
mov
mov
in
inc
or
jl
test
adc
inc
sti
mov
or
mov
sbb
and
pop
xchg
adc
inc
inc
mov
hlt
inc
sub
je
jmp
push
mov
or
stc
jl
movs
add
and
xor
and
pusha
movs
fld
inc
adc
and
mov
jbe
xor
cmps
pop
sbb
or
mov
add
xor
ja
inc
sbb
or
push
loop
jns
mov
and
inc
lds
sbb
xchg
xchg
jnp
popa
fsubr
inc
inc
push
ss
lods
xchg
push
addr16
mov
push
fild
fcom
xlat
test
inc
pop
sbb
or
retf
outs
stos
push
loop
data16
ins
fst
adc
push
and
inc
test
retf
dec
mov
or
(bad)
loope
jne
push
lods
add
(bad)
push
push
adc
xchg
leave
mov
aam
sbb
sub
aaa
push
and
and
xor
dec
repz
loop
rol
jge
jne
add
xchg
cmp
and
inc
cmp
adc
es
adc
sub
mov
test
and
add
js
xor
fld
mov
ins
pushf
jae
scas
dec
pushf
outs
xor
adc
(bad)
popf
xor
or
jnp
mov
ror
out
fnstenv
sbb
inc
test
out
mov
inc
nop
sub
adc
xchg
rcl
adc
push
cmp
mov
push
call
sar
(bad)
in
sub
or
ins
inc
ins
push
mov
jmp
add
add
add
dec
push
out
test
push
push
lods
or
push
jmp
pusha
mov
test
(bad)
mov
mov
mov
push
mov
xchg
dec
clc
inc
inc
add
imul
aas
lock
dec
jbe
xor
xchg
xor
ja
pop
push
pop
jne
push
push
cmp
xor
frstor
mov
fwait
dec
call
loop
mov
mov
mov
xchg
fisub
loope
retf
(bad)
jmp
sbb
pop
out
xchg
ins
sbb
movs
out
icebp
pop
cmp
dec
in
outs
rcl
sti
scas
push
stos
lds
int
adc
mov
mov
idiv
cmp
sbb
mov
movs
sub
jnp
mov
xor
add
(bad)
xchg
int
add
fcomi
push
push
xor
adc
dec
fs
push
pop
mov
pop
pop
out
add
mov
push
inc
jno
loop
push
stos
sub
sub
shr
mov
movs
mov
cmp
fild
xchg
pop
dec
push
loopne
call
movs
or
fdivr
hlt
fmul
push
push
inc
mov
pop
dec
xchg
mov
sbb
jns
pop
inc
mov
arpl
popa
xchg
lea
pop
or
xor
fs
dec
scas
ss
bound
add
dec
sbb
xchg
push
pusha
dec
dec
call
pop
enter
jecxz
cld
mov
arpl
shl
push
outs
dec
inc
adc
jmp
(bad)
push
sbb
xchg
call
imul
stos
or
xor
jg
pusha
mov
cdq
sar
cdq
cs
sbb
imul
pop
movs
hlt
(bad)
push
cmp
add
jle
sbb
mov
cmp
(bad)
sti
stos
sub
daa
xchg
sub
add
(bad)
xor
mov
lock
mov
enter
in
pop
leave
pop
ror
fadd
movs
mov
add
ds
jle
jg
mov
(bad)
xchg
adc
mov
pushf
sub
mov
jl
jo
(bad)
push
iret
add
mov
scas
scas
push
xor
jns
loop
jp
fild
cmc
pop
ins
add
inc
out
jnp
jne
mov
and
arpl
loope
and
(bad)
out
retf
mov
cmp
retf
aad
div
jae
mov
jb
push
sbb
xchg
mov
cmc
mov
dec
movs
out
mov
jne
imul
aam
dec
mov
xor
shl
mov
add
in
cmps
mov
mov
inc
in
fucom
sbb
call
imul
outs
pop
mov
aam
sub
rcr
popf
sar
aad
dec
pop
ins
enter
aad
mov
mov
cdq
mov
jae
aad
xchg
cs
int3
adc
jb
add
lds
push
dec
push
jae
gs
fdiv
nop
xchg
in
je
fisub
jle
pop
xor
sar
mov
adc
(bad)
(bad)
cmps
in
fiadd
xlat
jle
or
xchg
movs
iret
stos
pop
mov
push
and
fs
jno
retf
jae
out
pop
loope
and
push
push
clc
retf
daa
mov
adc
xor
jp
or
dec
aad
push
cld
mov
xor
and
gs
ins
ins
cmp
push
and
movs
loop
adc
in
out
mov
fcom
push
movs
out
xor
outs
and
out
(bad)
mov
iret
fldenv
(bad)
retf
ss
inc
call
shl
je
mov
cmps
ret
lock
mov
add
icebp
inc
and
imul
sbb
mov
call
fcmovnb
jns
bound
ins
loopne
or
mov
fwait
ret
fimul
xchg
xor
pushf
fld
fnstenv
dec
outs
stc
loop
sahf
mov
fs
add
lds
das
(bad)
mov
fild
mov
je
lock
ins
mov
sbb
ds
es
lock
push
sar
mov
mov
or
cmps
mov
scas
sub
jns
das
sbb
(bad)
xor
mov
(bad)
xchg
sbb
fistp
loop
adc
cdq
(bad)
mov
aaa
in
cmp
adc
in
lods
aam
mov
sbb
sar
stos
cmp
xor
scas
mov
xor
jne
xchg
cmp
xor
aam
sub
adc
sti
and
xchg
mov
cmp
pop
in
mov
int
lods
jae
cmp
sbb
stos
pop
sbb
cli
addr16
dec
popa
sahf
cmp
mov
jnp
or
mov
movs
loop
les
call
mov
(bad)
push
mov
lods
pop
sti
jns
gs
cmp
in
dec
addr16
mov
aas
sti
js
add
fwait
and
jns
lock
mov
aaa
mov
pushf
add
test
sub
hlt
jecxz
and
cs
fs
lea
cmp
inc
or
add
mov
mov
cs
sub
shl
mov
mov
enter
dec
mov
(bad)
sbb
mov
pop
xchg
mov
inc
jle
icebp
frstor
push
les
loop
neg
push
in
sbb
dec
pop
xchg
das
and
sub
inc
nop
(bad)
lahf
out
mov
jae
cmc
cmp
sbb
rcr
out
jl
mov
fiadd
cmps
or
jp
ds
out
int3
inc
mov
fcmovbe
sub
out
scas
das
cmp
xchg
add
jae
push
sbb
jle
(bad)
fldenv
fidiv
xchg
inc
and
ret
jbe
inc
cmps
(bad)
xchg
out
jmp
fbld
int
and
jle
sub
or
(bad)
fistp
(bad)
shl
out
jo
push
mov
cld
dec
push
adc
ins
push
jo
imul
pop
addr16
and
sub
dec
adc
sbb
retf
push
retf
in
mov
pop
cwde
enter
bnd
pop
test
sbb
xor
enter
mov
pop
addr16
fstp
lock
lahf
sbb
jl
push
push
inc
sar
sub
bound
bnd
out
mov
mov
or
movs
jae
xchg
cli
js
stc
xor
and
mov
xor
lds
loopne
xor
jge
mov
sbb
fcmovnbe
mov
shl
je
ins
mov
cs
cdq
xchg
jecxz
xchg
iret
daa
jae
inc
pop
jmp
in
jb
mov
mov
or
cdq
(bad)
cs
dec
xchg
clc
ror
pop
mul
dec
fnstsw
push
popf
add
jno
inc
out
int
xchg
fwait
sub
into
call
mov
out
pop
das
xor
ss
cmp
fisub
pop
or
outs
sbb
retf
and
pop
sbb
out
(bad)
outs
dec
dec
loope
popf
pop
push
push
sub
(bad)
xor
xchg
leave
pop
jnp
(bad)
(bad)
and
or
inc
push
ja
jae
or
loop
xchg
js
ror
sbb
xor
stos
scas
je
xor
out
sub
(bad)
ins
pusha
xchg
or
stos
mov
adc
rol
fnstenv
and
sbb
jae
mov
(bad)
push
add
fs
lods
sbb
int3
pop
in
ret
mov
icebp
mov
test
pop
inc
frstor
bnd
adc
dec
xlat
cmp
cmp
lock
push
out
pop
(bad)
es
outs
imul
mov
retf
push
push
adc
enter
jae
sbb
cmpxchg
mov
es
add
mov
in
mov
scas
outs
cmp
pop
xor
cmps
push
push
pop
(bad)
(bad)
dec
inc
and
xchg
xor
jne
pop
sbb
sbb
fisubr
int
fist
mov
pop
mov
imul
jae
xchg
loopne
ss
pushf
sub
jecxz
pop
retf
dec
dec
in
stc
jne
cmp
adc
(bad)
into
(bad)
(bad)
hlt
lods
(bad)
lahf
xor
xor
int3
call
repz
pushf
mov
sbb
mov
imul
mov
addr16
dec
xor
iret
adc
inc
or
es
stos
jne
mov
jg
sbb
pop
(bad)
cld
mov
iret
and
test
fcomp
mov
test
inc
fsub
(bad)
mov
or
daa
mov
(bad)
mov
shl
es
xor
dec
lods
xor
out
lahf
mov
fs
(bad)
popf
out
xor
cli
jle
neg
adc
aaa
pop
xlat
pop
xchg
pop
and
int
mov
ret
in
jge
pop
xor
cwde
jo
cmp
imul
push
(bad)
or
ja
cmp
in
daa
mov
dec
ja
mov
push
inc
sbb
xor
in
dec
mov
xor
lahf
mov
arpl
popa
push
loop
push
pop
daa
xchg
mov
or
ins
sub
jp
test
fmul
ins
sahf
xchg
sbb
out
mov
out
imul
xchg
add
xor
cli
pop
sbb
push
jae
or
cdq
sbb
fmul
sti
sub
test
add
mov
ds
dec
or
or
push
adc
mov
xchg
mov
enter
and
(bad)
lds
jae
rcr
stc
bswap
xchg
cwde
in
jmp
lahf
mov
adc
ret
mov
mov
loopne
(bad)
mov
xchg
fldenv
mov
pop
inc
cmp
dec
dec
xchg
xor
leave
xchg
mov
loopne
dec
loop
inc
and
adc
sar
mov
in
mov
xchg
movs
add
fisubr
cmc
int
js
pop
outs
jl
(bad)
sub
inc
sbb
shr
pop
mov
int
es
sbb
sbb
es
int
cmp
nop
jmp
jmp
call
aam
repnz
add
and
cmp
inc
outs
pusha
push
pop
mov
add
push
fld
push
call
ret
fistp
std
inc
xor
enter
gs
xchg
push
cmps
add
jne
dec
ret
push
je
int3
outs
cmps
dec
xchg
mov
xchg
icebp
xchg
adc
pop
mov
mov
sub
(bad)
in
dec
jl
popf
mov
mov
dec
shl
xchg
add
fild
push
jbe
xchg
popa
(bad)
sbb
sub
ror
inc
enter
and
nop
mov
cmp
bts
mov
test
aaa
sbb
hlt
mov
(bad)
into
cmp
enter
or
push
or
out
rcl
mov
cdq
xchg
xchg
dec
jmp
ss
stos
call
out
xlat
pop
pop
ins
retf
sub
sub
enter
arpl
push
ss
(bad)
cmps
fwait
push
jno
add
aad
movs
mov
xor
sub
push
dec
cmps
jecxz
pusha
cs
stc
sbb
mov
inc
inc
jge
cmp
(bad)
aad
jne
shl
xor
repnz
in
mov
js
(bad)
mov
xchg
das
push
dec
pop
les
cmps
sub
xor
mov
fld
std
mov
mov
sub
pop
mov
out
ja
fild
les
(bad)
loop
mov
fistp
jne
mov
jecxz
popa
shl
fcmovne
(bad)
mov
jno
fwait
jns
inc
sbb
inc
xor
and
leave
or
test
xchg
and
dec
retf
ds
jle
or
bswap
enter
fld
dec
retf
mov
dec
sub
out
repnz
out
cmp
das
mov
js
stc
push
(bad)
push
ss
push
inc
mov
ficomp
jmp
sbb
jecxz
cmp
mov
jg
fcom
enter
and
sub
cmp
aam
jno
pop
loope
movs
popa
imul
leave
ret
enter
xor
sbb
and
ror
fs
xchg
jmp
retf
jns
fbld
addr16
and
sub
xchg
mov
inc
cmps
cmp
data16
fidivr
call
cli
inc
mov
fucomp
pop
dec
inc
dec
in
sahf
(bad)
cmc
rcl
pop
mov
fidivr
inc
aad
rol
int
fsub
inc
dec
push
mov
stc
aas
or
sbb
sub
jmp
hlt
cmp
hlt
fidivr
pop
mov
inc
(bad)
cli
cwde
fs
fiadd
xchg
test
push
xchg
aad
xchg
mov
and
out
jno
xchg
cmp
inc
pop
out
mov
fcomp
imul
cli
jle
(bad)
jl
outs
jae
mov
lods
sbb
fdiv
sbb
in
pop
mov
(bad)
mov
cmovbe
push
push
mov
mov
pop
cmp
sub
(bad)
push
dec
es
cmp
dec
sub
mov
mov
push
push
arpl
jb
pop
mov
xor
data16
mov
enter
fs
imul
mov
push
xchg
cld
std
inc
jno
outs
loopne
add
push
xchg
adc
and
imul
scas
pop
jb
sbb
enter
xchg
in
(bad)
mov
pop
xchg
retf
and
mov
or
and
stc
rcr
not
fnstsw
mov
js
arpl
push
adc
shl
loope
test
data16
jg
and
arpl
dec
sbb
gs
(bad)
movs
popf
nop
repnz
fwait
pop
stc
sbb
pop
mov
(bad)
sbb
adc
leave
mov
pop
mov
hlt
pop
call
repnz
sbb
cmp
mov
in
aaa
dec
(bad)
out
arpl
mov
and
in
scas
lock
cmp
cmps
scas
or
and
pop
pusha
cmp
ret
loop
push
jmp
lahf
sub
fdivr
or
sub
jns
mov
or
enter
jo
fst
leave
pop
dec
sub
jne
sbb
mov
jmp
stos
mov
sbb
cs
aad
pop
fsubr
ins
xor
cmp
cmc
movs
fimul
in
jg
les
jno
sahf
retf
dec
dec
std
inc
int3
shl
jae
add
rcl
aaa
aad
xchg
rol
leave
push
mov
add
sub
shl
xchg
ins
mov
leave
mov
push
in
jl
(bad)
inc
inc
std
sub
dec
test
test
ret
inc
add
nop
loope
mov
xchg
push
and
jbe
push
mov
mov
add
(bad)
ins
inc
jmp
push
fild
mov
(bad)
outs
dec
retf
faddp
add
cmp
leave
jmp
dec
das
cmp
xchg
mov
les
icebp
arpl
add
(bad)
jl
pop
jb
loopne
adc
inc
(bad)
retf
xchg
pop
push
pop
xchg
dec
pusha
add
out
rol
push
sub
inc
stos
or
mov
int3
mov
jp
adc
pop
mov
in
xor
data16
vpmadcsswd
iret
mov
movs
fstp
cmp
and
mov
pop
iret
mov
and
aas
mov
mov
cmp
sub
pop
fsub
xchg
outs
ss
ds
addr16
int3
push
mov
pop
fstp
xor
mov
pop
outs
test
mov
mov
dec
sub
test
dec
or
sbb
hlt
out
aad
rcl
ins
ins
xchg
pop
sbb
xchg
xor
mov
in
adc
mov
es
dec
sar
shr
push
push
sbb
mov
cwde
out
sbb
mov
adc
cld
(bad)
mov
imul
lock
into
jecxz
scas
mov
dec
sahf
push
cwde
shl
imul
push
xlat
arpl
retf
jmp
int
cmc
adc
push
xor
fstp
push
mov
xchg
leave
sub
loope
mov
enter
daa
shl
rcl
pop
xor
retf
into
lds
dec
inc
nop
dec
or
push
pop
mov
enter
xchg
push
sbb
fldenv
add
dec
scas
cs
cmps
xchg
cmp
mov
or
xchg
add
stc
pmaddwd
loop
cmp
stos
pop
shl
mov
ins
xchg
je
retw
cmc
and
aas
fnsave
aaa
adc
sbb
sub
daa
frstor
adc
and
mov
test
ins
das
jo
test
inc
dec
ins
jno
sub
push
fcom
inc
xchg
mov
sbb
add
dec
jne
mov
ins
push
out
xor
icebp
mov
sbb
xor
mov
es
add
es
adc
add
add
mov
jo
push
mov
mov
mov
cmp
or
(bad)
mov
mov
push
dec
sub
fs
dec
or
ds
adc
xchg
nop
test
adc
inc
adc
add
test
xchg
inc
or
test
jge
cmps
pop
shl
adc
pop
adc
and
sub
jp
cmp
cmp
xchg
sahf
retf
or
loopne
dec
cmp
mov
movs
test
dec
sar
mov
lea
push
fld
dec
mov
mov
sub
or
adc
or
rol
xchg
call
push
add
and
dec
mov
mov
mov
fisttp
pop
add
inc
cmp
mov
push
mov
adc
and
mov
cli
lods
add
jnp
imul
and
stos
sub
xchg
cwde
fcomp
call
inc
adc
pusha
daa
inc
and
aad
hlt
dec
or
sbb
mov
adc
sub
mov
out
mov
out
call
cs
mov
cmp
je
sti
test
sub
inc
clc
inc
sub
adc
push
inc
cmp
sbb
xor
push
xchg
dec
and
and
inc
rcl
adc
and
xor
cmp
(bad)
ins
cmp
xor
mov
pop
mov
mov
inc
inc
cmps
leave
lea
mov
xchg
adc
test
jecxz
push
movs
push
fmul
pushf
add
cmps
call
mov
sbb
fst
clc
inc
sub
test
loop
mov
test
inc
adc
adc
ss
push
mov
mov
ss
jbe
mov
sbb
repz
xchg
pop
and
xchg
into
push
push
retf
ins
xor
and
pop
add
adc
sbb
inc
push
outs
xlat
or
add
mov
aam
aas
mov
movs
ja
in
ss
mov
aam
mov
pop
imul
ficomp
or
push
dec
and
adc
sar
vmwrite
push
daa
mov
or
xchg
cld
sub
mov
jecxz
and
pop
fsub
mov
test
adc
sbb
pop
adc
pop
inc
addr16
or
add
push
mov
mov
xchg
cmps
mov
push
retf
stos
movs
fwait
lea
(bad)
iret
cmps
enter
lds
add
ds
mov
jne
icebp
push
inc
rcr
ror
add
popf
adc
int
imul
jmp
fiadd
std
and
pop
es
enter
cmp
jne
xchg
push
lock
mov
stos
in
jg
popf
sub
or
inc
adc
and
sub
push
xchg
mov
sbb
daa
neg
ret
and
dec
bound
(bad)
inc
shl
xchg
repnz
and
in
out
rol
out
test
mov
and
nop
sbb
sbb
push
mov
jp
cmp
dec
clc
fbstp
leave
out
imul
xor
sub
ins
dec
jns
int
in
mov
lea
dec
xchg
(bad)
sti
lods
inc
xchg
pop
inc
mov
pop
aam
movs
stos
dec
nop
fadd
dec
and
xchg
mov
imul
pushf
retf
or
cdq
add
xchg
rcl
inc
xor
test
ret
and
jne
cwde
sti
scas
jnp
std
ret
imul
int3
pop
repnz
iret
sub
cmp
popf
(bad)
pop
ds
lea
test
inc
add
hlt
mov
pop
aaa
(bad)
push
loope
jo
scas
fdiv
mov
movs
inc
in
iret
retf
js
jecxz
jnp
cmps
jne
call
cdq
stos
jmp
retf
push
test
test
mov
push
lods
ret
sub
movs
mov
into
and
cmp
das
fld
loopne
dec
sar
stos
imul
cmps
sbb
mov
(bad)
ins
xchg
repnz
push
mov
jae
daa
imul
fwait
sar
stc
addr16
pop
sbb
je
fiadd
and
mov
xchg
nop
xchg
in
adc
sbb
test
add
xchg
jmp
test
xchg
stc
popa
and
test
popf
inc
rol
xchg
pushf
jno
hlt
out
inc
sub
mov
(bad)
fistp
dec
dec
push
adc
pop
cdq
sbb
add
mov
jb
lds
sbb
pop
retf
mov
jnp
pop
cmp
inc
mov
add
cmp
xor
jge
cmc
pop
dec
jecxz
inc
lock
popa
leave
ds
fisub
xor
or
sub
inc
mov
stos
dec
add
repnz
loope
or
xchg
enter
ss
pop
ficomp
cmp
js
imul
mov
push
mov
inc
shl
sub
mov
adc
int3
fs
repz
inc
aad
xor
mov
popa
ficomp
and
pop
das
pop
rcl
dec
dec
xchg
bound
xchg
xchg
fs
cmp
pop
call
pop
enter
test
lods
xchg
in
xchg
dec
sti
adc
aad
sbb
add
push
adc
(bad)
(bad)
jae
fldenv
dec
fs
lahf
mov
jecxz
call
push
mov
jne
pop
dec
das
pop
das
push
dec
shl
cmps
xor
int
jnp
sub
int
ds
sbb
adc
add
loopne
repz
mov
int3
ror
mov
and
adc
dec
adc
js
enter
outs
das
xor
pop
mov
outs
out
push
mov
lods
xchg
jmp
xchg
xchg
(bad)
fnstenv
inc
es
push
adc
rol
pop
xor
in
cwde
lds
je
xor
add
gs
aam
cdq
test
retf
cmps
mov
dec
cld
mov
xor
mov
jle
jno
push
mov
xchg
mov
div
arpl
sbb
hlt
pop
fsubr
jns
push
pop
sar
inc
push
ds
retf
jp
xor
jg
inc
jns
sub
fmul
cwde
add
jnp
fisttp
mov
retf
mov
stos
sbb
mov
mov
push
test
enter
cmp
xlat
(bad)
test
mov
xchg
cmc
jmp
sbb
out
mov
arpl
loope
loop
sbb
das
adc
jo
or
and
xchg
loop
cs
leave
(bad)
mul
xor
test
movs
sti
stos
loop
pop
sbb
jbe
add
sub
loopne
cmp
adc
test
sub
cdq
clc
ja
push
fs
xor
jo
mov
cs
pusha
jge
jns
fwait
inc
push
sub
cmp
repnz
lods
arpl
xchg
xchg
adc
mov
push
ret
sub
not
sub
jae
ss
mov
movs
cmp
adc
sbb
sbb
xchg
inc
in
dec
mov
outs
mov
out
xor
xchg
shr
imul
out
and
adc
cmps
clc
jl
out
sub
imul
xlat
dec
xchg
push
sbb
ss
in
in
mov
pop
call
aaa
ins
hlt
push
imul
in
jae
and
fs
fisttp
pop
sub
nop
std
cmp
movs
ins
xchg
call
xchg
pop
dec
shl
(bad)
and
and
xchg
mov
or
scas
push
pop
push
sahf
pop
js
shl
movs
push
push
pop
push
sub
fnstsw
call
int3
pop
icebp
inc
push
ds
jmp
sbb
cmps
icebp
popf
ja
dec
xor
or
cmp
pop
cmp
movs
cmps
popa
loop
stc
mov
dec
(bad)
xor
mul
retf
mov
add
inc
xor
scas
ja
arpl
push
adc
and
cmp
(bad)
xchg
popf
sub
and
je
ficomp
lock
sub
inc
mov
retf
adc
push
repnz
aas
sub
int
dec
mov
clc
arpl
xchg
scas
fsubr
popa
shl
or
add
cmp
xchg
bound
sahf
inc
push
dec
scas
jae
in
adc
js
or
mov
sbb
pop
mov
mov
mov
xchg
fstp
inc
lahf
dec
mov
movaps
xchg
das
fwait
pop
punpckhbw
aaa
sar
bound
or
ret
pop
push
cmps
xchg
push
pop
jno
sub
jbe
call
fdivp
out
push
and
pop
dec
jno
xchg
iret
dec
imul
push
rol
mov
jno
rcl
(bad)
pop
not
out
adc
hlt
jae
daa
sub
js
call
fcomp
into
icebp
data16
movs
xchg
ror
lds
or
inc
ins
ds
xor
xlat
mul
in
scas
call
xor
cmp
pop
jg
loopne
jg
sub
pop
xor
and
(bad)
inc
movs
sbb
popa
repz
shl
xchg
dec
push
or
stos
cmp
(bad)
fcomip
mov
jns
cmp
sbb
fldenv
sbb
call
mov
rcr
push
and
pop
pop
mov
(bad)
push
fs
pop
fldcw
ret
repnz
repnz
rcl
or
pop
lahf
pop
mov
inc
mov
aas
ss
and
ret
fsubr
repnz
ins
push
mov
ss
sbb
mov
cmp
pop
cmp
mov
cmp
fs
jecxz
push
sbb
lods
scas
cmp
enter
mov
push
sub
or
sub
(bad)
stos
push
or
aam
xchg
pop
psubq
jmp
mov
xchg
(bad)
xchg
push
jae
enter
xchg
lods
arpl
sahf
xor
cs
call
dec
dec
outs
cmp
rcl
or
fstp
xor
mov
mov
outs
mov
jae
push
jge
push
sti
sub
add
xor
cmp
pusha
cmp
test
shl
leave
int3
(bad)
xchg
daa
adc
inc
movs
pop
and
cmp
out
jmp
cdq
sbb
adc
add
add
xlat
fwait
data16
enter
mov
mov
sbb
mov
test
adc
adc
push
(bad)
lods
jae
add
leave
pop
(bad)
iret
ja
fistp
pop
mul
in
and
dec
mov
(bad)
xorps
cdq
das
shl
mov
pusha
inc
inc
clc
pop
jl
ja
mov
jbe
sbb
xchg
mov
aas
and
jns
and
mov
mov
push
sub
stos
shl
rcr
sbb
xchg
int3
fs
fs
test
mov
mov
xchg
ss
and
sysexit
in
xchg
aam
cmp
(bad)
and
push
inc
std
push
dec
mov
sbb
pop
arpl
popa
add
not
push
(bad)
bound
cmp
fidiv
and
push
jmp
push
pusha
arpl
(bad)
loop
or
lods
jns
dec
mov
inc
test
loopne
push
pop
jg
jecxz
loope
cld
xchg
jecxz
inc
in
out
xchg
mov
mov
jnp
cwde
jecxz
mov
adc
push
xor
pop
jl
stc
sbb
outs
arpl
inc
fistp
adc
xchg
mov
icebp
sbb
mov
enter
cmps
fldcw
xlat
(bad)
mov
jns
push
xchg
jmp
loope
jae
retf
hlt
push
mov
push
dec
inc
pop
cmp
fdiv
call
repz
and
xchg
rol
test
mov
mov
mov
je
xor
xor
sahf
ds
fcomi
pop
sbb
jns
lock
les
xchg
pop
xchg
imul
or
pop
mov
fsqrt
pop
js
imul
(bad)
test
in
sahf
sbb
fld
ins
outs
call
mov
mov
sub
pop
in
dec
sbb
loope
ja
loope
aam
sub
loope
ss
jmp
popa
pusha
sbb
popa
or
sbb
dec
imul
scas
outs
push
jp
call
aam
outs
dec
arpl
ret
mov
loopne
mov
loop
jnp
mov
xor
stos
cmp
xchg
ja
(bad)
ficomp
add
pop
inc
cmps
retf
jbe
jno
sub
adc
arpl
mov
adc
pop
jmp
shl
dec
mov
sahf
cmp
mov
sbb
pop
mov
jne
aam
xor
imul
test
add
outs
fldcw
dec
loop
dec
add
cmp
add
cmc
pcmpeqb
cmp
(bad)
jnp
mov
std
dec
dec
fnstsw
fadd
xor
in
inc
xchg
xchg
(bad)
sbb
push
xor
cmp
mov
popa
cs
retf
ret
retf
mov
jp
inc
outs
lds
inc
xor
test
xchg
je
mov
imul
xchg
in
mov
mov
add
cld
lods
mov
and
jl
mov
jle
test
xor
push
jge
rcl
xor
adc
jle
cmps
cwde
jno
into
pop
sahf
bound
(bad)
mov
test
aaa
xchg
xchg
dec
cmp
jg
mov
pop
sub
cli
xchg
and
das
out
lods
jle
aam
les
mov
cmp
mov
(bad)
push
fldcw
mov
ss
ins
mov
rol
ret
mov
stc
pop
push
push
mov
push
sub
lea
mov
not
pop
call
pushf
pop
cmp
aas
mov
ins
or
sbb
ret
les
outs
inc
dec
(bad)
jno
or
mov
cmp
sub
lods
add
jge
repnz
adc
out
daa
xchg
dec
inc
sub
jmp
xor
dec
jl
mov
fs
pop
data16
std
xchg
(bad)
xchg
pop
jmp
and
repnz
lahf
cmc
dec
repnz
cs
push
xor
or
imul
loope
mov
mov
jmp
repz
cmps
cmp
gs
jg
mov
and
jnp
mov
cli
sbb
jmp
iret
push
inc
out
dec
hlt
jmp
mov
gs
push
ror
lea
daa
ds
dec
loop
call
cmp
popa
cmp
jb
pusha
push
cmc
and
xchg
cmp
sub
scas
jo
mov
push
adc
pop
jecxz
mov
inc
fiadd
mov
push
push
jns
jecxz
ins
outs
cmp
inc
fild
push
inc
jo
je
inc
data16
je
mov
mov
in
test
ffreep
mov
jl
cli
or
jb
mov
mov
stc
outs
outs
aas
out
push
adc
lds
jmp
cmp
mov
(bad)
loopne
movs
jbe
mov
pusha
add
jnp
popa
outs
sahf
jg
(bad)
sbb
cmp
mov
inc
push
push
jmp
cmp
rcl
or
jno
fcomp
jecxz
mov
(bad)
lahf
xchg
fcmovnbe
cmps
ins
cmp
das
nop
fldenv
leave
sbb
hlt
xchg
shr
jae
jo
gs
loope
rol
fwait
xor
xchg
mov
cmc
es
xchg
ss
pop
jo
(bad)
push
mov
ins
ins
mov
xchg
cwde
mov
cmp
stos
aaa
iret
in
stc
jl
ja
pop
adc
mov
fisubr
mov
repnz
mov
pop
sub
data16
inc
cmp
jno
mov
into
jg
paddq
jmp
in
mov
push
inc
sub
imul
popf
fisubr
adc
leave
movs
jno
jne
jnp
(bad)
xchg
sbb
push
out
enter
add
dec
fst
sbb
mov
lods
imul
gs
rcr
xor
lods
(bad)
in
jae
(bad)
bnd
cmp
out
punpcklbw
mul
dec
sub
fisttp
fstp
sub
xchg
mov
xchg
test
xor
sbb
sub
rcl
inc
jmp
pusha
fdivr
jmp
add
and
sub
mov
cmp
xchg
sub
dec
loop
sub
push
or
mov
xchg
in
mov
sahf
stos
jbe
jne
push
mov
popf
push
add
into
and
jecxz
push
cmp
mov
ret
std
push
js
lea
neg
sub
ret
push
pop
fldcw
arpl
sub
sbb
call
bound
lea
or
imul
sbb
hlt
pop
pop
cmp
jae
mov
fucomip
mov
mov
push
mov
push
mov
inc
cmp
loope
mov
daa
or
xchg
and
call
adc
cld
imul
xor
add
jns
adc
lds
repnz
inc
scas
push
push
mov
pop
popf
mov
imul
mov
in
mov
popa
in
xor
cli
(bad)
dec
pop
cmps
repnz
movs
imul
xlat
mov
cmp
je
mov
pop
cs
(bad)
dec
sbb
and
sub
or
mov
arpl
mov
imul
mov
fmul
icebp
and
mov
mov
das
xor
test
or
nop
mov
pop
push
dec
adc
sbb
outs
mov
and
test
xlat
cdq
cmp
mov
xor
inc
test
mov
dec
mov
je
push
cld
stos
fwait
cmp
and
dec
pop
push
out
jle
xchg
mov
sbb
movs
retf
cmp
lea
daa
nop
rcr
sahf
stos
add
push
in
xchg
in
test
pop
mov
jle
mov
and
xor
outs
data16
ins
and
mov
xor
loope
mov
push
stos
cld
xchg
out
mov
dec
xchg
ror
loop
shl
inc
push
xchg
imul
or
or
repnz
and
imul
mov
test
add
mov
inc
(bad)
fnsave
push
mov
js
add
test
sub
test
pop
push
pop
add
and
sbb
and
adc
rcl
ret
add
add
dec
sti
push
add
or
jge
or
nop
daa
mov
ins
lds
out
movs
inc
add
daa
ret
dec
rol
push
pushf
or
mov
xchg
and
test
hlt
rol
add
adc
or
and
dec
dec
clc
inc
mov
pop
je
sub
adc
or
mov
(bad)
rol
faddp
cmc
jo
add
and
repnz
int
pusha
daa
xchg
cmp
arpl
xor
aas
test
jnp
lods
jne
fwait
mul
add
outs
je
mov
outs
mov
ins
(bad)
rcl
inc
xchg
mov
addr16
in
add
cmps
nop
cmp
push
inc
fwait
sub
pusha
jl
rcl
jle
lods
mov
xchg
in
pop
in
imul
push
and
pop
or
fs
push
or
dec
pushf
inc
inc
aas
je
mov
rcl
not
mov
movq
or
xchg
dec
jae
pusha
or
cmp
lahf
xor
aam
cmp
jl
lock
enter
push
hlt
mov
out
adc
das
sti
cs
cmps
aas
fwait
xchg
cli
jno
mov
leave
add
int
cmp
inc
shl
push
cld
mov
inc
std
xchg
dec
std
nop
add
mov
mov
add
call
out
xor
push
pop
aas
sub
inc
xor
or
aad
ss
cmc
inc
cmp
enter
inc
stos
fisttp
inc
add
and
fsubrp
xor
push
ret
imul
adc
xchg
adc
or
lahf
adc
cmps
adc
cmp
xchg
outs
arpl
lds
xlat
cwde
enter
adc
sbb
loopne
xchg
sub
and
loope
not
out
test
test
pop
mov
pcmpeqw
test
and
inc
ss
adc
jo
iret
push
xor
dec
in
ins
jl
push
std
xchg
add
add
mov
jbe
clc
inc
sbb
ret
dec
movs
arpl
xlat
xor
js
xchg
adc
add
stc
dec
xchg
mov
movs
mov
mov
aas
int3
jnp
mov
jecxz
pop
clc
int
push
cmp
mov
mov
add
int3
sub
mov
xlat
aad
sar
inc
and
icebp
push
movs
dec
ins
in
inc
and
dec
jge
movs
(bad)
retf
jns
out
mov
daa
inc
pop
pop
shl
inc
(bad)
fs
inc
(bad)
sbb
xor
jo
loope
or
sti
push
es
loop
jnp
xlat
mov
repnz
loope
xchg
test
test
int3
add
pop
dec
(bad)
mov
inc
adc
xchg
mov
xchg
jmp
loop
aad
xchg
aaa
xor
add
pop
mov
outs
cmp
inc
out
inc
js
fldcw
idiv
repnz
and
cwde
clc
pop
cli
fnstsw
retf
out
aaa
inc
clc
test
mov
mov
inc
fs
inc
mov
ror
jecxz
aaa
dec
outs
jae
in
mov
pop
sbb
push
and
xlat
aas
hlt
dec
xchg
aam
cmp
push
outs
inc
jae
(bad)
push
popf
or
xor
cmp
pcmpgtb
or
cmp
or
jl
xor
pop
mov
push
cmps
aaa
pop
hlt
xor
hlt
mov
das
loop
pop
mov
mul
(bad)
xor
mov
test
loopne
rol
mov
jae
inc
(bad)
jmp
dec
lea
mov
dec
shl
fcmovbe
inc
xor
jns
pop
stos
and
loope
unpcklps
in
push
aaa
jl
nop
adc
vmovapd
or
inc
push
out
mov
dec
(bad)
out
lods
pcmpeqw
xchg
xor
add
xlat
test
push
es
and
cmp
stos
inc
jne
outs
xchg
jne
sub
xchg
xor
or
pop
cmp
push
cmp
loopne
jg
add
mov
jle
call
pop
sub
cmp
jl
add
imul
jle
cmps
js
mov
test
shr
leave
jmp
add
mov
or
ja
mov
fdivr
adc
push
lock
mov
outs
popa
call
jo
(bad)
adc
(bad)
test
or
pushf
rol
fcomp
mov
and
xchg
daa
mov
in
pop
xlat
pop
mov
jecxz
out
xchg
xchg
cdq
les
mov
div
aad
fcomp
push
clc
jmp
pushf
fild
mov
sbb
in
pop
shl
push
sti
mov
push
test
pop
sahf
jns
jp
sbb
int3
shl
jbe
dec
cdq
(bad)
popf
or
push
mov
mov
in
(bad)
mov
out
enter
(bad)
lahf
fcomp
jno
inc
inc
mov
adc
(bad)
leave
pop
das
repz
add
add
in
cmp
adc
int3
mov
or
movs
sahf
es
inc
test
mov
loope
mov
jae
ret
mov
lods
cmp
retf
xchg
push
cli
adc
(bad)
fbld
mov
fdiv
jmp
ret
loop
js
fs
mov
push
lea
pop
daa
xor
fucom
mov
into
sbb
pop
mov
cld
inc
test
push
cwde
enter
mov
xor
cli
lahf
xor
xlat
rcl
ja
repz
xchg
es
jge
arpl
xchg
cmp
imul
or
int3
test
xchg
out
push
dec
mov
lock
jg
sbb
push
or
and
mov
adc
mov
pop
and
mov
pop
cmp
xchg
(bad)
inc
jmp
add
inc
arpl
mov
rcl
ud2
cmp
pop
jns
dec
adc
dec
ret
inc
adc
data16
into
arpl
mov
int
and
cmp
xchg
mov
sub
and
cdq
fst
popa
and
xlat
fnsave
push
cs
stos
jns
jb
js
out
push
inc
imul
push
xchg
lods
xchg
pusha
ffree
scas
cmp
dec
add
adc
xchg
les
daa
loope
icebp
adc
js
ss
idiv
pop
pop
or
mov
push
cmp
or
(bad)
jne
adc
sbb
ficomp
adc
outs
mov
std
mov
mov
push
sbb
movs
js
sahf
imul
rcr
adc
cdq
shl
mov
jb
call
fsub
retf
push
ficomp
jl
or
sbb
adc
lahf
inc
inc
xchg
push
js
inc
mov
adc
icebp
rcr
out
mov
inc
sub
push
mov
mov
and
add
xchg
pushf
(bad)
mov
fs
addr16
lock
test
cmps
movs
iret
out
gs
xchg
mul
mov
adc
loope
shl
imul
mov
or
popf
mov
xor
pop
leave
push
aam
(bad)
in
lea
cmps
mov
xlat
cmp
inc
cmps
jo
hlt
adc
imul
loop
shr
dec
cmps
call
ret
sub
cli
mov
add
jecxz
push
sub
aas
xchg
enter
(bad)
movs
stc
dec
gs
(bad)
mov
xchg
fimul
mov
mov
jne
mov
xchg
sti
cs
cmp
xchg
xchg
(bad)
(bad)
xlat
dec
dec
ret
pop
mov
ja
into
jmp
jmp
test
mov
pop
xchg
inc
in
xor
fs
push
in
ficomp
cli
cdq
mov
pop
ss
mov
mov
inc
out
dec
ja
cmp
out
lock
enter
js
cli
cmps
in
test
loop
cmp
inc
int3
(bad)
dec
arpl
mov
mov
icebp
dec
lods
cmps
jmp
lods
adc
add
dec
jne
inc
add
inc
push
mov
outs
fisubr
mov
in
retf
sub
sub
jnp
jle
jmp
pop
jnp
mov
icebp
or
mov
sbb
mov
xchg
inc
cmp
int
push
xchg
mov
pop
jp
fmul
sahf
jge
sbb
xchg
repnz
mov
add
fdiv
sti
ja
aad
scas
aas
hlt
sar
mov
xor
(bad)
test
movs
push
aas
jne
jle
lea
lea
fs
out
xchg
sar
(bad)
gs
ss
or
sbb
cld
cmp
outs
arpl
arpl
clc
out
push
jmp
adc
mov
hlt
ror
cmp
cs
dec
inc
pop
fdiv
lods
dec
ret
inc
push
dec
vphadduwq
push
leave
jbe
mov
das
adc
fiadd
cmc
sbb
ins
stc
and
ret
hlt
mov
movs
hlt
pushf
fisttp
adc
cs
int3
cld
rcr
(bad)
outs
dec
cmp
fwait
inc
jno
xor
(bad)
and
out
adc
aaa
xchg
lods
ret
lahf
mov
fwait
mov
cmp
or
scas
dec
icebp
sbb
repz
repnz
xchg
sbb
mov
mov
jnp
lock
push
hlt
out
jg
xor
inc
mov
shl
mov
hlt
pop
mov
ss
out
outs
sub
mov
pop
pop
pop
sbb
xchg
mov
add
sub
in
cmp
sahf
jbe
out
jae
les
addr16
outs
sbb
cmp
stc
and
es
mov
pusha
jns
sub
out
jmp
and
pusha
in
add
out
mov
scas
push
loope
nop
popa
jmp
fbstp
stos
cdq
sub
inc
mov
jne
pop
fnstsw
ficom
dec
in
stc
adc
es
fld
repnz
sbb
arpl
repnz
xchg
push
inc
sub
fbld
jae
pop
xor
mov
enter
xchg
cs
fld
cs
fldlg2
adc
and
mov
popa
inc
cli
mov
mov
std
in
lock
mov
leave
out
sub
cs
mov
loope
jle
ds
scas
jmp
popf
and
int3
je
xor
gs
shl
out
fdiv
dec
add
fwait
and
rcr
sar
(bad)
fisubr
icebp
stc
js
adc
enter
pop
scas
aas
cmps
out
add
sbb
out
imul
daa
repz
xchg
jo
rcr
repnz
pop
jno
aaa
inc
jmp
jb
jno
stc
sub
pusha
imul
rol
ret
cmp
mov
mov
aas
lods
jl
(bad)
pop
jmp
xlat
cmps
loope
jbe
xchg
mov
inc
fnstcw
cli
lods
fist
fdivrp
mov
aaa
and
mov
dec
bound
jge
daa
dec
jecxz
mov
mul
jae
int3
xchg
mov
shl
pop
xor
repnz
mov
mov
xor
mov
clc
inc
fadd
and
and
repz
jbe
sub
jmp
jns
sub
inc
sbb
mov
out
jle
cmps
out
sub
mov
pop
jae
loop
pop
fsubr
dec
pop
rcr
jmp
push
xor
repnz
in
lock
cld
stos
in
cli
popw
in
iret
push
pop
inc
sub
sbb
shl
aad
jnp
sbb
sbb
test
loop
shl
push
ret
ret
pusha
sahf
jmp
cmp
scas
arpl
jae
jecxz
sub
inc
and
movs
cdq
loopne
test
jne
arpl
mov
inc
lahf
sahf
jle
je
pop
(bad)
xchg
outs
outs
(bad)
mul
mov
arpl
test
cs
fstp
pop
clc
div
jnp
out
pop
dec
mov
shl
call
rcl
xlat
bound
inc
push
inc
xchg
mov
pop
ror
dec
cmp
loop
pop
or
xchg
movs
xchg
ret
push
inc
outs
and
movs
mov
cmps
pop
addr16
sub
xor
arpl
sub
mov
iret
das
jns
fxam
pop
xchg
sbb
add
cld
mov
jecxz
(bad)
retf
lds
aaa
leave
ja
xor
fldenv
adc
push
retf
movs
arpl
sbb
fcom
push
sbb
inc
xlat
add
pop
jg
mov
ja
ds
mov
adc
test
mov
stc
outs
adc
inc
test
cmps
int3
je
shl
add
add
test
push
and
jae
inc
jne
fdiv
dec
mov
ins
ret
(bad)
(bad)
rcl
sti
loopne
push
mov
iret
popa
cmp
rcr
ja
mov
setns
add
xor
cmp
repnz
(bad)
xor
xchg
cmp
es
mov
xchg
int
mov
ins
inc
mov
outs
fwait
sbb
mov
loope
sar
xchg
test
sbb
inc
pop
inc
cmps
cli
xchg
in
lahf
cmp
sub
push
add
mov
xor
add
(bad)
int
xchg
xchg
add
pop
dec
cmc
ds
add
in
mov
cdq
inc
jbe
jecxz
gs
xchg
dec
call
pushf
adc
daa
or
fiadd
xchg
and
dec
jne
push
repz
cs
rcr
fdivr
add
leave
movs
xchg
and
dec
popf
mov
pop
xlat
adc
lea
scas
add
mov
inc
mov
jmp
repnz
test
mov
fisubr
enter
les
xchg
and
fdivr
jne
mov
aam
jae
jp
gs
popf
cs
jbe
mov
(bad)
xchg
pop
retf
ins
cmp
cmp
daa
or
test
sub
ss
jle
lock
dec
test
stc
jns
sub
mov
std
xor
mov
aaa
mov
ins
xchg
xlat
pop
xor
mov
cmp
add
and
(bad)
sti
adc
retf
je
xchg
inc
dec
cmp
in
repnz
shl
dec
call
outs
aas
pusha
mov
jmp
outs
jo
bswap
mov
mov
inc
sbb
mov
lea
jecxz
sahf
xchg
enter
mov
lods
sub
(bad)
mov
sbb
out
mov
pop
sbb
inc
sbb
jb
dec
movs
retf
jle
fisub
push
(bad)
xchg
jg
or
mov
mov
loop
(bad)
fldcw
fist
xchg
sub
or
sub
iret
fs
mov
mov
scas
jne
add
loop
xor
cmp
pop
jge
pop
clc
ret
mov
push
das
ret
push
ins
loope
add
cld
jo
loopne
sbb
xor
lock
gs
add
jae
dec
xor
gs
aaa
xchg
pop
gs
sbb
idiv
into
jne
in
adc
pop
(bad)
nop
test
mov
pop
mov
repnz
mov
sbb
in
repnz
fstp
shr
out
mov
jbe
cwde
inc
cmps
adc
outs
sbb
leave
nop
add
inc
jnp
aam
xcrypt-ofb
cmps
out
dec
xchg
sbb
cmp
jp
hlt
mov
cs
fsubr
(bad)
pop
cmps
push
dec
into
inc
je
icebp
in
leave
adc
xlat
cmp
or
stos
jbe
ds
sub
pushf
(bad)
push
inc
scas
push
movs
shl
mov
dec
leave
aam
jl
outs
and
(bad)
add
cmp
pop
jne
cmp
jno
mov
mov
xlat
inc
jmp
sub
mov
aam
loop
mov
movs
cdq
mov
mov
adc
scas
imul
ja
stos
sub
dec
popa
int
mov
bound
cmps
xchg
jg
push
pop
aad
xor
jae
add
cmps
and
sahf
jecxz
int
mov
jl
pop
and
lahf
fistp
js
fdiv
stos
xchg
inc
(bad)
jno
ins
call
sbb
push
cmp
icebp
fs
add
adc
xor
(bad)
out
mov
add
inc
add
fld
retf
sbb
cmp
mov
cmps
test
jo
int
test
shl
or
push
add
fnsave
and
sbb
jo
scas
inc
mov
cmp
jbe
loope
add
jl
scas
jno
sub
inc
mov
dec
mov
hlt
xchg
sbb
sbb
std
fistp
enter
addr16
scas
pop
fwait
xor
out
jbe
push
int
push
int3
sbb
aas
xchg
fimul
clc
sbb
test
dec
xchg
mov
jae
test
adc
jl
call
lock
dec
(bad)
fcom
mov
jbe
inc
push
cs
movs
test
sti
mov
adc
repnz
cmp
mov
div
nop
js
lds
outs
mov
push
mov
push
jp
rol
dec
or
mov
aam
inc
(bad)
push
call
push
push
xor
inc
jb
jno
lahf
sub
mov
add
lea
push
dec
sahf
sub
pop
add
dec
add
xchg
sahf
or
sub
adc
stc
push
and
sub
add
cmps
mov
jo
or
mov
mov
mov
mov
loope
ror
jmp
scas
mov
arpl
rcl
xor
mov
inc
lahf
and
dec
adc
nop
mov
imul
xor
adc
test
adc
add
add
inc
inc
and
in
dec
cmp
add
push
push
inc
add
and
adc
test
test
add
push
adc
fiadd
adc
and
inc
and
add
(bad)
push
daa
rol
shl
push
movs
dec
outs
in
push
cs
add
jmp
std
adc
adc
dec
jo
inc
jb
jp
call
push
test
xchg
or
adc
sbb
mov
and
jg
fsubr
jp
push
pop
paddusw
imul
pop
mov
aad
test
rol
add
inc
nop
cmp
ss
dec
jbe
cs
jmp
aam
push
aaa
pop
push
jnp
inc
and
sahf
adc
call
pop
jmp
cmp
jecxz
xchg
ror
(bad)
mov
imul
fwait
jns
jno
cmc
push
dec
sub
adc
cmp
shl
push
jecxz
add
sub
ins
test
test
ds
daa
push
inc
repz
dec
mov
sub
xchg
and
add
inc
mov
or
mov
rol
pop
and
mov
cmovle
aad
pop
cli
and
xchg
push
xchg
adc
inc
adc
pop
imul
cmp
int
pop
mov
shl
fs
sub
jns
pop
jne
(bad)
hlt
mov
xlat
mov
push
rcr
in
popf
xor
xor
sti
xchg
movs
push
cmp
and
dec
retf
in
jno
fld
push
push
ins
add
inc
xchg
lock
ins
mov
stc
dec
mov
mov
cmp
xor
push
push
xchg
ss
shr
inc
retf
add
(bad)
inc
jne
das
outs
iret
or
pop
aam
ins
adc
push
push
gs
mov
mul
jb
cmp
loopne
fbld
imul
add
add
inc
add
jmp
jae
nop
push
or
popf
ret
mov
mov
cmp
mov
mov
cmp
aam
jmpw
dec
cmp
pop
cli
scas
and
sar
repnz
inc
fldenv
pop
cmp
jo
imul
jmp
outs
push
addr16
idiv
add
xchg
shl
pop
jp
pop
and
das
lock
push
push
push
aaa
mov
push
shl
es
imul
mov
lods
jo
lahf
outs
test
out
loope
jecxz
xchg
(bad)
ss
mov
add
mov
jmp
pop
pop
leave
xchg
hlt
xor
sar
rol
scas
(bad)
xchg
mov
data16
push
out
mov
idiv
and
xor
lahf
rcr
and
arpl
pushfw
out
aam
int3
lea
call
or
push
ja
jnp
pop
pusha
jbe
pop
sbb
or
push
(bad)
push
xor
in
pop
push
pop
dec
push
pop
mov
xchg
clc
inc
pop
sub
push
into
cmp
cmp
jo
call
and
ja
nop
popa
daa
stos
pop
jne
ja
push
jl
mov
in
sub
repnz
(bad)
cli
add
mov
arpl
(bad)
jnp
add
push
shl
xchg
div
out
fst
fwait
inc
popf
inc
add
xor
add
cmp
push
aad
not
push
push
lock
out
xchg
dec
sub
pop
or
push
and
or
sbb
outs
adc
fild
fcmovbe
data16
cmp
shr
jp
lods
sub
pusha
sbb
mov
imul
sbb
xchg
sub
mov
mov
adc
jae
aad
dec
fwait
ja
jo
ins
push
rol
sub
mov
imul
and
imul
pop
xchg
fild
fld
lock
mov
push
push
stos
xchg
dec
jno
cmps
pop
loope
loop
movs
sub
je
push
lock
mov
jl
jnp
pop
out
movs
add
in
fstp
sar
stos
enter
(bad)
add
dec
adc
frstor
int3
cmp
fs
inc
cmp
out
add
ds
mov
add
int
cmps
sub
add
sbb
sbb
out
in
in
mov
xchg
cs
ins
jno
mov
(bad)
jmp
retf
je
cmp
sub
mov
je
jg
movs
(bad)
iret
ret
sub
dec
mov
cmp
cmp
push
shl
sahf
repnz
cmp
push
outs
adc
add
shl
outs
push
mov
jno
cmp
mov
adc
(bad)
sbb
scas
jbe
mov
dec
or
add
jno
jae
add
fst
cmps
int3
ret
sbb
jbe
icebp
xchg
stc
cmp
(bad)
jmp
cmp
add
in
in
adc
xchg
dec
mov
sbb
(bad)
repnz
js
adc
inc
loope
sbb
xor
popf
xor
mov
lahf
test
xchg
xchg
dec
fld
ficomp
sti
scas
ds
dec
and
jge
add
test
retf
xchg
das
ds
in
and
mov
pop
adc
(bad)
and
hlt
sti
scas
aaa
cli
jbe
inc
ret
mov
cmp
test
call
rcr
movs
mov
ins
outs
sub
fistp
out
mov
mov
pop
cmp
iret
retf
dec
leave
retf
arpl
adc
stos
repz
jo
jnp
ss
lock
xchg
jbe
cmp
mov
test
fidivr
xchg
cmps
sbb
int3
rcr
fstp
sbb
cmp
cmps
loop
mov
je
or
mov
fidiv
xchg
xchg
shl
jmp
mov
and
ss
jl
mov
inc
sti
mov
enter
(bad)
xchg
xchg
shr
shl
dec
pop
or
sbb
stc
jle
dec
xor
jns
add
jae
pop
js
mov
mov
mov
inc
clc
not
sbb
push
and
jmp
dec
push
fisub
xchg
(bad)
ins
mov
jecxz
(bad)
movs
(bad)
cmp
xchg
lods
adc
jp
ficom
in
mov
imul
stos
cwde
or
mov
push
xchg
fs
stc
mov
cwde
inc
scas
ins
fsub
inc
xchg
cmp
sub
imul
aaa
in
push
mov
inc
mov
(bad)
mov
ficomp
mov
cmp
fmul
xchg
xor
stos
push
retf
fimul
push
jne
pop
loop
rol
ja
inc
das
lods
mov
stc
js
ss
(bad)
sahf
mov
loope
sbb
and
add
add
neg
and
out
std
xchg
jl
dec
repz
cs
arpl
in
cld
lods
inc
popa
mov
jo
js
sahf
fldcw
inc
push
shl
or
sub
dec
pop
cmp
sbb
out
movs
sbb
bound
adc
mov
inc
cs
fxtract
mov
sub
les
push
sub
pop
loop
pop
jg
mov
fdivr
jne
repnz
or
mov
mov
cmp
jne
sysexit
fsubr
inc
js
sbb
jp
mov
xchg
sub
xor
(bad)
rcr
mov
leave
fwait
jmp
mov
dec
add
movs
popf
or
cdq
lods
arpl
cmps
iret
dec
mov
fsubr
test
mov
loop
fucompp
and
push
add
jae
mov
ins
xchg
inc
jge
cdq
bound
imul
ficom
cdq
xchg
cli
cmp
mov
jge
ret
xchg
jle
ja
pop
mov
ds
sub
js
ins
lock
mov
mov
std
aam
xchg
and
dec
es
imul
adc
jbe
xchg
pop
movs
call
xchg
inc
loope
shl
cmovnp
outs
je
lds
xchg
xchg
sbb
cmc
inc
(bad)
add
sub
adc
adc
or
retf
pop
mov
imul
jb
push
pop
not
clc
jmp
cmp
inc
pop
push
mov
into
les
sub
shl
pushf
movs
popf
outs
mov
push
iret
ret
sbb
fs
(bad)
out
add
or
movs
xor
hlt
add
jno
add
sbb
cmp
fcmovbe
or
mov
retf
or
test
arpl
add
pop
jg
mov
push
rol
cmp
out
imul
stos
sub
not
in
dec
jns
aam
lds
pop
in
mov
push
jo
jle
mov
mov
sar
ins
aad
not
imul
std
jmp
sub
aaa
xchg
mov
mov
xor
rcl
fist
or
retf
mov
rcr
dec
pop
retf
bound
cmp
pop
mov
shl
jge
test
add
repz
push
retf
outs
in
mov
pushf
mov
scas
fcomp
fadd
pop
int
mov
or
push
popf
mov
pop
ins
retf
xor
leave
xor
sbb
adc
pop
or
xchg
out
fdiv
or
pop
enter
or
push
dec
aaa
rol
xchg
adc
sub
pop
jnp
lods
imul
gs
gs
out
xor
fild
push
idiv
into
xchg
adc
enter
cld
mov
leave
sub
or
aad
test
int3
cvtps2pi
sar
jge
xchg
mov
jns
mov
jmp
add
in
or
cmp
mov
xor
mov
int3
test
mov
jno
int
xchg
lods
mov
inc
or
dec
xchg
es
outs
ja
cmp
cmp
jo
in
mov
xchg
inc
push
xchg
aaa
mov
or
jg
(bad)
sahf
retf
mov
or
fnsave
mov
(bad)
iret
xchg
(bad)
pop
mov
add
push
mov
xchg
push
nop
pusha
dec
or
mov
imul
ins
(bad)
and
pop
cmc
je
dec
call
outs
mov
jno
jecxz
stos
adc
and
sbb
cmp
and
add
add
repnz
jae
imul
jae
cmps
adc
xchg
into
cmp
push
cmc
mov
xchg
lea
call
sub
inc
lea
jne
cmp
fst
mov
cmp
sub
jp
pop
movs
lahf
test
cli
scas
push
popf
movs
xor
(bad)
jae
call
jbe
test
int3
ins
pop
mov
jbe
(bad)
popf
nop
dec
outs
gs
dec
outs
sti
lods
cmp
sub
fwait
pop
xor
mov
mov
mov
mov
sbb
adc
(bad)
add
mov
mov
int3
dec
mov
mov
fmulp
jge
fst
(bad)
cmp
xchg
ins
loop
fisttp
xor
jae
lea
repz
movs
arpl
fdiv
dec
inc
ins
fmul
mov
xchg
test
js
mov
dec
fsub
xor
cmp
cmp
jo
out
mov
aaa
push
ror
jnp
cmc
std
aad
mov
ins
mov
push
lods
mov
hlt
jp
outs
jbe
fwait
sbb
repnz
popa
xor
inc
in
loop
jne
sbb
mov
cmp
and
inc
jp
xchg
jne
xchg
inc
xor
rol
mov
pop
movs
loope
dec
sbb
xchg
mov
out
leave
std
aad
rep
in
mov
fadd
or
cmp
pop
and
dec
jae
cmps
jp
jae
cmp
sbb
dec
mov
inc
in
mov
pop
outs
jne
(bad)
popf
(bad)
out
pop
gs
loope
ds
cs
hlt
mov
and
lds
fwait
mov
gs
loop
adc
cmp
daa
adc
(bad)
adc
inc
or
push
leave
xchg
sar
dec
mov
ss
(bad)
(bad)
repz
(bad)
(bad)
movs
jno
sub
repz
xor
fcomp
dec
jnp
loop
add
dec
mov
addr16
cmps
sahf
push
and
(bad)
push
cmp
repnz
ja
rcr
jns
fidivr
push
add
xchg
je
(bad)
je
sub
sti
jae
or
popf
mov
mov
pushf
cli
mov
hlt
call
and
or
ja
inc
jb
sti
dec
xlat
push
pushf
ins
je
scas
test
xchg
in
inc
inc
xchg
iret
cmc
enter
mov
mov
sub
invlpga
call
cmp
arpl
(bad)
outs
test
shr
or
sbb
or
adc
fild
xchg
in
into
arpl
adc
js
test
mov
add
mov
jmp
sbb
neg
jno
gs
jno
imul
mov
lock
fwait
xchg
int3
js
mov
inc
push
ins
dec
hlt
int
loope
loopne
sbb
stos
mov
jne
popf
push
int3
sbb
inc
xchg
or
js
clc
jno
stos
loope
daa
xor
(bad)
cmovo
scas
push
and
in
imul
fistp
outs
mov
rcr
(bad)
mov
cmp
jecxz
out
mov
mov
arpl
arpl
movs
scas
dec
push
add
shl
(bad)
out
out
push
test
mov
mov
(bad)
mov
in
jb
push
ret
adc
and
or
(bad)
popf
out
mov
lock
rcl
ss
inc
xchg
dec
mov
shr
mov
jmp
setge
xchg
jae
mov
jo
mov
sbb
gs
adc
(bad)
pop
jmp
mov
cmc
xor
and
mov
stos
sub
popa
adc
lock
(bad)
out
adc
call
xchg
lea
pop
icebp
std
outs
out
mov
mov
inc
(bad)
fsubr
outs
pop
int3
jmp
aas
xchg
xchg
stos
test
nop
mov
not
aas
lock
jo
lods
push
(bad)
test
sahf
rcr
inc
fisub
inc
pop
movs
mov
stos
push
jno
mov
pop
xchg
xchg
dec
mov
(bad)
and
push
jo
adc
jne
(bad)
loopne
out
mov
dec
int
out
rcr
mov
outs
jecxz
addr16
xchg
jl
out
add
and
inc
jae
sahf
std
retf
ins
dec
or
dec
fiadd
push
jne
sbb
mov
mov
in
pop
es
jp
and
adc
sub
jo
lock
cmp
push
les
in
mov
mov
in
mov
leave
xor
mov
sub
ss
(bad)
and
dec
sbb
dec
dec
inc
dec
pushf
mov
loope
rol
jnp
loop
adc
and
rcr
fs
loopne
jnp
ja
test
mov
xchg
fdivr
scas
cwde
mov
add
test
and
aas
cmps
adc
add
mov
sub
adc
daa
dec
test
sub
and
add
add
inc
adc
int
add
test
jnp
test
sub
and
loope
add
mov
lock
inc
sbb
inc
xchg
aad
ins
sbb
test
pop
lea
das
fstp
add
mov
sbb
add
je
enter
add
fdiv
push
add
dec
fldenv
adc
xchg
ins
inc
push
call
out
push
add
jno
adc
loope
xor
mov
mov
lock
push
jl
inc
out
repnz
pop
jecxz
fiadd
or
shl
add
push
inc
adc
or
inc
cmp
dec
inc
adc
dec
xchg
inc
and
inc
and
inc
and
inc
and
inc
jb
rol
add
sub
in
rcl
dec
add
mov
adc
adc
and
adc
add
cmc
pop
fisttp
ret
in
leave
adc
imul
jae
mov
xchg
dec
mov
pop
mov
mov
or
stc
cmp
(bad)
in
or
mov
and
jnp
jnp
pushf
jecxz
xchg
pop
add
lock
mov
sbb
xor
or
out
lea
lahf
xchg
adc
pop
je
inc
and
movs
imul
adc
je
and
sub
aas
sub
das
call
push
mov
adc
xchg
sub
inc
lock
or
aaa
sub
jp
outs
jg
push
mov
or
sar
mov
mov
jno
mov
sub
xchg
out
imul
jp
adc
ja
and
movs
push
or
dec
inc
rcl
test
retf
cmp
dec
test
inc
add
inc
rol
and
test
and
adc
inc
adc
inc
adc
inc
adc
mov
mov
inc
pop
(bad)
sub
push
iret
and
and
dec
aaa
data16
sbb
fwait
imul
pushf
sbb
dec
sub
fadd
out
fidivr
or
dec
sub
mov
xor
add
stc
dec
out
dec
push
repnz
int
xchg
and
repnz
aad
mov
jl
mov
jmp
inc
mov
add
mov
ins
sub
sbb
pop
lods
xchg
ja
out
inc
push
jmp
shl
dec
dec
sbb
in
add
sar
scas
aas
push
dec
cmp
adc
add
cmp
test
jbe
pop
loope
mov
xor
neg
nop
ds
adc
es
fnsave
pop
xchg
xchg
and
inc
(bad)
ja
push
mov
xchg
push
inc
rcr
pushf
dec
hlt
rcl
jp
hlt
push
inc
add
adc
sub
mov
mov
add
mov
sub
pop
push
push
loop
ja
lods
(bad)
mov
fimul
movs
inc
pshufw
and
loope
cmp
pop
add
sbb
retf
xor
pusha
jae
(bad)
push
enter
add
adc
mov
cmp
sbb
cmps
fs
xchg
mov
movs
cld
das
scas
mov
jno
je
xchg
dec
or
(bad)
fst
das
cmc
test
mov
out
stc
dec
enter
add
clc
pop
jg
ret
xchg
cmps
imul
dec
inc
jo
sbb
xlat
int3
jmp
dec
retf
and
fcmovu
std
cmp
inc
lahf
sub
es
push
mov
scas
fs
jmp
push
mov
mov
dec
test
test
out
pop
ss
mov
ret
adc
ins
xor
stos
adc
in
shr
mov
call
(bad)
repnz
jne
movs
add
dec
call
push
arpl
mov
sbb
add
pop
pop
dec
not
es
cmp
adc
inc
leave
dec
adc
outs
xor
rcl
or
or
pop
push
add
or
cmp
sbb
dec
xchg
cmc
push
cmp
outs
cs
add
loope
pcmpgtb
addr16
ins
mov
rol
or
lods
fist
dec
adc
pop
out
(bad)
mov
pop
inc
pop
cmp
loopne
js
pop
inc
ror
mov
lahf
das
cmps
je
mov
fwait
sbb
(bad)
mov
ret
outs
inc
or
jo
sub
in
es
(bad)
xchg
mov
imul
loopne
cdq
adc
adc
ins
lock
pop
pop
jne
into
lock
lahf
xchg
xor
jo
or
sbb
sbb
sub
sbb
aaa
test
and
in
lahf
dec
ret
lahf
push
dec
sbb
cdq
or
outs
and
push
js
mov
cmps
es
sti
les
inc
repnz
dec
shr
nop
push
(bad)
in
and
add
inc
mov
push
jno
or
mov
or
into
enter
inc
xchg
imul
jnp
je
xchg
mov
popw
rcr
sti
(bad)
gs
xor
inc
addr16
fild
mov
push
sub
push
pop
in
pop
pop
pop
mov
aaa
ror
movs
inc
stos
push
(bad)
in
imul
repz
dec
dec
push
cmc
sub
inc
pusha
test
(bad)
cmp
xchg
jnp
mov
shrd
out
or
idiv
out
mov
jne
retf
xchg
push
cmp
cmp
mov
cld
jns
adc
add
push
inc
xchg
sub
sar
clc
repz
popf
pop
cwde
rcr
jmp
dec
das
fcomp
addr16
jbe
jg
mov
xchg
stos
out
mov
cmp
(bad)
gs
fs
imul
xor
sbb
dec
sbb
jmp
movs
ins
cmp
popf
fs
(bad)
push
pop
jecxz
mov
mov
pushf
push
inc
or
sti
xlat
cld
cs
jbe
inc
ins
jbe
and
or
(bad)
(bad)
fdivr
cdq
lods
enter
mov
adc
mov
and
lds
mov
jbe
jge
cmp
lea
push
xchg
push
inc
rcr
push
mov
adc
mov
into
xor
jmp
dec
into
(bad)
mov
int3
retf
add
or
push
movs
stos
pop
mov
(bad)
dec
xchg
cmp
inc
adc
jne
mov
rol
sbb
pop
pop
pusha
ins
sbb
(bad)
jp
xchg
shl
xchg
pop
jno
cs
fld
or
(bad)
jmp
sbb
rcr
xchg
sahf
mov
fmul
cs
addr16
addr16
into
pushf
in
sbb
es
out
mov
pusha
in
jnp
mov
es
mov
jae
and
dec
mov
inc
push
sbb
ficom
ins
outs
loopne
aas
bound
iret
cmps
iret
stos
jmp
imul
jno
gs
shr
out
xor
cmp
inc
cmps
cwde
shr
xchg
xor
fstp
jmp
sbb
add
mov
xchg
scas
imul
lods
and
das
push
sbb
mov
adc
mov
fbstp
pop
push
dec
jnp
mov
mov
pop
punpcklbw
mov
cmp
aad
mov
jns
arpl
adc
fidivr
scas
and
stos
mov
mov
add
cdq
jnp
int3
and
sbb
and
xor
dec
xlat
lahf
push
cwde
ss
jnp
sub
add
(bad)
push
xchg
not
or
mov
arpl
sub
sbb
imul
call
cmp
jg
fnstsw
outs
repz
mov
jl
sub
xchg
lahf
xor
in
mov
jo
out
inc
in
mov
bnd
pop
jo
and
cmp
test
adc
xchg
in
ins
addr16
pop
mov
add
push
aaa
pop
adc
imul
sbb
dec
dec
xchg
cmp
js
jge
movs
out
adc
or
mov
push
jecxz
repz
loopne
stos
add
xchg
adc
iret
add
fidiv
cmps
ss
imul
xlat
cmps
cmps
jmp
jge
adc
mov
out
mov
sbb
sub
pop
pop
mov
mov
out
lahf
pusha
mov
fs
imul
jmp
(bad)
fs
iret
xchg
push
movs
mov
pop
pop
(bad)
out
repz
xor
lods
adc
scas
or
jbe
jp
ds
cli
xor
movs
jns
int
mov
jmp
scas
xchg
mov
sahf
ds
pushf
dec
add
fnsave
or
sbb
xchg
shr
xor
mov
fbld
std
push
sar
mov
scas
xlat
aad
fadd
jecxz
xchg
push
mov
jmp
fnstcw
pop
int3
jbe
sub
leave
sahf
ins
fld
xchg
inc
leave
fsub
jl
lods
fldenv
lahf
mov
nop
or
leave
arpl
ds
cmp
dec
xlat
outs
ins
es
dec
xor
repnz
and
iret
jmp
mov
popf
imul
or
out
loopne
mov
jnp
pusha
jae
pop
sub
jp
jmp
jl
jnp
ins
test
cmp
repz
out
stos
cdq
loopne
imul
mov
aas
adc
shr
imul
call
push
fldcw
cmp
fisttp
mov
mov
ds
xlat
mov
pop
mov
pop
mov
outs
rcr
lods
xor
mov
test
mov
sub
nop
jecxz
mov
mov
push
scas
push
aam
mov
fsubr
repnz
and
dec
pop
pop
pop
call
scas
inc
fmul
test
mov
xor
hlt
hlt
jno
addr16
test
into
addr16
shl
pop
jns
fnstenv
call
xlat
repnz
push
inc
int
dec
iret
enter
repnz
in
pop
cs
retf
sbb
rcr
jge
jp
(bad)
rcr
stos
mov
scas
test
lahf
cs
test
out
pop
cmps
jo
iret
mov
ss
cmp
xchg
std
mov
outs
inc
xor
fs
pop
rcl
loopne
pop
stc
ror
cmp
fs
push
scas
mov
sub
xchg
aam
cmp
cmp
jecxz
inc
out
mov
pop
imul
aad
out
jb
cwde
jg
mov
cdq
xchg
or
mov
cmc
pop
in
mov
movs
push
add
dec
cld
scas
arpl
push
(bad)
pop
mov
dec
loop
mov
cmp
iret
xor
out
outs
stc
inc
and
ja
lods
xchg
out
outs
jno
cmc
pop
push
adc
add
cmp
pop
sub
pushf
sbb
in
in
cmps
xchg
ss
xor
fisubr
inc
adc
popa
leave
and
imul
mov
push
sbb
popf
shl
neg
inc
inc
dec
lds
mov
pop
test
mov
mov
push
xor
(bad)
retf
adc
cs
iret
add
add
ins
aam
int3
mov
sbb
sbb
dec
sbb
test
test
cli
mov
nop
call
mov
push
fidivr
jmp
mov
fisub
mov
call
mov
mov
or
jno
mov
cmc
clc
add
lea
cmp
das
imul
add
mov
inc
retf
in
jge
mov
rol
lahf
neg
(bad)
daa
cmc
imul
test
mov
dec
arpl
ror
push
or
popa
fwait
prefetch
or
cs
ds
leave
dec
cmps
dec
sbb
xchg
cdq
pusha
outs
jecxz
imul
push
ins
imul
mov
and
sbb
int3
add
xchg
xor
outs
mov
ss
out
cwde
movq
or
movs
cmc
cmps
dec
dec
cmp
sbb
xchg
ror
inc
mov
imul
and
fs
and
lds
imul
cli
jl
cmp
mov
loopne
push
add
in
loop
mov
lock
mov
fild
pop
pop
add
jne
xor
add
retf
fwait
es
fst
xor
push
push
cs
push
inc
pop
repnz
retf
sti
test
xor
push
and
pop
push
jge
mov
(bad)
xchg
mov
popf
xchg
mov
fcomp
add
js
clc
neg
pusha
jl
inc
pushf
rcr
retf
pop
xchg
mov
idiv
shl
mov
in
pop
lock
fistp
sub
leave
sbb
or
jb
daa
xchg
pop
ss
mov
das
in
ins
sub
data16
fs
jns
sub
jmp
movs
lods
sbb
pop
dec
jnp
shl
test
mul
xchg
int
pop
rol
fcomp
mov
aam
add
mov
add
mov
scas
mov
std
adc
lock
pop
loope
adc
int
test
int
sar
enter
ret
inc
dec
mov
or
pusha
lods
aad
cmp
inc
add
dec
ret
std
push
in
sub
cs
aas
jmp
sbb
aad
(bad)
outs
fcmovne
aas
pop
imul
sub
sbb
mov
push
ror
xor
xchg
mov
out
adc
(bad)
movs
(bad)
jno
sub
pop
xchg
cmp
js
lea
xor
add
ss
inc
cmps
lds
cmp
mov
scas
push
lods
mov
pop
xchg
and
add
gs
xor
cmc
call
(bad)
ins
add
push
mov
mov
sbb
loopne
int
cmp
leave
adc
ret
cmp
jmp
mov
mov
mov
xchg
and
add
xor
ds
lea
push
and
sbb
add
mov
mov
or
mov
xor
dec
sbb
cmp
mov
mov
sub
jmp
pop
dec
ror
xchg
cdq
sbb
inc
pop
neg
push
inc
mov
fsubr
cmp
cmp
push
sbb
inc
mov
arpl
dec
jmp
(bad)
vpcmpgtw
hlt
mov
scas
sbb
dec
cmp
clc
push
push
into
call
int3
sbb
out
push
sub
mov
test
neg
test
lahf
dec
call
add
adc
retf
inc
lock
div
inc
stos
in
fdivrp
adc
rcl
mov
or
adc
test
cmc
jne
(bad)
mul
out
mov
(bad)
into
nop
add
inc
pop
rol
out
dec
dec
imul
rcr
test
cli
lahf
xchg
adc
mov
and
mov
sbb
out
ss
out
icebp
mov
out
inc
popf
scas
sub
retf
xchg
dec
fcomp
push
or
daa
push
iret
push
dec
cmp
fsubr
fcmovbe
loop
hlt
add
mov
sbb
cmc
or
add
(bad)
outs
or
pop
imul
arpl
and
call
mov
lea
pop
inc
icebp
mov
inc
enter
xor
sahf
je
cmps
ret
cmp
inc
mov
shr
iret
fnstsw
push
xor
popa
dec
in
cmp
jl
rol
fst
mov
push
(bad)
adc
jo
add
retf
or
sbb
push
push
jp
movs
mov
dec
mov
push
cmp
cmp
push
push
js
adc
dec
mov
mov
inc
ret
repnz
xchg
lea
mov
mov
fsub
inc
mov
add
mov
repnz
pop
mov
sub
stos
mov
cmp
mov
mov
out
pop
sbb
xchg
mov
std
shl
add
(bad)
push
outs
sti
sub
pop
int
(bad)
pop
mov
data16
adc
ret
jmp
or
sub
xchg
(bad)
dec
repnz
dec
and
mov
int3
(bad)
outs
and
add
inc
stc
sahf
sbb
or
out
cs
xchg
jnp
pusha
pushf
dec
pop
div
aas
adc
leave
jno
pop
pop
pop
in
push
aaa
cmp
inc
mov
out
push
jo
test
aad
cs
ins
(bad)
lock
inc
adc
dec
add
aad
rol
leave
jo
ins
sbb
add
inc
add
inc
add
push
or
adc
sub
es
test
shl
clc
scas
push
inc
mov
sete
retf
dec
mov
sub
and
xor
push
test
add
shl
inc
xchg
mov
add
jne
je
or
pop
cmps
cmp
pop
(bad)
push
lds
loope
pop
sar
pusha
and
dec
mov
lock
or
cmps
idiv
(bad)
dec
or
imul
(bad)
push
cmp
mov
dec
jns
push
inc
mov
inc
cwde
add
dec
movs
add
pop
sub
inc
mov
ins
in
pop
xchg
mov
jl
mov
dec
xchg
imul
pushf
pop
mov
xor
and
sar
dec
adc
add
aad
mov
push
inc
and
mov
je
pop
xchg
lods
dec
mov
scas
sub
rcl
sub
sub
pop
dec
leave
sbb
dec
je
mov
adc
and
xchg
sbb
push
test
mov
inc
mov
test
lods
add
or
sub
adc
pop
fs
inc
in
or
and
adc
or
and
dec
dec
or
adc
inc
and
inc
and
inc
and
aaa
pop
and
dec
add
add
add
lds
test
aam
fnstenv
adc
test
pop
dec
sub
push
mov
adc
mov
rol
mov
retf
cmp
adc
int3
imul
cmp
jp
adc
sti
and
cmp
mov
cmp
push
mov
in
push
jle
and
scas
jmp
sub
pop
inc
dec
jmp
(bad)
stos
xchg
inc
push
mov
das
sbb
cmps
sbb
loope
adc
adc
add
imul
jl
adc
rol
and
aad
jae
lods
cmp
xor
lods
je
xchg
test
mov
inc
add
or
dec
jl
cmp
out
push
push
adc
neg
jns
ss
cmp
dec
movs
adc
mov
out
or
in
ds
cmps
clc
xchg
arpl
retf
jae
ja
repnz
mov
out
fist
out
and
jmp
jmp
push
ja
mov
fstp
push
enter
retf
pop
aam
stos
idiv
xor
pop
inc
mov
(bad)
xchg
add
inc
push
and
icebp
jecxz
jl
pop
mov
mov
xchg
xor
cmp
clc
jmp
into
or
test
dec
je
cs
ret
add
cmp
mov
data16
retf
cmc
pop
enter
xor
mov
pop
fcom
and
in
ja
or
sar
mov
sbb
mov
neg
arpl
imul
inc
sub
out
or
cmp
mov
xor
mov
sub
out
cmp
adc
add
pop
dec
ret
add
sbb
or
add
call
jmp
mov
xor
icebp
iret
mov
aaa
jns
out
sub
cmps
or
movs
clc
(bad)
shl
and
ins
push
mov
mov
mov
out
mov
mov
push
mov
lds
ins
pop
pop
arpl
(bad)
and
push
jae
(bad)
push
cmp
outs
(bad)
push
ret
add
ds
xchg
sub
aad
les
or
sbb
nop
mov
sbb
data16
shl
ror
lods
(bad)
arpl
hlt
pop
pop
mov
cmp
out
push
(bad)
call
mov
add
add
sbb
mov
push
je
fs
sub
pop
inc
inc
mov
out
mov
ret
xchg
xchg
jmp
xchg
xchg
es
xor
lock
rcr
xchg
mov
add
inc
(bad)
inc
push
jae
or
add
jns
dec
jo
mov
enter
mov
xchg
adc
jle
adc
cmp
sub
mov
xlat
dec
sub
out
jno
fstp
movs
mov
fld
push
lods
jno
jmp
movs
push
mov
sub
mov
inc
jb
fs
out
int3
jg
push
loop
dec
dec
inc
cmp
xchg
fisttp
push
out
jg
ja
and
ins
mov
aas
pop
cmc
pop
ror
xor
sub
xchg
clc
sub
push
rdpmc
inc
jle
bound
mov
push
mov
cdq
aad
push
lahf
xchg
push
cmp
sbb
sbb
neg
cmp
xchg
into
lahf
sub
(bad)
mov
xchg
or
inc
arpl
out
cmp
test
out
out
mov
neg
jo
paddusw
pop
mov
add
pop
neg
sub
jnp
pop
cli
ins
mov
nop
outs
mov
dec
cmp
inc
in
sbb
xchg
adc
mov
sbb
pop
in
fdiv
dec
sbb
and
lods
cmps
mov
xchg
shl
push
sbb
jnp
add
bnd
inc
cmps
fnstsw
pop
sub
cmp
enter
inc
cmp
jp
pop
cmp
out
jns
hlt
int3
rcl
cmp
add
arpl
dec
xor
not
int3
sbb
mov
jno
ins
mov
data16
scas
test
push
dec
sub
mov
mov
gs
mov
mov
mov
xchg
repnz
dec
mov
leave
sbb
pop
or
jns
cwde
mov
or
jnp
in
retf
or
mov
dec
or
sbb
loope
pop
cmps
call
(bad)
adc
xor
inc
add
enter
js
add
daa
push
fs
data16
add
cmps
sub
outs
cmp
leave
cdq
mov
adc
cmp
dec
inc
icebp
sbb
mov
jmp
sahf
cld
jbe
mov
das
adc
sub
aam
je
mov
imul
mov
xchg
mov
in
jo
rcl
pop
(bad)
(bad)
inc
jnp
popa
mov
pop
test
jo
je
or
les
hlt
xchg
cld
test
jne
cli
cmps
mov
(bad)
cmps
mov
jo
imul
movs
leave
test
push
mov
xchg
sahf
mov
jne
in
mov
out
push
loopne
in
gs
sbb
pop
ds
or
cmp
dec
xchg
sub
and
(bad)
pop
xor
fisubr
cli
jne
xor
cmp
ja
jno
(bad)
push
data16
rol
adc
xchg
in
xor
pop
cmc
sbb
mov
into
sbb
movs
hlt
pop
mov
clc
ds
ins
sub
mov
push
push
retf
mov
or
fcmovnbe
fwait
pop
fsubrp
jmp
pop
outs
sub
inc
stc
xchg
mov
mov
add
pushf
leave
cld
test
(bad)
js
xchg
mov
cmp
ret
dec
push
fs
ja
outs
icebp
aas
mov
jnp
mov
dec
pusha
fsubr
mov
mov
bound
sbb
or
push
std
movs
out
pop
dec
lods
popa
inc
xor
mov
mov
ret
or
dec
jne
cdq
pop
jbe
in
imul
movs
pmulhw
fist
mov
ds
(bad)
xor
nop
inc
jne
sti
mov
je
addr16
mov
adc
push
cli
and
fsub
xor
dec
sub
(bad)
jb
out
nop
fbld
mov
xchg
cmp
loop
inc
clc
or
fdivr
xchg
arpl
push
fdivr
or
cmps
(bad)
cdq
xchg
cli
lods
fstp
int3
cmp
cdq
sbb
inc
icebp
repnz
clc
jbe
jmp
xchg
inc
fwait
hlt
mov
or
jl
add
sahf
mov
call
cmc
into
xor
call
pop
pusha
stc
pop
mov
ss
jecxz
outs
mov
dec
jno
cmps
aas
push
mov
sbb
js
xchg
sbb
push
aad
fs
xchg
sub
out
hlt
xor
jmp
pop
sub
movs
sbb
add
pop
pop
mov
test
cmp
mov
dec
cmp
lods
out
loope
cs
ret
adc
inc
sbb
dec
cli
mov
sbb
mov
add
jno
aam
mov
movs
dec
adc
iret
retf
(bad)
leave
adc
out
call
mov
mov
sub
push
cmp
scas
js
ins
push
cmp
jns
and
call
sub
lds
inc
loope
std
sub
outs
fistp
movs
shr
loopne
inc
movs
mov
or
or
shl
push
(bad)
inc
shl
mov
and
stos
pop
xlat
outs
popa
jns
clc
or
cwde
jecxz
out
sub
fild
dec
ss
shl
xchg
fs
jo
int
mov
xchg
sbb
call
or
mov
repnz
retf
ins
repz
(bad)
(bad)
mov
jg
jnp
mov
les
inc
mov
lahf
repz
in
mov
(bad)
mov
int
xchg
jg
cmc
or
je
jecxz
mov
and
shl
repz
scas
mov
jmp
loope
push
out
outs
ins
icebp
mov
ret
cmps
xchg
stos
xchg
and
mov
or
cmp
add
add
cmps
lea
mov
sbb
popf
sahf
dec
push
icebp
ret
int
inc
and
mov
sub
mov
into
pop
jmp
fsubr
xchg
dec
js
repnz
fcmovu
cmps
jmp
xlat
fild
cs
pop
retf
sub
sbb
jns
xchg
push
in
ds
fnsave
mov
cmp
jmp
and
in
sub
dec
sbb
nop
mov
add
pushf
mov
jmp
mov
xchg
fistp
icebp
(bad)
call
sar
add
ror
aaa
cdq
sbb
in
fucomi
scas
mov
pop
fwait
(bad)
sbb
mov
aas
and
mov
lods
or
sbb
js
ja
ffree
xchg
lods
pop
pop
xchg
jne
dec
mov
ret
sbb
mov
pop
cmps
ds
xchg
inc
push
lds
push
lea
jmp
or
dec
in
inc
shl
fsubr
std
(bad)
cmp
cdq
into
out
jo
in
cmp
in
popa
(bad)
stos
jo
cmp
cdq
test
gs
(bad)
div
cmc
cwde
iret
adc
out
inc
pop
sbb
aas
jne
mov
cmps
sub
aaa
push
add
push
fisttp
and
sub
xor
ret
fstp
adc
inc
mov
popf
mov
jbe
or
mov
and
mov
das
jecxz
mov
fs
imul
add
xchg
mov
jne
fsubr
js
or
add
mov
xor
xchg
or
sbb
bound
cmp
pop
fsubr
pop
jle
jb
cdq
cmp
mov
adc
dec
mov
out
dec
cmc
mov
fdiv
loop
ins
leave
enter
inc
add
inc
fninit
lock
sub
add
jbe
repnz
xchg
xor
inc
push
inc
cdq
push
jle
stc
cmps
add
dec
fwait
test
pushf
sub
scas
jne
dec
jmp
or
in
test
jnp
push
fnsave
outs
mov
mov
fnstenv
repnz
fwait
jle
fs
stc
pop
ins
and
dec
ins
test
nop
jg
jg
out
frstor
inc
mov
cmps
shl
iret
and
mov
pop
mov
dec
push
aaa
pushf
inc
(bad)
mov
lea
cmps
call
std
and
push
int3
pop
sub
mov
jge
mov
test
mov
and
iret
in
mov
aaa
and
mov
cdq
mov
mov
ss
int3
cld
js
cmps
lock
xchg
fmul
xchg
in
push
inc
cmp
lods
or
cmp
mov
sbb
mov
jno
ins
rol
push
scas
aam
pop
scas
sbb
cdq
sbb
lea
adc
call
repnz
or
in
mov
mov
cmp
jmp
jno
fdivr
xor
cld
daa
cmp
fnstsw
std
(bad)
ja
cmp
jns
loop
or
inc
in
mov
jne
daa
mov
and
je
sub
icebp
jno
cs
movs
shl
dec
cmps
pop
stos
sub
mov
sub
(bad)
push
aam
jmp
and
sub
lahf
int
push
outs
dec
xchg
mov
repz
jecxz
aas
sub
xor
sbb
jae
add
push
jo
add
int3
imul
sbb
mov
fldenv
stc
out
jno
dec
not
mov
inc
mov
cmp
repnz
push
retf
jb
fldenv
mov
pop
out
push
aaa
dec
loopne
inc
dec
or
jg
mov
bound
sbb
jae
pop
cld
sub
pop
icebp
mov
xchg
retf
jecxz
adc
test
rol
and
sahf
push
int3
jns
xor
add
ffreep
jl
sbb
dec
jae
ins
xchg
xor
fisttp
outs
iret
mov
jns
mov
cmp
sub
(bad)
push
add
sahf
and
in
retf
cmp
jl
in
mov
mov
and
pop
stc
sbb
xor
(bad)
adc
movs
mov
scas
sbb
pop
sub
mov
xchg
inc
jns
mov
ins
out
and
and
push
fs
xchg
xchg
xor
add
repz
sub
(bad)
in
sar
jecxz
mov
xchg
mov
call
sahf
fiadd
push
test
mov
lock
int3
adc
jno
in
mov
jle
(bad)
push
jo
lds
add
cmp
push
mov
cwde
and
adc
in
mov
idiv
lds
movs
mov
sub
cs
cmc
push
jae
dec
jnp
and
into
jno
stos
adc
sbb
rcl
cmp
xor
fidivr
push
dec
jno
pop
adc
into
call
push
inc
addr16
mov
sub
sar
je
lock
aaa
in
fadd
sub
mov
pushf
lock
cld
lods
adc
mov
adc
leave
mov
in
ds
retf
in
add
loope
into
add
out
dec
mov
dec
xchg
mov
sub
push
stos
and
lahf
dec
(bad)
adc
idiv
dec
mov
(bad)
xchg
jno
sbb
icebp
mov
enter
mov
iret
call
ret
(bad)
hlt
push
xor
stc
cmp
dec
mov
pushf
ror
(bad)
(bad)
add
inc
es
push
fldcw
aam
jno
and
shl
sub
std
aaa
push
ds
dec
outs
lea
or
push
sub
js
jbe
xor
and
out
imul
pop
sar
add
add
cmp
push
cmps
in
push
rol
(bad)
and
xchg
cmc
adc
sbb
xlat
rcr
das
outs
inc
aas
cmp
pop
out
imul
je
mov
add
xchg
sbb
jmp
mov
aas
stc
jnp
mov
(bad)
cmps
jmp
jle
cdq
mov
loope
mov
scas
jge
sbb
fs
add
pusha
in
cmp
in
xor
or
bswap
mov
push
xlat
mov
cmp
das
push
jl
arpl
sti
push
jmp
hlt
shl
mov
das
adc
xor
add
add
pop
in
jae
lods
int3
xchg
inc
loope
int3
arpl
loope
mov
fucompp
mov
fstp
fs
or
mov
out
inc
outs
jo
push
call
rcl
pop
ret
sbb
push
xor
push
and
in
mov
mov
pop
(bad)
out
cmp
or
mov
mov
in
loopne
aad
jmp
lods
mov
not
dec
out
das
sub
es
stos
sbb
mov
add
and
push
stos
loop
pop
xor
arpl
mov
imul
pusha
mov
add
outs
mov
fmul
bound
fisttp
cs
pop
or
add
lods
and
push
add
out
test
inc
sub
sbb
add
scas
popa
cmp
xchg
xor
je
call
add
push
sub
jno
jmp
sahf
out
fucom
push
mov
mov
les
ss
xor
je
pop
push
sbb
jnp
ja
call
pop
push
dec
xchg
and
pop
mov
stos
add
xchg
sub
add
and
or
or
test
add
cmp
add
push
das
addr16
lods
rol
lods
mov
lds
or
adc
cmp
inc
rol
add
stos
arpl
popa
add
lahf
bound
adc
mov
mov
nop
or
shr
dec
xchg
je
dec
retf
js
push
inc
je
or
movs
shr
shl
(bad)
push
jno
or
imul
mov
daa
mov
jg
cs
mov
(bad)
(bad)
push
inc
cmp
mov
ins
sbb
sti
and
int
and
aad
stos
pop
aad
push
mov
push
add
sub
sub
pop
inc
mov
and
push
jae
xchg
fild
mov
add
sub
jecxz
mov
xchg
dec
(bad)
jno
push
pop
cmp
in
fstp
sub
arpl
adc
add
shl
shl
daa
rol
add
mov
inc
rcl
add
cmp
adc
mov
retf
adc
adc
dec
add
cs
call
adc
sub
inc
push
ror
inc
mov
add
or
test
add
add
inc
ds
ja
adc
sub
mov
ins
test
stc
ins
and
and
stos
mov
add
and
push
and
inc
mov
and
dec
dec
add
adc
pop
mov
or
mov
or
sahf
adc
inc
adc
sbb
pop
push
add
shr
(bad)
pop
test
lock
jb
xor
jge
mov
xchg
es
icebp
ins
lods
cmp
rcl
and
hlt
xchg
jmp
jne
sub
iret
mov
adc
out
mov
int
jl
out
not
lea
ds
mov
sbb
pop
jp
and
jle
mov
xor
xchg
ror
sahf
in
hlt
or
pop
mov
and
dec
xchg
int
imul
pop
cmc
sbb
ret
aaa
or
shr
repz
push
mov
adc
push
push
ss
mov
into
in
add
dec
cmp
out
es
sbb
mov
(bad)
shl
adc
adc
outs
mov
add
outs
mov
jmp
jecxz
call
inc
loope
fwait
ds
xor
pop
repnz
retf
and
mov
ja
retf
out
and
dec
test
je
retf
inc
lea
push
int3
sar
xchg
(bad)
lock
or
adc
fbstp
scas
and
icebp
(bad)
cdq
test
and
jo
out
mov
cwde
and
jns
in
fcom
ins
imul
clc
pop
movlps
fst
movs
xchg
pusha
int3
xchg
lahf
add
sub
jbe
jge
push
shl
push
shl
mov
sahf
cmp
cdq
das
mov
adc
fcom
aaa
dec
icebp
(bad)
lock
(bad)
rol
push
cmps
in
cwde
icebp
or
scas
repz
aam
in
hlt
addr16
je
xor
addr16
sti
and
ss
jbe
push
stos
enter
js
pop
sub
add
fcom
pop
and
in
aam
inc
stos
mov
push
jnp
push
cmp
repz
xor
mov
xor
shl
mov
sub
popa
daa
shr
cmp
lods
mov
sub
in
cmp
enter
and
rcr
shr
push
xchg
fst
sub
xchg
jb
push
retf
pop
out
cmp
gs
sbb
xsaveopt
jmp
jbe
loopne
adc
mov
push
(bad)
dec
js
jmp
adc
cmp
(bad)
imul
inc
daa
mov
jae
sti
(bad)
sbb
xor
add
cdq
icebp
dec
sbb
mov
pop
mov
push
arpl
dec
pop
cdq
cli
pop
out
or
mov
xor
mov
mov
mov
mov
adc
jnp
sub
scas
daa
test
push
sbb
int
ins
cs
cmp
jo
sbb
pushf
(bad)
(bad)
je
retf
das
or
jecxz
ret
or
into
cmc
dec
div
push
push
aad
std
daa
adc
out
cli
sahf
add
hlt
int3
inc
retf
and
fcomp
sub
shl
mov
add
jmp
shr
or
pop
xchg
mov
lods
dec
pop
sbb
mov
jno
push
(bad)
mov
inc
xchg
cmp
mov
push
pusha
fsub
mov
out
shl
call
enter
loopne
push
cs
sub
lds
out
jo
cmp
sub
sbb
loope
cli
js
jns
push
jg
or
movs
sbb
outs
or
or
xchg
jecxz
xchg
xchg
dec
mov
sub
xlat
gs
mov
dec
(bad)
lds
mov
lea
fstp
(bad)
fstp
push
cmp
xchg
sub
fs
out
outs
aaa
std
cmp
xchg
aad
xchg
aam
and
enter
es
or
jne
pop
loop
adc
pop
(bad)
pop
or
aaa
dec
(bad)
retf
jnp
jmp
fdivr
scas
pop
pop
test
jo
jg
push
jl
cmp
xchg
add
shr
es
push
push
mov
ret
ret
dec
js
adc
repz
jl
push
mov
sub
add
sahf
(bad)
sub
push
lods
call
aas
mov
mov
inc
mov
dec
jp
cdq
js
cli
jg
push
sbb
dec
out
out
(bad)
loope
sub
dec
xchg
cmove
nop
call
cmps
shl
cmp
(bad)
fsub
(bad)
adc
outs
jno
or
ja
cdq
addr16
cmps
push
cmp
add
jecxz
or
retf
cli
fld
rcl
neg
jle
pushf
loopne
loopne
pop
or
nop
out
mov
pop
pop
outs
mov
push
fs
jbe
into
pop
xor
sti
jle
pop
jp
xchg
arpl
or
cmc
pop
mov
jnp
sbb
cld
xchg
sbb
push
int
ja
add
into
pop
iret
fidivr
pop
rol
mov
ret
xchg
es
push
add
add
and
stc
or
repnz
mov
loope
mov
xor
shr
movs
nop
leave
cmp
jae
and
sub
xor
ins
mov
jae
stc
pop
fdivr
test
int
mov
mov
cmp
add
mov
leave
fnsave
(bad)
aas
xchg
cdq
and
sub
inc
push
xchg
std
and
and
neg
xor
jmp
out
xchg
adc
lods
fmul
popa
ins
ins
frstor
push
lods
fwait
bound
mov
(bad)
adc
mov
sbb
cli
jle
mov
std
sub
in
mov
xchg
mov
xchg
adc
mov
mov
sbb
(bad)
(bad)
js
fwait
mov
jbe
mov
push
ins
sti
sbb
sbb
call
mov
je
sahf
ret
mov
mov
enter
js
pop
xchg
xor
mov
loope
scas
data16
cmps
xchg
push
and
loop
in
jecxz
inc
test
(bad)
loop
mov
out
(bad)
dec
aaa
jb
adc
loopne
jl
scas
lea
test
push
in
imul
out
xor
adc
xchg
into
and
pop
rcl
inc
cwde
mov
std
add
ror
push
int
dec
jle
clc
dec
leave
jle
xor
jle
xlat
xor
data16
and
inc
pop
add
mov
aas
daa
push
ins
xor
add
inc
push
jae
(bad)
mov
addr16
xor
in
push
popf
out
leave
and
outs
movs
cld
test
jb
jno
add
bound
or
sbb
jg
(bad)
add
out
out
outs
mov
push
add
mov
jae
aas
add
sbb
js
mov
xchg
into
pop
pop
repnz
cmp
push
mov
shl
psubsw
sar
sub
fsubr
loop
and
pop
neg
cmp
pop
sub
sub
test
add
shl
mov
xchg
gs
stc
mov
mov
mov
icebp
jbe
push
xchg
mov
sub
ret
mov
inc
cdq
and
jmp
pop
xor
(bad)
cmp
xor
xchg
xchg
imul
xchg
and
imul
div
jmp
out
inc
loope
push
dec
cdq
xchg
mov
out
and
mov
jg
mov
xor
dec
or
cmp
jmp
jg
mov
add
and
and
mov
gs
aaa
aaa
arpl
imul
xor
pushf
mov
mov
adc
nop
and
das
jne
cmp
or
push
jb
add
push
sti
(bad)
stos
shl
pushf
rol
leave
sub
jp
xlat
mov
mov
or
jecxz
inc
sbb
xchg
jl
sub
rol
ss
and
(bad)
push
lods
cmp
int
sbb
lds
bnd
popa
mov
pop
clc
and
xchg
jnp
pop
jle
(bad)
and
inc
das
pusha
mov
lahf
mov
call
data16
dec
shl
movs
ins
cli
sbb
mov
loop
movs
push
fwait
cmps
ret
movs
ret
sbb
and
adc
dec
repnz
shl
and
imul
cmovle
adc
fs
repnz
and
neg
mov
sbb
lea
loopne
lahf
xchg
imul
xchg
xchg
xlat
dec
div
fstp
ret
lods
stc
dec
adc
jns
je
xchg
loopne
jge
sub
outs
sub
fcom
(bad)
arpl
cmc
cmp
pusha
cmp
jbe
retf
or
and
pop
jnp
fsub
cmp
xchg
pop
xchg
ja
pop
(bad)
loopne
popf
cmp
data16
ss
js
mov
inc
jl
lds
cli
in
push
sti
pop
inc
xchg
ja
sbb
mov
cmp
arpl
xor
loopne
icebp
jne
mov
inc
repz
xchg
icebp
lahf
sub
int3
inc
ins
cmp
push
js
scas
jae
inc
push
aaa
outs
(bad)
ret
pusha
cmc
mov
adc
shl
scas
outs
xchg
fcomp
xchg
rol
xchg
dec
mov
in
fldenv
aas
fstp
out
mov
loop
arpl
sbb
enter
cmp
cmp
add
jo
jno
pop
fist
retf
mov
mov
ins
xchg
mov
fisubr
jp
jns
std
cmp
xchg
xor
pop
js
call
inc
adc
lods
cmp
and
pop
bound
fisttp
pushw
fsub
gs
push
repz
js
popa
mov
cdq
sub
mov
sub
cdq
pop
fimul
xor
and
add
fnsave
(bad)
jmp
int3
(bad)
pop
ss
daa
leave
imul
mov
cmp
ror
sub
enter
std
aas
sbb
das
cdq
sbb
push
lds
mov
xchg
jae
mov
movs
call
jb
and
xor
or
pop
lods
pop
fdivr
mov
adc
xchg
into
repnz
mov
int3
ret
fimul
jno
push
(bad)
xlat
jp
neg
xchg
pop
push
xor
pop
xchg
xchg
popf
sbb
in
clc
lea
in
and
jle
add
cwde
ins
outs
ds
sahf
addr16
or
(bad)
dec
in
pop
xchg
cld
xchg
fcomip
sbb
and
lock
sahf
es
pop
ret
repnz
jmp
call
fisub
inc
xor
ins
loopne
out
mov
cmp
movs
gs
shl
sub
xor
in
push
dec
movs
xchg
xor
movs
(bad)
pop
inc
call
mov
jl
test
or
add
outs
imul
rep
push
sbb
inc
scas
aaa
movs
mov
lods
mov
pop
sub
popf
cmps
out
add
in
cmp
arpl
dec
ss
fdiv
jecxz
sbb
pop
pop
cmp
jle
test
mov
cmp
clc
scas
mov
fnstsw
inc
cld
(bad)
jne
enter
popa
adc
fimul
iret
ds
add
jo
mov
(bad)
pop
mov
pusha
cmps
cwde
mov
push
xor
dec
jg
(bad)
jle
fs
mov
mov
out
add
and
mov
fwait
add
and
jmp
mov
pushf
arpl
cwde
jle
psubd
pop
je
jb
ins
add
sbb
jbe
test
xchg
adc
adc
or
cmc
or
mov
fstp
ret
mov
mov
pop
xchg
(bad)
es
bound
push
sbb
inc
adc
out
jnp
jno
cdq
and
inc
ins
jno
push
xchg
xor
sbb
(bad)
add
sub
ret
push
ror
jno
dec
cmp
rcl
popa
pop
xchg
xor
dec
in
mov
ins
lock
imul
jge
out
sub
pop
pop
and
xor
inc
into
pop
jb
popa
pop
xchg
fisttp
loope
in
aas
add
adc
inc
bound
dec
iret
es
cmc
rol
pop
pop
inc
std
xchg
scas
sbb
xor
xchg
pop
push
add
dec
adc
dec
lock
stos
mov
adc
push
or
mov
mov
jg
inc
mov
repz
popa
cmc
xchg
xchg
mov
leave
imul
(bad)
nop
push
ja
out
pop
ja
in
push
mov
jmp
xor
fsubr
retf
xor
jo
xchg
pop
sbb
les
inc
dec
mov
pop
xor
xchg
pop
retf
(bad)
adc
push
pop
pop
jmp
push
ins
xchg
aaa
popf
scas
pop
jo
push
push
mov
clc
xor
call
and
jmp
mov
adc
or
cmp
cmc
mov
mov
out
cmps
cmps
(bad)
fdiv
pop
in
out
jle
mov
(bad)
mov
mov
cmp
xchg
fxch
mov
(bad)
jl
push
xor
jge
in
inc
mov
int
fs
imul
push
mov
in
outs
fnstsw
jo
popa
mov
outs
mov
cwde
ret
sub
ds
outs
sub
pop
test
ja
fdivr
clc
and
or
repz
jl
sti
and
add
and
int
sahf
pop
jnp
mov
jb
jg
shl
or
mov
jo
neg
jb
dec
pop
mov
inc
mov
sbb
mov
jmp
dec
(bad)
inc
and
xor
lahf
push
aad
aaa
loop
mov
fdivr
test
mov
xor
pop
mov
mov
cwde
outs
jns
rol
std
mov
aaa
sbb
int3
data16
lock
add
mov
cmp
repz
inc
enter
in
add
shl
mov
aaa
dec
cmp
repnz
cwde
mov
add
fisubr
mov
pop
lods
fld
ins
mov
fcmovu
das
pop
mov
imul
cmp
pand
cs
xor
xchg
jae
shr
dec
shl
adc
xor
aas
not
and
pop
loope
aas
push
cmps
xlat
dec
sub
mov
idiv
mov
addr16
mov
out
sbb
repnz
outs
call
jle
std
xlat
adc
xor
fsincos
test
dec
div
mov
xlat
movs
(bad)
adc
sbb
call
sub
xchg
dec
lahf
xchg
or
out
(bad)
push
jo
mov
mov
lahf
sar
xor
fisubr
jno
out
in
cmp
daa
leave
es
mov
push
movs
popa
add
or
push
sti
sti
scas
lahf
jmp
outs
fwait
retf
add
(bad)
(bad)
push
(bad)
mov
(bad)
in
jns
xor
leave
jae
or
inc
dec
call
cmp
fsub
neg
dec
jno
push
ss
sbb
sub
pop
sahf
push
dec
cmp
xlat
test
mov
div
adc
scas
imul
sahf
retf
and
add
ret
and
sbb
sbb
aad
pop
and
shl
(bad)
jo
lods
pop
jnp
adc
(bad)
and
add
inc
cmp
mov
pop
lods
mov
int
jae
add
sub
cmps
lods
lock
in
adc
mov
ret
push
add
pop
push
shr
les
push
inc
and
test
inc
inc
es
dec
jno
aaa
(bad)
sbb
xchg
test
pop
retf
stc
push
mov
push
out
adc
lods
cmp
dec
xor
lahf
push
inc
xchg
push
ins
xchg
mov
loop
loop
dec
out
stos
adc
cmp
and
fst
icebp
shl
mov
inc
mov
adc
push
jl
jno
in
mov
push
fs
test
jbe
stos
dec
adc
and
cmps
loope
mov
mov
sbb
out
add
mov
push
out
mov
daa
xchg
hlt
mov
in
shl
and
rcr
aaa
push
leave
and
jle
pop
cs
cmp
xchg
dec
and
jmp
js
fst
mov
add
inc
add
inc
add
dec
lock
or
or
or
or
or
or
or
adc
loope
je
dec
add
out
mov
xchg
or
aad
pop
mov
add
loope
sbb
ja
inc
and
dec
sbb
ret
add
pop
ror
cmpps
jbe
jo
and
or
repz
in
mov
sub
push
cmp
pop
sbb
sub
jae
xchg
push
mov
shl
repnz
or
nop
cmp
movs
inc
jno
cli
mov
jae
xchg
push
inc
in
scas
or
loopne
dec
and
cmp
retf
push
ret
mov
pop
imul
aas
jmp
jp
movs
xlat
inc
lahf
mov
sub
loopne
movs
sbb
or
and
push
add
retf
jne
int
and
add
or
or
sub
sti
and
xlat
test
add
inc
add
test
loope
push
test
adc
and
aas
test
shr
inc
inc
jno
movaps
adc
add
dec
push
add
adc
adc
test
pusha
ror
pop
adc
and
add
inc
or
or
or
or
xor
dec
imul
add
or
or
fidivr
add
inc
add
retf
in
dec
mov
inc
enter
mov
inc
rdmsr
pop
xor
in
loope
mov
sbb
(bad)
jo
ud1
mov
sub
pop
fild
jle
inc
or
pop
inc
pop
cld
xor
bound
push
jne
leave
(bad)
xchg
adc
lahf
push
push
imul
repnz
hlt
clc
mov
(bad)
arpl
jg
sti
scas
imul
push
lods
xchg
in
push
not
push
add
stc
mov
push
test
jbe
cmp
adc
adc
xchg
inc
mov
test
dec
lods
lea
movs
ins
sub
ss
dec
cmc
mov
mov
dec
(bad)
ins
stos
imul
inc
fs
xchg
sbb
ror
dec
sbb
jae
xchg
dec
pop
add
xchg
out
in
jle
cwde
sbb
push
ror
call
cmp
fistp
adc
pop
mov
(bad)
sub
cmp
cld
lods
jb
iret
jmp
dec
dec
outs
add
idiv
outs
out
enter
cmp
je
outs
inc
scas
loope
shr
jb
test
imul
pop
jmp
cmp
or
mov
inc
adc
ror
dec
retf
adc
sbb
push
enter
call
std
push
popa
fwait
add
sbb
cmp
ins
push
lahf
sub
(bad)
ja
jp
rol
pop
not
fild
in
or
(bad)
mov
out
fnstenv
jo
aad
fcomp
add
pop
and
lock
fwait
out
mov
xlat
cdq
sbb
imul
loope
jl
loope
pop
mov
pop
pushf
fmul
mov
ret
jmp
int3
rcr
cmp
or
pop
lock
aaa
xchg
(bad)
xchg
jns
(bad)
test
shl
fstp
xor
push
ins
pop
movs
lea
inc
push
push
es
into
xor
jo
and
jmp
xchg
(bad)
and
fisubr
fmul
or
cs
or
cmp
(bad)
sbb
popa
mov
sbb
and
clc
mov
dec
imul
call
(bad)
repz
cmc
pop
in
ror
xor
and
(bad)
fsubr
adc
jl
test
repnz
out
fwait
mov
scas
dec
xchg
mov
cs
test
shl
loop
mov
inc
xchg
in
sub
mov
xor
jle
adc
out
xlat
inc
cs
jo
(bad)
ret
ds
xchg
mov
int3
xchg
ss
and
dec
xor
dec
fistp
push
xchg
pop
sub
imul
mov
jbe
xchg
and
mov
jg
mov
mov
mov
aam
jl
xchg
(bad)
mov
mov
mov
xor
retf
cmps
mov
scas
xchg
add
in
mov
cmps
fsubrp
inc
adc
arpl
cmp
enterw
inc
dec
jnp
pop
lahf
or
in
jb
ret
popa
mov
cs
xor
inc
out
sbb
iret
std
dec
sbb
neg
aas
hlt
cmp
shrd
xchg
jbe
pop
push
outs
not
push
cmc
ins
lea
mov
xchg
leave
sbb
loope
movs
push
sub
pop
jmp
sub
inc
jae
inc
js
loope
cmp
in
fs
sbb
icebp
mov
repz
jmp
in
xchg
mov
pop
inc
or
cmps
and
mov
add
iret
icebp
add
lods
mov
je
pop
gs
scas
adc
jbe
jns
push
retf
jg
push
aad
mov
sub
mov
enter
push
push
pop
and
cli
cmp
mov
pop
xor
mov
mov
sub
sub
in
stos
in
test
dec
iret
loope
test
xor
push
adc
jle
js
jae
cmp
cmc
adc
test
push
scas
outs
cmp
movs
mov
enter
inc
pop
(bad)
sbb
mov
sub
sbb
pop
push
rcr
shl
sar
scas
mov
mov
das
(bad)
mov
or
cmp
jge
sub
push
nop
add
pop
in
mov
sub
adc
pop
jns
mov
jnp
mov
imul
add
ins
imul
imul
xchg
std
inc
push
cld
stos
inc
mov
mov
das
sbb
mov
xchg
imul
adc
push
sub
fidiv
pop
mov
daa
cmc
cdq
dec
xchg
lods
sub
imul
jmp
jmp
jb
in
xchg
outs
xchg
(bad)
adc
inc
aad
icebp
neg
scas
cmps
outs
or
mov
push
xor
jge
inc
inc
adc
mov
out
mov
push
mov
pop
xchg
rcl
xor
cmc
pop
inc
sub
call
inc
jmp
or
lods
sahf
push
mov
int
xor
jns
leave
xchg
stc
xor
std
inc
push
cmps
mov
(bad)
sub
repz
add
stc
lods
mov
mov
mov
inc
jnp
loopne
pop
leavew
and
ins
enter
cmp
inc
pop
sbb
sub
jmp
call
(bad)
into
retf
or
mov
out
pusha
and
cs
mov
retf
add
add
pop
arpl
mov
loopne
xchg
(bad)
sbb
xor
je
rol
arpl
in
and
cmp
mov
mov
adc
jmp
in
lock
inc
and
cmp
ins
lods
xchg
add
aad
fsubr
movs
ficomp
xchg
ds
data16
pop
jno
fsub
xchg
(bad)
out
icebp
addr16
adc
loop
pop
xlat
push
jno
stos
mov
mov
mov
int
dec
jbe
pop
cmp
xchg
sti
movs
jne
xor
(bad)
(bad)
xor
inc
out
xchg
jg
jmp
cmp
ficomp
xchg
je
enter
cmps
fist
or
bound
pop
mov
nop
fldcw
sbb
jne
xlat
jg
push
fs
loop
(bad)
add
mov
in
scas
xchg
and
pop
or
mov
pop
pop
call
cwde
clc
out
popa
mov
jmp
xchg
pop
adc
push
dec
(bad)
push
in
movs
lods
aas
mov
repnz
out
inc
stc
jl
xchg
lds
clc
or
cmp
adc
jmp
xor
popa
adc
iret
sbb
xor
push
dec
popa
sti
daa
mov
cmp
iret
mov
popa
leave
mov
das
ins
ins
paddusb
cmps
in
mov
inc
out
cmp
ss
int
clc
inc
inc
outs
push
xchg
ds
dec
pusha
jae
xchg
mov
int
sahf
cmp
push
je
(bad)
jno
cdq
rcr
sbb
scas
arpl
into
(bad)
mov
adc
mov
jmp
push
in
das
js
and
hlt
cmp
jns
fs
std
(bad)
add
jp
xor
lock
xor
int3
lods
ins
scas
and
lea
icebp
test
data16
pop
cmps
mov
es
mov
add
stos
cmc
lea
dec
sub
dec
(bad)
scas
stc
pop
outs
dec
retf
stos
leave
stos
fs
arpl
imul
sub
das
pop
xchg
das
xor
mov
fcom
inc
nop
lea
out
int
jo
mov
mov
scas
adc
xchg
and
mov
inc
cmp
mov
std
xchg
bound
cwde
mov
ds
mov
outs
pop
sbb
ss
stc
outs
int3
adc
movs
jnp
pop
mov
push
mov
int
adc
adc
pop
rol
xlat
push
aaa
pop
aam
out
loop
(bad)
xchg
sbb
and
repz
sar
add
xor
hlt
cmp
push
icebp
movs
xchg
and
push
sbb
out
xchg
mov
in
adc
mov
mov
and
fsub
fdivr
add
scas
sub
cli
dec
pushf
das
cs
or
cmp
cmc
outs
cdq
lock
xchg
sbb
cld
into
jns
addr16
and
add
add
cli
add
jb
mov
sbb
pcmpeqw
icebp
push
scas
push
daa
mov
shl
add
fdivrp
jge
cld
scas
dec
movs
imul
sub
inc
mov
in
(bad)
mov
out
pop
loop
jle
xor
pcmpgtw
xchg
ficomp
add
mov
(bad)
clc
fdivr
jns
shl
mov
dec
ror
push
int3
push
pusha
iret
xchg
xchg
int3
leave
and
sbb
ds
lds
fcmovb
cmp
mov
test
sti
sub
aam
(bad)
stc
sbb
cdq
add
(bad)
cli
sbb
push
pop
sbb
add
ins
data16
jmp
cmp
cmps
sahf
bound
inc
push
add
push
loopne
std
or
xchg
xor
xchg
push
mov
aas
and
pop
(bad)
xor
push
pushf
addr16
xchg
dec
xchg
dec
mul
scas
neg
test
fst
or
lock
movs
movs
outs
push
(bad)
cmp
aam
call
in
adc
jmp
aas
retf
jge
pop
jl
in
dec
in
lahf
movs
pushf
mov
mov
push
mov
mov
mov
loop
cs
cmps
leave
mov
xchg
mov
dec
arpl
pop
xor
jo
int3
(bad)
mov
jmp
mov
jg
dec
(bad)
push
aam
out
inc
ret
out
add
mov
movs
pop
stos
(bad)
mov
shl
push
and
test
sbb
ja
ret
cmp
jne
pusha
dec
jmp
test
mov
fist
stc
dec
ins
mov
adc
arpl
mov
imul
test
sub
cmp
test
or
outs
inc
xor
out
cs
jecxz
dec
fwait
adc
pop
scas
mov
bound
sbb
xlat
(bad)
pop
cmps
mov
fs
fdivp
outs
add
xchg
(bad)
jmp
cmp
cmp
add
xor
cs
test
movs
lds
scas
mov
mov
xchg
fist
or
sbb
fs
pop
std
(bad)
dec
xchg
jmp
sbb
(bad)
imul
int3
out
xor
cdq
mov
int
or
add
mov
xchg
jp
loopne
outs
outs
mov
jo
test
loope
cmp
outs
xchg
adc
adc
mov
clc
je
pop
dec
mov
shl
pop
xchg
pop
iret
xchg
inc
cld
ror
add
dec
pop
js
jae
push
icebp
fs
jmp
stos
fstp
push
jp
sub
fcmovb
inc
mov
sub
or
mov
mov
ret
mov
fstp
bound
pop
fbld
loope
jae
mov
mov
cmp
xchg
ds
cmps
cs
ror
mov
cli
stos
sbb
sub
(bad)
xor
cdq
ret
mov
jg
fldenv
jmp
pop
sbb
mov
mov
mov
outs
and
pop
mov
cmps
xchg
cmps
retf
mov
cdq
xchg
adc
mov
xchg
nop
rcl
adc
aas
xchg
test
inc
adc
sub
in
add
dec
ins
add
lods
cmp
jns
ret
xchg
inc
aad
cmp
sti
leave
jbe
jecxz
xor
psubw
cwde
sti
xor
cli
pop
rol
dec
xchg
and
inc
push
fs
cs
xchg
jmp
fsubr
jns
imul
pusha
fimul
lods
int3
xchg
dec
loope
ja
cmp
jb
mov
bound
mov
adc
sub
cmp
repnz
repnz
ins
arpl
aad
mov
or
gs
xchg
stc
dec
pop
fidivr
jge
cmp
inc
sbb
out
add
adc
push
scas
xchg
push
cwde
div
cld
shl
inc
or
fs
inc
cmps
test
loope
outs
jnp
jns
jmp
call
jae
cdq
xchg
or
fs
jnp
mov
inc
mov
fmul
lods
push
mov
xor
(bad)
mov
nop
push
in
mov
jmp
mov
cli
fild
xchg
dec
push
(bad)
cmps
aam
stc
xor
(bad)
xor
ins
iret
imul
mov
shl
aas
sub
inc
popf
ret
jp
push
add
mov
push
mov
push
mov
sub
and
mov
cwde
sbb
add
ja
and
jmp
(bad)
adc
dec
mov
jp
sbb
xchg
push
icebp
xor
xchg
pop
addr16
shld
and
das
add
mov
ficomp
mov
cdq
fwait
ret
pop
mov
fist
(bad)
ss
push
cli
pop
rcl
retf
mov
lods
fcomi
jp
mov
xor
sar
dec
adc
je
sbb
push
inc
mov
in
cmps
fcmovbe
xor
dec
movs
(bad)
jne
imul
push
imul
int3
or
(bad)
ja
sub
call
push
retf
ds
cmps
pop
dec
les
mov
sub
and
jecxz
adc
sbb
push
inc
ss
adc
mov
daa
(bad)
mov
cmps
test
(bad)
aas
and
cmp
(bad)
mov
jg
adc
out
data16
ror
std
xchg
push
jmp
div
xchg
(bad)
mov
in
mov
xchg
pop
add
sti
scas
movs
scas
in
enter
mov
iret
push
xor
jge
push
icebp
dec
xchg
sbb
mov
icebp
mov
cmp
ret
(bad)
mov
mov
jmp
(bad)
dec
je
jecxz
mov
inc
outs
dec
push
(bad)
jl
xchg
mov
std
push
mov
cmp
sub
sub
add
inc
fst
mov
pop
mov
push
or
pop
pop
inc
sbb
cs
sbb
mov
xor
adc
add
(bad)
mov
imul
ret
ret
sbb
pop
je
push
out
mov
rcr
jae
add
stos
retf
out
add
jbe
or
mov
add
imul
xor
sbb
sbb
(bad)
adc
mov
popa
lods
rcl
jmp
push
je
out
mov
dec
mov
jp
test
out
fstp
cmp
inc
sub
mov
jnp
out
adc
mov
or
loopne
stos
inc
rol
cmps
stos
xor
xchg
and
nop
sti
xor
sub
outs
add
add
sub
aam
push
stos
cdq
test
inc
fimul
mov
fsubr
dec
sahf
out
jne
fsub
movs
test
xchg
cmp
lods
fcmovb
or
aad
(bad)
push
mov
xlat
(bad)
(bad)
stos
lds
stos
mov
jl
sbb
xor
lods
push
mov
and
sbb
or
ins
mov
or
xchg
mov
stos
dec
dec
into
fidivr
je
mov
cmc
cmp
mov
mov
test
add
and
nop
movs
inc
ret
push
and
or
stos
adc
inc
adc
inc
adc
inc
adc
inc
adc
dec
mov
and
push
sbb
inc
cmp
push
sbb
xchg
sub
ror
sub
daa
mov
pop
retf
fsubr
jmp
sub
or
mov
mov
push
dec
mov
xlat
cmp
pusha
xor
push
fsubr
xchg
or
add
lods
adc
inc
inc
push
add
iret
cmc
adc
aam
sub
adc
mov
jecxz
mov
cmc
xor
lock
cmp
push
div
mov
test
into
loopne
or
sbb
sub
mov
push
fist
ficom
(bad)
call
push
repnz
pusha
outs
in
mov
fld
pusha
add
aam
sub
jne
jno
shr
sub
cmp
or
adc
sub
out
(bad)
sub
cmp
xchg
in
je
(bad)
pusha
sbb
test
or
or
and
or
or
inc
sub
adc
xchg
push
out
or
dec
cmp
add
push
dec
aad
or
add
and
nop
add
test
in
or
xor
and
add
or
imul
add
movs
and
ror
or
push
and
or
sti
je
adc
and
inc
nop
mov
or
or
or
or
or
or
or
xchg
pop
(bad)
je
jno
cmp
mov
dec
into
cs
dec
or
or
jnp
adc
sub
inc
or
daa
cmp
pop
jne
lea
daa
xchg
mov
imul
int3
xchg
mov
mov
mov
outs
aad
retf
xchg
mov
push
es
mov
daa
out
jnp
pop
inc
jns
push
adc
inc
movs
rol
or
sbb
jmp
ficom
push
mov
call
in
mov
push
add
fbld
lds
jne
sbb
imul
cmp
xor
fld
or
sub
int
add
xor
pop
xor
bnd
pop
loop
ja
(bad)
sahf
lea
jle
arpl
jecxz
xchg
mov
push
and
push
push
loop
loopne
dec
scas
mov
add
xchg
loopne
jb
rcr
inc
cli
adc
ins
sahf
dec
pop
aaa
add
xlat
pop
pop
xchg
push
pop
daa
add
mov
pminsw
lahf
neg
add
xor
xchg
or
fstp
xchg
push
adc
imul
add
pop
jbe
push
retf
mov
rcl
imul
lods
or
add
add
dec
dec
mov
cdq
adc
and
in
lds
dec
mov
inc
or
movs
jo
inc
and
push
loope
push
in
jp
cmp
sbb
jg
push
int
jno
xor
pusha
ins
out
outs
jb
mov
mov
repnz
dec
es
pop
call
sbb
jp
(bad)
sbb
jae
enter
outs
jno
inc
and
sub
jmp
fs
sub
sbb
imul
ss
push
aas
adc
out
adc
sar
loopne
inc
jb
mov
cmp
mov
pop
test
cli
jl
mov
(bad)
repnz
icebp
lock
push
fs
jnp
outs
std
out
sbb
outs
mov
cdq
sbb
mov
mov
loope
dec
mov
jge
mov
iret
cmps
cwde
loopne
jmp
pop
arpl
stos
mov
clc
(bad)
imul
gs
call
stc
push
in
in
not
pop
int3
dec
rcr
cmp
jnp
adc
jecxz
mov
repz
or
sahf
and
or
scas
stos
in
stc
ror
lea
xchg
and
loop
test
lds
fsub
xchg
sub
push
loope
retf
ja
adc
add
stos
sti
cs
das
cmp
in
js
lahf
cs
outs
push
jle
pusha
dec
(bad)
cdq
or
sub
enter
fwait
and
push
arpl
(bad)
lock
pusha
iret
mov
cmps
dec
sahf
ins
call
mov
cmps
mov
add
or
out
outs
cdq
sub
sbb
jbe
stc
pop
push
sbb
jo
xchg
dec
ja
scas
mov
pop
cli
cs
imul
loope
xor
fucomi
scas
mov
push
and
cmp
add
cld
mov
jmp
mov
out
retf
in
dec
pushf
stc
push
ficomp
leave
and
jecxz
mov
mov
lods
xchg
leave
test
jae
sbb
retf
and
xor
xchg
cld
mov
add
adc
ss
pushf
leave
cmp
jne
adc
sub
xchg
in
cli
inc
retf
and
inc
stos
es
fbld
jns
sbb
adc
mov
in
lods
pop
ins
push
arpl
adc
in
mov
aaa
into
ftst
ret
pop
mov
out
mov
sub
mov
add
fldcw
ret
mov
imul
loope
cmp
iret
or
ins
in
inc
xchg
cmp
jle
leave
xchg
or
push
dec
jmp
adc
popa
in
outs
sar
neg
(bad)
cmp
and
pop
adc
inc
imul
mov
(bad)
sbb
sub
and
std
xchg
or
fst
jmp
(bad)
nop
sbb
cmps
adc
dec
sub
mov
push
push
xor
cwde
lahf
(bad)
mov
xor
mov
call
xor
inc
cdq
sbb
jmp
add
dec
or
mov
jmp
mov
adc
in
jecxz
mov
cmp
data16
loope
loope
sahf
leave
cmps
stc
cmp
mov
mov
cwde
cmp
cwde
call
jecxz
push
jmp
in
ss
fcmovbe
push
cmp
sub
mov
mov
fsubr
add
add
fisttp
inc
sub
out
dec
dec
xabort
ins
inc
imul
mov
add
cmps
out
mov
mov
sub
push
daa
stc
xor
cmp
mov
xchg
mov
mov
out
cmp
arpl
dec
inc
dec
dec
dec
cmp
daa
dec
pop
and
mov
cli
inc
not
iret
jnp
dec
push
test
mov
jg
mov
mov
sub
cmp
ss
sbb
sbb
or
lods
test
xchg
hlt
int3
xchg
cmp
popa
sbb
jnp
sbb
xchg
fldenv
(bad)
push
jbe
fmul
and
fnstsw
arpl
cdq
xchg
div
adc
imul
pop
cli
in
in
js
dec
lock
sbb
ror
mov
(bad)
cmp
adc
enter
lahf
and
in
cmp
jbe
test
or
(bad)
xor
or
imul
je
loope
jle
push
push
sbb
(bad)
xchg
into
add
mov
or
mov
sti
mov
int
pop
xchg
nop
stc
(bad)
dec
pop
leave
push
(bad)
mov
mov
lods
inc
cmp
(bad)
rcr
cli
dec
retf
nop
arpl
adc
sbb
js
(bad)
jecxz
ret
mov
test
and
cmp
call
ret
daa
movs
into
call
push
cmps
jmp
mov
int3
jge
nop
repz
lock
clc
jnp
(bad)
aad
arpl
xlat
outs
call
xor
sbb
ret
(bad)
inc
retf
rcr
outs
ds
fstp
ss
pop
push
mov
add
dec
shl
mov
pop
out
aas
call
cdq
loopne
push
xor
enter
push
and
pop
cmp
pop
mov
mov
ins
xchg
lahf
test
mov
daa
mov
gs
dec
daa
adc
sti
push
cmc
ins
pop
jne
jb
stc
movs
push
lea
rcr
nop
(bad)
out
in
stos
sti
sub
jnp
mov
ret
es
bound
push
mov
sub
xchg
xor
cdq
add
inc
cmp
fmul
scas
out
jle
xor
mov
es
push
into
cdq
mov
cmp
pop
pop
lea
xor
sbb
push
inc
jno
fadd
pop
ss
(bad)
ins
in
jge
bnd
xor
adc
ds
mov
jne
mov
jp
and
pushf
test
call
pop
outs
outs
jle
xchg
mov
ss
enter
adc
inc
imul
int
dec
aaa
retf
sub
ds
jne
loopne
push
mov
sbb
jns
mov
cwde
leave
(bad)
add
push
mov
jge
mov
pop
push
cmp
pop
and
aas
fnstcw
sbb
inc
movs
js
adc
jae
repnz
lahf
shr
inc
out
clc
pop
pop
mov
adc
push
into
in
mov
aas
pop
aad
cdq
xchg
cmp
shl
popf
sub
fdiv
movs
mov
pop
(bad)
dec
jnp
jp
xor
mov
retf
and
mov
mov
(bad)
enter
stos
push
retf
xchg
mov
inc
sbb
call
xchg
mov
je
je
inc
(bad)
in
sub
cmp
xchg
call
call
(bad)
(bad)
daa
(bad)
std
inc
bound
test
repz
les
cld
cmp
sbb
dec
sub
daa
inc
imul
jbe
nop
mov
push
aas
sub
and
dec
dec
inc
call
dec
dec
shl
aad
cdq
sbb
push
arpl
imul
xchg
jecxz
dec
xchg
imul
ret
xor
jecxz
ja
sahf
jmp
jp
dec
cwde
outs
mov
shl
(bad)
cmp
cmp
pop
cmps
inc
mov
ss
enter
iret
jno
sub
sbb
dec
and
sub
lahf
and
add
ja
jmp
push
jns
mov
bound
pop
add
cmp
dec
shr
cmp
test
mov
dec
or
jmp
push
(bad)
cmps
fwait
push
sahf
or
(bad)
call
inc
xchg
sbb
pop
ja
or
jns
add
ins
(bad)
mov
out
daa
ja
or
bound
jno
add
jmp
sub
and
stos
jns
xor
es
movs
es
pop
mov
retf
dec
(bad)
mov
fwait
data16
dec
outs
jl
inc
dec
popf
fwait
lea
push
mov
push
lock
sti
jne
jmp
repz
inc
mov
pop
pop
push
pop
ja
int
adc
dec
inc
sbb
cmp
push
push
mov
pop
cdq
push
jbe
xchg
jae
xchg
(bad)
sbb
repnz
sub
and
and
stos
or
(bad)
jb
clc
sar
dec
cmc
push
loope
push
mov
pop
repz
or
jns
xchg
repnz
dec
fidivr
dec
mov
jae
test
std
dec
mov
inc
je
addr16
sub
cmp
jmp
dec
adc
sub
fstp
fwait
xchg
popa
js
into
ja
test
and
push
mov
rol
inc
mov
fldenv
test
in
js
cs
addr16
xor
sbb
aam
sub
jle
pop
add
dec
nop
inc
repz
enter
shr
mov
mov
fimul
popf
inc
mov
lods
shr
stos
jne
mov
dec
jno
xor
mov
sar
stc
push
sub
push
pop
not
mov
adc
sub
rcl
je
mov
pop
jp
mov
mov
fsub
xlat
outs
fidiv
adc
sbb
stos
retf
(bad)
repnz
mov
cli
add
jnp
cmp
jmp
shl
and
gs
mov
pop
mov
fimul
inc
xchg
cmp
movs
pop
pop
js
inc
ss
mov
pop
ins
mov
cmp
mov
imul
fwait
mov
fadd
jge
mov
stos
push
xchg
out
cdq
int
mov
or
pop
enter
xor
push
stos
loope
jae
jb
clc
das
outs
out
dec
cmp
movs
jae
ins
adc
mov
and
ja
or
test
xchg
retf
sub
push
jne
daa
add
sbb
ja
mov
out
cmp
dec
outs
ins
xchg
push
cmp
mov
sbb
mov
pop
out
test
das
das
jmp
fsubr
push
repnz
sub
inc
cmp
sub
inc
pusha
ds
inc
add
cmps
mov
and
mov
xor
or
popa
fsubrp
ins
or
hlt
mov
popf
lock
jnp
aad
cld
sub
pusha
loopne
mov
mov
push
adc
cmp
push
adc
mov
adc
fmulp
inc
sahf
or
ret
or
test
call
rcr
mov
pop
pop
mov
push
pop
enter
outs
fisttp
in
das
cmc
push
adc
fidivr
fbstp
pop
std
movnti
pop
cmp
cmp
shl
icebp
inc
iret
add
pop
cs
push
dec
push
adc
test
(bad)
or
lods
cwde
jp
repz
lods
outs
cmp
addr16
add
xchg
in
mov
jo
mov
mov
xor
shr
lea
movs
sti
test
loope
sar
jo
jo
mov
jmp
jns
adc
out
cmp
cmps
fimul
in
inc
test
out
jae
mov
cmp
repnz
push
sbb
mov
fs
pop
adc
std
aas
test
xor
jge
mov
push
dec
ins
outs
mov
lods
js
sub
and
outs
jl
in
iret
cld
cs
movs
lahf
xchg
and
mov
push
cmp
aas
sub
sti
lods
dec
sbb
retf
lea
xchg
or
loope
out
enter
mov
rcr
ins
add
jmp
dec
scas
jo
sahf
test
dec
sub
pop
add
adc
mov
fwait
inc
jne
(bad)
jecxz
mov
adc
inc
aam
push
js
test
jge
add
imul
mov
mov
scas
adc
cmp
pop
push
stc
pop
push
cmp
xor
jne
jb
in
ror
popf
imul
xor
aad
sub
pop
sbb
nop
cmp
mov
int
jae
and
add
xor
int
and
aaa
aam
jnp
sbb
push
mov
jns
push
mov
sbb
fwait
test
outs
ins
mov
xchg
xchg
mov
aad
inc
adc
push
cmp
sub
lds
repnz
shl
dec
mov
or
sub
out
fcmovu
ficomp
jge
mov
inc
pop
cmp
data16
add
pop
sub
arpl
push
cmp
push
cs
daa
(bad)
pop
scas
jae
out
sbb
ja
and
push
xchg
(bad)
pop
sbb
xor
pop
adc
xlat
adc
push
outs
aaa
xchg
mov
int
loop
add
dec
xchg
sahf
cmp
fmul
loopne
xor
fld
or
arpl
popa
shl
mov
je
cs
dec
and
sub
cdq
sti
sahf
outs
fst
popa
cmp
xchg
jmp
pop
push
mov
test
std
dec
push
call
cmp
push
popf
ror
int
push
push
xchg
popf
adc
call
xchg
cmp
cmp
fld
daa
mov
dec
sbb
jbe
(bad)
jne
cld
mov
and
inc
and
and
test
xor
push
jp
sub
adc
popf
lock
fidivr
add
mov
ins
dec
push
mov
call
sub
add
and
inc
mov
sar
in
xchg
pop
enter
test
add
in
push
call
push
add
push
add
test
adc
push
mov
test
dec
mov
jle
dec
test
cdq
and
test
aam
add
sti
test
xchg
jmp
or
daa
test
sub
aas
sub
in
ja
push
arpl
in
sub
sbb
leave
mov
or
test
sub
pop
dec
ins
in
test
lea
jns
hlt
test
loop
sbb
add
mov
in
inc
mov
push
fbld
jb
xchg
or
(bad)
push
ss
and
xchg
mov
inc
mov
cmp
nop
ds
imul
cmp
bound
sbb
ror
dec
dec
and
mov
in
xor
or
push
int3
outs
add
adc
nop
add
sahf
leave
es
and
adc
daa
adc
pop
adc
xchg
scas
cs
xchg
in
pop
jmp
inc
test
add
je
add
or
inc
pop
dec
xlat
or
add
and
sbb
ror
adc
sub
push
adc
loopne
enter
cld
daa
jl
and
loope
dec
mov
dec
sbb
mov
and
lahf
inc
pop
add
and
add
or
sbb
xor
xchg
outs
test
dec
dec
inc
add
and
test
aad
call
push
jge
inc
sub
jmp
je
pop
push
stos
rdtsc
fsubr
fimul
iret
push
cmp
adc
neg
jnp
btr
hlt
cmp
xchg
dec
retf
mov
sbb
retf
lea
xor
loopne
test
ret
jecxz
push
out
out
mov
sbb
xor
enter
sub
adc
ret
fs
stc
dec
retf
out
imul
cmp
fldenv
nop
mov
inc
sbb
out
jnp
mov
dec
pop
aam
aam
pop
ds
sbb
push
sub
cmp
pop
xchg
sbb
lock
xor
inc
pop
loopne
add
sub
mov
out
xor
xor
(bad)
adc
add
mov
jle
xor
dec
fdivr
add
in
lahf
cmc
adc
mov
adc
add
pop
push
loop
xor
cdq
and
loopne
sub
add
jno
add
adc
push
add
and
add
movs
ret
jno
mov
or
cmc
mov
loop
xchg
fdivr
lods
xor
mov
ficomp
hlt
std
push
les
(bad)
jnp
jl
outs
jecxz
jge
jmp
dec
les
xchg
enter
neg
fs
pop
rcr
push
adc
mov
fwait
inc
fbld
daa
retf
xchg
pop
aas
retf
pushw
ds
sub
mov
push
sbb
(bad)
call
push
jno
cmp
fcmovbe
(bad)
mov
loope
scas
xchg
add
rol
and
push
adc
mov
xchg
arpl
hlt
sub
loope
mov
aas
sbb
dec
(bad)
mov
mov
imul
pop
outs
sbb
test
cmp
xor
mov
ror
jo
jnp
aam
xchg
in
scas
nop
ret
sbb
xlat
popf
sub
mov
and
xor
mov
sar
scas
jbe
test
pushf
daa
ss
rol
jl
mov
js
or
stc
pop
push
into
leave
and
out
sti
scas
adc
xchg
(bad)
cs
pusha
nop
jmp
iret
adc
out
cmp
add
push
ins
dec
push
arpl
mov
sub
iret
mov
arpl
scas
cmp
mov
pop
mov
or
es
out
mov
sti
cs
movs
cmps
iret
mov
loop
mov
and
and
mov
test
fnsave
fsubr
mov
add
dec
icebp
sbb
and
or
int3
lea
jne
jg
popf
stos
mov
or
daa
loope
pavgw
test
mov
xchg
mov
mov
sbb
xchg
es
into
push
sub
jp
jo
push
(bad)
call
enter
ja
bound
out
sahf
xor
mov
push
sub
adc
fwait
movs
or
push
cmp
aad
aaa
sbb
repnz
hlt
ins
shl
sbb
xchg
pop
out
imul
int
cld
leave
or
add
out
xchg
cmp
xchg
sbb
add
aad
xor
pop
bswap
xor
fild
fstp
stc
les
hlt
retf
mov
sub
jl
xchg
push
arpl
pop
sub
jnp
sub
cli
xchg
add
lods
addr16
ss
int3
in
pusha
pop
add
add
out
cmp
out
or
retf
aam
retf
mov
jno
fbld
les
les
push
fisttp
add
fdiv
ret
sahf
inc
ret
loope
repnz
push
stc
and
jne
mov
xor
addr16
jns
jg
(bad)
imul
push
arpl
imul
or
outs
in
jnp
data16
sub
in
(bad)
and
mov
add
jle
retf
xchg
xchg
sub
add
mov
test
xchg
lea
(bad)
adc
sub
stc
cs
repz
mov
pcmpeqw
pop
sbb
dec
clc
iret
stos
sar
in
int
stc
test
scas
jle
fwait
sbb
jp
(bad)
rcl
fcomp
jmp
sub
rcr
push
clc
pop
jge
inc
(bad)
cmp
push
xchg
cmp
xchg
push
out
mov
nop
and
and
xor
xor
mov
mov
arpl
sub
fisttp
repz
add
mov
bound
mov
mov
iret
xchg
sar
arpl
loop
outs
xor
cli
test
movs
ins
fst
cmp
jle
sbb
jg
mov
nop
int
or
xlat
and
test
les
mov
sub
clc
push
adc
push
lds
dec
sbb
sub
pop
cwde
mov
int3
cmp
call
fistp
test
test
les
and
inc
sub
(bad)
fisttp
mov
mov
not
fwait
iret
pop
add
movs
aas
xchg
sub
fs
xchg
aas
repz
jmp
test
or
add
adc
sbb
pop
sbb
sbb
pop
je
data16
fld
jge
push
add
jbe
fnstcw
scas
adc
push
sub
xor
call
mov
mov
repnz
cmps
out
xor
mov
out
mov
xor
idiv
retf
movs
stos
dec
and
dec
and
mov
loope
iret
mov
mov
sbb
inc
adc
arpl
stos
arpl
dec
pop
int3
fistp
sbb
pop
popf
in
sbb
clc
jb
cmp
adc
out
push
ins
je
stc
cmp
dec
(bad)
fucomi
push
xchg
push
pushf
jl
mov
sub
outs
and
mov
aad
mov
and
lahf
gs
fistp
inc
mov
mov
pop
sbb
cli
inc
test
nop
inc
fldenv
shl
shl
jo
pop
jmp
cmps
nop
(bad)
sub
ficom
add
imul
push
(bad)
ins
data16
rcl
(bad)
test
jb
out
cmp
inc
mov
aas
imul
xor
and
lds
sub
cwde
(bad)
ss
cmp
jmp
stc
cs
adc
dec
adc
(bad)
cmp
repz
sahf
jecxz
shr
lods
das
mov
lods
fdivr
sbb
sbb
in
mov
jmp
arpl
(bad)
inc
sub
out
adc
(bad)
xchg
push
push
xor
jbe
rcr
mov
fcmovbe
inc
jge
daa
cmovle
pop
in
and
push
cmp
stos
popf
loop
aaa
xchg
sbb
jb
lock
jns
xchg
xchg
mov
loopne
fwait
inc
jmp
hlt
(bad)
cmp
fcmovnu
jp
push
mov
add
int3
jbe
sub
dec
cli
(bad)
stos
xchg
xor
or
pop
mov
fisttp
and
ds
cmp
sbb
sbb
mov
mov
arpl
add
jmp
sbb
xor
xchg
in
hlt
mov
jae
jae
les
mov
out
loopne
xor
xor
mov
xchg
dec
in
jp
leave
addr16
xchg
(bad)
dec
and
mov
dec
fcomi
cdq
std
aas
sbb
fs
mov
pushf
test
leave
sub
xor
int3
(bad)
icebp
jl
cs
mov
imul
sub
mov
scas
adc
xor
lea
(bad)
shr
rcr
mov
popa
add
(bad)
out
mov
add
sbb
xor
jne
adc
repnz
lock
push
xchg
push
jne
(bad)
fwait
sbb
mov
call
test
mov
xchg
jmp
out
dec
jl
int3
lahf
inc
add
mov
mov
out
call
inc
mov
xchg
in
das
imul
frstor
out
cmps
out
hlt
jmp
fdiv
repnz
jecxz
jae
(bad)
mov
int
or
mov
sahf
or
rcr
and
mov
push
dec
sub
xchg
jno
jmp
jmp
jnp
mov
adc
iret
arpl
stc
pusha
fnstenv
repz
daa
aaa
test
jae
fld
mov
mov
inc
cli
test
mov
je
mov
scas
mov
sub
shl
xchg
or
jmp
cmp
retf
inc
dec
fs
clc
scas
neg
inc
sbb
loopne
outs
in
mov
pop
jae
arpl
cli
(bad)
jae
sub
jp
push
jecxz
mov
inc
dec
arpl
cld
jge
mov
push
in
daa
sbb
adc
sbb
mov
mov
cs
fs
cmp
mov
in
js
dec
mov
gs
or
fs
xchg
fdiv
cmp
shr
ins
adc
into
add
jbe
je
retf
jno
cmp
jae
repnz
shl
(bad)
cmps
mov
movs
jne
and
test
in
cmp
xchg
test
and
xor
dec
mov
ins
rol
push
pop
retf
push
mov
arpl
enter
imul
push
(bad)
sub
mov
enter
fisubr
pop
dec
push
std
dec
in
ss
mov
dec
mov
pop
mov
mov
fsubr
push
jle
cmps
jp
add
popf
xor
(bad)
dec
mov
cmp
sub
fist
sbb
imul
int3
xlat
stc
lods
xor
add
(bad)
mov
mov
retf
cli
ds
into
sbb
mov
stc
fidiv
sbb
rcr
ficom
lods
in
jnp
enter
repz
push
pop
push
mov
push
or
pop
mov
push
nop
std
shl
or
xor
jle
inc
jecxz
pop
aaa
sub
fs
cmc
fcmovbe
and
rol
cmp
shl
inc
mov
lods
mov
sub
push
mov
xchg
cli
mov
jae
sti
daa
xor
pop
xor
jecxz
push
push
ja
inc
dec
mov
jmp
jno
enter
(bad)
mov
into
loop
std
xchg
mov
jb
ins
mov
lahf
push
jmp
frstor
shl
push
sar
pop
xor
in
in
lods
mov
imul
rol
or
add
lods
outs
fwait
fs
arpl
adc
mov
or
dec
push
sbb
aaa
outs
jmp
sub
cld
js
(bad)
loope
mov
xchg
test
in
sub
fsubr
jmp
ins
stos
jl
sbb
stos
xor
or
adc
mov
lods
imul
xchg
sub
push
or
sbb
jl
loopne
int
add
mov
pop
jmp
cmc
push
push
cwde
mov
ficom
push
lahf
arpl
sub
ins
ins
jne
sbb
cmp
jne
cmp
xor
popf
pop
mov
repnz
out
push
jne
xchg
sub
in
jae
xor
je
imul
fsubr
add
inc
pop
and
fs
ins
jno
push
mov
fwait
add
sbb
cmpps
adc
sub
adc
into
cmp
fs
(bad)
dec
imul
inc
movs
dec
inc
and
mov
dec
jne
retf
jb
out
mov
or
or
inc
sub
imul
repnz
cmps
lock
xor
bound
cli
jbe
inc
adc
(bad)
cmp
pop
imul
mov
sbb
add
pop
cmp
mov
sbb
outs
lea
lods
aad
inc
sbb
rcl
popa
lods
push
sbb
push
jns
xchg
jecxz
mov
mov
enter
out
int3
jne
loop
repnz
mov
cmp
mov
fwait
cdq
and
fwait
je
loope
ret
jle
in
outs
dec
mov
loop
push
mov
in
outs
mov
ins
lock
aas
sub
mov
push
ss
mov
shl
jg
jp
bnd
test
xchg
or
cmp
lods
mov
ja
fnstsw
popa
adc
ror
dec
sbb
cmp
mov
dec
push
je
stos
xor
xlat
push
push
scas
push
sbb
push
int3
lahf
dec
adc
retf
cmp
xchg
inc
xchg
push
sbb
jp
cmps
mov
cmps
retf
or
mov
in
mul
xor
jae
cmp
adc
jmp
ds
repnz
dec
ret
jne
xchg
push
aam
add
and
hlt
or
jae
repz
mov
pop
pop
mov
add
imul
mov
movs
lock
es
mov
push
push
fs
sub
adc
sbb
mov
inc
in
sub
pop
rol
mov
inc
adc
loopne
inc
leave
push
add
dec
mov
sbb
dec
stos
test
mov
push
add
aam
jecxz
lods
mov
push
mov
xchg
shl
sub
pop
fnsave
cmp
retf
nop
sbb
pop
frstor
xor
mov
jo
sbb
fistp
sbb
pop
sub
lds
jl
loope
(bad)
loope
je
aad
mov
xchg
lea
dec
add
adc
je
adc
mov
int
clc
jnp
push
sub
sbb
mov
cmp
push
push
xor
add
out
scas
sbb
or
add
jl
js
sbb
mov
ret
push
and
cmp
mov
idiv
test
out
push
or
shl
jne
dec
sbb
iret
test
or
mov
xchg
lods
std
sub
retf
pop
test
scas
cmp
dec
fsubrp
(bad)
test
imul
out
mov
rol
xchg
test
sbb
sub
iret
sbb
dec
std
rcr
add
xor
inc
jnp
jae
mov
mov
cdq
shl
mov
or
push
out
enter
sbb
jb
retf
jmp
push
cmp
mov
add
fnstenv
mov
pop
sahf
mov
sub
push
xchg
fs
ja
add
imul
adc
push
add
(bad)
call
mov
jmp
inc
xchg
or
and
or
inc
sbb
add
cmp
jae
fmul
je
adc
add
ror
in
mov
sbb
push
adc
mov
popf
iret
and
ja
shr
in
xor
add
jmp
stc
dec
into
fcmovu
add
nop
push
in
sub
lea
repnz
ins
add
xchg
mov
movs
sub
div
push
or
(bad)
mov
(bad)
push
xchg
mov
pusha
ds
clc
push
jo
jmp
add
or
cmp
loope
out
call
jmp
add
repnz
push
(bad)
xchg
addr16
(bad)
cmp
pop
push
shl
mov
in
add
sbb
jge
fidivr
mov
jo
cmp
out
pop
mov
push
test
xlat
fcomp
xchg
adc
(bad)
jae
jbe
repz
pop
push
mov
fs
sahf
sub
dec
outs
mov
(bad)
mov
jb
sbb
sti
sar
mov
stc
and
(bad)
jns
mov
sti
lods
ins
icebp
pop
ss
sbb
jae
int
xor
mov
arpl
and
sub
jmp
(bad)
arpl
(bad)
and
cmp
dec
aam
leave
sbb
dec
push
sbb
sub
ins
sbb
mov
mov
dec
cmp
lock
dec
in
fld
push
or
int
or
nop
cwde
sub
or
adc
cdq
cmp
adc
shr
xchg
add
loope
add
sbb
xchg
or
aad
add
push
adc
add
cdq
adc
add
xchg
and
daa
jmp
xchg
and
add
loope
fisttp
pop
fs
mov
mov
dec
sub
mov
or
inc
inc
or
fbstp
test
call
call
xchg
call
cmps
mov
fld
dec
inc
outs
je
call
adc
or
or
or
or
or
or
cli
outs
mov
pop
ret
cli
sub
mov
sar
xchg
mov
cmps
mov
or
lock
test
movs
inc
adc
pop
ret
ja
(bad)
inc
or
movs
ds
rol
mov
inc
cld
xchg
(bad)
daa
push
dec
imul
add
pop
in
cmp
ret
sar
cmp
ss
and
je
ins
js
lds
repz
or
aam
inc
adc
xor
loope
pop
hlt
pop
div
rcr
bound
dec
pusha
fld
stos
push
sub
fcmovbe
lahf
mov
adc
int3
rcr
inc
and
mov
lds
ret
sahf
pop
jo
push
push
(bad)
aam
or
and
mov
xchg
sub
dec
jbe
lock
(bad)
adc
test
jecxz
rcr
out
test
movs
lock
push
stos
es
inc
fwait
in
dec
mov
adc
adc
xchg
test
jle
xchg
xchg
popf
push
sbb
and
sbb
and
jae
add
pop
fisub
les
adc
inc
(bad)
je
arpl
enter
outs
or
in
xlat
jne
jb
dec
lahf
mov
fisubr
mov
push
scas
cmp
add
jb
repnz
fsubr
daa
(bad)
fidiv
cmps
fimul
mov
cmp
test
mov
inc
loope
ja
das
aaa
dec
(bad)
sub
cmp
inc
frstor
je
ss
lea
add
fwait
xlat
pop
loopne
lahf
test
inc
call
cmp
or
clc
inc
mov
jle
sub
mov
(bad)
lahf
shl
fwait
cmp
jecxz
xor
int
bnd
fdiv
(bad)
in
retf
repnz
ds
xor
mov
dec
jae
mov
sub
mov
mov
retf
int
lea
cmp
add
comiss
mov
dec
and
mov
inc
and
scas
outs
jnp
mov
add
xchg
xor
pcmpgtw
jp
and
clc
ror
xchg
es
jecxz
xchg
loope
aas
xor
inc
jne
ret
pop
mov
pop
test
(bad)
cmp
push
dec
jmp
retf
call
xchg
push
leave
les
or
sbb
cmp
inc
xchg
jne
xor
xor
mov
adc
pop
outs
(bad)
adc
mov
arpl
adc
imul
mov
adc
mov
out
push
jno
rol
in
idiv
push
sahf
addr16
fst
push
xlat
std
xchg
cmp
loopne
dec
ror
sbb
outs
cdq
sbb
neg
jge
pop
ds
psubsb
aaa
shl
mov
jg
pop
adc
lock
jl
mov
(bad)
retf
cmps
cwde
cmps
jno
popa
xchg
test
xor
(bad)
xchg
pop
fist
fcom
sub
xchg
pop
repz
loop
data16
jno
push
arpl
sbb
jmp
dec
push
daa
cwde
call
js
mov
add
stos
(bad)
(bad)
int
into
xor
int
in
xchg
das
push
push
xor
mov
xchg
aaa
push
addr16
push
cld
scas
mov
mov
jecxz
mov
sbb
xor
ds
xchg
ss
rol
imul
hlt
scas
shl
sbb
clc
dec
mov
jns
imul
cmp
mov
pop
cmp
(bad)
push
mov
pop
aas
sbb
lea
mov
loop
in
jns
ror
out
sbb
lock
call
into
in
int3
(bad)
leave
adc
pop
mov
xlat
iret
jne
inc
mov
sbb
lock
mov
sub
fwait
push
sub
out
std
pusha
mov
pop
call
int3
fs
mov
jbe
add
sti
sub
out
lds
sub
ror
loope
xchg
adc
adc
std
(bad)
cmp
xchg
push
push
and
fwait
movs
out
out
pop
adc
nop
pop
push
scas
xor
cmp
dec
stc
ins
add
pusha
out
mov
or
xchg
into
xchg
sbb
imul
stc
add
mov
xor
(bad)
push
add
ds
pop
(bad)
mov
xlat
mov
push
pop
sbb
or
sbb
or
add
xchg
xor
sub
lock
mov
push
dec
movs
and
std
(bad)
rol
je
jnp
mov
loope
sub
xor
mov
xchg
adc
xchg
cmp
addr16
pop
dec
lea
shl
jae
cmp
mov
shl
test
or
or
retf
or
imul
rcr
xchg
jbe
movs
(bad)
shl
cmp
outs
arpl
out
ret
lds
sub
sar
iret
mov
xor
mov
pop
pop
aas
and
adc
push
or
xor
ja
lods
adc
jl
idiv
(bad)
test
gs
jo
mov
fs
or
shl
push
mov
lods
fld
fdiv
xchg
sbb
scas
int3
cwde
repz
mov
and
(bad)
retf
xchg
dec
dec
retf
scas
dec
push
imul
fsubr
or
mov
mov
shl
stos
call
stos
adc
jge
daa
std
aas
jne
xor
mov
jne
call
out
pop
fistp
outs
sub
mov
jns
and
mov
out
add
dec
bound
and
mov
or
daa
ret
or
inc
in
add
lock
or
sbb
scas
sbb
or
loopne
lods
jns
jl
test
fidivr
xlat
dec
jnp
xchg
retf
je
cmps
mov
test
xor
test
jbe
xchg
stos
jne
mov
fimul
mov
xchg
shl
xchg
clc
mov
enter
xchg
daa
mov
ins
adc
stos
cmps
out
xchg
(bad)
jmp
shl
movs
idiv
cs
fidivr
sub
ins
test
pop
test
push
add
or
pop
or
aad
mov
les
pop
cmp
push
(bad)
cmp
mov
and
xchg
sbb
pop
xchg
iret
mov
push
adc
into
rol
cs
push
aaa
pop
and
ja
jp
dec
lahf
xchg
inc
jno
xor
(bad)
adc
mov
stos
popa
in
shr
scas
mov
(bad)
out
pop
pop
scas
leave
add
out
xchg
test
push
rcr
frstor
call
movs
push
mov
mov
dec
sub
push
enter
mov
sub
sar
pop
mov
push
loopne
cwde
loop
mov
inc
cmp
lods
xchg
(bad)
xor
mov
jo
pop
sbb
dec
dec
push
xchg
fisttp
ins
mov
sahf
xchg
cmp
sbb
fsubp
mov
fnstsw
mov
fcmovu
arpl
in
mov
fnstenv
fbstp
cmp
mov
cld
rol
and
outs
dec
lock
movs
in
stos
pop
sbb
rcl
(bad)
nop
push
popf
mov
fisttp
mov
mov
pop
stc
jb
scas
clc
mov
out
sbb
daa
mov
pop
cs
ins
call
cmps
mov
adc
mov
pop
and
loop
sahf
pop
dec
sub
imul
push
sbb
cmc
sub
dec
sbb
(bad)
(bad)
je
in
addr16
sahf
adc
cmps
fistp
xor
jae
sbb
mov
sbb
mov
adc
fidivr
(bad)
rcr
inc
jp
sub
inc
enter
cmp
add
aad
loope
xlat
xchg
iret
das
lahf
xchg
and
(bad)
xchg
xor
adc
jecxz
ja
mov
push
mov
xor
rcr
stc
and
fs
mov
cmps
fmul
jno
fisttp
out
fcmovbe
mov
lods
js
imul
xchg
aam
mov
push
sub
popa
(bad)
jae
mov
push
arpl
cdq
mov
scas
in
call
ret
jo
fiadd
xchg
lahf
out
mul
cmp
dec
(bad)
stc
sahf
dec
add
pop
pop
(bad)
pushf
mov
out
dec
movs
clc
fistp
sub
fisubr
retf
imul
push
daa
cmp
inc
stos
cmps
ss
adc
mov
stc
les
mov
sub
ret
pop
sbb
lea
mov
shl
in
stos
je
jno
repnz
add
popa
mov
sbb
in
test
jae
(bad)
out
push
dec
js
pop
and
mov
hlt
jle
dec
test
repz
add
(bad)
das
sub
fwait
inc
fdivr
call
pushf
rol
mov
cmps
setb
(bad)
bnd
push
inc
mov
frstor
adc
out
dec
test
mov
lds
mov
jne
or
popf
xchg
rol
push
mov
jae
ss
pop
shl
jg
lods
je
xor
or
sbb
frstor
pusha
xor
mov
ins
sahf
jge
dec
xchg
jge
jmp
int
inc
push
dec
scas
pop
fdiv
dec
inc
adc
sub
out
jne
clc
inc
dec
outs
out
out
stos
adc
(bad)
add
in
stos
popf
std
ret
shr
ret
andnps
xor
std
rol
sub
xor
leave
lods
repz
outs
mov
cmp
les
dec
fsubp
retf
fs
push
outs
ja
std
in
dec
mov
data16
mov
outs
and
ficomp
sub
mov
pop
in
in
lods
imul
pusha
xor
lods
aad
mov
pop
jne
xor
lods
stos
dec
inc
dec
add
adc
lods
xchg
mov
retf
pop
inc
cmp
push
ins
ss
push
pop
mov
int3
stos
imul
lods
mov
jp
sub
rcr
inc
xchg
adc
mov
test
fsubp
push
imul
adc
xor
rol
cmp
sub
push
leave
pushf
into
idiv
push
push
repz
test
xor
stc
xor
xchg
cmovl
rcr
mov
mov
call
mov
fs
out
inc
lods
nop
mov
das
(bad)
fs
cmp
dec
pop
ja
(bad)
repnz
bound
enter
nop
or
adc
ja
jle
jbe
(bad)
sbb
inc
movntps
xor
mov
add
adc
and
sahf
cmp
mov
dec
adc
xor
sub
arpl
dec
dec
loopne
mov
es
sub
fcomp
(bad)
mov
out
es
popa
fnsetpm(287
imul
jg
xchg
retf
xor
pop
sahf
add
in
mov
(bad)
nop
add
in
arpl
pop
es
jl
arpl
cli
fdivr
add
dec
push
out
mov
js
imul
ror
nop
push
popa
repnz
(bad)
adc
faddp
repnz
xchg
mov
mov
cmp
xchg
pop
mov
sub
es
out
ret
(bad)
and
fcomp
xor
xchg
ins
je
fwait
(bad)
ins
dec
mov
aaa
popa
jb
dec
mov
jecxz
je
add
rol
and
in
nop
jecxz
sub
lahf
mov
pusha
jmp
fdivr
sub
pop
or
popa
xchg
js
imul
imul
xchg
mov
(bad)
arpl
setb
inc
adc
jl
inc
nop
retf
in
fnstsw
sbb
int3
lea
shl
adc
sbb
cmp
push
addr16
mov
push
cmc
sub
add
or
repnz
pop
or
jb
fsub
test
addr16
or
leave
pop
push
xchg
add
shl
addr16
add
and
push
out
sbb
mov
repnz
and
fcomp
loope
rcl
xchg
cdq
cmps
cmp
jbe
pop
pop
into
jle
into
mov
lahf
dec
jmp
pop
ret
ins
cs
inc
pusha
fld
ds
test
dec
and
movs
sbb
mov
inc
int3
test
or
mov
sub
(bad)
out
or
jb
lds
fwait
fwait
mov
cli
sahf
push
pusha
ja
xchg
sti
popf
out
fwait
inc
stos
daa
lock
or
xchg
stc
or
xchg
jmp
jle
ss
lods
ins
iret
movs
adc
or
xchg
out
ss
sub
mov
sbb
cwde
mov
add
inc
mov
and
enter
push
retf
and
(bad)
xchg
retf
xchg
adc
out
jle
jnp
sbb
cmps
xchg
adc
xchg
div
shl
in
aaa
mov
in
fld
pushf
inc
jge
sti
iret
retf
push
aas
sub
les
mov
and
xor
outs
xor
and
cwde
push
arpl
idiv
cmp
out
inc
out
pop
push
sahf
fdivr
push
ins
pshufw
or
push
push
inc
xchg
int
xchg
inc
nop
mov
stos
sbb
xchg
mov
es
and
ss
push
in
jp
adc
adc
adc
adc
sub
jae
pop
test
test
push
add
lock
test
add
inc
retf
cwde
(bad)
mov
mov
jb
popa
arpl
fwait
mov
add
adc
mov
imul
add
cmps
push
int
pop
jmp
inc
adc
mov
or
test
add
adc
and
fs
dec
pop
push
add
cmps
adc
sub
push
inc
jl
inc
stos
imul
mov
test
add
pusha
or
mov
inc
jg
mov
nop
inc
push
in
mov
pop
sbb
jne
rol
(bad)
gs
add
mov
sub
int3
xchg
dec
pop
jmp
dec
dec
outs
xor
inc
inc
fucomp
(bad)
mov
push
(bad)
aam
mov
cld
mov
dec
cmp
mov
inc
test
mov
aaa
sar
add
or
cs
in
movs
jb
jecxz
push
or
rcr
inc
int
pop
cmps
and
cmp
dec
inc
ss
loopne
mov
out
test
js
jecxz
pop
sbb
sbb
sti
cs
aaa
xchg
sbb
clc
mov
inc
nop
shl
ins
jnp
xchg
add
loope
ss
pop
and
mov
sub
adc
test
adc
test
xchg
leave
loopne
ss
mov
mov
jae
mov
add
inc
sahf
adc
loop
and
stos
mov
or
sub
push
jmp
enter
add
adc
aaa
ror
sub
push
or
push
adc
out
loope
adc
mov
and
inc
add
rol
in
out
and
add
dec
inc
jl
or
jns
push
(bad)
xor
(bad)
and
mov
loopne
inc
adc
dec
nop
inc
movs
and
mov
and
jne
inc
add
inc
and
dec
jns
aad
cmp
cld
mov
sub
inc
in
(bad)
ds
add
test
add
call
or
xchg
xchg
shl
push
addr16
sbb
dec
mov
loopne
cs
fild
sbb
mov
(bad)
fs
push
xor
jnp
repnz
std
inc
ins
mov
out
addr16
int3
pushf
jb
and
sbb
inc
mov
cmps
sar
push
out
xchg
pop
fwait
pop
cmp
or
aaa
dec
jbe
add
mov
shr
adc
mov
loopne
pop
sub
inc
repnz
mov
or
repnz
out
ins
push
outs
fld
pop
pop
pop
jnp
mov
inc
inc
jne
aam
js
mov
sbb
xor
inc
jno
into
mov
nop
add
adc
bound
cmc
dec
add
jle
or
int
mov
inc
sbb
dec
stos
scas
jne
ins
inc
jecxz
(bad)
fs
enter
imul
xor
sahf
dec
fwait
pop
cmp
pop
cs
lods
jecxz
cmc
adc
cli
dec
pop
dec
sti
fcomp
pop
loope
cmps
test
xor
je
sbb
inc
outs
jmp
cmps
out
sar
or
mov
imul
add
fcmovnu
mov
pop
jecxz
sub
icebp
out
mov
test
test
cmps
fld
rol
mov
in
sbb
gs
push
je
scas
cmp
xchg
inc
loope
cdq
test
dec
mov
xor
cmp
jl
jecxz
pop
xor
dec
and
out
inc
mov
pop
jne
cmc
psraw
push
dec
shr
inc
test
push
lods
gs
jle
aas
mov
jp
inc
mov
xor
adc
pop
sub
mov
ss
push
mov
and
aam
jns
ss
mov
stc
stc
pop
mov
loop
cmp
loope
retf
fcomp
push
xchg
loop
lods
pop
loop
mov
hlt
mov
ja
je
jp
(bad)
fsub
inc
outs
push
pop
je
inc
mov
icebp
ss
pop
sub
pop
sub
push
push
popa
int3
call
sub
test
dec
jmp
das
sub
push
xor
or
cmp
adc
push
retf
push
push
dec
dec
push
add
mov
xor
xchg
mov
repnz
lods
imul
add
neg
pushf
pop
js
or
mov
inc
out
(bad)
jno
daa
std
push
daa
push
les
jecxz
cmc
xchg
sbb
loop
mov
test
mov
xor
xor
dec
mov
call
jns
aam
sbb
xchg
dec
mov
leave
pushf
int3
jae
ins
dec
sbb
arpl
iret
cli
pop
loop
dec
push
lds
out
mov
mov
pop
add
repnz
xor
ds
and
retf
leave
jmp
inc
sbb
jge
pop
sahf
jge
call
gs
test
jns
sub
inc
mov
or
xor
sti
scas
sub
push
jns
repz
test
or
movs
jp
cmp
movs
fs
xor
mov
lea
mov
sti
test
cld
pop
loope
mov
sub
sbb
mov
mov
call
in
mov
retf
sahf
in
xchg
inc
sar
outs
mov
(bad)
stc
xchg
loop
popa
dec
and
xor
cmp
mov
mov
int
sbb
xor
imul
lods
das
adc
mov
outs
ja
pop
mov
push
add
xchg
adc
outs
aaa
sub
mov
repnz
mov
cld
or
fcomp
bound
jnp
mov
popa
fisttp
xchg
cmp
or
push
mov
lods
sbb
dec
xchg
sbb
imul
outs
popf
cs
fmul
dec
std
stc
pop
sub
idiv
fdiv
(bad)
sahf
inc
jb
daa
js
or
movs
and
iret
fsub
rcr
or
popa
out
(bad)
int
ins
ins
sbb
jno
out
pop
repnz
mov
repnz
in
imul
fisub
ret
(bad)
out
sub
xlat
pop
xor
stos
mov
out
adc
sahf
jmp
add
mov
(bad)
shl
mov
pop
mov
inc
push
gs
retf
mov
sbb
xor
sub
pushf
dec
mov
leave
icebp
out
mov
mov
adc
stos
sti
xchg
iret
push
and
jae
imul
ret
jge
data16
jno
sub
arpl
pop
repnz
fwait
xor
xor
mov
add
in
out
neg
push
and
outs
popf
inc
sub
add
xchg
mov
pop
icebp
ins
rcr
ret
mov
popf
scas
arpl
fbstp
cmp
sbb
adc
mov
add
loop
fidiv
xlat
and
sbb
mov
scas
inc
cmp
aad
mov
popf
push
ds
cmp
xor
out
in
sahf
xor
call
jmp
fdiv
xchg
xchg
xor
or
out
jns
dec
call
call
inc
dec
mov
sbb
jbe
icebp
push
lea
test
arpl
push
xchg
popf
sub
bound
jbe
not
push
push
pop
fcom
push
inc
sbb
mov
mov
jecxz
lock
lea
in
shr
dec
neg
imul
bound
sahf
fs
movs
in
cmp
fstp
mov
and
jae
lods
xchg
mov
mov
(bad)
pop
loope
push
dec
pop
and
and
mov
inc
(bad)
sbb
clc
pusha
cwde
adc
xchg
jns
addr16
imul
sar
in
mov
xchg
inc
cmp
loope
gs
cmp
into
lea
cmp
mov
jl
push
(bad)
sbb
data16
xor
cmp
sbb
dec
fs
out
cli
jmp
les
adc
retf
pusha
push
fs
ror
pop
mov
jnp
pushf
(bad)
push
xor
push
mov
clc
jl
lock
jl
jmp
jge
push
lock
xchg
outs
xor
in
pop
std
(bad)
mov
out
js
dec
dec
retf
fstp
or
cdq
add
lods
adc
imul
shl
or
mov
stc
dec
xor
mov
movs
jo
inc
jle
arpl
in
test
cmp
push
pop
sbb
sbb
mov
mov
(bad)
push
popf
fst
mov
mov
mov
adc
gs
daa
pushf
xchg
(bad)
rcr
sub
mov
cmp
xlat
cmp
iret
pop
cli
test
pop
xchg
je
pop
or
(bad)
sub
test
lods
xchg
push
mov
add
dec
stos
retf
or
push
pop
adc
sub
sahf
loope
sub
in
inc
(bad)
and
rcr
dec
rcl
ins
test
pop
popf
addr16
mov
stos
aad
in
(bad)
(bad)
fistp
pop
sbb
popa
loop
mov
jnp
mov
cmp
fwait
xor
pop
ss
retf
outs
sahf
pushf
jb
push
cmp
fistp
test
mov
cld
stos
and
je
mov
in
add
add
ror
imul
retf
sub
sbb
movs
sbb
sbb
mov
ins
mov
inc
arpl
mov
mov
mov
cmps
xor
pop
cmps
push
in
outs
call
gs
adc
outs
jne
sbb
imul
mov
fwait
adc
in
jge
aad
stos
sahf
ds
sbb
jo
mov
jmp
jge
mov
aas
aam
pop
jne
jmp
lods
xchg
xor
pop
cmp
jge
clc
sbb
xor
leave
je
jnp
cmp
adc
shl
xor
fistp
stc
outs
cmp
popf
adc
in
bound
adc
xchg
push
dec
pop
mul
out
xchg
ret
push
(bad)
fdiv
cwde
outs
dec
sbb
out
movs
jbe
scas
ins
test
push
out
icebp
aam
faddp
dec
ss
xor
cli
out
cmps
pop
aam
sbb
add
dec
xlat
out
jns
and
pop
rol
xchg
ja
pop
fs
faddp
push
jecxz
aad
mov
out
xabort
shl
and
pushf
add
pop
inc
inc
ss
es
sbb
neg
pop
pop
daa
push
jbe
cwde
enter
lods
pop
mov
in
xchg
test
sahf
(bad)
fwait
cmp
xchg
jge
pop
sbb
xor
aad
dec
xchg
mov
aam
test
xchg
cmp
inc
int3
xchg
cmp
shl
mov
sbb
daa
aam
jle
fsubr
ds
lods
shl
jo
lock
lahf
es
fbld
mov
into
in
jo
xchg
and
aam
cdq
dec
fs
pop
xor
mov
lods
pop
jb
fcomi
int
addr16
(bad)
cmp
test
mov
ja
push
sbb
stos
movs
fsub
push
xchg
pop
leave
and
fisttp
loope
loopne
in
push
call
mov
aaa
pop
add
push
loop
stc
push
xor
dec
add
fadd
dec
jno
mov
add
dec
mov
push
dec
cmp
and
ins
push
sub
ret
xchg
pop
push
mov
in
push
std
inc
mov
fsubr
std
sti
movs
mov
xchg
aaa
mov
cmp
out
fsub
cmp
jo
jecxz
add
enter
inc
ins
fadd
test
xlat
jl
pop
pusha
adc
clc
cdq
lds
iret
inc
shl
inc
cdq
shl
stos
mov
adc
retf
mov
push
push
sbb
test
cmps
out
push
cwde
clc
ret
test
in
fsubp
push
sti
add
pop
pop
test
cwde
cli
mov
ds
popa
jecxz
movs
imul
mov
imul
pop
sub
add
mov
rcr
dec
(bad)
loope
pop
mov
iret
or
mov
outs
sti
sub
jmp
cmp
ss
daa
stc
pushf
(bad)
jo
pop
or
inc
fstp
out
ds
xor
jecxz
jge
enter
not
jmp
adc
mov
mov
call
sbb
push
jg
pmaddwd
enter
adc
inc
jno
out
pop
pushw
adc
add
and
sbb
out
aas
or
mov
fmul
ins
aaa
mov
dec
imul
cmp
sar
cmp
mov
leave
pop
mov
(bad)
loop
sbb
or
daa
mov
cmp
(bad)
(bad)
xchg
sbb
mov
fs
push
enter
out
xchg
and
shr
jle
adc
mov
lock
in
stos
into
int
(bad)
sbb
in
dec
or
ins
das
jnp
(bad)
ror
and
jp
adc
sbb
aad
into
jge
out
sub
inc
pop
cmps
dec
in
adc
sub
mov
add
adc
mov
cmps
std
mov
push
xchg
dec
icebp
adc
fwait
xchg
push
xlat
xchg
ret
shl
xchg
mov
sbb
loopne
stc
cmps
in
mov
jg
dec
popa
lea
(bad)
data16
jno
gs
push
(bad)
fldcw
push
push
sbb
or
mov
jp
cmp
sbb
in
inc
mov
out
mov
addr16
mov
pop
mov
(bad)
xor
mov
jecxz
mov
jl
mov
out
addr16
sahf
fild
fstp
nop
stc
je
jne
aad
xor
je
dec
jecxz
aad
int
mov
cmp
and
fbstp
dec
lock
mov
add
mov
adc
cld
xor
lea
out
pop
stos
sar
lea
arpl
sbb
sub
dec
sbb
mov
das
mov
jmp
int3
mov
pop
mov
setne
aas
adc
pop
xchg
sbb
test
out
outs
call
jle
stos
jecxz
aaa
xor
dec
sbb
push
jne
arpl
inc
into
jge
inc
out
stos
ss
mov
mov
(bad)
enter
out
xor
xchg
xor
mov
sub
lahf
ret
stos
or
data16
xchg
push
mov
retf
inc
rcl
push
xor
cmp
div
mov
imul
movs
add
(bad)
jns
cmps
fisub
out
mov
cmp
or
jl
dec
shl
retf
imul
nop
lds
imul
mov
test
sbb
loop
cmps
jbe
pop
or
cwde
and
fucomp
and
jne
enter
sub
pop
rcl
stos
out
add
push
jp
fdivr
stos
or
mov
outs
mov
cmp
push
into
add
adc
das
ds
(bad)
fst
add
dec
mov
mov
js
enter
mov
push
and
or
sbb
mov
enter
add
xchg
or
leave
mov
aad
adc
mov
dec
and
cmp
(bad)
push
push
int
mov
rcl
push
or
inc
add
inc
add
lahf
or
popa
cmp
jecxz
test
jecxz
int
jne
mov
xor
xor
cmp
fdivr
adc
sub
nop
inc
je
xor
push
jl
movs
adc
fld
lds
jmp
stos
cmp
jo
jae
lock
adc
fcomp
sub
push
lds
cwde
lock
jne
fsubr
(bad)
xchg
retf
fadd
cmp
sar
and
aaa
jecxz
mov
cli
inc
jl
add
sub
repnz
mov
aam
mov
fs
shl
(bad)
inc
popf
or
pop
ja
mov
add
mov
inc
mov
inc
xchg
repnz
jb
adc
pop
mov
inc
inc
or
rcl
adc
sbb
pusha
rcl
push
leave
je
dec
cmps
jbe
fst
jmp
sub
sbb
lds
push
pop
jbe
pop
fidiv
std
ror
push
sub
sub
cmps
and
inc
stos
push
push
inc
and
retf
sbb
nop
dec
jnp
mov
xor
xchg
enter
fsub
jmp
and
cmp
xlat
mov
cdq
sbb
movs
ret
and
dec
xchg
shl
jmp
retf
mov
out
inc
add
inc
lods
and
xor
or
push
scas
jo
jno
push
loop
and
test
cmps
imul
push
(bad)
sbb
in
adc
sub
pop
jne
cmp
fs
retf
inc
fbld
shr
(bad)
or
or
pop
in
and
ds
mov
sub
adc
or
mov
or
and
xlat
mov
mov
(bad)
in
les
adc
adc
xlat
adc
jl
and
or
inc
jmp
dec
fucomi
push
add
mov
stos
sub
sahf
rcr
push
inc
pop
sub
pop
ret
push
mov
add
mov
mov
inc
fcmovu
pop
daa
(bad)
in
cmp
add
hlt
dec
sti
and
mov
mov
(bad)
push
scas
sub
imul
pop
mov
outs
shr
ds
inc
imul
push
cmp
jae
nop
imul
xchg
data16
out
cmp
aad
les
mov
mov
or
add
dec
sub
or
adc
and
adc
inc
adc
dec
or
adc
test
adc
and
inc
cmps
sbb
push
or
daa
adc
or
mov
popf
sub
dec
push
push
sbb
mov
aam
cdq
mov
sbb
test
jb
in
mov
loope
sub
test
addr16
popf
test
dec
sub
fild
stc
ins
aas
in
sub
fwait
mov
fadd
mov
mov
jmp
cli
cwde
pop
sub
adc
and
and
daa
cmp
mov
enter
fs
je
mov
cvtpi2ps
add
pop
push
mov
push
push
sub
leave
daa
inc
hlt
dec
add
cmps
lea
daa
sub
or
test
mov
mov
in
pop
add
xlat
rcr
xchg
int
and
scas
iret
ins
ins
adc
sbb
sbb
jl
push
inc
sub
pusha
xor
fdivr
lods
stos
mov
fadd
add
jmp
jno
pop
xor
xchg
and
cmps
in
ret
cmps
dec
adc
repz
sbb
jp
pop
lock
repnz
pushf
jbe
jle
icebp
ret
ret
pop
mov
mov
and
sbb
out
inc
mov
jg
dec
xchg
push
xchg
sub
out
ret
ret
movs
jmp
cwde
fs
add
mov
je
aaa
in
xchg
or
popa
(bad)
and
inc
and
pop
and
in
xor
mov
test
pop
jg
mov
add
jecxz
int3
arpl
clc
push
les
(bad)
ins
ins
jle
mov
sti
fwait
mov
jp
sbb
(bad)
and
mov
sbb
dec
jns
xchg
clc
out
mov
mov
icebp
popf
pop
jmp
dec
cmc
or
mov
stc
pop
pop
repnz
pushf
ins
xchg
mov
aas
sub
movs
jmp
fsin
pop
fs
sub
lea
mov
push
retf
xor
(bad)
pop
scas
sbb
mov
into
mov
jnp
mov
add
cli
sub
(bad)
mov
pop
adc
xlat
icebp
pop
cwde
pop
adc
lods
stc
sbb
cmp
sbb
or
adc
iret
shl
jo
jecxz
cmp
les
pop
mov
pop
pop
bswap
outs
xchg
outs
sbb
jno
mov
ds
or
xlat
sahf
push
or
xlat
jg
sub
imul
cmp
call
push
(bad)
mov
pop
lds
in
test
push
inc
repnz
lahf
mov
(bad)
popf
xor
int3
or
jno
ret
stos
cli
mov
adc
ret
sahf
imul
jno
imul
(bad)
in
enter
sbb
loope
nop
mov
sbb
sbb
mov
add
retf
and
mov
neg
data16
push
mov
and
loope
mov
(bad)
aam
pusha
call
cld
lea
push
fcmovb
ins
gs
out
out
test
ins
lods
adc
cwde
mov
out
sti
add
(bad)
and
in
ins
or
mov
jae
sbb
or
add
and
and
in
loope
icebp
sbb
ret
scas
out
lods
pusha
mov
in
aaa
adc
aaa
add
mov
sub
ss
xor
jp
jp
sub
push
dec
(bad)
imul
and
movs
loope
call
jae
aad
xchg
push
inc
je
movs
xchg
dec
pop
dec
push
lds
sub
ficomp
add
xchg
and
dec
sub
mov
aas
or
jmp
inc
fwait
mov
jle
xlat
paddb
mov
aad
add
sbb
loopne
cli
stos
leavew
enter
dec
fwait
sbb
adc
ja
mov
mov
adc
mov
push
push
mov
inc
xlat
iret
inc
nop
mov
inc
int
xor
sub
bound
in
leave
repnz
adc
jbe
xchg
mov
retf
inc
pop
pop
sbb
in
dec
inc
fwait
xor
cli
pop
cdq
and
push
jo
push
jmp
clc
out
(bad)
cmp
xchg
clc
fistp
das
in
jl
jecxz
call
shl
je
int3
push
ret
jb
cmps
iret
retf
xchg
daa
and
pop
gs
pushf
out
in
sbb
sbb
ror
lds
xchg
ins
mov
call
arpl
test
ds
xchg
and
push
mov
cwde
out
jbe
aas
mov
rcr
inc
jp
scas
pushf
loop
jg
test
mov
sbb
xor
or
call
fsub
jnp
xlat
data16
lods
push
mov
cmps
mov
mov
jne
repz
dec
(bad)
jnp
sub
in
and
jecxz
pop
scas
ret
(bad)
cmp
pop
int3
mov
lods
aas
aam
ds
lea
and
sbb
test
data16
sti
movs
out
jmp
cmp
jmp
mov
fnstsw
xchg
adc
cmp
(bad)
in
cmp
xchg
jp
mov
(bad)
popw
movs
ret
in
scas
js
(bad)
fdivr
hlt
and
and
hlt
ja
pop
scas
sbb
fld
scas
and
shr
mov
or
mov
outs
ins
das
arpl
push
or
in
jo
sub
scas
aas
stos
loopne
push
aad
sbb
cwde
(bad)
outs
add
or
(bad)
dec
out
sbb
ins
leave
xchg
push
xchg
retf
fsub
xor
lock
jl
(bad)
jae
(bad)
dec
inc
pop
push
fidivr
mov
mov
mov
mov
xor
loopne
mov
imul
jno
or
ret
outs
sub
retf
fs
outs
add
mov
shr
shl
out
sbb
mov
(bad)
jle
cmp
loope
xchg
pop
call
add
mov
je
fsub
cmp
mov
int
cs
daa
mov
stc
call
out
mov
in
jmp
mov
pop
(bad)
sbb
test
icebp
push
sub
cmp
adc
movs
(bad)
in
push
movs
leave
pop
sbb
sar
dec
loop
dec
jae
ins
punpcklbw
in
mov
test
leave
jecxz
and
pop
xor
in
movs
xlat
ins
push
cmps
and
sub
iret
and
ficomp
jmp
ja
mov
shr
bound
lds
mov
leave
jl
pop
jbe
imul
pop
mov
stc
cmp
leave
into
das
nop
mov
add
push
dec
rol
mov
sub
js
aad
hlt
hlt
push
jle
pop
adc
pop
aad
mov
jmp
popa
mov
fsubr
stc
in
mov
les
mov
loop
outs
sub
cmpxchg
mov
fistp
adc
lea
inc
xchg
mov
mov
jmp
push
xchg
out
inc
jecxz
lods
call
std
das
je
sbb
fistp
cmp
cmps
sbb
gs
retf
sub
xor
fs
or
push
out
sahf
jle
jecxz
(bad)
in
movs
ret
outs
add
pop
inc
dec
jle
push
jnp
ss
adc
cmps
js
arpl
(bad)
hlt
xchg
and
sub
mov
dec
jnp
sti
lock
outs
imul
arpl
mov
inc
sub
push
inc
jb
out
pop
dec
pop
push
pop
in
mov
add
fsub
in
jno
pop
pop
sub
mov
dec
xchg
xchg
es
ins
ins
div
sub
jmp
repz
in
clc
jecxz
push
(bad)
jno
push
dec
arpl
cmp
neg
dec
mov
and
sbb
shl
(bad)
xchg
xchg
mov
push
outs
imul
inc
adc
jns
jae
pmaxsw
out
inc
dec
int
stos
jp
cmp
add
fsubr
shl
jnp
jp
in
ret
jmp
sbb
sub
std
aad
jae
rol
pop
push
fcomip
mov
arpl
mov
push
push
dec
cmp
imul
fstp
ja
dec
jg
pop
sbb
out
fnsave
out
pop
cmp
mov
out
xchg
adc
and
retf
push
int3
imul
imul
stos
enter
sub
or
cs
pop
in
das
and
mov
pop
stc
push
adc
out
shl
rcl
out
stos
scas
jae
fwait
inc
inc
cmps
stc
inc
sub
jl
push
pop
xor
push
push
(bad)
lods
fs
call
pop
pop
or
(bad)
shl
outs
and
pushf
cmp
dec
aaa
inc
ficomp
sti
test
lahf
leave
push
fidivr
ss
jge
movs
mov
aas
sar
stos
cwde
test
mov
sbb
(bad)
(bad)
lds
ror
inc
test
jnp
(bad)
jne
out
sbb
xchg
dec
sub
not
mov
(bad)
push
or
push
mov
inc
aas
xchg
leave
jae
adc
icebp
addr16
call
push
or
jne
dec
pop
pop
xor
(bad)
(bad)
dec
pop
ret
gs
push
arpl
cmc
aaa
lahf
bound
inc
out
cmps
inc
js
std
pop
pop
push
cmp
mov
and
push
shr
stc
inc
push
in
leave
lock
jnp
sub
and
xchg
push
dec
bound
push
pusha
jecxz
mov
repz
jnp
mov
in
js
cmps
loope
push
add
fild
sub
int
xchg
fist
add
or
jecxz
xor
xlat
sbb
push
frstor
int3
jge
std
aad
jecxz
xor
jle
fcom
icebp
mov
lods
xor
mul
jg
cmp
(bad)
and
add
ret
and
mov
mov
sbb
dec
push
inc
cmp
daa
sahf
push
pop
dec
les
enter
pop
mov
sub
xor
and
sbb
daa
scas
in
mov
cmps
inc
xlat
push
iret
es
mov
shr
scas
mov
rcr
(bad)
outs
jns
sbb
in
lods
jb
arpl
out
sbb
dec
sub
xor
mov
inc
stos
aam
adc
ja
pop
test
cmp
mov
hlt
pop
fnstcw
and
mov
fsub
mov
jo
push
nop
stos
jae
out
mov
pop
jne
aam
pusha
push
je
cs
popf
and
ja
cmp
fstp
jecxz
jge
jno
rcl
add
or
or
push
lock
and
dec
je
mov
xchg
add
mov
dec
call
sbb
jle
je
xor
out
inc
out
neg
xchg
punpcklbw
in
dec
es
(bad)
adc
mov
fimul
sub
inc
shl
jg
dec
loop
fld
std
lods
mov
ret
fdiv
dec
add
ins
addr16
fdivr
out
sbb
fwait
sbb
mov
xlat
sbb
retf
jmp
mov
ins
enter
out
call
call
dec
mov
jae
(bad)
sahf
pop
shl
hlt
fist
call
ins
xchg
xor
test
add
loope
je
or
jge
icebp
pop
dec
int3
cld
mov
pop
enter
or
inc
jecxz
or
fisttp
out
aaa
out
addr16
mov
jmp
in
addr16
icebp
jmp
in
mov
push
jnp
dec
sbb
daa
xor
lods
fptan
jmp
ret
and
jle
jmp
mov
ins
xchg
or
icebp
mov
mov
mov
and
jns
and
cmc
dec
imul
ficomp
clc
dec
and
fnstenv
lods
dec
push
retf
sbb
sub
and
dec
mov
jo
inc
sub
iret
sub
movs
int
sbb
clc
dec
pop
cmps
or
adc
mov
jle
popa
add
sub
not
sbb
cmp
int
and
inc
xchg
ins
pusha
mov
lds
pop
outs
inc
xor
mov
pop
mov
test
and
call
jb
or
push
dec
out
fcmovnu
loop
jle
or
repnz
aad
push
in
or
pop
xor
sbb
push
(bad)
xor
cwde
retf
ret
dec
add
mov
inc
mov
mov
adc
mov
push
sbb
jmp
xchg
lods
sbb
je
shl
jbe
jb
and
imul
adc
cmc
sbb
aad
add
aam
sub
jns
mov
add
jbe
loopne
fimul
das
nop
hlt
outs
iret
sti
sub
fimul
or
in
add
sbb
dec
and
pop
scas
rol
out
or
xchg
inc
xchg
int
sar
(bad)
fs
popf
jb
repz
(bad)
sti
xchg
adc
dec
shl
xchg
sbb
inc
or
xchg
adc
movs
or
inc
add
fwait
xchg
test
cdq
mov
mov
push
call
loopne
pop
mov
cmps
cmp
movs
enter
sbb
fcomi
xchg
adc
or
inc
and
shr
scas
leave
outs
sub
and
(bad)
sar
cmps
xlat
mov
pop
or
rol
cmp
sub
add
add
sbb
inc
cld
mov
pop
pop
inc
sbb
lea
push
sbb
imul
fsubp
aad
je
in
fnsave
loope
scas
leave
repnz
push
sbb
push
test
fld
cmp
xlat
push
mov
or
sbb
sti
test
add
ret
mov
xchg
aas
jecxz
stos
jbe
test
mov
out
fdivr
pop
xor
push
cmp
xor
or
jmp
pop
xchg
js
ucomiss
push
push
add
add
stos
mov
lods
(bad)
pop
mov
sbb
fsubr
sub
cmp
push
and
cmps
xor
sub
cmp
jbe
shl
repnz
xor
push
mov
mov
push
daa
fsub
cli
sti
test
sti
cmps
hlt
and
push
pop
aad
retf
call
pop
fdivr
ret
lods
or
push
(bad)
sub
dec
xor
scas
test
jo
push
rcr
add
mov
mov
or
enter
xor
mov
fldenv
mov
inc
push
adc
out
(bad)
mov
add
imul
outs
jbe
sbb
jnp
repz
push
adc
iret
pop
in
leave
sub
cwde
ret
sbb
add
push
mov
sbb
je
fmul
adc
or
call
push
cwde
test
lea
add
sub
or
and
test
fwait
sbb
hlt
jno
and
sbb
pop
fs
fs
add
mov
sub
cmp
mov
sahf
cmps
mov
test
push
movs
pop
adc
lock
stos
in
and
pop
mov
cmp
outs
stos
mov
ror
mov
add
cld
movs
repnz
xor
cmp
xor
mov
and
arpl
cmp
retf
mov
pop
daa
aaa
mov
hlt
push
push
push
(bad)
aaa
add
add
daa
mov
jle
dec
add
xchg
adc
in
rol
or
dec
mov
sub
add
pop
ret
jmp
and
inc
and
imul
or
and
adc
test
add
sub
nop
sub
jg
and
sub
add
cmps
jge
out
mov
adc
in
mov
and
rcr
dec
push
inc
inc
jb
aam
or
test
mov
sbb
sbb
sub
mov
pop
mov
mov
xor
pop
push
imul
not
dec
fnstenv
and
jge
test
mov
ins
call
push
and
add
cmps
rcr
or
rcr
test
int
push
pop
pop
adc
popf
sar
ds
mov
int
pop
or
sub
mov
cmp
retf
mov
or
sbb
sar
(bad)
mov
mov
fist
mov
gs
int
inc
inc
enter
sti
push
repnz
mov
movs
adc
loope
imul
inc
dec
mov
call
mov
in
in
pop
lods
(bad)
pop
outs
aaa
(bad)
retf
sub
mov
fldpi
cmp
stos
sub
inc
push
sbb
repnz
xor
aaa
dec
ss
mov
jns
adc
xor
pop
cmp
jge
repnz
or
inc
adc
inc
out
lock
repz
or
outs
ins
mov
inc
popf
mov
scas
mov
lock
out
cdq
inc
and
push
and
jo
js
cmps
xchg
stos
cmp
inc
(bad)
sbb
mov
pop
out
fsubr
int
arpl
fcmovb
sbb
xlat
out
test
xchg
and
pop
gs
jnp
mov
push
jp
loope
pop
mov
jne
dec
ror
retf
sub
mov
hlt
movs
(bad)
mov
aad
retf
pushf
loop
xchg
dec
pushf
add
xor
jp
push
jmp
sbb
and
sbb
loopne
adc
push
xchg
adc
rcr
inc
lock
popf
mov
xlat
xchg
rcl
add
jne
dec
jl
jecxz
leave
or
dec
(bad)
xor
in
mov
jbe
repnz
sbb
fild
sub
jmp
fwait
scas
sub
setns
jno
pop
int
ja
push
out
sub
out
inc
sahf
cmp
pop
enter
loop
adc
xor
mov
xor
push
mov
lods
push
out
int
xchg
lea
hlt
xchg
push
out
add
std
inc
sub
sub
mov
out
or
pop
cmp
jb
repnz
push
dec
enter
arpl
cmp
clc
jbe
nop
retf
push
loope
jge
es
in
arpl
inc
adc
jmp
sub
imul
jnp
mov
out
daa
in
dec
mov
push
and
test
aaa
bts
sahf
jmp
sahf
(bad)
adc
add
sub
sbb
mov
loope
push
in
jbe
sub
xor
xor
mov
ss
inc
xchg
nop
jge
adc
ja
add
js
sub
mov
sbb
popa
cmp
scas
xchg
in
or
push
fisub
pop
jae
dec
enter
test
or
retf
inc
into
xchg
inc
xchg
pop
neg
and
fmul
cmp
nop
cwde
(bad)
hlt
or
jne
sbb
add
popf
and
mov
cmp
dec
or
(bad)
out
dec
ret
mov
jae
lea
xchg
loopne
leave
mov
xchg
mov
pop
(bad)
clc
sbb
cwde
jp
add
xchg
shl
pop
xchg
dec
out
iret
and
pop
aaa
jecxz
mov
pop
mov
and
mov
xchg
push
inc
nop
mov
xor
mov
loopne
pop
sub
xchg
pop
push
call
cmp
leave
jmp
pop
loopne
cmp
inc
jb
rcr
cmps
xchg
jl
pop
push
popa
aaa
repz
lods
scas
aad
jnp
inc
daa
out
rcl
in
in
imul
mov
xchg
stos
sub
into
mov
mov
sbb
jno
imul
xor
inc
sub
jg
pop
xchg
ja
shr
mov
psubb
in
dec
push
sbb
sub
pop
inc
xchg
pop
pop
pop
jno
mov
mov
fs
mov
data16
or
sti
aas
cmp
sbb
adc
fist
mov
xchg
jb
add
xchg
and
sub
sub
jg
xchg
out
and
xchg
rcl
pop
push
mov
test
div
sar
pop
sub
and
imul
inc
xchg
inc
mov
pop
fisttp
fadd
sti
stos
repnz
fcomp
sub
pop
fst
nop
(bad)
(bad)
rol
sbb
nop
jmp
sar
sahf
retf
xor
lea
sar
push
fwait
push
lea
(bad)
out
sbb
in
mov
in
repz
sbb
mov
cmps
shr
lahf
and
enter
sbb
dec
mov
les
test
mov
iret
ret
mov
loop
jbe
(bad)
xlat
sahf
(bad)
dec
inc
pop
xchg
arpl
inc
xlat
nop
shr
mov
pop
fld
enter
cmp
ins
cmp
xchg
(bad)
out
js
add
in
out
out
push
loop
cmp
fmul
pop
mov
adc
mov
int
ret
(bad)
retf
cld
mov
cmp
push
sub
ror
sub
add
mov
cmp
cdq
mov
fcom
shl
les
add
(bad)
jo
sbb
dec
mov
mov
cmp
push
outs
sbb
cmp
mov
(bad)
lock
mov
mov
fcomp
nop
mov
push
sub
lahf
add
lods
out
push
jle
lods
(bad)
and
add
jge
sahf
mov
into
dec
out
ss
movs
jnp
lods
jp
cld
and
(bad)
das
xchg
mov
ret
inc
movs
push
paddb
rcr
ins
jo
out
movs
and
enter
stc
hlt
ins
call
outs
mov
popa
cmps
xor
es
add
je
fiadd
jmp
sti
sub
xor
nop
enter
rcl
inc
call
pop
cmps
inc
je
pop
cmp
xor
pop
aad
jno
jno
inc
mov
mov
cmp
icebp
loope
sub
arpl
test
pusha
ss
jne
sahf
addr16
out
jecxz
jmp
cmp
sbb
pop
pop
pop
scas
dec
xchg
sbb
mov
dec
(bad)
lahf
push
aaa
jne
mov
imul
in
and
pop
imul
xchg
xor
popf
jnp
stos
adc
xchg
iret
retf
mov
sbb
cmp
jl
in
je
dec
clc
push
lds
push
jecxz
fnstcw
inc
fcom
inc
sahf
inc
sub
dec
or
stc
push
xor
jnp
movs
mov
sbb
push
popf
mov
dec
xchg
adc
repz
call
or
movs
out
jb
adc
push
movs
es
aaa
jb
sti
and
test
xchg
shr
ret
fs
rol
jae
and
iret
fld
jg
lahf
nop
inc
jmp
dec
sbb
mov
mov
or
adc
or
mov
cs
scas
je
sbb
in
arpl
cld
test
ds
add
jno
push
fbstp
jmp
inc
lgs
cmps
neg
js
xchg
mov
repnz
xlat
push
popf
or
loopne
inc
pop
inc
pop
push
jbe
je
int
stos
sub
xlat
pop
adc
cmp
stos
movs
shr
add
xchg
xor
sub
shl
cmps
not
mov
pop
call
cmp
adc
mov
es
fwait
lods
mov
push
lods
sub
cmps
push
in
push
sub
std
aam
sub
cmps
retf
fwait
mov
sbb
shr
pop
cmp
retf
fwait
mov
add
push
fcmovne
mov
shl
cmpxchg
mov
sbb
push
std
outs
cld
scas
dec
fidivr
mov
cmc
sbb
inc
cmp
cmp
mov
rol
sbb
mov
scas
mov
imul
call
stos
mov
mov
movs
lea
inc
mov
outs
(bad)
gs
pushf
jg
adc
or
mov
jp
lock
and
mov
shl
dec
(bad)
in
or
xor
aad
jae
test
sbb
call
or
cmp
(bad)
sti
xchg
js
inc
lahf
xor
nop
jns
jp
mov
mov
loopne
jae
sub
div
add
jne
retf
lea
ret
xchg
sbb
enter
shl
pop
fstp
dec
mov
ja
adc
xor
push
call
cmp
ins
hlt
sysenter
or
cli
or
pop
nop
sbb
retf
mov
jmp
cmps
add
and
lods
ins
nop
xor
xor
rol
inc
aas
mov
fwait
push
inc
mov
push
sbb
out
retf
enter
mov
cmps
jnp
cmc
push
cmp
daa
enter
and
or
push
and
sbb
pop
sar
aam
add
cmp
repz
jb
and
inc
scas
in
(bad)
cmp
mov
popa
inc
mov
cmps
(bad)
sbb
outs
out
(bad)
outs
adc
ret
xchg
enter
inc
fsub
dec
sub
fadd
cmp
jge
xchg
aas
cmp
pop
in
into
ss
push
jbe
and
lock
dec
sub
sar
call
cs
fst
add
jns
out
stos
or
push
push
and
mov
iret
add
add
inc
add
call
scas
or
jns
xchg
push
es
adc
ins
xchg
mov
cs
jecxz
sahf
retf
or
std
inc
popf
inc
aad
mov
scas
inc
sysenter
fnsave
les
sbb
xchg
(bad)
out
in
xchg
and
scas
into
out
mov
cmp
jmp
int3
leave
in
scas
xchg
mov
pop
in
add
clc
imul
ficomp
repz
js
aad
enter
(bad)
xchg
or
jmp
jmp
jle
push
dec
loop
fldcw
mov
sub
or
out
pop
or
mov
sbb
fsub
xlat
xor
and
or
fsubr
pop
les
addr16
inc
cli
mov
pop
jns
cmps
repz
scas
addr16
scas
push
lods
outs
pusha
pop
sub
add
es
push
or
add
mov
inc
fcmovbe
ss
ins
mov
xchg
xchg
ja
xor
pop
sub
dec
mov
pop
mov
inc
mov
cmps
fwait
sub
lock
xor
cmp
enter
sbb
mov
test
push
pop
fsub
add
seto
add
repnz
out
xor
sub
imul
mov
sbb
and
mov
push
push
inc
arpl
ja
add
add
movs
cmp
or
xchg
adc
push
ins
push
or
inc
or
mov
add
add
ret
pop
sub
js
call
out
repnz
jle
mov
pop
add
stos
sahf
mov
stc
dec
push
push
jecxz
add
and
stos
adc
add
or
xchg
mov
and
pmaxsw
xor
sub
nop
test
adc
inc
nop
call
mov
test
adc
dec
mov
inc
inc
push
nop
sbb
fs
add
xor
lea
add
mov
call
mov
cmc
dec
movs
cmc
inc
in
pop
rcr
add
mov
push
loopne
jb
icebp
dec
ss
mov
dec
and
inc
add
sub
retf
jp
(bad)
fdivr
movs
clc
push
sbb
add
ror
sub
cli
mov
retf
jns
sub
leave
in
ds
sub
jle
mov
daa
fst
mov
loope
dec
jl
xlat
push
add
leave
mov
inc
jp
or
xchg
inc
inc
push
mov
addr16
mov
or
call
ja
or
adc
repnz
sbb
cmp
into
fisubr
scas
mov
add
sbb
inc
arpl
mov
in
jnp
cmp
pushf
pop
pop
jo
xor
jnp
pop
out
sar
sub
sub
pop
shl
pop
test
jno
add
jp
fwait
or
(bad)
dec
test
mov
dec
loopne
js
cmp
or
mov
mov
mov
or
lods
inc
(bad)
or
add
jo
stos
repz
lahf
jnp
dec
jo
inc
xlat
dec
xor
out
xor
jae
push
cmp
int3
fstp
sbb
jle
nop
outs
cmps
sub
std
popa
scas
or
cmp
out
imul
movs
mov
add
push
iret
popf
cmp
dec
sub
pushf
dec
or
jns
rol
mov
push
jns
sti
mov
or
mov
fld
adc
test
and
pusha
jo
test
add
push
arpl
push
test
int
fld
sbb
mov
sub
sub
lock
call
inc
push
sub
pusha
and
loopne
ss
or
sub
jmp
cmps
mov
daa
in
sub
mov
sahf
lea
or
dec
ins
xchg
and
or
lsl
icebp
fld
ja
mov
inc
stc
inc
sub
cmp
mov
imul
push
leave
adc
ret
add
push
aad
shl
ja
out
mov
or
and
in
add
in
mov
and
xchg
push
test
ror
test
cmp
mov
inc
and
inc
and
inc
aam
pop
xchg
push
adc
scas
stos
add
sbb
xor
arpl
pop
ins
dec
cmps
addr16
and
(bad)
outs
clc
inc
stos
sub
pop
cmp
or
mov
int
ror
mov
mov
test
(bad)
shr
or
mov
bound
daa
test
sbb
shl
inc
fsubr
(bad)
popa
fldenv
add
test
stos
inc
shl
mov
and
(bad)
cli
mov
pop
lea
bound
cs
leave
adc
mov
dec
jnp
ja
(bad)
fwait
push
dec
mov
dec
shl
xor
stos
das
call
inc
loop
sub
icebp
jae
jo
sbb
mov
mov
popf
inc
push
outs
fsubr
pop
in
sub
adc
pop
inc
xor
in
outs
jmp
pop
jb
es
test
xchg
and
in
push
xchg
xchg
addr16
mov
mov
push
in
push
in
std
ds
cmc
xor
pushf
pop
ins
fwait
sub
pop
adc
or
or
or
pop
sub
jge
pop
in
mov
bound
ds
mov
cmp
cwde
dec
std
dec
(bad)
movs
mov
adc
sbb
mov
pminsw
xor
jo
stc
fidivr
dec
xchg
enter
pop
shl
pop
std
xlat
jmp
inc
xchg
sbb
mov
xchg
shr
xchg
mov
mov
ins
data16
cmps
cmp
stos
mov
lods
fistp
fild
pop
in
lods
jp
lock
sbb
mov
xchg
add
mov
inc
mov
fild
dec
into
imul
xchg
jb
push
sub
nop
gs
sub
out
(bad)
loope
xor
ss
test
repnz
pop
fnstenv
xor
xchg
pop
sub
jp
jo
ins
mov
sbb
ins
xor
lods
scas
ja
jae
ret
and
(bad)
or
outs
mov
pushf
in
(bad)
xchg
adc
in
add
(bad)
pop
fcmovnu
aaa
lds
in
inc
push
xor
mov
ds
jg
cmp
and
mov
ret
adc
cmp
xor
not
out
xor
cli
sub
jbe
xor
cwde
leave
adc
inc
xlat
mov
mov
mov
(bad)
mov
push
jmp
icebp
(bad)
and
xor
call
shl
(bad)
std
stc
sub
ins
dec
sub
repnz
mov
jno
popf
push
pusha
jl
repz
adc
add
loop
imul
(bad)
add
jl
push
icebp
push
movs
scas
retfw
xchg
fwait
xchg
idiv
push
mov
out
dec
push
mov
imul
xchg
test
cmp
(bad)
and
and
or
rcl
dec
add
retf
xchg
es
test
je
push
or
add
add
pop
dec
sete
dec
mov
or
addr16
push
test
jnp
or
data16
fs
add
cmps
mov
fisttp
ror
data16
mov
addr16
add
mov
xchg
jecxz
push
hlt
(bad)
das
dec
adc
shl
fisub
loopne
pusha
mov
fwait
xchg
fcomp
inc
and
pop
mov
sbb
sahf
add
ja
jae
mov
xor
jmp
jbe
sbb
mov
es
test
in
inc
clc
add
rcl
push
aas
jmp
arpl
inc
jmp
pop
lock
mov
loop
xor
pop
jmp
stos
aam
inc
(bad)
mov
stc
and
xchg
mov
xor
push
mov
jb
push
jp
lods
lods
push
mov
fisubr
jge
in
clc
cdq
adc
jo
(bad)
into
aad
rcl
sar
test
sbb
xor
mov
ror
jne
mov
xor
(bad)
jb
fdivr
je
ins
xor
mov
mov
push
add
movs
mov
push
dec
fidivr
mov
xor
add
push
mov
dec
scas
fsubr
mov
data16
std
inc
loop
aad
cli
imul
sub
xor
xchg
shl
lods
(bad)
test
fwait
ret
inc
loope
cmps
ret
out
in
jns
dec
inc
ds
fst
mov
mov
popa
outs
and
xchg
rcl
fwait
push
movs
fdiv
ret
inc
jmp
scas
mov
rcr
sbb
adc
sbb
pop
jmp
sahf
inc
xchg
jge
mov
xor
mov
(bad)
out
fisubr
(bad)
psllq
jge
jmp
inc
(bad)
mov
cmp
sbb
jae
rol
cld
xchg
movs
jae
jno
(bad)
arpl
inc
fs
pop
xor
idiv
and
sti
nop
mov
and
outs
shl
cmp
sub
fnstcw
fnstsw
fsubr
pop
call
jmp
fs
(bad)
mov
mov
push
mov
(bad)
enter
popa
ret
rcl
movs
mov
out
sub
fucom
sar
clc
inc
jp
sbb
xchg
imul
js
cmp
jns
xchg
inc
hlt
and
std
dec
cdq
sub
loope
jmp
repz
adc
nop
inc
fdiv
inc
(bad)
mov
jns
cwde
(bad)
daa
rcr
nop
leave
repnz
div
(bad)
sahf
ss
ss
jg
or
pop
fimul
mov
(bad)
cmp
sub
addr16
je
outs
push
fdivr
jg
dec
mov
xor
(bad)
jno
xchg
inc
xchg
loopne
jle
xchg
xor
icebp
daa
repnz
push
mov
xor
shl
sbb
cmp
xor
outs
loop
imul
xchg
xor
int3
daa
jno
mov
adc
mov
and
bound
lds
add
(bad)
dec
popf
aas
and
in
in
or
imul
neg
dec
hlt
sub
cmp
push
(bad)
int
and
fst
inc
push
xchg
in
xor
test
inc
mov
out
and
cmp
add
stos
cs
aad
pop
sbb
mov
mov
cld
test
cs
test
andps
cmp
sub
cs
std
push
jge
push
loopne
add
je
adc
mov
pop
and
jnp
xor
xor
add
xor
cdq
and
mov
xchg
aad
cmp
movs
pcmpgtw
outs
stos
jbe
fs
lods
aam
mov
push
add
add
add
xor
mov
add
cmp
div
ds
inc
sbb
mov
mov
out
push
dec
das
adc
outs
out
mov
push
test
ins
hlt
push
push
mov
test
fidivr
nop
adc
push
inc
jle
(bad)
ds
pop
arpl
sub
or
aad
mov
push
mov
int3
pusha
retf
cmp
sub
mov
mov
stc
outs
jmp
outs
xchg
repnz
jl
jne
dec
push
std
inc
ins
sbb
jp
mov
gs
jmp
in
dec
ins
xor
lock
inc
jmp
addr16
sbb
inc
pop
jmp
sub
adc
lds
mov
mov
jbe
das
jbe
jecxz
aas
icebp
jb
mov
cmps
mov
push
rcr
push
test
mov
gs
sub
jno
jg
data16
icebp
dec
cmp
ret
hlt
out
jge
neg
mov
and
inc
pop
pop
push
pop
jnp
mov
xchg
pop
adc
ds
jl
pop
push
dec
bound
outs
xor
inc
cmp
mov
fs
dec
push
push
lods
shl
sar
or
frstor
xor
dec
xchg
(bad)
jp
pop
mov
fiadd
out
jmp
adc
shr
mov
retf
shl
xor
mov
sub
fs
dec
xchg
icebp
jmp
mov
xchg
fcomip
sti
lods
sbb
jbe
into
xchg
push
dec
in
push
sub
je
pop
cdq
adc
adc
ret
jo
in
mov
jg
sub
ja
out
dec
sub
mov
out
add
scas
mov
lds
in
daa
cli
mov
hlt
jecxz
pop
pop
cs
mov
and
repnz
xor
clc
and
lods
sub
add
jmp
cmp
adc
retf
out
rcr
push
cli
shr
dec
loope
hlt
lods
mov
push
dec
mov
jae
imul
push
xchg
in
mov
dec
pop
sbb
mov
ins
xchg
adc
or
out
shl
sub
loop
sbb
xchg
cdq
xchg
ins
das
daa
xchg
xchg
cs
popf
mov
shl
cld
xor
pop
fcomi
jae
inc
(bad)
jno
fstp
loop
or
fmul
popf
and
cwde
call
gs
ds
inc
movs
xchg
jnp
scas
loopne
enter
xchg
cli
sub
mov
outs
es
cld
cs
scas
arpl
pop
dec
ins
sub
cmc
pop
imul
push
imul
cmp
icebp
mov
js
ins
push
or
push
ret
mov
xchg
adc
adc
movs
test
add
sub
cmps
sub
shl
jmp
shl
sub
sbb
push
pmulhw
dec
lahf
and
jecxz
mov
dec
jno
call
mov
cdq
cmps
cs
cmp
fild
(bad)
push
imul
leave
rcr
push
sub
xchg
sbb
(bad)
mov
test
sbb
lea
mov
in
mov
mov
sti
mov
mov
inc
dec
and
add
in
test
add
dec
dec
push
adc
call
ss
and
dec
out
xchg
fsub
popa
xor
(bad)
push
add
xchg
(bad)
inc
sar
and
jecxz
inc
dec
js
dec
xlat
cmp
add
(bad)
jae
scas
mov
fadd
aas
or
and
ja
mov
add
cli
xchg
bound
xchg
push
jns
mov
push
or
stos
test
add
jae
mov
cmp
mov
sub
xchg
jns
mov
mov
dec
cmps
lods
aad
ror
scas
jg
add
sbb
and
xor
inc
es
mov
push
inc
repnz
dec
sbb
mov
and
mov
inc
adc
test
push
inc
and
inc
out
fist
adc
push
sub
ror
inc
adc
inc
push
lahf
fld
call
cwde
mov
and
imul
int
jns
test
loop
mov
jae
mov
(bad)
sub
cs
push
push
cmp
jne
iret
ret
clc
inc
and
inc
add
daa
jne
add
push
add
or
in
cmps
std
nop
inc
xor
(bad)
retf
loop
retf
in
sahf
push
add
dec
dec
clc
inc
test
push
call
mov
ror
or
mov
inc
mov
xchg
ror
or
jmp
sahf
push
daa
jle
inc
add
mov
xchg
pop
adc
fidivr
test
pop
inc
push
test
pop
xchg
pop
push
mov
add
mov
sub
fstp
test
inc
enter
repz
fwait
ret
arpl
out
sbb
and
fucomip
cmp
outs
imul
jmp
and
inc
out
stos
jne
outs
aaa
in
dec
push
and
(bad)
jmp
push
shl
data16
fdiv
sub
les
arpl
sub
jl
jae
out
sbb
inc
fs
or
in
aas
je
dec
ins
mov
addr16
sbb
xor
js
push
xchg
and
xor
aaa
fisttp
add
sar
pop
mov
fisub
mov
cmp
and
push
call
int
je
test
lock
jl
cmps
or
jb
adc
push
xchg
dec
mov
mov
inc
pop
sub
adc
ins
mov
add
adc
or
xor
test
imul
pop
cmp
add
ds
sbb
xlat
ins
jo
mov
movs
daa
push
push
or
and
popf
aam
push
and
ret
rol
mov
or
cmc
in
adc
not
ins
jl
pop
mov
cli
dec
in
out
push
push
jns
mov
push
mov
dec
dec
nop
and
pop
adc
adc
scas
loope
add
movs
leave
loop
and
xor
add
mov
and
xchg
pop
cmp
fnstsw
add
cmp
mov
jl
out
or
sub
inc
add
or
or
or
cwde
and
test
sub
adc
rol
pop
(bad)
inc
cmc
inc
sub
cmps
outs
xlat
sbb
ret
shl
mov
mov
or
icebp
or
scas
push
(bad)
popa
popa
arpl
mov
repnz
and
and
jne
ss
xchg
sar
pop
inc
jb
pop
shl
loope
pop
sub
fmul
or
add
dec
add
add
inc
adc
inc
adc
mov
mov
pop
sub
inc
shl
mov
js
dec
test
fdiv
mov
out
pop
jmp
test
cmp
xor
dec
jmp
data16
add
jb
jl
fisttp
call
sub
mov
xor
push
dec
xlat
out
cmps
push
add
dec
es
neg
cmps
pop
and
sbb
cdq
and
and
pusha
push
imul
jle
stc
int3
jae
xchg
in
add
aas
cld
add
mov
shr
add
jae
inc
shr
fs
stc
fcomp
mov
xor
pop
mov
adc
xchg
out
aaa
retf
mov
sbb
shl
mov
icebp
xchg
shr
js
fwait
mov
enter
ror
push
(bad)
add
leave
pusha
mov
cs
test
add
push
add
or
movs
pop
fs
and
cdq
add
(bad)
fs
push
test
ror
pop
fld
push
daa
nop
or
add
(bad)
aas
cdq
adc
jmp
loope
call
cmp
mov
sbb
cmc
jb
adc
jmp
stos
cmps
fst
gs
fsub
int
frstor
sbb
(bad)
xor
call
xchg
sbb
shl
sub
dec
push
mov
repnz
fadd
mov
add
test
addr16
arpl
adc
adc
cmp
pop
shl
lock
fcom
pusha
ss
hlt
cli
daa
sbb
push
retf
leave
lss
fsubr
mov
jns
loopne
imul
mov
lahf
nop
mov
push
xchg
pop
sbb
aam
jno
in
pop
fisubr
mov
fwait
in
ja
aad
int3
int
out
push
jbe
mov
int
pop
rcl
les
outs
push
aaa
cs
fst
ja
sub
nop
mov
cmps
cmps
cmp
sbb
and
sub
(bad)
push
add
dec
shl
retf
popf
mov
scas
jnp
mov
sahf
aaa
xchg
and
mov
cmp
test
fild
fimul
ret
pop
sub
les
arpl
imul
mov
data16
xor
mov
pop
xor
jae
cmc
push
jecxz
jmp
xchg
and
icebp
inc
cmps
cmp
mov
or
pmulhw
mov
icebp
mov
iret
popf
retf
mov
sub
mov
cmp
jae
ins
adc
clc
add
push
dec
xlat
cmp
int
sub
shr
lock
sub
and
(bad)
ins
cmps
leave
or
stos
pop
ficomp
sbb
inc
add
fsub
fsubp
cmp
push
aam
xchg
in
inc
repnz
fisubr
and
inc
cmp
and
ror
sbb
adc
jecxz
imul
jg
pop
inc
add
aad
xchg
gs
outs
test
out
imul
in
ja
jl
fisubr
pop
loopne
js
jmp
hlt
stc
ins
stc
loope
popf
inc
or
sbb
dec
jecxz
aaa
cmp
jp
call
mov
in
inc
mov
fsubr
es
mov
dec
xchg
jns
jge
(bad)
shl
sbb
icebp
mov
jmp
xchg
sub
in
enter
jge
pop
pop
test
mov
jp
test
inc
mov
mov
or
pop
imul
(bad)
outs
test
dec
pushf
(bad)
sahf
jle
jne
sbb
mov
or
xchg
pop
dec
jecxz
adc
repz
lods
dec
adc
and
(bad)
loop
add
mov
ja
shl
(bad)
mov
add
in
sub
in
dec
leave
dec
in
imul
daa
aam
sub
mov
(bad)
sub
into
movs
iret
jl
ds
test
or
das
jno
lds
packssdw
cmc
es
gs
lds
fstp
cmp
and
push
dec
xor
int
dec
jge
lahf
retf
rcl
loop
ins
jae
in
cld
scas
pop
in
cwde
arpl
in
out
retf
sub
push
aas
xlat
inc
pop
dec
pop
push
nop
cmp
add
dec
jmp
mov
and
inc
je
inc
in
add
hlt
push
call
test
and
mov
push
push
mov
fst
mov
cmp
mov
xor
mov
pop
and
mov
xchg
xor
(bad)
mov
jnp
fnstenv
inc
mov
out
mov
call
test
aas
sub
mov
cld
sbb
jae
xor
jo
adc
or
jnp
iret
inc
aas
and
(bad)
jo
sub
or
inc
jno
cmp
push
push
adc
jmp
cmp
ret
(bad)
out
sbb
push
push
mov
mov
cmp
mov
loopne
jno
cs
in
ins
pop
mov
cs
mov
std
or
loop
cmp
ret
das
cmp
xchg
jecxz
cmps
xor
les
jl
mov
mov
and
fst
fs
pop
xchg
mov
daa
xchg
xchg
(bad)
jmp
imul
sbb
mov
mov
mov
scas
sub
push
xchg
scas
aas
adc
fs
mov
push
push
or
xchg
movs
bound
jecxz
dec
aaa
(bad)
cli
stos
mov
add
movs
push
mov
out
sub
push
xor
call
retf
pop
sbb
jbe
retf
(bad)
sti
sub
xor
pop
sub
ret
pusha
hlt
mov
jne
imul
and
iret
add
mov
lods
imul
jb
rcr
pop
aam
cdq
ror
repz
call
mov
mov
add
mov
repnz
dec
pop
xchg
pop
mov
sub
sub
sub
popa
(bad)
xchg
push
cmc
jl
out
dec
xchg
jl
sti
lock
dec
mov
mov
std
xlat
or
pop
mov
xor
cwde
xchg
out
mov
jnp
mov
shl
imul
sbb
out
jge
aas
hlt
pop
pop
jle
call
push
mov
in
or
sub
out
jl
inc
xor
pop
lock
mov
ins
sbb
leave
bound
loopne
sti
sti
adc
call
xchg
in
xchg
mov
jle
stos
cld
jl
mov
cmp
sbb
addr16
jge
popa
call
jnp
imul
pop
clc
pop
sbb
xor
mov
or
js
iret
(bad)
arpl
sar
ret
(bad)
retf
jp
retf
inc
and
in
or
daa
imul
mov
pusha
dec
pop
and
ss
repnz
sar
and
cmp
addr16
leave
pop
into
fsub
xor
sar
dec
enter
push
mov
mov
or
pop
jb
cdq
pop
mov
jae
add
ins
ds
out
into
(bad)
pushf
or
mov
ja
mov
sub
lods
popa
pop
loop
and
dec
xor
scas
jmp
popa
cdq
gs
jl
jmp
jle
dec
mov
push
xor
out
cmp
inc
jle
inc
pop
jmp
lods
mov
(bad)
sub
jp
ror
clc
push
jmp
scas
js
xchg
jns
push
mov
scas
outs
and
and
pop
cmp
imul
sub
pop
dec
aas
xchg
fimul
cmp
pusha
sbb
cs
mov
fisttp
arpl
mov
lods
xor
xor
ins
icebp
iret
sub
ret
retf
or
iret
push
inc
stos
and
fild
movs
in
pop
arpl
jnp
mov
int3
je
mov
hlt
(bad)
and
je
int3
in
js
dec
mov
loop
jb
leave
hlt
inc
rcl
outs
stos
dec
dec
sub
sub
push
ficom
dec
imul
fstp
xchg
cwde
int3
repz
addr16
jmp
jmp
fs
push
(bad)
into
cmp
mov
(bad)
jle
push
outs
fs
stc
jb
int
dec
pop
pop
jecxz
gs
mov
cmp
enter
repnz
aas
outs
jo
lds
pop
mov
(bad)
packssdw
popa
xor
mov
enter
imul
xchg
xchg
push
nop
cmp
in
cmp
inc
sub
or
or
add
jge
and
test
or
dec
pushf
jno
push
dec
pop
jb
mov
mov
sbb
mov
pop
aam
mov
inc
mov
mov
inc
enter
(bad)
retf
enter
push
sub
push
rcr
and
cmps
add
int3
bound
push
push
inc
sbb
push
lods
mov
ja
or
in
aaa
xchg
aas
adc
and
adc
push
inc
stos
stos
dec
push
adc
pop
pop
pop
stos
dec
sub
or
inc
andps
add
add
ss
test
(bad)
sbb
dec
and
lock
mov
stc
dec
rcl
inc
dec
jmp
retf
and
mov
in
nop
dec
mov
std
nop
add
dec
and
and
inc
xchg
inc
and
add
sub
gs
mov
inc
and
ds
add
fldenv
dec
add
and
adc
xchg
test
out
cdq
jno
scas
test
dec
scas
mov
xchg
push
mov
or
clts
rol
xchg
push
inc
push
adc
leave
mov
add
push
std
retf
ret
push
jp
shl
mov
sub
mov
call
mov
adc
shl
dec
cmp
cmps
sub
js
imul
out
test
iret
dec
dec
mov
push
fiadd
js
mov
pusha
cmp
add
jns
jno
repz
jbe
fld
xchg
and
and
popf
mov
mov
imul
sub
sub
out
fwait
ja
dec
jl
div
jbe
sbb
frstor
xchg
ins
inc
jo
loopne
or
loope
ficomp
aad
in
cmps
jno
add
aad
mov
fadd
dec
inc
adc
sbb
dec
nop
inc
add
push
scas
mov
xchg
sbb
add
xlat
sub
sti
test
dec
inc
loopne
loope
fnstenv
xchg
pop
dec
and
ja
jbe
jns
pop
stc
push
sub
xchg
lea
and
je
jne
je
arpl
into
ja
cmps
xchg
neg
jl
mov
mov
jl
add
inc
fstp
retf
or
or
call
movs
sub
add
mov
and
mov
and
fwait
fwait
sbb
adc
mov
sahf
add
xor
bound
inc
xor
sti
mov
push
ja
scas
push
sub
outs
push
leave
and
loope
or
adc
dec
and
mov
jge
add
ret
pushf
shr
xchg
sti
xchg
sub
add
or
xchg
push
dec
adc
and
shl
cmp
ds
sub
nop
test
adc
and
add
inc
dec
add
inc
or
fldenv
or
or
or
xor
dec
stos
add
inc
add
inc
cmp
sbb
mov
adc
dec
mov
or
or
cwde
jl
nop
and
leave
test
mov
mov
fldlg2
cmp
arpl
dec
mov
sar
cli
mov
inc
push
inc
push
inc
pop
push
push
mov
in
add
mov
or
pop
mov
mov
push
sti
push
lds
inc
adc
add
jmp
add
or
cmp
xchg
push
arpl
jne
add
dec
inc
and
rol
jo
fnstcw
lock
arpl
lock
ror
cld
mov
inc
cld
and
sbb
scas
cmp
push
jb
idiv
mov
dec
loopne
std
aas
sub
loop
loopne
and
enter
aad
pop
cli
mov
push
std
shl
xor
lahf
(bad)
xchg
pop
pop
cmc
xor
jnp
rol
repnz
fstp
pop
xor
(bad)
enter
dec
cmp
retf
and
mov
fld
loopne
ret
(bad)
cs
push
imul
test
pop
out
mov
xchg
pop
sar
pushf
mov
pop
retf
mov
addr16
hlt
stc
xlat
icebp
cmps
sub
push
jno
adc
repnz
dec
jecxz
adc
loop
jne
rol
fcom
xor
push
or
and
pop
push
and
out
aad
pop
and
push
std
adc
cmp
jne
jge
sub
sbb
fstp
cmp
cmps
rol
mov
inc
mov
rol
inc
pop
popa
loopne
in
mov
aad
cmps
(bad)
adc
pop
retf
mov
and
leave
inc
pop
shl
add
aam
push
or
iret
jp
dec
ret
adc
inc
and
push
nop
shl
pop
mov
or
outs
ins
ins
push
inc
fimul
add
out
xchg
sbb
not
inc
add
inc
fwait
mov
fst
(bad)
movs
es
inc
jmp
(bad)
stos
retf
add
pop
ret
sub
scas
js
mov
and
mov
xor
cmp
cmps
dec
out
mov
pop
jnp
sti
mov
jmp
xchg
inc
cmp
xor
or
daa
push
mov
mov
cmp
je
js
and
cdq
iret
and
(bad)
cli
scas
xlat
jnp
(bad)
cmp
es
jmp
and
jg
pop
mov
popf
rol
bound
pop
adc
mov
xor
ja
in
adc
jno
xchg
ds
inc
repnz
lahf
mov
ret
int
mov
rol
push
and
fcomp
dec
or
mov
outs
ds
pop
mov
jae
lock
retf
mov
enter
add
sub
repz
jns
push
inc
or
pop
cmc
pshufw
mov
and
mov
test
leave
jnp
mov
cmps
mov
sbb
popf
fidiv
das
ret
xchg
mov
lock
pop
jae
int3
xchg
nop
icebp
cmc
xor
test
inc
cld
(bad)
dec
sub
nop
xlat
or
add
outs
outs
movs
shr
movs
mov
shr
out
in
mov
jp
data16
leave
sub
js
(bad)
cmp
neg
inc
or
out
scas
retf
in
xor
loop
add
jle
movs
bound
add
stc
dec
push
sub
daa
mov
xchg
dec
movs
jmp
mov
idiv
xchg
adc
jl
ja
repz
jp
(bad)
clc
js
inc
pop
sbb
jmp
push
mov
xchg
push
mov
mov
or
fstp
adc
dec
ins
xchg
cmp
jl
aaa
mov
pop
enter
jmp
sbb
add
adc
inc
(bad)
push
int
jl
inc
dec
sub
ror
fstp
popa
fs
mov
xor
push
adc
div
push
sub
je
jo
repnz
out
aaa
clc
push
fs
xchg
pushf
xchg
push
loopne
out
mov
cs
sbb
sub
mov
rol
dec
das
sub
sbb
sbb
inc
imul
push
pop
pop
mov
inc
lahf
mov
mov
mov
call
cs
mov
pop
xchg
sahf
mov
or
pop
nop
xlat
adc
sahf
mov
mov
sar
mov
fdiv
in
(bad)
or
scas
or
pop
fmul
mov
cli
cmp
aas
push
retf
and
xchg
sbb
add
xchg
hlt
mov
push
retf
mov
sub
add
ins
jle
clc
xor
popa
and
push
sti
sub
fs
xchg
sub
mov
sbb
mov
scas
dec
in
dec
ss
neg
dec
rcl
mov
inc
push
add
sub
cmps
jmp
and
push
pop
idiv
add
retf
sub
fadd
test
pop
aam
sbb
daa
aaa
ss
leave
push
enter
mov
loop
(bad)
call
xor
xchg
pop
add
(bad)
mov
add
cmp
enter
fstp
sbb
scas
fistp
inc
or
and
mov
push
pop
inc
push
dec
pop
xchg
mov
out
xchg
iret
mov
(bad)
imul
je
mov
push
inc
push
pusha
pop
retf
push
sub
arpl
cmp
ret
mov
dec
or
ja
adc
jle
sbb
test
cld
inc
xor
ret
mov
sub
sti
scas
(bad)
aas
test
lods
popa
xor
xchg
ja
pusha
sbb
inc
sbb
(bad)
inc
xchg
in
xchg
push
enter
out
mov
rol
bound
fimul
cs
push
inc
jmp
cmps
addr16
jmp
push
mov
sbb
ins
xor
(bad)
repnz
xchg
out
mov
(bad)
ss
push
cmps
xlat
dec
dec
pop
cmp
or
pop
or
or
inc
inc
add
sbb
cmc
mov
cmp
sbb
(bad)
ins
shl
push
jns
push
enter
push
jl
dec
sahf
ret
mov
aaa
sbb
jp
iret
inc
sbb
or
mov
add
or
lock
and
pop
inc
loop
iret
bound
test
cmp
pop
(bad)
lock
sbb
mov
std
push
sbb
gs
jmp
loope
sbb
sbb
loop
das
cmp
sbb
xor
and
ja
loopne
jmp
mov
repz
jo
inc
mov
jo
mov
lods
sbb
xchg
sub
cmp
pop
pusha
fsubr
sub
and
frstor
cmp
neg
fnstsw
mov
sbb
cmp
hlt
fwait
loope
mov
jmp
push
retf
aad
movs
cmps
mov
jbe
std
pop
sub
fs
ja
imul
add
ja
adc
repnz
aad
scas
loopne
mov
int
inc
pop
fld
and
inc
jb
or
dec
mov
sbb
aaa
mov
adc
fmul
inc
loope
mov
mov
mov
cmp
in
xchg
pop
push
and
in
mov
es
and
mov
outs
mov
aaa
push
ror
mov
sbb
jne
mov
push
pop
nop
xchg
cmc
cmp
clc
or
and
jns
call
dec
fwait
enter
adc
jnp
leave
pop
sbb
mov
mov
xchg
daa
push
xchg
or
(bad)
mov
xchg
xor
push
fsub
lds
and
std
inc
mov
add
mov
mov
jp
leave
call
dec
sbb
(bad)
leave
fadd
jg
jmp
iret
or
aaa
xchg
leave
jne
rol
pop
cli
sub
ret
shl
pop
fcomp
test
ins
or
pop
scas
push
sti
jo
ja
addr16
mov
int
mov
shr
jge
ret
mov
ins
mov
fnstenv
(bad)
inc
add
fwait
or
or
lods
push
or
addr16
pcmpgtw
and
xor
retf
dec
fcmovnb
pop
jo
dec
rcr
sbb
ja
dec
pushf
retf
cmc
inc
in
sti
adc
inc
into
imul
stos
test
xchg
cmc
cld
daa
in
cmp
fisttp
dec
iret
lds
arpl
push
call
js
sub
int3
jge
xor
clc
(bad)
pop
jno
dec
xchg
sbb
xor
push
pop
int
and
sub
lods
mov
pop
sub
fstp
in
fsubp
sti
scas
and
and
(bad)
fwait
in
mov
shl
jo
inc
or
test
enter
mov
das
lods
imul
mov
dec
adc
in
jne
hlt
mov
cmp
jns
add
pop
ret
jp
xchg
adc
jae
sub
mov
(bad)
dec
shl
mov
shl
mov
(bad)
call
out
cmp
xchg
lea
mov
cmp
push
mov
mov
test
sub
jmp
imul
add
pop
xchg
add
stc
sbb
push
pop
ins
aaa
repz
mov
inc
fnstcw
lahf
pop
and
(bad)
iret
retf
out
movs
push
or
mov
ds
or
call
mov
fldpi
loop
cli
scas
jbe
sbb
cmp
ret
and
xor
sub
mov
add
push
fdiv
push
mov
addr16
and
xchg
pop
icebp
ret
movs
cdq
gs
cmp
loopne
fistp
pop
or
inc
mov
(bad)
cmp
jmp
loopne
sahf
push
sbb
in
fiadd
sub
push
xchg
imul
rol
aas
sbb
outs
clc
fadd
cmp
jecxz
dec
fdiv
dec
cmp
cmp
stos
jae
adc
push
std
fmul
cli
stos
pop
xor
pop
test
(bad)
sahf
jp
int
jbe
xchg
inc
in
ja
int3
test
push
fucomp
mov
iret
dec
(bad)
dec
aam
adc
sbb
out
fsubr
adc
xor
adc
push
dec
std
xlat
iret
jg
push
push
aam
outs
(bad)
or
lahf
xchg
jno
movs
js
xor
mov
stc
add
pop
and
add
and
pop
ss
addr16
popa
inc
(bad)
mov
jnp
loopne
add
cmp
or
cmps
mov
inc
aas
or
jp
inc
loopne
fdivr
(bad)
fdivr
pop
add
pusha
push
lds
outs
cli
jg
fs
out
enter
add
dec
shl
in
sbb
int3
mov
sub
fldenv
call
ficom
xor
mov
jg
sbb
inc
cmps
push
int3
ret
mov
mov
pop
sbb
fs
retf
xor
or
jmp
xor
movs
and
ror
stos
scas
push
sub
mov
arpl
mov
repz
inc
mov
xchg
popf
mov
dec
pop
stos
outs
xchg
add
fistp
push
sar
retf
mov
es
lods
lea
and
outs
outs
sbb
js
dec
sbb
pop
pop
hlt
pop
arpl
stos
data16
cmp
add
movs
pop
cmp
jns
pushf
pop
jecxz
and
mov
adc
push
push
dec
or
pop
jb
repz
arpl
jge
inc
sub
sbb
repnz
cmp
cwde
test
and
sub
xor
push
jl
cmp
add
adc
mov
and
mov
cmp
ins
sub
inc
and
inc
push
dec
in
and
adc
inc
fiadd
cmp
or
rol
add
mov
xchg
fs
jnp
adc
jno
stc
pop
test
sar
mov
pop
shl
mov
(bad)
lock
add
ret
xor
aaa
push
inc
enter
push
test
cmp
aad
and
and
inc
adc
inc
adc
mov
add
mul
push
add
fwait
or
aad
inc
and
sub
adc
adc
cmp
jp
rcr
pop
jmp
popa
jo
mov
mov
and
dec
or
ins
xchg
adc
dec
mov
shl
scas
fsubr
dec
inc
dec
sbb
loop
addr16
pop
mov
shl
cmp
jmp
cmp
mov
lods
les
cmp
xchg
jle
out
vfmsubsd
xor
jns
lea
mov
push
fild
int3
js
and
xor
dec
sub
hlt
cmc
cld
es
(bad)
push
fisub
jne
imul
call
sbb
loope
sbb
inc
or
arpl
or
stos
fmul
jnp
rcr
cmc
push
xor
adc
push
enter
ficomp
test
or
mov
lds
and
xchg
push
jnp
inc
sub
cmp
inc
mov
imul
aaa
dec
daa
ins
jno
fs
cs
lahf
test
xor
mov
adc
repnz
push
out
stos
push
retf
jnp
movs
or
cs
fild
inc
mov
xchg
test
cs
and
stc
inc
add
rol
sbb
movs
sbb
call
xor
inc
pop
adc
and
test
add
cmp
inc
add
cld
sub
jno
mov
inc
pusha
jo
add
mov
leave
mov
sub
test
xchg
push
inc
(bad)
or
sub
sub
ret
stos
mov
mov
shl
mov
sbb
add
and
add
inc
inc
nop
dec
mov
pop
outs
mov
movs
inc
add
inc
add
dec
cmp
sbb
inc
lods
scas
daa
call
sub
and
push
add
sub
jae
daa
xlat
inc
sti
movs
push
mov
push
pop
and
dec
adc
sbb
dec
inc
and
inc
and
push
sub
or
movs
pop
adc
icebp
dec
and
add
or
or
or
or
and
or
sub
bound
inc
ror
rcr
push
xor
xor
fldenv
stos
push
(bad)
leave
xchg
push
push
and
mov
lea
addr16
loopne
scas
bound
pushf
mov
outs
popa
call
push
inc
test
add
inc
or
cmp
popf
add
mov
dec
movs
neg
mov
add
jge
clc
addr16
out
push
mov
dec
mov
pushf
jge
gs
jbe
cdq
or
(bad)
mov
and
dec
popa
push
mov
movs
loopne
jge
into
dec
inc
fcmovnb
xchg
movs
es
leave
fisttp
cmp
jae
push
fadd
ror
push
cmp
jnp
and
out
aam
fwait
enter
inc
cmc
add
mov
adc
movs
(bad)
mov
xchg
and
add
in
std
xlat
out
arpl
xlat
xor
pop
dec
movs
adc
inc
mov
cmp
icebp
mov
xchg
enter
fist
add
retf
jecxz
add
mov
inc
cmps
xchg
mov
xor
js
mov
dec
inc
outs
jo
mov
xchg
rcr
inc
push
or
or
stc
inc
lock
add
nop
or
pop
sti
add
cmp
mov
stos
mov
push
jp
inc
scas
sbb
mov
mov
out
jmp
out
fsubr
cs
mov
add
xor
pop
add
add
(bad)
in
mov
mov
mov
mov
jge
jne
xor
adc
jne
adc
call
cmp
and
jp
dec
mov
adc
fdivr
test
test
or
ds
push
ds
or
mov
sbb
repnz
retf
mov
or
xchg
iret
ret
jne
iret
rcr
xchg
(bad)
xor
out
gs
(bad)
xlat
imul
gs
stos
mov
nop
stc
rcr
call
jmp
repz
outs
daa
cli
mov
daa
ss
arpl
(bad)
out
mov
xor
or
jns
frstor
icebp
push
cs
ror
mov
ss
retf
xor
aad
add
jp
and
mov
push
arpl
jne
test
int
sub
xor
shl
mov
fidivr
cmp
arpl
jnp
add
clc
in
xchg
fsubr
repnz
lods
addr16
stc
in
test
mov
dec
xchg
sub
mov
scas
inc
sub
xchg
mov
fwait
aad
rdtsc
loop
jae
dec
leave
test
repnz
or
fimul
or
jbe
mov
inc
ins
mov
stc
pop
jl
cmp
sbb
lock
out
aas
movs
enter
add
and
pop
aam
out
gs
add
or
cld
cmp
mov
ins
ja
ins
icebp
cmp
adc
js
loop
mov
aaa
mov
push
push
stos
repz
daa
xchg
xchg
push
in
pop
pop
xor
xor
shl
sbb
dec
lods
in
mov
xchg
retf
icebp
jmp
fcmovb
xlat
lds
popa
sbb
lock
pop
jmp
scas
mov
pop
push
aas
jne
daa
push
popa
cmp
mov
xchg
sbb
xchg
inc
fs
ret
dec
lahf
out
aas
adc
fild
(bad)
or
cdq
mov
ret
xor
jbe
sbb
mov
inc
test
loope
xchg
cmp
sbb
in
adc
mov
cdq
xchg
fnstenv
(bad)
loopne
ss
mov
(bad)
cmp
das
cs
std
aas
jne
(bad)
mov
addr16
mov
aaa
fs
inc
adc
(bad)
push
sbb
sub
dec
xchg
and
int3
inc
repz
add
add
shl
add
add
mov
cli
lea
dec
test
mov
mov
scas
adc
sbb
xor
inc
fstp
jbe
je
popf
inc
push
inc
test
add
pusha
fisubr
frstpm(287
dec
scas
popf
lods
mov
daa
stc
pop
xchg
xor
jmp
fcom
add
and
mov
out
mov
fdiv
xchg
xor
das
outs
(bad)
ins
(bad)
icebp
jbe
lahf
cmps
enter
inc
ins
cmp
imul
test
cmp
(bad)
mov
std
push
sbb
lahf
cmp
mov
fnstsw
scas
cmp
jg
lock
cmp
cdq
or
jecxz
sar
in
gs
ds
mov
lock
xchg
push
lds
jle
lods
js
inc
xor
fmul
or
out
pop
add
retf
icebp
inc
xor
mov
or
jae
jg
jl
arpl
in
cwde
xchg
sbb
(bad)
scas
pop
jg
ja
and
bound
and
sti
add
popf
cmp
imul
out
xor
cmp
mov
(bad)
ins
inc
mov
jne
pop
pop
ret
mov
sub
mov
cmp
sub
inc
pop
into
and
xchg
cmp
int
sub
imul
add
ds
pop
dec
add
push
cmp
push
gs
cmp
call
fisttp
test
mov
inc
sbb
movs
mov
xchg
cmp
xor
push
popf
mov
shl
xor
and
ins
mov
cmp
das
scas
jle
aaa
es
loope
rol
jns
popa
jle
int
pop
js
inc
and
xor
inc
into
in
pop
mov
rcr
sbb
loop
jne
pop
pop
xchg
cmp
add
add
fcmovbe
call
and
ins
jne
in
inc
push
retf
cmp
adc
cmc
cmp
loopne
(bad)
cmp
sbb
loop
scas
push
(bad)
mov
dec
pushf
call
push
push
enter
ja
jp
in
je
mov
xchg
fadd
xchg
mov
(bad)
xor
(bad)
mov
pop
push
push
arpl
add
repz
shl
loopne
cmp
outs
out
dec
imul
(bad)
ja
or
sbb
pushaw
jne
add
xor
push
sub
outs
frstor
imul
and
ret
es
shl
cmp
cmp
add
mov
jnp
fdivr
push
sti
cvtps2pi
pop
iret
push
aas
mov
in
or
mov
adc
cmp
inc
mov
fisttp
sar
daa
ins
rcr
jno
pop
retf
test
xchg
aam
xor
adc
fucomp
mov
mov
pusha
mov
aam
add
inc
stos
cmp
je
stos
adc
ret
nop
sub
hlt
cli
aas
mov
xor
mov
test
cmp
mov
fcomp
add
int
jmp
aaa
fnstenv
jge
pop
aad
mov
push
jae
bound
stos
mul
jl
inc
aad
je
fsub
mov
mov
loope
cmps
clc
xchg
or
repnz
lods
jae
xchg
movs
fcmovne
jmp
aam
in
jge
adc
pop
jns
fsubp
mov
enter
loop
jb
xchg
lea
out
pop
xchg
fwait
xchg
dec
(bad)
imul
or
jmp
mov
jecxz
dec
push
pushf
sbb
lock
cs
jl
call
add
rol
ins
jno
jmp
rol
dec
popa
clc
push
fs
je
jecxz
jno
dec
jns
gs
add
adc
pop
inc
call
cmps
gs
add
sbb
adc
stc
popa
xchg
inc
dec
popa
cli
or
outs
push
lods
xchg
test
rcl
mov
and
jno
cli
sub
inc
sbb
loope
scas
hlt
sub
aas
pop
cmp
adc
fnstenv
xchg
fistp
xchg
scas
add
pop
jne
jl
aas
sbb
and
pop
pop
and
inc
pushf
add
adc
mov
(bad)
in
jae
repz
sbb
sahf
scas
or
push
mov
ins
pop
popa
loopne
loopne
pop
sub
add
fdiv
sbb
sbb
sbb
cmps
clc
shl
cdq
xchg
data16
add
dec
fucom
das
sbb
mov
mov
cmp
xchg
int3
addr16
xchg
and
je
ficomp
and
les
xchg
mov
cmps
adc
cmp
pop
dec
sbb
jnp
in
je
mov
push
jmp
pusha
addr16
cmp
cwde
rcr
cs
sar
and
inc
repnz
xor
mov
pop
das
fwait
mov
out
jns
test
fidiv
mov
movs
cwde
loopne
cmp
(bad)
hlt
cmp
loop
cmc
or
call
fist
shl
clc
push
sar
mov
sbb
jbe
push
inc
js
mov
xchg
and
daa
push
retf
into
add
aam
inc
cli
test
add
ror
xor
pop
lea
cmp
nop
les
mov
or
dec
mov
jg
sti
cmps
xlat
dec
sub
dec
imul
in
out
xchg
iret
xchg
iret
and
dec
xchg
jmp
push
daa
mov
mov
ins
mov
jns
add
inc
mov
lahf
mov
jp
fdiv
retf
jns
add
mov
adc
push
and
jg
push
bnd
fwait
rcr
imul
mov
cwde
outs
iret
(bad)
lods
rol
xor
aaa
push
mov
pop
xor
scas
mov
xor
(bad)
fbld
shl
popf
(bad)
pusha
fld
cmp
pop
and
jle
jne
cwde
shr
push
fcom
aam
adc
sub
and
cld
sti
or
aad
mov
jecxz
dec
xchg
dec
fmul
loope
out
sub
xor
mov
pop
das
pop
lods
inc
cmps
pushf
jmp
movs
mov
jp
test
imul
cmp
in
fild
dec
mov
icebp
pop
sbb
cmp
jmp
inc
mov
ds
movs
aaa
shl
sbb
call
jmp
call
or
cld
fisttp
(bad)
jecxz
cmp
sbb
movs
nop
(bad)
in
add
and
dec
push
ja
adc
mov
sub
cmp
pop
push
scas
stos
fbld
or
and
pop
dec
xor
jo
scas
aad
loop
into
jle
xor
jbe
pop
add
and
cmp
sub
jns
dec
push
fiadd
fcmovnb
push
lods
ret
xchg
(bad)
mov
adc
or
mov
dec
or
(bad)
xor
inc
add
sub
mov
sbb
ja
pusha
cld
sahf
mov
sbb
fbstp
arpl
mov
cmc
sub
in
ins
and
adc
out
jp
xchg
ins
mov
jbe
mov
dec
cmc
add
or
ret
arpl
mov
adc
xchg
dec
jne
jmp
cs
push
mov
add
adc
cs
and
or
sub
popa
and
sub
jecxz
push
fwait
out
inc
mov
cmp
pop
cmc
inc
sbb
push
xchg
and
push
sahf
out
mov
add
or
dec
rcr
sub
push
in
mov
mov
adc
pusha
xchg
adc
shr
push
fcomp
pop
mov
inc
rol
jecxz
outs
push
fild
dec
sbb
in
mov
inc
nop
xchg
repnz
jbe
mov
or
add
inc
and
cwde
imul
nop
scas
jne
repnz
pop
scas
cmc
inc
jo
dec
cld
xchg
push
test
adc
test
adc
cs
stos
aaa
dec
and
dec
and
sahf
mov
shr
adc
adc
imul
(bad)
mov
or
mov
push
mov
and
pop
jl
jge
add
and
add
dec
adc
sbb
pop
mov
mov
sbb
dec
mov
adc
pop
jne
ret
push
inc
shl
retf
jnp
push
add
push
loopne
test
retf
xchg
jns
sub
stos
pminsw
sub
cmps
(bad)
xchg
inc
xor
nop
inc
mov
mov
ror
mov
cdq
sbb
push
xchg
xchg
pop
mov
cmp
mov
out
push
jb
xchg
jmp
dec
out
or
ret
ror
aad
xchg
dec
arpl
mov
and
in
imul
inc
inc
(bad)
or
stos
or
xor
mov
test
sbb
test
les
rol
not
dec
cmp
test
rol
fmul
daa
stos
dec
adc
daa
stos
adc
xor
call
cmp
mov
adc
adc
stos
adc
leave
add
inc
retf
and
mov
sbb
push
and
test
sub
mov
and
inc
add
shl
add
mov
xor
movs
jno
sbb
and
push
or
xchg
and
add
and
mov
leave
and
mov
push
and
inc
bound
inc
adc
inc
adc
xchg
add
inc
nop
test
adc
mov
or
or
or
or
fisttp
add
dec
add
adc
inc
adc
or
outs
cmp
loope
cmp
mov
add
push
lds
(bad)
je
add
xchg
rcl
test
ins
fistp
or
mov
fwait
and
sbb
xchg
sbb
and
jae
xchg
movs
cmps
ins
jns
xor
push
sub
test
push
sub
out
call
jge
lea
jb
psubsw
mov
aaa
out
movs
sub
xchg
repnz
scas
sub
xor
lock
imul
int3
or
mov
mov
test
dec
adc
xchg
sbb
sbb
xor
pop
mov
mov
test
sub
mov
add
fbld
pop
xchg
mov
(bad)
and
jno
sub
or
iret
test
inc
xchg
or
fstp
divps
jp
loop
daa
into
push
adc
pop
mov
jmp
dec
mov
adc
iret
ins
or
call
push
outs
pop
dec
retf
sbb
push
out
dec
fs
mov
(bad)
in
sbb
(bad)
test
mov
jne
sbb
inc
test
sahf
adc
loope
outs
and
es
cmp
jp
enter
push
xor
pop
jp
setne
adc
neg
mov
popf
and
(bad)
cmc
fcmovbe
sbb
outs
adc
pop
cmp
clc
sub
inc
(bad)
in
push
(bad)
add
xor
mov
push
int3
xchg
shl
mov
test
mov
cmp
mov
cmp
dec
pop
not
cmp
test
cmp
pop
xchg
pop
pop
or
add
(bad)
cs
movs
push
xlat
add
sub
mov
shl
adc
cmp
fldenv
test
mov
push
enter
pop
and
sbb
mov
je
stos
mov
fst
cmp
retf
popf
rcr
pusha
adc
and
dec
adc
test
leave
xchg
ret
sbb
ror
pushf
mov
mov
mov
fcomp
ret
pop
add
mov
(bad)
fcomip
imul
lock
fstp
jg
dec
ds
ds
pop
xchg
(bad)
mov
dec
mov
cmp
jns
xor
or
loop
jmp
pop
jne
(bad)
(bad)
retf
mov
cwde
les
add
lods
stos
leave
clc
arpl
pop
push
push
adc
jbe
mov
movntq
mov
sbb
fisub
nop
(bad)
lea
shl
mov
jmp
out
and
outs
leave
push
popf
les
or
dec
jge
add
cmps
int3
jns
sbb
lea
mov
lods
adc
push
mov
ret
dec
adc
jge
lock
fwait
lods
pusha
ds
mov
dec
sub
and
gs
fcomp
sub
in
inc
push
mov
scas
mov
movs
test
les
in
scas
lea
push
xchg
mov
cdq
mov
jb
mov
add
and
mov
loop
push
and
pop
ror
bound
jmp
jecxz
cmp
ss
inc
iret
aam
lea
or
lds
pop
das
hlt
jb
retf
xlat
retf
mov
je
dec
lock
and
sbb
cli
fnstsw
aas
add
mov
(bad)
and
lock
fisttp
call
ds
push
dec
jae
push
mov
pop
cmp
dec
rol
pop
inc
sti
xlat
cld
xchg
(bad)
enter
sahf
sub
dec
ins
lods
xchg
(bad)
pusha
test
mov
xchg
out
mov
into
rcl
pop
in
loop
xchg
jnp
leave
iret
jbe
pop
cld
sahf
rol
aas
out
mov
ret
cmp
and
xchg
out
jmp
xor
mov
cmp
out
lods
dec
stc
in
pop
movlps
mov
out
lahf
mov
xor
shl
enter
mov
test
lock
adc
pop
pop
jo
(bad)
aaa
push
pop
int3
pusha
(bad)
(bad)
push
div
sub
loope
ror
mov
out
(bad)
fst
sub
into
or
push
sti
sti
stos
xor
psraw
xchg
ins
data16
fsubr
mov
jl
sar
and
mov
inc
(bad)
cdq
xor
cwde
outs
popa
fbstp
outs
test
mov
cmp
out
cmp
add
inc
or
gs
jae
xor
rcr
mov
lock
mov
jb
retf
jae
sbb
pop
inc
enter
in
dec
inc
xchg
inc
(bad)
pop
cli
or
repz
sbb
inc
dec
inc
ins
sahf
pop
cmps
imul
not
cmp
mov
jae
shl
xchg
mov
rcl
mov
xor
push
dec
ins
ds
rcr
mov
xchg
mov
(bad)
push
sahf
dec
cmps
xchg
cmc
add
and
rcl
pop
mov
inc
and
cmp
in
les
imul
mov
jae
add
loope
and
jae
mov
(bad)
shr
mov
ror
imul
cs
leave
imul
xor
sbb
callw
inc
cmp
mov
fs
cmp
jo
idiv
jmp
mov
test
je
inc
push
pop
push
jmp
out
push
sub
jmp
mov
cmp
fldcw
pushf
in
cdq
fs
xor
mov
cmp
nop
fsub
push
xchg
push
icebp
dec
lahf
push
in
(bad)
dec
xchg
jmp
div
jae
jbe
jno
data16
and
icebp
mov
cmps
in
or
push
mov
xchg
mov
cdq
xor
inc
add
pusha
aaa
retf
popf
inc
ret
xor
loope
dec
and
mov
xor
or
imul
or
mov
lahf
add
dec
movs
cs
ror
sub
int
loope
in
iret
mov
cmp
mov
dec
dec
(bad)
imul
(bad)
stc
dec
or
mov
popa
xchg
push
jns
(bad)
retf
adc
fadd
inc
adc
sbb
and
jne
add
jnp
lock
dec
shl
in
jno
loopne
retf
in
retf
sub
into
mov
inc
shl
clc
pushf
movs
fild
add
pop
and
cmp
outs
sub
sub
or
popf
outs
jno
imul
mov
inc
adc
mov
arpl
mov
stc
or
pop
aam
and
enter
outs
cmp
stos
inc
(bad)
enter
pusha
dec
(bad)
cs
(bad)
in
pop
pop
mov
adc
out
mov
repnz
nop
clc
and
aam
or
and
out
mov
add
(bad)
aam
loop
and
ret
xchg
mov
stos
pop
sub
ret
cs
push
popf
test
in
rcl
call
adc
leave
test
cmp
shr
pop
inc
(bad)
repnz
out
mov
pusha
das
mov
lods
inc
sbb
arpl
scas
xchg
dec
mov
mov
ret
div
(bad)
aad
outs
movs
mov
push
jle
mov
adc
lods
lods
shl
mov
sub
or
push
push
fwait
add
daa
lods
ja
fwait
add
cdq
mov
push
push
aas
sub
mov
mov
xchg
sbb
cmpxchg
push
iret
and
xlat
mov
enter
push
xor
add
lahf
retf
add
mov
pop
cmp
cmp
lahf
cmps
inc
sub
out
shl
or
lahf
dec
aam
arpl
sub
cmp
fcmovu
sar
mov
xchg
test
enter
xchg
sbb
leave
jno
mov
in
in
mov
mov
xchg
push
inc
das
and
sbb
(bad)
retf
ror
fist
push
(bad)
loopne
outs
rol
jmp
ja
sbb
sub
xchg
je
sub
neg
mov
push
xchg
cmps
mov
add
in
jae
jmp
inc
cwde
sbb
mov
and
popf
mov
push
popf
push
jbe
inc
icebp
cli
ja
inc
jns
add
fwait
sbb
call
ins
jns
or
fdiv
out
imul
jmp
jmp
sar
jnp
jae
retf
xchg
pop
rcl
scas
push
xlat
add
sub
sub
inc
push
daa
loope
shr
xchg
jp
jbe
gs
lahf
bound
jbe
cmp
les
mov
sbb
jo
das
cmp
movs
das
imul
dec
sar
pop
pop
dec
imul
mov
js
and
icebp
std
xchg
sbb
xor
daa
jl
mov
ja
cmps
inc
mov
mov
in
mov
xor
xlat
mov
fld
mov
arpl
cmp
fist
(bad)
cmp
sbb
and
mov
call
or
fcomp
bound
cmp
clc
fisubr
gs
cld
rcr
aas
xchg
lock
cld
xor
stos
or
repnz
jl
mov
jmp
outs
add
mov
jo
arpl
mov
outs
xchg
shl
cmp
(bad)
iret
loope
jl
mov
movs
(bad)
jge
cmp
aam
sub
or
ins
fscale
aas
jae
data16
aas
or
jno
sahf
popa
js
or
(bad)
stos
std
xchg
mov
jns
jae
and
jae
jns
jns
cmps
pop
pop
test
rol
mov
sahf
bound
jno
(bad)
arpl
pop
mov
pop
add
(bad)
shl
jge
cmp
pop
mov
outs
xchg
pushf
jge
lods
xlat
frstor
retf
mov
cmp
xchg
(bad)
dec
shl
pop
dec
add
retf
xchg
arpl
(bad)
mov
mov
(bad)
enter
lock
pop
mov
stc
xchg
dec
pop
pop
mov
pop
push
popa
sub
or
imul
and
add
pop
and
and
mov
ror
xor
outs
out
push
js
xchg
repz
js
sub
lds
cmp
jmp
(bad)
pop
lods
pop
call
dec
ins
or
stc
cmps
sub
mov
and
inc
lods
pop
xchg
aad
scas
adc
cdq
test
mov
mov
sub
imul
jae
xor
mov
push
jae
(bad)
dec
xchg
ss
jmp
ins
pop
fnstsw
or
daa
xchg
xor
test
cmp
(bad)
push
dec
mov
(bad)
lahf
loope
inc
das
push
or
mov
pop
iret
movs
cmp
ret
push
iret
sar
adc
repnz
add
xchg
cmovnp
aad
bound
leave
outs
pop
shl
imul
add
je
dec
cmp
xchg
push
pop
cmp
sub
out
cmp
(bad)
daa
lahf
fisubr
push
imul
test
push
aam
cdq
pusha
sbb
daa
mov
jne
iret
addr16
cdq
sbb
add
out
gs
xchg
cwde
inc
lock
push
dec
mov
xchg
arpl
sub
ds
sbb
movs
fwait
dec
mov
adc
sbb
adc
lock
imul
setne
hlt
movs
rcl
sub
in
in
(bad)
sar
jns
repnz
mov
loop
inc
out
push
shl
stc
push
(bad)
dec
fimul
test
fnstsw
adc
sti
test
inc
rcl
fucomip
stos
push
sti
and
push
push
add
push
ror
(bad)
and
push
nop
or
or
inc
mov
mov
push
test
xchg
dec
or
fld
daa
pusha
test
cmps
or
(bad)
rol
cmps
jmp
add
dec
sar
inc
sbb
ficom
test
adc
xor
nop
mov
adc
or
or
ror
and
xchg
adc
inc
cmp
dec
or
or
shl
inc
test
inc
xchg
add
sub
jmp
fiadd
push
sbb
adc
mov
jecxz
dec
cmp
mov
or
movs
pop
in
mov
lock
ffree
or
sti
add
and
mov
rcr
lods
xchg
les
out
jo
fsubr
dec
sbb
sub
inc
mov
icebp
shl
dec
fsubp
(bad)
in
(bad)
(bad)
pop
cs
lahf
imul
inc
(bad)
fs
fsubr
aad
leave
mov
xor
push
push
cmp
inc
repnz
das
cdq
into
fmul
inc
push
xchg
and
lahf
sub
sbb
sahf
call
add
shr
pusha
leave
and
(bad)
jp
mov
data16
xchg
dec
call
and
std
mov
adc
add
push
std
push
out
cmp
xchg
xor
and
xchg
push
movs
imul
je
mov
sub
pop
ds
xlat
jno
shl
sbb
xchg
dec
shl
in
lods
xchg
fsubr
fcomp
adc
fwait
dec
repz
jno
inc
mov
dec
scas
scas
retf
add
mov
inc
xor
push
dec
movs
or
add
fwait
mov
test
test
adc
add
dec
fld
adc
xor
push
test
test
ficomp
inc
adc
add
popa
or
movs
aad
lods
cmps
dec
mov
adc
cdq
or
sub
add
xchg
mov
out
xor
mov
adc
or
aad
xchg
push
and
cdq
add
or
xlat
in
add
test
sub
shr
cmp
pusha
cmp
push
dec
mov
mov
xor
test
nop
test
adc
test
adc
adc
test
add
or
sub
add
shr
popf
and
cmc
push
push
mov
loopne
pop
loop
add
mov
cld
(bad)
mov
loop
push
lods
jb
or
ja
inc
lahf
xchg
add
inc
jae
cmp
in
fdivr
ror
mov
mov
push
push
inc
mov
daa
inc
mov
mov
mov
loop
cmp
push
mov
sbb
stc
pop
or
in
popf
mov
repnz
mov
jo
int
mov
xchg
pop
mov
jle
mov
xor
xchg
xchg
adc
dec
push
movs
adc
in
mov
pop
shr
aas
icebp
out
test
cmp
sahf
inc
pop
ret
fidivr
imul
rol
sbb
mov
repnz
xchg
dec
sbb
inc
or
repnz
into
mov
push
cmp
cli
dec
movs
in
mov
test
sbb
jp
jl
cmps
push
mov
jl
cmps
call
and
mov
loop
jb
push
dec
test
clc
ins
ror
ffree
icebp
fadd
test
cdq
cmp
mov
enter
sub
es
out
dec
ror
or
fisubr
mov
cld
lods
xchg
sub
in
imul
cmps
icebp
out
test
lock
mov
or
int3
test
cld
mov
std
xchg
cwde
pop
pop
int
xchg
inc
imul
aam
loope
dec
sbb
pop
mov
aad
gs
(bad)
push
(bad)
mov
or
idiv
shr
push
push
push
aas
jmp
(bad)
test
fs
jns
cmp
or
les
dec
sbb
and
cmp
mov
sub
pop
adc
cmp
mov
ds
shl
dec
cld
xchg
cmp
stos
pop
mov
pop
jg
push
xchg
mov
xlat
inc
fld
inc
(bad)
or
frstor
cmp
pushf
jnp
imul
ins
xchg
adc
push
inc
jns
push
mov
mov
dec
clc
push
ds
(bad)
fs
xlat
xchg
scas
iret
rol
xchg
test
cmp
call
(bad)
cmps
mov
inc
mov
push
push
out
lods
add
xchg
mov
sbb
je
xor
or
add
sub
test
add
fbld
mov
adc
sbb
cmps
sbb
cli
arpl
out
cld
das
mov
ins
(bad)
or
aam
and
ss
xlat
pop
jmp
add
and
inc
mov
dec
outs
sahf
inc
sub
out
test
pop
xchg
leave
or
ret
outs
fld
fldenv
(bad)
xor
pop
or
nop
movs
shl
jbe
cmp
outs
jl
dec
xchg
out
out
mov
mov
pop
adc
sbb
out
adc
cmp
lods
xchg
xchg
or
xchg
leave
cmp
xchg
fadd
jmp
cmp
xchg
movs
inc
jmp
add
leave
cmp
cld
push
shl
int3
fwait
and
ja
dec
loopne
xor
sub
cmp
(bad)
jmp
dec
imul
repnz
pop
mov
(bad)
inc
test
int3
icebp
js
dec
jbe
and
retf
pusha
cld
sahf
stos
loopne
mov
and
(bad)
or
add
ret
bnd
ins
in
pop
aas
push
xchg
jle
(bad)
inc
hlt
(bad)
and
mov
jns
mov
cmps
outs
shl
mov
pop
cmp
fdiv
xor
ins
sub
leave
jns
mov
pop
dec
sbb
mov
and
mov
ss
cmp
aad
mov
fs
sub
arpl
pop
stos
fst
adc
retf
loopne
sbb
in
(bad)
into
add
nop
inc
or
jmp
ins
(bad)
and
imul
pop
imul
jns
dec
mov
jecxz
mov
sbb
fsubr
imul
stc
scas
mov
fdivr
cld
jl
add
mov
xchg
pop
mov
in
mov
mov
push
test
imul
inc
test
data16
mov
inc
cmp
inc
mov
test
or
or
movs
test
bound
repz
lds
adc
(bad)
cmp
mov
ss
in
xchg
fnstcw
xor
(bad)
jae
(bad)
in
xchg
jp
clc
pop
cmp
outs
adc
dec
adc
sub
daa
in
imul
hlt
in
push
repz
aam
jae
push
call
or
leave
std
push
cmp
add
lock
jnp
xchg
mov
shl
mov
mov
mov
mov
cmps
mov
std
push
dec
arpl
pushf
xor
test
inc
scas
imul
daa
test
sbb
ins
pusha
leave
into
adc
repnz
(bad)
shr
mov
pop
sbb
fs
sbb
scas
xchg
xor
jns
push
pop
add
lods
xchg
shl
test
test
dec
xchg
js
leave
add
mov
xor
loope
add
mov
push
inc
and
mov
inc
fnstenv
mov
jecxz
pop
push
sbb
retf
sahf
outs
dec
lds
mov
mov
xor
inc
stc
mov
push
std
mov
mov
add
push
cmps
dec
inc
mov
mov
xchg
loope
sbb
mov
shr
outs
adc
cmp
pop
lods
popf
fst
mov
(bad)
nop
into
cmp
movs
jl
jmp
sub
out
sahf
repz
retf
pop
imul
jge
or
inc
stos
push
or
jmp
int3
xchg
int
sti
repnz
mov
dec
bnd
aam
inc
out
sub
mov
shr
aad
idiv
add
xor
adc
outs
cli
fcom
fldenv
and
xchg
push
dec
xchg
test
(bad)
dec
loop
fstp
out
xchg
icebp
int
clc
xchg
scas
gs
test
push
jbe
xchg
fbld
gs
xchg
sub
jmp
add
xchg
stos
inc
adc
jno
sbb
shl
xchg
dec
xor
mov
(bad)
pusha
cmp
push
lods
imul
cmp
pop
and
not
jp
shl
lods
add
retf
test
sbb
xchg
sahf
daa
sbb
lea
lahf
(bad)
icebp
or
mov
add
inc
push
pop
pop
cmovae
push
and
jecxz
jae
mov
pop
pop
fwait
inc
shl
xor
sub
xchg
xor
and
je
jb
mov
jae
push
je
fs
lahf
sub
and
add
add
lds
xchg
dec
or
aaa
cmp
cld
jbe
lea
adc
retf
sbb
lds
imul
sbb
ret
add
sub
xor
or
stc
js
repnz
add
mov
test
and
inc
or
stos
stc
repz
xlat
or
rol
shl
push
and
push
in
and
push
retf
out
stos
push
push
dec
adc
adc
push
adc
sub
cmp
inc
outs
jbe
test
test
jnp
neg
dec
mov
xlat
ja
jns
mov
mov
dec
dec
xchg
mov
jmp
jl
mov
sub
push
in
sbb
neg
cmc
aaa
in
push
ins
pop
mov
jns
or
add
xchg
ds
adc
xchg
sub
es
es
ret
jbe
retf
mov
in
js
and
(bad)
push
jnp
out
hlt
adc
pushf
js
jae
cli
lea
pcmpeqw
or
fidivr
sub
cmp
std
jmp
cmp
adc
mov
retf
lods
and
or
xchg
sbb
test
pop
jp
inc
gs
retf
sbb
sbb
mov
or
or
(bad)
and
mov
and
lock
scas
arpl
adc
shr
mov
cmp
or
push
test
and
xor
cmp
pop
in
dec
pop
adc
mov
dec
add
nop
pop
mov
jo
xchg
push
xchg
mov
fdivr
jg
or
add
imul
add
jns
xor
test
xlat
fldenv
retf
dec
imul
mov
or
xor
jns
ror
loopne
std
pop
out
mov
pop
xor
es
jge
mov
and
add
iret
fnstenv
mov
dec
dec
aas
xchg
inc
dec
ffree
repnz
cdq
sbb
data16
out
js
sbb
(bad)
jecxz
mov
mov
cmp
xchg
daa
jns
pusha
(bad)
arpl
out
fwait
dec
cmp
sbb
xchg
mov
push
arpl
xor
pop
scas
hlt
mov
cmp
or
jo
mov
into
std
cmp
out
pusha
fdivr
fild
imul
lock
mov
popf
pop
rcr
rol
xor
dec
push
pop
aas
xchg
mov
push
push
jg
fild
enter
jae
fsub
in
inc
je
je
cmps
push
lock
cmps
mov
push
in
sbb
push
imul
dec
imul
sbb
xor
f2xm1
mov
mov
cwde
retf
jnp
lock
out
mov
or
mov
jno
jmp
mov
dec
out
loope
test
sbb
add
push
adc
pop
mov
mov
and
jb
mov
rol
mov
xor
and
es
inc
xor
or
sbb
push
popa
xor
sub
inc
mov
push
push
xchg
test
fwait
sub
jecxz
pop
loope
inc
jge
xchg
push
jle
pop
gs
enter
fwait
aam
loop
neg
push
int
xchg
cmp
rcr
adc
jns
pop
sbb
sub
cmp
pop
pusha
aad
fistp
mov
xchg
xchg
arpl
lods
inc
imul
xor
retf
lahf
lods
retf
xchg
in
push
(bad)
pop
add
and
inc
shl
fwait
xchg
cs
sbb
xlat
jo
jmp
daa
or
mov
mov
dec
mov
fistp
pop
icebp
(bad)
mov
arpl
mov
jmp
push
inc
mov
dec
popa
std
pop
(bad)
jp
call
ss
jmp
mov
jmp
fmulp
or
cmp
push
mov
inc
fcmovbe
xchg
push
adc
mov
pop
lock
push
jge
int
movs
fisubr
mov
push
lea
ret
(bad)
not
mov
lds
pop
sar
gs
pop
neg
mov
loope
inc
jne
inc
nop
adc
mov
lea
test
xor
dec
call
inc
adc
push
ret
and
dec
cmp
or
add
push
stos
dec
mov
movs
xor
and
adc
(bad)
xchg
not
and
ret
sub
inc
add
adc
mov
test
sbb
sub
stos
mov
leave
mov
mov
inc
or
mov
into
add
fwait
and
inc
adc
retf
test
stos
dec
jl
inc
mov
jp
ja
inc
add
pop
inc
inc
and
add
sub
ja
pop
add
or
ds
add
cmp
mov
inc
imul
mov
xor
dec
add
out
lahf
adc
and
jmp
add
jmp
or
jp
push
sbb
inc
add
dec
dec
pop
push
rol
retf
cmp
jmp
shl
stc
inc
jo
out
add
mov
or
jnp
not
mov
pop
scas
xor
mov
jbe
inc
stc
inc
cwde
add
not
cmps
lock
lock
out
cmp
jecxz
outs
scas
xchg
cmp
jne
rcl
dec
ds
inc
push
and
movs
pop
xchg
jns
and
faddp
push
mov
xor
and
and
mov
xor
test
jno
mov
out
cwde
outs
retf
mov
push
stc
jb
stc
xlat
retf
pop
and
test
or
mov
mov
imul
cdq
outs
in
mov
fnstsw
inc
xor
or
push
(bad)
stos
xchg
iret
mov
stc
adc
dec
or
(bad)
fld
cmps
or
nop
adc
out
pop
mov
push
dec
add
push
adc
scas
push
not
xchg
sbb
test
stos
es
inc
loope
mov
inc
xchg
push
xor
scas
fadd
sti
adc
in
out
in
adc
and
cmp
enter
out
shl
call
retf
out
and
add
mov
jmp
fisubr
pop
add
fisub
inc
and
movs
add
in
adc
outs
mov
sbb
inc
jne
call
or
movs
adc
xchg
dec
ins
add
mov
mov
ins
add
xor
aad
mov
and
mov
lahf
dec
cwde
inc
hlt
or
fsubr
mov
and
jnp
ins
(bad)
rol
aas
mov
rcl
inc
cmp
dec
sbb
or
rcr
mov
push
pusha
test
gs
ficomp
pop
jbe
xchg
fst
arpl
cmp
js
rcl
adc
inc
mov
add
jle
and
push
shl
nop
out
movs
adc
test
or
test
mov
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
push
je
adc
xchg
out
test
inc
adc
inc
adc
dec
movs
add
mov
pop
mov
dec
retf
jo
sub
pushw
push
inc
cmp
dec
outs
call
leave
aas
lahf
shld
pop
cmp
shl
hlt
mov
pop
out
pop
cmp
(bad)
sbb
imul
enter
(bad)
leave
std
sbb
dec
sbb
scas
or
bound
dec
dec
ss
pop
ja
fnstenv
icebp
loop
daa
imul
call
sti
pop
jmp
arpl
fimul
jae
ss
jmp
out
int
mov
cmp
stos
into
shl
hlt
imul
adc
lods
ret
retf
movs
ja
retf
pop
xchg
in
loopne
mov
mov
loope
xchg
cld
adc
xchg
mov
xor
test
ins
xchg
pop
cmp
xor
imul
repnz
jnp
cmps
mov
ret
and
mov
ret
nop
aaa
cwde
in
cld
das
mov
add
mov
push
imul
pop
fsub
pop
push
inc
dec
mov
aas
or
pop
out
xor
xor
ins
into
mov
xor
pop
test
mov
ds
inc
in
mov
or
cmps
sbb
ja
gs
nop
add
mov
in
push
popf
in
sub
jle
lock
loopne
imul
cmp
xchg
mov
jle
jae
pop
pop
loopne
sbb
push
in
pusha
inc
adc
clc
jmp
dec
mov
test
out
jl
aam
sti
cmp
stos
movlps
clc
pop
lahf
inc
aad
and
xchg
sbb
push
bound
cmc
mov
pop
popf
sahf
cld
pop
mov
push
(bad)
hlt
pop
mov
sbb
pushf
mov
lea
shl
and
test
not
jns
jbe
sub
outs
push
xchg
icebp
push
pop
mov
data16
ss
push
or
ins
pop
sbb
xchg
push
xor
push
cmp
call
xchg
cmps
sub
mov
retf
mov
dec
in
adc
pop
pop
(bad)
dec
sti
xlat
inc
inc
inc
(bad)
push
stc
sbb
push
jbe
cmp
add
pop
shl
mov
inc
mov
mov
and
jno
cmp
jae
adc
jmp
sbb
and
mov
call
and
cmp
fadd
push
shr
xlat
outs
retf
in
jo
mov
cdq
test
mov
pop
loope
mov
mov
or
ret
ret
ins
mov
push
pop
je
push
xchg
daa
mov
xchg
je
dec
stos
test
or
js
mov
or
cmp
aam
cmp
(bad)
xor
jmp
cmp
inc
jno
sub
mov
call
sub
xchg
dec
scas
arpl
call
inc
xchg
fnstcw
clc
jg
aaa
js
inc
scas
jmp
sbb
jo
xchg
jecxz
in
mov
aam
push
mov
clc
dec
ret
out
xchg
mov
and
or
pop
mov
repz
dec
int3
gs
cmp
into
mov
out
mov
dec
mov
sbb
xor
popa
nop
int3
and
outs
push
iret
int
mov
aaa
pop
push
aaa
pushf
xchg
xor
jle
dec
fs
fwait
jle
jp
pop
pop
inc
xchg
pop
lahf
adc
xor
loope
xchg
add
push
idiv
mov
jle
lock
xchg
pop
fnstenv
std
pop
popa
rol
inc
outs
push
ror
pop
dec
fwait
push
mov
into
xchg
xchg
inc
out
jo
mov
cmp
cdq
mov
ret
xlat
je
ins
std
scas
stos
clc
push
lods
cld
push
aam
jae
movs
popa
arpl
mov
cli
lea
in
std
fcos
add
repz
cmc
or
jg
push
xchg
pop
out
mov
in
mov
js
shr
push
sbb
mov
arpl
retf
mov
iret
adc
cmp
jp
int
(bad)
xor
mov
lock
popf
mov
loope
retf
sahf
inc
push
sahf
dec
stc
cmp
mov
enter
adc
aam
test
int3
enter
push
mov
in
sbb
mov
push
add
inc
cmovne
sub
jl
add
jae
xchg
and
out
repz
and
std
xlat
out
add
sbb
loop
mov
push
pop
(bad)
jae
enter
mov
movs
out
push
mov
test
rol
imul
and
pop
loop
in
mov
inc
xchg
add
int
out
scas
imul
push
jno
add
mov
ins
popf
dec
adc
(bad)
inc
and
rcr
jg
iret
enter
arpl
add
lds
pop
fdiv
retf
scas
sbb
adc
mov
sbb
stos
sahf
pop
push
outs
sub
sbb
xchg
cdq
scas
mov
pop
repz
mov
(bad)
sub
(bad)
repnz
stos
and
sub
std
dec
fnstcw
stc
dec
cdq
sahf
mov
cs
jns
je
xchg
mov
mov
out
mov
pop
hlt
call
xor
sub
add
xchg
leave
ds
xchg
xchg
jl
shr
fld
sub
and
jb
or
xlat
ret
sahf
inc
push
into
sbb
clc
out
xchg
(bad)
sbb
xor
cmp
out
(bad)
xor
addr16
and
cmp
sub
pop
mov
mov
mov
addr16
push
leave
and
icebp
aam
bound
jmp
pop
mov
ret
jge
cmc
pop
or
xchg
cs
mov
outs
push
aam
sbb
cmp
sub
repnz
scas
lds
dec
mov
sub
(bad)
or
repnz
push
fwait
pop
mov
mov
inc
pop
test
sub
pop
iret
sub
iret
xchg
outs
ins
fbld
sysret
ins
lock
mov
dec
scas
mov
repnz
daa
mov
mov
aas
adc
call
pop
ret
push
sar
rol
pushf
push
inc
int3
mov
jnp
mov
loop
test
aas
rol
xor
lahf
popa
and
sbb
cmp
popa
loopne
retf
mov
cmps
mov
test
jo
cld
xor
cdq
dec
leave
es
xchg
mov
(bad)
mov
push
inc
sub
ret
or
jns
sub
jae
data16
cmp
jns
push
jmp
fsub
lods
add
sub
ins
sbb
and
imul
movs
pop
xchg
lea
and
and
lds
or
loope
mov
adc
iret
retf
sub
cdq
mov
or
add
pop
(bad)
cmp
fdivr
fs
or
inc
mov
adc
push
imul
jecxz
hlt
sbb
pop
inc
cdq
dec
sub
ins
js
lahf
adc
and
xor
jae
(bad)
cmps
mov
fwait
cli
xchg
std
inc
jl
fwait
push
push
aad
into
xor
leave
or
movs
add
jns
std
pop
ja
push
call
loop
jae
lea
xor
test
cld
ret
dec
js
cmp
jg
push
ds
jbe
and
cmp
addr16
sar
push
addr16
in
push
aaa
dec
or
dec
ror
pmaxsw
adc
lods
cmp
loope
out
data16
pop
in
scas
pop
push
xor
out
into
leave
(bad)
leave
and
sub
(bad)
jmp
jno
ds
add
mov
cmp
les
(bad)
outs
retf
(bad)
call
sub
jo
cmps
test
add
sub
mov
(bad)
sbb
dec
push
xchg
add
sbb
mov
xor
jo
or
out
sbb
mov
fdiv
xchg
mov
pop
in
scas
sbb
sub
nop
jae
fcomp
nop
sbb
mov
lea
cmps
xchg
(bad)
xor
push
shl
jmp
xchg
cmp
popf
xchg
sub
aam
clc
push
iret
xor
in
imul
(bad)
push
push
(bad)
gs
xchg
loope
enter
fwait
mul
(bad)
lea
test
cmps
push
mul
nop
add
adc
fs
inc
(bad)
adc
and
je
sar
pusha
push
out
ret
jmp
pushf
stc
jne
cmp
fidiv
xchg
pop
jmp
jnp
in
(bad)
into
jae
jmp
in
jo
xor
mov
inc
outs
add
int
sub
addr16
jae
dec
hlt
cmp
lods
cmc
or
jae
jle
dec
xchg
aaa
mov
fadd
push
stc
pop
movs
jae
dec
xchg
sub
in
and
or
call
sub
fidivr
out
(bad)
imul
jmp
sub
test
ins
mov
xchg
cmp
sbb
test
lahf
stos
loope
xchg
pushf
(bad)
pop
fs
pop
pop
fsubrp
pmulhw
or
pop
cmps
int
repnz
out
push
imul
nop
dec
cmps
(bad)
fistp
xchg
bts
xchg
int
fwait
sbb
lahf
cli
add
fcom
jmp
dec
mov
lea
add
das
loop
mov
cmc
cdq
jecxz
je
dec
cli
cmp
in
mov
inc
add
psubsw
shl
add
or
fild
div
dec
stos
pop
jmp
cmp
mov
mov
jns
sbb
imul
leave
mov
adc
mov
rcl
shl
icebp
bound
and
scas
dec
loop
ss
or
mov
jae
xlat
mov
inc
mov
add
add
xor
and
add
rcr
add
cld
(bad)
sahf
push
add
push
fs
sbb
data16
mov
cld
aaa
gs
cs
fldenv
ret
add
outs
pop
imul
aam
jecxz
xchg
imul
mov
sub
sbb
in
test
add
sbb
lods
dec
mov
ss
ins
outs
test
sub
gs
dec
lock
xchg
or
in
mov
adc
push
fldenv
jno
aam
push
xchg
out
and
cmp
mov
shl
sbb
enter
adc
and
adc
push
out
push
cli
mov
(bad)
xlat
xor
inc
push
int
sub
dec
sub
movs
adc
movs
or
xchg
stc
out
mov
inc
in
xor
add
retf
call
inc
push
ror
lahf
(bad)
lea
jmp
push
pop
lock
cmp
add
jae
test
rol
adc
jns
and
xchg
pushf
sbb
dec
(bad)
jb
pop
mov
nop
pusha
inc
add
jp
adc
and
or
ss
inc
adc
and
pop
inc
and
fs
and
cmp
or
ficom
dec
pop
test
lods
jae
out
jecxz
and
or
cmp
pop
arpl
push
dec
or
pop
test
add
lock
xor
adc
movs
test
ds
pop
push
inc
add
test
adc
in
push
fstp
add
(bad)
je
mov
inc
div
stos
add
or
and
add
add
push
inc
add
nop
jp
enter
or
or
fistp
repnz
add
pop
xor
xchg
loope
adc
push
test
loope
loop
fwait
inc
stos
ja
xor
pop
jnp
dec
xchg
aas
xor
mov
shr
out
dec
pop
or
jne
(bad)
xlat
not
push
cmp
push
iret
push
push
sbb
cs
popa
fmul
pop
retf
push
xor
xchg
or
aas
aad
call
add
jmp
xor
lea
(bad)
and
shr
test
push
imul
push
mov
int3
repz
cmp
jb
ss
xchg
push
mov
jmp
jnp
xchg
outs
pop
xchg
or
pop
mov
xchg
jg
and
lahf
sti
popf
rcl
sub
(bad)
movs
(bad)
sti
xchg
sub
cli
out
fstp
pop
jmp
fisubr
shl
gs
shrd
xor
movs
xchg
stc
(bad)
cmp
adc
or
pop
xchg
ret
inc
jns
xchg
add
popf
cdq
sub
shl
pop
push
sbb
shl
mov
push
add
test
stc
dec
jb
inc
xor
mov
dec
je
fisttp
mov
push
push
or
mov
and
sub
ins
adc
sub
cwde
jne
inc
jmp
adc
call
test
and
inc
add
movs
mov
test
movs
add
dec
inc
shl
retf
sub
xchg
enter
enter
add
arpl
loop
aam
aam
xchg
into
je
or
xchg
dec
into
pop
mov
sub
in
add
lods
dec
add
sub
adc
or
call
lods
sbb
push
push
add
sbb
test
and
out
test
or
inc
movs
test
call
adc
or
dec
jne
cmp
sar
push
push
test
adc
dec
and
(bad)
xchg
xchg
shr
inc
adc
adc
or
or
or
or
or
dec
or
or
cdq
adc
or
jl
retf
cmp
call
mov
lahf
push
ins
and
or
xor
dec
test
push
add
imul
stos
cmp
movs
int
mov
repnz
nop
xor
in
pop
shr
pushaw
cmp
inc
jb
stos
sahf
jae
xchg
lea
pop
shl
or
xor
xchg
xor
jl
daa
mov
cmp
ins
sahf
xchg
jg
(bad)
mov
cmp
std
dec
gs
sub
(bad)
and
pop
mov
mov
imul
(bad)
outs
cwde
aaa
mov
pushf
cmp
mov
xlat
std
pushf
mov
in
rcr
sub
test
jmp
jg
cmc
pop
in
or
cli
loope
gs
add
leave
dec
push
mov
mov
cmp
push
jmp
cwde
ja
cmps
enter
leave
push
jnp
repz
push
repnz
and
mov
shl
mov
(bad)
leave
sub
jecxz
cmp
jge
rcr
stos
jmp
sub
fwait
outs
imul
scas
and
and
cmp
dec
jl
arpl
sub
fwait
pop
lods
jle
fld
adc
test
jle
mov
adc
pop
(bad)
jno
sub
in
mov
loop
xor
f2xm1
adc
push
fdiv
cld
mov
inc
jg
arpl
sbb
lds
dec
ins
(bad)
jno
(bad)
neg
repz
jnp
lds
and
popf
and
xchg
push
shl
jmp
sbb
add
ds
outs
je
add
inc
adc
jg
arpl
test
mov
inc
mul
sti
lods
jno
fidiv
xor
xchg
cmp
enter
mov
pop
mov
ror
jl
sub
push
push
repz
jmp
psrld
xor
cmp
add
stos
jmp
sar
jae
pop
or
out
jle
shl
xor
sbb
cmps
pop
cwde
cli
cmp
nop
mov
callw
xor
(bad)
inc
cmp
mov
call
mov
out
repnz
(bad)
jns
push
cmps
shl
cmps
popa
or
mov
in
cld
adc
call
femms
sbb
and
int
mov
xor
dec
in
inc
ret
fwait
loope
int3
push
jmp
addr16
cmp
sub
sahf
jmp
in
pop
xor
inc
push
add
rol
neg
sbb
cwde
call
jecxz
movs
sbb
pop
ret
in
arpl
(bad)
(bad)
sbb
(bad)
cli
fwait
movs
push
sub
push
cmp
dec
push
ds
in
push
(bad)
icebp
fldz
loop
add
fisub
inc
xchg
mov
and
sub
sbb
fbld
fsub
mov
sub
scas
mul
inc
xchg
mov
sbb
mov
dec
and
fcomp
mov
gs
int
lods
loopne
jno
xchg
dec
jmp
xchg
cmp
fsub
out
dec
iret
mov
out
pop
inc
jl
retf
dec
addr16
pop
xor
pop
inc
lea
xor
dec
lods
and
sbb
daa
sti
stos
not
test
lods
inc
mov
ja
add
inc
ret
cmp
dec
or
dec
xchg
test
jae
les
mov
jecxz
mov
cmp
mov
adc
and
jl
mov
and
adc
sbb
mov
jmp
xchg
push
dec
push
shl
loopne
jecxz
lods
movs
lock
jne
cmp
mov
dec
add
mov
out
cmps
(bad)
in
imul
js
jmp
jl
pop
mov
push
or
xor
out
ds
outs
aas
xchg
inc
clc
arpl
jns
fwait
jmp
clc
pop
cld
sbb
pusha
test
call
gs
out
arpl
or
(bad)
sahf
sub
pop
(bad)
mov
jle
data16
cli
jno
aaa
imul
mov
stc
push
jno
lea
add
cs
cmps
pop
cmp
int3
jno
jbe
jnp
mov
push
sub
into
mov
into
div
dec
fcomp
mov
sbb
add
ins
arpl
jge
mov
aam
jb
mov
jns
mov
and
sti
cs
ret
jle
mov
sub
jae
ret
xor
out
xor
pusha
jne
lods
je
dec
out
push
aaa
and
xor
stos
jbe
std
sbb
jle
and
sbb
add
mov
movs
xchg
dec
mov
and
out
sar
nop
push
ss
iret
fnstcw
mov
je
nop
imul
pop
cmp
stos
add
adc
fcmove
and
int3
in
ror
jmp
mov
std
das
or
dec
les
adc
out
sti
mov
shl
into
shl
fxch
pop
cwde
out
mov
mov
in
rol
aam
adc
cs
dec
cmp
leave
daa
retf
daa
mov
jo
(bad)
popa
les
cld
mov
and
(bad)
(bad)
mov
jp
xchg
xchg
or
cli
inc
xchg
cli
inc
inc
cmp
dec
jge
popa
clc
inc
pop
mov
out
(bad)
icebp
data16
pop
mov
pop
out
ds
leave
mov
jg
scas
retf
test
and
enter
and
pop
mov
es
sbb
std
ret
movs
adc
inc
ja
stc
jno
dec
or
mov
cmp
retf
loop
adc
jns
xchg
aam
cmp
cld
push
mov
jp
xchg
xor
fbstp
xchg
mov
pop
cmp
adc
clc
lods
vpaddq
cmp
sub
mov
shl
push
(bad)
add
call
cmc
mov
push
cs
retf
jno
or
loopne
int3
xor
loope
out
and
xchg
int3
push
jns
inc
ret
outs
scas
adc
(bad)
(bad)
xchg
cmp
repnz
mov
inc
loopne
sub
mov
mov
js
(bad)
(bad)
out
(bad)
inc
out
or
fs
xchg
cmc
jno
sar
das
movs
int3
jne
inc
in
repnz
ror
pushf
ins
xchg
loop
mov
loop
lods
es
mov
cmp
adc
jnp
jmp
jle
js
add
pushf
jg
and
xor
xor
push
data16
je
call
(bad)
aam
cmp
xchg
or
hlt
sub
call
fld
int3
rol
push
test
fs
fstp
fs
mov
or
lods
scas
not
jnp
jg
idiv
cmp
mov
inc
sbb
retf
cld
stc
jae
or
das
fcmovnb
jae
daa
out
mov
je
in
dec
and
sub
icebp
fst
adc
sub
in
xchg
sub
dec
inc
(bad)
call
js
or
or
mov
cld
jo
outs
shl
gs
rol
scas
pusha
push
mov
test
(bad)
shl
push
neg
or
mov
jae
and
pop
sbb
xchg
frstor
sti
frstor
in
dec
cmps
xchg
dec
mov
add
movs
fwait
test
lods
fwait
inc
jo
and
push
jp
adc
jae
les
sbb
lds
inc
adc
loopne
sti
das
cmp
stos
js
outs
mov
enter
sbb
in
push
sbb
arpl
lods
gs
mov
pop
imul
and
mov
stos
aam
mov
scas
xchg
lahf
cld
cmp
fs
into
adc
jle
add
cmps
leave
mov
mov
jno
push
mov
fstp
aaa
lock
cdq
cs
std
movs
movs
(bad)
in
dec
into
js
ret
shl
mov
cmp
pop
fnsave
(bad)
pop
loope
sbb
dec
adc
std
enter
retf
dec
bound
out
mov
stc
ss
pop
shl
out
pusha
or
inc
inc
nop
xor
dec
mov
mov
jl
ds
jmp
sbb
xor
jne
adc
jns
add
or
rcl
ror
fs
inc
xor
fadd
mov
cdq
adc
data16
sbb
jnp
pop
sbb
push
jns
sub
std
push
xchg
dec
retf
arpl
std
(bad)
or
adc
es
in
psubd
ror
in
jno
mov
inc
dec
xchg
(bad)
fwait
xchg
cmp
jmp
cs
sar
push
mov
xor
pop
paddusw
inc
dec
xlat
mov
pop
(bad)
shl
jmp
out
push
inc
cmp
in
pop
xchg
adc
fisttp
fcomp
xor
aas
dec
out
jge
mov
mov
pop
cld
cmp
jbe
mov
xor
mov
mov
push
psrlq
sahf
fcom
shl
lea
mov
pop
ins
and
in
mov
fild
cmp
adc
mov
fbstp
test
or
imul
add
push
retf
mov
xor
push
retf
xor
cmp
dec
jo
out
push
stos
(bad)
addr16
adc
jno
enter
inc
mov
gs
in
imul
pop
or
test
fimul
jne
xchg
mov
xchg
adc
cmp
into
loope
(bad)
jmp
test
cmps
int
addr16
enter
mov
enter
mov
xor
lahf
lahf
mov
imul
dec
clc
push
xchg
push
cs
hlt
mov
test
dec
jns
in
cwde
rcr
pop
push
aas
push
rol
in
outs
int3
cli
or
cli
cmp
lods
xchg
and
mov
jp
and
sahf
cmp
not
mov
and
shr
xchg
scas
iret
jl
add
fist
pop
aaa
bswap
(bad)
jae
jecxz
adc
cmp
pop
pop
adc
aas
push
adc
arpl
cmp
push
inc
es
xor
lods
mov
lahf
retf
jbe
inc
jno
cmps
sahf
pop
out
jge
push
xor
push
int
out
imul
adc
call
jbe
jl
mov
inc
cs
mov
rcr
stos
ret
or
adc
mov
xchg
into
lahf
sub
adc
repnz
pop
mov
mov
ds
and
outs
popa
imul
cmp
dec
shl
pop
out
dec
loope
mov
bound
sub
mov
data16
lahf
xor
jno
xchg
jbe
(bad)
fwait
mov
push
and
xchg
mov
pusha
push
cmp
(bad)
shl
mov
dec
scas
sbb
das
dec
in
sub
pop
cld
inc
sbb
mov
adc
sub
sub
dec
fimul
mov
sbb
inc
xchg
mov
xor
mov
ds
test
test
mov
shr
sti
scas
nop
mov
sbb
addr16
and
sub
in
les
repnz
sbb
xor
dec
icebp
popa
ret
sbb
movs
jmp
je
push
mov
std
xchg
pop
das
push
(bad)
jne
pop
in
cmp
sbb
dec
mov
retf
call
popf
and
sub
sbb
fimul
mov
or
sahf
cmps
es
cmp
sbb
pop
push
dec
cmps
mov
inc
cmp
add
leave
neg
repz
iret
xchg
das
sub
mov
jbe
int
mov
push
jae
out
inc
fst
std
xor
femms
(bad)
int
inc
xchg
xor
mov
cli
lods
scas
push
dec
push
fimul
inc
or
leave
fcmovu
xchg
ins
dec
cmp
enter
sub
movs
sbb
mov
out
sbb
retf
cmovb
out
pop
int3
xor
std
xchg
cmp
xchg
inc
rcr
movs
sub
mov
je
mov
mov
fwait
add
push
inc
mov
adc
dec
sbb
fwait
or
stc
pop
inc
or
stos
jmp
or
push
test
les
pop
fwait
cwde
idiv
pop
aaa
jae
pusha
mov
xchg
rcr
mov
add
jb
(bad)
loopne
jns
xchg
mov
stos
mov
rsqrtps
rcl
sar
adc
lock
dec
out
rcl
fsub
scas
push
cmp
mov
sbb
call
sub
sub
jbe
jb
inc
dec
cmp
mov
int3
int
jge
sub
xor
ret
stos
and
shl
iret
push
xor
mov
movs
call
pop
jmp
inc
and
dec
inc
rol
ds
jmp
call
push
adc
xor
ins
ror
mov
mov
pop
in
into
mov
dec
inc
jmp
mov
jne
mov
pop
and
push
or
jl
push
push
dec
mov
inc
xchg
jle
jno
push
push
test
ins
stos
out
mov
iret
sub
ror
movs
jl
adc
add
add
call
xor
inc
and
mov
adc
inc
adc
inc
adc
inc
jl
aaa
cmp
xchg
nop
sbb
daa
mov
add
iret
or
sub
pusha
adc
cmp
push
scas
xchg
adc
sub
sub
cli
mov
retf
sahf
push
pop
pop
adc
test
adc
add
cmp
and
lds
je
or
push
or
mov
std
aam
es
mov
add
dec
pop
inc
adc
outs
das
jne
fld
loop
dec
mov
mov
inc
pop
mov
push
push
xor
and
js
sub
xchg
or
leave
cmp
jo
cs
pop
dec
rcr
mov
adc
ret
in
pop
fcomip
mov
jne
inc
or
sti
add
mov
add
hlt
xchg
mov
mov
jle
xchg
lahf
xchg
popf
es
mov
jge
or
ins
rol
cli
cmps
aaa
cmps
fwait
ret
outs
ficom
push
xor
hlt
xor
arpl
(bad)
(bad)
mov
pop
add
(bad)
outs
ds
arpl
sbb
cmp
sbb
shl
sub
pop
jb
push
fdivr
add
je
test
loope
jl
mov
mov
repz
jne
das
jo
sti
fwait
sub
sbb
or
pop
add
movs
push
ret
jp
xchg
rcr
push
jle
mov
out
and
fsubr
mov
dec
scas
test
inc
and
sub
(bad)
imul
adc
and
test
test
imul
inc
stos
inc
nop
test
adc
sbb
mov
add
nop
mov
push
(bad)
xor
(bad)
loopne
jge
add
adc
or
rcr
arpl
and
xchg
pop
in
popf
cmps
pop
mov
aaa
mov
cli
pop
mov
dec
and
and
xor
inc
ret
adc
pop
shl
call
(bad)
into
je
xchg
cmc
dec
adc
loopne
aad
push
add
loope
leave
xchg
sbb
mov
push
out
jmp
sbb
lock
addr16
add
inc
pop
dec
adc
adc
or
cmps
dec
pmaxsw
xchg
push
push
add
adc
daa
push
cmps
xor
dec
sahf
loope
push
add
mov
in
sub
or
or
or
add
mov
test
adc
mov
or
or
mov
arpl
push
rol
movs
push
mov
shl
dec
outs
mov
sbb
movs
lahf
add
xor
sub
dec
add
inc
in
sub
sbb
repnz
mov
adc
fwait
push
xor
sub
sbb
and
int3
xchg
sar
ret
out
jae
sahf
fsub
pop
mov
outs
lock
and
pop
stos
xor
add
stos
bound
jae
sar
xchg
push
lahf
cmps
dec
ret
jmp
jl
adc
arpl
cs
ja
rcl
rcr
scas
xchg
out
adc
mov
sub
jnp
dec
fstp
rcr
adc
rcl
xchg
imul
mov
not
aaa
clc
push
stos
or
sbb
push
es
fmul
pop
out
ja
push
xchg
jb
jnp
or
enter
lods
std
leave
inc
(bad)
xor
fdiv
in
mov
cmp
scas
not
leave
fcmovu
cs
add
int3
shr
scas
mov
sbb
sbb
shl
ins
push
dec
mov
xchg
sbb
mov
test
mov
or
loopne
(bad)
unpcklps
xor
enter
sub
inc
test
sbb
fs
mov
or
mov
in
cdq
ret
pop
push
inc
pop
mov
(bad)
jne
shr
call
mov
or
xchg
jns
fisubr
repnz
sbb
ja
lods
or
xor
cmp
or
js
sbb
out
jo
cmp
xchg
xchg
xchg
repnz
out
push
push
movs
out
and
xchg
pusha
jns
int
cld
popa
shl
dec
and
out
inc
repnz
imul
out
lahf
(bad)
jg
dec
sub
rcr
mov
cld
push
stc
bound
sub
(bad)
lea
fst
js
mov
(bad)
icebp
(bad)
lods
xor
stc
loope
enter
leave
add
(bad)
pop
pop
mov
adc
xchg
movs
push
sub
sbb
xchg
xor
and
mov
mov
jmp
and
sub
ss
lock
repz
xchg
test
in
cmps
(bad)
mov
stc
xchg
sysenter
mov
aaa
ror
loop
jo
mov
addr16
mov
inc
xlat
iret
fstp
scas
dec
nop
mov
ficomp
jmp
and
sub
add
jbe
int3
shl
xor
popf
cmp
lea
imul
xchg
out
dec
and
pop
cdq
dec
xchg
dec
pop
bswap
push
add
sub
or
and
fsubrp
sbb
mov
cmps
mov
ds
pop
pop
sub
xchg
ds
xchg
xchg
or
push
push
jge
movs
sar
call
ds
jno
lds
fs
fistp
inc
ud1
push
je
add
dec
lea
jno
and
js
cmp
pop
in
xor
xor
aam
xor
pop
pushf
jge
(bad)
push
xor
mov
popa
popa
fs
push
mov
mov
pop
out
adc
(bad)
xchg
inc
jnp
mov
in
pop
dec
cmp
mov
pop
or
(bad)
shl
pop
xor
repnz
hlt
mov
push
inc
fnsave
dec
xor
jmp
ficom
int3
sbb
popf
mov
sbb
cld
xchg
test
pop
out
pop
shr
lods
out
aad
mov
pop
xchg
icebp
cli
bound
mov
shl
out
xor
pop
fbld
loop
iret
mov
xchg
movs
int
xor
imul
mov
fwait
mov
inc
cmp
hlt
mov
jno
xlat
(bad)
xchg
push
ins
mov
sar
inc
mov
pop
stos
push
iret
int
aas
sub
int3
jns
(bad)
ss
in
add
ror
daa
xchg
leave
and
movs
xchg
xor
lahf
test
ins
cmps
inc
not
retf
mov
mov
pop
sbb
lds
aam
ret
pop
aas
mov
in
mov
add
lahf
lahf
xchg
cmps
(bad)
out
ja
es
add
lods
adc
pop
xchg
xchg
xchg
cmps
lea
adc
cwde
and
out
mov
or
or
adc
cmp
dec
(bad)
mov
mov
enter
xor
imul
xchg
push
ss
lds
or
add
test
dec
loope
dec
sub
shl
lods
sbb
lods
jae
add
out
aad
lahf
fwait
xchg
sbb
retf
imul
mov
(bad)
pop
daa
jg
ficomp
pop
aam
ret
nop
loopne
call
retf
out
(bad)
leave
test
mov
lahf
test
arpl
jns
sbb
les
xchg
mov
mov
out
push
cmp
add
lock
xor
lds
mov
mov
into
ss
ins
sub
inc
dec
jae
xor
loope
xchg
inc
pop
mov
shl
push
sbb
aam
mov
sahf
pop
and
adc
and
add
fs
inc
nop
test
adc
add
scas
mov
jg
cli
jle
xor
add
dec
mov
add
outs
loope
jnp
pop
sbb
dec
cs
cmc
adc
cmp
test
jecxz
addr16
push
sub
mov
(bad)
mov
les
fs
cmp
and
lds
xchg
cmp
jns
mov
bound
outs
(bad)
repz
out
test
std
jp
jecxz
sub
xor
mov
ins
clc
repz
add
ss
inc
ins
push
std
xchg
xchg
ins
js
dec
out
into
enter
mov
and
pop
jae
sbb
pop
ret
shl
out
gs
dec
hlt
bound
and
jge
xor
mul
mov
and
daa
loopne
jmp
imul
outs
sub
sbb
fwait
adc
test
cmp
dec
cli
sub
xchg
xchg
pop
adc
mov
in
movs
or
mov
sbb
inc
or
sub
mov
scas
push
add
mov
ficom
add
scas
loop
not
cmps
or
ins
je
inc
test
ja
test
jae
movs
fidivr
adc
or
(bad)
jge
and
add
sbb
cld
sub
dec
in
lods
push
dec
test
retf
in
jmp
pop
mov
in
je
jmp
popf
rcl
add
inc
pushf
dec
fmul
adc
inc
mov
xlat
sub
aad
int
adc
and
ins
sub
ja
xchg
scas
lock
or
std
adc
cmp
loope
sbb
(bad)
sbb
jnp
fimul
arpl
sti
lods
fidiv
(bad)
mov
call
mov
ds
add
adc
push
cmp
call
mov
push
inc
mov
leave
aas
mov
movs
(bad)
retf
mov
jl
and
div
loop
cmps
jbe
dec
daa
pop
outs
jne
out
dec
int
scas
pop
mov
into
adc
(bad)
push
push
push
sbb
ins
inc
daa
push
pop
cvtps2pi
mov
std
(bad)
mov
inc
enter
dec
jo
mov
jl
cmc
sub
adc
xchg
nop
es
xor
test
ja
shl
dec
(bad)
xchg
or
fisttp
or
mov
jmp
sbb
mov
fs
les
ret
shl
cmp
pop
mov
dec
lds
in
or
sub
je
jl
fcmovbe
or
ret
test
jbe
cmps
in
mov
mov
xor
(bad)
loopne
inc
mov
pop
dec
loopne
dec
sbb
push
push
inc
imul
int
ret
loope
adc
retf
push
sbb
ins
xchg
rol
in
(bad)
sbb
xor
pushf
out
fwait
out
inc
jne
lods
(bad)
icebp
push
mov
mov
mov
shl
repnz
and
jbe
push
gs
je
fadd
ficom
mov
popa
mov
inc
ja
jns
movs
lds
retf
sub
cmps
repnz
loop
pushf
int
add
mov
mov
adc
pop
hlt
in
pop
and
xchg
mov
fs
jle
dec
pop
cmp
push
xchg
dec
xlat
mov
lea
call
daa
sbb
jg
xor
(bad)
push
adc
cdq
fdiv
cmp
sub
jns
fst
int
and
sahf
jmp
neg
je
test
xchg
call
mov
repnz
jae
xchg
into
mov
mov
sbb
xor
fdiv
sbb
not
jae
push
das
fist
(bad)
popf
scas
xchg
jns
pop
hlt
mov
(bad)
adc
cmp
inc
sub
aaa
push
call
mov
lahf
pop
sub
jmp
in
or
pop
dec
out
or
adc
xchg
cmps
out
loope
add
imul
dec
(bad)
dec
cmp
(bad)
pop
adc
jmp
js
sbb
mov
loopne
add
pop
loopne
pop
add
and
out
mov
sub
rol
fcomip
pop
int
ret
jno
xchg
xchg
push
inc
sub
mov
outs
mov
adc
mov
in
cmp
(bad)
stos
mov
leave
nop
ret
je
mov
(bad)
and
ins
mov
jle
in
ret
xchg
push
ficomp
js
mov
mov
mov
iret
and
fidivr
sub
xor
(bad)
shl
mov
xor
aad
retf
push
ds
pop
clc
xchg
pop
mov
mov
imul
ins
jne
pop
iret
vmwrite
cmp
gs
sar
cdq
dec
sbb
(bad)
mov
pop
mov
imul
mov
xlat
xchg
icebp
push
test
cmp
movs
mov
mov
out
xor
adc
mov
inc
outs
gs
mov
sbb
imul
add
repnz
jecxz
leave
fdivr
pop
inc
int3
cmc
jo
jmp
mov
retf
dec
mov
jp
sti
lahf
gs
xor
cmp
add
ds
push
mov
gs
sbb
sbb
movq
shl
sub
retf
cdq
xchg
lods
cmp
cmp
jbe
adc
(bad)
retf
js
daa
push
test
sbb
outs
or
out
mov
mov
and
pop
pop
loopne
repnz
mov
fnstsw
data16
sbb
jae
pop
jl
mov
lock
jmp
retf
fwait
jnp
(bad)
or
movs
and
mov
xor
cmp
hlt
push
jb
and
rcr
and
addr16
add
rol
icebp
mov
loop
(bad)
jb
sbb
mov
iret
jmp
out
mov
sbb
fwait
sbb
cmp
inc
inc
ja
cmp
mov
ss
and
inc
sbb
xor
dec
jmp
rcr
mov
jmp
dec
mov
adc
imul
nop
xchg
mov
mov
aas
mov
loop
push
mov
and
add
pop
sub
repnz
mov
test
mov
inc
mov
sbb
(bad)
cmp
sub
adc
jp
out
fldcw
or
outs
jb
xor
inc
in
push
loopne
ins
cmp
je
pusha
jo
or
arpl
(bad)
mov
sub
xchg
and
arpl
dec
retf
jo
dec
(bad)
fmul
(bad)
pop
cmp
and
cmp
jne
add
loope
dec
or
push
and
jecxz
jno
out
mov
add
int3
out
aad
jmp
add
adc
xchg
ficom
int
and
add
add
and
or
dec
xlat
pop
inc
or
fild
scas
jmp
pop
cmp
retf
push
add
sbb
jmp
mov
inc
cwde
jecxz
or
push
loope
lea
or
add
xchg
enter
loope
add
add
inc
jne
and
in
scas
push
push
inc
dec
add
jge
sbb
popa
aaa
jne
xchg
loope
cpuid
aaa
adc
xor
rcl
stos
add
jecxz
or
inc
add
hlt
inc
inc
xchg
dec
or
sub
ror
and
dec
in
test
add
sar
push
inc
adc
cld
and
push
add
aad
sub
xchg
imul
mov
fnstsw
mov
imul
pop
ret
jnp
adc
xchg
mov
lahf
add
add
inc
fwait
sub
retf
std
out
inc
(bad)
je
test
(bad)
lock
out
fcmovu
dec
jge
or
mov
mov
mov
imul
pop
push
ins
pop
fld
nop
adc
int
iret
push
lahf
jne
inc
outs
test
fsub
mov
outs
hlt
cmc
not
in
int3
movs
mov
mov
adc
lods
or
(bad)
cld
mov
mov
rcr
into
popa
imul
mov
outs
scas
xchg
push
xor
retf
mov
or
stos
and
sub
or
mov
and
adc
adc
out
cmp
iret
arpl
push
mov
or
cmp
mov
and
push
dec
ret
mov
push
cmps
pop
pop
cmp
rcr
out
loope
fbstp
ja
loope
push
shl
test
jp
ret
and
push
and
cmp
sbb
rcl
dec
fiadd
mov
inc
mov
cmc
dec
test
mov
xchg
inc
es
sub
shr
dec
leave
lock
fild
idiv
sub
cmp
mov
jge
and
mov
sbb
push
mov
dec
xchg
fsub
mov
pop
jmp
inc
lds
loop
xchg
jge
or
cmp
or
cmp
dec
sbb
adc
movs
push
xchg
cmp
adc
mov
and
inc
daa
aad
inc
add
inc
add
inc
push
cmp
adc
dec
test
mov
fsub
jle
add
test
mov
pop
add
sahf
inc
mov
jno
adc
cmp
jl
or
push
mov
mov
sbb
cs
scas
cmp
aaa
mov
sbb
loopne
cmp
cmp
cmp
es
inc
cmps
jne
and
dec
cmp
outs
cli
mov
jmp
sbb
pop
jl
inc
aam
sbb
sub
mov
sar
sub
jg
jae
dec
popa
sti
sub
jnp
pop
shr
cmp
out
add
enter
in
adc
fisttp
push
sbb
imul
cmp
add
sbb
xchg
sti
xchg
dec
cmp
push
data16
stc
sbb
mov
in
imul
pop
pushf
xchg
add
daa
xchg
stc
mov
or
sti
and
test
inc
dec
jno
retf
mov
arpl
scas
in
fsubr
sahf
mov
push
jno
test
(bad)
mov
cs
cmp
or
es
jg
pop
or
push
adc
mov
cmp
jno
fwait
movs
jecxz
mov
lahf
jb
jle
setge
in
pop
sub
imul
jne
xor
fisttp
movs
jno
mov
int3
mov
cmps
sub
nop
cmovg
leave
jae
nop
call
mov
mov
and
inc
and
inc
and
inc
ret
mov
push
mov
leave
sahf
sbb
push
dec
adc
adc
nop
adc
sti
shr
ds
jle
mov
icebp
xor
mov
scas
sub
sar
mov
ss
fisttp
(bad)
lds
repz
lock
ins
jae
sub
mov
cdq
dec
xchg
push
cmp
inc
out
vcvttsd2si
xchg
mov
jecxz
test
sar
jnp
sahf
cdq
test
shl
aas
in
into
ficom
in
or
test
dec
enter
jns
hlt
aaa
jne
jno
iret
shl
add
cmp
xor
(bad)
add
in
jmp
int3
mov
repnz
add
test
es
pop
ret
and
mov
add
and
xchg
mov
das
aam
mov
in
push
push
out
dec
push
fs
lahf
(bad)
aas
fldcw
or
inc
sbb
iret
enter
add
ins
mov
fdiv
xlat
dec
enter
sti
and
loop
xchg
in
add
fcomip
push
lahf
mov
clc
daa
rcr
mov
jmp
cmp
push
fnsave
push
test
leave
cmp
out
scas
sbb
pop
imul
jg
fdivr
int3
cmp
(bad)
aaa
xlat
neg
into
jne
xor
movs
dec
jb
and
imul
jle
outs
enter
mov
jnp
sbb
idiv
ins
pop
cs
rcl
adc
clc
out
test
xor
push
and
mov
lahf
gs
das
ret
(bad)
xchg
lods
cwde
dec
div
aas
jo
cmp
inc
std
ins
or
dec
or
shl
inc
out
mov
repnz
cmp
adc
cli
je
out
xchg
xchg
cmp
aas
mov
lds
rcr
out
sar
cld
xchg
xchg
pop
jmp
ins
lea
cmp
mov
or
sbb
cld
movs
(bad)
pop
inc
out
mov
int3
xchg
data16
scas
xchg
pop
idiv
ds
or
std
sbb
in
or
sub
adc
out
out
dec
jmp
dec
es
cmps
popa
pop
repnz
lahf
mov
xor
loopne
pusha
test
hlt
mov
(bad)
pop
jmp
cmp
lods
jmp
mov
push
(bad)
rcl
test
imul
mov
dec
and
sbb
xlat
jnp
adc
mov
fwait
and
inc
mov
stos
int
inc
and
sub
xchg
or
inc
inc
mov
add
dec
adc
or
jne
and
call
dec
jbe
test
xchg
push
jno
adc
outs
nop
in
arpl
ret
add
mov
scas
aam
pop
das
xchg
cs
int
cmc
mov
jnp
repz
jp
ins
and
mov
ds
jnp
cmps
sbb
push
push
push
mov
retf
mov
sub
repz
ret
movs
cmp
jo
test
ins
jbe
mov
cdq
mov
cmp
stc
mov
stc
mov
xor
int3
sahf
and
loopne
(bad)
mov
xchg
or
mov
aaa
xor
jae
cmps
test
iret
jne
fs
std
push
adc
adc
shr
pop
mov
dec
fiadd
push
aam
jl
aaa
loop
cmp
mov
or
mov
cmp
imul
test
ret
jge
mov
fnstenv
addr16
sbb
or
mov
push
ss
dec
add
(bad)
dec
xlat
in
jne
rcr
cmp
push
adc
push
aaa
ror
not
test
mov
or
in
inc
add
shl
jmp
pop
push
dec
mov
idiv
fs
cwde
pop
inc
repnz
fistp
movs
add
push
lea
ror
mov
mov
sar
mov
fnstenv
xlat
in
adc
sbb
xor
sbb
rol
or
jle
in
xchg
scas
cmp
and
jmp
mov
jge
aas
xchg
pop
push
scas
popf
sahf
dec
or
call
imul
and
xchg
cdq
add
dec
add
or
pop
scas
mov
les
jb
cwde
mov
(bad)
fcomp
(bad)
and
fld
mov
movs
lahf
mov
(bad)
pop
and
arpl
ss
int3
jno
repnz
adc
dec
clc
pop
cmp
mov
scas
inc
iret
loop
mov
adc
xlat
(bad)
in
sbb
out
test
out
xlat
mov
and
lods
in
dec
or
outs
ret
xchg
sub
int
mov
loop
shl
into
inc
xchg
mov
sahf
outs
out
mov
mov
scas
ret
(bad)
xor
add
adc
das
shl
(bad)
dec
xchg
dec
aad
xchg
aaa
jp
cmpxchg
xlat
xor
stc
mov
imul
mov
and
inc
mov
cmps
inc
mov
mov
add
shl
and
rcl
jp
vmread
pop
rcr
fsub
jmp
cmc
push
std
mov
leave
(bad)
xor
scas
adc
pop
push
test
mov
jb
xchg
imul
js
pop
adc
arpl
mov
add
dec
push
icebp
ffree
xchg
mov
sbb
std
mov
jecxz
mov
mov
or
or
mov
xor
int3
js
dec
xchg
das
pushf
ror
call
jge
sbb
pop
stos
das
push
shl
das
or
add
and
neg
aaa
inc
shl
mov
retf
fwait
lea
pusha
xchg
je
dec
sub
loope
mov
jp
or
in
xchg
repz
xlat
mov
pop
dec
cmp
sti
sub
frstor
cmp
inc
out
pop
aaa
adc
add
cmp
gs
in
sar
repnz
test
outs
loop
pop
mov
mov
add
sub
cli
sbb
cmc
mov
pusha
jo
out
dec
pop
enter
or
mov
div
mov
or
ss
sbb
jae
jns
sbb
int3
lahf
push
aam
ins
int
fs
call
bound
inc
xchg
sbb
aam
test
add
mov
int3
xchg
fidivr
xor
loope
lock
arpl
adc
xchg
mov
or
push
mov
pop
and
popf
mov
adc
and
into
adc
dec
cmp
out
out
mov
punpckldq
push
push
out
jb
mov
cli
push
pop
adc
add
enter
mov
sub
imul
xor
out
imul
xchg
fstp
mov
js
dec
mov
les
sub
loop
je
cdq
aaa
lock
movs
(bad)
push
and
dec
jae
(bad)
jmp
gs
in
mov
jecxz
sub
pop
std
jg
int3
jno
cmp
fdiv
les
ds
mov
ins
xor
pop
xor
js
jmp
mov
sub
xchg
xchg
sbb
stos
push
pop
sbb
mov
imul
pop
(bad)
aaa
mov
out
mov
arpl
jns
push
retf
or
pop
sub
arpl
jae
scas
inc
jmp
xor
pop
leave
lds
xchg
aaa
(bad)
repz
clc
or
inc
jnp
xchg
xor
cmps
ffreep
lods
(bad)
lods
not
push
jmp
stos
out
stos
call
popa
getsec
iret
push
outs
repnz
test
pop
sbb
popa
cs
pop
jae
jle
jg
or
jne
in
int
or
sti
lods
adc
add
in
mov
(bad)
outs
jecxz
mov
xchg
les
push
jno
xor
and
(bad)
or
rcr
(bad)
outs
jno
jge
aad
imul
jbe
(bad)
loope
sub
gs
or
leave
out
jle
pop
cld
cmps
inc
pop
cdq
xchg
or
jns
inc
push
cs
mov
xchg
mov
sub
push
adc
and
sub
inc
inc
retf
mov
aam
adc
adc
dec
sub
adc
or
mov
call
and
or
int
mov
jg
jo
inc
push
sbb
je
aam
cmp
push
mov
scas
mov
jnp
xchg
inc
or
in
stos
sub
add
ds
test
nop
cmp
cmp
inc
adc
adc
je
daa
pop
push
sbb
push
dec
mov
push
push
push
or
mov
cwde
jmp
cmps
sub
hlt
mov
adc
and
jmp
mov
push
ins
jne
adc
push
add
cmp
add
add
test
fld
push
mov
add
ret
retf
jnp
and
adc
push
sti
mov
pop
fs
dec
std
nop
sbb
stos
popa
lods
and
jg
add
neg
pop
imul
daa
repnz
lea
dec
ss
and
cmp
cmp
sbb
mov
imul
nop
push
pop
gs
lea
dec
pop
movs
adc
jns
aaa
dec
jbe
inc
imul
in
out
mov
xor
mov
sti
push
scas
sar
fwait
pop
pop
rcr
ss
fisub
imul
adc
sub
jnp
lods
or
or
(bad)
xchg
inc
fistp
imul
stos
add
ror
xchg
loope
jnp
pop
stc
push
(bad)
shl
mov
int
cmp
test
and
or
mov
nop
sahf
cli
adc
and
stos
mov
ss
xchg
cmp
mov
cmps
retf
adc
cmp
mov
and
pusha
and
adc
add
push
mov
mov
sub
xchg
cmp
stos
adc
inc
mov
inc
jnp
cmps
btc
mov
mov
add
sub
nop
add
sbb
push
sbb
out
or
xor
test
jmp
fild
clc
dec
xchg
and
lods
imul
sbb
mul
in
xchg
adc
inc
jne
adc
inc
add
or
adc
add
or
push
inc
fstp
dec
test
mov
add
popa
sub
adc
adc
push
in
sbb
pop
fidivr
(bad)
adc
je
and
jg
inc
in
nop
pop
fld
push
aas
clc
jnp
cmp
(bad)
adc
sbb
fst
cmps
sbb
push
and
adc
mov
xor
repnz
mov
jbe
cdq
and
pop
mov
test
push
ss
es
dec
aaa
(bad)
jle
aad
mov
int3
xchg
ficomp
mov
pop
or
ds
outs
and
push
rcr
inc
pop
jle
(bad)
push
push
sub
cmp
mov
aad
call
loop
arpl
ret
mov
mov
test
pushf
fcomp
sub
and
sub
mov
push
mov
cdq
mov
inc
mov
or
jb
inc
jle
mov
test
ins
add
dec
ss
mov
(bad)
call
inc
bnd
out
or
int3
aad
jae
jo
leave
jae
rcr
jmp
retf
cld
test
(bad)
cli
ja
adc
jecxz
std
xor
fs
ffreep
jne
pop
frstor
lods
add
fdiv
jmp
sbb
xchg
and
sbb
sbb
adc
lea
adc
test
adc
test
cmp
inc
adc
pop
mov
rol
loopne
and
fimul
call
dec
xchg
cdq
xor
loopne
mov
fist
xlat
in
mov
fidiv
call
cmp
aaa
aam
xchg
adc
fs
fs
movs
fdiv
lock
mov
lea
pop
outs
test
push
pop
ins
dec
iret
cmp
neg
test
jmp
jecxz
imul
pop
popw
gs
ins
daa
cmp
loopne
sbb
out
jae
push
jg
(bad)
das
outs
loope
adc
or
movs
rcr
mov
hlt
cs
sbb
cmps
(bad)
lds
inc
pushf
sti
add
in
fst
and
xor
daa
pop
arpl
mov
rol
xchg
fs
sbb
(bad)
xor
fstp
stc
mov
clc
(bad)
addr16
xchg
aaa
lock
jae
cwde
cli
jl
or
mov
leave
test
jg
test
lock
jmp
in
inc
jge
pop
outs
popa
arpl
jl
ins
ins
and
inc
neg
jno
xlat
xor
sub
mov
mov
cmps
push
sbb
xchg
xor
mov
popa
in
dec
fisttp
mov
lahf
cdq
es
fs
rol
jl
lods
ja
aad
fdiv
lea
movs
pop
test
cmp
(bad)
shl
(bad)
xor
ret
jbe
xchg
icebp
in
sahf
push
retf
lods
sbb
ja
fisttp
outs
arpl
push
cmp
(bad)
rcr
or
inc
pop
pushf
iret
(bad)
and
fwait
sub
inc
aam
cs
clc
shl
or
fidivr
add
jle
repz
cmp
pushf
mov
mov
js
add
mov
loope
and
mov
scas
inc
(bad)
leave
loope
pop
loope
sbb
pop
xor
pop
add
lods
jecxz
or
xchg
cmp
mov
aaa
in
imul
pop
js
jns
mov
add
pop
dec
out
mov
sbb
jg
dec
cmp
pop
sbb
xchg
add
sbb
dec
int
pop
pop
dec
fs
jecxz
xor
in
mov
jns
and
das
jnp
mov
(bad)
std
mov
stos
out
xchg
cmp
in
cmp
add
adc
mov
nop
cmp
fwait
and
mov
mov
inc
xor
add
or
adc
xchg
dec
add
dec
and
mov
repnz
sbb
dec
mov
sar
loope
frstor
dec
int3
jp
jno
imul
cmp
je
cmp
sbb
dec
push
sti
test
jb
mov
loop
das
imul
dec
jmp
dec
inc
(bad)
mov
shl
into
(bad)
loopne
pop
ds
ss
mov
add
mov
and
dec
mov
jp
cmp
jae
popf
rcl
lgs
jbe
and
jmp
push
imul
into
mov
cdq
scas
xor
(bad)
jmp
aam
je
pop
cld
push
iret
xchg
cmp
and
inc
cs
mov
fimul
mov
inc
ret
shl
mov
ret
ja
dec
out
popa
aam
sbb
add
dec
add
jbe
jle
cs
push
inc
shl
add
mov
mov
jbe
in
in
int3
xchg
ds
inc
enter
ss
push
int
cmps
cdq
sar
stos
lea
fnstcw
movs
les
je
shl
push
pushf
mov
pop
pusha
stos
fisubr
stos
rcr
push
movs
xor
jl
adc
push
es
and
and
xor
fld
xor
std
iret
or
inc
movs
xchg
call
outs
mov
sbb
call
and
int3
ins
xor
mov
jb
stc
or
into
jecxz
stos
sbb
jns
add
jp
push
push
inc
mov
in
dec
xchg
std
nop
fidivr
sub
dec
xchg
mov
xor
repz
inc
mov
xchg
push
aam
mov
ret
push
lea
and
ds
jl
ffree
sbb
mov
mov
mov
aaa
jmp
jns
add
stos
and
fsubp
cmp
icebp
(bad)
pop
add
add
(bad)
daa
push
adc
mov
movs
adc
fwait
popa
movs
jb
xlat
ins
rcl
cmp
(bad)
sbb
jecxz
xchg
xor
(bad)
leave
jnp
jne
jne
inc
nop
inc
or
bound
out
mov
add
sub
into
jecxz
push
gs
inc
daa
jmp
movs
sub
(bad)
movs
retf
imul
xor
popf
(bad)
iret
inc
push
dec
xchg
jno
inc
add
test
and
test
test
or
inc
xchg
call
or
test
pop
out
and
or
mov
inc
push
out
jle
pop
in
scas
push
jmp
fwait
movs
jae
mov
aas
or
and
mov
jbe
dec
scas
arpl
imul
add
push
adc
push
inc
not
add
jge
in
add
test
movs
mov
cmp
jbe
out
rol
cdq
test
or
imul
mov
and
icebp
mov
jmp
hlt
repnz
sahf
sahf
sahf
stos
mov
test
cmp
cdq
stc
sar
lods
mov
test
cmp
jmp
aas
ret
fstp
xchg
mov
xchg
push
in
push
jecxz
mov
jl
push
(bad)
stc
paddd
xlat
shl
mov
popf
sub
fs
adc
push
inc
add
scas
(bad)
mov
push
ret
repnz
add
(bad)
xor
add
aaa
test
xor
inc
lock
sub
mov
cmp
mov
mov
ja
das
mov
js
dec
outs
call
ror
sub
pop
imul
dec
mov
ins
xchg
push
out
scas
rcr
cwde
jg
mov
setae
and
pop
jg
xchg
pop
inc
ja
xor
mov
icebp
xlat
(bad)
xor
icebp
repnz
inc
mov
test
(bad)
cmp
push
push
pop
sbb
dec
lock
mov
(bad)
cmps
dec
clc
pop
inc
inc
es
sahf
test
mov
or
fst
clc
pop
and
add
push
nop
cmp
mov
jge
ins
test
cdq
ins
adc
lods
mov
cmp
and
int
cwde
jno
or
lds
int
pop
mov
and
arpl
(bad)
xor
pop
test
pop
jno
rcl
outs
or
ds
ror
lods
cmp
fcom
push
xlat
into
inc
sbb
ins
popa
mov
sub
xchg
xor
sbb
(bad)
retf
mov
pop
lahf
and
pop
push
sub
sub
adc
or
jmp
inc
aas
mov
fiadd
xor
sar
jns
mov
test
add
mov
or
bound
inc
mov
inc
jne
aaa
fstp
add
add
or
adc
pop
adc
sub
xchg
mov
icebp
push
xchg
sub
add
and
hlt
cmp
retf
and
and
adc
sti
pop
sbb
sbb
or
cvtpi2ps
test
movs
pop
sar
imul
push
dec
ss
cmp
(bad)
pop
mov
enter
mov
mov
loope
mov
inc
mov
movs
je
mov
mov
and
or
xchg
inc
inc
fwait
sub
popf
test
or
or
add
enter
push
push
push
call
jge
imul
and
test
mov
or
or
or
test
adc
and
adc
or
inc
xor
xchg
div
jns
and
sub
dec
xor
dec
test
rol
and
test
das
sahf
mov
adc
mov
fwait
sbb
inc
push
xor
sar
xor
add
shl
mov
lahf
push
push
adc
adc
add
test
in
imul
push
in
outs
add
or
fld
stos
or
mov
into
add
out
mov
sahf
pop
and
ins
cmp
inc
dec
jns
mov
adc
add
dec
mov
shr
mov
sahf
test
sub
and
inc
add
ins
or
fwait
nop
inc
push
mov
xchg
aad
sti
mov
add
xchg
sub
push
inc
or
repnz
gs
mov
dec
or
je
add
in
lock
jne
push
pop
(bad)
pop
push
outs
loop
and
inc
inc
add
push
mov
add
mov
nop
adc
sbb
cs
adc
and
out
retf
popa
sub
in
xchg
adc
movs
mov
popf
mov
add
mov
dec
out
adc
call
imul
sub
ss
inc
mov
push
xchg
mov
inc
scas
mov
int3
mov
std
and
mov
fs
test
adc
nop
test
jbe
in
leave
inc
jb
or
push
or
xchg
inc
push
test
lds
movs
js
inc
push
sbb
enter
jp
and
jecxz
ja
imul
cmp
dec
movs
cmc
add
push
jne
repnz
imul
or
sbb
mov
comiss
cmp
add
fld
sub
cwde
ss
dec
dec
mov
jl
jb
adc
mov
mov
adc
data16
dec
or
(bad)
cs
mov
(bad)
sar
inc
jne
pop
dec
jle
fwait
push
push
pop
and
into
gs
outs
icebp
out
cmp
leave
aam
push
add
add
popa
and
jecxz
iret
xchg
sahf
out
fs
pop
in
push
push
jmp
and
push
inc
shl
inc
loopne
jge
push
push
icebp
sbb
xchg
sub
lahf
ja
(bad)
loope
mov
mov
shl
and
test
adc
or
dec
in
test
adc
cmp
inc
and
inc
es
xchg
jns
mov
and
inc
fld
test
add
xlat
pop
xor
inc
inc
pop
inc
adc
add
int
pop
xor
icebp
inc
pop
test
bound
or
and
cli
dec
(bad)
and
mov
cli
fwait
and
jae
mov
dec
fsub
pusha
lods
mov
lea
cmp
mov
or
lds
dec
adc
mov
pop
cmc
jbe
shl
xor
int
ret
cli
dec
jmp
add
clc
and
popa
icebp
xchg
mov
pop
pop
jo
and
lods
jnp
rcl
repz
mov
nop
dec
sbb
and
in
fistp
dec
ret
shl
jno
xor
adc
xchg
or
scas
jg
jnp
idiv
jge
sub
and
sub
or
repnz
cdq
cs
fmul
xor
(bad)
pop
pop
sub
sbb
sub
mov
mov
push
loopne
in
(bad)
and
sbb
pop
or
dec
bnd
dec
dec
fst
xchg
in
lea
rcl
sbb
out
test
iret
push
(bad)
es
nop
mul
push
fdivr
mov
dec
sar
call
jb
in
(bad)
sbb
jne
enter
xchg
push
mov
ja
les
or
push
xor
mov
fs
jmp
or
out
and
or
pop
cmp
out
push
mov
sub
xor
dec
pop
pop
mov
out
ja
ja
popa
aam
mov
cld
inc
add
fmul
loope
scas
int
in
js
adc
mov
int
ret
lahf
inc
rcr
loope
into
(bad)
jae
pop
fs
mov
pusha
add
mov
stc
pop
jg
xor
ja
add
inc
ins
xchg
adc
mov
mov
xor
pop
jns
fldl2e
mov
jecxz
sbb
(bad)
mov
sbb
cmp
das
in
test
das
xchg
jne
test
inc
test
daa
repnz
cmp
mov
rol
mov
shl
xchg
sbb
mov
add
jg
jge
jbe
xor
mov
scas
imul
imul
or
cmp
sub
imul
cmps
shl
(bad)
shl
aas
dec
push
xlat
jmp
out
test
es
ds
fadd
neg
cmp
paddusb
(bad)
and
neg
test
clc
sar
nop
pop
dec
pmuludq
push
fs
push
or
data16
rol
sub
jo
(bad)
and
jbe
fdivr
retf
lea
sahf
loop
cmp
push
aaa
stc
lea
and
cmp
mov
xchg
mov
fdivr
not
fisub
adc
mov
push
aam
es
and
sub
cli
xchg
lahf
and
jecxz
repz
push
lock
bound
and
push
jmp
adc
arpl
jno
fwait
shr
and
sub
sbb
dec
loopne
mov
repz
(bad)
sbb
std
xlat
cmp
sbb
xlat
aaa
jmp
dec
fidiv
sti
test
iret
cmp
xchg
stc
(bad)
mov
pop
mov
in
jae
cmp
sbb
mov
hlt
jmp
in
hlt
mov
push
fbstp
outs
enter
dec
jo
enter
pop
sub
pop
pop
mov
cmp
or
cmps
xor
stc
sbb
mov
or
dec
push
gs
add
loopne
pop
gs
inc
sbb
xchg
daa
out
cmp
repnz
cli
ja
cwde
(bad)
cmp
xchg
addr16
cwde
jno
mov
xchg
sub
push
fmul
and
repz
jl
add
mov
imul
dec
(bad)
push
pop
mov
inc
sub
jae
mov
push
or
out
mov
and
wbinvd
adc
ins
add
cmps
ret
adc
jb
(bad)
lds
nop
cmp
jnp
ins
pop
cmp
sub
cmp
ss
cli
pop
dec
clc
inc
sbb
arpl
retf
test
jnp
adc
sbb
(bad)
push
fs
shl
pusha
out
(bad)
loopne
pop
pop
jle
push
inc
dec
daa
push
mov
push
xchg
loope
repnz
sbb
pop
inc
arpl
dec
jmp
mov
adc
dec
pop
loope
mov
test
add
into
js
adc
mov
iret
push
mov
jmp
dec
cld
jbe
scas
fsub
adc
inc
cmp
and
jae
dec
outs
aam
sar
lock
aam
push
xchg
dec
push
mov
sbb
mov
fsub
cmc
mov
cmp
push
xchg
jp
cs
lock
xlat
or
push
retf
jecxz
mov
or
push
jmp
mov
xchg
mov
repnz
adc
cmps
push
ret
fs
add
dec
leave
or
leave
arpl
call
cmps
pop
int
ss
sbb
or
mov
adc
cvttps2pi
fmul
cmp
jmp
stc
ins
sbb
into
jle
cmps
adc
adc
jmp
mov
bswap
push
ret
outs
mov
push
jle
fld
sbb
out
mov
adc
test
out
retf
outs
out
jnp
(bad)
cmps
in
xlat
pop
les
xchg
cmp
fwait
dec
dec
ds
jp
inc
int
js
aaa
and
mov
cmp
mov
neg
scas
jle
xchg
ss
pop
add
fs
or
sahf
out
fisttp
stos
push
dec
mov
pop
mov
outs
cmp
into
jno
or
cld
fdivr
test
imul
shl
jle
inc
mov
dec
dec
adc
push
inc
imul
lahf
dec
ds
xor
out
adc
xor
pop
repz
cmp
outs
stos
popa
sub
jae
mov
mov
leave
aaa
pusha
out
lahf
lds
adc
mov
pop
inc
outs
jnp
repnz
and
fidivr
push
and
je
mov
push
sub
repz
sbb
or
and
sub
sahf
mov
pop
loopne
ret
mov
sub
ins
jne
sub
ja
movs
adc
xchg
shl
sti
and
out
mov
mov
sbb
(bad)
inc
mov
imul
adc
or
jmp
ins
xor
jle
cmp
push
cmp
out
imul
or
sbb
vmovdqu
jecxz
jbe
pop
jmp
jp
mov
sub
cmp
arpl
movs
out
push
cmps
dec
jbe
ins
push
lds
lea
xlat
xor
pop
inc
sub
and
pop
mov
push
nop
inc
mov
rol
cmps
pop
out
adc
in
mov
or
mov
std
adc
mov
dec
push
cmp
fadd
and
cmc
ss
mov
push
(bad)
not
push
retf
pusha
sbb
cmp
dec
gs
sti
mov
fwait
in
retf
jno
xchg
leave
or
mov
and
mov
stos
xchg
movs
or
sti
daa
pop
je
and
(bad)
pop
test
or
lock
cmp
shl
sub
inc
ds
sar
xchg
adc
xor
out
enter
outs
(bad)
xchg
sbb
jge
pusha
adc
repnz
jmp
mov
test
jne
movs
add
mov
repnz
pop
push
add
sbb
mov
jne
mov
pop
mov
es
inc
add
dec
(bad)
mov
test
add
imul
sub
xor
movs
aad
ret
mov
add
or
cld
add
out
or
cmp
int
ret
add
pop
arpl
pusha
rcr
mov
pop
adc
push
xchg
ins
(bad)
sbb
loop
out
lds
fiadd
and
(bad)
mov
mov
sti
and
dec
movs
add
push
fwait
div
dec
clc
loope
aad
scas
fmul
add
xchg
adc
or
ror
cmp
call
into
enter
cs
enter
and
stc
adc
ja
push
icebp
jmp
in
jns
ds
and
push
sub
jae
jecxz
into
ss
inc
sub
out
out
add
loop
sbb
fld
mov
ss
mov
inc
inc
and
and
ror
ret
leave
or
add
or
push
mov
mov
adc
sub
mov
or
mov
sub
ja
pop
xor
pop
cmp
cmc
or
inc
inc
dec
fwait
jmp
das
gs
out
or
pushf
xchg
cmp
xchg
and
inc
nop
add
rcl
xor
pop
dec
and
dec
push
or
fiadd
in
and
jmp
test
jnp
adc
inc
mov
inc
adc
mov
outs
mov
and
dec
xor
and
xor
es
push
inc
ret
dec
cmp
push
test
xor
adc
dec
ds
dec
and
push
retf
inc
adc
xchg
inc
pop
sub
dec
add
lahf
fs
mov
inc
(bad)
fs
mov
pop
adc
mov
test
cmp
inc
pop
add
and
push
xchg
retf
add
push
adc
add
add
adc
outs
jb
xchg
push
lds
(bad)
int3
sbb
and
push
dec
sbb
push
mov
imul
scas
sbb
xchg
nop
or
or
or
shl
push
test
push
inc
pop
rol
pusha
jo
dec
dec
inc
add
test
jbe
mov
sub
pop
sub
stos
xchg
mov
ret
loopne
pop
sbb
push
je
jge
cvtpi2ps
cmp
test
xchg
cmp
push
and
inc
lods
ins
idiv
or
xchg
jns
sbb
and
mov
jmp
jns
imul
cmp
jl
retf
test
or
add
cmp
int
and
xchg
cdq
pop
push
sub
pop
cld
repnz
and
mov
nop
mov
mov
mov
adc
dec
div
and
pop
cmp
push
xchg
adc
test
push
clc
sbb
adc
adc
adc
and
adc
test
adc
daa
sub
lock
mov
addr16
jbe
in
mov
in
imul
ins
popa
and
inc
xor
jle
arpl
xchg
cdq
ret
pop
jbe
mov
aas
jne
sub
fwait
(bad)
sub
loop
lahf
loope
pop
jmp
cwde
pop
mov
arpl
adc
xchg
int
cli
(bad)
push
iret
cmp
jae
cs
idiv
dec
pop
popa
in
punpckhwd
in
ds
mov
pusha
jns
(bad)
es
xor
push
jno
mov
or
xor
jecxz
retf
jbe
cmp
std
xchg
jo
in
cmp
inc
cli
out
sbb
call
sbb
imul
xor
add
cmovne
dec
mov
xchg
sbb
bound
cs
popf
and
sub
mov
xchg
add
in
push
bound
aam
dec
scas
out
or
pop
mov
ret
retf
call
(bad)
dec
shl
adc
stc
push
test
mov
mov
(bad)
ror
push
push
inc
aam
(bad)
add
cs
daa
pop
ror
mov
jecxz
stc
push
xchg
js
fmul
pop
cmp
retf
ficom
(bad)
ja
neg
fbstp
ret
push
shl
pop
adc
pop
jno
inc
loopne
cdq
inc
inc
jo
sbb
mov
rcr
sub
jns
mov
scas
inc
or
ins
jno
push
imul
stc
push
pop
push
sub
popf
mov
daa
mov
cmp
xor
xlat
icebp
retf
dec
xchg
clc
push
(bad)
fwait
xchg
or
div
mov
jmp
in
sti
mov
pop
ins
add
push
(bad)
neg
loop
inc
mov
int
inc
pop
imul
lock
js
adc
out
or
pop
xor
jae
sub
arpl
pushf
jmp
or
xchg
xchg
push
rcl
fwait
mov
fldenv
lods
hlt
add
(bad)
popf
jno
jno
xor
popa
sti
cmp
push
js
test
mov
fnstenv
adc
pop
jecxz
js
xchg
mov
nop
add
mov
or
add
and
pop
jl
inc
add
add
pop
cmp
inc
aaa
(bad)
add
mov
and
jb
dec
out
sahf
xchg
xor
pop
jge
retf
pop
mov
inc
sub
fsub
in
mov
mov
(bad)
int
(bad)
jmp
sbb
imul
fcmovbe
push
je
mov
mov
(bad)
loopne
dec
clc
jno
ss
cli
inc
mov
xchg
jl
xor
mov
mov
sbb
inc
clc
les
push
jecxz
imul
and
lods
retf
je
mov
pop
call
pop
out
test
pop
inc
leave
data16
sbb
int
popf
sub
(bad)
(bad)
gs
push
inc
call
inc
mov
mov
pop
retf
xlat
mov
jmp
(bad)
sbb
jge
mov
push
jne
jmp
lock
xchg
mov
aas
(bad)
jae
mov
mov
fld
fiadd
or
iret
mov
jp
adc
pop
loop
test
add
hlt
in
ins
fwait
call
and
xchg
or
sub
es
xchg
popf
xchg
aas
and
repz
sbb
jo
mov
dec
jb
fisttp
and
mov
jg
xor
inc
sbb
mov
push
push
retfw
daa
xor
cwde
sbb
jne
xchg
add
outs
cs
xlat
mov
inc
out
adc
test
mov
add
add
pop
stc
and
(bad)
lea
adc
loop
mov
out
jg
mov
add
imul
inc
push
jle
xchg
pop
aaa
loope
mov
clc
rol
mov
hlt
into
outs
cmp
mov
mov
xchg
jmp
cdq
iret
enter
scas
pusha
test
jno
aas
cli
outs
cld
stos
pop
sub
xchg
fs
out
mov
(bad)
push
gs
dec
sub
arpl
adc
stc
fxch
pop
fldenv
bound
out
(bad)
jmp
pushf
int3
push
pop
mov
jge
ins
inc
jmp
push
test
aas
xor
dec
stos
addr16
test
and
adc
dec
inc
jl
inc
add
mov
mov
es
jl
inc
jno
ffreep
push
mov
adc
jae
aad
vmovupd
mov
mov
repnz
xchg
dec
push
pop
add
aas
jno
add
in
fld
fisttp
sbb
jmp
fstp
sti
test
dec
and
addr16
mov
or
mov
xor
mov
lods
xchg
daa
outs
jae
ds
call
in
and
mov
gs
not
jns
test
dec
rdpmc
add
sub
push
fwait
(bad)
stos
out
jb
nop
or
sbb
cmp
aad
loop
pop
int3
mov
adc
test
jns
arpl
jae
jo
mov
mov
xchg
jnp
xchg
push
dec
jmp
push
movs
adc
pop
jnp
adc
inc
cwde
in
jge
mov
push
fwait
sbb
push
mul
xchg
dec
xchg
mov
push
stc
push
push
pop
fbld
sbb
stos
outs
mov
mov
test
data16
mov
mov
mov
add
mov
cmp
push
je
pop
xchg
push
fstp
mov
jo
pop
mov
pop
call
xchg
in
outs
out
push
xchg
mov
in
and
mov
add
sub
add
data16
fcom
dec
pushf
fdiv
xor
ins
(bad)
or
cmp
gs
test
addr16
lods
inc
jae
lods
mov
and
ret
xor
add
add
or
or
fwait
xor
xor
ins
sbb
dec
xchg
(bad)
pop
(bad)
mov
nop
cmps
xchg
(bad)
in
mov
cwde
arpl
jb
mov
les
cmp
sbb
fs
mov
ins
push
shr
test
sbb
mov
or
or
mov
cmp
jns
es
dec
or
outs
sti
sub
or
outs
in
mov
pop
adc
inc
(bad)
push
imul
mov
movs
add
int
gs
cmp
scas
pop
mov
xchg
or
ret
inc
into
xchg
sub
mov
rcl
sbb
in
adc
dec
mov
cs
inc
call
(bad)
ret
movs
retf
xchg
xchg
ror
or
ds
popa
neg
push
lds
imul
inc
sub
int
push
loope
xchg
daa
cmps
mov
sub
ins
and
lock
fimul
call
or
cmp
ret
mov
pushf
stos
add
outs
sbb
add
(bad)
out
xchg
mov
add
lods
mov
xor
(bad)
cli
call
movs
jno
push
jl
inc
and
fbld
inc
mov
mov
sub
dec
sahf
js
inc
xchg
or
cmps
push
or
outs
outs
inc
and
std
pop
add
test
xlat
xchg
or
mov
push
inc
and
mov
jnp
pop
stc
dec
fld
dec
pop
sub
repnz
add
inc
add
dec
dec
inc
push
adc
adc
setb
pusha
shl
jne
scas
test
sub
hlt
sub
add
test
adc
nop
and
or
adc
movs
test
stos
sub
adc
add
or
cs
add
leave
dec
ror
add
jno
or
sbb
jmp
jmp
adc
ret
(bad)
sub
ins
fld
out
stos
or
(bad)
icebp
rol
or
sbb
sbb
loopne
lods
cmp
mov
ret
test
adc
mov
jno
adc
fcom
nop
mov
xchg
jno
and
in
pushf
and
pop
out
fcmovnb
sub
aad
nop
aad
push
enter
adc
lea
mov
in
stos
call
sbb
push
(bad)
jb
hlt
inc
loop
xchg
dec
sub
jge
outs
imul
adc
sti
test
adc
inc
inc
in
or
add
fistp
xchg
and
aad
cmps
stos
sbb
dec
lock
and
push
jecxz
xor
add
inc
add
movs
pop
pop
imul
pop
add
and
xchg
adc
mov
mov
in
inc
pop
push
mov
add
call
adc
jnp
cmp
and
or
sahf
xchg
adc
jne
fs
test
and
push
cmp
jb
(bad)
(bad)
ins
ins
jne
push
mov
jns
jl
shl
adc
push
xchg
inc
adc
and
adc
dec
add
mov
ror
inc
rol
adc
jno
add
and
push
in
xchg
pop
retf
or
mov
dec
mov
lea
test
push
push
xchg
adc
xchg
sbb
(bad)
jne
or
popa
outs
mov
sub
cld
rcl
add
sub
jno
cwde
xchg
push
or
push
out
jne
rcl
inc
push
mov
movs
lock
sbb
call
lea
rol
ds
(bad)
popa
cli
and
ins
adc
xchg
xchg
and
xchg
in
repnz
mov
leave
sub
lods
xchg
pop
jne
xor
repnz
pop
loop
icebp
or
xchg
movs
push
and
(bad)
ret
pop
sub
dec
outs
jecxz
es
dec
test
cmp
add
test
add
test
add
and
add
inc
adc
adc
dec
jae
inc
in
adc
pop
enter
inc
loopne
lods
icebp
retf
pop
xchg
push
bound
add
test
pop
mov
int
push
sub
xor
mov
cmps
pop
shl
gs
loope
mov
push
arpl
(bad)
sub
mov
icebp
mov
dec
je
sbb
mov
dec
jbe
fwait
add
iret
inc
retf
jecxz
outs
out
push
dec
movs
jp
pusha
scas
xchg
mov
xor
xor
sbb
inc
xchg
push
sbb
pop
rcr
push
fist
push
dec
or
mov
jecxz
jmp
inc
rcr
aas
sub
inc
rcr
fs
repnz
add
dec
(bad)
cmp
sbb
test
(bad)
xchg
mov
imul
push
ins
ja
xchg
(bad)
out
push
test
test
lods
xchg
popf
xchg
jle
scas
test
push
in
mov
ins
lock
adc
jae
cs
add
push
jo
fld
cmp
fsub
inc
cld
and
rcl
test
mov
adc
and
inc
adc
pop
cmp
xchg
and
movs
mov
aad
mov
(bad)
and
lods
jbe
xchg
test
loopne
je
test
mov
lods
ror
mov
in
or
in
inc
(bad)
mov
inc
pop
call
pop
add
push
pop
leave
jge
in
leave
xor
sbb
dec
sbb
sbb
icebp
dec
xchg
pop
addr16
push
iret
rcr
in
fistp
pop
mov
aad
push
mov
sar
dec
push
mov
(bad)
outs
ins
movs
sahf
lds
jle
call
mov
clc
cs
jae
scas
xor
add
jmp
cld
fnstenv
repnz
mov
dec
mov
inc
out
pop
and
jl
dec
sahf
sti
push
shr
aad
inc
ret
adc
retf
in
jno
and
jg
mov
mov
inc
bnd
out
stc
pop
(bad)
adc
je
adc
call
fsub
and
popa
mov
into
clc
mov
enter
xor
sar
out
shr
arpl
mov
jl
sbb
pusha
xchg
pop
add
dec
or
(bad)
das
xchg
cld
mov
sbb
mov
in
xchg
mov
sbb
pop
sbb
push
and
iret
mov
pop
mov
xchg
shl
lahf
test
data16
jmp
cmp
inc
sub
out
mov
xchg
adc
inc
adc
inc
push
adc
adc
movs
nop
xor
popf
jo
and
je
mov
imul
movs
adc
outs
enter
inc
adc
cmp
retf
imul
aad
(bad)
pushf
inc
loopne
jge
sti
and
arpl
dec
(bad)
mov
daa
fidivr
idiv
mov
pop
test
inc
add
in
sbb
jns
jnp
mov
push
rcr
dec
pop
xor
xor
sbb
cmp
cmp
xor
inc
(bad)
fild
xor
xor
test
scas
cmp
xor
daa
nop
mov
pop
or
add
inc
cmp
jbe
push
in
test
sub
xor
js
pusha
dec
add
sbb
repz
das
cmp
adc
fs
ins
hlt
dec
jns
ficomp
sub
mov
dec
repz
out
ds
push
pop
ficomp
pop
lods
cld
cmps
rcl
cmp
mov
pop
(bad)
xor
lods
inc
mov
xchg
dec
inc
add
xchg
jae
or
push
inc
mov
shl
loopne
fwait
sbb
ret
jge
xor
inc
mov
jle
pop
and
add
mov
es
cmps
loop
mov
pop
and
sbb
pop
pop
stc
cmp
mov
loope
lock
inc
xchg
xor
fldenv
call
call
int
push
adc
jnp
lds
ins
retf
sbb
retf
mov
dec
daa
push
(bad)
adc
mov
nop
push
or
mov
mov
inc
and
call
mov
test
push
inc
add
fsubr
aam
movs
xchg
sbb
hlt
dec
cmps
xchg
add
test
adc
pusha
add
or
add
xchg
push
push
dec
add
jge
jno
mov
sub
sbb
test
xchg
or
xor
jle
xchg
leave
sbb
aaa
mov
mov
inc
stos
sbb
mov
mov
sub
rcr
leave
retf
xor
xchg
sti
xor
sbb
sahf
jge
sbb
jbe
(bad)
and
adc
enter
addr16
push
cmc
sti
mov
(bad)
jae
ret
cmp
sbb
push
pop
daa
pop
fnstcw
daa
inc
sar
and
pop
call
aad
and
mov
out
or
lods
js
jg
adc
aam
mov
fcomp
gs
push
pop
sbb
movs
test
lods
add
popf
pop
xor
mov
ret
enter
cmp
jmp
sub
cmp
pusha
mov
stos
nop
addr16
inc
cmp
popf
rcr
add
call
int3
adc
and
pop
fcom
std
jmp
scas
lahf
mov
mov
xor
mov
in
mov
xchg
sahf
loop
push
pop
aam
cdq
and
jge
(bad)
(bad)
inc
and
xor
dec
pushf
dec
in
ficomp
in
lds
daa
pop
pop
mov
inc
pop
sub
mov
aas
or
add
test
adc
adc
push
ret
xchg
sub
or
push
inc
xchg
stos
out
adc
popa
ja
daa
add
sub
lea
dec
add
adc
add
inc
adc
or
add
or
inc
popa
mov
nop
and
movs
rcl
int
adc
jne
xor
mov
cmp
mov
mov
inc
add
test
add
or
push
not
add
inc
adc
test
xchg
adc
inc
sub
mov
add
add
push
fsub
lock
xchg
pop
repz
call
xlat
fs
sbb
xchg
pusha
ja
mov
dec
dec
xor
sub
jae
and
fwait
loope
or
frstor
add
or
pop
push
cmp
and
or
daa
mov
cmp
adc
or
ja
push
lahf
or
mov
xlat
push
mov
shr
mov
movs
mov
nop
jno
add
lock
jnp
cmp
inc
add
mov
push
and
adc
add
jmp
xor
call
xor
and
inc
arpl
or
js
mov
stos
iret
and
scas
add
push
mov
mov
pop
sbb
pop
test
mov
and
or
lock
cmp
inc
and
mov
and
arpl
adc
and
sbb
inc
add
rol
adc
or
ret
push
gs
inc
and
xor
loope
cmp
retf
mov
add
push
dec
sbb
loopne
test
es
push
test
and
inc
sbb
test
arpl
jbe
xor
mov
movs
or
inc
aam
mov
dec
dec
and
adc
and
add
or
push
lahf
mov
adc
cmp
dec
xor
sbb
and
adc
call
pop
xchg
add
in
ins
pop
sbb
fistp
pop
test
cmp
popa
cmp
push
out
add
mov
dec
loopne
lods
int3
retf
lahf
in
imul
pop
fld
icebp
push
in
and
adc
xor
jmp
xchg
mov
idiv
jg
retf
aaa
jo
es
in
outs
div
rcr
mov
xchg
in
fucomp
pcmpeqw
jns
fidivr
das
jns
mov
add
adc
adc
(bad)
dec
loopne
mov
push
mov
sub
int
bound
and
icebp
dec
mov
add
add
test
add
test
add
test
add
movs
add
and
inc
jmp
int3
mov
pop
jge
movs
push
jne
jne
xlat
movs
shl
inc
out
xor
int
dec
scas
pop
es
mov
push
scas
nop
pop
test
repz
addr16
fwait
mov
(bad)
cmp
fdivr
jl
jle
or
sbb
push
mov
loope
xchg
mov
or
pop
in
mov
arpl
loope
sub
cmp
pop
mov
jne
add
in
cs
xchg
xor
jge
in
fwait
inc
jbe
dec
je
scas
cmp
loope
loope
popf
fisttp
js
or
xchg
aaa
cdq
mov
loop
shl
adc
movs
(bad)
in
jp
lahf
xchg
adc
(bad)
add
cld
int3
sub
jne
pop
push
mov
dec
call
sbb
call
jo
dec
push
pop
outs
out
xor
fnsave
cmp
fdivr
and
test
sub
dec
adc
js
inc
and
fldenv
(bad)
cmp
jb
and
das
add
and
daa
push
inc
ins
sub
or
push
add
enter
movs
and
movs
sete
jo
jmp
adc
int
(bad)
or
sbb
sub
or
dec
lahf
shl
sub
dec
jp
inc
fstp
adc
dec
add
xor
cld
sub
lods
test
loopne
fistp
mov
sbb
out
shr
jecxz
sub
add
and
mov
jp
mov
sub
and
pushf
sbb
push
stos
sti
scas
imul
inc
mov
dec
mov
add
ins
pop
shl
sahf
mov
mov
adc
add
mov
and
test
adc
test
test
test
lods
ror
cmp
sbb
dec
and
and
je
sub
adc
sbb
add
xchg
cmps
inc
and
in
rol
mov
inc
addr16
sub
xchg
mov
sti
add
inc
shr
(bad)
fsub
mov
aam
loope
mov
jns
rcl
xor
add
cwde
cli
repz
jge
fwait
mov
jle
fcom
jns
sub
push
xchg
(bad)
mov
data16
lock
and
adc
lea
sbb
jmp
retf
out
cmp
and
push
jecxz
retf
es
cmp
mov
add
dec
mov
cdq
mov
shr
out
into
fstp
cmp
out
xor
push
cmp
push
es
dec
adc
cmp
sub
leave
xor
and
jns
jae
sub
js
adc
push
mov
and
test
push
or
add
push
inc
or
cmc
sbb
xchg
mov
ins
pop
inc
into
mov
inc
mov
ret
daa
dec
and
call
pop
sub
or
push
test
popa
push
xchg
pusha
pop
inc
or
inc
xchg
movs
sbb
mov
mov
pop
inc
add
rcl
push
push
sub
out
mov
jne
xchg
or
adc
or
es
int
jmp
jb
xchg
out
sbb
mov
and
imul
adc
add
sub
xchg
and
or
aas
sub
inc
xchg
sub
inc
neg
sbb
fcom
imul
mov
test
and
cmc
outs
lods
lahf
out
mov
adc
clc
scas
test
leave
aam
add
jno
pop
and
jns
cli
add
test
pop
mov
inc
loope
mov
popf
or
xchg
sub
jmp
icebp
idiv
in
nop
push
add
and
mov
push
ret
pop
int
pop
jne
sbb
mov
aad
sub
sub
sub
push
dec
or
test
dec
sub
push
sbb
and
mov
sub
add
mov
mov
retf
in
inc
sub
push
sub
stos
fnsave
ficomp
je
fsub
push
(bad)
sbb
cmp
dec
sbb
lds
adc
inc
adc
sub
mov
and
add
or
or
or
or
or
or
or
or
or
call
aaa
mov
cmps
sbb
inc
inc
pop
dec
xchg
add
test
imul
mov
scas
mov
test
fsubr
outs
mov
adc
sbb
or
inc
push
(bad)
fbld
push
mov
es
add
xchg
leave
add
xchg
sub
jmp
push
mov
ins
mov
xchg
mov
xor
shl
inc
and
pop
xlat
cli
push
pusha
pop
enter
push
mov
jbe
add
in
dec
inc
pop
fcmovnu
fstp
popf
mov
mov
cs
cmps
lea
push
push
repnz
scas
cmp
sbb
loope
mov
inc
adc
or
sbb
adc
fiadd
repz
dec
outs
pop
xchg
fdivr
inc
jbe
lods
jno
add
mov
cmp
fsub
je
xor
xlat
pop
adc
cld
add
(bad)
sbb
fcmovne
add
cmps
pop
add
pop
mov
jno
jmp
push
cdq
pop
shl
adc
movs
(bad)
je
pop
test
and
inc
xchg
jmp
inc
shl
lds
test
or
mov
and
sub
add
test
rol
stos
adc
sub
mov
adc
call
inc
add
xchg
sub
or
push
icebp
mov
fwait
dec
mov
mov
mov
pop
dec
ds
add
add
adc
mov
or
inc
jmp
leave
add
cld
fnstsw
loope
test
push
xchg
ds
and
mov
add
push
ins
ja
push
loop
or
imul
mov
ffree
lock
mov
(bad)
mov
pop
and
push
ins
test
ror
or
inc
nop
and
stos
or
nop
aaa
push
mov
out
or
ror
add
sbb
jae
popa
add
cld
pop
cld
lods
movs
xchg
ins
fwait
inc
jne
adc
add
add
xor
and
jns
test
adc
test
adc
mov
arpl
lds
and
gs
enter
in
retf
hlt
fbstp
sub
and
mov
scas
jmp
sub
rol
xor
out
xchg
adc
push
and
js
scas
in
mov
or
mov
test
and
neg
mov
mov
push
push
dec
fstp
or
or
enter
retf
mov
mov
mov
cmp
loop
div
loop
fild
mov
mov
lea
fiadd
lea
lahf
push
ror
cli
sub
repnz
popa
adc
xchg
fmul
xchg
adc
fild
fsubr
push
in
pop
pop
test
jnp
jmp
movs
lods
and
sahf
pusha
cwde
mov
pop
mov
fist
adc
dec
cmp
lea
sahf
mov
ins
test
push
cs
fwait
cmc
and
ds
add
fsubrp
or
cmc
xchg
lods
aaa
jne
mov
pop
out
retf
jae
mov
xlat
sub
xchg
adc
test
and
sub
sti
mov
push
mov
add
and
test
or
cmp
test
add
mov
test
adc
je
push
jge
jns
push
or
add
mov
mov
sbb
push
fistp
inc
or
jne
jo
push
sub
add
in
sub
jne
jmp
inc
pop
mov
or
push
and
mov
adc
adc
inc
adc
jge
dec
test
sbb
or
push
fld
mov
sbb
add
cmp
dec
mov
add
sub
and
jmp
pop
test
mov
sbb
sub
fiadd
adc
fidiv
sub
(bad)
pop
add
xor
cmps
xchg
in
mov
dec
adc
ins
lods
popa
mov
jnp
sbb
add
sbb
mov
retf
arpl
pop
daa
scas
or
pop
leave
out
iret
pop
(bad)
sub
imul
test
xchg
ficom
out
push
rcl
sbb
or
rcl
mov
sub
iret
mov
jne
dec
jo
call
and
inc
test
test
adc
add
je
in
add
out
nop
adc
add
add
or
xchg
sub
adc
jo
pop
inc
cwde
daa
mov
sub
dec
sub
cmps
inc
add
nop
test
xchg
imul
sbb
retf
lods
add
je
xor
inc
xor
inc
fadd
jl
outs
imul
imul
lahf
and
in
add
(bad)
pop
mov
(bad)
inc
leave
xchg
lea
pop
push
jae
sbb
aad
mov
xchg
xchg
icebp
xor
adc
mov
jbe
mov
retf
leave
xchg
test
dec
repnz
xor
enter
mov
pop
lods
push
xchg
lea
(bad)
imul
cmp
sub
push
mov
(bad)
sti
and
mov
add
add
pusha
xchg
shl
test
adc
test
pop
sub
inc
push
test
and
fwait
mov
inc
push
add
dec
inc
and
inc
and
rol
call
and
inc
and
inc
and
inc
and
inc
and
add
or
add
inc
add
inc
inc
and
xchg
and
mov
dec
in
xchg
push
mov
add
retf
cmp
popf
adc
movs
and
les
and
arpl
shr
cmp
aad
and
xchg
mov
inc
and
or
and
ja
sahf
mov
(bad)
outs
cmp
adc
push
sbb
test
xor
sbb
xlat
dec
jmp
repz
imul
cli
arpl
jne
mov
ins
mov
sub
imul
daa
popa
mov
xchg
or
fsub
lds
test
movs
lods
adc
aad
lods
lea
aas
adc
rcr
xor
xor
jne
jbe
or
popf
xor
(bad)
mov
jmp
jno
mov
dec
sub
xchg
adc
dec
add
jnp
push
sahf
test
mov
dec
outs
cmp
test
cmp
add
sub
jne
jbe
dec
ins
test
and
cmc
push
sti
and
adc
(bad)
cmc
dec
adc
adc
mov
sar
jmp
and
pushf
movs
push
dec
int
aam
das
test
adc
and
xor
sbb
scas
sub
mov
adc
and
nop
ds
add
add
test
sbb
add
mov
retf
sub
rcl
add
out
pop
push
ins
push
jp
pop
loopne
pop
and
aad
mov
int
nop
fisubr
aam
ret
mov
sbb
add
outs
mov
cmp
fcmovbe
pop
add
int3
jns
imul
jmp
dec
imul
or
xor
test
adc
sbb
in
repnz
fsubp
pusha
jnp
or
and
adc
jno
inc
nop
add
inc
adc
adc
adc
cdq
jl
dec
enter
rcl
imul
cmc
sbb
add
inc
gs
adc
mov
shl
sub
pop
mov
push
mov
mov
mov
sub
ret
cdq
icebp
fadd
cmp
aaa
inc
not
out
aas
gs
xchg
imul
hlt
fstp
or
xchg
xlat
jle
sbb
sub
xlat
aam
jno
popf
cli
jb
shufps
push
pop
and
lea
aam
mov
cmp
adc
jns
js
inc
sbb
sub
sub
push
out
sbb
cmp
push
xor
jae
or
and
fwait
mov
mov
push
xchg
(bad)
pop
jns
mov
xchg
and
push
push
aam
fwait
loope
or
(bad)
jle
pop
pusha
out
stos
movs
and
loope
mov
fs
retf
pop
inc
mov
not
jge
or
outs
adc
adc
rcr
fs
and
xchg
std
inc
jo
ss
cdq
adc
in
jmp
or
pop
or
movs
cmps
nop
xchg
or
stos
pop
lds
mov
inc
in
xor
ds
ds
mov
test
sbb
sub
and
cmp
pushf
xchg
adc
std
inc
scas
pusha
xchg
xchg
xchg
sahf
ror
not
sub
out
(bad)
mov
cmp
inc
mov
pop
or
inc
add
jp
push
inc
mov
jl
push
xchg
dec
sbb
or
add
inc
sub
add
inc
adc
adc
pop
dec
test
movs
sbb
add
dec
test
and
dec
sub
dec
or
push
and
cmp
xchg
adc
lea
fmul
inc
dec
mov
fiadd
xor
jge
jle
popf
dec
or
push
adc
retf
jo
pop
retf
add
push
cmp
and
imul
and
fcomi
aad
int3
jo
loopne
add
scas
xchg
loopne
call
mov
retf
(bad)
or
fcmovnb
mov
adc
xchg
sar
and
jae
sub
(bad)
(bad)
gs
idiv
add
xchg
loopne
xchg
pop
cmps
inc
repnz
fiadd
jecxz
mov
test
lahf
adc
shl
cmp
in
xchg
push
jno
nop
mov
or
or
xor
arpl
loope
(bad)
imul
movs
shl
push
cs
or
dec
test
add
pop
aam
and
cmp
je
and
cdq
sbb
push
xor
and
add
sub
nop
push
push
or
dec
mov
mov
outs
test
cmp
adc
dec
inc
test
hlt
cld
sub
sub
mov
add
xchg
nop
cmp
add
cmp
popf
and
add
adc
pop
sub
rol
popa
sbb
fist
dec
inc
or
cdq
stos
hlt
fnstsw
inc
adc
inc
adc
inc
sub
test
add
fwait
inc
and
test
fs
frstor
sub
cmp
and
sub
and
push
inc
push
call
push
leave
and
test
adc
adc
sbb
fimul
push
dec
add
inc
sti
and
test
add
nop
test
fwait
and
imul
add
dec
cmp
add
add
inc
add
popa
push
xchg
adc
loope
xchg
popa
add
add
iret
inc
adc
dec
arpl
retf
jae
jmp
add
ins
hlt
push
ret
dec
add
sbb
sub
outs
daa
jge
fstp
xchg
movs
out
sbb
arpl
pop
fwait
push
(bad)
push
xchg
inc
lea
jnp
xor
pop
and
js
int3
xchg
push
xor
jae
add
dec
jle
int3
mov
inc
aas
stc
pop
neg
push
leave
aam
fistp
std
add
lea
or
retf
xchg
or
out
sbb
(bad)
push
mov
pop
dec
stos
mov
(bad)
push
add
pop
xchg
add
cli
not
iret
or
xchg
test
inc
call
inc
add
xchg
and
cwde
push
cwde
sbb
dec
fisub
add
dec
add
cmp
mov
movs
ficomp
add
and
inc
xor
cmp
cmp
(bad)
adc
and
dec
adc
and
sub
ret
retf
sbb
in
push
inc
xchg
mov
sub
arpl
cmp
dec
ror
inc
adc
test
push
clc
inc
aaa
ficom
sar
and
lahf
nop
mov
pop
dec
inc
adc
adc
push
sbb
inc
and
and
or
cmp
or
fiadd
in
sub
adc
add
int
xchg
inc
hlt
sub
jp
sbb
out
pop
jne
scas
fsubr
in
sti
and
push
mov
pop
je
fisubr
adc
push
fld
inc
cmp
push
add
test
jge
hlt
inc
icebp
retf
pop
jnp
jmp
dec
or
inc
dec
or
or
or
or
loope
inc
add
inc
add
inc
add
inc
add
inc
or
adc
jecxz
hlt
dec
mov
mov
sar
ja
adc
sub
or
mov
mov
jge
outs
fidivr
shl
mov
imul
push
fwait
sub
sub
mov
ret
test
inc
(bad)
int
outs
gs
bound
jge
addr16
cmp
stos
arpl
jbe
fldenv
arpl
xchg
in
add
stos
cmps
(bad)
(bad)
cmp
sub
(bad)
push
fimul
loop
iret
js
xchg
sar
xlat
enter
or
and
shl
and
mov
(bad)
in
hlt
mov
scas
pushf
fdiv
enter
mov
xlat
test
mov
push
xor
(bad)
xchg
xchg
sahf
ss
sub
mov
lods
mov
or
ds
arpl
ins
arpl
shl
lds
rol
arpl
add
or
jae
cmp
iret
imul
inc
out
aas
fnstcw
div
jl
scas
sub
mov
mov
or
arpl
xor
movs
push
sbb
and
mov
jecxz
ret
sub
jae
idiv
xchg
pop
inc
lock
call
pop
outs
fwait
push
seto
mov
in
jmp
out
xchg
push
dec
dec
movs
add
mov
xor
adc
pop
dec
push
dec
mov
sbb
adc
daa
lock
shr
sub
pop
or
mov
fst
stos
mov
(bad)
sub
in
iret
inc
push
and
shl
mov
sub
inc
sbb
push
push
leave
push
int
pushf
frstor
retf
dec
out
not
and
sub
inc
add
add
inc
adc
test
add
or
or
and
je
call
xor
and
mov
nop
and
sub
rcl
pop
rcl
xchg
ror
jge
inc
adc
mov
add
ds
out
jno
mov
ja
dec
pop
pop
iret
fs
ret
cmp
push
sub
cmp
cmp
mov
fstp
push
or
mov
push
bound
sbb
push
jo
retf
dec
jl
dec
call
fcomp
(bad)
push
pop
test
mov
xchg
add
je
jg
inc
and
xlat
jo
sti
stos
sbb
dec
mov
push
mov
mov
mov
add
push
xchg
pop
paddd
mov
nop
mov
sub
pop
pop
outs
add
xor
add
fisub
into
sbb
mov
jbe
in
adc
test
push
or
push
and
stos
dec
lds
cmp
jae
adc
out
push
mov
inc
popa
mov
lods
mov
sbb
fcom
inc
inc
xchg
pop
fimul
stos
out
mov
sbb
imul
add
out
(bad)
les
aas
jne
stos
pop
(bad)
pop
in
pop
push
daa
loope
sub
movs
add
add
push
pop
mov
cmp
add
inc
stc
dec
push
enter
inc
ret
test
sub
jl
nop
daa
add
push
shl
pop
je
jo
sbb
add
mov
mov
stc
sbb
test
je
mov
or
shr
adc
inc
mov
std
in
aaa
fdiv
add
test
add
dec
movs
and
or
sbb
sbb
cmps
add
ss
add
aas
mov
lock
je
or
push
inc
fs
stc
outs
scas
sub
std
out
mov
pop
push
ret
nop
dec
addr16
xchg
jno
sbb
jmp
adc
inc
pusha
jnp
adc
xlat
and
test
adc
test
push
jle
dec
out
test
add
dec
sbb
out
retf
lock
sahf
or
push
push
mov
add
add
sub
retf
lea
xor
push
and
mov
push
add
loopne
xchg
adc
adc
and
add
or
add
add
inc
add
js
and
sub
inc
and
nop
mov
or
or
mov
ins
nop
push
push
or
or
push
push
sub
shl
add
sar
pusha
jnp
aam
clc
mov
mov
(bad)
cmp
cmp
loope
clc
inc
jno
jnp
je
inc
out
mov
lods
push
outs
ffree
rcr
mov
inc
movs
push
adc
xchg
retf
in
cmps
call
dec
sub
hlt
mov
cmp
ret
pop
add
(bad)
fsubr
repnz
sbb
pop
adc
inc
test
mov
mov
loop
iret
xchg
or
lods
jno
stos
mov
xchg
or
mov
enter
jbe
or
adc
sub
ins
fimul
adc
push
adc
iret
sub
inc
in
inc
mov
pop
mov
iret
inc
cs
call
push
jmp
and
cmp
shl
mov
mov
rol
inc
dec
mov
and
adc
add
and
or
xor
mov
and
push
adc
adc
pop
cmp
inc
pop
je
mov
movs
test
mov
imul
mov
dec
out
xchg
add
inc
add
das
stos
dec
sbb
or
dec
dec
mov
mov
jmp
mov
out
ss
jnp
pop
push
adc
add
sub
movs
les
adc
cmc
mov
mov
push
gs
or
jp
jl
push
and
xchg
add
inc
add
ja
fsubr
(bad)
shl
test
add
and
test
adc
mov
or
or
sbb
inc
and
inc
push
mov
add
retf
or
adc
sar
in
in
sub
cmp
and
add
movs
sub
add
jnp
jo
pop
mov
add
push
jno
xor
fbstp
xchg
sbb
mov
aad
idiv
fsubr
test
sbb
mov
dec
sbb
iret
inc
push
inc
xchg
sbb
push
out
mov
or
into
xchg
outs
jae
scas
(bad)
enter
js
in
fiadd
std
nop
fadd
scas
push
inc
outs
adc
(bad)
out
jecxz
das
push
or
xchg
add
cmc
in
add
adc
aaa
mov
cmp
nop
mov
jo
aad
dec
inc
and
aad
mov
test
repnz
std
xor
adc
or
mov
fwait
outs
imul
sbb
int
fwait
and
cmp
ss
inc
inc
pop
inc
out
mov
sub
mov
fiadd
repnz
push
fwait
jl
fs
out
jbe
push
ja
ss
(bad)
cmp
xor
push
ficom
stos
add
inc
xchg
ins
push
sub
push
std
nop
inc
cmp
add
xchg
mov
mov
and
or
outs
repnz
enter
not
mov
lods
ja
cmp
out
cmp
inc
mov
push
leave
and
test
enter
dec
rol
fs
xor
push
dec
sbb
pusha
add
aam
lds
push
push
in
adc
mov
cmp
and
xchg
pop
mov
mov
add
adc
test
adc
test
nop
or
add
test
add
daa
imul
mov
push
or
jmp
aad
enter
inc
hlt
mov
or
mov
(bad)
sbb
mov
add
aam
sub
fld
add
add
sahf
outs
stos
rcl
sub
xchg
inc
aaa
push
cwde
sbb
xor
and
inc
inc
or
sub
inc
ja
push
pop
jl
xchg
cmp
ins
push
out
iret
and
sbb
sbb
inc
hlt
mov
mov
iret
imul
pop
fucom
stc
dec
pusha
(bad)
imul
cmp
adc
gs
mov
lods
clc
mov
ror
pop
push
push
shl
rol
int3
rcr
(bad)
ffree
fnsave
cs
push
cld
xchg
add
dec
les
and
jb
stc
les
aam
xchg
push
call
pop
pop
ret
and
push
xchg
adc
frstor
inc
and
pop
mov
or
retf
fst
int
xchg
inc
not
ins
repnz
inc
test
sub
adc
inc
adc
dec
and
jmp
ds
and
mov
add
mov
jecxz
add
adc
add
add
pop
rcr
and
adc
retf
xchg
mov
inc
add
movs
push
test
inc
ins
xor
adc
test
arpl
mov
add
fwait
and
or
popf
and
adc
inc
adc
and
inc
and
inc
and
inc
and
loope
jbe
cmp
popa
add
add
mov
or
or
add
test
mov
or
fdiv
jmp
and
push
in
and
jne
mov
pop
je
adc
and
test
add
imul
add
dec
mov
or
dec
jg
not
jmp
inc
and
adc
nop
mov
ror
add
fwait
push
call
in
mov
lods
add
pop
movs
pop
xchg
sub
arpl
add
mov
movs
cwde
int3
std
in
dec
mov
(bad)
dec
sbb
dec
sbb
mov
inc
xchg
add
test
sbb
sbb
loopne
iret
xchg
pop
xchg
add
mov
inc
ror
mov
daa
sbb
inc
fwait
pushf
fistp
scas
push
adc
sbb
mov
xor
xor
mov
mov
mov
cdq
add
mov
jecxz
sti
and
loopne
or
loope
fcmovnbe
inc
pmuludq
pop
icebp
mov
hlt
(bad)
lock
and
xchg
nop
fistp
push
retf
sar
jl
leave
and
inc
jg
adc
ins
lahf
xchg
mov
inc
sti
sub
cmp
add
add
push
movs
and
or
test
pop
stos
inc
push
call
add
push
loopne
cmp
pop
add
cmps
or
cmc
inc
mov
or
ret
pop
sub
adc
rcl
push
not
push
loope
nop
daa
jo
in
jmp
sub
movs
(bad)
sub
mov
mov
push
xor
or
adc
sbb
int
xor
add
adc
or
cmp
push
jl
or
mov
mov
or
test
mov
daa
arpl
sar
adc
inc
and
mov
dec
sar
je
push
movs
sub
imul
push
cmp
outs
jo
inc
add
ins
test
sub
add
fadd
inc
mov
push
adc
push
dec
or
push
mov
dec
inc
mov
pop
push
adc
inc
adc
inc
adc
add
mov
and
add
or
or
and
test
or
cmp
adc
adc
adc
mov
ins
jbe
pop
pop
push
ret
imul
sbb
push
test
mov
loop
mov
jg
shl
pop
xchg
xchg
cmp
jae
mov
jns
push
sahf
stos
mov
jge
ja
mov
sti
movs
fs
adc
xor
in
dec
cmps
push
xchg
jge
pop
dec
fsub
pop
repz
jno
cmp
cmps
xor
cli
jnp
movs
jno
push
add
aas
scas
loop
pop
aas
mov
inc
mov
fimul
in
cmp
xchg
test
or
jl
test
xchg
(bad)
dec
mov
mov
fbld
stos
and
push
and
adc
stos
dec
test
imul
test
dec
inc
cdq
imul
and
mov
add
int
adc
push
jns
jecxz
jecxz
scas
mov
aaa
add
push
jo
add
jmp
ret
(bad)
sbb
fcmovnb
pusha
push
or
sbb
jle
cmp
mov
mov
mov
sbb
dec
add
jecxz
pusha
inc
push
fwait
mov
outs
adc
inc
and
adc
and
or
or
or
or
or
mov
add
inc
adc
adc
adc
inc
cmp
and
inc
adc
dec
xor
add
xchg
sar
shr
xchg
ins
pop
in
(bad)
ins
loop
dec
aaa
nop
push
iret
mov
mov
imul
adc
in
movs
je
daa
imul
sbb
dec
(bad)
mov
jno
and
into
ds
adc
pop
push
jns
je
cs
push
cmp
mov
nop
into
fbstp
jge
hlt
fnstsw
mov
push
mov
jbe
test
aad
add
jae
push
out
pop
scas
mov
pop
iret
ins
outs
jge
test
mov
cwde
fst
jnp
pop
cmp
jae
xor
push
loop
mov
inc
mov
stos
mov
mov
lods
adc
ret
sar
push
fwait
adc
cdq
in
enter
addr16
ret
mov
inc
syscall
mov
xor
sahf
cmp
outs
scas
xor
xor
sub
movs
lods
push
dec
shr
out
fist
and
(bad)
mov
addr16
ins
inc
sub
push
loope
inc
aaa
aam
sti
movs
in
setno
jae
fsubp
push
dec
ss
aam
pop
pop
mov
outs
jno
fdivr
(bad)
aas
or
scas
and
inc
aad
cmp
add
pop
dec
and
jne
inc
rol
ds
and
add
add
fimul
dec
popa
and
test
dec
and
push
xlat
inc
adc
xor
mov
push
pop
push
in
and
dec
pop
xor
stos
pop
fld
jo
mov
daa
sti
mov
sbb
and
repnz
mov
sub
or
sub
push
dec
push
mov
call
jne
test
outs
ss
inc
mov
dec
add
inc
sub
adc
cwde
push
lods
push
adc
into
cmp
add
pop
mov
movs
cmp
add
dec
ja
xchg
adc
inc
and
inc
and
inc
and
inc
and
inc
sbb
xor
leave
push
adc
xchg
pushf
outs
xchg
or
inc
add
inc
add
inc
push
pop
loopne
and
fcomp
pop
dec
sbb
add
push
out
sub
add
rcl
add
and
test
adc
(bad)
into
jns
inc
je
jg
(bad)
push
gs
mov
or
pop
pop
cmp
or
mov
out
lea
cmp
sub
cmp
dec
mov
sbb
add
cmp
mov
mov
xchg
push
movs
add
cmp
sbb
imul
cli
xchg
arpl
mov
dec
out
ret
fadd
cmp
add
cmp
enter
imul
xlat
out
dec
or
pushf
or
jecxz
lea
cld
mov
sub
(bad)
imul
lods
faddp
cmp
push
stc
xor
sub
add
inc
cmps
adc
xchg
dec
push
scas
adc
cmp
movs
sbb
fld
fs
je
or
xlat
mov
jne
pop
fsub
jae
std
loopne
sbb
sbb
ins
outs
scas
or
test
pop
sar
je
pushf
out
mov
xchg
es
dec
shr
and
dec
sbb
fdivr
sub
and
ins
(bad)
ret
cmps
mov
sbb
in
push
adc
dec
ret
adc
shr
loope
fld
add
or
inc
pop
push
movs
mov
mov
mov
or
inc
popf
add
mov
dec
and
add
push
or
push
add
adc
rcl
push
dec
je
pop
iret
mov
movs
shl
inc
push
ret
iret
push
mov
mov
add
dec
rol
or
and
ins
in
jno
lods
sahf
push
push
inc
ja
ds
and
xchg
push
mov
lock
push
loop
(bad)
pop
movs
add
or
out
in
cmps
jmp
rol
or
or
or
dec
or
mov
outs
aam
sbb
mov
xchg
add
push
inc
and
rol
call
sbb
adc
dec
add
mov
dec
mov
mov
jne
xchg
retf
adc
and
inc
push
adc
mov
add
inc
add
inc
scas
call
and
add
or
dec
and
dec
inc
and
inc
in
and
or
inc
or
xchg
xchg
js
add
fs
arpl
xor
loope
inc
adc
shl
adc
es
sub
aaa
popa
dec
mov
outs
cwde
out
nop
ja
mov
push
cmp
mov
push
push
icebp
popa
iret
xor
call
xor
mov
in
mov
xchg
mov
push
jge
pop
pop
fidivr
jge
test
mov
aad
test
out
scas
call
push
or
repnz
lahf
xchg
jnp
adc
add
inc
and
inc
and
repnz
or
int
retf
and
test
push
gs
push
loop
and
test
push
inc
and
sbb
mov
or
jmp
sbb
loope
int3
ins
cmp
test
pop
pop
push
loop
sbb
in
and
lea
(bad)
out
lds
and
xchg
jg
cs
(bad)
jmp
inc
shl
movs
xchg
test
inc
add
inc
add
inc
add
sub
test
adc
(bad)
mov
mov
dec
xor
daa
adc
push
out
and
in
mov
cmp
jne
pop
cmp
jmp
add
inc
inc
add
inc
add
inc
add
mov
add
or
ins
mov
call
xchg
add
test
nop
cmp
or
(bad)
adc
xor
out
and
out
sbb
pop
pop
movs
in
xchg
sar
aaa
retf
push
(bad)
pop
jno
retf
mov
pop
sar
out
mov
mov
dec
stos
mov
push
pop
repz
(bad)
mov
in
mov
das
stos
jbe
mov
jae
push
retf
mov
mov
adc
mov
nop
stc
inc
cmp
or
sub
dec
mov
cmp
pop
sub
addr16
repz
cmp
fsubrp
mov
add
imul
pop
push
push
cwde
loopne
xor
cld
in
mov
addr16
push
(bad)
enter
inc
push
inc
xchg
in
rcr
add
ret
in
push
pop
sbb
fiadd
push
sbb
ficomp
mov
xor
xor
in
push
dec
and
mov
test
jl
cmps
jmp
out
xor
xor
retf
sbb
dec
sti
jno
cmp
shl
and
jae
dec
mov
mov
xchg
push
jno
shl
xchg
je
jmp
dec
dec
add
and
ds
adc
mov
and
push
ss
or
push
push
push
cmp
call
out
xchg
je
sub
and
test
push
and
and
mov
mov
lock
imul
adc
imul
dec
or
sub
mov
retf
adc
add
es
and
add
inc
add
in
sbb
adc
loopne
mov
or
inc
add
inc
je
adc
and
jecxz
in
fimul
and
(bad)
arpl
fcomp
mov
mov
lods
add
adc
add
add
cmps
arpl
ds
and
adc
dec
add
stc
call
fst
mov
inc
add
inc
add
inc
add
add
add
add
cwde
pop
rol
xchg
(bad)
xor
xchg
imul
add
rcl
call
pop
hlt
cdq
nop
cmp
add
mov
stc
or
and
xchg
leave
mov
xor
add
sub
test
adc
mov
es
sahf
pop
arpl
stos
test
cmp
mov
out
cmp
(bad)
nop
dec
adc
rcr
sbb
ins
nop
movs
inc
sub
mov
add
popa
imul
sahf
push
les
add
xchg
dec
mov
jmp
hlt
add
fsub
xor
loope
mov
mov
inc
push
outs
xor
sbb
xchg
add
(bad)
repz
mov
xor
in
jbe
out
imul
loope
xor
(bad)
adc
mov
clc
mov
inc
fild
test
inc
lea
mov
xchg
pop
sbb
sti
and
add
in
imul
out
sbb
add
sub
mov
out
test
cmp
fsub
fwait
jmp
add
or
mov
add
mov
test
add
mov
adc
adc
not
adc
push
jle
add
fdiv
push
adc
sahf
dec
add
mov
inc
daa
imul
sbb
sti
and
test
sub
gs
enter
push
ret
sub
push
test
push
or
inc
add
out
test
imul
and
inc
push
out
cmp
(bad)
(bad)
or
call
inc
hlt
sti
sti
stos
xchg
inc
add
push
retf
jmp
test
or
mov
dec
adc
or
xchg
call
and
push
leave
xor
in
cs
jbe
xchg
adc
pop
rol
adc
aad
and
cmp
mov
rcl
xchg
fcmovu
movs
add
push
fidiv
push
cmp
cmp
repnz
adc
xchg
add
inc
inc
and
in
add
inc
adc
adc
inc
fsub
out
dec
lods
add
dec
sub
adc
jge
sub
add
or
test
or
bound
add
or
scas
fstp
adc
nop
adc
or
pop
or
pop
cld
pushf
pop
xchg
mov
and
mov
loope
xor
cmp
mov
arpl
or
mov
ret
fsub
sbb
and
les
packssdw
inc
lods
add
adc
mov
add
test
repnz
stos
sub
or
xchg
adc
repz
push
xchg
movs
lock
lea
xor
out
pop
jno
(bad)
push
call
cmc
dec
scas
or
and
pop
in
and
inc
test
sbb
add
dec
imul
dec
retf
and
mov
adc
add
inc
and
inc
rcl
push
push
fld
inc
adc
and
add
or
ds
and
and
jmp
dec
dec
movs
nop
xor
les
or
or
or
or
or
movs
sbb
sub
dec
and
adc
sub
inc
adc
mov
loop
rol
rol
mov
jecxz
add
jg
fdivr
mov
add
xchg
int3
sub
dec
sahf
gs
push
cld
sub
call
jns
shr
xor
jmp
lock
sbb
cdq
sbb
pop
nop
or
jns
add
in
push
stos
iret
ret
or
stos
dec
fiadd
jne
imul
mov
enter
sbb
jbe
not
mov
dec
cmp
std
cs
and
mov
add
das
aas
in
sbb
sub
test
out
cmp
aaa
mov
pop
out
mov
push
psubb
lea
push
sbb
push
out
ds
xor
push
lahf
jle
in
ret
pop
mov
sbb
push
fs
(bad)
push
in
jmp
out
dec
fsubp
loop
xlat
aaa
mov
adc
clc
pop
push
nop
xchg
mov
xchg
or
ja
or
xor
and
aam
or
push
nop
push
call
adc
loop
or
je
cmp
adc
mov
push
inc
ins
mov
sub
mov
dec
repnz
cmp
in
xor
dec
and
es
add
mov
mov
lock
stos
cwde
jb
pop
enter
cmp
cmp
add
jno
and
inc
in
inc
mov
mov
lods
test
adc
and
sub
adc
es
int
arpl
xchg
adc
and
fcmovu
stos
iret
mov
or
add
test
adc
test
adc
mov
out
sub
or
and
mov
or
push
test
nop
pop
push
adc
add
inc
adc
adc
xor
or
or
(bad)
stc
inc
rcr
or
inc
add
inc
add
inc
add
loop
enter
add
pop
inc
push
dec
inc
and
inc
and
inc
and
jmp
stos
adc
inc
push
shl
sub
test
sar
add
pop
(bad)
mov
push
mov
pop
jbe
mov
jno
inc
imul
in
scas
mov
push
out
invd
and
mov
add
or
mov
sbb
jno
jge
xchg
test
call
stos
mov
cmp
xor
push
cmp
mov
push
sbb
ds
pushf
cs
fisttp
aas
or
pop
jge
mov
loop
cmp
lock
jnp
sti
sub
imul
push
stos
adc
dec
mov
sub
adc
cwde
shl
enter
fs
lods
mov
imul
dec
xor
repnz
rcr
inc
jae
enter
add
add
sahf
sub
adc
adc
jg
and
mov
pop
and
test
mov
jb
mov
jnp
push
pop
hlt
sahf
test
arpl
ss
add
call
(bad)
fcmovu
mov
mov
nop
add
inc
adc
and
push
sar
dec
test
es
dec
sub
and
sar
sbb
or
dec
int3
and
add
dec
mov
es
sub
fiadd
mov
aad
xchg
jns
cmp
jecxz
mov
dec
pop
into
fisubr
jecxz
inc
xchg
loop
mov
inc
adc
inc
adc
clc
mov
mov
imul
enter
iret
fwait
xchg
mov
test
cmp
xchg
lea
push
jae
cmp
add
add
inc
adc
test
add
aad
inc
add
inc
add
and
mov
or
push
test
adc
ret
sub
rol
aam
loop
sub
mov
and
lock
andps
fwait
cdq
mov
push
fimul
and
add
or
or
or
or
xchg
push
sub
or
or
jne
add
pop
sbb
or
or
or
or
sub
test
cmp
outs
jnp
or
(bad)
sbb
sbb
mov
int3
push
push
popf
(bad)
cmp
mov
nop
and
add
add
add
test
adc
lods
or
sub
retf
cmp
jns
fwait
and
mov
ins
addr16
rcr
or
stos
mov
push
mov
xchg
arpl
ret
retf
jmp
xor
sub
or
and
cwde
sti
and
xchg
inc
add
inc
mov
test
adc
test
jge
dec
mov
adc
inc
add
add
mov
pop
(bad)
fsubr
sub
or
or
or
add
inc
add
inc
add
or
mov
test
adc
push
nop
or
add
push
lds
push
in
ret
mov
ret
mov
mov
nop
test
xor
es
inc
and
out
pop
dec
ret
test
pop
dec
mov
adc
and
push
mov
mov
(bad)
retf
push
mov
popf
int
and
mov
aaa
cmp
add
adc
in
mov
leave
and
push
add
xchg
mov
push
pusha
imul
jg
add
retf
sub
and
pop
and
add
dec
sub
mov
not
mov
fwait
inc
fs
into
arpl
xor
xor
movs
lock
mov
push
dec
ss
(bad)
xor
shl
shl
dec
repnz
jge
xchg
add
stc
or
clc
pop
sti
sub
xchg
lds
aad
push
pop
dec
imul
pop
and
sub
(bad)
scas
sub
out
outs
in
lea
push
or
test
or
sbb
test
add
adc
and
cwde
ficomp
mov
jp
call
dec
mov
inc
push
and
dec
sbb
test
cmp
add
or
mov
ins
add
mov
cli
cmps
add
and
jne
and
push
popf
and
and
ret
cdq
cmc
push
imul
and
adc
inc
ror
mov
mov
nop
and
add
inc
(bad)
in
xor
or
mov
mov
adc
mov
pop
sub
mov
imul
test
xor
or
mov
retf
mov
shl
sub
ins
fimul
push
aad
xchg
or
cmp
or
or
adc
and
test
test
xchg
sbb
adc
jle
dec
imul
nop
or
push
and
or
or
add
test
adc
test
ds
cmp
out
push
dec
add
push
imul
pop
add
and
add
mov
add
add
or
add
dec
push
add
retf
adc
inc
and
cwde
or
stc
fbstp
push
call
in
(bad)
scas
outs
test
fwait
or
fld
outs
cmc
outs
aas
or
dec
nop
jmp
push
add
dec
cmp
sbb
add
ins
jg
or
or
in
push
xchg
and
mov
add
jge
dec
jae
xor
je
sbb
jne
in
cs
adc
(bad)
pop
fs
gs
test
inc
rcr
jae
pushf
fbld
xchg
out
inc
jge
and
pop
and
fldcw
cmp
cdq
pop
(bad)
push
sub
sahf
xor
sahf
(bad)
emms
adc
(bad)
xchg
iret
stos
arpl
jecxz
or
mov
popf
sub
mov
jle
lods
xor
sub
xor
outs
loopne
inc
pushf
data16
push
ins
fsubrp
cmp
cmc
push
mov
ins
fadd
imul
lods
push
dec
push
fsubr
cmp
add
cmp
sub
or
jae
rcl
sub
push
cmp
and
repnz
movs
sahf
push
enter
daa
inc
out
mov
ror
sub
leave
scas
dec
stos
push
cmp
pop
scas
mov
out
ins
pop
enter
or
fwait
mov
je
fld
fimul
adc
xchg
jno
test
or
popf
mov
pop
test
in
inc
push
push
call
sub
add
xchg
adc
xchg
pop
jbe
dec
add
pop
adc
sub
shl
sub
mov
test
dec
or
cs
fld
ja
push
mov
xchg
nop
test
adc
or
or
or
fs
out
jnp
adc
add
movs
in
ret
push
ds
dec
repnz
and
dec
add
push
imul
mov
movs
mov
lock
not
xchg
xor
(bad)
ja
and
js
jmp
mov
stos
in
and
test
add
mov
or
or
xlat
push
or
and
jmp
push
daa
push
mov
adc
inc
adc
shl
inc
or
adc
or
xchg
call
and
add
test
test
add
adc
mov
add
or
enter
xchg
add
inc
add
loope
add
or
or
test
push
cmps
test
adc
nop
popf
pop
dec
sbb
outs
mov
adc
xor
inc
adc
sbb
inc
test
and
test
add
nop
test
adc
ds
adc
inc
adc
add
mov
fucomip
fld
xchg
inc
sbb
xor
inc
and
adc
mov
jp
pushf
push
sub
mov
rcr
adc
inc
popa
add
inc
mov
mov
add
push
add
movs
and
test
adc
test
adc
test
adc
inc
adc
popf
arpl
mov
dec
out
xchg
add
inc
add
inc
add
inc
add
inc
add
add
add
test
add
inc
sbb
adc
xchg
inc
mov
dec
xor
cmp
sub
pop
popf
lods
fcmovu
loopne
stc
jbe
cs
push
gs
mov
(bad)
and
or
movs
adc
xor
fild
not
into
int
jno
inc
retf
cli
repz
or
fwait
mov
in
push
adc
mov
int
dec
aaa
fsubr
in
enter
retf
jno
hlt
mov
cli
push
fcom
fst
mov
dec
dec
jns
ror
lock
xor
ins
mov
ins
and
cmp
xchg
enter
aaa
fld
push
cwde
mov
inc
ret
test
and
and
mov
and
ins
sar
xor
out
cmp
not
pop
add
scas
imul
and
xor
mov
cld
mov
adc
adc
in
int
and
out
cmp
(bad)
or
mov
adc
mov
jbe
ficom
sar
jae
mov
add
push
push
jl
jnp
call
inc
xchg
movs
add
push
sub
inc
xchg
mov
call
sub
jnp
xchg
and
add
xor
xor
xchg
les
loope
inc
mov
aas
cmp
adc
stos
mov
gs
adc
cmp
inc
xor
stos
addr16
mov
sar
lods
inc
mov
mov
pop
pop
or
mov
xor
adc
or
or
or
sub
pop
lock
push
je
stc
push
sar
jno
cmp
dec
or
mov
call
pop
xchg
clts
mov
inc
add
xor
xlat
sbb
sbb
rcr
pop
je
push
cmps
and
scas
ds
or
or
push
mov
or
or
test
add
cmps
loopne
push
push
pop
inc
aam
fbld
loopne
adc
ins
and
xchg
lahf
sbb
dec
add
lea
and
call
dec
pop
sub
mov
xchg
push
sti
je
add
lock
xor
push
sbb
fadd
or
jecxz
add
fld
pop
push
mov
ficom
cmp
mov
fst
stos
arpl
cmp
add
inc
add
mov
and
dec
cs
shr
lods
xor
pop
and
mov
pop
aad
test
jno
fsubr
xchg
add
(bad)
mov
cmp
pop
arpl
movs
lea
rcl
sub
mov
enter
hlt
cwde
iret
cli
mov
pop
adc
outs
outs
call
jne
repnz
in
repnz
sahf
add
js
jg
adc
stos
or
mov
push
adc
jo
mov
div
xchg
mov
sahf
add
fidiv
push
inc
jle
add
push
out
retf
and
aaa
dec
and
fcomp
push
inc
outs
xchg
out
jne
les
add
(bad)
fisub
push
sbb
aaa
mov
test
xchg
arpl
inc
loopne
push
mov
jnp
sbb
xchg
xchg
xchg
xor
aam
xchg
loop
push
mov
ret
jge
mov
jge
mov
adc
test
pminsw
mov
or
neg
outs
rcl
or
push
adc
adc
and
inc
and
inc
and
or
or
cmp
cmp
into
frstor
and
mov
xor
dec
inc
xor
push
lds
xchg
jg
and
jecxz
imul
fldenv
xchg
adc
inc
sub
xchg
repnz
cmc
push
sub
or
nop
add
inc
adc
adc
and
add
inc
adc
ror
mov
mov
adc
dec
or
movs
push
add
and
test
add
and
and
test
adc
and
inc
and
inc
and
movs
add
dec
push
sub
cli
and
stc
inc
push
push
add
mov
or
or
or
mov
push
add
stc
inc
add
inc
add
inc
add
inc
add
inc
add
or
or
loopne
pop
gs
int3
lea
mov
je
jne
inc
retf
add
mov
add
jne
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
sub
add
add
sub
inc
je
xor
add
add
in
dec
mov
dec
sar
je
or
or
or
lea
das
xchg
xchg
daa
ror
sub
movs
fdiv
jo
dec
call
fild
pop
imul
push
add
fwait
add
pop
je
stos
rol
movs
push
test
pop
jo
or
lahf
adc
dec
push
leave
fst
and
int3
scas
dec
scas
mov
adc
and
adc
xchg
imul
dec
xchg
push
xor
jbe
out
loop
sub
add
(bad)
adc
aas
stc
push
xor
aaa
mov
stc
ins
(bad)
fs
fldenv
jbe
js
add
gs
int3
sub
jbe
popf
pop
xchg
popf
and
mov
ins
inc
gs
add
mov
scas
adc
cmp
inc
pop
inc
or
movs
jbe
es
push
add
adc
das
xchg
xchg
sbb
inc
mov
push
inc
in
sub
push
popf
fimul
and
sbb
out
mov
adc
add
inc
test
xchg
push
add
xchg
pop
sub
cmp
push
or
xor
js
cmp
cmp
pop
inc
dec
lods
mov
xchg
adc
adc
xlat
mov
(bad)
inc
or
inc
nop
call
stos
mov
push
mov
push
imul
inc
popa
xor
rep
mov
movs
push
in
mov
push
cmp
mov
das
jo
add
sbb
jp
imul
pop
pop
ds
je
and
cmps
cmp
sbb
or
adc
add
or
or
add
imul
push
ret
inc
adc
or
loope
sub
mov
jo
xchg
popa
and
add
lock
push
cwde
daa
mov
inc
add
inc
add
lahf
mov
and
scas
cs
not
sub
add
or
stos
dec
aas
mov
test
and
mov
inc
add
adc
and
and
iret
jne
not
sbb
inc
mov
call
mov
das
cmp
mov
jnp
mov
(bad)
into
mov
out
push
or
inc
adc
sbb
add
dec
xor
inc
and
or
inc
ss
stos
pop
or
add
push
(bad)
dec
clc
jecxz
cli
inc
out
imul
and
sahf
jmp
rcr
shl
mov
arpl
je
pop
mov
lods
mov
fisub
in
dec
push
and
jge
(bad)
adc
movs
mov
push
retf
in
in
adc
xor
repz
mov
push
or
dec
out
popa
mov
adc
add
pop
(bad)
mov
out
and
aad
fcmovbe
sbb
adc
out
mov
mov
mov
dec
and
inc
(bad)
mov
lock
stc
mov
cmp
push
jecxz
add
add
in
sub
nop
xlat
sbb
es
loop
xchg
dec
pop
jae
ret
mov
inc
dec
sub
sub
sbb
adc
sbb
pop
out
or
xchg
xchg
mov
fst
in
ins
pop
cmp
xchg
jmp
es
dec
ds
adc
mov
inc
adc
repnz
mov
les
push
xor
cwde
(bad)
and
test
add
xchg
adc
adc
xchg
dec
dec
push
cmp
mov
inc
xlat
cmp
inc
jmp
and
xor
push
and
test
mov
inc
andnps
movs
mov
mov
popf
in
mov
das
stos
xchg
enter
fcomp
push
push
test
add
test
add
and
test
adc
add
adc
pop
ins
inc
or
or
or
or
or
xor
or
adc
jne
cmps
arpl
sub
xchg
pop
or
not
push
(bad)
dec
xchg
sbb
nop
xchg
addr16
add
fimul
and
add
cmp
inc
jmp
or
adc
inc
mov
dec
dec
jo
mov
shr
mov
sar
and
and
and
add
and
inc
sti
jo
adc
adc
clc
stos
dec
cmp
nop
and
or
enter
call
fld
push
test
adc
or
add
inc
and
add
aam
sub
push
add
cmp
ret
stos
or
xor
cs
mov
mov
sti
stos
sub
enter
aam
pop
out
cmp
and
mov
mov
rol
leave
mov
sub
or
or
or
or
or
or
mov
add
or
or
xor
and
test
loope
and
test
and
cmp
mov
push
push
push
jl
pop
sbb
shl
outs
dec
shl
addr16
mov
adc
(bad)
in
dec
iret
mov
dec
jb
inc
nop
test
adc
inc
nop
cmps
(bad)
add
adc
outs
xlat
push
lea
fadd
mov
int3
mov
add
push
mov
sbb
and
and
push
push
inc
movs
in
add
dec
arpl
jbe
icebp
pop
xchg
fmul
mov
and
pop
jne
pop
fcomp
pop
pop
std
sub
add
add
cmp
mov
mov
aaa
mov
xchg
mov
movs
mov
xchg
push
push
fwait
or
push
pop
ret
(bad)
xchg
je
xchg
inc
adc
sub
jge
jl
inc
push
add
mov
adc
or
dec
jne
dec
and
jmp
dec
adc
inc
adc
inc
adc
lods
xor
test
lods
add
and
sbb
sbb
and
push
inc
stc
dec
movs
mov
aad
mov
inc
adc
jno
jecxz
in
dec
xchg
sbb
sahf
aas
or
or
inc
or
ss
push
push
adc
pop
xlat
inc
sub
or
aam
out
or
pop
daa
mov
scas
test
popf
adc
push
js
add
and
inc
and
call
fsubp
nop
add
jle
and
gs
and
adc
test
adc
dec
lods
cs
movs
add
test
push
push
pop
mov
nop
or
jecxz
add
shl
cmp
add
shl
jp
sub
pcmpgtb
inc
or
push
jecxz
push
dec
cli
sub
clc
cmc
push
jne
cmp
dec
add
and
test
adc
lock
add
adc
fcomp
je
cmp
and
push
adc
xchg
mov
sub
pop
sub
shl
inc
sub
lock
sbb
dec
jmp
push
inc
sbb
aaa
jl
jl
cwde
aaa
leave
push
popa
push
loope
sub
dec
inc
add
pop
dec
(bad)
cmp
shr
mov
add
xor
mov
cmp
push
mov
je
mov
outs
mov
nop
loop
mov
test
shl
aad
jno
inc
mov
inc
mov
push
push
cmc
add
cmp
add
push
inc
aad
paddusw
jbe
int
fcom
adc
xchg
xor
mov
push
xchg
mov
shr
add
and
or
das
(bad)
je
inc
jp
cmps
stc
sub
loop
scas
retf
add
mov
add
test
xchg
add
adc
xchg
mov
xchg
push
scas
lds
adc
cmp
fidivr
push
mov
sar
movs
into
jnp
out
adc
inc
add
inc
add
xchg
ret
and
test
add
sbb
aas
test
(bad)
sbb
hlt
mov
retf
dec
xchg
dec
je
test
adc
test
ins
fsubr
call
mov
and
inc
sub
add
or
cmps
and
sub
js
in
je
leave
pop
imul
test
adc
test
adc
test
adc
test
adc
mov
sahf
jecxz
movs
rcl
dec
test
and
inc
adc
adc
and
jle
xchg
adc
adc
dec
dec
int3
jno
aaa
mov
inc
sub
and
mov
add
or
xchg
inc
pop
or
jl
add
and
or
add
loopne
adc
inc
adc
adc
adc
add
pop
sbb
and
xchg
mov
mov
adc
(bad)
cmp
pop
cmc
and
mov
add
adc
and
inc
add
xchg
cmps
nop
mov
or
inc
adc
inc
adc
inc
xchg
pop
mov
mov
add
leave
cmp
mov
imul
pop
hlt
mov
inc
add
and
add
or
popf
ror
rol
or
or
loope
cmp
movs
or
mov
sbb
inc
sbb
test
cwde
in
es
push
rcr
inc
jmp
aaa
retf
test
adc
test
adc
neg
je
dec
dec
xor
fcmovne
sbb
(bad)
dec
lods
mov
cld
xchg
ret
pop
mov
jnp
iret
aas
dec
jge
mov
in
and
cmc
and
leave
dec
mov
or
adc
xlat
add
add
dec
lods
push
nop
inc
cli
xchg
xchg
fistp
sub
xchg
mov
movs
or
or
push
jecxz
stos
xor
dec
push
jnp
sbb
and
inc
and
inc
es
adc
call
or
or
nop
test
sub
jl
test
adc
stc
call
adc
or
fld
imul
test
sbb
pusha
lods
adc
sbb
out
push
ss
or
adc
adc
outs
cmc
repnz
cwde
loop
cmp
gs
imul
push
call
aad
lods
cs
or
outs
pop
xchg
neg
mov
xchg
out
add
inc
inc
jmp
cmp
adc
out
inc
call
jp
xlat
sub
nop
sub
pushf
xchg
cdq
push
sbb
add
inc
add
inc
add
inc
add
inc
add
shr
inc
mov
ret
inc
and
movs
add
stos
jmp
sti
mov
or
addr16
mov
dec
dec
push
and
aad
push
cdq
sbb
add
or
test
or
retf
or
xchg
sbb
test
pop
test
inc
mov
lds
mov
test
add
movs
dec
xchg
xchg
add
sar
(bad)
adc
dec
jmp
add
mov
daa
ret
add
xchg
sbb
fs
or
push
inc
sub
or
inc
push
enter
and
mov
add
repz
or
inc
jo
fstp
mov
ficomp
lods
loope
iret
jne
ss
test
sbb
xchg
cmp
fistp
and
pop
call
stc
aas
jnp
pop
jne
cmc
jnp
push
jp
push
sbb
jg
sub
test
test
sub
and
nop
xchg
stos
and
pusha
repnz
adc
and
(bad)
pop
inc
mov
add
push
imul
jo
neg
pop
fs
cmc
sub
call
or
mov
xlat
xchg
ds
xor
imul
outs
aam
mov
cmps
imul
les
pop
outs
test
pop
loope
push
xchg
sub
dec
inc
mov
mov
pop
add
or
test
adc
test
adc
dec
add
mov
push
mov
or
jecxz
xchg
inc
add
test
add
test
add
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
out
test
outs
movs
nop
test
adc
push
pushf
frstor
mov
(bad)
add
sub
or
pop
adc
stc
push
adc
sub
call
mov
add
jb
movs
sbb
or
or
fld
fld
stos
adc
movs
add
inc
adc
and
inc
and
inc
and
inc
and
inc
and
inc
and
inc
and
movs
add
test
adc
test
ds
movs
adc
and
add
add
or
fld
sub
inc
add
mov
add
test
xchg
pop
pop
pop
sub
xchg
push
test
adc
and
add
or
and
sub
mov
je
adc
adc
mov
mov
fwait
in
test
add
jbe
frstor
mov
mov
inc
jge
sub
adc
and
test
adc
test
adc
and
adc
ret
inc
in
(bad)
add
repnz
fs
pusha
shl
sbb
lahf
xchg
mov
and
cmc
sub
fsubrp
push
pop
rep
es
dec
add
gs
adc
sbb
cmps
inc
and
mov
mov
add
or
pusha
jnp
xor
imul
add
adc
lods
push
popa
mov
or
out
push
test
or
nop
dec
dec
push
push
add
stos
cmp
or
or
or
dec
pop
inc
test
mov
inc
and
add
or
or
or
or
adc
shl
push
adc
std
nop
pop
adc
daa
xchg
out
cmp
cmp
dec
jne
aaa
ja
push
stos
pop
loopne
or
cli
in
call
repnz
jmp
sbb
loopne
jne
lods
dec
mov
hlt
pop
sbb
js
push
jb
aam
cmps
fs
stc
push
ins
and
and
aad
adc
add
push
push
xor
xor
imul
test
or
or
or
test
and
mov
shr
adc
push
push
and
ret
mov
cmp
sbb
xchg
idiv
lea
daa
jl
push
test
add
mov
or
xor
jp
mov
icebp
xor
cmp
or
inc
push
outs
xchg
adc
mov
inc
in
lods
jne
jo
mov
mov
call
ins
jo
and
or
or
cmp
ss
add
or
add
xchg
repnz
adc
adc
add
pop
out
fwait
mov
call
mov
fldcw
inc
push
das
xchg
jo
movs
sbb
and
nop
adc
or
ret
mov
sub
repnz
mov
pop
adc
mov
sar
shr
push
retf
sub
loop
pop
or
mov
add
dec
popf
mov
mov
scas
mov
cmp
lods
pop
inc
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
push
aaa
add
add
fdivr
loopne
adc
dec
inc
add
add
add
add
add
jmp
add
inc
js
data16
dec
dec
add
add
add
add
add
add
add
add
add
sbb
add
add
xor
xor
xor
cmp
xor
xor
xor
add
push
add
push
add
push
pop
pop
push
or
adc
or
or
adc
(bad)
adc
adc
sbb
adc
push
sbb
and
push
and
and
daa
sub
sub
pop
sub
and
fild
inc
add
pop
pop
or
or
or
adc
sbb
sbb
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
ret
or
mov
and
add
add
adc
inc
add
add
add
add
add
add
add
add
push
pop
or
les
sbb
add
add
add
add
add
add
add
push
(bad)
fiadd
or
add
add
add
add
add
test
and
push
popa
push
loopne
arpl
sbb
mov
add
shl
or
and
or
mov
adc
xchg
add
inc
push
xchg
shl
xchg
add
dec
cmp
ss
in
adc
push
push
bound
test
inc
je
adc
je
scas
push
dec
xchg
(bad)
pop
adc
sbb
pop
ret
xor
ret
test
ret
cwde
mov
push
or
dec
and
sub
and
push
dec
push
xor
add
pop
leave
sub
in
sub
mov
loopne
retf
or
mov
inc
adc
add
push
or
xchg
leave
das
dec
xor
fstp
or
imul
mov
adc
sbb
and
and
jb
and
repnz
shl
pop
addr16
push
aam
fs
or
add
loopne
or
sahf
xor
sub
sbb
add
add
je
in
xchg
pop
test
or
mov
push
mov
push
pusha
jp
push
dec
dec
call
test
retf
test
stos
mov
lds
and
sar
stos
mov
push
pop
pmulhw
xchg
repz
ins
idiv
inc
int
dec
jb
hlt
add
sub
inc
popf
aaa
cs
xor
add
push
add
cmp
inc
dec
js
fdiv
mov
dec
cmp
cs
sbb
mov
or
lods
int
jge
mov
mov
mov
pop
int
inc
enter
out
cmp
loop
in
icebp
push
arpl
inc
and
shr
xchg
mov
sbb
push
leave
inc
or
adc
dec
inc
mov
xor
jns
mov
ins
(bad)
push
push
bound
push
pushf
mov
jmp
pop
sahf
aas
fist
xlat
jl
xlat
ss
cmps
daa
cmps
in
xlat
repz
imul
leave
aas
dec
lahf
into
in
adc
mov
xchg
and
xchg
leave
mov
mov
movs
dec
cmp
fwait
cmps
xor
pop
inc
adc
sbb
add
fisub
and
add
pop
dec
adc
sub
js
inc
sub
push
xchg
pop
jecxz
pushf
cmp
out
rcl
lds
in
(bad)
das
fsub
repnz
es
loope
dec
mov
cmp
stc
neg
out
sub
les
mov
in
sub
(bad)
fcom
xor
and
mov
jno
inc
push
mov
xchg
cmp
add
mov
lods
mov
aad
ret
cs
cli
bound
push
ret
loop
jl
mov
jns
mov
jge
pushf
(bad)
jmp
mov
mov
hlt
(bad)
jne
int3
mov
inc
sub
pop
xchg
in
(bad)
in
jno
test
and
rol
add
adc
push
mov
aad
jne
sar
dec
mov
mov
xor
jnp
and
cdq
in
cmp
add
shl
mov
push
rol
(bad)
in
arpl
das
cmp
test
jo
aaa
mov
push
out
loop
repz
jmp
xchg
fsub
adc
data16
adc
mov
xchg
add
mov
lods
or
movs
xchg
cs
lds
mov
inc
xor
fdiv
mov
daa
cmps
(bad)
lea
mov
dec
hlt
mov
push
push
jb
push
push
test
push
and
push
dec
jle
mov
movs
hlt
repz
adc
push
and
sub
bound
sub
rol
sub
movs
xchg
adc
movs
in
sbb
ja
pop
mov
push
fnsave
stos
xor
pop
inc
push
in
jge
(bad)
lods
cdq
je
add
and
mov
in
mov
dec
adc
xchg
in
push
or
(bad)
fst
dec
xchg
or
mov
or
push
add
mov
cmps
xor
add
push
mulps
add
ret
sbb
(bad)
div
gs
push
xchg
retf
ror
xchg
mov
out
test
and
stos
xchg
fwait
xor
dec
in
loop
je
fisttp
sub
ror
test
xchg
dec
pop
ret
add
push
stos
and
pusha
aaa
es
imul
xor
sbb
pop
arpl
int3
jns
pop
rol
call
xchg
mov
test
loope
outs
inc
stos
fnstcw
mov
retf
jge
outs
mov
mov
sbb
mov
inc
jo
push
fs
xchg
add
xor
add
ins
pop
and
push
and
push
cmps
push
jo
xor
xchg
jp
cmp
call
int
cmp
mov
xor
sahf
into
bound
mov
ret
ds
jbe
jp
loop
mov
out
push
xchg
movs
jb
out
xchg
push
inc
push
inc
sub
or
adc
inc
pop
xchg
shr
add
push
or
es
mov
inc
sub
xor
fwait
sub
xchg
and
xor
aad
pop
cs
stc
pushf
pop
lahf
and
repz
retf
xor
sub
dec
xchg
sbb
pop
sub
fisttp
call
dec
lods
jno
inc
sbb
dec
iret
nop
pop
(bad)
dec
popf
or
mov
sub
test
pop
cmp
and
push
adc
and
test
inc
mov
xor
pop
cwde
sti
scas
sbb
hlt
lahf
sub
mov
pop
dec
outs
sub
xchg
dec
lds
jae
sub
out
(bad)
ficomp
inc
push
gs
aaa
dec
pop
mov
mov
js
xchg
mov
pop
or
ins
pop
xor
cld
movs
cmp
add
xor
and
ja
movs
dec
xchg
cmp
push
movs
inc
push
int3
idiv
mov
xchg
outs
retf
imul
out
cmp
and
push
mov
mov
shl
or
mov
je
hlt
ins
pop
arpl
jge
out
inc
stc
sahf
cld
test
adc
aad
add
push
add
movs
sub
pop
push
or
xchg
xchg
je
stos
mov
jl
test
xchg
push
lahf
jmp
aas
cdq
iret
cmps
push
nop
neg
dec
loop
xchg
shr
dec
mov
xchg
push
xchg
int3
imul
mov
mov
cmc
cmp
xchg
or
int3
int3
loopne
xchg
jo
and
jmp
pushf
lea
lods
sub
cmp
cmovno
je
(bad)
fstp
js
push
sbb
mov
mov
imul
or
pop
sub
add
cmp
ss
or
outs
mov
jmp
mov
sub
scas
push
or
and
push
mov
rcr
into
ficom
aad
cwde
cmp
sbb
xor
and
stos
call
pop
cmp
inc
and
lahf
int3
jle
mov
jb
int
cmps
aam
out
fdivr
test
inc
xchg
mov
ficom
je
fstp
test
xchg
(bad)
jmp
popf
movs
mov
imul
lea
pop
daa
outs
xchg
popf
pop
jo
and
sbb
mov
ins
mov
outs
dec
push
mov
dec
jo
dec
sbb
inc
sub
rol
stc
cli
xchg
mov
jne
mov
cwde
mov
jb
jecxz
xchg
mov
mov
dec
jbe
cmp
push
dec
hlt
retf
mov
shl
in
cmp
ja
test
push
in
shl
ja
es
and
cmp
adc
fld
push
or
mov
rcl
movs
sbb
xchg
dec
stos
les
adc
ds
add
mov
jl
jmp
out
aaa
in
idiv
stc
sbb
div
stc
lock
and
inc
inc
mov
mov
retf
sbb
xor
ins
(bad)
mov
retf
clc
jmp
test
jmp
push
add
add
(bad)
rcl
aaa
or
mov
imul
mov
push
ds
fidivr
mov
sub
dec
jnp
mov
mov
ss
out
inc
mov
movs
mov
mov
mov
xchg
(bad)
jbe
in
xchg
aad
test
xchg
adc
sub
mov
mov
cs
adc
in
xchg
xchg
adc
enter
xchg
mov
mov
push
stos
mov
call
repz
into
(bad)
stos
fwait
mov
adc
sbb
mov
cmp
mov
into
iret
dec
rcr
inc
mov
push
test
mov
inc
aam
cmp
adc
sub
in
fwait
shl
xchg
jmp
add
add
out
out
mov
(bad)
loope
jge
iret
stc
scas
mov
jo
fucomp
cmp
test
add
pop
lea
enter
gs
(bad)
int
js
idiv
pop
pusha
mul
push
lods
sub
fs
aam
rol
adc
or
arpl
adc
sub
inc
sub
jmp
and
cmp
cmp
stos
leave
jle
loopne
loope
hlt
mov
xor
pop
xor
jae
jae
cmp
mov
iret
ja
(bad)
ror
fbld
inc
mov
cmp
mov
je
js
sti
and
fidivr
mov
inc
jo
cs
imul
dec
cmp
push
add
or
jb
jbe
adc
jns
test
ss
or
jmp
icebp
cld
aas
dec
icebp
push
sti
xor
in
adc
pop
mov
mov
cmp
cdq
hlt
cli
mov
mov
mov
fild
mov
adc
jecxz
push
or
adc
cmps
aam
pop
into
xchg
bound
adc
inc
push
lods
cmps
mov
stos
xchg
add
mov
xor
ins
(bad)
jmp
in
xchg
jnp
ja
sahf
fiadd
dec
xor
inc
mov
sbb
mov
dec
popa
sub
adc
jae
xor
imul
cwde
je
iret
adc
es
cli
xor
cmp
inc
and
jle
jecxz
mov
hlt
lock
mov
out
ds
jg
in
lock
sub
std
jae
scas
xchg
in
cld
retf
lahf
xor
jmp
jp
rcr
dec
inc
retf
xchg
outs
outs
push
jp
jns
or
mov
pop
out
jbe
mov
cmp
int
push
adc
jne
pop
mov
add
mov
push
in
pop
and
or
xor
fwait
mov
outs
mov
repnz
mov
jle
jbe
out
iret
jge
out
call
mov
call
lahf
sahf
push
inc
adc
hlt
das
daa
in
jns
cmc
in
push
outs
es
retf
ss
sahf
stos
shl
cmp
sahf
lods
sahf
pop
fsub
jge
pop
jmp
out
jo
ins
movs
adc
inc
xor
sbb
aad
fcom
pushf
into
pop
pop
dec
ss
aaa
jne
(bad)
addr16
imul
fbstp
mov
out
in
in
dec
mov
or
rcl
ja
ss
scas
dec
mov
leave
adc
xchg
adc
mov
fdivr
lods
popf
inc
sub
clc
cli
mov
(bad)
add
pop
inc
jl
ins
xchg
rcl
loop
test
cmp
mov
ds
jae
jmp
aaa
fstp
dec
gs
jecxz
inc
movs
nop
and
or
xchg
mov
jno
mov
mul
xchg
mov
aad
shl
lock
inc
inc
popa
stc
out
pop
hlt
loop
fucomi
repnz
push
adc
mov
jmp
adc
lods
das
mov
ins
inc
mov
lds
lahf
fwait
mov
pop
and
xchg
mov
pop
loop
sub
lods
inc
pop
comiss
(bad)
cmp
loope
mov
push
add
pop
(bad)
mov
push
xchg
mov
jmp
jne
pop
(bad)
lea
sub
std
adc
and
outs
cmps
int3
fisttp
sti
cmps
xor
adc
jns
dec
xchg
mov
rol
out
popf
cs
mov
ja
jb
(bad)
jg
in
and
pop
mov
jecxz
adc
div
jl
test
outs
dec
or
jns
pop
icebp
and
push
stos
repnz
shl
sub
mov
retf
lods
jns
nop
and
das
aam
mov
inc
ins
or
cmp
xor
arpl
addr16
imul
lahf
es
ror
movs
push
xor
cmp
hlt
mov
clc
ins
test
bound
and
cmp
cmp
mov
outs
adc
call
cmp
sahf
jp
sbb
xchg
ins
imul
imul
push
out
cmp
xchg
test
cmp
inc
dec
lds
shl
mov
jae
xchg
and
cmp
sbb
fmulp
outs
inc
imul
repnz
fstp
jge
adc
push
jne
push
sub
jns
hlt
cmp
fwait
loope
call
fwait
mov
dec
(bad)
aam
aam
pop
cdq
ror
stos
cmp
out
(bad)
test
jne
into
mov
sbb
ins
cmp
ret
fidivr
pop
out
jmp
xor
je
and
scas
(bad)
mov
out
imul
test
jecxz
fidivr
hlt
mov
cmp
push
push
and
pop
inc
pop
sbb
inc
xchg
outs
pop
pop
pop
mov
ins
or
sbb
push
cmp
das
outs
sbb
cmp
pop
pop
pushf
test
pop
sub
addr16
hlt
sub
cmps
cmp
call
repnz
jae
aam
clc
(bad)
retf
push
dec
xor
setnp
ss
arpl
or
pop
push
loope
or
dec
lods
hlt
pop
mov
pop
out
xchg
aas
xor
jmp
cli
and
cmp
xor
ror
fld
mov
cmc
sar
xchg
in
cmp
jecxz
jbe
inc
int
daa
dec
das
imul
jns
ror
fwait
cmp
add
and
push
mov
lods
jp
fild
xchg
add
add
add
push
stos
jb
ror
jle
rcr
aad
out
push
adc
stos
retf
fucomp
cmp
mov
stc
cmovno
mov
int
(bad)
icebp
clc
(bad)
inc
sub
mov
daa
inc
jge
push
in
fdivr
dec
sar
jbe
in
aaa
sahf
jmp
cmp
jae
dec
inc
cmp
retf
xor
cmp
out
stc
call
pop
jg
cmc
jae
rcr
push
nop
push
mov
push
mov
aad
shr
and
and
mov
iret
xchg
inc
in
push
xchg
push
cmps
add
and
(bad)
movs
jecxz
mov
pop
addr16
repz
es
lahf
mov
outs
mov
shld
loope
(bad)
iret
cli
pop
int3
std
xchg
jnp
sahf
jb
pop
xor
pop
fdiv
cli
mov
lds
out
mov
test
into
and
adc
mov
sbb
(bad)
pop
xchg
jmp
jae
ret
push
stos
repz
xor
push
dec
jno
inc
xchg
inc
mov
xchg
fidivr
scas
je
shl
leavew
rol
push
xchg
pop
imul
sbb
ror
mov
out
(bad)
jns
fwait
pop
ror
xlat
inc
aam
imul
je
shl
cmc
cmps
out
sbb
les
xacquire
scas
xor
xor
pusha
dec
add
and
xor
je
aam
in
cli
mov
mov
jns
arpl
(bad)
sub
outs
scas
cmp
test
mov
cmp
mov
(bad)
das
into
das
movs
int
pushf
fadd
and
mov
jle
dec
int
xor
xor
mov
push
jmp
dec
jmp
jge
out
xchg
add
in
jne
ds
and
stc
mov
mov
xchg
fisttp
ret
out
cli
aas
cmp
jl
add
loope
xor
xor
es
lock
push
dec
or
sbb
test
jns
imul
jnp
fdiv
pop
xor
in
mov
stc
lahf
push
retf
(bad)
jg
cmp
scas
cmp
lods
nop
out
lea
or
mov
push
call
and
xor
xor
xor
retf
push
add
sahf
pop
xchg
sar
cwde
rcl
jns
mov
cmps
cmp
outs
and
aad
stc
jle
mov
out
xchg
dec
xchg
mov
movs
(bad)
pop
pop
mov
mov
test
inc
into
push
xor
in
sbb
jnp
cdq
stos
or
int3
ss
ret
fisttp
rol
push
mov
jae
cmp
xchg
scas
dec
jle
enter
dec
sti
pop
mov
repz
jbe
jne
(bad)
clc
std
inc
ficomp
jnp
lods
lea
sbb
loop
loopne
int3
jecxz
mov
stc
push
aam
in
push
int3
mov
mov
jno
rcl
ror
(bad)
(bad)
inc
cmp
dec
aam
jecxz
push
jnp
sbb
lahf
inc
iret
lds
mov
(bad)
mov
cmp
xchg
fisub
into
test
imul
aaa
cmps
call
mov
jne
push
repz
mov
lods
loope
sbb
jno
cmp
dec
(bad)
in
or
scas
pop
cmp
inc
inc
jg
les
xor
add
add
add
add
add
add
add
add
add
add
add
and
and
xor
push
and
inc
adc
inc
inc
(bad)
fiadd
or
add
add
xchg
pop
ins
cmp
inc
out
lock
jmp
adc
inc
loope
iret
repz
cmp
(bad)
adc
jge
push
leave
outs
outs
mov
adc
outs
xor
icebp
inc
(bad)
mov
cld
add
cwde
dec
mov
int3
jg
fistp
jb
xor
xor
iret
ins
or
fdivr
(bad)
push
fdivr
xor
adc
shr
popa
mov
mov
mul
and
add
mov
sahf
es
xchg
add
mov
test
jle
ret
rol
mov
pop
(bad)
cdq
mov
es
inc
sbb
int3
add
fcmovnu
rcr
fcomp
shl
fcomp
cmp
retf
mov
loop
in
jl
mov
aas
sar
mov
int3
jo
dec
and
xchg
mov
pop
cmp
adc
out
fdivr
xor
mov
inc
in
js
in
daa
xchg
sbb
add
sub
data16
in
cmp
cmp
es
or
and
loope
dec
cmp
test
mov
cmps
cmps
jmp
fsub
sti
push
(bad)
iret
mov
out
ins
int3
add
adc
into
cmp
dec
add
(bad)
jb
int3
ds
inc
fucomip
out
js
js
es
cmps
push
and
cmp
inc
dec
push
sbb
cmc
push
sbb
call
sub
and
inc
mov
lea
xor
mov
and
cmp
loope
loop
fld
into
inc
ds
mov
fwait
das
mov
je
je
cdq
mov
ror
xchg
scas
ins
stos
xlat
push
mov
sbb
rcl
in
xor
rcl
xor
iret
mov
mov
bound
mov
(bad)
mov
mov
jne
cmp
mov
xor
and
test
out
fild
jne
or
mov
cmp
fmul
fdivr
sbb
adc
data16
addr16
sbb
inc
(bad)
cli
adc
scas
mov
mov
push
lds
mov
cdq
retf
sbb
lds
jg
adc
in
fistp
push
dec
ins
jp
sahf
fwait
inc
xchg
ficom
or
in
xchg
mov
pusha
mov
loopne
pushf
test
int3
into
and
inc
test
in
jns
jp
(bad)
mov
popf
aad
cmp
pop
iret
mov
dec
push
ret
adc
inc
push
leave
inc
retf
add
movs
cs
fild
adc
add
les
leave
add
js
add
push
push
fst
je
and
mov
into
xor
in
fwait
mov
(bad)
fdiv
icebp
adc
jns
or
in
jl
xor
mov
test
cli
popf
push
test
fistp
test
dec
xor
add
aam
retf
mov
add
shr
sub
outs
dec
jne
aas
mov
xor
cmp
ret
int
push
fcomp
cmp
fistp
inc
cwde
popa
cdq
xchg
shl
add
xlat
call
outs
cld
mov
lods
(bad)
sbb
mov
and
in
jmp
shr
mov
jmp
jmp
dec
sbb
cli
mov
ror
or
shl
out
sbb
fcomi
fnstcw
bound
ficomp
imul
mov
imul
(bad)
mov
shl
lods
mov
or
push
rcr
int
xor
sub
test
inc
mov
cmc
cmc
cwde
inc
cli
cmp
ins
test
icebp
fadd
sbb
cmp
loop
fsubr
pop
rcr
mov
ins
mov
ror
xchg
(bad)
lods
data16
dec
int3
cli
aad
mov
mov
movs
std
push
in
pop
jbe
pop
jle
cmps
mov
adc
cli
in
cmc
cwde
mov
mov
mov
retf
aaa
cdq
cmc
cmc
std
cmp
scas
push
mov
pmaxsw
cdq
(bad)
lea
int
cmp
add
cmc
cmp
hlt
lock
cs
mov
(bad)
fs
cmp
inc
iret
popa
or
retf
jb
bound
ror
stc
arpl
daa
xor
int3
cmp
pop
fstp
test
mov
dec
pop
xchg
jb
and
pop
out
xchg
xor
aad
add
sbb
jmp
out
sahf
fld
xor
iret
arpl
(bad)
fdivr
cli
mov
jle
ror
es
ins
mov
mov
mov
jno
fst
sbb
pushf
clc
daa
cwde
cmp
and
in
or
sbb
ja
dec
in
and
cmp
dec
mov
in
mov
test
scas
in
push
mov
mov
aad
mov
sbb
retf
pusha
pop
xor
cmc
aam
test
jecxz
loopne
xor
out
sbb
cmp
mov
sbb
or
shl
cmp
lock
add
mov
mov
call
aam
test
in
mov
and
sub
and
push
jo
mov
cmp
cmp
punpcklwd
cmp
ds
and
int3
push
jle
(bad)
and
and
mov
rol
add
sub
(bad)
lods
nop
adc
jae
and
fidiv
pusha
sbb
mov
add
cmp
inc
jg
mov
arpl
add
pop
push
xor
and
test
in
jle
push
pop
pop
adc
outs
sbb
cwde
fiadd
inc
jle
xchg
xor
adc
jo
jne
in
adc
fmul
and
ins
and
adc
cmp
mov
add
clc
ds
fisttp
bound
retf
mov
mov
stos
ins
inc
inc
pop
or
repnz
push
push
daa
cmp
sti
sahf
jge
prefetchnta
out
test
and
push
and
sahf
and
cmc
fdivr
add
mov
out
arpl
retf
and
sbb
pop
mov
or
in
or
jecxz
jle
inc
jge
inc
leave
loopne
ror
cmp
out
in
jnp
daa
mov
cdq
sbb
in
pop
jl
pop
jno
pop
sbb
xor
sbb
push
ret
mov
cmc
sbb
addr16
mov
cwde
mov
xchg
mov
xchg
dec
lods
dec
pop
cwde
xchg
ds
adc
xchg
or
mov
lods
xchg
or
int
es
mov
loop
add
xchg
cdq
sub
ds
out
fcomi
jnp
idiv
int3
adc
sub
jecxz
pop
xchg
jne
mov
push
(bad)
out
les
(bad)
pop
pop
xor
pop
sub
lds
retf
adc
cmp
int3
iret
mov
(bad)
outs
xor
xchg
pop
push
cmp
dec
mov
pop
imul
out
xchg
sbb
arpl
imul
or
popf
mov
and
retf
mov
in
pop
jne
push
test
jmp
xchg
ret
aam
idiv
push
(bad)
pop
mov
adc
cli
add
adc
pop
mov
daa
push
dec
push
mov
sar
sbb
std
mov
mov
repz
daa
cdq
push
stos
cdq
mov
fwait
lock
add
dec
or
data16
dec
test
or
inc
inc
into
and
xor
inc
in
push
sahf
rol
(bad)
popaw
out
cmp
mov
adc
js
jg
or
jo
aad
push
scas
push
test
cmp
jae
int3
shl
stos
test
aam
push
dec
and
or
into
aad
popa
xchg
(bad)
idiv
jo
cmp
movs
inc
arpl
cmp
xchg
jl
sahf
popa
cmp
pop
xor
xor
mov
fimul
sbb
xchg
mov
pop
loop
mov
cmp
bound
(bad)
das
retf
dec
mov
and
clc
leave
mov
rcl
(bad)
(bad)
mov
popa
loop
jnp
loope
addr16
pusha
(bad)
adc
arpl
pop
loop
xor
and
jmp
sar
adc
loop
outs
push
dec
mov
data16
ret
adc
add
and
add
retf
mov
mov
xchg
out
(bad)
mov
mov
jl
push
ret
int
call
pop
fdivr
inc
adc
int3
rol
rcr
lods
jmp
ins
xchg
jb
mov
fsubr
mov
bound
popa
ror
fmul
push
push
cmp
xchg
test
(bad)
stos
js
xor
lock
pop
or
sahf
and
jnp
adc
fadd
mov
scas
mov
cwde
jne
or
xchg
add
pop
xchg
xchg
addr16
dec
fidivr
outs
sub
sub
push
cmps
scas
xchg
sbb
pop
inc
sbb
and
shr
fdivr
sbb
mov
xor
xor
stos
jbe
not
push
lods
fwait
aas
test
fwait
das
push
add
scas
leave
inc
ret
xchg
sub
js
ret
push
ficomp
xor
push
(bad)
mov
inc
xchg
test
call
jbe
push
lock
repz
sbb
cmp
and
jl
cmp
call
mov
fld
ins
mov
jmp
test
inc
cdq
xchg
icebp
adc
add
push
popa
dec
ins
dec
div
fs
mov
sub
sub
mov
jl
push
pop
movs
cmp
enter
rol
or
cwde
sahf
cmp
fmul
sbb
xor
test
shr
jmp
ret
aaa
push
gs
in
pusha
push
or
push
and
jnp
cmps
les
popa
pop
xchg
push
aam
mov
fidiv
mov
wrmsr
sar
jl
xor
fsubr
cmp
fucomip
clc
sbb
inc
sbb
lods
mov
pop
push
jmp
fisttp
pusha
sbb
int3
or
neg
adc
mov
pop
add
pop
lea
out
arpl
cmp
sbb
jge
push
fadd
mov
xor
std
std
hlt
cmp
mov
shl
scas
dec
pop
inc
scas
fldcw
addr16
xchg
xchg
mov
ja
sahf
sbb
mov
dec
pop
in
lods
pop
(bad)
(bad)
loop
lea
xchg
inc
ins
shr
popa
sbb
addr16
xchg
and
mov
push
(bad)
fnstcw
mov
xor
imul
xor
addr16
cmp
sub
out
and
mov
int3
adc
jmp
cmc
xor
(bad)
shr
xlat
mov
mov
xchg
dec
retf
mov
jge
dec
push
call
push
mov
ins
icebp
das
sbb
sub
jg
es
es
fs
shl
and
pop
fs
loope
xchg
aas
scas
data16
pusha
in
fcomi
in
jge
or
fscale
aaa
pop
test
push
jl
ss
icebp
call
shl
lods
mov
(bad)
mov
adc
jle
sub
pop
loop
sbb
mov
push
mov
adc
fwait
cwde
add
int3
les
iret
test
idiv
pushf
ret
ds
inc
shl
push
aad
mov
daa
jg
dec
stos
and
xchg
lods
test
push
sbb
in
sahf
cmp
mov
or
sahf
and
cwde
(bad)
cli
cmp
repz
aas
retf
int3
shr
push
movs
mov
inc
mov
das
push
pop
ins
mov
mov
mov
add
loope
das
cmp
fwait
mov
jb
xchg
and
or
fcmovne
adc
and
mov
pop
lahf
addr16
daa
(bad)
mov
push
shl
outs
xchg
mov
ja
jp
mov
mov
pop
mov
repz
data16
or
mov
pop
xchg
jl
je
rcl
add
xchg
inc
in
jae
cmps
pop
call
(bad)
iret
clc
call
dec
push
cmps
pop
je
shr
inc
push
scas
stos
mov
stc
popa
enter
inc
movs
inc
js
push
shr
pusha
mov
mov
xor
mov
xchg
cwde
shr
pusha
inc
fucomi
jb
pusha
mov
jecxz
jbe
(bad)
jecxz
ds
mov
inc
shl
pop
mov
lods
mov
aam
pushf
popf
fstp
ficomp
adc
push
jae
jae
mov
ret
inc
retf
add
mov
and
adc
pop
adc
in
popa
loop
inc
mov
push
mov
popa
test
xor
inc
adc
mov
loopne
adc
ror
sub
imul
push
repnz
data16
jle
repnz
sar
fwait
pop
jne
mov
addr16
ret
sbb
jbe
mov
and
jb
push
adc
adc
mov
shr
pop
pop
adc
push
out
int
xor
fisub
add
add
add
add
lds
mov
retf
daa
dec
cmp
cld
xchg
inc
add
add
(bad)
jbe
inc
and
mov
test
jmp
mov
les
outs
loopne
pop
xor
repz
inc
push
fmul
xor
popa
xchg
add
scas
cmp
and
data16
sub
xor
xchg
movlps
adc
cmp
(bad)
jae
in
in
mov
sbb
cmps
mov
add
sar
or
mov
jg
leave
and
fwait
icebp
or
push
(bad)
push
fstp
inc
inc
outs
mov
inc
fwait
in
fcompp
mov
imul
push
mov
or
xchg
sbb
xchg
or
adc
or
cmps
add
leave
cwde
inc
fldenv
pop
inc
pop
cdq
fnsave
rcr
mov
mov
or
add
fcmovu
repz
out
adc
pop
pop
add
dec
jno
add
cmps
loope
loop
sbb
(bad)
fsub
fs
retf
xchg
add
outs
xor
fwait
mov
and
data16
or
pop
sbb
and
repz
scas
jmp
ror
arpl
and
inc
xchg
mov
outs
(bad)
(bad)
mov
xchg
and
push
stos
stos
adc
dec
dec
rcr
xchg
jecxz
and
dec
mov
push
iret
adc
(bad)
call
ins
pop
aas
jmp
jge
cdq
inc
push
shl
add
ins
fwait
cmps
jnp
test
addr16
mov
mov
nop
cmp
mov
sbb
pop
xor
out
fwait
pusha
adc
sbb
cwde
enter
mov
movs
xchg
in
push
cmps
retf
repnz
jg
ins
ret
push
mov
shl
rol
fistp
inc
adc
cwde
pop
mov
sub
push
cld
xchg
stos
aam
lods
movs
les
sub
repnz
mov
daa
push
outs
fwait
inc
test
lahf
test
push
call
cmps
mov
jnp
jo
cmp
push
fs
ret
out
daa
xor
addr16
icebp
aam
shr
aam
ss
push
sti
sbb
fst
or
(bad)
lock
jae
add
jb
fistp
jmp
dec
test
push
lods
mov
jp
arpl
add
lods
aas
lock
push
pushf
cmp
mov
sub
or
adc
test
test
mov
cmps
rcl
aaa
dec
nop
repz
cwde
and
into
loopne
test
sbb
sbb
test
cld
and
jae
cwde
in
sbb
add
cmp
push
pop
xchg
jg
stos
mov
ja
push
mov
pop
mov
sbb
cmp
data16
mov
push
xor
call
scas
fwait
movs
jnp
mov
fdivr
hlt
std
dec
sub
popa
rcr
push
mov
inc
(bad)
(bad)
xor
loopne
mov
outs
inc
movs
sub
mov
int3
pop
push
mov
aad
into
dec
inc
call
push
outs
lea
icebp
data16
inc
test
xor
mov
call
add
jmp
fidiv
fwait
mov
ins
aam
cmp
sbb
std
ins
ret
pop
shr
mov
(bad)
shl
std
push
mov
shr
sub
outs
scas
je
add
add
push
and
xor
jnp
inc
mov
inc
and
jecxz
xor
jne
mov
push
fldl2e
fdiv
jb
rcl
adc
repnz
(bad)
mov
int
repnz
jns
push
gs
mov
sub
scas
xor
sub
pushf
mov
jns
cmp
mov
xor
sub
scas
nop
and
rol
(bad)
xor
int3
inc
mov
and
das
movs
(bad)
push
sub
pop
cmc
push
icebp
test
mov
mov
xlat
dec
cmps
xor
ins
mov
movs
out
popa
push
pop
inc
call
mov
mov
xchg
test
pop
cmp
enter
push
push
mov
fst
ss
ja
adc
xor
mov
xor
push
(bad)
jg
inc
cmps
push
xor
pop
mov
clc
imul
mov
sub
mov
mov
sbb
int
int3
clc
xchg
fimul
arpl
out
add
mov
and
sub
mov
jne
push
aad
sub
mov
and
cli
push
ds
dec
into
mov
dec
pop
jb
mov
and
ds
mov
jmp
mov
xchg
adc
jp
jo
xor
gs
add
push
and
xchg
mov
push
sub
int3
mov
imul
adc
xor
pop
pop
dec
push
push
stos
push
jmp
mov
xlat
or
aaa
popa
adc
lods
xchg
dec
ficomp
cld
or
pop
xchg
in
cwde
cmps
xor
movs
fiadd
xchg
pop
inc
jb
push
gs
adc
mov
push
xor
ficomp
test
cwde
dec
mov
ins
imul
mov
fwait
mov
dec
aam
(bad)
les
mov
mov
scas
das
push
mov
out
mov
add
xchg
and
rol
dec
push
sbb
outs
xchg
mov
mov
imul
jmp
fcmovnu
ja
les
ins
cwde
adc
cmc
adc
cwde
movs
and
sub
push
data16
mov
mov
adc
je
sahf
outs
call
retf
cmp
lahf
idiv
sub
dec
int3
int3
lods
jae
jl
mov
and
popf
cmp
retf
xchg
mov
in
es
aas
fcmovb
mov
mov
sti
inc
pop
jmp
fs
cmp
stos
inc
gs
push
cmc
fcmove
jnp
mov
jnp
jecxz
aas
shr
inc
imul
mov
stc
fndisi(8087
iret
in
les
add
jecxz
out
inc
inc
and
sub
test
jne
add
cmp
xchg
pop
dec
cmps
lods
test
retf
sbb
out
sbb
xchg
fisttp
fistp
stos
rol
sbb
add
mov
adc
rcl
iret
mov
pop
push
dec
ins
pusha
adc
inc
bound
aaa
stc
not
gs
or
aam
inc
outs
out
scas
push
inc
cld
jmp
frstor
cmc
aad
sub
ror
sub
idiv
aam
sbb
xor
add
pop
jnp
ja
ss
loop
xor
xchg
iret
push
push
int
pop
xor
jne
mov
ja
retf
or
mov
in
ficomp
into
mov
jle
int3
loop
mov
sti
xor
rcl
enter
punpcklwd
je
or
push
sbb
pop
int
outs
icebp
fdivr
test
daa
loop
jnp
ror
dec
in
stos
cmps
xor
aas
or
mov
iret
ins
mov
cmps
pop
push
push
sub
aas
ret
xor
repnz
imul
dec
xor
mov
pushf
add
adc
xchg
inc
push
fdiv
shl
dec
and
cmp
mov
popa
adc
sbb
mov
(bad)
addr16
ds
mov
pop
ins
jnp
cmc
sbb
hlt
lock
xlat
(bad)
outs
mov
jmp
mov
mov
fwait
cld
mov
cli
aad
ins
mov
adc
cmp
fcomp
dec
movs
jmp
fwait
push
dec
cmp
xchg
pop
repnz
(bad)
stos
lods
mov
mov
enter
xchg
dec
les
not
fcmovnb
mov
into
pop
add
outs
dec
gs
std
pushf
jae
jl
jb
clc
mov
ficomp
mov
(bad)
in
inc
lods
jg
nop
inc
imul
(bad)
aas
cmp
xchg
lea
jbe
adc
in
inc
daa
scas
jmp
pop
jecxz
test
cmp
std
inc
outs
stos
gs
sub
mov
loope
mov
inc
sbb
popa
sbb
mov
div
jg
test
pop
stos
cmps
inc
jbe
xor
lea
or
xchg
in
cdq
stc
icebp
mov
sub
pop
adc
test
repnz
fwait
adc
mov
call
mov
addr16
inc
rcl
ins
les
ins
stc
outs
push
or
or
mul
or
ins
idiv
call
aam
ins
jmp
repnz
popf
cmp
pop
movs
push
sti
jmp
cmp
sbb
sbb
jg
mov
ss
jnp
sbb
test
cs
mov
fsubrp
test
ins
dec
adc
xor
je
adc
jge
loope
cmp
pop
inc
fdivr
push
outs
(bad)
mov
push
mov
mov
iret
jmp
sar
pop
mov
xchg
jo
xlat
int
or
ins
inc
sub
mov
xor
sub
inc
(bad)
mov
xchg
jl
and
jecxz
mov
sub
neg
jl
sar
test
std
xor
mov
sub
inc
lds
sub
inc
scas
arpl
hlt
daa
dec
jge
scas
mov
mov
dec
jmp
lea
mov
shl
mov
adc
(bad)
mov
inc
ja
jb
inc
jecxz
mov
push
scas
jl
stc
mov
fistp
add
sub
mov
mov
cli
jge
rol
gs
std
push
test
push
mov
and
jp
or
cmp
sahf
push
clc
push
xchg
js
and
inc
jge
add
push
aas
cmps
sub
push
xchg
sti
xor
ja
jmp
mov
out
mov
sbb
in
dec
mov
cmp
inc
lods
mov
shl
mov
int3
rcl
pusha
fs
mov
ds
in
add
push
imul
mov
pop
je
push
not
mov
xchg
inc
and
and
sti
inc
mov
jmp
imul
int
pop
(bad)
movs
ficom
outs
xchg
aam
fild
cmp
pop
lahf
cmps
dec
scas
mov
ins
pushf
(bad)
ins
mov
inc
ins
dec
and
stos
ds
jge
outs
les
push
ret
sbb
jge
cmp
(bad)
push
or
adc
imul
ins
sbb
jae
(bad)
mov
and
pusha
loopne
outs
xor
mov
inc
fldcw
out
push
imul
xlat
(bad)
xor
add
imul
movs
sub
shl
and
pop
push
cmp
xchg
movs
imul
cmp
(bad)
fstp
push
(bad)
pop
add
aad
jp
stos
mov
mov
push
mov
dec
jb
add
in
cmps
in
out
hlt
sub
cs
in
(bad)
sbb
bound
into
movs
mov
push
outs
out
cmps
sbb
shr
mov
fstp
popf
xor
pop
mov
adc
das
shl
clc
(bad)
and
les
sahf
in
cmp
sbb
pushf
shr
inc
push
sahf
and
adc
xor
cwde
dec
and
adc
and
sbb
cmp
fwait
mov
js
je
stos
or
mov
cmps
jecxz
mov
add
es
and
aas
test
jo
mov
mov
mov
jb
in
int3
int3
int3
into
push
sub
dec
into
pusha
std
jae
xor
xor
mov
test
xchg
and
push
dec
pop
push
lods
and
(bad)
aas
and
(bad)
push
pop
fcomi
mov
fild
mov
adc
retf
dec
dec
dec
cwde
(bad)
adc
rcr
(bad)
je
aaa
dec
shl
xor
push
fcmovbe
jge
push
xor
mov
in
les
xchg
aaa
push
and
push
ins
push
scas
push
pop
push
mov
inc
fwait
addr16
mov
popa
cmps
mov
mov
push
call
retf
ja
call
mov
jmp
sub
push
not
xchg
call
stos
hlt
pop
fistp
test
xchg
ins
or
hlt
(bad)
cmp
fwait
adc
ds
sub
call
pop
cmp
jmp
mov
or
bound
mov
ins
jge
stc
jae
mov
shl
mov
dec
stos
jp
popa
sbb
in
sar
mov
(bad)
pop
mov
hlt
cmc
ss
hlt
xchg
and
dec
add
sub
icebp
aaa
fwait
sbb
push
aam
mov
out
test
test
outs
push
popa
cmp
inc
sub
dec
addps
cmp
inc
movs
dec
aad
or
cmps
mov
push
jbe
lea
jmp
adc
jno
test
test
push
sub
cmp
jno
mov
sahf
fmul
mul
jmp
leave
pop
in
neg
pop
dec
scas
inc
(bad)
fldenv
fwait
je
cs
xor
fld
loop
inc
mov
mov
adc
sub
icebp
stos
unpckhps
into
dec
retf
dec
push
mov
xlat
pop
mov
aas
lods
push
(bad)
push
mov
fwait
outs
or
mov
ja
dec
test
jl
push
call
sub
aaa
push
mov
test
hlt
(bad)
mov
cmps
mov
imul
ins
int
mov
fisttp
push
sbb
and
out
stos
push
lea
xor
xchg
jle
pop
pop
xchg
xchg
fisubr
inc
mov
jbe
out
xchg
pop
pop
or
jmp
aad
cmps
mov
cmc
sub
pop
lods
ins
mov
pop
jb
jne
mov
cmps
movs
(bad)
retf
and
pop
cmp
rcl
mov
mov
dec
sub
jecxz
jmp
pop
xor
jno
movs
leave
leave
mov
push
mov
or
mov
or
jmp
(bad)
mov
adc
(bad)
mov
push
jmp
adc
out
(bad)
pop
ret
test
call
mov
arpl
sti
add
les
pop
xor
sub
fcmovbe
movs
dec
popa
jae
push
fadd
repnz
out
repnz
xchg
xchg
mov
xor
retf
jmp
pop
inc
sub
ss
xor
cmp
and
dec
fiadd
cmp
stos
int
pop
pop
xor
adc
pop
out
jne
jno
inc
fcom
test
rol
outs
push
(bad)
adc
ret
fdiv
test
xchg
out
lea
aas
inc
add
adc
add
add
add
add
add
add
add
adc
adc
xor
and
inc
push
add
xor
inc
popa
jno
(bad)
fiadd
or
add
add
add
jmp
imul
gs
retf
icebp
dec
push
aas
sbb
xchg
mov
movs
push
inc
adc
and
pop
pop
mov
cmp
xor
test
pop
js
mov
lock
pop
lods
sar
mov
repnz
mov
xor
ficom
les
into
cmp
sub
aad
aad
jns
or
test
shl
sbb
jnp
xchg
out
int
pop
pop
mov
in
scas
add
push
jb
jnp
loope
clc
jbe
stos
lock
into
movs
mul
pop
mov
leave
cmps
fnstenv
jle
lock
adc
adc
gs
pop
xor
pop
jns
in
das
add
xor
ds
jl
dec
aam
(bad)
lds
lds
out
fldcw
push
cs
cmps
scas
inc
ficomp
pop
sub
imul
lods
push
mov
dec
jb
fdiv
adc
mov
inc
pop
sub
mov
lock
mov
popa
jecxz
sbb
jmp
xchg
xchg
adc
mov
arpl
dec
pop
addr16
(bad)
retf
les
cmp
(bad)
hlt
(bad)
push
test
push
es
sbb
fmul
push
cmps
iret
or
sti
cmp
sbb
sbb
pop
retf
push
lahf
fst
scas
mov
mov
sub
pop
mov
mov
add
lock
push
mov
sar
test
push
push
push
in
inc
in
outs
lock
test
(bad)
sbb
loopne
adc
adc
hlt
(bad)
out
loopne
inc
enter
or
call
pop
mov
mov
mov
or
outs
popf
or
cld
sbb
adc
retf
xchg
arpl
and
dec
cwde
test
mov
push
sub
mov
enter
mov
call
dec
ss
inc
(bad)
lock
ins
call
and
push
mov
adc
ins
std
jb
dec
xchg
xchg
aaa
pop
test
inc
data16
(bad)
arpl
iret
inc
in
and
or
retf
fs
adc
adc
jle
cmp
test
std
cmp
hlt
fist
jmp
xor
inc
lods
inc
dec
mov
adc
lds
retf
sar
jp
cs
push
xchg
and
aas
inc
pushf
jge
ss
jno
je
pop
movs
movs
(bad)
jl
mov
das
adc
pop
das
sbb
adc
mov
es
clc
mov
fwait
nop
mul
shl
jae
inc
jmp
clc
data16
rcl
sub
dec
fisttp
addr16
sub
xor
cmp
imul
push
and
xor
retf
and
xor
sub
mov
sub
inc
xchg
je
inc
call
sbb
(bad)
scas
(bad)
cwde
retf
addr16
aas
ds
xchg
inc
push
inc
mov
aas
adc
cmp
mov
std
scas
dec
movs
inc
inc
in
mov
push
ja
call
(bad)
push
hlt
nop
(bad)
ffreep
aad
dec
sar
and
mov
push
mov
xor
enter
int3
jp
fs
fs
movs
sub
imul
mov
cmp
lock
aad
mov
cmp
mov
imul
std
inc
loope
fs
and
cmp
jl
lods
imul
xor
sub
mov
inc
xor
xchg
push
test
jno
push
stc
mov
sbb
inc
mov
test
pop
call
xchg
jb
xchg
xchg
mov
mov
stos
out
adc
push
loopne
leave
dec
mov
arpl
sub
push
call
outs
in
jb
or
and
inc
jge
lahf
lods
jno
push
stos
out
mov
inc
jecxz
mov
ja
sahf
cmps
(bad)
inc
inc
outs
hlt
lea
int
or
mov
je
in
sbb
push
repnz
sub
xchg
bound
(bad)
leave
jmp
xor
aam
es
ins
pushfw
mov
aaa
mov
lea
xchg
in
stc
inc
(bad)
xor
adc
fld
sbb
repnz
lea
ss
dec
loopne
mov
pop
push
pop
(bad)
ins
mov
mov
fist
inc
bound
sbb
adc
sub
sub
pop
js
les
xor
add
add
add
add
add
add
add
add
add
adc
add
and
xor
inc
push
adc
inc
popa
jno
adc
shl
and
push
pusha
xor
aas
add
add
in
mov
cmc
imul
sti
pop
loopne
js
pop
dec
mov
mov
or
jl
data16
mov
jle
adc
bound
xchg
mov
lock
sub
idiv
sub
sahf
adc
xchg
aam
jno
bswap
jns
outs
xor
jnp
gs
sub
(bad)
or
and
pop
mov
jecxz
push
ds
leave
cmps
clc
das
sar
cmp
cmp
out
push
loopne
or
jmp
mov
in
(bad)
jecxz
jp
mov
jns
daa
xchg
push
adc
in
mov
mov
mov
adc
add
inc
sti
ins
mov
mov
les
bound
jmp
and
push
push
pop
adc
mov
in
jp
adc
ror
xchg
inc
or
and
push
and
push
sub
jp
mov
xor
arpl
daa
xchg
jmp
adc
sbb
lods
aaa
clc
unpckhps
rcr
fs
ins
ins
arpl
mov
sub
sbb
ss
(bad)
xchg
aas
mov
lea
ins
xchg
fstp
int3
jae
mov
xor
imul
cmp
sbb
cmc
imul
push
jo
sub
xchg
jns
lods
fbld
push
rcl
lock
adc
adc
sbb
aaa
and
jl
jmp
pop
fmul
or
scas
in
dec
cmp
aam
fwait
lods
inc
ret
ja
in
inc
jg
fild
push
pushf
loop
mov
mov
in
adc
loope
out
idiv
lods
mov
in
jp
lods
ret
xrelease
xchg
lds
scas
out
out
xchg
addr16
push
lods
sar
pop
sbb
gs
loopne
mov
pop
outs
sahf
aam
pop
retf
outs
and
shr
lea
(bad)
sti
div
fdiv
xchg
loope
out
jl
pop
mov
outs
push
push
jnp
sbb
test
mov
in
jns
mov
mov
ror
arpl
mov
jge
cmp
xlat
xchg
(bad)
stc
push
fwait
push
mov
jl
push
dec
imul
loop
sub
mov
leave
stos
test
in
mov
sbb
(bad)
pop
gs
aas
outs
(bad)
cmp
loope
cmp
shl
dec
call
add
movs
in
in
pop
daa
leave
sbb
sar
retf
ds
sahf
iret
jno
inc
xlat
(bad)
mov
sub
push
inc
clc
push
jne
inc
sar
mov
xchg
stc
cmp
xor
xchg
in
imul
jp
aam
cmp
jne
mov
clc
xor
push
js
in
adc
icebp
and
add
mov
or
jg
cld
xor
je
xor
aam
mov
in
lahf
shr
aas
aam
out
mov
sub
pop
xchg
in
loopne
icebp
iret
jae
inc
out
sub
test
retf
ins
ror
cwde
xchg
clc
xor
jns
jmp
sar
test
out
stos
test
pop
dec
retf
mov
adc
mov
push
shl
push
mov
sar
movs
mov
in
icebp
pop
lods
outs
mov
dec
mov
pop
les
nop
loope
cmp
inc
mov
and
std
mov
add
in
mov
jb
clc
call
retf
mov
mov
adc
ja
mov
inc
movs
enter
loope
aaa
inc
(bad)
int
sub
out
sbb
adc
push
and
sub
stos
mov
jb
data16
pop
adc
or
daa
jns
mov
ja
sbb
sub
fsubr
mov
sbb
adc
mov
aaa
out
test
cli
(bad)
inc
add
add
add
add
push
add
push
add
add
add
add
add
adc
inc
adc
push
popa
adc
xor
inc
jno
add
inc
push
xchg
mov
xor
loope
and
adc
mov
push
ret
add
add
add
aas
add
sar
mov
clc
and
push
inc
push
push
dec
(bad)
mov
fadd
out
inc
mov
and
mov
pop
push
jecxz
or
test
xor
out
add
xor
fcom
sbb
lock
cmp
movs
jbe
in
add
mov
sub
xchg
ss
mov
(bad)
lea
or
ror
pop
push
out
adc
mov
cmps
ds
mov
mov
mov
outs
fistp
dec
(bad)
mul
stos
adc
repnz
adc
or
mov
scas
or
add
mov
mov
shr
int3
sub
pop
inc
adc
xchg
retf
mov
cmp
jp
mov
mov
adc
xchg
and
push
(bad)
mov
sbb
jae
call
pop
cmp
inc
mov
clc
pusha
add
push
mov
enter
mov
clc
cmps
push
clc
fistp
(bad)
loope
sahf
(bad)
fisttp
in
mov
in
mov
ret
fidiv
nop
inc
lahf
mov
fbstp
sub
jns
xor
mov
adc
ja
xor
leave
and
jbe
rol
shl
or
jmp
mov
xor
ja
imul
outs
arpl
jno
addr16
or
addr16
xor
push
out
pop
sub
mov
cmps
shr
inc
mov
lea
fadd
mov
mov
xor
repz
sbb
add
sbb
add
xor
mov
(bad)
retf
fst
and
xor
sbb
lock
dec
movs
fs
aaa
dec
std
adc
adc
and
rol
sub
ins
dec
add
inc
mov
hlt
cli
test
out
popf
dec
fs
sbb
call
inc
mov
jo
(bad)
hlt
push
fidiv
lods
pop
pop
sub
ins
pop
outs
inc
xor
test
mov
fstp
stos
sub
test
in
addr16
ja
gs
mov
xchg
mov
xchg
inc
ja
test
retf
sub
sub
fist
sbb
not
cwde
or
add
test
inc
mov
call
clc
mov
mov
jae
cmps
int
mov
sbb
sub
inc
rol
sbb
movs
das
jl
call
sysexit
das
shr
inc
aad
cs
leave
add
xor
outs
pop
pop
lss
xlat
test
addr16
hlt
sub
(bad)
or
xor
sbb
jle
iret
aad
outs
data16
pop
add
(bad)
mov
cmp
jp
and
sbb
cmp
sbb
pop
fs
loop
sbb
and
enter
jmp
jbe
addr16
fld
jnp
jmp
(bad)
in
sub
jae
push
xor
mov
popa
mov
jno
rol
jecxz
mov
or
dec
pop
rcl
(bad)
xchg
std
in
popf
xchg
aad
mov
or
sub
mov
dec
rcr
popa
ficomp
push
sbb
mov
xor
sub
ret
mov
mov
xor
das
and
or
jns
fucomip
test
mov
jae
aam
jnp
lock
cmp
fs
xchg
sbb
sar
and
call
adc
aaa
fsub
aad
arpl
mov
jecxz
adc
sbb
inc
ins
stc
lods
pop
inc
xchg
mov
mov
shr
or
dec
fcmovu
xchg
inc
mov
mov
xlat
outs
add
push
cmp
cld
xchg
(bad)
(bad)
call
add
inc
addr16
jno
cmp
test
outs
cwde
dec
mov
ret
cmps
fcmovb
jo
inc
fcomp
(bad)
fnstcw
cwde
lods
push
mov
dec
loope
sahf
stos
and
or
add
sti
mov
pushf
and
cld
shr
jb
and
sub
addr16
inc
loope
pop
jg
and
pop
retf
js
xchg
sahf
sbb
cwde
mov
lea
clc
xchg
adc
gs
(bad)
mov
xchg
cmc
mov
pop
and
(bad)
mov
pop
retf
mov
lods
xchg
sub
(bad)
std
or
or
mov
dec
popa
repnz
pop
daa
inc
mov
jno
xlat
jmp
ins
xchg
imul
sub
inc
inc
dec
fistp
aad
in
jbe
int
inc
fcomp
sbb
and
(bad)
icebp
ret
jg
call
nop
push
stos
push
sti
mov
aad
and
pushf
out
pop
add
dec
mov
imul
inc
outs
push
cmc
xchg
ficom
das
pop
push
cli
test
jp
fiadd
test
jge
lea
stos
inc
sti
lods
jne
addr16
jg
lock
xchg
push
and
xor
push
out
rep
test
push
sbb
sahf
scas
add
mov
mov
inc
ja
sub
cmp
jno
xchg
and
jb
xor
jne
int
into
sti
push
shl
jne
ins
(bad)
cmp
inc
add
ds
rcr
push
pop
jl
call
add
sub
cmp
sahf
or
jle
inc
shl
mov
mov
lahf
stos
cmc
lahf
rol
pop
std
xchg
sbb
mov
lods
jle
div
clc
arpl
xchg
xor
(bad)
and
cs
ret
and
xchg
jne
pusha
int3
push
mov
mov
call
or
mov
xor
icebp
pop
mov
dec
call
ret
(bad)
addr16
pop
clc
into
adc
repnz
mov
dec
jo
(bad)
int
repnz
test
xchg
push
mov
lea
inc
jae
jnp
cli
sub
pop
push
sbb
mov
fist
loopne
in
nop
lods
aam
mov
gs
mov
leave
outs
sbb
jmp
pushf
mov
pop
shl
mov
leave
or
jb
fmul
adc
mov
mov
test
repz
mov
add
in
imul
lock
pop
add
ror
cld
adc
lods
lods
xchg
mov
xchg
mov
pop
es
ret
hlt
sub
push
push
sbb
sub
ror
xor
lods
jecxz
imul
arpl
fcompp
sub
cmps
jmp
jmp
push
call
sbb
xchg
out
dec
inc
popa
push
repnz
jl
call
or
or
adc
xlat
inc
mov
pop
mov
imul
mov
and
daa
ds
cmps
xor
add
or
div
push
sub
mov
add
add
loope
int
bound
icebp
jae
dec
pop
fist
sar
es
in
jae
dec
mov
pusha
dec
xchg
push
pop
adc
mov
cmp
sahf
(bad)
mov
(bad)
popa
(bad)
sbb
add
and
inc
in
mov
les
fwait
xor
sub
pop
jnp
test
adc
fst
jmp
(bad)
jmp
aas
ret
push
lahf
loopne
(bad)
out
mov
mov
retf
xchg
loope
(bad)
out
jae
iret
cs
out
mov
femms
dec
std
jecxz
push
pop
xor
mov
mov
cwde
rcl
fwait
sbb
xchg
cmp
loopne
test
mov
not
fnstcw
push
xor
outs
in
lods
inc
pop
mov
add
jno
gs
inc
sub
mov
sub
add
xor
or
cmps
and
and
test
in
jo
sbb
ficomp
lea
push
pop
mov
shr
add
fucomi
inc
and
ds
rcr
xlat
mov
int
pop
icebp
sbb
sub
xchg
xchg
aad
mov
fxch
stc
in
jno
dec
rol
aam
cmp
mov
(bad)
xor
adc
aaa
push
fstp
test
fmul
in
mov
pop
and
cmp
sub
pop
repz
retf
cmps
sar
lods
jmp
mov
mov
cmp
or
call
push
sbb
pop
mov
mov
mov
neg
mov
es
mul
pop
in
test
xchg
in
xchg
mov
fs
movs
cld
inc
mov
jg
popf
jmp
xor
js
mov
adc
in
push
rcl
sbb
push
mov
and
sub
pop
xchg
lods
inc
pop
(bad)
push
mov
js
mov
imul
aad
sahf
(bad)
jmp
sub
pop
fidiv
fimul
pop
pop
in
mov
inc
add
repnz
nop
fdivr
int
push
cmps
or
pop
dec
inc
cmps
ds
xchg
push
sbb
aam
inc
mov
mov
das
cs
into
inc
jo
jb
gs
push
mov
xchg
clc
push
xor
daa
mov
(bad)
loopne
fidivr
cmp
xchg
cmp
cmp
adc
xchg
sbb
sub
movs
test
not
cmp
nop
aad
out
cld
ins
in
test
cmp
daa
sti
cmp
or
and
pop
inc
jae
cmc
xor
aas
inc
daa
in
mov
retf
mov
test
repnz
mov
sbb
xchg
popa
aaa
in
dec
dec
ror
cmp
mov
pop
add
call
jg
aam
aad
fiadd
jno
mov
aas
iret
gs
in
sub
and
fisub
pop
aad
or
cmp
mov
repnz
jp
xchg
fcomp
dec
jle
mov
mov
in
cmp
ds
in
lea
push
imul
pop
sub
jo
fwait
jns
movs
repnz
pushf
test
dec
in
movs
movs
cmp
and
pop
jmp
pop
fwait
cli
cli
mov
push
jmp
jle
jg
sbb
inc
loopne
jbe
aad
int3
aad
push
aaa
mov
iret
ins
jl
jno
pop
xor
call
xchg
mov
and
pop
in
test
ret
sbb
mov
mov
or
sub
outs
pop
gs
xor
cmps
(bad)
enter
arpl
repnz
(bad)
xor
lods
xchg
pop
cmp
sbb
sbb
jae
push
pop
out
into
pop
push
out
aam
sub
stc
stos
jnp
cld
dec
pop
or
lahf
and
mov
in
jp
loop
xor
xor
stc
mov
sti
loopne
add
in
pop
mov
or
jno
and
out
ret
mov
inc
pop
lods
leave
xor
hlt
inc
xchg
mov
xchg
xlat
mov
push
jle
pop
aad
lock
xchg
cdq
cmp
fidivr
sti
pop
pop
jg
cdq
sub
push
fs
push
out
jbe
push
leave
outs
movs
mov
cmps
daa
fs
cmp
fistp
scas
movs
cs
loop
mov
test
jns
and
mov
pushf
add
jno
jne
mov
aas
adc
scas
jae
xchg
mov
mov
imul
xchg
dec
sub
sbb
pop
sub
dec
or
enter
leave
mov
les
leave
pop
fs
in
adc
test
adc
(bad)
arpl
hlt
(bad)
adc
adc
adc
sub
pop
push
inc
scas
retf
test
shl
call
xchg
jns
dec
jo
add
mov
cmp
imul
loope
test
or
sub
inc
mov
inc
or
jbe
sbb
ss
enter
mov
mov
mov
mov
xchg
add
jo
dec
ret
fisttp
(bad)
xchg
push
cmp
adc
idiv
and
iret
adc
jno
xlat
das
push
adc
xchg
xchg
ret
push
std
mov
clc
stc
mov
in
ret
in
pop
call
add
add
push
push
test
inc
xor
(bad)
lahf
je
rol
mov
jb
fdiv
(bad)
adc
mov
mov
or
jb
ins
mov
fstp
leave
addr16
mov
bound
xchg
adc
sub
mov
mov
cs
xor
and
int
sbb
xchg
or
and
pop
sub
sub
(bad)
add
add
ret
aam
mov
xchg
(bad)
pop
inc
das
adc
adc
fldcw
movs
adc
or
lods
repnz
or
push
popa
pop
repnz
push
fst
sbb
jns
ins
idiv
push
sub
inc
daa
ret
imul
test
leave
pop
gs
pop
dec
and
out
sbb
inc
jge
cmp
movs
hlt
mov
das
or
xchg
mov
inc
xchg
call
movs
rol
cwde
outs
mov
sbb
mov
mov
sbb
add
add
pop
test
dec
jne
dec
clc
stos
cmc
push
sub
mov
imul
push
fcmove
mov
inc
and
push
shl
repnz
test
sub
outs
push
mov
scas
aam
mov
popa
mov
enter
iret
test
adc
dec
mov
and
ja
das
jge
cmp
fldcw
inc
jbe
sub
fs
mov
lods
jg
cmp
jl
xchg
mov
jnp
mov
push
xchg
jecxz
sbb
inc
ret
xor
mov
mov
fisttp
jl
enter
imul
mov
adc
xchg
lds
loope
mov
cmp
mov
push
imul
out
and
fstp
imul
pusha
icebp
cmp
je
or
fild
in
in
scas
xor
jo
jae
jle
cmp
mov
inc
push
or
mov
lahf
add
mov
add
jnp
xor
fisubr
jae
ror
int
(bad)
and
pop
mov
stc
ret
mov
dec
sahf
icebp
jge
mov
push
test
mov
lods
adc
leave
push
jg
push
xchg
icebp
cwde
repnz
cmp
cld
inc
push
pop
lock
imul
idiv
push
add
jb
cdq
xchg
or
pop
mov
push
test
addr16
sahf
xchg
add
lea
push
pop
lahf
repnz
scas
xchg
jge
add
adc
mov
cmp
or
or
adc
dec
nop
xchg
pop
or
retf
ins
xchg
sbb
jne
cmp
es
mov
pop
jle
int
and
nop
inc
pop
pop
jb
retf
mov
add
inc
ss
or
dec
push
xchg
popf
cmp
or
add
fistp
nop
inc
xor
push
pop
sub
cmp
popf
push
cmc
int
mov
or
lock
and
pop
cmp
ins
enter
push
mov
movs
lods
adc
jb
xor
mov
idiv
add
rcl
sub
adc
jbe
dec
call
jecxz
xor
mov
or
xchg
xor
mov
adc
fimul
sahf
stos
cmp
dec
xchg
int3
arpl
xchg
mov
cs
sub
loop
xor
pop
mov
repnz
fcom
pop
out
cmp
out
sub
or
ret
sbb
neg
ror
jl
ds
call
add
mov
jmp
loopne
inc
aaa
or
arpl
ds
xlat
int
mov
xchg
int
es
jg
inc
les
lock
push
(bad)
and
fs
sub
dec
xor
popf
mov
call
imul
lods
std
pop
dec
inc
jno
inc
jmp
imul
mul
ss
mov
lock
xor
jecxz
int
scas
xor
lock
dec
cs
or
xor
xor
(bad)
sub
sbb
jae
arpl
dec
int
mov
mov
ins
fwait
stos
jb
add
les
push
inc
mov
jl
sub
sbb
test
fdivrp
sub
jo
inc
aad
cdq
sti
ins
shr
xchg
mov
adc
ss
xor
sbb
shl
movs
adc
aaa
push
sub
cmp
sbb
xchg
push
outs
clc
jbe
or
daa
push
pop
xor
inc
cs
fdiv
inc
fstp
loopne
inc
push
retf
int
mov
mov
dec
fs
cmp
pop
xor
(bad)
inc
enter
pop
mov
std
or
push
mov
mov
jns
xor
ins
xchg
call
inc
mov
(bad)
in
gs
dec
out
out
dec
jl
pop
pusha
(bad)
addr16
xor
ds
xchg
sub
mov
ins
fsubr
dec
mov
outs
(bad)
mov
hlt
xchg
jecxz
push
daa
mov
js
mov
add
scas
gs
mov
xchg
out
or
sub
push
push
xchg
pop
imul
bound
xchg
mov
fwait
jno
enter
cmp
push
retf
jbe
stos
fbstp
nop
fwait
adc
loope
push
mov
test
or
loop
xchg
and
test
ja
stos
loope
pop
inc
cmps
es
clc
ret
jo
pop
adc
mov
hlt
inc
and
mov
adc
ins
and
xchg
lahf
in
xchg
mov
mov
push
lahf
call
pop
pop
add
jecxz
popa
or
cmps
jecxz
inc
ret
(bad)
mov
push
iret
test
mov
jb
addr16
inc
test
stos
jp
adc
xor
cmp
pop
or
sbb
sahf
pop
out
enter
adc
std
adc
push
cmps
xor
mov
test
jg
add
ficom
stos
or
push
pop
mov
ja
xrelease
inc
js
movs
ror
cmp
cmps
push
std
push
add
aad
aad
or
mov
mov
loope
dec
or
mov
and
and
jo
sub
mov
and
fs
or
cmp
xchg
jne
dec
sbb
mov
(bad)
je
and
fdiv
ret
(bad)
and
fcomp
hlt
inc
lods
mov
mov
mov
sbb
imul
lea
aad
sub
jbe
cmp
pop
sbb
sar
fadd
cmp
stc
test
outs
jp
arpl
cmp
aaa
push
out
xchg
fwait
mov
jge
scas
stc
sub
shr
push
jmp
mov
sub
fst
mov
(bad)
retf
mov
mov
xchg
shl
xchg
addr16
fbld
push
lahf
inc
push
shr
adc
outs
(bad)
xchg
stos
scas
add
jle
push
push
test
movs
je
cmp
out
sti
cmp
mov
call
lds
lds
fisub
sub
dec
in
test
sahf
jmp
js
xor
and
cwde
shl
xchg
mov
cmp
pop
mov
out
in
aaa
pop
lahf
inc
xor
in
cmps
sbb
js
test
jbe
jb
cmp
cs
adc
stos
or
mov
dec
add
or
xchg
push
inc
cmp
ins
imul
mov
inc
mov
xor
jmp
pop
dec
aaa
push
mov
cmp
scas
fwait
or
jg
or
xor
mov
xor
inc
xchg
jno
push
cmps
inc
push
or
push
pop
pop
fwait
jb
xchg
inc
(bad)
cmp
clc
inc
xchg
daa
mov
pop
arpl
mov
xlat
xor
ins
xchg
and
scas
adc
sbb
jl
push
retf
pusha
cmps
retf
xchg
movs
cmp
jne
add
out
sub
xchg
jmp
sub
cmps
mov
cmp
cmp
ins
sti
or
jnp
arpl
and
add
inc
sub
aad
mov
adc
daa
xchg
imul
repz
inc
jnp
aaa
sub
pop
cmp
pop
dec
lea
inc
add
fnstsw
or
dec
inc
and
or
pop
sub
inc
lds
test
stos
mov
mov
cmps
cdq
icebp
sub
rcr
cmp
add
jmp
jmp
into
outs
daa
xor
push
gs
mov
fst
jb
adc
push
mov
daa
and
xchg
sbb
xchg
aam
loope
dec
popf
int
jle
fs
jb
sub
cli
jne
pop
cli
test
sbb
dec
cmp
xor
call
xor
addr16
mov
adc
cmp
daa
arpl
and
fcmovu
cwde
xlat
mov
xchg
div
sbb
add
jecxz
test
xchg
test
pop
xchg
popa
jbe
jns
lods
dec
retf
inc
xchg
pusha
neg
dec
cmps
mov
not
lahf
out
push
lahf
or
cmp
jb
retf
popa
(bad)
lea
(bad)
arpl
retf
test
hlt
push
sub
dec
add
ficom
fistp
jmp
mov
or
dec
pop
into
xor
retf
xchg
loopne
push
aam
fs
dec
adc
call
sti
pop
loopne
xchg
not
adc
cmp
inc
js
repnz
imul
scas
and
hlt
fdivr
cmps
mov
loopne
xchg
ret
mov
cmp
or
add
xchg
mov
or
loope
sub
push
out
cmps
mov
(bad)
pop
cli
test
jmp
scas
and
jno
fld
sbb
cmps
cmp
mov
test
xor
pop
and
movs
outs
pop
xor
sbb
out
imul
inc
push
cs
jno
cwde
lds
pop
inc
int
repz
fnstenv
xchg
or
div
ret
ja
pop
mov
jle
push
fadd
cmp
push
outs
retf
dec
jle
sbb
ja
outs
inc
not
out
pushf
js
addr16
add
stc
and
mov
pop
pop
repnz
int3
sub
pop
loop
push
fidiv
cs
sar
and
js
pop
ret
rcl
pusha
enter
cmp
int
or
jae
jmp
lods
retf
jle
js
fwait
xchg
jne
js
xchg
jl
cmp
mov
inc
repz
dec
(bad)
and
pop
scas
jmp
ds
jle
pop
(bad)
mov
sbb
and
mov
dec
sbb
mov
inc
sahf
icebp
in
sub
xchg
pop
shr
inc
into
std
push
popa
leave
ret
mov
push
icebp
mov
js
adc
push
jnp
ficom
popf
aad
add
sti
sbb
jo
nop
sub
fcomp
push
loopne
outs
retf
cmp
test
inc
xchg
neg
jns
mov
es
pop
adc
ficomp
repnz
cmc
mov
repz
sub
pop
ret
movs
hlt
pushf
pop
xchg
mov
pop
fxch
sub
fst
(bad)
test
push
sbb
aam
xor
nop
dec
repnz
mov
mov
mov
sub
stos
cmp
push
faddp
sub
pop
mov
push
mul
xchg
xchg
fcom
and
les
fs
repnz
mov
push
movs
xchg
mov
mov
aad
iret
loopne
outs
sbb
add
adc
or
mov
jl
aad
int3
ret
jne
(bad)
push
mov
mov
icebp
inc
loope
je
mov
pop
sbb
repz
fisubr
(bad)
and
push
neg
rcr
push
jmp
jns
inc
adc
pop
push
xchg
jb
adc
sbb
das
gs
cmp
dec
xlat
mov
sbb
mov
scas
cli
lock
imul
scas
(bad)
xor
and
push
mov
dec
in
mov
cwde
ins
lods
add
fnstcw
jbe
mov
loope
pop
pop
aaa
and
(bad)
xor
mov
call
pop
adc
rsm
adc
or
cmp
or
in
(bad)
ds
sti
aaa
pop
pop
in
lock
hlt
in
dec
fadd
jecxz
out
cmp
dec
pop
loopne
ret
cmc
pop
sbb
(bad)
in
out
or
jb
add
add
push
jmp
repnz
jb
mov
fwait
jno
jp
mov
mov
push
xchg
xchg
loop
dec
out
stc
jbe
pusha
pop
jo
jns
xchg
mov
and
les
(bad)
cmp
in
jge
jae
stos
inc
pusha
in
xor
aam
jae
fsub
int3
and
(bad)
adc
outs
lods
out
out
stos
xchg
jo
cmp
and
mov
out
and
mov
lahf
xor
pop
fldl2t
stc
mov
pop
call
add
push
call
dec
dec
test
mov
bound
fnstcw
sub
mov
pop
pop
std
int
xchg
mov
push
lahf
xor
mov
int3
ss
sub
arpl
sub
xchg
not
xchg
inc
jecxz
fsubr
xor
mov
int3
xor
aad
inc
and
or
and
add
outs
sbb
int3
icebp
pop
xor
test
imul
push
shr
clc
lods
cmp
pop
(bad)
cld
jb
or
aad
pop
popa
cmps
leave
jno
and
mov
dec
jl
push
jnp
inc
movs
inc
pop
push
int
xor
jmp
adc
push
stos
sar
add
outs
stos
fsubr
mov
test
mov
sub
in
es
pop
pop
mov
xor
pop
and
add
ins
es
(bad)
jo
xchg
lods
lods
push
lods
out
or
jae
cmps
mov
loope
fcomp
jecxz
leave
inc
pushf
jnp
push
and
and
sub
(bad)
push
jns
and
lods
repz
inc
cs
aad
stc
sub
out
xor
jmp
les
xchg
mov
or
adc
in
and
cvtpi2ps
movs
mov
dec
(bad)
stos
ret
sbb
daa
inc
jp
jno
mov
fdiv
xchg
(bad)
call
retf
imul
push
dec
test
lock
lds
add
fisub
or
inc
lds
(bad)
call
cdq
imul
sbb
push
cmp
dec
movs
(bad)
mov
lods
outs
xchg
xor
sub
into
(bad)
call
movs
fiadd
dec
sbb
test
mov
dec
les
or
shl
call
out
dec
mov
inc
leave
jo
pop
sub
pop
sbb
leave
dec
lahf
scas
imul
inc
into
outs
dec
cmp
add
out
add
dec
xchg
add
cmp
imul
and
xor
inc
mul
je
mov
cmp
push
mov
mov
add
jge
and
lods
pop
ret
ins
cmc
fsub
dec
hlt
test
std
aam
aaa
mov
cmp
jl
sbb
xchg
out
inc
mov
or
sbb
dec
adc
xchg
push
aaa
retf
mov
mov
sbb
sub
jne
imul
stos
sbb
jnp
fld
and
mov
(bad)
push
imul
(bad)
dec
adc
dec
shl
out
mov
jno
ret
mov
jecxz
jbe
adc
cmps
retf
inc
mov
call
popf
(bad)
int
pop
push
mov
imul
push
xchg
sub
or
sbb
rcr
test
sub
icebp
push
pop
push
test
sahf
mov
jne
fisubr
jle
mov
jg
inc
xor
mov
inc
cwde
mov
stos
add
popf
jae
rol
(bad)
imul
or
xlat
test
push
or
push
out
xor
pop
xor
(bad)
(bad)
and
push
inc
jmp
cmp
callw
lock
jne
push
fdivr
mov
inc
pop
or
adc
add
leave
aaa
mov
popa
jne
jg
adc
imul
cli
sub
add
sub
setb
and
clc
push
pop
dec
inc
mov
or
loopne
inc
rol
dec
mov
mov
mov
jne
jge
inc
mov
rol
stos
xor
mov
std
enter
add
cmp
jae
and
(bad)
xor
jbe
jae
or
mov
mov
or
and
sahf
jmp
bound
add
bound
dec
aad
add
sub
jno
and
mov
mov
jb
fdivr
int
sub
and
and
add
cmp
inc
imul
dec
cs
sub
jo
adc
add
adc
mov
mov
push
and
or
test
leave
cmp
cmp
les
sub
add
add
add
add
add
add
add
add
add
and
inc
push
popa
adc
xchg
mov
shl
icebp
xor
fiadd
or
add
add
and
jae
dec
and
inc
icebp
ss
dec
movs
or
push
push
xchg
in
fcom
les
sub
xor
cmps
push
xchg
jle
push
jp
inc
sub
aam
sbb
(bad)
cmp
add
pop
mov
retf
add
sub
jge
int3
mov
scas
jae
and
mov
ret
push
cmps
aad
and
(bad)
leave
test
sbb
sbb
lea
mov
adc
mov
xchg
mov
cmp
sub
iret
lock
mov
out
or
ret
sub
xor
xchg
not
rol
fwait
cwde
jns
popa
sub
popa
cmp
ja
cmc
or
xlat
or
and
mov
xchg
(bad)
mov
push
pop
and
data16
ret
call
jl
aaa
push
mov
xchg
rdpmc
and
ja
push
push
inc
mov
lods
repz
mov
sub
daa
xchg
inc
push
out
jno
adc
(bad)
push
cmc
pop
jno
push
scas
dec
hlt
scas
inc
mov
enterw
pop
aam
push
sti
popa
push
ficom
addr16
dec
adc
add
sbb
jo
jae
retf
jno
jae
cmp
xor
xchg
rol
or
addr16
lods
out
xor
pop
and
jp
addr16
sbb
push
pushf
(bad)
mov
add
shr
call
cmps
bound
div
sbb
sti
inc
xor
test
mov
lods
inc
jl
test
imul
or
or
inc
push
cmp
jmp
xor
xor
rcl
mov
sbb
push
push
ins
jmp
sub
(bad)
sub
xchg
(bad)
push
ret
pusha
fs
mov
test
inc
jno
xor
dec
repnz
sbb
dec
dec
jge
xchg
into
and
or
stos
fdiv
dec
xor
mov
jl
ffreep
inc
mov
arpl
dec
mov
loope
int
push
sub
mov
xor
sbb
xor
jno
sbb
adc
add
dec
enter
or
cwde
xor
mov
hlt
mov
inc
pop
sub
and
retf
hlt
fild
loopne
out
push
in
fild
jmp
sbb
xchg
icebp
sub
jge
aam
cmps
mov
gs
arpl
cmp
mov
mov
adc
adc
inc
sub
push
xchg
fmul
dec
jae
jb
push
xchg
es
lods
or
inc
movs
js
call
bound
xchg
xchg
or
pop
retf
jno
mov
(bad)
xor
das
test
sub
jb
(bad)
into
xchg
shr
inc
hlt
aas
mov
and
test
dec
inc
(bad)
push
popa
sub
add
lock
ja
push
mov
int3
pusha
mov
pusha
pop
int
push
jae
loopne
adc
add
pop
jae
call
les
push
sbb
mov
bt
retf
xor
pop
mov
inc
cmc
aaa
sbb
imul
arpl
stos
addr16
lea
adc
inc
cld
sahf
pop
lods
inc
mov
mov
jns
mov
pushf
push
jns
outs
ret
in
or
add
push
dec
int3
(bad)
int3
push
jmp
push
bswap
mov
aaa
jnp
sbb
and
fiadd
dec
das
xor
dec
and
out
repz
pop
xchg
xchg
or
and
push
gs
or
int3
or
and
test
daa
or
inc
pop
jo
cmp
loop
int3
inc
fs
ret
push
rcr
leave
call
lods
cld
sar
inc
pop
setno
add
loop
inc
push
(bad)
stc
adc
or
icebp
ins
mov
lods
jnp
sbb
adc
cmps
ret
xchg
mov
pop
xor
adc
xlat
fisub
sub
pop
cli
dec
mov
popa
push
sub
scas
pop
in
(bad)
push
(bad)
jmp
xchg
fisttp
sbb
or
cmp
xor
pop
xchg
sahf
rcr
jmp
dec
iret
or
(bad)
cmps
adc
xor
mov
out
retf
inc
pop
lahf
push
loopne
mov
cmp
arpl
popa
(bad)
mov
adc
test
shl
mov
dec
or
and
adc
sbb
sub
sbb
ret
inc
add
push
sbb
xchg
sub
xchg
push
cmps
jle
xlat
stc
lea
in
push
clc
stc
aaa
jg
jo
inc
mov
fist
into
adc
je
jo
fistp
mov
add
sti
int
or
stos
ss
cmp
sbb
xchg
loop
or
out
(bad)
shl
xchg
add
pop
or
pxor
mov
arpl
push
retf
(bad)
outs
adc
xor
cmp
push
cld
inc
sub
aam
(bad)
popa
jae
dec
sub
lods
lds
cs
les
fimul
test
cdq
in
adc
sub
mov
je
fdiv
retf
xchg
lock
or
mov
aam
or
push
bound
div
retf
xchg
jnp
(bad)
and
jne
xor
in
mov
in
iret
adc
or
sbb
inc
test
mov
sar
pop
push
jo
push
repz
add
mov
add
pop
shr
push
mov
cwde
hlt
push
je
mul
ret
test
mov
sbb
movs
and
jp
inc
dec
lods
(bad)
mov
arpl
test
push
pop
dec
fwait
jno
psubq
cmp
jp
enter
push
pusha
push
daa
test
les
and
jno
inc
ja
sub
and
shr
add
mov
loop
inc
addr16
jne
jns
fcmovnbe
movs
int
cmp
jg
mov
nop
scas
or
and
adc
sbb
enterw
inc
and
xor
xchg
mov
adc
imul
jae
test
je
call
jb
movs
xchg
sbb
inc
(bad)
mov
xchg
and
pop
lods
add
push
call
xchg
lds
inc
push
ins
repz
ret
mov
loope
mov
out
dec
push
sbb
adc
cmp
mov
gs
call
or
pop
xchg
jecxz
jle
sub
retf
inc
mov
push
inc
iret
jae
icebp
add
jle
sub
jb
jae
retf
mov
push
cmp
fwait
cmp
mov
sti
mov
push
jno
int3
repnz
mov
add
xchg
fimul
dec
cwde
int3
jecxz
xchg
ficom
fs
mov
push
and
(bad)
addr16
dec
arpl
mov
das
adc
mov
or
inc
sub
mov
fisub
dec
jne
cld
jae
shl
push
mov
cmps
popa
mov
xor
sub
mov
gs
and
ds
pushf
jge
xor
push
repz
jg
test
ss
(bad)
mov
cs
ja
bound
(bad)
imul
sub
xlat
or
scas
lds
sti
nop
lds
in
jp
jo
ins
mov
push
jae
pusha
or
pushf
mov
mov
adc
movzx
repnz
jne
jl
and
cmp
push
adc
sbb
add
xor
call
jp
push
cmp
cmp
mov
jg
cmp
test
(bad)
movs
retf
xor
xor
pop
fcom
and
stc
int
cdq
sbb
lea
scas
add
stos
in
xor
inc
in
gs
ret
idiv
rol
jno
rcr
dec
aam
data16
mov
scas
mov
pop
scas
shl
(bad)
das
jmp
call
add
mov
imul
(bad)
call
dec
sbb
test
push
jne
xlat
fisubr
add
rcr
rcr
cld
(bad)
out
mov
mov
adc
sub
cmp
adc
cmp
mov
ror
xlat
jg
test
mov
dec
mov
sbb
sbb
ss
sub
xchg
jo
cwde
pusha
shr
and
push
out
xor
mov
call
je
rcr
sbb
and
cmps
add
mov
xor
add
les
outs
pop
xchg
xlat
pop
adc
cld
punpckhwd
xchg
pop
scas
pop
pop
dec
stos
imul
jno
(bad)
add
xchg
(bad)
(bad)
cdq
call
int
mov
mov
into
cli
pushf
popf
jecxz
stos
shl
ficomp
cmp
add
not
jmp
push
punpckhwd
cli
rol
mov
test
cmp
or
stc
mov
cmc
jno
ret
cmp
les
scas
jno
mov
(bad)
shr
pop
pop
movs
sub
lahf
cwde
cmp
jecxz
out
ins
xchg
sbb
(bad)
arpl
jecxz
pop
adc
push
mov
xor
aaa
xchg
jnp
cmove
shr
push
push
jmp
add
shr
popf
adc
in
mov
addr16
mul
add
dec
stc
out
xchg
scas
pop
ror
out
daa
and
cli
std
inc
mov
fisubr
add
(bad)
mov
out
xor
sbb
sub
pop
lods
add
cwde
mov
push
xchg
and
cmp
mov
sbb
scas
lods
frstor
shl
call
stc
test
jmp
aad
inc
aaa
popf
js
pop
popa
lds
loope
mov
aam
out
sub
and
jb
fist
adc
aam
call
retf
cmp
loop
dec
and
mov
jmp
adc
repnz
fdivr
movs
jl
test
dec
enter
add
mov
pusha
pop
out
arpl
loop
mov
out
jo
stos
mov
int
and
lahf
dec
jne
(bad)
repz
adc
pop
ret
stos
pushf
dec
pushf
sbb
sti
dec
jl
imul
push
imul
add
mov
pusha
inc
add
xchg
or
iret
push
sub
cld
popf
out
xor
fisub
sub
sub
xchg
fstp
in
sub
pop
(bad)
mov
xchg
xor
int
xchg
call
push
pop
aam
sub
repnz
jmp
xor
xchg
mov
mov
scas
pop
test
rol
jbe
cs
jp
arpl
pop
xchg
(bad)
xchg
sbb
xor
xor
pop
inc
pop
repz
mov
cmp
ror
sub
or
fwait
push
call
repnz
pop
outs
imul
mov
ja
add
ret
nop
sub
aad
hlt
cli
adc
es
cdq
int
inc
jecxz
lahf
sub
add
add
jmp
in
push
cmp
add
push
or
pushf
lds
inc
mov
mov
cmp
es
call
loop
les
inc
xchg
jne
int3
shl
mov
push
push
push
out
cld
dec
push
outs
clc
call
stos
imul
mov
inc
add
add
jae
xchg
push
mov
xor
and
sub
xchg
mov
punpckhbw
xor
dec
fidivr
xchg
cmp
mov
fisubr
pop
adc
cwde
or
pop
mov
dec
ror
pushf
fstp
jae
mov
mov
push
cmp
popa
fdiv
loop
(bad)
das
(bad)
popa
push
jle
cmc
or
sub
lods
inc
mov
repz
paddw
outs
xchg
bound
inc
jb
sbb
adc
call
and
jns
fisubr
jmp
mov
pop
inc
cdq
xchg
fsubr
outs
cdq
(bad)
cdq
push
and
or
xchg
test
mov
(bad)
shr
inc
adc
jbe
pop
mov
cdq
push
cmps
and
aaa
inc
or
pop
popf
pop
rol
pop
add
(bad)
cmc
lahf
les
mov
idiv
int3
push
aad
sub
mov
sbb
les
in
lock
mov
rcl
xchg
popa
sub
std
mov
int3
rcl
add
leave
lods
(bad)
loop
mov
into
adc
(bad)
in
sbb
in
out
daa
sub
sub
sub
imul
sbb
fcomp
sbb
das
mov
cdq
(bad)
loop
retf
mov
into
bound
pop
dec
hlt
test
les
mov
sbb
repnz
outs
movs
mov
das
push
popa
mov
adc
into
mov
cdq
gs
and
mov
mov
inc
xor
sbb
add
jmp
add
fist
mov
aas
leave
push
gs
(bad)
cld
dec
fild
in
or
sub
cmp
sbb
sub
pop
je
fs
js
jge
xchg
jecxz
ins
sahf
ss
gs
xchg
dec
push
lock
or
les
add
lock
sub
jo
ins
jbe
xchg
push
mov
adc
ins
and
push
retf
xor
pop
bswap
(bad)
or
sub
push
es
fcom
xchg
gs
push
inc
fcomp
addr16
mov
into
aas
adc
mov
or
pushf
(bad)
cmc
ss
push
int3
xchg
jg
cmps
sub
push
jbe
loop
dec
mov
adc
test
dec
pop
hlt
sti
rol
inc
(bad)
fisub
test
ficom
add
pusha
int
pop
cmc
sub
adc
mov
leave
mov
sbb
(bad)
retf
push
add
ins
push
and
mov
mov
je
js
pop
daa
fisubr
fwait
rcl
mov
mov
mov
ds
pop
enter
fwait
cmps
xor
daa
mov
mov
push
int3
mov
cmp
mov
int3
mov
xor
fcom
sbb
movs
jno
shr
pop
xor
xchg
pop
mov
xor
icebp
cwde
mov
in
push
js
pushf
imul
sub
mov
iret
mov
out
fidiv
jae
ret
pop
fadd
xchg
mov
xor
xlat
jne
xor
mov
mov
jmp
cmp
mov
push
sub
nop
jns
rcl
(bad)
mov
jnp
sar
out
adc
aam
pop
inc
movs
sub
jo
mov
dec
test
ror
stos
cwde
mov
(bad)
mov
fsubr
popa
ja
data16
aam
push
int
lods
addr16
mov
int3
jge
mov
or
repz
jmp
imul
pop
or
add
rcr
iret
(bad)
cmp
int
test
ror
fist
mov
xchg
mov
dec
into
pop
xor
xchg
loop
rol
daa
dec
mov
imul
pop
cdq
xor
fdiv
push
test
cmp
in
(bad)
(bad)
into
test
std
inc
xor
cmp
cs
push
mov
dec
shl
mov
data16
add
xchg
in
dec
cmp
mov
mov
cmps
adc
push
sub
mov
stos
inc
call
int
(bad)
cs
dec
mov
or
data16
dec
xor
sti
dec
ret
(bad)
sub
out
pop
mov
adc
mov
add
cwde
loope
or
push
jno
out
push
inc
fistp
mov
mov
pop
bound
cli
(bad)
not
rol
cmp
fdivr
sbb
inc
scas
hlt
ins
sti
inc
pop
dec
inc
and
call
sub
aam
out
xor
mov
shr
jge
cwde
xor
fst
jno
data16
dec
mov
int3
sbb
cdq
out
(bad)
mov
popf
mov
push
push
pushf
mov
xor
ret
(bad)
out
push
jo
jae
xor
std
(bad)
repz
stos
lods
mov
lods
mov
jle
cmps
adc
stos
or
jg
(bad)
mov
xchg
pop
data16
push
mov
shl
retf
test
pop
(bad)
cmp
sub
mov
test
arpl
movs
jbe
(bad)
or
cmps
out
pop
jecxz
neg
mov
ret
les
xor
xchg
fwait
int3
jb
mov
adc
aaa
or
pop
push
pop
js
ss
bound
mov
pushf
pop
(bad)
aam
cmp
loopne
adc
push
jno
cmp
xchg
xchg
push
clc
int
leave
sahf
rcl
mov
(bad)
mov
jno
shl
add
imul
add
stos
aam
and
cmp
(bad)
jae
aaa
leave
adc
or
fcomp
dec
inc
test
sub
call
aam
repz
adc
ins
mov
call
cwde
cmp
add
mov
add
movs
data16
scas
cdq
xchg
pop
loop
adc
ror
test
je
data16
das
adc
dec
int3
xor
jno
das
mov
pop
in
outs
mov
add
jno
ret
add
lahf
movs
pop
je
dec
je
and
ss
out
push
fwait
push
js
jbe
shl
test
pop
sub
jle
add
lods
arpl
cdq
into
movzx
int
xor
test
pusha
jbe
sbb
jno
shl
mov
int3
rcr
cmc
xchg
sbb
push
data16
push
dec
jno
pop
pop
adc
iret
cdq
xor
mov
bound
push
dec
(bad)
nop
icebp
fwait
out
add
je
xchg
mov
xor
xor
sub
call
jno
(bad)
sbb
popa
xchg
push
int3
mov
lods
dec
(bad)
out
ss
xor
xor
dec
sub
mov
push
mov
jbe
stc
adc
xlat
ficomp
adc
sub
jne
data16
add
je
fwait
mov
imul
clc
das
das
js
(bad)
cs
jae
jl
xor
jecxz
push
mov
sub
and
mov
in
out
add
or
daa
std
xchg
sar
icebp
or
xor
pop
stc
inc
test
sbb
outs
scas
repnz
ficomp
push
xor
sbb
stos
cdq
mov
int
les
push
pushf
jge
test
mov
out
xor
inc
cmp
test
mov
shr
push
pop
jecxz
mov
(bad)
imul
xor
loopne
xchg
mov
inc
push
les
cli
bound
mov
mov
(bad)
leave
test
enter
out
inc
arpl
out
xchg
dec
cmps
int3
inc
fstp
or
cli
ja
std
hlt
aam
loop
ret
jnp
xchg
icebp
push
mov
push
div
popa
or
xor
xchg
loope
dec
adc
pop
in
addr16
mov
outs
adc
mov
popa
mov
add
sbb
mov
test
and
call
(bad)
int
loop
stos
xchg
inc
jmp
(bad)
adc
leave
xchg
cmp
sub
enter
imul
jno
sub
cmp
ja
rol
dec
das
xor
mov
jbe
fsub
ret
movs
push
cmp
aaa
dec
fist
test
dec
inc
rep
add
bound
mov
mov
jb
add
lock
add
cmp
cmc
das
jnp
rcl
mov
test
mov
loop
push
bound
retf
test
fisub
(bad)
out
int3
shl
pop
jbe
xchg
xor
pop
mov
les
dec
xor
mov
mov
jne
and
(bad)
out
outs
dec
sub
out
ret
ja
aam
or
(bad)
dec
adc
push
mov
je
pop
push
adc
inc
outs
push
and
loope
xchg
push
lock
js
mov
stos
les
add
into
icebp
clc
pushf
pop
pop
pop
aam
mov
lods
jnp
shl
pop
jg
ins
jp
rol
imul
jns
adc
mov
xor
mov
sub
jns
xor
sub
repz
jmp
cmps
test
mov
fnsave
fnstenv
mov
and
mov
add
mov
call
mov
dec
cs
push
ror
push
hlt
push
out
int
dec
cmc
int3
lods
jbe
test
stos
shl
sub
xchg
sub
rcr
jns
cdq
adc
dec
sub
int3
mov
(bad)
xchg
or
and
out
cmp
lods
retf
lods
push
mov
jne
xlat
in
ror
shl
mov
jecxz
push
bound
push
shl
xchg
push
mov
loopne
mov
out
adc
repz
sbb
push
and
mov
js
mov
nop
pop
neg
inc
xor
fs
mov
lds
inc
loopne
lea
ins
mov
jno
retf
rol
(bad)
ficom
data16
mov
add
ins
mov
sbb
pop
jne
mov
mov
xorps
pop
sub
jns
imul
jae
xor
adc
fdiv
inc
sub
pop
das
stc
sub
sahf
jns
stc
aam
mov
into
cmps
xor
in
sbb
pushf
sbb
ja
mov
mov
in
scas
div
int
sub
push
fstp
sbb
dec
xchg
js
(bad)
xor
and
inc
fwait
ret
(bad)
fsubr
mov
pop
les
aam
push
aaa
mov
sub
rcl
leave
pop
mov
retf
les
jmp
mov
mov
inc
retf
xor
xor
pop
xchg
pop
jo
cmps
fmulp
inc
cld
mov
xchg
out
fisttp
or
out
out
out
cmc
sub
adc
ins
mov
pop
mov
mov
add
jmp
mov
loopne
dec
dec
test
cli
outs
pop
jne
daa
(bad)
jle
and
sub
sub
mov
and
mov
or
loope
outs
sbb
retf
scas
cmps
xor
adc
loopne
mov
adc
and
mov
or
dec
icebp
(bad)
(bad)
mov
xchg
shl
loop
stos
call
mov
clc
inc
dec
adc
lds
or
or
mov
sub
sbb
and
mov
ds
xor
push
repz
inc
scas
shl
and
mov
mov
jle
(bad)
gs
cmp
cmp
cdq
sti
and
add
cmp
adc
pop
push
fnstcw
jnp
sbb
mov
repz
jbe
mov
sub
mov
outs
jns
cli
dec
int
mov
std
xchg
jle
gs
add
xchg
jae
mov
add
aam
pop
xchg
lds
movs
xor
(bad)
dec
and
cwde
pusha
into
loope
movs
jge
fld
or
mov
mov
inc
jne
add
cld
jp
mov
cmps
adc
cwde
sbb
xlat
xor
js
push
stos
out
jl
icebp
(bad)
int3
int
or
xor
push
scas
popa
xor
jno
mul
aas
jae
into
cmp
sbb
xchg
push
adc
dec
cli
mov
pop
push
cs
mov
hlt
aas
adc
adc
mov
gs
jmp
inc
and
sbb
lahf
dec
pop
jne
into
cmp
or
inc
stos
pop
push
and
cdq
sti
jae
xchg
xor
jge
test
jecxz
cwde
sbb
mov
mov
xchg
fsub
in
sub
jae
mov
test
call
xchg
ins
add
(bad)
jo
popf
sub
ret
mov
xchg
int
sbb
jp
stos
or
pop
into
xor
jge
fsub
adc
fwait
jno
add
add
or
gs
push
dec
mov
out
add
dec
mov
enter
xchg
cs
cdq
mov
cdq
xchg
std
cmp
mov
and
test
in
sub
pop
shr
ret
mov
sub
js
repz
retf
xor
mov
shld
sub
iret
adc
inc
cli
cdq
mov
or
lods
arpl
xor
es
xchg
mov
push
mov
or
xchg
nop
sbb
jecxz
jne
xchg
imul
cli
scas
aas
mov
loop
into
adc
aad
dec
mov
sub
iretw
inc
xor
jae
pop
sbb
cwde
call
mov
cwde
test
cli
les
mov
cmp
sub
aam
aas
mov
xor
adc
test
int3
into
adc
retf
cdq
inc
mov
ds
hlt
sbb
mov
jl
in
js
int
(bad)
cli
mov
loope
xor
shl
shl
sub
jmp
outs
sti
xchg
pushf
aad
cmp
arpl
mov
sti
clc
adc
aad
div
mov
adc
or
sar
int3
jne
mov
xchg
dec
ret
jecxz
rcl
sbb
into
gs
xchg
inc
leave
mov
out
push
dec
cmps
jle
cmp
nop
loope
test
cmp
leave
dec
lods
cmp
sub
shl
(bad)
movs
out
outs
xlat
(bad)
dec
push
jb
sub
push
sbb
rcl
sbb
xchg
sub
add
aam
mov
push
scas
pop
test
and
dec
iret
xchg
movd
nop
mov
iret
xchg
adc
ss
xor
or
test
mov
sub
test
adc
mov
scas
adc
or
cmp
mov
and
xchg
cmp
mov
adc
inc
bswap
or
repz
mov
sbb
je
cmp
les
cli
(bad)
xor
test
xor
pop
(bad)
adc
mov
and
fimul
mov
xchg
pushf
test
imul
pop
scas
ins
add
add
jno
adc
adc
scas
out
jo
cmp
test
call
enter
hlt
sbb
popf
cli
and
jae
pop
mov
jb
sub
arpl
gs
push
xor
cs
neg
jbe
xor
jns
xor
data16
and
test
aam
ja
pop
ins
loope
les
sub
xor
ins
xchg
cmp
cmp
cs
ins
mov
sbb
sar
test
or
ja
(bad)
repnz
retf
call
jne
adc
and
mov
xor
xchg
mov
loope
sar
jle
sub
stos
sub
adc
xor
fld
shl
xchg
test
jl
push
fld
xchg
(bad)
adc
mov
push
das
or
xor
pop
cmp
or
test
jno
mov
and
loop
xor
mov
icebp
cwde
or
aaa
call
loopne
cdq
jge
mov
sub
pop
jmp
and
sahf
loop
push
jl
sbb
ja
daa
mul
int3
in
pop
dec
jne
add
adc
cwde
cmp
ss
xchg
xchg
add
les
jno
lock
cs
adc
cmps
xor
js
mov
fidivr
movs
cmp
mov
mov
je
cdq
ja
push
sbb
popf
rcr
rol
rol
mov
test
scas
mov
mov
push
and
dec
mov
mov
mov
pop
cli
push
(bad)
popa
or
mov
lock
mov
or
cli
lds
xor
pop
mov
inc
lds
dec
out
sar
out
mov
(bad)
lock
fistp
cdq
mov
jns
jo
add
scas
cmp
mov
imul
adc
sub
ins
loop
cld
loop
scas
not
push
cmp
cmp
sbb
movs
aaa
push
and
popf
sbb
in
dec
test
arpl
fs
xor
xor
add
push
pop
mov
pop
rcr
mov
outs
(bad)
mov
fbstp
jno
mov
inc
jle
mov
pop
jae
and
jnp
inc
lahf
push
int
out
movs
push
mov
adc
(bad)
xchg
cmp
mov
popa
fbstp
bound
pop
es
test
cmp
push
arpl
lea
xchg
cli
pop
mov
xor
cmps
sub
mov
add
cmp
adc
test
add
fnstsw
ret
xor
hlt
pushf
pop
retf
dec
mov
adc
cdq
popa
leave
dec
les
mov
push
add
rcr
addr16
sbb
test
push
popa
pushf
push
inc
lea
add
add
xor
sbb
add
repnz
adc
retf
or
inc
aam
xchg
jnp
sbb
rcr
cli
xor
sub
aas
mov
imul
loop
mov
sbb
icebp
pop
pop
test
cmp
js
mov
pushf
dec
mov
jno
adc
int3
mov
shl
scas
adc
in
ins
xchg
lea
adc
sub
call
dec
jne
sbb
in
int3
add
lods
sbb
sbb
xchg
dec
ja
jbe
push
(bad)
fcmovb
sbb
mov
leave
xchg
call
pop
adc
ins
idiv
retf
cmp
jne
and
hlt
pusha
les
leave
je
sbb
xchg
(bad)
(bad)
cmps
and
int3
js
push
popa
cli
inc
dec
and
dec
add
outs
add
mov
xchg
adc
aad
inc
out
pop
jae
shl
clc
and
scas
fstp
out
aam
gs
rcr
push
pushf
js
jb
mov
inc
xor
out
int3
jns
dec
inc
in
imul
jmp
lahf
test
xchg
push
cmc
into
mov
push
cmps
retf
push
inc
fs
lock
dec
cmp
lea
iret
(bad)
push
dec
pop
std
sbb
mov
and
xor
int3
pop
xchg
out
cmps
aaa
repnz
sbb
cmp
in
dec
ds
imul
retf
mov
rol
mov
xor
loop
dec
clc
mov
pop
mov
aad
fs
cmp
fidivr
ins
or
loop
ins
inc
and
div
outs
sub
inc
mov
scas
adc
xor
push
or
pop
jae
fnsave
std
inc
mov
xchg
pop
inc
iret
mov
mov
jne
not
gs
adc
in
shl
out
shr
xchg
fdivr
mov
fdiv
inc
int
lods
push
aad
int3
int
imul
cwde
(bad)
lea
inc
fidiv
sub
sbb
les
(bad)
adc
cmps
mov
cmp
xchg
push
jp
imul
xlat
cdq
inc
inc
sub
ss
push
jecxz
mov
adc
xor
test
xchg
ds
add
jns
ret
ror
call
ror
ffree
pop
adc
xor
mov
das
mov
sub
jae
retf
inc
xchg
fmul
repnz
adc
mov
daa
lods
retf
jne
xchg
ds
push
retf
adc
pusha
call
aas
inc
cmp
inc
jmp
sub
lds
sbb
cwde
adc
add
mov
ror
push
mov
sub
mov
mov
adc
push
push
mov
dec
jns
cli
sub
adc
les
in
pop
fdivr
sti
inc
sub
fidivr
adc
push
push
imul
cmp
xchg
dec
scas
nop
pop
(bad)
jns
sbb
xchg
xor
mov
mov
iret
popa
sub
jmp
add
mov
fnstsw
lods
gs
and
or
add
in
inc
dec
outs
adc
push
dec
jno
sbb
fwait
or
pop
cmp
and
fisubr
push
push
cmp
push
les
mov
addr16
aam
bound
jecxz
lds
cmp
int
arpl
mov
push
mov
mov
sub
ja
mov
inc
cmp
sbb
xchg
mov
pop
inc
fisttp
inc
into
jle
mov
pop
sbb
test
push
jnp
or
call
and
adc
cmc
test
aam
jae
lods
push
or
enter
dec
cwde
(bad)
and
sub
and
into
jo
fwait
sbb
adc
mov
leave
call
ror
pop
clc
cdq
jno
sar
mov
ret
dec
stos
and
sub
loopne
add
scas
mov
pop
jo
cdq
lods
aam
push
xchg
repz
loopne
repnz
test
mov
cld
mov
les
ss
cmps
shl
cwde
out
pop
add
cmp
cdq
nop
mov
fdiv
test
cmps
mov
push
aaa
or
imul
push
adc
inc
push
hlt
loop
mov
retf
mov
cdq
sub
add
in
or
inc
sub
pusha
sub
push
sub
int3
jo
sbb
push
mov
cmps
pop
fdiv
add
cwde
loopne
jge
jb
sub
ds
xor
in
fisubr
cwde
jb
outs
pop
imul
jl
stc
sub
adc
cmps
js
pusha
iret
les
jg
xor
jno
xchg
push
retf
xor
and
and
sti
cwde
sar
jg
aas
mov
sub
imul
sbb
fdivr
mov
mov
popf
nop
mov
ds
in
mov
add
dec
stos
sub
lods
outs
xor
pop
int
mov
rol
jbe
int3
sub
rcl
sbb
mov
scas
dec
iret
je
ins
mov
dec
stos
xchg
inc
mov
hlt
or
jmp
or
pop
pop
outs
movs
pop
rol
shl
lahf
jbe
jne
in
pusha
jge
or
or
mov
pop
(bad)
repz
neg
lods
aam
push
cmp
sbb
push
xor
(bad)
push
data16
lock
fcomp
jae
add
scas
pop
retf
imul
es
repnz
ss
xchg
push
rcl
xor
test
(bad)
shl
icebp
sub
sar
push
cmc
mov
push
fisub
inc
les
(bad)
mov
ret
ss
adc
fcmovbe
xor
mov
jecxz
out
mov
dec
xor
pop
inc
xor
jmp
mov
jo
fist
jnp
xlat
fadd
jo
xor
pop
pop
dec
or
sub
dec
jle
rcr
lods
call
call
cdq
pop
addr16
out
add
inc
pop
imul
ror
adc
ja
push
mov
inc
ss
xor
or
sets
xchg
scas
lods
ja
add
push
sub
stos
neg
les
or
jge
in
jo
outs
sbb
sar
mov
dec
jp
inc
sub
or
setae
aaa
mov
xchg
pop
test
clc
xor
sbb
xor
(bad)
adc
add
sbb
or
std
cmps
ret
test
mov
bound
or
add
xor
retf
xchg
in
adc
lds
jmp
mov
mov
outs
rcl
clc
imul
fidivr
push
adc
jo
xchg
push
push
mov
push
cs
in
push
add
fidivr
mov
cwde
repz
jnp
ficomp
fs
ds
mov
sbb
mov
fild
cwde
fcomp
pop
mov
push
arpl
outs
es
pop
(bad)
jmp
xchg
neg
adc
mov
xchg
imul
mov
icebp
sub
leave
fwait
mov
arpl
jne
xchg
fld
stos
ins
add
mov
ins
out
test
test
mov
sar
dec
lea
sub
xor
and
stc
sub
lahf
pop
cmps
(bad)
(bad)
cmc
int3
je
repz
icebp
push
lahf
pop
pop
xchg
mov
lahf
stc
add
fistp
sbb
mov
aam
fist
addr16
mov
xor
retf
push
sub
sub
paddw
pop
iret
(bad)
and
xor
inc
scas
hlt
fcom
mov
cwde
call
sahf
gs
mov
adc
add
ins
cmp
mov
push
mov
cmp
pop
mov
mul
cdq
fistp
jns
mov
add
into
inc
int3
adc
push
aad
inc
pop
xchg
inc
pop
mov
into
pop
inc
cwde
imul
out
sub
and
mov
mov
jecxz
jb
imul
aam
mov
xchg
fiadd
add
jecxz
ja
push
je
cmps
cwde
mov
pop
adc
ret
out
cmp
lahf
jle
add
mov
adc
mov
ficomp
out
jl
(bad)
jns
mov
(bad)
test
dec
jl
les
cmp
add
fistp
retf
retf
mov
jno
aaa
pop
iret
out
push
aas
popf
push
add
mov
jno
xchg
cmp
xchg
imul
xor
xchg
test
adc
stos
enter
movs
not
daa
int
and
sti
jg
push
xlat
cmps
cli
call
sbb
in
mov
cdq
add
mov
push
loop
push
out
add
fisttp
fcom
mov
add
test
mov
lods
lods
xor
dec
adc
mov
dec
adc
mov
mov
mov
pop
xchg
call
dec
fadd
loop
inc
push
pusha
mov
repnz
inc
outs
imul
aaa
xlat
mov
mov
call
sbb
retf
mov
scas
fist
jnp
bound
jb
adc
rcl
pop
mov
fldcw
fwait
aam
stos
leave
and
or
push
std
xchg
neg
xchg
gs
nop
sub
bound
and
mov
add
pop
mov
xchg
push
aaa
test
ret
adc
pop
je
fs
pop
pop
fwait
pop
sub
pop
add
xor
pop
sbb
jns
adc
lods
mov
mov
push
cmps
xlat
xchg
jno
int
mov
push
sub
sbb
pop
ret
push
add
inc
loopne
jge
jge
inc
or
lods
push
ds
or
pop
fcomp
rcr
push
cs
cmp
adc
mov
sbb
xchg
xchg
xor
retf
sar
mov
fbld
pop
sub
add
sbb
ds
or
push
sbb
adc
mov
adc
mov
mov
inc
sbb
imul
jge
cdq
sub
test
or
jne
jno
mov
outs
and
scas
loop
inc
xchg
test
adc
or
das
js
mov
inc
mov
inc
rcl
daa
out
lea
push
test
jns
xchg
aam
or
pushf
pop
mov
jno
ins
ror
sub
(bad)
test
xor
lahf
cld
pop
aam
cmp
repz
and
add
(bad)
out
and
push
or
xchg
mov
out
mov
cwde
mov
shl
sub
sub
jg
xchg
ret
jl
(bad)
std
out
scas
push
xor
push
ss
cmp
mov
xor
pushf
shl
leave
dec
fisubr
je
gs
xchg
push
jbe
adc
push
dec
sub
enter
addr16
rcr
xchg
out
in
aam
pop
popa
fcomp
test
inc
xchg
mov
mov
lock
es
fsub
xor
ins
stc
out
stos
xchg
out
aaa
pop
pushf
imul
and
cwde
push
jne
iret
cwde
sbb
xchg
mov
outs
xchg
movs
xchg
or
dec
xchg
shr
aaa
gs
lea
add
aas
jmp
jae
cmp
sub
ins
cli
and
out
cwde
aaa
add
push
stos
mov
dec
jl
sbb
add
cmp
lea
or
fcomp
loopne
rol
xchg
push
pop
adc
jns
inc
lds
retf
neg
arpl
jmp
push
adc
push
cmp
jns
pop
cld
cmp
shr
push
mov
loope
test
dec
cmp
mov
lods
mov
ds
push
stos
xor
sub
jmp
mov
jne
ins
lock
je
clc
xor
pop
cmp
adc
or
sbb
pop
ror
sub
ds
inc
xchg
cli
push
jae
adc
xor
out
or
in
inc
ret
ins
nop
xchg
mov
mov
adc
push
lods
cli
inc
leave
nop
mov
icebp
jo
repz
mov
inc
movs
fdivr
cmp
daa
sbb
push
arpl
outs
fmul
push
sub
cmp
js
fnsave
cmps
push
mov
cmp
mov
(bad)
call
push
repz
xor
sbb
(bad)
jns
push
fld
and
out
mov
retf
inc
jb
push
fld
mov
push
cmp
pop
outs
std
xchg
and
jmp
int3
push
ins
dec
dec
imul
adc
add
cs
jmp
xor
add
imul
and
aad
sbb
shl
jns
popa
bound
sub
and
retf
add
pop
push
mov
clc
ss
inc
jae
sub
xor
jns
push
mov
xor
cmp
push
test
add
sbb
cmp
and
mov
push
mov
fcmovnb
mov
xor
xor
adc
and
or
mov
xor
inc
mov
fisubr
(bad)
jbe
or
or
cmp
pop
jne
xchg
xor
cld
arpl
cmp
int
cmp
mov
xlat
out
cmp
mov
(bad)
in
mov
shl
push
push
arpl
jo
js
(bad)
jns
jmp
or
adc
rcr
arpl
(bad)
push
das
adc
dec
addr16
shl
jmp
xor
push
dec
imul
or
xor
mov
xchg
bound
xor
cmp
ja
or
cld
(bad)
outs
push
sbb
sub
push
fcmovne
xor
xor
cmp
cwde
nop
sbb
inc
mov
jg
xchg
fbld
int3
jns
pushf
sub
arpl
add
xchg
mov
push
push
push
jno
sbb
loop
cwde
cmp
mov
fld
test
jne
popw
fs
adc
and
pop
adc
cs
(bad)
and
mov
scas
imul
jecxz
mov
fwait
add
inc
mov
ins
data16
mov
dec
or
xchg
push
xor
xchg
dec
xchg
nop
push
inc
aaa
int
or
cmps
scas
and
jmp
in
data16
test
sar
mov
xor
sbb
and
dec
push
adc
push
inc
(bad)
mov
ror
mov
mov
xchg
mov
push
clc
or
in
pop
mov
push
movs
imul
(bad)
jb
pushf
in
pop
les
idiv
gs
in
pop
fcomp
imul
hlt
or
(bad)
mov
es
add
add
cmp
mov
sar
mov
popa
sar
fs
xchg
aam
int3
imul
in
cmp
ins
out
jg
mov
push
iret
js
add
out
pop
call
scas
pusha
adc
mov
mov
jp
js
cmp
das
cmp
inc
jno
pop
sbb
cwde
mov
mov
jbe
les
aam
push
pop
xlat
xor
loop
inc
pop
mov
gs
dec
add
imul
jnp
xor
aaa
rol
sbb
or
mov
loop
dec
adc
jmp
enter
adc
push
in
adc
push
ror
popf
jl
push
pop
xor
and
out
adc
xor
inc
scas
pop
xchg
(bad)
bound
les
xor
cmp
mov
stos
movs
test
out
iret
les
std
xchg
pop
pop
icebp
xchg
cmp
rcr
cmp
out
enter
jg
add
sbb
sub
or
mov
sbb
and
mov
mov
popa
mov
mov
lods
popa
pushf
retf
out
dec
dec
dec
das
jmp
call
fs
or
(bad)
ins
rol
sbb
outs
cld
mov
cmps
or
stos
mov
out
aad
push
push
jmp
inc
push
bound
pop
mov
mov
cld
movs
arpl
fs
cdq
scas
xchg
push
das
pop
push
jmp
aad
push
jbe
fldln2
mov
in
sbb
in
xchg
or
push
cld
in
leave
xchg
lods
jo
addr16
rol
jecxz
inc
popf
adc
mov
cmp
ja
retf
fistp
dec
cwde
arpl
pop
pusha
push
push
in
aam
imul
rcl
jmp
gs
sub
mov
retf
xor
xor
and
or
sub
into
push
pop
xchg
mov
shl
popf
scas
in
or
inc
and
(bad)
loop
push
xor
push
adc
xor
ss
mov
mov
es
pop
std
mov
sub
mov
dec
inc
daa
add
push
mov
clc
and
cmp
jno
sbb
ret
push
pushw
enter
rcl
dec
test
add
stos
cli
retf
retf
ja
enter
add
popa
arpl
push
push
mov
dec
mov
pop
xor
cwde
(bad)
das
cmps
sub
inc
loopne
out
cmp
icebp
push
out
inc
pop
mov
mov
aam
in
cwde
and
mov
sub
or
ret
xor
jbe
push
out
add
inc
dec
add
scas
xchg
jno
sbb
or
push
loop
es
retf
jmp
scas
xchg
sbb
pop
(bad)
adc
mov
std
out
test
jb
add
ds
push
dec
mov
(bad)
fadd
or
cmps
or
sete
pusha
lods
or
scas
cmp
dec
(bad)
call
cdq
loopne
stc
push
inc
push
add
pop
sti
retf
xor
jle
mov
ds
inc
int
xchg
and
jmp
(bad)
sti
mov
pusha
shl
sub
push
jae
retf
inc
loopne
mov
jnp
loopne
xchg
jge
add
push
jae
retf
out
ds
rdpmc
jg
cld
mov
fld
and
pop
jmp
shl
or
add
xor
js
popf
popa
lock
xchg
mov
imul
mov
dec
in
daa
mov
scas
mov
jae
les
cwde
mov
sbb
pop
ret
cdq
inc
sub
adc
pop
sbb
retf
std
xchg
arpl
data16
pop
and
mov
cmp
push
cmc
jg
xor
inc
jp
cmp
mov
mov
pop
mov
jae
mov
enter
scas
jo
into
shr
in
cmc
pop
jecxz
push
lea
xchg
push
inc
lods
push
out
lods
jl
loop
push
int
stos
push
shl
fistp
add
xchg
pop
xchg
push
cmp
inc
add
cmps
aam
aam
cli
inc
push
xchg
(bad)
mov
arpl
mov
pop
data16
in
bound
add
jno
test
sahf
mov
xchg
rcl
daa
jae
loopne
or
mul
icebp
sub
das
rcr
(bad)
fdecstp
jae
and
arpl
lahf
popf
inc
daa
adc
or
cmps
add
aad
add
xchg
sub
les
inc
jbe
adc
jl
test
mov
test
addr16
enter
test
add
imul
(bad)
fiadd
and
je
xchg
das
retf
nop
mul
out
es
popa
pop
cs
sar
imul
mov
ins
pop
xchg
inc
test
push
or
mov
or
mov
(bad)
cli
mov
es
scas
iret
adc
pop
aam
repz
dec
add
idiv
add
bound
(bad)
mov
pusha
fdiv
das
mov
ja
adc
xor
in
pop
jnp
hlt
xchg
ds
mov
jo
aaa
mov
push
lahf
lods
int3
jbe
add
scas
ins
and
ss
mov
mov
mov
and
mov
dec
call
adc
repz
cmps
mov
stc
xchg
mov
rcl
pushf
into
or
jo
mov
addr16
push
aam
lods
push
scas
jno
mov
lods
pop
add
push
popa
mov
sub
push
xchg
jle
sub
xchg
jp
hlt
xor
mov
adc
add
loop
dec
cmps
mov
mov
ret
push
jns
(bad)
mov
int3
pop
fdivr
cmp
loop
jmp
add
push
clc
std
pusha
call
mov
imul
add
rol
sahf
fild
inc
and
add
pop
push
retf
ficom
out
icebp
retf
lds
and
fs
xchg
dec
dec
inc
retf
mov
cld
xor
scas
pop
dec
and
pop
popf
rcr
jg
cs
ins
lahf
dec
jle
inc
or
mov
adc
retf
aam
jl
imul
mov
out
icebp
jno
dec
jl
sbb
xor
xchg
rcl
and
inc
sbb
retf
scas
mov
add
iret
inc
dec
push
pop
call
pop
in
popf
lea
sbb
cdq
mov
mov
mov
xlat
or
jno
pop
mov
mov
outs
mov
ror
xor
mov
imul
cdq
pop
jle
addr16
xchg
dec
cmp
mov
mov
mov
mov
mov
cs
shl
xchg
inc
cdq
or
lods
jbe
fstp
ror
mov
test
pop
cmc
xor
ret
pop
xlat
sti
repz
imul
inc
inc
mov
inc
jns
jp
sub
add
push
jbe
cld
int3
aaa
ins
push
cmc
icebp
or
retf
mov
sar
mov
mov
add
dec
popf
sub
mov
cmp
rcl
or
test
adc
dec
lahf
mov
add
fdivr
sbb
or
mov
jmp
xor
fs
jo
imul
test
inc
sahf
jl
pop
cdq
lea
cli
inc
int3
mov
(bad)
jmp
and
or
mov
sbb
and
cmp
add
daa
les
jnp
pop
jl
rcr
inc
jge
scas
mov
jnp
xchg
jle
add
scas
lods
mov
pop
and
stos
aad
out
mov
cmp
sar
sub
mov
lock
scas
stc
ds
dec
call
je
push
(bad)
inc
(bad)
cmp
jp
push
lahf
sub
dec
add
jno
into
pop
xor
call
scas
cmps
push
jl
clc
xchg
mov
inc
pop
ins
(bad)
cli
movs
test
push
ror
or
(bad)
loopne
call
dec
cli
data16
mov
add
and
pop
mov
inc
adc
vmulps
fcomp
jge
shl
(bad)
or
mov
mov
out
cwde
cmps
pop
dec
pop
shl
push
(bad)
and
scas
sub
mov
outs
and
mov
(bad)
in
cmps
xchg
out
repnz
sbb
and
popa
adc
fisubr
jns
xor
fldcw
ds
das
aam
or
pop
loopne
movs
mov
arpl
cmp
cdq
xor
xchg
les
mov
imul
test
fwait
xor
les
adc
ret
xor
sub
or
mov
es
sbb
jmp
mov
add
fimul
aam
mov
push
mov
add
hlt
mov
fwait
and
xchg
gs
push
shr
popa
mov
(bad)
and
pop
xor
rcr
ins
cmc
xor
xor
fst
mov
out
in
std
xchg
inc
jae
add
movs
push
xchg
mov
out
ret
cmp
mov
int
push
jmp
fstp
mov
xchg
mov
test
jns
outs
mov
inc
push
(bad)
fsub
lea
sub
inc
out
stos
in
push
cmp
(bad)
xor
xchg
mov
int3
push
stos
fild
or
hlt
stos
gs
js
jmp
ins
arpl
pop
sbb
sbb
pop
dec
sbb
fsubr
push
mov
jle
or
in
mov
sub
scas
mov
ins
jmp
sbb
mov
xor
in
pushaw
loope
rol
retf
sub
adc
scas
loop
loop
popa
mov
cwde
sub
inc
iret
popa
xchg
repz
xchg
sar
xchg
imul
loope
(bad)
fs
jmp
push
sbb
scas
ins
cli
mov
dec
(bad)
mov
mov
xor
mov
add
pop
(bad)
push
outs
push
dec
fbstp
or
fst
jno
(bad)
gs
fcmovb
mov
sbb
mov
and
dec
adc
pop
dec
in
outs
push
mov
(bad)
(bad)
or
mov
or
inc
sbb
js
xor
or
mov
mov
inc
out
imul
sbb
mov
js
dec
mul
pop
or
add
cmp
stc
leave
cmp
pop
pushf
push
int3
mov
jecxz
cmps
push
retf
xchg
(bad)
jae
mov
mov
cmps
mov
sub
mov
jns
xchg
in
iret
sub
and
inc
cmp
xor
retf
pop
retf
mov
das
jno
push
or
cmps
pop
call
(bad)
dec
push
and
les
or
mov
cmp
daa
cmp
out
(bad)
or
inc
rcr
cwde
and
clc
mov
pop
inc
push
in
xchg
jl
xor
ror
popa
movs
cmp
scas
push
retf
jmp
mov
push
pop
cwde
jo
pop
adc
int
xor
xchg
out
cmps
loopne
push
jecxz
fwait
popf
jnp
je
test
in
adc
pop
arpl
mov
inc
test
push
push
inc
loopne
jb
inc
push
or
repnz
add
mov
xor
jne
sahf
imul
mov
xor
shl
jge
mov
inc
sub
push
stc
mov
fld
add
out
lods
inc
test
mov
mov
jg
movs
xchg
pop
dec
ins
inc
add
int3
cmp
xor
adc
fnstcw
daa
dec
sbb
out
pusha
pop
cmp
sbb
sbb
and
adc
inc
je
push
and
pop
inc
mov
bound
add
jo
jl
adc
stos
mov
dec
icebp
icebp
pop
pop
xor
sub
or
jle
cmps
int3
pop
ret
sub
fistp
ds
fidiv
fisub
push
xor
dec
jl
mov
cmp
loop
push
loope
fwait
mov
sub
pop
cmp
mul
xor
addr16
lods
xor
cli
sbb
gs
xchg
cld
int
clc
test
mov
add
stos
in
clc
mov
jo
shl
adc
mov
scas
jle
mov
dec
out
adc
in
js
fxch
dec
mov
xchg
popa
not
add
pop
out
ror
jno
inc
int3
cmp
bound
ins
xor
cmp
push
inc
lods
push
xchg
out
pusha
sub
xor
in
fcom
pop
push
add
and
ror
cmp
xchg
dec
pusha
icebp
add
xor
inc
pusha
popa
cmp
imul
movs
mov
mov
imul
xor
(bad)
(bad)
push
cmp
add
push
adc
cmc
push
movs
das
aad
pusha
repnz
pop
add
rcl
mov
push
aas
add
mul
and
cli
adc
cmp
or
test
pusha
das
mov
es
dec
dec
xchg
jne
add
sub
jmp
jb
inc
loopne
pop
dec
les
std
in
push
xchg
jl
cmps
cmps
dec
clc
xchg
cmp
mov
inc
repz
push
and
ins
mov
xchg
imul
mov
sahf
imul
xor
xchg
cs
cmp
cwde
adc
dec
aad
sbb
jo
xor
pop
(bad)
fcomip
test
ret
add
push
ja
inc
sbb
test
jb
cmps
fisub
jae
loop
xor
repz
sbb
dec
sbb
(bad)
xchg
adc
test
fmul
push
xchg
mov
pop
int3
or
push
push
sub
xor
or
jbe
sub
ja
sub
push
mov
loop
inc
jmp
sub
add
stos
add
mov
jns
pop
outs
and
rcl
arpl
arpl
mov
lock
xor
dec
aas
(bad)
fiadd
or
add
add
add
add
adc
repnz
fnstcw
add
fild
fdiv
popf
pop
jnp
out
sub
or
ins
loope
push
mov
jg
cld
mov
dec
pop
mov
mov
push
or
lahf
and
add
pop
outs
inc
push
(bad)
popa
mov
mov
out
aas
(bad)
inc
xor
mov
add
jg
inc
sbb
push
sbb
mov
push
int3
adc
mov
dec
jl
pop
jl
enter
enter
xlat
or
sbb
out
jb
or
cdq
idiv
lea
out
jne
dec
cwde
stc
iret
mov
sti
icebp
movs
cmp
test
pop
call
leave
or
jge
xlat
push
cmp
repnz
fdivr
in
loope
inc
sbb
fmul
in
cwde
pop
inc
out
add
(bad)
cdq
cld
pop
xor
jmp
jne
jmp
out
inc
mov
in
pop
xrelease
popf
pop
cli
fcomp
mov
lock
mov
sti
je
xchg
pop
inc
stmxcsr
std
out
cld
mov
add
sti
fist
push
mov
xlat
jg
aad
stc
pop
push
mov
add
mov
dec
(bad)
(bad)
fndisi(8087
in
shl
mov
push
add
inc
xlat
mov
in
xor
stos
js
repz
sti
ds
test
fistp
fadd
cmps
add
jmp
movs
shl
cmc
scas
mov
(bad)
mov
sub
(bad)
pop
leave
out
int3
mov
inc
mov
mov
stc
cdq
sub
cs
loopne
fnstcw
in
iret
mov
por
add
retf
xchg
mov
repnz
xchg
sub
in
stos
arpl
lea
jno
test
jno
mov
aaa
cmp
pop
cmp
jecxz
cmp
sbb
and
iret
in
int
and
mov
lea
in
inc
inc
iret
dec
cli
mov
jnp
ficom
dec
lahf
in
cmp
shr
mov
out
mov
std
push
daa
ficomp
out
sbb
aas
sahf
outs
retf
retf
sub
mov
cwde
mov
cmps
cld
out
out
pop
in
shl
stos
retf
das
fucomi
imul
mov
jle
ins
mov
jmp
mov
pop
dec
mov
fld
imul
out
pushf
test
jnp
hlt
ret
iret
mov
dec
push
(bad)
fdivr
lahf
imul
ss
jne
dec
mov
gs
out
fimul
jecxz
push
jg
cmc
add
repz
mov
jp
int3
call
ret
outs
jmp
xlat
outs
scas
xchg
retf
push
jne
sub
xchg
(bad)
push
mov
inc
icebp
jmp
mov
xchg
test
fldcw
xlat
lahf
sub
icebp
iret
popa
nop
(bad)
std
(bad)
iret
cmp
(bad)
mov
fidivr
jmp
sub
dec
cmp
nop
daa
test
cmp
out
inc
out
mov
jno
jg
inc
cmp
popf
push
jmp
sti
das
dec
dec
mov
ss
cmps
outs
cmp
out
test
push
ror
mov
jg
fsub
push
cmp
inc
pushf
push
shl
mov
inc
jne
inc
dec
(bad)
sar
outs
pop
cmp
jmp
mov
pop
out
push
jmp
fldenv
mov
cmp
scas
fidivr
xor
leave
fxch
jp
lds
scas
retf
aas
cmp
out
lock
add
(bad)
jl
test
sbb
ds
mov
repz
xchg
(bad)
adc
(bad)
clc
stos
mov
sahf
ja
or
add
js
test
jnp
not
scas
push
cmovne
outs
add
stos
sub
pop
inc
lds
loop
cmc
xchg
pushf
imul
iret
dec
fcmovb
push
mov
sti
in
in
jecxz
cmp
dec
(bad)
clc
xchg
or
les
daa
adc
add
add
add
add
add
add
add
adc
xor
inc
push
popa
and
lock
mov
shl
xor
add
add
aas
adc
mov
jg
iret
iret
jns
gs
pop
mov
sub
ins
retf
ins
mov
icebp
mov
fild
ins
mov
ficomp
mov
mov
adc
jnp
xor
mov
xchg
(bad)
push
pop
cmp
stos
sbb
sbb
sbb
ins
mov
or
pop
xchg
cmp
in
fwait
inc
push
push
(bad)
mov
lea
bswap
xchg
fdivr
mov
mov
int3
jae
cmp
mov
mov
adc
(bad)
cmp
mov
xor
daa
sub
out
out
xchg
add
outs
mov
sub
mov
icebp
stos
lods
mov
dec
sbb
adc
ins
fucomi
xlat
push
add
fwait
sub
js
cs
ret
leave
imul
pop
xchg
xchg
xchg
cwde
push
jecxz
cs
dec
fst
xor
or
fwait
in
push
out
jae
loope
in
scas
pop
mov
pop
fsub
cdq
sbb
icebp
sbb
mov
arpl
jl
jae
fmul
xchg
js
jo
sub
sbb
pushf
mov
jmp
jns
fnstsw
in
jae
arpl
jmp
leave
push
shr
mov
xchg
and
or
js
xchg
sub
dec
dec
jle
jae
inc
mov
int
mov
aam
cdq
movs
adc
pop
and
cmp
sub
xchg
ins
repz
cmp
out
shl
mov
cmps
nop
cli
and
into
and
pusha
lock
sbb
jecxz
fbstp
cmc
jne
jmp
or
push
fsub
push
adc
xchg
pop
ss
lods
shr
xlat
movs
mov
sbb
ins
(bad)
jo
mov
fldenv
(bad)
iret
adc
or
sub
arpl
xor
add
jle
loope
jge
pop
mov
lock
test
pop
(bad)
jg
jmp
and
cmp
mov
sub
pop
cli
cwde
clc
rsqrtps
jecxz
ret
setns
mov
mov
xor
aam
mov
cmp
test
sub
inc
sbb
cmp
cs
ffreep
jle
mov
repz
cmp
mov
cmp
mov
hlt
jne
test
jo
xchg
sub
enter
fnstenv
and
cmp
jecxz
das
xor
jo
in
add
sub
arpl
mov
rcl
cwde
cmp
and
mov
mov
inc
test
mov
inc
fiadd
push
(bad)
push
ror
fneni(8087
(bad)
lahf
pop
or
adc
(bad)
cmp
xor
sahf
clc
outs
movs
pop
cmp
sbb
loope
mov
es
xor
push
inc
icebp
mov
xor
jo
outs
fist
lods
xlat
outs
jle
sbb
pusha
nop
daa
mov
adc
sub
sub
and
pop
jnp
sbb
mov
jb
jge
lods
aaa
and
mov
xor
mov
cmps
xlat
mov
stos
ja
pop
test
(bad)
(bad)
xor
and
lock
adc
pop
mov
lock
and
test
iret
fimul
push
sbb
shl
in
xchg
add
(bad)
jb
push
xor
data16
xor
sar
test
ja
das
push
pop
and
push
test
sbb
loopne
mov
js
(bad)
fild
xchg
into
and
dec
sub
cwde
cmp
mov
dec
xor
bound
dec
xor
cmp
emms
adc
pop
sbb
das
test
add
and
enter
lods
out
add
sbb
and
loop
ins
and
lods
mov
jb
aad
pop
loope
pop
jns
pop
scas
jg
pop
jo
(bad)
mov
jmp
add
loop
and
dec
icebp
les
(bad)
and
ins
cmps
add
int
mov
jb
ins
shl
cwde
ja
and
xchg
ds
fnsetpm(287
lock
je
sti
inc
pop
mov
jp
pop
neg
sub
inc
xor
inc
xor
js
cwde
xchg
jb
inc
jle
fisubr
test
lock
pop
mov
mov
(bad)
std
out
jo
std
jp
out
sti
jo
aam
not
jmp
push
fsubr
sti
jg
pop
adc
inc
adc
cld
jge
aaa
pop
jecxz
stc
xlat
jmp
fdivr
(bad)
pop
clc
and
ins
or
cdq
lods
mov
rol
test
pusha
jne
inc
fucomip
dec
fbld
add
aas
pop
iret
fmulp
jge
adc
lock
cmc
jo
sbb
dec
jle
fwait
dec
inc
jmp
pop
mov
mov
cmp
push
je
push
test
or
icebp
jmp
popf
jl
(bad)
test
(bad)
repz
std
ins
std
mov
scas
ja
pop
leave
xchg
inc
ret
dec
lea
lidtd
in
cmp
iret
out
mov
out
ret
mov
adc
xchg
mov
ds
push
push
cmps
inc
aad
jnp
adc
das
fsub
jg
or
jae
cdq
cs
int
nop
dec
enter
ret
xor
cmp
jne
fucomp
fcom
xchg
or
mov
xchg
test
mov
fwait
jbe
and
ds
adc
inc
icebp
sub
loop
fistp
jmp
jno
mov
or
cmp
test
xchg
sbb
inc
(bad)
outs
pop
xor
js
jno
push
sub
sub
jo
add
adc
sub
jo
add
xchg
jle
imul
lods
and
enter
lea
scas
pop
test
ins
mul
mov
jg
jle
jg
(bad)
pop
scas
dec
test
dec
adc
xchg
push
rcl
mov
fstp
(bad)
jne
lds
adc
pop
rcl
ror
jne
sub
inc
mov
scas
idiv
add
lods
int3
daa
std
aas
jmp
add
cs
call
leave
or
(bad)
push
jmp
(bad)
mov
mov
repz
les
jg
mov
repz
jl
fadd
std
xchg
add
push
jbe
movs
sahf
dec
jle
inc
cmc
loop
adc
and
ss
push
mov
ffreep
pop
ret
aad
scas
push
dec
xor
ret
xchg
xchg
push
pop
in
imul
and
cmp
inc
jmp
push
in
pop
imul
nop
mov
pop
ins
ss
pop
jnp
nop
cmp
mov
or
test
xchg
fcom
lea
cmps
(bad)
pop
or
cmp
outs
pop
fld
mov
ret
bnd
cvtdq2ps
xchg
xchg
mov
mov
outs
ins
scas
dec
mov
ret
test
lods
dec
ins
sahf
loope
xchg
xchg
loopne
xor
pop
mov
adc
daa
xchg
push
xchg
ficomp
push
jo
and
je
out
fucom
mov
popf
fstp
nop
test
(bad)
les
sub
add
add
add
add
add
add
add
add
add
and
adc
push
popa
jno
mov
xor
add
add
add
aas
adc
mov
mov
aas
loope
retf
pop
(bad)
mov
inc
sbb
xchg
adc
adc
stos
xchg
fbstp
push
sbb
sub
cs
ret
mov
xor
jnp
xor
xor
add
pop
mov
xchg
js
sbb
es
push
ret
jl
add
int
xlat
and
test
repnz
xchg
pushf
cmp
pop
ja
cmp
cmp
test
sub
sbb
loope
and
pop
xchg
push
and
pop
adc
sbb
pop
xlat
adc
adc
or
sahf
cs
in
pop
push
or
aam
cmps
mov
push
push
loop
xor
dec
or
adc
mov
mov
imul
cmp
gs
neg
cmp
(bad)
imul
pop
shr
xor
cdq
pop
out
cmp
ja
cmp
push
iret
aaa
mov
test
jge
addr16
cdq
jo
adc
test
(bad)
fs
xchg
loope
mov
ret
push
dec
push
sbb
loop
sub
fs
and
or
leave
jae
loop
xor
adc
push
pop
pop
outs
das
xchg
push
pop
test
push
imul
add
add
test
mov
dec
and
test
sub
test
test
pop
fild
pop
or
mov
jo
mov
retf
lock
adc
add
adc
xchg
sbb
pusha
mov
nop
mov
loopne
jae
jle
and
mov
data16
push
dec
test
cdq
ja
inc
xor
mov
or
movs
lock
sbb
push
or
aam
repnz
dec
mov
add
xchg
mov
jle
mov
inc
add
cwde
mov
mov
push
inc
pop
pop
test
stos
ins
xor
test
retf
loope
push
repz
lds
mov
xor
adc
fldcw
into
loop
sub
jmp
aam
outs
rcr
xchg
xor
adc
mov
pop
fmul
sub
cmp
aam
das
or
sbb
add
sub
xor
mov
add
add
sbb
jl
cld
xor
adc
hlt
and
adc
int3
dec
shl
inc
hlt
or
mov
inc
or
enter
mov
mov
dec
(bad)
mov
mov
mov
test
retf
sub
inc
sub
jae
dec
push
adc
ja
gs
lds
dec
sbb
pop
or
test
ja
adc
int3
mov
out
bound
mov
or
xor
bound
fs
add
mov
mov
jb
inc
loope
mov
sbb
es
out
fsubr
push
nop
mov
mov
mov
sbb
push
les
adc
and
pusha
push
add
addr16
pop
cmp
sbb
jmp
cmp
iret
inc
sbb
mov
sti
cmc
lahf
sahf
mov
std
aam
add
movs
cdq
data16
aam
ror
nop
xlat
(bad)
rcr
dec
aam
jmp
dec
iret
pushf
add
mov
inc
outs
mov
add
xlat
lock
ror
inc
inc
mov
(bad)
fsubr
dec
inc
jl
jp
aas
jmp
dec
xchg
jmp
inc
mov
push
cmp
add
pop
mov
jb
adc
xor
dec
popa
sbb
std
lahf
cmps
icebp
push
rol
retf
mov
scas
jmp
add
jbe
(bad)
sti
dec
cmps
gs
push
call
sbb
xor
xchg
test
pop
xchg
ret
pop
mov
adc
mov
or
ja
xlat
sti
std
out
stos
call
xlat
jmp
popf
cld
inc
retw
cmps
push
hlt
ja
pusha
xchg
add
jo
xor
gs
add
push
jecxz
xchg
mov
inc
pop
out
fadd
mov
bound
scas
pop
or
adc
hlt
std
jle
stos
pusha
inc
push
push
outs
jo
cmp
rol
dec
clc
dec
xchg
movs
nop
fldcw
popf
retf
ins
adc
cmp
mov
push
adc
jg
test
xor
cmps
fdivr
scas
jae
je
or
jecxz
xchg
push
inc
mov
nop
cdq
xchg
xchg
or
jae
jne
and
or
cwde
imul
pop
js
es
xor
outs
test
repnz
(bad)
in
loopne
ret
cs
mov
jecxz
mov
popa
cwde
mov
mov
inc
xor
or
mov
inc
out
rol
popa
repz
sti
mov
add
sub
inc
jo
dec
adc
push
ins
retf
aas
adc
xchg
ret
fld
cmp
retf
(bad)
fs
dec
arpl
sub
mov
dec
push
fcom
cmp
mov
(bad)
cs
inc
push
push
cmp
push
cmp
push
fsubrp
std
xor
adc
adc
adc
mov
push
and
sbb
movs
and
inc
xor
out
(bad)
scas
out
push
inc
neg
int3
popa
je
cli
stos
jg
mov
inc
test
or
sbb
scas
pop
bound
lods
pop
cli
daa
fcom
pop
inc
xor
inc
mov
mov
mov
dec
mov
into
(bad)
and
aad
lods
das
mov
mov
pop
test
jo
sbb
add
lahf
aam
xor
std
loop
dec
loope
scas
out
xor
(bad)
je
xchg
(bad)
retf
adc
jmp
mov
inc
add
sbb
add
pop
jge
mov
inc
xchg
mov
aas
dec
loop
(bad)
retf
cli
sbb
add
jecxz
add
cmc
ja
xchg
aaa
or
mov
bound
retf
fmul
cmp
jns
jo
dec
retf
mov
les
xor
cmp
or
movs
sbb
adc
xchg
mov
mov
out
shr
cwde
mov
and
push
inc
add
dec
or
dec
cmp
es
pop
sbb
movs
movs
pop
dec
retf
or
test
inc
shl
das
xor
cmp
retf
and
xor
and
sub
and
inc
push
data16
mov
ror
in
mov
push
push
or
push
push
xor
lahf
inc
add
adc
add
add
add
add
add
add
add
add
adc
and
inc
push
popa
jno
xchg
mov
shl
icebp
and
(bad)
fiadd
or
add
add
adc
js
fs
(bad)
sbb
inc
sub
jne
and
test
sub
mov
fimul
call
rol
xor
add
xor
jno
cmp
imul
inc
out
xor
fidivr
dec
mov
loop
(bad)
int3
mov
cli
retf
dec
push
add
or
mov
jecxz
cmp
push
push
jg
loop
sbb
pop
xor
pop
jg
loopne
xchg
xchg
ja
add
cld
out
xor
adc
les
repz
(bad)
jge
pop
pop
push
xchg
repz
hlt
shl
mov
mov
arpl
push
push
sahf
icebp
out
(bad)
cmp
mov
add
js
icebp
xchg
jne
push
imul
cmp
mov
pop
mov
lods
add
jecxz
data16
xor
xchg
mov
cwde
cmovae
cmp
or
sbb
add
mov
retf
(bad)
xor
xchg
dec
inc
mov
or
pop
mov
fwait
jmp
jg
xchg
inc
adc
out
mov
(bad)
xor
inc
mov
add
or
pop
ret
loop
mov
test
nop
ja
rol
jb
outs
das
push
into
inc
ror
pusha
add
shl
adc
add
popf
jg
xchg
add
add
mov
into
cmp
xlat
pop
jae
push
cmp
pop
cli
int
and
mov
fwait
pop
push
inc
mov
cmp
add
pop
fisubr
(bad)
adc
loopne
jns
xor
dec
jae
and
js
adc
xchg
jecxz
mov
mov
mov
xchg
xor
stos
and
add
mov
add
ficomp
jo
add
(bad)
dec
rol
inc
(bad)
pushf
aad
pop
jl
pop
shl
les
cmp
lods
mov
lds
jmp
int
iret
stos
pushf
push
retf
ret
inc
jnp
bnd
sub
mov
je
dec
je
aas
pop
adc
push
xlat
fild
inc
arpl
mov
shl
cld
pusha
push
pop
mov
or
push
jno
xor
mov
xchg
dec
push
icebp
xlat
sbb
pop
loop
sub
cli
les
mov
pushf
loop
test
cwde
push
int3
ins
cmps
jns
cmps
lahf
(bad)
ins
push
sbb
adc
aaa
into
sbb
fs
xor
(bad)
or
pusha
or
gs
ficom
sub
into
sub
pop
cs
or
in
loop
test
mov
loop
add
out
or
rcl
and
dec
fxch
xor
sub
jns
sub
jecxz
xor
fistp
sub
jo
and
xor
or
arpl
out
pop
inc
out
sbb
mov
loopne
icebp
mov
pushf
mov
ja
fimul
inc
outs
mov
sbb
xchg
fadd
or
pop
(bad)
fs
enter
cmp
sar
into
ret
mov
inc
jmp
inc
out
dec
mov
shr
adc
(bad)
pop
rcl
bound
bound
and
cmp
pop
push
add
imul
xor
popa
mov
js
push
lods
and
daa
into
and
sub
xor
mov
mov
mov
jecxz
push
pop
inc
pop
adc
inc
repz
mov
(bad)
mov
loop
and
and
cmp
pushf
gs
pusha
dec
xchg
push
pop
lods
inc
cwde
add
pushf
pop
mov
pusha
push
test
adc
xchg
cmps
cmp
mov
add
lods
fild
mov
ja
cld
and
mov
(bad)
into
jp
add
es
mov
sub
dec
sub
sbb
cdq
adc
loop
and
into
push
scas
add
pop
xchg
push
shl
loope
adc
dec
ds
cmp
cmc
(bad)
and
inc
cmp
adc
mov
jmp
in
lods
jge
cmp
nop
jmp
push
and
dec
pop
jmp
in
jg
push
call
xor
mov
pushf
dec
add
out
fisubr
xchg
pop
addr16
pop
mov
add
into
ss
mov
cmc
sbb
xor
push
xor
sub
int3
movs
fwait
(bad)
or
in
lock
out
cmp
sahf
mov
ret
adc
xchg
rcl
xchg
shr
sbb
into
push
xchg
es
xchg
leave
test
mov
(bad)
push
scas
lods
and
out
push
add
cli
mov
(bad)
adc
rcr
scas
not
repnz
add
pushf
push
or
in
push
mov
ror
pop
pop
pop
mov
aam
fdivp
inc
cmp
pusha
popf
or
push
cmp
pop
mov
jecxz
dec
adc
xor
outs
(bad)
cmp
sahf
repnz
jnp
stos
jecxz
add
xrelease
les
xor
loopne
js
(bad)
out
dec
jecxz
sbb
or
push
into
ja
push
add
cld
arpl
cmp
mov
sub
sbb
repnz
adc
sbb
sub
sub
out
cmps
daa
fistp
addr16
adc
clc
enter
jmp
mov
mov
sar
cmps
xchg
into
and
adc
cs
repz
push
sub
mov
cmp
clc
lds
sahf
repnz
or
popf
xor
xchg
jecxz
(bad)
ret
inc
jne
push
nop
repz
adc
arpl
gs
repz
push
sbb
pushf
out
movs
les
dec
jmp
inc
into
repnz
popf
push
std
(bad)
les
sbb
sbb
or
jne
dec
repz
xlat
xchg
jne
inc
sbb
and
adc
lods
push
push
mov
xchg
inc
cmp
cmps
int3
push
(bad)
das
inc
mov
pop
inc
or
add
adc
push
pusha
and
xchg
sub
pop
mov
jl
icebp
mov
repz
cwde
xchg
xchg
fcom
mov
inc
adc
(bad)
es
mov
xchg
add
lahf
sbb
jge
xchg
mov
pop
mov
add
test
and
shl
sub
pop
fwait
(bad)
and
in
or
sub
mov
into
xor
jns
mov
and
les
cmp
or
inc
movs
in
push
cmps
pushf
mov
hlt
jno
jl
pop
or
pop
cmp
sub
(bad)
into
rol
add
xor
cmp
cmps
(bad)
xor
cmp
sbb
fwait
test
pop
inc
sbb
call
je
sbb
ins
or
xchg
xlat
push
sub
sub
and
mov
pop
push
jae
adc
mov
mov
hlt
mov
dec
cmp
mov
lea
jmp
scas
sbb
(bad)
xor
das
fbld
add
pop
je
ds
das
and
loopne
fstp
adc
(bad)
shl
icebp
(bad)
and
mov
imul
xchg
add
lods
cmp
mov
retf
(bad)
xor
cmp
add
dec
in
jno
jno
cmp
repz
dec
push
and
icebp
fwait
ret
sub
pushf
data16
pop
xor
sbb
in
clc
int
jne
xchg
sbb
out
lods
ja
mov
scas
mov
cmps
and
or
mov
pop
add
lods
xchg
pushf
sbb
or
dec
data16
loopne
pop
adc
mov
jno
xor
ss
fnstenv
aad
jecxz
adc
cmc
xchg
popf
pusha
adc
popa
mov
dec
lahf
pushf
cmp
sahf
fistp
nop
call
mov
xor
mov
pop
push
sbb
add
sub
dec
mov
adc
test
shr
jo
push
sbb
adc
xchg
(bad)
lods
je
ficom
dec
sahf
sbb
jo
icebp
xchg
bound
imul
fstp
cmps
mov
sbb
loopne
add
add
shl
sub
cmps
pusha
mov
cmp
mov
cmp
aas
sbb
sub
ret
dec
jno
push
out
leave
lods
mov
in
jecxz
std
bound
sbb
jl
lock
fsubr
cmp
add
(bad)
cli
lds
jl
test
fs
dec
aad
xor
xchg
add
jmp
xor
jne
add
and
cmp
cmp
jge
inc
sbb
inc
in
jns
sbb
add
push
imul
loop
sub
mov
vmread
repz
push
sub
and
pushf
jns
stc
enter
leave
sub
adc
les
jno
outs
jbe
pusha
ret
rcl
pop
adc
out
out
jmp
mov
(bad)
jo
cmc
jne
push
cli
xchg
pop
mov
jo
mov
jnp
and
or
jecxz
pop
punpckhdq
add
psrld
nop
ds
xor
ftst
loopne
fisub
lea
mov
mov
ret
xlat
mov
xchg
movs
mov
mov
sbb
sbb
movs
in
cmp
cmpxchg
mov
cmc
xlat
fld
pop
arpl
pop
xor
inc
int
ss
repnz
fdivr
xor
mov
sbb
data16
mov
sti
arpl
fdivr
mov
ret
iret
inc
adc
lahf
cmp
add
xor
jecxz
ja
fwait
mov
push
mov
sbb
ret
jmp
test
inc
cmp
xchg
sub
out
xor
icebp
fisubr
lock
sbb
inc
std
lock
push
repnz
test
xor
test
sub
je
loop
pop
cmps
fcomp
popa
hlt
xor
mov
and
jo
(bad)
stc
cmps
call
sbb
fimul
mov
sub
ss
sub
sbb
sub
and
loope
adc
jecxz
or
sbb
inc
je
(bad)
push
hlt
cmps
add
hlt
popa
shl
dec
push
clc
add
sub
add
test
fwait
fwait
sbb
icebp
out
and
push
inc
dec
mov
dec
scas
and
gs
adc
dec
inc
call
sbb
hlt
mov
int
xchg
jge
xor
pushf
ss
loop
je
xor
(bad)
pop
or
test
inc
ja
add
mov
sbb
xchg
adc
stos
push
aam
fdiv
sbb
rcl
adc
clc
adc
cmp
test
sub
mov
add
shl
arpl
push
xchg
mov
ret
aaa
jge
into
pop
xchg
adc
pop
jbe
fucomp
or
int
lods
mov
(bad)
push
sti
ror
xor
clc
retf
inc
and
pop
push
test
mov
jb
push
and
enter
ins
adc
in
add
or
vmulsd
(bad)
ret
and
pop
and
xchg
mov
cmp
(bad)
call
mov
pushf
mov
add
jecxz
cmps
jno
cmp
cwde
mov
das
jge
adc
(bad)
into
cmp
fwait
adc
out
cwde
das
rcr
dec
hlt
dec
cmps
or
mov
mov
in
lods
mov
(bad)
sub
movs
pop
xor
in
pop
mov
mov
add
add
pop
xor
xor
xor
shl
sti
pusha
add
imul
sub
ja
add
test
adc
inc
ins
stos
enter
pusha
inc
and
pop
push
adc
inc
sbb
pushf
loope
sar
shl
stos
stos
pop
mov
jns
push
or
pusha
aam
adc
xchg
pop
xchg
mov
xchg
loopne
cmp
mov
iret
push
and
repz
test
mov
and
push
or
sbb
mov
push
xchg
test
popa
and
cmps
mov
and
jne
icebp
adc
fimul
dec
adc
cmc
and
inc
jp
jbe
jl
enter
lods
sbb
(bad)
adc
int3
jnp
(bad)
neg
cmp
ret
or
pop
dec
cmp
stos
mov
shl
(bad)
and
sbb
aaa
sub
out
add
mov
mov
pop
jne
push
mov
xor
sbb
movs
xlat
cmp
mov
inc
add
ja
lods
dec
mov
cwde
push
add
sbb
mov
popa
cs
js
adc
inc
xor
mov
mov
adc
or
sbb
add
or
ror
add
jnp
imul
xor
mov
cwde
out
lods
sub
mov
jecxz
adc
cmp
addr16
out
shl
xor
mov
and
int3
sar
add
clc
popf
cli
or
mov
adc
add
test
jb
fxch
sub
movs
retf
sub
mov
add
mov
inc
mov
mov
lods
cmps
sbb
inc
cmc
and
outs
or
cmp
inc
inc
xchg
xchg
enter
mov
movs
inc
loopne
loopne
sub
adc
dec
data16
dec
mov
shl
sub
jecxz
(bad)
xchg
xor
push
add
mov
movsx
adc
inc
mov
push
fwait
push
ja
bound
xor
leave
rcl
(bad)
repnz
mov
cmc
in
add
mov
mov
lods
stc
into
stos
cmp
jnp
xchg
mov
jmp
mov
call
and
dec
cmp
loop
push
mov
pop
scas
or
test
icebp
xchg
stos
xlat
(bad)
or
pushf
sbb
sbb
aad
add
leave
(bad)
sub
cmps
(bad)
mov
dec
inc
mov
ins
popf
ret
push
les
retf
(bad)
icebp
fimul
es
inc
add
inc
mov
je
sbb
shl
aad
sbb
or
xor
je
dec
mov
movs
ret
pusha
bound
add
loop
or
fisubr
push
mov
sbb
jmp
ss
fst
mov
stos
mov
sub
fsub
sbb
push
xchg
dec
mov
in
xlat
push
daa
sub
dec
xor
add
test
cld
or
lea
in
cwde
(bad)
sbb
popa
and
jmp
add
and
je
sbb
cmp
out
add
je
loop
mov
clc
cmp
stos
inc
lods
fistp
and
in
inc
ffree
push
iret
in
push
stos
adc
nop
dec
inc
dec
or
adc
inc
cmp
dec
cmp
fsub
out
xchg
push
into
mov
mov
ja
mov
and
lds
lods
push
in
push
jno
ds
mov
inc
jno
pop
out
push
scas
inc
mov
stos
and
sbb
std
popa
not
jne
add
pop
mov
outs
sbb
ror
dec
jo
push
sub
and
mov
push
retf
loop
mov
cmp
mov
scas
bnd
xlat
je
sub
inc
sbb
out
mov
mov
out
adc
xor
xchg
fxsave
scas
ror
cmp
pop
pusha
xchg
push
cmp
fsub
in
popa
cmp
jae
sbb
movs
dec
es
ins
loopne
or
pop
add
and
(bad)
gs
adc
xchg
test
sbb
out
pop
push
inc
stos
inc
and
add
dec
xchg
inc
mov
mov
xor
mov
cmps
push
rcl
add
cmp
sbb
push
fs
cwde
mov
add
inc
sub
cmp
(bad)
jno
sbb
jl
or
daa
xchg
sbb
call
mov
js
call
cmps
push
call
mov
mov
jns
test
jae
dec
test
fistp
dec
fdiv
pop
push
in
mov
outs
dec
dec
sub
leave
call
out
sbb
jne
iret
pushf
js
js
out
push
scas
xor
inc
or
inc
pop
sub
add
in
and
jle
inc
and
nop
mov
(bad)
jb
pop
mov
(bad)
lods
mov
mov
jb
xor
sub
mov
sub
jmp
(bad)
data16
(bad)
xor
mov
or
and
fisttp
xchg
or
out
cmc
mov
pop
add
cmp
xlat
push
adc
sub
sub
stc
dec
aad
jmp
dec
add
add
cmp
push
dec
pop
mov
add
push
inc
mov
in
and
inc
pop
sub
push
and
scas
and
xchg
pop
xor
adc
cmp
mov
push
stc
dec
cmp
mov
adc
adc
daa
jge
movs
push
gs
nop
in
push
mov
and
lock
pop
aam
mov
in
leave
or
adc
mov
lods
mov
shl
jecxz
adc
add
mov
stc
rol
dec
sbb
add
ret
xor
xchg
cmps
jns
inc
pop
sbb
or
mov
jb
push
dec
mov
rol
fmul
ins
(bad)
xor
jmp
loope
daa
cs
mov
mov
pusha
push
pop
in
(bad)
scas
scas
adc
retf
push
mov
mov
add
call
ficomp
nop
xlat
pop
movs
adc
rol
xchg
add
data16
loope
and
and
push
push
retf
inc
and
hlt
dec
inc
imul
mov
push
and
and
jbe
aas
dec
imul
xchg
push
inc
out
ficom
add
not
xchg
aad
cmc
shr
and
xchg
mov
jp
fisubr
test
loopne
loope
lds
mov
test
imul
enter
pop
xor
mov
push
xlat
nop
pop
xor
mov
icebp
pushf
sbb
sbb
xor
xchg
retf
push
ins
inc
retf
out
lea
add
ins
sbb
lods
add
dec
push
sti
or
fs
stos
fiadd
push
mov
lods
pop
popf
jl
cmp
dec
aam
and
sub
les
and
test
mov
cmp
adc
inc
push
dec
cmp
adc
cmp
jno
cmp
sti
xchg
push
jns
pop
xchg
mov
ror
pushf
mov
jmp
ret
mov
sbb
sbb
(bad)
daa
push
bound
xlat
sbb
cmp
sbb
popa
jecxz
sub
xlat
add
add
adc
xrelease
push
add
(bad)
fcmovbe
and
cmp
packuswb
mov
mov
add
mov
jecxz
adc
cmps
add
pushf
call
mov
cmps
inc
and
fsub
push
xor
imul
inc
mov
xor
pop
mov
xchg
or
push
ja
(bad)
cs
mov
jno
popf
sub
dec
cmp
cs
fsubp
pop
mov
(bad)
scas
pushf
add
inc
imul
jno
push
not
sbb
sub
xor
aaa
data16
fidiv
sar
mov
add
inc
inc
call
lea
rol
mov
adc
sbb
mov
stos
fidiv
dec
das
mov
test
fild
into
and
iret
js
jmp
cli
ret
rcl
pop
inc
inc
push
or
out
aad
xchg
xchg
push
retf
mov
jmp
sbb
or
dec
out
sub
push
jp
jo
add
cmp
dec
fiadd
les
push
jmp
mov
popa
cmp
stos
fisubr
outs
out
xchg
and
rcr
mov
xbegin
arpl
loop
and
out
inc
aad
jnp
jle
or
sbb
add
and
jns
push
cs
aaa
or
mov
clc
adc
add
add
call
dec
pop
movs
cmps
mov
xchg
adc
add
mov
mov
mov
repnz
les
pushf
inc
sub
movsx
mov
xor
into
sbb
pushf
mov
call
jge
cmp
fwait
pusha
test
mov
loope
cmp
fisubr
retf
push
adc
outs
test
ja
enter
sbb
int
into
and
retf
addr16
sub
js
aas
push
aam
mov
icebp
xor
loopne
or
push
mov
pop
(bad)
cmc
cmp
ret
push
nop
in
ins
sub
addr16
daa
sub
lea
jmp
cmp
inc
ds
jb
xchg
cmp
lahf
cld
jecxz
jp
je
inc
iret
push
aam
fisubr
push
std
js
or
mov
jno
outs
fcmovnbe
and
rcl
mov
sbb
sbb
mov
sbb
add
mov
test
fmulp
into
sub
mov
aad
test
jl
ret
test
fisttp
xchg
push
mov
repz
xchg
and
sub
jmp
js
dec
dec
jmp
xor
or
lods
movs
movaps
enter
inc
mov
adc
xor
adc
inc
pop
jne
xor
cmp
cs
jo
sub
add
inc
dec
push
adc
sub
scas
adc
mov
imul
cmp
jmp
gs
and
out
jns
mov
fstp
xor
mov
outs
mov
jmp
test
scas
inc
dec
or
rol
mov
jo
or
add
sub
retf
or
cmps
sub
xor
je
add
jae
sar
adc
sbb
inc
pop
and
pop
cmp
outs
cmp
fs
not
or
(bad)
or
fwait
push
add
inc
inc
pop
imul
scas
xchg
adc
icebp
fimul
mov
int
pop
dec
dec
and
jno
and
push
ins
out
sbb
mov
nop
call
pop
jb
rcl
outs
adc
aaa
(bad)
pop
xchg
cmp
inc
int
mov
sbb
cld
in
sti
add
(bad)
(bad)
mov
sub
das
rcl
push
(bad)
xor
inc
mov
sti
gs
pop
pop
out
or
clc
retf
pop
mov
stos
mov
jo
into
inc
inc
lds
jmp
push
mov
jmp
add
ret
and
jnp
add
add
jo
dec
dec
dec
jmp
rol
mov
push
fucom
aaa
popf
inc
loopne
sub
lea
mov
inc
xor
jg
mov
add
mov
int
data16
inc
and
jo
inc
cmp
inc
inc
dec
push
fwait
or
push
jb
mov
in
fisttp
mov
jo
add
and
fnstenv
or
and
mov
loope
add
xchg
mov
or
pop
cmp
(bad)
mov
(bad)
test
dec
inc
fild
rcl
pop
loopne
cmp
mov
mov
(bad)
std
mov
lds
lods
push
stos
inc
mov
xchg
jmp
mov
lock
call
sbb
sbb
cmp
pop
icebp
lods
and
add
lea
add
or
push
add
xchg
icebp
test
mov
cmp
adc
(bad)
mov
sbb
icebp
add
cmps
adc
(bad)
cmp
push
stos
lods
cmps
data16
(bad)
fs
push
test
ins
sbb
push
mov
jecxz
mov
pop
pop
sub
xor
sahf
pushf
push
pop
add
jl
sti
shl
mov
data16
fild
adc
imul
dec
neg
sbb
mov
test
iret
sub
cwde
sbb
inc
mov
daa
sub
jge
(bad)
in
lea
jns
or
push
lods
or
ret
mov
mov
dec
cmp
cmc
mov
cmp
cmp
out
adc
or
mov
je
jns
leave
jno
pop
out
les
outs
cmps
sub
add
xor
aaa
(bad)
gs
out
add
lods
push
xchg
mov
call
push
mov
xchg
out
xchg
stc
(bad)
enter
fwait
ja
outs
jmp
lock
jmp
xor
push
push
pop
xchg
or
or
setno
mov
in
add
cmp
or
mov
ja
adc
mov
cmp
add
adc
add
aaa
repz
dec
retf
aaa
ficom
inc
dec
cmc
(bad)
(bad)
push
pop
mov
jp
jo
jne
mov
jle
push
xor
(bad)
imul
scas
pop
fnstsw
push
daa
loopne
push
shl
and
shl
adc
jg
sub
cmp
in
sbb
sbb
mov
outs
xchg
aam
mov
cmp
dec
dec
mov
out
push
mov
(bad)
push
les
adc
jns
cmps
shr
push
shl
sub
pop
(bad)
iret
mov
cmp
icebp
inc
sbb
enter
pushf
or
jnp
mov
push
and
mov
repz
pop
ins
push
loopne
test
js
adc
push
lods
imul
out
out
int
mov
out
movs
sub
fistp
cld
in
fidiv
adc
push
sub
inc
xlat
and
(bad)
popa
cmp
out
in
call
stc
mov
ror
pushf
cli
retf
rcl
adc
(bad)
lock
mov
xchg
jne
in
retf
imul
mov
call
and
pop
jecxz
or
stos
lds
adc
pushf
and
jns
into
inc
shl
add
fcomp
sub
or
jp
pop
into
dec
push
pop
pop
xor
test
pop
lahf
outs
pop
or
adc
outs
sbb
push
lods
push
dec
push
adc
mov
ins
cwde
adc
jmp
sbb
jmp
call
add
je
mov
mov
leave
mov
out
mov
test
add
popf
pop
xchg
fisubr
push
sub
dec
test
inc
aaa
lea
dec
cmp
sahf
adc
pop
or
jmp
(bad)
outs
sahf
sbb
push
cdq
mov
cmp
or
lods
out
pop
sbb
stos
push
js
cli
mov
and
sahf
mov
outs
xor
fs
dec
push
ret
dec
push
jne
xchg
sti
inc
scas
xor
adc
iret
or
aas
or
adc
jo
mov
neg
cmps
or
jnp
out
in
ror
sub
sbb
adc
sbb
loop
cmps
lods
dec
or
stc
mov
adc
push
in
mov
into
outs
add
outs
adc
call
adc
mov
adc
jl
(bad)
aaa
ror
lds
dec
mov
fild
cmp
inc
mov
sub
pop
loope
jl
pop
inc
mov
xchg
mov
ror
fnstsw
xor
jo
or
push
mov
xchg
jo
and
in
in
or
inc
scas
aam
or
sahf
iret
jnp
test
fdivr
pop
sub
(bad)
shr
sbb
dec
outs
sbb
push
fimul
test
(bad)
ja
adc
cmp
test
pushf
into
cs
xchg
xlat
jae
arpl
mov
stc
fisttp
mov
adc
push
push
int
cmp
in
push
jno
xchg
fwait
sbb
mov
enter
imul
movs
pop
daa
cmp
dec
loopne
or
ds
movs
(bad)
int
jae
xor
aam
mov
sub
push
cmp
cli
cmps
push
lock
sub
mov
mov
frndint
dec
dec
pop
mov
inc
and
xor
mov
mov
and
out
out
pop
add
dec
mov
ficomp
sub
ror
or
jb
sbb
add
out
and
cs
or
lods
adc
pop
add
mov
out
lahf
sbb
mov
icebp
xor
pop
in
mov
ja
add
addr16
inc
xchg
or
lahf
js
jno
dec
cwde
mov
cmp
push
jae
and
sub
(bad)
xor
scas
out
sbb
push
mov
ds
jns
jo
ficom
lods
and
sbb
ror
mov
sbb
loopne
pop
mov
mov
rcr
mov
bound
or
ret
or
xor
push
scas
(bad)
jb
(bad)
in
pop
mov
(bad)
fwait
imul
mov
mov
or
dec
imul
ret
fist
lahf
mov
jno
mov
sbb
jno
div
int
shr
cmp
iret
mov
jbe
pop
sti
loop
add
dec
enter
sub
fidivr
shl
mov
pop
jmp
push
or
es
(bad)
inc
leave
ret
push
call
pusha
cmp
or
or
sub
xor
xor
mov
mov
ins
jmp
in
mov
stos
jmp
cmp
ret
adc
pop
jg
into
xor
push
push
cdq
adc
out
push
jl
push
pushfw
js
lea
pop
mov
lods
out
and
addr16
pop
loopne
mov
push
cmc
xor
xor
js
mov
data16
xor
push
loopne
push
jl
xor
sar
popf
bound
lods
pop
add
(bad)
pop
leave
pushf
xchg
or
aaa
outs
pop
inc
pop
data16
xor
xchg
loop
push
jbe
dec
xor
pop
mov
xor
in
scas
push
or
dec
scas
pop
les
add
nop
push
jmp
jno
inc
sar
(bad)
or
add
sbb
lods
es
clc
jns
mov
xor
std
arpl
inc
cli
shr
xor
push
mov
adc
cmp
lea
loope
xor
aas
jno
sub
lods
icebp
jecxz
inc
jle
scas
ins
and
(bad)
rcr
sbb
mov
mov
cmp
mov
loope
push
out
mov
in
pop
push
das
lods
fwait
push
aaa
idiv
mov
jl
push
sti
lods
and
jne
mov
(bad)
(bad)
mov
xchg
ja
jecxz
rcr
ins
mov
mov
pushf
daa
jno
xchg
ins
pop
and
add
cmp
mov
outs
add
mov
cwde
rcl
or
lods
dec
scas
stos
scas
frstor
aad
mov
sbb
cmp
(bad)
mov
adc
movs
cmp
or
inc
mov
add
cmp
btc
shr
in
adc
mov
(bad)
cmp
add
ret
fmul
cmp
out
imul
jge
enter
lock
das
and
sub
xor
mov
add
cmc
xor
jo
push
js
cs
mov
sbb
xor
mov
ins
xchg
clc
jl
xlat
ins
cld
fstp
sbb
movs
cmp
rcl
pusha
popf
test
aaa
adc
dec
pop
pop
mov
pop
mov
pop
shr
int3
sti
hlt
movs
enter
push
das
pop
xor
das
dec
add
out
sahf
cmp
cli
cmp
xchg
or
js
and
call
(bad)
cmp
inc
mov
sbb
mov
sbb
jnp
xor
push
(bad)
enter
dec
ret
stos
ret
xchg
out
fnstsw
int3
mov
dec
pushf
fs
or
movs
fsubr
jnp
pushf
rol
mov
xlat
adc
imul
pop
mov
xchg
dec
pcmpeqb
aam
cmp
and
sbb
jle
cmp
and
outs
fidiv
xchg
push
icebp
xor
xor
push
mov
loope
xchg
sbb
pop
ss
sahf
sbb
add
jmp
fld
add
aaa
mov
(bad)
dec
push
scas
cmc
(bad)
cmp
jp
sbb
cdq
and
adc
addr16
add
jnp
inc
and
jns
or
ins
icebp
pop
arpl
and
clc
or
push
out
xor
retf
mov
cli
mov
test
sti
les
jo
movs
xor
out
dec
xor
add
call
popa
add
push
or
lahf
cmp
cmp
mov
enter
leave
nop
adc
aad
fwait
mov
dec
inc
mov
mov
call
inc
pop
in
loopne
inc
in
add
and
xor
retf
xlat
cmp
xor
push
ds
jmp
imul
outs
inc
add
in
call
bnd
sbb
imul
retf
mov
mov
jp
add
loop
mov
rol
jmp
sbb
dec
jnp
jg
call
add
mov
mov
mov
stc
fcmovnb
(bad)
pop
jp
bound
loop
imul
daa
dec
int3
jb
push
dec
xchg
and
push
pop
imul
cmps
dec
xchg
icebp
(bad)
adc
iret
jg
ss
ror
xchg
mov
lock
mov
jecxz
loopne
lds
mov
dec
cmc
sti
inc
xor
aam
mov
jns
mov
cmps
pop
call
or
cmps
ds
das
xchg
xor
dec
push
imul
scas
cmc
nop
fdivr
push
dec
fistp
outs
repz
inc
pop
popf
int3
push
push
ds
sbb
sub
out
adc
jmp
mov
sbb
sbb
mov
sbb
push
jno
or
mov
xchg
(bad)
cmp
dec
adc
fisubr
mov
aaa
mov
popf
mov
in
pop
and
cmp
push
mov
in
inc
inc
mov
arpl
out
sub
mov
clc
push
jle
imul
cmps
nop
icebp
mov
lods
fs
clc
cmp
in
jno
pop
push
das
jg
jne
scas
fs
jge
js
push
or
add
(bad)
cld
mov
xchg
sbb
clc
xchg
stos
sbb
or
mov
pop
bound
inc
in
sbb
fadd
push
cmp
mov
sti
inc
leave
cmc
cmp
jb
js
or
pop
mov
ja
push
sahf
popf
cmp
mov
mov
fist
adc
mov
scas
xor
aas
jle
push
(bad)
sub
fsqrt
fdiv
stc
hlt
xchg
jp
push
icebp
jl
mov
jno
or
sub
jle
enter
xchg
adc
sub
stos
in
rcr
es
ds
and
pop
loopne
jmp
or
xor
fidiv
cmp
add
mov
inc
and
sub
dec
jb
mov
fistp
int
js
cmp
iret
push
es
dec
mov
stc
ret
rcr
or
add
xchg
lods
push
icebp
call
pop
loop
es
xchg
mov
hlt
jbe
fistp
shl
clc
aam
dec
loopne
in
shr
cs
fild
mov
cwde
scas
mov
adc
fnstcw
mov
ins
inc
mov
nop
pushf
jle
adc
gs
scas
ja
jae
mov
ficomp
cmp
xor
and
pop
call
iret
fild
and
icebp
mov
pushf
inc
and
(bad)
sub
mov
jns
cdq
adc
sub
and
jl
cmps
add
sub
push
xor
fisttp
sbb
mov
mov
icebp
xchg
arpl
out
xor
jae
cmp
cli
ds
mov
mov
repnz
cmp
leave
(bad)
pop
add
xchg
fild
mov
sub
enter
xchg
ds
xor
setg
das
mov
icebp
push
and
enter
mov
and
aaa
jecxz
xor
push
add
or
jae
adc
add
push
nop
out
adc
ficom
cmp
cmp
pop
popa
mov
scas
rol
loop
bound
pushf
or
mov
icebp
sub
sbb
or
cmp
(bad)
add
pop
in
in
nop
push
jns
jecxz
fdivp
ret
mov
sbb
in
mov
mov
mov
rol
push
cmp
rol
push
sbb
mov
mov
test
mov
loopne
add
repnz
imul
sbb
and
scas
xchg
in
sub
loopne
and
mov
test
or
nop
jns
sbb
jl
jg
imul
adc
fidiv
mov
push
cmp
(bad)
outs
es
fimul
sub
call
in
adc
jno
je
sub
arpl
icebp
call
test
jp
jb
xchg
pop
leave
pop
mov
push
push
and
push
mov
out
add
dec
popa
jae
jo
(bad)
retf
scas
jge
dec
jge
sbb
jle
cmps
or
stc
int
push
push
sar
mov
mov
and
sbb
fsub
push
xchg
es
xor
hlt
mov
retf
(bad)
enter
push
dec
mov
sub
push
xor
mov
test
pop
mov
push
scas
icebp
and
xor
sar
fdivr
sahf
xor
out
sbb
push
rcl
inc
inc
fwait
ret
cmp
and
or
into
pop
inc
mov
jl
stos
ja
sub
inc
jno
cs
sbb
sbb
test
ja
cmp
adc
mov
pusha
mov
shl
daa
mov
sub
test
test
jbe
pushf
popa
loope
sahf
aad
and
ds
pcmpeqd
sub
inc
lods
(bad)
(bad)
push
add
(bad)
(bad)
add
pop
outs
fdivp
test
fcmovnu
jl
or
gs
out
pop
sbb
aad
inc
fs
stc
jo
repnz
imul
in
icebp
xor
sub
sbb
sbb
push
sbb
fdiv
mov
(bad)
fwait
mov
xor
mov
jecxz
outs
mov
or
push
ror
sbb
add
div
xor
and
lock
jae
daa
fcmove
sub
pop
fdivr
stc
ret
scas
mov
stc
mov
and
pushf
jnp
icebp
scas
xor
inc
adc
push
fdivr
jp
leave
mov
out
add
xor
test
push
pop
pop
inc
pushf
and
sub
mov
sbb
into
sahf
sbb
data16
cmc
xchg
dec
mov
dec
adc
mov
jns
mov
inc
xchg
add
cmp
mov
sbb
or
ffreep
or
mov
cmc
call
into
imul
push
push
outs
fsubr
ss
dec
jno
and
rol
adc
push
bound
retf
aad
mov
or
cmp
or
cmps
mov
repz
jg
jae
mov
mov
cmc
cwde
xor
push
xchg
push
mov
cmp
out
mov
in
repnz
(bad)
cdq
and
or
xlat
popa
mov
jl
shl
sub
shr
jmp
test
imul
and
cmp
jmp
arpl
js
(bad)
and
imul
jle
jge
mov
push
mov
or
lods
cmp
inc
jnp
fcomp
jg
stos
mov
jg
pop
sbb
out
mov
inc
mov
or
adc
int
jno
imul
outs
scas
jns
mov
dec
hlt
(bad)
sbb
std
lock
in
nop
aad
imul
fsubr
pusha
ins
shl
out
sub
inc
lahf
cmp
ja
(bad)
xor
loopne
mov
popf
in
daa
js
mov
jnp
cmp
lds
mov
add
sbb
out
cmp
pop
imul
xorps
push
inc
fisub
pusha
mov
or
and
mov
mov
mov
lahf
cmp
sbb
sub
mov
xlat
pushf
sub
dec
fdiv
jmp
es
xchg
loopne
jb
adc
xchg
dec
shr
pop
sbb
mov
or
test
cmp
pop
bound
in
xchg
mov
lock
mov
cmp
ja
ss
test
(bad)
mov
sub
fcmovbe
jge
(bad)
xor
and
push
test
or
adc
inc
push
hlt
and
jp
cmp
fsubr
cmp
xlat
int3
xchg
add
inc
push
cmp
mov
pop
ins
ds
pushf
mov
outs
fsubr
pushf
pop
jge
js
sbb
(bad)
push
push
dec
jbe
test
lahf
jg
mov
add
xor
repz
stc
adc
addr16
xchg
mov
push
pop
push
fisttp
(bad)
jmp
ds
jl
sub
push
inc
stos
mov
test
cmps
(bad)
cmp
inc
ret
sbb
retf
adc
push
ret
mov
ror
xor
daa
(bad)
leave
cmp
icebp
push
fdivr
loop
jp
and
and
jb
or
add
out
xchg
lods
inc
or
test
adc
adc
push
pop
arpl
jge
nop
mov
shl
sbb
ficom
and
and
into
push
(bad)
jno
push
mov
jge
scas
mov
add
pop
adc
or
cmp
mov
jbe
push
cmp
adc
sub
sbb
cmp
ret
jnp
sar
rcl
push
push
dec
push
cmps
frstor
xchg
mov
push
add
pop
int
cmp
mov
cmp
repnz
adc
xchg
(bad)
pop
add
scas
mov
inc
pop
mov
push
xchg
pop
(bad)
mov
jmp
jbe
xchg
cmp
sub
push
push
lods
jecxz
push
sti
jecxz
add
push
inc
outs
lods
push
sbb
xor
cmp
xlat
xor
cmp
add
fcomip
mov
adc
push
pop
dec
dec
in
in
ret
cmps
shl
fnstcw
(bad)
dec
aam
ret
call
jae
push
jnp
pop
outs
iret
push
es
xor
ss
mov
mov
vcmppd
aam
loop
es
mov
push
out
popa
dec
fwait
cmp
xchg
adc
dec
mov
jo
mov
mov
or
push
sbb
jno
pop
inc
pop
xlat
add
into
inc
add
ss
sbb
mov
loop
test
out
and
call
movs
jno
lds
lods
loope
and
cmp
cmp
test
adc
pop
xchg
push
sub
or
sbb
pop
cmp
in
mov
lock
rol
(bad)
sbb
xchg
jp
inc
and
add
das
pushf
je
in
lods
lods
shr
cmc
mov
stos
jo
push
sahf
cmp
ds
sbb
and
cmps
jo
enter
ins
ins
and
sbb
scas
sbb
jae
retf
enter
push
aad
daa
sub
push
adc
ins
push
mov
in
pop
cmps
push
jno
clc
loope
adc
jp
cmp
adc
ror
xor
sbb
push
fist
mov
ret
ret
std
bound
or
push
loop
jle
mov
retf
push
mov
pop
repnz
adc
int3
xchg
mov
adc
hlt
cli
iret
jns
test
and
jnp
scas
mov
lea
std
(bad)
lahf
pop
popa
dec
and
in
pop
pop
jp
adc
pop
cmp
lds
mov
ret
push
adc
mov
jmp
cmp
dec
dec
jle
les
dec
(bad)
xchg
jmp
adc
aaa
es
data16
fimul
mov
pusha
mov
pop
mov
dec
outs
pushf
xor
pop
mov
push
lea
mov
mov
xor
test
xchg
and
pop
fiadd
sub
pop
sbb
mov
jne
les
mov
jno
loopne
inc
dec
xchg
mov
es
es
xchg
adc
add
je
vmulps
cmp
sub
and
shl
and
add
(bad)
and
popa
dec
jbe
fsubp
mov
and
popa
jmp
leave
pop
fstp
xor
xlat
pusha
lock
dec
sub
pop
xor
fs
jp
xlat
es
pop
cmp
pop
jno
ds
stos
fisttp
stc
out
(bad)
mov
sbb
outs
inc
and
xor
cmp
cmp
xchg
mov
jae
mov
std
cli
loopne
gs
mov
cwde
bound
jae
(bad)
jg
sbb
jne
add
out
(bad)
fcmovnu
pop
scas
enter
cmc
mov
or
ss
stos
retf
lock
ds
fidiv
sbb
jbe
(bad)
mov
pop
or
ins
(bad)
lods
adc
pop
pusha
adc
cmp
scas
cmp
or
cmp
sbb
cmp
dec
mov
sahf
jo
fdivr
cmps
inc
mov
and
mov
sar
adc
test
call
cmp
ins
xchg
adc
loopne
jns
or
pop
es
lock
and
fisttp
sbb
pop
jnp
rol
mov
mov
scas
xlat
inc
lock
adc
lods
in
jo
addr16
(bad)
test
shl
enter
push
fwait
xchg
call
or
mov
into
mov
test
jae
add
cmp
div
dec
push
and
div
std
mov
test
js
mov
lods
bound
pop
mov
xor
mov
dec
fcompp
dec
mov
mov
(bad)
imul
add
push
(bad)
iret
mov
shr
mov
scas
pushf
add
ds
out
add
or
dec
jnp
fwait
xchg
int
ds
in
push
mov
mov
jle
add
pop
mov
mov
adc
cld
jecxz
lds
jg
add
in
cmps
push
or
xchg
lods
add
sahf
imul
push
cmc
test
xor
dec
sub
ror
cmp
xchg
jecxz
sub
lock
loop
dec
arpl
mov
(bad)
and
mov
push
cmp
dec
cs
mov
push
stc
popa
mov
(bad)
neg
retf
out
sub
adc
or
pop
xor
mov
jmp
mov
out
pop
fild
xchg
js
adc
mov
xchg
lock
inc
inc
xor
ss
pop
jmp
sbb
cmp
cmp
xchg
mov
jge
inc
inc
rol
(bad)
adc
test
add
dec
add
call
aam
mov
bnd
mov
push
mov
mov
into
push
pop
mov
icebp
sti
lods
push
inc
call
and
loop
div
in
icebp
(bad)
cmp
outs
retf
(bad)
sub
dec
rcr
idiv
add
clc
rcr
jg
ds
push
add
out
repz
lahf
pop
lds
cmc
clc
mov
pop
aas
repz
dec
adc
xchg
sub
pop
movs
sub
dec
mov
sbb
and
add
push
xchg
jl
cmp
push
in
adc
test
pop
imul
outs
daa
jl
sbb
int3
gs
add
sbb
xchg
lods
loopne
bound
retf
inc
test
xor
push
and
ret
push
sar
dec
dec
push
cmps
or
jno
repz
call
sub
sbb
dec
cs
call
mov
fadd
xor
(bad)
push
ret
cmp
and
add
das
fidiv
push
(bad)
sbb
push
popf
push
push
idiv
inc
cmp
add
ror
xor
ins
sub
pusha
shl
rcr
push
xlat
fcmovnbe
and
mov
pop
lds
loopne
xor
cmp
jo
leave
mov
nop
adc
jae
jmp
mov
fwait
cmp
int3
add
ds
mov
aas
adc
cmp
sbb
bnd
add
test
cmp
js
into
add
sub
push
test
sbb
pushw
sti
js
imul
js
mov
mov
jl
mul
and
push
pop
add
lahf
xchg
add
das
add
push
mov
jo
sub
sbb
jns
shl
in
popa
ret
(bad)
dec
dec
inc
jecxz
or
retf
xchg
push
das
pop
sbb
dec
mov
pop
cmp
test
xor
adc
push
push
add
jecxz
mov
ret
pop
mov
mov
sub
mov
xchg
mov
(bad)
inc
in
jne
scas
push
mov
loop
mov
popf
dec
push
pop
mov
hlt
lods
inc
fwait
sbb
xchg
sbb
cmp
push
(bad)
add
xor
bound
ror
jno
outs
xor
push
mov
mov
sub
sbb
add
daa
jg
(bad)
or
cld
xor
mov
lds
(bad)
jecxz
dec
inc
in
out
neg
jg
mov
bound
or
or
jecxz
adc
cmc
mov
clc
(bad)
icebp
repnz
scas
into
sbb
sub
inc
mov
pushf
iret
cmp
mov
jmp
imul
pop
mov
jno
mov
or
mov
dec
movs
xchg
mov
sub
lahf
js
ss
mov
add
jmp
imul
mov
scas
cmc
(bad)
push
fwait
arpl
pop
sub
fistp
mov
sub
out
maxps
ficomp
xor
sbb
adc
xor
pop
scas
dec
add
int
retf
clc
int
mov
mov
clc
dec
pop
adc
lds
int
xor
jb
mov
jbe
mov
xchg
add
pop
add
ret
push
sub
xchg
ins
in
stos
test
add
adc
lods
mov
pop
pop
xchg
adc
sub
inc
sub
pop
in
sbb
cmps
mov
fistp
cs
(bad)
cmp
call
mov
mov
inc
lock
test
xor
sbb
mov
into
aaa
outs
out
sub
push
jle
pop
pop
mov
pop
nop
icebp
add
adc
and
sbb
daa
pop
and
fdiv
push
icebp
enter
jp
xor
xchg
mov
jmp
lods
gs
sub
fidivr
pusha
add
(bad)
into
xor
loope
adc
idiv
retf
fsubr
sbb
pop
cmp
je
sbb
cmp
loopne
mov
dec
cmp
sbb
add
mov
push
fcom
in
push
lahf
sbb
jb
popf
jecxz
mov
cdq
add
jae
push
jo
add
dec
jge
out
and
pop
mov
xor
xor
lahf
pushf
je
cmp
cld
xchg
pop
inc
cmp
jmp
arpl
int3
pop
push
je
imul
mov
and
cmps
cmp
movs
and
sbb
outs
jmp
stos
inc
xor
rcl
dec
mov
jg
inc
shl
adc
xchg
mov
nop
add
mov
inc
nop
and
mov
in
loopne
fdiv
jp
mov
call
push
mov
js
pop
movs
mov
icebp
fwait
pushf
fdiv
cmps
jae
(bad)
loope
jp
jns
cmps
push
xlat
pop
inc
pushf
add
cmps
test
inc
int3
cmp
cmp
pop
out
pushf
sub
idiv
or
rol
jno
lods
push
pushf
stos
inc
cwde
push
out
or
lods
loopne
inc
ss
std
clc
xor
shl
xor
icebp
sahf
push
add
neg
xor
enter
js
gs
fstp
push
dec
ja
mov
xchg
mov
or
push
sbb
std
pop
cmp
stos
xchg
lsl
cmp
loop
dec
xor
sahf
cmp
or
out
or
add
fild
xchg
ret
jno
(bad)
and
mov
inc
push
mov
or
push
cwde
inc
imul
ret
mov
mov
ins
add
sbb
das
cmp
fdivr
inc
shl
add
mov
sbb
pop
das
outs
sbb
xchg
push
(bad)
scas
(bad)
sbb
out
addr16
sub
mov
ins
pop
fdivrp
jno
inc
cmp
adc
loopne
add
sbb
cmp
push
dec
xor
sbb
jne
les
jb
loope
push
or
adc
in
leave
sub
cmc
les
ds
repz
jae
sub
shl
jnp
pusha
in
or
imul
les
imul
cli
mov
js
jae
mov
aam
sbb
retf
and
jmp
sub
(bad)
ja
shl
imul
inc
sti
cwde
sbb
out
in
outs
cli
jno
(bad)
enter
in
ds
add
ds
adc
and
iret
mov
adc
and
(bad)
add
jecxz
jns
inc
xchg
xor
cmps
mov
xchg
or
pop
call
into
lea
inc
(bad)
push
dec
xchg
inc
cmp
push
fnstenv
push
xchg
outs
test
jl
cmps
adc
adc
xor
sbb
dec
xchg
pop
sar
add
dec
daa
leave
jno
mov
inc
ja
movs
dec
push
add
xchg
sub
ins
mov
dec
movs
xor
lds
sbb
ja
sub
lods
push
pop
das
xchg
cmp
cdq
cmc
mov
mov
mov
add
int
jns
(bad)
sbb
xchg
xor
test
xchg
lods
dec
sub
pop
pop
fcomi
rcl
pop
cmp
push
mov
pop
inc
xor
(bad)
cmp
push
sbb
mov
scas
(bad)
cwde
push
movs
hlt
daa
xor
dec
mov
ins
bound
cmp
pop
and
sub
bound
aas
lods
pop
ss
xor
mov
push
mov
inc
in
push
xor
jno
xchg
sub
mov
inc
sbb
or
(bad)
or
into
push
clc
rol
ss
mov
xchg
jns
lods
or
mov
loop
les
sub
push
push
add
pop
push
(bad)
(bad)
push
aaa
int
enter
jo
mov
jns
(bad)
pop
xchg
jmp
outs
xor
push
fdivr
ja
sti
fimul
fldenv
out
imul
inc
or
sub
loopne
push
push
test
scas
xchg
ins
jmp
fdiv
mov
je
jmp
sti
xchg
sub
mov
stc
shr
pop
test
add
mov
(bad)
dec
jmp
retf
mov
xchg
dec
add
pop
mov
push
xor
xchg
aam
repz
fld
push
in
ss
test
or
adc
inc
jnp
retf
scas
mov
fcmovnbe
clc
sti
loopne
mov
jecxz
ds
xlat
cmp
sahf
stc
jo
add
mov
adc
pop
les
mov
mov
ja
push
rol
js
mov
(bad)
loop
sub
xor
retf
mov
mov
int3
and
jmp
xor
iret
out
js
dec
aad
mov
or
adc
sub
(bad)
sbb
dec
aad
push
imul
lds
xor
push
and
pop
mov
arpl
add
push
or
jecxz
xor
scas
mov
call
and
push
or
mov
xchg
or
jo
icebp
mov
aaa
into
or
xchg
push
repnz
clc
cmp
sub
in
pop
mov
inc
das
cmp
movs
or
jo
pop
call
mov
aad
inc
stos
pop
and
xchg
sti
ja
dec
jmp
mov
dec
popa
add
cmc
push
js
or
pop
mov
imul
out
sub
xchg
xchg
push
mov
dec
sbb
cmp
dec
shl
hlt
sbb
adc
xlat
pop
jo
inc
jbe
add
xchg
add
repnz
mov
add
mov
xlat
jae
add
push
cmp
cmp
mov
pop
pop
cmp
(bad)
test
jmp
aaa
mov
adc
in
mov
mov
mov
lds
retf
cmp
adc
adc
repnz
add
and
mov
out
add
scas
jae
push
add
xchg
add
lods
(bad)
fadd
xor
leave
movs
mov
aad
aaa
add
push
(bad)
sub
ror
mov
stos
jecxz
sbb
pop
pushf
or
or
inc
sahf
lock
aad
nop
out
xchg
and
mov
fcomp
inc
loop
inc
cmp
xchg
dec
cmp
and
xchg
lea
cmp
iret
cmp
sub
jbe
mov
and
stos
xchg
outs
scas
repz
jb
jmp
pop
xchg
xor
vpunpckhwd
or
pusha
xor
cwde
pop
(bad)
into
add
adc
xor
ret
sbb
sub
add
add
dec
mov
rol
gs
cmps
pop
mov
xchg
pop
dec
adc
mov
mov
adc
adc
ficom
mov
cmp
inc
cmp
mov
and
add
arpl
jp
add
mov
bound
mov
scas
ror
add
sbb
sub
cli
dec
or
outs
pushf
jns
sahf
lock
ror
mov
add
sub
push
out
into
mov
into
les
and
xor
push
sub
sbb
cmp
cmp
(bad)
popf
jmp
push
cmp
xchg
xchg
xchg
(bad)
cmp
lods
add
adc
xor
(bad)
pop
add
mov
adc
test
(bad)
jmp
ins
(bad)
(bad)
out
into
adc
jg
iret
out
std
(bad)
cmc
test
leave
out
es
inc
shl
leave
fiadd
mov
sar
les
jb
xsha256
cmps
adc
mov
outs
or
push
mov
mov
nop
jb
xor
mov
jmp
cwde
add
mov
xor
jecxz
adc
jbe
rcl
mov
and
arpl
rol
push
sbb
inc
jecxz
mov
add
pop
scas
pop
adc
div
inc
adc
cmp
or
xor
jecxz
add
out
int3
mov
in
aas
push
lea
cmp
mov
test
ss
mov
mov
push
cs
adc
dec
pop
dec
sub
fbstp
xchg
and
es
adc
jmp
enter
mov
and
shl
stc
jnp
in
push
add
sbb
fstp
mov
pop
(bad)
push
add
add
jmp
repnz
int
inc
sub
cdq
inc
mov
enter
outs
pushf
inc
ret
mov
call
lds
imul
xlat
jns
test
loope
xchg
scas
(bad)
sub
outs
mov
std
out
or
into
xor
pusha
popa
and
xor
ds
add
jmp
jmp
sbb
mov
mov
fs
fdivp
cmp
lahf
out
or
jge
jns
inc
loope
add
loop
bound
add
push
add
xchg
call
aam
in
add
neg
jg
jecxz
pop
add
enter
(bad)
in
mov
add
lds
addr16
and
lds
ret
sar
enterw
adc
jno
sub
(bad)
mov
pop
or
adc
addr16
imul
or
cmp
cmp
mov
and
push
ror
lahf
cmp
movs
add
ja
ins
inc
fmul
out
add
mov
add
or
dec
mov
jle
inc
(bad)
les
adc
out
pop
cmp
mov
sub
cdq
scas
cmp
sbb
int
cmp
mov
(bad)
xchg
jg
jns
fs
mov
adc
sar
loop
out
sbb
xchg
or
pop
cmp
add
bound
mov
and
cmp
cmp
(bad)
sbb
pop
lock
in
jge
lds
jmp
mov
mov
and
cmps
jmp
int3
sub
pop
out
xchg
lahf
dec
dec
sub
movs
pushf
loop
pop
and
xlat
push
push
dec
mov
sbb
pop
xor
and
dec
ja
dec
jg
push
cmps
fistp
dec
push
gs
test
xchg
into
push
inc
pop
xchg
test
push
xor
imul
jl
push
adc
icebp
mov
rcr
sbb
pusha
xor
mov
xor
xor
rol
push
ret
push
fwait
(bad)
jno
mov
aad
jno
scas
cmp
add
loopne
dec
fist
sub
stc
lds
mov
inc
in
out
or
mov
pop
jl
or
mov
test
dec
mov
jp
add
jo
mov
jno
je
dec
adc
sub
adc
cmp
fisubr
dec
sbb
push
test
test
or
mov
push
mov
arpl
mov
iret
(bad)
stc
ret
cmps
push
scas
inc
add
shl
cmp
rcl
or
daa
mov
mov
(bad)
es
push
shl
mov
mov
rcl
imul
ret
mov
sub
pop
int3
sub
test
shl
stos
test
in
add
sbb
cld
popa
cwde
and
add
inc
dec
in
and
icebp
rcl
adc
sbb
jg
sbb
adc
stc
xchg
or
mov
fisubr
inc
pop
fisubr
pop
lods
inc
and
xchg
outs
lods
pop
into
xlat
lods
inc
inc
outs
push
sbb
mov
sub
add
sub
mov
jge
repz
in
imul
test
pop
ins
bound
inc
lods
adc
cwde
nop
add
je
lock
or
add
(bad)
scas
icebp
sub
cmp
test
push
jecxz
ins
cs
pop
adc
dec
fisub
test
ins
popf
ss
xchg
jno
cmp
xchg
xchg
push
bound
lahf
jecxz
add
hlt
(bad)
add
cmps
xchg
push
or
inc
pop
sub
push
cwde
mov
sub
inc
fiadd
popa
in
pop
mov
cmc
or
add
stos
ins
cmp
mov
xchg
or
jo
call
(bad)
push
sub
cli
jecxz
xchg
inc
and
xchg
je
ja
mov
sahf
jno
dec
xor
pop
call
fild
repz
xor
bound
dec
mov
test
ins
shr
enter
cli
and
mov
dec
mov
cmp
mov
cmps
leave
jo
addr16
fisttp
test
mov
or
push
mov
lods
sub
repnz
sahf
adc
add
js
pusha
rcr
cmp
and
aaa
sbb
xchg
xchg
sbb
push
cmp
add
sub
adc
test
mov
add
pop
or
jns
stos
daa
ds
jne
ja
add
push
pop
add
jnp
mov
xchg
or
ja
adc
or
push
fistp
pop
call
pushf
or
out
add
jb
sbb
dec
jo
and
cmps
ss
or
add
adc
sbb
fcomp
add
(bad)
fcomp
ds
sub
popa
add
rcr
inc
outs
mov
dec
push
test
xor
jmp
test
leave
loopne
sbb
in
push
stc
mov
pop
xchg
or
int
bound
lods
cli
lods
add
(bad)
mov
adc
daa
(bad)
cld
loope
dec
push
or
sar
dec
jg
xchg
int3
dec
out
repnz
iret
cmp
ds
jo
into
clc
rol
call
fadd
test
loopne
and
dec
or
add
pop
pop
(bad)
sbb
xlat
sub
push
lahf
shl
call
push
push
add
or
push
inc
outs
inc
xor
sbb
jmp
retf
fist
or
push
and
mov
jo
inc
gs
inc
adc
(bad)
in
inc
jecxz
sbb
fild
xor
sub
mov
neg
aad
fsub
sbb
(bad)
mov
scas
sti
xchg
test
sbb
arpl
cmp
es
cmp
retf
and
jne
add
lea
add
rcr
and
dec
sbb
add
jp
pushf
push
add
rcr
icebp
inc
outs
int
loopne
ja
sbb
lds
and
add
add
jmp
dec
popa
test
jns
sbb
cmovno
sbb
inc
mov
mov
fnstsw
cmps
jmp
add
xor
addr16
jno
daa
sahf
push
sbb
and
pop
adc
call
mov
repnz
ja
(bad)
shl
popf
mov
or
shl
pusha
add
clc
jno
dec
test
mov
push
push
mov
aam
out
outs
(bad)
cmps
or
sar
adc
call
adc
pop
cmp
lds
test
aad
rcl
out
mov
mov
adc
jbe
mov
push
call
cmp
mov
sbb
mov
and
mov
(bad)
neg
xor
addr16
(bad)
sub
inc
push
call
mov
pop
sub
pushf
or
out
test
fxch
xor
push
jge
out
leave
push
pop
loope
mov
pop
fist
lock
cdq
inc
popf
enter
popa
mov
adc
jno
and
ins
pushf
cmpxchg
dec
sbb
add
jmp
cmp
retf
fwait
add
mov
fcmovnb
jecxz
fbld
int
ins
clc
or
stc
ror
jbe
xchg
or
xchg
fld
gs
stc
xor
inc
ror
pusha
adc
inc
inc
pop
lods
jae
and
sar
inc
inc
repz
js
gs
pushw
xchg
sti
(bad)
in
popa
les
pop
sti
dec
jl
jle
xor
adc
cmp
xchg
pushf
mov
aam
mov
test
push
adc
stc
repnz
push
enter
dec
jbe
lods
inc
mov
push
call
fs
sbb
imul
xor
(bad)
cmp
add
push
or
adc
pop
retf
repz
ss
mov
or
mov
in
push
sub
mov
in
xchg
cmp
and
mov
leave
mov
outs
scas
sbb
bound
es
mov
mov
adc
push
jmp
loop
dec
add
std
jb
cmps
cmps
(bad)
fnstsw
lds
ins
mov
imul
inc
fnsave
xor
inc
inc
adc
bound
imul
sti
sub
and
adc
add
push
pop
stc
in
sub
adc
or
inc
dec
jmp
stos
movs
dec
xor
mov
mov
jl
mov
sub
or
popa
add
(bad)
sbb
sbb
adc
ja
fmul
inc
(bad)
adc
addr16
or
inc
(bad)
pop
loop
repz
sbb
mov
dec
xchg
ss
pop
cmp
sbb
lea
into
les
dec
pop
shl
call
mov
mov
frstor
mov
cmp
xor
jo
pop
xchg
hlt
mov
push
xor
std
inc
pop
adc
dec
stos
mov
in
push
and
cmp
aaa
xchg
repnz
mov
daa
test
ret
dec
lods
add
mov
in
add
cmp
fldenv
leave
repnz
add
sbb
pop
push
test
mov
adc
dec
sbb
mov
adc
push
jns
imul
xor
inc
in
not
outs
mov
inc
xor
je
add
call
jl
into
sub
jbe
xchg
popf
add
push
push
addr16
sub
(bad)
cld
call
pushf
add
pop
fidiv
ror
clc
les
add
cmp
adc
add
dec
cmp
xlat
cld
ret
push
sbb
lahf
jp
jo
mov
cli
in
add
jne
std
jno
fdiv
adc
jmp
add
jo
lods
or
inc
jns
dec
fwait
jl
cmp
fsubr
dec
mov
imul
xchg
sub
or
xchg
ins
loopne
pop
popa
fsubr
ret
ret
mov
pop
jno
add
jg
sti
shr
xchg
jb
pop
xchg
jmp
aas
in
popa
lock
fdiv
lahf
imul
or
and
dec
pop
add
popa
sub
sbb
mov
adc
cmp
inc
xchg
aas
cmps
and
mov
frstor
mov
movhps
ins
(bad)
mov
(bad)
xor
lea
mov
sbb
pop
dec
mov
ror
xor
sahf
xor
inc
xor
cmp
dec
in
rcr
mov
retf
jo
mov
pushf
jge
fst
into
and
and
ror
xchg
out
ret
loope
pop
std
daa
jbe
outs
arpl
push
xchg
or
mov
cmc
aad
shl
(bad)
inc
pop
jne
pop
movs
sub
mov
(bad)
shl
retf
lods
jg
into
cmp
or
pop
cmp
icebp
xchg
inc
and
movs
inc
lahf
iret
pop
popa
dec
push
cld
js
mov
inc
push
jmp
icebp
mov
imul
or
jno
addr16
pop
icebp
add
or
imul
in
or
repnz
inc
xchg
cdq
cmp
loopne
js
jge
xchg
test
sbb
jmp
arpl
scas
pushf
add
jns
jle
inc
dec
push
ds
adc
adc
mov
mov
repnz
or
sub
cli
test
sbb
scas
(bad)
xlat
sbb
pop
sub
pop
clc
stc
add
sub
leave
scas
sar
xor
pop
or
mov
rcl
outs
inc
repnz
cmp
ror
out
pop
int
xchg
xchg
pop
fld
mov
(bad)
sbb
add
add
jmp
outs
adc
rol
jns
shl
shl
nop
inc
lds
rcl
leave
outs
out
sbb
jmp
clc
xor
add
xlat
retf
(bad)
or
scas
jg
popa
fwait
add
pop
cmp
test
or
jle
cmp
in
add
cmp
out
cmps
mov
sub
int
pop
inc
and
adc
or
ss
stc
ret
jno
test
cmps
add
pop
cmps
cmp
cmp
idiv
(bad)
or
pop
and
xchg
jo
rcr
add
inc
add
adc
xchg
inc
jl
dec
lock
sub
jne
loopne
data16
mov
jecxz
test
cmps
(bad)
jle
ret
inc
jmp
call
mov
(bad)
cld
in
or
xchg
je
(bad)
shr
iret
cmp
inc
sub
(bad)
frstor
jbe
push
jno
jg
sbb
mov
fs
or
cmp
iret
(bad)
and
ja
ret
dec
xor
(bad)
jecxz
pop
mov
out
loopne
fnstcw
lods
sbb
sub
add
mov
mov
xchg
daa
jo
aad
test
retf
test
lea
test
mov
call
arpl
adc
mov
jbe
mov
retf
push
add
sbb
cmp
sbb
dec
adc
push
out
xchg
stos
inc
rcr
jle
movs
arpl
xor
ret
or
mov
popa
cmp
ret
clc
aad
add
mov
fidivr
fnstcw
aam
mov
jae
call
cmc
jno
inc
int
fdivr
jno
outs
icebp
jmp
pop
sbb
jg
pop
pop
lock
repz
xchg
pop
fidivr
repz
aas
mov
imul
movs
pop
test
icebp
xor
fld
mov
aas
dec
and
and
cld
cmp
xor
mov
call
pop
maskmovq
test
ret
xchg
or
fist
mov
mov
fnstenv
and
icebp
adc
mov
shr
fwait
sbb
push
sub
out
shr
into
mov
xchg
dec
push
jecxz
add
sub
dec
and
inc
mov
fidiv
jmp
jge
mov
mov
add
xchg
test
(bad)
std
arpl
cmp
sub
adc
mov
lods
cmp
call
test
int3
inc
adc
push
mul
sub
jge
xchg
or
(bad)
into
pusha
jns
mov
ret
das
aad
add
push
test
scas
pop
std
pusha
add
cmp
pmullw
fistp
xchg
jl
ret
push
add
scas
fstp
pop
ficomp
mov
mov
adc
daa
test
or
push
push
popa
and
xchg
cwde
xchg
popf
xchg
mov
test
in
mov
fisttp
and
(bad)
mov
cli
loope
loopne
mov
jg
sbb
mov
mov
into
pop
dec
inc
push
adc
xor
or
daa
data16
sbb
sti
fsub
movntps
pop
pushf
cdq
movs
inc
daa
sub
in
cmp
loope
movs
ret
lea
xor
jmp
fistp
dec
mov
inc
ins
in
jecxz
or
sbb
pop
stos
inc
mov
mov
outs
adc
popa
or
ret
(bad)
or
or
and
dec
push
xor
das
adc
in
mov
nop
xor
mov
lea
pop
add
pop
arpl
in
xchg
fidiv
ffree
xor
dec
pop
les
(bad)
retf
mov
dec
pop
pop
out
add
or
fcomp
push
outs
(bad)
xor
fadd
cs
cmps
sbb
pop
mov
mov
(bad)
shr
cmp
xchg
out
xlat
and
sub
mov
cmps
pop
dec
mov
(bad)
iret
ffreep
add
fucomi
test
imul
dec
js
jo
nop
dec
dec
scas
aas
(bad)
and
push
js
mov
int
pop
clc
sbb
adc
jno
ret
ss
sbb
dec
lods
(bad)
sub
dec
push
dec
pop
cdq
je
dec
push
out
pop
sbb
xchg
and
dec
and
add
daa
nop
jmp
add
add
in
in
jnp
ss
rol
daa
(bad)
jmp
lea
sbb
inc
and
movs
jbe
jle
loopne
cmp
sbb
out
sbb
out
fsubp
call
jae
cmp
repnz
mov
xchg
(bad)
fcmovne
xlat
js
adc
pop
(bad)
and
sahf
adc
mov
push
pop
pushf
hlt
in
add
div
call
sbb
push
test
add
bnd
das
pushf
sbb
mov
ds
aas
xchg
mov
sbb
cli
retf
es
xchg
nop
test
pushf
push
cmp
jbe
imul
out
call
sub
dec
cmp
inc
inc
ins
cmps
movs
icebp
adc
lea
pop
test
jge
repz
int3
push
push
add
cmp
movs
mov
pop
adc
sbb
stc
rcl
cmp
std
js
dec
sbb
xlat
sbb
(bad)
fs
mov
push
jmp
jb
and
dec
xchg
xchg
xor
sbb
test
cmp
int
ffreep
das
jmp
xchg
jns
add
sbb
sub
ins
rcr
inc
inc
lods
jb
push
push
cmp
inc
(bad)
lds
mov
push
mov
ins
int
adc
cmp
repz
or
sub
adc
adc
lahf
ret
icebp
xchg
adc
(bad)
cld
loopne
popa
es
ins
ficom
pusha
out
mov
test
ror
xchg
in
mov
std
loope
xchg
in
pop
std
aam
sbb
and
aas
jmp
sti
push
adc
jg
seta
add
iret
or
loope
ret
(bad)
pop
movs
repnz
inc
pushf
mov
push
jecxz
xchg
pusha
imul
imul
pushf
cmp
shl
test
icebp
xchg
inc
push
mov
cwde
scas
xor
jmp
pushf
sti
xor
inc
mov
adc
cmp
loop
(bad)
ins
jmp
test
dec
lds
sbb
sar
mov
fdivr
mov
ss
cmp
fcmove
dec
add
push
retf
sub
fwait
call
iret
cmp
movs
movs
add
mov
scas
pushf
mov
(bad)
out
js
and
adc
cmp
ja
pop
push
es
daa
dec
cmps
lds
adc
cmps
push
popa
outs
adc
scas
and
fisub
xchg
push
dec
div
shl
js
shr
mov
in
push
push
test
icebp
jb
pop
das
push
pop
aas
xlat
js
addr16
mov
shr
mov
ins
sbb
sub
fsub
ss
dec
inc
adc
jns
xor
push
add
pop
(bad)
and
add
loope
imul
xor
adc
adc
repz
push
push
fwait
out
xchg
mov
push
sub
add
(bad)
stc
sar
mov
rcl
(bad)
aas
mov
mov
pop
jecxz
jl
pop
mov
data16
dec
jle
add
ret
dec
jnp
xor
repnz
mov
jnp
xor
mov
mov
mov
dec
cmp
jmp
sahf
fmul
popf
or
mov
xchg
in
in
jecxz
ja
dec
mov
pop
in
(bad)
out
nop
sar
sbb
push
inc
in
stc
cwde
stos
jmp
ss
cmps
push
push
pusha
dec
jg
mov
es
sub
pusha
add
push
cmp
repz
adc
mov
xor
mov
(bad)
sub
jno
sub
out
ss
leave
inc
or
jmp
xor
xrelease
or
sub
mov
cmp
repnz
adc
cmp
push
es
cmp
push
mov
push
fcom
test
aad
outs
stc
adc
mov
loopne
and
outs
pop
daa
(bad)
pop
xchg
pop
push
popa
and
pop
cmp
gs
aas
out
pop
mov
retf
or
sub
int
sbb
cmp
and
xchg
jno
ss
pushf
out
in
push
or
cli
cmp
push
xor
or
les
adc
cli
lock
lods
xchg
or
imul
jo
fistp
adc
or
shl
mov
inc
iret
scas
sub
or
imul
or
aas
mov
mov
inc
or
mov
jno
mov
(bad)
jo
arpl
sti
movs
int
push
push
pop
mov
sbb
es
aaa
retf
pop
pop
xchg
scas
scas
es
add
gs
mov
lds
and
jae
retf
in
jmp
adc
aam
jo
retf
cmp
(bad)
sti
(bad)
fst
inc
pandn
xor
out
pushf
pop
push
mov
into
and
jmp
jbe
in
mov
ror
sbb
mov
mov
test
or
icebp
cmp
dec
sbb
mov
inc
popf
pop
aas
pushf
jne
add
lods
adc
mov
sti
ds
xor
sbb
mov
(bad)
sub
push
fisubr
stos
xchg
enter
cmp
push
mov
ds
push
aaa
pop
popa
mov
and
add
movs
jg
push
push
adc
or
mov
in
stos
cmp
lock
pop
stos
sbb
cmc
jmp
sub
rcl
imul
or
mov
fist
shl
enter
ret
loopne
data16
mov
aam
sub
adc
stos
leave
retf
pushf
or
cld
loop
test
sbb
ret
sub
stc
enter
cmc
fld
aas
scas
push
xchg
nop
sbb
std
push
std
test
mov
or
retf
mov
loopne
int3
adc
test
mov
xlat
outs
and
xor
test
sub
dec
mov
(bad)
clc
cmp
popf
jne
cmp
movs
aaa
fsub
into
adc
sbb
add
xchg
in
jl
int
cmovg
repnz
cdq
pop
daa
mov
ret
adc
jo
xor
stos
fwait
cmovo
pop
sbb
pop
inc
or
lods
pusha
ret
ds
push
mov
inc
repz
cmp
and
rol
mov
rcl
sub
call
cmp
cs
add
fcmovnb
leave
and
inc
pop
popa
loopne
fcomp
sbb
aaa
cmova
xor
arpl
popf
cmp
neg
out
adc
add
adc
sahf
or
fdivr
into
cmp
sar
push
mov
sti
mov
dec
ret
inc
or
xor
push
cmps
mov
mov
cmp
mov
jecxz
pop
pop
mov
jno
or
push
lahf
pop
inc
jmp
sub
adc
ins
sub
xor
xor
call
pop
sub
xlat
pop
jmp
add
mov
mov
out
lock
jnp
mov
iret
icebp
test
mov
in
xchg
inc
add
mov
out
pop
or
scas
adc
out
call
leave
hlt
int
jno
push
imul
test
xchg
mov
call
jne
or
dec
stos
pop
fcmovnbe
rcr
ins
movs
sbb
aas
pop
xor
jge
js
add
push
sbb
mov
push
call
xor
fild
adc
dec
push
test
and
shr
(bad)
adc
cmp
(bad)
or
and
in
cmp
adc
mov
sahf
out
cld
jg
aam
jp
arpl
aad
js
cmc
mov
and
xchg
ret
or
ins
pop
jnp
jg
das
push
ds
dec
ss
or
mov
pop
xor
cmp
or
sahf
cmp
push
test
test
test
dec
mov
pop
sbb
cmps
cmp
mov
je
jne
xchg
mov
xor
addr16
int
ja
mov
cmp
lahf
cmps
adc
cmp
and
inc
push
ja
pop
jb
or
pop
sub
push
scas
lock
xor
mov
ret
mov
mov
push
imul
ins
scas
jns
dec
add
lea
neg
push
fstp
mov
call
cmp
movs
push
jg
jecxz
js
jbe
jo
mov
jo
aaa
pop
mov
ins
fst
push
test
lahf
pushf
adc
add
push
sbb
mov
xor
push
jns
cmp
rol
inc
add
mov
fwait
inc
inc
sub
inc
and
mov
int3
xor
pop
xchg
fld
shl
add
adc
sbb
cmc
call
jmp
scas
leave
xor
ret
mov
jg
or
jecxz
mov
sub
sbb
lea
pusha
xor
cdq
ds
jo
dec
push
test
into
pop
cwde
nop
adc
mov
jo
es
out
icebp
hlt
iret
inc
xor
aaa
imul
cwde
cmp
aam
loopne
push
fwait
lahf
push
adc
lods
add
shl
pushf
mov
popa
dec
sub
popf
ds
mov
inc
mov
test
push
adc
scas
fdivr
mov
loope
dec
push
neg
add
pop
adc
loopne
inc
jno
loope
aas
les
jmp
xchg
jbe
mov
mov
or
in
bound
xchg
push
mov
pop
or
aam
or
lea
cld
push
xor
jns
out
fidiv
push
jmp
repz
mov
aaa
sub
stos
fld
loopne
or
or
call
shr
out
(bad)
adc
jmp
jae
cmp
daa
and
add
aas
jge
xor
rol
or
bound
iret
paddb
test
ror
out
inc
xchg
pop
and
mov
js
mov
js
ins
and
int
lods
jbe
stos
mov
sbb
xchg
pop
push
movs
or
sbb
fild
ffree
js
iret
cmp
cmps
inc
sub
inc
jns
inc
ret
sub
(bad)
sbb
push
in
les
lock
stos
sub
ror
ja
mov
inc
mov
xchg
xchg
in
jge
inc
int
fisttp
idiv
(bad)
cmp
jle
jo
test
xor
aaa
adc
retf
sub
push
imul
cmc
loopne
cmp
clc
sub
or
sti
jl
adc
inc
adc
clc
jle
ror
mov
xor
adc
pop
and
mov
(bad)
out
adc
jae
out
jecxz
xchg
or
enter
mov
xchg
push
jecxz
rcr
lock
xchg
movmskps
js
sbb
std
cmp
mov
lock
jo
jno
push
fwait
imul
and
inc
cdq
lock
mov
sahf
clc
sub
jmp
add
nop
xchg
sbb
popa
or
mov
inc
outs
push
(bad)
adc
imul
adc
push
xchg
shr
jl
add
test
leave
add
mov
into
lds
loope
mov
aas
(bad)
jae
add
xchg
sti
xchg
jnp
jae
mov
fidivr
xlat
sbb
mov
fwait
out
cld
out
into
mov
push
test
js
lahf
dec
into
mov
or
inc
cdq
fldcw
fadd
lds
les
pusha
repnz
mov
lea
cmps
mov
mov
and
pushf
mov
sub
adc
stos
add
inc
pop
mov
enter
mov
js
clc
les
ret
xlat
addr16
cld
pusha
jns
inc
or
lahf
pushf
dec
outs
ins
aaa
fdivp
popf
adc
mov
adc
mov
cmp
loop
or
js
cmp
jg
inc
arpl
add
adc
cs
and
cmps
xchg
pop
loopne
popa
mov
push
call
movs
fld
pop
and
add
rcl
sub
pop
xchg
sbb
sub
js
add
add
or
mov
popa
test
xor
and
pop
outs
cmp
add
sub
jbe
dec
scas
jns
cmc
hlt
sar
call
and
mov
push
xchg
popf
mov
mov
push
mov
pop
pop
(bad)
shr
das
test
loop
xlat
adc
sti
pop
adc
pop
icebp
inc
sbb
mov
rol
cmp
push
test
mul
loopne
inc
cmps
pop
lods
call
cmp
(bad)
loopne
push
cmp
jecxz
xchg
xor
mov
push
jg
scas
repz
dec
(bad)
inc
cdq
inc
enter
xchg
in
adc
cli
fwait
adc
dec
push
divps
jno
ss
ds
cmp
shr
jl
rcl
addr16
xlat
add
nop
std
sti
loopne
xor
lahf
mov
out
adc
icebp
fwait
mov
jp
push
or
mov
xlat
test
inc
mov
retw
std
loopne
pop
inc
inc
mov
pop
jae
add
xchg
gs
pop
icebp
sti
inc
mov
scas
fild
jle
xor
and
out
jecxz
mov
jle
or
arpl
sbb
nop
shl
enter
fidiv
ret
(bad)
out
repz
inc
mov
adc
push
jmp
adc
idiv
inc
dec
jmp
(bad)
xchg
add
(bad)
xor
pushf
jp
jmp
fdivr
jnp
sbb
mov
pop
add
(bad)
and
or
out
adc
pop
icebp
in
ret
mov
aam
fsubr
hlt
sub
mov
xor
ds
dec
cmps
mov
jnp
loope
add
sbb
repnz
les
aam
mov
dec
repz
fsub
ret
pop
int3
lahf
mov
dec
pushf
hlt
test
xor
(bad)
adc
push
rcr
jl
cld
fs
mov
jge
test
leave
fcmovnbe
test
inc
out
sbb
ret
and
jecxz
iret
fist
pusha
in
dec
and
jg
js
push
test
loop
lahf
inc
cmp
mov
add
or
stos
mov
inc
push
cld
jne
sub
scas
std
in
mov
test
out
cmp
push
fbld
sbb
das
xrelease
mov
jecxz
cmp
mov
in
mov
sar
pop
xor
imul
jno
push
leave
inc
xchg
js
xchg
pop
pop
loope
jp
jns
mov
xor
inc
mov
xor
mov
int
cmp
inc
or
inc
mov
or
inc
mov
xchg
xor
mov
push
sbb
hlt
lds
add
out
imul
idiv
daa
outs
jcxz
add
sti
(bad)
popa
pop
pop
lahf
cmp
stos
mov
ficom
mov
lods
inc
out
adc
fbld
es
rol
data16
adc
dec
jnp
sbb
shl
add
xchg
movs
or
retf
inc
leave
pushf
add
add
ins
scas
and
retf
mov
cmps
jo
shr
ror
sbb
fild
pop
and
test
dec
hlt
cmp
cwde
fsubr
hlt
in
loope
xor
add
jp
in
out
sbb
(bad)
les
sbb
push
sub
(bad)
and
mov
mov
lods
mov
dec
adc
push
ins
(bad)
adc
inc
xchg
js
loop
and
dec
dec
loop
inc
xchg
sbb
movs
ins
test
into
in
push
push
loopne
rcr
xor
int3
ffree
or
or
fistp
mov
jge
jg
mov
jl
add
push
pusha
pop
pop
loop
push
mov
lds
loop
(bad)
mov
jmp
xor
rcr
jecxz
and
jb
iret
into
and
mov
inc
mov
mov
push
jle
or
inc
scas
daa
out
mov
dec
fcomip
lods
fcomp
int3
sub
scas
xchg
jle
cmp
jle
sbb
push
dec
jle
cmps
add
scas
pop
mov
sub
mov
pop
addr16
loope
ret
mov
stos
cmp
dec
cmp
add
pop
rcr
jb
stos
and
stc
and
fdivrp
es
xor
ja
lahf
arpl
adc
pop
setle
mov
shl
jecxz
(bad)
loopne
icebp
fadd
jl
adc
jmp
fiadd
push
mov
adc
sbb
sti
call
clc
lds
xlat
pop
pop
test
xchg
and
inc
push
lods
div
mov
cmp
and
jbe
sub
add
je
mov
icebp
xchg
dec
sbb
imul
and
(bad)
push
mov
repz
sub
xchg
aas
sbb
test
push
shr
add
out
rcl
push
ds
aam
or
popa
retf
pop
mov
sub
(bad)
dec
push
(bad)
ror
jno
adc
movs
sbb
jle
jle
jne
xchg
jl
and
add
js
outs
setno
stc
lahf
pop
pop
and
or
and
jno
mov
mov
jbe
std
bound
sub
sbb
jg
push
in
dec
fild
in
fist
aad
pop
(bad)
sbb
pop
retf
ja
(bad)
adc
sub
xor
cmps
jmp
mov
gs
pop
jl
icebp
call
call
in
sbb
add
das
sbb
push
mov
lods
add
jg
or
sub
jmp
mov
pop
and
fcom
ficomp
pop
pushf
fcmovu
call
les
test
jecxz
jae
mov
jb
mov
inc
loopne
les
repnz
mov
call
out
push
ror
fwait
test
loopne
adc
(bad)
pop
test
(bad)
ins
shl
(bad)
js
mov
or
push
mov
fst
add
or
inc
cmps
push
frstor
jb
ins
push
dec
jae
push
outs
cmps
cmp
sub
jle
into
xor
xor
mov
dec
shl
push
ds
lods
ret
push
lea
xchg
inc
cmp
aad
jne
mov
sub
push
popf
in
push
mov
mov
les
shl
inc
push
cmp
retf
add
or
stc
int
mov
out
nop
pusha
mov
push
mov
in
pop
push
rcl
xor
call
xlat
mov
outs
xchg
lock
push
cmps
add
jns
inc
imul
fidiv
repz
jb
ret
cmp
loop
lods
sbb
and
test
dec
bound
pop
in
retf
in
push
or
fsubr
call
pop
dec
dec
mov
scas
arpl
inc
add
fwait
jne
repz
mov
inc
or
xchg
cmps
jecxz
into
loopne
mov
push
adc
xchg
or
pushf
cdq
dec
sahf
pop
mov
mov
adc
(bad)
xor
leave
push
sub
xchg
pop
add
arpl
mov
mov
pushf
dec
addr16
jg
in
sar
js
imul
sar
adc
and
xchg
(bad)
fnstcw
xchg
adc
mov
mov
pop
into
pop
adc
scas
xchg
push
jnp
ficomp
xchg
cmp
bnd
push
cmps
loopne
scas
jmp
loope
xor
retf
ins
sbb
mov
cmps
cmp
jb
xor
cmp
or
sbb
inc
xor
add
lds
adc
std
stc
les
xor
mov
sub
xchg
test
mov
fisub
arpl
lea
lods
pop
(bad)
pop
or
js
repnz
out
jmp
xchg
pop
mov
mov
imul
imul
mov
fdivp
in
and
mov
cmp
mov
inc
retf
fisubr
nop
mov
mov
inc
pop
push
pop
stos
mov
xor
(bad)
out
loope
hlt
sbb
inc
ins
inc
ret
push
js
rcr
mov
into
daa
ret
fucomip
(bad)
add
cmp
cmp
xchg
dec
fwait
in
jo
sbb
sbb
add
push
add
inc
lock
cmp
mov
jne
cli
fs
inc
enter
dec
into
lahf
pop
mov
aas
mov
ja
retf
add
adc
jno
sar
add
arpl
clc
mov
pop
adc
inc
inc
fisubr
icebp
test
lahf
xchg
aas
dec
dec
add
outs
add
ds
xchg
mov
pop
push
lds
xor
add
sub
jns
push
repz
jle
jnp
scas
sar
fist
loope
jae
push
sub
or
mov
clc
sbb
enter
lods
xchg
or
mov
fisttp
rol
jp
enter
jo
push
mov
clc
into
sub
push
xor
int
mov
(bad)
jae
inc
and
jmp
add
sbb
xchg
fisub
js
popf
jmp
pop
pushf
push
pop
lds
rcl
fdivrp
pusha
cmp
pop
jne
js
jno
jno
xor
jecxz
cmp
cmp
pusha
jecxz
jns
out
or
dec
pop
cmp
add
mov
add
pushf
loopne
mov
mov
sub
lds
fisubr
test
jno
lea
stos
shr
push
dec
push
cmps
imul
fs
sub
sub
retf
push
sti
push
or
push
pop
xlat
in
loope
jns
ret
call
(bad)
out
mov
add
fnstcw
push
ins
not
mov
sub
cmp
fsubr
mov
in
or
pop
xchg
pop
test
xchg
ins
pop
mul
adc
test
mov
adc
cmp
ds
in
jae
ret
mov
and
imul
mov
add
push
inc
cmp
jbe
ds
mov
and
jmp
loop
cmp
idiv
das
pop
scas
mov
jae
dec
mov
push
sbb
mov
and
(bad)
std
bound
cld
icebp
inc
jbe
mov
clc
shr
aad
cmc
add
xor
jne
fcmovu
pushf
sbb
xchg
inc
mov
inc
jle
inc
inc
xlat
mov
ret
or
mov
mov
loopne
call
jp
mov
lea
adc
jo
ret
mov
jbe
iret
inc
sub
bound
stos
hlt
jecxz
add
jno
iret
pushf
imul
mov
sahf
out
jecxz
push
dec
hlt
icebp
hlt
std
xor
das
into
jb
or
adc
retf
imul
call
xchg
aad
pop
popf
imul
mov
out
jb
stos
iret
fisttp
fld
adc
sbb
pop
adc
push
mov
dec
add
jbe
cmps
jmp
sub
and
mov
or
ficom
add
cmp
ds
dec
sbb
push
pop
add
or
or
cmp
mov
jo
mov
loope
mov
sub
mov
add
in
inc
inc
imul
mov
int
cmp
jmp
cmps
ss
shl
addr16
imul
jno
add
xor
aad
shr
shr
test
jb
adc
gs
add
push
inc
sbb
or
pop
mov
jbe
sbb
sbb
mov
push
movs
movs
and
js
out
or
inc
cdq
test
ret
sbb
and
add
adc
xor
in
sbb
pop
mov
jle
mov
ror
add
jo
pushf
or
pop
mov
(bad)
xor
scas
push
jge
mov
xchg
sbb
cmp
inc
ins
(bad)
and
pop
out
cmp
pop
cmps
retf
bound
mov
(bad)
xor
rcr
cmp
jno
retf
popf
xchg
shr
repz
cmps
out
repnz
dec
mov
or
frstor
ins
sbb
sub
dec
lock
pop
pop
out
mov
mov
pop
mov
test
dec
sahf
push
jbe
adc
push
xchg
mov
sub
mov
test
add
xchg
sbb
and
(bad)
pop
sti
(bad)
enter
xchg
pop
clc
pusha
test
or
mov
xchg
(bad)
or
xor
jns
push
mov
jnp
daa
mov
mov
out
and
retf
pop
and
cs
repz
sub
psrad
add
leave
idiv
jmp
xor
jno
mov
cmp
mov
sar
adc
xchg
call
(bad)
sub
inc
icebp
sub
stc
les
(bad)
hlt
add
mov
add
jmp
into
inc
sti
mov
icebp
ja
push
sbb
push
jge
mov
push
cs
xchg
mov
pushf
stos
cmp
aad
pop
pop
or
jmp
loopne
mov
cld
pusha
mov
or
retf
jmp
sar
inc
aad
mov
dec
cmp
pop
or
pusha
out
adc
jp
jno
mov
cwde
xor
mov
jge
xor
scas
add
jo
nop
loope
xor
leave
pushf
fcom
mov
inc
movs
add
or
sub
mov
out
sbb
mov
sbb
pop
inc
pushf
lods
repnz
cwde
inc
cdq
shr
outs
ins
add
mov
and
sub
mov
scas
or
xchg
js
cmp
cmp
fcom
push
inc
je
jo
mov
dec
push
jle
mov
push
pop
daa
and
cmc
lods
mov
sbb
inc
sub
mov
imul
inc
and
adc
leave
(bad)
sub
stc
test
cmp
(bad)
popf
out
data16
fcom
mov
in
shr
jae
cmp
pop
scas
js
mov
or
sahf
inc
lds
iret
pop
leave
fild
sub
cmp
movs
or
jno
pop
cmc
nop
cwde
jmp
addr16
dec
inc
in
mov
and
cmc
jecxz
inc
xor
add
aaa
repz
leave
push
into
cmp
xchg
out
adc
mov
cs
jo
pop
fcomp
std
jns
dec
je
or
lock
sub
int
or
sbb
sub
ret
sbb
repz
jne
das
adc
scas
icebp
add
cmp
pop
fisttp
dec
inc
movs
loopne
inc
and
add
dec
loope
(bad)
mov
cmp
hlt
pop
sbb
loope
enter
pop
push
(bad)
cmp
in
sub
cmp
mov
jnp
inc
pop
add
ds
pushf
or
add
ret
jns
mov
repz
out
mov
dec
adc
in
test
sub
cmp
xchg
xchg
jno
in
cmp
lods
imul
dec
fild
cmp
pop
mov
add
xor
mov
mov
cwde
and
shl
(bad)
stc
inc
push
push
push
cmps
xchg
mov
dec
mov
in
scas
iret
jle
jbe
dec
xchg
sbb
ins
dec
(bad)
cwde
inc
dec
push
retf
inc
jae
test
ja
xchg
or
test
mov
xchg
outs
mov
xchg
push
ss
aad
push
mov
inc
ret
push
mov
sub
fldenv
push
loope
inc
cld
bound
sub
jecxz
das
lea
add
repz
outs
in
mov
ret
sub
lock
shufps
sbb
push
jnp
in
push
mov
xlat
xchg
or
in
inc
sbb
and
mov
cs
push
popf
into
jb
aam
pusha
push
add
push
into
and
or
sub
out
cmp
repnz
pop
pop
jbe
out
pushf
(bad)
pop
test
pop
pushf
daa
fidivr
ins
mov
add
test
shl
fwait
gs
sub
les
jno
jnp
aaa
(bad)
je
fcomip
xchg
ja
and
or
push
or
inc
es
jl
jae
sbb
mov
repnz
sti
jp
out
sbb
pop
mov
jne
inc
mov
add
in
jl
aad
hlt
or
jmp
mov
mov
add
sbb
frstor
and
(bad)
fsub
jnp
adc
test
shr
mov
cmps
push
adc
jle
add
mov
pop
mov
jnp
fidiv
xor
adc
and
xor
mov
inc
xchg
inc
mov
mov
stc
inc
sub
pusha
cmp
jmp
lods
cmp
add
push
push
mov
dec
mov
mov
add
int
push
dec
ins
adc
(bad)
jne
and
out
rcr
int
rol
mov
out
mov
mov
enter
inc
sbb
fisubr
imul
sbb
xor
stos
dec
xor
sub
fwait
jmp
xchg
sub
call
push
ins
or
sbb
(bad)
or
mov
xchg
push
xchg
bound
mov
in
ja
enter
jle
stos
das
pop
pusha
xor
mov
cmp
mov
call
mov
repnz
loope
into
push
(bad)
mov
sbb
cld
xchg
mov
inc
jo
xchg
inc
out
sbb
jno
add
leave
sub
loop
add
ret
inc
repz
arpl
(bad)
jg
into
fnstsw
xchg
jg
push
cmc
mov
sbb
add
pop
shr
sar
cmps
mov
mov
cmp
in
mov
mov
sbb
inc
add
dec
nop
(bad)
and
lock
xchg
xchg
mov
cmp
enter
sbb
ret
jno
adc
ror
test
cmp
and
cmp
rep
pop
out
sbb
fild
shr
and
mov
push
cmp
xor
sbb
les
scas
cmps
cmc
retf
mov
mov
mov
adc
js
add
dec
push
in
jl
push
aad
and
pop
and
dec
mov
add
rcl
add
xlat
add
xchg
sub
xor
add
jbe
and
movs
outs
mov
xchg
jl
xchg
enter
jmp
push
xchg
rol
data16
adc
fwait
mov
call
or
mov
int3
rcl
ss
sbb
imul
data16
leave
sbb
cmp
inc
xor
or
mov
adc
js
aaa
mov
add
pop
fidiv
inc
jnp
mov
lods
pop
imul
mov
movs
cmp
out
(bad)
mov
sub
cmp
not
xor
cmp
jmp
fmul
sar
scas
and
pop
mov
mov
or
cmp
lods
das
pop
adc
or
adc
dec
shl
outs
push
ss
add
mov
data16
bound
fisttp
xchg
cs
pop
jmp
lock
(bad)
xor
je
mov
mov
outs
push
test
mov
mov
fs
pushf
pop
mov
retf
dec
push
jo
mov
fist
fxch
jae
jecxz
ror
push
or
xchg
div
dec
imul
dec
sub
cmps
loopne
daa
sub
push
or
fimul
aam
icebp
leave
cwde
and
inc
xchg
sbb
mov
jne
push
sbb
push
pop
(bad)
mov
outs
scas
dec
ja
pusha
jle
loop
arpl
stos
pop
jp
and
cmps
dec
mov
push
push
pushf
pop
jecxz
mov
stos
mov
lahf
mov
push
cmp
out
int3
dec
nop
xor
cmc
scas
cmp
xchg
dec
push
lahf
cmp
imul
repz
(bad)
into
addr16
call
(bad)
sub
add
dec
loopne
inc
jb
inc
(bad)
cmc
and
inc
sbb
adc
and
dec
or
cdq
xchg
fsubr
jecxz
push
outs
lods
pop
into
out
mov
sbb
or
mov
out
lock
lds
pop
or
pop
out
xchg
jno
push
fidivr
add
js
aam
in
and
mov
inc
and
loopne
test
ja
(bad)
cmp
sbb
(bad)
bound
jl
mov
mov
leave
mov
rcl
stos
rcl
pop
xchg
cld
mov
xor
sbb
ror
sbb
pop
or
aas
sbb
jl
popf
outs
jns
push
inc
icebp
jns
js
add
in
stos
scas
and
pop
dec
xor
icebp
mov
cmp
adc
xlat
mov
jg
mov
pop
inc
cli
mov
test
add
jl
inc
push
scas
inc
outs
xor
call
or
cmps
pop
pop
and
loop
sbb
out
jmp
aad
xor
addr16
mov
setne
std
xor
xchg
jo
dec
push
pop
test
ret
xchg
enter
jno
and
mov
xchg
push
cmc
add
sbb
lds
and
and
pop
popf
or
data16
ficomp
mov
nop
sbb
cmp
mov
sub
mov
pop
into
pop
cdq
push
(bad)
jne
out
or
or
iret
xchg
xlat
inc
push
mov
or
ja
xchg
(bad)
(bad)
jp
jecxz
pop
movs
xor
jle
hlt
rcl
ret
jecxz
cmp
and
loop
lahf
cmc
lea
jae
aas
pushf
cmp
adc
out
(bad)
fist
sub
icebp
call
sub
ins
adc
pusha
data16
cmp
ins
push
js
icebp
mov
adc
leave
ficomp
add
cmp
aas
and
xchg
adc
inc
mov
and
dec
pop
xabort
cmp
and
test
push
pop
sbb
and
int
fwait
add
cmc
mov
rcl
pop
xchg
jns
rol
pushf
add
push
mov
push
inc
mov
add
int
rcr
sbb
in
adc
inc
mov
fdiv
pop
pop
add
cmc
xlat
dec
ret
sbb
mov
mov
jne
ins
pop
fwait
repz
mov
ret
(bad)
mov
test
jo
fbstp
dec
mov
xor
sbb
fisttp
push
fnsave
cs
xchg
aam
sbb
cmps
rol
xor
pop
or
stc
enter
and
clc
aas
out
jbe
outs
icebp
pop
int3
or
and
pop
xor
(bad)
and
repz
mov
sbb
jmp
mov
mov
pushf
shr
sbb
mov
or
aad
inc
cs
xor
scas
pop
test
mov
repz
sbb
aaa
mov
rol
mov
and
aas
aaa
pushf
js
js
jg
(bad)
add
out
mov
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
inc
push
inc
inc
push
mov
add
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
xor
cmp
add
add
add
add
and
add
add
and
add
and
jb
outs
addr16
add
add
add
add
push
push
add
adc
add
add
add
inc
push
dec
inc
add
add
add
clc
add
add
inc
ins
outs
bound
add
add
add
add
add
push
adc
add
add
and
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
push
add
add
add
add
add
add
push
add
add
add
test
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
cmp
add
add
test
add
add
add
add
add
add
add
add
sub
xor
add
add
test
adc
mov
add
add
hlt
add
push
push
test
push
add
test
adc
jbe
sbb
sbb
sbb
sbb
test
push
add
push
test
push
add
pop
test
xchg
das
pop
add
push
add
test
adc
jbe
sbb
test
push
add
or
icebp
pop
or
and
add
or
cmp
add
cmps
add
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
push
and
add
add
add
add
add
add
add
add
ins
and
add
add
add
add
add
add
add
add
push
and
add
add
add
ins
and
add
add
add
js
add
add
xchg
or
add
add
shl
add
xchg
or
add
add
xlat
and
add
add
add
loopne
add
add
xchg
or
push
add
add
add
add
add
add
add
add
add
add
bound
add
add
add
add
add
pop
add
add
popa
add
add
imul
jno
jecxz
pop
add
jecxz
pop
add
add
add
add
add
add
add
add
add
add
add
rol
jecxz
imul
or
or
jecxz
or
loope
cmp
or
or
cmp
sbb
jmp
add
add
add
xor
jecxz
or
cmp
jecxz
or
inc
add
add
add
add
add
add
add
add
cmp
dec
add
push
add
pop
add
jecxz
xchg
add
add
fwait
add
add
pop
add
add
jecxz
xchg
add
add
add
add
les
jecxz
scas
add
add
add
jmp
add
sbb
mov
sbb
inc
add
rol
add
add
sbb
adc
imul
jecxz
into
add
add
add
add
add
mov
call
push
out
add
add
push
mov
or
sysret
test
add
pop
mov
pop
std
add
add
add
or
or
jnp
adc
add
test
or
or
mov
sbb
test
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
dec
add
add
fld
jecxz
pop
jmp
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
outs
add
add
int
add
add
add
add
add
add
add
add
add
add
outs
add
add
lea
add
mov
add
les
dec
add
xchg
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
push
add
add
pop
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
lahf
add
add
add
add
add
test
add
add
add
add
jg
sbb
add
add
add
add
mov
mov
add
add
add
or
add
add
add
cmp
outs
fs
gs
outs
outs
ja
inc
outs
jb
jae
jo
ins
imul
xor
gs
add
jb
xor
push
imul
outs
jb
jae
jo
ins
imul
xor
push
jb
addr16
ins
add
jae
jne
arpl
add
outs
outs
ja
inc
outs
jb
jae
jo
ins
imul
xor
push
jb
jo
jb
imul
je
outs
addr16
push
jns
je
ins
cs
imul
inc
outs
jb
jae
inc
outs
jb
add
arpl
ins
imul
gs
add
push
arpl
jns
je
ins
cs
outs
outs
imul
je
outs
outs
add
jo
imul
push
gs
imul
add
arpl
add
outs
je
jb
jae
jb
arpl
gs
inc
outs
js
pop
push
gs
inc
push
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
add
outs
outs
je
imul
ins
jo
outs
outs
je
add
jo
jae
add
imul
inc
outs
ins
jo
outs
outs
je
push
imul
inc
outs
js
jb
arpl
gs
inc
outs
js
add
je
outs
outs
add
je
outs
outs
xor
push
imul
outs
js
jo
arpl
gs
outs
js
add
arpl
gs
inc
outs
js
add
imul
gs
cs
gs
jne
arpl
add
jae
jne
arpl
popa
outs
popa
addr16
jb
jae
jne
arpl
popa
outs
add
jae
gs
cs
ins
outs
bound
imul
add
ins
je
jb
dec
outs
outs
add
jae
jne
arpl
jne
je
jb
add
je
push
gs
jne
arpl
popa
outs
popa
addr16
addr16
inc
jne
je
jb
add
je
inc
jne
je
jb
add
ins
je
jb
add
popa
jne
je
outs
jae
popa
outs
arpl
addr16
inc
gs
jne
je
inc
gs
jne
je
jae
outs
fs
add
jo
jae
outs
add
ins
jne
add
jae
gs
cs
jne
je
ins
gs
gs
imul
push
popa
jb
gs
jb
ins
gs
jb
inc
je
jb
bound
add
jae
gs
cs
gs
arpl
outs
add
jae
ins
bound
imul
imul
jae
gs
bound
gs
jb
jo
imul
imul
jae
gs
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
jne
je
jb
inc
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
ins
push
imul
je
jb
bound
add
imul
jne
add
jae
ins
bound
gs
imul
imul
jae
gs
bound
imul
outs
outs
inc
je
jb
bound
add
jae
gs
cs
imul
imul
jne
addr16
bound
je
jb
bound
add
jne
imul
jae
push
jns
je
ins
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
imul
ins
add
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
ins
jo
outs
outs
je
gs
jne
arpl
popa
outs
popa
addr16
dec
push
jne
jo
jb
dec
outs
imul
add
imul
inc
outs
outs
je
outs
ins
add
jae
outs
fs
popa
jns
jne
add
jae
gs
cs
jb
ja
outs
add
jae
gs
inc
outs
ins
outs
jb
add
ins
outs
jb
addr16
dec
outs
outs
push
gs
add
je
inc
popa
arpl
outs
ins
outs
jb
addr16
push
gs
je
inc
outs
jb
inc
outs
ins
outs
jb
push
outs
imul
pop
dec
outs
arpl
imul
pop
dec
popa
ins
add
je
outs
js
popa
jae
add
je
push
gs
fs
outs
ins
jns
push
imul
pop
push
imul
pop
push
popa
bound
fs
jae
je
push
popa
add
je
push
gs
add
outs
je
popa
outs
fs
gs
popa
fs
push
gs
inc
push
add
je
bound
arpl
ins
popa
add
je
inc
popa
arpl
jb
jne
fs
ins
popa
add
popa
ins
outs
addr16
gs
ins
je
jae
je
inc
imul
jae
ins
je
inc
jne
je
outs
inc
popa
jae
add
je
push
jae
push
imul
jns
gs
popa
arpl
outs
ins
outs
jb
jae
je
dec
ins
popa
add
je
push
popa
bound
outs
jo
addr16
dec
outs
jne
gs
add
outs
je
inc
outs
outs
je
je
ins
add
popa
jo
imul
add
je
inc
outs
outs
je
push
imul
outs
je
imul
je
outs
ins
add
je
inc
jne
outs
push
arpl
gs
imul
outs
jae
inc
jne
outs
push
arpl
gs
outs
fs
je
inc
jne
outs
push
arpl
gs
outs
fs
je
inc
arpl
gs
popa
jo
imul
add
jne
je
outs
inc
outs
outs
je
outs
ins
add
je
inc
popa
outs
arpl
inc
jne
je
outs
add
je
inc
ins
imul
add
outs
je
outs
ins
inc
outs
ins
ins
arpl
outs
add
je
inc
outs
outs
je
outs
ins
jae
inc
fs
jb
inc
outs
jb
gs
je
ins
add
je
inc
outs
jb
inc
outs
jb
gs
je
ins
add
outs
outs
add
je
dec
arpl
add
fs
outs
imul
gs
popa
jns
jne
add
inc
push
push
inc
je
jb
bound
add
jo
imul
add
popa
bound
imul
jns
gs
push
gs
outs
ins
jo
je
bound
gs
push
outs
fs
outs
addr16
gs
jne
je
push
jne
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
outs
gs
je
fs
outs
fs
je
jb
bound
add
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
jae
ins
bound
addr16
inc
jae
gs
bound
inc
imul
jae
bound
je
jb
bound
add
imul
jae
bound
je
je
add
arpl
outs
jb
push
gs
imul
add
outs
arpl
outs
outs
imul
outs
outs
ja
inc
outs
jb
jae
jo
ins
imul
xor
inc
outs
jb
xor
jb
jae
jne
arpl
add
outs
outs
ja
inc
outs
jb
jae
jo
ins
imul
xor
push
jb
jo
jb
imul
outs
jne
arpl
cs
jae
jne
arpl
add
add
sbb
imul
push
add
js
je
inc
add
js
xor
add
dec
add
je
add
or
add
push
add
outs
add
jb
and
inc
add
ins
add
jae
and
dec
add
jbe
add
add
add
outs
add
add
outs
add
jb
jns
jo
je
add
add
add
jns
and
push
add
imul
and
dec
add
and
push
add
add
je
and
push
add
outs
add
outs
add
ja
popa
add
add
add
das
bound
jne
je
je
outs
add
xor
add
popa
add
imul
add
outs
add
outs
add
add
popa
add
add
punpckldq
jne
je
je
outs
add
xor
add
arpl
jb
jns
jo
je
and
dec
add
and
inc
add
ins
add
daa
add
and
add
jo
imul
jne
jb
add
outs
add
xor
add
ins
add
add
add
jo
imul
jne
jb
add
outs
add
xor
add
dec
add
arpl
jb
outs
add
outs
add
je
and
push
add
outs
add
and
push
add
jb
imul
jb
imul
push
add
js
je
inc
add
js
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
arpl
imul
add
jb
and
push
add
add
je
add
push
add
add
arpl
outs
add
add
inc
add
jb
ins
add
add
cmp
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
push
add
imul
and
dec
add
and
push
add
add
je
add
add
outs
add
add
jae
inc
add
jb
ins
add
inc
add
jo
ins
add
arpl
popa
add
add
outs
add
add
add
jb
outs
add
add
je
imul
add
add
outs
add
jb
arpl
add
add
add
ret
push
bound
inc
xchg
sbb
mov
add
mov
pop
push
sbb
mov
and
add
and
add
adc
push
adc
add
push
adc
add
adc
add
add
add
adc
add
add
and
sub
sub
add
and
sub
push
adc
add
adc
or
adc
and
add
add
gs
add
or
pop
add
push
add
adc
jns
and
add
jne
mov
pop
jg
aad
cmp
lea
and
add
or
or
and
add
adc
sbb
add
sbb
and
add
sbb
push
and
add
and
and
or
xor
and
add
sub
or
and
add
cmp
add
and
add
add
and
adc
add
add
or
and
add
adc
pop
add
jge
add
add
add
add
add
add
push
push
inc
add
xor
jae
gs
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
jmp
push
adc
adc
pop
add
sub
and
add
xor
add
add
add
add
pop
add
dec
dec
imul
je
push
imul
jne
imul
outs
jb
cs
gs
imul
imul
gs
imul
ins
gs
imul
popa
je
jb
xor
xor
xor
xor
add
add
adc
add
adc
dec
add
sbb
dec
inc
push
inc
jb
ins
gs
jb
sub
gs
imul
xor
adc
jb
ins
gs
jb
inc
imul
popa
ins
adc
dec
inc
push
and
popa
ins
gs
jb
and
xor
push
imul
outs
jb
jae
jo
ins
imul
xor
add
add
add
adc
jo
jb
addr16
and
xor
xor
add
sub
add
popa
xor
xor
aaa
bound
sub
sub
sub
bound
bound
data16
add
add
xor
xor
xor
xor
add
add
pop
add
add
add
add
or
add
add
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
add
add
xlat
hlt
in
pop
add
add
add
add
sbb
add
ins
(bad)
or
ins
test
add
inc
push
sbb
push
push
dec
(bad)
frstor
call
add
add
pop
push
jae
jb
pop
bound
imul
ins
outs
je
pop
push
imul
je
imul
pop
push
jb
push
arpl
push
imul
outs
jb
jae
jo
ins
imul
xor
outs
outs
ja
inc
outs
jb
jae
jo
ins
imul
xor
push
inc
bound
pop
push
imul
outs
jb
jae
jo
ins
imul
xor
jo
bound
add
mov
or
into
(bad)
or
add
add
rol
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
