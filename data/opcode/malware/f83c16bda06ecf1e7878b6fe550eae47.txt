inc
mov
test
push
out
aam
jo
and
sub
xor
sub
and
xor
jbe
and
loopne
and
jae
mov
inc
mov
and
stos
push
je
and
pop
push
push
mov
dec
add
pop
add
pop
add
out
(bad)
cmp
sub
cmp
mov
add
add
adc
out
and
mov
das
mov
stos
xchg
daa
mov
dec
je
js
xor
adc
pop
je
mov
sub
arpl
sub
imul
and
mov
push
loop
clc
les
xchg
ss
arpl
jmp
je
stos
xor
(bad)
in
popa
je
scas
(bad)
aaa
push
test
js
pop
jl
adc
jnp
inc
and
das
add
xchg
lods
jo
sahf
pop
and
addr16
jmp
and
inc
pop
popa
je
mov
pop
les
jmp
ss
je
scas
dec
dec
pop
popa
je
fist
les
jmp
ss
sub
gs
sub
popa
jle
jge
push
pop
or
test
jl
retf
pop
mov
scas
pop
fs
fmul
js
test
sti
popa
pusha
js
mov
sub
js
test
sti
add
mov
jbe
pop
cli
dec
mov
add
mov
and
jno
xchg
ss
and
sub
sub
lahf
add
je
es
and
jl
jb
je
mov
add
and
enter
fadd
pop
mov
popa
je
fcomp
je
out
mov
xor
ss
mov
fwait
jne
jmp
cwde
mov
test
push
jae
jmp
je
add
aad
pop
popa
je
loope
xchg
sub
and
enter
and
jbe
xchg
sbb
push
jo
xor
mov
and
iret
fs
mov
jae
dec
into
inc
cmc
js
and
mov
mov
dec
je
jmp
push
pop
popa
je
retf
je
push
or
inc
pop
pop
popa
je
fild
les
jmp
std
iret
aaa
les
jmp
mov
adc
pushf
fcomp
je
loopne
xlat
jmp
std
setnp
and
mov
dec
sub
adc
xchg
std
outs
rol
mov
dec
je
jmp
dec
je
jmp
pushf
adc
je
loopne
mov
fs
imul
mov
mov
je
outs
xlat
(bad)
mov
and
fcmovnb
mov
pop
je
mov
and
and
in
popa
je
outs
push
mov
adc
and
std
and
out
dec
adc
es
mov
enter
xor
je
mov
add
fadd
mov
mov
mov
arpl
neg
sbb
jle
(bad)
arpl
stc
xor
jae
xor
jae
je
sbb
jnp
dec
je
jmp
add
retf
enter
std
mov
in
push
jmp
mov
bound
pusha
adc
fadd
fs
pop
je
arpl
mov
push
retf
in
push
jmp
mov
cmp
or
and
jae
and
enter
aam
std
scas
xlat
std
mov
jecxz
sub
and
pop
aaa
or
mov
(bad)
mov
data16
cmp
dec
je
lahf
das
mov
loop
sub
jmp
jo
jecxz
inc
adc
aaa
mov
test
lahf
xor
push
jmp
pushf
enter
jecxz
add
jecxz
jg
jecxz
lahf
in
mov
je
mov
mov
arpl
neg
popa
push
js
scas
(bad)
sbb
inc
push
adc
cwde
or
xor
and
adc
and
adc
and
xor
stos
xor
pop
std
xor
stos
xor
and
add
push
push
and
out
and
(bad)
sbb
aaa
std
sbb
dec
jne
push
lea
push
mov
sbb
sbb
dec
cmc
scas
(bad)
std
sbb
dec
jne
push
lea
push
(bad)
mov
stos
mov
and
xor
(bad)
and
sbb
mov
mov
int3
mov
js
mov
stos
xchg
int3
out
and
add
add
and
popa
push
js
mov
mov
push
fmul
adc
mov
jmp
je
data16
sub
dec
jne
push
lea
push
jge
outs
and
and
data16
pop
test
jl
(bad)
sbb
loopne
and
fs
stos
xchg
leave
push
push
fmul
mov
mov
mov
std
lods
ret
shl
mov
and
mov
imul
jmp
out
xor
popa
data16
scas
(bad)
xor
aam
mov
test
scas
fild
add
je
xchg
sub
cmps
cmps
inc
fs
sub
jae
adc
std
sub
inc
xor
std
or
out
cmp
(bad)
xor
stos
xor
(bad)
std
xor
jl
das
and
and
push
cwde
fs
das
mov
push
pop
xor
arpl
pop
mov
jbe
inc
sbb
push
pushf
or
je
pop
jl
cmp
fs
loop
jae
fisubr
and
div
lods
sbb
add
je
scas
sub
xor
stos
xor
(bad)
xor
stos
xor
sub
xchg
imul
inc
cli
test
pusha
sub
xor
jmp
loope
and
fdiv
pop
popa
je
sbb
sub
out
sbb
mov
sar
cmp
sub
pusha
sti
sbb
add
xor
pop
xchg
jmp
stos
xor
scas
sar
xor
adc
mov
je
add
pushf
fwait
or
jp
je
es
test
mov
out
sub
test
data16
xchg
das
xor
cmp
jmp
and
pop
mov
mov
fmul
sub
loopne
std
(bad)
daa
and
fs
cdq
stos
mov
stos
mov
lahf
sub
sub
je
jmp
and
dec
je
adc
je
daa
inc
je
rcr
je
aam
std
scas
(bad)
mov
jge
mov
mov
push
jl
nop
aas
jae
arpl
pop
mov
test
push
jg
jbe
ss
test
mov
fadd
jo
cmp
mov
test
mov
(bad)
std
xor
stos
mov
add
je
mov
das
mov
imul
inc
loop
icebp
push
addr16
mov
(bad)
mov
add
je
jmp
xor
jae
or
pushf
je
je
arpl
cmc
fwait
sub
jecxz
scas
in
mov
scas
iret
jge
lahf
jp
sbb
shl
and
je
data16
dec
add
inc
sub
scas
jnp
jecxz
xor
sub
sub
and
dec
shl
popa
and
mov
and
stos
mov
adc
xchg
std
scas
(bad)
std
mov
jecxz
scas
in
mov
scas
ret
jge
lahf
es
mov
enter
sub
fwait
test
je
jecxz
sub
(bad)
int3
inc
jmp
je
jne
iret
dec
outs
sub
imul
or
and
dec
xchg
xchg
ss
fdiv
and
push
xchg
xchg
ss
or
and
out
lock
scas
das
xlat
or
popa
je
mov
sar
xor
mov
jbe
ss
push
ins
aad
xor
mov
sub
xchg
call
cmc
add
je
dec
mov
or
mov
add
jne
sbb
ss
cmps
xchg
mov
and
int
mov
adc
das
not
xor
jmp
icebp
ret
and
stos
icebp
mov
sub
xor
jo
popa
sbb
mov
xor
jne
and
or
and
repnz
inc
mov
or
test
mov
arpl
jne
arpl
mov
xchg
ss
data16
shl
push
jae
iret
pop
shl
and
or
je
scas
fcomi
lahf
int
je
and
ja
and
sti
pop
lods
arpl
adc
popa
mov
scas
retf
xlat
or
je
scas
shl
lahf
ret
neg
out
and
xchg
or
test
jo
test
mov
mov
je
sub
sbb
xor
and
ss
mov
push
je
jmp
add
stos
lods
or
icebp
movs
adc
scas
icebp
test
fisttp
ss
je
and
xor
sub
pop
popa
je
adc
das
dec
icebp
fmul
lods
ret
sti
std
mov
push
call
add
sub
test
and
fcmovu
and
mov
scas
xlat
dec
xor
sub
pop
adc
mov
std
lods
(bad)
std
mov
jge
mov
imul
retf
push
fidiv
pop
std
adc
mov
sub
stos
mov
stos
mov
(bad)
fbstp
sub
dec
fisub
jnp
and
jecxz
add
data16
and
mov
je
xchg
stos
test
imul
cli
push
adc
scas
sub
xor
and
sahf
sub
sahf
daa
not
push
and
xor
scas
xor
jae
in
popa
je
les
je
out
cmc
add
in
aam
popa
je
add
mov
loopne
adc
adc
je
mov
and
adc
je
mov
and
fbstp
enter
adc
out
sbb
jmp
pop
dec
or
pop
inc
or
mov
add
and
data16
(bad)
adc
adc
adc
jmp
inc
jae
je
or
je
add
mov
(bad)
mov
and
je
daa
push
je
and
jmp
je
push
add
jmp
je
and
mov
data16
sub
dec
jne
push
(bad)
std
sub
stc
cmps
xlat
and
mov
and
scas
xor
sbb
ss
push
mov
int3
sub
and
sbb
and
sub
(bad)
int3
fsubr
and
dec
je
mov
push
xor
sti
inc
lods
arpl
mov
pop
fmul
xchg
test
pushf
inc
xlat
mov
adc
cmps
(bad)
mov
cmps
call
sti
std
mov
and
jl
je
arpl
cmc
lahf
mul
icebp
mov
fisttp
mov
push
call
add
and
ret
mov
dec
popa
je
popa
sbb
mov
jecxz
les
test
adc
and
mov
ss
cmps
xchg
mov
and
rcr
pusha
dec
jmp
cmc
sub
je
sub
jmp
and
mov
dec
or
scas
(bad)
lods
(bad)
std
mov
pop
mov
outs
jl
and
dec
bound
jecxz
mov
fdiv
mov
stos
mov
arpl
push
fmul
ss
stc
outs
popf
mov
dec
popa
je
popa
sbb
mov
jecxz
icebp
cmp
je
mov
mov
in
jbe
and
leave
pop
fmul
shr
je
jmp
sub
pop
fmul
adc
mov
arpl
std
lods
sbb
fmul
ret
outs
xchg
mov
jmp
je
xchg
icebp
(bad)
adc
scas
icebp
mov
jae
xor
jmp
icebp
pop
fmul
and
bound
xchg
mov
je
xlat
dec
shl
and
sub
je
push
test
je
aam
std
outs
mov
push
jmp
mov
and
bound
aad
mov
js
adc
add
jne
in
xchg
ss
and
adc
js
fmul
mov
xchg
mov
jmp
je
jae
xor
adc
push
mov
and
int
popa
je
push
fimul
test
fmul
mov
in
rcl
je
jmp
fst
dec
bound
(bad)
mov
adc
add
jne
call
adc
lea
js
fmul
mov
xchg
mov
jmp
push
jmp
xlat
xchg
test
sbb
dec
bound
(bad)
mov
adc
add
jne
call
adc
inc
or
jmp
mov
dec
jne
jle
ss
jae
xor
adc
push
mov
sub
fdiv
jmp
ss
push
cs
dec
mov
in
rcl
je
jmp
or
test
sbb
dec
bound
xlat
mov
adc
addr16
jne
call
adc
stc
or
fmul
push
jmp
add
test
stc
leave
pop
fmul
adc
mov
sub
fdiv
jmp
je
sahf
ror
in
add
popa
je
cmps
mov
and
mov
out
push
shl
and
and
je
mov
jne
arpl
mov
pop
fmul
jno
and
lods
(bad)
std
mov
cmps
lods
mov
and
outs
dec
dec
adc
fistp
in
jb
jmp
mov
fisttp
and
stos
xor
arpl
test
ds
je
imul
lods
std
sub
mov
int3
mov
jne
mov
mov
je
sub
fsub
sub
fdiv
jmp
mov
fisttp
mov
and
fcmovu
and
loopne
dec
jmp
mov
and
icebp
dec
fmul
mov
push
je
jmp
jnp
jo
je
scas
icebp
movs
adc
cmps
mov
call
fsub
movs
jmp
lods
(bad)
std
mov
pop
mov
popa
jo
and
icebp
add
mov
adc
sbb
mov
jecxz
pop
add
ja
jmp
and
cmps
test
adc
and
rcr
and
mov
xor
lods
std
sub
icebp
xchg
jmp
aam
std
outs
xchg
mov
outs
(bad)
mov
add
mov
mov
sub
jmp
xchg
arpl
std
mov
xchg
pop
fisttp
aam
and
icebp
pop
fmul
sbb
and
mov
mov
mov
ja
jmp
je
sti
inc
lods
arpl
mov
push
fmul
mov
and
pop
ss
cmps
mov
nop
dec
je
imul
in
adc
jbe
popa
cmps
cwde
mov
std
icebp
jb
mov
adc
and
pop
mov
mov
(bad)
int
jmp
in
fisttp
xchg
push
daa
je
jmp
mov
je
std
scas
fcomip
mov
jo
je
jecxz
icebp
imul
je
xchg
mov
je
outs
mov
hlt
or
jmp
mov
adc
and
fcomip
lahf
loope
je
jecxz
jnp
stos
and
cmps
ror
outs
mov
dec
adc
(bad)
das
nop
and
stos
icebp
clc
adc
mov
icebp
jb
and
(bad)
mov
jmp
je
jmp
std
xor
xchg
std
outs
jg
mov
cmps
add
adc
jbe
popa
cmps
fmul
xchg
fmul
mov
and
pop
push
mov
arpl
int
jmp
add
fisttp
xchg
push
daa
je
jmp
mov
je
std
scas
fcomip
lahf
shl
je
jecxz
jnp
fwait
and
xchg
mov
je
outs
stos
mov
or
jmp
mov
adc
and
fistp
in
imul
test
jmp
stc
outs
inc
mov
adc
fdivr
icebp
(bad)
fmul
mov
fwait
in
jmp
mov
std
mov
pop
mov
scas
je
and
not
mov
daa
and
sahf
sbb
adc
je
outs
jecxz
je
scas
icebp
sub
adc
fcomp
cs
mov
stos
leave
and
jecxz
je
mov
mov
sti
je
and
mov
and
daa
mov
inc
fmul
mov
and
mov
ss
cmps
mov
mov
out
std
xor
lods
std
sub
mov
and
xor
(bad)
and
stos
icebp
mov
ja
mov
fimul
mov
stc
lock
fimul
mov
cs
push
jo
cmps
mov
mov
ss
cmps
mov
sbb
je
imul
lods
std
sub
mov
push
outs
fmul
mov
je
or
mov
sub
icebp
fcom
xchg
fcom
and
icebp
fcom
adc
aam
fisttp
and
fdiv
cwde
adc
(bad)
mov
adc
dec
test
and
icebp
pop
fmul
jne
stos
mov
outs
retf
mov
adc
repz
popa
cmps
movs
mov
and
fcmovu
and
sbb
jmp
mov
test
mov
and
fcmovu
and
lods
mov
and
fcmovu
and
test
adc
and
fcmovu
and
imul
mov
outs
ret
mov
adc
aam
mov
jbe
xchg
sbb
lock
popa
je
jo
xor
mov
and
arpl
je
jmp
and
pushf
mov
(bad)
daa
pop
inc
jp
or
stos
mov
popa
pop
xchg
std
xchg
(bad)
mov
push
and
mov
je
cmp
jmp
mov
retf
sbb
dec
push
ss
push
stos
lahf
aad
mov
and
test
pop
test
xchg
(bad)
mov
push
fmul
mov
push
jmp
adc
in
lods
aad
fist
dec
lods
jmp
and
in
mov
jge
in
data16
dec
and
mov
mov
and
std
(bad)
and
push
xor
mov
stos
mov
push
ss
and
je
or
xor
dec
je
jmp
mov
retf
cwde
adc
and
ja
and
stos
xor
and
and
push
cwde
push
loop
sub
loop
std
mov
adc
and
stos
imul
je
arpl
je
ret
push
stos
mov
iret
cmp
xor
sar
jl
arpl
es
jmp
jmp
je
es
stos
and
jmp
(bad)
stos
mov
jno
jae
je
sub
repz
and
lods
or
and
ss
xor
dec
jbe
jmp
inc
sub
mov
imul
xor
jmp
jmp
jns
mov
jb
in
dec
jbe
and
je
push
jns
push
mov
dec
jmp
and
jmp
and
popf
stc
sub
jbe
jmp
popf
in
and
es
test
xor
xor
inc
sub
xor
and
inc
loopne
je
or
hlt
jns
mov
xor
stos
and
fs
je
(bad)
fmul
jmp
and
in
adc
imul
dec
jmp
je
retf
adc
mov
jae
sub
xchg
and
jns
mov
mov
aam
mov
aam
jmp
jno
mov
jae
sub
mov
jmp
je
mov
je
out
iret
jmp
je
retf
adc
mov
jae
sub
out
jbe
and
mov
push
ins
jmp
and
out
addr16
xor
jmp
jno
xchg
ss
es
jmp
and
mov
push
ins
jmp
and
dec
iret
jmp
dec
jne
je
and
mov
ins
jne
je
add
je
jmp
mov
and
jne
je
xor
je
dec
addr16
xor
jp
je
and
je
dec
iret
jmp
dec
jne
je
push
and
es
test
div
mov
fdiv
int3
mov
or
div
mov
in
jmp
je
mov
je
push
inc
ja
jmp
mov
shl
(bad)
jmp
ret
aam
jmp
jg
and
push
outs
mov
ss
xor
jmp
ret
hlt
jns
mov
inc
mov
push
shl
enter
mov
dec
jmp
and
jmp
and
mov
push
je
push
ins
jmp
and
out
mov
mov
je
arpl
pop
mov
sahf
xchg
ss
es
jmp
and
outs
in
je
stos
test
pusha
and
add
popa
je
and
xchg
std
scas
sar
mov
xchg
jno
dec
popa
je
sub
je
bound
jnp
es
test
not
xchg
xor
jmp
hlt
xchg
aam
add
fdiv
jp
je
in
je
sbb
stos
mov
pop
or
je
lahf
sub
xor
je
out
sub
xor
mov
je
lahf
ss
or
pop
xor
div
mov
je
enter
aad
add
mov
je
arpl
jne
arpl
std
test
xor
nop
ja
je
or
xor
or
xchg
aam
add
mov
je
imul
je
repnz
test
popa
ss
stos
and
je
daa
popa
dec
jae
je
out
das
in
jmp
jno
mov
je
clc
cmc
test
push
js
stos
and
stos
test
popa
ss
stos
and
je
daa
popa
fmul
je
out
das
in
jmp
jno
mov
je
clc
mov
xchg
ss
rcr
dec
daa
in
jmp
mov
push
je
mov
mov
and
icebp
imul
je
aam
std
scas
(bad)
mov
es
test
sbb
push
popa
je
movs
inc
je
arpl
sbb
push
popa
je
add
je
sub
test
sbb
push
popa
je
add
je
and
int3
dec
mov
stos
xor
popa
je
add
adc
jmp
aas
push
popa
je
add
adc
jmp
sub
je
add
adc
jmp
sub
loopne
std
push
cwde
sbb
jne
iret
cmps
jb
jb
sti
jne
arpl
mov
xchg
ss
cmps
into
ss
sub
je
scas
retf
ins
je
and
lods
jmp
std
mov
inc
cwde
je
data16
scas
shl
je
mov
lahf
adc
and
fbstp
push
shl
mov
scas
xor
and
std
sub
xor
data16
jmp
ss
shr
je
jmp
mov
xchg
jne
jmp
or
add
rcl
stc
scas
retf
and
jmp
and
ss
and
mov
pop
je
addr16
and
xor
push
je
and
jo
and
hlt
push
jmp
add
xor
mov
inc
je
adc
and
je
push
aam
jmp
mov
and
shr
je
fadd
nop
add
sub
jno
pop
popa
je
scas
retf
and
lahf
xchg
stc
xor
jae
popa
push
mov
nop
lahf
in
mov
je
mov
mov
test
push
and
mov
pop
mov
jbe
jmp
test
arpl
test
pushfw
push
out
dec
je
jmp
xor
fadd
mov
jae
mov
adc
xor
add
je
(bad)
(bad)
xor
stos
xor
pcmpeqb
aas
mov
call
pop
popa
je
lahf
sub
mov
and
sub
jbe
xchg
imul
inc
loop
sub
es
test
inc
mov
xchg
jo
xlat
fdiv
push
inc
jnp
addr16
jne
fdiv
push
pop
jnp
addr16
jbe
fdiv
push
push
ja
fdiv
push
fs
addr16
jo
fdiv
sub
jle
and
xor
xor
es
pusha
aam
pusha
dec
sub
mov
xor
mov
pusha
dec
shl
jnp
jge
je
arpl
ds
aaa
bound
sub
cld
jmp
jbe
xchg
pusha
(bad)
loope
packsswb
neg
cld
sbb
test
and
je
mov
ret
dec
mov
addr16
jno
push
popa
je
add
je
sub
and
aaa
popa
cmps
push
popa
je
mov
and
xor
mov
fs
mov
mov
ja
adc
cmp
xor
xor
es
imul
std
pusha
out
and
enter
mov
sub
hlt
dec
out
icebp
enter
add
mov
adc
mov
popa
je
(bad)
sbb
mov
pop
jb
lahf
push
jbe
(bad)
and
mov
add
hlt
dec
in
daa
add
fcomi
pushf
out
sub
jo
pop
sbb
clc
push
retf
and
jg
fcomi
pushf
out
mov
(bad)
std
xor
xor
dec
jno
leave
jo
sub
je
mov
adc
adc
dec
in
and
sub
neg
push
and
ja
pop
jb
lahf
gs
mov
jo
pop
daa
jb
add
je
sahf
and
popf
jmp
mov
fs
mov
mov
jne
imul
push
cli
scas
xor
and
adc
je
push
dec
jne
jno
mov
push
cmp
jbe
pop
jb
lahf
sbb
ja
(bad)
and
mov
add
jnp
out
and
dec
mov
and
push
mov
add
das
je
test
fs
jno
fincstp
sahf
out
stos
jo
jmp
je
lods
mov
je
push
jl
das
and
and
push
cwde
js
jne
mov
push
shl
test
jl
aas
inc
mov
and
dec
aam
add
mov
je
sbb
je
clc
push
out
pushf
ja
and
pushf
sti
popf
popf
jmp
jno
xchg
ss
xchg
and
jbe
(bad)
ss
in
and
arpl
jne
mov
fsubr
ss
je
and
push
xlat
retf
jmp
lahf
in
lods
ja
(bad)
pusha
in
stos
pusha
jb
data16
out
mov
je
data16
add
push
(bad)
out
cmp
jo
scas
xor
test
std
scas
(bad)
xchg
stc
pop
movs
arpl
jne
jmp
std
xor
scas
xor
test
and
imul
fdiv
popa
mov
jne
ret
repz
mov
stc
jne
imul
mov
fxch
stc
xor
and
and
stos
fs
push
shl
mov
stc
and
es
imul
mov
add
je
mov
xor
popa
mov
ss
push
mov
mov
das
mov
push
jg
je
retf
mov
jmp
lea
cld
mov
jmp
pop
in
in
xchg
xor
cmps
xchg
out
push
shl
and
leave
or
mov
pop
cmps
xchg
out
inc
enter
add
sahf
xchg
stos
adc
sub
icebp
sbb
mov
push
popa
je
lahf
and
xchg
mov
jnp
das
jns
push
popa
je
add
loope
xor
mov
out
mov
in
stos
and
jg
fwait
mov
das
jns
push
popa
je
sub
jbe
jg
stos
mov
mov
sub
shl
mov
out
ss
in
and
icebp
sbb
mov
sbb
mov
(bad)
es
iret
test
je
outs
outs
mov
add
xchg
loope
add
and
dec
inc
in
jmp
je
xchg
loope
add
and
pusha
push
xor
xor
push
shl
mov
mov
jecxz
jmp
std
outs
sti
stos
mov
popa
je
jg
stos
mov
xor
lods
jno
and
arpl
inc
mov
add
cli
and
xchg
neg
mov
call
int3
mov
cli
and
xlat
fwait
mov
cmps
stos
mov
and
push
shl
mov
mov
je
jmp
rol
mov
adc
fmul
xor
sub
xor
mov
hlt
stos
adc
fdivr
scas
sub
jbe
or
ja
push
test
into
imul
mov
lods
mov
je
aaa
mov
je
in
lods
jno
xor
cmps
hlt
stos
adc
loopne
fs
je
xchg
mov
push
retf
ins
mov
iret
fwait
mov
test
clc
xor
mov
fdiv
cmps
cwde
fwait
adc
fmul
shr
mov
jmp
ret
fwait
mov
aaa
popa
push
jnp
je
jg
fwait
mov
fmul
fwait
adc
stos
lods
mov
and
mov
gs
ss
stos
adc
int3
mov
xor
popf
jbe
ret
cmps
fbstp
push
jbe
outs
xlat
fwait
mov
fmul
push
pop
fdiv
pop
popa
je
push
shr
cmp
jmp
icebp
dec
std
mov
out
pop
je
jmp
imul
pop
ja
arpl
push
dec
std
mov
adc
and
outs
mov
mov
fmul
mov
mov
mov
fmul
mov
fmul
int3
xor
xchg
test
adc
and
imul
enter
add
fmul
mov
fmul
mov
and
dec
je
jg
stos
mov
test
int3
xor
das
es
and
adc
fcomp
shr
fwait
mov
scas
test
adc
cld
mov
jg
je
pop
mov
fwait
adc
test
popa
retf
je
mov
fwait
adc
and
push
and
icebp
les
sub
adc
and
sub
sbb
jmp
jnp
and
jmp
jl
sub
dec
jmp
je
icebp
and
cmps
sbb
and
mov
jbe
arpl
mov
dec
std
mov
xor
xchg
nop
stos
adc
mov
std
test
jbe
shl
add
shl
pushf
jmp
aaa
std
test
jo
shl
add
shl
pushf
out
mov
cmp
pop
popa
je
pop
mov
stos
adc
stos
shl
mov
adc
and
je
cld
test
inc
jmp
je
imul
jo
outs
(bad)
stos
mov
enter
xlat
fwait
mov
test
dec
leave
push
cld
mov
dec
std
mov
dec
std
mov
push
shr
jmp
je
push
pop
hlt
(bad)
push
jbe
jmp
dec
jmp
push
pusha
hlt
(bad)
push
jo
jmp
dec
out
and
push
ja
add
jnp
outs
sub
dec
mov
push
fwait
adc
jmp
mov
pushf
fimul
hlt
push
shr
imul
fwait
mov
cli
mov
call
outs
mov
outs
ss
stos
adc
fdiv
add
fwait
mov
push
movs
mov
push
shl
retf
adc
int3
mov
sbb
mov
(bad)
es
iret
test
je
outs
or
mov
loopne
std
push
cwde
xor
jne
push
mov
cmp
fwait
popa
inc
jmp
mov
scas
fdiv
xchg
(bad)
stc
inc
sahf
sahf
ss
xor
rcl
jmp
loope
and
scas
or
and
jnp
and
scas
or
test
int
jmp
adc
(bad)
mov
loope
and
mov
xor
jmp
sbb
popa
or
fdiv
loopne
xor
sti
push
nop
cmc
xchg
inc
or
and
shr
and
sub
and
sbb
popa
xor
in
and
fdiv
pop
pusha
jne
sub
je
xchg
dec
int3
xor
(bad)
xor
stos
xor
jecxz
je
mov
hlt
xor
and
mov
shl
daa
add
fnstenv
jecxz
mov
daa
hlt
xor
and
js
ret
jae
adc
add
mov
xchg
aaa
jne
jecxz
je
push
hlt
je
and
jo
mov
data16
and
and
jmp
jne
push
jo
scas
fdiv
scas
fidiv
xchg
fidivr
push
in
mov
enter
sub
and
sbb
popa
cmp
hlt
scas
fdiv
loopne
xor
in
push
nop
jmp
stos
xor
scas
jecxz
xor
sub
ja
mov
jo
scas
fdiv
pop
mov
mov
mov
and
lahf
sub
sar
or
mov
je
sbb
stos
mov
adc
dec
je
add
je
shl
mov
jmp
add
push
dec
sub
and
ins
test
mov
add
sub
je
jne
retf
inc
dec
je
push
repnz
std
outs
fild
stc
lahf
das
and
jmp
and
and
aad
and
stos
icebp
mov
scas
icebp
je
fmul
je
mov
std
mov
(bad)
mov
jge
mov
stos
xchg
and
scas
daa
int3
adc
and
stos
xor
and
add
dec
je
cwde
ja
je
jmp
cli
jo
and
aaa
mov
mov
je
jmp
ja
and
ja
and
fadd
jl
shl
je
stos
mov
adc
add
pop
js
sahf
and
push
je
aam
cmp
and
add
je
retf
test
jmp
and
arpl
scas
(bad)
dec
xchg
and
stos
xor
imul
xor
stos
xor
stos
xor
push
mov
add
pushf
iret
mov
adc
mov
das
mov
mov
pushf
adc
and
fwait
add
je
and
hlt
jmp
push
jmp
add
retf
cmp
jmp
add
adc
scas
and
dec
je
jmp
jmp
jmp
xor
pop
jne
lahf
(bad)
mov
and
and
jno
mov
jno
je
and
xor
jae
jbe
rcl
(bad)
mov
or
dec
jmp
jmp
and
jl
das
and
and
(bad)
and
mov
push
cmc
add
sbb
jmp
push
jmp
add
retf
les
arpl
jne
arpl
test
call
jne
ret
mov
scas
xor
adc
xor
je
jne
fstp
push
je
sbb
stos
mov
sub
sub
loopne
std
push
cwde
fs
sub
fisub
sub
std
stos
add
ret
jne
lods
sbb
js
xlat
daa
mov
popa
je
lods
ja
je
data16
sub
mov
mov
popa
je
fdiv
je
out
inc
xor
addr16
daa
push
adc
ss
mov
pusha
dec
sub
pop
pushf
inc
adc
sbb
jo
les
out
test
or
ss
mov
test
mov
mov
scas
xlat
adc
stos
xor
js
mov
stos
xchg
test
test
jl
push
js
scas
fild
ret
xor
stos
xor
(bad)
xor
stos
xor
jmp
inc
adc
daa
dec
and
push
xchg
ss
mov
fs
sbb
je
push
mov
je
mov
das
mov
imul
iret
jge
mov
int3
xor
je
sbb
stos
mov
sub
mov
adc
scas
or
test
int
jmp
mov
xchg
xor
in
inc
mov
or
je
scas
sub
stos
and
xor
aam
std
scas
sti
std
mov
xchg
xor
sbb
cwde
hlt
xchg
fdiv
out
mov
sbb
jmp
je
sar
xor
jnp
stos
and
xor
push
jnp
data16
addr16
imul
hlt
or
add
dec
pushf
jbe
sti
inc
lods
arpl
hlt
sbb
hlt
or
add
jmp
mov
data16
pop
and
and
sub
retw
repz
je
xchg
and
scas
(bad)
(bad)
cmp
stos
mov
ret
cmps
rol
scas
(bad)
cmc
mov
dec
je
popa
data16
pop
arpl
mov
and
and
scas
(bad)
push
out
ret
xor
test
jl
xchg
es
repz
push
test
nop
mov
das
mov
jp
in
jmp
sti
stos
and
int
das
rcr
mov
jp
in
les
jl
jp
in
jp
in
jp
in
jp
in
jp
in
jp
in
jp
in
xor
scas
in
mov
int3
jmp
xchg
test
in
fsub
inc
jp
mov
jp
in
div
jl
jp
in
sub
in
jp
lods
in
mov
add
mov
in
inc
in
jp
in
add
adc
jp
in
(bad)
retf
je
jmp
in
mov
jmp
in
cmp
in
mov
cmp
mov
in
jae
in
mov
addr16
in
imul
dec
mov
xchg
iret
in
jp
div
sbb
mov
mov
mov
adc
jmp
je
das
rcr
ss
shl
fsub
inc
sub
in
mov
int3
jmp
in
mov
sub
in
jp
mov
in
mov
cwde
sbb
stos
and
std
xor
mov
jp
in
cmp
in
jp
in
and
and
mov
in
mov
in
jnp
in
mov
retf
rcr
inc
in
mov
jne
mov
in
rol
jmp
je
mov
add
cwde
movs
xchg
test
in
xor
mov
jp
in
cmp
in
jp
in
and
and
mov
in
mov
in
jnp
in
mov
retf
inc
inc
jp
inc
in
mov
jne
mov
in
rol
jp
in
jp
popf
dec
sti
fimul
xchg
imul
jmp
loop
xor
stos
xor
data16
lea
popa
arpl
and
popa
data16
scas
iret
std
xor
aam
cwde
arpl
std
scas
fist
mov
shl
ret
jmp
cmp
loope
and
test
mov
jne
arpl
hlt
xchg
fdiv
in
mov
enter
ins
je
arpl
int3
adc
and
je
sub
and
stos
lea
mov
push
or
cld
and
test
push
pusha
(bad)
pop
add
jne
stos
sub
fs
cmp
in
jo
xlat
shl
fs
xor
test
outs
mov
stos
fs
jl
je
sbb
(bad)
std
xor
dec
jl
jp
je
data16
add
je
sub
xor
jae
lods
jmp
and
scas
sar
mov
retf
inc
cmp
and
jb
data16
sti
jne
mov
and
mov
test
mov
inc
mov
jbe
imul
jnp
scas
das
cmp
sub
mul
fmul
mov
stos
xchg
test
popf
sub
std
test
stos
mov
in
je
push
cs
sub
mov
leave
jne
sub
jns
adc
std
sub
adc
mov
je
lahf
and
mov
imul
scas
xor
pop
mov
arpl
jge
in
pop
jbe
and
xchg
int3
mov
call
sahf
ss
aaa
dec
fcom
je
cmp
je
ret
mov
call
sahf
ss
cld
ja
cs
ss
retf
sub
jmp
or
mov
and
lods
jmp
and
add
aaa
movs
and
cmp
mov
scas
fistp
xor
test
movs
push
popa
je
cli
stos
test
stos
mov
scas
fbstp
and
mov
xor
push
lods
aad
sahf
ss
data16
sbb
xor
and
imul
ss
dec
scas
fild
lods
add
cmp
xor
test
movs
in
mov
sub
cmps
sub
fs
stos
dec
movs
push
popa
je
xor
je
mov
outs
je
popa
pop
mov
mov
xchg
cmps
mov
xor
arpl
test
test
cmc
call
sbb
push
popa
je
xor
jno
push
popa
je
add
je
mov
leave
ss
test
stos
mov
xor
xor
test
inc
imul
ss
dec
scas
xlat
push
mov
jmp
test
sar
mov
sti
ja
sbb
je
cli
mov
mov
jno
sahf
ss
data16
xor
leave
ss
(bad)
(bad)
mov
leave
test
(bad)
jns
sahf
ss
das
dec
std
xor
popa
je
pop
jbe
movs
or
ss
cs
test
std
js
stos
test
arpl
hlt
or
dec
pushf
ins
in
xor
out
ss
imul
sub
je
and
jbe
and
je
and
fadd
jl
scas
cmp
nop
and
xor
jae
add
jo
add
retf
jl
jmp
je
push
nop
pushf
je
je
mov
and
stos
jl
das
and
and
cpuid
cwde
pusha
call
je
dec
clc
and
cmc
add
inc
je
mov
je
jmp
ss
pushf
mov
je
push
lock
cli
jb
mov
leave
mov
in
loop
imul
std
movs
mov
mov
sub
mov
mov
and
je
sub
or
xor
mov
and
(bad)
cmc
or
mov
loope
cld
jle
mov
adc
pop
jl
and
icebp
jae
fmul
je
stos
mov
sub
add
cmps
jno
adc
and
std
test
fimul
icebp
adc
dec
in
test
sbb
or
stc
outs
fmul
mov
jmp
push
jmp
icebp
adc
mov
jmp
mov
pop
test
mov
loop
cld
mov
jl
je
and
icebp
sbb
mov
jmp
mov
mov
jmp
mov
jp
je
fdiv
pop
popa
je
cmp
ss
and
jbe
je
stos
test
stos
mov
outs
fmul
test
popa
je
outs
fmul
je
and
pushf
scas
and
es
test
sbb
or
sbb
ret
cmps
mov
jmp
je
jo
sbb
popa
je
xchg
ret
and
je
retf
jp
jmp
sub
js
mov
stos
xchg
and
lahf
aaa
retf
out
ret
leave
xor
add
fdiv
pop
popa
je
sub
mov
xor
dec
je
aad
jnp
and
je
and
jl
out
je
stos
mov
stos
mov
sbb
dec
jne
push
(bad)
std
scas
fisttp
jne
and
mov
out
cmp
mov
cmp
sub
xchg
mov
bound
adc
xchg
std
scas
(bad)
mov
push
pusha
pushf
inc
fs
and
mov
fadd
js
push
jl
(bad)
je
imul
and
pcmpeqb
out
mov
push
cmc
add
dec
jo
out
scas
xor
fadd
fs
sub
cmp
sub
jbe
xchg
mov
sub
imul
and
and
xor
jae
xor
jae
je
and
je
jmp
add
retf
je
jmp
mov
adc
add
fadd
pusha
adc
fadd
fs
push
je
jecxz
js
push
mov
jecxz
gs
jne
arpl
mov
push
retf
movs
cmp
and
stos
jl
mov
stos
xchg
test
push
pusha
jmp
cmp
push
jmp
sub
std
sub
fild
arpl
stc
xor
jae
ins
jmp
js
push
jl
jo
je
jecxz
add
jecxz
dec
data16
and
dec
je
jmp
pushf
pusha
imul
add
push
mov
jecxz
arpl
imul
xor
std
mov
stos
mov
mov
mov
arpl
and
sbb
adc
mov
sub
popa
je
sahf
add
add
je
stos
xor
and
mov
fild
pop
fninit
xor
stos
dec
je
sub
and
je
and
call
fbld
ins
xchg
and
push
jo
sub
bound
jmp
xor
enter
rol
je
jl
mov
dec
inc
cmc
test
je
popa
addr16
jo
ss
and
loopne
std
(bad)
daa
and
sub
mov
and
das
lahf
dec
push
dec
jns
adc
xor
stos
mov
jno
xchg
loope
mov
and
das
std
mov
data16
mov
and
mov
jbe
xchg
stos
lods
pop
xor
dec
je
loope
or
and
push
push
dec
je
cmp
dec
jb
push
popa
jmp
stos
lods
or
xor
out
lahf
ss
ja
out
pushf
aas
scas
and
stos
lods
jne
stos
mov
adc
and
js
fadd
add
aaa
je
stos
lods
or
xor
out
mov
jecxz
lods
or
xor
mov
mov
arpl
neg
popa
jle
mov
shr
inc
mov
cmc
xor
aaa
pop
je
jo
fwait
scas
and
(bad)
mov
(bad)
div
add
xor
xor
sub
mov
mov
xor
test
mov
inc
xor
push
mov
cmovne
lahf
mov
sub
dec
shr
je
jae
(bad)
std
cmp
mov
mov
and
ins
cwde
mov
aam
mov
and
and
stos
mov
call
ret
mov
and
mov
inc
mov
adc
ret
xor
xor
enter
sar
mov
loope
and
jl
das
and
and
setnp
je
and
mov
aaa
arpl
xor
lods
std
sub
mov
cwde
mov
fdiv
fisttp
add
retf
and
mov
stos
mov
sub
add
adc
imul
pushf
inc
test
retf
jmp
aaa
jmp
mov
je
jmp
std
outs
test
pop
push
sti
mov
fmul
je
and
arpl
outs
fisttp
es
mov
fdivr
mov
push
jl
out
and
sbb
je
fwait
add
arpl
std
mov
data16
outs
jmp
mov
fdiv
(bad)
and
stos
mov
loop
loope
adc
jno
cmps
fmul
and
popa
je
lahf
sub
sub
or
mov
mov
jmp
xor
and
jle
and
(bad)
mov
pop
addr16
shl
adc
fcomp
sub
loopne
je
jae
(bad)
not
or
pop
xor
pop
je
and
adc
dec
push
fmul
xchg
test
and
out
std
xor
lods
std
sub
and
jmp
in
sbb
pop
addr16
shl
adc
fcomp
sub
or
mov
mov
jmp
xor
and
jle
and
(bad)
mov
pop
addr16
shl
adc
fcomp
sub
loopne
je
jae
(bad)
not
or
ret
jmp
adc
dec
push
fmul
xchg
test
and
out
mov
popa
je
outs
fisttp
push
or
and
loop
je
mov
inc
lods
arpl
pushf
out
scas
and
and
aam
not
or
rcl
mov
addr16
imul
ss
xchg
mov
scas
and
sub
loopne
je
jae
(bad)
not
or
rcl
mov
addr16
imul
ss
xchg
mov
scas
and
sub
mov
push
je
add
xor
jle
jmp
jno
add
mov
je
jae
lea
popa
sahf
mov
aam
ss
retf
fs
and
mov
retf
test
jmp
in
sbb
ret
ss
sahf
stos
mov
fsub
pushf
add
je
cmps
stos
mov
fsub
lahf
xor
icebp
push
fmul
xchg
test
and
cmp
je
out
pushf
pop
pusha
je
push
sub
mov
jno
leave
retf
aam
jmp
in
sbb
fisttp
dec
or
and
mov
mov
push
test
aam
std
outs
out
mov
pusha
je
push
sub
mov
jno
stc
dec
test
push
fmul
je
mov
aaa
je
call
adc
sbb
or
mov
mov
jmp
aaa
jmp
in
sbb
pop
addr16
shl
adc
fcomp
cs
lahf
xchg
jnp
je
mov
ss
mov
and
jo
ss
retf
mov
jmp
ss
in
sbb
pop
addr16
ret
ss
xchg
mov
test
je
sub
loopne
je
jae
(bad)
not
or
rcl
mov
popa
je
imul
je
push
sub
mov
jno
leave
retf
hlt
ss
in
sbb
fisttp
dec
or
and
pop
ss
mov
push
je
cmps
add
and
shr
fmul
jne
and
mov
fwait
ins
add
and
mov
fdivr
mov
xchg
mov
fdiv
test
mov
fimul
mov
fisttp
mov
fimul
mov
stos
mov
lock
aam
imul
inc
es
adc
into
cmp
out
or
sahf
ja
mov
mov
fdivr
mov
addr16
je
adc
ret
addr16
je
adc
bound
out
mov
mov
adc
and
fadd
adc
stc
icebp
jmp
mov
inc
xchg
ss
imul
cmp
xchg
push
je
add
jle
jmp
jno
xor
or
mov
mov
jmp
xor
jmp
mov
pop
addr16
ret
ss
xchg
mov
stos
and
sub
loopne
je
jae
(bad)
not
or
rcl
mov
bound
out
cmc
outs
jecxz
mov
fdiv
adc
mov
adc
mov
cwde
adc
fistp
jne
and
xor
stos
icebp
mov
and
sahf
je
adc
popa
jne
jmp
jmp
and
fisttp
cmp
and
fisttp
cwde
adc
aaa
sbb
or
stc
outs
xlat
mov
stos
and
das
stc
stc
push
fmul
xor
pop
jne
lahf
(bad)
mov
stos
leave
mov
fimul
std
sub
mov
fimul
mov
fsub
pop
sbb
cmps
or
fisttp
std
outs
ror
adc
mov
sbb
mov
adc
and
mov
ss
retf
inc
xor
and
mov
retf
pusha
xor
and
jle
and
(bad)
mov
pop
addr16
ret
ss
xchg
mov
stos
and
sub
mov
pop
je
add
dec
je
call
adc
sbb
or
mov
mov
jmp
dec
jmp
in
sbb
pop
addr16
shl
adc
fcomp
sub
mov
jb
je
fdiv
adc
xchg
std
outs
lahf
mov
outs
and
jae
rcl
mov
adc
stos
icebp
mov
sub
stc
adc
mov
ret
ss
xchg
mov
aad
je
cs
lahf
mov
je
dec
je
call
adc
sbb
or
mov
mov
jmp
dec
jmp
in
sbb
pop
addr16
ret
ss
xchg
mov
aad
je
sub
loopne
je
jae
(bad)
not
or
rcl
mov
sbb
je
out
sbb
ret
ss
xchg
mov
aad
je
cs
lods
ret
sti
std
mov
sahf
dec
je
call
adc
pushf
(bad)
and
and
aam
es
sahf
mov
aam
ss
retf
fmul
and
mov
retf
cld
dec
jmp
in
sbb
pop
addr16
ret
ss
xchg
mov
aam
je
sub
loopne
je
jae
(bad)
not
or
call
ror
sbb
jl
aam
je
push
sub
mov
jno
stc
dec
test
push
fmul
je
mov
ins
sbb
and
loopne
je
jae
(bad)
not
or
and
jmp
adc
dec
push
fmul
xchg
test
and
out
sbb
ret
ss
xchg
mov
aam
je
sub
loopne
je
jae
(bad)
not
or
rcl
mov
push
je
imul
je
sbb
fmul
push
pop
fisttp
dec
jmp
dec
jmp
in
sbb
pop
addr16
shl
adc
fcomp
sub
or
mov
mov
jmp
pop
jmp
mov
fdivr
mov
push
dec
je
call
adc
sbb
or
mov
mov
jmp
stos
adc
cmps
mov
call
retf
push
mov
retf
mov
and
jle
and
(bad)
mov
pop
addr16
shl
adc
fcomp
sub
or
mov
mov
jmp
out
jmp
pop
je
push
sub
mov
jno
stc
dec
test
push
fmul
je
mov
dec
je
call
adc
push
je
je
leave
push
fmul
stos
test
and
out
pushf
test
je
push
sub
mov
jno
stc
dec
test
push
fmul
je
mov
dec
je
aam
std
outs
fwait
mov
xor
ss
xchg
mov
(bad)
and
sub
loopne
je
jae
(bad)
not
or
rcl
mov
pop
je
imul
je
push
sub
mov
jno
leave
retf
test
and
pop
jmp
call
mov
or
and
into
dec
je
mov
stos
ss
pushf
adc
je
imul
je
call
dec
je
jmp
dec
jmp
mov
jne
arpl
mov
push
fmul
je
dec
je
push
xlat
mov
pop
fisttp
pushf
adc
sbb
xchg
pushf
mov
fcomp
pop
fisttp
dec
jmp
jnp
and
iret
mov
and
and
cpuid
cwde
jo
and
or
cmc
stos
stos
mov
stos
mov
scas
fdiv
stos
mov
stos
mov
pop
mov
test
ss
and
push
dec
je
dec
je
ins
cld
ss
cmps
mov
jmp
je
add
test
push
mov
mov
push
retf
dec
dec
stos
test
sbb
xor
and
xchg
test
test
sbb
xor
je
add
ss
and
retf
pop
test
stos
mov
stos
mov
and
and
cpuid
cwde
call
mov
ss
std
adc
xchg
std
outs
mov
mov
dec
mov
push
loop
dec
jne
mov
test
fimul
(bad)
out
es
jmp
mov
adc
fdivr
mov
clc
push
loop
mov
sub
and
jbe
stc
mov
mov
mov
adc
je
cmps
add
dec
fimul
je
test
jl
scas
add
loopne
stc
and
and
std
jg
mov
adc
inc
je
stos
icebp
add
fmul
mov
and
icebp
xchg
mov
adc
and
sub
stc
call
jno
scas
sbb
loopne
stc
and
and
std
jg
mov
mov
je
jmp
je
stos
icebp
loopne
fmul
je
dec
fs
jmp
and
push
dec
je
retf
mov
pushf
pop
sbb
daa
jne
jmp
and
mov
stos
test
sbb
jmp
mov
push
jge
push
and
cmp
jmp
je
int3
mov
ja
fmul
std
sub
and
icebp
push
fisttp
rcl
mov
jmp
pop
fmul
mov
fmul
mov
fmul
mov
fimul
xchg
stos
icebp
call
sub
and
xchg
jmp
je
sub
adc
mov
xor
jmp
stc
outs
xchg
mov
push
fisttp
dec
jmp
std
outs
cmps
mov
movs
and
dec
je
outs
fwait
mov
shl
je
cs
cmc
add
je
sub
fdiv
je
and
mov
and
in
pushf
adc
mov
leave
lock
fmul
mov
retf
mov
adc
mov
sub
fmul
mov
fimul
int3
adc
mov
and
je
add
je
and
je
cmps
mov
jmp
mov
cmps
xchg
je
and
mov
cmp
jmp
xchg
arpl
std
mov
xchg
loopne
adc
popa
je
xchg
std
ss
cmps
mov
call
out
mov
dec
mov
arpl
pop
mov
stc
icebp
push
fisttp
stos
test
pushf
pandn
je
sub
mov
icebp
dec
pushf
ja
and
outs
dec
mov
sbb
push
mov
and
je
retf
rol
and
leave
jp
mov
jmp
je
dec
jo
jmp
mov
and
dec
push
stos
test
stc
icebp
push
fisttp
enter
mov
push
mov
imul
shr
pop
fmul
sbb
and
mov
xchg
mov
fisub
je
sub
jne
mov
jmp
pushf
rcl
je
xchg
ror
fldenv
je
outs
mov
js
adc
xchg
std
outs
dec
mov
mov
mov
std
push
cwde
push
mov
retf
sub
and
add
inc
je
stos
mov
arpl
cmc
sub
fadd
js
push
inc
je
stos
mov
arpl
mov
and
inc
std
and
pushf
jg
and
inc
std
and
sub
xor
ret
and
and
cmp
and
scas
xor
push
je
push
inc
je
stos
mov
inc
and
(bad)
std
xor
stos
mov
sub
loopne
arpl
cld
in
dec
jo
scas
cmp
hlt
adc
js
lahf
sub
test
jno
add
fwait
push
sti
and
das
jnp
scas
(bad)
xor
es
add
add
xor
in
and
mov
and
jnp
data16
scas
and
mov
sub
and
xor
pushf
cmp
and
push
je
sbb
stos
mov
scas
(bad)
jmp
push
jmp
je
in
mov
stc
xor
jae
pushf
adc
fild
std
sub
and
fld
sub
(bad)
int3
cmp
and
adc
jne
push
mov
std
adc
mov
sub
fwait
xchg
mov
lahf
xchg
mov
scas
icebp
enter
and
cmps
mov
adc
std
ss
ds
je
stos
mov
sub
out
and
daa
jo
jmp
mov
retf
jmp
ins
adc
fmul
inc
jmp
mov
jecxz
lahf
mov
icebp
enter
xor
and
lahf
xchg
mov
ret
mov
lds
je
sub
std
adc
mov
sub
ret
mov
jmp
ins
adc
fmul
inc
jmp
je
jecxz
lahf
out
fiadd
enter
and
and
and
setnp
and
mov
popf
lds
cmp
cmc
call
jne
arpl
daa
sbb
and
xchg
inc
je
stos
lods
mul
fdiv
(bad)
and
stos
mov
loop
scas
jne
jno
adc
mov
cs
test
sar
mov
jbe
ss
imul
sub
test
cld
mov
adc
ins
xchg
ss
and
outs
inc
je
mov
inc
je
call
adc
sbb
or
stc
outs
and
fisub
je
sub
loopne
je
jae
(bad)
not
or
(bad)
inc
je
call
adc
leave
jmp
stos
test
stc
leave
jmp
inc
jmp
inc
jmp
in
sbb
pop
pusha
sbb
shl
cmps
je
adc
adc
out
cmc
add
dec
je
dec
inc
xchg
test
stc
icebp
jmp
inc
jmp
inc
jmp
in
sbb
pop
pusha
sbb
shl
cmps
je
adc
adc
out
pushf
mov
je
push
sub
mov
jno
ret
retf
and
and
pop
jmp
stc
push
and
xor
je
push
and
fldenv
je
xor
xchg
test
stc
icebp
jmp
xchg
test
stc
icebp
jmp
inc
jmp
pop
sbb
je
push
sub
mov
jno
dec
xchg
test
stc
icebp
jmp
inc
jmp
xchg
test
stc
icebp
jmp
inc
jmp
inc
jmp
in
sbb
pop
pusha
sbb
shl
cmps
je
adc
adc
out
sbb
ret
cmps
je
adc
adc
out
std
sbb
test
sub
cld
inc
jmp
in
sbb
pop
pop
pushf
pushf
adc
inc
je
jmp
je
fmul
ss
and
dec
inc
je
mov
xchg
ss
and
pop
inc
je
mov
inc
je
call
adc
sbb
or
stc
outs
and
fsub
je
cs
fs
je
or
icebp
test
dec
aas
stos
test
stc
icebp
jmp
inc
jmp
inc
jmp
in
sbb
pop
pusha
sbb
shl
cmps
je
adc
adc
out
sbb
ret
ss
cmps
je
adc
adc
out
cmc
sub
adc
jmp
jle
and
(bad)
mov
pop
pusha
sbb
shl
cmps
je
adc
adc
out
mov
ret
mov
test
stc
icebp
jmp
inc
jmp
inc
jmp
in
sbb
pop
pusha
sbb
shl
cmps
je
adc
adc
out
sbb
ret
ss
cmps
je
adc
adc
out
pushf
fcom
je
push
sub
mov
jno
dec
xchg
test
stc
icebp
jmp
inc
jmp
jne
and
stos
adc
fiadd
call
adc
push
je
je
leave
jmp
stos
test
stc
leave
jmp
inc
jmp
inc
jmp
in
sbb
pop
pusha
sbb
shl
cmps
je
adc
adc
out
sbb
cld
ss
cmps
je
adc
adc
out
std
sbb
xchg
std
outs
retf
stos
mov
adc
sub
mov
jno
dec
xchg
test
stc
icebp
jmp
inc
jmp
inc
jmp
in
sbb
pop
pop
pushf
movs
adc
inc
je
jmp
je
fmul
ss
and
inc
je
mov
stos
ss
and
jbe
je
mov
push
je
and
je
and
jmp
je
stos
icebp
mov
es
je
scas
icebp
je
fmul
je
dec
je
push
fld
stc
push
and
push
cld
mov
jmp
pushf
sub
je
fninit
xor
in
mov
je
mov
mov
cmc
push
mov
je
jo
and
imul
and
test
inc
sub
jno
and
sub
jo
fwait
(bad)
and
sub
and
and
loope
fimul
xchg
arpl
std
mov
mov
pushf
test
xlat
mov
jmp
mov
sti
ss
sahf
pop
je
stos
icebp
aam
fmul
std
outs
pop
(bad)
mov
dec
je
outs
xchg
pop
and
and
cmps
ror
std
ss
xchg
stos
ss
add
fmul
mov
cmps
cmps
jbe
and
jmp
je
outs
fisttp
icebp
pop
fimul
pop
jmp
mov
xchg
aam
adc
xchg
mov
adc
mov
cs
jge
in
loop
jmp
stc
outs
fisttp
xchg
les
je
outs
xchg
mov
push
fisttp
pop
jmp
std
outs
mov
adc
je
scas
dec
je
outs
fwait
mov
les
je
cs
int3
in
retf
or
mov
sub
fmul
mov
(bad)
mov
jmp
je
push
adc
adc
sub
(bad)
std
icebp
sahf
fmul
icebp
push
fisttp
xchg
adc
xchg
icebp
push
fisttp
push
jmp
push
jmp
and
and
sub
jecxz
and
mov
pop
jmp
mov
xchg
aam
adc
popa
je
xchg
std
ss
cmps
mov
xor
je
imul
(bad)
mov
fild
(bad)
adc
cmps
mov
lahf
std
ss
outs
pop
je
stos
mov
sub
sbb
and
mov
je
mov
mov
cmps
add
cwde
loope
and
ins
jne
and
sbb
je
cwde
or
daa
jne
jmp
and
retf
test
and
fwait
cmp
je
and
xor
je
outs
mov
mov
fmul
mov
div
scas
icebp
clc
adc
mov
retf
or
loop
mov
outs
sahf
je
jmp
mov
fmul
je
scas
icebp
call
adc
fcomp
sub
or
xchg
arpl
std
mov
xchg
loopne
adc
and
std
ss
push
pop
je
jae
jg
popa
je
add
pop
je
mov
add
sub
pop
jmp
mov
dec
daa
arpl
jne
mov
fmul
mov
js
cmc
test
call
add
and
adc
fcomp
cs
cmc
or
je
retf
push
pop
jmp
mov
and
fild
arpl
stc
icebp
pop
fimul
pop
jmp
mov
and
aam
std
outs
push
(bad)
mov
xchg
pop
jmp
mov
daa
je
arpl
neg
popa
jle
retf
xchg
push
outs
or
pop
gs
je
data16
ret
and
(bad)
and
xor
push
stos
retf
in
jmp
mov
daa
and
push
push
je
jo
dec
ret
and
das
stc
and
and
pushf
enter
mov
and
mov
(bad)
mov
data16
and
sbb
jl
je
and
je
push
pop
je
stos
mov
adc
and
sbb
(bad)
std
xor
stos
mov
scas
fbld
add
je
jne
or
and
fistp
xchg
arpl
std
sub
loopne
std
setnp
and
mov
add
mov
(bad)
mov
mov
loop
jo
jmp
jo
jecxz
aaa
arpl
inc
mov
sbb
in
je
outs
and
add
je
and
add
scas
icebp
jne
fmul
mov
fmul
std
sbb
js
call
and
enter
jmp
(bad)
je
test
fisttp
std
scas
(bad)
mov
in
mov
and
mov
jnp
scas
frstor
in
std
ss
call
je
scas
xor
test
push
hlt
aad
and
pop
data16
sub
and
adc
call
je
mov
call
and
por
jmp
je
fdiv
mov
xchg
xor
gs
mov
stos
xchg
and
push
and
and
rol
std
sub
je
call
dec
jno
jmp
je
jmp
je
and
je
and
pop
je
stos
mov
jmp
push
inc
adc
and
jmp
push
inc
adc
and
sbb
xchg
std
scas
(bad)
mov
and
push
fcmovu
inc
hlt
dec
popa
je
nop
or
and
push
fcmovu
inc
pop
jne
je
or
je
and
push
fcmovu
inc
push
mov
je
and
push
fcmovu
inc
pop
jne
je
mov
int
sbb
and
jne
dec
inc
mov
add
xor
jmp
mov
mov
ss
jne
dec
inc
mov
push
aad
jmp
call
and
fcmovu
inc
inc
jae
je
adc
je
and
push
fcmovu
inc
test
je
add
je
and
push
fcmovu
inc
loopne
popa
je
xor
je
and
push
fcmovu
inc
in
dec
popa
je
and
je
mov
mov
add
or
std
mov
fisttp
je
jle
je
adc
sbb
ins
arpl
fadd
ja
je
mov
fisttp
je
sbb
jmp
popf
ins
arpl
fadd
dec
popa
je
les
je
fisttp
je
ss
je
adc
and
push
fadd
jne
je
loopne
je
arpl
pop
mov
push
mov
and
jmp
xor
dec
mov
jmp
mov
and
xchg
xor
or
xor
dec
mov
jmp
mov
and
(bad)
mov
repz
dec
mov
jmp
mov
and
idiv
xor
dec
mov
jmp
mov
stos
xchg
test
cwde
adc
out
stos
mov
stos
mov
pop
(bad)
ss
push
jl
dec
fisttp
cwde
aaa
popa
je
add
mov
dec
sub
xor
add
sub
and
shl
add
je
fist
jmp
jmp
pop
scas
xlat
and
scas
fistp
sbb
je
and
jmp
je
ret
jmp
das
int3
and
xor
fidivr
push
(bad)
test
mov
data16
add
push
dec
sbb
and
and
out
ss
je
push
push
je
xor
and
fwait
loope
je
and
inc
fidivr
inc
scas
xor
jmp
test
dec
pusha
sbb
and
and
call
test
add
push
je
adc
and
je
and
je
and
jno
and
je
and
je
lahf
jbe
jmp
push
dec
push
push
jmp
push
fcmovu
inc
jo
bound
push
je
and
inc
fidivr
inc
scas
xor
call
dec
pop
sbb
and
dec
test
test
add
je
or
test
push
je
push
inc
jmp
and
je
push
xor
stos
and
add
je
dec
or
ret
je
jae
ins
aaa
popa
je
xor
ss
and
dec
xor
arpl
adc
dec
je
fist
jmp
jmp
xor
cmp
je
add
sbb
and
in
test
jmp
je
ficom
jmp
je
push
inc
jmp
and
je
push
xor
stos
and
sbb
jmp
pop
and
je
dec
cli
test
and
aaa
popa
je
jmp
pusha
jne
je
jmp
push
jmp
push
mov
sbb
and
aaa
sbb
jmp
je
cmps
test
jmp
je
retf
jmp
jge
push
je
and
jmp
je
add
je
dec
add
and
jmp
pushf
fadd
je
and
inc
fidivr
inc
mov
jne
jmp
je
pop
sbb
jmp
je
cmps
test
jmp
je
mov
je
fist
jmp
jmp
ss
dec
or
je
and
jmp
je
cmps
test
jmp
je
por
adc
push
inc
jmp
and
je
push
xor
stos
and
sbb
xchg
jmp
je
and
dec
pop
test
and
aaa
popa
je
jmp
in
popa
je
adc
xchg
std
scas
retf
std
mov
and
je
and
je
xor
adc
aaa
jne
jmp
daa
ss
je
xor
ss
and
sahf
xor
and
inc
fidivr
inc
scas
xor
cmp
je
dec
mov
jmp
sbb
push
je
stc
test
pushf
les
je
dec
adc
xor
fist
jmp
jmp
xor
pop
and
adc
jmp
and
xor
test
add
push
je
add
push
inc
jmp
and
je
push
xor
stos
and
xor
jmp
je
dec
and
and
dec
jb
test
sbb
aaa
popa
je
jmp
loopne
popa
je
jmp
push
jmp
push
repnz
pop
jne
and
dec
je
jae
test
popa
je
jmp
ss
and
jmp
lock
popa
je
jmp
push
jmp
push
repnz
div
sbb
jmp
je
jae
in
popa
je
jmp
ss
and
jmp
push
sbb
dec
je
fist
jmp
jmp
ss
je
and
pusha
and
hlt
mov
and
jmp
je
sbb
push
je
push
inc
jmp
and
je
push
adc
test
push
ins
add
jmp
je
jae
test
popa
je
jmp
ss
and
jmp
push
jne
je
jmp
push
jmp
push
std
dec
out
je
and
hlt
dec
je
push
sbb
xor
sbb
clc
ss
and
jb
ss
push
mov
adc
mov
mov
aaa
and
push
or
jecxz
mov
je
pop
(bad)
ss
push
jl
test
mov
aaa
popa
je
add
or
sub
xor
jmp
std
sub
sub
xor
jmp
pushf
lock
aam
pop
jmp
jmp
and
je
test
mov
data16
mov
shl
jmp
and
call
test
call
add
addr16
jmp
xor
sbb
xor
or
test
adc
aaa
push
pusha
and
hlt
mov
and
aaa
popa
je
jmp
jo
bound
fadd
jne
je
jmp
sbb
and
data16
shl
pushf
mov
and
jmp
je
stc
test
pushf
cwde
add
inc
aam
jmp
push
jmp
push
jmp
je
and
je
sub
pusha
add
mov
sub
dec
jne
adc
inc
out
mov
push
je
dec
je
fist
jmp
jmp
ss
push
dec
je
jae
test
popa
je
outs
push
je
and
add
inc
mov
sbb
ss
je
jmp
inc
add
imul
test
and
je
pusha
jne
jmp
pushf
dec
cmp
je
push
in
test
inc
add
dec
je
jmp
cmp
and
je
stos
imul
push
jmp
je
push
pushf
jmp
cmc
and
fadd
jne
je
jmp
sbb
and
adc
pusha
sbb
jmp
je
cmps
test
jmp
je
mov
mov
stos
mov
jmp
push
jmp
sbb
and
pop
push
pusha
or
je
jae
test
popa
je
outs
push
je
and
(bad)
mov
or
jmp
xor
imul
je
dec
sbb
jmp
je
jmp
ss
je
retf
jmp
cmp
mov
mov
mov
xor
and
jmp
sbb
push
je
stc
test
pushf
inc
cmp
in
xor
fist
jmp
jmp
xor
pop
and
xor
adc
and
xor
test
add
je
add
push
inc
jmp
and
je
push
xor
stos
and
xor
jmp
je
and
dec
jb
test
sbb
aaa
popa
je
jmp
loopne
popa
je
jmp
push
jmp
push
cli
dec
nop
jne
and
jmp
je
jae
or
popa
je
xor
ss
and
xchg
xor
arpl
inc
mov
push
je
push
inc
jmp
and
je
push
xor
stos
and
fs
je
dec
mov
push
push
and
dec
and
aaa
popa
je
jmp
aam
popa
je
jmp
push
jmp
push
repnz
div
push
pop
xor
je
mov
ss
and
jbe
and
div
mov
mov
mov
xor
cmp
pop
and
and
hlt
mov
and
jmp
je
sbb
cmc
and
je
and
inc
fidivr
inc
mov
push
adc
and
dec
test
test
sbb
ss
je
jmp
je
adc
push
je
push
inc
jmp
and
je
push
xor
stos
and
arpl
dec
xor
jmp
hlt
mov
and
xor
push
jmp
in
dec
popa
je
sub
mov
adc
and
jmp
bnd
and
pusha
loopne
fwait
and
and
std
sub
and
and
je
and
jmp
fcomi
and
mov
in
je
and
je
retf
fsubr
and
mov
int3
ret
xor
and
pushf
sub
je
imul
jo
and
shl
scas
xlat
and
scas
fbld
lahf
xor
pop
popa
je
jmp
je
add
mov
fild
std
sub
push
je
push
mov
clc
ss
ja
ss
pushf
xchg
lds
std
scas
(bad)
mov
(bad)
mov
pop
mov
push
jo
daa
stc
xor
jae
add
dec
dec
shr
hlt
pushf
imul
mov
cmc
push
daa
jne
jmp
inc
arpl
inc
test
cmc
mov
dec
je
add
je
fmul
je
retf
jo
jmp
in
sbb
jle
hlt
xchg
fdiv
sti
dec
leave
les
fmul
ins
jmp
gs
ss
and
or
mov
je
xchg
fdiv
sti
dec
add
jmp
ins
jmp
xor
ss
and
(bad)
arpl
or
ficom
je
adc
xor
je
pop
mov
xor
pop
popa
je
outs
and
mov
and
cmp
je
mov
gs
xchg
ss
cmps
je
adc
xor
je
pop
mov
sbb
pop
popa
je
outs
and
out
and
fdivr
sti
dec
(bad)
lds
fmul
arpl
and
or
cld
lds
jmp
and
inc
arpl
test
adc
mov
sub
or
jmp
ss
cmps
je
adc
xor
je
pop
mov
xor
outs
and
pop
std
and
fdivr
sti
dec
dec
(bad)
test
stc
icebp
jmp
arpl
and
or
jbe
ss
and
fisub
jmp
scas
test
sbb
xor
stc
outs
and
je
bound
(bad)
mov
jmp
xor
bound
fimul
jge
retf
je
jmp
jne
stos
mov
fcomp
mov
out
and
std
(bad)
daa
and
outs
xor
cwde
fwait
pop
and
and
std
sub
mov
je
scas
sub
je
pushf
jmp
out
jge
push
jl
jmp
sub
and
cpuid
cwde
pop
loop
je
mov
mov
std
sbb
test
sub
test
stos
mov
cwde
xchg
ss
cmps
cdq
adc
je
add
outs
je
call
adc
mov
push
ror
or
cdq
sbb
bound
sub
adc
fdivr
mov
sahf
xchg
dec
mov
test
stc
icebp
pop
aam
mov
and
leave
sbb
mov
or
cmps
cdq
adc
je
push
xchg
dec
jne
test
stc
icebp
pop
aam
mov
and
leave
sbb
mov
pause
ss
cmps
cdq
adc
je
arpl
adc
fdivr
mov
sahf
xchg
dec
inc
(bad)
test
stc
icebp
pop
aam
mov
and
leave
sbb
mov
movs
nop
ss
cmps
cdq
adc
je
push
xchg
dec
sbb
test
stc
icebp
pop
aam
mov
and
test
aam
mov
hlt
leave
sbb
mov
popa
nop
ss
cmps
cdq
adc
je
push
xchg
dec
faddp
test
stc
icebp
pop
aam
mov
and
leave
sbb
mov
and
cdq
adc
je
push
xchg
dec
pushf
(bad)
test
stc
icebp
pop
aam
mov
and
mov
pop
je
push
xchg
dec
ja
test
stc
icebp
pop
aam
mov
and
leave
sbb
mov
retf
je
cmps
cdq
adc
je
adc
jmp
and
and
and
call
ss
mov
stos
icebp
pushf
sbb
ror
imul
ja
jmp
cmc
sub
jg
jmp
aam
and
cs
icebp
push
fisttp
icebp
push
and
shl
mov
mov
fbstp
and
leave
push
fisttp
pop
jmp
je
push
fmul
icebp
mul
je
sub
mov
sbb
test
sub
icebp
mov
fmul
ss
and
mov
mov
imul
sub
into
mov
cmp
and
sub
jae
adc
std
sub
fisttp
jbe
and
dec
mov
inc
sbb
xor
or
ss
and
adc
mov
je
jp
ss
cmp
ss
and
ss
je
mov
sbb
out
and
fisttp
(bad)
and
stos
dec
je
scas
icebp
mov
fmul
ss
and
ret
jmp
icebp
push
fisttp
arpl
and
mov
scas
icebp
mov
mov
sbb
jmp
imul
daa
and
outs
fisttp
xor
stc
outs
fisttp
std
and
xor
je
cmps
mov
aaa
je
and
xor
je
outs
fisttp
in
jbe
mov
cs
jge
in
and
and
icebp
push
fisttp
and
and
jmp
mov
jne
arpl
test
loopne
repnz
jmp
je
pop
fisttp
test
sbb
xor
stc
outs
fisttp
std
and
xor
pop
popa
je
outs
fisttp
sub
and
fisttp
sub
and
sti
or
sti
or
fisttp
jmp
or
fisttp
mov
or
fmul
adc
je
xchg
mov
fisttp
scas
test
stc
icebp
push
fisttp
(bad)
jmp
mov
fmul
je
stos
icebp
mov
push
fisttp
xchg
stc
and
test
xor
xor
jmp
stc
outs
fisttp
push
fisttp
je
scas
icebp
mov
fmul
je
scas
leave
mov
mov
popa
sahf
or
and
aad
dec
jmp
mov
xlat
mov
stos
and
je
and
add
data16
scas
icebp
mov
fmul
cwde
adc
mov
out
std
sub
mov
outs
or
cwde
adc
mov
int
sbb
and
popf
cmp
ss
mov
mov
sub
jbe
xchg
push
dec
addr16
retf
cwde
fs
dec
repnz
cmc
mov
push
je
arpl
pop
lods
arpl
sbb
pop
popa
je
jmp
aas
clc
and
xchg
add
jae
psubq
je
jmp
inc
popa
jmp
inc
jne
je
lock
je
sar
pop
into
mov
mov
and
jae
xor
jmp
sbb
xor
add
je
retf
adc
and
movs
ss
imul
inc
jmp
stc
outs
xchg
call
retf
mov
push
jne
mov
ss
and
adc
mov
fmul
inc
jmp
je
out
push
shl
sub
je
es
test
int3
ret
aam
je
or
mov
sub
mov
cmps
cmps
inc
fs
sub
jae
adc
std
sub
frndint
loope
into
mov
adc
retf
in
pusha
jmp
mov
xor
mov
and
(bad)
cmc
or
mov
in
std
sbb
mov
adc
nop
cdq
mov
in
fild
fmul
je
stos
mov
sub
add
cmps
fstp
outs
mov
lods
jmp
std
mov
cmps
xlat
cdq
adc
xor
sub
ss
and
adc
jmp
mov
int
mov
and
icebp
jne
mov
adc
into
mov
adc
stos
lods
inc
xor
icebp
jmp
fmul
je
fwait
outs
pop
jmp
cwde
adc
and
push
stc
ss
mov
ss
xor
bound
xor
loopne
or
and
leave
mov
mov
test
int
jmp
shl
je
jp
ss
in
ss
(bad)
stc
and
or
xor
popa
je
mul
je
sbb
std
xor
lods
std
sub
scas
test
sbb
dec
popa
je
sub
ss
add
xor
retf
sub
jmp
mov
hlt
lods
test
int
jmp
(bad)
xor
sbb
xor
and
ss
pop
stc
and
arpl
leave
push
into
mov
test
int
jmp
mov
dec
je
out
dec
je
jmp
je
bound
sub
je
data16
dec
je
jmp
cmc
sub
outs
je
in
int3
adc
data16
and
cmps
rcr
sub
rcr
arpl
dec
jmp
add
push
jne
stc
push
xchg
fwait
mov
retf
cwde
jnp
and
je
data16
and
and
or
mov
and
fwait
mov
and
xor
stc
icebp
pop
int3
mov
jmp
mov
mov
pop
jne
lahf
ficomp
je
push
int3
and
fmul
pushf
jo
je
and
xor
push
jbe
rcl
rol
jnp
jmp
je
stos
lods
inc
xor
test
xchg
dec
pop
jmp
jmp
or
dec
je
jmp
je
stos
xor
jmp
mov
fmul
or
and
je
jmp
sub
and
retf
fsub
std
xor
in
enter
je
enter
and
je
in
mov
addr16
jnp
jmp
xor
jmp
push
jmp
xchg
aaa
popa
je
or
ss
and
jmp
ss
jp
and
je
jecxz
mov
stos
jns
jmp
dec
xor
jns
and
xor
and
push
jns
jmp
int3
xchg
inc
je
sbb
into
mov
adc
jmp
adc
fdiv
mov
and
enter
and
icebp
push
into
mov
add
mov
dec
shl
dec
or
and
popa
je
jmp
je
add
mov
jecxz
add
push
sbb
test
je
out
dec
shl
and
retf
in
rcl
sti
std
mov
cmps
fcomp
jmp
je
and
je
ss
jmp
stc
outs
mov
je
and
cdq
arpl
dec
je
sbb
je
mov
and
je
xlat
jne
jmp
xor
jmp
and
loop
je
stos
lods
pop
xor
and
push
sub
push
je
and
xor
jae
das
in
je
sub
sub
and
cpuid
cwde
dec
call
je
stc
cwde
cmp
add
test
js
(bad)
mov
jp
adc
jnp
call
je
push
gs
and
call
je
push
outs
dec
sti
and
scas
sar
dec
dec
jmp
je
outs
mov
loope
jmp
je
sub
scas
jmp
je
push
sbb
test
pushf
dec
push
fmul
mov
stos
icebp
mov
fmul
test
push
fimul
mov
cmps
pushf
mov
fimul
pushf
pop
fmul
je
jecxz
lock
and
cmps
mov
mov
addr16
jmp
mov
dec
push
or
mov
adc
test
movs
pop
fmul
mov
test
nop
pop
fmul
mov
mov
mov
fimul
inc
and
icebp
push
fimul
mov
ret
mov
pop
fmul
je
push
xor
stos
and
adc
mov
sub
popa
je
in
(bad)
jae
and
adc
je
adc
mov
not
xchg
ss
mov
je
lahf
das
mov
xchg
ss
clc
lahf
mov
xchg
ss
sub
or
fisttp
ss
popf
and
arpl
inc
mov
aad
jne
je
scas
sub
mov
and
mov
and
xor
lahf
sub
jns
and
mov
(bad)
mov
or
jmp
mov
cs
shl
in
test
add
shl
add
test
add
es
in
stos
and
inc
shl
test
stos
and
pop
shl
loopne
test
add
es
test
add
es
test
add
es
stos
and
js
es
jmp
and
cmp
mov
cli
retf
pushf
js
and
icebp
adc
mov
test
add
aam
test
add
inc
in
stos
and
jns
xchg
fs
je
dec
mov
cli
retf
sar
and
fwait
lods
and
xchg
dec
(bad)
mov
or
mov
jmp
mov
inc
jb
jmp
popf
mov
je
imul
jnp
and
jmp
mov
mov
jle
jmp
je
add
je
and
xor
push
jmp
inc
add
jg
jmp
xor
je
pusha
cmps
jne
adc
fimul
mov
push
shl
and
jnp
je
sbb
je
scas
icebp
jne
fmul
aad
and
and
mov
dec
jne
push
(bad)
not
es
imul
and
je
fmul
mov
dec
je
jmp
je
bnd
jmp
pushf
xchg
sub
inc
jno
jmp
stc
outs
and
icebp
pop
fimul
scas
test
stc
icebp
pop
fimul
js
and
mov
dec
mov
stc
icebp
jmp
mov
jg
je
adc
je
push
jne
adc
dec
je
jmp
je
dec
jle
jmp
pushf
cld
sub
fbstp
jmp
mul
fdiv
(bad)
and
mov
push
je
and
xor
push
jmp
inc
div
jge
jmp
icebp
jmp
jnp
cmps
je
adc
and
or
pop
dec
or
dec
je
jmp
je
(bad)
jge
jmp
pushf
dec
sub
stos
jo
jmp
jne
cmps
je
adc
call
cmps
jne
adc
(bad)
mov
xor
stc
outs
(bad)
mov
loope
je
xor
jmp
mov
xor
add
jge
jmp
je
add
je
and
xor
push
jmp
inc
push
ss
or
jmp
cmp
or
fmul
jne
fmul
mov
stc
ss
cmps
or
imul
je
cmps
jne
adc
por
jmp
mov
push
push
push
jmp
je
and
fisttp
jmp
jmp
jmp
mov
pop
fimul
lods
test
stc
icebp
pop
fimul
jle
and
mov
dec
mov
stc
icebp
jmp
mov
jne
je
aam
je
push
jne
adc
dec
je
jmp
je
mov
fadd
jne
je
mov
pop
ja
jmp
mul
fdiv
(bad)
and
mov
push
je
and
xor
push
jmp
inc
ret
je
add
retf
jmp
mov
enter
cmps
mov
out
and
or
pop
dec
or
dec
je
jmp
je
push
jl
jmp
pushf
or
je
jmp
je
mov
mov
cmps
mov
cwde
call
cmps
jne
adc
(bad)
mov
xor
stc
outs
(bad)
mov
jecxz
je
xor
jmp
mov
mov
jae
jmp
je
add
je
and
jmp
inc
retf
je
dec
jae
jmp
icebp
adc
mov
pop
cmps
mov
out
and
or
pop
dec
or
dec
je
jmp
je
pop
jae
jmp
pushf
shl
add
jbe
jmp
jne
scas
jne
adc
arpl
dec
jmp
add
adc
mov
push
fdivr
adc
xchg
std
outs
retf
mov
pop
fmul
jne
fmul
mov
stc
ss
cmps
or
imul
xchg
std
outs
(bad)
mov
pop
fmul
push
jmp
sbb
and
arpl
xor
jmp
mov
and
mov
mov
jmp
je
fs
jns
mov
mov
pop
jne
lahf
(bad)
mov
and
loope
fimul
inc
jae
je
pop
xlat
mov
jmp
mov
dec
test
push
fisttp
je
scas
stc
adc
fdiv
(bad)
and
dec
je
jg
mov
ja
mov
push
fisttp
je
dec
je
outs
ror
jbe
rcl
adc
pushf
xchg
es
arpl
jne
arpl
mov
push
fisttp
je
fadd
dec
bound
and
push
je
daa
push
je
and
jmp
je
call
adc
mov
add
dec
jbe
jmp
mov
and
jns
xor
xor
pop
jne
lahf
(bad)
mov
and
loope
fimul
in
popa
je
pop
xlat
mov
jmp
mov
dec
cwde
lods
test
mov
push
fisttp
je
fadd
adc
pushf
xchg
and
es
test
jne
jmp
mov
daa
push
jo
dec
shl
dec
or
and
popa
je
jmp
je
add
mov
and
inc
loop
xor
je
stos
mov
pop
fmul
mov
fadd
js
push
jl
sbb
je
mov
das
mov
arpl
neg
popa
push
jl
pushf
xor
je
call
xchg
std
scas
(bad)
mov
data16
jmp
je
and
or
sub
sub
je
rcl
lock
and
jg
push
pushf
jmp
out
and
push
je
sbb
stos
mov
(bad)
jmp
mov
mov
cld
jo
and
push
ss
sub
je
push
jo
jmp
add
fadd
jg
je
mov
je
arpl
pop
mov
dec
inc
div
mov
mov
jo
jmp
add
fadd
jne
je
fsub
je
rcl
push
jmp
and
pusha
push
add
test
je
loope
inc
pushf
ja
je
lock
je
arpl
pop
mov
dec
inc
retf
je
aaa
hlt
dec
call
mov
cmps
aad
jmp
scas
rcl
pushf
jmp
popa
ds
loope
and
mov
(bad)
mov
push
hlt
aad
and
jb
ds
jmp
and
(bad)
mov
jmp
mov
push
jb
ds
stos
and
ret
je
and
ss
aam
dec
jmp
je
and
xor
rcl
lock
and
jb
ds
scas
sahf
xor
fs
retf
or
and
je
aam
std
scas
xlat
std
mov
jge
mov
jmp
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
std
(bad)
and
in
dec
enter
enter
mov
and
mov
stos
xor
arpl
xor
retf
lahf
mul
in
sub
lahf
rcr
jae
jecxz
jno
fist
dec
je
sub
je
and
push
jmp
sub
loopne
cmc
push
and
push
je
jmp
fs
jo
fcom
and
sub
push
fmul
xchg
stc
mov
sub
call
mov
mov
sub
je
jmp
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
and
je
mov
je
.byte
