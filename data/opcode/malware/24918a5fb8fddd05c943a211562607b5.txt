dec
adc
out
inc
out
add
jnp
add
add
es
add
sbb
add
cld
and
aaa
stos
das
stos
je
adc
daa
or
jmp
add
pop
rcl
fs
inc
cmp
jmp
daa
(bad)
(bad)
or
adc
sbb
retf
cli
xchg
rol
movs
xchg
inc
mov
and
in
xchg
jns
jg
mov
fdivr
sbb
or
jno
adc
shl
ret
sbb
sub
add
sahf
cmp
scas
cwde
retf
or
mov
xor
aam
sbb
call
sbb
sbb
adc
sbb
jns
jbe
inc
leave
dec
or
xor
add
adc
jne
jecxz
xor
or
int
loop
aam
out
push
cld
iret
sbb
dec
mul
mov
add
lods
in
dec
in
xchg
nop
inc
mov
cli
adc
push
cmp
dec
dec
dec
xchg
cmp
shl
or
retf
push
ret
pop
dec
sbb
sbb
dec
adc
hlt
push
or
rcl
mov
lea
cmps
pop
pop
bound
inc
or
mov
mov
xchg
cmc
and
mov
jno
adc
sbb
lods
test
xor
gs
aaa
clc
xchg
add
loope
cmp
cmp
push
cdq
inc
pop
or
mov
add
xor
call
leave
push
clc
ja
xchg
jbe
fnstsw
jno
sub
cmp
jmp
js
sub
mov
push
cdq
ss
mov
jge
or
xor
push
xor
pop
jecxz
pop
adc
adc
sbb
adc
rcr
push
out
push
mov
jbe
test
add
cli
popa
inc
bound
mov
jmp
jbe
push
daa
cmp
fsubrp
pushf
dec
dec
adc
inc
xor
and
sbb
cmp
cmp
nop
cmp
mov
jae
ins
mov
jo
jo
dec
arpl
pop
sub
mov
test
dec
je
fnstsw
fld
inc
sub
sbb
jmp
rcr
xchg
and
lods
rcl
inc
mov
mov
pop
sub
mov
loopne
(bad)
pop
retf
dec
cmc
hlt
and
or
sbb
adc
cmc
pop
mov
rcl
inc
arpl
leave
adc
sub
sub
icebp
xchg
loopne
pop
and
mov
sbb
outs
xchg
retf
pop
xchg
std
xchg
jg
xchg
sti
and
in
rcl
xchg
jbe
test
rol
xlat
imul
popa
xlat
sahf
and
or
sbb
ret
sub
cmp
xchg
mov
fld
call
mov
mov
fist
lock
retf
lds
test
rcr
push
xchg
mov
adc
pop
popa
sahf
ds
aaa
addr16
cmp
mov
xor
cmp
jbe
test
pushf
jp
push
mov
aaa
pop
call
mov
stc
adc
pop
sub
pop
outs
jo
inc
lds
xchg
pop
sbb
add
movs
xor
xor
div
sub
push
push
out
call
repnz
xchg
inc
shr
inc
aas
mov
pop
mov
pop
not
pop
fdivr
sahf
stos
daa
xchg
jl
fnstenv
or
and
sbb
imul
outs
inc
xor
retf
add
or
adc
inc
mov
std
pop
(bad)
(bad)
mul
pop
pop
jp
arpl
mov
popf
stos
pop
or
jbe
imul
enter
push
xchg
jns
add
jns
repnz
ins
gs
push
ret
mov
jb
pop
add
inc
jg
shl
pop
dec
xor
(bad)
ds
out
jp
jns
bound
scas
out
lds
xchg
(bad)
xor
mov
retf
fwait
jp
ret
add
and
sub
mov
inc
call
imul
mov
data16
cmp
cmp
jge
cmp
iret
rcr
lds
lock
bound
pop
and
jne
or
jmp
push
mov
mov
shl
push
sub
dec
dec
fistp
xchg
adc
xchg
xchg
sar
xchg
cmps
test
popa
sub
adc
jns
cld
jle
pop
cmps
lods
loope
adc
(bad)
outs
cmc
xchg
out
outs
pop
test
out
icebp
call
cmc
(bad)
mov
out
add
sbb
xor
movs
fsub
pushf
call
sub
bnd
pop
mov
outs
addr16
inc
xchg
sub
dec
or
mov
dec
fdivr
ret
push
sbb
or
shr
xor
mov
pop
add
or
add
jne
pop
cmc
xchg
pop
je
out
pop
js
cli
cmps
int
adc
push
xchg
jb
iret
pop
ins
fwait
stos
inc
shl
dec
mov
or
scas
dec
pop
out
adc
xchg
in
cld
xlat
inc
xor
sbb
push
jp
out
lea
jns
add
mov
xchg
fcmove
xchg
test
or
fst
and
int3
add
dec
sub
neg
jge
and
or
jae
and
daa
jecxz
cmps
jbe
gs
div
rol
mov
adc
into
xor
dec
neg
mov
les
sbb
lds
ss
neg
pop
leave
jmp
jle
cmp
jns
mov
imul
mov
(bad)
(bad)
sbb
imul
cmp
jns
and
cmps
sahf
jl
dec
push
mov
pop
in
clc
pop
out
mov
mov
push
sahf
outs
imul
lods
shr
dec
stos
int
add
or
cmp
loop
imul
sbb
aam
xchg
stc
xchg
mov
push
std
dec
inc
mov
in
or
stos
jg
lods
mov
aaa
hlt
test
iret
add
popa
mov
test
sub
ins
out
or
add
fld
xchg
fisttp
repz
test
stos
pop
mov
mov
pop
sub
(bad)
sub
setle
retf
cdq
fdiv
cmp
mov
pusha
xor
dec
arpl
aad
add
popa
fstp
pusha
sti
jns
sub
loope
xor
test
xchg
and
jno
retf
cdq
pop
mov
retf
bound
js
mov
pop
mov
sahf
das
push
adc
ja
pop
dec
sub
mov
movs
loopne
jnp
test
jmp
fnsave
dec
data16
and
push
mov
into
cwde
ins
jl
punpckldq
sbb
imul
pop
div
cmp
and
sub
cmovae
int3
xchg
cmp
fdivr
adc
xor
test
xchg
test
jbe
movs
jo
test
jae
sbb
pop
hlt
repz
ror
push
pop
daa
call
lahf
xchg
add
sbb
out
mov
xchg
mov
jl
repnz
je
jle
repz
jl
push
xchg
jae
into
enter
stc
adc
pop
clc
cld
cmp
lea
fst
dec
and
nop
popa
dec
icebp
jg
scas
ret
ins
adc
mov
cmps
loopne
dec
scas
pop
dec
loope
mov
mov
xchg
in
jbe
xchg
mov
dec
sti
data16
std
xchg
jno
in
daa
out
xor
and
add
jmp
add
leave
push
in
dec
inc
push
dec
pop
inc
sub
adc
pop
data16
shl
out
in
icebp
movs
not
inc
push
movs
mov
stos
pop
lods
imul
or
cld
outs
(bad)
fs
and
xchg
cmp
adc
loop
loopne
push
pop
sbb
push
pop
rcr
div
mov
jmp
movs
inc
pop
mov
or
xchg
xchg
and
push
sbb
mov
push
adc
add
repz
mov
xchg
rcl
retf
outs
mov
push
or
scas
(bad)
jmp
stos
inc
dec
ins
sub
add
shl
add
pop
sbb
xor
cli
add
jmp
xchg
xor
sub
xchg
dec
and
(bad)
out
fldcw
lock
push
jle
add
push
and
in
fwait
int3
mov
mov
je
lea
ret
retfw
mov
test
rcr
cld
jbe
jg
jmp
repz
mov
mov
arpl
cs
int3
mov
clc
sub
nop
add
jnp
mov
xchg
dec
es
fistp
add
lods
stos
out
gs
push
jp
push
or
push
jo
lahf
in
aam
lock
add
je
push
hlt
pop
xchg
jae
xlat
addr16
lahf
xlat
outs
out
or
inc
ret
xchg
push
mov
iret
jg
std
sahf
icebp
pop
xor
outs
push
cmp
and
jae
adc
int3
fisttp
ja
mov
jb
gs
or
stc
mov
push
mov
mov
or
sbb
push
push
movs
mov
mov
push
fdiv
outs
jp
daa
les
(bad)
xor
or
out
pop
inc
sbb
in
and
iret
cpuid
inc
test
sub
cmp
aas
inc
mov
and
(bad)
push
loop
clc
dec
jmp
popa
push
pop
xor
(bad)
frstor
or
fdiv
retf
adc
fnsave
dec
push
push
pop
cwde
mov
inc
and
push
or
inc
mov
in
pop
xchg
cld
jmp
fmul
pop
arpl
aam
scas
and
add
and
lods
mov
add
or
mov
inc
imul
out
push
and
outs
rcr
outs
cmp
push
lock
and
jl
push
mov
int
dec
inc
jno
or
mov
cmps
fnstenv
ror
(bad)
push
retf
(bad)
adc
push
ins
sub
dec
clc
in
in
aam
mov
inc
sbb
xchg
xchg
mov
cmps
dec
xor
rcr
pop
call
adc
push
xchg
aam
adc
mov
pop
adc
xor
or
dec
ret
call
cmps
iret
bound
jg
xchg
add
sbb
mov
(bad)
hlt
push
or
cmp
dec
jmp
push
je
sub
imul
fldenv
aas
cmps
push
add
enter
loop
imul
push
mov
aas
adc
pop
jle
out
mov
ja
movs
cdq
xchg
or
and
mov
xor
int
add
cmp
mov
cmp
jmp
repnz
ins
add
test
into
pop
retf
scas
push
cli
add
ds
test
test
jbe
inc
mov
jbe
push
adc
sub
mov
mov
stos
cmp
xor
sbb
lods
je
xor
out
or
push
pop
jl
xbegin
and
(bad)
and
or
and
mov
xor
retf
inc
mov
cli
and
jnp
daa
jl
ret
fild
aad
mov
mov
or
ja
add
xchg
push
sahf
mov
pusha
fld
and
enter
xor
mov
cwde
cmp
jne
cmp
and
call
xor
jg
hlt
mov
pop
mov
inc
and
cmp
ror
sub
int
jp
dec
popf
xor
enter
fwait
cmp
popa
fbstp
ret
cmp
lods
aam
mov
nop
ins
inc
stos
mov
jmp
(bad)
shr
mov
mov
mov
jge
jb
add
and
inc
lds
mov
mov
aam
pop
jno
outs
in
(bad)
in
rcr
lods
jmp
sub
sbb
sub
cmp
dec
mov
(bad)
jb
pop
jle
shl
xchg
mov
mov
hlt
push
sbb
push
pop
mov
jle
dec
(bad)
mov
int3
push
dec
mov
(bad)
push
sbb
mov
jp
and
cmp
outs
and
je
mov
icebp
aaa
adc
sub
fstp
stos
mov
outs
popa
inc
sub
fadd
inc
adc
ret
mov
ret
xchg
call
jns
sbb
pop
cmp
mov
dec
or
mov
lock
stos
leave
adc
push
xor
pop
out
pop
ret
rcr
mov
stos
scas
dec
data16
adc
sbb
dec
lahf
cmp
push
pop
mov
fisttp
xchg
scas
das
fld
cli
or
mov
push
xlat
ss
adc
inc
sbb
aas
xor
and
push
dec
in
or
mov
push
mov
adc
call
test
jbe
vcvtsd2ss
fisttp
imul
fs
dec
sub
or
jge
mov
dec
es
cmp
push
arpl
ja
pop
cmps
inc
fisubr
or
sub
stc
in
jg
test
or
rol
mov
pusha
xor
mov
or
push
cmp
bound
fs
push
mov
mov
mov
fisub
xchg
xor
loop
cmps
dec
push
cmp
aaa
dec
lds
fadd
fs
cmp
leave
xchg
retf
mov
bound
shl
loope
jmp
(bad)
adc
jne
inc
add
out
enter
hlt
jbe
xchg
jecxz
pop
or
test
mov
fcomp
dec
mov
adc
or
mov
or
aaa
pop
outs
jb
cmps
pop
out
cmps
and
xchg
(bad)
xchg
or
aam
xor
and
das
jp
xor
or
ror
neg
mov
cmp
jg
retf
stos
jp
test
xchg
jle
and
mov
sbb
mov
in
in
xchg
pop
pop
adc
push
or
and
push
retf
lahf
sbb
ins
bound
cmp
mov
mov
sub
sbb
mov
mov
inc
enter
cmp
data16
mov
sar
push
rcl
mov
mov
test
mov
leave
(bad)
sbb
sbb
arpl
jmp
aad
adc
ds
aaa
enter
jae
xchg
push
dec
sar
sbb
(bad)
imul
mov
sbb
(bad)
jns
adc
adc
inc
jbe
ret
in
push
adc
cmp
pop
es
cli
jmp
push
cmp
mov
mov
mov
jb
mov
cmp
adc
mov
cmps
inc
pop
xchg
and
xchg
enter
shr
loope
hlt
stos
jbe
xchg
std
fs
inc
mov
xlat
pop
cs
xchg
bound
or
adc
adc
lods
xchg
sbb
mov
mov
xor
mov
lods
aas
je
cmp
xchg
mov
(bad)
shr
lahf
sub
push
ret
xchg
nop
aaa
xchg
iret
sahf
push
xor
pop
push
out
and
inc
jne
lds
pop
leave
out
cmp
dec
cld
jb
add
or
call
xchg
(bad)
out
jp
mov
pop
ret
or
imul
in
es
inc
movs
push
das
jg
arpl
pop
jns
mov
push
adc
popa
sbb
pop
cwde
ror
xchg
push
pop
push
jae
fiadd
mov
sbb
loopne
or
stos
icebp
rol
call
cmp
test
or
pop
fist
sti
mov
mov
ret
mov
(bad)
xchg
jp
fstp
sbb
imul
pop
pop
lea
repz
cmp
push
cmp
mov
mov
push
mov
xchg
pop
movs
cmp
cmp
iret
call
retf
retf
add
aaa
mov
dec
out
and
aam
in
mov
imul
(bad)
jle
sahf
jno
sub
dec
in
push
jo
push
fsubr
inc
fldenv
ffreep
dec
or
dec
pop
jmp
mov
sbb
cdq
push
lea
fist
xchg
inc
push
std
test
retf
ror
sub
popf
je
pop
aaa
shr
lea
loopne
(bad)
aad
call
pop
dec
out
rcl
mov
mov
or
or
cmps
jb
add
mov
inc
shl
xchg
ins
push
or
clc
sbb
dec
pop
dec
lea
cmp
push
push
(bad)
and
sbb
loope
cmps
xchg
mov
mov
mov
je
ret
or
add
mov
stos
lds
mov
es
pcmpeqb
mov
cmp
pop
pop
fldenv
lds
cmp
push
pop
jne
sbb
mov
dec
sti
popa
mov
(bad)
js
repnz
jae
jmp
aad
inc
mov
pop
mov
jmp
sub
outs
sbb
sbb
jo
pop
fisttp
cdq
mov
movs
bound
out
push
push
lds
aam
(bad)
lahf
fucomi
popf
movs
dec
pop
into
jl
das
xchg
sbb
xor
test
mov
into
jno
aad
sbb
xchg
sbb
repnz
mov
sub
pop
retf
neg
xchg
and
mov
pop
push
sub
shl
xchg
repnz
jp
clc
fcomp
sbb
pop
xchg
fild
jno
aam
jle
fs
jmp
push
and
lock
cmp
lods
pop
in
aad
jmp
nop
aas
adc
inc
mov
push
rcl
aam
adc
add
in
xor
stos
xor
fcomp
dec
pushfw
pop
into
out
mov
sub
dec
adc
mov
lods
mov
iret
push
inc
pushf
sub
fs
push
loopne
js
sub
mov
bound
push
arpl
das
ret
loopne
das
add
cmc
fist
or
repnz
data16
sahf
fs
mov
push
fadd
adc
mov
sub
jmp
mov
stc
pop
pop
loope
or
push
or
jp
sar
fadd
outs
xor
mov
or
in
jno
sub
inc
clc
dec
xor
sar
aad
adc
push
int3
xor
mov
jmp
add
xchg
mov
fldenv
push
push
xlat
popa
mov
cs
pop
mov
xchg
js
stos
push
or
ret
cmp
jno
scas
fstp
pop
arpl
(bad)
xlat
mov
push
cli
fmul
ja
repz
stc
scas
adc
jbe
les
jae
fcomip
and
sbb
dec
inc
sbb
pop
fwait
stos
add
mov
mov
xchg
sub
or
shl
push
push
(bad)
mov
jb
sub
xor
push
pop
cld
sub
cmp
sti
adc
adc
cwde
jmp
std
nop
das
pop
pop
or
out
test
lahf
movs
mov
sbb
cmp
xor
mov
scas
mov
pop
out
inc
outs
cmovs
icebp
add
ds
pushf
retf
push
enter
repnz
mov
xor
sub
cld
arpl
and
jbe
ins
leave
call
lock
push
jns
xchg
les
neg
xor
cs
xor
into
loopne
sub
loopne
stos
pop
xchg
addr16
mov
adc
sbb
xchg
ret
loopne
clc
sbb
lahf
mov
cld
ins
adc
or
cwde
push
test
scas
sbb
pushf
(bad)
sbb
jne
ror
mov
push
push
pop
xor
les
sar
push
cmp
repz
mov
aam
data16
ja
xchg
mov
bound
imul
push
mov
repnz
and
lods
push
popa
pop
add
jge
dec
push
hlt
push
int3
jge
jmp
sub
lods
xor
int3
test
and
adc
(bad)
dec
in
inc
or
jbe
cmp
int
sahf
mul
enter
dec
cmps
loopne
stc
adc
pop
fcom
or
cmps
movs
mov
imul
push
jge
and
xor
scas
pop
xor
int3
add
pop
not
cmp
jo
ret
call
ds
dec
(bad)
jecxz
and
mov
inc
in
adc
daa
es
popf
dec
aam
in
call
adc
test
mov
stos
int
popf
mov
arpl
cmc
adc
pusha
imul
ficom
jmp
pop
mov
dec
sub
push
mov
retf
test
pushf
lds
dec
cmc
xchg
sub
stos
(bad)
mov
mul
rol
jmp
mov
and
dec
nop
test
inc
sti
call
sti
push
xor
sub
(bad)
mov
hlt
add
mov
inc
jmp
mov
(bad)
xor
daa
mov
scas
pop
nop
push
jp
arpl
call
mov
pop
and
pusha
imul
es
sub
and
push
mov
sahf
out
mov
cmps
loopne
aam
std
jg
out
in
cmps
push
adc
sub
loopne
fidivr
push
test
hlt
push
js
fs
push
pop
jp
retf
sbb
test
cmp
rcl
pop
xor
repz
call
lods
icebp
nop
push
mov
cmp
mov
sbb
ss
mov
sub
mov
pop
cdq
cld
ds
sbb
lods
arpl
scas
jmp
pop
sti
jbe
cwde
push
sbb
xchg
cmp
xchg
jb
mov
dec
in
or
ins
retf
in
retf
out
cmp
or
cmp
or
cmp
loope
and
out
adc
data16
sub
retf
pop
xor
movs
retf
loope
cld
shr
std
dec
xchg
cdq
push
sub
add
inc
clc
dec
jae
cmp
cmp
jae
movs
cli
pop
push
cmps
aas
add
pushf
fcomp
xchg
(bad)
fisubr
mov
mov
cwde
test
mov
pop
jnp
loope
js
adc
add
dec
and
push
jl
aam
jle
sbb
ret
push
push
adc
adc
outs
addr16
call
pop
(bad)
scas
jecxz
repz
jnp
cmc
(bad)
dec
push
scas
push
mov
dec
adc
fistp
or
sbb
cld
mov
xor
jns
call
add
jp
jl
xchg
shl
sub
jg
mov
shl
ud0
cmp
mov
and
jmp
inc
addr16
mov
push
aam
mov
popa
inc
fistp
fucom
push
dec
and
pop
shl
mov
shl
cmc
xor
scas
xor
inc
or
js
ss
sbb
xor
push
mov
pushf
xlat
lods
lea
cwde
add
cmp
shl
pop
cmp
mov
sbb
cmps
sub
ins
adc
and
mov
sti
push
cmp
mov
mov
push
ja
ins
fadd
sub
fild
inc
mov
les
je
jge
adc
ficomp
lds
dec
jbe
icebp
push
and
movs
xchg
pop
imul
imul
xor
aas
jns
lds
and
dec
aaa
cmc
test
mov
repnz
pop
shl
fwait
sbb
outs
cmp
jno
cdq
jne
in
xchg
lock
popf
push
sbb
jnp
lds
imul
movs
imul
mov
pop
(bad)
(bad)
(bad)
ret
xor
arpl
fist
dec
fstp
sub
or
fwait
daa
test
fs
xchg
adc
xchg
inc
sub
test
xchg
(bad)
in
mov
fstp
loope
pusha
dec
cmp
sub
lods
mov
call
in
movs
cmp
movs
jecxz
cmp
mov
cld
bound
in
pop
mov
ds
sbb
lahf
adc
xchg
adc
(bad)
lea
ds
test
push
(bad)
push
fadd
mov
sbb
ret
xlat
sbb
jbe
test
ret
lahf
in
imul
in
xor
jo
or
jbe
add
gs
clc
fild
sub
pop
(bad)
test
cmp
and
fcomip
mov
cmp
xor
fidivr
in
es
push
lock
adc
cli
sbb
mov
int3
sub
pop
push
inc
mov
jo
mov
sti
add
pop
cmp
sbb
mov
adc
sub
fisub
mov
out
dec
dec
cmps
mov
and
(bad)
pushf
popf
repnz
or
or
arpl
cmps
inc
adc
mov
jmp
movs
and
out
add
retf
in
cmps
imul
nop
jmp
leave
std
je
in
sbb
std
jo
in
jge
in
dec
xchg
cmps
adc
inc
and
mov
shl
add
or
xchg
push
inc
(bad)
xchg
fwait
xchg
test
scas
add
(bad)
mov
sbb
cdq
sbb
mov
mov
jl
pop
leave
pop
fld
cmp
mov
pop
jbe
jae
mov
sbb
ss
jp
ficomp
xor
xor
ins
pop
inc
cs
pop
(bad)
out
imul
push
inc
sbb
dec
sub
jmp
into
mov
sahf
and
mov
and
or
inc
jo
sub
pop
cs
mov
xlat
sub
retf
and
xchg
idiv
jbe
das
mov
rcr
mov
jmp
je
add
xchg
mov
pop
or
and
mul
mov
cmp
mov
xchg
rcr
iret
adc
pop
mov
ror
jns
retf
pop
push
push
into
xchg
or
add
fld
cmp
test
repnz
cld
sbb
push
and
xor
sbb
hlt
pop
repnz
fnstsw
inc
data16
sti
scas
sub
cs
mov
jbe
rcl
(bad)
popa
cmp
fs
fadd
dec
sti
or
sahf
cld
adc
int
daa
data16
mov
out
icebp
lea
cdq
sub
ins
mov
dec
push
imul
and
push
push
pop
imul
stos
inc
rcr
fistp
out
inc
repnz
pop
inc
outs
xchg
xor
or
sbb
fistp
xchg
loopne
add
mov
clc
lods
inc
pop
xchg
or
pop
xor
mov
in
pop
aas
mov
xor
sbb
cmc
jae
push
retf
mov
jp
fadd
repnz
add
test
xor
lea
push
rol
cmp
push
addr16
ret
into
xchg
int
mov
sub
sar
jmp
aam
add
sahf
and
fisttp
ins
call
cmp
sbb
add
fs
inc
aaa
push
and
pop
pushf
jecxz
aaa
adc
pop
mov
icebp
daa
leave
cmp
dec
or
lds
sbb
mov
adc
pop
sar
sar
mov
sbb
push
sahf
mov
clc
or
leave
lds
popf
ror
(bad)
mov
push
dec
in
adc
sub
retf
sbb
mov
push
(bad)
(bad)
bnd
repz
ret
int
fimul
xor
ror
ins
dec
pop
idiv
mov
mov
xchg
adc
and
outs
popf
out
lea
inc
cmp
aad
add
jns
xchg
push
push
lods
cwde
or
cmp
div
sbb
or
rol
jb
mov
add
bound
pop
xor
frstor
add
outs
enter
push
dec
pusha
lds
test
std
mov
adc
fs
in
cmp
lds
xchg
or
sbb
das
jne
push
lea
lock
je
cmp
mov
addr16
imul
sub
rol
push
inc
or
mov
jg
mov
hlt
into
ror
adc
inc
cmp
fmul
clc
js
cmp
mov
xchg
push
div
sub
outs
cwde
cld
imul
mov
(bad)
push
addr16
aaa
dec
xor
mov
cwde
fidiv
outs
cmps
xchg
test
shr
jp
ins
psrld
arpl
in
(bad)
inc
dec
push
nop
mov
dec
imul
pushf
ins
adc
push
in
out
fwait
or
xor
or
xchg
inc
sbb
or
mov
inc
and
mov
shr
imul
cmp
test
mov
sub
mov
repnz
adc
call
sub
popf
xchg
inc
inc
shl
aas
ret
cld
xchg
and
jno
das
pop
popf
pop
in
or
xchg
mov
pop
pop
jnp
jge
cmp
aad
jg
ss
test
mov
sbb
jg
mov
push
gs
out
call
das
xchg
dec
bound
repz
out
pop
cs
call
pop
cwde
rcr
mov
in
out
pop
jbe
mov
aas
add
push
cdq
pop
dec
pop
or
fdiv
xchg
xrelease
sbb
ins
push
sar
imul
push
sti
rcl
sti
ret
pop
xchg
add
ins
test
or
shl
lods
aad
cld
data16
cmc
stos
(bad)
sbb
(bad)
loopne
mov
popa
sbb
add
js
lods
mov
sub
cmp
(bad)
dec
ins
cmp
or
retf
inc
outs
repnz
pop
pop
int
ja
std
mov
test
aam
inc
dec
xchg
inc
in
test
jb
ror
or
sbb
out
fs
ds
and
push
ret
popa
push
sahf
push
push
sub
fidiv
lock
mov
sub
cmp
test
inc
push
fstp
(bad)
(bad)
popf
cmps
and
pop
cmps
js
mov
imul
jo
gs
add
sahf
or
mov
push
and
(bad)
lea
adc
adc
aad
xor
popf
(bad)
call
lock
xchg
shl
dec
int3
sub
mov
add
(bad)
mov
retf
(bad)
cmps
xchg
jecxz
dec
inc
std
and
in
xlat
push
pop
sub
mov
and
test
mov
inc
jmp
sub
or
xchg
lds
xchg
(bad)
mov
mov
mov
icebp
lahf
lods
sbb
scas
arpl
dec
enter
inc
xchg
and
dec
mov
mov
xor
cld
adc
push
xchg
in
inc
and
cmp
aam
xchg
in
sbb
mov
dec
rcr
pop
cmp
mov
and
mov
add
push
data16
loopne
xchg
fdivr
pop
mov
mov
sub
mov
addr16
push
adc
leave
frstor
mov
hlt
hlt
push
push
out
cld
into
cmp
inc
cmps
repnz
scas
std
cmc
add
(bad)
iret
stos
shr
int3
push
mov
jnp
xlat
scas
jge
or
bound
mov
mov
xor
xor
add
xor
cdq
xor
dec
loope
adc
xchg
test
(bad)
cmp
int
jmp
add
pop
and
dec
cmp
fnsave
pop
mov
inc
outs
retf
fild
addr16
push
lahf
loopne
dec
cmc
sbb
cs
push
cmp
mov
lods
lahf
int3
(bad)
mov
lods
mov
inc
and
adc
fild
(bad)
clc
movs
pop
clc
mov
jae
lahf
jno
mov
cwde
jl
mov
test
iret
stc
imul
in
xchg
cmp
mov
iret
les
stos
pop
jno
inc
inc
and
int3
fisttp
pop
push
les
jbe
int
mov
jne
mov
and
jle
std
xor
sahf
sbb
ret
inc
sbb
mov
inc
gs
movs
out
inc
pop
xchg
movs
mov
leave
inc
call
mov
ds
fbstp
call
xor
clc
adc
xchg
or
fwait
imul
adc
mov
jmp
int3
or
xchg
sahf
mov
mov
lods
sub
push
push
addr16
mov
ret
add
imul
push
lods
sbb
pop
adc
push
fnstsw
div
inc
test
cmps
aad
sub
std
mov
sub
xchg
scas
ds
adc
xchg
xchg
pop
jmp
fidiv
jnp
imul
(bad)
std
mov
jecxz
inc
repz
in
and
jl
sbb
das
adc
mov
and
movs
and
add
mov
jecxz
bound
mov
inc
into
mov
mov
and
outs
jnp
adc
mov
shr
lods
cs
mov
cld
jecxz
mov
in
add
sahf
add
mov
sahf
ret
test
xchg
std
ins
mov
cmps
mov
outs
into
pop
jge
inc
popf
aaa
push
mov
retf
cmc
dec
push
ret
cmp
int3
mov
mov
(bad)
rcr
push
ret
push
hlt
adc
and
lods
push
enter
scas
cs
add
mov
(bad)
mov
mov
es
jae
pop
(bad)
mov
inc
test
iret
jo
jns
cmp
pop
or
rcr
out
ins
mov
dec
int
cmp
dec
sbb
arpl
test
mov
lods
mov
in
mov
setno
pop
lock
popa
and
or
call
jo
or
xor
pop
adc
cmp
je
pop
lea
ja
push
(bad)
mov
xchg
fs
out
jae
out
pop
dec
jl
pop
fs
fdivr
mov
icebp
imul
scas
add
into
inc
add
xor
test
xchg
stc
or
cmp
daa
pop
mov
mov
mov
jne
test
cmps
push
ret
cmps
xchg
scas
add
clc
ins
pusha
dec
push
add
dec
sbb
or
jecxz
pop
lea
push
pop
sbb
adc
or
pop
bound
test
cdq
push
int
pusha
es
out
dec
sahf
sub
xchg
retf
add
rol
jbe
cmc
int
aaa
(bad)
outs
push
push
or
or
test
and
mov
jle
iret
dec
and
mov
or
loope
add
pop
add
movs
cmc
ja
out
fcmovb
bound
mov
ins
fwait
jmp
sahf
inc
or
or
or
or
xor
stos
test
jmp
je
push
sub
mov
daa
dec
shl
xchg
push
mov
mov
pop
cdq
sub
in
clc
inc
(bad)
call
jae
cmps
xor
imul
out
repnz
sbb
and
scas
xor
fisttp
pop
push
hlt
in
call
push
fld
mov
or
sbb
cmp
mov
cdq
cmp
fld
outs
(bad)
mov
jbe
fstp
mov
add
test
fs
int
mov
(bad)
xor
push
mov
sub
jmp
cwde
std
xor
mov
xor
test
popf
repnz
ret
mov
les
stos
adc
call
mov
pop
mov
ret
or
dec
lahf
sbb
std
jp
xchg
cmc
in
mov
sbb
xor
mov
ds
popa
pop
fidiv
je
das
and
jo
mov
push
scas
mov
add
repnz
sub
mov
mov
inc
mov
cmps
cld
ret
enter
push
push
mov
ficomp
aam
jno
ins
pop
popa
std
bound
mov
mov
div
jns
mov
sbb
pusha
mov
jne
add
pop
pop
cmp
mov
jne
ss
xor
xor
les
cmps
cmp
inc
jecxz
aam
mov
(bad)
mov
mov
xchg
cmp
pop
fsub
and
(bad)
sub
outs
push
and
push
stos
in
add
test
imul
sahf
cmps
adc
sbb
push
(bad)
and
push
(bad)
scas
out
aaa
(bad)
stc
ret
cmps
jmp
mov
je
xor
fldpi
xlat
mov
cli
mov
sub
push
jns
xor
loope
sub
mov
inc
nop
stos
sbb
aas
es
mov
daa
outs
rcr
fucom
sub
mov
sbb
inc
jmp
loope
outs
int3
popf
jno
rcr
sub
je
das
adc
sub
(bad)
outs
fwait
mov
sub
cmp
mov
out
cmp
jge
into
sub
mov
lea
cwde
fmul
push
movs
cmp
imul
movs
jae
dec
jmp
mov
xor
add
push
mov
cmp
test
ret
mov
ret
mov
add
sbb
imul
out
mov
add
inc
jle
iret
fcom
les
das
mov
add
(bad)
add
xor
call
xchg
out
pop
retf
adc
push
push
jns
out
mov
sub
addr16
inc
in
rcr
aaa
sbb
mov
xchg
out
popf
inc
sbb
sbb
xor
out
sbb
xchg
mov
(bad)
jp
mov
sub
dec
arpl
sbb
in
ja
lds
inc
and
add
pop
test
enter
mov
adc
lods
jbe
jb
rol
push
xor
ins
repnz
lock
stc
lods
adc
add
mov
js
mov
jns
xchg
aam
movs
sbb
test
stc
mov
dec
dec
fs
dec
mov
xor
test
fs
cld
or
aaa
push
pop
(bad)
jecxz
out
mov
dec
jp
xchg
push
mov
loope
pop
sub
xor
mov
in
mov
adc
retf
sub
aaa
adc
out
adc
(bad)
jb
mov
aas
(bad)
repnz
dec
movs
jne
mov
ror
bound
mov
push
mov
pop
xor
ret
sahf
call
imul
je
rcr
test
mov
sbb
nop
call
cli
lahf
mov
mov
push
or
hlt
add
xchg
int3
dec
shl
shl
xchg
adc
mov
sbb
inc
mov
mov
xor
mov
push
mov
mov
add
lock
dec
(bad)
std
jl
ja
cmp
pop
cmp
mov
xchg
lods
inc
(bad)
jg
(bad)
pop
jmp
add
test
sub
and
sbb
mov
pop
mov
fild
sbb
test
ja
stos
mov
mov
iret
xchg
or
mov
pushf
push
sbb
ins
ds
jns
xchg
or
inc
lahf
shl
pop
mov
jns
jno
mov
gs
or
fiadd
lods
mov
xor
xchg
mov
xchg
ss
cli
mov
fstp
pop
shr
add
les
mov
mov
fist
fisttp
cmc
jg
sub
cld
ins
jl
mov
(bad)
push
fiadd
jmp
out
mov
xor
jl
or
loope
lods
(bad)
sahf
es
fcomp
cmps
cmp
das
xchg
mov
mov
jecxz
pop
pop
clc
xchg
idiv
cmc
inc
inc
push
ds
mov
jmp
sbb
jg
aam
js
mov
in
rcl
mov
add
inc
cmc
add
cmp
or
pop
jnp
add
mov
mov
push
pop
pop
js
aaa
das
ins
popf
shr
dec
dec
push
loop
push
xchg
popf
push
xor
test
fnstsw
lock
pop
sti
inc
lods
les
add
mov
test
xor
push
fistp
or
push
sbb
setne
jbe
rcr
ds
imul
push
fcom
scas
cwde
xchg
pusha
add
fisttp
mov
clc
outs
or
push
(bad)
int3
mov
lea
push
adc
sbb
pop
and
dec
cdq
mov
fisttp
in
ret
rcr
mov
adc
push
call
sub
test
jl
pop
lock
xor
outs
(bad)
retf
mov
cwde
jp
dec
mov
pop
repnz
sbb
jnp
fimul
add
jecxz
mov
lds
aaa
add
cmp
xchg
bound
jb
outs
mov
inc
xlat
mov
sar
mov
push
push
je
and
aad
and
xchg
test
xchg
cmc
push
and
mov
in
scas
xchg
scas
div
jo
leave
add
(bad)
cli
fstp
sub
inc
(bad)
popf
xchg
pusha
or
hlt
or
les
aas
loope
adc
jbe
scas
pop
adc
cdq
dec
out
popa
sbb
add
add
dec
push
(bad)
push
(bad)
mov
sub
jns
push
or
pop
add
push
call
jmp
adc
push
mov
loop
push
jne
call
mov
cwde
add
dec
retf
dec
not
inc
sub
jmp
enter
add
stos
and
loope
pop
cmp
mov
push
cmp
bound
xor
scas
cdq
stos
sub
in
std
inc
(bad)
frstor
movs
ins
rol
(bad)
mov
push
mov
or
rcl
xchg
outs
sbb
push
jo
mov
xor
aaa
int3
add
pop
jbe
ret
repnz
cmp
xor
mov
stos
nop
cmp
add
aad
xor
sub
int
push
das
cmp
xchg
push
adc
out
mul
push
dec
or
xchg
or
xchg
ficomp
sbb
scas
shl
pusha
outs
lea
jmp
or
pop
pop
das
add
int
xchg
jmp
popf
aam
push
push
outs
sub
(bad)
pop
cmp
lea
jae
add
adc
(bad)
mov
test
dec
ds
add
inc
daa
loop
lods
(bad)
out
out
cli
movs
mov
add
push
stc
pop
aaa
inc
lahf
push
test
retf
inc
cld
stos
lods
xor
sub
(bad)
xlat
jp
inc
xor
mov
movs
push
test
pop
dec
mov
mov
loopne
not
mov
mov
(bad)
jnp
cmps
jge
aaa
push
inc
repz
test
mov
and
pop
or
fwait
test
jl
xchg
inc
and
pop
jb
fs
or
inc
xlat
push
pop
cli
jns
pushf
lods
ins
(bad)
int3
cmp
imul
add
add
sbb
out
addr16
sub
dec
enter
mov
sbb
xor
stos
inc
pop
in
mov
mov
repnz
fstp
call
iret
cwde
fisttp
mov
xchg
(bad)
lds
xor
cvttps2pi
ret
gs
popa
loope
sub
cmp
inc
mov
hlt
xor
push
and
test
add
push
jmp
inc
jmp
cs
mov
lods
jmp
and
adc
and
loop
sub
push
scas
(bad)
lahf
imul
lahf
adc
push
rcr
retf
js
call
adc
cld
ror
mov
sti
mov
or
and
mov
addr16
lods
cmp
aad
or
push
push
xchg
mov
dec
hlt
adc
cmp
jge
pop
sub
aas
call
inc
sub
add
sbb
imul
adc
add
lds
nop
pop
std
test
cwde
movs
pop
pop
adc
loopne
int3
mov
xchg
(bad)
mov
out
mov
jnp
pop
in
inc
sub
adc
mov
cmp
add
push
pop
in
xor
retf
inc
push
daa
aaa
jl
dec
jp
(bad)
push
xchg
repz
mov
(bad)
shl
sbb
inc
push
nop
retf
iret
fwait
mov
outs
mov
enter
(bad)
ds
inc
or
sub
mov
js
dec
sub
add
adc
bound
xor
pop
and
ins
mov
icebp
fcomp
cli
icebp
(bad)
mov
mov
sar
out
jge
cmp
mov
(bad)
pop
push
push
lods
sub
mov
dec
imul
pop
je
fdiv
add
inc
ret
pop
mov
mov
mov
mov
mov
popf
repnz
stos
(bad)
or
lods
inc
inc
fistp
(bad)
mov
cmp
cmp
aad
adc
js
cmp
or
xlat
aam
test
inc
mov
fild
sti
bswap
retf
test
inc
fcmovnbe
pop
pop
(bad)
xchg
movs
outs
arpl
mov
mov
push
loop
or
(bad)
push
or
loopne
jnp
mov
dec
mov
ins
ins
pop
(bad)
jns
scas
add
jge
inc
adc
jnp
sub
pop
in
sbb
test
lds
cmp
and
xchg
sar
repz
dec
xor
(bad)
stos
mov
cmp
inc
mov
inc
loope
retf
fst
adc
out
sbb
pop
inc
imul
xor
push
mov
dec
cmp
jbe
push
cs
scas
dec
jmp
jae
xchg
lods
(bad)
push
(bad)
ja
jmp
cli
iret
outs
test
data16
into
inc
mov
push
fs
gs
neg
bound
popa
shl
xor
inc
jg
test
cmp
pop
jmp
fnstenv
aad
mov
add
mov
lea
jl
cdq
mov
dec
(bad)
ror
xchg
push
xchg
ins
retf
cdq
sbb
jp
push
ror
repnz
fwait
pop
sbb
and
push
repz
int
adc
adc
cdq
mov
or
daa
imul
jmp
or
and
shr
mov
cli
pop
and
imul
ins
sbb
dec
cmp
loopne
aaa
movs
adc
mov
je
fidivr
stc
sbb
sbb
sub
inc
scas
inc
add
inc
sub
adc
push
dec
and
mov
sar
movs
repnz
pop
je
fwait
cmovb
lea
clc
hlt
and
leave
xchg
mov
cli
lods
data16
and
push
sub
ss
sub
jo
lahf
stc
loop
push
push
dec
in
inc
mov
inc
scas
out
int3
fbld
xchg
adc
adc
mov
sub
inc
in
imul
and
mov
xor
cmp
in
dec
and
jl
rol
inc
pop
add
scas
and
and
pop
adc
add
lods
les
dec
fisubr
(bad)
test
mov
retf
push
ins
cmc
sti
and
sub
mov
dec
outs
data16
mov
aad
fld
fst
add
mov
pop
(bad)
(bad)
out
jecxz
xor
cli
(bad)
mov
outs
scas
(bad)
dec
cmc
xchg
jo
dec
into
not
and
add
sub
mov
and
mov
retf
mov
inc
mov
popf
shl
es
cs
xor
sbb
push
and
test
mov
das
mov
ins
ret
and
jg
mov
pop
icebp
addr16
aam
pusha
jmp
call
lahf
addr16
or
add
retf
sar
popa
pop
mov
mov
sub
mov
dec
xchg
jne
test
mov
jne
jbe
xchg
jg
(bad)
bound
mov
or
sbb
ss
or
inc
shl
jns
xchg
mov
ds
icebp
pusha
add
push
movs
adc
sti
xchg
retf
push
(bad)
outs
popa
push
es
mov
retf
movs
aad
jnp
repz
bound
arpl
jmp
shr
xchg
inc
jmp
ins
mov
mov
out
js
in
in
add
popa
in
dec
dec
jecxz
fild
repz
xor
jg
into
adc
std
jno
nop
sbb
jns
imul
inc
or
cmc
jmp
stos
in
jae
and
mov
je
add
and
push
sahf
icebp
mov
in
dec
clc
xor
jnp
test
aaa
mov
aas
or
cmp
jmp
outs
lahf
pop
lea
adc
cdq
les
push
fwait
mov
jle
pop
rol
cld
test
pop
pop
push
mov
lea
fmul
aam
daa
add
adc
adc
es
mov
jb
sub
add
push
and
dec
add
sti
push
in
leave
ins
mov
pop
rol
test
test
mov
lock
xlat
pop
test
add
or
jb
lahf
(bad)
jns
in
inc
fdiv
xchg
fs
pusha
pop
push
enter
mov
dec
adc
lods
daa
stos
pop
sub
or
and
jns
jle
stos
xchg
add
jne
jecxz
rcr
cs
mov
enter
aad
jns
xor
rcr
add
inc
push
mov
das
int3
push
rol
mov
xchg
dec
push
or
add
cs
movq
fwait
test
out
je
mov
pop
lea
outs
add
(bad)
fwait
in
popa
jmp
pop
(bad)
fwait
cs
sub
mov
and
repz
mov
das
loopne
fist
mov
dec
dec
sub
in
lock
or
adc
bound
push
movs
enter
push
out
xor
pop
fcom
and
or
pop
mov
jmp
cwde
mov
fwait
loope
cmp
call
xchg
and
into
pop
shr
or
lods
push
pop
pop
iret
mov
lods
and
aas
fwait
pop
mov
mov
push
mov
lock
mov
into
pop
in
sbb
ja
xor
or
leave
jb
(bad)
xchg
and
lds
add
jbe
fsubr
(bad)
shl
or
dec
dec
test
inc
loope
enter
pop
push
popf
lea
fstp
lahf
sti
js
test
or
mov
retf
frstor
mov
xchg
xor
js
xchg
imul
jg
mov
mov
or
sti
lds
inc
adc
dec
dec
push
(bad)
sub
lea
mov
neg
inc
aas
leave
mov
xchg
mov
or
enter
push
dec
jbe
jnp
or
sub
jne
and
loope
fsub
aad
(bad)
mov
mov
(bad)
out
mov
jge
mov
sahf
add
pop
(bad)
nop
mov
loop
adc
xchg
mov
ret
jp
or
test
movs
sar
cdq
mov
mov
and
out
sub
into
sub
and
jns
xlat
mov
out
outs
push
sar
jmp
mov
popa
and
mov
xbegin
(bad)
xor
mov
mov
mov
mov
mov
loop
pushf
out
or
mov
pop
adc
loop
lock
repz
cmp
push
sub
fwait
jmp
pop
cmp
dec
push
sbb
std
xor
enter
repz
push
daa
mov
add
pop
bnd
or
cmp
mov
dec
inc
aas
add
fs
sub
inc
mov
xor
and
retf
aaa
aaa
mov
xchg
imul
into
or
inc
arpl
dec
pop
mov
mov
aaa
push
in
sbb
lsl
xor
dec
sbb
ds
scas
adc
pop
push
scas
jae
stc
add
(bad)
xchg
lahf
jae
outs
es
cs
out
jns
mov
or
push
cmp
add
cmps
repnz
in
retf
or
jns
das
xchg
mov
pop
cdq
cmps
mov
jbe
fcomp
sub
inc
jl
xor
mov
add
cmc
call
call
js
retf
push
inc
test
mov
sub
jne
cld
add
inc
mov
and
std
or
mov
mov
imul
and
xchg
xchg
or
test
fld
dec
xchg
inc
inc
mov
and
sub
(bad)
xor
sar
jns
iret
inc
pushf
(bad)
fist
out
out
es
aas
cmp
xor
imul
inc
fld
push
loopne
mov
pop
movs
icebp
sub
lahf
lock
jne
jge
mov
je
and
cmp
adc
dec
ss
mov
add
cmp
cmp
and
jg
hlt
adc
mov
inc
movs
scas
movs
scas
sbb
pop
or
cmps
xchg
push
fdiv
js
sbb
add
or
enter
dec
movs
jne
sbb
mov
mov
cdq
repnz
cs
fisubr
sub
or
adc
mov
inc
jns
test
fwait
jb
push
push
aam
loope
aad
jg
xlat
mov
cs
sub
mov
bound
cmp
les
int
in
jae
sbb
test
into
xchg
mov
sub
std
ins
outs
imul
(bad)
enter
cmp
imul
ficomp
or
and
pop
pop
jne
inc
mov
or
push
pop
mov
js
outs
pop
mov
adc
or
fcmovnu
inc
push
pop
dec
cld
xor
add
call
mov
push
popa
xchg
or
out
cmp
or
mov
push
jg
pop
inc
daa
or
mov
std
aas
pop
adc
sub
aas
(bad)
out
adc
jb
adc
(bad)
cli
fs
test
sbb
adc
fadd
inc
jns
pop
mov
int3
adc
leave
inc
or
ja
add
mov
imul
mov
fmul
adc
scas
sub
dec
mov
add
imul
iret
jge
daa
add
or
cdq
dec
popf
add
sbb
and
dec
mov
ds
dec
mov
mov
ret
pop
adc
rcr
add
fnstcw
cmp
cmp
adc
or
pop
jl
add
psrld
add
cmps
stos
je
pop
push
cmp
jb
jbe
xchg
addr16
int3
movs
pop
neg
push
dec
ret
mov
repz
or
or
add
stos
lods
mov
pop
call
xor
adc
dec
fmul
lods
adc
into
xor
outs
or
idiv
scas
mov
movs
mov
pop
push
in
sti
scas
out
nop
ret
cdq
sub
push
mov
pop
daa
fnstsw
mov
sar
mov
push
mov
retf
jno
dec
pop
sbb
or
nop
pop
inc
rol
js
lahf
and
and
push
cld
sti
jmp
xchg
inc
cwde
lods
add
inc
dec
fs
push
mov
int3
cmp
pop
scas
dec
in
cmp
rcl
call
xchg
xor
inc
es
mov
push
das
sbb
out
fld
xchg
(bad)
push
stc
xor
push
add
cdq
fst
out
and
add
test
cmc
mov
or
or
(bad)
cs
sbb
inc
aas
bound
sub
jmp
lock
inc
jg
pop
cmc
fmul
addr16
push
jno
pop
shr
(bad)
pop
(bad)
and
int
and
scas
loope
inc
and
jge
or
rol
cmp
repnz
je
adc
push
lds
sahf
out
lock
fs
jg
outs
gs
xor
sub
cwde
nop
pop
push
ror
dec
xchg
xchg
sar
ja
sbb
int
jo
adc
ss
mov
outs
cmps
rcl
or
mov
push
dec
stc
std
or
scas
outs
(bad)
xchg
inc
cmps
jp
out
(bad)
fmul
mov
inc
sbb
mov
adc
jg
mul
xor
ret
sti
retf
dec
scas
xor
push
es
and
sbb
into
adc
stos
push
div
bound
movs
fcomp
daa
in
jge
shr
adc
nop
sti
push
push
adc
movs
or
stos
inc
push
mov
mov
push
and
fiadd
dec
mov
fist
sub
lds
call
xlat
dec
inc
mov
cmp
(bad)
retf
fwait
lods
jne
xor
repnz
int3
es
cmp
mov
sub
dec
adc
xchg
jmp
mov
jl
push
js
mov
sub
add
inc
addr16
(bad)
fcomp
mov
pop
cmp
add
inc
inc
add
jo
adc
fadd
in
xlat
sub
cli
and
shl
sbb
(bad)
adc
aas
popf
arpl
mov
rol
mov
ficom
dec
in
pop
loope
push
pop
sar
stc
into
(bad)
ror
xlat
cmp
cmp
scas
shl
mov
nop
shr
sub
push
mov
ds
dec
xor
dec
push
pop
pushf
test
jb
or
mov
fsub
add
mov
sub
xchg
inc
xchg
rcr
es
jge
fst
call
mov
jmp
int
sub
mov
mov
pop
pop
lock
mov
mov
push
in
in
loope
paddsb
xchg
jno
arpl
addr16
shl
jg
arpl
cdq
and
je
imul
jp
lock
mov
fadd
inc
xor
les
dec
cmc
call
jle
lahf
fdivr
sub
lock
pop
push
mov
aam
scas
jle
mov
(bad)
bound
into
adc
aad
scas
sbb
bound
jge
sbb
das
sub
jae
jnp
mov
mov
shl
popa
or
push
cmp
fwait
lea
(bad)
div
xor
repnz
dec
mov
idiv
sub
inc
add
mov
je
mov
out
mov
mov
push
mov
push
aad
clc
push
ficom
retf
xor
loopne
fistp
dec
test
sub
imul
xor
out
fidiv
jge
cld
pop
xchg
icebp
pop
and
and
enter
(bad)
dec
xor
jmp
popa
cmps
test
push
pop
mov
mov
xor
jmp
scas
inc
les
xor
jecxz
or
adc
or
fadd
dec
mov
in
loopne
les
cmp
inc
mov
mov
mov
popa
dec
jle
mov
mov
and
inc
add
nop
scas
cmp
in
or
xchg
xchg
dec
dec
inc
cwde
push
cmp
or
xchg
mov
xor
repnz
mov
xor
cmc
scas
jecxz
sbb
repz
ret
jecxz
and
lds
mov
and
push
cmps
jg
pop
retfw
jmp
imul
sbb
add
imul
test
cmp
dec
jb
or
add
and
push
(bad)
or
es
fnstcw
iret
add
clc
push
repz
mov
pop
sahf
mov
mov
pop
pop
les
test
push
sub
sub
adc
retf
inc
into
inc
pushf
add
sub
and
cmp
in
and
cs
rol
fdivr
fbstp
pop
mov
(bad)
leave
cmp
imul
mov
sahf
mov
add
jb
(bad)
out
pop
cdq
jmp
ret
fadd
cmp
add
pop
xchg
addr16
pushf
cwde
ret
loop
pusha
pop
sub
add
push
popa
push
mov
jg
inc
je
jmp
cmp
xchg
stc
push
sbb
call
fsubr
mov
and
jo
mov
sbb
and
(bad)
popa
call
cmp
fmul
mov
lods
push
ret
push
jmp
sbb
and
dec
and
cmp
retf
cmp
or
lods
pop
in
xchg
or
jne
lahf
jne
mov
clc
movs
retf
dec
(bad)
(bad)
arpl
mov
and
or
jmp
pop
jmp
mov
inc
pop
mov
enter
add
adc
mov
ins
jle
or
mov
pop
pusha
adc
mov
jns
es
xchg
mov
push
call
enter
xor
mov
enter
xchg
in
or
faddp
inc
mov
loopne
cdq
popa
jge
sbb
dec
fadd
mov
(bad)
and
lea
lds
ins
or
call
es
pushf
push
psrlq
mov
dec
mov
mov
outs
xchg
test
cwde
mov
pop
idiv
xchg
pusha
sub
xor
stc
jns
clc
cmp
test
push
adc
lds
ds
sbb
add
pop
cmp
loope
ror
xor
and
adc
xchg
call
es
paddusw
in
fsubr
pop
mov
test
popf
inc
xor
or
jns
mov
jbe
or
dec
cmp
adc
mov
fldcw
push
les
xchg
mov
xor
mov
addr16
xchg
or
popf
pop
adc
dec
inc
sub
fstp
mov
(bad)
jmp
je
add
int
adc
retf
xchg
retf
jno
xchg
out
mov
cli
mov
add
aam
ins
inc
mov
pusha
push
call
not
or
fmul
push
push
adc
mov
into
sbb
mov
data16
mov
push
pop
jns
adc
cli
sbb
mov
mov
imul
xlat
mov
sub
and
call
lods
add
aam
cmp
mov
test
jns
push
(bad)
dec
xchg
aas
ja
les
pop
lods
dec
jae
(bad)
aas
shl
outs
je
nop
inc
lods
in
(bad)
(bad)
in
fcom
mov
mov
mov
and
jbe
fistp
push
or
mov
cmp
jbe
sti
dec
mov
pop
pop
mov
(bad)
fidivr
add
mov
sub
mov
add
adc
nop
cs
shl
sbb
pop
jo
xchg
cmp
leave
shr
outs
mov
movs
sub
and
ins
mov
sub
repnz
call
pop
cmp
xchg
in
(bad)
push
xor
fld
or
mov
xor
ret
(bad)
bt
imul
shl
bound
nop
pop
lds
iret
push
pop
nop
xor
movs
push
ret
push
adc
(bad)
and
or
xchg
dec
pop
and
mov
cmp
adc
bound
push
sbb
(bad)
shl
xchg
movs
jge
fisub
adc
xchg
jnp
stos
call
arpl
push
or
(bad)
call
repz
cmp
or
sub
mov
mov
jns
test
iret
add
cdq
xlat
ins
inc
sub
inc
push
dec
push
jmp
sti
pop
js
jne
jl
das
lods
(bad)
(bad)
shl
std
cmp
push
mov
cli
sti
jo
mov
jge
outs
pop
in
or
addr16
push
sub
cmp
jae
sbb
repnz
sub
mov
das
jmp
mov
mov
dec
mov
pop
dec
fisttp
(bad)
inc
cmp
fwait
in
inc
call
lahf
mov
arpl
xchg
mov
mov
xchg
sub
sub
pop
mov
and
or
std
test
mov
xor
jl
in
pop
dec
inc
daa
ds
cdq
cdq
inc
jmp
pop
imul
jg
(bad)
dec
sahf
imul
cmps
mov
inc
push
xor
sbb
mov
outs
or
inc
inc
or
(bad)
or
xchg
mov
mov
push
xor
push
jns
cmps
push
lds
nop
hlt
mov
sar
xchg
ret
cmc
xchg
mov
sbb
fistp
repz
test
test
and
adc
in
test
repz
(bad)
mov
(bad)
mov
ret
add
inc
xchg
das
(bad)
pop
imul
adc
add
call
inc
addr16
in
inc
fld
sbb
dec
(bad)
cmc
popf
rcr
inc
out
movs
(bad)
xchg
sbb
psllq
mov
(bad)
cld
sbb
daa
(bad)
cwde
aad
mov
cwde
xor
push
js
push
and
in
dec
stos
(bad)
test
xlat
jae
push
add
fsubr
stc
mov
test
jae
nop
shl
(bad)
mov
sub
imul
mov
sub
dec
into
mov
xlat
nop
addr16
outs
mov
mov
sub
dec
ret
mov
adc
lds
and
push
into
or
or
daa
out
cmps
imul
cmc
repnz
repnz
ror
hlt
push
mov
or
adc
jg
sub
pop
pop
lahf
add
inc
add
(bad)
dec
push
push
aam
xchg
adc
cmp
sti
jge
sbb
ds
cmp
fisub
lods
cmp
mov
mov
mov
jmp
cmc
jmp
dec
xchg
push
jmp
jo
or
test
fmul
fistp
ds
in
int
fdivr
jp
lea
adc
bound
cmp
mov
out
push
jmp
pusha
in
(bad)
mov
fist
pop
sbb
xchg
in
sub
mov
shl
mov
popf
push
xchg
scas
mov
or
neg
fild
xor
pop
or
xchg
pushf
jae
push
push
pusha
test
int
sar
clc
jns
je
neg
push
mov
into
inc
mov
dec
mov
mov
inc
add
ror
mov
fdiv
lods
lahf
shl
ficom
icebp
ds
inc
or
test
out
out
(bad)
jp
push
popf
ds
in
mov
movs
out
mov
iret
popf
jnp
xor
cmp
sub
in
push
add
ins
pop
or
cmc
fldenv
sbb
pusha
mov
xor
mov
ror
rcl
jmp
in
adc
(bad)
repz
aaa
cdq
lds
mov
dec
mov
enter
mov
retf
mov
outs
arpl
ret
jno
retf
stc
test
dec
iret
inc
mov
das
push
icebp
mov
xor
(bad)
and
mov
fistp
or
jecxz
movs
jnp
jbe
fcmovnbe
pop
mov
aad
adc
imul
pop
jnp
arpl
out
es
jmp
test
(bad)
push
ficomp
mov
das
lods
jmp
retf
dec
into
jno
mov
mov
add
mov
pop
pop
jmp
scas
jmp
sbb
popf
test
mov
jb
retf
test
iret
popf
shr
fadd
cld
mov
inc
or
call
mov
push
je
cmp
ja
lods
push
adc
loop
ja
ins
push
(bad)
or
push
mov
jmp
cdq
xor
scas
mov
inc
push
ret
mov
out
push
push
push
jg
pop
fisttp
or
sub
mov
sti
ret
mov
adc
daa
ret
int3
pop
xor
add
add
test
xchg
sub
cwde
mov
xor
inc
clc
sbb
clc
xor
jnp
call
inc
aad
std
adc
dec
int3
jp
jb
jmp
adc
ds
sti
dec
pop
cmp
sbb
ret
jb
dec
jb
sub
ret
retf
pop
loop
data16
je
repz
fwait
cdq
inc
in
test
aad
pop
rol
test
(bad)
bound
scas
out
cmps
pusha
in
add
int
and
and
pop
add
and
add
cmps
xchg
sbb
mov
xchg
aaa
mov
xor
push
jle
xchg
adc
leave
repz
sub
jb
repz
inc
mov
movs
xchg
movs
push
sub
pop
xor
(bad)
pop
mov
xchg
lahf
push
adc
int
fs
sahf
mov
dec
int3
add
test
test
iret
arpl
jle
(bad)
mov
mov
addr16
push
sub
rcr
aam
rol
cdq
jbe
pop
add
jp
jbe
js
mov
xchg
and
cli
out
jecxz
adc
mov
(bad)
out
daa
pusha
mov
(bad)
sbb
dec
test
cli
lds
pop
addr16
adc
iret
pop
dec
mov
hlt
not
inc
fcmovnbe
mov
movs
(bad)
in
fwait
pop
(bad)
sbb
push
mov
or
ds
inc
add
cmp
fiadd
xchg
mov
inc
mov
and
pop
jae
mov
mov
jo
popa
loope
ja
mov
dec
and
inc
cdq
push
sahf
imul
cli
js
mov
(bad)
repz
mov
sbb
retf
ror
inc
cmp
(bad)
call
mov
adc
cwde
jb
cli
xlat
dec
in
mov
leave
add
sub
das
pop
js
cld
add
les
ret
movs
jne
add
dec
fsubrp
dec
lods
sbb
stc
fisubr
or
sahf
push
pop
or
mov
(bad)
js
xchg
pop
sbb
fldcw
xor
mov
stc
fsubr
cmp
lahf
outs
adc
add
or
inc
pop
inc
fwait
imul
adc
pop
mov
outs
inc
push
sbb
cli
mov
or
or
adc
pop
or
add
in
outs
fiadd
jl
inc
pop
mul
jmp
sbb
sub
adc
xchg
cmp
sti
out
(bad)
pop
enter
add
cld
jnp
add
add
dec
outs
out
inc
cmp
shr
xchg
and
test
dec
xchg
addr16
(bad)
xor
inc
mov
loop
icebp
mov
cmps
jmp
mov
lds
outs
inc
and
xor
sar
xor
jno
sbb
adc
mov
gs
push
pop
(bad)
iret
loop
int
mov
or
in
push
mov
mov
mov
jno
ret
mov
jl
mov
xor
sub
xlat
stos
add
cmps
sbb
mov
dec
dec
lock
cmp
mov
retf
mov
cmps
pop
push
add
rcl
lds
or
pop
aad
arpl
push
cmps
or
cli
mov
xchg
out
aas
and
add
pop
jl
mov
push
cmp
cs
out
mov
jg
loope
mov
out
fcom
sbb
not
dec
push
push
push
mov
inc
inc
(bad)
xchg
in
cdq
mov
push
or
xor
push
in
in
mov
xchg
sbb
rcl
dec
lock
inc
std
cmp
jp
pusha
mov
das
add
push
(bad)
sub
pop
sub
push
jecxz
or
int3
arpl
add
mov
lahf
out
lods
stos
imul
out
dec
enter
movs
das
xchg
outs
fwait
mov
xor
rol
mov
sbb
cld
add
xchg
repnz
mov
inc
and
icebp
sub
pop
lahf
pop
mov
adc
cmp
add
stos
jmp
xor
inc
add
dec
daa
and
pop
call
sahf
dec
in
mov
out
daa
xor
repnz
xchg
mov
push
sub
lods
jo
call
mov
mov
and
or
bound
jg
mov
sbb
stos
jecxz
mov
popf
out
sbb
lock
js
xor
mov
bound
mov
ficom
adc
and
out
mov
sbb
jns
in
xchg
push
push
gs
int3
mov
aam
js
adc
and
lods
hlt
imul
sub
lock
dec
lds
sahf
repz
xchg
jmp
add
push
xchg
iret
jmp
fbstp
fidivr
add
pop
nop
sbb
push
loop
out
sub
in
adc
inc
sbb
xor
push
loopne
aam
jl
or
sub
adc
and
pmulhw
inc
stc
cld
mov
daa
test
jb
cmps
push
dec
xor
and
push
cmp
mov
push
mov
bound
ins
mov
mov
or
jg
data16
xchg
loop
scas
cmp
dec
jne
mov
retf
fmul
(bad)
jmp
sbb
stos
inc
aas
icebp
or
test
ins
jae
ins
jmp
fdivr
xchg
add
cmp
jmp
fs
call
enter
aas
xor
or
cmps
xchg
in
jbe
and
jo
mov
adc
or
jbe
jmp
movs
add
popa
ret
addr16
jle
sub
scas
ds
jg
add
out
xchg
ret
movs
jmp
push
cli
sub
dec
js
mov
inc
sbb
stos
lock
shl
pop
pushf
out
es
cmp
clc
ss
dec
sbb
cmps
(bad)
mov
call
xchg
push
fwait
mov
data16
sbb
nop
lods
add
cmp
jae
or
xchg
mov
ins
aam
add
sbb
jmp
inc
cmp
repnz
xchg
mov
arpl
mov
push
mov
mov
push
push
test
jb
pop
(bad)
int
add
mov
push
push
call
xor
aaa
sub
(bad)
push
push
scas
ss
jns
out
pop
or
xor
test
pop
inc
pop
mov
sub
cmp
loope
and
cmps
jnp
cdq
push
test
mov
rcl
pop
adc
loop
shl
not
xchg
add
call
sbb
(bad)
iret
mov
mov
mov
ins
inc
xor
sub
xchg
sbb
and
in
call
xchg
pop
adc
mov
cmp
xor
aad
loopne
cmp
mov
xchg
dec
jns
jmp
mov
ror
xor
xlat
xchg
mov
mov
loope
ins
btr
add
inc
inc
sub
push
push
setle
adc
and
inc
xor
nop
push
jmp
mov
jmp
mov
dec
call
jo
fucomi
xor
add
mov
inc
or
xor
outs
leave
cld
in
mov
sbb
cmps
mov
mov
fwait
pop
push
pop
xor
(bad)
mov
js
add
jbe
stc
pushf
pop
mov
leave
fwait
loop
stos
fidivr
mov
and
adc
jo
add
xchg
or
mov
mov
out
sbb
das
in
xor
sbb
cmps
mov
push
test
cmp
sub
daa
fs
in
(bad)
push
jo
repnz
idiv
xor
(bad)
leave
ror
xor
mov
add
cmp
cmc
push
xor
fwait
push
sbb
sbb
clc
push
mov
cmp
ss
dec
or
mov
push
fucomi
mov
adc
push
je
stc
pop
xor
push
loope
push
push
es
push
mov
sbb
fistp
arpl
xor
xlat
jno
js
xchg
clc
in
add
call
xor
mov
push
or
icebp
xor
movs
cmp
mov
fisub
xor
fisubr
pop
add
pop
mov
mov
xchg
inc
pop
pop
add
push
or
dec
or
sbb
in
pop
add
fild
adc
or
jl
and
cmp
iret
aad
cmp
(bad)
out
cmp
mov
mov
inc
cmp
shl
mov
jns
push
xchg
inc
pop
cmp
aad
lahf
out
call
push
iret
mov
jno
gs
xchg
sub
jge
les
jno
and
loopne
in
pop
or
cwde
and
jg
call
and
sbb
jge
pop
ss
pop
lock
mov
mov
jnp
add
movs
enter
addr16
rcl
pop
dec
addr16
adc
push
xor
adc
lahf
mov
or
imul
test
xlat
stos
test
sub
int
or
xchg
dec
imul
pop
and
or
or
adc
call
popf
inc
xchg
or
fs
mov
in
pop
rcr
dec
test
in
fisubr
(bad)
shl
ret
mov
stc
daa
rol
cmp
sub
imul
mov
ss
cdq
sti
fs
xchg
sbb
sbb
shl
fld
mov
fincstp
xor
dec
call
dec
jge
xor
shl
in
lods
pop
pop
clc
gs
sbb
iret
retf
fsub
(bad)
nop
les
fidiv
les
std
bound
test
popf
icebp
push
sahf
pop
inc
lods
and
mov
pop
pop
mov
cmp
cmp
inc
clc
lea
mov
sbb
fwait
mov
fdivr
and
dec
mov
cmp
inc
or
aaa
xor
not
cmps
jge
test
sub
adc
loop
cmp
fwait
out
stos
xor
cmp
loopne
cmp
jno
sar
mov
fcomi
retf
out
adc
mov
sbb
out
icebp
repz
sub
jmp
mov
mov
push
jne
icebp
or
clc
repnz
pop
xor
mov
loop
jne
in
stos
and
fnstenv
mov
lods
push
movs
hlt
icebp
cdq
xchg
or
arpl
repz
push
mov
inc
pop
cmps
jecxz
cmp
hlt
cmp
push
fmul
mov
call
adc
mov
push
and
xchg
enter
sub
push
mov
adc
test
ins
jmp
pusha
push
sub
cmp
stc
add
pop
push
movs
sbb
jno
jne
inc
nop
mov
cmp
jmp
sar
pop
les
scas
or
mov
and
and
popa
loop
data16
jecxz
repz
push
xchg
xor
je
rcl
xor
mov
xor
test
push
loop
ds
and
xor
fs
dec
mov
pop
pop
mov
sub
(bad)
das
or
jmp
or
sbb
(bad)
dec
rcl
xor
xchg
dec
dec
scas
inc
pusha
mov
lds
pop
inc
xlat
mov
out
jb
xor
pop
pop
dec
or
add
dec
out
mov
inc
cmp
xor
adc
sti
jne
push
repnz
or
test
in
pop
scas
mov
xor
xchg
dec
retf
cld
inc
data16
sbb
pop
ins
fs
jo
test
xchg
arpl
mov
clc
icebp
mov
ror
cdq
je
and
adc
mov
jae
inc
dec
aad
out
rol
das
dec
push
aaa
fsubr
movs
es
pop
push
mul
hlt
cmp
aad
push
test
push
jp
push
je
ins
push
jg
jae
adc
dec
sub
sub
jmp
call
fsub
and
js
int3
test
pop
ins
les
jae
sar
out
jae
mov
ja
jbe
mov
out
mov
sub
sub
es
and
ret
fs
in
(bad)
xlat
add
xor
scas
retf
adc
mov
xor
call
lahf
test
les
loop
add
fild
push
fs
jae
xchg
xchg
es
test
xchg
pushf
je
dec
xor
jmp
push
loope
xchg
lock
out
outs
and
pop
rcl
push
sbb
mov
inc
inc
mov
dec
(bad)
jmp
dec
popf
add
test
ret
push
jecxz
punpckldq
xchg
out
mov
int3
cmps
div
dec
inc
addr16
and
xchg
bound
push
cwde
jb
jle
xor
nop
cmp
je
add
leave
jmp
sbb
cmps
lock
cmp
fcomp
push
xor
mov
gs
xor
mov
xor
sbb
sahf
xor
mov
out
sub
push
xchg
mov
jae
call
clc
stos
mov
lahf
pop
mov
lock
push
imul
ins
ds
dec
popf
sbb
mov
mov
push
mov
mov
fdivrp
xchg
mov
mov
jmp
rol
fnstcw
sar
ss
xchg
mov
out
adc
mov
xchg
and
jns
or
gs
jb
in
iret
out
movs
cli
adc
dec
(bad)
enter
icebp
icebp
in
loop
in
dec
fistp
js
xchg
cmp
mov
xor
xchg
push
inc
out
fstp
repz
outs
test
jecxz
cwde
mov
jge
or
retf
adc
xor
cmp
js
mov
push
mov
stos
dec
ret
sub
and
setae
mov
in
push
daa
or
mov
aad
shr
repz
inc
add
adc
(bad)
xor
imul
mov
cmp
mov
or
add
scas
jne
movs
call
push
(bad)
mov
mov
inc
mov
in
lahf
pop
ret
es
dec
push
fldenv
mov
lahf
mov
test
cmp
push
(bad)
sub
push
pop
fcom
and
ret
sub
pop
pop
std
jne
lahf
sbb
mov
xchg
pushf
es
test
stos
ins
or
int3
out
inc
pop
jp
jmp
imul
dec
xor
inc
mov
(bad)
fld
adc
cmp
and
cmps
xchg
mov
and
fwait
imul
aad
cmps
mov
cmps
dec
xor
cmp
cmp
cdq
pop
mov
cmps
and
call
ja
mov
add
das
dec
adc
retf
sbb
inc
ss
push
mov
adc
je
fsubr
ss
mov
or
push
fdiv
mov
xchg
push
mov
nop
cmc
mov
jae
jmp
dec
cmps
push
ja
stc
add
add
js
jecxz
jae
mov
mov
sub
xchg
aam
adc
aas
cld
aad
inc
lea
fsub
sahf
dec
imul
scas
fwait
shl
pop
jb
mov
pushf
aas
cwde
or
sub
mov
or
fwait
neg
jge
pop
add
mov
in
xchg
or
cmp
pop
mov
pop
pop
nop
(bad)
int
pop
es
cmps
(bad)
ins
repz
sbb
shr
pop
cmp
cwde
adc
mov
repz
dec
in
bound
jno
mov
out
in
add
hlt
or
fucomip
inc
jl
repz
push
or
mov
and
pop
cmps
and
cwde
into
mov
mov
jne
mov
mov
add
mov
fnsave
mov
cld
jg
pop
ret
out
(bad)
shl
lea
pop
test
inc
push
jns
and
ins
pop
push
mov
xchg
pop
popf
sbb
aam
sub
daa
loop
sub
sub
cs
or
les
bound
jle
(bad)
out
scas
push
push
test
xchg
out
and
adc
fcomp
adc
xor
pushf
xor
mov
fimul
into
test
das
adc
sub
icebp
mov
ds
leave
aas
cwde
cmp
fist
adc
sub
sbb
push
adc
lods
mov
mov
bound
shl
xor
push
call
xchg
pop
(bad)
jno
adc
dec
mov
stc
mov
(bad)
aas
stos
push
sbb
fs
out
jns
push
lods
(bad)
pop
jo
(bad)
imul
or
dec
sbb
stos
loope
bound
jecxz
mov
fst
and
ret
fisubr
push
push
push
out
jmp
pop
add
push
loop
ins
leave
mov
jmp
mov
pop
and
xor
fidiv
popf
adc
push
pop
test
jecxz
jnp
mov
mov
dec
stos
mov
mov
in
imul
inc
js
mov
mov
jecxz
int3
into
hlt
lea
shl
mov
lock
aam
loope
cld
jmp
inc
outs
or
es
fcmovne
in
mov
addr16
out
arpl
inc
les
cwde
sub
sub
cdq
cmps
push
sub
outs
jmp
or
xchg
dec
mov
sub
fcomp
jo
sub
and
inc
ins
ret
(bad)
xlat
ror
jnp
push
lock
dec
iret
shl
sahf
loop
das
and
fsub
xchg
test
lea
fwait
and
xor
loopne
stos
jne
nop
fistp
fdiv
cwde
or
test
std
and
inc
lds
xchg
sti
fsub
ret
xor
repnz
cmp
jge
(bad)
in
sbb
loopne
leave
js
(bad)
push
ds
jb
mov
pop
cmp
clc
add
dec
adc
sbb
imul
(bad)
sub
mov
add
dec
sbb
pusha
inc
pushf
shl
aad
mov
and
adc
js
sub
adc
mov
pop
xor
mov
movs
(bad)
ss
mov
movaps
dec
sbb
test
loop
mov
inc
mov
stos
mov
(bad)
mov
dec
test
adc
xchg
jmp
stos
and
cmp
pop
xchg
loope
ret
xchg
es
push
(bad)
sbb
xor
pop
in
inc
out
rcl
sti
daa
cmp
xor
mov
jno
sub
push
inc
push
sub
mov
popf
xlat
mov
jbe
pop
jg
jbe
xchg
inc
nop
jmp
bound
(bad)
movs
push
cli
cmc
xchg
mov
call
fcomp
dec
xlat
out
add
pushf
xchg
cwde
sub
jge
push
pop
and
or
aaa
lds
fiadd
add
xor
enter
and
stc
mov
sub
xor
test
popa
(bad)
inc
icebp
aam
add
jge
pop
(bad)
mov
imul
adc
pop
inc
dec
mov
call
cmps
call
in
lock
dec
aaa
arpl
jno
pop
add
ins
dec
pand
dec
mov
pushw
in
jns
cld
pop
fwait
dec
out
inc
jo
sub
popf
inc
mov
mov
fiadd
daa
jae
outs
fs
idiv
inc
pop
dec
daa
inc
lods
inc
ret
push
test
js
xchg
xchg
scas
xor
hlt
int3
and
cmps
aam
dec
inc
mov
cmp
(bad)
push
movs
ins
xor
sub
stos
das
xchg
push
mov
ins
arpl
or
mov
rcr
pop
jl
loopne
icebp
pop
cmp
loope
or
lds
xor
ret
sti
adc
pop
push
xchg
jmp
aam
and
mov
sub
(bad)
fxch
inc
les
pop
mov
test
xchg
sbb
out
imul
test
dec
pop
adc
xlat
cmp
stc
push
out
mov
fsub
div
push
jecxz
inc
jg
retf
cdq
mov
cmc
stos
test
mov
shr
cmps
adc
ficom
imul
fwait
in
jle
hlt
(bad)
jb
mov
sbb
fmul
ret
lock
jnp
mov
test
stos
cmc
aaa
aam
arpl
popf
xlat
imul
in
mov
loop
test
adc
sub
retf
mov
sahf
daa
sbb
mov
popf
and
mov
nop
mov
outs
mov
jb
inc
or
adc
fimul
jg
adc
in
push
dec
cwde
int3
arpl
in
mov
aas
mov
cmp
imul
adc
jg
or
das
cmp
imul
loope
inc
mov
repnz
cld
mov
mov
mov
enter
jle
dec
sbb
sahf
push
scas
ficom
cdq
(bad)
out
sbb
dec
rol
jb
inc
fisubr
inc
jmp
sar
test
lock
sub
clc
stos
add
emms
mov
cmp
fadd
pop
in
aaa
movs
ficom
jp
push
popa
sar
mul
pop
jl
std
in
xlat
mov
imul
mov
xchg
xchg
or
addr16
fbld
loop
ins
ret
sahf
je
jmp
inc
inc
xchg
outs
or
(bad)
test
or
adc
lds
retf
int
sahf
or
cmps
ins
ret
fisttp
pop
mov
inc
ret
rcr
cdq
push
movs
das
lahf
sahf
cmc
fs
adc
data16
rol
clc
mov
ins
mov
pop
stc
outs
loop
push
adc
jne
popf
into
loop
mov
cmp
mov
rol
fcom
add
xchg
sub
dec
in
xchg
enter
(bad)
retf
aam
fild
(bad)
std
ret
add
ret
arpl
jp
lahf
inc
ja
or
xlat
out
add
ins
mov
and
jl
adc
fs
imul
arpl
add
mov
mov
jns
int3
cmp
out
outs
aaa
cmp
cld
ja
leave
cli
aaa
jmpw
push
push
ins
xchg
xchg
push
cmp
or
stos
or
mov
push
inc
aas
test
rcl
rcl
or
push
or
shr
jo
push
pusha
jbe
mov
ror
jmp
mov
add
dec
adc
push
movs
mov
inc
imul
into
adc
sub
(bad)
movs
or
add
das
outs
mov
sub
mov
cwde
les
ret
sub
repnz
and
test
pop
in
js
popa
push
xchg
pusha
loopne
call
sar
jl
jle
test
mov
cmp
test
bound
push
pop
mov
xchg
adc
mov
pop
and
adc
pop
outs
cli
ret
mov
mov
mov
frstor
fs
cmps
mov
fs
jp
out
cwde
ror
push
xchg
push
stos
cmp
mov
push
test
inc
add
lods
sbb
add
mov
adc
int3
ins
sbb
(bad)
and
jo
sub
(bad)
rcr
pop
and
lahf
jno
ss
jmp
scas
jle
ficom
(bad)
js
cdq
movs
rcr
and
push
push
jg
fsub
cmp
and
cmp
cmp
mov
mov
lock
leave
out
imul
cmp
test
movs
outs
cmps
xchg
loopne
sbb
add
mov
nop
cdq
sub
dec
shl
out
bound
cdq
mov
push
int
lds
shr
mov
cmc
imul
mov
or
das
inc
(bad)
pop
xchg
mov
cmps
inc
mov
sub
popa
sub
cwde
xchg
xlat
cwde
adc
jne
leave
aas
pop
int3
out
push
sbb
aad
outs
arpl
dec
(bad)
adc
lock
cmp
pop
jge
aas
cwde
sub
int
xor
adc
movs
lods
les
adc
outs
rol
fimul
out
(bad)
out
scas
fisttp
addr16
imul
mov
adc
lock
add
leave
mov
mov
xchg
lock
jecxz
sbb
push
call
retf
jnp
sbb
iret
pop
(bad)
stc
popa
pop
fisub
sub
cmps
cli
outs
fwait
sbb
xchg
movs
pop
mov
xchg
sub
std
add
sbb
jnp
pop
and
jb
sbb
daa
pop
dec
or
jb
mov
adc
in
punpckhbw
xor
xor
ins
add
pop
popf
in
cmp
jns
push
ret
inc
into
sar
out
rcr
(bad)
inc
xchg
stc
sbb
jo
pop
int3
cdq
xchg
pop
jns
gs
in
adc
test
pop
push
repnz
ds
add
call
leave
push
pop
sub
(bad)
sbb
fisubr
fisttp
add
add
mov
out
or
lahf
shr
mov
jl
or
sahf
or
retf
fwait
sub
xor
test
aam
mov
test
(bad)
jmp
adc
fcomp
pop
xchg
int
push
xchg
std
dec
adc
mov
xor
sbb
cld
mov
fild
repz
xor
add
loop
fidivr
arpl
cli
jne
sbb
xchg
cmp
clc
adc
push
push
pop
cwde
cdq
out
ja
push
pop
repz
ret
outs
pop
loop
xor
adc
daa
add
stos
xchg
xchg
repz
push
mov
jmp
mov
lock
dec
inc
xchg
(bad)
in
pop
push
mov
push
jbe
repz
push
and
inc
mov
lahf
bound
ins
cs
mov
mov
mov
mov
push
push
adc
ficomp
pop
je
mov
push
sub
lock
and
movs
mov
xchg
mov
mov
jmp
mov
imul
stos
mov
add
rcr
fnstcw
xchg
fdivr
xor
pop
inc
pusha
js
xchg
mov
pusha
and
sti
add
mov
pop
scas
imul
sbb
or
pop
out
and
enter
inc
neg
sub
stos
push
retf
ret
dec
and
push
add
push
push
(bad)
fmul
popa
and
je
test
inc
pop
cmp
dec
lods
dec
and
ret
out
xor
pop
hlt
sbb
cmps
push
inc
fimul
icebp
dec
or
out
mov
xor
sub
push
aas
cmp
popf
xchg
cli
pop
jne
cmp
pop
sbb
pop
sti
test
mov
sub
out
adc
jl
mov
or
sbb
mov
mov
jmp
cmc
loopne
mov
mov
lods
shl
repnz
test
fmul
jnp
cmp
iret
xor
mov
outs
retf
add
jo
pusha
xlat
cs
xchg
cmp
fs
data16
cmp
or
femms
pop
les
mov
scas
jns
imul
mov
stos
repnz
sahf
inc
jecxz
and
push
add
cli
push
xor
(bad)
mov
loopne
int
adc
sbb
rol
bound
xor
das
leave
fist
inc
enter
(bad)
jge
adc
das
adc
fisub
pop
mov
mov
mov
cdq
cwde
(bad)
mov
mov
mov
sbb
call
mov
pusha
sbb
mov
or
jbe
xor
mov
mov
(bad)
jno
xchg
shl
enter
mov
jl
ret
add
pop
ret
mov
or
adc
xor
jne
mov
jae
push
fdivr
push
mov
(bad)
fldenv
iret
mov
jne
pop
ds
cmp
sub
lahf
jb
das
aas
cmp
test
sub
and
(bad)
and
mov
dec
cs
loope
arpl
and
popa
pop
arpl
xchg
jno
and
adc
test
adc
jmp
push
mov
sub
pop
xchg
pop
jnp
xor
movs
or
adc
or
jne
jne
cmp
cs
test
adc
shr
ror
push
cmp
jge
fidiv
lods
aad
push
inc
scas
or
cmp
jno
std
pop
(bad)
fcomp
mov
mov
adc
mov
cmps
std
daa
pop
add
cmps
pop
inc
ret
lock
ja
and
adc
sar
dec
inc
(bad)
arpl
xor
xchg
je
pop
push
jecxz
cmp
xor
jmp
nop
ja
dec
xchg
fdivr
inc
mov
cmc
xchg
es
mul
ja
mov
add
frstor
(bad)
(bad)
cmp
xchg
call
aad
mov
repnz
or
cmps
(bad)
loope
loopne
(bad)
cmp
dec
retf
mov
rcl
out
xchg
xchg
fistp
sbb
add
inc
rcr
mov
push
pop
pop
les
mov
jle
je
mov
xchg
inc
aaa
mov
setge
enter
ror
fisttp
je
dec
xor
arpl
rcl
push
hlt
mov
jmp
stos
adc
stos
or
push
cmp
loop
or
xchg
push
jg
sbb
call
sbb
push
jno
mov
and
sub
inc
in
adc
dec
or
nop
xchg
mov
outs
aas
dec
cmps
inc
or
out
repz
cmp
mov
in
loop
fdivr
cmp
mov
mov
mov
bound
push
push
jp
sahf
push
cs
jno
lahf
cs
push
sbb
mov
xchg
mov
mov
add
movs
mov
mov
jo
pushf
inc
sub
push
or
dec
adc
xchg
dec
shr
aas
(bad)
push
outs
icebp
jle
dec
jno
jb
stc
pop
jl
cmps
out
repz
imul
xchg
push
data16
call
mov
dec
shl
push
nop
sub
jg
aaa
ins
dec
adc
add
xchg
mov
xor
mov
arpl
push
scas
stos
cs
jo
aaa
jge
pop
cs
into
sub
add
mov
data16
data16
add
cmp
pop
add
test
mov
test
xchg
test
bound
inc
pop
dec
std
daa
jp
ins
jnp
leave
jg
jp
inc
mov
rol
pop
push
and
mov
repnz
or
cmps
adc
clc
xor
mov
mov
enter
and
(bad)
jp
mov
and
cmp
xor
lods
out
jns
dec
or
push
outs
aas
mov
clc
bnd
ins
mov
sar
push
pop
and
xchg
sbb
push
aaa
push
push
scas
fwait
inc
lea
int
repz
pop
xor
sub
loope
fisubr
iret
mov
fdiv
rol
clc
icebp
lea
jle
cmps
pop
and
fs
push
stos
scas
cmp
cld
sub
std
out
xchg
data16
adc
or
stos
pusha
mov
sbb
push
mov
lahf
shl
cmc
adc
dec
mov
push
push
mov
scas
stos
pop
scas
mov
addr16
and
sub
inc
pusha
jmp
ret
shr
jns
mov
sbb
pop
movs
fidiv
nop
lods
lods
pop
repz
call
xchg
div
bnd
outs
dec
cmps
mov
fdivp
shr
fwait
cli
jnp
cmp
dec
inc
mov
inc
mov
mov
ret
imul
mov
orps
cmps
stos
(bad)
cmp
pop
mov
sbb
mov
popf
mov
sbb
(bad)
out
outs
mov
sub
inc
mov
or
out
or
jmp
test
adc
jne
cmp
idiv
int
dec
xchg
sbb
or
rcl
stos
jl
mov
push
movs
in
bound
cmp
add
bound
xlat
in
pop
fidivr
xchg
cmp
rcl
push
xor
lock
sub
xchg
retf
xor
inc
das
mov
dec
cld
ins
inc
nop
xchg
retf
xor
in
push
inc
mov
inc
adc
fmul
inc
cmp
pop
psubd
in
xchg
jmp
leave
enter
dec
mov
push
inc
out
iret
mov
xchg
pop
add
aas
in
ret
and
sub
sahf
shl
xor
ins
cld
imul
dec
repz
xchg
pop
icebp
jmp
lods
add
and
les
cs
and
pushf
mov
add
or
mov
sub
ss
adc
stos
(bad)
js
sbb
loopne
mov
test
leave
aaa
sbb
les
(bad)
xchg
nop
popf
into
std
in
pusha
xor
stc
ja
scas
and
(bad)
out
xchg
inc
nop
loop
add
sahf
int3
jae
les
lds
ret
retf
ins
pop
pop
ja
pop
ds
fwait
push
push
jg
int
jmp
mov
adc
in
inc
pop
repz
mov
push
xor
ds
xor
aaa
fnsave
sbb
test
dec
addr16
(bad)
out
aam
and
(bad)
mov
or
jp
cmp
mov
fbstp
inc
add
das
dec
pop
sbb
add
lods
test
cs
jne
inc
cs
fs
mov
mov
fucomp
popf
jle
inc
ja
xchg
retf
pop
xor
inc
and
out
ret
dec
hlt
xor
push
daa
cmp
sti
pop
(bad)
jle
pop
mov
outs
sbb
sti
pop
xchg
add
dec
sbb
jb
or
lea
lahf
int3
pop
lods
popf
inc
adc
loope
mov
sar
sbb
popa
and
fsubr
iret
popf
mov
imul
sub
pop
idiv
pop
mov
test
inc
or
mov
mov
sub
pop
mov
dec
pop
movs
(bad)
fdiv
pop
(bad)
xor
scas
or
(bad)
sub
sbb
inc
aaa
cmp
fsub
cmps
adc
inc
xchg
cli
fstp
(bad)
jp
inc
fistp
pop
mov
ficom
or
jb
inc
or
repz
imul
adc
dec
jecxz
or
inc
fwait
dec
dec
repz
fs
jl
sbb
fxam
xchg
aam
pusha
or
mov
jmp
icebp
leave
mov
jo
enter
jo
mov
dec
push
pusha
jae
repz
jp
cmp
or
aam
dec
mov
cmp
mov
fstp
fistp
pop
mov
rcr
loopne
inc
or
(bad)
test
xchg
pushf
jnp
pop
fidiv
shl
xor
popf
mov
mov
inc
mov
sbb
bound
xchg
inc
in
pop
rcr
jo
nop
adc
inc
ror
cmp
jg
ret
adc
cdq
repnz
dec
jecxz
jecxz
mov
(bad)
repz
(bad)
pop
push
pop
or
mov
adc
sar
ja
cmps
jne
push
and
add
fisttp
xor
push
repz
push
jge
xchg
dec
int3
shr
mov
pop
scas
aaa
or
push
inc
pop
mov
ja
mov
cmps
outs
push
jmp
push
movs
test
xchg
jle
push
or
pmaxub
or
mov
dec
fild
cmps
aad
dec
jnp
lock
mov
xor
push
gs
dec
sar
int
sub
xchg
sahf
into
rcr
addr16
jb
shr
mov
or
pop
out
mov
je
mov
movs
sub
inc
mov
sbb
jb
mov
and
sub
mov
lahf
in
fisttp
dec
mov
dec
dec
push
ror
js
(bad)
pop
jno
push
push
out
outs
push
stos
mov
push
test
les
mov
push
xchg
add
fsubr
cmp
pusha
sub
scas
and
std
out
xor
loop
mov
or
jb
dec
repz
xor
retf
xor
adc
or
xchg
int3
(bad)
or
inc
pop
mov
push
dec
jge
jmp
or
in
xchg
shl
inc
sbb
inc
mov
fidiv
sbb
test
cs
jb
inc
pop
dec
mov
scas
in
add
xor
xor
mov
xor
fwait
(bad)
mov
nop
adc
mov
sar
pop
cmp
mov
psubsb
dec
je
gs
mov
ret
inc
ror
or
ins
pop
sahf
push
fadd
(bad)
xor
sbb
fst
mov
add
mov
cmp
outs
loop
pop
mov
(bad)
and
mov
mov
mov
jns
adc
and
jl
pop
(bad)
(bad)
mov
je
mov
and
cmp
xor
or
pop
cs
push
xchg
cmp
xor
sahf
adc
fisubr
js
call
lods
shl
pop
inc
mov
movs
and
ret
leave
push
fs
sahf
mov
and
and
sar
jnp
outs
or
test
in
adc
mov
mov
(bad)
jbe
dec
ja
xor
xor
jnp
test
xchg
out
jl
cld
shl
neg
push
cmp
add
out
adc
fwait
hlt
or
sbb
pop
loope
dec
ret
aaa
sub
mov
push
sub
iret
loop
pop
ds
cmp
mov
lds
cmp
loopne
or
rcr
cs
jae
xchg
push
popf
xchg
jae
xchg
xor
shl
cmp
test
and
fdivr
imul
std
inc
shl
js
xchg
das
test
add
lds
dec
lea
add
cwde
cmp
in
mov
xor
mov
fcmovne
lods
imul
pop
fild
cmp
cdq
leave
popf
sbb
cmp
and
xchg
sub
call
and
retf
push
arpl
adc
push
xchg
nop
dec
sbb
shr
mov
es
sub
xchg
push
sub
int3
xor
dec
or
sub
mov
jl
and
and
outs
sub
aad
idiv
neg
out
pusha
mov
push
mov
shl
(bad)
test
in
add
mov
push
out
or
lds
jne
mov
xchg
cmps
add
xchg
in
jne
or
mov
pushf
pop
aad
xor
imul
mov
lock
js
and
outs
out
sub
jbe
push
cmp
mov
xchg
ret
xor
sbb
pushf
les
jne
out
dec
xor
dec
lods
push
and
sbb
inc
loop
fstp
pop
sub
jo
sbb
xchg
mov
rcl
ss
xacquire
clc
sub
add
sahf
retf
in
pushf
(bad)
mov
mov
mov
dec
xchg
mov
xchg
out
cld
inc
push
jae
add
imul
jmp
fwait
sbb
mov
dec
not
xchg
add
sub
add
or
xor
fimul
jge
xchg
mov
outs
and
xlat
mov
mov
data16
aaa
fdivr
mov
push
idiv
mov
or
and
push
inc
xor
dec
(bad)
enter
cmp
(bad)
pop
or
push
es
lods
jp
call
jl
repnz
xor
sub
stos
mov
dec
nop
enter
es
xor
ja
sub
cli
push
pop
icebp
xchg
jg
jecxz
stos
cdq
int3
outs
cmps
jmp
je
sahf
rol
repz
xor
xor
xor
push
ficomp
inc
add
dec
test
les
xchg
sub
sub
(bad)
(bad)
call
push
les
dec
test
xchg
mov
in
ins
pop
je
jno
sbb
(bad)
pop
xor
inc
ins
fistp
push
pop
jecxz
mov
sbb
and
and
cmp
push
pop
repz
shl
std
daa
pop
inc
mov
repnz
lea
cmp
cmp
sub
xchg
ja
gs
out
iret
call
loopne
call
cmp
fcom
out
(bad)
rol
sahf
mov
pop
pop
mov
adc
push
outs
mov
xor
hlt
fs
jmp
add
lock
xlat
jns
push
inc
cli
xchg
scas
(bad)
in
mov
pop
jbe
sub
dec
push
xor
adc
fistp
bound
ja
push
(bad)
(bad)
cmp
imul
retf
loop
adc
(bad)
sub
jl
xchg
xchg
add
pop
test
test
repz
pusha
mov
or
sub
adc
mov
jmp
mov
inc
adc
or
dec
mov
mov
cmp
dec
xchg
fwait
scas
sub
inc
clc
pop
pop
aas
dec
xor
pop
fcom
jo
pop
arpl
cmc
mov
mov
jo
lea
and
fisttp
jne
test
mov
push
jg
xor
add
repnz
dec
xor
add
mov
add
stc
iret
inc
sbb
add
inc
daa
test
repz
ja
popf
aam
cmps
in
retf
mov
and
inc
mov
int
mov
sbb
cmp
push
adc
jmp
adc
aam
(bad)
out
mov
jne
pop
mov
add
pop
aam
add
cmp
loopne
inc
(bad)
jmp
dec
xor
xchg
js
and
into
pop
fucom
push
fld
push
push
repnz
sbb
jmp
mov
repz
add
or
add
lods
sub
enter
fldenv
icebp
out
out
sub
mov
dec
xchg
fcomip
stos
loopne
jp
xor
retf
sbb
fisub
loop
mov
xor
gs
pop
jmp
mov
les
sbb
sahf
sub
dec
adc
(bad)
cmp
push
ss
dec
mov
fcomp
cmp
rcl
dec
ret
adc
mov
push
mov
pop
sti
addr16
add
cwde
xchg
je
sahf
xchg
mov
inc
xor
mov
xchg
sub
stos
shr
mov
mov
dec
push
(bad)
in
rcl
adc
sub
or
push
inc
cmp
sbb
in
jno
fsubr
call
stos
lds
rcl
mov
jb
dec
ss
adc
mov
jo
pop
sbb
mov
inc
cwde
push
hlt
xchg
daa
xchg
inc
loope
repnz
add
(bad)
cmp
outs
or
inc
add
mov
sti
dec
mov
add
xchg
sbb
inc
or
sbb
pop
cmp
pop
imul
pop
jbe
ins
sub
ss
mov
rcl
add
sbb
fsub
and
in
int
adc
aas
push
aad
xchg
loope
xchg
aas
cmps
cld
sub
and
push
dec
jl
lock
ins
(bad)
es
xchg
push
mov
out
icebp
test
mov
add
or
call
push
or
aaa
and
mov
cmp
sub
mov
cli
cmp
jae
xor
iret
scas
and
cmp
cmps
addr16
mov
mov
pop
pop
sbb
aaa
inc
test
push
mov
inc
popf
nop
ss
aaa
js
hlt
leave
jl
test
jp
fdivr
inc
xlat
fmulp
cld
sub
xchg
aad
fcmove
xchg
or
mov
xchg
sub
cld
cdq
(bad)
das
sbb
les
sbb
add
fcom
sahf
fucomp
jbe
popa
mov
(bad)
in
rol
sub
adc
xor
inc
add
xor
cld
pop
fst
inc
cdq
jecxz
add
push
inc
mov
neg
sub
add
fidiv
aad
mov
cld
mov
lea
push
push
rol
in
arpl
(bad)
jb
push
fnstenv
push
mov
sbb
out
fadd
bswap
cmp
test
lods
imul
adc
cs
mov
push
pushf
bound
int
push
mov
xor
dec
mov
loop
test
aam
inc
pushf
pop
jge
iret
ret
mov
xchg
pushf
lahf
fisubr
jbe
or
inc
and
loop
ja
push
ret
xchg
arpl
ret
xor
adc
fadd
or
pop
popa
loope
jbe
ss
add
data16
clc
push
xchg
and
std
addr16
dec
test
pop
or
or
mov
xchg
pop
loopne
jp
cmp
push
xchg
mov
cmps
repz
jecxz
test
scas
cmp
pop
push
fld
(bad)
mov
xchg
ror
mov
out
sahf
mov
mov
dec
cdq
cmp
jbe
xchg
(bad)
stc
dec
inc
sbb
rol
push
scas
cmp
sub
ja
jbe
ja
imul
cmp
and
les
fxch
mov
cwde
pop
imul
push
repnz
dec
sub
mov
lea
jg
jmp
xlat
shl
dec
fst
mov
jno
sbb
setle
mov
movs
mov
enter
mov
add
test
mov
jge
xor
mov
push
push
arpl
push
movs
xchg
inc
xor
adc
stc
inc
xchg
lods
aad
sahf
je
jb
gs
fcomp
retf
not
or
xor
pop
das
and
fdivr
adc
jns
fidivr
push
mov
sub
fcmovb
ja
mov
popf
cmp
jb
mov
leave
pop
or
pop
fs
and
loopne
fdiv
gs
call
cmp
xchg
mov
inc
test
movs
pop
lock
jmp
out
push
data16
ja
cmp
stos
sbb
mov
and
xor
push
icebp
dec
push
xor
hlt
xor
jmp
dec
imul
fisubr
push
inc
outs
imul
xchg
or
in
mov
xor
pop
out
and
outs
jns
cdq
push
and
mov
push
je
stos
imul
inc
shl
add
test
into
add
(bad)
fisttp
stos
cmc
ret
(bad)
pop
cmp
cmp
xor
daa
retf
or
fs
pushf
dec
lahf
jae
sbb
nop
mov
(bad)
fstp
jmp
add
add
mov
sar
mov
(bad)
or
retf
mov
sbb
cwde
call
xchg
jo
jl
les
xor
jno
xor
mov
jbe
push
shr
ficom
ss
push
mov
int3
popa
movs
dec
pop
hlt
push
sbb
xor
add
(bad)
scas
push
dec
sbb
lds
xchg
in
pop
push
inc
fdivr
push
fsubr
int3
stos
loopne
sbb
call
xchg
inc
lods
(bad)
ficomp
aas
aas
fsubr
arpl
ret
sbb
gs
xlat
xchg
mov
push
jno
fdivr
popf
ins
xchg
rcr
(bad)
arpl
cwde
fistp
xor
in
ins
adc
sbb
or
jo
and
pop
mov
loop
cmp
call
xor
mov
add
inc
mov
outs
cmc
aaa
imul
dec
lods
adc
jno
pop
jp
pushf
jmp
pop
leave
xor
icebp
inc
out
push
pop
out
or
int
fcom
popa
cs
cmp
jl
push
inc
std
shl
or
push
xchg
cmp
sbb
xchg
clc
pop
nop
in
sub
sub
dec
cmp
daa
jbe
dec
push
ins
inc
sar
jbe
mov
test
cli
xchg
data16
add
jecxz
pop
sub
gs
arpl
mov
data16
pop
push
xchg
mov
sub
jno
jle
mov
jbe
mov
push
pop
mov
jmp
sbb
xchg
mov
push
icebp
mov
enter
add
popa
jmp
call
add
fdivr
jnp
pushf
sub
retf
cmp
bnd
jne
je
mov
or
pop
xor
or
mov
in
cmp
clc
jle
xchg
add
pop
(bad)
jnp
std
mov
xchg
mov
fisub
out
cmp
mov
int3
aam
and
push
mov
ins
fcom
mov
je
(bad)
(bad)
inc
gs
in
and
(bad)
out
mov
mov
(bad)
dec
in
movs
idiv
or
add
stos
mul
jnp
xchg
pop
xor
inc
push
push
out
push
push
in
test
xchg
mov
aaa
xchg
pop
inc
ja
jb
cmp
xor
sti
mov
retf
movs
in
fist
mov
and
adc
dec
clc
pop
fild
sbb
movs
sub
sub
xchg
retf
pushf
xor
xor
pop
mov
repnz
gs
stos
sbb
call
(bad)
jl
cli
imul
mov
sub
sbb
xlat
sub
mov
mov
aam
js
in
mov
(bad)
fidivr
sub
or
fwait
ret
mov
push
sub
pop
fdivr
call
push
in
sti
dec
jge
lods
je
jg
mov
push
in
lea
and
movs
sahf
imul
or
icebp
jmp
div
stos
and
or
or
add
call
popa
sbb
stos
test
push
hlt
xor
pusha
add
jle
inc
(bad)
dec
pop
hlt
xor
outs
sbb
sub
gs
dec
mov
popa
in
stc
inc
jns
lea
xor
mov
mov
arpl
hlt
xchg
inc
daa
es
adc
call
daa
nop
sar
jb
dec
pop
sbb
es
icebp
sti
lds
sbb
or
retf
xchg
scas
xchg
aad
and
sbb
lahf
aam
lods
les
lods
pop
sti
and
and
push
pop
xchg
std
xchg
sub
mov
lods
lock
mov
js
shl
jns
xor
cld
xor
pop
mov
xchg
aad
adc
sub
pop
cmc
int3
and
sub
mov
pop
add
push
nop
clc
ja
outs
inc
jecxz
call
xchg
dec
sbb
sub
push
sbb
jb
out
iret
call
stos
jge
pop
mov
out
pop
inc
mov
dec
and
xlat
add
inc
(bad)
out
mul
(bad)
mov
xchg
idiv
add
lea
xor
aas
mov
inc
mov
shl
call
mov
repz
push
sbb
jecxz
and
pushf
lahf
out
sbb
pop
push
jl
push
dec
push
mov
sub
cwde
cmc
sbb
div
repz
cmp
ja
add
adc
mov
es
mov
cmp
mov
mov
or
mov
mov
ss
aaa
jl
cld
push
push
sub
cmp
jge
jmp
push
ja
(bad)
adc
pop
ins
or
pusha
xchg
and
jae
dec
or
cwde
lods
test
test
push
cwde
add
xchg
pop
rcl
data16
sqrtps
ds
out
sbb
xor
cld
xchg
std
dec
les
in
sar
es
(bad)
pop
stc
push
xchg
retf
mov
push
sbb
(bad)
arpl
jae
arpl
mov
sbb
ja
and
inc
inc
dec
or
fldenv
int
inc
leave
xchg
aas
popf
mov
stos
in
ret
fadd
ins
sub
loop
mov
push
mov
mov
bnd
mov
(bad)
loop
pop
aam
dec
xchg
retf
rcr
stos
lods
fiadd
aad
aaa
push
(bad)
lahf
stc
out
sbb
dec
or
stos
movs
jle
xor
jl
cmp
cmps
jmp
mov
ror
in
ret
mov
enter
pop
stos
das
int3
add
mov
scas
(bad)
dec
dec
xor
je
in
popa
scas
jecxz
sub
cs
fisttp
cdq
icebp
cmp
push
push
push
call
fidiv
jb
ror
cmps
xor
sub
add
test
adc
pushf
push
or
cmp
jne
shl
ins
mov
enter
(bad)
cmc
fisttp
es
iret
pop
and
daa
sti
clc
addr16
sub
std
and
out
push
add
mov
pop
repnz
out
inc
or
pop
add
stos
adc
push
stos
mov
inc
ds
jmp
adc
je
les
dec
clc
push
leave
add
adc
loope
cmp
cmp
or
imul
inc
and
aam
mov
gs
or
repnz
fwait
and
(bad)
hlt
ret
fsub
mov
popa
mov
mov
fist
lock
sub
frstor
xor
les
ror
jge
sub
je
lea
sbb
jae
mov
cs
imul
mov
repnz
push
xor
jge
xchg
out
pop
cdq
pop
push
lds
sti
inc
mov
cwde
cmp
add
dec
in
(bad)
dec
shr
test
cmp
jne
mov
sbb
add
pop
xlat
clc
fild
int3
nop
ret
push
xchg
lods
out
jecxz
lds
push
(bad)
or
mov
jns
dec
bsr
inc
icebp
dec
mov
repnz
dec
xor
leave
mov
cmp
adc
sahf
mov
outs
mov
lock
out
jae
xchg
je
add
pusha
(bad)
xor
loopne
jno
or
retf
stc
xchg
pop
jnp
shr
sti
aam
adc
inc
pushf
nop
pop
mov
jb
pop
pop
loop
jmp
add
inc
or
mov
dec
test
and
mov
std
sub
xor
out
or
retf
cmps
xor
xchg
cmp
cs
mov
sub
cmp
pop
call
lahf
rcr
pop
cld
daa
mov
pop
int3
in
xchg
xchg
inc
jmp
mov
mov
loop
sub
ss
mov
je
enter
and
inc
jae
or
pushf
es
out
mov
pop
cmp
popf
and
in
ret
and
pop
dec
hlt
(bad)
pop
ins
sbb
cwde
add
call
test
push
shl
mov
dec
fnsave
push
out
xchg
mov
pop
jge
dec
xchg
rcl
and
stos
leave
fldenv
movs
mov
ror
or
hlt
cli
out
dec
mov
cmp
xchg
jb
xor
fwait
idiv
inc
cld
xchg
ss
sub
mov
xchg
repz
mov
int
mov
jnp
xchg
call
jnp
add
retf
mov
pop
pop
clts
mov
cld
aas
jp
push
dec
out
push
js
pop
jo
iret
lods
push
add
mov
ret
push
inc
gs
xor
sub
jmp
and
push
cmp
fsubp
mov
aas
enter
push
fisub
add
or
in
mov
fnstenv
push
push
mov
enter
mov
add
aam
std
shr
inc
xlat
xchg
xlat
xchg
idiv
xchg
(bad)
cmp
xchg
adc
jae
pop
xchg
inc
test
mov
popa
rol
jl
and
add
lock
add
push
out
in
fnsave
ds
adc
cmp
mov
fistp
scas
mov
mov
sub
xchg
jmp
xchg
dec
hlt
scas
fimul
inc
jno
std
mov
cmps
dec
adc
fcomip
xchg
dec
mov
cwde
push
cmp
pop
enter
adc
mov
or
add
jo
push
push
xchg
inc
jp
adc
mov
neg
(bad)
jmp
xor
and
xor
test
mov
xchg
ins
adc
push
lock
mov
cmp
push
mov
inc
mov
into
cli
fisub
leave
ja
sbb
imul
ja
movs
(bad)
cmp
jp
jmp
(bad)
jecxz
xchg
mov
mov
dec
add
push
loopne
push
cs
sub
sub
xchg
mov
fbld
jecxz
retf
repnz
call
int
fld
xchg
cmp
(bad)
cmp
and
xor
mov
idiv
(bad)
pop
or
jo
(bad)
pop
and
and
outs
xlat
xchg
js
cmp
push
cs
out
out
xor
mov
xchg
and
dec
mov
cmps
jbe
and
jnp
push
inc
pop
movs
mov
les
aas
cwde
enter
mov
sub
pop
les
jo
lock
ins
push
add
hlt
xchg
test
aas
popf
inc
pop
push
arpl
push
das
ds
mov
cmp
ins
sbb
dec
cmp
leave
div
fidiv
out
adc
outs
jp
cmp
ins
aas
fucomp
fs
dec
data16
cwde
int3
xchg
sti
push
push
ret
loop
dec
dec
in
fisub
dec
or
aad
xor
ds
sahf
mov
call
mov
pop
add
xchg
push
es
pminub
dec
rol
cld
cli
jbe
cmc
stc
xor
scas
xor
inc
jl
or
jecxz
mov
dec
sbb
inc
inc
jo
inc
shr
jmp
xor
repz
(bad)
ja
ret
mov
xor
pop
and
dec
cmp
loopne
and
out
mov
lock
les
loop
ffreep
add
jo
jecxz
push
sbb
inc
(bad)
pop
in
dec
inc
js
adc
mov
push
sbb
jg
stos
mov
mov
(bad)
call
call
popa
or
loop
stc
and
(bad)
cmp
lock
dec
or
adc
xor
call
fild
lds
movs
push
jp
pop
cmp
dec
or
sbb
add
fisub
cwde
mov
mov
pop
outs
xlat
adc
sar
add
ret
int3
rcl
inc
fisub
add
adc
dec
mov
out
jns
mov
cmc
mov
sbb
cli
mov
ss
push
test
js
cli
dec
and
or
mov
ins
sub
xchg
add
call
outs
cdq
outs
test
in
sbb
mov
cmc
in
mov
mov
inc
mov
mov
cmp
jbe
mov
xor
mov
jle
retf
add
call
or
rcl
gs
jbe
jl
scas
dec
leave
pop
sub
dec
js
mov
pushf
mov
cmp
or
sbb
(bad)
sbb
or
not
mov
pusha
test
jl
imul
(bad)
mov
xchg
push
jnp
fwait
dec
dec
hlt
xchg
loop
xchg
and
cmps
xchg
aad
cmp
stc
jae
clc
add
in
sub
dec
in
in
mov
jns
enter
inc
cmps
neg
jp
and
pop
cdq
int
fidivr
inc
(bad)
(bad)
cmp
inc
das
sub
adc
(bad)
popf
push
scas
icebp
xchg
cwde
add
jb
xchg
(bad)
js
std
dec
lods
les
nop
mov
push
cli
pop
pop
cdq
iret
aaa
stos
ds
xor
push
mov
push
adc
jl
inc
jne
jnp
cmp
xchg
lds
dec
or
sbb
jo
in
(bad)
sahf
div
(bad)
xchg
add
xor
sar
aad
sub
pop
jbe
sti
hlt
jp
mov
fistp
jmp
add
adc
inc
xor
or
mov
icebp
sub
add
pop
scas
cdq
aaa
xchg
mov
mov
or
dec
xchg
mov
jb
push
xchg
cmps
jns
sar
lods
pop
sub
inc
cmp
sbb
mov
mov
xchg
xor
xchg
sbb
pop
jns
mov
outs
pop
push
and
lods
mov
sub
outs
inc
adc
add
imul
idiv
dec
mov
sub
das
lock
jb
ret
inc
jmp
ficom
test
sbb
xor
mov
rol
push
out
aam
fisubr
sub
out
fcomi
into
frstor
jns
cmp
fwait
xchg
lods
(bad)
adc
push
sbb
scas
sar
pop
out
or
adc
sbb
shl
in
int3
out
jb
add
das
xchg
add
mov
(bad)
adc
arpl
call
fld
pop
inc
adc
call
aam
(bad)
(bad)
int
mov
xchg
push
xchg
xor
scas
mov
dec
xor
or
fnstcw
stc
xor
jp
xchg
jecxz
shr
add
lods
dec
adc
push
mov
cmc
xor
lahf
jg
xchg
cmp
call
xor
dec
push
in
fiadd
jp
mov
mov
repnz
loope
mov
mov
xchg
into
or
je
mov
xor
xchg
mov
ds
add
addr16
in
mov
xlat
jmp
stos
pop
retf
adc
push
pop
fbstp
xchg
pushf
aam
out
dec
push
pushw
add
mov
dec
cdq
jo
mov
cmp
clc
mov
cmp
lods
mov
lock
shr
mov
and
xor
nop
in
in
add
cmp
sub
dec
xchg
loopne
mov
aam
cmp
sbb
mov
fcom
(bad)
mov
pop
mov
adc
iret
outs
mov
mov
out
pop
add
and
stos
pusha
cmps
add
je
scas
sub
add
xchg
cmps
inc
fld
fstp
addr16
icebp
fstp
xchg
jl
int
(bad)
xchg
mov
add
dec
xor
iret
movs
push
pop
aaa
sub
mov
in
sbb
xor
inc
outs
push
cmp
ret
cmp
jl
mov
(bad)
and
xchg
daa
cdq
xchg
ins
cmp
lods
stc
add
mov
adc
adc
adc
rol
pop
mov
adc
cmp
aas
loopne
dec
push
aaa
push
in
dec
daa
and
(bad)
cmps
inc
adc
outs
mov
popa
cmp
inc
or
fidiv
adc
repnz
xor
xchg
push
inc
sub
push
popf
mov
ins
call
mov
inc
mov
pop
data16
add
add
xor
pushf
dec
dec
pop
or
inc
test
jbe
sbb
xchg
fmul
lods
clc
retf
mov
pop
pushf
inc
push
scas
repnz
add
test
xchg
mov
stos
adc
or
fdivrp
mov
ja
cld
retf
out
adc
rol
inc
fistp
sbb
push
adc
call
lods
xchg
addr16
pop
inc
adc
retf
(bad)
mov
shr
popf
dec
push
sti
pop
dec
fidiv
sbb
(bad)
fldcw
shr
ins
sbb
imul
push
cmp
outs
and
pop
or
inc
into
gs
push
sbb
sub
fimul
xor
cwde
adc
xchg
or
out
jp
js
std
mov
xor
fsubr
stos
test
pop
inc
mov
shl
les
cmp
aaa
mov
(bad)
cmp
cmp
out
inc
stos
popa
in
rcr
or
cmps
shld
xor
xchg
pop
xor
test
outs
ss
mov
jle
jno
rcl
test
mov
stos
cld
jge
xor
in
inc
dec
out
add
ficomp
movs
cmps
es
retf
jae
loope
sbb
push
ja
jge
add
(bad)
das
push
jo
and
fisub
sub
pop
xor
dec
leave
xchg
xchg
retf
in
outs
jnp
push
int
ret
das
push
repz
adc
les
(bad)
pop
mov
and
add
adc
mov
(bad)
bnd
cmp
fcomp
sbb
adc
xchg
jmp
test
inc
jnp
xor
ja
rol
repnz
jg
mov
sbb
(bad)
xor
xor
fistp
sbb
sbb
fs
adc
bound
aad
cmp
pushf
mov
mov
and
retf
mov
ss
push
scas
ret
movs
and
mov
popa
fldenv
xchg
sti
cmp
cmp
sub
mov
daa
repz
jle
inc
cwde
adc
jo
scas
add
jno
shr
jl
nop
ds
xor
lahf
mov
in
loope
ins
sub
cmp
cmp
add
push
call
les
arpl
xchg
jle
mov
aas
mov
cmp
and
outs
stos
ins
jg
jae
and
popf
stos
cld
fisub
ins
mov
ins
mov
icebp
in
mov
dec
add
cmps
pushf
mov
mov
sbb
call
jo
cmp
jb
and
movs
cld
out
adc
int3
mov
and
pop
in
push
mov
cmps
shl
adc
loop
inc
push
pop
inc
or
dec
cmp
in
ins
xchg
stos
std
cmp
in
jecxz
ret
outs
repnz
jl
dec
xor
(bad)
sub
lods
ret
ss
inc
shl
cdq
mov
out
cmp
mov
adc
repnz
mov
mov
(bad)
aad
jmp
int
lahf
fsubr
rcr
xchg
push
or
inc
repz
mov
fsub
sbb
cmp
pop
push
mov
data16
into
push
(bad)
scas
mov
cdq
or
lea
cmps
pop
pop
test
jb
imul
xchg
add
dec
pushf
mov
xchg
popa
mov
or
push
sbb
push
cdq
cmps
outs
xor
lds
dec
sti
pop
cmp
sahf
pop
mov
jbe
add
sbb
in
xchg
push
rcr
jbe
gs
dec
cmp
xchg
jmp
lds
(bad)
jnp
cmps
push
adc
arpl
push
popa
pushf
test
call
ret
pop
cli
pop
xor
loopne
aad
outs
hlt
mov
pop
or
xchg
sahf
sub
retf
pushf
push
inc
pop
fcomp
call
popf
push
out
enter
call
or
pop
lahf
test
leavew
cmp
cwde
lods
fdiv
mov
repz
xchg
imul
xchg
pop
rcr
and
pop
ss
push
push
jne
retf
ffree
xchg
add
xlat
cdq
pop
es
pushf
rcl
cmc
pop
inc
add
ror
dec
mov
xchg
jmp
ja
adc
push
mov
ja
sti
xor
dec
loope
fnstsw
(bad)
stos
rcr
push
or
fist
mov
push
add
inc
xchg
pusha
xor
cmc
xchg
dec
int
hlt
ds
and
jb
xchg
lods
pop
test
outs
es
into
dec
icebp
(bad)
call
mov
loop
(bad)
stc
xchg
scas
or
ja
push
stos
ins
cmp
dec
dec
mulps
xchg
xchg
adc
xlat
mov
and
jbe
adc
into
xlat
dec
push
adc
jb
(bad)
enter
and
jecxz
popa
and
das
push
sahf
stc
jmp
mov
xchg
psrlw
inc
(bad)
into
js
mov
sub
push
xchg
scas
adc
sub
test
sbb
mov
arpl
mov
push
or
dec
popa
sub
inc
test
sub
push
xor
sub
sbb
dec
stc
sahf
xor
(bad)
pop
pop
mov
cwde
imul
ja
addr16
adc
sbb
lahf
retf
mov
ins
jae
pop
dec
mov
loope
test
inc
cmc
shl
sub
movs
les
adc
push
lahf
mov
mov
mov
pop
in
nop
mov
mov
adc
sub
(bad)
arpl
push
ja
push
fdivp
cdq
and
or
xchg
jg
cmp
push
arpl
jmp
mov
dec
and
xlat
mov
sub
scas
mov
ds
cmovne
adc
xchg
std
pop
mov
inc
push
ror
adc
sub
outs
push
adc
test
xlat
adc
mov
cdq
mov
test
test
inc
mov
xor
pop
test
out
push
mov
and
xor
(bad)
dec
ss
test
test
adc
xchg
lea
jns
adc
stos
jnp
lds
cdq
fiadd
aam
pop
mov
sbb
xchg
adc
and
sub
add
mov
int3
int3
sbb
cld
mov
mov
fadd
outs
xchg
movs
push
and
call
call
add
mov
xchg
ret
fild
aas
inc
jae
push
add
pop
jno
test
xor
or
sub
pop
retf
es
push
scas
outs
mov
shl
inc
into
(bad)
fucomi
stos
pushf
or
cli
les
jmp
ror
add
push
clc
out
push
xchg
sub
in
stc
or
stos
jns
add
(bad)
mov
push
and
iret
jb
loopne
das
pop
(bad)
in
mov
mov
push
dec
aam
outs
pop
mov
pop
aaa
cmp
ret
ss
pop
mov
repz
push
mov
aas
dec
bswap
add
movs
jno
adc
pop
les
sbb
outs
mov
pop
cmp
jmp
aam
xchg
in
or
add
xchg
sub
call
(bad)
stc
jbe
stos
cmp
xor
je
imul
mov
push
ror
scas
jp
movs
cmp
and
call
fisub
test
lds
mov
mov
test
pop
fs
push
or
jmp
mov
sub
ja
sahf
add
jnp
mov
sbb
addr16
dec
aam
inc
xchg
mov
call
aam
sbb
scas
sar
in
xchg
and
imul
pop
and
dec
int
popa
fisttp
push
cmp
or
ror
jnp
adc
lea
inc
add
shl
or
pop
(bad)
pop
cmp
test
in
cld
call
aas
adc
rcl
jnp
mov
inc
cld
out
lds
and
int
adc
cmp
test
push
es
jge
lock
xchg
jae
test
sbb
ja
push
pop
(bad)
cmp
pop
das
cmp
and
sbb
sti
cmovs
(bad)
adc
(bad)
sub
inc
pop
test
mov
aaa
rcr
push
jno
jle
aas
outs
call
scas
and
add
xor
out
pushf
inc
lods
push
loope
xchg
popf
mov
jp
les
stos
das
call
sub
xor
stos
rol
and
xor
call
aad
lods
int3
xor
cmp
push
adc
dec
mov
fisttp
push
push
daa
mov
ins
fnclex
cmps
sub
jmp
js
adc
mov
daa
call
fstp
xor
scas
outs
add
test
cs
jmp
jmp
pusha
loope
mov
pop
imul
call
dec
cdq
aas
clc
dec
lods
rol
dec
xchg
xchg
inc
lds
sub
addr16
sahf
inc
cmp
mov
mov
cli
in
jns
loope
movs
ds
push
push
lods
pop
add
or
adc
fnstcw
lea
xor
and
rcl
dec
div
add
fst
push
add
fistp
dec
mov
out
outs
xchg
mov
mov
sub
or
mov
js
arpl
mov
cmp
xchg
add
ret
inc
shl
aam
push
sub
xor
mov
inc
adc
or
adc
sub
ret
cs
push
dec
lock
sub
cmp
pop
cmps
ror
and
les
mov
xor
dec
mov
jmp
sub
pop
es
inc
ret
xor
popa
xor
mov
and
sub
fnsave
cmp
stos
aad
jbe
push
xor
call
mov
mov
adc
das
jnp
nop
mov
call
sub
(bad)
adc
sbb
adc
mov
retf
pusha
fcom
add
adc
push
add
mov
fdivr
(bad)
jnp
mov
mov
cmps
(bad)
retf
popa
imul
movs
ja
mov
push
jle
mov
xchg
mov
in
fsub
push
sbb
inc
pop
rcr
and
mov
mov
inc
sti
sub
and
fiadd
xchg
popa
sub
or
jge
pop
out
mov
adc
mov
mov
imul
push
push
cmp
inc
(bad)
cmp
cmp
outs
dec
movs
sbb
(bad)
aam
pop
shr
lahf
ret
neg
mov
mov
pop
loope
mov
pop
idiv
push
jbe
xor
cld
aaa
ret
adc
xor
loopne
fdivr
sar
add
jge
jp
scas
mov
sub
push
ret
pop
fsub
adc
jae
cmc
xor
cmps
sbb
mov
shl
rcl
call
hlt
cmp
div
stos
lods
jmp
cmp
or
sub
dec
stc
mov
cmps
push
jae
loop
sahf
rcl
test
sbb
push
xor
and
(bad)
or
std
movs
pop
mul
and
and
into
adc
inc
xchg
pop
jle
jl
inc
je
inc
jmp
jns
movs
arpl
xchg
fidiv
cdq
xor
cmps
pop
jnp
dec
push
push
fbstp
pop
inc
cwde
adc
loopne
add
add
mov
mov
xchg
dec
cmp
jnp
mov
mov
in
das
leave
adc
inc
mov
out
push
nop
cmps
mov
loope
gs
mov
movs
in
xor
outs
in
fsub
(bad)
mov
push
jecxz
inc
xor
test
jge
push
jbe
adc
inc
cmp
mov
movs
aas
addr16
adc
leave
sbb
push
adc
pop
xor
mov
adc
sbb
push
cmp
jne
mov
(bad)
xchg
idiv
xor
add
call
pop
pop
popa
cmps
outs
push
test
and
in
and
pop
ror
pushf
push
xor
cld
dec
shl
xchg
cmp
cdq
mov
mov
loopne
jle
mov
ins
popf
in
sar
add
mov
mov
jge
inc
mov
mov
shl
xchg
retf
mul
inc
stos
fld
cmc
call
or
out
cmp
and
mov
stos
or
add
mov
mov
sbb
or
in
ret
popa
pop
push
les
push
cdq
mov
push
mov
dec
cdq
(bad)
daa
jmp
ret
jp
(bad)
cmps
fild
dec
jnp
cmp
out
and
mov
xchg
mov
sbb
inc
jg
mov
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
mov
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
mov
mov
mov
lea
mov
mov
movzx
mov
shl
mov
dec
mov
movzx
shl
dec
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
shl
lea
cmp
jae
mov
mov
add
loop
mov
xor
mov
mov
add
mov
xor
cmp
je
movzx
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmp
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzx
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmp
lea
mov
jle
mov
sub
mov
movzx
mov
shl
mov
lea
mov
and
cmp
lea
mov
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
cmp
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmp
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmp
mov
jg
mov
jmp
cmp
jg
sub
jmp
sub
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmp
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
sub
sar
mov
mov
cmp
lea
mov
je
xor
cmp
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
mov
jmp
sub
sub
mov
mov
shr
mov
sub
mov
mov
add
mov
mov
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmp
mov
jg
add
cmp
mov
jle
mov
mov
shl
mov
lea
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmp
ja
cmp
je
shl
movzx
shl
inc
or
shr
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
mov
mov
mov
mov
mov
add
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shl
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
inc
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmp
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
