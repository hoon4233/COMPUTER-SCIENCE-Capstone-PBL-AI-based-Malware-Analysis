sbb
add
mov
cmps
or
je
jmp
adc
sahf
js
sbb
cmps
fist
mov
mov
imul
xchg
sbb
in
out
loop
mov
addr16
mov
jg
mov
dec
(bad)
call
pop
fwait
shl
cmps
inc
mov
ss
sub
lea
cmps
mov
test
cmp
and
or
in
mov
push
mov
cmp
add
push
into
or
movs
in
jno
xchg
mov
xor
in
jnp
mov
inc
jg
retf
outs
test
mov
mov
idiv
pop
mul
inc
dec
retf
fisubr
sub
mov
fiadd
inc
inc
xor
fldcw
sub
in
pusha
dec
sbb
sub
mov
(bad)
outs
out
adc
mov
or
add
call
lods
cld
scas
(bad)
ror
push
pop
mov
ds
inc
inc
xor
js
and
fcmovne
test
mov
jne
dec
imul
fistp
push
mov
mov
lea
inc
aam
pop
add
addr16
aad
mov
mov
int3
dec
xchg
jle
mov
jmp
inc
sbb
or
adc
mov
and
fld
inc
fstp
cmp
pop
pop
aaa
dec
xor
mov
adc
dec
or
cli
xchg
xor
sub
call
ins
shl
xchg
pop
mov
jg
scas
popf
mov
aam
out
sbb
xchg
xor
imul
icebp
inc
jns
xor
(bad)
cmps
mov
dec
sub
mov
das
xchg
xchg
icebp
adc
dec
or
pop
mov
adc
sbb
cmp
mov
out
xchg
jb
fstp
ds
ror
(bad)
daa
xchg
pop
and
clc
xor
mov
xor
adc
inc
jg
jmp
popa
fcomip
pushf
rol
xchg
shr
pop
sub
inc
hlt
rcr
cdq
test
(bad)
xlat
mov
fbstp
fstp
xchg
loopne
pop
movs
fsub
xchg
adc
mov
adc
sbb
and
sbb
ins
in
in
out
lock
ins
int
adc
add
xchg
push
sub
cmp
fsubr
jmp
punpckhwd
jne
retf
imul
sub
popf
std
std
in
popa
enter
pop
retf
and
mov
jne
cmp
int3
mov
int3
outs
(bad)
adc
in
lds
dec
aad
and
mov
xchg
push
xchg
fimul
add
fistp
xchg
cli
ret
fnstcw
(bad)
push
mov
mov
int3
(bad)
jp
mov
fwait
nop
dec
and
mov
pop
add
pushf
pop
mov
lahf
imul
shl
sub
add
sub
ror
aam
ja
test
gs
out
sub
(bad)
and
and
int
mov
jle
lea
mov
add
mov
push
pop
in
xchg
int
xchg
sub
xor
cmp
mov
(bad)
cmc
ss
ins
test
jno
mov
outs
add
xchg
fcmovnb
fs
leave
add
sub
in
pop
and
dec
es
inc
sub
sub
mov
popf
out
pop
aad
jns
int
(bad)
xchg
(bad)
mov
pop
iret
xlat
imul
data16
(bad)
pop
ja
shl
jno
xchg
sbb
outs
ficom
dec
fwait
add
pop
test
retf
pop
push
dec
fiadd
cmp
push
retf
add
das
in
aaa
or
sbb
push
push
jmp
and
add
mul
push
xchg
lock
cwde
mov
fwait
in
jbe
mov
and
jg
xchg
ret
rol
(bad)
mov
cmp
cmp
ss
std
std
les
sub
push
xor
outs
or
test
sbb
pop
adc
adc
inc
cmp
mov
mov
or
mov
out
repnz
jne
xor
add
cld
jo
lods
imul
sar
or
xor
aas
dec
pop
mov
and
push
cmp
pop
push
mov
(bad)
out
sbb
dec
pop
pop
mov
jg
cmps
or
push
xchg
test
pop
dec
jp
adc
push
or
dec
jae
add
clc
push
push
add
int
icebp
mov
pop
sbb
jbe
cmp
pop
je
jb
inc
adc
xor
add
mov
hlt
mov
rcl
addr16
mov
push
test
fld
arpl
loope
ficom
xor
jne
test
jnp
icebp
inc
push
cmp
inc
push
jle
push
in
cmps
xor
jecxz
mov
adc
xor
xor
and
into
js
fs
sbb
scas
out
pop
fistp
mov
stc
movs
mov
fsubr
and
aaa
stos
mov
jne
cdq
gs
mov
mov
cmp
jp
rcr
xchg
cli
sbb
fmulp
mov
pop
adc
retf
and
push
add
sbb
daa
xor
inc
add
outs
pushf
ja
pop
sahf
std
cmc
mov
retf
ja
mov
inc
mov
clc
data16
jb
inc
dec
clc
mov
dec
aad
nop
xor
clc
push
fstp
and
adc
sub
xor
cdq
popa
and
(bad)
repz
rcr
xor
cmp
in
jp
jl
inc
xor
mov
retf
sub
cmp
adc
adc
xchg
hlt
stos
or
push
sar
pushf
test
clc
cvttps2pi
fcmovnu
xchg
dec
loop
push
and
cmp
mov
mov
pushf
sbb
test
mov
push
and
jae
inc
mov
imul
leave
mov
add
jae
retf
inc
cmps
movs
js
in
cmc
repz
test
dec
in
xor
ins
ret
arpl
das
mov
pop
popa
pop
or
es
adc
mov
cli
clc
outs
retf
int3
or
xchg
add
xchg
sub
sbb
clc
sbb
add
pop
pop
mov
inc
push
js
call
push
shl
xchg
mov
movs
out
and
fcmovne
mov
ja
sub
mov
jne
ins
dec
out
xchg
pop
enter
popf
mov
shl
(bad)
call
mov
xchg
fcom
loope
or
into
mov
push
mov
sbb
scas
jns
cmp
das
aam
(bad)
scas
cmp
add
sbb
jo
mov
jne
mov
fisubr
add
mov
cld
sub
jns
(bad)
adc
push
js
cdq
adc
push
imul
pop
je
test
push
ins
aaa
fwait
adc
or
mov
gs
xlat
bound
adc
(bad)
sti
jmp
mov
(bad)
aad
adc
out
pop
js
adc
mov
int3
jecxz
mov
pop
jbe
dec
inc
inc
movs
inc
in
inc
xlat
push
jns
fwait
xor
jno
or
push
xor
mov
cmp
push
xor
jge
adc
mov
pop
inc
adc
dec
jge
int
push
mov
scas
stc
or
bound
mov
pushf
push
cmp
cs
in
lods
inc
pop
dec
inc
dec
mov
fst
scas
inc
ins
jecxz
das
jns
xor
xchg
xchg
pop
lea
mov
stos
lahf
ret
dec
scas
ins
icebp
inc
jae
push
mov
loope
jge
lods
daa
jnp
shl
arpl
cmp
jg
cld
xbegin
mov
mov
loop
push
loope
xchg
lock
cmps
(bad)
data16
ret
aad
jmp
fmul
or
clc
les
sub
repnz
out
repz
mov
xchg
cmps
ss
mov
dec
jo
es
clc
inc
sbb
popa
push
into
fs
push
lods
and
push
(bad)
aam
mov
or
in
mov
mov
dec
scas
xor
sahf
xor
push
fwait
mov
xchg
pop
pop
and
rcr
dec
inc
ds
cmp
cld
pop
add
cmp
jp
push
cmp
outs
push
cwde
ins
sub
movs
into
adc
add
int3
cmp
and
cli
mov
icebp
inc
(bad)
js
mov
inc
mul
xchg
sar
xor
push
imul
bound
jmp
jecxz
inc
mov
fnstcw
and
loop
inc
sub
inc
retf
dec
push
sub
popa
ins
and
jecxz
movs
jnp
mov
pop
jp
pop
popa
mov
xchg
pop
(bad)
sub
inc
iret
aaa
adc
pop
add
sar
xchg
or
mov
ffree
ins
rol
push
pop
fisttp
mov
test
push
jmp
imul
push
xor
dec
mov
or
dec
int3
test
int
adc
or
sub
inc
sub
movd
xlat
bound
or
inc
inc
jp
dec
sbb
test
test
int3
lock
jecxz
mul
clc
xchg
aad
ja
sahf
fcom
mov
lahf
sub
test
push
add
sbb
cmc
pusha
jno
inc
lahf
sub
mov
test
jmp
jae
aas
test
mov
in
sub
sub
fwait
hlt
retf
sub
push
lahf
jp
repz
cwde
push
sub
into
fsub
mov
xchg
and
xor
cmp
rol
ret
shl
clc
pop
jne
push
out
mov
cmp
dec
mov
mov
cmp
sbb
xor
mov
push
xchg
retf
cmps
out
mov
add
inc
(bad)
out
cs
adc
xlat
or
aam
adc
sbb
inc
std
aam
cwde
rcl
fcomp
cwde
jp
bound
xchg
in
fcmovbe
dec
cmp
and
fdivr
fs
outs
sbb
bound
push
das
xor
inc
daa
cmps
pop
add
xchg
retf
sub
push
hlt
mov
cmp
mov
and
fwait
inc
xchg
movs
loopne
cmp
mov
inc
xchg
pop
mov
pop
cmp
movs
xor
push
mov
pop
inc
into
scas
leave
mov
bound
ins
in
mov
imul
mov
cdq
adc
jne
outs
pop
adc
jp
sti
rol
inc
ins
push
(bad)
nop
jae
mov
xchg
lds
shl
daa
or
and
lds
int3
and
(bad)
pop
pop
push
jb
out
add
nop
jo
jmp
xlat
js
rol
mov
sbb
mov
inc
push
fisub
and
je
out
pop
xchg
push
je
pusha
pop
inc
jns
shr
fdivr
sbb
mov
mov
and
inc
mov
add
jp
adc
(bad)
jmp
inc
lods
cmp
inc
or
dec
clc
jecxz
(bad)
dec
test
retf
movs
mov
out
aaa
xor
cs
mov
paddusb
mov
and
stc
push
pop
fbstp
adc
lods
mov
jae
out
adc
stc
js
jns
jl
arpl
and
leave
es
pminsw
and
cmc
mov
pop
movs
adc
xchg
lods
fbstp
xor
pop
dec
stc
xchg
dec
mov
scas
add
fdivr
cdq
pop
mov
or
pop
call
ror
pop
aaa
in
rcr
retf
jmp
or
shl
xchg
dec
in
pop
xor
ja
into
hlt
sbb
sbb
mov
les
lods
sbb
jb
das
in
retf
imul
add
ja
xor
in
(bad)
add
aaa
in
and
ja
fcom
inc
adc
sub
push
xor
loopne
stc
pop
popa
test
or
pop
or
fld
out
fdivrp
int3
aas
mov
in
addr16
xchg
jp
jmp
into
dec
aam
test
test
cs
fucomip
mov
(bad)
out
sub
mov
xlat
out
jb
xchg
out
bound
or
mov
fadd
(bad)
call
and
rol
out
jl
lods
pusha
pop
fidivr
nop
dec
(bad)
xchg
add
mov
xor
and
mov
xchg
int
mov
push
or
push
fs
xor
aad
mov
das
mov
sbb
jl
mov
imul
mov
aad
sahf
inc
push
sub
sti
fisub
aam
test
cmps
cld
popa
cmc
cmps
mov
push
movs
pop
push
das
mov
test
repz
pop
pop
stc
loope
clc
ss
daa
cdq
jecxz
jae
xor
lahf
les
jle
jne
adc
push
pusha
add
jnp
retf
and
add
jg
push
and
movs
mov
and
popf
cmps
gs
jno
std
pop
mov
xor
mov
and
add
mov
mov
setbe
jge
out
clc
in
add
xchg
gs
sub
test
enter
lods
mov
lock
(bad)
jg
ss
mov
das
xchg
test
mov
iret
movs
stos
fucomp
xor
fild
mov
mov
sub
adc
stos
xor
jno
xchg
repz
or
sahf
fsub
pushf
arpl
adc
cmps
test
aad
push
clc
mov
dec
sbb
adc
mov
mov
lods
jnp
cmps
or
popf
mov
out
int3
rcr
adc
sbb
lds
fmul
(bad)
bound
aam
push
out
add
jp
dec
xchg
xor
retf
sbb
sbb
pop
inc
fs
mov
sbb
fwait
shr
rcr
dec
xchg
inc
mov
dec
enter
loope
mov
inc
addr16
sbb
inc
jl
jno
xchg
mov
sub
xchg
stos
mov
sbb
gs
pop
add
jmp
push
cmp
mov
mov
ins
mov
dec
pop
repnz
ins
js
pop
mov
jp
pop
data16
leave
fisubr
jp
inc
movs
fldcw
cmp
push
pop
xchg
jl
and
aaa
scas
mov
rcr
fmulp
in
jmp
jbe
cmp
jae
not
xor
adc
sbb
cld
pop
outs
jg
or
ret
fidivr
mov
xchg
jmp
sbb
ror
mov
cdq
or
mov
jne
ds
xchg
fistp
test
call
jg
mov
lods
mov
mov
or
bound
test
cmp
cmp
fldcw
xor
aam
dec
pop
xchg
sbb
add
popf
(bad)
xchg
pop
mov
mov
xchg
pop
js
mov
test
xor
sbb
xchg
and
xchg
and
cdq
push
dec
fdivr
sbb
arpl
cli
pop
push
inc
add
imul
mov
aad
cli
pushf
(bad)
stos
adc
cmps
mov
mov
fimul
cmp
xchg
stos
sbb
enter
push
sub
sbb
in
out
xor
or
pop
xchg
add
mov
dec
sub
jg
lahf
mov
mov
jnp
add
xchg
or
xor
mov
add
jl
out
xchg
mov
ss
sahf
push
push
leave
dec
and
push
jge
call
xchg
icebp
sbb
push
and
jne
dec
mov
inc
jge
push
mov
pop
jae
cli
ss
seta
iret
aaa
mov
(bad)
ja
xchg
xchg
jle
xchg
sub
iret
add
lar
(bad)
pop
xchg
push
sbb
pop
dec
aad
pop
fs
pop
jb
adc
sub
push
xor
pop
mov
inc
cdq
stc
xor
xchg
bound
test
xchg
jno
clc
adc
jmp
push
fcmovnbe
push
ss
mov
xabort
jns
or
adc
sbb
out
test
pop
in
jns
popf
not
mov
shl
and
mov
sub
into
push
ins
jge
mov
ret
out
sbb
mov
jno
test
sub
test
lods
xor
xchg
movs
inc
xor
sub
mov
out
dec
imul
jne
cmp
scas
fbld
inc
les
in
ret
inc
xchg
loope
mov
add
cdq
jp
pop
adc
bound
adc
inc
cmp
and
inc
lock
iret
pushf
mov
fbstp
dec
gs
(bad)
sbb
sti
mov
(bad)
gs
(bad)
clc
and
aam
or
jl
ffreep
cmp
pop
out
retf
pop
adc
and
mov
or
hlt
lock
and
add
mov
mov
add
cmp
sub
inc
fild
adc
cli
hlt
in
mov
or
clc
jg
mov
icebp
pop
div
and
mov
push
mov
push
scas
add
adc
pusha
mov
cmp
xor
jg
aaa
mov
sub
cmp
or
mov
lods
adc
xchg
adc
dec
push
mov
icebp
jecxz
call
ss
add
add
mov
movs
movs
inc
aaa
inc
shr
jmp
fmul
out
icebp
movs
into
or
and
arpl
jno
loopne
movs
and
push
mov
xchg
test
mov
aad
adc
fsubr
ds
cli
(bad)
daa
or
add
inc
push
outs
add
leave
push
cmc
out
pop
jae
call
pushf
sbb
fnstenv
inc
dec
(bad)
jmp
js
out
cmp
out
movs
jae
jo
dec
mov
inc
cmps
out
popf
pop
shl
pop
outs
and
retf
std
addr16
loopne
mov
mov
dec
movs
add
shl
movntq
sbb
cli
add
xor
or
div
push
jae
and
cld
(bad)
ja
sti
and
shl
sub
in
sar
arpl
cmc
scas
scas
push
call
test
push
cmp
mov
pop
or
jnp
add
call
jnp
inc
out
sbb
or
cld
mov
mov
adc
sub
adc
mov
ja
xlat
or
mov
push
outs
push
rol
pop
rol
mov
clc
les
pop
das
aad
push
sbb
(bad)
jmp
mov
inc
or
push
int
pop
and
movs
rcl
dec
cmp
loop
push
mov
loop
or
sub
and
jge
adc
loopne
not
stc
inc
movs
stos
icebp
aam
jb
daa
cmp
loope
cld
or
sub
mov
stc
shl
pop
add
lods
retf
dec
repz
sbb
rcl
sub
sub
mov
push
test
jle
out
rcr
cld
stc
cmc
pop
cmps
push
mov
inc
rcr
out
push
mov
sbb
mov
popf
cmps
sub
mov
rcl
inc
popf
fs
pop
jmp
xchg
xchg
sbb
push
jb
aam
mov
cmps
pop
shl
pushf
call
iret
mov
out
sub
bound
mul
aad
mov
mov
cmps
arpl
xor
mov
(bad)
mov
adc
ror
jp
push
xor
das
out
fwait
cmp
push
add
pushf
adc
out
cmp
jp
rol
shr
xchg
mov
icebp
cdq
push
adc
ret
add
shrd
rcr
or
jecxz
inc
push
cmp
(bad)
hlt
mov
cld
daa
sbb
xor
dec
mov
aaa
popf
movs
test
and
loop
sbb
xor
cmp
mov
inc
(bad)
cmps
nop
inc
xchg
ret
sub
inc
xchg
push
jnp
mov
lock
lds
dec
and
dec
pop
xchg
call
aaa
(bad)
movs
stos
pop
ins
or
pop
es
mov
xlat
xor
dec
and
loop
jae
pop
mov
add
pusha
fnstsw
inc
push
xchg
test
imul
stos
or
mov
push
mov
xchg
cdq
(bad)
push
loope
cli
and
pop
cdq
cwde
mov
fist
cmps
sbb
jge
pop
cmp
jmp
and
sbb
add
add
add
jns
js
shl
sub
icebp
mov
mov
addr16
sbb
push
ins
in
ins
call
mov
cmps
out
out
int3
inc
mov
ss
aas
fs
pusha
pop
pop
loope
out
inc
ds
ret
pop
jbe
ins
aaa
sub
jns
push
aas
lods
push
pop
mov
fild
pop
cmp
push
jl
test
clc
xor
push
mov
es
pop
cld
cmp
sbb
test
inc
mov
lock
clc
and
gs
bnd
and
cwde
jecxz
jmp
ja
loopne
pop
sti
sub
push
pop
pop
or
imul
fisttp
call
mov
xor
xor
pop
sub
lea
mul
xor
mov
push
adc
aas
dec
retf
es
fistp
or
ins
push
xor
sub
mov
retf
pop
mov
rol
jo
jge
ins
inc
rcl
dec
jns
pop
jl
add
jnp
inc
clc
sbb
out
lea
lahf
sahf
add
inc
mul
daa
or
adc
dec
int3
inc
into
hlt
pop
mov
popa
jecxz
(bad)
jl
push
fistp
iret
mov
fs
sub
mov
jmp
pop
out
daa
bound
sub
cs
hlt
cmc
sub
or
loop
xchg
xchg
inc
and
pop
and
xlat
lods
pusha
xchg
cmp
mov
popa
xor
pusha
and
or
inc
jmp
retf
mov
push
add
retf
cmp
enter
into
xor
bound
mov
adc
and
lea
test
cmp
movs
pusha
rcl
inc
add
cmp
xchg
xchg
push
pop
out
test
repz
adc
repz
ins
test
add
pusha
mov
adc
dec
ja
push
mov
mov
jecxz
jmp
cmp
call
cmps
push
mov
and
mov
lds
in
iret
push
add
ja
(bad)
test
xor
imul
cmp
outs
lea
adc
dec
sub
xchg
mov
arpl
out
cmc
mov
push
rcl
pop
mov
and
das
mov
out
push
fistp
cmp
mov
cmp
(bad)
pop
dec
test
mov
call
js
dec
test
pop
push
add
pop
pusha
inc
add
mov
jbe
stos
call
push
fld
mov
adc
adc
imul
mov
jl
jmp
lods
daa
cmp
loopne
sbb
inc
bound
(bad)
inc
cmp
shr
ror
mov
sahf
test
or
sbb
std
cdq
ficomp
ins
pushf
retf
push
stc
popa
scas
or
pop
repz
jp
sub
mov
sbb
fldl2t
int
shl
adc
aam
shl
bound
mov
dec
div
xor
retf
clc
xchg
jg
ins
pop
mov
mov
movs
pop
push
loopne
mov
add
dec
push
sti
sar
xchg
(bad)
sub
ficomp
mov
ss
xlat
jnp
rcr
(bad)
mov
sbb
jle
shl
pop
mov
sub
pop
std
lea
not
sar
dec
in
xchg
hlt
cld
icebp
fcmovnu
push
pop
inc
hlt
mov
jne
add
sub
dec
mov
es
ret
mov
push
mov
mov
mov
pop
cmps
push
xchg
jge
jnp
icebp
loope
and
das
ins
add
out
jge
sahf
int
fnstenv
pop
push
sbb
sti
cmp
popa
cmp
les
sub
push
dec
xor
pop
pop
les
fwait
inc
mov
or
out
push
adc
xlat
aam
mov
add
mov
and
rcl
jg
and
addr16
sub
mov
xchg
in
test
mul
xlat
stos
(bad)
scas
or
inc
xor
dec
cli
jmp
and
xor
(bad)
pop
xor
loopne
adc
mov
cmp
mov
mov
cmp
dec
jle
dec
cld
xor
in
xchg
push
sahf
std
push
in
mov
pop
(bad)
mov
stos
cmps
ss
hlt
sahf
sar
outs
mov
hlt
ja
imul
and
outs
xchg
retf
loope
cs
dec
push
inc
popf
in
repz
or
psubw
dec
loope
cmp
enter
xchg
je
or
daa
adc
inc
dec
jnp
jmp
sbb
and
ss
cmp
test
jae
stos
sub
push
mov
dec
arpl
jp
call
mov
cmp
cs
pop
push
mov
dec
movs
hlt
cld
add
rcl
jmp
jb
fbstp
inc
icebp
int
inc
xor
push
jmp
out
test
mov
shl
scas
fwait
pop
div
mov
push
int
fist
repnz
loope
and
mov
mov
lods
sbb
pusha
push
and
outs
xchg
clc
xor
inc
or
call
(bad)
pop
jno
and
jmp
inc
icebp
mov
push
mov
sub
mov
mov
outs
in
mov
stc
fwait
div
leave
je
scas
ins
mov
lds
aaa
adc
add
mov
in
adc
cld
sbb
and
repnz
inc
loop
push
fdiv
adc
ror
xor
sub
loope
xor
add
loop
mov
add
mov
cmp
push
and
mov
enter
mov
popa
fstp
xor
mov
jbe
rol
rol
sbb
jecxz
sbb
(bad)
stos
fstp
xchg
jb
xor
das
dec
jno
mov
mov
daa
and
and
push
inc
fwait
inc
test
pop
aam
and
scas
jl
ds
or
movs
jp
lea
jecxz
repz
cmp
pop
lods
pop
jae
push
inc
pop
and
div
mov
mov
pop
lods
std
xor
leave
ror
sbb
loop
std
repz
cmc
in
adc
daa
push
mov
cmp
mov
mov
sub
loopne
test
das
or
aad
add
add
out
pop
leave
rol
lock
rol
stos
xor
pop
cmps
push
sbb
xor
xor
shr
mov
sub
movsx
xchg
or
rol
fild
push
rol
jmp
or
pop
push
(bad)
stos
(bad)
mov
inc
in
jno
ret
xchg
sub
cmp
(bad)
in
mov
daa
xor
(bad)
enter
inc
adc
lock
adc
cmp
push
add
jns
js
imul
mov
retf
xor
arpl
xlat
lea
cld
pop
pop
call
aas
fsub
lds
mov
xchg
add
enter
and
mov
(bad)
xchg
popf
test
es
out
add
in
jmp
test
cdq
imul
(bad)
push
ficom
mov
clc
mov
ss
and
dec
mov
push
dec
pop
sti
push
pop
adc
jl
jge
xlat
adc
add
inc
pusha
sub
cmp
aaa
jl
pop
cmp
push
xor
hlt
sbb
popf
movs
lds
add
and
movs
rol
inc
xor
dec
add
inc
sub
and
mov
pop
or
in
mov
arpl
fwait
mov
xchg
dec
and
dec
jge
and
cmp
aaa
mov
push
adc
in
fld
out
xor
pop
out
jae
(bad)
jle
push
daa
mov
mov
xor
cmp
int
sbb
push
in
aaa
ins
cmp
sbb
cmp
and
inc
movs
adc
test
xor
movs
loop
in
retf
dec
fimul
lea
sbb
dec
jmp
or
inc
push
or
cdq
xlat
cmp
inc
(bad)
jno
enter
nop
hlt
ins
adc
cmp
outs
jmp
lea
fiadd
pop
das
(bad)
cld
mov
xchg
push
sbb
dec
mov
bound
add
loopne
and
or
mov
fdivr
adc
daa
mov
jle
sbb
adc
dec
sti
fdiv
lods
stos
in
ins
xchg
or
stc
imul
(bad)
lea
movs
inc
stc
daa
inc
sub
out
push
sub
stos
mov
pop
mov
dec
outs
imul
sub
test
or
cmp
sbb
sbb
jno
jp
mov
push
mov
push
mov
pop
mov
dec
outs
sbb
mov
adc
inc
mov
test
repz
movs
js
lods
and
fcom
inc
mov
mov
cmp
es
mov
and
mov
movs
scas
push
ret
not
js
or
outs
or
daa
mov
xchg
pop
add
ins
mov
add
or
inc
in
dec
lods
jo
ret
cmp
push
cmp
stos
mov
pop
or
jl
mov
fld
out
lea
(bad)
(bad)
hlt
data16
not
fstp
int
out
pop
lock
sbb
pop
mov
mov
push
repz
ins
fwait
xchg
mov
scas
je
add
stc
out
stc
cmps
pushf
(bad)
call
xor
mov
sub
fld
aas
add
sub
push
mov
(bad)
daa
jne
and
dec
adc
(bad)
(bad)
pop
sub
cmp
xchg
das
pop
(bad)
lods
jbe
adc
pop
int
jmp
scas
adc
jl
or
mov
mov
shl
push
xchg
mov
mov
mov
fistp
jne
dec
sbb
jmp
lock
or
test
scas
hlt
cdq
add
push
popf
jp
test
mov
stos
sbb
adc
jg
sbb
add
stc
test
pop
call
cs
sbb
xchg
adc
push
push
gs
and
gs
mov
jmp
jle
mov
inc
cli
enter
jmp
jg
dec
mov
cmp
iret
pop
jmp
gs
or
xor
inc
inc
retf
sbb
std
xchg
mov
(bad)
xlat
out
xchg
dec
es
xor
clc
movs
cmp
test
mov
imul
mov
(bad)
frstor
cmps
fs
aas
dec
fs
push
in
pop
(bad)
stc
sti
bswap
int
iret
inc
outs
jg
dec
pop
call
sbb
fwait
pop
test
mov
ret
fdivr
popa
push
(bad)
xor
das
les
sub
mov
popf
out
jp
mov
add
nop
jmp
call
gs
sbb
xor
rcr
ins
xchg
test
clc
pop
pop
and
sub
lods
test
jcxz
stos
call
jno
sbb
mov
mov
js
or
inc
xor
fimul
adc
cmp
out
(bad)
jge
pushf
loope
push
loop
es
test
and
ds
jl
loop
ja
sbb
adc
sbb
jmp
pushf
ins
and
cmp
xor
inc
pop
xchg
(bad)
test
repnz
mov
and
data16
add
in
inc
aas
push
stos
xor
cmp
dec
sbb
fnstcw
jns
aam
inc
les
mov
sub
inc
dec
push
icebp
fiadd
add
fimul
movs
inc
pop
inc
sub
adc
gs
mov
not
(bad)
push
and
mov
and
sti
test
dec
movs
cmp
push
inc
sbb
repz
retf
xchg
adc
jl
pop
sbb
iret
ror
daa
lods
sbb
loop
dec
push
mov
popa
jae
jg
je
arpl
jo
mov
jmp
sbb
push
xchg
xor
popf
loop
dec
xchg
fsub
push
fisubr
(bad)
stc
inc
inc
leave
inc
jo
sub
jp
sahf
sti
fst
call
xor
push
and
test
xlat
call
or
(bad)
or
mov
(bad)
not
or
mov
in
mov
xlat
ss
inc
cmps
inc
addr16
inc
loop
(bad)
pop
stos
inc
sbb
shr
fnstsw
dec
push
iret
loop
stos
pop
int
(bad)
jp
fmul
out
push
xchg
mov
jge
lds
icebp
add
cmp
jne
mov
mov
push
test
(bad)
adc
loop
nop
dec
add
and
xchg
popa
popa
(bad)
ins
je
inc
pop
push
xchg
fadd
fs
pop
mov
call
bound
shl
movs
aam
push
pop
mov
fdivr
stc
hlt
jle
pushf
retf
inc
int3
rol
cmp
out
xlat
fldenv
and
cmp
sar
xlat
pop
adc
pushf
add
imul
xchg
add
mov
(bad)
mov
mov
imul
mov
jno
push
sub
mov
push
imul
adc
icebp
iret
ja
fldcw
lea
mov
fiadd
xor
adc
into
fprem1
xor
fmul
jmp
jmp
mov
or
sub
mov
pop
scas
sub
push
test
data16
(bad)
jge
cli
data16
cld
pop
shl
or
cld
(bad)
adc
dec
mov
lods
inc
nop
mov
inc
mov
pop
ins
mov
mov
cli
adc
fisubr
ror
jecxz
push
xchg
sub
je
es
scas
dec
imul
cwde
inc
cs
inc
sbb
xlat
or
add
inc
imul
rcl
mov
cmp
div
ins
dec
nop
inc
scas
fdivr
jle
add
je
mov
inc
test
inc
add
cmp
push
(bad)
stc
cmp
jmp
dec
cmp
dec
pop
sar
push
sbb
push
inc
mov
cmp
push
jno
clc
arpl
fwait
cmp
mov
mov
adc
cdq
jnp
jmp
neg
or
xlat
test
mov
test
mov
fs
cmps
int3
fdiv
xchg
leave
jmp
cmp
dec
fmul
lods
imul
syscall
fwait
movs
xchg
imul
push
std
or
test
xor
mov
sub
daa
xor
xchg
cmps
mov
pop
in
(bad)
add
adc
aas
xor
push
push
stc
and
nop
cmp
sti
fcomp
add
mov
aaa
sbb
cmps
call
mov
ss
data16
loopne
sbb
push
mov
jo
or
cmps
mov
out
push
mov
push
scas
mov
xchg
and
leave
adc
jle
fist
std
adc
mov
aaa
sahf
imul
xchg
es
add
(bad)
mov
loopne
jl
and
jle
ss
iret
mov
dec
pop
or
xchg
mov
test
mov
mov
retf
dec
mov
mov
mov
movs
mov
call
push
mov
or
mov
xchg
xlat
jmp
js
xchg
outs
into
das
sub
sbb
data16
aaa
push
out
add
mov
in
jle
or
xor
jb
ins
imul
push
mov
sub
push
fistp
mov
mov
sbb
and
adc
jbe
jl
adc
sbb
mov
mov
in
ret
(bad)
mov
outs
sahf
test
mov
fcmove
xchg
and
int3
jbe
neg
mov
cmps
into
sahf
adc
xor
frstor
jp
mov
lods
shr
jge
(bad)
cmp
adc
cmps
scas
xor
sub
repz
fcomi
pop
mov
dec
stos
call
in
mov
push
xchg
jnp
leave
fldenv
pop
adc
call
or
(bad)
aam
es
dec
adc
sub
push
in
fnstenv
dec
data16
sbb
inc
or
stc
mov
pop
repz
imul
jnp
test
in
cmp
ficom
and
das
jne
jns
inc
ja
jnp
xchg
pop
sbb
retf
cmp
mov
push
or
fiadd
cmp
mov
ds
push
mov
jo
outs
xor
sbb
or
add
cld
ins
rcr
loope
and
mov
ror
mov
clc
sbb
mov
inc
push
mov
jno
in
or
mov
ficomp
(bad)
cmc
or
or
dec
cmc
jmp
loope
test
mov
ret
call
pop
or
add
jns
add
mov
mov
mov
leave
movs
jmp
stc
cmp
cmc
ror
push
dec
add
mov
leave
not
inc
push
jg
enter
gs
sti
xchg
lds
ins
daa
fdiv
mov
mov
inc
loope
adc
jbe
mov
aas
shl
xchg
sbb
mov
pop
outs
retf
inc
scas
mov
pop
inc
xor
mov
les
fnstenv
jno
out
push
(bad)
lds
and
adc
fsubr
(bad)
repnz
dec
jmp
(bad)
add
cmp
int3
test
das
xchg
mov
fbstp
in
mov
push
ret
ds
rcr
push
mov
xor
pop
popf
cmp
test
sbb
lods
cmp
xchg
arpl
add
cmp
add
iret
mov
(bad)
pusha
imul
shl
int3
push
add
inc
inc
sbb
dec
jecxz
outs
jo
sahf
add
cmp
shl
push
popa
or
pushf
cmc
jmp
jg
cmp
inc
mov
in
not
clc
stos
ret
or
add
xor
inc
sbb
pop
push
out
xor
add
jecxz
dec
cli
xor
push
xchg
stos
dec
jl
xchg
pop
lahf
(bad)
push
clc
inc
xlat
inc
xor
dec
mov
scas
jle
call
xchg
push
pusha
push
es
fcomp
outs
in
nop
xchg
push
and
cmps
push
mov
outs
jge
fs
xor
pop
sbb
mov
out
(bad)
jmp
pop
mov
(bad)
cld
test
ins
jp
stos
mov
pop
jle
dec
sbb
xlat
sbb
sub
or
aaa
mov
scas
retf
out
mov
jbe
mov
into
scas
lahf
sub
loopne
dec
cmp
pusha
ds
je
std
lahf
clc
sbb
sub
lods
push
mov
or
jbe
or
call
mov
int
adc
sub
jle
faddp
cld
xor
faddp
shl
mov
pop
pushf
dec
xchg
cmps
adc
(bad)
mov
mov
dec
mov
jbe
adc
je
call
cld
push
(bad)
loopne
sub
ds
dec
shl
adc
loop
lds
mov
jmp
or
mov
mov
leave
dec
lea
adc
test
push
imul
jl
retf
add
xchg
and
int
in
sbb
pop
and
cmps
fucom
and
inc
shr
lock
in
loopne
adc
(bad)
push
push
data16
jbe
cdq
cdq
sub
cmp
xor
in
call
mov
inc
mov
sub
not
popa
shl
push
popa
sbb
int3
lahf
push
mov
inc
mov
cmp
icebp
and
arpl
sbb
cmps
rcr
test
out
int3
mov
xchg
repz
mov
or
xor
xor
sub
xchg
mov
mov
test
mov
mov
sbb
xchg
xchg
ja
fldz
aam
sub
and
aaa
push
pop
jl
es
test
mov
add
and
retf
enter
mov
shr
ficomp
sub
and
xchg
cmps
aad
rcl
push
sbb
sbb
cld
push
mov
dec
dec
xor
fnstsw
adc
es
inc
loopne
movs
call
jmp
add
add
data16
fbld
(bad)
xchg
popa
inc
repnz
(bad)
dec
mov
adc
adc
and
pusha
or
repz
and
jl
or
pop
add
cmc
jmp
mov
and
sub
xchg
test
(bad)
adc
mov
jbe
mov
pop
cli
pop
sbb
shl
inc
push
fucomp
mov
jp
rcr
push
adc
outs
ds
pushf
jnp
jmp
icebp
and
push
sbb
mov
jno
mov
adc
jmp
scas
inc
movs
adc
das
les
mov
sbb
daa
(bad)
mov
outs
push
call
imul
mov
es
fldenv
seto
les
jmp
popf
in
aad
and
sti
popa
inc
xchg
xchg
cmps
fidivr
dec
and
jns
add
inc
xchg
stc
sbb
adc
call
cmps
lods
out
nop
sti
and
out
jnp
ss
pop
and
or
sbb
(bad)
jmp
std
xchg
sbb
mov
aas
adc
stc
out
(bad)
out
(bad)
enter
leave
ror
hlt
mov
xchg
rcl
aam
adc
and
sbb
xchg
rcr
inc
sbb
mov
jecxz
sub
retf
jne
nop
fsubp
adc
add
or
push
scas
push
and
mov
aad
dec
inc
in
add
mov
pop
xor
scas
and
add
ds
retf
push
nop
mov
fcmovne
pop
pop
sub
xor
inc
dec
test
push
neg
fnsave
cld
call
cmp
push
and
ins
sbb
and
and
mov
inc
or
fstp
inc
sub
adc
xchg
mov
icebp
inc
mov
sbb
mov
push
jmp
adc
xchg
sbb
add
or
(bad)
lock
icebp
xor
sahf
push
and
xchg
aaa
retf
or
xchg
jae
retf
fistp
and
aad
pop
mov
aam
sahf
mov
jb
call
mov
mov
jmp
add
test
jmp
push
jmp
lahf
adc
ss
lods
sbb
cdq
xor
aad
mov
mov
jmp
and
and
cmp
nop
lock
add
aam
fsub
inc
jl
dec
sub
enter
xchg
sub
idiv
or
cmp
in
scas
push
sub
mov
mov
pop
call
mov
adc
fwait
out
test
jne
data16
jbe
hlt
or
add
pop
jg
std
mov
push
mov
js
icebp
es
ins
cmp
test
(bad)
repz
out
sbb
jecxz
icebp
movups
jnp
or
ja
xchg
dec
test
dec
inc
and
add
aad
xchg
jb
cmp
int3
push
push
gs
jne
dec
lods
lahf
jns
add
idiv
ja
outs
adc
jbe
ror
xor
sbb
mov
jmp
rcl
stos
loop
or
sub
xchg
into
pop
aam
adc
inc
ds
(bad)
std
fwait
mov
and
mov
xor
mov
mov
loopne
mov
sbb
sbb
scas
sahf
out
mov
jmp
(bad)
push
mov
data16
test
(bad)
pop
cmp
je
cmp
in
(bad)
lahf
cld
adc
aaa
and
sbb
dec
cmp
ds
push
mov
inc
sti
std
test
sub
mov
loope
dec
repnz
push
popa
xlat
or
aad
inc
push
mov
and
test
sbb
fcmove
mov
and
and
sbb
ja
(bad)
push
adc
sbb
lods
test
mov
sub
cmc
xor
or
inc
lahf
push
push
popf
inc
add
jg
(bad)
call
and
inc
mov
push
cmp
das
cmp
(bad)
dec
push
jbe
movq
cli
sub
movs
and
xchg
cmp
or
push
mov
loopne
jb
adc
outs
rol
pop
jmp
pop
pop
push
sbb
ss
icebp
add
dec
out
test
sbb
aam
movs
and
fisttp
enter
outs
add
stos
pop
(bad)
sbb
mov
pusha
pushf
pop
hlt
ss
mov
mov
repnz
fld
test
popa
cmp
pop
js
das
shr
jp
sbb
imul
or
push
pop
ret
mov
mov
pop
mov
data16
mov
xor
add
jge
das
fsubr
lock
(bad)
and
add
jmp
mov
ins
inc
adc
jl
aaa
pushf
es
or
sub
jno
into
mov
or
jbe
xor
outs
jo
fdiv
int3
ds
push
scas
dec
cmps
ins
lds
add
or
adc
data16
bound
jbe
out
jns
or
push
jmp
loopne
gs
fst
(bad)
xor
push
es
lds
adc
inc
and
scas
sub
xchg
pop
rcr
test
inc
mov
pusha
shl
push
ss
pop
push
mov
loopne
test
or
lahf
pop
xor
sub
cld
add
sbb
fadd
adc
jae
lods
mov
sbb
pop
mov
pop
sbb
push
clc
adc
shr
inc
and
addr16
pop
test
inc
movs
loop
data16
fst
sbb
mov
xchg
aaa
sub
pop
popf
mov
cld
ss
jecxz
mov
loop
mov
leave
jge
jmp
addr16
cmp
mov
test
xchg
and
mov
xlat
out
dec
add
sub
nop
mov
jne
scas
xchg
out
dec
inc
das
in
xor
push
jbe
inc
mov
(bad)
xlat
dec
pushf
(bad)
and
xor
ss
jbe
test
das
mov
bound
repnz
xor
xor
push
push
pop
jnp
data16
movs
push
ins
sbb
sub
movs
inc
jg
adc
es
add
test
add
mov
bound
adc
rol
xor
enter
push
hlt
adc
pusha
sub
repnz
push
les
jle
lds
cmps
sub
js
fldenv
movs
mov
(bad)
cs
sqrtps
cmp
or
xchg
lahf
js
sub
cmp
sub
mov
scas
lods
mov
ja
cmp
or
or
stos
hlt
xchg
dec
fstp
add
push
and
movs
mov
rol
jmp
add
movs
jnp
xchg
(bad)
dec
clc
mov
out
sub
nop
out
ficom
push
out
in
pop
rol
(bad)
mov
cmp
div
xchg
out
sahf
cdq
jmp
lahf
add
shr
mov
outs
popf
js
ja
fld
out
or
dec
or
loopne
add
pop
sar
push
(bad)
xchg
add
mov
pop
adc
cmc
in
jnp
out
sub
cmps
lods
lods
pop
xchg
sub
rol
retf
mov
and
loop
retf
push
mov
jbe
or
adc
or
jecxz
retf
(bad)
jb
loopne
es
xchg
add
mov
cmp
int3
cmp
ins
push
ins
movs
pop
or
leave
xlat
push
inc
fs
inc
xchg
cmp
(bad)
add
push
mov
add
jnp
pusha
mov
sti
shl
sbb
fistp
pop
aas
lds
les
push
mov
pushf
bound
cmc
mov
sbb
xchg
rcr
lahf
hlt
mov
(bad)
jne
out
in
mov
jecxz
pop
ins
mov
jmp
pop
adc
push
cdq
pop
(bad)
sbb
xchg
push
add
and
mov
pop
mov
sub
ds
cmps
mov
mov
loope
jp
mov
arpl
les
call
daa
and
pop
dec
push
or
xchg
mov
addr16
popa
mov
(bad)
push
mov
test
cmp
mov
(bad)
dec
loop
scas
mov
sub
ja
pop
in
and
dec
pop
cwde
push
adc
inc
xchg
sahf
popf
(bad)
xchg
jp
rcl
cwde
pop
and
in
jbe
sar
inc
ja
addr16
xor
aam
jg
cld
and
arpl
(bad)
fcmovne
mov
lods
out
inc
mov
jmp
mov
out
enter
inc
sub
test
pop
push
retf
cmp
jl
jecxz
ror
dec
and
(bad)
outs
mov
jmp
aas
int3
daa
hlt
inc
xlat
inc
pushw
retf
scas
hlt
push
jne
fld
sbb
scas
fwait
sbb
push
not
mov
je
push
enter
cmp
retf
or
sub
mov
push
mov
and
pop
imul
dec
ret
loope
jno
iret
jmp
cmp
push
inc
mov
mov
push
fiadd
dec
jmp
mov
mov
int
xchg
jg
pop
pop
(bad)
cmp
push
mov
arpl
in
sub
jne
inc
mov
scas
xor
fld
xor
sub
mov
add
lea
gs
xchg
in
retf
mov
jle
lahf
mov
dec
or
xchg
pop
add
xchg
repz
data16
(bad)
dec
inc
push
or
cmp
je
outs
pushf
shl
shl
aam
xchg
mov
imul
jo
cld
mov
mov
in
add
les
fbstp
aaa
jbe
mov
jne
outs
test
dec
cmps
jl
(bad)
xchg
jb
pop
and
cli
imul
sahf
in
cmp
nop
jp
inc
retf
pop
in
xchg
adc
or
std
mov
jno
jmp
scas
hlt
mov
adc
test
(bad)
lods
xchg
ret
pop
fstp
popa
inc
pop
stos
cmp
sbb
inc
or
mov
test
xor
xor
and
push
mov
mov
mov
cmp
cmc
lods
(bad)
ds
push
dec
lds
pushf
out
dec
sbb
jae
stc
out
sub
movs
or
and
adc
xlat
xor
jge
es
aad
push
lods
cmp
or
pop
sbb
test
data16
pop
es
in
test
jmp
or
dec
shl
(bad)
pop
ret
dec
mov
div
(bad)
aad
xlat
repnz
and
xor
fnstsw
jne
pop
je
or
or
aas
mov
retf
test
jecxz
stc
or
cs
cmp
pop
dec
mov
std
cdq
or
and
jmp
add
fcomp
mov
movs
adc
shl
pop
adc
mov
jo
imul
dec
movs
push
mov
test
inc
mov
mov
movs
jno
inc
das
mov
or
sub
or
out
push
mov
call
dec
jg
lea
fwait
in
xchg
pop
fcomp
pusha
into
shl
xor
jmp
int3
test
cs
call
outs
cmp
dec
push
in
cmp
xlat
and
adc
or
pop
sahf
add
mov
imul
sub
xchg
retf
cli
jp
into
pslld
mov
outs
pop
inc
push
cmps
fadd
cmps
and
pop
(bad)
xor
inc
or
scas
cmps
mov
jnp
(bad)
nop
int3
ins
xor
lods
retf
push
push
push
fdivr
fsub
ins
dec
stos
jbe
ss
les
sub
call
or
pop
xor
test
test
sbb
fnstsw
stos
sbb
fwait
jmp
js
xchg
add
cmp
dec
xor
mov
sub
fcom
jle
sbb
aam
pop
xchg
and
pop
sti
jp
pop
sti
jge
aam
dec
and
inc
push
stos
push
loope
mov
and
pop
mov
jge
and
mul
js
test
cmp
mov
hlt
jb
aas
mov
sub
outs
xchg
mov
inc
aad
push
sub
inc
and
out
mov
jne
xor
sahf
mov
xchg
adc
mov
pusha
xchg
pushf
iret
push
jge
mov
cs
sar
and
hlt
dec
jno
sahf
lahf
nop
enter
mov
inc
xor
or
xchg
mov
in
xor
sub
ja
xor
jno
loope
in
ins
mov
xor
add
ret
nop
fwait
nop
mov
sar
dec
outs
lods
sub
movs
cli
mov
sub
lea
movs
jb
rol
pushf
sbb
sbb
es
jae
mov
cmp
push
sub
sub
mov
jl
mov
mov
cmp
jne
cmp
push
cmc
jae
inc
mov
push
mov
jl
pop
stos
xor
int
and
out
pop
clc
sar
jp
sbb
movs
sub
popf
xchg
addr16
neg
ret
or
pusha
jb
cmp
mov
(bad)
in
cmps
ins
cmp
xchg
sbb
sub
mov
clc
addr16
in
pop
jb
retf
les
int3
movs
fisttp
cmps
sub
fnstenv
xor
sub
sbb
cld
adc
add
xor
rcr
fiadd
into
in
mov
mov
pop
mov
mov
mov
pop
jg
mov
mov
mov
lods
inc
fld
push
mov
fwait
inc
icebp
sub
jecxz
imul
scas
xchg
dec
(bad)
and
or
ds
push
sbb
or
sbb
pop
icebp
inc
faddp
ins
cmp
adc
mov
push
int
cmps
popf
and
clc
mov
ss
cmc
std
xchg
xchg
sub
and
cmc
int
mov
retf
mov
(bad)
or
mov
arpl
adc
push
addr16
mov
adc
ins
sar
ins
movs
mov
xor
push
out
adc
xchg
ins
xor
in
cwde
ss
inc
daa
mov
pop
xchg
mov
or
add
and
push
cmp
repnz
cmps
jne
pop
stos
mov
and
or
rcl
jp
loop
rcl
movs
mov
cmc
imul
inc
aas
pushf
and
mov
inc
xchg
fdivr
push
adc
nop
add
jecxz
add
xchg
xor
inc
xor
jecxz
clc
(bad)
ss
sbb
adc
pop
in
push
(bad)
(bad)
pop
pop
push
mov
jnp
mov
push
sti
hlt
jge
ficom
fwait
jnp
lock
push
cli
aas
scas
fwait
repnz
jb
or
pop
cmp
ins
pop
aad
jbe
and
ins
push
nop
cdq
jns
push
test
xor
ss
adc
not
shr
sub
inc
sub
jo
lock
out
fisubr
push
ds
into
xor
push
mov
ja
dec
out
mov
popa
iret
and
mov
xor
ds
mov
sub
test
adc
pop
jo
test
in
inc
push
ja
ins
faddp
or
cmp
pop
pop
add
(bad)
xor
or
test
dec
jle
fild
xchg
sub
dec
(bad)
pop
pop
movs
push
ins
scas
sub
push
adc
push
test
popa
sub
rcr
cmc
test
lods
xchg
pop
mov
sbb
mov
push
push
div
(bad)
jg
cmp
adc
das
inc
stc
ins
mov
icebp
mov
mov
sbb
mov
jo
cmp
push
mov
adc
adc
stc
push
mov
jb
repz
popf
jp
sbb
push
das
std
jmp
call
mov
sub
xchg
xchg
sbb
(bad)
push
(bad)
cld
xlat
jp
icebp
loopne
mov
ror
aaa
je
mov
or
dec
scas
shl
and
movs
arpl
in
mov
or
cmp
(bad)
cmp
ficomp
sub
sub
mov
(bad)
pop
rol
lahf
mov
jae
call
test
inc
push
call
popa
xchg
mov
adc
popa
ds
add
out
mov
imul
sahf
jl
pop
cmp
xor
retf
inc
popa
(bad)
aam
cdq
movs
ins
mov
(bad)
jg
push
call
(bad)
mov
add
sbb
mov
pop
jmp
das
sbb
inc
cmp
mov
pop
inc
jg
daa
test
jno
rcl
cmp
(bad)
in
stc
push
cmps
aad
add
aaa
call
or
inc
mov
fcom
sahf
int3
clc
add
mov
xor
mov
jb
mov
jmp
les
pushf
fild
movs
sub
add
mov
xor
pop
aaa
or
fcomp
adc
aaa
scas
repz
int
jo
into
xchg
add
mov
jnp
in
outs
jo
xchg
(bad)
mov
cmp
pop
out
les
nop
ins
stc
add
test
adc
adc
rol
movs
inc
push
pop
retf
jnp
sahf
loop
add
add
fwait
aad
imul
(bad)
sbb
add
mov
jl
enter
test
xchg
mov
movs
lahf
pop
js
lea
fwait
jno
in
jmp
sub
sar
or
jmp
inc
gs
add
inc
cmps
or
pop
mov
push
sbb
(bad)
lahf
adc
push
push
es
jbe
pop
push
cwde
or
int
dec
sbb
out
aas
loopne
js
(bad)
aad
inc
pop
adc
sbb
cmp
daa
test
movs
ds
jb
addr16
sar
in
adc
dec
cli
adc
or
sub
xor
stc
add
mov
add
jbe
sub
sub
fst
in
mov
mov
repnz
jmp
cmp
leave
in
and
out
popa
ror
push
(bad)
sub
adc
pop
cdq
mov
cmc
push
ins
cmp
mov
cmp
and
xor
ds
int
add
mov
shl
pop
loop
test
je
or
test
fsubr
cwde
mov
sti
adc
mov
fidiv
sub
pop
dec
mov
fmul
retf
push
nop
add
imul
push
sbb
adc
cmp
stc
pop
xor
pushf
es
and
jmp
mov
sbb
push
or
pop
neg
push
mov
dec
das
call
pop
in
push
cwde
adc
std
push
psadbw
and
mov
cmps
xor
rcr
sbb
int3
jo
or
jbe
mov
int
jno
and
xlat
mov
and
jg
sub
mov
fimul
test
fwait
cmp
sbb
in
lea
mov
jle
popa
cmps
push
jl
aaa
icebp
es
jae
jnp
paddb
fwait
mov
adc
or
add
mov
jns
test
inc
inc
add
sahf
xor
lock
mov
mov
test
xor
cmp
out
push
cs
push
loopne
cmp
test
or
jae
push
fs
and
repnz
out
rol
xor
cdq
xlat
sub
push
mov
fwait
sub
inc
jge
push
call
inc
sub
inc
cmp
xchg
pop
fwait
mov
stos
cmp
and
out
popf
movs
mov
shl
jl
rep
std
mov
pushf
mov
enter
fistp
xor
in
push
test
adc
daa
dec
jbe
xor
push
push
jmp
cmps
js
sub
jnp
push
adc
imul
xchg
adc
sub
lods
xchg
mov
adc
mov
push
jmp
stos
xchg
mov
sub
or
test
push
test
das
popa
sbb
push
das
out
int
dec
fimul
jecxz
inc
jne
mov
aad
imul
lahf
gs
dec
dec
mov
mov
push
xchg
fs
cmp
bound
mov
mov
retf
mov
push
and
not
inc
jno
jae
pop
stc
pop
test
mov
add
xor
adc
mov
dec
sub
push
mov
jnp
std
or
and
lods
rcr
xchg
fwait
nop
add
loope
retf
int
sub
dec
cmp
and
stos
jnp
fst
in
jmp
mov
ret
add
ds
adc
and
(bad)
pop
mov
bound
pusha
mov
cld
inc
sub
loopne
loop
mov
inc
pop
cs
xchg
sbb
jne
or
inc
aaa
pop
push
inc
test
repz
xor
jo
sahf
aam
mov
fstp
shr
cmp
mov
jae
daa
pop
dec
pop
cmp
sub
dec
aaa
jo
(bad)
dec
scas
(bad)
lock
aad
(bad)
in
ret
lods
mov
xor
push
xor
pop
or
es
mov
sti
mov
lahf
ins
and
add
jbe
into
bswap
and
shl
inc
mov
loop
pop
adc
and
mov
iret
clc
imul
test
clc
jo
arpl
xchg
aaa
rcr
fs
ss
xchg
sbb
sbb
shr
xchg
sub
mov
cmp
pop
sub
mov
mov
mov
push
icebp
popf
ja
cmp
scas
stos
nop
mov
stos
repnz
sbb
sub
sbb
div
or
mov
mov
in
or
icebp
jge
jae
push
mov
mov
jno
loopne
test
leave
push
sahf
fwait
mov
dec
mov
cmp
(bad)
adc
fcomp
xor
push
shl
xlat
clc
add
adc
sbb
mov
call
jo
sbb
cmp
and
and
adc
ror
inc
or
test
repnz
pushf
arpl
jg
sub
scas
in
jb
shr
out
mov
cmps
leave
inc
mov
dec
stc
inc
in
sbb
repnz
push
and
and
pop
or
pushf
sub
retf
add
push
jno
and
mov
div
call
sar
nop
xchg
push
dec
lods
je
add
ficom
add
shl
adc
pop
cwde
dec
imul
ins
xchg
test
int3
mov
jns
xor
push
dec
mov
pop
adc
inc
dec
ins
pop
mov
stc
cmp
xchg
out
xor
or
xor
mov
pop
stc
adc
jecxz
ror
jbe
and
fs
push
jp
mov
dec
hlt
mov
loop
das
sub
popa
gs
cmps
lahf
xchg
push
inc
inc
or
in
mov
xchg
inc
imul
push
into
sbb
mov
jo
inc
sbb
mov
daa
lock
in
sti
ss
pop
push
or
out
jae
(bad)
pop
mov
push
dec
or
ja
cmp
pop
scas
or
lds
in
iret
xchg
bound
mov
les
push
push
xlat
or
(bad)
fld
lods
xlat
lock
jg
and
lds
mov
or
adc
adc
inc
cdq
xlat
adc
lods
outs
fdiv
mov
push
sub
call
cmc
fsubr
call
idiv
mov
retf
inc
or
add
jmp
sar
mov
pushf
sub
fadd
mov
adc
pop
scas
cld
mov
enter
xor
lods
retw
rol
sbb
or
mov
push
mov
out
nop
out
cmp
imul
sar
sub
test
dec
pop
sbb
adc
pusha
push
or
dec
and
rcr
push
cmp
sub
push
ret
add
repz
mov
push
inc
jge
sub
xor
add
mov
hlt
push
and
imul
add
ffreep
sbb
push
or
sbb
add
ficomp
xchg
pop
cmp
ror
ss
pop
popa
sub
shl
add
mov
xor
dec
enter
or
pop
ins
sub
cmps
jb
stos
mov
sbb
(bad)
xor
mov
add
fadd
mov
inc
dec
stc
jo
int3
out
mov
repnz
dec
inc
sbb
mov
or
movs
in
xor
mov
xchg
push
in
test
js
add
pop
pop
and
jmp
out
ja
pusha
in
fwait
inc
xor
leave
fild
aam
cmp
daa
mov
pop
xor
jb
fcom
adc
pop
mov
outs
jo
mov
pop
cmp
add
pop
add
sub
cmp
sub
push
icebp
lds
and
int3
xchg
in
pop
pop
xchg
mov
or
nop
lahf
test
gs
repnz
cld
dec
and
jo
out
xchg
xor
shl
and
push
pusha
in
clc
movs
loop
inc
sahf
push
test
dec
push
je
mov
scas
mov
cmp
std
jne
xor
lds
(bad)
outs
(bad)
iret
repnz
in
pop
out
stc
mov
in
(bad)
(bad)
xchg
fiadd
xor
push
or
jge
inc
and
and
mov
adc
jne
fnstsw
mov
aam
frstor
mov
cmp
(bad)
(bad)
or
aas
jbe
fstp
cs
cmp
sbb
pop
enter
adc
jne
ja
mov
loop
adc
loop
inc
out
into
pop
jecxz
mov
adc
xchg
push
mov
jne
mov
dec
mov
bound
and
outs
or
mov
stos
mov
aaa
add
popf
jnp
xchg
jmp
mov
and
out
inc
jns
pop
and
fcom
mov
jg
repnz
movs
pop
mov
inc
pop
fs
mov
aaa
pop
and
adc
or
xor
pop
fs
sbb
fsub
cmc
jecxz
sahf
or
(bad)
xor
lods
cdq
mov
mov
div
pop
mov
push
adc
fs
imul
int
rol
jmp
xchg
out
idiv
fnstcw
mov
out
dec
add
xchg
cld
(bad)
pop
and
repz
mov
adc
rcl
in
into
push
movs
adc
shl
xchg
lahf
outs
xchg
daa
adc
push
bound
sub
xor
sbb
adc
jl
mov
enter
data16
jbe
mov
xor
adc
fiadd
jns
(bad)
cmc
push
out
je
mov
xchg
es
inc
dec
pop
sub
mov
mov
lock
sar
ret
es
xchg
sbb
aas
rcr
xor
cmp
test
sar
out
xchg
sahf
sub
add
inc
(bad)
sti
push
rcr
pop
sbb
sub
out
and
int3
daa
sub
mov
test
push
jb
xor
cs
rcr
mov
movs
adc
fnstsw
adc
addr16
outs
sub
lods
xchg
xor
mov
add
push
sub
push
pop
(bad)
icebp
mov
cmps
(bad)
enter
pushf
fcomp
cmp
popa
pop
addr16
lods
mov
dec
cmp
pop
pop
dec
mov
jmp
mov
in
sar
lods
and
imul
test
gs
adc
sub
and
es
mov
inc
leave
jmp
jnp
enter
adc
ret
inc
inc
and
ret
jl
leave
das
mov
jae
ins
sbb
add
push
mov
(bad)
add
sbb
fisttp
sti
xchg
add
(bad)
cdq
fimul
pop
push
lahf
ds
jl
xchg
mov
ja
xchg
scas
cwde
pop
push
and
dec
les
dec
imul
jne
ds
cmc
adc
inc
cli
sub
popa
pop
popa
xchg
pop
push
mov
jle
cmps
out
stc
iret
cld
cwde
cdq
mov
push
out
push
imul
cmp
cs
inc
and
sub
xchg
mov
xchg
fistp
int
xor
sub
lods
scas
push
pusha
sahf
ret
gs
fcmovnu
xor
mov
movs
mov
pop
fimul
cmp
mov
adc
loopne
(bad)
xor
daa
xor
(bad)
pop
inc
aad
push
arpl
xchg
inc
xchg
dec
fdiv
jl
dec
gs
in
aam
xchg
stos
movs
js
push
jb
repz
jp
dec
mov
push
iret
and
pop
rcr
pop
pop
xchg
mov
rol
call
fld
movs
jae
xor
leave
fld
mov
xor
int
fwait
in
je
dec
daa
xchg
inc
ror
pop
mov
sub
push
cmc
dec
adc
bnd
push
inc
daa
inc
xlat
cmp
call
sbb
ret
mov
mul
pop
ins
ds
and
mov
sbb
inc
sbb
xchg
lods
inc
inc
sub
std
mov
stos
cmps
dec
in
cdq
xor
xlat
ins
ror
or
mov
and
or
add
lock
and
mov
jbe
pop
push
mov
mov
cmp
fmul
test
jo
mov
add
dec
in
ins
cld
xor
jae
mov
jb
xchg
sbb
or
push
out
ds
mov
pop
int3
repnz
loop
push
mov
sbb
in
loope
call
mov
sbb
sbb
retf
push
or
addr16
add
xor
mov
xchg
inc
test
inc
mov
vmread
call
jl
shl
dec
jbe
xor
or
jno
jno
and
repnz
jae
mov
shr
popf
call
inc
je
push
jl
stos
test
out
sbb
pop
(bad)
mov
pop
scas
dec
push
inc
pop
mov
and
shl
sbb
clc
xchg
xchg
int
les
inc
sbb
xchg
fadd
aam
fcmovu
xor
retf
and
pop
ja
or
xchg
mov
aaa
fisttp
out
es
ins
rol
xchg
add
dec
adc
jle
jo
push
clc
fisttp
xor
movs
ret
sub
cmc
mov
cmp
push
mov
cmp
je
xor
outs
clc
xchg
loope
mov
fidivr
dec
xchg
adc
mov
bnd
pop
fdiv
add
and
xor
icebp
(bad)
sub
sub
lahf
jo
imul
jge
scas
inc
sti
adc
test
fldenv
and
sub
stos
or
fdiv
jle
pop
stos
jp
mov
fistp
inc
cs
jne
lea
pop
cwde
(bad)
cmp
xchg
out
pop
pop
aad
test
sti
xchg
dec
dec
movs
into
call
add
int3
stos
or
lea
xor
cmc
(bad)
pusha
iret
xchg
in
sahf
lods
fnstsw
aaa
mov
clc
cld
mov
in
leave
sbb
imul
out
push
out
jp
push
(bad)
(bad)
mov
inc
jbe
mov
in
sbb
out
retf
mov
aam
mov
pop
ins
mov
imul
push
pop
cmp
daa
inc
xor
jae
cmp
xor
add
lahf
xchg
cdq
int
in
pop
or
(bad)
cli
sti
push
lahf
je
jne
data16
sbb
nop
mov
into
xchg
xchg
test
fsub
lods
icebp
jbe
mov
out
inc
xor
std
pushf
sub
ror
cmp
push
lods
sub
retf
add
loope
call
aad
outs
mov
sub
aas
or
jmp
dec
mov
jg
adc
je
(bad)
sbb
call
test
mov
cmp
rcr
jge
cld
fcmovnbe
add
push
outs
adc
and
sub
mov
sub
call
mov
(bad)
out
les
inc
int3
mov
mov
dec
int3
into
daa
scas
neg
mov
int
dec
xchg
movs
mov
rep
arpl
icebp
dec
fsub
mul
cmp
add
scas
out
xor
xor
jae
cmp
pop
inc
imul
iret
mov
xor
add
test
mov
cmp
xchg
pop
and
in
xor
and
aaa
jmp
fbstp
xchg
ret
xchg
outs
adc
push
push
push
jg
test
imul
fnsave
pop
push
pop
adc
or
jmp
and
fwait
call
movs
retf
in
lahf
sar
dec
push
imul
(bad)
push
inc
mov
cmps
push
(bad)
xchg
xchg
push
mov
xchg
movs
iret
test
push
sahf
(bad)
ins
loope
test
repnz
es
or
xor
rol
ret
(bad)
or
add
lods
cmp
pop
inc
mov
add
mov
pop
in
call
inc
repnz
push
leave
pop
mov
rcl
cmp
retf
or
mov
or
fwait
sbb
jno
stos
dec
or
xchg
rol
mov
cdq
jae
loop
gs
adc
in
xor
adc
adc
out
pushf
pop
mov
rcl
fadd
or
mov
push
and
jo
push
adc
or
sub
pop
and
shl
mov
mov
movs
mov
jp
ror
movs
je
mov
ins
rol
xor
call
shr
test
cmp
mov
pop
aas
sbb
adc
aam
inc
push
add
ret
and
test
xor
cli
cmp
jge
push
mov
mov
jno
adc
test
dec
sbb
fcom
test
or
loope
movs
and
or
fld
pop
shl
dec
jne
adc
rol
xor
frstor
(bad)
ds
or
lahf
psadbw
sahf
sti
xchg
fwait
in
mov
jp
sahf
xchg
movs
in
je
cmp
movs
pop
pop
mov
push
mov
xchg
sbb
cmps
fwait
add
cmc
jecxz
pop
movs
push
sub
mov
cmp
(bad)
(bad)
jecxz
and
mov
mov
jp
pop
dec
or
test
cli
mov
push
jbe
cld
push
stos
xor
cdq
test
push
shr
fsubr
btc
(bad)
js
scas
es
pusha
mov
jp
mov
loope
jg
daa
lds
adc
call
xchg
aam
dec
pop
jge
fsub
in
ret
inc
add
mov
les
adc
jmp
mov
xchg
mov
sbb
dec
in
sti
xchg
add
enter
jno
popf
icebp
popa
mov
jne
xchg
in
pop
push
(bad)
pop
mov
mov
cmps
pop
rcl
addr16
scas
idiv
cwde
and
(bad)
(bad)
jns
test
cmp
leave
xchg
sbb
pushf
sub
fs
in
retf
sbb
inc
inc
add
shr
mov
test
repnz
mov
in
inc
or
xchg
mov
inc
inc
in
std
leave
shl
in
fs
cmp
xor
or
jo
jns
je
outs
cwde
adc
ins
scas
fistp
jo
(bad)
xor
bound
mov
int
sbb
dec
shl
push
stos
fdiv
cmps
dec
dec
out
out
add
pop
gs
cli
cmp
mov
mov
xchg
stos
and
fisub
arpl
jae
jecxz
lea
pusha
in
push
sbb
mov
leave
loop
mov
cs
xchg
int
rcr
out
push
ficomp
je
jb
pop
(bad)
hlt
adc
push
cmp
xor
test
in
mov
mov
sub
ss
mov
dec
aam
ret
push
dec
push
loope
retf
shr
pop
jo
xlat
(bad)
jbe
add
mov
sahf
ss
pusha
sub
idiv
push
pop
xchg
das
retf
jmp
retf
fst
add
dec
fwait
les
pop
jne
imul
and
mov
jl
adc
scas
pop
push
jp
xor
pop
ins
sbb
aad
cmps
aaa
xchg
sbb
loopne
pop
or
add
leave
jl
sub
and
retf
std
(bad)
pop
sub
(bad)
iret
es
or
xchg
outs
push
(bad)
sbb
xor
xchg
dec
mov
call
adc
retf
loop
cdq
mov
xor
and
retf
add
jnp
lock
xor
(bad)
fs
jb
cmp
inc
jns
adc
(bad)
jp
ja
ret
add
cwde
sbb
mov
outs
push
test
jb
sbb
out
(bad)
dec
mov
mov
and
in
loop
repz
sbb
mov
cwde
fdivr
push
ret
xor
mov
int
(bad)
popa
leave
jo
dec
in
mov
in
repnz
and
jmp
and
sub
out
cs
jl
loope
add
push
mov
jo
add
dec
dec
or
aas
push
dec
jp
cmps
in
mov
jnp
mov
out
lock
push
in
xor
scas
xlat
and
iret
mov
(bad)
xor
test
clc
dec
ret
rcr
stos
inc
sub
cmp
cdq
les
ret
jecxz
mov
hlt
adc
mov
cmp
and
popa
jp
mov
(bad)
leave
or
cmps
jle
daa
sub
repnz
sbb
repz
xor
xchg
mov
inc
jnp
fwait
imul
das
push
(bad)
fscale
ja
xchg
mov
movs
mov
lds
imul
add
push
shl
jo
lock
cld
fisttp
cld
cmps
mov
inc
or
adc
les
movs
ins
ds
sbb
cmp
aaa
outs
in
aas
push
add
inc
outs
inc
inc
cdq
pop
mov
aaa
add
cmp
mov
out
sub
mov
or
jne
adc
or
out
test
mov
mov
(bad)
jbe
pop
neg
xchg
jo
jne
addr16
pop
rcr
in
popa
lods
xchg
mov
imul
cs
out
ins
mov
cmp
xor
cld
and
frstor
pop
repz
shr
and
sub
inc
sub
push
add
aas
jne
fwait
cmp
clc
and
pop
stc
call
push
hlt
fwait
lock
jno
movs
fcomp
cmps
in
cmps
push
jmp
adc
ret
sar
adc
and
dec
push
rcr
push
dec
add
xor
cwde
mov
sbb
lea
pop
dec
fisub
pop
mov
jne
retf
(bad)
paddsb
sbb
adc
(bad)
adc
mov
mov
adc
fild
leave
pop
or
iret
jae
inc
inc
(bad)
push
push
(bad)
sub
push
add
inc
inc
(bad)
add
je
jp
and
movs
sar
jl
lods
arpl
ja
loop
jecxz
push
in
int3
pop
jp
pop
cmp
neg
push
pop
ss
inc
fidiv
mov
mov
sub
(bad)
(bad)
ds
call
jo
dec
xchg
push
push
test
adc
and
bound
pop
pushf
adc
enter
dec
arpl
dec
in
push
ret
xlat
inc
adc
push
push
mov
push
adc
jnp
jne
xor
cdq
inc
pop
xchg
loop
hlt
ins
push
test
push
pop
lahf
mov
scas
xor
push
in
pop
imul
jbe
daa
and
(bad)
lods
ins
jp
adc
cdq
out
cmps
jae
(bad)
push
fisub
push
ins
pop
mov
mov
pop
dec
push
pop
mov
add
add
mov
mov
stc
in
xchg
push
or
push
ret
or
cmp
sahf
arpl
push
inc
jecxz
pop
sti
sar
push
push
push
jbe
sar
pop
in
cdq
cdq
cmps
push
push
stos
push
(bad)
hlt
cmp
int3
out
stc
xchg
adc
outs
cwde
(bad)
fidivr
cmp
xor
das
mov
xchg
and
add
mov
or
stos
fidivr
inc
inc
ins
je
(bad)
adc
test
out
(bad)
std
xchg
lahf
aad
xor
xor
xor
and
repz
mov
rcl
and
add
adc
push
iret
mov
pop
mov
mov
jae
les
dec
scas
hlt
(bad)
out
mov
jae
movs
xor
mov
lods
jb
push
jmp
sahf
icebp
sbb
dec
cmps
test
sahf
xor
ret
ficom
push
jns
inc
push
scas
cmp
jne
mov
mov
adc
jno
mov
jp
mov
sbb
aas
sbb
xchg
mov
(bad)
pop
(bad)
out
mov
jbe
xor
or
cmps
loope
mov
sub
aam
nop
mov
idiv
push
jp
push
add
and
xor
pop
mov
(bad)
jg
jns
dec
into
push
jb
int3
mov
cli
pushf
retf
fldcw
mov
push
sub
sbb
mov
push
pop
mov
stos
mov
fsub
push
and
jmp
push
xchg
(bad)
bndldx
icebp
fxch
or
xchg
loope
fsub
lds
cmp
pop
mov
pop
adc
dec
loope
xchg
or
fmul
sub
xchg
jle
adc
clc
ret
adc
scas
retf
sbb
lods
(bad)
inc
into
shl
(bad)
fild
mov
pop
repz
dec
and
xor
jno
and
xor
lds
xlat
push
out
je
daa
jb
adc
jae
xchg
dec
jle
aas
mov
aam
push
push
adc
data16
ds
jb
leave
mov
adc
outs
call
mov
test
outs
push
push
cld
lahf
jl
fwait
(bad)
clc
clc
push
cmp
mov
test
cmp
icebp
mov
pop
sub
push
push
retf
in
unpckhps
xchg
mov
lahf
jbe
push
xchg
inc
inc
retf
je
lods
xchg
test
into
lods
std
mov
xor
or
inc
ds
stc
xor
imul
leave
leave
hlt
ror
jno
nop
popa
pushf
outs
in
push
pop
cmp
jge
movs
sbb
cmp
vhaddps
fnstcw
push
xchg
and
mov
jns
dec
mov
dec
in
pop
pop
movs
inc
add
xlat
pop
cmp
arpl
and
in
xchg
xchg
mov
mov
pop
pop
sub
sbb
retf
push
lea
adc
stos
push
cdq
sbb
push
fmul
mov
mov
pop
in
shl
sbb
jge
iret
adc
jmp
imul
scas
pop
neg
mov
pop
inc
or
add
stos
cs
inc
ret
(bad)
mov
not
mov
(bad)
or
bound
sbb
aad
cmp
mov
mov
and
mov
xchg
iret
cmp
xchg
retf
cld
xor
into
push
jae
(bad)
sar
cmc
jp
dec
ds
test
mov
mov
xor
dec
mov
shr
dec
and
scas
test
adc
sbb
push
jmp
pop
jecxz
imul
sahf
pop
dec
scas
lds
gs
fild
idiv
push
push
lock
loope
std
push
xlat
lods
push
ss
lock
cmp
cmps
inc
aas
out
in
out
or
(bad)
(bad)
outs
sbb
dec
sbb
shl
in
cdq
fucom
imul
mov
popa
inc
das
lods
dec
mov
jp
icebp
sub
xchg
sub
mov
mov
aas
and
aad
pop
adc
movs
out
push
jne
out
(bad)
pushf
in
jmp
inc
cmp
out
mov
popa
aaa
out
adc
ins
rcr
push
movs
cdq
or
xchg
mov
push
shr
cdq
or
idiv
xor
(bad)
idiv
cmp
sub
mov
push
jmp
sahf
pop
scas
out
lods
loop
test
outs
adc
and
sbb
cmp
cmc
inc
mov
or
push
add
push
or
lods
scas
out
fisttp
cmc
jle
push
out
ja
push
rol
js
test
fsubrp
test
adc
rcr
pop
xchg
mov
jl
add
rol
jbe
dec
fwait
(bad)
mov
inc
or
xchg
scas
mov
add
push
and
iret
and
add
jbe
pop
jle
xchg
xchg
ja
inc
(bad)
bnd
dec
sbb
clc
shl
call
push
fidiv
test
add
leave
mov
mov
movs
rcr
std
jne
nop
adc
inc
lods
cmp
adc
jb
inc
cmp
ins
fdiv
(bad)
loope
adc
dec
gs
cmps
aaa
sahf
test
cmp
push
loope
and
leave
in
or
ins
cmc
pushf
imul
pop
jo
jno
sub
add
cs
push
fadd
and
adc
lods
fcomi
mov
repnz
jns
fist
lods
jg
cmp
xchg
push
jle
cs
xchg
(bad)
and
or
xor
in
stc
shl
gs
loop
add
je
add
dec
movs
mov
sbb
js
pop
xor
cmp
popf
sub
imul
inc
adc
ins
xchg
lahf
test
cld
pop
dec
xchg
sbb
jns
pop
out
push
jl
jge
lahf
fnstenv
dec
in
mov
inc
(bad)
sbb
cmp
sbb
(bad)
popa
(bad)
aaa
bound
mov
jns
int3
xchg
lea
pop
call
and
or
jl
xor
call
mov
repnz
sub
or
mov
pop
arpl
cmp
mov
mov
movs
stc
add
rol
aam
sbb
or
sbb
mov
js
test
hlt
jp
sbb
pop
ficom
ror
sub
xchg
lahf
sbb
lock
mov
dec
add
stc
mov
fidivr
cmp
int
out
pop
test
add
outs
jb
sub
adc
pop
fcom
movs
fadd
test
fsub
sub
push
mov
int
in
fadd
jb
mov
push
rol
cmp
fwait
mov
pop
mov
add
or
hlt
call
(bad)
mov
mov
dec
pushf
jne
clc
outs
les
call
(bad)
call
test
movs
pop
std
mov
lods
shr
push
arpl
inc
cmp
ds
sub
sbb
fbld
mov
add
jp
test
xchg
inc
mov
adc
dec
shr
xor
or
sub
movs
retf
popf
and
mov
cmp
mov
mov
xor
xchg
push
ds
mov
xor
and
mov
mov
not
retf
loop
nop
scas
xor
mov
dec
push
lds
mov
retf
fdivr
imul
clc
mov
out
repnz
or
fild
int
adc
jo
outs
cmps
ds
xchg
mov
xor
inc
adc
adc
sub
aam
push
(bad)
xlat
jge
add
xor
adc
inc
mov
aaa
and
xor
push
lods
push
xchg
or
cmp
mov
test
xchg
adc
and
cld
push
pop
out
sar
dec
cmp
jp
(bad)
lahf
in
push
fwait
mov
push
mov
stos
in
int3
sbb
cwde
or
clc
aad
and
or
cld
cmps
dec
and
enter
pop
sub
popf
hlt
out
and
mov
cmp
adc
js
mov
pop
jnp
aam
sub
jae
xor
fs
add
mov
add
cmp
push
es
inc
leave
das
push
adc
push
scas
shr
das
mov
and
adc
loop
(bad)
jp
and
mov
cmp
lods
imul
inc
test
mov
sub
pop
cmp
mov
fnstsw
enter
gs
stos
jmp
loope
ret
push
push
sub
int
push
xor
xchg
dec
std
pushf
loope
sub
into
jmp
ret
mul
add
cli
add
push
pop
cmps
pop
(bad)
popa
jge
pop
jmp
into
mov
inc
mov
ins
or
push
jb
frndint
lea
and
test
lock
jmp
dec
adc
nop
sbb
mov
add
pushf
push
fnstenv
push
addr16
(bad)
jbe
dec
jmp
or
adc
sahf
(bad)
add
push
std
add
loope
jns
ss
xchg
fwait
out
adc
jnp
sub
test
stos
jo
aam
or
cwde
mov
and
(bad)
mov
retf
test
(bad)
mov
imul
fst
sahf
(bad)
scas
leave
mov
inc
xchg
mov
jmp
pop
shl
cmps
dec
or
out
push
test
mov
inc
js
fiadd
mov
(bad)
(bad)
cdq
or
shr
pop
add
jmp
or
mov
mov
repnz
adc
ds
data16
test
out
adc
sub
not
inc
mov
daa
out
add
add
adc
(bad)
xchg
or
or
jne
sahf
in
cdq
cli
mov
jne
(bad)
cmps
sbb
leave
test
jge
ss
inc
push
cmc
retf
pop
loop
addr16
cmc
loopne
or
(bad)
aaa
adc
popa
fprem1
pop
and
push
mov
jmp
or
xchg
xor
xor
or
lahf
enter
pop
pop
js
es
xor
ins
cwde
and
(bad)
jae
push
and
cli
xchg
push
mov
cmps
mov
mov
repz
popf
inc
xor
jmp
inc
mov
push
xchg
cld
fcomip
jge
loop
(bad)
iret
mov
and
loop
xor
mov
fs
pop
sahf
sbb
push
loopne
fwait
cld
and
mov
dec
xlat
shl
push
sub
adc
mov
shl
int3
pop
hlt
popf
mov
fdiv
in
mov
fidiv
adc
adc
rcl
inc
xor
pop
adc
addr16
movs
and
sbb
mov
xchg
jmp
add
jmp
shl
jle
call
mov
sbb
pop
pusha
stos
push
lods
scas
std
pop
scas
scas
(bad)
mov
ror
mov
add
sub
inc
test
sbb
pop
cmp
push
out
(bad)
retf
push
add
loope
cmps
mov
xor
stc
out
inc
adc
mov
(bad)
or
xor
test
mov
pop
xlat
scas
fld
out
inc
loope
cs
adc
xor
scas
xlat
lods
dec
out
xchg
popf
out
bound
outs
or
cdq
sti
jae
jns
push
xor
add
call
mov
mov
movs
xor
mov
cmps
test
loope
in
(bad)
js
jo
lods
push
int
mov
ds
test
xlat
ret
push
jecxz
arpl
mov
movs
inc
sbb
push
mov
shl
rcr
fdivr
in
push
std
mov
ss
popa
loopne
and
mov
add
xchg
lods
fcmovnbe
fistp
mov
int
bound
and
xchg
push
daa
jo
cmp
out
rol
lods
dec
gs
es
push
das
dec
jle
rol
jmp
jo
mov
pop
and
xor
movs
outs
sub
cmp
imul
adc
sar
xchg
and
sbb
jne
dec
leave
mov
call
ret
mov
sub
push
jmp
je
rcr
xchg
cmc
dec
rcr
and
sub
(bad)
ret
and
test
ret
js
push
xlat
sbb
cmp
rcl
mov
xchg
xlat
mov
adc
adc
lds
mov
lock
xchg
fsubr
repnz
loopne
push
ins
jp
loopne
call
push
pop
loop
adc
outs
adc
add
mov
jnp
fdivr
pop
jge
sbb
cmps
or
loopne
es
pop
or
inc
fdivr
sub
mov
inc
shl
jbe
test
mov
clc
jp
jns
pcmpgtw
out
xor
sub
test
and
js
inc
dec
lds
pop
outs
pop
clc
test
push
sub
mov
adc
fimul
xchg
fs
push
jle
retf
test
xchg
mov
arpl
cmp
pop
cwde
and
mov
out
es
mov
div
inc
test
xor
icebp
pop
fidivr
xchg
or
lahf
shl
push
(bad)
fninit
and
pop
jp
mov
xlat
(bad)
aam
sbb
mov
shl
push
daa
sbb
outs
cmp
ds
cmp
ret
or
xor
movs
push
add
and
and
cmp
shr
aas
push
fistp
inc
in
xchg
mov
out
std
ret
inc
pop
pop
jmp
xchg
and
sti
nop
retf
dec
push
movs
out
daa
mov
out
mov
aam
jecxz
in
mov
push
jecxz
rol
(bad)
xchg
test
lods
mov
jmp
mov
xor
mov
call
les
(bad)
cmp
add
std
pushf
(bad)
fwait
movs
jecxz
mov
aaa
rcr
mov
and
outs
sub
jae
hlt
sub
enter
scas
pop
sbb
push
outs
mov
push
inc
dec
jp
mov
data16
cld
out
cmps
or
inc
jnp
mov
mov
add
xchg
jl
jg
shl
or
pushf
out
push
adc
call
cli
mov
jl
sahf
dec
retf
dec
jae
pop
push
int3
lea
test
ret
add
in
mov
jbe
(bad)
repnz
push
outs
mov
and
and
adc
push
or
test
scas
push
lds
jne
int
pusha
int3
fidiv
hlt
cmp
xor
sti
jne
adc
cmps
mov
jmp
inc
out
xchg
mov
lea
or
add
icebp
and
out
cmp
cmps
jno
cmp
inc
je
stc
adc
sbb
test
mov
dec
mov
repz
mov
ins
ret
adc
not
pop
jecxz
inc
data16
push
int3
or
fldl2e
mov
jno
cpuid
jp
repz
retf
in
inc
cmp
mov
adc
and
adc
dec
pop
ins
retf
mov
jl
add
mov
sub
call
dec
fsubp
xchg
and
rol
adc
loopne
inc
lock
(bad)
mov
sbb
loop
call
(bad)
mov
das
sub
push
adc
(bad)
sbb
xchg
iret
test
ror
mov
mov
(bad)
js
cdq
push
retf
iret
sub
xchg
jbe
and
ss
or
mov
dec
(bad)
cli
push
rcr
stos
cmp
push
add
ds
push
and
add
out
jnp
std
inc
sbb
movs
or
(bad)
jmp
in
aad
punpckldq
and
sbb
mov
mov
aad
cmp
mov
leave
je
test
data16
pop
pushf
sbb
push
inc
xor
mov
aas
xor
mov
jae
and
or
aam
xor
push
inc
xor
shl
cmp
shl
repnz
daa
and
lods
and
cmc
sub
sub
dec
mov
test
add
inc
adc
imul
cld
sbb
mov
loope
or
hlt
movs
and
or
in
xchg
add
sub
es
dec
cmp
inc
adc
fadd
add
mov
xchg
mov
cmc
fldenv
jae
or
(bad)
mov
nop
repnz
xor
xor
adc
pushf
out
mov
xor
or
jg
ins
mov
ror
push
fnstenv
sbb
cli
jno
aad
jecxz
pop
jp
mov
enter
imul
ins
and
adc
xchg
push
push
arpl
mov
inc
repnz
pop
call
jbe
xor
and
push
rcl
loop
jmp
hlt
mov
cmc
jl
outs
add
xor
out
dec
dec
or
add
sbb
cmp
rcr
inc
in
bound
xchg
mov
mov
int
js
fcmove
push
loope
aad
cmps
and
mov
jo
cdq
or
or
inc
into
movs
cld
jne
xchg
sbb
(bad)
out
shl
lea
xchg
jg
xchg
fnstsw
popa
data16
iret
adc
sub
leave
arpl
in
adc
dec
in
mov
cmps
or
or
(bad)
mov
pusha
sahf
push
aad
les
pop
xchg
sbb
push
mov
fwait
scas
call
cmp
or
push
pop
jae
lds
and
fwait
or
xor
mov
rcr
sahf
mov
in
mov
stc
test
jae
jge
cmp
data16
push
stc
mov
push
dec
sbb
xchg
mov
out
enter
cmp
xor
sub
loop
adc
jbe
mov
xchg
aam
fisttp
jle
add
mov
and
xor
push
lahf
mov
fiadd
push
js
loope
fdivp
cmp
jne
push
sub
adc
fld
pop
loopne
pop
fisttp
lods
and
mov
ins
call
in
out
xchg
call
dec
sub
daa
pop
push
sub
call
addr16
xchg
jg
sbb
pop
cdq
push
pop
jmp
repz
out
sbb
mov
(bad)
fsubp
stos
xor
jecxz
inc
cmps
sbb
cmp
int3
add
in
fistp
mov
retf
push
mov
adc
imul
pop
popa
fisttp
lods
xchg
and
mov
call
jo
mov
or
xchg
leave
push
mov
dec
adc
xchg
out
jo
add
push
ins
dec
cmp
dec
sub
das
jns
push
sbb
fcom
ret
in
es
stc
xor
pop
add
push
out
call
mov
mov
xor
or
xor
jp
pop
xchg
call
push
mov
or
inc
and
ja
xchg
bound
in
xchg
sti
js
arpl
int
ffree
push
(bad)
dec
sbb
pop
mov
pop
fidiv
stos
jmp
es
xor
and
sar
push
imul
cvtdq2ps
cwde
xchg
clc
jp
imul
mov
in
mov
jle
call
xor
sbb
call
jmp
mov
xor
and
xor
pop
daa
xor
mov
pop
push
lods
cmps
in
lds
add
inc
rol
js
xchg
fld
out
fstp
adc
ror
sub
(bad)
ret
cmp
leave
mov
int
sti
mov
cli
or
or
push
lock
jmp
sbb
arpl
xor
pop
or
jb
push
pop
push
push
dec
frstor
ins
xchg
out
push
jle
xor
and
mov
jg
dec
jp
add
sub
retf
lds
hlt
add
dec
push
jbe
xchg
scas
xor
and
pop
or
inc
das
cld
push
jae
mov
ins
cmp
pushf
(bad)
outs
das
lods
cmp
add
shl
push
adc
jnp
sub
sub
mov
je
es
stos
ins
les
scas
call
mov
pop
xchg
loopne
cmps
xchg
(bad)
and
add
dec
xchg
jns
je
and
(bad)
out
mov
mov
sbb
call
push
lahf
xor
pop
mov
inc
add
cmp
mov
jo
xchg
sub
retf
pop
mov
push
repnz
or
add
repnz
dec
jecxz
into
inc
push
jp
mov
daa
daa
sbb
xchg
fild
pop
js
sub
mov
(bad)
aaa
(bad)
bound
jle
sub
xchg
loop
sbb
add
mov
ret
je
les
es
loop
je
retf
push
xor
xor
out
and
es
push
outs
retf
aas
cmp
or
inc
fisub
dec
out
out
lock
iret
mov
and
popf
mov
jg
adc
ss
sahf
lahf
push
call
mov
(bad)
outs
cmps
out
out
xor
test
sbb
mov
jb
mov
dec
fcom
mov
jle
std
inc
mov
test
or
mov
and
cmp
fwait
cld
lods
loopne
outs
mov
ja
xor
cmp
call
adc
push
repnz
mov
pop
cmp
test
aad
push
dec
sub
retf
push
retf
(bad)
in
lock
cmp
dec
icebp
cld
inc
ds
jg
xchg
sbb
cmp
push
cmc
xchg
in
add
aad
pusha
adc
jo
(bad)
and
mov
xor
arpl
icebp
xchg
jns
mov
das
mov
jecxz
iret
ins
push
jns
(bad)
sub
test
jbe
mov
adc
xchg
add
loopne
add
out
test
mov
or
cmp
jne
call
(bad)
addr16
(bad)
and
lea
pop
(bad)
cwde
sub
sub
sbb
dec
stos
push
or
gs
and
(bad)
sub
mov
cld
pop
fadd
into
sub
fst
xchg
mov
mov
pop
(bad)
mov
fs
mov
stos
in
mov
and
out
xor
sub
pop
jp
cs
cld
jb
and
xlat
sbb
jg
xchg
ds
push
sub
(bad)
aad
mov
pop
xor
dec
adc
and
pusha
add
xchg
mov
cmp
das
sar
pop
jne
mov
bound
mov
xchg
push
push
pop
or
neg
push
sbb
jb
fnstsw
mov
in
into
sbb
mov
idiv
sbb
push
cmp
pop
and
fcom
push
jmp
sbb
sub
jnp
bound
arpl
test
(bad)
add
jmp
cmp
dec
fs
icebp
pop
scas
popf
lods
jl
or
jno
fisub
hlt
dec
push
dec
sub
ret
xchg
sub
push
mov
and
lock
adc
sub
sar
pop
test
or
adc
shr
iret
sahf
scas
retf
sbb
in
mov
or
cmc
push
mov
clc
mov
jmp
cmps
int3
or
adc
fs
jns
xor
inc
cld
fsub
arpl
cmp
push
jge
mov
jecxz
ins
mov
jg
xchg
and
sub
adc
dec
les
icebp
jl
mov
xchg
retw
nop
xchg
punpckhwd
imul
xchg
xchg
loop
clc
push
sti
cmp
aam
arpl
push
das
cmp
movs
dec
adc
fst
pop
pop
shl
xor
mov
cdq
and
sar
cmps
ret
bt
xor
dec
aaa
das
sub
push
mov
cmp
(bad)
in
sub
mov
jg
inc
xchg
or
lods
or
ret
popf
push
push
xchg
mov
xor
pop
mov
dec
or
rcr
(bad)
iret
xor
addr16
stc
mov
loopne
clc
retf
mov
or
jmp
adc
sub
int3
fld
loop
xchg
dec
std
push
data16
or
dec
or
popf
pop
jle
sbb
xchg
rcr
push
xchg
cmp
or
cmp
xor
fldz
inc
push
sub
sub
out
ins
adc
inc
mov
push
stos
shl
or
sbb
xor
int
daa
add
mov
fisub
jnp
nop
mov
in
jge
sbb
adc
pop
sbb
cld
lds
push
jge
inc
test
or
push
mov
xor
add
ins
paddsb
or
icebp
jmp
lock
cmp
mov
shl
or
push
or
mov
mov
xchg
mov
mov
sti
out
xor
mov
mov
push
push
jb
inc
add
inc
mov
pop
test
adc
or
sbb
jo
pop
mov
cli
push
mov
sbb
loop
mov
popa
ins
mov
mov
xor
push
jbe
add
test
(bad)
pop
xor
and
hlt
ss
call
xchg
cmps
xor
cmps
popf
ins
addr16
test
dec
ficom
loope
fisttp
loope
xchg
pop
mov
scas
mov
or
(bad)
pop
ret
pop
ins
in
int3
in
cmp
pushf
push
aad
add
inc
dec
or
xchg
mov
call
movs
jmp
xchg
adc
mov
dec
into
outs
jecxz
mov
cld
adc
sbb
xor
cwde
(bad)
cmp
cmp
movsx
adc
cmp
shl
es
iret
lods
test
mov
and
pushf
sub
jge
mov
arpl
push
xchg
add
mov
mov
lock
dec
dec
jmp
jnp
ja
in
push
int3
stc
in
into
shl
ds
jmp
pop
fdivrp
mov
mov
sub
dec
ficomp
pop
jmp
cmps
sub
neg
das
dec
out
inc
cmc
and
xchg
push
adc
imul
ror
inc
jo
add
mov
pop
int3
call
cmps
ret
adc
(bad)
mov
inc
cwde
dec
cmp
enter
lahf
mov
push
adc
xlat
inc
mov
pop
adc
dec
jmp
cs
xor
cwde
xor
test
out
jp
imul
sub
mov
and
push
push
or
fmul
or
xor
lea
loope
pop
adc
int3
je
cmp
gs
push
movs
cld
aad
sar
mov
pop
push
push
xor
stos
push
test
sbb
fs
sbb
sub
ret
loope
add
xor
xor
ficomp
in
cmp
or
rol
dec
hlt
cli
imul
xchg
push
call
jg
retf
jo
ret
sub
cmp
adc
push
cwde
xor
daa
call
in
into
xchg
mov
sbb
out
xchg
test
pop
jmp
outs
cmp
or
nop
scas
mov
xchg
jmp
xchg
test
inc
jae
les
bswap
sub
or
cmp
mov
lock
cmp
mov
cmps
mov
sbb
lds
pop
jbe
dec
call
stos
out
fnstcw
dec
ds
stos
or
ret
jl
jbe
pop
sti
xchg
loope
call
xchg
mul
adc
jne
cmps
pop
cmp
jmp
mov
ret
cmp
sub
in
pop
leave
fwait
out
dec
pusha
cdq
add
(bad)
dec
clc
mov
mov
nop
inc
adc
cwde
popa
cmp
adc
add
fisubr
jno
xor
mov
sahf
add
test
cmp
cmp
popf
lods
mov
xor
sub
gs
push
lods
test
push
mov
test
out
lods
push
pop
lods
rol
cmp
ret
test
test
xchg
ins
in
call
inc
or
popf
or
xlat
mov
(bad)
ror
movs
push
ja
xchg
clc
pop
or
aam
test
icebp
jmp
mov
pop
lock
jecxz
jl
test
sbb
outs
and
xor
jmp
adc
xor
cmp
pusha
pop
(bad)
jns
xchg
mov
sub
sbb
lods
stc
sbb
push
mov
sub
push
xchg
jne
cs
imul
and
mov
sahf
arpl
in
nop
inc
test
xchg
push
push
jo
std
das
push
aam
scas
js
adc
sub
prefetcht1
mov
std
or
gs
add
mov
jb
mov
leave
cmp
enter
mov
pop
pop
push
fadd
jno
inc
cmp
or
lea
stos
mov
aam
inc
pop
add
rcr
retf
mov
mov
jns
adc
mov
stos
out
sets
cmps
int3
adc
pop
add
adc
mov
mov
sub
sub
add
lahf
inc
dec
and
inc
fild
jmp
sub
sub
cmp
inc
and
clc
addr16
mov
fdiv
pusha
and
jmp
(bad)
xor
inc
outs
repz
outs
mov
push
sub
sub
mov
mov
jo
push
aas
jp
iret
stc
or
xlat
push
dec
in
mov
cmp
pop
push
xor
dec
xchg
rol
loop
xor
mov
push
push
adc
and
movs
leave
cld
inc
sbb
or
inc
(bad)
dec
push
fimul
xor
mov
addr16
xchg
(bad)
or
out
arpl
lahf
icebp
ds
out
addr16
jbe
stc
enter
push
idiv
add
xor
xchg
in
push
imul
scas
stos
jp
cdq
(bad)
push
dec
or
mov
inc
pop
int
dec
mov
repz
cmp
xchg
call
xchg
and
pop
adc
(bad)
(bad)
xchg
hlt
sub
shl
nop
pop
(bad)
fucom
xor
das
bnd
xor
test
adc
aad
ins
sbb
adc
test
sbb
mov
inc
sti
xchg
lods
sbb
or
xchg
or
push
xlat
add
in
int3
test
add
jno
jns
out
mov
(bad)
repz
push
mov
clc
or
cli
movs
xchg
daa
pop
stos
shl
in
leave
pop
and
in
inc
push
adc
ret
lods
and
and
add
imul
inc
xchg
int
adc
adc
sbb
mov
sub
out
pop
cs
push
mov
mov
into
fisubr
jae
pop
push
into
xchg
sbb
das
lock
cwde
daa
(bad)
mov
sub
test
push
test
push
mov
lahf
jge
pop
outs
or
out
mov
enter
and
pop
sub
jp
xor
cmp
fstp
sbb
in
push
call
pop
add
xchg
pop
loopne
cmps
xchg
scas
lds
loop
repnz
push
and
add
add
xchg
jo
mov
int
idiv
hlt
cmp
shr
gs
and
(bad)
mov
mov
jmp
mov
mov
adc
fwait
inc
jns
adc
loope
mov
neg
mov
popf
mov
call
add
scas
dec
push
xchg
test
ds
or
xchg
(bad)
mov
mov
sbb
push
outs
daa
idiv
pop
mov
sub
add
jno
mov
retf
sti
sub
inc
cmps
pop
and
fimul
pop
dec
jae
jns
gs
cmp
movs
dec
vrcpps
and
das
fnsave
inc
inc
das
ror
sub
adc
mov
pop
ja
jp
outs
(bad)
jge
nop
cli
xchg
adc
ins
xchg
neg
aaa
ins
imul
pop
ds
js
dec
stos
mov
add
cmp
retf
test
jne
cli
arpl
cmp
imul
mov
jge
xor
adc
stos
cmp
scas
psllq
aas
aad
pop
push
and
ja
mov
add
add
pop
sar
mov
pop
mul
(bad)
mov
gs
push
mov
into
(bad)
pop
sbb
pop
in
dec
leave
repnz
dec
xor
xchg
jmp
dec
imul
push
sbb
inc
shl
dec
cmp
pop
imul
pop
out
adc
xchg
mov
or
ds
mov
cmp
repz
and
stos
mov
ficom
push
mov
fimul
test
xor
jmp
and
arpl
push
dec
sti
push
inc
and
xchg
fmulp
adc
sub
cmps
es
cdq
push
test
adc
int
shl
fs
imul
lods
xchg
test
popa
mov
popa
cdq
cmp
sub
push
dec
pusha
and
in
test
sub
(bad)
pusha
and
sahf
dec
mov
in
inc
add
je
in
jp
rcl
fsubr
adc
xchg
nop
aad
xor
gs
clc
adc
(bad)
and
call
jge
jns
imul
iret
push
aad
mov
jle
mov
cld
inc
inc
jb
ss
(bad)
cwde
dec
sub
out
leave
sub
adc
mov
dec
rol
or
or
jb
test
test
add
lock
sub
movd
adc
or
jno
jge
jp
gs
mov
pop
sbb
mov
xchg
mov
mov
popf
rcl
fs
push
jecxz
rcl
aas
fdiv
jo
das
int
push
popf
xchg
bound
jb
int3
test
xchg
mov
mov
sub
push
adc
stc
push
shr
jns
cmp
(bad)
lods
push
xchg
ror
jne
mov
dec
mov
mov
adc
inc
pusha
mov
jle
mov
sub
aaa
adc
repz
sbb
pop
shr
sbb
add
hlt
jecxz
retf
movs
pop
cmps
mov
popa
test
xor
mov
adc
fild
pop
mov
loop
adc
mov
add
push
(bad)
jne
xchg
jae
popa
es
pop
in
pop
pop
call
cmp
jo
jno
ins
inc
rcr
pop
into
dec
(bad)
ret
jbe
cdq
in
je
rcl
dec
sub
adc
pop
mov
mov
cmp
shr
push
xor
push
add
ins
ror
lock
je
xor
dec
add
mov
gs
jmp
fsincos
inc
xchg
lock
pop
mov
adc
loope
add
and
add
push
mov
int3
fsubr
dec
(bad)
je
jecxz
jge
dec
js
in
int
or
cmp
iret
mov
std
std
leave
add
ror
ret
add
push
fadd
(bad)
aad
mov
jne
arpl
loope
stc
and
scas
jp
inc
stos
xor
cli
inc
jns
jge
inc
popf
fsubrp
sbb
xlat
scas
test
inc
mov
sbb
sub
push
mov
push
push
push
jp
clc
jmp
jne
imul
cdq
in
ss
jo
dec
or
pop
fisubr
jno
ret
rcr
push
leave
adc
scas
outs
mov
fdiv
dec
out
ss
jmp
adc
cdq
sub
call
repz
lea
lahf
test
dec
data16
out
inc
push
inc
int
push
and
int3
push
fldcw
fwait
in
movs
jg
scas
retf
xchg
ret
xchg
push
cmp
ds
ret
aas
das
inc
pop
xlat
mov
rol
or
push
and
cmp
xor
leave
arpl
(bad)
jp
or
or
sub
push
mov
jle
inc
jbe
or
or
or
iret
xchg
inc
movs
push
jecxz
sbb
fdivr
fs
iret
cmp
sbb
xchg
and
xchg
mov
hlt
mov
iret
jnp
aam
call
dec
fadd
cmp
or
push
adc
pop
(bad)
out
push
xor
push
scas
fucomp
adc
cmp
test
mov
cmp
jecxz
ins
popf
push
lods
movs
scas
dec
dec
pop
and
jle
jae
or
or
loope
imul
sub
xchg
fs
rcr
ret
lock
pusha
rcl
inc
stos
retf
jecxz
jbe
lods
inc
shl
sub
xor
mov
dec
inc
mov
mov
shr
pop
sub
es
dec
aaa
jl
xor
jl
aaa
(bad)
dec
aam
aas
or
scas
clc
mov
daa
lahf
aam
xor
pop
adc
pop
xchg
loope
lods
push
pop
fdivr
fadd
mov
in
test
ret
inc
popf
mov
jecxz
jae
popf
dec
dec
aad
and
mov
cmp
mov
mov
mov
xchg
cwde
xor
push
add
(bad)
xchg
lea
xor
es
fstp
out
adc
aam
or
sti
add
out
push
mov
dec
mov
(bad)
jl
push
push
add
fld
in
push
cmp
inc
cwde
aaa
jne
sbb
add
in
xchg
(bad)
xor
cmp
xor
(bad)
pop
push
pushf
jge
cmp
jo
aas
adc
jl
push
pop
inc
mov
dec
ror
jno
sub
cmc
in
or
test
dec
xchg
xchg
push
inc
pop
and
push
mov
in
jmp
mov
out
pop
adc
inc
and
jo
(bad)
pop
and
adc
test
mov
sti
in
popa
dec
and
pop
dec
scas
int
loop
clc
aaa
fstp
xor
dec
mov
cmp
dec
jp
mov
retf
adc
movs
xchg
vpunpcklbw
sti
int
xchg
fwait
scas
or
or
jns
cmp
test
test
xchg
stos
enter
aad
mov
pop
arpl
fistp
xor
mov
scas
pop
rcr
aaa
(bad)
mov
je
out
xlat
mov
xchg
jno
test
es
test
add
xchg
jb
and
mov
fidiv
pop
push
das
cmp
popf
cmp
jl
mov
sub
fisttp
int3
test
daa
scas
and
push
lods
ins
shr
cmp
mov
push
jle
sbb
xchg
les
fsub
retf
mov
sahf
sub
adc
adc
rol
mov
fst
aam
out
pop
(bad)
or
dec
(bad)
aad
xor
xor
cli
jo
shl
popf
neg
push
mov
test
rcl
jo
stc
pusha
cmp
test
nop
fnsave
scas
repnz
lods
dec
pop
or
(bad)
call
mov
stos
mov
sbb
xchg
nop
jb
jb
jp
shl
pop
inc
push
shl
rol
inc
cmp
jg
cmp
or
aam
push
(bad)
mov
stos
and
mov
and
add
pop
or
push
fisttp
xor
mov
dec
jmp
shl
xchg
pop
int3
push
adc
dec
mov
stc
nop
xchg
cmp
(bad)
aam
inc
ins
jge
cmp
pop
stos
shr
lods
cdq
lods
inc
inc
sti
ja
dec
ret
icebp
jo
in
sub
mov
inc
jmp
cdq
lock
cmps
cmp
cmps
sub
imul
out
in
fisttp
ficom
push
add
adc
ss
out
sub
adc
jno
xor
add
mov
cmp
push
out
cmps
inc
mov
jmp
daa
sub
movs
fsub
mov
jb
call
ins
fs
inc
xor
ins
or
mov
pop
fbstp
mov
push
mov
imul
out
cmp
push
dec
dec
cmp
(bad)
out
inc
push
adc
mov
dec
mov
pop
mov
jns
jecxz
mov
pop
stc
and
pop
mov
stos
loopne
mov
or
mov
mov
(bad)
adc
mov
push
jae
leave
pusha
cmp
inc
adc
push
and
iret
bound
int
fsubr
call
out
or
xchg
call
enter
pop
inc
outs
lds
cmp
or
sub
mov
mov
fnstcw
rcr
mov
outs
push
fsubr
mov
cmps
mov
add
es
fiadd
dec
sbb
and
mov
adc
fsub
mov
cmp
leave
daa
movs
lods
mov
movs
fwait
adc
xchg
pushf
push
and
sbb
pop
lds
sbb
mov
mov
jle
pushf
xchg
jbe
or
hlt
ret
int3
aaa
sbb
cmp
fisttp
(bad)
push
pusha
xchg
sbb
mov
ficomp
aad
daa
ins
mov
xlat
sbb
xchg
xchg
jp
dec
lods
imul
jno
sub
test
dec
outs
xor
push
sbb
mov
pop
sbb
or
pop
adc
jmp
stos
lahf
mov
xor
fs
cmp
enter
call
pop
out
sbb
enter
add
test
(bad)
imul
or
sub
mov
xor
aam
xchg
mov
int
stos
daa
add
outs
mov
mov
loopne
jg
stos
or
or
cmp
and
(bad)
pop
pop
call
sub
mov
lock
outs
inc
inc
mov
dec
push
mov
inc
add
pop
xchg
or
scas
sbb
aaa
loop
shr
mov
loope
push
xchg
test
hlt
cs
out
movs
shl
pop
pushw
mov
rol
jno
or
cmps
fsub
dec
inc
cmp
jg
jge
sbb
es
test
ins
and
push
fbstp
aas
(bad)
out
mov
test
sahf
push
add
call
out
push
imul
inc
in
mov
aaa
dec
add
(bad)
popf
mov
sbb
ficomp
add
add
nop
jnp
dec
mov
mov
sbb
push
and
pop
dec
fwait
iret
scas
aaa
dec
ds
aam
mov
inc
sub
sbb
daa
je
fistp
and
sub
jp
add
adc
push
push
add
sbb
cwde
in
repz
stos
add
mov
xchg
imul
ror
mov
fimul
jmp
mov
dec
sub
call
xor
or
hlt
retf
cmps
cwde
inc
lock
inc
pop
xor
fs
mov
pop
sbb
cmp
xchg
mov
movs
jecxz
and
jmp
sahf
jnp
outs
(bad)
sbb
mov
leave
inc
lods
lahf
ror
test
sub
test
xchg
xchg
(bad)
fistp
enter
inc
and
push
mov
fnsave
rol
xor
(bad)
sar
sbb
adc
inc
inc
adc
jle
jmp
jb
cld
(bad)
loop
mov
ds
dec
jno
gs
push
movs
test
js
cmp
jle
push
ja
push
cdq
and
(bad)
(bad)
out
push
arpl
out
fnstcw
mov
or
push
pop
pushf
and
cdq
ja
fwait
das
ins
sbb
jg
jne
fwait
push
push
arpl
pusha
mov
push
jo
add
ss
daa
push
xchg
jmp
sbb
sub
jae
jo
adc
out
(bad)
push
mov
fs
into
dec
or
neg
movs
mov
shr
xchg
std
adc
test
and
sbb
hlt
sbb
cmp
lods
or
mov
fistp
btr
in
aaa
dec
lods
icebp
(bad)
data16
push
(bad)
sub
test
(bad)
hlt
pop
ret
imul
loop
dec
cwde
cli
dec
mov
into
dec
sbb
jg
push
push
push
xchg
mov
xor
call
xchg
lods
mov
push
push
icebp
push
ja
sub
or
pop
and
sub
push
mov
adc
in
bnd
std
mov
cmp
sub
nop
push
ret
cdq
daa
or
push
std
dec
fisubr
test
adc
push
fs
xor
rol
sub
fstp
dec
cmc
xchg
jl
add
jb
xor
or
push
add
jae
and
or
cmp
mov
cwde
push
nop
les
rol
sbb
test
mov
lods
nop
jbe
push
mov
or
dec
jae
cmp
fcom
outs
add
pop
sbb
inc
mov
mov
or
xchg
push
inc
sub
push
test
fucom
xchg
dec
push
jge
cmps
cmp
jp
sub
cs
fistp
pop
aad
popa
sub
out
mov
es
xor
cmp
rcr
inc
push
sti
int3
mov
jl
sub
rol
adc
sbb
jg
fldpi
in
sub
and
add
mov
sahf
pop
adc
addr16
xor
fdivr
mov
xor
sub
cwde
int
sti
xor
jae
pusha
out
inc
sbb
pop
loop
add
inc
mov
shr
pushf
xchg
loop
cdq
and
pop
leave
retf
js
jg
ret
push
inc
jge
fcom
repnz
mov
hlt
sub
fs
aaa
mov
pop
mov
cld
ja
bound
icebp
ret
popf
inc
cs
jge
xor
shl
aam
pushf
or
sahf
(bad)
(bad)
pop
cli
push
lds
ja
fdivr
shl
xchg
mov
(bad)
cwde
xchg
dec
pop
enter
cld
fadd
cs
mov
and
enter
sbb
lods
sub
ret
and
iret
sbb
mov
popa
(bad)
mov
pop
xchg
mov
mov
jl
sti
adc
out
test
mov
repz
sub
push
mov
hlt
(bad)
jg
add
xor
out
aas
sub
sub
ret
mov
mov
in
pop
push
test
adc
dec
jb
ret
mov
or
(bad)
mov
jle
mov
lods
push
inc
(bad)
neg
popf
dec
xchg
xor
repz
in
jle
jmp
mov
lahf
mov
sbb
mov
out
xchg
rcl
jns
sub
nop
xchg
outs
mov
inc
xor
push
cmps
js
mov
repz
mov
or
jb
sub
inc
imul
outs
icebp
pabsb
ret
(bad)
stc
cmc
mov
bound
or
and
mov
pop
sub
mov
ja
icebp
retf
or
mov
push
int
inc
dec
into
ror
jno
fimul
outs
sbb
push
dec
xchg
dec
xlat
inc
loopne
dec
imul
pop
(bad)
loop
pop
mov
pop
jb
jbe
mov
inc
inc
push
test
push
jo
je
cld
mov
mov
cmp
cmps
movs
scas
pop
sar
nop
xor
ds
mov
xchg
sub
arpl
pop
pop
and
mov
xor
push
call
daa
and
inc
stos
repz
int3
(bad)
fwait
dec
cmps
gs
nop
stos
mov
push
jns
fbld
or
ror
lahf
shl
leave
out
pop
ins
or
(bad)
jb
jb
cmc
lods
xor
xchg
add
fiadd
inc
scas
lods
sar
(bad)
rol
rcr
shl
idiv
cdq
mov
and
leave
ins
add
in
jo
cmc
mov
popf
cld
mov
inc
daa
test
xlat
mov
add
mov
dec
mov
push
xor
push
clc
mov
popf
xor
sti
adc
xor
and
xor
(bad)
aam
es
fisttp
pop
fild
mov
push
inc
sub
cwde
jmp
mov
aas
jmp
loopne
mov
add
(bad)
in
les
xchg
les
ffree
or
aaa
add
mov
sub
sub
cdq
dec
aad
les
xor
push
out
fs
lea
movs
mov
cmp
jae
mov
icebp
adc
test
pop
sbb
in
xor
xchg
dec
rcl
xor
ss
xor
gs
arpl
jmp
pop
call
mov
cmp
les
mov
in
std
js
ss
ret
mov
cli
sub
push
mov
xor
arpl
iret
xor
adc
push
dec
int3
sub
leave
mov
jmp
hlt
fcom
push
adc
push
xchg
adc
ror
(bad)
sbb
jns
add
ret
xor
in
daa
sar
cmps
test
dec
ss
cmps
leave
es
add
imul
lock
out
dec
pusha
adc
push
stc
jb
mov
into
push
add
loopne
(bad)
imul
or
pop
lods
mov
inc
pop
or
xchg
inc
ret
aaa
mov
xlat
cmp
loopne
jno
dec
mov
jne
movs
fistp
in
int
stos
cmps
push
and
mov
mov
(bad)
loope
dec
lock
lock
imul
pop
das
sbb
loop
pop
pop
ret
xchg
ficom
sbb
add
push
(bad)
ins
xchg
jmp
or
out
enter
test
xor
sbb
ret
js
mov
ficomp
shl
cmp
mov
leave
mov
add
mov
(bad)
shl
adc
call
into
push
cmps
and
lods
adc
cli
mov
ret
retf
cwde
lock
inc
pop
in
addr16
xlat
jnp
cmp
adc
fcmovne
xor
mov
aas
sub
adc
jnp
sbb
sbb
mov
jge
pusha
xchg
sti
fsubp
repz
in
jmp
stc
les
sti
popf
stos
mov
(bad)
jmp
push
daa
fidivr
mov
mov
bsr
push
je
mov
or
mov
stos
xor
sbb
dec
cs
jnp
adc
push
outs
ret
and
cmc
pushf
sub
fdiv
mov
(bad)
mov
dec
jbe
ficomp
test
ins
or
pop
jo
call
test
ins
into
pushf
arpl
imul
mov
sub
add
repz
adc
lock
lods
cmp
jbe
jmp
xor
push
inc
xchg
mov
hlt
push
fldcw
jbe
ds
aam
das
fidiv
outs
pop
addr16
add
ret
cmc
fwait
test
mov
jne
icebp
dec
fbstp
jae
stc
test
sub
data16
shl
or
idiv
xchg
mov
sar
pop
sub
dec
and
test
and
pusha
mov
popa
inc
inc
add
and
push
scas
jbe
mov
cmp
rol
cmps
fldcw
jl
int3
(bad)
out
push
mov
cdq
aaa
mov
test
fiadd
mov
leave
loopne
shl
cmp
leave
sbb
jbe
pop
jbe
vmovntps
xchg
ret
add
push
mov
fsubr
mov
mov
sub
and
pusha
push
mov
pop
jns
hlt
adc
jmp
out
dec
push
mov
out
neg
icebp
ins
sub
cmp
pop
call
mov
dec
jg
sub
ror
dec
jne
pusha
or
popf
inc
push
dec
sub
pop
rcr
adc
mov
fs
ja
mov
and
cmp
outs
xchg
loopne
jns
xor
jl
jp
push
daa
dec
push
dec
or
mov
bound
jne
push
or
pop
fisttp
pop
imul
inc
stc
mov
xor
cmc
std
inc
push
and
outs
stos
inc
jae
adc
adc
mov
lock
scas
inc
(bad)
and
mov
jno
mov
(bad)
in
stc
out
lds
and
(bad)
add
int
stc
aaa
and
mov
dec
xor
daa
mov
fcmovnu
sbb
int
fcom
fidivr
dec
dec
jle
call
sub
inc
jmp
push
sub
mov
imul
(bad)
lahf
fmul
das
xchg
icebp
and
in
jmp
ja
aas
xchg
add
add
ret
shl
sahf
mov
xchg
cmp
cs
add
sub
push
push
and
push
push
retf
or
mov
add
jl
icebp
fild
aam
jge
shr
pop
sbb
inc
cld
pop
lock
push
shr
push
push
jns
push
mov
fwait
cmps
mov
arpl
mul
rcl
sar
loope
add
test
cmc
shl
pop
div
mov
mov
xchg
and
adc
or
test
mov
out
jnp
xchg
test
out
xchg
or
cmc
sub
(bad)
cmp
scas
adc
pop
xor
popa
push
push
pop
rcl
add
sbb
cmp
and
nop
xor
or
imul
or
outs
(bad)
jae
sbb
out
add
aaa
mov
add
add
shl
pop
xor
std
adc
mov
cmc
jle
test
test
pop
jl
xchg
cmp
sbb
xor
adc
out
jl
adc
cmp
in
mov
pusha
jle
pop
neg
out
dec
inc
sub
or
call
inc
(bad)
xchg
mov
and
mov
pop
jae
mov
or
xchg
adc
mov
sbb
scas
pop
push
mov
jg
push
pusha
push
aas
ds
ret
shl
aaa
hlt
sub
repz
xchg
fucomp
fild
jne
pop
loop
mov
or
sti
jbe
pop
bswap
out
mov
adc
das
and
jo
imul
xor
or
aam
xchg
and
lahf
sub
xor
inc
sti
cmps
push
in
xor
enter
call
retf
xor
jne
mov
das
lock
push
xor
inc
enter
lahf
daa
fsubp
dec
cwde
xchg
rol
dec
into
mov
cmp
inc
pop
or
fisubr
ret
mov
dec
and
shl
popf
mov
xor
jge
or
aad
sub
aam
and
cmp
mov
(bad)
xchg
mov
int3
lock
mov
mov
push
lods
xorps
and
xor
pop
repnz
xchg
push
mov
or
in
sub
fsubr
push
or
into
mov
mov
sbb
push
out
test
xchg
jg
retf
icebp
ja
fwait
cmp
arpl
add
(bad)
push
aaa
shl
retf
and
(bad)
(bad)
jns
and
cmp
jg
pushf
adc
dec
ja
not
adc
ins
inc
das
sub
add
lock
add
xchg
sti
jge
xor
test
inc
mov
out
test
pop
push
jae
mov
adc
dec
push
mov
inc
cwde
mov
jbe
push
jae
test
cs
lods
outs
mov
dec
(bad)
xor
pop
jae
jmp
and
dec
sub
push
je
sbb
add
xor
jae
lods
rcl
sbb
das
fcmovne
push
fldlg2
dec
sahf
rcr
test
addr16
pop
movs
push
sar
inc
jae
adc
xchg
stos
push
push
outs
fadd
ror
mov
loope
jo
cmps
mov
sub
sbb
retf
aas
push
ss
xchg
cmp
pop
outs
mov
inc
clc
push
in
sahf
scas
lds
fcomp
repnz
sbb
xchg
and
les
mov
inc
movs
shl
std
xor
stos
pop
jg
adc
pushf
sub
mov
fs
jg
mov
cmp
pusha
jmp
mov
inc
fld
xlat
pop
jne
jbe
shr
addr16
rol
(bad)
dec
movs
sti
pop
aam
mov
add
dec
gs
lds
xor
addr16
push
outs
stc
dec
or
stos
lock
jnp
std
nop
sub
xchg
mov
mov
mov
mov
xchg
out
das
push
mov
mov
xlat
add
xchg
lahf
cmp
in
ret
es
xchg
pop
scas
push
cmc
push
sub
pop
cdq
movs
inc
inc
pop
mov
mov
hlt
out
push
popf
stos
jno
test
sbb
xor
adc
pushf
push
in
out
xchg
fisub
fimul
cmps
test
xchg
imul
push
inc
retf
repnz
add
fidivr
jo
mov
mov
fmul
retf
inc
pop
fnsave
fwait
sahf
sub
push
add
sub
pushf
in
inc
iret
lea
cmp
pop
and
lahf
inc
cmp
fs
push
(bad)
cwde
jno
dec
outs
cmp
mov
xor
push
loopne
pop
inc
stos
cld
loope
jno
pusha
pop
fwait
les
sub
or
cmp
in
imul
pop
dec
jecxz
test
xchg
lahf
pop
popf
jno
icebp
dec
pusha
cs
pop
mov
add
jmp
pop
xor
rcl
call
xchg
in
dec
in
mov
mov
xchg
push
sub
mov
out
or
sub
mov
imul
push
xchg
cmc
dec
or
hlt
xchg
mov
iret
sbb
leave
xchg
ficom
add
mov
pop
mov
call
sbb
push
inc
cli
mov
mov
ss
pop
xchg
mov
(bad)
inc
rcr
lea
test
mov
push
jmp
stc
sub
rcr
dec
dec
cmp
sub
sbb
lds
sbb
mov
in
or
xchg
push
lods
or
pop
int3
mov
inc
loopne
scas
in
out
mov
leave
test
sub
es
sbb
xlat
and
pop
mov
push
arpl
(bad)
popa
repnz
push
inc
jae
jp
movs
aad
lea
add
jnp
jns
and
sub
add
(bad)
xlat
inc
push
sar
push
cwde
pop
add
sbb
rol
mov
fistp
xchg
adc
pop
mov
adc
(bad)
iret
call
jae
xchg
icebp
sub
sbb
or
ins
xchg
push
loopne
loop
push
cmps
imul
adc
xor
xor
mov
xchg
leave
add
xor
sar
xor
out
cli
outs
(bad)
(bad)
in
pop
mov
push
pop
sbb
jmp
cmp
mov
sub
sub
xchg
jmp
mov
jmp
ins
rcr
(bad)
dec
push
jp
jae
sub
cmp
xchg
jb
mov
or
cmc
dec
rcl
xchg
inc
arpl
scas
mov
scas
mov
push
leave
dec
clc
cmp
lods
xchg
push
push
ret
arpl
pop
add
cwde
sbb
inc
inc
inc
imul
or
shl
or
mov
mov
das
xor
mov
mov
dec
sti
inc
xor
js
outs
out
(bad)
test
cld
ds
sbb
pop
out
mov
div
test
popf
pop
pop
call
mov
lock
and
out
or
shl
shl
fnsave
jecxz
ja
push
pop
or
push
mov
and
mov
or
not
cmp
pop
enter
cmp
inc
leave
dec
or
ret
lods
add
pop
xchg
add
inc
pop
rcr
dec
std
mov
fidiv
inc
dec
arpl
jns
outs
jp
push
and
aad
test
mov
movs
stos
cmps
push
pop
mov
ds
xchg
jns
js
adc
mov
outs
aaa
in
fcomp
xchg
mov
xchg
add
dec
xor
pop
arpl
xchg
push
outs
mov
lds
adc
repnz
stc
test
test
xlat
mov
or
pop
push
mov
push
mov
sti
out
nop
xlat
inc
fistp
sbb
sub
adc
jmp
dec
adc
out
push
out
mov
xchg
ret
(bad)
mov
sbb
imul
daa
cdq
mov
arpl
fsubr
int
sub
ins
dec
cmps
or
and
retf
test
fild
pop
mov
call
jg
mov
and
pop
mov
xor
out
mov
xchg
(bad)
push
pop
int
inc
in
push
xor
lahf
xchg
call
ror
inc
pop
xor
sbb
cli
cmc
shl
push
int3
bnd
in
cmp
add
push
dec
jle
xor
push
mov
jle
sub
dec
imul
fcmovnbe
inc
jmp
ins
gs
xor
xor
push
push
add
jle
mov
pop
scas
pop
(bad)
mov
xchg
in
inc
push
xor
pusha
outs
inc
mov
and
sar
test
mov
popa
aad
fistp
fstp
xchg
adc
int3
pop
xchg
data16
pusha
in
int3
sub
daa
(bad)
test
dec
les
(bad)
jmp
cmp
sub
loope
icebp
data16
adc
push
test
outs
mov
dec
jge
(bad)
xchg
lahf
dec
js
adc
sti
(bad)
aaa
imul
xor
jg
push
aas
adc
aam
retf
fdivr
pop
mov
pop
cld
scas
pop
out
or
mov
aad
xchg
push
or
mov
xor
pushw
inc
in
fcmovnbe
test
and
dec
repz
call
repnz
jle
cmp
ds
pop
inc
push
pop
jns
adc
push
pop
pushf
push
cdq
shl
mov
and
(bad)
fsubp
loop
jge
sub
jo
int3
imul
fnstsw
das
outs
pop
inc
mov
adc
aad
inc
mov
xor
ins
dec
out
and
or
aad
retf
out
test
xchg
dec
cmp
adc
jno
lods
dec
cmp
mov
(bad)
fsubr
int3
and
aas
inc
aaa
push
stos
out
fisub
mov
addr16
xor
dec
sbb
cmp
popf
xchg
loopne
cmp
shl
xchg
adc
mov
pop
sub
cmp
adc
sbb
enter
mov
call
ds
ins
sti
(bad)
stos
scas
and
sbb
push
xchg
push
fadd
bound
mov
dec
enter
pop
stos
(bad)
(bad)
jmp
jb
adc
(bad)
xor
in
dec
adc
jnp
int3
sub
lods
enter
aad
cmp
enter
mov
das
jg
jb
stos
aad
mov
jnp
add
pop
stos
push
sbb
pop
xchg
outs
pop
mov
mov
pop
mov
sbb
ror
pop
ret
sub
push
mov
ja
(bad)
push
jg
lods
in
sahf
movs
dec
call
leave
pusha
ds
(bad)
test
pop
aaa
retf
mov
inc
daa
frstor
pop
ss
les
out
mov
adc
test
jp
adc
xchg
inc
(bad)
retf
jl
add
loopne
cli
fst
cmp
add
not
and
jbe
jns
mov
loope
dec
xor
nop
mov
pop
mov
mov
(bad)
loopne
sub
mov
mov
mov
outs
xor
cmp
pusha
cmp
and
std
cmp
sbb
pop
fcmove
out
adc
jae
in
sbb
push
aas
xchg
inc
js
hlt
push
rcr
inc
add
jmp
mov
pop
push
mov
pop
popf
test
push
cmp
bound
shr
cmp
lock
arpl
and
or
push
out
sbb
sub
retf
leave
fisub
mov
mov
add
pop
mov
out
cwde
outs
and
out
push
pop
nop
jle
in
push
movs
sbb
inc
loopne
repnz
jp
cld
(bad)
not
mov
and
aam
pop
push
leave
jae
push
cdq
sahf
jle
jb
jmp
scas
js
outs
add
mov
pop
fwait
pop
repz
or
dec
xchg
out
mov
pop
adc
ret
sbb
mov
push
sbb
and
jecxz
jp
fdivrp
in
add
(bad)
shr
mov
mov
les
fs
pop
push
enter
pusha
les
push
in
or
mov
ret
pop
imul
xor
fwait
jmp
cmp
xor
pushf
xchg
add
push
dec
icebp
xchg
sbb
std
jnp
ins
jns
jecxz
lea
imul
fldenv
push
mov
(bad)
fistp
push
pop
xchg
jo
iret
sub
cmova
mov
aaa
int3
pop
cdq
mov
mov
rcr
nop
jg
mov
(bad)
jb
js
inc
jns
and
outs
adc
push
(bad)
pusha
jle
mov
ret
in
ror
sub
shl
les
repnz
jmp
adc
cs
retf
idiv
cmp
icebp
mov
ficomp
push
test
out
inc
jl
rol
test
les
out
xchg
loop
les
scas
out
aad
mov
pop
xor
xbegin
rcr
sub
push
call
stos
and
pop
mov
out
sub
into
ret
push
loopne
or
jbe
adc
mov
pop
(bad)
leave
repnz
jae
mov
jge
pop
inc
xchg
push
shl
jge
enter
std
popf
stos
pop
(bad)
ds
xlat
mov
push
inc
es
sbb
fwait
data16
sar
pop
(bad)
mov
aaa
dec
bound
jl
lahf
mov
and
aam
push
and
(bad)
mov
sub
jge
scas
lods
jae
push
aad
retf
mov
fldln2
dec
mov
and
dec
mov
mov
push
mov
mov
push
cdq
add
pop
xchg
mov
idiv
cwde
rol
js
loopne
movs
ret
ins
mov
es
mov
pop
push
pop
xlat
adc
dec
in
cmp
ja
dec
pushf
mov
cmovle
fnop
outs
das
cs
aaa
inc
stos
push
aad
lods
xor
imul
pop
jmp
in
fstp
dec
out
push
arpl
stos
mov
ins
dec
sub
aas
(bad)
sti
pop
or
hlt
data16
inc
(bad)
ins
test
in
cmp
jno
adc
xchg
mov
es
add
pop
dec
popf
pop
aad
test
lods
daa
test
adc
clc
addr16
mov
dec
jb
loop
mov
sbb
mov
jnp
mov
aad
cmp
dec
fwait
jae
pop
jne
jl
sub
mov
jbe
bound
fmul
shl
xor
neg
stc
pop
ins
xchg
mov
xor
aas
out
xchg
jl
movs
mov
add
mov
xchg
jge
xchg
adc
cmp
lods
mov
jge
push
cmp
xor
(bad)
idiv
and
imul
sahf
xchg
inc
sar
inc
test
pusha
test
push
adc
dec
mov
dec
xchg
cdq
push
shl
arpl
int3
adc
mov
lods
enter
adc
or
and
jle
gs
imul
call
jb
aas
cmp
popa
shr
(bad)
xchg
adc
enter
push
pop
(bad)
loopne
in
std
lods
mov
mov
pop
loope
fcomp
ja
adc
iret
inc
push
enter
and
sbb
movs
push
das
repnz
sbb
das
mov
out
and
pusha
mov
inc
shl
mov
popa
into
xor
cli
movs
ins
iret
inc
das
sub
and
sbb
dec
xor
je
popf
ret
shl
outs
in
add
push
(bad)
push
push
push
adc
jecxz
scas
ror
mov
xchg
arpl
push
xchg
sub
scas
(bad)
push
mov
push
popf
(bad)
outs
mov
addr16
test
dec
inc
lods
mov
mov
test
mov
pop
es
enter
push
sbb
push
mov
aaa
jle
outs
xchg
movs
aaa
movs
pop
es
mov
test
sbb
fs
xlat
fld
and
out
data16
inc
call
inc
mov
jb
dec
ins
or
dec
rol
(bad)
hlt
cmps
ror
inc
mov
mov
xchg
cmp
repz
add
out
xor
or
or
add
pop
ja
mov
inc
xor
cwde
bound
jmp
pop
jb
mov
jns
cmp
sbb
cmps
rcr
dec
sub
and
sbb
retf
out
mov
and
sub
and
(bad)
push
adc
jno
enter
call
fnstcw
retf
add
and
pop
jmp
(bad)
jle
cmp
sti
push
enter
xchg
cwde
pop
xchg
sbb
sub
jne
jecxz
fist
(bad)
scas
jmp
xchg
nop
inc
add
jecxz
imul
and
or
mov
jmp
test
adc
std
xchg
pop
aam
out
sbb
js
xchg
pop
in
cmp
or
inc
rol
pop
add
loop
not
lods
jge
(bad)
and
mov
popf
jge
sbb
(bad)
lds
in
pop
sub
add
movs
pop
call
dec
out
pop
adc
enter
dec
xchg
push
or
dec
icebp
std
sub
aas
mov
lods
mov
push
scas
adc
ss
rcr
loop
test
ret
add
cmpxchg
push
jb
cmps
test
repnz
and
pop
add
mov
ja
mov
pop
js
or
fdiv
pop
fmul
push
mov
inc
pop
push
mov
mov
sahf
(bad)
push
in
jbe
rcl
jl
cli
retf
test
aad
jle
jmp
mov
mov
mov
scas
(bad)
mov
push
das
jp
cmp
arpl
stc
jo
jge
sbb
mov
push
xor
or
push
or
je
(bad)
xor
pop
push
dec
es
retf
inc
add
pushf
neg
(bad)
mov
mov
pop
(bad)
jmp
jae
scas
mov
pop
mov
mov
or
pop
dec
mov
or
and
xchg
sub
dec
mov
cwde
jnp
dec
push
or
stc
arpl
xchg
inc
aam
or
jl
jmp
cmp
popa
fs
sub
mov
lahf
repz
push
stos
fwait
pop
sbb
sbb
adc
mov
add
test
imul
out
mov
mov
jle
sbb
leave
jno
ja
mov
shl
je
sub
mov
xor
in
pusha
xchg
cli
xchg
sti
lahf
aaa
cmp
mov
xchg
cs
fidivr
add
cld
out
imul
in
mov
pop
push
mov
lods
test
push
jge
push
icebp
loopne
xor
cmp
sbb
out
inc
ret
fdiv
setbe
dec
shr
jne
(bad)
sub
mov
or
cmp
ja
fild
sub
inc
jns
push
add
add
nop
xchg
adc
sbb
fisttp
mov
pushf
lock
jl
xchg
cmc
loop
cli
fist
sub
add
mov
retf
cli
xor
add
push
fnsave
outs
pop
xor
stos
pop
adc
jp
push
inc
cmps
add
xlat
jmp
outs
bound
xchg
xchg
into
test
pop
cmp
adc
shl
cwde
or
push
pop
sbb
out
sub
inc
jo
or
int
xchg
ins
mov
mov
sar
test
push
lds
pop
jmp
ins
ficom
xchg
jge
scas
pushf
push
loopne
int
scas
scas
dec
or
xchg
aas
push
sbb
mov
aam
jae
push
sahf
jmp
adc
cmp
iret
call
popf
js
test
mov
sbb
mov
mov
ror
push
jmp
xchg
and
and
mov
dec
mov
neg
push
xchg
mov
dec
pop
stos
cmp
and
xchg
xchg
lock
push
dec
lods
(bad)
inc
and
cli
xchg
aam
cmp
outs
int
xor
out
mov
stc
imul
(bad)
jo
xor
sub
dec
sub
test
mov
ds
jnp
cmp
mov
pushf
or
ins
xchg
inc
mov
aas
fbstp
mov
lock
pop
daa
rcl
jmp
dec
mov
dec
rcr
jl
movs
fstp
or
enter
adc
lds
push
or
add
mov
mov
lods
lods
cs
in
nop
dec
or
pop
fsub
enter
sub
xor
or
int
mov
sar
(bad)
lods
int3
or
mov
adc
mov
adc
sub
xchg
push
push
pop
xchg
test
mov
(bad)
repnz
je
fs
inc
add
cld
dec
mov
pop
inc
in
dec
outs
mov
dec
dec
mov
pusha
push
adc
xchg
fisubr
dec
jmp
clc
fst
mov
rcl
push
imul
adc
or
jae
ins
out
xor
jmp
jp
cmps
add
int3
xchg
nop
jb
ja
jae
mov
shl
xor
mov
shl
lods
xchg
into
sub
aas
jns
and
dec
inc
mov
add
sbb
fmul
adc
sbb
ret
pop
ss
jnp
xor
ds
(bad)
xchg
pop
mov
cdq
xor
adc
stc
mov
sub
leave
xchg
xchg
cmp
je
stos
jnp
cmp
cmp
dec
mov
jae
(bad)
je
hlt
mov
rcr
adc
sbb
jl
dec
push
ret
sub
fcomp
inc
jp
(bad)
clc
cmp
xor
(bad)
mov
dec
(bad)
jae
xchg
mov
scas
push
scas
cdq
or
sub
inc
mov
adc
in
or
sub
fistp
js
add
ins
sbb
push
imul
inc
fst
aam
stos
fiadd
and
cmp
(bad)
pop
dec
push
add
cmp
mov
out
dec
dec
or
or
xor
pusha
out
push
push
je
loopne
sbb
dec
jbe
add
dec
push
xor
and
sahf
js
mov
data16
xor
(bad)
scas
xor
int3
and
ret
js
js
pop
add
daa
cs
jl
aaa
pop
inc
arpl
aam
fucomp
pop
mov
push
and
js
mov
push
sub
or
jmp
in
stos
sub
xchg
das
sbb
stc
test
std
dec
or
test
mov
add
in
sub
xchg
xchg
ret
mov
xchg
aas
add
test
dec
jbe
add
jmp
(bad)
(bad)
jmp
leave
cmp
pop
sbb
in
mov
fcom
xchg
stos
fidiv
push
icebp
loope
add
sub
neg
leave
and
pop
push
adc
pop
test
je
stos
xor
add
loopne
jmp
arpl
sbb
mov
js
fdivr
loopne
sub
mov
cmp
add
fs
es
enter
pop
movs
add
mov
cmp
aam
(bad)
lods
mov
pusha
call
mov
ja
test
mov
or
sub
mov
shl
stos
addr16
retf
mov
das
xor
sbb
add
dec
popf
(bad)
mov
xchg
mov
sub
repz
leave
aad
ret
scas
add
in
test
enter
(bad)
call
jmp
repz
sub
enter
pop
xchg
aam
add
repnz
push
inc
mov
(bad)
and
int
js
loop
jne
mov
xchg
sar
pop
bound
adc
inc
outs
dec
test
push
jne
sub
inc
add
pop
jae
shl
push
or
dec
stos
jae
lods
jnp
or
xor
cmps
lods
add
pop
jbe
outs
test
push
sub
int3
xor
retf
jne
movs
mov
in
dec
jmp
push
inc
(bad)
pop
neg
test
inc
mov
sti
xchg
lahf
loopne
mov
icebp
add
mov
rol
or
xchg
sbb
dec
cmp
ret
fsubrp
(bad)
aad
or
mov
cmp
lea
or
fstp
les
enter
mov
stos
mov
cmp
gs
out
stos
je
(bad)
sti
js
rcl
push
out
mov
int3
fcomip
mov
out
dec
imul
jmp
xlat
clc
mov
mov
mov
inc
sbb
loope
adc
shl
mov
push
adc
nop
rol
ds
mov
or
mov
push
enter
pop
xor
into
lds
rol
inc
inc
push
jle
(bad)
neg
add
push
fwait
mov
cwde
pusha
pushf
bound
sub
fild
xor
dec
or
lods
loop
fst
mov
jl
push
cmp
cmps
or
pushf
jo
pop
retf
sbb
ins
icebp
xor
push
add
in
div
cmp
aaa
scas
lods
mov
stc
adc
pop
dec
mov
(bad)
and
call
adc
mov
jmp
cmp
mov
daa
mov
xor
scas
(bad)
jns
scas
sbb
jmp
jb
inc
cmp
mov
jo
(bad)
mul
xor
rcl
sar
cdq
jbe
sahf
sbb
xchg
ficomp
mov
mov
das
call
ja
mov
test
dec
sbb
sub
mov
mul
cmp
inc
push
js
push
push
adc
mov
push
and
xor
dec
ret
and
rcl
imul
sbb
jecxz
leave
fwait
add
enter
jge
adc
ss
push
mov
add
inc
xor
(bad)
cmp
xor
dec
movs
aam
mov
pop
jg
dec
xchg
mov
mov
push
neg
sub
lahf
ins
idiv
xor
push
adc
call
xor
jl
retf
fild
mov
push
xchg
out
add
cmp
and
pop
iret
adc
leave
inc
gs
(bad)
sbb
bound
dec
popa
fcmovu
jp
adc
mov
jo
int3
inc
mov
pop
ins
mov
inc
lods
scas
adc
das
cmps
xchg
push
lods
es
mov
pop
fistp
cmc
dec
push
xor
sbb
mov
cdq
outs
pop
daa
fstp
cmp
inc
jp
and
rol
pushf
stos
out
and
ds
xor
cs
stos
jge
clc
fdiv
or
add
add
or
jne
clc
xor
movs
sbb
out
ror
pop
mov
daa
popf
sbb
(bad)
mov
mov
xor
sub
(bad)
jns
cwde
movs
daa
call
adc
sti
push
jno
fcomp
jno
loopne
dec
retf
fbld
(bad)
mov
xor
sub
cs
mov
push
inc
sbb
les
cmp
lea
fcmovne
aam
enter
mov
mov
sbb
jl
push
add
sbb
adc
xor
cdq
inc
push
xor
cmp
xlat
inc
call
std
outs
(bad)
dec
int
mov
mov
retf
or
xor
jl
dec
outs
test
sub
mov
test
dec
add
push
sub
xor
aas
xchg
add
xchg
hlt
mov
jmp
and
mov
ret
int
and
shl
dec
fnsave
sar
test
inc
outs
inc
ja
cmp
sahf
aaa
shl
mov
test
fs
gs
xchg
ins
push
loop
loop
jg
inc
mov
jbe
xor
int
cs
sbb
out
mov
stos
loope
pop
daa
xor
dec
mov
int
ins
fidivr
xor
cli
pop
fwait
popf
sbb
jg
sbb
je
dec
mov
xchg
enter
leave
push
and
lock
push
(bad)
cdq
rol
jmp
mov
ror
ins
aas
outs
cmp
jmp
adc
hlt
popf
mov
push
retf
push
xor
sub
sbb
and
pop
pop
dec
cmp
cmp
dec
cmps
pop
jb
cli
(bad)
dec
dec
sub
call
aam
cmps
inc
test
mov
push
outs
pop
retf
dec
lds
adc
aad
scas
addr16
adc
adc
loope
fs
jmp
sub
ins
jmp
and
mov
jb
mov
adc
paddb
xor
sub
cdq
nop
sbb
(bad)
or
mov
test
pop
idiv
or
jb
and
dec
out
icebp
out
pop
fldcw
fstp
dec
add
rcl
test
add
jo
das
neg
mov
repnz
into
mov
push
xchg
ins
push
test
or
or
push
mov
loop
inc
inc
rcl
xor
les
mov
sbb
jne
pop
out
pop
jg
lds
inc
adc
imul
jae
cs
fiadd
imul
js
jecxz
rol
(bad)
std
(bad)
push
and
dec
popa
icebp
pop
jl
xor
lds
lahf
jle
sahf
ins
jb
adc
fistp
and
cmps
mov
popf
push
mov
cmp
lock
rcr
mov
sub
test
xor
or
jmp
div
lea
pop
(bad)
mov
inc
add
call
sar
cwde
lea
pop
jo
inc
cmp
adc
mov
mov
fs
(bad)
outs
sub
xchg
addr16
mov
push
mov
cs
ret
mov
push
xchg
mov
in
mov
(bad)
clc
add
bswap
cdq
dec
jb
clc
gs
xor
ret
cmp
(bad)
aaa
pop
xlat
jmp
outs
mov
add
repnz
inc
mov
pop
mul
mov
enter
test
mov
ja
mov
repz
and
lods
xchg
dec
xchg
out
fnsave
popf
in
imul
mov
(bad)
xor
push
pushf
jecxz
les
jbe
mov
mov
push
cs
mov
sub
ins
inc
adc
xor
adc
jle
fld
mov
jle
mov
xor
loopne
adc
jbe
mov
aad
fwait
ins
sahf
sbb
fist
and
push
push
jmp
ins
cmp
sub
mov
inc
and
and
xchg
mov
mov
cmps
adc
loope
lahf
(bad)
mov
loopne
ins
fistp
sub
adc
call
push
jl
push
fs
add
outs
cmp
push
mov
mov
fadd
stos
loop
adc
sahf
imul
icebp
(bad)
mov
cmc
bound
lock
mov
rcl
aas
fadd
test
and
xchg
xor
xor
push
pop
mov
ror
jmp
sub
imul
jae
mov
dec
mov
push
setae
add
jae
rol
cmp
cmp
arpl
push
jae
push
add
rcl
call
mov
rcr
mov
add
jnp
push
or
jnp
ror
push
imul
push
(bad)
sbb
loopne
ss
clc
loopne
loope
scas
mov
dec
xchg
sub
fld
shl
loop
xchg
or
or
fmul
jo
add
mov
jge
(bad)
dec
and
jmp
dec
pushf
sbb
xor
pop
or
addr16
js
fdivr
aad
jmp
jns
mov
in
xchg
fisub
in
push
add
test
sbb
cmp
dec
shl
out
loope
xchg
addr16
gs
addr16
je
ret
jecxz
mov
cmp
popf
(bad)
std
sub
dec
rcr
fwait
mov
lea
leave
out
pop
into
test
inc
shl
leave
mov
test
add
inc
pusha
sub
xchg
sbb
(bad)
jnp
dec
xor
data16
ins
sbb
sbb
adc
cmp
adc
cwde
fld
out
icebp
call
jge
dec
or
aam
inc
sbb
mov
add
sbb
enter
xor
sub
(bad)
aas
rcr
imul
push
xor
test
imul
cli
sub
imul
mov
jle
inc
adc
xchg
push
and
inc
push
dec
ds
mov
ins
jl
xor
inc
adc
cmp
xchg
popa
test
cli
movs
stc
in
in
lods
cs
sub
scas
xchg
sbb
mov
add
sbb
cli
int
cmps
je
sbb
mov
and
inc
in
arpl
mov
loopne
pop
or
and
jge
not
xchg
ror
pop
add
xchg
xor
mov
js
movs
mov
xchg
pop
sbb
fimul
test
shr
push
in
fcom
cli
mov
loopne
xlat
repz
jmp
mov
mov
imul
adc
imul
gs
lods
cmp
pusha
push
adc
aam
cmp
ja
fiadd
sbb
mov
sbb
mov
mov
jp
shl
dec
fwait
xchg
pop
adc
add
cwde
adc
shl
pop
push
loope
aaa
or
push
movs
ficom
mov
lods
popf
jbe
and
or
mov
dec
sahf
enter
mov
ss
mov
cld
pop
loop
mov
sar
mov
jno
ret
jl
ss
jmp
mov
and
shr
shl
ds
and
out
adc
scas
repz
sbb
or
jle
cld
frstor
inc
and
mov
test
jg
sbb
pop
sahf
sbb
shl
cmc
add
outs
test
fdivr
retf
sub
outs
test
jae
pop
int3
stc
sub
jb
stos
movs
cmp
(bad)
imul
jne
jg
or
xchg
mov
jp
sub
repz
mov
inc
jnp
or
adc
cdq
ins
mov
cmp
sahf
movs
dec
push
inc
jge
jecxz
repz
jg
lock
mov
outs
add
je
dec
inc
cli
pop
stc
adc
adc
xchg
mov
sub
imul
jl
mov
or
out
retf
out
leave
sub
fwait
scas
mov
jl
jbe
xor
dec
fisubr
test
add
pop
sbb
cmp
or
adc
inc
arpl
imul
outs
sub
adc
xchg
popa
sub
stc
inc
push
inc
lock
adc
jg
push
cmp
js
push
pop
mov
or
ss
lods
mov
loopne
xlat
xlat
std
or
push
mov
sbb
pop
push
xchg
fidivr
dec
iret
inc
repnz
adc
retf
test
ja
xor
in
in
repz
aaa
xor
les
cvtps2pi
stos
add
or
xchg
ins
nop
data16
outs
mov
outs
test
mov
cwde
mov
cwde
cwde
aam
mov
loopne
xor
sbb
pop
mov
fdivrp
shld
data16
test
test
mov
cli
add
xor
(bad)
pop
arpl
jnp
cmps
pop
nop
shl
mov
pop
adc
icebp
mov
mov
xchg
xchg
fisub
mov
xchg
stos
push
popa
movs
addr16
xor
out
repz
xor
jns
push
xor
add
jb
mov
mov
lock
repz
mov
adc
std
aam
push
xchg
stc
dec
jno
ret
adc
clc
mov
retf
cld
inc
jnp
xor
arpl
arpl
push
shr
or
call
pop
xor
arpl
(bad)
push
adc
mov
sbb
fstp
inc
test
dec
cld
bnd
cmp
sti
gs
not
adc
mov
inc
pop
dec
pop
push
push
lahf
add
icebp
jne
cmp
push
push
inc
pop
icebp
int3
and
xchg
fld
pop
dec
mov
call
push
jl
hlt
xchg
pop
or
icebp
data16
and
mov
xchg
push
pop
cmps
cmc
imul
in
ret
and
mov
dec
into
push
xlat
adc
jnp
fsubr
and
xchg
int3
xchg
fisubr
retf
sar
inc
or
pusha
mov
push
test
push
pop
mov
and
test
dec
rcr
jmp
inc
mov
cld
sub
mov
sbb
mov
(bad)
movs
enter
icebp
pop
push
mov
icebp
sub
aad
adc
je
xchg
mov
in
shl
cwde
in
movs
test
imul
fs
ret
add
jp
xchg
jecxz
jp
and
mov
adc
sbb
jne
or
(bad)
sahf
retf
dec
xor
hlt
inc
and
and
inc
fbld
test
or
add
jns
sbb
std
push
cmp
push
aaa
(bad)
not
mov
out
mov
mov
cmp
mov
mov
push
aas
jecxz
clc
sub
ret
mov
xor
push
loop
dec
out
xor
push
int
push
(bad)
and
mov
push
pop
mov
adc
dec
lahf
and
scas
in
int
dec
jne
iret
loope
lock
mov
pop
inc
sbb
enter
clc
xchg
out
jns
movs
outs
stos
cmc
mov
pop
repz
clc
adc
rcl
repz
in
(bad)
rcr
mov
imul
jnp
cs
mov
sbb
sub
(bad)
mov
jecxz
cli
mov
inc
xor
sbb
pop
xchg
sbb
xchg
mov
test
push
sub
add
fdivr
push
or
inc
rcr
pusha
lock
push
aad
inc
push
(bad)
xor
xchg
add
dec
mov
pusha
cdq
ins
retf
jecxz
push
sub
jl
(bad)
out
push
push
addr16
or
adc
out
and
cli
jge
cmovp
mov
ja
loop
cmp
adc
pop
mov
cs
dec
sub
lahf
push
cmp
mov
aad
mov
cli
cmp
add
stc
adc
pop
fild
sbb
adc
xchg
add
cmps
mov
or
dec
sub
retf
lods
fst
cmp
cmp
pop
inc
mov
into
ss
jbe
xor
sbb
or
dec
outs
popf
jge
inc
add
inc
jb
cmp
or
fmul
adc
lea
mov
ins
mov
dec
jg
mov
jno
or
jp
dec
aad
mov
nop
mov
xor
iret
inc
sbb
dec
mov
ja
jno
rcr
jp
daa
sub
imul
mov
pop
inc
sahf
mov
add
fsubr
cmp
mov
xchg
cmp
int
mov
test
in
dec
repz
inc
push
retf
rcl
jge
push
or
ficomp
mov
or
popa
sub
mov
(bad)
jnp
cmc
imul
shl
cmp
mov
into
test
idiv
push
mov
mov
sbb
xchg
mov
jo
retf
in
cmc
data16
test
hlt
dec
imul
mov
jecxz
int
cld
mov
push
mov
mov
jl
out
scas
jp
or
mov
or
stos
mov
mov
bound
(bad)
in
mov
sbb
cmps
cmc
or
pop
loop
mov
mov
push
sub
cmc
test
sub
add
jge
jae
mov
lds
(bad)
ja
pop
mov
dec
cs
pop
adc
out
pop
lods
pop
xchg
icebp
inc
gs
push
xchg
outs
jmp
nop
shl
loopne
ja
sbb
daa
fsubr
mov
dec
pop
ja
cmps
je
lods
enter
push
cmp
ss
xor
rol
jo
pop
jmp
sub
(bad)
or
pop
xor
or
cmp
repnz
push
lods
cmp
daa
mov
or
jo
shl
outs
mov
or
mov
cmps
cld
push
xor
fbld
loopne
sbb
(bad)
mov
(bad)
sbb
in
arpl
(bad)
xor
shl
add
cmp
sub
push
push
fdivr
push
mul
jns
loopne
fdivrp
movs
jb
scas
xchg
cs
sbb
mov
ret
test
mov
addr16
push
and
test
arpl
movs
fnstcw
xchg
outs
daa
xlat
add
lahf
pop
arpl
sub
mov
and
push
pcmpgtb
lods
aaa
push
loope
ja
jge
(bad)
stos
imul
sbb
pop
lods
xor
(bad)
sbb
or
into
in
xchg
je
aad
iret
add
les
mov
cmp
mov
jno
popa
fs
mov
sbb
push
nop
bound
sub
push
test
test
sub
jno
dec
or
cmps
scas
retf
aad
dec
and
and
stc
iret
jb
aad
push
retf
add
movs
jbe
aas
xchg
std
cdq
setae
call
stos
outs
ss
or
lock
in
mov
fcom
sbb
outs
xchg
ds
sbb
out
nop
pop
xchg
in
(bad)
mov
mov
adc
dec
pop
sub
jg
cli
ror
outs
sbb
mov
iret
add
add
out
ins
jecxz
(bad)
fstp
retf
mov
push
xchg
sti
cmp
hlt
idiv
jns
fimul
int3
adc
jne
cdq
xchg
bound
push
int
add
cmc
jb
in
fld
sbb
(bad)
jne
fxch
push
outs
xchg
pop
sti
cmps
dec
xchg
push
cld
jns
push
shr
in
pushf
mov
mov
mov
imul
dec
and
rcr
bound
fdiv
pushf
out
mov
outs
outs
test
in
mov
int
clc
xchg
cmp
in
add
mov
sbb
int3
mov
sub
dec
pop
aad
or
xor
add
xchg
and
aaa
inc
cmps
jl
add
popf
xor
int3
nop
out
test
iret
(bad)
js
cmp
inc
scas
pusha
pop
push
pop
jb
inc
stos
xchg
aas
mov
sbb
add
mov
dec
ja
and
dec
das
mov
icebp
aaa
inc
cs
jae
pop
lahf
xchg
invd
stc
xlat
leave
repnz
cli
cmps
sub
fcmovnb
fs
inc
retf
and
lods
inc
pop
stc
std
cli
fninit
pop
mov
call
jnp
dec
cdq
mov
ins
cwde
add
retf
(bad)
jecxz
sub
cmp
ret
mov
loope
xlat
rcl
inc
int
(bad)
jl
fsub
call
jae
xchg
lods
push
and
jno
cmp
es
mov
pop
ficomp
pop
inc
ins
arpl
jmp
jl
mov
mov
jb
shr
adc
mov
inc
jnp
cmp
jg
cmc
inc
sbb
nop
inc
clc
adc
sub
push
mov
popa
mov
xchg
clc
xchg
(bad)
stos
stos
and
jmp
(bad)
pop
out
into
in
adc
fs
mov
mov
jl
daa
aas
push
dec
sub
pop
cdq
mov
adc
lock
xor
call
aam
adc
inc
dec
iret
push
push
push
mov
aas
ror
sbb
jle
push
mov
add
dec
fistp
shl
hlt
(bad)
xlat
cli
lahf
test
pop
adc
mul
sti
dec
call
fidivr
xor
mov
icebp
loop
aas
add
lock
xchg
popf
std
add
(bad)
mov
xchg
bound
stos
xchg
push
mov
pop
mov
jb
outs
dec
pop
into
cmp
lods
mov
ins
fdivr
ins
loop
fwait
loopne
test
lods
add
addr16
setb
retf
sbb
fisubr
or
fwait
ja
mov
ret
ds
dec
aaa
sub
fsubp
pop
mov
js
rep
mov
jecxz
bound
xor
in
ret
sbb
pop
jl
cdq
jns
push
aaa
iret
scas
ds
cld
push
lea
sbb
out
jle
sbb
retf
jne
pop
arpl
pop
mov
mov
mov
pop
xchg
arpl
fwait
and
adc
clc
dec
push
pushf
pusha
cld
imul
imul
mov
push
dec
js
jp
sbb
jecxz
jns
stc
call
pop
je
push
add
jno
jns
pushf
and
imul
mov
sar
mov
sub
stc
push
cmp
add
mov
ds
mov
ins
cmp
xor
mov
popf
sbb
push
int3
cmp
inc
hlt
in
adc
mov
push
nop
pop
adc
mov
or
mov
sar
aas
mov
pop
fisub
daa
push
ret
sar
inc
mov
mov
lods
test
dec
dec
into
in
loope
ret
jle
jns
jmp
cmp
push
stos
(bad)
(bad)
jge
sub
(bad)
shl
repnz
adc
and
sub
into
out
sbb
adc
add
stos
pop
adc
dec
out
imul
lods
mov
cmps
lods
retf
sub
sbb
fs
pop
test
dec
adc
cmp
rol
aaa
mov
or
push
div
sub
inc
rcl
dec
xor
sub
push
inc
pushf
or
in
push
mov
jno
ins
mov
sar
clc
cs
nop
hlt
into
cmp
and
pop
xchg
push
jmp
mov
xlat
push
pop
add
pop
mov
pop
paddd
jnp
and
mov
push
mov
cwde
jl
xlat
xchg
and
mov
push
leave
and
clc
lahf
(bad)
es
fwait
ins
jmp
adc
pop
push
cmps
pop
adc
popf
daa
adc
je
scas
push
movs
repz
dec
aas
iret
mov
arpl
pop
xchg
jl
xchg
rcr
fnstsw
ds
cmc
out
mov
ins
jbe
add
rcr
int3
ds
add
push
and
jp
imul
cmp
or
cmps
dec
(bad)
into
sub
dec
and
sahf
and
nop
jl
repnz
jnp
or
or
push
loopne
push
dec
retf
call
ret
mov
call
push
icebp
add
mov
push
add
push
jge
and
pop
aas
add
and
cdq
sub
repz
leave
cmp
aas
adc
pop
jmp
jl
daa
pop
mov
pop
hlt
sbb
push
xchg
popf
mov
mov
xchg
jge
jecxz
(bad)
pcmpeqb
xor
je
dec
inc
push
into
retf
mov
xlat
sub
and
(bad)
mov
icebp
xchg
dec
fsub
pop
push
xchg
mov
rcr
adc
cmp
fadd
mov
and
nop
fcomip
or
popa
mov
adc
lahf
and
dec
or
sbb
jmp
mov
mov
pop
pop
lock
pop
rcl
stos
test
(bad)
mov
in
cmc
(bad)
popf
xchg
xchg
test
adc
mov
mov
and
ror
xor
mov
dec
push
test
push
xchg
dec
gs
add
jg
out
mov
sbb
or
sub
dec
shl
pop
cmc
movs
(bad)
mov
cmp
mul
xor
push
ins
jne
xchg
lea
pop
iret
xor
inc
pop
arpl
es
sub
jno
mov
lock
jl
shl
xchg
pop
push
addr16
(bad)
repz
imul
(bad)
mov
call
adc
imul
mov
iret
test
cmp
cli
pop
sti
jg
adc
clc
jmp
mov
movs
mov
mov
or
push
pop
xchg
stos
push
cmp
stos
test
add
push
shl
mov
ror
(bad)
adc
scas
in
sbb
jmp
adc
adc
outs
push
lds
mov
daa
sub
sbb
inc
adc
es
cmp
stc
std
cmp
mov
mov
xchg
out
test
or
xor
ins
(bad)
push
mov
adc
cwde
dec
push
retf
stos
fcmovu
push
push
retf
sub
sub
cmc
jns
xchg
fwait
jecxz
out
loop
(bad)
mov
mov
xchg
stc
adc
cmp
shl
and
stos
das
mov
xchg
ds
sbb
pop
mov
mov
xor
nop
pop
(bad)
jp
nop
call
xchg
(bad)
(bad)
aam
pop
leave
shl
sub
clc
bound
in
or
call
cmps
int3
mov
mov
push
retf
ret
fnstsw
mov
inc
adc
cmp
jmp
lods
xchg
ins
inc
jo
add
stc
push
mov
xchg
hlt
mov
in
inc
push
das
ficomp
repnz
adc
call
mov
xchg
(bad)
dec
lods
pop
mov
mov
retf
jbe
mov
out
jg
(bad)
push
and
xor
out
jae
arpl
mov
out
push
sbb
ret
pop
xchg
jle
cmps
xchg
and
cli
(bad)
test
pop
inc
xor
sbb
bnd
or
mov
ja
sub
popf
jno
fdiv
pop
add
stos
dec
outs
(bad)
fs
data16
pop
loop
push
(bad)
xchg
push
fild
test
xchg
adc
jnp
jge
gs
jecxz
clc
push
movs
fwait
xor
or
push
jmp
xrelease
push
sbb
scas
push
dec
and
bound
xchg
popf
push
out
pop
shl
mov
jno
je
mov
nop
mov
fbstp
mov
shl
aam
lods
out
and
(bad)
cmp
push
repnz
dec
mov
dec
fcmovne
sub
bnd
dec
push
mov
mov
jno
inc
stc
sub
xor
bound
dec
add
push
lods
je
sbb
xchg
mov
inc
xor
jmp
mov
ins
jae
jnp
(bad)
into
add
int3
shl
mov
sub
lock
shr
mov
(bad)
mov
(bad)
addr16
cmp
in
ins
jg
out
test
rcr
push
sbb
pop
retf
mov
xor
dec
jmp
or
mov
mov
add
in
cmp
pushf
aas
pop
not
and
es
aad
jmp
adc
mov
push
mov
idiv
fadd
dec
dec
ja
test
pop
add
mov
dec
push
std
inc
push
and
or
mov
xor
xor
neg
mov
inc
js
mov
jbe
sti
les
(bad)
pop
adc
(bad)
sub
jns
pop
add
in
mov
movs
mov
jmp
or
loope
inc
dec
xor
fs
or
les
test
push
mov
lods
sub
push
adc
mov
inc
ja
cmps
js
push
jmp
push
dec
pop
(bad)
stc
pop
fcomp
(bad)
push
adc
(bad)
dec
sub
test
ins
sub
imul
mov
cli
cdq
inc
sub
jno
out
inc
lods
retf
push
loopne
dec
jno
idiv
mov
sub
sub
cdq
(bad)
jb
sbb
cmp
scas
add
add
imul
cld
lods
leave
inc
dec
test
pop
je
out
arpl
mov
nop
jmp
mov
sub
dec
cmp
mov
inc
out
or
je
shl
fwait
(bad)
mov
loopne
mov
cwde
xchg
in
jecxz
pop
pop
int
in
(bad)
loope
dec
repnz
stos
sub
push
mov
sub
adc
sub
out
fidiv
jbe
aas
test
jne
mov
popf
retf
stos
(bad)
jl
les
ins
adc
sbb
repz
psrad
sbb
mov
mov
sub
stc
adc
fild
push
xor
clc
test
push
aad
mov
jmp
retf
out
retf
dec
and
push
xor
mov
add
mov
addr16
lock
fimul
dec
mov
adc
cmps
imul
leave
xchg
push
rcl
xor
fldcw
adc
jp
or
mul
ret
(bad)
clc
mov
add
xchg
pop
dec
inc
fst
adc
(bad)
pusha
add
sub
std
jmp
mov
shr
cmp
xchg
push
mov
aad
fld
mov
ret
mov
add
shl
dec
jnp
stos
in
xchg
push
xor
mov
mov
xor
add
shl
mov
daa
jecxz
jo
jmp
mov
aam
pop
mov
mov
addr16
(bad)
jmp
cli
jp
out
aaa
xchg
out
sub
mov
or
loop
mov
pop
aad
or
aad
dec
push
rol
jg
addr16
add
mov
repnz
push
repz
push
pusha
jecxz
ret
or
call
stos
xor
loop
inc
je
ret
add
pop
adc
xchg
inc
loop
push
pop
sbb
out
int
cwde
and
pop
dec
jg
mov
pop
jno
pop
xor
pop
add
fstp
out
add
imul
fnsave
xor
mov
dec
fcomp
inc
mov
int
jns
cmp
jbe
or
adc
lods
or
pop
cmp
dec
sub
pop
adc
jmp
cs
fiadd
or
cmp
call
(bad)
mov
mov
cvtps2pi
mov
push
mov
sbb
jmp
nop
lea
fld
arpl
push
mov
imul
or
pop
xchg
push
ins
dec
shl
fsubr
test
jno
scas
stc
fcomp
ds
int3
push
add
test
or
daa
in
mov
fdivr
xchg
retf
add
jns
mov
sub
mov
jbe
mov
and
popa
lock
push
adc
dec
mov
inc
sbb
scas
les
or
movs
jge
pop
clc
scas
shr
xor
repnz
hlt
adc
sub
sbb
out
xor
ins
mov
fidiv
lods
dec
in
dec
jp
(bad)
mov
xor
mov
mov
pushf
std
sub
mov
scas
loop
nop
cli
adc
movs
jo
mov
add
rol
jl
(bad)
inc
cmp
mov
mov
jle
aas
mov
sub
scas
jge
and
mov
and
push
pop
xor
xor
cmp
loopne
(bad)
out
add
cdq
inc
jecxz
nop
stos
(bad)
mov
shl
stos
inc
jo
add
dec
inc
shl
inc
add
(bad)
int
sahf
cmp
pop
pusha
stos
mov
mov
lahf
xadd
inc
cs
outs
push
adc
(bad)
retf
sub
jns
je
jns
mov
addr16
adc
stos
ret
(bad)
pop
sub
cwde
ror
mov
jmp
popf
inc
inc
add
xchg
and
xor
(bad)
sbb
xchg
(bad)
cmc
lods
mov
ror
repz
inc
xchg
xchg
out
xchg
aad
cmp
out
mov
popf
xchg
stos
ffreep
jbe
outs
inc
retf
xor
jp
sub
out
adc
lahf
stos
push
inc
cs
mov
sub
loopne
cmps
arpl
scas
sbb
fnstenv
or
(bad)
cli
into
jbe
cs
imul
sar
or
stos
cmp
adc
aad
clc
mov
sub
sbb
out
push
xor
es
mov
pop
test
xchg
(bad)
cld
lds
jb
push
jg
pop
and
cmps
cmc
in
push
mov
jmp
mov
mov
lock
pop
pop
test
lahf
push
mov
adc
or
dec
aam
ins
repnz
clc
inc
push
xchg
sub
sbb
cmp
mov
(bad)
cdq
inc
in
int3
sar
nop
adc
xor
loopne
dec
enter
inc
xor
leave
mov
outs
test
ret
(bad)
loope
aam
jns
cmp
int
dec
inc
out
rcl
div
scas
xor
ja
push
push
fcom
loop
ins
int
pop
movaps
and
xor
push
pop
xchg
push
div
sub
in
jae
mov
sahf
ss
outs
rcr
outs
dec
mov
int3
mov
retf
xchg
sub
popa
pop
mov
xor
jno
add
xchg
xchg
ret
test
push
pop
rol
jp
mov
cs
push
jnp
sub
js
push
(bad)
adc
dec
xchg
and
mov
dec
das
fcomip
retf
das
mov
out
adc
mov
clc
scas
dec
dec
cmc
loopne
call
xor
add
push
inc
xchg
mov
ret
test
cmps
push
xchg
sbb
push
or
inc
push
loop
add
mov
mov
pop
cmp
sar
inc
sbb
sub
xchg
dec
test
fld
dec
sub
sub
mov
push
inc
dec
cmp
stos
add
xor
jo
mov
jae
mov
and
fisttp
fisub
lds
push
outs
adc
pop
clc
pop
pop
jecxz
xchg
into
pop
add
inc
not
jp
mov
imul
inc
rol
dec
imul
push
outs
cmps
or
popf
push
and
mov
jle
adc
(bad)
sbb
add
jge
jg
cmp
stc
jle
jmp
dec
ins
mov
jge
rcl
and
mov
dec
inc
pushf
aaa
mov
sub
lahf
(bad)
popa
pop
and
int
pop
nop
rol
push
mov
mov
nop
xor
or
or
sbb
rcr
in
and
dec
and
outs
pop
inc
xor
pop
cmps
inc
iret
lea
mov
xchg
leave
push
sbb
xchg
mov
imul
or
mov
sti
leave
arpl
pop
mov
lods
sahf
jg
(bad)
pushf
cmp
je
cmp
ficomp
rcr
jbe
ins
sub
(bad)
cmp
xor
idiv
mov
ss
pop
pop
xchg
xor
push
nop
loopne
clc
jo
retf
dec
(bad)
mov
bound
enter
ss
lods
add
push
les
mov
inc
iret
aam
or
mov
fsub
mov
adc
push
mov
shl
pop
adc
dec
int3
out
stos
sbb
add
dec
dec
(bad)
mov
rcl
(bad)
xor
inc
push
jns
stos
gs
pop
adc
clc
or
outs
cmps
sub
jecxz
fsub
jl
sub
push
outs
inc
dec
pop
sub
jnp
enter
inc
and
fnstenv
xchg
test
pushf
repnz
(bad)
pop
pushfw
sbb
les
and
xor
mov
push
ins
cmc
lods
in
push
add
and
test
iret
aaa
movs
adc
loop
cmp
cmp
ret
ficomp
mov
add
test
ins
push
(bad)
xor
sbb
mov
push
dec
mov
(bad)
rcl
int3
call
scas
or
mov
mov
add
(bad)
jg
fs
cmp
retf
adc
sbb
sbb
cmps
push
stos
jl
bound
or
sbb
inc
adc
aaa
(bad)
bound
int3
test
(bad)
into
pop
dec
inc
add
jnp
push
bound
bound
imul
mov
and
scas
mov
fwait
xchg
inc
xchg
aad
fwait
loop
add
(bad)
xchg
sbb
push
inc
push
dec
push
mov
sar
pop
mov
and
pop
test
movs
mov
fidivr
jp
sbb
ds
(bad)
push
rol
mov
(bad)
jmp
cmp
mov
push
int
test
arpl
xlat
dec
call
push
(bad)
iret
loope
rcl
mov
xor
addr16
lahf
outs
ins
loop
or
outs
mov
cs
adc
outs
pop
sbb
add
sbb
inc
adc
mov
inc
(bad)
ret
mov
fldcw
stc
pushf
aam
mov
sub
xlat
pop
xor
dec
sub
mov
test
cmp
push
inc
sbb
rol
mov
pop
push
inc
mov
rcl
(bad)
mov
jne
stos
jl
ds
adc
imul
mov
addr16
xchg
test
push
sub
or
pushf
mov
test
add
add
mov
pop
push
and
xchg
mov
jp
xor
dec
dec
adc
mov
push
push
cs
adc
test
in
arpl
mov
cmp
jno
mov
scas
adc
or
xor
pop
sub
bnd
jne
mov
and
fs
pop
dec
mov
test
popf
push
inc
std
xchg
(bad)
outs
daa
mov
in
clc
sbb
in
test
adc
add
xlat
stos
dec
lock
jns
cmp
vmptrld
pop
mov
ss
gs
hlt
inc
mov
mov
jg
mov
dec
cmp
jle
js
mov
fs
or
fiadd
xchg
das
ja
push
cdq
daa
or
dec
(bad)
push
fisttp
mov
xchg
enter
jle
mov
clc
loopne
xchg
jne
xchg
cwde
arpl
mov
dec
test
mov
add
test
cwde
arpl
mov
bnd
clc
imul
push
xchg
xchg
hlt
mov
jl
call
fcomp
call
test
and
push
mov
outs
(bad)
dec
xlat
jns
retf
movs
and
mov
leave
push
xchg
jb
dec
(bad)
call
stos
retf
es
int3
cmp
jle
fs
sahf
std
and
imul
adc
or
jmp
sbb
cs
lods
jbe
add
int
or
xor
bound
lahf
test
push
cli
in
movs
in
mov
shr
shr
les
adc
rcr
retf
push
push
and
(bad)
ja
mov
shr
adc
push
cmp
out
xchg
es
inc
add
push
(bad)
and
xchg
xchg
xor
fs
movlps
shl
pop
dec
iret
daa
fcmovu
fwait
jle
(bad)
pusha
cmp
inc
movs
call
add
cmp
aam
je
lods
mov
stc
mov
adc
jae
sub
mov
and
outs
dec
stc
xchg
jmp
in
jns
adc
addr16
pop
inc
push
movs
movs
imul
jmp
mov
jnp
cmps
int
inc
mov
xor
mov
aam
mov
gs
lds
into
mov
scas
xchg
das
fs
fild
and
data16
cld
xchg
pop
outs
pop
stos
ss
js
fiadd
movs
leave
push
fwait
mov
and
xor
mov
arpl
stc
movs
and
xchg
test
adc
adc
add
out
ret
xor
cmp
jl
fmul
pop
push
pop
dec
push
pop
sub
mov
popaw
add
stos
inc
cmps
sti
shr
shl
adc
lea
push
dec
cmp
or
stos
adc
add
cld
imul
nop
sbb
gs
popf
call
pusha
das
and
je
pop
sar
push
jmp
push
add
mov
sbb
pop
mov
adc
and
sbb
leave
lods
arpl
fldcw
fwait
out
lea
pop
xchg
adc
xchg
(bad)
fsub
jns
ds
int3
xor
mov
in
movs
cmp
jmp
adc
mov
inc
lahf
mov
push
bound
cmp
adc
add
test
std
arpl
jmp
mov
es
or
mov
hlt
pusha
or
sbb
dec
pusha
imul
mov
test
dec
fldenv
fbstp
add
sbb
fldcw
jno
jno
mov
mov
pop
test
push
cmp
movs
and
inc
stos
sub
sahf
push
cs
les
pop
(bad)
and
push
and
and
cmp
stc
dec
leave
daa
mov
dec
inc
xchg
push
scas
adc
push
add
jae
ds
push
pusha
cmp
xchg
scas
mov
mov
retf
push
jge
add
dec
cmp
rcr
ret
xchg
scas
push
std
adc
ficom
and
or
and
inc
(bad)
ret
int3
sbb
in
inc
loope
clc
push
es
cmp
or
je
nop
ja
mov
retf
gs
mul
add
sbb
xchg
ror
daa
sahf
cmp
jbe
sbb
arpl
(bad)
mov
retf
sub
mov
idiv
dec
or
xor
and
clc
push
cmp
sbb
(bad)
aaa
ror
pop
cli
mov
jo
add
pop
sub
rcr
arpl
dec
push
inc
mov
aad
inc
push
mov
xor
in
xor
aad
aad
in
stos
xor
jns
gs
imul
clc
ficom
movups
dec
pusha
adc
aaa
pop
rcr
stos
shl
stc
mov
lea
leave
cmps
cli
add
es
arpl
xor
inc
sar
sub
push
or
mov
call
je
pop
sahf
ja
sub
and
dec
or
pushf
dec
inc
and
cmp
cwde
imul
xor
ins
into
mov
or
push
add
push
jb
sar
leave
sub
je
mov
stc
call
sbb
ja
xchg
xchg
(bad)
cmp
stc
dec
and
mov
and
dec
stos
mov
inc
jl
mul
int3
mov
cmp
nop
jbe
shl
cli
inc
xchg
xor
cmps
adc
fadd
mov
xlat
scas
jns
aaa
sbb
test
retf
mov
cmps
sar
fs
je
adc
mov
test
ins
push
jb
and
sub
(bad)
jle
jae
jg
dec
cmp
repz
out
popaw
jno
pop
adc
int3
int
dec
scas
jl
sbb
jne
sahf
(bad)
mov
dec
inc
xchg
xor
cmp
or
in
popf
cmp
push
sbb
xchg
add
jbe
jmp
mov
jb
in
imul
daa
inc
inc
jp
dec
add
hlt
jae
jg
xchg
in
addr16
(bad)
cdq
dec
in
das
or
ret
add
scas
ret
icebp
push
jnp
dec
aad
sti
retf
mov
cmp
cmp
adc
idiv
jmp
daa
pop
mov
cmp
cmp
sbb
cmp
push
mov
(bad)
xor
test
mov
dec
bound
or
sbb
scas
dec
push
into
repz
xor
in
mov
mov
jnp
sub
dec
inc
mov
pop
or
cmps
xor
or
inc
cwde
cld
mov
lods
add
in
xor
sub
push
arpl
xchg
cmp
push
mov
adc
jbe
popa
fisub
rcr
enter
test
push
or
or
adc
mov
pop
xchg
mov
mov
and
std
adc
inc
in
nop
xchg
jb
out
sbb
imul
adc
xchg
xor
push
cmp
shr
and
fcomp
add
mov
sbb
push
mov
adc
inc
dec
mov
dec
out
jmp
xchg
mov
or
cmp
or
mov
jbe
add
cdq
pusha
xchg
sbb
or
les
out
pushf
pop
mov
inc
mov
in
popf
push
out
xchg
test
sub
mov
xor
mov
adc
in
into
push
out
sub
xchg
mov
sar
push
nop
mov
fidivr
int
inc
pop
cmp
mov
and
or
and
push
sbb
imul
xchg
cmp
pop
pop
cld
(bad)
sub
mov
and
fstp
and
push
xor
shl
mov
(bad)
int3
xchg
lds
sbb
test
lds
mov
mov
fbstp
in
mov
or
add
adc
inc
fidivr
or
push
xchg
or
imul
mov
sub
jmp
adc
sub
movs
and
lock
inc
push
jnp
cmp
out
ror
cmc
jbe
mov
lods
sub
leave
test
pop
imul
shl
xor
lea
aam
js
loop
ja
sub
scas
mov
xor
cmp
sbb
mov
rcr
or
cmc
add
jae
mov
adc
call
inc
repnz
push
cmp
gs
mul
shr
test
fistp
mov
dec
fidiv
push
ins
mov
adc
mov
outs
pop
push
dec
push
int
in
mov
xor
(bad)
xor
(bad)
mov
jne
dec
out
sub
push
pusha
test
jg
fisttp
jmp
scas
mov
jge
mov
(bad)
xor
out
xor
mov
inc
pop
sub
mov
call
aas
jmp
ret
dec
add
in
and
(bad)
mov
call
push
sub
out
scas
cmp
mov
jecxz
les
bound
push
js
mul
fidivr
jl
test
das
outs
call
mov
cli
stos
add
fstp
xchg
mov
xchg
mov
fsubr
(bad)
push
call
int
inc
jl
adc
and
sahf
repz
and
cs
fxch
push
in
jp
push
shl
out
add
sbb
dec
pop
outs
fld
push
inc
jns
les
jbe
push
pop
imul
mov
pop
sbb
int3
jp
jg
out
ss
xchg
mov
xchg
in
icebp
lods
push
hlt
cld
or
or
or
push
ret
xor
aam
cmp
jbe
test
xchg
or
xchg
or
shr
aam
mov
bound
push
(bad)
sahf
loope
mov
test
mov
mov
xor
stc
lods
fidivr
icebp
jae
inc
and
(bad)
xchg
sub
fisubr
sbb
xchg
shl
ss
movs
add
xchg
es
les
dec
cmp
mov
cmp
aam
dec
test
mov
(bad)
hlt
cmp
je
int3
aas
adc
ins
icebp
pushf
xor
mov
sub
inc
xchg
sub
inc
adc
ins
mov
mov
xchg
(bad)
cdq
cli
mov
jl
pop
jecxz
sub
jo
faddp
fdiv
mov
(bad)
cmp
adc
dec
push
aaa
jp
mov
jno
and
aam
aad
lods
div
gs
retf
pop
shr
mov
jecxz
xchg
jmp
and
cld
sub
jle
sbb
stc
mov
in
pop
stos
cdq
dec
out
ja
push
(bad)
pop
mov
in
push
mov
nop
xabort
icebp
icebp
ins
mov
sub
adc
popa
movs
enter
adc
in
sub
popf
call
xor
stc
shl
jo
sbb
bound
addr16
jg
idiv
clc
pop
daa
rcl
push
mov
mov
cmp
inc
aas
cmp
inc
fcomi
lds
pop
adc
sbb
xor
jo
push
adc
fsin
xor
jae
sbb
fidivr
in
sub
jge
(bad)
pusha
pop
and
jle
push
cmp
sbb
cmp
ret
sub
add
enter
loope
out
sbb
out
mov
and
xchg
leave
fiadd
in
push
les
mov
dec
or
shr
iret
mov
retf
imul
sbb
pop
inc
xor
loope
and
jp
pusha
jnp
pop
cmp
lahf
ficom
sub
inc
pop
stc
fisttp
push
or
xor
in
push
xor
mov
mov
sbb
or
int3
in
bound
scas
add
imul
ror
mov
inc
fcom
(bad)
int3
add
cwde
lock
adc
test
push
add
pop
cmc
call
add
cmp
xlat
(bad)
in
ins
dec
adc
mov
in
fcomp
ret
mov
icebp
push
lods
inc
addr16
mov
mov
rcl
cmp
aam
mov
popa
jmp
out
and
outs
fcomp
cmp
(bad)
add
sub
daa
push
mov
mov
fwait
adc
inc
xor
pop
cmp
aam
daa
mov
add
pop
pusha
push
das
(bad)
adc
mov
neg
push
out
ss
cld
popa
jb
mov
fsub
mov
push
and
cmp
ror
(bad)
mov
inc
retf
jg
and
icebp
dec
iret
adc
dec
dec
pushf
push
leave
je
out
(bad)
sub
int
movs
out
stc
cmp
push
push
mov
jnp
fisubr
call
repnz
mov
or
push
(bad)
iret
leave
or
dec
mov
in
ret
into
mov
sbb
jmp
push
xor
xchg
and
and
loop
loop
jns
cs
push
dec
ins
jmp
inc
or
mov
loopne
inc
and
xor
call
(bad)
in
xor
xchg
in
out
sbb
inc
push
fld
sbb
cmp
dec
sti
inc
ds
bound
xchg
sub
push
add
loopne
dec
enter
test
pop
cmp
push
arpl
(bad)
mov
mov
movs
sub
sbb
push
inc
mov
inc
gs
dec
dec
loopne
ja
inc
ror
in
ins
into
mov
enter
mov
outs
ja
out
add
mov
mov
cmp
lds
mov
leave
mov
pop
sbb
hlt
jne
inc
jbe
jno
int3
inc
xchg
sbb
mov
xlat
adc
scas
adc
in
cmp
movs
jbe
fxtract
add
lods
or
cmps
sub
leave
sub
out
sbb
loopne
mov
sbb
mov
(bad)
cdq
jbe
fld
repz
aam
dec
loopne
ss
loop
fnsave
(bad)
xchg
adc
xlat
hlt
aas
inc
in
jnp
test
xor
inc
ror
inc
push
sub
imul
stc
aas
sbb
xor
scas
cwde
and
out
or
fwait
or
add
sub
xchg
inc
test
inc
xor
ins
in
push
pop
arpl
xchg
sub
jo
mov
pusha
jnp
adc
sbb
adc
scas
cdq
xor
jae
pop
leave
je
add
sbb
repnz
sub
mov
adc
cmovns
sbb
pop
sub
sar
cmp
fwait
sub
xchg
sub
popf
cmp
sub
imul
push
in
ja
loop
js
into
rcl
mov
(bad)
push
aam
cmp
mov
les
pop
adc
or
push
(bad)
dec
fs
gs
int
sahf
mov
sti
jbe
sub
xor
pop
xor
jmp
in
sbb
scas
sti
mov
js
jns
es
jbe
ss
enter
cmp
dec
and
(bad)
pop
and
push
jle
jae
bound
ds
(bad)
xchg
add
clc
(bad)
stos
pushf
sbb
(bad)
mov
inc
icebp
js
add
push
push
imul
fwait
rol
pop
jle
movs
jmp
jno
ret
ins
dec
test
and
dec
dec
sub
mov
call
jae
pop
mov
cmp
nop
push
mov
imul
push
mov
dec
dec
mov
addr16
mov
imul
and
ja
daa
cmp
push
pushf
sub
dec
test
cs
fcomp
je
pop
jmp
out
jge
out
adc
popa
fbstp
adc
add
not
not
mov
fldenv
add
sbb
jg
or
rol
aam
mov
aaa
test
cmp
cmps
cmp
mov
xor
nop
mov
shl
pop
inc
mov
xchg
and
in
mov
bound
xchg
inc
sub
outs
sub
neg
test
cmp
mov
lahf
cmc
icebp
cmps
xchg
mov
in
pop
out
add
cs
inc
or
cld
bound
outs
add
push
mov
and
cmps
enterw
jo
das
sahf
jb
fldz
dec
jb
sub
mov
sbb
call
or
bts
into
and
retf
add
jmp
test
cmp
fnstcw
xchg
stc
xchg
out
push
inc
lea
scas
(bad)
push
stos
fidiv
xchg
in
xchg
test
fnstcw
mov
adc
loop
shr
retf
mov
xchg
push
and
xchg
jle
cdq
xchg
ins
mov
push
mov
jl
adc
(bad)
dec
lahf
or
in
aaa
js
movs
outs
scas
adc
icebp
pop
add
jmp
dec
inc
daa
enter
loope
add
push
nop
mul
cld
or
cld
in
push
and
pop
jne
movs
mov
dec
cmc
das
ja
fwait
(bad)
and
hlt
pushf
adc
pop
pop
mov
out
jb
jmp
ds
or
jp
fisub
push
hlt
lock
xchg
or
cmp
mov
mov
clc
inc
push
mov
mov
ret
idiv
or
jo
add
mov
sar
push
jae
push
stos
adc
push
jne
jbe
test
sbb
mov
mov
cmps
daa
and
stos
mov
sti
inc
in
and
xor
data16
and
mov
xchg
pop
push
fidivr
fcomp
leave
enter
cld
adc
popf
mov
xor
daa
dec
adc
outs
outs
mov
leave
cmc
push
retf
arpl
shl
loope
mov
adc
(bad)
jo
sahf
retf
mov
std
fisttp
ja
xor
mov
outs
add
xchg
push
and
mov
stos
test
xor
mov
test
int
dec
scas
inc
cmp
push
sub
(bad)
jnp
mov
dec
rol
sti
enter
xchg
sti
ret
outs
fucom
dec
std
jmp
and
(bad)
xor
dec
mov
jge
inc
lahf
jbe
frstor
pop
jge
es
(bad)
shr
xor
das
pop
je
pop
in
pop
inc
loop
inc
shr
(bad)
mov
jp
inc
retf
and
mov
xor
pop
xchg
xchg
fidivr
sbb
mov
fwait
stos
cmp
xor
adc
mov
adc
stos
iret
inc
inc
pop
xor
test
loopne
xor
sbb
push
lock
add
add
mov
jle
adc
push
dec
lock
xchg
out
gs
dec
aam
add
mov
push
neg
push
push
inc
retf
in
in
push
sub
clc
not
xor
addr16
xchg
scas
mov
xor
in
retf
pop
jge
imul
out
scas
retf
pop
lahf
xlat
push
repnz
ja
adc
movs
inc
mov
ror
sti
jecxz
xchg
int3
in
ins
mov
push
jecxz
iret
pop
pop
pop
fsubr
loop
xor
cdq
mov
imul
repnz
shl
cmp
jmp
xchg
xor
or
shr
int
push
sub
and
xor
retf
inc
bound
(bad)
cmps
mov
cmps
clc
in
push
xor
inc
add
or
sti
sbb
es
call
pop
mov
ss
add
sbb
push
loopne
jae
pop
es
adc
cmp
(bad)
mov
pop
push
scas
mov
jp
fidiv
shl
rcl
rol
stos
add
ds
sbb
and
rcr
sub
cmp
mov
popf
or
mov
or
aaa
jno
mov
xchg
xchg
adc
xchg
repnz
push
data16
stos
pop
pusha
adc
push
mov
adc
adc
(bad)
je
or
cwde
jb
les
mov
lods
or
call
stc
cmp
jecxz
dec
aam
fsub
call
mov
xlat
mov
(bad)
cmp
int
clc
dec
pop
aad
mov
jo
outs
pop
in
ror
test
sub
hlt
cdq
xlat
jle
das
je
jle
jecxz
shr
loopne
mov
lock
pusha
mov
cmp
cmp
call
pop
mov
mov
loope
jp
(bad)
retf
mov
aad
mov
inc
mov
pop
xchg
xor
jb
pop
imul
scas
(bad)
jbe
popa
outs
jmp
fs
xchg
mov
push
xchg
jae
inc
jae
test
stos
jl
xchg
sub
shl
ror
nop
mov
push
retf
jl
mov
push
cmp
es
imul
mov
imul
pusha
lods
(bad)
arpl
repnz
dec
pop
vbroadcastf64x4
fwait
les
xor
test
push
ss
loope
(bad)
int3
push
div
pop
push
pop
and
data16
(bad)
push
jmp
out
out
sbb
push
push
test
shl
fsub
sbb
fimul
enter
jbe
fwait
mov
sub
fs
inc
xchg
sub
jp
sahf
push
pop
and
and
sti
(bad)
push
or
loop
ins
mov
ds
(bad)
out
adc
lods
sub
mov
popa
push
imul
sbb
add
lds
aaa
or
adc
jl
add
jbe
leave
add
rcr
shl
sahf
stos
cmps
ins
add
outs
push
in
dec
add
cmp
pop
jo
push
xchg
idiv
cmp
xor
pushf
dec
pop
retf
pop
jns
push
scas
sub
and
xchg
dec
mov
or
sub
inc
xor
mov
mov
sar
push
mov
shr
sbb
shl
inc
inc
leave
bound
test
fisub
adc
call
(bad)
(bad)
std
test
scas
push
cmp
mov
jne
mov
out
adc
xor
mov
and
dec
ins
loop
pushf
mov
sbb
jle
mov
xor
adc
inc
dec
test
jle
add
and
cmp
dec
lock
int3
mov
inc
test
inc
xor
mov
fwait
mov
icebp
aad
aad
aaa
mov
xchg
js
jbe
xor
nop
loope
retf
xchg
xchg
xchg
adc
fs
lds
jns
(bad)
ja
repnz
(bad)
repnz
xchg
dec
cmps
repnz
data16
add
push
or
mov
in
(bad)
cdq
scas
cmps
fst
inc
je
imul
cmp
in
enter
aam
rol
or
les
jnp
loope
in
loop
inc
mov
mov
iret
pop
push
inc
enter
pop
xchg
popw
sbb
jg
inc
inc
or
ffreep
dec
jecxz
imul
nop
mov
call
xor
push
dec
int
popf
jnp
addr16
and
add
cmps
jb
in
or
jmp
jge
push
dec
jl
push
mov
fisttp
push
jle
mov
mov
mov
jns
sbb
mov
cmp
jae
daa
push
dec
push
js
imul
jns
cmc
int3
push
xor
fld
sub
sbb
cmc
xchg
(bad)
mov
xchg
jl
ins
dec
dec
add
xchg
push
(bad)
lds
and
pmaxsw
ror
mov
js
jb
xchg
jae
mov
fstp
jae
add
popa
cmp
call
dec
lds
and
pusha
add
jbe
xor
inc
repnz
sub
xor
sbb
cs
or
int
cmc
fcom
jns
jmp
fstp
jae
xor
mov
(bad)
jmp
inc
cmps
add
or
mov
pop
jbe
dec
test
and
loopne
dec
cmp
adc
cwde
icebp
test
sub
xchg
pop
and
dec
add
loopne
(bad)
dec
aas
int
xchg
pop
arpl
rol
mov
or
pop
cmp
in
and
test
(bad)
or
push
sbb
fisttp
fxsave
dec
adc
loop
loopne
push
mov
jecxz
cmp
mov
dec
cmp
sahf
add
movs
sbb
leave
std
popf
pop
add
cmc
scas
aas
movs
(bad)
fdivr
xchg
js
stos
hlt
pop
mov
and
(bad)
pop
(bad)
pminub
stc
iret
inc
call
cmp
pop
lahf
jmp
and
sub
add
jmp
xor
mov
shl
mov
inc
pop
shl
ds
out
ins
dec
push
(bad)
jg
inc
mov
inc
cld
cmp
xchg
cld
or
mov
popf
mov
mov
add
mov
pusha
inc
pop
or
xchg
xor
mov
out
mov
sbb
retf
jmp
push
add
out
aaa
inc
inc
xchg
out
pushf
aaa
push
dec
push
mov
dec
push
pop
stos
std
inc
mov
or
or
xor
dec
shr
shl
mov
or
movs
shr
clc
push
push
or
retf
dec
repz
push
shl
retf
repnz
fist
call
push
pusha
adc
inc
sbb
clc
sub
in
dec
test
jne
pop
imul
(bad)
pop
or
jge
rol
pinsrw
mov
jp
pop
shr
cli
(bad)
mov
jmp
dec
pop
scas
shr
jne
sub
and
mov
out
sub
aad
psubusw
sbb
fsubr
(bad)
stc
jge
sbb
stos
dec
mov
sub
push
cmc
mov
aad
out
test
stc
jle
mov
dec
cmp
jecxz
push
ret
or
push
cld
ja
out
out
push
outs
sbb
add
out
xchg
lahf
jns
pop
fwait
xor
daa
out
fbld
in
xor
add
jns
xchg
fstp
mov
cmp
retf
jmp
movs
mov
xor
pushf
xor
rdpmc
push
add
mov
adc
xor
ficom
je
cmps
xchg
mov
adc
in
mov
jne
cmps
jb
cdq
push
sbb
jmp
sbb
add
ret
inc
xchg
adc
in
jle
data16
das
jno
inc
out
out
xchg
xchg
adc
mov
inc
pop
fdivp
xchg
jne
add
cmp
outs
popf
(bad)
xor
xchg
jnp
mov
add
xor
cmp
jg
inc
repnz
jmp
jle
ins
push
arpl
mov
sub
inc
clc
inc
pop
xchg
mov
or
daa
jo
jne
stc
add
push
mov
or
movs
sub
xor
cmps
sub
mov
loope
ret
xor
sar
mov
fadd
push
jl
add
sti
scas
int3
mov
neg
push
fsub
adc
cld
pop
ins
ret
cs
cs
leave
lea
xchg
push
dec
adc
inc
das
scas
xor
xor
add
cli
mov
nop
and
jnp
or
pusha
mov
repnz
dec
imul
mov
out
mov
js
mov
inc
outs
mov
xor
cld
jge
pop
and
mov
ror
cmps
xchg
cmp
data16
push
xor
jno
aam
pusha
push
inc
and
push
mov
inc
adc
cmp
fsubr
mov
jnp
xchg
push
cmp
iret
lea
das
sar
cmps
loop
cmp
iret
outs
ja
imul
int3
dec
aam
jo
adc
push
mov
add
mov
adc
jmp
aas
cmp
or
fcom
fs
(bad)
div
cdq
mov
paddsb
push
ret
fistp
dec
stos
mov
into
int
sbb
int3
add
stos
pop
rcr
outs
int3
inc
xchg
jecxz
pop
shr
xor
shl
(bad)
into
pop
mov
leave
loop
icebp
inc
sahf
add
push
add
sbb
fistp
jg
jge
fist
fild
jle
jb
or
call
sub
or
adc
cmp
jne
out
shr
push
cmp
imul
dec
jmp
dec
jmp
icebp
pop
bound
scas
xchg
aaa
xor
icebp
cld
jl
push
stc
xchg
mov
cmp
jne
fmulp
imul
movs
int3
mov
xchg
mov
retf
nop
retf
sbb
xchg
pop
sbb
adc
dec
sub
xor
push
mov
mov
(bad)
js
xchg
push
mov
and
mov
push
into
and
inc
mov
fsub
hlt
vandps
retf
sbb
dec
in
dec
sub
dec
out
loop
mov
stos
or
out
sbb
imul
stos
add
add
cmps
adc
adc
shl
and
xchg
imul
jb
pop
and
cmp
and
mov
dec
retf
mov
popf
jge
push
dec
mov
data16
sbb
mov
fsubr
or
je
aam
lods
mov
in
jnp
adc
movs
int
adc
or
cmp
cwde
push
push
push
jae
xor
and
iret
cs
mov
pop
mov
sbb
mov
movs
mov
adc
test
test
bound
and
data16
sub
stc
inc
add
imul
cli
outs
out
sub
cmp
xor
pop
jecxz
inc
sub
add
jg
pop
(bad)
xor
mov
pop
inc
sub
sub
shr
popf
or
mov
adc
ins
mul
and
push
je
bswap
sub
jp
xor
xchg
call
int
stos
push
jl
call
mov
fmul
sbb
pop
retf
loopne
xor
mov
repz
sub
fisttp
int
jnp
outs
and
aad
push
cmp
fst
loop
(bad)
dec
repnz
sbb
mov
mov
jae
lahf
push
or
mov
cdq
retf
fcomp
mov
jnp
cmp
cmc
cdq
mov
sahf
mov
outs
push
mov
outs
fcomip
mov
lods
sub
mov
(bad)
outs
daa
sbb
sar
mov
xchg
loop
(bad)
daa
(bad)
add
jno
push
xchg
mov
clc
enter
xchg
or
imul
nop
daa
sti
xor
mov
adc
mov
mov
daa
fmul
scas
push
adc
push
cmovle
rol
sti
mov
mov
imul
mov
jns
and
call
rcl
mov
fxch
mov
cdq
mov
imul
inc
in
and
push
ret
xor
adc
and
cld
sar
imul
pop
loop
jne
popa
ror
xchg
test
(bad)
imul
jge
(bad)
shl
xor
xchg
and
fisttp
popf
repnz
neg
dec
repnz
push
pop
and
sub
mov
push
xor
xchg
mov
mov
and
mov
adc
adc
fxch
test
sub
xlat
jne
fnsave
push
ins
int
ds
and
shl
das
cmps
jnp
xchg
push
sub
adc
inc
aaa
pop
or
in
and
imul
sub
pop
int3
inc
fisub
aad
scas
gs
dec
jp
add
movs
jecxz
jo
cmp
push
aam
push
bound
imul
ror
loope
and
adc
pusha
arpl
clc
sbb
xor
retf
push
mov
sbb
scas
pop
cwde
xchg
pop
mov
mov
push
mov
jnp
xchg
mov
pop
gs
int3
adc
ror
pmulhw
dec
sub
cmp
adc
clc
inc
test
pop
mov
pushf
mov
(bad)
cdq
imul
jge
scas
pusha
bound
cmps
adc
sti
mov
adc
mov
js
sub
push
pop
and
mov
repnz
lock
arpl
sbb
dec
fs
mov
not
mov
push
imul
in
fbstp
xchg
add
mov
enter
aas
cdq
jl
fmul
pop
ret
inc
das
push
inc
fidiv
daa
popa
adc
jb
imul
mov
sbb
stos
fwait
scas
clc
movs
or
jns
and
dec
or
ror
cmp
mov
(bad)
and
push
xchg
mov
push
pusha
dec
inc
ret
inc
cmp
pop
jecxz
xor
ror
ss
test
mov
outs
cmp
mov
lgs
adc
icebp
xchg
std
in
int
idiv
jnp
pop
pop
(bad)
dec
sbb
fiadd
jg
push
pop
xor
cmps
aam
mov
retf
jmp
out
leave
ss
or
in
mov
sar
cmp
or
loope
add
mov
cmp
test
cdq
sbb
jne
mov
pusha
dec
jmp
xlat
mov
nop
test
sub
out
cmp
ins
and
pop
int
iret
pop
pushf
sbb
cmp
icebp
mov
imul
pop
fdivr
inc
outs
inc
mov
add
leave
iret
add
jmp
in
cwde
cli
retf
stos
xor
movs
mov
ret
lock
inc
sbb
call
test
mov
xchg
mov
lods
and
scas
arpl
arpl
mov
xchg
adc
call
sahf
int
adc
icebp
in
push
adc
icebp
push
pop
mov
mov
sbb
mov
ins
jecxz
xor
jo
loopne
add
std
mov
pop
inc
das
pop
pop
repz
inc
(bad)
cdq
pop
jns
mov
out
mov
jne
lods
sahf
arpl
dec
shr
adc
icebp
movs
scas
sahf
push
mov
sbb
dec
pop
loope
or
int3
repz
push
ror
jnp
mov
pop
xor
add
icebp
or
dec
cmp
ds
stos
xchg
push
mov
shr
ret
inc
(bad)
mov
cs
cmp
push
sub
add
jl
fnstcw
or
dec
cmp
cmps
pop
add
repz
rcl
hlt
ror
ins
das
popf
and
iret
push
add
into
mov
ficomp
dec
sbb
pusha
jo
xchg
mov
mov
rcr
rcl
pop
add
mov
setnp
push
das
cli
dec
push
push
iret
lahf
pop
mov
cmp
jp
fisttp
pop
add
pop
xor
cmp
mov
jmp
inc
fdivr
jecxz
outs
call
pop
sub
ins
inc
shl
fmul
ret
or
cld
fiadd
mov
mov
push
mov
loopne
jns
xor
jae
add
mov
fist
pop
pop
pop
cmps
mov
mov
mov
push
fbld
inc
jl
popa
ror
add
pop
dec
or
scas
sar
jnp
inc
(bad)
popf
gs
inc
mov
push
cmp
outs
leave
pop
lods
ret
jp
call
test
jg
xchg
cmp
pop
scas
dec
xchg
xchg
dec
push
and
daa
loope
push
and
push
rcl
xor
shr
stos
add
loop
or
push
not
push
mov
xor
push
push
mov
adc
arpl
in
call
add
sub
jecxz
daa
scas
cmp
fs
cmp
stos
jno
jp
mov
add
(bad)
stos
scas
iret
pop
lea
and
es
call
add
lock
out
sbb
std
push
fsub
inc
jae
cdq
sub
in
aas
add
push
stos
ss
push
scas
(bad)
or
das
setno
push
lods
cld
enter
mov
add
ss
mov
sbb
(bad)
sub
or
mov
xchg
cmps
loopne
ins
jmp
outs
pop
daa
xchg
adc
int3
inc
adc
cmc
adc
or
(bad)
xlat
xchg
dec
cli
fnsave
cmp
cmps
in
imul
std
jnp
add
push
inc
(bad)
test
or
call
or
mov
call
sub
add
popa
and
fbstp
(bad)
push
in
cmp
push
xchg
ss
and
cmp
ret
retf
fistp
and
mov
cwde
ret
in
xor
enter
mov
cmps
call
scas
ret
cmc
or
lods
and
dec
inc
inc
xchg
out
outs
mov
mov
push
jbe
xchg
xchg
sub
add
rol
clc
jg
mov
cld
fst
mov
(bad)
out
xchg
in
pop
adc
jmp
cmp
pop
pop
sbb
sub
inc
pop
and
add
loop
mov
mov
es
and
sbb
jb
sar
in
dec
fidivr
aad
push
mov
mov
pop
das
ror
cmc
popf
test
mov
out
mov
or
sar
and
pop
je
sti
mov
hlt
in
loope
call
and
ins
fs
and
sbb
test
outs
push
daa
leave
addr16
xor
cs
mov
fidiv
xor
xchg
fidivr
call
mov
repz
add
stc
sbb
mov
adc
pop
jecxz
test
or
or
and
jl
loopne
bound
mov
pop
pop
popf
adc
cmp
pop
pop
retf
pop
out
sbb
out
jmp
sar
je
icebp
add
cmp
mov
pop
mov
inc
adc
push
popf
(bad)
jge
xchg
rcr
lea
mov
or
ins
enter
cwde
jl
imul
mov
push
mov
bound
hlt
mov
bound
xlat
xchg
pop
div
push
push
xchg
xchg
sbb
(bad)
xchg
or
stos
xchg
mov
fld
or
and
inc
inc
mov
mov
pushf
mov
into
repnz
inc
push
mov
repnz
std
jo
icebp
and
cmp
mov
mov
fwait
inc
jmp
jns
ins
popa
mov
mov
mov
push
push
and
cli
cli
mov
push
and
fs
sbb
pushw
jno
or
aaa
sahf
jns
stc
xor
fs
push
inc
in
repz
sub
shl
fidivr
shl
ficomp
je
loop
clc
cmp
pop
fs
or
xor
loopne
push
outs
mov
ret
loopne
cmp
outs
pushf
aad
xchg
fmul
pop
pop
push
ins
test
(bad)
cmp
scas
lsl
imul
sar
hlt
fisubr
push
(bad)
mov
xor
sbb
inc
mul
sub
xor
sbb
sbb
(bad)
ror
nop
fnstsw
fneni(8087
inc
dec
outs
pop
adc
addr16
arpl
dec
cmc
mov
jecxz
pop
outs
add
cwde
mov
jnp
mov
aaa
in
ds
shl
cld
and
jle
inc
fisub
rol
test
fsubp
clc
add
pop
and
jl
into
outs
cld
sbb
mov
fwait
inc
aas
pop
ret
cmp
lea
mov
mov
stos
adc
stc
fistp
pushf
(bad)
enter
sbb
cmps
mov
sub
nop
xchg
mov
jp
jmp
out
cmc
dec
repz
xchg
inc
and
das
leave
mov
out
adc
lock
inc
out
add
adc
iret
leave
push
gs
rol
mov
jle
push
sbb
out
and
(bad)
push
mov
test
and
mov
cmp
push
jmp
cld
mov
mov
sub
dec
pop
pop
test
and
dec
aam
(bad)
sti
or
test
out
scas
mov
test
or
cpuid
or
and
aaa
dec
sub
daa
pop
ret
push
shl
cmp
cmp
and
xchg
ins
cmps
nop
push
push
lds
es
idiv
(bad)
sbb
fs
fs
jns
pop
dec
sub
in
pop
scas
mov
test
adc
mov
cdq
mov
fld
pop
js
stos
outs
movs
scas
xchg
pop
jno
mov
add
(bad)
je
push
(bad)
mov
imul
jae
dec
into
mov
lahf
in
ret
inc
aad
and
xchg
fisubr
mov
mov
les
dec
fs
xor
stc
iret
aas
adc
push
pop
imul
and
aam
push
fwait
xchg
xor
push
sub
retf
xchg
jns
xlat
pusha
inc
in
enter
mov
xchg
int
movs
test
ds
inc
outs
loope
je
and
icebp
arpl
outs
pusha
mov
shl
and
aas
pop
push
jbe
clc
mov
lods
outs
dec
lahf
fsub
je
imul
add
ins
mov
call
xchg
ins
sub
dec
call
sbb
out
cmp
jne
cld
out
jecxz
sub
inc
pop
adc
pop
pop
pop
leave
or
mov
mov
int3
pushf
in
xor
std
jnp
enter
stos
aam
nop
cmc
(bad)
cli
stc
xor
sub
stc
imul
stc
or
int
push
(bad)
fisttp
je
sahf
std
jnp
and
add
fist
sub
mov
popa
mov
popf
and
inc
dec
or
test
or
push
mov
mov
les
sbb
mov
cmp
xchg
mov
mov
sub
mov
pop
mov
xchg
pop
inc
mov
fnsave
sbb
mov
fs
nop
pop
jo
jmp
(bad)
push
xchg
sub
std
gs
push
mov
hlt
out
sub
add
in
jo
fcomp
or
aaa
adc
mov
or
cld
lods
ins
loop
fld
in
(bad)
sbb
mov
enter
(bad)
lods
fld
repz
mov
mov
cmp
cmp
push
(bad)
jo
cs
inc
mov
mov
xchg
or
aad
aad
mov
and
jmp
cmps
inc
popa
(bad)
iret
iret
jb
pop
scas
lea
je
rcr
pop
push
dec
mov
mov
jmp
sti
int
inc
sub
xor
data16
xchg
ja
cmp
sti
out
cmp
xor
daa
mov
and
jle
es
xchg
aam
mov
stc
call
adc
(bad)
(bad)
jl
dec
ret
push
adc
(bad)
aaa
addr16
sub
test
loop
enter
in
aaa
add
retf
jo
mov
mov
(bad)
jg
xchg
ss
or
std
outs
fsubp
jne
pop
shl
cmp
xor
fs
push
push
mov
lea
mov
loopne
ds
lods
(bad)
fistp
(bad)
xor
cmp
int3
add
cmp
(bad)
enter
mov
sbb
adc
push
aas
xchg
or
das
and
jle
loope
fisub
fild
inc
add
xchg
daa
cmc
inc
push
add
loop
push
jmp
xchg
(bad)
lods
adc
stc
mov
mov
mov
(bad)
add
cmp
add
icebp
mul
inc
mov
popf
cs
pop
fs
retf
xchg
scas
push
rcl
xchg
(bad)
jmp
adc
adc
push
cmc
xchg
fisttp
js
aaa
push
gs
push
lods
shl
mov
or
mov
sub
iret
inc
jns
sub
push
xchg
and
addr16
rcr
rcl
mov
lods
call
out
add
loope
xor
jp
dec
retf
ret
jne
loop
xchg
mov
mov
mov
int
jnp
dec
or
sub
mov
jecxz
add
in
arpl
loop
pop
dec
repz
jnp
mov
ss
inc
xchg
fmul
mov
add
aad
sub
scas
jmp
xor
rcl
mov
push
test
ja
xor
int
dec
sub
sub
mov
cmp
aam
jp
sub
pop
(bad)
and
fiadd
jp
and
setb
fdiv
fimul
or
cwde
dec
mov
out
sub
pop
pop
xor
push
or
mov
popa
inc
fcomp
scas
scas
xchg
or
add
xchg
mov
push
dec
pop
push
add
arpl
icebp
jne
mov
push
cwde
pop
ss
xor
mov
mov
mov
inc
dec
adc
lea
adc
arpl
rcl
mov
lods
sbb
cmps
arpl
jmp
inc
(bad)
dec
jp
retf
daa
pop
out
retf
cmp
int
stos
ins
fsub
mov
xchg
sar
ret
pop
popa
(bad)
(bad)
push
leave
dec
push
daa
idiv
setle
inc
and
test
mov
sbb
out
push
jno
mov
into
inc
mov
add
retf
mov
test
jge
fcom
cmp
add
test
push
ins
je
rcl
inc
xor
pop
sub
jecxz
xchg
add
rol
jg
mov
mov
fnsave
(bad)
xchg
dec
cmc
addr16
ret
dec
add
sub
jp
js
jg
pushf
adc
pop
sti
sbb
push
adc
pop
adc
bound
lahf
sti
pop
push
nop
out
jmp
dec
push
xchg
jne
rcl
sub
and
call
jno
xchg
scas
xchg
gs
test
add
rcr
mov
jmp
retf
fistp
mov
cmp
int3
pop
xchg
cli
pop
inc
push
mov
xchg
pop
pop
or
stos
push
repz
adc
cmp
and
ss
sub
(bad)
ret
xchg
mov
dec
call
push
outs
mov
ss
push
xchg
retf
cmp
fld
es
mov
xchg
das
mov
push
mov
cmps
xchg
aas
iret
mov
push
(bad)
xchg
test
adc
ficom
add
push
test
push
push
fs
jg
add
pop
or
ds
or
lock
cmp
int
jp
adc
test
ds
sbb
int
and
scas
dec
leave
aas
js
pop
gs
outs
fucom
fistp
mov
pushf
pop
test
mov
inc
ret
sbb
popf
mov
gs
add
mov
push
dec
adc
push
pushf
aad
add
cmp
push
pop
loopne
cwde
out
out
xchg
into
sbb
jo
ins
mov
push
xchg
scas
pusha
enter
xor
sbb
push
ret
cmp
push
pop
fs
daa
cmp
push
jmp
inc
adc
dec
in
inc
sbb
pusha
scas
rcr
mov
push
mov
shl
int
sub
push
pop
inc
pop
fs
adc
dec
dec
xchg
mov
xor
push
lods
hlt
jle
mov
sahf
add
and
fmul
test
mov
and
sub
and
sub
jmp
jg
out
inc
adc
ficomp
jo
inc
inc
and
in
std
aas
and
push
push
inc
jl
or
(bad)
cmps
and
(bad)
popf
pop
mov
cwde
sbb
push
in
inc
cmp
jae
inc
inc
sbb
cmp
ret
leave
es
pop
test
push
daa
mov
mov
jmp
add
pushf
adc
aas
call
movs
and
pushf
jmp
mov
dec
(bad)
rol
sub
sub
fwait
stc
loopne
pop
sar
bound
sar
or
xor
cmp
xchg
stos
push
outs
jl
in
cld
retf
add
fldenv
adc
ins
je
fld
pop
out
push
sub
stc
cmp
fs
mov
push
mov
jle
adc
popf
pop
sbb
add
sub
dec
mov
jg
cmp
or
fimul
jno
dec
mov
test
add
dec
loopne
shl
xchg
call
push
jg
into
pop
mov
lahf
adc
enter
xor
sub
mov
mov
ret
div
fisttp
data16
das
repz
(bad)
addr16
aad
or
sar
shl
cli
out
dec
and
fcomp
bound
xor
sahf
stos
sahf
stc
jecxz
test
mov
cmps
mov
fdivr
out
mov
push
ja
xor
stos
push
in
or
push
cmps
mov
dec
enter
adc
xchg
xchg
xchg
dec
xchg
neg
(bad)
mov
outs
ds
inc
pop
and
pop
push
cdq
jmp
adc
xor
daa
div
scas
sbb
nop
hlt
dec
xchg
jb
adc
out
pop
sbb
repz
not
push
gs
enter
ins
loopne
loope
jg
nop
lock
shl
not
std
fs
pop
sub
hlt
jbe
(bad)
sar
push
aas
std
pop
adc
daa
(bad)
(bad)
push
adc
arpl
shl
cli
hlt
lods
(bad)
ror
fs
sahf
stc
jb
pop
xlat
addr16
pop
xlat
aas
cmp
std
and
iret
push
test
sub
sub
inc
jmp
scas
inc
mov
hlt
(bad)
std
cmp
sub
mov
jle
leave
push
add
mov
shr
gs
add
in
clc
call
adc
push
or
add
sbb
pop
sub
int3
mov
hlt
ss
and
xchg
pop
mov
inc
sub
rol
sbb
sub
out
aaa
sbb
or
pop
fld
lds
out
mov
mov
mov
enter
mov
dec
dec
movs
ins
inc
cmc
adc
pusha
xchg
or
pop
ret
jmp
cmp
pop
lds
mov
test
(bad)
test
sub
sahf
popa
xor
in
stos
fld
pop
sbb
stc
mov
inc
stc
jg
sbb
(bad)
iret
fmul
inc
add
lods
bound
jb
push
mov
mov
bound
sub
icebp
not
repz
(bad)
idiv
xor
(bad)
stos
pusha
pop
pop
popf
dec
cld
popa
mov
aas
push
sahf
add
inc
test
jnp
(bad)
mov
test
(bad)
hlt
sahf
pop
add
dec
adc
ror
lds
adc
mov
cs
jne
cmc
dec
cdq
ds
pop
rol
adc
push
inc
push
add
dec
pop
fdivr
imul
daa
or
std
and
repnz
jge
xor
sub
push
add
pop
ss
jns
loopne
jno
xchg
(bad)
sbb
adc
xchg
fwait
mov
mov
mov
stc
outs
add
dec
mov
out
dec
mov
sti
sub
push
add
movs
arpl
jle
lahf
adc
stc
inc
stos
push
dec
dec
mov
and
fmul
std
popf
lods
pop
ss
inc
dec
cld
mov
inc
push
call
ret
sti
sbb
fisubr
lods
retf
(bad)
sti
xchg
mov
mov
mov
mov
jnp
inc
add
and
add
shl
test
sbb
push
dec
cmp
pop
push
mov
cmps
sub
shl
aad
sub
(bad)
sbb
mov
loop
lods
adc
cli
push
pop
stos
aaa
push
sbb
popf
(bad)
cmps
adc
das
ins
rcl
inc
hlt
mov
mov
cwde
lock
std
das
fcomp
inc
pop
xor
add
xor
fwait
inc
mov
lahf
add
test
xor
push
and
adc
adc
and
mov
jmp
jae
and
push
or
mov
xchg
xor
dec
mov
popf
cdq
js
inc
push
push
neg
ins
push
inc
adc
aas
mov
sbb
push
dec
(bad)
mov
push
cmp
mov
movs
cmps
mov
sub
pop
push
mov
sbb
inc
sub
sahf
xlat
ins
mov
mov
jbe
enter
(bad)
repz
jl
adc
in
push
mov
cmp
iret
push
les
js
out
add
cmp
mov
ret
daa
test
jne
mov
mov
shl
inc
xor
aas
lea
sbb
aaa
jae
dec
retf
jae
push
and
xor
lds
or
xchg
bnd
cli
lods
adc
adc
jle
test
push
mov
or
movs
mov
jmp
pop
(bad)
(bad)
mov
cmp
ret
mov
push
push
dec
pop
pop
cdq
fcom
or
stos
jp
push
lods
adc
mov
inc
rol
mov
stos
retf
and
aam
xchg
or
pop
in
or
fucomp
mov
inc
xchg
sbb
loope
sbb
push
pop
lock
popa
dec
fnstenv
and
jg
aaa
adc
dec
stos
cdq
xor
mov
jmp
ficomp
pop
inc
imul
mov
xchg
ret
mov
shl
pop
adc
or
ins
sbb
push
jae
in
fisub
cmps
repz
fcmovnu
fs
ja
or
fidivr
lea
ror
sbb
mov
sbb
fcom
sub
lahf
movs
cdq
in
js
xor
arpl
movs
dec
daa
xchg
repnz
mov
enter
mov
xor
pop
xor
or
or
xor
mov
inc
cmc
sub
shr
clc
xchg
pushf
in
or
jg
fsubr
adc
rol
sbb
inc
popf
or
inc
adc
call
ins
into
repz
or
popf
mov
mov
push
jbe
inc
mov
mov
dec
jp
outs
stos
fwait
ror
cli
js
stos
fnsave
jp
or
sub
adc
imul
and
push
lahf
sub
retf
and
mov
call
mov
popf
ins
mov
nop
loope
mov
and
adc
aas
pop
push
lods
hlt
mov
add
add
retf
adc
mov
shr
call
xor
leave
push
bound
fmulp
je
mov
das
call
inc
imul
fidivr
and
stos
mov
mov
in
dec
in
add
mov
dec
inc
mov
idiv
cmp
popf
add
movs
push
inc
xor
sbb
mov
jge
xchg
inc
mov
add
call
xchg
xor
fwait
or
jl
mov
mov
xchg
fistp
or
stos
cmc
or
(bad)
jecxz
pop
fdivr
mov
jns
in
xchg
mov
daa
xor
enter
and
jp
out
and
mov
sbb
cwde
call
shr
inc
fwait
or
movs
inc
ret
mov
inc
out
mov
lea
or
call
mov
sub
sub
add
and
sub
mov
pop
mov
in
movs
add
dec
sub
out
popf
loope
fidivr
cmc
sahf
cmp
sub
cdq
adc
dec
fnsave
idiv
add
push
or
shl
cmp
add
sbb
xchg
test
jne
sub
(bad)
fistp
leave
leave
imul
call
sbb
outs
and
inc
sub
aas
in
adc
sar
inc
xchg
jbe
jecxz
cmp
dec
cmp
sar
mov
mov
sub
int
cmp
jnp
jmp
cwde
adc
test
addr16
xor
mov
test
in
pop
add
sti
dec
imul
int
test
fadd
cmp
out
sbb
test
jnp
repnz
out
hlt
adc
mov
mov
inc
cli
and
add
data16
repz
and
aad
leave
xor
je
(bad)
xchg
stc
cmp
pop
call
adc
fs
fild
dec
inc
dec
add
cwde
test
mov
xchg
call
gs
inc
and
push
test
das
jle
jno
push
pop
or
dec
push
lods
mov
daa
push
fcmovu
mov
shl
xchg
mov
inc
jge
or
cmps
sub
shr
jo
cld
pop
(bad)
sar
push
jle
pop
cmc
daa
nop
xchg
sbb
adc
and
xchg
push
call
mov
mov
pop
test
sub
aam
jbe
jmp
dec
sbb
xor
movs
sbb
mov
scas
ret
xchg
sub
and
out
push
add
in
enter
jg
in
xchg
and
not
pop
inc
lahf
push
test
(bad)
ins
pop
add
icebp
pusha
div
mov
jne
adc
lods
and
or
sbb
lods
gs
sbb
xchg
jl
jl
mov
sub
les
or
sub
push
adc
dec
dec
fwait
test
adc
jge
dec
xchg
cmps
add
shr
or
out
inc
(bad)
ret
mov
sbb
sub
push
jg
pop
pushf
int3
mov
jg
cmps
mov
adc
push
or
push
sahf
and
mov
mov
test
lahf
sub
jle
cs
xchg
mov
bound
and
xchg
popf
cmps
xchg
sar
int3
call
stos
dec
les
dec
mov
mov
and
aaa
das
ror
int
mov
mov
xor
lahf
cmp
or
mov
rcl
jl
bound
call
inc
leave
ror
adc
inc
add
push
and
icebp
xor
(bad)
dec
retf
add
push
popf
(bad)
(bad)
sti
rcl
ret
fnstenv
mov
jle
jg
cdq
daa
mov
lahf
retf
dec
cmp
and
outs
mov
xchg
je
loopne
aaa
rcr
add
int
dec
and
fisttp
xor
pop
xchg
sti
push
fidivr
cld
mov
jmp
lock
imul
pop
not
dec
pop
jmp
mov
movs
fmul
push
outs
sbb
cmps
inc
outs
mov
mov
aam
(bad)
add
sbb
fwait
enter
pop
cli
mov
push
xchg
push
(bad)
ja
into
in
retf
(bad)
or
and
arpl
in
addr16
pop
push
(bad)
jecxz
pushf
and
pop
scas
leave
xchg
xchg
or
adc
scas
shl
fisttp
mov
shr
adc
shl
pop
and
jnp
xchg
jns
pop
(bad)
lea
jo
mov
cwde
push
xchg
jo
mov
xchg
rcr
sub
mov
cmp
rcl
dec
in
add
inc
cmp
(bad)
dec
aaa
xor
lods
ret
mov
and
sub
inc
mov
mov
mov
and
fwait
mov
mov
(bad)
pop
dec
sar
jnp
jno
mov
or
mov
out
scas
inc
or
push
sbb
dec
adc
fwait
and
cmc
or
(bad)
sbb
in
xor
lods
popa
mov
call
cmp
xchg
lahf
mov
push
shl
fisub
das
arpl
and
adc
or
inc
mov
addr16
stos
sub
xor
neg
xchg
mov
jb
imul
jp
sub
pop
aad
popf
leave
sub
ins
adc
pop
sbb
cmp
xchg
pop
pop
mov
add
fwait
cs
jmp
sub
arpl
jl
inc
push
cmp
outs
adc
mov
fmul
(bad)
xlat
dec
dec
sub
arpl
arpl
into
jns
jl
mov
push
aas
mov
cmps
inc
and
pop
sbb
xchg
enter
add
arpl
fdivp
and
div
xchg
push
loope
pop
es
arpl
aad
pavgb
les
vcvtss2si
call
inc
repnz
mov
mov
in
dec
add
xor
inc
push
or
xchg
sub
gs
rcl
push
push
test
clc
rol
pop
(bad)
je
xchg
fdivr
xchg
jb
scas
mov
mov
xchg
sar
xchg
daa
outs
jno
push
mov
sti
es
loope
jnp
nop
fstp
xor
sub
xchg
scas
inc
data16
jno
scas
ffree
jae
stos
pop
lds
mov
xlat
stc
xor
lock
cmc
aaa
loope
cmp
inc
push
lock
retf
cwde
jmp
call
ins
jl
push
cmp
stc
push
aaa
inc
pop
lea
mov
in
add
loope
sbb
bound
stc
leave
in
push
push
xor
popa
adc
lock
sub
rol
or
mov
aad
loope
adc
and
xor
mov
ficomp
sahf
push
sub
(bad)
fstp
and
jle
fistp
gs
sbb
jge
loop
cmc
outs
xchg
push
scas
inc
dec
jle
mov
mov
mov
les
fs
lods
xor
pop
out
mov
dec
jbe
cmps
(bad)
call
sub
in
or
out
dec
daa
pop
pop
stos
sub
mov
cs
jge
icebp
lods
inc
rcr
pop
jne
jae
bound
cmp
nop
or
lahf
clc
stos
call
lea
sbb
xchg
cmp
dec
fdivr
xchg
shl
jmp
es
mov
pop
and
daa
sbb
int
test
sub
dec
inc
adc
mov
arpl
inc
das
cmp
and
test
push
je
ds
jno
sub
std
mov
mov
popf
mov
mov
cmp
mov
xchg
mov
xchg
push
push
gs
or
cmc
mov
das
mov
ret
adc
sbb
pop
aad
dec
iret
pop
movs
sub
iret
push
add
lahf
outs
mov
inc
adc
pop
iret
xchg
icebp
test
xor
data16
dec
iret
mov
(bad)
sbb
cmp
ins
add
xchg
dec
or
adc
push
lahf
mov
and
shl
sub
sti
mov
add
mov
sbb
fdiv
and
inc
dec
jmp
(bad)
test
jg
stc
mov
inc
ficomp
adc
les
cwde
out
retf
aad
int3
jmp
ja
js
jmp
pop
loop
inc
mov
dec
in
add
jb
inc
push
data16
cmp
iret
das
lock
test
mov
mov
cmp
out
out
(bad)
jmp
mov
and
inc
js
cmp
aad
cmp
adc
je
xchg
iret
and
mov
adc
push
js
repz
stc
and
sbb
lock
in
or
push
fld
out
mov
mov
adc
jmp
xchg
mov
adc
sar
mov
adc
add
cmp
aam
rcl
ss
test
stos
sbb
jge
and
rol
push
mov
mov
hlt
sub
or
stos
cmp
sub
pop
scas
or
cld
out
movs
les
push
cwde
pushf
push
aam
ds
gs
enter
je
or
push
or
or
jl
in
gs
pop
dec
call
push
stc
(bad)
(bad)
scas
sub
daa
inc
call
mov
int
xor
stos
dec
cmp
jmp
lahf
das
sbb
push
sub
jnp
ja
outs
jmp
dec
cs
outs
pop
pop
fcomp
sar
test
or
jmp
retf
stos
imul
sub
cmp
retf
in
data16
out
sub
mov
and
push
xchg
ret
int
mov
lds
aaa
rcl
xor
sbb
pmulhw
pusha
or
repnz
std
(bad)
push
add
into
pop
retf
sbb
xor
icebp
jmp
push
push
xchg
call
std
das
inc
rcr
jp
add
xor
(bad)
pop
iret
cld
pop
pop
pop
cmps
arpl
jo
movs
and
jmp
shl
cmp
out
loop
ins
retf
ret
es
dec
xor
pop
xchg
sub
push
cmp
pop
xor
push
sahf
idiv
jne
adc
pop
gs
std
fwait
jne
and
lahf
sti
stos
fisub
xchg
jmp
or
sub
inc
xor
fisubr
push
div
pop
mov
(bad)
out
fnstenv
ja
mov
adc
xchg
test
mov
bound
add
xchg
xor
and
sub
ins
or
leave
xchg
xchg
xor
stc
dec
jae
jg
in
test
adc
add
ja
icebp
inc
loop
sub
jmp
mov
in
cmp
lds
ficom
sti
lea
cmp
leave
push
jl
sub
fwait
add
mov
aas
jo
sub
sbb
ja
cli
push
push
push
push
es
mov
dec
dec
inc
push
adc
js
scas
fisub
int3
push
dec
xchg
add
ja
pushf
fisub
(bad)
mov
pop
neg
pushw
scas
sahf
fcomp
fdiv
in
int3
int
lahf
clc
pushf
push
sub
fisub
jmp
inc
jmp
clc
pop
mov
(bad)
fistp
dec
movs
xor
push
add
js
sbb
stos
in
jb
fstp
into
jne
gs
pusha
mov
retf
jb
lods
mov
push
sub
fbld
daa
push
repnz
push
fisttp
adc
mov
xor
pop
lahf
data16
mov
in
mov
outs
cmps
pop
mov
enter
sub
sti
mov
inc
cwde
ins
icebp
or
dec
cmc
jb
xchg
out
jmp
imul
das
sbb
and
and
jbe
fstp
or
mov
sbb
mov
(bad)
pop
sub
adc
(bad)
sub
and
popf
or
inc
xlat
sbb
jmp
hlt
inc
call
(bad)
push
push
sbb
push
nop
dec
retf
aaa
aad
cs
pop
into
fcom
out
push
outs
and
cdq
mov
clc
shl
imul
cmp
push
rcl
pop
xor
and
xchg
mov
pop
shl
(bad)
in
lea
fdiv
jb
outs
or
push
add
inc
add
adc
into
pop
mov
int3
ins
cmp
add
pusha
cmp
push
ins
push
clc
and
or
dec
repnz
xchg
test
das
mov
jle
push
lea
push
movs
add
setae
popa
lahf
sbb
ins
cmp
sbb
mov
jno
fldenv
pop
pop
out
jle
cmp
dec
adc
ja
jmp
out
ins
fidiv
repnz
xchg
mov
sbb
adc
xor
mov
cmc
or
mov
sbb
cmp
or
add
pushf
mov
lods
js
out
sub
xor
ss
std
sub
stos
push
ret
mov
lods
and
pop
popf
mov
in
mov
ret
dec
add
jo
jg
ss
xchg
adc
cmps
daa
fstp
(bad)
test
mov
pop
inc
inc
cmp
pop
add
nop
cwde
push
pop
iret
cwde
fimul
mov
and
xor
cdq
cmps
or
and
jns
sbb
(bad)
stc
test
mov
cmp
push
sub
adc
test
push
arpl
xor
jmp
enter
adc
inc
(bad)
mov
cld
test
and
cwde
jg
int
mov
inc
popf
iret
pusha
mov
xor
mov
into
icebp
sbb
mov
je
xchg
push
int3
mov
pop
leave
add
add
jmp
aas
push
inc
shr
out
cmp
or
mov
nop
mov
jae
xor
or
pop
es
leave
and
dec
repnz
in
mov
pop
fnstsw
sbb
fs
xchg
gs
lods
jne
retf
test
es
inc
mov
scas
mov
sub
outs
outs
adc
add
push
out
fdivr
push
ins
aad
mov
mov
in
mov
dec
out
outs
in
mov
sbb
cmp
clc
xchg
xchg
jge
dec
jbe
repz
and
out
xchg
pusha
clc
movs
sbb
sub
in
push
adc
(bad)
add
imul
loop
jns
fwait
imul
cmp
adc
sub
ret
push
retf
mov
fnstcw
ins
mov
das
or
ins
sub
imul
jmp
mov
sbb
jmp
sbb
mov
(bad)
cmp
(bad)
mov
xchg
adc
cmp
add
scas
jmp
rol
into
cld
inc
dec
test
jnp
and
and
loope
clc
dec
in
add
mov
push
retf
mov
jmp
xor
and
not
jae
sub
lahf
cld
xor
mov
cwde
pop
aad
cld
cli
jne
add
jb
mov
mov
lea
daa
scas
pop
in
loopne
data16
mov
stos
pop
mov
movs
jle
test
adc
adc
xchg
dec
or
je
and
dec
out
pop
sub
hlt
or
jnp
outs
xor
sar
inc
imul
addr16
add
mov
or
pop
push
mov
xchg
ret
and
xor
jge
dec
dec
push
jb
push
loop
mov
(bad)
out
das
mov
test
add
loope
mov
push
xchg
ins
ds
adc
cli
setge
test
mov
cmp
js
dec
jle
xor
and
test
cmps
call
bound
test
into
and
in
xor
scas
jge
mov
mov
or
xor
addr16
adc
adc
call
jns
sar
jae
(bad)
out
clc
loop
cld
bound
mov
inc
xchg
(bad)
xlat
mov
lods
push
outs
sahf
sti
jmp
neg
test
sub
mov
scas
sub
in
jae
lock
dec
out
sahf
dec
cmp
mov
mov
fistp
dec
xchg
cmps
(bad)
loope
pushf
mov
les
stc
and
pusha
mov
pop
inc
pop
jb
mov
mov
sbb
into
dec
in
sub
dec
xchg
mov
or
sbb
push
cmp
jmp
and
and
pop
cdq
push
jmp
pop
pop
loope
loopne
sbb
loopne
jno
call
inc
mov
sbb
enter
les
imul
add
sub
or
fwait
nop
add
mov
xor
lahf
rcl
push
sub
aam
mov
out
dec
ret
imul
cmp
das
mov
daa
cmp
nop
test
dec
daa
iret
xchg
adc
push
stos
or
mov
jbe
pop
ds
mov
add
sahf
cmc
int3
or
je
mov
popf
mov
aaa
shl
arpl
or
fs
stos
inc
fcompp
xchg
cmps
enter
cmp
sub
fwait
lds
sti
fild
dec
ins
fisttp
sbb
scas
data16
xor
pop
cmps
sub
add
cmp
fisub
outs
(bad)
retf
or
rcr
push
push
jo
iret
fistp
rcl
in
test
cs
dec
leave
sar
mov
imul
add
push
sahf
sti
clc
sub
(bad)
jne
cld
out
pop
js
call
adc
mov
cmps
mov
daa
xor
push
xor
xor
in
jl
or
dec
sbb
push
movs
sti
ja
mov
mov
fninit
xor
push
sub
sub
popa
pop
push
(bad)
enter
cwde
imul
movs
or
mov
je
pop
push
lods
lock
dec
out
jmp
sbb
lahf
(bad)
sbb
sti
push
mov
mov
scas
mov
mov
xchg
imul
je
xchg
loope
adc
pop
jecxz
aaa
pop
add
outs
(bad)
xchg
sub
rcr
ins
cmc
loopne
pop
pop
shr
int3
mov
mov
fwait
lds
add
push
adc
adc
dec
push
movs
cdq
xchg
addr16
jl
das
xor
lds
test
imul
imul
test
or
fwait
and
call
and
jnp
(bad)
out
xlat
mov
sbb
and
(bad)
xchg
imul
movs
(bad)
lods
hlt
mov
jmp
xor
(bad)
popa
movs
imul
adc
retf
lds
mul
cmp
shr
or
pop
test
sub
sub
les
popf
xchg
enter
cld
movs
dec
arpl
test
lds
mov
and
cwde
bound
jmp
dec
pushf
push
ins
push
rol
sbb
ins
jp
fsub
data16
stos
out
inc
pop
dec
arpl
aad
mov
mov
fistp
mov
mov
mul
push
std
pop
pop
mov
test
ss
mov
scas
scas
ins
push
js
mov
xchg
aam
lahf
sar
mov
adc
ss
outs
jmp
cld
inc
dec
test
xor
outs
and
bound
add
jmp
mov
into
jns
cmp
shr
sub
mov
mov
cmp
lods
loop
xchg
adc
cld
cwde
setno
add
inc
iret
xor
or
cdq
and
mov
stos
xchg
nop
cmp
mov
jecxz
jns
lea
int3
xchg
xchg
sub
icebp
fdiv
nop
xor
adc
xlat
sbb
inc
or
pop
pop
sub
adc
inc
pusha
add
enter
aaa
adc
pop
fidiv
sbb
mov
adc
jp
sbb
lods
jne
mov
bound
es
arpl
or
add
jmp
dec
mov
outs
mov
pop
repz
mov
lahf
push
rep
or
fidiv
shr
call
(bad)
fdivr
xchg
pop
pop
add
inc
inc
lods
push
ss
mov
sub
pop
lods
dec
fistp
sub
out
cmp
push
xchg
sbb
into
lahf
add
inc
outs
add
daa
xchg
hlt
pop
test
and
pop
sub
mov
xchg
in
sti
dec
add
aaa
jl
sub
and
cmp
sbb
bound
test
ret
add
ins
sub
int
je
push
mov
ss
xchg
shl
stc
mov
or
dec
adc
(bad)
mov
sub
int3
fstp
inc
sub
add
add
mov
les
pusha
rol
sbb
jl
push
xor
push
pop
neg
sar
xchg
aam
sar
fwait
pop
or
push
add
add
repz
mov
fsub
dec
xor
cld
ja
icebp
and
rcl
or
sbb
jns
neg
inc
xchg
mov
pop
test
test
mov
(bad)
shl
add
das
pop
dec
and
pop
int
in
jmp
mov
add
cmp
pop
nop
xchg
xchg
(bad)
out
xchg
xor
fsubrp
sub
jnp
ja
cmp
mov
xlat
or
sbb
rcl
jp
sbb
jecxz
jo
es
out
sbb
push
add
sbb
inc
adc
sar
ret
loop
jge
mov
inc
imul
mov
or
pop
mov
cli
jbe
lea
les
xor
in
out
out
js
ins
rol
(bad)
imul
scas
sub
sub
and
pop
fptan
xchg
sbb
jl
pop
mov
jb
or
ins
inc
jge
js
mov
jns
stc
out
xchg
mov
cwde
bound
lods
(bad)
call
jb
cmp
cli
jae
rcr
ins
xchg
ficomp
aam
imul
jmp
dec
ins
arpl
xchg
loop
dec
ins
cmp
fidiv
mov
retf
xchg
inc
in
and
xor
mov
mov
out
fs
add
adc
mov
mov
sub
jmp
mov
inc
call
sbb
dec
inc
mov
inc
int3
daa
jb
mov
ror
jle
stos
sbb
adc
push
stc
add
jge
push
xchg
outs
jns
aaa
clc
cmps
(bad)
inc
add
out
push
add
jbe
jae
cmp
data16
popf
and
sub
pop
(bad)
push
add
retf
or
pop
mov
pop
scas
push
xchg
add
(bad)
fistp
and
jge
bound
mov
pop
and
sub
and
mov
add
cmps
sahf
adc
adc
adc
jl
xor
data16
mov
or
not
pop
or
push
xchg
or
sar
mov
out
je
pop
repz
dec
test
dec
sub
pop
out
mov
xchg
fsubr
push
and
cmp
push
retf
add
movs
fcom
loop
jnp
lods
dec
(bad)
fidivr
out
dec
shl
test
mov
ja
hlt
adc
clc
rcr
(bad)
jp
shl
fldenv
mov
imul
loopne
cmp
das
cmp
sbb
push
lods
mov
sbb
jl
adc
jne
adc
push
jne
sub
xor
movs
push
in
cmp
scas
inc
cs
and
lahf
add
dec
(bad)
ja
rol
pop
inc
xchg
add
cmp
clc
mov
or
pop
ficom
mov
frstor
out
xor
and
cmp
mov
or
fs
mov
push
inc
mov
mov
pop
fldcw
pop
bound
out
cli
popf
pop
cld
cmc
iret
dec
out
imul
xchg
mov
frstor
fcomp
fst
mov
arpl
into
mov
ss
ret
cli
(bad)
bound
dec
out
lahf
cld
(bad)
ror
sub
iret
mov
xchg
cmp
gs
push
or
sbb
cmps
(bad)
jmp
adc
bound
aad
sub
outs
xchg
and
jecxz
mov
push
mov
pop
push
pop
(bad)
call
dec
sbb
mov
shl
xor
xchg
es
cmp
cmps
jmp
call
imul
add
jno
aam
xor
xchg
or
jle
test
mov
sbb
dec
clc
cmp
cs
dec
or
inc
loope
(bad)
and
daa
jmp
add
xchg
xchg
mov
sub
das
out
pusha
jae
mov
stos
shl
idiv
rcl
pop
loope
pop
scas
out
ss
das
or
jbe
mov
(bad)
xor
mov
cmps
inc
add
adc
(bad)
loop
or
sbb
rcl
test
int
loop
fwait
adc
push
mov
test
fwait
mov
pusha
fnstenv
fs
cmp
int3
xchg
je
push
out
repz
jl
popa
dec
aas
inc
ret
sub
mov
jp
dec
arpl
mov
repnz
loopne
adc
enter
jne
jno
jmp
adc
add
fstp
arpl
cmp
fadd
hlt
jg
sub
mov
ins
fmul
pop
cmp
outs
cld
cwde
sbb
repz
arpl
xor
dec
xchg
push
gs
add
ret
jnp
dec
cmc
cmp
popa
xchg
popf
fmul
movs
inc
sbb
xor
enter
adc
cld
sbb
push
nop
in
out
in
gs
fmul
popf
aas
std
adc
dec
jl
pop
and
and
inc
dec
xchg
(bad)
(bad)
in
mov
mov
orps
xchg
cmp
dec
jbe
dec
enter
call
add
sahf
mov
sbb
or
and
int
outs
fwait
ins
xchg
in
inc
xor
xchg
sub
je
mov
adc
pusha
(bad)
jae
and
jne
and
inc
dec
retf
movs
repz
mov
push
pop
xor
les
push
push
push
or
lds
push
jmp
inc
(bad)
push
out
fnsave
mov
(bad)
xor
push
in
fadd
add
dec
retf
out
movs
arpl
scas
out
inc
dec
sahf
stos
loopne
or
sbb
(bad)
push
push
add
sbb
and
lods
fs
ret
pushf
shl
iret
dec
sub
dec
je
cmp
cmp
jo
xchg
cli
jle
les
dec
sbb
add
mov
sub
jl
inc
push
addr16
dec
mov
arpl
es
loopne
mov
and
mov
inc
repnz
adc
unpckhps
push
into
pop
pushf
mov
or
ret
cmps
pop
jl
mov
pusha
adc
imul
in
or
adc
mov
cdq
lds
mov
pusha
pop
xor
int3
xor
repz
bound
cmp
sbb
enter
mov
fs
xchg
popa
and
mov
retf
test
inc
popa
push
sub
adc
xchg
pop
or
sbb
mov
out
adc
mov
mov
lods
(bad)
jb
jecxz
or
inc
add
ins
retf
inc
push
add
xor
call
inc
sbb
fs
sbb
dec
mov
lock
cmp
(bad)
mov
jbe
jb
xchg
cli
sbb
cld
pop
enter
sbb
movs
jbe
jbe
daa
rol
mov
fs
inc
cwde
fsub
cmps
ds
push
adc
test
jle
out
xchg
push
in
pushf
or
and
push
and
inc
adc
pop
xlat
in
adc
or
in
fwait
xor
jno
sahf
pop
mov
dec
movs
pop
push
or
cdq
mov
ja
mov
inc
psrld
sub
mov
mov
in
add
fisubr
pop
call
push
sbb
out
add
cwde
jne
dec
ds
xlat
push
aaa
sahf
add
pop
cs
mov
bound
mov
mov
sbb
movs
ins
xchg
mov
jne
cmp
mov
xor
xor
sub
out
(bad)
fld
test
and
inc
fild
xchg
pop
inc
mov
jl
aad
sub
add
and
or
cmp
in
and
ret
cmp
outs
mov
imul
aad
fbld
pop
cmp
test
xor
lds
jns
cmp
mov
jbe
outs
add
push
loopne
and
sub
xor
inc
call
icebp
jns
data16
cli
xchg
and
dec
dec
cmp
stos
gs
out
or
ret
test
mov
inc
push
jl
push
mov
mov
push
test
rcr
add
jo
cmp
outs
xchg
sub
mov
dec
mov
pop
push
ss
scas
pop
sbb
in
int
jecxz
divps
pop
push
jne
pop
inc
aam
pop
sbb
mov
inc
test
mov
inc
sti
pusha
clc
fst
add
mov
(bad)
test
inc
push
and
loopne
jo
scas
or
in
add
push
sbb
xor
ret
sahf
adc
mov
sbb
gs
xchg
xchg
add
cmps
repz
bound
sub
rcr
mov
mov
fmulp
xor
sub
sbb
dec
aad
out
fidiv
(bad)
xor
dec
adc
sub
dec
mov
inc
sbb
std
js
jns
xor
addr16
push
mov
xor
xchg
cmps
mov
(bad)
xchg
scas
outs
shl
(bad)
nop
mov
(bad)
je
inc
inc
add
push
jmp
inc
push
mov
mov
scas
mul
cld
inc
push
sub
pop
push
je
sbb
jbe
mov
dec
xchg
xor
sbb
inc
sbb
hlt
pop
adc
ret
pop
popf
or
jp
imul
xor
shl
pop
jne
pop
loope
adc
mov
jne
nop
and
cmp
movs
adc
xchg
inc
pop
aaa
adc
push
(bad)
jmp
out
not
cmps
pop
bound
frstor
imul
add
cmp
cmp
push
mov
sbb
cwde
mov
mov
jp
push
fisttp
rcr
cmp
repnz
int
in
nop
mov
or
mov
mov
add
je
xchg
jo
jmp
mov
adc
and
adc
dec
sub
cmp
and
imul
fs
or
adc
aaa
pop
gs
popf
fstp
and
fist
sbb
or
and
or
fwait
mov
sub
sub
setae
mov
bound
xor
sti
icebp
xchg
sub
mov
cmp
loop
xor
imul
in
adc
(bad)
xor
jp
mov
call
jo
push
pop
call
scas
xchg
add
shl
cdq
je
mov
push
popa
push
adc
cmp
fxch
xor
loop
std
adc
add
das
xchg
sub
or
jmp
dec
inc
mov
fild
mov
jne
mov
xor
adc
cmps
mov
sbb
popa
dec
and
xor
imul
dec
push
jne
push
add
mov
pop
int3
adc
mov
call
(bad)
fwait
test
mov
pop
mov
xlat
enter
mov
dec
mov
loopne
dec
cmps
movs
and
pop
mov
push
mov
push
jecxz
and
dec
adc
mov
dec
adc
out
jae
fs
out
sub
pop
jb
test
or
add
inc
lahf
test
popa
push
shl
leave
into
gs
sbb
or
out
dec
mov
mov
movs
inc
mov
jne
ret
xchg
mov
outs
inc
addr16
cmps
es
mov
jecxz
leave
retf
cmc
fdivr
pusha
cmp
rol
and
lock
sub
cdq
inc
xchg
std
ja
(bad)
loopne
cmp
sbb
push
mov
xchg
rcl
pop
out
pop
jnp
test
jge
fs
adc
dec
clc
stos
pop
cmps
je
iret
test
sub
(bad)
gs
imul
fisttp
sbb
gs
inc
ret
sub
fist
mov
mov
sbb
xor
imul
js
es
jmp
ds
mov
fld
mov
enter
mov
add
inc
es
xor
test
add
ins
dec
imul
ds
and
add
stos
scas
xchg
pop
jl
adc
mov
push
or
and
ror
fisub
loope
xchg
sar
ja
xor
(bad)
xor
jbe
shl
pop
data16
retf
pop
push
stos
test
stc
dec
mov
pop
add
sub
fs
mov
push
add
rcl
int3
push
out
jb
mov
out
dec
cs
or
cmp
dec
sar
mov
cmps
rcr
inc
and
push
pop
in
pop
out
popa
mov
cmp
pop
mov
dec
add
jo
out
xchg
xor
js
lods
int
xchg
jl
in
les
push
retf
mov
cmc
add
(bad)
jle
dec
cmp
jp
cmp
mov
adc
rol
out
lods
cli
fcom
pop
add
jmp
pop
and
sub
and
fdiv
in
and
and
mov
loop
nop
inc
daa
es
mov
shl
dec
mov
jo
test
mov
pop
adc
adc
adc
mov
scas
push
cld
clc
and
stc
out
jns
jbe
repnz
outs
fldcw
aam
mov
retf
iret
push
cs
sbb
mov
mov
sub
pop
ss
jmp
or
dec
das
inc
jno
jle
add
mov
jae
ins
sahf
movs
int
push
test
push
mov
jmp
jge
call
dec
mov
or
(bad)
out
jecxz
cmp
xchg
pushf
adc
push
ds
scas
jge
fdivr
adc
out
inc
jb
mov
pusha
clc
imul
sub
rcpps
mov
add
push
mov
(bad)
in
daa
or
out
and
and
int3
adc
xchg
mov
fs
xlat
dec
mov
aaa
mov
nop
hlt
scas
mov
pop
idiv
sbb
jp
xchg
loop
out
mov
or
js
imul
inc
scas
int3
sub
or
lock
xchg
mov
js
add
sub
arpl
(bad)
xor
cmps
fwait
and
in
mov
jnp
xchg
or
push
enter
pop
movs
popw
pop
mov
pminub
pop
cli
mov
retf
test
or
lds
inc
lock
out
int3
sbb
in
retf
test
icebp
ja
out
push
repnz
or
fnstenv
out
and
mov
(bad)
(bad)
dec
xlat
stos
jae
mov
fistp
packsswb
shl
mov
ret
add
fadd
mov
dec
call
xchg
popf
cmp
pop
jns
(bad)
jge
movs
loop
aam
test
out
jmp
pushf
mov
or
or
jne
mov
shl
(bad)
inc
sub
call
popf
cmp
inc
cmp
jno
add
loope
push
repz
inc
test
xlat
sbb
sti
dec
add
(bad)
and
dec
addr16
stos
out
jno
push
daa
out
jge
daa
xchg
add
push
or
popf
inc
or
aad
ret
jg
pop
in
xchg
sub
std
bound
cmp
add
jl
and
inc
lea
enter
arpl
dec
stos
sbb
jg
lock
mov
jbe
push
mov
das
mov
sbb
test
cmp
ins
cwde
xor
es
jp
fld
test
push
popf
xchg
inc
adc
mov
and
xchg
mov
arpl
dec
pop
push
adc
sar
in
inc
xor
dec
pushf
xor
mov
rcl
add
fbld
cmp
pop
jmp
push
movs
add
movs
dec
xlat
xchg
test
mov
inc
push
loop
out
sbb
outs
int3
loopne
or
mov
(bad)
in
sti
or
into
and
push
out
add
dec
xor
ja
mov
hlt
mov
inc
clc
mov
sti
cmp
sbb
ret
push
add
pop
adc
hlt
fmul
sub
addr16
movs
sub
sub
jo
out
or
add
add
test
mov
or
sbb
mov
sbb
sub
mov
sub
adc
push
jnp
pop
dec
mov
add
mov
or
adc
jp
mov
stos
sbb
inc
cld
push
pop
jae
fstp
or
ret
mov
pop
retf
jecxz
mov
hlt
mov
jle
adc
jmp
mov
mov
sub
cmps
cs
cli
mov
adc
jp
mov
jp
xor
jns
push
fucomi
stc
popa
das
pusha
add
ror
pop
lahf
sub
imul
jnp
dec
pop
icebp
inc
into
adc
mov
pop
aam
outs
dec
push
(bad)
sub
cmp
sub
mov
pop
or
jo
fisubr
out
mov
rol
es
stos
popf
mov
out
fdivrp
or
mov
sbb
xor
or
mov
gs
mov
pinsrw
or
scas
jmp
mov
cmp
push
(bad)
and
repz
pop
or
and
jmp
and
jmp
loop
push
and
sub
jl
sbb
addr16
ds
aad
imul
pusha
fs
cs
(bad)
sub
adc
popa
test
movs
xchg
push
aam
fs
push
add
or
fcmove
adc
je
adc
loopne
movs
stc
pop
or
lea
(bad)
jb
and
inc
xor
pop
mov
ror
add
bound
and
mov
out
aam
test
ret
cmp
and
repnz
int
lea
outs
adc
push
sbb
aaa
push
push
sbb
stc
sub
mov
sbb
pop
push
movs
fdiv
jle
data16
mov
in
sti
mov
in
mov
popf
(bad)
mov
jae
pop
rcl
sub
mov
pop
pop
push
retf
scas
cs
dec
dec
std
ret
push
jmp
mov
jno
inc
outs
in
inc
mov
pop
jne
cmps
sbb
popa
jb
hlt
pushw
hlt
jne
cmp
add
cli
mov
hlt
pop
or
sub
pop
and
mov
cmc
aas
mov
push
daa
test
sub
fisubr
sub
adc
mov
fnstenv
mov
cld
mov
shr
inc
mov
test
pop
and
ss
jle
ins
pop
and
cmp
icebp
les
sub
sbb
sahf
push
repz
clc
push
ror
(bad)
jb
xor
adc
pop
jae
popa
jno
sti
cli
xlat
inc
and
in
out
retf
cdq
inc
mov
lods
inc
mov
cmps
adc
not
aad
sbb
mov
pop
mov
gs
dec
hlt
(bad)
mov
sub
sahf
test
sbb
cwde
pop
test
nop
mov
ret
das
pop
push
cmp
imul
jne
clc
xor
popa
out
jmp
pop
mov
pushf
ss
mov
mov
inc
fstp
inc
jne
jle
mov
sbb
inc
(bad)
imul
mov
not
jno
mov
jnp
sub
lods
lahf
loopne
sbb
mov
iret
in
mov
(bad)
mov
jo
cmps
arpl
fucomi
jnp
dec
xchg
adc
pop
jb
cld
sbb
jo
xor
stos
add
mov
fimul
cmp
xchg
pop
icebp
xchg
sbb
mov
mov
sbb
mov
lahf
cmc
xor
xor
inc
pop
stc
add
push
(bad)
movs
or
out
pop
imul
outs
stos
sub
ins
neg
xchg
mov
nop
outs
in
or
fisub
clc
push
aaa
sbb
sbb
fisttp
(bad)
movs
adc
lahf
jns
adc
ror
dec
xchg
and
adc
sub
xlat
add
out
adc
dec
mov
push
pushf
inc
loope
sbb
or
aam
push
sti
(bad)
and
rcl
or
aas
mov
sbb
pop
and
cwde
xor
push
aam
adc
xor
lahf
ins
aam
lods
cli
(bad)
nop
js
sbb
nop
ins
ja
or
jg
sti
lods
neg
lea
mov
into
jle
or
inc
add
xchg
addr16
pop
inc
idiv
jb
out
add
push
push
push
xchg
(bad)
sub
push
mul
js
sti
repnz
mov
(bad)
repnz
xchg
je
add
or
sub
xor
push
sub
adc
(bad)
sbb
mov
jno
mov
sbb
outs
fistp
paddsb
sbb
inc
sbb
sub
mov
fld
mov
mov
jbe
dec
inc
jnp
(bad)
imul
jnp
mov
cmps
pop
adc
pusha
fist
out
sbb
sub
frstor
repz
and
xlat
or
stos
or
pop
es
adc
xchg
test
inc
ss
repnz
sahf
dec
or
clc
dec
loop
pop
mov
push
and
xlat
rol
stc
sar
dec
sbb
aas
clc
arpl
jg
inc
cmc
stos
shr
mul
ins
sbb
adc
cmp
xchg
pop
mov
and
mov
fidiv
ret
(bad)
dec
outs
mov
sbb
and
adc
xchg
adc
js
and
inc
or
push
jle
into
fist
arpl
or
repnz
or
addr16
jno
sbb
mov
rcr
bound
loope
mov
add
(bad)
pop
test
cmp
push
aaa
aam
mov
sub
rol
jp
aad
call
dec
dec
mov
cmp
outs
mov
data16
std
mov
mov
jmp
rcl
aam
arpl
sbb
mov
jl
(bad)
cmp
(bad)
icebp
mov
add
aas
push
sar
out
jo
mov
out
fstp
sbb
adc
out
mov
enter
imul
mov
or
inc
frstor
xchg
mov
adc
mov
(bad)
sbb
jecxz
jno
test
jle
jmp
dec
fs
sbb
pop
cmc
pop
inc
cmp
into
push
or
sahf
mov
iret
add
dec
adc
je
adc
jnp
repz
mov
imul
lea
aam
rcr
jne
popf
test
(bad)
pop
loope
add
daa
dec
add
pop
outs
push
add
dec
fcmovnb
push
nop
in
jle
dec
xchg
stos
adc
clc
cmps
dec
push
push
pop
dec
sti
pop
inc
sbb
add
loopne
test
or
xchg
jne
mov
popf
mov
retf
and
sub
inc
pop
stos
les
or
mov
dec
mov
sbb
mov
mov
pop
je
pop
ja
pusha
mov
cdq
pop
inc
das
inc
and
pop
xchg
fsubr
pop
lar
pop
and
sbb
cmp
es
aam
in
lock
mov
movs
mov
pop
lock
popf
(bad)
in
fnstsw
cmp
out
pop
jae
xchg
pop
lds
sub
jl
fisub
call
data16
scas
sbb
test
xchg
jp
(bad)
mov
mov
in
dec
shl
push
sub
sub
xchg
sbb
jle
lock
sar
lock
and
or
rcl
lds
ret
and
pop
or
mov
sbb
add
aad
scas
inc
inc
sub
scas
mov
xchg
jno
pop
leave
mov
dec
(bad)
pushf
push
data16
push
mov
add
cmps
pop
xchg
dec
or
mov
sti
add
mov
push
mov
and
and
es
movs
xchg
xchg
cwde
adc
pop
(bad)
(bad)
sub
sbb
inc
sbb
leave
adc
fcmovbe
gs
ror
dec
cmp
or
loopne
clc
inc
add
inc
push
mov
loopne
pop
mov
sub
outs
outs
mov
xchg
(bad)
mov
xchg
jmp
ret
cmc
jne
xchg
jo
dec
pushf
inc
ret
cli
retf
sbb
xchg
xor
in
ror
cmp
test
scas
jmp
sbb
mov
test
jno
stos
ds
sbb
xor
push
xchg
mov
outs
mov
aad
movs
sub
(bad)
sbb
pop
jo
retf
rol
xlat
call
inc
jl
sar
(bad)
cmp
hlt
pop
les
dec
or
ja
call
xchg
retf
add
xchg
xlat
icebp
arpl
or
ja
lods
ret
mov
nop
pop
ins
je
push
test
addr16
mov
cmps
or
pop
repnz
lods
jae
iret
push
xchg
loopne
mov
aas
xchg
inc
sub
test
mov
test
xchg
dec
adc
cs
popa
retf
xor
or
ret
pop
adc
xlat
add
xchg
and
ja
in
inc
add
stos
popf
sar
mov
and
push
jg
ja
iret
or
jmp
test
loopne
inc
jnp
mov
shl
xor
aad
das
popf
les
lea
inc
add
addr16
test
mov
fisub
sub
data16
lods
scas
or
jg
std
inc
inc
mov
movs
adc
cdq
pushf
push
(bad)
retf
mov
or
xchg
retf
retf
test
or
push
call
pop
pop
mov
mov
std
sti
push
sub
mov
adc
das
ja
dec
push
jae
sbb
loope
test
(bad)
(bad)
in
push
rep
push
cmps
nop
fcomp
push
cmc
mov
add
pop
mov
pop
pop
in
aad
lods
sub
iret
ja
mov
and
fcomp
arpl
adc
sti
add
sbb
pop
ja
mov
push
mov
clc
std
sbb
mov
inc
shl
int3
xor
sub
xlat
mov
jp
mov
es
mov
jae
dec
push
xchg
xor
lods
mov
(bad)
retf
fmul
xchg
cs
popf
stos
sti
adc
sub
and
lock
popf
pop
push
dec
adc
in
mov
repz
pop
mov
test
sbb
fidiv
fwait
scas
popa
add
inc
mov
dec
cld
xchg
daa
or
test
push
ja
mov
popf
add
lahf
sub
aad
out
fstp
mov
adc
mov
adc
add
in
pop
ror
or
xlat
sub
ret
mov
xchg
xchg
jb
mov
dec
jb
cmp
mov
popa
pop
lahf
pushf
imul
shl
ret
xchg
iret
cli
sub
and
cwde
jns
cs
jns
inc
loope
test
leave
jmp
ss
dec
popf
inc
inc
neg
imul
hlt
fnsave
lea
pop
rcr
jns
mov
jne
stos
fld
int3
jg
fistp
push
inc
mov
fsubrp
mov
push
cmps
jge
push
dec
sbb
xor
xlat
jecxz
push
rcl
fld
ss
or
sti
dec
pop
dec
jbe
jb
xor
addr16
std
mov
lock
xchg
call
or
xchg
pop
lea
inc
sub
in
stc
adc
cmps
xchg
mov
into
cmp
ss
loope
or
jno
call
pop
sbb
nop
mov
xchg
in
push
enter
mov
call
ins
(bad)
xor
movs
out
add
out
retf
xlat
rcr
push
mov
loop
sbb
popf
call
sbb
jmp
fs
lahf
xchg
cld
stos
sbb
adc
out
pop
into
push
in
jbe
std
dec
add
loopne
shl
pushf
fild
ja
fs
rol
xchg
(bad)
jae
sub
adc
inc
int3
(bad)
repz
ins
pop
mov
xor
out
jp
aas
sub
adc
mov
xchg
fidiv
pushf
stos
jecxz
lods
sbb
sub
inc
cmp
ss
xchg
fdiv
cdq
stos
bound
in
std
scas
sar
cmp
aad
adc
mov
xor
mov
add
ficomp
push
daa
jmp
push
inc
imul
enter
cli
sbb
adc
mov
xchg
pop
popa
mov
dec
inc
aaa
int3
and
imul
ret
xlat
retf
(bad)
enter
adc
sub
push
push
lds
cmp
retf
pushf
push
jp
cmp
mov
cwde
lahf
sbb
dec
outs
adc
sub
push
mov
mov
push
mov
lock
mov
pop
cmc
daa
add
ins
pop
in
push
mov
ror
test
div
icebp
and
pop
ret
dec
stos
inc
inc
addr16
in
inc
call
fstp
push
aam
arpl
mov
stos
std
test
clc
xchg
jmp
add
adc
clc
xchg
test
push
dec
xchg
mov
dec
out
lods
int
sahf
cs
add
mov
xchg
scas
xchg
and
jmp
or
or
(bad)
sub
loop
sub
mov
mov
jg
das
test
les
push
sbb
fldcw
out
xor
outs
and
push
cli
mov
xor
psubusb
clc
neg
xor
scas
in
enter
add
jnp
and
mov
movs
jg
lods
pop
das
das
fwait
(bad)
call
jae
imul
or
fwait
jo
xor
pop
xor
adc
xchg
in
lahf
xor
fild
cld
jno
and
pusha
jmp
and
ret
ins
jb
test
gs
clc
aam
xchg
cdq
test
dec
push
jmp
mov
fwait
in
cmp
add
imul
sbb
sbb
sub
mov
push
add
and
jmp
adc
pop
out
push
mov
in
xchg
sub
stos
sbb
and
nop
inc
aad
add
inc
dec
jp
addr16
push
in
jl
jnp
cld
aad
in
retf
data16
xchg
jmp
or
ret
or
popa
push
sbb
outs
repnz
es
cmc
mov
(bad)
pop
adc
fimul
mov
xchg
aas
sar
popa
mov
add
cmps
fwait
sbb
cmp
es
push
scas
jmp
popf
push
pop
outs
mov
mov
daa
jnp
stos
and
fsincos
inc
lea
data16
push
jb
jp
mov
adc
out
cld
lock
jne
test
jno
repz
pop
mov
adc
pop
out
or
mov
push
shr
sar
nop
daa
pop
sub
retf
das
fidiv
push
in
test
push
inc
popa
adc
inc
test
fpatan
mov
lods
pop
ja
add
jo
pop
sbb
ins
sti
rcr
jl
jmp
addr16
sahf
iret
jge
les
push
lock
sbb
aas
(bad)
ins
inc
and
dec
xlat
mov
aaa
dec
inc
jns
push
mov
push
ret
sti
cmp
jno
adc
adc
(bad)
hlt
cdq
push
mov
out
aad
not
adc
cmp
add
std
fdivr
pop
(bad)
xor
push
outs
sub
cmp
mov
imul
pop
xor
leave
mul
jle
and
push
pushf
call
and
div
push
inc
shl
inc
ss
pop
xchg
pop
into
dec
imul
rcl
dec
daa
inc
or
int3
xlat
mov
test
mov
sbb
mov
clc
xor
xlat
in
mov
lds
pop
popa
add
test
test
inc
test
scas
jae
sub
dec
mov
push
jae
mov
fnsave
push
jns
and
lods
pop
mov
jns
js
out
adc
or
pop
jo
imul
pop
sub
mov
int
inc
push
cs
sub
dec
iret
data16
icebp
push
fwait
pop
je
addr16
xor
fnstcw
fidivr
jle
mov
mov
scas
mov
retf
dec
mul
push
or
daa
sub
ins
jns
xor
sbb
pop
int3
mov
icebp
pushf
mov
daa
push
cmp
inc
ja
mul
or
icebp
pop
test
imul
fimul
addr16
add
jbe
loope
repnz
lods
xchg
jb
adc
or
push
cmps
jecxz
push
cld
out
push
cmp
jb
adc
popf
je
dec
(bad)
ins
arpl
into
jmp
popa
inc
mov
in
or
xchg
fwait
lock
push
sub
mov
pop
xor
dec
fiadd
push
mov
pop
mov
and
xchg
mov
xor
js
mov
inc
cli
pop
cmp
and
mov
lea
enter
lock
xchg
repnz
xor
test
mov
push
add
pop
mov
ss
mov
add
and
sbb
call
or
clc
stc
cmp
fmul
pusha
fs
lea
mov
push
leave
sub
call
or
sub
xlat
bound
xchg
jns
xchg
hlt
out
scas
call
jge
mov
mov
pop
out
add
xchg
mov
gs
add
and
jmp
pop
mov
sub
mov
stos
jbe
movs
(bad)
jle
sti
cmps
xchg
(bad)
sbb
arpl
movs
jecxz
ret
inc
and
sub
pop
popf
pop
xor
lea
call
and
adc
inc
popa
push
lods
inc
loopne
sar
xacquire
xor
mov
inc
xchg
stos
out
sbb
cmp
and
out
push
in
mov
ds
pop
out
sbb
retf
icebp
sbb
les
jo
xor
inc
or
pop
pop
not
add
fnstenv
ins
inc
sbb
push
and
xchg
and
jmp
retf
test
push
stc
(bad)
jmp
cmp
inc
inc
stos
push
aad
inc
xchg
pop
adc
xchg
les
in
dec
jge
out
es
and
or
imul
xor
hlt
sbb
adc
cmp
es
out
sub
int3
and
cmp
jb
dec
pop
pop
addr16
mov
out
test
jae
mov
dec
or
push
mov
adc
pop
push
cmp
push
ss
mov
mov
jp
jns
out
sbb
aad
imul
ja
sahf
cmc
les
or
test
(bad)
ins
jp
bound
cmps
repnz
icebp
jecxz
xor
pop
mov
adc
sahf
movs
mov
sar
cmp
mov
xchg
pop
xor
aas
jns
call
mov
push
loop
pop
sbb
mov
cmps
dec
lods
pop
mov
jp
add
or
and
and
(bad)
out
loope
fisubr
jmp
sub
sbb
xor
repnz
vminps
push
aad
pop
aaa
aad
lahf
and
add
js
and
cld
pop
inc
jle
data16
or
jo
mov
loop
ror
out
xchg
pop
out
inc
jae
fidivr
inc
xor
cmp
shl
fadd
inc
pop
sbb
jl
sub
popf
mov
cld
sub
arpl
aas
push
pop
jmp
mov
nop
cmps
pop
(bad)
fist
or
lea
daa
mov
sbb
not
cmps
lea
and
les
xchg
sbb
lds
xchg
repz
pop
sub
nop
adc
xchg
pop
shr
js
test
iret
inc
outs
ins
sub
mov
ds
cmp
outs
pop
mov
sbb
jmp
retf
mov
jg
sbb
dec
arpl
mov
arpl
sub
leave
repnz
lahf
leave
into
sub
(bad)
rol
adc
xor
nop
stos
sti
mov
mov
jae
jnp
xor
adc
xchg
(bad)
and
out
dec
mov
jo
jo
push
mov
jne
cmp
je
stos
popa
or
mov
sbb
inc
fimul
add
inc
xchg
dec
sbb
test
loope
shl
int
mov
js
fwait
mov
push
arpl
sub
add
into
push
cmp
in
jp
dec
repz
ja
cmp
xchg
push
mov
fcmovb
sbb
xchg
inc
aas
mov
leave
xchg
repnz
pop
int
jg
sub
xor
sar
sub
mov
(bad)
iret
cmps
cmp
xchg
mov
std
dec
push
imul
scas
inc
cli
arpl
mov
jo
out
daa
cs
sbb
cmp
mov
retf
xor
sub
fistp
dec
and
push
sti
int3
or
scas
sbb
and
cmc
sub
push
push
stos
jb
outs
mov
stc
jmp
movs
pop
shl
repnz
ds
xor
pop
data16
icebp
cmc
in
add
adc
xchg
mov
dec
loope
in
mov
mov
xchg
push
jne
mov
retf
inc
icebp
mov
and
add
pop
out
(bad)
test
ja
cld
sub
outs
sub
mov
add
cmp
addr16
ja
retf
aas
test
dec
inc
test
cli
retf
into
pop
enter
ins
add
add
neg
jnp
mov
or
mov
in
jl
and
(bad)
mov
mov
dec
sub
mov
or
test
sub
jge
xchg
shl
xor
lds
sahf
xchg
int
mov
imul
push
stos
inc
(bad)
mov
pop
fdiv
or
sub
sub
ja
int
xor
inc
mov
data16
sbb
test
stos
mov
rcl
sbb
jns
repz
ror
push
or
es
mov
aad
sbb
add
es
imul
push
(bad)
repz
iret
sub
or
cmps
repnz
mov
dec
and
pop
xor
mov
cmc
push
lahf
mov
std
or
into
mov
outs
lahf
mov
aad
push
and
jp
mov
jns
xor
or
xor
mov
mov
jl
idiv
xchg
shr
xor
cdq
ss
mov
xchg
stos
pop
pop
and
inc
mov
jo
pop
jne
inc
enter
out
(bad)
push
and
push
jle
xor
fild
test
dec
inc
stos
mov
lea
jecxz
adc
outs
push
inc
jmp
inc
dec
inc
xlat
sub
jns
aad
popf
mov
or
mov
xlat
fld
mov
gs
shr
mov
(bad)
iret
mov
inc
or
mov
xchg
cmp
cdq
mov
xchg
jae
in
dec
or
xor
adc
jl
call
ds
and
push
clc
pop
outs
pop
jns
imul
out
mov
ror
in
div
jmp
div
arpl
aaa
out
repz
push
(bad)
pop
cli
fild
out
mov
xchg
lds
xor
sbb
inc
jmp
inc
scas
loope
movs
ins
enter
jp
mov
test
jl
xor
mov
xchg
nop
jmp
inc
sbb
mov
xor
imul
sbb
(bad)
rcl
push
mov
xchg
and
jmp
in
outs
inc
clc
jge
retf
cmc
jmp
mov
xchg
push
xchg
sub
imul
shl
xchg
inc
(bad)
fisubr
out
in
push
(bad)
leave
sbb
in
imul
scas
mov
mov
bound
sub
push
movs
daa
mov
pop
inc
cmp
mov
mov
inc
or
loope
push
dec
call
mov
mov
test
cmp
loop
in
add
imul
pop
out
cmp
mov
jle
in
inc
dec
cwde
in
fimul
mov
dec
mov
push
cmp
mov
jmp
ficomp
push
pop
push
not
jne
or
test
in
mov
jmp
xor
fs
sbb
mov
cli
cli
mov
rcl
aas
dec
inc
jmp
inc
repz
leave
pop
xchg
mov
push
call
dec
sahf
ins
das
scas
push
or
(bad)
xchg
sub
sbb
xchg
xor
jl
bound
mov
sub
adc
lods
repnz
mov
add
inc
loope
stc
adc
iret
and
int
mov
sahf
xchg
gs
sub
mov
sub
leave
(bad)
adc
dec
adc
imul
jne
in
pop
adc
ja
push
push
sub
jns
repnz
hlt
mov
outs
push
out
push
btc
adc
addr16
mov
idiv
or
mov
xor
jnp
dec
stos
lea
jge
(bad)
jno
jbe
mov
xchg
jne
fnstenv
jne
sub
inc
push
lods
lods
xchg
hlt
sub
inc
(bad)
dec
inc
arpl
inc
loope
adc
out
pop
daa
sbb
shl
mov
clc
sub
stos
js
fsub
sbb
cdq
cdq
stos
sub
je
xchg
mov
div
addr16
js
and
rcl
or
mov
fsub
jo
push
(bad)
rcl
hlt
test
test
lods
mov
cmp
les
sbb
dec
and
mov
cmp
cmp
ret
out
sub
mov
ins
ins
cld
into
mov
lds
mov
cwde
in
mov
xor
xchg
dec
sbb
or
mov
dec
loope
inc
jmp
lods
jnp
ficom
fwait
cli
popa
push
addr16
rcr
mov
rcl
and
arpl
push
fistp
adc
sbb
push
mov
ret
xchg
push
bound
loopne
lods
iret
rol
sub
jge
jl
add
shl
and
xor
jno
xor
shl
outs
test
mov
mov
sub
ds
lds
adc
neg
sub
adc
mov
imul
fcom
mov
lods
cmp
push
dec
or
hlt
xor
sbb
inc
jbe
jl
ja
(bad)
out
push
push
xor
cmp
pop
cmp
push
mov
outs
pop
jge
mov
scas
inc
into
cwde
cmp
fidivr
mov
adc
in
repnz
pushf
retf
sbb
pop
repnz
adc
les
into
ror
test
out
xor
jp
mov
pop
xor
pop
push
leave
or
rcr
in
add
mov
xchg
mov
jo
ja
mov
jne
jno
inc
mov
mov
outs
cmp
cmp
push
cmp
jle
jns
push
sbb
aaa
add
push
mov
cmp
add
test
jg
mov
ficom
inc
mov
ins
imul
xchg
jl
push
mov
mov
popa
fs
rcl
in
in
fidiv
ror
cmps
mov
cmp
pop
push
sbb
pop
or
in
mov
outs
jo
mov
pop
cmps
out
shl
mov
movs
pop
jbe
lahf
or
int3
iret
xchg
jle
imul
sbb
out
mov
inc
inc
and
(bad)
test
inc
jno
mov
cmp
add
cmps
icebp
add
cmp
jbe
mov
mov
scas
rcr
xor
xor
test
jb
dec
sbb
stos
es
push
push
(bad)
test
push
push
gs
iret
jge
dec
loope
and
inc
out
sbb
mov
je
cld
test
and
mov
fdiv
div
lock
rcr
in
adc
gs
pop
adc
call
mov
cmp
lds
xor
shl
sbb
aam
addr16
push
mov
popf
sbb
and
mov
int3
xchg
mov
out
mov
xor
out
push
nop
ja
fwait
cmps
mov
test
xrelease
out
add
jmp
push
sti
push
mov
scas
adc
mov
cwde
movs
pop
jmp
jae
pusha
xchg
jecxz
leave
and
mov
std
jae
push
sbb
sti
cs
lahf
dec
cmp
fnstcw
call
mov
outs
push
jbe
rcl
mov
ret
aas
scas
push
push
dec
or
inc
shl
dec
js
cmps
test
xor
sar
ins
adc
xor
test
arpl
ret
mov
call
dec
in
sub
push
or
mov
int
test
and
xchg
sbb
clc
test
fisubr
hlt
mov
sub
mov
or
and
ror
jecxz
movs
out
(bad)
pop
push
jl
push
push
das
test
adc
aam
xchg
ja
ror
stos
mov
xchg
ja
call
jno
test
rol
stos
sub
popf
icebp
test
cld
mov
enter
add
shr
cmps
sahf
fld
add
mov
sbb
call
push
sbb
int
dec
xchg
and
and
js
inc
daa
adc
lods
inc
sub
mov
mov
push
movs
repnz
fsub
pop
shr
jmp
out
lahf
sahf
and
sub
lods
into
pop
sbb
aam
adc
(bad)
adc
daa
dec
adc
mov
sub
xchg
sub
and
popf
xchg
shl
xchg
adc
inc
test
leave
mov
inc
sahf
(bad)
sbb
inc
xchg
nop
push
mov
mov
cld
sub
int
imul
ror
push
icebp
lar
jle
cmc
push
mov
scas
mov
xchg
lea
mov
test
push
pop
fcmovu
adc
iret
(bad)
out
dec
pop
and
inc
inc
cmp
lods
mov
js
repnz
add
push
and
jmp
jns
adc
(bad)
cld
sbb
imul
add
js
ret
mov
inc
test
pop
je
push
pop
pop
jmp
sub
jnp
and
mov
movs
in
(bad)
jl
sbb
xchg
dec
jb
fnsave
cwde
jle
sti
push
into
ins
or
push
mov
jno
movs
enter
test
mov
cdq
mov
sti
jo
or
xchg
xor
push
cwde
sti
arpl
js
mov
jmp
jle
in
pop
(bad)
jo
jnp
pop
or
add
cli
or
into
jbe
sub
xchg
xchg
jl
ror
or
mov
rol
mov
in
ficom
push
xchg
push
jl
cmp
fwait
into
mov
fisubr
dec
cld
(bad)
mov
jns
jnp
mov
fimul
sbb
call
int
add
cmc
push
cmc
out
xchg
mov
fcmove
pop
pop
add
sbb
ins
idiv
inc
mov
xchg
mov
repnz
repnz
fdivr
std
int
scas
or
fstp
mov
pop
loope
sti
xor
jp
adc
fadd
mov
jnp
mov
(bad)
adc
mov
mov
shl
js
int
xor
or
sub
xor
push
dec
pop
lods
sub
mov
ins
fbstp
inc
and
pop
out
and
dec
add
dec
outs
xchg
test
enter
rcr
fst
test
imul
or
xor
jmp
cs
xchg
test
jno
add
push
push
jns
and
(bad)
adc
mov
mov
and
inc
ret
or
shl
fidivr
shr
jmp
(bad)
dec
mov
dec
jge
and
dec
push
lock
adc
xchg
div
inc
mov
ins
scas
xor
mov
ror
add
and
outs
xchg
(bad)
dec
test
sbb
pop
enter
dec
fisubr
fld
push
pop
jns
xchg
ficomp
call
or
fdivr
loope
adc
stc
mov
dec
cmc
xchg
push
in
inc
mov
cs
push
inc
repnz
jno
and
rcl
sub
mov
mov
inc
clc
xchg
fstp
repnz
mov
aaa
shl
(bad)
and
and
push
mov
ins
dec
mov
popf
or
xor
out
(bad)
in
pop
scas
clc
fxch
xor
cmp
jl
hlt
pop
ror
test
cmc
ins
arpl
sub
mov
xor
fild
pop
in
xchg
jmp
adc
arpl
icebp
xchg
inc
call
mov
test
push
sub
cwde
pop
pop
fs
pop
mov
lahf
call
xor
mov
xor
mov
jb
inc
dec
mov
sub
jp
inc
dec
lods
in
test
aaa
test
xchg
aas
and
test
lock
pusha
lods
inc
dec
ins
dec
add
sub
(bad)
jle
or
add
cmp
xor
sbb
push
cmp
pop
xor
bound
int
jge
xchg
dec
(bad)
adc
jo
rcr
pop
push
xor
xchg
sbb
or
xor
dec
movs
iret
cmps
sbb
and
in
sti
inc
lods
cmc
sbb
cmp
jae
cmp
fs
stc
and
cld
jb
xchg
call
xchg
test
outs
mov
popa
add
inc
cmp
xchg
ret
hlt
push
add
cli
jbe
add
test
fstp
xchg
mov
out
dec
movs
ja
cs
pop
xor
mov
jae
faddp
sub
adc
adc
mov
in
xchg
inc
int3
xchg
jae
rcr
dec
(bad)
fs
(bad)
mov
sbb
les
packuswb
mov
sbb
fnstcw
or
adc
sbb
dec
adc
imul
repnz
mov
jmp
inc
sbb
clc
inc
and
cli
rol
jle
add
aad
je
pop
mov
scas
imul
mov
cmps
inc
mov
clc
lahf
cmp
ja
or
pusha
and
test
dec
call
les
mov
ss
dec
and
cld
cwde
(bad)
jle
mov
std
popfw
or
sub
inc
aad
vpmacssdql
call
cmps
call
pop
ror
(bad)
cld
mov
inc
add
fnsave
mov
out
xchg
adc
stos
lock
jnp
xor
sub
mov
das
pavgw
inc
mov
jno
leave
mov
jg
ret
lock
cmp
scas
xchg
jbe
cmp
lods
add
lods
in
adc
mov
xlat
lock
test
mov
dec
adc
fwait
and
cmp
addr16
sbb
add
add
pushf
jg
out
add
sbb
or
int
aad
jmp
sub
mov
rcr
test
repnz
xor
push
xlat
mov
in
sub
stos
test
iret
xchg
shl
and
lods
pop
adc
fild
imul
mov
jle
mul
cmps
ins
outs
and
mov
and
sbb
leave
inc
mov
cmp
jmp
repnz
jge
xor
jns
pop
ins
push
(bad)
ret
movs
in
fs
loope
loope
outs
inc
xchg
jmp
inc
pop
jae
test
retf
jae
cdq
dec
jg
and
pusha
inc
int
out
test
push
xchg
pop
pop
cwde
inc
and
int
sahf
call
loope
sub
pop
and
enter
leave
xchg
or
xor
add
cdq
loopne
neg
sub
les
retf
in
jae
xor
loope
xchg
cmps
push
les
dec
gs
movs
and
rcl
dec
xor
jmp
mov
mov
mov
xor
xor
sbb
retf
jne
rcr
enter
out
ins
stc
movs
(bad)
dec
sar
lods
mov
sbb
imul
inc
mov
into
sub
xchg
push
inc
rcl
sahf
psubd
mov
jo
mov
or
sub
mov
leave
popf
retf
shl
fild
xor
sar
sub
mov
mov
adc
or
sub
pop
pushf
adc
lods
jmp
jno
pop
xchg
xor
sub
into
in
mov
push
push
into
int3
and
jnp
mov
mov
jnp
pop
sbb
(bad)
in
push
in
jbe
sub
cmp
jno
jne
out
call
push
and
sub
jbe
or
daa
xchg
retf
sub
lds
sbb
std
stos
in
lock
rcl
repnz
cmp
push
ins
call
daa
jb
adc
adc
fistp
push
imul
adc
pop
xor
jge
mov
fnsave
or
jo
jno
lds
dec
jecxz
add
adc
cmps
push
and
jb
inc
loope
hlt
mov
imul
shl
loope
cmps
data16
push
loopne
repnz
or
and
cli
cmc
es
ror
icebp
jae
jge
pop
sub
rol
scas
es
sbb
test
and
mov
in
jne
pop
or
pushf
mov
push
cmp
and
mov
test
mov
xchg
clc
fcmovb
movs
cmc
push
add
push
mov
inc
mov
dec
xchg
add
enter
xor
int
cmc
and
call
stc
and
test
push
mov
push
mov
mov
pop
test
call
push
mov
dec
stc
nop
add
and
jmp
popf
ins
es
loop
dec
dec
pop
in
xchg
dec
iret
cli
mov
call
sbb
js
ins
lock
xor
dec
push
and
cmp
imul
sub
shl
popf
or
fisub
in
out
push
pushf
mov
sbb
cmp
jp
inc
push
mov
mov
fucomi
mov
jl
int
sub
ins
mov
outs
and
out
(bad)
mov
xchg
int3
jb
adc
fld
enter
aam
mov
ins
or
and
pop
cmps
and
inc
adc
int3
mov
addr16
lea
add
cmps
jno
cmp
call
and
jg
test
dec
push
aaa
loope
imul
jg
aas
rcl
in
and
scas
adc
loop
icebp
enter
push
xchg
jle
sar
jmp
dec
fcom
cli
cmp
mov
inc
retf
dec
scas
jbe
add
jmp
mov
mov
scas
xchg
pop
std
movs
mov
jmp
mov
repnz
xlat
mov
call
shl
push
bnd
cmp
ror
mov
jb
add
adc
gs
mov
xchg
jno
inc
retf
jl
mov
jge
xor
jge
xchg
sub
leave
xchg
xchg
ss
mov
and
or
sub
out
and
xchg
sub
xorps
enter
bound
ret
scas
and
imul
and
addr16
inc
pop
cwde
dec
jbe
fmul
push
cmps
out
add
fisubr
jnp
and
pushf
sub
lods
outs
xchg
xlat
aaa
fnstcw
adc
mov
(bad)
jno
jmp
lahf
mov
ins
push
sbb
ins
rcl
int
xor
add
mov
jmp
or
dec
ret
aaa
mov
mov
xchg
mov
and
fild
into
cmps
adc
push
cld
xor
in
adc
icebp
sub
sub
jbe
fcom
pop
xor
jle
mov
bound
cwde
pop
or
fcomip
mov
jne
cwde
vshufpd
and
daa
ret
lds
add
or
fcomp
cwde
jno
jne
jo
out
mov
mov
fnstcw
push
int
hlt
int3
inc
rol
push
xchg
sbb
test
in
call
cli
ficom
xchg
out
push
lock
add
lods
daa
pop
ss
xor
mov
adc
cdq
arpl
sbb
pop
enter
mov
inc
cli
pop
in
inc
test
mov
fadd
hlt
xchg
lods
add
add
repnz
dec
mov
push
movs
cli
into
cld
adc
dec
dec
pop
cwde
inc
sti
push
jmp
fisub
xor
test
xchg
test
mov
aam
cmp
aas
fsub
xchg
xor
ss
aas
in
or
xchg
mov
popa
and
adc
inc
add
stos
loop
xor
sbb
pop
or
iret
in
and
out
add
lock
push
xor
xchg
jl
adc
sbb
xchg
sbb
dec
sbb
pop
inc
rcl
cmp
pop
mov
mov
fidivr
les
inc
test
sub
sub
popf
loop
ds
pop
cmp
bound
cmp
mov
or
xchg
ins
rcr
inc
sub
arpl
or
(bad)
gs
rcr
cs
pop
scas
sahf
jae
fidivr
dec
cmp
jl
fcom
call
dec
mov
push
add
dec
icebp
int3
inc
xchg
mov
not
mov
push
ret
aad
cmp
out
mov
icebp
and
mul
sub
adc
mov
jmp
inc
pop
cmps
ss
add
and
adc
xchg
push
sbb
setns
jmp
hlt
jo
or
mov
and
jle
xor
out
xor
(bad)
mov
push
dec
or
pushf
or
test
jle
pmovmskb
mov
xor
mov
mov
ret
mov
mov
test
cld
or
push
pop
stos
(bad)
leave
push
icebp
sub
arpl
push
dec
push
pop
adc
(bad)
mov
fidivr
jl
sub
sub
outs
cmc
jo
add
je
cmps
mov
push
add
sub
add
rcr
jnp
mov
or
hlt
push
in
inc
jl
ret
sub
xchg
mov
mov
movs
mov
cmp
mov
cli
ss
movs
xor
lods
stos
imul
xchg
ds
add
int
in
cdq
sar
call
cmp
int
and
popa
pop
retf
jp
xchg
dec
push
cmps
in
(bad)
stc
(bad)
lock
inc
sub
push
ficom
nop
xlat
mov
fdiv
xchg
adc
cmp
popa
mov
aam
test
adc
clc
sub
rcl
movs
jne
ds
lods
pop
ret
push
push
xchg
add
bound
ins
ins
mov
jne
cmps
xchg
ds
cmp
mov
imul
inc
out
mov
ret
mov
jnp
loopne
mov
imul
sub
jg
and
out
jl
mov
cmp
sub
add
or
in
mov
inc
pop
xchg
scas
mov
xchg
or
and
mov
das
jle
push
lods
not
inc
mov
jle
jbe
pop
mov
adc
shr
mov
cmp
loopne
jg
sub
dec
cli
loope
nop
or
or
sahf
and
jno
push
mov
sbb
ds
jp
lods
imul
lods
fdiv
adc
ret
aaa
adc
jecxz
mov
retf
mov
pop
pop
es
fiadd
push
repz
retf
sti
cmp
push
cmc
pop
dec
push
test
mov
or
xchg
lea
sub
pop
js
fidivr
jmp
arpl
aas
jl
rcl
xchg
jmp
mov
dec
loop
push
test
repz
inc
out
jle
xchg
cwde
pusha
es
push
inc
ds
and
mov
jmp
pop
inc
or
das
push
pop
dec
xor
stos
xor
push
neg
les
lahf
mov
fld
hlt
xor
rcl
sbb
add
retf
mov
inc
mov
sub
jp
sub
vpsubsw
retf
fisubr
movs
inc
cmps
adc
shr
std
nop
dec
mov
mov
loope
mov
push
sub
lds
idiv
xlat
pop
jge
mov
shl
sbb
xor
inc
fnstenv
adc
call
or
int
lods
inc
push
cmp
test
test
or
adc
mov
leave
adc
push
test
jg
lea
add
jae
sub
mov
in
and
mov
scas
jmp
pop
push
mov
xor
pop
int
add
stos
repnz
fdivr
or
xor
std
loope
popa
enter
in
enter
int3
xchg
xor
test
mov
repz
out
adc
push
ins
ret
xchg
mov
mov
mov
xor
mov
push
sbb
(bad)
push
pop
xchg
inc
iret
jne
mov
jns
inc
call
leave
iret
jg
in
or
test
test
jae
mov
dec
in
sti
enter
mov
xchg
ror
hlt
repnz
sbb
fidiv
data16
xchg
in
mov
bound
loope
mov
call
dec
out
cli
lock
xchg
push
inc
clc
pop
rol
adc
cmp
dec
cld
loopne
and
push
push
ror
mov
or
mov
loopne
mov
lds
dec
lods
adc
xor
mov
outs
lds
iret
leave
mov
(bad)
push
cmps
dec
sub
inc
and
mov
adc
xchg
mov
mov
mov
sub
nop
repz
xchg
push
push
cld
imul
lahf
stc
dec
cmp
cmp
jbe
push
lock
jb
xchg
add
inc
paddsb
rcr
xor
test
sbb
enter
dec
mov
call
lods
sti
and
cmp
jno
add
test
inc
outs
in
mov
enter
cmp
pop
in
cdq
sub
lds
cmp
fistp
and
out
ins
push
fs
lahf
mov
push
stos
popa
(bad)
mov
retf
jecxz
ds
mov
das
xor
sbb
sbb
dec
mov
pushf
in
xchg
dec
pop
jmp
push
(bad)
pushf
stos
xchg
pop
stos
jg
cmp
enter
cmp
mov
imul
aaa
sbb
ins
xor
es
stos
adc
jecxz
inc
rcr
mov
xchg
mov
push
test
out
sti
sbb
cdq
sub
cmp
xor
xor
(bad)
lea
loop
cmp
stos
mov
fdiv
lea
dec
jmp
jle
inc
push
test
js
jge
adc
idiv
jno
sahf
xor
mov
(bad)
lds
xchg
add
aad
jmp
xor
mov
inc
push
pop
loopne
or
data16
lahf
inc
add
int3
xor
mov
mov
push
and
fidivr
les
mul
jl
push
fimul
pop
lock
jmp
lods
cs
je
lea
pop
out
fadd
(bad)
fdivr
loopne
mov
fbld
adc
data16
xchg
push
mov
aaa
stc
ins
test
retf
or
out
lds
jmp
and
and
gs
mov
fcomip
lds
std
fwait
hlt
push
arpl
stos
mov
jmp
jo
and
cld
test
push
sahf
aam
movs
mov
push
hlt
add
int
dec
add
leave
les
xchg
push
stos
stos
cs
add
jnp
jg
push
add
add
rcr
stos
mov
push
mov
or
inc
adc
and
pop
mov
xchg
test
ret
add
xchg
push
pop
in
loopne
out
cmp
adc
or
ror
retf
mov
and
mov
xchg
lock
dec
lea
aam
and
pop
sbb
pop
cmp
movs
std
stos
mov
and
rol
mov
(bad)
sub
fnstsw
mov
idiv
pop
pop
inc
sar
leave
cld
push
sbb
push
mov
jmp
dec
dec
arpl
mov
mov
dec
shl
call
js
in
stos
cld
xchg
inc
callw
jns
(bad)
inc
std
std
or
push
out
push
cmp
fild
push
sahf
jmp
cmps
stos
ja
cmps
mov
dec
cli
fadd
(bad)
call
add
stc
aas
aam
jp
dec
dec
stos
addr16
outs
pop
and
xlat
xchg
in
jnp
movs
das
arpl
daa
jae
sub
and
test
imul
sahf
out
imul
test
pop
sub
and
lods
in
mov
add
cmp
es
lods
popf
xchg
mov
mov
sti
shr
jae
loop
frstor
stos
jle
sti
gs
xor
das
and
adc
call
ret
call
jns
(bad)
fidiv
jge
clc
lahf
mov
out
sbb
cmps
data16
into
test
fdivr
int3
sub
and
cmp
jnp
add
add
lods
mov
pop
cmp
jmp
and
into
push
inc
stos
pop
inc
and
fcmovne
stos
jo
cmp
cmp
pushf
(bad)
aad
ss
lea
mov
ja
push
in
sar
pusha
sbb
js
jle
xchg
sbb
sub
fs
lahf
fstp
and
(bad)
lea
mov
mov
jno
rcl
xchg
push
out
(bad)
in
imul
fisttp
or
bound
test
rcr
imul
repnz
pop
inc
in
cmps
pusha
cld
and
and
mov
rcr
aad
shl
out
mov
xchg
std
iret
(bad)
lods
(bad)
jp
ds
sahf
xchg
push
sar
xchg
pop
cmp
mov
dec
arpl
in
daa
xor
adc
mov
mov
ins
es
cmp
mov
push
xchg
mov
addr16
rcr
aad
and
jno
outs
pop
lods
lods
xor
add
xchg
push
push
out
cmp
popf
retf
lock
jae
xchg
adc
jns
loop
js
push
cmp
lods
fsubr
lea
call
add
xchg
cmp
dec
popf
sub
mov
sub
push
in
xor
fsubr
imul
sbb
fcom
sub
into
push
fs
inc
addr16
mov
ja
or
jmp
cmp
sub
in
adc
push
or
lods
repnz
mov
repnz
shr
xchg
inc
repnz
hlt
stc
push
pusha
sub
(bad)
push
lea
shl
jle
dec
mov
or
xchg
dec
or
fmul
clc
xor
xchg
not
jecxz
jle
fwait
xchg
not
or
dec
dec
push
dec
push
and
or
or
imul
or
cmp
jge
mov
lods
adc
aam
pop
push
ins
pop
jle
pop
push
jp
sbb
add
adc
adc
cmps
xchg
jl
dec
div
xor
sub
test
xor
cld
jge
scas
sub
fiadd
push
cmp
ret
(bad)
loopne
push
mov
cmp
nop
ja
or
mov
add
lock
jae
mov
cmps
mov
ja
es
cmp
sbb
loope
ins
ja
dec
dec
mov
pop
imul
push
daa
jnp
sub
mov
or
popf
(bad)
pop
xadd
pop
loopne
les
(bad)
and
stos
pop
xchg
or
int
and
jb
jl
push
ins
mov
mov
sbb
add
adc
jns
mov
xor
adc
push
pop
call
mov
mov
ins
in
inc
dec
push
popa
mov
dec
jmp
or
imul
rol
xchg
xchg
fnclex
shr
jbe
pop
aas
xchg
test
scas
sbb
push
mov
std
lods
xchg
mov
movs
popa
sti
int3
mov
mov
push
add
inc
add
repz
push
push
pop
aaa
ret
dec
mov
jo
dec
fsubr
movs
push
mov
dec
call
das
les
xor
mov
and
mov
push
pusha
(bad)
mov
loope
(bad)
push
lock
push
scas
(bad)
adc
jmp
jne
call
(bad)
cmp
inc
adc
push
sub
fdiv
push
les
jbe
shl
stos
jo
or
xlat
push
stos
cmp
(bad)
jae
cmp
jmp
stc
add
inc
xchg
lahf
push
pop
and
stc
sub
mov
xchg
sahf
into
dec
sbb
sub
daa
mov
xchg
jo
pop
jg
pop
rol
cmp
mov
dec
sbb
cdq
jns
sbb
cmps
pop
ds
add
add
neg
in
pop
pushf
push
pop
pop
inc
push
adc
hlt
mov
icebp
aaa
push
fucomp
or
adc
dec
push
nop
pop
lock
mov
pop
and
aad
in
jne
push
adc
inc
pusha
sti
mov
jae
add
cmp
daa
int
lock
pop
xchg
sub
frstor
push
mov
push
mov
cmp
dec
rol
ret
or
adc
dec
sub
das
jns
mov
psraw
aad
test
out
sub
mov
inc
add
int3
xor
mov
fisubr
fistp
mov
leave
in
pusha
mov
push
mov
dec
xchg
repz
mov
push
stos
mov
ja
int
pop
add
(bad)
dec
pop
mov
in
adc
jae
jle
cmc
adc
call
rol
cdq
mov
inc
xor
sar
ret
mov
inc
stc
jg
shl
or
xchg
fwait
movs
popf
xchg
repnz
mov
push
aam
cdq
pop
cmps
mov
pop
pop
cli
adc
repnz
or
imul
ror
lock
fstp
retf
bound
gs
mov
mov
mov
xor
test
int3
sub
gs
jmp
mov
dec
(bad)
xchg
pop
imul
stos
retf
fldcw
xor
xor
ds
xor
dec
in
lods
push
data16
jo
sub
sub
xchg
jno
dec
repz
mov
fisubr
and
or
push
push
arpl
daa
or
xor
push
push
or
pop
fild
nop
mov
cld
aad
add
clc
sbb
lock
dec
loop
push
mov
dec
sub
imul
out
xchg
fnstenv
push
(bad)
jns
mov
cmp
int
cmp
or
frstor
es
xor
movs
imul
jmp
add
dec
ins
loop
xlat
push
cmps
stos
or
xor
addr16
push
daa
aaa
cmp
sub
(bad)
out
adc
mov
fist
retw
int
xor
mov
mov
mov
cwde
test
adc
loop
and
jns
mov
cmp
hlt
mov
(bad)
mov
mov
inc
mov
pop
mov
jecxz
loope
push
sub
sar
add
mov
(bad)
and
and
and
aas
rcl
mov
test
push
pop
mov
aad
sub
adc
sub
dec
fs
dec
sahf
mov
aaa
cmp
xor
mov
mov
shl
ins
ins
mov
inc
rcr
bound
enter
js
mov
jge
shl
mov
sub
jl
mov
inc
bound
jns
je
mov
nop
mov
dec
and
jle
mov
dec
outs
in
jb
add
sbb
cmps
les
adc
xchg
inc
mov
push
jl
outs
ins
loope
xchg
add
(bad)
and
sbb
les
pop
pop
push
or
ins
sbb
je
xchg
mov
outs
pop
and
mov
repz
out
pop
sub
lock
cdq
ret
cdq
jne
mov
out
popa
jmp
mov
cs
shl
adc
or
sub
mov
imul
inc
cmp
retf
ja
cld
in
or
xor
push
or
adc
jmp
icebp
or
das
test
ja
cli
shl
pop
xor
cmp
push
outs
xor
mov
stos
mov
jo
ret
lea
neg
add
iret
leave
pop
xchg
iret
jmp
popa
pop
sub
rcr
mov
pop
mov
clc
adc
xor
push
inc
pop
shl
(bad)
movs
sub
sbb
hlt
mov
cmp
leave
jle
mov
std
xchg
dec
loope
lahf
xchg
(bad)
mov
out
cmp
inc
mov
push
adc
movs
cmps
cmp
push
(bad)
adc
sub
enter
push
pop
arpl
xor
and
inc
ds
sbb
adc
inc
sbb
add
fadd
add
pop
sbb
mov
cmp
mov
push
pop
xlat
fdiv
xchg
sti
adc
mov
das
(bad)
cmp
fist
loop
movs
in
leave
cmp
lea
pop
je
cdq
ss
scas
and
mov
sub
jg
lods
inc
sub
in
dec
dec
pop
mov
stos
retf
lock
neg
lea
sbb
xchg
inc
jecxz
retf
pop
push
inc
pop
pop
nop
cmp
inc
inc
sbb
and
and
sub
ret
aaa
xor
fld
dec
inc
lock
pop
mov
enter
add
jne
movs
jg
mov
dec
test
fisttp
pop
ret
jle
scas
or
iret
jbe
pop
jp
(bad)
arpl
(bad)
and
(bad)
out
sbb
mov
(bad)
or
adc
repnz
jbe
mov
sbb
sbb
mov
xchg
mov
dec
sahf
jge
test
dec
movs
cmp
xchg
cmps
push
push
fsub
fwait
iret
mov
cmp
ins
jb
ins
hlt
add
aad
sbb
or
add
pop
adc
fimul
loope
rcl
xchg
(bad)
je
mov
jg
cmps
push
shl
pop
mov
cmp
push
push
jo
stc
not
cmovns
and
jl
or
or
pop
call
xchg
sbb
(bad)
adc
dec
mov
add
sub
push
push
cwde
icebp
sbb
scas
mov
push
push
push
mov
imul
inc
and
jbe
stos
jmp
aad
test
adc
pop
mov
sub
out
ret
shr
add
mov
aaa
pop
jne
(bad)
or
inc
inc
adc
popf
or
cli
jle
mov
movs
pop
ins
xchg
ss
cmp
inc
rcl
and
jnp
aaa
jno
xchg
icebp
dec
pop
pop
jae
pop
jmp
mov
mov
pusha
in
fidivr
adc
loope
mov
scas
push
cmp
pop
aam
outs
mov
push
inc
mov
shl
aaa
pop
cmp
cmp
outs
xchg
test
imul
ss
pop
xchg
cmp
dec
imul
(bad)
mov
xor
cs
(bad)
fnstsw
shr
mov
sub
sub
sti
cmps
xchg
scas
pop
pop
xchg
sub
xchg
cmp
xor
and
fwait
hlt
jecxz
xchg
xor
sbb
loopne
or
lods
cli
pop
and
stc
xor
ins
cmp
xor
xchg
test
sbb
adc
add
idiv
jo
movs
ins
xor
out
lahf
stos
jg
inc
popf
cmp
sti
test
pusha
cld
jge
dec
mov
fsub
dec
leave
jnp
or
ret
cmp
jle
xchg
je
mov
mov
sahf
in
mov
adc
rcr
aas
mov
mov
fst
pop
ins
push
icebp
and
sub
test
test
push
cli
outs
(bad)
loop
cli
test
cmp
cmove
retf
stc
sub
fs
dec
in
mov
fs
jae
push
sar
shr
aas
pop
pop
adc
add
mov
mov
ins
mov
or
mov
inc
lods
shl
jp
sub
xchg
jmp
idiv
in
xor
mov
dec
dec
pusha
retf
outs
sub
adc
out
popa
movs
ficom
sbb
push
mov
dec
push
aaa
mov
ins
mov
popf
xor
xor
mov
out
mov
repnz
or
int3
(bad)
ss
add
cmc
jge
lock
ret
mov
mov
and
ror
dec
sbb
lock
frstor
mov
loope
sub
lods
fist
dec
dec
jl
mov
push
push
imul
pop
and
retf
fadd
test
push
and
pop
or
jno
or
(bad)
pop
cmp
in
aas
(bad)
cld
daa
pop
cmp
test
add
sbb
js
das
pop
jecxz
push
inc
hlt
loope
dec
push
jle
sub
mov
daa
gs
push
xor
arpl
mov
test
adc
scas
and
daa
xchg
aam
shl
mov
mov
fnstenv
add
mov
mov
aaa
cmp
pop
sbb
lahf
gs
bound
ret
push
call
and
mov
(bad)
loop
popf
adc
jb
sbb
stos
retf
mov
push
stc
aam
retf
movs
jns
add
in
jmp
push
sub
xchg
ins
sbb
iret
les
dec
hlt
ret
loope
push
nop
jle
mov
jl
fst
jne
cmps
mov
test
pop
jl
stos
dec
dec
into
add
mov
push
out
mov
mov
xor
in
popa
xchg
xchg
je
push
inc
xor
sub
repz
aam
dec
dec
icebp
push
into
adc
xchg
dec
mov
xchg
cmp
add
mov
movs
mov
mov
ret
jl
sar
dec
pusha
mov
test
sti
adc
iret
cmp
je
cmp
cmp
icebp
add
(bad)
test
dec
leave
pop
sbb
add
xor
std
sub
loopne
sbb
dec
sbb
cmps
loope
pop
cmp
mov
add
in
aad
add
dec
loop
xchg
inc
push
mov
daa
lahf
push
lahf
shr
adc
daa
mov
xor
adc
add
addr16
fstp
mov
xchg
out
ret
jmp
test
inc
aas
shl
imul
cld
and
je
xchg
jmp
mov
jg
dec
mov
cmps
and
dec
cmp
je
loop
cmp
inc
add
and
mov
nop
mov
into
mov
mov
add
xor
xor
stc
cld
fistp
mov
out
movs
jp
das
pop
in
sbb
ss
(bad)
and
lock
dec
mov
push
mov
inc
in
jp
fstp
inc
das
arpl
ret
repnz
out
inc
dec
into
repz
and
jmp
enter
(bad)
mov
pop
jmp
(bad)
outs
lods
xchg
cld
xchg
ret
movs
mov
add
or
mov
add
xor
cs
mov
scas
xor
or
retf
dec
(bad)
jne
cmp
hlt
cmp
and
inc
data16
mov
pop
jle
emms
xor
(bad)
mov
scas
cdq
cmp
and
or
xchg
jl
rol
and
outs
inc
call
hlt
pop
inc
or
repnz
cmps
je
arpl
int
(bad)
push
fwait
cmps
imul
out
xchg
ins
fld
jge
jge
mov
mov
and
push
or
sahf
mov
or
inc
pop
sbb
test
cdq
mov
and
data16
push
inc
xor
xor
imul
je
cmp
scas
jg
out
in
(bad)
xchg
push
xchg
cmps
cmc
stos
adc
adc
add
push
jle
jno
and
sbb
shl
repz
addr16
push
loop
xor
pop
or
inc
xchg
mov
ja
mov
mov
lds
mov
jecxz
ret
jo
xor
gs
test
imul
push
or
loop
(bad)
jns
lods
pop
mov
retf
(bad)
outs
shl
stc
ins
xor
repnz
push
shl
jmp
mov
pop
shr
add
mov
mov
xor
mov
lahf
lods
lahf
(bad)
popf
push
or
mov
fst
aas
jno
mov
add
das
das
(bad)
pop
lahf
push
(bad)
out
lock
mov
push
add
lock
aaa
dec
xchg
ins
enter
sbb
push
dec
(bad)
jl
inc
test
xchg
mov
cld
aad
inc
imul
cli
dec
adc
cwde
push
mov
dec
adc
je
inc
add
mov
push
mov
mov
sub
loop
pop
cmp
dec
(bad)
inc
mov
int
scas
xlat
je
adc
mov
or
mov
icebp
out
lea
sar
mov
jnp
sar
cmp
push
(bad)
xor
mov
mov
push
mov
shl
pop
stos
jbe
mov
nop
fucomi
cdq
dec
ins
es
mov
ja
sub
push
jne
out
arpl
int
xchg
xchg
jb
vpshufd
or
daa
xor
adc
jge
cld
call
retf
sbb
cdq
(bad)
cmp
fwait
add
ins
outs
push
and
xchg
push
movs
mov
lock
dec
xchg
and
cmc
adc
adc
sub
retf
jp
cld
cmp
jp
adc
xor
jmp
mov
mov
(bad)
pop
mov
test
dec
fucomip
push
pop
mov
mov
gs
rol
pop
into
into
adc
mov
outs
cs
sub
stc
fistp
out
movs
in
(bad)
jmp
enter
xor
inc
cmc
mov
fwait
mov
mov
mov
movs
push
jg
and
xor
add
add
add
push
into
sub
xchg
push
sar
pop
test
mov
in
dec
xor
jge
nop
cmp
sbb
out
fstp
cmc
cmps
(bad)
les
sahf
inc
adc
(bad)
into
add
sti
cmp
and
dec
scas
mov
cmps
adc
inc
xchg
das
mov
push
jae
mov
adc
aam
(bad)
and
and
inc
icebp
daa
mov
nop
mov
pop
loopne
xor
mov
aas
int
or
js
mov
lea
xor
or
je
test
pop
or
repz
push
popa
inc
sub
jbe
lahf
pushf
(bad)
jae
mov
jl
cli
and
into
sbb
pop
(bad)
mov
push
jnp
mov
loop
mov
mov
jl
mov
sub
adc
das
fwait
sub
imul
icebp
ror
out
enter
sbb
push
inc
arpl
outs
pop
jle
push
popa
xor
les
out
lods
fist
in
mov
imul
scas
push
mov
push
cli
inc
pop
inc
push
push
or
xlat
test
fcom
div
and
cmc
xchg
mov
pop
lea
ins
out
in
adc
out
shl
inc
or
dec
adc
aaa
mov
or
test
in
cmp
cmc
imul
dec
pop
and
push
lods
mov
stc
mov
dec
jge
or
sbb
je
push
dec
xchg
imul
outs
les
fldcw
clc
pop
adc
inc
cmp
xchg
int3
clc
push
xchg
stos
in
scas
loopne
and
jmp
dec
pop
or
jmp
pop
add
sbb
jo
rcl
movs
lods
and
mov
mov
jle
fs
or
sub
or
mov
mov
xchg
lds
xor
icebp
xchg
fs
push
mov
ret
jmp
scas
or
sti
(bad)
jo
test
(bad)
mov
inc
pop
shl
fs
dec
repz
jbe
xchg
adc
mov
(bad)
xchg
call
in
jns
mov
pusha
mov
cmp
inc
jne
mov
test
cdq
jns
and
in
loopne
lahf
mov
jns
into
scas
push
mov
xchg
scas
cmp
jp
mov
push
(bad)
mov
sub
cwde
mov
leave
jecxz
adc
into
clc
mov
mov
push
loopne
xchg
nop
mov
mov
or
mov
jo
mov
mov
adc
push
aaa
sbb
pop
adc
xchg
mov
ss
shl
test
add
mov
es
jmp
jmp
(bad)
pusha
in
aam
sbb
mov
repnz
pop
cmps
cmc
test
fcmovnu
push
and
imul
push
adc
mov
mov
jp
cmps
iret
popa
xchg
lods
mov
jge
and
sub
and
stos
stos
jae
xor
push
cmpps
xor
or
and
ins
cld
outs
leave
scas
dec
pop
cmp
xor
mov
push
pushw
jne
pusha
dec
cmp
adc
ficom
jnp
icebp
sbb
test
js
xor
xor
sbb
lods
jbe
mov
adc
(bad)
daa
ds
mov
dec
xchg
xor
shr
jl
push
pop
stos
sub
in
loopne
push
lds
and
in
pop
daa
repnz
mov
mov
mov
jmp
xchg
mov
and
push
ins
pusha
fucomi
sub
mov
mov
push
pop
jno
inc
call
test
cdq
not
jbe
jmp
jne
jb
xor
sub
sbb
dec
fnstenv
xchg
imul
pushf
sub
cld
mov
out
sub
jbe
push
xor
mov
int3
(bad)
jae
push
inc
cs
imul
int3
sbb
jmp
jg
mov
mov
repz
test
pop
rcl
fwait
(bad)
out
adc
inc
xor
scas
fdivrp
stc
mov
into
rol
popf
mov
dec
cmps
icebp
movs
scas
jbe
into
shl
rcr
pushf
xchg
inc
cmp
mov
bound
push
fs
clc
jg
or
lods
into
inc
mov
jecxz
cwde
(bad)
je
gs
sbb
inc
clc
inc
fistp
mov
sub
or
mov
add
pop
or
hlt
xchg
cmp
dec
or
gs
loope
xchg
jne
call
scas
enter
lods
xor
cmp
jae
dec
(bad)
enter
and
fwait
ja
sti
outs
repnz
jle
nop
repnz
sti
mov
in
xchg
mov
loopne
add
das
dec
out
sbb
stos
mov
pop
shl
outs
call
movs
pushf
jmp
dec
gs
test
and
mov
mov
(bad)
imul
ret
retf
xor
je
vmwrite
ds
xor
(bad)
cmps
retf
int
mov
fwait
jbe
imul
popa
ret
mov
pop
mov
pop
adc
lahf
mov
add
rcr
(bad)
popf
retf
xchg
loope
xchg
sbb
cmp
push
iret
loopne
jmp
cmp
fidivr
mov
adc
pop
cmp
pushf
dec
xor
in
cmc
in
dec
out
fadd
and
mov
or
ret
jo
cmp
xchg
dec
adc
and
(bad)
fadd
add
mov
jge
stos
(bad)
sbb
fs
lock
stos
or
and
adc
mov
xchg
ret
push
out
mov
or
jnp
xchg
mov
(bad)
sbb
mov
push
repnz
or
(bad)
or
mov
ret
mov
adc
(bad)
ror
data16
enter
sbb
jp
push
daa
jl
push
sub
pop
pop
test
inc
popf
adc
cmp
adc
sub
xchg
addr16
mov
push
imul
and
test
mov
aaa
sub
sti
jmp
test
(bad)
int
pop
mov
xor
fadd
fsubrp
xchg
pushf
cmp
push
mov
mov
xor
jmp
outs
aas
add
xlat
xchg
jae
pop
xlat
adc
mov
lods
add
xor
xchg
push
adc
adc
mov
and
dec
mov
shr
jno
adc
(bad)
iret
or
sar
std
into
xchg
(bad)
test
and
in
add
in
test
mov
inc
add
xchg
push
sub
out
scas
scas
sbb
jg
(bad)
pop
sahf
mov
xor
xchg
mov
adc
dec
gs
adc
sub
xor
cld
sbb
adc
data16
leave
xchg
arpl
aas
movs
sbb
out
dec
pop
ss
lods
jno
mov
add
cdq
in
push
js
push
ror
inc
push
mov
mov
movs
enter
push
gs
mov
cmc
mov
and
pop
dec
pop
div
add
out
adc
and
loop
fcmovnbe
(bad)
movs
into
retf
xchg
test
adc
pop
or
mov
cmp
ja
xor
push
cmps
fistp
fs
psraw
sub
sti
stos
lods
in
or
cmp
jno
push
aam
sub
fwait
shl
pop
xchg
jne
clc
bswap
xor
or
pop
jns
pop
push
xor
inc
cmps
or
mov
in
pop
add
mov
sub
test
arpl
fimul
sbb
out
test
movs
fsubr
jecxz
xor
movs
xchg
aad
and
(bad)
lea
out
and
out
or
xor
pop
inc
fisub
sbb
push
push
popa
(bad)
shr
imul
repz
jge
bound
mov
sub
mov
dec
xchg
jge
push
jecxz
icebp
cmc
add
iret
or
das
and
popf
cmc
dec
aam
stos
(bad)
test
jle
sbb
ror
dec
pop
mov
jns
not
push
dec
mov
jbe
pop
inc
mov
push
add
les
stc
mov
retf
daa
mov
and
stos
js
js
(bad)
(bad)
lea
cdq
dec
iret
mov
and
mov
push
xor
ja
jg
add
or
sub
mov
rol
mov
jb
cmp
fisub
pop
inc
cmps
mov
bound
(bad)
dec
push
cmp
fistp
ds
(bad)
jecxz
jnp
pop
call
popa
clc
jmp
imul
(bad)
jo
fadd
iret
int
not
or
imul
xchg
inc
test
and
mov
scas
adc
jae
inc
jbe
inc
mov
enter
(bad)
fbstp
xchg
xor
and
aad
ficom
aas
(bad)
cmp
add
lahf
jnp
repnz
jb
sbb
cwde
adc
(bad)
push
add
mov
ds
cwde
sbb
xchg
add
fild
nop
jle
aad
mov
xchg
and
adc
jbe
xchg
mov
mov
push
ss
bound
rcl
mov
ss
mov
adc
aad
cmp
mov
(bad)
cli
push
push
cmp
mov
push
gs
cwde
imul
push
xchg
xor
mul
into
les
or
xchg
pushf
adc
mov
loope
mov
shl
popa
mov
pop
or
in
pop
cmp
je
cwde
jbe
cmps
cmp
dec
inc
rcr
and
mov
adc
rcl
push
mov
cmps
sbb
fmul
ja
dec
or
inc
add
and
call
add
push
(bad)
in
sahf
out
and
sub
sahf
sbb
sub
lahf
outs
iret
xor
jl
movs
pop
mov
pop
or
sub
inc
jne
adc
jbe
dec
ds
nop
xor
fidivr
bound
les
xchg
in
push
mov
ja
(bad)
sub
mov
dec
(bad)
jae
repnz
in
shl
ins
and
(bad)
dec
inc
dec
pop
enter
pop
test
shl
mov
jmp
dec
push
pop
fstp
idiv
push
pop
adc
xchg
retf
mov
mov
sbb
ja
pop
shl
dec
std
sbb
fs
dec
scas
fistp
clc
rol
ss
rcr
les
in
jae
loop
adc
jns
adc
cdq
scas
mov
add
js
jb
xchg
jb
push
int
jb
outs
mov
(bad)
rol
add
out
sbb
pushf
push
repnz
rcr
aam
cmp
data16
push
hlt
fwait
shl
jecxz
jp
lods
cwde
sub
jae
jmp
add
and
loope
pop
retf
loop
mov
push
shl
inc
in
cmp
test
dec
loope
int
test
push
sub
out
mov
aas
sbb
dec
push
mov
cwde
nop
pop
mov
call
inc
and
jl
sub
cli
test
add
stos
mov
leave
jmp
mov
mov
xchg
enter
cmp
pop
pop
or
jno
adc
xchg
cmp
fucomp
mov
mov
popa
adc
inc
iret
push
scas
das
frstor
mov
rcl
jg
cmc
call
frstor
add
es
xchg
pop
pop
aam
sbb
sbb
mov
rcl
fmul
xchg
jo
(bad)
repz
(bad)
pop
mov
in
jp
mov
mov
and
and
cmp
into
data16
out
retf
je
jle
(bad)
movs
sub
ror
retf
nop
imul
dec
mov
and
mov
and
repz
shl
lods
cdq
in
dec
and
adc
ja
iret
mov
pop
add
cli
je
pop
push
lods
jecxz
pushf
out
pushf
rol
push
ds
ja
retf
add
sub
fcom
ja
inc
into
scas
outs
rcr
ficomp
std
inc
xor
les
pop
jmp
sar
mov
jecxz
and
aam
rol
jp
addr16
cdq
add
icebp
lock
fwait
mov
push
(bad)
int
xchg
sbb
loopne
js
(bad)
mov
(bad)
and
std
repnz
mov
mov
and
into
dec
dec
push
lea
mov
cmp
mov
out
mov
aas
adc
into
push
imul
les
cmps
popa
fs
cld
jg
cmps
jecxz
mov
arpl
jecxz
inc
mov
jo
ret
fisttp
or
cli
dec
aaa
stos
xchg
call
jo
cmp
and
jne
adc
int3
int
shl
mov
cmp
test
jl
pop
les
cmp
gs
cmp
out
arpl
push
les
push
cli
jno
cwde
es
jmp
and
adc
mov
xor
pop
imul
inc
mov
dec
enter
mov
mov
cmp
xchg
not
sub
into
enter
mov
std
out
mov
fwait
inc
lea
push
and
jp
scas
push
push
loope
jns
add
mov
mov
cmp
mov
cwde
add
and
bound
div
mov
lock
push
cmp
aaa
jl
(bad)
mov
rcr
or
adc
mov
test
addr16
lods
pop
and
mov
shl
xchg
(bad)
mov
add
icebp
add
ror
mov
push
xchg
mov
fcmovnu
movs
xor
into
cmps
mov
or
cdq
repz
push
xor
mov
xchg
add
mov
and
in
pop
in
clc
or
test
in
xchg
cmp
jmp
dec
popa
scas
je
movs
loope
or
dec
mov
sahf
ficomp
out
mov
sbb
sbb
mov
fsub
mov
(bad)
push
jne
test
push
sub
and
xchg
xchg
or
adc
js
in
mov
aas
ret
jnp
je
in
out
sbb
mov
movs
sub
jne
cwde
and
dec
cmp
inc
sbb
int
test
jmp
test
dec
imul
ins
test
ret
mov
cmp
jo
test
mov
fidivr
dec
mov
jne
dec
and
adc
cmps
dec
or
retf
inc
pushf
sub
inc
jge
js
(bad)
xchg
jbe
fcmovnbe
out
out
bound
fxtract
rcr
js
out
adc
adc
(bad)
adc
mov
gs
in
xlat
fstp
sub
push
mov
int3
gs
adc
cmp
int3
ror
pop
cmp
pop
lods
add
jl
sbb
adc
mov
lds
jns
out
mov
ja
or
out
into
mov
sbb
sbb
and
sub
imul
fwait
or
mov
cmp
out
lods
shl
push
push
xchg
retf
out
les
mov
scas
push
cmp
leave
pop
dec
xor
jmp
mov
mov
push
gs
stc
mov
pop
cmc
test
or
inc
cmp
jp
and
push
retf
lods
xchg
xchg
push
lods
sahf
mov
or
pop
cli
addr16
pusha
mov
nop
pop
ret
rcl
sub
movs
jnp
pause
mov
mov
dec
xor
push
sub
in
scas
test
and
mov
out
adc
neg
jbe
cwde
jecxz
scas
and
btr
dec
push
inc
ds
sbb
or
xchg
inc
pop
into
sbb
pop
cld
jbe
shl
mov
cld
stos
or
popf
shl
cli
(bad)
dec
sub
adc
je
and
nop
aam
loopne
xor
dec
adc
into
cmp
jno
ret
mov
xor
in
dec
and
jp
mov
or
push
xor
aam
mov
int
(bad)
icebp
test
xchg
add
or
inc
mov
int
jns
in
push
(bad)
fsubr
jno
and
pusha
stos
and
cmp
es
or
mov
jg
repnz
scas
and
pxor
lea
jmp
sbb
cmp
movs
(bad)
sar
adc
inc
or
imul
pop
div
gs
stos
mov
adc
imul
push
xchg
mov
pop
dec
ss
sbb
cmp
adc
fldcw
(bad)
xor
ins
fldcw
icebp
xchg
arpl
icebp
(bad)
push
icebp
stos
ret
mov
retf
pop
xchg
std
leave
pop
inc
scas
jle
sbb
xchg
or
test
xor
inc
sub
repz
je
adc
xor
aaa
fidivr
sub
push
pushf
es
dec
sub
sub
lea
jecxz
pop
and
sar
mov
retf
and
aaa
stos
mov
shl
inc
add
js
xor
sub
jne
cli
xchg
mov
scas
or
inc
rcr
or
cmps
push
js
cmp
add
and
mov
jnp
fs
hlt
adc
cmps
pop
xor
test
cmp
idiv
push
pop
mov
push
shr
cmp
mov
ret
sub
and
cwde
jno
add
dec
mov
push
sahf
aas
adc
icebp
scas
push
pop
dec
lock
(bad)
in
fimul
sub
xchg
repz
dec
mov
aas
inc
test
mov
and
fsubr
add
add
arpl
mov
ret
jbe
iret
dec
xchg
xor
jns
adc
jae
icebp
aaa
adc
xor
jne
gs
aaa
adc
in
loop
fisubr
add
add
lock
cmp
das
scas
cmps
xchg
add
mov
ins
or
xor
and
arpl
pop
in
cwde
jle
iret
mov
hlt
push
jno
cmp
sub
cli
cmp
in
mov
jmp
inc
sahf
adc
jl
cmp
add
lea
sub
add
pop
dec
mov
xor
repnz
dec
ja
and
xor
push
jns
aas
fstp
in
xchg
pop
cmp
and
idiv
hlt
popa
push
add
cmps
mov
pop
inc
mov
inc
jmp
ds
sbb
dec
test
mov
arpl
sub
cld
sbb
add
cmp
sub
push
pop
cli
sub
rcl
sahf
mov
(bad)
jae
pop
adc
cmc
div
fs
pusha
mov
adc
js
cmps
cmps
test
cmp
mov
add
pusha
cdq
std
pushf
or
leave
fwait
rcl
mov
adc
push
stc
cmps
repz
jb
fisubr
je
fiadd
daa
cmp
jle
mov
outs
(bad)
arpl
jbe
cmp
out
jge
fwait
adc
push
add
mov
pop
syscall
and
jns
fsubr
cwde
mov
xchg
shr
mov
imul
push
(bad)
outs
push
push
lds
in
push
sti
cmp
repnz
dec
xor
test
sahf
cmps
(bad)
cwde
push
test
jnp
sbb
mov
popf
fiadd
pop
inc
and
outs
les
jle
pusha
xor
adc
add
xchg
lahf
add
mov
pop
int3
jp
mov
push
mov
push
pop
(bad)
cmc
mov
adc
pushf
push
or
fwait
ins
mov
lock
mov
pop
pop
ror
int
fdivr
adc
stc
aad
fist
mov
mov
shl
cmp
arpl
dec
imul
in
loopne
hlt
sub
ds
inc
add
jnp
jg
cmp
cld
mov
cmp
mov
cmp
mov
ret
jge
push
scas
imul
in
xchg
jl
fistp
dec
xchg
jmp
(bad)
mov
xchg
sub
inc
cmp
test
add
aad
cmc
les
stos
stos
mov
stc
mov
loopne
sub
jecxz
out
mov
xchg
aaa
ftst
nop
xor
mov
mov
out
dec
sti
movs
fidiv
pop
fcomp
inc
cmp
in
ficom
add
sub
out
adc
movs
or
push
push
fdivrp
pop
lock
mov
sahf
xchg
cs
push
adc
pop
mov
inc
out
xor
out
or
iret
mov
inc
ss
bnd
xchg
mov
(bad)
push
into
sbb
sub
dec
fistp
out
jp
or
std
inc
cmps
xor
in
test
test
pop
lods
(bad)
test
mov
sbb
aaa
mov
arpl
mov
jg
add
push
xchg
movaps
test
xchg
(bad)
outs
fldcw
or
xchg
xor
stos
(bad)
ss
mov
dec
or
xor
(bad)
fnstsw
push
lock
cmp
pop
nop
outs
xchg
test
retf
pop
pop
mov
xchg
arpl
test
add
pop
cwde
mov
mov
into
inc
lahf
scas
mov
add
mov
adc
sub
popf
retf
push
dec
pop
mov
std
add
mov
xor
sub
mov
test
add
cwde
fld
in
xor
addr16
mov
xchg
retf
sti
sbb
push
dec
jbe
jbe
mov
lahf
cmps
pop
imul
mov
and
imul
xchg
mov
rol
mov
addr16
ja
jl
popa
movs
jo
or
jae
jg
cmp
std
dec
sahf
aaa
les
int3
push
jl
lds
out
int
lahf
daa
xor
xor
cmp
adc
jnp
cmp
into
xor
mov
xor
cmp
jmp
cs
inc
jne
cdq
mov
cwde
push
test
lock
xor
stos
or
es
(bad)
jbe
dec
xchg
and
lods
leave
mov
rcl
mov
sub
or
mov
aaa
pop
loop
cmp
rol
or
xchg
cmps
repz
xor
xor
fsub
and
mov
sub
mov
mov
fucomi
arpl
cmp
sbb
ror
and
cmp
cli
shl
ins
aas
inc
fimul
xchg
push
and
or
and
add
pop
jb
sbb
mov
fild
lock
mov
lds
std
loop
or
movs
sbb
inc
enter
ss
xchg
xor
jns
nop
jg
mov
fstp
xor
in
(bad)
mov
inc
sbb
int3
adc
outs
xchg
cdq
xchg
cs
cmp
mov
inc
inc
mov
inc
jecxz
or
mov
stos
or
push
data16
cmc
or
mov
mov
loop
adc
popf
in
jne
adc
cmovae
add
pop
add
sbb
outs
adc
jno
cmc
jecxz
jae
push
add
pop
add
push
push
adc
pusha
cli
stc
jecxz
pop
and
dec
fwait
jmp
data16
push
pop
dec
xchg
test
(bad)
lahf
cmp
or
test
bound
pop
dec
(bad)
test
push
(bad)
adc
pop
push
and
addr16
js
int3
jbe
mov
cmp
dec
sub
and
or
not
out
rol
(bad)
mov
in
cwde
out
cmp
dec
aam
mov
inc
pusha
adc
dec
mov
fdiv
add
jmp
mov
std
repz
lds
mov
add
add
sbb
hlt
cmp
sbb
div
adc
and
aas
fs
jae
jmp
push
jmp
ret
out
ja
pop
xor
std
mov
sbb
das
sub
push
xor
iret
dec
or
mov
mov
push
add
xor
das
ss
idiv
cmp
xchg
out
into
push
out
sub
and
xchg
mov
pop
xchg
or
sti
push
inc
dec
test
sbb
and
ror
push
mov
fs
cmp
xchg
cli
bound
or
jns
fdivr
retf
inc
push
push
mov
push
sub
or
pusha
popf
push
xchg
sbb
inc
cmc
pop
pop
out
mov
les
jne
jge
dec
ficom
xchg
push
mov
dec
outs
(bad)
fs
(bad)
icebp
pop
mov
(bad)
and
loop
fcom
aad
frstor
iret
mov
add
clc
xor
mov
pop
inc
push
jo
les
pop
sub
retf
xlat
mov
stc
(bad)
jns
xor
jmp
nop
push
(bad)
rol
fmul
cwde
push
add
adc
(bad)
and
scas
inc
jg
xor
jp
or
movs
pop
adc
or
cwde
jns
jmp
cmc
pusha
out
inc
mov
cmp
cmp
nop
aad
xor
movs
pop
jbe
call
xor
sub
in
rol
and
test
fimul
cwde
movs
jb
mov
cs
adc
rcr
out
shl
sbb
sbb
pop
aam
outs
hlt
enter
cmp
mov
es
inc
aaa
or
adc
retf
pop
test
or
fstp
dec
xchg
xchg
test
jecxz
cs
and
ret
das
jo
rol
dec
sub
mov
(bad)
xor
xchg
sub
and
mov
idiv
jle
out
xchg
cmp
mov
pushf
jno
lds
imul
mov
and
int3
jne
mov
aad
mov
nop
dec
enter
lahf
jl
sbb
inc
push
push
lods
sbb
lock
popf
das
or
add
push
sub
ins
mul
cli
or
or
and
mov
cmp
sub
inc
jmp
inc
add
add
inc
cwde
int
inc
inc
lods
cs
sub
fst
fld
js
(bad)
loopne
je
aaa
mov
adc
jno
pop
in
stos
(bad)
js
jo
inc
ja
leave
sub
add
jne
out
sub
lods
xor
in
mov
gs
fstp
mov
add
push
test
jmp
xor
(bad)
retf
jb
lea
jmp
jmp
add
or
and
pop
movs
mov
repz
arpl
dec
gs
adc
(bad)
jle
sbb
xor
outs
hlt
hlt
movs
inc
les
int
sbb
repnz
mov
rcr
out
xor
cmps
jl
addr16
je
adc
outs
(bad)
retf
mov
stos
shr
xor
fld
or
test
sub
dec
sbb
inc
imul
xor
std
into
pop
pushf
jo
dec
mov
into
fidiv
out
inc
mov
iret
lods
dec
mov
(bad)
push
sahf
pop
mov
jns
repz
sub
loop
cmp
inc
inc
inc
int
push
push
mov
or
pop
aad
fs
addr16
and
adc
sub
pop
pusha
cmc
push
lock
out
or
jle
sub
cdq
and
out
xlat
cwde
ja
xchg
inc
in
mov
retf
xor
lods
and
ds
call
lods
or
mov
loop
mov
mov
add
adc
pop
lahf
sbb
in
or
jne
push
iret
out
mov
or
pusha
jl
or
pop
push
push
add
push
xchg
add
in
jbe
out
inc
popa
pusha
fmul
push
rcl
scas
xor
push
(bad)
call
mov
dec
dec
inc
inc
scas
mov
sbb
dec
dec
mov
mov
jbe
aas
jmp
mov
cmp
mov
rol
xchg
dec
add
jmp
rcl
cli
adc
mov
mov
add
cmps
xchg
jbe
pop
mov
test
jmp
test
xor
and
sub
dec
inc
push
or
sub
aam
cmc
int3
shl
jge
in
mov
dec
push
mov
mov
mov
les
repnz
mov
rol
mov
setle
sbb
push
test
les
xchg
lds
jnp
lods
pop
sahf
mov
adc
mov
inc
lahf
shr
ret
mov
cmp
xchg
inc
in
sahf
stos
arpl
cld
sbb
out
mov
movs
adc
jne
cmp
jg
(bad)
cdq
bound
imul
pushf
stos
inc
jns
rcr
enter
or
scas
cmp
inc
popa
jp
dec
std
mov
jge
xchg
addr16
imul
test
push
jmp
mov
test
movs
retf
add
ss
add
aam
rcr
xor
xchg
inc
push
sbb
retf
dec
push
inc
push
daa
in
(bad)
xchg
dec
mov
jle
jp
retf
cwde
loop
mov
push
xor
(bad)
xor
bound
imul
imul
dec
repnz
shl
cdq
repz
mov
(bad)
lds
mov
jmp
xchg
rcr
push
inc
out
cmc
pop
into
lds
sub
sahf
push
xchg
in
xchg
jg
aaa
retf
pop
loope
pop
or
mov
jecxz
adc
and
lods
cmp
dec
inc
mov
cs
mov
loopne
mov
test
call
hlt
jbe
adc
xchg
cld
jns
loop
cmp
mov
nop
push
jge
pop
inc
lea
or
popf
jmp
mov
push
rcl
cmp
not
enter
add
popa
in
or
loop
jg
fisttp
push
or
out
and
or
sbb
jb
out
hlt
inc
xchg
hlt
or
fcomp
mov
mov
inc
dec
sub
sub
push
nop
adc
sbb
mov
ins
frstor
mov
dec
std
push
or
cdq
pop
out
mov
das
popa
inc
mov
stc
or
daa
pmaxsw
cmps
mov
sti
adc
(bad)
lds
mov
leave
popa
add
add
jg
add
das
enter
fnstcw
dec
shr
fcmovu
fxch
xchg
adc
jnp
add
jl
mov
retf
leave
push
mov
and
lea
push
stc
sbb
push
aam
mov
sbb
outs
retf
ins
jno
add
mov
ffree
(bad)
sub
mov
mov
or
int3
mov
adc
jge
or
cdq
mov
or
and
movs
sti
test
stc
arpl
fldenv
sti
dec
or
fstp
mov
es
sub
jb
xor
or
mov
les
fidivr
ja
sbb
xchg
(bad)
mov
clc
loopne
les
jmp
ins
lds
daa
popf
popf
cli
sub
cs
adc
pop
sub
push
and
cmp
xchg
push
popa
cdq
sti
fcom
sbb
add
movs
dec
add
out
sbb
leave
scas
bnd
mov
add
inc
inc
movs
fadd
sub
push
in
and
lahf
stos
and
pop
(bad)
xlat
stos
and
inc
jno
call
pmaddwd
pop
fwait
outs
repnz
gs
mov
or
in
jl
or
inc
xor
sub
xor
jae
and
aaa
pushf
inc
add
push
xchg
iret
xchg
ins
ja
test
inc
push
nop
jae
scas
or
cmp
retf
shl
jmp
or
jge
pop
xor
lock
aad
jmp
ja
ins
sbb
ror
push
or
aas
loop
cmps
dec
bnd
out
lods
mov
icebp
aam
jo
mov
or
ret
pop
xor
jns
sub
inc
or
mov
int
imul
lahf
(bad)
call
test
repnz
ror
mov
xchg
mul
jae
dec
add
or
push
jp
jmp
loopne
sub
cwde
sbb
test
xchg
jmp
inc
arpl
(bad)
es
icebp
mov
(bad)
jmp
vpmacsdqh
sub
mov
pushf
cld
xor
das
test
mov
mov
lock
imul
mov
or
pop
ss
aam
jno
ds
add
iret
push
mov
xchg
mov
aaa
mov
cmp
popf
cmp
jecxz
hlt
xchg
in
test
cmp
arpl
outs
fisttp
push
sahf
xchg
bound
inc
aam
sbb
xor
movs
xchg
cdq
mov
push
inc
push
push
mov
js
jbe
mov
inc
sbb
ss
jmp
mov
loopne
test
scas
add
jg
in
jnp
xor
pop
lds
mov
lds
xor
mov
push
(bad)
stc
aas
sub
pusha
(bad)
jns
pop
ror
sub
adc
clc
rol
xor
jmp
mov
popf
pop
push
or
ins
pop
push
sahf
adc
mov
or
shr
pop
push
and
xor
repz
cmp
push
inc
and
rcl
fsubr
pop
pop
push
ds
clc
push
daa
(bad)
mov
imul
cmp
sub
fidivr
mov
sti
mov
adc
sbb
xchg
das
ficom
push
sbb
loope
(bad)
inc
test
jne
(bad)
std
js
push
sub
push
mov
pop
sub
les
mov
ja
push
xchg
jg
xlat
mov
mov
jl
mov
xchg
jg
cwde
cmps
sbb
mov
pop
mov
jge
jl
nop
sub
jp
aad
push
call
mov
or
stc
aas
push
xchg
loop
sub
fadd
add
cld
inc
adc
mov
repnz
das
movs
sub
(bad)
xchg
shr
push
mov
out
xchg
sub
sub
push
jne
xchg
popa
sub
xchg
int3
add
jg
xlat
mov
leave
cmp
fiadd
sub
push
jecxz
int
scas
xor
dec
sub
aaa
out
or
call
xor
fiadd
dec
outs
mov
retf
ins
(bad)
mov
rcl
mov
push
stos
xchg
inc
xchg
mov
mov
mov
pop
sbb
in
add
lea
pushf
or
push
mov
jecxz
adc
ins
push
ja
fs
out
jg
les
in
push
dec
popf
push
scas
jae
push
or
pop
mov
mov
arpl
mov
push
jns
sbb
and
mov
xor
dec
mov
ins
add
adc
(bad)
aam
cwde
mov
pop
aam
ffreep
das
fiadd
push
lods
mov
dec
push
adc
outs
popf
mov
lahf
lods
jg
xor
and
push
push
xlat
xor
and
mov
idiv
cmp
sahf
ins
mov
mov
int
call
jbe
cs
jae
jg
stc
test
mov
cmc
pop
add
enter
pop
adc
js
mov
stc
shr
push
pop
cdq
leave
cmc
mov
push
push
ja
push
push
enter
in
loopne
mov
mov
cmps
jecxz
sbb
push
or
jae
das
cld
popa
sar
es
je
add
mov
push
inc
rcr
cmc
mov
sbb
sbb
sbb
xchg
fcom
inc
lods
jmp
lock
push
leave
dec
inc
xor
mov
mov
and
cdq
gs
jo
pop
dec
repnz
add
bnd
in
push
hlt
test
in
sti
cdq
jmp
or
rol
xor
xor
(bad)
das
leave
lds
push
xchg
ja
dec
lock
mov
or
sbb
jl
mov
fiadd
nop
dec
or
pushf
push
mov
rep
in
scas
mov
mov
mov
enter
adc
ins
sbb
mov
rol
and
add
xor
cs
in
(bad)
ja
gs
xchg
hlt
clc
inc
loopne
call
scas
std
cmp
aam
dec
xchg
xor
push
(bad)
and
sbb
(bad)
mov
icebp
xor
loope
imul
inc
or
jo
lods
xor
adc
push
push
loop
ins
fs
lahf
mov
in
sub
mov
aas
inc
test
mov
push
push
das
adc
sub
pop
xchg
pop
mov
mov
mov
inc
sahf
pop
and
(bad)
xchg
cmp
mov
lahf
or
loop
xor
sbb
mul
sub
cdq
jns
lds
sub
inc
cli
das
jb
mov
test
mov
fst
sub
aad
clc
adc
call
mov
inc
xor
or
in
jmp
jg
xor
rol
(bad)
arpl
pop
fcomp
adc
cmp
mov
stos
stc
adc
andnps
iret
mov
and
leave
mov
adc
mov
mov
mov
mov
xchg
rcr
adc
mov
sbb
lahf
xchg
scas
mov
cs
mov
push
je
cmp
mov
add
shr
jle
clc
enter
mov
loopne
push
mov
out
shl
nop
fsub
and
pusha
pop
cmp
in
jne
xchg
sbb
push
xor
in
leave
adc
cdq
push
or
es
movs
sub
mov
enter
sar
enter
push
test
sti
inc
jp
sbb
movs
inc
xor
jl
mov
and
xchg
xchg
aaa
mov
outs
into
stc
sub
jno
repz
or
pop
sub
and
daa
test
sub
stc
gs
popa
jns
sub
or
push
pop
mov
inc
or
repnz
mov
inc
std
mov
add
lds
call
mov
sub
aas
add
push
clc
mov
and
xor
les
test
cmp
inc
cmp
sub
enter
pushf
(bad)
mov
dec
mov
mov
daa
mov
xor
loopne
jns
fsub
push
dec
dec
repz
and
push
cs
cwde
push
sbb
or
cdq
mov
xchg
jne
inc
sub
inc
cmps
jmp
test
out
addr16
test
test
and
sahf
xor
jmp
jecxz
pop
sbb
out
pop
cmp
call
mov
por
sar
mov
xor
bound
lock
jo
retf
ret
push
in
out
outs
fistp
mov
sbb
cmp
xchg
sbb
mov
push
ins
int
call
lods
in
jge
test
adc
jb
pop
add
lods
fcom
nop
sub
sahf
dec
push
out
lds
shr
test
into
cli
push
cmp
inc
jae
pop
call
mov
(bad)
neg
movs
outs
in
stc
call
cli
pop
mov
shr
cmp
clc
in
mov
iret
sub
cld
std
pop
inc
mov
pop
aad
jb
sub
pop
mov
(bad)
jmp
std
dec
gs
push
jnp
test
movs
loopne
cmp
mov
popa
push
mov
and
adc
dec
jne
ins
daa
movs
jbe
mov
in
dec
sbb
xchg
fs
mov
xor
int3
push
add
mov
movs
(bad)
cs
push
into
aas
cmp
das
xchg
test
lods
push
pop
mov
lahf
aad
dec
jns
(bad)
xor
jae
loope
mov
(bad)
cli
dec
and
or
push
fimul
out
cmp
in
mov
fisttp
xchg
cmp
sub
jae
fstp
mov
mov
out
clc
ret
push
ins
or
xchg
or
gs
loop
push
push
in
jbe
pop
nop
inc
and
add
loope
fisttp
add
and
xchg
and
push
in
dec
loop
ins
cmp
mov
movs
sbb
mov
sti
lods
outs
(bad)
adc
lds
xchg
adc
into
je
adc
adc
lods
test
je
or
dec
dec
pop
xchg
push
test
cmp
mov
fistp
dec
mov
mov
or
or
or
sub
stc
loope
scas
fadd
out
or
sub
test
sub
push
test
stos
fmul
jmp
mov
ret
rol
(bad)
int3
push
xchg
(bad)
aad
sub
push
pop
jmp
gs
add
mov
aaa
and
jp
cs
xchg
cwde
jge
jo
jbe
push
and
cmp
(bad)
adc
retf
scas
in
out
and
mov
add
(bad)
or
mov
cmp
jecxz
pop
mov
(bad)
ja
mov
jg
and
fwait
adc
push
or
js
and
dec
push
imul
mov
jecxz
sbb
jbe
inc
movs
imul
daa
cmp
and
test
loope
jns
rol
push
push
cmp
call
fcomp
movs
test
dec
xchg
cmp
pop
sbb
mov
xchg
(bad)
ja
push
(bad)
in
stos
in
call
mov
xlat
push
loope
jp
pop
(bad)
les
add
cmp
jnp
dec
xor
push
outs
(bad)
es
(bad)
sub
mov
sub
out
jl
test
or
mov
push
push
ror
fimul
or
adc
mov
ror
jg
dec
cwde
sub
rol
pop
sub
mov
test
mov
or
xor
nop
int
imul
dec
call
outs
ret
ins
sub
inc
cs
xchg
jl
retf
jae
lock
test
mov
xlat
aad
(bad)
mov
call
scas
mov
iret
not
adc
stc
hlt
(bad)
dec
adc
jne
cmp
xor
xor
imul
mov
iret
fmul
mov
mov
into
push
lahf
pop
test
mov
cmp
ins
adc
sbb
adc
push
shl
sbb
shl
adc
and
xor
mov
lea
sub
frstor
add
add
mov
xor
dec
adc
aad
sbb
fcmovnu
dec
sub
sbb
push
ja
jo
mov
arpl
jbe
pop
sub
xor
stc
or
xchg
jp
cmp
bound
sbb
sub
inc
mov
jge
xor
jnp
mov
xchg
jg
leave
or
inc
leave
xchg
call
cwde
jmp
retf
mov
jbe
(bad)
or
add
cwde
(bad)
repz
in
jmp
mov
pop
fidiv
push
rol
mov
xor
or
mov
call
push
and
mov
add
add
jno
mov
test
mov
xchg
je
int
sbb
cmc
cli
mov
neg
inc
xchg
mov
jne
xlat
(bad)
pop
stos
dec
inc
dec
sub
push
popf
jle
fadd
and
fst
mov
xor
pusha
dec
in
cmps
cmp
lahf
pop
fldcw
mov
jns
call
enter
out
std
scas
xor
retf
push
jnp
mov
push
pusha
fidivr
jecxz
mov
fucomip
push
into
xchg
sbb
aas
rcl
mov
fcom
and
hlt
movs
outs
mov
mov
daa
mov
push
mov
pop
enter
push
aas
and
adc
call
rol
and
js
loope
and
push
sub
mov
cld
xlat
push
push
(bad)
sbb
stos
cmp
stc
mov
cs
jle
and
shr
dec
mov
cmp
adc
les
push
lds
push
sbb
(bad)
lods
aam
mov
sub
lea
mov
sub
into
aad
movs
lods
leave
sbb
aad
sbb
in
mov
lds
add
cmp
push
ins
inc
push
les
retf
xchg
ds
gs
and
jb
jae
mov
push
das
push
fild
mov
lods
or
retf
xchg
xchg
xchg
fbld
jge
pop
dec
add
cmp
push
enter
xchg
add
xor
mul
movs
push
push
jge
jmp
es
call
mov
cs
pop
inc
mov
dec
pop
adc
or
mov
test
loopne
cs
mov
inc
fiadd
aam
shl
sub
push
in
and
inc
cmps
outs
ins
jl
and
xor
mov
mov
add
jo
jge
dec
or
sbb
jmp
fnsetpm(287
xor
into
scas
jl
hlt
or
in
push
lock
fsin
inc
push
test
sub
aam
jle
jle
add
(bad)
xchg
sti
mov
add
inc
jae
pusha
mov
loop
daa
cmp
ret
jle
gs
fcomp
adc
ja
movhps
adc
cmp
cmp
add
dec
lods
popf
adc
or
stc
adc
int3
sbb
pop
mov
lahf
sar
dec
lock
adc
aaa
clc
sbb
pop
or
xor
repnz
and
adc
call
cvtps2pi
stc
cld
ret
push
test
jae
and
jg
sti
push
inc
cmp
xlat
xor
xor
jo
jle
dec
fwait
into
sub
std
cmp
mov
mov
jge
ret
mov
mov
mov
xlat
mov
call
ds
sbb
dec
or
xchg
in
leave
mov
cmp
sbb
cmp
in
xor
rcr
sbb
call
retf
dec
push
jo
jmp
das
fisttp
fisttp
icebp
idiv
lds
add
scas
xchg
mov
aas
add
pop
clc
mov
and
or
jl
sub
add
pop
dec
lds
sub
sbb
mov
ficom
dec
data16
adc
shl
aaa
cli
pop
jbe
push
inc
mov
cmp
jae
push
mov
std
xor
aas
fs
out
ins
xor
inc
ss
xor
pop
or
push
test
add
lods
aad
and
test
mov
pop
or
hlt
test
cld
sbb
fnstsw
xlat
add
cmp
mov
sub
mov
jp
(bad)
jmp
mov
pop
adc
xor
and
inc
add
fwait
ss
jle
cmp
xchg
push
pop
outs
int
and
push
movs
mov
lods
aaa
out
dec
jno
pop
mov
dec
int3
xchg
jmp
ss
gs
fs
stc
mov
fdivr
cmp
ins
add
jle
pop
mov
xchg
ins
pop
enter
push
pop
mov
push
push
mov
test
shl
mov
sub
xor
xor
outs
push
sar
arpl
ins
cmps
fistp
dec
sub
call
adc
(bad)
cmp
adc
aam
call
or
jmp
div
fwait
hlt
ss
aaa
ret
es
data16
xor
icebp
lea
dec
not
je
out
in
adc
cdq
repz
inc
test
xor
add
inc
inc
ds
dec
ret
add
lods
inc
and
fild
fs
pop
lds
add
cmp
pop
(bad)
push
or
call
ret
or
inc
movs
add
mov
pop
in
adc
je
shr
push
mov
or
lahf
cmp
repnz
push
fst
repnz
jns
mov
and
adc
scas
sbb
cs
and
inc
stos
dec
ret
ret
sub
popa
jo
retf
dec
cmps
sbb
pushf
dec
cwde
sbb
mov
out
in
lea
test
jle
cld
xchg
mov
mov
or
nop
jp
fmul
mov
push
and
call
pop
pop
mov
fmul
xor
das
pop
and
dec
adc
push
pop
loopne
add
aaa
out
in
pushf
dec
fisttp
stos
push
dec
fisubr
sub
cmp
adc
pop
ret
lods
adc
push
xchg
sbb
lahf
neg
push
adc
icebp
jl
sbb
push
mov
adc
js
and
push
add
out
lods
mov
scas
(bad)
xchg
mov
xchg
fnsave
lock
ds
out
jo
push
xchg
bound
mov
mov
rol
inc
cmps
inc
idiv
(bad)
sbb
cmp
in
into
hlt
pushf
stc
ja
push
ss
pop
mov
nop
pop
pop
bndstx
pop
add
add
mov
imul
std
repnz
scas
pop
and
or
iret
fwait
retf
pop
xor
xchg
scas
fnstsw
inc
mov
popa
inc
lahf
ss
jg
xchg
sub
mov
test
sub
inc
sbb
adc
lea
mov
xor
addr16
(bad)
test
clc
cld
mov
clc
sbb
and
xlat
push
mov
hlt
ja
aas
adc
cli
cdq
xchg
inc
pop
pop
ror
iret
cld
xor
imul
mov
(bad)
enter
mov
minps
shr
gs
movs
mov
sbb
(bad)
frstor
and
jge
std
jnp
je
jmp
out
dec
cmp
add
stos
std
sub
cmp
sbb
and
mov
out
sbb
scas
arpl
cmp
ficom
push
sar
jns
in
iret
jns
add
pop
mov
ss
retf
idiv
iret
dec
sbb
sahf
pop
inc
aam
aam
mov
sahf
movs
mov
jb
pop
cmp
das
mov
mov
and
and
inc
push
enter
call
mov
shl
in
js
mov
pusha
and
dec
sahf
mov
mov
ins
outs
push
and
mov
push
adc
xor
fiadd
push
mov
add
mov
test
or
xchg
jp
jmp
dec
dec
fisttp
pop
bound
cmp
(bad)
int3
add
(bad)
int3
mov
xchg
leave
int3
(bad)
repnz
stos
shl
inc
ror
xchg
sbb
(bad)
fwait
popf
shl
push
add
pushf
sub
lahf
xchg
xor
push
int3
fidivr
xchg
call
retf
sahf
cs
or
lock
sahf
mov
sahf
mov
(bad)
jl
fdivrp
sub
push
push
ret
mov
out
pop
nop
mov
shl
dec
inc
ins
js
mov
call
add
dec
jecxz
jecxz
sbb
mov
push
ins
repnz
loope
fcmovbe
sahf
fild
sar
pop
(bad)
mov
fs
push
add
cwde
es
adc
xchg
mov
ins
ret
rcr
add
and
dec
sub
(bad)
mov
mov
add
jns
aam
sbb
call
(bad)
out
sub
movs
dec
hlt
addr16
int3
jnp
mov
mov
cmp
lahf
sar
sub
pushf
aad
test
push
scas
adc
shl
(bad)
pop
(bad)
cmp
push
xor
push
jno
loop
ror
test
inc
xor
push
push
out
sar
or
lods
out
adc
push
dec
xchg
imul
inc
cmps
or
int
pushw
ficom
mov
jne
and
mov
retf
shr
cmps
out
out
lea
adc
leave
shl
jl
movs
inc
lea
sbb
jmp
sbb
(bad)
call
xchg
or
out
popf
lds
shr
adc
xchg
pop
neg
mov
or
inc
shl
mov
adc
pop
nop
popf
jmp
test
jo
into
les
enter
in
sub
fs
cmp
es
adc
jle
dec
pusha
call
(bad)
and
outs
and
fcmovnbe
adc
cli
inc
ror
(bad)
xor
pop
add
mov
cmp
scas
jo
inc
inc
test
inc
cmp
mov
ja
and
imul
stos
mov
cdq
sub
loop
inc
add
lods
out
and
mov
jnp
push
je
inc
jns
or
std
pop
pop
pop
push
jb
adc
mov
mov
cmp
std
arpl
shl
fcom
std
pusha
cmp
stos
adc
push
and
repnz
or
(bad)
adc
jb
mov
lods
retf
les
(bad)
sahf
pop
push
or
xor
sub
ds
sbb
int3
daa
or
(bad)
jns
pop
mov
xor
aaa
call
das
cmp
call
inc
ins
cmp
push
jo
push
mov
mov
inc
add
sbb
cmp
in
mov
test
inc
mov
or
adc
mov
stc
sub
adc
fld
inc
cmp
xchg
arpl
cwde
push
sub
movs
sbb
inc
es
mov
mov
cdq
or
dec
pop
pop
mov
fistp
mov
inc
cld
scas
xor
push
rcl
(bad)
pop
mov
push
shl
clc
les
cdq
push
les
cmp
mov
cmp
sbb
cmp
es
fiadd
jge
repz
out
int
xor
cmp
adc
shr
retf
xor
aas
mov
ja
(bad)
jmp
cwde
(bad)
mov
pop
push
in
jmp
push
popa
xor
mov
xor
fstp
fist
arpl
daa
push
jnp
mov
cmc
fdivr
sbb
and
fwait
cld
xchg
adc
les
mov
fcmovu
(bad)
mov
push
fldcw
adc
fcmovu
and
xchg
repz
dec
adc
test
sbb
sub
jmp
(bad)
lods
push
das
push
xor
sar
retf
mov
(bad)
arpl
push
jno
add
stos
leave
aad
pop
sbb
push
repnz
je
lea
push
jecxz
pop
call
jnp
mov
xchg
in
shl
push
fwait
loopne
xor
scas
push
mov
bnd
and
pop
mov
pop
ins
mov
leave
mov
ds
fidivr
or
les
mov
add
cmps
mov
in
mov
pop
daa
shl
and
or
jl
mov
and
stos
add
sbb
mov
inc
loope
in
repz
inc
outs
cmp
adc
sbb
push
out
scas
shl
mov
and
push
mov
adc
jns
inc
(bad)
jmp
mov
mov
inc
loop
mov
mov
cmp
aas
test
cmp
popf
fs
sub
enter
push
adc
push
fiadd
inc
dec
adc
imul
out
sbb
xor
stos
fild
fisub
push
cmps
mov
pop
jno
mov
cmps
(bad)
push
xchg
dec
outs
push
ficomp
pushf
jge
xor
rcl
out
xchg
mov
dec
and
xor
icebp
in
sub
cmps
addr16
jbe
lock
pop
xchg
adc
bound
push
jmp
repnz
adc
jo
sbb
xchg
jg
sar
pop
mov
(bad)
les
mov
ins
and
call
mov
loop
and
xchg
inc
gs
mov
add
loopne
data16
hlt
lahf
in
and
jge
push
jns
jle
cli
xchg
inc
leave
pop
jp
adc
mov
dec
lock
es
jl
out
div
pop
mov
sub
push
icebp
gs
adc
push
mov
sub
sbb
push
leave
icebp
add
test
ds
fidiv
hlt
adc
pop
test
or
or
daa
mov
(bad)
pop
and
sub
sub
icebp
pop
add
mov
iret
cli
mov
mov
dec
jge
mov
and
xor
fcomp
aas
fisubr
or
sar
std
jmp
rcl
mov
xor
cmp
inc
inc
les
push
and
mov
ds
jae
xchg
je
xor
pop
sbb
inc
xor
fdiv
repz
dec
mov
xor
test
std
push
loope
sti
dec
stos
sub
mov
and
nop
pop
xchg
into
xor
pusha
int
fs
and
jo
adc
rcr
lahf
and
in
pmullw
ror
test
and
push
push
mov
clc
pop
in
(bad)
int
push
pop
lahf
sub
dec
call
aad
loopne
clc
ins
push
pop
pop
fs
ret
push
aam
or
pop
int3
shr
push
scas
inc
adc
je
cmp
popf
cmps
aad
cmp
data16
sbb
fsubp
dec
mov
pop
pop
adc
aas
in
pushf
jb
sbb
dec
dec
and
aaa
(bad)
mov
nop
sub
mov
stc
in
movs
int
fs
sbb
(bad)
or
xchg
cmp
jnp
cmp
mov
fnstcw
add
int3
xor
mul
aas
(bad)
imul
shl
jmp
adc
jne
xor
ds
add
adc
mov
jno
mov
xchg
stc
rcl
cmps
in
cmps
adc
std
cmp
daa
clc
mov
push
mov
aas
adc
addr16
ror
mov
shl
shl
xor
cmp
and
xchg
push
adc
nop
int
cmp
pop
sub
in
mov
cmp
(bad)
push
sbb
aas
cdq
and
mov
push
dec
pop
fisub
push
cld
test
mov
adc
in
enter
mov
cdq
xchg
popf
frstor
lds
adc
add
sbb
xchg
xchg
sbb
pop
fmul
mov
and
sbb
loope
arpl
pop
test
fistp
xor
out
stos
and
xchg
mov
sbb
les
(bad)
mov
rcr
xchg
inc
jp
loop
mov
or
xchg
jns
and
popf
(bad)
push
(bad)
mov
mov
mov
pop
lods
cmp
xor
ja
sub
imul
cld
int
test
test
popf
push
sar
loopne
push
out
sbb
sti
enter
cmp
lock
in
adc
sub
sub
outs
dec
push
fdiv
adc
xlat
jmp
(bad)
imul
jp
sahf
jmp
dec
xor
mov
xor
pushfw
adc
jnp
fcmove
adc
(bad)
sub
dec
and
leave
(bad)
fcomp
hlt
les
js
pushf
xor
mov
sbb
scas
inc
sub
xchg
xchg
test
popa
dec
into
pop
and
shl
sub
(bad)
nop
retf
icebp
push
repnz
call
das
push
add
add
xadd
push
daa
retf
mov
jp
adc
data16
into
jp
hlt
or
les
js
adc
sub
daa
sub
sub
xchg
fmulp
jl
rcr
xchg
dec
pop
out
clc
lock
retf
dec
arpl
pusha
push
push
or
pop
or
xchg
xlat
dec
jg
fdiv
mov
mov
pop
cmp
ret
call
add
lock
pop
jne
jns
sbb
jl
call
mov
aas
add
addr16
sub
enter
popf
data16
ror
adc
dec
sbb
and
add
dec
pop
int3
mov
daa
hlt
add
daa
repz
push
dec
mov
adc
mov
int3
add
in
xchg
or
sar
jg
fidiv
push
dec
scas
inc
popf
dec
rol
jecxz
sub
test
loope
cmp
fimul
sub
aad
bnd
mov
out
mov
jle
cwde
push
pop
retf
add
sub
fidiv
mov
jno
sub
jge
adc
or
mov
adc
scas
mov
cmp
xchg
jo
adc
in
push
(bad)
test
mov
dec
sbb
or
mov
xor
je
jp
sub
and
popa
mov
es
xchg
(bad)
out
mov
popa
div
add
mov
popf
in
jnp
fild
sbb
leave
stos
gs
xor
je
fild
int
or
pop
jp
out
mov
mov
movs
nop
jmp
mov
xor
test
test
push
xchg
mov
test
leave
push
cdq
xchg
ret
mov
mov
and
mov
inc
cwde
and
pop
xchg
jo
jne
fs
sahf
mov
not
sahf
xlat
xor
mov
xlat
fwait
data16
pop
mov
dec
jmp
das
inc
mov
inc
push
pop
mov
push
stos
mov
adc
xchg
mov
(bad)
mov
jnp
stos
dec
addr16
mov
dec
imul
push
ins
stos
xchg
adc
dec
daa
xor
and
pop
pavgb
fdivr
test
jle
in
loopne
cli
fsubr
in
mov
nop
fmul
mov
in
js
add
repz
ja
mov
dec
mov
inc
and
les
pop
pop
addr16
std
and
cs
and
ret
test
icebp
(bad)
outs
xor
inc
cmps
cmp
xor
inc
pushf
adc
sub
dec
push
and
or
leave
xor
push
jmp
mov
fimul
leave
outs
and
pop
pop
cli
je
mov
repz
stos
dec
pop
ds
js
inc
push
jl
ret
fs
pop
sar
cwde
add
fld
add
lea
mov
adc
call
pushf
(bad)
rol
lods
sub
fwait
lock
es
ret
int
int3
gs
xor
jb
xchg
xor
in
test
lods
aam
inc
inc
mov
mov
and
push
lds
mov
jae
mov
pop
data16
push
retf
in
mov
and
outs
mov
cmp
xchg
mov
loopne
pop
rcl
hlt
mov
cmp
mov
add
dec
aad
test
aas
or
mov
fld
inc
in
(bad)
out
scas
xchg
push
call
sub
mov
sbb
mov
push
mov
loop
pushf
iret
cmp
lahf
mov
test
test
push
push
mov
call
push
dec
adc
cmps
xchg
push
xor
fcom
xchg
loope
std
nop
in
jnp
cmc
sbb
add
or
sub
adc
rcr
popa
mov
cmp
sbb
mov
aas
daa
sbb
pop
fisub
mov
or
imul
int3
xor
movs
add
push
fidiv
mov
call
push
and
dec
mov
retf
lock
lahf
out
or
jo
in
aam
dec
repz
test
outs
cmp
sub
fs
cdq
imul
mov
cmp
mov
push
scas
mov
mov
or
imul
fisttp
outs
jns
enter
rol
enter
adc
sbb
dec
int3
scas
or
ret
and
mov
dec
fstp
xor
adc
cmc
add
lock
and
fisttp
xchg
aaa
popa
lods
test
sahf
adc
in
jmp
sbb
mov
sub
pop
jno
xchg
mov
pop
scas
or
lock
mov
inc
or
inc
push
push
inc
or
ss
xor
jo
mov
jp
mov
bts
call
push
je
add
shl
fld
pop
lds
sar
jge
mov
sub
enter
call
hlt
mov
and
es
lahf
and
dec
mov
or
pushf
or
icebp
lds
push
xor
test
fs
cwde
dec
test
mov
(bad)
xchg
into
jnp
cli
mov
fcomp
arpl
aas
adc
fwait
and
out
or
in
shl
push
or
cmp
inc
xchg
adc
fiadd
inc
add
mov
xchg
bound
fs
push
test
imul
pop
push
aad
call
js
push
xor
mov
sbb
std
stos
aaa
adc
cwde
and
pop
lock
inc
xchg
out
and
xor
lods
add
mov
stc
test
xchg
mov
ins
call
xchg
gs
mov
icebp
mov
push
sbb
ins
and
sbb
pop
and
jmp
test
push
sub
ins
cmc
pop
jle
mov
push
fcmovbe
jo
xor
shr
sub
mov
adc
(bad)
ins
sub
inc
mov
dec
stc
(bad)
jl
jmp
aad
movups
cmp
fbstp
push
pop
jae
ror
outs
jb
test
add
movs
xchg
sub
jle
inc
sub
icebp
arpl
cdq
jb
into
push
fwait
jge
sub
out
cmp
icebp
ss
les
leave
add
test
ficomp
fs
out
int3
sub
data16
add
xor
jnp
xchg
jae
push
cmp
nop
xchg
push
loope
sbb
mov
add
ficom
not
dec
jne
gs
inc
xchg
inc
lea
push
fimul
mov
inc
ins
push
cmp
mov
push
shl
sbb
or
mov
sub
movs
sub
(bad)
cmp
mov
jge
xor
jp
retf
lea
cwde
or
inc
cmps
aad
sub
add
inc
mov
test
push
fs
xchg
into
clc
xchg
ss
mov
xor
sbb
xchg
cwde
jmp
iret
sbb
jns
adc
xor
pop
and
repz
enter
adc
cmp
pop
in
call
add
push
lods
fwait
push
sub
pop
xchg
mov
pop
outs
loope
xchg
in
jmp
xor
mov
mov
addr16
popa
inc
fisttp
sbb
pop
int
adc
jns
enter
imul
or
mov
sbb
mov
je
pop
pop
cmc
sub
pop
dec
mov
jmp
mov
or
or
jbe
jb
sar
shl
outs
ds
sub
fistp
mov
xchg
data16
imul
repz
addr16
dec
xor
xor
(bad)
jl
fwait
push
minps
or
mov
loope
shr
mov
fstp
mov
jge
lds
mov
dec
jb
ds
inc
stos
inc
ds
mov
jo
popf
push
stos
sbb
cmp
jbe
stc
movs
mov
inc
and
das
adc
fistp
adc
fidiv
mov
push
xchg
mov
or
add
push
out
sub
jmp
imul
in
jnp
mov
jl
pop
jo
call
push
mov
jo
pop
mov
not
call
cli
mov
lock
hlt
retf
hlt
sub
lahf
cmp
retf
jns
mov
enter
shl
jmp
adc
and
out
mov
rcr
jb
push
mov
push
arpl
add
mov
mov
inc
icebp
jle
fld
out
imul
call
push
inc
pop
dec
xor
xchg
sbb
loop
mov
dec
gs
sub
repz
(bad)
das
out
cmps
popf
push
(bad)
sti
sbb
in
mov
inc
cmp
scas
arpl
mov
xchg
mov
cmp
cs
or
xor
ficomp
pusha
sahf
jg
jmp
or
pop
and
sub
cmc
fisttp
(bad)
dec
aaa
jl
popf
push
mov
mov
and
fdiv
ds
fsub
call
in
pop
sub
iret
ja
gs
inc
dec
ss
or
push
add
lahf
inc
xchg
dec
sbb
por
outs
loop
loopne
xor
jo
neg
pop
cwde
call
pop
push
test
movs
xor
std
in
mov
inc
cmp
test
pusha
data16
xor
mov
jne
cld
xor
loope
or
(bad)
cmp
add
mov
fucomp
xchg
(bad)
pop
cs
mov
in
or
test
mov
jle
xor
lahf
jbe
retf
stos
loopne
jns
jecxz
xlat
lods
iret
dec
fwait
cmp
stos
mov
jnp
outs
daa
(bad)
pushf
mov
dec
pop
xchg
test
jecxz
sub
je
imul
mov
ret
fild
pop
ja
mov
mov
inc
addr16
inc
(bad)
aam
sub
mov
jle
pop
test
stc
int
push
dec
sbb
ret
das
idiv
scas
and
cmp
add
pop
out
repnz
xor
jmp
aam
xor
push
xchg
cs
xor
fsubr
(bad)
iret
data16
imul
ret
mov
push
pop
loopne
test
test
cmp
mov
adc
push
and
stos
or
mov
adc
leave
inc
js
adc
mov
mov
mov
(bad)
mov
push
iret
enter
scas
inc
data16
push
push
jmp
and
aas
jmp
iret
out
test
bound
ds
std
mov
dec
sbb
mov
mov
in
ss
clc
movs
inc
addr16
sub
mov
in
ja
inc
sub
test
sbb
test
add
sti
xchg
mul
jmp
aaa
pop
das
pop
int
imul
jo
test
jge
sbb
or
loope
jg
inc
clc
mov
fcos
out
cmps
xchg
mov
mov
popa
mov
ror
leave
inc
mov
fsubr
push
jl
scas
loop
(bad)
in
shl
std
and
data16
lea
cs
repz
mov
add
outs
shl
fwait
xchg
imul
cmc
in
sbb
bound
adc
xor
push
mov
imul
sbb
jl
mov
xor
mov
cs
or
sub
in
mov
out
call
sub
sub
push
pop
mov
fstp
add
pop
(bad)
ss
add
jb
movups
imul
dec
(bad)
pop
bound
out
or
fidiv
jecxz
in
inc
bound
dec
dec
cdq
xor
iret
xchg
adc
xchg
int3
xor
cld
jne
push
adc
and
push
call
lea
jnp
ret
stc
popa
mov
data16
sub
shl
sahf
cwde
inc
and
sbb
shl
xchg
mov
aam
sub
fsubrp
ftst
cwde
test
jae
leave
jmp
pusha
mov
scas
sbb
mov
out
inc
mov
ror
cmp
ss
dec
mov
or
cmp
jae
xor
fstp
mov
rcr
mov
hlt
(bad)
jge
dec
xchg
pop
inc
cwde
aaa
xchg
push
out
push
call
cmp
adc
mov
loop
cli
sbb
mov
std
scas
(bad)
(bad)
cmp
pop
sbb
xor
mov
scas
loope
outs
fsub
sub
aas
mov
leave
ins
xchg
xchg
cmps
xor
add
test
add
outs
mov
loope
jge
sbb
sbb
inc
retf
xchg
fistp
sbb
outs
outs
mov
lahf
mov
mov
cmps
sahf
mov
xchg
aas
add
xchg
xchg
dec
adc
add
rcr
(bad)
div
lods
(bad)
sub
call
mov
add
sub
adc
xor
cli
ja
mov
rcl
push
sbb
sbb
sbb
adc
in
mov
wrmsr
mov
loop
out
pop
mov
rol
pop
shr
add
fld
out
fistp
cmps
js
test
add
ficom
ds
dec
push
push
push
scas
mov
in
cwde
mov
push
(bad)
dec
mov
dec
shr
rol
mov
mov
test
xchg
cmp
loop
pop
mov
fldcw
lods
leave
fmul
cmp
iret
jns
inc
test
push
cmp
dec
mov
dec
pop
sbb
push
lahf
add
or
out
sbb
mov
retf
fidiv
dec
sbb
sub
add
or
fwait
movs
inc
jnp
stos
lahf
retf
mov
pop
and
jle
jo
cmp
imul
xor
cdq
mov
or
or
loop
scas
dec
or
and
push
add
pusha
push
sbb
cmps
ins
out
xchg
lock
pop
aam
arpl
adc
and
scas
fisttp
mov
loope
jnp
fcom
add
in
in
int3
push
imul
scas
add
fadd
je
addr16
push
out
mov
enter
mov
cld
loopne
cmp
test
jl
mov
add
mov
test
push
cmp
jno
jne
inc
movs
jae
sub
fwait
jge
push
mov
stos
push
add
test
call
mov
cmp
jg
cmp
pop
cmc
cmp
push
dec
lahf
iret
inc
cmp
daa
mov
cmp
shl
push
in
inc
mov
leave
dec
push
cwde
mov
cli
pop
jb
lds
mov
xchg
dec
mov
jb
adc
movs
inc
xchg
pop
sub
rol
add
stc
sub
xchg
mov
cmp
sbb
and
stos
jp
xchg
jmp
sbb
cdq
pop
adc
jo
mov
sbb
inc
fs
add
movs
push
push
shl
dec
scas
gs
and
mov
fild
add
sbb
ret
lods
ret
shr
xchg
cmp
jle
jmp
not
cmp
mov
add
call
shl
jg
out
bound
xchg
xor
retf
push
xchg
sbb
stc
je
sahf
fxch
stos
(bad)
dec
jge
out
idiv
int
adc
dec
mov
push
xchg
sub
retf
in
cmps
popf
inc
es
sbb
cs
adc
mov
mov
pusha
arpl
aam
inc
ds
sub
mov
pop
repz
jns
fwait
mov
add
mov
mov
js
and
jbe
pop
push
cmp
xchg
out
fldenv
lods
(bad)
mov
sbb
or
and
dec
retf
mov
out
xchg
mov
repz
lahf
ins
ret
add
fsub
jp
cmc
xchg
repz
test
ret
dec
lea
pusha
and
mov
mov
es
fsubr
adc
call
lock
pop
mov
pop
xlat
mov
xchg
adc
and
inc
adc
stos
fiadd
cmp
not
bound
cmp
hlt
int3
push
cmp
xor
cmps
arpl
in
js
pop
test
sbb
into
(bad)
clc
fsub
push
popf
pusha
retf
imul
(bad)
push
fdiv
pop
rcl
cli
popa
sbb
test
sub
aaa
push
lar
ret
inc
pusha
push
dec
ds
inc
and
dec
add
cld
or
xlat
shr
dec
mov
call
mov
dec
std
pop
cs
iret
pop
mov
jbe
clc
inc
mov
xchg
sbb
test
cld
enter
dec
call
pop
hlt
push
and
fstp
pop
or
sbb
xchg
mov
mov
adc
lahf
out
sbb
in
push
(bad)
cmps
xchg
popa
push
xchg
dec
push
jmp
adc
ret
jno
pop
scas
mov
mov
neg
pop
sbb
mov
ret
repz
cdq
or
xchg
adc
aaa
mov
or
xchg
jmp
scas
repz
hlt
adc
push
cmc
or
repz
cmp
outs
pop
in
sti
xchg
mov
push
inc
lods
jb
pop
and
repz
stos
loope
push
fwait
hlt
jne
jle
aam
mov
mov
(bad)
out
pop
or
adc
nop
int
dec
dec
xchg
adc
ins
iret
cmp
jbe
imul
test
xor
jg
call
retf
xor
xchg
idiv
ret
add
xchg
scas
imul
mov
or
out
push
aam
pop
int3
jns
test
stos
pushf
dec
pop
xchg
movs
xor
mov
jns
bswap
and
and
push
jmp
pop
(bad)
aas
mov
into
adc
cld
jb
xchg
jg
or
hlt
hlt
lock
and
sub
test
retf
push
and
mov
scas
pop
mov
sbb
ror
jp
inc
inc
cmp
hlt
call
scas
adc
stos
pop
dec
jb
aam
fbld
xchg
test
mov
int3
push
arpl
inc
pop
pop
dec
jl
iret
cmc
mov
popa
dec
adc
jb
mov
sar
xor
push
ret
stos
mov
fs
ror
xor
pop
add
out
stc
xor
repz
out
xor
xlat
mov
ins
mov
out
gs
outs
fisttp
test
xchg
(bad)
sbb
push
sbb
push
inc
or
and
lods
test
shr
inc
pop
test
loop
mov
mov
push
lahf
pop
cmc
ins
sti
fiadd
ds
mov
out
xchg
ret
lods
inc
or
das
xchg
inc
lahf
sbb
lods
inc
or
pop
jnp
jmp
mov
mov
mov
sub
cmc
test
stos
imul
test
adc
aas
movs
xor
mov
xchg
mov
or
loop
movs
daa
icebp
std
jl
(bad)
out
cmp
adc
xchg
out
arpl
fidiv
dec
into
cmps
(bad)
cmp
adc
dec
sbb
sub
pushf
cmp
out
icebp
inc
add
pushf
lahf
pop
cmp
xor
lods
aas
mov
xor
inc
inc
shl
xchg
mov
out
pop
test
scas
dec
retf
stc
jmp
xchg
repz
cmp
push
stos
mov
pop
or
jno
lods
mov
mov
pop
push
cli
inc
adc
stc
cdq
test
stos
inc
jne
popa
mov
mov
ins
dec
test
into
and
mov
cmp
addr16
into
push
movs
lea
cmp
fisub
loopne
xor
cmp
ret
frstor
fidiv
les
out
nop
and
or
xchg
xor
add
js
div
ds
mov
pusha
xchg
out
mov
add
xor
mov
sahf
dec
hlt
sub
push
mov
pop
int3
ret
pusha
jmp
dec
cmps
sub
hlt
test
cmp
mov
xchg
or
mov
(bad)
daa
xlat
push
call
ror
dec
dec
adc
xor
ret
popf
pop
sar
retf
arpl
icebp
jl
dec
adc
add
pop
ds
sahf
xor
out
pushf
sub
pop
movs
xchg
fwait
dec
ficomp
movs
loop
push
(bad)
stos
dec
or
push
bound
pop
cld
sbb
add
xlat
aam
icebp
test
in
sar
xchg
sub
outs
xchg
mov
jno
je
cmp
pop
jb
dec
push
push
test
pop
sub
aad
test
mov
imul
leave
xor
push
sub
fcom
push
jg
pop
stos
inc
cs
pop
std
aas
inc
cmp
ret
mov
dec
jne
das
cmp
sbb
outs
mov
jae
xlat
loop
out
fdivr
movs
ficom
ret
dec
mov
push
ins
inc
lods
ja
call
mov
jl
or
xchg
dec
cmp
push
mov
call
mov
aam
(bad)
mov
bound
jmp
into
mov
cmp
(bad)
jne
push
call
(bad)
sub
sub
jmp
shufps
sbb
add
popf
pusha
dec
inc
mov
aam
aas
in
mov
push
or
jmp
add
into
mov
or
pop
cmps
movs
sbb
sub
push
lods
cmp
inc
cmps
sbb
inc
test
xchg
(bad)
fsubr
mov
scas
xor
imul
xchg
inc
sub
jp
jle
push
lds
cmp
sub
(bad)
push
inc
xchg
xlat
in
sbb
jg
and
sbb
mov
add
adc
mov
jmp
out
sahf
mov
inc
mov
iret
sbb
dec
and
ins
or
mov
mov
mov
loop
jns
xor
or
shl
cmp
jmp
pop
inc
xlat
ja
jmp
clc
aam
jle
out
jecxz
mov
in
mov
and
xor
sub
mov
out
stc
iret
loope
or
pop
adc
or
test
cmps
xor
retf
cdq
inc
jl
cmp
pop
mov
push
adc
imul
lock
imul
push
jecxz
mov
xlat
test
inc
(bad)
push
iret
stos
mov
ins
fsub
rcl
jno
cmc
add
mov
mov
sbb
dec
sub
xchg
mov
lods
xor
sbb
adc
repz
cwde
pop
jg
add
xchg
inc
jle
mov
jmp
out
std
cmp
adc
xchg
jae
cld
dec
js
push
mov
mov
mov
retf
dec
dec
jge
cmp
sub
in
mov
jmp
lds
fisub
xchg
sub
fstp
mov
addr16
pop
xor
push
mov
inc
xor
pop
push
gs
xchg
fld
and
fistp
lahf
bsr
ror
test
push
in
fs
adc
test
mov
and
ja
(bad)
fwait
(bad)
xlat
cmp
(bad)
fnsave
iret
outs
lods
popf
inc
mov
imul
sub
test
and
xchg
mov
or
xor
lock
jne
aas
push
mov
inc
je
cmps
imul
fimul
shr
jle
popa
jno
inc
retf
fidiv
sti
(bad)
sub
xchg
push
ja
mov
retf
pop
lds
(bad)
into
pop
pop
inc
icebp
pop
or
mov
int
cwde
xor
dec
ss
cmp
mov
sbb
out
jecxz
adc
and
ficom
out
pop
cmps
push
adc
push
mov
adc
aam
aas
and
and
push
inc
shr
sub
push
fsubrp
aas
iret
neg
cwde
xor
xchg
inc
sub
pop
icebp
dec
adc
test
call
mov
outs
mov
mov
dec
add
aaa
cmp
or
cmc
or
test
cmp
adc
sub
mov
ds
xor
call
xor
mov
retf
sbb
test
dec
xchg
jno
mov
lahf
(bad)
cli
add
push
mov
imul
sbb
jne
ja
fwait
sub
adc
sbb
paddusb
xchg
fld
(bad)
sbb
retf
dec
jne
jo
(bad)
jo
icebp
aaa
test
push
shr
test
mov
pop
test
adc
dec
dec
aaa
icebp
sbb
into
cld
jmp
cmp
(bad)
jp
or
sbb
jp
loope
(bad)
jle
or
push
into
pusha
mov
push
push
xchg
jae
sbb
xchg
adc
dec
ficomp
movs
push
lea
imul
cdq
mov
jnp
xor
push
cli
mov
mov
ret
add
ds
adc
leave
mul
arpl
add
jo
mov
and
inc
cmps
push
scas
daa
ja
scas
add
nop
inc
inc
fmul
imul
es
xchg
xchg
clc
imul
imul
aas
ss
addr16
lods
pushf
mov
or
mov
sbb
pop
xor
dec
cmp
mov
ds
dec
mov
bound
jg
js
(bad)
or
(bad)
add
push
lods
fcomp
push
push
push
mov
push
cwde
shl
push
aam
jp
ins
test
add
push
pushf
dec
outs
test
repnz
call
push
shl
inc
aas
enter
pop
inc
fnstenv
(bad)
test
jns
or
retf
ss
sub
or
fwait
cmp
outs
add
push
inc
das
pop
pop
jnp
lds
xor
pop
fidivr
data16
test
dec
mov
xor
pop
add
mov
sar
push
fiadd
adc
or
xor
push
or
jge
push
mov
fidiv
dec
out
jbe
enter
lea
gs
add
jl
adc
(bad)
cmp
popf
test
mov
jbe
jle
fist
pop
or
add
scas
dec
mov
jecxz
mov
push
sub
push
add
lods
(bad)
(bad)
out
jne
hlt
jle
es
call
ret
inc
jbe
shl
xchg
jle
adc
dec
jo
mov
adc
std
pop
sahf
jno
jg
call
stos
repz
cld
test
cmp
iret
shl
mov
mov
xchg
outs
mov
pop
in
pop
mov
hlt
adc
ja
mov
ins
mov
inc
fcomp
inc
jmp
mov
dec
pop
pop
rcl
(bad)
test
sbb
mov
xchg
or
sub
js
pop
ins
test
aam
jb
mov
dec
into
nop
(bad)
and
pop
push
cli
jae
jb
push
(bad)
std
inc
mov
sub
std
jo
retf
retf
hlt
push
cli
sub
dec
inc
fwait
repnz
push
inc
dec
or
popf
or
pop
gs
fisttp
mov
cmp
or
arpl
sub
sahf
shl
sbb
dec
daa
cmps
pop
xor
dec
aas
loope
mov
test
mov
xor
cdq
in
enter
neg
jo
les
xchg
shr
cdq
sub
sub
gs
fwait
add
xchg
cmp
loop
test
call
cmps
xchg
and
push
les
sahf
lods
jge
push
xchg
sub
cmp
imul
inc
mov
loope
in
call
ds
fdiv
call
xchg
(bad)
jb
adc
in
ficom
pusha
stos
pop
test
xchg
(bad)
jp
retf
fwait
outs
jae
and
out
imul
inc
retf
sub
shl
call
jg
dec
sub
scas
sbb
ins
lock
and
int3
(bad)
jmp
sub
cmp
pop
push
int
jbe
clc
xor
adc
das
cwde
jbe
dec
outs
mov
mov
repnz
std
xor
rol
mov
sar
push
inc
mov
pop
(bad)
inc
cli
or
mov
in
daa
sub
in
xor
inc
inc
es
add
mov
mov
ds
push
dec
push
lds
test
inc
jg
sub
xchg
xchg
shr
mov
ret
out
xlat
and
dec
xchg
mov
sub
or
pop
bound
mov
add
fistp
push
cmp
call
dec
push
dec
xor
ins
fdivr
or
inc
dec
fsub
nop
push
enter
pop
jg
stc
(bad)
sub
and
aaa
retf
mov
aaa
jecxz
jge
in
cmp
inc
mov
mov
add
mov
popf
xor
les
gs
leave
and
sbb
mov
and
retf
xchg
shr
pop
dec
cmp
mov
fstp
dec
rcl
les
test
jnp
mov
push
mov
xchg
inc
std
out
dec
ins
fldenv
xchg
xlat
push
adc
and
add
repnz
cdq
or
pushf
outs
loope
popf
push
adc
mov
sub
in
inc
cmp
jmp
push
es
inc
faddp
vmread
and
lods
pslld
into
fisttp
xchg
push
xchg
and
push
int3
addr16
(bad)
sbb
pushf
fst
js
retf
mov
push
and
or
jbe
add
mov
mov
push
or
or
mov
push
cli
frstor
imul
ins
mov
out
test
stos
sub
or
mov
add
les
cld
test
aaa
(bad)
xchg
repz
lods
cmps
inc
xchg
fmul
leave
mov
push
jmp
rcl
aam
adc
jp
inc
pop
xchg
mov
mov
rol
rol
jae
jb
jl
aaa
in
jg
ins
scas
mov
inc
or
adc
xchg
sub
test
loop
xchg
sbb
icebp
out
xor
adc
movs
and
sar
ins
or
ja
add
dec
cld
out
shl
adc
cmp
movs
push
push
mov
mov
jbe
fmul
aas
mov
cmp
and
aad
jae
cmps
mov
les
fisubr
cmp
jecxz
call
jmp
mov
fimul
or
xchg
jo
and
es
std
adc
xchg
loopne
test
add
jmp
pop
or
jo
push
push
stos
push
mov
ficom
shl
iret
pusha
stos
push
inc
jecxz
adc
in
jle
push
loope
cmp
hlt
ins
das
pusha
cmp
lods
add
loope
mov
mov
mov
lods
mov
jne
or
in
rcr
xor
lods
out
sbb
repz
mov
loop
loop
lock
push
mov
gs
dec
push
outs
sub
call
cli
cvtpi2ps
cmps
mov
int
xchg
mov
jns
mov
repz
or
int3
stc
inc
mov
and
dec
mov
pop
mov
lahf
dec
inc
aas
rcl
sub
cmp
rol
push
jns
clc
rcl
popf
rep
(bad)
leave
mov
shr
cmp
adc
(bad)
cmp
xchg
push
jb
xor
jno
scas
scas
shl
push
sti
aaa
loope
mov
jb
test
call
jo
mov
sbb
les
scas
pfrsqrt
js
dec
inc
loopne
mov
inc
mov
leave
jmp
or
outs
out
ret
loope
sbb
test
pop
inc
cs
int
fiadd
inc
dec
push
in
jae
jmp
lds
mov
mov
std
aam
iret
imul
cs
add
mov
cli
lods
adc
adc
jle
inc
and
pop
inc
stos
fdiv
pop
or
mov
(bad)
cmp
mov
cs
bound
(bad)
mov
xor
mov
imul
pop
cdq
adc
jg
imul
inc
(bad)
test
loope
xor
mov
mov
out
test
pushf
ret
cmp
xchg
fisub
jb
shl
pop
fwait
pop
push
shl
cmp
xchg
test
push
fadd
add
dec
push
xchg
adc
jne
into
add
mov
jnp
(bad)
adc
stc
dec
cwde
(bad)
enter
out
xchg
stc
dec
xchg
adc
fcom
je
inc
popa
jae
lds
dec
add
scas
std
fsubr
jmp
cwde
mov
mov
test
xlat
adc
and
loopne
jmp
or
jle
and
fs
pop
jns
mov
pop
xchg
inc
(bad)
in
in
push
push
jecxz
je
xchg
(bad)
jmp
sbb
sbb
shr
inc
jmp
mov
ins
pusha
test
clc
call
add
arpl
mov
rol
out
lea
mov
lods
add
sbb
lea
mov
jnp
cmps
call
cli
ins
adc
sub
or
xlat
dec
(bad)
pop
(bad)
(bad)
add
xchg
pusha
or
dec
fistp
pop
imul
fs
dec
mov
in
sbb
or
and
int3
mov
pop
jae
movs
cmp
xor
xchg
xor
cmp
ret
xlat
movs
and
sbb
fldcw
scas
cli
data16
mov
addr16
clc
mov
xchg
loop
dec
sub
in
cmp
xchg
or
mov
mov
jmp
movs
nop
test
xchg
push
std
jg
cli
mov
gs
out
ret
and
and
jns
out
rol
and
mov
pop
lods
popf
pop
mov
push
add
fiadd
pop
sbb
cli
(bad)
aad
fsubp
cli
xor
(bad)
or
xlat
dec
jmp
fstp
xchg
lds
mov
push
pusha
inc
cld
and
es
push
les
xchg
jo
inc
gs
shl
stos
push
aas
ins
inc
jge
pop
or
jb
add
mov
addr16
icebp
cs
sub
sbb
xor
out
cmc
push
pop
xchg
enter
mov
push
movs
scas
mov
addr16
fwait
retf
mov
jmp
push
mov
and
mov
(bad)
mov
cdq
push
ss
push
test
pop
loopne
add
jbe
cld
div
mov
pop
cmc
(bad)
(bad)
push
cld
fs
adc
xor
rol
fcomp
cmps
dec
adc
les
(bad)
jecxz
jae
add
pop
ins
pop
nop
jo
cmp
or
adc
call
mov
imul
cmp
add
pusha
mov
je
sbb
rol
or
fdiv
aam
fcompp
fs
js
xor
xchg
push
rcr
(bad)
xchg
sub
cdq
movs
xor
mov
loopne
pop
inc
mov
or
add
jl
(bad)
scas
sbb
cmps
jno
inc
gs
les
stos
fadd
mov
jg
jmp
xor
jae
das
(bad)
mov
cs
pop
arpl
sub
sbb
(bad)
call
stos
mov
ins
repnz
jl
sbb
jns
ins
stos
loope
mov
xchg
sbb
bound
sub
add
iret
xchg
push
in
cdq
fsubr
or
les
adc
movs
pop
push
retf
pop
int3
(bad)
adc
div
mov
mov
out
repz
lods
jmp
xchg
(bad)
es
in
push
fst
lock
js
mov
nop
mov
dec
cmps
cvttps2pi
jo
(bad)
mov
sbb
xor
fwait
or
imul
jbe
mov
in
fistp
std
or
sbb
sbb
jle
rcl
and
(bad)
shl
inc
outs
jmp
scas
retf
adc
mov
xchg
push
scas
arpl
inc
cwde
js
or
movs
sti
sub
inc
dec
mov
jnp
lock
xchg
add
mov
mov
add
or
sbb
and
push
xor
xchg
or
jecxz
in
jle
pop
icebp
into
sub
pop
mov
or
in
push
pop
adc
cmps
hlt
retf
push
xor
cmp
ror
pushf
out
pop
fwait
(bad)
jecxz
sbb
ss
add
push
in
repz
push
and
test
dec
dec
push
ss
cmp
out
fiadd
sbb
jmp
sub
adc
(bad)
ss
(bad)
pop
ja
inc
arpl
mov
(bad)
cli
jmp
lods
sub
xchg
inc
adc
jmp
shr
in
(bad)
push
fldenv
test
aad
mov
in
mov
jae
dec
mov
push
pop
mov
mov
ror
in
push
sbb
sar
jo
inc
jbe
call
and
popa
mov
mov
mov
call
cmps
retf
cld
test
add
mov
sbb
push
cmp
sub
inc
inc
sub
mov
xor
sub
jne
(bad)
ja
add
jge
mov
sub
add
mov
test
mov
inc
cli
mov
sub
loop
pop
mov
push
enter
cmp
sub
mov
jne
mov
and
pop
(bad)
retf
or
mov
sahf
cmps
push
sub
mov
push
sub
mov
mov
dec
mov
stc
adc
cmps
bswap
aad
push
or
icebp
scas
pop
addr16
jns
in
movs
inc
or
into
or
fidivr
or
cmp
movs
pop
movs
add
mov
stos
mov
daa
aam
mov
jbe
mov
mov
jl
lods
ins
cmp
test
in
adc
inc
outs
jp
(bad)
into
(bad)
aam
inc
cmps
in
xchg
and
jmp
mov
add
sbb
mov
movs
shl
lds
mov
ret
rcl
cmps
or
xor
imul
jge
and
test
mov
mov
es
mov
and
test
pop
(bad)
iret
movs
pop
or
jae
pop
mov
fidivr
inc
scas
je
int3
cli
loopne
dec
sahf
inc
dec
xor
dec
mov
add
jecxz
arpl
jae
repz
add
jbe
repz
fs
jnp
xor
sbb
sub
jmp
push
add
in
je
mov
fnstcw
inc
jbe
jmp
cwde
xor
mov
daa
inc
nop
sbb
adc
pusha
sti
arpl
pushf
adc
dec
cmp
jns
cdq
push
pop
or
lds
test
mov
sub
popa
ds
(bad)
stc
xchg
imul
ss
adc
mov
inc
sbb
jbe
push
popa
pop
or
mov
jmp
pusha
adc
das
mov
imul
stos
into
cld
jne
sub
les
call
out
repz
js
push
sbb
pop
inc
cmp
mov
xchg
(bad)
stos
adc
jo
inc
ja
call
add
mov
fcmovnu
cwde
jge
popa
push
inc
mov
dec
clc
dec
cdq
pop
cmp
gs
adc
aam
mov
sub
inc
inc
push
jb
mov
push
xlat
push
xchg
jecxz
or
xor
push
and
ss
call
jno
call
cmp
out
mov
or
movs
xor
aas
dec
jecxz
and
xchg
js
xor
or
push
cs
mov
sub
mov
repz
adc
cmp
jae
xor
adc
(bad)
enter
out
adc
daa
call
sub
std
xchg
out
ins
pop
jmp
(bad)
adc
mov
mov
cmp
mov
ds
scas
jl
ficomp
stos
outs
inc
sub
mov
add
sbb
sbb
and
push
stos
cs
dec
jmp
sbb
aad
sbb
js
dec
into
inc
jp
pop
sbb
mov
loope
cmps
mov
pop
in
sub
pmaxub
out
jle
jne
sub
mov
adc
test
int
ins
jle
add
test
sahf
inc
hlt
in
xchg
scas
sti
adc
aaa
jp
mov
cld
mov
sub
dec
mov
xor
call
loop
ret
add
xor
lods
sti
fadd
cs
pusha
mul
cmp
adc
stc
add
sahf
adc
mov
add
in
push
bound
mov
popa
xchg
mov
imul
aad
rcl
fnstsw
retf
push
inc
inc
stos
es
cmp
and
jae
jl
out
jg
pushf
inc
(bad)
push
push
fstp
inc
fadd
mul
pusha
nop
arpl
push
and
jmp
js
mov
xor
sub
out
lods
cdq
pop
sbb
mov
sbb
xor
loop
fld
push
aaa
mov
loop
jo
adc
stc
ins
jecxz
push
xor
or
add
mov
adc
cmp
xchg
sub
(bad)
cmp
test
fisub
push
ins
stos
imul
push
mov
or
cli
mov
xor
xor
fwait
or
in
(bad)
test
imul
dec
sti
mov
and
mov
gs
or
add
jle
les
shr
mov
out
popa
fs
js
fdiv
sub
xchg
jnp
jo
push
cmps
out
jmp
call
mov
mov
cmps
xor
rol
retf
mov
cmp
ror
xor
mov
mov
mov
js
mov
or
cmc
in
cmp
fs
mov
push
test
cdq
or
and
jl
mov
retf
mov
in
(bad)
repz
cwde
in
pop
push
sbb
cmp
xor
iret
fsub
sub
out
cmp
mov
popa
ins
push
in
adc
hlt
or
loope
(bad)
sbb
push
rcr
movs
je
mov
call
xor
out
dec
scas
sbb
mov
or
mov
call
mov
stc
sub
sbb
pop
cld
xchg
fild
add
sbb
pop
mov
xchg
loopne
mov
jb
mov
push
jg
jno
sub
sbb
fld
cli
lahf
fwait
pop
daa
ins
or
ins
mov
and
sbb
rcl
jbe
outs
mov
inc
push
aam
and
and
retf
adc
mov
(bad)
xor
out
rol
hlt
pop
fld
pop
xor
mov
lds
mov
popa
jno
mov
and
xchg
mov
mov
jp
outs
retf
cmps
aas
inc
inc
in
(bad)
cmp
mov
repz
mov
lock
fs
test
dec
movs
in
sbb
jnp
outs
aam
xor
jb
cmps
stos
gs
in
sbb
test
add
sub
test
xor
add
sub
jo
shl
inc
nop
sub
ror
jp
or
push
stos
jbe
sub
loope
mov
and
lds
cld
cmp
pop
pop
fs
adc
repnz
mov
cmp
sub
pop
cld
(bad)
xchg
shl
inc
loopne
call
cwde
cdq
mov
lods
push
lods
jbe
mov
xlat
cmp
mov
test
inc
int
xchg
mov
(bad)
pop
leave
inc
and
adc
xchg
and
dec
mov
call
arpl
cwde
add
loopne
inc
jl
add
aas
repz
dec
test
loope
test
(bad)
adc
(bad)
dec
sbb
pop
fdiv
pop
pop
int3
ins
add
and
loope
not
pop
fisttp
cld
fild
jns
jecxz
retf
mov
jmp
jno
ret
dec
fs
pop
ret
add
(bad)
jmp
(bad)
test
or
add
adc
sub
xchg
mov
dec
and
call
jns
stos
les
pop
outs
dec
sub
mov
fnstenv
in
cld
xchg
ins
push
sbb
mul
(bad)
jb
jbe
push
push
fmul
cmp
push
sbb
mov
outs
push
and
mov
test
sbb
icebp
sub
pop
dec
cmc
sub
shr
add
mov
fnsave
adc
retf
idiv
or
or
add
xor
inc
sahf
mov
add
dec
jge
xor
and
mov
sub
xlat
movs
jmp
aad
xchg
push
movs
dec
xchg
sti
sahf
adc
or
call
mov
adc
push
cmps
xchg
xor
add
adc
inc
aas
mov
test
(bad)
mov
imul
aam
call
or
imul
cmps
pusha
mov
add
jp
dec
pop
sub
ins
sub
and
sub
and
push
and
cs
loope
or
scas
data16
mov
and
popa
or
popa
gs
inc
mov
fcos
ja
jmp
push
cmc
das
addr16
dec
pop
sub
popa
push
xchg
mulps
add
cli
gs
push
iret
mov
sub
jmp
call
adc
jmp
dec
jb
cwde
sbb
jp
and
(bad)
xor
fistp
adc
arpl
adc
xor
fadd
jne
mov
or
cmps
imul
mov
and
jle
popf
and
mov
imul
arpl
xlat
das
xchg
mov
cmc
daa
cwde
jle
mov
sub
cmp
mov
dec
gs
cmps
xchg
adc
loopne
sbb
bound
push
lock
les
repnz
inc
inc
jmp
inc
or
(bad)
add
xor
or
jecxz
xchg
ret
mov
push
dec
inc
mov
push
ins
pop
inc
out
push
sub
mov
dec
icebp
push
cmp
sub
sub
dec
mov
dec
add
ds
test
cmp
fisub
pop
mov
xchg
repz
(bad)
loop
pop
jns
fild
lahf
loope
fadd
fs
ins
xor
dec
(bad)
(bad)
fsubr
test
imul
imul
adc
xor
in
stos
dec
fdiv
sub
xor
inc
or
lock
mov
jns
fidiv
fstp
sbb
aaa
cmp
lods
or
out
push
lahf
pop
or
push
fs
retf
or
fild
xchg
mov
mov
imul
xor
pop
iret
pop
call
sti
icebp
pop
cmp
or
sbb
xchg
ins
lea
ja
mov
and
jge
fcmovnb
inc
push
xchg
dec
or
xchg
call
retf
and
jno
xchg
mov
cs
or
popa
jl
jns
mov
dec
cmp
ror
cwde
cmp
repz
jb
fisttp
lock
xor
sub
test
test
mov
rep
(bad)
lods
sub
mov
mov
mov
lods
lods
cs
or
pusha
jbe
inc
call
mov
leave
stos
jb
lahf
mov
jmp
and
out
mov
push
shl
dec
push
cld
push
das
mov
push
ja
and
push
test
mov
lods
add
retf
push
jnp
add
push
inc
sbb
lods
jle
xor
xchg
xchg
in
(bad)
mov
or
and
adc
nop
(bad)
or
ds
ins
inc
fsubrp
xor
push
fisub
or
retf
imul
mov
das
pushf
and
inc
mov
dec
mov
dec
retf
dec
into
mov
sbb
out
inc
lods
xlat
xchg
or
cld
out
cwde
enter
out
sub
mov
add
cmp
jecxz
out
mov
add
push
sub
fidivr
outs
mov
inc
xor
inc
mov
(bad)
cmp
ins
sub
xchg
push
call
or
push
fisttp
mov
mov
pop
sbb
aas
fs
clc
xor
into
daa
in
rcl
push
cmp
xchg
pop
ins
hlt
xchg
adc
dec
sbb
scas
cdq
idiv
loop
ins
call
ins
call
daa
scas
pavgb
pop
pop
in
jmp
leave
fwait
adc
sub
hlt
sub
ss
imul
mov
ret
in
add
xchg
das
jne
das
dec
mov
dec
jns
rcl
cmp
popf
xor
cmp
mov
adc
mov
sbb
mov
xor
xchg
pop
fwait
mov
inc
jge
jl
sub
ret
jge
add
or
jnp
stc
in
add
data16
fidivr
pop
cmp
test
push
test
and
aam
jmp
and
inc
loopne
inc
sbb
pop
cwde
ss
add
cmp
sub
dec
les
or
mov
cmp
sub
adc
xor
inc
pop
mov
xchg
xchg
loopne
xor
and
mov
cmp
out
in
jmp
mov
cmp
pop
cli
sbb
in
aam
mov
fmul
mov
pop
in
call
stc
jecxz
sub
inc
add
(bad)
ss
mov
mov
and
outs
inc
mov
cdq
fucomip
add
rcl
out
xchg
(bad)
xor
add
inc
mov
push
nop
xchg
lea
mov
and
sub
xchg
outs
aaa
(bad)
lock
mov
xor
clc
js
lea
push
sub
sbb
xor
dec
inc
mov
xor
jo
adc
dec
cli
daa
add
mov
xor
mov
bound
repz
dec
jmp
rcr
enter
lea
arpl
jmp
loopne
lods
add
mov
lods
hlt
push
sahf
sub
(bad)
iret
imul
mov
cmp
fild
jp
icebp
(bad)
sub
sub
jo
dec
mov
pusha
mov
(bad)
aas
inc
stc
daa
out
adc
leave
data16
push
xchg
xor
cwde
out
xchg
inc
daa
ins
push
ret
jbe
mov
jge
xchg
push
dec
xchg
push
jg
repnz
and
and
push
jbe
jne
enter
in
cmp
mov
cli
shr
jmp
jp
xor
stc
adc
(bad)
and
push
test
mov
pop
gs
mov
mov
jns
ds
call
mov
cmps
mov
xlat
cmps
cmp
inc
and
adc
mov
xchg
dec
xchg
xrelease
test
mov
imul
outs
or
(bad)
enter
retf
icebp
icebp
in
scas
out
movs
ss
cs
xor
cli
dec
cmp
xchg
test
cmps
adc
mov
adc
xor
xchg
sbb
cmp
fidivr
cdq
lea
cli
sahf
mov
lea
xchg
rcl
pop
sbb
jne
arpl
in
xchg
(bad)
data16
mov
add
outs
hlt
jmp
outs
inc
xchg
sub
cmp
jp
jae
mov
sub
and
stos
in
lds
and
icebp
mov
cmps
lods
and
push
ja
fsubr
imul
cmps
xchg
mov
lahf
mov
jno
inc
pop
dec
je
sub
mov
rcr
mov
adc
iret
jg
movs
inc
lahf
cmps
add
jmp
add
popf
rcr
mov
add
je
xor
aam
je
fistp
cli
and
lds
add
icebp
sti
or
push
popf
jle
mov
push
sbb
jle
lds
xor
dec
stc
push
mov
dec
leave
mul
mov
inc
(bad)
mov
js
jae
fwait
lea
mov
int
jl
sub
adc
loop
sbb
fstp
adc
pop
fwait
cmp
fcomp
pusha
jle
fs
inc
push
call
mov
subps
(bad)
mov
xchg
imul
xor
add
sahf
pop
mov
mov
into
jecxz
pop
jne
into
jne
add
push
ffreep
div
push
ins
push
mov
loope
jecxz
inc
jmp
test
ss
hlt
(bad)
repnz
mov
add
out
dec
mov
out
adc
jmp
popa
aas
xchg
xchg
fwait
loop
mov
ret
pop
int3
scas
hlt
aad
mov
jp
mov
fidiv
shl
in
inc
test
sub
xchg
(bad)
mov
or
cmp
mov
xor
int3
adc
adc
int3
sti
jmp
sbb
or
pusha
cld
mov
(bad)
push
imul
pop
daa
sub
mov
ins
push
scas
push
jge
inc
imul
or
sub
fmul
sbb
or
mov
iret
xchg
and
xchg
mov
xchg
mov
dec
ja
xchg
bound
sar
sti
popf
and
(bad)
rol
sub
xor
lds
ins
adc
dec
push
cld
mov
xchg
fcomip
(bad)
xor
outs
cdq
sub
js
adc
xchg
in
sub
cmp
sbb
pop
and
add
push
pop
sahf
ss
adc
addr16
jl
ficom
or
add
push
dec
retf
int3
ror
xchg
xor
fld
xor
mov
daa
pushf
adc
pop
jp
inc
cmp
mov
sbb
loopne
mov
in
adc
fst
arpl
cli
adc
out
pop
cwde
mov
fcmove
dec
jne
lahf
mov
inc
fs
dec
sbb
retf
or
rcl
and
loope
mov
cmp
lahf
jb
lea
test
xor
add
xor
(bad)
scas
in
and
data16
mov
out
jle
ds
ds
pusha
push
(bad)
cld
cmp
xchg
dec
nop
mov
mov
lea
xchg
or
scas
jno
ja
dec
popf
pop
mov
cmps
cwde
out
xor
adc
ds
adc
(bad)
fst
call
xor
inc
ror
mov
jmp
add
cmps
pop
pop
xor
mov
push
pop
loope
inc
call
sub
push
nop
hlt
iret
add
mov
and
sbb
inc
outs
cwde
(bad)
xlat
dec
inc
das
not
in
mov
fcomp
sahf
xchg
in
ins
dec
retf
cmps
cld
cli
adc
push
sbb
pop
mov
inc
add
fidiv
inc
sbb
mov
paddw
dec
push
xchg
push
inc
mov
cld
fwait
pop
jae
je
cmp
shl
pop
data16
cdq
push
repnz
popa
mov
pushf
mov
popf
cmc
enter
push
jp
sub
sbb
push
add
jnp
cmp
sbb
add
jg
call
pop
jb
mov
iret
int
add
jmp
jg
xchg
lock
add
ret
mov
xchg
add
dec
or
xchg
clc
push
mov
fdivr
movs
dec
push
xchg
(bad)
mov
cmp
sub
add
pushf
cmp
ja
jae
xor
clc
xchg
jae
sub
mov
sub
push
cmovae
popf
aam
sti
xor
and
int3
pop
in
cmps
or
scas
mov
fwait
lea
adc
pop
pushf
bound
rol
and
sar
cmps
leave
arpl
dec
inc
aaa
xchg
imul
or
mov
jne
ror
pop
dec
push
loop
push
cmc
pop
iret
inc
retf
inc
mov
ins
sbb
inc
div
push
push
xor
popa
cwde
inc
cmc
or
mov
rcr
adc
mov
fisubr
mov
add
inc
es
push
jb
cmps
les
shl
or
and
ins
and
cmp
mov
out
dec
rol
jb
push
ja
mov
fs
xor
in
cmp
retf
adc
imul
inc
out
fsubr
icebp
adc
pop
movs
mov
pop
push
pop
adc
adc
shr
jecxz
adc
adc
xchg
les
mov
and
mov
outs
shl
jmp
mov
dec
fld
movs
mov
jg
mov
retf
stc
fimul
outs
fisubr
mov
fs
ds
jp
shl
into
lahf
xchg
mov
inc
popa
outs
inc
cli
pop
or
mov
xchg
inc
adc
retf
ds
adc
add
(bad)
cmp
push
lds
jle
idiv
mov
repnz
jmp
cmp
dec
and
les
test
aam
xchg
data16
sar
push
fld
mov
push
aaa
push
inc
dec
inc
imul
cmovne
cwde
xor
mov
retf
rol
inc
add
pop
dec
pusha
sbb
(bad)
retf
test
cdq
sub
inc
(bad)
(bad)
out
fbld
inc
sub
sbb
add
jecxz
addr16
fsubrp
ja
sbb
mov
lock
add
xor
adc
xchg
imul
js
aas
adc
packuswb
lds
shl
or
pop
jl
xchg
out
inc
mov
daa
push
pop
(bad)
cmc
loop
and
jl
push
jmp
fs
mov
adc
out
scas
movs
icebp
mov
ret
push
in
lods
or
cmps
mov
aam
mov
int3
loopne
xor
aam
add
dec
dec
xor
or
sets
sahf
lods
and
pop
inc
imul
cmp
mov
loop
sub
ds
mov
inc
fsubr
les
add
fwait
push
imul
lods
aaa
mov
popa
dec
aaa
pop
xchg
cmp
mov
pop
neg
scas
xor
js
push
or
ret
xchg
mov
popa
xor
pop
jb
cld
jl
rcr
loop
dec
fisubr
call
mov
cmp
fdivr
inc
cmp
mov
jbe
mov
cmp
dec
imul
push
dec
pushf
and
dec
cmp
dec
stos
xchg
inc
and
sub
mov
fs
pop
bound
ja
mov
adc
enter
int3
pop
test
inc
fs
scas
dec
jle
jb
lahf
(bad)
fwait
(bad)
imul
sub
ret
add
movs
ror
das
aaa
jle
movs
stos
jno
mov
adc
cs
retf
ret
or
jmp
pushf
dec
pop
test
data16
shl
xor
add
cmp
mov
mov
retf
xlat
cmps
cmps
dec
in
cmp
mov
movs
(bad)
and
dec
scas
loope
mov
cli
adc
sbb
fdiv
xlat
std
aas
xor
ja
fxch
gs
sbb
ret
add
xchg
call
lods
pop
loopne
or
jo
fidiv
fdivr
aam
pop
ins
or
xchg
rol
ss
xchg
push
out
fwait
push
ficomp
sahf
xor
xchg
sub
sub
push
dec
dec
loope
mov
pop
test
fist
fisub
push
pushf
xchg
sbb
sbb
mov
cmp
into
imul
xor
fsubr
not
mov
jg
push
jbe
jecxz
sbb
sbb
xor
mov
ja
bound
push
push
ficomp
repnz
movs
repz
in
sbb
gs
push
ins
adc
inc
mov
xor
repz
xor
adc
int3
fwait
xchg
jg
neg
sbb
cli
xchg
lock
cwde
ret
mov
jmp
enter
(bad)
and
(bad)
ins
hlt
push
jb
loop
cmps
xor
xchg
sahf
push
jne
les
rol
jno
mov
fs
sbb
jb
gs
or
cli
retf
xor
push
xor
jns
cmp
xchg
jnp
mov
mov
out
jecxz
outs
xchg
xchg
cmp
(bad)
imul
fsubr
mov
and
repnz
push
and
cmp
dec
iret
rcl
push
push
in
sub
rcr
adc
mov
mov
push
jmp
inc
jge
fpatan
ja
test
mov
lods
mov
cld
cmp
jns
lods
lock
and
daa
pop
cmp
popa
sahf
ins
cmps
daa
popa
aas
out
mov
jmp
lock
sub
pop
fnstsw
loopne
adc
pop
mov
aad
pop
lods
inc
jns
and
push
mov
pop
hlt
jbe
xor
dec
inc
fisubr
jne
cmp
mov
mov
iret
sbb
mov
or
stos
jns
dec
test
mov
and
xchg
ficom
loope
cmp
cmp
js
mov
aam
ret
push
xchg
push
(bad)
out
sub
mov
sbb
popf
mov
fist
sbb
push
jne
jae
push
mov
pop
cdq
dec
sbb
ds
mov
sti
lahf
icebp
or
inc
inc
pop
fwait
mov
(bad)
adc
rol
xchg
fimul
outs
xchg
data16
shr
push
stc
rcl
mov
cmp
jmp
dec
sub
icebp
push
cmc
xchg
xchg
cmp
inc
pushf
xor
push
push
das
das
les
jmp
(bad)
stc
loope
loop
out
cs
sbb
push
or
add
mov
outs
adc
movs
pop
idiv
mov
iret
inc
mov
jae
shr
inc
pop
adc
into
clc
hlt
sub
dec
rcl
mov
add
mov
js
cmp
dec
mov
inc
clc
outs
xlat
lds
aaa
das
dec
shl
cli
mov
cmp
dec
out
pop
jmp
jecxz
cmps
mov
jo
ja
mov
mov
and
pusha
and
sbb
scas
or
shl
int
dec
or
(bad)
mov
sub
pop
arpl
movs
xchg
in
gs
or
dec
test
push
pop
test
popa
or
xchg
call
les
push
out
in
movs
shl
jae
xchg
das
push
push
push
in
mov
mov
mov
cmp
dec
pop
xchg
in
inc
ret
or
in
ds
or
loope
je
iret
in
in
clc
jmp
in
fs
in
cmp
out
adc
ret
jns
xor
fstp
out
push
les
mov
xchg
stos
mov
push
rol
aaa
and
addr16
iret
push
xchg
movs
lock
lock
and
xlat
ret
or
mov
jo
inc
push
adc
mov
or
rdmsr
fiadd
and
pushf
stc
test
push
cmp
push
mov
(bad)
in
jmp
jmp
push
in
stc
pop
add
xchg
sub
sub
icebp
ja
cmp
clc
out
loope
sti
or
sbb
and
lock
pop
jns
add
f2xm1
inc
inc
or
jle
sub
xlat
pop
and
sub
adc
int
lahf
sbb
mov
in
hlt
imul
pop
dec
dec
pop
push
adc
cmc
sub
jge
test
pop
mov
cmps
test
mov
mov
sub
pop
data16
xor
push
or
rol
pop
dec
add
mov
repnz
inc
push
push
push
cmps
jg
jne
mov
imul
adc
cwde
fcmovbe
ins
xor
fcomp
sub
(bad)
fstp
in
lahf
lock
popf
mov
lds
jnp
push
lds
cmc
ja
dec
or
sbb
mov
dec
dec
cmp
xchg
iret
fadd
add
ror
in
mov
out
jg
paddusb
mov
sbb
inc
dec
sbb
lock
xchg
test
jmp
mov
adc
cmp
clc
xchg
push
inc
push
push
push
(bad)
iret
outs
popa
ja
mov
fst
arpl
cmp
mov
stc
idiv
inc
sub
adc
shl
outs
xchg
shr
sub
cmp
push
ror
adc
and
push
lds
and
push
in
jns
ret
inc
push
icebp
push
inc
push
inc
push
mov
adc
push
scas
test
iret
mov
mov
dec
ins
or
xchg
and
daa
icebp
ss
cwde
xor
pop
xor
xor
adc
rcl
dec
data16
sub
in
fcomp
fdiv
push
cmp
popa
or
fdiv
fmulp
jmp
mov
mov
cwde
fst
not
imul
stos
jmp
jnp
or
add
jbe
and
clc
push
aad
sub
out
scas
mov
dec
les
lds
add
aam
or
jno
mov
dec
in
jle
cmp
mov
and
pop
cmp
fidivr
push
fwait
jecxz
ins
jle
rcr
repnz
xor
jge
cmc
pop
and
pop
push
and
fxam
cld
fisttp
popa
push
pop
mov
cs
mov
jl
and
inc
xchg
mov
das
adc
js
mov
mov
iret
mov
pop
adc
rol
mov
in
call
(bad)
sbb
inc
xchg
jg
push
mov
dec
push
jge
arpl
cmp
dec
icebp
fst
push
sub
rol
xor
jbe
pop
repz
lds
or
aad
lds
(bad)
sub
pop
fs
add
test
adc
xchg
mov
repz
cmp
or
mov
jmp
in
xchg
xor
adc
mov
push
int3
(bad)
out
fstp
mov
jl
cmps
jmp
sub
in
fdivr
push
mov
inc
xchg
outs
fcom
pop
push
sahf
(bad)
sub
mov
out
and
cwde
outs
test
jns
pushf
fcmove
adc
adc
xor
hlt
mov
push
sbb
xchg
cmp
add
inc
aad
cld
in
cmp
ja
and
in
sbb
retf
ss
loope
sahf
loopne
(bad)
adc
cmp
mov
mov
scas
cs
cmp
mov
loopne
cmp
lock
rep
or
dec
fcomp
call
lahf
mov
pusha
fwait
push
fnstenv
in
sub
retf
fmul
push
dec
enter
nop
sbb
(bad)
fistp
xor
rcl
out
mov
add
xchg
mov
and
mov
rcr
and
fwait
fs
sub
aad
xchg
scas
push
sub
jns
dec
mov
jle
ins
sub
mov
mov
popa
sub
or
mov
dec
call
out
mov
mov
out
mov
mov
adc
dec
fidivr
jo
inc
test
cmc
ins
mov
and
jo
dec
dec
inc
out
icebp
arpl
iret
movs
gs
ret
push
mov
hlt
cmp
xor
inc
adc
push
pop
clc
jmp
adc
hlt
jo
(bad)
js
mov
or
bound
enter
mov
jb
div
xchg
xor
fisubr
inc
not
aam
or
pushf
mov
ins
dec
sbb
jp
iret
scas
xacquire
mov
push
shl
fstp
inc
xchg
xor
cmp
mov
je
div
cmp
icebp
sbb
mov
lahf
push
js
pushf
jno
test
jg
lea
iret
jmp
sbb
stos
into
pop
adc
cmp
ins
sar
mov
ins
xchg
fwait
jno
lods
ficomp
or
cmc
xor
cmps
mov
or
scas
mov
adc
mov
(bad)
or
mov
xchg
(bad)
out
in
sbb
pop
add
mov
push
mov
in
mov
xor
and
cmp
jns
dec
mov
pop
pop
test
push
test
pop
mov
ror
out
imul
jmp
inc
sub
test
inc
jne
inc
jmp
jne
pop
out
jo
ret
shl
sub
mov
hlt
sbb
fbstp
or
inc
in
(bad)
dec
inc
repz
cmps
jl
outs
xchg
push
cmp
sbb
icebp
mov
mov
mov
mov
inc
dec
icebp
pop
daa
dec
imul
ins
(bad)
std
push
(bad)
add
stos
and
dec
xchg
dec
pop
loopne
cmp
xchg
mov
cmp
jb
pop
pushf
ret
sub
jae
mov
bound
int3
outs
loop
inc
das
scas
cmc
or
sar
(bad)
lds
dec
lods
mov
add
das
sbb
push
out
mov
xchg
loop
pop
loope
xor
sub
mov
mov
leave
stos
jmp
and
bound
mov
inc
mov
and
movs
adc
outs
dec
xlat
pop
lods
add
sub
mov
hlt
lds
out
outs
ss
mov
outs
ror
mov
or
mov
and
sti
(bad)
or
push
ja
xor
pop
retf
test
cmp
repnz
dec
rcr
mov
jae
test
icebp
jbe
ror
rcr
push
movs
mov
push
and
mov
fcom
push
adc
dec
(bad)
and
lahf
adc
std
imul
xor
add
iret
or
jnp
ins
dec
add
std
jae
rcl
rcl
xor
adc
popf
sar
inc
and
mov
mov
xchg
imul
or
jecxz
shr
cmp
lock
sti
fild
lahf
pop
pushf
(bad)
fimul
or
movs
cmp
inc
js
fneni(8087
stc
and
cmp
ret
jg
push
xchg
fs
into
std
fdivp
dec
les
dec
fidivr
int
inc
es
lods
cmps
pop
or
mov
(bad)
sahf
push
dec
add
and
dec
pop
fld
loope
jge
(bad)
nop
adc
ret
clc
movs
dec
das
sar
sub
cmp
dec
data16
scas
mov
lods
rcl
jnp
pushf
in
movs
lds
inc
fld
enter
enter
cmp
js
ins
and
or
test
add
mov
pop
sar
or
popa
outs
adc
fs
call
mov
outs
and
stos
mov
lds
pop
fisttp
pushf
hlt
jge
mov
in
rcr
pop
dec
lods
jns
jns
je
inc
pop
sbb
mov
push
mov
fnstcw
rol
add
fidivr
pop
mov
inc
xor
div
jns
pop
(bad)
inc
pop
sbb
ss
mov
cdq
xchg
pushf
pop
lds
shld
or
icebp
sbb
dec
mov
arpl
and
mov
fnsave
imul
aas
mov
rol
ins
test
cmpps
cld
mov
adc
aam
aas
imul
out
or
(bad)
ja
inc
das
jae
xchg
add
xchg
stos
(bad)
(bad)
ficomp
or
pop
push
repz
cld
adc
or
loopne
push
test
(bad)
xchg
imul
cmp
(bad)
sub
push
push
sub
and
stc
cmp
jno
mov
jg
daa
je
fmulp
(bad)
int
xchg
(bad)
and
add
push
loope
mov
sub
push
movs
popa
(bad)
or
shl
cmc
push
int3
xchg
or
movups
xor
mov
xor
push
and
pop
add
jp
dec
mov
mov
cmps
mov
jno
pop
popf
jecxz
aam
stos
or
mov
int
frstor
mov
add
xchg
shl
addr16
mov
push
loop
fs
xor
adc
or
jo
dec
dec
cmps
(bad)
aad
and
jle
push
jg
cmp
jno
dec
mov
and
sub
add
movs
pushf
(bad)
gs
stos
neg
or
aam
or
sbb
scas
ja
sbb
cs
(bad)
xor
loopne
jle
inc
xchg
jmp
in
add
jbe
xor
mov
hlt
or
mov
outs
mov
mov
pop
add
dec
enter
sbb
cmc
cmp
ret
ret
stc
cmp
not
mov
pop
mov
add
cmp
mov
mov
sub
stos
add
(bad)
pop
inc
loope
jl
sti
mov
retf
sbb
adc
nop
test
xchg
adc
ret
mov
jnp
aaa
rcr
call
out
sub
lock
adc
ins
jmp
sub
xchg
(bad)
and
data16
cmc
and
xchg
lock
push
(bad)
lds
popf
and
xchg
add
mov
sbb
sbb
std
pop
push
push
push
fcom
out
jo
bound
mov
jns
inc
gs
xchg
daa
aam
div
push
jge
pop
adc
pop
inc
stos
jg
push
pop
sub
not
fild
sbb
jge
les
mov
popa
sbb
cmc
jg
jae
jecxz
call
retf
mov
out
or
mov
int
or
jle
push
(bad)
mov
sbb
inc
stc
fild
mov
mov
out
mov
in
js
mov
outs
or
retf
std
stos
cmp
out
inc
push
xchg
pop
mov
and
repz
add
cmp
loop
cli
ss
test
arpl
and
outs
or
xor
scas
push
fst
ss
icebp
in
dec
cmp
sub
in
gs
popa
fisttp
repnz
mov
scas
retf
shr
pop
call
or
cmp
pop
scas
(bad)
arpl
push
or
adc
sti
gs
cmp
push
(bad)
ins
dec
bound
call
stos
pop
or
into
mov
and
pop
push
xor
pop
int3
pop
push
lea
scas
jp
xor
retfw
movs
pop
mov
sub
fwait
and
cmp
enter
mov
cmps
mov
or
ja
retf
mov
in
aam
push
ins
sub
fld
mov
call
jl
call
sbb
jmp
dec
rcr
jl
adc
lahf
js
addr16
dec
ret
gs
call
jne
gs
add
fdivr
push
call
ins
gs
out
mov
inc
and
popf
fiadd
cmp
ret
lea
push
scas
daa
(bad)
lock
sbb
icebp
cwde
hlt
dec
mov
popa
inc
test
mov
sbb
adc
xor
icebp
repz
xor
xor
jbe
rcl
push
mov
pop
cmc
leave
mov
mov
in
add
(bad)
mov
stc
mov
retf
inc
xor
lods
jno
xchg
jmp
push
test
ret
inc
es
jo
cmp
test
rcr
dec
mov
call
fcmove
mov
ficomp
stos
inc
add
inc
scas
xor
xchg
rcl
push
retf
adc
int3
push
xor
fstp
fwait
dec
loope
cli
popf
xchg
sub
sub
ret
aas
and
pop
cmp
xchg
pop
ds
mov
or
movs
popf
ss
fnstcw
out
add
sbb
adc
fsub
xchg
inc
jo
pop
mov
mov
mov
sub
pop
iret
push
retf
mov
push
pop
sbb
jp
in
pop
mov
pop
and
popf
xchg
dec
lahf
icebp
pushf
mov
mov
stos
xchg
rcr
loop
out
dec
rol
pop
cmp
or
js
sbb
push
cmp
popa
inc
not
xor
pop
xor
ja
cwde
mov
popa
in
call
aaa
fwait
adc
pop
push
lods
mov
dec
mov
aad
pop
mov
mov
dec
dec
iret
js
inc
xor
(bad)
fs
push
lds
add
gs
idiv
in
fmul
in
or
imul
dec
imul
jno
dec
push
inc
inc
call
mov
fdiv
push
rcl
mul
inc
mov
sub
sbb
fwait
adc
aas
in
push
sbb
sahf
sbb
jp
inc
and
push
and
out
enter
pusha
repnz
call
pop
out
xor
push
push
aam
sbb
add
hlt
adc
xor
add
test
call
cmp
cmp
push
outs
sub
cld
mov
out
xchg
dec
xor
push
mov
hlt
push
lods
fs
cmp
dec
cmovb
push
inc
mov
ja
lea
imul
sbb
je
stos
das
jg
xor
or
dec
adc
int
jl
jnp
in
or
inc
ror
mov
aas
inc
or
add
imul
popf
push
inc
cli
outs
xlat
shl
jae
fs
out
or
loop
das
mov
test
and
mov
cld
mov
aas
mov
sbb
xor
pop
cmps
cli
mov
sbb
clc
scas
jg
mov
stc
cmps
aam
mov
adc
ja
jl
jle
or
jbe
sahf
pusha
out
movs
loope
or
(bad)
sahf
adc
push
jb
or
lock
pop
in
fiadd
cmps
xor
or
in
adc
rep
ret
jb
cld
inc
mov
inc
xor
jae
xchg
outs
ret
in
(bad)
iret
push
mov
iret
cdq
inc
mov
and
xchg
fist
mov
mov
fstp
ret
cs
add
sbb
push
and
add
add
jge
jb
ror
sub
pusha
lahf
int3
or
jne
pop
mov
or
call
adc
adc
in
pushf
push
or
jle
mov
neg
cmps
imul
xor
imul
enter
pop
mov
sbb
push
aam
mov
(bad)
sar
and
cmp
mov
test
push
add
shl
add
bound
mov
xchg
mov
loope
mov
leave
mov
and
sbb
ins
and
jns
add
inc
push
mov
cdq
mov
adc
movs
push
pushf
xchg
in
adc
inc
ds
xor
pop
mov
ins
pop
jmp
push
inc
push
icebp
mov
retf
into
arpl
cmp
xor
jb
push
data16
in
(bad)
sbb
stc
in
mov
inc
shl
fwait
(bad)
in
sub
pusha
adc
or
inc
repnz
adc
test
pop
fwait
mov
shl
bnd
ror
iret
addr16
sbb
in
aaa
dec
test
lahf
pop
loop
repz
adc
mov
xchg
sbb
sub
pop
xor
pop
bound
lods
fnstcw
jnp
movs
js
or
stos
lods
sub
loope
(bad)
rcl
add
ins
arpl
out
aas
or
mov
cdq
cmp
mov
dec
aas
lods
push
scas
adc
pop
jmp
adc
(bad)
in
arpl
iret
mov
or
lahf
cwde
jnp
rcl
push
sbb
lock
cmps
pop
popa
in
sbb
jno
arpl
sbb
test
ficomp
mov
hlt
mov
sbb
arpl
mov
xchg
pop
call
adc
ins
xchg
(bad)
fcmovnb
leave
movs
or
enter
pop
mov
push
xor
ja
fdivr
xchg
call
jmp
jno
data16
xor
ror
push
imul
inc
(bad)
int3
add
cmp
push
sti
addr16
(bad)
push
scas
sbb
imul
test
ds
adc
(bad)
lods
inc
test
aaa
sbb
fldenv
jns
push
jp
cmps
mov
es
int3
xchg
fidiv
xlat
leave
push
sbb
add
inc
xchg
push
dec
data16
mov
mov
mov
pop
rol
push
inc
outs
mov
jl
call
in
pop
cld
xor
aad
popa
pop
mov
(bad)
mov
icebp
jmp
pop
push
fisub
dec
lea
js
jl
mov
dec
call
xor
outs
sahf
rcl
mov
lds
sahf
or
fsubr
(bad)
mov
icebp
jp
xor
xor
cdq
and
lds
lds
bound
shl
mov
adc
pop
movs
jg
adc
dec
mov
movs
mov
fs
fmul
dec
push
push
loopne
sahf
xchg
push
and
popf
imul
icebp
jge
mov
mov
(bad)
dec
rcl
repnz
push
sti
mov
cdq
shr
sub
int3
psraw
mov
aam
imul
pop
adc
repnz
mov
iret
in
ins
jmp
adc
and
dec
cmps
(bad)
inc
test
mov
(bad)
repz
sbb
scas
adc
xlat
pusha
fistp
ret
cmp
aad
mov
mov
adc
inc
clc
mov
call
xchg
scas
inc
stos
mov
cmc
leave
cdq
or
add
fidiv
sub
mov
in
inc
or
sbb
imul
stos
push
paddusb
pop
sti
(bad)
or
push
scas
xor
jecxz
and
and
dec
aas
lods
mov
jno
shr
xor
lods
pop
rcl
sbb
pop
pop
and
sub
clc
lea
and
dec
or
xchg
cdq
aad
xchg
dec
inc
lea
retf
mov
pop
or
bound
mov
cmp
adc
and
dec
sbb
sbb
mov
hlt
sar
ss
mov
and
or
rol
dec
adc
mov
push
push
bound
jmp
ret
bound
xchg
in
std
or
xchg
leave
add
repz
push
sub
lods
repz
repnz
jl
cmp
ins
adc
pop
(bad)
das
(bad)
mov
out
(bad)
cli
cs
ss
cld
mov
ficomp
and
cmp
sti
out
pushf
rol
mov
cld
add
lods
push
mov
cmp
pop
dec
pop
js
dec
mov
rcl
pop
es
mov
push
popf
loop
xchg
fst
and
nop
cdq
xor
nop
mov
lods
sahf
inc
pop
mov
lods
in
test
sar
adc
pop
cmps
ins
sub
inc
lods
pop
mov
ficom
cmp
add
sbb
popf
popa
outs
push
pop
mov
inc
or
ficom
add
aaa
jle
int3
cdq
aam
aas
pusha
hlt
shl
mov
and
and
pusha
pop
cmp
mov
fwait
loop
sahf
leave
pop
push
jb
push
mov
test
xor
daa
xchg
(bad)
xor
cmp
and
iret
mov
fsubr
sahf
jmp
pop
outs
int
movs
add
mov
call
pop
push
adc
movs
(bad)
xor
mov
inc
and
adc
xchg
jge
std
pop
cwde
cmp
fwait
xchg
xchg
fmul
es
dec
jg
pop
push
cmps
fstp
shr
not
repnz
inc
stos
ja
push
test
add
xchg
out
loope
sbb
imul
cld
das
push
out
dec
sti
les
gs
jae
fs
pop
xchg
test
xor
movs
push
pop
stos
movs
push
sub
and
mov
fldenv
jl
dec
add
xchg
popf
mov
cli
add
xor
inc
add
retf
call
stc
jnp
cmp
(bad)
xchg
mov
pop
shl
bound
retf
test
pop
ds
jmp
xchg
jg
cld
cmc
dec
movs
cmp
dec
mov
xchg
stos
adc
scas
je
fs
das
cwde
(bad)
sub
mov
retf
inc
dec
ja
jne
shl
sbb
cmp
xchg
pop
leave
je
retf
js
jg
mov
xor
cmp
pop
ins
inc
lea
ja
clc
nop
and
dec
add
jno
mov
pushf
movs
xor
test
ret
add
movs
mov
imul
icebp
mov
dec
dec
xchg
addr16
fidivr
lds
add
fild
mov
fsubr
pop
push
jne
outs
sbb
pop
sbb
pop
xor
aas
or
jmp
sbb
jb
dec
jmp
sbb
(bad)
loop
repz
repz
jecxz
out
not
fdiv
addr16
imul
pop
jbe
jmp
mov
xor
sbb
test
and
sub
ds
adc
mov
aam
pusha
ja
cmp
dec
xchg
xchg
mov
xor
inc
std
xchg
and
push
lea
out
xchg
cwde
mov
lods
stos
ret
xor
xor
push
pusha
sbb
lds
outs
bound
inc
or
rol
pop
mov
ror
cmp
fcmovne
dec
pushf
or
inc
pop
mov
push
xchg
adc
push
arpl
mov
aas
(bad)
pop
pop
into
js
sti
dec
fs
pop
scas
loope
lahf
fdivr
cmp
xor
mov
arpl
clc
xor
add
cmp
stos
repz
inc
lea
jno
xor
add
xchg
mov
out
aam
or
jnp
inc
jle
pop
xchg
repnz
retf
push
or
pop
mov
xchg
addr16
jne
inc
cld
stos
dec
cs
inc
imul
push
arpl
cmc
xor
sbb
adc
add
(bad)
div
adc
imul
jmp
add
mov
popf
or
pop
cmp
xchg
es
hlt
pop
mov
repnz
ins
jb
fild
sbb
fisubr
mov
outs
cld
ja
dec
sbb
ins
push
fdivr
xor
out
ret
int
div
push
ret
ret
mov
xchg
push
jecxz
je
js
add
mov
mov
mov
retf
add
adc
int
inc
ins
inc
punpcklbw
or
mov
(bad)
cdq
scas
inc
jbe
sub
test
test
mov
int3
out
imul
jno
xchg
inc
push
jmp
aas
add
stos
jcxz
or
add
fwait
jns
cmp
jo
sub
bound
jecxz
xchg
and
nop
sbb
adc
in
xlat
jae
xchg
scas
mov
mov
movs
xlat
sub
test
push
sub
outs
xor
fist
ins
stc
(bad)
div
jl
retf
push
retf
sub
ror
sub
inc
add
jmp
mov
aad
push
cmps
fnstenv
mov
mov
jae
pop
dec
mov
adc
adc
cld
iret
inc
imul
jb
nop
scas
cmp
xchg
sbb
popf
sbb
jg
cld
test
mov
ja
movs
fcom
loopne
sbb
sub
repz
stc
enter
retf
jmp
jecxz
mov
mov
sub
(bad)
ds
push
repnz
push
mov
cmp
data16
int
cmp
enter
sbb
push
jmp
jp
xor
push
cld
loop
mov
call
cmp
push
sub
inc
xchg
mov
test
cwde
pop
(bad)
jp
(bad)
retf
adc
stos
outs
sub
jbe
not
imul
loope
iret
cmp
pushf
pop
xchg
dec
and
loopne
push
xor
jae
in
jmp
aam
enter
mov
and
mov
cmp
add
xrelease
pop
sub
xor
mov
mov
dec
xchg
cmp
int3
outs
lods
in
(bad)
xor
inc
mov
sbb
adc
push
les
sub
jmp
sahf
ins
mov
cmp
cmp
mov
ret
xlat
jne
fisttp
push
push
stos
inc
cwde
or
addr16
sbb
movs
(bad)
jne
dec
arpl
fwait
ss
pop
adc
sbb
ds
xchg
(bad)
cmps
pop
inc
addr16
mov
out
mov
pop
rcl
mov
or
inc
dec
adc
sub
pop
push
fstp
test
push
pushf
rol
push
iret
xchg
gs
loope
mov
sbb
adc
mov
jne
jmp
jmp
lahf
pushf
jmp
add
mov
mov
sahf
mov
jnp
sbb
out
jnp
add
push
cmps
jns
repnz
iret
inc
into
call
inc
adc
fmul
mov
cmp
lahf
jb
xlat
fist
mov
cmp
mov
enter
cmp
add
fild
movs
cmp
call
(bad)
movs
clc
adc
xchg
lds
inc
xchg
jb
mov
cmp
push
jb
movs
lods
iret
push
pop
stc
pop
sbb
call
cmp
stc
and
hlt
dec
test
jno
je
loopne
push
or
cmp
add
call
fwait
cli
loop
(bad)
imul
adc
jmp
or
aas
jg
outs
xlat
cli
push
inc
push
ds
jmp
push
cmp
out
inc
repz
mov
arpl
lds
and
jmp
int
mov
hlt
daa
outs
jb
xor
xchg
push
(bad)
or
xchg
mov
xchg
mov
int3
pusha
mov
stos
ins
lea
sar
shl
loope
outs
inc
xchg
lock
push
inc
push
sub
fmul
aas
push
ja
add
sub
rcl
push
pop
mov
pushf
sub
sar
lods
clc
lds
xlat
ins
push
xchg
adc
jae
xor
(bad)
fwait
les
pop
push
add
xchg
sub
icebp
add
aas
stos
in
jle
sbb
add
pop
inc
cmp
ret
aad
sbb
daa
and
push
les
xchg
push
pop
(bad)
add
ins
movs
sbb
mov
mov
xchg
mov
aad
pop
in
dec
inc
gs
and
loope
test
sub
pop
add
xor
jne
inc
scas
mov
into
cmps
and
stos
sub
nop
cli
push
je
pop
(bad)
addr16
pop
add
pop
xor
not
sbb
mov
cmps
adc
add
sahf
xor
jae
xchg
mov
fistp
repz
mov
and
and
mov
push
add
add
jmp
mov
outs
jbe
dec
push
sub
xor
xchg
pop
cmps
int
aaa
fucomp
cs
dec
jns
outs
test
sbb
ret
push
enter
pop
mov
sbb
xchg
jns
adc
inc
pusha
and
cli
pop
test
push
mov
add
ret
repz
pop
retf
push
xchg
int3
xlat
dec
fistp
xor
not
lea
cmp
jecxz
inc
or
cmp
mov
mul
jmp
sti
in
mov
push
and
mov
mov
aas
dec
mov
popf
dec
cmc
xor
xlat
test
pop
jl
js
xor
ficom
ret
clc
mov
add
nop
(bad)
xlat
push
push
mov
push
dec
mov
and
or
xor
popa
neg
mov
repnz
jle
call
jae
sbb
int
(bad)
ja
jp
out
fs
retf
ja
icebp
loop
inc
daa
cli
sbb
inc
sti
jo
mov
xchg
outs
gs
xchg
mov
movzx
mov
or
enter
mov
or
or
jbe
scas
arpl
jne
mov
test
jmp
(bad)
pop
imul
sbb
cdq
fs
call
push
and
out
movs
test
mov
jbe
sub
aam
pop
sti
ret
iret
sbb
and
outs
loopne
dec
mov
inc
jl
dec
sti
jae
pop
data16
movs
retf
mov
fst
xor
imul
stos
sub
jae
pop
xchg
and
(bad)
cmps
out
mov
and
pushf
cmp
push
fisttp
jo
ror
shl
mov
mov
les
(bad)
mov
fdivr
shl
mov
test
inc
bound
adc
arpl
add
lahf
dec
mov
sbb
sub
test
sbb
scas
loop
mov
stos
push
in
sbb
mov
fsubr
rol
loop
daa
fadd
arpl
cmp
dec
loopne
pop
and
sub
test
sub
in
mov
inc
in
jle
(bad)
mov
fdiv
sub
and
fisttp
call
sub
pop
mov
or
jbe
es
daa
pusha
out
jmp
loopne
cmovle
ficomp
call
mov
add
sbb
cld
in
sti
dec
pushf
or
pop
ror
sub
dec
jns
dec
movs
popa
pop
or
jp
adc
mov
cdq
pop
xor
outs
mov
fs
fs
pop
cwde
sahf
mov
jecxz
(bad)
aam
stos
or
mov
sub
inc
pop
jne
xor
aaa
arpl
stos
adc
or
and
test
mov
mov
into
sub
cmp
and
cdq
and
inc
fmul
mov
push
push
popf
inc
lea
xor
jo
xchg
mov
or
xor
cmp
mov
aaa
ins
mov
xor
retf
in
push
jb
cmp
and
mov
xchg
add
(bad)
and
mov
inc
sbb
sub
push
mov
jmp
addr16
pop
fild
jnp
loopne
das
dec
cmp
movs
cmp
(bad)
mov
ret
and
adc
(bad)
jns
jb
mov
dec
idiv
push
in
mov
jmp
ret
cmps
push
mov
jnp
(bad)
ja
push
xchg
add
mov
jmp
and
js
jecxz
(bad)
sahf
shl
xor
push
pusha
loope
inc
inc
nop
lods
jo
inc
jecxz
repz
out
inc
into
push
jp
sahf
cdq
jns
sub
jns
rcr
stos
fdivr
or
std
pop
out
mov
shl
pop
or
rcl
sbb
mov
xlat
je
cmp
sub
shl
fdivr
dec
jbe
out
ins
je
cmp
ds
xchg
cmps
pop
sub
pop
xchg
(bad)
pusha
jp
add
mov
daa
and
xchg
icebp
add
ja
dec
rol
(bad)
mov
dec
lock
pop
leave
mov
sbb
dec
cli
aaa
cld
sbb
ret
adc
sbb
pop
popa
ret
enter
fst
imul
movs
fimul
push
(bad)
and
scas
sub
add
pop
xchg
call
test
mov
loop
fwait
sbb
sti
xor
cmp
pop
call
jb
adc
sub
sub
or
aam
shl
inc
rcl
iret
pusha
push
jge
jae
(bad)
and
cli
sub
and
dec
add
pop
xor
lahf
jg
test
shl
retf
(bad)
fmul
and
sbb
pop
adc
jns
clc
out
sbb
xchg
rcr
jecxz
jle
std
test
mov
pushf
mov
in
fistp
jmp
sar
jno
pop
dec
pushf
retf
mov
retf
pushf
push
inc
test
mov
(bad)
dec
adc
scas
xchg
out
mov
ins
xor
xchg
aad
add
ins
repz
sub
jb
hlt
push
movs
mov
xchg
inc
retf
repnz
lock
lahf
xchg
and
out
xor
jmp
add
xchg
(bad)
fisttp
call
push
xchg
stos
xchg
jl
inc
pop
inc
ror
push
icebp
fst
aam
add
xchg
in
adc
cmp
adc
sbb
fisttp
cmp
sbb
sbb
jae
ja
inc
ss
add
xchg
loop
pop
scas
push
shr
cmps
pop
or
(bad)
mov
scas
pop
das
test
mov
push
and
sahf
fstp
lods
jo
or
xor
mov
mov
fsave
test
push
das
nop
out
xchg
xchg
pop
movs
dec
adc
xchg
and
and
cmps
add
std
icebp
call
and
jns
xor
mov
adc
or
ds
cmps
dec
jmp
adc
add
js
lock
and
mov
pop
xchg
outs
and
or
cwde
repz
jo
jmp
rcl
push
mov
mov
stc
sub
or
sub
xchg
bound
iret
xchg
cld
and
inc
retf
enter
jnp
mov
(bad)
push
dec
sub
xchg
sub
mov
mov
inc
fs
into
loop
inc
lods
fimul
fwait
push
in
mov
inc
imul
test
mov
mov
jl
or
(bad)
dec
inc
arpl
(bad)
cmc
repnz
sub
mov
mov
mov
jecxz
xor
cmc
stos
sbb
push
inc
mov
popa
sti
inc
add
inc
ret
(bad)
les
mov
and
pop
imul
cld
and
shr
mov
mov
push
jbe
xchg
movs
rcl
cmps
leave
pop
dec
mov
lods
push
jae
data16
xor
mov
push
in
xlat
call
call
loopne
test
or
jp
fsubr
lods
cmp
lods
or
aad
sub
jl
mov
sub
cli
bound
inc
out
cwde
fpatan
sub
outs
add
sub
adc
mov
pop
clc
add
cmps
adc
jbe
mov
mov
movs
inc
int3
mov
xor
mov
(bad)
out
dec
fmul
jl
scas
xchg
test
xchg
int3
js
fcmove
sbb
in
loope
call
mov
jbe
aaa
test
(bad)
arpl
jmp
jmp
jae
xchg
scas
stos
adc
stos
cld
xchg
dec
jg
(bad)
loopne
xor
add
or
das
gs
jmp
mov
ret
imul
fild
cli
xchg
hlt
xor
jo
nop
mov
(bad)
xor
pop
add
popf
ret
dec
js
out
leave
outs
adc
mov
cmp
lock
ret
rcl
aaa
cmp
and
repnz
xor
push
aas
lock
sbb
jno
stc
push
in
adc
add
add
push
retf
mov
paddsb
fsub
fwait
push
shl
pop
daa
mov
dec
xchg
call
push
fidiv
in
adc
les
and
and
xchg
mov
inc
push
pop
mov
dec
data16
in
loopne
repz
lahf
loope
sub
pushf
arpl
jno
jmp
fwait
(bad)
repz
mov
mov
mov
mov
mov
fs
dec
cmps
pop
cwde
mov
xchg
mov
inc
fwait
cmovg
out
daa
and
mov
mov
(bad)
in
mov
out
jne
lods
pushf
scas
jb
sub
retf
cmps
xchg
cmp
push
cmp
inc
mov
out
movs
xchg
ins
das
cwde
mov
loop
sti
bound
or
sbb
int
aas
and
jo
movs
cmp
pop
push
push
mov
mov
mov
dec
mov
fwait
dec
cmp
sbb
mov
imul
adc
dec
adc
mov
cs
fidivr
(bad)
fwait
arpl
in
adc
mov
fldcw
cmc
stos
sti
and
pop
rol
movs
xchg
arpl
das
xor
inc
sub
jnp
dec
jmp
test
data16
inc
call
or
shl
out
dec
xor
imul
and
dec
mov
jmp
movs
stos
adc
fild
sub
mov
inc
movs
dec
pop
mov
adc
pop
popa
and
xor
and
lahf
xor
xor
push
sub
adc
cmp
stos
jno
mov
dec
mov
fwait
inc
add
jae
dec
jg
imul
pop
int3
pop
fs
cmp
xchg
jge
les
pushf
jl
add
ins
mov
sahf
not
jmp
and
sub
inc
dec
lock
push
push
shr
xchg
add
cmps
in
and
sub
dec
jp
movs
push
fmul
xor
test
xor
mov
gs
and
sbb
mov
repnz
test
push
pop
out
sbb
xchg
dec
test
sbb
jle
or
cs
sub
bound
sbb
cmp
jne
shl
push
fcomp
xor
or
xchg
popf
fwait
(bad)
jecxz
adc
cmp
cs
adc
mov
shr
mov
dec
icebp
shl
xchg
and
aam
dec
mov
xchg
ins
int3
sbb
jmp
mov
dec
lahf
imul
jmp
sub
clc
xor
and
add
pop
mov
inc
pop
xlat
outs
pop
pop
imul
imul
call
xchg
(bad)
fidivr
test
scas
ins
xchg
inc
pop
test
shr
fsubr
adc
mov
pop
and
push
pop
xchg
gs
cmps
mov
call
rcl
jb
jns
mov
add
jb
lods
and
pop
push
mov
or
out
jne
outs
(bad)
fcmove
ins
dec
dec
data16
lods
movs
aas
ins
mov
mov
fst
ds
rcl
sbb
(bad)
retf
xchg
cwde
daa
cdq
rcl
sbb
jmp
jmp
sar
mov
jmp
push
adc
in
mov
sbb
ins
push
adc
pop
inc
sub
lods
inc
push
pop
adc
imul
mov
je
pop
jl
test
in
sahf
push
jle
dec
aaa
out
mov
mov
jmp
sbb
repz
cmps
dec
cmp
mov
ror
cmp
or
push
and
xchg
mov
sbb
and
mov
xor
mov
sbb
inc
sub
push
add
lock
lock
shr
jp
xchg
aaa
and
mov
add
and
push
inc
lock
inc
test
je
dec
fld
outs
push
jl
test
pushf
lahf
mov
jns
xlat
adc
pusha
jae
push
push
pop
cmp
adc
pop
adc
bound
inc
arpl
pushf
retf
fwait
add
cmp
jne
inc
clc
dec
xchg
inc
(bad)
rol
jmp
int3
cmp
push
movs
fwait
std
adc
and
sbb
cmp
sub
and
xrelease
add
pop
inc
sub
sub
fisttp
xor
add
(bad)
push
mov
inc
jmp
scas
pop
sub
pop
adc
push
int
jle
ficom
test
jbe
push
mov
xlat
xor
cmp
mov
xchg
call
push
movs
imul
dec
inc
aam
and
cmp
jg
pusha
outs
cmp
xchg
xor
inc
or
addr16
push
xor
sub
lods
add
fisubr
in
sbb
addr16
es
cmc
add
sbb
xchg
repz
cld
xor
mov
pop
jno
int3
cmp
mov
es
jnp
out
test
push
(bad)
and
inc
mul
and
mov
mov
rcr
fwait
jg
xor
dec
movs
(bad)
int
in
xor
push
sbb
leave
adc
daa
lock
sahf
into
add
aad
cmp
out
pop
dec
(bad)
or
test
icebp
(bad)
int3
inc
bound
sbb
push
loop
xlat
inc
jno
or
push
int
ds
ja
and
out
xchg
test
jno
mov
int3
sbb
cmps
push
dec
cmp
jl
xchg
out
push
and
mov
rol
and
mov
xlat
out
pop
std
jle
mov
sbb
pop
push
xlat
push
and
adc
test
arpl
jmp
(bad)
adc
in
stos
cmps
adc
mov
and
xchg
dec
int
lock
push
je
in
and
inc
mov
call
dec
mov
mov
xor
out
mov
inc
in
movs
pop
fs
adc
adc
sub
pop
movs
push
popf
stos
dec
(bad)
xchg
xchg
jne
and
xchg
int
ins
or
cli
or
(bad)
nop
mov
icebp
test
ret
lods
jmp
sbb
pop
and
(bad)
dec
xchg
test
xor
mov
cmp
je
in
bound
mul
ret
rcr
adc
cld
ret
dec
mov
jo
cld
pop
mov
ins
xor
cld
jmp
and
stc
sub
dec
in
sub
mov
ja
sub
mov
and
and
lods
and
pop
aam
xor
push
push
inc
test
imul
imul
xor
out
fdiv
sbb
pop
sti
cli
call
sbb
les
repnz
imul
jl
mov
in
jmp
mov
gs
cmps
jp
or
mov
add
or
sub
fistp
popf
ror
in
std
sub
int
cs
add
mov
cmp
mov
dec
ins
push
xchg
fistp
add
(bad)
jle
rcr
ja
dec
push
mov
push
jb
pop
iret
shl
pop
fdivr
add
(bad)
cwde
jae
mov
mov
gs
fistp
cmp
cmp
int
xchg
xor
shl
icebp
test
popf
xchg
add
fcomp
jnp
cwde
or
das
neg
adc
jmp
inc
sub
repz
pushf
ds
and
add
retf
dec
mov
jg
cmp
stc
fdiv
xchg
in
enter
cmp
data16
daa
rcl
adc
jae
scas
adc
sub
imul
leave
setle
adc
inc
jge
inc
fldenv
clc
sbb
cmp
data16
in
aam
add
inc
nop
movs
jecxz
gs
push
in
cmc
xchg
sub
std
add
dec
ror
shl
jbe
ins
mov
or
dec
arpl
or
jg
dec
mov
adc
xchg
add
push
push
pop
mov
or
movs
push
scas
sub
mov
fwait
popf
std
mov
sub
stc
cmps
mov
xlat
push
fnstsw
into
jmp
fbstp
inc
frstor
imul
idiv
idiv
sahf
add
ss
xchg
std
rol
cs
mov
sahf
stos
inc
pushf
cmp
test
or
jne
xor
sub
sbb
and
jmp
inc
push
into
movs
test
lock
mov
icebp
hlt
cmc
push
lods
inc
mov
pop
out
jnp
inc
cld
fdiv
ja
jno
or
and
xor
fistp
pminub
cdq
jo
xchg
dec
mov
jb
out
fld
ror
(bad)
popa
jnp
ret
xchg
sbb
cli
inc
imul
mov
sub
(bad)
adc
jmp
pop
aam
mov
jmp
pop
xor
ret
pop
xlat
mov
add
rcl
mov
mov
repnz
mov
enter
call
sub
xor
fisttp
cmc
mov
inc
pop
(bad)
sbb
gs
dec
test
xor
retf
xchg
out
(bad)
repnz
mov
into
imul
jns
xchg
xchg
retf
cwde
fwait
mov
cmp
hlt
inc
push
nop
ror
mov
mov
fbld
or
add
mov
cmp
pop
cmp
addr16
(bad)
sub
push
xchg
outs
rcr
mov
popf
and
cmp
add
cmp
jle
aas
add
mov
in
inc
push
aaa
int3
cmp
sahf
test
lahf
pusha
xchg
sub
pop
mov
movzx
dec
aaa
test
xchg
or
jns
pop
push
jo
push
jp
jne
dec
aad
xor
cmp
xor
retf
fld
dec
fild
jp
push
jmp
inc
pop
jnp
cs
push
push
xor
add
adc
sbb
sti
mov
int
mov
jle
sbb
mov
or
aas
dec
fist
xchg
bound
enter
nop
sub
mov
out
mov
jg
mov
xchg
sbb
pop
jno
icebp
adc
lock
icebp
neg
pop
inc
pop
cs
xchg
cld
mov
outs
popf
(bad)
lds
or
sbb
lods
stc
out
ret
jb
xor
retf
out
inc
mov
mov
mov
leave
inc
cmps
ss
adc
aas
in
rcl
out
rcl
adc
sub
add
not
inc
adc
imul
jl
test
call
test
xor
repnz
retf
shr
ins
test
jbe
fld
add
nop
dec
mov
pop
xlat
jb
rcl
sbb
inc
jp
dec
pop
xor
retf
push
(bad)
popf
sti
mov
or
(bad)
jecxz
sti
jmp
cmp
int
add
es
push
pop
pop
cmp
mov
je
out
hlt
adc
fwait
adc
or
ds
dec
dec
aad
bndldx
outs
mov
js
lock
cwde
retf
dec
xchg
adc
mov
pop
(bad)
xor
cwde
mov
pop
cmp
add
lea
mov
mov
xchg
inc
dec
sbb
(bad)
cmp
mov
mov
xor
and
push
(bad)
addr16
xchg
pop
dec
(bad)
into
mov
fistp
ror
mov
push
add
push
(bad)
or
test
push
lahf
add
mov
or
jno
push
(bad)
loope
cmp
xchg
(bad)
and
shl
hlt
cmc
leave
xchg
inc
xor
or
mov
xchg
xchg
sbb
test
lods
and
div
add
xchg
or
pop
sub
and
pop
cmp
movs
mov
dec
fs
and
popf
adc
pop
dec
mov
xor
test
pop
ins
jg
cwde
xor
sub
ins
ins
ins
xchg
bound
imul
mov
jno
mov
adc
mov
adc
adc
add
int3
sbb
or
inc
pop
xor
mov
bound
jae
mov
adc
mov
xlat
ja
add
push
dec
push
aad
fsubr
movs
ins
sbb
add
out
or
int
mov
sbb
cmps
enter
movs
sub
cmp
sub
adc
mov
sub
pop
shl
xor
js
dec
jno
cmc
xor
(bad)
fadd
dec
or
int3
fwait
cmp
rol
inc
push
cmps
test
test
outs
shr
sub
sbb
sub
retf
xchg
out
or
add
stos
cmps
jno
shl
push
aaa
lock
add
mov
mov
cmp
push
ss
fidiv
mul
loop
sub
push
cmps
lahf
lods
fst
xor
dec
dec
dec
stos
mov
jle
scas
sar
add
add
shr
or
push
xchg
mov
inc
fwait
mov
and
loopne
mov
push
add
lds
xchg
sub
aam
or
into
jle
pop
pop
push
pop
lods
pop
repnz
mov
jns
shl
shl
pop
mov
mov
jne
rcr
(bad)
enter
movs
gs
push
dec
pop
loopne
(bad)
mov
pop
cs
sub
movd
stos
bound
out
sub
(bad)
or
aad
aaa
push
cmp
mov
fld
shr
movq
pushf
jb
in
fs
push
pop
cmp
inc
retf
xor
push
xor
jmp
add
test
js
imul
sub
xor
sub
aam
and
ins
jecxz
neg
push
or
push
jno
xchg
sbb
ja
les
xchg
xchg
sbb
pop
mov
cmp
mov
and
in
cs
cmp
adc
cmps
call
retf
nop
mov
xor
push
rol
add
dec
cmp
adc
cli
in
clc
scas
sub
retf
xchg
sbb
xlat
aam
push
push
push
or
and
fwait
je
cmp
rol
nop
jae
push
or
cs
jno
call
call
xchg
movs
fidivr
sub
loop
scas
retf
jmp
fdivr
aaa
add
iret
jg
jp
addr16
aas
add
dec
pop
lds
sbb
xor
mov
adc
pop
and
sub
aas
mov
imul
lods
add
sub
sub
jns
xor
cmps
inc
mov
mov
sub
out
or
pusha
xchg
mov
(bad)
dec
cdq
inc
ins
push
shl
test
dec
aad
call
(bad)
xor
es
pop
(bad)
jo
movs
mov
pop
dec
cmp
outs
mov
xchg
lahf
retf
lds
call
or
cmp
(bad)
sub
cmp
add
cmp
aas
mov
xchg
fwait
loopne
movs
cdq
fdivr
retf
outs
push
xor
repnz
imul
or
pop
push
adc
imul
pop
inc
jne
mov
test
ret
jmp
mov
pop
mov
pop
mov
scas
aaa
inc
mov
cmps
push
repnz
aaa
inc
popf
cwde
sbb
ss
cld
retf
fwait
pusha
jbe
sub
dec
add
movs
ja
and
mov
xchg
scas
sub
add
iret
mov
mov
pop
cdq
sub
mov
pmuludq
jmp
push
aas
xchg
in
pop
mov
out
sub
cmp
jmp
iret
inc
push
jo
mov
aam
fistp
fsubr
test
addr16
dec
addr16
sub
mov
cs
cdq
loopne
add
jnp
loope
sub
push
imul
test
cwde
adc
aam
sub
sub
lods
movs
inc
push
or
stos
ins
mov
mov
mov
jbe
push
fnstenv
loope
pop
jmp
cmp
cmps
sub
scas
cmp
fnstenv
push
test
xchg
cmp
repz
xchg
stc
jnp
inc
jmp
sar
inc
jbe
add
in
add
xchg
or
call
mov
shl
push
push
xchg
jno
adc
call
iret
pop
or
push
shl
mov
call
cmp
dec
nop
stos
lods
cmp
mov
out
je
jnp
pop
xchg
out
push
inc
addr16
mov
xchg
or
sbb
ds
pop
in
jbe
pop
out
jmp
mov
repnz
mov
pop
pop
sub
sbb
cmp
fdivrp
add
adc
mov
movs
(bad)
mov
mov
neg
add
xchg
outs
mov
iret
add
(bad)
jns
jge
movs
xchg
jp
test
xchg
xchg
enter
nop
mov
les
sub
mov
inc
movs
shl
sbb
push
enter
in
fcom
sbb
mov
mov
adc
mov
xchg
sbb
js
arpl
jecxz
repz
push
(bad)
dec
rep
int
adc
sbb
std
mov
and
aam
int3
sub
jne
add
in
xor
jne
(bad)
enter
cmp
into
clc
push
sahf
leave
test
imul
push
sbb
in
jne
aas
arpl
xor
push
lock
fadd
mov
je
or
pop
lods
shl
es
mov
jno
fdiv
and
xor
retf
pop
cmp
push
add
ins
mov
inc
call
retf
out
adc
push
daa
in
add
xchg
mov
repz
mov
push
nop
fisubr
add
add
push
arpl
(bad)
xor
mov
int
leave
sub
inc
adc
and
loop
int3
add
cmp
aas
sub
jne
mov
fmul
(bad)
jl
pop
call
std
or
push
cld
movs
and
cwde
sub
jmp
adc
scas
sub
in
xchg
xor
mov
push
movs
shl
mov
inc
push
or
scas
inc
leave
pop
fdiv
test
test
lds
push
mov
out
mov
or
sub
xchg
int
dec
popf
mov
adc
adc
icebp
scas
cs
aaa
add
jmp
adc
mov
xor
dec
popa
add
and
test
gs
sub
neg
bound
adc
and
pushf
add
add
cld
sub
ss
pop
xchg
and
sbb
out
xor
out
cmp
in
dec
stc
or
dec
outs
outs
ins
push
dec
dec
mov
test
cld
pop
adc
hlt
leave
xchg
ins
sbb
jmp
call
inc
bound
pop
int
jo
xchg
popf
or
adc
test
pop
add
je
hlt
xchg
je
xor
daa
mov
mov
jno
jmp
or
loopne
lods
add
movs
dec
push
add
mov
pop
rcl
je
xchg
das
lock
pop
test
(bad)
jb
shl
icebp
xchg
ds
call
xor
push
(bad)
jnp
xchg
dec
dec
int
outs
in
mov
add
xchg
sub
cmp
push
pop
rol
push
sub
dec
je
pusha
movs
cmps
lahf
sbb
and
inc
rol
mov
push
cli
push
pusha
cld
scas
mov
pop
pop
sub
adc
repz
mov
(bad)
jmp
jmp
loopne
enter
ins
addr16
daa
pusha
mov
xchg
sbb
sbb
les
ja
mov
fiadd
mov
dec
sahf
push
adc
sub
cli
icebp
push
push
xor
pop
stc
repz
clc
out
mov
mov
adc
ins
pop
inc
not
addr16
into
(bad)
fisttp
sub
push
mov
int
inc
jmp
call
sub
and
in
pop
or
(bad)
retf
in
ret
or
sub
and
mov
pop
fcomp
dec
mov
icebp
lods
sub
jge
xor
mov
adc
or
adc
repnz
push
outs
out
cld
push
sub
mov
shr
stos
pop
dec
and
(bad)
popa
loopne
test
mov
mov
sub
mov
(bad)
and
mov
bound
mov
mul
cmp
push
push
je
pop
outs
das
sbb
push
jmp
popf
mov
mov
dec
mov
leave
popf
daa
js
sbb
shl
mov
xor
and
jmp
mov
and
jne
mov
(bad)
out
or
out
lods
add
sub
mov
les
fdivr
mov
push
ret
loope
jmp
lahf
push
rcl
mov
repz
(bad)
fwait
cdq
loope
and
inc
lods
sub
adc
cmp
mov
push
pop
je
and
ret
test
mov
dec
ja
mov
into
add
mov
movs
dec
xchg
mov
sbb
shl
sbb
pop
push
jle
fwait
inc
daa
test
enter
add
fs
fmul
pop
jns
jmp
add
outs
iret
pop
sbb
mov
xchg
data16
jg
icebp
and
sti
ds
cmc
ins
enter
push
xor
push
movs
imul
push
pop
scas
in
(bad)
mov
jle
sbb
movs
dec
xor
cmps
sub
cmp
xor
in
and
mov
in
pop
pop
lea
arpl
fs
mov
cmp
mov
xlat
jge
push
aas
add
and
lds
sbb
sbb
cmp
jo
dec
nop
in
ins
js
push
nop
inc
and
shr
in
mov
and
jb
lods
iret
out
jae
(bad)
mov
dec
and
ins
sbb
dec
int3
sub
call
adc
shl
xchg
loop
jae
jle
mov
in
pop
and
sub
pop
mov
dec
mov
(bad)
push
loop
dec
(bad)
push
out
test
gs
sub
cmp
jl
out
ss
sub
div
inc
adc
mov
or
mov
jg
jge
gs
mov
repnz
out
shr
push
jns
movs
in
xor
rol
mov
pop
(bad)
cmp
into
in
dec
fild
ret
out
mov
xchg
pop
retf
mov
sub
mov
loop
dec
xor
sub
push
adc
push
scas
stc
rcr
adc
fwait
ret
or
cmp
sbb
push
sbb
and
lods
push
(bad)
cmp
jnp
push
call
movs
enter
aam
sbb
clc
dec
jp
or
jmp
jl
push
cs
xlat
rcr
hlt
cmps
mov
sub
shl
frstor
xor
xor
dec
jl
call
(bad)
jl
jmp
into
adc
xchg
cli
xchg
scas
mov
sbb
xchg
dec
sti
sbb
mov
pop
mov
xchg
mov
cmp
div
fwait
retf
mov
lods
pop
adc
repnz
ins
fstp
clts
fwait
cmp
sbb
jae
pop
cli
xor
mov
push
inc
in
jno
pop
ret
movs
lea
xchg
mov
mov
in
pavgw
loopne
stos
out
call
or
int
lods
mov
mov
dec
xlat
push
xchg
inc
sub
pop
test
popf
icebp
xchg
xor
ds
je
mov
cmc
jo
fld
cdq
and
imul
ret
stc
jecxz
or
push
aaa
and
or
enter
pop
sub
stos
stos
and
push
js
push
mov
mov
mov
xchg
xchg
std
repz
adc
shl
mov
and
popf
dec
jmp
cmp
pushf
sub
repz
jmp
or
stos
leave
int
popaw
cmps
and
inc
sub
push
int
xor
hlt
or
das
and
jno
mov
mov
jmp
jle
fisttp
imul
ror
jp
(bad)
ins
xor
adc
xor
push
pop
arpl
clc
mov
lods
outs
push
adc
dec
pop
cmp
mov
adc
call
pushf
data16
icebp
idiv
neg
jno
pop
ret
xchg
sub
cmp
fiadd
mov
(bad)
push
mov
(bad)
hlt
(bad)
arpl
cmp
xchg
mov
lods
pop
jg
shl
ins
xchg
pop
pop
mov
sbb
je
mov
repnz
lahf
rsm
xor
retf
mov
cmp
inc
stc
stos
sub
jecxz
sbb
mov
push
push
add
aam
cmp
sub
push
or
stos
or
in
clc
nop
ss
dec
mov
mov
mov
mov
popa
lock
lea
(bad)
movs
or
or
mov
loop
call
dec
and
cmp
and
push
bound
push
pusha
xor
pusha
sbb
cld
adc
push
shl
xlat
mov
or
push
xchg
stc
xchg
xchg
sub
test
je
aam
outs
mov
pop
lds
push
sub
mov
stos
(bad)
retf
push
popa
jns
retf
or
movs
cmp
das
xor
js
(bad)
and
and
pop
pop
pusha
mov
push
push
mov
mov
sbb
mov
out
adc
xchg
(bad)
push
mov
xchg
xchg
cmp
out
pop
je
mov
fwait
scas
dec
mov
pop
dec
cmp
(bad)
pop
(bad)
aaa
mov
js
nop
adc
call
lods
pop
mov
cs
rcl
lock
arpl
dec
pop
test
inc
cmp
ins
(bad)
mov
imul
je
push
outs
sbb
in
adc
test
dec
cmp
cmc
and
sub
pusha
xchg
sbb
adc
das
mov
(bad)
std
in
jl
push
mov
inc
call
jmp
call
push
xchg
movs
add
repnz
xlat
sar
int3
inc
mov
mov
imul
mov
or
iret
or
dec
enter
rcr
xor
inc
jmp
aam
imul
dec
push
jge
xchg
dec
les
xchg
stos
pop
xor
(bad)
enter
sub
xor
adc
cmps
xchg
xor
jae
stos
sbb
fdiv
test
xchg
xor
sub
mov
mov
out
icebp
sbb
out
lds
sub
(bad)
in
inc
cmps
push
xchg
jecxz
pop
fcomp
fadd
adc
shl
lods
jecxz
push
sbb
and
push
fidivr
cmp
frstor
cmp
and
dec
lds
adc
repnz
sub
sbb
rol
xchg
add
shl
fwait
ret
xchg
pop
pusha
aas
jb
stos
les
retf
and
div
test
aam
sbb
mov
and
or
cld
adc
mov
test
and
lahf
pop
mov
jmp
pop
inc
lock
(bad)
sbb
pop
sbb
push
cmp
pop
mov
sub
ins
je
ins
dec
add
sbb
xor
test
test
jnp
pop
(bad)
dec
sub
jl
sbb
jmp
aad
nop
inc
or
aas
retf
cs
aam
lahf
sahf
jo
int
ins
mov
inc
fidiv
mov
daa
aaa
cs
nop
imul
(bad)
fsub
rcl
sbb
cmp
jge
or
icebp
stc
pop
imul
xchg
push
in
lea
inc
jle
(bad)
inc
inc
retf
jns
mov
rol
cmps
sbb
xchg
xor
sar
leave
and
add
cmc
sahf
ror
lods
push
sub
sub
inc
imul
repz
mov
pop
inc
ret
jge
lock
push
fldenv
fisttp
aas
(bad)
sti
adc
jnp
mov
or
adc
aas
test
rcl
and
outs
push
mov
stos
dec
loope
fcmovb
and
inc
je
inc
cdq
sbb
sub
test
daa
ja
pop
push
movq
hlt
jnp
jge
and
(bad)
out
and
popf
and
call
sbb
push
pop
mov
stos
dec
fidivr
pop
sar
stc
out
ss
push
and
xchg
pop
(bad)
loopne
retf
ins
hlt
sub
push
das
(bad)
data16
cmp
jg
push
lock
movs
jno
dec
jle
retf
data16
or
enter
and
push
sti
cmps
cwde
xor
mov
pop
mov
dec
shl
out
xchg
sub
jo
out
pusha
retf
mov
in
cmc
lods
jno
sbb
imul
jbe
push
mov
jno
leave
mov
xchg
sbb
sahf
mov
pushf
dec
adc
jnp
mov
dec
scas
scas
jae
retf
rcr
loop
cs
inc
pop
fisttp
and
imul
dec
arpl
cmp
cld
mov
lea
mov
sbb
lea
push
stc
jb
mov
jnp
xchg
push
jns
test
jnp
cmps
ins
sub
xchg
nop
jl
push
inc
mov
ret
pop
push
popf
aaa
and
leave
out
mov
fwait
(bad)
ror
enter
mov
and
int
data16
xor
xchg
lds
cmp
mov
gs
popf
xchg
sbb
pop
loopne
and
dec
push
(bad)
add
cmps
mov
and
adc
adc
mov
push
loopne
xchg
jne
lock
ret
add
(bad)
mov
cmps
mov
mov
adc
pop
jp
push
retf
add
repz
jle
mov
aas
mov
shl
ins
sub
sub
xchg
mov
loopne
(bad)
shl
or
push
push
sti
mov
sub
pusha
cwde
push
fwait
repnz
adc
pop
ds
mov
js
mov
xor
loop
inc
mov
jb
inc
fild
adc
les
xlat
test
addr16
(bad)
sbb
movs
push
pop
ret
sti
sahf
in
ins
cdq
ret
add
and
push
fiadd
nop
add
sub
cmc
fwait
jo
fbld
jmp
dec
mov
xor
addr16
daa
pop
push
xor
aad
das
in
aam
pop
test
xor
fcom
lock
repnz
popf
mov
adc
aas
push
test
(bad)
leave
jecxz
test
lds
test
jae
inc
cwde
test
seto
(bad)
sbb
or
enter
add
or
lea
fsub
or
xor
adc
adc
out
in
ss
neg
loopne
ins
and
pop
cmp
out
add
dec
mov
fwait
adc
arpl
mov
add
push
xor
(bad)
jnp
sub
loopne
sub
imul
cmp
jge
or
mov
mov
push
popa
(bad)
in
push
xor
mov
mov
out
int
mov
ds
int3
add
(bad)
int
jnp
mov
fsubr
(bad)
imul
pop
out
ins
sbb
xor
mov
jns
cmps
repnz
xor
std
hlt
adc
jmp
in
mov
int
mov
sahf
cmps
mov
xchg
mov
sahf
xlat
mov
inc
xor
and
adc
push
into
shl
pop
dec
in
sub
pop
pop
fs
aam
lock
xor
or
or
imul
loope
sub
inc
enter
push
lods
mov
jbe
cli
fistp
movs
pop
movs
test
test
dec
cmp
pop
retf
fidiv
inc
ss
lea
movs
pop
cmp
or
xor
(bad)
test
cmp
cs
cmp
cmp
out
scas
dec
jle
push
dec
ds
dec
ret
pusha
inc
or
repnz
iret
cld
mov
pop
sbb
mov
push
jo
and
pop
pop
ins
aaa
dec
push
and
mov
fisub
mov
aam
cmps
imul
aad
les
and
jne
dec
sbb
dec
or
jmp
icebp
mov
mov
nop
test
fst
dec
or
fldlg2
leave
and
xchg
std
stos
push
fcom
jle
hlt
jmp
cmps
mov
add
cmp
jae
and
rcl
cmp
js
(bad)
pop
test
sbb
in
loope
push
or
pop
xchg
pusha
sbb
mov
ror
or
xor
adc
mov
(bad)
call
xchg
mov
cmp
ret
cs
mov
rcr
mov
pop
cmps
sbb
or
mov
inc
arpl
and
retf
push
les
cdq
sbb
ins
hlt
cmp
sub
ret
pop
cmp
jns
nop
mov
xchg
ins
add
inc
cmp
std
stos
sub
imul
mov
cmp
(bad)
imul
in
adc
in
popf
jne
inc
push
ror
cmps
and
mov
mov
xchg
add
lods
mov
es
or
xor
mov
js
ret
sbb
repz
fwait
push
mov
inc
mov
push
iret
pop
cmps
fimul
and
add
jge
add
push
movs
jg
data16
clc
mov
into
xor
nop
lods
adc
imul
shl
je
xchg
mov
jecxz
ins
inc
inc
int3
jg
ins
adc
popa
retf
cmp
(bad)
js
jmp
aas
out
sub
or
push
(bad)
mov
jle
stos
pop
test
jg
mov
in
in
ret
test
loop
cs
mul
repnz
mov
fucom
jb
loope
pusha
inc
popa
enter
ds
call
popf
call
or
inc
stos
mov
lea
xchg
or
stos
sub
jne
push
retf
(bad)
inc
adc
cmps
jg
pop
aad
push
push
cmp
call
leave
mov
and
data16
fistp
mov
pop
jp
in
in
xlat
mov
les
je
add
sbb
es
sahf
stc
push
mov
cmc
lods
mov
jbe
push
test
push
jmp
data16
leave
lods
arpl
ja
in
xchg
push
xchg
cwde
mul
shl
test
imul
mov
clc
inc
cld
add
sbb
mov
into
clc
jnp
jmp
les
mov
sbb
adc
push
cmc
ret
ins
nop
mov
loop
mov
je
and
retf
fidiv
and
loop
dec
fbld
frstor
test
mov
(bad)
sbb
cdq
mov
inc
xchg
aad
add
ja
cwde
pop
mov
dec
inc
adc
lds
nop
mov
outs
rcl
iret
xor
adc
call
call
lods
cs
mov
cmp
pop
arpl
stos
(bad)
sbb
inc
cmp
jae
mov
(bad)
fwait
push
sub
adc
jne
inc
and
xor
movs
and
retf
loopne
arpl
int
or
rcr
sbb
pop
fbld
mov
adc
(bad)
adc
imul
pop
xchg
outs
and
mov
and
std
jb
jp
clc
mov
push
xchg
bound
push
sub
add
jnp
lds
dec
fimul
push
sub
inc
shr
test
loop
adc
imul
sub
xchg
data16
dec
mov
lods
sbb
mov
xchg
adc
fxch
xchg
dec
cmp
jae
mov
(bad)
stc
mov
jns
pop
das
in
(bad)
test
shl
(bad)
cmp
mov
jmp
and
dec
and
mov
movs
mov
out
in
fmul
movs
test
call
jg
dec
push
dec
rcl
movs
scas
push
test
in
pop
mov
adc
icebp
test
push
dec
xor
jmp
cmp
push
hlt
xchg
sub
lahf
in
stc
jns
gs
cmp
call
mov
inc
cmp
sbb
stos
test
push
pop
xor
xchg
sub
fistp
jne
jno
pop
js
inc
(bad)
mov
xchg
hlt
out
nop
gs
test
adc
add
lods
shl
mov
sbb
push
xor
pop
add
adc
push
push
cmp
mov
ficom
cli
rol
xchg
pusha
inc
lods
xor
push
push
and
mov
aad
mov
mov
or
pop
int3
inc
call
inc
ret
push
and
and
adc
arpl
ins
mov
jl
lods
cmp
sub
mov
adc
sar
cmc
and
lock
sub
popf
or
or
enter
add
push
inc
mov
enter
xchg
dec
pop
outs
stc
mov
jno
mov
sbb
push
(bad)
mov
fcom
add
loop
(bad)
jns
sub
nop
bound
gs
loopne
cld
in
xor
hlt
fucomp
lahf
push
xor
scas
call
push
mov
dec
cli
pop
leave
aad
push
jb
(bad)
imul
jae
(bad)
push
mov
push
pop
daa
loop
scas
dec
mov
sti
jl
clc
or
fmul
mov
lock
cmps
cmp
push
outs
jl
ror
jns
add
jno
test
mov
or
xchg
je
hlt
inc
pop
mov
mov
xchg
div
cmp
jns
add
dec
mov
xchg
out
or
mov
fwait
mov
sbb
sub
test
push
enter
sub
push
es
addr16
cmp
fnsave
repz
mov
retf
stos
gs
retf
(bad)
or
sbb
hlt
(bad)
push
imul
mov
dec
jle
imul
cwde
fmul
sub
pop
mov
add
daa
cli
loope
sbb
mov
icebp
inc
xor
cmp
cmp
push
shl
push
loope
jmp
push
add
pusha
gs
(bad)
adc
xchg
add
xchg
imul
lock
imul
push
dec
push
mov
jno
rcl
test
lea
pop
shr
cmp
jmp
out
pushf
mov
popa
(bad)
dec
push
mov
mov
inc
inc
sahf
mov
push
xor
aad
stos
push
push
inc
mov
cmps
test
jmp
and
fisubr
stc
(bad)
cmp
aad
jb
push
test
fimul
or
nop
jp
jmp
repz
cld
xor
loope
popf
out
adc
cmp
and
xlat
fxch
scas
xor
xchg
pop
movs
jmp
xor
call
lods
into
mov
or
stos
xor
cs
cmc
sub
or
(bad)
adc
rcr
jmp
pusha
sti
xlat
fmul
xor
jmp
mov
repnz
sahf
rcl
ins
cmp
mov
(bad)
mov
std
repz
xor
push
xor
mov
push
adc
add
in
in
sbb
or
arpl
sbb
nop
loop
xor
dec
data16
mov
mov
cwde
push
push
push
dec
aas
mov
stos
(bad)
out
dec
or
shr
dec
loop
xchg
addr16
push
(bad)
sbb
dec
arpl
je
pop
ret
nop
mov
xor
sbb
mov
and
mov
mov
pushf
or
mov
push
fwait
pop
inc
xor
pop
popf
and
bound
push
or
sub
sahf
mov
or
or
jb
addr16
pop
mov
inc
and
adc
daa
aam
mov
mov
bound
jp
(bad)
mov
ins
ss
xor
xchg
add
sbb
adc
dec
and
inc
sar
dec
add
adc
jmp
adc
jae
int
adc
jbe
push
retf
es
outs
fimul
jbe
js
mov
or
sar
ficomp
jmp
jle
xor
and
mov
xchg
lahf
pushf
mov
cmc
mov
and
push
push
cmp
es
cmp
sbb
movs
rol
mov
mov
xor
ja
js
jg
data16
out
retf
das
dec
add
add
ins
mov
outs
int
mov
into
fwait
sar
push
jp
nop
adc
and
jb
push
sti
push
inc
test
xchg
mov
mov
addr16
or
adc
mov
retf
inc
xor
mov
sub
daa
daa
adc
cwde
pop
adc
aaa
push
rdmsr
mov
adc
jmp
push
shl
fcomp
jne
mov
push
cmp
add
rol
mov
popf
sbb
cmp
pop
sbb
loopne
mov
leave
das
push
cmp
jle
ds
push
add
pop
hlt
pusha
cmps
repz
push
and
lock
(bad)
and
xor
sar
aaa
das
jle
ret
and
jb
dec
dec
js
test
test
and
adc
push
jbe
xchg
jg
adc
lea
pop
sub
out
mov
jge
(bad)
and
pop
push
mov
rol
and
cmp
clc
mov
xor
cwde
rol
mov
cmps
lds
jmp
push
cs
aam
and
lods
xchg
and
cmps
xor
and
and
dec
jae
adc
sub
fs
mov
mov
sbb
cmps
sbb
xor
xchg
hlt
bswap
dec
xchg
pop
mov
call
fs
mov
add
add
sbb
jg
or
imul
iret
fistp
or
or
jge
fstp
and
sahf
pop
pushf
dec
and
push
push
dec
inc
cmp
xchg
mov
add
mov
daa
outs
shl
jle
mov
or
fcmovne
pop
jecxz
and
cmp
inc
out
jl
bound
adc
sub
outs
mov
daa
imul
sti
out
sub
push
dec
aad
addr16
xchg
push
inc
mov
retf
mov
cld
xchg
and
sbb
push
xchg
and
shr
test
or
xor
sbb
cwde
gs
push
jl
rcr
gs
and
(bad)
sub
neg
mov
fidivr
and
stos
or
pop
sbb
retf
pop
in
stc
cmp
js
enter
sub
cwde
sub
push
cmp
jno
mov
push
pop
sub
loop
pop
and
gs
ds
sbb
sbb
es
inc
xor
mov
mov
inc
popa
iret
loopne
mov
sub
adc
mov
cmp
test
sbb
dec
ret
mov
shl
add
mov
pop
xchg
xchg
pop
cmp
push
fcmovbe
mov
loop
sahf
cmps
mov
push
mov
mov
data16
or
mov
les
pop
push
or
mov
aam
sub
sbb
scas
ret
stos
cmp
inc
xor
lea
dec
std
jp
sbb
test
pop
les
aad
or
push
cmp
mov
pop
loop
adc
inc
in
xchg
and
outs
int
mov
jnp
mov
in
mov
jp
push
add
mov
int3
adc
jmp
adc
jne
fwait
inc
movs
sub
add
mov
in
adc
push
pop
sub
aam
movs
push
stos
xchg
push
mov
and
jo
movs
cmc
mov
mov
out
mov
rcl
cmp
clc
pop
mov
xor
and
push
hlt
adc
add
mov
push
adc
inc
pop
fnstenv
xchg
out
pop
outs
adc
lea
jno
jae
out
repz
xlat
fdiv
loope
xor
mov
inc
inc
and
cmp
or
xor
sub
ins
jae
pop
or
adc
and
in
aam
sti
mov
add
pop
out
push
pop
fbstp
sub
mov
pushf
call
movs
loop
lods
mov
pop
cmp
int3
push
movs
add
sbb
and
repz
cs
dec
aaa
out
and
outs
jl
fild
or
push
mov
int3
fdiv
xor
ins
sar
add
dec
retf
sub
arpl
je
xchg
cld
adc
cmp
xor
clc
shl
fdiv
icebp
push
mov
cmc
cld
push
jp
data16
xchg
popa
mov
loopne
ins
dec
call
fsubr
xchg
push
sbb
into
push
sub
and
dec
sub
jmp
lea
inc
xchg
jmp
cmp
retf
jg
movs
xor
mov
in
mov
ror
test
fs
dec
fisub
lock
xchg
iret
je
cmps
(bad)
frstor
dec
dec
inc
fadd
xor
adc
jb
dec
adc
jmp
xchg
fnsave
dec
mov
sbb
inc
pop
iret
es
jno
pop
fs
jecxz
sbb
jno
jnp
add
sbb
retf
cdq
stos
nop
dec
loope
cdq
ja
sub
adc
mov
in
sbb
sbb
mov
stc
sar
mov
mov
sub
out
hlt
fsubr
pop
stos
cmp
inc
into
dec
cmps
das
ss
lahf
fsubr
mov
cli
mov
mov
mov
inc
jae
adc
lods
std
shr
pop
jno
dec
xor
push
mov
cmp
imul
stos
inc
sbb
dec
fsub
mov
and
cmps
push
pop
xchg
jle
jecxz
fistp
sub
add
mov
fist
imul
clc
mov
daa
mov
inc
pop
lea
test
out
fimul
jl
adc
jmp
shr
xchg
jns
or
sub
mov
iret
xchg
jg
inc
mov
mov
sbb
pop
push
nop
xor
cmp
ins
xor
pop
inc
icebp
(bad)
sbb
mov
call
ds
ror
pop
jmp
out
inc
ins
iret
mov
pop
dec
es
adc
sub
ret
adc
jnp
sbb
jno
pop
popf
in
retf
and
mov
shl
test
sub
mov
sub
mov
inc
and
lods
push
and
cmp
or
imul
cmc
shr
cmp
dec
dec
ret
xor
cmps
pop
push
push
xchg
icebp
mov
dec
jno
imul
jmp
jo
or
jnp
jnp
pushf
jnp
add
sub
and
or
mov
push
push
les
retf
inc
or
mov
adc
fs
mov
aas
dec
ins
xchg
or
shr
movzx
test
and
cmp
lods
dec
push
or
mov
xchg
into
sub
ret
(bad)
pop
test
inc
cmp
jbe
inc
mov
mov
mov
mov
dec
mov
arpl
repz
movs
addr16
loopne
(bad)
adc
and
xchg
ror
push
(bad)
dec
jne
(bad)
movs
xor
cmps
sbb
inc
sbb
inc
sub
push
stc
cdq
inc
push
add
xlat
(bad)
jmp
fstp
xchg
mov
dec
mov
jp
movs
test
aas
jnp
inc
(bad)
sub
xlat
stc
mov
mov
jp
jl
mov
rcr
fcmovb
push
inc
dec
xchg
xor
pusha
adc
mov
cdq
out
loope
jge
idiv
pop
inc
les
mov
jmp
pop
mov
lahf
sbb
out
cmp
aam
dec
shl
push
xor
and
shl
(bad)
aam
jae
repz
pushf
push
push
xchg
(bad)
nop
retf
loop
movs
addr16
lahf
ret
inc
daa
mov
and
dec
inc
fldcw
lock
cmp
psadbw
jne
div
or
sahf
jmp
xchg
xchg
ins
mov
fs
pop
test
arpl
(bad)
test
std
fimul
jg
aaa
enter
jp
push
nop
or
std
sbb
sahf
push
enter
mov
and
cdq
pop
retf
sar
call
fmul
mov
retf
out
jp
adc
sub
inc
out
pushf
xchg
xlat
push
add
jge
loop
jl
lods
lock
push
mov
retf
adc
mov
retf
cmp
or
test
out
adc
jecxz
or
repnz
mov
fstp
add
cmp
(bad)
mov
out
xchg
dec
in
pop
and
fisttp
cmp
mov
inc
push
jmp
inc
lods
lock
cli
or
and
mov
inc
scas
sti
fsubr
mov
cmp
or
rcl
div
jno
(bad)
out
das
ror
ja
aad
cmp
or
stos
and
xor
pop
jecxz
push
and
enter
push
cmp
bnd
imul
popf
xor
sbb
push
xor
out
jo
cs
lock
inc
in
(bad)
sbb
loope
xchg
out
lods
icebp
lahf
(bad)
retf
js
add
sub
jle
aas
xchg
out
jg
add
fiadd
push
adc
or
xchg
pop
xchg
sbb
dec
into
xchg
addr16
push
out
icebp
fiadd
push
lods
sbb
lods
out
push
call
push
mov
adc
call
mov
pop
fbld
movs
arpl
jecxz
dec
pop
ror
fadd
mov
sbb
adc
adc
jge
rcl
ret
add
or
test
adc
movs
push
retf
out
clc
dec
sub
sub
jbe
jle
push
cmc
mov
inc
pop
enter
xchg
jne
add
cmp
mov
push
fnstcw
test
sahf
cld
add
icebp
inc
and
jbe
dec
dec
xchg
fcom
mov
hlt
movs
sbb
inc
(bad)
adc
jae
scas
or
or
lds
mov
rcl
xchg
popa
mov
(bad)
iret
xor
adc
in
add
scas
push
je
mov
push
inc
add
shl
inc
add
and
jle
push
mov
jge
jne
sub
add
mov
inc
rcr
call
xchg
push
adc
(bad)
in
std
retf
arpl
mov
dec
xchg
cmps
sub
jne
outs
add
dec
aaa
push
fs
cwde
and
xchg
push
dec
ret
adc
outs
(bad)
scas
in
je
xchg
lods
fmul
inc
mov
jns
jl
inc
loop
lds
mov
sub
inc
jp
sbb
mov
fs
int3
out
sub
bound
stc
fstp
mov
pop
pop
loop
inc
je
xchg
sub
jne
stos
cmp
ja
scas
xor
outs
int
dec
jnp
(bad)
mov
call
sbb
hlt
(bad)
cmp
or
xchg
nop
jmp
mov
mov
pop
loop
test
pop
ret
xchg
jmp
push
jno
sbb
fcmovu
lods
popf
shl
ret
lea
ret
fwait
mov
adc
or
jecxz
ins
test
push
mov
mov
scas
lock
push
xor
iret
enter
add
sub
rcr
mov
jecxz
xchg
dec
and
sub
xchg
sub
or
fcom
mov
fst
scas
adc
push
(bad)
xor
adc
leave
loopne
das
cmps
sbb
ja
cmps
xchg
push
iret
and
dec
out
lds
xor
pusha
iret
icebp
and
shl
or
jmp
dec
outs
int
ficomp
push
xor
sbb
or
push
ret
push
cmp
xor
ret
ret
add
retf
rcr
xor
stos
mov
ds
jge
leave
repz
shr
mov
je
test
jl
mov
in
and
xor
sar
loope
repz
bound
pop
sbb
jnp
(bad)
jne
jbe
add
pusha
popa
pushf
mov
push
adc
push
xchg
jae
shl
jb
imul
test
outs
nop
xlat
adc
out
lods
inc
jmp
add
mov
cwde
sub
pop
or
cmp
push
xchg
push
sub
inc
and
clc
pop
mov
inc
or
stc
outs
jecxz
cmp
shr
je
mov
push
idiv
cmp
push
dec
push
and
push
jne
mov
or
imul
mov
out
mov
jg
and
adc
inc
jo
cmp
push
mov
ja
cmp
ds
imul
add
fild
mov
retf
int3
mov
jo
imul
xchg
inc
inc
jo
out
(bad)
mov
cmp
popf
push
mov
fstp
or
inc
data16
mov
ds
sbb
pop
(bad)
pop
pop
popa
push
and
inc
dec
leave
dec
adc
mov
fcom
(bad)
xor
sub
cld
loopne
lock
or
fistp
or
cmps
cmp
hlt
imul
in
das
mov
inc
xchg
fwait
xor
neg
adc
pop
lods
lds
outs
(bad)
mov
dec
jno
stos
pop
jg
call
stos
sbb
ins
(bad)
cdq
mov
adc
ror
in
lods
jns
or
lods
mov
mov
dec
call
mov
jge
aam
or
mov
sbb
add
inc
ja
hlt
push
test
fcomi
imul
push
mov
mov
(bad)
mov
mov
mov
into
or
mov
adc
mov
jb
(bad)
repnz
cmp
(bad)
or
jns
ficom
loope
sbb
es
scas
jne
shl
jmp
sub
cmc
cld
lods
mov
adc
(bad)
and
les
jp
sub
sub
adc
xor
int
mov
xchg
sub
mov
ins
or
icebp
jo
push
sbb
fdivr
ror
jp
out
mov
xor
retf
sahf
cli
adc
adc
cmp
(bad)
movs
mov
addr16
sub
sbb
sahf
mov
das
mov
lahf
sub
adc
mov
sub
mov
in
movs
fsub
mov
sub
nop
or
push
mov
sbb
mov
(bad)
clc
xchg
fptan
adc
push
in
addr16
lods
pop
hlt
cmc
aam
ret
imul
inc
xchg
xor
data16
inc
jmp
mov
adc
out
jne
jae
push
js
les
mov
pop
retf
jae
mov
fcmovne
add
retf
xor
cwde
mov
jnp
das
jl
das
jmp
scas
or
stos
int
popa
xchg
iret
(bad)
or
addr16
or
bound
outs
iret
sbb
mov
sbb
jno
mov
and
pusha
cwde
imul
mov
ss
cmp
xor
push
mov
outs
push
cmp
imul
jo
mov
xor
repnz
ds
add
js
xchg
jg
xchg
jmp
outs
fnstenv
mov
xchg
lods
mov
jl
and
add
pop
xor
mov
call
pop
lahf
js
mov
sub
xor
xchg
cmc
push
pop
mov
inc
in
ins
xor
jge
push
dec
iret
jns
jl
popf
mov
mov
adc
cmps
cmps
outs
mov
sbb
adc
daa
ror
jge
push
in
daa
mov
les
out
nop
test
pop
xchg
loope
outs
or
add
pop
(bad)
mov
fnstcw
inc
dec
sti
pop
jns
jns
sbb
adc
and
outs
(bad)
adc
mov
mov
cs
inc
fld
jl
int
jmp
jno
mov
push
jns
ja
out
lahf
out
add
lock
cmps
cld
repnz
dec
jb
jle
ins
int3
sar
in
iret
(bad)
call
xor
add
cmp
sahf
call
or
xchg
fsubr
and
push
ins
aad
sbb
push
xor
mov
pop
adc
in
stc
sub
sub
loop
pop
aaa
jnp
cs
push
or
sub
loope
mov
(bad)
call
ret
jae
les
dec
aas
(bad)
mov
pop
iret
or
xor
adc
adc
vmwrite
ret
loope
movs
push
push
xchg
cmps
ins
xchg
clc
fld
jb
jne
pop
xchg
adc
aaa
dec
aad
xchg
jg
and
inc
loope
test
add
push
enter
mov
stos
cmp
cwde
rcl
aad
iret
sti
jg
adc
(bad)
xchg
std
adc
std
leave
xlat
mov
inc
daa
and
sub
mov
dec
push
cmp
cs
mov
and
clc
neg
fbld
and
lock
or
jg
xor
ds
xchg
inc
loope
aam
sbb
pop
xchg
rcl
jnp
jl
jg
mov
dec
dec
shl
mov
sbb
and
(bad)
sub
mov
out
out
pop
adc
das
mov
stos
mov
or
sti
fucomp
sahf
adc
in
movs
retf
mov
inc
test
and
dec
test
or
pushf
xchg
xchg
mov
mov
fimul
(bad)
aad
ret
clc
jl
out
xor
pop
scas
mov
add
in
cmc
call
or
lahf
pop
adc
nop
mov
xor
scas
fld
push
(bad)
sub
shr
jge
rcr
leave
repz
and
outs
loopne
cmp
or
inc
sub
ffree
mov
ja
pop
in
retf
je
push
xchg
inc
shl
std
mov
push
jmp
pusha
test
je
push
sub
mov
cwde
iret
out
adc
(bad)
ins
retf
mov
test
jbe
inc
movs
in
jmp
shr
sub
jl
test
cmp
fistp
ins
retf
jg
mov
ins
cmp
lods
and
mov
xchg
jl
cmps
jecxz
sub
jl
dec
pop
mov
ins
adc
imul
mov
sbb
pop
retf
xlat
mov
dec
pop
aam
push
in
dec
cmps
je
addr16
lahf
or
cli
cld
cmp
ror
mov
lock
or
les
mov
iret
mov
pop
cld
outs
cdq
dec
ds
cmp
cmp
fild
stos
nop
out
lahf
(bad)
push
sub
push
push
jno
cmp
push
mov
push
jl
(bad)
sahf
jge
inc
mov
sub
leave
(bad)
aad
jecxz
fist
int3
inc
mov
out
fs
lds
out
bound
shl
icebp
mov
sub
add
std
cmp
scas
out
in
cdq
mov
mov
xchg
adc
daa
mov
push
push
jmp
mov
test
adc
mov
mov
cmp
and
cmps
jne
jbe
inc
cli
xchg
imul
xchg
cmps
mov
loop
adc
jle
lea
and
mov
sbb
lock
jecxz
nop
or
fwait
data16
pop
mov
dec
addr16
(bad)
and
xchg
jmp
mov
lock
xchg
push
sbb
add
and
and
sbb
leave
in
ret
and
mov
or
mov
inc
cmp
xor
xchg
inc
jmp
cdq
dec
dec
icebp
xor
sub
push
and
into
stos
(bad)
lods
pop
xchg
sbb
sahf
movs
ins
ds
jmp
call
dec
dec
cli
push
in
clc
clc
std
call
cdq
pop
(bad)
cmp
pop
sbb
push
arpl
fisttp
ins
cdq
mov
ss
aaa
mov
inc
mov
leave
mov
stos
test
jge
out
xchg
not
lods
adc
arpl
outs
jmp
es
sub
and
stc
(bad)
inc
pusha
nop
add
xlat
or
xor
jb
jnp
pusha
xchg
inc
jb
mov
ja
mov
mov
jmp
jle
sbb
leave
push
mov
aaa
push
mov
cli
test
out
push
mov
lods
push
adc
xchg
stc
sbb
xchg
xor
push
out
aas
dec
test
cmp
ins
test
mov
mov
adc
and
mov
fs
shr
pop
clc
xor
ffreep
ds
jo
mov
bound
push
cmp
adc
inc
aaa
test
jmp
mov
or
add
push
out
rcl
sbb
add
jge
out
cmp
fcmove
in
sti
loope
pop
add
(bad)
cli
add
mov
sar
jnp
jmp
cli
fidivr
fnstsw
and
test
jmp
cld
not
ins
cmp
icebp
scas
adc
fidivr
mov
cmp
adc
xchg
sbb
cld
sub
pop
call
fsubr
outs
stos
mov
popf
lds
add
mov
dec
or
lds
jne
iret
lahf
sub
ds
jl
inc
adc
push
stos
(bad)
pop
and
push
mov
mov
ret
clc
and
jb
push
or
dec
fsubr
test
ror
push
xor
adc
xchg
(bad)
jmp
in
(bad)
jle
ret
aas
push
or
hlt
call
adc
and
lea
pop
aad
dec
jne
xchg
adc
inc
(bad)
ret
retf
arpl
or
pop
adc
push
fwait
mov
adc
cmps
adc
mov
outs
push
movs
in
jge
cmps
pop
jno
or
dec
cdq
aaa
mov
movs
outs
iret
jecxz
aaa
les
popf
test
inc
fisttp
pop
test
shr
jb
jbe
retf
fucomip
inc
sbb
cld
aad
dec
mov
xor
fdiv
sbb
repnz
jnp
inc
mov
lds
xchg
mov
push
xor
cld
add
std
push
arpl
xchg
repnz
adc
fcomp
rcl
xlat
xlat
xor
cmc
jmp
xchg
mov
out
enter
and
mov
fstp
int3
mov
or
aas
test
sbb
cdq
or
(bad)
sar
push
fimul
rcr
jae
inc
cmp
test
and
rcr
arpl
shl
push
ins
pushf
adc
stos
push
dec
stos
push
ins
mov
push
aad
cld
in
iret
xchg
xor
aam
lock
mov
imul
fst
mov
xchg
pop
ret
adc
mov
fdiv
add
sbb
or
mov
mov
pop
dec
shl
in
jmp
cwde
mov
fs
es
out
and
or
or
ja
cmc
sub
xor
sub
jmp
stc
data16
ret
pushf
hlt
or
cmp
or
or
pop
mov
jl
push
mov
pusha
sbb
setg
push
cwde
rol
sbb
lea
dec
ret
outs
cmp
repz
das
psrad
sub
inc
scas
dec
jecxz
loop
xchg
sbb
or
pop
cmp
not
jmp
add
jecxz
sbb
fstp
adc
adc
iret
jns
jmp
cmp
cmp
mov
(bad)
or
pop
xor
push
inc
arpl
add
call
hlt
(bad)
and
stc
test
jmp
push
pop
xchg
push
test
fstp
(bad)
push
push
popa
jbe
add
push
and
popf
lods
je
les
or
xchg
outs
pop
jp
aam
adc
int3
sbb
pop
dec
adc
jo
sbb
call
scas
leave
cs
cdq
sbb
add
retf
jecxz
push
lock
hlt
repnz
inc
pop
mov
dec
add
mov
dec
pop
in
mov
pop
push
imul
jns
cmp
ss
enter
sub
sub
hlt
inc
stc
push
icebp
aad
cmc
dec
jnp
xor
cdq
in
adc
and
xchg
repnz
sub
bnd
call
xlat
sbb
jbe
jno
jg
pop
xchg
xlat
adc
addr16
sub
mov
push
jne
rol
(bad)
cmp
clc
enter
test
pop
out
add
mov
test
les
add
mov
les
aam
and
jmp
inc
jle
jae
call
es
test
in
mov
jnp
das
imul
sbb
dec
sbb
in
test
fisubr
cdq
sbb
inc
cmp
out
sti
sub
imul
dec
int
ins
inc
jmp
adc
mov
data16
clc
popf
nop
sbb
adc
dec
pop
inc
or
jle
ror
push
sub
and
push
jle
dec
cmp
in
in
sbb
pop
lods
icebp
outs
popf
sub
inc
inc
adc
pusha
mov
jecxz
xchg
lahf
dec
test
add
test
jecxz
iret
fisttp
dec
push
jp
or
dec
lock
adc
pusha
dec
cmc
stos
adc
push
xchg
fsubp
xor
mov
pop
or
sti
push
xor
sbb
push
call
jno
aaa
ins
mov
sbb
lock
adc
or
or
push
leave
fisub
out
arpl
cmp
mov
mov
repnz
mov
loop
jmp
outs
sbb
cmp
fdiv
mov
lahf
dec
(bad)
pop
test
out
xor
scas
and
pusha
inc
and
sbb
sub
call
pop
mov
add
cmps
pusha
sti
adc
dec
mov
pop
jnp
stos
fcmovnb
xchg
sbb
sti
xor
xchg
ror
mov
sub
cmpxchg
mov
jb
dec
push
dec
or
cmps
rep
aam
std
push
push
(bad)
fisttp
fwait
leave
dec
push
xchg
dec
pusha
es
mov
inc
add
std
xor
popf
cmp
pop
(bad)
mov
push
ja
push
daa
jne
push
fsubr
shl
sbb
call
mov
into
(bad)
in
das
fnstenv
mov
gs
cld
push
push
add
jne
mov
cmps
pop
push
adc
ror
popf
inc
int
icebp
mov
mov
push
cmps
js
jns
jmp
and
mov
stos
xchg
pop
xor
ret
inc
xor
pop
jnp
(bad)
mov
xor
daa
js
fsubr
add
ret
in
ret
icebp
fstp
cmp
sti
lods
sbb
jo
iret
ror
pop
push
call
pop
xor
adc
xchg
dec
arpl
fdiv
data16
in
ret
dec
jle
and
or
ret
rol
and
repnz
jl
sti
arpl
icebp
push
xchg
hlt
test
aad
mov
inc
push
cmps
mov
iret
jnp
sbb
int3
cmp
int3
stos
jb
inc
popa
test
jo
adc
push
xchg
dec
lds
xchg
jmp
js
fcmovnu
jp
enter
inc
sub
ret
mov
xor
imul
jbe
fneni(8087
sar
xchg
cmp
mov
sbb
retf
popa
push
popf
stc
jns
out
mov
iret
shl
data16
sub
add
dec
jmp
rcr
xchg
jge
aas
and
lods
inc
xor
js
mov
stos
ins
sub
repz
cmps
(bad)
iret
xchg
xor
out
mov
adc
clc
adc
dec
(bad)
out
push
add
ffree
pusha
aad
ins
mov
les
cmps
popf
(bad)
je
rol
inc
(bad)
xor
(bad)
cli
sbb
js
jnp
or
dec
mov
mov
push
sahf
sahf
dec
in
inc
mul
mov
es
test
push
inc
mov
cmps
adc
xlat
adc
add
int3
and
addr16
jecxz
lods
xor
and
mov
pop
sbb
mov
jp
push
data16
dec
jmp
rol
ja
bound
aaa
jns
add
sub
cwde
mov
jb
jmp
bound
pop
mov
lahf
jo
jl
xor
mov
in
dec
pop
or
push
(bad)
mov
jnp
adc
xchg
aad
add
aad
lahf
cli
sub
mov
mov
dec
mov
seta
call
jmp
adc
aaa
pop
leave
and
cmp
iret
aam
xchg
mov
mov
ja
dec
ja
and
or
ficom
jne
jo
out
loope
cwde
dec
sub
xor
inc
scas
push
imul
inc
cdq
dec
pop
and
xchg
fsubr
std
xchg
stos
mov
inc
add
popa
adc
xchg
mov
data16
pusha
cmp
sub
icebp
mul
lods
xchg
jp
clc
ins
mov
stc
rcr
jg
ret
jle
lods
ror
or
movs
(bad)
jb
(bad)
movs
movs
or
sbb
push
div
aad
rcr
scas
dec
(bad)
imul
mov
aas
mov
(bad)
push
gs
retf
jmp
inc
and
imul
mov
xor
or
rol
in
pusha
sbb
nop
jg
pop
xchg
mov
xor
push
scas
xor
lods
mov
aad
stc
jecxz
in
mov
out
mov
idiv
mov
movs
sub
inc
rcl
mov
fsubr
scas
hlt
fstp
adc
pop
jmp
sub
adc
cwde
jecxz
cmp
adc
fsubp
les
rol
(bad)
jle
leave
pop
or
mov
test
dec
pop
or
cmp
mul
and
cmp
loop
inc
xchg
xchg
dec
mov
in
push
xor
aad
test
sub
cwde
pop
cld
and
dec
push
stc
push
icebp
mov
daa
sbb
mov
fbstp
ds
sbb
adc
imul
jae
push
xor
inc
cmps
cmps
pop
add
dec
cmc
dec
bound
call
loopne
scas
mov
rcl
dec
mov
add
jmp
mov
mov
dec
lods
pop
fldcw
lods
mov
sub
pop
lods
in
push
dec
inc
xor
add
retf
cmp
ror
shl
adc
inc
call
push
test
stc
js
push
or
jg
popf
pop
sub
fisub
dec
div
push
or
pushf
mov
div
je
and
xor
inc
(bad)
(bad)
gs
test
push
rcr
jmp
test
mov
repnz
and
inc
std
int
cmp
arpl
inc
or
fisttp
add
mov
mov
mov
pushf
push
cmc
sub
loopne
cwde
mov
jmp
pop
xor
cmp
sbb
xor
dec
pushf
push
enter
out
lods
pop
inc
mov
adc
add
or
js
inc
rcl
das
xchg
inc
pop
push
and
adc
push
test
sub
jmp
stos
sbb
mov
jle
sub
jmp
ins
ins
mov
aaa
movs
test
fild
and
or
push
int3
mov
in
xchg
(bad)
loopne
xchg
dec
mov
loopne
lock
test
sbb
cwde
int
xchg
mov
sub
test
out
mov
inc
into
es
xchg
add
retf
fwait
push
retf
cmc
in
pop
inc
test
jbe
and
pushf
and
jns
mov
jmp
stos
outs
sbb
ja
clc
ficomp
outs
cli
mov
pop
and
aaa
adc
loopne
scas
cmps
ja
cmp
jp
mov
movs
rcr
stc
into
test
mov
or
in
bound
clc
add
sar
and
ss
stos
bound
loope
dec
dec
mov
and
mov
xchg
push
cs
xchg
cdq
rcr
(bad)
test
pop
adc
jb
dec
and
arpl
dec
movs
or
idiv
adc
popa
mov
outs
aad
es
loopne
test
dec
pop
add
cmp
add
push
xchg
das
lods
out
jne
mov
jnp
sub
pop
adc
jne
clc
outs
scas
push
cmp
xor
rcl
dec
push
xor
jns
and
push
inc
cmp
in
xchg
sbb
adc
push
ja
or
ins
popf
stos
xchg
out
pop
cmps
fistp
mov
or
daa
(bad)
rol
mov
adc
mov
stc
ds
aaa
cmp
xor
sub
jo
push
add
std
xchg
inc
rol
and
mov
ret
ss
imul
shl
popf
ins
mov
loop
int3
xlat
inc
xor
add
add
stos
mov
and
popa
fsub
jno
dec
pusha
adc
jne
les
mov
in
inc
fld
adc
and
outs
aam
add
sub
lods
pop
push
in
scas
imul
jnp
fnstsw
add
push
inc
outs
mov
and
pop
loop
sti
xlat
sti
sub
test
mov
repz
and
sbb
xchg
pop
mov
xlat
out
int3
mov
mov
xlat
mov
xor
push
dec
out
popa
shl
xchg
add
mov
fadd
cwde
pop
nop
lods
push
shl
pop
cdq
sub
xchg
pop
ret
add
xchg
cmps
mov
cwde
mov
stc
fimul
std
jmp
or
or
and
movs
jecxz
adc
pop
adc
test
jbe
push
push
adc
retf
mov
pop
jle
mov
cmp
mov
lea
xor
mov
(bad)
or
sbb
scas
and
push
ret
mov
xor
jb
clc
mov
jno
lds
xchg
in
sub
push
inc
into
jo
pushf
jnp
das
or
pop
adc
js
mov
or
shr
repnz
in
adc
jg
aaa
es
mov
or
ins
out
or
or
ja
or
shl
ins
pusha
cli
pop
call
enter
bound
pop
test
cs
push
imul
xor
push
add
jne
or
ret
or
nop
pusha
mov
mov
jnp
test
jbe
push
and
outs
into
loope
je
pop
loop
lods
push
sub
cmp
shr
pop
iret
dec
dec
enter
sbb
xchg
and
cmp
dec
adc
sub
call
add
(bad)
cmp
outs
pop
fs
mov
in
jb
lods
div
test
(bad)
jl
out
bound
mov
dec
nop
inc
fcom
inc
sub
xchg
push
or
add
xor
inc
loop
push
call
leave
je
clc
jne
mov
mov
jo
xlat
cmp
aad
adc
pop
jge
pop
(bad)
inc
aas
lea
jg
pop
addr16
fdiv
ins
(bad)
or
push
mov
cmp
pop
add
loop
push
lahf
leave
adc
rol
cli
mov
sahf
pop
cwde
mov
stc
add
cmp
jmp
loope
fmul
xchg
cmp
rcl
ret
imul
(bad)
push
(bad)
xchg
mov
dec
jmp
dec
xchg
loop
mov
fstp
fcomi
xchg
in
lds
imul
jmp
sub
dec
jg
call
popf
inc
or
pop
div
repz
(bad)
out
outs
xlat
inc
call
dec
imul
iret
ins
aas
sub
xor
xchg
or
ret
repz
pop
loopne
adc
xchg
add
inc
in
fwait
les
aaa
or
push
mov
retf
jecxz
jno
or
adc
adc
movs
xchg
lds
jp
cdq
test
outs
xchg
cmp
addr16
movs
js
cwde
test
popf
rol
mov
mov
call
rcl
cmp
mov
icebp
stc
arpl
out
xchg
outs
sub
add
test
sub
pop
(bad)
dec
adc
loope
in
jp
cmp
cmp
inc
mul
push
adc
or
iret
xor
cld
ja
ror
xor
popa
stc
shr
push
int3
fmul
sbb
out
lds
xor
sub
inc
or
fcom
xchg
fwait
sbb
outs
pop
mov
push
aas
push
sbb
inc
cmc
dec
pcmpeqb
cmp
fdivr
movs
mov
fcom
mov
je
jae
test
pop
jecxz
js
ja
xor
pop
scas
jnp
inc
sub
leave
jecxz
ret
shl
pop
aas
pop
and
pop
mov
test
mov
xchg
cmp
cwde
popf
in
mov
out
ins
iret
clc
push
(bad)
repnz
in
xchg
out
sahf
mov
or
das
add
(bad)
sub
xchg
xor
mov
inc
fcom
stos
int
test
mov
push
mov
mov
mov
and
cmp
cwde
push
and
aas
add
std
ret
pushf
addr16
cmps
(bad)
dec
mov
mul
hlt
loope
xor
jge
mov
idiv
ficomp
cmp
lea
push
or
or
sbb
mov
imul
leave
inc
xor
ud1
in
dec
cmp
outs
xor
dec
nop
sub
inc
pop
jp
mov
ret
pop
inc
sbb
xor
dec
pop
nop
jnp
daa
aaa
add
fcom
jae
xor
mul
cwde
push
xor
fsub
ret
xchg
and
inc
out
and
xchg
add
(bad)
mov
shr
jp
xchg
mov
cwde
jmp
mov
mov
mov
loope
xchg
jae
imul
or
popf
in
jns
cwde
cmp
aad
xchg
fst
sbb
repnz
push
inc
dec
jb
out
(bad)
repz
jbe
dec
xchg
push
into
sub
je
and
call
outs
repnz
inc
fadd
cmc
mov
pushf
push
push
mov
rcl
pop
add
mov
nop
push
and
push
sub
xchg
ins
fsubr
add
fistp
(bad)
ss
sbb
inc
fist
ds
lds
pushf
push
pop
jne
ins
daa
push
bnd
pop
jmp
and
mov
daa
(bad)
imul
mov
dec
jecxz
retf
aas
mov
mov
outs
push
mov
xchg
jge
add
sbb
popa
inc
std
or
test
mov
enter
jno
dec
inc
rol
lea
inc
fdivp
mov
loope
imul
imul
ret
fld
ror
out
out
cli
ins
aaa
sbb
or
mov
aam
inc
push
aad
sbb
pop
add
cld
dec
stc
pop
sub
in
fnsave
in
push
push
repnz
inc
jle
mov
pop
ret
dec
scas
dec
xchg
jmp
or
fisubr
cli
push
clc
cmps
sub
scas
inc
xchg
xor
aaa
push
cmc
fimul
push
sbb
sbb
ror
sahf
(bad)
jp
imul
ja
pop
(bad)
jo
ins
movs
mov
cmc
or
les
arpl
es
ror
dec
js
es
xor
xor
test
xchg
cmp
dec
fist
dec
push
pop
adc
xchg
aam
outs
sbb
fwait
xor
ret
je
push
test
mov
adc
mov
(bad)
shr
loope
cmp
pop
call
inc
sbb
or
inc
cmp
adc
mov
mul
xchg
clc
adc
cs
mov
adc
mov
fcomi
mov
fdivr
or
pop
shl
punpckhwd
pop
push
sbb
push
dec
mov
in
xor
sbb
test
dec
in
sub
pop
push
sbb
outs
push
(bad)
(bad)
mov
fs
or
push
daa
pop
and
pop
adc
out
jecxz
adc
inc
mov
sbb
pop
xchg
and
retf
movs
nop
and
dec
pop
add
and
movlps
jne
adc
jae
xlat
jl
push
or
mov
in
loop
div
int
xor
fcmovnb
sbb
sbb
mov
inc
mov
push
lds
jmp
mov
adc
inc
test
jns
sbb
repz
call
adc
loop
sbb
fiadd
jb
sahf
es
xchg
gs
cld
sub
pop
mov
inc
adc
js
rol
adc
iret
out
leave
sub
loop
dec
fisubr
in
test
add
jae
push
sub
cli
test
outs
xor
stc
dec
out
outs
push
out
xchg
mov
dec
inc
and
mov
sbb
mov
jg
pop
data16
xchg
aaa
push
xchg
rcr
fisttp
or
mov
cli
adc
(bad)
ret
xor
push
retf
jp
clc
dec
sub
sbb
or
adc
dec
mov
loope
add
mov
sbb
aam
sbb
mov
out
pop
leave
pusha
jbe
and
pop
sbb
inc
jl
push
jle
add
add
add
jl
mov
jb
cwde
test
hlt
xchg
ror
lahf
cmps
xchg
cmp
sahf
leave
out
sub
lea
pop
cmc
sub
dec
lock
les
stos
ss
pop
mov
lods
cmp
(bad)
adc
cs
sub
sub
sbb
mov
and
and
bound
aaa
leave
enter
stos
data16
es
psubq
or
lock
jbe
xchg
nop
aaa
push
sbb
bnd
rol
adc
test
in
enter
mov
retf
push
add
push
dec
sbb
loopne
inc
cli
mul
out
das
and
je
cwde
es
call
loop
sti
stc
arpl
mov
cmps
sub
maskmovq
neg
in
fsubr
shl
popf
in
pop
aam
and
imul
and
das
push
pop
adc
cwde
hlt
std
out
push
call
popa
stos
pusha
mov
xlat
sbb
ja
push
out
push
into
call
iret
xlat
mov
lods
mov
arpl
pop
add
jg
lock
mov
cmovne
jae
inc
cmc
ss
push
mov
ins
ret
ss
dec
xor
mov
mov
xchg
jge
pop
ins
and
std
inc
xor
mov
out
jne
push
ja
cli
movs
mov
stos
ret
add
sti
jg
dec
outs
std
push
fisub
(bad)
lods
cmp
jnp
aam
int
pop
add
cmp
mov
mov
push
lods
dec
fwait
pop
aam
icebp
push
enter
mov
mov
or
sahf
xchg
fcom
xor
sbb
es
clc
clc
aam
mov
int3
retf
rol
(bad)
pop
xchg
mov
mov
and
push
dec
arpl
cmp
idiv
adc
add
popa
ror
adc
lock
mov
mov
fcmovnbe
aaa
pop
leave
mov
in
mov
mov
jge
jb
inc
stos
out
loop
sbb
mov
sbb
jecxz
sbb
and
(bad)
rol
add
pop
fs
and
jnp
nop
mov
xchg
les
movs
das
fs
mov
or
push
cmp
iret
xor
add
sbb
icebp
test
cwde
pop
cmp
xor
mov
inc
mov
lock
fidiv
sub
pop
sub
mov
div
jecxz
mov
inc
aad
inc
inc
icebp
jno
jno
cmps
js
repnz
(bad)
mov
les
rcl
xor
js
data16
xchg
bound
test
lods
jo
gs
mov
and
push
jg
cdq
dec
bound
aam
in
clc
mov
inc
push
sub
outs
xlat
and
mov
sub
ror
das
mov
pop
dec
dec
cmps
mul
mov
pop
sub
cmp
mov
or
test
mov
ror
cmp
push
push
sub
sbb
push
mov
ins
out
stc
popf
js
jnp
mov
sub
mov
pop
jo
(bad)
call
push
lahf
push
bound
lds
jg
cmp
fmulp
jecxz
arpl
cmp
xchg
dec
adc
jmp
push
pop
cmp
data16
out
jecxz
pop
and
loop
dec
pop
cwde
mov
dec
pop
pop
imul
xor
pop
xchg
rcr
push
dec
jnp
push
cmp
lea
icebp
cmp
mov
sub
cmp
and
jne
je
mov
sub
mov
mov
imul
cmps
mov
arpl
push
inc
xchg
or
leave
cwde
add
pop
inc
xchg
pop
clc
xchg
mov
shl
or
shr
int3
lds
adc
adc
retf
sub
loopne
jecxz
push
iret
xchg
sub
test
shl
and
lods
sbb
retf
or
scas
jecxz
dec
sahf
xor
imul
dec
les
mov
fcomi
ret
cmp
adc
test
and
repnz
dec
pop
push
ficom
push
popf
or
test
es
jae
or
aaa
movs
xor
outs
inc
dec
push
sub
adc
ins
mov
push
and
iret
push
out
jne
fcmovbe
(bad)
repnz
sbb
sahf
repnz
cwde
aaa
stos
into
push
dec
stc
lods
imul
xchg
push
pushf
mov
jge
mov
push
push
pop
xchg
xchg
adc
mov
popf
in
add
dec
arpl
rsqrtps
leave
(bad)
xchg
aad
xchg
int
test
(bad)
cmp
pop
mov
fstp
xor
adc
pop
push
or
lds
jge
add
movs
(bad)
fidiv
mov
dec
dec
scas
mov
dec
push
xchg
call
mov
jp
xor
cmp
and
pop
sub
pop
mov
sbb
ins
adc
cli
push
loop
mov
cli
xchg
pop
push
pop
xchg
ss
lea
aas
xor
jne
gs
fldcw
js
mov
cmp
or
jbe
sub
ret
bound
cli
test
fldcw
jmp
out
dec
pop
jo
push
mov
dec
adc
fs
test
mov
cmp
sbb
jo
jp
add
xchg
sub
mov
push
test
loop
out
add
mov
(bad)
gs
push
movs
loop
cmp
adc
cmp
xor
adc
pop
jg
mov
ror
and
lds
shr
fs
test
inc
xor
cmp
pop
add
add
sti
lock
clc
cmp
ds
dec
ds
fwait
push
sahf
sahf
popa
fdiv
popa
cmp
pop
jmp
mov
or
mov
lea
rcl
and
sbb
stos
out
lock
out
out
mov
inc
aaa
aaa
sti
or
inc
test
xor
(bad)
mov
mov
mov
jmp
ins
or
fs
sbb
and
xchg
frstor
push
sub
cmp
mov
ror
xchg
or
or
scas
jecxz
fstp
out
inc
loopne
xor
inc
popa
retf
ror
stos
inc
or
js
enter
in
stc
pushf
pop
call
lods
test
aam
shr
test
mov
cmp
ds
and
daa
jecxz
xor
sub
adc
data16
jae
sub
movs
mov
mov
add
test
adc
(bad)
js
sbb
pop
jl
mov
inc
mov
pop
scas
cmp
mov
clc
adc
adc
stos
jecxz
xor
stc
fdivr
stos
mov
xchg
ret
dec
pop
xor
mov
xor
inc
sub
test
dec
cli
sub
mov
ret
je
out
movs
sbb
xchg
jb
(bad)
pushf
and
adc
or
pop
mov
mov
push
enter
(bad)
aam
aas
push
mov
jno
shl
jnp
fs
push
out
dec
pop
pusha
js
sbb
xchg
xchg
push
jno
test
fcomp
jae
ins
cmp
js
ror
fwait
jg
mov
out
out
js
xor
push
inc
stos
out
cwde
push
sub
jne
fwait
xor
test
iret
je
mov
ja
scas
scas
push
jmp
mov
push
xor
cmp
and
jae
pop
adc
xchg
inc
mov
popa
popa
cli
sti
xchg
inc
leave
rcl
and
fild
jmp
jmp
ds
inc
int
(bad)
icebp
cmp
out
(bad)
sub
movs
imul
mov
jmp
retf
mov
mov
push
sbb
and
xchg
ins
or
sbb
mov
jmp
repz
adc
shr
sub
mov
and
dec
ins
cwde
adc
push
(bad)
jnp
pushf
daa
push
leave
mov
pusha
jbe
outs
loope
pushf
adc
lods
cmp
and
xchg
pop
test
stos
xor
shr
ret
add
dec
cs
or
inc
mov
or
ins
ret
imul
pop
mov
fisttp
test
arpl
aas
loope
inc
push
data16
dec
push
push
cld
and
push
push
(bad)
outs
sub
sub
test
les
fimul
test
int3
xchg
mov
ret
sbb
mov
aam
movs
and
lods
fisubr
(bad)
(bad)
stos
data16
jmp
dec
ja
inc
std
ins
xchg
xchg
cmc
mov
sub
out
sub
int3
mov
or
jp
xrelease
ficom
loop
push
sub
rcl
sbb
mov
loopne
and
test
lods
sahf
enter
xchg
sbb
lahf
pop
xchg
adc
dec
and
xchg
mov
gs
jmp
fwait
ror
pop
(bad)
push
dec
inc
scas
call
mov
lds
mov
push
pop
xchg
pop
adc
je
cmp
push
sub
aad
push
jmp
xor
xor
push
imul
aad
lock
(bad)
(bad)
in
pop
mov
fnstenv
inc
cli
clc
out
push
and
js
aam
jae
sbb
pushf
iret
out
cs
movs
and
imul
dec
fwait
jne
push
xchg
push
fistp
and
xor
lea
mov
mov
inc
xchg
ret
mov
scas
ins
bswap
mov
push
cmp
test
adc
xor
push
(bad)
loope
lods
mov
stos
outs
push
adc
push
sub
pop
stos
pop
in
pop
jno
je
repnz
jl
xchg
and
cmps
adc
mov
add
ret
data16
leave
rol
cmps
mov
pusha
xchg
dec
out
movs
adc
adc
leave
idiv
cmp
call
rcr
sub
xchg
xchg
pop
rol
loope
adc
jns
xor
or
xchg
or
mov
je
push
jge
loop
adc
xor
(bad)
(bad)
jnp
(bad)
imul
xchg
jne
js
push
jbe
loopne
sub
(bad)
movs
pop
add
sbb
xchg
mov
jl
in
push
add
sbb
dec
xchg
mov
xchg
imul
xchg
rcl
arpl
cli
cmp
hlt
jmp
fist
sbb
xor
push
pop
mov
jne
fstp
xchg
cmp
or
dec
popf
cmp
lods
sbb
sub
ret
sub
mov
sub
jae
mov
mov
jg
and
xchg
dec
lods
nop
cmp
data16
or
pop
sbb
mov
xor
pop
imul
sbb
sub
jmp
sbb
ret
cmp
int3
push
mov
loop
and
cmp
lea
test
pop
jmp
or
mov
pop
jg
ret
shr
dec
inc
dec
iret
mov
mov
pop
xchg
inc
cs
xor
inc
xor
jmp
push
inc
inc
hlt
adc
push
pop
dec
pop
mov
mov
aas
pop
fiadd
and
pop
nop
cld
into
jl
xchg
ror
inc
sbb
js
mov
xor
out
inc
pop
inc
das
call
or
outs
dec
sub
popa
fwait
dec
pop
call
scas
cli
cmps
lods
xchg
push
jecxz
imul
push
sub
out
lea
cmps
das
pop
push
scas
adc
cwde
jmp
pop
pause
mov
mov
jbe
jmp
lds
mov
hlt
sub
in
xchg
jnp
rcl
jae
mov
or
leave
out
and
imul
push
xchg
mov
ins
shl
xlat
jl
and
je
ins
shl
cmp
inc
push
imul
dec
(bad)
icebp
dec
lds
data16
out
fcomp
js
sbb
test
addr16
pop
cmp
stos
cmp
jne
std
out
out
addr16
push
(bad)
cld
imul
push
sbb
cmp
fild
or
enter
cmc
mov
jns
in
sub
addr16
mov
push
int
loop
inc
popf
cmp
mov
mov
pop
pop
je
ja
and
int3
push
sub
lods
bnd
in
push
out
test
pop
inc
dec
mov
out
int
adc
loop
adc
call
enter
pop
xor
aas
inc
outs
pop
push
fwait
xor
mov
movs
popa
(bad)
fmul
mov
sub
inc
push
sti
adc
pop
xor
movs
lock
ins
das
gs
mov
mov
inc
dec
add
and
or
adc
push
pop
sub
cmp
pop
std
mov
mov
mov
shl
pusha
fwait
lahf
jmp
dec
jae
fcmovb
mov
paddsw
inc
cmp
mov
in
sub
xor
inc
push
inc
clc
icebp
cmp
imul
dec
test
mov
cli
jg
clc
and
fs
sub
movs
adc
jmp
pop
daa
test
rcr
jle
cli
imul
add
cmp
jecxz
push
je
stc
lock
loop
test
cmp
inc
push
out
repz
(bad)
adc
pushf
adc
aas
dec
fsubr
stos
inc
jecxz
fadd
popf
sbb
int3
in
pop
ret
push
jae
test
cs
stos
pop
dec
test
mov
pop
ret
mov
movs
fwait
pop
jle
(bad)
dec
call
push
fucomip
out
sbb
loope
jo
xchg
jmp
inc
push
jg
cmp
dec
and
xor
(bad)
jns
adc
hlt
(bad)
arpl
cmp
push
mov
popaw
add
jle
mov
lahf
sbb
fild
sub
or
add
cmp
adc
aas
add
add
hlt
out
push
cmps
xlat
inc
add
cld
data16
call
adc
movs
js
mov
mov
add
std
xlat
cs
jbe
mov
mov
mov
(bad)
pop
int3
push
ret
inc
(bad)
out
cmp
loop
pop
sbb
call
imul
or
inc
inc
xor
aad
sub
jns
lods
daa
push
or
cmps
pusha
out
mov
mov
jb
add
adc
outs
fldcw
test
jge
xchg
push
xchg
add
jo
int3
inc
mov
dec
movs
out
fabs
xchg
cmp
or
pop
ror
xchg
push
mov
xor
cmp
and
cmp
jecxz
shl
fwait
add
xor
test
adc
pop
out
lds
push
mov
mov
jp
sub
popa
cs
mov
xlat
aaa
in
fistp
mov
(bad)
int3
out
repnz
xchg
sub
jae
ret
iret
gs
in
call
mov
call
mov
aas
and
jne
movs
ss
je
cwde
and
sub
(bad)
repz
out
in
dec
aam
jns
(bad)
movs
fucomi
inc
dec
mov
jp
pop
sbb
shl
jb
xor
sbb
cmps
imul
add
xchg
loopne
ins
mov
data16
inc
cwde
rol
inc
push
dec
cmp
inc
or
xor
imul
cs
xchg
xchg
mov
push
push
loope
int
mov
test
lock
repz
je
dec
ror
sbb
iret
sub
int3
dec
leave
mov
aad
jnp
cli
pop
mov
or
mov
(bad)
cmp
cs
push
xchg
out
div
shl
jge
out
add
mov
fiadd
cld
and
mov
repnz
mov
dec
pop
add
pop
xchg
pop
lds
cmp
rol
neg
mov
mov
mov
ret
cmp
xchg
sub
pop
cmps
inc
retf
cdq
gs
fsubr
xor
out
stos
arpl
cmp
jne
or
and
add
dec
sti
sub
movs
ds
and
aam
pop
add
push
pop
cli
pop
jae
xchg
mov
add
loope
sbb
inc
(bad)
leave
xchg
pop
cwde
outs
aas
es
fmul
pmullw
loope
xchg
adc
mov
out
push
fdivp
out
pop
mov
lock
addr16
dec
mov
add
sub
test
add
loop
cld
gs
int3
inc
xchg
out
xchg
test
lods
cdq
(bad)
mov
sahf
gs
cs
bound
xchg
mov
fnstcw
bound
fcomp
and
adc
xor
sar
mov
pop
push
gs
push
in
cmp
sbb
into
dec
test
into
lods
test
and
stos
shl
jge
mov
stos
inc
aam
cmp
out
mov
cli
fsub
or
xlat
add
mov
adc
xor
retf
cmp
idiv
or
jns
(bad)
iret
jo
aam
outs
xchg
(bad)
push
push
sti
icebp
loop
or
push
or
mov
and
cmp
and
lods
cmps
fs
mov
lds
out
lds
sbb
push
scas
pop
pop
push
mov
invd
and
ins
add
shl
test
sub
imul
fwait
inc
call
and
int
push
adc
mov
lea
ins
mov
adc
mov
fwait
pop
cmp
cmp
sub
dec
jp
sti
mov
into
loop
push
outs
lods
mov
adc
fmul
or
sub
sub
hlt
xor
add
jmp
(bad)
xchg
and
cs
pop
lahf
hlt
jns
or
in
pop
fwait
nop
mov
ins
inc
lock
sahf
fcomp
loope
sub
fcom
and
lock
and
sbb
jmp
lods
pop
call
mov
mov
scas
pusha
rcl
je
push
jecxz
sub
xchg
push
mov
add
fsubr
sbb
fdivr
ins
adc
sub
mov
jbe
dec
out
stc
mov
xchg
cmp
gs
out
aam
mov
pop
out
mov
push
jbe
les
inc
lods
mov
jne
pop
xchg
lods
or
les
mov
xchg
jge
or
jns
pop
jno
pushf
and
loope
xchg
xchg
dec
xchg
mov
jae
cmp
dec
out
clc
mov
jns
mov
mov
xor
out
or
mov
mov
ja
xor
mov
(bad)
out
or
and
scas
lock
stc
xchg
sbb
pop
xchg
pop
retf
mov
outs
cli
(bad)
adc
mov
sbb
jno
push
test
cs
adc
jmp
push
dec
inc
xor
pop
adc
in
(bad)
in
or
mov
popa
inc
cld
pop
mov
fmul
mov
mov
push
ret
push
out
push
aam
bts
popa
xlat
fmul
rcl
das
aas
push
fwait
daa
int3
inc
jge
sti
xchg
or
mov
pop
adc
(bad)
aam
in
adc
bswap
mov
dec
out
test
iret
add
adc
stc
aaa
aam
add
(bad)
es
mov
rcr
popa
movs
sar
arpl
push
movs
mov
cmp
xchg
shl
cmps
mov
inc
repz
mov
mov
push
(bad)
pusha
jns
mov
loopne
nop
mov
(bad)
fs
pop
mov
(bad)
jl
aad
mov
push
cdq
mov
div
cmps
add
ret
fsub
imul
shr
ss
std
cmp
in
int
mov
out
push
xchg
xor
and
dec
sahf
add
mov
sub
inc
cmp
add
scas
or
pop
adc
movs
leave
mov
gs
rol
push
push
in
imul
cmps
dec
dec
icebp
mov
mov
add
rol
mov
xor
inc
bound
mov
sar
mov
pop
test
dec
ins
add
lahf
rcl
cmp
sub
movs
addr16
sbb
mov
fbld
mov
sti
add
mov
(bad)
inc
adc
push
add
retf
test
adc
xor
adc
lods
idiv
pop
fucomip
loope
and
call
in
fisubr
test
push
push
daa
or
push
sub
dec
aas
xchg
sbb
adc
inc
mov
push
mov
xchg
bound
scas
add
sub
cdq
and
and
inc
jl
daa
push
push
xor
or
pop
cmp
sbb
push
dec
fcom
sbb
imul
push
jle
mov
fstp
fiadd
rcr
loop
gs
fwait
cmps
sbb
mov
enter
bound
retf
pop
xor
ins
add
mov
int3
ret
in
call
pop
add
data16
inc
jl
cmp
push
inc
test
xchg
leave
addr16
loope
mov
push
jge
out
pop
adc
inc
push
out
sbb
adc
and
gs
mov
pop
fdiv
fidiv
repnz
stos
xor
mov
rcr
mov
fisttp
xchg
push
in
mov
retf
jnp
xor
cmp
in
mov
test
stc
sub
xor
out
loopne
retf
leave
retf
push
xchg
sbb
loopne
dec
or
sub
pop
pop
mov
add
dec
test
stos
mov
std
ja
sbb
sbb
sbb
xchg
mov
and
or
aad
or
add
out
(bad)
jmp
push
xchg
(bad)
jp
pushf
jb
inc
xor
inc
in
mov
sub
ror
les
sbb
ret
in
inc
xor
sbb
scas
lods
out
push
in
mov
ins
data16
je
dec
into
cmp
jg
ds
popa
and
das
faddp
mov
movs
sub
test
lods
add
or
mov
sbb
in
movs
pop
jl
fldcw
adc
fcmovne
push
xor
sub
pop
dec
fild
mov
fmul
mov
jg
jecxz
xchg
mov
push
addr16
neg
sbb
adc
movs
sti
rcl
lahf
mov
mov
cwde
xchg
dec
hlt
xchg
shl
cmc
sub
push
sub
clc
push
mov
add
inc
imul
push
test
repz
adc
xlat
scas
loop
lea
cwde
inc
jno
jno
dec
sub
and
loope
ss
test
cwde
fist
mov
jmp
adc
aad
dec
stos
pop
push
jmp
pop
pushf
mul
or
sti
adc
push
(bad)
arpl
sub
inc
cmp
in
lock
test
shr
retf
repnz
sub
pop
stos
cmp
jo
xchg
mov
add
or
push
fisttp
push
cdq
mov
out
test
repz
cmc
cmp
clc
icebp
and
push
fdiv
daa
sub
cwde
mov
call
repnz
lods
push
das
fadd
lea
xchg
enter
dec
(bad)
dec
inc
mov
xor
sahf
sbb
jle
aam
(bad)
ret
pop
add
push
mov
mov
mov
in
mov
push
add
pop
push
hlt
movs
sar
fsubr
into
stos
and
pop
sbb
adc
mov
outs
cmp
mov
xchg
push
and
xchg
push
sbb
jle
ins
inc
pop
rcl
(bad)
popf
mov
inc
mov
lea
pop
push
sub
dec
aaa
ror
or
push
pushf
dec
fcmove
popa
aam
add
int3
dec
sub
out
retf
xchg
jne
xor
retf
sbb
nop
xchg
add
test
and
sahf
and
mov
pop
sbb
mov
cli
jns
push
cmp
popa
stc
push
push
add
add
adc
loop
jle
xor
add
sub
jns
lods
rol
int
int
jb
fstp
dec
aam
push
adc
jnp
mov
adc
stc
pop
mov
popa
inc
pop
mov
dec
push
mov
mov
lock
aam
sbb
add
test
sti
loope
mov
imul
sbb
jp
push
and
mov
pop
or
jmp
or
mov
pop
xchg
fnstenv
popf
add
call
clc
mov
dec
add
push
outs
push
scas
cld
rol
(bad)
mov
retf
aam
jg
pop
call
cmps
xor
pop
jl
lahf
movs
jbe
cli
dec
mov
pop
fisubr
ror
loopne
jbe
xchg
mov
paddusw
dec
mov
rol
adc
pop
cmp
fisubr
pop
push
daa
daa
or
data16
retf
imul
ror
ds
mov
sbb
aas
repnz
jge
xor
lds
jmp
gs
rol
je
add
iret
mov
icebp
(bad)
call
adc
fdivr
push
fadd
jl
ret
not
in
icebp
repz
out
into
call
pop
dec
loop
dec
sbb
sub
mov
or
retf
scas
add
mov
loopne
in
mov
out
ja
(bad)
retf
(bad)
push
xchg
test
call
aaa
lock
mov
(bad)
xchg
inc
sub
jno
cdq
(bad)
lahf
inc
stc
sbb
retf
ret
jns
icebp
jmp
inc
movs
lock
int
cmp
jp
popf
ret
icebp
in
das
shl
or
xchg
push
mov
xlat
sbb
and
mov
inc
add
adc
mov
or
xchg
inc
stos
retf
fwait
push
fild
mov
sub
xchg
js
push
adc
mov
loope
repnz
inc
adc
jmp
dec
ins
push
mov
mov
and
adc
mov
jnp
push
(bad)
out
dec
xchg
xor
cmp
add
push
dec
inc
test
mov
push
mov
vfnmadd231ss
loop
xlat
mov
pop
jmp
sbb
push
bound
frstor
scas
jne
lock
xor
jge
or
fisub
cdq
ret
clc
ret
(bad)
ins
push
das
cmp
mov
rol
fwait
xchg
add
int3
cmps
cmps
out
xor
rol
xchg
mul
jbe
inc
cld
add
dec
mov
push
scas
mov
mov
jg
ins
add
jp
cmp
jno
push
sbb
cmp
xor
mov
not
int3
jmp
add
fcmove
(bad)
aaa
dec
repnz
inc
and
scas
addr16
cmc
mov
(bad)
je
in
ja
out
int
mov
(bad)
gs
jp
nop
mov
jmp
mov
cmps
add
(bad)
mov
stos
xor
cld
ins
push
shr
into
rcr
hlt
shl
cmp
aaa
daa
movs
fcom
fadd
jbe
not
ret
mov
jo
mov
or
les
xchg
cmp
ret
mov
repnz
cwde
ja
sbb
cmp
xchg
aaa
mov
and
cdq
pushf
pop
(bad)
xlat
inc
adc
in
lahf
pop
mov
retf
pop
mov
inc
dec
call
mov
sbb
xchg
nop
mov
and
pop
add
xor
and
cmc
cmp
fbstp
mov
sbb
xor
jno
sub
jg
sbb
in
sub
jle
pop
mov
out
inc
jnp
adc
xor
sub
mov
xor
mov
fadd
mov
pop
mov
cwde
cmp
ja
(bad)
call
mov
adc
les
je
cmc
rcl
leave
callw
cmps
add
pop
mov
dec
sub
mov
push
ja
je
mov
mov
xchg
daa
fcom
popa
dec
push
mov
stc
shl
rol
cli
cmp
scas
(bad)
imul
call
ins
push
in
push
pushf
cli
or
bnd
mov
loope
neg
mov
arpl
stos
push
(bad)
jns
cmp
cmp
and
jo
mov
(bad)
xchg
out
pop
inc
ins
and
lds
jmp
loop
jno
dec
xor
xchg
adc
dec
add
dec
xor
ja
adc
and
in
dec
xchg
push
loop
dec
(bad)
fwait
ds
inc
mov
push
retf
lods
test
push
jae
adc
test
fidiv
or
xchg
ret
ret
mov
mov
jp
pop
xchg
push
(bad)
push
sbb
inc
mov
cmp
ins
test
sbb
retf
sbb
repnz
int
cdq
cmps
cs
in
sub
enter
inc
mov
sub
mov
mov
lahf
xchg
fist
sub
adc
popf
push
cld
mov
mov
pop
cmps
add
mov
call
mov
int3
jne
inc
xorps
call
push
pushf
or
jmp
or
add
popf
lods
repz
aad
adc
repnz
frndint
shl
pop
push
push
gs
(bad)
inc
retf
je
js
push
jecxz
cld
or
sub
jl
(bad)
out
inc
push
fstp
mov
and
mov
push
or
pushf
jae
jns
cmp
xchg
int3
outs
mov
and
stos
int
in
mov
mov
shl
adc
jmp
stos
dec
or
push
ret
mov
pop
add
mov
add
inc
push
and
and
(bad)
aad
inc
cmp
(bad)
xchg
sbb
out
shl
enter
out
ja
mov
sar
dec
call
inc
fwait
addr16
jb
retf
inc
sbb
ret
iret
retf
cmps
fwait
push
pushf
xlat
or
test
ds
fdiv
push
cmp
dec
hlt
fld
or
sahf
sbb
jg
loope
outs
mov
pop
push
mov
or
pop
cs
and
test
ffreep
jno
scas
and
push
and
add
fild
and
rcl
mov
dec
dec
sub
push
ss
(bad)
mov
xor
xchg
gs
inc
mov
add
mov
bound
inc
test
mov
popf
dec
sub
outs
out
hlt
sbb
add
mov
xchg
out
cli
push
and
outs
int3
pop
mov
jnp
sbb
mov
dec
enter
cmp
stos
ins
rcl
jo
(bad)
sub
in
mov
cmp
mov
adc
sbb
test
idiv
loop
jmp
dec
inc
leave
ror
push
mov
inc
addr16
mov
pop
mov
mov
or
outs
mov
sbb
shr
mov
xor
shl
cwde
jmp
iret
pand
push
rcl
movs
pshufw
push
add
stos
shl
fsub
add
aad
fcomp
jne
nop
xchg
outs
add
cmp
ja
sahf
mov
jmp
fidivr
jno
mov
call
sbb
rcl
sub
fimul
out
outs
jne
xchg
xor
jns
dec
dec
out
call
cmp
outs
fnstenv
push
or
adc
pusha
enter
hlt
dec
push
cmp
call
jno
test
dec
mov
stc
push
pushf
cmc
adc
in
cdq
cdq
fist
mov
mov
call
jmp
test
movs
push
sbb
push
in
daa
pop
lahf
aam
cdq
push
test
fdiv
xchg
mov
xchg
pop
dec
cmp
mov
adc
mov
ss
or
inc
test
or
arpl
jl
and
mov
ret
push
std
add
daa
gs
add
movs
xchg
cld
pop
mov
out
fmul
sub
mov
mov
mov
add
sti
loope
das
lea
pop
or
dec
sub
int3
and
jle
int
cmc
sti
add
add
sti
pop
inc
je
lock
enter
mov
dec
sbb
retf
cmp
cli
icebp
sbb
push
js
mov
xchg
mov
call
cmp
outs
add
dec
(bad)
ins
adc
aas
inc
and
pushf
jl
int
xchg
xchg
and
aaa
cmp
and
push
jb
xchg
test
push
psrlw
fst
mov
dec
jno
out
in
adc
sti
aas
adc
add
les
(bad)
popf
or
push
(bad)
leave
jmp
pop
cdq
ins
and
push
cmp
push
push
dec
bnd
and
cli
pop
dec
dec
pop
mov
repz
test
mov
xor
mov
call
pop
jmp
icebp
push
out
pop
xlat
add
mov
fsub
mov
xchg
sbb
cmp
push
lock
pop
jecxz
cmp
daa
(bad)
jne
aaa
inc
mov
pop
or
in
in
or
mov
mov
push
pop
jns
push
dec
adc
fnstsw
js
adc
mov
xchg
test
add
and
push
cmps
mov
mov
sbb
mov
jae
xor
and
and
cmp
clc
and
in
(bad)
adc
add
cmp
xor
popf
pmaddwd
sbb
aam
in
sar
mov
imul
pop
mov
adc
retf
sbb
test
std
je
fs
cs
cmp
mov
dec
mov
fisttp
sar
in
call
or
outs
cmp
add
sub
fidivr
push
popf
in
dec
loope
test
cvtps2pi
scas
jae
push
lods
sahf
xor
into
ss
jne
call
cmp
xchg
add
jnp
fild
lods
sbb
inc
or
push
imul
cli
loop
rcr
xchg
pop
(bad)
push
into
mov
and
ja
mov
inc
pop
aam
fldcw
and
and
adc
mov
jmp
adc
jnp
push
sbb
dec
aam
xor
xchg
or
pop
xor
std
pop
test
inc
and
mov
jmp
aaa
fild
xor
adc
setae
out
ss
add
or
xchg
sti
inc
out
data16
push
ror
movs
push
sbb
xor
scas
pop
xor
int3
in
mov
jne
(bad)
xor
daa
loope
pop
fst
lea
mov
mov
mov
add
outs
nop
shr
lds
movs
jno
add
les
jbe
aas
push
gs
sbb
mov
lods
outs
call
dec
test
or
in
or
mov
out
dec
add
mov
or
mov
cs
and
outs
push
sub
not
adc
js
xchg
mov
scas
xor
mov
inc
sub
mov
not
sahf
call
ret
add
adc
xor
push
mov
in
jle
ja
pop
aad
ins
push
and
add
pusha
pop
shr
cmp
out
inc
outs
cs
sub
and
stc
sub
jg
ins
adc
out
or
dec
mov
and
xor
ds
inc
mov
sar
(bad)
js
inc
fistp
jle
push
std
ins
int3
shr
(bad)
sub
sub
push
sbb
cmc
add
push
cs
cmp
push
jmp
jno
cmove
sbb
jl
aad
loopne
push
sbb
lods
cld
stos
or
push
adc
loop
sbb
popa
(bad)
gs
mov
es
inc
jp
jne
stos
fisub
dec
pushf
(bad)
xor
adc
pop
push
movs
inc
mov
fisubr
ss
out
lds
aad
pushf
cmc
cs
push
xchg
cdq
scas
lea
hlt
imul
cmp
stc
test
ss
pop
mov
not
jne
in
mov
jmp
pusha
sbb
repz
fsubr
ror
test
dec
and
jmp
jg
ds
call
fst
movs
dec
jae
sbb
enter
xor
rcl
sbb
jnp
mov
pop
xor
and
aam
mov
inc
sti
or
aas
das
sahf
inc
sbb
sub
mov
(bad)
or
rcr
outs
cmps
je
or
sub
mov
add
cmp
shl
sub
int
dec
stos
sub
ret
xchg
xchg
fidivr
jno
les
add
sti
loopne
push
cld
lods
dec
dec
sti
mov
add
or
sbb
cmp
pop
popa
jns
int
pop
stos
lods
into
cmp
inc
out
ret
test
mov
ins
fnstcw
mov
in
push
push
pop
dec
ja
out
cmp
jns
pop
xchg
idiv
mov
xor
lods
aam
ds
sti
aaa
popa
xor
rol
in
hlt
mov
jno
test
test
jne
xor
xchg
add
(bad)
dec
das
shl
ins
jae
cmp
out
aam
clc
int3
imul
bound
sub
inc
inc
imul
inc
retf
jg
mov
jne
jmp
mov
mov
outs
or
push
in
sub
dec
retf
mov
loope
sbb
hlt
retf
inc
js
pop
sbb
inc
pop
xor
stos
ins
and
xor
fdivr
mov
adc
sub
mov
jnp
shl
jne
add
ret
cmp
in
jg
inc
(bad)
dec
neg
xor
in
and
call
adc
mov
fcomi
jge
test
sub
(bad)
addr16
xchg
xchg
sbb
cmp
push
xor
jmp
cmp
dec
or
(bad)
mov
les
dec
fbld
pop
mov
lods
lea
int
xchg
out
jle
mov
sub
xor
push
ds
inc
cmc
das
fild
test
fnstenv
mov
stc
leave
inc
pop
into
jmp
fwait
sbb
stos
and
mov
sbb
cmp
ror
cli
movs
icebp
in
xchg
jno
xor
outs
mov
xchg
mov
mov
ins
sub
out
popa
mov
out
in
sbb
and
jae
adc
js
jne
mov
inc
add
push
stos
scas
pop
cmps
aaa
mov
dec
mov
sbb
dec
inc
push
cmp
jmp
stos
dec
lds
jp
scas
push
gs
xchg
gs
lods
sbb
and
lea
lods
jl
iret
mov
ret
sub
mov
mov
cmp
mov
xor
stc
adc
imul
cmps
jb
shr
pop
arpl
sub
xchg
inc
sub
dec
adc
inc
pop
fild
dec
fldenv
cld
jmp
jle
add
sbb
call
inc
and
inc
mov
pop
fmul
xor
call
push
(bad)
cmc
shl
dec
mov
sbb
cmp
fsubrp
push
dec
or
lock
mov
mov
pop
iret
shl
sub
sbb
xchg
enter
stos
sar
popf
push
cli
aas
jl
sti
sbb
pushf
xchg
addr16
loopne
xchg
(bad)
pop
loop
and
push
lods
pop
ret
pop
add
ja
fld
pop
xchg
hlt
jb
stos
mov
jae
or
je
pusha
sub
or
shl
push
pushw
xchg
pop
hlt
jb
lds
cs
ds
xor
push
push
out
into
scas
cmp
jle
mov
test
mov
adc
add
pop
pop
or
out
dec
test
and
fadd
add
jg
shl
sub
sbb
ror
rep
or
shr
pop
sbb
xor
lea
pop
sbb
or
sbb
test
push
jp
stos
inc
gs
sub
loope
outs
add
push
(bad)
inc
pcmpgtw
outs
sbb
cdq
jae
xchg
push
mov
add
mov
sbb
and
(bad)
adc
gs
outs
or
or
(bad)
ror
mov
movs
ss
ffree
xchg
mov
push
add
jge
arpl
jl
pop
xchg
cdq
mov
ret
mov
int3
jp
pop
fcomp
mov
pavgb
push
cmp
mov
pop
xor
dec
test
xor
push
stc
sub
mov
neg
xor
test
popf
push
xor
pop
mov
sbb
push
(bad)
sbb
imul
es
jg
inc
push
push
(bad)
dec
pop
imul
bound
pop
cmps
adc
retf
js
mov
inc
sbb
jne
or
iret
in
dec
int3
imul
xchg
mov
cmp
add
jbe
add
jns
dec
xor
gs
mov
mov
mov
lods
push
push
mov
leave
in
jo
test
push
push
movs
ds
adc
repz
repz
lods
sub
dec
pop
add
cmp
cld
fdivr
fucomi
pop
popa
xor
jp
xchg
mov
jmp
adc
dec
mov
mov
or
cmp
test
test
int3
mov
sub
xchg
adc
repnz
jbe
mov
cmp
cwde
xor
and
popf
test
mov
sub
retf
push
test
cmp
dec
adc
movs
xor
xchg
inc
push
cli
test
pushf
xchg
or
stc
xchg
scas
stos
dec
fs
xchg
dec
dec
int
cld
sahf
add
sub
xchg
fst
dec
dec
xlat
arpl
pavgb
out
shr
push
xchg
les
bound
scas
out
and
pop
mul
dec
fdivr
push
loopne
movs
test
or
ret
cs
mov
into
pop
fsub
or
bound
pushf
mov
sbb
arpl
inc
cmps
pushf
out
xchg
pop
dec
cmps
jo
sub
push
pushf
mov
es
ret
aas
mov
div
movs
jmp
pop
je
test
and
les
call
mov
hlt
std
jmp
jns
call
ret
push
sbb
aaa
xchg
stos
push
dec
ins
mov
stos
aaa
sub
pop
inc
sar
dec
stc
xlat
das
mov
mov
into
pop
loop
movs
std
sbb
adc
fs
(bad)
dec
stos
movs
test
xlat
xor
sbb
call
adc
inc
pop
xchg
mov
jmp
xlat
pop
int
sbb
shl
lea
xlat
xchg
xor
lods
adc
inc
loope
(bad)
les
out
in
mov
mov
mov
sbb
mov
mov
dec
(bad)
xor
movs
sar
xchg
sbb
mov
pop
or
xor
adc
leave
cwde
inc
jg
sahf
push
xchg
fstp
ins
sbb
or
ret
cmp
stos
mov
xlat
sar
push
movs
xchg
jb
loop
popf
cli
xor
shl
push
add
push
mov
mov
jns
in
lock
ror
xlat
lods
fmul
daa
imul
mov
pop
les
dec
inc
xchg
daa
loop
inc
outs
cmp
jns
sub
adc
bound
mov
mov
and
stc
scas
mov
(bad)
inc
int
cmp
dec
sbb
xor
mov
inc
outs
mov
out
jne
popf
aaa
jp
lea
xor
xchg
add
repz
ret
dec
push
mov
or
retf
sub
cmps
xchg
cmp
adc
pusha
and
fdiv
adc
out
es
sti
sbb
and
mov
int3
ja
sub
daa
jle
and
adc
push
adc
mov
jno
mov
jmp
movs
test
retf
fs
pop
dec
adc
mov
sbb
mov
ds
jo
mov
dec
dec
(bad)
push
ror
sub
(bad)
repz
movs
repz
fbld
movs
jg
(bad)
push
mov
push
mov
das
js
push
jl
cmps
pop
add
in
jecxz
fbld
sbb
repnz
pop
clc
jge
es
mov
movs
loopne
mov
test
sub
sub
jo
cmp
inc
xor
sub
inc
in
cmps
xchg
es
xadd
(bad)
inc
or
fwait
jg
xor
sbb
sub
sahf
out
cs
or
sbb
dec
mov
outs
loopne
push
mov
data16
jae
mov
push
(bad)
push
or
adc
add
jecxz
test
pusha
nop
cmps
push
addr16
push
cli
loopne
or
shr
sub
(bad)
adc
(bad)
and
and
dec
push
(bad)
out
mov
lods
shl
inc
jns
dec
and
jbe
and
or
xchg
jmp
mov
pop
(bad)
dec
nop
(bad)
fbld
or
cmp
in
(bad)
aad
stc
jbe
cmp
fstp
dec
jb
imul
mov
and
outs
les
pop
(bad)
sahf
mov
xchg
xlat
rol
ja
mov
idiv
stos
cmps
xchg
mov
pop
arpl
test
call
mov
xchg
jae
adc
inc
aaa
jge
inc
stos
iret
mov
jmp
jno
int3
jne
aaa
adc
mov
add
push
cmp
or
jle
push
push
mov
xchg
sub
or
cdq
xchg
dec
push
fiadd
data16
pusha
pop
cwde
fnsave
and
add
jmp
int3
movs
adc
inc
jmp
ds
enter
repz
jge
add
or
add
std
lahf
(bad)
std
div
into
out
mov
xor
stc
frstor
xlat
push
pop
mov
movs
rol
push
aaa
push
rol
cmp
jge
pop
xchg
das
ins
add
pop
retf
int3
fist
jecxz
cmp
jecxz
js
mov
loope
sbb
(bad)
jne
mov
pop
cmp
lock
dec
addr16
push
and
adc
popa
test
mov
fstp
or
gs
mov
or
cli
icebp
loope
or
cmp
in
out
(bad)
ins
scas
inc
lods
repnz
cmc
ror
(bad)
mov
sbb
fnstsw
mov
push
xchg
adc
aam
add
add
nop
shr
es
out
stos
out
nop
ja
inc
icebp
test
and
mov
dec
jbe
xchg
ja
push
(bad)
add
mov
(bad)
or
dec
or
cmp
xchg
jo
xor
mov
sti
inc
retf
inc
mov
mov
jmp
(bad)
and
add
pop
cmc
add
das
outs
hlt
push
push
jle
retf
loop
mov
add
mov
adc
sbb
adc
sbb
and
in
jo
dec
test
jno
xchg
fldenv
cmp
fxch
retf
jnp
mov
push
fbld
pop
ins
out
outs
dec
in
fidivr
mov
jnp
daa
stos
xor
arpl
in
push
push
push
and
ja
or
clc
inc
adc
adc
pop
adc
and
xchg
dec
mov
xor
jl
loop
add
rcl
clc
out
int
push
int3
cmps
xor
push
out
mov
push
push
retf
loopne
ss
lds
or
hlt
mov
out
loopne
sub
jp
lahf
push
mov
mov
xchg
cmp
sbb
or
cmc
ja
inc
retf
xor
pop
sub
stc
ja
jg
aas
pop
dec
sbb
pop
ja
push
mov
test
rcl
jle
ficom
sahf
xor
gs
dec
xchg
loopne
in
mov
sbb
outs
pop
div
in
mov
out
dec
mov
push
or
(bad)
iret
in
data16
pushf
rcl
loope
adc
loop
mov
and
add
cmp
jne
sbb
mov
xlat
test
retf
call
mov
pop
ror
pop
jnp
rcl
pop
rcl
or
or
mov
push
push
push
out
imul
pop
jp
adc
mov
adc
or
imul
pop
and
adc
test
xor
push
pop
jmp
push
js
or
call
push
in
sbb
jns
mov
popf
jg
aas
pop
sub
sahf
imul
mov
jp
mov
stos
sub
jg
sbb
jo
fisubr
pop
mov
iret
ins
or
xchg
and
cmps
push
sub
inc
stos
stos
inc
xor
xlat
xchg
and
and
sbb
and
iret
cmp
int3
inc
rcr
push
inc
push
bound
sub
jae
(bad)
mov
and
mul
jno
pop
cmp
lods
lea
(bad)
jae
jae
hlt
fdivr
jb
push
sbb
inc
jmp
jo
lods
dec
fmul
int3
xlat
xchg
xor
mov
jnp
test
jo
sbb
add
fdivp
stos
arpl
jmp
inc
mov
jnp
and
je
leave
mov
adc
xchg
ds
lahf
ja
push
leave
es
adc
in
out
bound
xor
add
jne
data16
popf
movs
arpl
push
mov
dec
xor
pusha
fimul
cmps
jl
in
iret
ss
scas
jo
or
inc
ja
popa
xchg
dec
push
jge
sbb
or
dec
mov
push
ins
shr
add
ins
sub
pop
inc
sbb
ins
ins
xchg
(bad)
mov
mov
nop
xchg
and
stos
jmp
ins
je
scas
aad
test
fild
out
push
xchg
sub
mov
sub
jmp
xchg
movs
shr
cli
inc
dec
stos
outs
pop
push
ret
dec
or
rcl
popf
push
inc
and
pop
pop
aad
iret
out
sahf
test
mov
sub
rcr
test
lea
popa
test
imul
dec
pop
mov
jecxz
dec
adc
shl
out
shr
add
ins
cmps
repz
repnz
imul
cmps
add
repnz
cmp
inc
xlat
mov
ss
ret
or
(bad)
in
sbb
jg
bound
adc
std
call
push
dec
not
push
xchg
xchg
push
mov
ins
mov
cmc
add
xor
inc
pop
test
xor
mov
fcmovbe
mov
(bad)
call
repz
test
nop
cs
cld
dec
mov
outs
in
ficom
stos
pusha
add
leave
ret
call
mov
xchg
and
test
mov
mov
adc
jo
gs
dec
ja
adc
pop
sbb
in
xchg
push
push
cli
stc
jb
(bad)
mov
lods
test
xchg
xor
gs
imul
ins
aaa
inc
and
sar
dec
test
icebp
test
je
mov
sbb
push
push
xchg
pop
mov
or
out
mov
mov
es
popa
ins
sub
arpl
push
cmps
fwait
push
fwait
es
mov
fucomp
fist
inc
pop
out
sbb
mov
or
mov
mov
imul
aaa
push
sub
test
cmp
cmps
enter
scas
adc
clc
add
jno
inc
daa
jp
call
repnz
xor
jmp
mov
dec
ror
clc
mov
(bad)
lods
js
sbb
out
jge
xchg
and
pop
cmps
les
hlt
push
jb
push
xor
lods
(bad)
pop
jl
in
push
inc
retf
adc
out
push
dec
inc
repz
fsub
fld
enter
and
pop
sar
sahf
and
cld
mov
movs
ror
mov
fidiv
aad
xchg
call
adc
pop
aam
sbb
cmp
out
data16
adc
out
popf
mov
stos
scas
(bad)
(bad)
in
popa
mov
les
movs
sbb
movs
call
hlt
in
jl
mov
gs
test
pop
fcom
pop
or
retf
(bad)
pop
fild
pop
lds
sbb
inc
mov
jmp
aaa
dec
xchg
pop
stos
push
add
xchg
cwde
sahf
mov
mov
dec
xor
dec
fucomp
loopne
loopne
adc
inc
movs
mov
mov
pop
movs
les
jmp
jns
in
data16
adc
mov
or
push
or
adc
cdq
pop
bound
(bad)
mov
jl
int
push
pop
dec
je
cwde
add
push
(bad)
or
repz
sub
je
dec
mov
mov
jns
int
mov
pop
sub
fs
inc
(bad)
ss
sub
and
popa
adc
fwait
dec
sbb
sbb
mov
loopne
mov
add
or
push
(bad)
das
fisttp
(bad)
fistp
mov
push
test
cmp
inc
xor
js
in
cmp
and
sbb
in
rcr
out
xchg
xor
fcom
fdiv
pop
imul
icebp
sub
jl
cmps
or
adc
(bad)
push
cwde
shr
mov
sti
sub
dec
out
shr
sub
pop
or
sbb
sti
cmp
sbb
cmc
inc
jmp
jecxz
mov
aam
or
jae
jecxz
int3
sub
jle
and
dec
cmp
repnz
cli
popa
mov
sti
dec
repz
ds
aam
push
pusha
sti
and
push
shr
adc
je
jmp
mov
adc
jmp
pop
cmc
or
push
in
mov
xor
jae
mov
addr16
into
dec
mov
mov
sar
enter
dec
mov
mov
retf
aaa
xor
js
retf
mov
mov
push
dec
push
push
aad
xor
sti
cmps
pop
and
pop
sbb
mov
mov
cli
or
mov
shr
mov
fs
xor
jmp
mov
fstp
(bad)
in
hlt
fcomi
push
pop
lahf
aam
ret
mov
mov
(bad)
or
push
cmp
mov
fstp
mov
cmc
adc
fdiv
pop
lods
rcr
sar
mov
add
cmp
(bad)
out
mov
leave
cmp
or
cmp
dec
ins
xchg
gs
cmps
and
push
dec
packsswb
ins
inc
bnd
call
add
sbb
xor
mov
movs
idiv
out
rdmsr
push
ja
push
mov
adc
or
or
adc
daa
and
push
sbb
pop
jmp
dec
pop
inc
push
retf
pop
dec
sbb
out
fstp
xor
sbb
sbb
mov
mov
push
out
push
jl
mov
ja
cmp
daa
xor
scas
pop
push
bound
xchg
cmc
fmulp
push
repz
sbb
jmp
sbb
mul
mov
mov
daa
rol
js
cmp
(bad)
aaa
repnz
int
imul
mov
ins
popf
loop
xor
pop
cmp
xchg
mov
push
into
stc
inc
inc
das
adc
xor
aaa
pop
addr16
adc
mov
xor
call
add
mov
test
popf
cmp
push
dec
mov
rcr
adc
jb
movs
imul
and
enter
jae
jmp
cwde
push
sahf
enter
mov
push
pop
mov
add
paddd
dec
bound
jl
push
push
sbb
fcmovbe
sub
bound
iret
sbb
call
data16
sbb
adc
sbb
xchg
and
push
mov
repz
dec
aaa
out
retf
cmp
mov
ds
cs
arpl
mov
lods
neg
and
(bad)
fld
loope
cmps
inc
rcl
sub
sbb
jbe
dec
adc
add
sbb
push
test
call
jne
cmp
adc
test
xchg
sar
cmp
or
mov
adc
call
inc
nop
sub
push
cli
xchg
addr16
mov
sbb
sbb
fnstcw
dec
loopne
inc
dec
xor
jl
(bad)
cmp
or
cmp
inc
push
xchg
cmp
test
imul
outs
and
cli
jmp
imul
fbld
inc
dec
push
aam
dec
sbb
jle
inc
and
js
aas
xor
bound
jns
mov
sub
in
lahf
ins
rcl
bound
repnz
popf
sub
pinsrw
lods
(bad)
inc
push
fimul
jmp
jo
dec
test
sahf
retf
or
push
pop
push
sti
mov
iret
mov
jp
test
push
mov
je
mov
loop
loop
(bad)
adc
jns
idiv
out
dec
addr16
fldcw
jmp
sub
rcr
(bad)
mov
or
adc
cmps
add
pushf
das
out
cmp
jge
fs
sub
aad
add
cdq
(bad)
or
imul
dec
cs
sub
cmp
xchg
add
push
adc
mov
ins
in
stc
cmp
add
ficomp
icebp
test
inc
scas
adc
jg
add
je
shl
mov
inc
push
out
pop
adc
retf
jne
ds
pop
mov
jo
loope
pushf
or
call
test
push
pop
xchg
sub
jae
mov
shl
fidivr
xchg
and
lock
pop
les
push
call
cmp
scas
xchg
jbe
add
(bad)
out
and
sbb
mov
dec
pop
(bad)
out
fimul
mov
mov
xor
mov
cmps
pusha
imul
int
cmp
cmc
or
pop
mov
test
sub
mov
inc
lods
xor
mov
fst
fwait
ss
(bad)
iret
jg
imul
add
sbb
out
ret
and
push
outs
cld
fldcw
je
pop
and
pop
sub
mov
and
or
sahf
xor
inc
add
shl
adc
push
out
ret
jb
inc
or
mov
stos
out
adc
iret
jo
imul
iret
mov
cdq
call
(bad)
push
pop
pop
cmp
pop
xchg
shl
xlat
jp
add
out
sub
or
pop
cli
call
mov
jnp
in
in
neg
xor
je
or
push
and
je
inc
loopne
cmp
xchg
enter
xchg
push
sub
cmp
dec
mov
pop
mov
std
push
fs
xchg
add
cmps
movs
adc
clc
xor
cmp
test
rcl
lahf
shr
imul
movs
ds
jnp
pop
pop
sbb
gs
pop
dec
jg
jae
jge
fnstenv
jo
mov
icebp
add
popf
jge
inc
call
cmp
lods
xchg
out
test
cmc
sub
(bad)
cmps
push
jecxz
xchg
adc
hlt
xchg
neg
adc
sbb
daa
frstor
mov
jge
adc
rcr
out
fidiv
jl
aas
sub
retf
ss
jmp
pop
ins
pop
or
lea
fstp
cdq
mov
fs
cwde
jge
sbb
mov
les
sbb
or
mov
inc
xor
mov
push
outs
adc
int
cli
js
mov
leave
repnz
loopne
adc
xchg
(bad)
jo
repz
test
icebp
cmp
das
mov
jns
mov
retf
dec
scas
pop
mov
sbb
push
shl
xchg
(bad)
in
jmp
add
mov
stos
out
and
push
sub
ret
or
data16
dec
mov
in
fdivrp
push
cmp
lods
jbe
cmp
add
mov
add
jae
fcom
daa
scas
xor
stos
mov
cmps
jae
or
ss
cs
leave
adc
enter
dec
jecxz
popa
fstp
push
arpl
sbb
clc
rol
mov
(bad)
fbld
ret
lahf
jp
jg
sahf
mov
inc
mov
bound
cmp
(bad)
adc
test
iret
in
cmc
inc
inc
lds
cmp
std
mov
cmc
adc
jo
lahf
jb
mov
push
dec
or
push
mov
(bad)
push
xor
(bad)
ret
xor
adc
iret
add
mov
test
lods
pop
inc
or
mov
jae
fnstcw
enter
div
das
inc
je
imul
aas
adc
xor
mov
call
inc
retf
bound
outs
(bad)
stos
pop
int3
sub
or
jno
movs
fs
inc
mov
mov
popa
adc
mov
mov
xacquire
pop
in
mov
mov
ret
jp
dec
movs
push
push
sbb
xor
xchg
ja
push
push
push
push
cmp
rcl
je
mov
repz
popf
mov
or
add
sub
sar
pop
add
inc
mov
inc
scas
push
xchg
ins
mov
sub
std
jb
sub
xor
add
ja
out
sub
pop
xor
fisttp
cdq
call
jmp
xchg
cmp
cmps
movs
adc
inc
cmps
dec
adc
inc
fld
xchg
pop
cli
rcr
pop
pop
sbb
retf
push
push
add
popa
inc
cwde
lds
stos
call
imul
test
dec
xchg
outs
add
mov
mov
pusha
inc
loop
pop
dec
and
dec
sbb
mov
and
dec
(bad)
push
pop
add
stos
jp
sbb
jmp
xchg
mov
mov
les
movs
add
adc
adc
lds
add
jno
pop
xchg
xor
dec
mov
sub
sbb
pop
fst
push
inc
stos
add
jo
call
add
gs
mov
bound
xchg
scas
fcompp
(bad)
xlat
movs
js
sbb
out
xor
shr
mov
mov
pushf
stos
jno
mov
cmp
lock
jecxz
mov
add
cli
and
jae
inc
push
mov
ds
ja
mov
ja
mov
sub
mov
jae
(bad)
cmp
call
push
movs
cmps
imul
punpckhbw
es
clc
retf
and
cmp
cld
pop
fldcw
cmp
pop
shr
add
push
sub
mov
mov
lea
dec
cmp
push
loop
xor
inc
cmp
cmps
jg
not
test
adc
cld
jle
repz
or
adc
imul
sar
rep
xor
std
outs
loope
retf
(bad)
neg
cmps
xchg
jle
xor
dec
in
test
fmul
std
push
inc
repnz
cwde
sbb
movs
jno
sar
test
push
data16
pusha
add
cmp
cmp
outs
data16
dec
mov
mov
iret
push
mov
mov
sti
iret
inc
nop
mov
dec
aam
test
push
aad
popa
sbb
in
xchg
adc
es
push
dec
push
mov
jle
and
dec
pop
scas
jmp
sar
dec
pop
or
jmp
movs
rcl
mov
and
ss
ret
ins
pop
inc
daa
push
jo
in
fistp
cmp
mov
dec
cs
stos
arpl
scas
cmc
xor
xor
adc
pushf
mov
xlat
scas
mov
add
xchg
adc
aas
pusha
sbb
dec
mov
and
idiv
sbb
call
dec
mov
mov
pusha
shl
fbstp
jne
jnp
(bad)
lock
pop
test
pop
xor
push
inc
xchg
std
mov
cmp
cli
adc
jns
sub
add
call
dec
sub
xchg
xor
(bad)
cld
es
cmp
sub
dec
jne
pop
popa
jnp
jge
int3
lds
dec
mov
cmp
aad
and
gs
and
mov
inc
(bad)
lahf
push
inc
add
imul
popa
push
pop
and
in
xchg
int
cmps
dec
pop
adc
adc
jmp
xor
dec
cmc
shl
pusha
push
retf
mov
jge
or
pop
mov
add
fisubr
(bad)
fsub
mov
cmps
mov
fucomip
adc
mov
jg
cld
mov
scas
stc
fcomp
clc
cwde
jge
mov
out
in
mov
mov
mov
xor
mov
lds
sub
ss
fld
jmp
and
jg
dec
inc
stc
mov
scas
(bad)
xchg
xchg
mov
cld
das
jns
dec
out
loop
jo
mov
pop
or
div
loope
neg
in
sub
dec
pop
pop
xor
sbb
cs
daa
fwait
ds
ret
inc
imul
add
inc
adc
ds
es
outs
jne
jne
je
pop
push
jno
not
add
inc
inc
push
jp
clc
in
mov
sub
scas
adc
or
adc
fbld
sti
lock
jmp
movs
cli
cwde
cmp
faddp
push
bound
adc
mov
push
mov
adc
mov
mov
push
adc
addr16
pop
test
aas
jecxz
push
xor
cs
(bad)
clc
in
enter
and
ins
(bad)
bt
neg
mov
sub
and
inc
stos
shr
ja
cmp
dec
in
inc
fnstenv
add
xchg
int3
fld
stos
push
adc
jno
mov
cld
in
lods
mov
das
cmps
and
cmp
cmps
push
adc
jl
sbb
sti
xchg
inc
mov
das
(bad)
int3
sti
cld
sub
fisubr
dec
std
or
pop
jae
lahf
push
jne
cld
stos
push
pop
(bad)
mov
pop
lea
dec
out
mov
es
je
mov
cmc
test
ret
icebp
pop
xor
retf
imul
sbb
cli
jno
neg
test
cmp
leave
rcr
dec
pop
daa
add
mov
sub
xor
pop
int
xchg
test
dec
les
adc
retf
push
data16
mov
icebp
adc
or
adc
ror
stos
repz
push
loop
cmp
mov
adc
bnd
fwait
or
jo
shl
ret
inc
push
loopne
bound
adc
(bad)
imul
xchg
fdiv
or
gs
mov
mov
xor
stc
push
adc
(bad)
sbb
rcr
pop
clc
sub
xchg
jecxz
stos
dec
mov
fimul
ror
mov
mov
cmp
add
sub
ins
jle
inc
jae
jecxz
retf
stc
add
adc
std
test
icebp
jecxz
jmp
(bad)
mov
fidiv
jae
test
mov
test
je
inc
add
pop
add
test
cmps
mov
mov
mov
ficom
sub
sbb
ja
xchg
add
jecxz
sub
mov
cmp
dec
mov
mul
cld
adc
cmc
push
and
push
mov
pusha
gs
xchg
addr16
mov
mov
movs
pop
pop
ins
(bad)
adc
nop
jmp
(bad)
dec
jno
leave
jg
push
xchg
pop
mov
xchg
iret
sub
jnp
fcomp
aad
fadd
hlt
adc
ficomp
xchg
dec
push
add
xlat
mov
push
es
mov
shl
ret
int
lock
or
lods
out
outs
and
xchg
jmp
sub
lea
push
add
push
sub
sti
outs
cli
jo
adc
out
cmps
pop
fdivr
int3
add
in
aas
ja
mov
mov
and
jg
sbb
pop
dec
mov
xchg
repz
std
sti
call
fcomp
cld
push
sbb
cmp
inc
cmp
(bad)
xchg
ss
retf
les
jne
dec
mov
dec
dec
fs
popf
pop
dec
add
add
push
dec
(bad)
out
outs
bound
movs
mov
in
mov
pop
mov
inc
cwde
in
adc
not
(bad)
mov
fs
ja
scas
and
dec
mov
inc
sub
lds
cmp
data16
sub
xchg
push
sub
stos
mov
mov
out
fwait
data16
out
js
repnz
dec
lahf
pop
stos
out
lahf
in
push
xchg
aas
xor
jo
iret
or
xchg
push
jbe
mov
and
daa
rcl
mov
inc
out
jb
gs
arpl
stos
pop
test
and
xchg
inc
mov
cmp
ret
retf
jae
rol
push
test
or
pop
adc
sbb
add
push
mov
(bad)
(bad)
and
test
test
adc
xchg
ins
icebp
mov
dec
cdq
mov
mov
add
pop
sbb
(bad)
cdq
jmp
mov
xchg
sbb
pop
add
jne
jns
mov
sub
pop
ds
pop
add
inc
pop
push
movs
mov
and
or
xor
scas
jle
xchg
xchg
fwait
dec
lea
into
sub
and
xlat
and
out
pop
mov
adc
adc
dec
add
mov
inc
xchg
out
aad
stc
cli
add
hlt
cmp
stos
in
enter
jge
repnz
jb
(bad)
dec
push
inc
imul
scas
sbb
std
xor
lahf
or
jge
rcr
cmp
cmp
test
scas
inc
pop
and
xchg
arpl
arpl
mov
enter
je
cmp
out
es
mov
mov
shl
mov
loopne
cmc
xlat
mov
loope
loope
xlat
into
inc
popf
enter
sub
iret
lods
push
rcr
cmp
rcl
push
sahf
xor
xor
cmp
outs
jecxz
push
in
ja
and
rcr
aam
mov
cmp
ret
pop
push
ss
iret
mov
ins
arpl
retf
sbb
mov
test
mov
jno
outs
or
test
popa
pop
(bad)
xor
in
outs
jb
mov
adc
mov
mov
jmp
xchg
popf
stos
pop
icebp
push
cmp
and
mov
jne
xchg
scas
mov
in
pushf
ss
test
std
cdq
loop
mov
inc
mov
fxch
fnstcw
and
mov
jmp
loop
les
out
enter
mov
dec
rcl
sbb
cdq
ror
mov
and
scas
sub
lahf
mov
push
sub
popa
xor
int3
jmp
lods
loopne
cdq
jne
outs
sub
mov
jbe
les
in
stos
ret
cld
add
jo
fild
or
out
xchg
pop
xchg
cmp
cmp
iret
loopne
push
cmc
mov
cmp
dec
cmp
stos
(bad)
pop
pop
enter
(bad)
xlat
mov
jl
loope
popa
outs
pop
xchg
sbb
pop
push
out
xchg
inc
popa
cmp
add
lea
aas
fisubr
add
ins
jb
sti
mov
or
push
shl
mov
das
xchg
dec
or
movs
mov
inc
movs
cmp
cli
in
test
push
das
nop
xor
mov
xchg
arpl
sub
frstor
dec
popf
xor
sti
mov
in
add
and
pop
sti
sbb
jg
jp
jo
inc
mov
and
mov
ja
cmp
jg
and
dec
push
or
jo
jns
cld
call
inc
dec
lea
jmp
pop
jecxz
push
jae
ss
scas
cmp
inc
or
dec
stos
jle
std
jecxz
fdiv
cmp
dec
xchg
mov
addr16
fisub
ror
mov
cwde
int3
les
cmp
ss
xchg
jb
inc
adc
cmps
push
in
pop
neg
ja
push
push
ret
jl
sbb
jmp
xchg
movs
mov
pop
hlt
movs
cld
fstp
dec
mov
xor
jae
push
or
xchg
jg
repz
cs
cmp
push
push
je
lock
xchg
and
cmp
push
mov
lods
and
mov
stos
sub
xchg
push
cmp
lea
pusha
ins
adc
adc
xchg
inc
pushf
cwde
retf
shl
mov
imul
pop
cmp
das
sbb
mov
lock
push
loop
cmp
pop
and
push
mov
push
and
mov
mov
dec
cmp
stc
jmp
outs
cmp
pop
mov
mov
ret
rcr
inc
cmps
je
ds
push
and
test
js
pushf
ret
and
jb
cdq
mov
cmp
or
dec
cmp
dec
test
popa
loopne
loop
cmps
(bad)
cmp
pop
adc
inc
and
clc
out
imul
cmc
movs
js
inc
or
pop
int3
xor
out
(bad)
or
aam
(bad)
xor
pop
les
sub
sbb
and
iret
add
loop
and
inc
push
dec
fld
jo
jle
or
xchg
arpl
xchg
pop
(bad)
ins
shr
int
push
fcom
adc
cmp
je
(bad)
ins
pop
ins
jg
aaa
pop
ja
lock
stos
inc
fmul
jl
sbb
jge
mov
(bad)
call
mov
cmc
or
arpl
cmp
sbb
mov
push
in
cmps
add
inc
call
xor
aad
mov
jbe
das
mov
sub
ret
fstp
xor
xchg
adc
and
pop
xchg
addr16
add
push
jns
(bad)
popf
aaa
ds
and
stc
int
or
or
jge
cmp
xchg
iret
shl
jl
and
adc
(bad)
(bad)
adc
fsubr
cmp
repz
mov
(bad)
mov
push
cdq
or
sbb
push
xchg
fs
xor
jmp
shl
pavgw
data16
or
dec
xchg
into
cwde
popa
pop
retf
jl
jmp
xchg
jp
pop
jge
xchg
popf
dec
sbb
aaa
xchg
mov
rcr
das
movs
inc
cwde
nop
ret
sub
sub
xchg
addr16
fwait
popa
mov
pop
mov
push
mov
add
sub
in
(bad)
in
pop
add
psrlq
arpl
add
stc
jle
mov
xchg
mov
dec
cmp
adc
data16
mov
sub
xchg
sub
mov
std
inc
fmul
dec
dec
ret
pop
mov
lea
push
ins
(bad)
enter
popf
popaw
test
sub
leave
out
pop
and
cmp
sbb
jne
fwait
xchg
ss
pop
out
adc
stos
mov
outs
lods
sbb
arpl
adc
push
mov
sub
push
push
push
fldlg2
das
inc
dec
or
mov
jp
out
xchg
inc
fwait
(bad)
pushf
imul
(bad)
pop
int3
or
jmp
fist
fld
mov
leave
pop
jne
nop
cmp
mov
push
xchg
pop
inc
ins
push
mov
cmp
jg
shl
sbb
xchg
mov
movs
or
cmps
ret
mov
adc
js
add
inc
icebp
(bad)
jmp
clc
fs
sub
shr
fadd
lea
mov
mov
dec
push
clc
iret
sbb
test
xor
das
cmp
scas
dec
pop
enter
retf
mov
aas
jno
outs
jnp
xchg
cs
inc
shl
fnstcw
sbb
dec
fwait
cmp
sahf
sub
dec
add
jp
mov
retf
cli
xchg
sbb
movs
pushf
sub
pop
jo
pop
out
add
adc
inc
popa
push
push
cdq
push
lds
sbb
mov
jnp
xlat
jmp
mov
pusha
adc
mov
and
adc
pop
pop
(bad)
dec
(bad)
mov
sub
test
and
leave
add
cmp
imul
sub
xchg
sbb
add
add
adc
out
xchg
sbb
div
pop
mov
loop
xor
mov
lods
lea
and
outs
adc
in
mov
int3
add
icebp
call
fld
cmps
or
icebp
nop
mov
jb
es
or
sub
shr
scas
jns
scas
pop
adc
mov
sbb
pop
or
add
jb
mov
inc
push
mov
adc
inc
outs
scas
loopne
jae
cmp
cmp
push
movs
aam
repz
pop
adc
pop
pop
mov
repnz
inc
jno
shl
mov
fisub
cs
xor
ret
les
jns
aaa
arpl
ins
lods
mov
stos
push
mov
or
popf
xor
hlt
mov
test
ds
(bad)
in
pop
pop
mov
dec
jge
nop
out
(bad)
push
mov
daa
cmp
mov
call
dec
mov
pop
dec
loope
shr
ja
mov
mov
lock
out
add
shr
cld
push
lock
(bad)
and
and
adc
mov
dec
retf
stos
mov
test
loop
add
je
(bad)
xchg
cmps
lods
stc
push
hlt
dec
fistp
not
jp
jecxz
hlt
xchg
adc
mov
loope
mov
and
imul
jo
test
pop
push
scas
movs
push
retf
push
enter
add
jae
sub
add
mov
inc
(bad)
fcmovnbe
jbe
das
neg
sbb
mov
fld
loop
enter
jge
call
les
adc
pop
popf
std
or
lea
out
in
mov
cmp
jns
add
jmp
loopne
rcl
dec
add
rol
sahf
call
and
(bad)
mov
fucom
icebp
xchg
and
mov
xchg
rol
jmp
gs
adc
lea
adc
sbb
mov
dec
test
shr
sbb
sbb
pop
test
xchg
aaa
adc
inc
adc
inc
test
mov
rcr
sbb
loop
inc
jnp
push
xor
mov
sbb
shl
je
xchg
pop
cwde
push
lods
and
or
jmp
or
inc
outs
mov
lea
test
mov
inc
push
das
sub
outs
cld
pushf
mov
push
(bad)
test
mov
lock
dec
sub
xor
add
adc
fmul
push
inc
fwait
js
int
ret
and
push
mov
inc
push
repnz
ret
mov
imul
xchg
jge
int
aam
fst
fcomp
popa
push
mov
fwait
test
inc
jmp
mov
sbb
repnz
jecxz
push
in
cmc
leave
sahf
aad
jp
aam
xchg
out
bound
mov
mov
ror
rep
ror
adc
xor
data16
sbb
jle
dec
cmp
fwait
dec
gs
sbb
inc
push
pop
xor
and
sbb
iret
cmps
mov
sub
and
mov
mov
dec
in
xor
cld
ins
icebp
mov
(bad)
xchg
inc
rol
mov
sbb
pop
out
(bad)
out
rcl
dec
dec
repz
cmp
xor
push
push
cli
cmp
test
cld
sub
test
dec
mov
push
lock
sbb
mov
pop
jnp
arpl
mov
jo
(bad)
sub
retf
scas
ret
inc
jae
or
jne
sub
out
mov
fsubr
mov
test
clc
dec
movs
popf
mov
outs
jns
adc
xlat
dec
out
push
xchg
jg
mov
push
or
into
or
out
loop
mov
adc
ja
cmps
wbinvd
repz
ins
lods
cli
mov
mov
fs
sahf
and
aam
add
es
or
sbb
fcom
mov
stos
je
std
(bad)
test
aad
(bad)
loopne
adc
push
push
pop
es
pop
pop
mov
pusha
push
rdtsc
fisubr
sbb
ret
mov
pop
inc
mov
cdq
cmp
stc
pop
xor
sub
xchg
cli
bound
daa
or
and
mov
mov
js
int3
mov
sbb
ret
out
pop
daa
cwde
fucom
sub
cli
stos
jb
push
xlat
mov
jae
neg
aad
ins
and
jmp
popf
jle
les
inc
sub
in
and
retf
inc
adc
fdiv
shl
push
test
outs
add
dec
rol
clc
pop
in
sbb
(bad)
ficom
dec
xchg
or
push
fcom
adc
outs
adc
adc
or
inc
fs
mov
inc
cmp
jo
movs
mov
loopne
jns
xor
and
adc
mov
aas
sar
or
adc
sbb
retf
mov
add
mov
lock
sbb
sbb
adc
stc
mov
cmp
fstp
adc
push
retf
sbb
pop
ror
popa
sub
xor
(bad)
daa
xchg
inc
icebp
jb
sub
sahf
test
push
cmp
sub
stc
jnp
xor
mov
jle
div
in
xchg
clc
inc
xchg
out
mov
cmp
jmp
retf
jb
or
inc
sub
sub
aad
dec
cs
pushf
push
mov
(bad)
nop
add
test
push
or
and
lods
scas
jnp
aaa
arpl
cdq
sbb
aaa
stc
jmp
enter
and
rcl
xor
push
cdq
push
out
gs
addr16
iret
xor
ret
push
icebp
mov
data16
popf
int3
pop
jg
das
fs
shl
pop
gs
jmp
movs
mov
retf
add
stc
(bad)
hlt
mov
aad
xchg
std
loopne
mov
jne
rol
loopne
inc
cmps
pop
stos
push
out
and
pop
lahf
pop
xchg
sub
jno
jecxz
fld
sub
ins
loope
sub
mov
push
jno
leave
dec
xor
push
(bad)
imul
jno
imul
retf
dec
inc
scas
xchg
mov
call
(bad)
imul
aad
int3
mov
out
leave
mov
bound
call
sbb
imul
jle
lds
jbe
xchg
sub
adc
ud1
cmp
iret
sbb
cs
cli
hlt
xor
push
push
and
jb
sbb
test
pop
mov
scas
movs
leave
mov
mov
xchg
push
dec
xor
inc
mov
jmp
xor
xchg
jns
fstp
out
ins
mov
add
mov
pop
sbb
repz
ficomp
cli
mov
xchg
mov
and
pop
pop
mov
aam
sub
sbb
scas
sub
or
popa
push
xchg
ret
and
xchg
aad
pop
or
and
inc
ja
adc
sbb
vcvtpd2dq
mov
outs
div
inc
es
arpl
push
pop
scas
ds
xor
ins
imul
and
into
(bad)
callw
aaa
push
jne
fld
mov
loopne
bound
mov
lock
mov
xor
inc
jle
push
mov
dec
fst
or
bound
leave
xor
sub
es
jp
int3
mov
push
inc
cmp
ficomp
dec
scas
out
inc
lock
mov
rcl
mov
xchg
pop
cmp
xor
sbb
mov
inc
mov
jne
inc
sub
add
inc
test
mov
add
lss
inc
movs
inc
fcom
bound
int
adc
loopne
adc
sbb
js
push
(bad)
and
add
in
loop
aam
scas
mov
add
xchg
ja
inc
sti
push
int3
mov
add
stos
retf
ss
lds
cli
rcl
dec
dec
adc
inc
xchg
pusha
and
fcom
sbb
test
push
sbb
adc
pushf
repz
(bad)
or
and
and
xlat
ror
dec
std
out
aam
jo
xchg
mov
xchg
retf
shld
ret
inc
pop
jno
mov
mov
fs
retf
pop
not
mov
js
not
out
int
(bad)
(bad)
mov
mov
xchg
mov
outs
jp
int
bound
and
sub
dec
add
mov
sub
dec
sub
pop
adc
xchg
je
mov
fild
into
pop
or
pop
fsubr
(bad)
jnp
in
mov
jo
push
fldenv
xor
fnstsw
hlt
sbb
fcomp
inc
jb
clc
add
scas
jge
call
cwde
xchg
mov
enter
jns
dec
inc
popf
icebp
test
cwde
xchg
mov
or
rcr
adc
je
fld
dec
icebp
add
inc
xor
and
fadd
push
sti
inc
iret
xchg
adc
pop
push
or
mov
fist
push
add
adc
std
xchg
lods
icebp
cmp
jp
mov
popa
inc
dec
mov
popf
pop
outs
hlt
pop
inc
jo
fisubr
xchg
dec
and
add
xchg
push
test
call
sahf
rol
std
add
cmp
sbb
mov
inc
bnd
pop
retf
jnp
push
(bad)
int3
rcl
xchg
dec
cld
push
cli
sahf
stc
xchg
pop
bound
iret
xor
pop
lods
out
push
sahf
inc
xchg
xchg
inc
xchg
sbb
in
outs
popa
xor
sub
int3
pushf
xchg
jp
pop
gs
lods
jg
push
in
or
cmps
mov
int
sub
xchg
cdq
jmp
pop
jle
nop
mov
cmps
inc
and
sahf
retf
or
and
imul
mov
mov
pop
jae
jmp
lods
cli
push
or
rol
inc
push
xchg
(bad)
(bad)
mov
push
jl
in
ja
inc
mov
cmps
sbb
ret
ss
daa
pop
push
js
fidivr
sahf
inc
and
add
fsub
cld
mov
ror
jo
xor
jne
(bad)
(bad)
push
out
es
cld
mov
cmps
jae
sub
(bad)
cmc
hlt
mov
jbe
mov
(bad)
and
aad
or
sub
jo
push
aas
or
jg
sub
les
sub
push
push
jg
and
stos
sbb
ret
sub
leave
enter
nop
pusha
pop
cli
xchg
pop
pop
aaa
js
cwde
push
mov
cmps
mov
xchg
shl
ja
out
xchg
outs
jae
sub
adc
out
ficom
shr
fcomp
xor
or
(bad)
pop
pop
jmp
xchg
push
pop
xchg
dec
jae
mov
and
jo
pushf
jo
pop
xchg
aad
pop
aas
stc
dec
mov
stos
outs
nop
push
add
data16
popf
push
sbb
(bad)
ror
push
jae
hlt
je
pop
arpl
sbb
inc
out
cmp
je
xlat
push
push
inc
inc
cmp
ret
xchg
inc
adc
push
jb
jmp
cmp
or
pop
cmp
test
sub
ja
sub
dec
or
push
in
xchg
adc
xor
jae
bound
rol
or
mov
ret
es
sbb
stc
and
lds
call
arpl
ret
sub
dec
sahf
and
mov
imul
ret
je
pop
fsubr
je
push
jnp
inc
push
adc
aam
dec
outs
stos
stos
popa
jmp
arpl
pop
and
je
ficomp
sbb
pop
stc
mov
cdq
push
les
push
mov
js
hlt
lods
mov
pop
loop
int
push
(bad)
or
clc
pop
jo
xor
(bad)
call
push
mov
sub
lea
arpl
dec
jo
repz
mov
mov
mov
std
dec
scas
call
mov
dec
bound
push
fdivr
scas
fxch
xchg
inc
xchg
or
fstp
mov
dec
jns
push
ret
(bad)
sbb
lods
lods
sbb
adc
movntps
sub
stc
loopne
inc
sbb
mov
sbb
ret
fsubr
jle
in
enter
mov
cmp
loope
sbb
ins
xor
retf
imul
scas
cdq
lods
or
xchg
mov
stos
mov
cmp
jl
add
cmps
lock
stc
push
stos
sbb
fucomip
test
push
mov
add
(bad)
fs
rcr
xchg
lods
jnp
aaa
lods
cld
pop
mov
push
push
in
mov
sub
xor
xor
and
pop
mov
fs
out
not
cmp
cmp
inc
enter
mov
push
(bad)
xor
lock
cmps
in
push
retf
clc
inc
adc
stos
add
and
mov
bound
in
(bad)
in
add
sub
dec
add
imul
and
mov
xchg
(bad)
out
leave
scas
clc
xchg
or
in
sub
mov
sub
jns
jne
xchg
xor
sar
sub
add
lea
stos
or
mov
adc
cmp
xor
pop
fmul
adc
popa
in
cmp
sti
xchg
pop
xor
call
daa
push
push
adc
fsub
jp
mov
dec
pop
and
inc
rol
pop
arpl
scas
ins
out
cmp
xchg
pusha
mov
ins
push
outs
mov
cmp
inc
scas
fwait
pop
and
sub
dec
sub
xchg
leave
inc
scas
mov
sub
aaa
mov
sub
mov
inc
sti
push
dec
popa
punpckldq
push
add
jg
adc
out
enter
sbb
pop
inc
mov
inc
into
mov
push
push
add
retf
or
sbb
stos
loopne
and
lahf
add
or
lods
add
sub
mov
sbb
push
and
les
mov
mov
sti
sub
jmp
fucomi
cwde
loop
xchg
and
aas
pop
int
mov
stos
retf
loope
and
ror
pushf
stos
sbb
add
jl
gs
js
enter
or
inc
mov
rcr
add
(bad)
cmps
int
dec
mov
xchg
mov
in
fld
jmp
call
movs
mov
out
int3
push
jno
push
dec
pop
pop
(bad)
xor
mov
pop
and
push
js
pop
add
xchg
aas
add
jge
outs
fwait
push
movs
jmp
rcl
sti
sahf
clc
ins
xchg
adc
jns
out
bound
inc
jle
dec
jae
push
popf
in
fwait
test
jmp
mov
push
cwde
jno
push
jecxz
mov
mov
dec
fist
aaa
jmp
ffreep
ret
pop
mov
jbe
push
mov
mov
jl
jge
pop
push
in
xchg
aad
mov
shl
mov
ja
ret
add
mov
shl
push
in
(bad)
jle
dec
out
retf
in
cld
int
xchg
xchg
or
mov
inc
aad
xor
pop
shl
xchg
ret
jp
mov
les
imul
stos
and
sbb
int3
repz
or
inc
sub
mov
rol
in
or
inc
adc
add
popf
in
xor
mov
inc
xchg
test
ret
lds
ja
enter
gs
add
ins
push
aad
xchg
jbe
push
mov
(bad)
(bad)
stc
fist
daa
mov
loop
pop
pop
push
mov
sbb
retf
dec
movs
mov
mov
jmp
cmp
pop
ftst
je
sub
dec
(bad)
mov
movs
dec
mov
cmps
sbb
sbb
jno
movs
and
cdq
mov
jecxz
inc
sub
ins
jl
xchg
mul
repz
aaa
daa
imul
xchg
mov
pop
jl
sub
xchg
jmp
push
push
mov
pop
mov
pop
xor
jge
push
inc
daa
dec
xor
(bad)
sub
leave
sub
out
lock
xchg
cmp
mov
dec
leave
mov
adc
push
xchg
sbb
cmc
adc
mov
sbb
daa
lahf
inc
and
or
jnp
imul
push
add
or
sub
jnp
(bad)
inc
xor
cmp
cld
push
test
dec
jo
jl
daa
dec
hlt
sub
adc
fs
xor
movs
(bad)
dec
clc
inc
push
mov
mov
fsubr
es
test
mov
ds
enter
or
dec
mov
mov
in
cmp
test
out
mov
je
(bad)
das
call
push
pop
stos
pop
(bad)
fwait
xor
out
sub
pop
aad
add
dec
bound
iret
ds
stos
ret
setnp
scas
mov
enter
push
aas
dec
int
jmp
jecxz
and
clc
out
imul
inc
shl
sub
inc
int
retf
pop
shl
in
mov
popf
mov
mov
push
loope
mov
cli
fsubr
in
sbb
popa
dec
inc
pusha
test
jmp
inc
jmp
sub
sub
cdq
adc
nop
jae
mov
jb
(bad)
dec
lods
repz
or
dec
adc
sahf
dec
stos
jle
mov
stc
dec
xor
ss
scas
sub
dec
ds
inc
dec
jle
fs
xor
retf
jl
sar
test
addr16
or
adc
psrad
aam
lods
nop
inc
jg
das
out
mov
inc
and
dec
adc
sub
lahf
out
les
addr16
inc
cmp
and
fisttp
xor
mov
dec
inc
dec
add
(bad)
jne
push
push
bound
mov
and
push
inc
adc
push
push
mov
call
sbb
bound
xchg
mov
mov
fisttp
jmp
and
out
mov
lods
in
pop
cmp
add
(bad)
sub
leave
mov
outs
out
cdq
xor
dec
jnp
mov
popa
mov
sub
or
pop
enter
outs
lods
js
sbb
xchg
push
out
mov
movs
sar
popa
loopne
and
rol
inc
push
arpl
or
pop
pop
out
call
les
outs
mov
inc
in
(bad)
loop
pop
pop
mov
xor
int
cwde
repnz
push
aad
lods
push
xchg
stc
fs
(bad)
outs
jmp
stos
sbb
call
(bad)
in
sahf
(bad)
je
cmp
mov
jns
(bad)
sub
js
mov
mov
fidivr
dec
cmp
jmp
cmps
jle
jmp
sub
jae
popf
dec
push
cwde
mov
cs
lods
lods
mul
test
sub
mov
cmps
sar
push
movs
push
pop
push
fcmovbe
fidivr
mov
mov
sub
imul
jae
jb
push
pusha
mov
fadd
sub
test
push
or
sbb
xchg
rcl
fisub
jmp
mov
clc
inc
test
sbb
jmp
xchg
jmp
(bad)
push
sbb
push
mov
xor
sub
leave
(bad)
aam
adc
(bad)
ds
pop
xchg
pop
add
in
jmp
pop
xor
xor
and
cmp
and
mov
test
movs
jnp
jns
cmp
jg
add
jle
cdq
pusha
ds
cmps
inc
adc
sub
mov
out
sbb
into
(bad)
in
jbe
lock
mov
inc
dec
push
dec
xchg
shr
cmps
aas
and
cmps
rol
push
loopne
fdiv
movs
fidiv
movs
ja
sub
dec
pop
adc
call
fcmovnb
push
sbb
aad
stos
adc
adc
repz
jecxz
adc
bound
push
mov
push
fiadd
pop
loope
jl
sub
jno
mov
or
lods
xlat
(bad)
xlat
scas
in
imul
pop
mov
int3
add
ins
or
test
dec
pop
add
dec
pop
mov
ins
mov
mov
int
push
loopne
dec
cmp
sub
(bad)
adc
sub
cmp
mov
test
(bad)
fdivr
xor
cdq
fistp
dec
stos
ds
popa
sub
iret
hlt
and
push
(bad)
ja
xchg
inc
clc
push
jns
jae
gs
out
dec
jmp
lods
pop
add
in
inc
bound
sar
rcl
fcmovnb
pop
fs
repnz
adc
xchg
inc
cmp
dec
mov
jge
gs
scas
ret
popa
dec
mov
imul
sti
aas
(bad)
or
das
pop
jno
xlat
mov
lods
inc
lds
jmp
sub
jae
push
sub
xchg
add
or
loope
(bad)
fwait
jmp
out
fisttp
jae
push
xchg
jecxz
mov
xchg
add
ins
mov
pop
shr
jg
pop
push
jns
mov
call
cmps
mov
stc
ffree
hlt
or
imul
add
int
xchg
clc
push
nop
icebp
nop
test
inc
test
cmps
mov
sub
cli
(bad)
or
cmps
inc
stos
dec
fwait
mov
bound
fdiv
popf
ins
inc
mov
cmp
aad
dec
dec
xchg
fcom
frndint
jo
fcomp
test
pop
jnp
gs
xchg
in
leave
aas
sbb
or
push
idiv
dec
mov
clc
or
int
ins
fwait
mov
inc
pop
add
inc
inc
add
ret
outs
pop
xlat
bound
std
sub
xchg
lods
adc
inc
addr16
adc
nop
add
rcr
ds
enter
cmp
or
mov
or
jecxz
jb
push
es
and
mov
dec
mov
je
cmps
js
cmp
cli
jb
push
repnz
pop
sub
(bad)
ret
and
loope
xchg
push
adc
cmp
push
outs
mov
aam
mov
nop
inc
pop
stos
in
paddd
loopne
cwde
shl
aaa
(bad)
leave
sub
ja
aaa
pop
pop
test
(bad)
loope
addr16
jo
rcl
and
movs
or
sub
jae
sub
shl
loop
or
iret
sub
test
fiadd
addr16
mov
cmp
jb
loopne
pop
xchg
xchg
mov
call
(bad)
lods
or
inc
inc
jmp
les
ficomp
inc
sub
cmp
sbb
jecxz
pusha
gs
or
inc
int
outs
mov
lock
sub
pop
or
cld
inc
int
rcpps
sub
ret
xor
ds
mov
cmp
inc
ret
cmp
inc
sub
leave
cdq
xchg
inc
mov
test
cwde
xchg
or
test
shl
ficomp
fiadd
and
mov
adc
mov
(bad)
sbb
test
jmp
test
or
xor
mov
ins
es
ds
lods
sar
mov
mov
ins
cmp
sub
xchg
jb
movs
pop
cdq
sar
xlat
lods
xchg
shr
cli
mov
fbstp
imul
jns
cdq
inc
mov
jno
les
aas
cmp
mov
fist
call
push
mov
leave
push
xchg
aas
jg
or
pop
adc
cdq
popa
mov
xchg
mov
mov
popf
in
mov
jns
pop
in
test
das
or
xchg
mov
adc
out
push
nop
and
push
or
mov
dec
xchg
push
add
adc
jnp
int3
and
imul
xchg
add
cwde
adc
hlt
(bad)
outs
into
cs
stos
or
int3
xor
adc
mov
(bad)
push
scas
pop
dec
sahf
js
repz
mov
sub
inc
sbb
mov
addr16
sbb
ret
jp
cmp
outs
int
mov
add
retf
sbb
adc
push
imul
lea
pop
sbb
loop
lea
sar
sahf
and
sub
xchg
dec
xchg
and
jae
pushf
cmp
or
inc
push
add
jl
je
push
(bad)
fwait
daa
jg
mov
sub
mov
dec
sub
sahf
and
mov
je
jl
daa
(bad)
jge
pop
adc
dec
out
aad
out
dec
(bad)
mov
ret
adc
mov
jp
shl
in
test
movs
mov
xchg
and
push
mov
fdivrp
mov
pop
addr16
sub
cmp
mov
jbe
rol
stos
jno
adc
adc
fdiv
pop
mov
sub
cld
mov
sti
jg
call
dec
push
stos
jecxz
(bad)
jp
ret
and
imul
call
mov
sbb
jnp
mov
(bad)
mov
mov
jmp
mov
push
pop
addr16
push
adc
mov
ret
xchg
or
stc
dec
mov
cld
out
pop
adc
push
mov
cmc
ficomp
push
(bad)
push
mov
adc
cli
mov
sahf
sbb
push
loope
mov
xor
loop
cmp
or
adc
mov
fstp
inc
or
mov
mov
and
pop
int
mov
dec
shl
jns
int3
stc
(bad)
cmp
aaa
iret
xchg
cld
xchg
jbe
cdq
mov
loope
and
fmul
push
mov
xchg
adc
inc
rcr
test
mov
retf
popa
pop
lahf
pusha
push
push
push
cdq
pop
jns
nop
stos
dec
test
cs
xor
inc
push
or
and
out
fistp
xor
scas
push
push
bound
(bad)
push
out
xchg
xor
push
push
(bad)
cmp
and
(bad)
pop
mov
lods
pop
pop
inc
fmul
adc
add
xchg
inc
mov
(bad)
push
retf
ret
lods
cmps
outs
xchg
sbb
push
xchg
sub
push
jnp
imul
xchg
movs
or
sbb
mov
ss
xchg
sbb
or
push
mov
jecxz
jmp
es
cmc
sti
sbb
or
xchg
popa
pop
cli
pop
call
adc
fldcw
out
into
adc
xchg
jns
outs
mov
(bad)
sub
(bad)
push
add
stc
test
je
mov
cmc
mov
lock
rol
imul
popa
aas
lahf
push
ins
rcr
call
ins
jbe
push
movs
rol
xor
in
jno
(bad)
cmc
loop
shl
push
bound
(bad)
dec
cmp
xchg
test
pop
arpl
mov
(bad)
fild
lds
shl
jmp
mov
adc
jmp
gs
ins
inc
repnz
dec
jnp
pop
mov
dec
cdq
arpl
js
pop
mov
push
clc
mov
test
retf
imul
push
mov
lods
mov
outs
pop
add
cmp
(bad)
cli
inc
jge
addr16
cmps
rcl
push
mov
jbe
pop
push
hlt
add
dec
out
mov
xlat
xor
sub
shr
js
pop
fidivr
push
cli
xchg
mov
inc
stc
push
push
test
push
sub
cmp
xor
push
mov
push
sbb
pop
inc
cs
adc
ret
call
cmp
and
or
in
or
sti
adc
mov
fild
aaa
inc
in
pusha
add
(bad)
leave
add
add
(bad)
jge
cs
cmp
cdq
rcl
mov
je
xchg
(bad)
inc
dec
(bad)
fild
sar
fdiv
pop
hlt
fcmovb
sub
and
adc
mov
jl
mov
mov
aam
pop
sub
test
pop
xchg
icebp
stos
add
pop
shr
stos
xchg
int
sub
add
cld
stc
pop
fidiv
cmps
std
int3
lods
sub
mov
add
(bad)
jmp
imul
test
test
push
jle
test
dec
mov
add
nop
ins
shl
aas
pop
dec
inc
fcomi
push
int3
sbb
imul
repz
out
or
sub
cdq
rol
sbb
fstp
sbb
je
adc
(bad)
or
mov
mov
mov
jne
ins
pop
pop
sti
aam
inc
loopne
jp
jge
cmp
sub
xchg
cmp
sub
ret
ins
shr
mov
inc
call
add
dec
je
lods
jne
xchg
lods
push
or
mov
mov
icebp
jge
adc
pusha
adc
loop
loop
in
repz
xchg
or
xchg
sub
repnz
inc
stc
and
arpl
add
pop
mov
jmp
out
jge
lock
or
scas
popa
xor
cld
cmp
test
add
hlt
or
push
jno
cmps
sbb
call
push
stc
std
and
aam
(bad)
pusha
xchg
add
fsubr
cmp
outs
in
outs
add
fadd
and
repz
shl
pop
jo
popw
loop
movs
mov
mov
call
inc
hlt
retf
dec
mov
push
and
mov
mov
scas
lds
mov
sub
xor
xchg
add
shl
adc
add
shr
adc
mov
mov
fimul
lock
(bad)
ins
jno
ds
in
ins
push
out
add
shl
jecxz
xchg
pusha
cmp
sub
sbb
out
xlat
mov
cmp
pop
enter
xlat
in
mov
ins
cdq
mov
mov
scas
inc
pop
repnz
popf
jle
push
sahf
pinsrw
push
mov
in
push
sub
xchg
cwde
dec
adc
icebp
or
and
jb
push
or
retf
jg
leave
lods
push
adc
sub
in
xchg
fld
in
cmp
repz
test
sub
sbb
lds
inc
xor
adc
imul
shl
cmp
jnp
xor
jmp
cmp
stc
std
push
gs
pop
pop
push
or
movs
ins
rcl
clc
sahf
lods
mov
mov
cmps
jg
bound
adc
cs
mov
push
cmc
mov
sub
or
pushf
push
pop
cmp
jge
cmp
outs
mov
pushf
and
xchg
into
inc
popa
rcr
test
mov
aam
cld
jne
mov
pushf
pushf
or
push
pop
daa
data16
(bad)
fsubr
adc
pop
loop
push
sub
mov
mov
repz
sub
sahf
and
mov
stos
out
pop
stc
fisttp
sub
bnd
sbb
daa
out
shl
ins
pop
pusha
(bad)
cmp
mov
sub
cmc
test
rol
inc
xor
xor
cmp
imul
mov
cmp
clc
cmc
or
icebp
push
mov
dec
pop
xchg
and
cli
enter
out
lahf
retf
mov
sub
mov
cli
cli
or
cmp
pop
clc
add
xor
data16
fstp
pop
fwait
ja
enter
push
pop
inc
jo
or
mov
cmp
out
add
in
test
js
xchg
mov
jae
add
adc
int3
xchg
push
push
push
nop
lock
or
or
fisttp
inc
xor
call
ds
aad
push
add
push
sbb
mov
into
dec
push
loop
adc
mov
cmp
sbb
retf
inc
nop
sti
push
mov
enter
xchg
dec
sub
adc
icebp
dec
push
fwait
je
mov
imul
idiv
loop
std
fist
push
dec
pop
mov
mov
mov
sti
daa
clc
fisubr
stos
add
out
retf
xchg
jns
pop
jecxz
in
int
addr16
test
fwait
hlt
jo
fbld
pop
dec
cmp
inc
cs
in
mov
bound
push
int
sahf
mov
pop
cmc
push
inc
in
test
adc
gs
cs
inc
sub
add
sar
pop
mov
push
and
mov
cmp
cmp
sti
cmp
adc
mov
sbb
jno
sbb
cwde
imul
movntq
out
xor
jne
test
jb
test
in
fwait
pop
outs
dec
add
push
mov
or
inc
inc
add
out
repnz
cmp
inc
or
mov
cli
dec
hlt
fld
mov
or
sbb
retf
mov
and
cmp
cdq
fs
jne
(bad)
sahf
xchg
pop
lea
push
in
mov
out
loop
mov
inc
popf
out
or
inc
imul
mov
push
jge
idiv
dec
int3
push
lods
in
and
das
call
mov
div
bound
scas
jns
cmp
sbb
retf
cmp
pop
jp
or
pushf
mov
xor
(bad)
data16
xchg
scas
push
lds
test
mov
fdiv
cmp
inc
jnp
mov
fldcw
adc
popa
jnp
xor
mov
dec
mov
add
aas
jp
out
fcom
mov
xchg
push
in
jno
jns
enter
cdq
outs
rol
stos
(bad)
(bad)
aaa
inc
mov
stos
shr
mov
jns
mul
inc
xor
sbb
mov
cmp
adc
int3
xor
and
and
push
xor
sahf
cmp
fist
xor
cmp
fisub
(bad)
jge
xor
xchg
movs
cdq
mov
movs
inc
or
xor
and
cmps
pop
pop
sbb
mov
mov
sub
and
ins
push
and
iret
loopne
jb
mov
xor
in
dec
and
cmp
(bad)
or
imul
mov
(bad)
mov
cld
cmp
cmp
(bad)
fsubr
outs
inc
lock
icebp
nop
mov
or
add
test
test
repnz
ins
lahf
sti
mov
stos
jne
mov
movs
js
test
cli
and
and
shl
ret
gs
xchg
stos
or
inc
and
jns
mov
mov
mov
repz
retf
sub
call
pushf
inc
xor
ud2
xchg
arpl
rcr
test
adc
je
push
mov
mov
cwde
sbb
mov
pop
loope
jbe
fiadd
shr
bound
xchg
out
mov
cli
add
push
xor
mov
popa
pop
xor
xor
hlt
in
pop
mov
in
dec
sub
repz
pushf
data16
ror
jmp
shl
cmp
xor
cli
jmp
sbb
dec
add
cmp
outs
lea
mov
jb
sbb
push
jg
jle
sub
mov
cmc
mov
dec
inc
adc
dec
mov
push
pushf
inc
jb
in
imul
bound
mov
cld
cmp
inc
ins
add
cmp
in
icebp
jge
inc
mov
ins
jnp
xor
or
cmp
rcl
test
jmp
jl
dec
daa
fst
jb
sbb
loope
fwait
and
jb
daa
imul
dec
lea
call
pop
or
sahf
int3
cmp
das
ss
jecxz
imul
repz
in
xchg
pop
retf
push
test
mov
ret
pop
aam
ror
pop
das
dec
lahf
gs
mov
les
sub
or
pop
jnp
sub
jno
inc
and
ret
sbb
out
jmp
xchg
loop
es
pop
popf
lock
xor
lods
daa
scas
push
cwde
fiadd
ja
adc
push
les
inc
out
mov
popf
dec
call
jns
sub
and
inc
aad
cmp
mov
in
(bad)
sub
cdq
xchg
sbb
pop
jbe
jmp
cmp
add
fistp
sub
aas
cwde
add
adc
clc
xor
xchg
fwait
push
outs
mov
fwait
push
pop
stos
and
jnp
ret
fsub
inc
inc
enter
aas
ja
add
ds
sub
test
mov
(bad)
in
pop
ins
add
aaa
push
mov
je
sbb
inc
cmp
cli
xor
clc
sbb
mov
shl
dec
dec
into
imul
pop
mov
mov
xchg
repz
in
jne
mov
pop
inc
cmc
dec
sbb
xor
ret
inc
imul
add
xchg
add
mov
aas
ret
inc
repz
inc
(bad)
pop
jne
dec
pop
xor
sub
call
mov
aas
xchg
daa
aaa
leave
inc
dec
xor
cld
cli
stos
push
mov
fucomp
nop
xchg
inc
jo
lods
mov
dec
xchg
cmp
or
add
nop
int
adc
js
por
xor
(bad)
out
mov
mul
jae
js
dec
jg
js
push
pop
mov
test
cmp
mov
push
fcom
retf
call
cmp
(bad)
jl
repnz
retf
mov
test
repz
ror
mov
push
(bad)
sahf
xchg
push
(bad)
fmul
add
and
pop
(bad)
stc
imul
fist
lahf
push
rcl
mov
xor
mov
out
icebp
arpl
cld
mov
xchg
inc
out
jbe
dec
adc
retf
mov
icebp
push
pushf
cmp
mov
cdq
sbb
push
fs
dec
jg
mov
push
inc
enter
mov
ins
xchg
inc
inc
and
cs
das
lods
sub
mov
repnz
loopne
mov
stos
jge
xchg
dec
push
sub
int
outs
(bad)
fs
das
mov
jmp
scas
in
and
outs
inc
jmp
pop
lods
ficom
gs
int
cmp
lea
aam
fucomp
cmp
mov
mov
push
and
dec
mov
ins
push
mov
hlt
test
cdq
sub
loop
lods
pop
(bad)
ret
pop
inc
in
and
inc
add
pusha
sub
test
icebp
inc
push
aaa
inc
mov
lea
cmc
push
adc
and
loopne
push
test
inc
out
cmp
mov
inc
popa
(bad)
add
dec
inc
in
xchg
dec
scas
xchg
fcmovnu
jecxz
sti
test
or
mov
jno
sub
ret
arpl
adc
(bad)
aaa
sbb
xchg
daa
movs
mov
ins
push
push
pop
mov
push
ins
mov
mov
pop
pop
push
test
mov
or
xor
(bad)
sbb
lahf
imul
pop
adc
jae
dec
jmp
mov
and
jbe
xor
(bad)
jno
mov
cmps
jmp
pusha
jecxz
lods
pop
add
fwait
adc
(bad)
sub
push
pop
push
gs
sub
aad
scas
ds
pop
lahf
iret
or
ja
pop
mov
sets
out
or
mov
imul
fwait
and
push
mov
pop
fmul
or
sti
mov
sahf
jmp
fwait
and
dec
(bad)
ror
pop
xlat
add
stos
inc
mov
inc
out
mov
pop
mov
aaa
daa
and
scas
xor
imul
popa
push
fs
push
lock
push
dec
add
(bad)
fcom
jo
daa
sub
out
sbb
fnstcw
retf
mov
pop
cs
push
sub
repnz
es
loop
fxch
nop
pop
ins
xchg
pop
push
int
shl
inc
pop
jns
addr16
push
lds
dec
nop
popa
or
dec
mov
test
or
push
int
cmp
inc
std
repnz
mov
(bad)
jae
fwait
inc
mov
cwd
in
jp
(bad)
adc
xor
xorps
cmp
xchg
dec
push
imul
add
test
adc
jne
mov
(bad)
pop
repnz
ficomp
inc
clc
sbb
pop
dec
jge
push
fidivr
add
xchg
in
and
retf
or
movs
inc
pop
sub
push
lods
xchg
mov
adc
pop
adc
adc
adc
sub
adc
jo
arpl
hlt
push
jnp
adc
jo
out
or
push
nop
gs
cli
sahf
adc
mov
std
jne
or
fdiv
inc
xchg
sbb
push
leave
sbb
add
jae
fdivr
(bad)
adc
sub
pop
cld
adc
mov
or
rcr
mov
pop
addr16
gs
aam
lar
jmp
and
adc
jb
dec
jle
and
scas
or
inc
xor
bound
xchg
cld
mov
retf
add
paddsb
retf
scas
jns
jb
movs
dec
push
add
jne
in
(bad)
or
dec
or
clc
scas
inc
daa
pop
mov
imul
and
dec
or
inc
or
xlat
rcr
xor
retf
or
jb
or
clc
imul
rol
dec
cmp
clc
out
cdq
fsub
mov
test
mov
mov
and
inc
mov
sbb
lahf
pop
imul
loopne
dec
bound
xchg
inc
std
inc
cmp
xchg
sub
mov
mov
cld
fdiv
dec
mov
icebp
jno
jmp
or
rcr
sub
jno
mov
rcr
outs
neg
pop
stos
(bad)
and
xor
nop
(bad)
popa
ins
push
mov
xor
clc
add
dec
mov
(bad)
out
jbe
jle
pop
out
popa
test
into
out
loope
stos
aad
xor
sbb
aas
das
ret
(bad)
cmp
retf
adc
pushf
sub
push
cmps
cmps
sub
inc
in
dec
inc
scas
ins
(bad)
xchg
ja
mov
outs
ds
pop
(bad)
fwait
jl
hlt
adc
ror
ds
pop
fist
sub
jnp
add
pop
addr16
push
ficom
cwde
mov
mov
mov
or
add
pusha
out
ins
sub
xchg
xchg
hlt
outs
loope
scas
push
mov
dec
mov
inc
push
stos
mov
popf
div
add
pop
xor
inc
jge
(bad)
sub
mov
push
sub
pop
or
scas
cdq
add
adc
call
imul
sahf
pop
mov
inc
xchg
sub
stos
inc
in
mov
jae
ins
fcmove
fcomp
gs
sbb
mov
into
(bad)
aaa
jne
and
test
mov
mov
xchg
xchg
adc
jns
out
xchg
popa
xchg
pop
ret
cmc
rcl
js
mov
fild
and
adc
das
jo
adc
dec
or
add
leave
fsub
xchg
hlt
ror
and
test
dec
loope
retf
(bad)
add
xor
scas
shr
lock
mov
sub
into
sub
jge
push
shr
sar
pop
fldcw
dec
(bad)
movs
scas
movs
stc
sub
jl
or
lds
pop
loope
or
sbb
jle
das
dec
inc
xor
mov
inc
pop
cmp
lahf
outs
leave
dec
dec
int
inc
mov
in
add
aam
cmp
test
cmp
es
xor
add
inc
adc
mov
cmp
mov
leave
dec
pop
mov
cmp
ror
xchg
sbb
pop
scas
cs
loopne
sti
sbb
(bad)
loopne
mov
jl
stos
lds
data16
jmp
in
out
push
mov
jl
sbb
cmp
jae
lds
sub
and
sub
push
jge
pushf
mov
not
mov
ret
sbb
inc
push
mov
cmp
and
push
pop
nop
mov
dec
push
lds
jecxz
xor
fwait
lock
xchg
mov
or
mov
fadd
(bad)
pushf
out
lea
fldenv
push
rcl
imul
aam
loopne
cld
pop
es
into
dec
or
sbb
and
stos
lods
xchg
cld
int
cmp
and
jg
mov
push
iret
mov
push
push
xchg
sahf
add
xchg
test
xor
xlat
pop
push
lods
stc
fisttp
dec
and
inc
and
push
ret
das
cld
dec
push
sbb
jo
xor
mov
cmc
sbb
or
stos
sar
inc
jbe
pop
xor
fisttp
ss
test
pushf
sbb
cs
add
cdq
mov
or
and
popa
stos
shl
cmps
cmp
cdq
in
out
jns
mov
das
jmp
ins
cld
scas
aad
jmp
dec
sbb
daa
jo
mov
xchg
push
and
and
fsub
sbb
shr
jle
mov
jl
lds
push
adc
sbb
mov
mov
in
add
or
fcomip
pop
ss
dec
outs
dec
(bad)
xchg
cmp
and
jmp
jbe
js
sub
pop
mov
or
sbb
cmps
std
shl
jbe
sub
aas
lahf
jae
xor
or
dec
and
stc
scas
add
xor
dec
dec
shr
inc
aam
and
jmp
sbb
test
das
mov
jmp
fsubr
jae
out
add
mov
xor
mov
outs
mov
aam
pop
shr
pop
mov
mov
mov
movs
mov
sub
push
pusha
inc
movs
aas
iret
int3
call
xor
lea
mulps
xchg
mov
sub
jl
shr
and
not
inc
jmp
ret
std
mov
pop
jb
rcl
dec
and
pop
mov
in
mov
rol
test
dec
pop
(bad)
xor
(bad)
test
mov
cld
adc
mov
das
and
imul
shr
dec
mov
call
inc
and
mov
std
adc
jb
mov
outs
leave
jnp
push
pusha
push
scas
fs
push
jae
and
add
mov
push
test
jecxz
push
in
and
xchg
mov
xor
xor
cmp
mov
mov
mov
jb
pop
jno
out
(bad)
cmps
cmp
es
xchg
mov
fst
scas
int
jle
sub
jb
hlt
adc
and
or
arpl
mov
xchg
xor
cmp
stos
add
push
int3
and
xchg
xchg
int
cld
(bad)
cmp
push
out
imul
cmp
cwde
lock
imul
sub
retf
mov
adc
aam
jns
xchg
adc
sbb
mov
test
scas
add
stc
adc
xchg
mov
dec
jle
xchg
mov
fdivr
xchg
sti
pop
shr
aam
out
dec
sahf
jne
sti
push
mov
adc
imul
js
dec
sub
push
add
aaa
imul
out
ja
(bad)
mov
dec
cmp
scas
ror
cmp
(bad)
mov
adc
cmp
xchg
inc
loop
inc
(bad)
loop
test
int3
sahf
mov
ficom
push
retf
scas
xchg
add
mov
or
xchg
fcom
mov
or
mov
or
test
jb
mov
jae
mov
cmps
cld
sub
jp
icebp
aad
stc
add
pop
add
rcr
sbb
mov
pop
mov
dec
test
cld
jmp
or
adc
pusha
movs
add
retf
pop
ja
xor
mov
jnp
ins
call
cwde
shl
mov
jle
fldenv
xor
fnstenv
jle
jmp
stc
dec
xor
in
fild
jae
int
jecxz
(bad)
cmp
mov
into
adc
or
je
inc
mov
inc
(bad)
scas
dec
loopne
inc
pop
pop
mov
xor
ds
es
push
dec
xchg
jge
stc
repnz
(bad)
data16
dec
(bad)
pop
aad
movs
lods
out
push
jae
scas
xor
in
in
cld
add
repnz
rcr
pushf
xchg
rcl
or
cmps
das
and
or
mov
dec
nop
mov
paddusb
test
fidiv
jp
mov
xlat
(bad)
cmp
push
std
vmovupd
outs
loop
pop
fnstcw
sub
jno
adc
mov
push
out
or
dec
xor
and
mov
clc
mov
test
mov
js
pushf
repz
lock
aaa
pop
jmp
ja
sub
push
retf
std
mov
push
add
cwde
movs
inc
jns
and
ins
push
mov
sub
cld
loopne
sbb
es
pop
push
push
jo
cdq
fst
dec
push
out
pop
rol
lods
icebp
mov
adc
icebp
lds
dec
inc
aas
mov
push
dec
add
je
int
jecxz
rol
fisub
movs
lock
inc
push
push
test
jl
fst
into
lahf
xor
and
rcl
or
(bad)
pop
aaa
add
test
sbb
scas
add
inc
mov
or
fsub
inc
das
(bad)
repnz
xor
test
(bad)
push
sub
in
enter
jmp
out
or
jo
loop
je
mov
imul
mov
cmp
mov
adc
test
add
push
sub
pusha
sbb
adc
adc
and
and
jb
sub
adc
jae
test
pop
sub
mov
push
and
aad
pop
xchg
pop
pop
in
inc
movs
mov
gs
js
mov
inc
rcr
mov
mov
jae
xor
jmp
fadd
jae
out
push
mov
(bad)
(bad)
std
cmp
in
mov
fild
adc
xor
out
pop
or
into
jne
fbstp
fwait
test
sti
lock
ret
mov
xor
pop
mov
daa
(bad)
fcmovnu
add
cmp
cmps
stos
jne
pusha
jecxz
mov
pop
pop
leave
je
outs
out
xlat
pop
ss
jecxz
cwde
jecxz
jmp
loope
clc
pushw
jno
in
mov
gs
pop
call
push
scas
adc
fld
xor
adc
mov
mov
inc
sahf
jge
(bad)
retf
inc
sub
mov
xor
pop
bound
sbb
stc
fld
movs
in
(bad)
inc
pop
dec
aam
clc
mov
ficomp
and
sbb
test
int3
adc
lea
sub
addr16
rol
push
cmp
jb
inc
out
push
outs
mov
hlt
in
dec
jge
mov
sub
call
add
sbb
loope
or
or
cmp
or
jge
inc
dec
inc
sti
ds
pop
popa
ror
xchg
cmp
xor
dec
fs
lds
sbb
push
leave
add
movs
mov
fmul
sub
pushf
data16
popa
xor
mov
mov
xchg
mov
mov
inc
jno
mov
jno
add
je
pushf
imul
jp
xor
call
mov
xor
mov
sbb
mov
daa
movs
nop
movs
iret
popf
xchg
lar
add
push
mov
inc
shl
fild
or
cmps
push
stc
mov
loopne
scas
shl
mov
add
or
int
jne
add
int3
push
test
retf
mov
ins
and
cmps
dec
ret
push
dec
idiv
icebp
dec
es
and
and
cs
adc
and
push
out
mov
(bad)
fistp
retf
xor
mov
sbb
pop
xor
in
clc
pop
jle
and
add
fdivr
cld
sub
aad
jbe
mov
cmc
jb
adc
shr
rol
push
pop
or
inc
nop
dec
(bad)
dec
dec
pop
hlt
inc
repnz
jecxz
or
ja
call
cli
lahf
mov
push
adc
cmps
pop
and
cld
dec
push
jb
and
repz
or
xchg
mov
inc
mov
add
mov
outs
jnp
or
mov
xor
inc
mov
push
mov
(bad)
in
pop
mov
in
push
rcr
mov
test
jb
inc
mov
iret
aaa
mov
pop
popa
aad
add
add
dec
mov
mov
inc
scas
adc
jmp
sub
ss
test
mov
cli
mov
(bad)
fnstsw
add
loope
mov
mov
jnp
in
mov
and
jb
jmp
in
ds
out
add
mov
cmp
mov
fsub
lods
and
repnz
cmp
xchg
mov
sbb
sub
icebp
mov
fs
sub
sbb
jae
mov
adc
ins
pop
inc
or
fldenv
dec
fs
daa
lds
pop
loope
pop
movs
fiadd
std
jecxz
jp
into
les
enter
aam
cwde
sbb
lahf
mov
xor
mov
cmp
jmp
cmps
aad
shr
dec
sbb
jmp
loop
in
loop
pop
loopne
inc
jecxz
fst
mov
jae
and
xor
mov
scas
jmp
sbb
into
and
mov
fs
fild
(bad)
shl
(bad)
imul
mov
out
push
cmp
mov
imul
jp
dec
add
jbe
add
and
or
push
pop
push
jl
xor
jmp
jl
aam
push
mov
shl
inc
repz
mov
and
rcr
or
pop
push
das
dec
push
sub
dec
push
out
ja
push
ror
sub
sbb
add
sub
xor
leave
test
mov
or
add
mov
sub
addr16
imul
push
adc
daa
lods
cmp
fild
cwde
mov
fbstp
xchg
fs
adc
jge
ins
fbstp
push
fild
push
xchg
mov
nop
add
fwait
ins
add
sub
and
mov
sub
and
stos
sbb
stc
or
pop
or
js
xchg
sbb
adc
std
imul
jae
sub
arpl
sahf
test
or
fs
fsub
add
aas
mov
or
imul
pop
xor
stc
mov
fisubr
mov
loopne
xchg
jb
pop
std
test
adc
mov
push
cmps
adc
(bad)
sbb
outs
(bad)
loope
ds
mov
lds
or
sbb
dec
add
sub
add
pop
clc
pop
fs
mov
xlat
ins
aam
shl
cmp
in
push
stc
mov
and
outs
scas
jne
jmp
in
xchg
push
sbb
aad
or
sahf
mov
jns
xor
enter
imul
mov
push
(bad)
rcr
lock
jg
mov
call
add
loop
int
into
xor
test
inc
outs
or
push
pop
add
push
sbb
pop
xor
repz
adc
bound
xchg
add
adc
pop
xchg
gs
rcl
sti
mov
sub
iret
xchg
stos
xlat
jge
leave
dec
pop
movs
add
lods
sbb
std
adc
(bad)
mov
jo
cli
jno
add
mov
mov
test
pop
and
(bad)
xchg
xor
cld
inc
in
ror
mov
(bad)
shl
or
out
sbb
xor
repnz
xchg
mov
ror
in
jbe
rcr
xchg
or
sbb
mov
pop
inc
lods
cmps
(bad)
jecxz
sub
inc
jecxz
xor
fisttp
bound
xchg
pop
push
xor
movs
push
in
repnz
add
jp
push
stc
test
add
fwait
adc
imul
pop
sbb
fbld
mov
fiadd
jmp
and
into
sub
in
(bad)
sub
popa
ret
shl
sub
enter
inc
add
lea
dec
shr
ss
popa
int
lods
mov
pop
imul
sbb
test
dec
mov
adc
cli
mov
ins
cmps
cs
xor
mov
pushf
dec
pop
retf
fild
sub
or
out
pusha
push
inc
movs
mov
xor
and
(bad)
in
sbb
(bad)
mov
mov
loopne
add
inc
das
jecxz
xchg
in
pop
or
sar
jge
int
mov
or
stos
fisubr
sbb
out
cdq
jmp
and
xor
mov
push
jge
sbb
into
xchg
inc
add
sub
xor
xchg
movs
fistp
(bad)
cmp
lock
in
je
outs
lock
fdiv
out
adc
sub
add
xchg
call
lds
clc
adc
cmc
retf
aaa
inc
push
mov
mov
stos
out
jo
push
lods
fisub
inc
fsubp
pop
in
sbb
in
adc
aas
jb
mov
xchg
outs
xchg
je
xlat
retf
popa
and
inc
add
iret
(bad)
mov
(bad)
(bad)
imul
mov
push
jbe
iret
sub
lea
call
adc
stos
std
and
pop
sbb
push
xchg
in
pop
sahf
test
dec
cmp
rol
std
cmp
int
jo
push
mov
ret
pushf
xchg
retf
loop
inc
and
ins
ror
test
loope
(bad)
jl
sub
scas
fidiv
into
sub
add
sbb
mov
fmul
cmps
sbb
fisubr
lea
cli
adc
cwde
xchg
loope
or
aad
jmp
jge
inc
sti
es
mov
ins
loope
stos
mov
call
mov
mov
adc
popa
aaa
aas
fwait
xor
pop
fnstcw
sti
ds
fisub
dec
stos
leave
xor
sbb
xor
rol
test
and
pushf
imul
pop
rcr
mov
test
mov
jne
mov
mov
mov
(bad)
dec
(bad)
jp
in
aam
je
pop
call
mov
stos
cmps
adc
sub
adc
pop
leave
imul
push
movs
aam
cmc
(bad)
stc
jmp
pop
cwde
mov
lods
outs
inc
ucomiss
xor
daa
jbe
nop
sub
mov
neg
xchg
shl
sbb
imul
lods
test
xchg
pop
adc
push
int3
adc
(bad)
dec
jle
shr
aad
add
sbb
xchg
xor
call
(bad)
jb
loopne
mov
adc
imul
aaa
ds
mov
push
push
cmp
cmp
leave
test
shl
push
xchg
add
and
mov
xor
mov
xchg
jl
int3
mov
xchg
ss
fs
pop
mov
adc
aad
mov
mov
ja
movs
xchg
mov
inc
inc
adc
jnp
iret
xchg
mov
and
scas
or
das
jl
ror
in
outs
and
inc
icebp
lods
inc
push
inc
pop
mov
inc
sub
loopne
dec
pusha
popa
mov
adc
test
inc
add
sbb
dec
sbb
out
sbb
xchg
xchg
pop
dec
ja
das
mov
mov
add
stc
ds
les
movs
push
repz
mov
mov
daa
scas
fs
push
sub
lds
jbe
mov
in
cmp
jb
xchg
scas
pop
mov
sbb
cmp
out
cmp
bnd
mov
mov
in
add
lea
test
lds
dec
js
scas
cmp
jmp
inc
sub
hlt
xchg
xchg
mov
adc
js
lahf
cwde
cmp
ficomp
cmc
push
js
stos
lods
jnp
out
ret
cmp
gs
add
aas
cmp
pop
push
int
and
sbb
imul
push
repz
push
or
in
test
or
and
cmps
and
mov
loope
mov
rcr
push
je
mov
addr16
push
cmp
into
cmc
jb
mov
les
add
pusha
arpl
adc
cmps
pop
(bad)
sar
mov
fdivr
xchg
or
cmp
lahf
inc
movs
inc
rcl
arpl
mov
pop
mov
setp
mov
jmp
ror
or
mov
xchg
jb
pop
cwde
sahf
(bad)
aaa
sbb
out
mov
jo
dec
iret
mov
add
loope
sti
xchg
sub
mov
bound
hlt
mov
mov
icebp
jge
arpl
add
movs
mov
mov
mov
xchg
sbb
jnp
sub
add
loope
std
sti
sbb
mov
push
lahf
xchg
movs
mov
cmp
pop
not
xor
ror
aad
xchg
retf
push
xor
and
sub
mov
ins
pushf
jg
ss
popw
mov
aam
fs
jbe
cli
or
pop
sub
clc
push
jl
jmp
test
imul
add
imul
push
xchg
push
into
out
jne
sub
stc
mov
xor
adc
adc
rsm
fwait
hlt
jle
out
and
leave
ret
or
mov
cmp
mov
dec
fs
xchg
shr
push
ret
xchg
hlt
xor
mov
retf
enter
aaa
xchg
or
and
push
mov
cs
nop
mov
cmp
xor
out
mov
xor
cmp
mov
jp
mov
adc
dec
push
test
cmp
pop
mov
ins
fsub
jg
and
into
cmp
push
push
adc
jl
push
sahf
loop
je
js
push
div
xchg
pop
adc
mov
ins
stos
and
in
fidivr
sub
and
fmul
xchg
pop
cdq
outs
pusha
sub
out
out
jno
daa
mov
shl
pop
pop
(bad)
cld
hlt
mov
arpl
enter
xchg
popf
sub
adc
push
ret
mov
add
jp
jge
mov
out
dec
aas
push
(bad)
cmp
and
pop
and
nop
icebp
fsubr
cmp
jmp
push
dec
call
(bad)
shl
fisttp
inc
add
push
ja
sbb
sti
outs
int3
push
mov
fcomp
lods
cmps
inc
int3
pop
cs
stos
push
movs
fsub
int
rcr
mov
bound
pop
or
and
xor
inc
ja
shl
loope
inc
xor
das
xor
sub
int
inc
(bad)
adc
imul
fisubr
mov
loopne
push
mov
and
aad
popa
imul
mov
mov
xchg
out
popa
mov
adc
sbb
xor
adc
and
xchg
retf
mov
dec
imul
xchg
dec
add
add
stc
leave
push
fld
aad
aam
mov
dec
xchg
scas
cmps
scas
fdiv
mov
pop
int
pop
sbb
mov
mov
popf
inc
retf
rcr
inc
aam
jnp
mov
test
jns
sti
stos
xchg
(bad)
pop
sbb
mov
add
push
std
inc
mov
pop
adc
fs
sahf
jne
cmp
in
jbe
je
jns
mov
push
retf
add
sbb
rcl
push
mov
addr16
cmp
mov
mov
sbb
mov
adc
push
cmps
lods
xchg
inc
cwde
jle
cwde
dec
xchg
jmp
inc
or
push
inc
adc
(bad)
adc
push
jp
shr
push
mov
sbb
out
mov
dec
and
mov
sub
xchg
or
push
push
adc
pop
xchg
mov
mov
je
fst
shr
mov
call
(bad)
fs
ds
out
mov
mov
clc
scas
adc
cld
in
shl
lods
jne
add
gs
ret
push
xchg
mov
add
out
lods
mov
cwde
fwait
mov
sub
push
popa
call
push
sbb
and
mov
inc
ins
push
nop
mov
lahf
push
fldcw
sub
add
loop
ds
xlat
sbb
pop
iret
mul
leave
fisttp
loop
push
cmp
jae
retf
(bad)
scas
pop
cmp
adc
push
cmp
repz
xor
add
or
push
inc
lods
lds
dec
adc
xor
(bad)
jge
retf
outs
jmp
mov
mov
inc
inc
test
pop
clc
stos
aam
jp
push
push
(bad)
fcmove
scas
fdivr
rcr
xchg
stos
inc
adc
jns
pop
mov
dec
fdivr
pop
add
(bad)
ja
push
in
jae
xlat
xchg
sti
mov
in
(bad)
lods
and
lods
stos
and
jp
cmps
out
xlat
mov
add
jbe
xor
repz
pop
dec
std
movs
push
jne
out
cmp
sub
adc
sub
addr16
sub
sbb
in
shl
sbb
test
add
pop
cli
fmul
mov
stc
sbb
pop
lea
aas
iret
mov
(bad)
bound
fisubr
shr
rcr
into
push
mov
in
cmp
imul
aas
mov
dec
aaa
mov
xor
mov
lock
aad
and
rcl
imul
imul
lea
lock
sbb
fiadd
xchg
cmp
(bad)
jecxz
dec
jle
pushf
sub
add
adc
idiv
in
sbb
jl
mov
(bad)
or
mov
jle
fwait
add
sahf
jmp
inc
sar
ins
jp
test
rep
push
jle
mov
jge
out
movs
xchg
sar
push
lods
adc
sub
cmp
out
aad
and
sub
pushf
sub
mov
xchg
stos
into
jg
xor
popf
or
jmp
mov
cmp
mov
mov
retf
inc
push
push
jmp
sbb
push
xlat
icebp
or
rol
xchg
out
adc
mov
inc
sub
ja
push
pop
adc
fstp
pop
sar
shr
pop
mov
(bad)
aam
or
and
inc
dec
mov
inc
inc
dec
adc
and
pop
cmps
lods
ror
int3
inc
inc
mov
jb
addr16
jmp
sbb
(bad)
dec
or
std
add
call
in
push
xchg
inc
mov
ss
daa
scas
(bad)
jge
push
cmp
das
pop
mov
mov
or
je
mov
pop
data16
cmp
movs
aaa
and
or
pop
int
out
imul
test
jmp
dec
test
jl
add
and
mov
xor
jns
xchg
inc
in
rol
icebp
inc
mov
and
mov
hlt
mov
mov
test
xchg
sbb
es
test
ss
arpl
adc
dec
lods
int3
cmps
call
pusha
dec
sbb
pop
adc
mov
mov
or
mov
in
fisubr
repnz
jmp
inc
ins
leave
lahf
arpl
mov
call
sub
mov
or
add
mov
daa
or
or
stos
and
popa
stos
lock
add
in
lods
inc
cmp
div
hlt
adc
je
addr16
cmps
pop
int
sub
shr
fimul
jecxz
or
out
push
mov
repnz
je
stos
sbb
jge
mov
jo
and
int
xlat
div
add
inc
loope
retf
xchg
cmp
xor
mov
cmp
mov
jmp
dec
mov
pop
sti
fadd
mov
in
ret
loop
mov
and
sub
mov
push
mov
ret
pop
out
(bad)
mov
mov
pusha
ss
sbb
gs
pop
sar
add
cs
mov
lahf
xchg
push
iret
dec
and
dec
adc
mov
fsub
ss
dec
sahf
stc
mov
xor
push
outs
scas
or
frstor
xchg
dec
pop
sahf
pop
pop
in
inc
int
xchg
push
fstp
jae
stos
ja
xor
(bad)
ror
mov
xor
leave
out
mov
(bad)
(bad)
jle
test
mov
cmp
mov
pop
mov
fcmovnbe
mov
cwde
repz
mov
lds
int
mov
push
pop
popf
inc
dec
retf
xchg
push
test
mov
xor
in
cmp
jmp
popf
pop
movs
ret
lods
push
sbb
pop
mov
add
xchg
call
cmc
pusha
test
or
xchg
and
in
lods
pushf
shl
mov
shr
scas
addr16
out
push
lods
jp
push
push
shl
dec
rcl
sub
jle
fwait
idiv
dec
pop
pop
int3
adc
add
imul
loop
and
mov
cmps
pop
mov
pushf
lahf
and
adc
lahf
adc
xchg
mov
jmp
push
out
sub
sub
in
mov
ins
int3
pop
mov
push
push
(bad)
ds
push
jp
dec
shl
int3
(bad)
outs
sbb
cld
das
iret
add
push
mov
mov
inc
add
mov
pushf
sbb
arpl
leave
adc
cmps
jns
pop
jg
mov
mov
repnz
fwait
mov
add
xchg
dec
dec
jnp
pusha
push
out
imul
jb
into
mov
out
jae
push
push
(bad)
jmp
cmp
sbb
cmp
(bad)
(bad)
or
sbb
cld
retf
xchg
jb
outs
cmp
cmp
into
mov
test
jg
mov
adc
cmc
sub
xchg
cmp
jno
inc
push
dec
movs
into
in
je
mov
dec
ds
sbb
fmul
cmp
(bad)
jmp
jmp
js
je
test
aaa
popa
dec
pusha
inc
ja
call
sub
popa
jge
jmp
sub
sar
call
ins
ja
inc
popf
aad
jb
push
addr16
jecxz
sub
pop
fisttp
or
sub
gs
in
adc
adc
xchg
scas
ret
and
and
and
bound
popa
icebp
rcr
imul
jne
les
inc
js
inc
and
lds
lahf
xor
js
fmul
icebp
mov
jbe
sahf
les
mov
and
cmp
or
add
mov
pop
xor
stos
mov
push
mov
and
outs
sub
and
daa
and
nop
lea
fsub
sahf
unpcklps
mul
sbb
mov
scas
icebp
lea
push
xchg
mov
mov
cwde
arpl
loop
div
in
iret
jp
rol
xor
or
ret
imul
test
push
mov
scas
jnp
popa
pop
dec
cmp
in
pop
and
inc
scas
mov
sti
mov
test
jo
push
or
pop
mov
mov
adc
xlat
mov
sbb
or
xchg
aas
pop
adc
adc
rol
push
pop
pop
scas
mov
add
mov
sti
cmp
mov
xor
ret
mov
stos
xchg
mov
pusha
shl
cmp
sub
test
jmp
inc
add
add
and
int3
jecxz
inc
(bad)
sub
add
jecxz
push
jmp
imul
xchg
jnp
in
adc
pop
stc
(bad)
outs
or
rol
stos
imul
test
mov
idiv
jl
aaa
inc
xchg
sbb
dec
push
cli
pusha
ja
push
addr16
push
movs
dec
pop
xchg
mov
inc
loope
lods
dec
shr
int
scas
loop
pop
pop
sbb
les
jecxz
push
pop
cmc
fwait
mov
neg
loope
outs
lahf
push
cmp
jmp
(bad)
in
mov
mov
mov
inc
xchg
dec
mov
jbe
xor
adc
ss
cwde
add
or
xor
icebp
mov
or
xchg
iret
inc
jmp
dec
mov
cmp
mov
fdiv
add
mov
xor
dec
add
stc
sbb
ja
fdivr
jle
add
cmc
adc
push
jno
add
add
int
into
fwait
lock
pop
int3
out
inc
mov
jl
sub
aas
retf
cld
fiadd
inc
pop
xchg
push
cmps
fwait
shr
retf
sub
shr
xchg
lods
mov
sub
daa
jl
lods
mov
push
jnp
push
rol
adc
ror
mov
imul
and
jl
out
hlt
pop
xor
iret
pop
ss
jmp
test
jae
ds
jmp
ror
mov
iret
inc
or
inc
xchg
jmp
mov
lock
cli
dec
stos
retf
imul
dec
dec
fwait
sahf
adc
xchg
pop
mov
(bad)
dec
jmp
sti
repnz
cmps
or
dec
add
dec
(bad)
sbb
push
mov
pusha
stos
xchg
movs
jmp
call
adc
cli
inc
js
outs
or
mov
call
jb
retf
mov
mov
repz
inc
fldcw
jne
jp
call
pushf
outs
pop
xor
dec
aas
mov
adc
pop
ret
icebp
scas
das
mov
ins
out
dec
inc
movs
scas
or
sti
ja
mov
xchg
mov
ror
xor
and
int
xchg
sub
repnz
call
sbb
gs
int3
fisubr
retf
clc
xor
push
dec
sub
fwait
mov
bswap
xor
pop
retf
loopne
ins
xchg
push
add
push
inc
outs
loop
and
pop
dec
pop
jg
dec
adc
mov
aaa
push
fcomp
cld
inc
dec
outs
call
jne
outs
je
sbb
mov
fdivr
mov
mov
push
in
push
int3
rcr
push
enter
xchg
js
iret
shr
mov
adc
call
push
jmp
push
test
imul
push
fs
xor
pop
jg
mov
mov
inc
stos
mov
or
leave
dec
in
scas
call
cmp
loop
daa
mov
add
mov
pop
adc
adc
sub
mov
pop
inc
xchg
dec
push
push
(bad)
out
pop
mov
jp
jmp
cld
ss
pop
mov
sar
cmp
xor
out
push
(bad)
inc
mov
sub
cmp
cli
adc
mov
push
(bad)
imul
inc
inc
int3
push
sub
shl
retf
mov
lods
imul
gs
inc
dec
sbb
jg
inc
push
out
mov
push
aaa
rol
in
mov
das
das
loope
fistp
xor
(bad)
sub
imul
scas
jmp
es
jmp
retf
sahf
mov
cmps
fwait
xchg
scas
and
mov
push
enter
lahf
push
shl
out
adc
jle
mov
adc
retf
dec
cmp
lea
jb
adc
and
fwait
jl
daa
xchg
repz
mov
adc
(bad)
mov
ror
scas
dec
lods
out
shl
mov
push
cdq
cli
adc
push
add
loope
dec
fcomp
pop
icebp
out
jae
cli
push
dec
inc
imul
mov
shl
mov
dec
push
mov
sbb
push
daa
fstp
rcr
sbb
out
pop
cmp
push
jg
xchg
pop
lea
push
scas
sbb
dec
daa
loopne
jns
sbb
jle
sub
sub
movs
push
pop
sbb
ds
inc
sbb
fmul
or
xor
enter
and
or
aaa
xchg
in
adc
pushf
ins
movs
shl
sti
out
out
pusha
ins
xor
test
jo
repnz
push
mov
sub
xchg
das
dec
mov
push
(bad)
push
fs
inc
pop
fimul
js
and
fild
mov
or
xor
call
pop
popf
in
loope
adc
jns
or
mov
out
add
cmp
outs
clc
xor
and
dec
xchg
inc
dec
in
inc
int3
fsub
scas
add
cdq
mov
lock
mov
mov
cmp
(bad)
or
push
fcomip
adc
cmps
push
mov
es
mov
and
(bad)
mov
adc
icebp
xchg
jno
int
mov
scas
fiadd
cmp
mov
mov
or
in
xchg
jl
inc
fmul
and
mov
or
jmp
imul
mov
into
ret
jmp
mov
scas
ret
jns
or
add
(bad)
pop
outs
adc
xor
dec
pop
sbb
stc
out
(bad)
outs
xchg
mov
cmp
jbe
sbb
retf
es
arpl
and
call
xchg
je
sti
mov
div
pop
push
cmps
dec
and
retf
div
inc
fdivr
and
aad
mov
or
and
push
adc
jge
out
mov
add
sub
aaa
xor
sub
mov
sub
loope
inc
enter
fmul
scas
fisttp
(bad)
es
retf
mov
jmp
sbb
adc
xor
outs
inc
xor
retf
dec
sub
and
repz
repnz
or
mov
add
fadd
enter
das
dec
clc
add
pop
lea
xchg
sbb
sbb
inc
aas
(bad)
pop
push
pop
push
adc
mov
loop
mov
fwait
std
gs
xchg
add
and
dec
pop
fst
mov
aaa
ja
sbb
data16
test
neg
shl
cmc
aaa
loope
aaa
enter
lock
cmp
xor
jl
es
(bad)
jns
lea
xor
push
push
pushf
push
scas
add
jae
sub
sub
pushf
ss
jl
sbb
jno
xor
pop
gs
mov
mov
popf
fnsave
(bad)
fmul
pop
sar
test
ja
lahf
mov
in
lea
inc
das
ins
push
sbb
jp
pop
rol
mov
in
xchg
xor
or
push
pop
mov
push
lahf
imul
or
mov
mov
daa
iret
mov
xchg
(bad)
test
test
fisubr
and
pushf
repnz
lahf
jmp
pushf
adc
rcr
cmp
fisubr
xchg
mov
dec
ins
outs
jo
adc
mov
mov
mov
fs
rcl
mov
mov
inc
lods
arpl
sub
cmp
sbb
mov
bound
dec
sar
call
cs
mov
es
or
push
push
jo
fs
cmp
sbb
mov
pop
and
inc
jae
cmp
push
test
ret
add
das
sbb
fidivr
pop
rcr
in
mov
push
add
jne
stc
jo
sbb
dec
je
jbe
push
lahf
sbb
pop
fsub
int
xchg
ja
sbb
loop
(bad)
push
mov
mov
adc
in
xor
push
cld
rol
icebp
test
inc
push
pop
jbe
mov
or
call
outs
jnp
sub
adc
mov
add
mov
jp
fwait
xchg
inc
pop
retf
xchg
sbb
mov
xchg
dec
inc
fadd
push
in
pop
ret
adc
movs
dec
pop
pop
int
out
add
lds
ror
and
imul
mov
sub
fnstenv
cdq
push
aaa
mov
mov
and
sbb
push
or
jae
inc
cmp
mov
cdq
lods
outs
sbb
xlat
cmp
or
jo
frstor
retf
sub
mov
mov
into
lods
xchg
(bad)
pop
ret
sbb
movs
xor
jne
nop
sub
sub
shl
test
or
dec
repnz
mov
mov
ss
jns
mov
push
mov
clc
jg
add
(bad)
pushf
xchg
jle
mov
sbb
xlat
jl
or
pop
out
sub
jnp
fbld
mov
xchg
dec
jle
add
inc
clc
pop
jge
xor
in
ficomp
xchg
leave
sbb
jg
hlt
dec
dec
push
out
dec
gs
push
popf
mov
xor
dec
fcom
repnz
sub
ins
mov
loopne
(bad)
repnz
mov
adc
mov
adc
out
push
jo
movs
mov
dec
js
add
in
jecxz
xor
dec
inc
push
sbb
push
mov
push
aad
mov
(bad)
lods
nop
(bad)
cmps
les
data16
sub
cwde
data16
jnp
loope
in
dec
mov
fwait
out
pop
xchg
mov
and
repz
fisubr
mov
ins
mov
icebp
dec
fdiv
data16
mov
repnz
xor
inc
outs
jmp
test
adc
sbb
sub
inc
call
sti
push
jg
sti
push
push
call
xlat
test
add
pop
sbb
jp
sub
mov
cli
lahf
rcl
push
and
dec
add
jle
(bad)
out
dec
cs
xlat
pop
push
shl
mov
lds
or
cwde
or
popf
push
inc
add
add
xlat
push
or
outs
cmc
imul
xchg
test
dec
cmps
mov
adc
mov
das
inc
sbb
push
icebp
ss
jo
mov
inc
add
sbb
dec
xchg
pop
(bad)
scas
lods
sub
ja
add
ret
ror
retf
cmp
mov
pop
(bad)
int3
mov
scas
or
not
inc
div
dec
adc
or
sub
std
(bad)
xor
xor
dec
jmp
mov
push
clc
das
inc
fucomp
xchg
or
or
jge
out
dec
pushf
add
adc
add
or
sbb
scas
xchg
iret
call
lock
lock
sub
out
jp
rcl
mov
test
pop
add
fs
and
dec
imul
out
int
mov
adc
mov
cmp
jl
je
pop
das
sub
pushf
mov
and
mov
outs
xor
mov
je
push
sub
ins
shl
rep
xchg
xor
jns
ins
xlat
jmp
js
sub
nop
test
arpl
pop
loope
mov
je
out
leave
dec
sbb
retf
mov
adc
and
pop
add
int3
and
ret
or
cmp
icebp
add
pop
fisub
xor
lods
jl
rcl
push
iret
xchg
cmp
mov
dec
mov
cmp
div
clc
mov
fidiv
loop
push
lods
add
mov
add
cmp
mov
rcr
addr16
movs
addr16
xor
aas
loopne
adc
ins
mov
imul
adc
leave
push
out
cdq
int3
push
scas
sub
and
xchg
and
(bad)
xlat
push
(bad)
mov
pop
fisttp
mov
mov
pop
in
dec
sub
leave
add
mov
fnstcw
jo
(bad)
ins
repnz
ret
test
dec
adc
lods
aam
imul
out
gs
lea
hlt
scas
outs
daa
mov
aas
imul
inc
retf
ja
fs
fcomip
out
cli
shr
sub
fisttp
imul
dec
adc
lods
push
je
leave
add
dec
xor
sbb
xor
pop
nop
rcr
in
pop
push
fwait
bound
mov
jo
test
jno
push
stc
jge
int
arpl
xchg
xor
xor
cmc
sub
push
in
bnd
mov
rcr
add
xor
or
mov
pusha
lods
cs
in
sub
arpl
test
ds
inc
sub
(bad)
cmp
mov
dec
ins
call
rcl
push
xchg
sub
xor
inc
inc
sub
jne
pop
lds
or
adc
jmp
jge
xor
jb
stos
hlt
repnz
sbb
sub
shl
adc
leave
cmp
aaa
pop
mov
div
mov
scas
lea
ins
loope
sbb
jnp
cmp
fcom
shl
outs
nop
sbb
jmp
fs
mov
pop
jecxz
in
push
ins
xchg
sub
sbb
xlat
addr16
dec
lock
add
pop
cs
push
push
add
idiv
(bad)
jb
fbstp
daa
add
test
mov
aam
mov
inc
retf
fnstsw
push
lds
std
dec
xor
in
fwait
jmp
xor
arpl
sub
fst
call
and
inc
gs
add
fwait
nop
mov
ret
out
aas
hlt
xchg
out
jge
xchg
dec
jp
mov
or
jg
nop
mov
xor
test
dec
loopne
jmp
mov
jle
cwde
imul
(bad)
jne
in
in
mov
jo
pushf
mov
clts
add
jns
gs
fbld
xchg
outs
scas
xchg
ds
jg
into
ins
fisttp
jmp
or
hlt
mov
or
movs
mov
xor
cmps
pop
jne
xlat
sub
jmp
mov
cmp
jecxz
mov
mov
pop
pop
cld
hlt
dec
or
(bad)
div
mov
pushf
mov
push
cmp
mov
mov
les
push
out
shl
mov
in
push
jmp
jmp
scas
stos
cwde
mov
xchg
adc
cld
test
and
je
ja
pop
retf
push
cmc
std
and
int
mov
sbb
dec
stos
stc
pusha
retf
rol
or
mov
or
push
or
(bad)
mov
mov
hlt
sbb
daa
mov
or
jae
push
add
inc
retf
sahf
jmp
dec
movs
fcmovnu
push
mov
(bad)
mov
lods
sar
sub
add
rcl
push
leave
jnp
enter
xchg
pop
jnp
into
sub
or
mov
dec
cmp
lea
or
fs
adc
adc
enter
jp
cmps
or
aad
push
dec
xchg
daa
push
xchg
ins
in
stos
sbb
loope
repnz
out
rol
mov
inc
lods
ret
sbb
std
xor
idiv
je
sbb
sar
scas
pop
mov
outs
cwde
jae
int3
add
mov
or
call
cwde
xor
and
jns
push
mov
xchg
fisttp
pop
pslld
mov
fldcw
dec
push
les
xor
fistp
or
push
sub
and
loopne
push
xchg
sar
push
or
bound
push
and
xor
mov
in
std
aaa
ret
popa
cwde
xchg
jne
pop
mov
aad
cmps
sbb
fisttp
push
dec
out
mov
jnp
push
and
mov
sub
cmp
repnz
hlt
push
jp
stos
aaa
imul
xchg
lahf
rcr
fcomp
mov
cmp
das
mov
pop
mov
stc
adc
mov
mov
in
cmp
dec
cmps
adc
mov
sahf
test
pop
es
(bad)
cmc
dec
aam
lock
aam
pop
loopne
jle
movs
mov
in
scas
pop
mov
stos
(bad)
dec
retf
in
push
(bad)
rcr
shl
mov
fld
jb
div
ja
aaa
out
sub
push
inc
cmp
mov
add
les
addr16
jo
or
xor
ds
(bad)
sbb
cmc
cmp
inc
and
mov
cmp
nop
push
sub
mov
dec
sahf
add
fild
data16
pop
push
mov
loopne
sbb
mov
dec
jge
ins
popf
(bad)
ror
push
mov
ror
cmps
jmp
repz
rol
lock
aad
ret
repnz
out
pop
pop
ins
das
clc
aas
sub
sbb
rep
ficom
retf
popa
test
mov
mov
pop
xchg
out
loopne
push
jbe
and
mov
lea
xchg
cmp
push
stos
xor
cmp
jmp
mov
dec
loopne
cmp
mov
jns
xor
add
pop
inc
adc
add
in
push
jl
loop
and
mov
mov
inc
cmc
push
ins
into
hlt
repnz
retf
xchg
xor
push
adc
jge
mul
xchg
jmp
mov
mov
int
push
bound
ds
pop
xchg
fwait
outs
push
imul
out
sub
pop
aam
cli
aaa
push
add
lods
fdivr
pop
xor
jno
mov
and
cs
add
add
aaa
dec
jp
fimul
idiv
adc
xchg
sbb
fist
inc
jne
pop
pop
inc
and
push
addr16
xor
fmul
(bad)
imul
les
movs
mov
mov
cmp
movs
repnz
push
in
jnp
jno
push
sar
dec
or
imul
es
jg
jg
les
clc
mov
pop
push
cmps
(bad)
hlt
out
pop
and
pop
pop
pop
xchg
dec
daa
retfw
sub
stc
pop
fsubr
leave
fld
xlat
cmp
in
popf
jg
int
test
mov
cmp
std
test
idiv
jp
sar
cmp
pop
add
sti
ret
fwait
sahf
rcl
jge
xor
cdq
jmp
mov
mov
xchg
aaa
push
xchg
sub
outs
bound
add
sbb
mov
loop
stc
mov
push
in
jne
push
inc
(bad)
fwait
jg
xor
xor
sbb
mov
push
and
(bad)
(bad)
pop
outs
addr16
mov
jmp
call
and
ins
xchg
out
adc
(bad)
add
sbb
mov
add
pop
addr16
or
sub
sub
sub
mov
or
ss
cmps
xchg
lods
daa
adc
push
je
sbb
fimul
(bad)
popf
adc
test
mov
xor
inc
and
mov
sbb
xchg
and
loop
rcl
cmp
mov
test
aad
push
aaa
cmp
ss
jb
sti
pop
not
mov
nop
mov
mov
inc
xchg
sub
pop
ja
sahf
mov
dec
push
sub
retf
mov
ja
sti
jns
sbb
mov
or
push
adc
sbb
xchg
rol
push
test
iret
mov
jmp
sub
stos
or
arpl
rcl
push
sub
mov
enter
(bad)
addr16
shl
test
mov
add
xor
sub
or
mov
xchg
adc
jl
ins
mov
adc
mov
jbe
push
inc
and
xchg
aas
jmp
inc
and
jmp
xchg
mov
xor
jmp
inc
push
mov
lods
dec
scas
pop
mov
ins
cmp
mov
cmp
mov
rcl
add
mov
leave
sbb
xchg
and
(bad)
or
dec
aas
cwde
clc
ins
push
out
push
sar
or
adc
test
mov
or
cmp
mov
or
stos
lahf
mov
push
es
or
add
cld
scas
lods
into
arpl
add
jae
add
mov
nop
pop
nop
sbb
inc
test
mov
mov
jae
or
push
cmp
lea
in
(bad)
xchg
and
sbb
mov
cmp
les
xchg
adc
sti
mov
or
cmps
adc
test
mov
ins
sub
out
mov
add
fisttp
mov
cdq
mov
dec
addr16
daa
das
repnz
inc
scas
push
(bad)
fidiv
inc
rep
jb
and
sahf
pushf
retf
sbb
rcl
sbb
call
cs
std
xor
call
ins
stos
(bad)
mov
int
cmps
mov
aas
or
add
inc
xchg
jmp
xchg
add
mov
js
mov
shr
aam
cmps
and
jl
mov
clc
dec
(bad)
(bad)
rol
rol
imul
imul
scas
out
xor
into
mov
xchg
shl
push
imul
(bad)
push
and
in
mov
int3
and
nop
inc
fwait
aas
icebp
shl
mov
fbstp
mov
cmp
jnp
add
sbb
retf
sbb
int3
cmp
mov
jne
scas
xor
loopne
jne
adc
out
inc
and
fst
xlat
xchg
in
fidivr
cli
mov
adc
adc
call
sahf
xchg
pop
jl
call
push
clc
sub
loope
fs
aas
cmp
jmp
gs
cli
out
add
push
enter
mov
inc
and
xlat
push
shr
pushf
int3
pop
syscall
call
stos
jmp
fsubr
pop
pop
out
scas
out
in
push
nop
mov
xchg
adc
je
xchg
fs
popa
mov
xor
xchg
cmp
std
and
lock
or
rcr
out
ins
(bad)
lea
adc
arpl
ret
call
sub
mov
adc
ret
into
fist
cwde
xchg
cs
out
sub
mov
adc
(bad)
mov
jno
inc
sar
out
mov
sub
ds
mov
dec
bound
sub
dec
sar
faddp
repz
push
sub
add
dec
mov
xchg
push
jae
xchg
lahf
test
xchg
pop
cmp
adc
mov
push
mul
adc
jno
and
fs
leave
pop
stos
mul
shr
lods
(bad)
in
ret
mov
ins
adc
or
cli
push
imul
div
nop
inc
and
sub
arpl
mov
jp
lahf
cmp
fisubr
pop
movs
test
(bad)
adc
mov
(bad)
sbb
xor
div
push
push
cmp
dec
sub
mov
scas
in
mov
popf
mov
das
loop
cmp
mov
mov
sub
inc
sub
cmp
aas
rcr
pushf
fidivr
fs
pusha
jmp
jmp
sahf
or
dec
stc
inc
jo
pop
pusha
pop
das
pop
adc
jns
repz
popf
jmp
stos
sbb
outs
xchg
sbb
pop
push
dec
call
xchg
test
sbb
pop
xor
add
inc
pop
push
xchg
outs
fs
popa
sahf
hlt
xor
cmp
jnp
hlt
ds
jg
movs
into
jae
sbb
retf
cs
in
push
dec
dec
cmp
clc
fidiv
outs
int
rcl
stos
push
mov
retf
add
sbb
pushf
mov
dec
sbb
push
or
cs
cmp
xor
imul
lds
jno
shl
jg
ins
lock
mov
dec
cmps
lahf
lods
or
jp
inc
xchg
lds
push
inc
iret
jb
push
mov
test
pop
xlat
out
cli
jle
cli
add
cmp
dec
push
clc
adc
or
add
lods
adc
ins
fisub
aaa
test
mov
add
ins
inc
mov
fiadd
sbb
adc
rcl
xchg
fiadd
push
dec
mov
or
retf
adc
jno
repnz
lods
ins
fisttp
shl
jp
lahf
pop
loop
nop
ja
and
enter
jg
adc
aas
das
fstp
cdq
fadd
xor
xchg
ins
fxch
scas
sub
test
sbb
inc
fsub
jmp
mov
cmp
pop
push
jle
je
adc
or
mov
inc
in
sti
pop
xor
xor
inc
mov
les
mov
xor
add
in
stos
jmp
dec
ds
imul
inc
mov
sti
lea
inc
push
(bad)
pop
mov
mov
lahf
pop
mov
mov
sbb
add
stc
js
fcom
test
aam
mov
cmp
shl
bound
stos
(bad)
jne
or
fsub
inc
in
sbb
pop
cmp
mov
mov
jmp
imul
jg
out
xchg
sub
mov
(bad)
xor
sbb
int3
and
shl
sub
mov
add
xchg
pop
sbb
cmp
xlat
adc
fnstsw
out
aad
out
mov
dec
mov
xchg
mov
pop
and
(bad)
cmp
xchg
loope
clc
aad
fcom
jge
and
sar
cdq
(bad)
fisttp
(bad)
pop
in
icebp
ins
shr
aam
out
data16
data16
lds
cmp
add
xor
pop
adc
ud0
mov
adc
ins
js
inc
push
sbb
adc
je
sbb
jnp
mov
mov
jmp
les
arpl
dec
mov
sbb
inc
xor
xor
xchg
std
(bad)
adc
push
and
ds
or
imul
add
xchg
ds
and
xor
scas
or
mov
sbb
jns
cli
leave
mov
je
sub
iret
(bad)
mov
and
pop
pop
mov
aas
addr16
je
cdq
in
lock
cmc
jl
cwde
loopne
cmp
fsub
cmp
mov
fdivr
mov
xchg
xchg
div
dec
inc
es
or
xchg
xchg
xlat
stos
pop
cmps
add
(bad)
repz
repz
test
push
xchg
mov
cmps
das
mov
clc
xor
inc
ja
aad
and
xchg
jbe
repz
inc
out
adc
jmp
cli
hlt
test
test
and
mov
push
xor
out
lods
pop
test
add
jl
mov
dec
in
sahf
es
loopne
jnp
mov
or
je
movs
dec
adc
cwde
repnz
pop
adc
mov
repz
loop
fldenv
fcmovu
push
xor
adc
cmps
icebp
mov
cld
pop
cmp
outs
sti
jg
mov
shr
fidiv
dec
sub
ins
pop
in
(bad)
sub
fwait
es
lea
xlat
dec
stos
std
xor
(bad)
sub
cmps
ret
adc
cmp
sub
loopne
sub
or
frstpm(287
movs
loop
(bad)
stc
xor
mov
dec
sahf
loop
int3
popa
mov
sub
sub
ja
mov
fcom
adc
push
xor
outs
(bad)
xchg
push
push
cdq
dec
push
mov
xchg
mov
dec
push
xchg
pop
and
jne
neg
or
jle
sbb
mul
iret
in
call
push
xchg
xchg
iret
push
sbb
push
repnz
mov
bound
xor
imul
lahf
cwde
(bad)
push
cmp
push
adc
xor
and
jp
cmp
dec
call
jp
or
xor
xor
int3
sub
mov
cmc
shl
(bad)
outs
frstor
sbb
mov
add
movs
push
cmp
in
daa
jo
xor
sti
push
push
jns
inc
cmp
addr16
lock
jl
arpl
repz
add
or
mov
nop
jne
jg
(bad)
aas
sbb
test
into
addr16
lds
add
cli
call
sahf
push
or
or
mov
sub
or
and
(bad)
cld
pop
add
push
iret
sbb
jnp
inc
rcl
es
push
push
aam
mov
push
nop
iret
lods
stos
loopne
adc
sub
cwde
mov
mov
mov
jnp
ins
push
jns
mov
sbb
imul
lds
push
fwait
lds
ror
push
retf
dec
mov
je
dec
repnz
jle
or
jbe
pop
movs
fsub
jg
mov
xchg
mov
mov
mov
pop
jg
pusha
cmps
mov
test
jl
cwde
and
sub
inc
mov
test
cli
dec
inc
ins
adc
push
xor
or
clc
in
fimul
sahf
(bad)
imul
fisttp
inc
mov
popf
lea
mov
fiadd
les
push
outs
retf
pop
neg
and
push
push
sbb
dec
retf
mov
outs
inc
arpl
mov
mov
or
adc
stc
mov
call
movs
(bad)
(bad)
fucomp
jo
xchg
cmp
icebp
das
iret
or
test
stc
enter
test
sbb
mov
call
les
dec
fsub
in
pushf
jo
out
xlat
cmp
ret
adc
xor
pop
and
sub
in
mov
mov
dec
ins
stc
ror
inc
cdq
or
repnz
push
inc
pop
mov
inc
dec
mov
push
push
daa
cdq
aas
pop
or
xor
lods
mov
cmp
xchg
push
mov
test
ss
popa
adc
fcomp
jno
cwde
jl
push
in
dec
pop
pop
loopne
ins
and
in
jb
shr
jge
(bad)
js
cmps
and
(bad)
lods
sbb
sbb
or
rcr
adc
pop
jns
push
add
js
jb
fstp
aaa
mov
cmp
mov
div
and
ret
aaa
icebp
and
sub
cmp
push
aam
xor
pop
fwait
retf
in
or
sub
mov
enter
inc
popf
repz
mov
push
push
sbb
inc
jecxz
scas
mov
push
cwde
stc
mov
xchg
jns
lock
inc
test
popa
mov
mov
pop
adc
pop
mov
sbb
adc
mov
ins
(bad)
mov
invd
cld
out
inc
push
or
bswap
sub
and
fstp
(bad)
mov
(bad)
div
adc
(bad)
push
pop
xor
xchg
test
add
ds
out
or
add
mov
xchg
fisubr
xor
jns
jle
jnp
xor
add
mov
mov
dec
fistp
add
scas
movs
mov
jne
dec
hlt
hlt
sbb
mov
and
fld
jns
cdq
pop
and
or
cld
int3
add
imul
int
mov
int
mov
push
aam
inc
xchg
mov
add
add
aam
adc
fld
add
add
std
xchg
or
push
cwde
pop
or
imul
or
pop
in
retf
push
mov
mov
rol
sub
stc
fcmovnbe
push
test
bound
cmp
inc
mov
pop
mov
sbb
(bad)
popa
scas
out
stos
jp
push
cmps
or
jne
fstp
mov
xor
arpl
leave
les
adc
jmp
jns
sbb
stc
pop
inc
inc
gs
mov
les
and
push
xlat
xchg
rol
push
pop
(bad)
sbb
dec
cmps
hlt
outs
jge
xchg
mov
(bad)
fstp
ret
and
repnz
fwait
(bad)
enter
out
adc
push
push
(bad)
out
ins
add
mov
neg
loope
jmp
out
bnd
fist
fdivr
fwait
stc
pop
push
aas
sar
icebp
iret
inc
icebp
sar
ror
popf
ds
xchg
ins
jae
aaa
and
or
sti
sti
mov
inc
stos
in
hlt
jo
xchg
add
inc
xor
inc
jp
pop
rcl
bound
cmp
push
(bad)
stc
push
fisttp
sti
inc
mov
(bad)
sti
sub
xor
sub
imul
stc
xor
fdiv
xchg
fdiv
dec
aad
push
jb
inc
mov
and
adc
add
cmp
lods
inc
repz
cmps
mov
jb
cmp
sahf
retf
xor
jo
retf
fst
stos
mov
imul
rcl
fidivr
or
mov
sbb
retf
iret
(bad)
rep
mov
adc
(bad)
ins
add
aas
push
sbb
xor
(bad)
pusha
or
xchg
ins
inc
pop
sbb
add
sbb
xor
(bad)
pop
leave
or
xor
mov
addr16
dec
jns
dec
out
test
push
jp
in
hlt
cld
push
outs
xor
cld
lds
pop
xor
movs
jns
and
aaa
aad
pop
imul
dec
fsubr
push
in
xor
inc
jo
mov
push
sbb
nop
mov
xor
mov
ror
jae
rcl
xor
inc
xor
mov
into
fcmovbe
jp
mov
cmps
and
imul
sub
icebp
int
fdiv
jl
cdq
xchg
adc
and
push
mov
inc
call
shl
inc
sbb
cmp
dec
retf
mov
test
mov
mov
add
div
push
cwde
sbb
cwde
fcmovu
push
idiv
repz
scas
aas
scas
xchg
scas
xlat
sub
ins
xlat
jmp
in
and
mov
and
inc
jb
or
sub
popf
push
mov
sti
lahf
dec
adc
mov
adc
clc
cld
jle
aaa
lds
sbb
push
push
mov
xchg
frstor
jb
dec
out
scas
adc
repnz
add
jl
fsubr
xchg
imul
and
and
dec
xor
pusha
das
mov
clc
fimul
adc
popa
cs
ins
pop
cmp
aam
add
daa
push
xchg
pop
mov
sbb
into
(bad)
(bad)
jle
pop
mov
dec
mov
test
mov
dec
jae
cld
rcl
cli
int
push
hlt
ret
adc
and
gs
jb
inc
fs
pop
push
sub
adc
cs
or
jae
jbe
push
mov
adc
adc
fnstenv
or
sub
add
rcr
out
add
push
sub
rcl
push
out
add
add
test
popa
jne
mov
lods
jp
mov
sub
push
mov
pusha
test
or
lock
sbb
cmp
sub
pop
leave
pop
inc
and
push
sub
jl
aad
sub
addr16
push
repz
fimul
hlt
jno
jmp
loopne
dec
cs
fild
outs
out
mov
sub
xor
nop
aad
cmp
mov
imul
retf
adc
xor
imul
dec
(bad)
pop
mov
pop
aas
or
mov
xchg
mov
daa
mov
gs
ficom
jle
imul
sbb
je
fadd
sti
cmp
adc
inc
jns
cdq
push
xor
movzx
sub
cmp
or
xchg
ror
dec
(bad)
mov
(bad)
into
lds
cdq
cmp
arpl
pop
dec
enter
in
lds
dec
ret
out
xchg
aad
xchg
aaa
ss
movs
xor
mov
imul
mov
sub
mov
push
mov
sahf
dec
sub
aad
or
mov
xor
imul
mov
pop
clc
adc
jmp
aad
mov
add
push
dec
inc
loope
xor
sbb
xor
mov
dec
adc
ret
jns
jne
xchg
push
rol
dec
sub
rol
dec
xor
cli
sbb
jae
mov
nop
sbb
jl
mov
inc
imul
sub
sub
stos
sbb
pop
jl
cmp
ds
mov
sbb
dec
xor
mov
mov
cwde
out
jg
mov
fmul
out
(bad)
clc
aas
(bad)
daa
stc
pop
cmps
sbb
push
lods
imul
mov
mov
lods
aad
jo
lea
jns
cmps
stos
loopne
sub
jb
(bad)
mul
mov
clc
fld
jns
sub
dec
repz
aad
mov
fs
and
jb
jne
sbb
xchg
push
aaa
cmp
sahf
add
loop
ja
sbb
adc
clc
test
push
xchg
lock
inc
(bad)
std
fldenv
js
cmps
loop
cmps
xor
out
sbb
call
ret
add
outs
cmp
xlat
and
sbb
hlt
and
mov
movs
mov
pop
and
mov
xchg
and
push
xor
adc
scas
(bad)
leave
psrld
or
inc
and
sbb
jno
cmps
pop
xchg
mov
sbb
jno
sti
push
retf
inc
popf
bound
add
int3
mov
dec
ins
mov
or
jge
mov
sti
mov
(bad)
dec
out
sub
xchg
mov
ret
movs
les
rsqrtps
jmp
jmp
pop
sahf
cli
fst
pop
iret
in
mov
(bad)
pop
movs
es
ror
or
sub
xchg
jne
jo
xchg
dec
mov
fidivr
out
push
sete
pop
sub
inc
sub
call
cwde
call
mov
or
out
sub
in
push
icebp
jle
xchg
lds
mov
jns
xchg
stc
push
mov
icebp
push
popa
and
mov
hlt
cmp
mov
mov
push
sub
sub
int
xor
dec
vzeroall
sbb
ficomp
cli
rcl
sub
mov
fidiv
dec
test
retf
sub
cmp
push
or
add
inc
jecxz
mov
ja
push
retf
cmp
inc
or
cmp
lods
inc
clc
ret
xor
add
in
js
jle
inc
mov
xchg
push
xor
ficom
push
sub
xchg
imul
nop
loope
mov
popa
pop
sahf
je
xor
fcomp
pop
mov
fcom
je
xor
dec
(bad)
cmc
in
lods
xchg
or
sub
adc
int3
mov
sub
addr16
icebp
jle
mov
inc
mov
out
push
push
repnz
jnp
xor
mov
push
or
ins
jbe
pop
push
sub
fst
call
adc
inc
dec
clc
pusha
inc
inc
(bad)
add
mov
mov
mov
adc
icebp
cdq
loopne
xchg
mov
idiv
(bad)
wrmsr
cld
shr
jg
fstp
cmp
mov
mov
adc
ror
gs
pop
repnz
(bad)
fisubr
push
mov
pop
mov
cmp
dec
pop
mov
aad
pop
pop
es
xchg
lea
cmps
cmp
std
xchg
pop
and
iret
repz
xor
nop
shl
sub
addr16
push
repnz
xor
into
mov
aas
xor
not
jne
push
push
sub
jecxz
dec
mov
dec
nop
mov
and
and
les
adc
std
mov
xor
jp
outs
pop
xchg
cmp
leave
inc
js
into
jne
jmp
xchg
fstp
imul
imul
stos
pop
scas
and
jmp
jge
shr
and
rcr
or
pop
in
or
and
push
xchg
and
jmp
xchg
ins
jecxz
outs
push
add
outs
jbe
mov
retf
pop
imul
push
cmp
jge
test
aam
adc
pop
sub
jecxz
pop
push
addr16
cmp
xor
adc
scas
adc
enter
enter
add
shl
xor
lock
js
mov
shr
dec
xchg
call
push
ins
rcl
sbb
cmp
sbb
in
dec
leave
xchg
out
fisubr
sysret
imul
dec
jnp
hlt
test
adc
stos
pop
pusha
cli
rol
movs
(bad)
lock
ds
pop
jmp
sub
pop
cld
jmp
js
pop
inc
lods
mov
sub
cmp
adc
stos
jmp
jo
leave
stos
(bad)
test
les
mov
xor
out
rcr
mov
xchg
xchg
jo
push
jnp
jo
inc
call
xchg
cwde
and
repnz
pop
es
mov
lods
popa
int3
in
repnz
push
xchg
call
dec
ss
mov
sub
xor
cmp
mov
adc
jg
or
sbb
inc
loope
xchg
out
icebp
xchg
inc
inc
and
pop
inc
jmp
adc
(bad)
mov
test
aas
in
ss
rol
lock
xchg
(bad)
jmp
and
push
add
es
aaa
inc
mov
cmp
jmp
push
stc
ret
adc
mov
push
add
or
fldpi
mov
or
aam
cli
xchg
and
das
cmp
cmps
pop
and
xor
inc
int3
aas
mov
(bad)
or
imul
mov
fistp
imul
sub
pop
ja
push
cs
loope
out
push
xor
sub
popa
gs
stos
test
xor
adc
sub
in
jmp
dec
imul
cmp
mov
and
jg
dec
inc
jge
xchg
mov
mov
jle
addr16
les
out
test
movs
loop
pop
pusha
retf
cmp
out
mov
and
push
fld
sbb
retf
test
dec
pop
pop
call
rol
loop
inc
xchg
dec
mov
enter
jl
lock
sbb
mov
repnz
das
pop
push
fstp
ins
arpl
cmovno
cwde
ret
sub
push
lock
cld
aam
nop
or
mov
fist
aaa
cmp
xchg
and
pop
inc
out
and
ret
sub
bound
lahf
and
repz
mov
jecxz
xor
mov
cmp
leave
add
mov
add
test
sbb
test
sar
lahf
xor
aam
pop
int
inc
jnp
js
xchg
or
pop
jo
aam
cmp
inc
in
cmp
xchg
aam
enter
jbe
stos
in
fst
lods
into
(bad)
lock
ss
add
mov
push
stos
ins
jo
push
push
in
sar
stos
loopne
add
call
cmc
jae
or
xchg
mov
add
inc
sub
lds
dec
mov
aas
out
int3
push
ret
loop
fisttp
sub
in
mov
push
ret
add
pop
dec
(bad)
arpl
retf
sub
inc
sbb
and
dec
xchg
jl
pusha
movs
dec
cmp
xor
sbb
ror
ins
sbb
mov
sub
push
mul
fstp
lods
outs
out
sar
jne
out
xchg
pop
xchg
pop
sub
nop
dec
push
fnstsw
cmp
and
mov
push
xor
retf
ret
repz
inc
pop
outs
cs
imul
adc
gs
les
inc
push
mov
mov
push
push
mov
fisttp
add
add
push
mov
inc
enter
cwde
jno
pop
sub
stos
(bad)
fsub
(bad)
cwde
jg
inc
sahf
sahf
(bad)
retf
jo
push
adc
stos
dec
jo
imul
push
xchg
out
mov
mov
adc
call
mov
jg
call
fdiv
adc
and
jb
sub
push
repnz
or
fsin
and
lds
or
pop
daa
pop
mov
loope
push
xlat
ins
sbb
fs
jne
mov
jne
mov
push
or
shl
xor
cmp
cmp
cmp
jmp
adc
test
jmp
das
rcl
movs
sbb
xor
(bad)
idiv
inc
cmps
sub
jno
fidivr
(bad)
xlat
call
(bad)
rcl
mov
jae
or
pop
pop
xlat
inc
test
fdiv
mov
jbe
shl
xor
bound
and
ret
pop
fcomip
sbb
ror
cmc
js
xchg
mov
data16
pop
lahf
(bad)
dec
loope
cld
test
pop
mov
xchg
fnstsw
(bad)
outs
into
or
mov
das
enter
and
ins
jmp
loopne
pop
or
fisubr
push
xchg
and
std
js
ret
lds
sub
push
(bad)
jge
scas
cmc
aas
xor
cmps
jecxz
stos
aam
pop
outs
data16
xchg
rcr
or
call
mov
dec
dec
or
mov
shl
xchg
sbb
jbe
add
pop
ss
scas
and
push
pop
test
scas
push
add
fdiv
ins
clc
pop
pop
pushf
retf
adc
inc
cmp
lods
aas
push
call
aas
sahf
add
xor
mov
adc
inc
push
adc
(bad)
or
pop
sub
aas
aad
inc
ret
mov
das
push
pop
js
cmp
ret
or
fmulp
or
sbb
adc
enter
cmp
stc
sbb
add
pop
push
(bad)
imul
sbb
enter
fild
shl
(bad)
out
jb
xor
mov
arpl
and
(bad)
out
bound
push
out
jo
or
repz
sbb
add
add
mov
les
mov
fcomp
cmps
and
lahf
push
push
push
jo
dec
dec
mov
inc
xchg
xor
ds
xor
pop
arpl
in
fcmovne
jns
adc
or
mov
or
sti
pop
push
inc
test
lods
sub
sar
lea
pop
scas
push
jl
mov
push
sub
dec
cmp
mov
inc
xor
push
mov
mov
add
and
fwait
movs
mov
push
clc
neg
jmp
mov
mov
fisubr
loopne
in
lea
clc
mov
sub
xor
sbb
bound
outs
cmc
dec
inc
stos
fmul
add
or
stos
in
lds
adc
(bad)
loopne
loopne
ret
mov
jecxz
js
cmp
aaa
sti
or
test
rcl
push
mov
stc
cmp
mov
mov
idiv
mov
add
test
ja
adc
mov
mov
test
stc
or
sti
push
es
jne
xchg
inc
cmp
xor
inc
jl
popf
and
sub
jle
(bad)
fcmovbe
mov
mov
ficomp
sahf
fwait
cmps
pop
das
jp
in
lock
and
push
rcl
(bad)
cmps
test
retf
push
mov
push
int
sti
add
cmp
jle
cdq
xor
idiv
je
test
cli
jne
popf
lahf
out
outs
es
imul
and
jmp
(bad)
fcmovnu
aas
inc
sub
test
dec
mov
scas
sbb
xchg
rcl
xor
aam
lds
ret
sar
cdq
mov
stc
sti
cmp
ds
out
or
in
in
push
inc
mov
mov
mov
pop
nop
or
gs
xchg
mov
mov
inc
or
fist
mov
icebp
or
mov
es
and
ret
and
outs
cmc
xchg
pop
hlt
add
loopne
sub
jns
mov
aas
mov
(bad)
lahf
push
fcomip
pop
imul
add
inc
call
nop
xor
xor
and
cmp
push
xchg
and
adc
in
push
inc
mov
popf
sub
mov
cmps
(bad)
outs
mov
pop
pop
mov
call
repnz
or
mov
out
fwait
dec
inc
and
and
add
mov
lock
gs
jg
js
addr16
outs
cs
dec
push
scas
ds
and
mov
sahf
dec
or
in
inc
add
or
jp
popf
mov
fcmovb
lock
not
fidiv
call
(bad)
mov
jecxz
in
nop
call
(bad)
test
mov
and
jp
and
mul
mul
jmp
movs
and
lods
xor
daa
sbb
jecxz
aam
push
sbb
fs
je
mov
fimul
in
pop
aaa
mov
stc
jnp
push
(bad)
in
cdq
jge
imul
xor
clc
jno
and
mov
(bad)
xor
lea
xchg
push
lahf
(bad)
add
ins
xor
sub
and
aam
jmp
mov
rcr
mov
push
sar
push
xchg
retf
out
daa
push
inc
repnz
mov
cwde
push
xchg
inc
retf
push
fcom
pop
call
mov
add
mov
sbb
sub
gs
mov
(bad)
push
sahf
movs
das
cmps
add
pusha
mov
cs
loopne
jmp
adc
push
inc
int
out
jmp
cwde
and
inc
and
loopne
dec
lea
lock
int3
mov
fimul
mov
outs
fwait
cmp
inc
inc
pop
je
xchg
(bad)
in
mov
pop
rcr
push
sbb
mov
jns
pop
and
fsub
das
shl
data16
fbstp
lahf
and
in
jno
xbegin
or
je
gs
sbb
cmp
jmp
repnz
or
(bad)
fucomip
jg
fmul
inc
hlt
cmovg
scas
pusha
popa
jecxz
fisubr
popa
xchg
inc
cwde
push
mov
pop
mov
mov
jl
sbb
jo
ds
ins
xlat
or
adc
(bad)
push
cld
inc
cmp
mov
inc
xchg
gs
mov
jo
pop
xor
imul
nop
push
cli
adc
std
adc
jle
mov
pop
outs
stos
or
push
push
xchg
nop
int
pop
scas
sbb
sbb
xchg
dec
(bad)
hlt
nop
pop
cli
inc
ins
ss
cs
cmp
ret
repnz
inc
into
dec
xlat
pop
jno
(bad)
scas
stc
or
sub
aad
push
sub
repnz
out
pop
aad
adc
(bad)
cld
dec
pusha
cdq
push
out
mov
sbb
xor
int3
inc
mov
lods
mov
or
xor
sub
mov
retf
xor
outs
inc
(bad)
out
pop
pop
xchg
mov
pop
aam
xchg
cmp
push
daa
and
sub
repnz
push
pop
pushf
add
and
xor
pop
mov
sbb
movs
push
xchg
imul
mov
cmp
mov
push
cmp
adc
or
int3
shl
push
cmps
lock
push
neg
xlat
and
mov
movs
cmp
lock
jb
mov
sbb
test
jge
xchg
inc
js
adc
repz
mov
aaa
sbb
movs
jg
jno
sub
in
jbe
or
loopne
dec
call
pop
fs
ins
inc
dec
jmp
or
jle
mov
mov
(bad)
pop
(bad)
popa
adc
test
movs
fdivr
add
jg
and
jge
jae
cwde
and
in
fcom
out
or
les
jmp
jbe
cmp
push
dec
(bad)
rcl
push
loopne
sbb
int3
xchg
outs
hlt
inc
xchg
into
call
and
jge
loop
jecxz
xchg
mov
sbb
push
repz
sar
repnz
sub
adc
dec
outs
jl
adc
sub
push
jg
lods
mov
jge
cdq
int
sub
dec
jecxz
pop
or
add
mov
adc
imul
scas
mov
movs
out
jne
(bad)
lods
stc
push
xchg
push
add
push
gs
sti
ret
pop
loope
dec
push
adc
js
xor
bnd
test
in
inc
std
or
mov
retf
aaa
or
fwait
xchg
pop
not
std
pop
fcmove
scas
test
scas
mov
push
add
cmp
dec
mov
sbb
cld
dec
mov
leave
lahf
imul
cmp
xchg
cmp
out
sahf
adc
fist
es
or
repnz
outs
xchg
add
dec
xchg
test
popf
or
cld
aam
test
inc
pop
nop
iret
ror
xchg
mov
push
jb
mov
mov
scas
cdq
xchg
add
sub
out
imul
test
(bad)
push
call
or
icebp
mov
sar
dec
(bad)
into
mov
outs
sub
xor
inc
call
sbb
fdiv
or
and
pushf
fidivr
mov
xor
pop
fiadd
add
fidivr
mov
xchg
push
jle
push
xchg
xchg
pop
sbb
inc
fcom
iret
jecxz
push
data16
adc
(bad)
ficom
(bad)
outs
rol
sub
dec
lods
xchg
cmp
add
inc
js
push
imul
and
sbb
and
sub
dec
pop
stos
jecxz
cdq
enter
mov
test
repz
push
pop
mov
out
out
adc
shr
pusha
imul
push
fld
adc
loop
add
lods
(bad)
inc
push
into
call
out
mov
cmc
adc
push
ds
cmp
sti
pop
inc
mov
sbb
pop
(bad)
pop
lds
test
inc
xor
fabs
add
lea
xor
(bad)
test
push
dec
retf
test
jnp
xchg
or
sub
xchg
test
mov
jmp
rcr
mov
outs
(bad)
fcomp
pop
clc
std
repz
cs
cld
push
ret
push
adc
div
add
jp
sbb
xchg
iret
mov
cmps
mov
popf
mov
inc
jno
leave
inc
dec
test
or
fisubr
mov
outs
stc
or
stos
add
in
aaa
ficomp
mov
loop
mov
out
aaa
mov
loop
ins
repnz
adc
retf
push
enter
popa
ret
xchg
call
mov
fiadd
scas
std
imul
jp
sbb
xchg
and
test
or
je
jp
mov
lods
push
adc
ins
jge
cmp
sbb
js
xlat
xor
pop
dec
push
xor
pushf
mov
bound
pushf
and
jns
pop
jb
jmp
mov
enter
jb
outs
shl
daa
sbb
enter
cmc
mov
mov
cmp
addr16
test
(bad)
mov
fs
xchg
mov
les
mov
loop
std
imul
or
or
dec
or
mov
xchg
data16
jge
cmps
es
les
movs
inc
and
xchg
mov
mov
push
mov
xchg
(bad)
aam
cli
jg
test
cmp
sub
pop
scas
jns
xor
lods
lock
test
test
sub
test
sbb
and
xchg
ret
mov
xor
xchg
mov
js
xchg
and
fcmovnu
es
arpl
out
mov
push
jecxz
inc
jne
and
push
int
(bad)
inc
out
(bad)
neg
sahf
cmp
xor
push
frstor
dec
fisttp
test
aad
add
add
lods
mul
lock
fadd
dec
(bad)
aas
cmp
xor
repz
add
cwde
xchg
pusha
xor
push
(bad)
adc
clc
jle
pop
cld
sub
ins
xchg
daa
inc
loop
rcr
or
pop
mov
sub
faddp
int3
jle
jae
call
aam
arpl
lods
jp
and
sub
inc
(bad)
rol
lea
cmps
jg
imul
mov
xor
push
pop
sub
clc
xor
iret
mov
and
sahf
inc
loop
call
and
xchg
out
jbe
inc
push
pop
mov
pusha
(bad)
add
xchg
push
hlt
mov
das
imul
movs
dec
shl
and
sbb
ss
cwde
inc
jge
adc
and
jo
and
rol
mov
stos
xchg
fwait
shl
repz
cld
jle
mov
add
cmp
push
fistp
lds
or
pop
inc
arpl
inc
test
nop
out
lds
inc
jns
pop
lods
dec
rol
outs
not
scas
mov
outs
lods
sub
cmp
retf
movs
loopne
retf
pop
retf
push
pop
pop
push
inc
jmp
mov
shl
test
arpl
dec
fcomp
lea
or
or
int
dec
dec
dec
adc
ins
push
mov
test
imul
xor
repnz
fwait
adc
add
push
fild
dec
sub
aaa
and
push
cdq
jae
cli
outs
ficomp
xchg
pop
xchg
std
mov
or
mov
int
dec
stos
arpl
fild
sbb
lahf
dec
cmp
cmc
lods
cmps
std
cmp
jno
push
push
pop
lock
inc
test
data16
jnp
data16
mov
sbb
imul
stos
pop
ins
mov
jae
(bad)
and
sti
cmps
inc
push
shl
ins
jbe
sub
mov
mov
div
dec
dec
push
dec
lods
cmc
cmp
mov
loope
mov
fidivr
ja
lds
or
pop
int
sbb
or
xor
or
outs
and
out
les
mov
cmps
fadd
inc
sub
push
jmp
pop
lock
add
mov
adc
test
dec
sub
sbb
retf
jmp
or
mov
int3
call
clc
ror
popa
mov
or
mov
adc
and
add
jg
sub
and
xor
mul
jecxz
fcom
mov
out
and
fst
jbe
dec
daa
test
cmps
mov
jae
(bad)
lahf
or
xor
sar
pop
push
push
cld
scas
jl
jbe
xor
outs
inc
adc
hlt
push
push
mov
or
out
push
sbb
pop
shl
bound
inc
mov
xchg
adc
int
ret
test
dec
mov
lea
jmp
mov
inc
call
rcl
scas
add
add
cmc
fdiv
xor
bound
cmp
test
inc
jb
push
retf
rol
lahf
mov
(bad)
call
arpl
cs
outs
lds
sub
lods
hlt
ss
mov
das
jp
or
pop
xor
xchg
sar
fwait
push
aaa
and
arpl
cwde
int3
pop
imul
xchg
shr
or
mov
xchg
cmp
imul
loopne
inc
mov
xchg
std
outs
push
push
je
mov
dec
or
jl
push
fimul
push
sub
cmp
(bad)
test
xor
dec
rol
leave
data16
push
or
dec
int
ins
ins
stos
push
lahf
add
jmp
add
xchg
repnz
retf
jmp
pop
aam
xchg
fsubr
xchg
mov
repz
leave
and
ret
pusha
adc
mov
xor
ret
aas
sbb
fdivr
leave
jns
inc
inc
es
retf
cmp
adc
mov
push
(bad)
xor
popf
jnp
dec
cmps
jp
sti
push
mov
cmps
cwde
mov
mov
add
dec
les
cmp
pop
sbb
mov
mov
push
jae
hlt
fdivr
aaa
ret
retf
iret
outs
mov
jnp
inc
inc
dec
fisub
jae
jo
(bad)
retf
jnp
xor
jo
adc
js
arpl
sub
inc
int
daa
jae
push
popf
test
jb
imul
test
jbe
push
mov
inc
xchg
mov
push
enter
xor
(bad)
or
sar
leave
or
or
xchg
addr16
mov
or
nop
mov
rol
hlt
cmc
mov
scas
adc
mov
jg
pmulhuw
lods
adc
sub
xchg
or
and
or
hlt
jp
cmp
pop
mov
test
pop
call
jp
call
(bad)
arpl
dec
das
in
retf
xor
dec
pop
and
call
imul
sbb
cwde
out
aad
icebp
in
inc
xor
mov
fimul
mov
cmps
cs
pusha
shl
daa
push
add
pop
out
xchg
ror
cli
sbb
inc
push
inc
fld
jbe
push
adc
sub
and
out
or
mov
fnstenv
test
inc
outs
mov
(bad)
(bad)
cmp
add
xchg
add
mov
repz
rcl
inc
cdq
push
dec
sbb
retf
loop
icebp
jbe
inc
les
mul
cmp
mov
add
retf
sahf
adc
pop
mov
mov
jmp
sbb
inc
icebp
pop
fidivr
out
outs
dec
mov
and
ins
ss
jo
in
fs
adc
xchg
inc
pop
push
aad
sbb
push
lea
fstp
sbb
jge
dec
(bad)
jle
popf
nop
ss
sub
ret
pop
stos
enter
add
in
jmp
dec
into
(bad)
fmul
sbb
in
and
mov
pop
movs
cld
dec
fld
mov
pusha
dec
out
sbb
mov
es
mov
fcomp
mov
xchg
add
xor
and
lea
test
ins
pop
pushf
call
enter
shr
cwde
mov
pusha
fwait
adc
sbb
rcl
lods
dec
(bad)
popf
pusha
cmp
sbb
retf
fild
mov
aam
sti
inc
and
push
pusha
ret
enter
je
dec
test
push
inc
mov
cmp
mov
iret
dec
xchg
call
jecxz
fldln2
jmp
jmp
ret
sti
push
sub
movs
pop
ret
rdtsc
add
inc
xchg
test
jecxz
ss
mov
je
adc
adc
pop
pop
repnz
mov
test
arpl
mov
adc
sub
shl
cmps
inc
retf
call
outs
rcl
es
mov
and
dec
sbb
ror
fdivr
pop
sbb
aas
sub
sub
push
js
mov
or
rcr
loopne
jmp
push
cli
leave
ins
jle
pop
lahf
call
jne
xor
cdq
out
scas
ss
jge
and
xlat
int3
cmc
pop
movs
push
out
inc
ja
icebp
pop
and
cmp
out
enter
add
xchg
dec
aam
sbb
mov
mov
pop
xor
sub
jb
rcl
in
fisubr
repz
add
xchg
les
ja
movntps
push
pop
mov
push
inc
dec
sbb
loop
pop
mov
dec
iret
ss
sbb
jg
sbb
mov
jp
pop
sbb
mov
jns
push
pushf
pop
loopne
adc
mov
fcomp
rol
outs
push
popf
sbb
pop
mov
lahf
inc
jne
fdivr
cwde
cmp
mov
adc
pop
fsub
mov
inc
aaa
ja
stos
adc
xchg
daa
xchg
stos
(bad)
xor
push
cdq
ss
jg
daa
cmp
pop
ins
mov
call
test
cmc
gs
retf
pop
ins
push
inc
jb
push
ror
repz
or
arpl
cmp
xchg
lods
loop
dec
daa
and
and
fst
push
outs
pop
std
pop
xchg
mov
fisub
fisttp
sub
fild
dec
rcr
fbstp
sub
mov
jmp
scas
pop
in
test
cmp
fmul
mov
mov
jo
mov
xchg
out
inc
mov
add
loop
push
in
inc
xor
stos
inc
nop
xor
ss
jecxz
sub
rol
(bad)
int
or
dec
call
xchg
in
lds
stos
jbe
scas
mov
std
in
test
push
jge
aas
mov
ins
out
mov
in
xlat
sbb
rcl
jno
cld
push
les
sbb
or
xor
clc
shl
add
and
xor
jecxz
fldenv
std
retf
ja
cmp
sbb
mov
adc
int
jnp
fldcw
ja
sbb
jge
jnp
ins
push
inc
in
ror
lds
mov
leave
jl
inc
jge
jo
jmp
xchg
sub
(bad)
(bad)
or
js
cs
out
ja
jae
add
pcmpgtw
pop
jns
int3
mov
add
or
jecxz
in
mov
imul
fstp
mov
out
adc
pop
and
add
and
add
sub
push
(bad)
sbb
arpl
call
jo
mov
imul
clc
fisttp
and
jmp
fnsave
jmp
pop
xchg
outs
and
sbb
xchg
push
inc
dec
fsubr
stos
test
lahf
inc
dec
dec
mov
mov
mov
pop
enter
(bad)
aas
jmp
movs
inc
push
in
out
push
pop
not
aas
xchg
pop
mov
call
mov
leave
and
push
fdiv
xchg
dec
dec
daa
scas
jo
call
push
mov
mov
int
leave
push
pop
mov
jns
mov
mov
int3
xlat
iret
adc
adc
iret
mov
lock
mov
adc
push
mov
je
daa
cmp
sar
push
call
xchg
aam
xchg
jne
jb
and
loop
pop
lahf
mov
addr16
xchg
cmp
sbb
cmps
mov
mov
ds
scas
cmp
fiadd
std
xchg
enter
and
ret
mov
loop
xlat
mov
cmp
jmp
cmps
std
mov
outs
clc
jmp
(bad)
imul
xor
jecxz
fst
sbb
mov
add
scas
dec
sti
jno
jmp
fisub
adc
call
cmp
xchg
rcl
shr
jb
push
jno
pop
mov
leave
push
addr16
sbb
lods
or
sub
adc
das
movs
mov
pop
inc
sub
and
jo
hlt
test
mov
and
adc
idiv
outs
jnp
push
inc
jno
clc
cmc
js
das
dec
inc
dec
movs
cli
in
and
pop
fmul
mov
data16
adc
test
aas
fcmovne
dec
mov
mov
pop
dec
fst
out
test
pusha
(bad)
push
mov
(bad)
push
retf
hlt
adc
cld
push
pusha
gs
repz
and
gs
aam
jb
imul
sub
pop
inc
push
clc
mov
clc
inc
or
repnz
dec
not
icebp
ja
or
scas
jp
leave
rcr
inc
fst
xor
sar
mov
call
push
lock
push
frstor
test
adc
dec
popa
adc
daa
dec
popf
sbb
dec
pop
retf
and
xchg
jnp
xor
sar
scas
dec
mov
jmp
inc
scas
into
or
adc
sbb
or
mov
lds
(bad)
cld
mov
stos
dec
outs
or
fsub
daa
loopne
mov
lods
or
in
in
jno
cli
nop
pop
mov
and
xlat
mov
jmp
ss
inc
add
mov
inc
(bad)
lea
test
and
dec
les
xchg
jno
pop
mov
cli
(bad)
pusha
fadd
mov
pop
mov
jno
cwde
sub
mov
fcmovnbe
pusha
cmp
lea
push
fcomip
sbb
sbb
xchg
(bad)
test
cmp
pop
ins
add
mov
pop
enter
test
mov
aaa
es
(bad)
and
inc
popa
fwait
das
loope
sti
gs
iret
xchg
pop
dec
jb
sub
outs
inc
mov
stos
push
jl
dec
scas
xchg
mov
jp
out
mov
dec
sbb
fcomp
aas
pop
add
ins
and
cmc
stc
and
add
dec
ja
call
(bad)
sub
adc
neg
push
sub
xchg
jne
inc
mov
shr
outs
jg
dec
or
mov
and
ins
jp
mov
mov
nop
js
xchg
in
iret
fidiv
xchg
or
nop
(bad)
repnz
mov
jb
rcr
popa
std
stos
xor
popf
mov
jnp
sub
mov
lahf
(bad)
repz
pop
jbe
add
jg
ds
push
imul
push
lods
mov
adc
cmp
inc
call
outs
js
je
rcl
aam
inc
enter
es
cmp
or
dec
ret
inc
xchg
push
in
aas
jmp
and
xchg
addr16
ins
dec
iret
enter
sub
fwait
les
div
shl
and
jno
sbb
xor
ret
push
arpl
js
dec
in
jle
sbb
sbb
jb
rol
add
cld
popf
stos
daa
sub
aad
sar
mov
inc
adc
data16
add
loop
cmp
add
cmp
in
jg
rcr
dec
movs
(bad)
mov
retf
mov
retf
mov
loope
test
add
pop
inc
push
cmp
jl
ret
add
mov
int3
outs
loopne
stc
inc
lahf
not
out
xchg
mov
xchg
fmul
mov
jno
loope
dec
mov
mov
add
add
jnp
inc
test
and
and
push
test
cs
clc
js
lea
fs
dec
pop
out
adc
inc
xchg
out
bnd
adc
push
clc
push
into
sub
xchg
shl
cwde
mov
sub
aaa
sub
dec
pop
out
and
lahf
pop
push
sub
out
aam
test
ja
inc
call
fldenv
mov
push
(bad)
xchg
retf
outs
xchg
add
pop
fldenv
retf
fadd
xor
aas
data16
mov
mov
into
imul
mov
or
popf
ror
outs
inc
mov
adc
imul
call
(bad)
cld
aas
pop
mov
cs
pop
mov
xor
pop
push
mov
fcomip
xchg
stos
mov
xor
add
fs
adc
xor
arpl
adc
sti
repnz
loop
aas
xchg
xor
jnp
imul
mov
inc
jp
xor
sti
and
pop
in
pop
movs
mov
xchg
xchg
adc
test
jnp
xor
sahf
mov
pop
sub
mov
sbb
dec
les
out
mov
in
jmp
aad
xor
xchg
aad
sbb
xor
fmul
retf
xor
(bad)
mov
out
ins
cmp
in
pop
jne
cmp
jae
xchg
jae
push
(bad)
dec
dec
lods
jecxz
sub
jge
and
ficom
add
inc
mov
mov
jae
cwde
add
jmp
push
mov
mov
nop
stos
jae
test
mov
mov
xor
bswap
inc
in
mov
add
xchg
cmp
rcl
loopne
and
mov
cmp
push
push
or
mov
mov
out
sahf
sub
inc
jne
mov
stos
and
adc
inc
lods
push
(bad)
jae
pop
push
mov
mov
xchg
jne
jne
pop
cs
enter
int
and
js
pop
dec
or
mov
sbb
jmp
imul
jp
ror
xchg
mov
adc
and
xor
mov
lds
rol
inc
mov
sbb
and
pop
dec
std
je
rol
ret
or
aam
ror
enter
lds
cld
mov
imul
pop
and
into
movs
retf
jg
test
dec
pushf
xchg
les
xchg
xchg
scas
mov
clc
ins
jecxz
std
nop
std
jo
cmp
lods
jmp
mov
scas
je
mov
nop
sub
jo
imul
hlt
and
or
mov
mov
cmp
test
mov
inc
cmp
sub
xchg
scas
or
sbb
icebp
jecxz
sub
sbb
sti
or
aas
and
jno
xadd
ret
dec
inc
scas
nop
jno
jb
fstp
adc
push
sub
in
sub
dec
push
mov
xor
fs
xlat
in
rcr
dec
imul
gs
lds
jp
jl
dec
mov
dec
mov
repz
dec
pop
popa
retf
inc
and
imul
movs
jae
or
dec
je
retf
adc
inc
enter
loopne
stc
dec
pop
addr16
(bad)
retf
mov
shl
gs
aam
bound
arpl
pop
std
arpl
dec
nop
imul
shl
cmps
mov
mov
inc
adc
pop
fild
test
push
sbb
adc
fcomp
sub
or
push
jmp
or
arpl
fld
sbb
push
nop
iret
shr
mov
pusha
sub
mov
add
imul
push
xlat
in
test
aas
pushf
xor
pop
mov
fistp
mov
or
out
lock
stc
push
sbb
xor
cmp
shl
mov
cmps
push
retf
stos
fwait
xor
adc
les
stc
(bad)
xchg
cmps
lock
sub
stos
mov
inc
cli
or
mul
scas
out
add
jmp
xor
daa
sbb
movs
mov
shl
out
lea
cmp
and
or
out
xchg
fcom
mov
sbb
push
fmul
js
push
cmp
loope
xor
ins
and
fldenv
jge
rol
mov
or
arpl
jge
fidivr
ins
push
dec
mov
xor
stos
xor
xchg
fdivr
jmp
ret
sub
out
jge
or
inc
pop
test
popa
mov
clc
xor
cli
bound
xchg
jecxz
xor
fidiv
cmp
(bad)
pop
(bad)
add
cmp
repnz
jge
repz
fnsave
retf
mov
sub
xchg
loope
(bad)
sbb
jbe
push
movs
push
dec
dec
fisttp
test
xor
retf
inc
pop
(bad)
std
cmp
pop
dec
(bad)
xchg
daa
cmp
or
and
mov
sbb
movs
(bad)
arpl
sub
shl
fs
shl
int3
int3
jg
addr16
xchg
adc
rcr
push
or
jge
dec
xchg
and
add
and
retf
add
mov
lods
mov
dec
or
or
mov
cmps
cli
dec
gs
mov
repnz
lds
leave
cld
out
jmp
dec
pop
(bad)
cli
inc
(bad)
add
retf
jno
jbe
mov
fwait
or
dec
fcmovne
call
in
dec
test
movs
or
lods
movs
call
or
mov
inc
div
jp
mov
test
out
pop
push
test
int
fiadd
cmp
imul
inc
fs
jbe
addr16
loop
lea
push
bound
pop
retf
mov
ins
es
pushf
add
push
mov
ds
popa
popf
jecxz
ds
callw
dec
out
xor
fwait
pop
call
jp
add
hlt
stc
retf
and
lea
and
adc
cs
xchg
imul
jl
iret
pop
aas
rcr
push
xor
mov
xchg
jnp
fldcw
mov
fwait
dec
or
push
dec
mov
movntps
shr
iret
es
jmp
stos
jae
mov
iret
rcl
or
jmp
sbb
jecxz
scas
repz
dec
rol
std
dec
fistp
lods
jmp
mov
out
ja
rcl
into
(bad)
std
pop
pop
loopne
cmps
fnstenv
inc
push
(bad)
jp
or
icebp
inc
mov
add
clc
cmps
or
test
lock
or
jp
sub
push
xor
dec
mov
call
(bad)
mov
xor
xor
dec
addr16
sub
and
pop
aas
sub
sar
mov
cli
repnz
dec
sub
sbb
fld
retf
pusha
pop
push
xchg
out
jle
aad
pop
xchg
adc
ret
ins
xor
in
jmp
sbb
fidivr
aad
and
aam
icebp
jmp
mov
xchg
repnz
out
bnd
nop
mov
repz
push
sti
movs
or
call
aam
inc
sub
leave
je
push
lock
jmp
inc
mov
fwait
dec
fst
ins
xchg
mov
loop
icebp
jae
add
out
sub
addr16
xor
sbb
sar
lods
movs
pusha
rcl
cs
ret
dec
pop
loope
mov
pop
add
dec
or
jb
mov
imul
and
mov
or
cld
cmps
inc
test
sbb
call
xchg
dec
(bad)
or
jmp
xchg
fscale
push
in
jb
sbb
add
ret
sub
mov
push
mov
jb
hlt
inc
xchg
or
mov
and
cmc
sbb
mov
sub
xchg
cwde
icebp
jp
std
int
cmp
and
or
rcr
rcr
fsub
or
mov
mov
cmps
lea
sub
mov
mov
leave
pop
retf
dec
mov
inc
xchg
cmps
sbb
sub
sub
inc
jb
inc
lods
adc
(bad)
cmp
pop
movs
fidiv
out
or
imul
jnp
retf
call
fwait
test
mov
or
mov
test
(bad)
iret
test
(bad)
out
lods
retf
jmp
xor
xchg
cmp
xor
inc
mov
lods
sbb
push
jae
stos
inc
cs
outs
cmp
hlt
jp
fwait
dec
repnz
pusha
frstor
das
sub
fisubr
mov
aas
movs
test
mov
fiadd
sbb
xchg
inc
fs
cmc
and
in
xchg
or
leave
into
adc
scas
jmp
imul
in
mov
aam
xchg
ret
ss
mov
push
pop
stos
add
pop
movs
bound
mov
shl
sub
fisttp
or
cmp
frstorw
adc
mov
ja
ss
pop
lods
in
cmp
mov
je
pop
xchg
mov
or
ret
outs
repz
sub
dec
pop
movs
out
jg
scas
jae
lahf
mov
mov
ret
sahf
enter
dec
int3
nop
inc
popa
mov
xor
fcom
and
or
or
nop
mov
in
call
pop
icebp
xchg
inc
pop
pop
inc
imul
in
fist
(bad)
daa
inc
test
leave
mov
out
iret
fcom
scas
adc
mov
add
mov
mov
push
jl
and
scas
mov
and
inc
lds
je
aas
push
daa
enter
mov
mov
int
push
pop
into
ins
les
cmps
and
adc
mov
lock
icebp
pop
call
enter
out
test
xor
dec
gs
in
mov
mov
ins
mov
neg
inc
cli
sub
cmp
stc
xchg
cmp
xor
sub
mov
xchg
cmp
fxch
adc
mov
ds
ret
ret
imul
pop
jmp
shr
cmc
push
sub
jecxz
rol
out
add
(bad)
jae
xchg
and
out
shl
add
dec
sub
dec
dec
outs
loope
mov
mov
dec
mov
in
jne
mov
adc
stos
fistp
dec
stos
xor
clc
aaa
xchg
out
jmp
int3
jo
in
jge
cld
push
xor
adc
test
xor
call
xor
and
jns
dec
or
add
pop
mov
sahf
int3
mov
inc
sbb
stos
adc
push
mov
(bad)
call
cmc
push
imul
cmp
jecxz
popa
test
clc
popa
pop
push
xchg
ficomp
cli
cmp
or
adc
pop
inc
into
lds
scas
stos
cld
push
mov
ret
sub
sub
int
(bad)
mov
xchg
pop
sub
cmps
ins
add
sbb
add
dec
jge
lahf
pop
bound
pop
jmp
mov
dec
adc
mov
cmp
sub
les
int3
add
ror
fistp
mov
inc
sub
sub
jge
xchg
and
pop
fsub
(bad)
popf
push
adc
mov
inc
addr16
mov
cmps
mov
outs
dec
pop
ja
bound
mov
in
xor
sbb
pop
aas
mov
dec
daa
movs
xchg
mov
retf
pop
dec
fld
imul
sbb
mov
jmp
(bad)
(bad)
fistp
scas
xor
jns
push
xor
les
push
cli
pop
iret
lahf
pop
fnsave
and
in
adc
imul
out
lock
inc
push
data16
adc
mov
ja
jbe
stos
ret
cmp
or
xor
out
add
lea
stos
xchg
rcr
loope
push
(bad)
repz
shl
dec
rep
fsubr
fyl2xp1
shl
lds
out
in
xchg
stos
pusha
pop
movs
out
sbb
and
fist
and
test
cmc
mov
pop
fistp
pop
push
aam
xlat
jp
or
mov
inc
dec
push
inc
add
js
(bad)
fldcw
jg
stos
inc
mov
lods
cmp
cs
pop
jnp
imul
pop
ds
loopne
dec
push
add
xchg
aaa
inc
bound
mov
mov
push
xchg
ins
mov
aas
mov
xor
and
(bad)
push
cli
xlat
fadd
fwait
scas
shl
mov
adc
push
push
sbb
mov
lahf
pop
divps
repz
xchg
push
outs
mov
scas
or
jno
icebp
movs
inc
fdivr
xlat
mov
and
loop
cmp
mov
xlat
aaa
cmp
pop
mov
js
pop
sbb
push
test
out
xchg
pop
mov
sbb
cmc
jle
repnz
out
lock
mov
es
outs
pop
pop
mov
adc
aad
mov
int3
mov
fs
loopne
cwde
mov
add
dec
fidivr
dec
add
inc
xchg
repnz
imul
int
mov
(bad)
cmp
movs
bound
outs
mov
lahf
inc
mov
adc
clc
cmc
dec
sbb
xor
mov
cli
cs
(bad)
(bad)
aad
popf
pop
adc
mov
cmps
cmp
mov
das
lea
je
pop
or
cmps
jp
push
mov
push
cli
sbb
sbb
push
push
test
xchg
push
jo
dec
cmps
jmp
or
or
icebp
pop
mov
jmp
and
jae
lods
shl
ret
or
(bad)
out
push
fist
fnstcw
loop
push
dec
sbb
inc
outs
pop
inc
add
cmp
sbb
out
dec
leave
sub
lds
sbb
outs
xor
and
neg
mov
into
push
dec
xchg
push
push
mov
cmp
pop
je
push
cmp
imul
out
or
test
ja
cmp
(bad)
dec
or
mov
push
loopne
xchg
pop
dec
not
lahf
and
fcomp
cmp
ins
adc
push
es
retf
xchg
mov
ds
sub
mov
data16
xor
mov
ins
arpl
pusha
add
mov
push
adc
iret
mov
cwde
jae
ret
xor
data16
adc
or
mov
imul
sbb
arpl
ds
fwait
jnp
es
dec
shl
add
jecxz
inc
out
cmp
sar
jg
sti
test
(bad)
jns
ret
sahf
mov
mov
pushf
leave
arpl
sub
dec
mov
sbb
loop
ffree
ins
xchg
inc
jnp
push
sub
mov
cmp
fwait
or
fcmovnb
pop
aas
mov
adc
and
pusha
div
outs
jno
adc
xchg
cmps
cdq
mov
mov
mov
(bad)
mov
ss
(bad)
or
(bad)
neg
scas
xchg
dec
pop
pop
xchg
cmp
add
pushf
cmp
and
inc
mov
dec
ficomp
xchg
adc
pop
ins
push
pop
or
call
(bad)
aaa
xchg
(bad)
jmp
fwait
cmps
add
daa
xchg
sti
aas
adc
jno
jns
sub
push
call
icebp
and
sbb
stos
call
iret
out
lock
bound
jge
mov
cmp
hlt
push
or
(bad)
mov
cli
or
lahf
adc
xchg
inc
dec
sti
imul
pop
cmp
mov
sub
in
mov
(bad)
iret
hlt
dec
xlat
mov
aaa
aaa
and
fnstsw
push
jle
push
sbb
cmp
add
ins
sbb
popa
mov
stc
jns
stos
test
cmc
inc
inc
imul
retf
(bad)
mov
pop
xor
daa
mov
fisttp
cdq
mov
pop
jne
fwait
mov
loope
xor
fstp
pop
mov
dec
and
sbb
jge
leave
pop
scas
mov
js
mov
(bad)
mov
pop
das
adc
pusha
ficomp
iret
sbb
xchg
mov
cdq
pushf
mov
and
mov
push
bound
in
loop
sti
scas
repz
and
jle
add
popa
lds
xchg
push
add
cmp
in
cs
cdq
cld
fimul
push
sbb
jmp
ds
push
cmp
cmp
aam
test
sbb
mov
cwde
imul
mov
das
imul
fwait
pop
in
enter
fimul
jno
hlt
int3
cld
rol
fist
ins
mov
test
mov
mov
mov
mov
or
dec
imul
mov
int3
or
mov
or
mov
push
dec
loop
xchg
sbb
ins
adc
mov
mov
clc
xchg
inc
(bad)
xor
in
test
dec
jge
mov
(bad)
pushf
les
lock
xchg
leave
inc
cwde
sub
fstp
mov
loope
xchg
xchg
xchg
cld
nop
out
jl
add
fstp
and
mov
std
and
jb
repnz
std
pop
pop
mov
mov
xchg
in
push
icebp
cld
pop
dec
inc
dec
sub
cwde
sub
outs
jbe
mov
scas
dec
mov
pop
je
out
gs
push
cmp
mov
mov
xrelease
test
in
cmp
inc
push
add
pop
add
adc
jp
mov
or
or
cwde
inc
inc
push
pusha
pop
fsub
sbb
and
and
outs
mov
mov
in
addr16
iret
jns
lods
push
into
xchg
jecxz
push
inc
push
es
nop
dec
cmps
xor
mov
pop
cwde
jp
inc
cmps
cdq
add
mov
out
sub
gs
mov
les
retf
inc
daa
sbb
lock
std
nop
rcl
mov
and
xchg
add
inc
inc
popa
jns
repz
mov
mov
daa
mov
jp
and
neg
inc
jge
mov
dec
hlt
mov
adc
rcr
jnp
mov
jnp
sbb
push
sbb
pusha
or
std
movs
push
adc
push
enter
pop
add
jge
xor
arpl
push
lock
ror
and
mov
pop
add
adc
jl
movs
cli
or
jne
cli
les
fistp
add
test
or
and
call
mov
movs
in
test
popfw
int3
jb
push
pop
int
out
or
cmps
sbb
add
push
inc
(bad)
push
ins
adc
push
mov
jmp
xor
int3
fstp
push
aas
nop
or
pop
push
mov
movs
aas
dec
inc
adc
mov
sub
xchg
inc
lds
cmps
mov
add
movs
and
fs
and
call
push
lea
or
and
jge
call
xchg
dec
jne
mov
pop
or
sbb
adc
mov
push
cmps
stos
inc
cmp
(bad)
sub
mov
leave
aam
in
pop
in
cmp
or
pop
xchg
mov
sub
jecxz
push
and
cwde
rol
xor
ja
mov
fcomp
das
cmc
mov
mov
jne
ins
out
add
lock
int
ret
loop
retf
(bad)
cmp
push
loopne
mov
pop
xor
jo
push
inc
push
mov
rol
xor
aam
add
lahf
xor
rcr
fcomp
mov
cld
leave
sub
xchg
xor
clc
je
stos
push
xor
and
fwait
nop
fcmovne
nop
repnz
pop
loop
ret
out
cmc
xchg
stc
xchg
jns
pop
ds
dec
xor
or
jecxz
imul
cmp
repnz
mov
or
fcmovnb
xlat
inc
cmps
call
pop
das
pop
stos
scas
sub
lahf
cmc
dec
test
xchg
push
(bad)
call
cs
lock
mov
mov
mov
jne
xor
lock
call
jle
jae
push
mov
nop
jns
pop
lds
je
aaa
dec
xchg
test
(bad)
enter
(bad)
(bad)
into
hlt
mov
lds
xlat
sub
or
int
das
jns
es
int
call
rol
ds
in
pop
mov
xchg
jmp
or
adc
sub
setno
fwait
mov
mov
call
(bad)
push
or
xchg
sub
movs
jbe
or
jle
cmp
rol
jmp
loop
pop
dec
push
lock
sti
dec
add
jecxz
(bad)
mov
and
and
ds
sbb
xor
xchg
ret
xchg
inc
add
mov
inc
xchg
popa
or
sbb
retf
push
dec
mov
xor
xchg
or
mov
jbe
nop
rcr
hlt
popf
dec
cld
leave
mov
push
aas
or
aam
inc
jnp
in
sbb
mov
sbb
sbb
adc
imul
or
(bad)
pop
xlat
in
fnstcw
xor
add
scas
mov
xchg
loope
adc
push
sbb
(bad)
cli
data16
and
psadbw
mov
mov
xor
fcmovu
add
repz
jnp
mov
mov
inc
mov
idiv
sub
aaa
fwait
jns
in
xor
xchg
or
jge
fidivr
push
sbb
inc
pop
adc
pop
(bad)
cmp
daa
call
aam
jecxz
leave
sbb
adc
sbb
xchg
test
add
inc
pop
pop
rcr
add
ins
sbb
sar
scas
in
cmp
rol
stc
ret
pop
pop
lock
cld
(bad)
and
(bad)
loope
adc
inc
mov
out
pop
push
dec
pusha
(bad)
std
jnp
out
and
jbe
mov
pop
jae
in
mov
pusha
jmp
fisttp
push
into
adc
mov
xchg
ds
dec
sbb
(bad)
mov
imul
sbb
fld
pop
(bad)
in
inc
or
clc
cmp
inc
inc
into
ret
mov
fcmovne
(bad)
into
push
mov
scas
outs
mov
mov
inc
scas
pop
shl
sbb
(bad)
out
je
fs
mov
xchg
jmp
push
fwait
mov
dec
and
cld
mov
mov
xor
jmp
inc
sub
fimul
push
mov
sub
js
xchg
js
loop
lahf
iret
cwde
(bad)
cmp
pop
mov
fs
mov
out
(bad)
je
inc
das
lods
xor
out
sbb
out
(bad)
stos
xchg
(bad)
in
call
push
leave
xchg
loope
inc
adc
mov
ins
aaa
popa
xor
jb
fwait
and
dec
outs
dec
mov
in
rcr
cmp
jo
ret
adc
xchg
(bad)
lods
pop
arpl
jp
out
pop
ficom
jle
fs
add
shl
jno
jnp
aam
jne
cmp
mov
popa
hlt
test
xchg
rol
mov
or
inc
push
lods
sbb
(bad)
cmp
mov
inc
pushf
test
fmul
sub
int3
fmul
jno
jnp
test
sbb
cmc
mov
pop
push
jmp
rep
cmp
cmp
inc
mov
or
push
sbb
add
fisttp
or
mov
xor
pop
(bad)
sahf
adc
lods
mov
jp
int3
jbe
pop
out
outs
mov
test
(bad)
fsub
lahf
lea
sti
or
retf
nop
cmps
movs
mov
outs
ja
mov
test
cmps
inc
push
ret
lahf
dec
or
cmps
add
daa
mov
popf
fwait
loopne
(bad)
dec
dec
pop
mov
push
or
daa
jmp
div
mov
cdq
sbb
cmps
dec
mov
adc
mov
xchg
mov
aad
jns
add
ss
ins
aam
mov
pop
cmp
movs
fsub
addr16
adc
cwde
lea
jg
push
pop
inc
mov
cli
ficom
cs
and
cmp
fcmovne
aaa
dec
jmp
cmp
(bad)
push
int3
mov
sub
rcl
mov
xor
mov
xor
stos
(bad)
(bad)
aas
shl
mov
cmp
mov
call
pop
cmps
jae
add
cmps
xor
add
test
mov
inc
mov
das
push
push
or
aas
add
push
dec
jle
in
and
iret
into
cdq
mov
jo
xor
cwde
sub
call
jns
sbb
sub
jae
out
ins
and
lahf
sbb
in
repnz
push
pop
fisub
aam
mov
dec
and
shr
push
or
fsub
mov
dec
xor
mov
push
xchg
in
dec
push
mov
mov
xchg
aaa
push
movs
jne
jle
mov
not
push
out
mov
jb
idiv
xchg
xchg
jp
mul
pop
into
mov
test
outs
mov
cmp
sbb
pop
push
retf
xchg
jae
mov
adc
loope
add
mov
cmps
jmp
or
frstor
adc
push
jge
pusha
pop
int3
shl
xor
cmp
xlat
(bad)
xchg
cmps
jns
stos
out
in
cmps
sbb
int3
out
or
in
nop
aam
test
lods
inc
add
sub
push
xor
ret
cdq
lock
dec
loopne
imul
sbb
scas
outs
cli
repnz
int3
stos
out
in
sahf
xlat
mov
xchg
sar
mov
inc
push
cmp
call
lods
psrad
loop
adc
mov
jmp
push
dec
icebp
and
jae
and
pop
scas
pop
jecxz
das
fiadd
or
ret
cmp
xchg
ret
sub
shl
pop
push
lods
pop
mov
retf
fs
mov
call
shrd
mov
call
fs
fdivp
data16
dec
adc
push
bound
(bad)
cdq
jp
mov
and
mov
sahf
push
aaa
mov
push
or
or
add
hlt
xchg
repnz
retf
mov
push
fldcw
lods
mov
popf
xor
es
call
cwde
ds
js
retf
test
call
dec
jno
mov
cmps
std
lods
xor
rol
(bad)
cli
xchg
sbb
mov
push
outs
mov
inc
mov
test
lahf
mov
ss
les
cwde
and
and
push
movs
jns
mov
fstp
sbb
in
mov
cwde
in
(bad)
lods
mov
fstp
iret
aam
shr
inc
ds
inc
dec
and
lahf
pop
mov
call
ja
dec
into
popw
pusha
sahf
xchg
lahf
pop
xor
xchg
dec
ja
cmp
jmp
leave
dec
rol
push
(bad)
mov
jmp
dec
loopne
hlt
mov
or
or
mov
adc
fdivr
rol
pop
mov
imul
push
fst
lahf
test
es
inc
mov
jecxz
shr
test
mov
ins
aas
push
call
stos
or
inc
or
jns
mov
push
xchg
aaa
or
and
or
out
xchg
xchg
rcl
(bad)
push
add
push
dec
cmps
(bad)
into
push
nop
push
gs
sub
inc
mov
mov
imul
mov
out
retf
mov
mov
shl
dec
daa
pop
fidiv
enter
and
dec
aas
pop
test
mov
inc
call
sbb
aam
fwait
stc
jp
dec
out
jge
dec
xchg
adc
jecxz
outs
retf
adc
in
jmp
imul
and
fistp
fidivr
adc
inc
mov
pop
mov
fsub
fcmovnb
out
sbb
repnz
retf
inc
xchg
mov
out
mov
push
xchg
mov
dec
mov
xor
sti
(bad)
sub
fcom
and
sub
js
fs
leave
imul
arpl
fbstp
add
movs
cmp
cmp
ret
and
add
adc
xchg
mov
aas
daa
fnstcw
int
ss
or
mov
pop
gs
xor
mov
cmp
or
aad
repz
sar
mov
scas
inc
icebp
pop
fcomp
mov
repz
jmp
xchg
leave
xor
push
gs
loop
sub
inc
inc
jg
pusha
sti
adc
mov
jmp
mov
cmp
call
fstp
les
out
iret
cmp
inc
sbb
pop
neg
stc
dec
mov
inc
loopne
and
sbb
xor
dec
cld
sub
mov
cmc
mov
xchg
mov
scas
mov
pop
push
adc
push
imul
adc
mov
push
jns
mov
mov
out
mov
dec
inc
es
mov
stc
outs
int
dec
mov
iret
push
arpl
sub
push
mov
(bad)
int
mov
xor
sbb
(bad)
loop
inc
lock
push
repz
into
loope
(bad)
mov
add
mov
inc
rcl
jmp
sbb
test
push
jbe
aaa
mov
outs
adc
jmp
dec
inc
repz
push
cmp
pop
mov
icebp
das
lahf
add
je
jg
(bad)
adc
jae
outs
inc
cld
adc
sub
test
fsub
xor
and
mov
outs
sbb
cmp
leave
push
jno
(bad)
jns
stos
add
or
inc
mov
push
stos
sub
imul
adc
pop
jl
push
js
iret
mov
cli
(bad)
sar
shr
xor
loope
push
or
mov
(bad)
add
xor
jns
jl
sahf
mov
sbb
call
stos
push
adc
fadd
ret
outs
jb
lea
jns
add
cmps
fistp
mov
inc
mov
data16
in
jle
push
jmp
in
movs
add
cmp
in
mov
cmp
pushf
cmp
push
add
test
mov
int
movs
sbb
pop
fxch
mov
jl
sahf
inc
movs
popf
test
dec
dec
and
cmp
or
or
ds
(bad)
bsr
movs
xchg
mov
push
xchg
sub
xchg
sbb
mov
fst
stos
cmp
mov
fwait
call
push
movs
mov
jge
push
stc
mov
xor
(bad)
mov
loope
call
imul
fs
shl
fsub
aam
popf
outs
or
shl
(bad)
retf
arpl
adc
loop
popa
mov
loop
pop
daa
popa
xor
cmp
sbb
lods
sub
mov
mov
cmp
mov
mov
outs
mov
xchg
cmp
jmp
fisub
test
test
cmp
jns
jecxz
pop
push
jmp
(bad)
push
daa
scas
xchg
and
jmp
sbb
dec
cld
add
push
mov
and
ds
push
push
cmp
or
pmullw
pop
push
inc
call
out
sub
and
iret
ret
dec
mov
or
jmp
sahf
sub
sub
xor
add
xor
push
inc
mov
lods
ins
icebp
test
jno
sti
pop
nop
pop
daa
std
inc
(bad)
mov
cmp
cli
cmc
mov
daa
add
cmp
add
loopne
add
jecxz
push
mov
push
and
out
jecxz
pop
adc
lods
cwde
or
js
push
into
inc
adc
sub
inc
mov
or
int
call
hlt
dec
mov
imul
scas
cmp
mov
imul
fstp
sub
vmwrite
mov
unpckhps
xchg
rcr
cmp
int
jecxz
jmp
iret
add
aad
sbb
shl
ds
cmp
or
cld
pop
push
pop
lea
push
mov
xchg
add
xchg
sub
mov
and
pop
in
cwde
inc
inc
push
mov
cmp
psubusw
xor
mov
jne
sub
mov
movs
mov
rcl
(bad)
mov
sbb
nop
pop
lock
mov
icebp
adc
pop
push
enter
push
jp
dec
(bad)
jl
ror
loope
imul
aad
scas
pop
imul
jo
sub
inc
pop
gs
cmc
sbb
in
mov
aad
push
sbb
adc
out
xchg
lahf
jg
inc
(bad)
mov
test
push
ins
cdq
ficomp
jns
xor
fs
js
add
mov
xchg
push
out
mov
xchg
ja
lea
jp
mov
hlt
pop
addr16
sub
jecxz
out
xchg
leave
test
inc
adc
shr
jle
jno
outs
popa
mov
push
jp
xor
pshufw
mov
in
imul
inc
jmp
repz
sbb
lods
and
mov
rol
mov
xchg
push
inc
xlat
mov
inc
or
xchg
out
mov
aam
not
loopne
adc
setg
ins
dec
dec
movs
sub
test
fld
shl
mov
adc
pop
add
inc
or
inc
out
or
xchg
outs
fs
pusha
jnp
pop
add
mov
cmc
push
rol
sbb
pop
xor
daa
sub
jp
lahf
pop
add
mov
dec
retf
xchg
ret
fbld
fcomp
cmc
dec
in
aam
out
xlat
in
mov
daa
xchg
psraw
ret
pop
jl
mov
jno
or
and
jmp
les
int
xlat
xchg
mov
cdq
add
pop
add
jle
mov
dec
inc
stos
xlat
xor
add
popa
push
fs
enter
cmp
cwde
push
xchg
ror
push
aas
inc
xor
(bad)
cbw
or
cmps
push
hlt
mov
pushf
dec
jle
add
cld
mov
pop
lods
inc
push
and
push
adc
fwait
retf
not
xor
inc
adc
outs
call
iret
push
(bad)
mov
push
mov
xor
inc
and
push
ins
cmc
in
out
addr16
mov
fadd
cmps
mov
push
arpl
jmp
push
sub
fst
push
adc
mov
(bad)
iret
dec
ins
and
mov
fxam
mov
imul
fiadd
sub
pop
pushf
and
imul
xchg
mov
loopne
pop
cmc
xchg
imul
in
or
and
mov
dec
mov
lods
pop
xor
pop
mov
cmp
inc
add
jns
outs
xor
mov
call
enter
pop
pop
int
aas
lds
ret
pop
cli
in
push
data16
mov
fcomp
cdq
iret
enter
xchg
inc
or
cmp
push
add
sbb
rcl
in
push
push
sbb
xor
push
and
pop
mov
scas
(bad)
xchg
jge
sbb
sub
mov
mov
push
and
outs
cmps
imul
pop
leave
(bad)
jmp
fwait
push
jmp
sbb
adc
mov
or
xor
or
retf
cwde
inc
call
dec
outs
movs
ret
(bad)
rcl
(bad)
retf
jmp
and
cdq
in
ins
int3
xchg
xchg
std
and
(bad)
bound
(bad)
(bad)
or
jnp
or
in
imul
loopne
mov
sbb
lea
mov
aas
nop
and
or
mov
retf
sub
inc
xchg
stos
xor
mov
(bad)
les
jecxz
fs
popa
cmps
jp
mov
nop
sbb
dec
(bad)
ss
mov
retf
shr
lds
cs
adc
in
pop
adc
sbb
fistp
data16
lock
movs
ret
fwait
in
mov
rcl
pop
mov
inc
push
add
std
push
shl
pop
or
sti
ret
jbe
dec
mov
mov
mov
arpl
test
push
fmulp
sub
inc
div
in
push
pusha
push
ins
mov
test
jmp
aas
dec
adc
fcomip
cmp
add
dec
inc
enter
cmps
(bad)
jmp
jne
jg
aam
das
inc
push
imul
pop
ins
rol
jnp
shl
out
dec
jl
push
pop
int3
mov
add
xor
add
pop
adc
push
retf
rep
add
or
add
dec
rcr
pushw
mov
sub
mov
or
sub
and
pop
adc
mov
sub
pop
push
std
pop
adc
scas
mov
cmps
sub
sub
mov
push
fwait
lds
inc
shl
ins
sbb
stc
jmp
jg
mov
inc
(bad)
retf
ret
sub
cmps
(bad)
cld
addr16
xlat
mov
push
imul
sbb
add
inc
es
pop
fwait
push
jae
add
pop
jb
pop
out
ja
repz
sub
test
and
xchg
adc
stc
jp
pop
pextrw
stc
jae
pusha
call
push
(bad)
cli
js
fistp
int3
mov
jp
sahf
cwde
retf
xchg
adc
ret
dec
test
xor
and
in
push
test
mov
div
xchg
dec
fucomp
lods
(bad)
(bad)
jge
inc
inc
adc
rcr
adc
dec
outs
adc
jns
push
xchg
xchg
add
cmps
ins
ins
inc
popa
dec
pop
aad
sahf
jp
mov
xchg
sub
fcom
sub
jae
ss
xor
leave
iret
add
bound
dec
mov
adc
jo
jge
sub
pop
cmps
xor
test
mov
outs
jbe
ror
aas
inc
jle
call
rcl
mov
adc
lods
repz
scas
(bad)
xor
ds
call
and
add
xchg
mov
into
cmp
mov
call
jns
sub
fwait
mov
movs
add
(bad)
sub
add
loop
int3
ret
rcl
js
mov
pop
mov
out
jl
adc
cmp
jmp
into
fs
cdq
and
stc
jg
xchg
and
movs
mov
pushf
jmp
sub
hlt
outs
jmp
xchg
loopne
loope
cwde
imul
dec
xor
mov
inc
mov
loopne
outs
shr
cmp
stos
push
push
les
in
enter
xor
add
and
mov
push
mov
xor
jno
push
mov
cmps
mov
in
jno
loop
sub
pop
es
jl
add
push
jb
test
sub
adc
adc
xchg
pcmpgtb
bound
push
mov
cmc
push
fld
jne
add
mov
or
push
aam
xchg
mov
push
xchg
jmp
add
push
aaa
and
inc
mov
mov
lods
push
cmp
dec
xchg
cdq
push
popa
inc
repnz
jns
dec
inc
sub
jmp
mov
pop
mov
xchg
sti
out
or
xchg
repnz
mov
arpl
call
bound
imul
pxor
add
mov
dec
and
add
xlat
cmp
inc
xor
jmp
adc
aam
mov
nop
rcl
jmp
mov
sbb
js
adc
xchg
movs
jecxz
out
xor
arpl
pushf
and
push
jecxz
inc
mov
inc
popf
loope
not
xor
loope
test
dec
sar
ss
aaa
test
test
adc
sub
dec
adc
jl
xor
cmp
lahf
fdivr
mov
mov
mov
punpckhdq
out
outs
and
aaa
aam
in
(bad)
(bad)
call
pushf
xor
pusha
nop
stc
dec
cmp
jle
mov
(bad)
mov
dec
sub
test
pop
imul
and
push
push
icebp
dec
xor
push
popf
pusha
pop
fwait
sbb
push
retf
sub
call
fisttp
pop
aaa
mov
loopne
dec
xchg
mov
sbb
mov
inc
icebp
fmul
addr16
mov
bound
pop
scas
cmp
shl
or
pop
pop
xchg
lds
jp
int3
sub
adc
cmp
mov
dec
aaa
xchg
loopne
sub
adc
jl
inc
mov
push
fucomip
sti
je
jl
pusha
int
pop
lds
addr16
mov
mov
js
jg
mov
inc
adc
adc
stc
adc
sar
xlat
push
repnz
sub
aad
add
retf
xor
adc
cmp
mov
pop
pop
and
xchg
cli
cmp
int3
fsubr
inc
add
xchg
adc
scas
movs
xchg
fdiv
xchg
fwait
mov
push
xor
adc
pop
aas
pop
push
or
(bad)
push
or
in
jecxz
add
dec
ror
dec
enter
cmp
sbb
imul
sti
mov
xor
dec
int3
and
mov
mov
mov
xor
repz
dec
nop
pusha
mov
stos
push
lock
popf
ds
xchg
imul
sbb
pop
lahf
or
lods
and
mov
jle
fcmovb
push
imul
test
pop
sub
loope
addr16
cmp
pop
xchg
cdq
mov
add
sub
or
cmp
pushf
mov
sbb
push
sti
out
mov
test
push
ss
pop
adc
dec
loop
push
xor
add
fmul
jns
ins
jnp
sahf
daa
rol
xchg
daa
jne
xor
cli
inc
pop
push
cmpps
movs
mov
rcr
dec
jo
shl
sub
jne
shl
shr
mov
dec
sub
mov
mov
rcr
pop
or
mov
fldenv
iret
jno
call
out
imul
rcr
cmp
inc
push
ins
mov
nop
xlat
pop
lahf
jno
or
mov
cs
jg
mov
mov
in
xor
push
fld
cmp
cmc
int
adc
xchg
(bad)
test
shr
jl
ins
and
or
cmps
dec
xchg
fcomp
mov
adc
mov
out
dec
mov
outs
pop
out
xchg
cmp
cmp
mov
icebp
cli
sbb
sar
jnp
sbb
jb
je
js
push
cmp
xor
xchg
jno
repnz
outs
add
cmp
mov
push
adc
cmp
call
fs
sbb
inc
mov
sbb
jno
call
mov
adc
xor
ret
addr16
ins
inc
movs
jns
fstp
mov
neg
into
xchg
mov
push
enter
cwde
mov
cld
or
repz
loopne
jl
jp
out
out
mov
or
and
and
and
jne
outs
mov
add
mov
push
ins
xchg
call
or
(bad)
out
mov
inc
cmps
es
addr16
lock
aad
mov
adc
xchg
and
jmp
repz
fs
shr
dec
(bad)
nop
sbb
popa
sti
mov
jns
mov
mov
in
test
in
sub
cmp
add
sbb
hlt
ins
sub
sahf
movs
and
pop
gs
fist
nop
adc
test
mov
jl
jl
pop
pop
(bad)
cld
or
push
xchg
jle
or
mov
movs
and
pop
sbb
in
outs
mov
pusha
inc
loopne
ins
fnsave
dec
div
cmps
shr
mov
hlt
test
ins
fsub
jle
in
loope
pop
push
je
sbb
iret
mov
mov
adc
lock
mov
fcomip
pop
push
and
pop
cmps
xor
outs
dec
xchg
lahf
stos
push
fisub
neg
clts
jbe
mov
pop
aam
inc
scas
dec
push
mov
push
mov
fld
mov
test
sbb
mov
aam
rol
inc
sar
sahf
(bad)
into
xchg
fstp
pop
mov
data16
scas
shl
sub
mov
jle
pop
jno
mov
mov
jge
pop
push
lods
dec
stos
push
mov
inc
mov
js
push
in
lea
pop
jbe
push
adc
pusha
adc
xchg
ins
or
push
mov
(bad)
xchg
push
lds
mov
xchg
cmp
aam
mov
xor
fwait
sub
mov
dec
sti
cmp
add
xchg
aad
jge
xchg
inc
aad
pop
inc
adc
xor
sub
test
aam
dec
jno
test
mov
cld
pop
in
bound
sub
cs
and
dec
jno
sub
xchg
out
js
push
adc
and
push
jb
push
xchg
jmp
push
fcmove
dec
pop
out
jo
ret
pop
push
xchg
fsubrp
jbe
loope
idiv
push
xor
sbb
pop
mov
xor
test
push
dec
dec
out
xchg
fst
pop
loopne
sub
shl
mov
ret
xor
inc
push
lods
xchg
sub
xchg
dec
mov
cs
fidivr
shl
adc
push
ins
cmp
test
aam
adc
inc
push
inc
sbb
nop
popf
mov
int3
je
rol
lock
cmp
xchg
add
adc
lods
fbld
mov
lock
inc
mov
or
jno
sub
jbe
cwd
outs
das
daa
xor
xchg
mov
fimul
lahf
lods
mov
cmps
sti
mov
outs
je
ds
in
push
(bad)
sbb
movs
sub
sub
cmp
pusha
pop
sti
pop
or
stos
mov
test
push
add
(bad)
mov
push
and
and
fisubr
xor
jp
mov
sbb
ret
dec
push
test
dec
pop
ins
stos
das
adc
push
sub
adc
call
xchg
loope
add
and
pushf
or
dec
fistp
jns
retf
cli
xor
fwait
lea
mov
(bad)
aad
pop
in
in
loope
hlt
jl
and
retf
pop
fistp
pop
sub
inc
into
mov
xchg
pop
mov
ja
mov
scas
scas
movs
iret
pop
push
dec
in
push
and
cmps
mov
iret
(bad)
fist
xor
test
cmps
movs
and
adc
(bad)
loope
pop
dec
push
bound
or
cmc
pop
mov
imul
arpl
push
iret
dec
jp
jnp
cmc
mov
adc
std
jl
movs
xchg
push
stos
cmps
popf
adc
mov
jno
div
mov
les
mov
call
in
jnp
mov
call
call
fucomi
mov
or
cmp
cli
jnp
and
test
fst
cmp
lods
jns
hlt
cmp
sub
cmp
cmps
aas
fidiv
rcl
cmp
fst
or
jbe
push
cdq
call
je
into
adc
xor
or
not
stc
adc
add
adc
pop
push
xor
push
sub
call
xchg
cmp
out
test
jne
sbb
or
stos
dec
sahf
iret
cmp
adc
daa
mov
jnp
(bad)
hlt
xchg
ja
cmp
xchg
imul
in
push
lods
jmp
mul
icebp
sahf
cmps
jae
nop
ds
movs
out
mov
jle
int3
mov
int
mov
repnz
pop
dec
and
adc
cs
adc
(bad)
mov
mov
mov
hlt
push
pop
outs
jnp
push
mov
inc
fcmovnb
cld
(bad)
jp
adc
sub
fs
xchg
xchg
dec
cmc
les
rol
push
iret
push
aam
cmp
loopne
cdq
ins
mov
pop
dec
xor
aaa
mov
ins
jae
mov
std
stos
and
push
fwait
cld
out
js
mov
push
repz
dec
stos
mov
fmulp
mov
int
xchg
dec
div
scas
add
rol
lock
retf
add
and
fisubr
mov
ins
inc
inc
cmp
fidiv
loop
jo
push
cmc
pop
mov
pop
push
cs
push
mov
mov
pop
sub
mov
adc
fistp
inc
adc
sahf
xor
es
fstp
mov
dec
cmp
mov
push
mov
loopne
test
fadd
imul
adc
push
sbb
pop
add
dec
movs
push
push
inc
sbb
adc
sub
scas
into
adc
adc
jmp
mov
fisub
les
(bad)
mov
sub
push
lahf
hlt
hlt
xor
cmp
lahf
dec
pop
jg
data16
scas
cmps
pop
pusha
jns
sub
push
mov
lods
rcl
adc
jecxz
mov
sti
aam
cmp
adc
xacquire
loopne
or
xchg
mov
dec
lods
stos
or
mov
es
and
xchg
xchg
mov
leave
cmp
and
pop
pushf
stos
jno
test
dec
push
xor
arpl
dec
pop
cmp
int
or
fwait
dec
and
pop
push
ins
pop
test
push
les
jecxz
rol
fucomip
clc
jp
lods
ins
loop
ss
add
aam
xchg
mov
and
in
push
stc
gs
jmp
fisttp
loope
mov
fbld
fdiv
or
scas
cmps
mov
ror
adc
xchg
mov
out
movs
jmp
call
jmp
xchg
adc
ja
mov
out
outs
pop
paddq
jp
cli
shl
pushf
dec
pop
jmp
repz
mov
mov
div
retf
(bad)
test
cs
(bad)
fisubr
jns
sar
idiv
in
aas
jg
sbb
and
(bad)
jnp
retf
cdq
cmps
xor
stos
push
dec
dec
clc
sbb
cmp
adc
mov
je
or
push
jle
xchg
dec
enter
mov
mov
into
cmp
and
aad
xchg
mov
or
in
and
push
mov
inc
es
jbe
(bad)
push
ins
aaa
aaa
jl
fs
movs
dec
adc
inc
mov
fs
aas
mov
pop
fwait
aam
mov
adc
(bad)
xchg
mov
arpl
mov
mov
test
add
push
gs
sbb
sti
mov
and
cmps
push
test
jmp
cli
mov
add
mov
xchg
aam
and
push
cmp
not
sbb
ds
pop
fnstenv
xchg
pop
cs
xor
mov
pop
pop
pop
enter
sbb
jns
mov
xor
pop
inc
xchg
outs
loope
sub
scas
lock
inc
shr
loopne
repz
je
jl
loope
nop
jmp
(bad)
mov
sub
sbb
pop
ds
jg
jns
ins
sbb
imul
clc
cmp
mov
push
cmps
mov
out
xor
mov
rol
test
loop
mov
xchg
cmp
and
push
dec
aas
pop
mov
fcomp
ds
xchg
rcl
nop
outs
popa
xchg
mov
je
xchg
adc
or
sbb
xchg
outs
jp
push
inc
mov
out
in
cmp
movs
loope
(bad)
jbe
push
cmp
aas
iret
gs
inc
push
sbb
push
inc
pop
sti
or
dec
aad
ds
retf
add
mov
dec
sbb
lods
sub
(bad)
inc
jbe
(bad)
mov
jno
js
pop
(bad)
jl
mov
(bad)
jb
stos
imul
sub
stos
pusha
inc
loop
retf
arpl
js
xchg
xor
ja
push
outs
retf
movs
jb
jb
push
imul
out
jb
fcomp
jecxz
inc
int
jmp
mov
inc
cmps
imul
or
dec
inc
xchg
std
movs
test
sbb
adc
imul
cwde
into
test
ret
int3
xor
mov
(bad)
cdq
lods
and
test
outs
jp
arpl
arpl
mov
cmp
out
push
es
ss
div
ins
int3
cmp
jmp
jmp
xor
mov
aad
xor
repnz
das
dec
(bad)
xor
cmp
dec
lea
inc
adc
mov
inc
out
jo
dec
shl
xor
xor
cmp
movsx
mov
mov
mov
sbb
pushf
jns
pop
xor
(bad)
icebp
cmp
pop
jmp
mov
jbe
(bad)
cld
pop
loop
mov
call
xchg
repnz
out
nop
cdq
call
or
jle
out
or
icebp
mov
cmc
pop
and
mov
(bad)
or
push
mov
icebp
mov
retf
fmul
fwait
int3
xchg
cmp
push
sbb
stos
xor
or
xor
in
mov
imul
dec
inc
ins
jmp
mov
mov
mov
(bad)
jne
imul
mov
push
rcr
add
nop
pop
mov
add
jge
push
fwait
into
sti
fwait
mov
dec
and
cmp
mov
or
sbb
daa
cmps
mov
mov
xchg
inc
and
popf
pop
cdq
push
int3
xchg
push
(bad)
adc
inc
adc
call
test
ja
stos
das
lods
aad
shl
xor
mov
gs
popa
imul
ror
push
mov
aas
inc
or
inc
in
xchg
jl
mov
popa
test
push
push
cmp
pop
lods
mov
pop
jbe
xchg
dec
or
dec
movs
stos
jecxz
cmps
push
or
nop
pop
repz
xor
mov
jle
fs
adc
pop
nop
jo
cmps
clc
jae
imul
rcr
in
sub
xor
test
mov
adc
mov
pop
xchg
or
in
or
int
es
daa
fistp
xor
retf
iret
cmp
(bad)
imul
adc
add
movs
fcomi
into
js
les
retf
pop
add
jne
hlt
xchg
mov
push
adc
imul
sbb
mov
cld
in
popa
outs
out
pushf
jb
xchg
in
mov
call
jbe
aaa
imul
mov
fld1
stc
adc
cmc
xor
loopne
sbb
mov
mov
lds
and
ja
stos
mov
dec
(bad)
xor
outs
cmps
(bad)
adc
adc
cmp
es
adc
inc
aad
push
sub
sub
aam
popf
fstp
stos
adc
push
jg
jmp
inc
inc
test
fdivp
(bad)
retf
ret
iret
call
mov
mov
jnp
jge
lock
pop
adc
inc
pop
dec
dec
or
sub
cli
xchg
mov
inc
retf
cmp
xchg
js
mov
pop
push
pop
dec
mov
sub
push
call
pop
cld
xchg
adc
sbb
ret
aaa
out
jge
sbb
cmp
adc
jmp
push
push
je
xchg
mov
cmp
fisub
push
dec
imul
shl
sub
scas
in
dec
jo
and
cwde
jl
and
sbb
xchg
popa
ret
test
mov
or
cmps
cmp
sbb
jmp
ins
pop
lods
aam
fs
out
mov
rol
(bad)
adc
scas
cli
inc
fst
rcr
jb
retf
inc
data16
or
and
mov
popf
scas
enter
xor
ror
inc
mov
into
pandn
sub
test
or
xchg
mov
in
dec
and
sahf
stc
(bad)
and
ins
adc
sub
ret
pusha
test
ds
dec
mov
loope
(bad)
icebp
push
hlt
daa
jg
cdq
int3
ins
int3
lea
jecxz
inc
dec
fisub
add
or
fild
in
fs
xchg
movs
repnz
xchg
bound
mov
inc
aas
xor
loop
in
sub
clc
mov
cmp
dec
mov
adc
les
(bad)
scas
sub
out
fcom
out
xchg
mov
push
cmp
xchg
push
cvtps2pi
sahf
jecxz
add
sub
pop
mov
lahf
rol
popf
cmp
pop
push
dec
xor
mov
push
mov
in
jno
mul
xchg
xchg
in
mov
es
int3
dec
pop
mov
aaa
div
pop
sbb
in
inc
dec
popf
cwde
arpl
inc
adc
inc
ror
lea
(bad)
test
adc
mov
jmp
out
jnp
pop
stc
dec
adc
fs
pusha
mov
in
aas
xchg
sahf
add
mov
adc
clc
push
xchg
sub
fwait
sbb
(bad)
aas
sar
cmp
imul
dec
sbb
daa
and
in
nop
jb
not
bound
pop
call
pop
outs
js
mov
sahf
sbb
push
test
pop
ins
push
sub
int
imul
cmp
mov
xor
push
bound
and
call
test
mov
cmp
lods
int3
mov
push
(bad)
xor
fbstp
pop
lock
out
add
sub
pop
push
and
loope
aam
add
mov
cld
mov
mov
hlt
jbe
inc
ins
test
cmps
mov
pushf
outs
cmc
xchg
dec
(bad)
jge
sub
add
cmp
les
test
daa
cmp
cmp
or
add
jl
add
gs
mov
ret
add
es
leave
mov
(bad)
scas
popf
pop
dec
or
xor
sub
mov
pop
ins
sbb
in
inc
out
sub
xchg
cmp
test
cmp
out
push
aad
mov
add
jmp
fist
lea
fisttp
cs
test
inc
mov
and
in
xor
imul
int3
dec
add
inc
in
cmp
ds
jl
push
imul
std
fwait
adc
dec
fwait
shl
clc
into
(bad)
jmp
push
push
out
sbb
aam
sub
(bad)
xor
inc
sbb
jb
or
test
popf
rol
jp
je
clc
pop
inc
mov
ja
dec
mov
adc
push
inc
push
inc
imul
xchg
es
mov
mov
mov
dec
lea
movs
or
shl
pop
stc
push
inc
mov
mov
repnz
fcmovbe
jb
inc
add
lahf
mov
js
xchg
add
inc
dec
out
jmp
ins
xor
movs
pop
das
popf
scas
cmp
jp
sub
(bad)
fdivr
adc
xchg
movs
(bad)
pop
js
xor
xchg
aad
mov
fdivrp
pop
outs
fbld
mov
mov
dec
iret
and
rcr
(bad)
scas
retf
ds
scas
dec
mov
and
ret
cli
(bad)
(bad)
jns
jg
sub
and
push
mov
leave
lods
mov
sub
and
mov
mov
leave
mov
push
add
pop
xor
outs
ja
xchg
movs
fsub
dec
lea
cld
aaa
iret
mov
jmp
mov
mov
rcl
xor
loop
xlat
sub
ret
shr
mov
sub
cs
ror
(bad)
fadd
pop
xor
mov
(bad)
add
loopne
and
retf
push
and
cmp
xor
mov
in
sub
ret
out
in
aam
inc
fisttp
movs
bound
inc
jno
add
jns
leave
punpckldq
inc
js
jae
inc
mov
addr16
movs
scas
lea
xchg
adc
mov
cwde
clc
push
or
(bad)
fisub
mov
push
test
jo
mov
push
daa
jns
sub
sub
and
call
xchg
in
inc
xchg
fsubr
add
jb
xor
xchg
retf
jns
imul
and
neg
retf
push
pusha
pop
cmc
fdiv
(bad)
pop
cwde
shr
adc
mov
adc
and
xchg
mov
mov
mov
fistp
and
push
std
(bad)
ins
jae
dec
mov
jno
inc
jp
xchg
call
cmps
test
mov
jo
sbb
mov
sub
sub
push
(bad)
xchg
lahf
and
div
add
push
add
seto
jmp
rol
pop
add
adc
and
cmp
push
retf
fs
xor
sub
mov
add
push
lods
push
sub
shr
lods
mov
pushf
xor
sbb
jg
ret
shl
daa
jno
pop
or
inc
inc
sahf
xchg
sbb
adc
xchg
shl
cld
ja
adc
push
ficom
push
(bad)
cld
cs
test
push
jle
push
dec
movs
dec
pop
addr16
(bad)
sti
call
(bad)
aad
mov
cmps
sub
mov
mov
jge
xchg
das
xor
push
add
in
push
test
stos
adc
add
daa
int3
xlat
div
inc
inc
push
fld
and
jae
and
retf
xor
out
mov
psadbw
xchg
sub
inc
cmp
xchg
shl
jmp
icebp
xor
dec
sub
push
mov
pop
sbb
mov
mov
xchg
sti
xchg
sbb
push
or
jae
sbb
popf
pop
jae
ins
pop
das
in
nop
xchg
aas
lahf
stos
inc
cs
mov
jno
shl
sub
pop
mov
jp
repz
push
in
daa
repz
jle
dec
mov
cmp
loope
icebp
dec
mov
fnsave
sbb
les
push
sbb
jns
jno
out
ins
sbb
jne
jnp
ret
dec
nop
push
push
ins
jbe
or
add
sub
in
pop
mov
test
pop
push
and
sahf
and
pop
inc
imul
aam
fcomp
xor
inc
arpl
(bad)
xor
xchg
xchg
push
adc
mov
sub
test
fimul
mov
gs
and
shl
aas
ffreep
xor
dec
add
mov
pop
jmp
add
cmps
cmp
std
mov
push
jge
and
jmp
dec
push
jno
test
pop
loop
xor
stc
das
outs
scas
cdq
inc
jp
dec
sub
adc
icebp
int3
pop
mov
pop
loop
mov
pop
in
sub
sub
lea
pop
pushf
ins
pop
push
add
sub
xchg
adc
adc
mov
sub
adc
imul
mov
data16
dec
push
jne
dec
test
jge
mov
aam
repz
or
out
push
mov
add
and
inc
(bad)
jmp
cmps
ins
inc
mov
jmp
pushf
ret
(bad)
xlat
loope
dec
or
cmps
push
ss
xchg
scas
retf
xchg
sbb
pushf
cmps
arpl
cmp
int
das
jmp
loope
jg
in
je
xor
test
gs
or
sahf
ds
mov
clc
or
leave
cmp
aaa
pop
adc
dec
mov
loopne
pop
push
mov
jns
stc
mov
mov
test
ins
dec
sti
jnp
call
scas
pop
fsubp
mov
lods
(bad)
mov
repz
lods
mov
(bad)
test
enter
sbb
mov
inc
mov
mov
mov
movs
jmp
lods
and
imul
(bad)
and
inc
lahf
jecxz
inc
(bad)
sti
enter
push
out
mov
cmp
push
jmp
lods
and
xor
add
inc
test
div
mov
sbb
test
cmp
mov
bound
pop
xchg
cmps
in
sbb
lds
mov
stc
je
ja
mov
cs
cmp
and
dec
bnd
out
push
cmps
(bad)
cmp
lahf
jp
xlat
jecxz
mov
imul
and
sub
pusha
mov
push
push
push
push
movs
loope
inc
and
jge
(bad)
push
push
test
gs
mov
mov
jl
sbb
xor
and
cmps
ret
xor
xor
dec
xor
inc
out
addr16
inc
je
sbb
jl
pushf
out
cmp
dec
out
lahf
push
mov
gs
sbb
(bad)
adc
(bad)
aad
popf
lock
dec
(bad)
in
push
out
xor
and
push
idiv
repz
lock
ja
pop
push
adc
and
das
not
lea
jl
ins
lea
iret
in
jo
outs
test
retf
fst
ret
or
rcl
ins
mov
xlat
mov
push
scas
or
jl
mov
mov
mov
fisubr
add
popf
retf
dec
movs
sahf
adc
or
cli
add
lods
xchg
mov
jns
fild
mov
xor
mov
repnz
test
jl
movs
fcomp
mov
jmp
and
inc
inc
mov
jbe
mov
pop
mov
and
xor
and
jle
call
push
cmp
call
rol
sbb
sbb
pop
ret
sub
mov
mov
sahf
imul
int
(bad)
shr
sbb
adc
add
push
fisub
retf
(bad)
out
shr
push
sub
in
popf
cmp
aad
outs
jb
int
push
rcr
mov
or
sub
pop
xor
dec
add
push
xchg
mov
push
mov
je
cmps
daa
(bad)
shr
loope
es
loop
sti
inc
xor
pop
xor
sbb
or
mov
push
in
mov
int
rcl
cmp
out
push
loop
mov
stos
and
aas
mov
stos
repz
pop
push
xlat
pop
or
icebp
add
in
lock
addr16
jbe
mov
jns
ins
bound
mul
xchg
xchg
xor
cdq
rcr
(bad)
mov
mov
adc
into
ss
js
inc
jecxz
mov
inc
mov
cmp
sbb
in
mov
(bad)
sbb
sbb
add
cli
pusha
pushf
in
pop
(bad)
out
sub
adc
movs
retf
and
dec
sub
mov
or
xchg
(bad)
and
shl
xchg
xchg
call
ds
lods
rcr
cli
clc
jbe
mov
in
jge
call
mov
xor
ret
lock
or
cld
mov
mov
fild
mov
sub
mov
(bad)
dec
mov
jp
add
mov
cmp
xor
jge
data16
out
into
sub
mov
xchg
icebp
fidivr
pusha
xchg
push
pop
pop
add
js
cmps
mov
add
ss
mov
or
outs
add
push
ret
adc
lods
inc
(bad)
mov
xlat
xchg
js
jecxz
sub
cmps
push
xchg
hlt
push
mov
jns
scas
fs
mov
repnz
clc
ss
lahf
cdq
pop
das
push
sbb
arpl
pop
dec
fwait
ss
retf
mov
push
push
sbb
inc
repnz
stos
jmp
dec
das
xor
mov
loope
ins
shl
(bad)
fnsave
sub
mov
pop
fistp
xchg
mov
jecxz
loop
out
sub
mov
pop
fsub
icebp
movs
mov
mov
(bad)
sbb
mov
mov
jo
leave
fs
mov
add
jae
mov
push
cs
mov
add
les
sub
icebp
ss
sbb
add
push
leave
or
in
scas
imul
out
shl
in
add
imul
movs
mov
inc
mov
xchg
push
dec
and
cmc
mov
add
xchg
es
jnp
addr16
xchg
cs
pushf
pop
div
xor
aas
call
jno
jle
inc
inc
outs
xor
jmp
pop
inc
outs
jecxz
repz
icebp
mov
dec
sahf
leave
pop
jl
or
mov
movs
add
jg
in
into
mov
js
aad
xlat
jns
es
or
mov
clc
sub
(bad)
push
sub
sub
fist
mov
das
jns
sub
stos
cli
out
mov
cmps
pop
cld
into
or
push
xchg
inc
lods
into
outs
out
and
jle
popf
sbb
jg
mov
loopne
xor
(bad)
(bad)
xchg
jns
scas
jl
cmc
outs
xlat
xchg
inc
jbe
jne
stos
xchg
arpl
jecxz
in
push
sahf
pop
pop
dec
jmp
push
cld
out
or
jb
fs
sub
mov
or
fbstp
and
cmp
popf
into
jg
cmc
add
mov
int3
neg
icebp
or
into
rcr
es
cwde
(bad)
aas
mov
xchg
mov
cmp
std
stos
cmc
js
inc
mov
jo
mov
mov
jl
shl
outs
sti
and
cmp
xor
dec
(bad)
lods
(bad)
pop
cmc
hlt
fs
repz
aas
mov
or
out
stc
xchg
fisttp
add
push
xlat
(bad)
dec
mov
and
cmp
or
aas
cwde
pop
arpl
repnz
arpl
cmc
adc
shr
xchg
in
mov
lods
and
pop
mov
xor
in
xlat
xor
sbb
rol
push
pushf
mov
in
(bad)
and
dec
and
test
mov
mov
inc
out
pop
stos
sti
jbe
repnz
aad
mov
loop
in
mov
cmps
bound
out
adc
inc
cwde
popf
xchg
imul
pop
inc
pop
mov
pop
pop
inc
aad
mov
push
cmp
xchg
sub
xchg
mov
pusha
icebp
mov
stos
and
in
sbb
jo
(bad)
(bad)
jmp
sub
mov
(bad)
fisubr
mov
aad
enter
sub
pop
fnsave
outs
inc
push
mov
frstor
daa
push
mov
mov
xor
inc
mov
sbb
add
inc
mov
cld
adc
sbb
iret
neg
fadd
jns
out
mov
jg
inc
jp
call
mov
dec
and
mov
fld
mov
repnz
add
fcmovu
xor
cli
jle
mov
cld
pop
xchg
test
sub
jne
xchg
or
daa
adc
into
mul
push
sub
xchg
mov
out
jne
sbb
push
pop
pop
mov
pop
mov
inc
cwde
repnz
fs
f2xm1
das
dec
fucom
mov
call
psllq
dec
push
rcl
pop
or
movs
mov
loop
rol
xor
push
sar
scas
jge
popf
and
imul
adc
fs
clc
add
push
mov
stc
add
xor
cmc
xchg
adc
adc
cmc
movs
or
cmp
xchg
arpl
iret
sbb
sbb
or
icebp
pop
out
pushf
loopne
inc
(bad)
out
outs
adc
mov
js
repnz
add
sub
cld
mov
mov
mov
cs
or
sub
daa
dec
daa
sub
and
or
sbb
xor
dec
mov
dec
scas
pop
jp
mov
jno
sbb
push
lahf
popf
out
adc
ror
imul
sub
not
cmp
sub
mov
jge
adc
adc
mov
out
or
dec
cmp
data16
sbb
pop
ja
daa
aad
cmps
xchg
addr16
sub
fidiv
bswap
(bad)
and
and
addr16
mov
mov
ds
lods
fsub
sbb
sub
xor
ret
or
and
in
in
xchg
fld
push
xchg
add
dec
mov
cdq
lds
cmp
xchg
inc
pusha
mov
mov
rcr
push
mov
scas
dec
(bad)
ds
mov
mov
out
lods
leave
sar
and
lea
test
xchg
mov
pop
popf
mov
sbb
fisub
xor
repnz
sub
nop
pop
mov
test
ret
je
pop
das
add
outs
and
mov
sahf
outs
mov
scas
jnp
mov
xor
out
pop
pop
cdq
xor
nop
dec
push
fnstcw
pop
pop
mov
(bad)
xor
icebp
test
mov
or
push
out
(bad)
mov
jbe
jno
retf
mov
add
ins
(bad)
mov
arpl
xor
and
(bad)
mov
gs
pop
aaa
shr
fstp
outs
add
mov
pop
iret
ss
int
pop
arpl
scas
or
in
(bad)
add
dec
fisubr
or
add
mov
ja
push
int3
nop
inc
(bad)
iret
stos
mov
outs
sar
jns
pop
(bad)
sbb
and
outs
mov
cmp
ret
inc
inc
call
nop
cmps
in
xchg
(bad)
loop
test
sar
sub
shr
lahf
dec
mov
sbb
add
mov
movs
cmps
jns
pop
cmc
shl
nop
mov
jns
popf
jns
data16
scas
popf
add
and
jae
aad
enter
fs
fucomip
cmp
jmp
xchg
js
psadbw
xor
scas
adc
adc
xor
popf
inc
out
pop
add
mov
lahf
das
add
mov
ret
inc
inc
mov
in
cmc
sbb
fist
vmread
loop
inc
cli
clc
push
and
scas
add
bound
enter
push
lahf
fsubr
and
sub
call
imul
or
inc
xchg
stc
xor
mov
jmp
cmps
mov
pop
cmp
iret
push
mov
or
push
outs
lea
mov
mov
les
inc
mov
test
popfw
sub
stos
push
dec
fisub
pusha
mov
mov
movs
xor
dec
and
mov
pop
sub
xchg
shr
enter
mov
mov
mov
icebp
sahf
retf
popa
push
push
out
loope
div
mov
imul
pop
icebp
lea
hlt
mov
add
movs
pop
pusha
sub
add
shr
cmp
mov
sbb
adc
mov
nop
aaa
jge
ss
(bad)
imul
clc
cmp
push
sti
add
mov
xchg
sbb
jae
xchg
(bad)
aad
inc
jno
fwait
jae
lds
xchg
mov
xor
dec
ret
rol
add
jmp
jmp
and
mov
dec
jle
aas
jle
aas
popf
sbb
je
mov
mov
mov
xlat
inc
in
repz
mov
or
shr
shl
imul
hlt
imul
cld
sbb
cmps
pushf
aas
dec
fidivr
imul
or
popf
call
xchg
stos
xor
add
cmp
and
shl
rcr
and
pop
and
(bad)
jle
add
xchg
bound
inc
push
push
es
mov
cmp
mov
(bad)
or
std
xchg
dec
js
loopne
scas
call
mov
or
xchg
cli
jecxz
xchg
dec
mov
push
mov
mov
loope
in
adc
in
test
loope
out
cmp
dec
inc
je
out
sbb
or
outs
sbb
jp
xor
sahf
sbb
rcr
test
sbb
inc
cld
imul
sbb
popf
(bad)
movs
fld
outs
cld
lods
stos
adc
aaa
out
xor
fwait
enter
dec
inc
jg
and
cmp
test
rol
ret
mov
(bad)
fcom
out
out
ja
sub
jmp
dec
je
jge
pop
push
aaa
xor
rcr
push
mov
es
pop
push
lods
lods
or
dec
enter
retf
mov
sbb
xchg
rcl
xor
or
pop
aad
xor
jg
xchg
push
push
fst
and
in
into
leave
sbb
push
add
ss
call
arpl
daa
push
out
mov
push
add
je
loopne
aaa
stos
fiadd
mov
xchg
out
retf
scas
sub
movs
and
popa
stos
cmps
mov
fiadd
fistp
test
test
arpl
push
jns
loop
add
push
jnp
lds
ja
lds
fsub
pusha
scas
imul
push
mov
inc
in
jae
mov
sub
shl
mov
or
jae
shr
(bad)
jnp
mov
cli
ds
add
shl
fldenv
xor
or
fdiv
retf
mov
ror
sub
ret
mov
pushf
stos
push
adc
mov
loop
retf
push
shl
test
ret
and
xlat
sahf
jno
xchg
add
arpl
add
inc
cmp
adc
xor
lahf
mov
pop
mov
loope
and
jo
and
mov
scas
mov
cmc
or
or
push
add
mov
inc
pop
jbe
and
mul
out
mov
sbb
jmp
sbb
movs
leave
lock
jecxz
inc
outs
sub
dec
push
dec
ds
pop
lods
inc
cwde
je
dec
push
out
adc
lds
inc
mov
or
or
adc
jb
push
mov
or
mul
inc
sub
push
rol
(bad)
scas
pop
popa
jg
jbe
in
jb
lock
aas
mov
(bad)
jmp
mov
in
push
xor
xchg
out
xchg
cwde
nop
(bad)
dec
push
sahf
jo
mov
xchg
stos
mov
popf
loopne
fcomi
std
fs
pop
and
cmp
push
mov
shl
xor
scas
mov
cmp
pop
mov
mov
call
cmps
lahf
jg
call
mov
mov
dec
cmp
shl
movs
jge
fisub
gs
rol
add
xor
popf
test
xchg
adc
std
shl
add
shl
xor
in
xor
jp
push
shl
test
sub
call
fstp
adc
or
inc
mov
push
test
mov
push
mov
add
push
inc
pop
or
dec
and
lea
sbb
(bad)
imul
inc
ja
mov
jg
outs
loop
(bad)
fcomp
mov
movs
mov
stos
xor
xor
pop
push
nop
retf
sbb
jbe
cmp
jmp
push
cmp
stc
push
(bad)
loope
clc
push
ret
movs
and
cmps
iret
scas
orps
lods
out
sub
fwait
mov
mov
shr
shr
mov
bound
mov
mov
mov
mov
repz
sbb
push
icebp
mov
push
inc
sub
push
push
ss
cmp
frstor
mov
nop
mov
stc
test
or
outs
fcomp
gs
add
call
xor
mov
jl
adc
into
xor
enter
(bad)
(bad)
test
adc
cmc
leave
adc
and
aad
jle
fsub
out
xor
sub
(bad)
ins
lds
or
jl
dec
mov
add
clc
cli
inc
in
jns
xor
inc
lock
arpl
mov
jge
xchg
test
jge
mov
push
cmp
outs
daa
popa
dec
mov
enter
sub
xor
test
vpunpckhqdq
and
iret
xchg
fst
scas
jl
cmps
xchg
enter
add
push
cmps
mov
cli
cmps
sti
mov
ffree
ss
jge
popf
aam
fdivr
push
mov
add
pop
loope
dec
jnp
cmc
add
test
inc
add
mov
js
ss
lahf
xchg
inc
sti
out
rcl
fsubr
(bad)
test
out
(bad)
lea
jo
loope
mov
add
cli
les
mov
cmps
dec
clc
sub
push
lods
les
jno
cmp
push
adc
cld
sub
in
fwait
cli
sbb
cmps
rcl
jmp
cmp
or
fcom
mov
sub
int
jo
movs
mov
rcr
sub
sbb
jp
inc
test
out
sbb
addr16
push
sahf
inc
sub
pop
int3
adc
mov
ror
sbb
pop
adc
and
xchg
lahf
pop
sub
jmp
xchg
and
loop
cmp
pushf
jecxz
sbb
push
xchg
sbb
mov
ret
cld
stos
adc
xchg
jne
sub
pop
mov
inc
call
stc
lock
pushf
ffreep
int3
js
jl
fs
mov
test
sbb
sub
scas
test
dec
mov
loope
dec
(bad)
cwde
mov
or
pop
outs
(bad)
mov
sbb
push
jae
or
inc
aaa
fwait
add
daa
(bad)
int
pop
outs
das
or
cmp
std
xlat
fcomp
jp
in
call
stc
xor
add
retf
aas
icebp
add
cmp
sahf
movs
xor
pop
sbb
inc
test
xor
mov
jbe
sub
nop
push
(bad)
out
gs
cwde
jle
ror
dec
xchg
leave
hlt
(bad)
stos
rcr
stc
outs
mov
or
cwde
inc
pop
xchg
repnz
jle
adc
xchg
xchg
ret
adc
cmp
mov
addr16
je
cs
inc
jbe
mov
or
push
jle
mov
js
leave
pop
sti
adc
sub
jnp
inc
xor
mov
adc
into
shl
sub
mov
in
or
repnz
or
adc
push
sub
push
dec
into
pop
inc
dec
jp
enter
xor
mov
cmp
mov
sbb
shr
rcl
add
pop
jno
cmp
mov
xor
shr
pop
mov
shl
cmps
out
inc
cmc
adc
xor
outs
mov
nop
sub
pop
fs
imul
mov
mov
jg
test
das
dec
mov
and
sbb
pusha
repz
inc
hlt
les
or
or
je
fbld
xchg
or
pop
sub
in
jg
push
push
pop
xor
inc
adc
sub
fsubrp
sub
xchg
mov
jae
int
sbb
sbb
dec
pop
xchg
mov
cmps
xor
sahf
test
dec
in
mov
adc
sti
es
out
fcmovbe
inc
add
and
add
mov
sbb
adc
aam
cld
xor
push
xchg
push
add
xor
pop
pop
jp
jns
imul
or
fcom
mov
fucomp
mov
jle
pop
out
push
pop
xchg
adc
test
stos
or
cli
jl
pusha
cmc
out
dec
jb
js
fs
or
push
addr16
iret
jge
je
add
push
pop
xchg
cmp
clc
mov
mov
dec
pop
fcom
(bad)
neg
xor
sbb
sub
clc
out
fsub
mov
test
mov
sbb
es
lods
add
and
or
cld
push
cmps
cmps
jno
popf
xchg
imul
call
xor
push
in
jmp
sahf
xchg
aad
adc
inc
aam
stos
mov
mov
clc
lock
xor
lea
adc
pop
xchg
mov
pop
cmc
dec
and
neg
cmp
repz
adc
inc
cmp
mov
shl
fsub
imul
cs
inc
pop
xchg
xchg
mov
lahf
push
mov
popf
xchg
scas
pop
test
sub
push
xchg
retf
les
mov
dec
mov
cmc
inc
sti
mov
popf
pop
pop
mov
aaa
cmc
test
sbb
pop
mov
retf
js
push
push
outs
repnz
pop
and
mov
in
je
inc
push
xor
rcl
std
call
mov
lock
dec
sbb
loopne
or
pop
jle
into
adc
fiadd
leave
dec
stc
in
jecxz
mov
fnstcw
mov
mov
(bad)
frstor
mov
mov
in
in
imul
xor
or
test
test
mov
(bad)
ins
xchg
mov
pop
mov
pop
sti
aas
int3
and
sbb
cli
popa
push
dec
pop
cmp
loopne
dec
es
dec
push
mov
daa
stos
stos
cmc
mov
les
int
lods
add
cdq
into
sbb
test
addr16
sub
push
adc
dec
or
xor
or
lds
and
mov
cmp
lock
mov
inc
int3
adc
sbb
and
retf
mov
rcl
xor
mov
jle
sti
aaa
sbb
(bad)
stc
inc
jo
cmovo
repz
shl
jmp
das
int3
mov
cmp
xchg
out
div
or
sub
mov
xchg
sbb
dec
iret
in
mov
adc
or
lods
int3
adc
jle
arpl
push
dec
xlat
mov
nop
in
nop
arpl
gs
push
sbb
mov
mov
cmc
mov
jo
popf
(bad)
xchg
or
inc
sbb
lock
or
fwait
(bad)
mov
imul
and
or
push
stos
(bad)
fcomip
sbb
inc
xor
cmp
(bad)
out
(bad)
mul
jns
popf
rcl
retf
out
mov
mov
or
loopne
call
xor
xor
or
pop
mov
loopne
mov
scas
mov
lds
shl
repz
call
sbb
nop
sbb
and
xchg
push
jmp
and
scas
mov
pop
dec
stc
aaa
xor
movs
sbb
xlat
sbb
ins
mov
out
or
daa
add
mov
ret
iret
xchg
mov
dec
jo
fwait
ss
imul
add
scas
push
push
daa
(bad)
pop
shl
mov
out
ins
aad
pop
mov
in
clc
add
sbb
fsub
or
dec
jmp
ins
popa
cmp
out
xor
lds
out
cmc
inc
mov
and
and
inc
sbb
ror
xor
ret
mov
fisttp
jge
jnp
lea
push
icebp
jns
data16
stos
sbb
test
leave
jle
and
or
ret
mov
inc
(bad)
xor
lahf
leave
adc
clc
inc
sti
mov
fcom
(bad)
(bad)
mov
or
scas
inc
repnz
or
std
push
sahf
sbb
in
push
add
xchg
xchg
dec
dec
adc
add
sar
jmp
jmp
imul
scas
mov
out
test
mov
pop
add
xor
daa
pusha
out
loop
retf
daa
lds
dec
mov
xchg
cwde
int3
ret
xchg
push
lods
push
scas
hlt
repz
cmp
jns
cdq
not
dec
ret
sbb
pop
xchg
or
xchg
jp
or
call
mov
cmp
add
pop
and
mov
inc
lds
mov
push
rcr
cli
pop
pop
out
mov
push
jg
and
xor
xor
cwde
pop
hlt
or
lods
push
cli
data16
movs
mov
jle
mov
arpl
mov
adc
lahf
stc
xchg
rcl
shl
mov
mov
inc
add
jge
sub
dec
scas
or
ja
sub
clc
call
mov
bound
adc
pushf
or
or
xlat
add
push
cmp
pop
xchg
or
mov
test
fidivr
movs
mov
adc
cwde
lea
loopne
in
jbe
mov
js
and
sub
sbb
push
push
mov
mov
inc
push
cli
xchg
mov
xchg
test
cli
sbb
jnp
rcl
and
ret
inc
icebp
adc
fild
fsub
scas
or
call
std
or
in
push
(bad)
push
cwde
push
mov
mov
out
sub
and
lock
lods
mov
push
pop
out
dec
cmp
dec
jb
mov
fstp
and
adc
jae
mov
cmps
pop
lds
out
sub
adc
leave
in
(bad)
cmp
xor
or
nop
jg
rcr
jecxz
pop
cmp
jb
inc
inc
jae
mov
and
mov
jnp
cmc
div
fstp
ins
adc
jns
test
and
dec
and
push
push
lock
push
dec
xchg
jnp
das
cmp
inc
(bad)
sub
je
cmps
add
imul
cmp
add
test
mov
pop
pop
add
outs
cmp
inc
or
cmp
mov
movs
add
pusha
push
cmps
jl
mov
mov
fs
popf
xchg
stc
movs
push
retf
nop
jae
leave
ds
xchg
jns
repz
fwait
scas
lds
imul
popa
dec
out
mov
push
dec
test
cld
sar
js
mov
(bad)
cmp
aaa
outs
push
ss
mov
pop
outs
sahf
push
mov
cmp
cmp
imul
or
cs
fs
(bad)
(bad)
dec
cmc
adc
ins
xlat
outs
mov
fs
pop
daa
sbb
jnp
jb
aaa
or
lock
mov
add
pop
mov
sub
jae
xor
mov
mov
jmp
loope
fld
fs
popf
mov
stos
lock
pop
(bad)
push
stos
dec
push
sbb
sbb
or
les
mov
inc
dec
in
les
cs
popf
adc
xor
int3
cli
inc
clc
sbb
push
and
dec
stc
jns
mov
stos
fisubr
retf
add
mov
fst
pushf
mov
cmps
jge
cmp
cwde
addr16
xor
pop
inc
pop
lahf
push
cmovno
push
rcr
dec
dec
jp
inc
pop
inc
out
aad
fcomp
jb
jae
pop
cmp
mov
popa
data16
addr16
xor
(bad)
jmp
test
repz
lods
mov
cli
sbb
dec
sub
test
sub
fsubr
push
icebp
in
jl
in
into
lock
test
push
mov
xchg
ret
pushf
and
ins
cmc
lds
div
jbe
xchg
es
xchg
xor
div
sar
ficom
pop
sahf
je
jae
sbb
bound
xchg
fisttp
data16
cwde
sbb
sbb
ret
sahf
ins
pop
les
inc
stos
push
pop
outs
xor
inc
jmp
adc
fwait
iret
xchg
pop
ror
mov
inc
loopne
(bad)
jae
dec
mov
push
or
std
cmp
fidiv
outs
xchg
adc
repnz
popa
fld
inc
stos
jb
xchg
cmp
push
jns
in
pop
push
jecxz
ffreep
cmps
push
cmp
pop
xchg
int3
in
mov
adc
pop
fwait
movs
mov
xchg
cs
les
out
imul
ins
jne
fwait
mov
mov
lsl
and
or
call
jns
mov
out
jne
mov
movs
inc
sub
(bad)
movs
into
adc
scas
scas
daa
pop
iret
cmps
and
inc
sub
sbb
inc
and
out
ins
aam
cli
mov
or
xor
rol
and
jmp
fimul
xor
mov
mov
stc
mov
jp
inc
push
sub
fwait
std
jecxz
inc
sbb
push
into
fsubr
into
jbe
mov
push
sti
add
sub
les
lock
mov
ds
das
inc
fnstcw
mov
sub
sub
leave
and
pop
sar
mov
sub
xchg
pushf
cdq
xchg
mov
xor
in
jno
add
and
and
mov
fdivr
push
out
div
or
popa
scas
xor
pop
ja
les
and
cwde
lds
outs
movs
std
in
int
in
sub
das
sbb
add
dec
sub
pop
cmp
xor
jbe
and
jnp
int
lods
test
jne
daa
daa
mov
ins
dec
push
xchg
add
mov
shl
dec
jmp
jge
mov
or
push
dec
dec
and
inc
jg
inc
(bad)
pop
in
cmps
call
and
scas
out
fisubr
push
das
pop
add
sub
cmp
mov
dec
mov
or
xchg
jl
pop
retf
mov
data16
ret
mov
sub
test
adc
enter
push
aad
mov
mov
cmp
mov
loop
dec
bound
push
dec
test
repnz
(bad)
mov
sbb
or
mov
cdq
or
xor
push
xchg
(bad)
xchg
sbb
cmp
cli
sub
js
adc
jp
dec
mov
daa
adc
mov
push
test
aad
call
int
lods
test
jnp
cs
fbstp
xchg
scas
jp
loopne
add
dec
push
pop
push
xor
dec
add
mov
xor
push
call
cld
adc
pop
sub
jg
sahf
outs
add
sahf
or
shl
pop
inc
xor
cwde
pop
adc
pusha
pushf
mov
data16
bound
fcmovu
push
retf
aam
mov
or
or
ins
inc
jmp
daa
or
xor
jbe
fld
mov
cs
mov
push
or
es
xchg
les
jmp
mov
test
xor
mov
pop
fld
retf
in
dec
(bad)
adc
lahf
inc
mov
push
stc
and
fsubp
push
les
aaa
lahf
inc
stos
ret
mov
adc
push
(bad)
sbb
xchg
adc
adc
(bad)
pop
sbb
adc
jge
xor
xchg
(bad)
ja
jmp
dec
inc
inc
gs
cmp
dec
repz
mov
jnp
pop
mov
fwait
pop
call
sbb
ds
inc
(bad)
cli
xchg
push
push
mov
in
pop
fild
(bad)
pop
pop
hlt
cdq
or
not
jmp
sbb
cmp
mov
int3
dec
dec
scas
and
push
into
sub
push
jecxz
shl
sbb
std
xor
cmp
retf
(bad)
cmp
test
pop
push
fistp
jno
sub
arpl
push
iret
push
jns
adc
daa
add
mov
addr16
popf
push
add
aad
nop
(bad)
mov
xchg
dec
inc
push
ins
and
mov
mov
sub
ror
or
push
inc
cli
inc
xchg
sbb
outs
dec
fild
dec
adc
mov
sub
sub
mov
je
(bad)
icebp
(bad)
mov
rcl
outs
rol
and
add
xor
add
xchg
pop
retf
les
mov
rcr
pusha
jl
sub
lods
loop
mov
cwde
push
stos
stos
or
cmp
cs
sbb
mov
jmp
and
pop
pop
or
bound
push
xor
cmp
frstor
mov
ror
push
es
cld
inc
pop
mov
retf
mov
xlat
aam
sub
jo
xlat
(bad)
mov
jae
int
push
inc
sbb
and
outs
ret
in
jbe
add
pop
out
fwait
ins
mov
xchg
mov
rol
into
sbb
mov
mov
das
jmp
xchg
sbb
xor
dec
mov
sbb
ficom
mov
push
push
mov
add
retf
stos
or
and
clc
scas
(bad)
xor
daa
mov
loopne
ret
loopne
out
add
les
dec
aam
addr16
sbb
pop
in
adc
xchg
xchg
ss
call
cmp
push
retf
test
xchg
(bad)
ret
dec
jmp
scas
ret
mov
lock
jg
dec
mov
ror
(bad)
in
mov
hlt
mov
pop
ins
adc
in
and
js
fist
popf
cmp
push
dec
mov
inc
es
movs
loope
stos
clc
adc
lods
push
mov
jecxz
mov
fadd
out
lods
inc
sbb
pop
shl
fbld
stos
dec
xchg
adc
inc
inc
fld
ss
inc
xchg
sar
pop
mov
icebp
enter
cmps
pop
call
or
lock
add
xchg
pop
cwde
ss
das
sbb
xchg
aad
into
adc
cwde
push
push
sub
mov
and
test
scas
(bad)
aam
data16
aaa
pop
lahf
in
ins
(bad)
into
stos
lods
mov
or
js
and
scas
fist
mov
dec
icebp
jl
int
addr16
mov
pop
into
jne
sbb
jl
jle
pop
and
stc
or
outs
fiadd
inc
inc
cmp
out
sahf
mov
cmc
or
cmp
ins
push
loopne
xor
fs
(bad)
push
mov
cs
cmp
cmc
dec
cli
push
xor
popa
and
fist
clc
loop
aas
adc
cmp
sti
shl
sar
mov
or
mov
add
call
data16
mov
sub
movs
fdiv
mov
push
jle
mov
jb
push
stos
xchg
adc
jmp
pusha
mov
mov
xchg
test
adc
cld
daa
fistp
jmp
sub
jmp
mov
cld
mov
pusha
jne
inc
xor
cmp
mov
jns
sahf
mov
jp
mov
ret
adc
xor
retf
retf
outs
and
xlat
sub
ret
cmc
adc
fidiv
ss
or
retf
gs
add
retf
shl
mov
loope
mov
adc
test
cmps
gs
lock
int
in
mov
ss
add
movs
add
push
or
add
mov
scas
outs
addr16
in
push
sub
mov
pop
mov
lds
mov
cmp
mov
into
int
addr16
jno
aam
pop
jns
push
arpl
or
rcl
or
in
stos
cwde
fdivr
mov
mov
push
pushf
xlat
repz
pushf
stos
movntps
pop
adc
cmp
lahf
cs
loope
jnp
(bad)
in
lods
jo
loop
cmp
shl
(bad)
cld
sub
pop
xchg
fdivr
sbb
mov
mov
mov
les
sub
imul
mov
sbb
mov
aam
mov
mov
rcl
dec
mov
retf
or
jecxz
mov
pop
icebp
fimul
es
mov
mov
sub
xchg
addr16
xchg
icebp
jmp
ficom
inc
mov
call
test
es
push
mov
stos
loope
leave
outs
sbb
scas
jae
mov
mov
jp
scas
add
cli
or
mov
loopne
mov
add
xor
pop
ins
test
sbb
dec
jmp
mov
scas
fidiv
(bad)
mov
fsubp
xor
stos
sbb
int3
jns
fdivr
stos
pop
inc
into
aaa
icebp
and
jle
adc
push
leave
retf
jmp
fdiv
fistp
pop
hlt
shl
and
fcom
rcr
and
cmp
js
(bad)
movs
pop
adc
push
pop
inc
jmp
inc
js
sbb
xchg
cmp
dec
push
sahf
in
sti
loope
mov
loopne
add
jo
push
or
and
cdq
scas
inc
aam
jns
adc
sub
aad
pop
mov
leave
mov
or
adc
cmp
xchg
mov
and
xor
out
cmc
xchg
ja
and
ins
cmp
in
jmp
sbb
nop
mov
push
das
cs
lods
pop
popf
retf
fld
jp
add
and
retf
imul
ss
pop
mov
fs
dec
sti
inc
xor
into
fbstp
dec
outs
outs
xchg
inc
mov
sub
mov
das
add
sbb
add
mov
loope
xchg
in
outs
xchg
add
ja
sbb
ins
mov
xlat
(bad)
pop
hlt
and
leave
sub
retf
dec
aam
enter
pop
mov
aas
aad
aad
and
jns
and
and
in
inc
and
push
aam
leave
jne
nop
pop
adc
stc
clc
iret
arpl
imul
dec
cli
cld
pop
in
icebp
dec
cmp
inc
fnstsw
imul
dec
pop
pushf
imul
or
mov
jp
mov
ret
stos
xor
jo
push
outs
jg
sub
adc
fiadd
ror
test
fld
adc
daa
pop
test
mov
add
dec
jl
jne
jns
in
and
xchg
jbe
rol
leave
rol
adc
xchg
cmp
(bad)
ror
cmc
or
inc
call
(bad)
xchg
mov
popf
out
pop
mov
scas
dec
dec
int3
sub
xchg
retf
pop
lea
mov
cmp
int3
mov
cmps
fsub
pop
pop
popa
mov
push
xlat
test
je
gs
das
(bad)
jg
jo
mov
hlt
or
int
mov
aam
daa
push
sbb
movs
out
repnz
(bad)
mov
inc
dec
dec
jnp
pop
xchg
xchg
inc
rcl
mov
test
lods
inc
push
cld
push
idiv
popf
sbb
or
icebp
jbe
bound
lods
mov
lahf
or
jns
mov
bound
pop
mov
jge
mov
sub
pop
cmp
ror
ficomp
and
inc
add
sbb
push
(bad)
push
addr16
inc
lahf
fdiv
jae
int3
lahf
fst
in
xor
pop
lahf
cmc
push
pop
ja
dec
repnz
jne
add
add
sbb
cmp
scas
les
retf
shr
inc
jnp
into
xlat
dec
xchg
sub
retf
ss
rcl
popf
outs
dec
in
sub
inc
(bad)
cmps
push
ja
shr
mov
pop
imul
cmps
pop
jnp
cs
movs
cmps
inc
mov
stc
push
into
xor
js
shr
icebp
and
shl
jbe
add
xor
push
lock
sbb
popf
jl
arpl
shr
push
jp
jb
(bad)
add
(bad)
pop
das
(bad)
cmp
xor
idiv
mov
push
jo
aas
lea
cli
fsubrp
and
add
cwde
jbe
jle
inc
xor
ret
aad
sbb
mov
aaa
push
mov
xchg
mov
test
sbb
ins
sbb
jno
call
adc
xor
xchg
ins
xor
ss
mov
pop
int
in
jne
mov
or
mov
sbb
rcl
or
outs
lea
data16
cmc
jae
movs
push
imul
leave
hlt
push
add
jno
shl
push
cmp
leave
and
sahf
and
lock
addr16
outs
pmaxub
push
inc
adc
jne
repz
arpl
mov
push
xor
mov
pushf
cmp
inc
stos
inc
fucomip
call
jnp
add
xor
das
mov
cmps
(bad)
out
je
add
lea
sti
dec
cmp
test
repz
jo
in
push
les
sbb
hlt
mov
xchg
fcomp
lods
dec
jp
mov
mov
mov
(bad)
in
fld
add
fbld
xchg
jns
fdivr
cmp
push
push
pop
mov
pop
ret
sbb
rol
sbb
xchg
mov
jne
mov
sub
and
add
lock
enter
mov
mov
inc
ds
retf
add
arpl
test
lahf
bound
out
cmp
int
jg
mov
sahf
pop
ins
daa
aam
in
sub
push
std
or
dec
push
(bad)
dec
loopne
je
pop
push
and
rol
xor
(bad)
push
lds
and
out
adc
sar
daa
cmps
push
xor
dec
fwait
loop
jno
pop
out
stc
add
mov
enter
jo
push
imul
ja
inc
cld
test
and
adc
addr16
fsubr
out
pop
fisttp
retf
fidivr
inc
mov
iret
add
jp
leave
xchg
inc
lds
or
xchg
jnp
pop
retf
xchg
cdq
not
inc
jmp
cmp
push
jge
test
cdq
xor
inc
addr16
push
push
and
pushf
loope
mov
add
fadd
xor
pusha
popf
push
loop
out
stos
fcomp
push
xor
fs
xchg
add
gs
mov
leave
inc
cwde
cmp
mov
push
stos
fild
repnz
xor
inc
push
and
and
dec
ret
in
jae
ja
outs
cmps
sub
sub
sti
push
gs
rcr
inc
and
mov
inc
mov
mov
sbb
sbb
clc
mov
cmp
mov
call
movs
stos
and
dec
out
scas
fldcw
fwait
cmp
jne
fadd
xor
je
call
and
dec
lock
mov
das
xor
out
add
pop
or
and
push
popf
pop
cmp
dec
jecxz
pop
clc
lea
jp
push
cld
data16
movs
xor
lock
scas
jg
and
aas
push
sub
adc
cmp
pop
sahf
mov
fst
push
jo
sub
pop
cmps
push
xor
add
push
es
lods
add
ret
xor
pop
ins
test
xchg
sub
fnsave
out
(bad)
xchg
push
xor
mov
in
(bad)
loope
or
cmp
in
cdq
xchg
mov
icebp
dec
adc
lahf
int
(bad)
mul
lods
xchg
jo
jno
mov
jle
mov
xchg
mov
cdq
shr
test
movs
pop
xchg
jmp
cdq
push
in
add
mov
push
imul
sbb
pop
test
xchg
jo
jno
enter
jb
je
push
dec
sti
idiv
shl
mov
clc
dec
mov
and
and
int
(bad)
fdivr
adc
add
or
pop
xchg
jmp
inc
jle
add
or
test
mov
test
in
(bad)
fmulp
dec
ins
cmc
push
push
addr16
cld
dec
or
test
into
aad
out
jecxz
pop
cmp
push
mov
(bad)
mov
adc
dec
sbb
dec
sub
mov
adc
mov
or
and
jne
loope
lahf
js
adc
icebp
imul
xor
outs
sbb
xchg
and
mov
cmp
sar
lock
push
fadd
mov
sbb
cmp
or
lds
add
call
in
add
ret
sbb
cmp
mov
pop
sar
mov
mov
nop
push
fwait
pop
cmc
push
lahf
push
imul
ins
idiv
mov
push
jmp
jmp
ja
mov
or
mov
add
imul
aas
pop
inc
cli
lods
in
cmps
pop
pop
out
iret
jmp
mov
hlt
xor
xchg
sub
cld
movs
mov
sub
xchg
lahf
hlt
add
lds
xor
iret
jns
jg
loop
mov
scas
rcl
jmp
sub
test
loope
sbb
or
jmp
aas
add
sub
push
xor
arpl
jo
outs
xor
pop
inc
pop
mov
push
xchg
add
cmc
sbb
fmul
int
sbb
push
pop
jl
jno
jle
sub
push
pop
aad
aam
xchg
adc
cld
sbb
xchg
adc
fidivr
bound
ret
mov
sbb
cs
inc
add
mov
sbb
loop
js
or
pop
inc
fisubr
bound
inc
inc
scas
rol
sbb
cmps
jp
dec
or
xor
daa
out
inc
pop
jg
rcr
push
sbb
ret
xchg
and
icebp
sar
adc
out
outs
pop
aad
mov
inc
repnz
or
add
into
ins
ret
pop
rol
test
mov
sbb
mov
shr
cmp
jge
mov
cdq
ret
test
jp
inc
or
shl
and
loop
ins
inc
mov
dec
xor
mov
adc
cmp
aam
push
cmp
inc
test
jmp
mov
test
ret
or
(bad)
adc
leave
dec
icebp
xchg
pop
dec
ins
or
fld
cld
jg
clc
add
cdq
movs
sbb
push
lods
adc
cmp
and
bnd
mov
cmc
mov
or
cli
outs
into
mov
mov
cmps
aas
iret
div
mov
mov
out
sub
xchg
sub
test
inc
push
push
in
lds
cmp
out
sub
idiv
(bad)
fiadd
dec
jmp
std
outs
(bad)
jp
cdq
les
pop
and
cld
in
loope
test
aad
mov
popa
xchg
push
pusha
jl
sbb
push
call
adc
sbb
jp
xor
mov
stc
cwde
mov
arpl
cmp
sub
sti
outs
cmp
xchg
mov
mov
push
(bad)
sti
pop
mov
xor
jp
mov
icebp
ds
jmp
inc
sar
jecxz
sahf
pop
jge
jg
mov
mov
xchg
jnp
imul
or
cmp
sub
jge
(bad)
fs
xchg
int3
ss
inc
mov
nop
ins
mov
jne
retf
pop
stc
repnz
cld
jbe
sbb
and
or
push
mov
dec
jae
rol
cwde
ds
es
mov
sub
packuswb
mov
in
dec
cwde
mov
ss
ins
jne
mov
inc
outs
lods
inc
and
mov
lea
mov
hlt
gs
test
pop
jp
dec
mov
mov
add
stos
aaa
sub
outs
aam
pop
add
pop
(bad)
stc
(bad)
mov
push
pop
arpl
test
and
jg
adc
push
dec
in
push
pop
mov
push
movs
add
test
inc
xor
sbb
xor
ins
movs
mov
cmp
lea
in
jge
and
gs
lods
cmp
fs
loop
cmp
xchg
movs
imul
into
mov
dec
ins
dec
mov
push
mov
mov
pop
ficomp
xor
mov
sbb
js
xchg
push
outs
repz
aam
xchg
cld
xchg
cmp
(bad)
pop
cld
das
mov
push
scas
jo
mov
jg
mov
jl
movs
mov
shl
push
dec
pop
push
dec
je
push
mov
mov
mov
test
dec
mov
xor
or
ficom
xchg
hlt
loopne
xchg
sti
lods
sub
retf
or
icebp
imul
inc
xor
push
loope
js
out
popf
fimul
daa
pop
cmp
mov
leave
fcmovu
cmp
add
mov
or
pop
sbb
sbb
shld
fmul
xor
fs
stos
sahf
pop
in
fild
xchg
shl
jg
dec
pop
iret
imul
pop
shr
cwde
(bad)
out
fistp
nop
out
pop
or
data16
call
sahf
aaa
inc
jle
dec
psadbw
adc
sti
adc
mov
jno
mov
mov
xor
lahf
push
jo
fcom
pop
aad
imul
inc
inc
inc
lahf
cwde
sub
shl
push
sub
clc
ins
out
fcom
xor
dec
mov
push
fidivr
adc
mov
inc
mov
or
add
popf
jbe
stos
sbb
xor
into
(bad)
mov
loopne
mov
shl
xchg
add
cmps
mov
test
pop
pop
push
mov
pop
jns
or
push
inc
(bad)
push
and
cmp
adc
xchg
mov
repz
add
in
pop
mov
fisub
xor
dec
pop
(bad)
sbb
nop
push
jno
stos
call
in
and
dec
cdq
add
das
inc
push
or
mov
sub
clc
retf
call
out
jmp
aaa
add
pop
lahf
xor
or
in
xchg
and
mov
out
mov
push
nop
scas
push
cmp
sti
sbb
ss
addr16
mov
dec
fwait
retf
mov
lds
and
adc
lods
imul
xor
sbb
ins
and
sub
ins
enter
ins
loope
inc
push
xchg
ret
sub
and
sbb
xor
mov
je
stos
mov
ins
mov
fisttp
enter
sub
and
inc
test
imul
mov
push
add
or
repz
call
jae
fnstsw
fsub
pop
sub
mov
int
inc
fistp
arpl
les
or
add
xchg
or
in
sub
loop
push
lods
loop
sahf
xor
loop
sub
jecxz
pop
and
nop
add
rol
mov
mov
mov
mov
test
xlat
sbb
inc
mov
and
add
les
repz
jge
enter
scas
push
shl
leave
add
repnz
push
jbe
xchg
out
inc
out
cmp
push
outs
fdiv
inc
push
loope
sbb
das
mov
inc
movs
rcl
fist
jl
xor
movs
push
repz
cmp
retf
hlt
push
pop
and
mov
push
(bad)
push
xchg
push
inc
adc
gs
cmp
xor
jb
lds
clc
mov
pop
sar
xor
stos
aad
iret
push
(bad)
cmp
jae
je
and
int3
cs
or
aaa
shl
dec
in
stos
cdq
mov
mov
(bad)
aad
xor
ret
xor
std
pop
pop
punpcklbw
shr
add
call
div
mov
gs
leave
cmp
or
cmp
pushf
out
fcmovbe
inc
(bad)
outs
xor
mov
aam
xor
push
push
fstp
out
outs
sbb
sub
jecxz
outs
mov
pop
fucomi
stos
call
push
cmc
sub
sahf
stos
je
loope
pusha
sbb
push
mov
data16
inc
popa
jae
cmp
push
imul
cwde
push
sbb
push
cdq
xchg
mov
mov
pop
and
push
inc
pop
std
adc
(bad)
xchg
fld
ds
mov
mov
rcr
fxtract
fldcw
jmp
and
test
xor
adc
mov
mov
je
aaa
mov
inc
stc
in
push
jg
ror
fidiv
xchg
test
pusha
inc
mov
xchg
sbb
fist
jmp
sub
sub
mov
xor
push
and
mov
and
in
enter
push
adc
xlat
sar
(bad)
outs
loopne
stc
aas
mov
adc
fstp
xchg
stos
aad
inc
aaa
dec
inc
xchg
sahf
xlat
test
sbb
inc
retf
pop
xor
pop
loopne
inc
dec
ret
push
push
dec
sbb
lea
inc
jg
cmp
push
es
mov
in
shr
dec
adc
popf
adc
xchg
pop
xor
loop
dec
je
add
fidiv
mov
jae
or
aam
fist
sub
pop
jle
xchg
add
lea
leave
shl
fst
test
jns
call
stos
scas
psraw
iret
sbb
in
mov
call
jns
sbb
fsubr
jne
loope
mul
xchg
xchg
adc
outs
xchg
fs
mov
dec
mov
mov
dec
pop
sub
(bad)
test
js
push
lods
push
jmp
pop
into
inc
and
cmc
and
sahf
mov
out
retf
inc
add
(bad)
sbb
lahf
lock
retf
and
shr
and
adc
jecxz
mov
xor
das
scas
cwde
xor
addr16
loop
in
daa
aad
in
pop
mov
inc
jl
mov
lods
adc
mov
sbb
mov
lods
test
imul
movs
std
retf
jbe
xor
das
pop
icebp
push
(bad)
je
pop
pushf
packssdw
lock
in
cmp
stos
mov
jne
gs
in
push
dec
sub
and
mov
int
xchg
bswap
mov
retf
pop
sub
mov
mov
cmc
dec
pop
cmp
cmp
pusha
mov
lds
and
mov
push
jl
inc
inc
repz
call
es
out
test
mov
xor
xlat
cmps
retf
xchg
jge
pop
mov
fdiv
pop
push
add
cmp
ins
cmp
jnp
enter
int
push
mov
(bad)
cmc
add
sbb
sbb
add
inc
pop
mov
aas
mov
test
sbb
test
pop
inc
inc
(bad)
data16
sub
xor
cmp
out
(bad)
mov
inc
sub
lods
mov
imul
(bad)
dec
adc
mov
inc
sbb
loopne
les
jnp
sahf
repnz
or
shl
and
pop
retf
pop
aas
dec
hlt
fist
aam
scas
xor
pop
jo
sbb
add
pop
fisubr
jae
jecxz
xchg
mov
out
push
pop
cmps
add
mov
xchg
dec
mov
(bad)
retf
test
jbe
cmp
pop
jne
test
or
mov
and
fwait
das
jle
push
pop
sub
call
add
adc
sbb
or
pop
xchg
xchg
or
inc
xchg
(bad)
aad
pop
push
inc
cmp
mov
(bad)
adc
retf
scas
mov
sti
nop
into
adc
add
dec
jno
ss
les
sub
jge
sbb
xchg
shl
sbb
and
aaa
pop
sbb
aad
mov
mov
pushf
jns
rcr
add
cmps
add
and
imul
lods
xchg
mov
cmova
aam
mov
sbb
add
push
jle
sub
stc
inc
inc
inc
ficom
adc
call
cmps
(bad)
pop
xchg
pop
fs
cmps
push
out
xchg
cmp
stos
add
inc
bswap
loop
cmps
dec
dec
idiv
lock
jg
lods
pop
inc
add
imul
adc
imul
out
jmp
in
inc
cmps
repz
push
scas
lods
scas
add
ja
or
mov
inc
mov
popf
xchg
je
pop
pop
das
ins
jae
in
inc
adc
push
addr16
push
lock
inc
mov
out
cmps
sti
pop
repz
and
sbb
and
or
repz
pushf
jno
jno
push
inc
push
pushf
inc
rcl
mov
(bad)
stc
mov
or
push
or
push
add
std
xor
jmp
outs
rol
jno
pop
xor
xchg
sub
retf
sti
ins
push
jle
loope
and
sbb
lock
inc
inc
xchg
push
fistp
pop
and
sub
push
call
(bad)
imul
neg
jns
push
xchg
in
jno
mov
pop
adc
xchg
call
cmps
or
jb
ja
stos
std
cli
sub
cdq
loopne
cmps
jae
jl
and
xor
add
jbe
ja
sahf
(bad)
fadd
adc
pop
js
das
ja
xchg
push
jg
and
pop
xor
pop
inc
adc
mov
loopne
dec
dec
call
xchg
shr
xchg
imul
ins
sub
jge
inc
or
mov
lods
adc
mov
dec
(bad)
mov
push
loope
push
jg
sub
or
pusha
cwde
into
xor
out
pushw
imul
xlat
mov
mov
cmp
pop
hlt
or
push
repnz
pushw
jp
xchg
pop
jmp
shr
push
mov
shr
jnp
leave
fild
mov
add
mov
mov
(bad)
(bad)
xchg
pop
es
sahf
loope
test
imul
xor
fdivr
bound
push
jge
inc
jle
pushf
ret
std
aas
jo
jmp
lods
or
mov
pop
add
test
fcom
xor
push
push
mov
dec
sti
sbb
adc
nop
jo
mov
dec
xchg
sar
sahf
sbb
mov
mov
es
jge
push
scas
cmp
test
sbb
or
pusha
scas
inc
add
dec
sub
and
ret
shl
jns
pushw
xchg
out
cmp
aam
mov
mov
add
push
inc
sbb
mov
sar
xor
mov
push
fcmove
sub
cdq
jecxz
inc
popa
aad
mov
cli
ffreep
aad
cmps
push
mov
call
adc
lea
adc
repnz
stc
(bad)
(bad)
std
aam
sub
xor
add
pusha
or
jle
aaa
xchg
mov
cmp
bnd
mov
xor
sub
or
int3
neg
sbb
ds
push
dec
and
adc
call
pop
(bad)
call
add
loope
push
sahf
push
xchg
sub
xchg
ret
aam
loopne
cmp
or
and
mov
xchg
adc
rcr
and
jle
popf
test
sbb
or
jmp
shl
inc
mov
cmp
ror
push
add
jl
ror
fdiv
push
mov
ret
(bad)
(bad)
lods
call
mov
(bad)
mov
or
out
mov
test
int
das
push
pusha
lods
mov
in
mov
push
pop
cli
xchg
cmps
sub
jmp
cmp
push
ja
or
and
jbe
mov
xor
mov
xor
hlt
dec
mov
aaa
int3
dec
jg
sbb
or
enter
ds
fsub
aad
jg
cmp
pop
mov
(bad)
push
stc
aad
imul
aaa
or
div
push
call
mov
test
inc
xor
(bad)
xor
cs
pop
or
out
(bad)
sub
js
scas
adc
mov
inc
hlt
in
push
dec
in
mov
iret
leave
lock
push
movs
into
pop
mov
cwde
jno
xor
push
adc
mov
clc
mov
push
not
pop
sbb
in
xor
fninit
jns
pop
lahf
addr16
in
test
pop
inc
jae
sahf
jne
aad
lahf
mov
fild
inc
pop
js
test
cmp
in
jbe
loopne
in
in
(bad)
fisub
mov
outs
mov
sbb
sti
mov
clc
mov
adc
cmps
xlat
inc
lock
mov
fld
xchg
rcr
and
mov
add
loopne
enter
sub
push
dec
sbb
repz
(bad)
movs
(bad)
and
sbb
adc
pushf
dec
fcmovbe
clc
mov
imul
in
cmps
sub
push
(bad)
fild
jl
clc
or
sahf
fcomp
jbe
sub
cmp
add
jmp
bound
dec
xchg
scas
jb
jb
adc
movs
out
jge
test
xor
scas
fnstsw
je
inc
cmps
jmp
push
dec
sbb
inc
sub
pop
fwait
in
daa
pop
and
aam
mov
lds
loop
jnp
sub
add
in
xor
fistp
jg
or
mov
dec
mov
jl
pop
mov
jb
mov
push
enter
or
imul
fdivr
mov
push
push
test
add
in
jne
or
dec
popf
mov
popa
jno
pop
sub
pop
(bad)
ja
push
aam
fucom
ret
aaa
gs
(bad)
adc
out
jmp
push
cdq
cmc
jbe
jb
fnstsw
int
frstor
inc
cmp
fisttp
jl
jge
xor
bound
mov
jb
dec
sub
pop
xlat
cwde
adc
xor
sbb
cld
inc
cmp
or
xchg
xor
inc
push
jl
xchg
add
(bad)
test
ins
sahf
add
je
jl
inc
mov
or
push
ins
jmp
gs
adc
adc
jnp
cmps
mov
enter
out
inc
cli
bswap
adc
and
stos
leave
xor
in
add
cdq
push
sbb
sti
loopne
lock
psubusw
js
retf
ins
ins
mov
add
lea
xchg
into
pop
div
xchg
push
push
adc
ret
test
sbb
add
pusha
fcomp
stos
call
inc
cmp
retf
lods
or
ret
lock
jb
icebp
cmp
xchg
sub
jmp
sub
add
call
out
pop
fs
cmc
xchg
stc
mov
out
daa
add
add
cmp
lock
adc
fstp
push
sbb
jge
mov
in
adc
retf
movs
ins
leave
test
or
xchg
mov
in
mov
sub
imul
call
lods
jbe
ret
inc
push
adc
or
xchg
lods
loopne
lock
iret
or
stc
mov
sbb
lea
or
mov
cmps
fld
inc
imul
pop
xchg
rcr
lods
das
or
fcomp
sub
mov
enter
push
pop
popf
icebp
cmp
dec
bound
dec
aas
xor
ja
or
xor
push
push
fnstenv
movs
inc
sbb
xor
neg
pop
pop
or
mov
gs
push
mov
push
jbe
add
je
ror
xchg
popa
loop
in
inc
icebp
mov
je
xlat
jmp
pop
adc
test
push
ss
ds
in
or
loop
jno
imul
push
or
cmp
mov
sbb
out
push
cmp
cmps
xor
stc
ret
xor
adc
cld
or
test
push
jl
int
or
pop
cld
sub
popf
(bad)
sbb
arpl
out
rol
sbb
dec
repz
call
(bad)
add
into
mov
adc
push
sub
inc
stc
mov
fwait
mov
dec
jns
out
adc
sbb
fwait
repnz
xor
sub
sahf
xor
scas
jns
xor
loopne
adc
shl
sbb
cli
and
pop
add
pop
jecxz
lods
nop
stos
pop
aad
test
jb
lods
sub
adc
ret
dec
inc
cmp
push
imul
mov
mov
mov
push
sar
sbb
inc
into
pushf
std
or
sub
xchg
pop
icebp
xlat
inc
sub
jg
xor
arpl
fnstenv
xchg
mov
fucom
push
xchg
dec
cmc
adc
jnp
push
jecxz
rcr
cwde
mul
lods
dec
mov
fs
dec
or
add
push
or
adc
push
cmp
xchg
jp
je
data16
retf
test
and
fmul
test
repz
int
mov
cdq
add
xor
jl
push
jl
push
push
pop
push
push
and
xor
jo
adc
or
in
das
pushf
mov
mov
movs
das
pop
std
je
call
xchg
adc
cwde
dec
mov
xor
aam
nop
gs
adc
or
out
mov
fild
in
aaa
fs
test
sub
add
jns
pop
leave
xchg
mov
neg
mov
mov
xlat
mov
not
xor
sbb
mov
in
imul
imul
add
xchg
retf
shl
inc
cmp
pop
es
cs
test
jno
iret
inc
stos
sbb
(bad)
dec
test
adc
xlat
outs
add
sti
pusha
dec
fisubr
cmp
jne
stos
test
aam
inc
fldenv
out
cmp
ret
push
and
ja
cmp
adc
mov
scas
out
pop
xor
ja
jecxz
pop
stos
sbb
push
push
inc
cmp
test
adc
push
in
mov
jmp
and
xchg
mov
movs
pushf
sub
mov
jmp
or
push
into
gs
pop
dec
inc
push
mov
and
fiadd
mov
iret
jne
cdq
sub
push
vpcomb
rol
cmp
adc
xlat
jmp
mov
inc
mov
call
(bad)
mov
pop
outs
femms
dec
sub
movs
loop
adc
and
cmp
sub
push
mov
lahf
sub
dec
dec
sbb
fdivr
mov
(bad)
(bad)
sub
call
ins
test
ins
sub
mov
mov
adc
shl
inc
cmc
push
js
or
dec
mov
and
or
jg
icebp
mov
imul
mov
add
xor
cli
cmp
cmp
es
fidivr
rcr
and
repz
aad
rol
mov
iret
pop
pusha
lods
aad
cmp
ror
xchg
lods
inc
xor
or
in
dec
lea
mov
mov
xchg
(bad)
xchg
mov
sub
div
repz
add
imul
pop
mov
(bad)
cmp
dec
aad
data16
sub
ror
sub
jo
mov
mov
sbb
stos
dec
add
popf
adc
into
pop
dec
outs
inc
fisttp
fiadd
add
pushf
call
dec
clc
add
lods
inc
jle
(bad)
and
adc
hlt
xor
psubq
add
xchg
hlt
cld
dec
aaa
ror
(bad)
mov
mov
cmps
push
and
push
or
(bad)
shr
jo
xchg
js
inc
popf
jbe
ins
mov
(bad)
dec
mov
cmp
mov
fdiv
pop
out
and
pop
das
sbb
pop
cmp
inc
fs
pop
jae
adc
push
aam
xchg
mov
cmp
fbld
or
push
push
add
outs
fs
fsubp
popa
and
sbb
ret
in
xchg
shr
in
retf
aas
xor
into
fdiv
imul
push
imul
inc
sub
aas
sub
pusha
inc
push
in
daa
in
mov
push
push
adc
sti
ss
addr16
pop
add
jae
inc
mov
pop
mov
and
and
add
retf
test
xchg
add
lods
ja
test
push
jle
pop
ss
stos
shl
sbb
pop
clc
stos
(bad)
jp
je
(bad)
cmc
add
mov
inc
pop
or
and
xor
cmp
jg
ss
bound
sbb
shl
in
fistp
lods
xor
lds
mov
in
aad
dec
push
mov
(bad)
out
xor
test
sub
pusha
ins
or
push
movs
fld
adc
mov
cmp
fimul
hlt
stc
or
push
push
inc
cmp
jmp
dec
sub
out
push
push
xchg
mov
inc
adc
xor
clc
cmps
cmps
(bad)
in
xchg
jmp
enter
out
cmp
push
(bad)
clc
add
and
test
cdq
das
or
test
pushf
mov
and
fs
xor
cmp
mov
cld
pop
push
not
icebp
repnz
xor
mov
mov
sbb
inc
shr
inc
pop
push
pushf
xchg
dec
xor
xchg
cmps
dec
daa
icebp
fisttp
and
les
bound
ss
xor
sub
packuswb
jecxz
and
call
push
sub
inc
int3
out
fs
pop
jno
aas
outs
stos
push
cmp
push
push
loop
rcl
add
mov
or
pop
xor
pop
cwde
loop
nop
out
inc
xor
and
ins
dec
push
xor
das
jae
(bad)
stos
fst
xchg
sahf
fsub
aaa
cmp
add
dec
adc
fwait
adc
lds
test
enter
rcl
dec
mov
stc
mul
loopne
(bad)
pop
xlat
sbb
into
fucom
cmps
dec
jae
mov
xchg
push
jns
scas
push
inc
cmp
adc
jb
inc
enter
enter
mov
sahf
xor
ret
mov
and
jge
es
and
xor
ret
xor
xor
stc
jns
test
xor
pop
lds
sti
leave
sbb
arpl
lahf
mov
dec
add
popf
call
push
sbb
outs
mov
adc
add
iret
into
sbb
push
dec
pop
lds
(bad)
js
pushf
sbb
jmp
enter
stos
cmps
sub
push
pop
ins
inc
leave
xchg
pop
or
jne
outs
push
mov
retf
adc
in
jecxz
in
mov
clc
ja
jno
das
push
aaa
mov
pop
and
hlt
cmp
scas
(bad)
ror
out
idiv
shl
ins
les
test
lds
sub
addr16
ja
sub
mov
outs
mov
jp
pop
adc
sub
scas
cmp
dec
leave
fdivr
sbb
es
xor
mov
mov
xor
nop
ss
add
mov
sbb
adc
daa
jae
out
mov
aaa
cmp
mov
push
dec
imul
pusha
sub
cmp
fdivr
or
mov
and
lahf
fist
aad
pop
jmp
fld
imul
mov
enter
mov
mov
jae
xchg
jmp
push
ret
in
lock
out
fwait
aad
sub
push
lahf
out
push
cmc
adc
ror
daa
add
arpl
mov
jmp
sbb
push
xor
pop
hlt
ins
mov
xor
unpckhps
push
popf
(bad)
jb
jge
int
xchg
push
jnp
test
test
sti
(bad)
pop
pusha
mov
adc
(bad)
frstor
or
movs
add
loope
in
test
popa
icebp
cmp
imul
test
lock
sti
cmc
cli
mov
loope
fld
lock
(bad)
(bad)
shr
mov
mov
lea
lea
into
gs
xor
cmps
call
nop
icebp
or
jno
add
call
or
cmps
pop
dec
xchg
xor
fsubr
shr
lods
mov
push
cmps
(bad)
inc
xchg
jg
xor
cld
mov
or
and
repnz
cmp
imul
(bad)
push
add
fmul
jno
aam
dec
ja
fwait
sub
movs
sbb
mov
das
add
dec
cwde
dec
adc
sahf
(bad)
enter
xor
adc
cmp
sub
ret
xchg
inc
jne
ror
xchg
dec
mov
mov
test
fcomp
(bad)
dec
xchg
sar
or
mov
sub
shr
loop
in
sub
nop
pusha
out
inc
xchg
jg
pop
rol
sub
adc
jecxz
xor
sbb
pop
retf
nop
cwde
aad
sub
jmp
pop
pusha
int
pop
xchg
sub
xchg
into
test
ret
or
stos
retf
(bad)
jl
test
stos
cld
clc
(bad)
repz
in
ret
loope
jae
(bad)
lahf
or
inc
mov
pusha
stos
mov
push
jmp
into
jp
pop
icebp
mov
dec
neg
call
mov
sub
ret
dec
mov
retf
sbb
inc
and
fdiv
fs
jnp
xor
cmp
fld
inc
mov
jle
repz
imul
dec
inc
loop
rol
(bad)
in
in
mov
test
in
into
add
fwait
loope
mov
sub
push
xchg
cdq
push
push
jecxz
mov
stc
mov
iret
or
lods
outs
lods
nop
icebp
dec
push
and
sbb
es
loopne
ins
mov
inc
jmp
shl
inc
ret
sbb
mov
sub
repnz
inc
dec
mov
jae
repnz
fisubr
xchg
mov
ret
les
cmp
mov
mov
movs
dec
mov
sbb
icebp
mov
dec
sar
nop
and
mov
jns
call
jo
in
sbb
scas
mov
sbb
mov
jae
jg
out
jecxz
gs
jp
xchg
jbe
add
mov
fmulp
pop
test
dec
sahf
mov
imul
mov
pop
das
or
aad
xchg
push
ins
mov
(bad)
push
jmp
scas
test
sahf
lea
pop
scas
jmp
mov
mov
push
out
mov
stos
fidivr
aas
imul
or
(bad)
call
cld
shl
push
test
mov
cmp
cmp
sub
push
or
xchg
fst
iret
xor
push
adc
mov
cmp
pop
jmp
mov
popa
pop
ret
int
repnz
cmp
stc
loope
add
pushf
mov
pop
mov
adc
xor
movs
and
or
mov
out
movs
and
outs
fisttp
sbb
push
mov
inc
add
lods
mov
dec
jae
loopne
add
xchg
fs
pop
mov
movs
adc
cmp
cmp
mov
jge
shl
enter
repnz
cmp
adc
mov
hlt
shr
mov
fistp
jmp
dec
inc
cmp
repnz
pushw
or
out
sahf
out
cmc
mov
push
mov
jp
mov
das
sti
sbb
(bad)
gs
mov
jnp
test
int3
and
sbb
push
ror
mov
adc
cmp
aaa
jae
inc
pop
dec
lods
cwde
mov
hlt
jle
arpl
jo
cld
mov
sahf
jnp
mov
xchg
rcr
ror
inc
or
cmp
movs
sbb
dec
push
in
test
push
mov
daa
add
outs
leave
mov
data16
daa
xchg
inc
es
hlt
fist
adc
pusha
cwde
mov
mov
sub
mov
cld
dec
push
(bad)
pop
call
jnp
sub
rol
popa
lods
sub
shl
push
mov
or
pop
pop
xchg
repnz
outs
shl
mov
movs
stos
in
comiss
inc
imul
ja
idiv
je
push
and
push
daa
pop
cmp
sbb
inc
out
out
or
pushf
sahf
mov
scas
lea
retf
(bad)
xor
pushf
mov
dec
cdq
cmp
adc
inc
mov
xchg
pop
pop
push
sbb
dec
xor
ins
mov
push
pop
push
push
xchg
in
xlat
(bad)
cmc
call
pushf
xlat
sbb
popf
test
ficomp
mov
retf
jne
shl
stos
cmp
test
push
sub
ror
dec
sbb
xor
jl
dec
lea
push
js
popa
ficomp
scas
push
shl
out
in
push
test
or
adc
pop
aaa
shl
and
cld
into
push
stc
add
cmp
movs
cmp
xor
inc
xor
sbb
pop
int
dec
in
adc
imul
jbe
xor
lods
mov
clc
test
shl
idiv
lods
and
icebp
push
ror
in
std
pop
out
push
dec
ins
and
scas
xor
fwait
push
cmp
(bad)
mov
push
lahf
xor
pop
(bad)
pop
push
push
inc
call
cmp
cmps
pop
or
cmps
jg
mov
dec
jno
mov
push
pop
rcl
mov
dec
mov
jbe
shl
cmp
adc
jmp
mov
mov
add
jo
into
mov
mov
sahf
lds
loop
xor
add
mov
pop
call
mov
pop
movs
add
and
fsub
adc
mov
je
aaa
lock
jge
int
cli
leave
mov
lea
out
repz
scas
dec
xchg
adc
jecxz
mov
jne
or
push
mov
adc
call
push
mov
jno
inc
sbb
xchg
adc
in
sub
lock
xchg
icebp
jmp
push
test
cmp
pop
repnz
jo
pusha
(bad)
scas
pushf
xor
(bad)
mov
in
push
jecxz
fs
xor
cdq
movs
inc
cmp
jb
out
push
sbb
xor
daa
rol
aas
add
dec
pop
ss
outs
mov
pop
xchg
loop
inc
aaa
cmp
sbb
cmp
ret
aas
and
and
je
mov
bts
outs
cmp
idiv
add
in
push
stos
lods
jnp
loopne
push
scas
mov
jg
test
aam
push
jl
or
mov
daa
out
jbe
adc
xchg
xchg
mov
jmp
les
sub
xor
cmp
ins
or
mov
xchg
popf
dec
or
loop
into
push
jnp
mov
xor
sbb
(bad)
imul
movs
icebp
inc
pop
xor
out
sbb
rcr
pop
shl
mov
push
pop
adc
cs
mov
xchg
mov
(bad)
dec
out
int
retf
call
leave
dec
in
cmp
aaa
leave
jmp
jno
in
pushf
dec
int3
jl
sbb
test
cdq
outs
iret
push
cmc
cld
lds
push
mov
std
aaa
repnz
sar
mov
jmp
(bad)
sub
xor
or
cmps
xor
repnz
repz
sbb
pop
mov
test
nop
aam
mov
nop
pop
mov
jmp
mov
xchg
dec
add
dec
inc
jle
outs
aam
inc
mov
xor
popf
test
fdivr
call
mov
imul
push
mov
fdivr
cmps
jp
push
and
pop
or
sbb
pop
fs
les
push
aam
dec
call
pop
je
imul
or
xchg
das
inc
or
inc
aas
and
xor
or
xchg
mov
scas
mov
pop
cmc
repnz
xchg
inc
xor
stc
std
mov
pop
mov
mov
(bad)
xlat
xor
mov
pop
cmp
xor
dec
adc
mov
adc
(bad)
fstp
stc
mov
(bad)
mov
jle
jge
icebp
pop
into
je
addr16
dec
or
mov
fidivr
hlt
and
repnz
lds
inc
mov
jmp
ret
or
adc
dec
push
cmp
fdiv
dec
ror
dec
or
mov
ss
xchg
popa
push
out
rcl
lds
inc
arpl
push
lds
cmp
or
push
cwde
dec
mov
cmps
ins
xor
fisubr
in
in
add
loopne
or
adc
pusha
push
pop
fistp
xchg
xor
or
or
sahf
jbe
sti
jle
enter
adc
push
orps
ins
fcmovbe
push
mov
mov
jmp
jno
adc
jp
mov
in
mov
jo
js
loope
mov
pop
ins
cli
in
inc
cli
js
in
push
mul
retf
imul
jns
add
xchg
ins
bnd
sub
movs
pop
cwde
icebp
inc
cmps
shr
mov
fsubr
mov
(bad)
(bad)
fucom
push
xchg
out
repz
popa
xor
sbb
xor
push
lock
push
jge
outs
push
cwde
cs
data16
outs
add
movs
std
mov
and
cmps
ins
xchg
rcr
xor
mov
ror
(bad)
pop
push
in
add
sahf
or
adc
mov
rcl
idiv
jb
cli
xor
retf
ret
inc
aas
pop
in
dec
neg
pop
add
imul
adc
push
inc
mov
cs
clc
pop
and
pop
scas
lahf
dec
push
fsub
jmp
mov
xor
ret
repnz
or
mov
mov
fwait
jge
es
mov
lds
sbb
data16
jnp
outs
xor
pusha
adc
push
cs
in
jl
ins
ins
hlt
xor
jbe
test
xchg
cmps
and
pop
or
jmp
ds
std
dec
xchg
ins
retw
scas
xchg
xchg
(bad)
xchg
adc
scas
add
and
fisub
sub
xor
in
fwait
sbb
inc
iret
dec
mov
pop
pop
stc
cmp
clc
sub
adc
in
pusha
fnsave
push
outs
maskmovq
cwde
or
push
xchg
cmps
pop
adc
iret
mov
scas
mov
leave
xchg
dec
dec
popf
push
outs
xor
and
(bad)
jle
popf
xor
test
fcomp
and
push
xchg
jne
loope
jmp
sbb
push
scas
aaa
loopne
and
inc
sub
jmp
xor
in
adc
data16
mov
cmp
jbe
mov
sub
inc
pop
addr16
dec
cli
jmp
adc
nop
and
jl
fld
push
(bad)
sahf
div
icebp
lahf
out
push
xor
mov
jo
and
or
mov
dec
sub
dec
pop
mov
mov
movs
xchg
xor
cmc
push
daa
adc
cdq
sub
add
loop
push
or
ficomp
mov
jmp
sar
cmp
iret
mov
and
add
dec
sbb
jno
pop
mov
xor
outs
pop
xlat
fs
pop
sub
(bad)
xchg
push
loope
sbb
aam
adc
mov
sti
inc
mov
push
movs
mov
(bad)
mov
sub
enter
xchg
jg
pusha
stos
repz
dec
push
(bad)
sub
dec
mov
aam
iret
daa
mov
pop
js
and
xchg
jb
imul
and
or
loopne
mov
mov
retf
popa
cwde
pop
or
out
test
jecxz
call
daa
and
mov
sbb
add
les
and
dec
sbb
add
retf
je
outs
(bad)
push
ds
scas
dec
call
pop
inc
aad
(bad)
fprem1
and
adc
inc
add
dec
fistp
jns
push
rol
mov
pop
jmp
out
jns
xchg
cli
pop
sub
icebp
push
mov
aam
mov
aaa
xchg
cmp
adc
cmp
jae
add
fisubr
jb
push
aam
lahf
in
mov
icebp
jmp
leave
adc
sbb
retf
push
xor
mov
push
xchg
ret
jecxz
add
push
xchg
add
xor
sahf
cs
icebp
xlat
mov
jmp
dec
enter
outs
cld
cmp
mov
xchg
cmp
in
in
xchg
stos
mov
add
xor
push
ret
call
pop
or
sub
dec
push
or
out
cli
cmp
sbb
lods
shl
leave
push
mov
loopne
out
sbb
dec
xor
jl
fnstsw
pop
loop
xchg
xchg
mov
cmp
add
push
xor
mov
cld
mov
jmp
mov
out
outs
lock
and
nop
cmp
push
es
lock
or
push
jg
mov
pop
jl
dec
mov
addr16
pop
in
fdivr
scas
mov
cmp
adc
retf
sub
aaa
mov
xchg
add
cmp
arpl
xchg
jmp
inc
mov
fimul
sti
ret
fiadd
scas
fidivr
mov
dec
pushf
int3
das
or
dec
imul
int3
adc
xor
xlat
sbb
jns
adc
dec
lea
arpl
or
sbb
mov
repz
pop
pop
rol
pop
mov
sub
in
add
fidiv
push
ret
xor
mov
outs
mov
sar
xlat
xchg
mov
push
fidivr
movs
jns
scas
dec
ret
inc
push
jecxz
mov
movs
rdmsr
fbld
sub
ret
adc
outs
pop
and
adc
push
rcl
clc
vandps
cmp
push
jp
push
xlat
cmp
cmp
pop
and
jmp
jno
jp
jmp
sti
xchg
inc
pop
imul
icebp
(bad)
js
adc
nop
cmp
lock
ss
test
cmp
adc
fisttp
imul
push
jge
pop
sub
inc
pop
fwait
leave
(bad)
sbb
pop
add
scas
jp
lods
hlt
fs
(bad)
pop
dec
jno
retf
mov
repnz
test
ret
and
arpl
mov
(bad)
data16
adc
loopne
pop
and
cld
stos
ror
cmp
dec
push
in
jbe
xchg
shr
cmps
sbb
es
cmp
lock
mov
cmps
cld
or
fisttp
xchg
pop
and
popf
mov
repnz
les
cmp
adc
mov
jns
inc
ret
dec
js
lock
stos
fs
sub
jmp
in
push
fwait
xchg
rol
and
and
adc
mov
outs
cmc
fsub
scas
xor
cdq
add
mov
xlat
dec
imul
mov
sbb
fistp
add
jg
addr16
lock
fnsave
cmp
loopne
dec
in
in
arpl
xlat
daa
cmps
das
in
xor
cli
xchg
dec
sar
or
mov
sub
repnz
mov
test
mov
popf
clc
xor
pop
jae
xchg
xor
lods
aas
fstp
cmps
fwait
pop
mov
or
cld
and
jne
xchg
scas
add
movs
push
stos
xor
data16
and
mov
test
retf
or
add
inc
call
mov
lahf
clc
fmul
adc
jo
or
fidivr
push
idiv
mov
xchg
fsubr
mov
ds
jb
jb
test
adc
(bad)
mov
test
add
ret
mov
mov
adc
jmp
mov
aas
jmp
lds
retf
not
test
mov
jb
(bad)
mov
pop
jl
js
cmc
inc
imul
ret
rcl
loopne
jge
pushf
cwde
cmp
xor
pop
jae
(bad)
mov
bound
push
sahf
inc
lods
dec
or
jle
mov
sub
jge
pop
ret
xchg
mov
les
rol
add
xchg
dec
jns
movs
adc
xchg
add
jl
dec
and
jb
inc
add
outs
lea
mul
repnz
fidiv
mov
mov
ds
or
push
daa
xchg
cmp
pop
dec
cmc
jecxz
jo
jnp
adc
and
into
mov
dec
xchg
lock
stos
fstp
ret
add
push
imul
inc
push
loop
imul
xchg
out
mov
inc
xor
test
repnz
jo
fisubr
cli
sbb
cmc
inc
iret
div
imul
push
loopne
mov
cmps
xchg
push
and
add
mov
lods
loopne
icebp
dec
jl
(bad)
mov
cmps
jge
jl
test
sbb
xchg
out
mov
fsub
call
test
pusha
pop
xchg
xor
adc
jmp
pop
add
cmp
stos
mov
lods
sub
xor
scas
cmc
inc
push
ins
inc
xor
faddp
daa
pop
cmps
ds
xchg
inc
xchg
and
cld
leave
mov
pop
xor
shl
stos
sbb
and
adc
stos
cmp
pop
out
loop
and
int
leave
mov
fstp
sub
js
push
xchg
icebp
test
mov
xchg
cld
(bad)
jl
retf
mov
cmps
pushf
mov
clc
pop
push
add
pop
icebp
popf
mov
mov
or
jle
lods
mov
jne
or
pop
movs
fs
daa
jecxz
imul
out
sub
out
mov
mov
xchg
push
lods
out
jno
leave
mov
jae
test
imul
mov
es
scas
or
mov
adc
aad
jne
xor
mov
out
mov
xchg
push
cmp
popa
rol
arpl
push
push
outs
inc
cli
sar
and
cld
push
lods
mov
pop
test
bound
pop
xor
inc
ja
sub
xor
in
cdq
jle
hlt
xchg
dec
sbb
outs
or
cmp
pop
inc
aas
mov
mov
es
ins
inc
mov
dec
xchg
das
push
out
cmp
mov
and
inc
into
pop
or
imul
test
ja
and
and
mov
jbe
data16
cmc
test
not
fldcw
push
cmp
fdiv
test
cmps
outs
in
test
mov
push
mov
or
pushf
(bad)
jb
mov
pop
int
(bad)
shl
loope
imul
les
xor
mov
ins
das
xor
lea
shl
ret
(bad)
or
lock
adc
jmp
mov
ds
out
iret
add
pop
jecxz
test
les
jecxz
js
aam
mov
shl
out
add
mov
mov
pop
push
lods
(bad)
adc
sub
aas
enter
test
dec
stc
stos
lods
xor
pop
cmc
sub
mov
test
push
and
repnz
or
imul
aaa
jno
inc
pop
inc
add
loope
jle
iret
ins
popa
jge
loop
daa
cwde
ja
add
imul
or
inc
popf
cmp
mov
pop
inc
jno
cld
adc
and
outs
sub
aad
push
imul
leave
xor
stos
into
sar
test
or
popf
cli
dec
sub
mov
xor
aas
int
jnp
sub
cs
xor
loopne
mov
xchg
shl
mov
push
cmc
iret
out
retf
fimul
inc
pop
(bad)
(bad)
das
fldcw
popa
clc
dec
ss
and
aas
xchg
jbe
xor
xchg
adc
xchg
ss
fstp
movs
ror
bound
(bad)
xlat
(bad)
rol
xchg
in
test
lods
cmp
xchg
push
inc
rol
test
mov
cmc
adc
sbb
ins
aaa
in
cdq
dec
lods
movs
js
pop
retf
push
pusha
cmp
push
pushf
and
aas
push
out
dec
lock
and
pop
outs
mov
repnz
ficomp
dec
mov
cmp
js
rcr
std
daa
ja
lea
fcomp
jecxz
push
nop
or
xor
into
cmp
mov
test
sub
rol
sbb
pop
(bad)
fldenv
jmp
lahf
jge
test
lfs
retf
sbb
xchg
in
jb
cmp
mov
je
pop
jmp
xor
cmp
nop
aad
mov
cli
rcr
scas
adc
jmp
jg
or
cmp
xchg
xchg
js
push
(bad)
push
fs
movs
cmp
add
enter
sbb
cdq
mov
push
ins
aaa
sub
pop
enter
es
push
dec
inc
and
sub
stc
jge
dec
inc
xchg
and
outs
stos
(bad)
jecxz
xor
in
or
fisubr
sbb
push
aas
dec
dec
xchg
and
and
test
jl
cmps
cmps
sbb
dec
pop
dec
mov
fild
jnp
repz
cmps
call
jp
xchg
mov
(bad)
pop
adc
iret
jp
fsubr
add
mov
push
ins
pop
adc
and
das
xchg
lods
addr16
xor
aaa
loop
test
or
jmp
outs
stc
ins
pop
mov
ret
pand
jg
mov
loope
mov
jae
ins
jne
mov
inc
adc
ror
cmp
add
pop
frstor
fs
xor
cdq
xchg
mov
test
jae
push
pop
add
or
retf
call
sar
mov
sbb
(bad)
push
stc
jl
cmp
(bad)
cs
ret
xchg
or
and
sti
lods
leave
cmps
out
leave
mov
dec
mov
shl
(bad)
sub
add
enter
push
xchg
js
(bad)
movs
cmp
das
pop
mov
out
xchg
test
lds
adc
mov
nop
aad
push
aam
ret
ret
dec
xchg
lods
push
imul
retf
sub
xchg
xchg
out
jmp
test
pusha
cli
arpl
adc
repz
aaa
icebp
xchg
xchg
inc
add
je
or
adc
inc
movs
cmp
icebp
xor
dec
stos
scas
rol
pushf
pop
jp
in
sbb
aaa
ins
pop
push
sbb
cmp
adc
fdiv
aaa
pop
mov
jl
(bad)
bound
and
int3
cwde
add
xchg
push
or
dec
pusha
scas
inc
sub
ins
sbb
jmp
add
out
clc
jno
pop
in
imul
jmp
out
popa
push
inc
test
test
cmps
out
mov
pop
fwait
lods
hlt
mov
inc
jnp
dec
mov
push
push
or
test
inc
cmp
mov
jb
icebp
pop
ins
js
xor
mul
mov
push
and
adc
pop
(bad)
mov
jns
nop
adc
xor
mov
retf
hlt
jmp
jbe
fsub
loope
or
xor
push
das
adc
lea
adc
cmp
retf
cmc
movs
bound
push
mov
or
out
cli
sub
or
cmps
cmc
or
jmp
out
aam
ja
push
in
or
enter
mov
mov
sub
punpckldq
mov
mov
or
das
rcl
or
add
mov
dec
outs
sbb
sbb
in
xor
(bad)
cmp
movs
fwait
outs
mov
neg
adc
mov
mov
test
je
xor
adc
pop
xor
and
inc
ja
pop
(bad)
mov
push
scas
jg
mov
mov
jle
xor
outs
rol
or
mov
mov
movs
shr
dec
sar
or
xor
or
push
aaa
lods
xor
fadd
sahf
jbe
jge
xchg
aam
shl
js
test
mov
aas
inc
rcl
ja
xchg
fwait
das
js
jge
mov
jge
xchg
out
shr
inc
rol
into
ds
jb
jg
push
aad
sahf
or
jge
aaa
jle
jecxz
out
arpl
sub
outs
push
adc
ss
fsub
jl
outs
scas
dec
in
mov
sub
xchg
loop
pop
push
aam
pop
ret
loope
lods
lods
lock
lea
pop
push
(bad)
popa
xchg
dec
aam
add
inc
mov
fsub
(bad)
fistp
push
mov
sar
je
sub
jg
adc
cmps
scas
add
sub
add
or
xchg
xor
in
je
adc
mov
je
ins
pop
scas
and
mov
pop
pop
mov
addr16
ds
in
mov
test
mov
mov
imul
nop
cmp
jbe
or
fdivr
jne
rcl
and
sar
cld
jmp
stc
mov
adc
stc
adc
and
sub
imul
adc
es
loop
(bad)
xor
stos
stos
xchg
and
cmp
pop
jnp
jne
pop
pop
hlt
sti
rcr
clc
das
stos
xchg
inc
nop
pop
inc
out
das
sar
into
cmps
inc
cmp
pushf
sub
hlt
sahf
mov
adc
mov
ins
xor
add
loopne
lahf
ins
and
in
jmp
pop
adc
lea
loop
sub
in
mov
js
shl
fist
adc
test
jg
or
jle
inc
stc
test
es
mov
xor
scas
jb
lock
xor
or
mov
jmp
fisttp
outs
adc
xchg
push
adc
inc
hlt
data16
push
(bad)
sub
movs
xchg
mov
mov
stos
or
and
addr16
cmps
fstp
mov
les
(bad)
ins
push
add
cmp
out
xor
xor
ror
outs
and
push
pop
sub
mov
ret
jmp
mov
xchg
(bad)
movs
mov
push
mov
stos
mov
leave
js
test
xor
dec
fwait
push
stc
cmovo
xor
or
hlt
aam
dec
add
daa
cmp
imul
fild
or
ins
pop
mov
push
int3
in
loopne
and
aaa
jae
in
outs
pusha
xchg
scas
pop
cmp
ret
xchg
ins
jno
enter
pop
fcmove
mov
mov
xchg
ja
cmps
mov
mov
cmp
sbb
push
xor
and
mov
stos
(bad)
mov
cwde
int
dec
push
iret
jmp
fistp
rcl
ins
xchg
fwait
push
xchg
inc
mov
mov
push
or
sbb
rcl
sub
xchg
add
pop
fsub
ins
push
push
mov
pop
pop
sbb
jbe
add
test
jns
addr16
std
aas
call
rol
sbb
cmp
mov
inc
lea
adc
movs
inc
mov
add
pop
mov
jecxz
pusha
repz
pop
cmp
sub
cmps
xor
(bad)
retf
in
movs
xchg
xchg
xor
es
push
pushf
mov
adc
in
push
add
aam
not
fld
push
adc
mov
jmp
test
fcom
push
adc
ror
test
pop
outs
hlt
in
fsubr
rol
(bad)
xchg
out
or
push
aaa
call
xchg
inc
push
add
add
call
pop
push
jns
mov
enter
dec
and
dec
mov
pop
or
pop
aaa
jg
push
int3
dec
mov
ret
pop
test
std
mov
mov
sbb
mov
div
repnz
mov
mov
shl
popa
nop
sbb
adc
clc
in
jl
popf
jmp
xor
jle
pusha
sar
sbb
lds
shl
and
movs
sti
mov
and
arpl
cmc
aad
add
dec
dec
jno
mov
and
out
cmp
enter
add
call
xchg
pop
mov
xlat
ror
adc
adc
call
shr
out
mov
loopne
push
scas
ds
or
or
and
call
icebp
push
repz
push
imul
out
cmp
arpl
cs
cmp
loope
out
mov
repnz
daa
jecxz
aam
clc
test
sar
jnp
clc
or
in
out
push
(bad)
lahf
jge
call
cld
scas
hlt
int
lods
mov
sti
dec
mov
(bad)
sti
mov
das
nop
adc
adc
inc
loopne
cdq
and
and
lods
jns
call
xlat
les
xor
imul
(bad)
cld
push
pop
cmp
mov
lea
(bad)
xchg
enter
loope
imul
xchg
xchg
and
stos
sub
repz
inc
dec
imul
imul
leave
mov
imul
mov
and
in
push
or
(bad)
xchg
mov
iret
dec
ror
push
imul
aam
int3
xchg
movs
loope
mov
cmp
(bad)
pop
mov
or
dec
mov
jbe
cmps
outs
ficomp
add
popa
pop
dec
xor
test
ret
lds
pusha
or
bound
sub
mov
inc
fsub
pop
pop
(bad)
pop
ficomp
ret
add
inc
dec
mov
and
push
jbe
cmp
inc
leave
adc
xchg
inc
jp
daa
xor
xor
adc
cmp
mov
setb
mov
pop
movs
mov
sbb
(bad)
retf
(bad)
or
pop
(bad)
jno
shr
fs
stc
ins
inc
dec
xchg
mov
push
jne
push
je
fincstp
jbe
cmp
jecxz
dec
or
mov
mov
dec
jge
mov
sub
es
ss
out
cwde
fmul
in
inc
push
push
repnz
jno
adc
std
in
jbe
jp
js
fist
jl
inc
shld
fs
rol
int
lahf
push
adc
movs
sti
pop
or
fldenv
and
pushf
dec
fisub
lds
hlt
scas
jbe
ror
jmp
push
inc
mov
pmullw
dec
or
icebp
sahf
fidivr
fnstenv
imul
sbb
xlat
fidivr
push
out
bound
sub
imul
mov
jno
loopne
xor
adc
scas
mov
dec
cmps
cmp
hlt
mov
fstp
in
retf
pop
jo
push
and
arpl
out
jo
mov
jp
adc
call
nop
stos
sub
popf
mov
daa
pop
shl
leave
fld
lahf
dec
add
sbb
sbb
xchg
int
xchg
cmp
fwait
mov
push
icebp
xor
rcr
sahf
hlt
ds
fdivr
cmp
mov
pop
and
(bad)
dec
out
sbb
aaa
(bad)
into
outs
(bad)
jg
jo
fidiv
pop
out
std
and
pop
rcr
cmp
sbb
mov
and
pop
aaa
dec
jno
jl
jb
adc
aas
jne
fldcw
bound
lahf
inc
mov
test
lods
in
pop
fistp
loopne
xlat
inc
movs
sub
addr16
not
icebp
ret
mov
inc
rcr
mov
mov
mov
ret
or
mov
inc
fwait
cmp
mov
(bad)
mov
pop
or
cs
cmc
pop
pop
cmp
jp
pop
mov
sbb
leave
pusha
cli
fs
mov
xchg
in
imul
fcom
pop
mov
bound
jmp
into
lods
outs
leave
xchg
or
scas
add
jg
ss
jge
inc
out
gs
cmps
mov
mov
mov
inc
dec
shl
dec
test
in
clc
mov
cli
lock
xor
push
(bad)
jmp
xor
lahf
xchg
or
imul
add
stos
das
or
sbb
inc
pop
mov
(bad)
arpl
cmp
bound
jl
and
sbb
sub
mov
push
ins
xchg
mov
push
bound
xor
mov
gs
mov
pop
ins
out
ja
call
dec
mov
sbb
dec
ficomp
cmps
adc
shl
or
mov
ins
xchg
and
ja
icebp
mov
mov
popf
iret
cmp
test
mov
sti
push
sar
jmp
icebp
mov
imul
fucom
leave
sbb
clc
jl
(bad)
(bad)
(bad)
mov
dec
scas
dec
add
scas
imul
(bad)
ins
movs
jno
mov
mov
adc
fidiv
push
jecxz
adc
mov
leave
xor
movs
dec
add
pushf
pop
shr
mov
lods
sub
inc
pop
in
neg
or
ror
and
jno
jmp
lods
clc
jns
sbb
and
mov
int3
shl
and
push
(bad)
shl
sbb
stos
pop
mov
ja
mov
idiv
out
pop
test
pop
mov
lock
jge
je
pop
or
cmc
jo
(bad)
into
int3
pop
mov
in
sub
scas
sub
dec
jmp
sub
and
mov
cmp
push
xchg
movs
cmp
bound
or
cmove
pop
cmp
mov
pop
sbb
mov
lods
ins
int3
mov
mov
mov
les
mov
mov
mov
xchg
cwde
imul
je
or
test
scas
sti
dec
scas
inc
je
jge
into
mov
mov
mov
je
xor
test
scas
call
fs
push
mov
mov
loope
scas
mov
cmp
jge
mov
xchg
outs
push
xlat
mov
mov
out
push
int
ss
dec
inc
movs
loop
pusha
push
jmp
inc
or
pop
inc
jbe
(bad)
sbb
push
or
or
dec
fidivr
and
jge
cdq
mov
imul
pop
ret
test
pop
dec
loopne
adc
ins
adc
mov
inc
xor
dec
sub
fidiv
inc
adc
icebp
ret
dec
xlat
outs
xchg
xchg
jp
and
pushf
das
or
cmp
das
cmp
add
test
add
mov
out
in
cmp
cmp
ja
add
adc
sub
gs
pop
add
and
sub
cld
inc
sub
mov
push
cmc
xlat
mov
sub
out
js
xchg
pop
out
xchg
(bad)
(bad)
or
push
scas
mov
cmps
dec
mov
pushf
sbb
clc
mov
js
mov
in
cwde
mov
jle
fild
pop
cli
or
mov
xor
jmp
(bad)
and
out
adc
pop
sub
mov
mov
dec
cmp
mov
and
jle
jp
fucomip
imul
add
test
cli
mov
fild
xchg
clc
test
int
mov
cmp
mov
daa
cmp
dec
cmps
loopne
mov
nop
xchg
fwait
xor
or
lahf
push
sti
in
push
lea
das
mov
fldcw
icebp
pop
out
sbb
pop
and
ss
mov
inc
dec
out
int3
stos
sbb
mov
stos
stos
jnp
and
call
and
stos
cdq
sbb
lods
call
dec
hlt
int
mov
mov
enter
xor
fbld
in
cmp
test
jnp
mov
call
cmc
mov
jmp
mov
int
out
cmp
mov
enter
push
adc
inc
push
in
jns
mov
cmp
pop
xor
sahf
test
cs
mov
test
rcr
icebp
scas
pop
lods
into
div
add
dec
sbb
cmp
pop
jbe
outs
or
repz
cmc
push
mov
push
or
shl
lahf
add
ret
test
mov
adc
ja
and
mov
push
(bad)
fmul
cmps
test
leave
jg
repz
sahf
rcr
sbb
push
or
in
mov
sub
imul
jb
cmp
ins
repnz
jns
into
pop
mul
clc
mov
scas
lock
jmp
mov
add
scas
das
ja
or
dec
mov
test
pop
ror
mov
aas
xor
retf
aam
not
mov
(bad)
loopne
cdq
xchg
jbe
and
cld
dec
push
xchg
movs
test
mov
jae
jo
(bad)
retf
scas
gs
and
jo
jmp
movs
sbb
pop
out
pop
stc
int
inc
in
and
cmp
pop
fidiv
sbb
stos
pop
cmps
fistp
pop
mov
lods
xchg
cmp
adc
mov
jg
(bad)
mov
jno
stc
adc
sbb
push
sbb
pop
(bad)
shl
lods
aas
repnz
test
cs
dec
fwait
or
pop
popf
adc
outs
test
cmp
sub
out
and
retf
mov
fdivrp
adc
(bad)
rcl
cmps
movs
ret
jbe
mov
idiv
ja
push
sub
adc
js
(bad)
in
xchg
sub
pusha
add
pop
fdivr
rcl
loop
enter
pop
(bad)
imul
adc
pop
inc
ret
cli
test
ja
cld
sar
sbb
and
jo
outs
dec
in
hlt
movs
xchg
aam
fiadd
cmp
sbb
mov
lar
lds
cmp
cmp
adc
push
xchg
jle
movs
mov
movs
xchg
adc
add
inc
in
cmps
or
daa
call
cmc
inc
into
mov
dec
inc
pushf
mov
xor
loopne
add
std
loope
mov
stc
xchg
jbe
xor
ins
hlt
pop
lahf
adc
and
in
inc
or
xchg
mov
inc
xor
outs
je
xchg
cli
mov
enter
sbb
mov
mov
shl
push
cli
adc
(bad)
stos
mov
lods
bound
jb
push
mov
ja
sbb
mov
enter
ds
rcr
jno
dec
sub
pop
fisub
and
out
dec
lods
loope
repz
pushw
das
mov
out
mov
inc
xor
xchg
and
mov
movs
retf
ret
jmp
aaa
call
mov
mov
inc
push
fcompp
mov
jbe
(bad)
lock
in
retf
xchg
fcmovu
int
mov
adc
test
rcl
xchg
or
push
mov
mov
mov
test
mov
aaa
adc
lods
data16
push
dec
out
or
mov
cs
dec
aas
add
cmp
inc
cmp
push
adc
xchg
and
popa
push
mov
loop
add
or
ret
popa
mov
lods
add
inc
xchg
sub
ja
mov
or
aas
in
xchg
push
push
div
jno
adc
ret
jbe
push
hlt
cmp
(bad)
cs
add
sahf
dec
pop
ret
add
aaa
pop
mov
push
adc
and
push
or
or
dec
mov
iret
cmc
imul
fmul
add
add
fucom
push
pusha
nop
mov
(bad)
sub
mov
outs
cmp
jle
jl
push
movs
popf
sbb
in
sbb
push
scas
dec
enter
iret
int3
pop
push
adc
add
jl
jecxz
mov
popf
jecxz
gs
imul
or
test
push
sbb
xchg
fdivr
xchg
es
xchg
adc
fwait
xlat
mov
push
mov
push
dec
jns
mov
mov
ins
hlt
fs
adc
lea
ins
adc
sar
mov
(bad)
retf
xlat
cmp
jmp
and
mov
loopne
xlat
push
mov
pop
jnp
jnp
dec
push
sbb
sub
imul
js
jl
or
lods
loopne
mov
enter
lahf
shr
jno
xchg
loope
ins
fdiv
inc
aam
mov
inc
retf
imul
dec
mov
(bad)
shl
arpl
sbb
(bad)
mov
xchg
in
outs
test
mov
sub
stos
inc
call
inc
pop
adc
mov
(bad)
jp
in
xor
ret
ins
ffree
loopne
mov
ret
cmps
sub
inc
mov
lds
popa
mov
mov
scas
shl
sti
xor
fstp
aad
in
add
sbb
dec
pop
daa
mov
sbb
pop
xchg
shr
scas
sub
mov
retf
clc
pop
std
xor
or
outs
cmps
lock
jne
movs
xchg
mov
mov
aas
or
cld
cmps
dec
cmp
lods
jg
stc
lea
dec
or
in
mov
in
add
loope
add
xor
inc
cmp
test
cld
sub
sbb
addr16
out
xchg
ds
call
xor
add
clc
adc
cld
loopne
dec
enter
cmp
xchg
mov
cmp
or
repnz
xchg
jecxz
xchg
loope
jnp
fwait
sub
(bad)
cmp
addr16
outs
aad
out
dec
xor
mov
aas
dec
das
neg
test
fnstenv
pop
cmc
dec
inc
push
shl
hlt
iret
loop
repz
cmp
jp
add
push
mov
adc
mov
mov
call
add
mov
jp
fdivr
(bad)
shl
xchg
lods
inc
cli
js
add
xchg
lock
sbb
pop
sub
mov
cmp
fyl2xp1
cmp
add
call
mov
fiadd
bound
ret
inc
cmps
add
mov
adc
scas
mov
mov
push
add
iret
ins
dec
data16
leave
movs
add
std
retf
mov
rol
(bad)
sub
cmp
xor
fwait
dec
(bad)
mov
mov
push
in
mov
aas
cs
xchg
out
jg
in
jne
es
test
fistp
push
and
jle
pop
and
push
pop
int3
sub
xchg
mov
mov
dec
in
sub
mov
pop
(bad)
adc
pushf
test
xchg
cmp
mov
scas
ror
mov
dec
outs
cli
dec
test
dec
mov
fisubr
jo
pop
cmp
test
out
or
cmp
and
in
into
push
mov
loope
lock
add
jmp
jb
adc
loope
jns
repnz
xchg
test
scas
sbb
movs
push
and
stc
mov
pop
(bad)
jg
lods
adc
out
inc
adc
call
es
or
mov
fdivr
leave
je
mov
push
cmps
adc
hlt
xor
test
or
ins
pop
dec
jl
ret
dec
ror
xor
or
xor
mov
sub
cmp
mov
mov
shl
fdivr
or
xchg
fst
pop
scas
(bad)
mov
adc
add
dec
jmp
sar
retf
mov
(bad)
xlat
push
call
retf
rcr
mov
pop
leave
xchg
mov
adc
sbb
jns
sub
sub
jecxz
call
pop
sub
adc
iret
clc
mov
push
jle
daa
movs
or
fcomp
xchg
and
test
fwait
xor
(bad)
cwde
pop
and
and
repz
push
or
dec
arpl
fnstsw
shr
mov
mov
pop
lock
push
int
mov
pop
cdq
mov
mov
xlat
xor
xchg
jb
fadd
shr
shl
cmp
movs
mov
sbb
jo
loope
lods
xchg
xor
fcom
js
arpl
pop
int
push
cmp
inc
cwde
sub
sbb
add
sbb
jg
mov
fld
or
fiadd
mov
xchg
iret
(bad)
arpl
idiv
test
mov
stos
lods
inc
cs
dec
in
stos
in
mul
xadd
loopne
pop
and
sub
ins
les
cdq
neg
(bad)
movs
lods
js
sbb
scas
push
hlt
and
scas
pop
leave
mov
repnz
data16
adc
push
lahf
adc
jg
sahf
in
loopne
mov
and
adc
aaa
sub
cli
pop
ss
pop
cs
aaa
dec
es
push
sar
pusha
push
daa
pop
dec
movs
lock
pop
(bad)
jp
fnstsw
and
mov
imul
std
add
fsub
sub
cmps
xchg
imul
mov
xor
stos
inc
(bad)
fs
pusha
stos
idiv
mov
jo
lods
jmp
mov
and
scas
(bad)
pop
jmp
cli
jmp
popf
mov
popf
icebp
loopne
sub
mov
push
mov
addr16
sub
hlt
mov
sbb
outs
jge
in
inc
pusha
adc
dec
adc
jne
imul
sbb
pop
mov
pop
dec
and
ins
inc
mov
mov
mov
sub
cmp
lods
(bad)
test
fistp
cdq
push
bound
lock
ret
cmp
sub
pop
aam
push
mov
fimul
mov
inc
outs
jns
ins
cs
(bad)
aad
inc
pop
push
and
sub
ins
sbb
out
xor
mov
cmp
and
sar
leave
pop
cmp
std
outs
call
ja
arpl
adc
nop
xchg
sub
shr
mov
mov
mov
in
fsub
hlt
jo
cmps
mov
cmp
pop
jmp
pop
mov
mov
sti
cwde
pop
mov
shl
cs
xchg
or
mov
xchg
mov
lods
pop
rcl
repz
pop
into
sbb
pop
cmc
inc
ret
and
dec
aas
call
lods
sub
fwait
cmps
push
xchg
mov
lahf
popf
push
mov
enter
xlat
add
xor
or
push
sub
or
xor
dec
pop
mov
adc
mov
cmps
xor
jns
mov
sti
pop
push
and
mov
jmp
stos
mov
fwait
out
xor
pop
fistp
xor
nop
sub
add
mov
lods
mov
mov
loop
sbb
sub
out
xchg
call
add
mov
out
shl
push
loopne
fadd
push
iret
pop
mov
push
jnp
and
adc
orps
test
mov
addr16
loopne
mov
mov
ret
call
sbb
push
pop
or
pop
mov
mov
lds
jecxz
and
pop
arpl
mov
mov
div
ror
call
xchg
out
jl
and
cmps
jbe
arpl
setno
push
bound
sbb
loopne
adc
sub
dec
ins
aam
cmc
cmp
jno
retf
arpl
(bad)
idiv
shr
fbstp
xor
push
lds
ins
xor
push
call
icebp
fwait
xchg
out
cli
sbb
jle
pop
mov
dec
daa
(bad)
les
mov
push
(bad)
mov
fidiv
add
push
xchg
outs
pop
pop
inc
cmp
outs
sub
sbb
fmul
test
shl
dec
std
mov
push
popf
gs
mov
movs
jecxz
xor
sub
lods
mov
test
cmp
xor
xchg
sbb
push
int
mov
sub
adc
pop
cs
fadd
push
push
rol
push
mov
pusha
dec
sbb
xchg
pop
mov
jo
fiadd
push
loopne
sbb
std
xchg
mov
hlt
ds
xor
mov
cmp
jecxz
pop
lds
mov
adc
popa
add
mov
(bad)
mov
push
(bad)
mov
(bad)
jo
push
jmp
sbb
push
cmp
fnsave
xchg
mov
outs
push
and
in
add
into
or
xchg
loope
push
aam
popf
xchg
lock
les
add
jno
add
inc
fstp
mov
cmp
call
cdq
mov
dec
jmp
xchg
lahf
fsub
fdiv
mov
in
fadd
jge
push
xchg
aad
and
sub
clc
dec
and
sub
push
sbb
xchg
sbb
ins
mov
(bad)
sbb
repz
sub
or
pop
popa
sbb
xlat
and
frstor
not
jo
adc
sub
test
fdiv
enter
ror
fld
push
imul
das
out
or
and
mov
dec
jmp
ja
je
mov
aad
neg
mov
repnz
les
mov
pop
test
pusha
mov
and
mov
cdq
inc
sub
(bad)
pusha
sbb
and
or
(bad)
stc
adc
mov
lock
add
scas
retf
or
and
(bad)
cld
repz
and
ret
mov
cmp
jo
adc
xchg
shl
xor
mov
es
retf
int3
ss
cmp
outs
ins
xor
out
jmp
popf
and
mov
out
sub
or
out
sbb
std
jbe
(bad)
addr16
lock
push
pop
rol
loop
and
(bad)
jmp
add
hlt
pop
shl
bound
stc
or
call
fs
in
loopne
inc
mov
cdq
sbb
loop
rcl
mov
stc
adc
and
stos
cmps
cmp
or
pusha
daa
loope
int3
jg
push
pop
pushf
sbb
xlat
xor
and
xchg
push
xor
sbb
repnz
sbb
mov
and
call
test
test
jne
sti
xchg
cmc
test
push
jp
sahf
push
jne
mov
movs
jbe
rcr
cmps
cmp
out
push
icebp
dec
add
int3
push
rcl
or
lea
mov
fnstcw
pushf
call
sbb
dec
push
inc
inc
push
sub
or
in
mov
or
cwde
enter
jns
imul
xchg
test
mov
sbb
cmp
mov
les
jo
jae
xchg
mov
fmul
ins
in
sahf
hlt
pushf
xchg
mov
xor
dec
mov
sub
xchg
inc
and
loop
push
xchg
call
or
fst
in
dec
idiv
inc
pusha
scas
cmp
jbe
jp
inc
mov
lds
xor
rcl
cmps
outs
test
jnp
pop
jne
je
std
out
loope
mov
punpckhdq
mov
mov
pop
cmps
pop
mov
xchg
fcomp
out
jno
xor
popa
adc
mov
dec
sbb
and
ret
cmp
imul
lods
cmp
scas
xor
pop
push
push
or
sub
fwait
pop
iret
outs
lea
(bad)
xchg
jp
daa
mov
jbe
mov
mov
push
ret
js
lahf
sbb
jbe
xchg
ds
xchg
sbb
cdq
nop
inc
repnz
inc
adc
scas
mov
pop
adc
scas
xchg
jns
cmp
sbb
call
in
call
fs
popa
sbb
mov
jecxz
xor
sub
or
dec
les
pop
or
scas
inc
adc
inc
stc
outs
cmps
pop
push
and
push
and
enter
repnz
mov
stc
(bad)
push
in
add
enter
sbb
mov
adc
jg
push
out
cmp
(bad)
jbe
cdq
stos
sbb
mov
dec
cld
sti
in
mov
mov
aaa
pop
stos
fisubr
mov
enter
popf
(bad)
mov
pop
fsubrp
add
(bad)
mov
fs
jno
jae
mov
push
jge
push
dec
and
loop
cmp
mov
in
out
movs
fcom
or
or
sbb
lds
aas
inc
ret
mov
sbb
xchg
push
push
sub
or
push
jge
mov
not
retf
mov
cmps
ds
cmc
outs
xor
aas
and
push
movs
xlat
jnp
pop
gs
fmul
aas
adc
ret
cmp
lahf
pop
push
scas
popf
cmp
mov
or
in
sub
fwait
call
add
rol
repz
push
sbb
hlt
addr16
rcr
nop
stc
mov
mov
mov
(bad)
lds
ins
hlt
xchg
and
popa
push
mov
jo
xor
cmp
das
scas
xor
xor
fadd
or
bound
mov
lods
xor
in
mov
aas
pop
inc
xor
bound
mov
iret
jmp
cld
hlt
mov
enter
dec
rep
mov
pop
dec
cmp
mov
loop
push
sbb
cs
std
xor
es
dec
aad
fnstenv
or
mov
out
jo
xchg
int3
out
sub
lahf
(bad)
mov
xchg
jl
xchg
popf
jle
jbe
jb
sub
repnz
(bad)
aas
mov
mov
cmc
xchg
retf
push
lods
pop
xor
test
sub
sub
add
push
dec
pop
cmp
sub
cld
jbe
and
movs
in
xchg
loope
inc
in
pusha
fadd
popf
js
inc
adc
(bad)
jge
rcl
(bad)
dec
inc
or
ja
ret
ds
add
scas
outs
push
cli
add
cmp
neg
rol
out
jae
cmps
ja
push
ds
cmp
xchg
lods
and
adc
add
mov
mov
sbb
fsubr
out
pop
and
test
jb
push
mov
cmp
adc
fimul
scas
scas
cmp
xor
fldenv
iret
pusha
dec
adc
int3
in
sbb
mov
dec
stc
push
mov
mov
or
ins
pcmpgtb
cwde
lods
pop
in
loopne
int3
mov
xlat
outs
add
je
(bad)
into
fistp
cmp
and
ja
inc
xchg
xor
pop
inc
repnz
shr
pop
int
cmp
fisub
cwde
pushf
xor
mov
inc
(bad)
out
cld
xor
jp
dec
ja
cmc
movs
mov
cmps
sub
and
frstor
pop
mov
lods
pop
inc
cmp
(bad)
cmp
xchg
fstp
loope
sbb
or
mov
jmp
push
out
out
jg
mov
loop
sbb
push
out
fnsave
ficom
hlt
jmp
out
dec
ins
add
sahf
stos
imul
adc
mov
repnz
popf
rcr
cwde
sub
mov
idiv
(bad)
xchg
push
push
shl
js
dec
adc
mov
push
pop
cmp
pop
xchg
es
scas
rol
xor
call
test
mov
mov
jbe
push
out
stos
mov
mov
aam
ret
out
inc
fadd
and
scas
sbb
push
jo
and
loope
cmp
aam
or
push
imul
cli
and
mov
jno
cli
add
cmp
or
test
push
popf
mov
retf
sbb
mov
aaa
cmp
adc
imul
lds
jbe
clc
cmp
inc
daa
dec
dec
retf
jo
ud2
pusha
inc
sub
jb
shl
cmc
rol
add
cmp
stc
mov
dec
add
call
pop
iret
or
sbb
popa
popa
push
jb
hlt
ins
in
jae
std
push
pop
push
sub
jecxz
leave
push
or
std
sbb
jecxz
xor
mov
mov
pop
repnz
outs
fsubr
push
mul
ins
push
jne
ja
mov
mov
mov
adc
and
imul
int
stc
cmp
xchg
push
fwait
push
das
hlt
ror
pop
mov
nop
sbb
jl
jg
and
out
jg
(bad)
jno
jmp
cmc
hlt
mov
shl
fcom
fadd
add
das
in
popf
add
mov
sbb
and
dec
mov
adc
outs
int3
or
outs
or
jp
push
ss
mov
lahf
cdq
fistp
sub
shl
cli
xor
xor
sub
je
push
mov
mov
jne
ins
sbb
ret
cmps
lods
dec
dec
xchg
(bad)
icebp
jg
dec
ins
push
sub
ins
fcom
adc
push
movs
xchg
(bad)
data16
jb
stc
adc
dec
mov
fst
int
jmp
mov
test
adc
in
mov
push
test
mov
je
adc
ja
ret
cli
push
jle
cmp
lods
lods
call
inc
mov
js
int
scas
inc
stc
jp
movs
(bad)
push
mov
sub
mov
adc
push
repz
sub
pushf
add
adc
mov
pop
fwait
sbb
call
adc
cmp
mov
push
mov
xchg
test
int
fsub
out
sub
sbb
fmul
dec
aam
sbb
jae
fwait
dec
loope
cli
lock
daa
and
aas
jmp
mov
(bad)
scas
in
scas
pusha
hlt
leave
dec
fisub
jnp
movs
inc
mov
pop
xor
out
(bad)
pop
repnz
and
popf
mov
aaa
sub
aam
mov
ss
and
gs
lds
push
retf
xchg
test
pop
sub
xchg
mov
mov
stos
test
loopne
inc
mov
adc
aad
ret
xchg
sub
cmp
ja
xor
or
jnp
mov
loop
jns
push
jno
cmp
mov
mov
pop
mov
cld
or
sub
iret
clc
int
int3
xchg
out
popf
jnp
les
sbb
daa
sbb
pop
push
retf
jns
adc
fimul
mov
repz
cld
stos
push
test
in
ja
mov
aas
or
ins
mov
and
mov
push
js
inc
(bad)
retf
and
pop
add
push
(bad)
pop
pop
(bad)
mov
jae
les
mov
dec
sub
int3
out
test
pcmpgtw
mov
push
cmc
mov
les
push
mov
add
xchg
jl
mov
or
pop
mov
xor
jnp
fild
lea
push
pusha
scas
cmp
(bad)
jbe
ret
dec
in
jae
pop
les
scas
aad
nop
mov
out
test
rcl
js
add
into
(bad)
xchg
js
imul
mov
add
xchg
cmp
mov
popf
je
pop
(bad)
or
ret
out
cmp
inc
pop
jb
adc
(bad)
cmp
jl
addr16
aam
dec
add
sub
cld
mov
bound
(bad)
rcpps
jmp
mov
inc
in
repz
sbb
sub
mov
dec
test
jmp
pop
or
int
inc
cmp
jp
lods
sub
and
mov
push
mov
inc
mov
aam
xlat
ret
dec
mov
loop
mov
ret
pop
outs
lds
xor
aam
lahf
sub
dec
cdq
adc
mov
ja
pop
popa
into
(bad)
sub
stos
sub
js
and
mov
pop
cmp
call
nop
fnsave
dec
or
call
bound
adc
xchg
inc
nop
and
or
sub
push
cs
pusha
xchg
int3
sub
xchg
mov
push
imul
push
lods
neg
xchg
pop
jb
fnstenv
(bad)
movs
sar
sti
lahf
loopne
sbb
add
push
xlat
repz
out
(bad)
std
and
rol
and
push
inc
mov
bound
mov
or
dec
and
stc
into
mov
fisubr
ds
push
stos
add
das
mov
push
js
nop
out
int
pop
outs
iret
bound
mov
mov
das
sub
lea
retf
in
push
mov
out
data16
vpcomnequd
or
adc
or
xchg
in
cmps
sbb
sti
fisttp
sti
push
push
dec
or
xor
push
and
movs
xchg
out
adc
int3
imul
add
and
push
aad
call
push
das
retfw
call
fstp
mov
out
adc
in
int3
push
mov
nop
inc
cmp
leave
xchg
jae
xor
enter
arpl
mov
imul
(bad)
cmp
std
xor
mov
push
inc
aad
jmp
cdq
jp
leave
or
pop
leave
sub
inc
outs
scas
and
shl
cdq
adc
test
fdivr
adc
mov
pop
mov
mov
movs
gs
lods
jge
ja
addr16
inc
push
out
dec
stos
pop
dec
cwde
not
adc
ins
inc
and
mov
enter
and
int3
arpl
cs
popa
or
pushf
push
and
out
cmc
fwait
hlt
xor
shl
ins
mov
out
xchg
call
cli
sahf
dec
fwait
ss
or
xchg
div
iret
or
sar
cmp
jb
sbb
and
xor
sti
clc
inc
push
inc
xchg
mov
scas
inc
and
xchg
jnp
stos
mov
inc
scas
mov
imul
js
mov
adc
cmp
shl
outs
sub
push
sub
jg
dec
pop
mov
lock
ds
lods
fadd
lock
mov
jb
and
adc
push
mov
popf
mov
dec
adc
pop
in
jecxz
and
mov
cwde
sbb
loopne
xchg
inc
pop
adc
movs
cmp
pop
jbe
xor
fwait
imul
mov
popa
cs
mov
adc
(bad)
into
jmp
dec
mov
mov
repnz
fs
inc
scas
cdq
sti
inc
outs
and
sbb
fcmovb
mov
rcr
and
sbb
sbb
fucomi
sub
int3
mov
fcmovnb
dec
daa
sahf
pop
push
xchg
js
xchg
mov
cmp
aas
xor
or
mov
mov
test
pop
mov
enter
stos
ret
xchg
add
stc
repz
dec
popf
int3
push
push
stos
add
and
iret
cmp
xor
neg
movs
lock
leave
jbe
jno
lock
mov
fcmovnu
dec
or
mov
jo
test
dec
sbb
ds
call
jne
test
es
add
popf
adc
and
outs
pop
sbb
push
inc
add
retf
jae
fcom
inc
xchg
data16
jo
sbb
push
and
adc
mov
fsub
xor
mov
add
mov
es
clc
dec
add
jae
or
lods
xchg
add
loope
cmp
sbb
(bad)
std
nop
stos
hlt
pop
nop
pop
rcl
and
(bad)
cmp
jb
sbb
neg
jle
jmp
sar
fistp
or
loope
arpl
push
sub
push
shl
bound
imul
cwde
repz
dec
js
data16
mov
dec
mov
movs
inc
gs
std
xor
repz
sub
lods
retf
sar
mov
push
push
xor
inc
xor
jnp
jmp
out
(bad)
push
jmp
jae
aaa
sbb
out
mov
mov
xchg
dec
dec
add
stos
cmp
(bad)
and
or
stc
cmp
mov
sub
xor
adc
outs
ss
and
inc
test
daa
cmps
ficom
into
aam
fadd
fidiv
jp
and
arpl
add
or
adc
inc
(bad)
push
popf
aam
mov
sub
lahf
aad
(bad)
mov
jns
xor
and
movs
shl
mov
add
adc
rol
and
mov
pop
cld
lods
xchg
adc
rol
jns
sbb
mov
ja
sub
stc
fadd
and
dec
mov
mov
mov
mov
aaa
sub
retf
(bad)
loop
inc
inc
inc
and
das
push
dec
clc
mov
mov
leave
das
and
xlat
mov
pop
pop
cmp
mov
aam
aam
enter
cmps
int
mov
repz
xor
or
or
jge
xor
jmp
push
nop
cmp
or
out
in
add
mov
shl
fcom
les
ins
outs
fs
inc
cmp
or
lds
mov
jno
mov
lods
xor
mov
outs
popf
inc
add
sub
push
(bad)
std
inc
movs
sub
sbb
ficom
in
pop
dec
mov
retf
cmps
mov
(bad)
xchg
fcmovb
addr16
pop
mov
pop
adc
jl
cli
shr
mov
ret
jl
jb
fsub
mov
(bad)
dec
push
pop
fidiv
call
mov
outs
jl
cmp
xchg
sub
cli
fiadd
dec
inc
in
call
div
dec
or
mov
add
fidiv
add
sbb
punpckldq
mov
inc
mov
mov
lock
mov
nop
mov
mov
jge
retf
sti
mov
adc
adc
out
jb
movs
push
nop
mov
add
ins
adc
or
push
aas
xchg
xlat
adc
pop
lods
inc
push
ror
(bad)
es
test
mov
mov
sbb
(bad)
in
adc
test
gs
aad
pusha
dec
add
out
inc
fiadd
aam
and
retf
sbb
xchg
pushf
jp
repz
sub
push
dec
or
push
jae
loope
pop
dec
out
retf
arpl
xchg
in
movs
call
ja
ficom
(bad)
xchg
fisttp
iret
dec
xor
hlt
xor
cmp
test
mov
loop
mov
inc
dec
js
rol
dec
sbb
fs
test
xor
or
out
ds
sbb
jmp
rol
pop
add
call
add
loopne
fidiv
imul
pushf
add
pop
or
mov
out
jle
or
shl
or
mov
iret
inc
sub
push
and
cdq
adc
scas
in
push
fld
cmp
pop
mov
push
push
mov
pop
add
outs
popf
inc
cld
xchg
adc
cmp
xor
mov
mov
or
jo
cmps
inc
repz
mov
aas
loopne
retf
std
cmp
pop
push
mov
lahf
xchg
ins
and
mov
fcomp
sti
int3
fcom
inc
cwde
sbb
cmp
sbb
ja
shl
fadd
not
lahf
adc
fst
xchg
jl
xor
xor
das
jle
ret
sbb
in
pop
inc
inc
cli
in
popf
dec
pop
and
sub
movs
jmp
test
test
cwde
es
mov
mov
cmp
adc
xor
jns
dec
xchg
xor
jb
jne
jmp
dec
aam
inc
and
fwait
ror
(bad)
xor
mov
xchg
fs
test
mov
jb
ret
call
cmp
or
cmp
sar
leave
mov
add
into
retf
arpl
mov
ror
in
cs
and
adc
cli
push
fsub
stos
sub
outs
lods
cld
gs
xor
popf
pop
into
dec
adc
push
xor
jns
into
sub
test
ins
inc
pop
xor
dec
push
cmp
dec
adc
aaa
jmp
cld
mov
push
ret
mov
dec
(bad)
cli
ja
fidivr
add
movs
push
push
call
movs
mov
lock
sbb
sbb
xchg
cmp
pop
cmp
dec
sbb
jecxz
mov
pop
frstor
sbb
shr
or
cmp
push
mov
stos
sbb
mov
add
or
scas
dec
jge
mov
out
cmps
and
in
shl
loope
(bad)
cmp
sub
je
movs
paddusb
mov
push
add
inc
data16
sti
icebp
fistp
pop
(bad)
retf
in
mov
jg
sti
mov
dec
mov
inc
gs
and
sbb
jmp
dec
mov
push
jp
xchg
push
clc
and
test
fdivr
mov
inc
jb
loop
pop
xor
dec
aas
out
mov
dec
ficom
pop
imul
mov
push
das
add
cmp
sbb
pop
out
fwait
sub
enter
loope
shl
mov
or
imul
cli
jne
fisubr
xor
xor
je
fmul
pop
dec
mov
xchg
push
fmul
call
pop
scas
aas
sahf
pop
aaa
jne
jle
jge
pushf
(bad)
mov
(bad)
hlt
sbb
test
dec
cmps
adc
fsubr
mov
dec
sub
jge
test
push
mov
sub
mov
repnz
cmc
sbb
cmc
push
mov
and
push
push
sbb
or
retf
sbb
xor
mov
int
or
mov
lds
mov
popf
inc
xchg
or
dec
jg
das
or
movs
lods
mov
mov
sbb
pop
daa
retf
bound
mul
sub
mov
retf
inc
jp
call
imul
mov
pop
ds
aas
(bad)
push
pop
inc
fldenv
lods
mov
lea
enter
adc
(bad)
popa
xlat
sub
xchg
push
xor
jns
dec
xchg
mov
jp
inc
sub
xchg
pop
pop
or
test
(bad)
push
xor
add
fisttp
cmp
clc
xchg
(bad)
xchg
(bad)
fisttp
pop
aad
test
(bad)
je
or
mov
aam
mov
jl
(bad)
call
dec
es
mov
fwait
lock
jmp
sub
sbb
into
cwde
and
movs
mov
ja
stos
popa
push
sbb
leave
push
cwde
add
jnp
data16
sbb
hlt
jmp
cmc
jns
mov
push
loope
mov
push
push
push
pop
in
inc
(bad)
mov
fcom
mov
mov
mov
in
mov
(bad)
adc
mov
fcmovb
ins
xlat
ret
mov
or
std
cs
pop
repz
pop
mov
mov
ins
pop
int3
xchg
jns
sti
mov
dec
repnz
jmp
adc
push
mov
dec
cmp
imul
jmpw
push
adc
sub
or
repnz
or
mov
femms
jmp
mov
mov
adc
xchg
in
cld
cmp
and
add
fwait
scas
lea
xor
bound
add
lds
and
xchg
sbb
jbe
jmp
aad
add
pop
xor
jle
dec
xchg
std
xor
test
adc
fisub
ror
push
cld
ss
movs
aas
mov
mov
sbb
ror
cmp
call
push
and
dec
sub
mov
shl
add
mov
shr
push
int3
jecxz
ret
inc
push
inc
and
jns
in
lahf
jmp
adc
and
daa
data16
out
cld
push
pop
jmp
inc
mov
push
rcl
adc
add
aam
or
call
pop
add
and
mov
inc
or
hlt
rol
imul
je
push
lock
cmp
(bad)
mov
ins
jecxz
retf
mov
or
and
sbb
rol
fisubr
jle
pop
lahf
cdq
mov
or
outs
pop
lea
shl
call
lea
xor
in
xor
dec
add
dec
or
lds
cwde
ins
fmul
inc
outs
aad
sub
out
and
mov
jg
xor
jge
loope
mov
aad
mov
ret
sub
fs
daa
or
jle
repnz
fmulp
xchg
sbb
fld
mov
cmp
mov
rol
imul
add
mov
movs
fld
stc
fwait
adc
and
push
mov
cwde
xor
repz
mov
or
mov
enter
imul
clc
adc
sti
adc
dec
xchg
sbb
cmp
or
mov
lods
frstor
in
mov
std
jns
int
popf
or
in
ret
mov
addr16
aad
out
cs
stos
in
popa
pop
mov
ds
icebp
ja
ret
xor
shl
cli
lock
(bad)
in
dec
ins
clc
mov
jl
and
(bad)
xchg
out
push
mov
xchg
imul
or
leave
sub
push
cmps
cmc
pop
dec
xchg
(bad)
test
ja
aas
pop
pop
pop
daa
and
cmp
xor
icebp
mov
js
neg
inc
add
mov
inc
inc
mov
or
xor
mov
jo
or
mov
aad
dec
nop
pop
xor
mov
scas
mov
or
enter
sbb
nop
or
stos
jle
cmp
mov
add
outs
mov
adc
mov
jmp
int
retf
jmp
stos
sbb
mov
arpl
cli
nop
cmp
adc
dec
jecxz
outs
inc
jg
xchg
xor
cmp
xchg
adc
pop
lock
and
push
jp
loop
add
push
adc
fs
sbb
stc
xor
ins
cmp
in
inc
sub
lods
sub
ds
rcr
cmp
adc
call
xchg
cmc
stos
mov
push
mov
mov
out
fs
enter
push
and
pop
int3
ret
jne
cmp
stc
xor
in
and
mov
push
arpl
hlt
int3
xchg
xchg
stc
in
jle
dec
dec
mov
repz
push
xchg
cdq
fstp
push
fisubr
mov
cmp
or
and
es
pop
rcr
pop
fbstp
nop
xor
movs
cmp
sub
lea
push
into
sub
out
mov
aad
fisub
jl
xor
mov
out
mov
xor
aad
pop
ss
scas
add
leave
dec
pop
pop
fstp
ficomp
icebp
xchg
cmp
sbb
or
sub
lods
movs
loop
push
jge
push
xor
ss
je
aaa
(bad)
aad
jns
adc
xchg
cmp
inc
dec
adc
jle
imul
out
lods
aad
jns
and
sbb
or
xor
add
(bad)
lods
mov
xchg
lods
mov
mov
push
loope
pop
arpl
xchg
mov
stos
or
mov
dec
sub
push
or
mov
adc
aas
inc
mov
fsubr
add
icebp
jbe
adc
(bad)
xchg
jae
pop
loop
jg
or
popa
hlt
adc
imul
and
push
jge
cdq
mov
(bad)
fisubr
mov
sti
sbb
es
call
jno
dec
stos
xchg
ret
jne
and
xchg
pop
push
mov
cmc
dec
rcr
sbb
mov
add
add
push
bound
shl
push
adc
out
or
push
pop
pop
or
mov
or
ins
inc
pusha
scas
fsin
push
hlt
jb
jo
jns
movs
add
jae
into
adc
out
inc
aad
daa
stos
call
rcr
(bad)
fadd
or
ss
pop
jp
mov
aaa
test
aad
dec
(bad)
scas
push
jo
mov
ins
gs
(bad)
cs
cs
bound
pop
ins
cdq
add
jmp
mov
aam
push
ret
nop
and
inc
pop
leave
add
push
adc
jmp
dec
call
xlat
(bad)
xlat
push
jecxz
loopne
nop
xor
popf
sbb
mov
or
shl
pop
dec
or
dec
in
mov
cwde
pop
add
shr
add
dec
jns
dec
push
mov
mov
and
jmp
fiadd
(bad)
jge
cld
mov
sub
xor
push
loop
cmps
jmp
xchg
mov
jg
inc
push
push
lock
adc
ror
pop
cmp
in
cmp
mov
cmp
sbb
jne
jnp
sti
adc
xchg
xor
je
xchg
add
jae
mov
std
push
aam
add
inc
movs
bound
xor
jecxz
lods
dec
push
inc
sub
aas
rcr
clc
jnp
sbb
xchg
mov
xchg
add
cmp
js
sbb
push
fmul
push
int
fsubr
hlt
push
cmp
xor
leave
nop
dec
hlt
sbb
mov
dec
mov
iret
xor
(bad)
fdiv
aam
ret
mov
fimul
rcl
adc
repz
cmp
stc
out
call
jae
ret
das
mov
add
ret
jmp
xlat
dec
lea
stos
mov
cld
outs
or
or
jmp
sub
mov
ja
dec
imul
or
adc
clc
inc
dec
dec
ss
mov
dec
sub
ss
arpl
fucom
or
sar
sub
pop
les
pusha
mov
out
cli
call
ror
jb
jl
iret
push
repz
fwait
jno
and
imul
dec
xlat
pop
fiadd
dec
outs
iret
pop
ds
repnz
sub
dec
cdq
cmpxchg
mov
pop
out
cmp
es
out
call
test
inc
enter
cmp
gs
mov
mov
push
movs
rol
sbb
inc
das
mov
les
js
sub
xor
pop
ins
xor
jmp
bound
or
out
xchg
popa
sbb
adc
int
(bad)
cli
cmp
mov
movs
pop
mov
in
data16
sub
push
and
cmp
pop
sar
ss
ficom
inc
and
mov
dec
lds
mov
jbe
loop
dec
bound
and
scas
stos
jns
sti
xchg
inc
push
clc
fisubr
push
jo
lods
out
adc
hlt
mov
xor
cmp
mov
cmc
jg
adc
call
mov
mov
or
sub
out
or
pop
lods
repnz
jl
jo
dec
cdq
call
pop
and
mov
stos
cmc
out
and
lahf
lods
stc
outs
jecxz
xor
sub
mov
pop
inc
mov
push
or
retf
push
mov
fcom
aad
push
mov
fild
out
lahf
xor
sub
(bad)
pop
mov
rcr
addr16
xlat
pop
jge
shl
adc
mov
in
cli
movs
inc
push
push
dec
pop
mov
shl
push
shl
cld
sub
imul
dec
mov
and
fnsave
mov
movs
dec
add
fisubr
inc
aad
cmp
lahf
aad
enter
(bad)
mov
dec
pop
jmp
pop
std
mov
outs
cld
sbb
sbb
xchg
xor
scas
mov
jb
and
mov
jmp
jbe
and
les
xchg
and
js
ins
mov
in
(bad)
icebp
fcmovu
sub
jecxz
inc
cmp
aaa
mov
outs
out
adc
xchg
jp
loopne
fdiv
adc
gs
scas
cmp
mov
enter
mov
in
add
jp
sbb
mov
(bad)
(bad)
xchg
jl
icebp
mov
adc
or
mov
imul
pop
ror
cmp
xchg
jae
repnz
test
jae
test
or
cmp
sub
mov
pushf
fs
xchg
and
shl
icebp
dec
std
jle
mov
jne
fidivr
ror
loopne
xlat
xor
jae
and
adc
adc
sbb
sub
aas
gs
xor
push
lods
inc
xor
cmps
cdq
sar
loop
hlt
rcl
mov
inc
nop
shl
pop
loop
gs
out
add
or
loop
cmp
push
jne
stos
popf
jo
js
add
lods
pop
jecxz
sbb
jmp
adc
cmps
mov
popf
or
push
movs
pusha
add
inc
inc
dec
data16
and
shr
fadd
nop
jl
nop
arpl
mov
in
mov
popf
pop
inc
call
mov
fistp
mov
cmp
pop
(bad)
mov
fcomi
pop
push
fcmove
ret
les
or
addr16
test
mov
popf
jmp
jns
jl
aaa
cmps
add
repz
lods
mov
adc
sbb
jle
repnz
mov
sbb
mov
outs
pop
jle
sti
scas
adc
int
push
bound
(bad)
sub
cdq
clc
inc
clc
or
pusha
in
xchg
out
dec
scas
es
out
repz
jns
imul
jnp
xchg
jge
pop
movzx
ret
into
xchg
iret
push
inc
dec
cld
movs
and
cli
mov
xor
pushf
hlt
push
aas
neg
mov
daa
jl
mov
xor
shl
inc
adc
lahf
sbb
jbe
leave
xor
mov
popa
out
mov
jmp
jge
mov
dec
sti
aad
aam
pop
test
pusha
or
lock
scas
hlt
leave
iret
cmp
jnp
fiadd
or
add
push
retf
bound
jo
outs
xchg
sub
je
sub
call
les
mov
xor
in
mov
sub
ret
adc
lea
xchg
scas
xor
xchg
adc
pushf
je
cmp
jmp
pop
dec
mov
ds
lock
add
push
adc
gs
cli
cs
add
adc
and
imul
or
leave
cmp
sti
popa
imul
cmp
sbb
adc
(bad)
jmp
int
inc
stos
into
cmp
cld
retf
pop
sub
mov
inc
lds
push
pop
and
or
aaa
inc
repz
hlt
dec
sbb
icebp
(bad)
sub
test
(bad)
xor
pop
pop
inc
inc
cmp
retf
inc
jmp
fwait
push
xchg
sub
clc
xor
dec
cmp
rcl
scas
push
push
cli
test
sbb
test
test
lea
or
and
and
mov
pop
in
cmp
sub
lahf
movs
stos
adc
stc
mov
movs
leave
inc
xchg
xor
jg
ja
pusha
movs
cmp
jno
enter
push
movs
das
lock
pusha
mov
fdivr
pusha
push
into
hlt
mov
ja
loop
(bad)
dec
sbb
mov
sbb
mov
cmp
cmp
mov
cwde
js
sar
xchg
(bad)
mov
in
lock
inc
push
into
sti
sub
inc
cmp
(bad)
jg
push
add
push
nop
inc
pop
shl
loope
add
jb
mov
cmp
fdiv
and
push
sbb
stos
aam
mov
test
into
(bad)
cmp
jnp
sbb
jge
push
cmc
or
in
mov
push
mov
jp
push
(bad)
dec
ins
arpl
sub
jns
(bad)
int
dec
mov
mov
mov
push
sub
sbb
dec
stos
(bad)
mov
push
fwait
inc
ret
scas
outs
ins
inc
test
lds
mov
jmp
cs
xchg
mov
out
pop
adc
loope
stos
xchg
mov
xchg
dec
icebp
sbb
nop
cmp
mov
js
mov
adc
shl
sti
adc
jge
das
inc
xchg
pop
adc
enter
xchg
adc
mov
mov
xchg
dec
mov
arpl
sbb
imul
sbb
pusha
imul
mov
mov
cmp
imul
mov
mov
rcr
fsubp
jbe
sti
and
es
sub
cld
test
jg
dec
xchg
push
sub
jns
aaa
movs
(bad)
std
test
imul
cdq
out
cmc
xchg
mov
ss
lahf
push
sub
ja
lea
push
leave
mov
in
mov
push
hlt
pop
fmul
shl
jmp
add
rcl
ins
cld
inc
imul
jo
or
lods
mov
mov
jp
sub
pop
push
clc
add
jbe
arpl
fdiv
aad
xchg
mov
test
lahf
add
fld
sub
mov
mov
sahf
stc
pop
and
imul
jbe
fdiv
sysret
in
shr
in
fidiv
mov
movs
daa
dec
sbb
cmp
adc
retf
adc
jns
ret
fwait
xlat
inc
sub
ret
fst
fst
int3
iret
out
das
mov
and
mov
mul
scas
mov
xchg
daa
mov
bnd
mov
mov
aad
sbb
aaa
cli
xlat
xchg
adc
xchg
fcom
ds
push
fcomip
mov
sbb
adc
pop
push
jns
out
imul
cwde
ret
retf
cmps
jae
add
push
or
test
jae
enter
jecxz
hlt
jo
fs
(bad)
imul
push
and
mov
rcl
sub
pusha
sub
add
inc
mov
scas
adc
dec
sbb
jecxz
test
das
loop
and
add
jno
int
ins
mov
mov
test
iret
in
push
test
in
icebp
mov
bound
ss
mov
in
loopne
sar
mov
or
sub
xor
pop
outs
cmp
rol
loop
xchg
mov
or
cmp
call
sbb
paddd
int
inc
push
in
fwait
loope
ss
push
jl
mov
mov
cmp
xchg
jg
retf
les
fadd
mov
sahf
lahf
xchg
rol
dec
ret
test
test
dec
les
dec
jle
test
sub
cmp
jnp
arpl
inc
in
movs
add
cmp
sub
adc
pushf
test
in
div
call
ret
call
xor
xchg
and
xor
xor
jmp
push
inc
mov
lock
fcomp
das
jmp
pusha
push
push
jno
or
aad
dec
mov
cmp
jge
push
adc
jne
xor
and
jo
jmp
ror
dec
xchg
mov
xchg
mov
xchg
das
inc
jb
pushf
cs
and
sub
mov
fdiv
push
pop
jmp
add
ja
push
out
push
lods
sbb
loop
cmp
rep
bound
mov
aas
sar
inc
pop
rcl
and
daa
sbb
cmps
cwde
enter
mov
inc
sbb
dec
pop
popa
mov
mov
lock
fisttp
push
and
xchg
cmc
xchg
push
add
das
retf
inc
data16
addr16
ret
jle
hlt
and
cmps
adc
jg
xor
mov
fcmovnb
aas
mov
popf
and
inc
outs
and
mov
mov
dec
inc
stc
dec
mov
pusha
jl
and
and
loope
xchg
jle
xchg
gs
cs
lods
repnz
push
das
loop
inc
sub
push
imul
movs
jmp
popf
mov
pop
cmp
shl
aas
mov
sbb
dec
imul
mov
mov
pop
dec
jae
shr
adc
or
(bad)
loope
scas
nop
(bad)
iret
jge
inc
pushf
lahf
lods
jns
fs
clc
mov
out
in
xchg
idiv
sbb
add
cmp
sbb
or
cmc
pop
dec
or
pop
sbb
jmp
jne
leave
or
sbb
in
ret
sbb
das
shl
dec
(bad)
int
out
mov
push
cs
xchg
fwait
jmp
adc
or
mov
adc
sti
test
loop
push
sbb
xor
mov
das
and
or
sbb
out
and
xchg
mov
push
js
push
mov
sub
cmp
pop
adc
ss
mov
imul
gs
mov
ret
leave
push
mov
mov
sub
xchg
ret
ds
arpl
sbb
(bad)
lods
std
ror
sbb
in
into
pop
movs
fld
mov
arpl
loop
aam
jae
push
jo
aaa
in
hlt
fisubr
jae
and
jmp
and
sbb
out
aam
loop
in
sbb
or
inc
rol
push
cmp
lea
pop
hlt
push
hlt
sahf
std
fmul
push
iret
or
test
push
inc
xor
add
ja
test
mov
retf
inc
loopne
mov
js
mov
inc
sar
dec
push
mov
xor
(bad)
cmps
cli
xor
in
xchg
jp
cmp
cmps
jp
push
xchg
test
(bad)
lods
enter
inc
or
mov
cmp
dec
(bad)
cmp
sti
(bad)
mov
pop
and
jnp
xchg
cmp
cli
xchg
pop
cmp
cmps
outs
cmp
(bad)
pop
outs
jae
push
pop
mov
cmp
xchg
dec
mul
fisubr
das
stos
sbb
inc
(bad)
mov
fild
icebp
jmp
sub
jb
pop
push
pop
shl
inc
scas
inc
(bad)
rol
sub
add
xor
jae
in
mov
jne
push
cmp
and
xchg
mov
dec
gs
popf
stos
and
xchg
fdecstp
shl
push
mov
sbb
rol
ror
sub
frstor
xor
mov
movs
test
jne
mov
cmp
outs
add
fbstp
dec
pop
test
adc
pop
push
retf
and
imul
mov
out
add
pop
dec
sar
outs
jecxz
popf
inc
cdq
les
xor
rcl
imul
fild
mov
inc
jne
sti
inc
movs
mov
cmp
sbb
in
or
sub
jne
and
out
pop
jmp
mov
xchg
and
cmps
stc
nop
push
mov
add
inc
repnz
inc
add
push
push
cmp
dec
cmp
mov
cmp
inc
adc
addr16
push
adc
dec
inc
test
std
movs
sbb
(bad)
outs
push
leave
fcmovne
adc
jecxz
(bad)
add
into
jne
cmps
daa
push
sub
xchg
mov
sbb
outs
and
mov
pop
out
in
and
lahf
(bad)
sbb
imul
mov
add
in
das
imul
popa
add
arpl
ins
lahf
jecxz
fmul
xlat
pop
pop
out
fsub
fnsave
dec
cmps
dec
mov
jnp
ror
cli
in
icebp
cli
xchg
popa
out
cmp
xchg
sbb
push
pop
ins
mov
ins
lods
ja
sti
out
cmp
inc
popa
cmc
push
test
pop
mov
xchg
loope
mov
sbb
mov
retf
push
loopne
jl
add
add
adc
ret
push
sbb
mov
jp
out
cmp
ins
ins
jmp
int
mov
fisub
dec
add
add
pusha
aad
push
movs
xor
in
(bad)
outs
and
mov
sub
(bad)
sub
jmp
xor
test
pop
es
and
cld
xchg
cli
xchg
dec
mov
fcmovnbe
repnz
dec
xchg
retf
xchg
scas
mov
jns
gs
mov
mov
xchg
pushf
mov
mov
(bad)
lods
pushf
les
retf
pop
in
inc
lods
(bad)
hlt
fnstsw
idiv
out
dec
sbb
cmp
out
in
std
adc
aaa
inc
mov
inc
push
test
pop
sbb
and
pusha
push
pop
jl
mov
scas
imul
cmps
je
sbb
es
test
loopne
lds
push
push
f2xm1
xchg
shl
(bad)
std
out
ficomp
add
ret
test
in
xchg
sar
pop
sub
xchg
mov
sbb
aam
fsub
xor
xor
cmp
dec
shl
gs
mov
jb
jae
sub
or
movs
pop
out
xchg
je
mov
or
dec
ror
(bad)
cmp
or
fsub
pop
add
dec
fs
daa
inc
cmp
cmp
retf
enter
sub
sbb
dec
lds
pusha
xor
jbe
mov
rcl
adc
data16
ins
(bad)
imul
xor
fbld
mov
mov
push
pop
dec
mov
mov
adc
inc
stos
mov
imul
push
in
push
loope
jmp
pop
inc
jmp
and
sbb
or
loope
fst
push
std
fwait
ins
xchg
dec
jnp
push
call
mov
es
in
adc
imul
ror
and
adc
mov
cmp
rol
lods
test
xchg
or
jg
(bad)
pop
dec
cmps
sub
iret
imul
sub
mov
sbb
imul
pop
mov
test
shr
push
pop
push
out
dec
cmp
ret
xchg
mov
cld
and
stc
mov
in
and
cwde
adc
cmc
leave
idiv
ds
push
das
out
xchg
pop
aaa
mov
inc
jmp
push
bound
jb
push
btc
popa
jo
jecxz
dec
cmp
push
in
or
imul
and
xor
inc
or
pop
mov
ss
aaa
(bad)
cmps
pop
pop
lods
xchg
sub
(bad)
xchg
fidiv
mov
mov
imul
jns
xor
or
pop
(bad)
je
shl
xchg
xchg
loope
jg
push
out
leave
adc
jae
cmp
es
(bad)
xor
and
cmps
and
sbb
idiv
xor
out
ja
cmp
cmovno
js
fstp
repnz
jmp
inc
mov
shr
outs
(bad)
gs
xchg
mov
or
jle
xchg
push
and
cmp
mov
mov
test
or
add
mov
mul
push
(bad)
sbb
cs
mov
lods
sbb
sbb
popf
(bad)
imul
mov
inc
cmp
cmps
sub
xor
add
hlt
outs
popf
push
mov
sbb
or
cli
mov
dec
jle
(bad)
jb
std
mov
and
dec
mov
mov
out
jmp
xchg
(bad)
and
nop
fcmovbe
imul
xchg
sahf
rcl
scas
js
sbb
nop
aas
inc
int
aam
sub
push
mov
cs
data16
or
inc
fild
and
mov
mov
cld
xchg
out
test
jg
test
jmp
mov
fdiv
bound
(bad)
xor
out
mov
sbb
outs
mov
in
dec
jl
inc
xor
push
retf
xchg
mov
cmp
add
or
xor
in
in
imul
jbe
in
dec
imul
pop
jno
cdq
xchg
dec
(bad)
jmp
adc
shr
xor
repnz
cmc
add
cld
and
jl
imul
aam
xor
ds
mov
cmovl
mov
mov
mov
in
ds
call
dec
xchg
out
or
leave
mov
inc
int3
data16
dec
push
push
popf
iret
mov
bound
xor
adc
push
(bad)
push
cmp
xchg
add
(bad)
mov
mov
jns
aad
stos
daa
push
dec
dec
inc
jg
push
ror
mov
pop
aad
sbb
inc
mov
mov
fsub
in
cwde
pushf
out
in
cmp
or
and
scas
(bad)
or
xor
outs
rcl
int
ud0
inc
and
out
mov
fwait
gs
mov
push
and
push
pop
pusha
ja
jge
fninit
std
aaa
aam
dec
jb
cmps
cmp
rcr
ret
aas
jl
mov
mov
sbb
push
pop
adc
sub
sbb
add
arpl
inc
and
cmp
and
retf
mov
loopne
inc
jb
cli
push
fmul
cmp
jo
push
mov
into
lods
aad
jnp
mov
cli
and
div
adc
mov
add
int3
into
inc
inc
mov
sbb
xchg
mov
or
dec
and
pop
sub
retf
movs
test
xor
and
enter
(bad)
adc
leave
jle
cmp
inc
xchg
mov
jecxz
inc
imul
sub
push
rcr
movs
lahf
jno
pop
cmps
dec
mov
pop
xor
xchg
fwait
stos
jl
jge
mov
daa
out
enter
call
xor
mov
mov
xchg
sub
mov
mov
mov
dec
sbb
jb
retf
cmp
in
jb
out
test
sub
add
jmp
xchg
jmp
push
ins
gs
mov
pop
xchg
pop
or
push
call
movs
cmps
std
lods
xor
mov
fs
bound
popa
sub
call
pop
ja
imul
test
imul
ficomp
dec
adc
xor
pop
cmp
lea
dec
jne
lods
gs
out
fnstcw
daa
(bad)
mov
pushf
cmc
scas
mov
dec
(bad)
sti
xchg
(bad)
mov
xor
mov
or
cmps
sbb
xchg
mov
addr16
es
jmp
cmp
ja
jle
bound
daa
in
gs
and
ror
inc
popa
arpl
add
cs
cmp
push
or
fisttp
mov
inc
jmp
mov
xchg
call
icebp
inc
in
cmc
pusha
scas
and
clc
xor
lock
push
push
dec
cdq
mov
(bad)
pop
push
inc
ficomp
retf
es
das
fwait
retf
jo
jne
arpl
xchg
bound
data16
shr
shl
dec
cmps
sbb
jae
xchg
retf
inc
ret
movs
add
outs
mov
cwde
aam
stos
push
iret
imul
push
adc
not
std
(bad)
(bad)
rcl
aas
sub
retf
inc
mov
inc
inc
push
mov
push
or
leave
mov
add
sbb
adc
push
popa
push
inc
or
stc
fcmovu
mov
push
mov
jnp
int3
ret
push
(bad)
pop
cmp
sar
arpl
stos
cmp
inc
repz
repz
or
mov
inc
add
inc
mov
imul
dec
shr
popa
pop
xor
mov
out
dec
adc
xchg
in
jle
je
xor
lea
jnp
jno
jae
outs
pop
not
movs
into
push
pop
jg
(bad)
mov
out
or
jne
xchg
xchg
(bad)
inc
sbb
loop
sbb
neg
mov
jmp
popf
pop
xor
xchg
adc
add
mov
or
inc
jg
int
mov
dec
push
or
loopne
add
sbb
mov
mov
jp
adc
cmp
mov
lahf
sahf
mov
add
mov
scas
inc
adc
ins
mov
shl
or
retf
adc
xchg
sub
ss
xor
fldcw
and
adc
pop
cmps
aam
scas
inc
outs
or
sahf
jle
sbb
shr
fwait
movs
icebp
cmp
int
sbb
loopne
push
repnz
xchg
jl
ins
push
rcl
adc
shr
pushf
lods
or
popf
shl
(bad)
sub
rol
pop
pop
stos
popa
push
dec
add
xchg
out
xchg
cmc
and
pop
aam
pop
(bad)
into
aaa
dec
and
mov
cmp
pop
std
rol
xor
add
jmp
repz
inc
enter
xchg
inc
test
cwde
mov
jg
les
jmp
xchg
shl
mov
add
dec
pop
bound
imul
mov
jge
aaa
popa
aad
test
dec
or
pop
mov
daa
jmp
cmps
not
add
jns
clc
pop
pop
adc
loop
icebp
or
bound
cmps
fisttp
icebp
xor
mov
xchg
sub
pop
inc
adc
mov
addr16
mov
push
(bad)
and
loop
fistp
cli
getsec
mov
jle
jno
adc
mov
sub
mov
icebp
fsubr
out
sbb
sahf
sub
xchg
(bad)
add
add
fidiv
fwait
sbb
push
adc
sub
mov
pusha
das
push
je
add
xor
gs
cmp
adc
xchg
xor
jnp
mov
cmp
scas
in
dec
ret
dec
fiadd
add
in
lods
pop
scas
cmp
mov
mov
push
pop
pop
lods
dec
mov
not
mov
pop
retf
xchg
mov
nop
mov
mov
int
jmp
push
xor
mov
jp
les
(bad)
mov
inc
dec
inc
mov
add
sbb
sar
cmp
pop
ins
ret
push
jp
fisttp
out
fadd
add
push
adc
in
mov
das
pop
das
das
cmp
xchg
and
fsubr
xor
std
(bad)
jnp
mov
pop
(bad)
xor
push
fnstsw
xchg
push
mov
(bad)
or
mov
xor
lahf
retf
enter
std
outs
mov
lea
inc
mov
ja
mov
test
push
mov
in
scas
test
sub
(bad)
aaa
inc
mov
sbb
or
out
pop
loope
cwde
cli
push
mov
out
jne
adc
ret
jmp
mov
cmp
dec
popa
or
or
inc
popa
cmp
jl
cmp
pop
test
aas
in
adc
xor
jg
cld
ins
and
repz
rcr
dec
loop
(bad)
aad
(bad)
pop
nop
or
stc
shl
sub
jne
mov
xchg
xchg
outs
stc
add
cwde
jno
pop
fsub
mov
push
push
inc
or
ds
cmp
push
jbe
or
out
iret
adc
call
xchg
std
cmp
lahf
and
add
not
push
xchg
out
jns
mov
clc
pop
rcl
adc
jnp
cdq
xchg
or
push
inc
cld
dec
outs
cmps
mov
mov
inc
enter
lods
jp
ror
mov
int
sbb
add
add
sub
sbb
(bad)
add
xchg
jnp
push
shl
push
jmp
and
xchg
fcomp
loop
pop
cwde
jne
add
adc
fisttp
test
jae
dec
sbb
dec
push
jge
mov
dec
test
pop
pop
(bad)
aas
adc
push
xlat
out
dec
mov
push
jne
repnz
inc
mov
clc
jns
push
fild
lds
test
jmp
in
rol
lods
imul
ror
sbb
arpl
fucomi
mov
add
cwde
mov
not
iret
ret
fild
jecxz
dec
cmps
test
or
inc
adc
gs
hlt
lods
add
pop
frndint
inc
adc
sbb
(bad)
mov
inc
mov
leave
cmp
pusha
int
mov
(bad)
lock
jae
inc
stos
in
mov
(bad)
pop
daa
sbb
pop
fwait
cmp
mov
test
pop
test
sbb
sbb
and
cmp
adc
pop
hlt
es
lea
(bad)
cmps
xchg
sbb
and
mov
xchg
repnz
retf
pop
ja
or
jmp
adc
push
jp
js
mov
inc
jl
loope
sub
rol
mov
cli
cmps
jecxz
ins
and
mov
jg
inc
test
jne
mov
mov
dec
mov
mov
xor
sub
data16
mov
sub
loop
xor
fnsave
fnsave
adc
mov
inc
loop
mov
adc
out
scas
xchg
iret
push
mov
inc
xor
jmp
cwde
push
mov
push
dec
scas
add
cmp
daa
mov
out
sub
mov
out
sub
dec
inc
push
push
mov
lea
pop
mov
xor
adc
mov
mov
rcl
lods
xchg
cwde
test
add
dec
ret
repz
pop
or
sbb
mov
inc
or
and
or
push
std
push
sub
pop
shl
cmc
into
and
jae
(bad)
sub
sub
hlt
mov
ret
or
xchg
adc
call
xor
js
movs
repnz
sbb
addr16
jbe
push
xor
and
(bad)
aam
adc
js
nop
mov
ja
lock
dec
pop
icebp
in
rcr
pop
imul
rol
movs
retf
ss
outs
les
inc
sbb
call
dec
push
iret
add
push
shl
aaa
xchg
add
imul
push
test
add
mov
and
mov
jge
push
js
(bad)
(bad)
sub
nop
or
jmp
test
iret
ret
not
mov
pop
mov
fs
cdq
jg
jae
sub
sbb
shl
xchg
cmp
and
xchg
addr16
adc
sbb
or
dec
les
push
movs
inc
cwde
out
loope
push
mov
jbe
mov
mov
xlat
mov
mov
(bad)
xchg
aaa
dec
mov
lock
jo
or
sti
add
push
aaa
hlt
inc
icebp
mov
rol
push
adc
xchg
mov
hlt
or
mov
jle
fcomp
xor
sub
jecxz
fstp
cmp
pop
or
adc
addr16
lods
pop
or
mov
cmp
inc
fsubr
jp
push
pop
inc
mov
pusha
loope
mov
mov
or
xchg
ret
xsha256
cmps
pop
in
mov
aad
jl
sub
adc
xrelease
pusha
jg
mov
inc
and
shl
ror
sub
sbb
leave
hlt
loope
(bad)
mov
inc
add
stos
ror
fcompp
cs
mov
adc
and
mov
adc
jbe
xchg
clc
adc
push
fisub
in
int
popa
lock
nop
pop
cmp
push
mov
dec
inc
and
and
pop
and
data16
loope
lods
cmp
lock
jmp
mov
movs
add
inc
sub
xchg
out
jmp
xor
push
(bad)
scas
and
inc
test
adc
(bad)
movs
out
mov
dec
jge
cmp
out
mov
daa
xchg
or
les
and
jb
xchg
push
in
mov
mov
pop
ins
inc
mov
nop
lock
retf
daa
sub
adc
test
jae
mov
repnz
pop
pusha
bound
out
push
pop
cmp
in
(bad)
aaa
repnz
in
mov
inc
push
or
ret
mov
aaa
test
xchg
ds
sub
ret
inc
int3
mov
add
push
movs
sbb
cmps
out
je
push
lods
test
fdivp
mov
xor
pop
inc
in
or
scas
call
fcom
jmp
rol
cmp
(bad)
out
cdq
aaa
aad
fidiv
push
(bad)
int3
add
xor
sahf
jns
inc
in
addr16
fld
mov
push
mov
adc
or
inc
cmp
clc
push
imul
hlt
or
mov
mov
inc
fs
mov
cmps
push
add
outs
sar
fisttp
aad
loop
mov
fiadd
inc
popa
sbb
pushw
xor
and
dec
out
int3
movs
jmp
pusha
or
fdiv
and
pusha
push
je
sbb
cmp
inc
cdq
mov
in
(bad)
bnd
pop
or
shr
sbb
jnp
jo
popf
cdq
fldenv
cmp
or
fisttp
inc
push
xchg
adc
daa
out
imul
nop
add
jg
mov
sbb
xchg
xlat
gs
xchg
xor
dec
adc
push
arpl
mov
mov
push
cmp
inc
push
cmp
push
retf
push
add
pop
push
bnd
dec
mov
adc
(bad)
adc
jg
aam
(bad)
push
inc
jle
dec
fcomp
aam
mov
xor
push
lock
sar
and
xlat
sbb
cmps
pop
fs
add
dec
mov
out
xchg
mov
and
jbe
ins
std
sub
inc
fisttp
fadd
cmp
push
mov
dec
(bad)
in
fidivr
adc
pop
sub
cmc
add
test
xor
into
adc
pop
shl
push
inc
pop
pop
stos
cmps
mov
fidiv
ja
test
mov
sub
mov
inc
cwde
into
rol
sahf
jle
repnz
add
xor
mov
or
outs
and
jecxz
sub
iret
pop
int3
mov
retf
rcr
shr
cmp
fs
pop
jle
out
sbb
ficom
jle
cmc
xchg
cmps
and
das
push
sub
or
(bad)
sbb
pop
popf
(bad)
hlt
sti
lock
sbb
push
shl
shl
inc
and
or
push
xchg
jl
cmp
(bad)
mov
shl
cwde
fs
fnstcw
icebp
sub
sti
adc
jnp
push
xchg
into
out
push
push
fcom
mov
sub
sbb
data16
sub
inc
jo
xchg
fsubr
call
movs
bound
jp
xchg
jecxz
shr
fisttp
dec
jnp
out
fwait
cwde
lods
or
cmp
inc
dec
and
hlt
mov
xchg
push
adc
mov
stc
jae
mov
adc
outs
dec
clc
aam
es
add
xchg
cld
(bad)
dec
pop
cli
scas
mov
out
dec
dec
and
outs
std
mov
call
bound
xlat
sbb
popa
outs
mov
std
mov
sub
ins
in
test
jno
dec
cli
jb
mov
fild
pop
shl
(bad)
and
pop
out
jne
sub
inc
sub
xchg
fmulp
dec
fwait
cmp
sbb
cdq
scas
gs
lahf
push
mov
bound
(bad)
dec
pop
aaa
out
aad
dec
in
retf
das
cmp
mov
mov
std
pop
(bad)
or
dec
sub
sbb
ror
push
rcr
dec
ja
pop
jbe
out
xchg
in
dec
cmp
pop
aam
mov
(bad)
cmp
and
not
and
xchg
jne
and
jle
jne
pop
xchg
test
sub
enter
fadd
add
inc
(bad)
out
or
mov
dec
test
jne
loop
xchg
aas
pop
cmp
mov
and
dec
pop
nop
jb
mov
in
cmp
call
add
das
inc
fst
dec
addr16
cs
sub
lods
xor
cmc
push
imul
inc
cdq
or
ss
cli
daa
ins
stc
test
xchg
ror
xor
jg
popf
jg
adc
sub
test
or
scas
cmp
xor
lods
ret
jmp
mov
clc
(bad)
repz
out
loop
fdiv
pop
push
inc
shl
xor
iret
in
xchg
scas
push
cmp
and
fdivp
push
shl
nop
jl
pop
dec
xor
jecxz
inc
push
push
adc
outs
pop
scas
cmp
hlt
retf
lea
dec
or
jbe
mov
mov
(bad)
jne
div
adc
add
mov
mov
inc
mov
mov
push
sbb
sub
ror
add
lods
inc
pushf
sub
jo
mov
(bad)
dec
sbb
je
ins
mov
fs
sar
(bad)
ret
xor
nop
jp
xchg
sbb
repz
ja
ds
leave
push
jg
in
sub
out
sub
enter
jmp
add
mov
fstp
adc
xchg
lods
inc
daa
inc
xor
(bad)
sub
rcr
lods
push
jg
in
fld
pop
jp
rcl
pop
(bad)
inc
pop
sti
adc
push
mov
int3
leave
push
sub
pop
xor
jmp
sub
fdiv
pop
xor
cmc
scas
arpl
or
cmp
xchg
jmp
push
push
iret
std
mov
xor
push
sbb
rcl
repz
movs
inc
pop
xchg
stc
imul
into
movs
dec
push
fmul
push
das
lea
jmp
mov
aad
xchg
pop
adc
mov
push
dec
push
je
pop
dec
rep
xchg
sub
jbe
repz
loope
adc
arpl
out
movs
fwait
push
es
or
push
jo
fidivr
push
cmp
mov
xchg
and
dec
arpl
xchg
mov
outs
sbb
fs
mov
clc
xadd
das
adc
adc
jne
das
outs
mov
mov
pop
popa
cmc
lods
js
mov
lock
mov
sub
and
and
into
js
nop
(bad)
ja
fbstp
push
xchg
pop
xor
out
int
neg
sbb
xchg
adc
std
inc
push
int
sub
mov
imul
inc
cwde
and
add
cli
jmp
mov
push
mov
int
add
stos
xor
jno
cmc
cdq
cdq
push
fwait
mov
adc
into
cmc
ss
inc
out
mov
test
jne
sahf
mov
fisub
jmp
(bad)
jecxz
jecxz
xchg
dec
leave
pop
(bad)
cmp
push
retf
imul
shr
jb
sbb
mov
add
test
inc
add
ja
dec
push
pop
lea
in
jge
adc
mov
cmps
sub
mov
aaa
mov
xchg
fdivrp
movs
inc
sub
push
pop
xor
sub
cmp
test
sub
dec
stos
push
scas
(bad)
(bad)
and
es
std
cmp
push
das
mov
shl
or
cmps
fist
stos
std
dec
xchg
enter
jg
adc
mov
add
lea
mov
fild
out
push
sub
xor
pop
push
jno
cmc
imul
outs
test
enter
lods
stos
retf
xor
dec
sub
or
sbb
popa
jns
jge
lods
adc
adc
dec
mov
adc
data16
mov
scas
pushf
xchg
mov
ret
ss
gs
push
cmps
jb
xchg
jb
cmp
shr
sbb
ror
or
jle
stc
shr
or
pop
and
pop
and
or
add
mov
je
call
test
xchg
ins
jb
mov
idiv
dec
int3
jmp
or
arpl
jo
add
mov
push
imul
sahf
pop
push
ins
sbb
or
dec
pop
test
std
test
cli
fnstcw
sbb
cmps
shl
pop
mov
mov
add
sub
lahf
addr16
lods
sub
(bad)
imul
pop
push
cmp
aam
les
and
pop
mov
add
lods
xor
sub
loopne
jecxz
je
adc
imul
inc
call
dec
pop
sub
int3
xlat
xor
arpl
cmp
imul
enter
jbe
sbb
fnstsw
inc
push
mov
mov
cwde
and
mov
lods
shr
xchg
js
push
add
pop
mov
jmp
ffreep
stos
inc
stos
stos
pop
enter
es
fsub
xor
add
pop
rol
mov
xlat
fdiv
add
or
dec
push
inc
push
movs
add
pop
jns
enter
adc
pop
or
add
rcr
lock
jo
sbb
add
fst
sub
in
mov
pop
ss
sub
sbb
sahf
(bad)
sbb
push
and
mov
pushf
test
nop
xor
lahf
loope
(bad)
aad
mov
mov
repnz
mov
(bad)
ja
mov
xlat
lahf
jp
or
mov
jle
inc
sbb
xchg
out
push
push
pop
and
neg
imul
test
jp
pop
(bad)
and
dec
outs
mov
fwait
xchg
cmp
cmp
repnz
mov
int
xor
mov
or
clc
cmps
aam
push
hlt
fnstenv
bound
or
std
repnz
and
lds
xor
scas
popa
rol
mov
cmp
bound
ret
jmp
add
and
shl
jge
push
inc
mov
sar
add
jns
mov
cli
push
pop
jmp
jno
shr
or
adc
rcr
leave
inc
cmps
clc
inc
test
and
ss
mov
gs
xchg
xlat
mov
jno
ins
xor
mov
out
imul
popa
call
mov
dec
mov
jmp
scas
out
dec
pop
movs
sub
test
xor
jb
(bad)
xor
inc
loopne
push
mov
(bad)
repz
dec
mov
stos
(bad)
jecxz
ss
add
xor
push
cmps
jmp
fdiv
rcr
sbb
push
in
mov
cmp
outs
mov
pop
ss
and
jge
push
fimul
pop
adc
aas
push
jmp
inc
(bad)
retf
xor
sbb
fst
dec
mov
or
(bad)
fiadd
stos
lds
and
jecxz
popa
xor
add
int3
and
scas
hlt
pop
(bad)
out
repnz
stos
ret
xchg
mov
xchg
xchg
push
xchg
loope
mov
(bad)
cmp
test
or
daa
scas
add
fwait
bound
cdq
dec
cmc
ja
mov
aad
and
pop
fadd
and
sub
pop
int
hlt
or
in
repz
cmps
bound
xchg
shr
out
mov
mov
ss
sub
pop
lods
lods
xchg
mov
enter
scas
inc
xchg
add
fild
popa
cmps
mov
call
jns
ret
or
mov
cmps
mov
retf
jg
adc
push
mov
ret
pop
mov
outs
xchg
div
fisubr
sub
or
mov
push
leave
imul
ret
lds
inc
or
pushf
fdivp
inc
out
mov
add
shr
mov
xor
movs
(bad)
xlat
mov
adc
mov
bnd
dec
(bad)
xor
push
inc
ds
sti
fwait
stos
movs
mov
push
push
pusha
mov
aaa
(bad)
int
imul
ins
ret
test
mov
and
stc
mov
mov
dec
or
repnz
inc
adc
popa
repz
sbb
and
xchg
shr
mov
cdq
lea
out
mov
in
push
add
(bad)
aad
clc
xchg
jle
mov
out
out
(bad)
and
out
xor
cs
adc
stos
test
mov
pop
adc
fisttp
aad
(bad)
movs
dec
lods
pop
les
pop
cmp
and
inc
test
adc
loope
scas
push
fxch
mov
cvtps2pd
adc
xchg
add
mov
ret
inc
hlt
sar
test
pop
inc
push
repz
out
xor
loop
inc
cld
sub
pop
ss
xor
push
mov
xchg
xchg
sub
mov
mov
loop
jnp
leave
icebp
out
inc
test
ror
cs
mov
les
add
outs
stos
mov
daa
mov
push
xchg
mov
pop
mov
retf
je
jo
and
int
xor
dec
retf
fbstp
retf
in
shl
ficomp
inc
jnp
mov
xchg
jns
popf
xchg
xchg
and
int3
rcr
push
loopne
inc
pusha
and
loope
dec
jl
loope
into
xchg
jp
xchg
ins
xor
jge
das
or
pop
ins
stos
leave
pop
pop
mov
dec
adc
mov
fisub
adc
out
sbb
retf
cmp
sub
push
sahf
lods
mov
mov
(bad)
jmp
cmc
call
xchg
sub
dec
into
pop
xchg
iret
icebp
call
div
test
mov
mov
push
cmps
cwde
rcl
ret
mov
jp
aas
(bad)
push
push
in
mov
fcomp
rcr
dec
and
aam
retf
jno
pop
inc
out
jge
xor
fucom
mov
mov
ja
mov
out
int
dec
or
loop
adc
mov
scas
push
bound
ja
jge
adc
mov
mov
mov
inc
inc
sub
cmp
clc
loop
repnz
pusha
dec
add
cmp
retf
test
and
mov
cmp
aaa
or
mov
scas
mov
cli
add
xor
dec
dec
add
push
in
(bad)
xchg
cwde
cmp
xor
sbb
out
cmps
sub
outs
dec
loop
sbb
mov
inc
les
adc
dec
ja
ficomp
cmp
cld
or
sub
add
into
stos
mov
ret
les
and
xor
and
test
jle
outs
inc
jmp
jne
or
or
repnz
dec
fadd
fdiv
xchg
into
ins
or
(bad)
lds
jbe
je
or
cmp
xor
pop
mov
aaa
rcr
add
push
int3
mov
mov
clc
fld
pop
adc
leave
test
cli
sub
jmp
sub
xchg
fwait
lock
(bad)
fdivr
or
je
(bad)
mov
jb
xlat
or
mov
ins
mov
push
dec
and
call
jns
inc
mov
test
or
mov
xchg
fstp
sub
sbb
push
mov
ror
jl
mov
leave
das
fistp
sub
cli
in
sbb
cmps
mov
(bad)
jecxz
call
fimul
shl
fwait
mov
in
pop
sub
sub
int
xchg
loopne
mov
sub
jbe
fld
test
sub
adc
push
or
cmp
imul
into
lahf
outs
or
sub
sub
xchg
mov
xchg
mov
(bad)
sbb
jne
stc
mov
push
in
(bad)
hlt
add
mov
int3
sbb
ror
popf
ds
push
fisttp
pop
push
or
scas
cmps
pop
inc
sbb
in
dec
add
(bad)
xor
rcr
test
mov
mov
or
fstp
ja
adc
mov
or
jmp
es
inc
int3
popf
fstp
dec
cmp
ins
cmp
retf
jae
push
lock
sub
out
js
sbb
xor
dec
outs
pop
jns
jnp
xchg
dec
and
mov
stos
jns
jns
adc
stc
retf
jle
jecxz
in
ins
call
jp
jo
inc
cmp
jle
mov
(bad)
ficomp
mov
lods
lock
inc
and
mov
xor
sbb
fs
mov
xchg
pop
and
cmp
mov
or
add
adc
inc
adc
adc
and
scas
push
stc
adc
nop
stos
dec
fnstsw
rcr
fs
mov
xchg
outs
jg
sub
add
xchg
js
jecxz
jae
cmp
or
out
xchg
xchg
not
or
lds
mov
in
and
pushw
push
js
inc
or
outs
sub
xchg
lahf
nop
loope
stos
pop
movs
mov
fcomp
popa
adc
cli
pop
and
sbb
mov
push
mov
scas
sbb
cld
lods
sub
jle
loope
cmps
xlat
aam
loopne
jl
or
add
ret
sub
xchg
sub
and
pop
jmp
mov
sub
ficomp
outs
mov
pushf
jmp
jecxz
and
or
test
cmp
test
rol
fld
scas
mov
jb
lea
jecxz
jecxz
add
sti
icebp
pop
xchg
jne
xor
adc
dec
jg
loope
push
sti
jns
retf
lods
retf
inc
push
cmp
loope
fcom
add
sub
mov
dec
(bad)
cmp
mov
shl
or
dec
popf
push
xchg
and
mov
push
test
push
fsubr
les
jl
int
mov
add
and
mov
in
icebp
adc
add
add
stos
loope
push
adc
xor
(bad)
mov
(bad)
and
mov
lods
repnz
xchg
and
mul
repz
and
inc
in
call
inc
out
xchg
into
sbb
push
and
mov
mov
or
cwde
in
int3
push
pop
rol
inc
push
neg
fld
cli
arpl
sub
adc
ja
cmp
jo
adc
xor
or
scas
mov
lods
cmps
outs
dec
or
pusha
adc
pop
and
xor
jns
loop
push
pop
mov
dec
or
dec
and
add
mov
je
pop
pop
imul
pop
pop
js
jmp
pop
push
mov
enter
jne
pushf
mov
xchg
idiv
pop
js
xchg
stos
xchg
(bad)
pop
sahf
jp
test
mov
mov
mov
paddq
jmp
sub
cmp
mov
test
adc
mov
sub
in
mul
mul
leave
sub
add
stos
fldcw
lods
mov
or
fwait
aad
rol
(bad)
sub
pusha
retf
(bad)
push
dec
das
pop
pop
mov
fnstenv
mov
int3
or
sar
mov
(bad)
jnp
push
push
dec
inc
aaa
les
or
in
push
pop
dec
push
xor
mov
cmp
js
std
and
cmps
(bad)
xchg
das
or
scas
lea
push
ins
lds
shl
cli
out
js
and
imul
xchg
inc
shr
xchg
arpl
es
dec
rcr
fcom
loopne
push
fucomip
cmp
xor
test
lods
retf
aas
pop
repz
jl
scas
pop
sbb
mov
retf
imul
inc
sub
mov
cmp
je
in
loope
push
and
out
and
xchg
jge
mov
lods
cld
not
adc
pop
fcom
inc
push
inc
adc
jne
pop
int3
out
fbld
cmc
add
(bad)
(bad)
call
inc
mov
mov
inc
jno
ret
les
pop
adc
dec
cdq
mov
sar
mov
adc
jl
adc
jl
mov
push
lock
(bad)
pop
mov
test
ja
sub
dec
scas
pop
stos
jo
movs
pop
enter
outs
in
cmc
add
sub
xchg
sbb
sbb
cmp
nop
arpl
out
adc
push
in
mov
das
mov
sub
fucomi
outs
add
xchg
pop
jb
jmp
and
pusha
lea
or
mov
pop
sbb
mov
dec
loopne
xor
out
jbe
sub
xchg
or
add
push
in
add
push
sahf
fistp
repnz
enter
mov
ds
icebp
popf
xchg
and
inc
pushf
lea
into
js
adc
jmp
enter
push
sub
cmc
fbstp
xchg
daa
in
push
mov
jle
int3
imul
fimul
pop
call
dec
pop
adc
fld
and
sbb
adc
push
push
mov
ds
mov
mov
shl
(bad)
jmp
sbb
pop
mov
dec
xlat
imul
cwde
push
sbb
in
jl
arpl
fidiv
leave
mov
pop
or
outs
dec
xchg
std
jecxz
sar
xor
cmp
das
fisttp
push
fld
xchg
popf
js
jmp
cmp
inc
movs
ins
pop
jp
sub
jmp
inc
cmp
xchg
inc
mov
xchg
(bad)
rcr
and
dec
dec
aaa
xor
adc
test
add
cmps
dec
inc
hlt
push
out
(bad)
dec
shl
mov
cmps
inc
jne
mov
dec
in
adc
push
xor
jmp
sbb
dec
fmulp
retf
in
aad
or
pop
sub
out
add
xlat
and
in
sub
dec
pop
add
mov
fistp
add
mov
sub
pop
arpl
mov
lods
popf
hlt
in
add
pop
push
ds
stos
out
cwde
pop
test
sbb
gs
push
ss
fnstsw
sbb
sbb
mov
fadd
jmp
sub
mov
imul
mov
popf
fisub
test
std
lea
std
xchg
mov
neg
xor
ss
and
push
std
sbb
ins
xchg
mov
sbb
ja
(bad)
jns
cmp
cmp
idiv
pop
pop
icebp
xchg
or
loop
lea
ret
ja
push
inc
jbe
fild
in
cmp
dec
int3
not
mov
stos
mov
sti
dec
cmp
xor
mov
sbb
pop
xlat
adc
xor
jnp
rol
mov
leave
cmps
push
xchg
mov
lods
or
jo
mov
mov
fs
ja
and
icebp
mov
jno
aas
dec
ror
sar
jmp
mov
mov
add
xchg
cmp
pop
cmps
xchg
mov
pop
xchg
adc
mov
ret
inc
jae
dec
sahf
sbb
pop
ret
mov
std
repz
jb
iret
popa
dec
pop
and
mov
pop
sbb
xchg
dec
mov
adc
sqrtps
jns
mov
mov
mov
push
popf
sub
sbb
ins
and
pushf
(bad)
enter
add
nop
imul
mov
add
sub
and
mov
add
add
gs
pop
sub
loopne
retf
shl
pop
sbb
jo
cld
push
push
data16
mov
push
aaa
jno
clc
rcr
mov
repz
push
jp
or
add
jbe
adc
mov
repnz
add
retf
mov
push
jge
imul
pop
bnd
inc
fisubr
cld
adc
add
pop
test
add
inc
mov
leave
xor
fs
cdq
xchg
push
sub
fwait
aam
div
div
xchg
in
cwde
fimul
std
adc
add
sbb
mov
ss
push
cmp
das
mov
int
imul
out
(bad)
and
xchg
mov
cli
inc
ja
cli
pop
shl
dec
(bad)
fistp
pop
push
cmp
int3
jne
adc
movs
imul
inc
popa
cmp
stos
dec
mov
xchg
int
mov
add
and
adc
and
pop
push
pop
fld
clc
fs
and
das
in
nop
hlt
and
sub
or
xor
outs
in
loope
mov
sub
push
sbb
loopne
popa
loope
xchg
inc
icebp
ds
fs
push
xchg
xchg
inc
lahf
mov
mov
(bad)
mov
sub
sbb
adc
mov
shl
inc
sub
jns
in
fstp
and
cmp
xor
mov
bound
cmps
cld
xchg
xlat
les
push
mov
mov
dec
mov
cmc
adc
cmp
lds
loope
pop
push
fmulp
imul
hlt
mov
or
aam
push
xchg
shl
add
jmp
test
or
retf
ins
test
mov
cmps
push
hlt
mov
in
xor
sbb
dec
pop
sbb
xor
(bad)
das
xchg
dec
bound
je
arpl
mov
std
sbb
adc
mov
dec
rcl
int3
xor
or
jmp
pop
mov
lods
cmp
cdq
sahf
jno
mov
xchg
xchg
pop
jae
sbb
fimul
add
xchg
out
pop
jg
pop
test
dec
lds
adc
inc
int3
jge
mov
imul
cli
pushf
mov
push
add
les
and
cdq
sbb
adc
sub
mov
or
fs
jno
lahf
inc
fistp
sub
adc
inc
sub
stos
out
ror
stos
rcr
mov
sahf
je
cdq
dec
mov
cmc
cmp
cwde
retf
mov
pop
mov
mov
xchg
(bad)
mov
cmps
ret
sub
(bad)
cdq
jmp
xor
or
dec
sub
stos
inc
out
out
adc
shr
scas
movs
mov
sub
or
jae
sub
rcl
out
(bad)
jne
add
std
sub
or
push
test
xchg
vminss
popf
mov
sahf
shr
std
cwde
ret
js
lahf
sbb
dec
adc
repz
out
cmc
inc
test
gs
pop
add
test
(bad)
out
fcomp
xchg
and
inc
cmp
xor
ins
test
or
or
lock
stos
ret
fisubr
sbb
in
inc
xchg
jge
mov
int3
lahf
les
jne
sbb
fild
inc
jmp
inc
dec
adc
fiadd
jno
jbe
out
lods
mov
inc
xchg
push
xor
call
pop
out
test
lahf
adc
std
mov
loopne
jmp
xchg
or
and
jbe
mov
push
jns
lods
inc
mov
rcl
dec
arpl
in
addr16
adc
fsub
pop
data16
popf
popa
daa
ror
imul
and
nop
(bad)
sub
icebp
stos
loope
stc
fbstp
mov
inc
push
or
pop
jmp
xchg
lods
movs
dec
mov
(bad)
inc
fisub
sbb
jge
inc
imul
adc
or
mov
inc
(bad)
loopne
cmp
addr16
or
inc
sbb
loop
out
push
repnz
test
adc
fisub
retf
sar
cmp
sub
or
pushf
sub
or
and
adc
mov
aam
repnz
adc
mov
pop
loope
inc
clc
leave
ret
push
outs
mov
dec
or
or
aas
jnp
repnz
jmp
cmc
mov
test
xchg
ror
dec
cwde
add
(bad)
sar
mov
into
int
pop
sbb
mov
add
sbb
sub
clc
cmp
xlat
je
vmload
xchg
(bad)
shl
movs
and
mov
test
or
adc
cmp
call
jo
add
cmps
mov
popf
fsub
repz
es
rcr
jbe
adc
das
sahf
jnp
jne
xor
fmul
test
aad
cmps
jne
pop
sub
xchg
lds
or
cwde
into
je
shl
xchg
and
aad
push
aas
popa
stos
lods
ins
and
jo
rcr
adc
sub
cmp
dec
add
push
xor
ud1
fwait
mov
xor
jle
mov
cmp
bound
test
cmp
(bad)
pushf
hlt
pop
mov
mov
push
lods
(bad)
sub
into
cdq
pop
ja
lds
xchg
ss
cmp
inc
push
sub
or
and
sbb
aas
fmul
add
sub
fimul
out
xchg
xchg
aaa
pop
push
js
daa
adc
sub
out
pushf
push
xchg
shl
inc
jmp
aas
pop
add
mov
or
xchg
inc
shl
mov
xlat
ins
lods
lea
daa
imul
push
pop
xor
mov
adc
or
xchg
cdq
mov
inc
icebp
ins
repz
or
int
mov
xchg
outs
and
xchg
in
and
outs
jne
aaa
inc
imul
push
mov
adc
stos
ret
dec
ins
mov
dec
pop
pop
add
mov
dec
mov
add
int3
jns
jl
xchg
xchg
add
inc
pushf
pushf
inc
lods
xchg
(bad)
xchg
inc
mov
jmp
inc
add
cwde
jge
pop
push
cld
dec
(bad)
jg
lods
mov
pop
pop
inc
loop
(bad)
or
imul
enter
adc
pushf
xchg
jle
test
int
mov
push
push
cmp
mov
jne
dec
data16
dec
adc
push
jp
xor
out
test
jmp
jne
push
repnz
mov
and
mov
cld
jae
push
ins
xchg
iret
pop
adc
lock
(bad)
jmp
jns
retf
fisttp
fldcw
std
fimul
cmp
enter
adc
jge
(bad)
pop
add
rcr
and
pop
jne
xor
mov
push
or
push
call
cmc
ds
xchg
inc
pushf
fisubr
jnp
cs
xchg
out
inc
fimul
ficomp
dec
mov
in
fs
test
idiv
dec
mov
imul
xchg
push
add
out
mul
ins
dec
ror
popa
mov
test
div
mov
mov
push
lods
aad
ss
loope
js
or
add
inc
sbb
push
mov
pop
mov
adc
and
outs
sbb
xlat
(bad)
sar
ret
sbb
into
adc
fcom
mov
xor
inc
jp
sub
add
arpl
repz
adc
xchg
loop
(bad)
jp
iret
setg
shl
scas
lea
adc
or
mov
mov
dec
(bad)
xor
sbb
ret
into
sbb
loopne
sbb
jno
and
test
rcl
jno
call
je
mov
dec
jl
jbe
xchg
sub
jns
repz
inc
adc
mov
mov
ds
mov
int3
mov
pop
sbb
mov
imul
out
sub
(bad)
dec
imul
sbb
je
jecxz
arpl
jns
mov
lahf
pop
or
enter
aaa
ret
sar
lahf
jnp
sub
imul
loopne
add
pusha
adc
cmp
cmps
daa
and
xor
xor
(bad)
sbb
adc
repz
in
es
add
xchg
mov
mov
in
stc
std
jle
(bad)
dec
shl
jmp
jl
imul
jne
shl
mov
or
dec
mov
sahf
mov
jns
dec
or
dec
xor
mov
loope
adc
ins
add
mov
das
inc
push
sub
das
cmps
and
mov
in
imul
in
loop
push
fs
add
ficom
dec
or
aam
ss
lds
mov
popa
ds
xchg
mov
sbb
mov
mov
dec
scas
push
pop
jmp
cmps
fisubr
aas
ret
inc
fild
adc
pop
test
mov
push
shl
call
sar
sar
xchg
sahf
sbb
mov
daa
inc
adc
xchg
add
pop
rcl
xchg
sbb
adc
push
retf
and
jb
inc
adc
mov
test
nop
and
fcmovnbe
mov
div
sbb
outs
das
ja
sbb
inc
jno
mov
adc
in
dec
mov
or
or
push
jg
fwait
xor
aad
jmp
or
int
outs
call
mov
je
ret
cmp
cmp
aaa
sub
inc
fistp
shr
test
mov
jns
pushf
lds
and
retf
rol
mov
data16
sub
repnz
pop
sbb
xchg
(bad)
lds
mov
and
xor
xchg
and
sahf
pop
mov
test
sahf
pop
sbb
xor
pushf
icebp
in
dec
movs
lods
cs
jne
rcl
int3
icebp
not
jecxz
add
xchg
fwait
sub
mov
inc
pop
lods
sub
fldcw
dec
lods
sbb
push
popf
sub
(bad)
xchg
inc
nop
movs
test
loope
pop
clc
dec
lods
shl
shr
out
push
and
cmc
mov
add
inc
or
movs
xor
movs
sbb
mov
xchg
ja
or
gs
test
icebp
inc
xlat
gs
add
fsubr
and
std
jmp
inc
lods
jns
int3
xchg
fsub
pop
adc
stc
in
pop
mul
ret
sar
movs
xor
imul
xor
pop
mov
sbb
xlat
in
push
dec
(bad)
enter
or
mov
pusha
mov
ins
fwait
hlt
bound
xchg
outs
out
ss
outs
iret
and
lea
(bad)
cli
push
add
out
pusha
lods
std
ja
(bad)
jge
pop
(bad)
in
inc
pop
mov
std
stc
mov
retf
jne
dec
clc
ret
jmp
or
jae
add
push
adc
mov
mov
jnp
mov
jbe
cs
aad
xor
push
pop
and
out
xor
adc
movups
mov
add
popa
and
out
leave
repnz
xchg
push
xor
xor
ss
in
outs
adc
scas
add
cmps
in
movs
pusha
mov
mov
jb
ret
sub
out
stc
sbb
mov
sub
xor
mov
jmp
hlt
mov
push
jmp
jae
dec
and
sbb
mov
or
xchg
fs
(bad)
clc
mov
(bad)
push
pop
sub
(bad)
stos
cmp
add
fsubp
mov
fsubrp
leave
push
or
mov
je
ret
xor
or
mov
inc
and
repz
mov
lock
sub
mov
jbe
push
sbb
ds
inc
pop
cld
fs
pop
xchg
in
into
in
popa
adc
cmps
xor
and
push
cmp
xor
ror
int
jo
dec
xor
mov
adc
(bad)
icebp
sbb
lods
dec
mov
and
outs
test
std
icebp
es
cmp
mov
aaa
cmps
or
cmps
adc
mov
jns
sub
cmp
xchg
pop
lea
adc
xor
ins
pusha
mov
out
les
pop
inc
mov
cmp
push
pusha
mov
aas
jbe
ficomp
sub
push
mov
daa
adc
js
lods
jns
cmp
(bad)
sub
dec
mov
and
lahf
in
dec
jne
inc
jo
es
push
inc
enter
mov
(bad)
dec
jl
(bad)
cmc
jmp
mov
enter
dec
push
data16
test
pop
add
push
mov
js
call
push
gs
jne
jl
push
add
out
js
push
out
(bad)
mov
cld
cmps
cmp
imul
push
cmp
cwde
daa
fistp
(bad)
adc
shr
dec
dec
sbb
sti
jmp
sbb
mov
jb
or
xor
sbb
jnp
(bad)
adc
pop
push
aam
fcom
aam
cld
call
loopne
cli
pop
xchg
fisubr
or
iret
pop
arpl
xchg
ret
mov
jle
dec
shl
pop
sahf
adc
mov
pop
fcmovbe
push
fucom
or
xchg
lods
lock
mov
mov
shl
test
mov
sbb
call
sahf
add
out
out
cmp
and
dec
jmp
popa
push
pop
shl
retf
sahf
pop
cmps
retf
leave
int3
xchg
mov
push
test
pop
push
cs
lds
mov
xchg
fimul
fwait
xchg
and
icebp
mov
je
inc
std
push
mov
xor
xor
shr
mov
xor
hlt
nop
inc
mov
rcl
xchg
add
jmp
mov
inc
dec
xchg
add
mov
xor
arpl
add
mov
movs
outs
xchg
dec
push
inc
mov
jle
inc
lods
aad
mov
xchg
call
mov
push
stos
jmp
aad
xor
push
hlt
push
fidivr
sbb
ror
neg
dec
xchg
gs
add
lods
retf
and
cmp
mov
pusha
cwde
pop
out
call
bound
mov
mov
movs
sbb
pop
ret
fnstenv
addr16
bound
mov
jmp
aam
sbb
mov
cli
adc
outs
cmp
add
into
and
push
clc
sbb
push
mov
push
pushf
add
scas
arpl
inc
test
neg
cld
and
pop
jmp
pop
adc
push
pop
test
xchg
push
sub
pop
dec
mov
mov
push
mov
mov
dec
rcr
jae
fucom
test
daa
cs
inc
repnz
cmp
in
hlt
adc
sbb
inc
pop
dec
imul
and
jae
xchg
xchg
into
jb
outs
imul
cs
jp
fldcw
pusha
ins
dec
leave
pop
imul
(bad)
repnz
sub
and
sbb
xchg
in
fcmove
add
fidiv
cmc
iret
dec
and
mov
(bad)
mov
popf
push
add
xchg
cmp
push
ds
push
data16
cmps
pop
push
or
mov
cmp
push
cli
jg
clc
es
sub
mov
aam
mov
inc
pusha
into
push
iret
mov
neg
xor
xchg
out
sbb
mov
mov
mov
or
fistp
aas
mov
sbb
fistp
arpl
scas
or
ins
mov
mov
iret
rcl
push
mov
test
sbb
adc
inc
sub
sbb
jmp
mov
add
mov
xchg
fdivr
and
fwait
pop
test
arpl
dec
dec
jp
es
call
outs
ja
push
mov
and
enter
or
jb
mov
ret
ins
jne
ins
repnz
ss
cmp
test
in
pop
int3
cmp
stos
add
mov
push
jg
push
(bad)
cmc
scas
retf
cdq
sbb
push
push
adc
lock
inc
rcr
(bad)
stos
sbb
adc
shr
lahf
sub
rcr
std
sti
rcl
icebp
(bad)
pop
xor
loope
sub
push
hlt
ja
(bad)
push
push
push
push
jg
sub
lods
les
sub
mov
in
neg
out
dec
int
in
aad
retf
jo
pop
xor
xor
or
and
sbb
and
fistp
adc
push
mov
cmps
mov
inc
xchg
mov
add
cli
push
push
mov
lock
push
or
jp
mov
fistp
or
sbb
sar
lods
hlt
cli
in
repz
adc
adc
push
loope
push
mov
dec
aaa
sti
mov
add
or
xchg
(bad)
or
and
sbb
fsub
pusha
push
cmc
loopne
push
push
jns
add
add
movs
cwde
rol
mov
xchg
mov
(bad)
xor
enter
cs
add
(bad)
jg
cmp
cmp
jmp
adc
adc
cmp
js
mov
call
inc
retf
ret
or
add
pop
jp
(bad)
repnz
inc
call
jle
iret
cmp
jmp
mov
jecxz
and
imul
mov
and
(bad)
jg
or
mov
jo
neg
push
push
sbb
xchg
add
xchg
jne
int3
dec
xchg
add
mov
lods
pop
gs
(bad)
leave
cmps
fild
dec
aad
mov
loop
push
push
shr
movs
lds
(bad)
adc
jle
mov
mov
ds
inc
jmp
js
out
pop
add
jecxz
or
or
addr16
mov
push
cdq
mov
xor
sahf
bound
or
cmp
inc
xor
pushf
mov
les
out
cmp
aaa
mov
shl
or
jb
out
sti
and
retf
lock
(bad)
xor
pop
aam
jge
mov
xchg
out
in
mov
rcl
pmullw
aaa
sub
mov
xor
loope
test
rcl
clc
push
jae
add
jle
sti
add
imul
mov
retf
push
mov
mov
mov
and
popf
rcr
cli
aaa
mov
push
call
cwde
js
push
lea
pop
cmovl
cmc
inc
pop
cmp
imul
cs
pop
stos
mov
xor
xlat
(bad)
pop
and
cdq
dec
pop
ret
std
inc
aam
sbb
mov
outs
pop
mov
sbb
adc
pop
int3
stos
adc
iret
xchg
jae
adc
lahf
(bad)
setge
xor
aam
daa
add
arpl
fldenv
lds
js
iret
xor
ret
scas
int3
mov
jmp
cmp
(bad)
ficom
aas
nop
pop
sar
mov
dec
sub
jb
cmp
adc
mov
xor
xchg
sar
jns
pop
push
fwait
out
mov
lds
mov
shr
sub
jge
and
pop
aas
jo
loope
arpl
and
jmp
shl
shl
xor
xor
fimul
dec
scas
scas
dec
mov
lea
gs
nop
(bad)
jb
aad
sbb
push
sti
aas
outs
stos
fild
xchg
push
dec
lahf
pop
loopne
fisttp
data16
iret
pop
jg
cmp
mov
out
or
xchg
jmp
push
arpl
addr16
dec
jae
iret
(bad)
xchg
and
aam
iret
or
inc
sub
inc
push
or
ret
xlat
sbb
int3
push
int
loopne
push
in
not
cwde
pop
cwde
aam
cs
aas
xor
je
pop
mov
cmp
inc
int
sub
add
pop
jp
das
push
adc
push
test
sbb
out
sbb
sbb
sbb
mov
sbb
sar
cmp
mov
(bad)
jmp
sub
pop
xlat
inc
mov
scas
mov
loope
out
xor
mov
sbb
add
addr16
fcomi
jo
lea
nop
fcmovu
and
clc
enter
mov
call
mov
call
fimul
aam
fwait
pop
jns
jne
sub
ja
aam
cmp
iret
mov
stos
add
or
ds
repnz
fisubr
movs
dec
add
xchg
sbb
mov
leave
cmps
sbb
or
jmp
mov
fsubr
fldln2
cmp
add
in
jecxz
movs
xchg
mov
movs
arpl
inc
mov
out
cld
mov
pop
jge
call
lea
xchg
call
push
pop
cs
das
or
and
sbb
aas
lock
imul
ror
and
xchg
leave
in
sti
scas
push
jae
std
mov
dec
pop
into
cmp
add
mov
jmp
push
pop
fst
shl
pop
mov
mov
std
push
ss
inc
imul
inc
pop
movs
xor
cmps
push
mov
imul
inc
cwde
cmc
mov
or
or
mov
xchg
ins
and
ins
test
les
xchg
cmp
jmp
push
cmc
mov
cmc
cmp
add
jmp
add
lods
xchg
into
cwde
inc
sti
(bad)
hlt
cmc
xchg
push
popa
xor
rcr
jne
add
xchg
ror
mov
loopne
mov
(bad)
pop
push
dec
cwde
dec
dec
mov
inc
(bad)
fdivp
lds
jmp
ret
fcomp
push
inc
mov
lahf
mov
mov
xlat
sbb
out
test
and
jmp
stos
mov
inc
add
fcomp
add
cli
fs
rol
lock
mov
ficom
add
mov
jmp
push
adc
mov
mov
cmp
add
iret
pop
push
stc
outs
push
xchg
out
push
fstp
adc
add
xchg
pop
cmp
dec
out
sbb
stos
mov
bound
iret
in
or
jge
aaa
fs
jnp
sbb
sbb
test
xchg
iret
mov
push
ins
sti
adc
mov
and
sub
test
sub
inc
mov
cwde
ins
jb
dec
mov
jbe
(bad)
xor
and
push
rol
xlat
or
cmp
push
outs
xor
cmp
adc
inc
repz
jb
pop
add
retf
lds
nop
cmp
dec
inc
es
pop
add
dec
cwde
or
scas
jmp
cmps
mov
xor
movs
mov
xor
inc
inc
xor
pop
cmp
movs
popf
add
jmp
cdq
mov
sbb
cld
out
ds
and
and
mov
cmp
cwde
scas
xchg
stc
sbb
std
fnstenv
mov
jp
xchg
clc
dec
mov
inc
cwde
dec
cwde
dec
cmp
and
cmp
mov
repz
ja
(bad)
shr
mov
dec
xor
cmp
add
adc
std
out
outs
repnz
test
cmps
jmp
movs
pop
mov
adc
jno
jmp
sbb
pop
adc
xor
imul
and
test
sub
cmc
xor
cmps
xor
jecxz
push
sub
rcl
mov
and
rcr
mov
jg
out
lds
outs
mov
add
ror
pop
jge
int
packsswb
or
pop
jl
mov
call
test
pop
cmp
sbb
loopne
lahf
jne
cmp
add
inc
or
dec
aam
xchg
push
cwde
jbe
mov
push
push
cmp
adc
in
movs
lock
pop
dec
retf
or
int
mov
repz
cmps
ins
pop
jecxz
mov
lock
xchg
jmp
mov
xchg
and
add
sti
cmp
push
call
(bad)
xchg
retf
mov
push
cmp
xor
ds
ins
cmc
not
ret
jo
test
repnz
jno
inc
ds
mov
sahf
repnz
push
(bad)
mov
pop
imul
mov
push
pop
rol
mov
arpl
mov
imul
dec
adc
test
mov
dec
cwde
loope
dec
push
loope
push
pop
pop
pushf
stos
push
pushf
and
ret
repnz
or
fs
jp
aaa
data16
mov
std
js
push
(bad)
fnsave
dec
mov
cmp
in
inc
push
aas
sti
xchg
fbstp
jae
or
out
and
sbb
inc
push
fistp
jb
xor
mov
lods
addr16
cmc
push
or
cmp
sub
jecxz
pop
cmp
jecxz
or
fs
dec
(bad)
sub
mov
push
test
or
sbb
aas
outs
pop
pop
push
pop
or
and
mov
pop
sbb
xchg
inc
outs
jecxz
xor
push
cmc
push
inc
push
outs
and
aas
push
jmp
lea
xor
push
movs
mov
scas
out
ds
popf
push
cmps
and
push
xchg
imul
jmp
pusha
das
iret
shl
popf
dec
jecxz
not
dec
xchg
xchg
movs
fs
aaa
xchg
inc
daa
mov
mov
push
stos
mov
(bad)
xlat
sub
dec
mov
out
xchg
sbb
cmp
out
cmps
mov
clc
out
fcomi
and
pop
push
mov
fcom
aas
jl
inc
push
gs
ds
jg
pop
retf
out
cdq
inc
shl
retf
repnz
fbld
pop
dec
add
es
call
inc
fisub
fidivr
inc
adc
dec
les
inc
adc
dec
mov
clc
push
lds
(bad)
pop
dec
ror
call
xchg
cwde
cmp
into
pop
mov
jp
add
in
fcom
cmp
pop
jg
in
cld
adc
fsubr
push
jge
pop
stc
out
mov
add
sub
icebp
mov
inc
in
fs
sub
xchg
out
and
add
push
movs
inc
cmp
sub
inc
inc
push
aaa
jg
mov
das
or
aas
das
mov
ds
addr16
fwait
cmp
sbb
in
sbb
mov
pop
fucomp
fdivr
jecxz
mov
xlat
cmc
out
std
jmp
lahf
push
or
loopne
inc
shl
in
nop
in
fcmovbe
mov
cli
xlat
mov
daa
out
(bad)
push
mov
fwait
mov
xchg
stos
push
sbb
jns
pushf
mov
mov
cmp
lea
imul
cld
jl
jmp
stos
sub
int
outs
gs
vminss
or
retf
or
fbld
loope
aam
repz
mov
sar
mov
pop
mov
jno
shl
hlt
xchg
dec
(bad)
jnp
addr16
sbb
call
pop
adc
pop
jnp
jl
cmp
repz
jnp
push
ds
xchg
mov
sahf
push
jmp
inc
fnstenv
mov
loope
cmc
inc
sbb
adc
cmps
fdivr
mov
jg
sub
in
into
add
fstp
shl
jge
sbb
cmp
test
dec
sbb
pop
lock
inc
int
pop
xor
les
xor
inc
movs
jg
dec
popa
in
enter
inc
fwait
mov
xor
repz
push
aam
clc
jbe
loopne
dec
jnp
push
call
xlat
ss
mov
jp
rcl
push
arpl
fild
jbe
or
outs
mov
add
pop
jnp
pop
adc
mov
xor
push
push
push
xor
sub
push
cwde
clc
mov
retf
jmp
fldenv
xchg
mov
adc
add
mov
outs
and
ja
inc
fwait
mov
xchg
xor
and
inc
int
inc
movs
aaa
mov
dec
inc
outs
cmp
gs
mov
inc
scas
fwait
pop
fld
mov
pop
or
retf
call
cmps
mov
and
sub
jbe
mov
fdivr
test
add
xchg
pop
idiv
adc
xor
dec
ins
pusha
or
rcl
mov
mov
sub
(bad)
hlt
sub
outs
mov
pop
fcomp
add
jae
inc
out
(bad)
lock
push
mov
hlt
clc
xor
aam
imul
xor
out
test
xor
ficom
mov
ja
jmp
pop
fist
pop
dec
test
xchg
pop
retf
mov
adc
pop
div
xor
pusha
sti
push
jmp
test
arpl
xor
and
cs
cmp
xchg
imul
call
in
mov
xchg
push
jns
dec
lahf
inc
imul
cmps
xlat
daa
pop
in
imul
outs
imul
jl
mov
push
shl
aaa
mov
xlat
sbb
cmps
ins
int3
in
pop
mov
in
aaa
jecxz
(bad)
jnp
cmps
dec
push
cmp
mov
or
push
ds
xor
jle
out
push
(bad)
fs
ins
pop
rcl
(bad)
mov
fnstsw
sub
lods
xor
aam
lods
sbb
add
popa
nop
cmc
mov
daa
in
xchg
xchg
lds
(bad)
or
xlat
(bad)
out
pop
int3
xchg
dec
test
dec
sub
sub
cmps
rol
inc
and
jmp
aas
out
movs
inc
std
push
test
movs
repz
cmc
pusha
enter
xor
xor
xchg
or
pusha
outs
push
leave
cmp
xor
inc
scas
retf
mov
inc
mov
push
adc
addr16
xor
mov
dec
jbe
mov
(bad)
ins
(bad)
ss
ds
and
xor
repz
mov
mov
lods
sbb
lock
mov
mov
pop
mov
retf
mov
movs
stos
adc
cli
fsub
xchg
mov
ror
shl
shl
inc
or
cdq
neg
and
dec
aam
push
stos
mov
fcom
pop
mov
mov
pusha
cmp
enter
stos
xchg
mov
enter
cwde
or
dec
xchg
cmps
xor
mov
adc
jbe
pop
pop
dec
adc
add
arpl
xchg
mov
mov
jb
shr
arpl
ret
dec
or
add
por
sbb
add
stos
loop
xor
dec
pop
and
or
sub
call
mov
and
xchg
adc
or
jecxz
dec
fisttp
call
popf
and
arpl
fcom
ja
xor
pop
jnp
xor
daa
push
rcr
ja
jl
loope
pop
inc
outs
test
aam
mov
sub
push
cmps
int
ja
sub
cwde
daa
mov
ret
pop
loopne
mov
aaa
lods
(bad)
mov
or
jecxz
adc
xor
loope
adc
aas
enter
into
mov
jmp
cli
sub
popa
push
ins
das
jle
inc
pop
(bad)
push
outs
test
adc
cmp
add
mov
add
mov
enter
inc
rcr
mov
mov
or
clc
xchg
add
out
xchg
shl
fmul
pop
jo
movs
rol
mov
mov
outs
ins
xor
or
sbb
push
jbe
and
adc
sbb
test
push
loope
mov
sub
cmp
add
call
daa
mov
push
mov
adc
mov
movs
mov
dec
mov
fwait
mov
pop
lahf
retf
arpl
fbld
jo
push
loop
fbstp
movs
push
in
shl
out
jmp
cmp
and
arpl
add
mov
or
lds
pushf
jno
or
arpl
cli
adc
lds
icebp
loope
pop
or
mov
cmp
jmp
addr16
les
cvtps2pi
fs
mov
push
or
mov
push
cli
outs
xchg
cmps
add
cld
pop
icebp
ja
xchg
std
out
xchg
cmp
inc
xchg
jle
mov
mov
mov
and
loope
jns
and
push
jne
fsin
pop
clc
adc
sbb
(bad)
repz
xor
jbe
or
dec
xor
test
cmp
pop
and
in
push
mov
push
push
cmp
retf
fst
fld
fcos
or
adc
add
div
and
mov
mov
add
ins
mov
inc
xor
and
jle
shr
mov
jle
inc
outs
mov
mov
push
jge
inc
lds
or
cmp
or
xchg
(bad)
fistp
fadd
jnp
shl
xlat
add
xchg
sbb
adc
lock
pop
sub
ffreep
int
sbb
test
push
in
pop
mov
loop
mov
(bad)
mov
mov
mov
imul
test
clc
mov
in
loope
lods
scas
sbb
xor
add
retf
xlat
dec
jb
shl
cwde
or
push
pop
aam
loopne
mov
fdivr
int
cmp
sbb
push
jp
test
inc
adc
enter
inc
adc
xchg
push
aas
fsubr
xchg
xchg
out
dec
cdq
nop
xor
pop
cli
popf
push
add
sub
movs
bound
mov
adc
test
call
iret
sbb
sub
xchg
add
faddp
and
jp
stos
jae
sbb
sbb
lods
popa
scas
cwde
outs
pop
cmp
push
arpl
test
mov
imul
daa
es
jnp
cmp
lock
cmovbe
loop
and
sbb
jb
mov
rcl
push
jnp
mov
xchg
cmp
push
test
mov
scas
jb
xchg
pop
dec
or
adc
fcom
dec
jle
in
mov
outs
ficomp
stos
arpl
fstp
jbe
data16
inc
jmp
shl
adc
aaa
fisubr
dec
mov
and
outs
or
mov
cmps
das
cmps
cmp
mov
xchg
add
pop
or
sub
xor
jbe
fs
xor
mov
jl
mov
or
outs
pop
inc
fisttp
adc
call
mov
gs
add
movs
call
pop
jne
xor
jecxz
clc
ds
jno
div
add
fld
dec
pushf
inc
mov
or
in
or
xor
push
jp
inc
sbb
inc
daa
lods
xchg
fs
idiv
loope
pushf
arpl
push
mov
sub
add
mov
movs
loop
(bad)
adc
xlat
pop
or
dec
jnp
cmps
jmp
jecxz
clc
sub
jnp
xchg
outs
(bad)
and
mov
jo
jbe
add
imul
pushf
sbb
std
xchg
cdq
push
sbb
fnstenv
sub
inc
gs
int
add
in
lds
pop
adc
sub
push
xor
cmp
out
and
cmp
into
movs
inc
iret
out
js
mov
pushf
jno
inc
fldln2
pop
stc
(bad)
repz
aaa
xchg
xchg
test
xchg
cld
add
hlt
clc
(bad)
adc
cmp
into
add
gs
push
xor
push
les
dec
add
repnz
and
cwde
sub
gs
xchg
fsubr
scas
push
test
cmp
cmp
aad
lods
push
mov
rcr
or
icebp
xchg
std
ss
mov
neg
dec
inc
data16
dec
push
clc
mov
fidiv
and
cmp
out
mov
pop
push
cld
jge
hlt
arpl
pop
mov
shl
mov
mov
loopne
mov
imul
mov
dec
add
out
psrlw
das
mov
retf
pop
jo
adc
dec
mov
rcr
sub
cmp
out
outs
repz
(bad)
cmp
in
jns
xor
adc
cmp
and
adc
aaa
adc
fmulp
mov
jns
push
ja
add
or
shr
call
sub
shl
and
sub
in
pop
pushf
jo
fisttp
ins
or
and
mov
adc
lock
inc
daa
jle
es
cwde
mul
adc
dec
xchg
rol
push
jne
hlt
je
std
lods
jmp
jno
shr
adc
and
add
loop
sbb
leave
mov
xor
shr
inc
adc
lahf
inc
or
(bad)
lock
cwde
and
enter
mov
das
mov
mov
push
dec
and
loopne
movs
and
rcr
js
pop
pop
cwde
or
fcomp
pop
das
ja
or
repz
arpl
dec
into
mov
jmp
push
xchg
add
stc
daa
in
cmp
mov
pushf
cmovae
xor
fadd
addr16
int
sar
dec
adc
daa
mov
ret
test
(bad)
jo
cmps
gs
jle
ret
inc
inc
sub
sub
mov
pop
cld
push
outs
adc
iret
into
mov
jo
cmp
aam
dec
fwait
add
or
retf
sub
dec
xor
cmc
mov
sbb
ss
sub
jnp
inc
lea
xor
jge
add
rcr
dec
mov
add
dec
inc
stos
jle
xor
test
mov
pop
data16
fs
into
sub
jne
sbb
cmp
add
or
in
xchg
mov
icebp
or
sbb
(bad)
adc
adc
pop
mov
jle
xchg
cmp
das
xor
(bad)
(bad)
push
xchg
outs
ss
imul
adc
sbb
mov
daa
or
jne
jp
loope
es
and
test
add
out
fisubr
leave
inc
xlat
mov
pop
imul
adc
imul
mov
leave
jle
nop
pop
mov
xor
mov
xchg
push
ret
inc
mov
push
cmps
jle
push
fst
(bad)
and
jg
jmp
mov
mov
les
stos
fld
scas
dec
cmp
adc
cmps
sub
fs
popa
or
dec
call
addr16
jecxz
adc
adc
pop
leave
mov
sahf
cmps
push
jmp
(bad)
in
out
inc
pop
out
fldenv
shl
setbe
dec
(bad)
fsubp
mov
aad
les
sbb
dec
jg
inc
test
dec
dec
cld
jb
mov
cmp
xchg
add
ds
xchg
mov
cwde
das
loop
sbb
push
adc
sub
mov
stos
hlt
lods
add
stc
mov
push
daa
pop
daa
ret
and
(bad)
fidiv
pop
stos
sub
lds
pop
out
xchg
retf
add
xor
cmp
fwait
sbb
and
cmps
add
push
xchg
mov
test
push
cdq
sbb
popf
imul
xchg
mov
pop
daa
(bad)
cli
scas
pop
sbb
inc
jno
dec
jmp
mov
shl
ret
add
int
jp
ret
pop
mov
pop
loope
mov
sub
jge
xchg
mov
cs
xchg
call
addr16
mov
imul
(bad)
mov
mov
mov
cs
clc
in
pop
cmp
xor
jl
repnz
stc
(bad)
dec
cmc
(bad)
mov
test
inc
xchg
in
mov
fidiv
jmp
loopne
sub
xor
and
in
mov
repz
imul
xor
loope
pusha
sub
or
mov
dec
push
mov
add
sahf
xor
push
pop
stos
push
mov
in
dec
xchg
mov
cmp
mov
mov
jns
inc
inc
fmul
fbld
aam
int3
scas
dec
add
pop
jns
gs
inc
mov
add
xchg
xor
sbb
and
cs
(bad)
xchg
cmp
mov
repz
pop
icebp
fxch
push
mov
mov
dec
ror
ins
call
bound
lods
add
pop
jg
dec
sbb
(bad)
retf
nop
lock
mov
inc
pop
pop
in
jge
dec
xchg
test
pushf
mov
dec
icebp
and
int3
sbb
js
out
jmp
js
repz
or
je
jge
dec
pop
pop
push
mov
(bad)
popf
scas
lods
call
mov
(bad)
xchg
pop
fdiv
shr
test
mov
adc
pop
jmp
rol
pop
adc
bt
cmp
outs
(bad)
in
cmp
jbe
mov
adc
dec
pop
or
xchg
sub
xor
xchg
aam
dec
lods
repz
sahf
pop
in
or
nop
and
jno
inc
cmps
inc
(bad)
ins
cmp
push
in
mov
xlat
and
mov
or
imul
mov
xchg
cmp
in
(bad)
mov
pop
aad
sbb
xor
div
push
aad
xor
dec
data16
mov
inc
add
or
inc
pop
inc
into
cmp
sub
or
test
std
push
cmc
pop
shr
ins
into
aad
add
imul
sub
mov
mov
clc
xchg
sub
and
pop
rcr
sbb
scas
inc
jl
or
jp
jno
cmc
ret
adc
pushf
and
mov
pop
xchg
outs
xchg
and
xor
fiadd
test
or
bound
fld
fild
dec
xchg
out
shl
inc
jno
cmps
pop
les
push
cmp
aad
or
sub
movs
icebp
fdiv
out
pushf
sub
mov
sub
sti
(bad)
push
scas
adc
fbstp
fucom
cld
cmps
mov
pop
into
dec
test
add
mov
sub
(bad)
xchg
jb
sub
sub
cmp
pop
std
mov
xlat
xor
popa
mov
(bad)
ins
aad
jno
arpl
jl
dec
fmul
or
cmps
xchg
int
mov
push
jbe
je
cmp
test
dec
mov
mov
xchg
imul
mov
ins
cwde
pop
cmc
jg
cs
dec
cmps
hlt
popa
test
and
popf
or
js
or
inc
dec
fmul
(bad)
cld
xchg
daa
loop
or
outs
pushf
cmp
int
ret
loop
lods
add
inc
or
pop
nop
fistp
ss
or
and
icebp
xchg
jmp
inc
loop
xor
das
sub
jecxz
movs
jnp
jle
and
(bad)
(bad)
pop
ficom
pop
jmp
mov
and
lahf
pop
xchg
jmp
dec
xor
mov
sub
lahf
dec
stos
push
xor
cmp
push
fwait
mov
nop
or
lea
fcmovnu
fisub
add
scas
jne
test
fcom
jns
sbb
icebp
sahf
add
js
jge
jb
mov
adc
loop
(bad)
retf
arpl
shl
fst
and
movs
jge
jo
retf
xlat
or
push
aaa
cmps
xchg
dec
add
jnp
sbb
mov
mov
aaa
aaa
out
pop
xor
cmp
jmp
xor
dec
jp
mov
cdq
ins
cld
xlat
mov
(bad)
mov
test
div
mov
push
in
shl
popa
sub
pop
adc
rol
dec
in
cmp
add
ficomp
mov
mov
ds
and
cmp
rcr
or
ds
ror
enter
dec
mov
scas
dec
mov
mov
xchg
mov
adc
add
stos
mov
and
mov
and
and
ins
inc
add
push
dec
leave
jge
pop
cwde
and
pop
enter
mov
adc
aas
mov
loopne
in
push
add
fiadd
xchg
dec
pop
call
or
stos
cdq
aas
dec
cmp
std
add
sahf
mov
add
imul
arpl
aas
cmps
inc
cmp
pop
pop
xchg
jns
mov
jmp
pcmpgtw
lea
ret
dec
std
mov
lahf
adc
xlat
jmp
out
inc
arpl
daa
sti
das
cmps
push
shl
jne
not
(bad)
mov
cwde
shl
popf
push
sbb
dec
adc
stc
pop
pop
mov
fcomp
cwde
lods
dec
inc
pop
dec
mov
mov
inc
jmp
jb
xor
add
ins
add
mov
outs
jne
fs
pusha
jp
push
fisubr
xor
ret
mov
jle
add
and
mov
inc
sbb
mov
call
jp
fdiv
jp
aas
sbb
pushf
stos
jno
imul
dec
aaa
inc
inc
pushf
ins
and
fnstenv
jo
cmp
stos
outs
inc
push
push
pop
or
cmp
cwde
jbe
stos
sub
js
pushf
stos
outs
rcl
neg
xchg
or
cli
or
cmp
std
or
sub
dec
xor
sahf
cmps
ss
jo
mov
and
jns
mov
sbb
repnz
mov
loope
jg
ins
push
(bad)
sahf
ins
adc
pusha
dec
jmp
jns
and
mov
mov
ret
mov
jne
aas
test
dec
rcl
mov
movs
dec
dec
push
inc
mov
stos
sahf
or
jp
int
mov
sar
or
mov
push
test
adc
test
(bad)
sbb
lahf
jns
out
pop
or
cmps
dec
push
cmp
xchg
ret
je
arpl
pop
lahf
xlat
inc
in
pop
cmps
dec
jmp
int
pop
mov
xchg
push
ret
clc
inc
mov
lock
cwde
imul
clc
aam
push
imul
(bad)
(bad)
fadd
cmp
mov
xor
inc
aad
fdivp
push
data16
mov
mov
sub
jns
test
and
mov
add
pop
pop
sar
push
xlat
call
sub
jae
add
fsubr
add
jmp
adc
push
pop
std
mov
es
shl
(bad)
js
out
pop
scas
adc
sub
movs
mov
push
int3
mov
pop
into
inc
pop
cmp
mov
xchg
pop
outs
mov
jecxz
and
aad
ret
adc
fisttp
data16
jo
rcl
fst
inc
inc
and
pushf
push
add
ror
in
fistp
pushf
test
xchg
int
(bad)
adc
pushf
jg
xlat
lds
cmp
lea
dec
add
jp
and
adc
xchg
xor
dec
sti
dec
xor
daa
in
cmp
push
icebp
sbb
add
inc
xchg
xchg
pop
les
fbld
(bad)
cdq
pop
cli
leave
jae
idiv
or
push
cmp
mov
mov
mov
sahf
sbb
pushw
mov
ds
mov
(bad)
jbe
push
in
je
stos
jne
xchg
(bad)
hlt
call
(bad)
sub
mov
mov
cdq
into
aaa
fisub
inc
fs
jl
test
imul
xor
mov
add
rcr
jl
lods
and
mov
mov
cmp
aad
adc
xor
outs
xchg
push
addr16
fisubr
cmp
and
sbb
add
mov
pop
je
call
fisubr
hlt
dec
mov
shl
rol
push
cmp
loop
mov
xor
sbb
test
sbb
jne
mov
cmc
ins
fs
sbb
call
loop
adc
adc
stc
pop
sar
sbb
or
cmp
sahf
fbld
dec
daa
mov
test
pushf
es
shl
cmp
iret
into
mov
fwait
mov
xchg
rcr
sub
fld
sbb
pop
cs
xor
and
stos
xor
jp
jb
xor
mov
xchg
cmc
xchg
adc
cdq
adc
mov
inc
lea
test
in
or
shl
sub
jno
loope
cdq
int
imul
xor
push
jecxz
xchg
std
sbb
les
jge
ins
inc
mov
bnd
scas
stos
nop
add
or
sub
leave
xor
ucomiss
cld
test
adc
pop
push
int3
sub
mov
jle
sbb
hlt
cmp
cs
push
push
xchg
sub
daa
test
in
mov
pushf
out
fist
out
lock
jbe
ret
mov
pop
sub
adc
test
cmp
and
das
nop
cmp
jl
enter
jg
push
movs
jne
cmps
rol
sub
jo
xchg
add
sbb
xchg
jmp
xor
cli
sub
retf
loopne
jns
sub
sbb
je
xchg
std
aas
or
mov
jl
jmp
push
push
loop
cmp
sbb
imul
or
shr
and
fld
bound
jp
bound
(bad)
lds
pop
inc
fcmovnu
dec
cdq
push
sar
mov
dec
xor
loop
(bad)
jbe
sbb
inc
sbb
fwait
sbb
push
jmp
and
ins
cmp
push
pop
mov
pop
enter
ror
mov
ret
cmps
cmp
jecxz
daa
lock
pusha
mov
ins
xchg
add
sar
in
loopne
mov
jb
xchg
add
and
jne
aad
(bad)
out
mov
dec
pop
jmp
sar
push
pop
ja
iret
mov
mov
jbe
xlat
mov
cwde
lds
sbb
or
xor
jae
xor
cmp
pusha
hlt
rol
add
adc
cmp
xor
in
mov
mov
inc
pop
cmp
icebp
push
lock
xchg
xor
arpl
mov
cmps
dec
push
push
pusha
das
nop
leave
inc
xchg
mov
in
push
in
adc
es
sub
xchg
aam
fmul
sbb
mov
add
daa
and
shl
xchg
(bad)
loop
shl
cld
test
pop
dec
loope
movs
cwde
in
sar
and
add
push
jmp
stos
mov
pop
cmc
xor
sub
outs
mov
shr
push
bound
push
sub
ffree
hlt
dec
(bad)
or
aad
mov
ret
mov
push
clc
cs
inc
mov
sbb
mov
sbb
and
push
das
les
dec
cmp
add
mov
jno
mov
sbb
xchg
mov
call
cs
mov
daa
mov
(bad)
call
shr
hlt
jg
(bad)
mov
mov
xor
bound
sub
cmp
cwde
fcomp
mov
lods
push
pop
cmp
mov
std
ja
lds
ret
js
ins
inc
dec
sub
mov
ins
aas
mov
popa
push
jmp
sbb
cmp
xchg
rol
aaa
cmp
loope
std
out
repnz
fild
adc
cmps
popa
mov
repz
mov
mov
sbb
xchg
jp
xchg
push
inc
aad
outs
jb
dec
(bad)
fsub
int
shr
pop
js
mov
cmp
jae
and
jbe
ss
xchg
outs
push
test
pop
js
inc
scas
es
scas
sub
lock
pop
mov
int3
or
test
cwde
gs
push
call
add
push
push
std
pop
cld
popf
aaa
test
add
pop
adc
cmp
pushf
icebp
ins
dec
adc
cmc
jae
sar
inc
push
mov
mov
add
imul
imul
ins
jns
push
add
inc
cwde
cmp
mov
lods
cmp
loope
sbb
(bad)
sar
cmp
jne
xor
pop
ins
add
inc
pop
xor
sbb
jmp
and
add
mov
push
(bad)
pop
sub
adc
imul
out
dec
xchg
loop
(bad)
dec
stos
xchg
in
adc
jle
rol
sbb
inc
inc
mov
pop
lods
xchg
sub
cli
clc
in
xchg
add
cmp
movs
pop
lds
pusha
mov
push
(bad)
iret
dec
int
mov
mov
out
add
and
push
pusha
not
inc
call
mov
mov
adc
imul
sub
or
loope
adc
and
(bad)
or
stc
jns
sti
mov
push
out
jmp
test
inc
push
lods
retf
push
jmp
loopne
in
mov
xchg
enter
cmp
xchg
xchg
popa
fimul
xchg
jg
push
cmps
mov
mov
fidiv
or
jmp
test
pusha
jg
cdq
mov
xchg
xchg
or
and
sub
in
enter
cli
dec
mov
jbe
jbe
(bad)
lock
mov
pusha
outs
and
mov
dec
jnp
pop
and
pop
sbb
imul
mov
cmp
(bad)
(bad)
xor
imul
push
mov
fst
mov
lods
js
xchg
xchg
dec
and
mov
je
dec
sbb
cs
pop
outs
add
cdq
ins
mov
xor
out
push
mov
cs
mov
mov
retf
pcmpeqd
or
test
dec
jl
mov
fiadd
add
pop
(bad)
out
jmp
lahf
jbe
or
loop
xchg
or
xchg
cmp
in
cld
outs
stos
fwait
and
out
jae
mov
xchg
icebp
pop
out
mov
mov
xchg
pop
inc
das
cmp
push
jns
jle
inc
and
mov
(bad)
sti
dec
or
mov
jp
pop
xchg
out
sbb
xchg
mov
imul
mov
ret
add
in
sub
lods
int
cdq
cmp
add
adc
sub
rcr
xchg
test
inc
ss
sbb
sbb
inc
(bad)
or
inc
inc
mov
test
or
inc
xchg
adc
int
cli
mov
or
test
mov
in
push
cdq
jp
enter
mov
jecxz
cwde
loope
pop
ret
dec
xchg
lea
pop
imul
fimul
aaa
pop
push
retf
jmp
jg
lock
xchg
adc
dec
movs
test
bound
dec
pop
daa
icebp
sar
inc
mov
imul
dec
mov
pop
fimul
xor
xor
adc
test
mov
xor
jmp
jbe
cmp
dec
loop
idiv
push
clc
scas
mov
and
test
push
dec
inc
add
push
in
popa
and
test
jecxz
mov
ds
mov
sbb
sar
rcl
push
jno
jo
mov
(bad)
dec
push
movs
dec
add
or
xchg
iret
retf
bound
cmp
or
js
xor
sub
pop
outs
dec
ret
or
mov
(bad)
and
mov
das
jge
test
pop
lds
mov
add
mov
scas
ret
rcl
pop
xchg
cwde
outs
push
xchg
loop
xchg
shl
out
data16
dec
daa
mov
sbb
div
jecxz
mov
clc
cmps
ret
xor
adc
pop
daa
jo
xor
(bad)
enter
mov
sub
fldl2t
jb
mov
dec
jns
lahf
nop
fisub
adc
lock
mov
mov
xchg
and
loopne
inc
xchg
mov
sbb
loop
adc
movs
mov
sub
js
push
mov
out
stc
in
jle
lods
aas
test
es
ds
mov
ins
cli
jo
jecxz
sbb
aad
add
sbb
jae
shl
stos
and
push
retf
fdivr
stos
inc
xchg
xlat
xor
jb
ret
sbb
dec
(bad)
js
jb
mov
rcr
add
pop
test
in
outs
fwait
ss
push
mov
pop
mov
sbb
xchg
cdq
cwde
sbb
adc
rol
pop
or
pop
call
cmp
iret
push
push
aad
lahf
mov
icebp
inc
or
inc
int
mov
sub
aad
xor
mov
dec
inc
jle
and
add
in
ret
push
add
(bad)
sbb
ud2
xchg
mul
mov
mov
inc
sbb
in
and
and
pusha
loop
xor
ja
sbb
sbb
ins
fcom
dec
dec
jns
push
adc
mov
add
ror
add
test
fwait
sahf
leave
daa
fwait
jecxz
push
(bad)
imul
mov
fcmovnb
xor
mov
imul
gs
xchg
push
inc
movs
stos
lods
and
adc
adc
and
mov
aaa
push
out
sub
scas
jbe
xchg
iret
mov
retf
and
imul
aaa
paddsb
shr
dec
cmovae
call
mul
sti
push
pusha
and
daa
retf
stos
or
outs
adc
pop
dec
add
dec
dec
dec
dec
xchg
hlt
into
inc
jg
sahf
jnp
inc
xchg
push
fwait
int
push
(bad)
jge
popf
fisttp
nop
hlt
push
daa
dec
pushf
jge
xchg
jp
les
or
ss
adc
ror
mov
js
xlat
and
fisub
lods
mov
and
jno
jmp
lock
(bad)
stos
adc
sbb
push
clc
rol
cli
cdq
nop
xchg
push
add
xor
add
xchg
add
mov
sbb
popa
jns
cs
mov
ins
jne
fild
add
mov
cmp
das
mov
movs
cld
pop
jmp
push
jnp
mov
adc
mov
daa
daa
std
or
mov
mov
fnsave
cmp
mov
sti
imul
adc
mov
jae
adc
mov
sub
xor
sbb
js
add
pusha
mov
jno
leave
stos
lods
sub
jae
sbb
js
mov
(bad)
push
jbe
mov
jecxz
(bad)
int3
or
arpl
cmp
jmp
aas
and
(bad)
jb
fdivp
xor
mov
inc
out
adc
dec
and
sbb
lods
mul
(bad)
loopne
into
das
mov
loope
mov
add
inc
out
push
scas
neg
push
pop
sbb
cmc
cmp
lods
adc
jecxz
sub
fld
stos
push
inc
ins
int
jp
nop
pop
pop
das
out
(bad)
xchg
dec
(bad)
cmp
stc
jle
inc
ja
data16
test
cmc
and
lock
imul
stc
shr
or
aaa
add
(bad)
out
jecxz
sar
popf
pushf
pop
mov
sub
cmovnp
sub
inc
cmp
loope
repnz
jb
or
out
outs
jne
push
push
adc
mov
fistp
ret
mov
ds
(bad)
mov
(bad)
dec
in
cmp
enter
or
xor
in
mov
(bad)
fprem
mov
pop
mov
mov
or
(bad)
cmp
mov
fwait
ret
or
loopne
pop
dec
shl
adc
sti
bound
adc
jne
stc
xlat
and
cmps
mov
shl
jmp
aad
dec
inc
dec
or
ss
in
mov
bnd
pushf
pop
scas
mov
push
scas
pushf
fiadd
jg
iret
sti
(bad)
dec
dec
mov
mov
push
cs
xchg
jecxz
jge
aaa
sbb
call
rcr
adc
mov
cmps
lea
inc
outs
jl
test
gs
ret
ja
loop
repnz
test
fcom
mov
mov
add
or
push
or
lahf
or
mov
add
push
rcr
push
adc
retf
sbb
jmp
pop
lods
pop
cmp
jl
into
jo
dec
das
movs
aam
jp
(bad)
adc
sbb
imul
xchg
pop
inc
pop
les
repnz
jae
enter
add
xor
cmc
and
js
sar
loope
es
cmps
jbe
adc
retf
imul
popa
pop
int
vfrczss
scas
sub
ret
mov
cli
dec
pop
test
call
inc
clc
fs
cmc
nop
mov
inc
mov
shl
movs
data16
add
xor
sub
dec
rdmsr
enter
sahf
and
adc
aam
leave
js
(bad)
cmp
hlt
jmp
mov
inc
stos
repz
or
mov
(bad)
pop
pop
(bad)
std
aas
adc
in
cmp
push
aad
pop
adc
xlat
data16
gs
ficomp
mov
add
in
fs
inc
inc
pop
fld
outs
cwde
nop
dec
popa
push
or
add
aaa
push
cmp
sub
rcr
das
mov
hlt
in
and
std
mov
outs
inc
push
retf
xchg
(bad)
loop
dec
pop
loop
pop
mov
sub
mov
(bad)
int3
cmps
push
xchg
punpckhbw
sub
jns
ror
add
out
rol
push
adc
jge
out
mov
xor
push
add
ret
test
test
or
push
ja
xchg
pop
cmp
das
mov
pop
cwde
push
mov
xlat
jge
in
jmp
retf
neg
cmp
jge
cmc
xor
push
add
jl
push
hlt
jle
inc
bound
pop
ror
(bad)
dec
mov
push
mov
sti
mov
or
stos
sbb
aad
mov
jno
cdq
add
dec
pop
repnz
jbe
sub
cmp
(bad)
cmp
and
sbb
ret
sbb
out
xor
out
pop
js
xchg
hlt
dec
mov
dec
pop
mov
cmp
int3
xor
cli
ins
push
leave
int3
loope
std
mov
add
and
jns
ror
loopne
hlt
adc
and
stc
xchg
xor
test
jg
sbb
cmp
ds
add
sub
aas
mov
cmp
imul
mov
sar
div
pop
jecxz
inc
mov
test
push
xchg
adc
inc
or
mov
cwde
dec
fwait
sahf
mov
mov
data16
cmp
jae
cmp
xor
mov
sahf
lahf
in
sub
cmp
int
fisubr
xor
(bad)
adc
mov
jns
mov
adc
and
add
in
xchg
aaa
inc
mov
jmp
jmp
into
dec
cmp
mov
rol
arpl
pusha
inc
or
or
xchg
mov
pop
out
lods
cli
scas
sahf
cs
mov
add
or
sub
ins
cmc
in
xor
or
bound
shl
xor
mov
dec
sbb
jo
xor
out
sbb
xor
imul
jbe
xchg
sbb
hlt
push
int3
aam
loop
rol
sbb
and
cmp
ins
xor
push
push
add
mov
sbb
sub
test
iret
sar
xor
mov
hlt
jno
nop
mov
popf
shl
movs
repz
ffree
repnz
sub
fimul
push
inc
addr16
dec
out
es
adc
jo
jnp
stos
cld
xchg
cmc
xchg
cmp
mov
stc
jmp
stos
adc
cmp
cmc
pop
jl
mov
imul
sbb
frstor
mov
icebp
sbb
xchg
popa
cmp
sub
dec
and
mov
mov
shr
test
in
add
push
(bad)
repz
jmp
popa
push
ds
pop
cmp
int3
and
lahf
test
mov
cs
sbb
sub
sahf
test
mov
xor
(bad)
in
ja
cli
cmp
cwde
lds
sub
sbb
fld
cs
scas
repz
scas
inc
shl
xor
lea
jl
pushf
stos
daa
cmp
jp
xchg
mov
nop
cmp
mov
xchg
push
mov
xor
sbb
add
dec
mov
sbb
bnd
mov
in
and
dec
and
xor
pop
imul
dec
shl
test
mov
mov
ins
(bad)
mov
inc
jle
nop
stos
xchg
call
rol
ds
(bad)
lock
and
mov
loope
in
add
jno
jns
dec
mov
sub
cmp
pop
mov
dec
jns
inc
sub
mov
int
stc
push
leave
dec
(bad)
cld
stos
cdq
aam
sbb
inc
add
in
push
(bad)
lods
gs
mov
int3
xchg
push
mov
mov
popa
add
push
outs
js
cwde
scas
add
adc
add
dec
add
aaa
ss
lea
popa
jecxz
mov
imul
aas
mov
imul
retf
adc
das
pop
sub
test
outs
ja
out
or
es
iret
push
xchg
dec
mov
dec
xor
(bad)
ret
outs
xor
mov
icebp
or
call
push
leave
(bad)
jns
ret
mov
xchg
shr
sub
mov
xchg
add
stos
in
movs
cwde
ret
outs
repnz
repz
out
hlt
xor
sub
mov
popf
mov
cmp
test
out
movs
bound
push
(bad)
repnz
push
sbb
cli
add
fcomip
loopne
out
jg
xchg
push
xor
and
sahf
retf
or
stos
cmp
push
sbb
adc
push
xor
xchg
or
pop
into
inc
aam
jge
fsubr
(bad)
xor
(bad)
jle
jle
movs
shr
dec
repnz
cmps
cmc
inc
dec
int
sahf
arpl
test
pusha
ja
adc
int
ins
mov
ror
pop
cli
adc
push
pushf
xlat
inc
sub
add
or
push
sub
sti
sbb
loope
xchg
add
sbb
cmp
aad
cli
add
jno
and
push
xchg
call
push
xlat
fcomp
(bad)
fistp
mov
mov
hlt
ins
pusha
cmp
pop
inc
jns
add
mov
out
sub
cmp
sbb
test
cld
(bad)
out
jno
test
cli
xor
imul
cmp
ins
popf
jp
push
nop
lods
sbb
jge
leave
test
in
in
mov
jno
call
pop
xchg
cmp
pop
mov
mov
inc
(bad)
retf
or
jle
cmp
and
or
xchg
popa
lea
inc
test
add
sar
sub
xlat
cli
push
cmp
dec
ret
push
adc
scas
cmp
push
sub
pop
mov
outs
dec
or
repz
sbb
out
int3
cld
cdq
(bad)
xlat
enter
jle
push
pop
jne
(bad)
int
or
mov
mov
scas
mov
mov
pop
mov
addr16
test
push
les
(bad)
pusha
fidiv
aas
mov
push
ja
daa
aad
mov
(bad)
fisub
mov
test
fs
enter
add
movs
xchg
pop
jecxz
mov
jae
push
sub
pop
xchg
mov
aam
or
sub
in
add
dec
int
(bad)
movs
dec
xchg
mov
out
dec
xor
mov
xchg
movs
fisttp
add
sub
add
ss
gs
sbb
push
add
mov
and
dec
pop
imul
or
mov
pop
fwait
sbb
jl
nop
ret
pusha
pop
or
sub
or
pop
jne
mov
add
adc
fcomi
jbe
mov
or
dec
hlt
and
mov
xor
push
cmp
(bad)
stos
dec
(bad)
push
xchg
mov
les
mov
inc
ins
pop
jbe
sbb
nop
jle
cmp
or
mov
idiv
push
mov
cli
cmp
retf
push
xor
and
inc
ds
repz
(bad)
jecxz
mov
pushf
imul
in
stos
sub
and
pop
jmp
movs
aaa
pop
(bad)
out
mov
in
pop
mov
mov
mov
int3
lahf
movs
je
mov
dec
push
xchg
ins
out
not
or
push
bswap
cmps
or
fisttp
push
leave
popf
jae
scas
push
jbe
ror
push
cmp
mov
jnp
ficomp
sbb
cs
es
xchg
mov
jns
sbb
adc
jl
shl
fwait
test
pop
cwde
pop
push
outs
cmp
push
xor
in
out
leave
xlat
dec
aas
xlat
mov
out
inc
int
add
adc
out
jne
pop
sbb
jp
cmp
es
mov
sbb
lods
xchg
sahf
test
push
ret
movs
inc
xchg
loopne
xchg
and
and
push
les
mov
rol
dec
movs
or
icebp
mov
je
fwait
jno
imul
mov
jnp
push
daa
cmp
xchg
fsubr
dec
lods
mov
test
mov
xor
(bad)
fdiv
xchg
out
inc
sti
mov
mov
fnstcw
cmp
ret
nop
stc
iret
sub
sbb
(bad)
sbb
jbe
mov
push
or
bound
add
pop
fsubr
pop
inc
rcl
mov
xor
ret
and
adc
pop
es
popf
into
out
dec
add
aas
and
scas
pushf
(bad)
icebp
sbb
mov
mov
or
sub
test
mov
fsub
cmp
inc
mov
retf
mov
mov
loop
mul
loopne
jmp
ret
add
icebp
fmul
ins
pop
adc
icebp
pop
shl
cmp
or
(bad)
mov
fwait
pop
popf
mov
adc
sbb
rcl
xchg
repz
(bad)
and
jnp
pop
push
jmp
or
and
mov
(bad)
(bad)
sbb
imul
aaa
xor
data16
mov
scas
pop
add
dec
jb
cmc
sar
jmp
dec
push
call
inc
add
dec
push
cmps
cwde
fsub
cmp
aad
psubq
mov
add
pop
jle
sbb
xchg
lds
cmps
pop
sub
pop
pop
push
mov
shr
outs
cld
out
xchg
sar
fstp
dec
imul
mov
test
cmps
inc
jns
xor
(bad)
imul
mov
clc
push
popf
sti
ds
imul
(bad)
push
mov
xor
in
cs
out
inc
js
ds
repz
dec
addr16
div
jmp
iret
push
ficom
add
loop
sar
hlt
cmp
js
pop
movs
sbb
in
test
inc
ins
jmp
xchg
adc
mov
scas
mov
ret
mov
jmp
stos
aam
fstp
stc
sub
mov
xchg
push
sub
pop
enter
rcl
jmp
push
xor
lods
inc
shl
or
xor
jae
mov
int3
inc
xor
sbb
aad
(bad)
ins
cs
dec
retf
push
or
sbb
and
cmc
cmp
js
mov
stos
cmc
cmp
stos
cmp
xor
jae
cmc
es
ret
and
hlt
adc
aam
xor
repz
mov
cld
(bad)
jl
in
mov
add
push
sbb
sbb
cli
sbb
add
xlat
sbb
int
adc
mov
into
or
shr
mov
and
jecxz
outs
sahf
cmp
sub
adc
push
sahf
nop
mov
xor
and
mov
push
jmp
mov
std
add
mov
pop
mov
mov
and
lods
cmps
aas
mov
in
mov
das
xchg
jle
xor
adc
push
movs
and
xchg
daa
pop
into
add
in
test
das
inc
push
xlat
and
jo
ds
popa
in
stc
push
cmp
push
push
push
addr16
xchg
mov
sub
jecxz
and
out
sbb
fdiv
ja
jns
stc
and
movs
jle
inc
pop
addr16
push
(bad)
jle
dec
or
push
and
sbb
jl
loopne
add
or
or
inc
into
sbb
sahf
adc
cmp
ret
push
push
mov
sub
adc
icebp
dec
(bad)
jp
hlt
jl
jp
cmp
xchg
jg
cld
stos
shr
push
and
out
test
inc
lea
(bad)
sub
(bad)
dec
mov
fst
ret
cwde
lods
inc
mov
js
mov
call
pop
dec
mov
mov
pop
loope
jge
cmps
mov
push
neg
shr
xchg
or
jo
xchg
mov
int
inc
jmp
(bad)
stos
shl
inc
xchg
(bad)
cmp
imul
xchg
add
call
gs
pop
ds
xchg
dec
mov
sub
lahf
sbb
clc
mov
jnp
cld
xchg
or
sbb
jl
add
aas
js
sub
mov
stc
jbe
(bad)
(bad)
xchg
push
push
adc
mov
mov
push
outs
jmp
(bad)
sar
cmps
lahf
lock
lds
sub
inc
xor
loope
mov
mov
mov
or
adc
movs
mov
sti
pop
adc
mov
mov
jle
add
xor
jne
das
dec
mov
addr16
push
mov
cwde
or
popa
pop
leave
(bad)
mov
das
fadd
dec
fiadd
movs
das
ja
xor
jno
cwde
inc
lock
lahf
in
mov
ret
sub
popa
sub
cmps
mov
mov
jp
lds
mov
clc
inc
ret
in
es
cmp
jl
inc
retf
xchg
icebp
ret
movs
lods
bound
push
pop
bound
pop
fs
mov
aaa
loop
das
test
outs
mov
bound
and
scas
jmp
ret
or
jle
(bad)
mov
loope
cmps
push
aad
mov
push
dec
in
shl
xchg
or
jns
add
rol
xlat
mov
pusha
(bad)
mov
lods
inc
daa
cmps
es
(bad)
push
adc
mov
int
cmp
test
add
xor
sbb
inc
inc
ins
ja
jecxz
(bad)
aam
sti
adc
inc
in
popf
fsubrp
inc
adc
(bad)
xor
adc
icebp
cs
and
mov
dec
pop
outs
pop
shr
cdq
addr16
jecxz
stc
pushw
mov
sbb
rol
fucom
pop
loop
mov
adc
cdq
or
jne
sbb
or
or
popa
mov
std
xchg
test
pop
jbe
add
repz
aaa
je
retf
data16
mov
mov
ins
mov
lahf
test
stos
jecxz
pop
icebp
push
jmp
push
mov
nop
call
mov
sar
add
sbb
outs
add
arpl
ret
test
mov
sub
jl
jmp
add
jbe
or
imul
add
dec
mov
and
scas
adc
or
and
dec
clc
or
lahf
bound
mov
imul
rcl
hlt
sub
adc
ins
push
mov
aad
mov
or
or
fs
inc
inc
jl
ins
sub
aam
ins
lock
loop
ins
xor
test
xlat
mov
mov
mov
fist
fsub
adc
test
pop
mov
imul
mov
push
or
xchg
jp
lock
test
cwde
sbb
mov
adc
leave
les
loop
cmp
push
test
test
push
in
lods
shl
fnstenv
pop
push
sub
mov
mov
mov
ja
add
adc
adc
and
add
fidivr
aas
or
pop
mov
movs
or
mov
dec
cdq
das
cmps
xor
dec
(bad)
push
push
pop
ss
pop
jnp
pop
ss
(bad)
jmp
inc
ss
adc
fild
xor
in
enter
mov
hlt
movs
add
sub
sti
cmp
jmp
jle
je
mov
into
mov
xchg
jge
(bad)
sti
fucomi
iret
jo
sbb
iret
add
gs
sub
adc
call
push
stc
loop
pop
dec
xor
cmp
xlat
into
or
sbb
pop
xor
pop
dec
jbe
loop
dec
sbb
cld
fwait
sub
call
in
js
jbe
ud0
repnz
fsub
inc
pop
outs
xchg
cld
adc
(bad)
mov
mov
xchg
into
sub
cli
(bad)
in
add
xor
mov
js
xchg
mov
push
shr
pop
outs
scas
retf
cli
pop
lods
stos
xchg
je
jno
push
pop
pusha
in
fdivr
not
jno
mov
out
pop
mov
loop
mov
push
mov
jmp
sub
mov
mov
push
int3
add
mov
test
pop
mov
push
aaa
sahf
inc
and
xchg
test
lods
lods
shl
mov
popf
sbb
repnz
jns
int3
add
mov
ss
dec
adc
mov
sub
cmpps
lock
mov
fsubr
inc
xchg
adc
ins
nop
mov
int
jne
push
mov
pop
adc
mov
or
and
std
pop
jns
dec
cld
out
pop
daa
push
shl
xchg
inc
adc
or
xor
retf
out
sbb
jb
into
mov
loopne
jb
(bad)
jnp
enter
or
mov
cmp
stc
dec
sbb
loope
addr16
sub
shl
inc
xlat
idiv
aam
jns
sar
xchg
xor
aaa
dec
ins
and
mov
lods
lds
add
inc
loope
cmp
jb
mov
mov
stos
mov
jmp
dec
enter
(bad)
retf
inc
dec
sub
repz
rol
sbb
or
sub
xchg
sub
in
cmp
cmp
push
xor
sfence
gs
adc
xor
jg
idiv
das
push
mov
and
sbb
mov
ss
and
or
out
loopne
ret
and
or
inc
repnz
xlat
cs
xor
enter
and
rcr
ror
xor
(bad)
shl
bound
add
js
repnz
cli
jo
dec
scas
je
adc
cmp
dec
mov
popf
sbb
cmps
jp
add
jno
dec
and
jae
ss
test
sub
call
cmp
out
fisub
push
cmp
repnz
pop
xchg
repz
dec
vcvttsd2si
adc
ja
(bad)
sub
xchg
sbb
dec
fild
mov
xchg
mov
push
jecxz
cmps
lods
mov
sti
aam
jp
mov
loopne
(bad)
push
xor
xchg
jge
cdq
jo
lahf
jg
sub
outs
mov
mov
dec
ins
retf
sbb
dec
add
and
push
es
push
adc
popa
inc
ss
sub
mov
sahf
mov
dec
push
pop
retf
cmc
sbb
dec
jge
clc
mov
cmp
imul
loope
xlat
mov
fidiv
or
ins
aam
fdiv
push
jl
hlt
jns
outs
mov
or
push
adc
sub
or
clc
test
pushf
leave
dec
mov
std
test
lods
mov
jg
add
int3
jge
lahf
dec
jb
jecxz
push
xchg
inc
mov
push
push
sbb
lahf
scas
cli
aam
xor
dec
mov
js
(bad)
pop
sub
das
xor
ds
mov
adc
or
clc
dec
test
idiv
pop
push
retf
xchg
jo
lods
sbb
sub
std
in
sbb
cmc
sti
mov
mov
outs
pop
mov
cmp
or
fimul
adc
out
cdq
in
in
js
js
cmp
int
test
ret
pop
cmp
fstp
sbb
push
mov
sbb
ins
xor
xlat
in
push
into
xor
push
push
ins
sbb
hlt
cmp
mov
lea
fs
(bad)
call
push
mov
cmp
fst
sub
push
jp
in
jmp
daa
and
inc
jecxz
ins
xlat
dec
in
adc
or
int
movs
adc
and
dec
mov
loope
or
mov
stos
cmc
push
adc
fcmovb
pop
cld
scas
inc
pop
cli
call
jge
ins
dec
shl
push
icebp
xchg
dec
sbb
cmp
sbb
fimul
push
jno
add
movs
inc
mov
shl
stc
scas
sub
push
mov
into
(bad)
ins
imul
sbb
cmc
gs
cmp
cmp
pop
mov
jmp
aad
inc
pop
xchg
dec
mov
lea
xlat
mov
mov
in
jge
cmps
cdq
retf
call
lds
jg
ja
lods
shl
mov
or
das
xchg
jns
or
adc
xchg
es
mov
add
dec
mov
loopne
push
mov
mov
retf
je
aaa
lock
jmp
aaa
push
and
jne
sahf
fld
xchg
mov
jb
push
cmp
repz
xchg
jns
(bad)
pop
cmp
or
xor
jbe
stc
mov
test
sub
out
test
cli
popa
scas
in
lea
mov
test
xchg
outs
jno
jb
jmp
jne
pop
fild
mov
mov
and
jns
ficom
push
cmc
ret
and
mov
int3
movs
inc
adc
movs
lds
cmp
fnstsw
out
gs
pop
sahf
out
cmp
inc
add
inc
mov
mov
xor
adc
call
lock
dec
or
call
dec
jb
jg
cmc
lock
nop
dec
or
push
xor
iret
sub
and
dec
call
inc
iret
sub
xor
mov
js
mov
arpl
out
mov
jg
hlt
mov
adc
jecxz
xchg
mov
nop
repz
mov
call
push
lock
and
adc
mov
in
mov
adc
outs
sub
pop
cmps
sub
arpl
popa
idiv
aas
leave
retf
sub
cmp
pop
gs
enter
dec
mov
aas
js
and
cli
stos
inc
cmp
das
in
enter
add
xlat
into
pop
and
loope
cmp
and
sbb
lds
sti
pop
push
fstp
loope
lods
ret
xchg
fisttp
lock
pop
xor
and
sub
mov
push
mov
loope
push
or
fcomp
mov
popa
add
arpl
and
rcl
retf
add
iret
inc
jae
sti
xchg
dec
adc
outs
mov
sub
retf
clc
fidivr
adc
sbb
push
cli
scas
and
mov
clc
mov
stc
push
push
xor
(bad)
xchg
dec
in
mov
adc
imul
mov
mov
iret
xchg
fimul
loopne
add
sbb
mov
dec
add
(bad)
pusha
pop
adc
cmc
pop
xlat
test
sbb
pop
aad
inc
imul
inc
jmp
mov
jne
fndisi(8087
pop
lds
ret
push
out
push
pushf
inc
sbb
or
jnp
mov
mov
dec
shr
sbb
lahf
out
int
shl
shl
in
cmp
mov
push
hlt
xor
and
mov
enter
(bad)
idiv
pop
mov
pusha
mov
push
ds
jge
mov
shl
mov
mov
sub
sub
sub
push
je
enter
ja
(bad)
leave
sti
pushf
das
sub
retf
add
jae
stos
inc
inc
push
lds
and
aam
pop
ret
jge
call
fnstsw
cmp
(bad)
mov
or
test
adc
or
cvtdq2ps
fimul
and
and
repnz
and
mov
adc
fidiv
add
addr16
adc
pusha
cld
pop
(bad)
sbb
dec
int
lahf
mov
dec
test
pusha
call
dec
int
inc
push
test
inc
mov
int
sbb
push
lea
fidivr
cmp
out
push
out
xchg
stos
into
adc
jl
nop
ja
movs
push
lea
ret
sbb
mov
add
scas
call
pushf
test
dec
xchg
and
push
mov
jo
push
mov
push
inc
mov
adc
(bad)
mov
sbb
add
add
lods
jae
ins
enter
sti
cmps
add
sbb
je
cmp
mov
adc
sti
adc
xchg
(bad)
sub
or
cli
jbe
mov
leave
push
sbb
test
push
test
ins
imul
idiv
test
retf
jns
adc
mov
inc
push
loopne
sub
sbb
mov
rcl
nop
out
dec
mov
test
pop
(bad)
in
jmp
mov
mov
loope
pop
and
(bad)
mov
lods
(bad)
mov
xchg
(bad)
bnd
pop
xchg
out
test
enter
pop
push
pusha
dec
stc
pop
cmp
sub
cld
das
mov
xchg
xchg
and
pop
mov
test
movs
push
fdiv
fimul
lods
rol
dec
icebp
(bad)
fmul
dec
xchg
addr16
inc
fiadd
stos
ins
cmc
hlt
adc
pop
xchg
or
xor
out
mov
imul
lahf
jno
fwait
sbb
popa
and
aam
hlt
retf
xor
push
mov
int
addr16
sub
cmc
nop
in
popf
nop
sbb
sub
sti
mov
test
and
cli
push
mov
mov
add
(bad)
pushfw
popf
pop
mov
in
xchg
mov
and
mov
pop
clc
push
lea
pop
(bad)
stc
ds
xchg
inc
in
imul
jg
cld
sbb
pop
sub
(bad)
shl
ror
aam
xchg
clc
ficom
(bad)
lds
jge
mov
mov
pop
aaa
xor
sub
shl
push
push
pop
arpl
xchg
adc
jae
imul
dec
pop
idiv
push
test
push
loop
jge
ins
mov
pop
xlat
cmp
or
in
mov
cmp
push
add
ficomp
ins
(bad)
stc
sub
xchg
not
retf
mov
jae
fistp
rol
cwde
sub
add
mov
(bad)
push
dec
inc
arpl
cli
fs
dec
scas
jno
dec
jne
retf
not
cs
js
pop
subps
in
and
stos
dec
iret
xchg
jb
enter
mov
fs
into
(bad)
lods
pop
pop
cs
pusha
push
mov
(bad)
popf
jo
sti
xchg
fs
cmp
mov
mov
jne
sbb
sub
fstp
add
mov
sub
or
xchg
xor
sbb
dec
out
mov
enter
sbb
dec
dec
cmps
push
and
inc
repnz
xor
pop
movs
mov
xor
inc
test
cmp
push
sbb
fadd
sbb
imul
iret
addr16
jmp
imul
mov
and
xor
in
jbe
push
lods
out
(bad)
iret
call
xchg
loopne
inc
stos
inc
aam
jecxz
leave
mov
push
dec
ret
pop
dec
popf
test
stos
retf
loope
mov
jmp
gs
icebp
pop
push
into
pop
cmp
lahf
mov
jo
mov
stos
shl
mov
pop
cmp
imul
inc
aam
push
sbb
or
(bad)
ret
pop
in
push
xchg
out
or
outs
call
mov
(bad)
aam
shl
mov
addr16
(bad)
pop
fst
push
(bad)
ins
sahf
in
mov
(bad)
call
dec
mov
push
das
sub
mov
inc
jmp
and
cs
inc
jo
lds
jns
jno
loop
xchg
out
test
pop
adc
mov
popf
pushf
cwde
pop
out
popa
inc
aaa
adc
aaa
pop
cwde
mov
mov
ins
sub
(bad)
mov
xor
or
(bad)
fld
mov
(bad)
adc
fcomp
jno
repz
and
cmp
push
pop
dec
imul
mov
std
call
and
shl
dec
aam
and
pop
adc
xor
idiv
sub
pop
xor
aam
les
ins
cs
in
(bad)
imul
xchg
and
add
dec
das
push
call
sbb
popf
and
and
inc
bound
inc
xchg
lds
sub
jnp
adc
in
sub
mov
fld
data16
call
ret
inc
stc
pusha
cdq
mov
inc
ds
jp
sbb
inc
not
jb
push
cmp
ret
jnp
pusha
mov
mov
lds
or
push
pop
or
and
mov
scas
stos
daa
ins
add
es
cmp
or
inc
mov
pop
pop
out
sahf
sub
fcomp
ja
or
pop
xchg
in
cmp
cmps
mov
lds
aas
fwait
js
fdivr
fidiv
push
inc
pop
mov
fistp
cmp
mov
mov
mov
inc
(bad)
pop
sub
shr
movs
xchg
gs
xor
ins
or
jl
fs
jmp
jb
in
cdq
cwde
loopne
or
int
cwde
adc
inc
mov
jnp
shl
pop
sub
(bad)
mov
ins
enter
xchg
inc
cmp
mov
fimul
xchg
data16
shl
test
(bad)
icebp
sbb
mov
jp
clc
rcr
lahf
lods
or
mov
adc
repz
out
pop
out
jmp
(bad)
sahf
ror
push
mov
cli
(bad)
cmp
(bad)
xor
push
test
push
pop
icebp
fld
or
pop
inc
mov
push
icebp
call
ret
inc
imul
xchg
ins
pop
into
mov
shr
lock
hlt
mov
cwde
xor
push
cmp
mov
test
pop
push
xchg
out
sub
jno
lock
and
outs
mov
hlt
mov
cld
test
cwde
imul
xchg
lahf
cmp
jp
lock
fmul
outs
cmc
cmp
pop
push
rcl
imul
inc
imul
das
pop
mov
movs
fwait
sub
lds
in
(bad)
test
cmp
mov
jle
in
ins
daa
sbb
pop
fidivr
inc
ja
xor
int
sbb
mov
xchg
into
xchg
cdq
shl
int3
iret
lea
jne
test
outs
jl
int3
mov
and
inc
and
xchg
jno
jne
cmp
xchg
or
xor
fld
jmp
cmp
push
bound
inc
aas
push
cmps
inc
xchg
test
int
mov
bound
retf
pop
or
cdq
rcr
sbb
inc
cdq
or
or
aas
dec
sub
and
daa
and
sti
mov
jp
outs
push
out
mov
sub
pop
es
push
or
jg
sti
das
add
jmp
push
call
call
aaa
imul
add
call
popf
icebp
shr
lds
jo
out
push
and
inc
ret
clc
xor
sub
in
or
dec
scas
xchg
sbb
pop
test
je
ret
fcom
(bad)
push
outs
mov
xchg
ficomp
rcl
test
fnstcw
das
push
jb
push
in
cwde
add
clc
(bad)
sahf
not
fwait
lds
fs
cmp
fwait
hlt
adc
nop
cmps
pop
pushf
dec
push
hlt
nop
mov
in
jmp
lods
adc
ret
ret
push
mov
(bad)
jmp
push
dec
pop
and
and
addr16
adc
adc
(bad)
std
lds
lea
jmp
pop
fnstenv
sahf
cmp
cmp
adc
push
jb
out
adc
add
cli
or
sbb
aas
cmc
fadd
sbb
xchg
ret
loope
sub
and
or
sub
fmulp
cmps
rol
inc
jg
hlt
daa
js
pop
imul
adc
jbe
test
pop
outs
test
add
aam
loopne
dec
movs
push
lock
ds
loop
xchg
xchg
lahf
(bad)
pusha
cmp
rcl
(bad)
pusha
pop
push
inc
cmp
sub
jge
hlt
adc
sbb
rcl
and
int
test
mov
mov
popf
add
inc
ret
mov
sub
xor
js
lods
and
jno
jmp
mov
xchg
and
jbe
mul
or
cmp
into
mov
call
dec
mov
jecxz
push
and
in
arpl
js
adc
or
int3
data16
add
nop
fs
xor
cmp
inc
js
and
mov
mov
push
xlat
bound
jle
addr16
enter
adc
mov
cmc
rcr
add
loop
aad
xchg
scas
enter
jecxz
out
push
sub
icebp
cmc
or
push
pop
ss
jnp
test
mov
push
mov
mov
add
sub
popf
xchg
call
jae
pop
xchg
adc
adc
fistp
fcom
lea
sbb
and
dec
add
test
pop
mov
jno
fmul
pop
fsubr
jmp
sbb
push
call
pop
pop
xchg
cwde
iret
retf
retf
cmps
sub
or
lea
stc
jecxz
pop
and
aad
xor
mov
adc
rcr
lea
sahf
popa
xchg
ins
imul
push
xchg
mov
mov
imul
and
and
jno
and
pop
hlt
loop
ins
cmp
sahf
xor
jge
or
outs
lahf
mov
push
cld
cmp
jbe
mov
add
cld
mov
(bad)
mov
shl
cmp
(bad)
fild
in
sbb
pop
xchg
arpl
xchg
mov
xchg
mov
and
sub
pop
jbe
test
test
mov
sub
jmp
ds
in
jae
mov
mul
mov
ja
sbb
mov
ins
inc
mov
jae
mov
(bad)
fistp
ror
(bad)
enter
adc
call
aad
and
(bad)
or
iret
dec
call
adc
sub
out
(bad)
cmp
lods
mov
lods
jns
jae
out
dec
xchg
sub
loop
dec
push
fbld
cwde
sub
cmp
add
sub
jno
pop
push
push
lea
(bad)
shr
fld
and
call
or
pop
push
ins
arpl
gs
imul
scas
fidivr
mov
xor
pop
xor
xchg
inc
pop
stc
ins
add
rcr
jmp
pop
sub
ins
mov
gs
lods
xor
scas
sub
jle
jnp
adc
pop
pop
xchg
sti
push
cld
das
xor
fild
mov
xchg
icebp
int
add
xlat
pop
(bad)
(bad)
loop
ins
repnz
leave
cmp
sub
ret
pop
imul
push
pop
push
mov
repnz
cld
add
or
mov
jbe
xchg
or
and
jp
add
fidiv
leave
mov
test
cmp
add
push
rep
jno
ror
sub
mov
int3
xor
(bad)
mov
jle
mov
scas
rcr
inc
lahf
imul
mov
outs
lock
ins
fcomp
mov
inc
xchg
or
xor
push
adc
mov
(bad)
test
outs
je
lods
sub
pop
bnd
test
cmp
and
jns
and
jl
lahf
adc
xor
rcr
loopne
and
int3
add
stos
cmp
push
cmps
mov
inc
mov
repnz
cmps
ja
sub
sahf
sar
rol
scas
cmp
jno
call
fwait
sahf
jl
jae
into
inc
call
rcl
lds
into
push
xchg
outs
push
in
jbe
cmp
stos
fmul
jae
ins
lahf
cs
sbb
or
dec
push
pushf
cwde
push
(bad)
int
inc
call
push
add
(bad)
out
cdq
outs
aad
cmp
sbb
xlat
cmp
or
sbb
(bad)
mov
dec
and
mov
imul
dec
mov
jbe
dec
cmp
and
or
add
add
pop
xor
jl
or
or
fiadd
cmp
dec
rol
pusha
xlat
mov
cmp
mov
cmp
popa
jbe
cmps
(bad)
lods
loope
mov
fcmovnb
jmp
xor
xor
lds
enter
or
sahf
ret
cmc
movs
movs
out
jmp
cmp
mov
inc
jbe
call
enter
jb
(bad)
(bad)
and
pop
jb
loopne
jnp
and
mov
cmp
xchg
cmp
xchg
pop
mov
cmps
push
in
out
add
push
mov
call
loopne
jle
dec
jno
pop
push
je
movs
add
mov
sbb
pushf
mov
inc
push
fisttp
mov
test
aaa
push
adc
cmp
shr
jecxz
leave
push
or
mov
imul
les
add
mov
jl
jecxz
pop
js
push
call
lahf
jbe
xor
push
rcl
iret
xchg
mov
or
mov
jg
das
es
in
and
add
mov
sub
push
fcomip
in
in
ret
(bad)
mov
add
jb
push
mov
xchg
ja
lds
clc
out
(bad)
xchg
push
retf
ffree
cld
jb
dec
push
not
inc
inc
test
int
retf
lods
cmc
xchg
cwde
dec
shr
xchg
mov
dec
call
repnz
pushf
inc
gs
mov
jo
add
and
mov
jbe
lahf
scas
mov
mov
mov
pop
push
xor
xchg
out
adc
mov
pop
adc
push
sbb
sbb
icebp
ds
push
xchg
(bad)
adc
mov
std
addr16
cmps
add
xchg
test
xchg
and
ja
repnz
ins
(bad)
stos
out
mov
mov
xor
adc
pop
cld
bound
(bad)
aad
mov
xor
mov
pop
repnz
sub
adc
push
jmp
jnp
outs
lods
les
cmp
aaa
and
and
lea
cs
repnz
adc
retf
inc
pop
ftst
in
and
dec
mov
ficom
(bad)
mov
jle
stos
mov
cmp
mov
pop
and
sahf
in
mov
pop
fdivr
in
xchg
adc
call
pop
stos
add
popa
in
fs
sbb
xlat
add
sub
fstp
ins
popf
shufps
arpl
rol
mov
xchg
cmp
jns
pop
dec
adc
adc
jno
mov
jb
aas
cmp
adc
mov
inc
ror
inc
xor
test
rcl
inc
xor
pop
pop
jge
jo
push
sbb
pop
fcomp
mov
cmp
(bad)
adc
out
mov
pop
shr
pushf
js
pop
push
sbb
xchg
mov
fwait
sub
call
jne
out
adc
mov
add
test
cli
pushf
les
pop
sbb
jmp
mov
stos
lock
dec
mov
mov
cmp
hlt
mov
push
daa
(bad)
stc
dec
jmp
scas
pop
and
sahf
adc
std
sbb
scas
dec
push
push
push
mov
sbb
xor
xor
mov
jmp
pop
and
fwait
push
into
jmp
and
push
xchg
push
aam
call
in
dec
sbb
dec
stc
sub
mov
test
rol
pushf
iret
shl
mov
push
mov
les
xor
inc
mov
and
push
push
test
outs
(bad)
cmc
shl
or
xor
cmp
mov
retf
mov
sbb
rol
enter
jo
or
rcr
dec
push
es
mov
mov
iret
jmp
jnp
ret
adc
cmps
jl
test
pop
out
mov
jnp
jnp
mov
sub
cmps
dec
movs
into
sub
into
push
int
xchg
hlt
ins
push
and
imul
jae
xchg
fcmovnb
push
lahf
add
in
add
mov
imul
mov
imul
pop
repnz
daa
cld
out
xchg
stos
icebp
leave
jne
js
dec
or
shr
jno
les
aad
rcl
push
jo
pop
adc
aaa
popf
or
jp
stos
jns
dec
adc
aaa
lods
dec
jb
cmp
addr16
idiv
sub
nop
or
pushw
dec
addr16
aaa
test
pop
in
fild
inc
test
cmp
mov
bound
and
(bad)
or
inc
inc
xchg
mov
cmpps
mov
mov
mov
xchg
aaa
adc
(bad)
fcom
xor
aaa
jne
js
out
and
mov
mov
loope
jbe
xor
fs
test
into
xor
pusha
cld
lods
in
jbe
pop
and
ret
pusha
jle
push
repz
inc
xor
jmp
add
popf
xor
icebp
add
pop
loopne
daa
jne
jbe
lock
and
and
adc
push
and
xchg
fucomp
cmp
mov
mov
add
scas
xchg
inc
mov
test
mov
addr16
(bad)
xor
sub
jb
jnp
mov
dec
retf
cs
cmp
cmp
sub
mov
sbb
jnp
fcmovnu
movs
dec
or
sub
jmp
mov
dec
retf
pop
je
sub
out
mov
enter
imul
lods
pop
mov
es
lock
sub
pop
out
add
out
jecxz
cmps
mov
shl
mov
pusha
bound
xchg
and
inc
cmps
aas
aaa
jno
in
movs
das
test
call
sub
sub
bound
fisttp
mov
std
mov
fcmovu
adc
loope
aaa
mov
push
xor
xor
rcl
cmp
ror
push
pusha
outs
lock
xchg
mov
loop
pushf
xchg
jmp
sbb
pushf
pop
jno
sub
cs
push
push
cmp
add
sbb
lods
int
jge
int
mov
test
inc
es
(bad)
jmp
push
push
lods
push
mov
out
add
lock
pop
cld
sbb
jb
and
jae
mov
push
loopne
cmp
add
sub
and
push
std
jp
jle
pop
addr16
movs
cmp
pop
xlat
add
shl
ror
loopne
mov
mov
loop
jg
xchg
xchg
call
test
fwait
pop
mov
call
mov
sbb
sbb
cmc
push
cmp
push
test
dec
xchg
jg
sbb
ss
out
retf
or
or
dec
ret
sbb
sbb
les
or
mov
ficomp
ds
outs
cmp
mov
(bad)
cld
jl
push
out
stos
add
imul
dec
fld
data16
xchg
cmp
add
sahf
jbe
pop
lods
or
pop
sub
pop
iret
sbb
ja
int
mov
popf
clc
mov
adc
repz
shl
das
and
mov
push
and
call
or
push
hlt
add
and
(bad)
and
out
adc
lods
push
ret
std
pop
outs
data16
jns
repnz
dec
scas
data16
jmp
enter
popa
(bad)
bound
jbe
jge
js
ins
push
sub
cmp
dec
out
jo
arpl
mul
ror
iret
add
call
popa
push
cs
cmp
adc
mov
mov
in
xchg
sbb
stos
rcl
js
int3
retf
pushf
sub
pop
data16
out
push
add
jo
scas
sbb
out
sub
adc
hlt
ror
ins
dec
imul
sbb
mov
inc
jae
aas
(bad)
push
xor
dec
std
stc
(bad)
repz
cmp
or
adc
jle
imul
xchg
mov
loopne
(bad)
inc
inc
ror
(bad)
stos
jb
and
xchg
pop
push
cmp
xor
(bad)
hlt
shr
push
das
mov
and
xor
iret
adc
xchg
or
in
ret
retf
rcr
popf
jb
(bad)
cmps
or
jnp
inc
sub
push
sbb
fwait
lods
lds
jo
in
ret
mov
dec
jae
mov
xchg
xor
hlt
into
push
xchg
stos
ins
xchg
sub
out
xor
in
xchg
int
mov
dec
cmp
push
data16
jmp
cld
mov
enter
sbb
ret
ret
outs
push
popa
in
mov
cmp
sub
mov
mov
mov
out
add
dec
stos
add
cs
fldenv
inc
pusha
aam
jmp
(bad)
jle
jp
daa
sbb
popa
sti
adc
popa
add
mov
cmp
adc
std
je
inc
call
sub
popa
jo
sub
fisub
mov
(bad)
fadd
sbb
push
(bad)
cmps
outs
lods
ins
mov
outs
out
test
adc
cld
mov
or
sbb
call
mov
xlat
repnz
ret
cmps
aad
mov
pushf
inc
jnp
test
popa
mov
sbb
mov
shl
clc
aad
ds
mov
mov
sub
daa
pop
inc
mov
repnz
pop
cmps
sbb
outs
mov
pop
(bad)
lock
es
stc
add
gs
lods
or
ds
inc
loop
dec
inc
or
mov
daa
pop
mov
add
iret
mov
shl
rol
ss
shl
push
push
rcr
sbb
nop
out
mov
fsub
pusha
stc
sub
adc
inc
scas
jae
mov
push
jbe
(bad)
loope
je
call
ds
mov
js
ret
mov
shr
cmp
ret
popa
imul
scas
test
pop
mov
mov
in
inc
add
pop
popf
xchg
sub
mov
push
cli
jp
and
inc
xor
push
pop
mov
into
mov
mov
cmp
dec
mov
add
or
push
enter
cmp
or
retf
pop
adc
push
cmps
stos
mov
mov
xor
sbb
push
xchg
add
jl
push
push
lahf
shr
out
retf
push
(bad)
addr16
sbb
jnp
push
inc
ret
daa
push
addr16
dec
sub
repz
nop
dec
cmps
out
sbb
out
or
add
mov
push
(bad)
add
mov
call
xlat
stos
int
mov
setge
xchg
les
das
xchg
pop
imul
jmp
out
call
movs
sbb
mov
sti
ror
das
pusha
int
fldenv
test
std
leave
and
fst
cli
fs
or
pop
shl
xor
xchg
icebp
push
xchg
add
div
arpl
test
sbb
mov
(bad)
jae
adc
push
pop
sbb
(bad)
clc
sbb
cmp
in
inc
xor
add
popf
push
inc
pop
imul
lds
and
xchg
adc
btr
pop
addr16
(bad)
fsubr
ins
cmps
sti
jo
ins
out
mov
lahf
jne
sbb
dec
jnp
xor
daa
ja
sbb
inc
lds
dec
loope
xchg
adc
xchg
jns
sbb
pcmpgtd
and
loop
jecxz
mov
xor
mov
mov
ja
mov
cmp
out
add
and
in
cmp
addr16
(bad)
jl
in
pop
es
xchg
sbb
xor
mov
mov
aaa
mov
sbb
jae
cdq
xor
ror
shl
rcr
push
enter
fld
push
dec
jmp
sbb
lods
mov
xor
add
(bad)
and
mov
ret
loopne
(bad)
sti
aam
jp
inc
daa
mov
shr
dec
in
jbe
outs
pop
mov
mov
jae
shr
or
call
sbb
repnz
(bad)
test
scas
xchg
std
pop
aas
jbe
inc
cmps
push
and
dec
xchg
push
ds
outs
call
inc
sub
shr
stos
in
add
sub
dec
dec
push
mov
std
cmp
pop
ret
(bad)
call
mov
lahf
xchg
xor
jnp
ret
movs
inc
in
jecxz
push
and
xor
pop
into
out
mov
dec
in
pop
fcomp
mov
push
daa
push
(bad)
xor
das
(bad)
mov
or
loopne
retf
outs
(bad)
nop
mov
sbb
daa
xchg
pop
(bad)
test
test
and
sub
or
aam
pop
rol
inc
adc
and
xlat
or
mov
and
dec
test
dec
mov
push
or
xchg
idiv
or
pop
stc
dec
inc
stos
mov
pop
inc
or
cmp
add
test
xchg
(bad)
stc
repz
jmp
imul
pop
sub
data16
mov
cmp
pusha
and
mov
xor
fs
push
sbb
scas
mov
shl
inc
dec
mov
popf
or
xlat
adc
imul
push
popf
retfw
and
or
jnp
fcmove
sub
jge
aaa
(bad)
mov
pop
sub
dec
cmp
jne
out
push
loope
shl
pop
data16
push
mov
js
jp
mov
push
add
sbb
cmp
mov
and
stc
out
rol
jmp
mov
and
and
scas
aad
cwde
push
pushf
movs
aaa
nop
fsubr
sahf
cdq
aaa
lea
and
cdq
jecxz
ret
mov
sub
xlat
arpl
daa
imul
aam
cdq
and
cmps
cmp
pop
cmps
mov
jo
sbb
sar
fistp
xchg
pop
stos
dec
(bad)
std
xacquire
inc
mov
mov
add
adc
aad
add
inc
jns
js
pop
mov
lea
mov
xor
rcl
jb
cmp
sbb
daa
mov
iret
adc
inc
add
dec
js
sub
pop
sub
es
cmp
scas
mov
je
push
xor
call
xor
jg
add
push
fwait
nop
jg
enter
mov
push
sti
cmps
jbe
repz
mov
aad
jecxz
test
cdq
into
das
repz
jmp
xchg
popa
cmp
fidiv
dec
aam
add
xchg
push
add
jmp
retf
mov
push
pop
pop
sbb
pop
icebp
xor
and
pop
dec
neg
xor
leave
adc
shl
mov
or
out
(bad)
cmps
pop
and
es
cmp
mov
mov
arpl
push
dec
push
dec
icebp
add
jo
jmp
mov
fldcw
cs
push
jle
hlt
out
fldlg2
sub
jno
jmp
imul
into
int3
xchg
mov
jae
sbb
repz
test
cmps
lds
xor
xchg
pop
cmp
sbb
mov
or
push
sbb
dec
cmc
or
fwait
sbb
add
dec
daa
pop
ins
inc
test
shr
xchg
lahf
add
cli
adc
push
sub
xor
dec
jmp
push
dec
fs
mov
fs
popf
adc
xchg
fdivr
ret
es
or
sbb
push
repnz
xchg
lds
cmp
cmp
rol
loopne
push
push
mov
(bad)
call
inc
(bad)
call
test
xlat
push
(bad)
dec
cwde
mov
inc
stc
mov
mov
and
out
ss
je
and
mov
repz
add
es
mov
in
or
daa
sbb
cmp
loop
push
dec
xchg
aad
jl
mov
sbb
aaa
xchg
xor
fidiv
stos
cld
inc
lods
iret
cmp
mov
leave
inc
inc
outs
sub
pop
scas
scas
sub
mov
jecxz
aas
in
dec
(bad)
scas
cmps
in
jmp
add
ret
aaa
jbe
push
(bad)
sbb
cmp
fist
xor
mov
or
xor
mov
jnp
test
jmp
test
push
mov
mov
add
sbb
pusha
xchg
jmp
jne
icebp
gs
fsub
into
imul
xchg
mov
sub
outs
push
daa
cmp
push
inc
xchg
(bad)
dec
(bad)
(bad)
hlt
xor
jl
fnstsw
stos
leave
in
jmp
jle
add
mov
jbe
mov
aaa
mov
mov
int3
test
push
into
fsubr
sub
adc
pop
push
ret
ret
fst
or
inc
mov
xchg
cmp
rcl
daa
stos
xchg
loopne
jnp
jle
dec
pop
dec
sbb
xchg
jle
xchg
pop
inc
pusha
or
cmp
push
xor
repnz
add
xchg
dec
jge
push
mov
mov
add
retf
loop
scas
sub
mov
adc
ds
mov
pusha
loopne
jecxz
mov
mov
outs
xor
fs
jle
mov
push
and
shr
stos
push
ja
in
xchg
jbe
sbb
nop
pop
sar
jbe
lock
les
jnp
mov
int
fidiv
sub
inc
mov
aad
test
mov
rcr
test
jae
cmps
popa
xor
jecxz
loope
push
xchg
cmp
pushf
xlat
xchg
fdivp
pop
push
xchg
mov
retf
jmp
lods
push
push
and
jmp
cwde
loop
or
pusha
inc
xor
sbb
adc
test
dec
xchg
daa
test
jp
stc
xor
cmps
aaa
inc
pusha
scas
and
pop
fld
mov
jecxz
add
adc
jne
aam
jbe
mov
int3
movs
xchg
pop
add
sti
shl
mov
test
push
xchg
adc
mov
jnp
xchg
test
push
pop
sti
mov
orps
popa
aas
or
adc
cmp
xrelease
add
sub
pushf
sub
imul
and
adc
push
das
stos
scas
jmp
sbb
mov
xor
pusha
das
fild
cmp
ds
cmp
adc
stc
cld
in
push
xchg
push
rcr
push
daa
imul
repnz
xor
jno
dec
out
das
mov
popf
(bad)
sub
or
icebp
ret
cld
(bad)
inc
or
cmp
(bad)
in
loope
popf
and
hlt
pop
sbb
add
cmps
retf
(bad)
pop
dec
pop
or
out
fadd
popa
push
mov
mov
or
add
xchg
test
mov
jl
es
int
jb
pop
rol
int
or
adc
add
add
push
adc
mov
mov
test
and
popa
cmps
mov
adc
jge
sub
mov
push
and
clc
pop
xchg
push
lahf
shl
or
xchg
fisttp
pop
mov
stc
xchg
ins
xchg
push
adc
mov
sbb
push
xchg
nop
push
mov
sub
sbb
aas
stos
data16
dec
jle
sar
adc
mov
xchg
adc
mov
push
and
mov
mov
icebp
sub
in
sub
fucomi
mov
icebp
lock
cmp
add
js
and
adc
cmps
mov
push
add
cwde
mov
jp
mov
xor
xchg
and
stc
pop
sbb
xor
(bad)
jo
push
loop
mov
push
jbe
mov
jmp
test
out
jnp
out
cli
test
mov
adc
inc
int
mov
inc
ffree
mov
fbstp
scas
mov
xor
or
mov
sahf
shl
cmp
adc
mov
(bad)
pop
pop
hlt
push
das
mov
push
js
sbb
pop
dec
xor
push
popf
ret
loopne
gs
movs
fwait
cmc
loope
pop
dec
cld
pop
push
jae
aaa
(bad)
fiadd
pop
out
push
hlt
out
sub
jecxz
daa
aas
lods
shl
sub
shl
jl
imul
push
loop
sbb
jbe
add
inc
popa
mov
xchg
out
pop
cs
sub
fucomip
test
mov
mov
pop
and
inc
lods
mov
mov
xchg
push
js
xor
pop
mov
mov
div
xchg
sbb
inc
and
retf
mov
mov
sub
xor
mov
or
inc
ret
cmps
arpl
test
add
mov
pop
push
call
add
jl
ins
retf
mov
int3
jno
sbb
imul
scas
mov
mov
mov
push
fucom
push
mov
pop
stos
adc
dec
outs
inc
mov
int3
mov
imul
mov
pop
inc
cmp
pop
retf
mov
xor
push
jl
arpl
push
sub
test
pop
inc
aaa
sti
inc
imul
push
push
pop
hlt
mov
iret
neg
aaa
add
and
xor
inc
mov
cmc
mul
and
and
test
out
lds
fcmovnb
mov
pop
add
cmps
and
add
cmp
imul
pushf
cmp
jb
jmp
xor
aad
mov
inc
push
inc
dec
arpl
dec
xor
push
inc
sbb
iret
mov
cmp
cmp
popf
dec
scas
shr
ja
or
movs
inc
stos
jns
mov
fld
push
shl
test
mov
dec
stos
das
test
push
mov
add
outs
clc
aad
movs
aam
shr
rcl
es
pop
(bad)
aad
fprem
int3
js
outs
daa
pop
sub
ds
retf
in
xor
or
push
es
xchg
push
setbe
fild
cwde
cmp
inc
xchg
jmp
rcr
outs
jb
jmp
mov
jne
mov
dec
scas
push
jo
es
stos
jbe
sar
or
or
mov
stos
mov
mov
xor
je
out
and
push
sbb
xchg
mov
mov
push
jecxz
out
adc
(bad)
cmp
sub
cmp
and
mov
outs
mov
lods
enter
mov
xlat
adc
jge
out
scas
xchg
dec
jno
sbb
(bad)
adc
pop
out
pop
test
fst
cmp
outs
outs
retf
xlat
or
pop
mov
dec
out
in
fst
out
jl
pop
xor
pop
mov
xor
lahf
hlt
sub
inc
mov
leave
jae
mov
lock
inc
cmps
int
mov
(bad)
cmc
sbb
mov
js
push
cmp
dec
jp
fs
dec
in
mov
pushf
mov
stos
mov
push
xchg
and
lock
add
test
mov
fs
icebp
sub
or
outs
clc
enter
bnd
mov
pop
pop
inc
push
cld
jae
sar
sahf
add
push
test
js
xor
fs
or
push
arpl
dec
push
jle
jae
xor
outs
fstp
push
shl
mov
mov
ror
(bad)
adc
popa
mov
loopne
jne
lea
jbe
rcl
push
jmp
scas
fidiv
sbb
adc
jge
mov
les
(bad)
int
dec
das
ror
xchg
int3
cmps
pop
mov
cmp
dec
inc
pop
jge
sbb
(bad)
js
jl
ror
pusha
es
leave
ds
cmc
std
cmc
add
or
lds
fst
ds
push
or
ins
(bad)
jnp
mov
sub
ret
loop
mov
je
popf
dec
mov
ins
aad
push
ja
jge
call
inc
mov
pop
sub
mov
or
fiadd
ins
and
enter
ja
neg
push
jecxz
call
lahf
out
ja
pop
cmc
out
xchg
mov
out
psllw
sbb
div
xor
push
pop
inc
mov
mov
sub
mov
mov
dec
ror
stos
xor
adc
xlat
jl
sbb
push
out
push
data16
(bad)
into
rcl
or
retf
pop
lea
retf
ds
test
loopne
dec
xchg
repnz
daa
mov
dec
pop
and
adc
pop
gs
ja
push
fs
pop
into
push
xchg
xor
mov
mov
dec
xchg
(bad)
out
jg
jp
pop
sbb
mov
popa
ss
addr16
cmp
and
mov
cli
xchg
lahf
cld
outs
ins
(bad)
mov
hlt
xor
repz
xchg
ins
inc
pushf
or
es
loope
inc
sub
loop
sar
aaa
dec
and
les
(bad)
in
icebp
popf
adc
fmul
mov
cmp
gs
test
adc
xlat
pop
dec
mov
dec
adc
jo
push
push
dec
nop
sub
add
or
and
shl
mov
fistp
mov
push
pop
icebp
lods
add
cmp
test
fisub
sub
popf
mov
push
xor
jg
inc
or
jno
lods
mov
(bad)
sar
sub
leave
pushf
add
test
outs
mov
mov
loopne
int
into
mov
cwde
xchg
mov
lods
(bad)
addr16
jns
jle
xor
add
push
xchg
stos
mov
add
and
aad
xchg
lods
test
sub
out
pop
cmp
sub
pop
push
mov
out
mov
repnz
push
ficomp
adc
loop
in
shl
(bad)
in
or
lods
pshufw
popf
mov
cli
and
adc
dec
mov
pop
xchg
in
mov
lahf
jbe
in
imul
xlat
outs
push
or
test
popa
fmulp
pop
fimul
jmp
out
imul
jge
pop
jecxz
xor
dec
pop
sti
push
dec
add
call
or
ins
cli
out
dec
clc
mov
or
shr
sub
jle
xchg
jo
rcr
into
mov
mov
stos
sub
fsubr
bound
jge
xor
loop
lock
fdivr
repz
pop
(bad)
or
jmp
xor
mov
add
in
cmp
inc
dec
(bad)
jae
push
es
mov
xchg
xchg
aam
mov
stos
jb
cdq
aas
jns
and
sbb
ror
(bad)
mov
cmp
xor
inc
dec
mov
aas
imul
out
inc
mov
push
mov
add
dec
xor
push
cs
mov
cmps
in
arpl
or
clc
adc
mov
pop
mov
scas
inc
xor
mov
and
dec
inc
and
mov
mov
in
fmul
sub
and
sbb
ja
setne
pop
sbb
dec
mov
adc
hlt
cli
repnz
dec
mov
inc
repnz
cli
sbb
in
(bad)
sbb
adc
pop
pop
fnstcw
push
sub
or
push
push
in
add
repnz
jno
adc
mov
mov
icebp
rcr
sub
fwait
ror
and
push
cld
icebp
test
mov
mov
or
pop
retf
jle
add
xchg
sbb
xor
call
aam
and
test
or
lahf
mov
test
fldenv
mov
push
fiadd
sub
dec
ret
pop
jge
cmps
int
mov
addr16
fild
in
shr
sbb
xchg
nop
call
cmovnp
mov
push
aam
scas
inc
rcr
mov
jl
mov
xchg
push
scas
mov
mov
or
aaa
xchg
test
gs
xchg
out
dec
outs
mov
mov
idiv
jo
fdivr
aad
jo
cli
in
imul
or
jle
out
cmp
adc
out
bound
ss
outs
std
dec
outs
outs
mov
movs
pop
jp
out
mov
add
lods
les
in
das
(bad)
mov
xchg
jg
js
mov
movs
pop
mov
mov
aas
retf
ins
xor
dec
sub
adc
(bad)
xchg
iret
push
sbb
inc
jnp
mov
adc
mov
and
cli
in
add
mov
xor
dec
fstp
int3
test
push
jecxz
(bad)
mov
fucomi
mov
das
jo
and
pop
addr16
rcl
adc
pop
xchg
test
dec
in
addr16
rol
stos
mov
cdq
mov
sahf
ret
dec
jo
stc
call
shl
imul
cmp
ins
jae
cmp
ret
mov
std
jge
in
jbe
(bad)
(bad)
ins
add
fisttp
mov
nop
loop
ret
loop
mov
das
and
or
popf
mov
sub
and
mov
mov
mov
fist
add
mov
push
xor
sbb
scas
dec
xchg
rcr
mov
cld
sbb
push
loop
mov
xor
repnz
cmps
mov
mov
adc
dec
jl
jmp
out
jo
mov
pop
and
repnz
rol
int3
jmp
fild
or
daa
inc
jbe
pop
mov
sbb
mov
xchg
mov
jbe
hlt
dec
or
jmp
mov
call
call
ret
and
out
retf
and
lea
ficom
call
std
jb
add
loop
xchg
pop
and
and
repnz
fisub
adc
js
jmp
mov
cmp
call
in
retf
xchg
call
out
pop
inc
mov
push
mov
je
adc
xchg
xchg
push
adc
in
push
dec
push
fwait
push
test
xchg
mov
dec
mov
dec
leave
push
add
jmp
in
pop
aas
pusha
mov
jnp
clc
push
sti
mov
pop
call
mov
addr16
push
nop
lods
xchg
adc
out
push
stc
ins
iret
jecxz
mov
push
inc
fimul
in
(bad)
pop
xor
mov
lea
xchg
pop
not
inc
mov
enter
pop
sbb
jmp
loopne
mov
fs
jecxz
inc
xor
dec
stc
adc
outs
sub
mov
out
add
aas
xlat
int3
or
out
cmp
xor
or
enter
outs
push
int3
sub
xchg
xor
mov
ret
pop
fnsetpm(287
ds
jno
xlat
mov
add
xchg
or
push
shr
push
dec
ror
ds
fnstenv
fcmovnbe
or
fcmovu
and
(bad)
fcom
xor
xlat
add
pop
push
(bad)
push
in
repnz
int
shl
repz
fmul
adc
xor
pushf
popf
or
and
call
push
jo
fwait
xor
adc
and
jmp
inc
push
popf
mov
fptan
test
test
scas
xchg
lock
push
inc
and
xor
pop
mov
shl
and
cmp
mov
xor
pushf
out
(bad)
iret
jle
or
stos
int3
fmul
movs
aas
ja
jle
and
outs
lahf
gs
(bad)
daa
and
imul
rcr
push
mov
lea
or
mov
push
pop
pusha
cmps
test
retf
mov
int
mov
mov
sub
xchg
aaa
fdiv
mov
add
inc
and
(bad)
mov
mov
clc
loopne
lds
jae
pop
enter
pop
je
xor
sub
pop
sahf
adc
sahf
dec
jne
and
mov
(bad)
and
jecxz
jl
lods
fcomp
sbb
ror
retf
mov
ja
aam
ficomp
and
mov
cmp
mov
fcmovne
mov
xor
retf
push
cmps
sub
retf
pop
mov
push
cs
scas
aas
test
cmp
pusha
add
test
xchg
mov
inc
bound
jge
sbb
cmp
push
and
adc
test
(bad)
aam
fld
inc
mov
je
jno
dec
add
push
push
popa
aam
push
push
(bad)
push
mov
pop
cmps
pop
pop
rcr
add
dec
lock
cmp
(bad)
pop
pop
inc
ins
jge
xchg
pop
add
inc
outs
jmp
scas
add
mov
repz
xor
mov
sub
ja
gs
(bad)
mov
mov
mov
loope
jmp
les
pop
shl
sub
adc
bound
lock
sar
jnp
add
push
popa
ds
out
push
push
sti
push
dec
xchg
leave
pop
and
test
pop
jmp
mov
cmps
pop
movs
sub
pop
adc
test
jno
stc
pusha
dec
cs
icebp
imul
(bad)
mov
cmp
ja
fmulp
pop
cmp
shl
xchg
and
ret
pusha
aad
fstp
cdq
fcmovu
dec
sbb
xor
xor
add
xchg
fisubr
adc
mov
adc
or
je
dec
mov
push
or
cmp
xchg
shr
pop
cmp
adc
or
icebp
mov
xor
call
fld
mov
jmp
rcl
pop
jb
sar
aad
sub
pop
xchg
dec
dec
sub
sub
je
mov
mov
imul
inc
repnz
mov
bound
test
mov
xchg
test
or
xor
js
imul
pop
jp
dec
and
movs
dec
add
enter
jmp
inc
stc
or
mov
inc
in
std
and
push
fcom
repnz
movs
dec
sub
int3
ins
je
jmp
pop
(bad)
(bad)
shl
xchg
ror
push
lahf
xchg
popf
mov
push
stc
call
in
fimul
ret
cmp
ins
pop
shr
outs
sbb
sub
enter
popa
mov
inc
enter
and
xchg
movs
shl
fwait
aam
pop
lahf
mov
cmp
sbb
adc
add
mov
fsub
hlt
mov
pop
mov
pop
mov
rcl
sbb
push
and
out
mov
bswap
ins
add
push
scas
mov
push
std
popf
pushf
sbb
in
adc
out
into
test
cmp
pusha
adc
ja
cs
or
pop
std
mov
pop
das
xchg
jmp
and
inc
pop
mov
push
jg
xchg
sub
call
jle
rol
pop
push
aad
add
fild
dec
mov
jmp
sub
iret
pop
loopne
pop
adc
mov
cmc
jno
stc
xchg
hlt
arpl
dec
movs
xlat
mov
sub
cmp
in
and
icebp
sub
fistp
or
cdq
mov
jo
scas
movs
xchg
cld
mov
pop
je
dec
mov
and
jno
push
call
mov
mov
repz
popa
cmp
inc
adc
jae
and
push
mov
adc
jmp
stos
fcomp
pop
movs
imul
loopne
(bad)
push
xlat
add
xchg
cmp
popf
test
(bad)
sbb
je
test
jle
or
into
jne
adc
pop
bound
dec
inc
push
fild
push
scas
ja
sahf
(bad)
aaa
cwde
inc
jns
mov
sbb
mov
mov
pop
and
sbb
dec
movs
rcl
cdq
sub
mov
sbb
cmp
jae
add
inc
lods
(bad)
out
mov
fld
inc
outs
shl
fisttp
gs
xchg
jae
push
push
hlt
jns
fidivr
rcr
or
pop
mov
das
(bad)
pop
test
cmps
fs
mov
jae
mov
inc
test
(bad)
out
mov
mov
clc
mov
iret
jb
and
fimul
add
push
int3
(bad)
int
sbb
lea
(bad)
cmps
add
adc
mov
bndstx
cli
and
rcl
jmp
push
je
mov
repnz
add
xchg
sub
cmp
push
fcomi
call
inc
rol
not
inc
aam
mov
out
jns
adc
mov
cmps
aam
mov
pop
adc
cmp
jns
mov
jp
dec
imul
in
or
gs
(bad)
movs
cs
stc
fild
popa
jmp
std
adc
sar
lahf
(bad)
xchg
lock
pop
into
cs
gs
dec
stc
mov
jae
shl
call
int
jnp
and
xchg
jmp
xchg
add
(bad)
das
test
jnp
rcl
xor
or
and
bound
push
scas
clc
add
xlat
xlat
xor
fs
push
popf
sbb
sub
test
and
jmp
xchg
jmp
inc
mov
and
mov
mov
ret
inc
inc
push
add
adc
leave
les
stos
lods
push
push
inc
push
cmp
xor
out
xor
jne
(bad)
jmp
icebp
jb
leave
cld
sbb
push
dec
or
jns
imul
loopne
jl
and
xor
push
xchg
ret
and
inc
dec
xor
add
in
xor
clc
dec
stos
bound
ret
mov
std
jo
pop
leave
iret
add
mov
inc
std
push
cmp
fbstp
adc
call
les
imul
pop
push
mov
(bad)
enter
test
ret
sar
adc
clc
imul
nop
mov
push
or
push
iret
and
xlat
add
dec
mov
loope
fldenv
mov
out
and
(bad)
add
cmp
adc
daa
stc
(bad)
scas
mov
test
stc
adc
dec
repnz
or
jecxz
pop
cmp
xchg
xchg
and
inc
(bad)
fst
add
retf
push
call
in
adc
jecxz
(bad)
or
int
fistp
ins
clc
(bad)
int
xor
jg
int
inc
mov
xchg
add
cs
fs
movs
adc
gs
and
lods
loope
add
jmp
mov
mov
jecxz
(bad)
push
fs
sbb
js
mov
icebp
xchg
add
add
adc
fist
and
dec
mov
sar
mov
call
sub
data16
cld
stc
bound
xchg
shr
cli
add
sbb
mov
push
repnz
movs
cmp
add
mov
sub
pop
ret
ins
div
loopne
shr
pop
sbb
lahf
pop
ja
dec
inc
in
push
retf
xchg
jl
int3
pop
mov
push
(bad)
xchg
xchg
mov
sar
mov
xchg
sahf
jae
out
retf
pop
repnz
nop
lea
xchg
(bad)
cli
mov
jnp
fst
fucomi
pop
stc
sbb
jp
cmp
jno
pop
into
std
dec
and
adc
sar
inc
out
jae
mov
adc
sti
aad
jo
cmc
ror
stos
add
shr
repnz
(bad)
sbb
sub
pop
jne
(bad)
out
ja
and
push
push
cmp
xchg
jl
dec
(bad)
jg
mov
jp
mov
fs
adc
popf
clc
push
pop
push
jbe
cmps
push
ins
and
pop
push
adc
(bad)
test
xor
push
xchg
mov
push
popa
sbb
and
push
shr
fyl2x
inc
aad
or
mov
cmps
push
pop
sbb
mov
loope
lods
lods
js
dec
and
sub
pusha
addr16
cmp
add
sub
and
adc
xlat
pushf
arpl
push
jle
addr16
jmp
addr16
mov
out
ror
and
lods
jmp
hlt
dec
sahf
mul
push
inc
pop
sbb
lock
inc
mov
adc
pushf
cmp
or
outs
sbb
sub
inc
(bad)
test
mov
fs
aad
icebp
or
lahf
into
xchg
lahf
xor
outs
mov
mov
les
or
icebp
fsub
jbe
mov
hlt
xor
out
shl
inc
movs
out
xchg
dec
arpl
adc
mov
ins
pushf
push
div
jmp
jmp
dec
add
jns
test
loop
repnz
mov
idiv
int3
cmps
in
jno
mov
mov
sub
ins
mov
call
cs
mov
imul
pop
not
pop
and
enter
das
enter
pushf
sti
test
neg
arpl
in
adc
push
loope
xchg
(bad)
out
loop
mov
push
cmp
into
inc
sti
xchg
data16
and
sub
jecxz
int3
jne
mov
(bad)
xchg
call
clc
or
popf
jg
mov
pop
push
or
pop
cmp
cld
dec
jle
pusha
cmp
dec
cmps
sbb
pop
std
dec
movs
mov
aad
pop
lahf
sub
and
shl
int3
daa
or
rol
std
inc
sbb
in
adc
data16
sbb
outs
mov
iret
scas
push
ret
jbe
in
push
test
xchg
es
xor
dec
hlt
nop
aas
xchg
retf
movs
stos
daa
addr16
movs
sahf
cmp
cmc
in
aam
aaa
push
sbb
call
dec
pop
sbb
dec
retf
inc
or
push
and
add
out
sti
mov
push
jbe
movs
out
(bad)
or
test
cmp
push
mov
xchg
cmps
mov
into
iret
inc
imul
shl
xchg
aaa
mov
sub
push
std
stos
shr
xchg
test
mov
into
das
lods
jle
ds
push
cmp
(bad)
pop
shl
fidiv
and
pop
mov
or
imul
push
loopne
or
jno
lds
enter
outs
mov
pusha
mov
add
push
cmp
fisttp
adc
enter
and
jl
mov
retf
mov
leave
add
std
or
pop
fwait
mov
adc
ins
pop
cs
mov
sub
ret
retf
or
jb
daa
sub
mov
xchg
in
jo
out
push
xchg
leave
xor
sub
sbb
mov
mov
pop
xchg
ss
add
outs
ja
dec
push
in
pop
add
in
inc
mov
lods
ss
adc
cmp
stos
sub
es
ret
enter
jle
xchg
int
aad
movs
aad
or
xchg
sub
call
adc
jp
je
ficomp
test
sub
xchg
push
or
(bad)
js
loopne
and
xor
lods
and
mov
jmp
mov
gs
dec
mov
mov
mov
pop
push
mov
stos
cmps
test
test
adc
adc
push
cmp
in
dec
sbb
add
mov
(bad)
cmp
sbb
fld
ds
xchg
or
int
cwde
and
dec
outs
in
mov
scas
enter
in
ins
adc
les
adc
retf
xchg
clc
dec
mov
dec
xchg
jns
mov
cld
or
xchg
adc
xchg
pop
jno
add
test
xchg
ins
in
scas
push
pop
mov
xchg
fisubr
int3
mov
stc
cmps
les
push
mov
and
lock
push
inc
jno
scas
jns
icebp
xchg
jmp
dec
jmp
and
icebp
fucomp
sub
mov
repnz
adc
(bad)
jl
inc
pop
mov
int3
xchg
shl
pop
xchg
scas
rcr
sub
jg
xchg
dec
xchg
cmp
xor
(bad)
push
jecxz
inc
add
ss
xchg
and
iret
sbb
jecxz
mov
xchg
sti
cwde
test
jg
and
not
test
int3
pushf
out
ret
pop
mov
add
mov
imul
push
jae
hlt
movs
mov
add
shl
cwde
cmp
add
mov
sar
jle
xor
test
jmp
fnstenv
jl
ins
cmc
(bad)
sub
loopne
push
xchg
hlt
inc
ror
fwait
jecxz
lods
stc
pop
and
arpl
jo
xchg
add
or
popf
push
loopne
sub
ins
lsl
icebp
jle
cmps
pop
and
aad
test
push
popf
mov
cdq
in
imul
sbb
call
hlt
push
lods
retf
out
sub
dec
and
jb
outs
test
pop
sub
jp
xchg
inc
xchg
cmp
sub
cmp
or
clc
outs
vmovups
mov
jns
mov
pop
add
jmp
sub
int3
sub
cmp
(bad)
mov
sbb
ss
and
imul
retf
pop
ret
lds
push
cmp
pusha
addr16
jae
mov
add
cmp
mov
test
mov
cld
jo
mov
xlat
stos
pushf
pop
inc
jmp
ins
test
(bad)
adc
out
sub
lds
jmp
cmps
mov
or
popa
push
repnz
cdq
and
pusha
pop
sbb
add
push
inc
xchg
jno
stos
icebp
rcl
add
or
jp
add
dec
xchg
cmp
out
test
ins
dec
sub
and
sub
test
adc
bnd
mov
fs
cmp
adc
mov
pusha
inc
jb
push
adc
js
or
mov
stos
sbb
mul
push
test
aas
ds
ret
pop
xchg
adc
shr
fs
sub
push
or
mov
lods
div
mov
stc
int3
xchg
imul
fdivr
js
shl
arpl
fimul
fcomp
imul
loope
shl
mov
mov
jb
push
mov
in
test
cmp
mov
pmulhuw
iret
mov
(bad)
fnstcw
call
inc
cmp
leave
push
ss
push
adc
call
cmp
inc
dec
jmp
imul
dec
dec
cli
dec
aam
fcom
(bad)
fnstsw
hlt
ret
ds
fwait
cmp
dec
stos
pop
inc
xchg
cli
pop
rcl
ja
pop
or
jns
sub
fldenv
inc
pop
adc
add
pop
out
and
outs
iret
dec
inc
sub
lods
jmp
push
mov
mov
das
mov
jle
retf
pop
in
jo
pop
or
dec
jge
in
call
add
xlat
push
loop
push
xchg
sub
test
sar
fwait
adc
xor
das
push
das
lods
xor
add
sub
xor
mov
icebp
test
xchg
inc
cmps
push
mov
push
icebp
pop
sbb
mov
fmul
lock
aas
gs
lock
arpl
sbb
sub
dec
add
mov
xchg
rcr
out
inc
xchg
dec
sti
pusha
sub
pusha
jecxz
xlat
mov
cwde
jl
shl
mov
jl
std
inc
scas
cwde
in
mov
inc
test
sub
adc
xlat
arpl
fdiv
fisttp
add
lock
cmp
or
dec
test
mov
loop
cwde
es
or
mov
or
mov
(bad)
ins
or
cdq
push
test
push
or
enter
fild
jno
jo
ja
ja
push
cmp
or
mov
mov
ins
or
icebp
(bad)
call
hlt
fld
sti
adc
jecxz
cmovne
xor
int
(bad)
nop
arpl
xchg
mov
mov
push
sbb
mov
mov
cdq
out
adc
aam
cmp
and
mov
pop
inc
mov
or
int
cmp
ret
lods
cmp
not
push
mov
mov
movs
loop
jl
test
(bad)
cmp
xor
jle
sub
stos
outs
xor
pop
and
pop
xlat
in
xlat
shl
push
cmp
jge
sar
mov
stos
aaa
or
mov
repnz
sar
(bad)
imul
jns
aam
jmp
retf
cmp
jne
into
jnp
sbb
dec
xchg
jg
scas
push
mov
dec
out
shl
adc
int3
cmps
aas
or
(bad)
pop
jg
nop
xchg
int
mov
fcmovne
jge
dec
bound
xor
stc
cmps
add
dec
jle
add
out
imul
push
add
mov
or
push
dec
jbe
pop
push
mov
sub
xchg
movs
pop
sbb
mov
add
shl
dec
adc
scas
stos
xor
or
(bad)
ins
xchg
sub
mov
push
es
sbb
clc
mov
pop
or
lods
mov
mov
rcl
push
sar
sbb
(bad)
jno
fwait
daa
test
cmp
loopne
shr
adc
pop
mov
adc
jae
leave
(bad)
retf
mov
enter
fucomp
fisubr
jmp
int3
pop
dec
sub
pushf
push
jp
pusha
and
into
inc
stc
mov
shl
in
pop
movs
lea
push
inc
or
xchg
cmc
pop
test
mov
fcmovb
mov
jmp
lds
inc
(bad)
nop
test
loop
and
push
std
dec
jmp
div
xchg
adc
xor
push
push
ins
dec
out
xchg
or
xor
(bad)
pop
xchg
jb
js
dec
nop
shr
(bad)
(bad)
xor
and
stos
loop
mov
cmp
push
movs
adc
xchg
test
gs
push
push
(bad)
out
nop
cmp
lahf
fwait
sbb
pop
movs
(bad)
and
sub
push
push
enter
test
mov
cmp
mov
push
sub
xor
sbb
push
test
inc
ret
jae
jge
test
lods
(bad)
leave
push
into
push
pop
push
icebp
fucomip
cmp
mov
ror
mov
pop
hlt
scas
jne
cmp
in
push
mov
mov
mov
push
xor
mov
dec
xchg
rcl
xor
cmp
out
cmp
adc
movs
mov
out
popa
cmps
push
xlat
aad
scas
and
and
enter
aaa
jmp
sbb
cmp
mov
mov
repnz
xchg
inc
adc
retf
dec
jmp
adc
mov
pop
ins
popa
mov
and
inc
call
ins
fdivr
mov
pop
lods
push
(bad)
popf
js
sub
mov
gs
movs
fidiv
adc
shl
jle
shl
cmps
mov
dec
xchg
(bad)
ins
jb
mov
pusha
cs
sbb
(bad)
int
pop
mov
mov
cdq
mov
xchg
mov
cli
sahf
jmp
movs
and
test
outs
mov
dec
mov
pop
fwait
mov
push
les
sub
sub
out
ins
push
das
cwde
ror
mov
mov
or
inc
and
mov
fcom
es
push
ja
xchg
inc
fcomip
push
cmp
push
cmp
cmp
stos
cli
push
mov
jne
and
jb
add
out
mov
cmps
cmp
mov
inc
mov
inc
push
xchg
xchg
pop
pop
push
cmps
mov
mov
dec
nop
dec
pop
jge
xchg
rcr
adc
cmp
fcomp
mov
iret
adc
popa
pop
xor
out
pop
mov
cmp
mov
push
retf
pop
jo
scas
nop
lock
xchg
xchg
aaa
jne
mov
pusha
add
arpl
hlt
loopne
out
mov
mov
adc
mov
push
lock
jo
mov
mov
pop
ins
cmp
enter
push
add
stos
or
sbb
xchg
test
push
xchg
ret
push
or
loope
xor
out
test
mov
stos
push
and
dec
pusha
call
push
loope
es
and
mov
or
and
dec
sbb
xchg
lods
or
cmps
fmul
rol
sub
and
or
ror
call
ja
xchg
loopne
outs
mov
xchg
sbb
xchg
inc
movs
mov
fld
inc
push
movs
arpl
sub
push
mov
outs
ret
out
cmp
ret
push
sub
outs
cmp
std
std
or
movs
and
jp
fs
(bad)
(bad)
and
lods
pop
aas
push
sar
pushf
stos
cmp
sub
pop
imul
ret
loope
popf
push
jg
inc
sub
fisubr
push
fimul
loope
sbb
jne
and
push
shl
imul
jp
sbb
lods
test
or
stos
xchg
mov
adc
mov
stc
nop
mov
or
outs
add
xchg
jecxz
popa
mov
mov
xchg
inc
ja
sub
icebp
mov
mov
idiv
aaa
pop
fimul
xlat
repnz
sbb
ja
ds
scas
sub
arpl
pop
cmp
dec
pop
jnp
int
push
cmc
sahf
push
fistp
inc
out
inc
xchg
enter
jnp
mov
push
fcmovne
fld
mov
mov
sbb
and
xchg
add
jbe
or
mov
mov
rcr
push
xor
retf
pushf
loope
rcr
cmps
das
movs
(bad)
shl
or
mov
aas
movs
mov
sbb
push
or
das
call
mov
xchg
(bad)
pop
(bad)
and
in
mov
fiadd
sub
cmps
push
mov
jmp
lock
add
mov
and
xchg
push
pushf
clc
test
inc
push
cdq
pop
shl
shl
and
imul
mov
sbb
les
pop
arpl
lea
or
add
ins
(bad)
sbb
call
not
mov
inc
jb
pop
shl
xor
xor
dec
bound
mov
sub
sub
int
in
pop
cmp
dec
or
xchg
add
ins
jne
or
mov
xchg
pop
test
cs
xchg
sahf
call
jns
shl
ins
ficom
xchg
or
cli
fdivr
es
adc
jnp
xchg
out
loop
sub
outs
in
push
pushf
mov
(bad)
cmp
enter
in
jp
pusha
ja
adc
sub
pop
dec
push
push
pop
mov
test
xchg
movs
xor
lock
cmps
sbb
sbb
inc
(bad)
imul
cld
imul
push
nop
jb
ud1
sub
cmp
les
cli
sub
jmp
xchg
movs
(bad)
iret
mov
mov
cmps
int3
cmp
outs
mov
cmp
dec
nop
and
retf
add
xchg
push
pop
gs
sar
je
nop
ror
scas
out
out
push
or
jns
xchg
fadd
retf
adc
mov
mov
dec
add
sbb
cmp
popf
dec
mov
hlt
add
sub
sub
out
push
cld
jbe
adc
into
push
or
inc
lahf
and
rol
inc
sbb
inc
rol
mov
mov
cmp
sub
and
sbb
xor
jno
cld
jns
mov
jle
sub
push
and
pop
nop
sbb
loope
sbb
mov
dec
mov
popf
mov
sub
vzeroall
or
movs
jg
mov
adc
loope
adc
xchg
dec
dec
jmp
ror
js
sbb
cdq
pop
cmp
retf
sub
int
inc
dec
add
xchg
push
loope
sbb
add
push
xor
test
repnz
ret
push
(bad)
(bad)
and
into
outs
int3
xchg
popa
cmp
xchg
xchg
fnstsw
arpl
push
dec
push
adc
idiv
cmp
mov
dec
inc
adc
sbb
les
fcmovb
stos
or
xchg
add
adc
shl
in
pop
in
cmp
sbb
aaa
jmp
mov
inc
add
cmps
ficomp
add
or
sub
and
xchg
sbb
sub
and
adc
pop
stos
jecxz
loopne
cdq
jp
hlt
jnp
push
repz
mov
mov
jne
in
pop
(bad)
aaa
dec
arpl
jp
mov
mov
es
push
sbb
(bad)
fld
mov
pop
inc
xchg
jg
cmp
aad
call
adc
pusha
cmp
or
add
xor
test
fwait
mov
jbe
ficom
scas
cwde
int3
dec
mov
mov
push
shl
dec
out
and
xchg
jae
or
pop
jno
cmp
pop
dec
push
mov
popa
jge
cmp
pusha
mov
outs
dec
punpckhwd
sbb
pop
mov
push
mov
sbb
div
or
push
sar
or
ins
jnp
push
out
dec
sub
outs
pushaw
iret
and
xchg
stos
test
mov
jp
mov
fisub
push
sti
pop
adc
pop
mov
sbb
jecxz
ja
dec
push
inc
lods
sub
rcl
repnz
jne
aaa
xchg
mov
jae
push
dec
shl
jecxz
pop
or
cs
es
inc
aas
mov
or
dec
fwait
mov
les
jp
dec
jno
or
aam
adc
mov
(bad)
(bad)
in
mov
inc
shl
push
pop
imul
mov
xor
push
sahf
enter
dec
adc
or
pop
dec
shr
mov
sbb
and
mov
or
xor
mov
sub
and
inc
xor
xchg
mov
pop
mov
jmp
push
btc
add
pop
adc
dec
pop
retf
ficom
in
mov
fdivr
sbb
je
jns
cs
clc
gs
in
xchg
dec
adc
stos
fsub
xchg
cmps
or
es
pop
sbb
pop
loop
movs
test
arpl
dec
pop
rcl
adc
and
sbb
cmp
sahf
loope
sti
jbe
push
mov
popa
push
arpl
add
cmc
cs
lds
int3
dec
sbb
jecxz
pop
mov
fisttp
ret
mov
inc
fwait
rol
call
test
and
inc
(bad)
adc
out
cli
retf
retf
pop
retf
(bad)
push
jl
aaa
iret
test
aad
xor
ins
push
jae
mov
mov
xchg
xlat
loope
push
lea
dec
mul
jmp
mov
std
jmp
cmp
lds
rol
arpl
mov
popa
and
(bad)
or
sbb
ret
mov
inc
add
pusha
out
nop
and
xchg
(bad)
retf
out
fnstenv
jmp
je
sub
imul
dec
fwait
cmc
lock
ins
push
outs
daa
fcom
sub
movs
call
call
iret
mov
push
out
xor
inc
inc
and
fild
push
cld
rcr
out
call
xchg
sbb
(bad)
sub
push
daa
dec
inc
push
mov
es
cdq
xor
jb
add
cmp
sub
mov
pop
retf
dec
retf
cdq
(bad)
xlat
pop
loopne
and
in
cmp
fdiv
mov
nop
psubd
sbb
mov
mov
push
cmp
je
push
scas
(bad)
lods
push
fnsave
pop
(bad)
out
push
sub
clc
(bad)
scas
inc
popf
nop
dec
movs
pop
cld
xlat
jecxz
mov
jge
in
jmp
jge
call
add
push
hlt
ja
aad
pop
(bad)
and
call
into
imul
xchg
xlat
cmps
push
cmp
push
add
add
call
loop
fnstcw
ja
dec
push
sub
sbb
jbe
lock
loope
pop
xor
fdiv
mov
adc
add
mov
xor
xlat
rcl
loope
mov
sti
lea
inc
jg
push
mov
inc
mov
sar
loopne
inc
push
jmp
xchg
popf
mov
cmp
xor
pop
adc
xor
pop
(bad)
fidivr
cmp
cmp
pop
inc
fmul
ins
cmp
packssdw
push
sbb
xchg
xor
div
mov
xchg
cs
inc
ror
add
icebp
or
out
cmp
jb
(bad)
cli
cld
xchg
mov
pop
test
repnz
xchg
mov
xor
out
xchg
lds
cmp
fwait
inc
in
dec
cwde
shl
push
sub
xchg
inc
les
out
cmp
in
std
jl
clc
stc
push
xchg
dec
aam
call
adc
call
mov
icebp
stc
imul
lods
stos
xor
data16
dec
pop
stos
pop
dec
call
sbb
call
and
fmul
mov
mov
adc
and
dec
lea
shr
lahf
mov
div
and
inc
(bad)
cmps
(bad)
mov
seta
fwait
loope
sti
rcr
sbb
mov
jmp
pop
aaa
test
mov
sub
cld
sub
mov
repz
cli
mov
movs
repnz
movs
sub
aam
out
js
loopne
and
sahf
sbb
or
pop
test
push
sbb
daa
retf
fmul
ret
jb
call
fs
and
inc
dec
inc
dec
dec
add
push
xor
dec
push
xor
arpl
fld
and
or
cli
imul
(bad)
or
retf
imul
daa
cmp
dec
gs
sub
sub
jmp
fld
push
cmp
or
sub
mov
jnp
dec
or
fs
pop
and
xor
cmp
sbb
das
ins
pop
int
cmp
adc
leave
jl
mov
retf
fistp
retf
int3
adc
repnz
mov
in
(bad)
pop
xor
daa
aas
mov
mov
mov
outs
inc
std
pop
inc
movs
mov
pop
adc
fdiv
push
cmp
cmp
inc
mov
clc
pushf
or
push
hlt
jo
mov
retf
cmp
movs
xor
mov
loopne
shr
jmp
hlt
add
push
loopne
ds
sbb
dec
ds
sahf
std
xor
cmps
jmp
fisttp
repz
jnp
imul
aam
ret
in
popa
sub
pop
sub
pop
rcl
fild
int3
pop
and
jmp
ja
jg
stc
xchg
cmc
mov
popf
push
push
jnp
shl
test
add
pop
rcr
mov
cld
cli
xor
pop
adc
in
call
jmp
cmp
or
sub
add
mov
jne
dec
(bad)
call
retf
mov
scas
mov
lea
pop
inc
mov
jg
and
inc
out
jae
cld
mov
imul
inc
mov
ret
jp
xchg
cmp
pushf
inc
mov
jecxz
jne
ins
dec
jle
lods
jle
mov
sahf
jl
sbb
aam
ror
add
test
scas
add
in
into
jle
out
and
xchg
mov
inc
rcr
pop
out
ret
inc
push
add
or
pop
xor
les
mov
sbb
pop
sub
or
fcom
inc
stos
adc
mov
fwait
(bad)
stos
aas
inc
xor
(bad)
fucomip
inc
jnp
xor
jge
das
mov
shl
movs
fldl2t
jmp
push
sbb
retf
ja
movs
jge
out
fstp
inc
xor
and
outs
sbb
lods
add
sahf
mov
test
gs
enter
daa
or
jne
sbb
loope
mov
xor
cmc
das
rcr
add
cdq
or
cmp
inc
jno
(bad)
mov
adc
mov
push
ss
and
stos
jns
sub
out
outs
xchg
dec
in
test
fld
xor
shl
cmp
mov
mov
adc
int
and
out
mov
loope
frstor
mov
pop
ins
pop
sar
xor
push
loope
ffree
out
mov
xchg
add
mov
dec
stos
(bad)
and
mov
aad
mov
lahf
ja
or
daa
fist
leave
pusha
sbb
ds
fnstenv
icebp
jge
inc
cmps
stos
ret
stos
popa
scas
fisubr
in
fld
in
inc
pop
mov
lds
add
mov
aaa
mov
cli
xrelease
mov
stos
xchg
dec
(bad)
ins
rcr
fadd
sub
pusha
cld
lods
(bad)
pop
mov
xlat
enter
stos
sahf
dec
inc
je
inc
aaa
ss
stos
sbb
adc
stc
push
lods
cmp
aam
imul
pop
jmp
cdq
and
inc
loope
lahf
and
push
jle
push
push
xchg
fdivr
mov
in
aad
pop
ds
xor
and
mov
arpl
pop
jl
mov
sti
pop
mov
cmp
out
cmp
repnz
push
xor
dec
into
inc
inc
cmp
scas
sahf
dec
int3
ins
cmc
sub
outs
sub
ja
and
push
aas
xor
jecxz
test
inc
ret
loop
test
cmp
in
pop
retf
repz
addr16
stos
pop
xor
or
(bad)
sbb
js
jmp
in
xor
dec
imul
pop
xor
or
je
inc
mov
aaa
jbe
inc
popf
dec
pop
imul
pop
shl
stos
xor
jmp
fisttp
mov
aad
mov
dec
imul
rcr
sar
out
daa
sub
cmovnp
pop
mov
dec
add
inc
loop
fnstsw
xchg
bnd
clc
lock
dec
ret
ret
scas
push
xor
xor
scas
jecxz
(bad)
dec
nop
fidiv
xchg
mov
repnz
ret
xor
aam
daa
rol
(bad)
into
push
std
dec
cmp
shr
mov
retf
mov
push
je
dec
fild
push
xchg
outs
dec
jle
test
mov
aaa
not
loope
mov
cmp
out
pop
sbb
push
xchg
push
jbe
adc
cmp
pusha
jge
lahf
cmps
scas
jle
lea
mov
data16
(bad)
leave
mov
mov
aam
leave
and
sbb
xchg
mov
push
inc
dec
lods
jmp
inc
jmp
add
mov
movs
daa
and
scas
retf
repnz
test
pop
mov
or
cmc
repz
or
push
popf
mov
pop
and
test
push
ja
sub
cmp
lods
inc
rcr
jl
daa
dec
loop
test
sbb
repnz
cmp
add
cld
inc
fmul
add
and
sub
sbb
aaa
mov
xor
ror
sbb
mov
nop
add
int3
lds
cld
jnp
inc
cmc
add
mov
add
xor
adc
cmp
loope
out
mov
adc
cs
adc
adc
outs
in
fnstcw
fsub
adc
sub
pop
cvttps2pi
sub
fidivr
int3
lea
and
rol
xchg
xor
stos
push
add
jb
jecxz
int3
mov
mov
xchg
mov
jno
push
(bad)
push
in
loopne
sbb
movs
push
and
mov
push
mov
inc
in
inc
(bad)
cmp
repz
lods
pop
pop
mov
jo
ds
in
xor
pop
test
loop
dec
dec
lods
or
jne
lock
aaa
ss
pop
add
ret
push
pushf
dec
inc
xchg
jmp
fsubp
sahf
in
jge
sbb
ret
inc
js
lock
enter
dec
xor
lock
xchg
jb
std
jb
adc
dec
jb
fadd
repnz
in
dec
xchg
mov
mov
jmp
cmp
jnp
cld
mov
rcr
pop
div
pushf
cmc
mov
mov
add
push
(bad)
xchg
fwait
and
and
add
(bad)
push
ds
xlat
cwde
inc
push
out
je
and
sar
bndstx
(bad)
pop
scas
stos
pop
push
adc
adc
mov
add
and
or
mov
imul
or
(bad)
sbb
in
loope
adc
dec
scas
cmp
xlat
daa
cmp
dec
int
push
shl
call
fsubr
js
push
inc
pop
sti
sub
add
or
into
loopne
bound
jl
xchg
mov
sti
sbb
push
mov
aaa
int3
fcom
xor
push
das
xchg
out
cmps
or
cmp
int
inc
push
mov
fbld
or
stos
xchg
out
fdiv
and
movs
pop
in
xor
adc
jnp
add
add
mov
inc
mov
mov
jge
dec
xchg
data16
ins
fwait
mov
(bad)
jb
push
iret
xor
jbe
je
and
mov
cmps
dec
sub
hlt
shr
test
jnp
int3
push
add
pop
push
mov
test
dec
out
push
jae
scas
icebp
push
sbb
loop
ret
hlt
ret
pushf
push
mov
inc
adc
and
mov
dec
push
loope
adc
loope
aam
hlt
(bad)
lock
imul
xchg
xor
or
dec
fnsave
cdq
fdiv
or
movs
popf
test
int3
cmc
mov
cmps
es
aam
in
ins
mov
jbe
jge
scas
mov
push
pop
popa
sub
or
jmp
mov
iret
stc
and
clc
or
mov
fbld
and
push
mov
call
aad
repnz
sbb
inc
jb
movs
int3
inc
dec
stc
loop
jmp
aad
xchg
rol
sbb
rol
dec
xchg
inc
inc
xchg
and
dec
pslld
int
sub
xor
mov
int
push
sbb
jb
mov
mov
mov
push
inc
mov
or
add
mov
xor
mov
pop
retf
(bad)
xor
out
mov
and
sahf
bound
inc
sahf
gs
push
xchg
pop
fidiv
xor
mov
(bad)
pop
in
pop
in
mov
pop
add
adc
lahf
pop
rol
sbb
sahf
push
or
push
xchg
mov
ret
cdq
and
sub
call
and
idiv
push
xor
fistp
call
(bad)
mov
mov
pop
jmp
push
cwd
and
mov
sbb
shl
test
xor
mov
push
pop
or
(bad)
gs
xchg
dec
das
dec
pop
inc
daa
dec
adc
imul
mov
movs
pop
dec
pop
pop
aam
add
jmp
icebp
nop
sbb
aaa
or
loopne
mov
sbb
inc
cmps
jno
jns
cmc
ins
push
je
popa
hlt
dec
add
push
ins
push
sbb
jnp
mov
push
cmp
push
jg
js
mov
xlat
jne
fdiv
stos
dec
cmp
imul
fisubr
adc
mov
cmp
xor
cdq
pop
jne
outs
out
push
jl
cdq
dec
jnp
sub
cmp
add
mov
out
ins
or
cs
addr16
cmp
jo
in
lods
jns
jp
loopne
sub
ds
and
add
mov
cmp
jle
(bad)
std
xor
stc
add
and
add
movs
shr
dec
mov
int
fild
mov
cmp
or
aaa
dec
jmp
fwait
pop
mov
mov
mov
retf
xchg
pop
inc
cli
ja
fcom
fnstenv
cdq
mov
fwait
xchg
adc
movs
pusha
add
cmc
mov
jno
call
dec
jbe
std
out
ret
(bad)
xchg
mov
pop
pop
rcr
mov
sti
jns
pop
push
xchg
jae
rcr
loope
xchg
pop
add
jns
inc
ins
jp
cmp
iret
jmp
jbe
xchg
fwait
je
pop
hlt
pop
cmps
or
xor
sbb
inc
mov
xchg
xlat
(bad)
mov
pop
sub
fwait
inc
and
push
mov
adc
and
lgs
fld
data16
or
test
cmp
test
mov
cmp
adc
fdivr
jl
fsub
div
movs
retf
enter
mov
adc
int
mov
mov
or
jmp
jl
pop
bound
in
push
ror
ins
jg
movs
cmps
xlat
mov
mov
sbb
cmp
sub
ins
jecxz
jne
(bad)
xchg
sub
fiadd
(bad)
hlt
fnstsw
adc
je
cmp
xor
jno
add
pop
mov
test
js
test
xchg
and
xlat
jbe
mov
jp
lock
xchg
hlt
sahf
icebp
push
test
loop
jge
shr
jno
mov
in
lea
test
popa
(bad)
out
jge
fadd
(bad)
scas
jle
repz
push
add
sub
sub
punpckhbw
test
in
fldcw
mov
dec
xor
dec
lods
(bad)
cmp
xchg
inc
sbb
(bad)
sti
lahf
cmc
dec
in
adc
push
mov
sar
or
imul
dec
iret
xchg
inc
std
dec
mov
xor
ins
in
push
aad
push
inc
adc
add
sub
outs
mov
mov
or
(bad)
pop
stc
arpl
dec
std
ffree
pop
or
movs
es
dec
test
mov
push
dec
ror
(bad)
jl
sbb
push
cdq
adc
jecxz
add
sub
scas
pop
pop
js
fisttp
mov
int3
movntq
and
pop
jle
sbb
adc
xor
or
mov
jmp
and
mov
mov
dec
lods
xchg
int3
and
xor
ins
repz
enter
fadd
cmp
mov
sbb
bsf
adc
push
ret
mov
adc
outs
push
adc
cmc
out
outs
loope
stos
mov
mov
xchg
lahf
(bad)
lea
mov
jg
xchg
mov
into
add
add
push
scas
icebp
retf
(bad)
fisttp
dec
push
arpl
xchg
fwait
dec
sbb
outs
jecxz
aas
int
mov
or
repnz
clc
mov
jp
pop
mov
cmp
inc
sub
mov
aad
xchg
call
and
stos
ror
adc
xchg
pusha
sub
or
or
cmp
push
out
mov
inc
and
pop
stos
call
cdq
pop
mov
push
out
mov
outs
mov
adc
mov
out
jb
mov
and
mov
les
jns
sahf
scas
xchg
adc
arpl
call
cmp
loopne
pop
mov
add
jne
mov
repz
jb
popf
xor
xor
retf
sub
jmp
test
lods
iret
scas
out
dec
and
sub
cmc
loope
imul
sbb
xor
lods
shl
push
(bad)
push
test
sbb
inc
jne
xor
dec
arpl
call
icebp
jno
retf
jnp
rcr
cmp
ret
enter
add
cs
inc
xchg
xor
test
push
int3
jmp
aam
mov
xor
inc
jl
pop
retf
xor
addr16
clc
aaa
push
ins
retf
rep
adc
mov
adc
data16
xor
test
dec
daa
push
cmps
in
adc
mov
add
(bad)
xor
dec
xchg
mov
out
pusha
fcom
mov
outs
adc
rep
lds
lock
jmp
fidiv
scas
in
arpl
cmp
push
fsubr
cwde
pop
jae
clc
adc
enter
aam
adc
pop
fld
jmp
inc
test
mov
mov
mov
ds
sahf
mov
adc
and
and
cmp
jp
outs
dec
ds
mov
adc
or
jno
scas
mov
adc
sub
and
(bad)
enter
scas
dec
sar
and
iret
jnp
inc
dec
les
push
(bad)
and
dec
jmp
pop
bound
jae
pop
pop
xor
out
mov
mov
sub
addr16
xor
cld
mov
sahf
mov
and
push
int3
fst
es
movs
das
fistp
mov
(bad)
fsub
leave
xchg
aas
mov
aas
xlat
sub
loop
sbb
mov
jmp
jmp
pop
mov
push
mov
fnsave
js
and
sbb
xchg
scas
mov
mov
push
xor
mov
retf
push
mov
mov
adc
(bad)
adc
ror
popf
out
push
mov
cmp
les
cmc
sub
sbb
adc
int3
dec
sbb
dec
sbb
in
fild
and
add
hlt
(bad)
bound
mov
hlt
cmp
cdq
ja
jmp
les
xchg
mov
mov
add
xchg
xor
(bad)
dec
mov
sbb
iret
sub
stc
popf
xor
stos
cmp
push
lods
fnstenv
scas
add
add
sub
arpl
xchg
xor
jo
popf
push
jno
shl
scas
mov
(bad)
inc
xor
pop
xor
icebp
jge
popa
pop
dec
test
mov
ror
and
int3
pusha
fs
push
aad
mov
sub
cld
stos
mov
imul
stc
mov
mov
and
mov
add
dec
dec
mov
adc
pushf
xor
mov
jne
shr
sahf
inc
addr16
jl
inc
popf
mov
movs
or
xchg
cmp
outs
xchg
xchg
or
xor
mov
sti
push
dec
arpl
outs
cdq
sbb
lock
(bad)
jnp
mov
outs
xor
inc
scas
(bad)
ror
xchg
push
(bad)
pop
and
hlt
add
dec
xchg
sahf
bound
clc
sahf
repz
rcl
xchg
sti
addr16
popa
(bad)
cmp
add
jl
jae
and
mov
dec
or
push
sahf
stc
jmp
and
loope
push
add
loop
xchg
jmp
in
shl
pop
or
iret
cmovns
jmp
stos
rcl
pop
xor
int
cmp
or
mov
lods
push
and
jae
daa
inc
add
lods
mov
loop
clc
loope
mov
int3
ja
fmul
jmp
je
add
pop
mov
sar
bound
mov
push
out
nop
dec
mov
loopne
aas
jle
push
ret
and
cwde
and
push
lods
inc
sub
into
out
jge
inc
test
adc
rcl
push
or
out
mov
out
pop
sub
jnp
push
shr
dec
scas
mov
jle
dec
mov
jecxz
xor
dec
mov
out
xchg
mov
jbe
xor
and
adc
cld
(bad)
setg
and
mov
clc
cmc
stos
and
and
cdq
push
sbb
cmp
and
pop
or
jp
push
rol
imul
sub
add
imul
daa
jecxz
push
sahf
dec
data16
test
(bad)
loopne
xor
push
aaa
in
test
mov
xor
jae
shl
inc
loop
mov
adc
je
shr
mov
addr16
je
int3
and
mov
arpl
push
les
(bad)
cmp
mov
sbb
sub
mov
mov
jmp
add
adc
and
cdq
mov
and
pop
outs
lds
ror
jmp
sbb
and
lods
adc
stos
or
aaa
stos
inc
lods
test
js
ror
bound
xchg
sub
int3
(bad)
loop
aam
fdiv
sbb
das
or
inc
lock
push
shl
cmps
adc
mov
xchg
enter
inc
lock
xchg
(bad)
cmp
dec
sbb
mov
cld
sub
sbb
(bad)
aaa
or
pop
inc
jbe
sti
pop
adc
and
lea
jmp
fcmovb
sbb
cld
hlt
xor
mov
shr
dec
lods
ret
jg
in
clc
les
mov
loop
addr16
xchg
fwait
dec
retf
sub
or
mov
and
gs
cdq
xchg
jl
aaa
call
lds
jns
and
retf
imul
xchg
sub
call
ins
xor
test
leave
jmp
in
or
in
aas
adc
lds
mov
inc
xor
jns
(bad)
ins
cwde
loope
sti
xor
adc
fbld
fnstenv
mov
sahf
and
sbb
pop
lock
jne
xor
stos
mov
push
(bad)
aas
(bad)
sti
lea
xchg
gs
lds
pop
cmp
and
sbb
pop
retf
pop
inc
pop
adc
clc
sti
inc
pop
dec
pop
push
retf
xor
jmp
int
lea
xchg
adc
stc
cmp
cmps
arpl
inc
push
push
not
mov
xor
lea
stc
inc
xor
movs
stos
call
fsub
xchg
pop
cmps
xrelease
rep
out
and
pop
(bad)
cmp
test
cmp
lods
loop
mov
xor
pop
nop
mov
push
mov
mov
jg
leave
inc
sbb
pop
sub
pop
sub
and
jns
ret
push
fild
ins
lahf
mov
push
mov
xchg
ret
scas
dec
adc
jmp
push
cmp
mov
add
dec
aad
or
cmp
mov
js
(bad)
js
and
add
mov
sbb
and
out
retf
data16
inc
push
call
or
xchg
push
inc
aas
leave
ins
(bad)
clc
test
jb
int
pop
aad
xor
dec
cmp
emms
xchg
push
cwde
addr16
sbb
mov
jge
inc
mov
fnsave
sbb
sub
ins
ds
cmc
mov
leave
or
bound
pop
jl
and
sbb
in
(bad)
js
push
addr16
in
das
scas
push
rcr
push
push
lods
in
or
cmps
call
mov
sub
ins
cmps
scas
test
out
sbb
pushf
clc
mov
aas
lock
scas
mov
retf
data16
jne
test
xchg
je
sub
leave
cmp
mov
outs
xchg
jecxz
retf
mov
inc
mov
mov
pop
int3
jmp
dec
movs
call
repnz
xor
shl
(bad)
repz
pop
mov
adc
aam
clc
sbb
jnp
and
dec
pop
fcom
mov
and
xor
(bad)
ret
mov
dec
fninit
cmp
pop
lds
mov
jb
loopne
test
loop
out
push
cmp
cmp
xor
ret
push
dec
dec
pop
adc
xlat
cmc
ret
cs
mov
mov
sub
sti
pop
in
or
mov
int3
jecxz
jnp
and
add
cmc
mov
lock
pop
add
adc
mov
xchg
(bad)
outs
sub
int
popf
mov
fstp
add
clc
retf
js
mov
div
pop
adc
mov
jmp
repnz
mov
test
aad
sub
mov
sbb
mov
add
pop
jo
adc
clc
shl
jo
pop
scas
cmp
xor
call
pop
call
imul
repnz
imul
call
imul
or
push
std
je
bound
and
(bad)
dec
push
xchg
nop
mov
pop
jp
xor
fs
std
mov
sub
mov
arpl
mov
mov
mov
mov
cdq
aaa
jl
mov
mov
mov
call
aad
pop
or
ds
jg
or
sbb
stos
mov
push
outs
sahf
loop
lds
enter
ins
cli
div
or
int3
sub
or
or
mov
jge
in
push
jmp
lods
mov
movs
and
sar
add
xchg
mov
cdq
(bad)
xchg
sahf
add
out
add
sahf
add
inc
mov
int3
in
pop
sbb
stos
out
je
add
std
scas
jmp
push
scas
dec
push
imul
aaa
adc
mov
iret
idiv
mov
push
push
sbb
pusha
out
sub
cmp
and
and
jmp
hlt
in
stc
aaa
sbb
xchg
loopne
xchg
cmp
imul
pop
adc
fistp
js
stos
int
or
clc
mov
sbb
cld
or
pop
xor
cld
or
mov
mul
sub
or
ja
mov
(bad)
out
cmp
(bad)
pusha
pop
xor
(bad)
(bad)
movs
sub
push
lods
ret
mov
xchg
sbb
mov
pop
jno
mov
pop
cwde
jb
js
dec
stos
(bad)
and
and
(bad)
test
shl
sub
pop
inc
rcl
(bad)
adc
dec
fbstp
ret
jg
mov
into
dec
in
push
test
sbb
enter
mov
leave
in
mov
jns
lock
jmp
push
cwde
mov
test
bnd
jl
std
push
movs
test
add
push
push
mov
out
xlat
outs
mov
mov
mov
in
jecxz
daa
pop
(bad)
jle
and
add
int
pop
lods
imul
fld
xor
sbb
dec
rcr
fwait
add
ror
ja
inc
data16
cmp
add
sub
ret
sahf
add
xor
adc
cs
in
xchg
xor
outs
pop
pop
pop
jo
dec
adc
add
gs
aas
retf
sub
fisub
fwait
cmp
ficom
test
not
push
mov
adc
ror
inc
scas
mov
ffreep
movs
call
pcmpgtd
ficom
xchg
push
mov
loope
xor
pusha
adc
cmp
mov
out
jmp
mov
xchg
dec
jge
push
pushf
or
and
ret
push
cmp
pop
adc
cmp
aaa
neg
jbe
lock
enter
out
xchg
mov
dec
inc
je
xor
cmps
(bad)
push
cmc
aad
fwait
or
in
mov
(bad)
or
or
shl
sub
ror
fdiv
sti
mov
shl
das
xor
xchg
xor
or
add
and
inc
ret
lock
xchg
xchg
enter
cdq
fld
movs
cmps
shr
inc
mov
inc
xchg
hlt
dec
xor
repz
leave
fwait
sub
ins
test
call
test
enter
mov
pop
sti
movs
cs
pop
test
std
adc
xor
hlt
push
loop
xchg
mov
push
and
pushf
dec
cwde
pop
repz
add
mov
cld
sbb
jl
sub
xor
outs
cmp
sbb
scas
fild
dec
xchg
addr16
repnz
cmp
imul
jmp
sbb
out
ss
inc
dec
cmp
adc
stc
adc
mov
fs
sar
jp
outs
or
int3
in
inc
push
cwde
rcr
outs
cld
xchg
dec
clc
pushf
xlat
je
pop
xor
aam
loope
push
sahf
mov
sub
sbb
pop
repz
sub
(bad)
push
inc
push
xor
xchg
push
jmp
pop
push
add
stc
xchg
pusha
dec
xchg
inc
sub
cmc
outs
lock
adc
mov
mov
xor
(bad)
daa
sar
dec
movs
cs
inc
jp
push
xor
icebp
stc
push
cmps
mov
in
loop
adc
or
outs
les
mov
xchg
popa
test
jae
xchg
push
dec
fidivr
push
inc
pop
push
bound
fisttp
fmul
rcl
pusha
cmp
inc
cmp
movs
jmp
sub
push
cmp
add
cmp
dec
arpl
ja
add
mov
mov
fsub
and
xchg
xchg
aam
dec
mov
pop
cmp
pop
nop
mov
sub
fidiv
rcl
out
scas
dec
mov
(bad)
repnz
call
mov
mov
push
not
jb
push
inc
sub
cli
mov
jnp
sub
std
mov
mov
in
aad
adc
(bad)
shr
aam
fidivr
or
scas
and
mov
js
pop
bndldx
pop
imul
movs
jns
enter
cmps
xchg
inc
lahf
das
cmps
mov
call
xor
mov
inc
lahf
icebp
dec
and
xor
add
fisubr
pop
or
pop
jbe
lock
lahf
push
mov
icebp
cmp
xchg
in
(bad)
lea
cdq
sub
mov
jo
mov
mov
add
data16
jno
mov
call
loop
dec
pusha
push
inc
mov
cwde
imul
inc
or
add
pop
add
cmp
dec
data16
adc
lds
push
add
rol
jecxz
sahf
in
pop
stos
nop
clc
inc
xchg
bound
xchg
in
push
inc
call
mov
dec
mov
mov
cdq
pushf
dec
(bad)
mov
cmp
cli
xchg
jns
test
sub
in
jmp
loope
sbb
mov
and
lock
iret
cmp
lahf
dec
fidivr
test
and
es
pop
in
dec
push
shl
push
test
cwde
out
pop
inc
and
inc
pop
jle
aad
sbb
(bad)
fdiv
xor
mov
enter
mov
movs
mov
jnp
mov
dec
cmp
int3
out
in
outs
loop
sbb
add
aad
xor
(bad)
aas
ds
adc
lock
xchg
mov
mov
pop
outs
mov
or
sbb
clc
int
adc
imul
jbe
add
sbb
push
lds
push
popa
sub
cmps
ror
cmp
adc
push
inc
xor
xor
stos
(bad)
pop
clc
cmp
scas
add
pop
cdq
inc
cmp
in
sub
push
sub
(bad)
ja
sub
adc
cmp
jle
bound
iret
lds
ret
push
or
clc
ret
inc
pop
xchg
mul
sub
jle
cmp
test
sahf
lahf
imul
mov
xlat
and
cmp
(bad)
jmp
lea
mov
lahf
(bad)
jmp
aad
sub
test
fstp
cdq
dec
fadd
jbe
ret
pop
xchg
mov
bound
push
inc
mov
dec
or
push
bound
xchg
cmps
adc
test
ror
ds
lods
jae
out
dec
out
pushf
cld
mov
test
dec
loop
or
cmc
iret
popf
out
ins
sbb
add
(bad)
test
call
sbb
fst
(bad)
cmps
add
lock
dec
and
push
ret
out
out
popa
loopne
add
jge
out
add
test
(bad)
call
mov
add
mov
xor
xor
std
dec
sbb
jg
mov
loopne
xchg
cmp
imul
add
sbb
pop
push
fwait
jg
pop
mov
cmc
shl
dec
scas
enter
and
(bad)
push
ror
mov
sbb
dec
pop
mov
js
pop
mov
stos
(bad)
das
sbb
xchg
ins
sub
mov
dec
fcom
jno
jmp
enter
das
mov
js
xchg
inc
inc
sub
pop
stc
mov
outs
cs
and
cld
call
mov
sti
push
nop
loope
sub
test
push
cli
retf
lahf
ror
push
lods
cmp
or
and
dec
inc
jmp
loopne
mov
ret
retf
mov
aad
(bad)
icebp
cmps
test
(bad)
lea
and
sahf
adc
lds
pop
lds
mov
inc
dec
add
retf
xchg
jmp
mov
scas
cmps
add
popa
(bad)
push
xor
data16
leave
loope
aas
and
mov
sbb
sbb
cmp
sub
lahf
cmp
sbb
repnz
call
and
push
add
cmp
rol
xchg
stos
aam
mov
adc
mov
pop
jl
xlat
dec
sub
(bad)
outs
cmp
xchg
inc
lahf
in
popf
mov
sub
rcl
out
aaa
or
or
push
sbb
inc
xor
fyl2xp1
inc
in
sub
xchg
cld
sahf
and
push
inc
jb
aaa
rcr
fs
test
nop
sub
mov
mov
vmwrite
mov
xor
test
scas
dec
mov
nop
dec
icebp
mov
imul
adc
dec
mov
aad
cmp
sbb
pushf
xchg
xor
jnp
bound
in
sbb
(bad)
cs
inc
inc
faddp
xchg
sbb
lahf
xchg
adc
ins
test
idiv
pusha
sub
sbb
pushf
shl
out
(bad)
mov
xchg
cmp
add
icebp
inc
pop
aas
les
jmp
dec
repz
or
and
retf
retf
out
or
iret
or
shl
test
and
dec
push
mov
push
mov
shr
dec
div
aam
sub
sbb
icebp
fsub
int3
addr16
add
jge
(bad)
retf
jb
in
stos
xor
das
xor
retf
ds
pop
enter
and
xchg
jge
pop
cmc
js
out
cmp
int3
pop
adc
jg
or
and
(bad)
dec
ins
div
imul
movs
push
test
adc
retf
imul
repnz
xor
hlt
test
add
mov
cmps
mov
das
(bad)
xor
push
ins
rcr
leave
cmps
shl
fistp
arpl
pop
dec
fwait
mov
mov
ja
sub
xchg
cwde
or
jno
inc
test
xor
(bad)
sbb
(bad)
jmp
test
repnz
test
sbb
cmp
jno
mov
jae
mov
sti
lods
pop
push
sti
int3
(bad)
jmp
divps
push
mov
push
fmul
jns
sub
rol
test
cmp
push
inc
jbe
and
mov
lahf
ins
(bad)
cmp
stos
jge
mov
push
pop
adc
pushf
adc
mov
push
enter
fiadd
sar
xor
push
sbb
xlat
fdiv
test
das
test
cmp
mov
(bad)
ja
mov
pop
sub
xchg
xchg
neg
push
sbb
into
lods
stc
leave
inc
xlat
(bad)
jp
push
push
ds
xor
fldpi
jne
inc
jo
es
push
xchg
sbb
jl
mov
aaa
cmc
xchg
call
or
ret
jnp
aam
jecxz
adc
cmp
mov
cmps
xchg
cmp
mov
loope
inc
mov
jp
les
int
call
jae
mov
or
inc
xor
jg
push
push
imul
mov
xchg
pusha
pop
das
dec
mov
xchg
movs
pop
std
cdq
xor
xor
and
scas
retf
lahf
and
jae
inc
cmp
jmp
mov
cmc
paddw
test
jle
mov
jno
fcmovnu
xchg
clc
sbb
adc
test
cmp
cmps
lock
out
stos
mov
lahf
xor
aas
(bad)
jno
xchg
lahf
jge
push
add
dec
mov
sbb
pop
popa
jns
add
xchg
ja
inc
dec
test
scas
(bad)
adc
retf
xor
enter
dec
movs
aam
stos
mov
sbb
jmp
mov
ud0
arpl
or
or
ret
out
fild
adc
ficom
push
mov
shl
ja
mov
or
or
jnp
cli
or
mov
je
jb
inc
add
cmps
mov
and
mov
pop
jnp
or
push
es
cmp
movs
xchg
add
inc
cmps
xchg
xchg
out
imul
inc
mov
data16
sub
push
jg
daa
mov
loop
mov
mov
sub
pop
mov
jle
pop
fisttp
mov
es
sub
push
aas
mov
sub
arpl
ins
aaa
mov
mov
sub
retf
fimul
xchg
dec
sub
or
ds
mov
inc
cmps
mov
jnp
mov
xor
sub
mov
cmp
imul
clc
test
fdivr
jmp
(bad)
out
xor
cmc
(bad)
ds
adc
sub
rcl
pop
xsavec
repz
sahf
push
pop
mov
add
mov
mov
xor
(bad)
out
scas
cmps
sti
and
jge
sbb
mov
sub
(bad)
repz
enter
mov
push
out
jae
add
pop
adc
adc
mov
or
ds
mov
mov
ds
mov
jo
neg
not
mov
and
repz
xchg
pusha
xor
je
leave
dec
push
pop
lods
stos
fisubr
jmp
push
push
and
cli
xor
shl
inc
add
clc
(bad)
cwde
xchg
xor
mov
xor
sub
cs
push
sbb
sbb
push
adc
loop
addr16
(bad)
retf
out
test
or
ret
fimul
stos
add
jbe
cmp
xor
popa
jp
fisttp
stc
xchg
ret
ja
mul
and
pop
push
scas
add
sub
(bad)
outs
aam
fucom
sub
mov
out
adc
xor
add
movs
inc
jne
pop
idiv
xor
xor
mov
adc
or
xchg
ja
cwde
mov
stos
shl
pop
and
pop
cld
jb
jg
or
in
loop
rcl
pop
adc
jbe
out
mov
adc
hlt
add
sbb
leave
jbe
add
inc
cdq
aam
pop
sbb
push
stos
pop
sbb
cmp
push
daa
(bad)
in
xchg
into
pop
arpl
sub
dec
mov
xor
cmp
dec
add
dec
scas
cmps
stos
cmp
pop
fbld
retf
adc
mov
enter
jmp
push
sbb
jl
and
cli
mov
ja
clc
jge
pop
cmp
(bad)
ja
adc
bt
push
iret
out
cdq
test
ret
sbb
(bad)
xchg
add
dec
cmc
mov
and
out
test
push
sahf
mov
or
ins
ds
in
sti
mov
mov
add
rcr
add
jbe
jnp
retf
push
(bad)
test
push
jle
aam
cmp
adc
hlt
fldenv
pop
loop
les
or
inc
std
and
push
mov
dec
inc
adc
data16
stos
and
popf
gs
mov
jno
and
aaa
cs
and
sub
jne
jbe
test
sub
adc
sahf
add
data16
js
jmp
or
stc
push
cmp
jle
je
out
pop
add
adc
jmp
and
dec
int3
pop
les
pop
sar
cwde
ja
mov
mov
retf
sub
ret
fs
pop
hlt
sahf
and
es
ss
cwde
je
dec
push
arpl
inc
addr16
arpl
sub
adc
dec
xlat
push
aaa
cwde
pushf
adc
leave
cmps
(bad)
mov
push
xor
and
add
jns
dec
leave
jle
jmp
inc
rcr
stos
cmp
sub
lea
(bad)
xchg
push
adc
mov
jns
xor
aaa
ror
mov
adc
popa
fld
ss
adc
sub
xchg
retf
and
add
ret
xchg
sbb
mov
adc
xor
mov
arpl
std
pusha
lds
and
pushf
xor
hlt
arpl
xor
dec
ret
cmp
and
frndint
or
ins
je
mov
xor
fld
scas
push
pop
sar
cwde
pushf
call
jg
inc
pop
jmp
push
ret
pop
add
mov
and
popa
push
push
sbb
gs
call
leave
ins
push
cmp
ss
rcl
call
shr
js
pop
in
test
inc
dec
push
inc
stos
cmp
inc
sbb
mov
mov
mov
jns
add
in
jmp
pop
(bad)
lea
lock
addr16
mov
outs
in
xchg
cmps
add
bound
cli
in
push
ja
pop
mov
push
dec
add
not
test
jle
jae
push
fcomp
push
int3
sub
out
cmp
nop
in
cli
xor
xchg
sbb
fwait
mov
cli
mov
outs
inc
(bad)
mov
inc
rcl
fild
xchg
stos
dec
fdiv
jmp
lods
mov
push
adc
dec
ret
jg
sbb
xor
out
add
pop
mov
out
push
add
push
jb
cmp
aam
xchg
push
push
clc
sub
mov
call
sub
push
push
pushf
mov
mov
cdq
and
pop
jo
ret
sub
sub
mov
iret
mov
mov
inc
(bad)
adc
(bad)
aad
push
pop
fcomp
dec
sbb
jmp
aam
push
outs
btr
adc
pop
jnp
xchg
call
es
mov
adc
xchg
cwde
ss
call
xchg
xor
stos
cmp
out
mov
stos
cwde
sar
in
stc
xor
in
in
js
add
and
pop
daa
ror
adc
addr16
ins
outs
pop
push
sbb
adc
xor
mov
addr16
lahf
jmp
inc
sti
dec
cwde
in
mov
in
cmp
push
lods
movs
rcr
cmp
mov
jne
call
das
lea
jmp
jns
test
popa
or
inc
jb
and
inc
cmc
pushf
sbb
pop
fwait
ss
jno
pop
or
push
(bad)
stc
in
mov
push
jae
lods
rcl
adc
add
mov
out
adc
lods
sbb
int
inc
ret
lahf
cmp
push
fs
mov
push
ret
out
jne
xor
dec
mov
das
retf
shl
in
gs
test
push
test
cs
popa
mov
push
add
out
push
aas
adc
std
push
ret
adc
bound
xchg
jo
push
mov
hlt
es
xlat
mov
add
push
and
retf
mov
shl
sar
dec
test
xchg
ins
push
popa
and
sbb
je
xchg
shl
push
call
jb
cmp
mov
rcr
out
fbstp
and
out
dec
mul
mov
cwde
dec
js
or
packsswb
in
add
inc
loop
cmp
sti
arpl
or
mov
out
imul
mov
sbb
repz
fucomi
xchg
mov
mov
adc
ret
call
xlat
cld
mov
add
and
xor
push
ins
and
adc
jmp
inc
(bad)
out
fs
stc
leave
dec
cmp
stos
stc
cmp
xor
inc
or
mov
addr16
sub
and
mov
cmp
ins
icebp
and
(bad)
call
dec
and
mov
jp
dec
ja
sbb
mov
xor
pop
xlat
jno
out
jp
lods
imul
fld
xor
fistp
loope
and
jle
daa
aad
ins
ret
loop
inc
lahf
pop
int3
in
pushf
(bad)
rol
jl
or
in
or
jbe
cld
push
stc
aam
mov
mov
xor
fstp
sbb
pushf
icebp
xchg
fldcw
push
xor
(bad)
add
sub
jecxz
outs
adc
repz
sub
and
dec
mov
es
push
enter
dec
xchg
add
leave
inc
cmp
aaa
loope
xor
fild
and
test
push
cmp
out
nop
cld
cmps
std
ins
cmp
add
inc
jge
dec
add
das
jbe
pushf
sbb
push
sbb
ins
imul
mov
jmp
imul
sub
lods
xor
cwde
loop
adc
or
adc
and
and
retf
adc
or
push
ja
add
fwait
retf
xchg
mov
and
(bad)
hlt
pop
mov
push
add
(bad)
xchg
mov
movs
push
in
mov
cmc
aas
rcr
movs
ins
jae
fwait
ret
mov
mov
retf
cmp
or
cmp
push
push
fwait
bound
mov
aad
fsubr
fsub
cmp
inc
push
out
mov
repnz
add
sbb
jg
jge
push
mov
and
out
dec
sbb
cli
sub
jecxz
test
test
inc
mov
inc
inc
and
(bad)
(bad)
shl
rcr
pop
(bad)
cmp
pop
mov
mov
mov
mov
mov
mov
mov
sar
adc
loopne
inc
push
ins
lods
jnp
int3
xchg
arpl
adc
or
shr
int3
push
lods
xchg
jle
push
jmp
cwde
sbb
jge
mov
rcl
add
rcr
cdq
lods
sahf
sub
outs
inc
call
pop
dec
cmp
jne
mov
or
stos
popa
adc
pop
sar
sbb
mov
fmulp
sbb
mov
or
pop
adc
lock
mov
mov
inc
xchg
popa
cld
pop
mov
lock
shl
dec
push
rcr
or
call
(bad)
in
sbb
cmps
stos
rol
test
or
xadd
fist
stos
leave
out
call
mov
ins
dec
mov
shl
jecxz
not
imul
jbe
mov
jns
mov
sti
mul
outs
dec
not
imul
test
mov
inc
retf
mov
cmp
hlt
out
xchg
sub
in
fisttp
call
push
nop
call
ret
out
jmp
dec
adc
imul
push
dec
outs
or
adc
or
arpl
inc
rcl
cmp
and
stos
jge
pusha
pushf
and
sub
ja
sub
and
outs
cmp
pop
mov
lea
mov
gs
sahf
jmp
xchg
mov
pop
push
ja
fild
ds
cmps
stos
mov
lahf
ret
adc
dec
(bad)
xchg
mov
rol
mov
cmp
fnstsw
dec
cmc
sti
inc
push
add
test
jmp
jnp
jmp
cwde
arpl
push
sti
icebp
or
inc
cmp
add
cmp
dec
jl
stc
mov
nop
arpl
sbb
inc
jne
daa
idiv
(bad)
mov
mov
or
inc
fbld
in
dec
jno
test
scas
nop
mov
loope
cmp
xlat
inc
ins
mov
stos
sbb
mov
lods
sub
push
dec
sbb
or
cmp
mov
data16
sbb
lahf
and
iret
call
mov
mov
or
mov
pusha
xchg
sahf
jmp
addr16
ret
aad
out
pop
pop
movs
inc
or
jl
and
and
ins
pop
jns
push
adc
xor
adc
loope
repz
push
clc
add
mov
retf
call
xor
jne
mov
jg
hlt
pusha
push
bound
jae
stc
pop
aaa
and
mov
pop
dec
ins
mov
mov
sar
(bad)
(bad)
popf
adc
jp
ins
cld
stos
call
inc
imul
push
imul
or
or
es
jge
aas
cmps
xor
cmps
or
pop
pop
pop
lods
push
gs
cmps
rcr
in
rep
mov
dec
es
xor
mov
dec
dec
inc
xchg
inc
neg
retf
cwde
mov
pop
cmp
iret
lods
aas
dec
dec
adc
add
shr
pop
scas
fnstcw
fld
jmp
cwde
aaa
int3
mov
cli
xor
dec
sub
out
loopne
push
pop
dec
adc
lods
aad
dec
fcmovne
mov
dec
int
or
int
push
xchg
xor
adc
or
out
jp
hlt
(bad)
arpl
sti
push
enter
add
jecxz
push
dec
sti
pushf
arpl
cli
push
inc
(bad)
sub
adc
int3
arpl
ret
test
inc
(bad)
sub
and
add
push
xchg
scas
aad
and
push
cmp
cmp
adc
xor
jmp
popf
pop
push
bound
lock
jle
and
ins
arpl
cld
inc
push
mov
sar
imul
fisub
js
in
pop
div
dec
jns
adc
mov
cld
in
cmp
or
mov
(bad)
push
mov
mov
pop
cmps
sbb
dec
cdq
(bad)
or
xor
cld
fadd
mov
ins
inc
addr16
call
mov
les
popa
cli
in
ds
cwde
stos
cmp
or
mov
cli
jge
mov
rol
mov
mov
xor
or
push
mov
clc
test
out
inc
(bad)
icebp
sub
ja
mov
jle
ja
sahf
add
loopne
mov
adc
fcomp
loopne
fdivr
test
test
pop
sbb
in
sti
mov
mov
sbb
xchg
mov
fmul
pop
popf
aad
retf
jg
test
shr
mov
mov
xchg
mul
rcr
rcl
xor
rcr
sbb
jp
(bad)
pop
sub
daa
retf
ins
fadd
test
outs
inc
xor
stc
add
push
test
inc
xor
pop
add
or
mov
fmulp
mov
fbld
pop
add
loopne
rcr
test
js
call
repz
fsubr
mov
mov
ss
call
push
mov
adc
pop
and
pusha
mov
jo
(bad)
push
imul
retf
repnz
aas
cli
push
push
not
scas
add
scas
fcmovnbe
or
push
addr16
sub
jne
(bad)
pop
add
jnp
push
sbb
icebp
inc
mov
dec
movs
in
cli
and
xchg
add
cmps
xchg
dec
dec
loopne
cdq
mov
lock
sub
into
stos
psrld
dec
daa
cdq
or
inc
in
shr
jmp
mov
pop
pusha
adc
repz
sub
in
jae
test
test
int3
loopne
pop
xchg
mov
sti
jecxz
outs
jmp
pop
jecxz
cwde
push
lds
inc
ror
pop
mov
out
add
cwde
mov
dec
lods
xlat
(bad)
cld
xor
mov
cmp
mov
xchg
imul
push
popf
ffreep
ret
and
dec
push
pop
fmul
push
(bad)
daa
mov
jge
mov
shl
push
adc
(bad)
push
loop
test
aas
xchg
jns
xchg
inc
(bad)
in
pop
or
enter
sub
retf
out
aas
push
adc
(bad)
out
add
loop
or
pop
ret
test
mov
call
push
in
mov
mov
adc
adc
jl
lock
xchg
imul
ds
and
cmc
mov
jo
mov
sar
sar
add
push
jmp
xchg
sub
sub
xchg
mov
ja
jmp
sti
mov
jmp
adc
std
test
outs
dec
aad
ds
ret
jbe
xchg
pop
push
add
jmp
adc
jns
out
nop
xchg
scas
stos
push
or
ss
xchg
xor
call
xor
(bad)
jb
and
pop
mov
cmp
jo
rcr
(bad)
cmp
inc
mov
pop
push
js
inc
rol
dec
jae
or
repz
cdq
pop
ficomp
(bad)
(bad)
(bad)
out
das
lock
sbb
out
dec
test
outs
shl
push
xchg
pop
js
lahf
sahf
(bad)
cmp
dec
and
loopne
sub
nop
sbb
mov
inc
int3
ficomp
push
sbb
into
xor
push
push
mov
fwait
imul
mul
call
mov
pop
cmp
mov
mov
dec
pop
pop
sub
jbe
xlat
mov
movs
or
pushf
test
xchg
add
pop
and
and
neg
daa
mov
(bad)
cmp
jb
in
xor
sbb
ret
scas
pop
out
cli
repnz
cli
sub
(bad)
adc
outs
push
loopne
int
imul
push
jl
pushf
div
push
cmp
mov
aam
aam
mov
and
sbb
mov
add
lods
jecxz
jno
retf
sbb
xor
mov
test
ret
jmp
scas
push
rcl
sbb
fdiv
enter
pop
test
inc
outs
fld
outs
mov
xchg
sub
dec
sub
cld
test
or
nop
jmp
in
ins
dec
out
lods
mov
xor
shl
xor
lock
mov
icebp
xor
xchg
fdiv
push
adc
pop
add
sbb
movs
add
or
(bad)
out
daa
mov
xor
xchg
in
in
sbb
push
or
push
fs
and
cmp
adc
pop
cwde
stc
jge
test
fwait
mov
in
xlat
not
push
inc
jge
and
add
sbb
and
push
add
jge
mov
sub
int
dec
mov
mov
jp
call
pop
push
dec
mov
pop
sub
pop
push
mov
xchg
jmp
and
xor
out
shl
outs
jmp
push
test
and
dec
bound
out
cli
add
outs
gs
mov
adc
movs
sub
test
pop
jbe
or
lock
addr16
mov
daa
mov
push
jge
(bad)
mov
test
mov
mov
fist
(bad)
ins
lods
cdq
and
pop
cmp
ret
mov
mov
mov
sahf
retf
aam
gs
fimul
jecxz
push
out
and
cmp
in
pop
add
push
mov
mov
pop
jae
and
iret
rcl
jle
xchg
xchg
ret
aas
stos
add
mov
mov
clc
addr16
and
xlat
call
push
push
pushf
(bad)
cmp
xor
fisttp
pop
fadd
int
fmul
fcmovne
xchg
mov
jmp
adc
push
ret
add
add
and
push
mov
ror
pop
or
jp
lahf
jnp
imul
out
or
ret
iret
push
jbe
sbb
les
fsub
and
xlat
outs
mov
(bad)
hlt
ss
cmp
cmp
adc
push
mov
ja
adc
pop
push
jnp
call
add
pop
fwait
jae
jecxz
repz
dec
daa
loope
pop
inc
gs
mov
add
or
fucompp
jmp
cmps
mov
and
imul
pop
js
pop
mov
gs
iret
sar
cmps
popf
(bad)
add
mov
int
cld
pop
mov
cs
frstor
out
or
xchg
xor
in
add
mov
test
xor
sbb
jns
loope
out
cmp
leave
jne
push
cmps
jmp
stos
add
clc
or
pop
push
arpl
jmp
sub
call
rcr
test
cld
add
cmps
xchg
outs
out
mov
stc
cmps
enter
mov
push
dec
pop
test
in
mov
mov
fst
addr16
push
gs
xor
sub
add
pop
lods
inc
dec
in
jno
rcr
sbb
mov
lea
rcr
call
out
iret
xchg
mov
mov
out
inc
ja
stc
repnz
gs
in
inc
jecxz
mov
add
sub
inc
cdq
dec
jmp
inc
inc
xchg
ins
dec
mov
ds
pop
imul
mov
pop
je
xor
je
outs
jle
cmp
sub
pop
or
cmps
cmp
imul
xchg
sbb
aaa
das
aas
and
out
adc
sahf
xchg
test
mov
cwde
mov
jl
push
imul
push
mov
fmul
movs
sub
out
test
fwait
(bad)
mov
push
xchg
xchg
retf
mov
fidiv
xchg
mov
out
push
mov
pushf
push
xor
cdq
adc
add
ja
stos
call
(bad)
or
mov
repnz
mov
push
call
push
adc
repnz
push
and
and
lock
sar
retf
mov
cmp
iret
and
lds
lea
mov
jecxz
ss
push
push
cmp
ja
cld
adc
pusha
mov
scas
and
push
mov
push
popf
sub
and
lds
fmul
cs
clc
lods
cmp
fistp
in
addr16
not
xor
mov
pop
mov
jecxz
dec
sbb
les
cld
mov
int3
cdq
icebp
mov
xchg
js
push
dec
mov
into
mov
(bad)
push
movs
stos
inc
lods
xor
stos
inc
push
cmp
xchg
fist
or
shl
out
jns
xchg
fisttp
imul
repz
pusha
icebp
call
xor
popf
ret
cmps
add
shl
add
test
cmp
movs
aas
inc
mov
xor
leave
jp
fwait
add
add
std
push
inc
mov
push
dec
nop
(bad)
scas
outs
sti
cmp
and
jne
lock
mov
fwait
jmp
fwait
jns
rol
ret
mov
sahf
out
cmp
pop
aad
stos
sbb
mov
enter
dec
daa
retf
test
jle
xor
test
test
test
and
fisttp
dec
ins
out
leave
retf
addr16
pusha
aad
lock
sbb
jae
shl
xchg
mov
inc
mov
rol
sub
data16
cmp
enter
ins
dec
inc
int3
das
mov
in
cmp
div
cwde
jl
mov
in
or
repz
xor
jo
popa
and
data16
jmp
inc
push
mov
rcr
mov
push
ins
jbe
mov
js
dec
jnp
jbe
jb
daa
pop
in
mov
(bad)
scas
jecxz
out
fistp
fsubr
outs
jmp
popa
adc
shr
mov
movzx
pop
pop
js
and
add
sub
pop
adc
sbb
jecxz
scas
sub
jle
fiadd
stc
mov
xchg
sub
out
pop
mov
out
or
inc
inc
(bad)
leave
mov
add
ins
daa
loope
sub
idiv
jecxz
dec
mov
jnp
add
xor
stc
xor
jl
jo
mov
sahf
mov
(bad)
push
out
aad
dec
inc
or
jae
jmp
sbb
nop
sub
leave
popf
push
jl
xchg
repz
pop
or
jae
pop
(bad)
dec
cmp
fwait
mov
das
sbb
in
add
loopne
pmaxsw
test
cmc
dec
stos
inc
mov
mov
mov
jns
add
xchg
shl
push
fbstp
mov
lds
inc
cld
inc
stos
xchg
sub
(bad)
(bad)
push
ja
mov
jg
jg
aas
out
ss
pop
mov
cdq
adc
inc
jns
dec
push
bound
inc
push
(bad)
fist
push
in
in
add
fnstsw
mov
(bad)
loopne
lods
jo
or
and
test
in
push
retf
and
sub
mov
les
jle
movs
pop
jo
xor
push
icebp
iret
pop
adc
inc
hlt
ins
enter
jb
loop
sti
push
imul
das
iret
loop
fst
loop
ror
aaa
push
stc
ins
adc
jmp
das
push
popa
(bad)
das
outs
mov
pop
nop
inc
aam
xor
sar
in
das
aam
scas
jno
repnz
cmps
jmp
adc
push
pop
mov
mov
cmps
not
push
lock
test
pop
popf
push
aas
xchg
sbb
jg
inc
push
xor
mov
mov
inc
jns
sbb
adc
test
ficom
lahf
sub
mov
call
sbb
xor
xchg
aaa
out
push
lods
push
sbb
or
mov
xor
sub
popaw
add
in
jne
dec
(bad)
arpl
pop
idiv
dec
jnp
pushf
aam
or
mov
(bad)
pop
daa
call
sbb
cmp
(bad)
mov
aaa
xchg
js
pavgw
jmp
dec
enter
push
or
fwait
sbb
rcr
lock
clc
inc
xchg
xchg
imul
stos
cmp
adc
(bad)
mov
sti
fdivrp
jmp
cmc
int3
mov
loope
daa
cmps
ret
push
lds
jns
out
aaa
push
or
and
cwde
push
dec
es
(bad)
sbb
mov
add
cwde
loop
iret
jo
mov
dec
mov
pop
ins
add
fdivp
or
(bad)
aas
pusha
dec
dec
cmps
bound
jp
jo
test
enter
cmp
pop
add
mov
idiv
lgdtd
add
popa
xor
inc
jmp
jns
push
cmp
lock
lahf
dec
xchg
stos
mov
popa
aam
sbb
movs
xchg
sti
into
inc
ret
adc
push
mov
in
inc
pop
adc
jl
pushf
ja
and
pusha
cmp
je
test
aas
in
xchg
xor
inc
leave
pop
aas
ror
lds
xchg
stos
push
enter
outs
dec
in
dec
jnp
imul
dec
loope
clc
loope
fsub
rol
cmovno
dec
xchg
dec
and
mov
xor
(bad)
cmp
and
inc
push
mov
add
sti
repnz
ret
push
mov
std
sub
cmovle
ds
call
in
cmp
cdq
dec
leave
in
loop
rcr
add
gs
jno
ret
rcr
(bad)
dec
(bad)
xor
sub
scas
loope
leave
fild
cmps
mov
sbb
neg
es
pop
jg
dec
into
bound
sbb
call
repnz
mov
jmp
pop
pop
dec
add
adc
test
push
or
lds
fucomi
cld
mov
adc
mov
push
stos
(bad)
jmp
cmp
fst
inc
fwait
test
mov
dec
add
fstp
arpl
sub
adc
lds
data16
mov
out
loope
es
mov
jo
fisub
out
mov
jecxz
(bad)
mov
mov
jmp
and
push
xor
inc
jb
adc
sbb
scas
add
add
cmps
pushf
in
fsubr
into
imul
jg
int
pop
fadd
das
icebp
(bad)
pop
fldenv
shl
in
fisub
pop
ror
push
or
iret
aas
iret
adc
sbb
lods
xor
imul
hlt
lock
xchg
mov
(bad)
aam
adc
adc
sbb
and
aam
(bad)
fisttp
call
(bad)
fimul
out
loope
and
pop
ficomp
push
fwait
ror
pop
or
mov
mov
jae
jp
or
sbb
sbb
loope
mov
in
xor
adc
xor
(bad)
inc
add
adc
lea
jae
clc
(bad)
sbb
xor
mov
add
xor
xor
pop
or
add
retf
inc
and
lods
sahf
stos
bound
mov
not
cwde
jb
lds
xlat
pop
xor
or
out
in
jp
out
pop
jmp
sti
(bad)
mov
test
adc
shl
dec
jg
test
adc
scas
jl
push
mov
mov
imul
pusha
mov
mov
out
(bad)
fistp
dec
pushf
in
or
sti
int
popf
cwde
jecxz
inc
mov
imul
fs
cmc
call
icebp
dec
cld
mov
jl
fcomp
inc
rcr
sbb
daa
mov
pusha
mov
lds
out
movs
sbb
movs
rcl
in
arpl
inc
imul
jbe
inc
pop
sbb
push
mov
scas
jecxz
fild
mov
xlat
dec
dec
inc
push
cdq
popa
and
ror
addr16
mov
mov
pop
sbb
jge
mov
aas
sub
inc
rol
add
(bad)
mov
fiadd
jecxz
test
data16
or
mov
ds
(bad)
and
adc
out
leave
mov
stos
fnsave
jbe
ficom
and
test
mov
and
scas
sub
or
cmp
xchg
cs
xor
cmp
jmp
shr
cs
mov
fidiv
jo
add
xchg
jp
push
jmp
cwde
sbb
xor
mov
stc
push
jbe
and
pop
mov
test
jmp
xor
mov
cmp
pop
push
hlt
lfs
scas
push
lea
inc
sahf
xchg
adc
pop
jle
test
div
mov
inc
inc
pop
mov
push
jmp
in
inc
(bad)
imul
leave
dec
sub
pushf
push
daa
rol
cmp
mov
cmp
jmp
xor
loop
scas
les
nop
cmp
pop
cmc
pushf
das
imul
mov
push
lock
sbb
add
xchg
add
(bad)
aam
fadd
cmps
cs
pop
arpl
shl
cmp
call
push
dec
out
in
xor
ins
push
stc
jmp
mov
cmp
aaa
in
mov
mov
rcl
jmp
mov
pop
cmp
xchg
shl
push
dec
sub
mov
mov
mov
inc
or
out
push
mov
jnp
hlt
jae
(bad)
mov
push
dec
(bad)
aaa
jo
not
inc
adc
and
lods
popf
xchg
test
add
ja
rol
fistp
xchg
nop
fidiv
pushf
xchg
and
movs
jo
imul
push
(bad)
sbb
pop
cmp
iret
mov
mov
jmp
idiv
push
lds
push
jo
cdq
jge
sbb
sub
retf
or
adc
pop
scas
gs
mov
mov
dec
nop
cmp
popa
fdiv
push
shl
(bad)
js
xor
int
lock
cmp
sub
xchg
rcl
pop
jp
jo
inc
std
ds
int3
outs
mov
inc
call
jbe
(bad)
mov
test
inc
adc
test
pusha
cmps
in
stos
leave
lods
lock
mov
inc
aas
dec
sub
add
pop
cs
ficomp
xor
mov
fs
pop
and
mov
xchg
outs
dec
add
fcmovnb
ins
fwait
lods
mov
add
xchg
sub
lock
mov
pop
ret
xor
into
add
push
xor
sbb
fnstsw
mov
dec
xor
add
in
cs
mov
retf
mov
pop
outs
pop
mov
mov
loopne
or
je
xor
mov
push
leave
ds
xchg
pop
cmps
ffree
(bad)
leave
sub
sbb
inc
mov
mov
inc
and
mul
int
xlat
fadd
and
jle
jle
or
jmp
add
pop
(bad)
xor
inc
scas
adc
adc
xchg
or
outs
fwait
xlat
popf
lods
and
or
sbb
sbb
(bad)
cwde
sbb
and
jmp
pop
lahf
mov
inc
add
(bad)
dec
mov
jno
clc
or
push
daa
add
sbb
dec
std
sbb
pop
mov
test
in
daa
leave
jecxz
push
jge
cmps
loopne
popa
(bad)
jbe
sar
adc
sbb
gs
and
or
or
mov
cmp
mov
sar
cmp
pop
stc
xor
test
(bad)
ss
call
leave
call
(bad)
push
add
int
scas
loope
xor
xchg
sub
and
mov
mov
das
adc
out
(bad)
cs
test
jmp
jo
into
shl
dec
scas
(bad)
jmp
cmp
repnz
icebp
popf
inc
and
add
sbb
jnp
cmp
aam
pop
push
(bad)
pop
clc
dec
mov
hlt
inc
xchg
popf
ja
cmp
hlt
or
out
adc
adc
or
sub
mov
or
aaa
mov
jbe
or
pushf
jle
not
xor
mov
stc
pop
xor
cld
inc
shr
popf
mov
or
lock
cmc
add
lods
xor
mov
sbb
jg
mov
scas
lea
xchg
and
pop
add
inc
adc
mov
loopne
call
fsubr
add
sub
dec
sbb
popf
pop
or
(bad)
mov
out
push
xor
int3
add
or
sub
add
fs
stos
add
xor
push
dec
pop
mov
fcom
adc
xchg
aaa
aaa
sbb
or
push
jp
push
xchg
push
(bad)
lea
cmp
xchg
test
leave
lahf
fimul
push
js
mov
call
arpl
or
jae
sti
ja
xchg
ret
mov
retf
(bad)
loopne
fdivr
inc
mov
jp
pop
cs
sbb
cmp
or
fcomi
and
dec
dec
mov
in
dec
pop
(bad)
ret
add
stc
repz
adc
jecxz
or
xlat
mov
xchg
xchg
and
dec
mov
(bad)
pop
or
jge
cli
(bad)
sub
pop
push
scas
(bad)
push
(bad)
adc
sbb
push
or
jae
or
fistp
push
(bad)
add
enter
add
ins
jae
(bad)
(bad)
sub
pushf
mov
test
not
adc
mov
xchg
cmp
and
pop
retf
cmc
in
push
sbb
movs
sbb
cdq
aam
pop
movs
mov
rol
jbe
lock
inc
aam
xchg
mov
shl
jbe
sub
dec
jge
aad
sbb
push
sub
add
xchg
lea
cmp
fst
lock
gs
lock
inc
xchg
cmp
lods
bswap
push
jo
retf
arpl
addr16
xchg
data16
(bad)
cmp
jb
jmp
cld
fild
or
fldcw
mov
gs
jo
adc
jecxz
repnz
xchg
call
movs
in
aaa
jne
xchg
pop
psrlq
mov
popf
out
inc
xchg
jmp
call
cmp
push
mov
pop
stc
loope
scas
dec
and
or
mov
inc
push
xor
fwait
shl
(bad)
out
xchg
mov
mov
(bad)
in
(bad)
loopne
cmp
scas
dec
dec
and
shr
mov
mov
in
out
xor
jecxz
out
movs
jmp
arpl
loopne
sub
inc
std
mov
push
imul
jae
(bad)
in
push
scas
cmp
jns
jo
pop
cwde
div
aaa
mov
push
inc
aas
out
inc
call
xor
cmp
push
test
mov
add
push
ds
push
inc
jne
retf
push
cli
xor
arpl
ins
and
push
sbb
mov
mov
enter
fcom
xchg
(bad)
(bad)
fld
jl
mov
pop
div
mov
xchg
add
pushf
sbb
xchg
(bad)
jmp
mov
jge
and
movs
adc
or
xchg
xor
bts
jl
mov
dec
xor
xor
inc
push
repnz
cli
jge
sti
imul
xchg
arpl
iret
adc
arpl
push
jmp
cmp
std
mov
call
dec
jb
imul
jge
add
adc
jge
add
mov
or
push
clc
dec
hlt
inc
sub
and
enter
dec
adc
xor
in
cmp
push
mov
call
movs
push
dec
arpl
lds
inc
lea
jns
sub
jns
jmp
xchg
rol
dec
jle
adc
jecxz
xchg
jno
icebp
je
jmp
retf
jmp
mov
mov
fstp
fidivr
mov
xor
repnz
xchg
jle
xchg
lock
aad
bound
mov
rcl
and
pop
in
(bad)
push
sub
rcr
enter
xchg
repz
icebp
lea
hlt
jle
les
adc
jbe
lea
adc
xchg
sub
xchg
in
test
xchg
add
nop
cld
fmul
mov
adc
pop
loope
(bad)
retf
ret
pop
xor
add
mov
xchg
sar
mov
fs
xchg
dec
push
popf
inc
cmps
jge
fidivr
sub
dec
bound
sub
mov
add
dec
pop
add
into
dec
sub
jmp
ins
xchg
adc
js
mov
jns
fmul
sbb
fcomip
call
test
call
mov
lahf
fsqrt
and
and
loop
std
push
loopne
pop
jl
shl
test
lods
push
inc
mov
or
pop
mov
pop
xchg
call
pusha
in
stos
mov
pop
out
mov
pop
loopne
cmp
retf
cmp
shr
js
les
leave
sbb
mov
mov
inc
cmps
jmp
outs
sbb
test
push
mov
mov
jp
dec
pop
stc
ret
mov
pop
cmp
jae
pusha
add
dec
inc
mov
ds
retf
movs
push
or
pop
test
mov
(bad)
or
inc
lea
fstp
xchg
jmp
push
or
inc
mov
jnp
sub
popf
fisub
lea
je
sub
les
fst
xlat
inc
xor
rcl
imul
stos
and
sub
add
nop
xor
hlt
movs
and
call
inc
add
or
push
sar
ins
hlt
in
outs
outs
mov
scas
(bad)
jp
es
shl
add
fwait
pop
cmp
jg
or
adc
pop
das
test
xchg
mov
into
or
retf
lods
jmp
call
ins
inc
mov
in
jns
adc
aaa
mov
jo
xchg
arpl
std
test
fisubr
in
mov
outs
lea
lods
fild
and
and
mov
mov
addr16
xchg
lock
fs
pop
sub
in
mov
xchg
retf
stos
pop
ret
js
mov
adc
loope
shl
es
adc
cld
imul
shl
inc
fcom
shl
pop
inc
inc
retf
arpl
dec
shr
fs
jb
in
lea
jae
mov
push
pop
xor
mov
sti
jb
sbb
pop
call
push
or
dec
mov
mov
mov
mov
and
fnstcw
push
dec
retf
push
sub
mov
mov
aad
adc
sub
jae
(bad)
in
jae
and
pop
push
cmc
fcom
cwde
mov
push
cmp
push
call
dec
inc
das
cld
push
cmps
lods
lock
into
nop
xor
hlt
outs
jo
dec
xchg
adc
ja
cmp
loop
mov
mov
xor
test
out
sbb
clc
es
out
jnp
mov
stc
or
aas
iret
add
pop
in
pop
in
mov
jg
xor
pusha
les
int
jno
test
ss
lea
mul
test
fisttp
les
adc
jne
ds
or
leave
jns
ret
cmp
pop
xchg
outs
ficom
jl
xchg
sbb
pop
inc
dec
xchg
sbb
das
dec
fild
(bad)
adc
bound
test
call
rol
enter
or
out
adc
push
cli
clc
aad
mov
in
pop
and
rcr
lock
jp
or
lods
mov
cmps
cwde
mov
xchg
sub
sar
sahf
mov
adc
jns
ja
xchg
cmps
mov
push
fwait
scas
sbb
dec
cmc
push
adc
dec
sbb
fxch
sub
or
sub
(bad)
jmp
out
mov
ds
adc
lds
xlat
add
push
(bad)
xor
sbb
mov
xor
mov
es
pop
aaa
ret
mov
pop
pusha
fs
cld
es
inc
xor
fs
push
imul
or
aaa
shr
xchg
xchg
nop
lahf
out
gs
fild
je
jmp
jnp
sar
in
xchg
test
dec
repz
clc
data16
add
jecxz
call
test
popf
into
fmul
(bad)
pop
mov
in
aam
cmp
fidiv
pop
retf
loop
mov
out
cmp
sub
sbb
sub
pop
lea
mov
or
icebp
je
mov
inc
lds
xchg
sub
cmp
xchg
mov
out
and
out
(bad)
daa
fadd
int3
mov
inc
xchg
stc
pusha
push
fsubr
sub
int3
out
mov
and
ins
and
dec
mov
fbld
jle
lock
test
inc
jb
fisub
out
push
scas
imul
xchg
test
imul
mov
arpl
jge
rol
jmp
jge
cs
arpl
mov
adc
addr16
sbb
pushf
push
in
icebp
and
stc
or
mov
xor
dec
mov
pop
and
ds
xchg
enter
(bad)
(bad)
cmp
or
movs
in
jne
pop
xchg
cmp
fwait
xchg
add
jl
(bad)
cmp
int
adc
(bad)
retf
inc
mov
bound
xor
push
nop
push
lods
dec
stos
jo
jg
rol
leave
xor
jbe
mov
cmps
iret
fcomip
loopne
sti
lods
rol
inc
js
mov
loopne
scas
xor
addr16
enter
ficomp
in
fnstenv
mov
popf
je
lods
in
setg
xor
xlat
out
jecxz
sbb
out
pop
(bad)
stos
or
push
jecxz
adc
inc
sub
cli
lds
inc
adc
jno
(bad)
cmp
jns
mov
pop
xlat
movs
dec
ss
push
lods
imul
ins
inc
jl
cmps
scas
dec
cmp
jae
fsub
pop
ret
xchg
xor
pusha
mov
mov
je
mov
mov
dec
push
inc
jecxz
push
int
mov
rcr
xor
stos
mov
xor
and
jle
in
mov
les
fwait
jo
addr16
dec
les
push
dec
pop
xchg
push
imul
lea
js
out
mov
lods
pop
and
dec
xlat
and
mov
mov
inc
mov
mov
mov
xchg
sub
rol
lods
(bad)
out
fxch
shr
lea
adc
mov
sub
shl
mov
and
cmp
push
inc
xchg
mov
inc
fwait
test
push
nop
ja
inc
out
popf
pop
cmps
pop
je
leave
sbb
mov
xor
inc
ja
popa
mov
in
test
sub
not
jmp
in
in
mov
xchg
or
clc
jb
xor
sbb
push
cmps
cmc
int
retf
fwait
push
cmp
mov
lea
stos
enter
sbb
test
ins
mov
out
ds
add
jmp
adc
push
push
sub
in
inc
sub
fmul
ins
or
or
aas
and
push
mov
(bad)
(bad)
cmp
mov
pop
shl
out
bound
sub
add
pop
ret
mov
int3
leave
pusha
pop
icebp
pop
test
retf
gs
push
and
mov
jg
sbb
adc
mov
pop
sub
int
(bad)
add
mov
adc
pop
mov
fsubr
inc
add
mov
sbb
lods
loop
mov
ins
xchg
adc
sbb
loope
jo
inc
daa
mov
push
xor
mov
into
dec
fwait
dec
sti
adc
call
or
adc
movs
and
pop
sub
cmps
or
fwait
jmp
mov
dec
scas
adc
push
dec
mov
jae
xchg
outs
jo
imul
pop
out
repz
stos
call
repz
mov
dec
dec
xchg
xor
inc
ins
push
and
mov
mov
or
mov
xor
cmp
into
das
pusha
aad
lds
push
cdq
gs
std
mov
test
xchg
xor
mov
stc
sbb
push
js
(bad)
inc
sti
adc
dec
or
xor
cmp
inc
xchg
dec
push
jnp
scas
fnstsw
retf
fchs
movs
mov
test
sub
cwde
sbb
js
sahf
dec
repnz
stc
sbb
inc
ins
jl
or
mov
pop
shr
scas
pop
lds
pushf
sbb
sbb
iret
mov
(bad)
cli
fs
dec
mov
or
sub
push
cmp
jns
xchg
sub
cs
inc
call
das
jne
(bad)
sub
push
jae
add
jmp
pop
gs
or
in
shl
inc
iret
xchg
jmp
(bad)
fimul
sub
icebp
and
jp
mov
xchg
mov
pushf
lea
cmp
sysret
push
xchg
test
adc
xor
inc
hlt
clc
mov
push
or
sbb
sahf
(bad)
push
and
adc
addr16
xchg
jbe
mov
cdq
mov
jg
and
shl
add
shl
push
jbe
aas
int3
fisubr
xchg
cmp
cld
mov
mov
xchg
add
jge
ja
ins
mov
adc
fbld
xlat
mov
call
int3
adc
mov
cdq
test
sub
scas
push
and
inc
cmp
jb
sub
scas
inc
outs
mov
shl
mov
fcomp
xlat
add
das
push
dec
push
adc
cmp
sbb
rcr
mov
nop
pop
cli
push
int3
cld
test
adc
mov
jg
pop
mov
and
outs
jmp
pop
lods
std
mov
ins
fcomp
aam
jo
cmp
or
jbe
outs
aaa
sub
(bad)
pop
ins
xor
sbb
cwde
mov
xchg
push
adc
loope
test
setns
and
and
test
popa
(bad)
mov
fisubr
mov
jp
aad
lds
mov
cli
shr
mov
aas
in
and
mov
xchg
cmp
icebp
jg
repnz
jg
adc
outs
mov
adc
test
pop
ror
add
faddp
dec
mov
icebp
not
dec
and
adc
test
xchg
mov
add
neg
(bad)
jne
(bad)
jle
jg
inc
sub
bound
cld
lahf
xor
jns
ficomp
mov
or
mov
xchg
pop
call
int3
sub
jecxz
ja
add
loopne
sub
xchg
loopne
mov
add
adc
xor
fmulp
and
fcom
cdq
or
das
adc
call
sbb
dec
cmps
xor
pop
jp
ss
xlat
enter
and
pusha
outs
jge
(bad)
data16
dec
cdq
pop
push
add
retf
hlt
push
adc
adc
add
fnstcw
in
in
fsubr
push
adc
gs
sbb
mov
addr16
fs
jbe
add
push
sbb
jmp
sub
imul
mov
sub
rcr
outs
jnp
mov
cdq
mov
push
loop
jbe
inc
add
add
dec
and
js
dec
das
add
cmp
inc
cld
sti
or
sar
push
add
aas
cmp
outs
mov
test
jp
sub
dec
enter
mov
mov
push
cdq
daa
test
inc
push
mov
stos
xchg
jnp
cmc
sbb
adc
mov
test
mov
jno
sbb
mov
(bad)
out
add
ins
shl
sub
push
add
je
outs
mov
inc
imul
adc
sub
xchg
and
test
(bad)
fnstsw
nop
fsub
lea
cwde
out
imul
adc
adc
and
pop
sar
xlat
or
ret
and
fnstsw
stos
pop
bound
ins
rcr
sbb
and
lahf
out
rcl
shrd
push
add
lahf
pusha
mov
mov
mov
adc
sub
scas
popf
call
test
sub
(bad)
cld
sbb
mov
jge
ins
sub
or
shr
ret
bound
mov
movs
mov
fnstsw
in
mov
sbb
cld
xlat
jmp
mov
adc
ror
cmp
mov
inc
test
mov
lock
mov
cmps
clc
push
mov
movs
call
mov
xchg
bound
fs
(bad)
rol
ret
mov
imul
sbb
fcomip
xlat
and
or
(bad)
enter
sbb
xlat
jge
pop
or
ror
mov
jbe
out
mov
js
mov
and
out
xchg
add
cdq
mov
adc
cmp
imul
inc
movs
arpl
js
mov
inc
adc
mov
fistp
div
jg
int3
lea
ret
lods
pop
leave
mov
mov
push
hlt
add
cdq
imul
inc
and
inc
lock
cmp
xor
push
xchg
shl
push
call
pushf
lods
les
cmp
cdq
push
mov
fdiv
inc
xchg
int3
add
cwde
daa
call
adc
sub
jae
ret
jp
push
movs
pop
cmp
adc
jno
mov
call
mov
arpl
xor
mov
mov
adc
or
call
xchg
adc
fs
test
mov
sbb
out
bnd
inc
and
test
dec
arpl
jmp
push
shl
pop
mov
sub
or
shl
pop
xchg
cdq
imul
(bad)
push
lods
leave
mov
jnp
mov
xchg
mov
lock
lods
call
sub
(bad)
jmp
stos
sub
jmp
rcl
xor
jecxz
pop
int
in
ja
mov
outs
xchg
inc
pop
push
mov
adc
cmp
outs
mov
loop
mov
mov
inc
sbb
xchg
and
clc
mov
test
sahf
xor
mov
mov
int
cmp
push
arpl
in
jmp
dec
ficomp
popf
shl
gs
sub
out
clc
icebp
or
adc
and
in
std
inc
cdq
div
fstp
mov
hlt
fdivr
mov
pop
nop
add
test
test
arpl
stos
std
xor
out
adc
sbb
in
xchg
std
test
mov
stos
mov
sub
outs
and
inc
lods
in
call
inc
xlat
fst
and
dec
inc
or
add
test
retf
std
dec
pop
xchg
dec
jae
push
lods
loope
mov
scas
(bad)
mov
cli
mov
dec
js
inc
jmp
data16
mov
sbb
mov
cli
xchg
ss
aam
or
lods
retf
mov
fistp
dec
pop
jne
jecxz
or
fild
or
mov
or
pop
outs
sbb
jb
xor
test
xchg
iret
jle
add
xor
shl
ins
cmps
or
das
cwde
pop
pop
(bad)
xchg
popf
push
ins
xchg
es
push
xor
add
cwde
in
sbb
mov
fnsave
pop
mov
add
fmul
mov
pop
mov
inc
call
jg
mov
mov
(bad)
pop
std
jl
jns
test
pop
jbe
aas
sbb
outs
jns
arpl
cmp
loope
sti
hlt
mov
sub
cmp
nop
in
retf
retf
dec
addr16
add
mov
or
push
mov
scas
test
cs
jmp
lods
pop
and
jg
mov
jne
adc
dec
mov
push
idiv
add
shl
imul
adc
movs
dec
out
aaa
ins
cmps
add
dec
xor
sub
or
xor
push
(bad)
xor
(bad)
mov
cmc
lods
push
mov
jg
xor
movs
(bad)
inc
in
ffree
pop
retf
das
or
daa
out
mov
fcomp
cs
sbb
mov
stos
cmp
mov
test
sti
jle
and
push
inc
pop
out
adc
in
xor
imul
imul
xor
add
adc
adc
adc
popa
sar
leave
into
and
fmul
cwde
mov
sub
ret
(bad)
dec
sub
pop
jg
adc
pop
iret
int3
cld
lahf
pop
adc
out
pop
ins
sti
lods
sub
push
outs
push
cmp
test
aam
pop
push
leave
mov
lock
push
pusha
es
out
adc
inc
jns
sub
sub
lock
pop
and
jg
repnz
pop
mov
dec
pop
cmps
mov
mov
push
retf
stos
out
inc
sti
inc
mov
in
cmps
and
and
daa
jmp
or
sub
pop
nop
hlt
iret
icebp
das
nop
inc
or
ins
push
stc
and
cmp
jbe
sub
(bad)
loop
call
aad
mov
mov
cmp
pop
or
add
add
cli
mov
sbb
adc
shl
rcl
jo
jmp
or
ss
ss
jns
xor
and
lods
inc
add
sti
dec
mov
lea
sete
inc
dec
push
dec
js
pop
ret
xchg
add
into
or
lahf
push
and
lahf
mov
pop
push
sub
xlat
icebp
lahf
jmp
rcr
jmp
sbb
(bad)
xchg
mov
ins
shr
push
mov
(bad)
xchg
loopne
(bad)
fstp
dec
push
call
xor
adc
enter
add
enter
lods
sbb
add
call
test
xor
cwde
rcl
mov
jbe
shr
(bad)
adc
les
aas
das
add
retf
repz
or
dec
pop
cmp
jge
dec
cmp
mov
addr16
mov
ror
pop
in
jl
retf
adc
xchg
and
dec
mov
test
mov
stos
rcr
adc
and
les
adc
mov
inc
das
dec
inc
sub
push
pop
add
aas
lock
lods
call
ins
jmp
iret
xchg
test
and
sub
inc
and
or
mov
fnsave
add
into
stc
call
aad
in
or
mov
pop
ss
inc
xor
jb
cmp
inc
xchg
out
nop
jge
xor
mov
hlt
add
inc
jmp
cmp
mov
mov
mov
ja
inc
add
ins
push
or
push
jne
mov
ds
cli
jle
lock
stc
bound
loope
inc
jl
jl
push
xor
test
xlat
je
repnz
dec
ins
and
pop
(bad)
or
or
shr
push
aaa
mov
push
out
mov
or
fs
add
iret
stc
cld
call
mov
add
lods
cs
push
adc
iret
ret
xor
fnstcw
xchg
cmp
jecxz
push
pop
repz
inc
addr16
sar
push
and
mov
aad
inc
cmp
push
ficom
je
fidiv
iret
pop
xchg
cmp
jle
sbb
pop
push
cmp
loope
pop
sub
enter
in
mov
jecxz
jmp
retf
fadd
shl
mov
inc
mov
fst
add
add
pop
dec
add
fcom
mov
pop
add
push
and
cs
sahf
jecxz
pop
cmps
cmp
dec
add
imul
movs
(bad)
inc
jno
pop
xor
pop
xchg
or
ins
jns
push
xchg
iret
jecxz
bnd
xchg
adc
movs
mov
popf
or
ror
ins
cmc
shr
mov
cmp
loopne
jmp
pop
iret
sub
sub
aam
xlat
cmp
mov
fmulp
pop
fld
dec
shr
mov
push
sub
daa
add
in
ins
push
dec
xchg
xor
add
jg
dec
and
shl
fidiv
push
retf
scas
imul
mov
and
test
sub
scas
add
test
cdq
add
sub
imul
ins
cmc
sbb
and
pop
shl
mov
pop
int
dec
xchg
sub
fisub
scas
lock
xor
xor
arpl
push
fimul
lea
loopne
cmp
fnstcw
popf
pop
sub
xchg
jo
cmps
xchg
test
std
into
outs
add
sub
ficom
ds
cmc
or
daa
(bad)
lods
xchg
pop
add
xor
lods
and
jge
jnp
data16
(bad)
adc
shl
ret
xor
repnz
pushf
(bad)
(bad)
and
popa
cld
jmp
repz
shl
aad
adc
pop
(bad)
jmp
xchg
rol
push
hlt
loope
cwde
xor
dec
inc
fs
mov
out
adc
data16
inc
jp
push
fild
adc
popa
inc
int
fs
push
or
call
fistp
fmul
outs
out
mov
inc
mov
mov
xlat
pop
cmp
cld
push
test
sbb
push
xchg
jne
dec
(bad)
mov
not
push
dec
push
sub
mov
out
fucom
xor
inc
dec
cmp
or
cmp
xchg
sbb
push
push
mov
inc
xchg
ss
repnz
jmp
fdivr
mov
test
lds
mov
pop
add
xor
call
repz
inc
mov
dec
cdq
dec
les
jg
jp
sar
pop
dec
xor
loop
in
xchg
mov
test
inc
sub
lahf
rcr
test
in
shl
inc
mov
mov
sub
push
pop
adc
fild
xor
mov
inc
popf
lahf
addr16
ret
mov
je
xchg
sub
add
shr
mov
popa
xor
lea
lea
adc
shl
stc
nop
lahf
enter
mov
push
sbb
je
cli
pop
dec
shr
pop
cmps
or
repz
cli
cld
(bad)
push
ror
fcmovne
xor
pop
pop
lods
dec
loop
dec
fld
in
dec
and
imul
(bad)
mov
pop
cmp
cld
jp
jge
test
mov
push
inc
mov
mov
cmp
sub
mov
into
stc
movs
mov
fwait
loope
sub
push
enter
push
pop
push
inc
aam
mov
lea
cmp
lods
and
jecxz
mov
xor
leave
shl
cmps
push
in
xor
pop
jb
mov
div
dec
sub
(bad)
adc
nop
or
mov
test
push
push
push
fwait
stos
mov
mov
out
retf
not
xor
adc
int
cdq
out
sbb
and
or
pop
mov
in
into
xchg
dec
sbb
out
pop
mov
call
push
sbb
mov
leave
rcl
pop
xchg
xor
lock
mov
pop
sub
in
aaa
(bad)
jno
es
or
mov
inc
adc
mov
arpl
repnz
nop
cmp
adc
(bad)
pushf
xchg
push
push
add
rol
loop
pop
mov
mov
nop
or
xor
aad
fnsave
xor
xchg
fs
fist
inc
adc
inc
pop
lock
ret
push
sub
das
sub
(bad)
push
mov
mov
sub
loop
push
aas
ss
mov
bound
ins
mov
xchg
pushf
cli
xor
popf
mov
mov
out
mov
fnstenv
mov
push
adc
iret
pop
loopne
xchg
pop
add
data16
sar
sbb
mov
cmp
fnstcw
pop
daa
pop
push
or
jno
jb
mov
cwde
push
dec
ret
and
mov
es
(bad)
mov
or
xchg
push
pop
outs
mov
adc
cmp
or
ficomp
in
gs
pop
stos
lahf
jle
mov
add
dec
jno
cmp
add
and
xlat
cs
mov
cmp
pop
jnp
sub
adc
enter
aas
push
xor
cli
repz
adc
sbb
repz
jno
and
or
sti
push
pop
pop
cmp
sbb
lea
jge
shl
in
jecxz
lods
test
mov
push
daa
fldlg2
pop
mov
ins
pop
daa
mov
mov
sub
jmp
mov
inc
mov
stc
push
cwde
lock
or
cdq
pop
push
ret
pop
pusha
cdq
xor
js
clc
dec
sbb
push
cs
sbb
adc
hlt
xor
jp
xchg
jae
ret
int3
(bad)
xchg
adc
mov
out
mov
das
jb
adc
xchg
nop
inc
je
or
xchg
jno
jp
mov
push
pop
(bad)
inc
sub
daa
push
(bad)
dec
mov
inc
into
sahf
xchg
pop
dec
mov
adc
clc
sti
push
je
lock
loop
in
leave
fstp
popf
dec
pop
sub
push
inc
dec
ss
int3
mov
inc
xor
or
dec
test
mov
xor
inc
adc
dec
pop
push
cmp
sbb
imul
daa
js
pop
call
in
lds
add
addr16
ds
jmp
xchg
adc
sbb
adc
cs
lahf
dec
mov
inc
(bad)
(bad)
not
nop
jmp
addr16
sub
popa
cmp
jb
pop
fxch
ror
clc
xlat
sbb
aad
sahf
cmp
xor
les
push
adc
add
jp
jne
sub
xchg
jmp
sub
fild
arpl
inc
xor
je
aad
cmps
fcomi
push
iret
or
add
mov
mov
push
xor
pop
push
scas
xlat
shr
adc
jns
push
xchg
test
pop
(bad)
shr
xchg
arpl
jno
xchg
loop
cld
daa
or
sbb
mov
and
loopne
or
shl
and
(bad)
adc
and
inc
jp
repz
mov
pushf
and
loop
and
add
pusha
mov
icebp
push
sub
out
mov
mov
dec
xchg
in
add
jmp
xchg
daa
inc
inc
int
ja
(bad)
in
mov
mov
in
ret
adc
rcl
dec
pushw
jle
sub
add
xor
cmps
adc
ins
dec
js
pop
jo
push
push
cli
jle
dec
sbb
jbe
push
dec
inc
(bad)
(bad)
mov
(bad)
push
push
sub
fmul
mov
rol
fnsave
clc
(bad)
xor
ret
into
rol
test
shr
pop
xchg
enter
mov
jnp
or
ret
cmc
mov
add
or
xchg
xlat
dec
mul
xchg
icebp
mov
jae
and
sbb
enter
imul
repz
fsubr
adc
xor
push
adc
push
mov
inc
and
push
pop
and
jno
push
adc
cmp
add
leave
inc
clc
dec
rcr
mov
mov
movs
in
mov
dec
sub
pop
pusha
xor
jecxz
scas
jno
lahf
inc
iret
aaa
shl
add
xchg
test
ss
dec
(bad)
shl
imul
cwde
push
dec
add
imul
jo
jns
add
fnstsw
arpl
test
retf
leave
sbb
(bad)
mov
xchg
repnz
scas
mov
and
adc
or
shl
in
lods
shl
or
ins
lahf
aad
pop
and
sbb
xor
sub
mov
movs
sub
inc
fstp
jae
test
add
mov
jl
fadd
and
cmp
std
dec
xchg
iret
imul
mov
(bad)
cmc
xor
and
mov
and
hlt
lods
jge
jae
stos
(bad)
int3
or
push
imul
inc
xchg
repnz
or
jg
(bad)
mov
cmp
xchg
mov
and
out
das
sbb
dec
movs
sub
mov
leave
(bad)
mov
cmovle
pop
icebp
sahf
mov
ss
imul
jo
outs
sub
lock
pop
sbb
in
shl
cmp
(bad)
repnz
mov
stos
xor
shl
push
jnp
in
sti
add
xor
movs
cmps
ret
jno
mov
mov
mov
xchg
neg
imul
jae
mov
jmp
push
and
arpl
sar
adc
rol
in
push
xor
lea
ss
push
push
es
jno
in
mov
push
sub
jno
sub
push
xchg
mov
(bad)
lock
cmp
xchg
movs
sbb
and
stos
fnstenv
call
jmp
loopne
xchg
push
das
dec
(bad)
fimul
pop
lahf
jmp
ins
inc
test
pop
outs
rcr
add
out
loop
mov
xchg
and
and
je
and
or
pop
call
pop
jb
aas
clc
mov
retf
or
and
xor
sub
scas
aas
xor
fdivr
adc
xchg
rcl
adc
je
std
mov
pop
pop
inc
pop
sar
loopne
shr
xor
jecxz
inc
pop
call
fist
out
shr
and
inc
shl
adc
jae
test
inc
sti
shl
(bad)
inc
fdivr
cli
clc
xchg
fcos
sbb
xchg
push
in
mov
dec
int3
popa
icebp
repnz
ret
mov
leave
in
add
mov
jo
pop
mov
lahf
sub
(bad)
sbb
test
leave
jle
cmp
mov
mov
cdq
ins
mov
cmp
test
lods
sbb
inc
xor
xor
push
lods
out
test
pop
icebp
pop
push
fwait
mov
mov
adc
pop
addr16
into
addr16
std
adc
cdq
mov
jne
xchg
ud2
sti
pop
loopne
pop
in
pop
movs
sub
mov
sbb
dec
imul
mov
call
enter
fisttp
jge
mov
or
xor
mov
ins
imul
(bad)
pop
in
inc
mov
push
inc
push
sbb
sub
mov
fnstcw
adc
cmc
or
test
push
lods
jmp
mov
xor
fisttp
sub
and
cmps
xchg
mov
in
mov
add
loope
mov
or
adc
or
adc
(bad)
in
call
aaa
jecxz
idiv
imul
mov
mov
dec
cmp
fist
adc
repz
mov
out
std
out
xchg
ds
add
mov
out
mov
mov
mov
jo
xchg
mov
add
stc
dec
inc
retf
and
jmp
mov
pop
or
jmp
xor
mov
jne
sbb
xchg
dec
(bad)
mov
nop
adc
xor
mov
sub
fcomp
push
mov
js
shl
adc
repz
add
push
pop
xchg
jle
wbinvd
add
jns
cmps
cmp
into
mov
sub
mov
ja
mov
fwait
adc
imul
push
adc
ins
or
cs
mov
dec
jecxz
nop
iret
test
dec
call
out
dec
setno
cmps
sbb
rol
or
add
cmp
lds
bound
and
idiv
or
cmp
aad
and
bnd
jmp
add
add
pop
(bad)
jecxz
add
int3
(bad)
imul
imul
sbb
lds
mov
sahf
les
inc
pusha
std
(bad)
jmp
sub
sbb
arpl
aam
jp
scas
mov
xor
shl
and
cs
icebp
mov
lea
inc
bound
fcmovb
push
add
lea
sti
jmp
mov
ds
test
add
imul
cli
pop
xor
push
or
inc
out
mov
das
jbe
arpl
lods
lods
or
cmp
mov
dec
push
out
jp
ficom
mov
mov
pushf
call
mov
push
popf
mov
jns
stos
and
into
stos
pop
xchg
jle
jecxz
add
fwait
vfrczpd
cmp
in
es
in
inc
mov
sti
loopne
jae
push
les
mov
cmp
jle
adc
jo
shl
mov
sbb
pop
mov
jae
int
pop
out
sti
stc
cwde
cmp
test
sbb
loope
mov
dec
iret
mov
inc
mov
or
fdiv
cmps
fcom
mov
jge
jecxz
sub
sbb
ret
stos
loope
or
jp
fcom
inc
fs
xor
call
xor
in
inc
cmc
lods
or
jecxz
sub
xor
gs
(bad)
xor
dec
sub
inc
or
push
pop
fnstsw
int
retf
jecxz
cmp
arpl
test
and
popf
bound
shld
cmp
stos
mov
mov
pop
jae
add
div
test
leave
rcl
sti
mov
xor
sar
mov
or
xor
adc
adc
xchg
add
dec
push
cs
ror
push
cmp
(bad)
retf
sbb
inc
inc
mov
cmps
dec
and
ds
and
push
cwde
sub
jp
das
mov
call
(bad)
jae
test
xchg
fld
mov
adc
mov
scas
cmp
jge
imul
xchg
lods
sbb
inc
je
icebp
cmp
xchg
cli
pop
loop
out
xor
xor
ret
(bad)
retf
scas
mov
mov
addr16
iret
jecxz
add
mov
adc
xor
pop
xlat
fistp
cmp
xchg
es
jbe
cmp
jb
xor
cdq
fsub
sub
retf
mov
cmps
xchg
push
out
sbb
cli
jmp
cmp
loop
cwde
repnz
icebp
das
cmps
pop
and
jecxz
mov
pop
jno
icebp
es
jl
inc
inc
inc
lea
xor
xlat
cmp
mov
(bad)
mov
xchg
fcom
xchg
push
cmp
and
dec
int3
mov
mov
push
cmc
sbb
jne
add
push
dec
lods
jle
pusha
or
pop
popa
inc
ficomp
cmp
out
popf
stos
push
jb
jge
mov
xchg
sbb
xchg
mov
cmp
mov
js
(bad)
inc
je
mov
or
mov
and
mov
or
cwde
popa
cld
or
mov
sbb
adc
inc
and
pop
mov
mov
inc
js
aam
test
pop
mov
or
mul
xchg
jp
cs
push
and
mov
mov
and
pusha
cdq
jl
sub
mov
es
es
jg
and
jnp
mov
mov
pop
sbb
ja
cmp
ret
out
inc
arpl
dec
pop
xor
sbb
(bad)
loop
and
popf
cld
cdq
mov
in
(bad)
sbb
dec
ret
mov
dec
cmp
push
cmc
fistp
fsub
popf
enter
ds
movs
imul
repz
mov
iret
fcmovne
pop
fidiv
retf
add
test
jl
and
pop
repz
and
fs
(bad)
icebp
jo
add
cmp
pop
cmp
lahf
dec
dec
icebp
les
(bad)
clc
sahf
xlat
jns
add
and
inc
jecxz
repnz
repz
dec
popf
out
aad
jnp
lods
mov
(bad)
pusha
xchg
jmp
mov
(bad)
es
(bad)
push
nop
pop
xchg
jg
aam
fwait
xor
and
push
test
dec
mov
push
mov
(bad)
test
sbb
pop
or
or
fs
sub
jmp
pop
and
or
mov
or
pop
aam
adc
test
scas
dec
ds
sbb
int
jo
into
movs
and
mov
lock
push
xor
dec
out
les
mov
sbb
xor
into
in
inc
inc
lds
pop
push
pop
push
lods
lea
push
lods
xchg
mov
aas
sub
push
iret
mov
fcmovb
movs
in
lock
xor
push
push
arpl
xchg
into
arpl
sub
js
mov
cmp
jb
ret
add
dec
xchg
sub
xor
outs
push
or
xor
lods
mov
aam
dec
sub
xchg
gs
outs
dec
ficom
adc
mov
fdivr
and
int3
scas
loope
shl
cmp
ficomp
xchg
mov
movs
mov
xchg
jns
test
loop
std
test
out
mov
icebp
fild
lahf
cmp
mov
ss
pop
and
lock
jne
(bad)
jmp
stc
iret
and
xor
inc
pop
sbb
js
in
sub
xor
rcl
popf
mov
jmp
push
sub
push
add
xor
dec
mov
mov
push
mov
ins
jne
nop
cwde
jbe
jle
mov
dec
imul
inc
sub
daa
cdq
or
jno
out
std
xchg
jmp
arpl
push
inc
jge
pop
aas
inc
jp
mov
xchg
or
out
push
test
enter
lods
sub
jl
hlt
adc
stos
repnz
sub
jge
out
jmp
push
in
sbb
fsub
in
jle
pop
push
jmp
xchg
xchg
xor
sub
push
push
cmps
push
or
(bad)
sbb
arpl
xchg
fdiv
fisttp
or
mul
popa
jbe
cld
push
or
daa
repnz
lds
jbe
dec
fst
sbb
(bad)
cmc
cmc
or
popf
xor
rcr
out
jae
test
adc
outs
inc
(bad)
xchg
sub
(bad)
ror
adc
stos
ins
adc
xor
pop
stos
mov
and
imul
jl
jecxz
mov
pop
or
loop
push
adc
mov
inc
and
xchg
adc
adc
jl
cmps
mov
inc
and
dec
lds
pop
aas
push
nop
stos
sbb
stos
cmp
adc
ins
mov
inc
jo
sub
push
push
(bad)
cwde
cmps
add
rcl
into
fistp
and
mov
pop
jg
inc
or
add
shr
jae
sub
mov
(bad)
xchg
popa
jl
inc
out
jmp
fstp
dec
push
fnsave
cli
push
cli
add
cmp
jns
xchg
sub
pop
xor
push
fmulp
test
jns
xor
push
add
ins
inc
adc
lea
js
xchg
mov
clc
sbb
stos
addr16
jg
cwde
es
icebp
cwde
iret
dec
scas
mov
icebp
test
lds
daa
xchg
ret
sbb
mov
add
adc
popf
sbb
mov
cwde
dec
aam
test
push
jbe
add
inc
mov
mov
loopne
push
lock
or
(bad)
dec
jbe
lods
xor
ror
pop
adc
ins
popf
xor
test
lods
lods
and
mov
push
sahf
dec
test
pop
aad
adc
lahf
daa
mov
inc
cld
aam
adc
jmp
mov
inc
jmp
call
repnz
test
adc
add
mov
stos
lods
add
in
mov
jl
in
data16
and
cmp
cmp
sub
xchg
mov
jecxz
jp
lock
push
arpl
dec
lahf
std
imul
cs
and
cli
in
in
adc
mov
cmp
out
ss
xchg
popf
fiadd
pop
push
push
js
sub
out
loop
loopne
xor
in
aad
inc
fsubr
out
jb
push
dec
push
pop
out
pop
pusha
adc
ret
jp
je
shl
sub
or
jge
xlat
test
jbe
fwait
popa
movq
add
aaa
cmps
mov
and
icebp
retf
mov
push
mov
rol
cmp
cmps
inc
adc
sti
les
add
push
sub
into
cmp
sbb
mov
dec
into
mov
inc
fld
stos
push
mov
adc
popf
jmp
mov
adc
and
sahf
mov
test
das
(bad)
xlat
mov
push
mov
sub
test
ss
gs
mov
pop
(bad)
call
sar
addr16
lods
jnp
loopne
lods
fnstenv
jmp
xchg
sub
dec
cld
and
inc
jnp
mov
rcr
dec
inc
sub
xchg
fwait
mov
or
(bad)
(bad)
in
cmp
mov
sahf
das
pop
fwait
sub
cmp
dec
call
retf
imul
push
mov
sub
push
not
shl
push
push
dec
pop
mov
cmp
lock
sbb
lds
adc
xor
xor
ss
(bad)
jge
daa
cmp
mov
cdq
sub
inc
adc
ins
mov
mov
xchg
lea
cmp
cmc
cwde
inc
mov
fmul
pop
clc
aam
rcr
(bad)
mov
icebp
ja
out
and
push
fprem1
cmp
rcl
imul
outs
shl
dec
sbb
adc
and
pop
lods
cmp
push
es
jecxz
into
push
ss
mov
mov
fsubr
push
fs
call
sub
mov
cmps
push
inc
jno
pop
pop
lods
add
push
or
fs
jge
inc
mov
(bad)
aaa
adc
rcr
pusha
push
add
xchg
fnsave
loopne
mov
or
dec
pop
xchg
cmp
(bad)
dec
fadd
lea
or
pop
jg
int
sbb
(bad)
pop
pop
sbb
aaa
mov
mov
lahf
mov
rcr
or
xchg
out
(bad)
clc
movs
mov
bound
pop
cmp
inc
retf
sar
inc
xor
jae
mov
das
pop
mov
mov
xchg
mul
std
fcmovnu
adc
(bad)
jbe
popf
lock
mov
mov
cld
jae
push
mov
call
call
ss
sbb
xchg
mov
mov
jmp
push
retf
lock
std
jmp
jmp
add
ficom
test
add
outs
pop
aaa
in
arpl
sub
pop
test
push
inc
mov
mov
sbb
adc
xor
mov
mov
cmps
je
mov
das
pop
ret
dec
ins
repnz
push
enter
sahf
pop
pop
push
sbb
rol
pop
fdivr
fiadd
bound
ret
mov
cmp
jns
fiadd
xlat
jg
std
xchg
imul
pop
loop
jmp
aad
retf
outs
das
xor
rcl
outs
in
mov
gs
push
adc
mov
cld
inc
mov
shl
xchg
ret
call
pop
jns
add
add
sbb
adc
das
out
dec
push
gs
push
sbb
ins
xchg
push
xchg
push
ja
cmova
ror
test
popa
dec
(bad)
sbb
sub
aad
and
add
js
or
jb
stos
jge
and
stos
iret
lock
ins
test
outs
fs
mov
jne
aad
mov
mov
pop
jle
(bad)
das
mov
adc
jno
inc
mov
pop
add
pop
ret
inc
test
inc
stos
out
(bad)
sbb
adc
mov
pop
add
(bad)
and
xchg
xlat
mov
aaa
and
mov
jge
mov
test
call
inc
lods
jae
add
sub
pop
test
clc
dec
sub
dec
dec
mov
sbb
inc
pushf
push
std
sbb
(bad)
lock
jp
mov
imul
ret
mov
fwait
popf
push
adc
pushf
hlt
sahf
sub
push
dec
cmp
aaa
pop
mul
pop
xchg
push
sbb
test
push
sub
sub
jb
inc
mov
fimul
rol
sahf
int3
mov
sub
sub
and
test
jne
jle
adc
push
into
mov
add
mov
dec
imul
push
ror
into
and
cmp
dec
or
xor
mov
adc
xchg
in
and
xor
js
addr16
lods
xchg
mov
adc
fisub
pop
scas
xchg
add
mov
push
mov
or
mov
mov
pop
into
xchg
jle
in
or
mov
sub
mov
inc
fwait
cdq
aam
or
xchg
adc
xchg
mov
imul
data16
stos
inc
in
sbb
xor
push
scas
scas
stos
lds
fdivr
jne
sar
jmp
lods
hlt
mov
push
mov
sti
xchg
or
cmp
int
into
jge
rcl
or
lds
cmp
loope
mov
push
or
ins
and
aam
and
repnz
xor
dec
outs
mov
in
and
jns
adc
shl
push
pop
dec
inc
fsub
xor
(bad)
xchg
add
fst
lods
test
adc
ret
sub
aam
push
retf
adc
test
clc
jecxz
dec
cs
in
pop
pop
in
call
add
call
test
test
movs
fstp
pop
or
cdq
jns
jg
test
lea
gs
dec
out
xor
aas
or
inc
xchg
sbb
mov
loopne
sti
nop
jecxz
push
mov
aas
cmp
dec
jbe
xchg
mov
retf
rcl
or
mov
adc
pop
ret
or
bswap
sbb
push
stos
pop
cdq
ins
aam
mov
int
dec
mov
or
inc
jno
sub
jo
mov
inc
shl
sbb
adc
ds
push
popf
ficom
outs
xchg
mov
mov
or
mov
cmps
pop
(bad)
int
and
ret
(bad)
out
or
pop
jne
stc
ja
hlt
inc
adc
xchg
add
test
push
push
cs
test
pop
stos
push
inc
adc
(bad)
push
scas
in
mov
rol
iret
fist
jmp
jmp
push
mov
add
out
inc
and
leave
dec
outs
inc
iret
inc
movs
sub
cli
jle
cmps
les
cmp
xor
cmps
pop
sbb
or
fimul
push
int
(bad)
fisubr
movs
mov
popf
imul
cdq
sbb
and
sti
mov
repnz
mov
or
test
mov
xchg
rol
dec
out
adc
(bad)
clc
sti
pop
shl
jne
ret
jb
(bad)
pop
push
xchg
add
rol
jp
jo
imul
icebp
dec
(bad)
sbb
aam
xor
out
std
push
(bad)
mov
sbb
bound
sbb
ret
inc
test
adc
std
mov
por
idiv
ja
(bad)
mov
dec
add
dec
jnp
aad
rol
add
mov
mov
sti
xor
popf
mov
cmps
jp
pop
cmp
inc
retf
imul
out
inc
ss
sbb
adc
shl
pop
add
push
adc
enter
lea
cmp
shr
mov
imul
mov
lea
jns
es
or
mov
ja
mov
jae
retf
hlt
adc
sub
mov
dec
xor
fwait
xlat
std
scas
dec
aas
xchg
or
dec
mov
adc
pop
mov
(bad)
dec
test
xlat
mov
and
jl
mov
sar
pop
dec
imul
xor
sub
and
dec
ss
xchg
xchg
mov
in
(bad)
mov
xchg
cwde
push
mov
ins
or
retf
sahf
mov
mov
sbb
dec
mov
mov
cmc
outs
mov
or
ret
das
push
or
pop
imul
retf
or
sbb
sbb
sub
fistp
and
sbb
sar
push
vpsadbw
adc
mov
xor
lahf
jnp
pop
test
in
sbb
ror
pop
sub
jmp
cmp
ror
mov
ret
popa
retf
cmp
xor
pop
adc
mov
(bad)
mov
pushf
cld
push
adc
sbb
test
lods
push
adc
mov
inc
loope
retf
(bad)
rol
idiv
or
cmc
mov
rsm
cmp
mov
inc
xchg
pop
mov
push
cld
push
inc
sbb
sar
dec
add
or
fptan
sbb
push
push
adc
cmp
inc
lods
sbb
pop
clc
cmc
jae
mov
ja
xchg
inc
stos
add
jno
cmp
mov
add
pop
or
sub
je
mov
cmp
rol
push
test
sahf
push
push
jne
dec
cmp
mov
adc
out
dec
lds
clc
push
fnstsw
jne
and
fistp
cmp
stc
xor
sub
mov
jl
pop
nop
mov
popa
outs
in
jb
int3
push
into
ins
mov
retf
mov
out
adc
mov
ja
sbb
jb
inc
out
inc
mov
and
and
fdiv
retf
jae
gs
sbb
pop
cmp
and
inc
movs
out
push
cmp
push
xor
jl
inc
out
hlt
das
rcl
push
xchg
(bad)
fistp
mov
mov
mov
xor
ss
xchg
xchg
mov
pushf
sar
stos
in
add
xor
cmc
das
push
sub
push
dec
scas
imul
cmp
pop
add
test
mov
inc
repnz
dec
hlt
cmp
lds
pop
js
adc
loop
cmp
int
sub
inc
outs
mov
scas
and
push
std
sub
sub
add
xchg
dec
(bad)
sti
mov
je
sbb
and
jecxz
lea
sub
(bad)
cld
cmp
and
or
daa
leave
and
sti
jbe
aas
adc
mov
int3
add
(bad)
fstp
push
(bad)
rcl
add
jne
cmps
cmp
loop
jae
popf
lods
fdivp
push
jo
xchg
ins
pushf
push
mov
sub
loopne
inc
jg
scas
popf
hlt
fisttp
inc
cmp
xchg
and
shl
mov
mov
dec
mov
or
pop
shr
pop
lods
add
or
shl
dec
mov
dec
cmp
dec
or
aad
xchg
inc
out
xor
sub
sti
adc
repnz
lods
sub
pop
mov
add
dec
xchg
mov
das
add
jno
push
add
ret
aam
xor
mov
imul
fbstp
(bad)
pop
lahf
ins
xchg
ror
sbb
xchg
jb
mov
out
adc
fmul
or
dec
pop
adc
popf
fsincos
test
lods
(bad)
fidiv
pop
pop
ins
outs
(bad)
retf
dec
and
jno
mov
dec
pushw
jo
aad
scas
mov
adc
sbb
cdq
repz
ja
pop
cli
add
jbe
repz
dec
pop
jg
dec
dec
bound
scas
inc
cmp
test
jnp
les
cmc
dec
sbb
xchg
jp
sbb
pop
and
mov
add
cmp
aam
xchg
or
xor
xor
fwait
in
jne
cwde
or
scas
enter
add
cmc
and
test
cli
in
jmp
in
and
test
fst
ds
fwait
pop
mov
push
imul
and
sub
arpl
push
push
cmp
ret
mov
popa
(bad)
xlat
out
in
mov
outs
sub
sub
pop
sti
xchg
(bad)
repnz
inc
(bad)
rcl
sub
push
loopne
lods
cmp
mov
mov
out
fild
ja
add
push
data16
mov
push
fimul
cmp
adc
outs
dec
ins
cld
xor
ficom
fld1
add
push
fld
cmp
stos
out
or
push
or
dec
inc
aad
mov
stc
ret
xlat
aad
pop
mov
xor
jb
fisubr
repnz
dec
or
jg
je
and
cmp
inc
mov
mov
mov
and
fadd
ret
cmp
adc
scas
stc
hlt
jg
xor
into
pop
sbb
or
adc
mov
ret
out
sbb
out
out
mov
jmp
or
rcr
sub
push
mov
dec
push
repz
or
jge
dec
aam
add
push
stos
xchg
setae
movs
repnz
xor
shr
fbstp
mov
or
xor
push
aam
cmp
bound
loope
mov
xchg
loopne
int3
cwde
adc
pop
xchg
ret
test
add
cld
adc
mov
jns
mov
jo
sub
ins
inc
add
dec
sub
mov
xchg
popf
and
cmp
clc
and
clc
dec
adc
cs
fnstcw
out
push
push
sub
or
pop
pusha
int
jge
mov
ins
add
push
push
ins
in
pop
pop
cmp
fcomp
cmps
jp
mov
clc
jmp
add
push
lods
cmc
jp
mov
call
cmps
and
jae
sub
jae
movzx
mov
ds
iret
jge
scas
out
mov
or
mov
mov
adc
dec
retf
mov
fadd
mov
push
sti
aas
es
jl
es
xor
movs
call
pop
stos
imul
scas
inc
adc
push
jns
dec
pop
dec
pop
dec
sub
add
test
jbe
ss
gs
gs
in
adc
dec
push
and
imul
mov
sahf
clc
fucomip
test
mov
push
je
loop
bound
mov
xchg
or
call
fwait
(bad)
cli
cmp
out
dec
ret
jno
or
movs
adc
ins
mov
jecxz
pushf
sbb
gs
sahf
imul
lea
xor
and
sub
jns
fsubr
clc
lock
cmp
or
push
neg
mov
cmp
fsubp
sbb
jmp
xor
push
mov
or
add
pop
jl
mov
or
lock
cmps
jl
jecxz
xchg
push
bound
mov
mov
out
test
(bad)
retf
dec
in
xchg
mov
cmps
push
dec
mov
pop
inc
test
mov
mov
cmp
mov
pop
stc
in
shl
cmps
push
jmp
mov
hlt
out
call
cmp
pop
jecxz
add
sub
add
addr16
lds
push
out
cmp
sbb
les
cli
xchg
out
cmp
aam
icebp
pop
or
fld
and
and
dec
pop
and
adc
jo
mov
(bad)
in
mov
fidiv
nop
sub
unpcklps
aas
xchg
mov
jle
pop
inc
mov
add
jbe
mov
and
and
xlat
out
das
(bad)
push
int
mov
and
xor
scas
fdivr
sbb
das
or
xchg
stc
test
mov
int3
sub
sub
mov
add
lods
pop
dec
mov
jmp
xor
les
mov
or
dec
daa
das
adc
add
lahf
pop
and
pop
xlat
inc
mov
sub
je
lds
adc
mov
xor
popf
icebp
ss
dec
add
inc
and
xchg
or
out
fsubr
je
mov
mov
gs
(bad)
ins
mov
mov
mov
or
int3
(bad)
clc
adc
gs
repz
sti
popf
push
ror
sbb
xor
xor
sub
adc
mov
pop
dec
adc
add
movs
bound
push
in
(bad)
mov
or
push
cdq
ret
pop
ror
pop
mov
(bad)
jo
cld
add
prefetch
(bad)
push
inc
ja
jb
jecxz
jns
xchg
cli
fist
test
pushw
and
sub
mov
sbb
in
aaa
test
ret
mov
rcl
cli
cdq
rcl
ins
push
and
das
popa
push
neg
out
stos
add
inc
mov
(bad)
rcr
scas
inc
lea
rol
stos
outs
bound
test
adc
aas
inc
inc
std
sub
les
or
mov
fdivr
adc
sbb
fwait
add
or
or
addr16
data16
pop
xchg
idiv
(bad)
mov
pop
rcr
sar
mov
jmp
movs
cwde
retf
pop
inc
movs
dec
lock
movs
or
xor
and
pop
fdivr
pop
cs
stc
and
sbb
nop
ja
adc
add
xor
sub
mov
push
fsin
call
sbb
inc
in
push
mov
sub
pop
sbb
push
leave
cmp
ror
ja
arpl
pop
outs
push
leave
cli
es
dec
clc
les
gs
pop
fidiv
in
cmp
fidivr
in
pop
mov
(bad)
sahf
mov
sbb
sub
aad
push
test
std
loopne
sahf
or
cmp
pop
bound
cdq
push
dec
aaa
inc
ja
mov
jge
jb
adc
test
test
mov
shr
bnd
aas
cmp
das
or
xor
lea
fs
xchg
mov
xchg
(bad)
cdq
cmp
into
pop
dec
mov
stc
cmp
fwait
retf
retf
mov
cmc
and
test
sub
xchg
in
fidiv
movs
or
or
and
scas
xor
cmp
les
xor
cmp
call
arpl
jmp
jp
cdq
xchg
mov
aas
push
pop
sbb
test
mov
fmul
mov
pushf
cmp
sbb
pop
scas
loop
cmps
call
xor
(bad)
mov
mov
inc
test
add
enter
add
in
aad
shl
hlt
fwait
or
out
and
push
jb
fild
and
adc
popf
scas
or
jnp
sti
xchg
cmp
pop
imul
lods
pop
iret
sbb
ds
movs
mov
push
pop
jp
add
mov
xlat
cli
outs
movs
jl
lods
dec
jne
pop
outs
sub
jecxz
inc
or
mov
lea
movs
aam
ins
xlat
mov
jo
push
cmp
and
inc
ins
repnz
nop
adc
xor
xchg
cmp
jg
sub
xor
and
ret
dec
push
dec
addr16
aas
mov
fdivr
pop
js
push
dec
lods
push
pop
dec
jle
sub
ss
out
mov
fs
scas
ins
jnp
or
mov
cmp
test
test
or
cmp
inc
mov
iret
fimul
movs
mov
daa
adc
das
push
dec
aam
call
cwde
inc
sub
inc
outs
movs
mov
hlt
pop
sub
mov
int3
loop
cmps
sbb
adc
jne
or
or
add
sbb
pop
imul
pop
fsubr
fidivr
das
xchg
and
fs
enter
push
dec
retf
and
jl
iret
push
cmp
push
push
xchg
mov
dec
and
xlat
and
xor
mov
aam
xor
push
into
lods
call
dec
enter
out
test
adc
sbb
xor
or
cmp
cmp
jl
push
push
lods
leave
idiv
jmp
bound
mov
out
mov
mov
mov
sbb
lock
add
xor
stos
inc
pop
outs
repnz
mov
cmp
rol
add
add
sub
(bad)
repnz
in
add
sbb
loop
mov
mov
cli
ja
cmp
int
or
push
push
enter
pushf
arpl
movs
cdq
or
bnd
cld
inc
out
xor
hlt
xchg
sub
xchg
mov
(bad)
or
outs
or
fs
adc
stos
mov
leave
stos
xor
rol
xchg
(bad)
stos
leave
aam
retf
push
fadd
or
out
push
push
ficomp
xor
and
jo
call
jg
aaa
mov
mov
loope
aas
pop
mov
daa
mov
call
mov
or
fsub
jle
mov
inc
fidivr
add
in
call
pop
aam
fstp
mov
iret
sbb
dec
jnp
xor
sub
jns
jg
in
scas
jno
lock
test
dec
not
in
or
jno
xchg
jg
mov
mov
fcomp
inc
scas
in
push
mov
je
pop
je
imul
movs
in
sbb
inc
inc
xchg
sbb
leave
clc
shl
pop
mov
sub
cmps
jae
movs
push
js
mov
pop
push
fist
add
dec
inc
push
mov
jno
scas
dec
push
push
repz
movs
lods
add
cli
jmp
stc
sahf
ret
test
out
sub
mov
and
(bad)
loop
not
or
mov
mov
dec
rol
test
outs
mov
inc
imul
push
add
movs
adc
inc
out
sub
adc
add
and
lock
dec
(bad)
ror
ret
lock
sbb
add
pop
pop
std
add
rol
shr
lds
sar
aam
adc
retf
cmp
mov
dec
add
cmp
pop
push
ss
hlt
push
iret
into
and
inc
fwait
mov
in
add
fimul
sbb
jle
mov
add
inc
cmps
rcl
xchg
cmc
arpl
test
xor
aam
test
outs
lds
aas
xor
xchg
push
xchg
out
mov
mov
dec
fstp
(bad)
pop
xchg
arpl
jp
mov
xor
xor
(bad)
cmp
dec
aas
mov
cmp
mov
pop
mov
stos
ret
mov
lods
and
add
inc
push
add
js
retf
stos
fs
mov
cwde
(bad)
test
and
cld
pop
adc
movs
out
int3
dec
and
mov
test
adc
add
aas
call
test
mov
xchg
int3
js
inc
test
popa
mov
adc
pushf
jl
sub
or
mov
ds
push
mov
jmp
inc
sbb
push
pop
lahf
jbe
mov
daa
pop
push
fucomip
push
gs
(bad)
push
fadd
ja
add
add
mov
mov
lea
cmps
mov
js
add
push
cmp
inc
xchg
test
mov
pop
test
jo
cmps
sbb
test
rcl
mov
inc
div
jge
test
nop
or
mov
adc
cwde
fdiv
or
and
inc
cmp
mov
add
cmp
sbb
aas
fadd
nop
jb
rcr
push
and
jb
and
xor
fild
mov
lahf
add
sbb
in
mov
xchg
push
dec
fist
das
lds
jb
imul
pop
std
add
out
pop
data16
fs
jb
bnd
jmp
jmp
ins
adc
or
pop
xor
cmp
ja
clc
mov
out
shr
mov
cs
jno
sbb
div
cmps
repz
sub
sub
mov
and
arpl
push
mov
dec
ja
xor
sub
jl
pop
(bad)
jge
sub
jmp
jne
push
adc
xchg
xor
mov
jge
inc
popf
mov
pop
bound
in
rcl
daa
out
jp
dec
pop
mov
scas
xchg
ins
enter
cmps
fucom
sbb
ds
sar
scas
xchg
mov
fcom
and
aas
cmp
jl
jl
rol
push
(bad)
mov
pop
mov
lahf
and
shl
sbb
cdq
mov
arpl
pop
dec
jae
and
int3
pop
es
jnp
jp
es
dec
adc
lock
out
(bad)
xlat
imul
jb
aaa
xchg
inc
imul
mov
add
xchg
mov
jns
ss
add
adc
cwde
cwde
hlt
jmp
movntps
and
lds
lahf
push
sub
push
adc
fistp
imul
ret
or
pop
xchg
sub
mov
lods
ins
js
push
aaa
add
mov
or
fstp
sub
mov
mov
cmp
push
mov
add
mov
adc
sbb
daa
xchg
cld
and
sub
cwde
leave
inc
call
sbb
mov
sbb
add
inc
inc
clc
add
lea
pop
add
maskmovq
mul
and
fld
imul
lods
das
xchg
jge
adc
push
ror
es
test
xchg
xlat
sbb
daa
(bad)
and
xor
inc
mov
add
popa
es
cmp
mov
pop
jge
rcl
popf
push
call
pop
mov
and
pop
(bad)
jns
in
ja
or
push
mov
int
sbb
lds
jmp
pmaxub
(bad)
loope
jle
dec
add
pop
sbb
lahf
pushf
fnstenv
ret
fld
das
jle
pop
je
ret
nop
mov
and
cmp
pop
xchg
leave
sub
xchg
loop
xchg
or
pusha
cmp
jge
outs
test
add
sbb
pop
cmp
test
push
add
enter
bound
jbe
int
js
mov
repnz
and
arpl
or
jge
arpl
cld
test
inc
das
and
movlhps
or
mov
cmps
cmp
(bad)
scas
mov
pusha
adc
dec
popf
sar
jmp
mov
xchg
pop
aad
jns
imul
jae
mov
cmp
sbb
pusha
add
loop
and
jle
add
nop
mov
mov
cmp
push
in
jbe
loop
sbb
fmul
mov
or
sub
xor
mov
loop
pusha
cmp
xchg
(bad)
les
rol
jnp
push
in
or
pop
pop
mov
adc
movs
jle
pusha
pop
(bad)
xchg
dec
imul
call
mov
sbb
(bad)
test
push
mov
cmp
adc
dec
push
xchg
hlt
and
lds
jecxz
icebp
outs
or
data16
mov
cli
jle
mov
out
or
dec
ret
les
loop
outs
data16
ja
gs
rol
push
in
xchg
xchg
inc
cwde
or
and
pop
jmp
test
push
mov
fistp
es
push
leave
adc
hlt
(bad)
pop
mov
ror
inc
jmp
movs
or
js
addr16
movs
sub
cli
js
cmp
push
mov
jne
les
adc
pushf
sbb
addr16
fsub
mov
adc
inc
loopne
mov
dec
mov
sbb
loopne
xchg
and
pop
jl
xor
ja
xor
aad
rol
scas
inc
mov
aam
mov
les
in
fwait
in
sub
mov
addr16
dec
pop
dec
inc
cmc
pop
loop
(bad)
dec
call
jno
repz
dec
test
adc
xor
ss
push
jmp
arpl
cmps
popf
fwait
in
push
pop
jg
outs
mov
cmp
pop
mov
mov
movs
jp
stc
jmp
(bad)
dec
popa
stos
dec
mov
xor
imul
fxch
jl
mov
xor
push
and
ret
adc
mov
mov
cmc
(bad)
fbstp
mov
fst
pop
mov
inc
int
and
or
xor
(bad)
xlat
cs
js
je
ja
test
cld
repnz
inc
cmp
icebp
aaa
sub
mov
fadd
ss
pop
mov
sub
aad
ds
pushf
jmp
xchg
(bad)
mov
mov
mov
push
xchg
loopne
jbe
mov
sub
add
aad
call
cmp
mov
test
aaa
push
sbb
je
mov
out
mul
or
or
mov
adc
push
pushf
sahf
mov
inc
scas
push
adc
xchg
pop
sbb
mov
fist
scas
sbb
dec
adc
cmp
pop
stc
and
cdq
add
mov
ins
mov
inc
outs
xor
sbb
jge
mov
call
fild
(bad)
fidiv
scas
fmul
xlat
mov
adc
or
std
cmps
and
pop
mov
mov
or
dec
inc
jg
cs
fnstcw
(bad)
(bad)
shld
int
cwde
mov
and
sbb
push
(bad)
popf
mov
push
fistp
in
in
or
mov
adc
ins
repnz
mov
retf
sub
jle
inc
aaa
stos
inc
fistp
or
xchg
mov
test
bound
mov
aas
sbb
mov
dec
fidiv
ficom
push
stos
pop
add
and
mov
mov
call
push
test
fadd
add
mov
adc
dec
xchg
adc
aad
xchg
dec
cmp
mov
cdq
fimul
or
cmp
enter
adc
dec
sar
or
dec
sub
dec
(bad)
imul
inc
sar
cmp
out
dec
adc
and
mov
push
movs
arpl
sar
dec
add
sub
adc
inc
xchg
fcomp
(bad)
sub
pop
adc
sub
inc
daa
sbb
push
jge
xchg
cmps
(bad)
pop
cmp
hlt
jae
add
push
retf
das
stos
(bad)
test
mov
dec
dec
or
push
sahf
js
out
gs
scas
aas
imul
pop
out
or
fst
mov
sub
popf
lock
pop
cmps
mov
add
adc
xor
sar
in
shr
movs
pop
stc
popf
jle
dec
xor
pop
inc
mov
sub
lock
lds
div
scas
adc
dec
inc
clc
lds
mov
jnp
int3
cmps
mov
out
jmp
pop
dec
iret
stos
je
les
jecxz
cmp
xor
(bad)
ret
sub
inc
sub
idiv
sub
adc
mov
pop
fs
in
add
sub
ret
mov
inc
aas
pop
xor
add
les
aas
loopne
inc
loop
sub
test
push
push
(bad)
and
xlat
xor
or
cwde
outs
cli
js
sahf
xchg
mov
dec
cmp
(bad)
cmp
xor
stos
inc
inc
leave
add
gs
sub
push
es
xlat
push
inc
pop
xchg
pop
sub
or
sbb
push
xchg
fmul
pop
int
adc
in
mov
cmp
fwait
sbb
sub
jg
div
lahf
stos
movs
stc
xchg
imul
cmps
out
jae
jnp
mov
stos
imul
cmp
lods
push
add
and
mov
adc
mov
pop
add
cld
mov
ret
lods
cmps
in
xchg
das
xlat
test
call
movs
out
jbe
cdq
jl
xor
jae
movs
cld
lods
out
and
pop
(bad)
std
(bad)
or
cmps
or
xor
jl
jno
outs
lea
pushf
pop
ja
push
ret
xchg
arpl
pusha
pop
shl
aam
lods
hlt
repz
ins
mov
daa
popa
and
fdivr
xor
mov
lock
inc
fstp
adc
push
les
ja
or
or
mov
pop
int3
mov
int3
jne
xor
scas
sbb
ja
pop
aas
addr16
sbb
mov
inc
rcl
add
aam
ss
jbe
dec
into
sbb
cmp
dec
push
inc
mov
jmp
ds
loope
call
ins
in
es
inc
fld
jg
gs
(bad)
pop
ds
ins
push
xor
lahf
xchg
cld
icebp
xchg
test
test
xlat
(bad)
inc
sar
imul
jmp
push
retf
daa
mov
fisttp
imul
in
pop
add
fmul
add
popf
pop
adc
push
nop
xchg
bound
not
mov
inc
ins
out
cmc
cmp
pop
ret
lods
mov
js
add
leave
mov
push
sbb
loopne
pop
adc
movs
in
lods
ds
sbb
sbb
pop
repz
int
sysret
lea
lods
mov
cmp
cmp
or
stos
xchg
push
jmp
cld
repz
leave
jns
sub
ins
popa
jo
jb
call
aas
adc
mov
js
sbb
sub
fisttp
mov
imul
cli
stos
fdivr
xchg
fs
xchg
icebp
out
push
(bad)
xchg
add
mov
mov
sub
ficom
data16
xchg
push
pop
add
xor
inc
jg
aas
(bad)
mov
idiv
dec
ret
push
cli
sub
mov
int3
xor
lock
jnp
aaa
dec
icebp
adc
cs
mov
leave
mov
sub
mov
inc
cmp
ret
pop
pop
hlt
mov
jo
mov
inc
jl
sahf
gs
pop
out
es
or
and
das
cmp
fsubr
lahf
add
mov
sar
sub
cld
add
fstp
and
push
mov
dec
mov
(bad)
mov
(bad)
pop
mov
jle
(bad)
imul
movs
aam
mov
xor
arpl
stos
push
lea
pop
xchg
fistp
push
sbb
pop
xchg
ja
pushf
fstp
arpl
push
ret
sahf
adc
(bad)
cmp
data16
(bad)
xchg
mov
cmp
add
and
inc
mov
inc
(bad)
je
mov
xor
in
into
nop
int
mov
sub
xchg
and
fisttp
in
push
mov
pop
xor
pop
out
sbb
sbb
(bad)
dec
pop
or
add
ins
sbb
pop
fwait
pop
fwait
or
xchg
fdiv
and
dec
adc
in
add
jecxz
jbe
cmp
cmp
fcomp
inc
stos
lods
(bad)
iret
dec
sbb
aad
js
fcmovne
pop
sub
pop
aaa
mov
xor
xor
push
mov
movs
imul
pop
icebp
inc
std
push
sbb
push
lods
inc
mov
sub
nop
inc
or
ins
cli
int
in
push
outs
dec
adc
scas
sub
mov
cmp
fnstenv
xor
cmps
scas
jge
cli
mov
jnp
iret
ja
arpl
mov
inc
std
fiadd
neg
inc
cmp
jb
js
fwait
adc
xchg
pop
inc
int3
ins
shl
jns
cdq
push
xor
mov
mov
and
sbb
add
lock
pushf
inc
out
adc
in
aam
jo
pop
push
iret
push
cdq
xchg
cmp
dec
xchg
dec
dec
popa
or
and
xlat
jne
das
inc
mov
data16
scas
imul
lds
xlat
mov
xchg
adc
mov
lahf
inc
adc
add
scas
hlt
sbb
retf
mov
push
repnz
cmp
ret
call
or
xchg
inc
nop
ss
xchg
shr
xor
xchg
repnz
xchg
lea
loope
pop
gs
ins
lods
mov
jg
stos
pop
fdivr
xchg
ins
sar
aas
mov
movs
fs
(bad)
aam
push
pushf
cmps
out
arpl
inc
inc
jne
lods
loopne
pop
push
sbb
popa
iret
add
xor
loop
loopne
push
pop
mov
lock
(bad)
mov
mov
mov
rcr
mov
pop
out
div
repz
mov
rcr
retf
mov
inc
shl
inc
adc
iret
dec
data16
and
jmp
and
lahf
loopne
aad
mov
lahf
mov
test
jne
out
and
sbb
shl
adc
mov
shl
call
pop
loope
gs
mov
jb
inc
mov
outs
arpl
imul
or
test
cs
xor
mov
shl
push
cmp
pop
repz
fdiv
fistp
xor
stos
pop
inc
fldenv
fs
xor
cmp
ror
sub
pop
push
cwde
xchg
xlat
into
sbb
test
aad
lods
fxch
mov
fisubr
and
push
adc
jb
invd
dec
xchg
iret
xchg
push
cmps
push
cdq
cmp
int3
jns
mov
pop
(bad)
call
fwait
movs
(bad)
xchg
stos
test
add
movs
and
repz
pop
hlt
(bad)
sar
outs
outs
push
jmp
cmc
dec
push
repnz
sbb
mov
retf
ja
xchg
fldenv
(bad)
jle
sub
dec
loop
loope
pusha
fsubr
sub
mov
test
adc
adc
mov
mov
ins
in
sub
xor
movs
retf
pushf
mov
xor
inc
xchg
popf
push
inc
loopne
ins
jmp
ret
(bad)
arpl
mov
sbb
mov
outs
loop
enter
sub
cmc
mov
ror
mov
jne
dec
and
and
and
mov
adc
(bad)
adc
dec
mov
(bad)
and
(bad)
xchg
cmps
into
push
fwait
imul
fadd
aas
add
popa
add
push
or
adc
add
sbb
jnp
jge
fisttp
sub
pop
inc
gs
jmp
call
cmc
or
cmp
sti
add
fwait
idiv
sub
mov
(bad)
dec
cmp
fidiv
add
push
inc
outs
mov
xchg
cdq
xchg
aad
adc
les
jp
lahf
leave
repz
(bad)
pop
mov
jmp
cmp
ficomp
cwde
loope
jns
std
add
adc
jnp
sub
dec
inc
leave
out
ret
jge
mov
sbb
mov
int
cmc
out
int
cld
mov
ins
pop
mov
push
inc
scas
sar
loopne
scas
fidivr
fnstsw
mov
and
push
mov
stc
test
inc
cmps
test
mov
lea
pop
fst
add
test
xor
mov
mov
and
add
jge
shl
xor
cli
pop
(bad)
cmps
fs
mov
in
ret
add
push
and
rcl
dec
add
cmp
xor
(bad)
push
and
hlt
scas
fbld
push
xchg
arpl
rol
cmc
repz
ss
fcomp
je
stos
mov
(bad)
and
add
cmps
adc
xchg
in
ror
mov
fistp
mov
dec
(bad)
mov
jae
jg
rcr
push
pop
xor
enter
jbe
or
sub
rcl
cld
cld
xor
lds
jmp
mov
jl
jl
cmp
jecxz
ins
std
inc
pop
pop
test
ins
adc
fld
dec
pop
call
dec
test
and
lods
or
rcl
sbb
pusha
lock
dec
cmp
push
int
das
(bad)
jnp
jnp
push
call
cli
push
xchg
add
mov
push
mov
or
imul
es
pop
dec
sar
stos
das
aaa
push
xchg
xchg
push
xor
or
jp
repz
div
sub
lock
rcl
(bad)
(bad)
loope
jnp
push
add
js
test
and
xor
retf
scas
push
xchg
push
ror
call
cmp
xchg
rol
cli
and
cmp
or
jl
push
cmp
xchg
mov
fld
jge
adc
jmp
jp
das
add
adc
xor
inc
dec
leave
xor
add
wrmsr
push
test
sbb
dec
cmp
add
push
out
xor
out
push
sub
sub
jbe
aam
mov
dec
cmp
mov
mov
ss
sbb
pop
mov
inc
ret
push
and
lods
push
inc
or
leave
add
mov
ror
or
cli
test
cli
add
in
std
retf
popf
ja
add
jo
(bad)
mov
xchg
adc
inc
sbb
ins
or
cmp
jno
or
add
dec
leave
clc
push
fwait
lds
ss
cli
ror
xchg
xor
nop
jbe
mov
lods
ror
imul
cmp
in
(bad)
les
daa
mov
adc
push
ja
mov
jb
mov
ret
loope
retf
bound
xchg
sub
test
lea
(bad)
pop
adc
sbb
push
(bad)
sub
test
shl
pusha
cdq
xor
loop
xor
jae
sub
or
sub
dec
mov
shl
fs
sbb
adc
mov
sar
push
pop
shl
dec
jmp
xchg
inc
mov
shl
sbb
inc
mov
fabs
mov
mov
outs
mov
xor
inc
enter
mov
lahf
ds
inc
js
fnstcw
mov
popa
pop
fdivr
in
clc
js
lds
comiss
(bad)
dec
mov
mov
add
pop
jmp
aas
lea
pop
shl
outs
xor
push
pop
xchg
int
sbb
xor
call
in
(bad)
neg
sbb
cmp
cli
mov
je
fmul
daa
mov
add
or
fidivr
mov
aam
cmp
aam
jmp
push
mov
jle
push
or
add
inc
fcmovnb
sbb
push
pop
xchg
or
retf
ds
jmp
and
pop
cwde
lahf
sub
push
jno
sub
and
add
push
xor
in
xchg
sbb
in
popa
lahf
leave
add
ror
sub
inc
sbb
cmp
cmp
sbb
add
inc
sbb
lods
or
mov
repz
xor
mov
add
sub
ror
in
sti
sbb
fs
mov
test
das
mov
cmp
xchg
out
push
int3
out
das
jno
or
rcr
lods
dec
in
retf
inc
hlt
mov
mov
outs
loop
mov
push
aam
sub
xor
ds
stos
xchg
xchg
sbb
leave
gs
xchg
adc
out
push
xchg
lods
inc
cld
cs
aam
clc
loopne
inc
stc
xor
and
aaa
fcmove
push
iret
xor
(bad)
jecxz
enter
shl
fistp
(bad)
xchg
aam
mov
ficom
stos
or
jo
shr
cli
push
pop
aam
jecxz
rcr
mov
dec
push
xlat
cmps
sub
adc
stos
cld
jmp
pop
(bad)
mov
bound
cmp
scas
clc
shl
out
sub
xchg
lock
mov
dec
scas
adc
fist
pushf
push
mov
mov
or
lock
push
jmp
inc
and
stos
pop
call
xor
adc
mov
and
or
xchg
cmps
jmp
imul
mov
cld
jecxz
push
loope
das
(bad)
jmp
jp
call
and
adc
jecxz
push
mov
inc
pop
cwde
fiadd
xchg
out
xor
outs
or
inc
movs
ret
je
cmc
xchg
add
ficom
rol
cli
mov
inc
out
pop
cmps
and
int3
pop
daa
mov
(bad)
retf
icebp
jno
mov
scas
or
mov
sbb
cmp
lock
adc
popa
ret
ja
dec
cmp
sub
cmc
mov
mov
sub
ins
fild
mov
gs
add
and
adc
fcmovnb
div
push
call
ss
jnp
shr
aad
aam
jae
fild
arpl
lods
add
(bad)
cmp
or
pop
or
adc
arpl
rcr
popa
leave
cmp
inc
jl
xlat
cmp
cmp
(bad)
mov
inc
xchg
outs
mov
aad
dec
jmp
loop
inc
mov
jecxz
lahf
or
or
es
ret
adc
enter
pusha
jne
pusha
or
xchg
push
mov
adc
mov
jmp
add
push
pop
sbb
xor
push
mov
cmp
jbe
or
icebp
ret
out
add
sub
jae
icebp
lock
mov
imul
and
cmp
ja
aam
scas
shl
scas
mov
or
xlat
leave
jp
pop
lea
imul
push
aas
cmps
clc
stc
and
push
dec
call
xor
pop
sub
shr
mov
idiv
jo
or
iret
(bad)
mov
retf
xchg
fdiv
push
retf
push
pop
mov
addr16
loopne
ss
(bad)
arpl
repnz
sahf
xlat
out
push
iret
jmp
cmp
sub
sub
sbb
xchg
mov
cmps
(bad)
call
xor
sbb
jns
retf
inc
into
and
ret
and
movs
cmpxchg
xor
add
jno
repnz
(bad)
pop
es
out
push
cwde
iret
(bad)
(bad)
sub
scas
(bad)
call
pop
loopne
outs
cmp
lods
and
gs
and
jmp
add
push
fisub
dec
mov
addr16
mov
xor
and
cli
adc
mov
in
aaa
jl
rcl
fwait
xchg
ins
jnp
sub
retf
test
pop
cmc
jmp
fstp
cmps
mov
in
add
cwde
addr16
pushf
test
fisubr
or
jno
das
fwait
xor
cmp
in
xchg
fisub
cli
inc
pushf
test
or
out
repnz
ror
xor
pop
mov
xchg
adc
mov
xor
out
in
xchg
jo
add
or
mov
sbb
jg
jl
or
shl
mov
addr16
push
test
sbb
sbb
enter
dec
mov
adc
rol
or
jp
nop
stos
icebp
cwde
fadd
call
push
ret
mov
outs
popa
or
xlat
mov
ja
fiadd
pop
pusha
mov
inc
push
gs
jmp
mov
dec
fdivr
in
mov
ret
xor
fsub
popa
jp
mov
fadd
js
adc
jns
push
sbb
and
ins
repz
sub
mov
(bad)
dec
sub
int
in
pop
call
and
sbb
mov
dec
push
sbb
mov
(bad)
dec
sub
xchg
(bad)
fsub
mov
lods
xchg
adc
sbb
pop
aaa
cs
test
jge
in
xor
cwde
xchg
leave
nop
and
out
mov
bound
cld
inc
sti
stos
adc
sub
mov
jle
add
test
jns
jae
jg
lods
mov
mov
and
and
(bad)
aam
push
mov
add
outs
cwde
pop
push
push
sub
mov
das
loopne
imul
inc
in
inc
(bad)
push
outs
push
sti
movs
xor
push
jns
dec
mov
adc
scas
and
xchg
add
or
cmp
in
sbb
das
ficomp
mov
rol
push
in
enter
xchg
icebp
dec
dec
test
mov
iret
or
lods
or
mov
add
repz
movs
cmc
in
mov
popf
mov
dec
or
xor
aam
inc
or
jecxz
mov
popa
mov
push
neg
mov
jg
ds
(bad)
mov
aas
push
je
outs
push
icebp
loope
mov
jo
mov
movlhps
cdq
leave
fucom
and
xor
lahf
cli
xchg
(bad)
mov
mov
jge
and
mov
jae
scas
mov
test
sbb
jp
enter
sub
mov
pop
das
movs
mov
pop
sbb
pop
movs
js
or
push
xchg
fnstenvw
adc
imul
jns
xchg
sub
add
shl
mov
aaa
fcom
or
arpl
push
and
inc
pop
sub
scas
or
or
aam
aas
rcl
push
jbe
(bad)
mov
in
sub
aad
xchg
sbb
aaa
je
jbe
bound
jp
leave
mov
push
into
push
cmp
lods
jecxz
mov
cmc
or
pop
(bad)
sub
jp
jg
ja
call
cmp
scas
or
out
ins
int
pop
les
ja
push
(bad)
xchg
pop
cwde
adc
mov
adc
cmp
ret
xchg
cld
sub
mov
jle
and
js
or
xor
sub
dec
shl
leave
mov
mov
imul
sbb
xlat
inc
ja
cmc
scas
scas
add
cmp
cdq
xor
out
adc
sub
ins
dec
mov
inc
pushf
cmp
inc
daa
cs
jbe
dec
xor
stc
cmp
adc
(bad)
jmp
mov
mov
add
add
aam
mov
push
sub
or
stos
mov
int3
enter
mov
xchg
sbb
add
jge
imul
lods
or
xchg
scas
ins
jb
je
mov
das
cmps
cs
out
mov
fld
out
inc
repz
imul
rol
cmps
nop
mov
pop
mov
inc
jns
pop
pop
add
mov
(bad)
jae
adc
shr
mov
push
test
and
outs
xchg
mov
dec
or
inc
repz
je
pop
callw
out
sub
ja
cmp
pop
xor
sub
(bad)
mov
xor
test
adc
aaa
xchg
inc
cmp
int
add
(bad)
cwde
(bad)
das
sub
lods
mov
push
push
cmp
mov
sbb
xor
lods
mov
or
dec
dec
xchg
and
aaa
(bad)
pop
add
jge
pop
into
dec
adc
pop
adc
and
inc
movs
adc
xchg
add
sub
cmps
mov
cmp
ftst
mov
in
in
pushf
push
gs
fild
int3
enter
mov
(bad)
jno
push
ja
ror
xchg
ret
loopne
jnp
(bad)
sbb
dec
mov
xor
and
mov
pop
xchg
(bad)
movs
imul
xchg
in
mov
js
scas
dec
inc
call
jl
mov
imul
scas
out
(bad)
out
pop
mov
fs
cmp
jo
pusha
push
(bad)
pop
jns
mov
jns
mov
(bad)
jb
mov
jle
push
bnd
dec
mov
mov
dec
out
das
or
lods
cdq
in
dec
sub
lods
cdq
sahf
mov
das
iret
mov
cli
cmps
in
scas
pop
scas
mov
jmp
frstpm(287
mov
je
mov
cmp
adc
(bad)
aad
adc
(bad)
dec
sahf
out
push
mov
push
js
dec
imul
xchg
loop
adc
daa
inc
out
add
inc
pop
fidivr
rcl
sub
or
ins
jno
push
or
out
dec
cs
dec
icebp
add
fsubr
popf
pop
jecxz
push
std
mov
jg
shr
out
out
arpl
enter
fcomp
xchg
test
les
mov
ins
pop
and
mov
movs
outs
mov
dec
data16
repnz
in
mov
jmp
or
sbb
sbb
mov
cmp
xor
leave
jmp
ja
jns
mov
mov
js
aas
inc
shr
shr
sar
or
cdq
mov
push
mov
pop
fsincos
(bad)
test
pop
int
inc
dec
pop
pusha
jecxz
mov
rol
icebp
out
xor
mov
les
in
sub
pop
xor
arpl
xchg
nop
cmps
push
and
neg
sbb
outs
test
lea
mov
ret
pmaxsw
sub
pop
aas
int3
push
jmp
pop
sbb
adc
dec
lea
dec
push
int
push
or
mov
stos
sub
mov
and
mov
sti
pop
in
adc
jmp
loop
xchg
adc
(bad)
jne
ss
xor
in
mov
jle
push
push
int
sysexit
lahf
addr16
cmp
imul
mov
cld
hlt
add
hlt
or
xor
movs
call
sbb
js
mov
jp
adc
pop
sub
or
fs
and
adc
(bad)
xor
jns
emms
pop
or
sbb
sub
or
(bad)
add
loope
dec
jecxz
in
repnz
ffreep
icebp
imul
fisttp
sbb
mul
ret
repnz
daa
daa
mov
xchg
sti
push
push
add
dec
jns
mov
outs
js
xchg
and
repz
cmps
es
add
adc
inc
out
adc
push
push
jae
ror
xchg
cmp
push
sub
sbb
dec
push
inc
push
ficomp
or
int
dec
push
cmp
fidiv
daa
xor
fs
xchg
xor
fadd
xor
xchg
adc
add
add
jae
mov
(bad)
in
pop
lea
xchg
cmc
(bad)
ror
xchg
mov
fimul
cmp
push
sub
enter
cld
and
pop
dec
shr
hlt
std
and
inc
mov
(bad)
xor
sub
or
cmc
push
pop
xor
xchg
push
push
push
push
out
cmp
xchg
clc
xor
(bad)
outs
fimul
lahf
cdq
call
xchg
xor
scas
pop
and
ss
xor
sbb
shl
cmp
push
sti
mov
lock
stos
push
mov
fstp
mov
mov
pop
fdiv
bts
ret
test
imul
call
(bad)
outs
and
loopne
jp
out
cmps
out
pop
sub
pop
adc
fwait
add
dec
jp
sbb
loope
sub
jg
cmc
retf
push
push
iret
mov
jecxz
pop
cld
mov
cs
xor
lock
out
in
and
pushf
dec
jo
xchg
mov
scas
ins
mov
call
push
jne
jmp
out
adc
(bad)
ss
imul
xchg
add
out
and
gs
shl
xchg
pop
dec
mov
enter
shl
fadd
int3
int3
dec
fcmovbe
repz
in
mov
daa
mov
push
rcr
push
ret
(bad)
cmc
call
leave
fcomp
scas
test
imul
in
div
pusha
mov
sbb
repnz
pusha
xor
ja
mov
mov
loop
les
nop
(bad)
mov
call
mov
cmp
leave
dec
cdq
sbb
in
mov
sbb
add
jbe
mov
xchg
ds
loope
jg
shl
jb
fs
fdiv
pop
mov
dec
(bad)
mov
adc
dec
ret
cdq
xor
popa
out
cmp
pop
gs
bound
mov
clc
xor
stos
imul
push
fmul
cmp
push
sahf
lahf
dec
repz
inc
or
pop
out
pop
cmps
es
xor
jmp
dec
call
fsubr
mul
push
inc
in
repz
iret
cmp
xchg
mov
push
ins
repz
jle
clc
push
jnp
pop
jnp
mov
mov
add
cmp
ds
adc
gs
icebp
pop
xor
std
scas
mov
lods
ret
mov
arpl
xor
adc
scas
(bad)
push
sub
jge
xlat
pop
lods
movs
cmps
sub
add
mov
mov
sub
xchg
std
fbld
jb
cmp
add
imul
fcmove
cdq
push
sub
retf
mov
jl
cmp
fs
push
xchg
leave
cdq
push
shr
sti
sub
xor
adc
mov
int3
adc
sub
ds
xchg
push
jecxz
test
add
daa
ins
push
outs
bound
jmp
jg
push
movs
push
jmp
pop
inc
mov
ja
sub
jo
in
(bad)
test
push
fisubr
aam
and
sub
outs
aam
xchg
outs
push
aam
pop
jecxz
cs
mov
xchg
pop
in
ficomp
jno
(bad)
adc
and
mov
popf
pop
xor
sbb
xor
and
adc
cli
bound
outs
mov
stos
sub
cmp
outs
test
mov
sbb
cs
sub
aas
shl
xchg
fxch
xchg
mov
xor
mov
leave
ja
adc
inc
sub
xchg
repz
cwde
mov
push
push
sub
je
sti
push
xchg
sti
icebp
xor
jo
inc
out
lock
dec
mov
cmp
(bad)
xor
fnstcw
cli
popf
inc
jbe
ror
push
adc
or
cld
retf
xchg
jb
xor
push
mov
push
adc
mov
mov
(bad)
dec
int
cld
scas
jg
jg
sub
and
add
stos
leave
jns
(bad)
xor
push
std
jg
retf
call
inc
inc
xchg
in
outs
mov
(bad)
movd
dec
fnsave
push
pop
dec
push
add
or
loope
dec
movs
cmps
dec
rcl
enter
gs
sbb
sub
ret
test
out
mov
mov
arpl
retf
ds
and
and
cli
push
adc
cmp
mov
pusha
pop
loope
rcr
call
outs
movs
jle
nop
call
sbb
push
mov
pop
pop
bound
jp
shr
xor
dec
iret
sub
jmp
enter
inc
test
cmps
inc
paddd
loope
(bad)
mov
enter
ret
jnp
add
push
sbb
cmps
pop
sub
mov
mov
and
ins
inc
leave
nop
jecxz
add
bound
loop
lods
dec
jmp
hlt
pop
adc
dec
mov
xor
add
aas
sub
lahf
int
jmp
outs
(bad)
hlt
idiv
ror
(bad)
loope
adc
(bad)
ror
imul
sbb
and
sahf
pop
loopne
push
or
sub
mov
icebp
add
retf
outs
mov
mov
popf
inc
add
cs
push
bound
xchg
and
sbb
jae
retf
clc
and
mov
or
pop
aaa
int3
nop
xlat
or
mov
cs
jns
mov
or
push
mov
das
ret
in
dec
add
dec
dec
not
gs
jle
pop
jne
outs
mov
xlat
pop
jno
aaa
add
inc
sbb
pop
pop
loopne
or
dec
std
push
repnz
push
ins
(bad)
mov
sbb
cmp
sbb
arpl
imul
inc
fisubr
ror
mov
adc
xor
xchg
stos
test
xlat
retf
mov
xor
ret
add
(bad)
aas
push
mov
pop
jge
lock
inc
mov
pop
lods
fcmovu
inc
pop
(bad)
mov
aam
add
adc
sub
or
push
rol
in
in
retf
lock
xchg
int3
or
fild
and
adc
xor
aam
mov
dec
mov
pop
cmp
add
jo
xlat
or
outs
dec
cwde
bound
adc
out
push
cmps
fdivp
scas
mov
je
out
add
push
push
(bad)
cmc
lds
pop
jo
rol
add
shr
mov
push
dec
add
fs
fs
enter
jecxz
mov
mov
fstp
int
mov
and
in
gs
add
jno
(bad)
loopne
pop
gs
lea
in
rol
xchg
mov
jne
ror
fwait
in
out
dec
dec
shl
repnz
in
dec
dec
stos
sbb
jl
adc
inc
jl
pusha
sub
mov
push
sbb
push
dec
sti
inc
ror
jno
cmp
mov
lods
call
mov
xchg
dec
cmps
mov
(bad)
retf
mov
dec
and
ret
test
dec
xor
push
test
int
sahf
mov
scas
or
sbb
jb
xor
lock
xor
loope
dec
mov
out
lahf
loopne
shl
xor
mov
aaa
inc
shl
shl
and
(bad)
mov
cmc
push
sub
hlt
mov
adc
and
fcomp
pushf
xchg
ins
mov
sti
jmp
push
out
mov
push
cmp
popf
mov
cmp
leave
rcr
aam
call
mov
pusha
test
es
loop
or
sbb
push
int
repz
lods
pop
in
sbb
inc
xchg
stos
cmps
movs
dec
mov
test
arpl
inc
in
mov
and
ds
test
loope
repnz
call
xor
test
loope
fnstenv
into
nop
jmp
sub
(bad)
ins
out
out
cld
pop
xchg
dec
pop
ret
sbb
mov
pop
sbb
(bad)
cld
and
mov
jg
mov
cld
bound
ja
aaa
sub
dec
retf
test
xor
pop
lfs
adc
inc
(bad)
and
push
std
ret
sub
adc
cmps
cmps
imul
clc
inc
outs
aaa
jmp
sar
cmp
iret
jno
jnp
cmp
or
stos
out
enter
adc
sahf
hlt
pop
jle
(bad)
hlt
inc
cmp
(bad)
jg
sbb
push
inc
fnstenv
add
and
xor
mov
add
add
(bad)
leave
jmp
cmp
call
cdq
mov
ins
leave
mov
call
cmc
mov
dec
or
inc
cmp
je
and
arpl
jmp
sar
jmp
push
in
and
(bad)
mov
xchg
xor
(bad)
sub
pop
iret
mov
push
out
test
push
stos
in
adc
sti
imul
mov
push
sahf
mov
push
mov
sub
bound
adc
aad
repnz
dec
bound
(bad)
movs
xor
pop
imul
jmp
adc
push
jl
shl
mov
mov
adc
fstp
in
dec
(bad)
dec
push
sub
inc
sbb
ds
ror
in
xor
das
rol
cmps
pop
stc
sbb
lods
xchg
jle
loop
push
dec
movs
ficomp
pop
sbb
mov
scas
mov
cmp
pop
mov
jne
in
push
jno
shr
mov
pop
cmp
(bad)
xor
and
inc
pop
xchg
cmp
cmp
ret
push
cld
add
sbb
cmp
cmp
scas
mov
add
popa
mov
push
data16
mov
dec
and
es
icebp
test
add
retf
test
icebp
jnp
outs
shl
sbb
mov
out
or
gs
movlps
ins
repz
mov
les
cdq
(bad)
inc
push
test
xor
pushf
push
cmp
push
and
fcomp
xchg
mov
js
mov
out
call
vpavgw
push
arpl
mov
push
and
pop
mov
sbb
jg
cmp
mov
out
add
xchg
push
mov
cmp
pop
add
cmp
stos
outs
lahf
jae
sbb
retf
xchg
mov
sar
and
or
mov
push
mov
shl
xchg
and
sbb
cli
push
or
popf
addr16
pop
sub
fcom
jmp
xchg
cs
fcom
ins
cmp
call
xor
addr16
ret
push
mov
lds
popf
or
loope
sbb
in
aas
loope
mov
mov
inc
push
ja
pop
lods
movs
cs
jae
inc
dec
cmps
xchg
clc
(bad)
mov
and
sahf
lea
iret
arpl
int3
loopne
hlt
sub
gs
lods
cmp
inc
and
push
stos
xchg
sti
sbb
dec
icebp
loope
sub
aam
(bad)
cli
fwait
mov
mov
sub
and
cmp
and
test
fidiv
xchg
or
aam
mov
sbb
inc
popf
push
dec
call
add
mov
movs
aad
in
ds
sub
ds
jns
loopne
jp
and
jno
(bad)
mov
(bad)
jle
xor
(bad)
enter
mov
jae
dec
fst
jbe
cmps
out
dec
call
pop
pcmpgtb
jbe
ins
or
sbb
sbb
sub
aas
xor
mov
lea
xor
xor
push
out
jmp
jle
xchg
pop
addr16
inc
or
pop
sbb
lds
aaa
adc
dec
aam
sar
imul
into
adc
bound
rol
cmc
add
jo
jp
mov
bnd
push
lahf
or
cwde
(bad)
pop
mov
mov
ret
mov
fsub
leave
test
(bad)
int
xchg
cld
xchg
sub
leave
xchg
stc
sbb
jae
outs
add
sbb
adc
movs
mov
movs
dec
pop
mov
loop
sti
outs
mov
adc
xor
push
jge
out
ja
ror
xor
test
div
inc
out
lahf
jno
ret
sbb
mov
out
in
test
pop
mov
cld
inc
sbb
mov
xchg
and
loope
jmp
dec
add
iret
aam
retf
and
(bad)
xlat
and
mov
shr
test
pop
inc
mov
into
test
push
pop
cs
push
mov
or
lea
iret
xor
xor
mov
mov
jns
push
push
ret
inc
mov
or
and
lods
push
inc
dec
ins
sbb
cmp
xchg
xor
pop
fistp
pop
cmps
loope
mov
scas
sahf
xor
scas
sahf
inc
in
push
mov
cmc
or
ror
fisubr
fst
sbb
addr16
xor
lock
pop
mov
ss
mov
xchg
xor
bound
(bad)
test
out
adc
scas
int3
mov
xchg
jmp
inc
dec
add
jmp
xor
and
imul
je
retf
mov
shr
bound
test
jp
pshufw
push
inc
std
in
xchg
pop
loop
adc
mov
loopne
xchg
mov
xchg
nop
dec
loope
mov
xor
xchg
add
xor
ret
outs
stos
das
mov
inc
(bad)
cmc
ja
cs
add
mov
fild
mov
and
mov
xchg
cmp
movs
jo
fimul
mov
pop
nop
ds
cli
add
jae
inc
inc
dec
fcomp
xor
sbb
dec
addr16
(bad)
push
mov
xchg
dec
icebp
loope
jae
jmp
add
fnstsw
jl
fcmovnb
dec
call
cmp
mov
mov
push
cmp
mov
sub
cmps
in
and
mov
sbb
sub
push
(bad)
in
xchg
xor
or
in
(bad)
movs
and
push
jge
mov
jb
jp
or
ins
shr
cmp
rcl
daa
add
sub
dec
repnz
es
xchg
sar
dec
fadd
das
jge
inc
mov
or
jmp
adc
mov
cli
test
les
mov
sar
mov
int3
sbb
inc
mov
push
push
mov
push
cmp
test
das
push
mov
icebp
loop
jno
test
push
xor
das
je
(bad)
mov
xchg
xor
xchg
pop
les
lock
and
jl
in
mov
daa
aaa
pushf
fidiv
lods
(bad)
icebp
mov
imul
jle
jp
cmp
or
sbb
xchg
inc
fst
or
xchg
xor
mov
jg
fbld
sbb
xor
adc
add
mov
icebp
lahf
into
push
mov
ja
xchg
test
nop
xchg
and
daa
and
ret
xchg
scas
ror
sar
js
xchg
jp
icebp
aad
dec
(bad)
ja
adc
(bad)
jno
push
or
mov
ss
scas
aad
sub
ja
pop
jle
pop
pop
enter
mov
mov
push
imul
rol
pop
sub
inc
fld
push
dec
fstp
and
das
mov
cmp
jne
cmp
xchg
jp
mov
bound
sub
push
dec
xchg
sub
mov
mov
xor
lock
aad
les
sahf
into
fst
hlt
pop
aas
movs
sub
sbb
hlt
jb
mov
(bad)
mov
sbb
mov
es
out
mov
adc
dec
out
popa
cmc
mov
mov
scas
in
enter
repz
and
lods
sub
(bad)
mov
pushf
add
xchg
jl
mov
dec
mov
aam
mov
leave
shr
test
sub
hlt
jbe
ins
jns
adc
adc
inc
cmps
pop
push
shl
div
mov
jecxz
in
pop
push
test
mov
push
inc
or
test
sub
xchg
cdq
jecxz
and
jp
mov
push
cld
into
xchg
mov
(bad)
cmc
mov
pop
sbb
and
arpl
ds
mov
mov
pusha
lahf
pop
sub
inc
movs
hlt
out
data16
out
sti
xchg
inc
push
outs
out
stos
xlat
xchg
mov
mov
mov
add
(bad)
and
(bad)
lea
and
das
mov
push
outs
mov
cmp
out
cmps
(bad)
call
cmp
retf
pop
or
sub
jmp
pop
aaa
dec
mov
das
loopne
mov
in
test
stc
out
push
xor
cmp
push
dec
ret
fsubr
push
pop
shl
sbb
adc
arpl
(bad)
(bad)
je
icebp
sar
pop
clc
push
pop
mov
mov
sbb
nop
mov
lea
retf
scas
lock
addr16
bound
int3
add
sbb
adc
arpl
sub
lods
mov
dec
nop
sub
and
fcom
imul
inc
je
cmp
mov
jecxz
adc
fdivr
ja
jmp
sbb
(bad)
and
pop
or
and
or
xchg
std
push
outs
sub
fsubr
(bad)
mov
pop
xor
cmp
lods
and
addr16
aad
ret
mov
call
push
and
int
lods
int3
cld
pop
loope
sub
xchg
pop
out
xchg
div
dec
pop
mov
imul
movs
mov
inc
rcl
jmp
mov
dec
inc
or
frstor
(bad)
cmps
loopne
cwde
inc
sub
aas
out
test
lock
adc
repz
push
or
iret
pop
and
cmps
cwde
mov
test
add
int3
cld
sub
push
dec
xchg
jae
sbb
push
and
inc
mov
mov
test
cmp
not
outs
imul
pop
jae
(bad)
fnstsw
popf
mov
adc
cmp
push
outs
push
das
push
mov
mov
(bad)
pusha
test
lods
xchg
(bad)
push
mov
sub
int3
push
jbe
mov
mov
dec
stos
sub
fldenv
into
push
aaa
cmps
mov
xchg
xchg
and
push
ja
pop
adc
or
sbb
cmp
stos
mov
add
daa
aas
mov
arpl
push
ins
pop
fisub
mov
dec
test
inc
aam
and
rcr
int3
cmp
cmp
xchg
xor
and
ds
sahf
mov
mov
push
(bad)
cmp
or
dec
jo
xchg
cmp
jmp
nop
sti
xor
call
lds
ja
push
dec
imul
int
hlt
aam
adc
inc
(bad)
mov
mov
pop
sbb
mov
push
in
pop
push
fisub
daa
int
into
xor
jnp
fiadd
rcl
int3
repnz
scas
inc
push
fs
sbb
mov
push
xor
mov
xchg
lds
fldenv
or
cmp
pusha
loopne
pop
iret
mov
push
shl
jg
and
push
ins
push
mov
jmp
cmps
movs
scas
(bad)
jne
stc
ins
push
loope
jae
int
xor
repnz
cmc
add
les
sub
(bad)
(bad)
lock
maskmovq
mul
shr
xchg
aas
hlt
adc
dec
mov
sub
ficom
and
pop
imul
xchg
mov
shl
inc
out
data16
loope
(bad)
mov
mov
cmps
pop
inc
cmp
adc
add
xlat
das
(bad)
call
inc
scas
loope
mov
(bad)
adc
clc
outs
pop
lds
fistp
mov
repz
pop
or
inc
mov
fadd
or
(bad)
jl
xor
xchg
shl
dec
sub
and
out
neg
cli
dec
add
mov
je
(bad)
mul
clc
pop
push
leave
or
push
inc
and
rol
adc
push
mov
and
test
push
(bad)
jle
sbb
xchg
pop
mov
and
test
xchg
xchg
jb
in
mov
hlt
out
mov
cdq
mov
sbb
mov
loope
jo
pop
out
cld
or
fnsave
cmp
push
xor
and
xchg
cmp
jns
stos
movs
sub
xchg
sti
xor
xchg
mov
or
call
sbb
iret
xor
cmp
cli
xor
xor
scas
ja
and
and
xchg
aad
xchg
and
pop
mov
pop
mov
jno
mov
or
loopne
cmp
lea
dec
add
lods
cmp
dec
inc
lods
push
and
add
add
outs
mov
mov
sti
aam
xlat
bound
sar
mov
aaa
not
call
mov
out
in
int3
mov
xor
mov
(bad)
out
es
inc
cmps
add
inc
inc
lods
arpl
pop
test
lods
call
outs
leave
mov
movs
fistp
mov
mov
movs
mov
jg
sub
pop
dec
retf
in
jne
mov
dec
loope
jo
pop
aad
mov
or
or
dec
pop
ss
sti
push
pusha
pop
mov
and
popa
(bad)
into
mov
pop
cmp
pop
psrlq
(bad)
xchg
test
add
mov
jae
cmps
mov
sub
imul
ins
data16
cs
jg
leave
xor
ror
std
in
call
push
mov
in
jnp
lahf
fcomi
out
dec
pop
xor
sahf
xchg
xor
or
cmp
adc
test
or
pop
lds
mov
xor
mov
adc
jbe
xchg
jnp
in
xor
sub
loope
add
int3
mov
xchg
xchg
mov
xchg
imul
xchg
inc
scas
mov
pop
mov
add
push
inc
push
pusha
mov
or
fs
cmp
fild
mov
xchg
mov
pop
jne
lds
(bad)
cmps
popf
pop
aam
mov
or
stos
push
repnz
loop
add
je
mov
jno
(bad)
rcl
pop
test
xchg
push
jmp
mov
jecxz
mov
pop
and
ins
or
mov
cmps
es
adc
je
add
sub
xor
mov
cmp
mov
or
les
xchg
movs
ror
call
adc
js
enter
push
mov
test
outs
dec
rol
repnz
stos
ret
gs
push
xchg
inc
push
in
pop
fcomp
mov
adc
and
jb
retf
ret
inc
std
add
push
push
add
jnp
jb
(bad)
loopne
inc
(bad)
and
cmp
loope
sbb
data16
pusha
adc
pop
daa
movs
mov
or
sbb
int3
mov
mov
loope
rol
ror
xchg
iret
push
xchg
and
dec
mov
enter
xchg
in
call
ror
(bad)
ret
xchg
gs
lahf
push
das
xchg
addr16
pop
sbb
fdiv
mov
fwait
rcl
cmp
fsub
or
dec
ror
fbld
push
mov
retf
sbb
nop
aaa
es
div
push
repz
inc
jns
xchg
cmp
or
or
mov
pop
xchg
scas
je
jmp
pop
push
or
ja
add
in
fcom
nop
add
push
jb
fistp
stos
fsubr
jns
neg
jle
add
fisttp
jns
(bad)
loopne
data16
pusha
or
out
sub
scas
sub
stos
cmc
sub
xor
iret
cmp
es
ret
movs
mov
fwait
mov
je
std
push
gs
hlt
jne
bound
test
leave
popa
xlat
push
cld
div
and
loope
cld
mov
xor
loopne
inc
xchg
jno
or
cmc
cwde
cmc
dec
jge
test
outs
loope
gs
rcr
loop
mov
push
popf
or
pop
xor
or
or
pop
ds
or
(bad)
sti
mov
xchg
fs
jno
loope
sub
(bad)
enter
mov
add
frstor
inc
imul
retf
and
mov
xor
jle
stc
jecxz
inc
xchg
push
mov
lahf
mov
jl
test
jne
test
xchg
xor
push
and
cmps
pop
test
lods
xchg
stc
jecxz
xor
jp
jmp
adc
mov
xchg
cmp
imul
rol
mov
sub
out
lds
cmp
sbb
test
cdq
or
sub
adc
and
imul
out
test
jp
stc
mov
test
or
mov
rol
mov
jno
ds
les
mov
sbb
mul
jecxz
push
jno
scas
sub
inc
and
(bad)
xlat
arpl
xchg
sub
mov
das
xor
jnp
retf
lea
and
push
mov
xchg
cmp
mov
int3
mov
pop
mov
add
sub
inc
call
cwde
rol
movs
push
dec
popf
div
fdivr
jcxz
or
imul
xor
fs
je
aaa
lahf
inc
rcl
ficom
movs
sub
mov
pop
push
jo
cwde
sbb
mov
rol
inc
pushf
les
sub
jge
shr
add
addr16
int3
fst
xor
sbb
push
ins
xor
sbb
jb
mov
ins
pop
xor
pop
out
call
out
jmp
iret
cdq
(bad)
pusha
sub
cmovl
lock
xchg
sub
jbe
fdivrp
mov
idiv
fldz
mov
xor
fadd
fs
stc
adc
adc
std
inc
xchg
fisub
in
fistp
push
jl
push
dec
ds
js
xlat
mov
jne
jg
cmove
mov
lods
jno
add
pop
(bad)
mov
dec
jge
(bad)
stos
jae
mov
inc
push
in
jle
ja
rol
xchg
stos
data16
dec
mov
xlat
pop
gs
ins
push
mov
test
lds
test
jae
retf
pop
adc
out
int3
add
movs
xchg
dec
sub
add
xor
adc
adc
fstp
sub
icebp
pop
fsub
lock
ret
and
xor
push
or
call
mov
adc
cmp
add
aad
add
mov
iret
xor
mov
popf
add
inc
and
mov
popa
push
sub
push
aam
mov
cmp
mov
lea
sbb
add
(bad)
repz
xchg
mov
lods
mov
push
hlt
xor
mov
or
and
es
fiadd
jmp
dec
jmp
cmc
jae
bound
les
jle
loopne
inc
pop
push
or
rol
xchg
mov
adc
xchg
fsub
xchg
mov
retf
sbb
sub
mov
inc
sub
dec
jns
push
das
loop
gs
(bad)
or
loope
pop
xchg
not
cmp
addr16
jb
sbb
sub
xor
mov
jae
sbb
data16
in
dec
xrelease
outs
ror
sbb
mov
pop
jb
test
sub
imul
cdq
or
scas
hlt
xor
inc
jo
jg
fldenv
lock
nop
es
shl
ficomp
add
jecxz
mov
movs
mov
dec
xchg
popf
inc
push
and
dec
sbb
mov
push
retf
xor
ins
mov
sub
or
jmp
(bad)
mov
loop
jae
adc
call
loope
and
sbb
and
daa
adc
out
sub
int
jecxz
cmp
iret
cmp
pop
lea
mov
icebp
mov
sub
push
sub
fsubr
or
sbb
inc
and
(bad)
adc
xchg
pop
daa
das
xchg
(bad)
cld
and
into
xchg
scas
pop
fcomp
and
jge
adc
test
or
pushf
mov
retf
fmul
iret
test
mov
cmp
les
add
cmp
jne
test
iret
clc
xchg
test
push
jle
mov
fst
ret
add
push
mov
(bad)
dec
imul
xor
mov
cmps
xor
push
mov
test
inc
dec
push
cmp
aas
pushf
sar
retf
inc
pushf
mov
stos
into
lds
sub
sbb
test
mov
jae
ffreep
inc
mov
iret
fcomp
daa
stos
xchg
pushf
xor
inc
sbb
push
inc
mov
out
sub
(bad)
loopne
in
dec
out
lahf
xchg
jecxz
ins
jns
stos
and
icebp
enter
sbb
lds
inc
shl
inc
out
jb
inc
fild
push
mov
pop
or
sbb
idiv
pop
xchg
les
jecxz
jnp
mov
xor
(bad)
xchg
cmp
mov
adc
add
rcr
outs
mov
sbb
pop
mov
jo
xchg
jnp
adc
push
cmc
in
and
dec
popf
or
pushf
stos
outs
jae
sbb
(bad)
adc
into
aad
xchg
jne
(bad)
aam
in
ret
lea
outs
inc
ficomp
mov
and
and
add
scas
inc
aad
pusha
test
pop
out
mov
pop
jge
sbb
xlat
cmp
ficomp
pushf
cmp
ret
dec
aad
jge
call
and
or
in
jb
pusha
jp
jae
fs
adc
loopne
mov
mov
sahf
out
adc
add
in
inc
jecxz
xchg
je
xchg
push
je
ins
mov
push
sub
pop
cdq
hlt
pop
aas
ss
cmps
cmp
sbb
retf
ret
sbb
jb
or
ins
pop
repnz
push
cmp
mov
xchg
sub
xor
movs
ja
mov
sbb
(bad)
js
xchg
fcomp
xchg
sbb
not
or
jmp
inc
mov
(bad)
in
pop
push
retf
mov
cli
inc
div
xor
xor
in
retf
xchg
pop
cmp
fwait
jp
mov
daa
xor
into
and
sbb
pop
and
loop
mov
xor
cmp
inc
jne
mov
fidivr
or
push
out
xlat
xchg
or
inc
xor
add
les
xchg
cmove
mov
inc
mov
or
popf
dec
ret
mov
adc
jo
shl
retf
rol
int3
scas
in
push
cmps
sti
sti
rcr
in
jge
mov
test
fnstcw
mov
dec
cmp
fdiv
pop
lea
js
call
mov
(bad)
in
mov
shr
hlt
mov
add
call
lea
test
out
mov
mov
hlt
dec
add
mov
jbe
xchg
push
cdq
mov
pop
cmp
fsub
cli
push
jbe
inc
arpl
xor
sbb
adc
fcomp
leave
sbb
cld
lods
and
cmp
cmps
mov
xchg
call
and
cmp
in
xor
mov
push
fsub
jbe
cmp
sahf
add
repz
leave
test
mov
jg
loope
jmp
inc
lods
std
outs
ins
imul
cmp
pop
popa
test
in
pop
mul
or
stc
stos
ins
adc
sub
pushf
call
cmps
jge
or
add
pusha
or
xchg
push
fcmovb
pop
adc
clc
(bad)
mov
jns
cmp
(bad)
enter
jmp
xchg
data16
sbb
cmp
sbb
and
mov
jno
xor
xchg
add
lea
icebp
ss
and
fisub
enter
repnz
lahf
cdq
xchg
js
sbb
sbb
addr16
lods
test
xor
std
jg
lock
jp
arpl
rcr
fxch
imul
sub
pop
stos
mov
inc
adc
ret
test
mov
adc
sbb
xchg
pop
add
idiv
pop
mov
jno
adc
dec
add
xchg
jbe
add
cmovle
outs
push
loop
fst
xchg
ret
jae
and
in
mov
or
gs
and
rcr
sbb
xlat
jbe
loopne
icebp
sub
inc
pop
cmp
ds
ja
jge
les
mov
bound
dec
neg
jne
and
cmp
mov
fsubr
pop
jns
sbb
ss
xchg
or
inc
mov
xchg
cld
cdq
xor
inc
fild
stos
je
mov
xor
shl
sbb
mov
or
mov
pop
loopne
cmps
les
(bad)
ins
shr
or
add
add
sbb
repz
mov
sti
dec
dec
and
aad
lods
icebp
sbb
retf
adc
fwait
xchg
imul
add
shl
popf
pop
or
mul
out
ds
outs
(bad)
(bad)
sbb
mov
lds
mov
enter
lods
inc
xchg
mov
cwde
call
das
cmp
jno
jns
in
scas
pop
popf
jno
jecxz
ins
add
sbb
cmp
and
pop
call
or
enter
(bad)
fild
xor
inc
fld
add
icebp
int3
lahf
xor
test
je
scas
adc
cli
ss
mov
je
push
js
outs
outs
in
mov
fs
jl
xchg
out
loope
mov
or
stos
mov
data16
mov
xchg
xchg
mov
or
adc
xchg
daa
daa
sub
stc
icebp
popa
out
lods
mov
cmc
mov
xchg
xlat
dec
xor
popf
sub
aad
loope
movs
(bad)
test
and
push
adc
cmp
sbb
sahf
scas
outs
mov
cdq
inc
dec
retf
push
mov
arpl
and
sahf
mov
aas
aaa
(bad)
mov
stos
or
adc
mov
mov
stos
jmp
push
popf
(bad)
dec
pop
fs
mov
ror
inc
mov
mov
xor
loop
jae
aad
inc
fcom
mov
aam
cmp
repz
mov
add
stos
std
data16
sbb
adc
jp
dec
jne
loope
loopne
mov
add
mov
mov
cli
xchg
popf
test
clc
fiadd
movs
push
add
jl
xor
mov
mov
stos
push
sbb
mov
scas
dec
mov
cmp
(bad)
jnp
jb
adc
jb
pop
jb
fidivr
sbb
pop
jl
dec
adc
retf
fisttp
pop
mov
xor
xchg
fmul
push
das
sbb
lds
and
clc
clc
cmp
mov
sbb
es
dec
retf
(bad)
loopne
mov
in
mov
imul
aas
jg
cmp
push
add
out
shl
jbe
out
aaa
pushf
pop
mov
out
stos
dec
inc
mov
xacquire
xchg
into
int
imul
dec
xchg
sub
aas
jp
push
sub
sbb
jae
out
movs
pop
in
xor
repz
add
into
xchg
fisttp
sti
mov
lods
and
xlat
and
int
ss
mov
stos
gs
add
jg
(bad)
arpl
test
imul
cs
out
shl
stc
les
pushf
rcl
inc
or
repz
push
es
mov
mov
pop
ins
in
mov
xchg
inc
stos
xor
fiadd
mov
mov
adc
inc
mov
xor
sbb
jl
mov
das
adc
push
mov
jle
jmp
mov
cwde
sub
popf
sti
dec
jg
popf
shl
test
aas
sbb
dec
sub
or
pop
mov
icebp
push
sbb
lock
test
mov
pusha
clc
cs
addr16
sub
sub
mov
rol
imul
mov
jno
xor
mov
pop
cmps
jns
inc
push
ret
into
test
or
ret
push
push
add
addr16
and
imul
mov
rol
call
cmp
ret
pusha
mov
movs
enter
xor
mov
mov
inc
shl
dec
scas
imul
add
pushf
cdq
mov
add
mov
gs
int
dec
shl
cmp
mov
add
loop
mov
cmps
pop
xchg
pop
ret
fist
rcr
dec
mov
mov
icebp
imul
test
and
push
pop
inc
lahf
adc
inc
dec
add
mov
ss
in
jne
adc
mov
add
enter
mov
mov
adc
cmc
mov
jp
push
cmp
into
xor
outs
loopne
mov
fs
push
lds
xor
add
pop
test
in
pop
sub
fidiv
sub
call
inc
cmps
push
mov
pop
or
out
add
in
mov
mov
mov
jo
mov
mov
lea
push
push
ret
hlt
out
stc
jmp
mov
es
sub
add
push
dec
adc
push
mov
xor
setae
sub
mov
push
mov
push
cmp
mov
mov
mov
or
mov
cmp
daa
sbb
inc
xchg
inc
add
repz
js
or
das
jmp
lea
add
inc
inc
or
arpl
dec
mov
shl
cmp
push
pop
lods
imul
push
jmp
and
imul
pop
iret
movs
into
push
cs
mov
(bad)
(bad)
loope
out
jo
mov
mov
sbb
adc
outs
lods
cmps
inc
dec
mov
cdq
test
cmp
mov
bound
inc
inc
dec
mov
lea
nop
outs
adc
mov
pop
pop
lock
cdq
xchg
jp
xchg
cs
pop
mov
sbb
pop
jno
lea
xlat
arpl
js
popf
(bad)
lds
sar
push
(bad)
es
clc
push
fldcw
(bad)
aaa
sahf
retf
cmp
loopne
mov
jnp
shl
out
dec
shl
popa
fistp
in
and
mov
push
add
test
dec
loop
int
shl
shl
xor
inc
adc
mov
push
sub
sub
cli
(bad)
scas
sbb
inc
or
mov
daa
mov
fiadd
pop
clc
pop
dec
pop
xor
dec
jnp
or
xchg
xchg
push
dec
push
xlat
jge
xchg
out
test
cwde
sub
(bad)
push
inc
mov
outs
add
mov
ja
xor
push
movs
mov
add
outs
popa
jns
(bad)
sbb
lock
adc
dec
push
(bad)
(bad)
in
jo
jne
aam
loop
mov
jecxz
xchg
jle
loopne
sub
fstp
and
rcr
jmp
xor
add
cmp
mov
dec
sbb
xor
rcl
push
and
inc
push
xor
and
xor
or
cmps
push
test
jmp
xchg
das
sub
(bad)
es
mov
scas
in
gs
cmp
lock
fwait
sub
pop
xchg
lahf
add
cld
cld
aad
or
pop
arpl
lahf
ja
or
loopne
adc
bound
pop
mov
cmp
das
bswap
pop
adc
(bad)
aaa
jp
mov
mov
dec
jl
xchg
pop
add
jno
pop
jne
or
test
push
dec
fild
int3
push
je
ins
mov
in
repnz
repz
shl
jge
lods
in
mov
inc
icebp
cs
cwde
out
test
(bad)
pop
test
sub
jnp
sbb
mov
mov
stc
mov
loope
pop
ror
mov
retf
lods
rcl
pop
mov
repnz
xor
push
push
cmc
icebp
push
(bad)
adc
js
xadd
jnp
push
push
xor
jmp
push
lds
mov
std
mov
xchg
(bad)
inc
inc
jmp
(bad)
shl
and
movs
test
sub
out
sbb
lock
mov
cmp
or
or
lods
fwait
or
mov
push
sub
dec
dec
cmp
add
int3
cmp
scas
sbb
cld
push
(bad)
fsubr
imul
hlt
loopne
pop
mov
loop
xchg
icebp
adc
je
pop
fist
fadd
push
test
mov
sbb
out
in
shl
cmp
add
out
sbb
inc
mov
pop
inc
adc
adc
add
enter
or
gs
xchg
xchg
cmp
sbb
in
fnstsw
xchg
xor
mov
add
imul
mov
inc
add
int
jne
inc
(bad)
push
jno
repz
mov
cs
(bad)
and
jge
fwait
adc
mov
sti
lahf
imul
imul
jle
pop
cmc
xchg
mov
mov
xchg
pop
jg
ror
ds
stos
out
int
or
ja
hlt
sub
pop
sbb
mov
lock
scas
out
push
xchg
int3
xor
add
pop
xchg
dec
retf
scas
dec
sti
mov
mov
ret
mov
cld
pop
popf
mul
jno
sub
pop
cdq
and
fmul
daa
fstp
pop
sub
ds
mov
aas
inc
pushf
pop
mov
xchg
mov
(bad)
loope
or
add
xchg
fisttp
aam
cmc
out
jo
mov
sbb
dec
pop
push
mov
inc
test
jbe
xchg
mov
and
jle
stc
and
inc
jne
(bad)
lods
das
xor
out
(bad)
push
or
into
lock
fs
popf
and
sbb
push
ins
ss
jl
inc
add
and
hlt
test
cld
sbb
push
in
pop
add
and
mov
ins
xor
call
dec
sub
idiv
push
or
int
enter
(bad)
mov
aad
inc
add
ror
mul
inc
ins
or
fwait
sbb
cmps
shl
cli
sahf
xchg
ror
sti
cmp
aad
scas
sbb
sahf
xor
push
(bad)
mov
xchg
add
je
jge
mov
neg
jle
inc
enter
jge
push
int3
mov
or
jge
cdq
adc
inc
and
lds
movs
out
pop
xchg
aas
call
int
nop
dec
xchg
dec
cli
xor
adc
or
retf
ds
arpl
lock
ret
shl
cmp
icebp
ja
push
xor
cli
in
mov
sbb
jb
sbb
pop
movs
lea
dec
pop
hlt
lahf
mov
(bad)
dec
mov
mov
jb
test
enter
dec
push
scas
add
xchg
cmp
sahf
sub
call
jo
or
mov
cmp
fiadd
leave
retf
pop
sti
xor
adc
add
fcomip
sub
push
sbb
mov
test
jge
add
and
cmp
pop
mov
lds
or
jle
ret
ja
add
stc
(bad)
xchg
xchg
popa
ins
fabs
inc
cdq
jg
mov
add
in
inc
aaa
imul
lods
sub
dec
out
enter
mov
outs
push
mov
cmp
mov
ins
pop
sub
hlt
and
mov
movs
add
clc
dec
lods
loopne
add
test
sub
inc
scas
int
cld
ins
xchg
das
data16
inc
aam
call
xchg
in
mov
fstp
cli
xchg
sbb
sbb
xchg
inc
std
push
mov
ret
push
mov
adc
jmp
or
je
outs
cdq
call
sub
jbe
ret
std
(bad)
idiv
fsub
mov
shl
pop
gs
inc
data16
dec
enter
aad
out
dec
gs
sar
xchg
outs
js
push
stos
fs
mov
loop
movs
xor
movs
and
mov
cli
test
mov
dec
cli
mov
and
or
cmp
cdq
mov
xor
jns
pushf
mov
arpl
js
jl
push
xor
and
xchg
scas
dec
cmps
mov
out
cvtps2pd
sbb
xchg
les
into
inc
es
mov
cmp
mov
aam
rcr
mov
movs
je
pop
outs
sub
loop
mov
mov
jne
inc
ficomp
loop
xor
rcr
in
push
test
pop
push
ja
dec
add
xchg
outs
or
iret
repz
or
lea
lea
div
pop
and
jb
cld
ret
and
ffreep
call
jmp
ret
and
xor
sub
int
popa
lods
mov
pushf
mov
mov
loope
ss
jnp
cmps
fwait
adc
in
add
sub
inc
and
mov
and
scas
leave
fwait
cmp
or
in
mov
fsubr
or
or
aas
call
push
ret
jo
jmp
cmp
enter
push
jge
loope
fadd
fs
bound
cld
(bad)
scas
aaa
cdq
stc
adc
pop
int
test
mov
jmp
gs
add
in
adc
lds
pusha
mov
ds
loope
mov
imul
inc
inc
adc
sub
mov
add
mov
shl
outs
pop
popa
movs
mov
xchg
jns
test
cmc
cmps
retf
jb
pop
jecxz
dec
neg
pop
pop
jb
jge
out
mov
inc
xor
adc
add
pop
int3
push
(bad)
int3
jecxz
adc
mov
int
or
and
test
and
scas
pop
push
or
scas
aaa
pop
out
jmp
jnp
adc
(bad)
add
in
xchg
fld
(bad)
dec
clc
loop
sbb
icebp
push
outs
test
sbb
fisubr
dec
data16
mov
mov
push
jge
mov
mov
pop
xchg
cmps
dec
fdivp
aaa
sahf
or
jp
pop
into
ins
hlt
ret
or
pop
push
pushf
(bad)
imul
das
jae
cmp
cmp
daa
loopne
add
adc
(bad)
push
ss
xchg
out
popf
pop
add
sbb
sub
test
cmp
pop
jmp
aas
cwde
mov
jb
nop
dec
enter
push
(bad)
(bad)
call
cmp
fwait
lods
int3
adc
fwait
mov
mov
je
lods
cwde
mov
(bad)
es
stc
cmp
mov
xor
or
xlat
mov
xchg
xchg
sub
popf
clc
ret
dec
loopne
xchg
shr
xchg
jbe
and
daa
cmp
loop
push
scas
hlt
out
push
aam
add
push
icebp
push
push
fdivr
jno
mov
mov
test
out
pop
rcl
outs
shl
sbb
pop
in
jbe
ds
shl
cmp
out
or
xchg
loop
mov
xchg
mov
pop
js
push
scas
lods
mov
mov
pop
mov
addr16
shl
out
jne
mov
mov
neg
ins
mov
das
fmul
sub
pop
je
aas
jne
and
xchg
ficom
fcmovb
mov
test
ins
in
ins
push
in
xchg
or
push
push
test
dec
sar
and
pop
enter
scas
xor
xchg
fidiv
movs
cbw
ret
jg
xor
jmp
mov
push
in
aas
nop
aas
sbb
pop
sub
add
(bad)
(bad)
push
xor
arpl
fmul
test
mov
add
cmp
fcom
mov
scas
jg
in
sub
sub
test
ror
inc
mov
jmp
ret
add
push
fisttp
int
sub
sahf
jmp
pop
dec
jge
ds
xlat
int
dec
in
pop
cmp
push
jns
aam
adc
out
js
fidiv
in
or
add
js
aam
mov
mov
jmp
pop
xchg
jp
add
inc
lds
mov
mov
popa
std
cwde
out
dec
imul
scas
jbe
jo
leave
cmp
stc
jne
movs
and
or
lock
adc
leave
jae
dec
adc
jb
jg
les
in
jns
mov
loope
es
es
in
jns
push
jmp
add
sub
dec
nop
pop
ret
out
shl
mov
ror
scas
scas
sbb
loopne
pop
cmp
mov
sahf
outs
daa
leave
enter
mov
push
jbe
lahf
push
and
ss
retf
outs
sbb
fucomp
into
adc
jnp
xor
pop
aas
xor
xor
outs
aaa
adc
cmp
xor
das
(bad)
or
or
fs
cdq
fs
add
frstor
sub
mov
jo
mov
icebp
popa
out
push
cmp
ja
mov
mov
imul
adc
sbb
jl
fcomp
mov
xlat
push
adc
aad
nop
cmps
in
xchg
icebp
shl
mov
mov
pop
mov
bnd
mov
and
mov
mov
cmp
mul
or
and
mov
les
pusha
(bad)
(bad)
jo
retf
jl
outs
dec
and
into
hlt
daa
pop
aam
push
push
sar
adc
pop
fwait
jnp
pop
(bad)
mov
lea
ins
or
pusha
lahf
cld
or
push
mov
rcr
mov
mov
pop
pop
js
call
loopne
add
aas
inc
fnstenv
and
nop
stos
in
sub
sub
add
loop
pop
push
into
adc
or
mov
mul
xor
aas
xor
xor
in
inc
adc
adc
in
mov
arpl
inc
das
jmp
ss
xor
std
cdq
jl
push
jp
retf
push
mov
sub
mov
cmc
(bad)
imul
outs
fcmovbe
xchg
dec
add
test
sub
fisttp
scas
pusha
jmp
jmp
cmp
push
xor
sbb
and
movs
ret
hlt
adc
ret
movs
cmps
sbb
add
dec
adc
mov
inc
push
push
sbb
mov
dec
addr16
cmp
push
cmp
mov
sbb
cwde
sub
jp
test
xor
sub
inc
dec
jecxz
push
aaa
cmp
adc
rol
mov
test
cmp
into
cmc
dec
pop
ds
fdivr
fcom
cmps
ins
inc
imul
or
call
mov
cs
dec
fwait
imul
mov
and
or
adc
aad
mov
cs
imul
lods
cmps
enter
sub
adc
nop
xor
xor
sub
aad
out
xor
loopne
(bad)
iret
daa
mov
mov
jge
push
aaa
mov
xchg
pop
jmp
xchg
into
mov
adc
mov
je
jl
add
jnp
imul
jns
mov
jmp
fwait
js
and
ret
add
push
jl
push
lods
dec
repz
neg
mov
movs
test
dec
sbb
dec
icebp
lds
add
adc
jnp
pop
pop
stos
cmp
adc
mov
rcr
pop
fsubr
fild
ss
add
jne
arpl
sar
xchg
mov
lods
xchg
sbb
mov
(bad)
sub
xor
cmp
push
sub
fcmovbe
jo
out
mov
jae
or
push
mov
shr
push
mov
popa
xor
jg
clc
aas
sub
xchg
movs
or
loop
add
mov
xchg
xor
push
aad
pop
aaa
sbb
ror
rol
pop
inc
ror
pushf
mov
cdq
arpl
in
jbe
jnp
shr
sbb
call
jno
mov
imul
test
sar
jp
fwait
cld
dec
or
mov
jg
mov
push
xor
and
outs
cmp
cli
cdq
mov
inc
mov
fdiv
fprem
imul
mov
dec
aas
dec
shl
mov
pop
dec
cmps
lods
dec
ins
ds
inc
cld
addr16
xlat
jns
pusha
jnp
or
sbb
add
fidivr
adc
and
out
add
jecxz
popf
nop
push
cs
push
sti
in
pop
(bad)
shl
cmp
fsubr
cmp
or
mov
mov
adc
fidivr
in
fiadd
loop
enter
pusha
(bad)
bound
scas
in
add
shl
icebp
test
int3
mov
push
jo
dec
clc
retf
daa
cli
inc
xchg
sbb
push
dec
hlt
sub
and
add
ins
repz
cmp
xchg
imul
(bad)
push
rcl
gs
rcr
ds
aas
aad
ins
push
or
in
cli
push
ffree
test
xchg
pop
xchg
outs
add
dec
aad
push
pusha
jmp
xchg
lahf
cs
jno
dec
mov
int
cmp
xor
fs
pop
imul
cmp
mov
es
pop
mov
mov
cmc
add
ins
sti
nop
std
or
ins
xchg
sub
xchg
nop
or
sub
fidiv
loope
adc
adc
lds
mov
test
push
popa
clc
xor
aaa
add
mov
xor
lds
shl
dec
int3
push
les
outs
sbb
je
dec
lods
out
jle
xor
cdq
arpl
inc
sbb
sahf
adc
jnp
push
lahf
xchg
test
std
xchg
rol
push
(bad)
jne
es
shl
mov
dec
xchg
jb
pop
int
adc
je
or
loopne
mov
and
mov
jl
inc
int
inc
push
or
xchg
popf
pop
rcr
and
aam
loop
inc
loopne
fdiv
bound
pusha
imul
dec
arpl
mov
adc
in
jmp
imul
cwde
out
imul
jnp
(bad)
xor
lods
xor
mov
push
inc
in
mov
jle
push
dec
outs
imul
shr
dec
(bad)
cdq
sbb
sbb
push
or
outs
int
and
ins
sbb
imul
and
mov
sub
fist
xchg
sbb
adc
mov
inc
jmp
repnz
jne
stos
jmp
(bad)
jecxz
xor
loopne
cmp
or
adc
addr16
mov
mov
repz
push
lods
sub
jbe
push
xor
dec
pusha
js
stc
enter
sub
je
xchg
jae
lock
jl
jno
(bad)
xor
ss
add
sub
test
adc
push
pop
aaa
adc
push
fadd
outs
sub
push
pop
and
ins
fcom
mov
pop
pushf
sub
outs
cmp
aad
lds
inc
sub
stos
stos
jo
and
or
fnstcw
ins
pusha
int3
aad
pop
retf
pop
mov
mov
push
in
mov
mov
js
aas
dec
movs
ja
aas
mov
push
inc
push
out
mov
es
mov
ja
int
push
shl
jle
sbb
and
cmp
and
mov
dec
call
leave
and
adc
es
jmp
cld
ficomp
imul
mov
ret
sbb
sub
or
(bad)
out
cmc
xchg
movs
fnstcw
pop
rcr
jb
ins
mov
dec
cli
xor
stos
inc
xor
cmp
jecxz
and
push
pop
mov
stc
mov
jbe
je
stos
bound
mov
cld
fcom
inc
(bad)
and
jo
pop
test
add
mov
jb
inc
popf
push
mov
mov
xor
ret
jle
(bad)
xor
cmp
push
jmp
cwde
aas
mov
dec
or
pop
(bad)
sub
lea
repnz
stc
call
push
mov
and
and
add
pop
dec
inc
push
stos
xor
push
jl
sbb
clc
pop
(bad)
mov
cwde
mov
(bad)
adc
dec
movs
aad
in
ins
daa
sbb
cli
rol
cmp
xchg
pop
sub
adc
test
jge
mov
test
jne
fwait
mov
lds
call
dec
jmp
inc
sub
mov
mov
mov
sbb
jbe
ret
cmc
sub
add
mov
xchg
aas
pop
xchg
mov
packsswb
hlt
push
mov
adc
xor
ja
xchg
je
sbb
and
push
mov
mov
mov
pop
add
dec
jp
jmp
(bad)
ja
sub
sbb
jae
sub
sub
arpl
dec
inc
dec
aas
push
inc
fild
mov
cs
mov
jb
mov
mov
aam
push
loopne
xor
lock
xchg
stc
test
(bad)
jb
mov
fisttp
jmp
sti
push
and
mov
push
xchg
ins
icebp
mov
xor
fbld
cmpps
cmp
mov
pop
sub
mov
into
bound
add
mov
dec
jge
jle
movs
xchg
ins
dec
mov
sbb
cli
jge
and
outs
movs
retf
jmp
bound
(bad)
movs
movs
lods
in
out
fst
mov
mov
xor
add
out
jmp
call
xadd
xor
movs
les
mov
ret
mov
sub
xlat
xchg
imul
sbb
frstor
cmp
push
out
out
hlt
imul
xor
data16
daa
and
stos
dec
xchg
shl
cmps
mov
(bad)
sahf
lock
mov
push
ds
adc
push
into
mov
dec
stos
or
sub
stos
cld
sub
aas
movs
and
mov
push
and
pop
or
or
out
push
or
repnz
(bad)
cmps
mov
pop
mov
jnp
stos
cwde
stos
test
cmp
fsubr
jne
cmp
daa
or
dec
(bad)
mov
int3
cmp
sbb
mov
or
lods
into
sbb
stos
jnp
ror
sbb
fsubr
pop
dec
dec
pop
nop
addr16
dec
inc
lds
rep
mov
add
test
test
lahf
(bad)
push
(bad)
cmc
cmp
adc
inc
ins
xor
fst
dec
shr
xlat
imul
mov
(bad)
xchg
jne
cmps
inc
inc
inc
popa
repz
(bad)
(bad)
popf
xor
or
cmp
out
mov
xor
ds
aaa
push
add
sahf
mov
in
scas
repz
sbb
fst
mov
in
pop
(bad)
cwde
mov
cli
push
fiadd
xor
jo
clc
popa
jmp
bound
fs
push
scas
or
sbb
inc
sub
push
in
jns
cmp
repnz
dec
xor
icebp
dec
fidivr
and
pop
test
fs
pop
pop
dec
inc
(bad)
and
sub
aaa
clc
fsincos
jmp
fsub
dec
and
sub
inc
mov
and
hlt
mov
mov
dec
xchg
iret
sub
jecxz
shl
adc
mov
popf
iret
jae
repz
xchg
sub
push
xchg
xor
cmp
dec
cmp
mov
jmp
clc
mov
hlt
add
pop
add
or
sbb
mov
mov
fdiv
inc
call
adc
icebp
movs
cmp
enter
xchg
push
lods
or
sbb
ds
imul
mov
sub
or
and
(bad)
lahf
std
test
int
push
sub
clc
addr16
pop
and
inc
stos
pop
movs
cmc
xor
jmp
sub
jns
adc
ins
retf
pushf
or
jmp
dec
fisttp
push
nop
addr16
ds
outs
mov
iret
clc
xor
xchg
dec
stc
jb
push
imul
outs
mov
jb
clc
adc
into
and
mov
mov
aam
mov
ss
sub
aas
mov
inc
sbb
mov
cmp
test
int3
add
clc
and
push
rcl
repz
inc
sar
addr16
test
mov
mov
pushf
xacquire
scas
mov
mov
cmp
cmps
add
scas
add
ss
js
cld
mov
dec
outs
cmp
inc
inc
or
sub
cwde
faddp
add
aas
pop
push
(bad)
mov
call
das
jp
mov
or
mov
lods
iret
xchg
imul
mov
fist
ficomp
sbb
dec
cmp
inc
mov
fwait
and
out
and
dec
mul
jb
jo
add
in
xchg
ja
in
cmp
mov
adc
pop
cld
mul
std
(bad)
aaa
and
aas
dec
jmp
call
enter
xor
aas
xchg
scas
dec
and
std
sti
mov
sub
cdq
outs
jmp
cld
lods
or
addr16
inc
cmc
or
imul
xor
jg
push
adc
fistp
add
sti
or
les
stos
cmc
push
shr
and
xor
nop
push
push
(bad)
loope
push
mov
dec
xchg
test
(bad)
mov
push
adc
leave
js
in
push
dec
adc
(bad)
xchg
mov
xchg
test
movs
ds
jo
scas
and
cmps
popa
adc
sub
cmps
dec
jmp
in
mov
data16
addr16
push
pushf
fimul
jne
or
push
sub
repnz
mov
scas
fiadd
sbb
add
test
out
xor
mov
popf
stc
lods
or
loope
mov
xchg
push
dec
jl
in
add
popf
inc
xchg
imul
mov
fidivr
ja
dec
xor
cmp
(bad)
xor
jge
shl
out
retf
or
cmp
loop
cs
data16
(bad)
jnp
ja
dec
fcomp
inc
adc
adc
push
pop
dec
int3
enter
jo
mov
jg
(bad)
cmp
sti
xchg
jbe
mov
or
imul
xchg
mov
scas
stos
lods
mov
dec
sbb
dec
sub
retf
push
cmp
adc
sti
xchg
in
sahf
xchg
fstp
pop
lds
jmp
cs
test
jmp
pop
pop
sahf
arpl
jp
sub
in
inc
adc
jecxz
sub
push
aam
arpl
test
shl
out
push
adc
jb
imul
imul
or
adc
xchg
inc
dec
out
std
nop
add
push
pop
cmp
mov
or
fs
lods
mov
xor
les
mov
icebp
mov
je
ja
xor
test
and
or
jnp
ins
mov
pop
or
xor
adc
call
pop
cmp
aas
push
xchg
xchg
ret
idiv
dec
shl
xor
add
dec
cld
cmp
fisttp
adc
into
stos
dec
iret
adc
sar
jle
out
push
push
cli
sub
call
cs
lea
jl
xor
fild
sbb
add
cmps
pop
sti
xchg
mov
inc
ror
xchg
clc
or
and
dec
js
and
and
loop
add
xor
mov
sbb
shl
scas
adc
ins
sbb
(bad)
mov
push
sbb
mov
push
push
sbb
mov
mov
cld
xchg
aaa
scas
out
push
add
cdq
cli
call
add
lea
fld
jns
aas
ret
xchg
add
sti
inc
add
stos
call
jne
(bad)
mov
mov
cmc
cld
dec
shl
gs
call
push
sub
xchg
or
mov
shr
mov
mov
pop
pop
adc
iret
jl
push
add
mov
mov
xor
cli
xchg
mov
stos
mov
sbb
push
fidiv
call
pop
and
js
test
add
jns
push
mov
cmps
cmps
adc
jno
mov
dec
xor
sub
cmp
gs
lock
jbe
jo
mov
cmp
xor
fadd
aam
je
scas
cmp
sbb
int
xchg
adc
cmp
sub
inc
stc
mov
sti
pop
inc
dec
xchg
xlat
mov
push
xchg
data16
xchg
imul
in
scas
fisttp
xchg
pop
inc
cmp
cdq
cwde
movs
push
ror
(bad)
rol
icebp
ja
(bad)
sbb
scas
aaa
arpl
cmp
sbb
pusha
mov
stos
(bad)
outs
adc
jno
aas
jmp
sahf
outs
loope
rcl
or
or
mov
fidiv
(bad)
cmp
aaa
push
xchg
cmps
pop
inc
(bad)
aas
movs
outs
loopne
inc
shl
scas
ss
sbb
test
int3
push
(bad)
mov
push
xchg
leave
cli
xchg
jge
sbb
(bad)
xor
jmp
xchg
loope
stos
retf
push
les
mov
jle
dec
xor
cs
mov
test
mov
stos
js
cli
sub
pop
das
pop
add
test
adc
inc
sahf
les
dec
fnsave
movs
idiv
xchg
mov
adc
shl
add
inc
pop
pop
out
adc
retf
sub
pushf
add
and
pop
out
xlat
push
dec
test
mov
adc
dec
scas
cmp
xchg
in
pop
push
and
mov
add
test
inc
cld
imul
push
loop
mov
mov
aam
in
and
jo
sbb
push
(bad)
popf
das
fcomi
push
jge
xchg
push
nop
or
pop
repnz
and
addr16
mov
pushf
out
test
les
mov
ret
fisttp
stos
sbb
sahf
push
clc
push
imul
push
mov
adc
(bad)
jno
push
lds
fcomp
mov
lock
push
or
fdivr
sub
cmc
pop
popa
mov
in
loop
fwait
cmovg
mov
mov
mul
jecxz
mov
les
xor
lock
fwait
push
adc
push
and
push
cmps
es
push
ror
sbb
dec
cmp
xchg
mov
sar
aam
inc
xlat
in
popa
fidivr
fmul
push
xor
fwait
repz
cmp
mul
cmp
xor
fidivr
inc
and
dec
mov
jb
sahf
jge
push
or
hlt
aam
mov
cmp
inc
and
icebp
or
jae
rol
jno
jmp
in
mov
add
loope
std
mov
pop
setg
pop
mov
mov
fmul
clc
pop
aaa
lods
xor
push
(bad)
fdiv
jge
cmps
js
les
mov
mov
push
or
add
pop
add
mov
xchg
or
stc
sub
jno
cwde
and
imul
sbb
mov
push
jmp
out
icebp
adc
push
aas
pop
leave
mov
sub
movs
xchg
stos
mov
cmp
inc
and
mov
sub
lods
pop
adc
mov
jo
sbb
(bad)
cld
cmp
push
sti
push
mov
adc
cld
inc
std
xor
sub
(bad)
adc
into
div
push
cmps
cmps
adc
popf
mov
imul
cmp
dec
or
mov
(bad)
or
or
push
int
rcr
xor
scas
(bad)
cmp
sub
movs
fwait
repz
int
out
pop
std
pop
xor
enter
mov
sub
jg
ror
imul
push
xchg
test
pop
xchg
xchg
fs
(bad)
dec
clc
outs
(bad)
aaa
sahf
sbb
cmp
rcl
int
dec
andps
in
mov
imul
es
stos
dec
or
call
xor
test
xchg
mov
or
xor
loope
dec
mov
shl
mov
cmp
ror
pop
inc
push
loop
adc
pop
daa
(bad)
lds
jmp
mov
xor
mov
add
jle
sti
inc
gs
arpl
inc
jne
cmc
popa
call
(bad)
xor
mov
(bad)
lock
or
mov
imul
fimul
inc
pusha
inc
mov
xlat
(bad)
push
mov
clc
push
add
in
popf
fst
sub
cmp
mov
idiv
rol
or
add
ret
or
mov
xchg
adc
and
inc
or
inc
in
data16
xor
fild
mov
enter
stos
cs
ds
out
jb
rcl
ins
hlt
pop
adc
ret
test
dec
dec
or
sbb
xor
sbb
and
jbe
xchg
fst
pop
sbb
mov
cmps
push
xchg
or
fidiv
mov
into
std
or
icebp
aaa
dec
es
xchg
inc
xchg
push
test
loope
ins
or
aas
movs
mov
and
or
clc
dec
pop
mov
mov
add
jp
movs
push
addr16
pop
and
sub
or
ror
mov
sahf
add
out
ja
pop
ficomp
mov
cmc
push
out
iret
sub
push
ror
add
mov
imul
adc
in
or
aad
xchg
data16
stc
(bad)
ds
ds
retf
out
pop
es
push
add
leave
es
fsubrp
sbb
inc
data16
mov
jae
bound
loop
sbb
iret
push
fist
inc
mov
xor
inc
test
popf
pusha
jno
mov
ret
add
ror
jp
fisubr
pop
je
ds
mov
enter
nop
popf
dec
ja
jg
hlt
push
jg
les
or
icebp
cmp
push
test
add
push
mov
mov
pushf
test
cmp
jns
lds
clc
dec
stos
loopne
sbb
arpl
dec
idiv
mov
push
(bad)
mov
sub
inc
xchg
push
lods
xor
sub
pusha
mov
mov
xchg
jno
sub
outs
mov
push
pop
xchg
mov
test
mov
mov
jp
push
xor
cs
xchg
fcom
pop
out
repnz
mov
into
inc
loope
sti
and
pushf
imul
jbe
iret
adc
retf
push
and
lea
cmp
paddsb
or
sbb
arpl
shl
add
or
dec
mul
pop
sbb
add
cmps
fidiv
dec
mov
outs
and
sbb
and
mov
out
cmp
cdq
fdiv
in
stos
lods
js
adc
mov
adc
xor
dec
adc
xor
call
push
dec
xchg
mov
cdq
pusha
xchg
cli
neg
stos
mov
cs
cli
loope
cmc
mov
mov
addr16
movsx
in
leave
adc
dec
inc
stc
outs
ret
movs
je
jmp
push
pop
sti
movs
retf
mov
mov
xor
adc
fisttp
retf
iret
iret
imul
into
push
mov
or
sbb
stos
repz
fist
sbb
push
iret
cmps
fwait
icebp
jb
div
push
test
add
aam
mov
cdq
movs
jmp
xor
movs
mov
into
clc
inc
bound
xor
push
call
xor
cmp
xor
fistp
aas
mov
fadd
pop
fst
inc
repnz
inc
inc
mov
xchg
call
mov
outs
jns
inc
mov
dec
adc
inc
or
jae
test
js
out
sub
pop
pop
push
pop
push
mov
mov
sbb
retf
loope
mov
dec
xor
sbb
or
inc
icebp
xchg
div
addr16
sub
mov
and
cld
sbb
rcl
mov
push
mov
push
jp
lods
sbb
int
loop
mov
into
push
push
inc
jo
dec
ret
nop
cmp
and
adc
in
add
popf
cmps
aad
inc
add
rcl
in
mov
imul
(bad)
and
sar
icebp
jmp
push
or
(bad)
repnz
xor
pop
adc
adc
scas
sar
sub
aam
popa
or
mov
ja
int
xchg
and
test
pop
add
popa
div
push
sti
aaa
mov
std
cmovns
nop
sub
es
xchg
out
stc
cmp
test
mov
xor
jl
mov
jo
nop
pop
sar
mov
les
cmc
and
aam
mov
xchg
in
std
cwde
xor
into
aad
pushf
push
call
xchg
loopne
inc
and
or
mov
(bad)
std
mov
or
pop
jge
and
inc
imul
dec
lahf
pushf
leave
out
pop
cwde
dec
sub
ja
push
fiadd
scas
xor
and
or
out
addr16
pop
bswap
sub
xor
sub
push
cli
fimul
loope
xchg
cmp
pop
xor
mov
enter
cs
mov
push
hlt
outs
(bad)
push
(bad)
outs
arpl
into
(bad)
(bad)
mov
xchg
fstp
aaa
mov
adc
aas
mov
add
lahf
mov
xor
out
inc
sbb
test
adc
cmp
outs
jle
jl
(bad)
out
out
cmp
lods
cmps
shl
mov
dec
mov
mov
jne
lods
inc
pop
enter
pop
xor
sbb
add
int
or
jne
or
out
sub
les
mov
out
popf
addr16
(bad)
scas
ror
lahf
std
jmp
push
fcmovnb
(bad)
stos
popa
push
push
nop
xor
daa
(bad)
lock
aaa
fisttp
inc
arpl
mov
jno
popa
xor
push
dec
inc
in
pop
xchg
dec
add
fld
test
out
and
jbe
dec
test
(bad)
(bad)
adc
(bad)
jb
xlat
mov
(bad)
imul
mov
sub
cmp
popf
in
bound
jbe
in
xchg
gs
fadd
dec
cmp
push
and
sbb
pushf
mov
fild
xor
cmp
pop
aad
fcomip
movs
dec
scas
add
mov
gs
cmp
jmp
retf
jno
(bad)
pop
iret
jmp
fst
sbb
lahf
out
and
out
dec
imul
and
adc
add
push
mov
add
sar
ja
dec
add
(bad)
pop
imul
test
nop
pop
xlat
xchg
retf
fisttp
or
cmp
sub
pop
xchg
xor
js
ffree
jns
mov
or
fld
push
pop
pop
sub
xor
mov
outs
sbb
pop
add
dec
add
push
int
pop
lods
repz
cmp
inc
mov
dec
cld
jmp
push
test
cli
xchg
mov
mov
or
jg
aad
pop
mov
adc
push
outs
and
cmp
jnp
div
mov
push
iret
and
arpl
add
cwde
fwait
mov
sbb
aaa
sahf
ret
outs
add
enter
xor
add
inc
ffree
outs
xchg
inc
add
inc
cmp
shl
pop
adc
loopne
loop
sar
xor
push
adc
je
fadd
sub
pop
adc
mov
sbb
adc
pop
ss
sub
retf
and
shl
inc
out
js
sar
lds
mov
bound
inc
or
stc
jp
movs
jbe
and
jns
jae
movs
loop
in
jl
js
sbb
dec
or
stc
push
add
and
mov
fsubr
sub
xchg
das
arpl
cmp
dec
out
cli
fnstcw
sbb
jmp
enter
dec
lods
aaa
int
adc
pop
xor
sub
fdiv
mov
mov
push
sub
ret
inc
loopne
mov
or
aas
mov
sahf
cmps
sub
mov
xchg
push
into
adc
pop
xchg
pop
mov
in
test
jo
jg
out
je
xchg
push
stos
div
adc
das
loopne
fisttp
pop
mov
retf
test
mov
or
push
push
add
adc
jl
mov
in
or
inc
fcomp
sti
add
xchg
jmp
xor
jecxz
pop
loope
jb
(bad)
cmp
push
sub
mov
mov
addr16
repz
ins
in
mov
scas
pop
cmps
ror
fnstcw
cmp
jne
or
enter
call
sbb
xchg
jo
mov
stos
gs
gs
test
mov
and
sbb
mov
mov
fsubr
jmp
inc
adc
sahf
arpl
add
test
adc
xchg
stos
stos
(bad)
retf
aad
loop
sub
lds
js
sbb
mov
popa
xor
bound
pop
adc
adc
mov
daa
sub
ror
and
arpl
push
pop
xchg
sub
fdivr
ins
fstp
sbb
or
and
fs
xchg
sub
inc
out
cmp
inc
lods
cmps
push
or
dec
cmp
and
enter
bound
pushf
inc
or
not
cdq
and
(bad)
(bad)
sahf
outs
adc
ins
test
mulps
lock
jo
(bad)
out
ror
push
xchg
mov
mov
outs
popa
lock
mov
inc
add
call
dec
push
out
and
fcomp
adc
jecxz
jns
xor
inc
out
shl
int
shl
outs
ret
retf
jo
jl
retf
inc
es
cmp
and
call
je
mul
cmp
test
test
dec
mov
add
stc
dec
sbb
dec
xchg
in
xlat
dec
idiv
arpl
movs
mov
or
push
imul
xchg
dec
push
imul
add
sbb
cdq
mov
call
inc
test
adc
xchg
xchg
ret
jbe
ins
mov
int3
int
lea
mov
mov
dec
dec
xchg
inc
pusha
push
dec
loope
inc
inc
or
nop
inc
sub
ds
sub
loop
pop
or
inc
pop
lods
div
xchg
retf
or
nop
xchg
sahf
push
mov
cld
mov
scas
aaa
test
or
in
xor
shl
test
xchg
rol
push
pushf
pop
mov
movs
stc
cli
lods
mov
js
mov
aaa
adc
xor
aas
mov
jmp
adc
fsub
(bad)
mov
sub
pop
xor
dec
neg
mov
cli
adc
adc
dec
les
mov
lea
pop
aas
dec
mov
pop
int
mov
xor
mov
outs
inc
cmps
sub
pop
pop
mov
or
out
enter
inc
aad
push
pop
pop
xor
mov
test
ins
aas
or
xchg
in
add
prefetch
ret
shl
outs
adc
inc
jb
mov
and
mov
int3
xchg
cmp
fs
cmp
sbb
mov
push
xor
inc
lock
dec
add
mov
je
ins
cmp
sub
pop
dec
xor
pusha
xchg
and
cmp
add
inc
mov
sbb
ins
xor
dec
sbb
fst
and
inc
in
mov
shl
and
fdiv
dec
mov
and
outs
cs
xor
outs
addr16
jle
int
popf
push
ins
iret
xor
(bad)
mov
mov
call
movs
mov
ror
(bad)
in
sar
jae
sub
fsubr
mov
dec
push
mov
fwait
rcr
out
and
rcl
mov
arpl
(bad)
dec
dec
sti
in
lods
gs
xor
test
mov
std
sbb
jmp
cmps
pop
mov
push
cmps
jb
in
jle
adc
arpl
fld
aaa
fisubr
or
inc
push
cmp
jg
arpl
push
fdiv
add
and
jno
enter
loop
in
retf
pushf
gs
push
xor
ja
add
movs
push
fist
out
cmp
pop
or
popf
cmp
imul
call
(bad)
lods
xor
ins
dec
and
aas
pop
ja
jmp
jno
pop
xlat
cmp
jb
lock
ins
jo
scas
int
xchg
(bad)
(bad)
repz
imul
xchg
out
cmp
sub
into
mov
mov
jb
mov
cmp
std
mov
inc
cmp
adc
scas
sub
les
test
lods
or
loop
dec
retf
out
adc
scas
and
fstp
jecxz
mov
out
inc
std
retf
jecxz
imul
pusha
mov
pop
ins
stos
xor
shl
mov
pop
dec
jno
inc
pop
cmp
jmp
cmp
loope
cli
xor
stc
sbb
jmp
in
sbb
xchg
mov
lahf
ficomp
and
adc
(bad)
jmp
cmp
in
sbb
pop
hlt
leave
sub
sahf
in
ss
xchg
xchg
mov
repnz
jns
(bad)
repnz
mov
mov
cdq
dec
daa
fucom
int
dec
inc
inc
jge
cmp
adc
sub
ins
int
fsub
iret
icebp
sbb
and
or
into
lods
mov
dec
dec
push
stc
pop
mov
sub
push
in
imul
test
int
and
and
push
aam
fxch
gs
inc
push
xor
or
push
out
fdivr
enter
mov
add
nop
enter
out
xchg
push
enter
inc
ret
leave
jmp
push
dec
ror
jecxz
stos
jb
mov
push
hlt
ja
mov
jl
jmp
mov
sub
es
into
dec
mov
inc
adc
jo
push
retf
push
inc
push
(bad)
push
xor
push
retf
je
jns
cmp
jo
or
add
or
mov
mov
or
and
iret
cmps
sbb
imul
xor
jl
jns
sub
mov
retf
loop
gs
sahf
idiv
and
iret
ins
leave
or
dec
mov
out
aad
das
jmp
push
sub
pop
pusha
popa
test
inc
movs
mov
jmp
gs
mov
int
gs
stos
push
sub
push
jae
mov
fwait
ins
push
out
mov
out
jae
jecxz
rcr
ficom
adc
or
pusha
int3
and
adc
xchg
and
xor
adc
xor
xor
mov
jmp
xor
mov
mov
pusha
xchg
jo
(bad)
mov
dec
pop
add
lods
pop
aaa
add
mov
sub
xor
(bad)
std
out
into
(bad)
das
inc
test
or
mov
in
add
mov
jmp
cli
stos
and
mov
repnz
mov
sub
(bad)
xchg
in
xlat
stos
das
leave
push
fld
test
xchg
sbb
and
cwde
sub
dec
cmp
inc
imul
inc
xor
cmp
lahf
lods
cmp
jne
in
cmp
ret
icebp
jmp
jp
adc
jg
xchg
jb
out
dec
cmp
(bad)
add
mov
movs
pop
mov
mov
pop
mov
test
push
jl
repnz
mov
fucomp
ror
push
and
gs
(bad)
xor
sbb
in
and
mov
jmp
mov
xchg
rcl
(bad)
sbb
std
retf
es
repnz
shr
push
loopne
and
out
and
nop
leave
xchg
sbb
push
jno
cli
loop
inc
mov
and
jmp
cwde
mov
adc
dec
cmp
ins
cmp
mov
adc
jge
std
xor
jmp
push
xor
iret
(bad)
push
and
cmps
push
dec
jp
enter
ins
rol
in
jmp
add
cmp
xor
cwde
dec
mov
dec
jmp
dec
enter
fiadd
inc
jmp
shl
or
repz
test
imul
sbb
popf
sbb
scas
cli
js
retf
and
jb
mov
sti
push
fisttp
jge
mov
mov
xchg
lahf
add
dec
(bad)
adc
dec
scas
mov
leave
xchg
stos
mov
pop
dec
(bad)
ret
ficom
arpl
xchg
popa
rcl
adc
pop
or
cmp
sub
call
push
in
int3
ror
xor
mov
int
loope
jg
out
dec
dec
sub
jns
jmp
cwde
in
ror
adc
inc
xor
or
fcmovnu
cmp
jno
(bad)
(bad)
enter
jp
cmp
test
jl
xlat
push
and
sbb
or
iret
int3
cmc
leave
lods
pop
push
test
movs
adc
push
inc
or
push
adc
cs
enter
mov
jo
mov
cmp
ret
jl
jge
int3
cld
dec
push
cli
jmp
sar
mov
sub
jg
dec
iret
imul
or
stos
ss
push
cld
lods
add
mov
dec
bound
(bad)
retf
push
in
pop
movs
cmp
mov
jl
adc
(bad)
pop
jge
sar
mov
outs
push
pop
push
movs
mov
jecxz
out
mov
out
(bad)
xor
scas
push
and
mov
imul
mov
or
ins
and
cmp
fwait
adc
xchg
xchg
out
call
outs
cmps
cmps
pushf
and
or
(bad)
add
add
inc
mov
jnp
stos
or
sub
mov
mov
dec
jns
stos
adc
push
add
inc
das
leave
aam
and
(bad)
imul
rcl
pop
pop
xchg
iret
test
push
and
xlat
dec
(bad)
in
xchg
xchg
jne
(bad)
dec
sbb
imul
sbb
mov
mov
aas
jle
pop
cmps
in
gs
mov
push
fistp
in
ficomp
push
mov
out
sub
jb
pusha
jmp
fbld
inc
push
mov
repz
add
and
or
lock
mov
sti
outs
mov
aas
add
loope
repnz
add
mov
cmp
xor
sbb
aaa
sub
sub
and
scas
iret
adc
jno
and
retf
mov
and
push
mov
cmp
sub
add
aaa
xchg
push
leave
lods
icebp
aaa
add
xor
dec
and
cmp
and
pop
mov
aaa
stos
mov
cdq
mov
(bad)
leave
(bad)
sbb
push
in
mov
int3
scas
hlt
and
pop
mov
rol
inc
dec
mov
jnp
inc
push
push
(bad)
and
sahf
mov
pop
jmp
inc
int3
ds
mov
ins
ins
and
cmp
pop
push
jnp
push
add
rcl
js
scas
pushf
rol
fisttp
test
fnstsw
pop
mov
jmp
in
mov
xor
inc
pop
inc
cmp
lea
xlat
or
add
clc
fcmove
cmps
(bad)
aas
mov
(bad)
int3
pusha
je
dec
call
adc
xchg
mov
daa
gs
fiadd
add
add
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
mov
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
mov
mov
mov
lea
mov
mov
movzx
mov
shl
mov
dec
mov
movzx
shl
dec
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
shl
lea
cmp
jae
mov
mov
add
loop
mov
xor
mov
mov
add
mov
xor
cmp
je
movzx
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmp
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzx
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmp
lea
mov
jle
mov
sub
mov
movzx
mov
shl
mov
lea
mov
and
cmp
lea
mov
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
cmp
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmp
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmp
mov
jg
mov
jmp
cmp
jg
sub
jmp
sub
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmp
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
sub
sar
mov
mov
cmp
lea
mov
je
xor
cmp
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
mov
jmp
sub
sub
mov
mov
shr
mov
sub
mov
mov
add
mov
mov
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmp
mov
jg
add
cmp
mov
jle
mov
mov
shl
mov
lea
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmp
ja
cmp
je
shl
movzx
shl
inc
or
shr
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
mov
mov
mov
mov
mov
add
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shl
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
inc
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmp
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
dec
add
add
push
add
push
add
add
