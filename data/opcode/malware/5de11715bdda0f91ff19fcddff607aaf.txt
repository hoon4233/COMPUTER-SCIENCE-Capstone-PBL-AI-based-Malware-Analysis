pop
out
in
add
outs
cs
push
pusha
movs
arpl
jg
and
and
add
aas
inc
(bad)
and
rcl
and
daa
inc
out
daa
and
lods
gs
push
lods
jns
movs
push
sub
dec
adc
cmp
sub
movs
outs
sub
outs
pop
lock
popf
das
retf
test
outs
cs
and
jmp
out
je
cmp
and
outs
daa
ficomp
es
dec
adc
jo
test
jae
fnstsw
cmps
ret
es
cmp
jl
movs
bound
int3
mov
cmp
das
sub
and
sub
imul
sub
scas
fs
lea
fs
cmps
fs
pop
sub
nop
and
lods
arpl
pop
loopne
daa
push
adc
lods
add
lods
and
xchg
sub
movs
and
and
ins
and
cmp
cwde
jnp
daa
and
adc
xchg
sub
sahf
and
gs
adc
xchg
sub
shl
imul
xor
cs
push
pop
adc
xchg
ficom
inc
aaa
ja
(bad)
in
nop
shl
in
test
sub
fdiv
lods
pop
addr16
in
test
or
out
int3
push
cmp
je
cli
rcr
fsubrp
jmp
fild
outs
cs
dec
fs
movs
pop
outs
movs
in
daa
out
dec
inc
daa
out
ds
arpl
daa
and
das
leave
push
push
daa
and
jmp
outs
cs
and
or
xchg
sub
cs
mov
jg
and
lods
jecxz
xlat
das
daa
and
js
xor
retf
jl
lods
sbb
sbb
lahf
and
daa
retf
or
nop
into
jg
outs
cs
and
daa
and
cmps
ret
inc
cmp
jg
daa
jno
cmps
add
outs
cs
mov
cmp
sbb
outs
sub
jecxz
add
push
xchg
arpl
add
fild
sub
and
fcom
sahf
and
cs
add
sahf
and
lods
jecxz
pop
out
ins
xchg
jle
imul
call
outs
cs
loop
jnp
(bad)
xlat
imul
(bad)
mov
cs
cmp
scas
fstp
popf
(bad)
out
dec
and
cs
and
cs
and
inc
pop
mov
cs
xor
cs
test
xchg
sbb
outs
cs
out
retf
xchg
xchg
shr
push
imul
retf
daa
lods
jmp
sub
das
daa
lods
jmp
leave
xchg
and
sar
outs
cs
push
daa
and
dec
and
mov
mov
fidivr
mov
outs
movs
in
adc
fisubr
push
and
out
addr16
loope
xlat
sar
fld
test
(bad)
xchg
fist
ficom
scas
jno
jp
in
jb
mov
ja
xchg
int3
pop
pushw
cmps
into
or
and
imul
loop
(bad)
cs
push
outs
and
dec
outs
inc
daa
dec
outs
rcl
nop
pop
das
leave
rcl
and
call
daa
and
push
and
nop
pop
aas
ficomp
cmp
push
jae
daa
ficomp
fcom
loopne
outs
cs
out
pop
fcmovne
not
and
push
and
in
push
fbld
sbb
lahf
and
daa
retf
loopne
aaa
cs
adc
in
jb
mov
cwde
fimul
pop
cdq
pop
dec
daa
and
cmps
loopne
sub
ja
jbe
and
push
arpl
push
sub
cmps
loope
cdq
pop
and
scas
lds
ficomp
fcom
push
cmp
jg
push
fld
cmps
loope
sbb
iret
aas
push
cs
sub
lds
adc
(bad)
rol
out
shr
lods
jnp
(bad)
in
ret
cmp
push
arpl
(bad)
fstp
imul
lods
pop
in
cmp
fsub
call
in
dec
(bad)
test
cli
in
fild
cmp
fsub
call
in
(bad)
xchg
movs
jb
pusha
nop
and
pusha
nop
xor
push
(bad)
push
and
(bad)
mov
push
das
daa
push
xchg
pop
in
jg
(bad)
aad
imul
sub
push
and
imul
push
xchg
pop
jge
rol
(bad)
data16
movs
jmp
outs
cs
fcom
push
lea
es
loopne
out
popa
out
adc
and
xlat
push
fs
and
cdq
nop
shl
and
jo
call
xlat
ds
and
sbb
outs
cs
cmp
aaa
out
rcr
fist
movs
mov
test
pop
in
cli
rcr
fist
ins
daa
stos
sub
scas
loopne
out
popa
out
adc
and
xlat
push
out
daa
loope
outs
cs
outs
lds
cwde
lds
stos
cmp
lods
xor
outs
cs
sub
clc
pop
test
fsubr
nop
cmps
mov
(bad)
retf
fist
rcr
test
rcr
fist
call
fcomp
outs
mov
fdivr
jne
loop
cmps
ret
cmp
movs
jp
test
fild
or
and
(bad)
scas
fs
pop
ror
dec
(bad)
adc
lods
pop
addr16
hlt
ins
or
fxch
loopne
sub
fdiv
in
test
ja
jecxz
in
inc
test
mov
icebp
stos
sub
loope
ja
lods
fs
cmps
(bad)
aad
imul
or
scas
and
call
ds
ja
movs
jp
test
fist
inc
shr
sub
scas
jecxz
in
scas
je
pop
ror
dec
(bad)
call
pop
addr16
hlt
ins
or
fxch
loopne
sub
fdiv
in
test
ja
jecxz
in
inc
test
mov
icebp
cdq
mov
daa
and
(bad)
scas
fs
shl
push
fld
sub
loope
ja
js
xor
in
out
jbe
cmp
push
jg
jp
test
(bad)
sub
scas
jecxz
in
scas
je
shl
push
fld
cwde
lds
stos
sub
sub
inc
fsubr
jle
not
pop
out
test
pusha
sbb
shl
outs
cs
loope
jo
call
ds
ja
movs
push
sub
cli
adc
xchg
cmps
loopne
push
xchg
arpl
push
sub
outs
js
addr16
rcr
test
shr
xor
and
(bad)
adc
nop
shl
xor
fs
mov
nop
shl
xchg
fld
test
(bad)
scas
out
jo
call
ds
ja
movs
jp
shl
lods
dec
outs
cs
out
fld
xchg
push
and
loope
outs
inc
daa
dec
nop
xor
and
fcom
daa
dec
outs
mov
outs
cs
fs
(bad)
mov
loope
pop
cs
shl
jo
call
ds
jbe
pop
das
sahf
sbb
lea
fnstcw
sbb
lea
outs
pop
sub
repz
aas
movs
aas
fidivr
lods
addr16
and
movs
and
pop
movs
aas
fidivr
scas
fstp
cmps
loopne
mov
daa
and
jo
call
in
ret
cmp
push
addr16
bound
(bad)
fld
scas
out
or
mov
outs
mov
jle
xor
pop
daa
and
in
scas
fldcw
scas
out
out
cs
pusha
mov
test
ret
sbb
dec
(bad)
and
imul
xchg
and
in
scas
daa
cld
cs
scas
xchg
out
pop
cmps
xlat
mov
iret
iret
gs
sub
pop
in
fdiv
outs
cmps
in
and
outs
pop
out
mov
mov
sub
outs
int3
cs
es
jmp
fcomp
ss
out
xor
loop
cmps
ret
cs
jge
jbe
mov
dec
mov
in
push
push
xchg
arpl
fsub
outs
pop
and
outs
xchg
ins
daa
sbb
and
movs
cmps
das
daa
and
imul
pop
call
outs
movs
sbb
lea
outs
pop
aas
xor
and
movs
pop
fidivr
cmps
retf
daa
and
or
dec
nop
shl
and
stos
(bad)
ficom
and
mov
outs
inc
aam
sub
rcr
fidivr
(bad)
or
nop
shl
outs
cs
sub
sub
das
daa
and
fst
sub
cmps
sar
daa
and
imul
in
das
stos
das
sub
push
shl
out
(bad)
jmp
and
pop
(bad)
mov
mov
push
push
xchg
arpl
fsub
outs
pop
or
jmp
fisubr
xchg
arpl
(bad)
aad
sub
sub
or
sub
call
lods
sub
outs
inc
daa
leave
xchg
pop
daa
and
cmps
call
mov
in
test
(bad)
and
(bad)
(bad)
imul
adc
xlat
jno
pop
(bad)
mov
(bad)
sub
and
sub
jns
push
nop
jns
test
shr
movs
mov
(bad)
out
movs
pop
xchg
cs
je
mov
arpl
out
sub
jle
sbb
cs
test
shr
loope
sbb
loop
stos
sti
ficom
lea
aas
movs
pop
fdivrp
mov
(bad)
frstor
push
xor
sub
sub
lods
arpl
mov
push
push
scas
aam
inc
cs
mov
outs
cs
sub
mov
arpl
lods
adc
(bad)
lods
fs
pop
(bad)
fldenv
push
ficom
lea
outs
xchg
sub
rol
out
repz
jo
call
in
ret
cmp
in
es
sbb
and
shr
xor
daa
mov
sub
cmps
sbb
jmp
daa
and
push
xor
outs
cs
test
cmps
(bad)
mov
int3
pop
out
push
stc
daa
lods
fbstp
sbb
movs
arpl
outs
adc
push
adc
push
imul
sub
push
and
inc
mov
sub
cs
mov
cwde
leave
scas
fs
cmps
loopne
push
test
cs
dec
cwde
rcr
sub
shl
mov
cmp
test
ins
daa
retf
fbld
xchg
cmps
loopne
or
daa
adc
(bad)
(bad)
jmp
push
and
test
movs
and
push
pop
pop
and
in
dec
(bad)
out
push
(bad)
jmp
cmps
sbb
pop
rcr
fsubrp
dec
(bad)
in
push
(bad)
sbb
fcom
pop
mov
add
daa
retf
loopne
jns
daa
dec
outs
inc
daa
dec
imul
inc
daa
and
dec
and
outs
daa
leave
dec
inc
daa
and
imul
ins
inc
daa
dec
outs
jle
pop
add
daa
stos
sub
scas
loopne
out
popa
out
adc
and
xlat
scas
jecxz
cs
ins
fwait
jg
ficomp
fcom
pop
dec
outs
cs
and
imul
add
ins
daa
ficomp
(bad)
iret
dec
add
daa
test
fld
test
fisubr
sbb
iret
fild
cs
jle
jne
loop
cmps
ret
cs
and
jno
aam
pop
aas
jo
xchg
push
outs
cs
out
xchg
ficom
in
and
outs
cs
xchg
rcr
fisubr
ret
shr
daa
test
fcmovu
fist
rcr
jno
pop
(bad)
nop
ja
loope
stos
clc
sub
scas
stc
pop
imul
nop
daa
leave
add
and
stos
jmp
xchg
shr
loop
fwait
jmp
xchg
shr
fidivr
(bad)
int
nop
shl
int3
ins
daa
and
in
jge
cs
(bad)
mov
fsubr
nop
rcr
jno
mov
arpl
lods
sbb
shr
loope
mov
movs
ret
rcr
fsubp
in
stos
movs
mov
(bad)
aas
inc
inc
shr
(bad)
aas
movs
pop
fidivr
daa
and
scas
fs
daa
out
jmp
mov
cs
lods
jmp
mov
in
fdiv
cmps
(bad)
frstor
sub
jle
pusha
outs
rcl
leave
xchg
xlat
fcomp
in
jmp
xchg
rcr
fsubp
stos
jmp
xchg
rol
mov
jmp
nop
rcr
jno
mov
arpl
lods
sbb
shr
loope
stos
lahf
outs
cs
mov
nop
sub
out
xchg
fcmovu
xchg
shl
cs
and
outs
inc
es
xor
gs
stos
fcmovu
xchg
shl
retf
fsubrp
jmp
leave
rcr
fsubrp
in
mov
xchg
jmp
fisubr
sub
pusha
cdq
mov
popa
aas
mov
fdiv
jle
pusha
outs
(bad)
fmul
movs
in
and
fisubr
outs
daa
and
mov
mov
outs
sub
in
test
sti
(bad)
arpl
ja
cs
or
and
ficom
inc
es
mov
xchg
fcmovu
xchg
shl
(bad)
fcomp
fsubrp
jmp
sbb
movs
(bad)
rcr
fisubr
daa
and
ins
daa
dec
aas
mov
xchg
rcr
nop
lods
jecxz
push
rcr
and
add
inc
sahf
shr
(bad)
cmp
in
aam
shl
outs
cs
sub
shl
and
dec
and
add
outs
inc
ja
cs
xchg
and
ficom
inc
es
(bad)
into
gs
xchg
fcmovu
xchg
shl
out
fcomp
in
jmp
sbb
movs
(bad)
rcr
fisubr
daa
and
ins
daa
dec
aas
mov
xchg
ficom
rcr
and
add
inc
sahf
shr
(bad)
cmp
pusha
aam
shl
outs
cs
sub
shl
and
scas
stc
cwde
int
movs
iret
rcr
fsubp
in
dec
and
mov
ja
cs
aaa
call
ficom
jmp
fsub
outs
cs
dec
outs
inc
movs
shr
daa
leave
sahf
fcmovu
fsubrp
jmp
sbb
movs
(bad)
rcr
fisubr
daa
and
ins
daa
dec
aas
mov
xchg
rcr
nop
lods
jecxz
push
rcr
and
arpl
inc
sahf
shr
(bad)
cmp
mov
nop
shl
outs
cs
cmp
das
dec
push
(bad)
ins
daa
lods
rcl
fcomp
nop
jns
mov
rcr
mov
nop
cs
push
gs
fsub
outs
cs
mov
outs
lods
call
cmp
and
call
nop
rcr
jno
xchg
ficom
sub
sub
mov
int3
dec
xchg
arpl
call
mov
in
jmp
cmp
daa
mov
outs
mov
fdiv
stos
sti
ficom
shl
out
fld
scas
and
lods
jmp
movs
mov
(bad)
aas
movs
pop
fidivr
push
scas
fs
cmps
jmp
mov
in
adc
daa
cs
cmc
nop
rcr
and
fisttp
test
lods
call
mov
cmps
loop
push
daa
and
jmp
fdiv
outs
jmp
fsub
outs
cs
lods
jmp
movs
not
(bad)
aas
movs
mov
jno
push
fdiv
cmps
call
mov
fsubr
nop
rcr
jno
mov
mov
jno
push
fdiv
outs
cmps
(bad)
frstor
sub
stos
neg
xchg
shl
jmp
sbb
cs
fs
cmps
jmp
mov
in
adc
daa
cs
leave
nop
rcr
jno
stos
neg
xchg
shl
push
shl
out
fld
scas
and
mov
outs
lds
lods
jmp
movs
mov
(bad)
aas
movs
pop
fidivr
push
scas
fs
xchg
pop
inc
outs
cs
out
(bad)
ficom
push
(bad)
pusha
stos
out
outs
cs
movs
mov
(bad)
aas
movs
mov
jno
push
fdiv
cmps
(bad)
fucom
not
stc
out
movs
pop
xchg
sub
lds
outs
movs
test
rcl
dec
aas
mov
loop
fcmovu
xchg
shl
pop
inc
daa
and
jmp
nop
cs
and
dec
outs
(bad)
int3
dec
outs
cmps
shl
fwait
retf
ficom
rcr
fidivr
inc
inc
shr
(bad)
aas
(bad)
sbb
movs
in
cmps
dec
mov
in
test
scas
ficom
stos
retf
ficom
rcr
fsubp
stos
mov
lods
fisub
retf
xor
leave
sahf
and
retf
test
cmp
(bad)
(bad)
sub
and
sub
jns
push
nop
jns
test
shr
loope
stos
dec
and
movs
test
rcr
fisubr
in
and
daa
lods
jmp
mov
jmp
sbb
cs
test
shr
loope
stos
or
outs
cmps
shl
ja
and
stos
xchg
xchg
shl
jmp
sbb
shr
loope
stos
fsub
outs
movs
test
rcr
fisubr
(bad)
and
dec
and
ja
stc
pop
imul
push
nop
rcr
and
mov
test
push
fcomp
nop
mov
fdiv
fwait
push
ficom
cmps
rcr
mov
fsubrp
ret
mov
aam
in
sbb
shl
push
shl
out
fistp
cwde
int
movs
xor
(bad)
out
movs
pop
xchg
sub
mov
lods
jmp
push
mov
jmp
sbb
cs
test
shr
loope
stos
xor
outs
movs
pushf
jmp
(bad)
outs
and
lods
jmp
and
shr
aas
movs
pop
fidivr
push
scas
fs
cmps
dec
mov
in
adc
daa
cs
pushf
psrlw
fisub
mov
mov
nop
sub
loop
jp
xchg
shl
fiadd
fist
shl
out
jg
xchg
shl
and
xchg
jp
xchg
shl
cs
daa
and
mov
and
daa
dec
imul
mov
rcr
fist
ins
daa
lods
jmp
pop
add
cmp
fsubrp
out
popa
out
adc
and
xlat
scas
movs
xchg
rcr
fsubrp
lds
cmp
fcom
stos
jp
xchg
shl
jmp
and
rcr
fidivr
(bad)
mov
in
inc
and
jle
jns
ins
daa
lods
jmp
jmp
cs
mov
pop
imul
in
xchg
mov
push
outs
movs
mov
jno
push
fdiv
cmps
call
mov
fsubr
nop
rcr
stos
jmp
mov
and
ficom
rcr
jno
push
fdiv
movs
mov
jno
push
fdiv
shl
stos
jmp
int
rcr
cs
rcr
nop
lods
call
sub
movs
xchg
rcr
fisubr
add
outs
cs
out
(bad)
ficom
stos
iret
ficom
shl
in
xchg
neg
xchg
shl
push
arpl
fdiv
push
fdiv
lods
call
and
aas
movs
pop
fidivr
lods
movs
mov
(bad)
aas
movs
pop
fidivr
lods
movs
mov
(bad)
aas
movs
pop
fidivr
es
stc
pop
imul
ficom
shl
xchg
rcr
nop
jno
jp
in
jb
mov
jmp
and
mov
popa
outs
dec
xchg
outs
cs
jno
cmps
add
outs
cs
mov
cmp
ret
sbb
or
add
mov
cs
xchg
cs
and
(bad)
lds
jbe
and
sub
outs
movs
in
(bad)
push
xlat
nop
shl
outs
pop
stc
retf
(bad)
fst
push
loopne
(bad)
das
daa
and
(bad)
leave
test
sti
cmp
(bad)
daa
stos
adc
scas
fistp
scas
push
mov
xchg
out
rcr
ficom
mov
test
outs
cs
mov
in
and
cmp
jo
dec
jnp
fstp
cmps
loopne
out
call
pop
dec
add
inc
daa
dec
outs
(bad)
dec
inc
outs
cs
out
mov
outs
cs
lods
jnp
(bad)
in
ret
cmp
sbb
lahf
cmps
loope
push
xchg
arpl
(bad)
mov
outs
cs
shr
scas
out
or
mov
dec
push
mov
add
mov
and
repnz
daa
and
push
mov
and
out
pusha
in
test
outs
daa
fldcw
addr16
pusha
mov
sbb
outs
cs
cs
and
movs
call
aas
mov
cvttps2pi
and
cs
loope
pop
pop
cs
out
outs
mov
sub
es
mov
and
scas
sub
lock
daa
popa
cdq
das
pop
cs
popa
imul
and
and
and
mov
fisubr
mov
(bad)
mov
into
and
cs
fisubr
mov
and
fsub
call
cs
push
push
sub
fsub
outs
cmps
sub
mov
and
addr16
jmp
enter
ficomp
and
pop
out
ins
sub
popa
xor
cmps
sub
mov
and
sub
nop
rcl
and
mov
and
and
scas
mov
out
dec
daa
and
and
mov
das
mov
and
outs
xchg
mov
and
mov
and
and
scas
(bad)
xchg
and
scas
rol
scas
out
and
mov
push
mov
and
nop
fist
mov
and
and
scas
(bad)
scas
and
cmps
iret
and
and
and
mov
push
mov
and
lods
fist
call
cs
shr
scas
out
and
mov
imul
and
ret
outs
das
and
lock
daa
cdq
jno
daa
and
cmps
loope
bound
mov
shr
add
and
pusha
outs
(bad)
jmp
imul
and
mov
outs
(bad)
cdq
and
xchg
repnz
daa
and
mov
and
fsub
call
cs
and
fimul
shl
call
and
and
push
loope
loopne
and
sub
lock
daa
add
call
scas
jmp
aas
mov
pusha
cwde
and
ins
daa
sub
and
mov
sbb
cs
and
outs
sbb
outs
cs
pop
push
rol
movs
scas
cwde
gs
and
mov
pop
shl
push
fld
inc
(bad)
retf
mov
push
mov
and
and
ficom
shl
call
and
lds
adc
cmps
xlat
(bad)
data16
and
shl
mov
and
and
test
outs
lods
and
pop
xchg
cmps
xlat
or
sub
sub
cs
test
push
xchg
lods
(bad)
es
(bad)
fldcw
sbb
cs
and
scas
and
cmps
pop
xchg
outs
push
daa
nop
sub
mov
cmps
iret
jo
daa
and
(bad)
ficom
daa
and
sub
sub
das
mov
movs
sbb
mov
and
xor
cmp
pop
imul
sub
(bad)
out
push
frstor
ja
and
cmps
xlat
and
outs
lods
and
retf
outs
and
and
into
and
xchg
sub
out
push
fsub
sbb
movs
and
mov
xlat
or
and
cmp
out
stos
jp
mov
outs
movs
daa
test
cs
mov
mov
outs
pop
and
mov
leave
jp
cs
mov
outs
cs
cmp
out
stos
jp
mov
outs
movs
daa
test
sub
mov
mov
sub
mov
and
ins
daa
test
pop
inc
pop
out
addr16
out
je
retf
jbe
cmp
outs
sbb
ss
mov
enter
cmps
loope
push
xchg
arpl
cs
sub
cs
test
inc
xor
sub
jno
and
jb
arpl
setnp
jno
and
ds
sub
rol
out
fild
sub
jno
and
fidivr
fwait
sub
jno
and
push
mov
fwait
sub
jno
and
jbe
arpl
jns
lods
jnp
(bad)
in
ret
cmp
clc
pop
sub
mov
jmp
fld
jmp
gs
imul
sub
ss
and
jmp
mov
in
or
daa
lods
sub
(bad)
aad
cs
and
lds
inc
xchg
movs
inc
xchg
fsub
call
out
push
stc
out
movs
inc
mov
das
daa
and
(bad)
std
outs
cs
and
dec
add
outs
fld
test
mov
loop
sub
sub
shl
push
fld
sub
lahf
dec
aaa
cs
(bad)
mov
loopne
fld
daa
and
inc
cdq
outs
mov
neg
pushf
mov
and
daa
lods
sub
ja
jp
mov
adc
mov
dec
outs
mov
daa
dec
outs
inc
and
rcl
xchg
bound
loop
xchg
jno
das
iret
or
daa
fisubr
xchg
arpl
daa
ficomp
mov
add
sub
push
mov
pop
inc
outs
cs
jmp
bound
mov
enter
fsub
call
nop
pop
xchg
lods
sub
ja
jp
mov
lds
daa
and
jo
call
in
ret
sub
add
sub
fs
cmps
(bad)
(bad)
(bad)
(bad)
or
scas
fs
(bad)
fucom
imul
sub
lods
ins
jg
push
in
dec
shl
pop
cld
scas
je
cmps
(bad)
leave
add
das
stos
fs
jle
xchg
push
xchg
inc
daa
lods
sub
ja
nop
rcl
nop
cmp
mov
fwait
lds
mov
outs
cs
loop
cmps
ret
xchg
and
xor
out
sub
sub
inc
fcomp
jp
mov
pop
outs
cs
out
fld
cmp
je
cmp
sub
push
xchg
arpl
fsubr
fldcw
sbb
cs
and
sbb
xchg
sub
es
cs
and
push
sub
nop
cs
and
xor
xchg
sub
and
nop
cs
and
sub
nop
cs
and
sub
fs
arpl
push
xor
out
pop
out
shl
fldcw
fldcw
and
ins
daa
fnstcw
sbb
lods
and
test
sub
pusha
stos
scas
and
scas
fucomi
les
sbb
lods
int
pusha
cwde
xor
push
in
push
dec
out
movs
leave
imul
and
outs
cs
jg
cwde
(bad)
fiadd
sub
cs
ss
and
jb
add
xor
cs
xchg
and
(bad)
fldlg2
out
stos
cmp
stos
jne
sub
fucomi
les
or
(bad)
and
jg
arpl
push
fbld
fwait
cmps
xor
cs
and
dec
loope
scas
sbb
pop
sub
pop
rcr
ficom
cmps
sbb
out
outs
mov
and
fbld
imul
movs
leave
ins
scas
sbb
imul
xchg
lods
iret
and
push
inc
push
xor
daa
and
sub
xchg
lods
iret
and
adc
add
ins
imul
cmp
and
push
cs
and
adc
and
dec
scas
fldenv
scas
sbb
ins
pop
jnp
xchg
lods
iret
and
adc
and
jg
fldlg2
(bad)
and
push
sub
mov
imul
leave
outs
cs
push
push
cs
push
in
out
stos
cmp
stos
jne
sub
fucomi
les
or
sub
xor
push
and
(bad)
movs
leave
imul
and
daa
mov
cmp
adc
and
scas
fldlg2
(bad)
and
push
push
cmps
fbld
imul
movs
leave
imul
and
popa
adc
and
push
es
shl
and
aas
leave
(bad)
je
and
jnp
lods
cmp
int
out
xor
outs
cs
data16
shl
and
fcom
fcomp
xor
call
in
ret
cmp
and
call
jae
fmul
push
pop
cs
ror
and
push
shr
ror
and
push
xor
movs
bound
outs
pop
loope
mov
into
and
movs
out
shl
push
fld
fnstcw
loopne
sub
sbb
outs
pop
cld
test
das
push
stos
rcr
nop
ja
and
call
push
(bad)
daa
and
add
cs
and
push
movs
inc
xchg
cs
das
out
and
xchg
movs
xor
out
and
sub
xchg
sub
push
leave
test
lods
and
loop
cmp
in
scas
fs
cmps
aad
mov
imul
mov
push
and
jnp
test
sub
daa
mov
in
out
test
das
std
or
das
mul
xchg
call
arpl
outs
movs
jb
out
fsub
call
xchg
mov
mul
xchg
call
sbb
outs
cs
jb
and
and
ins
daa
leave
sbb
fcomp
in
jmp
cmp
daa
and
jge
jbe
lock
nop
call
fsub
xchg
daa
and
push
es
shl
out
(bad)
ficom
call
mov
fsub
sbb
sub
nop
scas
sbb
xchg
and
cmp
ficom
cwde
mov
mov
sub
lds
fnstcw
scas
mov
lock
add
sub
cs
(bad)
ja
and
mov
scas
and
outs
and
fiadd
cmp
cs
lea
mov
lock
nop
sbb
jno
outs
daa
leave
mov
and
mov
scas
and
outs
scas
mov
and
mov
dec
scas
xor
arpl
sub
stos
aam
nop
shl
fnstcw
out
ins
lods
sbb
mov
mov
fnstcw
out
ins
movs
xor
mov
and
mov
fsub
call
nop
shl
cs
and
sbb
nop
shr
ficom
lods
mov
icebp
fcomp
out
out
jns
les
out
and
outs
outs
daa
test
fcmove
ficom
inc
daa
xor
je
ret
and
call
shl
call
out
in
daa
xor
sbb
fwait
rcr
sbb
stos
movs
jmp
fcomp
aas
(bad)
js
outs
fsub
call
nop
shl
enter
and
rcr
and
xchg
int
rcr
(bad)
idiv
ficom
shl
data16
push
inc
in
mov
stos
repnz
stc
ficom
cmps
std
loopne
sub
ret
ins
sub
popf
mov
rcl
enter
cs
shl
and
out
rcr
and
push
cs
and
jg
daa
test
scas
stc
ficom
cs
and
fsub
lahf
cs
push
(bad)
push
fld
ja
movs
add
fisubr
es
stos
stos
call
cs
sbb
ret
nop
and
fisubr
xchg
arpl
xchg
stc
mov
fmul
push
jns
and
and
fisubr
cmp
mov
cs
mov
rcr
in
mov
into
nop
shl
stos
cli
fcmove
ficom
mul
enter
and
stos
arpl
scas
lods
jp
clc
ficom
rcr
loopne
sub
clc
scas
(bad)
and
ins
xchg
das
in
mov
fwait
rcr
out
xchg
ror
nop
shl
and
nop
sub
sub
icebp
fcomp
outs
pop
jl
xor
jno
outs
cmps
mov
test
sub
daa
and
mov
movs
jecxz
sub
stc
ficom
rcr
stos
cli
mov
ficom
sub
movs
sti
lock
in
xchg
nop
shr
ins
sub
movs
push
fcomp
out
mov
nop
shr
out
sti
(bad)
nop
ror
loop
lahf
(bad)
nop
shl
(bad)
clc
ficom
lods
movs
mov
stos
fwait
(bad)
nop
rcl
in
jecxz
nop
shr
fisubr
sti
(bad)
nop
shl
fisubr
in
outs
and
add
icebp
fcomp
scas
les
jae
mov
out
arpl
outs
das
daa
fdivrp
cmp
nop
lds
outs
and
fisubr
repnz
ficom
rcr
test
cmp
mov
sub
nop
out
lds
in
xor
(bad)
outs
daa
test
fcmove
ficom
cs
push
js
and
stos
xchg
(bad)
nop
shr
loope
stos
inc
and
cmps
pop
sub
daa
and
stos
ror
nop
shr
xchg
outs
adc
and
push
cs
push
das
and
sbb
outs
cs
cmp
daa
stos
jmp
and
cs
and
(bad)
fsubr
retf
nop
call
fsub
in
add
nop
shl
stos
fcmove
clc
ficom
push
daa
push
inc
cmps
xlat
mov
outs
pop
cmp
out
push
daa
push
jnp
xlat
mov
outs
pop
sub
and
push
daa
push
pushaw
int3
in
nop
sub
sub
(bad)
stc
ficom
call
jmp
xchg
imul
push
aaa
in
adc
outs
cs
mov
pop
sub
fiadd
lods
movs
fwait
rcr
outs
(bad)
push
shl
cmp
lds
scas
mov
pusha
cwde
mov
mov
fsub
lea
popf
jp
std
ficom
adc
and
daa
and
push
cmps
sbb
outs
cs
aas
out
adc
and
daa
and
cmp
and
push
sub
adc
and
cs
and
sub
xchg
movs
int3
lock
data16
pop
test
push
das
and
xor
xchg
jmp
xchg
mov
fcomp
nop
fwait
repz
nop
ror
push
xchg
rcr
mov
mov
fcomp
outs
pop
mov
nop
lods
mov
rcr
scas
int3
and
and
shr
nop
cmps
and
nop
stos
ror
nop
shl
fisubr
daa
and
call
nop
scas
mov
and
mov
dec
scas
xor
arpl
sub
jo
call
in
ret
cmp
jl
jmp
mov
inc
fbstp
or
daa
out
shl
lods
adc
stos
adc
xchg
gs
aas
daa
and
sub
cmps
(bad)
jmp
sub
scas
fs
mov
mov
outs
cs
ror
mov
mov
sub
cs
ror
scas
dec
fnstenv
daa
and
adc
cmps
fs
das
lods
fs
cmps
in
lods
cmps
jb
test
cmp
fist
xor
sbb
cmps
fs
sub
sub
imul
out
push
fnstenv
sbb
cs
sub
xchg
je
adc
xor
and
mov
outs
cmps
fs
das
sub
outs
cs
pop
or
or
and
movs
fldcw
pop
and
fldcw
test
lods
lds
in
aam
push
lods
frstor
daa
movs
fldcw
push
and
fldcw
xlat
sub
out
arpl
and
(bad)
fisubr
(bad)
in
push
jecxz
jnp
fldcw
add
cs
and
daa
and
and
fldcw
daa
push
fsub
pop
and
sub
mov
in
js
ficom
lds
stos
ins
and
xor
pop
and
gs
(bad)
(bad)
pop
(bad)
ret
mov
outs
sub
outs
cs
and
pusha
cwde
(bad)
fidiv
jo
call
cmp
jo
sbb
pushf
xchg
jle
imul
outs
cs
outs
(bad)
and
cs
shr
out
popa
out
adc
and
xlat
scas
out
and
es
lds
outs
in
shl
pop
and
jle
jne
loop
cmps
ret
push
daa
and
js
sahf
xlat
inc
cmp
out
rol
out
(bad)
nop
shr
out
pop
sub
pop
das
lods
jmp
aaa
cmp
daa
lods
jmp
outs
cs
mov
pop
(bad)
scas
out
fdivr
cmps
in
jb
mov
mov
xchg
mov
outs
inc
daa
dec
outs
rcl
add
cs
jle
in
jb
mov
jo
(bad)
jo
ss
fldcw
outs
cs
and
scas
daa
and
and
outs
inc
and
outs
cs
mov
jb
daa
and
call
mov
imul
shr
out
int3
jae
cs
push
daa
and
in
movs
loope
jle
popa
xchg
jbe
outs
cmps
(bad)
fucomp
rol
in
push
sub
sbb
lods
arpl
stos
fs
cmps
(bad)
aad
pop
shl
pop
(bad)
out
and
iret
retf
aas
cs
stos
sub
int3
daa
out
push
(bad)
jmp
in
out
jbe
cmp
push
inc
add
test
das
fild
out
cs
and
cs
and
out
sbb
iret
pop
ds
test
scas
loopne
popa
cs
mov
pop
out
int3
jo
sub
and
jg
and
imul
scas
lods
out
fisubr
scas
sbb
outs
pop
fisubr
cmp
jne
nop
pop
sub
loop
and
daa
lods
sub
ja
ins
inc
xlat
shr
daa
and
fcos
or
jno
ds
and
das
daa
and
jns
cmps
in
jb
mov
cwde
xchg
bound
daa
and
cmps
loopne
outs
inc
cmps
and
dec
and
pop
cs
and
into
ja
outs
cmps
loope
xchg
fld
test
fisubr
push
imul
retf
and
ja
retf
outs
inc
daa
lods
sub
ja
sbb
fcom
iret
pop
ds
test
pop
fild
and
daa
adc
in
jb
mov
ja
movs
push
sub
movs
data16
outs
cs
cli
out
int3
es
cwde
and
outs
in
pusha
sbb
and
cmp
push
sub
outs
(bad)
pop
jb
cmps
push
xchg
and
sbb
sub
cs
mov
test
ja
pop
into
and
lods
jecxz
sub
jp
adc
push
fiadd
push
and
sub
jno
inc
into
and
lods
jecxz
in
fld
cmp
js
xor
in
out
jbe
cmp
jl
movs
push
sub
js
pop
mov
outs
cs
sbb
jl
and
pop
fmul
jl
xchg
and
(bad)
ins
daa
leave
mov
in
jmp
pop
or
arpl
call
stos
sub
scas
jecxz
in
scas
je
jno
jp
in
jb
mov
jo
out
popa
sbb
out
es
out
inc
out
int3
es
dec
retf
and
dec
iret
and
dec
ret
and
push
aad
pop
mov
arpl
and
outs
cs
xlat
mov
and
les
out
push
aaa
and
sub
sub
aas
and
imul
fsubr
test
xlat
rol
fld
test
imul
fisub
arpl
lods
out
outs
imul
adc
and
int
scas
int3
sbb
mov
adc
daa
push
movs
movs
bound
out
fxch
dec
scas
int3
(bad)
popa
cs
fldcw
fldcw
shr
out
cmp
sub
cmps
pop
xchg
sub
and
out
inc
fldenv
out
push
fldenv
sbb
scas
stc
cwde
int
fs
in
sub
sub
pusha
cdq
xor
dec
outs
cs
fdivr
cs
mov
in
and
scas
jmp
fsub
(bad)
mov
ret
stos
sub
sub
and
pop
imul
fdivr
cs
mov
addr16
jnp
fdivr
mov
imul
imul
out
loop
mov
lahf
and
daa
mov
stos
test
pop
jo
jp
jmp
ud0
mov
(bad)
mov
mov
das
mov
addr16
mov
mov
(bad)
mov
mov
sbb
mov
(bad)
mov
daa
mov
inc
arpl
sahf
popaw
in
gs
out
mov
(bad)
mov
mov
pop
es
(bad)
mov
mov
push
div
int
mov
mov
(bad)
mov
fcmovu
lods
dec
mov
(bad)
mov
daa
and
mov
(bad)
mov
addr16
add
sbb
cs
ja
mov
jmp
mov
aas
es
call
xor
(bad)
mov
mov
call
in
mov
mov
mov
jmp
mov
push
cs
call
mov
mov
mov
dec
xchg
jle
fsub
jg
daa
movs
loope
daa
pop
jo
jp
fild
mov
popa
in
gs
mov
lahf
and
daa
mov
sub
mov
mov
daa
mov
mov
mov
aam
test
clc
(bad)
mov
mov
(bad)
mov
mov
aas
mov
scas
jmp
cwde
fnstenv
mov
mov
mov
(bad)
mov
jp
pop
push
mov
(bad)
mov
mov
(bad)
fdiv
and
ins
daa
mov
(bad)
daa
mov
mov
mov
aam
(bad)
arpl
scas
clc
(bad)
mov
mov
(bad)
mov
mov
aas
mov
scas
jmp
cwde
fnstenv
mov
mov
mov
(bad)
mov
gs
push
mov
(bad)
mov
mov
(bad)
fdiv
mov
mov
sbb
xchg
shl
loop
cmps
ret
ss
cmp
sub
imul
sub
retf
dec
lods
fs
cmps
in
lods
cmps
jb
pop
fadd
sub
daa
and
cmps
jmp
lahf
jle
mov
out
scas
je
scas
pop
fisubr
and
sub
daa
retf
je
outs
cs
adc
outs
cs
fnstcw
test
pop
idiv
in
retf
mov
out
fstp
cwde
dec
fld
xchg
movs
and
push
pop
push
xor
out
shr
and
fild
scas
xor
and
push
int3
daa
and
aaa
test
das
xlat
popa
pusha
cwde
aaa
fldenv
or
rcl
sub
mov
(bad)
outs
outs
sub
mov
xlat
jno
imul
fnstcw
and
cs
dec
imul
iret
pop
and
daa
mov
imul
(bad)
pusha
cdq
bound
in
ss
nop
jno
jp
in
jb
mov
jo
scas
cmp
cmp
in
nop
or
iret
dec
and
daa
fwait
bound
and
cmps
out
test
in
loopne
and
fdiv
in
test
ja
jecxz
jnp
mov
outs
cs
es
out
into
gs
cs
lods
sub
ja
sbb
iret
call
scas
out
out
sub
pusha
cwde
pop
into
scas
leave
and
pushf
sub
xchg
outs
out
iret
jbe
cwde
pop
into
scas
leave
and
pushf
sub
adc
pushf
sub
arpl
and
fisub
stos
xchg
and
jno
xchg
push
outs
lods
jecxz
into
out
arpl
(bad)
fld
daa
and
fisub
xchg
movs
xor
shr
jg
(bad)
(bad)
out
pushf
sub
xchg
and
fist
(bad)
repz
sub
lds
cdq
nop
jge
and
cmps
in
lahf
sub
sti
pushf
sub
imul
into
cli
call
ins
daa
sbb
(bad)
push
xacquire
and
(bad)
std
xchg
and
pop
std
pusha
cdq
fsubr
scas
int3
aaa
sub
ins
daa
mov
outs
(bad)
fs
outs
cs
fs
sbb
outs
lods
pop
mov
nop
fsubp
in
sub
data16
scas
sbb
xchg
and
ins
daa
test
sub
daa
jno
into
imul
lods
jecxz
into
out
arpl
(bad)
aad
cmp
and
fisub
fwait
movs
xor
shr
jg
(bad)
aad
(bad)
out
pushf
sub
xchg
and
rcl
(bad)
repz
sub
lds
test
sub
sti
pushf
sub
imul
into
cli
call
ins
daa
sbb
ficom
out
and
stos
xchg
and
jb
mov
into
call
ins
daa
test
adc
(bad)
ins
adc
pushf
sub
shl
in
mov
shr
(bad)
call
in
add
outs
cmps
pop
sub
and
pusha
cdq
(bad)
leave
aas
cmps
xlat
and
call
rcr
mov
add
cs
and
cs
and
rcl
xchg
outs
and
(bad)
(bad)
pop
outs
cs
and
imul
nop
pop
(bad)
ja
pop
ret
leave
adc
and
data16
and
(bad)
loopne
outs
cs
loope
lds
cdq
outs
adc
and
cmps
in
xor
loop
cmps
ret
ss
jbe
lock
outs
cs
out
retf
fcom
sub
sub
cs
cmp
icebp
gs
ficom
shl
call
daa
fwait
mov
cmps
out
test
frstor
scas
xlat
cmp
movs
cmps
idiv
jmp
(bad)
nop
call
or
(bad)
gs
and
pop
(bad)
std
push
jg
scas
loopne
(bad)
out
push
in
icebp
cmps
in
lods
dec
scas
mov
rcr
ficom
movs
(bad)
ficom
push
jmp
daa
leave
cmp
and
in
shl
outs
pop
sub
jmp
movs
imul
sar
ss
lods
jmp
mov
ins
daa
dec
call
fcom
gs
and
sub
and
lods
jmp
repz
daa
test
fcmovu
ficom
cmps
in
arpl
iret
daa
and
daa
dec
outs
mov
fdiv
das
aas
and
fistp
rcr
fiadd
cmps
xlat
and
fcmovu
ficom
fsub
call
sub
rcr
fidivr
(bad)
cwde
imul
movs
xchg
rcr
fidivr
inc
sti
(bad)
sub
rcr
fidivr
inc
daa
and
iret
jb
cs
cdq
out
addr16
and
rcr
fsubp
call
and
in
clc
arpl
jmp
rcr
fidivr
inc
daa
and
iret
add
daa
jb
inc
clc
arpl
pop
(bad)
sub
cmps
leave
popa
cs
and
jmp
outs
jno
jp
in
jb
mov
jo
sbb
cwde
adc
mov
test
pop
fild
fld
xchg
fld
test
fisubr
and
imul
loop
(bad)
cs
push
outs
and
dec
outs
inc
daa
dec
outs
rcl
nop
pop
das
leave
dec
addr16
and
fbld
outs
cs
fsub
imul
sbb
jno
outs
inc
daa
ficomp
fcom
or
cmps
into
push
pop
daa
and
data16
and
jo
call
cmp
cmps
into
jle
daa
and
imul
ficomp
cmp
push
jg
push
sub
pop
cs
and
jmp
mov
sahf
mov
adc
out
rol
out
fld
imul
xor
es
daa
outs
cs
mov
lods
jnp
les
jle
sahf
xlat
jns
imul
push
(bad)
jmp
stos
fs
jle
and
sub
and
daa
dec
outs
inc
daa
ficomp
and
push
addr16
jl
outs
cs
sub
loope
sbb
push
ja
push
xor
outs
rcl
nop
pop
fcmovne
add
and
push
sub
push
data16
and
int3
xor
(bad)
push
(bad)
jmp
or
outs
cs
loope
jno
loop
cmps
ret
ds
in
xor
sub
cwde
call
popa
and
and
out
push
(bad)
jmp
dec
cmp
daa
dec
outs
rcl
nop
pop
das
leave
call
and
loop
aas
jno
inc
daa
dec
outs
rcl
nop
pop
fcmovne
mov
and
push
sub
scas
imul
cmp
imul
cmp
daa
(bad)
mov
js
cmps
in
jb
mov
ja
xchg
add
dec
daa
and
adc
hlt
sub
(bad)
and
cs
into
push
fild
test
fcomi
sub
pop
or
scas
outs
int3
popa
add
cs
dec
outs
inc
daa
dec
outs
inc
inc
(bad)
sub
cs
adc
xor
cs
sub
loope
cmp
adc
sti
and
cmps
(bad)
fld
daa
and
jo
loop
jge
mov
cmps
cmps
out
sub
and
cmps
ja
lods
jnp
les
jge
jbe
pop
das
stos
xor
loopne
xchg
jb
test
out
push
jecxz
jnp
test
lds
mov
inc
cmps
fisttp
mov
scas
shr
ja
sbb
iret
jnp
cs
mov
inc
imul
outs
cmps
fbld
out
imul
js
daa
out
adc
and
jmp
cli
sbb
cmps
sbb
out
outs
mov
jge
bound
test
shl
stc
das
lds
test
das
push
mov
outs
cmps
loopne
sub
movs
inc
outs
cs
xor
ficomp
ds
pop
sub
shr
je
cmps
jmp
xchg
lds
jp
in
jb
mov
jo
xor
loopne
lahf
retf
imul
je
outs
cs
fs
cmps
loopne
mov
addr16
out
ins
daa
and
imul
cdq
lds
fldcw
adc
lahf
pop
cs
and
xchg
imul
adc
adc
cmps
dec
lahf
push
sbb
outs
dec
loopne
xchg
cs
retf
nop
pop
xchg
and
cwde
jne
daa
and
(bad)
test
lods
loope
cmp
daa
and
popa
retf
in
fld
loopne
sub
lock
adc
jo
xor
(bad)
pop
outs
movs
in
dec
fsub
nop
fs
adc
lods
fs
jno
jp
in
jb
mov
iret
pop
cs
jb
jns
ins
sub
sbb
test
lods
or
rcr
and
stos
(bad)
xchg
shl
sbb
iret
mov
stos
es
loop
fisub
shl
call
push
loope
push
sub
outs
lods
call
and
ins
daa
and
into
xor
ficomp
cmp
outs
sub
daa
test
neg
fcom
rol
stos
repz
rcr
fiadd
(bad)
ficom
cli
fcomp
nop
mov
daa
and
inc
addr16
cmp
out
fcmovnu
xchg
shl
and
das
daa
and
cmps
xlat
or
es
movs
mov
out
movs
jmp
outs
cs
fsub
jmp
neg
xchg
shl
fstp
shl
sub
(bad)
test
outs
movs
in
inc
imul
xchg
rcr
fiadd
lods
jecxz
xchg
bound
outs
xchg
sub
(bad)
xchg
lods
frstor
cmp
daa
(bad)
rcr
fist
movs
in
cmps
xlat
adc
imul
(bad)
and
and
rcr
in
aam
pop
dec
(bad)
fsub
cs
inc
outs
cs
mov
rcl
fcomp
nop
jns
pop
mov
daa
jbe
(bad)
arpl
outs
lods
jecxz
xchg
arpl
outs
xchg
sub
(bad)
xchg
lods
frstor
cmp
daa
(bad)
rcr
fist
movs
in
inc
adc
sub
rcr
fiadd
lods
jecxz
xchg
sub
(bad)
xchg
lods
frstor
cmp
daa
(bad)
rcr
fist
movs
in
(bad)
pop
outs
cs
sub
daa
mov
push
add
push
push
and
dec
daa
and
rcr
cmp
rcr
jbe
adc
arpl
iret
inc
sub
daa
mov
dec
inc
xor
movs
xchg
rcr
fidivr
inc
push
(bad)
sub
push
and
jmp
outs
mov
cs
mov
push
xor
lahf
into
and
ror
arpl
cs
mov
mov
daa
(bad)
rcr
fist
movs
in
(bad)
int3
bound
sahf
sub
daa
mov
push
xor
lahf
into
and
ror
sub
cs
mov
mov
daa
(bad)
rcr
fist
movs
in
(bad)
xchg
bound
sahf
sub
daa
mov
push
add
into
ins
daa
and
dec
daa
and
rcr
cmp
rcr
jbe
adc
arpl
iret
mov
stos
ds
push
add
daa
(bad)
mov
fsubr
outs
cs
leave
ins
cs
mov
xchg
lock
xchg
stc
ficom
ins
daa
and
stos
stc
ficom
lods
movs
xchg
rcr
fidivr
inc
idiv
sub
ins
daa
and
jmp
(bad)
and
and
rcr
in
aam
pop
dec
(bad)
cmp
cs
inc
outs
cs
mov
rcl
fcomp
nop
jns
pop
mov
daa
jbe
xor
lods
jecxz
out
rol
out
out
ficom
fisub
outs
xchg
sub
(bad)
xchg
lods
frstor
cmp
daa
(bad)
rcr
fist
movs
in
(bad)
in
arpl
sahf
sub
daa
mov
push
xor
movs
lock
ror
retf
sub
es
xchg
cs
and
(bad)
mov
pop
faddp
arpl
xchg
fst
ins
daa
and
jmp
test
fcom
mov
jno
mov
arpl
iret
pop
sub
cmp
jg
cs
cwde
gs
and
(bad)
mov
pop
in
arpl
xchg
fst
ins
daa
and
jmp
(bad)
and
and
rcr
in
aam
pop
jl
xlat
shr
(bad)
xchg
and
jecxz
xchg
and
sub
(bad)
xchg
lods
frstor
or
daa
cwde
or
daa
and
(bad)
jae
xchg
fcmovnu
xchg
shl
push
icebp
and
(bad)
fsub
movs
in
lods
pop
add
mov
mov
nop
cs
outs
outs
cs
out
cs
ficom
pop
daa
and
mov
ficom
movs
mov
and
out
fcomp
nop
adc
fcom
movs
call
out
fcomp
nop
and
cwde
jne
daa
and
(bad)
mov
xchg
xchg
cmp
outs
sub
(bad)
(bad)
out
int
out
ficom
jmp
daa
and
icebp
gs
xchg
daa
and
outs
daa
and
jmp
cwde
enter
rcr
fsubp
call
fcmovu
out
xchg
out
xchg
shl
mov
nop
fwait
rcr
xchg
rcr
push
ja
mov
jno
stos
fcmovnu
xchg
shl
or
and
(bad)
cmp
movs
in
(bad)
fsub
cs
sub
daa
mov
push
xor
xor
and
ror
aas
cs
mov
das
cs
cwde
gs
and
(bad)
mov
pop
in
arpl
xchg
fst
outs
daa
and
jmp
test
cs
sub
daa
mov
push
xor
lahf
into
and
ror
out
das
cs
mov
stos
rcr
fsubrp
cs
and
shr
push
stos
jecxz
xchg
shr
mov
out
retf
ficom
enter
rcr
fsubp
call
daa
stos
sub
scas
movs
xchg
rcr
fiadd
scas
call
stos
sbb
outs
cs
rcr
scas
out
imul
outs
out
and
(bad)
xchg
shr
mov
in
(bad)
xchg
shr
ficom
lock
stos
rcr
xchg
shl
jbe
daa
and
jmp
nop
lods
out
fisubr
scas
sbb
outs
pop
fisubr
test
ficom
shl
call
fcomp
aas
and
fsubp
stos
and
nop
rcr
jno
or
outs
mov
fdiv
lahf
(bad)
nop
lods
jecxz
out
xlat
ficom
rcr
ficom
(bad)
fcom
rcr
jno
dec
stc
arpl
iret
xchg
daa
mov
push
cs
cwde
gs
and
(bad)
mov
pop
jae
arpl
xchg
fst
adc
and
jmp
test
cs
sub
daa
mov
push
xor
movs
lock
ror
pop
push
cs
mov
push
cs
cwde
gs
and
(bad)
mov
pop
faddp
arpl
xchg
fst
adc
and
jmp
nop
(bad)
in
outs
cmps
out
cmp
and
shr
fidivr
rcl
jb
push
rcr
nop
lods
jecxz
out
(bad)
xchg
shr
loope
stos
mov
nop
ror
mov
daa
(bad)
rcr
fist
movs
in
(bad)
in
outs
cs
sub
daa
mov
push
xor
xor
and
ror
ret
push
cs
mov
push
cs
cwde
gs
and
(bad)
mov
pop
in
arpl
xchg
fst
adc
and
jmp
jmp
leave
add
daa
and
and
and
rcr
in
aam
pop
jl
xlat
shr
(bad)
xchg
jecxz
pop
sbb
arpl
xchg
fst
adc
and
jmp
(bad)
and
and
rcr
in
aam
pop
dec
mov
cs
inc
outs
cs
mov
rcl
fcomp
nop
jns
pop
mov
daa
jbe
push
sbb
outs
lods
jecxz
xchg
sbb
outs
xchg
sub
(bad)
xchg
lods
frstor
cmp
daa
(bad)
rcr
fist
movs
in
scas
sar
inc
cs
leave
mov
and
and
rcr
in
aam
pop
jl
in
jmp
rcr
fiadd
lods
jecxz
xchg
sub
(bad)
xchg
lods
frstor
cmp
daa
(bad)
rcr
fist
movs
in
(bad)
lods
sbb
cs
sub
daa
mov
push
add
push
adc
and
dec
daa
and
rcr
cmp
rcr
jbe
adc
arpl
iret
push
push
cs
mov
mov
daa
(bad)
rcr
fist
movs
in
cmps
xlat
or
adc
and
and
and
rcr
in
aam
pop
jl
xlat
shr
(bad)
xchg
and
jecxz
pop
xor
arpl
xchg
fst
adc
and
jmp
(bad)
and
and
rcr
in
aam
pop
jl
xlat
shr
(bad)
xchg
sbb
outs
lods
jecxz
pop
xor
arpl
xchg
fst
adc
and
jmp
outs
(bad)
loopne
outs
cs
sub
daa
mov
push
xor
lahf
into
and
ror
(bad)
push
cs
mov
mov
fcmovu
aas
movs
mov
jno
sub
arpl
iret
xchg
daa
mov
push
cs
cwde
gs
and
(bad)
mov
pop
faddp
arpl
xchg
fst
adc
and
jmp
nop
fcmovnu
xchg
ror
mov
cs
mov
push
cs
cwde
gs
and
(bad)
mov
pop
faddp
arpl
xchg
fst
adc
and
jmp
cwde
enter
rcr
fsubp
call
daa
cwde
xchg
fisubr
dec
cs
jbe
xchg
fcmovnu
xchg
shl
xchg
and
(bad)
sub
jg
enter
sahf
sub
daa
mov
push
xor
lahf
into
and
ror
das
push
cs
mov
mov
daa
(bad)
rcr
fist
movs
in
(bad)
nop
sbb
sahf
sub
daa
mov
push
xor
lahf
into
and
ror
not
mov
sbb
daa
and
xchg
sub
(bad)
xchg
lods
frstor
or
daa
cwde
or
daa
and
(bad)
jae
xchg
fcmovnu
xchg
shl
push
icebp
and
(bad)
push
sbb
movs
in
inc
idiv
sub
rcr
fiadd
lods
jecxz
add
sub
and
ficomp
es
and
daa
test
(bad)
fcomp
nop
scas
loope
adc
daa
(bad)
rcr
fist
cs
and
xchg
rcr
xchg
shl
nop
fcmovnu
xchg
rcr
xchg
xchg
fcmovu
xchg
and
xchg
leave
nop
rcr
leave
xchg
sbb
and
ror
sbb
test
das
xlat
test
jge
mov
cs
stos
jmp
jp
in
jb
mov
daa
jbe
addr16
cmps
(bad)
mov
fsubr
outs
lds
fldcw
jno
movs
cli
arpl
mov
jno
call
xchg
cmps
loopne
outs
inc
mov
movs
nop
rcr
fidivr
inc
and
iret
(bad)
lahf
rcr
mov
nop
das
lods
fs
adc
push
rol
push
repz
fs
arpl
and
iret
repnz
rcr
dec
mov
hlt
sti
arpl
int3
std
sub
cmps
leave
out
fcomp
in
jmp
outs
jno
loop
cmps
ret
mov
jno
rol
fist
xchg
cmps
loopne
retf
ficom
scas
pop
and
out
(bad)
das
scas
movs
call
fcomp
in
das
stos
imul
and
scas
movs
jecxz
fcomp
out
push
(bad)
jmp
das
test
lods
loope
cmp
ins
push
outs
lods
je
mov
scas
mov
rcr
fidivr
(bad)
adc
outs
cs
movs
adc
fcomp
nop
fwait
xchg
nop
ror
pop
pop
cs
stos
cmp
lods
lods
adc
fcomp
loop
sub
and
rcr
test
das
fild
pop
cs
test
push
fcmovu
nop
rcl
leave
sahf
sbb
and
stos
push
fcom
rcr
fiadd
movs
jb
in
pop
fcom
sub
loop
sub
and
rcr
mov
outs
inc
daa
imul
cs
test
mov
ror
bound
daa
dec
jg
daa
lods
jmp
and
daa
leave
cmp
daa
and
(bad)
sbb
outs
cs
and
jmp
mov
repnz
sub
and
(bad)
xor
nop
shl
bound
xchg
daa
adc
cs
cs
rcr
dec
imul
and
stos
fcmovnu
nop
shl
jmp
inc
pop
cs
(bad)
mov
xchg
mov
rcr
(bad)
mov
xchg
test
fidiv
xchg
adc
shl
and
fcomp
in
jmp
nop
daa
out
bound
pop
pop
cs
adc
cs
xor
jle
mov
daa
test
pop
fild
xchg
rcr
jno
stos
fcmovnu
nop
shl
(bad)
push
daa
and
cmps
mov
dec
sub
jmp
aaa
push
cs
mov
inc
(bad)
scas
out
stos
lahf
fist
cs
mov
fcomp
outs
cs
and
jmp
fsub
outs
lods
call
xor
jmp
mov
outs
mov
fdiv
cmp
stos
movs
retf
rcr
fidivr
mov
fdiv
cs
and
cs
and
stos
fcmovnu
nop
shl
outs
(bad)
rcl
pusha
stos
(bad)
and
fcom
xchg
adc
outs
cmps
fisttp
xchg
cmps
loopne
fidivr
xor
pop
mov
daa
lods
jmp
mov
daa
mov
sbb
fcomp
outs
lds
mov
outs
mov
fdiv
pop
sti
arpl
add
outs
cs
loop
out
push
cmp
(bad)
and
outs
(bad)
dec
adc
sbb
fcomp
outs
movs
mov
sbb
mov
jb
outs
push
daa
and
lods
call
and
and
sbb
and
sub
and
mov
jno
(bad)
nop
adc
pop
inc
sti
arpl
mov
jno
push
ficom
rcr
and
add
nop
cs
cmp
nop
shl
mov
outs
lds
mov
nop
cmps
out
push
daa
and
stos
xchg
fcom
sbb
and
mov
shr
cmps
loopne
xchg
and
daa
(bad)
mov
ficom
fcom
mov
mov
pusha
xchg
jg
outs
cs
out
dec
fcom
jo
call
out
movs
int
jge
jbe
jae
sahf
jmp
(bad)
push
(bad)
jmp
call
jecxz
cmps
jb
out
push
(bad)
jmp
pushf
adc
scas
jecxz
cmps
jb
nop
pop
aaa
leave
ret
and
in
inc
test
fdiv
sbb
inc
test
fisubr
xchg
sub
sub
pusha
cdq
jb
outs
(bad)
sub
jg
ja
outs
(bad)
pushf
adc
scas
out
shl
cs
loope
push
cmp
pusha
mov
scas
daa
add
jle
shr
jle
fwait
pop
cs
mov
cmps
xlat
mov
push
pop
daa
and
imul
sub
and
mov
outs
cs
fld
scas
out
pop
aaa
fsubr
lods
sub
and
fdivr
lods
sub
and
and
sub
imul
es
pusha
cdq
jb
loop
aaa
and
(bad)
int3
adc
stos
fs
jle
and
inc
les
cs
and
cs
test
scas
enter
daa
dec
nop
js
sbb
lods
sub
ja
xchg
push
and
iret
jnp
cs
stos
sub
js
xor
in
out
lahf
ins
jo
daa
leave
out
push
daa
and
jo
xor
cwde
lds
xor
xchg
pop
fild
outs
cs
out
lahf
rcl
fwait
rcl
stos
movs
ror
fcomp
aas
mov
fdiv
dec
sti
arpl
in
outs
cs
out
out
sub
out
fldenv
outs
cs
(bad)
(bad)
ficom
movs
in
daa
out
jo
xchg
jmp
sbb
iret
maxps
daa
test
fld
test
call
scas
outs
int3
jns
stos
fwait
rcl
stos
movs
ror
fcomp
aas
mov
fdiv
(bad)
dec
push
outs
cs
sbb
out
rcl
leave
pop
sbb
and
jmp
(bad)
(bad)
ficom
cli
or
outs
pop
out
test
into
push
addr16
and
jl
lods
jnp
(bad)
xlat
cmp
and
mov
outs
cs
cmp
jnp
ss
loope
pop
cs
test
das
xlat
test
jge
and
ss
daa
and
mul
outs
cs
fsub
jmp
fstp
shl
sub
sbb
and
jmp
outs
cmps
xlat
or
icebp
gs
stos
daa
rcl
daa
and
jmp
(bad)
and
and
rcr
in
aam
pop
jnp
xlat
shr
fcomp
aas
(bad)
fcom
outs
movs
in
(bad)
pushf
adc
sahf
sub
daa
mov
push
push
leave
(bad)
sbb
daa
and
rcr
cmp
rcr
jbe
jbe
arpl
call
mov
outs
lods
jecxz
xchg
sub
(bad)
xchg
lods
frstor
cmp
(bad)
ins
daa
lods
jmp
mov
stos
es
rol
scas
out
sbb
arpl
mov
jno
stos
adc
outs
lods
jecxz
xchg
and
sub
(bad)
xchg
lods
frstor
cmp
(bad)
ins
daa
lods
jmp
jg
cs
mov
pop
cs
cwde
gs
and
(bad)
mov
xchg
adc
outs
xchg
inc
and
mov
pushf
outs
into
fcomp
cmp
std
sub
into
fcomp
cmp
fcom
outs
movs
in
rcl
pop
cmp
arpl
mov
jno
psubb
mov
fdiv
repnz
xor
out
sar
nop
shr
and
sub
(bad)
xchg
lods
frstor
cmp
(bad)
ins
daa
lods
jmp
out
pop
cs
mov
mov
daa
lods
jmp
fwait
pop
cs
mov
pop
cs
cwde
gs
and
(bad)
mov
pop
faddp
arpl
mov
jno
mov
jecxz
pop
sub
mov
jno
scas
adc
sub
(bad)
(bad)
out
xlat
(bad)
nop
shr
and
sub
(bad)
xchg
lods
frstor
pop
iret
aas
pop
cs
cwde
or
daa
and
(bad)
jae
xchg
daa
rcl
gs
xchg
daa
rcl
daa
and
jmp
loop
daa
rcl
daa
and
jmp
(bad)
and
and
rcr
in
aam
pop
jnp
xlat
shr
fcomp
aas
(bad)
fcom
outs
movs
in
inc
ins
std
sub
into
fcomp
aas
(bad)
int3
adc
movs
in
cmps
xlat
adc
pop
daa
and
and
and
rcr
in
aam
pop
jnp
xlat
shr
fcomp
aas
(bad)
cwde
adc
movs
in
inc
cmp
movs
outs
into
fcomp
aas
(bad)
mov
outs
movs
in
mov
cs
sub
daa
mov
push
xor
into
gs
stos
daa
rcl
daa
and
jmp
outs
rcl
loop
daa
rcl
gs
stos
daa
rcl
daa
and
jmp
(bad)
and
and
rcr
in
aam
pop
jnp
xlat
shr
fcomp
aas
(bad)
sbb
outs
movs
in
inc
daa
jmp
into
fcomp
aas
mov
outs
movs
in
mov
outs
cs
sub
daa
mov
push
xor
into
gs
stos
daa
rcl
daa
and
jmp
cwde
enter
icebp
fcomp
out
iret
(bad)
pop
cs
cwde
xchg
fisubr
dec
cs
jbe
xchg
daa
rcl
gs
xchg
daa
rcl
daa
and
jmp
(bad)
and
and
rcr
in
aam
pop
jnp
xlat
shr
fcomp
aas
(bad)
mov
in
inc
stc
cld
sub
into
fcomp
aas
(bad)
mov
in
scas
leave
xchg
cs
leave
push
push
daa
and
and
and
rcr
in
aam
pop
jnp
xlat
shr
fcomp
aas
(bad)
jl
outs
movs
in
(bad)
xor
outs
cs
sub
daa
mov
push
push
leave
push
daa
and
dec
daa
and
rcr
cmp
rcr
jbe
jbe
arpl
call
ror
and
jecxz
pop
(bad)
cli
arpl
mov
jno
and
and
jecxz
add
sub
and
cs
cmps
or
outs
cmps
mov
mov
outs
mov
fdiv
and
and
daa
lods
rcl
clc
ficom
cs
ficom
icebp
fcomp
xchg
or
outs
rcl
leave
adc
addr16
xlat
or
jne
loop
cmps
ret
stos
and
outs
jge
jbe
rol
cmps
(bad)
mov
fsubr
xchg
rcr
and
cmps
out
pop
daa
and
jae
jb
mov
and
jb
loop
and
fcom
leave
scas
movs
out
aad
fsubp
jmp
daa
jno
sbb
and
pop
aad
shl
and
cs
arpl
push
or
scas
movs
iret
rcr
fiadd
stos
sbb
shl
scas
add
and
sub
and
mov
jno
cmp
std
sub
cmps
leave
(bad)
retf
fcomp
in
jmp
ins
cs
dec
imul
and
stos
fcmovnu
nop
shl
jmp
sbb
daa
test
das
fild
xchg
rcr
jb
stos
xchg
fcom
aam
fsubrp
jmp
ins
cs
dec
iret
repnz
stos
fcmovnu
nop
shl
mov
and
stos
xchg
fcom
rcr
ficom
cs
leave
cdq
retf
fcomp
out
mov
fldcw
scas
out
push
and
stos
lahf
fist
add
and
jmp
outs
jmp
fsub
cs
out
retf
nop
das
daa
and
call
xor
jmp
mov
outs
mov
fdiv
xor
stos
movs
retf
rcr
fidivr
mov
fdiv
cs
and
cs
and
stos
fcmovnu
nop
shl
outs
(bad)
fmul
outs
cs
stos
movs
and
fcom
out
push
and
fbld
xchg
cmps
loopne
fimul
xor
pop
mov
daa
lods
jmp
xchg
inc
cs
mov
adc
fcomp
outs
lds
mov
outs
mov
fdiv
pop
sti
arpl
or
outs
cs
out
out
push
cmp
(bad)
and
outs
(bad)
push
or
cmps
movs
adc
fcomp
outs
movs
mov
sbb
cdq
and
dec
outs
fisub
and
cmps
fisttp
xchg
cmps
loopne
imul
and
stos
mov
nop
shl
xchg
or
dec
add
stos
mov
nop
shl
cmp
sub
shl
and
loope
outs
cs
movs
jecxz
fcomp
aas
jge
xchg
cwde
rcr
mov
pusha
stos
mov
outs
cs
and
shr
fidivr
(bad)
push
(bad)
adc
and
stos
mov
(bad)
mov
imul
shr
fcom
cs
dec
fs
jle
sub
(bad)
or
outs
lods
jecxz
data16
push
or
and
fmul
outs
lods
mov
in
lds
sar
xchg
mov
rcr
leave
pop
neg
fsubrp
jmp
xchg
rcr
mov
nop
fwait
mov
nop
ror
cmp
and
and
(bad)
and
outs
cs
repz
fisubr
daa
and
stos
xchg
fcom
pop
daa
and
(bad)
es
jmp
sbb
ror
pop
inc
cs
(bad)
mov
ficom
lods
movs
repz
fiadd
daa
and
jo
call
out
movs
int
jge
jbe
jae
sahf
cwde
dec
push
inc
out
jmp
je
cmp
daa
and
imul
sbb
iret
imul
stos
cmp
stos
jne
ds
das
(bad)
pop
or
scas
out
js
pop
dec
cs
cdq
test
daa
and
cmps
loopne
xchg
push
and
push
sub
cmp
cs
or
and
imul
add
jo
and
ds
and
loope
nop
js
lahf
inc
cs
test
fld
test
fisubr
jno
(bad)
fs
outs
cs
add
daa
and
imul
xor
loop
cmps
ret
ds
and
js
sahf
sbb
pop
out
jmp
dec
and
pop
das
leave
xchg
push
daa
and
call
scas
out
fcom
pop
out
int3
bound
shr
and
mov
jno
mov
outs
cs
and
das
xlat
ficom
rcr
mov
nop
cs
push
imul
aas
or
daa
dec
ins
js
pop
daa
test
lds
je
retf
movs
int
jns
bound
mov
pop
and
loopne
xchg
das
daa
retf
nop
fs
jle
daa
mov
daa
lods
sub
ja
mov
(bad)
js
cs
fs
jle
and
ins
and
adc
inc
pop
daa
and
(bad)
fucomip
out
and
pop
sar
arpl
(bad)
aad
(bad)
mov
in
mov
daa
dec
sub
daa
and
cs
fild
daa
inc
nop
imul
fsubr
mov
xor
in
out
movs
int
js
lahf
sbb
das
and
shr
cs
and
sub
add
cs
mov
cs
dec
outs
inc
daa
dec
imul
out
lahf
dec
gs
(bad)
mov
dec
and
inc
pop
ficomp
xchg
(bad)
test
outs
cs
and
inc
pop
ficomp
mov
or
dec
and
inc
pop
ficomp
xchg
(bad)
dec
or
dec
and
inc
pop
ficomp
mov
or
dec
and
inc
pop
ficomp
mov
outs
(bad)
push
iret
icebp
js
and
rcl
or
outs
daa
leave
push
push
daa
and
rcl
add
outs
daa
leave
inc
push
daa
and
rcl
mov
ins
daa
leave
jbe
daa
and
rcl
push
into
ins
daa
leave
pushw
daa
and
ficom
shl
call
pop
ficomp
mov
push
outs
cs
and
inc
pop
ficomp
mov
push
outs
cs
and
inc
pop
ficomp
test
(bad)
hlt
push
outs
cs
and
inc
pop
ficomp
test
(bad)
in
outs
cs
xchg
inc
cs
(bad)
mov
js
cmps
in
jo
lods
xor
sub
dec
fst
cs
addr16
cs
or
and
mov
ficomp
mov
push
outs
cs
fst
cs
add
daa
adc
and
mov
ficomp
xchg
(bad)
xor
outs
cmps
(bad)
sub
rcr
adc
mov
and
lea
mov
call
rcl
or
or
and
mov
add
outs
lea
mov
cs
xor
outs
daa
dec
xchg
rcl
cmp
cmps
or
and
mov
and
lea
sub
outs
daa
dec
xchg
rcl
or
outs
daa
leave
retf
and
mov
and
lea
mov
call
rcl
add
outs
daa
leave
out
or
and
(bad)
push
(bad)
jmp
mov
inc
dec
cs
xor
and
mov
ficomp
xchg
(bad)
jo
outs
cs
cmp
jno
rcr
pop
mov
scas
enter
daa
dec
call
leave
call
fcomp
out
dec
int
ins
daa
ja
lods
fcmovnu
nop
lods
jecxz
int3
es
jno
push
add
outs
scas
shl
cs
lods
sub
ja
xchg
and
daa
ficomp
mov
ja
imul
sub
ja
sub
or
lahf
jle
and
scas
ja
mov
and
iret
cld
arpl
daa
and
iret
pop
dec
cs
sub
and
mov
and
movs
(bad)
fld
mov
jnp
xor
cmps
jno
jmp
sub
add
outs
lea
mov
inc
(bad)
scas
out
fcom
mov
and
mov
pop
mov
(bad)
fld
mov
ds
xor
cmps
jno
repnz
arpl
std
cli
sub
jmp
sub
sub
and
das
dec
and
xchg
and
dec
outs
inc
das
dec
jnp
and
outs
cs
out
das
jno
pop
rcl
and
or
daa
and
mov
and
mov
add
cs
dec
or
outs
cs
jno
inc
cld
arpl
std
cli
sub
jbe
and
pop
sub
daa
and
mov
and
mov
add
cs
dec
pop
inc
cmovns
daa
jno
ss
arpl
std
cli
sub
xor
and
xchg
nop
sbb
mov
nop
sbb
cs
xor
jmp
and
xchg
outs
cs
or
cs
and
inc
jmp
sti
mov
daa
dec
outs
mov
outs
test
outs
rcl
adc
outs
rcl
gs
outs
daa
dec
jg
pop
and
dec
lahf
outs
cs
dec
inc
inc
daa
and
dec
scas
mov
daa
dec
mov
and
cs
cmp
and
mov
and
mov
add
test
and
xor
cmps
jno
repnz
arpl
mov
and
(bad)
iret
mov
in
daa
and
push
std
arpl
daa
dec
sub
daa
and
(bad)
adc
outs
cs
push
mov
daa
dec
outs
inc
and
fcom
mov
and
inc
daa
ficomp
mov
ficomp
xchg
inc
or
outs
cs
adc
test
and
pop
dec
ins
cmps
jno
repnz
arpl
mov
and
lea
out
imul
adc
mov
and
mov
pop
add
and
sbb
cs
and
and
outs
inc
and
out
jle
std
mov
daa
dec
jmp
jmp
cs
add
and
inc
daa
ficomp
mov
ficomp
xchg
inc
aaa
dec
push
inc
shl
cs
dec
outs
cs
dec
outs
cs
jno
inc
std
arpl
std
cli
sub
mov
mov
sub
leave
scas
and
adc
outs
rcl
gs
outs
daa
dec
jg
cmps
and
dec
fisubr
daa
dec
jnp
daa
and
cs
and
inc
je
sub
ins
daa
dec
outs
(bad)
pusha
add
test
ins
daa
dec
outs
rcl
adc
outs
rcl
gs
outs
daa
dec
jg
inc
dec
ja
daa
and
in
daa
and
daa
and
dec
arpl
cmc
and
cs
sbb
and
mov
and
mov
add
cs
dec
pop
das
daa
and
cs
jl
and
hlt
cld
arpl
daa
leave
mov
fidivr
ficomp
mov
ficomp
xchg
inc
aaa
dec
cmp
and
dec
sub
daa
jno
sub
arpl
std
cli
sub
mov
and
mov
sub
sbb
mov
nop
sbb
sub
add
and
mov
outs
cs
xor
aas
inc
sti
(bad)
sub
ins
daa
dec
outs
sub
and
lea
and
cs
and
cs
cmp
lods
daa
and
in
outs
cs
xor
aas
inc
mov
sub
ins
daa
dec
outs
sub
and
lea
mov
cs
fld
scas
out
fcom
mov
and
mov
add
repnz
and
xor
cmps
jno
repnz
arpl
es
sub
cs
leave
mov
daa
and
push
mov
ficomp
mov
ficomp
xchg
inc
aas
dec
or
and
dec
xor
aas
inc
sti
(bad)
sub
ins
daa
dec
outs
sub
and
lea
mov
nop
sbb
mov
nop
sbb
cs
ss
mov
and
mov
outs
cs
aas
pop
cs
mov
sub
ins
daa
dec
outs
(bad)
push
add
test
xor
fcomp
out
push
(bad)
jmp
fdivr
out
je
retf
movs
int
js
sahf
pop
inc
sar
jmp
daa
ficomp
es
or
inc
retf
cli
sub
(bad)
fsubrp
jmp
out
push
(bad)
jmp
das
mov
dec
cs
lods
sub
ja
xchg
pop
and
daa
ficomp
mov
ja
imul
sub
ja
sub
or
lahf
jle
and
scas
ja
mov
and
iret
cld
arpl
daa
and
iret
repz
cs
sub
and
mov
and
movs
(bad)
fld
mov
jnp
xor
cmps
jno
out
arpl
std
cli
sub
mov
and
and
add
and
mov
and
mov
pop
add
and
(bad)
fld
mov
ds
xor
cmps
jno
repnz
arpl
std
cli
sub
jbe
and
inc
sub
cs
and
das
dec
and
xchg
and
dec
outs
inc
das
dec
jnp
mov
out
das
jno
pop
rcl
and
xchg
xor
and
mov
and
mov
add
cmp
pop
sub
sti
(bad)
sub
ins
daa
dec
outs
(bad)
enter
test
repnz
daa
mov
outs
inc
pop
sti
sub
ins
and
iret
(bad)
jo
daa
dec
sbb
and
cs
ficomp
mov
outs
cmps
sbb
mov
pop
pop
xor
inc
es
and
daa
and
cs
pop
jo
daa
retf
daa
dec
outs
inc
imul
xchg
cmp
outs
inc
daa
ficomp
mov
ficomp
xchg
inc
or
outs
cs
adc
sub
sti
(bad)
sub
ins
daa
dec
outs
(bad)
jo
outs
test
xchg
das
fild
pop
sbb
ficomp
xchg
inc
or
outs
cs
sbb
outs
cs
dec
ins
cmps
jno
repnz
arpl
mov
and
lea
mov
call
adc
outs
rcl
gs
outs
daa
dec
jg
cmps
and
dec
dec
pop
cmp
and
daa
and
dec
jb
ins
daa
dec
mov
and
cs
sbb
and
mov
and
mov
add
test
in
outs
cs
and
ja
sub
hlt
cld
arpl
daa
leave
into
xor
and
push
mov
adc
rol
out
retf
test
inc
daa
ficomp
mov
ficomp
xchg
inc
aaa
dec
xchg
cs
and
mov
and
inc
dec
outs
cs
jno
cmp
std
cli
sub
jb
and
xlat
mov
nop
sbb
mov
nop
sbb
cs
xor
cs
dec
iret
cs
and
cs
and
inc
and
sub
ins
daa
dec
outs
mov
test
outs
rcl
adc
outs
rcl
gs
outs
daa
dec
jg
ret
and
dec
(bad)
outs
cs
dec
jno
daa
and
dec
pop
mov
daa
dec
mov
and
cs
adc
and
mov
and
mov
add
cs
dec
nop
cs
and
cs
cmp
and
hlt
cld
arpl
daa
leave
fidiv
daa
and
mov
pop
sbb
ficomp
xchg
inc
aas
dec
in
cs
and
cs
mov
sub
ins
daa
dec
outs
sub
and
lea
mov
cmps
(bad)
in
push
daa
and
mov
and
mov
add
push
daa
mov
sub
ins
daa
dec
outs
sub
and
lea
mov
nop
sbb
mov
nop
sbb
sub
dec
dec
jle
cmp
outs
scas
ja
mov
and
das
std
arpl
daa
and
iret
daa
jb
daa
or
and
mov
and
mov
add
cs
dec
das
das
daa
and
scas
ja
mov
and
aam
arpl
daa
leave
mov
mov
arpl
xchg
rcl
cs
(bad)
mov
iret
cli
fwait
rcr
jle
out
je
retf
movs
int
jge
jbe
or
cwde
arpl
(bad)
int
jmp
daa
and
and
outs
inc
and
outs
cs
mov
repnz
and
call
mov
dec
outs
js
mov
lods
js
xchg
jbe
daa
mov
sub
and
outs
cs
fstp
cmps
loopne
sub
ja
sub
ja
sub
ja
sbb
dec
sbb
ins
daa
dec
outs
cs
mov
nop
lods
jecxz
push
jae
push
sub
sbb
dec
jae
ins
daa
dec
cmp
and
es
std
mov
fsub
xchg
daa
out
dec
inc
and
mov
push
xor
adc
and
iret
pop
int
fsub
pop
(bad)
scas
out
jo
call
out
ret
outs
cs
rcr
xlat
and
popf
popa
and
test
outs
rcr
fidivr
(bad)
js
outs
cs
(bad)
daa
cwde
pusha
cs
and
(bad)
test
cmps
jp
out
push
fsub
sbb
dec
pushf
fild
jmp
pop
ja
daa
test
pop
xlat
test
scas
pop
fisubr
ss
mov
gs
stos
daa
ficom
ss
and
push
fsub
sbb
dec
aam
ins
daa
lods
jmp
and
daa
mov
jle
xor
outs
rcr
fidivr
(bad)
int3
outs
cs
shr
scas
out
push
fsub
aas
dec
adc
ins
daa
lods
jmp
out
js
daa
mov
jle
ins
nop
sub
rcr
fidivr
(bad)
nop
outs
cmps
pop
nop
sub
pop
dec
xchg
arpl
mov
jno
mov
and
pop
fisub
ss
in
lahf
gs
stos
daa
ficom
cmp
and
fimul
shl
call
push
xor
mov
and
inc
xor
outs
scas
pop
fisub
ss
mov
gs
stos
daa
ficom
cmp
and
push
fsubr
sbb
dec
and
ins
daa
lods
jmp
pop
js
daa
mov
jle
push
xchg
sub
rcr
fidivr
mov
outs
cmps
pop
nop
and
pop
pop
xchg
arpl
mov
jno
xor
outs
cmps
xlat
(bad)
mov
fsubr
popa
pop
ss
cmp
ficom
cmp
and
ins
(bad)
arpl
ins
clc
sub
rcr
fidivr
inc
daa
mov
mov
fmul
mul
pop
nop
xchg
arpl
addr16
xchg
rcr
dec
scas
or
and
lods
jecxz
out
rol
out
(bad)
nop
shr
ficom
sub
je
retf
je
cmp
and
xchg
cmps
loopne
cwde
js
cmps
ja
daa
lods
xor
es
(bad)
cs
nop
shl
addr16
daa
jbe
jp
and
jns
xor
and
cmp
das
and
jno
shr
push
pusha
push
scas
rcl
daa
mov
outs
inc
push
xchg
sub
(bad)
fidivr
(bad)
or
outs
cs
out
cs
cwde
pusha
cs
and
(bad)
test
nop
scas
call
aas
dec
(bad)
(bad)
jmp
fistp
daa
mov
nop
sub
xor
call
mov
jno
retf
outs
scas
call
aas
dec
(bad)
(bad)
jmp
jmp
cs
cdq
retf
aas
daa
and
(bad)
fsubp
call
fcomp
imul
outs
popf
gs
stos
retf
shl
into
cmp
and
xchg
aam
nop
shl
push
jle
ds
sub
(bad)
fidivr
(bad)
mov
pushf
pushf
(bad)
fcomp
imul
and
stos
retf
shl
add
daa
and
xchg
aam
nop
shl
push
jle
push
movs
sbb
fidivr
(bad)
je
outs
cs
shr
scas
out
xchg
aam
nop
shr
push
jle
dec
xchg
sub
(bad)
fidivr
(bad)
adc
outs
cmps
pushf
pushf
(bad)
fcomp
pop
ss
in
gs
stos
retf
shl
jbe
daa
and
xchg
aam
nop
shr
xchg
sub
(bad)
fidivr
(bad)
fdiv
pushf
(bad)
fcomp
fs
ss
cmps
popf
gs
stos
retf
shl
mov
daa
and
(bad)
(bad)
out
(bad)
(bad)
nop
shr
fst
inc
iret
xchg
sub
(bad)
fidivr
(bad)
cwde
xor
pushf
(bad)
fcomp
bound
dec
ins
call
nop
shl
retf
and
xchg
aam
nop
shr
push
jle
pop
xchg
sub
(bad)
fidivr
(bad)
lods
xor
iret
ins
daa
lods
jmp
xor
lahf
fld
test
repnz
nop
cmps
loope
pop
mov
pop
mov
fmulp
nop
shl
cwde
rcr
mov
nop
sbb
sub
xchg
iret
(bad)
nop
shl
cs
and
outs
scas
leave
mov
lahf
fld
test
not
ficom
cmps
loope
mov
daa
dec
pop
mov
xchg
ficom
stos
retf
fst
stos
cld
and
into
and
mov
nop
sub
out
xchg
fcmovnu
nop
rcr
and
call
stos
or
outs
cs
nop
rcr
fisubr
ins
adc
out
repz
nop
shr
fst
mul
loop
fcmovnu
nop
shl
out
ss
and
jmp
nop
cs
or
xchg
in
je
jbe
scas
fxch
loopne
sub
fdiv
in
test
ja
out
adc
fsubr
call
lods
sbb
outs
daa
and
sbb
into
ins
daa
dec
inc
mul
loop
fcmovnu
nop
shl
jp
daa
and
fimul
shl
call
daa
dec
jo
gs
stos
fcmovnu
nop
shl
xchg
cmp
and
jmp
outs
cs
movs
xchg
(bad)
fcomp
aas
mov
cs
(bad)
mov
fsubr
xchg
rcr
jno
ds
arpl
mov
jno
xchg
xor
outs
inc
and
sub
(bad)
fcomp
aas
(bad)
call
in
mov
fdiv
cmp
and
mov
mov
jmp
(bad)
rcr
ficom
cs
mov
loop
fcmovnu
nop
shl
retf
and
ins
daa
lods
jmp
pop
repnz
mov
pusha
stos
inc
and
stos
movs
xchg
rcr
fsubrp
out
and
repnz
outs
ja
movs
xchg
(bad)
fcomp
out
rol
out
not
nop
shr
fst
sbb
and
xchg
fst
(bad)
and
retf
jmp
mov
fdiv
xor
outs
lods
jecxz
pop
mov
mov
jno
sbb
fst
sbb
and
mov
retf
mov
mov
nop
ror
push
jg
mov
out
sub
fist
shr
mov
nop
sub
rol
out
jmp
nop
shr
fst
rcr
fidivr
inc
icebp
stc
sub
rcr
fidivr
(bad)
pop
aaa
outs
movs
in
mov
fdiv
jmp
cwde
rcr
lods
rcl
(bad)
nop
jns
xchg
jl
daa
stos
shl
rcr
nop
mov
dec
popa
xchg
xor
aad
rcr
mov
outs
mov
fdiv
fwait
rcr
nop
ror
push
jle
daa
lods
jmp
push
jl
daa
lods
rcl
(bad)
nop
jns
pushf
fwait
(bad)
fcomp
loop
and
cmp
je
outs
cs
movs
xchg
(bad)
fcomp
aas
inc
daa
(bad)
fcmovu
ficom
cs
and
cs
jno
cli
and
mov
jno
rcl
leave
xchg
jecxz
fsubrp
jmp
jmp
int
rcr
leave
xor
and
ror
outs
cs
popa
sbb
daa
and
(bad)
mov
nop
sar
xor
in
outs
jnp
(bad)
xlat
dec
xor
outs
(bad)
pushf
xor
je
cmp
scas
stc
pop
imul
arpl
daa
dec
outs
cmp
xchg
xor
test
pop
xor
jle
and
es
cmp
and
scas
int3
mov
sub
test
push
mov
and
call
mov
fsubr
cs
inc
jle
daa
dec
nop
cs
and
mov
add
outs
cs
pop
jle
daa
jno
push
xor
outs
scas
int3
loop
cs
dec
imul
and
stos
xchg
iret
nop
shl
sbb
iret
out
jg
daa
dec
outs
inc
mov
sub
rcr
aas
(bad)
sub
nop
shl
outs
sub
sub
sub
pop
xchg
arpl
and
ins
daa
mov
outs
mov
dec
aaa
jo
out
ror
scas
aam
loopne
xor
jmp
(bad)
jle
test
loopne
out
scas
mov
ret
fcomp
test
shl
retf
push
xor
rcr
hlt
ins
or
fxch
loopne
sub
fdiv
in
test
ja
out
call
mov
int3
ret
fcomp
out
stos
xchg
int3
nop
shl
stos
jmp
push
scas
scas
in
sbb
daa
out
test
ficom
cs
test
fsub
and
and
movs
mov
ficomp
mov
stos
test
nop
shl
dec
jmp
mov
fdiv
and
and
aam
jge
daa
dec
outs
mov
fdiv
stos
xchg
iret
nop
shl
es
and
stos
mov
leave
sub
fcomp
loop
test
nop
shl
cmps
jmp
aas
dec
outs
mov
fdiv
sub
and
es
pop
and
and
fst
pop
outs
cs
pushf
mov
daa
dec
dec
jmp
inc
addr16
jl
daa
lods
ror
nop
mov
daa
cwde
dec
cs
and
and
mov
loope
sub
ins
daa
leave
sbb
push
stc
out
stos
pushf
inc
rcr
loop
popa
imul
cs
ror
mov
mov
daa
dec
dec
jmp
inc
pop
mov
cs
arpl
lods
ror
retf
mov
daa
cwde
dec
cs
and
and
mov
loope
sub
outs
daa
leave
jp
daa
and
jmp
nop
mov
daa
cwde
data16
and
scas
loop
cs
and
cs
and
addr16
outs
mov
and
cmps
bound
add
and
and
cs
lods
sub
enter
iret
jae
cs
lods
loop
enter
out
fisubr
scas
sbb
outs
pop
fimul
mov
stos
pushf
fcmovb
fcomp
cmp
push
xchg
xchg
sub
outs
inc
daa
lods
sub
xlat
shr
loopne
outs
cmps
retf
daa
and
cs
lods
sub
enter
iret
push
jle
daa
lods
loop
enter
out
fisubr
scas
sbb
outs
pop
fimul
mov
stos
pushf
fcmovb
fcomp
cmp
push
xchg
xchg
daa
lods
sub
xlat
shr
dec
outs
fcom
sub
outs
cs
cmc
push
cs
(bad)
mov
fsubr
nop
cmps
in
push
cld
arpl
(bad)
pusha
outs
cmps
(bad)
in
loop
fcomp
scas
fs
inc
daa
pop
outs
cs
and
cmps
(bad)
cmc
pop
sub
daa
leave
(bad)
and
and
imul
test
and
(bad)
std
outs
cs
and
cs
test
mul
shr
dec
mov
in
sub
daa
and
loopne
cmps
cs
and
bound
outs
cs
and
cs
and
cs
and
in
dec
mov
and
iret
cld
arpl
daa
leave
push
daa
and
cs
xchg
sub
cs
arpl
daa
dec
outs
mov
imul
sub
sbb
outs
cmps
push
inc
inc
mov
sub
cs
dec
adc
and
mov
outs
cs
movs
ret
ret
fcomp
out
lds
jecxz
cs
dec
outs
jle
mov
ret
fcomp
test
mov
nop
shl
and
scas
stc
inc
imul
int3
nop
shl
jmp
dec
fld
push
mul
pop
jle
arpl
and
iret
scas
stc
rcr
mov
sbb
movs
add
call
fld
outs
cs
leave
sti
xchg
fsubp
test
out
stos
movs
mov
daa
dec
outs
inc
retf
push
das
cs
and
cs
jno
cmps
sub
outs
mov
fdiv
cs
and
xor
inc
daa
dec
outs
(bad)
enter
ja
push
and
and
cs
dec
outs
rcl
and
outs
daa
leave
and
and
iret
fwait
popa
cs
mov
outs
mov
nop
das
outs
cs
and
imul
xchg
and
out
mov
in
aaa
and
cmps
ret
push
and
jbe
sbb
scas
loopne
ins
cs
stos
sub
movs
fnstcw
mov
pop
popa
lods
fbld
pusha
stos
inc
and
into
jmp
cs
sbb
das
daa
and
push
and
sbb
outs
cs
push
je
and
sub
push
push
and
mov
enter
and
adc
sub
cli
daa
and
sar
sub
call
nop
cmps
mov
test
das
fild
sub
rcr
fiadd
lods
jecxz
out
iret
fcom
rcr
fidivr
rcl
leave
jle
daa
and
sub
loop
out
fcom
push
pusha
outs
(bad)
shr
sbb
movs
(bad)
rcr
fiadd
fcom
movs
mov
xchg
rcr
or
out
ficom
movs
mov
or
repnz
nop
lods
iret
and
nop
ror
mov
(bad)
push
adc
rcr
fiadd
fcom
into
fcmovu
nop
add
fdiv
cs
and
cs
mov
daa
mov
outs
lods
sbb
ins
daa
and
out
outs
xchg
ins
daa
add
gs
fst
add
call
fld
sbb
ja
nop
(bad)
ss
sbb
ins
daa
and
stos
outs
fcom
call
nop
ja
pop
push
das
fild
cs
and
cs
dec
outs
(bad)
and
cs
jp
cs
sub
and
das
push
rcl
xchg
sub
outs
xchg
cmp
(bad)
out
retf
fcom
sbb
and
bound
nop
shl
and
sub
push
sub
pop
mov
push
sub
mov
push
sub
add
sub
sub
xor
cs
sub
cs
fcom
les
xchg
rcr
ficom
sub
xchg
push
sub
mov
pop
sahf
aaa
xor
push
xor
inc
fcomp
nop
fcom
mov
or
cs
(bad)
mov
fsubr
xchg
rcr
and
mov
fcom
repnz
nop
jle
scas
arpl
daa
test
(bad)
fcmovu
nop
scas
loopne
jne
daa
enter
and
(bad)
push
(bad)
jmp
daa
lods
jmp
adc
mov
and
scas
call
push
dec
and
ins
daa
dec
outs
(bad)
jo
outs
fcom
mov
and
(bad)
shl
cs
fstp
scas
out
stos
ficom
rcr
fisubr
shl
mov
outs
das
sub
shl
and
mov
jno
sbb
cmps
gs
lods
loop
fcomp
nop
lods
out
fisubr
scas
sbb
outs
pop
fisub
add
ins
daa
lods
repnz
fcomp
nop
jge
(bad)
rcr
mov
nop
cs
push
dec
inc
daa
dec
outs
inc
adc
sub
out
and
adc
sbb
and
xchg
mov
(bad)
out
iret
fcom
stos
ficom
fcmovnu
ficom
ins
daa
lods
jmp
mov
stos
ds
fisubr
daa
lods
jmp
adc
mov
and
call
push
dec
and
ins
daa
dec
outs
(bad)
jo
outs
fcom
mov
sub
and
outs
rcr
fsubrp
out
popa
out
adc
and
xlat
movs
fnstcw
pop
dec
outs
inc
daa
dec
mov
and
cs
ficomp
mov
outs
(bad)
call
loopne
cs
out
cs
nop
cs
sbb
cwde
mov
stos
jmp
ficom
sub
sbb
push
dec
and
ins
daa
dec
outs
mov
outs
fcom
mov
and
movs
and
outs
rcr
fisubr
mov
sbb
xchg
pop
fild
nop
rcr
jno
stos
rcr
nop
shl
inc
mul
loop
rcr
nop
shl
cli
and
aaa
dec
nop
cs
and
stos
ficom
scas
xchg
(bad)
fsubr
outs
cmps
pushf
outs
rcr
fisubr
pop
dec
outs
inc
daa
dec
test
and
cs
ficomp
xchg
(bad)
xor
outs
cs
sub
daa
mov
outs
mov
fdiv
stos
rcr
nop
shl
inc
mul
loop
rcr
nop
shl
inc
and
aaa
dec
nop
cs
and
stos
ficom
add
sub
cmps
pushf
outs
rcr
fisubr
pop
dec
outs
inc
daa
dec
(bad)
stc
and
cs
ficomp
mov
sub
into
sub
xchg
pop
fild
nop
rcr
jno
stos
rcr
nop
shl
int
gs
stos
rcr
nop
shl
stos
and
and
jmp
loop
ficom
push
mov
sub
cmps
pushf
outs
rcr
fisubr
pop
dec
outs
inc
daa
dec
add
and
cs
ficomp
mov
sub
into
sbb
lods
loop
fcomp
nop
lods
out
fisubr
scas
sbb
outs
pop
fisub
add
add
arpl
daa
leave
or
daa
and
cs
xor
daa
enter
and
shl
retf
xchg
movs
nop
rcr
fsubp
stos
and
nop
rcr
sbb
push
push
pop
dec
outs
inc
daa
dec
inc
stc
and
cs
ficomp
mov
outs
cs
in
cs
mov
nop
das
lods
movs
nop
rcr
ficom
push
cwde
out
push
(bad)
jmp
fcomp
aas
mov
fdiv
add
arpl
mov
jno
imul
and
jecxz
pop
shl
and
mov
jno
sbb
mov
push
das
fcomp
nop
cs
add
aas
lock
daa
leave
ret
and
cs
jnp
cs
enter
and
shl
retf
xchg
movs
xchg
rcr
fsubp
stos
and
nop
rcr
sbb
push
push
pop
dec
outs
inc
daa
dec
cmp
iret
dec
push
push
mov
outs
cs
sub
cs
mov
nop
das
stos
lods
outs
rcr
fsubrp
out
popa
out
adc
and
xlat
sub
nop
pop
in
(bad)
cmps
fist
xchg
cmps
loopne
jmp
movs
call
stc
sub
rcr
fidivr
(bad)
sub
outs
movs
in
xchg
cdq
jge
cs
out
iret
fcom
rcr
fsubp
jmp
dec
and
pop
cs
and
inc
addr16
push
daa
test
fcmovu
ficom
inc
daa
(bad)
fcmovu
ficom
cmps
sbb
call
bound
mov
fisubr
scas
sbb
outs
pop
fisubr
cli
(bad)
ficom
mov
and
ror
sti
push
daa
dec
outs
mov
fdiv
sub
ror
fcmovu
ficom
cs
lods
call
popa
out
adc
and
xlat
dec
and
mov
jne
loop
rcr
nop
shl
fcmovu
ficom
cs
and
stos
xlat
fcom
inc
xlat
shr
fcomp
xchg
and
xchg
aad
rcr
leave
jle
daa
and
cs
lahf
imul
daa
dec
imul
inc
daa
and
dec
add
outs
daa
leave
(bad)
sub
and
stos
rcr
nop
shr
movs
mov
fcomp
in
ret
fcom
sub
and
rcr
fiadd
mov
daa
mov
push
das
daa
push
xchg
cmps
in
outs
mov
fdiv
inc
mov
sub
rcr
fiadd
inc
daa
lods
jmp
and
ret
outs
rcl
leave
mov
daa
and
ror
push
ins
cs
out
inc
xchg
arpl
daa
and
fisttp
xchg
cmps
loopne
imul
call
outs
inc
ja
sub
cmps
leave
jmp
jmp
lock
daa
leave
mov
xchg
and
shr
cmps
loopne
jle
push
xor
sbb
fcom
les
cs
xor
in
outs
jnp
(bad)
in
ret
cmp
push
addr16
inc
sub
dec
scas
fldcw
scas
out
imul
outs
das
daa
and
mul
outs
movs
pop
jg
sub
sbb
sub
cs
mov
xchg
fld
test
(bad)
scas
out
sbb
mov
nop
sbb
mov
pop
scas
xchg
pop
sub
pop
add
and
inc
mov
and
and
and
and
(bad)
mov
sbb
jae
and
and
and
adc
daa
push
rcl
add
outs
daa
leave
inc
sub
and
mov
out
adc
sub
rcl
leave
repnz
daa
leave
jle
daa
and
mov
out
adc
sub
rcl
movs
into
ins
daa
leave
call
fstp
cmps
loopne
mov
adc
repnz
daa
push
imul
xchg
pop
and
outs
adc
daa
push
imul
cmp
outs
adc
daa
push
imul
mov
stos
jb
xchg
adc
daa
push
imul
xchg
pop
and
outs
daa
cld
push
jge
push
xor
sbb
jno
xchg
and
and
outs
jno
jp
in
aaa
and
add
pushf
ins
daa
mov
cs
and
add
jmp
daa
and
add
pushf
ins
daa
mov
cs
and
add
jmp
daa
and
add
pushf
ins
daa
mov
cs
and
add
jmp
daa
and
add
pushf
ins
daa
mov
cs
and
add
jmp
daa
and
scas
les
jns
lahf
outs
cs
test
scas
sbb
sbb
addr16
jle
and
jecxz
out
fld
scas
pop
push
test
imul
add
aam
cmp
data16
push
and
(bad)
pop
push
pushf
lds
pushaw
nop
and
scas
pop
and
add
cs
dec
outs
jns
and
(bad)
sbb
nop
sar
lods
ja
int
ds
and
aaa
and
and
outs
pop
int3
or
iret
daa
and
jae
addr16
out
nop
rcr
fsubrp
aam
(bad)
cwde
imul
add
dec
sub
test
test
and
addr16
and
add
ins
daa
mov
cs
and
add
ins
daa
mov
cs
and
add
ins
daa
mov
cs
and
add
ins
daa
mov
cs
and
add
ins
daa
mov
cs
and
add
ins
daa
mov
cs
and
add
ins
daa
mov
cs
and
add
ins
daa
mov
cs
and
add
ins
daa
mov
cs
and
add
ins
daa
mov
cs
and
add
ins
daa
mov
cs
and
add
ins
daa
mov
cs
and
add
ins
daa
mov
cs
and
add
ins
daa
mov
cs
and
add
ins
daa
mov
cs
and
add
ins
daa
mov
cs
and
add
jmp
daa
and
add
jmp
daa
and
add
jmp
daa
and
add
jmp
daa
and
add
jmp
daa
and
add
jmp
daa
and
add
jmp
daa
and
add
jmp
daa
and
add
jmp
daa
and
add
jmp
daa
and
add
jmp
daa
and
add
jmp
daa
and
add
jmp
daa
and
add
jmp
daa
and
add
jmp
daa
and
add
jmp
daa
and
add
pushf
ins
daa
mov
cs
and
add
pushf
ins
daa
mov
cs
and
add
pushf
ins
daa
mov
cs
and
add
pushf
ins
daa
mov
cs
and
add
pushf
ins
daa
mov
cs
and
add
pushf
ins
daa
mov
cs
and
add
pushf
ins
daa
mov
cs
and
add
pushf
ins
daa
mov
cs
and
add
pushf
ins
daa
mov
cs
and
add
pushf
ins
daa
mov
cs
and
add
pushf
ins
daa
mov
cs
and
add
pushf
ins
daa
mov
cs
and
add
pushf
ins
daa
mov
cs
and
add
pushf
ins
daa
mov
cs
and
add
fwait
ins
daa
mov
cs
and
add
jmp
daa
and
add
fwait
ins
daa
mov
cs
and
add
jmp
daa
and
add
fwait
ins
daa
mov
cs
and
add
jmp
daa
and
add
fwait
ins
daa
mov
cs
and
add
jmp
daa
and
add
fwait
ins
daa
mov
cs
and
add
jmp
daa
and
add
fwait
ins
daa
mov
cs
and
add
jmp
daa
and
add
fwait
ins
daa
mov
cs
and
add
jmp
daa
and
add
fwait
ins
daa
mov
cs
and
add
jmp
daa
and
add
ins
daa
mov
cs
and
add
ins
daa
mov
cs
and
add
ins
daa
mov
cs
and
add
ins
daa
mov
cs
and
add
ins
daa
mov
cs
and
add
ins
daa
mov
cs
and
add
ins
daa
mov
cs
and
add
ins
daa
mov
cs
and
add
ins
daa
mov
cs
and
add
ins
daa
mov
cs
and
add
ins
daa
mov
cs
and
add
ins
daa
mov
cs
and
add
ins
daa
mov
cs
and
add
ins
daa
mov
cs
and
add
jmp
daa
and
add
jmp
daa
and
add
jmp
daa
and
add
jmp
daa
and
add
jmp
daa
and
add
jmp
daa
and
add
jmp
daa
and
add
jmp
daa
and
add
jmp
daa
and
add
jmp
daa
and
add
jmp
daa
and
add
jmp
daa
and
add
fwait
ins
daa
mov
cs
and
add
fwait
ins
daa
mov
cs
and
add
fwait
ins
daa
mov
cs
and
add
fwait
ins
daa
mov
cs
and
add
fwait
ins
daa
mov
cs
and
add
fwait
ins
daa
mov
cs
and
add
fwait
ins
daa
mov
cs
and
add
fwait
ins
daa
mov
cs
and
add
fwait
ins
daa
mov
cs
and
add
fwait
ins
daa
mov
cs
and
add
fwait
ins
daa
mov
cs
and
add
fwait
ins
daa
mov
cs
and
add
fwait
ins
daa
mov
cs
and
add
fwait
ins
daa
mov
cs
and
add
fwait
ins
daa
mov
cs
and
add
fwait
ins
daa
mov
cs
.byte
outs
