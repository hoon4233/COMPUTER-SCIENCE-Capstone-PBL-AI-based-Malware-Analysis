imul
cmp
cld
push
cmp
xchg
(bad)
loop
out
movs
leave
and
xchg
cmps
out
and
std
sahf
push
(bad)
jp
cdq
fmul
dec
or
shl
call
jle
ds
out
cmc
inc
lock
daa
arpl
and
std
pusha
inc
jp
(bad)
out
out
mov
pop
pop
enter
jge
jle
xchg
xchg
mov
xor
sbb
out
sti
dec
popa
adc
mov
movs
aad
jo
test
shr
(bad)
fldenv
pop
imul
retf
inc
cmp
sbb
ffree
je
xor
add
or
cmp
adc
stos
mov
je
mov
enter
add
iret
mov
out
stos
addr16
fimul
sub
pop
pop
outs
mov
cmc
gs
xchg
or
or
retf
hlt
pushf
lea
call
into
mov
test
rol
popf
ror
outs
lds
and
push
repz
dec
outs
jge
cmps
and
lods
xchg
xchg
pop
scas
frstor
jmp
pop
pusha
out
int3
les
loopne
sub
enter
and
jl
(bad)
mov
ror
cmps
popf
scas
pop
adc
mov
pop
test
mov
cmc
adc
mov
inc
xor
xor
or
nop/reserved
mov
sbb
stc
stos
arpl
sbb
stos
and
mov
mov
pop
(bad)
(bad)
mov
xchg
and
pop
std
mov
and
push
dec
push
fild
add
add
sbb
movs
and
scas
loope
popf
rcl
push
push
mov
sub
and
adc
dec
xor
(bad)
cmps
mov
or
add
xchg
jb
dec
xor
mov
(bad)
jo
push
xchg
scas
xor
pop
ja
xor
rol
push
int
jg
mov
cmp
or
or
clc
lods
cld
lea
inc
loope
lahf
mov
cmp
scas
inc
lock
mov
out
add
inc
xor
pop
in
scas
test
and
scas
push
xchg
cwde
jbe
(bad)
repz
pop
pop
cmp
cmp
add
sti
dec
loop
and
dec
iret
push
dec
xchg
das
cwde
das
pop
call
or
fdivr
add
pop
ins
sti
jo
test
xchg
popa
in
mov
aam
std
inc
xchg
mov
inc
jae
cmc
loopne
iret
rep
gs
mov
jno
aam
mov
call
(bad)
ror
cmp
dec
pop
stos
sbb
cdq
scas
dec
xchg
add
cwde
mov
imul
les
test
test
jp
jg
out
mov
dec
mov
or
ret
mov
pushw
push
add
outs
inc
mov
and
jb
hlt
push
loope
lahf
mov
cmp
das
push
popf
mov
pushf
repz
push
add
sub
xor
mov
dec
jb
sub
or
fidiv
(bad)
clc
sbb
pop
clc
repnz
mov
xchg
add
push
inc
call
out
sub
mov
shl
mov
hlt
add
push
mov
mov
adc
pushf
adc
rcl
xchg
and
mov
out
add
jae
push
js
cmc
sbb
ds
add
test
stos
jmp
or
sbb
stos
mov
cmp
jp
and
xor
lods
popa
ret
cmp
inc
test
in
and
leave
mov
xchg
call
std
in
jle
adc
and
jp
adc
cs
dec
push
loop
jb
xor
(bad)
push
js
aad
xchg
and
or
adc
rcr
xor
(bad)
mov
push
rcl
adc
lahf
dec
or
xor
and
sub
icebp
ret
dec
popa
in
mov
mov
mov
lods
popa
les
test
push
aad
adc
pop
inc
cld
sbb
int
pop
xor
pop
pusha
pop
movs
adc
call
rol
push
outs
cmp
sbb
lahf
es
push
xchg
retf
push
and
lea
push
neg
pop
mov
push
xor
push
ficom
(bad)
enter
sub
or
stos
jns
in
mov
psubw
sub
mov
mov
ret
pop
aaa
xlat
cmp
mov
cmps
mov
push
leave
push
xchg
and
outs
sub
pop
jmp
add
repnz
xchg
loope
cmp
in
fcomp
bound
retf
mov
sar
cmp
pop
iret
imul
loope
arpl
xchg
cld
dec
inc
add
dec
mov
inc
mov
push
mov
(bad)
cld
mov
mov
punpckhwd
jb
mov
(bad)
dec
imul
push
xor
jbe
fs
lock
mov
aas
lahf
mov
push
mov
xchg
xchg
jno
jecxz
xchg
xchg
sub
mov
adc
push
ret
cmp
and
and
pop
or
cmp
dec
cmp
ficomp
mov
cmp
sti
(bad)
and
ror
in
or
dec
(bad)
jle
push
js
stos
imul
add
pop
lahf
pop
xchg
dec
in
bound
pushf
xor
nop
push
mov
xor
into
mov
cmp
mov
nop
sbb
jbe
jno
in
test
dec
inc
lods
ret
clc
popf
sub
jne
out
dec
cmp
(bad)
xchg
sub
out
(bad)
fild
arpl
pop
adc
pusha
sahf
ret
imul
test
cld
clc
(bad)
sar
out
hlt
out
add
adc
cmps
push
cmp
inc
sahf
jo
adc
les
push
mov
popa
repz
movs
sar
mov
pop
fwait
mov
fdiv
jb
stos
or
data16
mov
jle
int
mov
mov
out
or
add
fchs
mov
neg
sub
xor
mov
or
shl
(bad)
fdiv
dec
sub
stos
js
jae
or
or
or
pop
stc
rcr
arpl
in
pushf
xchg
cld
inc
mov
lock
dec
xchg
call
jno
popa
daa
call
and
mov
pop
inc
cmps
call
gs
mov
inc
call
stc
clc
mov
aaa
out
adc
mov
aaa
cmp
adc
icebp
lock
push
and
pop
(bad)
sub
jns
and
pusha
(bad)
fiadd
icebp
mov
das
out
(bad)
mov
mov
dec
sar
jb
aaa
enter
dec
jle
fstp
mov
or
sub
jae
dec
xchg
sbb
das
cld
mov
vpaddd
jne
or
outs
enter
dec
mov
stc
sbb
xor
stos
outs
sub
je
lods
ins
dec
mov
ret
call
test
inc
fcomp
clc
add
cli
std
mov
fcmove
and
and
xor
and
pop
arpl
call
movs
loop
adc
movs
xor
clc
add
outs
jge
outs
aam
mov
nop
push
jge
mov
xor
dec
jb
bound
inc
jbe
jb
rcr
inc
push
je
sti
(bad)
cmp
sti
retf
(bad)
rcr
jbe
enter
mov
cwde
jns
sub
cdq
ret
and
cmp
les
repnz
je
lds
repnz
jl
pop
fwait
and
xchg
cli
xchg
and
jmp
into
pop
mov
ds
inc
mov
push
sub
or
add
push
adc
mov
sbb
aad
xor
jl
arpl
loopne
std
int
xor
xchg
pop
imul
mov
aaa
js
push
mov
js
add
cwde
sbb
fisub
call
dec
icebp
or
dec
in
mov
imul
adc
(bad)
in
pop
arpl
fcomp
mov
sub
adc
jmp
fwait
retf
dec
out
xor
mov
ret
mov
or
inc
fild
lds
out
jno
jl
les
pop
jbe
or
shl
ss
adc
pop
mov
pop
and
(bad)
ds
fadd
popw
arpl
test
cli
push
int
push
jae
in
mov
fstp
or
sbb
jecxz
loop
sbb
push
dec
jne
es
jmp
or
inc
jnp
outs
xchg
outs
jb
mov
in
js
push
add
aas
cli
add
pop
pop
movs
arpl
xor
mov
cmp
dec
xchg
push
xor
mov
inc
aas
fld
mov
dec
adc
mov
int3
jp
test
lock
inc
or
push
repz
cmp
cmp
cdq
shl
push
leave
sub
fs
or
test
addr16
icebp
aad
inc
jg
pop
cli
(bad)
stos
hlt
or
mov
std
and
pop
lods
xor
movs
retf
jns
push
in
mov
call
lea
mov
xchg
adc
and
stos
or
xor
inc
mov
push
inc
xchg
sub
mov
out
fdivr
test
jbe
jl
out
ja
mov
jmp
lods
mov
mov
add
mov
pop
repnz
movs
lock
mov
test
lods
or
icebp
push
cdq
xlat
bound
ds
in
mov
inc
mov
pop
xor
in
dec
ret
mov
cmps
or
jle
and
ins
xlat
out
mov
fs
cli
cs
mov
out
xor
scas
jo
les
jbe
sbb
mov
mov
int
push
push
or
pop
out
dec
fist
mov
xor
add
pop
(bad)
push
xchg
ret
add
ja
mov
lock
inc
or
out
and
xchg
sbb
in
mov
shl
push
stos
adc
retf
add
lods
shl
ror
mov
daa
shl
aas
fld
pop
adc
retf
icebp
gs
xchg
call
out
cwde
cld
movs
icebp
or
lods
call
mov
xchg
jo
add
or
push
hlt
lds
in
retf
mov
mov
loopne
into
loop
sub
pop
movs
jecxz
cmp
ret
xchg
xor
popa
xchg
sub
test
xchg
sbb
cmc
mov
xchg
adc
fsub
fidivr
(bad)
jno
inc
or
daa
jmp
ins
in
(bad)
xor
imul
fidiv
cmps
jge
cwde
scas
arpl
sub
xchg
cdq
(bad)
push
or
jae
inc
pop
jns
add
icebp
xor
loop
call
xor
xchg
push
js
push
lock
pop
(bad)
sbb
push
adc
or
scas
daa
in
jo
xchg
ret
enter
ss
sahf
lahf
push
or
enter
and
or
jle
push
and
jl
xor
loope
and
cwde
push
add
pop
pop
fs
push
push
cmps
add
es
xlat
cmp
sub
push
add
sub
push
into
cmp
mov
loope
or
xchg
cmc
mov
scas
pop
rcr
fild
pop
adc
mov
or
adc
shl
pop
loopne
inc
loop
inc
cli
shr
out
je
mov
outs
(bad)
inc
int3
fwait
(bad)
in
sub
loop
(bad)
aas
sbb
adc
cmc
ficom
adc
sub
sub
add
cmp
cpuid
xchg
cmp
outs
pop
add
cwde
add
sub
lods
sub
dec
fnstenv
dec
out
add
jge
add
xchg
push
push
jmp
(bad)
not
retf
pop
sar
inc
xor
jno
adc
push
rcl
out
outs
retf
pop
dec
data16
pop
cwde
cmp
xchg
fild
(bad)
leave
jecxz
ror
imul
sub
mov
ror
xor
or
cli
cmp
jnp
pop
stos
clc
or
enter
test
out
fs
popa
or
mov
test
xchg
repnz
ss
inc
clc
jl
jb
nop
add
loope
mov
iret
push
inc
ficom
call
sbb
cwde
mov
jns
fwait
xchg
xchg
cli
lahf
inc
movs
xchg
pop
push
loop
jmp
jbe
call
adc
mov
or
mov
ins
ja
(bad)
enter
sub
gs
push
les
pop
rcr
xchg
inc
enter
xor
pop
mov
push
pop
pop
or
pop
iret
pushf
outs
cmps
push
data16
pop
push
fld
xor
popa
call
dec
in
inc
aad
sbb
or
ret
es
mov
adc
add
in
sbb
out
lods
add
out
scas
jecxz
or
fidivr
mov
xchg
ret
inc
sub
fcomp
mov
jge
inc
pop
xchg
ins
add
add
icebp
fidivr
mov
aaa
sbb
cmp
jp
inc
pop
cmp
popa
inc
adc
push
jg
daa
cmp
sbb
nop
rdtsc
sub
or
sbb
mov
dec
movs
(bad)
test
fucomip
je
pop
mov
cmps
and
mov
pop
rep
dec
mov
xchg
xlat
cld
and
shl
dec
into
xchg
and
and
enter
mov
sub
and
rol
int
scas
add
or
fwait
mov
in
retf
rcl
lahf
or
cmp
ret
adc
jp
pop
pusha
pop
lock
sub
jmp
adc
jns
dec
loope
xchg
loop
mov
and
out
std
mov
or
mov
lea
sbb
cmc
mov
or
cmp
xchg
and
mov
mov
hlt
lock
clc
xor
call
pop
pop
pop
mov
mov
imul
aas
mov
xchg
xchg
mov
mov
outs
inc
scas
inc
cmps
inc
or
lock
push
fcmovnu
pop
scas
mov
imul
in
rcr
dec
retf
mov
mov
pop
cmp
mov
mov
and
lahf
retf
popa
shr
push
xchg
stos
pop
push
cmp
lock
sti
test
jae
rol
mov
leave
add
add
test
fadd
outs
xchg
out
movs
jmp
xor
xchg
dec
dec
mov
jl
cmp
jo
sub
jnp
mov
cmp
stc
pop
mov
inc
and
mov
daa
inc
ror
jnp
out
or
scas
bextr
mov
and
cmp
jbe
int
cmp
lahf
sbb
dec
xor
in
or
mov
mov
pop
pop
nop
out
test
hlt
mov
nop
retf
xor
fcmovb
adc
sbb
push
push
xor
ds
add
pop
outs
lods
imul
es
mov
cmc
cmp
push
int
lahf
pop
adc
fnsave
arpl
pop
cmc
jmp
leave
dec
pop
xlat
push
cmp
outs
xor
loopne
cmp
call
fadd
inc
das
retf
cwde
add
inc
and
pop
lods
xor
sbb
sti
cmp
dec
sbb
rcr
inc
imul
aas
out
push
mov
(bad)
cmp
gs
int
dec
mov
ror
clc
jo
sahf
push
call
pop
xchg
inc
jge
cmps
stos
inc
xchg
and
mov
pop
push
xchg
inc
call
xchg
enter
repnz
jg
push
lock
push
mov
cmovs
inc
pop
pop
repz
jbe
repnz
popf
push
mov
int3
xor
not
aam
arpl
mov
jg
fs
es
mov
lahf
retf
pop
push
dec
mov
stc
ja
data16
lahf
mov
inc
cdq
dec
ret
mov
mov
cmps
ja
fcom
push
cmp
les
inc
add
fs
into
inc
jl
mov
rcr
dec
movs
sbb
jmp
call
addr16
hlt
sqrtps
lds
aas
ja
or
call
or
or
gs
mov
cdq
arpl
mov
mov
sbb
fs
fcomp
jl
test
lock
push
int3
inc
cli
stos
pop
adc
and
jg
sub
dec
dec
jle
imul
jo
shr
sbb
pop
stc
push
cdq
push
mov
mov
add
inc
(bad)
imul
fs
retf
sub
mov
add
push
ret
clc
int3
sub
push
and
dec
mov
stos
and
test
jae
(bad)
or
dec
jge
arpl
aad
fwait
xor
ins
push
test
lods
inc
lods
or
scas
movs
mov
xchg
push
enter
(bad)
cdq
fwait
sub
and
dec
idiv
sub
cmp
(bad)
dec
(bad)
movs
mov
push
in
or
pop
pop
xlat
add
dec
mov
stos
test
push
add
bound
dec
movs
ret
inc
push
mov
inc
xchg
stos
inc
and
sti
cmps
push
hlt
clc
dec
dec
xlat
(bad)
mov
inc
xor
pop
mov
(bad)
cwde
jo
mov
mov
div
je
xchg
push
xchg
add
mov
daa
outs
pop
or
mov
push
bound
out
dec
dec
jg
push
shl
dec
push
dec
cmp
cld
pop
ret
push
popf
enter
xor
sub
xchg
sub
enter
dec
pop
cmp
sti
jbe
stos
bound
dec
retf
imul
sub
xchg
fucom
cmps
or
xchg
mov
add
int3
retf
jg
in
(bad)
inc
ins
mov
icebp
loop
and
cli
pop
jb
hlt
dec
push
das
loope
pop
xor
sar
push
aad
test
pop
ins
fs
or
in
callw
sahf
lods
jns
imul
(bad)
dec
push
and
cmp
add
adc
call
mov
mov
das
add
sub
and
fisubr
jb
dec
push
dec
inc
add
dec
arpl
inc
xor
icebp
out
mov
fs
xchg
ja
fld
and
adc
pop
mov
dec
in
dec
(bad)
outs
popa
adc
sub
adc
ret
push
jge
add
xor
jp
test
xchg
test
inc
loop
and
cmp
(bad)
or
mov
clc
nop
jmp
mov
mov
mov
cli
addr16
vorps
lea
mov
and
(bad)
je
mov
and
adc
dec
pop
mov
cmp
jp
pop
adc
xchg
mov
in
int3
enter
cs
out
jb
(bad)
in
inc
mov
in
xor
rcr
sub
push
inc
inc
push
pop
dec
neg
fsub
cld
lahf
fsub
lea
pop
jb
jg
xor
mov
or
lahf
(bad)
popa
xor
and
fsubr
adc
jge
mov
xchg
mov
sbb
sbb
ja
xchg
mov
arpl
sbb
mov
ja
jecxz
sbb
add
sub
jne
mov
xor
loope
sub
sbb
cmp
sub
xor
jl
push
xchg
mov
cmps
cwde
das
popa
mov
ror
xchg
pop
test
dec
mov
(bad)
fistp
out
jmp
push
pop
pushf
nop
aam
jne
lds
fiadd
popa
mov
push
jle
sbb
mov
call
ret
jo
mov
sbb
or
xor
push
sub
push
push
add
mov
retf
mov
sbb
xchg
sub
rcl
test
adc
mov
adc
xor
iret
(bad)
fild
int3
fidiv
xchg
push
out
jl
or
into
ja
dec
mov
sbb
jp
mov
enter
cli
out
mov
retf
je
imul
les
mov
fwait
push
add
dec
out
sub
push
mov
dec
push
retf
das
inc
xor
es
xor
jmp
std
sub
test
lea
xor
jg
(bad)
das
cdq
aaa
cmp
pop
xor
xor
data16
pushf
and
dec
aaa
mov
push
out
call
gs
xor
into
leave
sahf
mov
sahf
inc
adc
sub
lock
cmp
push
adc
cld
out
pusha
pop
imul
daa
mov
inc
inc
jno
inc
pop
sbb
pop
addr16
stos
or
call
sbb
xor
jmp
push
test
inc
lea
fwait
ja
inc
jl
jecxz
xchg
pop
push
push
inc
cwde
and
adc
mov
pop
(bad)
fmul
dec
sahf
mov
je
pop
and
neg
inc
push
dec
lds
jge
shl
outs
dec
jl
fdivr
call
xlat
scas
add
inc
push
mov
outs
and
inc
xor
movs
or
clc
jmp
test
inc
mov
cwde
jmp
js
jno
add
jbe
and
adc
pushf
jb
pushf
aad
inc
movs
arpl
mov
mov
int
out
repnz
or
mov
leave
mov
imul
inc
rcl
xchg
div
add
inc
add
and
(bad)
push
jns
dec
popa
xchg
cmp
dec
add
ror
mov
cmp
fistp
inc
sbb
jno
cmc
xor
sub
and
xor
mov
adc
(bad)
sbb
inc
cmp
xor
lods
push
test
xor
scas
mov
fcmovu
shl
inc
pop
retf
sti
bound
sub
ins
mov
pop
out
cdq
push
cmp
push
mov
mov
sti
jl
and
add
mov
daa
lahf
mov
xor
sbb
cmp
cmp
ror
cmp
fimul
mov
xchg
sbb
inc
xor
pushf
popa
jg
jecxz
les
shr
inc
inc
xchg
sar
inc
sbb
stc
mov
xor
mov
mov
and
cmp
ins
xchg
cmp
sahf
sahf
xchg
aad
adc
adc
mov
int
and
(bad)
out
lock
movs
dec
mov
push
xchg
dec
add
(bad)
hlt
xchg
mov
pop
xchg
popf
pop
fcmove
jns
pop
std
cmp
ins
sbb
add
inc
jmp
mov
aaa
je
jle
popa
sub
pushf
cmp
loopne
ror
push
cmp
lea
xor
ret
pusha
frstor
pop
out
push
jb
test
inc
pop
mov
pop
adc
sbb
pop
push
sbb
call
(bad)
sti
push
dec
push
popa
xchg
fiadd
and
and
iret
sbb
add
or
scas
xchg
dec
gs
push
out
les
xchg
ficomp
add
into
loop
pop
adc
mov
in
outs
int3
push
out
or
pop
ror
into
push
sub
xchg
jns
(bad)
icebp
jns
ja
fcomp
imul
push
lea
pusha
xchg
cwde
cmp
into
add
and
call
cmp
fdivr
mov
leave
iret
xlat
cmp
cmp
or
lock
add
fisub
dec
idiv
outs
fstp
mov
lea
add
and
dec
div
(bad)
sbb
out
sbb
dec
xor
stc
int
sbb
gs
popa
neg
mov
jnp
repz
fbstp
cmp
enter
add
dec
scas
popf
push
aaa
es
fidiv
xlat
mov
push
mov
add
cli
test
inc
call
inc
addr16
out
loope
imul
push
add
scas
repz
mov
(bad)
and
in
mov
loope
cmp
pusha
dec
lock
(bad)
mov
shr
cmc
cmovb
inc
rcl
sbb
pop
jno
fiadd
add
add
out
sbb
mov
xchg
xor
mov
nop
fld
repz
jns
data16
icebp
xchg
loop
sti
push
push
cmp
add
mov
mov
call
outs
pop
ud0
sub
cdq
icebp
mov
neg
mov
daa
adc
and
retf
sar
jae
push
in
sub
and
nop
cmc
xchg
or
cmp
sub
or
and
mov
ds
xchg
mov
(bad)
pop
xchg
mov
into
pop
mov
pop
dec
pop
sub
jo
or
test
outs
cmp
xchg
loop
pop
(bad)
jmp
fisttp
fs
jg
ins
cmp
(bad)
(bad)
hlt
cld
push
jmp
mov
xchg
sbb
(bad)
lock
sti
inc
not
ffree
xor
mov
aas
loopne
sub
mov
dec
(bad)
mov
ror
fisubr
ds
imul
or
retf
pop
inc
daa
sahf
mov
(bad)
jne
inc
xor
shl
adc
xor
rcr
outs
xchg
into
xchg
pop
xor
and
out
fdivr
fnstsw
nop
jg
mov
cmp
inc
pop
sub
(bad)
es
dec
xor
loop
pop
ss
xor
ds
push
loop
enter
xchg
not
mov
inc
xlat
pop
xchg
mov
sbb
fisubr
in
(bad)
in
sbb
xor
movs
add
jnp
fbstp
mov
pop
push
int3
aaa
and
xchg
rcl
mov
and
ins
add
jl
jp
pop
inc
push
ror
lahf
iret
mov
or
outs
xor
out
cs
(bad)
mov
movs
pop
cmp
call
sahf
mov
neg
adc
jle
retf
ror
int3
xlat
pop
push
dec
scas
cmp
xor
cmc
inc
scas
mov
into
pop
dec
or
jne
imul
stos
clc
lods
and
daa
icebp
mov
(bad)
and
shl
hlt
(bad)
pop
sbb
xor
mov
dec
stos
xchg
call
push
hlt
jb
out
mov
repnz
or
lock
push
push
xor
test
dec
(bad)
dec
mov
jmp
and
test
scas
fcom
push
imul
rcl
inc
push
fsubr
call
es
retf
or
(bad)
adc
rdpmc
scas
cli
mov
inc
aad
rcl
stos
push
outs
or
add
stos
rol
adc
xor
pop
jl
mov
mov
adc
std
(bad)
fst
data16
dec
sub
enter
hlt
mov
or
inc
mov
sbb
xor
push
jo
cs
or
dec
repz
rol
leave
xor
pushf
add
arpl
sbb
ins
ficom
rol
(bad)
out
cmp
in
jno
push
sub
mov
arpl
pop
jge
xchg
fsubr
aas
push
retf
mov
lock
dec
fisttp
pusha
mov
clc
movs
sub
sub
dec
not
outs
mov
sbb
mov
mov
xor
repz
xchg
sbb
out
shl
sbb
inc
pop
push
xchg
sbb
fucomip
call
or
mov
fisub
(bad)
xchg
add
stos
mov
xor
cmp
stc
rcr
jne
(bad)
call
bound
mov
xor
xor
and
sub
push
lods
cdq
fiadd
jmp
jb
rol
addr16
div
mov
mov
test
aam
js
icebp
ds
in
int3
or
fstp
(bad)
iret
lahf
into
or
xor
fdivr
scas
movs
adc
sub
adc
stos
cld
mov
std
icebp
shl
ret
loop
int3
mov
(bad)
push
fcomp
out
(bad)
cmps
pop
dec
mov
jbe
xchg
jmp
mov
inc
xor
sbb
dec
pop
sub
in
loopne
test
gs
dec
scas
retf
lods
dec
daa
and
out
mov
aaa
mov
rcl
push
fild
sub
clc
js
inc
xor
xchg
retf
mov
out
pop
sti
or
in
add
mov
dec
or
les
and
mov
retf
data16
test
xor
sbb
mov
cdq
jnp
and
xchg
mov
jbe
jno
lods
mov
mov
sub
push
adc
xor
jmp
sti
push
arpl
mov
ror
sbb
inc
mov
cmps
out
into
lods
adc
jns
add
mov
pop
xchg
cmp
mov
inc
rcl
fistp
mov
int
call
jmp
cdq
push
(bad)
hlt
scas
and
sbb
movs
call
mov
retf
sbb
add
js
mov
leave
jl
mov
mov
add
and
lods
jp
aam
lock
in
sub
fdivr
in
jns
sbb
pop
clc
enter
inc
sbb
mov
cdq
fndisi(8087
in
push
xchg
and
(bad)
(bad)
lahf
pop
sub
or
xor
in
cmp
fild
sbb
mov
mov
int3
arpl
mov
and
shl
pop
xchg
sti
jge
push
add
leave
loopne
pop
sub
and
test
leave
scas
inc
push
pop
add
repz
jmp
out
outs
inc
jmp
adc
add
or
call
aaa
cs
or
cmp
loope
pop
rol
retf
sub
gs
jle
fisubr
into
imul
mov
fist
pop
sub
add
enter
cmp
push
ja
mov
dec
push
cmc
mov
add
mov
add
pop
xchg
lock
xchg
sbb
sub
jp
mov
call
cmp
in
je
mov
jge
mov
xchg
sbb
loopne
sbb
mov
add
icebp
test
dec
test
cmp
pop
adc
pop
into
jp
inc
cmp
xchg
mov
pop
jmp
div
or
call
sbb
xor
xor
retf
pop
pop
cmps
pop
aaa
dec
push
inc
mov
pop
xor
mov
inc
cld
dec
sbb
dec
jg
cmp
(bad)
shl
sub
(bad)
xchg
pop
sub
imul
jle
das
and
pop
jmp
cmp
push
call
popf
cmps
jo
call
mov
push
pusha
pop
add
popf
cmp
repz
popa
test
dec
and
fld
jne
in
ficomp
inc
bound
rcl
repnz
clc
mov
cdq
lea
dec
mov
pusha
outs
sub
mov
push
cwde
repnz
mov
jns
das
pop
das
pop
xor
mov
jb
ins
jge
rcr
lahf
xchg
mov
cdq
leave
out
stos
popf
cmps
xor
xchg
dec
cmp
adc
movs
xchg
xchg
es
sub
es
mov
pop
scas
pop
xor
mov
out
or
gs
push
add
mov
xor
test
sub
mov
adc
cmp
shr
mov
pushf
scas
es
xchg
jne
push
pusha
fsubr
push
jne
jne
cmp
icebp
cld
scas
or
adc
aam
rcl
pushf
or
jmp
cmps
push
mov
fist
sbb
push
and
les
cld
cmp
repnz
jg
shr
retf
test
lods
mov
push
adc
enter
cmps
push
adc
mov
pop
arpl
clc
mov
sahf
pshufw
in
outs
cmp
add
xor
sbb
jmp
xor
mov
pusha
pop
sub
sar
gs
test
les
jle
jae
ror
pusha
pop
int3
leave
pop
jmp
sti
cmp
aam
ss
xchg
push
lahf
mov
ins
mov
add
sbb
adc
clc
or
lds
cmps
int3
add
stos
loop
xlat
test
adc
sub
int3
xor
xchg
fs
cmp
iret
fsubr
out
push
pop
dec
sub
pop
clc
out
pushf
retf
add
pop
nop
mov
clc
mov
cmp
or
and
xlat
outs
xchg
sbb
push
push
cmp
and
or
pop
ja
in
test
and
adc
fiadd
(bad)
ficom
adc
push
retf
movs
scas
jmp
aam
fmulp
mov
sbb
int3
repz
lods
mov
test
and
inc
std
out
pop
(bad)
loope
cwde
mov
fwait
push
test
add
dec
retf
add
fidiv
jb
(bad)
jle
pushf
ret
mov
nop
cmc
ins
dec
and
add
add
ret
mov
faddp
jmp
mov
xchg
(bad)
sbb
retf
mov
pusha
pop
call
outs
enter
push
inc
xchg
sub
and
xchg
addr16
mov
cwde
sar
loopne
sar
add
add
sti
mov
inc
movs
cli
popa
dec
ss
outs
(bad)
call
cmps
jo
fmul
out
out
and
aad
mov
xor
and
scas
xchg
repz
jmp
test
push
dec
and
das
mov
sub
je
sbb
scas
imul
jl
xor
stos
loop
js
jge
push
or
ret
call
arpl
adc
mov
(bad)
out
adc
mov
add
cmp
je
arpl
mov
xor
arpl
test
add
pusha
dec
pop
sbb
ja
aam
push
add
mov
add
(bad)
pop
cmp
mov
das
inc
jp
add
pop
mov
mov
jno
jg
shl
ins
or
cmp
and
arpl
push
fld
fst
inc
sub
mov
sub
dec
imul
fs
xor
mov
ja
daa
fist
cmp
xor
xchg
push
int
lods
xchg
lock
stc
int3
call
mov
lds
xchg
sti
jmp
xor
fld
sbb
call
les
adc
xor
pop
jbe
mov
sub
dec
mov
or
outs
test
fdivr
cmp
xchg
mov
mov
lds
aas
(bad)
adc
(bad)
rcl
out
int3
xchg
lea
jmp
push
mov
mov
sar
sbb
add
xchg
push
and
jne
push
shl
pop
mul
ins
xchg
adc
popa
sbb
adc
jl
xchg
iret
pop
mov
or
pop
js
pusha
je
mov
pop
nop
movs
rcr
adc
cmp
iret
or
imul
aaa
into
and
xchg
out
jno
aaa
fsubr
mov
icebp
cmp
fimul
sub
test
data16
dec
icebp
pop
cmp
push
pop
or
scas
jmp
jg
sbb
jl
es
mov
lahf
and
pusha
test
xchg
inc
ret
std
(bad)
mov
dec
hlt
ret
lods
and
jne
mov
aas
(bad)
out
popf
loopne
sar
xchg
out
add
cwde
mov
xchg
(bad)
sub
cmp
(bad)
fnstenv
or
repz
jae
test
int
xchg
jp
stc
adc
ret
das
dec
mov
repnz
xchg
or
test
in
pop
in
bound
sbb
mov
nop
ror
pop
cld
mov
sub
inc
cmps
scas
bound
cli
sub
xchg
inc
sub
jb
lea
mov
jp
cmp
mov
ret
xchg
xor
int
movs
mov
aad
sbb
ret
cmp
adc
lock
and
sub
jle
vsubsd
and
mov
jae
sub
pushf
mov
ins
mov
dec
xchg
push
dec
jg
mov
(bad)
(bad)
not
xor
pop
sbb
stos
xor
jae
dec
icebp
in
mov
loopne
jg
cs
icebp
into
ror
mov
jecxz
jmp
mov
test
xchg
push
xchg
es
mov
into
add
push
(bad)
out
pop
or
sbb
jne
test
icebp
adc
lds
sbb
outs
daa
fwait
int
and
jb
cld
fidivr
cli
and
ficom
jae
(bad)
mov
popa
das
jle
das
dec
les
daa
and
mov
or
(bad)
(bad)
pop
je
push
(bad)
cmc
jp
aad
bound
dec
popf
push
nop
jmp
jo
leave
ret
add
pop
loop
out
imul
mov
ss
test
pop
mov
add
stos
es
shr
ror
push
rol
ja
and
mov
adc
sub
mov
dec
xlat
shr
inc
mov
in
dec
adc
sub
mov
aaa
psubb
cld
pusha
aas
or
sar
sbb
and
pop
stos
(bad)
nop
loop
push
xlat
cli
shr
xor
loopne
test
and
xchg
mov
adc
ret
mov
jbe
jle
(bad)
mov
mov
ins
jbe
test
add
test
jmp
xlat
movs
in
les
and
repz
out
aad
aas
dec
mov
or
mov
arpl
movs
ficom
repz
retf
hlt
outs
push
daa
mov
icebp
sahf
add
stos
mov
cli
in
arpl
and
xchg
into
push
test
int3
add
out
test
cwde
pop
sub
and
push
loope
retf
fcomp
in
cs
retf
mov
xor
mov
lods
lods
or
mov
cli
mov
not
or
in
mov
(bad)
outs
(bad)
(bad)
ss
and
jecxz
pop
jbe
mov
into
xlat
jecxz
sbb
or
mov
xchg
sub
sbb
stos
pop
icebp
lods
adc
in
mov
mov
arpl
add
jl
mov
adc
out
addr16
pop
add
inc
jns
cmp
cmp
hlt
cmp
loope
shl
scas
rcl
and
sahf
mov
loopne
cwde
arpl
mov
or
test
adc
push
out
movs
pop
sbb
jmp
mov
ret
and
push
sub
pushf
(bad)
jno
retf
call
push
inc
xor
movs
aad
dec
xchg
out
cs
imul
mov
retf
div
inc
mov
xor
add
mov
push
mov
xor
xor
shl
jae
pop
ds
cwde
pusha
cmps
mov
icebp
jb
outs
retf
pop
mov
push
dec
mov
test
cwde
dec
cmp
je
xor
jo
pop
test
or
cmp
push
ret
fxtract
ds
or
leave
popa
fbstp
lods
neg
xchg
push
pop
call
push
jg
push
mov
cmp
jl
rcr
stos
xchg
dec
jecxz
mov
dec
mov
(bad)
fild
cmp
mov
ret
push
push
fadd
ins
call
fiadd
mov
test
jns
out
test
push
(bad)
retf
or
adc
movs
adc
idiv
scas
in
shr
cmp
xor
call
push
adc
jns
scas
pop
mul
dec
sbb
scas
and
cmp
and
out
add
or
out
push
les
sahf
xor
movs
push
nop
sti
ret
aas
sub
ret
pop
jl
push
mov
pop
sub
pop
add
mov
fisubr
mov
push
pop
rcl
fwait
add
xchg
push
mov
fdivr
cld
mov
fimul
push
in
add
jmp
(bad)
jb
cli
out
fsub
and
movs
xor
mov
fs
icebp
pop
mov
pop
jl
push
sahf
cmc
inc
data16
ret
and
xchg
retf
inc
xchg
call
test
int
movs
and
mov
out
dec
aam
dec
dec
cmp
repnz
shl
pop
(bad)
dec
and
scas
cmp
mov
stos
sbb
inc
popf
in
mov
popf
pop
pop
sbb
int3
or
mov
(bad)
icebp
xchg
inc
arpl
xlat
mov
int3
and
adc
ins
inc
sub
mov
push
add
aam
in
mov
xchg
lock
fild
jmp
jmp
xchg
dec
pop
sti
sub
pop
seto
rcr
sbb
or
or
dec
(bad)
pop
xchg
stc
adc
xchg
sar
xchg
adc
push
and
daa
push
push
inc
lock
out
test
xchg
js
and
aas
sahf
cmp
cmp
or
aaa
add
popf
cmps
mov
add
(bad)
cli
in
js
cmp
sti
cli
xor
pop
push
xchg
movs
frstor
cmps
add
xchg
jmp
sar
push
pop
sub
xchg
jae
icebp
test
rcr
enter
enter
inc
push
(bad)
hlt
(bad)
cdq
rcl
js
outs
(bad)
inc
scas
mov
jns
sbb
xor
in
xchg
pop
lds
push
jl
ret
adc
mov
cmp
les
in
dec
movs
cwde
shr
cld
dec
and
jmp
js
jb
sbb
mov
jns
cmp
push
jmp
jle
add
shl
and
push
fnsetpm(287
add
dec
cld
fdiv
ss
jl
jo
adc
and
fucomip
push
adc
aaa
add
add
push
xor
lock
retf
imul
inc
bound
pusha
jg
dec
enter
pop
xchg
mov
fld
push
sub
cmc
xchg
xchg
dec
outs
add
(bad)
push
jecxz
aas
fwait
ret
xchg
addr16
fcomp
std
mov
push
(bad)
pop
xchg
stos
in
pop
mov
ss
jl
dec
sub
bound
mov
mov
mov
scas
push
mov
cmp
scas
jno
mov
adc
inc
clc
fmul
pop
fsub
dec
mov
gs
mov
push
xlat
jbe
sbb
sub
mov
lds
xor
repnz
(bad)
cmp
(bad)
repz
xor
fs
cmp
cmp
daa
cmp
neg
pop
fadd
xlat
mov
lock
enter
aad
inc
hlt
les
adc
std
sub
sbb
cmp
adc
mov
data16
sub
fistp
or
mov
and
mov
fwait
cmp
into
or
in
inc
cmp
iret
out
and
shl
popa
sub
push
rcl
aad
or
test
aas
dec
dec
cmp
into
(bad)
(bad)
add
pop
add
jle
(bad)
add
cmc
inc
ss
inc
ja
(bad)
cs
mov
div
imul
push
xor
aam
adc
dec
sub
jno
repz
aas
adc
xchg
es
cmp
lahf
pushf
xchg
or
loopne
ins
jl
jbe
das
imul
jns
add
mov
mov
aaa
out
fxch
div
clc
cwde
push
pop
xor
jno
fxch
add
xor
sbb
scas
ror
rcl
int
sub
mov
inc
mov
cmps
inc
or
and
add
push
xchg
test
sbb
jge
fwait
cmp
mov
repnz
dec
jo
mov
add
in
arpl
bound
aas
push
inc
and
cwde
into
sub
in
xchg
xor
sbb
jl
xlat
or
mov
mov
aaa
pop
call
lea
dec
movs
mov
sub
dec
sbb
xor
jmp
loopne
lea
or
sub
xor
cld
shl
inc
mov
out
fwait
add
cdq
rcl
das
sbb
inc
sub
lahf
jno
cmp
int
cmp
mov
inc
or
fst
xor
les
popa
push
jl
mov
sbb
in
xchg
xor
cbw
lods
mov
(bad)
das
jne
jbe
adc
loopne
dec
lods
sbb
push
jp
jae
fs
test
ins
popa
jbe
xor
sbb
sub
lahf
pop
repnz
js
or
jb
ror
out
popa
fisub
inc
inc
(bad)
lock
lea
inc
mov
call
sbb
jecxz
mov
mov
mov
fs
xchg
jmp
pushf
mov
inc
add
cld
push
nop
xor
add
xor
push
inc
(bad)
ret
es
or
sbb
xor
mov
das
inc
(bad)
and
push
dec
add
aam
sbb
fdivr
repnz
cmps
mov
and
cmp
add
xor
into
dec
inc
mov
sub
adc
xor
inc
mov
jmp
sub
bswap
or
clc
jmp
in
jmp
clc
mov
push
stos
mov
and
push
jmp
pop
dec
dec
not
xor
ja
dec
jo
in
test
arpl
ret
imul
xchg
(bad)
cmp
ret
lock
cmp
pop
inc
cmp
inc
add
sub
add
mov
xor
pop
cmp
movs
daa
mov
rol
push
push
shl
call
pop
sub
(bad)
dec
movs
mov
fwait
hlt
sbb
sub
dec
repnz
and
sbb
xor
imul
and
out
jmp
xchg
addr16
ins
fstp
cmp
dec
dec
stc
cmp
push
repnz
cmp
sbb
xchg
cmp
mov
adc
or
push
cmp
cmc
add
fidivr
pusha
sub
xchg
pop
(bad)
mov
retf
shr
mov
shr
xor
fistp
cmp
fst
xchg
mov
idiv
dec
rol
cwde
push
jl
daa
and
repz
add
jns
icebp
and
adc
in
dec
int3
fist
call
mov
xor
call
dec
ins
xor
mov
stos
dec
xchg
(bad)
imul
mov
or
jge
out
cmps
or
push
comiss
lds
retf
fimul
hlt
or
leave
test
mov
add
xchg
mov
scas
jle
sahf
lods
sub
pushf
mov
xchg
mov
test
cmp
cmp
fist
cld
test
add
aaa
lahf
(bad)
call
pop
or
shr
xor
in
mov
xlat
xchg
out
mov
dec
and
test
loope
sbb
push
fdiv
jl
mov
loope
push
jp
ja
dec
sbb
scas
add
test
cdq
pop
lock
rcr
scas
rol
jmp
xchg
cmps
xchg
fwait
ins
push
daa
cmp
ret
sub
push
sub
mov
adc
adc
hlt
jb
or
sub
fsubr
movs
arpl
mov
adc
popf
and
pop
push
and
lds
popf
nop
xchg
popa
test
xor
das
push
cs
test
mov
outs
add
repnz
push
pop
stos
mov
in
std
cmp
(bad)
retf
dec
clc
call
loopne
mov
ret
push
cmps
dec
into
sbb
xor
ins
jecxz
sub
(bad)
adc
ret
push
xor
hlt
dec
inc
dec
ret
sti
stos
fcomp
out
sbb
stc
add
hlt
mov
mov
les
jbe
imul
sub
rol
js
in
sets
psubq
loope
fsubr
xchg
(bad)
mov
jl
pop
data16
pop
add
mov
inc
adc
xor
ja
sub
mov
mov
sub
mov
mov
add
je
loope
in
mov
ins
dec
imul
pop
gs
jmp
popf
test
in
arpl
imul
mov
jne
inc
pop
sub
sub
cmps
fdivr
jns
adc
mov
mov
mov
arpl
and
sahf
nop
out
adc
xchg
and
inc
cs
inc
xor
daa
mov
adc
push
int3
and
rcr
mov
outs
retf
mov
inc
fmulp
ret
aam
stc
sub
adc
gs
jecxz
or
mov
sub
test
leave
mov
rcr
push
push
ret
iret
loopne
mov
mov
xchg
mov
sbb
js
push
es
adc
out
jnp
out
jmp
ret
xor
pop
jae
xor
jnp
pop
stc
cdq
inc
inc
xchg
out
test
jmp
test
push
xchg
and
mov
adc
pop
adc
mov
cmp
cmc
loop
mov
xor
(bad)
jecxz
push
imul
jno
pop
pop
jo
popf
adc
mov
jmp
pop
cmps
mov
mov
jmp
pop
push
into
scas
mov
std
or
les
imul
aad
mov
jecxz
push
xchg
sub
push
mov
ja
push
mov
sbb
jg
jge
in
xlat
mov
outs
jmp
or
jo
pop
ds
ror
fist
cmp
xor
dec
sahf
mov
and
retf
mov
sub
xor
rcl
out
inc
push
mov
sub
push
and
pop
outs
out
imul
mov
scas
iret
cmp
pop
in
test
inc
stc
and
jmp
mov
in
and
popf
pusha
pop
clc
mov
pop
add
test
cli
fiadd
scas
cmps
or
call
pop
cmp
xchg
mov
pop
(bad)
dec
shr
sbb
sbb
test
fnsave
add
cmps
mov
mov
imul
into
mov
mov
jmp
sbb
push
stos
in
mov
or
add
push
xchg
into
jb
add
mov
or
push
xchg
cld
sub
out
mov
ret
in
sub
xchg
mov
adc
mov
push
arpl
mov
daa
and
sub
mov
mov
cwde
fcomp
push
pop
add
dec
clc
cdq
fisttp
adc
outs
fild
push
push
jle
inc
fistp
sub
or
(bad)
out
mov
out
pop
xchg
adc
cmp
out
mov
xchg
aam
push
out
or
mov
out
and
in
adc
sub
mov
mov
adc
das
and
or
ret
cmp
pop
aaa
retf
add
sti
cmp
xor
dec
dec
std
mov
movs
rcl
test
icebp
fxch
lea
popf
(bad)
idiv
call
ss
pop
or
test
hlt
mov
push
adc
scas
mov
into
(bad)
ins
or
hlt
idiv
inc
add
clc
lods
cmp
fmul
mov
stos
sub
sbb
scas
push
inc
add
pushf
out
inc
dec
(bad)
in
xor
cmc
jge
xchg
jns
(bad)
ss
ror
add
mov
frstor
push
mov
pop
loope
(bad)
sti
xlat
inc
fs
fidivr
jo
fistp
jp
and
xchg
leave
icebp
fimul
xchg
shl
jbe
fcmovnbe
icebp
shl
mov
xchg
sbb
(bad)
int
dec
sub
loop
pop
or
ja
cmp
xor
cmc
stos
jbe
out
rcr
inc
dec
rcr
neg
loopne
enter
lods
lds
adc
and
xchg
inc
je
push
and
mov
dec
inc
and
xor
dec
jmp
sbb
pop
or
sbb
scas
fdivr
fst
jp
inc
ds
test
movs
mov
adc
cmp
push
stos
hlt
fnstsw
outs
fisttp
pop
mov
mov
ss
scas
std
aam
push
mov
inc
(bad)
cmp
pop
sti
fcom
cmps
outs
into
aaa
mov
fwait
pop
fdiv
xor
mov
mov
cmp
sbb
mov
or
popf
jmp
jle
outs
push
loope
daa
add
inc
push
mov
test
shl
jecxz
jg
cdq
imul
push
inc
push
in
xchg
mov
pop
xchg
(bad)
jmp
jne
xor
(bad)
js
xchg
stc
inc
bound
mov
jmp
push
push
sti
mov
addr16
mov
jmp
in
mov
popa
mov
lods
outs
mov
fdivr
push
add
jg
aas
jns
stos
or
(bad)
mov
sub
movs
stc
add
jae
push
push
out
push
(bad)
(bad)
mov
inc
cmc
in
je
or
out
jnp
leave
sub
cmc
arpl
mov
icebp
sbb
sar
cmc
push
xor
jmp
imul
push
xchg
mov
push
add
fnstsw
push
mov
ds
movs
out
lahf
mov
rcr
sahf
aad
mov
or
mov
cmp
xchg
mov
mov
mov
sahf
out
push
data16
mov
aad
in
inc
call
mov
into
push
retf
sbb
call
les
sub
js
and
mov
jp
ja
addr16
cwde
dec
mov
add
ffree
or
js
das
push
sbb
icebp
or
xor
stos
cdq
cmp
cwde
cmp
test
mov
lea
call
pop
in
sbb
hlt
lahf
add
fmul
pop
neg
dec
inc
loope
adc
xlat
mov
loopne
prefetch
or
das
mul
add
arpl
push
pop
(bad)
sub
pop
dec
and
ret
aaa
fwait
sub
pop
test
aas
(bad)
fist
(bad)
aad
clc
jbe
movs
mov
ret
pushf
cli
fnstcw
jnp
jno
adc
push
outs
js
and
popa
cmp
lods
sahf
ja
fild
stos
sub
push
mov
sub
sti
ret
mov
mov
cmc
repnz
add
sbb
inc
nop
adc
lock
sbb
cdq
sub
and
btc
call
sub
iret
in
fwait
cmp
sbb
xchg
movs
sbb
movs
pop
scas
fwait
pop
cld
cmps
xchg
push
sbb
push
call
sbb
out
sahf
fstp
popa
dec
(bad)
test
mov
pop
push
je
jle
and
and
std
pop
ins
ret
fldln2
sti
bound
mov
inc
jg
bound
jno
cmp
mov
out
pop
jne
inc
push
fdivrp
iret
jmp
scas
nop
std
pop
retf
or
out
pcmpgtd
pop
mov
sbb
inc
or
scas
ror
sub
cmps
xor
leave
xchg
mov
fimul
sub
sbb
jns
xor
ror
push
sub
mov
mov
les
jnp
sar
aam
(bad)
jp
lea
xchg
dec
jg
inc
mov
push
mov
pusha
and
data16
xchg
xlat
cdq
xchg
and
push
retf
adc
mov
out
jno
cmp
sbb
xor
sbb
cmps
push
inc
loop
xor
adc
loop
sahf
je
dec
or
pop
xor
out
gs
xchg
mov
int3
dec
xlat
push
js
aas
dec
inc
call
fld
lock
popf
add
movs
pop
mov
rcr
sub
inc
add
lods
stc
adc
popa
mov
stos
cwde
test
sbb
ds
mov
pop
mov
or
loope
mov
and
(bad)
ja
lock
cs
or
and
aas
add
iret
enter
scas
(bad)
imul
rcl
aaa
adc
out
mov
pop
adc
pop
test
out
ja
aaa
jno
or
inc
sbb
pop
scas
aas
or
out
mov
test
outs
in
(bad)
es
popa
xlat
dec
cmp
in
add
fwait
dec
ds
aad
jmp
mov
inc
(bad)
sbb
adc
cmp
jb
mov
jb
fwait
gs
push
and
imul
xchg
dec
adc
dec
fisubr
cdq
mov
test
repz
and
dec
cli
cmp
inc
aam
pusha
mov
mov
xor
cwde
movs
retf
in
adc
mov
retf
dec
test
add
push
mov
sub
ror
cmp
int3
sti
neg
mov
sti
movs
mov
xchg
pop
cs
inc
add
and
movs
cmp
cmps
add
fist
inc
mov
fwait
outs
jne
mov
jl
(bad)
loopne
clc
inc
cmp
fist
cmp
in
movs
mov
movs
popa
shl
neg
or
pop
cmp
mov
bound
pop
jne
ins
pop
bound
call
(bad)
sbb
in
gs
adc
push
scas
fldenv
push
sub
add
pop
push
mov
cmp
mov
loop
loope
scas
jg
add
sti
lods
enter
in
add
loope
das
cmps
mov
das
mov
inc
mov
movs
repnz
fistp
test
call
sbb
pop
mov
mov
out
wrmsr
and
inc
(bad)
pop
ds
fwait
out
sbb
mov
sub
enter
addr16
lea
les
push
sbb
and
add
pop
shl
mov
les
icebp
lods
aaa
mov
lods
imul
rcr
jb
sub
cmp
sbb
push
fnstenv
sbb
inc
mov
cmp
inc
jle
or
retf
add
push
adc
and
dec
fcmovnbe
fcomp
outs
lock
les
dec
lahf
rcl
inc
adc
(bad)
enter
rcl
call
into
xor
xchg
cmp
popa
cmp
xchg
jg
add
rol
lock
enter
stos
rol
clc
lds
ror
call
push
cli
sbb
add
jnp
in
adc
sbb
retf
das
stos
test
mov
mov
cmp
cmp
push
mov
push
das
jne
jl
mov
add
mov
ins
add
leave
jl
addr16
mov
out
bound
clc
pushf
sub
add
arpl
mov
xor
iret
retf
sub
(bad)
sub
test
aad
inc
daa
jbe
mov
icebp
push
les
jecxz
pushf
sbb
mov
jmp
in
fstp
out
sbb
jb
pop
and
sub
iret
in
test
lock
stos
in
sub
push
jle
or
div
cdq
dec
retf
and
cmp
mov
ins
dec
std
neg
outs
in
ds
test
jo
mov
ror
push
adc
hlt
cli
inc
pop
mov
sti
jbe
or
nop
repz
mov
lahf
or
ror
and
cs
ds
pop
loope
pop
call
push
aad
es
sbb
mov
outs
mov
out
inc
movs
arpl
bound
jge
repnz
or
jle
loopne
outs
lock
(bad)
dec
dec
or
mov
mov
int
jg
movs
test
fbld
shr
(bad)
lahf
call
mov
inc
fcomp
popa
jmp
loope
mov
aad
adc
adc
adc
adc
mov
ja
std
push
sbb
idiv
in
mov
scas
xchg
jp
pusha
call
cdq
push
jecxz
push
and
scas
mov
dec
dec
or
xchg
mov
mov
icebp
cli
sub
and
in
setae
into
or
sub
mov
or
retf
rcl
cmovp
fiadd
das
loopne
sub
mov
adc
jnp
into
adc
xchg
mov
(bad)
mov
and
fdiv
repnz
and
pop
lods
push
jmp
sub
or
push
in
clc
or
dec
push
jae
loop
lods
(bad)
cmps
mov
jg
jne
(bad)
push
rcr
cs
retf
dec
inc
je
adc
ror
jnp
in
popf
daa
jmp
inc
les
inc
xor
pop
or
(bad)
popf
jmp
dec
das
or
pop
sbb
mov
cld
pop
mov
pop
or
rcr
add
mov
sub
outs
int3
arpl
cld
mov
inc
cld
mov
mov
add
rcr
or
xor
cmp
ins
mov
xchg
jns
push
push
sti
mov
aas
add
stos
outs
(bad)
in
inc
inc
cli
(bad)
mov
cs
dec
mov
add
in
pop
movs
popa
mov
mov
ret
lahf
push
(bad)
jge
add
push
pop
je
imul
jae
ins
mov
mov
repz
retf
dec
cld
jecxz
ret
fistp
retfw
leave
(bad)
rol
dec
jae
and
lea
imul
mov
xchg
cwde
aad
xchg
(bad)
mov
dec
push
mov
out
inc
jns
jns
std
mov
movs
cmp
in
cmp
jg
inc
xor
lea
cmp
pop
ja
pop
call
push
dec
dec
push
and
call
in
sbb
aaa
pop
push
ins
pop
(bad)
(bad)
mov
(bad)
fwait
xchg
mov
clc
add
adc
stos
jb
cmp
sub
ss
stos
or
ror
adc
in
(bad)
and
je
into
add
es
sbb
jne
jecxz
fwait
xor
jno
dec
not
iret
dec
add
xchg
dec
inc
sar
xchg
stos
outs
pop
sub
scas
cmc
lahf
and
inc
pushf
mov
int
adc
js
mov
and
pushf
mov
add
lock
ret
ror
jns
mov
pop
cmps
dec
test
adc
fnstenv
mov
mov
xor
inc
jecxz
ss
popf
mov
fcom
test
push
push
sbb
shr
std
and
(bad)
mov
test
mov
sbb
scas
push
enter
shl
inc
xor
push
ret
aas
shr
int3
retf
(bad)
xor
xor
lds
sub
movups
loop
sbb
(bad)
popf
mov
cmp
daa
xor
sub
fcom
mov
add
push
mov
mov
jg
mov
cmp
leave
lea
mov
cmc
cmp
clc
(bad)
push
xor
xchg
dec
stc
add
pop
mov
jle
sti
cmp
mov
push
int
ja
out
lock
push
das
data16
xor
sub
or
repnz
sahf
lea
test
mov
add
das
int
cmc
inc
push
xchg
rcl
(bad)
and
xchg
mov
popa
push
sbb
push
iret
mov
fs
or
xor
ds
mov
pop
jmp
inc
dec
jg
ins
adc
bound
jp
mov
adc
adc
and
scas
jo
push
add
mov
jmp
bound
ret
and
fcomp
test
mov
cdq
in
mov
(bad)
sub
scas
das
adc
aas
mov
cmp
fistp
sbb
repnz
push
and
dec
push
jns
aad
mov
into
mov
push
rcr
dec
pop
sbb
scas
retf
xchg
rol
and
lods
(bad)
mov
outs
outs
xchg
inc
ins
out
pushf
jo
jmp
icebp
sub
inc
jnp
lods
jmp
cli
je
cmc
jne
mov
sahf
xor
or
ret
and
add
and
test
ins
mov
pop
aad
jecxz
pop
pop
mov
mov
shl
push
or
jle
shl
rol
mov
xlat
ret
ss
push
and
inc
fadd
mov
or
jge
adc
push
and
sbb
jns
sbb
dec
cmp
dec
xor
add
lahf
add
mov
cmp
cli
xchg
rol
mov
(bad)
push
pop
xchg
pop
call
sbb
mov
xchg
stos
dec
or
cmp
xchg
lahf
clc
push
hlt
fs
in
mov
add
dec
adc
repnz
out
xor
data16
rcl
push
scas
jle
push
and
mov
xor
dec
xchg
test
enter
inc
stos
les
add
call
adc
xor
mov
iret
mov
outs
sahf
mov
xchg
push
aaa
(bad)
std
inc
movs
ret
mov
inc
mov
int
les
pop
rol
jmp
push
mov
push
out
push
push
jecxz
into
add
mov
cld
add
adc
xchg
or
lock
cmps
retf
push
push
ins
(bad)
dec
movs
int
jno
test
add
mov
pop
leave
cmp
push
sub
into
cmp
stos
outs
cdq
rol
or
stc
push
out
pop
icebp
dec
or
xor
scas
imul
adc
sub
pop
pop
pop
adc
jle
or
xchg
aas
int
adc
dec
jns
repnz
popf
sub
sub
add
fstp
rcl
adc
dec
jge
lahf
nop
or
out
ins
push
jbe
std
retf
stos
imul
push
es
mov
jmp
mov
adc
cmp
hlt
inc
add
and
pop
push
cld
in
mov
pop
jb
push
push
jne
push
cmp
in
mov
mov
xchg
push
ja
dec
mov
push
mov
(bad)
push
pop
sbb
(bad)
bound
mov
gs
retf
jb
enter
out
push
cmp
repnz
push
mov
mov
push
ins
ret
push
shr
jmp
pushf
sbb
les
or
cmps
dec
stos
adc
xchg
xchg
aad
test
shl
data16
movs
mov
les
fmul
xchg
mov
es
fisub
lea
gs
adc
or
adc
mov
dec
dec
xor
xchg
cmp
cmps
out
jge
out
sub
pop
rcl
adc
push
sub
xor
xchg
jl
je
addr16
xlat
fisubr
push
hlt
shr
sub
jmp
add
lea
jno
inc
sahf
in
(bad)
or
mov
jge
ret
lods
retf
push
ins
adc
in
icebp
inc
or
or
and
pop
shr
sub
jnp
fs
adc
mov
sbb
jno
mov
sub
xor
fs
dec
retf
cmps
cli
mov
cli
inc
movlps
scas
(bad)
mov
(bad)
mov
pop
inc
xor
and
xlat
sahf
sar
sbb
add
call
ins
mov
(bad)
data16
sub
push
add
test
add
adc
sbb
cmp
push
popf
jmp
(bad)
jmp
mov
cld
cmp
shl
push
jns
mov
push
cs
pop
out
(bad)
dec
ret
mov
imul
shl
mov
pop
mov
xor
icebp
call
call
leave
dec
inc
movs
pop
and
xchg
push
movs
stos
cmc
fwait
idiv
jb
fs
(bad)
inc
sar
(bad)
push
cmp
gs
jnp
mov
ficomp
or
call
leave
clc
push
cmc
jp
sub
jge
call
fdivr
xlat
jg
movs
jae
push
mov
jecxz
mov
add
mov
rol
sar
rcl
mov
cmp
ret
jecxz
je
iret
mov
push
cmp
rcl
lahf
bound
jnp
scas
pop
inc
lock
cmp
ret
jp
mov
push
ret
aas
les
and
sar
outs
mov
int
mov
adc
call
ret
out
int3
xor
push
ficom
mov
(bad)
pop
imul
jle
jmp
jb
mov
cmp
jb
scas
push
push
xchg
nop
pop
mov
test
shl
(bad)
sub
cli
push
xchg
push
outs
lock
push
fisttp
mov
jp
dec
imul
mov
push
xor
inc
pushf
add
pop
sbb
add
dec
jge
imul
mul
and
adc
add
and
sahf
pop
sti
dec
inc
mov
xor
popf
and
jmp
inc
cs
sbb
pop
ret
loopne
mov
sub
xor
enter
sbb
imul
icebp
lods
(bad)
xchg
les
push
ins
jb
mov
movs
(bad)
aad
scas
xchg
push
out
repz
aad
mov
call
jns
call
push
into
scas
arpl
int3
int3
mov
add
xor
retf
or
mov
sub
jle
stc
or
jbe
std
add
xor
or
jmp
mov
dec
lods
sub
int3
aas
jmp
lods
scas
or
shl
sbb
retf
pop
fcmovne
lea
push
xchg
into
pusha
dec
push
mov
outs
out
shr
leave
hlt
cwde
fiadd
aaa
retf
inc
data16
imul
xor
out
xor
pop
pop
outs
push
mov
mov
inc
in
sub
or
jmp
adc
outs
add
in
int
push
aas
pusha
movs
movs
add
je
pop
adc
pop
xchg
jmp
retf
push
mov
mov
jg
xchg
stos
out
(bad)
and
inc
sbb
adc
xor
mov
addr16
lods
and
inc
stos
out
mov
ficom
sub
mov
cld
ror
daa
test
mov
push
xchg
dec
lods
gs
sub
mov
enter
dec
pop
fnstcw
stc
and
pop
add
mov
(bad)
int3
pop
and
add
out
call
(bad)
loopne
sbb
call
movs
icebp
(bad)
mov
mov
push
out
push
idiv
xchg
popa
xor
and
and
aas
mov
push
sbb
or
imul
repz
lods
or
and
test
in
jo
sub
in
cld
jo
adc
jp
mov
and
imul
in
outs
xor
mov
int3
scas
adc
adc
pop
sahf
sub
sub
frstor
mov
cmps
fstp
mov
ret
dec
push
jb
push
jmp
fidivr
test
hlt
lock
xchg
outs
push
add
mov
push
push
push
add
jne
aad
(bad)
mov
icebp
jnp
popf
ret
nop
loope
outs
movs
(bad)
in
lahf
dec
sbb
mov
icebp
mov
and
test
xchg
push
inc
sbb
inc
daa
mov
div
jb
fnstsw
outs
pop
and
or
push
or
data16
(bad)
or
aam
fwait
sub
dec
fld1
pop
sahf
or
repnz
jmp
daa
sbb
fidiv
jmp
xor
mov
and
retf
repz
icebp
mov
int3
mov
clc
aas
mov
scas
jp
cmp
adc
loop
ret
push
es
sub
inc
ins
pop
cli
inc
in
call
repz
jmp
addr16
out
or
push
aad
ficomp
in
movs
cmp
push
mov
or
jmp
push
jl
mov
or
(bad)
(bad)
inc
cld
cmp
stos
movs
arpl
(bad)
pop
pop
jmp
adc
in
fwait
cs
xchg
mov
jecxz
cmps
and
sub
push
(bad)
dec
movs
xchg
shr
pop
sub
or
xlat
mov
and
lea
dec
mov
fnstcw
sub
lods
fist
in
mov
mov
pop
dec
call
pop
add
ficomp
or
push
cmc
jae
cdq
in
add
xchg
ret
int
jnp
in
cmp
add
fadd
lods
cmp
sub
nop
fcom
jge
push
arpl
mov
or
mov
jg
mov
popa
inc
add
and
mov
jg
mov
repz
mov
repnz
test
ret
inc
aaa
mov
dec
push
hlt
sub
push
mov
dec
ror
mov
mov
outs
mov
fcomp
push
ins
jle
xchg
mov
push
pop
inc
arpl
es
mov
sub
repz
rcr
dec
aas
push
cwde
iret
pop
call
inc
and
jb
fbld
fwait
jb
dec
inc
mov
call
test
aaa
jnp
outs
stos
xchg
push
adc
and
data16
scas
test
scas
jecxz
fcomip
cld
retf
mov
jb
sub
add
add
push
cwde
sub
scas
cs
jg
dec
pop
fsubr
test
cmp
xor
call
pop
movs
inc
test
int
(bad)
fild
mov
cmp
out
das
pusha
cmc
push
push
pop
inc
pop
and
adc
sub
sbb
xor
jae
repnz
mov
inc
dec
mov
sub
scas
imul
xor
dec
adc
jmp
mov
test
aas
push
cmp
jmp
es
stc
xchg
mov
sub
int
inc
or
pop
push
mov
adc
jno
inc
xlat
mov
xchg
popa
mov
sub
cli
jl
sbb
scas
call
es
and
retf
ja
aad
popa
pop
xchg
aam
outs
out
sysenter
cmp
sub
and
pop
xor
nop
fimul
in
pushf
daa
daa
xor
fldz
pop
push
or
loop
dec
stos
ins
jl
dec
cdq
xor
cdq
fisubr
sbb
push
add
scas
xchg
jl
ss
cmps
mov
nop
mul
or
xchg
scas
test
adc
out
out
pop
sbb
(bad)
enter
scas
enter
mov
jno
les
jecxz
mov
std
fcomp
xchg
xchg
(bad)
out
lods
jmp
lock
ins
cmc
stos
cmps
repz
out
push
sbb
in
repz
jbe
inc
mul
mov
(bad)
jnp
and
je
call
sahf
adc
cwde
pop
call
cli
fidiv
pop
cmp
sbb
inc
dec
adc
loop
mov
fistp
xor
mov
inc
cld
sbb
inc
cmp
or
push
std
rol
icebp
mov
or
adc
fdiv
cmp
fistp
jmp
sbb
push
mov
pop
add
xlat
fucomip
xchg
cmp
loop
adc
sbb
ror
and
dec
xor
push
adc
push
pushf
xor
pop
in
aad
loop
(bad)
pop
enter
inc
lock
stos
rcl
popf
ret
out
imul
data16
xchg
or
and
cmp
sbb
jo
sub
test
jae
pop
cmps
push
and
jne
call
mov
jbe
push
mov
mov
push
fsubr
and
daa
push
retf
xchg
stos
scas
ret
stos
xchg
mov
xchg
fs
and
xor
pop
shl
in
ss
lods
push
sbb
inc
mov
jne
cmps
jo
dec
out
imul
fisttp
and
loop
push
pop
jae
xor
sub
mov
ret
sbb
repz
(bad)
rcl
add
cmps
xchg
cmp
push
mov
shl
push
mov
gs
xchg
sub
lds
add
cmp
xchg
nop
ss
gs
mov
and
arpl
xchg
daa
fadd
mov
call
sub
cmp
sbb
sub
icebp
pop
fs
stos
les
or
std
mov
or
pop
mov
clc
dec
pop
inc
push
dec
xlat
mov
neg
test
test
stos
fs
icebp
hlt
pop
inc
out
and
(bad)
mov
paddsb
xchg
cmp
out
mov
fisttp
dec
mov
out
fldl2t
mov
fsubr
(bad)
fidiv
jnp
xor
xchg
fwait
pop
or
loopne
xchg
xor
or
xchg
jge
mov
fdiv
test
or
movs
dec
idiv
inc
scas
loope
cwde
xor
xor
jp
repnz
(bad)
and
jl
fs
pop
pop
or
aas
jae
mov
mov
mov
outs
cmps
lea
inc
das
mov
clc
scas
ret
cli
inc
and
ins
xchg
xor
arpl
wrmsr
not
into
mov
dec
js
mov
inc
xchg
int
fwait
rol
sti
leave
jge
xchg
and
pop
or
std
pop
std
jmp
ret
(bad)
in
ror
mov
xlat
cld
dec
arpl
xor
jg
dec
test
pop
adc
pop
das
xchg
cli
cs
scas
stos
sub
inc
in
stos
retf
loopne
push
stos
int
mov
or
xchg
stos
fimul
(bad)
lock
call
jp
cld
cdq
scas
ins
and
(bad)
cld
mov
sub
cli
cmp
sub
in
movs
pop
mov
aad
adc
int3
daa
(bad)
inc
add
clc
repnz
f2xm1
imul
sub
aad
xor
push
mov
push
xchg
cli
pop
bound
sti
outs
mov
mov
outs
inc
les
pop
loope
ror
xchg
and
pop
cli
dec
cmp
jo
dec
sbb
test
arpl
adc
push
jecxz
sahf
push
bound
pop
das
push
adc
pop
xchg
xor
mov
pop
fsubr
push
pop
fstp
jmp
add
mov
sub
push
out
pop
add
mov
dec
mov
pop
pop
ins
unpcklps
mov
jmp
pop
pop
fsubr
push
cli
push
sbb
or
les
push
jmp
scas
cmp
adc
fistp
ret
jbe
int
mov
add
arpl
mov
add
and
pushw
scas
sub
iret
outs
mov
jecxz
cmp
rcl
les
daa
sub
cmp
mov
test
jle
jne
xchg
sbb
movs
imul
jmp
mov
or
(bad)
pushf
(bad)
hlt
xchg
jmp
ror
sti
mov
call
cmps
sub
pusha
out
pop
jmp
call
mov
out
icebp
scas
out
mov
in
fstp
shr
cmps
icebp
adc
mov
jl
clc
mov
jge
pop
(bad)
xor
xchg
mov
movs
pusha
nop
jmp
xchg
ficomp
cmp
dec
pop
dec
test
mov
sbb
jg
add
xchg
out
add
(bad)
push
adc
(bad)
rol
and
xor
xchg
adc
cwde
je
or
cmps
(bad)
daa
pop
jg
pop
mov
movs
or
into
xchg
push
mov
jp
div
and
xor
mov
ja
loop
fadd
stos
xchg
hlt
xchg
call
push
in
jmp
and
call
or
sub
xchg
movs
xor
(bad)
cdq
fcomp
push
jb
push
and
adc
and
sbb
fnstsw
cmp
scas
test
xor
mov
dec
jne
js
retf
lea
and
in
jno
(bad)
cmps
sbb
icebp
inc
(bad)
xchg
in
or
into
pop
mov
mov
dec
lahf
leave
xchg
xchg
sub
pop
ins
push
mov
pop
push
ss
adc
adc
xchg
xor
sahf
push
fiadd
shl
cmp
sub
scas
dec
retf
lods
inc
push
mov
jmp
mov
dec
in
movs
xchg
pushw
mov
mov
es
and
lea
cmp
xchg
add
lods
xchg
pusha
movs
add
shr
add
inc
stc
int
sbb
inc
and
outs
(bad)
shl
repnz
push
dec
ret
or
mov
popf
mov
dec
or
add
test
mov
inc
shr
adc
out
sti
pop
cmp
mov
ret
aas
les
enter
pushf
lods
jl
dec
int3
xchg
hlt
xlat
stos
sub
dec
ror
lds
and
inc
adc
mov
lock
or
int
jno
scas
or
lea
mov
xor
adc
jnp
dec
lahf
jmp
xchg
xor
mov
test
mov
and
imul
add
mov
xchg
xchg
addr16
out
je
push
aaa
and
fiadd
int
jbe
shl
cmps
xchg
xor
cmova
call
inc
mov
scas
fmul
scas
push
pop
adc
mov
scas
add
xor
xor
fsubr
unpckhps
ret
push
aaa
jbe
in
or
stos
and
jo
or
push
test
ss
lahf
pop
mov
dec
iret
call
and
retf
int
pop
paddusw
dec
sub
std
std
pop
idiv
cmp
retf
stos
cmp
outs
mov
clc
arpl
(bad)
or
stos
mov
jecxz
dec
xchg
adc
jb
pusha
cli
and
clc
mov
into
and
outs
loopne
cmc
push
das
mov
dec
push
div
ja
stc
addr16
(bad)
cmps
jne
mov
dec
push
and
and
xchg
xchg
ror
or
out
mov
mov
dec
sbb
jle
mov
add
mov
les
mov
mov
ret
aas
sub
iret
js
mov
adc
cmp
rcr
xchg
sar
pop
cmp
jle
out
sar
add
aad
jno
mov
or
xchg
mov
cmp
das
jns
inc
push
and
xchg
test
xchg
push
outs
lahf
xor
jne
xchg
cs
(bad)
jmp
xchg
gs
iret
push
mov
stos
pop
pop
popf
inc
cld
mov
imul
outs
mov
popf
loop
add
leave
pop
mov
inc
mov
fisub
jbe
sub
shl
or
fst
cdq
aaa
sub
iret
adc
das
(bad)
imul
add
or
cmps
aad
pop
push
jb
test
cmps
rcl
aaa
ins
xor
call
popf
js
movs
ret
add
pop
xor
loope
jne
in
adc
cmp
cli
inc
daa
mov
fwait
sbb
xor
fwait
arpl
jp
or
xor
stos
adc
loop
ret
cmp
push
cdq
dec
mov
jmp
loopne
ds
xor
iret
retf
ficom
retf
cmp
mov
sub
fwait
das
ins
mov
test
loopne
jmp
dec
push
xor
mov
lods
(bad)
pop
dec
(bad)
cmp
adc
push
and
test
inc
pop
mov
xor
or
mov
es
mov
push
fwait
inc
sahf
clc
lahf
jmp
add
ss
and
xor
or
(bad)
daa
stc
jne
mov
dec
nop
aam
mov
lock
ins
jns
xlat
je
push
inc
out
mov
and
jl
sbb
push
in
aaa
jg
ret
pop
loope
xor
addr16
push
xchg
push
sub
es
jbe
push
int3
mov
inc
in
call
hlt
ss
adc
xor
jg
or
inc
mov
xchg
cmp
push
sub
dec
aad
push
loope
ins
jecxz
dec
or
out
cs
arpl
xchg
out
test
and
inc
lahf
mov
sub
shl
rcl
not
sbb
adc
(bad)
imul
xchg
xchg
call
pop
sbb
test
inc
in
sub
xchg
movs
aad
ins
mov
jbe
adc
inc
test
sbb
jmp
adc
xchg
scas
cmp
push
or
add
out
into
lods
movs
int
xor
xchg
jle
int3
xor
outs
test
jmp
push
xlat
mov
adc
out
test
jmp
mov
jo
cwde
push
retf
jecxz
xor
outs
pop
or
pop
mov
xor
or
out
mov
pusha
shl
dec
mov
xor
test
jecxz
icebp
xor
mov
inc
mov
fldlg2
call
ds
ret
leave
int
mov
dec
in
enter
xchg
inc
push
xchg
or
or
std
movs
add
in
push
inc
jae
mov
sbb
push
gs
jae
push
retf
stc
loop
fbld
jnp
pop
jg
inc
repnz
dec
or
(bad)
sub
je
xor
sbb
scas
jmp
outs
inc
cwde
mov
(bad)
xlat
mov
outs
push
pop
aas
inc
dec
mov
rcr
aas
retf
hlt
adc
push
dec
add
mov
ins
outs
push
mov
jg
test
and
fild
cmp
jecxz
or
dec
in
sub
mov
xor
mov
cld
dec
xchg
(bad)
sar
loop
jmp
ror
fnstenv
ins
int3
add
dec
js
inc
adc
mov
lods
sub
cmps
sbb
sbb
test
mov
sbb
movs
clc
mov
ja
jl
sbb
push
adc
push
push
push
loop
hlt
inc
loop
shl
(bad)
mov
ds
ss
lds
ret
stos
loopne
imul
mov
sub
loop
imul
addr16
sti
add
fldz
mov
sar
adc
adc
ficom
and
aad
cmp
ins
pop
cmp
add
cmp
push
push
sbb
js
sub
stos
call
ja
call
and
rcl
int
xlat
xor
frstor
jmp
ffree
stos
cli
hlt
cmp
jg
scas
sbb
and
imul
jmp
sub
mov
enter
fistp
xor
or
or
mov
dec
inc
or
mov
and
mov
xchg
es
mov
jae
sahf
out
adc
je
addr16
push
lods
add
call
xchg
pop
shr
cwde
sub
stc
inc
or
fsubr
int
call
mov
and
movs
push
mov
lahf
enter
push
hlt
movs
push
inc
(bad)
jnp
mov
cld
dec
pop
dec
xchg
xor
cmps
jmp
nop
mov
add
xchg
pop
add
test
pop
jmp
dec
jo
sub
fsubr
sub
icebp
sbb
mov
(bad)
fldcw
xchg
fbld
imul
pusha
(bad)
xchg
out
and
fimul
hlt
xchg
or
jmp
iret
sahf
adc
push
rcl
xor
or
outs
in
cdq
mov
ins
xlat
mov
(bad)
aam
and
(bad)
pop
inc
clc
jecxz
mov
push
aad
mov
jmp
push
jge
icebp
pop
ins
jp
jecxz
nop
fs
xlat
jbe
and
and
mov
out
dec
js
inc
sti
mov
xchg
(bad)
cmps
cmp
dec
test
jno
loopne
jle
fld
pop
xchg
add
push
xchg
or
xlat
push
jae
sub
js
mov
leave
jb
ret
ror
add
sub
xor
adc
icebp
lahf
inc
neg
xor
inc
xor
cwde
push
add
pop
fiadd
nop
cmp
daa
adc
adc
loopne
mov
fmul
std
or
mov
sbb
jmp
pusha
sti
jl
adc
arpl
sahf
or
das
jbe
mov
pop
into
out
fwait
xor
aas
mov
in
mov
sti
mov
inc
pop
mov
fist
mov
jmp
or
push
cmp
sbb
cmp
xchg
jae
dec
aas
and
inc
das
dec
pop
sbb
gs
int3
xor
scas
(bad)
jnp
jae
xchg
and
or
xor
out
repnz
das
sbb
mov
add
ficomp
mov
xor
fs
fdiv
push
pop
jg
pop
mov
or
inc
xlat
sti
add
dec
les
pop
sub
dec
pop
jo
xchg
out
add
dec
mov
pop
inc
xchg
inc
xor
adc
mov
fimul
ds
jmp
cmp
jmp
mov
mov
adc
jmp
int3
shr
jb
sbb
pop
push
ins
mov
mov
mov
jno
and
jne
out
stc
mov
(bad)
dec
adc
or
test
sti
dec
pop
cmp
xchg
arpl
fs
cmp
mov
pop
adc
jne
sbb
es
xchg
xor
(bad)
aaa
adc
adc
xchg
cld
leave
or
cld
pusha
sbb
(bad)
jge
not
pop
cs
test
aaa
and
test
ja
cwde
dec
repz
int3
push
dec
inc
jg
xor
sbb
cmp
and
or
adc
pop
jle
sub
inc
ret
cmp
xchg
xor
stos
push
push
xchg
(bad)
mov
xchg
sbb
pop
dec
shl
mov
mov
fwait
int3
iret
(bad)
or
out
mov
icebp
stos
mov
mov
mov
cwde
sub
jne
aas
dec
int
sub
xor
sub
jg
arpl
loopne
dec
mov
mov
adc
retf
imul
or
inc
jno
mov
mov
inc
and
dec
leave
jae
sub
lock
jb
xor
aaa
sub
xchg
jbe
xchg
sub
inc
push
test
mov
(bad)
push
sbb
repnz
add
nop
pop
sahf
mov
movs
inc
push
adc
scas
jmp
jmp
push
popa
push
jg
ret
movs
(bad)
mov
adc
mov
jmp
outs
stc
repnz
mov
outs
add
and
xchg
cwde
call
mov
inc
add
jne
out
or
(bad)
push
or
adc
push
je
sub
rcr
(bad)
cs
fcom
jp
and
jo
xchg
mov
mov
xor
mov
aam
xchg
cmp
xchg
xor
repz
mov
test
cwde
mov
idiv
test
jns
mov
or
pop
mov
inc
mov
xor
test
retf
fld
push
mov
aad
call
push
outs
pop
and
jae
out
adc
mov
daa
push
push
mov
lock
xchg
sbb
aaa
dec
retf
mov
lods
mov
pop
lds
jmp
ret
sbb
lahf
add
sub
jns
push
lods
out
dec
mov
pop
push
rol
setp
cmp
out
in
repz
loopne
stos
not
sbb
shl
jno
dec
inc
xor
(bad)
xchg
movs
dec
movs
or
push
and
and
sbb
and
adc
std
fisubr
lock
push
repz
(bad)
jp
mov
push
cmp
mov
adc
jmp
and
pop
pop
sub
(bad)
xor
jb
stos
lahf
cmp
call
adc
jle
jmp
mov
xchg
mov
(bad)
mov
push
daa
mov
adc
and
repz
add
sub
pushf
inc
jp
pop
es
xchg
sti
add
cli
mov
lahf
push
dec
push
out
push
out
push
adc
or
mov
stos
add
mov
in
stos
fmul
sub
add
ficomp
xchg
jae
lods
mov
and
call
inc
mov
sub
arpl
sub
cmp
mov
or
in
inc
push
ret
mov
in
shl
es
fwait
cmp
mov
ds
xor
sbb
pop
jmp
xlat
jecxz
or
iret
lods
ja
push
cmp
adc
add
mov
neg
lods
pushf
daa
aad
inc
int3
sbb
push
js
add
popf
mov
in
aaa
cmp
xchg
push
cmp
ins
popa
or
jno
push
xchg
out
sbb
in
xor
jge
(bad)
and
bound
dec
repnz
xor
rcl
rcr
sbb
xchg
xor
rcl
adc
inc
mov
dec
addr16
stos
mov
leave
loope
jnp
inc
push
sbb
push
or
movs
in
mov
jae
push
inc
je
push
lahf
(bad)
jmp
cwde
push
cwde
call
nop
mov
movs
inc
or
pop
jmp
sub
test
cdq
mov
dec
iret
int
jmp
scas
pop
pop
je
adc
out
int
das
fist
ss
xor
pop
mov
pop
mov
xor
push
sub
cld
jns
and
loopne
fsub
xchg
sbb
jbe
add
imul
add
mov
(bad)
xchg
imul
ror
test
scas
shl
fiadd
bound
out
inc
push
xchg
mov
out
mov
cs
scas
sbb
aad
xor
lea
mov
push
int
out
push
or
ss
repz
out
aaa
cmp
sub
inc
push
test
(bad)
adc
push
xchg
mov
and
in
cmp
jbe
dec
sub
popf
outs
or
jg
mov
sbb
mov
push
adc
mov
jle
and
push
jmp
lds
(bad)
aaa
xor
call
dec
dec
mov
cmp
add
sub
xchg
pop
scas
fld
das
rcl
scas
mov
arpl
mov
(bad)
pop
mov
daa
push
mov
dec
leave
jno
sub
mov
ja
mov
jae
outs
test
adc
out
popa
add
movs
js
dec
imul
xchg
add
(bad)
sbb
add
fiadd
mov
cld
xchg
stos
xchg
or
mov
lods
pop
and
jecxz
push
test
xor
pusha
rol
inc
fnstsw
sahf
pop
push
ss
add
out
retf
or
out
fwait
jo
cmc
rcl
jmp
adc
jo
test
aad
sub
ss
jnp
push
and
ror
jne
fimul
dec
mov
xchg
rcl
lock
ss
loop
pop
and
xor
or
leave
mov
add
mov
movs
mov
jecxz
cli
push
ds
leave
jno
shl
pop
inc
es
sub
cmp
sub
into
das
xor
adc
jns
mov
adc
fld
fwait
stc
push
nop
push
ss
cmp
pop
push
mov
sub
sbb
outs
lahf
test
pop
mov
add
jns
int3
into
(bad)
lock
pop
retf
arpl
push
pop
in
xchg
popa
jmp
daa
push
shr
fs
or
pop
push
ret
mov
xor
outs
jno
dec
(bad)
mov
cs
imul
sub
imul
shl
movs
nop
sbb
push
out
xchg
call
push
mov
stc
jae
jg
popa
push
sub
lods
shr
cwde
je
add
fldcw
pop
xchg
shl
pop
cs
xor
push
jnp
dec
das
mov
into
pusha
scas
out
mov
lods
(bad)
mov
sar
arpl
dec
lahf
and
(bad)
mov
gs
push
sub
leave
xor
das
retf
pop
or
dec
test
and
jo
adc
inc
ret
dec
pop
fdivr
cdq
scas
movs
aad
pop
idiv
adc
shl
cmp
lods
add
fwait
jae
lea
cs
popa
iret
cmp
cmp
fdiv
mov
pop
pusha
push
mov
mov
div
xchg
push
cld
xor
push
dec
mov
xor
(bad)
sub
sahf
sub
daa
(bad)
or
js
es
loopne
push
out
jecxz
stos
push
push
push
int
mov
sbb
sbb
pop
inc
jno
jns
push
movs
jnp
cmps
std
imul
or
mov
mov
push
(bad)
inc
lock
inc
in
sub
mov
dec
je
add
mov
adc
popa
retf
stos
fadd
shr
jl
dec
and
lods
dec
adc
dec
stos
mov
data16
scas
push
add
push
mov
arpl
fiadd
xchg
or
adc
ins
lock
fwait
sbb
cmp
pop
sahf
stos
mov
cmp
add
rcr
pushf
repnz
fisubr
inc
repz
fistp
and
push
sbb
icebp
xchg
mov
outs
mov
jge
out
xchg
mov
aas
int3
jnp
mov
fbld
movs
ret
lds
pop
iret
fimul
mov
(bad)
bound
sbb
mov
scas
jecxz
pop
inc
test
mov
std
xchg
stc
push
mov
add
xchg
or
push
sub
les
and
inc
hlt
aad
xchg
jns
shr
xor
fstp
pop
in
inc
push
fsub
fs
sub
mov
lods
gs
push
leave
int3
fadd
inc
inc
inc
out
xor
pop
leave
data16
pop
and
imul
pop
xor
mov
jp
(bad)
xchg
daa
add
enter
jmp
mov
or
ret
or
add
mov
scas
inc
nop
or
or
xchg
inc
icebp
lods
xor
inc
fidiv
out
jmp
add
mov
dec
xor
sub
or
jb
(bad)
cmps
pop
push
in
dec
into
cs
mov
mov
cmp
push
fisttp
jl
test
dec
sbb
aaa
bnd
(bad)
dec
fstp
push
adc
inc
iret
stos
push
dec
add
xchg
adc
or
loop
scas
sub
int
sbb
or
sahf
add
pop
mov
rol
xchg
sub
push
add
xchg
cwde
mov
mov
adc
cli
jne
fldcw
mov
adc
adc
jmp
pop
push
cmp
icebp
das
jl
adc
cmps
sub
add
mov
fbld
sbb
ffree
into
daa
fild
push
in
xchg
dec
dec
mov
mov
popa
repnz
push
xchg
into
jmp
scas
inc
into
pop
addr16
pop
mov
neg
call
popf
test
outs
add
add
sub
fwait
jmp
shr
retf
dec
fst
out
adc
xchg
xchg
or
mov
lahf
sub
hlt
add
mov
sti
test
sub
jmp
loopne
mov
repnz
or
and
push
gs
mov
mov
sub
jg
mov
add
fisttp
sub
test
xchg
dec
cmp
push
fldenv
pop
dec
(bad)
hlt
push
mov
add
adc
fistp
jno
adc
imul
push
jb
hlt
push
je
push
dec
test
fild
adc
push
sbb
sti
and
inc
push
call
mov
mov
mov
cmp
xor
call
popa
sub
push
aad
sti
or
add
push
and
add
test
jp
xchg
retf
je
lea
das
inc
push
enter
or
and
jae
imul
mov
push
pop
(bad)
push
inc
loope
xor
repz
addr16
in
mov
mov
dec
mov
mov
push
(bad)
scas
in
xchg
sbb
mov
xchg
adc
std
shl
xor
push
retf
stc
stos
mov
hlt
mov
mov
lods
arpl
adc
add
daa
cmp
xchg
pushf
imul
jae
sbb
fcomi
inc
test
push
inc
pop
jne
sbb
jns
inc
jge
cmp
add
das
push
pop
std
push
jbe
imul
lods
mov
std
pop
push
and
call
xchg
shr
popf
in
out
out
mov
jle
jmp
adc
int3
pop
lods
push
lds
fcom
mov
pop
fsubr
(bad)
jmp
cmp
sbb
test
xor
mov
xchg
sub
dec
push
inc
inc
icebp
and
mov
es
(bad)
les
jp
or
test
push
pushf
cmp
mov
jp
pop
push
rcr
fwait
call
and
xchg
sub
jl
xor
loopne
cli
cmp
inc
leave
mov
or
mov
push
or
fisttp
push
bound
pop
xchg
out
dec
mov
cld
dec
sbb
and
fild
outs
dec
popa
sahf
inc
jl
or
ins
stos
ins
inc
sub
sub
sbb
and
fcmovu
sub
es
add
aad
(bad)
pop
mov
adc
les
rep
dec
cwde
out
push
lods
nop
cmps
retf
or
sahf
fwait
call
enter
cmp
mov
jae
mov
jmp
mov
ds
ss
lock
push
lods
push
inc
rcr
movs
mov
aaa
into
dec
sbb
loopne
gs
add
rcr
or
and
ret
jo
mov
sbb
mov
pop
loopne
jmp
pusha
out
and
and
mov
pop
push
push
(bad)
ficom
and
icebp
pop
cwde
call
pop
push
sahf
das
movs
jne
mov
pop
sahf
enter
lds
xchg
retf
inc
mov
aaa
stos
pop
xor
cmp
lock
hlt
sub
xor
dec
add
ins
xchg
aam
cmp
fdiv
pop
addr16
cmps
mov
clc
and
or
add
mul
push
jg
call
xchg
jl
sub
xchg
sub
ds
cmp
fcom
loopne
ins
ficomp
mov
int
jno
pop
push
push
xchg
push
mov
push
add
into
dec
pusha
loopne
jne
cmp
stos
and
sub
add
out
(bad)
mov
lahf
fistp
add
movs
cmp
mov
or
stos
push
sbb
ins
sahf
and
rcr
(bad)
pop
out
sub
(bad)
and
xchg
jmp
mov
sbb
adc
pop
add
in
sub
sbb
inc
sub
xchg
sahf
pop
inc
ja
sub
inc
cmp
push
imul
push
sbb
stos
in
mov
ret
xchg
retf
mov
pusha
mov
out
mov
scas
push
jp
lods
out
pop
jne
jecxz
lock
pop
fld
sti
ss
not
add
push
xor
movs
ret
sub
xchg
xor
das
inc
pop
mov
pop
rol
xchg
pop
mov
out
test
xor
jp
bound
popf
pop
enter
add
in
xchg
xlat
mov
nop
jmp
jno
sahf
cmp
or
push
pop
push
mov
xchg
mov
push
or
call
test
jl
xchg
mov
xchg
popa
mov
jl
arpl
je
add
lahf
cdq
push
inc
popa
loopne
popa
sub
fbstp
bound
mov
repnz
jne
adc
lahf
sub
mov
fsub
js
pop
repnz
aas
popa
scas
mov
xor
inc
pop
outs
out
push
dec
stc
ret
(bad)
lods
aas
xlat
ficom
push
jmp
mov
push
mov
dec
dec
add
adc
leave
int
enter
xor
fwait
adc
popa
lods
fld
cmp
fild
dec
cmp
mov
mov
nop
test
shr
popf
sahf
fstp
mov
or
ss
ret
repnz
xchg
into
imul
jne
inc
add
(bad)
aas
sbb
adc
xchg
push
ins
jnp
pushf
cmp
pop
(bad)
loop
pop
mov
mov
xchg
jl
cmp
cmc
dec
test
ja
mov
inc
mov
sbb
cli
jns
cmp
aas
scas
int3
jbe
in
add
dec
mov
icebp
repz
popa
fld
pop
mov
dec
in
inc
outs
sub
cmps
lock
mov
pop
fsubr
div
cli
into
jb
jmp
clc
sub
in
pop
mov
idiv
dec
shl
jno
movs
lahf
ret
push
push
sbb
dec
adc
xor
loopne
ret
lods
xor
stos
sbb
and
jl
mov
add
and
mov
sub
inc
scas
add
push
inc
jl
jne
xchg
xor
mov
dec
jmp
mov
mov
add
add
mov
sti
sti
dec
shl
pop
jp
hlt
mov
push
idiv
(bad)
and
or
dec
dec
inc
test
ds
imul
xchg
or
push
jle
adc
out
sub
(bad)
sbb
aam
jnp
pop
(bad)
in
push
pushf
and
mov
mov
pop
xchg
xchg
je
dec
shl
popf
fld
mul
ds
ins
add
fptan
fs
xlat
sbb
mov
int3
out
ja
ror
push
adc
adc
je
xchg
inc
loopne
add
fwait
and
add
loopne
jle
xchg
or
add
sbb
jmp
or
push
adc
sub
pusha
cwde
pop
sbb
pop
movs
shr
stc
(bad)
sub
xlat
add
cmp
(bad)
div
dec
dec
dec
inc
xchg
push
daa
pusha
das
dec
jb
ins
adc
(bad)
dec
mov
pop
mov
lods
and
fld
test
add
sahf
pop
cli
imul
clc
test
clc
pop
inc
xor
xchg
jecxz
sub
xchg
test
sub
pop
sbb
inc
add
mov
fdiv
adc
and
mov
add
pop
jbe
les
xor
fs
in
mov
add
jae
shl
into
jl
or
(bad)
mov
outs
test
arpl
lods
pop
cmps
lods
dec
icebp
(bad)
mov
shl
mov
cdq
pop
aas
sbb
inc
in
cmp
arpl
jecxz
gs
rcr
lods
dec
not
stc
pop
int
data16
jo
adc
xor
mov
pushf
sub
mov
sar
push
jo
es
jl
jecxz
jecxz
xor
inc
rcr
cdq
xchg
mov
dec
lea
std
daa
repnz
mov
nop
xchg
dec
jmp
ret
lahf
pop
cmps
(bad)
fs
les
int
lods
sub
movs
mov
sbb
sub
aad
(bad)
mov
pop
xor
outs
xor
pop
fs
(bad)
scas
arpl
or
dec
push
add
bound
xlat
mov
scas
pop
jg
mov
pusha
adc
retf
xor
es
sbb
and
pop
not
inc
xor
sbb
xor
push
mov
cmps
or
popf
push
xor
popw
mov
dec
adc
loop
mov
push
inc
retf
sbb
out
or
cli
fcmovnbe
xor
xchg
xchg
xor
xor
(bad)
pop
loopne
adc
(bad)
xchg
jg
xor
push
xor
sbb
retf
mov
icebp
iret
mov
mov
leave
std
push
outs
pop
sub
es
std
and
xor
sbb
in
mov
mov
cmp
jmp
mov
cs
cwde
adc
retf
pushf
gs
push
(bad)
xchg
cs
or
(bad)
scas
push
fistp
retf
mov
add
(bad)
fiadd
dec
enter
push
mov
pop
mov
inc
call
jae
xor
sbb
mov
jns
dec
hlt
push
and
repz
or
in
mov
in
sub
ins
inc
xchg
mov
out
call
in
jp
adc
sub
add
xchg
es
(bad)
inc
sub
cmps
jne
int
jbe
add
lea
adc
movs
pop
pop
sub
push
xchg
lahf
scas
inc
push
mov
sub
jge
aad
es
fadd
pop
movs
mov
fs
dec
ss
call
lahf
(bad)
iret
cmp
sub
jl
daa
push
lahf
inc
sub
jge
test
mov
mov
jbe
add
jp
cmc
(bad)
cmp
push
xchg
dec
and
dec
ficomp
xlat
sbb
loope
mov
adc
adc
popf
repnz
std
rol
sar
sub
push
pop
push
inc
mov
push
push
push
mov
push
sar
(bad)
ret
scas
inc
mul
dec
data16
xchg
fwait
dec
call
aam
sti
and
test
and
or
pop
mov
enter
ror
(bad)
push
ss
call
mov
adc
fld
fcom
js
outs
sub
sar
stos
pop
fwait
sub
sbb
adc
xlat
sbb
sbb
arpl
lods
cmp
mov
xor
sti
test
or
inc
pop
jl
inc
js
les
leave
jmp
test
repnz
xchg
jae
xchg
out
pop
out
(bad)
cwde
arpl
lods
icebp
fwait
xchg
mov
add
mov
push
loope
fidivr
cmp
and
push
and
fisttp
test
adc
sbb
sbb
out
push
and
pop
xlat
cld
xchg
repz
add
rcr
ret
imul
lods
mov
sar
lock
jbe
fiadd
fdiv
jl
cmc
(bad)
gs
adc
adc
jecxz
mov
lock
(bad)
mov
inc
dec
push
sar
in
mov
push
dec
sar
jl
adc
in
add
inc
loope
mov
sti
push
test
cmp
sbb
loope
push
and
sbb
jl
xchg
or
aam
mov
adc
push
shl
nop
(bad)
icebp
in
cmc
pop
cmp
loope
cmc
and
push
dec
xor
mov
div
in
in
jmp
es
out
clc
in
shl
stc
out
jge
push
xchg
rcl
stc
or
shl
scas
aam
jb
and
shl
sbb
and
adc
imul
and
xchg
in
shl
jg
(bad)
or
aaa
pop
pop
psubsw
icebp
mov
xor
imul
js
inc
pop
cmp
cmp
cmp
wrmsr
bswap
retf
repnz
lahf
pop
cmc
mov
lods
mov
push
push
test
ret
mov
push
scas
push
rcr
aas
pop
mov
dec
xchg
adc
pop
not
and
jmp
loope
sub
fadd
cmp
fadd
pop
mov
lods
mov
lds
adc
jl
idiv
add
shr
jb
repz
jns
sbb
push
(bad)
mov
inc
sub
sub
adc
sub
scas
inc
and
sbb
retf
cmps
inc
jmp
dec
cli
add
aad
push
inc
adc
xchg
cmp
cmp
inc
gs
out
add
mov
mul
idiv
sti
mov
adc
pop
xor
mov
adc
sbb
mov
retf
shl
and
adc
cmp
ror
imul
ret
pushf
mov
pop
out
ss
sub
add
(bad)
cs
bound
js
adc
push
adc
dec
push
cdq
push
test
popf
inc
lea
sub
jb
xchg
sbb
push
mov
ret
aas
or
sbb
xor
adc
sbb
out
cmps
out
fild
das
out
jmp
jbe
fnsave
rol
shl
add
jae
shl
dec
inc
add
jg
xchg
add
sbb
jo
test
js
or
sbb
cmp
sub
jg
dec
call
(bad)
push
ins
(bad)
xchg
xchg
(bad)
leave
(bad)
adc
jge
mov
fcmovb
pop
test
ror
mov
outs
in
sbb
inc
inc
mov
iret
mov
mov
dec
or
je
mov
idiv
cli
sub
arpl
jg
shr
jmp
in
int
addr16
push
loop
fist
jge
aad
cdq
ret
push
in
sbb
push
adc
cmp
(bad)
outs
scas
daa
pop
in
jb
scas
add
jg
sub
mov
(bad)
mov
or
mov
xchg
xchg
jle
pop
imul
lock
jnp
or
movs
test
(bad)
mov
out
and
jge
mov
mov
leave
mov
jmp
test
enter
lods
pop
nop
adc
pop
les
mov
out
inc
fimul
inc
(bad)
(bad)
dec
xchg
mov
scas
and
xchg
push
sub
stos
push
mov
ja
pop
popa
mov
mov
les
leave
xchg
js
fbld
pusha
(bad)
enter
cmp
js
shl
cli
xchg
mov
xchg
pop
sbb
repnz
xchg
pop
repz
ret
push
cwde
int
retf
pop
xor
in
call
cli
jp
sub
mov
or
and
shl
add
mov
push
lods
fs
mov
or
mov
sbb
(bad)
and
hlt
(bad)
mov
xor
stos
fsub
ja
in
cli
sbb
jmp
inc
std
jecxz
xor
cli
mov
xchg
iret
push
jl
inc
rcl
inc
mov
jne
jns
int3
mov
stc
sbb
cs
call
pop
(bad)
xchg
addr16
or
xor
repnz
mov
add
aaa
je
push
fld
mov
xor
dec
adc
cli
leave
cmp
mov
add
jecxz
dec
add
inc
push
pop
psubb
fisub
and
cs
xchg
aas
retf
or
inc
fwait
daa
fmul
pop
cmp
mov
mov
mov
sar
gs
pop
jmp
aaa
pop
jg
data16
fstp
jno
scas
mov
pop
pop
std
jns
cs
repnz
lds
jl
xor
adc
pop
push
daa
sub
je
sub
lods
pop
xchg
pop
jl
shl
push
push
add
mov
dec
mov
stos
dec
jns
jmp
inc
push
and
ins
sub
rcr
and
adc
pushf
adc
lahf
jns
movs
cmps
jo
scas
cli
push
cs
gs
mov
pop
pusha
cmp
dec
cmps
mov
ja
cli
mov
shl
inc
jle
in
xlat
cmp
cmp
lock
out
fistp
mov
(bad)
std
add
jne
push
add
fist
adc
sbb
jb
cli
outs
jecxz
push
js
fsubr
scas
in
push
and
push
xor
clc
(bad)
test
ror
ins
mov
ins
lods
push
push
pop
ins
repz
and
or
mul
into
cmp
mov
movs
xor
(bad)
jmp
xchg
fs
pop
jg
add
jecxz
imul
iret
imul
xor
or
push
xchg
ins
xchg
xchg
loopne
adc
add
mov
(bad)
cmp
in
jg
jo
test
mov
mov
xchg
jecxz
mov
jmp
mov
jl
xchg
outs
cmp
js
and
std
push
add
addr16
int3
and
push
jns
xchg
bsf
leave
(bad)
mov
jg
aam
(bad)
xor
sub
jg
dec
and
lea
xor
fisub
xchg
cmp
(bad)
jg
xchg
aad
jmp
adc
clc
ins
mov
push
add
pop
push
fisttp
sub
cmp
mov
cmp
fmul
sar
xchg
ins
add
mov
dec
or
dec
repnz
imul
push
test
pop
mov
mov
aas
mov
jle
mov
pop
cmp
sbb
dec
sbb
mov
(bad)
dec
jns
add
push
mov
add
ss
mov
sbb
repz
test
inc
inc
push
leave
clc
mov
mov
pop
popf
sar
ja
add
outs
push
pop
js
mov
daa
out
aam
popa
sbb
mov
push
push
add
sar
hlt
shl
movs
cmps
int3
int3
(bad)
adc
ss
xchg
adc
ins
retf
stos
arpl
fsubrp
punpcklbw
push
imul
mov
fbstp
xchg
xchg
cld
inc
fs
cdq
jb
arpl
fs
ja
int3
xchg
sub
call
xchg
mov
add
sub
(bad)
fst
(bad)
ins
jg
fbstp
mov
mov
aam
xor
cwde
int3
(bad)
xchg
add
cdq
or
das
cmp
and
pusha
pusha
xchg
stc
rcl
dec
sub
dec
add
push
mov
stos
leave
dec
lds
mov
dec
add
imul
xor
(bad)
fbld
call
arpl
cli
xchg
cs
mov
jecxz
pop
adc
or
or
out
dec
or
cmps
leave
lds
push
cwde
arpl
jne
jle
mov
inc
dec
and
pushf
pop
lds
clc
xchg
mov
mov
es
mov
jmp
or
popf
ds
fwait
stc
ret
(bad)
lock
lods
xor
aas
retf
fwait
push
dec
push
sbb
les
es
outs
in
popf
dec
xor
push
push
adc
dec
test
adc
add
ins
inc
outs
call
jle
out
dec
push
bound
dec
xor
(bad)
lahf
mov
jne
int3
call
cmp
xchg
aaa
add
retf
ins
push
mov
pop
mov
sbb
stos
or
aas
stos
ficomp
(bad)
xchg
or
in
add
rcl
push
pop
xor
(bad)
fnstsw
mov
sub
inc
pop
jg
fisttp
pop
add
lods
aam
add
test
dec
mov
push
cmp
pop
cld
mov
fucom
pop
out
imul
fist
sbb
mov
pop
xchg
push
inc
aam
mov
sub
icebp
pop
lods
jae
xchg
sub
jae
mov
in
xchg
(bad)
fstp
outs
leave
xor
gs
fnstenv
test
add
sbb
loope
adc
dec
ja
jg
jecxz
out
enter
pop
(bad)
shr
call
inc
(bad)
aas
out
jne
imul
les
loope
pop
in
sahf
sbb
loop
inc
jnp
sub
lods
lds
jbe
mov
xor
pop
dec
stos
xchg
jge
adc
arpl
addr16
cmp
dec
push
dec
push
mov
pop
enter
xchg
push
or
dec
fst
xor
test
imul
(bad)
mov
test
shr
clc
shr
inc
cmp
mov
xor
and
adc
es
in
out
sti
cli
sub
fistp
pushf
inc
mov
cs
(bad)
out
scas
test
adc
push
das
xor
sbb
outs
ret
shl
add
cmps
leave
fdiv
pop
jmp
(bad)
adc
dec
call
adc
pop
mov
(bad)
xor
ins
ret
hlt
outs
cmp
adc
sub
jg
push
inc
out
inc
dec
cmps
xchg
loopne
leave
lahf
dec
aam
cmp
in
sbb
cmps
sbb
lahf
mov
push
lahf
or
xor
adc
jae
lds
jno
nop
jne
pop
test
push
ror
and
test
movs
mov
push
jmp
frstor
adc
ins
out
and
pushf
ins
test
jns
sbb
repz
pop
je
mov
mov
push
js
aaa
leave
popf
lea
dec
into
sti
popf
xacquire
mov
(bad)
scas
aad
fnstcw
mov
cwde
imul
repnz
cmp
adc
mov
cmps
push
dec
addr16
rol
jp
xchg
cmps
movs
enter
fdiv
int3
ss
lods
adc
inc
pop
cmp
out
add
adc
push
idiv
jmp
or
movs
adc
dec
into
retf
out
ins
adc
push
pop
test
fcomip
mov
(bad)
mov
adc
inc
cmps
mov
dec
inc
ins
jnp
mov
pop
jle
mov
(bad)
sahf
(bad)
add
mov
cmp
add
(bad)
cmp
pop
jmp
fs
sub
push
dec
or
idiv
cmp
mov
lods
jnp
sub
or
scas
mov
cdq
loop
rol
xor
sub
mov
out
sbb
sbb
fdiv
call
imul
hlt
pop
and
sbb
in
jp
clc
cmp
movs
or
xchg
adc
or
jmp
fwait
add
sub
ins
(bad)
cli
stos
sbb
(bad)
das
outs
add
paddq
mov
jmp
ret
fadd
ror
out
sbb
imul
loopne
shr
sar
pop
mov
(bad)
por
jo
aam
sub
xchg
jge
mov
mov
xchg
aas
cmp
dec
mov
cmp
adc
nop
(bad)
dec
movs
push
or
sahf
mov
cmp
xchg
sti
cmc
mov
or
mov
cs
adc
fsub
xor
dec
sub
mov
pop
ds
mov
xchg
pusha
js
jo
cs
inc
mov
fwait
cmps
inc
cdq
xchg
fimul
mov
xchg
call
imul
fwait
mov
rcl
mov
push
(bad)
movs
add
adc
adc
fadd
adc
out
xchg
dec
popf
cwde
jns
(bad)
js
icebp
dec
push
lea
cmps
jecxz
imul
dec
cmps
lods
xor
jg
xor
cmp
sub
fidiv
or
mov
iret
stc
mov
and
test
mov
test
jae
xlat
and
cmp
xchg
(bad)
sbb
sbb
sbb
mov
and
pop
pop
cmp
push
pushf
add
fisubr
inc
ja
int3
test
imul
jns
xor
and
inc
pop
dec
cmp
in
push
(bad)
adc
and
(bad)
sbb
sbb
jmp
inc
into
mov
nop
clc
inc
pop
rcl
cmps
cwde
sbb
scas
pop
mov
mov
dec
fstp
inc
fwait
pushf
or
cmp
adc
push
loope
cli
jnp
jnp
push
sub
xor
sti
popa
sub
ins
ins
add
mov
clc
das
stos
out
stos
jmp
push
(bad)
fcom
int
mul
popf
pop
or
into
dec
dec
scas
iret
clc
inc
add
xchg
adc
ja
xchg
lahf
mov
test
or
adc
adc
pop
inc
jae
xchg
fisubr
stc
int3
arpl
cld
hlt
xchg
sbb
aad
jns
sub
push
fs
mov
in
jns
stos
cmps
test
push
push
movs
jb
js
inc
jnp
or
dec
and
add
out
popa
sar
lea
sub
add
daa
mov
dec
(bad)
fsubrp
add
popf
pop
sbb
call
ins
cld
cmps
int
popa
or
xchg
mov
pop
lods
fcomp
sub
cwd
or
and
or
dec
cmc
imul
mov
xchg
shr
outs
ja
(bad)
outs
neg
sub
inc
sti
xchg
mov
stos
xchg
vpminsw
add
mov
push
sub
add
loopne
push
xchg
push
add
scas
sbb
cmp
push
addr16
inc
stos
(bad)
jp
lea
imul
dec
add
loopne
inc
lods
mov
jbe
stc
ret
jns
rcl
jns
cmps
pop
sbb
call
mov
mov
in
mov
ja
jp
js
(bad)
icebp
cmp
ficomp
cmp
xchg
ins
mov
ins
xor
imul
dec
arpl
pop
ja
sub
scas
mov
imul
clc
mov
push
mov
sbb
shr
aaa
adc
xchg
and
hlt
sub
ror
mov
imul
leave
fs
adc
repz
imul
aam
and
or
cmp
mov
cmp
popf
mov
fild
adc
sbb
enter
and
jae
in
sub
jp
mov
stc
mov
hlt
pushf
and
out
adc
ja
push
mov
jl
mov
jg
mov
sti
adc
mov
out
cmp
out
mov
test
inc
out
dec
cmc
jae
jg
out
adc
aad
imul
jmp
push
mov
dec
(bad)
call
cmp
mov
adc
jno
ficom
add
sti
sub
push
mov
das
fucompp
out
or
xchg
xlat
outs
push
aas
push
iret
adc
cmp
sub
aaa
jp
xor
jb
sbb
jg
mov
push
sbb
movs
sub
dec
in
sub
pop
push
pop
mov
jns
pop
in
adc
inc
jns
movs
dec
into
vsubps
ret
ins
dec
test
or
je
pop
lock
jmp
push
and
std
pop
mov
dec
mov
sbb
stos
(bad)
aaa
xchg
add
mov
pop
xor
sahf
adc
test
push
push
fisubr
in
fs
sbb
xor
sbb
outs
fld
mov
popa
push
sbb
fidiv
enter
je
adc
adc
js
ins
lock
mul
xor
popf
in
cdq
outs
leave
pushf
call
aam
or
add
and
(bad)
jmp
pop
jecxz
add
bound
xlat
(bad)
pop
stos
dec
iret
jo
icebp
cmp
push
sbb
cdq
cmps
retf
sub
nop
adc
push
mov
icebp
lahf
mov
jbe
arpl
mov
bound
and
in
aaa
stos
pop
jno
imul
push
js
push
fidivr
cmp
adc
scas
cdq
xchg
adc
js
cmp
sahf
sub
je
adc
shl
nop
(bad)
xabort
retf
cmps
add
or
jae
enter
ja
cdq
imul
jns
scas
retf
xor
mov
imul
shr
xchg
call
and
sbb
rcl
into
or
out
popf
dec
test
cdq
add
pop
ror
jns
fwait
xchg
cmps
sqrtps
cmp
repz
pop
addr16
aad
enter
(bad)
stos
sbb
aam
cwde
call
ror
push
fucomp
js
and
xchg
rcr
out
push
aam
mov
cmps
cld
rol
push
loopne
outs
loop
inc
test
sahf
or
test
mov
addr16
out
enter
ret
call
aam
dec
test
jnp
jp
mov
push
cwde
cmp
cdq
test
scas
add
push
inc
cmp
add
(bad)
enter
push
jne
fld
or
clc
into
mov
out
xor
jnp
aad
dec
push
fwait
xor
jb
test
inc
lock
cs
inc
jo
pushf
in
mov
stos
fisub
or
sub
(bad)
mov
mov
push
xor
popa
xor
push
in
jmp
inc
jo
pop
repnz
add
adc
push
movs
or
mov
arpl
pop
xchg
in
lahf
in
sbb
rcr
inc
mov
sbb
jge
retf
xor
je
add
lock
std
das
in
push
icebp
outs
aas
cmps
mov
cmps
pop
xchg
mov
test
mov
scas
cld
rcl
add
mov
and
pusha
idiv
or
cmps
xlat
sbb
mov
std
inc
adc
mov
xchg
push
(bad)
and
and
xor
jno
aas
xor
inc
(bad)
jg
into
push
inc
sub
sti
jmp
dec
cmp
int3
or
mov
lea
lahf
xchg
mov
icebp
icebp
xlat
pop
stos
inc
adc
jae
adc
mov
xlat
push
lock
pop
icebp
sbb
add
mov
call
dec
jle
or
addr16
inc
loopne
mov
xchg
pop
mov
mov
and
xchg
cdq
push
cmp
mov
mov
mov
sbb
cli
sbb
gs
aas
mov
xchg
inc
sub
xor
repz
arpl
inc
test
into
ins
push
jno
adc
fild
aaa
push
ret
in
mov
mov
(bad)
inc
or
add
inc
add
out
dec
fldenv
in
cmc
pusha
add
add
(bad)
imul
clc
sti
cmps
ret
pushf
ds
stos
leave
loope
xor
movs
test
xchg
(bad)
jmp
mov
sbb
outs
dec
push
das
fucom
pop
and
mov
icebp
and
or
enter
add
cmp
or
mul
in
pop
shl
rcr
out
and
add
pop
mov
xchg
retf
movs
call
in
jmp
xchg
dec
loope
in
mov
push
pop
js
cmp
add
imul
cs
pop
iret
mov
push
and
jecxz
adc
shl
imul
cmp
in
push
mov
fs
gs
(bad)
clc
and
rcl
mov
pop
jo
mov
or
mov
sub
and
enter
jge
jmp
mov
mov
loopne
test
rol
mov
or
div
(bad)
clc
xchg
(bad)
push
addr16
mov
pop
sbb
sub
mov
mov
xchg
xchg
dec
dec
mov
or
in
cmp
fsubr
push
aaa
inc
and
ret
es
ins
aaa
(bad)
push
repz
je
fisub
adc
repz
sbb
add
and
adc
jmp
jns
push
cmps
xor
xchg
(bad)
in
fisubr
mov
ins
pop
std
dec
xor
sub
fsubr
outs
arpl
sar
fwait
mov
add
cmp
mov
sbb
std
fild
imul
xchg
add
ins
clc
jno
loopne
inc
dec
add
sbb
pminsw
xchg
adc
add
arpl
add
dec
xor
pop
mov
gs
push
jno
nop
jns
push
pusha
popa
xchg
fwait
jns
(bad)
jp
lods
pop
push
mov
(bad)
dec
sti
cli
test
mov
into
jge
jno
add
cld
out
int3
push
popf
adc
pop
arpl
xor
xor
loopne
xor
cdq
jp
add
jae
jbe
test
(bad)
push
pushf
enter
xchg
xor
push
cmp
sub
int3
leave
movs
ss
inc
sbb
rcl
(bad)
mov
pop
jl
dec
jbe
xchg
and
xor
(bad)
iret
jp
je
xchg
cmp
push
sub
xchg
mov
jmp
(bad)
clc
imul
push
fadd
(bad)
pushf
push
jecxz
(bad)
and
mov
ret
xchg
stos
mul
mov
aaa
out
ja
push
cli
stos
cmps
test
push
aas
daa
cmc
outs
xchg
fidivr
inc
dec
aas
shl
inc
or
daa
inc
jge
in
stos
retf
sbb
mov
je
adc
mov
(bad)
scas
and
mov
jmp
es
sti
push
and
ret
jecxz
xchg
pusha
mov
shr
xor
xlat
mov
imul
sbb
sti
xchg
test
push
das
mov
inc
or
sub
and
fild
retf
mov
xlat
jg
mov
fisub
pop
xchg
mov
cmp
pop
inc
jnp
adc
jecxz
daa
icebp
xchg
and
mov
jp
pusha
in
jp
out
pop
sub
mov
ficom
out
out
stc
dec
aas
(bad)
fwait
mov
mov
loopne
popf
mov
jle
xor
lods
cmp
shr
fwait
push
adc
test
seto
xor
loope
inc
inc
sbb
dec
add
xor
(bad)
fidiv
rol
nop
pop
xchg
push
sub
sbb
arpl
call
cmp
inc
ds
jo
lods
sbb
stos
int
pop
ror
sub
cwde
sbb
in
shl
push
pop
fiadd
sahf
mov
jmp
mov
scas
jl
push
pop
ret
jp
xor
imul
fld
std
add
jno
adc
adc
inc
mov
int
clc
push
inc
mov
int
mov
mov
jmp
push
lds
cmp
frstor
mov
adc
xchg
add
nop
pop
pop
iret
(bad)
dec
pusha
xchg
xor
mov
repz
inc
jne
xchg
repnz
lock
jne
and
add
movs
lock
daa
xor
mov
(bad)
and
pop
(bad)
ret
out
inc
cld
inc
leave
(bad)
shr
out
lock
loope
out
add
and
push
std
fadd
sub
(bad)
stc
xchg
scas
mov
lea
loope
test
fwait
loop
add
or
lds
cmps
movs
mov
test
sub
mov
call
sbb
jbe
push
loope
dec
and
dec
xchg
xchg
bound
popa
sbb
sbb
jmp
dec
out
imul
sbb
aas
push
idiv
dec
in
imul
(bad)
scas
int
push
xchg
mov
xor
arpl
ret
inc
pop
aaa
add
jns
jp
adc
out
movs
fwait
adc
jbe
and
rol
(bad)
jl
repnz
jno
int3
jmp
jns
xor
and
or
call
push
not
adc
and
out
in
push
mov
mov
out
test
pop
inc
jns
in
dec
and
jge
cmp
fidivr
enter
jo
call
sbb
repz
mov
out
mov
rcl
sbb
mov
ss
or
add
mov
pop
fdivr
sbb
or
cwde
cdq
sbb
mov
call
dec
inc
adc
mov
adc
(bad)
shl
addr16
dec
xchg
test
pop
push
mov
push
retf
pop
cld
add
push
shr
xor
push
cmp
mov
mov
jl
push
and
or
cmp
push
sbb
ja
pop
xchg
je
cdq
imul
outs
jns
jge
test
pop
mov
mov
or
pop
(bad)
fst
loop
dec
pop
cmp
jb
setl
fdiv
stos
mov
mov
adc
scas
bound
mov
je
jo
and
xchg
sbb
cmp
dec
mov
xor
pop
mov
add
and
sbb
inc
test
(bad)
and
xor
out
leave
mov
jl
fsubr
std
pop
call
addr16
jmp
fdivp
pop
retf
push
retf
icebp
iret
int
lahf
xchg
jo
retf
adc
not
repz
hlt
ror
cdq
and
dec
push
ret
lock
push
add
or
arpl
push
mov
or
sbb
idiv
sub
sub
mov
jae
icebp
cmp
xor
mov
hlt
call
cmp
cmps
sbb
outs
and
dec
test
dec
rol
pushf
arpl
adc
pusha
data16
in
sahf
push
jle
mov
pop
xchg
fsubp
pop
inc
inc
adc
xor
push
dec
push
sahf
dec
retf
push
mov
inc
fmul
mov
xor
hlt
dec
cdq
adc
les
shl
push
sub
in
inc
adc
retf
and
ins
mov
or
dec
fisubr
(bad)
add
and
add
nop
mov
mov
inc
ss
bnd
sbb
and
imul
push
idiv
xlat
jg
jle
pop
int3
fldl2e
mov
ret
jge
inc
add
inc
lods
and
(bad)
or
sbb
lods
jb
call
cmps
jmp
dec
(bad)
mov
inc
mul
es
pusha
push
fdivr
popf
cdq
cdq
das
mov
scas
push
adc
xchg
mov
or
loopne
jmp
dec
(bad)
fidiv
ret
xchg
jno
sub
push
cld
test
mov
enter
cmp
hlt
sti
shl
adc
jge
mov
push
(bad)
jo
(bad)
iret
push
xchg
int3
pop
adc
jle
ja
xchg
stc
aaa
cmp
mov
or
inc
ins
aas
stos
out
(bad)
in
jo
pop
mov
out
test
or
mov
xor
lea
js
mov
jne
popf
ss
popa
and
fbld
cmp
cmps
dec
or
or
or
shl
dec
fsubp
imul
xchg
pop
fisub
jmp
int
mov
rol
out
lea
xchg
leave
data16
and
gs
mov
iret
in
push
test
arpl
dec
ret
mov
sti
inc
aad
aaa
pushf
xor
cmp
pop
pop
loope
mov
stos
sbb
shr
mov
out
dec
adc
mov
sbb
(bad)
sub
lea
or
mov
pusha
dec
popa
push
jbe
cmps
bound
xchg
push
sub
test
dec
jmp
int
xchg
pop
sub
jb
xchg
jp
cmp
jmp
das
call
pop
pop
daa
jb
sub
loop
mov
cmp
into
sub
test
mov
ja
addr16
test
ins
xor
adc
jl
xor
jmp
rol
sub
sar
fcomi
sbb
jbe
scas
mov
inc
push
mov
jle
or
jno
xor
push
mov
push
cld
mov
cwde
mov
ins
mov
and
adc
and
pop
mov
in
mov
call
pop
(bad)
and
sbb
pop
loopne
out
pop
mov
sub
rol
mov
adc
(bad)
loopne
int
inc
pop
mov
push
daa
push
mov
fwait
rcl
xor
test
clc
pop
push
fistp
jp
add
shl
add
(bad)
es
scas
addr16
mov
rcl
xchg
aam
lods
mov
pop
repnz
dec
sahf
bound
fbld
xchg
cwde
in
sbb
imul
sub
mov
jbe
inc
sbb
xor
pop
xchg
sbb
adc
mov
out
mov
movs
sbb
daa
repz
dec
(bad)
jl
mov
lock
xor
rcl
ds
push
mov
into
mov
pop
dec
adc
mov
jae
in
shl
cwde
in
sbb
jnp
jg
lea
or
adc
inc
fst
shl
and
daa
jo
xchg
xor
jle
mov
ins
jns
pop
stos
dec
popf
mov
add
pop
fcmovnbe
xlat
and
mov
jnp
or
sub
cld
inc
movs
mov
add
and
js
ror
push
add
inc
adc
inc
aam
xor
jmp
cdq
imul
in
jbe
lock
mov
pop
pop
xchg
fsubrp
sar
cmp
xchg
retf
aam
cmp
jecxz
(bad)
enter
lds
jbe
adc
sbb
cmp
ins
pop
cmp
dec
pop
(bad)
adc
(bad)
pop
bound
ins
cmp
mov
xchg
std
push
jo
xor
cli
leave
mov
je
sbb
or
xor
xor
or
popa
fldcw
add
pop
inc
mov
scas
test
leave
daa
adc
mov
or
adc
mov
inc
stc
push
sbb
xchg
dec
das
xchg
pop
ret
xchg
lods
out
xchg
ins
xor
aam
or
ja
sbb
push
xor
cwde
mov
mov
pop
ins
fldcw
pushf
sbb
sbb
jge
cwde
sub
fldenv
push
mov
lea
mov
(bad)
out
outs
movs
(bad)
lods
ja
sub
add
sbb
push
pcmpeqw
mov
xchg
sbb
and
stos
enter
push
retf
sahf
(bad)
movs
dec
popa
dec
sub
add
dec
pop
cmps
(bad)
mov
test
push
add
sbb
xor
lds
and
inc
ficom
(bad)
nop
pop
xor
sbb
lods
or
dec
mov
push
ja
mov
mov
pop
lods
dec
sub
inc
mov
xchg
vaddsubpd
movs
loope
repz
arpl
popa
inc
add
mov
lds
xchg
fstp
dec
mov
or
jp
ret
xlat
paddusb
cmp
fwait
dec
xor
fisttp
cmps
or
stos
sub
jle
leave
xchg
cmp
idiv
imul
inc
adc
lods
sub
xchg
aam
(bad)
call
ret
outs
fdivr
mov
push
pop
add
loopne
sbb
push
sbb
jmp
add
ret
adc
inc
and
lock
push
call
das
jns
enter
adc
test
inc
pop
pop
ret
int
outs
pop
xchg
movs
jbe
jmp
jno
retf
jecxz
lahf
retf
add
mov
lock
movs
mov
mov
loope
or
jle
and
into
js
adc
and
jb
loopne
cdq
arpl
inc
stos
xchg
jns
loop
in
xor
sbb
retf
out
cmps
mov
ror
sub
iret
sub
hlt
retf
jbe
jo
stc
cmp
ficom
imul
pop
sti
loope
push
adc
inc
cmp
xchg
cmp
jae
es
or
cld
int3
xor
loop
addr16
or
mov
mov
in
lods
(bad)
stos
je
and
xor
sti
xor
mov
xchg
enter
data16
mov
in
call
daa
rcl
or
pop
push
stc
les
adc
bound
imul
push
imul
push
push
adc
in
sub
test
mov
xor
sahf
gs
fsincos
bound
(bad)
add
push
mov
movlps
cmp
sub
xor
call
dec
sub
retf
std
repnz
(bad)
aam
adc
mov
pop
mov
sbb
sbb
ret
mov
test
cmp
mov
mov
sub
push
lods
(bad)
adc
std
adc
push
arpl
xor
cmps
je
push
leave
leave
in
sahf
xchg
pop
xchg
lock
imul
or
lds
rol
inc
jle
mov
repz
imul
mov
retf
inc
mov
loop
enter
(bad)
pop
inc
test
xor
shr
ins
lds
xchg
(bad)
mov
int3
mov
xchg
xchg
jle
inc
sti
outs
inc
inc
frstor
xchg
sbb
je
inc
inc
push
mov
test
xor
dec
(bad)
cmp
and
in
gs
lea
add
mov
test
and
ja
test
inc
adc
or
push
neg
or
add
lods
cmps
cmp
sub
xchg
les
mov
sub
jbe
idiv
repz
sub
popa
dec
sti
and
mov
add
or
dec
push
xchg
adc
clc
inc
repz
push
xchg
inc
push
xchg
inc
add
pusha
mov
push
in
sbb
add
repnz
cmp
inc
mov
jae
(bad)
xchg
fbstp
push
mov
pop
xchg
mov
mov
and
cmp
js
lds
xchg
ror
sub
cmps
cmps
daa
add
sub
sbb
ret
push
push
fcmovnb
and
jle
icebp
cmp
aam
pop
scas
inc
aam
pushf
dec
xchg
gs
adc
pop
out
outs
cmp
and
adc
jge
push
or
xor
dec
out
or
ret
fs
mov
pop
ja
gs
pop
or
ds
shr
jge
test
xchg
pop
ins
jmp
cmps
push
js
outs
xlat
cld
cmc
mov
xor
repz
lds
sub
pop
cli
sub
add
add
pop
cld
push
sub
int
mov
fmul
mov
movs
mov
dec
mov
xchg
push
(bad)
lahf
add
xor
adc
imul
or
mov
fist
repz
out
iret
fidiv
ror
std
cmp
arpl
mov
int
call
retf
and
je
xor
mov
test
pop
mov
mov
sub
sub
into
xlat
(bad)
stc
cmp
fnsave
add
sahf
adc
mov
add
push
mov
mov
lock
push
(bad)
scas
and
push
and
xor
pushf
mov
jle
test
scas
aad
icebp
jbe
sbb
popa
sahf
sub
mov
cs
ins
adc
out
push
aam
fwait
dec
inc
int3
xchg
dec
(bad)
or
dec
jmp
outs
sub
jle
mov
scas
jl
daa
mov
mov
or
fisttp
xor
xchg
pop
mov
push
and
cmp
sub
xchg
aaa
sub
ss
push
or
outs
push
aad
inc
ret
pop
nop
inc
or
lods
stc
jo
neg
jmp
inc
stos
pop
xchg
(bad)
in
xlat
sub
dec
dec
jnp
pop
xchg
repz
cld
jmp
mov
loopne
jns
in
cmp
lea
fs
add
sub
add
dec
fwait
call
loope
adc
sar
(bad)
cmp
loope
pop
arpl
push
stc
in
push
lahf
mov
das
xchg
sbb
sbb
lods
cmc
faddp
lock
mov
adc
adc
sar
mov
inc
std
pushf
add
cmc
and
nop
jae
ret
mov
in
xchg
inc
xchg
cs
rcr
ja
or
sub
jmp
mov
and
pop
mov
sub
sub
(bad)
cmp
out
mov
(bad)
jo
dec
lods
sub
das
(bad)
daa
or
add
hlt
and
push
xor
fist
into
jbe
push
ins
in
js
cmp
cli
mov
popa
pusha
addr16
fisubr
mov
sub
add
xchg
fsubp
mov
push
push
xchg
cli
ds
leave
push
jmp
sbb
ficomp
inc
in
pop
out
rol
enter
push
pop
xchg
jmp
cld
mov
pop
cmps
test
ret
push
mov
fwait
das
out
dec
or
sub
jmp
inc
sub
adc
push
jno
pushf
mov
scas
es
cmp
arpl
(bad)
repnz
lahf
cmps
fwait
xor
xchg
jae
lea
jmp
fld
mov
stos
stos
mov
push
mov
jp
movs
in
xlat
test
fst
stc
sub
jl
out
(bad)
xor
jecxz
icebp
mov
jl
sbb
or
push
jo
mov
and
dec
sbb
xor
jecxz
mov
inc
rcl
mov
mov
jne
xchg
jo
sar
xlat
xchg
ss
pop
pop
pushf
test
stc
xor
xchg
lods
pop
and
sub
pusha
mov
and
pusha
push
pop
mov
add
sbb
sub
inc
idiv
mov
test
jg
and
retf
rcr
inc
or
dec
cmp
inc
add
adc
lahf
aaa
jecxz
jp
hlt
jo
call
xor
popa
or
(bad)
jg
addr16
aas
(bad)
push
push
jl
jae
scas
or
loope
jge
or
cmp
fimul
cwde
push
popa
mov
cli
cmp
adc
and
jmp
out
xor
mov
cmp
adc
test
out
js
sub
or
pop
ret
outs
in
movs
clc
cmp
std
cdq
cmp
mov
mov
jmp
push
mov
sahf
mul
retf
mov
and
cmp
jecxz
xchg
mov
stos
ds
or
in
in
shl
push
pop
lods
scas
add
iret
popaw
mov
stos
cmp
scas
push
movs
mov
cwde
xchg
adc
dec
pop
dec
rcr
dec
(bad)
cmp
cmp
outs
fwait
sbb
ins
call
and
aaa
and
test
mov
in
cmc
pop
inc
js
ss
fstp
push
int
popf
or
add
xchg
jle
es
sub
mov
mov
sahf
sti
loopne
or
repz
ins
hlt
sbb
inc
mov
or
test
push
(bad)
mov
dec
mov
push
aas
xlat
ds
shr
and
dec
aad
loopne
xor
mov
or
or
(bad)
icebp
scas
inc
xor
iret
mov
jns
fcomp
or
fimul
dec
inc
lea
adc
mov
add
lea
xor
lods
inc
dec
xchg
cmp
mov
movs
repnz
xchg
leave
sbb
(bad)
cmps
leave
stos
add
shl
das
mov
push
loope
mov
aaa
mov
or
mov
test
ja
movs
fwait
sub
test
js
mov
pop
mov
and
ds
and
ss
les
mov
je
ja
gs
nop
verw
mov
push
not
xchg
pusha
pop
je
mov
imul
cld
fist
adc
mov
xlat
ins
cmp
adc
ret
(bad)
sbb
cmp
mov
jae
mov
loope
and
mov
xor
leave
in
ss
aad
cmp
push
push
and
jnp
and
inc
mov
xor
call
xchg
gs
gs
adc
fild
mov
lds
call
adc
mov
js
pop
pop
dec
call
std
into
mov
adc
push
clc
loopne
loopne
cmp
jle
test
mov
ret
mov
cmc
mov
movs
jno
mov
jmp
and
stc
fwait
hlt
into
cmp
add
push
jp
(bad)
mov
add
cmp
xor
leave
mov
jns
mov
and
ins
pop
fdivp
sub
pop
sub
nop
pop
dec
cmp
adc
sub
xchg
dec
add
rcl
mov
dec
mov
dec
sbb
(bad)
popa
adc
fsubr
clc
int
mov
les
(bad)
cmp
icebp
pop
mov
or
jl
xchg
adc
or
xor
jns
lea
outs
dec
ja
add
sub
jae
adc
sub
out
loope
pop
sti
imul
inc
mov
ins
push
mov
nop
les
ja
cmps
in
inc
movs
jmp
dec
sub
pop
cmp
inc
or
jo
xchg
jns
clc
jae
cwde
jo
jns
stc
sbb
pushf
icebp
nop
xor
sub
jle
xlat
rcr
mov
das
imul
addr16
loop
into
gs
xchg
dec
lods
inc
stc
cmp
xor
fsubr
dec
in
aad
adc
and
dec
cmp
jmp
pop
test
icebp
outs
or
mov
data16
(bad)
and
rcr
imul
ds
pop
push
xchg
out
aaa
xchg
mov
fcom
inc
pushf
jno
jns
(bad)
mov
pop
test
ja
push
out
in
mov
sbb
outs
data16
dec
xlat
clc
or
shl
pop
add
adc
mov
test
xor
(bad)
mov
sub
je
retf
mov
jne
cmp
stos
test
sbb
add
push
sub
pop
mov
xchg
in
(bad)
loop
popa
movs
outs
sub
adc
aaa
mov
mov
stos
lds
les
icebp
cmps
mov
shl
pop
out
call
stos
push
sub
cmc
sbb
cmp
nop
sub
repz
and
mov
sbb
loop
push
inc
loope
retf
or
cmc
fsubp
lods
xchg
call
sub
xchg
rcr
aad
cmps
xor
inc
inc
push
jmp
aad
sbb
call
popa
arpl
jae
and
dec
les
ror
out
push
push
xlat
and
push
push
aaa
mov
mov
pop
aam
xchg
outs
mov
pusha
cwde
ret
mov
and
jl
lahf
sub
enter
sahf
das
retf
sub
cmp
jns
mov
(bad)
ret
xchg
sbb
pop
sbb
rol
js
out
shl
push
push
xor
repnz
out
ja
or
add
out
push
or
mov
jne
sub
sub
jne
mov
lods
mov
add
outs
sar
(bad)
add
(bad)
lahf
scas
(bad)
jle
retf
test
in
fwait
jge
sub
dec
mov
mov
dec
int3
adc
popa
push
jno
xor
add
adc
dec
out
xor
(bad)
xchg
cmp
adc
pop
pop
jecxz
rol
(bad)
cld
jg
cmp
sbb
xchg
arpl
sar
push
xchg
adc
add
mov
frstor
cmp
add
cwde
sub
sbb
inc
dec
jae
and
cmp
xchg
jecxz
mov
add
repz
push
xor
fnstenv
leave
jecxz
pushf
mov
repz
jecxz
xor
inc
xchg
mov
sub
pop
xor
in
or
jmp
xchg
push
adc
mov
jle
in
pop
mov
xor
dec
das
cmps
push
and
rcr
fnstcw
scas
sub
test
add
cmc
popf
ja
pop
and
jno
mov
and
fimul
add
lods
cmp
mov
call
adc
hlt
stos
movs
xor
ins
xchg
aad
lock
(bad)
fwait
(bad)
(bad)
movs
mov
ficomp
xchg
repz
add
fwait
sti
(bad)
(bad)
jnp
loopne
inc
mov
shl
jmp
test
lods
aas
enter
xchg
repz
xchg
movs
cmp
rcl
ja
test
nop
or
or
mov
(bad)
adc
adc
ja
dec
jle
mov
out
xor
iret
popa
das
and
sub
(bad)
jle
sub
pusha
nop
int
(bad)
or
dec
ss
pop
aas
clts
cmp
and
sbb
and
cmp
call
push
mov
jne
xchg
push
test
test
outs
lock
pop
cmp
jmp
fisub
inc
dec
repnz
xchg
inc
push
pop
jbe
pop
sub
lea
test
hlt
and
jae
fisubr
mov
scas
fdiv
xor
xor
test
loop
lock
imul
mov
mov
aas
mov
aas
fisubr
pop
aad
aas
dec
outs
dec
sub
adc
and
in
(bad)
out
mov
icebp
imul
push
push
mov
out
(bad)
loopne
cli
jmp
sbb
in
mov
inc
mov
cld
mov
popf
sbb
and
loop
push
jmp
popf
dec
add
popa
pop
(bad)
or
aas
push
cmp
neg
fbld
jns
mov
leave
xchg
fwait
cmps
mov
pop
cmp
sahf
sub
mov
in
repnz
jbe
rcl
jle
mov
out
mov
in
mov
inc
es
jb
rcr
jb
(bad)
adc
cmp
xor
les
push
stos
jg
fsubr
aaa
(bad)
gs
push
bound
scas
jns
add
adc
cmp
inc
add
add
pop
ds
into
cmp
repz
mov
loope
(bad)
and
adc
and
test
int3
sbb
cmp
cdq
scas
fsubr
or
or
in
jns
add
adc
mov
xor
pop
sbb
sti
sub
cld
fsubr
lods
inc
mov
aam
inc
fstp
sahf
add
cwde
ins
das
mov
jnp
push
in
dec
xchg
es
add
jns
jecxz
loop
pop
pop
lea
pop
rcr
jmp
and
add
xchg
jb
cmc
mov
xchg
aam
shr
add
dec
xchg
cmp
xchg
fistp
adc
stos
add
xor
ja
pusha
sbb
leave
out
push
inc
cli
pop
inc
in
push
in
mov
and
iret
jp
jecxz
ss
sbb
cmps
inc
cmp
inc
sbb
lods
ds
push
(bad)
lock
pop
(bad)
aaa
lock
pushf
jbe
mov
test
div
xchg
mov
repnz
sbb
aad
lock
xor
cmps
out
fst
cmp
cmc
loop
imul
lea
dec
sbb
mov
(bad)
xchg
xchg
inc
xchg
loope
sbb
outs
fld
inc
ss
in
jp
mul
mov
adc
lods
xchg
jl
fs
sahf
pop
or
in
cmp
and
retf
inc
retf
aad
sahf
jae
xlat
fisubr
sbb
pop
jp
shr
mov
xchg
data16
stc
push
arpl
je
mov
mov
cmp
stos
shl
mov
dec
shl
pop
pop
and
xor
lock
add
push
xchg
ja
mov
jg
adc
or
add
add
mov
rcr
iret
and
iret
or
mov
inc
lahf
icebp
jmp
xlat
cmp
rol
lds
mov
lods
and
mov
push
arpl
mov
adc
sbb
mov
pop
ret
cmp
popf
mov
scas
(bad)
mov
imul
add
cdq
inc
sub
push
xor
bound
test
mov
addr16
cmps
xor
mov
sbb
sub
xlat
mov
push
movs
ja
mov
cmp
clc
cmc
xor
repz
or
sub
sbb
xchg
js
imul
ret
(bad)
mov
shl
cmc
jno
jo
stos
repz
imul
enter
inc
or
addr16
std
push
jmp
sub
out
and
push
mov
inc
das
cmp
call
loop
mov
sub
jo
and
mov
ins
rcl
enter
daa
xchg
std
push
sbb
dec
cld
mov
call
xchg
imul
inc
jmp
cmp
fwait
pop
pop
cmp
fdivr
cdq
cmp
mov
pusha
mov
mov
jbe
daa
in
push
xchg
sti
xor
es
mov
div
mov
in
lods
les
pop
repnz
pop
shl
idiv
mov
and
add
(bad)
stc
fdiv
xor
mov
repz
aam
xlat
xor
mov
push
and
pop
mov
clc
push
fsub
pop
adc
(bad)
xor
mov
movs
mov
xchg
je
cmp
push
mov
mov
cdq
pop
pop
bound
jp
jae
jmp
iret
fdiv
push
aam
scas
arpl
push
add
int
loope
ror
jmp
inc
sahf
das
fst
xchg
jmp
sbb
mov
lods
dec
sbb
push
int
stos
jl
push
scas
sbb
cmp
dec
sar
js
outs
mov
stos
inc
mov
ds
shl
mov
rcr
popa
xor
mov
inc
out
inc
cmps
in
inc
in
jne
aas
push
into
retf
pop
sbb
xor
xchg
pop
in
popa
aaa
or
cmp
dec
inc
and
out
ror
fidiv
jne
pop
nop
ss
ds
das
mov
jae
aas
cmp
dec
test
jp
pop
pmuludq
or
daa
cmp
inc
mov
inc
push
aaa
and
inc
outs
and
xchg
aas
sbb
mov
les
push
jae
add
cmps
xchg
pop
ror
adc
repnz
add
jl
xchg
pop
and
frstor
dec
mov
xchg
dec
pop
out
imul
pop
lahf
jle
mov
shr
inc
sti
xor
mov
out
mov
int3
daa
mov
aas
addr16
(bad)
fild
or
adc
push
sti
xchg
je
das
and
inc
or
out
push
or
mov
outs
cmp
aad
adc
cmp
fwait
lea
add
imul
or
or
jb
popa
hlt
mov
push
pop
mov
sub
ins
(bad)
xchg
dec
add
lods
sbb
(bad)
scas
sbb
dec
mov
sbb
pop
and
push
jae
sbb
push
inc
loopne
push
inc
push
jge
dec
cli
xchg
cli
push
outs
jae
or
iret
enter
mov
mov
xchg
retf
leave
repz
mov
(bad)
dec
jmp
mov
pop
mov
int3
inc
lods
sahf
adc
xor
add
repnz
ret
push
pop
xchg
fnstenv
xchg
sub
xchg
sbb
inc
push
mov
in
je
shr
fimul
ret
jae
sub
retf
push
sub
loop
pusha
xchg
add
and
cmp
xor
sti
stos
pop
mov
neg
rol
xchg
xor
lds
mov
fchs
ret
jecxz
pop
xchg
icebp
jb
ficomp
scas
shl
aas
jnp
fadd
shr
xchg
repnz
je
fsub
jle
pop
jns
mov
pop
sub
shl
rol
lods
jbe
out
ret
sbb
xchg
imul
shr
dec
sub
or
fsub
in
or
jg
jp
stos
jb
mov
mov
ss
jp
pop
je
fisttp
jo
int3
sub
push
adc
add
push
sub
pop
cmps
mov
mov
int
pop
lock
push
jnp
mov
lods
(bad)
fld
dec
sahf
ficom
pop
pop
test
sub
fist
xchg
mov
je
mov
iret
xchg
(bad)
adc
sub
(bad)
mov
mov
fnstsw
ss
in
stos
loope
loope
mov
cmp
lds
add
sbb
scas
mov
mov
stos
xchg
movs
or
push
adc
xor
add
jne
and
aaa
fdiv
push
dec
aad
dec
dec
das
or
and
lahf
fsub
jne
pop
fisubr
push
or
into
cmp
retf
cld
(bad)
xor
pop
cmp
inc
js
lock
jae
ss
and
repz
imul
mov
popa
adc
pop
xor
dec
call
cmp
pop
mov
pop
cmc
inc
fild
stos
or
and
test
shl
cmps
cmp
loop
jge
mov
adc
sbb
sbb
jle
push
and
iret
test
cmps
push
inc
inc
cli
outs
iret
ss
pushf
jmp
ins
leave
mov
sub
jno
std
sbb
pop
test
retf
scas
adc
popf
inc
enter
retf
les
or
hlt
inc
loope
cdq
out
bound
add
or
push
rcr
dec
es
push
fmul
popf
mov
pusha
dec
inc
data16
cli
lods
and
outs
retf
shl
popf
push
in
xchg
mov
pop
and
push
aam
shr
lods
push
xchg
fucomip
(bad)
jecxz
push
adc
xor
cmps
dec
jno
pop
inc
add
fistp
iret
ror
dec
mov
mov
fmul
dec
test
push
cmp
rcr
ja
test
xchg
loopne
xor
imul
dec
mov
in
fnstcw
popf
test
icebp
adc
and
cmp
aam
mov
outs
(bad)
jo
(bad)
leave
icebp
add
gs
mov
mov
push
pop
push
dec
dec
mov
repnz
cmp
test
int3
mov
ror
fcmovnbe
ja
mov
jae
xchg
add
push
mov
mov
mov
sub
inc
mov
add
fwait
in
sbb
jmp
stc
out
sbb
cld
aas
(bad)
push
ja
outs
mov
outs
loope
xor
sub
sub
clc
pushf
movs
mov
sbb
mov
add
dec
int3
fst
ret
mov
xor
fiadd
inc
mov
(bad)
xor
test
xchg
push
in
std
adc
or
jb
stos
rol
sub
stos
in
sbb
aad
pushf
mov
test
outs
or
inc
xchg
and
jge
arpl
(bad)
jp
jecxz
mov
sub
or
push
loope
xor
fwait
movs
scas
add
adc
adc
pop
loope
mul
xor
popa
icebp
movs
push
cdq
ss
pop
mov
adc
(bad)
dec
ins
rcr
icebp
pop
inc
aam
xchg
adc
popf
loopne
sub
fsubr
xlat
rcr
into
loop
in
and
ficomp
sti
xor
mov
push
cwde
test
jmp
and
and
add
push
push
jns
out
mov
rcl
cmp
jg
xor
gs
xchg
xchg
and
xchg
xchg
mov
add
push
mov
inc
mov
jns
dec
je
inc
nop
adc
cli
pop
adc
mov
pop
cmp
pop
shl
xor
(bad)
add
adc
test
jo
jno
(bad)
out
data16
xchg
fsub
rcr
jbe
and
xlat
cmp
push
test
fistp
fnstenv
push
fcom
sahf
leave
add
into
mov
or
aaa
icebp
pop
movs
dec
push
in
jecxz
pushf
cli
add
jns
mov
in
loopne
add
shl
adc
xchg
cmp
mov
aam
mov
or
push
sar
sub
sub
stos
setg
shl
jo
inc
or
cld
mov
loopne
xchg
aas
mov
inc
retf
xchg
add
daa
addps
std
cdq
fmul
fsub
jecxz
fld
sub
cmps
mov
xor
(bad)
cmp
push
xor
sub
mov
cmp
pop
in
loop
unpcklps
inc
aaa
sahf
pop
rcr
jmp
xchg
jge
dec
mov
inc
leave
xor
cmp
add
in
dec
cmps
enter
xchg
inc
or
movs
rcr
popa
add
cmp
mov
std
or
ror
loopne
inc
add
push
and
repz
ins
pop
mov
jns
adc
es
not
in
or
stos
stos
xor
jl
inc
push
in
out
mov
sbb
ins
fwait
(bad)
out
int3
mov
add
dec
mov
push
mov
pop
adc
(bad)
adc
cmc
push
mov
push
add
xchg
dec
sub
mov
sbb
mov
ss
popf
mov
mov
test
lahf
bound
mov
mov
popf
data16
cmc
fs
cmp
imul
mov
popa
or
repnz
call
xchg
xor
stc
xor
mov
es
pop
xor
fld
dec
xchg
pop
int
aas
jae
hlt
(bad)
cld
leave
pop
mov
int3
mov
dec
cdq
or
push
les
das
pop
push
mov
cmp
jg
js
sub
pop
les
add
pop
cwde
and
push
lods
mov
xchg
mov
out
fiadd
sub
cmc
hlt
or
push
mov
hlt
inc
sbb
jmp
test
jnp
cmps
xchg
hlt
sti
lods
arpl
arpl
test
cmp
stc
sar
jl
sub
mov
pop
fstp
cs
(bad)
jg
cmp
xor
xor
adc
ret
sub
cmp
pop
movs
ret
adc
jns
ret
mov
mov
cmp
outs
sub
and
ret
fucomp
ret
push
jne
cmps
sbb
push
(bad)
sub
pop
jge
ja
ins
jecxz
addr16
std
inc
cmc
in
mov
sub
mov
sbb
cmp
(bad)
and
test
rol
out
adc
xchg
pop
ja
sar
sbb
das
jae
adc
add
push
sub
sub
loope
jl
es
dec
out
or
loop
loop
push
test
jns
inc
inc
fsub
(bad)
arpl
outs
xchg
fist
int3
in
in
(bad)
jmp
add
enter
aam
pushf
pop
repnz
retf
jbe
xchg
xchg
xor
sbb
inc
jg
(bad)
clc
xor
int
dec
js
in
aad
sbb
invd
cmp
pop
fistp
fld
push
popa
cmp
(bad)
dec
adc
mov
pop
cmc
test
sub
mov
dec
fisub
xchg
mov
fbstp
or
(bad)
mov
xor
and
xchg
lods
loope
xchg
not
xor
cmp
popf
std
xlat
or
sbb
push
jmp
push
cmc
mov
pop
sbb
out
jp
add
pop
fstp
popf
outs
cs
adc
jae
fdiv
iret
mov
imul
leave
adc
mov
inc
mov
in
in
adc
es
aaa
mov
sub
mov
(bad)
es
test
push
repz
dec
dec
add
mov
push
jmp
fnclex
mov
jl
pop
adc
in
mov
bound
es
jns
jmp
dec
mov
aas
into
adc
mov
sub
cmp
gs
dec
pop
mov
clc
cs
mov
and
jg
sub
and
sub
xchg
rol
stos
mov
cmp
popa
shl
cld
es
scas
mov
adc
loope
adc
sub
retf
into
mov
or
mov
cmp
adc
inc
xor
cmp
scas
push
push
sub
retf
cmp
fwait
push
xchg
adc
scas
cmps
push
rcl
outs
mov
inc
bswap
mov
out
cmp
nop
scas
dec
test
retf
in
xor
scas
lds
(bad)
stc
xor
loop
add
lods
fwait
push
xor
js
jnp
cli
mov
push
imul
in
mov
mov
and
mov
pop
cli
adc
and
push
add
ds
jmp
push
or
lods
add
(bad)
leave
dec
xor
jne
xchg
or
jns
fdivr
sbb
xlat
pop
mov
retf
(bad)
enter
mov
jl
xor
rcl
sti
jle
pop
mov
test
xor
imul
adc
lock
inc
and
sub
or
loope
(bad)
push
mov
retf
cli
xor
xchg
out
pop
jnp
sar
fnstsw
pushf
mov
(bad)
in
push
and
mov
into
push
leave
dec
sbb
jle
and
loope
retf
fisubr
int
pop
es
adc
add
js
ss
ret
pop
aaa
jg
fidiv
or
stos
mov
and
jmp
bound
pop
cmp
push
cmp
dec
add
cwde
test
in
dec
push
ficomp
xchg
xchg
(bad)
sub
adc
push
cwde
shl
or
outs
(bad)
push
dec
push
jb
pop
mov
pop
js
iret
jg
rcl
push
push
inc
cmp
jbe
lods
adc
xchg
cld
shl
out
fsubr
add
lahf
jecxz
pusha
jmp
movs
add
fwait
lods
test
push
cmp
mov
sub
xor
xchg
int3
gs
repz
cdq
aad
outs
adc
cmps
(bad)
mov
mov
loope
push
jno
loope
popf
mov
ret
mov
jbe
jnp
inc
ss
jns
fnstenv
icebp
(bad)
(bad)
shl
inc
and
cwde
mov
adc
data16
ins
(bad)
dec
push
lea
sar
fdivr
xor
dec
pop
xor
jns
and
ss
lods
pop
not
sub
in
mov
addr16
jnp
arpl
outs
cmp
add
cmp
ds
mov
cmp
inc
movs
(bad)
aas
xor
fild
mov
cmp
sbb
cli
shr
push
jno
mov
jmp
call
inc
loope
ja
cmp
rol
(bad)
les
mov
sbb
mov
jne
repz
std
adc
scas
lods
(bad)
jae
pushf
lock
out
jnp
mov
mov
xchg
popf
adc
or
cmc
sbb
sub
repnz
push
jne
test
sub
ret
or
push
ds
repnz
fcmovb
adc
in
or
cmps
mov
sbb
addr16
xor
pushf
sub
(bad)
push
dec
fst
push
dec
in
mov
hlt
data16
test
not
aam
sbb
cmp
les
mov
test
int
sub
fsubr
sbb
sbb
adc
daa
pushf
mov
inc
pop
add
jns
ja
mov
loopne
xchg
loop
lods
pop
pop
mov
sub
sub
mov
ss
out
xchg
inc
dec
jb
or
daa
jmp
and
scas
mov
aam
outs
jns
sub
dec
dec
fisub
mov
call
mov
dec
and
int
and
das
mov
cld
std
test
in
arpl
mov
xchg
shl
jno
jmp
cmp
jbe
jnp
mov
mov
pop
jg
ins
sbb
pusha
fsub
xchg
scas
dec
leave
mov
stos
iret
imul
je
sar
pop
cmps
enter
add
retf
mov
mov
xor
mov
std
and
inc
adc
sub
and
add
out
or
fisubr
xlat
shl
sbb
adc
pushf
data16
dec
mov
cwde
daa
pop
lods
inc
out
ins
mov
xchg
mov
cwde
movs
das
xor
ss
or
ja
sub
jne
xchg
outs
mov
bound
jg
lock
pop
mov
ss
sub
adc
inc
mov
mov
rol
in
pop
popa
cwde
push
push
ss
and
pushf
mov
outs
xor
and
mov
jns
enter
(bad)
jnp
pop
mov
add
mov
fcmovbe
inc
mov
sahf
(bad)
js
dec
ja
cmp
pop
mov
mov
neg
(bad)
jmp
push
jmp
movs
shl
dec
sti
and
into
pop
retf
scas
fwait
cmp
mov
jne
push
adc
pop
add
sbb
icebp
outs
fisubr
cmp
aad
inc
loope
add
mov
daa
lds
sub
div
or
or
and
adc
sbb
fimul
repz
ss
pushf
sar
mov
jecxz
jp
xor
cmp
jg
inc
enter
sbb
xor
(bad)
xchg
imul
inc
test
lahf
ja
and
into
in
or
ficom
out
inc
ds
pushf
fld
mov
aam
loop
lods
cli
into
popa
scas
add
sahf
idiv
std
adc
xchg
xor
push
repz
int
jg
inc
xor
dec
fsubr
scas
jno
adc
push
arpl
(bad)
xor
addr16
enter
cmc
(bad)
sbb
loope
sahf
push
iret
add
repnz
adc
retf
je
xchg
leave
not
inc
or
cmps
sub
mov
gs
inc
adc
xor
cdq
push
inc
ja
xor
mov
in
mov
add
and
loop
xor
dec
push
fnsave
add
mov
test
stos
mov
or
fwait
sub
clc
out
jno
repnz
jb
xchg
clc
cmps
(bad)
push
fwait
mov
sbb
pop
bound
cmp
lods
jg
popa
enter
add
aas
jno
and
dec
jbe
push
mov
stc
push
mov
cmp
jbe
ins
jae
push
dec
push
aas
mov
add
xchg
mov
mov
dec
fiadd
jb
nop
ror
and
shl
pop
xor
ins
iret
sub
mov
pushf
shl
iret
inc
inc
pushf
bnd
dec
nop
xchg
push
cwde
ror
in
and
ja
push
cld
pop
mov
mov
mov
(bad)
or
sub
mov
out
fwait
imul
sub
add
inc
scas
jnp
xor
(bad)
or
ret
add
scas
movs
jg
std
xchg
popa
mov
pushf
test
xor
retf
ret
(bad)
shl
xor
dec
or
das
retf
cli
jmp
and
movs
in
stos
outs
popf
fistp
fisubr
push
jg
xor
les
mov
pop
ret
pop
pushf
in
mov
sbb
stos
int3
or
test
mov
xchg
and
aas
and
pop
ret
test
inc
pop
cmp
or
test
pop
mov
out
scas
je
into
lds
sbb
mov
loopne
and
sbb
cld
out
fmul
jno
ds
or
mov
sbb
sub
lahf
das
sub
jbe
xchg
cwde
jne
out
push
mov
repnz
xlat
mov
pop
xchg
je
mov
xchg
int
mov
xor
daa
std
rcr
sbb
pop
into
mov
ret
add
imul
mul
aad
scas
add
push
ins
fs
int
scas
ja
scas
fnstcw
nop
mov
push
out
cmp
and
jmp
mov
xor
retf
or
inc
sbb
fnstenv
adc
sub
add
and
ror
dec
push
cmp
call
stos
imul
xor
push
out
xchg
sti
pop
xor
ja
dec
pop
lods
xchg
xchg
inc
daa
dec
xchg
pop
xor
in
je
test
jecxz
mov
cmp
arpl
pop
cmp
push
xchg
pop
sti
add
mov
ins
cmps
add
xlat
pop
retf
in
mov
pushf
cmp
dec
jmp
mov
rcr
sub
mov
push
jg
dec
fiadd
push
jp
sub
ja
es
hlt
inc
add
inc
fstp
xchg
mov
popa
mov
jbe
test
lds
in
lock
jecxz
lds
gs
sub
inc
scas
cmp
fbld
(bad)
adc
mov
inc
push
xchg
je
(bad)
pop
(bad)
push
jle
shl
test
jge
inc
jmp
je
cmp
jg
and
mov
or
and
movs
and
jne
ss
ins
cmp
cmp
rcl
adc
mov
and
xor
lods
pop
into
add
ret
out
mov
jecxz
ja
jge
ins
lods
shl
pushf
and
fs
cmc
test
cmp
cmp
cld
mov
cmp
hlt
dec
out
in
and
pop
arpl
xor
ins
test
mov
in
sar
mov
and
inc
test
sub
aaa
pop
xor
and
iret
pop
out
aad
mov
mov
sub
cmp
stc
out
pushf
mov
cdq
pusha
repz
out
fistp
icebp
icebp
je
pop
in
jbe
inc
dec
cmp
pop
pop
cwde
mov
dec
outs
add
xchg
jge
nop
jle
or
lods
inc
(bad)
aad
out
inc
imul
adc
sbb
or
cli
cmps
enter
out
cmps
cmp
cmc
inc
int3
sbb
push
push
sbb
sbb
ret
div
and
lahf
jecxz
add
dec
push
dec
ins
push
cmp
cmp
pushf
xchg
mov
dec
sub
sahf
jae
pop
(bad)
xchg
sti
adc
or
dec
aas
arpl
mov
not
push
pushf
mov
and
jae
or
xchg
sar
push
fs
push
xchg
push
in
fcomp
sbb
(bad)
or
dec
xlat
mov
pop
je
mov
cmp
rcl
icebp
(bad)
retf
mov
mov
fsubr
xor
ins
push
cmp
jg
xor
pop
addr16
out
adc
push
push
or
and
rcr
adc
push
jmp
aaa
pop
add
and
icebp
add
adc
xchg
pop
shr
xor
cli
movs
ficomp
std
mov
xchg
and
pop
aaa
into
fst
sbb
bound
mov
add
jne
sti
inc
mov
dec
xor
mov
cs
xor
call
ins
mov
test
mov
cmp
(bad)
fwait
add
out
adc
bound
push
push
cli
and
iret
in
ficomp
cvtpi2ps
fisubr
inc
push
(bad)
dec
mov
jnp
xor
sub
arpl
sub
pop
loop
test
mov
enter
xor
in
call
popa
sbb
add
out
sbb
cmp
cmc
pop
ja
test
mov
test
addr16
call
cs
movs
adc
mov
out
or
mov
out
mov
inc
inc
rol
xor
es
and
pop
icebp
ins
mov
test
add
add
test
dec
lock
(bad)
gs
test
scas
sar
cmc
mov
rol
(bad)
das
or
dec
movs
das
ucomiss
jno
or
bnd
shl
lock
sub
and
jnp
mov
aam
sbb
inc
fbld
sti
in
inc
sub
cmp
push
adc
mov
push
scas
mov
imul
retf
out
outs
pusha
jmp
les
mov
ret
loope
jecxz
call
push
test
sbb
mov
jne
dec
test
clc
gs
xchg
adc
add
cmp
out
outs
aaa
xchg
std
pusha
mov
test
into
jno
jmp
jmp
mov
ret
mov
push
inc
outs
sbb
lods
jb
cwde
idiv
dec
(bad)
lods
xchg
adc
push
fbld
mov
fdivr
push
cmp
retf
mov
sti
lea
push
ja
aaa
mov
loop
sbb
mov
jl
into
sbb
sbb
push
movs
and
ret
(bad)
imul
mov
push
sub
inc
pop
jo
repnz
push
mov
lods
mov
call
(bad)
pop
bound
mov
rol
fisub
jo
sbb
add
mov
or
movs
aad
addr16
in
xchg
lock
cmps
(bad)
rcl
mov
inc
jp
lods
aad
push
test
pop
ins
data16
lods
xlat
mov
push
sub
adc
inc
les
pop
ret
xor
out
retf
mov
mov
lock
cmp
add
mov
cmc
cmc
(bad)
icebp
lea
pop
retf
inc
and
or
ret
dec
add
es
shl
js
sbb
xchg
(bad)
adc
push
xchg
push
adc
ins
push
fld
not
movs
add
jl
aad
int3
inc
pop
rol
das
push
mov
inc
int3
stos
or
add
add
hlt
dec
pop
pushw
push
push
mov
cdq
sbb
dec
cmps
(bad)
pop
fiadd
das
cmp
or
inc
jmp
and
xlat
xor
retf
stc
pushf
xchg
push
push
pop
or
mov
shl
(bad)
adc
sbb
mov
jmp
ins
mov
dec
mov
imul
or
push
jbe
push
adc
aas
in
sbb
inc
test
cmp
int
out
loopne
mov
or
ret
xchg
sar
ret
cmps
cmp
mov
inc
loop
(bad)
push
aam
xor
jge
or
cld
adc
ss
and
arpl
inc
dec
jnp
(bad)
sbb
outs
dec
fadd
xchg
inc
ins
sub
add
out
inc
outs
or
push
push
sub
fild
dec
cmp
jg
xchg
mov
jle
retf
inc
sub
icebp
inc
int3
and
dec
fsub
inc
add
dec
jb
add
sub
mov
jge
xlat
push
xor
cmp
mov
or
mul
aam
adc
inc
mov
pmulhuw
scas
or
call
mov
or
sbb
sar
jae
xor
mov
sbb
xchg
cwde
repz
pop
outs
push
adc
fist
dec
pop
or
(bad)
push
stos
(bad)
hlt
mov
mov
mov
inc
aas
fist
jnp
dec
cli
push
es
(bad)
cwde
or
leave
jne
mov
inc
inc
push
xlat
dec
das
call
mov
dec
imul
call
sub
movs
jnp
cmp
xchg
popa
js
es
mov
cmp
pop
test
and
test
mov
jl
pusha
pop
mov
jecxz
push
call
sub
inc
je
or
inc
xor
or
outs
jno
call
add
and
jl
add
or
fs
pop
movsx
push
dec
and
cli
adc
fimul
xlat
int3
dec
aaa
and
dec
loope
pop
and
movntps
enter
jne
clc
test
mov
jne
add
xchg
and
jo
dec
into
sub
clc
retf
mov
push
xchg
fldenv
mov
adc
loopne
sar
jl
pusha
ret
and
rol
sahf
in
lods
out
(bad)
fmulp
aad
movs
sbb
or
or
xlat
inc
lock
add
clc
push
mov
pop
js
std
mov
pop
adc
pop
pushf
les
mov
sub
and
(bad)
lock
mov
push
jl
inc
and
call
jb
push
scas
popa
fdivr
call
sub
and
pop
add
(bad)
fwait
in
ss
idiv
jl
push
rcl
jae
jae
(bad)
int
daa
jl
pusha
mov
xchg
dec
and
add
test
call
push
jle
jo
adc
xor
mov
scas
inc
add
ins
cli
jp
test
mov
mov
addr16
in
jle
call
jbe
in
push
sub
aam
pop
leave
ja
or
repnz
mov
jg
lods
dec
mov
imul
mov
into
pop
repnz
add
ss
sbb
jl
aam
xchg
sbb
clc
mul
adc
mov
mov
stos
or
mov
xor
add
imul
sti
enter
test
jo
fwait
icebp
mov
daa
inc
(bad)
push
sbb
test
push
push
aas
(bad)
out
cmc
pushf
data16
sti
mov
or
sbb
inc
imul
ja
je
and
dec
jecxz
je
iret
sbb
mov
push
xchg
fstp
push
cmp
int
adc
mov
add
aas
outs
out
scas
jb
jmp
jp
or
imul
adc
aad
fs
or
xor
shl
sbb
sub
test
stos
stos
dec
cs
and
mov
scas
pop
jno
xchg
lahf
sbb
cmps
fidivr
add
cmp
and
dec
test
call
jno
jne
rcl
inc
test
mov
loopne
cmc
cmps
inc
sub
(bad)
dec
sbb
clc
ins
xchg
gs
pop
sbb
sbb
xchg
jnp
test
push
xchg
loop
aad
and
push
mov
jg
lds
jne
fimul
push
jbe
pop
lds
add
mov
cmp
mov
popf
fsubrp
and
bound
adc
mov
rcl
sub
fdiv
cmp
mov
add
ret
scas
inc
jge
popa
dec
mov
mov
(bad)
fsub
cmp
loopne
loop
ds
fild
test
in
int3
cdq
inc
add
cdq
jns
outs
mov
leave
lea
jl
and
retf
xchg
mov
inc
(bad)
les
mov
mov
ins
ret
sub
sbb
in
xchg
mov
cld
xor
std
pop
shl
dec
xor
test
push
call
xchg
movs
xor
pushf
and
outs
div
ret
aam
fbld
xchg
mov
nop
repnz
cmp
data16
sub
mov
mov
cmp
ret
mov
mov
ret
jecxz
jne
jmp
or
mov
mov
inc
shl
or
inc
dec
nop
add
lods
sbb
add
loope
shl
xchg
sbb
lahf
jge
xor
inc
add
pop
push
mov
ins
add
pop
xchg
cs
aas
adc
mov
dec
inc
lds
push
and
repz
xlat
lds
push
dec
out
push
inc
dec
jns
inc
mov
aaa
pop
push
sub
pop
or
inc
mov
in
in
ror
cld
xchg
mov
ficom
movs
repnz
stos
fadd
sub
push
jmp
dec
in
hlt
xchg
nop
jp
push
sub
cmp
push
mov
imul
das
in
leave
jle
push
jb
xor
aaa
movs
jmp
jle
sbb
or
adc
push
and
or
add
leave
adc
push
mov
ror
xor
sub
aam
aad
sub
sub
add
push
mov
sbb
sbb
cwde
(bad)
rol
ret
xor
mov
sub
pop
mov
rcl
fld
clc
movs
dec
sub
adc
push
in
xlat
aas
stos
xlat
nop
jg
cmp
xor
jae
aas
dec
or
das
jne
push
mov
sub
xor
mov
call
(bad)
fidivr
adc
xor
dec
xor
ja
pop
inc
cmp
dec
add
mov
repz
adc
mov
xor
stos
stos
hlt
jle
xchg
add
xchg
jns
lods
loope
jns
and
test
les
lods
popf
outs
xchg
dec
fild
push
pop
bswap
jle
jle
mov
mov
fstp
popa
lea
add
or
or
pop
stc
cdq
pop
xor
jo
jno
enter
mov
mov
adc
pop
jns
xchg
test
mov
fs
addr16
cmp
inc
push
cmp
sbb
leave
(bad)
aas
das
les
aaa
inc
out
adc
sbb
sbb
and
mov
in
inc
out
adc
or
adc
mul
push
arpl
mov
inc
or
add
fwait
imul
xor
popf
mov
(bad)
jnp
scas
or
xchg
mov
lods
sub
inc
daa
(bad)
in
stos
gs
and
sbb
pushf
and
dec
jno
jnp
push
mov
push
imul
adc
push
repnz
mov
sub
shl
inc
sub
retf
sbb
outs
xor
mov
std
cmp
adc
jb
jns
jbe
or
xor
repz
xchg
jp
sub
popf
pusha
xchg
stc
(bad)
(bad)
fs
sahf
mov
daa
inc
push
fisttp
fstp
scas
mov
jge
in
in
push
icebp
pop
imul
ror
sub
sar
scas
inc
ja
(bad)
pop
xor
push
inc
push
jmp
dec
xchg
cmp
loope
ds
stos
sbb
or
push
stos
nop
jle
retf
push
and
inc
inc
jno
gs
gs
add
push
loop
ins
aad
add
in
push
(bad)
cwde
sub
mov
mov
inc
dec
test
dec
push
mov
icebp
jmp
fld
pop
dec
pop
sbb
in
adc
cmp
xchg
(bad)
fnstenv
mov
js
stc
jmp
retf
add
pop
sub
mov
ja
movs
dec
inc
push
stos
les
mov
iret
push
sbb
mov
(bad)
das
icebp
pop
fsub
add
jle
pop
mov
iret
(bad)
mov
cmp
sub
push
add
fdivp
pushf
sbb
shl
jmp
outs
test
nop
jno
std
scas
push
es
std
mov
inc
mov
lea
fist
popa
call
adc
out
out
mov
and
mov
aad
mov
sbb
adc
inc
lds
sub
aas
push
pop
inc
lods
ret
cmp
mov
out
repnz
out
pop
pop
out
adc
inc
stos
dec
in
mov
jb
inc
add
out
les
push
(bad)
mov
jecxz
adc
xchg
fwait
sub
push
popa
and
push
mov
repz
mov
mov
(bad)
push
ins
push
xchg
nop
dec
xchg
cld
les
push
(bad)
aam
jecxz
fisttp
into
cmp
jbe
pop
xchg
xchg
popf
or
or
push
mov
mov
cmp
mov
xor
imul
jg
fldcw
jbe
xchg
popa
jmp
push
repz
inc
pop
mov
int
mov
cmps
mov
int
or
arpl
jecxz
ins
and
sbb
push
out
and
dec
rcr
fs
clc
jg
mov
scas
mov
fadd
std
lods
push
xchg
(bad)
bound
aad
dec
adc
jecxz
sub
pop
sbb
dec
push
xchg
ret
outs
mov
sar
xchg
mov
enter
cld
dec
mov
rcl
pop
(bad)
mov
push
(bad)
ins
inc
mov
test
jnp
add
neg
std
(bad)
pop
loopne
mov
pop
movs
and
mov
sub
push
cmp
mov
dec
out
nop
ds
mov
inc
or
shr
or
sbb
test
cld
call
outs
sub
add
call
fstp
sub
imul
and
(bad)
pop
sahf
adc
mov
sub
xor
data16
mov
repnz
sbb
sahf
push
pop
pop
dec
push
dec
icebp
add
jo
xor
and
mov
jecxz
cmp
sbb
adc
jnp
aaa
push
xchg
inc
add
cli
xchg
movs
jns
dec
loop
inc
mov
push
jg
jnp
xor
push
and
pop
fucomip
sti
dec
jo
test
push
sahf
arpl
icebp
sbb
xchg
and
(bad)
popa
iret
ja
push
test
pslld
adc
mov
imul
add
mov
cmp
dec
shr
adc
fwait
xchg
sub
xchg
mov
in
sbb
mov
icebp
dec
push
inc
xchg
cmp
sub
js
xchg
into
mov
mov
adc
pop
mov
icebp
jg
outs
stos
lahf
inc
mul
mov
repnz
int3
push
aaa
sbb
mov
mov
or
push
add
in
mov
outs
not
push
mov
and
sub
cli
add
sbb
pusha
xor
mov
and
inc
cmp
dec
stc
xchg
sub
stos
vmovd
scas
xor
arpl
fabs
(bad)
pop
sbb
jmp
push
ss
(bad)
setbe
enter
addr16
mov
jae
data16
jae
sbb
xchg
aam
jecxz
dec
shl
clc
xchg
or
push
sti
sbb
pop
sti
movs
sub
test
(bad)
adc
data16
jge
cmp
xor
push
jge
test
fs
in
mov
movs
movs
mov
cmp
cs
repnz
jp
loopne
in
pop
movs
xchg
dec
test
pushf
jmp
cmp
jnp
call
sub
mov
and
aas
lahf
outs
jb
mov
outs
cld
(bad)
adc
adc
cmp
jno
inc
and
push
cmps
dec
lock
mov
out
dec
fidiv
fisttp
add
add
push
sub
(bad)
fistp
cmp
cmp
imul
lds
xchg
rep
fdiv
lahf
rcr
int
outs
fadd
adc
mov
jns
pop
mov
jge
arpl
fdiv
mov
push
adc
add
fcomp
lahf
jecxz
fwait
pop
sub
bound
push
iret
rcr
pop
clc
pushf
loop
in
add
(bad)
call
dec
jle
xchg
mov
add
xor
sar
jnp
xor
hlt
xchg
mov
repz
mov
xor
jnp
mov
mov
call
and
leave
xor
arpl
jo
outs
add
test
leave
jp
add
ror
rcr
adc
dec
or
pop
lea
ds
xchg
xor
cmps
es
cmp
ins
(bad)
inc
push
in
mov
scas
jecxz
fist
scas
pushf
lahf
out
(bad)
pop
lds
icebp
inc
pop
test
gs
jmp
lds
jo
pop
scas
xor
int
sbb
ret
inc
mov
mov
out
bound
sub
(bad)
cld
mov
xchg
adc
adc
inc
pop
sub
loop
ds
mov
pusha
cmc
push
daa
and
sub
add
ja
jle
enter
repnz
adc
push
rol
mov
ret
jmp
inc
mov
cmps
push
gs
cli
pop
or
sub
push
mov
jne
adc
inc
pop
pop
ja
mov
cld
sub
cmp
les
popa
cmp
sar
(bad)
adc
loope
ss
mov
sahf
sub
addr16
(bad)
out
mov
mov
and
jle
mov
lahf
xor
push
rcr
and
cmp
rol
lods
(bad)
xchg
js
stos
sti
dec
mov
push
xchg
js
retf
cwde
or
ret
inc
mul
add
stc
inc
jmp
sub
cld
jge
xor
xchg
fcom
rol
inc
imul
pop
fistp
mov
mov
outs
popf
test
and
scas
test
xlat
les
dec
lea
(bad)
xlat
cmp
pop
xor
push
and
ret
div
ret
aad
mov
and
jl
pop
retf
ror
imul
xor
or
repz
xchg
fmulp
or
imul
add
imul
ja
adc
hlt
cmp
cmps
out
in
shr
adc
xchg
ficom
fs
imul
ds
jnp
dec
mov
xchg
test
test
fs
pop
jae
addr16
cmp
mov
xchg
cwde
sahf
or
test
pop
or
sbb
sub
frstor
rcl
mov
lods
fucom
out
or
test
mov
icebp
and
iret
ja
call
pop
not
rol
sub
pop
xchg
movs
add
sbb
(bad)
jmp
push
jae
jl
mov
lods
and
int
in
cmp
(bad)
xor
fadd
movs
(bad)
(bad)
pop
in
mov
sti
das
daa
cld
ret
adc
jmp
lods
cld
pop
aam
or
test
jmp
and
pop
pop
dec
stos
lods
enter
aad
loopne
or
sti
jmp
fidivr
mov
mov
js
mov
jo
fwait
or
adc
pushf
mov
pop
xchg
mov
ja
repz
dec
ja
mov
popf
lds
rol
push
sub
cmp
cld
loope
arpl
xchg
xchg
add
imul
sub
cmc
cmp
sub
mov
add
jnp
xchg
xor
adc
data16
sbb
push
push
add
je
add
out
scas
ss
push
sahf
mov
ds
out
mov
dec
(bad)
inc
xlat
scas
push
int
outs
push
inc
jne
push
jb
sub
lock
jne
or
jne
add
dec
xor
adc
mov
cmp
adc
and
sbb
dec
jae
loop
outs
push
aas
jecxz
pop
inc
lods
es
dec
jecxz
inc
xchg
scas
repnz
pop
jle
pop
mov
push
aaa
fwait
sar
add
inc
mov
jne
ror
dec
adc
mov
jno
lods
push
shr
cs
add
pusha
fistp
fbld
lea
test
(bad)
cld
jecxz
cdq
xchg
lods
mov
fild
sbb
hlt
xchg
jl
test
cwde
mov
repnz
sub
inc
jnp
dec
jnp
sahf
clc
mov
add
pop
add
outs
add
icebp
mov
call
cmp
jmp
(bad)
retf
and
sub
pop
in
push
mov
dec
push
das
dec
or
push
cmp
int
push
or
stos
jmp
in
inc
lock
hlt
stos
das
dec
loope
mov
sub
test
enter
push
jnp
sub
cmp
arpl
sbb
xor
mov
cmp
mov
outs
rcl
cs
jmp
retf
int
or
into
pushf
bound
inc
mov
pop
mov
punpckldq
cmp
(bad)
xor
push
mov
fcmovnb
add
idiv
xchg
inc
(bad)
xlat
push
ficom
push
push
pusha
dec
fld
movs
fcmove
inc
jno
cdq
jle
iret
(bad)
xchg
pop
fild
and
rcl
or
xor
icebp
test
mov
cmp
mov
clc
cld
or
aaa
dec
cmp
pop
loop
lock
xchg
dec
mov
jb
int
sub
inc
ret
mov
jecxz
push
push
add
mov
cmp
sub
adc
repnz
jmp
cmps
sub
xchg
push
dec
mov
stc
ret
shl
loope
cmps
mov
std
aad
ret
pop
sub
and
xchg
mov
int
imul
sbb
push
ins
ss
mov
fbld
(bad)
fdivr
scas
sub
pushf
add
xchg
jnp
fsubr
sub
or
pushf
call
out
es
out
lods
jmp
fcomp
adc
cmp
sbb
jb
xor
mov
mov
stos
cmp
sbb
xor
cmps
mov
and
mov
into
outs
mov
out
fdiv
enter
(bad)
jecxz
and
push
ins
lock
dec
pop
retf
idiv
xor
sbb
ins
push
fcom
xchg
and
pop
push
mov
push
jnp
pop
in
mov
dec
jg
mov
push
cwde
cmps
mov
das
mov
xchg
pop
cmp
in
pop
or
ret
ror
mov
mov
(bad)
cli
sbb
xchg
int
jmp
push
pop
mov
repnz
fcomp
cmps
push
mov
arpl
lds
jae
mov
cmp
xor
shl
inc
fisttp
cmp
mov
mov
icebp
xor
lds
mov
or
leave
in
mov
and
push
in
fwait
mov
and
sahf
add
shl
dec
push
lods
out
imul
or
mov
mov
xor
mov
cs
mov
call
dec
mov
mov
jge
lods
mov
stc
mov
xchg
adc
jp
jl
nop
iret
push
into
jg
div
mov
mov
jmp
pop
add
sbb
pop
jecxz
xchg
inc
mov
xor
push
inc
push
jmp
das
aas
leave
pushf
sbb
jae
(bad)
cmc
enter
adc
push
cld
jmp
stc
shl
add
out
inc
fbld
mov
retf
sub
sbb
jno
inc
sbb
mov
pop
adc
loope
in
cmp
mov
call
repnz
inc
imul
scas
fdivrp
pop
xchg
or
(bad)
(bad)
fst
repz
(bad)
shl
adc
fnstsw
cli
test
sbb
out
(bad)
xor
mov
(bad)
xchg
xchg
in
lds
push
cs
(bad)
xor
sbb
in
jnp
push
mov
hlt
mov
or
ds
push
sbb
int
mov
cld
jnp
cs
fisttp
(bad)
das
sar
jae
fisttp
loop
addr16
adc
out
rol
(bad)
rcr
call
mov
xchg
std
dec
mov
sbb
inc
out
or
outs
push
rcr
clc
sbb
les
(bad)
inc
mov
vcvtps2dq
jnp
or
sbb
js
sub
hlt
jne
cwde
ds
iret
(bad)
call
fimul
cmp
(bad)
xchg
jnp
sub
sahf
loop
loope
inc
dec
xchg
adc
jle
inc
(bad)
mov
sbb
jae
xor
nop
ret
fstp
inc
(bad)
hlt
pop
ins
xor
(bad)
jmp
cmp
dec
dec
xor
inc
sub
adc
jbe
inc
iret
imul
mov
repnz
and
shr
mov
push
lahf
in
retf
cmc
jb
xor
scas
mov
pop
pop
dec
jne
cmc
mov
(bad)
fisub
out
dec
fidiv
push
in
in
cli
mov
mov
in
bt
iret
fidiv
lea
xor
cmp
scas
add
aaa
mov
les
neg
stos
jge
out
rcr
and
xchg
sub
pop
lock
out
lahf
loope
adc
or
mov
loope
cmps
popa
cmp
sbb
mov
call
mov
pop
cs
sti
je
pusha
or
call
adc
neg
mov
xchg
jecxz
push
xor
cmp
or
push
xchg
sar
add
xor
loope
stos
xor
xor
(bad)
adc
adc
mov
add
iret
(bad)
dec
push
dec
mov
std
and
inc
shl
jno
xor
retf
push
fstp
sub
or
push
sbb
adc
pop
test
rol
ss
inc
dec
je
and
sti
jnp
das
push
scas
das
lea
and
adc
scas
push
jb
push
adc
fidivr
mov
push
mov
xor
std
pop
aam
hlt
sbb
pop
mov
add
and
outs
push
data16
dec
cmc
aam
test
scas
pop
rcr
nop
sbb
idiv
push
cmps
cmp
fwait
or
mov
pop
add
iret
push
arpl
add
pop
popa
ret
shl
xor
mov
mov
xchg
neg
repz
add
(bad)
mov
xchg
mov
xor
push
sbb
jmp
push
mov
nop
int3
call
xchg
ja
push
(bad)
daa
cmp
push
mov
(bad)
test
xor
es
or
jne
fsub
call
movs
fs
sbb
sbb
mov
add
iret
inc
test
jmp
test
in
test
xor
fstp
or
movs
cmps
inc
adc
es
adc
int
(bad)
(bad)
out
jns
inc
xchg
sar
mov
sbb
and
imul
or
sub
into
es
inc
mov
mov
push
repz
out
xchg
sub
shr
imul
scas
enter
jb
add
jbe
ficomp
nop
pop
sahf
aas
jno
xchg
popa
inc
fbstp
rcl
fist
adc
inc
inc
retf
ins
cmp
cdq
jl
adc
arpl
mov
aas
popf
mov
mov
jnp
fnstsw
iret
aam
(bad)
aad
pop
mov
in
in
jg
pop
mov
repz
sbb
inc
mov
pop
(bad)
outs
mov
push
ins
(bad)
shl
push
fimul
jne
mov
bound
nop
ja
sbb
outs
sbb
add
ret
push
test
mov
mov
cmps
and
and
in
cmp
xchg
inc
jo
cdq
(bad)
pop
sub
lods
sti
pop
adc
std
(bad)
sbb
pop
pop
dec
jo
cmp
in
sbb
lods
sti
mov
sub
fisubr
shl
adc
daa
es
fbld
xchg
jp
push
movs
pop
ds
retf
je
test
arpl
xor
(bad)
or
fwait
or
mov
or
mov
loop
pop
jbe
and
xor
movs
xchg
mov
lods
jmp
or
sub
icebp
(bad)
jo
pop
mov
xor
outs
test
fldenv
lock
and
adc
add
push
enter
movs
std
ins
scas
aam
mov
inc
movs
adc
pop
xchg
cmps
push
cmp
pop
fisttp
test
test
pop
cli
sbb
test
mov
dec
arpl
mov
mov
xchg
add
stos
js
stc
pop
fwait
test
ret
add
pop
js
sti
sub
adc
sbb
icebp
xlat
adc
mov
xor
aam
push
pop
or
xchg
sahf
mov
test
cmps
xor
scas
jle
fcmovbe
(bad)
add
inc
xchg
jmp
stos
adc
jae
ret
adc
repnz
pop
xor
div
add
icebp
test
movs
pop
xchg
jmp
leave
mov
movs
jle
pop
and
ret
pop
ret
adc
scas
push
sti
jno
shl
fprem
hlt
push
dec
mov
adc
test
and
jmp
fbstp
sub
pop
lea
push
cmp
pop
std
clc
inc
mov
jmp
test
mov
mov
cwde
jle
sub
ror
dec
jecxz
movs
xchg
popf
jecxz
and
adc
jae
movs
and
mov
pop
fdivr
mov
jle
dec
(bad)
daa
jp
loop
jle
fsub
push
movs
adc
mov
test
adc
data16
clc
and
jbe
dec
cs
and
pop
or
enter
movs
call
jecxz
mov
jge
loopne
xor
sbb
add
push
jnp
inc
ds
gs
xchg
inc
mov
cmps
or
xchg
mov
pop
mov
out
in
(bad)
ss
inc
mov
pop
push
sub
fs
dec
and
jg
xor
or
ret
xchg
das
pop
repnz
retf
cmp
adc
or
push
test
and
or
mov
inc
lock
dec
jp
fld
test
add
(bad)
fnsave
and
leave
dec
fs
add
stc
shr
std
aad
nop
jbe
jae
sar
jge
mov
cmp
nop
push
sbb
data16
int
test
cmp
dec
xchg
ins
push
or
inc
outs
bound
mov
jle
rol
(bad)
pushf
ins
loope
xor
or
sbb
out
sbb
inc
xor
adc
stos
adc
cdq
xchg
ins
mov
das
fmulp
push
inc
fst
iret
mov
sub
mov
mov
xrelease
lods
inc
mov
imul
inc
sahf
mov
lods
mov
sub
cmc
mov
adc
in
fwait
cmps
and
ret
jp
cmp
hlt
enter
fcom
jnp
jecxz
add
pop
data16
pop
outs
xor
xor
lahf
mov
cmp
movq
or
xor
fadd
pop
stos
cs
outs
mov
lahf
dec
ret
pushf
fdivr
scas
out
jae
sbb
add
hlt
xchg
push
inc
sub
sbb
mov
ror
lds
or
push
cmps
stos
jg
mov
sbb
cld
sbb
call
jecxz
outs
cmp
or
fisubr
pop
push
jnp
sbb
pop
les
inc
mov
xchg
ins
cmp
bound
aad
ins
stos
xor
int
push
stos
lock
bound
sbb
(bad)
pop
push
popa
mov
xor
es
xchg
jae
ins
shl
in
loope
inc
or
ins
mov
leave
inc
mov
cwde
fs
icebp
cmp
add
iret
int
dec
mov
cmp
mov
pop
aas
adc
xor
push
jmp
mov
cdq
dec
std
push
sub
ud2
adc
lods
int3
jmp
rol
mov
outs
adc
jmp
or
daa
mov
in
mov
aad
in
pop
lds
gs
in
ret
fimul
mov
adc
aam
clc
mov
pop
mov
stc
jb
(bad)
mov
adc
sti
push
gs
mov
(bad)
shl
std
sti
pusha
jge
enter
cmp
lock
cli
pop
les
inc
shr
mov
call
sbb
push
inc
jl
lods
mov
icebp
hlt
psrad
add
hlt
inc
xchg
daa
pop
jge
aaa
add
xor
in
push
push
mov
lock
lea
movhps
test
dec
xchg
pop
stc
not
mov
adc
xor
mov
les
out
adc
xchg
mov
lods
mov
call
pop
xchg
out
fnstsw
call
cmp
push
inc
popa
mov
add
scas
call
mov
push
inc
jmp
(bad)
xor
test
inc
mov
mov
je
ja
aad
outs
mov
xor
imul
jle
clc
dec
sbb
and
inc
and
adc
movsx
sub
mov
(bad)
inc
add
sbb
adc
shl
bound
pop
xchg
dec
xchg
push
and
push
jo
push
jmp
iret
mov
ins
inc
shl
or
jne
pop
inc
adc
mov
daa
(bad)
and
mov
scas
mov
out
cmps
popa
jmp
jnp
cmp
ror
les
js
mov
loope
jg
(bad)
mov
mov
pop
xchg
jecxz
aas
sub
neg
lods
mov
xchg
lock
pop
call
xor
or
fisubr
scas
fmulp
gs
xrelease
xchg
xchg
in
mov
inc
popa
mov
jge
sbb
sbb
mov
shr
add
or
sbb
loopne
mov
and
fsub
loopne
hlt
mov
pop
repnz
dec
dec
fist
adc
(bad)
jle
test
xchg
scas
(bad)
iret
test
aas
scas
dec
mov
dec
repz
mov
xchg
int
jmp
loop
and
add
cmovbe
and
or
jmp
aas
nop
rcl
cmp
sbb
adc
cmp
in
in
shl
sub
mov
add
outs
or
sub
test
test
cmp
test
icebp
lds
cmp
call
or
aas
sbb
mov
(bad)
xchg
jno
mov
sbb
xor
fmul
push
arpl
aam
add
(bad)
jae
out
fcmovbe
pop
sahf
scas
xor
mov
push
sbb
mov
ins
or
xlat
and
lods
inc
mov
jns
fldcw
push
cmc
es
cmp
icebp
push
outs
xchg
mov
and
pushf
push
or
mov
mov
icebp
fbstp
stos
cdq
fs
mov
xlat
mov
push
outs
pavgw
pushf
jne
cs
inc
dec
mov
sbb
mov
clc
inc
movs
xchg
popf
test
fwait
iret
pusha
xchg
lea
dec
cmps
clc
inc
inc
out
or
es
popf
arpl
test
fs
add
push
lds
mov
sub
test
dec
pop
push
ja
jnp
jmp
mov
movs
popa
xor
sub
mov
jp
mov
cdq
push
loopne
gs
test
mov
loop
jo
aad
dec
xchg
js
mov
pop
cmps
sub
cli
lea
push
clc
int
jl
jnp
jns
test
xchg
out
sbb
(bad)
mov
(bad)
mov
xchg
xor
scas
jne
int3
lods
push
ret
inc
jbe
pushf
adc
aad
fmul
push
pop
sub
mov
or
fist
ja
outs
loopne
dec
aaa
neg
pop
movs
and
out
cmc
call
jno
mov
popa
das
pop
fs
push
cld
ret
adc
mov
sbb
idiv
cmp
aas
add
mov
xchg
and
jns
or
jp
mov
out
xor
rol
mov
pop
mov
push
into
shl
stos
sbb
je
in
or
push
sub
cmp
out
jo
fwait
push
push
push
enter
xor
push
enter
adc
cmp
push
movs
in
inc
mov
cmc
in
int
inc
test
adc
js
push
fs
cmc
hlt
jnp
adc
mov
mov
xchg
sahf
sub
scas
xchg
dec
adc
outs
clc
outs
adc
cmps
out
inc
out
jnp
neg
sti
mov
out
rol
(bad)
and
std
pop
retf
ret
es
int
pop
sub
pushf
mov
push
push
mov
push
daa
int
jo
rcl
aas
mov
retf
lds
cli
sar
xor
neg
add
mov
push
push
pop
mov
pop
xor
loop
setne
xor
mov
inc
sub
dec
out
leave
and
jae
cmc
(bad)
cmp
or
popa
mov
lahf
mov
and
js
inc
(bad)
fsincos
enter
or
sub
mov
popa
cmc
add
ins
les
pop
aam
stc
or
inc
enter
test
sbb
cmp
fdiv
cmp
fiadd
inc
ficomp
cwde
out
mov
aad
sub
push
fistp
daa
mov
ins
clc
lahf
jno
lods
mov
(bad)
into
mov
in
enter
movs
lahf
xchg
cdq
dec
fimul
lods
mov
inc
stos
popa
cmps
xchg
rol
add
stos
push
int3
movs
add
sub
add
mov
pusha
add
adc
push
jmp
mov
xchg
cmp
ss
test
sbb
test
sub
cmp
lods
popf
loope
sub
inc
adc
cmp
add
aaa
(bad)
retf
jl
pushf
and
lock
repnz
retf
scas
adc
dec
pop
push
cmps
loopne
xor
pushf
xchg
inc
sar
jnp
lods
dec
inc
dec
rcr
xor
add
fimul
jmp
adc
icebp
bound
imul
imul
add
mov
dec
stos
aam
xchg
das
xor
mov
jl
rol
jb
jg
into
xor
test
dec
sub
mov
rcr
int3
xchg
pop
mov
ins
cmp
sbb
dec
pushf
pop
cmp
bound
mov
xchg
stos
retf
push
imul
jl
imul
or
xchg
push
js
mov
and
out
jnp
jns
cmps
pop
jb
push
cld
shr
dec
in
or
mov
adc
je
inc
js
push
pop
mov
lock
sbb
cmps
scas
mov
cmp
dec
mov
in
sti
push
lods
adc
aam
pop
dec
sar
add
pop
cld
inc
mov
add
fucomp
(bad)
mov
gs
push
xor
add
inc
cmp
sub
and
imul
mov
out
out
xchg
fs
cli
mov
jne
xlat
iret
pusha
push
ror
sbb
or
push
retf
mov
in
adc
mov
(bad)
pop
ret
jmp
cmp
cmp
mov
cmp
test
mov
adc
dec
adc
cli
gs
fstp
add
lea
mov
outs
jg
xchg
loope
mov
std
pop
or
int3
scas
mov
popa
ret
mov
push
push
popa
and
inc
rcl
and
sbb
in
mov
xchg
das
scas
mul
rcl
hlt
frstor
into
xchg
mov
call
sub
jne
or
gs
cmc
scas
movs
lods
outs
out
jp
adc
dec
xchg
or
add
mov
cld
loop
lds
jge
jg
sbb
sbb
sbb
jno
scas
frstor
fwait
mov
mov
(bad)
or
inc
sbb
ror
push
movs
adc
mov
out
jecxz
adc
xor
jl
or
loopne
xchg
js
jg
nop
pop
add
or
push
test
pop
sbb
call
pop
in
cmp
mov
pop
jmp
mov
sbb
iret
or
aaa
or
retf
mov
bnd
ins
mov
jmp
hlt
inc
push
jns
movs
add
cmc
jae
fxch
adc
push
add
dec
aaa
je
mov
mov
dec
jb
scas
jne
jo
add
inc
push
or
sbb
jl
jnp
jne
jae
retf
push
xor
push
call
fadd
add
fwait
sbb
xchg
adc
hlt
retf
ja
ror
dec
or
pop
lahf
jmp
jl
pand
mov
pop
call
rcr
nop
push
ret
cmp
jg
cmp
mov
inc
sahf
les
inc
lods
sbb
or
fdivrp
cdq
or
(bad)
cmp
jno
and
js
pop
mov
loopne
bound
(bad)
adc
je
and
pop
or
push
inc
cmp
inc
(bad)
cmp
fidivr
xchg
jno
js
mov
mov
inc
mov
movs
stc
outs
sub
inc
xchg
fsubr
dec
and
outs
jno
adc
push
icebp
or
mov
push
mov
(bad)
out
mov
imul
xor
les
mov
sbb
(bad)
shr
inc
cmc
push
or
out
pop
ja
xchg
lea
lods
and
sbb
in
ret
xchg
ds
cmp
(bad)
in
and
mov
inc
add
dec
fcomp
(bad)
jbe
mov
test
xchg
xchg
adc
(bad)
fist
rol
add
add
jle
jmp
pop
inc
inc
push
or
push
jbe
out
call
push
test
fidiv
xchg
dec
sti
call
pop
call
ret
out
or
das
add
add
js
adc
cdq
arpl
ficomp
lods
sbb
in
ins
add
stc
arpl
xor
imul
push
mov
dec
mov
cmp
mov
and
push
xor
les
and
dec
iret
mov
test
cmp
repz
mov
popa
into
popf
add
fild
daa
xchg
aaa
mov
jp
or
sti
cli
jle
jno
call
rcl
sbb
scas
pop
inc
xlat
xchg
je
sbb
add
movs
je
mov
es
sub
ror
mov
cld
jno
hlt
push
push
sbb
and
xor
jg
jbe
loopne
daa
or
xchg
mov
or
aam
les
(bad)
(bad)
lock
aas
and
enter
repnz
fdiv
pop
bound
xor
cli
(bad)
xchg
sub
inc
sbb
out
inc
push
aad
or
dec
(bad)
xor
inc
xor
inc
(bad)
loopne
scas
jmp
mov
addr16
dec
pop
adc
pushf
xchg
and
loop
adc
mul
jmp
jb
push
sbb
jg
pop
mov
cwde
pop
pop
xchg
push
mov
pop
lahf
mov
adc
fdiv
jmp
outs
pop
and
and
and
cmps
pop
cli
xchg
mov
imul
imul
xor
or
call
adc
mov
sub
mov
mov
mov
in
jecxz
ins
push
sbb
std
adc
rcr
jecxz
xlat
pop
fisubr
daa
inc
sub
add
rol
(bad)
and
inc
xor
mov
cmps
push
sub
out
sub
scas
mov
add
pushf
cmp
push
pop
pushw
add
push
repnz
xchg
lods
and
mov
push
ss
cmc
test
lods
sbb
dec
shl
out
or
cmp
jne
mov
lahf
sub
mov
dec
sbb
int
(bad)
ins
cmps
cs
and
add
pop
mov
and
mov
mov
cmps
movs
shr
scas
xchg
push
cmps
and
(bad)
jmp
ror
push
adc
fcom
pop
mov
lock
xchg
jecxz
test
in
in
cmp
pop
sub
hlt
mov
inc
dec
inc
popf
mov
or
pop
out
mov
shl
dec
test
(bad)
fidiv
sbb
dec
aad
and
test
push
loop
loop
pop
js
(bad)
cmp
adc
(bad)
fdiv
push
(bad)
push
mov
xchg
adc
out
nop
push
jno
inc
popf
loope
enter
xor
mov
fcomi
adc
hlt
push
mov
loop
jbe
adc
adc
test
fistp
add
pop
fistp
lock
dec
dec
out
js
ins
test
adc
xchg
fst
pop
push
inc
rol
mov
jb
sbb
cs
mov
mov
in
dec
mov
and
jne
push
ror
push
xchg
fsubrp
pop
jb
xchg
loop
add
jmp
push
js
mov
pushf
fs
mov
loop
xchg
dec
push
push
pop
inc
dec
fdivr
(bad)
lods
aam
mov
inc
pop
mov
mov
movs
dec
jmp
jg
(bad)
xchg
dec
mov
cld
pop
and
mov
aas
loope
push
in
popf
jg
(bad)
mov
xchg
shr
mov
imul
cmc
or
loope
ja
cmc
inc
enter
push
xor
ror
add
jp
jnp
pop
mov
div
sub
xlat
cli
xlat
fwait
xor
(bad)
xchg
or
mov
mov
aas
lahf
(bad)
xlat
cmps
jnp
shl
hlt
jno
cmp
or
mov
mov
add
les
adc
xchg
sti
add
scas
mov
push
pop
inc
pop
jp
cmp
cwde
dec
and
sub
push
xor
shl
xchg
movs
cmp
inc
mov
scas
fwait
pusha
mov
ror
dec
lds
jmp
scas
jb
mov
in
xor
add
or
es
pop
loop
push
xor
cmc
jecxz
mov
cmp
movs
leave
pop
push
test
pop
lock
retf
push
jg
pop
stos
js
jno
jb
xor
mov
mov
mov
aam
call
cmps
int3
cmp
cmc
push
jne
mov
inc
mov
je
rcl
aam
cmps
xchg
xor
or
fs
push
retf
loope
sbb
mov
inc
mov
ins
jg
push
pop
cmp
cdq
jl
test
add
lods
daa
jno
sahf
imul
cmp
and
push
xor
jle
mov
nop
movs
adc
xor
fs
push
bound
pop
stos
lds
sub
mov
inc
sub
xor
push
sti
out
loopne
mul
xchg
lods
int3
(bad)
jne
sbb
(bad)
xor
test
add
pop
pop
xor
or
mov
dec
mov
test
push
inc
sahf
cmps
mov
call
jp
neg
adc
lahf
out
scas
rcl
arpl
test
or
(bad)
jge
xchg
(bad)
pop
in
lock
int3
and
gs
xchg
out
std
cmp
aaa
xchg
stos
mov
sbb
pop
jb
xchg
and
aaa
fidivr
dec
or
mov
jo
cmp
pop
fst
pop
xor
in
push
inc
push
mov
sbb
(bad)
loope
or
mov
push
or
and
adc
loope
adc
xchg
pop
aaa
sbb
mov
lds
xlat
ror
or
sub
aaa
inc
adc
enter
imul
xchg
sbb
jmp
dec
cmp
jae
adc
jp
loope
ror
dec
add
push
popf
mov
cmp
lea
fisttp
leave
jg
mov
clc
hlt
mov
mov
xor
jmp
test
aas
jns
imul
pop
adc
outs
repnz
mov
cmp
push
cmps
out
sub
add
stos
sub
ret
lds
not
push
xchg
inc
test
inc
fidivr
je
or
leave
lds
out
jmp
popa
jno
retf
les
push
loopne
inc
xor
pop
pop
cmp
clc
std
test
or
outs
cmp
out
xlat
out
add
scas
je
lea
in
cld
mov
mov
in
inc
cmp
nop
fst
clc
sub
leave
xor
cmp
inc
mov
mov
arpl
loop
cmc
dec
ja
(bad)
(bad)
xlat
mov
xchg
fstp
shl
icebp
out
sar
sub
jae
fidiv
mov
adc
xor
xchg
adc
inc
xor
(bad)
or
add
inc
adc
jg
mov
sbb
and
push
cmp
fsubr
icebp
xchg
(bad)
int
fimul
mov
ss
fld
sub
mov
nop
ret
pop
cmp
adc
jmp
jb
cmp
mov
int3
pushf
call
out
out
test
dec
sbb
push
rol
test
push
gs
pop
imul
das
jnp
mov
jns
xor
ror
xor
push
mov
adc
push
test
dec
xchg
cmp
out
jmp
inc
sahf
es
add
test
mov
pop
adc
(bad)
cmps
in
call
in
test
jo
cmp
out
inc
dec
mov
sub
cdq
fidiv
ficomp
cwde
out
and
cli
dec
jnp
cmp
cld
xor
fxch
dec
mov
test
push
or
xchg
adc
inc
adc
cli
pop
pop
pop
idiv
mov
cmps
dec
xchg
xor
test
xchg
mov
cmps
call
outs
jl
xor
(bad)
and
mov
leave
push
cmp
sar
ret
pop
retf
(bad)
mov
and
retf
mov
leave
in
(bad)
sub
jnp
sub
pop
jae
push
lods
mov
call
mov
jle
inc
or
int
xchg
add
fisub
xchg
and
lock
arpl
cld
iret
mov
faddp
or
push
push
xor
sub
inc
xor
sahf
ins
pop
pushf
dec
add
adc
push
ins
nop
jle
sar
in
dec
stc
icebp
ins
call
jbe
(bad)
jmp
cld
fs
in
(bad)
and
bound
fist
dec
dec
mov
xchg
mov
dec
xchg
cmc
mov
add
push
leave
or
sub
mov
ins
sbb
nop
cmp
cmc
arpl
jmp
adc
xor
lahf
out
jbe
sbb
inc
lahf
aaa
cmc
cli
inc
dec
xor
addr16
in
or
sub
data16
call
loop
test
dec
and
in
cmp
xor
jecxz
cmc
sbb
mov
test
mov
jl
pushf
dec
sbb
int3
inc
jge
(bad)
stos
les
retf
cwde
sub
outs
movs
bound
or
mov
add
das
jmp
mov
(bad)
fist
dec
cmp
arpl
adc
xchg
ja
imul
outs
das
inc
mov
sub
clc
pop
(bad)
jge
cmp
imul
test
and
inc
add
es
xchg
adc
inc
jae
pop
jp
hlt
aad
add
fdivr
jge
mov
sub
mov
sbb
jge
scas
or
mov
leave
test
jne
mov
jecxz
mov
pop
inc
xchg
pop
adc
aas
sysexit
push
xchg
cmps
aam
mov
xadd
cmc
inc
mov
mov
jno
stos
inc
test
aad
iret
push
xchg
dec
movs
xchg
mov
and
and
nop
aam
in
sbb
retf
pop
retf
je
jne
call
inc
and
out
or
inc
push
push
or
ins
iret
lea
cs
leave
ror
or
retf
pop
jmp
or
adc
icebp
pop
loope
cmps
mov
lods
sub
int3
arpl
(bad)
dec
or
(bad)
clc
rcl
stos
call
hlt
test
mov
sahf
(bad)
push
cdq
cmps
aas
call
nop
xor
mov
or
das
xor
xlat
ret
jle
fwait
repz
ret
fstp
add
(bad)
pop
xor
iret
adc
jge
jg
mov
xchg
retf
call
lahf
cdq
mov
ror
jno
sti
mov
ja
cmp
adc
add
adc
pop
pop
sub
mov
jmp
inc
or
sub
aas
mov
(bad)
test
push
sbb
arpl
push
xchg
jbe
fisttp
cwde
xchg
(bad)
sti
call
gs
and
mov
jle
hlt
call
pop
jne
and
add
push
gs
xchg
sub
xchg
pop
fsubp
scas
je
mov
clc
aad
push
sbb
inc
psllw
dec
push
daa
ss
xor
push
repnz
in
fnstsw
stc
popf
in
push
idiv
call
imul
push
push
mov
jp
jno
loopne
sbb
and
mov
pop
iret
retf
std
(bad)
mov
out
jecxz
jmp
and
inc
mov
ret
aas
fwait
push
fnstenv
rcl
shr
xchg
rcl
sbb
xor
int
xchg
arpl
xor
dec
cmp
in
aas
push
mov
iret
sub
lods
call
mov
jb
fnclex
pop
jecxz
fnstsw
sub
enter
jno
jb
cli
test
dec
stos
add
mov
call
sbb
xlat
mov
gs
sti
cmps
retf
outs
jge
xchg
shl
popa
cmps
xchg
(bad)
jge
in
mov
or
sar
(bad)
jmp
aaa
mov
out
mov
pop
cmp
popa
movs
int
mov
cmp
test
enter
pop
out
cmp
cmp
aaa
not
cmps
sub
arpl
add
aam
jnp
add
cld
cld
mov
push
imul
and
inc
sahf
and
jmp
cmp
es
mov
pop
adc
mov
mov
sar
in
xchg
dec
cdq
popf
test
sbb
cmp
jno
in
leave
aam
jnp
jbe
fsub
xlat
fimul
pop
inc
xchg
adc
or
push
cmp
sub
mov
push
pop
xchg
mov
ins
adc
pop
(bad)
sahf
cld
jg
mov
or
xchg
xchg
in
icebp
repnz
(bad)
bnd
call
inc
daa
aam
pop
xchg
mov
inc
rol
call
js
es
jns
ret
push
neg
mov
je
add
lea
push
fistp
sbb
push
pop
pop
test
xchg
mov
test
bound
and
loop
call
mov
and
xor
xor
sbb
mov
mov
jnp
mov
cdq
fucomp
fcmove
or
enter
jbe
jmp
or
ins
fldenv
aaa
mov
loop
(bad)
aad
jg
div
add
add
dec
and
cmp
mov
jle
add
sti
cdq
xchg
repz
dec
xor
fdivrp
ret
repz
xor
call
jae
mov
icebp
(bad)
rcl
aaa
sbb
jp
clc
push
dec
ret
in
out
sar
ins
dec
pushf
mov
shl
and
bound
inc
adc
xchg
pop
out
cmp
int
xchg
mov
rep
xchg
loopne
hlt
shl
ins
into
(bad)
pusha
add
call
mov
fild
xor
dec
push
xchg
inc
sti
sub
adc
test
add
dec
inc
cmp
das
cwde
fcmovu
jb
movs
push
movs
push
mov
pop
test
mov
mov
lahf
out
and
sar
adc
cwde
mov
popa
adc
ins
or
inc
and
in
stos
jbe
lahf
test
inc
or
iret
pusha
aad
cs
sub
cmps
jge
add
jmp
dec
adc
scas
and
mul
pop
jb
popf
jge
icebp
mov
cmp
rcr
mov
leave
daa
dec
sbb
aas
mov
fmul
adc
xchg
ss
mov
add
cmp
loopne
daa
sub
adc
and
pop
iret
jmp
mov
imul
push
pop
outs
bound
(bad)
int
call
rcr
cmp
imul
(bad)
test
or
cmp
jns
adc
in
push
fdivp
sbb
pop
retf
push
mov
push
push
jne
ja
in
das
mov
aaa
stos
xchg
xchg
sbb
add
daa
fbld
cmp
sub
mov
scas
inc
mov
adc
xchg
add
sahf
push
add
xchg
xor
mov
push
inc
mov
fs
cdq
ins
aad
cmp
je
or
shl
scas
jmp
lods
aad
add
ror
fistp
imul
pop
mov
popa
adc
cmp
jo
push
mov
inc
stc
cld
xchg
pop
lds
sbb
icebp
push
and
scas
lea
sub
in
fcmovnbe
lahf
dec
mov
sbb
push
xchg
loopne
fisub
sub
xchg
xor
xor
ins
cdq
imul
push
stos
movs
and
std
leave
stos
sub
mov
not
ins
jno
xchg
lods
nop
popf
aas
or
mov
mov
(bad)
dec
xchg
ror
gs
jmp
mov
loope
lock
fwait
mov
icebp
xor
or
pusha
and
inc
pop
mov
xor
pop
push
sbb
xchg
add
add
(bad)
fnsave
jge
stc
retf
mov
adc
fcom
or
push
call
or
shl
test
push
scas
inc
pusha
adc
add
cmp
add
dec
loope
scas
leave
fstp
gs
jae
mov
mov
adc
outs
sbb
cmp
jmp
or
repnz
pop
mov
shr
sub
xchg
gs
push
stos
pop
mov
rcl
jnp
ret
xor
ins
iret
loope
inc
push
pop
jae
sub
call
cmc
pop
call
out
inc
xchg
shr
push
cli
movs
adc
jl
shr
pop
mov
or
je
mov
mov
inc
lahf
push
cmc
mov
inc
cdq
push
pop
test
data16
pop
xchg
cmps
pop
std
pop
(bad)
add
pop
mov
das
or
pop
hlt
test
adc
xchg
pop
scas
jg
gs
add
out
or
das
mov
pushf
or
aad
adc
cs
pop
shl
cmc
into
hlt
adc
pop
fs
retf
cmc
sbb
frstor
lods
mov
adc
sub
adc
inc
cmps
mov
cld
mov
adc
inc
add
jge
push
mov
test
push
(bad)
pop
out
mov
inc
inc
dec
(bad)
sbb
or
jge
dec
cs
cmp
mov
push
push
lock
scas
adc
xchg
mov
ja
loopne
and
and
adc
movs
std
mov
call
rol
inc
fidivr
adc
jno
inc
fldz
cmp
gs
adc
(bad)
clc
add
inc
jb
pushf
push
fxch
cmp
jle
(bad)
lahf
pop
jo
test
push
xchg
xor
push
loop
mov
hlt
out
aaa
lods
fadd
sub
dec
imul
push
jne
idiv
(bad)
test
mul
iret
or
ret
sbb
daa
dec
cdq
inc
xor
sub
xchg
adc
les
jo
mov
inc
inc
push
xchg
loope
mov
cs
sbb
repz
mov
lahf
outs
push
outs
inc
mov
mov
(bad)
xchg
fwait
mov
or
jle
push
fld
adc
dec
fwait
mov
mov
xor
aad
xchg
push
fsub
pop
cmp
push
ss
pop
xor
mov
cli
push
test
ss
(bad)
or
push
sbb
dec
cmps
push
ins
pop
sub
sub
(bad)
fmul
lods
inc
in
ficom
jmp
enter
rcr
dec
mov
arpl
mov
test
inc
or
repz
out
mov
pushf
jp
jnp
and
push
or
or
popf
mov
ret
movs
or
sbb
out
je
fmul
jge
mov
and
or
mov
jge
jle
cmovae
cdq
xor
adc
cmp
jbe
adc
pop
pop
xchg
jp
sar
dec
xor
mov
lods
pop
rol
dec
mov
jmp
fnsave
inc
lods
pop
(bad)
sub
loope
into
sub
mov
pop
repz
stos
das
pop
in
outs
out
fadd
arpl
and
jmp
xchg
sahf
loop
dec
mov
xor
test
or
mov
xor
cmps
xchg
push
rol
cwde
push
cmp
cli
test
dec
or
sub
in
lods
jle
sub
pop
std
add
loop
mov
sbb
xor
iret
mov
fdiv
bound
(bad)
or
imul
mov
push
mov
cmp
push
pushf
repz
fdivr
mov
mov
sub
pushf
dec
dec
clc
add
inc
or
mov
sbb
leave
pop
mov
inc
lods
scas
sar
adc
xchg
mov
inc
int3
inc
or
ins
outs
adc
or
aam
pop
scas
add
add
ficom
pushf
mov
push
pop
mov
jae
enter
xchg
in
adc
inc
mov
aam
xchg
jno
dec
cmp
jmp
push
movs
xchg
pop
dec
int3
or
cmp
mov
and
jg
sub
stos
and
sbb
fs
sbb
xor
jo
aas
add
repz
mov
mov
ja
ins
jle
push
jnp
pop
sti
je
sub
sub
arpl
push
sub
shl
mov
mov
jo
das
jmp
push
rcl
fbstp
jne
ins
xor
gs
scas
fwait
pop
adc
and
and
pop
mov
xchg
pop
cwde
loope
sbb
inc
into
mov
mov
jmp
(bad)
jmp
sar
jg
(bad)
stc
rcl
lahf
inc
(bad)
push
out
fxch
into
jbe
dec
stos
mov
xchg
cmps
js
jbe
fdiv
arpl
inc
sbb
popa
or
repnz
std
jb
and
cmp
lds
retf
jl
shl
cld
stos
jg
adc
test
jmp
jae
fild
add
jno
jne
jnp
popf
mov
dec
pop
out
xchg
mov
sbb
in
xor
xchg
aad
stos
mov
pop
fld
jle
(bad)
rcr
xchg
cli
cmp
cmp
pop
aas
loop
movs
jbe
xchg
stc
jp
jle
xchg
fisttp
lock
jmp
scas
js
jno
xchg
repz
xor
inc
and
mov
lahf
jo
lahf
fdiv
ror
pop
sahf
scas
pusha
mov
call
jbe
mov
cs
fld
dec
mov
jo
cwde
cmp
loop
inc
jno
movs
popf
or
outs
test
(bad)
or
retf
cmp
cld
hlt
cwde
or
mov
pop
fdiv
adc
pop
es
mov
retf
les
jl
loope
mov
(bad)
not
mov
push
xor
xchg
(bad)
cli
jge
jle
mov
or
(bad)
enter
or
sub
fisub
stc
aaa
push
cmp
ss
(bad)
cwde
cmc
imul
inc
jo
aaa
in
repnz
mov
loope
retf
jno
mov
and
mov
fstp
repz
jb
repz
inc
fnstsw
mov
fisub
test
cs
pop
pop
sub
jg
out
cmp
mov
and
clc
mov
loop
push
dec
jbe
test
(bad)
cmp
aaa
lahf
or
in
pop
jne
movs
movs
aad
and
fist
cmp
mov
cmps
pop
or
ja
push
xor
in
jle
pusha
in
or
mov
xchg
lods
inc
dec
pop
(bad)
xchg
neg
in
mov
imul
sbb
mov
es
ror
jmp
cmp
cmp
adc
rcl
add
xor
lods
popa
push
cmp
cmps
push
or
(bad)
add
cwde
jecxz
popa
popf
imul
push
scas
sbb
rcr
push
dec
lods
cs
xchg
fwait
push
in
xchg
retf
in
xchg
jae
pop
loope
loopne
(bad)
in
sbb
mov
subps
pop
cmc
mov
xchg
xor
mov
cmp
out
or
aad
sub
mov
inc
dec
bnd
xor
sub
les
jne
cmp
mov
mov
sbb
popa
shr
pop
jmp
cmp
mov
fabs
jl
stos
mov
lea
sbb
cwde
and
loopne
es
iret
push
jo
push
push
dec
xchg
pop
mov
or
test
cmp
cmps
in
sbb
repnz
fs
imul
hlt
sbb
(bad)
fwait
sbb
xchg
out
mov
mov
out
adc
mov
mov
out
pusha
scas
outs
mov
and
jb
sub
mov
ss
mov
adc
retf
push
add
push
and
mov
sub
scas
xchg
loop
adc
pop
add
outs
fld
pop
test
test
jae
cmp
sbb
(bad)
(bad)
pop
popf
shl
lds
test
and
mov
shl
and
test
adc
cwde
add
xor
inc
dec
loope
push
mov
rcl
cmp
test
rcl
pop
lds
js
mov
jecxz
dec
inc
leave
sbb
and
sbb
loopne
xor
add
jl
out
(bad)
hlt
push
enter
xchg
pusha
scas
fisub
fmul
call
mov
imul
ds
aad
lods
movs
mov
pop
scas
lahf
daa
cmp
adc
mov
add
clc
sbb
stos
mov
adc
and
and
lods
adc
add
imul
mov
jno
mov
or
or
test
mov
int
ins
sbb
cmp
imul
sbb
scas
push
int3
xor
dec
adc
shr
dec
lock
push
addr16
jecxz
sub
sar
sub
sti
adc
loop
cdq
shr
cli
pop
jne
mov
scas
sbb
clc
movs
clc
hlt
sub
lds
clc
test
inc
aas
pop
and
inc
cmc
repz
leave
sbb
dec
std
mov
or
scas
dec
jbe
lahf
lock
push
cmp
jmp
pop
adc
add
xchg
push
xchg
jg
cli
xchg
fcomp
mov
repz
jne
imul
aad
or
int3
mov
cli
inc
jae
inc
lock
or
jo
ds
sub
cmp
xchg
add
and
adc
cld
out
inc
ja
sbb
xchg
and
out
xor
lods
mov
xor
sbb
gs
hlt
lahf
out
int3
stos
dec
dec
fist
inc
hlt
pop
adc
pop
retf
sbb
test
or
xor
mov
mov
pop
xchg
sbb
repz
mov
add
cdq
ficomp
xor
xor
or
imul
jns
sub
rol
pop
js
(bad)
dec
cmc
repnz
jne
mov
popf
(bad)
scas
add
sbb
add
pop
jge
dec
std
rdpmc
pop
call
dec
(bad)
(bad)
cwde
mov
mov
jecxz
jecxz
or
jg
mov
pop
daa
adc
xchg
imul
mov
mov
and
push
cmp
js
sbb
repnz
fiadd
xchg
(bad)
xor
iret
and
fwait
(bad)
fs
pusha
jb
dec
push
(bad)
arpl
push
retf
movs
movs
cwde
adc
test
sbb
or
hlt
fwait
neg
adc
lahf
xlat
sti
out
retf
lds
(bad)
xlat
push
dec
pop
lock
jl
xor
jmp
sub
(bad)
pop
pop
cmp
and
in
xlat
movs
cmp
inc
ss
lods
(bad)
shl
loope
retf
sub
pop
repnz
or
jmp
in
out
lock
ss
xor
stc
mov
xor
outs
inc
mov
repnz
fdivr
and
pop
sub
inc
push
ret
mov
movs
mov
mov
in
arpl
jnp
rcr
scas
jns
in
outs
and
inc
aas
psllq
push
dec
add
test
and
cmp
mov
sub
seta
mov
pop
repz
imul
loop
fstp
cmps
ja
dec
outs
mov
call
adc
das
neg
setp
dec
adc
sub
and
mov
cld
push
or
pop
add
pop
in
out
(bad)
(bad)
mov
rol
ret
push
or
jno
dec
inc
dec
fldcw
jmp
xor
jecxz
shl
cwde
xchg
jbe
js
cmp
lds
neg
gs
sub
not
jns
cmp
dec
pop
iret
xchg
push
sbb
or
jle
push
test
pop
scas
pop
cmp
xchg
sbb
mov
xchg
cld
xchg
inc
mov
mov
add
mov
dec
xor
sahf
sub
arpl
scas
cmc
mov
dec
mov
push
and
push
(bad)
cmps
or
mov
mov
lahf
mov
fisubr
or
push
add
cmp
aad
lea
sahf
sbb
xor
jo
ins
pop
rcl
push
aaa
test
stos
and
and
popa
fbld
push
jbe
call
imul
xlat
and
push
sub
iret
popf
icebp
daa
clc
mov
push
imul
(bad)
call
jecxz
leave
shr
aas
add
in
gs
out
mov
gs
add
rcr
std
call
scas
inc
lods
mov
fwait
or
ja
fldcw
push
inc
sub
cmp
pop
arpl
bound
sti
mov
and
adc
repz
out
cmp
sti
xchg
xchg
loope
test
cdq
cmps
icebp
mov
cmp
and
loop
ins
psllw
lock
repnz
adc
push
xchg
mov
mov
xchg
cli
mov
stc
push
stos
loope
dec
xor
dec
mov
and
sub
dec
outs
sbb
ins
das
cdq
ds
jl
iret
adc
cmps
leave
add
and
imul
add
xor
xchg
pop
mov
lock
sbb
inc
jle
fst
fnsave
(bad)
repz
cmp
pop
in
pop
inc
in
ret
retf
in
not
ret
push
out
mov
dec
div
mov
cmp
rcl
pop
scas
mov
mov
clc
ins
scas
sbb
mov
aas
in
inc
jecxz
push
call
test
dec
rcr
mov
leave
lods
imul
pop
mov
dec
jo
out
shl
imul
xchg
fcmovnb
cmps
je
js
sti
jne
pop
push
and
cwde
xor
pop
aad
jl
out
leave
mov
jg
xor
and
cmp
mov
scas
mov
jge
push
pop
push
cmp
xor
mov
pop
outs
loopne
mov
sub
push
hlt
sbb
dec
pushf
pop
(bad)
mov
pop
jo
cs
stos
stos
add
int
push
rcr
sub
addr16
int3
adc
daa
stc
mov
sub
out
vandps
push
inc
xchg
and
(bad)
dec
add
stc
lea
xor
inc
clc
xchg
add
push
stc
ror
(bad)
mov
jge
les
(bad)
mov
xlat
add
pop
bound
aad
(bad)
daa
xchg
sbb
fwait
cmp
pop
and
or
sbb
push
outs
push
cmp
icebp
(bad)
mov
jge
rcl
dec
popaw
nop
fld
outs
and
xchg
push
sub
dec
loope
sbb
mov
push
mov
leave
retf
dec
sub
push
and
(bad)
and
mov
jp
fsub
adc
movs
dec
loope
or
jmp
mov
imul
(bad)
adc
sub
fs
call
aam
jne
add
fwait
pushf
lods
adc
xor
fdivr
sti
adc
loopne
stc
adc
mov
mov
mov
mov
cmp
(bad)
inc
cmps
mov
(bad)
mov
mov
(bad)
pushf
adc
mov
mov
sahf
xchg
mov
lock
xchg
fucomi
inc
inc
and
popf
fcmovnb
xchg
movs
and
sti
xchg
lods
pop
push
mov
int3
in
call
sbb
ret
fsub
test
mov
test
dec
jb
addr16
(bad)
sbb
cmp
inc
jge
movs
and
mov
mov
xor
mov
lea
js
add
pushf
push
push
cmp
loope
fld
inc
test
inc
mov
xchg
ja
rol
(bad)
sti
es
scas
jbe
test
inc
ficom
in
ja
movq
jmp
push
popa
jo
cmps
inc
icebp
mov
cdq
inc
iret
push
inc
cli
es
stos
push
inc
(bad)
xor
enter
xchg
in
hlt
(bad)
sub
xchg
add
mov
lea
lods
inc
mov
aad
cmp
jbe
inc
popa
out
or
scas
stos
ja
les
adc
pop
push
loop
lods
shr
out
add
mov
add
mov
sbb
and
mov
sbb
in
mov
loope
cmc
gs
mov
add
jmp
mov
mov
mov
jp
cmp
ins
rcr
test
push
aad
cmc
cmp
mov
lods
cs
outs
dec
scas
ret
sub
dec
pop
sub
cmps
or
aaa
inc
xor
and
aas
dec
sub
xchg
sahf
cld
popf
call
dec
sar
push
add
clc
jmp
and
xchg
and
pusha
fwait
jmp
xor
outs
lahf
std
mov
or
stos
mov
mov
or
test
popa
test
cmp
and
rol
pop
or
push
adc
mov
or
sub
pop
pop
sbb
xor
mov
sub
aam
mov
data16
(bad)
popa
sbb
les
sub
mov
test
and
add
mov
ja
xor
or
or
add
repnz
leave
enter
dec
stc
xor
ins
call
stc
gs
mov
inc
das
idiv
mov
test
jecxz
jae
or
and
jg
cmp
(bad)
ret
je
imul
mov
jnp
pushf
stos
dec
or
add
in
cmps
dec
sub
dec
mov
xchg
pushf
dec
shr
sbb
mov
ins
jmp
leave
loopne
ds
xor
mov
xchg
inc
stc
jbe
(bad)
sahf
mov
pop
dec
pushf
cwde
mov
es
shl
mov
add
iret
jne
loop
(bad)
(bad)
and
dec
cld
sub
xchg
ffree
fst
mov
dec
pop
or
sub
cld
mov
inc
ficom
loop
in
mov
jno
push
mov
aas
stc
pusha
lock
hlt
retf
aad
xlat
or
nop
cmps
into
mov
mov
mov
mov
jo
or
retf
mov
xchg
push
test
int3
rcr
mov
xchg
adc
ror
mov
outs
jnp
lea
(bad)
sbb
jns
sub
mov
xor
adc
adc
cmp
ror
je
sbb
aam
or
xor
xor
pop
ret
enter
pushf
pop
lahf
inc
mov
test
neg
icebp
cmp
mov
add
mov
cwde
movs
test
popf
xor
pushf
mov
(bad)
bound
cmps
jecxz
xchg
xor
adc
test
adc
xor
jnp
dec
stos
jbe
cmps
repz
fbstp
test
daa
xor
mov
cdq
pop
inc
push
fild
push
mov
push
xchg
pop
xchg
cmp
mov
xchg
ja
mov
sub
pop
packuswb
xchg
dec
or
xlat
jb
js
jnp
cwde
inc
pop
cmp
jmp
adc
jno
faddp
inc
cs
aad
aaa
lods
mov
jmp
(bad)
loope
test
js
enter
push
push
mov
lods
popa
cmp
push
xor
xchg
sub
xlat
add
xor
(bad)
sti
call
mov
dec
xor
data16
mov
dec
pop
mov
es
adc
xor
adc
mov
sub
push
ins
xchg
or
loopne
jnp
cld
(bad)
jno
loopne
sbb
pop
sbb
clc
xlat
inc
mov
popa
dec
std
mov
mov
lea
and
jno
(bad)
or
cmp
test
pop
sub
scas
cmp
in
sub
ret
adc
pusha
sub
je
das
(bad)
iret
sbb
and
mov
and
pop
jnp
js
jge
aaa
mov
adc
cli
xor
je
std
pop
sbb
cs
mov
mov
mov
lahf
loopne
inc
sbb
mov
bound
jecxz
xlat
leave
mov
(bad)
mov
jo
add
sbb
or
dec
test
jp
xchg
xchg
adc
dec
hlt
(bad)
and
jecxz
(bad)
in
sbb
xor
movs
push
push
inc
shl
mov
mov
inc
jnp
minps
mov
xor
or
inc
mov
arpl
shl
loop
movs
aad
loopne
pop
push
add
es
outs
(bad)
mov
cmp
mov
stos
xchg
xor
mov
retf
jbe
jae
push
scas
add
push
inc
call
mov
mov
adc
cmps
shl
push
cmp
inc
jmp
and
or
mov
jb
cmps
movsx
xchg
add
rcr
int3
add
fisubr
cmp
inc
leave
cmp
shl
mov
mov
icebp
call
mov
sbb
lea
push
cmp
rol
ret
(bad)
sar
xor
stos
in
xor
push
movs
add
mov
xchg
outs
inc
aas
mov
cdq
mov
inc
leave
mov
inc
jnp
add
nop
sar
cmps
test
push
inc
dec
dec
stc
mov
movs
movs
fmul
jge
shl
mov
outs
mov
popf
das
stc
popa
repz
inc
mov
jg
int3
sbb
sahf
gs
push
outs
test
test
test
push
int
in
cmp
pop
mov
sbb
popf
clc
lea
sub
les
jo
popa
cmp
sar
mov
prefetcht1
mov
fst
fstp
jle
hlt
xlat
shr
mov
into
cmps
jmp
sub
push
pop
mov
inc
ds
les
jl
dec
das
stos
(bad)
xor
call
ror
stos
popa
ret
jge
add
mov
loope
(bad)
jns
scas
lods
sar
xchg
mov
loop
xchg
enter
jnp
enter
push
ret
int
imul
add
movs
daa
adc
dec
mov
in
aaa
cli
cli
outs
jb
cmp
mul
fdivrp
mov
cmp
xor
inc
scas
mov
jns
or
cdq
ficom
jl
xor
jge
sub
lods
(bad)
and
iret
jno
sar
(bad)
sub
into
ret
pop
inc
inc
(bad)
mov
sbb
sub
mov
pop
mov
xor
cmp
shr
popa
lock
lea
imul
mov
mov
sbb
cmp
loope
lahf
daa
lahf
pushf
ds
add
neg
xor
xchg
push
push
jo
jno
xlat
sar
call
daa
bound
sub
xor
mov
ficomp
pop
or
pusha
jae
bound
adc
fs
and
adc
mov
bound
mov
push
popf
repnz
out
sbb
mov
adc
add
mov
das
dec
repnz
mov
rcl
shl
sub
xor
shl
inc
pop
mov
int
ins
jns
lahf
inc
popa
dec
push
mov
adc
push
daa
sbb
mov
lock
retf
ss
and
data16
cdq
iret
jne
and
inc
ficomp
test
pop
jl
clc
inc
into
pop
loopne
js
add
pop
(bad)
xchg
pusha
movs
icebp
into
bound
loopne
dec
push
xor
push
push
pop
call
mov
jne
test
inc
mov
xor
adc
ins
xchg
sub
int
adc
fmul
xchg
mov
cli
out
xchg
pop
jp
cmp
or
popf
xor
mov
daa
mov
inc
cmps
adc
inc
enter
addr16
xchg
bound
mov
fcomp
test
pusha
sbb
in
mov
ins
xor
adc
mov
mov
fstp
cli
loop
repnz
std
jl
jbe
mov
adc
sbb
in
scas
(bad)
cwde
mov
outs
mov
(bad)
icebp
jae
push
outs
push
mov
mov
cmp
xchg
jle
push
icebp
xchg
fsub
outs
addr16
mov
jp
inc
inc
fist
fst
stos
repz
stc
dec
(bad)
sahf
sbb
test
sub
cmp
lods
loop
in
or
pop
pop
jp
inc
adc
cwde
fcmovne
div
dec
imul
scas
pop
push
test
jmp
retf
and
sbb
popa
out
out
lahf
ds
repnz
sub
pushf
icebp
cmp
jne
xchg
pop
aas
mov
pause
adc
adc
xchg
add
sub
lea
call
out
pop
das
std
iret
js
jecxz
int
mov
add
test
and
mov
ja
mov
fs
and
sar
add
mov
not
and
jne
xchg
jno
lods
aaa
xchg
arpl
sbb
push
in
movs
dec
ins
sub
jp
stos
std
add
daa
aas
nop
movs
push
mov
pop
dec
mov
pop
cmc
mov
test
std
jne
and
or
dec
ficomp
stos
inc
mov
inc
rol
fstp
xchg
mov
sbb
lods
repz
cmp
inc
mov
test
std
xchg
sub
mov
cmc
sar
mov
xor
ins
lahf
popf
inc
cmp
mov
nop
inc
call
cmc
(bad)
and
inc
jns
sar
daa
mov
dec
iret
ret
mov
and
sbb
or
hlt
nop
mov
cmp
fld
aas
jne
stos
mov
pusha
push
lock
cmp
imul
out
pop
or
std
jle
adc
pop
dec
cmp
xchg
mov
jge
or
dec
inc
adc
jle
xor
test
mov
sub
mov
movs
dec
xchg
or
add
ds
adc
call
add
jecxz
mov
in
xchg
pop
jae
pusha
cwde
std
and
(bad)
loope
pop
les
iret
pop
es
mov
shr
shl
inc
scas
mov
or
push
fs
dec
cmp
add
mov
pop
stc
in
mov
ds
jmp
jle
fcom
xor
ins
ret
mov
je
in
fst
retf
pusha
jge
and
fisubr
repz
sub
sub
add
xchg
mov
ss
sti
jnp
jo
adc
cmp
ins
dec
or
pop
pusha
mov
jmp
push
cmps
mov
int3
lahf
pop
pop
aaa
jbe
xchg
sub
pop
repz
push
push
mov
out
xchg
sub
xor
loopne
inc
adc
in
add
cmp
cmp
shl
(bad)
test
mov
jo
fist
jno
xor
add
xor
dec
pusha
sub
push
add
xchg
or
lahf
stos
es
addr16
in
jecxz
outs
cwde
xor
cld
push
or
hlt
or
mov
fwait
sbb
repz
mov
fadd
push
mov
mov
fcomp
fisttp
stos
arpl
pop
jne
inc
dec
pusha
sub
popf
fild
inc
dec
loop
and
retf
fld
leave
lods
push
js
xchg
bound
(bad)
sbb
arpl
mov
mov
mov
fwait
mov
mov
dec
sbb
pop
mov
aas
in
enter
(bad)
add
jbe
ja
jbe
adc
std
xchg
jmp
arpl
out
lock
fsub
jecxz
sbb
aas
imul
aad
lea
out
sub
loope
cmp
imul
loopne
rcr
add
cmp
arpl
stos
jns
mov
sahf
mov
repnz
pop
fld
ret
popf
mov
sbb
and
neg
in
adc
js
ror
and
sbb
test
call
int3
cmp
sbb
jp
add
mov
add
cdq
push
lods
mov
das
push
scas
pop
loope
inc
xor
xlat
ja
pop
jecxz
dec
daa
xor
cmp
es
and
pop
lds
pop
stos
sbb
fwait
out
mov
retf
outs
and
out
or
mov
push
add
xor
loop
lds
fcomip
sub
dec
test
or
jnp
fs
rcl
jo
add
ret
push
jns
cld
pop
xor
push
ret
ss
loopne
popf
pop
sub
and
test
and
add
xor
jle
gs
aad
or
add
out
aad
cmp
aam
inc
arpl
jecxz
fstp
jecxz
sub
out
sub
xor
sub
rcr
loope
retf
dec
cmp
push
mov
add
dec
loope
mov
(bad)
fdivr
sti
xor
call
jns
fisubr
adc
pusha
dec
pop
imul
cmp
fld
add
pop
(bad)
mov
xor
inc
les
out
cmc
push
call
sub
repnz
inc
sbb
dec
inc
stc
aam
mov
out
mov
pop
dec
xchg
imul
aad
mov
fnstcw
ret
sti
daa
iret
add
das
jnp
adc
xlat
and
adc
mov
add
les
xlat
cmp
and
inc
mov
and
repz
movs
sub
adc
fisttp
adc
mov
sbb
xor
push
pop
jge
add
jge
in
mov
add
xlat
inc
xor
xchg
pop
fist
inc
dec
fcom
loop
(bad)
shr
out
popf
cmp
mov
add
pop
es
mov
or
out
scas
retf
ror
mov
mov
ficom
xor
mov
fsubr
dec
int
jns
dec
bound
jo
or
mov
(bad)
or
enter
jo
data16
inc
scas
or
xchg
mov
enter
jge
fidivr
push
or
nop
ds
push
jge
xor
dec
ret
aam
mov
ja
fdiv
aad
and
bound
test
mov
push
leave
ret
fwait
xchg
add
test
popf
sub
pop
and
dec
inc
or
sbb
mov
jo
out
test
lea
movs
jl
dec
cmp
jg
add
xor
out
scas
test
ins
inc
pop
pop
push
cmp
sbb
jns
ins
stos
mov
add
xor
xor
jge
iret
add
xchg
pop
dec
jl
push
cmp
pop
mov
jmp
jno
xchg
adc
pop
mov
cmps
fild
cdq
adc
stos
or
(bad)
call
loop
cli
push
mov
adc
imul
scas
adc
pop
push
inc
(bad)
cmps
lds
mov
das
jb
sti
cmp
aaa
std
icebp
pop
lods
iret
push
icebp
cld
nop
or
call
jmp
mov
pop
mov
adc
sahf
aas
dec
call
adc
retf
push
in
repz
scas
std
repnz
push
sahf
dec
and
inc
aam
ss
(bad)
inc
mov
add
inc
in
mov
push
cmp
neg
out
or
jb
loope
jnp
movs
mov
sahf
rcr
xchg
repz
adc
cmp
mov
aad
xor
mov
loopne
sbb
dec
cld
cwde
push
fxch
jbe
mov
and
out
out
xchg
into
push
xor
mov
sub
outs
mov
test
or
and
mov
adc
cmp
lods
test
xor
xchg
out
mov
mov
add
shl
lahf
adc
push
push
mov
js
les
or
adc
cmp
cmp
shr
push
mov
test
out
sbb
xlat
add
mov
out
rcl
call
adc
sub
aam
sbb
shr
cmp
sbb
sub
sbb
sub
xchg
rol
jp
fcmovu
mov
rcl
sub
mov
mov
lds
jge
jnp
pop
push
test
dec
pop
jb
push
hlt
test
pop
mov
shr
inc
cli
sub
and
hlt
pop
outs
pop
or
popa
xor
in
mov
mov
stos
es
jle
cmc
cld
adc
cmps
pop
xor
lock
cmp
std
cmp
sti
and
sti
mov
cmp
xchg
(bad)
jl
into
jecxz
sbb
rcl
add
mov
aad
pop
movs
mov
mov
sbb
push
jb
adc
pop
or
sub
arpl
xor
pop
fstp
xchg
cs
idiv
(bad)
jmp
ret
cmps
clc
std
or
iret
in
jns
sub
cmp
and
iret
mov
(bad)
or
and
dec
(bad)
int3
push
dec
shl
in
add
outs
dec
mov
sbb
idiv
jecxz
data16
mov
sub
retf
xchg
xor
jmp
xlat
push
or
mov
aam
int3
sahf
jns
xchg
push
mov
cld
push
cmp
test
test
mov
bound
in
xchg
jne
ss
push
idiv
add
les
fisttp
mov
jne
add
sub
xor
or
mov
xor
push
test
test
lods
enter
clc
cmp
pop
out
lds
ins
mov
int3
je
adc
fnstsw
xor
ss
inc
icebp
popf
data16
inc
test
ret
std
push
jbe
movs
rcl
sub
mov
jge
and
call
cmps
popa
mov
push
mov
add
cs
cmp
cs
js
xchg
rol
sub
push
rcr
mov
adc
(bad)
jbe
adc
test
aas
and
aas
jb
dec
mov
in
push
aad
push
stos
mov
iret
jbe
adc
(bad)
in
jne
in
movs
sbb
adc
xor
sub
xor
icebp
lock
mov
pop
(bad)
pop
loop
xchg
jbe
pop
and
push
dec
ds
jl
int
or
(bad)
push
ins
(bad)
(bad)
loope
inc
outs
aaa
cmp
lahf
dec
fstp
jmp
xor
dec
enter
lods
push
imul
or
push
leave
jo
add
push
add
leave
pop
loopne
retf
mov
mov
rol
mov
dec
ins
pop
mov
xchg
or
test
mov
push
mov
pop
int
out
aaa
and
popf
sbb
xor
hlt
(bad)
sbb
mov
jge
hlt
mov
loope
cdq
dec
add
mov
inc
or
mov
pop
cmp
addr16
add
(bad)
pop
xor
jecxz
pop
mov
mov
cmpxchg8b
(bad)
int3
shl
push
dec
sbb
ret
jecxz
das
push
sub
shl
push
jmp
mov
mov
dec
pusha
mov
xchg
ds
jns
adc
inc
push
mov
mov
sub
pop
enter
cmp
and
daa
fist
fild
in
sbb
js
mov
add
clc
lahf
stc
add
mov
fwait
mov
dec
mov
shl
and
dec
ds
mov
mov
jno
mov
jne
or
pop
stos
outs
mov
xor
cmp
imul
dec
jmp
sub
xor
rol
push
cwde
mov
push
loopne
les
mov
jmp
lods
mov
fadd
pop
xchg
popa
repz
inc
and
test
out
add
mov
mov
mov
in
sbb
pop
int3
sub
push
push
xor
add
out
outs
pop
xchg
test
mov
ds
add
mov
cmps
retf
shl
in
retf
into
ja
pop
pop
shr
cmp
movs
inc
mov
dec
stc
fstp
sub
push
add
or
jmp
jae
fnstenv
add
push
xchg
mov
xchg
call
(bad)
pop
mov
jo
xchg
pop
dec
xor
xchg
cmps
in
mov
xor
fcom
cmp
(bad)
cs
out
daa
mov
push
pushf
std
push
mov
and
lds
je
xchg
cmp
into
cmp
repz
cmp
neg
or
mov
jnp
push
ins
outs
shl
mov
push
data16
mov
push
dec
(bad)
fs
out
push
jbe
imul
and
pop
dec
(bad)
cmp
mov
pop
jns
aad
fmul
es
pop
and
int
ds
adc
cmps
sbb
imul
cmc
cmp
xchg
retf
mov
mov
test
jb
popa
xchg
mov
bound
mov
jmp
loope
adc
xchg
mov
dec
pop
outs
arpl
leave
rol
xchg
push
mov
sub
fisub
call
fwait
iret
mov
fiadd
pop
push
ror
pusha
fadd
in
arpl
xchg
or
xchg
pop
jmp
cmp
sti
test
fadd
xchg
jbe
sub
or
scas
sub
jo
and
leave
ja
add
xchg
and
dec
xlat
push
call
and
cmp
mov
jns
(bad)
cmc
push
mov
mov
jbe
cmp
loope
inc
push
rol
xor
and
gs
sub
movs
(bad)
ja
hlt
mov
sbb
shr
sub
mov
in
jbe
into
push
imul
fimul
xchg
sbb
out
fadd
retf
int
rcl
in
jmp
cwde
push
jno
in
nop
push
fild
mov
jl
jmp
scas
jecxz
or
inc
dec
sbb
test
icebp
add
cmps
inc
sbb
sub
xchg
data16
xor
out
mov
and
retf
sbb
not
jbe
inc
in
push
jg
cli
cmp
ror
fs
mov
sub
ror
mov
(bad)
sbb
bswap
lds
arpl
cs
sub
mov
scas
adc
inc
push
pushf
fcmovnu
sti
cmp
iret
sahf
dec
cs
fstp
adc
idiv
mov
push
test
jb
cmp
in
sar
call
retf
jp
cmps
push
sbb
push
rcl
not
sub
cmp
les
cmp
push
lahf
test
add
xchg
aad
sub
or
sub
mov
xchg
fimul
adc
(bad)
jae
cdq
cmp
and
pop
xor
ja
test
stc
xor
cmps
jne
daa
xchg
in
das
mov
mov
imul
test
push
dec
imul
outs
in
mov
sbb
add
mov
loope
inc
test
push
ret
stc
jns
in
fadd
fistp
push
dec
outs
mov
xchg
enter
cmp
xor
test
lods
pop
push
ins
jmp
and
test
ds
push
stos
mov
test
dec
cmp
cwde
mov
inc
dec
movs
jmp
jb
hlt
popa
pop
xor
mov
cmp
test
fcom
mov
ins
or
xor
mov
cdq
ret
popa
in
aam
mov
fisub
cmc
dec
mov
mov
jae
pop
cs
aad
ds
aaa
push
push
cmp
mov
inc
(bad)
jp
in
dec
mov
mov
jbe
test
sbb
jle
sar
push
popa
ins
repnz
jle
cmp
xchg
dec
cmp
mov
das
push
popf
inc
hlt
xor
ja
pop
adc
push
mov
aad
xor
jg
jns
xor
push
mov
lea
xchg
add
lea
les
cmp
push
jno
sbb
and
dec
outs
jmp
and
gs
dec
jg
aaa
push
mov
xchg
sub
rol
xchg
mov
mov
sub
js
inc
jo
or
xchg
arpl
cs
mov
xchg
pop
in
and
aas
xor
push
sub
test
ror
pop
mov
call
and
dec
lods
push
xor
push
popf
adc
fild
fisub
arpl
gs
mov
aaa
mov
scas
sub
push
loope
adc
jo
shr
cmp
lds
in
sbb
fs
cdq
out
push
fistp
inc
jl
shr
int
pop
cmp
je
test
mov
addr16
jle
add
mov
sbb
or
retf
je
jmp
repz
sub
out
fld
push
adc
mov
sub
(bad)
pop
les
inc
into
pop
jl
sub
int3
dec
ss
test
test
and
test
lahf
sbb
or
mov
mov
or
pop
ds
sub
add
pop
or
or
out
retf
add
mov
add
mov
jnp
pop
mov
jecxz
jno
iret
in
out
jl
mov
xchg
cmp
push
push
movs
cmp
mov
fwait
jmp
jae
fsub
cmp
ror
fwait
pop
and
mov
or
cmp
scas
and
ficomp
adc
cwde
and
ins
add
push
and
ret
call
mov
xchg
fcom
aas
out
push
and
lds
mov
mov
call
loop
xchg
jp
jns
aad
popf
out
lock
cmc
loop
mov
js
mov
xchg
hlt
or
xchg
push
adc
loope
sbb
sub
mov
pop
jmp
es
jecxz
mov
xor
arpl
adc
sub
iret
ins
(bad)
xlat
stos
pop
pusha
je
mov
mov
div
call
dec
pop
adc
inc
dec
lea
movs
push
sbb
pop
or
adc
cmp
mov
shl
sbb
popa
out
mov
aad
sti
movs
mov
cmp
or
cmp
cmp
icebp
or
push
cwde
push
and
stos
into
add
or
ins
mov
cmp
jne
shl
mov
fwait
iret
inc
mov
pop
dec
fidivr
mov
adc
mov
in
cmp
outs
loopne
fbld
push
arpl
clc
mov
add
retf
jo
sub
xor
out
lahf
sub
and
mov
add
scas
jl
jecxz
xor
enter
ret
hlt
xchg
test
loop
mov
ror
sub
jle
adc
imul
mov
sti
add
pop
add
mov
inc
xchg
call
repnz
shl
int
xchg
pop
jno
jge
push
jmp
dec
or
and
mov
loop
cmp
jle
js
iret
cmp
adc
sub
jmp
cmp
frstor
aam
mov
fsubrp
leave
das
sahf
arpl
ss
jge
fnstsw
sti
or
cmp
mov
test
push
and
inc
mov
jecxz
dec
rol
das
(bad)
cli
ficom
loop
retf
or
dec
outs
cmps
mov
vmread
jo
xchg
xor
push
and
call
mov
push
stos
xlat
push
adc
add
xchg
push
add
(bad)
push
and
ret
test
inc
icebp
in
mov
je
mov
std
and
scas
pop
sbb
inc
and
(bad)
xchg
iret
mov
movnti
xor
adc
push
jle
fcomp
ret
(bad)
fisub
stc
cli
or
mov
mov
mov
fisttp
je
sub
inc
mov
mov
and
movs
jle
mov
movs
stos
jno
test
mov
inc
(bad)
ret
sbb
test
aad
sub
and
(bad)
xchg
rcr
and
lods
xchg
clc
inc
(bad)
std
jl
and
push
aaa
jp
cmp
mov
mov
data16
adc
fs
movs
mov
dec
add
int
pop
mov
and
dec
mov
cmp
ins
scas
repz
stc
loope
sbb
add
fsubr
inc
mov
enter
xchg
cmp
test
in
adc
cmp
xchg
pusha
aam
popa
dec
mov
sub
icebp
aam
in
or
out
mov
retf
fcmovu
enter
pop
cmp
test
call
jg
sub
dec
fbstp
mov
xor
leave
enter
inc
ficom
aad
imul
jmp
in
or
sbb
retf
pop
lods
scas
lock
out
adc
jmp
aam
out
add
ja
pop
idiv
ficom
adc
mov
xor
repz
xchg
mov
cld
pop
jl
pop
mov
add
xor
mov
mov
ror
xor
push
or
cmc
and
shl
in
pop
ins
fimul
outs
mov
cmp
push
jo
aam
mov
nop
bound
mov
mov
xchg
mov
jno
fisub
mov
sbb
adc
jmp
call
je
push
add
push
dec
lea
ins
adc
jne
push
push
jmp
adc
in
or
mov
dec
inc
push
push
inc
test
pop
xor
mov
xlat
pop
cmp
cmps
push
cld
repz
inc
test
mov
cdq
push
sub
fs
(bad)
cli
gs
sub
cmc
call
stc
add
push
pusha
(bad)
ja
and
mov
lods
or
sub
mov
into
lea
addr16
shr
sbb
sbb
mov
rol
xchg
scas
inc
retf
cli
test
lea
push
hlt
outs
xchg
or
mov
push
sub
jne
mov
mov
adc
gs
cld
push
mov
in
jmp
dec
dec
dec
mov
mov
inc
sahf
or
mov
add
test
dec
cld
and
sub
mov
jb
(bad)
cmp
lds
call
arpl
lahf
jno
bound
mov
mov
(bad)
fidiv
ins
jo
jnp
dec
loope
ins
adc
inc
(bad)
fstp
ret
out
xchg
test
cmp
(bad)
lods
cwde
sti
pop
jo
xor
nop
add
xchg
aas
jmp
xchg
test
cmp
sbb
mov
mov
inc
int3
add
sahf
mov
push
dec
xchg
not
mov
or
jbe
cmps
add
mov
out
test
xchg
pushf
out
adc
in
mov
int
popf
test
in
or
mov
cmp
bound
dec
ins
jae
adc
mov
mov
pop
and
loop
adc
cdq
xchg
cdq
popa
das
addr16
loopne
jns
cld
or
jmp
retf
sbb
out
jge
push
movs
mov
mov
aaa
push
test
cli
int3
sbb
jno
test
push
fldcw
sbb
and
test
push
mov
fisub
adc
out
push
mov
es
cmc
or
add
std
int
sub
jge
fiadd
cmp
dec
adc
fwait
mov
sub
push
pusha
jecxz
add
cmp
scas
test
add
enter
jnp
int
aad
or
push
xor
sub
ror
cli
sub
aad
mov
fmul
mov
jns
dec
(bad)
xlat
in
icebp
adc
xchg
test
mov
ins
lds
out
pusha
(bad)
adc
cmp
sub
inc
stc
int3
in
cmp
push
mov
mov
adc
in
and
mov
mov
idiv
sahf
cdq
sub
clc
push
hlt
dec
pop
mov
ror
sbb
pushf
sbb
cmc
into
(bad)
enter
and
dec
loopne
leave
stos
or
cmp
jecxz
and
and
imul
ja
dec
sar
test
xchg
and
cwde
icebp
push
lods
dec
cli
push
mov
or
jmp
xlat
out
packssdw
(bad)
pop
xchg
aad
cmp
or
pop
(bad)
sbb
(bad)
cmp
add
xchg
push
sysret
sahf
sbb
in
xor
push
mov
shr
cvtps2pd
dec
mov
dec
sub
scas
cmp
add
es
push
fidiv
js
mov
adc
ret
outs
mov
sbb
xchg
outs
xlat
mov
pop
pop
sbb
sbb
fsub
xchg
xor
(bad)
shl
mov
jl
mov
inc
xchg
test
xchg
ss
sub
or
pushf
rcr
inc
adc
dec
cs
mov
pop
test
push
fisubr
pop
fsubrp
cmc
mov
jl
sub
cmp
das
int3
cld
stos
mov
rcr
movs
or
outs
cmc
ds
jb
xchg
push
inc
sbb
and
inc
pushf
pop
scas
clc
scas
pop
xchg
mov
mov
inc
loop
or
mov
test
and
push
aad
test
(bad)
and
inc
sub
popa
ins
or
out
int3
jge
rcr
push
xchg
or
push
test
inc
mov
fcmovb
adc
mov
and
pusha
aaa
enter
popf
sti
or
nop
push
aaa
imul
xchg
or
(bad)
out
out
sbb
shr
jmp
ja
xlat
test
aas
xchg
ret
pop
and
cmp
or
aaa
xor
test
cmp
mov
stos
pop
popa
pop
pop
mov
inc
mov
pop
and
mov
pushf
cmps
enter
test
dec
jmp
inc
pusha
pop
loope
pusha
jns
aaa
out
pop
xor
adc
jle
sbb
xchg
jecxz
xor
lods
pop
mov
or
xchg
cmp
jmp
lods
jmp
jp
in
add
xchg
das
int
mov
aas
mov
pop
into
mov
jnp
and
pusha
xor
jp
or
sar
fcomp
dec
jae
adc
mov
lds
add
adc
je
mov
ins
push
ins
stc
push
push
movs
frstor
dec
inc
ins
lods
jo
mov
test
fild
cmp
lahf
push
loop
xor
pusha
push
mov
mov
imul
into
jl
pop
lea
and
call
es
enter
mov
jo
leave
inc
ss
adc
pop
pop
mov
dec
add
pop
inc
cmc
sub
mov
mov
inc
nop
mov
retf
bnd
out
ror
call
push
mov
(bad)
cmc
cmps
aas
cmps
mov
add
inc
and
push
call
xchg
mov
mov
push
cld
repz
and
push
ins
in
daa
cmp
push
xor
pop
mov
loop
push
xchg
loopne
add
inc
xchg
push
rcr
mov
inc
pop
fwait
xor
xor
mul
sbb
dec
dec
aad
and
in
cdq
push
popf
lahf
scas
pop
xchg
xchg
push
add
mov
jmp
ja
jae
dec
sub
mov
xor
mov
outs
test
xchg
xlat
repz
mov
jl
and
push
push
cdq
ror
(bad)
es
pop
(bad)
fld
adc
aas
mov
enter
xlat
xchg
jne
test
mov
add
mov
loopne
mov
adc
cld
push
pop
adc
rcl
rcr
pushf
and
mov
fild
mov
scas
movs
es
cs
inc
jne
jno
jecxz
cwde
mov
out
sub
xchg
and
(bad)
dec
and
mov
mov
iret
sub
push
mov
iret
jle
xchg
xor
add
js
shr
add
stos
(bad)
adc
cdq
sub
mov
fld
mov
xchg
mov
shr
adc
not
sbb
dec
sub
push
imul
cmp
fist
inc
dec
push
outs
jle
sar
retf
pusha
movs
mov
mov
jl
lock
lahf
fwait
jno
hlt
push
mov
inc
jbe
push
loop
push
out
scas
lea
add
add
adc
cmp
xchg
outs
ret
cmc
inc
pop
push
pop
test
scas
xlat
cmps
cld
pop
(bad)
test
popf
jb
mov
mov
test
or
jg
repnz
push
sub
lahf
cwde
jne
or
out
sub
add
sbb
hlt
add
inc
or
mov
inc
loope
jns
pop
popa
cld
sti
mov
stos
stos
sbb
fs
sub
mov
sbb
ret
dec
jmp
push
test
stos
sbb
mov
cwde
cmp
(bad)
icebp
adc
jge
cmps
fsub
fiadd
sbb
mov
mov
xor
neg
in
mov
(bad)
lods
mov
pop
mov
push
scas
jne
jns
scas
xchg
je
call
out
dec
jmp
cmp
shl
hlt
in
test
adc
repz
daa
nop
adc
icebp
hlt
and
cmp
mov
ror
sahf
adc
xchg
sub
out
push
imul
les
sbb
ja
iret
pop
je
jne
retf
outs
out
shl
js
cmps
jmp
les
xor
add
xchg
cmp
cld
sub
fmulp
sbb
xchg
adc
es
mov
lods
xor
push
jne
bswap
dec
jp
push
adc
das
dec
mov
inc
retf
dec
mov
mov
xor
push
push
xor
jmp
aam
push
adc
out
loopne
mov
mov
(bad)
dec
dec
inc
popf
mov
fbld
push
or
cmp
cdq
dec
push
or
stos
push
pop
aam
(bad)
test
xchg
imul
inc
jb
mov
scas
sbb
mov
rcl
test
ins
dec
scas
rcr
xor
sbb
ret
push
sti
movs
xchg
and
in
sbb
adc
xchg
mov
jmp
outs
iret
jnp
cs
in
jns
push
jae
addr16
push
mov
jmp
gs
ss
mov
test
mov
mov
les
sbb
inc
outs
pop
fiadd
cdq
rol
ret
fwait
pop
rol
jne
pop
call
mov
repz
stos
and
inc
ret
shr
lock
inc
jno
cmc
and
add
popa
pushf
in
sti
fld
in
pusha
js
imul
mov
mov
aaa
mov
pop
push
or
mov
popa
xchg
repnz
jbe
das
in
aad
push
xchg
mov
xchg
xchg
stos
add
bound
xlat
test
cmp
daa
pop
inc
dec
sbb
aas
repnz
outs
mov
ror
mov
aad
pop
cli
inc
hlt
add
and
and
or
push
cmp
stc
push
pop
or
xor
adc
add
pushf
and
mov
fstp
sbb
adc
mov
lods
popa
cwde
sbb
cmp
jmp
jns
or
lock
adc
in
mov
pop
loope
mov
loope
mov
ret
into
jnp
add
jmp
retf
mov
pop
hlt
mov
push
and
fimul
mov
mov
pop
aad
dec
xlat
(bad)
jmp
mov
jbe
adc
dec
jns
xchg
loop
jecxz
jp
or
gs
out
push
bound
pop
dec
xchg
mov
or
add
jmp
pop
ret
fucom
adc
xchg
stos
jp
xchg
adc
cld
push
mov
mov
and
adc
push
mov
(bad)
cmps
imul
xor
in
stc
add
push
push
xor
or
push
xor
push
ss
mov
sub
in
arpl
mov
mov
lods
addr16
inc
mov
cld
lods
xor
push
inc
pop
add
aaa
cmc
jmp
xor
repz
js
retf
fst
xchg
cld
pop
gs
sbb
cmps
mov
xor
cmp
mov
add
xchg
adc
imul
mov
into
fdivr
je
mov
push
out
in
icebp
(bad)
stos
out
dec
mov
aam
push
stos
and
fs
sub
les
fiadd
sahf
sar
dec
hlt
cdq
push
sub
push
je
push
nop
pop
push
loope
cmc
into
jbe
pop
mov
jecxz
call
fdivrp
and
scas
das
add
in
inc
data16
clc
jae
sbb
dec
addr16
ins
jl
out
ja
ja
xor
test
hlt
addr16
adc
jg
(bad)
inc
test
(bad)
pusha
in
pop
push
inc
and
(bad)
inc
idiv
jmp
pop
dec
mov
das
cwde
mov
pop
xor
pop
sbb
lahf
pop
jmp
and
fcomp
cmp
push
int3
stos
in
push
clc
test
jb
push
lods
adc
mov
push
nop
mov
add
mov
pusha
xchg
sahf
push
fild
imul
xor
(bad)
imul
inc
ret
mov
mov
into
pop
lock
pop
nop
and
repnz
pop
sub
btc
xchg
in
xor
loop
iret
aas
and
je
inc
adc
xor
dec
popf
xor
or
scas
cmc
imul
in
stos
sbb
imul
movs
xor
call
add
add
les
or
test
mov
cs
add
icebp
cli
ins
sub
pop
(bad)
mov
jle
inc
adc
mov
add
retf
aas
push
loope
pop
loope
mov
push
cmp
fmul
mov
mov
mov
inc
adc
loopne
cli
daa
leave
ja
sub
(bad)
xchg
ficomp
pop
xchg
xor
sub
xor
sti
inc
inc
cli
mov
xchg
pop
xchg
ins
xlat
mov
jg
repz
fstp
outs
add
fs
outs
xchg
pushf
cdq
pop
(bad)
ret
out
jae
and
pop
pop
dec
jmp
push
mov
fidiv
data16
push
sar
pushf
repz
mov
data16
retf
push
mov
cmps
daa
mov
leave
mov
push
imul
mov
mov
jp
cwde
mov
jge
jnp
ds
imul
fwait
pushf
push
lahf
mov
dec
fstp
sti
imul
dec
sub
dec
paddusw
jmp
test
ins
and
(bad)
in
push
pusha
aaa
mov
pop
loop
out
fwait
xchg
or
ror
push
stos
pop
cli
inc
xchg
sub
bound
mov
sub
sbb
cli
sbb
jl
test
or
in
cs
iret
xchg
jnp
add
xchg
dec
cli
mov
test
cli
mov
pop
push
add
jecxz
jno
pop
pop
mov
adc
pop
jnp
retf
inc
ror
cdq
push
jno
bound
cs
and
jecxz
inc
pop
sbb
idiv
sbb
call
pop
pop
fwait
sub
scas
(bad)
jo
inc
nop
jns
ror
leave
leave
in
mov
lods
pop
test
test
mov
js
imul
std
bound
ja
lea
fdivr
or
test
pop
mov
xor
cld
(bad)
stos
mov
xchg
or
sub
clc
xchg
or
lods
lahf
xchg
fsub
in
add
or
bound
gs
dec
pop
push
lods
xor
jmp
push
push
mov
sub
fs
(bad)
fmul
cmp
stc
and
cmp
inc
push
and
gs
pop
xchg
test
fistp
out
scas
addr16
aaa
xor
adc
add
test
xor
mov
stos
xor
imul
mov
sahf
sub
adc
dec
cdq
pop
retf
div
es
fsubp
or
ja
pusha
and
and
jns
jae
mov
jle
retf
mov
dec
push
mov
xchg
dec
cmp
outs
cmp
adc
mov
jo
mov
popa
sbb
add
xchg
jle
js
(bad)
fadd
or
jmp
out
out
xchg
mov
xor
xor
popf
mov
fwait
lods
lods
xchg
pop
iret
xchg
daa
rol
out
test
ss
mov
or
mov
cmp
inc
ret
bound
ins
mov
mov
les
movs
scas
add
dec
into
gs
xchg
int3
(bad)
push
in
push
dec
xchg
sub
adc
sub
das
nop
test
xor
in
ins
lods
int3
repz
jo
sti
call
fcomp
fsub
jge
mov
(bad)
xchg
or
stc
movs
cmps
xchg
mov
adc
inc
or
mov
cwde
cmp
or
mov
ja
cmps
and
jecxz
and
aaa
push
jo
mov
aaa
out
retf
test
xor
(bad)
lods
xchg
(bad)
mov
mov
outs
xor
jne
cli
and
pop
cmp
mov
dec
sub
in
push
test
lds
and
sbb
pushf
imul
rol
fild
sub
jo
inc
fldcw
or
popf
jle
aas
xchg
out
ja
loop
stos
inc
cmp
jbe
sub
pop
mov
shr
adc
test
mov
pop
fdivr
cld
sbb
cmp
cmps
enter
arpl
pop
gs
cmps
push
dec
jnp
mov
enter
addr16
and
push
lahf
add
dec
xchg
xchg
cmp
add
sbb
mov
xor
lods
in
push
add
mov
sub
xchg
push
sbb
mov
sbb
cmps
pop
xchg
mov
lea
cmc
jne
inc
mov
pop
or
adc
test
dec
aaa
mov
mov
cmps
imul
push
xchg
test
sbb
xchg
sub
sti
sub
out
loopne
pop
stos
aas
pop
and
dec
sub
in
add
and
mov
mov
sar
fwait
in
pop
add
push
out
inc
cmp
out
pop
stc
scas
mov
sub
sar
dec
or
int
or
ret
out
cmp
aam
push
and
int3
sub
or
(bad)
nop
aam
jge
jb
test
je
pop
add
arpl
mov
add
lock
cdq
loope
xchg
stos
jb
cmps
mov
imul
and
or
mov
ss
sub
add
sahf
ret
inc
ss
rcl
and
add
gs
(bad)
leave
fstp
dec
mov
ret
repz
sar
cmp
sub
or
out
mov
and
pop
gs
jnp
mov
mov
mov
cvtdq2ps
add
retf
mov
mov
mov
ins
in
(bad)
lock
add
jp
loopne
icebp
scas
jnp
jmp
pop
ds
push
data16
pop
out
push
mov
(bad)
mov
loopne
sbb
cwde
mov
cwde
lds
mov
sbb
sbb
call
iret
and
cmp
outs
rcl
mov
clc
inc
out
stos
inc
dec
mov
je
movs
sbb
xchg
test
sub
sub
or
sbb
xor
push
stos
sahf
jle
dec
xchg
xchg
pushf
inc
mov
pop
scas
push
push
mov
(bad)
movaps
pop
inc
stc
fwait
(bad)
push
rcr
add
rcl
bound
jns
adc
fisub
leave
rcl
fdiv
pop
cld
inc
push
jmp
stos
ss
adc
cmp
dec
pop
hlt
(bad)
retf
lods
fnsave
cwde
mov
icebp
pop
(bad)
xor
stc
push
jmp
xchg
cli
xchg
retf
add
cmp
aad
mov
into
jns
imul
icebp
cmp
(bad)
pop
cmps
dec
jmp
push
pop
clc
jmp
addr16
movs
jo
dec
sti
test
into
mov
cdq
mov
mov
add
add
shl
jmp
js
jbe
sar
and
add
inc
push
test
or
jp
sub
jno
dec
sbb
daa
ja
ja
cli
mov
jecxz
loope
sahf
jmp
jmp
or
mov
mov
(bad)
pop
in
retf
xor
xchg
arpl
push
(bad)
push
imul
or
add
mov
jne
movs
mov
lahf
mov
jmp
mov
fdiv
aam
movs
mov
push
iret
(bad)
sub
call
mov
push
aad
cmp
sbb
kmovw
pop
test
jg
ds
mov
mov
loopne
dec
jbe
mov
mov
pop
dec
cmp
les
out
and
sbb
daa
add
jg
xor
rcl
loopne
push
pop
sti
cmp
dec
inc
cmp
lods
imul
stos
or
popa
sub
enterw
mov
and
data16
loope
loop
jecxz
or
repnz
mov
adc
or
and
push
dec
ffree
lds
sbb
fwait
daa
cmp
ss
outs
pop
cmp
pop
mov
lock
xor
adc
and
xchg
wbinvd
pop
pushf
jl
ins
or
outs
xchg
push
lds
inc
dec
jle
lahf
mov
fld
sahf
add
push
jns
xchg
aam
(bad)
pushf
aad
test
(bad)
aad
(bad)
(bad)
jnp
add
das
jecxz
enter
test
retf
cwde
dec
sub
shr
daa
out
js
push
loop
aad
(bad)
call
sub
into
mov
cld
outs
mov
movs
pushf
mov
inc
mov
pushf
mov
push
loope
jnp
sar
jle
adc
inc
cmp
jbe
bound
pushf
or
mov
dec
fiadd
dec
outs
jns
sbb
and
adc
lea
mov
sti
cmp
and
je
mov
mov
imul
and
mov
into
cmp
add
sbb
sbb
push
inc
aam
movs
pop
sub
bound
dec
sbb
lea
(bad)
mov
inc
out
mov
jo
and
sbb
mov
mov
retf
xor
int3
mov
lock
inc
sub
sbb
push
xchg
and
in
jae
jo
fld
pushf
cld
les
loopne
loope
out
loop
and
add
ds
inc
fcom
sbb
loope
mov
cmps
ds
xchg
mov
xchg
push
xor
loop
rsm
jge
dec
mov
repz
js
mov
movs
cmp
mov
mov
push
sbb
pop
jbe
push
iret
and
cmc
aaa
xchg
mov
cmp
xlat
push
sbb
loopne
neg
adc
ja
cmc
outs
inc
in
int
(bad)
shr
in
and
mov
push
mov
and
retf
adc
mov
mov
repnz
call
mov
js
sbb
ja
nop
sti
popf
fwait
hlt
cmp
ins
shl
fcmovu
dec
je
inc
add
inc
xchg
pop
mov
push
fcmovne
xchg
mov
in
mov
retf
cmp
pop
aad
das
jo
dec
call
mov
lds
jo
loop
repnz
xor
or
pop
mov
xor
jecxz
cwde
fistp
xor
iret
fstp
sbb
hlt
push
sbb
ss
(bad)
xchg
lar
ja
retf
hlt
stos
jbe
mov
jmp
(bad)
out
fs
js
xor
into
add
pop
retf
mov
out
mov
retf
fiadd
aas
cmp
sbb
mov
add
cdq
sub
loopne
sub
addr16
jns
fistp
cwde
mov
add
iret
rcl
xor
sub
sbb
outs
cwde
push
(bad)
stc
in
or
mov
dec
sbb
sbb
dec
es
test
dec
outs
leave
es
cmp
xlat
push
pop
mov
xchg
retf
adc
mov
rcl
movs
pop
mov
jnp
outs
sub
stc
xor
jmp
and
imul
xchg
ficom
jae
retf
push
dec
mov
adc
fisub
mov
push
sub
sbb
pop
mov
fistp
lods
jnp
lods
mov
sbb
nop
jb
jl
fdiv
cmps
cmc
fsubr
dec
sub
hlt
out
stc
sbb
ficomp
(bad)
repnz
mov
xor
sub
pop
lods
fwait
pop
test
push
mov
add
sub
pushf
aas
and
sub
hlt
ss
lods
bound
repz
and
sub
retf
dec
int
ficomp
and
jle
into
pop
inc
sub
push
push
(bad)
jae
stos
sub
inc
ds
loop
mov
sbb
cdq
retf
lods
mov
add
and
adc
push
mov
pop
jo
pop
scas
jb
es
lea
call
inc
pop
xchg
stos
out
jbe
call
loope
repz
lock
and
shr
dec
xchg
out
loopne
or
scas
pop
retf
or
test
cli
jbe
jbe
test
inc
test
cmp
mov
fsub
xor
sbb
xor
je
aaa
jb
(bad)
stos
add
ds
xchg
rol
push
xor
xor
nop
(bad)
fs
(bad)
and
sti
mov
xchg
dec
out
sub
sub
jne
sbb
pop
sub
loope
shl
jb
sar
ss
imul
je
mov
int3
ror
mov
push
nop
inc
(bad)
or
mov
push
mov
adc
mov
out
repnz
cld
shl
push
add
jge
add
imul
mov
popa
pop
xchg
aas
or
sub
mov
popa
jmp
mov
sahf
add
sub
mov
nop
mov
inc
ds
movs
xor
and
mov
push
jecxz
fld
dec
mov
or
xchg
and
cdq
rol
cmp
cdq
cs
ror
pop
cmp
jp
push
loop
jno
jns
cmp
cs
inc
hlt
dec
movs
das
fstp
popf
mov
push
and
jne
cmps
push
shr
or
mov
aam
fmul
fsub
int3
push
dec
dec
cmp
outs
push
add
dec
ds
(bad)
sbb
sbb
jmp
int3
sub
mov
retf
jmp
or
loop
sub
adc
jmp
inc
icebp
mov
hlt
(bad)
ja
(bad)
pop
push
jne
add
mov
sub
ins
pop
loopne
sub
jmp
cmp
ror
stos
cmp
jmp
scas
(bad)
cmc
push
test
mov
adc
lahf
pop
ins
ret
enter
pusha
bswap
mov
repz
dec
or
in
pop
adc
inc
pop
jno
jnp
rcl
movs
xor
pop
mov
add
adc
pop
scas
mov
pop
push
sbb
or
sbb
or
stos
out
imul
test
das
pushf
sbb
popf
lea
jnp
std
fldcw
dec
push
push
sbb
scas
jae
mov
jmp
and
cmp
add
lods
pop
mov
mov
dec
cmp
adc
out
aad
(bad)
and
int3
sbb
xor
add
xor
pushf
das
fucomip
sub
mov
push
lds
cmp
fisubr
cmp
outs
and
push
inc
scas
cmp
std
jecxz
adc
xor
cmps
imul
in
xchg
inc
pop
cmp
cmps
or
push
cmp
xchg
ret
push
and
fwait
push
and
cmp
and
mov
aam
and
xlat
push
in
sub
push
cmp
mov
push
fistp
sahf
out
inc
sub
addr16
pop
mov
es
pusha
or
xchg
mov
ret
fstp
fucomi
mov
xchg
xlat
push
push
cmc
(bad)
add
sub
test
out
mov
jl
push
jg
popa
jg
mov
ins
inc
mov
jmp
call
hlt
cmc
add
imul
fsubr
je
dec
fist
push
addr16
jg
fidiv
into
push
icebp
lods
leave
in
pop
fsubrp
sbb
xor
push
movs
add
cmp
pop
xor
js
icebp
clc
dec
leave
cdq
clc
mov
loope
xor
ja
in
jb
push
pop
ror
sbb
imul
imul
loopne
pop
pop
xchg
mov
jb
and
movs
(bad)
enter
xor
jmp
or
cmp
(bad)
mov
xchg
dec
repnz
inc
fild
dec
int3
mov
in
mov
call
mov
inc
es
xor
sub
xchg
jae
or
cmp
ss
les
int3
cmp
push
shr
xchg
pushf
jg
pop
or
cld
jge
(bad)
sub
add
adc
mov
and
in
xor
shl
dec
add
sub
xchg
mov
or
and
in
dec
mov
jmp
xchg
dec
mov
push
rcr
inc
inc
std
ins
add
xor
push
out
sub
hlt
dec
mov
sub
popf
xor
fisubr
out
xchg
pusha
cmp
stos
push
add
cmp
clc
loop
cmp
sub
push
cwde
pop
jmp
cwde
fcomp
lods
das
movs
mov
push
(bad)
mov
dec
jge
jg
ficomp
bound
shl
daa
es
jge
(bad)
mov
test
lock
mov
popf
push
cs
mov
inc
sub
jbe
pop
adc
gs
fwait
adc
imul
sbb
sub
scas
inc
or
movs
sub
out
jg
adc
sbb
loopne
fcmovnu
fbstp
add
outs
mov
or
mov
test
fld
cmp
int
mov
mov
sbb
lahf
xchg
(bad)
mov
or
or
fs
push
xor
xchg
imul
pop
xor
jne
bound
mov
push
cld
mov
pushf
mov
ins
fsub
scas
clc
fistp
sub
pusha
jno
stos
daa
cmp
or
pop
pop
int3
add
loopne
(bad)
std
xchg
adc
mov
cmps
jb
dec
out
mov
cmps
pop
inc
xchg
fstp
add
fldenv
dec
pop
repz
icebp
adc
jmp
cvttps2pi
inc
mov
xor
sti
jae
cmp
movs
dec
sub
fdivp
std
mov
and
mov
clc
sub
loopne
mov
cmp
cmps
add
outs
lea
xchg
cwde
test
leave
inc
je
xchg
daa
in
inc
pop
test
loope
loop
ins
push
push
mov
retf
loopne
pop
add
(bad)
call
cwde
jle
cs
in
jmp
push
and
adc
or
loopne
jg
scas
jle
fcomp
gs
scas
ds
and
adc
movs
out
loop
push
mov
or
mov
add
ficom
inc
dec
lds
mov
out
xchg
jbe
sahf
push
mov
popa
sub
add
pop
mov
rcl
aam
or
rcr
mov
(bad)
movaps
fidivr
sub
lock
(bad)
dec
rol
push
mov
pop
hlt
dec
xchg
jmp
push
pop
stos
inc
xor
dec
das
mov
add
xchg
sbb
pop
nop
pop
or
xchg
inc
loop
dec
mov
fsubr
pop
cmp
xor
xchg
repz
xchg
inc
xor
rcl
dec
repnz
push
imul
neg
inc
push
in
push
sub
xchg
pop
inc
out
inc
xor
pop
jmp
ja
mov
cwde
aas
or
adc
cmps
daa
int
std
mov
and
adc
mul
push
out
bnd
clc
lock
rcl
es
bound
jmp
add
data16
nop
push
add
dec
loop
fild
mov
aas
pop
fcmovnbe
aaa
fdiv
push
adc
sbb
add
mov
and
cs
pushf
cwde
rcl
mov
aaa
lahf
add
iret
or
(bad)
sar
push
jne
outs
xchg
sahf
xor
inc
test
cs
cmp
cdq
cmc
jg
je
(bad)
xchg
add
pop
push
xchg
(bad)
icebp
pop
sti
xchg
push
aas
jae
cmp
stc
lea
call
cs
xchg
xchg
ret
movs
dec
sub
fist
(bad)
ficomp
dec
add
xchg
test
cmp
pop
push
hlt
sbb
push
cmp
pop
aad
or
pop
jle
sub
add
pop
mov
xor
sub
std
mov
cld
sbb
push
push
cmp
fld
jp
out
mov
shr
bound
xor
out
mov
fadd
cmps
cli
fisubr
out
inc
or
cmps
shl
xor
outs
and
and
retf
inc
test
and
retf
pushf
sbb
add
mov
pop
xor
pop
stos
or
pop
mov
sbb
in
cmp
imul
mov
fisttp
in
push
fnsave
retf
push
xchg
dec
or
scas
into
adc
mov
fidivr
jnp
mov
jecxz
je
jb
sub
jle
in
into
ret
outs
and
mov
sub
cmp
jns
pop
hlt
jbe
add
push
jl
xchg
xor
mov
fprem1
mov
adc
cmp
xchg
ins
jmp
call
stos
xchg
or
jecxz
xor
fimul
push
mov
cmp
inc
mov
dec
shr
adc
sbb
xchg
ret
mov
loope
jecxz
push
movs
xchg
mov
inc
xlat
fsub
in
sub
sbb
in
lahf
scas
inc
retf
mov
loop
push
arpl
pop
out
int3
fs
imul
push
pusha
dec
mov
pop
adc
std
push
pop
ret
dec
es
imul
pop
push
and
std
jmp
and
mov
retf
add
adc
push
sti
aad
inc
inc
sub
ins
sbb
sub
movs
fld
add
js
and
imul
inc
mov
int3
jmp
dec
in
sti
aam
fidiv
cld
imul
int
fidivr
popa
stc
movs
les
push
out
xchg
shl
in
mov
xor
hlt
in
fs
out
mov
xor
xchg
hlt
inc
push
es
mov
ja
sub
leave
fbstp
scas
test
pop
mov
rcr
jg
jo
popa
mov
mov
movs
add
nop
push
and
jbe
xor
pop
pop
sbb
or
fucomi
ret
clc
cli
add
cmps
jae
sti
sbb
xchg
ret
(bad)
shl
mov
xchg
fsub
inc
sbb
fstp
inc
cmps
dec
jecxz
outs
test
dec
fnstsw
sbb
inc
lea
sahf
shr
in
adc
xor
mov
pop
loopne
fs
mov
iret
pusha
mov
xor
and
push
pusha
fnstcw
inc
adc
pop
ds
dec
dec
jb
ins
xchg
sub
xchg
(bad)
mov
dec
bnd
repz
jno
shr
cdq
popa
(bad)
aaa
ss
jne
rcr
call
sbb
call
es
shl
(bad)
cli
or
jmp
mov
xor
call
dec
and
sub
lds
pop
(bad)
popa
push
jne
cwde
cdq
sub
pop
mov
test
pop
push
js
xor
xchg
fidivr
adc
ret
pushf
pushf
jmp
(bad)
jbe
xchg
mov
mov
in
dec
enter
je
push
cdq
or
and
rcr
cmc
pop
ins
(bad)
outs
arpl
dec
xor
pop
mov
mov
loope
leave
jae
sbb
(bad)
lahf
cs
loop
add
cwde
jns
xchg
retf
mov
inc
jmp
(bad)
xor
in
je
cmp
push
lods
bound
cld
xchg
outs
jnp
inc
fs
not
cld
test
cmps
loopne
inc
mov
movups
out
mov
xadd
add
sbb
repnz
fs
push
loopne
adc
push
outs
psrlw
mov
es
fld
add
and
sbb
xchg
jecxz
pop
into
popf
mov
(bad)
scas
out
loopne
int3
mov
imul
xchg
mov
sub
pop
pop
mov
leave
sub
mov
mov
mov
sar
aad
mov
int3
mov
out
loop
mov
pop
fst
jne
jmp
imul
aam
hlt
ins
lock
jp
in
cmp
gs
jno
(bad)
jae
stos
clc
pop
or
mov
imul
int
jae
jns
int3
inc
xor
stc
pusha
outs
call
sbb
(bad)
stos
(bad)
imul
hlt
sbb
sub
in
xor
arpl
imul
adc
lods
push
dec
in
ror
cdq
xchg
dec
push
in
(bad)
out
or
xor
call
out
pop
mov
mov
or
push
div
inc
xor
jb
pop
cs
xchg
outs
push
inc
pop
xor
dec
sub
pop
push
and
div
jno
fistp
icebp
test
ret
jne
inc
mov
inc
jp
dec
push
repz
pop
clc
je
repnz
push
cmps
(bad)
pop
popf
cld
jp
jle
int
dec
mov
ret
xchg
jp
jb
outs
and
mov
in
jae
leave
push
mov
ja
test
rcr
dec
and
xor
fwait
lods
jge
jae
inc
call
rol
mov
xchg
adc
aad
push
call
cdq
mov
nop
repz
into
arpl
push
dec
pop
loopne
stc
and
(bad)
bound
(bad)
cli
inc
fcmovnbe
mov
mov
dec
sbb
inc
cld
ja
mov
std
cmp
add
cmp
(bad)
into
sti
int
int
inc
ins
fist
ins
js
fist
cmp
test
aas
jb
sub
rol
jp
jno
jp
stos
(bad)
jmp
aam
pop
pop
mov
int
loope
push
gs
jb
sahf
enter
clc
inc
xor
mov
es
sahf
imul
test
mov
movs
arpl
retf
jo
push
test
in
pop
pop
test
(bad)
adc
push
ins
mov
dec
fucomi
mov
rcl
jnp
jecxz
jae
mov
xchg
inc
pop
addr16
cmp
jp
idiv
mov
pop
jnp
adc
les
inc
jo
cmp
daa
xchg
test
pushf
cmps
xor
push
and
push
in
fild
push
and
sbb
clc
mov
dec
aad
fsubp
mov
and
ins
movs
int
movs
and
rcl
and
pop
std
pop
rcr
(bad)
xor
lods
int
ja
add
dec
cmc
or
les
mov
jge
jb
pop
sahf
mov
daa
ret
mov
loop
ret
lds
adc
sbb
in
shl
out
enter
icebp
add
test
push
push
cwde
inc
fdivr
and
div
jle
ins
add
neg
adc
call
retf
cwde
inc
xor
sar
aam
neg
dec
dec
jecxz
ret
push
pop
or
cmps
das
add
xor
test
xor
mov
add
int3
jns
outs
dec
jmp
fs
sub
out
into
out
inc
pop
adc
or
std
mov
or
rcr
jp
shl
adc
adc
push
sub
pop
add
aaa
ds
inc
js
sbb
out
or
movs
(bad)
xor
jb
movs
add
adc
mov
test
int
pushf
lock
cmps
and
cmps
popa
mov
in
ja
mov
scas
in
addr16
ds
mov
jnp
lahf
jmp
outs
ja
int
add
adc
sbb
or
imul
out
test
in
shr
lea
mov
test
cmc
daa
jns
in
cmp
loope
add
jp
and
and
loope
adc
push
inc
pop
cmps
and
aad
push
xor
(bad)
dec
add
mov
dec
adc
sbb
(bad)
aam
add
mov
pop
iret
and
push
inc
fbstp
mov
xor
pop
retf
popa
mov
test
cmp
test
sbb
popf
cwde
lock
out
adc
jmp
mov
and
aaa
fdiv
in
test
stc
pop
mov
lds
adc
pop
mov
add
fdivr
std
mov
imul
movsx
xchg
std
add
bound
add
pushf
pop
push
jg
push
jbe
in
arpl
mov
or
jns
in
cmps
dec
push
adc
and
dec
(bad)
aam
outs
(bad)
retf
jnp
mov
inc
int
enter
lods
sub
lahf
lds
mov
fild
and
and
xor
xor
mov
repnz
rcr
jno
push
cwde
and
adc
int3
jp
jge
push
mov
dec
inc
aaa
pop
mov
dec
or
add
jle
or
mov
push
enter
or
xchg
loop
pop
shr
mov
xchg
fs
mov
inc
mov
cdq
push
dec
mov
pop
aad
lods
mov
jnp
cmp
fwait
sub
mov
add
sbb
cmpxchg
pop
fistp
sub
test
and
aas
mov
jge
mov
add
(bad)
mov
sbb
jg
xor
xor
imul
cmps
out
push
jae
mov
rep
mov
fild
jecxz
mov
dec
sbb
xchg
aam
(bad)
or
add
imul
call
add
add
and
push
and
mov
sub
or
outs
pop
in
mov
pop
(bad)
cmovno
and
inc
(bad)
mov
inc
push
push
cmps
jle
adc
lods
lock
aaa
mov
mov
call
adc
jnp
push
mov
ret
jp
jp
movs
sbb
mov
cmp
and
push
sub
fxch
push
leave
mov
das
xor
in
mov
fld
cmps
sbb
or
mov
call
xor
adc
xchg
push
add
mov
and
retf
or
cmp
outs
jne
rcl
pop
and
mov
sbb
repz
mov
dec
mov
movs
push
jmp
and
shl
push
xchg
(bad)
adc
push
jb
mov
mov
jp
(bad)
push
icebp
sbb
in
je
xor
sub
mul
push
(bad)
sub
mov
cld
and
mov
mov
mov
pop
jns
iret
(bad)
jp
add
aam
imul
xchg
pop
call
ss
mov
inc
pushf
and
push
push
push
cmp
sbb
dec
outs
mov
aam
int
lods
mov
push
sub
sahf
dec
retf
mov
ret
or
cmp
or
cmp
pop
fstp
cmp
stc
jmp
mov
in
ins
lods
lock
or
loopne
inc
jge
cmp
shl
inc
push
in
int3
ret
push
clc
hlt
push
xchg
sbb
pop
pusha
stos
loope
ss
sbb
test
and
sbb
div
mov
ficomp
call
out
and
or
inc
les
and
jmp
test
out
mov
pop
fucomip
inc
ss
(bad)
mov
adc
addr16
repz
jbe
movs
push
jae
cmps
cmc
add
(bad)
push
out
mov
adc
pop
and
cmp
fstp
xor
xor
bound
test
pop
dec
(bad)
fistp
(bad)
pop
outs
popa
cwde
not
add
cmps
outs
scas
and
cmps
adc
xchg
jno
push
fwait
adc
dec
test
daa
push
adc
movs
xor
stc
sti
xor
enter
nop
sbb
jne
inc
push
icebp
shr
xchg
je
push
jne
add
jmp
jmp
std
cmp
jmp
mov
xchg
into
jmp
inc
and
and
xchg
jne
and
cmc
mov
fld
xor
push
mov
lods
in
in
jecxz
add
and
and
outs
shl
(bad)
add
hlt
mov
retf
inc
sub
test
pop
ds
xchg
cmps
not
mov
xchg
adc
js
or
mov
test
jno
pop
pusha
push
mov
mov
adc
sub
cmp
sub
mul
sahf
jae
(bad)
fild
fdivr
les
xlat
mov
pop
lods
fadd
sub
mov
outs
iret
mov
pop
lock
int
sbb
cmp
jp
stc
and
sub
(bad)
ja
in
xlat
push
sbb
inc
cmps
int
push
outs
mov
test
xchg
and
mov
xor
mov
inc
leave
cmp
jns
adc
push
stc
repz
xlat
adc
sub
(bad)
aam
lods
nop
and
inc
inc
xor
ret
or
sbb
add
aad
mov
push
mov
mov
call
cmp
aas
jmp
sbb
dec
fdiv
addr16
test
dec
dec
pop
fldcw
out
or
in
nop
repnz
test
loope
out
jo
lds
mov
fsub
inc
aaa
pop
add
sub
arpl
jne
mov
retf
jae
xchg
mov
jg
stos
repnz
iret
mov
inc
retf
(bad)
lahf
mov
mov
sbb
dec
mov
add
xor
test
ins
scas
sbb
push
(bad)
fidivr
pop
sub
mov
in
and
mov
in
imul
ins
aad
xlat
fiadd
rcl
pushf
outs
mov
mov
iret
pop
jge
mov
jmp
inc
rcr
xor
movs
pusha
mov
pop
lods
pushf
xor
outs
mov
mov
mov
call
pop
mov
inc
mov
fld
xor
cmp
add
movs
imul
retf
sbb
mov
out
jmp
lock
rcr
xor
stc
loope
mov
jle
jge
call
shr
inc
or
mov
shl
loop
jmp
or
out
add
in
movs
outs
cdq
rol
shl
sbb
(bad)
fmul
adc
sub
sar
sbb
fidiv
mul
repnz
jo
xchg
sbb
ret
ds
(bad)
and
xchg
sub
jl
out
icebp
mov
mov
gs
and
lahf
jb
gs
rcr
imul
sti
jge
sti
aam
mov
sub
imul
es
dec
aaa
aad
dec
add
jb
or
cmp
dec
aaa
xchg
or
sub
pusha
pop
shr
(bad)
xchg
lods
lods
stos
xor
pop
inc
lea
pop
jns
sub
jecxz
mov
sahf
outs
and
leave
test
out
ret
jne
xor
xor
sti
ror
test
mov
jmp
jbe
cmp
jg
test
sub
int
in
and
and
sub
inc
(bad)
int
shr
loope
xchg
adc
cmp
out
xchg
sbb
cld
outs
mov
push
xchg
dec
or
adc
in
nop
adc
dec
pop
or
jg
xchg
fldenv
xor
cmp
xor
push
retf
hlt
xor
hlt
mov
ja
push
rol
jbe
leave
das
jb
pop
int
nop
inc
scas
call
outs
mov
jo
push
mov
mov
mov
and
arpl
cdq
ret
cmc
dec
jbe
fild
and
repz
add
rcl
mov
mov
ret
daa
mov
jge
inc
leave
mov
or
pushf
mov
scas
fsub
fcmovnu
jl
call
jmp
int3
stos
mov
jne
and
mov
dec
movs
sbb
or
xchg
mov
js
xor
mov
lods
repnz
aad
mov
das
mov
pop
loopne
pop
xor
fmul
icebp
test
shl
or
imul
and
repnz
(bad)
fdivr
test
add
inc
push
cmc
push
and
rol
js
and
dec
jnp
push
mov
and
movs
pop
xchg
es
movs
xchg
lods
dec
(bad)
out
jne
iret
lds
jno
stos
mov
pusha
cld
cmps
add
loopne
jno
fst
test
retf
hlt
jecxz
les
out
mov
aaa
jecxz
loope
paddq
jle
sar
dec
jnp
arpl
popf
pop
dec
fs
dec
mov
jmp
mov
(bad)
enter
xchg
push
mov
and
inc
add
stc
or
retf
out
pop
cmps
retf
aas
in
dec
das
shl
jge
jmp
push
push
out
cmp
cmc
mov
pop
fwait
movs
and
pop
ret
sbb
sar
and
or
pop
cmp
mov
mov
jae
lds
mov
rcl
loopne
adc
or
loopne
or
xchg
adc
lods
push
jle
sub
mov
inc
pop
out
in
(bad)
rcl
arpl
pop
jnp
les
leave
js
aad
mov
popa
(bad)
scas
cdq
int3
push
jecxz
inc
jbe
sub
xchg
inc
lds
jae
and
jmp
jb
out
in
push
add
mov
push
test
inc
lds
clc
mov
sbb
mov
add
dec
out
xchg
sub
loopne
mov
inc
sar
pop
xor
pop
jp
int3
test
loop
int3
xrelease
or
xchg
or
cmp
mov
jne
fdiv
ja
test
ds
dec
mov
add
sbb
xor
jb
and
or
cmp
or
inc
sub
lods
in
rcl
mov
or
cwde
jmp
and
sbb
push
xor
dec
sub
add
xchg
pop
in
sbb
mov
cmp
cli
ret
add
cli
mov
lods
sbb
xchg
xor
xor
clc
pop
fwait
adc
mov
(bad)
mov
pop
push
adc
push
xchg
rol
cwde
and
mov
xchg
jo
in
fsubr
in
mov
test
xor
leave
addr16
and
jnp
gs
cmp
xchg
out
pop
pop
adc
test
lds
fild
pop
loopne
pop
cmp
jae
int3
pusha
push
dec
or
dec
xor
sbb
jl
dec
jmp
sti
into
xchg
and
add
add
fnsave
sub
xchg
(bad)
sub
out
mov
adc
repz
icebp
imul
fbld
inc
inc
inc
inc
push
lods
jmp
mov
cmp
fiadd
jle
das
fadd
test
mov
add
inc
sub
xor
iret
sbb
push
retf
mov
ja
shl
ds
pop
push
cs
lds
pushf
push
xchg
jnp
dec
hlt
pop
push
and
dec
xchg
popa
or
ja
pop
and
dec
and
daa
xlat
(bad)
sub
iret
bound
push
ficomp
mov
rcl
inc
fs
mov
loope
popa
xlat
jae
aad
sbb
push
dec
bound
test
and
xchg
mov
call
nop
stos
(bad)
cli
and
mov
imul
div
mov
movs
fadd
out
call
mov
ins
cli
test
outs
ret
fwait
iret
cmp
xor
inc
rcr
push
call
push
xchg
fs
dec
inc
jmp
pusha
cmp
sbb
mov
fs
sbb
push
sbb
sub
jnp
dec
lods
xchg
inc
jle
cmp
xchg
xchg
adc
push
imul
fxrstor
pop
adc
sahf
sbb
movs
lods
outs
loop
mov
popa
test
dec
outs
push
popf
mov
ret
movs
jne
(bad)
icebp
addr16
int
push
add
push
jge
pushw
adc
xchg
cs
mov
outs
popa
and
pop
(bad)
xchg
cmp
sbb
push
iret
cmp
sbb
mov
sub
mov
sbb
ret
cmc
sbb
xor
jo
add
sub
inc
int3
dec
mov
jle
pop
fwait
xor
shr
addr16
pop
add
scas
and
je
mov
add
xchg
mov
into
mov
fiadd
lea
xor
ret
jnp
mov
dec
mov
shl
sbb
in
mov
fsub
fild
sbb
dec
jcxz
fisubr
jl
fisub
adc
and
push
push
push
cld
rol
inc
jo
xor
shr
leave
cmc
inc
stc
jbe
test
arpl
in
dec
and
push
jmp
pushf
adc
test
(bad)
cmp
push
test
lea
imul
adc
wrmsr
push
aas
in
adc
inc
jecxz
mov
std
adc
xor
cmps
das
or
mov
fst
adc
pop
mov
ja
imul
xchg
jmp
sub
rcl
jnp
push
retf
loopne
mov
scas
mov
and
stos
mov
sub
out
(bad)
mov
dec
jmp
test
std
shl
test
pop
lock
jl
lods
sbb
inc
mov
icebp
aaa
data16
and
mov
mov
mov
inc
sahf
loope
mov
mov
jg
rol
int3
(bad)
adc
jns
dec
push
add
jmp
sub
imul
les
xchg
imul
mov
clc
mov
xchg
(bad)
mov
addr16
sbb
push
movs
pop
xchg
test
sbb
or
fwait
inc
sub
aad
lods
inc
xlat
sub
inc
adc
adc
and
add
add
mov
loop
jl
js
scas
cli
pop
imul
jns
dec
out
mov
repnz
mov
pop
add
cmps
sub
dec
pop
xchg
arpl
adc
sbb
mov
aam
imul
dec
into
pop
sub
enter
lods
into
xchg
xchg
out
in
(bad)
cmp
fcom
xor
ss
popa
(bad)
stc
cmp
call
pushf
and
(bad)
repnz
scas
adc
retf
je
stc
iret
nop
and
push
and
mov
dec
xor
sbb
mov
test
aam
outs
cwde
leave
adc
scas
push
cmp
shr
mov
pop
mov
dec
inc
mov
js
aaa
mov
aam
pop
mov
pop
sub
enter
rol
imul
add
lods
addr16
or
jmp
jecxz
and
call
or
mov
jbe
jo
loope
outs
aas
in
xchg
pop
push
mov
ins
pop
jmp
shl
mov
fcmove
dec
and
cs
(bad)
test
inc
add
rcr
xor
sub
or
int
sbb
or
sahf
xchg
xchg
mov
and
cmp
ja
test
jle
sub
add
(bad)
or
rol
mov
cmp
xchg
mov
xor
enter
mov
xchg
(bad)
push
fisttp
mov
mov
push
in
mov
lods
mov
cmps
push
lods
xchg
inc
push
cmp
pusha
add
xchg
aas
shl
imul
int
mov
jo
cld
mov
and
fwait
jns
stos
jge
mov
movs
pop
and
and
cmp
push
sahf
mov
or
xor
pop
enter
and
test
test
sbb
test
leave
shr
cmp
not
stos
jmp
mov
pop
stos
ja
test
inc
and
jmp
aad
jp
and
jbe
(bad)
cmp
int
movs
xor
adc
sahf
mov
mov
loope
lahf
test
xor
dec
mov
xor
sub
or
ins
and
inc
in
dec
xor
dec
imul
adc
stos
jmp
and
inc
gs
or
jecxz
dec
aas
je
xor
dec
dec
mov
das
push
into
ss
retf
std
jb
test
movs
hlt
pop
mov
mov
jbe
leave
or
pusha
add
xlat
bound
push
adc
add
shr
ret
lds
xchg
das
not
dec
jno
ret
xchg
xor
nop
outs
inc
cmps
aad
sbb
out
xor
sub
les
mov
sub
jnp
in
pop
unpckhps
push
sub
loop
repz
mul
scas
sbb
pop
jg
clc
test
iretw
js
add
call
push
outs
xor
pusha
lock
imul
daa
mov
icebp
inc
ret
test
fwait
das
xor
mov
lods
sbb
add
cmp
test
dec
out
daa
test
(bad)
xchg
aas
sbb
js
cwde
lahf
push
dec
add
and
imul
push
dec
dec
(bad)
lock
cmp
mov
mov
mov
idiv
in
mov
lods
fsubr
fldcw
leave
imul
pop
jecxz
fnstcw
js
ror
movs
mov
movs
bound
cmp
dec
and
adc
cmps
stos
mov
jne
mov
sbb
mov
lods
test
pop
pop
xor
stos
lds
iret
mov
mov
cmp
pop
jno
addr16
cmps
cld
add
adc
ja
xor
fs
xor
add
cld
push
xchg
icebp
imul
inc
mov
es
mov
push
inc
jmp
gs
adc
xchg
mov
sub
pop
movs
dec
jg
test
inc
xor
push
push
push
sub
cld
xchg
jae
mov
cli
sub
mov
stc
ja
dec
outs
or
pop
or
or
(bad)
pop
cmp
or
sbb
mov
ins
lds
dec
or
fwait
leave
mov
pop
add
nop
hlt
xchg
hlt
push
nop
mov
adc
in
daa
adc
in
pusha
shl
(bad)
push
sub
gs
lock
idiv
cdq
add
jae
mov
sbb
cli
pop
pop
outs
ss
js
push
and
cwde
sar
xchg
lods
mov
jns
cmp
mov
cmc
pop
mov
(bad)
sbb
sbb
cmp
popf
ds
push
xchg
or
cld
mov
mov
imul
jne
fdiv
dec
pop
sahf
es
jecxz
test
or
in
(bad)
ds
inc
push
add
push
in
fcmove
push
fdivr
mov
rol
inc
pop
cld
xchg
call
inc
xor
fcmove
(bad)
fistp
dec
mov
ja
jg
shl
mov
and
mov
lock
adc
rdtsc
(bad)
push
shl
mov
neg
fucomip
cli
mov
push
dec
dec
inc
mov
int
push
test
lods
mov
nop
dec
mov
(bad)
jne
inc
inc
inc
dec
jb
fwait
ins
jb
retf
push
jae
cmps
loope
scas
push
jne
aad
push
sti
inc
shl
add
pop
mov
sbb
push
mov
sub
(bad)
test
jl
xor
int3
cmps
jp
pop
rcl
xchg
adc
test
repnz
arpl
push
icebp
cmp
dec
add
pop
mov
fs
and
mov
and
mul
fdiv
rcr
sub
inc
out
mov
inc
jno
test
xchg
dec
(bad)
outs
mov
xchg
dec
aas
sahf
shl
add
dec
ins
aaa
inc
ret
fadd
or
push
jbe
pop
(bad)
js
ja
sub
cmp
mov
xchg
push
in
es
repz
stos
sbb
sub
sub
pop
cmp
jbe
dec
mov
adc
fild
es
and
inc
clc
adc
test
jg
test
dec
jmp
iret
xchg
and
push
add
sar
lahf
lea
pop
je
retf
pop
lahf
js
fisttp
jg
mov
scas
pop
add
sub
xor
out
sub
aas
push
jb
adc
jnp
je
sbb
xchg
push
mov
push
mov
arpl
mov
dec
gs
push
mov
adc
ret
xchg
dec
cmp
inc
adc
jl
jbe
mov
cmp
add
neg
xchg
jp
inc
lahf
add
shl
add
pop
or
shl
stos
int
or
push
inc
mov
or
or
repz
aam
lea
jb
arpl
push
xchg
jb
(bad)
jmp
jle
gs
push
je
mov
push
sti
fs
iret
sub
out
jb
and
xor
(bad)
push
cmps
imul
movs
or
sbb
sub
sahf
dec
xor
cdq
xchg
mov
(bad)
es
mov
aad
ret
cmp
cmp
ins
mov
and
repz
ja
lea
sub
sub
loop
js
arpl
cmp
shl
sbb
xor
jb
fbstp
ret
or
scas
(bad)
ret
sti
xor
and
test
les
jle
scas
bound
jecxz
lds
inc
ins
int
pop
test
dec
jg
mov
inc
jns
fyl2xp1
push
push
and
or
jbe
jo
jnp
shl
push
mov
pusha
cdq
jno
mov
adc
mov
cmp
xor
cmc
shl
int
jae
inc
fwait
push
fs
(bad)
fild
fldenv
outs
sub
test
push
jmp
aaa
adc
jecxz
jmp
call
mov
cmps
push
enter
ins
jo
sbb
mov
mov
data16
sahf
cmp
lahf
(bad)
mov
xchg
(bad)
int3
push
cmps
sub
inc
xchg
add
add
mov
cs
enter
xchg
xchg
pop
cmp
xchg
sbb
sti
mov
mov
pop
frstor
shl
stos
mov
dec
out
mov
mov
push
jmp
mov
stc
sub
and
aaa
mov
fisttp
sub
ins
mov
ins
pop
popa
in
push
xlat
pop
cmc
sub
cmp
mov
or
add
bound
adc
movs
int
or
sub
stos
lahf
or
push
inc
or
push
rcr
or
retf
mov
leave
scas
sub
aas
dec
pop
lds
add
mov
outs
imul
enter
or
cld
pop
ja
or
dec
movs
in
gs
inc
int3
jns
adc
sub
lods
inc
adc
bound
sti
push
mov
pop
imul
div
fist
(bad)
sub
repnz
retf
add
mov
out
add
mov
dec
call
out
pop
mov
mul
mov
movs
bound
les
mov
xor
dec
into
fs
les
mov
test
movs
pop
sti
adc
in
pop
sbb
xchg
xchg
mov
imul
push
add
out
ret
push
push
pusha
lahf
movs
fsubr
sahf
cwde
arpl
xlat
jge
pop
(bad)
inc
jb
scas
mov
call
jg
fld
or
jno
lods
or
loope
sbb
rcr
mov
scas
jae
jns
mov
sahf
cmp
push
retf
out
and
sub
addr16
jle
aam
inc
addr16
aad
push
push
and
inc
scas
inc
push
outs
xor
aad
xor
xchg
lods
or
jae
dec
loop
in
jne
js
pusha
fs
je
push
dec
retf
stc
and
sbb
sbb
push
js
leave
(bad)
cmp
dec
jns
inc
stos
dec
ret
test
ss
data16
int3
das
outs
scas
inc
out
xor
jge
adc
in
adc
aad
dec
inc
scas
pop
leave
loope
sar
icebp
jge
enter
push
scas
aaa
repz
cwde
inc
out
jp
cdq
jg
int3
fcmovbe
stc
mov
or
dec
retf
cmp
ficomp
cmps
add
es
sub
inc
in
stc
imul
test
test
dec
jne
sub
aas
call
pop
dec
sbb
sar
pop
out
fdiv
test
(bad)
stos
loop
enter
jg
jp
mov
xor
sti
int
iret
mov
xor
cmps
cmp
cmp
jmp
mov
(bad)
repnz
cwde
sub
stos
mov
in
sbb
call
ret
and
add
adc
xor
mov
pop
dec
aaa
mov
dec
jge
push
push
push
lds
mov
xor
lds
add
test
ja
nop
retf
push
(bad)
arpl
leave
push
std
add
inc
in
mov
shr
jo
add
leave
fisubr
popf
inc
dec
out
xchg
add
adc
xchg
jg
and
aas
aas
popf
enter
imul
sbb
push
test
imul
or
push
jbe
pop
mov
inc
jmp
xchg
mov
ins
xchg
retf
test
fild
jno
pop
sbb
inc
and
cmps
shl
mov
sub
adc
mov
rcl
loope
mov
outs
mov
test
sub
cld
jecxz
push
xlat
retf
adc
in
pop
ss
and
mov
ja
movs
xor
xchg
arpl
(bad)
add
sbb
sbb
or
sbb
rcl
cmc
mov
out
push
jp
mov
in
sti
add
inc
out
mov
mov
mov
js
push
je
mov
dec
fisub
cdq
jge
mov
pop
or
sbb
jp
stos
dec
cmp
mov
push
mov
int
fcomp
xor
mov
scas
inc
outs
(bad)
jle
arpl
int
scas
scas
push
dec
and
or
clc
repz
pop
aad
cmp
enter
(bad)
out
adc
fisubr
xor
jge
repz
jl
pop
or
xlat
add
inc
mov
mov
sbb
je
mov
es
fcmovnu
or
fnstenv
mov
jo
sahf
jmp
pop
mov
mov
xor
add
push
rcr
test
adc
sbb
adc
mov
mov
sahf
adc
enter
xor
ret
adc
xor
inc
loopne
out
movs
inc
fs
cld
fisub
mov
adc
sub
sbb
jmp
sbb
xor
int
cmp
addr16
cmp
enter
popa
inc
ins
sar
xchg
rol
sbb
xchg
test
push
cwde
xor
and
neg
loop
ins
int
movs
lock
xor
iret
dec
shl
rcl
pop
pop
add
jge
cs
mov
mov
ret
pop
es
jecxz
fist
jo
xor
dec
dec
pop
and
lds
xchg
icebp
ja
pop
and
rcr
add
ins
addr16
loop
loope
xor
mov
aas
test
lahf
xor
sub
sub
mov
add
cdq
movs
jnp
test
out
jl
mov
jnp
xlat
jbe
inc
or
add
lods
mov
fs
arpl
adc
(bad)
stos
push
(bad)
adc
mov
jae
dec
sti
dec
int
cmp
cld
xchg
dec
sar
inc
lods
jae
stos
(bad)
mov
sub
mov
cmp
sahf
call
add
test
pop
dec
(bad)
mov
nop
jecxz
inc
outs
adc
push
std
fisttp
mov
leave
je
call
xlat
sub
xor
(bad)
jmp
mov
sbb
cmp
xor
add
push
ins
aad
inc
pusha
xor
mov
inc
sbb
syscall
xor
ss
or
sub
cdq
inc
ss
(bad)
in
pop
call
dec
and
test
sbb
idiv
ror
jp
lock
and
mov
mov
sbb
mov
test
sub
dec
mov
js
xchg
add
push
fimul
cli
cmp
test
adc
enter
push
in
scas
shl
mov
pop
les
cmp
jno
mov
dec
daa
into
sbb
sbb
cmp
cmp
scas
cmp
mov
xchg
retf
mov
xor
dec
pushf
test
fwait
vextractps
rcl
fdivr
jne
stos
test
inc
movs
stc
mov
add
pop
mov
daa
jbe
pusha
fld
imul
push
cmp
add
cs
jge
mov
cmp
out
ret
scas
fidiv
cmc
retf
add
mov
cli
mov
xchg
mov
lock
xchg
push
jl
xchg
cld
or
push
push
ins
mov
dec
aas
push
mov
les
aad
xor
xchg
cmps
(bad)
sub
addr16
sahf
push
push
xchg
ret
shr
jl
mov
ds
jno
dec
inc
imul
cli
fbld
mov
sub
pusha
in
push
(bad)
loopne
sub
mov
push
bound
mov
retf
mov
repnz
add
ins
not
movs
in
jae
jecxz
pop
test
mov
or
inc
inc
xor
mov
cmp
fidivr
mov
movs
sahf
aas
mov
jnp
out
or
xchg
push
mov
rol
ins
push
jo
cmps
mov
imul
fisttp
inc
movs
jne
or
mov
jmp
cld
sbb
push
mov
xchg
out
lock
cmp
rol
shl
and
mov
js
cmp
xor
dec
scas
jge
lea
push
rcl
inc
adc
outs
ror
push
stos
fnsave
sbb
je
pop
lods
cwde
mov
lods
stc
cwde
iret
icebp
or
mov
mov
jle
loope
lods
aad
or
xor
stos
(bad)
xor
pop
jge
push
dec
call
je
push
inc
mov
mov
retf
(bad)
retf
lea
stos
push
(bad)
and
sbb
or
pop
push
clc
adc
and
fs
icebp
mov
mov
fistp
(bad)
lods
push
call
push
das
xor
mov
jecxz
push
fs
xor
cmc
xor
cmps
loop
iret
adc
les
stc
push
or
pop
add
ja
movs
jbe
fst
out
test
sbb
mov
xor
aam
out
in
lds
mov
dec
sbb
cmp
movs
icebp
pop
arpl
and
jb
jmp
pop
pop
movlps
gs
jge
test
aam
and
sbb
sub
adc
jo
push
loop
es
pop
inc
dec
in
inc
push
ds
in
icebp
mov
cmps
xor
nop
mov
mov
pop
and
cs
pop
pop
inc
inc
push
out
pushf
cmc
fs
ds
lods
dec
cmps
jmp
mov
hlt
out
addr16
das
bound
cmp
cli
lea
dec
inc
outs
pop
ss
les
mov
imul
sub
inc
das
data16
cdq
push
or
push
dec
call
movs
and
mov
lock
xlat
xchg
push
mov
out
add
clc
cmp
xor
shr
retf
ja
sub
iret
add
add
mov
mov
repnz
mov
inc
test
or
sahf
fcmovnu
pop
or
jg
data16
push
cmp
or
dec
or
test
lods
xchg
icebp
daa
sub
jmp
test
mov
and
jle
mov
loope
inc
fwait
aad
out
test
and
mov
movs
jecxz
shl
mov
cmp
mov
sub
jg
mov
pop
repz
sar
jne
fisub
sub
dec
pop
inc
push
jge
aaa
jno
data16
pop
in
adc
shl
out
dec
xchg
pop
in
in
cwde
pop
fcomp
add
push
sub
push
cdq
out
bound
xchg
in
push
movs
dec
cmc
inc
jmp
jle
fmul
ss
aaa
xchg
add
lods
sti
or
jne
dec
jg
push
mov
cmp
mov
out
lods
arpl
mov
push
pop
sti
push
popa
(bad)
dec
push
xchg
lea
adc
retf
pop
stos
(bad)
aam
movs
in
add
adc
mov
and
into
data16
inc
cli
ret
push
scas
mov
mov
pop
psllq
cwde
or
cmps
push
in
add
cs
fnstcw
jp
fs
pop
dec
clc
loopne
mov
nop
dec
push
mov
adc
xchg
leave
test
fild
mov
test
push
adc
dec
scas
pop
or
imul
rcr
aas
mov
rcr
pop
js
dec
not
popa
adc
lods
mov
push
fbld
jl
mov
ins
mov
or
lds
add
fiadd
repnz
adc
pop
je
ror
test
loop
out
push
(bad)
rcl
out
loop
fbstp
inc
dec
inc
dec
push
mov
cld
add
mov
ins
sbb
jmp
retf
push
inc
std
sbb
jmp
push
lea
ret
dec
bsf
jnp
inc
fild
cmc
movs
loop
rcr
add
mov
test
xchg
inc
(bad)
je
in
jne
fnstenv
push
pop
fdivr
inc
sub
jno
addr16
into
stc
jl
xchg
pop
mov
inc
xor
cmp
aam
fisub
stos
cmp
mov
jle
xor
sbb
adc
aad
cdq
sub
sub
inc
icebp
into
sbb
xor
push
sbb
rol
mov
jnp
cmps
inc
xor
sub
pop
inc
adc
adc
or
cmp
shl
movs
sub
xlat
test
movs
movs
mov
fsub
jbe
mov
mov
push
rol
or
bound
ins
xor
cmps
push
iret
jns
or
adc
test
sub
xchg
xor
jns
ins
inc
(bad)
out
shl
pop
ret
push
in
mov
fiadd
cwde
retf
sbb
cld
xor
in
lahf
in
out
ss
retf
mov
push
popa
cli
fwait
sbb
pop
mov
ret
push
jl
in
sbb
jb
lock
int
out
repnz
in
dec
idiv
daa
hlt
xor
call
push
mov
hlt
enter
adc
outs
(bad)
xlat
aad
dec
mov
xchg
(bad)
jmp
add
mov
add
adc
mov
stos
lods
stc
sub
pop
sub
ror
jle
jp
mov
push
or
push
jno
adc
rep
xchg
dec
mov
pushf
fimul
fcomp
add
into
adc
dec
sbb
sbb
jo
scas
xlat
iret
test
in
jno
mov
jns
leave
cmp
mov
jecxz
dec
fsub
fsub
push
pop
repnz
inc
das
fmul
xchg
jo
(bad)
xchg
retf
nop
lock
(bad)
and
dec
inc
bound
popa
ins
push
pop
sbb
clc
popf
in
ja
push
push
test
shl
imul
(bad)
out
push
leave
push
inc
daa
ret
imul
dec
into
cmc
call
push
lahf
add
or
outs
test
push
inc
in
(bad)
iret
xchg
xchg
ret
mov
push
and
and
xchg
in
mov
or
(bad)
dec
fimul
xor
stos
or
test
mul
and
fdivp
add
sub
test
xchg
jle
push
test
xchg
inc
pop
sub
jae
dec
ror
shr
sub
out
aam
jns
mov
xor
mov
fdiv
ss
pushaw
mov
pop
or
in
aad
mov
cld
xor
jnp
lods
jne
mov
sbb
cwde
push
xchg
in
repnz
fst
dec
(bad)
seta
cmp
dec
adc
fisttp
inc
(bad)
inc
enter
in
jns
xchg
jo
push
inc
push
dec
imul
sbb
jne
(bad)
cmp
cmps
jmp
mov
mov
aaa
dec
jne
fld
arpl
inc
push
jo
imul
retf
push
jne
arpl
push
pop
push
add
push
add
retf
mov
test
pop
rol
cli
aaa
lahf
les
out
cs
sub
jno
ret
call
xchg
rol
sbb
add
fstp
sbb
mov
mov
add
xor
rcl
aam
inc
sbb
popf
push
imul
repnz
cmc
stos
push
cmp
sub
cmp
cli
sub
mov
aad
imul
cmp
adc
mov
test
add
mov
shr
aam
jnp
mov
push
stos
push
out
mov
push
adc
sbb
(bad)
mov
mov
std
int3
(bad)
mov
xor
xlat
and
mov
sbb
jb
sbb
lods
(bad)
mov
clc
outs
push
xor
stc
push
cmps
mov
loope
and
int
mov
push
xchg
shr
cmps
cli
and
imul
pop
sbb
sahf
pop
or
push
sbb
add
push
inc
(bad)
mov
jecxz
(bad)
xchg
in
cmp
inc
add
stos
lds
lds
cwde
and
mov
test
mov
gs
mov
cdq
sbb
daa
inc
pop
into
aad
or
out
mov
rcl
imul
shl
jmp
sub
mov
push
dec
scas
imul
xchg
inc
int
mov
pop
imul
rol
int
pop
mov
dec
das
dec
push
xchg
std
shl
pop
jb
rcr
push
xchg
leave
lods
and
test
adc
xor
jmp
outs
out
sub
sti
and
adc
jecxz
int
stos
dec
sub
lea
iret
fidivr
mov
in
not
dec
adc
aaa
jl
repnz
aad
push
pop
xor
mulps
add
out
es
je
repz
cmps
fisttp
jae
(bad)
inc
jns
lahf
scas
push
in
pop
out
ja
push
pop
(bad)
daa
imul
lock
ss
ss
xchg
and
add
adc
shl
out
out
jecxz
adc
cmp
cmp
jp
cmp
addr16
aad
test
into
imul
das
lds
sti
or
jecxz
cmp
jg
push
or
and
or
or
mov
data16
and
and
jbe
ret
cmp
test
(bad)
and
je
push
xchg
fs
mov
pop
rol
add
sub
jecxz
pop
repz
stos
cmp
in
adc
cmp
inc
sbb
push
jp
cmps
cmp
nop
pusha
jne
loope
fstp
dec
jns
shl
adc
push
cmc
and
push
cdq
and
ret
xchg
pop
adc
sbb
cmp
lods
xchg
jae
push
inc
add
fisubr
mov
push
sbb
xchg
in
and
cmps
pop
ja
cmp
mov
div
add
inc
enter
xor
les
mov
test
aas
inc
pop
sbb
cdq
pop
scas
mov
xchg
jmp
and
mov
lods
out
lock
mov
jnp
inc
adc
sbb
aas
sbb
mov
adc
add
xchg
imul
lods
out
mov
sahf
cmps
mov
mov
mov
in
mov
sbb
push
jl
jns
jns
adc
(bad)
rcr
adc
loope
xchg
jge
call
pop
test
js
fiadd
mov
test
fisttp
pop
push
fdivrp
add
hlt
cdq
les
stos
cs
ja
hlt
icebp
stos
inc
hlt
jp
(bad)
sbb
pop
add
jl
into
push
push
(bad)
adc
stos
daa
aas
cmp
jns
stos
inc
fisub
pop
push
test
push
out
jmp
fdiv
inc
stc
mov
sub
hlt
sbb
cdq
or
outs
lods
fbstp
push
loop
jmp
imul
(bad)
cmp
int
enter
(bad)
or
loop
xchg
pop
call
jle
and
mov
in
outs
inc
adc
imul
gs
addr16
fld
pop
sbb
push
cmp
movs
aad
sbb
dec
jne
vunpcklpd
adc
mov
xchg
pop
cmp
jmp
add
push
xchg
xchg
dec
push
enter
loopne
movs
sub
ficom
fisttp
mov
mov
or
push
stc
inc
dec
hlt
clc
lock
out
leave
push
cmp
mov
icebp
cmp
pop
ins
mov
ins
ds
jns
mov
push
inc
int
mov
movs
xchg
mov
jecxz
inc
mov
shl
mov
fiadd
jecxz
sbb
dec
imul
or
jg
sahf
mov
loope
in
mov
inc
xchg
sub
popa
repnz
mov
sub
hlt
push
jge
imul
leave
xchg
or
add
outs
test
mov
aam
js
push
xor
clc
adc
loop
push
int3
aam
cmc
mov
lds
bound
xor
nop
push
dec
add
push
cwde
mov
pushf
fyl2xp1
inc
cmp
push
mov
cmp
sub
test
imul
pop
mov
jnp
and
mov
inc
jle
movs
cmp
clc
nop
(bad)
(bad)
(bad)
adc
pop
call
in
repnz
jo
mov
jg
ins
in
jle
ds
aad
push
add
pop
xchg
cli
int3
pop
hlt
adc
push
sub
adc
addr16
sbb
add
sub
shl
imul
ins
ret
sub
cmp
adc
retf
fst
clc
push
retf
popf
add
and
xchg
mov
xor
cmp
repnz
cmp
stos
push
dec
int
cmps
lods
xchg
cmp
jl
xchg
mov
mov
adc
or
es
cmp
push
(bad)
popf
mov
cmp
or
stos
cmp
ror
in
mov
mov
rcr
lods
pushf
imul
(bad)
iret
mov
fisub
push
dec
mov
rol
(bad)
push
xchg
inc
add
pop
mov
or
jo
aam
fimul
add
add
xlat
nop
pop
addr16
cmc
push
(bad)
mov
pop
(bad)
rcl
inc
ins
fistp
dec
push
in
cmc
dec
(bad)
pop
push
jno
xor
fld
mov
adc
pop
jns
jns
imul
sub
leave
adc
icebp
jle
mov
ins
addr16
dec
int3
and
call
xchg
pop
enter
add
pop
mov
cld
out
inc
dec
neg
aas
pop
mov
and
xchg
mov
leave
and
push
xor
mov
adc
into
xchg
jns
outs
sar
adc
mov
pop
xor
faddp
sub
js
mov
imul
in
push
xor
pop
in
outs
push
popa
mov
pop
les
jae
shr
pop
outs
add
idiv
inc
mov
xchg
sti
add
mov
daa
imul
imul
sbb
ins
in
xchg
jecxz
addr16
pop
loope
cli
mov
dec
xchg
daa
xchg
mov
lds
jg
xchg
add
ins
push
pop
cmp
repz
dec
jmp
mov
dec
fsubr
imul
ror
mov
test
pop
repnz
shl
jge
or
cs
sbb
aas
add
pop
outs
pop
and
dec
lock
cmps
mov
cmp
iret
cwde
sti
add
add
(bad)
(bad)
push
(bad)
ret
outs
mul
push
add
push
mov
xchg
xlat
pop
inc
movs
push
in
in
outs
cld
mov
in
nop
stc
hlt
aam
(bad)
jge
pop
push
pop
pop
push
xor
mov
js
mov
(bad)
std
or
xchg
add
mov
mov
mov
pop
movs
in
in
add
jle
retf
cmp
mov
inc
push
mov
je
(bad)
mov
leave
mov
mov
pop
pop
pop
inc
or
int
ss
or
stos
setnp
cmp
shl
push
ds
mov
xchg
jmp
and
mov
add
int3
rcr
xchg
sbb
sub
add
inc
stos
data16
mov
jg
popa
movs
test
sub
sub
xor
(bad)
sti
lods
jnp
jg
mov
repz
jl
inc
sar
pop
scas
xchg
sar
sub
xchg
inc
or
shl
aad
test
jmp
in
mov
fst
jge
dec
ret
xor
add
cmp
ja
mov
or
call
lods
add
repz
fld
in
dec
push
ret
or
aam
xor
mov
adc
cmp
aad
push
add
aaa
mov
sub
mov
(bad)
popf
mov
daa
pop
pop
jmp
rcr
sub
sub
or
test
xor
lds
adc
dec
imul
aaa
(bad)
js
mov
inc
lock
jno
loopne
retf
loop
lea
xor
and
mov
cmp
ss
xlat
outs
(bad)
mov
inc
daa
mov
or
push
stc
jle
int
mov
enter
dec
inc
xchg
leave
iret
clc
push
(bad)
dec
xchg
pushw
fwait
std
cmc
dec
jmp
adc
inc
sbb
and
or
mov
add
mov
sar
push
add
div
pop
(bad)
mov
xor
inc
cmp
push
sub
sahf
lods
mov
rcr
pop
ss
test
jbe
jle
xchg
mov
push
adc
gs
(bad)
fcomi
and
cmps
cmp
inc
stos
int3
add
into
rcr
add
xchg
in
jnp
neg
mov
and
jnp
in
mov
imul
sbb
jl
sbb
ins
push
push
test
sub
sub
and
push
cmp
or
and
sbb
out
mov
mov
retf
out
fadd
dec
sub
iret
ror
or
pop
stos
je
xlat
inc
in
jmp
push
jbe
mov
jo
cmp
scas
or
push
(bad)
and
inc
outs
stc
add
loope
and
mov
fild
push
sbb
lods
(bad)
lods
xchg
add
jecxz
aad
test
ror
lea
mov
push
fmul
rcr
(bad)
mov
cmovb
les
xchg
iret
xchg
cdq
sub
aaa
xchg
xchg
ret
fistp
mov
fidivr
mov
cmp
dec
or
push
fimul
dec
mov
data16
shr
aam
ins
push
pop
int3
mov
retf
or
dec
mov
mov
aas
aaa
mov
ins
ret
cmp
sub
and
shl
daa
mov
pop
int
ja
in
lds
push
clc
sti
into
mov
(bad)
test
cmp
ja
je
(bad)
shl
dec
sbb
in
sub
arpl
sbb
and
iret
xchg
retf
xor
(bad)
vmovhpd
xor
dec
ror
div
push
cmp
je
jg
and
es
mov
cmp
mov
pop
adc
mov
jnp
es
xor
mov
jl
in
lea
lods
pop
push
push
repz
mov
(bad)
sbb
aas
mov
sub
or
push
ss
ror
fwait
jb
xor
sbb
and
adc
adc
jnp
sub
les
xor
xor
call
js
div
sbb
fnstsw
jl
lods
js
sub
adc
ror
lahf
jae
repnz
cmp
test
inc
in
addr16
xlat
adc
stc
jns
bound
and
or
pop
(bad)
scas
xchg
arpl
psubusw
(bad)
add
xchg
sti
and
out
mov
movs
pop
push
jle
in
gs
mov
mov
sub
adc
push
inc
mov
(bad)
adc
push
mov
xor
jmp
mov
repnz
sbb
mov
daa
mov
cmp
mov
ja
dec
dec
ds
jno
scas
les
int3
out
cs
and
cmp
imul
cmp
mov
hlt
sbb
stos
cmp
push
sub
cli
retf
in
xor
sbb
add
js
pop
stc
cmp
shl
adc
adc
arpl
jno
jns
sbb
bound
jecxz
push
pop
leave
xchg
mov
stos
ja
ror
rcl
inc
push
bound
sub
cmp
dec
out
cmps
stos
(bad)
sub
mov
retf
ret
mov
gs
fwait
cli
or
(bad)
adc
mov
inc
dec
mov
xchg
leave
inc
sub
ss
lock
mov
jle
dec
int3
pop
adc
add
xor
mov
dec
imul
adc
in
pop
movs
add
cmp
mov
push
adc
jns
lock
adc
cmp
inc
into
sbb
stos
(bad)
rcl
sbb
and
cs
(bad)
or
leave
mov
add
stos
dec
jnp
mov
xchg
push
inc
add
aaa
push
adc
lds
xor
push
dec
in
or
pusha
pop
xor
mov
lar
add
or
sbb
mov
movs
and
cmc
test
das
pop
ret
and
stos
push
mov
mov
cmp
fldcw
in
pop
sbb
ins
dec
addr16
adc
sub
loop
mov
xchg
jle
jnp
adc
mov
sbb
sbb
fwait
(bad)
and
icebp
pop
or
stos
sahf
ret
in
xlat
inc
sub
or
and
test
pop
pop
fdiv
and
mov
lods
push
repz
ficom
dec
sub
ret
push
stos
fimul
shl
jl
loope
fnstenv
leave
xor
fwait
mov
lods
mov
mov
rcr
dec
lock
adc
xchg
ror
mov
push
and
push
dec
shl
mov
das
repz
inc
sub
stc
push
and
or
jge
mov
ror
push
lock
cmp
adc
xor
dec
popf
into
cmp
sbb
jae
inc
jb
pop
dec
scas
mov
icebp
xchg
pop
imul
sub
inc
xchg
out
inc
mov
xchg
gs
(bad)
sub
ret
dec
adc
fcom
(bad)
jmp
jo
aas
push
imul
push
pop
sub
sbb
sti
shr
fcom
loop
lahf
sahf
sbb
mov
pushf
inc
ins
leave
push
cs
jmp
xchg
out
lea
rol
loope
push
(bad)
mov
rol
repz
xor
fisubr
cmp
push
sub
(bad)
mov
add
sbb
sub
inc
cmp
loop
sahf
int
iret
icebp
mov
sbb
adc
mov
dec
test
sti
adc
push
sbb
enter
and
lahf
add
ja
cdq
xchg
inc
das
pop
in
inc
outs
mov
mov
ss
in
(bad)
loopne
fdiv
cmp
adc
mov
(bad)
xchg
or
xchg
xor
xchg
jmp
cmp
mov
ds
cmps
stos
push
out
fcom
dec
pop
adc
and
inc
jg
retf
mov
mov
sbb
mov
jo
pop
les
pop
test
imul
xlat
in
xor
and
ror
pop
icebp
sbb
sbb
pusha
and
jo
ins
je
sti
aam
pop
ret
lock
dec
movs
and
clc
das
add
mov
fisttp
in
mov
sub
push
sub
mov
adc
fs
in
add
xchg
fwait
cdq
bound
fistp
into
xor
dec
lods
add
jae
iret
pop
mov
add
xor
sbb
mov
sbb
ret
int3
mov
cli
das
xchg
cmp
xchg
mul
dec
xor
adc
aaa
mov
sahf
out
and
icebp
mov
pop
in
pusha
cli
sbb
and
data16
clc
add
jmp
mov
push
inc
or
retf
mov
pop
cmc
xor
sti
nop
(bad)
iret
cmp
mov
and
aad
xchg
(bad)
cs
push
pop
(bad)
mov
pop
fs
int3
movs
dec
mov
ret
iret
jge
(bad)
clc
pushf
loop
in
sub
sub
add
lds
sub
outs
dec
mov
pop
mov
pop
cmp
retf
js
lock
ins
xchg
push
mov
test
aam
cwde
adc
xlat
add
retf
mov
cs
pop
pop
aaa
mov
aas
or
mov
mov
or
in
in
dec
inc
and
mov
jb
sub
push
push
dec
xchg
inc
cmps
dec
test
nop
aaa
inc
loopne
imul
nop
icebp
xor
inc
cdq
pop
sub
inc
int3
sub
dec
mov
mov
movs
mov
lods
push
sub
aas
movs
sar
xchg
rcl
outs
mov
addr16
pop
mov
(bad)
jo
xchg
jl
fs
(bad)
test
pop
jl
nop
push
out
bound
mov
and
mov
outs
mov
(bad)
sti
or
mov
pop
mov
inc
mov
fild
scas
ins
mov
cdq
or
xchg
test
aad
call
xchg
pop
jno
outs
jp
cdq
(bad)
jmp
xor
cmp
dec
jg
imul
in
xor
push
pop
lods
test
jmp
jg
loop
sub
and
xchg
ret
(bad)
ins
test
cmp
lods
mov
mov
push
outs
inc
loop
jns
sub
jge
popf
pop
push
jmp
mov
mov
xor
(bad)
movs
add
and
outs
aaa
sbb
and
fild
call
cmp
repnz
cld
jge
pop
pusha
out
xchg
in
aaa
and
inc
sti
ds
fsub
pop
test
cmp
xchg
cmp
add
xor
mov
jbe
or
add
pop
scas
scas
mov
mov
xchg
and
jno
mov
and
jns
adc
xchg
or
push
xchg
repnz
cmps
inc
pop
jg
mov
sbb
in
inc
pop
inc
mov
xor
enter
jbe
sbb
fbld
out
and
or
pop
sub
sbb
mov
cmp
not
cmps
inc
inc
and
stos
enter
mov
dec
push
aaa
out
scas
(bad)
jae
or
mov
cmp
mov
add
xor
lea
xor
mov
pop
shr
fdivr
inc
or
jmp
ins
inc
jmp
and
mov
mov
sub
pusha
push
fadd
aam
and
or
sub
pop
(bad)
fwait
cwde
mov
pop
jg
jae
ja
retf
pop
adc
mov
sub
mov
cli
pop
ss
int
push
sub
sub
or
mov
mov
fsubr
jmp
mov
inc
xor
rol
(bad)
dec
mov
cli
fild
push
add
mov
or
push
sub
daa
push
xor
bound
xchg
and
shr
in
cwde
inc
and
ficomp
dec
icebp
jecxz
jno
sub
ja
pop
fidiv
mov
push
cmp
dec
lds
mov
rol
sbb
push
push
jl
test
inc
dec
test
outs
scas
jnp
dec
xchg
push
(bad)
cmp
mov
inc
(bad)
fdivr
dec
mov
mov
mov
cmp
repnz
inc
and
inc
mov
mov
or
sub
cli
das
addr16
and
int
stc
push
inc
imul
stc
fucomi
fimul
jp
pop
mov
std
cmp
fnsave
sbb
out
ss
mov
dec
push
popf
jge
mov
cmp
ret
inc
and
ds
in
frstor
adc
inc
jno
pop
clc
push
or
xor
xor
xor
rcr
nop
scas
(bad)
dec
xchg
cwde
mov
jns
add
jmp
or
jnp
add
jle
xchg
dec
sbb
nop
js
push
jmp
push
iret
sbb
mov
pushf
loopne
arpl
pop
add
pop
je
jbe
cmp
and
shl
loop
add
jb
pop
pusha
aad
push
lahf
call
mov
sub
pop
cdq
inc
sahf
jmp
outs
jns
test
std
cmp
outs
inc
addr16
nop
je
movs
int
int
mov
xchg
retf
sub
outs
inc
and
sub
icebp
sbb
cdq
nop
add
(bad)
mov
popf
ins
fmul
mov
mov
fild
dec
add
mov
dec
dec
add
xor
sub
push
pop
push
(bad)
jbe
shr
mov
push
push
sub
jp
xchg
dec
push
sar
scas
pop
mov
mov
scas
xchg
add
push
imul
(bad)
pop
pop
lea
pop
cmc
test
in
jns
mov
xor
xchg
fnstcw
mov
xor
jae
mov
xlat
xchg
outs
dec
add
ror
repnz
and
fild
(bad)
push
mov
popa
popf
mov
pop
adc
mov
outs
jp
(bad)
and
ret
adc
push
call
dec
rcr
adc
ds
and
lods
scas
sbb
mov
jno
rcl
push
pop
jns
fiadd
cmp
shr
push
pusha
push
sahf
push
sar
dec
je
push
jnp
jae
add
ins
sub
dec
jmp
aad
push
outs
repz
sub
cmp
lods
lds
ror
inc
ds
or
ror
cli
aad
mov
fadd
push
jae
push
jno
dec
fild
fcmovnbe
add
pushf
(bad)
out
pop
stc
ins
jb
inc
out
clc
pop
ror
mov
jb
sahf
push
and
add
loopne
inc
jl
fmul
adc
retf
out
cwde
cmp
pop
sbb
inc
jp
pop
fsubr
test
and
stos
mov
ja
out
gs
and
bnd
shr
xor
leave
out
call
stos
rcr
(bad)
or
ficomp
ficom
xchg
adc
cdq
adc
outs
push
lds
call
sbb
out
add
sar
test
fisttp
js
push
mov
shl
scas
add
stos
jne
mov
jmp
popa
out
fs
xchg
cwde
outs
mov
push
mov
outs
imul
sbb
jg
stos
(bad)
jns
rcl
or
(bad)
aas
or
sub
lea
in
push
cmp
test
cmps
rcl
inc
push
(bad)
sti
inc
out
xor
out
dec
xchg
pop
add
xor
out
or
mov
jmp
jne
jge
enter
mov
mov
xor
mov
xlat
cmps
cmps
mov
fidivr
push
enter
ds
int
push
leave
ds
push
loopne
jne
out
aas
clc
bound
sub
aam
nop
mov
leave
adc
fst
push
mov
dec
(bad)
adc
push
sbb
les
cmps
enter
mul
xchg
mov
dec
xor
inc
ds
shl
push
mov
cmps
xor
sbb
and
mov
inc
cmps
xchg
data16
xor
jns
jae
or
xchg
xor
cmps
(bad)
enter
mov
movs
jnp
mov
add
test
aam
or
ins
lock
dec
inc
call
loope
inc
mov
mov
daa
jnp
add
stc
fnstsw
leave
loop
mov
shr
in
into
iret
les
jecxz
imul
out
push
stc
mov
jb
pop
aad
(bad)
cmp
cwde
and
lods
xchg
mov
push
cmp
xchg
rol
out
in
mov
ss
mov
mov
ret
dec
cmps
sub
xchg
dec
sub
in
shr
xchg
mov
jb
fdivr
add
push
xor
inc
dec
pop
cmp
mov
lods
rol
add
(bad)
aam
es
jne
xchg
aas
mov
dec
xor
pop
mov
shr
lahf
xlat
mov
aas
inc
out
les
sar
and
dec
jmp
jg
fcom
(bad)
mov
stos
outs
ror
imul
es
adc
mov
mov
push
sub
push
(bad)
mov
mov
faddp
ins
sub
or
push
push
pusha
or
pop
push
mov
sbb
lahf
(bad)
call
xor
(bad)
int
cmp
retf
cmp
mov
fcomp
dec
mov
repz
jg
in
xchg
jne
icebp
mov
ss
jl
push
ret
leave
push
dec
and
add
aad
stos
sahf
adc
and
es
popa
jg
sub
mov
dec
lea
dec
and
call
(bad)
gs
stc
fcmovnb
mov
dec
xor
sbb
inc
and
dec
clc
sub
fadd
cmp
imul
pushf
mov
mov
(bad)
stos
shl
sub
xchg
push
out
push
inc
xchg
mov
cmps
hlt
ret
pop
jne
mov
jmp
mov
adc
cmc
lods
fcom
fidiv
jns
mul
dec
in
adc
(bad)
pop
push
fs
mov
outs
jmp
pushf
jae
mov
(bad)
cmp
rol
push
test
add
jmp
(bad)
xor
stc
push
jl
js
daa
jecxz
fist
shl
add
mov
inc
scas
sti
loope
stos
pop
push
adc
test
jg
sub
push
sahf
xor
ror
sahf
arpl
adc
mov
sbb
das
inc
add
cmps
xchg
xor
push
mov
jmp
(bad)
xchg
cmps
retf
dec
add
lods
adc
ret
dec
sub
mov
push
mov
and
inc
fist
mov
das
scas
rol
mov
adc
xor
xchg
std
out
not
cli
add
xchg
jbe
(bad)
push
push
jns
jg
mov
adc
pop
jg
out
push
xchg
cwde
mov
mov
mov
cmp
std
movs
inc
out
mov
inc
pop
lock
mov
mov
daa
jg
lods
nop
pop
(bad)
repnz
mov
lds
std
sti
pop
ror
daa
rcl
add
mov
retf
cmp
xchg
pop
xor
(bad)
rol
pusha
mov
arpl
call
call
dec
dec
out
sub
cs
dec
and
daa
pop
retf
mov
cmps
fst
pushf
xor
mov
inc
fs
in
imul
push
push
mov
icebp
hlt
in
lea
les
iret
outs
sbb
jnp
sbb
xchg
dec
addr16
dec
cmp
movs
push
mov
sbb
inc
ins
mov
hlt
jne
div
mov
out
leave
adc
and
pop
bound
cwde
jns
mov
mov
rcr
cwde
or
jns
pop
in
sar
je
test
stos
or
in
lea
ds
cli
fcomp
sub
xor
cmps
outs
xchg
mov
jae
sbb
mov
mov
xchg
adc
dec
repnz
movs
test
and
mov
or
mov
ret
jnp
mov
dec
mov
jo
push
daa
mov
pusha
cli
cmp
pop
sub
pop
xchg
and
mul
push
jg
jae
cmps
or
adc
xor
push
(bad)
(bad)
sbb
ret
fsubr
xor
jbe
or
add
sub
daa
lahf
dec
or
jmp
jmp
(bad)
test
hlt
loop
pminsw
ret
mov
xlat
cld
gs
mov
repz
cmp
and
cdq
fbstp
xor
ror
or
cmp
mov
mov
add
dec
div
xor
pop
cmp
mov
sar
cmc
dec
(bad)
bound
fs
sbb
aam
mov
push
inc
mov
fwait
(bad)
lock
adc
fdivr
das
sbb
sbb
jae
inc
out
jmp
stos
adc
push
std
das
dec
dec
sub
and
ret
in
scas
jp
mov
xchg
mov
jo
jbe
jmp
or
mov
out
or
or
idiv
sub
mov
(bad)
fstp
push
pushf
xor
jo
sahf
pusha
adc
out
int
or
sbb
imul
sbb
imul
movs
je
in
adc
adc
es
cmp
loop
mov
xchg
mov
jo
int3
das
mov
inc
loop
jns
ja
xor
sar
mov
outs
popa
dec
mov
popa
inc
and
xchg
sti
int3
jmp
stc
int3
cmp
add
sahf
fsubr
or
and
mov
sub
rcl
(bad)
test
mov
xor
cwde
adc
loopne
sbb
mov
fs
xor
dec
ds
sahf
dec
in
rcr
and
fistp
lds
loope
int
into
in
icebp
jno
icebp
mov
add
jno
jno
sub
mov
imul
and
lods
jno
jp
xor
call
(bad)
xchg
ss
pop
(bad)
ins
retf
mov
stc
xchg
cmp
mov
fnsave
movs
test
mov
inc
or
fldcw
mov
ins
jge
push
and
push
jns
dec
aad
push
ja
nop
adc
push
dec
mov
xlat
jmp
mov
dec
add
xor
add
add
adc
ins
pop
outs
cwde
push
inc
sub
repnz
out
(bad)
fidiv
stc
(bad)
push
xchg
cmps
cmp
ins
pop
pusha
jno
mov
mov
sbb
gs
test
mov
add
lods
repnz
xchg
or
test
mov
retf
inc
mov
ja
xor
mov
xlat
movs
int3
stos
std
push
xchg
gs
adc
or
pmaxub
icebp
test
pop
pop
cmp
jnp
sub
jecxz
and
lldt
shl
fsub
cld
mov
mov
mov
xchg
inc
sbb
ja
cmp
adc
sbb
mov
imul
and
std
pop
iret
cmc
mov
out
shl
stos
pop
pop
mov
cwde
jmp
sbb
inc
adc
adc
jnp
mov
sahf
or
repnz
push
push
ins
dec
or
in
loopne
or
jne
int3
push
or
leave
xchg
xchg
xor
cmp
call
lahf
xor
call
retf
mov
xchg
jp
mov
cmp
js
or
push
in
mov
xchg
movs
fidiv
inc
jns
push
jp
mov
dec
(bad)
and
lods
call
mov
jo
sub
in
xchg
pop
dec
jbe
test
gs
push
test
(bad)
adc
adc
pop
mov
leave
sti
mov
fisttp
jp
pushf
fwait
in
jmp
xchg
and
cmp
int3
add
test
into
pushf
dec
xor
loopne
pop
and
je
outs
jno
mov
cs
xor
push
xchg
jno
sbb
sbb
neg
fcomp
and
addr16
jae
sub
int
xchg
pop
fbstp
cmp
addr16
ds
mov
scas
outs
push
or
lds
mov
(bad)
cmc
xor
je
cmp
mov
mov
fs
adc
add
sbb
imul
ficom
mov
fs
or
mov
in
shl
stc
mov
and
fiadd
xor
push
arpl
js
bound
shr
xchg
jecxz
inc
out
adc
mov
xchg
mov
adc
je
and
loope
js
fbld
iret
aam
loopne
push
or
loope
mov
push
inc
mov
shl
repnz
add
inc
xchg
dec
sub
mov
sbb
(bad)
mov
loop
fdiv
push
clc
aad
dec
arpl
int3
pop
jmp
mov
scas
repz
movs
mov
or
ror
cmp
inc
and
push
or
xchg
pop
mov
jle
(bad)
shl
cwde
jnp
pop
rcr
inc
ret
pop
stos
or
out
aad
stc
rol
xchg
mov
sub
lahf
aam
pop
sub
mov
mov
mov
cs
xlat
aas
inc
fwait
mov
or
jo
pop
mov
mov
dec
inc
shl
(bad)
xchg
fs
or
sub
nop
jl
xchg
and
pop
cwde
mov
test
aaa
sub
jne
leave
enter
pop
sub
aam
ins
jg
rol
(bad)
aam
cmp
pop
aam
jbe
in
add
push
mov
pusha
sbb
jbe
jne
or
lahf
xchg
and
push
out
aam
jbe
cmps
movs
jmp
stc
push
cwde
pop
xchg
sub
mov
xor
xchg
add
inc
stc
mov
xchg
mov
pop
jecxz
daa
shl
imul
ins
cmps
xchg
sti
and
jg
(bad)
cld
pushf
dec
cmps
push
inc
pop
dec
mov
and
mov
inc
cli
je
lahf
xchg
shld
or
addr16
stos
push
loope
iret
and
test
sbb
pop
push
out
ins
pop
loopne
jge
cmc
sbb
push
mov
and
push
pop
(bad)
mov
dec
mov
fild
adc
or
sub
jb
xchg
scas
nop
jnp
sbb
stos
mov
out
inc
mov
cmp
dec
jnp
cmps
or
arpl
es
and
pop
gs
lock
leave
dec
leave
add
lds
jae
push
mov
pushf
cmp
lods
sub
ror
xor
out
ret
sbb
call
lds
mov
out
repz
xchg
xlat
sbb
dec
and
inc
iret
add
push
mov
cmp
call
fsub
adc
dec
iret
fisubr
gs
aad
add
cmp
pop
xor
jmp
xor
push
push
(bad)
sti
pop
dec
sbb
gs
in
sahf
pop
add
push
cmp
pop
add
cdq
nop
jmp
fcomp
xchg
test
jb
cmc
ds
mov
mov
icebp
aam
imul
aam
pop
xchg
inc
jmp
fs
stc
cmp
and
(bad)
test
push
adc
push
and
lahf
imul
pop
rcr
dec
test
outs
imul
push
stos
cmp
loop
inc
(bad)
lods
pop
xchg
sub
cmps
popf
push
out
hlt
or
(bad)
ja
(bad)
and
lds
fstp
outs
or
pop
push
call
movs
cmp
xor
in
mov
jl
xchg
pusha
es
and
adc
mov
in
cmc
jae
stos
mov
pop
ret
gs
ins
cmc
imul
lds
add
pop
ror
sub
or
jns
or
and
cmc
adc
out
adc
add
xchg
and
fst
imul
shl
stc
pusha
pop
jne
imul
fcmovnu
inc
inc
dec
or
repnz
add
sub
les
test
pop
mov
add
into
and
mov
add
scas
data16
scas
mov
jns
(bad)
mov
dec
retf
cmp
mov
stos
cwde
mov
xchg
ds
std
mov
jne
xor
pop
pop
push
(bad)
adc
dec
je
fistp
jle
movs
jmp
icebp
dec
mov
stc
mov
fstp
sar
repz
jbe
pop
leave
shl
sbb
dec
inc
fs
rcl
imul
gs
mov
stos
imul
xchg
test
lea
ja
cmps
push
aam
and
mov
fist
push
inc
arpl
ds
push
test
cmp
dec
arpl
les
add
aas
push
xchg
in
jne
adc
movs
rol
xchg
dec
dec
adc
cmp
cld
or
push
fiadd
test
(bad)
adc
fild
inc
clc
jecxz
rcl
mov
lea
pop
loope
sbb
inc
mov
ins
jge
mov
adc
cwde
pop
adc
repnz
mov
push
cmps
fist
retf
jmp
xchg
mov
dec
loope
mov
pop
sub
jecxz
stc
ins
loope
loopne
pop
mov
jnp
pop
dec
xchg
sar
cmp
sahf
jp
mov
in
mov
xchg
repnz
push
jae
jns
or
(bad)
in
pop
lods
es
cwde
(bad)
push
jl
inc
xor
inc
mov
ins
fst
retf
in
js
rcr
push
jmp
mov
pop
cmc
pop
xor
(bad)
add
or
cs
adc
inc
fdiv
mov
fisttp
sbb
sbb
push
data16
add
jl
xlat
inc
mov
adc
push
xor
inc
jp
push
jp
cmps
jae
jo
retf
sbb
jp
sti
jg
and
fsubr
mov
sub
fwait
jmp
add
adc
xor
ins
pop
out
jo
test
in
add
pusha
rol
lea
movs
adc
push
daa
cli
fdiv
dec
mov
dec
or
adc
cmp
cmp
fcomi
push
inc
push
push
push
and
leave
stc
push
shr
jle
pop
sub
lods
jb
adc
jae
xchg
test
inc
and
sbb
mov
jae
add
pop
cmovno
loopne
mov
adc
sub
popa
shr
aas
ins
pop
into
pop
xchg
push
add
xchg
mov
in
ficom
pop
or
retf
push
sbb
jbe
jns
xor
pusha
xchg
pop
lods
out
dec
loopne
dec
or
test
sub
sub
clc
cmps
imul
mov
or
mov
and
mov
mov
lahf
gs
jno
cmp
pop
retf
add
xor
mov
div
icebp
(bad)
stos
pop
dec
dec
arpl
not
sbb
ins
iret
test
jp
pop
push
scas
mov
cwde
outs
jmp
sahf
add
jnp
mov
jnp
dec
sub
mul
mov
push
xlat
mov
mov
(bad)
neg
fwait
and
ins
arpl
inc
jp
push
xor
cmps
mov
clc
push
(bad)
sub
inc
ds
jb
inc
jns
jnp
and
addr16
adc
stos
in
dec
mov
sub
xor
ins
pop
push
jmp
clc
sbb
add
fsubr
jmp
movs
sbb
fdivr
jmp
inc
ds
jecxz
mov
imul
push
xor
push
es
ins
xchg
inc
arpl
mov
iret
mov
mov
push
jl
in
cmc
out
gs
xor
fwait
or
pusha
add
fldenv
sti
inc
add
mov
cmp
dec
ds
aad
pop
push
test
pop
dec
es
xchg
dec
adc
cld
inc
jno
(bad)
sahf
sti
pop
(bad)
ja
xchg
outs
ficomp
cld
mov
bound
sub
mov
neg
test
jge
aaa
push
sbb
(bad)
and
stos
(bad)
xor
aaa
mov
les
daa
cmp
pop
and
dec
add
cmps
sbb
push
lock
jge
sbb
pop
lock
in
div
pop
adc
inc
and
and
xor
outs
push
jns
xchg
sub
test
push
imul
dec
loopne
test
fistp
add
xlat
dec
add
pop
xor
mov
and
in
push
lods
aaa
or
ja
cmp
call
neg
movs
jno
pusha
sub
push
icebp
pop
fidiv
mov
xchg
xor
out
mov
imul
push
outs
aas
call
shr
dec
adc
(bad)
cmp
push
mov
rcr
mov
jge
mov
jmp
rcr
icebp
in
movs
mov
pop
rcl
adc
retfw
pop
cmps
or
mov
xlat
mov
xor
inc
mov
mov
out
xchg
out
pop
cmps
dec
pop
arpl
rol
or
mov
xor
inc
dec
out
jmp
mov
jne
adc
adc
dec
mov
sbb
or
adc
je
xchg
cmp
adc
or
(bad)
cmp
push
ja
inc
push
mov
(bad)
clc
inc
aad
push
inc
(bad)
mov
jmp
mov
outs
int3
stc
cli
push
arpl
sub
jne
ror
or
int
aam
bound
and
pop
mov
and
jmp
inc
and
das
push
pop
lods
call
mov
ret
mov
pop
call
sub
movs
fild
add
xchg
mov
dec
lahf
pop
mov
xor
sbb
das
mov
pop
adc
out
pop
(bad)
cmps
mov
jmp
sbb
imul
adc
idiv
jmp
xchg
repnz
dec
inc
shl
ins
mov
mov
push
mov
mov
scas
movs
in
in
and
cmp
push
push
push
inc
nop
repz
lahf
xchg
test
fwait
lods
xlat
xor
mov
stos
or
out
inc
cmp
loopne
fst
addr16
mov
leave
and
div
jmp
les
les
inc
popf
sbb
popa
and
int3
ins
into
adc
aad
clc
pop
lods
repz
jns
loope
or
inc
movs
jmp
push
xchg
dec
inc
cli
push
cmps
xor
retf
add
push
adc
in
pop
outs
dec
jb
pop
mov
bound
sub
sub
mul
(bad)
cmp
cmp
mov
cmp
into
cmp
inc
fadd
ficomp
out
or
imul
xor
or
or
and
jno
mov
fcomi
int
(bad)
xlat
jae
out
and
out
mov
dec
jb
out
push
push
pop
dec
cdq
mov
imul
cmps
ja
push
mov
sbb
movs
mov
sbb
sub
enter
jecxz
fimul
xor
pusha
jle
push
xlat
push
jmp
pop
mov
fisttp
cwde
lock
add
add
addr16
js
inc
dec
dec
pop
into
mov
and
jge
jns
mov
xchg
das
in
ret
add
ror
jne
imul
pop
jmp
outs
push
push
(bad)
loopne
retf
das
jmp
add
sub
mov
fucomi
inc
int3
pop
jecxz
push
test
inc
aaa
cdq
out
ret
cmp
cmc
sub
setnp
cmc
xchg
pop
(bad)
or
icebp
mov
fcomp
sub
sbb
xor
into
leave
mov
pop
test
repz
sbb
dec
push
into
pushf
jno
xor
movs
mov
jmp
in
xor
xor
xchg
sbb
hlt
jns
fnstcw
push
dec
sub
and
ins
jl
call
adc
dec
mov
mov
sub
mov
mov
ror
and
sti
adc
cmc
sbb
or
inc
mov
xchg
lods
mov
push
mov
mov
sub
js
pushfw
sti
fist
pop
outs
or
data16
cmc
fdiv
mov
repz
aas
(bad)
jecxz
stos
xor
mov
inc
cwde
push
popa
nop
xor
push
test
imul
jno
outs
mov
inc
sub
mov
dec
push
idiv
xlat
or
(bad)
lods
stc
pop
stos
mov
and
lock
pop
sub
ror
xchg
adc
sbb
imul
pop
mov
dec
push
test
(bad)
push
inc
cmps
sub
mov
sub
inc
cdq
repnz
adc
mov
mov
mov
fwait
pop
dec
aas
mov
xchg
mov
fldenv
repnz
mov
pop
xor
or
adc
sbb
mov
xchg
stc
pop
inc
or
icebp
scas
mov
inc
inc
ret
xchg
loopne
inc
cs
or
lods
rol
xchg
fmul
gs
fsubr
mov
pop
inc
fdivr
push
sbb
sti
pop
rcr
push
inc
mov
pop
adc
mov
pop
cmp
fwait
add
dec
push
into
ret
dec
ins
ror
mov
mov
sbb
pop
test
pop
ds
fidiv
jg
imul
mov
jae
xor
pusha
(bad)
fist
lds
sbb
push
jmp
fimul
xchg
movs
in
test
(bad)
add
adc
rcr
retf
sbb
mov
jne
(bad)
loop
sbb
in
add
out
fsubr
inc
data16
loop
pusha
aam
mov
shl
pop
sbb
mov
jne
dec
fs
(bad)
popa
pop
ror
fld
cmp
jns
xchg
push
fs
mov
pop
or
jns
cs
inc
test
cmp
inc
pop
jbe
imul
fwait
lds
scas
mov
aas
pop
jns
dec
nop
jns
lds
xor
cmp
jg
gs
and
pop
imul
dec
mov
mov
loope
test
fcom
mov
mov
push
pop
call
xchg
pop
ret
pop
adc
inc
std
push
aad
xor
and
jbe
mov
das
jnp
aaa
loopne
dec
je
js
out
out
fs
imul
fs
imul
mov
xchg
mov
cwde
addr16
mov
mov
or
lea
mov
mov
cmp
arpl
sbb
push
loopne
cmp
dec
sbb
adc
inc
imul
and
pop
icebp
and
jle
fadd
lds
xor
push
jb
je
sbb
fldenv
mov
add
sbb
sbb
mov
xchg
adc
pusha
sbb
adc
jp
mov
outs
scas
xor
in
mov
mov
(bad)
xchg
or
(bad)
adc
mov
dec
fwait
inc
jmp
lea
inc
inc
popf
test
clc
sub
or
cmp
mov
pop
add
xchg
sub
ja
shl
inc
add
push
pop
cmp
(bad)
(bad)
cdq
inc
gs
aas
and
jmp
xor
in
inc
mov
daa
outs
dec
push
sar
push
lods
push
fidiv
mov
enter
mov
arpl
inc
out
mov
jne
jb
lahf
inc
test
mov
repnz
gs
adc
dec
and
lods
call
outs
inc
mov
dec
ret
shl
(bad)
and
xchg
xchg
inc
sti
shl
sar
pusha
ret
ja
ja
scas
adc
nop
xchg
cmp
test
rol
dec
push
lahf
(bad)
jg
ja
mov
stos
jecxz
push
out
in
loop
int
cdq
lds
sar
and
xor
xor
or
add
jge
lea
add
pop
js
data16
push
xor
stc
(bad)
jns
cmp
mov
stos
cmp
sbb
adc
jmp
xor
inc
das
fisub
or
popa
jmp
mov
pop
fisttp
xchg
push
dec
(bad)
jne
in
movs
add
das
imul
(bad)
sub
call
sbb
sub
mov
fdivr
test
or
inc
scas
xlat
add
cmc
pop
fcmovnu
test
pushf
fdivr
jbe
fcmovne
jae
aam
xor
add
xchg
cmp
jecxz
cmp
jecxz
and
push
jg
test
mov
enter
adc
pushf
add
xor
push
(bad)
pushf
pushf
xor
push
xor
shl
cwde
lds
movs
neg
mov
xchg
xor
stos
in
mov
adc
fist
loope
push
loop
not
push
inc
push
jo
daa
call
mov
(bad)
stc
sub
cmp
icebp
mov
adc
inc
lods
call
adc
add
inc
cmp
sbb
clc
dec
nop
sbb
add
and
xor
fnstcw
(bad)
jl
pop
cmp
imul
dec
fwait
cmp
(bad)
popf
test
add
jb
or
dec
jno
in
mov
fbstp
dec
add
xchg
mov
ror
jecxz
xor
and
scas
mov
ret
cmp
add
not
inc
cmp
out
dec
in
mov
iret
adc
jo
retf
les
add
iret
pop
loope
cs
cmps
sbb
ss
mov
aam
or
shl
dec
sub
shr
push
sbb
test
push
mov
xchg
fs
dec
jge
add
or
data16
mov
mov
xchg
fistp
shl
mov
rol
cmp
stos
inc
loope
xlat
mov
adc
cmp
cli
repnz
dec
sbb
mov
inc
push
mov
jmp
sbb
mov
push
inc
stc
inc
push
cmp
imul
push
cwde
sar
repz
sub
sbb
ret
test
lock
cmp
add
mov
jbe
jmp
call
jmp
ja
and
push
mov
ins
xchg
in
add
jp
mov
push
xchg
dec
mov
mov
pop
in
sub
dec
into
inc
push
out
mov
in
pushf
add
ret
lahf
out
mov
sub
test
std
cmp
es
dec
bound
inc
mov
int
shr
and
jb
cdq
arpl
and
repnz
or
sub
dec
cmp
inc
scas
xor
stos
mov
stos
sbb
(bad)
pop
jb
mov
xor
xor
mov
jnp
loope
jl
retf
les
and
and
retf
out
bound
dec
fsubr
jmp
ss
int3
test
mov
int3
dec
ss
out
sti
jmp
mov
xchg
mov
ss
loop
inc
push
xchg
test
cmps
mov
mov
es
out
add
jo
mov
cli
add
cmps
jg
jl
jnp
fdiv
push
xchg
(bad)
je
xlat
mov
lock
iret
inc
and
sbb
push
xor
jmp
jno
(bad)
jle
dec
std
push
jb
scas
push
test
sub
inc
fcom
jae
or
mov
inc
test
mov
mov
push
push
jae
mov
into
fiadd
out
aas
xchg
in
mov
pop
pop
sub
(bad)
pop
fstp
xchg
in
add
mov
arpl
fbld
outs
inc
mov
rcl
jns
(bad)
xchg
mov
xor
mov
in
loopne
mov
ins
pop
das
cli
dec
(bad)
mov
ins
adc
mov
xchg
mov
fistp
adc
pop
and
mov
xchg
sahf
(bad)
fisttp
or
jge
hlt
mov
dec
lds
sbb
iret
fwait
(bad)
jbe
add
jp
dec
mov
fistp
xchg
sbb
jne
fisttp
fld
imul
ins
mov
mov
fs
mov
mov
push
sub
(bad)
pop
outs
adc
xchg
(bad)
out
xlat
lods
cmp
ror
aas
inc
mov
jg
imul
pop
and
in
js
fs
and
lods
or
(bad)
sub
out
push
int
pusha
sub
sar
daa
and
xlat
clc
les
movs
add
pop
enter
lods
xor
pop
mov
sbb
push
and
clc
push
ret
push
sbb
add
pop
jmp
xchg
loop
lods
cmp
mov
arpl
repnz
mov
mov
or
in
xor
cli
out
xchg
lock
xchg
movs
xchg
cld
(bad)
pop
jecxz
sbb
sbb
int3
call
loop
outs
dec
arpl
pop
adc
test
pop
cmp
mov
loope
cmps
pop
sar
loop
mov
stos
add
sti
fiadd
jle
lock
repnz
mov
hlt
jne
je
stos
icebp
shl
fmul
ficomp
cmp
adc
xchg
fist
mov
dec
mov
mov
add
push
pop
ret
add
inc
scas
push
lods
xlat
mov
test
pop
jle
shl
call
mov
fstp
cdq
repnz
and
mul
neg
cmp
mov
adc
sub
stc
ss
pop
pop
out
xlat
nop
or
addr16
punpcklbw
call
fdivr
stc
std
mov
push
cmc
scas
cmp
in
das
mov
dec
outs
ds
pop
mov
call
cdq
jecxz
mov
nop
cvtdq2ps
popf
add
mov
jge
loope
fidiv
imul
arpl
hlt
inc
ja
jnp
xchg
lods
push
scas
jo
ficomp
sbb
pusha
pop
sub
lods
lods
idiv
and
and
sub
mov
mov
mov
pop
shl
in
(bad)
aas
enter
jg
ss
(bad)
and
popf
jno
fwait
enter
aas
inc
out
rcl
jge
xor
mov
retf
push
(bad)
and
arpl
fsubrp
cld
mov
mov
pushf
lock
imul
mov
fsubrp
aas
or
jecxz
ss
dec
adc
jno
pop
outs
sub
jae
inc
xchg
in
sbb
push
mov
pop
xchg
cli
int3
sar
adc
ret
neg
fidivr
inc
aam
sbb
mov
or
adc
mov
std
mov
mov
xor
mov
lock
or
loop
scas
inc
cmps
adc
dec
mov
outs
push
cld
mov
sbb
dec
adc
mov
sbb
or
xchg
mov
push
sub
and
sub
adc
adc
push
push
iret
pushf
(bad)
das
jg
mov
mov
add
cmps
push
mov
mov
pop
shl
leave
test
cmps
aas
fisttp
push
push
shr
out
pop
pop
xchg
fs
inc
movs
outs
mov
retf
repnz
dec
or
sub
push
loope
jmp
lock
pop
je
pop
mov
cmps
int3
clc
jecxz
lods
inc
fild
xor
fimul
cld
adc
xor
gs
mov
cld
cmps
mov
out
mov
retf
sahf
shl
push
dec
movs
fcmovnu
mov
ret
push
cmp
cs
lds
adc
(bad)
sbb
xlat
inc
or
(bad)
pop
xor
les
mov
push
push
ja
(bad)
aaa
pop
scas
push
dec
or
xchg
sbb
sar
call
imul
cmps
inc
xor
xor
push
or
in
sbb
pop
icebp
sbb
sub
popa
and
sbb
mov
pop
xchg
pop
jle
jmp
jmp
and
call
stos
adc
call
inc
dec
mov
cld
cmp
jmp
or
cmps
add
cwde
mov
lods
mov
cwde
adc
stos
jb
dec
jb
jecxz
aad
mov
cmp
xchg
fwait
pushf
scas
call
inc
mov
add
les
or
pop
mov
push
mov
int
push
dec
xchg
push
fimul
fsub
movs
inc
pop
jp
dec
sbb
leave
jmp
fidivr
pop
mov
(bad)
ins
rcl
call
test
stos
sbb
adc
loop
stc
xor
xor
sbb
sub
imul
inc
mov
hlt
cld
jne
and
adc
push
mov
std
jg
fisttp
adc
retf
cs
test
xchg
stos
ret
test
pop
and
(bad)
nop
mov
pop
stc
leave
push
mov
ficom
push
(bad)
fstp
shl
xchg
int3
pop
cmps
iret
adc
imul
cmp
repz
loope
push
test
and
mov
xor
jbe
test
in
aam
mov
inc
aad
shr
push
lahf
cmps
add
call
and
sub
out
sbb
jg
pusha
cmc
in
add
call
mov
ja
outs
xchg
stos
pop
push
scas
jl
int
xor
outs
fs
dec
push
out
jg
jnp
dec
jo
fadd
sbb
cmp
xchg
cmps
jmp
push
aam
pop
lock
cmp
push
xchg
pop
mov
inc
add
mov
test
add
jecxz
adc
cmp
adc
data16
in
cli
clc
inc
test
loopne
ins
enter
push
sbb
and
(bad)
shl
std
add
outs
cmp
pop
fs
add
movs
fbld
int
adc
js
icebp
inc
xchg
jno
mov
cs
or
ja
ret
sahf
sahf
xor
enter
xor
sbb
cmc
sahf
rcl
idiv
popa
(bad)
push
and
imul
pop
fstp
jb
les
cmp
and
lods
or
lods
dec
sub
nop
sub
cmp
arpl
stos
call
and
and
push
xor
sub
push
mov
jae
cli
or
jp
les
push
pop
inc
xor
imul
cmc
pushf
jecxz
cmp
or
jmp
std
push
add
sbb
xor
inc
ins
(bad)
int
shr
outs
and
movs
cld
dec
in
ror
push
jp
out
jb
jns
push
mov
pop
mov
lea
js
sbb
enter
shl
jb
push
jl
xchg
sbb
sub
fnstcw
add
dec
push
shl
xor
stos
or
test
sub
(bad)
ficom
in
push
ss
rcl
cmc
cmp
jmp
push
mov
or
jmp
imul
lea
stc
sbb
cdq
inc
jns
stos
pop
bound
loope
inc
push
sub
sbb
or
add
jmp
add
mov
jnp
je
jp
out
sub
sbb
cmp
xchg
ja
sbb
jecxz
cmc
sub
mov
fs
call
sbb
or
lods
scas
pop
jle
sub
cs
es
push
pop
cmp
stos
loop
mov
inc
push
(bad)
out
cmps
push
mov
xchg
out
inc
mov
pop
mov
mov
pop
fnclex
xchg
cs
jle
cld
xor
fist
or
dec
fimul
pop
xor
adc
jne
dec
push
cmps
mov
add
jl
or
sub
push
mov
adc
adc
sbb
push
add
dec
cs
xor
ror
jl
sbb
call
add
dec
pop
mov
addr16
jbe
mov
push
imul
imul
std
jb
jecxz
pop
and
or
(bad)
lock
push
imul
in
jmp
push
inc
repnz
mul
xchg
sub
(bad)
jg
sub
arpl
das
dec
shl
cmp
jns
or
int3
fs
aas
pop
xor
movs
jo
xor
xchg
mov
inc
xchg
add
mov
es
push
and
add
in
psrlw
adc
or
dec
fistp
inc
repnz
shl
movs
fist
push
loopne
mov
xchg
mov
mov
leave
and
pop
jo
adc
push
shl
xor
pop
and
add
xlat
cdq
mov
rcr
repnz
data16
call
cli
jo
mov
sti
cmp
sub
sar
cdq
and
rcr
mov
push
pop
inc
mov
stos
or
loop
mov
push
add
adc
js
shl
aaa
push
arpl
movs
ret
in
mov
mov
push
push
es
mov
mov
dec
gs
add
(bad)
sub
or
out
movs
mov
inc
jne
push
in
xor
shr
jns
jecxz
inc
stc
cmp
enter
retf
jmp
ja
std
xchg
jo
cmp
pop
cld
xchg
xlat
popf
repnz
mov
mov
repz
inc
das
jle
xchg
ins
test
sub
iret
jns
rcr
ja
xor
sbb
les
add
mov
adc
and
into
std
mov
mov
dec
std
out
arpl
or
loopne
pop
inc
jnp
inc
repz
daa
leave
and
xchg
cli
jnp
push
daa
push
mov
int
dec
shl
jo
cld
pushf
adc
cmp
push
sub
or
loop
push
cmc
mov
mov
add
and
mov
xor
jmp
push
or
push
pop
mov
popf
loop
je
push
sub
add
mul
adc
mov
cmp
jbe
in
mov
je
xchg
ficom
jmp
clc
imul
aad
je
jmp
adc
pop
fnsave
fcmovu
dec
xor
sub
add
mov
add
add
aad
mov
shr
sbb
call
push
xchg
sub
push
stos
mov
push
pop
retf
cmps
fnstcw
scas
push
out
out
out
cmp
outs
pop
push
aam
in
inc
lds
cmps
idiv
push
dec
idiv
push
popf
sar
dec
lods
pushf
dec
test
inc
enter
fwait
loop
hlt
and
nop
ds
ret
loop
ja
add
push
int
mov
jbe
loop
jbe
xchg
scas
push
xchg
outs
or
mov
jns
fldenv
dec
mov
rcr
cmc
add
push
daa
cmp
call
les
mov
jg
ins
in
mov
sbb
cmp
test
(bad)
leave
daa
out
mov
fwait
les
push
ins
aad
sub
xchg
mov
inc
dec
stos
call
ret
pusha
inc
and
xchg
(bad)
rol
imul
push
pop
mov
int3
push
mov
pop
idiv
xchg
test
inc
cmp
pop
xor
(bad)
fwait
cld
neg
imul
lds
add
add
cmp
sbb
fcomip
pop
int3
ja
push
popf
outs
hlt
rcl
arpl
push
scas
aas
xchg
je
dec
jl
xchg
ins
lods
fwait
adc
jle
lahf
mov
jb
shr
xchg
ss
push
mov
lods
cmp
sub
into
out
mov
push
arpl
out
repnz
std
mov
popf
addr16
popf
jle
push
cmps
loope
ret
mov
dec
int
repz
(bad)
jmp
nop
dec
hlt
mov
sub
add
es
mov
imul
sbb
int3
and
mov
cmp
lock
mov
mov
jnp
in
cmp
outs
add
jbe
mov
jecxz
mov
imul
hlt
cmp
jg
sbb
enter
ja
dec
int
push
xor
sbb
loope
dec
cmps
add
dec
test
dec
cmp
bound
movs
push
jo
test
sub
push
frstor
sub
adc
lahf
scas
rol
or
add
dec
scas
test
xchg
jle
mov
lds
mov
test
add
cmp
push
sub
fs
push
daa
dec
dec
pop
div
(bad)
push
mul
lahf
push
jae
out
pop
test
fild
fstp
pop
dec
outs
or
js
xchg
mov
ss
xchg
and
clc
adc
js
mov
out
xchg
std
push
adc
rol
ins
es
dec
mov
jmp
arpl
aas
mov
push
pop
or
enter
sbb
(bad)
push
ds
lds
xor
out
loope
cmp
sbb
or
push
lea
push
add
out
(bad)
xchg
clc
imul
or
mov
mov
std
out
ja
mov
sbb
aas
jnp
sbb
aas
test
pop
mov
push
ret
sub
xlat
mov
adc
movs
dec
and
push
lods
call
cmp
dec
mov
test
adc
not
or
pop
sbb
pushf
cmps
push
dec
shl
aas
mov
mov
sub
jp
(bad)
cld
daa
sub
in
mov
xchg
(bad)
ss
into
add
sbb
add
out
mov
rol
std
scas
ds
loope
mov
sub
mov
lea
shl
sahf
ins
or
adc
cwde
pop
sbb
xor
test
jne
mov
mov
ja
push
lahf
cmp
shr
ret
fistp
adc
pop
adc
cmp
pop
inc
outs
inc
cmp
and
clc
sub
call
sbb
or
lods
pop
enter
dec
cli
cmps
add
push
lock
mov
rcr
sub
push
sub
push
push
or
hlt
dec
push
test
jg
xor
idiv
in
push
mov
repnz
mov
leave
mov
fcomp
pop
lea
push
(bad)
mov
pop
leave
out
outs
dec
or
mov
push
xchg
aas
int
imul
and
and
jp
outs
bound
sbb
pushf
cmp
test
rcr
and
(bad)
ja
rcr
cmps
hlt
(bad)
cmp
addr16
jmp
add
mov
loop
push
sub
(bad)
and
sub
inc
pop
dec
lahf
js
stos
mov
fldenv
movs
sub
jae
ds
(bad)
add
test
inc
shr
mov
xchg
jp
je
push
(bad)
enter
movs
addr16
inc
xchg
xchg
test
inc
push
inc
dec
lods
xchg
loope
loope
je
je
dec
jno
jg
push
cwde
mov
jge
test
and
in
and
mov
add
mov
push
cwde
xchg
cmp
data16
rcl
imul
cli
push
jp
dec
mov
je
into
stos
shr
retf
mov
repz
fsub
cmps
push
outs
out
jae
lds
cdq
push
popa
test
jle
loop
cwde
lds
push
sbb
add
in
cmp
loope
shl
arpl
(bad)
jnp
scas
or
mov
add
mov
push
test
push
popa
loopne
push
js
or
aad
or
ret
clc
lods
push
in
dec
stos
xchg
or
stos
xor
cmp
pop
jmp
mov
cmp
sar
ror
mov
cmp
inc
rcl
and
arpl
jmp
or
call
fmul
xor
xchg
inc
sub
popf
push
and
pop
addr16
dec
imul
movs
fdivr
pop
or
outs
sbb
(bad)
push
(bad)
xor
cwde
les
adc
in
call
push
and
dec
fcomp
fisub
xor
aas
inc
jg
xchg
test
(bad)
push
inc
imul
bound
int
jns
cdq
icebp
push
dec
sbb
lods
mov
cmp
inc
mov
sub
push
jg
jge
outs
movs
aad
ins
leave
ins
fadd
repnz
or
pop
addr16
sbb
test
pusha
xor
dec
mov
dec
(bad)
jo
in
inc
jp
xchg
bound
or
sbb
loope
cmp
xor
fadd
sbb
gs
fcom
mov
cli
push
dec
inc
cmpxchg
das
fist
(bad)
xor
stc
ss
or
dec
add
pop
or
lahf
mov
in
mov
inc
ins
jno
int
inc
popf
inc
pop
push
data16
aas
loopne
mul
aaa
sbb
das
mov
mov
and
stc
jnp
push
lods
and
dec
push
outs
xchg
popf
xor
push
sbb
sub
imul
lock
movs
ret
cmp
dec
push
cwde
jg
adc
push
sub
dec
fsubr
pop
dec
xchg
ins
mov
mov
sub
aad
cmp
ror
mov
fst
sub
mov
sbb
nop
inc
cmp
shl
push
(bad)
cwde
sbb
inc
adc
outs
clc
push
rcr
adc
in
retf
mov
hlt
aas
fimul
jae
mov
add
sub
mov
cdq
mov
shr
mov
inc
inc
fst
xor
jbe
and
aas
cmc
leave
(bad)
pop
mov
pop
pop
mov
pop
jmp
pop
jl
mov
mov
inc
xchg
aas
add
xchg
es
lods
adc
sub
sub
mov
pop
or
mov
push
scas
jge
je
(bad)
adc
xchg
fidivr
xchg
mov
mov
mov
cdq
js
lahf
pop
out
jmp
push
mov
pusha
ret
or
fbstp
mov
mov
mov
inc
push
xor
les
es
(bad)
or
add
adc
shl
mov
js
jae
fwait
push
xor
xchg
add
sub
rcl
pop
mov
jecxz
mov
add
or
jge
mov
sub
dec
jl
movs
cmp
loopne
mov
mov
push
aas
(bad)
jbe
repnz
inc
pop
mov
sub
rol
jmp
fldenv
sub
and
fild
lock
fcmove
or
nop
retf
jl
fdiv
sar
outs
retf
inc
sbb
aad
fisub
adc
std
into
or
ja
stos
ins
adc
sbb
scas
push
and
mov
sar
xchg
in
add
dec
sbb
adc
dec
rcr
loopne
outs
adc
adc
les
push
int
lods
sbb
and
mov
or
int3
inc
movs
xchg
cmp
pop
es
repz
leave
inc
shl
pop
scas
cmc
ror
inc
jb
sub
xor
(bad)
mov
enter
cs
clc
daa
lock
imul
mov
xlat
push
mov
xor
cmp
outs
sbb
stos
mov
das
cmps
push
mov
loop
cmp
and
jne
je
es
jmp
imul
ja
sub
into
jne
xchg
test
add
outs
cmp
dec
cmp
xchg
sbb
sub
xchg
shl
sti
lds
out
xchg
loope
or
(bad)
fsub
push
or
mov
movs
cmp
mov
xchg
and
not
jb
mov
inc
mov
test
mov
(bad)
sub
dec
and
sbb
test
sbb
mov
pop
mov
in
and
adc
test
xchg
push
fstp
retf
sti
mov
jmp
mov
cwde
and
xor
sub
dec
mov
cli
adc
bnd
fisubr
fcom
scas
pop
mov
xchg
push
je
cwde
dec
pop
addr16
scas
bound
dec
xchg
jmp
dec
cli
pusha
push
xlat
xchg
pop
stos
outs
shl
or
mov
jno
dec
inc
shr
imul
outs
cmps
scas
jbe
movd
jg
xchg
jnp
push
jmp
and
add
xchg
test
jb
mov
pop
fwait
xchg
xchg
adc
js
pop
sub
call
ja
mov
jmp
ins
sbb
sbb
jns
inc
arpl
movs
ins
xchg
mov
jno
test
gs
fwait
mov
mov
shl
bound
ror
mov
and
sti
inc
inc
fadd
add
xor
dec
adc
inc
dec
in
daa
adc
fadd
and
push
inc
mov
(bad)
push
pop
mov
ss
int3
dec
fwait
push
xchg
fst
iret
add
push
ja
xor
cmp
cmp
mov
sbb
ja
cmp
jne
int3
pop
push
xchg
push
out
pop
adc
cmp
or
mov
pop
mov
jmp
sub
in
mov
pop
inc
sub
ret
xor
cmc
inc
scas
push
jg
in
in
adc
adc
fbstp
cld
mov
pop
add
pop
fisttp
mov
fisubr
sbb
aam
das
adc
clc
icebp
fstp
push
ins
int3
add
test
jecxz
gs
pusha
sub
fcom
fistp
dec
idiv
stos
sub
ror
cmp
dec
cmp
ds
inc
cwde
cmp
jecxz
ja
stos
test
and
inc
dec
int3
ss
hlt
neg
cmp
sbb
(bad)
cwde
popa
jbe
xor
mov
fmul
add
add
data16
(bad)
lahf
pop
cmps
jmp
nop
jns
sub
nop
mov
push
outs
xchg
xor
ret
icebp
xchg
add
ret
and
repnz
sub
sub
call
xlat
iret
popa
and
or
mov
pop
push
push
retf
adc
sub
in
pop
mov
test
cmp
(bad)
iret
loop
mov
mov
jecxz
fnsave
or
lea
sbb
cmp
fbld
fld
sti
jnp
mov
outs
dec
add
mov
fmulp
xchg
push
inc
dec
retf
mov
outs
mov
xchg
scas
popa
fild
mov
sbb
jbe
repz
sub
xchg
outs
inc
arpl
cld
xor
mov
xor
mov
dec
popf
jne
jmp
ret
fiadd
dec
(bad)
iret
cmps
or
mov
cld
jne
push
out
fisub
test
(bad)
mov
out
pop
mov
push
in
movs
ror
enter
out
inc
add
sar
or
jnp
or
and
cwde
jmp
mov
pop
push
in
pop
aaa
dec
popf
int3
pop
ret
jg
add
adc
mov
sub
add
jecxz
push
(bad)
std
std
sbb
inc
cmp
adc
xchg
sbb
(bad)
pop
sub
jnp
ins
ret
rol
ficomp
sbb
fld
js
(bad)
adc
sbb
mov
movs
popf
sbb
aam
sahf
push
and
sub
mov
xchg
push
push
daa
fdiv
or
out
push
push
dec
lods
pusha
aaa
mov
sbb
add
test
cmp
or
adc
(bad)
adc
aaa
mov
xor
or
popf
xor
ins
cwde
ret
fistp
mov
aas
in
push
test
out
shl
cli
xchg
push
out
xchg
cmp
fwait
push
mov
mov
and
stc
jecxz
in
inc
jae
or
mov
call
movs
mov
call
mov
fldenv
push
or
test
fs
into
jne
sbb
xchg
pop
inc
add
jecxz
ret
mov
xlat
xchg
mov
sub
and
mov
dec
jge
or
xlat
outs
push
cmp
outs
cmp
xlat
popa
xchg
and
push
or
out
(bad)
clc
xor
hlt
or
push
or
aad
retf
scas
xor
or
jo
outs
mov
inc
test
jne
push
and
jle
fdiv
aam
xor
out
cmps
out
mov
sbb
fadd
jg
fisub
sbb
jnp
jae
mov
out
es
scas
aad
loope
sbb
add
imul
daa
pushf
jle
cdq
push
add
ins
hlt
imul
sub
xor
(bad)
xor
mov
push
ins
adc
sti
pop
mov
aas
sub
adc
inc
(bad)
cmp
pop
jg
inc
ret
mov
mov
fmul
popf
movs
shr
bound
je
outs
pop
add
mov
mov
and
ret
out
fwait
outs
jp
dec
or
mov
out
cmp
popf
jecxz
test
xor
sub
push
test
jmp
add
xor
inc
das
ss
inc
and
imul
or
mov
add
lds
or
or
aaa
cmp
push
jne
pop
cmps
es
cwde
xlat
retf
scas
dec
and
fidivr
jmp
daa
inc
enter
iret
(bad)
aad
cmps
das
addr16
xchg
jg
hlt
push
aaa
sti
mov
(bad)
xchg
rol
jge
fnstenv
jge
lds
xchg
shl
rcr
shl
jecxz
sbb
jecxz
mov
or
sar
inc
jnp
rol
es
push
ins
repz
sub
adc
add
fcomp
out
outs
jle
sar
pop
or
inc
or
ins
arpl
test
inc
jge
xlat
adc
xchg
in
ret
iret
sbb
rcl
or
jns
xlat
mov
dec
mov
jg
adc
sar
dec
icebp
xor
adc
xchg
pop
scas
jae
in
int
xchg
cs
dec
into
stos
jne
cs
pop
ins
mov
cmp
cwde
shl
retf
sbb
lea
cmc
push
inc
inc
std
out
retf
sub
jb
push
out
lods
jg
inc
and
push
add
fimul
adc
or
sub
retf
scas
cli
std
and
or
scas
sub
push
daa
dec
push
push
fisub
je
add
ss
xor
jp
aaa
add
cwde
cli
and
push
xor
push
or
loopne
popw
push
xlat
ins
sbb
dec
dec
fnstenv
and
test
(bad)
cmc
lahf
push
or
mov
stos
dec
sbb
cmp
push
lea
mov
hlt
(bad)
lea
(bad)
aam
icebp
int3
std
int3
aas
or
call
cmp
lahf
and
push
jbe
inc
xchg
adc
jge
adc
mov
retf
push
push
adc
mov
ret
or
and
or
mov
repnz
fidivr
(bad)
outs
cli
jle
repnz
jmp
pop
movntps
rol
xchg
push
fcom
pop
rcr
xchg
mov
jno
ret
mov
xchg
sbb
cmp
cld
push
xchg
sub
retf
add
fnstenv
pusha
add
fcom
dec
mov
cmp
aad
dec
imul
jmp
dec
and
push
out
mov
adc
sbb
xchg
lods
daa
sub
scas
xor
dec
xchg
retf
movs
or
test
not
test
inc
sub
xchg
fdivp
mov
rcl
call
sub
pop
loope
js
cmp
jecxz
mov
mov
pop
mov
stc
fcom
mov
sbb
cmps
dec
jmp
adc
mul
pushf
addr16
mov
and
gs
and
jb
data16
repnz
mov
sti
xchg
add
xor
out
sbb
jb
out
mov
ins
jnp
(bad)
in
es
push
jnp
out
aam
addr16
pop
mov
out
rcl
xchg
xor
add
dec
adc
test
test
dec
aad
and
sub
inc
iret
pop
pop
push
or
out
or
sub
push
mov
loope
clc
retf
or
sbb
sbb
xchg
out
push
sar
popf
adc
aad
ins
add
and
into
dec
pop
xchg
repz
sbb
ja
add
cdq
test
mov
xor
mov
or
mov
jns
push
cdq
test
rcr
cmp
cmp
fist
out
call
push
xchg
stc
stos
test
pop
hlt
push
or
push
adc
retf
jnp
inc
ins
out
or
push
cmp
jge
sbb
mov
ins
xchg
add
ss
sub
sbb
sbb
ss
push
popf
ret
call
mov
stos
int
and
pushf
es
enter
nop
mov
mov
inc
xor
xchg
mov
jb
in
push
cmp
and
daa
cmp
std
movs
movs
inc
fwait
fs
cmp
(bad)
out
inc
dec
rcr
movs
push
dec
sub
outs
add
pop
into
scas
jbe
mov
inc
call
out
inc
aas
ret
mov
adc
retf
sub
data16
out
xchg
jmp
cmc
push
xor
mov
pop
call
jle
xchg
jnp
fnstenv
lock
aas
repnz
pop
and
pop
and
rcl
stc
in
push
packuswb
call
jbe
gs
aaa
sbb
ret
xor
cld
xor
and
push
cmp
push
ret
out
mov
pop
stos
out
icebp
jle
test
into
ret
addr16
cmp
lea
push
jecxz
dec
cmp
push
mov
mov
out
(bad)
leave
movs
mov
leave
aam
sbb
neg
jae
sbb
cwde
xlat
jge
das
mov
in
jge
mov
mov
jp
xchg
fist
arpl
xchg
lea
ins
sbb
adc
js
mov
adc
movs
aaa
jg
mov
lock
popf
fxtract
mov
adc
imul
aad
fs
push
test
in
xor
ja
pop
retf
lds
and
int
and
fnsave
mov
shl
xor
inc
jbe
pop
daa
daa
mov
and
dec
mov
loope
mov
sahf
dec
cmp
xchg
jmp
enter
imul
fwait
sbb
std
adc
div
jge
fsubr
je
and
fld
addr16
push
scas
jmp
imul
dec
test
leave
mov
xor
(bad)
out
arpl
(bad)
pop
inc
xor
xlat
(bad)
mov
les
push
jae
std
mov
sahf
add
ror
add
push
mov
sub
iret
jmp
cmp
and
xor
je
mov
clc
push
and
pop
ja
and
out
add
xor
pushf
mov
adc
and
and
in
shl
xchg
push
jp
dec
stos
inc
sub
int3
out
cmp
jae
dec
sahf
cwde
dec
(bad)
lock
mov
add
sub
xor
mov
enter
test
fcomp
shr
push
cmp
mov
js
sbb
mov
gs
enter
jb
sti
sub
jmp
adc
jmp
loope
xlat
xchg
jb
cli
ja
imul
mov
cs
xchg
int
mov
or
out
out
leave
mov
dec
fstp
aaa
xor
mov
(bad)
fwait
stos
arpl
mov
pop
jge
into
adc
jns
push
push
ret
loope
jns
sahf
push
and
sahf
popa
or
pop
jg
mov
das
push
jnp
out
sub
sbb
and
cmc
jle
lock
pushf
jecxz
out
neg
enter
xor
js
jl
jns
neg
add
and
dec
movs
jns
out
pop
jle
xlat
jb
dec
fidiv
in
pushf
add
lds
jecxz
retf
xor
pop
mov
mov
jp
test
mov
fs
xor
mov
repz
inc
xchg
fsubr
sub
neg
xlat
cmp
ret
mov
lea
dec
and
or
cmps
xor
jp
imul
cmp
pop
out
movs
cli
push
and
inc
jp
lods
xor
iret
fdiv
gs
cmp
and
adc
push
daa
xchg
xchg
mov
mov
imul
jns
data16
mov
or
xchg
xor
ins
jecxz
arpl
stos
sbb
mov
cmp
loopne
inc
jo
cmp
xor
inc
shr
int3
add
aam
test
adc
mov
ins
inc
lock
aam
pop
repnz
fst
xchg
push
out
hlt
retf
cmp
jnp
out
and
inc
jl
pushf
sbb
cmp
pop
or
push
imul
xchg
fwait
push
fisttp
and
add
sbb
or
adc
in
sbb
lods
std
mov
pop
dec
(bad)
jecxz
mov
test
fist
lds
add
fwait
das
push
loopne
shr
inc
xchg
push
icebp
cmp
xchg
(bad)
and
adc
loop
(bad)
sub
gs
sub
fadd
fdiv
adc
mov
or
push
pop
(bad)
addr16
arpl
pop
pop
sbb
xor
cmp
fsub
xlat
in
push
mov
mov
mov
lock
sahf
inc
clc
in
and
das
imul
jle
and
sub
jnp
ffreep
pop
outs
mov
fmul
add
sti
sbb
sub
pop
cmp
stc
loop
inc
mov
mov
inc
push
dec
jmp
jg
(bad)
sub
xor
sahf
dec
mov
sub
out
mov
icebp
mov
call
shl
add
repz
call
popa
leave
mov
xchg
jg
inc
es
mov
stc
sbb
rcr
clc
js
fild
shr
sahf
pop
mov
mov
addr16
push
pushf
sti
mov
and
popa
mov
pusha
lods
in
push
and
mov
mov
pop
sbb
mov
mov
iret
xchg
push
iret
mov
scas
inc
xor
in
(bad)
ss
mov
pop
fisttp
or
mov
dec
xchg
call
and
call
js
add
or
cmc
mov
pop
sbb
pop
(bad)
loopne
out
fidiv
sbb
daa
stos
movs
shl
hlt
xor
jle
xor
mov
adc
or
and
repz
xor
cmp
and
mov
push
and
enter
jmp
(bad)
imul
cmp
adc
jnp
mov
(bad)
jo
es
adc
(bad)
mov
(bad)
and
aad
pusha
xor
out
adc
rol
adc
add
sbb
(bad)
mov
outs
std
pop
jbe
or
lahf
adc
xchg
fwait
sub
into
in
mov
jbe
inc
lahf
cwde
sbb
dec
test
in
outs
adc
jo
stos
ins
cli
sbb
xchg
outs
movs
push
xchg
push
sub
cdq
dec
xchg
out
(bad)
idiv
dec
shl
shr
data16
shl
sahf
jbe
imul
mov
out
call
outs
cwde
xor
iret
dec
pop
add
je
or
fisttp
ins
scas
and
or
lods
mov
das
outs
mov
inc
mov
mov
xchg
jns
pop
add
call
lea
out
add
push
sub
jnp
push
fwait
jno
aam
hlt
push
movs
cmps
clc
mov
movs
mov
test
fldenv
ds
mov
scas
sbb
dec
test
aaa
aas
jmp
push
(bad)
cmps
rcr
in
imul
(bad)
xor
push
sti
mov
icebp
lahf
xchg
ret
mov
pop
pusha
xor
adc
or
push
jmp
jne
inc
pop
inc
adc
retf
sbb
stos
aad
add
jno
test
das
mov
(bad)
(bad)
jmp
adc
mov
and
mov
imul
sbb
(bad)
fistp
adc
out
(bad)
leave
sub
mov
je
mov
into
loope
mov
daa
xchg
icebp
dec
cmp
test
xchg
cmps
pop
push
dec
sub
and
dec
jmp
xchg
push
jne
mov
shl
xchg
inc
fisub
sub
sub
dec
add
xor
scas
jecxz
in
jno
gs
mov
dec
repnz
lea
fdiv
mov
dec
nop
shl
nop
sub
xchg
pop
mov
jl
mov
ja
das
ds
or
stc
cmp
std
add
cmp
adc
add
jg
mov
mov
push
(bad)
mov
add
xchg
or
add
(bad)
(bad)
sbb
fcmove
(bad)
xor
pop
cmp
mov
cmp
lods
jmp
stos
adc
(bad)
dec
jg
xchg
fsub
(bad)
call
sbb
ja
push
jns
sbb
or
test
cld
fbld
sbb
push
push
jb
inc
pop
push
retf
mov
loopne
nop
and
cmp
ins
mov
xor
jmp
push
fldenv
jbe
(bad)
push
mov
add
std
ret
sbb
test
mul
xchg
xchg
push
jne
sub
cwde
pop
iret
setae
inc
ins
jp
jmp
retf
in
out
data16
scas
(bad)
imul
in
mul
loope
xchg
and
aad
push
and
dec
dec
bound
mov
cli
push
cmps
adc
inc
pop
mov
adc
pusha
leave
xchg
push
xchg
mul
pop
(bad)
daa
cmps
add
push
xchg
push
pop
and
or
ss
pop
ins
arpl
stos
push
cmp
lds
hlt
push
jae
pop
(bad)
xor
add
ret
jl
pop
adc
test
out
jns
push
outs
iret
cmp
mov
jno
sub
loopne
aas
xchg
and
stos
cmp
push
mov
aaa
adc
lahf
or
sub
mov
and
mov
fidiv
(bad)
cld
sbb
push
xchg
rol
clc
out
outs
mov
mov
lahf
out
adc
cs
jne
and
mov
(bad)
ficom
xchg
ins
and
scas
mov
cmp
(bad)
data16
popa
push
or
fisttp
mov
adc
and
mov
inc
rol
mov
cwde
push
call
push
push
jmp
ret
aam
push
retf
inc
mov
clc
fwait
stc
cmp
out
scas
push
std
mov
xchg
lods
cdq
inc
jecxz
xor
sysret
or
data16
sub
iret
out
jo
daa
xor
loop
and
sbb
mov
jbe
sub
jne
sub
mov
ret
inc
sti
pop
cld
test
ja
xor
or
out
cs
mov
mov
mov
inc
leave
sub
and
int
dec
nop
loope
repz
or
addr16
sysexit
jl
pop
and
ins
lahf
ins
out
mov
fsubr
sub
mov
push
sbb
push
inc
retf
mov
leave
stos
adc
aas
int3
sbb
xlat
ins
xchg
adc
mov
fiadd
fild
pushf
ja
xchg
or
pop
jb
adc
fistp
sub
outs
sub
loop
xor
ins
stos
pop
jl
inc
in
jle
cmp
adc
pop
dec
shl
arpl
(bad)
in
loope
imul
fwait
and
or
push
pop
into
adc
mov
les
xchg
mov
or
aam
fldcw
test
sbb
inc
push
sbb
xor
jb
mov
xor
pop
sub
arpl
pop
sbb
xchg
xor
mov
push
add
jge
inc
ins
jno
int
dec
and
cwde
std
loopne
xchg
xor
mov
icebp
and
jb
out
adc
xchg
xor
cmp
stos
mov
lds
gs
push
push
inc
mov
mov
js
inc
pop
imul
jmp
js
lods
sub
mov
and
cmp
push
or
mov
out
in
imul
test
bound
rcl
idiv
out
jecxz
mul
fwait
adc
pop
es
repnz
sbb
adc
loopne
aam
jge
loopne
ror
jb
mov
mov
adc
(bad)
movs
mov
jmp
and
mov
mov
jle
das
mov
fs
jmp
arpl
inc
inc
sub
movs
aas
dec
dec
push
lods
lahf
(bad)
repz
inc
mov
repnz
iret
iret
inc
mov
lds
outs
shr
bound
or
cli
jae
jae
jbe
in
push
ins
(bad)
mov
and
ret
inc
pop
(bad)
pop
xor
fisttp
add
or
or
sub
jl
stc
jmp
mov
stos
dec
mov
lods
cld
fsubr
gs
dec
rol
popf
pop
rol
pop
popa
add
sbb
loop
neg
ja
mov
repnz
xor
xor
(bad)
mov
test
lock
outs
sub
fsubr
(bad)
fstp
pop
pop
call
cmp
sbb
adc
sub
imul
iret
repnz
aaa
xor
sub
or
imul
imul
test
(bad)
mov
sti
js
movs
arpl
sub
mov
loopne
sti
pop
popa
push
mov
stos
inc
jp
cmp
adc
out
retf
mov
cmp
ins
test
and
ror
popf
movs
mov
xchg
mov
cmp
in
fwait
fwait
or
out
aaa
imul
stos
jmp
test
jl
mov
mov
and
cmp
wrmsr
adc
bound
cmp
adc
sahf
leave
aas
push
mov
test
cld
stos
sub
push
mov
data16
out
or
out
push
int
je
scas
out
stc
xor
sub
push
arpl
pop
scas
jecxz
push
movs
bsr
out
leave
outs
push
add
add
cmp
(bad)
repz
stos
lods
dec
and
or
sbb
loop
arpl
dec
and
mov
sub
inc
adc
shl
pop
xchg
cmp
pop
popa
(bad)
in
mov
cmc
xor
sbb
jbe
xlat
xchg
and
cwde
or
push
push
jmp
push
jo
gs
bound
or
xlat
jne
xlat
mov
jo
fs
aaa
jl
bnd
adc
xchg
sub
dec
push
xchg
or
add
lock
sub
dec
and
and
sub
mov
inc
fcomp
out
xchg
sbb
mov
jae
mov
pushf
sbb
jmp
jl
mov
mov
popa
test
inc
out
bound
fisttp
sub
in
jnp
cli
mov
mov
nop
lea
mov
out
lods
jne
jnp
and
repz
daa
imul
pop
test
mov
mov
dec
mov
inc
mov
scas
not
sub
(bad)
ins
les
mov
aaa
fidivr
lahf
push
int
out
push
mov
test
test
jg
lds
repnz
std
inc
adc
idiv
xchg
pop
out
arpl
jecxz
jecxz
clc
aad
xchg
add
inc
(bad)
jne
neg
sbb
cwde
out
sub
cs
cdq
jae
jo
adc
shl
sbb
sub
jmp
outs
imul
(bad)
fnstenv
fs
shr
jmp
adc
shl
dec
add
lods
pushf
push
das
out
add
rcl
add
sub
pop
stos
loopne
pop
mov
lds
call
mov
cmp
mov
pusha
std
js
sbb
arpl
outs
or
in
clc
(bad)
fistp
jmp
mov
aaa
jnp
jp
cmp
dec
add
ret
xchg
jge
or
ds
call
jb
pop
sub
pop
jp
jp
loopne
pop
push
push
jne
xchg
out
mov
dec
js
adc
cmp
out
sub
lock
pop
mov
aas
jo
sbb
xor
and
xchg
cli
dec
out
imul
pop
icebp
push
sbb
cmp
pop
in
and
das
loopne
(bad)
fs
movs
mov
add
ds
inc
repz
inc
clc
cwde
ins
mov
cmc
push
(bad)
cmps
jb
push
rcr
aas
fwait
push
call
adc
cmp
mov
jl
mov
pop
pusha
lock
movs
mov
sbb
add
dec
shr
and
icebp
inc
leave
cmps
mov
or
dec
arpl
scas
xchg
popa
mov
fiadd
mov
(bad)
mov
pop
les
retf
mov
sbb
inc
movs
inc
int3
pop
stos
inc
mov
shr
sub
outs
sub
js
or
je
ss
dec
jnp
pop
in
imul
aam
dec
movs
(bad)
iret
push
adc
inc
fs
inc
ds
sbb
cmovno
in
mov
xchg
jecxz
xchg
stos
dec
pop
xor
adc
gs
or
xchg
out
and
test
or
les
scas
xor
jns
cmp
xchg
add
xchg
jnp
imul
dec
push
pop
int
les
push
inc
mov
add
and
push
lods
hlt
loopne
out
fadd
test
dec
popf
pop
cmps
dec
popf
add
and
mov
sub
cli
rcl
pop
cs
mov
xlat
rcr
xor
push
mov
bound
dec
mov
mov
push
es
pop
in
jb
push
fsubp
inc
add
jge
pop
adc
dec
xchg
sbb
and
sbb
and
test
aas
cwde
or
cmp
inc
xchg
jo
xor
sub
mov
jns
out
jg
push
add
ficomp
jp
pop
gs
mov
test
inc
fcmovu
jns
mul
xchg
add
(bad)
xchg
test
inc
jbe
xchg
movs
push
in
enter
and
sub
jne
stos
xchg
mov
cwde
jg
xor
xchg
out
pop
pop
shl
pop
or
ret
inc
(bad)
retf
mov
fnstenv
lea
mov
pop
clc
or
cmps
ins
fadd
pop
popf
rcr
fsub
mov
in
test
xor
or
add
fcmovnb
and
fisub
in
bound
xchg
dec
mov
mov
mov
sar
push
(bad)
call
das
add
ja
pop
mov
(bad)
sti
aas
ins
(bad)
and
mov
fwait
xor
pop
and
add
mov
aam
jle
aaa
rol
rcl
xor
push
out
test
add
lds
or
lods
pop
int3
inc
push
push
jmp
loope
and
sub
mov
xor
sbb
fbstp
ins
sub
add
mov
out
clc
out
fisttp
into
sbb
inc
les
push
jae
jbe
daa
sar
in
imul
inc
push
mov
rol
pop
leave
mov
retf
push
xchg
sbb
movs
mov
adc
mov
or
inc
call
mov
inc
stc
shr
test
cmp
aam
ins
sub
jmp
cmc
out
data16
cmp
aaa
push
jecxz
cmps
inc
test
sbb
pop
les
add
cmps
push
mov
cmp
out
and
mov
inc
jmp
mov
stos
sub
adc
inc
push
sub
fadd
xor
pushf
aam
outs
or
jecxz
xor
inc
hlt
sub
xor
xchg
cmp
lds
fimul
mov
idiv
call
push
inc
out
dec
sbb
arpl
push
das
imul
push
jmp
call
jle
mov
cmc
cli
lahf
mov
das
fiadd
lds
dec
imul
sub
jle
daa
aaa
mov
imul
xchg
adc
xor
outs
int3
mov
push
add
sbb
loope
xlat
test
clc
js
fwait
inc
(bad)
aam
retf
add
sbb
adc
and
mov
sbb
mov
in
pushf
cmp
icebp
lods
mov
aad
int
pop
dec
in
add
sbb
into
scas
sbb
and
mov
mov
rcl
sti
clc
dec
out
push
mov
mov
or
mov
inc
pop
in
inc
jmp
cs
mov
add
sbb
sbb
cmp
jmp
aas
push
inc
jae
adc
les
xor
das
repz
dec
mov
outs
xor
cwde
inc
adc
leave
popf
pop
push
cmp
xor
sbb
fdivr
test
ja
(bad)
cmp
rcl
lea
jle
test
xchg
mov
bsr
pop
lock
sub
ficomp
pop
cmp
enter
push
push
pop
lods
and
rcr
fcomip
out
mov
pop
nop
loope
icebp
loopne
inc
jp
gs
(bad)
mov
test
and
inc
stos
mov
cmps
(bad)
int3
ins
jmp
call
jns
mov
xor
xchg
daa
movs
imul
out
cmp
cmps
repz
sar
rcr
outs
adc
adc
(bad)
xchg
out
cs
jo
lock
inc
scas
xchg
rcl
ret
mov
test
js
mov
adc
lea
mov
(bad)
and
retf
out
or
xor
loope
mov
test
add
mov
push
(bad)
(bad)
cmp
out
imul
ds
add
mov
dec
cmp
pop
xchg
outs
lahf
pop
mov
nop
fwait
sub
popa
sahf
sub
out
jo
xchg
test
pop
mov
(bad)
bound
and
jns
sub
and
(bad)
loop
bound
or
je
and
scas
popa
xchg
aam
jle
mov
es
push
out
inc
inc
gs
sub
jmp
aaa
pop
jb
dec
aam
int3
pop
call
ret
and
ja
jmp
or
lds
sbb
sub
iret
in
loopne
jnp
lahf
xchg
pop
or
into
into
sub
dec
adc
cmp
jge
or
fmul
sbb
xchg
jbe
sbb
pop
into
aas
call
jl
mov
dec
in
sub
adc
fs
jg
jp
push
ret
fiadd
pop
idiv
push
gs
mov
and
sbb
sub
push
sub
jmp
lods
xor
cmp
aas
mov
add
push
dec
call
cmp
ds
fisub
mov
lods
(bad)
push
xor
mov
adc
xchg
movs
iret
lods
mov
(bad)
push
scas
nop
jl
add
bound
adc
pushf
mov
adc
gs
pop
lock
cs
push
mov
sub
data16
jmp
xchg
jbe
mov
jnp
cmp
push
out
lea
push
mov
fldcw
push
add
ins
xlat
sub
dec
aad
clc
int3
push
cmc
not
leave
xchg
shl
lea
popf
stos
push
push
std
lea
or
ret
clc
or
push
dec
(bad)
je
jns
iret
xchg
les
or
xchg
inc
ror
leave
dec
loop
xchg
mov
and
imul
jae
out
arpl
imul
push
push
das
or
jl
or
idiv
cmp
popf
setp
popf
lods
xlat
movs
jmp
std
push
pop
(bad)
and
or
mov
add
xor
clc
outs
sbb
push
mov
out
cmc
repnz
pop
cmp
mov
cmp
call
mov
push
mov
add
sub
cmps
ins
out
test
pusha
sar
not
add
(bad)
idiv
mov
out
jmp
dec
inc
mov
cld
fidivr
out
mov
push
mov
retf
dec
jp
inc
mov
sbb
or
cmc
adc
leave
or
mov
xor
ins
ja
in
cmps
adc
jb
xchg
int3
lea
pop
xchg
fcmovne
mov
mov
cmp
push
xor
xor
xor
adc
mov
mov
pop
test
sbb
push
in
jbe
das
pop
mov
cwde
sub
or
sbb
pop
push
sbb
inc
int3
adc
cmp
fs
or
mov
test
lods
dec
push
les
std
or
adc
movs
jmp
popa
ret
pop
int3
add
xchg
add
or
ror
out
adc
mov
mov
or
add
test
cmp
pop
outs
in
push
jecxz
fidiv
lock
shr
xchg
push
mov
xchg
pop
pushf
scas
pusha
sbb
sbb
or
stos
push
mov
push
and
aad
sbb
in
mov
mov
pop
adc
std
mov
xor
mov
inc
ret
dec
lods
cmp
sbb
adc
jo
dec
cld
js
and
mov
inc
jle
jl
pop
in
and
and
mov
retf
add
push
push
cwde
popa
lock
xor
sti
outs
adc
mov
cmp
mov
fsubr
mov
into
stos
or
jle
pop
push
push
adc
cmp
cld
mov
pop
stc
inc
push
and
push
les
mul
cli
lds
push
dec
lahf
pop
(bad)
cli
jmp
vpshlb
pusha
or
jmp
das
adc
ret
daa
sbb
cmps
aaa
je
mov
test
sahf
xchg
test
rol
retf
or
pop
dec
loopne
mov
mov
sbb
rcr
pop
lods
ja
push
fadd
outs
mov
mov
jmp
rcr
sub
push
mov
and
mov
fadd
dec
jmp
int
test
jecxz
and
or
js
dec
fsubrp
rcr
bound
pop
ins
push
sub
jecxz
inc
test
xor
mov
aas
rol
(bad)
mov
dec
jmp
test
dec
fld
fadd
push
addr16
rcl
mov
xchg
push
sub
lods
scas
mov
enter
lods
or
add
jge
or
loope
fmul
add
dec
fnstenv
mov
mov
adc
inc
cli
xor
dec
imul
test
mov
ss
stos
cdq
hlt
dec
jmp
cdq
mov
sbb
fnstsw
jnp
inc
imul
pop
sbb
jl
mov
jle
outs
adc
int
loope
inc
aas
inc
adc
cli
push
xor
adc
mov
out
cmps
xlat
sbb
repz
test
xor
fld
mov
rol
aam
movs
push
jge
leave
mov
pop
sub
fnstsw
mov
scas
cmp
jge
xchg
pop
dec
stc
mov
xor
mov
cmp
test
push
push
mov
shr
stc
sbb
or
inc
adc
xchg
js
xor
in
(bad)
jp
push
sbb
ja
mov
xchg
gs
js
and
pop
ret
inc
scas
or
xor
jecxz
test
inc
dec
sbb
push
scas
and
es
mov
(bad)
adc
push
ret
xchg
xor
sub
cld
popf
pop
jnp
nop
gs
or
scas
popa
icebp
dec
xchg
scas
scas
mov
push
mov
ret
fistp
loope
stos
jbe
xchg
test
addr16
mov
xor
mov
xchg
cmp
mov
retf
sti
inc
jle
fld1
inc
cmp
adc
enter
data16
sbb
test
sbb
or
aas
gs
mov
xchg
and
fmul
loop
sub
dec
push
ss
in
mov
inc
mov
sti
mov
push
mov
lea
xchg
call
rol
dec
in
and
retf
mov
inc
repnz
(bad)
fwait
aam
(bad)
pop
dec
call
cmp
pop
add
xor
out
fldcw
out
neg
repz
shr
out
xor
push
pop
mov
push
push
push
pop
and
and
iret
adc
das
movs
xchg
fldenv
fs
(bad)
nop
lea
stos
jb
sub
leave
or
lods
aas
test
push
ins
mov
add
cmp
scas
shl
xchg
adc
cmps
ror
rcr
jg
mov
mov
lods
aam
fisub
pop
jo
xor
loop
cmc
test
gs
sbb
mov
push
addr16
pop
lea
sub
mov
sbb
and
adc
retf
mov
js
sub
cmps
int
sbb
cmp
arpl
pushf
or
out
xchg
out
inc
mov
cwde
xchg
ja
iret
icebp
cmp
xchg
jnp
into
sbb
sbb
ret
clc
hlt
(bad)
stc
aas
and
jle
cmp
sub
or
pop
sub
lods
or
cmp
cmp
push
mov
xor
data16
hlt
cmps
cmp
mov
loop
nop
aas
cld
xor
sub
xor
and
out
xor
or
or
fsubp
dec
xor
cwde
aaa
imul
cmp
pop
push
rcr
jl
loope
pop
hlt
pop
bound
jae
pop
sub
not
out
dec
mov
mov
dec
test
stos
and
repz
adc
mov
mov
inc
mov
jmp
loope
(bad)
sbb
into
mov
xchg
stc
push
jmp
push
xchg
xchg
cs
stos
int3
pop
cmp
mov
imul
(bad)
enter
enter
sbb
retf
xchg
jge
ror
scas
xor
inc
scas
adc
popa
and
mov
and
je
test
dec
leave
add
js
dec
pusha
ss
push
xchg
mov
xchg
xchg
lahf
hlt
pop
data16
shl
push
add
test
jmp
nop
into
pop
xchg
(bad)
call
jg
sub
jne
add
pop
aad
or
xchg
(bad)
int3
mov
(bad)
fwait
cmp
lahf
pushf
mov
movs
mov
jae
cmp
(bad)
leave
mov
xchg
inc
test
scas
jns
shl
not
adc
(bad)
ror
leave
lea
mov
sti
push
jbe
xor
mov
or
jae
repz
or
inc
bound
or
jae
and
inc
jbe
lods
ret
or
leave
push
jg
in
push
adc
icebp
mov
cmc
ins
(bad)
add
scas
(bad)
test
and
push
jg
je
xchg
mov
lds
call
xchg
cmps
xchg
ds
pop
xor
cmp
sbb
out
jae
mov
sbb
jmp
xor
fistp
push
sub
arpl
cwde
jecxz
sub
xchg
rol
adc
mov
push
sti
jp
das
ins
stos
(bad)
icebp
adc
or
push
icebp
sbb
and
pop
mov
add
in
sbb
ins
mov
popa
add
test
xlat
gs
pop
out
push
mov
std
test
jo
aas
mov
mov
sub
rcl
ret
cs
rol
out
hlt
jge
js
movs
mov
loop
test
xlat
push
adc
mov
cmp
pop
and
or
inc
xlat
or
dec
call
push
pop
pusha
inc
movs
dec
fdivr
dec
(bad)
in
push
arpl
sbb
pusha
push
out
dec
repz
pop
push
and
pusha
and
fisubr
lock
lahf
mov
adc
mov
and
sti
rcr
inc
add
mov
adc
jae
je
pop
iret
in
test
push
ror
ja
fisttp
loope
or
iret
cld
(bad)
push
pushf
add
jno
int
pop
cwde
mul
adc
push
dec
call
sub
mov
or
push
inc
mov
xor
aad
add
scas
adc
or
push
xchg
pop
xor
test
popa
call
cmp
aaa
imul
add
fld
jg
and
aam
inc
dec
enter
aas
sbb
and
dec
call
xor
js
mov
xlat
int3
shl
or
or
mov
ror
pop
das
pop
fldcw
addr16
push
adc
fsub
adc
mov
(bad)
adc
in
jmp
call
ins
test
jbe
call
cmp
ret
jl
mov
mov
cdq
test
lods
sub
repz
rcr
not
or
or
mov
leave
dec
push
xchg
sbb
inc
mov
dec
call
sar
out
popf
aam
or
cmp
arpl
inc
sub
(bad)
add
pop
js
aad
ds
xor
push
pop
aas
xor
or
sub
ret
jbe
scas
fild
inc
ins
repz
pop
jmp
cmpxchg
stc
(bad)
ficom
or
sub
xchg
lds
ficom
lods
mov
dec
lods
mov
inc
int
neg
je
xor
inc
inc
in
movs
jmp
idiv
and
call
push
jp
popf
ja
lods
gs
sbb
sub
or
test
leave
mov
scas
xchg
rcr
(bad)
std
xor
dec
and
push
jl
add
pop
scas
mov
and
xchg
sbb
xchg
imul
mov
nop
sbb
rcl
or
data16
sbb
(bad)
loopne
xlat
lea
xchg
jg
fmul
lahf
ja
ret
jmp
dec
mov
jns
in
out
stc
push
imul
daa
or
mov
aam
loope
cld
fsubr
sub
sub
pop
clc
std
add
jp
in
push
mov
je
inc
neg
sub
scas
mov
or
popa
mov
jmp
in
inc
jmp
adc
adc
sbb
test
inc
(bad)
stos
and
sbb
icebp
loope
sbb
nop
xor
aas
rol
pop
imul
mov
xor
inc
or
pop
pusha
jmp
mov
aam
add
cmp
loope
inc
int
inc
pushf
push
loopne
xor
fsubr
push
adc
popa
xlat
and
jle
xchg
loopne
shr
ror
out
inc
fs
xchg
hlt
dec
adc
stos
mov
ins
in
jmp
mov
xchg
movs
mov
push
ins
fadd
lods
fucom
ror
jo
xchg
into
mov
mov
cmp
enter
cmp
push
repnz
add
and
sbb
aaa
movs
leave
and
shl
jmp
aas
shr
ss
movs
fadd
mov
call
sbb
sub
movs
movs
test
fstp
xlat
das
or
push
gs
(bad)
fisubr
or
add
pop
pop
(bad)
rcl
mov
jo
mov
test
repz
in
mov
mov
mov
or
retf
(bad)
mov
sbb
xchg
add
adc
lods
push
pop
cli
aam
js
and
adc
jnp
daa
mov
xchg
shl
lock
cmp
cwde
aad
fmul
sub
inc
sub
lds
pusha
and
push
sub
mov
mov
fs
or
add
jmp
pusha
sub
sbb
mov
push
jne
rol
ret
pushf
dec
ret
test
sub
and
scas
mov
mov
aaa
lea
sub
lea
jns
rcl
lock
inc
jnp
int
inc
jl
add
outs
sub
jbe
shrd
mov
lods
lds
dec
stos
pop
dec
lods
and
push
jg
jnp
push
sub
and
jp
(bad)
adc
pusha
lods
daa
jae
imul
movs
clc
int
xchg
test
and
inc
cmc
push
xchg
out
outs
sar
ins
retf
out
(bad)
in
sub
rdmsr
movs
ins
aam
fsubr
enter
adc
add
mov
and
jo
ret
mov
test
mov
cmp
mov
stos
imul
sub
aad
mov
stos
(bad)
(bad)
xchg
adc
pop
pop
cmp
sahf
nop
xchg
iret
push
pop
(bad)
data16
cmp
clc
outs
loopne
into
push
das
sub
mov
push
xor
xchg
adc
cwde
jnp
dec
jo
dec
adc
push
sbb
int
xchg
inc
das
and
fs
pop
xlat
xor
add
sbb
jns
cmp
mul
push
ds
xchg
and
and
bound
dec
mov
xchg
or
add
pop
fiadd
test
mov
scas
addr16
mov
add
lods
jecxz
or
pop
push
cmp
xchg
push
(bad)
dec
js
sub
or
xchg
je
jmp
(bad)
jmp
jle
mov
push
out
mov
in
jl
xchg
xchg
sub
fsubr
stos
imul
inc
push
dec
add
sub
push
popa
or
test
pop
dec
mov
jae
imul
and
(bad)
in
or
test
call
test
cmp
pushw
(bad)
jle
sub
mov
dec
cmc
sbb
mov
xor
dec
push
sahf
shl
xchg
jmp
bound
sar
mov
cmp
scas
add
xor
inc
cmp
push
gs
in
rol
xchg
dec
mov
(bad)
mov
out
mul
jl
push
outs
jae
bound
fnstsw
stc
sbb
into
mov
mov
retf
push
sub
fcmovnbe
in
or
lea
dec
repz
out
scas
cli
inc
xchg
sub
dec
cli
ret
sti
mov
mov
jmp
xor
xor
lahf
inc
inc
shl
push
mov
dec
daa
push
xchg
aam
out
(bad)
sub
scas
mov
div
dec
cmps
in
data16
in
dec
cwde
loope
push
je
mov
jge
or
aad
xchg
mov
adc
sub
cmps
fcmovbe
add
jne
das
outs
cmp
(bad)
cli
xchg
rcl
dec
leave
add
push
adc
sbb
test
aad
fistp
xchg
in
push
jmp
or
imul
jnp
scas
dec
retf
cmp
jmp
jmp
pop
and
ins
xchg
jae
hlt
(bad)
jo
mov
das
push
dec
fcomp
pop
movs
bswap
xchg
mov
ja
aas
cwde
or
in
cwde
mov
bound
jne
jle
xchg
iret
lods
stc
inc
xor
pop
aad
fwait
xchg
test
and
cld
pop
repnz
inc
lea
sar
je
movs
retf
or
cld
xchg
(bad)
mov
push
ret
mov
adc
xor
outs
xor
imul
push
mov
cmc
xchg
sbb
loop
or
in
dec
push
mov
sbb
and
aad
or
iret
sub
and
jp
xchg
loop
push
dec
dec
ins
dec
dec
sbb
fisubr
(bad)
adc
jne
mov
xchg
cmp
cmc
add
xchg
(bad)
fmulp
pop
(bad)
xor
sbb
or
fwait
add
leave
ds
loope
shl
inc
je
add
leave
cdq
pop
ds
mov
sahf
sahf
aaa
mov
push
adc
jmp
inc
mov
inc
cmp
stos
pop
inc
sbb
in
sbb
dec
test
imul
push
push
jmp
pop
add
push
mov
xchg
and
pushf
test
push
and
es
inc
sbb
pop
pop
movs
pushf
inc
pop
into
inc
fild
dec
add
and
aam
out
mov
and
inc
lods
mov
ret
loopne
jecxz
test
rcr
aas
out
sahf
pop
xlat
add
or
iret
mov
sbb
dec
adc
push
mov
xlat
aaa
mov
outs
push
sbb
and
mov
cmp
fcmovne
aam
pop
mov
(bad)
xchg
mov
ins
pop
rcr
arpl
std
into
call
pushf
jbe
xchg
ja
cmc
mov
pop
xchg
gs
call
ds
movs
xchg
(bad)
retf
or
dec
lods
nop
dec
sbb
outs
lock
call
jle
jg
inc
lds
fdiv
cmps
adc
aaa
sbb
fmul
or
mov
jecxz
xchg
jmp
or
adc
ret
div
and
test
add
int
jge
add
push
xor
das
adc
or
js
push
pop
adc
add
ins
sbb
mov
int
lahf
loopne
scas
les
push
mov
out
jmp
stos
xor
dec
aam
in
mov
(bad)
push
sbb
xor
pop
fsubp
mov
call
push
mov
inc
xchg
pop
ins
push
popf
xchg
adc
out
nop
inc
cmc
xor
pop
jle
stos
outs
pop
or
addr16
mov
neg
jb
jl
and
adc
pop
jecxz
inc
lods
(bad)
fidivr
add
xchg
mov
inc
stos
fsub
push
scas
add
fistp
adc
and
adc
mov
push
xchg
test
in
cmp
inc
jecxz
sub
ja
test
dec
ss
in
inc
pop
ret
pop
push
ins
or
xor
lahf
or
dec
adc
or
and
adc
inc
in
iret
add
lahf
sbb
adc
add
mov
or
xchg
xor
jp
dec
xlat
pop
mov
jbe
(bad)
and
sahf
daa
hlt
dec
sbb
ret
fsubr
out
mov
sub
mov
add
jmp
xor
xor
in
into
mov
shl
pop
pop
inc
popf
mov
into
push
fstp
aad
pop
es
xlat
push
jg
sub
adc
pop
cmc
mov
pusha
xor
or
(bad)
fidivr
jno
arpl
mov
sbb
aaa
jle
cmovp
dec
push
pushf
dec
ret
mov
and
and
jmp
pop
inc
jmp
mov
call
xchg
and
mov
pop
sub
mov
enter
dec
jb
ror
xor
xbegin
jp
outs
cmp
adc
xchg
enter
mov
cwde
pop
mov
test
pop
and
test
push
sar
jae
add
mov
shl
imul
hlt
nop
lds
mov
dec
mov
sub
jb
sub
xchg
out
dec
pushf
mov
mov
adc
aad
adc
outs
mov
cmovg
mov
pusha
jmp
mov
outs
mov
xchg
dec
in
into
fcomp
je
movs
imul
cmp
mov
xchg
xchg
movs
pushf
mov
loopne
xor
retf
sbb
es
sbb
mov
lds
adc
clc
mov
ret
and
shl
push
ret
mov
das
dec
push
add
mov
adc
stos
jo
loop
dec
cdq
stc
adc
in
rol
and
aam
loope
cmp
int3
xchg
lods
div
repz
jp
add
mov
inc
loop
pop
in
bound
jne
(bad)
rcr
repz
popa
pop
sahf
or
adc
aam
iret
into
aaa
cmp
xlat
or
add
ret
lods
pop
daa
jecxz
arpl
test
jno
adc
outs
or
dec
call
iret
pop
and
mov
adc
adc
lea
mov
push
shr
in
call
aas
cmp
jbe
shr
in
hlt
xor
shr
data16
mov
mov
gs
push
retf
dec
vaddps
movs
push
xor
mov
inc
cld
jae
(bad)
fimul
sbb
arpl
mov
xchg
ds
cdq
sbb
mov
(bad)
dec
ret
ror
sbb
adc
hlt
test
iret
pop
jl
data16
dec
(bad)
push
sub
enter
cmc
pop
and
aam
jl
cmp
test
jne
jl
cmp
push
cmp
call
add
lea
scas
(bad)
int
arpl
adc
jmp
loop
push
scas
jb
call
adc
out
pop
mov
icebp
fild
xor
mov
fiadd
sti
inc
sbb
adc
retf
lea
jle
push
inc
aam
cmps
cmp
outs
shl
sbb
xor
(bad)
jp
cld
inc
retf
out
sbb
cld
(bad)
call
inc
xchg
cmc
xchg
mov
sbb
xchg
adc
aad
xchg
xchg
pop
std
cli
sub
jno
lods
test
jg
mov
pop
test
jb
inc
ds
and
mov
dec
sbb
push
xchg
in
jno
scas
sbb
fs
das
aad
sub
outs
jbe
stos
add
scas
mov
dec
pop
xor
push
test
iret
pop
adc
sub
js
aad
inc
or
rol
xchg
cmps
mov
lock
inc
cdq
stos
and
int
xchg
das
sti
push
mov
push
rcl
sahf
jl
fiadd
(bad)
repz
jmp
bound
or
pop
(bad)
stos
inc
mov
inc
jbe
pop
int
sar
mov
sbb
repz
add
xor
mov
test
jmp
jo
mov
sbb
sub
lea
data16
test
and
inc
sub
cwde
pop
dec
xor
sar
ficom
test
pop
mov
cmp
fcmovne
mov
popf
sub
scas
jmp
(bad)
fnstcw
cmp
retf
push
xor
push
or
xchg
aad
cdq
mov
sub
mov
jecxz
pop
mov
clc
cmps
ins
sti
shr
ds
xchg
or
push
lahf
cmp
and
call
push
push
mov
jecxz
fisub
enter
jecxz
add
or
mov
jmp
pushf
jmp
daa
sub
out
loope
adc
mov
jl
dec
add
in
cmp
stos
into
sub
jnp
push
repz
shl
(bad)
push
outs
mov
push
dec
int3
fwait
mov
xor
inc
xlat
push
gs
xlat
push
(bad)
je
push
popa
sbb
xchg
out
shl
scas
call
pop
adc
iret
mov
inc
mov
aaa
nop
iret
pop
into
push
dec
ja
call
call
inc
outs
inc
out
int3
mov
sbb
inc
push
jmp
mov
or
pop
push
cld
jbe
stos
mov
mov
int
sub
lock
call
cmp
imul
ret
mov
fs
out
pop
aam
loope
sbb
test
arpl
pop
pop
mov
cdq
loop
pop
sbb
jmp
dec
xor
sub
out
(bad)
push
adc
jg
rol
add
stc
(bad)
call
stos
cmps
mov
popa
repz
or
xor
mov
aas
inc
adc
neg
mov
ret
jo
add
rol
sub
pop
cld
pop
sti
push
jle
popa
call
xor
jbe
add
sbb
cmps
jne
xor
in
fwait
adc
lea
and
std
pop
jmp
push
jno
int3
jbe
pop
imul
xor
xchg
(bad)
add
sub
mov
imul
pop
dec
xor
iret
retf
arpl
repnz
shr
jmp
pusha
dec
jbe
sub
inc
scas
push
jns
shr
mov
push
mov
inc
jge
mov
mov
movs
out
pop
jns
cld
leave
push
pop
sar
sbb
pop
or
push
push
cmp
sub
or
push
lock
in
xchg
jmp
loop
iret
gs
rcr
pop
mov
sub
add
jl
icebp
aam
popa
inc
jp
pop
dec
mov
repz
cmp
dec
test
push
pop
cs
jmp
bound
and
cmp
dec
fisub
cld
fcom
cmp
pop
ret
loope
or
outs
lds
cmps
xor
call
sub
in
fidivr
scas
xchg
scas
add
sbb
dec
mov
cmp
inc
retf
outs
jecxz
cdq
dec
out
mov
loopne
cli
cmp
call
pusha
sub
sub
fstp
movs
jne
(bad)
jmp
mov
sbb
mov
ror
mov
mov
ins
int3
inc
call
imul
xor
jns
and
push
scas
xchg
mov
mov
cmp
je
fstp
adc
cmp
sbb
push
inc
aaa
shr
push
test
fnstcw
icebp
stos
leave
xchg
or
fwait
into
pop
dec
cmp
mov
ja
mov
pop
or
xchg
adc
sub
jne
mov
xor
dec
in
dec
icebp
push
inc
cmp
into
mov
cmp
jb
in
add
call
mov
xchg
jecxz
push
movs
xor
je
inc
fadd
mov
(bad)
jae
(bad)
rcl
iret
jns
push
xor
bound
and
xor
imul
cli
(bad)
jmp
gs
cmps
ja
adc
pushf
or
jne
jl
push
sbb
(bad)
xchg
lock
mov
daa
cdq
scas
movs
mov
out
and
dec
inc
jmp
push
mov
cmps
and
lea
pusha
lods
xor
pop
scas
ret
shr
daa
or
pop
xchg
inc
adc
jmp
jns
mov
or
test
rcl
xchg
ret
pusha
add
cld
inc
cld
lock
outs
pop
adc
punpckldq
cmp
cmp
pusha
jge
sub
into
scas
add
(bad)
in
mov
test
imul
ror
mov
test
shl
pusha
add
pop
lea
cmps
out
adc
jl
das
add
call
mov
mov
aas
sub
pop
add
jne
(bad)
iret
pop
pop
add
mov
enter
xchg
pop
dec
pop
call
cmps
cmp
sub
push
imul
dec
ror
push
cdq
jmp
inc
sbb
test
add
pop
test
(bad)
out
mov
nop
int
daa
dec
xor
mov
outs
xchg
and
mov
pop
inc
mov
fcomp
imul
dec
or
xchg
test
mov
mov
mov
loop
mov
ss
in
mov
in
and
pushf
xor
fdivp
mov
mov
pop
leave
sub
out
push
mov
pop
mov
and
mov
in
cmp
loop
int3
sub
sbb
pusha
aas
js
push
adc
push
add
xchg
push
jbe
jne
dec
das
xchg
push
scas
fsub
sub
jle
sbb
jg
jmp
mov
sub
push
test
push
push
xchg
xchg
dec
jmp
and
jnp
mov
xchg
xor
cmp
mov
mov
add
or
pop
pop
mov
mov
mov
jl
pop
and
pop
fwait
hlt
stos
xor
mov
rcl
jbe
sbb
dec
hlt
movs
ret
mov
dec
cmp
adc
in
sub
sbb
adc
xor
ins
inc
hlt
dec
loope
cmc
xor
rcr
mov
inc
out
inc
mov
inc
add
mov
inc
or
add
retf
imul
or
mov
aas
sub
jge
das
movs
clc
inc
add
fdiv
cmp
loopne
je
sbb
lahf
push
mov
inc
jae
jb
lea
xor
add
imul
sbb
mov
mov
ins
imul
std
(bad)
mov
add
cli
aas
int
movs
fwait
sub
push
dec
jecxz
jl
cmps
pushf
mov
fdivr
dec
sahf
es
inc
xlat
xchg
into
pusha
das
shr
data16
xor
push
sub
jae
cld
out
or
lds
jmp
daa
imul
inc
loope
test
xchg
sub
push
xchg
retf
(bad)
and
add
std
fisub
aam
jne
rcr
cmps
pop
mov
(bad)
cmps
repnz
cmp
fst
pop
adc
add
fcmovnb
dec
mov
out
shl
fisub
pop
and
rol
stc
cdq
aad
push
jg
je
jmp
push
xchg
outs
mov
enter
jmp
mov
sub
jb
cli
ss
outs
loope
leave
cli
adc
or
movs
out
sti
cdq
dec
mov
loop
scas
push
lahf
push
(bad)
and
cmp
loope
cwde
sbb
xchg
xor
outs
adc
sub
cmp
cmps
mov
test
xor
jge
pop
imul
fstp
xor
out
push
rep
and
(bad)
xor
adc
sub
ret
out
adc
vcvtdq2pd
aad
sub
jbe
test
push
mov
inc
xor
mov
retf
js
pop
outs
rcl
and
test
fldcw
sti
xchg
ret
push
lds
push
jb
out
pop
sub
mov
cwde
dec
cmc
ins
pop
stos
imul
loopne
mov
mov
dec
sub
jmp
add
jecxz
je
xor
inc
lock
pop
sub
scas
sahf
aas
movs
das
or
shr
lock
and
cmps
in
or
and
push
xor
mov
fcomp
push
cdq
jmp
das
stos
mov
jnp
mov
jo
js
ror
inc
push
pop
dec
jge
add
sbb
lods
out
xchg
xchg
sub
sub
ins
out
mov
push
add
inc
sub
pop
retf
stos
ret
pop
jmp
mov
hlt
retf
rcr
pushf
popf
push
push
arpl
push
jno
jmp
sub
in
pop
mov
fwait
or
push
popf
imul
repz
adc
and
push
out
and
or
cld
frndint
sbb
dec
(bad)
imul
jle
mov
call
mov
xchg
cmp
push
xchg
fild
loopne
sahf
out
push
nop
push
cmp
jmp
lods
data16
pop
pop
shl
sub
pop
cld
inc
pop
cmp
mov
idiv
cdq
mov
or
push
sti
cmp
aaa
sub
dec
jno
push
leave
and
sub
retf
push
cmp
popf
lods
dec
popa
aas
mov
sub
or
push
shl
push
push
push
rcl
cwde
cwde
in
cmp
cmp
xor
test
inc
scas
dec
jns
jmp
fwait
jo
cli
mov
js
popa
(bad)
ins
xchg
lock
(bad)
gs
jp
inc
fisub
mov
repnz
movs
mov
mov
mov
add
push
jne
(bad)
rcl
or
sbb
jp
add
push
mov
fs
mov
ret
or
pop
push
pop
fidiv
lea
pop
dec
dec
fnsetpm(287
mov
ss
out
pop
or
js
dec
stos
outs
jl
jne
cmp
add
mov
pop
adc
aad
shl
lods
pop
push
add
mov
loop
push
frstor
adc
mov
arpl
js
dec
cmps
aaa
xchg
std
pop
movs
push
adc
fwait
call
lods
scas
and
cmp
lea
mov
test
jecxz
out
mov
xchg
push
dec
xlat
push
pop
clc
les
inc
dec
imul
xchg
cmp
rcl
leave
add
data16
sub
pop
fmul
jne
(bad)
adc
xchg
xchg
pop
mov
cmp
mov
in
mov
xor
jo
pop
mov
cs
fiadd
jg
mov
arpl
repz
neg
test
ins
dec
daa
fld
loope
ficomp
test
add
xchg
test
cdq
cmps
clc
icebp
in
je
inc
sbb
loop
adc
sti
cwde
mov
push
stc
mov
retf
cmp
adc
jmp
mov
jmp
xchg
cmp
sub
mov
and
leave
pop
jle
push
icebp
sub
add
fcomp
dec
jae
ror
jns
inc
mov
ror
mov
out
adc
lock
int
jb
in
inc
(bad)
mov
call
cmps
or
cmp
mov
inc
jo
fdiv
repz
sub
push
call
pushf
push
mov
aam
push
test
push
stos
push
cmc
cmps
lock
(bad)
jp
jno
int3
adc
call
dec
adc
in
div
xchg
mov
std
mov
pop
test
and
pop
xor
pop
xchg
imul
xor
push
mov
dec
frstor
cld
inc
mov
inc
inc
cmc
fld
fmul
add
push
dec
bound
sbb
sub
fs
out
(bad)
jmp
aad
hlt
iret
aam
sahf
daa
clc
jbe
rcr
sub
into
ins
pushw
add
mov
sbb
mov
xchg
inc
clc
pop
mov
jl
fdivrp
les
jne
shr
inc
mov
and
stos
inc
sub
ss
mov
push
lods
retf
jbe
adc
out
push
dec
mov
jnp
fst
xchg
and
push
push
sbb
mov
dec
and
fstp
test
cmp
popa
retf
lods
aad
test
call
dec
mov
js
popa
in
jbe
ja
mov
xlat
mov
or
pop
cmp
inc
lods
ret
xor
arpl
dec
xor
or
sbb
aad
sub
xchg
inc
jmp
or
xchg
popa
push
leave
cwde
jmp
cmp
jb
pop
mov
mov
outs
enter
cmp
jg
adc
ror
daa
in
mov
xor
xchg
ins
push
(bad)
sahf
cwde
cmc
sbb
pop
jmp
or
jo
ins
int3
test
mov
ja
das
std
and
call
mov
enter
mov
dec
ss
mov
aam
and
test
mov
retf
mov
cmp
es
ss
inc
pop
cmps
adc
jb
jbe
imul
sub
rol
jae
ror
xchg
sub
dec
mov
out
imul
xchg
cli
inc
xchg
repnz
bound
movs
push
call
or
xor
mov
jmp
pushf
scas
sbb
or
mov
rcl
test
retf
cs
xchg
add
sub
dec
push
call
or
jo
mov
or
push
inc
mov
or
push
jno
hlt
mov
push
mov
inc
pop
cwde
sar
dec
je
aas
imul
movs
push
xchg
or
scas
jbe
call
mov
and
adc
xchg
shl
pop
mov
inc
add
xor
movs
add
jne
ss
or
addr16
sbb
jb
add
sahf
add
push
ror
std
or
sub
jecxz
outs
pop
inc
push
inc
call
cmp
jge
loop
jmp
jo
std
lds
pop
push
test
inc
mov
fistp
pop
repnz
cmp
xor
pop
test
jmp
pop
jno
jmp
in
or
repnz
ja
mov
icebp
mov
pop
std
inc
xchg
mov
imul
popf
adc
mov
gs
popa
xchg
lock
inc
and
and
test
movs
(bad)
or
jns
les
jnp
imul
(bad)
aas
cmp
cmp
call
cld
push
les
mov
xor
mov
xor
mul
retf
bound
sbb
repz
in
ins
sahf
enter
fdivrp
inc
adc
sbb
adc
shr
mov
lahf
jle
and
adc
sbb
jno
add
jp
mov
clc
(bad)
les
out
add
adc
ja
inc
call
and
(bad)
pop
jne
rcl
jns
out
div
cmp
les
loopne
gs
repz
das
daa
dec
loop
fadd
mov
adc
cmc
ret
in
xor
mov
int3
outs
mov
jbe
into
jae
(bad)
and
jbe
jae
rcr
adc
jb
fnsave
and
shl
xor
or
sbb
mov
int
(bad)
adc
fs
mov
ret
dec
jle
xchg
pop
jno
mov
ja
dec
adc
mul
arpl
ret
add
dec
rcr
jbe
int
test
mov
add
bound
mov
inc
sub
mov
sbb
sbb
mov
(bad)
or
aam
pop
mov
ret
sbb
mov
imul
out
movs
dec
cld
adc
dec
rol
and
mov
jne
js
dec
inc
dec
mov
and
push
outs
jns
ror
fs
pop
not
ins
fisttp
sub
ds
cmc
test
imul
stos
out
or
dec
in
sbb
imul
adc
mov
data16
add
shl
mov
pop
stos
xor
jae
fisub
dec
shl
cmp
repz
lahf
sar
test
sub
pop
gs
jge
(bad)
stos
pop
sbb
mov
(bad)
jnp
dec
dec
jne
imul
imul
movs
std
lds
xor
js
stc
pop
test
pop
xor
out
xor
adc
mov
jg
(bad)
dec
xchg
pop
jl
repnz
rcl
ret
addr16
fisub
(bad)
lock
cmp
bound
and
shl
mov
jmp
mov
dec
mov
xchg
pop
fwait
push
ja
adc
pop
addr16
fcom
xlat
test
jb
ficomp
sub
pop
mov
push
inc
inc
cs
sti
test
addr16
mov
les
test
pop
mov
mov
mov
sub
inc
and
fpatan
add
cld
fdiv
imul
ins
loope
arpl
push
jle
sbb
stc
outs
add
push
or
mov
pmaxsw
mov
sbb
ror
cmps
add
mov
add
into
mov
xchg
enter
mov
mov
or
not
les
adc
(bad)
adc
dec
xor
mov
xchg
scas
mov
adc
(bad)
xor
dec
mov
fisubr
movs
or
adc
aam
neg
arpl
xor
mov
enter
or
test
bound
pop
popf
mov
sub
pop
xor
xor
inc
retf
mov
inc
mov
or
or
inc
scas
or
in
inc
mov
jl
(bad)
add
jle
imul
pop
inc
cmps
stc
repnz
pop
inc
xlat
into
pushf
fnstenv
mov
mov
shrd
nop
scas
fisttp
jns
pop
push
in
ffreep
out
outs
pop
aaa
push
mov
or
aam
jmp
push
pop
loopne
xchg
leave
sti
dec
retf
retf
les
les
fwait
cmp
movs
(bad)
and
in
sub
add
mov
adc
push
push
repnz
or
adc
or
pop
xchg
aad
adc
xor
into
sbb
add
xchg
(bad)
jmp
imul
fistp
ja
rcr
jns
js
inc
jne
cmps
xchg
in
int3
in
mov
jp
jg
iret
(bad)
pop
ret
and
add
adc
sbb
lock
mov
and
addr16
pop
pushf
xchg
gs
dec
xchg
mov
adc
retf
pop
fstp
fld
and
sbb
(bad)
in
les
scas
mov
aam
test
popa
std
repnz
out
addr16
add
jp
ins
es
mov
cld
mov
or
sbb
lods
or
adc
adc
sar
addr16
jl
fldcw
pushf
test
cmp
fwait
jmp
xchg
into
(bad)
test
daa
jbe
sbb
or
adc
sub
xor
mov
mov
jns
or
xchg
mul
(bad)
cmp
mov
js
jno
dec
aas
jb
fisub
push
scas
leave
xor
or
xor
retf
mov
dec
sub
scas
mov
xchg
cmp
mov
push
test
xor
xchg
inc
lock
stos
or
jbe
mov
rcl
retf
pop
fild
add
pop
rcr
sbb
jmp
pusha
add
jmp
cmp
mov
add
iret
out
int3
jmp
movs
or
adc
sbb
inc
push
mov
popa
jne
push
mov
mov
jo
enter
aad
jns
jmp
cmp
jg
and
clc
fisttp
call
xchg
cmp
cmp
cli
push
inc
sbb
sbb
popf
movs
icebp
in
mov
std
test
fild
nop
(bad)
nop
cmps
fadd
pop
je
adc
ja
out
mov
daa
xchg
jmp
mov
inc
jnp
push
retf
and
aad
xchg
mov
sahf
(bad)
pop
jecxz
shl
push
mov
test
loopne
mov
mov
mov
xlat
mov
xchg
scas
inc
movs
jo
xor
pop
sbb
mov
cli
fstp
sub
dec
iret
jge
jmp
dec
jnp
pop
dec
cdq
jl
sbb
rcl
gs
daa
pop
sub
or
add
xor
aas
popa
mov
lods
into
loopne
int
inc
aaa
add
xor
xchg
ror
jnp
in
sbb
(bad)
gs
inc
mov
and
push
push
imul
mov
xor
imul
mov
jnp
mov
out
add
ins
mov
cmp
adc
test
inc
std
in
sbb
xchg
mov
outs
jle
lea
(bad)
sar
inc
lods
adc
pop
cmp
mov
jne
in
(bad)
mov
data16
mov
scas
sbb
jecxz
lock
fsub
(bad)
loop
rol
mov
xchg
outs
xchg
mov
and
into
(bad)
adc
or
cdq
mov
loop
cmp
sbb
fidiv
xchg
fcom
loop
ss
dec
shl
shl
pop
lods
xor
jnp
adc
mov
int3
in
and
pop
add
lds
(bad)
lock
jae
call
sbb
arpl
call
hlt
sub
xchg
or
lods
cmps
adc
mov
inc
popf
dec
xor
pop
dec
test
cmp
jae
in
push
ja
or
sbb
test
cmp
sub
ins
repz
call
mov
inc
int
daa
push
jl
(bad)
fidiv
bound
(bad)
leave
fmul
jae
jecxz
hlt
stc
in
cmc
repz
sbb
pop
iret
push
mov
jmp
mov
sub
in
call
cmp
or
adc
push
add
cmps
mov
adc
push
pop
shr
xchg
pop
adc
lods
xchg
hlt
pop
call
movs
adc
mov
sbb
jo
cli
call
adc
push
push
inc
xchg
ficom
inc
scas
xchg
mov
push
push
pop
sti
stc
xchg
cwde
loop
in
inc
retf
ret
mov
jne
sbb
push
xor
and
lods
mov
mov
push
(bad)
cmp
scas
(bad)
pushf
dec
cmps
aas
jno
mov
(bad)
aas
aas
sub
rcl
(bad)
jl
jmp
dec
int3
call
mov
pop
push
int
mov
imul
dec
shl
cmp
mov
pop
dec
push
or
rcr
retf
scas
push
mov
and
out
sub
call
adc
sbb
test
bound
lods
dec
jns
mov
stos
in
jecxz
inc
dec
loopne
(bad)
cld
and
jnp
fsub
(bad)
call
(bad)
cwde
or
outs
test
mov
add
fucom
cs
repz
les
sahf
jns
retf
push
jb
retf
cmp
inc
jp
or
in
cmp
xchg
imul
scas
shl
pop
mov
push
adc
cmp
jp
cmp
jmp
jb
or
dec
inc
push
pop
mov
push
jae
into
jmp
retf
bound
jecxz
sahf
jnp
fdivr
retf
mov
cli
fldcw
jbe
adc
or
bound
call
shl
push
cmp
(bad)
ror
fisttp
inc
cld
mov
pop
jne
repz
test
adc
out
sub
jno
and
ins
push
iret
push
and
repnz
mov
sbb
out
sub
xor
inc
or
inc
sub
fsub
push
adc
call
popf
xchg
dec
fs
cmc
ficomp
or
pop
and
test
out
icebp
mov
push
mov
add
sbb
and
sar
cmps
hlt
or
popa
pop
mov
adc
and
sar
jnp
sub
fwait
movs
jecxz
(bad)
xchg
sub
mov
mov
(bad)
adc
stc
dec
int
jmp
loop
stc
add
movs
mov
jbe
push
lea
dec
dec
jnp
push
(bad)
sbb
js
mov
sbb
sub
fmul
and
mov
pop
retf
fiadd
mov
(bad)
retf
iret
push
aam
shl
jmp
sbb
mov
or
popf
xor
fwait
push
pop
push
mov
popa
inc
test
lock
adc
push
(bad)
enter
pop
jo
neg
int
inc
lea
push
cwde
jne
mov
mov
lea
cmps
aas
(bad)
sub
sbb
dec
stos
xor
xor
ja
jl
call
mov
shr
push
or
dec
push
daa
not
(bad)
pop
push
ja
or
jns
cmp
int3
fdiv
push
in
dec
(bad)
nop
inc
inc
fadd
leave
mov
js
movs
imul
and
mov
or
call
jmp
inc
push
sub
xchg
lods
cs
pushf
fs
sbb
imul
fist
mov
ret
mov
pop
sar
xchg
bound
std
cwde
movs
int
aaa
(bad)
scas
jmp
sahf
hlt
push
mov
jno
and
(bad)
aas
xor
add
bnd
mov
scas
cmp
pop
das
xor
cmps
test
adc
outs
add
push
cmp
mov
out
sub
adc
jns
loopne
sbb
xor
xor
add
mov
add
mov
xor
or
ja
pop
xchg
or
arpl
sbb
shl
and
nop
push
ja
loopne
dec
mov
sbb
rol
inc
fnstsw
icebp
cmp
and
ror
fdiv
jl
mov
pushf
or
leave
(bad)
or
push
(bad)
sar
push
cmp
add
mov
in
ret
cmp
and
adc
xchg
ret
cmp
mov
mov
test
retf
jo
loopne
cmp
loope
or
or
cmc
dec
xchg
mov
in
dec
out
sub
and
cmp
xor
sbb
out
xor
inc
push
sub
adc
xor
mov
add
popf
add
ret
xor
ret
loope
movs
fcomi
cmp
cmp
test
ret
pusha
cld
into
mov
pop
xchg
sub
arpl
mov
mov
int3
sbb
sub
push
mov
add
mov
in
mov
cmp
xchg
retf
pop
pop
jno
adc
cmp
sbb
dec
shr
fwait
dec
call
jae
pop
pop
sbb
adc
das
out
cwde
jmp
dec
mov
ja
inc
or
push
into
ss
in
jg
push
fisttp
mov
xchg
lock
jbe
pop
cmp
xor
cmp
mov
jecxz
jne
fistp
popf
xor
lods
std
pop
movs
add
sbb
xchg
xchg
rcr
lahf
sbb
cmps
xor
cmps
popf
dec
imul
add
ins
cmp
push
stos
add
xchg
jb
fnstcw
pop
jno
cmp
cwde
pop
adc
sbb
jecxz
or
add
jbe
cmp
stos
sub
sbb
pop
fs
les
dec
dec
cmp
cmp
mov
sub
lahf
pop
sub
dec
scas
ja
cmps
add
and
mov
test
dec
mov
add
or
mov
xchg
aam
cld
push
lock
sti
mov
inc
and
and
xor
outs
ficom
sbb
lea
aad
jge
shr
or
lods
adc
adc
sub
inc
cmp
xor
pop
ret
mov
xchg
xor
sbb
enter
xor
ret
enter
bound
loope
ins
pop
aam
jp
sbb
cmp
dec
or
jbe
mov
xchg
popa
mov
jne
xor
leave
ja
repnz
lahf
test
dec
and
(bad)
fldcw
(bad)
cmp
jnp
aaa
fimul
push
nop
test
lods
aas
aaa
mov
jg
push
push
stc
call
jae
xor
or
aam
ret
stc
pop
dec
inc
leave
xor
mov
cdq
(bad)
dec
jg
mov
outs
je
jp
mov
jno
fs
add
push
jp
jle
loop
pop
jno
pop
jg
test
and
leave
lods
pop
fucomi
movs
inc
test
in
dec
push
arpl
sbb
in
sub
xor
add
add
mov
jae
sbb
jno
xor
adc
add
mov
add
jb
add
cmps
ss
push
xchg
repnz
mov
clc
(bad)
push
mov
jnp
lock
dec
mov
test
cmp
xlat
jmp
adc
ds
mov
mov
pop
xlat
ss
ins
add
retf
jl
add
fwait
(bad)
jg
shl
fcomp
xchg
sbb
(bad)
call
xchg
jo
test
clc
xchg
mov
xchg
dec
ss
mov
popf
mov
arpl
es
mov
pop
inc
(bad)
fbstp
cld
cmps
movs
sub
push
out
ffreep
cmp
or
stos
adc
call
sbb
cmp
mov
test
cmp
inc
clc
in
iret
pop
mov
(bad)
xchg
bound
xchg
sub
pop
jge
cdq
or
cmp
call
out
pop
dec
mov
jge
xchg
inc
(bad)
bound
in
add
in
dec
jmp
mov
add
mov
push
sub
cmps
pop
jmp
hlt
(bad)
mov
add
and
repz
cmp
or
push
ret
cmp
ins
jae
sbb
neg
mov
add
pop
mov
clc
cmp
mov
xor
mov
mov
js
cmp
mov
push
jmp
mov
xchg
and
jl
cmps
sti
test
push
pop
stos
nop
and
sbb
xchg
out
ja
scas
ss
jp
jno
mov
pop
out
dec
sahf
xchg
jns
test
into
popa
pop
leave
dec
add
stos
sub
ficom
adc
hlt
sub
dec
sbb
jnp
adc
fs
add
add
add
mov
lods
mov
cwde
outs
fcom
cmps
pop
cmp
jb
cmps
ins
pushf
jns
dec
cli
mov
jnp
dec
push
mov
xchg
jb
not
or
or
xor
or
mov
dec
pop
add
adc
fadd
sbb
and
dec
dec
dec
push
sbb
repz
pop
(bad)
neg
std
adc
sbb
rcr
pop
push
test
and
mov
out
jns
mov
xlat
fnstenv
in
ss
pop
fchs
fstp
sbb
add
cmp
inc
jno
xchg
ins
retf
mov
pop
fxtract
sbb
xor
cdq
lea
(bad)
shr
pop
mov
mov
add
cmp
sbb
jmp
cmp
jne
popa
sbb
out
jg
mov
xchg
jbe
mov
ret
loop
dec
repnz
jl
sbb
xor
mov
add
inc
sub
xlat
cmp
aaa
inc
push
fstp
call
test
nop
push
es
jns
mov
push
repz
inc
movs
mov
jp
mov
add
pop
stos
xor
push
push
mov
fdivrp
mov
or
test
sub
xchg
push
xor
lahf
mov
cli
ret
mov
popa
sbb
mov
xchg
add
jl
sbb
mov
daa
dec
jl
cmp
div
popf
test
(bad)
stc
jno
inc
dec
out
mov
push
or
movs
xor
aad
push
xchg
arpl
sar
lds
and
xor
out
dec
shr
inc
push
mov
jp
bt
dec
dec
les
pusha
test
movs
stos
in
xor
rcr
ret
adc
inc
int
sub
or
lahf
dec
cmps
rcr
jb
xchg
cvttps2pi
stos
lock
cwde
xchg
je
cli
lock
xor
mov
mov
das
scas
mov
add
xor
sahf
push
push
sub
xchg
xor
ins
xchg
pop
scas
idiv
inc
scas
pusha
loop
mov
repz
adc
sbb
sbb
imul
pop
dec
arpl
mov
adc
lods
mov
mov
shl
adc
cmp
mov
into
push
scas
jmp
mov
xchg
lock
stc
add
movs
test
mov
in
sahf
jne
mov
sub
jmp
and
iret
mov
repz
out
fs
jg
inc
mov
jmp
bound
and
jmp
add
hlt
outs
es
(bad)
scas
xor
ret
and
push
jne
cmp
imul
mov
in
or
jp
in
push
add
and
mov
add
stc
std
stos
jno
mov
enter
hlt
push
push
std
inc
xchg
mov
adc
and
inc
push
leave
add
push
loop
or
aaa
adc
jbe
mov
inc
daa
(bad)
out
(bad)
in
sub
dec
ror
dec
repnz
or
xor
scas
xchg
mov
dec
push
or
out
(bad)
repnz
ins
shl
les
cld
sbb
(bad)
cmp
enter
jmp
es
mov
ret
imul
and
lahf
das
or
aam
push
js
jl
xchg
test
int
pop
ins
mov
push
jmp
(bad)
in
lods
test
cmc
std
push
jp
not
sub
into
or
sub
test
xor
push
dec
fld
pop
jp
scas
sub
xchg
sbb
sub
cs
sbb
adc
adc
sti
pop
call
cdq
(bad)
cli
adc
jecxz
push
mov
adc
loop
adc
jb
or
and
les
cmp
(bad)
xor
(bad)
(bad)
cmp
test
mov
aas
rcl
and
(bad)
pop
daa
bound
mov
cmps
clc
es
fstp
pop
inc
sub
dec
mov
cmp
sar
xlat
fcomp
ds
add
pop
jmp
lods
mov
xchg
add
fs
shl
cld
sbb
retf
sbb
loopne
sub
mov
jb
push
pop
scas
enter
dec
mov
cld
pushf
gs
clc
xor
lea
in
out
sbb
iret
std
out
dec
aaa
pop
sahf
xor
out
cmc
outs
js
push
jmp
xor
aas
fptan
repz
fucomp
add
push
push
mov
push
int3
ins
pop
cmp
shl
or
mov
daa
mov
or
das
mov
sbb
daa
jbe
mov
out
scas
ficomp
push
ins
pop
or
xchg
aad
jbe
jne
ret
leave
push
fstp
das
movs
jp
dec
pause
xchg
pop
scas
dec
push
aas
xlat
push
pop
mov
lahf
or
jno
adc
add
ror
ret
scas
and
and
into
loopne
fild
mov
jecxz
cmps
dec
push
stos
popw
or
movd
fwait
push
test
xor
pop
push
or
loope
clc
addr16
or
sbb
jb
dec
sbb
lea
test
inc
adc
inc
das
fld
inc
adc
test
cmp
xchg
cmps
mov
jo
call
or
mov
loop
ror
bound
mov
jae
xchg
fcomi
jnp
jmp
xor
stc
in
and
jno
mov
mov
ds
mov
jo
and
mov
mov
mov
cmc
ror
xlat
repnz
sbb
xor
push
in
jmp
jecxz
je
or
repnz
(bad)
ror
xchg
mov
push
jmp
push
in
cmp
jmp
das
push
ds
leave
xchg
mov
pop
mov
fs
jb
fcmovu
fld
leave
ficom
js
mov
pop
std
cmp
sbb
popa
gs
pop
popf
daa
and
ror
xor
push
xor
retf
in
leave
fwait
mov
cmp
fisub
sub
xrelease
hlt
sub
jo
movs
(bad)
mov
adc
ds
dec
sbb
inc
pop
sub
mov
outs
pop
outs
sar
dec
aaa
inc
jo
mov
daa
sub
stos
popf
dec
mov
inc
or
pop
popf
and
add
push
cmp
out
ss
cmps
dec
out
imul
adc
(bad)
stos
call
mov
mov
adc
loopne
out
iret
cmps
mov
hlt
imul
popa
jl
push
push
sub
(bad)
xlat
jmp
sbb
push
rcr
(bad)
out
mov
in
adc
and
cmp
dec
fs
cmp
lods
test
(bad)
inc
sbb
jp
sti
ja
retf
ds
es
movs
adc
retf
rol
jle
rcl
xlat
jns
pop
pop
and
push
daa
pusha
sahf
xchg
imul
ret
mov
popa
daa
inc
mov
pop
inc
mov
push
test
sub
test
mov
fcomp
push
add
in
inc
ja
ins
fist
lea
adc
xor
add
repnz
mov
mov
int3
popa
out
aam
call
call
cmp
scas
pop
inc
jmp
icebp
fild
js
mov
adc
adc
push
jle
jp
shr
aad
xchg
clc
jge
jmp
and
addr16
sbb
clc
inc
xor
pop
push
inc
in
add
xor
sub
dec
push
cli
push
xchg
inc
cmp
enter
xor
cmp
add
(bad)
aad
xchg
fistp
int3
scas
mov
xchg
push
dec
dec
mov
sub
pop
inc
outs
ret
xor
jmp
cli
pop
cmp
xor
adc
pop
lods
das
data16
jae
push
call
xchg
(bad)
les
xchg
mov
mov
fwait
inc
bound
js
inc
cmc
mov
ins
cmp
jecxz
jle
or
xor
aaa
xchg
cmc
adc
push
call
sti
ins
sar
pop
mov
enter
iret
ret
xchg
js
leave
cli
cmp
scas
std
sbb
inc
shl
ret
xchg
(bad)
repz
arpl
push
jns
cmp
jbe
cmp
mov
cmp
loope
daa
movs
and
xor
or
shl
xchg
jnp
jmp
aas
cld
fsub
jnp
cmp
jo
pop
aas
push
scas
paddb
add
or
push
or
jp
test
imul
hlt
dec
ret
in
pop
(bad)
cwde
out
inc
pop
adc
shr
sar
cmps
inc
adc
rcl
jnp
bnd
push
stc
das
jle
hlt
adc
jnp
jmp
xor
out
add
mov
cmp
and
repnz
pop
or
mov
movs
and
leave
sbb
ret
test
scas
addr16
mov
movs
push
and
cmp
in
and
add
jmp
mov
inc
std
push
dec
jge
lods
sahf
push
shl
sbb
xor
or
lods
aas
call
sub
dec
or
wrmsr
push
adc
push
sub
push
dec
loopne
stos
int
sti
arpl
mov
test
in
adc
xor
and
mov
cmp
jmp
fisub
xlat
jae
jmp
and
adc
push
leave
and
aad
pop
dec
ror
dec
sbb
inc
es
push
jp
xor
push
push
mov
pop
push
or
and
jne
ss
enter
jbe
enter
dec
or
and
sub
xchg
xchg
inc
in
stos
lds
outs
push
sub
push
pusha
adc
mov
test
dec
push
inc
pushf
imul
retf
(bad)
sub
cmp
pop
dec
cwde
mov
pop
repnz
mov
dec
dec
std
movs
mov
retf
movs
repnz
lods
sbb
jmp
repnz
push
jno
daa
cmp
dec
sbb
jns
pop
out
stos
loopne
xor
cmps
jmp
add
loopne
pop
ror
lds
sbb
add
lock
out
pushf
out
xchg
push
sub
lock
lea
mov
gs
xchg
js
push
int3
mov
mov
repnz
push
mov
cs
popa
mov
pop
push
arpl
mov
add
int3
repnz
dec
mov
mov
and
sbb
cmp
sub
mov
movs
push
call
mov
retf
mov
out
stos
jge
pop
scas
rcr
pop
rcl
ret
aaa
rcr
imul
cmps
jg
jmp
into
int
popf
es
into
push
in
mov
sti
jp
dec
je
out
aas
lods
add
mul
jno
bound
ret
xor
lods
inc
mov
and
sub
imul
xor
std
push
sub
cmp
mov
mov
test
mov
jmp
xlat
cmp
sahf
push
mov
xchg
imul
sub
(bad)
jns
cmp
cmps
shl
fucomp
pop
inc
pop
mov
js
mov
stc
retf
dec
xor
add
fcmove
fs
mov
push
shr
icebp
fdivr
push
retf
mov
popf
xor
inc
jmp
stos
cli
push
xor
dec
jb
xchg
mov
fwait
int
add
(bad)
xchg
fs
rcl
sbb
sub
jl
imul
mov
push
daa
xchg
mov
mov
mov
push
push
es
mov
ret
popf
popf
pushf
dec
sbb
aad
inc
xchg
add
pusha
cmp
(bad)
mov
jle
add
push
outs
imul
or
jp
mov
fisttp
scas
xchg
je
call
movs
push
(bad)
nop
push
mov
mov
cli
xor
ins
vpmulhuw
add
into
xor
sbb
mov
add
adc
push
lea
mov
dec
push
push
xchg
arpl
loop
aaa
cwde
or
or
push
add
in
mov
jo
stos
arpl
mov
ret
nop
ret
(bad)
adc
push
jg
call
adc
shl
fwait
adc
mov
or
div
inc
add
pop
jo
inc
movs
mov
loope
popa
test
ins
sbb
lods
lds
leave
inc
mov
mov
or
xchg
mov
fld
pop
or
jb
stos
lea
clc
and
(bad)
aad
bound
retf
inc
jbe
push
nop
ins
and
lods
pop
inc
jmp
enter
mov
sahf
mov
sub
push
add
inc
pop
pushf
std
mov
mov
mov
add
xchg
sub
cmc
int3
pop
sbb
xchg
lds
add
jmp
dec
sub
sbb
mov
sbb
push
scas
cmp
fs
mov
sbb
push
(bad)
inc
pop
shr
dec
pop
and
neg
scas
daa
xchg
sub
cmc
mov
(bad)
jg
repz
nop
jg
sub
cmps
rdpmc
movs
mov
in
hlt
or
or
pop
mov
mov
outs
and
cmp
lock
sub
stc
fld
xchg
pop
sbb
and
data16
dec
cli
push
pushf
pop
push
or
clc
jmp
cwde
mov
pop
inc
xor
pop
dec
test
loop
mov
dec
out
push
icebp
push
push
sbb
outs
add
in
in
out
cmp
in
push
pop
or
(bad)
jl
push
mov
dec
xchg
xchg
pop
or
test
and
cmp
out
mov
iret
aam
movsx
ret
scas
fstp
pop
mov
xchg
sbb
bound
inc
fs
jmp
push
inc
cmp
add
and
or
sub
cmp
mov
mov
les
jmp
xchg
fidiv
(bad)
xor
imul
cmp
push
xchg
push
jne
scas
xchg
mov
inc
sub
into
retf
mov
jecxz
loope
fwait
pop
fxch
and
fwait
mov
ja
jmp
xchg
pushfw
xor
pop
add
test
lea
cmps
repz
adc
or
mov
loop
and
fnstenv
jbe
imul
push
mov
shl
test
adc
int3
sbb
mov
mov
or
xchg
daa
dec
cmp
mov
inc
loopne
(bad)
cmp
mov
mov
fs
popf
sbb
xchg
je
aaa
xor
popa
cmp
jg
or
mov
aam
dec
pop
gs
cmp
movs
rcl
stos
retf
imul
push
(bad)
cmc
jmp
add
(bad)
mov
add
fs
and
sub
inc
mov
out
dec
pushf
push
mov
xchg
push
mov
popa
lods
cs
dec
jp
add
in
inc
mov
sub
and
sbb
mov
dec
sbb
(bad)
rol
sbb
sub
std
push
repz
ins
std
mov
mov
cwde
shl
lock
inc
mov
xlat
dec
lea
xchg
daa
test
mov
call
dec
into
add
scas
sbb
xlat
ror
xor
jnp
mov
adc
sar
mov
mov
rcl
js
loope
movs
mov
ja
shl
adc
(bad)
enter
ss
pop
addr16
call
and
push
enter
push
sbb
sub
inc
mov
les
add
imul
ss
out
repz
jns
clc
imul
cwde
hlt
sub
dec
mov
mov
mov
push
sbb
stos
cmp
xchg
ficom
ficomp
mov
pusha
std
mov
aas
pop
adc
es
xchg
pop
mov
ins
push
outs
push
mov
(bad)
mov
repz
and
mov
mov
(bad)
mov
mov
test
retf
lods
fcom
mov
ins
xor
mov
dec
xchg
mov
ret
jno
adc
imul
int
in
or
jmp
popa
mov
loope
mov
aam
lock
add
cmps
pop
test
(bad)
jge
cs
cmp
add
mov
pop
sub
mov
xor
mov
aas
push
push
pop
sub
jl
test
mov
arpl
cs
mov
xchg
mov
movs
xchg
ror
sub
(bad)
mov
push
xchg
dec
add
imul
daa
jp
loopne
sub
push
test
mov
mov
gs
inc
cmp
call
aas
add
and
fwait
scas
cmc
imul
(bad)
jnp
mov
fidivr
push
inc
mov
xchg
pop
rcl
dec
adc
ret
xor
ja
loope
adc
xor
mov
mov
jp
adc
lods
jne
dec
inc
(bad)
lahf
imul
ret
stc
mov
mov
sbb
lea
xor
push
and
(bad)
fisubr
and
add
or
mov
sub
mov
cmp
dec
jae
pop
add
sbb
jb
fdiv
scas
into
mov
in
jns
xor
add
frstor
cmc
adc
sbb
mov
rcr
xor
inc
out
test
push
dec
pusha
mov
mov
mov
jb
rol
fcmovbe
mov
and
mov
out
pop
lahf
and
in
xor
add
sbb
jb
or
pop
repnz
int3
stos
in
out
popf
xor
iret
push
jmp
and
imul
call
iret
repnz
test
jno
je
lds
ins
xchg
(bad)
fsub
hlt
bound
inc
sub
aad
jnp
push
mov
mov
ds
(bad)
repz
das
lahf
xor
mov
js
dec
and
dec
call
in
and
std
jb
dec
and
inc
bound
pop
sar
aas
fcomp
es
cmps
sbb
xchg
mov
xor
push
ins
jecxz
(bad)
fldpi
icebp
mov
daa
test
(bad)
mov
and
jne
repz
cmps
pop
neg
mov
jbe
mov
mov
adc
lea
popf
addr16
call
mov
jl
(bad)
xchg
jmp
dec
xchg
popf
cmp
mov
scas
add
mov
push
mov
sub
rcr
cld
lds
and
xchg
pop
jns
pop
repz
das
loop
retf
test
scas
jp
pop
sub
adc
dec
jge
sbb
rcl
lea
inc
inc
mov
je
push
adc
mov
stos
lea
mov
mov
jbe
fs
outs
jno
jge
add
sbb
push
lods
daa
and
adc
ins
repnz
movs
mov
push
scas
(bad)
sub
jmp
mov
mov
xchg
int3
test
xchg
retf
push
pop
test
pop
adc
addr16
jge
adc
movs
repz
test
or
lods
mov
mov
popa
add
aaa
sar
popa
dec
xor
mov
stc
popa
mov
add
iret
sahf
pop
pop
push
imul
mov
imul
pop
ret
mov
mov
cs
xchg
lock
inc
rol
mov
inc
mov
push
loope
mov
inc
(bad)
jl
sub
or
and
fcom
jae
call
cmovbe
jo
mov
xchg
mov
push
sbb
inc
repnz
jecxz
inc
mov
nop
or
repz
xchg
cmovp
dec
ins
dec
pop
dec
lock
pop
sub
and
sub
(bad)
jmp
loope
push
xor
dec
jne
test
and
and
sub
or
scas
sbb
mov
mov
out
push
test
and
(bad)
out
(bad)
loopne
inc
sbb
gs
mov
push
sub
fcmovnu
fild
movs
push
shl
or
in
and
and
ss
ss
iret
fadd
shl
rol
mov
in
push
jne
popa
ret
xor
test
das
repz
ss
and
dec
fs
add
xchg
paddusb
push
loope
xchg
xor
or
mov
shl
and
call
fstp
dec
add
loop
inc
and
test
adc
or
mov
add
gs
fimul
int3
lods
test
xor
int
enter
jmp
push
rcl
adc
ins
cmp
adc
cmc
push
adc
inc
xor
imul
mov
cmc
das
pusha
and
lods
and
cmp
jmp
cdq
test
std
out
fsubr
(bad)
xchg
sub
pop
out
ds
shl
ss
popa
loop
stc
and
sbb
sbb
mov
mov
or
(bad)
sbb
int
cmp
mov
inc
add
and
inc
jl
push
nop
(bad)
sti
rol
jno
inc
jnp
(bad)
daa
and
enter
dec
add
or
jns
(bad)
cmc
pop
adc
fcmovnu
(bad)
xor
jge
clc
repnz
and
and
push
aad
gs
dec
ret
push
jp
out
and
mov
pop
xchg
push
repnz
fs
dec
xor
push
xchg
ss
leave
dec
(bad)
in
mov
push
push
xchg
add
inc
mov
cdq
daa
call
outs
jge
adc
xor
add
fst
sahf
dec
(bad)
sbb
sub
adc
not
and
mov
jle
mov
adc
jl
nop
sub
adc
push
mov
fdivr
ss
repnz
int3
sub
and
(bad)
cmps
call
pop
scas
xchg
lock
cld
mov
in
push
pop
mov
mov
pop
jg
fwait
mov
inc
jmp
cmp
scas
retf
and
and
movs
inc
sti
loopne
std
adc
jo
mov
mov
jnp
jge
mov
xor
adc
and
pop
sbb
adc
inc
(bad)
in
dec
sbb
std
adc
sub
retf
jno
and
adc
mov
cmp
mov
sbb
inc
ret
(bad)
dec
mov
inc
daa
sbb
xor
inc
push
ja
lods
repnz
jecxz
das
in
rcr
loop
adc
inc
in
shl
pop
(bad)
shr
arpl
push
pmulhw
push
(bad)
fmul
nop
xchg
push
mov
pop
mov
inc
int
mov
test
mov
xlat
cwde
xchg
mov
mov
fisttp
inc
and
jae
ss
lods
out
xor
call
rcr
pop
ja
(bad)
in
sbb
stc
pusha
mov
xchg
xor
mov
push
cmp
add
mov
jl
or
(bad)
pop
push
int
out
je
popa
stos
(bad)
mov
call
add
adc
sahf
mov
mov
lods
cmp
shl
pop
xchg
cmc
imul
test
jecxz
repz
push
cmp
gs
stc
sub
jne
shufps
repz
iret
inc
daa
cmp
out
retf
shl
push
cmp
test
fst
push
dec
cmp
sub
sub
mov
test
jge
mov
push
je
ss
lea
mov
or
dec
std
aam
cmps
pop
ret
push
mov
add
cmp
dec
inc
xchg
jg
adc
pop
and
cld
out
dec
fdivrp
mov
adc
jmp
pop
inc
ret
or
dec
imul
xor
or
std
nop
sbb
pusha
ret
cmp
jmp
pop
mov
scas
in
std
scas
jno
jmp
sub
sbb
syscall
ins
pop
or
mov
cmp
cmps
mov
(bad)
loopne
in
dec
adc
cmp
inc
daa
popa
repz
xchg
add
addr16
daa
cmp
push
repnz
push
xchg
call
pusha
mov
dec
data16
xchg
rcr
sub
test
fist
mov
sbb
push
dec
sbb
sysret
(bad)
push
mov
scas
loop
div
or
es
or
aaa
rcl
add
aam
out
push
lea
lahf
sub
lahf
sub
xor
jmp
xor
pop
aaa
push
pop
sbb
push
cmp
xchg
cmp
push
nop
mov
outs
jae
push
jle
lock
test
xchg
int3
imul
push
movs
mov
inc
pop
sbb
fstp
cwde
repnz
cmp
push
jp
add
add
outs
dec
and
scas
pop
pop
stos
(bad)
mov
out
loop
cmp
adc
popf
jnp
xor
cmc
xor
sbb
test
das
fsub
ja
jmp
in
push
or
jle
sub
jge
into
push
dec
dec
xor
jp
std
sbb
xor
dec
xor
dec
jmp
mov
pop
push
fst
and
pop
scas
mov
out
xchg
bound
mov
push
clc
cmp
add
jmp
daa
add
call
xchg
jno
jmp
dec
in
loopne
js
sti
jb
repz
or
in
(bad)
loop
aam
lea
jmp
pop
jo
xchg
lods
push
leave
sbb
inc
cmp
xor
aad
lods
inc
jmp
fdivr
and
mov
lahf
mov
and
sahf
bsf
jle
or
mov
cmp
test
sar
les
sbb
mov
test
fisub
scas
mov
scas
sbb
pop
(bad)
jo
xor
inc
pop
jne
sahf
dec
stc
mov
fcomp
lahf
add
and
sbb
retf
ss
sbb
jecxz
inc
inc
call
cmp
push
push
pop
or
repz
add
jmp
push
push
xchg
cli
into
call
and
retf
jmp
mov
mov
in
shl
xor
int3
xchg
mov
xchg
iret
sbb
mov
mov
clc
mov
loope
and
push
inc
arpl
cmp
push
add
push
xchg
nop
xor
sbb
jl
popf
stos
cmp
rsqrtps
fmul
out
clc
daa
out
mov
adc
sahf
std
out
idiv
arpl
fdivr
add
or
inc
rcr
scas
rcr
movs
add
inc
inc
jbe
lods
pushf
stc
mov
xlat
das
mov
adc
pop
inc
in
and
pop
in
mov
dec
div
jno
and
fidiv
dec
mov
sbb
cdq
jnp
cld
ret
dec
push
sbb
mov
loop
aaa
push
add
hlt
ja
ret
ja
icebp
xor
adc
into
push
les
ret
aaa
push
cmp
xchg
dec
int
test
xor
mov
push
scas
mov
and
call
xchg
mov
jns
out
aad
les
imul
inc
(bad)
lods
push
fisubr
xlat
add
aam
sub
shr
xchg
movs
mov
lods
cmp
push
mov
push
push
into
sahf
mov
inc
movs
cmp
sahf
ins
pop
inc
inc
inc
out
fmul
cmc
and
ss
and
jbe
pop
sbb
inc
outs
push
push
cld
in
jb
mov
mov
addr16
test
je
jb
rcl
and
in
pop
inc
or
mov
icebp
sub
xchg
int3
fldcw
(bad)
mov
sub
fisubr
aaa
mov
rol
add
dec
lea
arpl
inc
bnd
lea
scas
cmp
push
jne
inc
add
adc
and
push
push
fistp
imul
loopne
dec
retf
sbb
cmp
adc
fwait
sbb
sub
in
test
dec
cmp
jb
xor
aam
and
sub
xlat
fisub
pushf
mov
mov
ins
scas
inc
cmp
arpl
inc
xchg
sbb
das
inc
movs
mov
mov
mov
popa
cmp
out
sbb
in
ret
pushf
push
out
push
jae
sub
jecxz
or
daa
jp
in
mov
ins
retf
inc
cmp
idiv
sub
repnz
mov
into
stos
std
pop
aas
cmc
cmp
test
dec
imul
push
and
and
bound
cli
xchg
scas
and
rol
sub
ins
push
ror
xchg
test
nop
cli
push
idiv
push
xchg
cmps
inc
scas
pop
retf
in
mov
adc
cdq
iret
out
inc
(bad)
lods
xchg
xor
fnstsw
test
(bad)
cdq
sahf
loope
das
imul
push
mov
and
push
jl
lock
mov
or
int
into
pop
inc
jle
push
out
dec
sbb
jae
ins
or
mov
sub
xchg
push
adc
popa
or
stos
test
sub
sar
fbld
inc
cmps
movs
xor
push
outs
enter
popf
pop
pop
in
mov
dec
fidiv
or
cmp
(bad)
mov
in
mov
sub
stos
popf
outs
loope
mov
fucompp
inc
mov
nop
add
push
daa
(bad)
shl
stc
sub
mov
xor
pop
mov
imul
in
stos
outs
aaa
fnstenv
xor
imul
and
fstp
fsubrp
ret
dec
aam
inc
test
mov
push
neg
retf
gs
xchg
leave
mov
jp
mov
shl
jo
xor
fisubr
stc
leave
scas
retf
repz
sub
daa
or
rcl
pop
repz
retf
mov
push
mov
rcpps
fs
xor
daa
(bad)
out
or
jp
and
xor
mov
and
mov
xor
push
movs
or
mov
cmc
in
sbb
pop
dec
aam
rcl
mov
(bad)
dec
adc
sbb
imul
(bad)
shl
stc
or
fild
cmps
mov
lock
or
add
cdq
mov
inc
push
pop
stc
div
lock
test
sbb
push
cmp
test
dec
into
xor
into
and
fisttp
and
adc
cmp
scas
adc
rcr
aaa
pop
loope
lea
jmp
inc
push
mov
rcl
icebp
cs
out
imul
js
mov
pop
cdq
data16
in
mov
and
repnz
add
lds
popa
cdq
push
rcl
jmp
push
loop
fsubr
daa
push
std
mov
prefetcht1
add
cmp
stc
dec
adc
mov
add
mov
add
sub
fmul
pusha
fcom
mov
inc
les
pop
mov
je
mov
outs
sti
sti
and
stos
test
leave
cwde
xor
pop
pop
cli
(bad)
aam
pop
push
call
hlt
es
test
and
mov
mov
fbld
fldcw
push
or
call
cmp
pop
imul
shr
dec
popf
pop
add
in
fidivr
(bad)
sahf
scas
inc
jp
xchg
gs
mov
shl
mov
mov
jl
mov
repnz
cmp
and
mov
fnstsw
xchg
movs
int3
jb
xor
xor
fistp
jne
aaa
mov
fidiv
repnz
idiv
neg
push
or
and
push
xlat
adc
push
js
arpl
mov
inc
and
cmp
xchg
outs
and
jmp
cmc
or
add
(bad)
and
push
push
outs
fidiv
int3
clc
push
mov
jb
xor
mov
add
fsubrp
sub
ret
inc
push
cmc
shl
popf
mov
jge
and
mov
je
rol
or
test
push
mov
cwde
aaa
rcl
cmp
in
sar
test
aaa
stos
aas
pop
mov
pop
push
cdq
mov
pushf
push
jmp
mov
jne
out
loope
retf
pop
out
movs
xchg
xchg
div
sbb
and
stos
xchg
sub
ins
shl
jecxz
cmp
mov
popf
xor
in
fcomp
xchg
add
mov
fstp
sbb
xor
loope
pop
mov
jl
fisubr
and
pop
jb
cwde
test
test
push
pop
out
mov
lods
mov
xor
and
cmp
cmc
xchg
fild
push
pop
pop
or
dec
or
and
(bad)
mov
es
shl
out
js
retf
sub
retf
ror
sbb
pushf
je
adc
lahf
xchg
or
sbb
push
cmp
in
and
mov
call
push
cmps
dec
mov
xchg
and
mov
mov
in
aas
fwait
shl
cdq
lock
xchg
es
jb
sub
push
xor
add
cld
hlt
leave
mov
addr16
cmp
sbb
mov
xchg
xchg
pusha
push
mov
dec
fwait
fs
mov
rol
pop
mov
cli
mov
loop
xchg
cmp
mov
aad
pop
hlt
popf
nop
fimul
xchg
mov
or
mov
mov
cmp
jbe
and
rcl
cwde
sub
inc
les
sbb
jmp
in
lock
push
jp
fdivr
test
bnd
inc
inc
loopne
sub
adc
mov
xlat
popf
stc
add
(bad)
loop
adc
sbb
pop
(bad)
imul
inc
push
ficomp
pop
sbb
pop
lea
sbb
jb
scas
(bad)
xor
les
repnz
icebp
inc
push
stos
scas
aad
out
loope
pop
mov
in
js
mov
outs
ja
enter
dec
mov
scas
jge
in
jne
sbb
xor
clc
inc
(bad)
sbb
mov
bound
test
sub
leave
mov
ss
fstp
jg
ds
mov
jne
fs
in
les
inc
movs
pusha
imul
jle
or
(bad)
push
loopne
add
push
mov
push
xchg
pop
mov
iret
lods
or
pop
cld
mov
jb
mov
pop
mov
mov
out
pop
test
mov
movs
add
cmp
arpl
imul
and
mov
mov
xchg
jp
jne
mov
enter
lea
push
fidivr
test
xor
fwait
xlat
add
xor
or
repnz
xchg
(bad)
clts
outs
mov
aas
and
cwde
xor
jo
jmp
mov
jp
fst
int
(bad)
sbb
ret
push
(bad)
ret
rcl
mov
aaa
leave
adc
outs
stc
mov
bound
lock
pop
aam
adc
cmp
scas
sbb
inc
pop
cmps
xchg
xchg
xor
dec
add
mov
nop
out
out
aad
loopne
(bad)
pop
stc
int3
adc
jp
(bad)
dec
popa
mov
push
clc
dec
jmp
dec
std
fnstsw
jmp
pusha
sbb
xor
dec
mov
lds
sbb
loop
adc
add
into
fldcw
fidivr
out
push
xchg
mov
xchg
push
cld
into
lock
or
sbb
gs
sbb
addr16
dec
pop
pop
cmps
stos
ret
lods
loop
lods
or
cmc
mov
xchg
pusha
cdq
mov
xlat
mov
and
mov
pusha
fdiv
sbb
movs
push
or
sar
lods
dec
mov
sub
mov
xor
loop
bnd
mov
repz
out
scas
jp
movs
xchg
push
push
sbb
movs
je
jno
add
cmps
cmp
inc
aaa
mov
mov
sbb
ror
fstp
inc
jp
jge
dec
xlat
jb
js
adc
mov
mov
sub
xchg
lahf
push
inc
std
jecxz
inc
in
dec
xchg
(bad)
fnstsw
pop
clc
stos
lock
lods
mov
sbb
cdq
add
retf
jecxz
xchg
push
movs
cmp
cmp
retf
sub
mov
iret
repz
and
js
and
or
mov
outs
mov
adc
jmp
icebp
pop
mov
ins
and
js
sti
repz
or
sahf
inc
sbb
add
xor
(bad)
popf
jmp
das
jmp
je
jmp
mov
lahf
icebp
das
aas
push
jmp
lds
adc
out
jne
ret
and
call
shl
pop
and
mov
push
sbb
(bad)
mul
dec
adc
adc
shr
in
call
pop
dec
cmp
push
fld
adc
es
cmp
xchg
jnp
mov
pop
or
and
cmp
jnp
rcl
js
pop
cwde
(bad)
sub
out
jecxz
mov
push
add
xchg
icebp
push
push
test
pusha
sbb
jmp
sahf
push
jecxz
add
dec
shl
sbb
push
inc
in
push
push
cmps
mov
bound
xor
inc
movs
pop
outs
mov
inc
scas
or
test
movs
cwde
sub
in
adc
clc
sub
cs
and
sti
jb
cs
xor
xor
jmp
sub
fld
jmp
push
(bad)
ins
cmp
add
test
pusha
cli
xor
xchg
vpsubb
in
lods
pop
push
mov
daa
fidiv
add
pushf
aad
(bad)
fwait
inc
xchg
push
(bad)
iret
xlat
das
and
dec
(bad)
or
jnp
aas
jp
mov
xchg
pop
or
jmp
gs
xchg
(bad)
jnp
jl
loop
sub
out
fbld
push
pop
lea
test
icebp
push
adc
cmp
adc
push
in
or
movs
loope
int3
jno
mov
dec
popf
sub
sub
or
push
xlat
fdivp
lods
adc
stos
shl
(bad)
pop
imul
add
jo
(bad)
or
jge
arpl
pop
in
push
cli
outs
gs
and
push
mov
sub
fxrstor
xchg
neg
dec
fsub
mul
inc
mov
adc
pop
arpl
inc
jno
mov
cdq
pusha
test
out
dec
je
cwde
mov
add
bnd
or
fst
cdq
in
xor
jmp
xchg
mov
fadd
aas
push
retf
int3
mov
mov
mov
pushf
gs
(bad)
enter
lea
adc
aas
das
scas
push
sbb
cld
xchg
in
aam
call
sar
or
icebp
mov
sub
(bad)
cs
or
pop
aaa
test
sar
inc
call
ret
call
call
and
into
div
in
cmp
cs
pop
cwde
mov
fdivr
ja
fld
push
popa
(bad)
(bad)
pop
cmp
dec
jecxz
retf
nop
dec
rcr
ret
sbb
adc
and
int
xchg
lods
sbb
and
daa
mov
sub
inc
test
int
in
not
in
aam
mov
popa
mov
out
imul
inc
add
sbb
dec
sbb
or
xchg
adc
ficomp
out
add
jb
sub
iret
xlat
mov
inc
adc
outs
popa
sub
inc
repnz
and
jb
jno
and
inc
mov
jmp
jmp
adc
mov
push
into
sub
dec
mov
(bad)
repz
mov
mov
mov
mov
sbb
pop
adc
mov
sub
sub
adc
dec
jno
dec
clc
inc
or
aad
sub
ss
jo
ja
adc
cmp
dec
inc
rol
mov
jle
jl
mov
jbe
xor
push
or
xor
sbb
cmp
loopne
clc
cdq
in
cmp
mov
loop
ficomp
jb
add
add
loope
out
pushf
sahf
ret
pop
cmp
push
inc
push
or
imul
mov
mov
xchg
ja
and
loop
pop
jns
mov
mov
inc
test
ret
cmp
int3
cli
mov
pop
jl
inc
jl
(bad)
push
add
push
or
std
fcomp
sahf
retf
sahf
inc
mov
lds
pop
psubsb
and
lods
jae
sub
in
ror
ins
dec
jecxz
lea
add
cmp
es
dec
(bad)
sub
popf
ja
mov
ror
repz
popf
ja
xor
sbb
das
dec
das
pop
mov
outs
jno
xchg
les
xchg
and
jo
cli
push
in
jl
inc
std
pop
adc
mov
sub
sbb
pop
push
and
xchg
cdq
popf
dec
sbb
mov
test
(bad)
test
push
cwde
(bad)
adc
outs
jmp
sbb
and
(bad)
mov
lock
push
and
mov
aaa
iret
scas
fisttp
je
addr16
popf
cmps
shrd
int
hlt
jb
jmp
inc
xor
xor
aam
rcr
sbb
push
fistp
loop
jle
sbb
pusha
inc
inc
dec
lahf
paddd
push
ror
xor
aas
aaa
(bad)
aad
out
cdq
rcr
pop
add
add
xor
push
add
aaa
xchg
jae
mov
mov
ret
test
repz
xor
pop
test
stos
inc
dec
fcmovne
shr
jb
push
add
pop
aad
test
push
retf
pop
xchg
inc
xchg
xor
push
adc
mov
dec
mov
test
xchg
mov
add
imul
(bad)
cmp
xchg
xchg
push
sub
mov
and
sbb
push
into
mov
fsubp
popa
ds
ins
cmps
cmps
data16
cmp
loopne
scas
push
fdivr
mov
push
call
sub
not
pop
dec
sahf
xlat
push
lea
push
pop
dec
jns
xchg
cmp
cld
call
arpl
dec
push
shr
cdq
cmp
pop
daa
movs
mov
icebp
lods
mov
jae
movs
je
push
(bad)
lds
and
in
adc
(bad)
push
xchg
outs
adc
cwde
das
sub
pcmpeqw
in
dec
lods
sbb
mov
push
dec
pushf
mov
sub
test
sbb
mov
fsub
fs
ret
dec
xchg
mov
sbb
retf
dec
inc
ss
jo
test
xchg
cmp
and
cmp
mov
(bad)
pop
xchg
pop
mov
js
cmc
retf
xchg
ret
and
xor
mov
mov
dec
pop
dec
nop
imul
ror
xor
test
and
arpl
add
popa
cmp
mov
dec
pop
out
push
mov
aad
jno
sbb
mov
in
or
in
dec
pop
loop
iret
jns
cmc
xchg
(bad)
jle
ss
movs
(bad)
call
xchg
or
and
ss
push
add
cmps
jmp
sub
jb
or
call
test
add
add
cmp
scas
inc
adc
sub
push
mov
(bad)
xor
mov
ins
push
push
pop
sti
ret
scas
lock
lods
jae
mov
xchg
loopne
xor
fchs
pop
push
mov
jmp
enter
add
push
std
mov
sahf
dec
sbb
add
xchg
scas
add
xchg
add
add
enter
xlat
pop
jge
stos
addr16
mov
sbb
ja
sub
jno
inc
adc
or
mov
or
out
and
pusha
(bad)
pop
shr
out
sub
xchg
rol
pop
mov
mov
xchg
mov
fisttp
sub
add
push
jl
adc
dec
sbb
fnstsw
scas
dec
dec
mov
dec
mov
sti
jge
call
retf
inc
sbb
daa
pushf
xor
adc
xor
sub
out
scas
(bad)
xchg
mov
mov
cmp
sub
adc
sub
push
bound
fisubr
sbb
mov
cmps
(bad)
pmaxub
test
push
fdiv
jmp
inc
or
sub
add
aaa
out
pop
std
mov
dec
mov
pop
and
cs
cmc
mov
cdq
sub
pop
into
(bad)
test
lods
neg
cs
icebp
and
cmp
push
test
push
xor
sahf
add
mov
jmp
sub
and
test
into
js
cld
sub
add
cmp
dec
lock
xchg
add
les
adc
add
xor
js
push
xchg
iret
xchg
xor
pop
ins
and
jmp
nop
popf
mov
mov
jns
jmp
shr
pushf
pop
xchg
add
or
pop
pusha
mov
add
pusha
repz
jge
xor
shr
out
fisubr
in
retf
and
out
loopne
mov
and
push
int
(bad)
(bad)
mov
lock
and
in
push
arpl
mov
or
cwde
add
dec
or
int3
test
mov
out
leave
dec
js
test
es
adc
push
out
pop
repnz
bound
scas
cs
push
or
or
pop
ror
popf
retf
push
pop
mov
pop
mov
pop
sub
ins
std
in
xchg
xor
and
inc
jmp
pop
push
(bad)
stc
imul
(bad)
sbb
sbb
mov
inc
inc
sub
jg
inc
out
sbb
call
(bad)
aad
(bad)
dec
js
fistp
dec
or
inc
test
repz
xchg
adc
daa
in
jge
jae
push
outs
js
ret
popf
push
and
pop
ins
fld
ret
retf
fiadd
stc
loope
fwait
lea
push
sub
jge
fldcw
clc
pop
push
mov
jp
and
int
xlat
out
or
ja
lods
pop
push
jmp
mov
xchg
sub
mov
mov
outs
sbb
out
inc
popf
sub
fsub
dec
inc
mov
enter
inc
xchg
push
retf
imul
cmp
ror
adc
pop
clc
or
pop
int3
aaa
or
inc
lods
mov
rcr
sub
cmp
xor
jmp
mov
cmp
inc
mov
aaa
sub
xchg
gs
xchg
pop
push
jmp
arpl
movs
mov
out
ss
ret
xchg
fwait
adc
pop
push
xor
sub
retf
xor
push
pop
ret
push
in
jo
ret
(bad)
imul
inc
loopne
pop
xchg
loope
sub
cmp
mov
adc
push
sub
call
pop
push
mov
hlt
cmp
xchg
pop
cdq
jecxz
repz
ret
nop
call
or
adc
shr
stos
aaa
sub
jmp
pop
sbb
std
setl
inc
sbb
pop
sahf
push
(bad)
rcl
xor
pop
dec
imul
sahf
pop
stos
mov
test
xor
mov
les
cdq
push
je
fild
into
adc
add
leave
ficom
repz
jp
mov
and
push
mov
out
mov
stos
test
test
iret
loop
fsub
jp
push
ja
and
push
adc
in
gs
mov
test
rcr
xchg
ins
retf
fcomp
xor
fnstcw
adc
or
mov
dec
cdq
icebp
lock
xchg
cmp
xchg
xchg
pop
or
(bad)
push
pop
xchg
sbb
inc
pop
dec
cmps
into
je
or
mov
aas
bound
rcl
push
call
inc
mov
inc
fld
aam
mov
pop
xor
mov
daa
push
mov
adc
daa
leave
mov
xchg
inc
mov
jmp
mov
or
and
ins
rep
jbe
in
xchg
movs
neg
mov
inc
push
push
cmp
ins
inc
inc
test
xchg
dec
sbb
and
cmp
lock
jecxz
call
in
mov
dec
ret
cmp
test
out
(bad)
sbb
fisubr
leave
jmp
mov
sub
or
cmp
and
adc
add
push
xor
add
mov
loop
sub
mov
pop
push
fwait
sbb
push
adc
xchg
lock
cmps
fild
inc
dec
add
fnstenv
adc
das
add
nop
fwait
push
xchg
jl
jl
mov
mov
push
sahf
xchg
lods
fcmovnb
cmp
inc
xor
(bad)
jecxz
fiadd
enter
movs
mov
xor
add
mov
movs
jno
dec
push
out
or
pop
mov
out
adc
cmps
lea
mov
or
retf
jmp
outs
sub
xor
mov
and
sbb
(bad)
push
xchg
sbb
stos
mov
ins
jmp
(bad)
aam
out
inc
pop
ds
in
fwait
aaa
aas
cmp
jl
jnp
sbb
fst
push
fidiv
sti
xor
(bad)
xor
call
iret
retf
sub
add
ja
(bad)
lods
and
mov
pop
or
test
push
cs
ret
ins
das
pusha
and
fdivr
sbb
push
mov
push
test
in
inc
pop
popf
xor
enter
mov
lods
jg
sbb
jns
rol
inc
xor
xchg
cli
inc
sub
add
cmp
das
cmp
sbb
mov
push
sbb
add
loop
iret
mov
arpl
int
loope
call
repz
mov
jae
mov
jo
inc
sahf
rol
mov
out
mov
pop
pop
mov
imul
cmp
inc
lds
mov
and
xor
stos
xor
test
hlt
jno
jne
and
cld
xlat
(bad)
stc
ss
sbb
(bad)
(bad)
out
mov
and
popa
call
test
xor
retf
std
repnz
fcomp
jne
jecxz
and
mov
je
sub
push
pushf
call
test
mov
push
pop
pop
lahf
arpl
pop
add
jle
mov
push
pushf
push
cmps
(bad)
sti
jae
outs
jmp
pop
dec
ds
push
outs
inc
ror
cs
mov
fwait
aaa
jmp
mov
jmp
bound
sahf
cmps
dec
daa
ror
out
iret
jecxz
int
mov
fstp
scas
mov
out
movs
xchg
xor
iret
or
test
fisub
push
add
mov
add
jae
in
mov
and
or
bnd
jle
add
ins
jo
add
xchg
xchg
pop
push
cdq
js
mov
dec
test
cld
and
xor
add
fstp
mov
adc
mov
imul
enter
push
cmc
ss
or
dec
add
dec
stos
shl
stc
pop
pop
and
inc
aaa
dec
push
inc
clc
movs
aam
jp
inc
push
icebp
imul
adc
or
imul
mov
add
fst
test
std
xchg
in
mov
sbb
push
(bad)
out
xchg
enter
xchg
je
sub
fldenv
mul
nop
fnstenv
jo
dec
popa
dec
imul
addr16
(bad)
push
sub
jns
mov
jl
int
leave
nop
stos
ja
pop
sbb
mov
addr16
xor
adc
cli
xchg
imul
daa
add
sahf
push
(bad)
stc
lods
add
mov
loope
inc
es
hlt
add
ficom
test
(bad)
into
aad
(bad)
push
arpl
loopne
pop
mov
(bad)
push
out
xchg
lods
push
call
mov
push
jno
bound
fdiv
push
ss
jbe
(bad)
cmp
jmp
int3
push
cmp
icebp
mov
movsx
ja
inc
pop
in
aad
xchg
rcl
xchg
mov
jae
jo
and
cmp
hlt
mov
pop
sbb
int
rol
fs
mov
inc
sbb
mov
mov
popa
push
or
adc
xor
aam
push
mov
mov
jg
and
movs
pop
loop
xor
and
bound
ins
retf
push
pop
aaa
fisubr
inc
push
js
push
jle
jno
dec
add
leave
inc
jbe
pop
add
adc
push
xchg
xchg
je
scas
psadbw
or
pop
inc
das
adc
scas
push
xor
push
jmp
(bad)
gs
clc
push
test
sbb
scas
adc
out
sub
je
ret
shr
add
retf
and
out
jnp
aaa
int3
mov
das
mov
into
mov
hlt
out
adc
sbb
mov
add
iret
(bad)
adc
sbb
scas
xchg
sbb
pop
pop
push
hlt
add
mov
ror
and
iret
lods
cld
mov
xlat
call
mov
test
gs
ret
push
mov
mov
shr
mov
scas
or
lods
add
enter
jmp
lods
mov
hlt
dec
idiv
mov
test
aas
mov
jo
ret
stc
sbb
in
dec
mov
es
adc
stos
repz
in
dec
sbb
in
(bad)
mov
push
ret
out
jge
out
cs
pop
sbb
sub
pushf
push
jns
xchg
das
or
xchg
or
cmp
iret
cmp
sub
lods
data16
ret
add
add
mov
mov
fnstenv
gs
imul
sub
fs
test
xor
ss
stos
and
or
push
mov
inc
mov
loope
pushf
(bad)
mov
or
pop
(bad)
pop
add
inc
push
hlt
(bad)
sub
sub
pop
pop
fisub
(bad)
and
in
cmp
and
cmc
scas
pop
loope
outs
lea
mov
fwait
mov
js
fnstsw
clc
push
aam
sub
sub
sbb
data16
cmc
call
cmp
retf
push
rol
aad
mov
and
push
out
mov
jl
push
jle
mov
push
movs
cmps
mov
sub
aam
jl
aaa
repz
sahf
std
mov
movs
mov
and
addr16
mov
sub
js
sbb
loop
inc
lea
or
xchg
mov
repz
mov
(bad)
lods
outs
(bad)
fdiv
jne
test
lods
(bad)
jae
jge
shr
push
adc
lds
add
xlat
arpl
(bad)
fidivr
dec
and
fwait
test
mov
fwait
icebp
std
(bad)
jb
daa
cmp
xor
cmp
xchg
jae
ja
hlt
sub
mov
push
test
mov
cmps
jb
mov
int3
stos
lahf
cmp
mov
and
idiv
rol
push
aad
push
inc
xchg
dec
mov
and
call
sbb
jo
mov
imul
(bad)
les
sbb
sbb
jmp
gs
repz
mov
add
(bad)
ins
jo
push
loope
leave
lds
xor
sub
mov
cmps
push
lock
jl
cs
push
add
test
xor
cwde
sahf
ins
mov
retf
mov
mov
or
dec
or
adc
sbb
fcom
mov
(bad)
and
mov
mov
xor
outs
sub
xchg
shl
and
mov
repz
mov
mov
push
sub
popa
mov
arpl
data16
lods
icebp
(bad)
xor
je
jnp
lea
sbb
cdq
test
pop
js
xor
mov
push
sub
js
cwde
dec
out
popf
lahf
push
je
push
inc
or
test
xchg
push
sti
popf
jno
test
xchg
mov
xchg
stos
(bad)
mov
jecxz
imul
rol
sub
outs
add
adc
lahf
sub
mov
movs
das
jmp
js
or
pusha
cmp
add
jl
sub
xchg
add
jmp
xchg
mov
ja
adc
cwde
cmp
adc
pop
paddb
dec
inc
jmp
jmp
jle
adc
push
push
pop
push
jno
mov
fbstp
xor
add
cmps
pushf
jae
mul
pop
and
mov
(bad)
xchg
aam
and
cmps
not
addr16
sar
jns
iret
iret
jns
neg
pop
push
adc
mov
call
dec
inc
clc
jnp
add
xor
push
sub
fs
int3
cld
mov
mov
or
cld
imul
pop
ja
loope
imul
cwde
or
jl
js
or
jle
movs
je
lock
adc
in
cdq
imul
sbb
push
mov
cmc
xchg
sub
sahf
mov
daa
push
adc
inc
mov
enter
int3
adc
mov
in
push
icebp
lock
in
adc
cdq
dec
pop
inc
push
adc
outs
das
xlat
leave
call
xchg
pushf
retf
retf
fabs
jno
pop
cmp
out
and
(bad)
push
add
inc
iret
icebp
fiadd
dec
pop
enter
fs
mov
or
hlt
mov
jmp
adc
sti
sub
icebp
outs
sub
jg
add
rol
rcr
jp
inc
jg
outs
xor
stc
stos
cmp
and
iret
cmp
push
scas
push
pop
mov
xor
enter
dec
sbb
jmp
jg
into
jo
mov
ds
out
ror
aas
ja
cmc
lods
imul
mov
(bad)
mov
push
add
and
or
xchg
in
mov
jmp
enter
leave
repz
ins
data16
and
addr16
daa
movs
pop
push
ror
rcl
dec
push
xor
test
cmp
mov
jno
loop
mov
ficom
sub
xchg
fisubr
add
xchg
sub
pop
test
fild
cmp
movs
sbb
inc
repnz
xchg
int3
cmp
repnz
(bad)
rcl
in
cmp
mov
push
sbb
mov
mov
fsub
mov
nop
out
test
pop
outs
xchg
dec
jmp
scas
inc
dec
adc
adc
ins
mov
inc
sbb
add
xchg
lods
sbb
push
adc
jbe
aam
imul
or
sbb
sub
or
mov
push
xchg
(bad)
stos
adc
fwait
(bad)
xchg
jmp
shl
xor
in
out
and
jne
leave
js
test
scas
sub
jg
mov
pop
adc
pop
cmps
xor
sub
out
inc
rcr
mov
adc
push
inc
xchg
arpl
adc
retf
hlt
sub
fcom
in
lahf
cmc
hlt
rol
sti
repnz
call
(bad)
retf
pusha
inc
dec
ficom
ficom
add
cwde
mov
std
rcr
je
inc
dec
fwait
mov
shl
cmp
fiadd
stos
les
lds
fiadd
xchg
aas
movs
sbb
aam
add
cmp
push
in
sbb
mov
loope
mov
shr
cld
js
out
add
test
adc
les
out
inc
jns
ins
(bad)
mov
ficom
popf
retf
fwait
outs
bound
jle
xor
aaa
jmp
cwde
sbb
xchg
adc
pop
push
sub
shl
lods
and
arpl
pop
pop
shr
or
jge
push
lock
add
mov
mov
cld
adc
lock
push
lods
loop
xchg
imul
jmp
stc
mov
mov
mov
mov
and
fdiv
xor
mov
scas
aad
mov
inc
shr
mov
std
fadd
(bad)
into
cmp
ror
or
jl
pop
out
shl
mov
mov
stos
mov
movs
out
mov
push
fdivr
fdivr
xchg
in
ins
xlat
push
jl
cmp
bnd
stos
lds
sub
push
cmc
or
cli
std
adc
dec
popf
out
add
mov
jg
pop
mov
xchg
out
inc
outs
pop
repz
ins
sub
sub
mov
(bad)
cmp
mov
cmps
jmp
dec
mov
sub
adc
sbb
push
sbb
cli
sti
mov
out
sub
(bad)
jns
rcl
in
sbb
(bad)
push
invd
mov
xor
jbe
adc
pop
rcr
in
push
sub
(bad)
(bad)
popa
mov
fwait
pop
movs
ficomp
sar
outs
test
data16
in
mov
arpl
loop
pop
xchg
les
es
mov
fsub
pop
cli
imul
push
movs
sbb
dec
jmp
inc
imul
inc
leave
loope
sub
scas
push
jno
enter
mov
div
fsub
inc
adc
xor
ss
sbb
mov
pop
mov
ss
dec
xor
mov
push
inc
scas
in
mov
jmp
shr
scas
push
xor
pop
dec
adc
lahf
test
pop
push
jle
or
test
mov
mov
dec
(bad)
fcmove
data16
mov
inc
in
stos
popa
xchg
js
pop
mov
or
inc
loope
dec
loope
dec
mov
out
dec
xor
adc
data16
sbb
xchg
adc
shl
pop
inc
pop
inc
frstor
push
stc
in
push
inc
mov
movs
dec
inc
icebp
add
cdq
fild
jmp
aam
ds
add
or
shr
es
xor
pop
stc
xchg
jo
ja
(bad)
out
test
or
mov
fld
and
out
sbb
pushf
(bad)
fsubr
add
ds
icebp
in
xchg
test
clc
movs
xchg
outs
mov
ret
add
mov
js
lods
outs
push
jge
and
imul
ret
test
cmp
sbb
cmps
scas
icebp
mov
imul
jp
or
leave
addr16
mov
aaa
or
test
jl
or
push
sub
stos
adc
dec
jno
xor
mov
inc
xlat
sub
fimul
mov
sbb
jge
jle
iret
aad
mov
dec
aad
jg
aas
cli
inc
sar
xchg
sbb
ret
fmul
clc
or
outs
push
sbb
cwde
and
ins
mov
add
xchg
sub
daa
pop
pop
daa
enter
add
pop
aas
mov
in
xchg
out
test
lods
lds
mov
adc
cmps
xchg
mov
mov
sub
les
push
sbb
call
lods
adc
inc
adc
sbb
dec
fstp
(bad)
pop
arpl
jmp
jl
and
in
imul
cmp
fild
sub
jns
cdq
push
imul
xchg
in
sub
mov
jg
sbb
push
sti
jne
lea
add
add
bound
nop
stos
and
cs
xchg
mov
dec
xchg
mov
popf
pop
inc
dec
xor
inc
jl
xchg
cmc
retf
sub
lods
shl
into
cdq
(bad)
cdq
enter
xor
sub
sbb
fild
test
dec
sub
outs
fdivr
std
mov
popf
jmp
call
lods
mov
pop
pusha
pop
mov
mov
movs
pop
xlat
je
and
outs
lea
inc
fimul
cmps
das
neg
xchg
adc
in
xchg
in
mov
sbb
(bad)
sub
cmp
inc
cs
mov
repz
movs
sbb
aad
aam
inc
nop
sahf
add
mov
js
inc
inc
or
imul
call
shl
outs
cs
clc
loop
jmp
das
jae
loopne
ss
ret
mov
push
lock
in
ins
leave
cs
inc
lods
int
rol
fst
mov
test
rcl
in
adc
lods
pop
(bad)
push
sti
out
pop
rcr
cli
div
sti
pop
inc
fs
push
and
mov
shl
cmps
mov
add
(bad)
xlat
jnp
pop
push
es
pop
jl
adc
pop
xchg
add
mov
loop
in
push
(bad)
push
jle
pop
fbld
lahf
lock
cs
inc
hlt
pop
jae
adc
xchg
mov
add
dec
jbe
cmp
imul
lahf
imul
sub
xchg
adc
adc
add
loop
cli
or
pusha
pop
sar
sub
xor
imul
xchg
sbb
mov
push
retf
(bad)
mov
js
or
lods
mov
adc
stos
mov
mov
sbb
call
inc
xchg
cs
mov
ret
lahf
stc
gs
cmp
or
stc
out
in
in
fistp
fwait
inc
fldenv
inc
ss
shr
add
cmp
sbb
arpl
pop
imul
add
and
mov
pop
pop
dec
xor
cmps
dec
cmp
in
cwde
std
inc
aas
sbb
aaa
jle
sbb
push
inc
ret
rol
jp
daa
jns
(bad)
cmp
or
inc
aaa
cmp
inc
push
fbstp
test
aad
xor
jmp
push
xchg
inc
sbb
pop
in
popa
retf
add
jge
push
mov
(bad)
dec
pop
addr16
and
int
xchg
sbb
push
lds
cmp
out
leave
je
and
pop
popf
int3
and
fst
nop
dec
lods
xor
je
sub
aam
dec
jne
pop
stc
dec
mov
je
jle
xchg
mov
and
sbb
js
stos
sbb
movs
cmp
popa
xchg
pop
pop
icebp
mov
sbb
shl
hlt
daa
call
(bad)
(bad)
(bad)
clc
add
in
(bad)
cld
inc
push
adc
fild
ss
mov
add
inc
cmps
fninit
dec
jae
test
add
and
fistp
aaa
in
arpl
adc
sub
or
sub
js
xchg
push
rcl
pop
out
inc
fsubr
or
je
cmp
add
xchg
iret
xchg
pop
scas
inc
cli
outs
shl
loope
enter
sub
inc
ja
fld
pop
jbe
jo
jb
inc
jnp
lock
std
pop
xchg
adc
div
mov
fs
sbb
jmp
adc
jae
and
cmp
dec
cmp
retf
sub
push
xchg
add
movs
mov
scas
(bad)
jmp
lahf
and
mov
pop
sbb
or
cmps
sub
mov
dec
and
in
xchg
loop
sub
dec
arpl
fs
fwait
push
or
mov
jmp
jbe
pop
in
fldenv
into
xchg
sar
adc
lods
xchg
outs
push
add
mov
out
adc
inc
icebp
adc
cli
nop
inc
dec
sbb
call
hlt
pop
xchg
add
stc
loop
and
cmp
cmp
mov
addr16
ja
aaa
push
push
jb
loope
or
jbe
jmp
ja
inc
and
ss
test
jns
adc
(bad)
pop
lds
pop
sbb
scas
xlat
ror
or
sub
loopne
jl
add
enter
add
jnp
addr16
bound
(bad)
(bad)
mov
call
lock
pop
xchg
shl
pop
pop
dec
ret
push
sbb
pop
inc
dec
ds
(bad)
out
call
out
neg
push
jp
sub
pusha
mov
(bad)
(bad)
lock
rcl
dec
mov
mov
dec
loop
(bad)
xchg
into
mov
mov
fwait
inc
sbb
xor
ror
dec
(bad)
or
icebp
daa
pop
ror
inc
shl
fstp
inc
mov
or
xor
sti
ret
push
les
jb
rcr
pop
cs
or
ins
neg
push
fs
xchg
mov
icebp
movs
int3
add
xchg
lock
lds
jp
pushf
pop
jg
push
mov
dec
xor
xchg
outs
dec
leave
les
aad
outs
test
std
mov
outs
test
pop
add
inc
out
int
cmp
adc
and
mov
or
outs
rcl
repz
adc
test
adc
push
push
rcl
mov
mov
js
push
enter
dec
pushf
or
pushf
inc
and
inc
fcomi
adc
popa
das
lods
or
mov
mov
mov
sbb
jmp
out
jg
jmp
xor
je
mov
call
xchg
push
dec
push
jb
jg
outs
into
xor
and
lock
(bad)
shl
sbb
xchg
dec
outs
sahf
sub
imul
cmp
and
or
fdiv
and
dec
cmps
push
dec
mov
mov
icebp
mov
push
or
dec
jo
in
popf
jmp
mov
jnp
int3
popf
stos
jns
dec
and
pusha
neg
jmp
mov
mov
push
mov
inc
aas
xchg
call
sub
mov
scas
dec
(bad)
or
push
popa
pusha
(bad)
xchg
test
sub
cli
dec
popf
sub
sbb
in
aas
out
movs
and
cmp
lods
clc
jmp
xor
(bad)
dec
dec
(bad)
push
sub
adc
pop
or
repz
hlt
int
test
sbb
push
retf
dec
mov
pop
daa
push
mov
retf
das
stos
inc
pop
sub
jno
add
(bad)
arpl
xchg
adc
in
fwait
or
push
test
adc
jmp
fbld
mov
inc
add
mov
les
xchg
mov
pop
inc
mov
imul
fisttp
(bad)
jmp
jns
add
jmp
popf
push
out
cmp
jl
cdq
dec
mov
movs
xor
stos
sbb
xlat
adc
cmp
cwde
push
rol
loop
mov
adc
clc
popf
mov
jb
dec
or
add
outs
mov
inc
xlat
std
sub
test
and
fisubr
aas
xor
jmp
je
scas
out
cmp
inc
push
dec
retf
mov
(bad)
mov
push
(bad)
cmp
ins
sub
shr
jns
pop
add
(bad)
(bad)
push
les
in
popf
sub
pop
inc
imul
adc
test
test
mov
mov
loopne
xchg
hlt
jno
test
mov
(bad)
fnstsw
push
cmps
cmp
xchg
(bad)
gs
adc
xor
iret
outs
fsub
sbb
push
jp
sbb
aam
pop
pop
stos
push
mov
jg
out
xlat
lea
adc
aas
ds
aad
add
push
retf
sub
call
aaa
ret
xchg
push
add
mov
cdq
or
dec
mov
sahf
je
das
pop
ins
push
add
stos
fs
and
mov
call
cmp
mov
(bad)
cwde
mov
pop
pop
adc
inc
cmp
sti
loope
or
ins
ds
leave
imul
pushf
push
imul
mov
iret
adc
ins
mov
outs
inc
clc
pop
mov
jmp
ss
dec
inc
gs
or
shl
pop
jmp
add
loope
mov
or
and
or
and
mov
mov
pop
popf
mov
push
jb
cmp
aam
pushf
imul
pop
das
mov
imul
dec
dec
or
std
ins
adc
fcomi
pop
and
(bad)
(bad)
xchg
inc
iret
dec
adc
outs
jmp
jo
jp
mov
aad
adc
jbe
push
mov
xchg
xor
cli
push
dec
nop
and
mov
jge
jg
dec
sbb
adc
add
retf
inc
cmc
mov
or
dec
fild
shl
cmp
je
fs
pop
inc
lods
xor
loope
add
add
sub
pop
sub
and
jbe
pop
invd
(bad)
mov
jp
jmp
out
push
dec
scas
mov
out
cld
ins
ins
xor
and
add
dec
mov
nop
pushf
lahf
ror
call
xchg
(bad)
call
sub
dec
add
sbb
pop
mov
int3
lds
inc
mov
ret
call
jbe
cwde
aaa
push
sub
push
(bad)
(bad)
push
or
sbb
jno
hlt
scas
cmp
aas
int3
shl
retf
cld
into
aad
inc
sub
adc
pop
ret
div
cli
test
rcr
sub
mov
cmps
fcomi
jecxz
xchg
shr
and
push
push
in
xor
and
mov
jno
ror
or
ret
lods
xor
push
ret
pushf
mov
xchg
test
fcom
jmp
fstp
rcl
pop
cld
mul
(bad)
pop
or
inc
cmp
cdq
xchg
sti
xchg
arpl
jle
jmp
adc
sbb
jns
pop
push
mov
mov
sbb
clc
out
sub
call
sti
adc
(bad)
in
repz
add
or
sub
sub
and
xchg
sbb
test
inc
sub
pop
xchg
stos
pop
push
cli
les
lods
add
inc
stc
je
in
mov
mov
movs
sub
push
mov
push
ss
stos
mov
pusha
data16
mov
sub
(bad)
sub
fsub
pop
xchg
push
xchg
or
mov
test
sbb
or
sub
xor
(bad)
into
cmps
in
push
les
pop
(bad)
hlt
cs
push
push
popa
xlat
retf
pop
test
inc
stos
pusha
stos
xor
(bad)
fbstp
(bad)
xchg
call
call
cs
ret
jg
ror
sub
or
aas
cmp
jns
ret
ins
sub
icebp
js
scas
leave
out
jne
dec
pop
add
push
push
push
xchg
test
movs
sub
xchg
stos
fdiv
ds
mov
sub
jb
push
or
xor
fcom
or
aas
and
(bad)
mov
mov
daa
mov
aam
jecxz
pop
(bad)
out
push
push
push
scas
js
pop
lea
pop
cld
or
push
nop
pop
xchg
push
adc
retf
xchg
inc
push
push
in
sub
push
loope
sbb
and
pop
jne
sbb
add
sar
cmp
xor
(bad)
div
div
mov
push
clc
push
loope
sbb
adc
cmp
pop
push
push
add
adc
push
lahf
test
test
pop
loope
pop
adc
pop
fs
into
adc
ja
push
pop
stos
sbb
or
and
inc
jnp
sub
pushf
push
fcmovnbe
(bad)
pop
inc
jmp
je
or
fisttp
test
xchg
popa
sub
or
btc
test
cmp
mov
add
fcos
cli
jl
or
xor
cld
idiv
xor
pusha
outs
sub
mov
mov
dec
inc
push
movs
cmc
jge
retf
div
xchg
cwde
test
jecxz
mov
xor
jb
sub
jecxz
pop
xchg
push
hlt
mov
jp
sub
pop
lods
adc
pop
cmps
movs
xchg
iret
retf
in
pop
ret
movs
add
sti
(bad)
retf
inc
test
fadd
cmp
mov
mov
add
inc
cmc
push
mov
jge
xchg
int
mov
inc
inc
in
call
mov
jne
rol
popa
(bad)
outs
mov
iret
cmp
loop
xchg
fwait
add
mov
push
and
ds
mov
xlat
xchg
sbb
pop
or
xchg
cmp
out
or
inc
xchg
call
inc
inc
aas
pop
adc
adc
inc
xor
retf
stos
add
push
stos
or
jecxz
adc
pop
inc
mov
ja
inc
and
mov
cld
dec
or
xchg
add
jmp
(bad)
loop
xor
mov
ja
outs
add
lock
imul
xchg
mul
loop
cmp
or
adc
div
cmp
ins
pop
cmp
cmp
mov
cmp
out
cmp
pop
xor
es
mov
(bad)
sub
mov
xlat
xor
mov
dec
(bad)
scas
aad
aam
xchg
rep
jno
into
jle
or
mov
(bad)
mov
call
sbb
rcl
mov
popa
(bad)
shl
sub
mov
out
jne
imul
test
mov
mov
xor
sbb
pop
loope
mov
jle
jb
sub
mov
jne
loop
mov
sub
pop
fs
cwde
sub
fmul
clc
loope
movs
hlt
push
aaa
out
jge
pop
cld
std
ss
sub
fmul
aad
mov
into
push
sar
fcmove
dec
xchg
ss
mov
rcl
test
xor
in
inc
jmp
mov
add
adc
leave
out
arpl
xlat
inc
sbb
retf
xor
call
lods
(bad)
test
int
add
sub
jge
retf
push
adc
stos
je
mov
sbb
(bad)
jp
sub
or
fsubrp
xor
add
jno
push
es
jmp
inc
jo
(bad)
daa
xchg
cli
das
int3
je
jae
push
pop
ficom
sbb
xor
fcmovnu
jnp
repnz
dec
add
ds
dec
adc
cmp
push
aaa
mov
daa
sar
or
sbb
pop
mov
popa
dec
ret
aas
cmp
sahf
fnstcw
cwde
sub
mov
mov
xlat
push
or
adc
or
popf
jbe
lods
retf
push
sub
adc
into
mov
adc
(bad)
cld
(bad)
push
(bad)
daa
mov
xchg
or
mov
cmp
jp
(bad)
leave
adc
dec
imul
or
pop
mov
scas
neg
imul
pmaxsw
pop
mov
fs
and
sub
loopne
test
jle
inc
fisubr
movs
mov
add
loope
mov
mov
out
pop
jno
push
mov
test
rcr
test
xor
jmp
psubsw
int
mov
fcmovb
fs
or
test
mov
dec
outs
out
mov
or
add
leave
mov
fbstp
outs
sti
or
mov
jge
push
pop
sub
jg
lds
jbe
push
(bad)
push
cld
push
pop
mov
push
and
pop
mov
clc
fistp
ror
inc
js
cmp
inc
mov
and
movs
inc
rol
stos
addr16
je
(bad)
add
mov
mov
(bad)
inc
ficomp
mov
push
popf
mov
mov
int3
loopne
xchg
mov
adc
xor
jb
int
mov
mov
xchg
mul
repnz
or
lock
inc
sub
pop
dec
das
add
ins
fs
fwait
cmp
inc
xlat
mov
popa
pop
inc
aas
push
retf
lds
jecxz
(bad)
sbb
xchg
and
das
ja
inc
std
mov
inc
or
int3
cmp
dec
int
popa
in
pusha
cli
out
stos
jmp
dec
sub
jg
retf
cmps
or
imul
rcr
or
fimul
jo
fsub
mov
inc
lds
in
call
or
or
ds
in
mov
sbb
cmps
inc
movs
sub
cmp
pop
dec
ret
xor
jb
test
in
lea
shl
sub
mov
fst
cmc
adc
lahf
dec
fcmovnu
dec
inc
or
repnz
out
inc
jmp
xchg
repnz
cmp
lea
into
push
jp
dec
test
mov
jae
dec
push
aaa
mov
popa
ja
mov
sub
pop
pushf
add
(bad)
mov
push
xchg
dec
out
rcr
xchg
pop
dec
icebp
cld
xchg
fsub
mov
rol
and
cmp
and
jecxz
inc
or
and
in
inc
push
cwde
push
and
retf
push
add
call
dec
int
push
adc
pop
addr16
pop
jns
xchg
icebp
dec
inc
xor
fs
sub
jp
mov
jle
iret
(bad)
out
inc
fsubrp
dec
jbe
loopne
test
sub
(bad)
mov
xor
loop
inc
mov
bound
adc
push
mov
in
es
loop
loop
ss
jno
lods
dec
adc
ret
cmps
in
xchg
jo
call
cld
fsub
neg
mov
in
mov
xor
pusha
xchg
sahf
sahf
dec
xchg
adc
outs
movs
(bad)
out
sub
mov
push
jmp
rcr
and
aaa
jle
int3
(bad)
call
ins
sti
cmp
icebp
ins
sbb
dec
dec
jl
(bad)
dec
(bad)
imul
leave
push
push
retf
cwde
pop
or
fld
inc
mov
xor
jo
outs
ss
mov
stos
int3
(bad)
push
ja
(bad)
sahf
adc
out
add
cmc
pushf
fs
jecxz
dec
in
ja
xor
mov
dec
dec
xchg
inc
inc
popa
xor
xor
outs
aam
pushf
int3
pop
xchg
and
xor
xor
out
js
add
dec
rcr
sub
dec
fsub
cld
ret
push
int
shl
test
mov
sbb
test
jnp
xchg
movs
jmp
call
rol
outs
adc
cmp
icebp
sbb
sub
pop
add
inc
inc
aaa
jge
and
adc
mov
pushf
call
lahf
ins
and
leave
les
loopne
hlt
sub
sbb
outs
(bad)
pusha
dec
add
jle
aas
sub
iret
or
adc
shl
sub
dec
push
cmps
(bad)
push
or
arpl
iret
lds
sub
mov
dec
add
out
and
loope
rol
cmp
leave
sub
push
dec
xor
pushf
xor
and
inc
inc
add
xor
(bad)
daa
and
sbb
or
inc
sub
call
push
mov
scas
jl
xchg
push
imul
mov
jo
xchg
jb
je
pushf
idiv
call
inc
pop
mov
inc
(bad)
and
lods
inc
popf
int3
bnd
sub
push
sub
popf
movs
pop
adc
lds
inc
jne
jb
inc
push
imul
loop
xchg
scas
jae
sti
push
ret
es
mov
push
scas
mov
ror
or
push
in
push
daa
cld
cmp
xchg
push
ins
stos
cmps
sub
mov
iret
jle
cmp
es
inc
stos
imul
cmp
xchg
(bad)
mov
je
nop
and
popa
inc
dec
push
out
xor
cs
inc
addr16
or
jge
scas
jnp
ss
add
repz
xlat
sub
inc
or
les
scas
cmps
gs
mov
stc
push
cmps
jmp
call
fsubr
xchg
xor
jg
iret
sbb
mov
mov
test
mov
cwde
inc
lahf
jg
mov
jne
rcl
movs
cwde
and
out
movs
repnz
inc
(bad)
jge
xor
jp
test
rol
les
ficomp
sub
cmp
push
cwde
adc
jmp
mov
jnp
mov
cwde
adc
xchg
(bad)
jbe
inc
out
je
(bad)
mov
push
cmp
dec
mov
popf
and
cli
pop
jb
pop
dec
movq
stos
xchg
int3
loop
aaa
pop
dec
nop
mov
pusha
test
out
test
stos
push
add
pop
ja
and
movs
inc
mov
mov
dec
fs
rcl
jo
xor
cmp
cmps
xor
adc
sub
jle
push
clc
ja
jmp
dec
pusha
and
je
jne
out
scas
add
aad
call
mov
or
inc
fistp
call
(bad)
cmps
loop
sbb
fcmovnu
xchg
mov
pushf
push
cmp
or
iret
sbb
in
push
push
aam
(bad)
minps
dec
jmp
mov
mov
fidivr
cmps
pop
jge
adc
popf
xor
adc
test
sbb
rol
cmp
jmp
pop
popf
lods
das
loope
loopne
mov
mov
push
mov
push
in
daa
(bad)
std
xchg
lahf
mov
mov
adc
mov
push
push
es
xchg
ss
jnp
mov
retf
sub
xor
out
add
into
mov
mov
sub
push
pop
(bad)
int
jg
call
pop
mov
dec
mov
stos
pop
pop
sbb
sbb
xor
popf
in
add
push
pop
and
leave
retf
fs
ficomp
cli
cmp
and
cwde
cdq
(bad)
adc
xor
inc
mov
jnp
inc
(bad)
mov
inc
mov
cmc
jns
loopne
mov
dec
fmul
mov
gs
push
std
mov
rcl
mov
pop
push
push
jns
int3
add
leave
sbb
vpsubsb
mov
sub
call
aam
and
add
cmp
mov
test
xchg
cdq
call
out
push
pop
jecxz
pop
and
nop
mov
(bad)
(bad)
movs
xchg
test
mov
fwait
ror
je
pop
inc
sbb
adc
jl
shl
dec
in
mov
xchg
or
scas
mov
mov
push
in
push
pop
icebp
xor
les
jne
dec
pop
pop
inc
inc
(bad)
adc
mov
fwait
mov
pop
jmp
cli
mov
xor
push
inc
stos
adc
push
xchg
sbb
ret
popa
lea
test
cli
cdq
popa
imul
(bad)
ss
into
daa
sbb
or
(bad)
fcom
mov
cmp
stos
or
test
cs
and
test
sub
push
and
xor
jp
ins
sub
push
dec
cmp
and
jne
xchg
je
ficom
mov
jmp
push
sub
pop
mov
inc
jge
outs
js
(bad)
outs
pop
scas
add
adc
cmps
jg
fnclex
les
jle
cs
mov
inc
add
xchg
(bad)
pop
jae
stos
xchg
adc
mov
mov
jnp
sub
outs
movs
fmul
push
fst
mov
push
data16
dec
leave
fs
scas
scas
jmp
stc
and
scas
dec
out
retf
test
fisub
sbb
fld
sbb
sbb
icebp
retf
add
inc
mov
in
or
push
inc
mov
aad
(bad)
pushf
lahf
push
sub
or
dec
cli
fcomi
test
sub
movs
mov
mov
dec
ret
(bad)
xchg
cwde
dec
call
in
inc
ror
jg
retf
ret
(bad)
jo
add
jno
jle
rol
dec
stos
xlat
cdq
(bad)
fs
mov
mov
pop
sub
jbe
aad
mov
mov
loop
loop
xor
(bad)
loope
das
jo
mov
mov
sbb
rcr
call
pop
mov
cdq
inc
cdq
lods
dec
idiv
pop
push
inc
call
loope
sbb
add
jge
mov
push
arpl
pop
cmp
jno
dec
xchg
(bad)
push
fnstenv
lds
mov
test
inc
jp
xchg
lds
addr16
fwait
(bad)
cmp
mov
daa
cmc
aas
fiadd
sbb
dec
push
sbb
ror
mov
xor
shl
in
lea
in
add
xchg
sbb
(bad)
std
loop
pop
mov
xchg
or
fsubr
and
inc
add
xor
jbe
imul
and
jae
inc
shr
mul
jmp
add
popf
test
daa
les
sbb
xchg
xor
out
cmp
psubw
scas
fwait
sub
call
pop
cmc
cmp
or
mov
mov
out
aaa
mov
adc
pop
jno
jecxz
push
idiv
cmp
mov
lods
mov
mov
pop
cmc
xchg
mov
jge
xchg
jnp
sbb
add
pushf
pop
iret
imul
pop
or
test
pop
loopne
pop
popf
and
mov
push
xor
xor
cmp
mov
push
add
into
pusha
rol
mov
popa
dec
mov
enter
retf
mov
ja
(bad)
nop
jg
and
xor
xor
(bad)
fst
sub
cli
pop
cwde
xchg
and
out
or
or
push
or
cmp
les
pop
arpl
lahf
cmps
enter
add
(bad)
xchg
or
retf
cmp
addr16
xchg
cmp
repz
fisub
sub
push
pop
mov
shr
fwait
enter
mov
scas
xor
ret
sub
and
lods
outs
les
and
sbb
dec
pop
movs
add
adc
xor
jg
call
dec
push
xchg
jmp
or
mov
and
gs
mov
lea
jecxz
mov
and
add
jecxz
and
mov
stos
aad
or
fild
daa
lea
sti
sub
sub
(bad)
jg
sar
jmp
cli
fnstenv
es
dec
mov
jge
xchg
sbb
aam
loope
scas
xchg
cmp
push
push
dec
icebp
ror
and
mov
arpl
mov
jmp
fdiv
fld
je
xchg
nop
cmp
jle
dec
xor
in
popa
fadd
jmp
stos
mov
mov
stos
push
xchg
pushf
pop
js
inc
ror
gs
fist
sbb
add
inc
mov
and
xor
adc
push
repz
out
ins
fwait
xor
mov
lahf
push
addr16
dec
cmp
shl
mov
xchg
sbb
adc
jno
mov
cmp
add
mov
mov
xchg
ret
adc
iret
(bad)
std
into
mov
aaa
or
mov
repz
ficom
jmp
xor
push
xchg
xor
stc
cmp
cmp
jnp
out
mov
sub
dec
adc
scas
movs
jno
mov
lea
rcl
pop
outs
imul
fcomp
pop
in
xchg
lock
pop
shl
xchg
or
sub
dec
popa
int
xor
cmp
jl
dec
gs
jnp
js
lea
shl
(bad)
jecxz
lahf
and
out
rol
or
cmp
fcmovbe
and
sti
mov
jmp
pop
(bad)
cmps
(bad)
out
fmul
shr
cmps
pop
mov
pop
bound
mov
fs
jmp
and
sti
call
jae
mov
mov
cmp
mov
push
xchg
xor
push
dec
ja
add
xchg
rcl
jmp
daa
popf
mov
arpl
mov
cmp
mov
mov
int
repz
popa
xor
or
lea
mov
xor
sbb
idiv
jb
pop
hlt
mov
pop
adc
outs
jl
aam
and
ror
mov
je
xchg
mov
cmps
fst
jle
and
clc
pop
fnstcw
jae
xchg
jl
inc
jl
jp
xchg
mov
adc
dec
imul
shl
ror
mov
cwde
add
sbb
jg
or
adc
cli
inc
mov
repz
mov
fdivr
enter
or
aaa
xchg
pop
(bad)
(bad)
jg
xchg
mov
cdq
sub
cmps
push
push
out
arpl
out
popf
stos
retf
ins
or
(bad)
push
and
mov
cdq
aad
ins
pushf
loop
dec
fsub
adc
ret
cmp
aam
pushf
or
jmp
cmp
outs
int
js
imul
inc
or
mov
fadd
push
push
repnz
mov
sbb
outs
mov
inc
xchg
push
push
adc
dec
clc
nop
int
adc
call
bound
(bad)
sub
pop
xor
pop
pop
movs
pop
ds
xchg
(bad)
jecxz
aaa
mov
jbe
mov
das
mov
mov
clc
mov
dec
daa
data16
repnz
out
mov
cmc
xchg
adc
in
mov
popf
les
and
popa
(bad)
clc
mov
dec
pop
inc
in
xchg
ret
aaa
data16
mov
(bad)
test
fcmovne
cwde
movs
and
pop
mov
leave
retf
bnd
push
arpl
inc
in
add
shr
mov
or
cmps
and
call
cmps
and
mov
int3
leave
and
ret
popa
add
sub
add
or
mov
imul
sub
pop
dec
sahf
icebp
pop
shr
mov
xor
inc
ins
mov
mov
jl
push
in
xor
div
xchg
mov
gs
mov
fwait
inc
mov
call
pop
sbb
or
test
ins
movs
call
movs
mov
cdq
rcl
xchg
and
add
data16
mov
retf
aam
jno
jno
imul
adc
inc
push
push
adc
(bad)
rcr
mov
repnz
cwde
mov
jo
adc
shl
and
arpl
sub
pushf
sub
mov
inc
dec
xchg
daa
mov
inc
pop
movsx
jb
cmc
arpl
xchg
out
ror
loope
sti
arpl
or
push
and
inc
jae
in
loope
push
and
in
aas
stos
aam
xor
and
int
fst
cmp
shl
add
inc
inc
aaa
mov
and
xlat
mov
mov
jmp
gs
push
dec
and
cmps
cmps
add
mov
add
gs
mov
pop
popf
loop
mov
sti
or
loop
add
cs
inc
(bad)
(bad)
and
push
xor
lds
or
out
push
adc
pushf
jo
fsub
jmp
or
add
cmps
jbe
mov
add
jp
retf
outs
test
mov
hlt
pop
push
(bad)
js
sub
push
sub
lods
mov
test
call
ret
nop
inc
mov
adc
inc
xor
push
in
cmp
cmps
neg
jns
cmc
(bad)
movs
out
jno
push
mov
out
data16
fbld
jmp
mov
pop
cmps
sbb
loop
xchg
addr16
adc
stos
mov
mov
jl
push
or
jecxz
(bad)
adc
ds
(bad)
mov
mov
jge
adc
vxorps
movs
aad
ins
adc
jno
mov
jno
es
pop
mov
jl
add
iret
pop
cmc
shl
int
pop
mov
mul
not
out
mov
sub
and
cmps
mov
mov
mov
inc
mul
test
mov
cs
mov
inc
jl
outs
and
lds
cmp
sahf
scas
and
xlat
adc
stos
mov
or
xchg
or
je
dec
sahf
ins
pop
push
cmps
lods
ficom
push
dec
xchg
loop
dec
jp
(bad)
cld
mov
mov
push
cmp
enter
mov
movs
adc
cmp
push
cmp
rol
mov
or
jg
lahf
mov
stos
adc
iret
xchg
jb
bnd
jbe
cmp
(bad)
jns
cmps
or
aad
sbb
fmul
inc
and
sti
sub
cwde
jg
xchg
pop
jmp
push
and
sbb
shr
popa
cmp
js
sti
imul
inc
jnp
(bad)
(bad)
mov
out
rcl
pop
add
pop
ror
pop
idiv
inc
xchg
cs
popa
movs
xor
daa
mov
mov
mov
test
call
mov
frstor
jnp
pop
sub
(bad)
jmp
mov
test
fmul
xor
aaa
mov
popa
ja
xchg
sbb
jno
call
pop
call
std
add
inc
pop
leave
hlt
int3
in
xor
mov
ja
and
add
pop
adc
retf
lahf
test
rol
movs
daa
ret
sbb
xchg
movs
lock
cmp
enter
mov
mov
jo
mov
jb
mov
lahf
arpl
loop
test
mov
xor
sub
and
mov
xlat
sahf
inc
mov
scas
push
fwait
mov
js
adc
mov
fild
push
retf
jno
sbb
fist
hlt
test
popa
jns
scas
pop
in
pop
mov
and
imul
or
push
out
bound
fist
sub
leave
sub
xor
xchg
or
rcr
jns
retf
sub
mov
fwait
int3
scas
mov
push
(bad)
scas
sub
xchg
cmp
stos
and
add
xchg
ja
jns
mov
repnz
and
dec
pop
(bad)
jo
retf
rcr
and
sub
or
jecxz
pop
fistp
out
xor
inc
adc
ret
ja
shl
cs
xor
adc
mov
pop
xchg
stos
inc
mov
mov
xor
scas
inc
aam
ja
inc
dec
add
ret
pop
lods
xchg
mov
sbb
ds
fsubrp
imul
(bad)
fcomp
push
cmps
add
or
sbb
ds
cmp
mov
sti
shl
sub
cmps
mov
xchg
in
xchg
mov
xchg
and
inc
pop
pop
enter
shr
loop
scas
xchg
adc
je
cdq
lods
stos
pop
xor
cmp
ror
imul
push
xchg
fwait
mov
mov
sbb
cmp
xchg
xchg
sub
sub
jl
ins
imul
ficom
jecxz
mov
xchg
cmp
or
mov
mov
or
cli
jge
adc
xor
add
cmp
pop
ds
sbb
loop
mov
ret
repnz
sub
xor
jbe
int
ss
hlt
fs
test
loop
adc
inc
les
lock
fmul
aaa
pop
cli
dec
in
dec
call
loop
icebp
mov
cwde
adc
fsubr
retf
cmp
mov
push
jge
pop
and
inc
imul
(bad)
into
xchg
xor
sbb
sbb
aad
addr16
call
dec
add
push
xor
rcl
add
pop
int3
sbb
mov
or
sub
mov
dec
test
retf
jmp
mov
jg
imul
xchg
prefetchw
cmp
aaa
pop
loopne
daa
aam
into
addr16
dec
(bad)
mov
mov
pop
cmps
lock
mov
cmp
retf
adc
pop
loop
mov
sbb
adc
out
mov
jp
test
lock
sub
and
push
outs
das
pop
mov
ins
ficom
rol
cmp
cmp
loope
jecxz
pop
push
pushf
xchg
push
das
adc
adc
das
jmp
pop
mov
in
test
or
sub
rcr
sbb
shl
je
lea
imul
fmul
rcl
adc
mov
shr
in
jmp
hlt
mov
or
pop
push
repz
fnstsw
xchg
and
loopne
pusha
xor
outs
pop
cdq
jnp
xchg
and
arpl
sbb
int
ret
das
test
out
aaa
cmp
int
jle
and
fsubr
fnsave
es
inc
inc
sar
xor
xchg
out
out
popa
outs
and
out
lock
loop
mov
push
stc
lea
fldenv
inc
dec
pop
or
jns
stos
jne
sub
aas
sar
mov
inc
mov
push
adc
imul
jae
xchg
iret
adc
dec
add
dec
jp
test
mov
gs
sahf
pop
call
pop
mov
call
xchg
or
ja
nop
pop
fimul
mov
aas
push
inc
inc
adc
test
out
(bad)
add
cdq
pop
int
pushf
lods
out
push
push
sub
xchg
mov
add
in
pop
(bad)
arpl
scas
addr16
pushf
push
mov
stos
jp
xor
fild
jbe
sbb
test
xchg
sub
mov
(bad)
lods
in
pop
xor
hlt
test
rcl
pop
jle
inc
pushf
push
sbb
and
jmp
xchg
fwait
mov
es
xor
js
stos
fiadd
(bad)
pop
gs
or
daa
push
loopne
xchg
neg
mov
repnz
fwait
push
dec
cmc
mov
inc
xor
push
jno
add
jns
int
mov
fld
test
pop
mov
fisubr
jo
mov
in
(bad)
ss
jmp
push
sbb
jl
pop
pop
xchg
es
pop
mov
out
sti
mov
jmp
pusha
pop
dec
sbb
lds
pop
sbb
dec
push
imul
cli
mul
popa
xlat
lds
repnz
xchg
jmp
data16
(bad)
popf
inc
push
retf
ja
lods
iret
xor
add
xchg
add
loope
push
popa
jno
xchg
int
lds
xlat
popa
and
adc
scas
xor
(bad)
scas
mov
enter
int3
cmc
outs
sbb
push
inc
pop
cmps
add
jp
mov
xor
mov
mov
in
xchg
lods
dec
mul
neg
xor
cmp
pop
imul
add
xchg
mov
adc
fbld
sub
or
inc
cmp
clc
push
sub
jne
pop
push
jg
jno
adc
adc
mov
dec
mov
mov
fstp
and
bound
jo
xchg
inc
mov
mov
mov
sbb
or
popa
rcl
push
shl
in
pop
sbb
stos
jge
or
aam
push
jecxz
mov
out
mov
inc
aas
cmps
xor
mov
(bad)
out
push
movs
pushf
push
imul
(bad)
retw
shl
call
jno
stc
or
mov
xchg
std
scas
cwde
cmp
push
ret
ins
cmp
mov
loopne
movs
sbb
bound
push
daa
jnp
jbe
push
fucomi
js
lods
mov
or
ins
clc
push
push
pop
mov
aas
scas
dec
retf
int
sub
sub
mov
pop
jnp
mov
add
jns
xor
xchg
adc
inc
(bad)
jno
mov
jns
dec
push
xchg
out
enter
inc
and
(bad)
into
mov
inc
or
test
div
mov
jp
shr
(bad)
jg
scas
lods
or
ror
xchg
lahf
dec
in
ins
mov
xor
lea
jmp
lods
xchg
and
in
das
bound
daa
jne
fnstsw
retf
cmp
ret
cmps
or
movs
inc
lea
test
pop
pop
push
call
pop
add
cs
inc
xchg
out
imul
aam
js
jle
movs
push
xor
push
cmp
mul
push
lahf
popf
mov
fistp
mov
out
mul
cmp
(bad)
jmp
out
pop
mov
dec
(bad)
(bad)
(bad)
cmp
adc
xchg
inc
sub
imul
pop
fild
ret
mov
push
fcmovne
loope
xchg
fcom
jns
bound
repnz
dec
fcomp
pop
jnp
and
dec
push
out
repnz
push
clc
xor
les
dec
hlt
mov
rcl
mov
mov
sbb
sbb
xor
hlt
(bad)
imul
leave
pop
test
out
push
aad
sub
je
ins
push
pop
outs
cli
movs
push
lea
fadd
nop
cmp
stos
outs
ins
or
stos
je
sbb
fadd
mov
cs
mov
fistp
call
cmps
jmp
popa
jo
call
jge
add
mov
sti
mov
jns
push
add
iret
movs
cmp
xor
lods
adc
inc
lock
out
imul
retf
out
dec
aas
es
call
pop
xchg
adc
xchg
sar
lahf
mov
push
jb
fneni(8087
jmp
jl
cs
add
fiadd
dec
push
mov
xchg
xor
faddp
fmul
add
mov
sub
sub
xor
pop
or
stos
aam
hlt
sahf
outs
jmp
mov
ss
pop
cli
cmp
stos
stc
sub
nop
and
cmp
pushf
jmp
mov
ins
push
pop
js
lea
loope
mov
push
(bad)
cmp
daa
adc
xchg
addr16
cld
lods
lahf
pop
cmc
cmp
xchg
inc
pusha
hlt
call
push
mov
cdq
push
xor
dec
pop
test
sub
clc
jg
jle
pop
dec
mov
test
mov
jp
jmp
xchg
std
jle
repz
xchg
dec
adc
mov
jae
ins
jo
retf
and
and
jne
mov
out
adc
sub
ss
repnz
mov
jno
hlt
neg
inc
repnz
arpl
out
movs
repnz
fs
xchg
lea
mov
scas
cmp
or
out
push
loopne
outs
sub
jns
mov
mov
mov
jmp
push
sbb
mov
repz
xchg
or
inc
xchg
cmp
push
data16
retf
ficom
pop
xchg
lea
dec
sbb
jl
xchg
movs
inc
push
pop
out
cdq
data16
xchg
jbe
xor
jbe
stos
stos
ja
inc
sbb
scas
or
test
cmp
inc
cmps
add
retf
or
into
adc
ds
rol
adc
retf
loope
xor
jle
movs
js
add
in
icebp
lds
pop
jnp
aas
jl
repz
imul
or
dec
(bad)
cwde
sub
mov
jmp
pop
cs
or
add
shl
sub
sbb
es
es
das
pop
pop
mov
in
mov
inc
or
mov
xchg
mov
inc
enter
rcr
lock
ret
movs
movs
lock
arpl
push
inc
or
push
push
fisttp
sub
xchg
dec
jg
and
add
mov
cmps
pushw
arpl
mov
in
and
imul
shl
push
inc
call
xchg
dec
or
jle
cli
ja
stc
sub
sub
pop
loop
and
loope
jmp
outs
int
or
ss
sti
sahf
(bad)
lods
gs
push
sbb
ret
xchg
rol
das
data16
cmp
jg
cmp
enter
pop
(bad)
inc
mov
cmps
in
cmc
inc
fsub
sub
icebp
add
xor
jae
sub
inc
sbb
pop
sub
fadd
mov
push
dec
adc
inc
inc
icebp
out
fdiv
sub
pop
or
jno
mov
jnp
mov
cmp
test
dec
and
ins
or
mov
jecxz
out
jmp
jmp
add
pop
adc
inc
or
movs
xor
inc
sbb
in
jg
xchg
movs
sub
daa
sub
popa
aad
rol
enter
sahf
and
xor
vmwrite
cmps
pop
imul
fcomp
and
retf
clc
ror
ins
ret
mov
ins
stc
(bad)
scas
lea
mov
xlat
pop
stc
cmc
fld
mov
leave
push
sbb
pop
push
jp
jns
cmp
and
inc
(bad)
fdivr
minps
(bad)
cld
jae
test
jo
rol
adc
cmp
mov
jp
arpl
pop
and
inc
dec
ins
dec
std
test
mov
inc
or
repnz
pop
lods
push
cmp
aaa
fs
pop
icebp
arpl
ror
pusha
add
hlt
lahf
(bad)
mov
pop
icebp
rcl
stos
mov
xchg
jb
aam
add
test
pushf
mov
les
repnz
or
and
fwait
daa
jno
and
pop
jno
dec
fmul
les
jmp
sbb
mov
mov
xor
out
arpl
fcom
pop
(bad)
mov
and
sub
out
stos
test
cmp
scas
stos
add
movs
aaa
jo
mov
(bad)
in
aam
or
xchg
(bad)
rol
(bad)
call
jo
stc
shr
push
or
xor
(bad)
mov
jmp
mov
sahf
push
sbb
shl
mov
stos
arpl
std
push
out
dec
adc
xor
dec
xor
inc
ins
jb
push
pop
lods
push
jnp
or
ds
arpl
gs
and
sbb
jne
sar
out
repnz
icebp
mov
pop
gs
sbb
leave
adc
lahf
or
mov
dec
sbb
adc
rol
jmp
jnp
movs
xchg
imul
jb
fisttp
and
xchg
dec
mov
bound
lahf
ss
jbe
into
shl
ins
xchg
sub
call
adc
popa
(bad)
xor
les
cmp
sbb
(bad)
ins
sub
pop
call
cmps
call
dec
mov
or
sub
ins
fnstenv
cmc
pop
pop
repz
push
inc
es
retf
xchg
sub
pop
xor
inc
bound
inc
or
dec
inc
xor
repz
xor
pop
into
cdq
rcr
cmp
movs
iret
and
mov
jmp
movs
jp
adc
add
push
dec
arpl
scas
sub
fcom
mov
add
cmp
dec
add
fistp
adc
sub
stos
popf
inc
imul
lahf
gs
out
add
xor
stos
fsub
mov
and
jb
push
stos
mov
movs
(bad)
or
pop
mov
ret
jnp
sbb
xchg
and
pop
jmp
loope
sbb
stos
into
inc
outs
das
mov
cli
cmp
leave
adc
mov
jb
push
mov
fild
stos
popf
jp
xor
push
ja
js
iret
(bad)
sti
xor
loopne
jp
cmp
add
dec
imul
ret
das
xor
push
and
cli
stos
test
fimul
mov
loopne
pop
add
test
(bad)
stos
mov
ret
jb
pop
add
retf
mov
call
push
aad
jne
loope
pop
push
xchg
ds
pop
data16
ror
das
push
dec
inc
std
dec
lds
aaa
push
sbb
repz
sub
add
cmp
push
outs
xchg
adc
mov
push
lods
sub
sbb
and
out
push
xchg
or
sbb
cmc
scas
or
add
cdq
and
lock
or
lds
ins
ret
rcr
std
xchg
dec
icebp
adc
call
std
or
mov
or
(bad)
retf
rol
mov
adc
lds
fdivr
popa
cmp
aad
add
popa
mov
ror
mov
inc
mov
xchg
in
push
inc
pop
aaa
fisttp
dec
adc
aaa
adc
mov
add
cld
fs
aas
test
push
and
fdiv
sar
fdivr
repz
sbb
dec
ret
cmp
dec
clc
pop
mov
sar
popf
aaa
mov
sbb
scas
outs
cdq
xchg
sub
ret
or
pop
out
adc
icebp
jno
iret
pusha
mov
mov
xor
ret
call
cli
mov
sub
xor
push
push
scas
orps
es
pop
fisttp
out
in
sbb
ins
pop
mov
dec
jp
inc
mov
aam
ss
mov
in
jp
in
ficom
inc
inc
sbb
movs
test
pop
add
iret
jmp
mov
fmul
jmp
leave
stos
scas
mov
ja
pop
ss
xor
cld
and
jo
adc
cmps
pop
sub
dec
inc
xchg
xor
dec
out
mov
push
add
std
xor
mov
fnstenv
int3
cld
mov
xor
xchg
cwde
test
or
outs
pop
sbb
xor
xchg
loop
adc
mul
enter
adc
push
ss
dec
dec
mov
dec
dec
dec
inc
add
mov
cmp
sbb
cmp
inc
in
sub
retf
dec
and
dec
fadd
jle
xor
retf
popf
mov
fnstenv
xchg
popf
mov
mov
jbe
adc
sbb
mov
dec
retf
or
hlt
add
in
int3
mov
pop
jo
sahf
(bad)
pop
mov
mov
ror
add
pop
test
or
pop
sti
xchg
xor
rcr
idiv
jb
movs
jg
imul
mov
fist
dec
sub
std
repnz
in
ds
in
js
pop
mov
push
mov
xchg
out
int3
cld
xor
xor
cmp
and
(bad)
cld
add
mov
lds
hlt
pop
fs
add
stc
out
adc
add
comiss
cdq
adc
sub
aam
fcomp
icebp
mov
push
xchg
cmps
jno
into
cmps
and
outs
or
mov
cmps
imul
mov
push
mov
or
shl
jmp
xchg
cmc
inc
push
xor
push
outs
xchg
push
dec
push
cmp
xor
jae
push
cmps
lods
jbe
mov
inc
add
fisub
test
mov
leave
(bad)
pop
mov
mov
mov
lods
mov
inc
push
or
loopne
sub
gs
clc
adc
mov
mov
mov
fmul
retf
add
dec
add
mov
jb
xchg
jne
jne
cs
leave
nop
push
and
hlt
outs
std
mov
mov
pushf
int
add
add
(bad)
retf
cmp
push
sbb
dec
cmp
int
in
ds
jns
mov
inc
jno
inc
adc
mov
je
xor
or
int
pop
xor
fsubr
mov
xchg
push
jl
cdq
loop
xchg
repnz
(bad)
sub
add
ins
bound
repz
mov
mul
mul
pushf
fs
sbb
jmp
test
mov
into
inc
inc
es
or
pop
cmp
and
test
ss
imul
sbb
in
add
xchg
rcr
jl
mov
pop
push
xchg
nop
mov
jno
mov
mov
and
push
jb
movs
mov
sub
fs
push
scas
jle
or
stos
xchg
imul
inc
call
mov
cli
aam
scas
daa
xor
push
cwde
mov
sub
int3
and
popa
add
into
cmp
dec
test
popf
sbb
push
pop
adc
outs
push
mov
jmp
push
cwde
pop
mov
sub
aaa
in
mov
cmp
mov
cmp
inc
jno
add
dec
fstp
ret
daa
cwde
sub
mov
push
lods
and
rcl
bound
repnz
idiv
fcmovnu
fdivr
and
shr
cmp
sti
cwde
sbb
inc
xor
xor
fidivr
neg
cmp
retf
cmc
mov
ins
mov
and
or
std
cld
pop
and
push
mov
xor
jb
dec
sbb
jmp
pop
inc
loope
jne
out
cli
jne
test
aas
push
mov
sub
movups
ja
adc
push
jmp
enter
pop
mov
pop
sub
inc
jo
pop
retf
sub
int
pop
arpl
leave
fimul
cmc
cdq
addr16
and
ret
out
fiadd
rcr
pop
in
retf
in
or
push
pop
out
push
push
mov
jbe
add
mov
loopne
lods
adc
push
ins
arpl
pushf
mov
cmps
popf
add
mov
cwde
or
mov
jbe
movs
js
scas
fidiv
addr16
inc
lahf
fnstenv
outs
iret
in
sbb
scas
fstp
daa
add
call
cmp
sub
pushf
jne
in
stos
mov
pop
outs
xchg
cmp
xor
pop
arpl
je
pop
pop
lods
jge
mov
jnp
xlat
pop
cmc
jnp
arpl
sahf
nop
mov
pop
fwait
xchg
popa
ja
cmps
jmp
adc
outs
mov
pop
mov
mov
out
imul
aad
(bad)
push
cmp
bound
and
xor
shr
je
outs
push
xchg
int
lods
dec
push
out
pop
push
mov
std
outs
or
bound
in
retf
and
adc
xor
jmp
xchg
sub
sbb
push
mov
mov
push
repz
sub
inc
jecxz
push
lahf
and
test
lmsw
jmp
imul
mov
push
mov
xchg
jne
hlt
and
aaa
add
(bad)
mov
xchg
pop
mov
inc
stos
pop
hlt
call
retf
pusha
jo
cld
adc
inc
outs
cs
std
frstor
push
call
sub
adc
add
or
(bad)
sbb
and
imul
xchg
in
addr16
fld1
and
shl
jecxz
stc
add
jb
dec
nop
out
push
loope
and
daa
sbb
les
dec
cmp
xchg
ins
or
retf
jae
inc
ror
pop
dec
xchg
lods
push
outs
sub
or
cmp
sub
sub
push
test
aas
xlat
shr
(bad)
int
xchg
inc
sti
xor
jp
add
pusha
hlt
cmp
ucomiss
jge
add
jg
xor
xchg
sbb
cmp
jl
hlt
adc
or
dec
(bad)
sub
add
fwait
stc
cmp
retf
inc
pop
rol
outs
sbb
push
mov
mov
repz
cmc
call
std
dec
sbb
jbe
aad
push
xlat
dec
sub
(bad)
ds
test
xchg
cmc
jmp
out
aas
in
xor
jo
test
in
test
enter
mov
mov
sbb
mov
inc
pop
loopne
sub
shr
inc
xchg
inc
inc
daa
push
jg
or
arpl
popf
xchg
aas
jmp
push
add
iret
es
add
daa
dec
inc
mov
dec
jle
xor
or
js
movs
lea
jp
js
clc
push
dec
mov
aam
xor
mov
int
ret
ret
test
mov
inc
neg
sbb
sub
adc
stos
(bad)
into
pop
pop
ss
sub
jmp
xlat
push
lods
mov
mov
dec
ficomp
scas
jno
push
or
pushf
bound
hlt
lods
push
test
mov
push
inc
ror
btr
pop
loop
sub
outs
bnd
mov
push
inc
mov
mov
aam
test
(bad)
pusha
cld
dec
(bad)
stos
outs
push
jge
jp
push
rcl
mov
retf
pop
test
(bad)
(bad)
dec
gs
push
add
outs
or
dec
mov
or
rcr
jno
ficomp
lahf
mov
pushf
push
call
rsqrtps
test
and
push
stc
or
test
add
cmovae
cmp
push
rol
scas
popf
cmp
xor
call
add
inc
das
in
jmp
inc
add
std
inc
fbstp
addr16
mov
jbe
ja
fmul
sbb
lea
and
dec
mov
ret
adc
push
mov
out
mov
mov
sub
mov
add
cmp
ins
out
xchg
or
jp
fisubr
(bad)
out
jle
out
mov
mov
sbb
sahf
jbe
sub
(bad)
mov
call
shr
pop
inc
pop
mov
mov
mov
jnp
pushf
dec
jge
jmp
mov
daa
out
sar
add
sub
sub
pop
ss
add
pop
mov
lahf
je
cmps
outs
mov
adc
jle
mov
xlat
scas
stc
cld
mov
test
sub
stos
retf
mov
std
xchg
xchg
pop
ss
jb
and
mov
and
arpl
and
adc
arpl
inc
sub
(bad)
or
pop
xchg
sub
jmp
pushf
jns
jecxz
mov
fstp
cmps
lea
mov
fs
push
cmc
cmp
xor
das
shl
cwde
out
call
sub
fdiv
mov
add
cli
shr
fcom
aaa
pop
loope
daa
cmp
fs
xrelease
mov
fnstsw
ins
div
outs
cdq
add
pop
das
(bad)
int3
les
pop
jne
inc
mov
out
inc
mov
jmp
mov
xchg
ds
ins
sub
je
mov
retf
imul
dec
and
fs
sub
jns
rcl
fmul
test
or
sub
movs
xchg
clc
xor
outs
jge
cmp
jno
into
mov
movs
cdq
fild
cmp
ds
std
xor
sbb
mov
enter
pop
cwde
xchg
fidiv
cmp
cli
loopne
inc
cdq
(bad)
mov
ss
inc
cmc
push
fnsave
fisub
(bad)
loopne
fst
in
imul
xchg
lods
and
retf
xchg
out
mov
mul
xor
mov
cmp
push
jb
pop
xor
icebp
test
fs
repz
pop
adc
inc
aaa
outs
repz
cmp
dec
imul
(bad)
mov
mov
jno
push
mov
cmp
jbe
pop
dec
out
(bad)
enterw
adc
std
loope
lock
mov
add
xlat
(bad)
cmps
fsub
push
out
inc
mov
out
inc
jp
stos
outs
pop
loope
sahf
jno
pushf
or
stc
bound
inc
aad
jmp
lods
cmp
mov
push
test
ja
add
fimul
fistp
xor
nop
pushf
jecxz
iret
rol
jmp
pushf
sbb
out
(bad)
mov
icebp
cmp
add
or
rcr
push
cdq
jne
cmp
test
stos
xchg
xchg
out
popa
inc
xor
sbb
(bad)
jne
mov
lea
pop
es
je
sahf
shr
mov
jns
(bad)
enter
lea
jns
mov
ror
sub
mov
out
ins
cmp
shl
in
std
loopne
(bad)
xor
sbb
mov
add
xchg
scas
ins
sub
mov
ror
xchg
and
inc
repz
jbe
std
xchg
in
ins
and
outs
xchg
stc
out
pop
out
iret
aam
rcl
push
dec
ror
inc
push
or
pop
xchg
cmp
or
dec
lock
inc
inc
les
adc
(bad)
cwde
ds
dec
or
push
pop
jg
dec
(bad)
call
test
test
inc
dec
aas
push
push
dec
fisttp
loopne
xchg
cvttps2pi
xlat
or
pop
test
add
mov
(bad)
cli
mov
lods
fdivr
xor
adc
pop
stc
mov
and
loop
pop
dec
dec
pop
jl
scas
dec
inc
cmc
push
outs
add
cmp
movs
movs
ss
cmp
cmp
daa
js
sub
cmp
jg
ret
cmp
in
js
(bad)
loopne
cmp
jmp
into
xchg
call
mov
dec
(bad)
jns
jl
adc
inc
dec
xor
mov
or
xchg
push
push
pop
adc
push
xor
out
imul
in
cmp
sbb
or
icebp
push
mov
push
scas
cld
mov
sar
cmp
fdiv
je
aad
push
dec
std
lock
mov
sbb
inc
xadd
xchg
(bad)
in
retf
outs
test
retf
call
pop
out
ffreep
or
(bad)
ins
dec
jcxz
test
mov
mul
js
inc
ds
push
shl
push
pop
shl
(bad)
dec
inc
or
and
mov
dec
push
mov
daa
add
aad
inc
mov
es
int3
push
pop
ja
in
cwde
pop
mov
(bad)
mov
dec
pop
dec
sub
pop
xor
mov
cmp
jae
fld1
xlat
xor
or
(bad)
call
ins
test
mov
or
jge
enter
pop
adc
jg
dec
mov
or
rcr
add
pop
fcom
repz
jne
sub
arpl
add
(bad)
sbb
xor
les
pop
pop
aas
mov
pop
and
ficomp
fstp
ret
xchg
imul
xchg
shl
push
aaa
pop
xor
inc
push
in
jl
cwde
lods
push
and
push
jnp
cmpxchg
sar
cdq
dec
sub
mov
aad
xor
cs
test
shl
inc
adc
(bad)
rcr
mov
sub
mov
jnp
push
shl
gs
and
push
shr
idiv
retf
icebp
pop
inc
and
add
mov
xchg
fsub
not
iret
jno
pushf
retf
inc
mov
rcl
js
mov
lahf
lds
lock
push
pop
ret
pusha
std
das
dec
aam
add
dec
cli
in
cmp
sub
ffreep
add
movs
adc
pop
cmp
sbb
and
adc
(bad)
mov
(bad)
fwait
push
scas
jmp
inc
movs
(bad)
push
jno
and
fdivr
or
push
shr
lahf
cmps
or
cdq
and
jo
out
pop
ins
adc
jg
mov
cwde
mov
movs
shr
or
xchg
rcr
add
jl
cmp
jp
push
ds
jbe
fwait
mov
(bad)
mov
fs
or
sbb
mov
out
inc
mov
lahf
sub
pusha
mov
js
(bad)
jae
adc
jo
sbb
das
mov
stc
or
dec
repz
aad
(bad)
in
std
sbb
int
add
test
pop
js
lods
xor
and
and
add
mov
dec
aaa
loope
in
dec
test
int
add
xchg
pop
clc
sti
xchg
test
dec
popa
sub
mov
pusha
adc
enter
in
popf
(bad)
or
dec
out
add
mov
mov
shr
cmps
or
xchg
or
adc
test
test
xchg
push
xor
js
jmp
or
or
pop
sbb
call
push
inc
pop
xchg
push
mov
dec
test
test
sub
nop
out
add
cmp
mov
ins
add
imul
mov
shl
shr
mov
stos
pop
xchg
out
sbb
xor
fwait
je
inc
adc
fsub
cmp
sub
(bad)
in
mov
es
enter
push
xchg
cld
stos
fisub
sbb
(bad)
shr
sahf
aad
leave
sahf
ror
adc
shl
jecxz
pop
retf
(bad)
dec
or
mov
xchg
sbb
push
adc
inc
iret
cmps
adc
addr16
ffree
fild
mov
mov
xor
test
adc
imul
xor
pop
add
clc
mov
add
out
gs
clc
jecxz
sbb
push
push
imul
(bad)
cmc
jecxz
push
push
dec
add
js
mov
mov
loopne
xor
fisttp
pop
dec
fsub
pop
xor
pop
sub
sti
fdivr
add
cld
inc
pop
xor
mov
mov
push
xchg
mov
in
cs
cdq
ficom
push
dec
sub
cmp
mov
or
out
nop
and
pop
sub
(bad)
jp
out
pushf
in
dec
cmp
les
push
ret
jmp
sbb
shr
mov
xor
dec
xchg
sub
scas
out
xchg
test
adc
cmps
sub
icebp
test
push
repz
cmp
loop
movs
les
pusha
cmp
test
mov
sub
div
and
inc
icebp
mov
iret
stc
pop
fwait
mov
xchg
xchg
pop
adc
push
inc
pushf
pop
adc
adc
iret
stc
cmp
arpl
dec
in
cs
arpl
xchg
daa
cmps
push
and
push
(bad)
pop
adc
or
adc
aaa
outs
out
movs
out
add
push
xor
add
mov
cmps
out
iret
movs
shl
(bad)
push
lea
xor
xchg
push
movs
xor
pop
rcr
and
cmp
xchg
jp
sub
pop
xlat
ror
in
mov
pop
mov
loopne
xor
sbb
add
cmp
adc
pop
scas
movs
jo
icebp
add
inc
(bad)
fiadd
scas
adc
loopne
mov
inc
push
push
push
push
ret
push
int3
jae
nop
lods
pop
icebp
jno
sti
or
sbb
dec
mov
push
int3
mov
sub
and
sub
pop
adc
sbb
les
mov
(bad)
fcomp
mov
push
dec
cwde
push
repz
jnp
imul
adc
pop
gs
or
jnp
xchg
sub
scas
push
cmps
push
pop
push
pop
lods
jle
and
push
stc
mov
stos
fnstsw
aam
sub
push
jb
xor
retf
fwait
xchg
push
add
cmp
(bad)
jmp
or
jmp
dec
mov
rep
push
sar
iret
xor
je
lods
mov
jl
or
ja
arpl
add
enter
ins
dec
scas
inc
stc
add
fcom
(bad)
lock
scas
les
jae
mov
or
mov
push
adc
hlt
scas
dec
jmp
sub
mov
mul
or
xchg
rcl
jg
sbb
xor
inc
mov
jl
pop
xor
inc
xchg
xchg
enter
movs
cmp
xchg
fidivr
stos
hlt
dec
push
test
inc
push
stos
ror
lock
retf
test
or
arpl
sar
cmp
call
or
dec
or
ud1
push
(bad)
jbe
je
lds
xor
push
add
js
xchg
mov
xchg
adc
xchg
mov
fdiv
sbb
(bad)
neg
in
fnsave
xchg
mov
xchg
mov
push
sub
mov
nop
out
into
mov
rcr
fdiv
jmp
push
add
lock
imul
js
(bad)
push
adc
or
loop
inc
not
push
xor
nop
retf
stos
jae
xor
jb
inc
mov
jmp
lods
mov
aaa
scas
hlt
sub
fs
sub
jbe
mov
sbb
fldenv
mov
lock
daa
pop
sbb
mov
mov
nop
cwde
jl
pusha
je
xchg
mov
jl
jbe
jge
or
or
mov
(bad)
mov
nop
shl
push
xchg
movs
scas
and
xchg
aaa
js
(bad)
push
dec
test
test
js
outs
sbb
pop
sahf
enter
movs
mov
cmp
fstp
out
ins
dec
and
nop
push
in
loopne
rcr
inc
mov
xor
sbb
aad
sbb
lods
nop
(bad)
into
mov
cwde
dec
mov
pop
add
pushf
and
ins
imul
push
cwde
pop
mov
mov
int
xchg
dec
xor
dec
test
mov
repz
push
mov
or
sub
xor
xor
mov
mov
lock
ins
imul
sbb
fldcw
je
mov
inc
rol
imul
shl
(bad)
addr16
in
les
ds
mov
xor
dec
loopne
mov
jmp
ins
pop
pop
mov
push
in
lock
xor
out
loope
lds
ins
stc
fisttp
repnz
addr16
inc
jnp
and
je
rcl
mov
call
push
dec
repz
pop
adc
ret
mov
idiv
inc
xor
jae
add
je
xlat
addr16
or
ja
push
pop
daa
or
xchg
cmp
test
ds
jne
push
scas
jns
inc
clc
aad
int3
lahf
xor
jo
mov
mov
leave
stos
xor
and
push
mov
jmp
cmp
mov
out
jg
xchg
imul
repnz
mov
mov
adc
shl
dec
or
push
popf
adc
jp
in
pusha
pop
xor
dec
xor
sti
sub
inc
ret
cs
sub
add
(bad)
lock
std
mov
jo
jecxz
bound
fstp
mov
mov
push
test
movs
pushf
aad
lods
sub
out
in
xor
div
jge
mov
or
xor
push
es
xor
adc
retf
mov
xchg
stos
mov
dec
lods
xchg
jno
jae
sbb
adc
mov
ret
out
in
test
fisubr
movs
js
mov
enter
jnp
in
lea
and
call
jmp
jp
adc
or
lock
push
mov
sbb
pop
add
push
mov
mov
xchg
mov
cmp
mov
int
sbb
mov
and
pop
(bad)
lods
or
retf
xchg
sbb
pop
shr
fcomip
mov
push
pop
cmp
lahf
xlat
inc
fs
pop
mov
xchg
or
inc
ins
es
dec
xor
xchg
xchg
fisubr
push
out
mov
fdivr
pop
in
ds
mov
xchg
lods
shl
es
jmp
mov
pop
test
add
jle
lods
cmp
mov
mov
sub
dec
jecxz
inc
outs
jmp
pop
sbb
pop
mov
lods
call
inc
ror
pop
push
jle
push
(bad)
pop
push
cli
mov
xor
pusha
jbe
xchg
mov
push
inc
cmps
lds
sbb
mov
mov
xor
or
cmp
add
rol
movs
push
mov
push
gs
pusha
loop
cmp
pop
std
xchg
jns
mov
call
mov
ss
push
cmps
repz
pop
xchg
jbe
jg
daa
and
sbb
sub
leave
cmp
loop
mov
mov
cmp
das
mov
mov
js
lea
push
nop
leave
clc
and
xchg
sbb
cmps
adc
mov
fnsave
push
cs
sbb
sub
dec
jno
mov
or
nop
push
dec
mov
imul
cwde
dec
nop
mov
(bad)
push
add
sub
retf
imul
repnz
aam
fmul
ss
dec
mov
jmp
loopne
pop
mov
aam
cmp
dec
mov
jnp
ror
dec
mov
mov
jb
add
jg
div
int
retf
lds
movs
mov
pop
out
pop
(bad)
inc
or
mov
sub
hlt
mov
xor
enter
ja
mov
and
outs
cdq
ret
icebp
retf
xor
pand
sar
repz
mov
dec
les
fcmove
push
call
adc
sbb
loopne
in
pushf
sbb
in
outs
adc
inc
sub
and
cmp
adc
out
out
sahf
add
out
push
push
or
dec
fcomi
xor
xchg
in
int3
xchg
call
fs
xor
popf
std
loop
push
inc
lahf
dec
std
cmps
je
xchg
xchg
jp
mov
jg
push
test
jo
add
fs
ficom
rcl
jae
xchg
push
cmc
sub
in
sub
out
lea
or
pop
mov
rol
mov
js
inc
inc
ins
bound
xchg
pop
cmp
mov
addr16
cmc
jmp
sbb
repz
jp
xchg
stc
and
gs
cmp
jbe
push
sub
mov
xchg
dec
das
xchg
js
mov
fninit
dec
(bad)
fadd
mov
adc
das
js
sub
push
sub
sar
mov
sub
ret
dec
jne
mov
lods
test
sub
pop
push
push
lods
stos
shr
in
cmp
lock
mov
push
or
push
retf
loope
xchg
cmp
xchg
(bad)
ins
scas
out
leave
jne
add
cmp
mov
stc
repnz
mov
call
xor
push
mov
int3
aaa
mov
push
(bad)
push
fisttp
(bad)
jp
mov
hlt
inc
inc
(bad)
int
stos
add
push
mov
ret
adc
push
stc
lahf
push
and
(bad)
sti
and
jecxz
jno
ss
dec
adc
or
out
push
call
mul
mov
pop
sbb
add
ja
xchg
xchg
fisttp
(bad)
fwait
in
mov
ret
pop
shr
fmul
jmp
xor
pop
lock
push
jecxz
movs
repnz
adc
lock
fisub
jne
add
addr16
jns
cmps
sub
(bad)
(bad)
xor
fldcw
xchg
mov
mov
jnp
mov
dec
xchg
dec
pop
inc
dec
mov
retf
mov
xor
je
jno
call
imul
imul
fisub
mov
mov
dec
aam
xor
mov
push
pop
lods
dec
dec
mov
rcr
sahf
cld
popf
mov
(bad)
xchg
repz
adc
(bad)
cmps
mov
movs
xchg
ins
mov
sub
jo
adc
push
sub
stos
or
adc
pop
add
ret
and
mov
lods
mov
jno
ja
adc
test
push
add
mov
jecxz
jae
cmp
int
lea
cs
bound
push
mov
gs
adc
xchg
test
sbb
inc
clc
jp
rol
jae
jno
popf
xor
sar
mov
and
scas
inc
(bad)
in
cmp
cmp
xchg
jns
outs
pop
mov
lods
xor
push
stos
mov
xchg
out
mov
add
bound
fistp
test
or
cli
out
ins
cwde
movs
adc
sbb
in
mov
push
aam
ret
jae
daa
neg
sub
repnz
mov
xchg
mov
push
sbb
mov
cmp
or
pop
cmps
cmp
lahf
push
inc
jb
js
das
scas
int
inc
jae
bound
mov
sub
outs
dec
fisubr
add
and
adc
and
pop
cmp
inc
and
imul
push
jmp
dec
mov
sti
neg
lahf
sub
daa
cmp
scas
xor
loopne
addr16
mov
adc
mov
xor
and
(bad)
mov
xchg
and
cmc
addr16
hlt
cmps
mov
out
adc
leave
pop
sub
push
xlat
pop
scas
adc
cmp
addr16
jecxz
sbb
cmp
ins
pop
outs
fwait
(bad)
add
xor
jg
dec
cmps
imul
push
mov
loope
les
mov
test
jns
cmp
fdivr
lods
xchg
push
mov
jmp
adc
outs
daa
or
sub
retf
iret
daa
sbb
into
cmps
shl
scas
cmp
arpl
ret
mov
daa
adc
xchg
push
test
shl
mov
cs
xor
cmp
mov
ret
mov
push
fcom
jge
xchg
add
in
xor
or
hlt
ins
iret
rol
mov
pop
sahf
repnz
mov
loop
mov
mov
jmp
and
cmp
inc
xor
lock
ins
int
push
cmc
in
mov
pop
dec
inc
adc
neg
and
jnp
(bad)
jmp
in
shr
cmp
or
pop
pop
push
cmp
and
stos
mov
aad
dec
sbb
mov
sub
fscale
test
test
mov
mov
sub
les
fidivr
adc
mov
fnstenv
dec
jo
xor
ins
mov
push
in
dec
dec
adc
mov
in
sbb
call
gs
(bad)
pop
dec
imul
push
cdq
sub
dec
push
mov
or
and
pop
sbb
cmp
ret
std
mov
jne
sub
in
sti
adc
pop
fdiv
cmp
jge
cs
inc
dec
xchg
mov
push
jmp
cli
mov
jnp
adc
in
push
jle
dec
cmp
xchg
push
inc
mov
mov
test
xor
(bad)
(bad)
aam
pop
push
dec
add
test
ins
sub
call
pop
fidiv
aad
jno
cli
cmp
aam
sbb
div
scas
push
fidivr
mov
pushf
arpl
cmc
jl
rcl
repnz
sub
jl
out
pop
xchg
mov
mov
xchg
es
inc
es
adc
add
outs
retf
into
and
push
mov
cmp
scas
jg
mov
pop
cmp
lds
stos
test
retf
mov
mov
(bad)
clc
repz
jge
push
sbb
rol
stos
scas
mov
das
mov
dec
call
mov
retf
jo
xchg
mov
adc
cmp
pop
scas
fisub
test
push
mov
cmc
jge
adc
push
leave
sub
imul
call
push
xchg
push
pushf
mov
add
test
out
inc
test
lods
xor
sbb
imul
xchg
adc
(bad)
les
push
mov
jne
fsubr
mov
icebp
in
adc
movs
clc
xchg
mul
pushf
or
je
push
(bad)
and
xchg
in
dec
imul
ffreep
push
jne
mov
jg
imul
(bad)
cmp
mov
in
not
cld
jnp
stos
fucom
lahf
inc
leavew
bnd
xor
cmp
adc
jmp
xchg
jns
pop
sbb
xchg
mov
loope
push
fcom
ss
xor
mov
and
add
push
rcr
dec
imul
mov
xor
or
es
mov
mov
xchg
pop
xor
jmp
mov
jg
xor
ins
sub
cwde
ror
mov
cmc
imul
loopne
test
icebp
das
(bad)
hlt
push
repz
jae
jne
icebp
sysexit
and
pop
jle
or
fisub
jg
push
or
popf
sbb
or
cmp
dec
add
aaa
leave
test
stc
lods
sbb
in
add
pop
(bad)
mov
scas
or
xor
(bad)
test
icebp
mov
jmp
jne
cwde
cs
ret
(bad)
lea
adc
cld
sub
fwait
and
mov
out
inc
call
loope
mov
test
xchg
std
aam
mov
int3
sub
stos
les
(bad)
sub
push
add
jmp
add
cmp
and
in
js
sub
inc
dec
xor
jno
stos
sbb
retf
dec
cmps
lock
adc
pop
push
popa
and
sbb
xchg
mov
imul
dec
sub
mov
pop
fs
in
scas
jl
sub
pop
out
sub
dec
mov
movs
jns
pop
fs
inc
inc
sbb
call
test
xor
cmp
jmp
sbb
xchg
jne
es
lods
std
xor
xlat
addr16
xchg
(bad)
xchg
imul
mov
sahf
jl
iret
push
mov
mov
dec
adc
es
add
pushf
mov
add
adc
movs
pop
mov
jp
ja
shl
mov
test
mov
inc
sbb
aad
adc
addr16
stos
pop
mov
imul
mov
mov
test
xchg
hlt
mov
inc
xor
mov
or
cmp
jmp
xor
imul
int3
cdq
jno
ds
xchg
shufps
push
aas
pop
push
cmp
cvttps2pi
daa
sbb
sahf
pop
scas
(bad)
mov
jge
pusha
xchg
imul
ds
in
scas
shl
adc
fisttp
jne
rcl
aad
cmp
(bad)
popf
enter
mov
test
(bad)
cdq
mov
clc
inc
mov
mov
adc
adc
daa
daa
jbe
in
xor
imul
(bad)
ins
aas
lahf
or
rol
mov
sbb
ror
and
pop
sbb
std
(bad)
loopne
mov
xchg
shr
retf
int
and
aaa
inc
or
jno
cdq
(bad)
jp
and
mov
xlat
scas
popa
idiv
and
lods
jo
mov
pop
jmp
mov
sbb
enter
sub
lock
js
jns
ret
mov
repz
mov
vdivss
jo
jl
pusha
int
imul
xor
xchg
cmp
imul
adc
aas
xchg
sahf
mov
sub
aaa
mov
xor
mov
sahf
xchg
cmp
(bad)
fisubr
mov
xchg
les
fdiv
mov
scas
or
(bad)
mov
or
(bad)
clc
jno
mov
inc
xchg
call
cmps
xchg
push
push
xor
sbb
and
repnz
lock
dec
cli
outs
out
sbb
adc
cmp
inc
(bad)
jge
(bad)
jge
xor
std
push
pop
stos
int3
lock
xchg
sub
push
mov
cli
or
or
xchg
scas
xor
jle
cs
pop
mov
mov
daa
lds
popa
das
pop
push
dec
js
mov
lds
inc
mov
test
mov
jo
ret
cmp
or
fisubr
popf
retf
outs
lods
inc
imul
mov
add
fstp
rcl
retf
pusha
mov
ds
(bad)
sbb
loopne
(bad)
in
add
inc
in
mov
pushf
xor
cwde
mov
fmul
and
loopne
inc
mov
jmp
mov
or
mov
xchg
aam
mov
or
push
mov
call
lea
imul
mov
(bad)
or
push
pop
fwait
mov
call
jae
repnz
xchg
pushf
mov
cmp
pusha
mov
or
inc
push
cdq
(bad)
cmps
xchg
jmp
jns
cwde
and
xor
idiv
add
push
stc
jecxz
pop
cld
pop
jp
mov
imul
out
push
xchg
stos
adc
cmc
(bad)
jmp
int
in
sahf
add
dec
adc
icebp
mov
sbb
adc
and
(bad)
pop
pop
stos
fmul
push
mov
and
movs
adc
xchg
sbb
pop
push
outs
mov
ret
xor
cmp
stos
xchg
inc
cdq
ret
js
mov
cmps
or
adc
xchg
add
and
fisubr
test
mov
mov
rcr
pushf
je
xchg
sub
inc
int3
test
dec
inc
jp
xor
div
inc
(bad)
fdiv
out
into
mov
jle
xor
sbb
outs
mov
pop
push
push
bswap
cmps
push
ins
in
aad
and
aad
ins
mov
xchg
test
cmp
int
test
adc
repz
data16
repnz
test
add
jo
mov
sub
adc
in
push
dec
and
mov
xchg
inc
fstp
in
hlt
cmps
adc
ins
sub
jb
and
inc
test
jae
push
mul
clc
std
pop
test
jmp
jp
push
cld
lahf
dec
mov
inc
add
shl
int3
mov
imul
addr16
cmp
adc
ja
mov
mov
(bad)
pusha
repnz
mov
sub
add
pop
sar
and
mov
and
jmp
cmc
cmp
std
leave
inc
pusha
xor
sbb
aaa
sbb
mov
jnp
xlat
test
xor
jl
jle
inc
ror
xchg
mov
test
cmp
pushf
loop
sar
xchg
stos
mov
pusha
cmp
ins
std
xchg
inc
sbb
push
xor
out
inc
add
inc
fcomp
dec
ins
mov
scas
inc
movs
xor
xor
scas
(bad)
jmp
(bad)
ss
push
add
push
xchg
cmp
mov
stos
inc
cmp
xchg
and
sar
xchg
sbb
test
dec
ss
mov
dec
call
leave
mov
iret
cmp
xchg
lods
xchg
jp
mov
outs
mov
jle
inc
mov
jno
arpl
or
adc
ret
mov
stos
jbe
or
mov
or
mov
sub
mov
div
rol
inc
mov
push
jmp
jo
xchg
(bad)
xchg
xchg
add
mov
xor
out
movs
jmp
xchg
xchg
dec
push
popf
out
pop
and
cmp
mov
dec
mov
lds
adc
ror
xchg
int
pop
jmp
mov
call
call
outs
jns
jo
in
cmp
jmp
mov
jne
adc
and
sub
inc
cwde
push
pushf
push
cli
lock
pop
mov
inc
xor
pushf
ret
pusha
push
aam
adc
push
or
stos
shl
mov
sub
pop
adc
cli
xchg
pusha
inc
fnstsw
pop
icebp
mov
push
loope
icebp
daa
add
push
ins
lods
lock
aaa
iret
mov
int
scas
cld
push
pop
cmps
pop
(bad)
mov
sub
sbb
push
ficom
inc
je
push
out
adc
lods
les
or
lock
in
cwde
pop
mov
movs
in
push
add
movs
pop
sbb
xchg
(bad)
lock
jmp
cmp
dec
retf
and
dec
sbb
fwait
(bad)
jge
call
test
mov
out
fild
aad
fdivr
pushf
adc
dec
sbb
xor
pop
mov
push
call
in
mov
xchg
adc
mov
sub
mov
retf
and
int3
bound
pop
cmp
lds
jns
aam
dec
in
fdiv
loop
arpl
ret
test
sbb
and
dec
iret
cmp
ja
sbb
cwde
mov
sbb
inc
pop
mov
int3
aad
cmp
aas
mov
pop
loope
sub
das
pop
add
or
mov
rcr
iret
std
in
leave
retf
pop
pop
pop
(bad)
mov
(bad)
mov
lods
sbb
cmp
faddp
mov
jg
jae
cdq
lods
rcl
add
cmp
and
xor
dec
arpl
jmp
push
pop
xchg
andps
inc
fcmovb
stc
pop
(bad)
jle
pop
mov
mov
cmp
xor
sbb
fisub
loopne
push
xchg
pop
inc
push
xor
or
js
lahf
mov
enter
loop
idiv
xchg
inc
sub
mov
pop
lods
jecxz
std
retf
push
mov
and
popf
je
lahf
loope
ds
cmps
inc
mov
(bad)
addr16
into
sub
xchg
push
lahf
movs
jle
xchg
sub
sbb
sub
mov
cmc
mov
out
mov
cmp
addr16
mov
outs
or
jp
jne
inc
jmp
pop
pop
loopne
leave
jle
icebp
pop
jno
mov
test
dec
jbe
out
adc
xchg
jb
add
mov
pop
jo
mov
outs
xchg
and
jp
inc
sub
test
fcomp
mov
xor
sub
(bad)
das
cmps
mov
in
shl
or
sub
outs
popa
shl
les
push
sar
push
daa
in
jns
mov
sbb
fist
push
xchg
test
dec
stc
das
pop
test
xchg
jne
mov
cmps
aam
mov
inc
retf
sbb
push
fldcw
mov
cld
sbb
addr16
pop
add
in
or
pusha
sub
hlt
out
mov
inc
xchg
jne
pop
jmp
popa
adc
out
jb
iret
jp
sbb
push
ret
sbb
in
fnsave
dec
xor
and
cmp
ins
push
repnz
inc
in
xor
bound
and
inc
jle
nop
push
ja
pop
add
imul
aad
loope
mov
dec
ins
aad
xor
sbb
imul
cmp
in
mov
sbb
addr16
gs
cli
push
test
push
test
mov
faddp
loope
ja
test
jno
mov
cmps
or
(bad)
and
jl
hlt
xor
xchg
add
hlt
cli
stos
data16
int
xchg
add
stos
pop
jns
mov
mov
fisttp
mov
ss
add
push
movs
jae
mov
cs
add
dec
cmps
aad
push
and
xlat
test
mov
jle
xchg
fs
mov
jmp
retf
retf
repz
fidivr
fwait
cli
pop
out
and
jne
cmp
lea
movs
dec
mov
mov
pop
jnp
push
sti
sub
fucompp
mul
adc
pop
stos
test
fidiv
sub
xchg
cmps
pop
adc
mov
rol
bound
test
mov
(bad)
push
call
pop
jg
test
mov
ss
cmp
test
jp
pop
mov
push
scas
repz
cmp
xchg
jg
jl
cmc
push
xor
ds
(bad)
fs
rep
cmp
cmps
mov
or
pusha
cmp
mov
out
mov
arpl
sbb
cdq
fmul
push
adc
movs
les
push
test
xchg
pop
mov
xchg
adc
data16
rcl
into
adc
or
mov
dec
add
stc
push
mov
jo
mov
ds
xor
leave
call
mov
pop
jle
jae
sub
adc
jl
aam
rcl
mov
add
clc
sub
cmp
add
mov
sbb
mov
dec
mov
dec
ror
rol
or
inc
mov
dec
rcr
sahf
int
and
push
mov
repz
cmp
div
fisubr
mov
cmp
adc
or
pop
cdq
(bad)
iret
mov
inc
sub
pop
jge
test
in
mov
cmp
mov
in
pop
mov
les
and
(bad)
mov
pop
frstor
ins
push
or
mov
jbe
out
jae
cdq
int3
stos
cmps
mov
sbb
push
aad
xor
jmp
or
mov
jp
mov
inc
add
add
xchg
dec
mov
fucom
mov
test
push
js
cmps
cmp
retf
or
aaa
xrelease
es
(bad)
cmp
lock
popf
pop
xor
test
sar
dec
and
sbb
inc
inc
jbe
push
es
(bad)
in
add
bound
mov
pop
add
shl
mov
test
frstor
mov
cmp
cmp
sub
jnp
sub
stos
sti
mov
pusha
enter
cld
inc
cdq
mov
push
aaa
and
int
pusha
aad
mov
rcl
mov
mov
ds
cmp
seta
push
xlat
jl
ss
lock
aaa
leave
sub
call
inc
pusha
or
inc
data16
popf
(bad)
bnd
xor
ins
mul
loop
mov
dec
cmp
xchg
push
mov
sbb
and
push
inc
cmps
fisub
mov
mov
xor
fnsave
jmp
adc
popa
jge
inc
xchg
pusha
lea
xchg
mov
mov
popa
ret
lahf
movs
pop
fbld
inc
push
int3
les
add
dec
cmp
imul
popa
mov
adc
out
sbb
rol
add
cmp
mov
xchg
mov
popf
(bad)
(bad)
jge
push
pop
add
xchg
iret
pusha
fcomp
mov
ret
jle
addr16
movs
outs
bound
jne
ror
cmp
aam
push
sub
fsubrp
jle
jnp
repnz
xor
adc
repz
add
cmps
iret
rcr
scas
sub
and
jmp
sbb
rcl
pop
in
xchg
(bad)
aaa
jno
push
inc
test
mov
mov
adc
outs
lods
lds
cmps
pushf
retf
iret
dec
loop
outs
mov
xor
sub
xlat
leave
aad
mov
imul
retf
cli
adc
push
push
vcvtpd2dq
loope
cmp
cmp
aam
inc
fwait
pop
jae
fsubr
movs
cmp
ja
test
or
add
add
imul
hlt
jmp
cli
adc
rol
add
jae
or
in
push
dec
add
test
sub
pop
inc
or
adc
fcom
psrad
mov
mov
mov
enter
nop
shl
sbb
pop
data16
(bad)
push
sbb
jmp
mov
test
(bad)
pushf
iret
aas
(bad)
adc
(bad)
cmp
mov
ss
cld
dec
xchg
ret
jmp
sahf
ret
sbb
sub
and
shl
inc
out
out
in
mov
in
and
push
xchg
cmp
aas
repnz
test
inc
sbb
sar
cs
sbb
add
pop
test
cld
jno
neg
mov
cmps
or
call
inc
xor
sub
rcr
sub
imul
or
xchg
out
adc
push
pop
ffree
lea
or
stos
xchg
sbb
mov
sbb
ja
out
int3
sbb
les
xchg
pop
adc
fld
scas
jg
leave
xchg
sbb
push
arpl
les
out
jnp
lds
mov
das
out
jge
div
dec
xlat
jle
pop
into
and
jg
sub
test
xor
arpl
test
ficom
mov
stos
test
pusha
imul
pushf
stos
push
mov
in
leave
push
mov
push
pushf
xor
jne
jle
ret
retf
scas
sub
call
sub
ins
sbb
mov
dec
test
inc
push
enter
mov
jbe
dec
cmp
push
xchg
ficomp
dec
ja
mov
jp
popf
fidiv
push
xor
pop
mov
mov
pop
sbb
xor
sub
lahf
and
adc
sbb
into
push
dec
stos
outs
scas
pop
and
gs
add
es
scas
lahf
cmp
cmps
std
outs
scas
jmp
stos
sbb
cmp
out
loopne
(bad)
call
add
jae
mov
scas
out
dec
bsf
std
repnz
addr16
push
cmc
ror
paddw
aam
nop
fidiv
mov
xlat
pop
pop
xchg
fistp
sahf
and
lock
lea
sahf
cmp
pushf
sbb
ficom
stos
in
dec
jg
jp
clc
stos
dec
scas
push
imul
dec
outs
sub
out
sub
or
inc
mov
push
mov
pop
and
jp
pop
daa
dec
add
repnz
sbb
mov
jne
pop
fs
dec
movs
les
test
dec
enter
repz
imul
xchg
xor
inc
and
hlt
sbb
pop
iret
jnp
pusha
pop
call
and
mov
fnstcw
adc
stos
hlt
or
jge
test
lea
das
xlat
pop
repnz
dec
push
pushf
push
pop
pop
push
loopne
mov
mov
xchg
call
mov
inc
test
cmps
les
jp
sbb
sahf
div
xchg
sbb
dec
xchg
mov
rol
in
push
add
fsubp
jg
jns
stos
fucomp
pop
mov
imul
jno
lock
ja
es
mov
bound
push
mov
xor
mov
fisubr
jns
rcl
sahf
add
push
scas
mov
mov
imul
pop
addr16
dec
adc
adc
icebp
movs
retf
inc
loope
fsubr
xchg
xchg
jo
adc
or
dec
mov
enter
cdq
mov
(bad)
popf
scas
retf
gs
out
push
jp
nop
(bad)
test
scas
dec
icebp
retf
test
aad
pop
movs
xchg
jmp
push
cmp
pop
or
cmc
out
gs
mov
loopne
mov
jo
stos
xor
add
shl
sub
dec
popf
cmps
add
test
inc
aas
fwait
movs
xchg
mov
inc
xchg
pop
es
and
mov
(bad)
jecxz
push
mov
adc
xor
je
cwde
retf
cmc
mov
js
ins
popf
cs
mov
pop
mov
and
dec
imul
ins
movs
lahf
aad
cmp
jecxz
or
stos
clc
xchg
test
gs
es
inc
pop
sub
shl
cmps
sub
pushf
add
addr16
cmp
push
add
mov
fst
loop
hlt
and
mov
iret
leave
xchg
out
adc
cs
int
lds
sbb
xchg
mov
dec
fimul
xor
mov
jge
xchg
call
rol
mov
push
mov
adc
jno
nop
imul
cmp
pop
ja
test
in
mov
leave
inc
fstp
scas
repz
jl
mov
out
loop
cmps
adc
add
cmp
leave
retf
sub
push
push
rol
data16
inc
mov
in
mov
in
popa
inc
call
mov
or
call
sahf
inc
cmp
sbb
mov
call
into
dec
mov
push
push
shl
shr
sbb
xor
mov
jmp
mov
ds
dec
and
je
shr
das
and
or
push
loope
cdq
popa
pop
cmp
add
popf
je
push
cmps
jae
push
mov
pop
scas
dec
dec
inc
jmp
adc
out
sub
push
push
adc
in
push
je
shl
loopne
ret
inc
jmp
mov
es
in
ret
sti
popa
ror
(bad)
xlat
xor
retf
jns
inc
dec
ja
ror
test
pop
and
push
out
mov
(bad)
mov
sub
mov
push
ror
sub
mov
mov
imul
fsubr
not
daa
imul
jmp
sbb
fcmovnb
clc
imul
lods
jecxz
out
mov
mov
fadd
dec
aam
xchg
clc
pusha
ror
jmp
inc
arpl
mov
jle
push
mov
jmp
(bad)
xor
js
push
imul
mov
and
call
cwde
sti
aaa
mov
push
xchg
sub
inc
sub
and
test
loop
movs
das
ret
xchg
int
jmp
fdivp
sbb
aaa
jle
in
inc
std
fs
mov
jmp
dec
or
cdq
ins
and
xlat
push
sti
ins
ins
push
adc
in
cmp
mov
mov
push
inc
dec
xchg
xor
xor
cs
test
cmp
add
push
pop
mov
jg
dec
pop
push
stos
or
xchg
jl
mov
mov
bndstx
cmp
jp
int
add
push
ret
sub
adc
xor
scas
dec
mov
cmc
(bad)
leave
repz
imul
mov
or
das
sar
xor
add
fcom
pop
jg
js
jmp
(bad)
mov
dec
jbe
add
out
sar
in
xchg
ins
lahf
shr
jne
cmp
sub
cdq
push
jnp
pop
psrlw
dec
mov
test
sti
jns
movs
mov
inc
mov
xor
push
xchg
mov
sbb
jl
mov
mov
push
add
lea
lds
push
ss
bound
mov
loop
lods
popf
ins
inc
cwde
in
pop
sub
sar
push
dec
fist
add
mov
lock
push
out
xor
xchg
outs
jb
xchg
mov
jb
pop
lods
test
xor
(bad)
push
inc
sbb
adc
ret
iret
push
sahf
pushf
stos
popf
xchg
or
sar
xchg
dec
fdiv
rcl
add
mov
fyl2x
jno
mov
sbb
inc
es
inc
ds
lock
jae
cmp
icebp
rcr
mov
pop
cwde
dec
push
fmul
fnstcw
push
jmp
lods
and
sbb
mov
adc
mov
mov
dec
pop
mov
add
cs
ret
fnstsw
pop
lock
cdq
sbb
xor
inc
lahf
push
sbb
call
jbe
mov
jg
add
and
scas
cmps
sar
call
repnz
sbb
cmc
call
(bad)
sbb
popaw
xchg
test
inc
adc
enter
gs
(bad)
loopne
aam
(bad)
arpl
(bad)
cmp
out
pop
rcl
jmp
jnp
xor
jno
cmc
mul
jae
push
ror
mov
or
retf
and
pop
jns
lods
movs
jp
push
add
push
leave
popa
mov
sbb
inc
mov
movs
fwait
xchg
mov
mov
add
lods
pop
je
and
add
sub
call
or
push
sbb
sbb
mov
(bad)
sub
sbb
int3
cli
lahf
jbe
iret
and
arpl
(bad)
cmps
mov
fidiv
dec
pop
xchg
pop
je
jns
push
dec
adc
jg
sar
(bad)
ret
loop
into
dec
mov
in
clc
xor
push
pop
stos
dec
cdq
mov
xchg
stos
xchg
stc
in
mov
(bad)
fnstsw
stos
lods
icebp
cmp
inc
jg
addr16
add
shl
out
scas
ror
jae
out
sub
or
pop
popa
jl
movs
ret
sahf
das
fistp
test
stos
pop
adc
not
aam
pop
test
and
inc
mov
fidiv
jb
pop
mov
lock
pop
adc
xchg
cwde
jecxz
ins
cwde
jmp
or
mov
xchg
cs
into
mov
out
imul
mov
or
cld
sti
ins
add
mov
inc
call
popa
jnp
jl
das
movs
(bad)
icebp
leave
addr16
push
inc
dec
(bad)
pushw
movs
add
pop
jmp
jo
dec
sbb
mov
jecxz
inc
jg
retf
(bad)
cmp
pop
xchg
or
stc
xchg
push
mov
je
cs
test
jne
pop
fisub
pop
fnsave
jb
in
and
imul
(bad)
mov
ret
cld
mov
test
inc
pop
inc
and
or
fsubp
cmp
mov
ins
adc
xor
sahf
lea
jmp
add
jg
popa
or
pop
outs
pushf
aad
sub
test
sub
retf
rcl
mov
sti
mov
dec
and
pop
(bad)
imul
pop
(bad)
movs
pop
inc
in
enter
imul
test
shr
mov
(bad)
mov
cmps
(bad)
and
jmp
les
bound
out
add
jns
je
sar
sub
sbb
call
pop
dec
jecxz
idiv
lahf
mov
jno
rcr
pop
xchg
int
jmp
mov
mov
mov
lds
inc
add
mov
add
mov
cmp
jg
cmp
sub
jbe
mov
cld
or
ficom
iret
daa
lods
jge
mov
xchg
xor
mov
xchg
jae
cdq
mov
out
xor
inc
pop
and
jmp
xlat
jo
pop
aaa
fdivrp
mov
push
pop
iret
and
rcr
push
mov
popf
sub
cmc
fdiv
mov
jns
das
cmp
outs
inc
sub
jne
test
mov
sti
jae
mov
aad
ins
mov
dec
mov
sar
icebp
mov
out
or
js
fstp
cmp
push
pop
test
arpl
(bad)
stos
scas
pop
xchg
aam
in
mov
mov
mul
push
xchg
sbb
test
push
xchg
test
rcr
fild
xor
cmp
sbb
aas
fdivr
xor
std
inc
lea
mov
(bad)
jge
das
pop
sar
inc
ror
mov
ins
dec
xchg
enter
mov
inc
in
and
hlt
iret
jg
xchg
dec
and
in
cmp
jl
mov
in
push
fdiv
mov
(bad)
jno
test
sub
stos
adc
cwde
jge
and
dec
loope
add
cmp
test
cdq
loopne
jmp
mov
shl
cmp
jb
mov
and
mov
test
jl
loope
mov
movs
iret
daa
dec
out
xchg
mov
aam
add
jnp
pop
mov
outs
or
xchg
pop
mov
fwait
mov
xor
xchg
sar
cld
retf
inc
sbb
sbb
or
out
popf
pop
dec
sub
jne
int3
add
push
outs
(bad)
data16
lock
push
aaa
xchg
push
mov
cmp
cmp
jae
loopne
inc
mov
(bad)
in
(bad)
or
sbb
rol
pusha
mov
inc
adc
loop
adc
mov
jmp
xchg
scas
lods
(bad)
pop
cld
pop
dec
retf
pop
jo
pop
jge
and
inc
mov
pop
aas
or
jmp
sti
sbb
imul
and
mov
aaa
imul
out
imul
mov
shl
aad
mov
bound
mov
xchg
sbb
dec
and
repz
test
mov
scas
and
add
xor
ds
repz
inc
jp
xchg
inc
(bad)
fcmovb
test
scas
fcom
jmp
stos
cmp
jb
fpatan
aaa
xor
cmps
add
inc
data16
sbb
adc
retf
mov
test
lods
pusha
xor
dec
aad
inc
dec
fiadd
mov
cld
or
jb
pop
mov
push
push
leave
lods
lods
xor
in
xchg
push
xchg
test
push
mov
icebp
loop
push
mov
xchg
clc
into
xchg
loopne
adc
cmp
fldcw
mov
in
xlat
or
bound
and
xor
ins
cmp
(bad)
cwde
add
dec
lods
lea
es
movs
dec
mov
push
jno
test
pop
jne
sub
inc
repz
jp
mov
cmps
and
sub
std
(bad)
xor
jnp
adc
icebp
fisttp
jbe
std
sbb
push
inc
aaa
pop
cs
mov
pop
push
(bad)
jmp
jne
sbb
gs
inc
adc
xchg
ret
xchg
sbb
cld
or
sti
xor
ins
sbb
dec
jmp
adc
clc
iret
pop
pop
dec
jmp
adc
mov
repnz
xchg
mov
xchg
cmp
out
add
cmp
or
mov
mov
movs
cld
push
xor
dec
or
push
mov
mov
push
push
mov
cs
adc
sahf
mov
cwde
jecxz
xchg
sti
dec
scas
mov
mov
(bad)
push
mov
mov
and
and
push
out
xchg
mov
inc
fdivrp
fistp
dec
dec
xor
ror
and
movs
lods
jo
sub
mov
cmp
popa
xchg
je
jmp
add
inc
add
or
mov
stos
add
add
lods
(bad)
mov
je
push
retf
mov
mov
outs
sub
pop
mov
stc
pop
jge
sbb
mov
ret
push
movs
sbb
into
int
push
mul
cmp
aaa
stc
mov
fmul
or
lds
mov
push
mov
pop
cld
in
data16
jb
mov
xchg
push
dec
data16
sti
(bad)
(bad)
ss
or
xor
or
movs
pop
and
lahf
jl
test
stos
fwait
test
cwde
shl
ins
test
pop
sub
int
inc
adc
neg
mov
popf
cmp
mov
sbb
call
mov
outs
push
push
jmp
push
fwait
xchg
cdq
mov
adc
std
jo
add
xchg
popa
(bad)
mov
adc
ins
pop
pop
or
add
add
rcr
inc
sub
stos
adc
inc
sbb
aad
or
push
mov
iret
sub
out
call
cmp
(bad)
ror
adc
dec
popf
push
popf
push
clc
test
and
imul
fucomi
ror
and
add
xchg
les
pop
out
mov
add
cdq
inc
hlt
push
icebp
push
cmps
jo
sar
and
bound
bound
dec
test
ja
add
popf
xchg
hlt
cmp
test
pusha
outs
call
xor
cmp
sub
mov
dec
jno
adc
dec
jmp
loope
fwait
adc
add
out
stos
and
or
xchg
cmp
push
call
jecxz
push
and
dec
data16
mov
mov
adc
fdivr
loop
or
jo
or
ds
jmp
stos
push
lock
pop
jmp
push
push
jne
mov
arpl
popa
outs
xor
mov
hlt
mov
stc
test
(bad)
in
loope
jae
rol
arpl
pop
out
mov
int3
arpl
push
das
sub
and
push
add
add
lods
and
outs
xchg
ret
imul
jbe
and
add
push
jbe
push
xchg
cdq
pushf
dec
in
push
push
jo
sbb
test
inc
and
inc
pop
pop
popa
pop
ret
adc
sub
push
lock
fsub
lahf
adc
fmul
fs
push
lock
retf
in
gs
(bad)
int3
xor
and
mov
mov
mov
jns
mov
mov
lds
jge
sub
push
loope
lahf
fdiv
out
inc
mov
mov
stos
shr
cdq
inc
repnz
push
adc
and
and
nop
shr
or
adc
add
add
cli
sbb
inc
mov
mov
pop
shl
arpl
rol
mov
mov
mov
mov
cwde
mov
jb
ss
rcr
adc
repnz
cmc
repz
jo
mov
xchg
cdq
inc
sbb
adc
test
add
outs
or
push
fucomi
sub
shr
mov
and
sar
pop
imul
adc
jge
scas
out
ret
mov
sbb
(bad)
push
stos
jae
hlt
pusha
pop
pop
inc
xlat
lock
or
setp
xor
push
push
push
scas
pop
clc
mov
xor
jle
dec
push
inc
cli
test
xchg
cli
movs
outs
dec
clc
inc
xchg
inc
jmp
inc
mov
(bad)
xchg
ret
xchg
inc
dec
push
cmps
aam
mov
add
jns
mov
mov
cmps
jecxz
mov
inc
or
cld
adc
aad
das
mov
sbb
add
jle
jns
int
mov
cmp
push
in
loop
bound
push
jmp
add
inc
rol
cmps
adc
inc
ins
loop
sbb
pop
(bad)
ins
add
popf
cs
(bad)
fwait
push
hlt
push
sahf
psllw
sti
xchg
lea
test
mov
push
add
clc
add
pop
mov
(bad)
push
test
call
mov
inc
xchg
pop
sahf
std
inc
clc
push
mov
cmps
adc
or
mov
loop
fiadd
scas
pop
sub
xchg
push
mov
mov
repz
xchg
ja
repnz
cli
and
fcmovnbe
pop
aad
test
mov
sub
nop
iret
ins
jno
pop
shl
xchg
xchg
or
imul
pop
adc
pop
bts
jmp
test
cld
mov
data16
jecxz
pusha
fcom
sbb
clc
xor
jno
mov
xchg
or
es
lahf
push
inc
test
push
pusha
mov
pop
and
test
jp
dec
adc
mov
repz
icebp
loope
adc
loopne
jecxz
add
and
push
mov
xor
cmc
lods
or
xchg
cmc
sbb
stos
mov
push
dec
inc
xchg
mov
jle
push
push
dec
mov
ror
addr16
fistp
push
mov
call
mov
jl
inc
and
mov
push
sbb
xor
call
adc
pusha
inc
rcr
and
mov
dec
adc
mov
ficomp
cmps
stos
inc
mov
mov
sub
cdq
sub
mov
loope
cmc
push
sbb
xchg
lea
gs
and
dec
dec
inc
cmp
les
ror
int3
or
push
pop
jne
lods
sbb
aaa
mov
fmul
movs
push
mov
popf
or
push
cmp
stos
pop
add
loop
push
push
push
dec
ret
retf
mov
add
inc
add
mov
jg
jmp
jo
mov
and
bound
test
js
mov
mov
leavew
shl
mov
jmp
out
xchg
fwait
inc
loop
into
sub
das
pop
push
jl
and
aas
mov
mov
outs
pop
loopne
lahf
pop
jbe
cmp
shr
call
push
dec
adc
dec
test
sbb
cmps
test
lea
idiv
js
daa
shl
scas
xchg
dec
aaa
dec
outs
pop
repz
or
pop
cmp
adc
call
addr16
and
sub
fcom
push
clc
xchg
scas
retf
inc
fwait
dec
xor
cmp
mov
call
jecxz
inc
mov
jle
mov
data16
repz
adc
popa
(bad)
fdivr
jbe
push
mov
ror
dec
aad
jmp
clc
inc
inc
movs
dec
mulps
and
jecxz
shl
es
sub
stos
xchg
shl
xor
jmp
push
mov
fidivr
std
pop
int
adc
fnsave
pusha
xor
mov
fwait
(bad)
lock
mov
fst
ss
in
lahf
jl
in
push
sub
pop
xor
addr16
or
adc
xchg
inc
xchg
and
and
or
nop
int
pop
inc
daa
jae
adc
sbb
outs
cmp
in
ret
jge
pop
or
sbb
sub
test
jns
rcr
push
movs
aam
dec
inc
push
dec
pop
(bad)
xor
sbb
dec
mov
lds
lahf
ins
xchg
repz
(bad)
clc
mov
ret
jge
popa
out
daa
loope
and
pop
popf
jae
dec
mov
jg
dec
sub
fs
mov
mov
pop
mov
iret
neg
or
sbb
out
jmp
add
movs
lea
jle
push
xchg
pop
dec
push
dec
cli
sti
pop
loopne
stc
in
daa
jmp
sti
std
js
cmps
into
jo
inc
into
and
ja
ds
sub
aaa
ja
aad
cmc
mov
retf
fucomp
cmp
xchg
mov
jg
aad
fbld
xchg
aaa
pop
cli
pop
leave
fadd
inc
(bad)
cdq
pop
call
inc
inc
adc
fmul
mov
outs
jp
push
mov
in
pop
mov
scas
jns
mov
pop
mov
lods
push
pop
mov
push
jno
jmp
into
sub
mov
lahf
push
push
in
inc
push
out
mov
sub
jl
(bad)
movs
xor
xchg
pusha
dec
xor
dec
cmc
dec
push
daa
lods
pop
arpl
mov
imul
pop
push
cmp
lea
push
xchg
mov
out
pop
and
ja
fsubr
inc
retf
sbb
inc
sub
and
fsub
jo
mov
cmp
(bad)
ds
dec
jl
xchg
mov
fadd
or
jl
sub
mov
sub
sub
outs
mov
jnp
add
fdivr
pop
mov
cwde
dec
sar
inc
mov
cli
jo
fdiv
push
imul
and
mov
mov
push
add
add
out
(bad)
fcom
in
jno
jbe
inc
retf
and
(bad)
(bad)
lods
xor
outs
push
shl
(bad)
sbb
loopne
fisubr
outs
jmp
mov
push
outs
jmp
pop
pop
add
push
mov
rcl
into
sbb
fld
xor
mov
rcl
jecxz
arpl
out
scas
xor
xchg
test
fld
ins
push
and
xlat
jae
adc
push
push
pushf
loop
add
mov
lock
push
push
sub
(bad)
adc
lock
pop
inc
sub
mov
shl
inc
push
jo
mov
bound
mov
stc
cli
xor
adc
mov
jge
cmp
mov
inc
and
(bad)
push
sti
adc
cld
inc
in
xor
retf
dec
push
aas
loopne
loope
repz
(bad)
push
pop
retf
sub
cmp
ret
add
addps
mov
jge
mov
dec
icebp
sbb
cmp
sub
mov
jmp
rcl
push
fimul
cmc
pop
jno
mov
jb
mov
xor
push
mov
es
cli
push
xor
(bad)
xchg
ins
xchg
out
xchg
das
(bad)
cmp
fmul
xchg
mov
push
mov
mov
stos
scas
movs
mov
fist
test
sar
stc
and
iret
aad
out
dec
in
imul
rol
fcomip
aas
or
arpl
or
xor
fstp
cld
add
and
cmp
inc
imul
shr
add
popf
fcmovne
inc
fstp
out
pop
pop
sbb
ins
jno
out
xchg
leave
or
inc
loopne
sbb
add
stos
(bad)
(bad)
mul
sbb
adc
movs
jl
add
xchg
clc
leave
repz
scas
movs
adc
mov
add
xchg
xor
adc
pop
xchg
sbb
fistp
jae
sub
push
jle
mov
ret
dec
add
jnp
mov
add
(bad)
and
sbb
push
cwde
(bad)
in
(bad)
xor
sub
and
sub
lock
jp
sbb
jo
cmps
sti
jb
and
adc
pop
stc
fcomp
sti
mov
add
int3
lods
xor
and
out
jmp
adc
jp
jae
fsubr
jle
mov
fsubp
mov
imul
dec
adc
or
mov
adc
mov
pop
sbb
stos
retf
mov
dec
cmps
sbb
mov
stos
(bad)
cmp
xor
shl
sar
or
pushf
or
shl
or
pop
retf
xchg
in
inc
push
sbb
mov
or
or
repnz
add
(bad)
cmc
or
pop
pop
dec
imul
push
mov
pop
jmp
or
mov
rcr
xor
pop
test
xor
and
mov
push
fimul
rcl
cmp
arpl
mov
icebp
out
adc
mov
add
push
sbb
iret
jl
retf
add
and
jmp
movs
pop
add
sbb
xor
adc
mov
sub
xchg
int3
xchg
sub
mov
das
(bad)
jmp
dec
(bad)
dec
mov
repnz
in
and
jecxz
jb
xor
adc
sbb
ss
stos
mov
inc
mov
jmp
adc
ret
out
or
add
fild
adc
imul
lahf
or
push
mov
jl
aaa
sub
loope
inc
xchg
adc
mov
sbb
test
es
into
mov
dec
xor
mov
loop
cwde
mov
xor
div
adc
mov
mov
jo
jns
cmp
adc
xor
scas
cmps
mov
dec
mov
pop
fdivr
stos
xor
fs
cs
push
push
mov
jae
pop
xchg
push
lods
retf
push
cmp
leave
out
in
sub
sar
add
jne
adc
cmp
sti
mov
sbb
je
push
out
or
pop
jbe
cmps
sbb
sub
cmps
dec
mov
out
pushf
jns
out
xor
add
xor
cmp
or
hlt
rcl
push
jae
mov
test
rol
inc
pop
addr16
dec
popa
les
jmp
in
sub
enter
(bad)
or
push
lods
jne
push
dec
adc
push
jmp
rcr
xchg
sub
mov
and
nop
pop
out
fucom
lods
mov
jne
(bad)
arpl
xor
call
mov
xchg
cdq
xlat
mov
enter
lds
call
dec
add
fadd
fistp
push
and
les
add
inc
sahf
jecxz
ret
jmp
push
mov
dec
mov
mov
inc
stc
ins
sub
aaa
mov
mov
rol
adc
inc
cmp
sar
ret
xchg
repz
retf
fsub
pop
cdq
jae
jecxz
(bad)
std
loopne
stos
sub
cld
xor
or
stos
loop
(bad)
dec
jo
cmp
ja
xor
hlt
stos
push
adc
inc
push
ficom
jns
sbb
mov
mov
arpl
xor
and
push
std
fcomp
sub
or
hlt
std
cs
pop
pop
mov
sub
(bad)
(bad)
pop
cmp
sub
sar
jne
lods
push
cwde
xchg
ret
scas
cwde
pop
popf
enter
push
fs
add
cmp
fsqrt
pop
sub
jnp
jbe
clc
xchg
stos
ret
out
pushf
in
pop
xor
rcl
push
xor
sub
jb
fs
jmp
shl
aam
push
xchg
push
add
pop
lods
popa
push
push
and
scas
xor
add
mov
or
mov
mov
mov
sar
pop
lahf
retf
outs
or
mov
int3
xchg
inc
push
sub
cdq
aad
rol
and
xor
and
inc
adc
inc
stos
xor
push
movs
sbb
adc
mov
imul
xor
jae
dec
call
stos
test
dec
xor
into
cld
jge
mov
xor
fwait
jnp
add
mov
add
push
xor
iret
repz
cmp
sbb
xchg
imul
hlt
mov
pop
mov
sub
scas
add
or
popaw
shl
sbb
cmps
popa
repz
mov
lds
push
fimul
xchg
adc
icebp
xor
loop
pop
inc
iret
mov
pop
ret
push
xchg
lock
out
cs
xor
dec
rol
cli
mov
or
xchg
imul
imul
xchg
ret
rol
jae
sbb
jle
imul
popf
arpl
les
push
fst
push
jnp
and
adc
enter
sbb
pop
popf
dec
sub
adc
cmp
out
mov
xchg
inc
or
xchg
inc
jmp
jp
or
lea
fidiv
or
cdq
and
xor
ss
jle
mov
add
mov
cmc
movd
add
bound
sub
test
and
aam
mov
jmp
mov
xlat
scas
adc
pop
xchg
rcr
xchg
mov
and
sbb
push
pop
lods
mov
(bad)
pop
pop
aas
cwde
js
mov
fistp
inc
and
pop
or
(bad)
mov
scas
les
fmul
fs
sub
aaa
xor
cmp
(bad)
rol
cmc
jp
lods
mov
mov
(bad)
pop
cdq
add
sbb
dec
loop
pop
sbb
push
mov
arpl
and
cmps
shl
in
sbb
daa
stos
cwde
mov
push
jmp
fcom
imul
out
xor
cmc
ffreep
(bad)
jae
push
cmovbe
xchg
xor
in
and
fild
inc
shr
lods
cmp
out
stos
pop
pop
jae
js
sub
ror
test
cmp
xchg
iret
(bad)
mov
xor
adc
mov
pop
(bad)
cmps
dec
scas
jmp
xchg
call
retf
out
ror
ins
retf
ror
stc
test
das
out
out
sub
dec
aaa
(bad)
hlt
loop
fldpi
daa
sti
xor
jg
sub
mov
cmc
daa
sbb
cdq
call
push
and
loop
pop
mov
data16
out
mov
or
(bad)
lods
mov
inc
mov
mov
in
adc
push
mov
adc
inc
out
or
mov
aaa
retf
mov
jge
mov
adc
sub
mov
adc
stos
cmp
(bad)
adc
jno
sbb
cli
out
mov
mov
mov
dec
push
add
call
jle
and
test
cmp
test
jnp
sub
les
fisttp
cmp
adc
pop
pop
mov
leave
cmp
mov
mov
in
mov
ror
pop
fimul
xchg
sahf
stos
fwait
gs
ja
(bad)
adc
xor
(bad)
enter
mov
repnz
addr16
ficom
ins
ja
xchg
or
rcl
cmp
je
push
pop
mov
adc
xchg
pop
inc
shl
xor
stos
inc
sti
(bad)
in
mov
cmp
scas
mov
sub
jns
int
add
inc
add
arpl
data16
hlt
shl
sbb
push
test
fild
cmp
mov
pop
xchg
fwait
cmps
ret
les
mov
outs
cmps
dec
out
lea
test
push
inc
add
mov
movs
sub
fwait
rcl
aam
pop
out
mov
push
xchg
inc
jl
pop
outs
cmp
fstp
inc
in
mov
jg
dec
mov
pushf
xchg
sub
outs
shl
data16
lds
imul
mov
push
mov
test
mov
repnz
adc
jno
in
cmp
sbb
add
dec
cmp
xchg
xchg
dec
nop
addr16
adc
cmp
ins
cmp
aaa
aaa
ins
xor
add
jbe
stc
fistp
dec
ret
dec
xor
lea
in
push
cmp
rcl
xchg
or
sub
pushf
xchg
push
jecxz
int
pop
cmp
std
aam
cmp
pop
inc
mov
mov
sub
cs
and
pop
and
add
mov
mov
push
xlat
mov
jmp
shr
pusha
(bad)
out
adc
ror
cld
imul
adc
mov
jp
cmp
dec
mov
mov
test
push
adc
jne
loopne
or
int
iret
xlat
cmp
and
std
add
imul
dec
jb
dec
sbb
in
sbb
sub
pop
and
sti
retf
cmp
sub
jo
cdq
dec
or
push
sbb
frstor
push
or
add
adc
or
push
div
sbb
push
(bad)
sub
or
(bad)
(bad)
cli
sbb
pop
push
adc
mov
fst
data16
scas
(bad)
jl
out
ret
xchg
imul
sbb
aaa
ret
scas
(bad)
adc
loopne
not
inc
xor
adc
rcl
and
pop
fild
sub
movs
xchg
xchg
pop
popf
test
dec
imul
cdq
mov
fdivr
mov
inc
add
out
jle
sbb
adc
addr16
pop
out
out
ds
shr
nop
push
pop
call
pop
out
push
mov
inc
ret
add
push
out
mov
add
cmp
add
scas
(bad)
and
cmovg
inc
dec
xor
leave
mov
dec
repz
adc
push
fcmovnu
ds
out
mov
(bad)
and
call
rol
in
lahf
in
adc
popf
jbe
aad
daa
inc
repz
out
jg
jbe
pop
lock
rcl
pushf
retf
cmps
mov
popa
or
pop
adc
mov
mov
ret
fxch
sub
jge
lods
jge
into
fistp
das
xlat
ror
rcl
mov
ins
sbb
pop
inc
xor
sub
test
cmps
xchg
sahf
sub
jae
repnz
in
aaa
sub
repz
sub
outs
fucomip
ror
cdq
cmc
jb
repz
jnp
pushf
cmps
js
js
inc
and
mov
pushfw
jl
xchg
jge
mov
cmp
scas
idiv
out
or
jmp
xlat
sbb
fild
xor
leave
pop
or
adc
shr
daa
push
or
mov
inc
out
inc
mov
push
popf
sahf
jne
xchg
mov
or
aam
cdq
pop
xor
sbb
shr
mov
and
xchg
ror
jle
daa
cdq
xchg
xor
mov
call
stos
(bad)
cmp
cmp
jo
cmp
jl
mov
or
es
xchg
xor
jae
out
xchg
cmp
push
lar
cdq
adc
add
aas
sbb
xchg
movs
mov
or
sub
imul
(bad)
dec
add
sbb
or
mov
out
inc
xchg
imul
(bad)
aam
ins
mov
inc
mov
add
sahf
pop
cmp
or
cmc
inc
pop
inc
and
aaa
jbe
adc
push
pop
xor
gs
adc
lock
into
inc
cld
repz
xor
push
pop
test
je
jns
fist
adc
add
or
dec
leave
or
push
cmps
push
sbb
sar
stos
mov
in
mov
lods
and
test
cmc
sbb
js
call
dec
xlat
inc
or
sbb
lds
mov
fadd
cmp
xchg
clc
dec
mov
mov
xchg
sbb
jmp
stc
pushf
test
add
outs
jge
jne
loope
or
mov
jae
int
add
addr16
jmp
sar
call
xchg
add
push
mov
and
scas
cmp
out
(bad)
lods
mov
jo
xchg
repz
adc
imul
sbb
push
sbb
sti
jns
jae
add
add
jl
mov
scas
mov
lods
in
xor
cmc
arpl
and
call
jl
and
stc
mov
frstor
jae
push
imul
sahf
push
(bad)
dec
aas
pop
mov
mov
pusha
xchg
adc
mov
cmp
mov
lock
push
mov
adc
mov
push
pop
xor
je
or
xchg
and
sub
jo
mov
jecxz
pop
xchg
jl
xchg
in
mov
inc
jnp
xchg
and
dec
pop
pop
sub
lock
push
mov
dec
and
push
cli
aam
cmp
test
mov
inc
js
cmp
jl
in
hlt
sahf
cmps
scas
mov
inc
mov
popf
lea
jo
jbe
push
push
fmul
ja
adc
dec
mov
rol
adc
mov
mov
lahf
(bad)
(bad)
outs
test
cdq
dec
dec
mov
jmp
push
mov
sbb
cdq
test
and
nop
jmp
mov
mov
int
cmp
repnz
xchg
push
iret
or
adc
push
add
xchg
fidivr
xchg
sbb
ror
out
xchg
sbb
mov
pusha
xchg
or
shr
or
xchg
cld
test
sbb
arpl
push
iret
movs
leave
clc
xchg
aas
pusha
push
mov
retf
and
sbb
xchg
repnz
hlt
test
mov
jae
repnz
fild
(bad)
mov
out
and
paddsb
cmc
mov
sbb
out
int
pop
pushf
or
mov
jnp
out
addr16
dec
adc
jl
xchg
pop
sub
xchg
mov
pushw
push
into
xchg
shl
stos
inc
jnp
xchg
push
push
sub
sbb
or
cmp
fcmovnu
and
add
mov
add
xor
mov
es
es
fisub
mov
xchg
cmp
arpl
pop
push
out
addr16
sbb
imul
jae
xchg
add
leave
cmp
mov
int
adc
sbb
mov
jnp
(bad)
xor
sub
cwde
dec
in
dec
jmp
into
xchg
or
mov
out
mov
sub
pop
inc
out
pop
xor
jmp
mov
fdivr
sbb
retf
xor
movs
mov
sbb
sbb
daa
leave
loop
mov
icebp
hlt
push
fmul
nop
mov
(bad)
xchg
not
lods
loop
inc
and
lods
or
push
xchg
add
mov
test
cwde
mov
push
push
aaa
stos
hlt
and
dec
pop
int3
sbb
pop
xchg
add
shr
xchg
rep
hlt
mov
lock
fsub
sub
test
call
lods
addr16
and
adc
jmp
sub
or
add
stos
cmps
aam
pop
cmps
add
dec
or
ss
in
dec
jge
out
jbe
inc
jbe
dec
dec
xchg
push
aam
xchg
jae
stos
sub
repz
jns
jge
div
sahf
xchg
push
dec
or
mov
mov
les
jae
aas
rcl
imul
pop
aas
jmp
inc
fild
inc
shl
jg
add
push
and
sbb
jae
jns
fcmovne
pop
pop
mov
mov
les
rcr
popa
mov
and
sbb
js
mov
repz
push
cli
movs
inc
mov
sbb
mov
outs
out
push
inc
in
adc
mov
inc
cmp
loopne
xchg
xchg
idiv
ja
je
outs
push
je
cwde
adc
mov
jmp
ds
cmp
mov
add
addr16
clc
ins
fs
ret
shl
pop
pop
dec
sub
les
lea
and
jg
xor
add
ret
nop
xchg
sub
pushf
adc
enter
and
jmp
cmp
and
rol
mov
dec
sbb
pushw
lds
and
xor
cmp
mov
movhps
aam
sub
out
inc
popa
inc
mov
rcr
dec
and
rol
cmps
jns
retf
pusha
adc
or
xchg
jg
inc
mov
out
rcr
into
jmp
pop
hlt
rcr
popf
mov
int3
mov
jmp
push
add
mov
add
push
and
or
mov
faddp
cmps
push
push
clc
pop
jmp
jno
xlat
push
and
or
adc
pop
lea
xchg
cmp
add
(bad)
scas
es
sbb
scas
lea
pop
add
loope
xchg
xor
dec
in
ja
add
push
fisubr
jmp
movs
jecxz
retf
and
retf
ins
dec
and
mov
cmp
test
data16
mov
ins
outs
xor
ret
or
movs
push
push
xstore-rng
cmps
inc
es
outs
cmp
inc
xchg
sbb
dec
and
and
movs
adc
mov
(bad)
cmc
jge
fwait
popf
lods
mov
fs
test
(bad)
in
test
adc
mov
es
rcr
repz
icebp
and
cmp
jmp
cmp
cmp
pop
test
jnp
xor
cmp
pushf
movs
xor
cmps
mov
or
fistp
outs
jp
push
cmc
pop
mov
out
xchg
mov
aam
(bad)
jmp
sbb
cmp
sar
lds
push
iret
repnz
sbb
jnp
add
aas
xor
xor
adc
mov
(bad)
pushf
cmp
inc
in
mov
ds
addr16
push
mov
int
gs
sub
dec
leave
ret
imul
pop
add
xchg
pop
int3
das
inc
xchg
test
inc
sub
retf
out
loopne
mov
push
fisubr
inc
jae
jle
(bad)
or
or
add
mov
ds
iret
jecxz
adc
(bad)
sbb
xchg
and
xchg
fst
push
xchg
jbe
xchg
add
int3
mov
push
ds
in
mov
jno
cwde
aad
lods
xchg
push
rcl
in
pop
sub
dec
sub
jb
jl
(bad)
std
mov
dec
add
mov
cwde
clc
test
(bad)
imul
sub
repnz
push
lods
(bad)
push
sbb
xchg
push
(bad)
push
lahf
jmp
xor
inc
ficomp
movs
jo
(bad)
jp
adc
cs
jmp
stos
mov
xchg
xchg
push
nop
vmwrite
and
mov
ds
mov
dec
daa
jmp
jp
cmp
sbb
sbb
imul
fdivr
add
adc
into
sub
in
dec
lds
mov
inc
iret
xchg
test
pop
push
jl
rcr
pop
jle
nop
mov
cld
call
in
imul
fnstcw
cmp
outs
and
dec
xor
pop
lods
call
shl
xchg
arpl
dec
jl
xchg
push
xor
jns
jle
xchg
sub
in
xchg
sahf
mov
mov
xchg
imul
pop
cmp
xchg
push
push
pop
js
jecxz
pop
adc
dec
cmp
outs
(bad)
out
sbb
pop
mov
mov
adc
cmp
dec
inc
adc
inc
dec
push
movs
mov
jns
jmp
pop
sub
jne
push
inc
sub
push
lea
hlt
js
or
and
cmp
mov
push
xor
pop
aaa
add
cmp
mov
push
cmp
rol
cdq
xor
ret
popa
dec
imul
pop
mov
aad
cdq
push
repz
add
call
pusha
pushf
jo
cdq
push
cmp
cmp
pop
add
push
test
pushf
in
add
in
out
fidivr
out
xchg
pop
sti
leave
pusha
xor
fbld
pop
sub
push
push
fs
or
clc
adc
cmp
bound
scas
sbb
mov
movs
mov
lea
dec
les
push
daa
xchg
cmp
fs
xchg
sub
repz
mov
jle
js
(bad)
mov
cdq
pop
test
ja
lea
mov
int
jmp
xchg
mov
mov
mov
dec
xor
add
shl
hlt
sub
cs
mov
jecxz
jne
push
jge
fwait
js
adc
pop
mov
sub
test
or
and
sbb
mov
sub
mov
sub
add
sub
cli
jg
pushf
xchg
xchg
repz
inc
jg
push
pop
add
out
xor
arpl
rcr
fistp
adc
add
icebp
mov
xor
repnz
mov
lahf
iret
jb
adc
jae
xchg
cmp
imul
push
clc
in
mov
jae
xchg
or
lahf
add
sub
inc
push
or
xchg
call
adc
mov
inc
es
mov
loopne
pop
ror
lods
inc
adc
jns
push
sub
sub
lea
push
cwde
xchg
sub
fwait
mov
or
jb
aad
cmps
clc
push
sub
add
or
sbb
retf
mov
xchg
xlat
dec
xchg
adc
jnp
pop
aam
inc
out
sar
or
data16
or
repnz
out
inc
fs
sahf
retf
cmp
fiadd
ret
mov
mov
cmp
icebp
cwde
sub
mov
pop
iret
xchg
mov
fmul
es
jmp
imul
retf
xchg
nop
in
sar
push
pop
or
in
push
cmp
sub
sbb
mov
xchg
cmp
ja
xchg
fmul
js
sbb
popa
and
jo
lods
sti
aam
add
hlt
xor
outs
mov
out
sbb
lea
cmp
jecxz
cmp
push
xchg
or
out
in
add
not
push
mov
rcl
or
lods
push
adc
jmp
js
in
fisub
inc
pop
or
stos
and
lods
rol
dec
fsub
add
push
push
mov
vmread
sbb
mov
mov
sar
std
pop
test
xchg
loopne
movs
sahf
or
imul
and
fsub
or
int3
pusha
(bad)
je
es
or
clc
push
cmp
nop
into
lods
xchg
gs
movs
pop
data16
pushf
mov
and
or
pop
ret
movs
bound
pusha
lea
mov
adc
mov
xlat
in
mov
jg
cmp
pop
mov
xor
dec
movs
sbb
inc
rcl
loope
ss
call
push
push
fsincos
mul
lods
and
inc
push
mov
pushf
imul
push
aam
sub
push
xchg
ja
es
jp
mov
(bad)
xor
inc
push
mov
je
xchg
push
das
jns
ds
fadd
mov
xor
je
scas
mov
arpl
rol
scas
(bad)
mov
mov
cmps
adc
push
push
sti
fstp
out
ins
in
xor
sbb
cmc
pop
sub
inc
std
icebp
pop
jbe
jae
hlt
(bad)
cmps
repz
out
ror
pushf
xchg
mov
cmp
movs
stos
test
cmp
dec
pop
jo
xor
inc
(bad)
xor
inc
jl
mul
sbb
in
jnp
push
mov
popf
mov
push
jl
out
pusha
gs
out
xchg
cmc
rcr
adc
stc
int
cld
outs
(bad)
jmp
or
xchg
(bad)
cmp
addr16
pushf
(bad)
sti
pop
sub
add
jo
xor
retf
push
les
add
dec
lods
xlat
mov
push
mov
dec
lock
push
push
or
jle
push
cmp
stc
sub
dec
pop
and
or
loop
xchg
cmps
imul
dec
sub
repz
and
or
cmp
int
lahf
sbb
jo
cmp
movs
push
out
mov
lds
out
dec
(bad)
data16
xor
hlt
and
(bad)
popa
cmp
push
ins
inc
cmp
push
aad
rcr
pop
jecxz
repnz
mov
jno
dec
sbb
xlat
outs
inc
sbb
mov
fimul
xchg
mov
je
mov
add
fwait
in
push
sbb
push
stos
mov
cmps
jne
push
adc
pop
push
mov
fwait
or
(bad)
sub
addr16
in
mov
sbb
in
out
rcl
lahf
cld
adc
dec
rol
dec
dec
jp
pop
push
das
mov
shl
and
mov
test
(bad)
pushf
sti
out
movs
lds
cmc
fisub
hlt
test
mov
leave
jl
enter
dec
lds
push
stos
mov
pop
test
mov
loop
and
sub
xchg
mov
mov
pop
ds
mov
xchg
test
or
in
jae
data16
test
xchg
cmps
jbe
dec
and
imul
fwait
inc
in
scas
fst
data16
sbb
mov
cmp
loope
mov
mov
add
xchg
test
fst
sti
adc
or
mov
lock
cdq
inc
push
sti
fist
je
xor
pusha
pop
xchg
(bad)
fwait
outs
xor
pop
mov
or
test
pushf
mov
sahf
(bad)
fbstp
mov
hlt
inc
scas
inc
int3
daa
and
aam
(bad)
dec
sub
lds
iret
sbb
loope
or
enter
call
mov
icebp
mov
sub
ror
mov
dec
xchg
out
pop
mov
stos
mov
scas
data16
xchg
and
xor
mov
movs
cs
mov
in
and
aad
into
mov
inc
jo
pop
sbb
xchg
cmc
ja
aas
sub
inc
dec
pop
pop
fs
nop
push
out
mov
lahf
mov
ss
lods
(bad)
push
or
cmp
test
mov
fdivr
xor
rcr
xchg
inc
xchg
mov
(bad)
sbb
sub
push
dec
outs
adc
push
scas
sbb
adc
sahf
mov
inc
mov
stos
sbb
imul
push
dec
scas
mov
retf
push
dec
mov
inc
fdivrp
sti
out
push
pop
push
mov
inc
cld
ins
inc
and
jge
dec
cmp
aad
in
stos
xor
jmp
add
popa
mov
push
mov
push
pop
(bad)
cmp
push
call
fidiv
jnp
in
push
or
repz
pop
or
fs
popf
sub
mov
div
and
mov
(bad)
call
sub
sbb
loope
dec
aas
jmp
stc
bound
jne
push
push
dec
mov
mul
js
push
or
loop
(bad)
sbb
adc
lahf
xchg
adc
adc
push
lds
hlt
ret
fsub
xchg
mov
mov
fwait
int
std
out
sub
call
add
xor
and
fwait
lock
adc
pop
dec
scas
adc
(bad)
fstp
jmp
xlat
mov
out
loopne
call
std
mov
xchg
inc
fist
in
fcomp
dec
push
ins
je
cmp
sbb
add
sub
addr16
push
adc
and
(bad)
lods
mov
cwde
iret
fucomip
not
mov
xchg
lods
fstp
or
popf
sti
out
leave
outs
sub
jge
call
lds
adc
sub
jb
add
xchg
fprem1
call
cmc
out
in
(bad)
outs
cdq
(bad)
mov
xchg
(bad)
or
neg
out
call
mov
or
push
bound
movs
mov
data16
js
enter
cs
jne
inc
inc
cmp
mov
ins
cwde
jo
push
ja
sub
ret
mov
xchg
or
cs
xchg
inc
adc
jl
clc
mov
inc
and
arpl
cmp
test
dec
imul
lock
movs
sbb
cmp
and
fs
int
out
mov
(bad)
mov
adc
jge
test
push
xor
shr
jne
std
in
ja
xchg
(bad)
adc
and
movs
dec
pop
mov
call
mov
mov
mov
mov
mov
ds
call
bound
xor
sbb
dec
(bad)
lods
ins
addr16
movs
pop
dec
call
(bad)
and
jp
sbb
das
adc
fiadd
bound
and
fld
sub
cwde
and
or
inc
fcom
xchg
aad
cld
inc
push
lods
cs
pushf
mov
cdq
lea
loopne
mov
mov
stos
lods
cmp
stos
jo
jb
jne
addr16
aas
and
stc
aam
jb
pop
addr16
pop
xor
repnz
fmul
pop
rol
pop
lea
mov
js
adc
mov
movs
aaa
popa
mov
cld
jne
dec
fcomp
jae
dec
push
shl
add
lods
repnz
add
loop
div
inc
fwait
js
rcl
jbe
mov
adc
mul
retf
scas
jmp
lock
repnz
call
jmp
cli
aaa
xchg
push
push
push
shl
jecxz
sahf
enter
cmp
cmc
mov
mov
pop
and
pop
push
fidiv
out
xchg
repnz
add
mov
mov
adc
inc
jg
jecxz
ins
inc
mov
test
cmc
mov
mov
(bad)
fdivr
push
sbb
and
pop
pusha
ret
retf
sub
cmp
mov
mov
inc
nop
xor
xor
shl
nop
sbb
pop
lods
jg
xor
lods
jge
xchg
fs
mov
bound
loopne
pop
mov
sti
mov
mov
fist
out
mov
xchg
aad
sub
inc
into
iret
mov
mov
mov
fs
cmp
out
sub
cli
adc
inc
mov
xlat
xlat
jo
jae
add
inc
add
cli
dec
dec
cmc
test
fsubr
ss
retf
lds
cmc
ja
add
(bad)
out
mov
sbb
xor
mov
mov
fs
pop
add
inc
mov
outs
lds
inc
add
mov
inc
cmp
sub
push
cmp
sbb
xchg
outs
dec
add
outs
add
inc
ds
inc
inc
mov
jecxz
mov
sbb
ss
aam
mov
push
test
or
jp
lds
ja
fnsave
dec
inc
xchg
std
xchg
leave
fst
mov
push
cmp
inc
pop
jl
inc
std
jmp
aaa
adc
(bad)
or
cmc
mov
jnp
mov
aad
mov
or
sbb
ret
mov
push
retf
ret
(bad)
mov
mov
and
jno
scas
xchg
push
sub
outs
movs
scas
push
jecxz
(bad)
int3
hlt
hlt
gs
dec
fcom
and
pcmpgtw
jg
cmp
fwait
mov
loope
rcr
fstp
fisttp
mov
fst
sti
sbb
jmp
lahf
jo
js
mov
pop
add
enter
fld
ja
mov
jecxz
inc
push
mov
xchg
lea
hlt
das
xor
pop
mov
out
pop
dec
or
sbb
pop
out
mov
repz
and
sub
or
out
movs
lods
popa
xchg
in
mov
loope
inc
fist
push
xchg
fldenv
(bad)
mov
pusha
adc
or
mov
mov
mov
jo
mov
xor
(bad)
pop
xor
scas
into
je
dec
mov
and
or
outs
add
fisub
(bad)
aad
sub
add
call
mov
mov
mov
or
xchg
shr
mov
add
hlt
imul
test
jp
andnps
imul
adc
push
out
xchg
inc
out
mov
ja
movs
push
sbb
mov
sub
lock
or
push
mov
dec
out
imul
int3
fbstp
push
addr16
dec
xor
xor
mov
sbb
ret
and
int3
stos
mov
xchg
cwde
imul
dec
mov
pop
fild
push
adc
sbb
cld
iret
adc
mov
pop
fnstcw
jb
sub
cld
mov
cmp
aaa
push
mov
(bad)
lea
popa
mov
dec
in
repnz
adc
add
fnstenv
push
mov
mov
dec
jne
push
ja
mov
add
ret
sbb
ins
cmp
mov
outs
out
call
popf
retf
scas
retf
adc
xchg
mov
mov
cdq
inc
shl
test
scas
dec
add
and
add
inc
mov
rsqrtps
ror
std
xchg
mov
xor
(bad)
fadd
fidiv
jmp
xor
dec
xchg
pop
hlt
out
or
cmp
and
add
test
repnz
jae
mov
sub
mov
clc
jmp
mov
daa
int
jnp
mov
xchg
stc
adc
les
pop
neg
call
push
push
jge
inc
jnp
xor
fmul
cmps
scas
lods
sar
jmp
inc
push
retf
sar
inc
pop
jbe
retf
call
cmp
test
inc
cs
push
mov
inc
jo
mov
mov
or
pop
add
shr
iret
inc
mov
shl
pop
dec
xor
inc
xchg
add
(bad)
jns
stc
cmps
(bad)
cmc
inc
mov
xor
mov
push
lahf
and
sub
(bad)
clc
sti
cdq
jp
mov
cmp
cs
mov
mov
dec
inc
xor
mov
fdiv
jbe
cdq
ins
sub
inc
dec
or
daa
lea
push
aad
rcl
ror
fimul
dec
sbb
std
clc
mov
mov
mov
push
and
mov
push
dec
stc
sub
xchg
xchg
mov
sub
lods
rcr
push
cdq
out
inc
fnstcw
xchg
push
out
int
sub
cmp
call
cs
sbb
lock
mov
pop
fcomp
jmp
mov
aaa
mov
push
adc
or
add
add
lods
push
ret
aaa
or
xchg
ins
fistp
xchg
push
stc
pop
std
gs
and
cmps
pop
movs
lock
cwde
fbld
add
repnz
mov
rcl
dec
mov
(bad)
fcmovbe
jb
or
xchg
sub
mov
push
mov
jge
aas
push
test
xchg
into
xchg
mov
adc
cld
(bad)
int
pop
add
xchg
rcl
pop
xchg
push
test
inc
sysret
pop
pop
xor
les
(bad)
dec
jbe
popf
dec
mov
dec
popf
sub
movs
pop
iret
dec
bound
xor
push
mov
popa
sbb
mov
rcr
push
and
stc
add
int
adc
jae
ret
mov
aaa
(bad)
test
mov
inc
out
je
mov
xchg
adc
add
cmp
(bad)
or
jnp
movs
pop
mov
sbb
in
xchg
lds
sub
dec
clc
out
mov
add
or
add
fist
jae
inc
mov
outs
nop
push
xchg
pop
out
les
xor
pusha
inc
cmp
cmp
popf
gs
fstp
xchg
fsub
jmp
int
(bad)
cmp
sti
int3
rol
mov
cli
call
fist
inc
jnp
jne
ror
test
push
lods
hlt
mov
add
adc
adc
(bad)
js
outs
std
dec
or
adc
inc
xchg
imul
cmp
imul
pop
sub
add
je
pop
mov
sub
fdiv
in
sbb
leave
jmp
pop
call
jmp
fbld
mov
movs
fist
cmp
or
(bad)
pop
xor
inc
dec
pop
cmp
test
dec
jmp
mov
xchg
cld
stc
int3
xchg
mov
imul
push
pop
clc
pop
add
xor
dec
les
jns
sub
sub
(bad)
fsub
mov
imul
lahf
mov
sbb
pop
jbe
ret
or
mov
ror
ffreep
mov
jb
adc
repnz
cmp
nop
int3
add
adc
xlat
mov
dec
jnp
cmps
aas
rcr
std
xchg
add
mov
icebp
xchg
mov
into
out
stc
outs
iret
hlt
stos
inc
scas
fidivr
inc
icebp
and
in
rcl
jge
cmps
sar
cmp
inc
cld
call
loope
jnp
pop
jle
lods
and
dec
push
cwde
add
lods
jmp
test
rsm
fistp
scas
pusha
push
jae
out
retf
and
cmp
int3
ret
mov
addr16
cmp
pop
outs
sbb
shl
test
rcl
rcr
cmp
push
jb
push
mov
rcr
int3
iret
ds
mov
sbb
add
add
ror
inc
mov
int3
cmp
div
stos
popa
xchg
icebp
pushf
dec
mov
ret
xchg
cmp
test
cmp
ror
fisttp
dec
inc
rcr
mov
movs
(bad)
jb
pmuludq
test
div
jmp
xor
fisttp
clc
push
pop
sti
rcl
hlt
mov
aad
gs
jl
popf
inc
call
test
nop
mov
inc
out
jae
inc
cmp
xchg
sbb
arpl
inc
cwde
fisttp
and
mov
imul
jmp
out
loopne
adc
xchg
js
pop
pushf
cmc
add
or
inc
sbb
inc
fdivrp
les
inc
dec
mov
xchg
push
jmp
xchg
bound
fs
sahf
scas
rcr
shl
clc
lahf
es
jg
or
xor
popf
ins
nop
mov
daa
cmp
push
sbb
in
mov
in
and
inc
cmp
popa
adc
jns
rol
sub
and
jno
int3
add
imul
push
shl
xchg
movs
aad
push
js
scas
pop
push
fwait
mov
and
pushf
or
aam
or
outs
push
pushf
and
call
cmp
cmp
push
aas
push
out
les
int3
pop
fadd
mov
and
xor
xlat
push
sbb
(bad)
in
xor
and
mov
jo
mov
sub
jae
sub
inc
icebp
movs
aad
mov
and
or
mov
add
mov
mov
loopne
arpl
inc
(bad)
sbb
xor
pop
sub
in
inc
imul
mov
je
jae
fiadd
fwait
lock
fimul
pusha
or
mov
daa
dec
adc
pop
mov
pop
je
push
or
and
add
mov
dec
pop
dec
jg
xchg
adc
cmp
or
inc
push
fld
aaa
aad
xchg
sbb
popa
mov
and
add
fdivr
movd
push
jne
dec
push
add
dec
stos
lahf
fistp
and
out
dec
call
add
icebp
std
retf
adc
jge
jle
daa
sub
sub
cmp
sub
cld
nop
test
frstor
loopne
loopne
dec
aad
adc
fdiv
or
cmc
(bad)
inc
loop
jno
xchg
jg
cmp
xchg
or
ret
cdq
(bad)
out
(bad)
stc
ret
shl
sbb
push
cmp
push
imul
pop
inc
repz
xor
jne
xchg
rcr
cmp
clc
push
in
sbb
rcl
cmps
cmp
pop
or
dec
mov
stos
inc
addr16
xchg
nop
ins
in
mov
or
test
push
inc
retf
js
jge
mov
pushf
xor
add
stc
js
loop
adc
mov
adc
pop
test
neg
and
cmp
ins
imul
xchg
ret
aam
pop
adc
outs
and
pop
pop
inc
dec
call
jb
xchg
pop
repnz
mov
pop
cmp
retf
je
add
jmp
mov
or
xchg
lods
inc
out
cmp
add
and
xor
mov
pop
shl
scas
inc
xor
push
(bad)
and
jle
push
pop
cmps
inc
ror
push
push
and
pop
jne
fdiv
pop
mov
cmp
cdq
cmp
aad
lods
ror
leave
stos
xchg
out
(bad)
popf
ss
fiadd
adc
and
pop
jl
push
and
and
or
inc
add
call
ror
dec
cmps
cmps
cmps
sbb
imul
dec
push
(bad)
in
sub
stc
dec
and
xchg
jb
mov
sub
arpl
loop
pop
pop
pop
shl
(bad)
idiv
add
push
jno
enter
push
dec
outs
sar
clc
sbb
jmp
pop
stos
ret
mov
or
mov
mov
nop
popa
pop
out
jne
int
out
arpl
xchg
mov
sub
mov
push
push
xchg
lock
and
jecxz
xor
test
xor
mov
loope
ret
call
mov
retf
pop
sub
(bad)
cmp
out
nop
sbb
rep
retf
loope
imul
adc
(bad)
movs
inc
push
pop
jle
mov
mov
mov
call
xchg
ja
int
or
mov
das
arpl
sbb
pop
lea
adc
cli
jb
lods
pop
mov
push
jbe
dec
and
loope
xchg
xchg
sub
cli
cmc
mov
xchg
and
push
clc
pop
cmp
lahf
outs
(bad)
(bad)
loop
mov
sbb
cmp
dec
in
mov
das
addr16
or
imul
mov
jl
pop
cmp
cwde
imul
cwde
mov
pusha
test
fcomp
jmp
jbe
inc
repnz
add
mov
call
out
iret
inc
sub
sub
shl
xchg
imul
xchg
std
ja
xlat
rcr
cmc
mov
push
fwait
lods
fcom
in
fnstsw
aam
add
inc
imul
imul
loop
inc
lds
xchg
push
cmps
bnd
pop
dec
loope
mov
outs
jno
xlat
mov
nop
adc
xor
pop
or
imul
hlt
retf
popa
mov
push
jb
xchg
mov
sub
lock
push
xor
inc
pop
fsubr
daa
in
int3
adc
xor
retf
fild
xor
rcr
mov
stos
mov
aam
scas
sub
mov
fwait
xchg
cli
sub
mov
jnp
in
mov
nop
es
xor
nop
jmp
adc
in
pop
or
(bad)
out
shl
mov
out
cmp
aad
pop
test
or
ret
cmps
sub
dec
inc
mul
or
push
cli
lds
mov
addr16
iret
jmp
pop
mov
leave
xchg
in
mov
icebp
iret
data16
rcr
mov
sahf
sub
sub
ss
dec
ret
das
and
call
sub
push
adc
jnp
jmp
rcl
addr16
xchg
in
and
or
popa
push
mov
sbb
test
mov
xchg
dec
bound
sbb
jb
add
push
fucomip
lock
aam
sub
adc
fcomp
jo
pusha
jg
cwd
lahf
mov
mov
push
stc
cmp
and
inc
sub
mov
repnz
jge
push
fsubr
or
test
push
pop
data16
mov
cmp
out
ins
push
std
scas
cwde
cmp
mov
pop
popf
sahf
pusha
xchg
cmps
in
in
(bad)
(bad)
jae
leave
sbb
ins
xchg
stc
add
mov
push
out
in
jl
loop
int3
mov
mov
sub
pusha
jle
js
jb
in
scas
cmovae
inc
movs
sub
out
call
iret
pop
inc
xchg
in
mov
mov
fcomp
mov
shr
push
(bad)
jns
mov
push
push
xor
das
sbb
jge
jmp
jmp
in
rcl
in
jmp
outs
loop
and
sub
add
adc
xchg
xor
pop
scas
and
xchg
or
mov
and
and
push
or
sub
adc
cmp
adc
mov
ret
sub
mov
dec
repnz
std
loope
jno
outs
out
out
dec
add
fdiv
mov
dec
movs
outs
dec
mov
sbb
add
mov
push
imul
ins
(bad)
dec
das
dec
dec
mov
fldenv
xor
xchg
cmp
mov
pop
sub
dec
fsubr
jecxz
and
mov
test
xor
arpl
dec
mov
ss
ret
shl
int
test
xor
cwde
mov
ret
inc
mov
mov
push
mov
sub
push
loope
ss
sbb
int3
pop
adc
out
loopne
add
xor
sub
jnp
les
scas
push
inc
dec
lock
mov
jne
scas
xor
mov
cmp
jecxz
dec
jmp
or
pop
cmps
dec
loope
xlat
mov
cmp
mov
jl
jne
sahf
mov
adc
pusha
xor
sub
lods
xor
sbb
xor
and
xchg
jno
adc
ret
pop
lods
mov
scas
push
xor
and
mov
dec
test
mov
rcr
stos
xchg
add
icebp
dec
cmp
inc
ins
mov
js
ficom
out
loopne
mov
xor
cmp
and
outs
je
xchg
lods
mov
movs
cs
xchg
das
icebp
mov
and
dec
(bad)
(bad)
clc
dec
fidiv
mov
pop
rcr
or
(bad)
cld
loope
sub
nop
jo
inc
or
fwait
add
ret
fprem1
xchg
pop
adc
pop
in
and
aas
loope
and
cmps
or
jae
mov
ja
inc
adc
sahf
jecxz
adc
mov
or
inc
and
mov
inc
fadd
dec
xor
xor
push
mov
push
data16
add
mov
jno
int
dec
cmp
jns
xlat
loop
or
call
and
push
cli
je
(bad)
or
sbb
push
mov
adc
rcr
jbe
xchg
add
jg
sbb
hlt
adc
lock
add
cmp
lock
inc
inc
add
sbb
in
ror
or
adc
sub
inc
pop
sahf
scas
or
jo
aad
fwait
jo
(bad)
xchg
fld
mov
emms
cmps
pusha
adc
cmps
idiv
sub
mov
sub
mov
or
daa
pop
lods
jmp
out
cmp
sbb
cmp
cmc
ins
imul
fsubp
jle
shl
push
mov
fisttp
fdiv
inc
push
pop
mov
pushf
into
jae
adc
push
out
enter
inc
das
das
jp
in
inc
loopne
xor
xchg
mov
sti
mov
retf
xchg
scas
jp
movs
ins
sub
sub
sub
cld
aam
mov
dec
or
popa
sub
loope
iret
mov
movs
leave
aam
ds
xor
pop
xor
shr
call
push
jp
push
jnp
push
and
fisttp
inc
and
nop
int
xchg
adc
and
mov
sbb
pop
(bad)
mov
inc
imul
stc
pop
les
lods
stc
xchg
mov
gs
aaa
(bad)
jecxz
mov
dec
ficom
and
sti
or
repnz
xchg
fisttp
jp
xor
lock
fcmovnu
fiadd
xchg
push
fmul
es
push
out
out
pop
in
or
push
inc
int3
cmp
bound
int
bound
aad
sbb
(bad)
xchg
dec
jge
mov
mov
pop
xor
mov
call
pop
jmp
add
dec
inc
jmp
sbb
sar
inc
jae
push
xchg
cmps
retf
das
fld
inc
sbb
inc
xchg
cmp
mov
pop
adc
cdq
add
cmp
imul
out
cwde
push
mov
out
push
daa
add
push
adc
ds
adc
sbb
stos
ins
call
jb
push
jg
lea
sub
lahf
mov
pop
pop
aaa
test
or
sbb
adc
scas
in
in
mov
fmul
in
sbb
das
call
or
sub
mov
jbe
add
out
add
fdivr
cmp
jbe
xchg
pop
outs
or
mov
movs
imul
adc
sub
leave
add
into
aam
aad
mov
fdivr
outs
ret
out
or
repz
(bad)
xchg
sub
movs
icebp
loope
in
pop
or
nop
jmp
push
add
jb
test
mov
push
xchg
mov
jmp
cld
mov
mov
mov
jge
fcom
mov
push
iret
scas
call
mov
mov
mov
fiadd
or
retf
les
push
icebp
(bad)
sbb
shl
imul
sub
idiv
ja
lods
dec
cmp
int3
dec
mov
push
mov
xchg
cwde
push
dec
(bad)
movs
mov
shr
dec
(bad)
xor
jg
mov
xchg
xchg
cmp
repz
out
imul
inc
jns
jecxz
das
xor
and
ins
adc
pop
xor
pop
jg
adc
enter
movs
jle
cmps
retf
rcl
repz
cmp
mov
pop
cli
js
mov
mov
jnp
or
dec
scas
inc
and
mov
dec
cmp
jg
retf
xor
bound
sbb
sbb
pop
dec
adc
cmp
ror
stc
gs
shr
retf
pop
sbb
bound
lock
lods
je
jnp
ins
jmp
pop
enter
neg
nop
jg
and
(bad)
mov
xor
mov
scas
dec
mov
mov
nop
mov
jle
cmp
outs
mov
xchg
mov
sub
jbe
in
das
jg
movs
pop
and
or
push
jns
inc
or
lea
mov
lds
or
xlat
or
inc
add
pusha
loope
sar
int
cmc
add
icebp
cwde
push
in
adc
or
loope
cmp
(bad)
retfw
cmps
sub
into
add
clc
push
and
xchg
stos
and
fsub
or
pop
jg
or
mov
sub
cmp
add
jbe
inc
sub
popf
sub
leave
xchg
mov
and
xchg
pop
mov
pop
mul
lods
call
pop
fscale
repz
cs
vfrczps
jo
xchg
push
das
(bad)
(bad)
pop
mov
mov
adc
(bad)
sbb
mov
out
aas
out
sbb
inc
enter
mov
iret
loop
cmp
loop
add
cld
inc
sub
push
xor
inc
jo
movs
rol
ror
push
retf
sbb
jp
test
das
xchg
xchg
and
mov
mov
push
icebp
outs
mov
popa
stos
popa
pop
and
xor
adc
leave
mov
add
and
add
sahf
add
test
adc
(bad)
bound
popf
cmp
icebp
hlt
adc
xor
in
mov
fbstp
sub
add
es
mov
jnp
ja
xor
movs
mov
adc
mov
daa
pop
push
imul
sub
inc
cwde
dec
(bad)
or
or
adc
out
xlat
into
inc
pop
inc
out
lea
jl
les
repz
sbb
popa
mov
xchg
or
jbe
lea
add
ins
push
jo
scas
push
imul
xor
out
adc
add
and
xchg
cmp
(bad)
stos
cmp
lods
push
pop
cwde
js
in
fld
push
jnp
mov
loope
dec
popa
and
mov
add
arpl
push
bound
call
gs
adc
mov
adc
adc
loop
movs
mul
xchg
or
lods
punpckhdq
pop
iret
jge
cs
xor
and
add
cs
outs
leave
daa
xchg
xchg
(bad)
cmps
(bad)
hlt
add
and
jp
dec
xchg
js
fild
xchg
push
mov
mov
out
rcr
mov
leave
imul
into
je
jbe
imul
in
and
jecxz
xor
mov
loope
mov
in
test
sbb
and
mov
xor
bound
out
pop
xchg
out
rol
mov
xlat
jge
fisub
stos
movs
push
pop
mov
pop
stos
cmovg
cli
arpl
sub
push
scas
xchg
stos
push
out
jno
shl
xor
jp
add
jmp
cld
(bad)
dec
mov
add
jecxz
jbe
dec
inc
clc
test
push
out
fstp
pop
lods
inc
or
mov
cmp
pop
xor
add
sti
mov
or
fild
xchg
xor
sbb
cmp
hlt
xchg
aad
jne
cmc
mov
pop
inc
add
stc
movs
movs
mov
ds
sbb
out
or
mov
ret
ss
dec
adc
xor
lock
mov
push
scas
jp
mov
xchg
add
mov
test
fwait
add
(bad)
stc
les
and
push
jns
pop
(bad)
clc
xor
cld
jmp
loopne
inc
sar
lods
jecxz
xor
ret
sub
dec
in
jecxz
jnp
ret
js
sar
and
stc
jno
jmp
cs
pop
sub
fadd
ins
ffreep
lea
mov
jmp
mov
clc
pop
sub
xchg
sub
pop
mov
push
imul
int3
sti
pop
push
inc
(bad)
adc
bndldx
jge
(bad)
mov
sub
(bad)
repnz
dec
push
xor
(bad)
adc
mov
(bad)
push
repnz
mov
mov
xchg
dec
hlt
retf
mov
add
cmc
add
jmp
ds
(bad)
push
aaa
pop
dec
adc
or
lods
jge
sar
xor
inc
inc
and
push
push
pop
sub
add
pop
inc
sbb
rcr
sbb
push
out
xor
push
inc
pop
inc
xchg
in
mov
retf
pop
mov
jmp
test
bound
fwait
mov
jbe
inc
mov
xor
dec
loopne
retf
sbb
sbb
cmc
call
push
(bad)
jge
out
jle
cmp
jne
out
outs
sar
or
(bad)
les
pop
sbb
mov
ffree
dec
adc
pop
mov
add
and
inc
cmp
lods
ret
adc
mov
jbe
ret
mov
or
mov
jp
iret
in
xlat
int
fsubr
ja
shr
hlt
xlat
pop
test
jp
ret
jge
pushf
dec
dec
ss
push
shr
dec
std
mov
out
inc
mov
xor
xchg
ret
push
cmc
fcmove
nop
push
stos
jp
inc
adc
outs
jo
jmp
inc
pop
cdq
sbb
sbb
out
jo
inc
jb
into
adc
add
ret
loop
ds
repz
mov
add
cwde
fnsave
pop
fdivr
jo
and
movs
or
dec
push
mov
out
cmp
sub
cwde
rcr
xchg
xor
mov
xlat
fmul
(bad)
mov
shl
sbb
and
adc
jne
xchg
hlt
imul
movs
sub
sahf
(bad)
sub
xor
sbb
fwait
cmps
sub
inc
adc
shr
cmps
and
mov
sbb
jo
pop
stos
dec
ins
enter
addr16
out
pop
xor
pop
push
int
(bad)
test
sti
add
mov
xchg
add
imul
test
(bad)
pop
and
aam
and
stc
fs
mov
mov
lds
cwde
fnstcw
imul
loop
mov
lahf
push
push
cmp
aam
dec
ret
jbe
arpl
inc
retf
pushf
mov
push
int3
inc
pop
movs
jmp
cmp
movs
push
jecxz
std
stos
das
sub
cmp
imul
(bad)
inc
xchg
movs
add
loope
push
xchg
cmp
mov
push
stos
stos
xor
dec
cmp
mov
scas
(bad)
iret
into
rcl
jge
xchg
int
inc
mov
mov
xor
sub
test
xchg
jmp
aas
sar
popf
pop
xor
mov
nop
jns
xchg
pop
sub
mov
mov
jl
jge
stc
xchg
(bad)
fwait
ja
push
inc
jmp
cmp
jge
mov
and
gs
jmp
jmp
ds
jmp
xor
xlat
pop
dec
test
in
push
jns
mov
cmp
add
dec
ins
ins
sbb
mov
(bad)
ins
xchg
lahf
mov
xchg
mov
xchg
fisttp
or
jbe
icebp
ds
loopne
mov
pop
rcl
test
xchg
int3
fcmovu
lahf
test
inc
mov
jp
inc
jno
int3
ret
jmp
sbb
popf
(bad)
pop
jmp
into
dec
pop
(bad)
xor
fidiv
out
mov
jbe
push
mov
in
stos
(bad)
mov
popa
xor
popf
cmps
aad
inc
fwait
repnz
jl
xlat
(bad)
xchg
outs
test
mov
sbb
pusha
nop
retf
add
adc
loop
adc
shr
add
nop
dec
fwait
(bad)
push
mov
scas
push
inc
adc
call
sahf
jp
jmp
cmp
sub
int3
and
mov
or
xor
mov
sub
outs
jns
adc
sub
xor
fdivrp
pop
stc
sub
jl
aad
xchg
push
sbb
jmp
into
out
dec
aas
leave
sub
stos
push
xchg
ins
and
xchg
fild
xchg
mov
adc
inc
cmp
fwait
sbb
sbb
xchg
add
pop
imul
push
cmp
xchg
lods
pop
jno
and
xchg
mov
mov
push
into
and
xchg
mov
mov
add
arpl
dec
fild
dec
cmp
jb
fdiv
xor
in
(bad)
push
stos
pop
into
sub
repnz
fdiv
and
adc
sub
jnp
mov
push
jmp
(bad)
push
inc
adc
sbb
xor
aas
sbb
popf
push
rcr
mov
mov
dec
push
popf
jmp
aaa
xchg
sahf
push
js
data16
jns
inc
in
sbb
aas
rcl
retf
(bad)
std
sbb
js
cwde
hlt
jle
inc
pop
xor
or
xor
add
dec
ds
xchg
stc
mov
fcom
icebp
fstp
repz
dec
int
push
ror
mov
pop
mov
dec
fst
in
int3
popf
(bad)
jmp
mov
push
cmp
cli
fiadd
imul
pop
mov
adc
push
add
pushf
mov
or
cmp
mov
add
mov
pop
mov
mov
push
in
mov
dec
xchg
popa
imul
xchg
pop
test
pop
mov
(bad)
data16
repnz
pop
or
push
sar
mov
int3
mov
cmc
mov
xchg
dec
push
(bad)
inc
(bad)
and
popf
mov
cmps
xlat
cmp
xor
push
xor
or
repnz
jo
push
call
adc
sub
jle
sbb
pop
cmp
bound
pop
cmp
mov
mov
sbb
in
bswap
pop
push
clc
ins
adc
jp
push
dec
div
movs
sub
pop
sub
lds
lahf
xchg
push
aaa
not
test
stc
dec
xor
dec
pop
jae
in
inc
jp
sub
mov
xchg
pop
cmp
retf
cmp
jbe
mov
loope
mov
pop
mov
add
fwait
inc
cmp
mov
xor
xor
icebp
nop
jno
jo
stc
push
dec
inc
in
stc
mov
pop
mov
out
test
stc
imul
retf
mov
sbb
mov
stos
call
fsubr
xchg
mov
ins
mov
jbe
cmp
ins
mov
sub
aas
jle
js
push
push
jmp
pop
gs
pop
jle
cdq
je
cmp
sub
mov
or
lods
xlat
lods
test
jno
sysenter
push
ror
mov
stc
add
push
cdq
fcom
rol
mov
sbb
stos
imul
push
lods
sub
ins
jnp
iret
das
adc
call
inc
lods
sbb
lea
aas
mov
adc
mov
fnstsw
js
jno
sbb
les
clc
inc
jbe
bnd
in
add
call
ins
mov
dec
sar
sub
ror
das
inc
movs
repnz
std
dec
add
push
add
leave
(bad)
adc
ds
sbb
sub
and
mov
sahf
dec
or
(bad)
(bad)
ficom
loop
pop
jp
mov
mov
pop
add
jmp
xor
lods
imul
inc
ret
or
je
outs
add
fistp
ret
jmp
lahf
push
xchg
(bad)
test
and
push
stc
inc
adc
cmp
add
mov
ds
mov
sbb
sbb
push
leave
bound
lea
jmp
and
sahf
jo
sbb
addr16
mov
and
xlat
lds
ret
or
mov
jg
sbb
mov
add
dec
mov
js
xlat
xchg
lea
mov
retf
jne
popa
aas
jl
out
jle
mov
outs
lds
jmp
sub
test
adc
arpl
clc
xchg
jp
sub
jb
shl
in
lea
dec
nop
dec
mov
jge
int3
xchg
fimul
xchg
xor
lahf
pushf
(bad)
pop
cmps
xchg
mov
outs
xor
int
and
in
sub
inc
ss
mov
sub
push
xlat
in
and
(bad)
leave
push
pop
push
xor
rcl
test
loop
sub
adc
mov
xchg
sub
push
movs
jmp
or
jmp
xor
dec
lods
fwait
je
jb
pop
or
sub
ss
(bad)
xor
fsubr
inc
loopne
sub
rcl
icebp
ins
inc
mov
cmp
jb
pop
into
adc
mov
jg
sbb
in
cmp
jl
mov
into
stc
xchg
iret
lock
call
rcl
and
inc
fstp
loopne
jnp
ss
add
into
scas
mov
xor
pop
ins
xor
dec
addr16
add
lods
shr
bound
(bad)
cli
jb
popa
out
data16
or
int
xchg
popf
rcr
push
rcl
sbb
push
pop
cmp
fadd
xchg
jmp
xchg
adc
ja
adc
pop
js
mov
jmp
mov
(bad)
and
sub
sub
ret
jnp
adc
mov
pop
push
sahf
adc
mov
scas
imul
cli
or
adc
shl
(bad)
call
lods
(bad)
fiadd
movs
add
adc
xchg
inc
cmp
mov
sub
mov
mov
pop
xor
xchg
imul
mov
jno
(bad)
arpl
jnp
add
add
dec
xchg
sub
stos
frstor
stos
pusha
push
pop
dec
test
icebp
stos
aad
(bad)
shl
inc
(bad)
cmp
js
sbb
loopne
inc
pop
lahf
mov
dec
jecxz
shr
add
and
(bad)
and
jmp
inc
jecxz
xchg
shr
cli
jnp
shr
xor
mov
aas
mov
jnp
not
fisttp
cmp
sbb
push
jmp
mov
rcr
xchg
xchg
push
test
jmp
data16
push
inc
mov
and
sub
push
pusha
adc
imul
or
cmp
add
push
jno
push
adc
pop
cmps
popa
int3
jnp
fchs
lock
pop
je
sub
xchg
rcr
outs
sub
js
adc
mov
inc
shr
aaa
adc
mov
mov
or
push
mov
xchg
lods
shl
in
or
sbb
sub
mov
mov
ds
mov
pop
(bad)
adc
mov
out
xchg
or
mov
inc
popa
mov
jmp
aam
divps
jno
loopne
inc
mov
dec
out
mov
daa
or
xor
dec
cmp
int
(bad)
xor
dec
fcmovnu
mov
mov
and
pop
int3
ja
movs
fisub
xor
pop
daa
fwait
into
jne
and
mov
mov
mov
jno
mov
xor
ret
aaa
cwde
(bad)
sub
jge
xor
adc
(bad)
movnti
cli
fnstsw
(bad)
push
inc
test
sbb
jp
push
int3
jmp
dec
lahf
data16
xor
stos
fldenv
cs
push
xchg
push
push
loope
xchg
(bad)
mov
mov
pop
xor
cmps
jns
jns
shl
cmp
pop
mov
dec
or
and
mov
push
repz
dec
clc
cmp
aas
jbe
sub
jo
(bad)
loopne
xor
xchg
or
jle
lea
fild
dec
sub
out
fild
mov
sub
inc
sbb
test
jo
sub
xchg
fcomip
push
xlat
rol
outs
in
mov
mov
xchg
(bad)
out
add
pop
stos
push
push
add
in
gs
shr
jmp
mov
pop
push
sub
sar
mov
sub
sub
mov
add
pop
rol
mov
xor
test
xor
sbb
les
jle
out
jp
cmps
push
mov
and
cmp
(bad)
lods
jmp
ins
pop
mov
xchg
(bad)
cmp
retf
data16
pop
mov
push
add
repz
(bad)
fmulp
jnp
shr
idiv
loope
int3
or
xor
jecxz
sub
mov
xchg
jmp
pop
cmp
(bad)
(bad)
fdiv
push
mov
mov
xor
scas
popf
imul
scas
mov
mov
mov
sub
pop
and
push
sbb
xlat
adc
lock
icebp
scas
shl
add
sub
cmp
inc
mov
sub
adc
into
outs
cdq
push
aas
ja
loopne
stos
mov
mov
(bad)
aam
or
jbe
push
inc
pop
fisttp
adc
movs
int
inc
xor
mov
cmp
pop
lahf
imul
jbe
int
call
push
dec
imul
adc
mov
les
lods
adc
and
adc
inc
shl
push
stos
inc
mov
es
xor
inc
jge
jnp
pop
or
jmp
rcr
je
ins
add
clc
push
or
rol
sub
inc
xor
push
fs
pop
mov
stos
mov
inc
dec
jae
test
ficomp
push
sub
cmp
sbb
push
fcmovb
outs
pop
jno
bnd
sub
xchg
in
adc
sbb
dec
(bad)
icebp
add
(bad)
sub
daa
push
test
arpl
add
and
or
xbegin
out
cmps
gs
and
rol
enter
fidivr
pop
add
ret
lahf
je
jmp
dec
test
xchg
push
mov
sub
jecxz
add
pop
repz
shr
adc
ror
mov
push
jae
dec
xchg
loope
in
pop
xchg
inc
cmp
aam
jmp
mov
scas
js
dec
es
into
sbb
fdivr
mov
repz
loop
retf
nop
pop
das
sub
(bad)
xchg
mov
pushf
xor
mov
cmp
add
inc
nop
into
lea
int
fs
sbb
mov
inc
mov
repz
or
pop
out
(bad)
repz
mov
pop
mov
jae
in
out
inc
xchg
xchg
icebp
in
mov
push
test
or
dec
sysenter
cmp
mov
or
cld
jg
and
mov
loopne
jnp
pusha
(bad)
fdiv
or
and
xor
ret
jg
jnp
mov
dec
cdq
sahf
mov
sbb
fisttp
ja
mov
(bad)
sub
pop
mov
cli
push
and
nop
ins
loopne
rol
call
aam
pop
ror
imul
xor
in
adc
add
sub
retf
cmp
jge
sbb
cwde
pop
cmps
mov
in
lods
xor
in
test
imul
push
xchg
cwde
out
dec
adc
pop
and
cmps
lahf
test
pusha
fist
pusha
and
or
addr16
and
ins
repz
ror
jle
mov
inc
lahf
ret
push
xor
js
pop
fs
sbb
or
fidivr
or
test
out
cmp
mov
ss
not
in
push
inc
sbb
xlat
jmp
inc
sar
ret
rcr
mov
ds
add
xor
sub
cmp
adc
neg
push
fst
push
loopne
out
jne
fnstenv
pop
push
sub
jnp
add
call
gs
retf
mov
mov
xor
jmp
and
mov
fild
push
dec
out
or
mov
leave
xchg
mov
clc
and
mov
sbb
mov
pop
cs
out
mov
push
mov
(bad)
jle
sbb
shl
xchg
or
aas
pop
shl
adc
iret
sahf
mov
inc
daa
pop
sbb
jecxz
dec
inc
iret
mov
cmps
adc
add
mov
and
mov
jmp
mov
sbb
mov
retf
mov
or
cwde
or
cmc
(bad)
jge
fsubr
mov
xor
pop
or
jnp
or
fisttp
std
xor
and
mov
and
call
pop
sub
jmp
mov
shr
add
cmp
add
adc
xor
ja
jnp
or
iret
in
retf
lea
repnz
fsub
mov
inc
out
push
push
sub
retf
xor
cmc
bound
cmp
jmp
(bad)
xchg
js
sub
sbb
and
shl
push
fisub
icebp
xor
add
adc
sahf
pop
mov
inc
fmul
fldcw
call
add
jnp
dec
push
push
shl
dec
arpl
idiv
stos
cmps
lods
mov
mov
(bad)
cmp
mov
jge
(bad)
pop
mov
adc
into
push
and
pop
add
mov
sbb
das
stc
(bad)
mov
jmp
dec
or
add
push
enter
das
sbb
lds
clc
adc
aam
push
xchg
dec
and
movs
cmc
push
cmp
push
dec
fwait
retf
adc
adc
cmps
lods
mov
or
stos
or
cmc
jecxz
mov
mov
inc
mov
jne
sbb
stos
jno
dec
mov
add
push
aad
(bad)
dec
test
sahf
or
sar
(bad)
es
push
fistp
xor
shr
xor
mov
mov
mov
shr
dec
aas
xchg
cmp
adc
aam
and
push
test
popa
add
(bad)
mov
jmp
fnstenv
mul
mov
jno
(bad)
rol
test
sbb
pop
cli
mov
arpl
pop
mov
jge
test
outs
out
outs
mov
data16
sub
jbe
mov
push
push
hlt
cld
call
add
stc
xor
out
add
sbb
loop
pop
out
push
add
shr
xchg
sub
outs
pop
cs
loope
mov
mov
jmp
loope
dec
cmps
inc
xchg
lods
pop
arpl
ins
sub
push
mov
lods
shl
ins
iret
add
test
mov
cmc
aas
ror
dec
cld
cdq
mov
mov
lahf
xchg
mov
cmp
or
and
(bad)
out
ins
mov
leave
push
popf
push
pop
mov
xchg
inc
dec
in
xlat
pop
in
cmp
cmc
std
out
mov
call
stos
xchg
mov
jp
sub
out
lock
das
(bad)
repz
js
xor
lds
pop
retf
or
pop
pop
aam
fxch
(bad)
mov
dec
adc
jecxz
daa
sbb
test
(bad)
sub
cwde
and
pop
lods
xor
pop
mov
jmpw
xor
push
out
xchg
or
add
pop
fsubr
addr16
xchg
adc
std
int
(bad)
std
rcr
fwait
mov
sti
push
stc
sbb
mov
cli
data16
outs
outs
jmp
mov
jge
dec
das
pop
and
movs
pmullw
pop
pop
ins
mov
and
mul
call
aad
fnsave
cs
jne
add
and
aaa
leave
fmul
inc
push
mov
cmps
sub
cwde
mov
xchg
retf
pop
sbb
into
sbb
icebp
xchg
sbb
fadd
and
lds
fsubrp
loop
sub
jns
fisttp
test
and
in
add
data16
add
mov
jmp
sub
xchg
imul
pop
inc
and
mov
loop
test
sub
jno
cli
mov
dec
fwait
daa
scas
bound
jnp
add
(bad)
xchg
jmp
pushf
into
xor
dec
enter
psubd
xchg
int
aam
movs
cdq
xlat
loope
cmps
fild
popa
shl
add
dec
rcl
mov
push
push
pop
inc
popf
push
mov
outs
(bad)
nop
icebp
(bad)
xor
cli
push
pop
jecxz
or
cmp
adc
in
add
icebp
fsubp
sub
ror
fwait
loope
push
or
mov
std
add
mov
cs
cwde
cmp
enter
ja
shr
(bad)
(bad)
push
push
dec
sbb
mov
dec
mov
out
add
mov
push
add
movs
dec
push
rcl
xchg
sub
out
ret
arpl
mov
paddb
sbb
sub
sub
jae
cmove
(bad)
jmp
test
mov
xchg
ret
bound
sar
push
repz
sbb
xor
xor
push
mov
cld
test
fldcw
mov
not
mov
inc
xor
daa
adc
push
xchg
pop
or
enter
stos
inc
jmp
adc
call
int
xchg
loope
mov
sub
cs
jg
fadd
push
sbb
push
retf
adc
mov
in
iret
sahf
xor
xchg
and
xchg
lock
dec
les
out
pop
jno
sbb
add
repz
xchg
pop
rcr
cmp
lods
inc
sahf
cmp
sbb
aam
cmps
mov
sub
shl
cmp
loop
cmp
neg
cld
test
cmp
and
dec
das
dec
ja
imul
add
movs
fisubr
outs
shl
mov
jp
dec
iret
test
lahf
ret
neg
push
push
xor
mov
cld
stos
push
test
cmp
or
not
jmp
aad
xchg
call
mov
mov
dec
mov
enter
xor
repnz
or
mov
(bad)
aam
xor
xchg
cwde
jo
jmp
pop
dec
xchg
or
cmp
mov
jno
mov
push
std
inc
and
pusha
cld
dec
push
outs
arpl
loope
xor
push
mov
xchg
icebp
repnz
mov
inc
sar
fldenv
mov
cmp
mov
sub
lea
jge
fbld
and
into
daa
rol
push
mov
inc
das
inc
loope
les
outs
adc
pop
or
out
in
out
sub
and
push
mov
shl
es
fidiv
push
and
ins
retf
mov
push
retf
sbb
xchg
repz
add
imul
fadd
out
daa
cmp
xor
lods
cmp
rcr
jno
clc
ins
mov
outs
popa
mov
repnz
mov
rol
push
xor
add
mov
test
pop
sti
in
ds
pop
mov
pusha
push
sbb
sbb
es
jb
mov
adc
cwde
pusha
in
js
sbb
fld
pop
mov
(bad)
push
xchg
mov
fnstenv
sub
aaa
(bad)
jp
lock
cmp
mov
jmp
cmp
retf
mov
(bad)
sbb
ja
cmps
shl
call
int3
pop
jno
mov
cmc
sub
sbb
or
sub
in
cmps
ss
jg
(bad)
fisttp
enter
pop
mov
cs
dec
mov
retf
ds
inc
outs
mov
fcom
pusha
scas
jg
jp
imul
in
jg
out
push
mov
jns
mov
sub
faddp
pop
cs
pop
adc
pop
(bad)
push
test
pop
lock
das
sbb
sub
addr16
mov
mov
outs
pushf
xor
icebp
inc
out
or
push
xlat
ja
pop
mov
dec
xchg
les
add
stos
dec
dec
xchg
retf
mov
jb
mov
inc
ds
xchg
(bad)
in
test
lock
push
jne
test
aam
rcl
ror
jb
loopne
aad
add
jbe
out
adc
rcr
aas
mov
retf
jge
fldcw
pusha
fidivr
retf
sub
lahf
stc
dec
retf
pop
aad
jo
in
call
mov
movs
dec
mov
movs
push
cmp
or
pop
or
xchg
call
or
fbld
out
iret
mov
sar
xchg
adc
daa
adc
out
mov
arpl
sbb
stc
cmps
std
das
dec
add
inc
movlhps
jae
pop
jge
outs
cwde
pop
ins
mov
xchg
and
daa
sub
cwde
ret
inc
ret
out
add
adc
cmp
cli
xchg
dec
cmpxchg
dec
pop
or
stc
fbld
sbb
adc
int3
lods
cmp
ret
push
(bad)
punpckhbw
(bad)
data16
movntq
out
push
std
cmc
test
sbb
xchg
fs
pop
push
jmp
jae
lods
adc
inc
pop
loopne
push
xor
dec
loope
or
jge
push
push
xlat
test
mov
sub
push
es
add
and
pop
mov
test
jae
mov
dec
test
cmps
mov
hlt
sub
cmp
dec
jmp
rol
inc
test
in
xor
leave
dec
jmp
xchg
xor
arpl
nop
into
(bad)
dec
push
dec
jb
cmp
movs
aaa
add
test
jle
ret
pop
out
jae
sub
cmp
(bad)
sub
mov
xchg
dec
mov
sub
rol
outs
jmp
fistp
and
ds
mov
imul
cs
fs
gs
mov
prefetch
cmps
xor
push
imul
add
outs
jne
iret
push
cmp
jb
or
mov
dec
clc
popa
and
sub
dec
mov
pop
adc
jae
push
sub
sub
aas
mov
iret
arpl
xor
pop
mov
stos
leave
adc
lods
cmp
mov
cmp
pop
jp
and
dec
dec
mov
test
call
data16
mov
loope
test
int
loop
popf
outs
mov
mov
into
push
add
lods
inc
outs
mov
dec
and
scas
mov
cmp
adc
sahf
repnz
xchg
sub
add
and
mov
in
pop
jno
sub
push
or
mov
sbb
addr16
jnp
xor
out
sbb
jae
cmp
pop
lods
jnp
or
mov
adc
adc
cmp
cdq
lods
pop
loope
addr16
mov
jle
mov
sbb
cmc
stc
retf
jmp
mov
mov
add
(bad)
xlat
jb
and
ins
out
push
jg
je
mov
mov
clc
int3
push
hlt
push
and
fwait
aaa
in
sbb
fsubr
lds
sbb
pusha
cmps
hlt
out
pop
mov
mov
mov
jmp
cmovg
and
and
test
jno
pop
lahf
lock
stos
push
jbe
xor
xor
sub
and
lock
xchg
fnsave
sub
dec
xchg
(bad)
lods
addr16
lds
xchg
jmp
test
sbb
adc
outs
sbb
and
sub
ss
inc
jnp
lea
push
lods
mul
(bad)
jecxz
mov
test
dec
cmps
mov
fucomi
mov
mov
cmp
ins
in
pushf
je
in
btr
dec
adc
fild
inc
test
ja
push
test
into
ret
ret
jmp
sub
sbb
sti
hlt
fwait
dec
pop
fidivr
push
or
mov
neg
mov
ja
and
ja
xchg
push
mov
adc
mov
add
jmp
cmp
and
mov
and
inc
sbb
fcomp
gs
std
xor
loopne
sub
in
push
clc
push
in
and
fild
sbb
xchg
mov
sahf
mov
xchg
std
outs
sti
dec
mov
cmc
fadd
leave
dec
sub
inc
cmp
push
adc
ins
cs
dec
cmc
dec
inc
mov
and
add
pop
or
es
sub
jae
adc
pushf
dec
es
and
mov
and
outs
movs
rol
add
dec
and
sbb
push
adc
dec
jge
outs
out
mov
push
imul
test
sbb
adc
sbb
cmp
adc
popa
xor
inc
jb
in
dec
iret
outs
aam
fwait
jp
lds
push
rcr
sub
aas
jge
push
sub
sbb
adc
xchg
sub
and
xor
dec
sbb
or
aam
not
mov
setbe
mov
sbb
cmc
cdq
dec
pushf
dec
xor
loop
loopne
push
add
fst
xchg
jae
or
arpl
jmp
pusha
add
adc
and
dec
(bad)
cmp
sti
es
mov
fisttp
lock
sbb
fnstsw
push
mov
leave
or
mov
lods
aad
stc
mov
(bad)
loopne
xchg
sbb
lods
mov
or
jmp
cs
(bad)
loopne
arpl
pushf
scas
sub
neg
mov
lock
sbb
in
fwait
in
data16
or
cmp
ins
add
pop
int
jno
lds
xchg
mov
jb
fbld
sbb
mov
or
in
outs
int
sub
(bad)
push
iret
pushf
ror
lahf
daa
sub
mov
retf
push
aas
or
lahf
xchg
ficomp
dec
push
(bad)
call
bound
pushf
jns
dec
aaa
pop
xor
and
frstor
adc
sub
push
jo
xchg
or
adc
fcmovbe
sub
adc
and
ja
pop
(bad)
gs
adc
or
jle
movs
mov
sub
or
nop
fdivrp
popf
mov
popf
mov
jmp
cmp
jmp
dec
test
out
test
into
lods
es
test
cmp
mov
out
cdq
stc
sbb
ja
std
xchg
mov
je
mov
jl
gs
or
je
add
fistp
cmp
jns
neg
les
or
cmps
dec
hlt
jo
cmp
es
pop
cmp
in
movs
cdq
or
ror
dec
push
pop
push
push
jge
cli
sub
call
js
aaa
xchg
xchg
out
and
sub
call
jno
dec
daa
pop
sub
test
data16
outs
push
mov
and
out
cmp
out
call
push
in
pushf
or
mov
mov
xchg
in
inc
cmps
adc
int
clc
and
cs
mov
xor
mov
loopne
xchg
pusha
sub
mov
cmp
test
fcomp
mov
faddp
or
rol
scas
scas
mov
mov
stc
mov
jl
rcl
das
add
cli
sub
mov
or
aaa
xchg
cmp
sub
mov
jecxz
int3
lahf
cmp
repnz
cmp
retf
movs
pusha
fidivr
sub
xchg
pop
push
pop
ins
push
imul
dec
ins
sti
dec
mul
test
ret
inc
adc
test
aam
push
adc
rcr
sub
rcr
outs
sbb
into
add
inc
and
mov
adc
inc
mov
loope
js
mov
out
outs
test
test
jnp
fadd
ins
(bad)
(bad)
test
enter
push
or
inc
out
push
or
xchg
out
popf
int3
jae
adc
data16
dec
mov
lahf
jle
mov
ret
test
and
ja
ret
out
or
push
and
jecxz
jmp
ror
movs
dec
and
mov
stc
sub
dec
sub
add
push
ja
dec
test
lock
jmp
xchg
dec
es
loop
stc
cmps
test
or
jns
jp
push
pop
jmp
push
clc
aaa
xchg
xchg
pusha
dec
push
retf
gs
inc
mov
sbb
or
and
xor
test
sub
adc
fidiv
sbb
imul
mov
nop
push
pop
daa
ret
ins
or
dec
mov
dec
sub
jecxz
in
std
jge
and
cld
bound
xor
xor
(bad)
mov
or
fnstenv
test
cmp
inc
mov
mov
sub
and
mov
sub
sbb
adc
sar
movs
fistp
mov
bound
jecxz
stos
daa
and
inc
scas
test
and
adc
pop
ret
dec
lods
test
push
mov
ret
mov
dec
jl
scas
cmc
pop
inc
jmp
cwde
fsub
push
mov
retf
loop
xor
mov
(bad)
xchg
loope
cmp
cmp
xor
pop
adc
test
sub
std
shr
adc
push
arpl
mov
cmp
mov
js
cmp
cdq
inc
je
xchg
sti
scas
daa
mov
push
cli
cwde
das
push
xchg
xor
repz
mov
adc
xor
push
retf
or
out
mov
sbb
mov
and
ret
sti
pushf
adc
xor
in
pop
shl
cld
jo
les
es
jns
mov
push
adc
mov
jae
and
sbb
adc
mov
out
adc
js
or
inc
rol
shr
inc
pushf
xor
cld
adc
xlat
xor
popa
sbb
(bad)
in
push
adc
ror
xchg
xlat
retf
in
jle
hlt
call
mov
cdq
pop
or
shl
call
dec
(bad)
loope
(bad)
out
addr16
xchg
out
jp
ret
push
js
mov
fst
scas
and
clc
int
mov
push
push
mov
retf
cmp
fbstp
in
mov
mov
pop
mov
adc
repnz
aaa
imul
jae
xchg
ins
dec
movs
mov
mov
add
dec
push
les
jo
jnp
hlt
or
int
cmp
aaa
push
cdq
rcr
xchg
jp
push
stos
or
xchg
pop
int
gs
into
jle
popa
loop
imul
daa
shl
aad
fucom
rcr
xor
hlt
pop
rcl
cmp
jbe
loopne
jne
movs
sbb
mov
cmc
std
lods
std
rol
dec
xor
js
mov
ror
aas
cmc
std
scas
cmp
rcl
push
inc
test
mov
(bad)
hlt
fdiv
pushf
mov
ficomp
sub
cmp
mov
ss
adc
jnp
push
xor
(bad)
adc
add
test
hlt
cmp
jns
mov
jb
inc
stc
and
sahf
add
sub
rcl
out
push
test
mov
dec
xchg
add
stos
ret
inc
(bad)
stos
and
xchg
int3
movs
outs
in
push
out
and
mov
pop
ret
cmp
stc
or
icebp
push
fs
xor
xchg
adc
jnp
icebp
outs
pop
inc
rcl
bswap
lods
fdivr
add
mov
outs
lahf
sbb
mov
std
jnp
jp
cmp
ds
fs
or
outs
jbe
scas
or
cmp
rcr
push
test
mul
es
repnz
call
mov
jae
push
dec
push
fdivp
sbb
cmp
rcl
mov
or
xchg
shl
mov
dec
or
sbb
ins
mov
jle
jns
and
les
jns
xor
test
mov
and
mov
mov
jne
loope
ja
mov
int
mov
jmp
cmp
lods
push
pop
(bad)
jo
mov
out
arpl
xor
dec
push
fwait
mov
(bad)
adc
js
les
les
mov
lds
aas
and
and
lds
in
pusha
ret
mov
out
retf
(bad)
add
mov
cs
je
push
fild
bound
in
or
repnz
cmc
xor
jl
(bad)
call
std
mov
fisttp
outs
(bad)
pop
push
and
shl
push
mov
ins
cli
jno
sbb
mov
sub
icebp
div
dec
jno
in
sub
pop
rcl
jbe
fisttp
push
inc
and
mov
cld
ret
sbb
outs
and
push
pop
sbb
mov
cmc
jge
xor
inc
inc
jp
stc
and
mov
push
or
jmp
in
adc
jecxz
adc
inc
in
push
sahf
xchg
mov
popf
cdq
in
push
clc
and
sbb
iret
cwde
adc
call
ins
mov
into
sbb
xor
scas
push
mov
shl
stos
repz
aaa
int
and
scas
add
daa
movs
stc
cdq
jle
call
ret
fbstp
adc
push
push
push
pusha
out
jmp
jb
aad
jge
(bad)
mov
or
adc
push
out
fs
push
movs
dec
jae
mul
in
mov
jnp
jle
sub
loope
inc
pop
mov
repnz
call
out
jp
int3
fsub
nop
jb
or
cmp
mov
es
push
mov
fldenv
cs
dec
jns
pop
sub
mov
in
adc
and
mov
pop
movs
jmp
cmp
(bad)
jecxz
dec
lods
or
mov
sub
push
stos
hlt
arpl
mov
cmp
cmp
fadd
clc
fbld
mov
or
shr
xor
imul
repnz
not
mov
sti
inc
add
jle
adc
jns
iret
in
aad
xor
in
adc
adc
adc
mov
ret
push
add
jns
dec
mov
es
movs
jbe
arpl
aaa
and
push
push
add
mov
aaa
or
cmp
jmp
jne
les
sbb
cmp
dec
lods
scas
lahf
fisub
retf
cmp
push
imul
pusha
dec
mov
jp
sub
ja
lock
jg
jl
shl
cmp
loope
cmps
cmp
sub
mov
xlat
cmp
loopne
pop
mov
sub
cwde
int3
adc
scas
xor
mov
cs
cmps
outs
into
bound
hlt
or
inc
ror
fcomp
jo
rcr
add
movs
fadd
sbb
in
mov
and
xchg
pop
mov
(bad)
les
nop
js
sbb
div
cld
xor
xor
in
and
out
pop
pop
add
and
ret
inc
sbb
ds
movs
push
loop
call
mov
and
popa
mov
lods
add
mov
jae
mov
and
and
repnz
and
mov
jle
dec
push
(bad)
xchg
rcr
cmp
lods
xchg
xchg
xor
push
mov
cwde
in
inc
cmc
loop
add
shl
xor
xchg
sub
jg
ret
and
jmp
stos
jmp
out
mov
inc
jnp
jecxz
je
cmp
xor
or
movs
sbb
aad
mov
add
or
mov
pop
adc
data16
ins
cld
out
int
lods
mov
cmp
push
je
or
pushf
and
movs
movs
movs
pop
push
sbb
jae
cmc
and
cli
repnz
or
enter
or
ja
inc
sbb
mov
shr
or
jnp
sub
xor
inc
push
or
pop
mov
xchg
xlat
nop
inc
jl
mov
mov
ficom
scas
(bad)
pop
dec
mov
xchg
dec
test
out
add
add
pop
jl
int
cmp
jne
addr16
aad
and
cmp
jmp
(bad)
loopne
sub
sbb
mov
imul
retf
outs
mov
jge
jmp
sbb
call
ror
imul
inc
dec
mov
or
lods
adc
stos
popf
mov
cmp
or
jp
out
sar
rol
pcmpgtw
gs
retf
cmp
scas
popf
mov
data16
push
ins
or
pop
dec
addr16
jae
jno
sbb
add
push
mul
addr16
int
mov
and
cmp
dec
js
mov
or
fstp
into
mov
xchg
es
mov
jmp
jmp
xchg
sub
mov
add
icebp
or
inc
in
not
inc
in
sbb
int3
lods
mov
sbb
mov
test
or
adc
scas
mov
ret
retf
push
fwait
mov
mov
hlt
mov
mov
jne
and
jg
fcom
add
sahf
rcl
and
and
jno
push
sub
push
push
mov
loopne
pop
cmp
loope
xor
jmp
stos
iret
add
push
(bad)
leave
xchg
sti
push
test
jmp
push
xor
or
pop
mov
fmul
sub
dec
mov
push
hlt
fsub
mov
scas
push
inc
fld
repnz
aad
sub
imul
mov
xor
and
repnz
mov
int3
jmp
push
mov
and
inc
xor
push
loop
cmp
aaa
and
adc
sub
mov
sub
pop
mov
push
and
push
aas
outs
push
push
test
xor
test
call
adc
sbb
call
or
nop
imul
push
inc
push
cmp
sbb
dec
cmove
or
xchg
addr16
mov
adc
arpl
sub
rcl
pop
enter
sti
hlt
lock
mov
push
mov
jle
jnp
sub
outs
push
out
inc
call
cmp
dec
adc
inc
push
aas
addr16
mov
movs
and
and
cld
out
mov
es
fwait
(bad)
mov
inc
inc
retf
dec
mov
push
pusha
adc
(bad)
push
xchg
retf
jl
push
ret
adc
sti
cmp
movs
pmullw
sahf
fstp
aas
sbb
int
clc
adc
jge
pusha
adc
cwde
fdiv
push
idiv
inc
inc
fisttp
mov
aaa
add
mov
jne
rcr
sti
push
pop
dec
pop
mov
jp
lahf
call
mov
(bad)
dec
aas
push
or
hlt
fstp
mov
gs
pushf
xor
cmp
sub
cmp
test
lds
jmp
add
stc
xchg
adc
in
(bad)
pop
cmc
sbb
lea
jge
and
jns
sbb
pop
nop
cmps
sahf
pop
repz
mov
ins
xor
in
clc
or
jg
pop
cmp
cmps
push
sub
adc
xchg
(bad)
movs
inc
mov
xchg
nop
js
dec
dec
sub
pop
outs
out
test
repnz
and
lock
push
adc
fwait
mov
xchg
nop
push
mov
mov
cmps
add
pop
(bad)
dec
in
jnp
add
out
cmps
(bad)
push
or
mov
pushf
dec
repnz
inc
jecxz
xor
adc
inc
xchg
in
push
xchg
lahf
lods
repz
ja
push
jmp
cmp
je
frstor
cli
add
push
inc
add
inc
xchg
mov
inc
inc
mov
out
add
or
sub
push
xchg
lods
xchg
jp
push
adc
not
in
in
dec
mov
or
xor
mov
je
imul
sub
frstor
(bad)
mov
aas
mov
rol
inc
mov
dec
test
cmp
mov
adc
mov
mov
sahf
aaa
(bad)
xor
push
push
or
pop
in
pop
ss
xor
mov
jnp
jno
adc
pop
iret
popf
xor
shr
aad
xchg
sub
mov
add
jl
(bad)
iret
cdq
cmp
jo
dec
les
mov
arpl
call
sub
sbb
lods
push
clc
push
das
cmp
cmps
mov
mov
xchg
imul
(bad)
rcr
loope
dec
dec
retf
dec
jmp
mov
cmp
sbb
fisttp
in
xor
push
repnz
mov
adc
pop
sub
adc
(bad)
cdq
aaa
or
pop
(bad)
cld
dec
icebp
add
push
sub
sub
sbb
mov
vpcmpgtw
sbb
int
push
lods
sub
adc
and
pop
fadd
fcom
jb
mov
cs
xor
into
sbb
cld
dec
push
dec
or
fcmove
jl
add
sbb
ins
fidivr
mov
gs
fucompp
cmp
cmc
in
int3
adc
mov
inc
adc
push
data16
repz
push
hlt
sbb
sub
repz
out
imul
and
mov
arpl
pop
out
jno
xchg
rcr
adc
xchg
jns
repnz
push
mov
inc
cs
movs
and
mov
mov
test
repnz
call
jnp
cmp
cld
xor
not
mov
push
or
or
xor
popa
sub
(bad)
jg
jae
mov
xlat
cmp
sbb
adc
mov
(bad)
clc
dec
aad
and
into
scas
in
sbb
inc
cmps
pop
daa
mov
fwait
test
pusha
out
jecxz
data16
scas
add
fwait
outs
xor
or
nop
in
jecxz
cmp
and
ret
mov
sbb
jp
dec
jp
nop
cmp
loope
adc
jl
aad
add
mov
inc
inc
sahf
cmc
jnp
pop
pusha
jmp
lods
mov
or
sub
jnp
ins
sar
add
in
ins
enter
(bad)
cdq
xchg
cmp
cli
jae
push
sbb
dec
imul
jmp
pop
gs
(bad)
call
cmp
xchg
inc
and
xor
sbb
sbb
outs
and
retf
dec
enter
xor
and
mov
sar
push
mov
cmps
aam
das
in
les
cmps
and
pop
push
and
and
adc
lds
jo
push
in
icebp
ja
(bad)
jae
and
loop
out
mov
movs
adc
xor
mov
movq
arpl
sti
xchg
std
push
retf
and
nop
sub
push
sub
xor
test
inc
in
pop
push
nop
pop
or
sti
inc
jle
bound
stc
inc
jmp
xor
test
mov
xor
ja
sub
xchg
or
jnp
sub
sar
sub
stos
ror
mov
inc
jp
sub
ja
add
stc
pop
xor
loop
dec
cmp
pop
mov
lock
jp
aaa
jl
imul
ds
sbb
into
aam
dec
push
or
jae
mov
add
scas
jecxz
scas
push
jnp
cmps
or
pop
mov
cmp
sbb
sar
ret
inc
add
xchg
jmp
xchg
sbb
js
nop
das
push
or
lock
inc
hlt
jecxz
xchg
cmps
inc
cmp
pop
xor
cmp
mov
nop
aas
lock
fidivr
fs
hlt
js
mov
dec
jae
fadd
out
add
jge
mov
or
retf
in
jno
outs
lahf
hlt
sti
sub
inc
ins
scas
xor
adc
in
sbb
mov
(bad)
sahf
test
out
mov
arpl
jno
and
or
xchg
pushf
cmp
adc
xor
scas
sbb
xor
push
cdq
sahf
outs
cdq
add
cmp
adc
into
lds
retf
(bad)
not
in
pop
push
ret
out
and
(bad)
sub
add
xchg
push
fnstenv
in
push
in
inc
aas
cmp
mov
loop
xor
or
aad
test
and
popa
sbb
lea
fsubr
js
jne
or
mov
lods
add
sbb
sub
mov
sbb
icebp
adc
mov
adc
mov
je
push
dec
or
(bad)
jmp
mov
add
fcomp
retf
push
xchg
ror
scas
mov
adc
mov
jle
retf
cwde
pushf
repnz
sub
jbe
addr16
retf
jecxz
outs
mov
addr16
(bad)
mov
pusha
iret
xchg
push
imul
cmp
cli
in
push
neg
push
mov
mov
aas
cmp
(bad)
cld
dec
(bad)
lds
mov
aad
clc
iret
fld
ds
sub
test
dec
cmp
xchg
cmp
inc
retf
add
xor
pushf
mov
fnsave
xchg
push
sbb
dec
cmp
xor
shl
fild
cmp
push
mov
xor
mov
test
std
dec
stos
rcl
push
(bad)
js
jno
jbe
adc
mov
dec
mov
sub
sbb
inc
sub
pop
sbb
sti
push
fiadd
sbb
jne
jnp
and
xchg
xor
pop
inc
fild
call
pop
mov
inc
mov
ins
out
add
push
xchg
enter
push
rcl
fnstcw
bound
pop
repnz
mov
mov
pop
lods
pop
call
fs
stc
adc
int3
out
arpl
fbstp
jb
mov
sub
je
ja
rcl
xchg
xchg
mov
dec
inc
mov
and
mov
sub
sub
add
jmp
mov
cmp
lods
repnz
pop
pop
(bad)
popf
push
xor
ss
mov
push
jbe
mov
rol
sub
jg
push
mov
dec
add
xor
inc
repz
cmp
bound
push
shl
cdq
cmp
jg
xor
add
mov
or
and
xor
dec
enter
test
sti
xchg
in
ret
(bad)
cli
cmp
ins
gs
in
ins
test
dec
pop
sbb
sbb
mov
fdivp
bound
jecxz
push
loopne
and
cwde
xor
in
cdq
jnp
sub
jle
outs
jns
xchg
add
cdq
push
mov
mov
pop
jnp
retf
in
cli
stos
xor
dec
loope
call
aad
or
scas
dec
sbb
add
xchg
into
mov
mov
mov
bound
daa
js
leave
push
mov
jbe
pop
out
rcl
mov
mov
int
sub
cmp
movs
cmovle
dec
inc
jp
cli
xchg
test
adc
xor
int
imul
and
(bad)
mov
jns
ins
mov
sbb
sub
daa
jecxz
fist
(bad)
pushf
jle
push
loope
cmp
inc
mov
ins
movs
sub
lock
xchg
(bad)
in
adc
arpl
addr16
mov
push
loope
sahf
vcmpss
aas
fnstcw
or
jnp
in
jno
mov
xlat
jo
clc
cmp
mov
dec
pop
xchg
cmp
dec
repz
sub
jp
cmp
cmc
clc
jge
rcr
mov
sbb
pop
mov
push
inc
movs
pop
idiv
jmp
jnp
inc
inc
shl
mov
dec
dec
cmp
push
(bad)
(bad)
enter
in
in
jp
jge
jl
push
fs
push
sbb
aas
pop
inc
test
loopne
fadd
sbb
nop
jns
jge
pop
cmp
aam
in
imul
sbb
ins
repnz
pop
adc
rcl
cmp
lahf
rol
push
mov
mov
mov
sub
jb
out
movs
loope
sbb
out
leave
sub
or
ret
inc
addr16
mov
popa
sub
dec
mov
push
add
stos
lods
(bad)
daa
addr16
fs
pop
out
inc
push
stos
mov
nop
gs
add
push
adc
xchg
xor
das
sub
mov
repnz
push
add
sahf
push
jle
dec
int3
lock
adc
sbb
lods
cs
dec
nop
add
xor
xlat
loope
adc
mov
cmp
fdivr
jge
pop
scas
xchg
jb
pusha
(bad)
(bad)
ds
inc
aaa
in
jecxz
dec
sbb
pop
mov
outs
std
fisttp
mov
loopne
pusha
std
(bad)
mov
xor
xor
jge
pop
cmp
jb
jo
popf
mov
sbb
xchg
xchg
push
or
mov
in
fld
xchg
shr
sub
xchg
inc
mov
sbb
pmullw
in
push
pop
jmp
mov
sub
sbb
out
xor
gs
lahf
dec
inc
add
sbb
mov
js
pop
pop
add
ds
jae
jno
into
cdq
fisub
sbb
pop
sub
mov
(bad)
iret
into
dec
jg
into
ins
or
add
hlt
fisttp
int
stc
dec
ins
ficomp
movs
adc
dec
(bad)
cmp
pop
xchg
xchg
out
or
cs
and
push
dec
rcl
(bad)
hlt
test
jnp
cmps
mov
fisttp
pop
push
mov
xor
sar
sub
mov
mov
test
push
adc
das
retf
repz
mov
lea
pop
and
outs
mov
sahf
not
sbb
push
arpl
mov
repnz
cmp
fcom
fbstp
test
test
in
add
inc
add
repz
mov
sbb
imul
inc
jmp
jp
pushf
jl
jge
jmp
fisub
mov
ss
or
xchg
inc
cmp
(bad)
adc
shl
mov
xor
and
sbb
pop
je
out
sbb
mov
xchg
mov
ret
mov
scas
test
cmp
(bad)
in
lock
mov
nop
push
dec
mov
xchg
mov
jbe
jns
push
int3
(bad)
and
xchg
sub
mov
ficomp
jo
lods
outs
cmp
pop
push
call
xchg
adc
lds
imul
je
cmps
mov
mov
ds
jge
(bad)
push
out
cs
clc
das
cmc
leave
jg
mov
inc
pop
jecxz
jno
mov
ss
adc
test
jmp
popf
outs
jg
gs
sti
sub
cmp
cwde
in
fcmovnbe
mov
push
push
sbb
les
add
stc
fucomi
sub
cmp
dec
push
mov
imul
ret
dec
or
add
ss
(bad)
outs
lods
cmp
cmp
mov
fisttp
int
jl
mov
inc
push
xor
and
out
push
mov
mov
icebp
pop
pop
sbb
repz
push
dec
adc
enter
cmp
fwait
sbb
test
jb
adc
adc
add
ret
ins
pop
xor
fistp
push
das
mov
sahf
xchg
and
and
jb
cmps
iret
call
jbe
(bad)
in
fwait
push
pop
cmps
sar
(bad)
repnz
push
push
ins
(bad)
jge
mov
int
sub
(bad)
xor
xchg
movs
outs
xor
xor
(bad)
mov
je
xchg
es
inc
mov
not
adc
in
scas
sbb
leave
push
sub
push
dec
jg
cmp
stos
cli
jmp
ror
mov
sub
pop
xor
xchg
fnstsw
stos
hlt
out
popa
sbb
or
and
(bad)
jnp
xchg
aaa
icebp
leave
inc
sbb
imul
mov
clc
adc
stc
cmp
jnp
push
arpl
(bad)
js
dec
movs
das
sbb
push
and
sub
arpl
ins
mov
jle
sbb
or
mov
add
daa
fdiv
jnp
dec
add
and
sbb
mov
in
cmp
mov
cmp
mov
or
lea
push
mov
mov
jmp
pusha
pop
dec
adc
sbb
mov
in
push
sub
je
shl
iret
cmps
inc
cwde
jb
arpl
push
fdiv
inc
push
cmp
inc
mov
or
(bad)
or
fcomp
push
imul
sbb
fwait
das
dec
jg
(bad)
jb
sub
enter
out
pop
and
fmul
xor
pop
aam
repz
mov
les
pop
push
push
add
pop
scas
mov
jns
(bad)
test
shr
aaa
push
push
mov
sbb
shl
aaa
jp
das
cmps
add
and
mov
or
add
outs
jne
(bad)
(bad)
mov
dec
cmps
in
or
hlt
test
out
sbb
je
push
jo
pop
push
outs
cmps
mov
ss
add
xor
pop
cmp
mov
mov
mov
xor
scas
push
or
and
cmp
add
pushf
daa
bound
std
jmp
jb
imul
sub
ss
hlt
sar
cmps
repz
retf
inc
pop
or
sbb
inc
in
sbb
add
mov
leave
pop
(bad)
outs
icebp
out
adc
and
or
movs
adc
loop
rcl
pop
fld
sbb
ret
xor
and
test
xchg
dec
jmp
sbb
int3
cwde
push
jno
hlt
sbb
in
fld
sub
movs
sub
test
bound
mov
jmp
call
repz
mov
imul
sti
xchg
inc
imul
aas
push
inc
sbb
mov
cmp
jp
or
ret
or
pop
xchg
or
jmp
or
sbb
adc
js
cmp
stos
ins
mov
or
xchg
mov
test
lods
pop
mov
dec
xchg
shl
push
outs
ds
mov
jg
and
mov
cld
mov
xor
sub
xor
jne
das
sub
movs
jge
xor
imul
sub
in
jno
fcom
das
mov
fimul
ret
sbb
and
push
jecxz
aad
mov
mov
int
jnp
mov
mov
sbb
in
mov
push
cmps
push
test
push
not
gs
imul
gs
jno
xchg
ja
add
leave
cmp
dec
mov
pusha
ror
or
aam
push
sub
xchg
xchg
enter
neg
inc
pop
loope
stos
adc
das
in
jae
arpl
cmp
xor
call
adc
stc
xor
jbe
or
hlt
adc
cmps
dec
repnz
fadd
sbb
add
inc
jmp
and
dec
sar
aad
ficomp
sbb
sub
sbb
cmps
sar
push
imul
retf
dec
scas
jnp
data16
jle
dec
lods
sub
lahf
inc
(bad)
daa
push
ins
mov
and
lods
mov
jmp
into
pop
sbb
or
outs
clc
cld
shl
sbb
xor
test
shr
push
repz
sbb
push
enter
(bad)
push
jmp
cmp
inc
push
stos
jbe
xchg
arpl
add
xor
mov
shl
xchg
repz
add
cld
mov
mov
pop
aad
push
outs
push
xchg
fwait
loopne
or
lds
rol
sub
out
gs
mov
popa
pop
test
jbe
mov
xor
lods
cmp
adc
jne
jb
cmp
pop
ins
(bad)
mov
lds
jbe
ffreep
jne
movs
in
mul
xor
out
jo
in
adc
fild
(bad)
cmps
add
jmp
gs
push
dec
cwde
push
addr16
jmp
ins
push
cmp
mov
jmp
pop
inc
jmp
jbe
push
jo
push
std
adc
mov
adc
mov
ret
stos
pop
loopne
lds
and
inc
cmp
sub
dec
inc
xor
fisttp
mov
add
cmp
test
es
mov
fmul
aaa
and
cmc
adc
ror
cmp
pop
adc
sti
cmp
push
pop
pusha
pop
push
jnp
sub
mov
fadd
dec
loop
pop
iret
sbb
adc
mov
xchg
or
lea
out
rol
push
and
or
hlt
stos
push
xchg
pop
fadd
arpl
ret
mov
xchg
enter
sub
mov
out
arpl
jnp
imul
inc
stos
dec
in
cmp
jl
ret
dec
dec
in
cmp
inc
(bad)
fs
jno
sbb
mov
aad
call
call
push
movs
in
dec
jl
xor
inc
stos
mov
and
add
cld
aas
add
cmp
jge
dec
jo
sbb
aam
test
mov
gs
sbb
retf
les
imul
cld
rol
sbb
adc
cmp
(bad)
icebp
mov
out
dec
mov
inc
sub
dec
mov
xor
mov
xchg
ins
xchg
stos
mov
mov
in
int
push
cdq
adc
stos
outs
outs
call
arpl
shr
jo
jmp
sbb
sub
ss
repnz
pop
xor
xchg
jecxz
xchg
cdq
dec
inc
rol
cmps
fnstsw
adc
add
addr16
push
je
aaa
retf
aaa
mov
mov
push
sub
leave
and
sub
mov
pop
xchg
rol
or
xor
push
adc
jl
xor
ss
stos
(bad)
out
inc
in
push
sbb
ds
fstp
iret
int
icebp
adc
test
xchg
out
es
sbb
sub
lds
inc
icebp
cmp
(bad)
mov
push
or
add
addps
cli
mov
loope
jg
sti
leave
test
movs
pusha
retf
xchg
repz
mov
fwait
jle
aaa
sub
addr16
arpl
inc
fcmovnb
aas
mov
gs
lock
pop
les
mov
jae
(bad)
out
or
rcr
movs
and
aas
push
push
out
ror
cmp
out
jnp
xchg
arpl
push
mov
cdq
les
ins
(bad)
movs
ja
mov
dec
fyl2x
inc
pop
in
mov
pusha
mov
xor
fnstsw
sub
sub
sbb
repz
dec
mov
xor
pop
cmp
data16
inc
inc
pop
dec
sub
repz
out
xchg
dec
and
add
sub
mov
ret
imul
enter
ss
add
les
out
sbb
mov
pop
jle
(bad)
(bad)
push
and
repz
into
inc
ins
push
pop
shl
sahf
fwait
imul
push
push
pop
lds
or
mov
xchg
jbe
fwait
sahf
je
dec
loop
pop
call
xchg
imul
xchg
repnz
dec
in
test
pop
je
leave
sub
sbb
lahf
push
push
sub
addr16
ins
fwait
popa
inc
mov
aaa
or
and
pop
ret
dec
xchg
jae
mov
fisubr
mov
sbb
sti
pop
mov
jbe
jno
mov
or
lds
fldcw
push
test
mov
dec
pushf
shl
adc
add
mov
jg
enter
cmps
or
cmc
mov
mov
inc
das
jae
push
lock
imul
cmp
out
call
pusha
leave
(bad)
rol
adc
in
inc
in
push
and
mov
mov
js
aas
pop
iret
push
dec
in
adc
push
movs
sti
test
test
outs
out
rcr
inc
pop
aam
stc
aaa
lahf
lahf
jle
cld
outs
adc
mov
push
enter
pop
xchg
inc
in
ja
mov
test
cli
outs
mov
call
adc
mov
into
push
xor
lock
add
dec
push
dec
test
(bad)
fist
push
add
sbb
test
addr16
pop
test
nop
dec
ret
xchg
out
mov
cmp
cmp
push
in
out
sti
or
xchg
cmp
mov
ins
fs
lods
cmp
adc
cmp
ss
shr
xchg
mov
push
movs
repz
mov
mov
xchg
call
pop
fnstsw
ret
xchg
xchg
mov
(bad)
cmp
sti
pop
fmulp
(bad)
fst
pop
jae
cmp
iret
pop
sbb
sbb
xchg
fdiv
adc
sbb
dec
pop
jo
push
add
cmp
sub
cmp
iret
add
pop
mov
mov
adc
ror
adc
pop
outs
xchg
or
mov
cmps
test
sub
cmp
fild
adc
or
loopne
shl
xchg
push
jl
or
mov
cmp
jl
adc
mov
mov
push
fisub
mov
and
mov
dec
mov
jno
adc
xchg
mov
fcom
xchg
pop
aaa
rcl
mov
popf
in
adc
mov
mov
ja
xchg
jle
push
nop
pop
cmp
jge
mov
push
push
sar
dec
fxch
jmp
ins
test
rol
stos
in
jmp
xchg
loopne
xor
sub
and
std
pop
xor
add
sbb
mov
xor
ret
popa
jp
push
dec
movs
xor
das
push
xlat
jecxz
cdq
and
jns
outs
push
push
fsubr
cld
adc
dec
test
sbb
pop
lods
lods
fild
addr16
int
movd
mov
inc
jle
dec
in
fisubr
push
out
movs
lea
ja
jecxz
add
ja
and
pop
popf
mov
cdq
rcl
add
loope
mov
nop
xor
outs
dec
or
int3
push
sahf
mov
sub
xor
mov
aam
push
add
es
jno
in
and
jnp
in
(bad)
and
mov
inc
cmc
test
fcom
inc
jmp
xlat
jns
scas
adc
and
cmc
dec
in
xchg
add
mov
mov
add
jb
add
mov
sub
aam
(bad)
and
push
pop
pop
mov
sbb
push
lea
nop
jmp
pop
cwde
div
ins
in
pusha
jb
ficom
mov
jge
idiv
js
test
pop
aas
call
mov
mov
adc
in
jge
and
dec
xor
sbb
jecxz
outs
push
das
neg
xchg
cmp
arpl
push
test
int3
outs
push
add
mov
or
push
pop
stos
mov
test
mov
call
ret
fdivr
out
mov
adc
jns
or
and
in
in
out
sub
nop
(bad)
cmp
dec
clc
mov
mov
lods
jno
sar
push
or
xor
add
repz
ret
mov
and
inc
jg
aad
fdiv
jno
stc
pop
sbb
sbb
hlt
loopne
stos
pop
mov
es
pop
ja
pusha
fmul
push
dec
or
in
pop
xor
pop
shl
imul
das
add
cmp
xor
pop
nop
imul
push
aad
inc
scas
sbb
xchg
rcl
sar
fild
mov
pusha
jg
in
or
sar
dec
mov
and
repz
(bad)
sti
sbb
loope
ret
icebp
jl
loopne
adc
outs
adc
test
xchg
mov
and
push
xor
xchg
mov
mov
mov
mov
xchg
fnstsw
sbb
xchg
xchg
repnz
loope
loope
and
sbb
or
(bad)
sub
jae
out
jmp
ret
fwait
sbb
pop
ficomp
ins
pop
cdq
cmc
or
adc
stc
mov
cdq
test
push
and
dec
mov
shl
ror
add
sub
push
into
add
leave
lds
cmp
mov
mov
mov
rcl
adc
into
mov
shl
xchg
jle
stc
das
sub
push
xchg
cs
test
mov
bound
add
sub
mov
push
mov
jl
inc
jno
or
mov
cmps
ja
xchg
call
push
data16
call
nop
cwde
dec
mov
mov
adc
mov
pop
jmp
ret
iret
sbb
inc
add
cs
inc
lock
sbb
adc
scas
mov
sar
aam
lahf
dec
das
movs
call
test
cwde
or
call
nop
in
add
and
dec
sub
mov
imul
and
sub
xlat
out
xor
fstp
add
jne
daa
test
xchg
cmp
inc
xchg
pop
mov
outs
cmps
shl
aam
mov
mov
lods
inc
mov
push
movs
jmp
sbb
cmp
jg
xchg
imul
lods
add
out
neg
popf
in
in
adc
lds
xchg
jno
sbb
mov
out
in
fsubr
xchg
jo
cmp
xchg
push
sub
and
(bad)
cmp
scas
dec
jp
pop
imul
lds
fdiv
cmps
mov
ficom
lahf
fisubr
sbb
adc
xor
pop
push
popf
adc
lahf
ins
or
aaa
dec
push
mov
fistp
and
inc
xchg
iret
in
imul
(bad)
jnp
fwait
repnz
clc
xchg
call
adc
nop
push
or
imul
pop
adc
fld1
out
xor
mov
jne
mov
inc
clc
xor
arpl
mov
push
add
xchg
or
xor
fnstcw
sbb
call
scas
cmp
nop
push
retf
data16
fsubr
aad
je
mov
dec
push
adc
push
cmp
scas
add
jo
dec
out
lahf
jg
pop
repnz
jmp
hlt
jns
add
push
push
mov
lock
mov
jmp
sub
add
test
xchg
cmc
vandps
mov
daa
out
xchg
fadd
dec
cwde
je
inc
push
xchg
xlat
mov
or
js
push
(bad)
cld
and
or
popa
out
popf
(bad)
push
xchg
dec
mov
mov
shl
dec
adc
pop
or
pop
sub
scas
mov
icebp
(bad)
mov
and
adc
push
shr
xor
push
mul
dec
sub
push
aas
ss
arpl
xchg
push
inc
shl
mov
xchg
pop
and
in
mov
les
arpl
jge
jno
fwait
jmp
cmp
icebp
pop
shr
xor
push
cs
mov
loop
xchg
sub
pop
jp
retf
out
mov
cmc
fimul
dec
or
(bad)
or
add
rcl
ret
enter
leave
xchg
rcl
xor
pop
mov
mov
dec
xchg
inc
cmp
push
adc
push
outs
outs
es
adc
push
fs
jbe
mov
or
mov
ins
test
inc
cdq
ins
inc
sbb
lock
jle
sti
mov
int
test
sbb
lahf
cmp
scas
das
pop
xchg
out
rcl
xor
cmp
inc
mov
pushf
call
inc
ret
pop
aas
data16
mov
call
jne
or
xchg
mov
push
ret
xchg
iret
or
adc
(bad)
mov
callw
lea
and
jnp
stos
es
out
scas
(bad)
push
loop
add
or
cs
xlat
xor
aaa
lock
or
ficom
gs
xchg
mov
push
and
fiadd
ja
popa
adc
(bad)
call
aam
mov
add
jno
test
and
cmp
jmp
fdiv
ss
jae
add
and
push
movs
aad
neg
mov
fisubr
push
jbe
(bad)
sahf
and
leave
mov
jae
mov
push
ins
mov
out
imul
into
hlt
and
div
ins
mov
mov
int
pop
outs
inc
out
xchg
(bad)
cdq
mov
sub
mov
pop
fwait
les
loopne
jo
out
aas
lahf
xor
dec
enter
out
sub
push
xor
jge
adc
xchg
jno
or
jle
stc
xchg
test
mov
or
pop
adc
cwde
pop
in
and
sbb
mov
push
iret
pop
(bad)
and
push
sub
int
sub
jge
outs
fs
xchg
add
repz
or
addr16
dec
iret
stos
out
les
sub
popa
sbb
or
jo
mov
xchg
push
xor
loop
stos
cmp
cmps
sub
inc
call
xchg
(bad)
fcomip
mov
call
dec
push
jl
ret
es
mov
jmp
out
aad
sbb
or
aaa
jo
(bad)
mov
pop
adc
sub
stos
aam
ret
adc
nop
ja
mov
push
shl
lahf
push
cli
cmp
dec
dec
(bad)
sub
cmp
(bad)
push
in
xor
test
mov
imul
ret
xchg
loopne
cmc
jmp
or
test
dec
rol
mov
stos
jl
push
in
sub
int3
inc
push
inc
aaa
and
icebp
mov
cmps
aad
sahf
lahf
mov
test
clc
push
mov
dec
xor
pushf
mov
setb
or
push
jnp
ja
aad
je
jns
leave
dec
jnp
popf
aas
pop
add
push
enter
and
iret
popa
icebp
ins
xor
push
lods
sub
mov
mov
xchg
sub
mov
aaa
test
test
ss
adc
dec
gs
repnz
mov
xchg
fs
int3
and
(bad)
and
bnd
aam
shl
retf
adc
jle
stc
inc
xlat
jg
and
dec
cld
lock
jmp
dec
je
in
scas
dec
popa
jmp
(bad)
cmc
iret
call
rol
mov
and
mov
sbb
and
add
mov
stos
pusha
clc
cmp
mov
push
stos
enter
inc
pop
daa
mov
mov
mov
test
cmp
xchg
xchg
jp
fs
popa
or
in
fcomp
lock
add
pop
mov
outs
loope
mov
les
dec
(bad)
jge
ins
add
jp
pusha
aam
xor
imul
jl
fsubr
lock
xor
mov
stc
jmp
mov
pop
sub
push
fiadd
and
jle
mov
rcl
fcom
or
jge
std
push
lds
icebp
pop
sbb
jb
push
sub
jle
sbb
sub
das
mov
pop
aaa
add
outs
pop
lds
sub
mov
in
mov
stc
mov
enter
or
test
jle
loop
dec
mov
xor
repz
call
jbe
jecxz
(bad)
int
lods
mov
jnp
(bad)
in
jne
add
jb
ret
xor
test
call
or
cmps
inc
pop
rcr
nop
(bad)
shl
mov
jmp
fidiv
and
cmp
mov
(bad)
jns
or
push
xchg
fiadd
xor
sbb
sbb
pop
adc
xchg
jecxz
in
sti
mov
jno
mov
stos
pusha
in
vpunpcklqdq
cmp
pop
inc
cmp
fbld
mov
(bad)
stc
mov
loope
out
xchg
mov
imul
lea
pop
shl
mov
call
sub
addr16
mov
sub
imul
mov
call
sbb
call
js
jb
out
shr
out
call
outs
(bad)
fst
add
mov
inc
cs
jne
arpl
mov
inc
and
mov
xor
popf
les
and
repnz
adc
cmp
jbe
call
or
push
push
xor
out
or
fwait
dec
pop
(bad)
ins
scas
jne
sub
rcl
popa
out
adc
inc
mov
pop
dec
push
int3
xchg
adc
iret
adc
icebp
icebp
jge
dec
pop
push
in
test
xchg
enter
jnp
arpl
pop
(bad)
neg
lods
or
lock
and
jno
mov
jmp
js
cmp
xor
dec
repz
fcom
add
bound
addr16
pop
xlat
or
adc
sub
jbe
daa
mov
xchg
mov
ja
clc
(bad)
adc
and
and
fadd
hlt
call
neg
daa
cmp
mov
dec
lea
and
fnop
int
sub
ss
xchg
ror
hlt
mov
fist
outs
repz
pop
aaa
xor
inc
cmp
not
sbb
jns
mov
add
(bad)
std
and
ss
xchg
sbb
add
ss
inc
push
int
hlt
outs
xchg
jl
aaa
push
imul
sub
cmp
retf
and
cmp
div
cwde
xor
addr16
movs
retf
ja
sbb
add
fs
mov
shl
jle
adc
inc
mov
xchg
(bad)
leave
(bad)
sub
add
inc
outs
loope
in
fild
outs
mov
jbe
jg
cmp
mov
pop
cmp
sbb
add
imul
mov
mov
leave
retf
cmp
add
(bad)
cmp
dec
je
repnz
shl
mov
dec
cmps
ja
inc
pushf
mov
arpl
mov
bound
mov
dec
cwde
ret
mov
cmp
xlat
jnp
(bad)
fcomp
ss
rol
outs
repz
push
jno
sbb
pop
xor
(bad)
mov
dec
(bad)
(bad)
inc
add
sbb
push
xor
ffreep
or
arpl
or
jp
test
loop
add
add
pusha
pop
sub
push
out
dec
pop
sub
daa
xchg
cdq
ret
retf
xor
test
push
inc
inc
add
sbb
sub
sub
cmp
ds
mov
sbb
int
test
mov
pop
mov
loopne
and
(bad)
fstp
lea
inc
fistp
shl
out
sbb
pop
lds
push
imul
fst
call
and
mov
inc
mov
daa
dec
lods
rep
popf
lock
jo
cli
jl
cmp
in
(bad)
jnp
jnp
pop
cmp
sbb
fmul
sub
(bad)
dec
jge
repz
(bad)
aas
pushf
pop
jns
mov
cmp
lock
stc
mov
bound
mov
popf
sbb
and
sub
cmc
dec
mov
in
dec
inc
xchg
test
(bad)
mov
call
mov
ret
dec
inc
callw
pop
jae
(bad)
movs
out
pop
je
fisub
xor
xchg
and
push
mov
fcmovnbe
jno
cdq
cmp
xchg
hlt
ss
addr16
hlt
inc
into
and
jl
mov
sub
cmp
sbb
adc
adc
test
pop
nop
xor
sub
sub
retf
sar
loop
leave
std
and
ds
adc
add
cmp
mov
popf
dec
sbb
addr16
xor
stos
inc
adc
cmp
test
test
push
and
sbb
or
dec
dec
or
sbb
or
clc
cli
sub
xchg
xor
cmps
test
int3
sahf
(bad)
push
ins
xchg
ins
mov
and
nop
daa
(bad)
out
std
inc
and
dec
clc
jnp
mov
(bad)
pop
inc
int3
or
lea
neg
movs
ins
jno
cmp
and
aad
inc
push
mov
stc
rcr
xlat
mov
or
sbb
popa
(bad)
pop
mov
mov
lods
mov
cmp
xchg
xor
cmp
and
addr16
xor
dec
(bad)
mov
mov
pop
xchg
push
leave
sbb
retf
cmps
or
mov
popf
call
mov
imul
(bad)
mov
(bad)
xchg
fnsave
(bad)
fwait
sbb
call
sbb
dec
mov
stos
sbb
lds
dec
jecxz
mov
int3
and
ja
mov
dec
test
fist
push
xor
jg
(bad)
repz
mov
aam
or
jnp
sub
push
xchg
mov
mov
cmp
cwde
aaa
xor
inc
movs
mov
and
aas
aaa
jne
mov
or
sbb
xor
cmp
popf
mov
repz
popa
cmp
jl
cmc
pushf
jne
xor
push
and
push
repz
out
or
stos
imul
fild
daa
cmp
mov
imul
(bad)
push
cmp
jo
dec
mov
clc
cmp
in
push
cmps
pop
pusha
pandn
mov
cmps
add
sub
and
push
daa
push
stos
mov
shl
shl
sbb
lock
enter
push
retf
test
out
sbb
fsub
aad
mov
sub
enter
cmp
in
inc
pop
xor
xor
or
jge
leave
mov
mov
add
push
lahf
ins
mov
and
addr16
mov
mov
out
lock
int
fucomp
push
hlt
(bad)
fwait
and
loope
(bad)
ret
fmul
popf
pop
int3
jle
dec
aad
sbb
xor
jne
inc
call
xor
js
fist
fwait
push
cmp
int
fsubr
stos
(bad)
daa
std
dec
fwait
or
pusha
sbb
add
xchg
aaa
and
pusha
pop
jmp
cmp
ret
aad
push
jbe
stc
push
mov
inc
aaa
adc
idiv
pop
div
aas
lds
mov
bound
dec
xor
inc
sbb
mov
and
or
inc
jecxz
fiadd
mov
xlat
sahf
ins
dec
fwait
push
lds
sbb
sub
outs
push
std
inc
rol
test
in
cmp
rcl
jnp
popf
or
cmps
jmp
jmp
mov
rol
jmp
dec
mov
sbb
aaa
movs
js
cwde
and
cmps
out
add
mov
add
add
sbb
dec
je
pop
jno
cwde
mov
test
sbb
jno
int3
pop
or
pushf
retf
sub
popa
je
movs
retf
pusha
jb
adc
mov
shl
fucomp
loopne
call
dec
mov
sub
mov
loop
gs
jno
or
mov
inc
mov
mov
fisubr
jns
or
inc
out
arpl
loope
out
xor
mov
xor
push
and
pop
repnz
js
dec
push
pop
out
or
cmp
pop
push
aaa
(bad)
dec
jnp
arpl
cli
popa
ds
mov
mov
sbb
add
sub
sub
mov
div
arpl
aas
cs
sbb
cmp
xchg
push
mov
xor
dec
retf
xchg
pop
jne
xor
dec
mov
mov
iret
and
rol
mov
xor
push
int
cmp
inc
(bad)
pusha
sahf
daa
adc
jle
xchg
ins
shl
inc
jle
bound
inc
mov
sar
jp
das
dec
mov
adc
mov
test
dec
cmp
adc
add
xor
ss
data16
jmp
test
and
inc
bound
repz
adc
ja
aas
aad
cmps
dec
repnz
(bad)
mov
adc
mov
test
addr16
push
loopne
mov
(bad)
scas
inc
mov
aam
push
outs
cdq
pop
inc
into
pop
jne
sbb
call
retf
inc
push
cli
jbe
sub
je
xchg
mov
ins
mov
popf
push
loop
std
out
lds
and
loop
in
xchg
mov
push
xchg
adc
adc
sbb
adc
pop
sub
cld
adc
pusha
sub
xor
add
dec
xor
daa
(bad)
cmps
xchg
dec
and
jbe
pop
lea
lods
add
pushf
aad
xchg
aam
sbb
pushf
retf
ret
iret
adc
aad
inc
call
push
dec
add
xchg
xchg
pop
icebp
adc
mov
adc
jns
dec
push
mov
or
mov
loopne
fstp
test
dec
daa
stos
push
cmps
aaa
sub
inc
mov
push
xor
out
sbb
mov
mov
xor
pop
jo
ins
inc
(bad)
ss
add
mov
xor
push
push
dec
mov
mov
push
pusha
retf
jg
out
test
je
adc
and
pop
ins
dec
or
nop
push
lea
pop
sahf
xchg
sar
sub
int
push
jnp
in
and
sbb
test
mov
fs
xchg
mov
ins
pusha
cmps
imul
push
les
xor
(bad)
sbb
pop
push
sbb
dec
(bad)
sbb
push
(bad)
loop
push
jae
int
dec
push
jne
or
jg
shr
sbb
push
mov
stos
sub
jbe
lds
ins
ins
dec
xchg
js
jno
jmp
cmp
pusha
or
xor
pop
add
test
pop
retf
sbb
or
loope
pop
fstp
icebp
stos
and
or
loop
cld
xchg
and
imul
cmps
push
sbb
retf
(bad)
das
test
jmp
adc
ror
inc
in
push
mov
sub
xlat
aaa
add
inc
push
push
xchg
mov
pop
inc
inc
add
push
test
(bad)
shl
fwait
dec
(bad)
imul
and
or
push
fidiv
ja
dec
mov
in
lods
test
pop
aas
out
cmp
pop
mov
cmp
inc
stc
je
imul
adc
shr
mov
mov
mov
push
xor
push
pop
data16
daa
out
imul
into
jle
(bad)
retf
dec
out
inc
mov
pop
lods
ds
fmul
adc
in
(bad)
imul
imul
repz
mov
ficom
int3
push
or
push
in
xor
std
jae
xchg
stos
lds
cli
test
sub
test
cmp
pop
fcmovnbe
or
jle
or
addr16
pop
leave
je
add
lods
daa
(bad)
stos
cmp
sahf
retf
je
shl
jmp
retf
loop
movs
dec
push
mov
fsubr
aam
popf
lods
out
push
pop
mov
mov
inc
or
pop
adc
(bad)
mov
adc
xchg
sub
xchg
push
sbb
sub
loope
(bad)
out
pop
or
push
xor
or
adc
(bad)
dec
add
push
pusha
fild
gs
fild
pushf
and
je
cmp
mov
ss
xchg
dec
lds
push
mov
add
xchg
cmps
inc
add
mov
ror
xor
lods
cmp
mov
push
adc
test
push
or
mov
pop
pop
test
push
ins
xchg
ja
xchg
jae
dec
sbb
ficomp
jp
sub
jns
das
ins
mov
mov
push
dec
dec
pop
stc
xchg
and
pop
das
outs
lock
rcr
movs
ins
mov
out
cdq
mov
out
xor
stc
test
(bad)
call
test
jno
sbb
out
or
push
cmp
pop
sub
cld
(bad)
test
xchg
jae
push
mov
jo
mov
popf
add
dec
mov
scas
retf
inc
push
adc
aas
ficom
fmul
mov
push
ss
mov
and
inc
std
jae
movs
inc
in
call
fnsave
iret
add
lds
mov
stos
jecxz
xor
xchg
inc
cwde
xor
int
jae
test
jg
cmps
sub
add
std
cmovns
pop
nop
xchg
mov
xchg
and
sbb
rol
pop
dec
sti
xchg
ret
cmp
icebp
cmp
aam
pop
sti
mov
out
cmp
xchg
and
int3
jne
movs
jne
sub
push
(bad)
mov
push
pusha
cmovbe
jp
sbb
out
addr16
arpl
add
jb
dec
add
popa
pop
or
dec
sub
dec
bound
sbb
es
xchg
call
adc
dec
and
add
fs
cmp
sbb
sbb
adc
cld
jl
test
scas
add
in
mov
rcr
test
aad
aaa
mov
pop
out
jmp
lods
mov
out
inc
xor
call
cdq
cmps
mov
xchg
adc
aaa
loopne
xchg
fstp
xchg
pop
mov
call
and
cs
push
sbb
fwait
xor
in
inc
jmp
leave
in
dec
test
xor
jge
mov
sub
jbe
push
cmp
or
pop
in
fnstenv
int
sub
jae
lds
and
mov
sbb
mov
pop
push
repnz
push
retf
mov
int3
loope
cdq
les
pop
stc
lds
or
xchg
shl
rcr
add
nop
inc
lock
cmp
pop
jns
call
xchg
xchg
mov
add
ja
mov
das
std
daa
imul
xchg
cmps
out
inc
jle
jmp
mov
and
adc
mov
fcomp
cwde
mov
pop
setp
adc
jo
rcr
push
xor
dec
mov
scas
sbb
push
or
daa
dec
jg
repz
out
push
retf
jg
mov
adc
into
xor
mov
mov
sbb
push
iret
push
iret
lods
lfs
adc
pop
jp
addr16
std
pusha
sti
xchg
push
mov
sbb
aaa
push
jge
sbb
sbb
mov
popa
ins
aas
sub
adc
stos
mov
adc
stos
cmc
shl
xor
mov
sub
or
pop
mov
jge
push
mov
xor
pushf
sar
pop
sub
daa
adc
cli
nop
mov
iret
enter
fist
dec
adc
shl
ss
cmp
add
push
mov
push
lahf
jecxz
fs
add
(bad)
and
push
sub
mov
cmp
int
pop
dec
push
mov
and
rep
and
adc
pop
push
xchg
xor
pop
adc
lds
sbb
shl
mov
fdivr
shr
cdq
xchg
repnz
pop
retf
pop
add
inc
rol
(bad)
hlt
repnz
lahf
dec
movs
ficomp
pop
jmp
lahf
mov
xchg
pop
loope
popf
loopne
mov
ret
int3
(bad)
cmps
push
add
push
dec
movs
cwde
push
jle
mov
push
xor
jp
adc
dec
inc
stos
xlat
mov
push
aaa
adc
mov
inc
lods
inc
or
sbb
jno
dec
ret
repnz
jo
adc
ins
jnp
aad
push
pop
sti
sub
and
lea
and
mov
inc
jle
pop
or
rcr
cwde
mov
fild
mov
les
adc
iret
ror
cwde
add
cmp
fstp
mov
mov
jmp
fbld
and
cdq
and
sub
or
mov
imul
jne
adc
(bad)
stos
in
push
mov
xor
stc
mov
mov
xchg
ficom
mov
and
cmp
jmp
scas
push
into
xor
ss
mov
cwde
mov
call
test
and
outs
rol
les
push
hlt
cmp
sti
jns
mov
rcl
push
das
enter
ret
retf
xor
test
pop
push
stc
gs
ja
leave
retf
out
mov
sbb
data16
xchg
retf
adc
sub
ror
add
push
inc
push
pop
adc
jg
xor
iret
pusha
mov
(bad)
loope
mov
test
and
cmps
icebp
in
loope
sub
jno
mov
int3
call
js
inc
imul
push
(bad)
cmp
add
xchg
out
cmp
mov
mov
pop
jo
inc
cmps
rcr
stc
fisub
jl
lahf
and
shr
sbb
push
inc
loope
xor
push
dec
push
es
xchg
and
dec
jg
leave
sbb
mov
in
mov
js
pop
das
dec
mov
je
nop
lea
mov
test
xor
xchg
inc
mov
jecxz
fs
cmps
fwait
fs
nop
adc
pop
repnz
cmp
out
fs
lds
(bad)
ins
rcl
ins
and
stos
inc
add
jo
mov
inc
push
ja
adc
dec
pop
cmp
imul
sub
movs
aaa
sar
fs
cmp
fbld
jmp
xor
dec
cmp
nop
sbb
mov
dec
movs
test
or
(bad)
icebp
xchg
pop
lock
inc
ss
mov
outs
call
imul
xchg
ret
ret
and
sbb
jo
jmp
mov
fcom
mov
aam
inc
loopne
pop
gs
sar
popf
adc
test
repnz
pop
sub
scas
jp
dec
das
test
sbb
shr
push
pop
loop
mov
xchg
bound
mov
cld
sbb
repnz
inc
je
aas
pop
fbld
inc
mov
and
movs
dec
arpl
jmp
ret
cmps
jl
fwait
mov
sub
pop
sbb
leave
adc
xlat
push
iret
sar
lds
int3
shl
nop
or
or
(bad)
div
xchg
retf
jecxz
pop
inc
cmc
movs
fmul
pop
fwait
and
add
hlt
scas
popf
pop
jg
std
popa
js
sbb
mov
dec
push
ja
out
movs
pop
push
jecxz
sti
dec
lds
ss
lock
sub
scas
and
add
jo
fcmovnb
out
ficom
(bad)
call
cwde
sbb
lock
mov
add
int3
(bad)
outs
inc
fprem
cmps
les
enter
in
mov
mov
popa
ret
call
jae
push
jmp
lea
pop
jl
adc
fdivr
and
and
push
xchg
pop
mov
cli
jae
mov
adc
out
push
scas
call
or
adc
cmps
into
cmps
jmp
jp
inc
pop
fs
add
gs
jne
sti
and
dec
popa
test
cld
sub
xor
outs
fwait
stc
mov
out
mov
and
sahf
sub
dec
mov
add
ret
push
cdq
sbb
mov
pop
enter
hlt
cmc
mov
fs
adc
mov
icebp
inc
lahf
loop
xchg
scas
mov
bswap
push
out
clc
add
add
push
adc
pusha
ja
mov
jno
imul
imul
mov
xor
push
or
clc
mov
mov
outs
stos
stos
push
out
and
add
mov
je
xlat
test
test
mov
xor
ins
aam
ins
out
dec
aas
(bad)
inc
aas
outs
mov
rcl
inc
mov
xor
arpl
cld
dec
xchg
ret
push
sub
inc
jecxz
jecxz
add
aam
adc
clc
jmp
cmps
(bad)
gs
push
retf
movs
(bad)
in
ds
or
call
push
add
rol
in
sub
(bad)
sub
xor
addr16
xor
neg
retf
ss
call
(bad)
or
int3
fmul
fwait
push
mov
ins
mov
sbb
mov
sbb
inc
scas
mov
ficomp
sahf
scas
push
push
(bad)
lods
scas
jmp
cmp
xchg
gs
fidiv
je
cmps
in
inc
aam
and
push
inc
aad
daa
loope
mov
adc
and
out
pop
enter
ins
sub
ss
xchg
pop
out
stos
mov
xchg
rol
add
adc
test
mov
dec
out
inc
dec
adc
int
repz
dec
cld
pop
inc
shl
mov
test
jge
cmp
jbe
pop
ds
out
aad
inc
push
xor
jno
in
popa
int3
dec
(bad)
stc
cmp
dec
pusha
pop
test
repnz
add
jl
mov
xchg
test
je
sti
or
jge
jle
ss
add
gs
adc
mov
adc
nop
rcl
loopne
dec
test
mov
xor
lea
sbb
dec
fisubr
popa
cmp
xor
add
cmp
xchg
lods
push
xor
cmp
loopne
mov
loope
xor
push
imul
repz
xchg
leave
(bad)
imul
and
sub
enter
push
out
cmp
ror
repz
cmp
add
std
iret
add
mov
cld
sbb
xchg
or
sbb
fisttp
inc
in
bswap
fstp
(bad)
jb
mov
jo
daa
mov
fisub
loope
jg
adc
or
mov
mov
cmp
out
mov
xlat
mov
lods
ds
call
sub
push
inc
out
mov
dec
xlat
jl
inc
cwde
ins
adc
adc
sub
dec
push
or
stc
jo
leave
cmps
push
xor
loope
adc
ror
jmp
jp
sar
outs
push
xchg
ror
jnp
leave
gs
(bad)
jmp
mov
lds
mov
dec
xlat
aas
pop
xchg
shl
mov
sub
and
xor
bound
not
sbb
nop
mov
dec
xchg
out
cmp
mov
addr16
pop
and
push
fdiv
jnp
stos
jae
push
add
(bad)
ror
ins
lods
ds
out
add
loopne
inc
push
stos
add
cmc
dec
in
push
xchg
xchg
add
or
dec
pop
rcl
ds
jcxz
sbb
lock
arpl
mov
outs
mov
shl
test
jle
push
das
dec
xor
inc
jmp
lds
fistp
add
pop
sti
test
mov
and
sub
and
jns
or
ror
adc
aam
fwait
lock
jecxz
jns
loopne
pop
bound
mov
xor
pop
int
mov
sbb
loop
shl
xchg
sub
sbb
lock
jl
fidivr
aam
inc
jmp
call
jnp
mov
push
scas
(bad)
xchg
test
dec
xchg
and
cmp
add
push
add
push
jmp
mov
xchg
lods
stos
cs
jle
sti
sub
inc
xchg
(bad)
cmc
fbld
fnstcw
loope
jne
cmc
in
mov
sbb
adc
xchg
mov
mov
imul
xchg
pop
cmp
sahf
jecxz
loop
(bad)
arpl
stc
les
mov
sub
mov
repnz
movs
je
aam
dec
add
adc
jl
adc
inc
cmp
sub
lea
cli
ret
(bad)
cdq
lds
jg
icebp
fcomi
add
mov
pop
sahf
xchg
push
mov
(bad)
xchg
(bad)
in
or
push
les
cmp
cli
push
(bad)
(bad)
cmp
mov
inc
nop
(bad)
mov
sbb
ds
mov
jmp
sbb
div
out
(bad)
or
retf
inc
adc
jecxz
lahf
mov
xchg
jno
pop
ins
aaa
xor
inc
mov
test
std
xor
jmp
mov
push
cwde
test
cmp
xor
xchg
push
pop
aam
inc
add
out
jno
dec
adc
fcomp
test
aam
dec
push
pop
dec
or
xor
sub
fwait
inc
pop
or
movs
pop
xchg
mov
sti
jb
mov
inc
xor
adc
xlat
inc
inc
aas
cmp
push
jae
fs
and
push
mov
mov
je
lahf
shl
fmul
and
aad
scas
xor
pmullw
xor
push
dec
outs
mov
jne
imul
push
cmp
sub
cmp
sbb
js
or
cmp
adc
into
ds
(bad)
call
out
pop
aam
ins
mov
cwde
sbb
mov
or
inc
push
test
outs
mov
cmps
shr
jp
inc
rcl
cmp
mov
ror
inc
in
mov
shr
ret
jmp
push
loopne
dec
scas
dec
push
sub
or
xchg
sbb
xrelease
or
adc
inc
lds
adc
xlat
push
out
jl
dec
xchg
data16
jbe
jo
add
mov
push
mov
ficom
jle
aas
xchg
jo
mov
enter
push
sub
popf
ja
int3
call
pop
sub
push
outs
add
cmp
outs
dec
fidiv
or
xor
sub
and
sbb
ret
pop
daa
or
sbb
nop
add
push
shl
adc
mov
lds
lods
push
push
and
stos
test
jmp
push
movs
mov
lock
stc
jne
mov
inc
(bad)
jle
jmp
test
pop
popf
out
stos
sti
fs
mov
push
rcr
scas
mov
ja
jne
and
paddusb
(bad)
push
cmps
retf
push
mov
imul
xor
jne
aam
imul
mov
push
rol
sub
(bad)
out
push
out
out
lods
xor
int3
fld
mov
cmps
test
jp
mov
sbb
xorps
and
cmp
fs
and
xor
je
push
stos
adc
cwde
cwde
fcmove
iret
cwde
mov
in
pop
div
mov
lock
mov
push
popf
dec
js
fcmovbe
sub
add
mov
push
jno
dec
mov
loop
mov
dec
xchg
push
rol
dec
sbb
popa
mov
jb
mov
and
mov
cmp
gs
cmp
mov
inc
adc
fwait
sub
out
cs
pop
pusha
das
mov
xchg
xor
test
jmp
ins
or
out
fs
hlt
jnp
outs
ret
cli
fs
jno
adc
xchg
sar
mov
fdiv
mov
pop
cmp
adc
xchg
ins
xchg
or
fidivr
sbb
dec
push
push
js
xchg
push
sbb
mov
call
mov
icebp
sbb
div
iret
jo
aaa
je
(bad)
out
push
add
(bad)
add
push
push
fucomip
ss
pop
icebp
dec
les
cmp
push
cmps
adc
xor
lods
scas
mov
ins
mov
into
push
rcl
jecxz
or
std
je
jge
ins
(bad)
jbe
in
scas
stos
stc
stos
or
shl
(bad)
inc
adc
aad
sti
pop
iret
jmp
nop
(bad)
sub
add
jge
adc
(bad)
adc
inc
ins
xor
data16
xor
cmps
ret
loope
cmps
ins
(bad)
arpl
int
imul
(bad)
lods
add
ret
neg
nop
icebp
ja
jle
(bad)
push
lea
popa
sub
daa
retf
(bad)
repnz
xor
in
sbb
add
adc
or
jmp
and
sti
xor
(bad)
gs
xor
inc
loope
fcmovbe
scas
scas
sub
xchg
popa
add
jne
sbb
and
mov
cmp
xor
and
xchg
fidivr
inc
out
or
(bad)
mov
or
sub
mov
or
fwait
mov
cmp
mov
push
test
mov
add
mov
mov
icebp
clc
pusha
mov
gs
out
xchg
lods
jecxz
arpl
pushf
ret
push
movs
cmp
ret
imul
lock
mov
jmp
or
mov
jns
jl
inc
cwde
lods
(bad)
dec
xor
pop
imul
dec
lods
dec
ss
in
jbe
call
jp
dec
out
push
aaa
aas
cdq
and
sbb
scas
mov
xor
retf
out
inc
cwde
push
sbb
fstp
ds
or
or
push
call
test
stos
leave
sbb
xchg
(bad)
xchg
fiadd
inc
fnstcw
frstor
inc
iret
jle
call
adc
dec
ret
mov
dec
movs
fimul
ins
mov
lahf
jg
mov
and
and
push
jae
mov
jae
dec
adc
cmp
loop
push
push
int
fcom
(bad)
xor
je
pusha
xlat
enter
or
pop
xor
adc
dec
lods
movs
scas
pop
adc
dec
ret
xchg
add
xchg
jbe
push
inc
lods
xor
cli
es
mov
aaa
adc
test
sahf
inc
imul
std
mov
jmp
ins
xchg
das
jl
jno
adc
retf
sbb
cmp
std
inc
pusha
icebp
add
sbb
or
pusha
js
ret
inc
mov
jno
sti
test
xor
je
lock
cs
scas
pusha
dec
enter
mov
sahf
pop
pop
movs
lods
xchg
add
push
sub
in
jl
push
pop
push
loopne
mov
les
fcmovnbe
jne
cmp
inc
cmp
pusha
xchg
add
ins
pop
adc
and
retf
test
es
mov
rcr
push
pop
in
dec
retf
pusha
mov
jmp
mov
xor
das
xchg
sub
(bad)
fsub
mov
fcom
xor
sbb
in
or
jb
out
les
cmp
dec
mov
cmp
sub
sub
fild
cmp
add
mov
call
std
push
in
sbb
jns
pop
out
(bad)
iret
retf
xchg
dec
pop
dec
push
(bad)
sar
mov
cmps
xchg
xchg
in
neg
call
repnz
ror
mov
nop
rcr
popa
jbe
in
shl
add
shl
and
adc
mov
push
pop
lds
dec
push
sbb
popa
lahf
jbe
add
jle
ja
adc
aad
xor
push
test
enter
js
test
pop
sub
shr
in
mov
rcr
cs
sub
adc
int
cli
in
jl
fdivr
pusha
sub
mov
lods
mov
jp
xchg
add
(bad)
ror
xor
(bad)
loope
call
add
xor
push
push
popf
sbb
mov
pop
in
jg
mov
popa
data16
ds
xchg
icebp
pop
(bad)
ror
enter
retf
xor
jae
sub
push
xor
bound
and
(bad)
loop
adc
pop
add
or
rol
pop
sub
mov
sbb
retf
imul
sub
mov
fimul
shl
inc
cli
mov
lock
div
pop
(bad)
mov
inc
dec
lds
jmp
hlt
pushf
ds
ja
jne
jp
pop
loop
xor
push
jmp
imul
inc
movs
inc
adc
(bad)
out
push
dec
popf
cdq
mov
enter
add
xor
outs
imul
(bad)
dec
aad
loop
dec
and
rcl
mov
push
jmp
dec
inc
cs
cmp
xor
into
xchg
js
pusha
in
pop
mov
clc
xchg
fnstsw
aas
shl
add
and
rcr
pusha
leave
scas
out
or
xchg
jge
or
adc
jo
fisubr
popa
(bad)
and
dec
push
js
dec
ret
mov
pop
xchg
mov
outs
stos
or
jns
inc
rol
sahf
add
jmp
mov
popa
sbb
mov
test
sub
mov
shl
pop
sub
adc
js
inc
mov
(bad)
cmp
jp
outs
les
adc
cs
xor
fistp
mov
cmp
fwait
add
jg
cmp
adc
mov
xor
xchg
enter
and
push
js
add
enter
fnstsw
mov
(bad)
mov
fwait
enter
scas
inc
cmps
pop
int3
shl
sahf
or
sbb
and
movs
push
xchg
(bad)
sbb
cmp
mov
movs
iret
scas
jmp
push
idiv
xor
dec
aad
in
inc
jle
or
jne
int3
xlat
aam
hlt
mov
leave
in
icebp
movs
mov
jo
cli
stos
ret
outs
es
or
dec
or
icebp
imul
call
popa
or
mov
icebp
mov
stc
xchg
push
imul
sbb
leave
cmp
xchg
aaa
adc
(bad)
cmp
add
test
arpl
sub
inc
sqrtps
jo
stos
pusha
(bad)
popf
es
fcom
pushf
rcl
push
iret
and
test
hlt
lahf
lahf
mov
pop
lods
out
shr
xor
arpl
inc
call
cmp
or
inc
idiv
into
xchg
imul
inc
inc
iret
fcomp
ret
add
rol
push
push
ficomp
ret
dec
fcmovne
or
adc
push
mov
imul
(bad)
enter
adc
cli
fisubr
fldenv
adc
sti
stos
repnz
in
hlt
ret
sar
lea
sub
out
xchg
popf
mov
push
movs
and
test
cwde
jecxz
xor
inc
mov
shl
mov
nop
push
push
push
test
cmps
jns
hlt
xchg
mov
or
in
cmps
and
cmps
ror
sbb
aas
sbb
je
cs
xchg
movs
inc
jl
jg
fucom
cmp
mov
pop
push
pop
and
cmp
dec
(bad)
dec
pop
push
push
push
aam
mov
adc
ret
or
push
les
jle
fild
sbb
cmp
pop
jo
pusha
sub
inc
shl
inc
out
inc
clc
lahf
add
dec
stos
ins
sub
mov
aad
popa
dec
pop
popa
repnz
and
and
mov
das
sub
dec
in
inc
or
xchg
mov
mov
mov
into
pop
xor
jmp
cs
sub
mov
or
(bad)
mul
bound
push
jge
fwait
sbb
les
sbb
pushf
aam
cmp
sahf
cmp
ja
loop
out
sub
mov
fcom
cmp
inc
in
push
retf
jmp
jo
pusha
inc
adc
and
movs
cmp
cmp
inc
add
ins
aad
into
int3
sub
mov
dec
dec
or
les
adc
jmp
out
jbe
mov
jge
mov
jo
dec
push
pop
pop
mov
pop
push
jb
enter
and
pop
mov
and
jns
es
xor
sbb
xor
daa
jne
ins
pop
inc
out
sub
cmps
xchg
pusha
add
data16
cmp
pop
ud2
inc
and
ret
cli
mov
xor
push
retf
test
sub
push
jmp
jo
fsub
dec
push
push
movs
rol
ret
mov
pusha
sbb
idiv
dec
jl
imul
mov
mov
pushf
lahf
into
pop
mov
scas
(bad)
out
push
(bad)
popa
inc
sbb
xor
sub
mov
jecxz
jmp
gs
jl
pop
push
scas
jns
jg
test
xor
ds
daa
pop
mov
cmp
inc
inc
mov
adc
pop
jbe
pushf
xor
stos
fucomi
jmp
push
outs
addr16
jnp
cmc
fwait
xchg
in
addr16
bswap
mov
push
xlat
or
xor
push
cmp
xor
jbe
xchg
inc
and
stos
je
addr16
push
outs
or
sbb
pop
ss
icebp
les
adc
fwait
add
jnp
aaa
xchg
xor
push
mov
mov
popa
xor
sbb
repz
sbb
sub
adc
pop
das
loop
push
mov
repnz
add
sbb
cld
test
mov
inc
xchg
repnz
mov
sub
xchg
stos
pop
mov
pusha
daa
mov
neg
ds
mov
in
test
inc
call
add
mov
icebp
mov
fldcw
mov
inc
and
cmp
popf
int3
mov
fstp
retf
jnp
repnz
mov
aam
push
inc
bound
mov
xor
inc
add
enter
cmp
pop
pop
mov
jmp
enter
mov
rol
push
adc
sbb
or
and
xor
jmp
ins
pop
mov
dec
mov
in
xor
or
in
hlt
xor
and
cmp
std
nop
(bad)
mov
and
in
aad
outs
test
mov
sub
sbb
xchg
iret
or
pushf
les
xor
mov
jnp
pop
in
push
pop
push
lock
ins
sub
lods
jno
inc
das
mov
jmp
arpl
mov
cmps
pop
xchg
test
add
xor
(bad)
pop
and
iret
adc
mov
mov
pop
out
xchg
and
inc
dec
xor
mov
mov
mov
mov
pop
adc
sbb
cmp
xchg
call
sbb
or
out
popa
mov
fldenv
sar
cli
cmp
test
mov
pop
jmp
jle
cli
or
lahf
mov
arpl
pop
dec
inc
cld
arpl
or
arpl
retf
pushw
fwait
jecxz
cli
cmp
push
pop
adc
cmps
test
xor
scas
shl
mov
sub
mov
or
call
xchg
mov
outs
jmp
ins
xchg
retf
out
icebp
sar
sbb
int3
ins
call
movs
lods
push
adc
sbb
ret
sub
mov
jbe
adc
jmp
enter
add
inc
cwde
sbb
add
mov
cmp
add
and
je
ss
xor
sbb
xchg
xchg
dec
jno
cmp
jg
pushf
test
pusha
sahf
jmp
inc
hlt
cmp
test
div
out
jmp
add
jecxz
popa
push
and
mov
in
in
test
adc
or
sbb
adc
stc
push
mov
or
add
clc
xchg
xchg
and
iret
stc
mov
push
mov
mov
stos
stos
jnp
or
loope
or
cwde
cmps
push
out
sbb
add
dec
xor
idiv
dec
int
jecxz
scas
cmps
in
fs
jno
not
push
ret
xchg
repz
stos
callw
xor
cmps
adc
pushf
cs
call
ins
xchg
or
ins
push
enter
mov
cdq
sub
or
push
cmp
mov
mov
repz
adc
dec
es
shl
cwde
dec
push
adc
pop
out
push
dec
xchg
push
add
popf
gs
sub
lahf
aam
add
fst
dec
sub
cmp
xchg
mov
imul
cli
dec
loop
or
cmp
retf
ins
pusha
push
rol
popa
mov
sbb
jae
gs
inc
cmps
push
xchg
call
aaa
call
jne
adc
arpl
mov
or
adc
imul
ret
xchg
and
cmp
pop
sti
dec
sub
ja
je
mov
jle
xchg
ret
or
rcr
test
inc
mov
push
leave
dec
repnz
jp
test
mov
dec
or
fsubr
xchg
sahf
xor
mov
sbb
fcomp
cmp
std
lods
pop
ins
push
arpl
inc
add
mov
mov
into
scas
mov
mov
scas
dec
and
adc
mov
push
jl
push
mov
int
adc
out
xor
dec
xor
inc
xchg
iret
jo
cmp
bound
jg
and
mov
cmps
push
and
or
inc
fld
ja
call
sub
in
add
aaa
test
xor
(bad)
cs
out
bound
sub
shl
push
sub
retf
or
in
outs
pop
out
enter
jns
dec
ret
pop
ja
ins
sub
xlat
add
jge
sub
ret
lahf
retf
sbb
xor
in
xchg
xor
jmp
idiv
test
scas
adc
cmp
sub
fdivp
and
data16
enter
call
push
movs
sub
mov
loope
idiv
push
cmp
mov
sti
sbb
(bad)
retf
sbb
imul
or
bnd
(bad)
test
pop
inc
repz
xchg
sbb
push
(bad)
loopne
iret
call
xchg
pop
sub
daa
lahf
mov
pop
pop
or
mov
adc
xchg
fwait
pop
outs
push
mov
push
xor
nop
dec
and
mov
repnz
xchg
ja
dec
adc
imul
push
repz
adc
mov
pushf
pop
inc
test
cld
add
out
cmovbe
cwde
das
cmp
shr
jmp
in
add
mov
cmp
stos
(bad)
ins
in
pop
push
push
test
jmp
and
add
imul
and
fs
push
ror
lock
mov
add
xchg
lahf
aaa
fstp
jbe
sub
je
mov
mov
out
test
popf
lods
sub
push
mov
jb
cld
(bad)
stos
into
pop
lahf
adc
push
fsubr
fidivr
jne
cdq
fdiv
jb
retf
pusha
test
sbb
cli
xchg
jb
xchg
and
pop
popf
jae
cmovns
daa
and
xor
out
imul
nop
fxam
loopne
test
sbb
or
fwait
stc
pop
add
xchg
in
sbb
push
inc
stc
xor
or
(bad)
dec
iret
xchg
adc
stos
mov
cmps
jne
ds
pop
adc
mov
loopne
das
popa
iret
imul
push
add
mov
mov
cld
fild
jecxz
test
retf
xor
or
push
or
and
push
and
lahf
std
pop
arpl
sbb
xor
pop
or
inc
sub
ins
das
sar
mov
lods
neg
or
or
loopne
xor
jmp
iret
or
push
mov
lods
popa
rol
push
jp
pop
adc
jno
lods
pushf
mov
jmp
inc
xor
movs
push
ins
(bad)
(bad)
jne
and
fbld
shr
or
or
ins
dec
fmul
sub
mov
repz
or
pop
jo
xchg
mov
xchg
sbb
aaa
jmp
jecxz
push
push
mov
cmp
pop
sahf
cs
mov
sub
add
push
leave
xor
push
sahf
out
sub
inc
les
je
jnp
cmp
mov
(bad)
pushf
pop
ja
add
idiv
ret
push
adc
jmp
repnz
push
adc
lock
scas
jl
mov
out
into
dec
cld
jmp
sbb
mov
adc
cmp
clc
jmp
xchg
test
js
and
push
jmp
push
pop
adc
xchg
pushf
push
pop
outs
ins
mov
xchg
sbb
or
shl
push
test
cmp
fadd
in
adc
cs
xchg
loop
scas
aam
mov
or
push
aaa
cmps
aaa
xor
int
and
cmp
add
cdq
cli
mov
stos
dec
loop
addr16
jmp
dec
and
xchg
xchg
and
pop
dec
mov
xchg
out
adc
dec
out
fdivr
repz
jl
cmps
sub
ret
and
xchg
je
inc
mov
fimul
adc
imul
stos
in
and
faddp
mov
popa
mov
in
xor
ret
add
iret
ds
adc
inc
shr
jp
xchg
stos
(bad)
jmp
sbb
fisttp
das
addr16
sti
call
mov
mov
dec
ja
xor
ins
shl
cmp
xchg
xor
idiv
retf
jbe
mov
cmp
adc
push
test
push
adc
lock
ret
mov
xchg
ret
cmps
rcl
loopne
and
push
call
cmp
or
js
or
retf
dec
dec
jp
iret
xor
sbb
cmp
inc
and
loope
mov
jbe
adc
cmps
pop
xchg
or
aad
push
jno
(bad)
sahf
inc
fmul
popa
(bad)
imul
jns
xchg
adc
outs
ror
pop
cmp
mul
push
int3
popa
mov
(bad)
mov
cmp
pop
pop
cmc
psubq
das
mov
dec
lock
push
aas
dec
or
rcl
aas
cmps
inc
jmp
mov
jns
cwde
clc
xchg
sbb
or
mov
pop
out
inc
add
cli
aaa
cmp
push
sbb
fmul
test
fisttp
xor
dec
adc
sub
loope
scas
push
and
popa
ret
cmp
push
add
test
pop
ins
push
js
xchg
in
xchg
in
out
mov
push
push
dec
dec
ds
lods
stos
or
cmp
fcom
nop
sub
stos
out
div
sbb
adc
dec
pop
mov
fstp
loop
and
daa
mov
not
jno
rcr
out
addr16
and
jp
shl
inc
jb
mov
xchg
popa
or
cmp
inc
fild
test
dec
add
call
xchg
test
mov
stos
pop
scas
cmps
dec
movs
mov
dec
pop
cmp
leavew
pop
jb
cmp
cmp
mov
xor
lods
test
loopne
pcmpgtb
sbb
arpl
xor
shr
adc
mov
pop
xchg
call
les
push
sbb
add
jo
xchg
mov
into
mov
push
dec
enter
jno
out
sar
clc
clc
inc
sub
cs
mov
fidiv
sahf
pop
push
scas
push
mov
xchg
push
mov
imul
sbb
cmp
inc
dec
jl
rcl
add
add
clc
push
mov
iret
aam
out
mov
push
or
pop
aaa
(bad)
out
sub
sub
sbb
sub
mov
adc
je
stos
bound
jp
jecxz
cdq
sbb
push
dec
popf
push
push
adc
(bad)
fs
wrmsr
cmps
cld
rcl
mov
(bad)
in
push
sub
add
lods
sti
das
fist
jle
ins
ins
pop
shl
leave
clc
adc
mov
jg
add
sub
fld
add
push
ret
cmp
aaa
clc
mov
dec
imul
in
inc
aam
push
fld
add
sti
lods
retf
out
mov
cmp
fsubp
mov
mov
(bad)
jmp
adc
cmp
dec
adc
or
cwde
mov
adc
adc
jle
pop
mov
dec
(bad)
lock
fs
and
rcr
pop
cmp
daa
push
addr16
pop
mov
inc
push
ficom
and
in
dec
ds
push
push
sbb
mov
vpandn
inc
dec
jmp
cli
adc
jo
das
mov
push
aad
mov
and
adc
cmps
loope
inc
and
pop
ss
(bad)
fldenv
and
xchg
mov
fld
mov
xchg
and
xchg
pop
jo
sbb
test
mov
pop
inc
(bad)
data16
fadd
fdivr
retf
std
push
jle
xor
les
pop
inc
mov
imul
adc
out
mov
test
cmps
loope
xor
out
inc
lahf
pop
cmps
adc
jle
jmp
mov
dec
pop
xchg
movups
fsubr
lahf
xlat
aaa
data16
jle
test
push
clc
addr16
pop
mov
push
addr16
outs
lds
dec
repz
pop
cmp
jmp
or
out
(bad)
rol
out
cmp
jo
(bad)
jno
or
xchg
sbb
push
sub
(bad)
adc
dec
pop
es
out
or
mov
arpl
adc
js
leave
inc
dec
lea
in
pop
sbb
sbb
leave
add
out
jge
in
out
pop
push
adc
inc
dec
push
daa
pop
mov
cld
aad
test
mov
jmp
pop
lods
xor
shl
rcr
xor
sbb
loope
cmc
std
jmp
test
shr
cmp
pushf
and
push
jp
xor
cwde
leave
aam
lahf
mov
ds
push
add
cwde
sbb
adc
jge
xchg
jns
dec
add
mov
ret
and
fs
pop
movs
jns
xchg
add
mov
xor
sbb
ret
(bad)
in
loope
jbe
movs
xor
sbb
jecxz
push
and
(bad)
cli
cmp
dec
mov
rcr
jle
leave
push
mov
mov
sbb
mov
pop
mov
pop
maskmovq
neg
cmp
xchg
pop
sub
sahf
mov
mov
push
stc
add
(bad)
mov
push
push
pop
ins
jmp
mov
mov
(bad)
loop
popa
imul
and
mov
pop
loop
pop
jle
cmps
jg
or
push
xchg
sahf
test
pop
push
push
cmp
retf
lea
xchg
mov
inc
pop
inc
add
xchg
or
popa
pop
mov
xchg
movs
cld
mov
adc
xor
push
push
fwait
imul
sbb
das
cs
and
sahf
xchg
pusha
popa
xchg
or
or
sar
pop
nop
cmps
pop
add
sub
out
add
outs
or
cld
fisub
push
jle
lahf
jno
xchg
ret
add
jecxz
and
mov
sbb
fild
add
test
push
pusha
mul
add
cmp
inc
das
aam
push
add
aad
push
fcmovne
out
cdq
iret
fistp
fldcw
call
mov
arpl
jns
bound
ret
mov
ret
adc
lods
daa
dec
je
mov
push
sbb
adc
ret
in
adc
push
js
jo
in
adc
add
retf
push
inc
fcom
nop
dec
push
out
jmp
jmp
mov
inc
aad
adc
pop
outs
mov
cmp
or
push
jae
dec
daa
sbb
ins
cmp
arpl
push
xor
(bad)
out
mov
enter
sar
loop
mov
cmp
cmp
popa
cmp
hlt
jl
movs
mov
sahf
dec
xchg
call
adc
pop
lods
ror
scas
test
cmps
(bad)
stos
dec
sti
jmp
cmp
aad
rcr
mov
jmp
leave
xchg
out
shr
hlt
test
mov
cld
mov
mov
(bad)
or
leave
sbb
popa
aaa
pop
shl
push
or
xchg
call
xor
dec
xor
sbb
fcom
mov
(bad)
rcl
inc
mov
cmps
sub
fadd
outs
jge
xor
js
mov
jge
iret
inc
(bad)
(bad)
adc
mov
mov
push
xchg
lds
jb
adc
mov
sbb
shl
adc
or
popa
out
adc
mov
xchg
push
lods
out
retf
jg
ret
mov
jb
sub
pop
cmp
out
rol
stc
sub
jmp
xor
mov
xchg
daa
popa
(bad)
dec
das
xchg
and
jmp
push
loopne
mov
xor
fbstp
(bad)
mov
push
pop
mov
pop
std
in
inc
ja
test
sahf
popa
adc
xchg
sub
shl
mov
jg
es
lahf
push
sbb
out
push
mov
stos
sbb
jnp
pop
cli
xchg
stos
dec
pop
int
xchg
inc
sar
xchg
pop
test
mov
cld
arpl
out
(bad)
fmulp
and
rol
mov
add
repnz
nop
cdq
jmp
add
xchg
data16
mov
add
ins
mov
push
ss
jae
int
dec
push
push
add
mov
cmp
adc
xchg
mov
rcl
rol
shl
inc
fs
fistp
movs
lods
xor
jg
fisubr
test
movs
mov
ins
ror
sub
mov
pop
mov
out
movs
cmps
pop
mov
iret
sbb
inc
sub
xchg
scas
and
repz
and
xchg
xchg
pop
jno
inc
pop
dec
jno
cwde
(bad)
push
(bad)
int
or
xchg
cmps
cmp
jbe
dec
mov
ins
adc
jb
inc
and
and
(bad)
fsubr
pop
sub
cmp
add
dec
adc
sub
je
fild
jmp
add
aas
cli
dec
(bad)
and
inc
cld
xor
das
test
ss
lea
into
sbb
sub
fdivr
shr
movs
inc
pushf
bound
mov
lock
adc
jae
push
xor
pushf
cld
or
jmp
sbb
jns
mov
add
sbb
popa
cmp
or
lea
xor
jo
mov
and
mov
out
pusha
mov
hlt
fsubr
push
inc
fisubr
ror
bsf
add
xor
jge
and
pop
retf
mov
and
or
sub
lock
push
mov
mov
mov
rcl
das
or
std
ja
cmps
popf
adc
jecxz
and
dec
dec
leave
pop
xchg
jne
leave
sbb
aaa
push
cmps
loopne
cmc
aas
adc
push
call
mov
test
rcl
mov
mov
lods
pop
jae
adc
add
movs
leave
push
pop
ins
mov
sub
lods
and
in
xchg
sbb
xor
xor
or
(bad)
push
adc
inc
in
popf
mov
popa
ss
pop
dec
jp
jns
xor
xor
pop
fadd
fs
mov
sub
pop
mov
retf
ret
mov
jne
outs
loop
pop
mov
jg
mov
or
hlt
jecxz
imul
mul
jmp
fldenv
sub
adc
repnz
out
es
(bad)
aam
sti
push
push
add
sti
xor
jmp
mov
xchg
loopne
and
cmp
rol
mov
pop
loope
call
dec
scas
push
mov
push
and
sub
and
pushf
push
pop
mov
push
mov
repnz
popa
shl
jo
inc
movs
adc
pmaxsw
lds
sub
ins
ret
fwait
imul
je
push
shl
lock
dec
out
clc
push
mov
mov
(bad)
mov
xchg
shl
inc
clc
daa
shl
or
outs
mov
inc
or
pop
and
and
out
dec
adc
jle
cmc
adc
dec
popf
fsub
sbb
xchg
ins
mov
dec
cmp
dec
jl
jecxz
add
jmp
xchg
sub
xlat
or
inc
dec
(bad)
cmps
fdivp
(bad)
iret
cmp
push
pop
ret
addr16
cmp
(bad)
ds
int3
movs
fs
adc
jo
aad
cmp
movs
mov
adc
lea
iret
retf
les
jne
push
rcl
mov
ins
fld
sub
popf
pop
aad
cmp
addr16
ins
mov
sbb
sub
cmp
sub
mov
inc
mov
imul
adc
inc
jnp
jnp
jmp
loope
sub
in
pop
jbe
loop
outs
push
sbb
dec
jmp
mov
aas
pop
dec
call
sbb
cmp
and
rol
fdivr
cmp
mov
(bad)
lods
int3
xchg
fdivp
fwait
(bad)
icebp
call
out
repz
std
mov
cmc
sbb
fldcw
stc
out
and
out
fs
mov
xchg
adc
gs
inc
fdiv
cmp
pushf
in
and
dec
psubusb
jns
mov
inc
or
(bad)
pop
fistp
mov
pop
out
jl
pop
push
mov
lock
mov
dec
(bad)
dec
jae
cmps
dec
int3
xor
mov
popf
retf
push
sub
pop
es
inc
dec
adc
sbb
mov
repnz
mov
ret
jge
(bad)
fst
xor
(bad)
or
and
xor
cmc
mov
not
or
retf
xor
mov
inc
pop
mov
jb
xchg
data16
movs
fld
inc
ret
cmps
into
push
xor
fst
xchg
sti
pop
aam
dec
(bad)
jae
cli
xor
sub
sub
test
inc
pop
aas
pop
dec
data16
add
enter
addr16
pop
inc
xchg
scas
dec
out
and
mov
push
and
adc
stos
mov
sbb
cdq
rol
div
mov
xor
cli
ins
push
lods
add
repnz
loopne
dec
jl
nop
cmps
jge
mov
add
fld
fcmovnu
rol
sbb
and
xchg
pop
das
adc
push
clc
jae
mov
mov
add
cdq
sbb
repnz
aas
push
call
mov
mov
xchg
or
test
arpl
jmp
jne
inc
pop
xchg
shl
dec
test
xchg
pop
push
dec
mov
pop
cwde
shl
out
outs
popa
sub
sub
test
ror
repz
dec
sub
retf
dec
xchg
test
mov
cdq
cmp
mov
push
push
mov
inc
jmp
rol
loope
and
and
and
inc
cmp
cdq
gs
jle
add
movs
test
outs
inc
mov
fwait
sub
sub
sbb
mov
mov
sub
test
stos
adc
adc
jns
mov
pop
int3
cwde
jecxz
push
sub
fs
jmp
ds
movs
dec
mov
push
sti
mov
and
fldcw
xor
int
dec
lods
in
repz
test
jb
mov
mov
xlat
sar
pop
add
sbb
adc
inc
retf
jbe
jns
out
push
pusha
stos
(bad)
sub
ror
out
shl
cmp
loop
fistp
add
out
stos
or
cmp
push
popf
mov
dec
in
js
jne
or
jb
xor
ins
jge
jnp
test
jno
adc
das
out
jno
or
repnz
sub
shl
loope
dec
stos
jge
mov
dec
(bad)
enter
dec
cmp
jecxz
xchg
jmp
jae
(bad)
push
push
ret
cdq
int
push
add
sub
lahf
or
cmp
xor
pop
lahf
jne
popa
mov
adc
aas
sbb
(bad)
fnsave
dec
push
rol
shl
sbb
test
aam
adc
gs
mov
fs
lods
push
popa
popa
inc
push
push
push
or
loopne
aas
retf
inc
cmc
in
inc
or
mov
mov
std
in
and
js
or
cs
in
sbb
or
add
add
scas
popf
jnp
in
cmp
sub
xchg
sar
je
sbb
pop
fbstp
movs
cmps
add
scas
jg
dec
lods
or
ret
xor
ficom
clc
xchg
push
mov
or
neg
and
popf
sbb
inc
in
or
and
xchg
std
cmp
and
outs
pop
(bad)
stc
call
mov
push
out
stos
sahf
jmp
dec
in
inc
imul
shl
mov
cld
popf
call
and
cmp
mov
mov
div
cdq
js
push
mov
sahf
xchg
push
ss
int3
cli
mov
mov
lea
jp
xchg
jmp
inc
bound
and
ret
mov
add
jo
mov
test
mov
outs
jmp
inc
mov
(bad)
jg
je
pop
inc
(bad)
jmp
push
mov
inc
aad
cmp
aad
daa
retf
(bad)
test
dec
int3
enter
push
scas
inc
xor
retf
scas
jbe
mov
sbb
mov
int3
sbb
sar
enter
cli
inc
adc
mov
fwait
pop
inc
aam
jl
sub
fstp
xor
dec
movs
xchg
dec
cmp
jmp
add
cmp
les
(bad)
jmp
(bad)
push
push
rol
push
aam
adc
imul
push
repz
jnp
pop
adc
pop
cdq
jg
lea
mov
cs
sahf
mov
imul
sub
stos
xchg
repz
pop
pop
push
xchg
pop
dec
and
xchg
loop
clc
and
fdiv
cmc
dec
mov
cs
dec
inc
cs
(bad)
jnp
jecxz
mov
push
sub
push
dec
adc
pop
and
add
adc
stos
aad
bound
sub
ss
cmp
outs
xchg
mov
jno
jns
push
arpl
addr16
mov
adc
mov
dec
pusha
retf
dec
repnz
inc
out
mov
fbld
lds
push
xchg
aam
xor
hlt
(bad)
lods
cmp
cmp
xchg
mov
call
pop
push
cmp
add
xchg
mov
dec
lods
rol
dec
mov
jmp
pop
std
inc
hlt
dec
lds
adc
pop
(bad)
ins
pop
mov
inc
call
mov
addr16
dec
ror
dec
nop
lds
movs
test
(bad)
cmp
pop
sub
and
push
push
dec
sub
adc
pushf
out
and
dec
fidiv
retf
hlt
xchg
push
lods
adc
ror
and
add
sbb
cli
imul
(bad)
ds
xor
cs
cdq
sbb
cmc
jecxz
test
dec
sub
idiv
call
int
sar
loopne
test
pop
pop
push
in
fldenv
cwde
mov
sbb
sbb
ficom
mov
scas
inc
pop
push
pop
int
jle
mov
(bad)
pop
in
fs
imul
test
mov
ret
ins
rcr
cmp
in
cmp
mov
test
xchg
ret
sahf
mov
inc
dec
jno
lea
hlt
mov
jb
lods
mov
(bad)
icebp
lock
rcr
jmp
shr
xchg
cmp
lock
xor
mov
cli
jno
mov
loopne
push
cmp
adc
mov
add
cmp
inc
xchg
sbb
adc
dec
pushf
lea
inc
pop
lea
mov
mov
xchg
imul
(bad)
and
pop
jg
leave
dec
repnz
jp
int3
cmp
pop
popa
push
ins
aaa
push
push
mov
add
fdivr
push
mov
cmps
pop
fucomi
(bad)
ffreep
xchg
inc
int
jbe
add
imul
fistp
sahf
adc
dec
popa
cwde
loopne
pop
cmp
cmp
stos
shl
mov
fimul
xchg
add
pop
stc
fiadd
mov
cmp
add
das
xchg
dec
(bad)
retf
jmp
mov
call
test
sbb
fs
retf
adc
xchg
mov
or
cmps
and
sti
popf
std
leave
enter
arpl
inc
sbb
xor
repnz
retf
mov
cmp
xchg
push
dec
dec
scas
adc
(bad)
push
or
inc
inc
imul
dec
call
ja
jns
retf
jns
test
inc
fldenv
xchg
mov
mov
jmp
outs
xchg
(bad)
push
repz
sub
cmp
test
aad
mov
cld
inc
fisub
jmp
and
add
push
pop
jbe
ret
mov
js
(bad)
add
push
int
push
nop
cmps
clc
jae
sbb
(bad)
ins
pop
push
mov
fisttp
lea
in
test
aaa
imul
mov
ins
dec
dec
imul
pop
add
popa
not
jecxz
or
(bad)
fcom
(bad)
(bad)
xchg
in
adc
xchg
iret
test
mov
scas
clc
repz
cld
push
out
and
and
mov
xor
mov
fcomp
fst
stos
cli
das
sti
scas
mov
les
xchg
mov
dec
xchg
(bad)
and
sub
adc
jmp
idiv
push
stc
push
cmps
out
mov
fmul
aaa
shr
and
outs
ret
sti
loop
sbb
(bad)
xor
loope
jno
(bad)
leave
sub
scas
cmc
inc
and
add
jae
sbb
sub
cwde
sub
pop
sub
bound
add
repnz
fdiv
mov
jnp
mov
sbb
std
push
cs
mov
ss
repnz
cmp
rcl
push
fsubr
cmp
shl
enter
hlt
outs
daa
dec
pop
add
dec
mov
js
mov
jb
nop
fcmovnb
mov
jg
mov
hlt
outs
jbe
shr
or
adc
push
push
pop
clc
ss
fsub
add
dec
adc
repz
pop
call
adc
mov
faddp
add
mov
sbb
mov
lods
jb
jmp
sbb
add
add
sbb
sbb
(bad)
cmp
xchg
or
sbb
mov
movs
(bad)
jmp
cmp
movaps
sbb
push
ret
sub
addr16
jmp
xchg
xor
add
test
or
push
pop
add
fsub
push
fst
in
addr16
sbb
mov
sbb
addr16
sbb
arpl
jmp
dec
inc
push
push
mov
fimul
mov
jns
jmp
mov
mov
and
std
sbb
adc
and
and
jp
retf
outs
cmp
xor
cmps
data16
pop
lods
pop
arpl
scas
int
fucomip
and
xchg
dec
and
jmp
jnp
xchg
fs
fsubr
jo
add
mov
std
enter
int3
inc
pop
fldenv
int3
shl
loopne
sbb
jne
pop
jnp
mov
inc
leave
cwde
mov
add
daa
aad
das
daa
(bad)
mov
and
ja
rol
fsubr
aas
push
pop
aas
lea
jg
add
mov
ds
(bad)
dec
and
push
shr
ins
xchg
dec
lds
daa
icebp
cmc
call
and
in
jmp
test
nop
xor
cmp
xlat
xor
add
(bad)
cmp
jmp
or
pop
in
or
into
jecxz
aam
pushf
test
mov
pusha
cli
cmc
or
(bad)
mov
fsub
test
dec
inc
sub
adc
mov
add
aad
xor
mov
call
out
and
scas
or
(bad)
sub
mov
je
iret
movs
fld
jae
sub
ror
retf
movs
popa
add
push
push
xchg
js
cld
daa
xor
mov
adc
pop
push
sub
enter
mov
push
repz
je
stc
test
(bad)
adc
push
mov
inc
push
stos
ret
int3
adc
sub
lahf
lds
test
cmps
(bad)
cmps
cld
in
mov
rcl
sub
retf
loopne
or
push
jp
loopne
xchg
cmp
shl
outs
mov
imul
test
aaa
pop
pop
mov
jmp
add
sbb
sbb
cdq
dec
fnsave
push
mov
adc
(bad)
rol
out
dec
cdq
stc
push
and
mov
jne
jl
push
cmp
imul
outs
icebp
aam
sti
enter
mov
mov
pop
es
fld
cmps
jmp
imul
sbb
inc
mov
(bad)
mov
xor
fist
pop
leave
add
fisttp
(bad)
loope
enter
pop
cld
cld
jl
cli
repz
add
loope
popf
iret
lahf
push
clc
jle
lahf
fdivr
jo
jbe
xor
in
out
jl
push
neg
outs
pop
mov
aas
inc
push
add
jge
jle
jmp
stc
addr16
mov
push
adc
xchg
(bad)
xchg
fmul
push
and
sbb
rcr
addr16
pop
adc
mov
inc
jmp
pop
ret
fs
sub
and
pop
xchg
arpl
les
or
aam
test
inc
(bad)
or
lods
mov
out
movs
ror
cmp
jo
(bad)
cmp
xor
or
aaa
cmp
push
mov
sbb
inc
adc
xor
call
adc
dec
(bad)
in
pusha
push
cmp
repnz
jp
inc
jnp
scas
fnstsw
inc
xor
ficom
test
(bad)
ins
sub
adc
pop
dec
jmp
scas
pusha
and
jl
lea
inc
test
xchg
push
fmul
jp
fsubr
loope
jb
aaa
or
lea
je
inc
pop
sub
add
jp
lds
enter
xchg
and
sbb
data16
leave
loopne
jp
mov
out
js
mov
stc
mov
adc
inc
(bad)
out
jnp
mov
xor
imul
sub
pop
mov
pop
lea
adc
retf
hlt
std
cmps
sub
es
hlt
retf
arpl
xchg
arpl
push
sub
adc
xor
fstp
out
jg
xchg
out
fmul
test
cdq
mov
sar
adc
sbb
sbb
sbb
in
shl
mov
aas
ret
add
jno
movs
(bad)
pushf
mov
sbb
jae
iret
mov
aad
push
(bad)
push
(bad)
mov
shl
popf
idiv
xchg
add
icebp
mov
push
jo
jmp
fadd
enter
jne
pop
addr16
fld
xchg
pop
loop
cmp
outs
pop
adc
mov
xchg
add
cli
std
(bad)
(bad)
loope
and
(bad)
add
jmp
cmps
test
outs
out
xor
sbb
sbb
icebp
rcl
jo
xchg
imul
push
mov
fistp
push
mov
jg
dec
in
xchg
mov
ret
fs
and
es
pushf
mov
in
bound
cmp
inc
aaa
and
jne
and
pop
es
xchg
adc
lea
cmp
outs
daa
pop
mov
mov
sub
(bad)
pop
rcl
cmp
mov
xor
das
dec
pop
mov
cmps
sub
ficom
xor
data16
dec
stos
add
cdq
xchg
test
(bad)
pop
fstp
pop
daa
mov
fstp
sbb
mov
mov
dec
or
mov
jecxz
out
(bad)
daa
into
mov
sar
scas
dec
mov
pop
mov
(bad)
dec
addr16
xchg
inc
in
xchg
jmp
pusha
rcl
push
sar
fwait
mov
push
mov
adc
or
scas
aaa
mov
out
xor
clc
mov
fwait
cli
xlat
xchg
dec
icebp
lds
int3
push
push
dec
inc
fstp
retf
lds
adc
repz
sub
enter
fild
sub
aad
inc
jns
sub
add
mov
xchg
ins
retf
and
not
xchg
in
ret
cmps
rol
or
fist
ret
dec
push
popa
les
mov
sub
pop
jmp
test
sub
out
jecxz
mov
pop
dec
sbb
pusha
xchg
fidiv
std
mov
pop
push
sbb
(bad)
cmp
mov
dec
arpl
add
sub
popf
adc
adc
sbb
mov
jo
pop
pop
mov
(bad)
pop
cmp
dec
sbb
gs
retf
test
cmc
mov
push
lods
xchg
dec
es
pop
push
ins
add
xchg
add
fld
fidivr
lahf
xlat
add
adc
sub
adc
and
jno
jbe
dec
jl
sub
das
mov
pop
(bad)
int
sahf
or
xchg
sbb
jmp
mov
add
lds
outs
outs
mov
(bad)
push
das
push
sub
cmp
sub
ret
fwait
movs
popf
in
mov
fistp
mov
xor
cld
repz
pop
test
sbb
lea
jbe
cs
dec
xchg
retf
add
neg
adc
dec
cmp
push
pop
rcl
xchg
or
call
add
and
sub
int
and
and
pop
or
pop
adc
lock
jne
or
das
retf
push
ds
popf
jmp
push
mov
ss
push
fiadd
add
imul
ss
popf
fsubr
sbb
jno
aaa
xchg
pop
adc
fidiv
addr16
mov
(bad)
cli
inc
fiadd
stos
mov
aaa
or
dec
(bad)
iret
adc
minps
dec
push
or
dec
pop
imul
dec
jne
rol
bound
imul
add
xor
sti
idiv
leave
iret
mov
xor
push
xchg
retf
fstp
aam
aaa
mov
add
add
aaa
in
sub
push
das
xor
addr16
cmp
mov
and
retf
sbb
dec
int3
jb
jnp
imul
mov
mov
jnp
call
ins
lds
pop
cmps
sbb
idiv
in
fcmovu
aam
imul
adc
retf
xor
clc
push
into
loope
daa
push
je
movs
and
ins
inc
(bad)
pop
sbb
ja
xor
xor
arpl
jne
adc
ret
jne
cmp
loope
out
fxch
(bad)
pop
je
test
pop
ficom
xor
dec
daa
or
aad
outs
test
jle
movs
in
jg
shl
jl
or
lds
imul
jg
aam
pop
das
repz
clc
jno
push
rol
sub
jecxz
test
out
xchg
int3
add
pop
fs
hlt
ins
xor
xor
mov
in
inc
and
mov
test
pop
into
cmp
cmp
inc
adc
sub
mov
cmp
pcmpeqd
mov
sub
(bad)
and
cmp
inc
fld
jg
push
retf
lahf
xchg
cmp
fcomp
mov
enter
xchg
push
adc
mov
ret
push
xchg
mov
movs
inc
sub
mov
xchg
mov
pop
ins
add
addr16
and
movs
xchg
scas
rol
cmps
jns
into
arpl
and
cmp
in
scas
(bad)
push
mov
adc
call
int3
movs
mov
mov
pop
add
jae
je
and
dec
inc
add
popf
add
and
dec
mov
out
aas
fwait
data16
pop
movs
add
ret
pop
call
push
add
hlt
pop
inc
dec
push
mov
popf
out
lock
mov
call
xchg
daa
ja
call
cmps
dec
nop
fsub
jle
and
push
fisub
mov
js
fistp
add
bound
adc
mov
outs
add
rcl
repnz
cdq
push
clc
rcpps
inc
mov
push
jp
jmp
sub
ror
fiadd
adc
inc
das
jb
clc
sub
cwde
cmp
inc
push
sahf
js
or
push
cmp
or
cmps
stos
jnp
jg
jnp
inc
outs
aaa
cmp
inc
iret
jmp
jne
mov
js
inc
sbb
rcr
(bad)
cmps
sti
call
mov
enter
jb
pop
sub
std
leave
push
imul
stc
inc
cwde
je
xor
jnp
rcr
sub
cdq
push
cs
stos
std
jmp
add
adc
aaa
cmp
jae
into
adc
xlat
sub
xor
neg
leave
sahf
es
jnp
cld
mov
push
mov
mov
les
xor
sub
outs
and
inc
add
xchg
pop
sub
jnp
pop
sar
test
std
or
das
lods
imul
scas
out
xchg
push
jg
(bad)
mov
inc
dec
pop
mov
pop
mov
mov
ret
test
jb
pop
inc
repz
das
xchg
(bad)
sahf
aam
ins
les
or
cli
loopne
adc
inc
cli
sahf
loopne
mov
in
(bad)
popa
xor
imul
(bad)
jle
in
mov
xor
fisttp
inc
sub
sbb
xchg
rol
fcmove
cmp
ror
pop
jmp
test
jmp
test
out
sub
sbb
push
lods
daa
mov
stos
mov
cmp
arpl
xchg
jl
dec
xchg
cs
push
pop
jno
lock
je
sub
and
rcl
stos
in
add
xchg
out
or
ins
in
push
imul
sti
mov
dec
call
mov
and
arpl
int
(bad)
jmp
sbb
call
retf
aam
mov
arpl
(bad)
jge
pop
fdivrp
test
pop
add
xchg
adc
mov
int
mov
xchg
sbb
mov
pop
add
and
push
xor
push
aad
aad
xlat
mov
sbb
ins
(bad)
shl
mov
push
ret
and
sbb
xor
sub
fdivr
inc
or
cs
sub
mov
shr
and
or
xor
xchg
and
dec
push
xchg
fsub
mov
ficomp
inc
xor
inc
cmp
push
sbb
sub
jle
outs
leave
push
cmps
inc
pusha
dec
inc
sbb
inc
inc
lods
leave
pushf
xchg
cmps
sahf
out
pop
ficom
pop
xchg
cmp
addr16
loopne
sub
in
paddd
jb
(bad)
loope
popf
pop
jmp
add
iret
fs
cmp
xor
cmc
and
mov
call
or
mov
pop
inc
xor
imul
ror
mov
push
inc
sub
cmp
outs
pop
push
ret
pop
add
push
xor
mov
push
pop
ret
jne
std
or
inc
mov
inc
mov
push
daa
xor
fst
inc
cwde
add
movs
sahf
gs
cmp
cli
sub
out
jnp
jg
hlt
mov
push
ret
movs
outs
cmp
mov
dec
repnz
clc
inc
sbb
fimul
inc
ss
pop
cdq
pop
loopne
or
pusha
jae
mov
mov
mov
jns
lods
jmp
ret
mov
sub
xchg
pop
sbb
les
call
mov
push
stos
lods
or
sub
stc
mov
mov
xchg
mov
xchg
xor
mov
icebp
hlt
pop
shl
aam
ins
ror
jmp
add
shl
adc
clc
xchg
pop
or
mov
or
out
push
mov
inc
cmp
inc
sti
push
push
movs
lods
mov
pusha
xchg
icebp
jns
fadd
pop
loopne
out
sbb
out
xlat
addr16
das
jnp
sub
jecxz
daa
test
and
loopne
push
loopne
imul
in
arpl
jp
pop
xchg
mov
pop
xchg
lods
mov
mov
or
pop
mov
scas
(bad)
xor
ret
aas
movzx
jno
mov
pusha
jno
cdq
sub
dec
jae
cmps
add
popf
loope
cmp
(bad)
call
je
int
dec
adc
mov
iret
inc
add
clc
call
repnz
scas
test
lock
(bad)
popa
mov
cmp
inc
add
ror
fisub
mov
inc
cmc
in
xor
imul
cli
add
call
dec
test
arpl
das
cmp
cdq
and
fld
mov
or
jbe
(bad)
test
inc
cdq
cmp
mov
xor
adc
movs
sbb
bound
pop
fimul
outs
in
mov
dec
xchg
mov
sbb
sbb
and
cmps
into
(bad)
inc
sti
(bad)
movs
jl
das
dec
dec
xor
int
movs
adc
daa
fs
jbe
pop
mov
enter
clc
xchg
daa
ins
leave
test
(bad)
cmp
int
cmp
xor
test
out
sbb
ret
ins
jae
push
pop
xor
in
sti
and
int
shl
mov
push
push
sub
mov
mov
mov
stc
imul
mov
jae
mov
push
ja
scas
pop
or
cli
jns
mov
lods
call
out
std
fwait
jge
pop
add
(bad)
and
xchg
lods
in
push
imul
stc
pop
and
dec
js
movs
das
fdivr
stc
cmc
xchg
jbe
jle
dec
pop
fmul
stc
mov
(bad)
or
sti
loop
sub
inc
sti
push
jecxz
dec
rcr
jns
jmp
leave
push
xchg
jns
je
imul
mov
dec
adc
xchg
cwde
add
icebp
mov
jle
jmp
cdq
jnp
pop
push
mov
sub
rdtsc
sbb
push
pop
es
mov
repnz
mov
mov
shl
inc
addr16
xchg
dec
mov
xlat
sub
dec
(bad)
jmp
or
daa
inc
test
imul
mov
mov
scas
scas
lds
or
jmp
je
jmp
iret
repz
mov
dec
adc
scas
test
mul
out
xchg
rol
sbb
pop
inc
fdivr
sub
mov
xor
test
xor
sahf
mov
or
adc
in
hlt
rep
pop
pop
jge
movs
fs
adc
in
stos
and
mov
aad
jmp
inc
pop
mov
add
inc
outs
jmp
test
lds
arpl
out
lods
or
popf
call
ins
pushf
cmp
jno
addr16
push
sbb
and
pop
jns
sbb
jno
fcom
mov
fidiv
sbb
adc
inc
dec
mov
or
inc
outs
pop
add
(bad)
push
pop
loop
mov
sub
mov
(bad)
pop
ffree
call
jge
mov
jb
(bad)
mov
push
fnstsw
lahf
push
jmp
bound
lods
out
cmp
test
outs
jb
jmp
inc
cmps
bswap
jne
imul
xor
les
repnz
lock
mov
or
add
sub
out
adc
in
pop
int
xchg
add
loopne
jno
sar
dec
scas
mov
xor
clc
lds
int3
xchg
retf
out
test
and
vpermil2ps
ficom
and
fcomp
cmc
cmps
pop
and
outs
js
scas
movs
imul
or
shl
mov
outs
and
jl
sti
lea
xchg
push
out
add
icebp
leave
xchg
fwait
dec
(bad)
out
mov
mov
jle
push
dec
mov
out
test
lea
jl
pop
xchg
add
mov
in
mov
mov
retf
mov
bound
(bad)
and
mov
push
dec
push
sbb
retf
sub
out
jecxz
inc
mov
dec
mov
dec
jns
addr16
scas
repnz
test
mov
inc
mov
jns
out
inc
rol
cmps
and
imul
add
sub
je
jmp
and
push
stos
icebp
adc
fsubr
add
xor
jp
call
test
pop
add
lahf
in
pop
test
dec
mov
dec
(bad)
adc
imul
in
test
loopne
dec
sbb
adc
lock
int3
retf
test
and
ss
pop
jmp
and
iret
in
in
test
jge
mov
ins
push
or
xlat
jecxz
cli
loop
data16
leave
outs
aaa
arpl
gs
mov
dec
xchg
mov
scas
push
std
popf
dec
push
fistp
mov
ret
sub
sbb
aad
in
aaa
pop
jnp
fs
mov
cli
scas
pslld
sub
or
repnz
sbb
jae
dec
xchg
popa
cld
push
push
ja
adc
aad
hlt
sub
es
push
mov
sti
adc
enter
scas
inc
adc
lahf
cmp
rep
sbb
sbb
add
icebp
adc
push
pusha
mov
sbb
(bad)
push
jmp
sub
or
xor
xor
stos
sub
lods
jb
cmps
in
pop
test
mov
enter
(bad)
push
jmp
(bad)
(bad)
ins
mov
mov
mov
mov
fwait
aas
clc
adc
dec
test
sbb
test
mov
mov
mov
dec
xchg
idiv
ds
push
mov
cwde
add
mov
xor
outs
arpl
xor
mov
nop/reserved
dec
mov
fcom
stos
call
sbb
xchg
mov
sbb
repz
mov
push
add
ja
cld
adc
movs
add
jge
jmp
in
inc
or
neg
pop
push
ret
xor
pop
(bad)
rcr
mov
loope
test
(bad)
movs
lods
rcl
stos
adc
inc
out
push
lods
loopne
jnp
mov
and
inc
fcom
jnp
push
pop
stc
outs
mov
jmp
(bad)
aas
scas
pushf
pop
dec
sub
lock
int
and
or
inc
int3
es
jae
repz
mov
std
jle
mov
jb
(bad)
idiv
pop
mov
(bad)
xchg
push
ds
movs
mov
fild
aaa
sbb
sbb
mov
rep
rol
or
and
pop
cmps
dec
call
push
pop
mov
mov
mov
popa
leave
fcomp
xlat
icebp
push
add
mov
adc
rcl
lahf
inc
iret
mov
dec
jle
lods
push
push
shl
dec
in
retfw
dec
xchg
lods
sti
es
jmp
xchg
in
and
sbb
jne
mov
outs
frstor
(bad)
leave
cmp
gs
dec
fwait
push
xchg
inc
movs
mov
shl
mov
pop
retf
test
sub
cmp
push
push
mov
cmps
push
fsub
mov
sahf
mov
mov
push
adc
fist
aad
aaa
xor
shl
(bad)
(bad)
mov
add
inc
add
sub
sbb
sbb
sar
(bad)
repnz
dec
mov
retf
cs
mov
out
pusha
daa
sti
adc
mov
repz
xchg
dec
scas
popf
in
ins
sbb
mov
cmp
add
pushf
pop
fiadd
das
imul
fs
mov
ret
xlat
leave
in
cld
repnz
sub
add
ret
xor
test
int
jle
mov
dec
stos
sub
jmp
scas
icebp
clc
(bad)
mov
cmp
fcom
dec
mov
fsub
aaa
mov
outs
push
push
pop
mov
sub
adc
jg
mov
xor
retf
pop
jge
push
push
cli
in
scas
xor
imul
push
int
cli
inc
loope
es
bound
(bad)
sbb
(bad)
and
test
loope
sub
pop
out
(bad)
loope
pop
aas
daa
dec
mov
adc
adc
fsubr
das
loope
cs
dec
xor
gs
dec
repz
inc
(bad)
sub
cmp
mov
jle
and
jo
mov
mov
mov
adc
rcr
or
ins
fstp
cdq
mov
pop
push
retf
rep
outs
sbb
sub
scas
cmp
std
lahf
pusha
inc
dec
es
jae
cs
ins
sub
xchg
sub
push
jne
pop
sti
mov
dec
sub
inc
jnp
sahf
into
xchg
rcr
std
movs
pop
popf
jmp
mov
int3
sub
loope
stos
pop
std
les
adc
mov
cmp
xchg
nop
jg
mov
adc
xor
out
ror
xchg
ret
lds
stc
add
and
fsub
xor
outs
bound
leave
fcomp
cmps
pop
xchg
arpl
icebp
inc
mov
jno
cmp
retf
push
add
xor
cmp
gs
(bad)
sub
cdq
jmp
xor
adc
aad
add
adc
leave
dec
cld
adc
jecxz
cmp
dec
enter
retf
adc
enter
adc
outs
mov
xchg
dec
push
es
pop
les
fmul
cmc
mov
int
mov
ds
into
mov
shl
pop
push
test
add
jge
jp
inc
nop
int3
jmp
movs
mov
xor
movs
ins
imul
inc
add
inc
icebp
test
sbb
dec
push
dec
cmp
and
xchg
or
std
xchg
jle
cs
leave
aam
cmp
test
js
scas
dec
add
xchg
push
sysexit
push
mov
add
jge
inc
or
mov
and
add
xchg
es
cmp
dec
scas
cmp
xor
mov
aam
mov
cmps
sub
lahf
(bad)
leave
and
cmp
test
lods
dec
ret
add
mov
sbb
mov
outs
add
aaa
mov
iret
cmps
push
cmp
jg
int3
pop
dec
xchg
sbb
or
add
cmc
cmp
daa
cmp
jae
dec
add
bound
xchg
push
inc
sar
ja
jmp
jle
sub
xchg
xchg
mov
add
add
sti
dec
adc
imul
pop
sar
stc
xchg
stos
jns
dec
push
ins
or
fild
pusha
out
retf
and
je
(bad)
ds
dec
stos
push
pushf
mov
mov
push
mov
or
fadd
lods
enter
adc
sbb
movs
add
icebp
mov
adc
retf
xlat
daa
cmp
bound
retf
adc
or
lods
dec
cld
neg
daa
cmp
inc
xchg
(bad)
sub
in
inc
les
dec
fimul
push
adc
mov
push
cmp
xor
xor
push
in
test
fdiv
adc
mov
dec
repnz
ja
sub
or
inc
adc
inc
push
lods
std
scas
inc
cli
jge
adc
outs
and
dec
(bad)
mov
add
add
fst
xor
(bad)
pop
jmp
jle
xchg
or
retf
retf
push
and
cmpps
or
xor
push
hlt
mov
mov
mov
push
test
jno
inc
xchg
mov
std
sbb
pop
push
pop
(bad)
jge
cmp
call
mov
leave
loop
or
push
sbb
xchg
outs
push
adc
mov
sbb
inc
test
in
mov
xor
ret
es
xlat
aas
ins
test
push
lds
loopne
inc
shl
cmp
mov
sub
push
jg
scas
fld1
out
sbb
cmp
test
cld
aas
pushf
cmp
lea
movs
jle
dec
pop
das
cli
dec
push
push
sbb
cmp
mov
dec
dec
addr16
retf
int3
stos
shl
fidivr
inc
mov
je
das
scas
(bad)
pop
xchg
lds
push
loop
mov
push
jge
sub
idiv
mov
and
xchg
push
pop
adc
mov
inc
test
sbb
aas
loopne
es
loopne
push
(bad)
(bad)
inc
int
dec
pop
add
gs
xchg
xor
inc
leave
addr16
movs
hlt
stc
stos
push
ss
imul
mov
xchg
xor
popf
push
or
pop
mov
pop
and
dec
inc
dec
xor
add
clc
cmp
adc
mov
(bad)
aad
iret
mov
cmp
push
cmp
jg
xchg
jae
mov
sub
fstp
pop
inc
cmps
jae
xor
push
xor
inc
cmp
jb
cmp
data16
loope
bound
(bad)
pop
sti
xlat
sub
or
sar
ss
adc
jae
fisubr
test
pop
cmp
dec
shr
test
pop
xchg
shl
sbb
(bad)
sahf
(bad)
mov
les
cmps
scas
in
xchg
mov
rol
imul
fsubr
call
mov
cdq
test
(bad)
retf
cmp
lahf
jo
es
xor
repnz
pop
mov
retf
fistp
mov
ds
inc
popa
pop
add
pop
cdq
jns
dec
push
stos
and
xchg
sub
pop
mov
pop
in
push
ret
nop
js
mov
data16
adc
ss
(bad)
sbb
cli
imul
iret
or
ds
jp
dec
aam
xor
rcr
or
mov
fwait
outs
add
jo
cdq
xchg
mov
into
ret
nop
adc
nop
shl
dec
mov
xor
shr
mov
lea
push
test
arpl
dec
mov
sub
js
out
sub
push
push
or
push
out
in
test
pop
xchg
sbb
push
stc
pop
in
pop
mov
shl
cmp
mov
into
js
(bad)
adc
loopne
adc
adc
push
xchg
ret
lods
mov
xchg
test
sti
xlat
jp
adc
rol
xchg
add
cwde
dec
pop
push
mov
mov
dec
mov
jmp
add
bound
mov
iret
or
je
adc
lds
xor
repnz
adc
in
jmp
stc
nop
pop
daa
mov
and
shl
retw
fcmovnu
lds
leave
fcom
movs
mov
mov
jp
fidivr
std
fdivr
mov
enter
int
test
add
es
retf
jb
loop
arpl
mov
arpl
and
popf
xor
fldenv
ret
popa
adc
ror
push
pushf
or
movs
out
mov
sub
bound
push
cmp
push
xor
lea
adc
cld
popa
aaa
mov
jle
push
mov
leave
jo
xchg
lahf
adc
aas
and
outs
push
adc
mov
mov
outs
xchg
int
cmp
loopne
mov
ja
mov
dec
xchg
fdiv
js
jecxz
int3
out
jns
out
dec
cmp
lock
cmp
movs
es
or
pop
outs
mov
stc
stc
add
xchg
xchg
cwde
jnp
and
stos
iret
pusha
sbb
hlt
inc
mov
aad
jae
push
fmul
sub
add
out
dec
fnstenv
pop
cdq
sbb
push
das
cmp
sbb
adc
mov
mov
cmp
jge
lods
imul
sbb
xchg
daa
xor
mov
xchg
inc
imul
lds
repz
ret
pop
lods
cmps
popa
xchg
pextrw
pop
repz
test
test
out
scas
les
(bad)
sbb
dec
je
mov
mov
and
mov
cmp
mov
cwde
sahf
cmp
xor
cli
dec
pop
mov
or
mov
inc
add
inc
into
sbb
pop
dec
fcomp
xchg
jg
jae
movs
fdivrp
ds
stos
sub
jns
mov
sub
inc
xor
repz
div
ja
cmp
cld
rol
and
mov
aam
xor
jmp
add
push
rcr
sbb
dec
inc
mov
cmps
popf
and
pop
mov
push
sbb
cmp
rcl
ds
jle
mov
jge
fild
mov
add
lods
inc
jl
sbb
and
and
test
out
je
and
jmp
dec
add
jne
xor
xchg
fidiv
stos
fs
mov
cmp
mov
cmp
movs
jmp
int
loopne
mov
(bad)
fimul
jecxz
mov
js
dec
aaa
sbb
in
cmp
inc
inc
mov
arpl
cdq
add
icebp
int
adc
mov
popa
dec
sub
add
jae
jnp
std
cmps
mov
adc
xchg
xchg
xchg
push
pop
cmp
adc
outs
fild
mov
dec
jo
ins
or
imul
xchg
rcl
adc
sbb
xor
lahf
add
rcl
jle
mov
lea
jno
and
ret
movs
sub
jle
(bad)
or
out
cmps
pop
mov
iret
mov
jmp
mov
out
and
fcmove
xchg
xchg
mov
ins
loope
inc
mov
and
push
mov
jp
test
sbb
daa
cmps
cmps
in
sub
inc
inc
retf
lods
pushf
mov
jmp
adc
pop
retf
push
jns
fstp
pusha
sti
jae
mov
jecxz
cli
imul
push
mov
xchg
div
adc
inc
jecxz
dec
cmps
(bad)
icebp
lea
popa
fdivp
loopne
test
dec
mov
scas
stos
pop
jge
add
out
(bad)
jmp
push
jb
rcl
jae
mov
push
mov
int3
loop
mov
popf
(bad)
fwait
push
pusha
sub
push
das
in
or
fwait
mov
and
pop
fdiv
and
std
dec
aas
xchg
call
inc
jne
push
or
mov
mov
das
jno
adc
dec
arpl
stos
sub
out
cli
inc
(bad)
ret
cmp
movs
jns
add
ja
mov
daa
out
pop
xchg
mov
mov
sbb
icebp
jo
js
dec
rcr
nop
mov
and
inc
test
push
rep
push
push
dec
cmp
out
stos
xchg
jecxz
push
jmp
leave
gs
sbb
stos
out
arpl
loopne
jns
dec
add
sar
push
rcl
sub
and
outs
add
retf
sub
or
pop
pushf
jo
jo
in
not
outs
and
out
add
or
dec
(bad)
push
rol
sbb
fld
stc
sahf
sbb
sahf
shl
jg
mov
stc
rol
iret
pop
dec
sub
bound
repz
inc
lds
mov
scas
xchg
fist
arpl
call
fwait
mov
nop
mov
sbb
ins
and
push
pop
icebp
mov
hlt
in
jmp
cld
call
push
adc
pop
in
jl
les
or
dec
(bad)
ret
mov
mov
cmps
push
pop
sub
pop
adc
outs
and
mov
mov
pop
mov
cld
mov
inc
xchg
leave
sbb
push
mov
repnz
push
in
ja
pop
imul
and
jle
xchg
in
fnstenv
xchg
ja
or
es
push
xor
sbb
jno
pop
add
mov
std
cmps
test
shl
nop
sbb
pop
jecxz
mov
and
jbe
xchg
invd
(bad)
fdiv
outs
loope
push
pop
cdq
push
inc
add
dec
cmps
pop
ret
push
sub
sbb
mov
rcr
dec
jecxz
and
call
jns
mov
jno
in
mov
xchg
sbb
sub
sub
push
adc
adc
push
out
cld
popa
cmp
std
imul
pop
sti
mov
(bad)
test
stc
das
scas
in
push
in
push
jo
mov
ins
sbb
jnp
fdiv
lods
push
fcmovnu
add
jge
lods
mov
dec
mov
jl
sbb
ins
xor
scas
xor
mov
test
add
mov
frstor
mov
out
xor
fadd
into
popa
cmp
out
xor
in
loope
pop
pinsrw
fs
ins
arpl
loopne
inc
mov
push
and
push
mov
and
jnp
pop
push
ja
mov
cli
rcl
in
mov
dec
test
xchg
dec
xor
dec
cmp
cwde
loopne
sub
pop
test
ds
jle
mov
jne
mov
mov
dec
dec
mov
adc
loopne
adc
hlt
cmp
div
imul
dec
inc
sti
mov
jbe
adc
shl
rcl
inc
out
jl
pop
bnd
mov
pop
push
outs
jge
ins
sub
mov
or
adc
aad
xchg
inc
mov
fs
imul
pusha
outs
adc
xchg
int
es
loopne
fimul
in
lock
sahf
inc
cmp
movs
cmps
push
daa
mov
je
push
sub
mov
and
test
or
pusha
je
and
mov
outs
pop
pop
adc
les
push
cmp
pop
inc
jns
mov
push
xchg
mov
inc
ds
lea
xchg
inc
sub
inc
mov
mov
loope
popf
loopne
(bad)
addr16
mov
call
into
(bad)
cmps
shr
out
mov
nop
and
shr
rcr
je
test
daa
sub
fiadd
fucomip
pop
scas
xor
mov
mov
frndint
(bad)
mov
dec
retf
cdq
loop
and
sub
jle
inc
fdiv
sti
fnstcw
mov
pop
dec
jmp
push
(bad)
mov
(bad)
repz
jmp
in
outs
and
rol
dec
mov
cmp
inc
mov
sbb
xchg
outs
cmp
inc
aas
adc
aaa
cmp
xlat
imul
sbb
dec
mov
or
repnz
xor
dec
fdivr
retf
or
ins
push
mov
jbe
sub
fsubr
jle
les
cmp
dec
imul
stos
out
stc
dec
push
or
pop
xchg
mov
jle
je
inc
in
and
mov
cmp
add
pop
out
mov
lods
cld
or
jb
outs
cs
and
mov
inc
xor
call
pop
scas
cld
mov
cwde
push
push
xor
xor
and
mov
stos
add
nop
movs
mov
inc
imul
xlat
and
jns
mov
js
pop
pop
call
jno
shr
loop
jb
xor
or
push
jmp
(bad)
mov
mov
in
sub
mov
inc
test
xor
(bad)
into
and
mov
mov
inc
push
fimul
xchg
cld
repnz
aad
js
adc
test
push
adc
mov
sub
movs
lea
jae
std
mov
aaa
rcr
imul
movs
mov
jecxz
inc
lahf
jge
mov
je
ins
xlat
call
fist
jb
jg
in
out
pop
mov
push
add
mov
dec
sbb
(bad)
pop
xchg
mov
sbb
das
stos
and
stos
and
dec
addr16
cmp
into
push
pop
inc
mov
neg
ins
or
in
xchg
ror
(bad)
mov
push
frstor
pop
fucomip
add
lods
movs
or
(bad)
in
jge
loopne
pop
add
or
mov
test
xor
mov
adc
inc
mov
or
mov
fmul
push
push
cmp
je
jnp
add
jl
xchg
jne
ror
lods
add
stc
adc
aas
mov
loope
fistp
mov
push
(bad)
push
cmp
inc
lds
jo
pop
pop
adc
or
xchg
sbb
addr16
or
js
sbb
arpl
adc
mov
jmp
cld
dec
jg
jmp
xor
jp
and
mov
inc
fldcw
add
sub
popa
ds
stos
adc
dec
imul
popf
ss
stc
fwait
sub
pop
mov
arpl
lods
aam
xchg
stc
jmp
mov
add
ins
adc
inc
adc
inc
pop
dec
in
je
sti
dec
xlat
out
and
in
enter
jnp
dec
test
jae
gs
mov
inc
dec
sahf
das
lock
retf
scas
shl
or
jno
sub
out
pop
popa
cmp
sub
js
sub
mov
test
pop
cli
test
jbe
popf
stos
cmp
sub
ds
or
(bad)
retf
clc
push
mov
mov
cmc
jo
fsubr
dec
push
fisttp
dec
mov
pop
xlat
jno
jp
jno
fst
mov
ret
xlat
(bad)
in
or
mov
inc
mov
(bad)
out
pop
push
jns
mov
pushf
movs
ret
and
fwait
popa
sub
inc
mov
rcr
stos
push
neg
leave
cmp
or
ja
xchg
add
pop
pop
bound
aam
add
xchg
push
mov
(bad)
sub
mov
lea
fnsave
cwde
xor
inc
sbb
or
sub
xchg
or
push
inc
clc
jne
and
sub
icebp
test
int3
fistp
pop
xor
out
mov
mov
xor
js
inc
fwait
sar
sub
jbe
mov
clc
inc
adc
jl
add
ficom
in
pop
sub
jecxz
sti
lahf
and
inc
cmp
cmp
mov
inc
jecxz
xchg
jne
fisub
jb
popa
push
jp
mov
in
pop
test
sbb
jbe
xchg
in
mov
cmp
repz
xchg
(bad)
js
mov
cmp
js
sub
mov
fild
sbb
or
ss
xchg
push
pop
lods
call
cmp
in
xchg
into
and
add
and
lea
dec
lds
add
repz
push
ss
jg
fimul
push
cmp
call
pop
popf
int
fstp
xor
pop
cwde
or
retf
sahf
(bad)
bnd
sub
mov
add
ja
add
pop
dec
iret
jae
rol
xor
test
popa
or
out
push
(bad)
jg
add
imul
popf
lea
(bad)
test
dec
sar
inc
mov
push
cmp
xchg
adc
stos
call
cmp
and
xchg
jg
push
(bad)
popf
in
cmp
pusha
retf
loope
clc
push
push
dec
(bad)
stc
in
and
xor
push
pop
aad
fwait
lock
sub
mov
cmp
and
(bad)
aas
or
mov
mov
js
out
inc
(bad)
xlat
adc
dec
adc
iret
pop
inc
loope
shr
cmp
cmc
jp
dec
enter
es
mov
push
mov
call
mov
mov
xchg
sbb
pop
mov
into
dec
dec
std
jnp
dec
out
scas
adc
in
fucomip
xor
mov
stos
or
test
jmp
inc
cmps
(bad)
sub
mov
out
or
adc
push
lods
mov
xchg
or
loopne
or
add
not
pop
unpcklps
and
mov
out
mov
mov
fsubr
call
fld
mov
addr16
mov
jg
add
data16
cmp
stos
shl
aas
jl
add
sahf
mov
fwait
pop
sub
retf
cmps
lds
add
imul
jae
push
repnz
je
out
adc
das
out
popf
mov
sub
rcr
push
xchg
jmp
push
push
add
pop
push
loop
or
xchg
mov
and
fcmovnu
inc
ss
in
jbe
daa
xchg
stos
out
outs
cmp
sub
test
push
fnstsw
iret
jl
pop
mov
(bad)
inc
push
sub
pop
jne
fbld
xchg
adc
adc
mov
xor
pop
adc
movs
fidivr
das
push
adc
fstp
cdq
push
sub
sbb
add
test
pop
cs
push
out
out
adc
sbb
out
(bad)
and
(bad)
icebp
mov
in
mov
ins
cdq
or
(bad)
sbb
dec
sub
fdiv
and
mov
int
ja
scas
sbb
sub
rol
add
cs
data16
cmps
xchg
loop
adc
mov
cmp
dec
fild
aaa
arpl
aas
xor
fmul
cmp
test
mov
push
mov
cs
pushf
scas
pop
push
clc
mov
push
ss
xchg
xchg
das
pop
aas
fild
sub
aaa
inc
arpl
mov
jmp
aaa
icebp
adc
aaa
mov
adc
into
stc
push
frstor
cs
push
retf
ja
xchg
sbb
jmp
lahf
dec
shl
lds
dec
dec
shr
rcr
xlat
cdq
mov
rcl
adc
mov
mov
mov
retf
ret
sbb
int
loope
push
mov
sar
push
pop
cmps
outs
rol
popa
push
inc
mov
inc
xor
ja
sbb
xor
mov
sbb
mov
jecxz
sahf
(bad)
pop
fmul
xor
sub
xchg
mov
fs
add
mov
in
and
dec
mov
punpcklwd
stos
rol
pop
xchg
jmp
mov
cld
out
inc
test
sub
enter
xchg
pop
pushf
retf
cli
rcl
rep
loop
icebp
call
popa
push
into
(bad)
movs
xor
rcl
and
(bad)
in
sbb
hlt
in
or
shr
push
fwait
int
popf
cmp
or
sbb
sbb
aaa
and
jns
xchg
mov
pop
pop
inc
inc
mov
adc
mov
cli
fild
inc
xchg
aaa
xchg
cdq
and
and
push
pop
mov
xchg
push
dec
pop
xchg
fwait
lods
inc
retf
mov
fidiv
ja
inc
sub
sbb
rcr
test
mov
inc
gs
fwait
jl
mov
sbb
adc
mov
jno
retf
imul
out
adc
and
push
not
pop
call
int3
xchg
xor
(bad)
rol
push
in
js
and
jge
sbb
push
sti
mov
mov
push
pop
mov
sahf
sbb
movs
add
or
ds
dec
xchg
cmp
in
push
mov
cmp
adc
adc
(bad)
sub
out
mov
movs
inc
sub
ss
test
les
jns
aaa
add
or
xchg
dec
mov
pop
mov
cld
sub
xlat
out
mov
sbb
lahf
repz
mov
pop
sbb
mov
mov
bound
push
jmp
pop
div
lahf
push
jns
cmp
(bad)
push
or
pop
imul
ins
(bad)
cdq
mov
lods
movs
popf
cwde
pop
cli
mov
sub
mov
out
icebp
pushf
and
test
mov
xchg
bound
fidiv
cmps
push
sbb
or
pop
out
mov
jns
xor
mov
cmps
mov
rcr
sbb
dec
sub
aas
ds
lea
sbb
int
mov
icebp
add
shl
fcom
fstp
dec
or
xor
(bad)
sbb
jg
enter
or
adc
(bad)
lods
push
cmp
mov
jbe
xor
sub
sahf
adc
jnp
loopne
mov
sub
shl
cld
dec
xor
bnd
repnz
mov
stos
sub
inc
gs
scas
clc
mov
jnp
shl
gs
mov
mov
jno
pop
add
jmp
dec
loop
xor
inc
xor
mov
popf
pop
xor
aas
ret
adc
mov
dec
jg
int3
push
xchg
sub
out
ins
or
cdq
inc
scas
adc
and
mov
imul
pop
lods
adc
(bad)
cmps
fcmovb
pop
and
das
dec
fs
fcom
jb
inc
xor
sbb
mov
push
sbb
inc
cmp
lods
add
mov
adc
inc
pop
stos
pushf
dec
jl
pop
popf
cmp
stos
push
push
dec
mov
scas
or
movs
sbb
jb
xchg
sub
sbb
je
mov
inc
mov
ja
(bad)
call
pop
mov
xchg
or
and
adc
jge
ja
mov
or
sbb
scas
push
call
push
pshufw
or
pop
rcr
or
xchg
(bad)
push
mov
push
lds
adc
ins
jp
push
outs
or
xchg
iret
dec
sub
jae
xchg
data16
popf
int
enter
int3
sub
sub
pop
cmps
or
mov
mov
push
mov
hlt
sub
inc
xchg
retf
in
stc
mov
pop
int3
mov
add
inc
aaa
ins
mov
ins
pop
push
ret
stos
and
cdq
mov
add
ret
retf
or
adc
jl
pop
mov
push
jmp
cmp
sub
mov
jb
stc
ss
leave
jle
pop
inc
out
dec
inc
into
jl
stc
bound
xor
xchg
out
dec
shl
fwait
es
xor
or
pop
hlt
jle
push
(bad)
(bad)
(bad)
call
xchg
test
(bad)
sub
pop
movs
into
stc
pop
hlt
xor
xlat
cmp
rol
inc
adc
into
cmp
pop
mov
outs
shl
rol
loope
sub
shr
pop
sti
retf
xor
mov
mov
sub
adc
test
dec
mov
scas
xlat
cld
dec
out
sub
bound
mov
fidiv
(bad)
loope
sub
arpl
ss
and
enter
push
loope
adc
sbb
xchg
mov
outs
aad
mov
add
ins
popf
mov
in
retf
cmp
and
mov
inc
and
fdiv
dec
adc
out
cmps
and
ja
push
sbb
cli
mov
or
pushfw
inc
arpl
icebp
test
jecxz
sub
repz
jl
shl
xor
gs
std
and
inc
imul
adc
adc
xchg
dec
fsubr
adc
xor
jo
aad
aas
shl
xchg
jno
mov
nop
or
mov
and
mov
jo
push
mul
out
outs
test
and
mov
mov
jle
or
pop
lds
sub
add
cdq
and
dec
imul
sub
or
dec
mov
mov
and
or
xchg
sub
(bad)
sub
inc
(bad)
clc
adc
hlt
js
xchg
push
fisttp
test
ret
gs
mov
out
dec
sahf
icebp
ret
sbb
jg
dec
das
push
out
xlat
iret
sbb
(bad)
xor
mov
xor
stos
nop
inc
out
xor
jmp
pop
ds
ror
cmps
shl
jnp
jno
jmp
cwde
mov
shl
out
xor
aas
test
movs
cmp
pop
and
frstor
inc
jg
jbe
inc
rol
mov
icebp
out
aam
mov
inc
jmp
dec
iret
bound
push
mov
adc
lock
cmp
inc
daa
jbe
mov
cmp
les
js
xchg
fsubr
ret
fdivr
adc
cmp
fxch
mov
sub
cmps
sub
adc
sbb
xchg
pop
ins
ror
pusha
mov
out
jnp
sbb
rcr
mov
inc
lds
xchg
das
loop
xor
add
imul
mov
cmp
pop
daa
sbb
jno
push
shl
addr16
stos
jge
fist
lods
or
xor
ret
fidivr
int3
fild
repz
dec
cld
xchg
je
pop
push
dec
xor
stos
jp
push
and
cmps
cmp
push
sub
inc
rol
(bad)
hlt
(bad)
mov
sbb
in
xor
sahf
dec
adc
sahf
push
mov
mov
adc
and
cmps
cwde
mov
mov
xchg
into
pop
xor
and
or
leave
pop
pop
cmc
hlt
aam
into
xor
mov
xor
(bad)
fisttp
int
dec
adc
mov
push
jnp
les
loop
xchg
jp
cmp
enter
jnp
jge
sub
sub
add
mov
addr16
push
ror
mov
mov
out
dec
xchg
xchg
cmc
inc
mov
sar
xor
repz
pop
out
out
stos
and
inc
sbb
push
xchg
sub
cmp
dec
arpl
dec
int
xchg
test
shl
mov
mov
rcl
cdq
dec
call
adc
lock
movs
scas
push
pop
adc
inc
dec
mov
jmp
call
stos
mov
add
xlat
call
dec
(bad)
out
sub
inc
dec
mov
(bad)
out
push
in
mov
adc
xor
ror
pop
inc
(bad)
mov
int
mov
out
and
cmp
mov
ror
loope
hlt
add
call
push
clc
push
mov
shl
addr16
inc
cmp
push
xchg
retf
or
rol
cwde
inc
(bad)
dec
cs
int3
add
push
repnz
repz
add
cmp
test
fcomp
loope
lods
xchg
in
int3
out
int
push
xor
fisubr
int
push
and
jno
mov
push
ins
not
pop
fstp
sbb
movs
sahf
sar
stos
xchg
daa
(bad)
and
into
push
sahf
jbe
stos
xchg
stc
test
fwait
xor
rol
scas
inc
jnp
mov
pop
dec
(bad)
cmps
call
fmulp
sub
or
jmp
int3
dec
cmps
push
aaa
xchg
sbb
arpl
dec
or
push
push
int3
movs
(bad)
pop
fisubr
mov
sub
in
stmxcsr
and
fwait
js
or
mov
shl
jg
pop
mov
ret
lods
mov
(bad)
cmp
iret
cmps
sbb
push
test
bound
jge
sub
and
in
sub
jo
pop
xchg
adc
add
xchg
cmp
ror
mov
pop
and
popf
mov
xchg
test
fadd
sar
mov
jmp
dec
jg
sti
xchg
repnz
lods
mov
push
jmp
mov
adc
push
das
mov
cli
nop
(bad)
dec
inc
xchg
xchg
lods
mov
push
or
xor
dec
xchg
pop
jne
(bad)
leave
iret
push
adc
test
aas
add
cmps
mov
xchg
and
retf
out
add
test
xor
inc
pop
pop
leave
add
pop
aaa
(bad)
in
int
fs
mov
xchg
inc
aaa
sar
xchg
sub
jg
arpl
cmp
jg
push
fsubr
aaa
dec
daa
mov
call
jp
add
or
int3
push
xchg
sub
pop
repz
or
ds
pushf
rol
xchg
mov
add
int3
loop
pop
jo
call
loope
push
xor
mov
and
das
pop
enter
mov
shl
loop
mov
movs
int3
test
scas
adc
adc
lahf
out
in
int
push
and
cmc
scas
sub
push
shl
jae
pusha
test
pop
arpl
pop
loop
jno
sub
or
mov
cmp
sbb
outs
cmp
mov
jmp
pop
lods
or
les
push
ret
push
lahf
pop
and
mov
out
sti
fild
and
es
push
xlat
xchg
bound
adc
or
test
lock
mov
fst
enter
adc
ss
je
xchg
mov
inc
imul
icebp
sbb
outs
adc
(bad)
retf
mov
pop
std
rcr
dec
shl
aad
fist
push
inc
into
lock
lods
push
dec
inc
cwde
xor
test
in
popa
js
mov
jbe
mov
sub
lods
cli
daa
inc
mov
push
test
cmp
sub
sbb
mov
scas
ds
test
mov
popa
xchg
(bad)
jb
xchg
test
repz
ins
xor
aas
out
ins
sub
mov
nop
or
sbb
mov
xchg
mov
popf
pushf
mov
stos
mov
cld
retf
lds
pushf
jno
fs
mov
jl
jmp
xor
push
cmp
inc
jmp
xchg
lahf
test
fmulp
shl
mov
aam
add
push
and
(bad)
les
jne
es
js
aad
sub
popa
gs
pop
push
mov
scas
mov
rcl
pop
mov
int3
mov
pop
outs
sub
dec
xor
test
xchg
shr
aas
aad
(bad)
mov
xor
push
jecxz
cli
out
sahf
xor
inc
test
or
sar
out
push
sbb
xlat
sub
lds
out
les
and
fst
mov
idiv
mov
aas
pop
(bad)
shl
dec
mov
inc
jne
mov
mov
iret
lods
and
mov
mov
inc
fild
add
pop
sub
sub
dec
push
pushf
xor
addr16
loopne
or
scas
push
pop
mov
or
mov
pop
js
inc
aaa
out
cmp
xchg
mov
and
dec
(bad)
sub
add
pop
mov
out
xchg
out
mov
mov
ins
pop
cli
fdiv
jns
outs
sub
jae
sub
sbb
xor
dec
retf
imul
cdq
push
and
push
cs
test
retf
(bad)
fimul
loope
lea
jb
test
sahf
and
mov
outs
hlt
and
dec
mov
xor
(bad)
adc
xchg
mov
int
jge
retf
pop
xchg
divps
fist
je
inc
mov
inc
retf
into
fnstenv
jns
and
cli
fs
aaa
pushf
(bad)
leave
outs
push
das
push
mov
sti
jp
mov
mov
out
test
xor
xchg
cmps
test
arpl
loop
movs
adc
xor
sbb
out
jl
pop
or
mov
jecxz
mov
mov
out
cmp
mov
add
ret
rcr
sahf
pop
popf
cmp
dec
test
movs
push
(bad)
out
ins
push
lock
in
sbb
fwait
xor
aam
cmp
sub
pop
movs
jmp
out
or
xor
adc
jecxz
ins
mov
test
pusha
dec
mov
xor
call
add
cwd
sbb
jg
aad
cwde
(bad)
rcl
jns
inc
inc
packuswb
enter
sub
push
or
xchg
(bad)
int3
lea
sub
xor
fbld
adc
inc
xor
nop
pop
lahf
xor
enter
out
inc
(bad)
cli
(bad)
cmp
es
retf
clc
mov
daa
shr
inc
in
mov
je
ftst
adc
cmps
movs
jb
jecxz
mov
aad
xor
cmc
(bad)
call
xchg
in
lahf
daa
je
jmp
jp
cdq
daa
add
add
mov
mov
int3
stos
jmp
push
cdq
ds
pmuludq
push
sbb
mov
enter
shl
mov
cld
jne
mov
pop
clc
add
mov
jae
into
xchg
shr
iret
retf
sti
nop
xchg
dec
cmp
es
jmp
mov
jns
cmp
je
push
cmp
aaa
push
adc
mov
push
loope
out
aad
push
pushw
mov
in
mov
mov
fcmove
nop
jmp
jl
mov
and
fs
test
pop
lds
(bad)
xchg
daa
fdiv
icebp
stc
stos
nop
fimul
icebp
mov
div
(bad)
cmps
xchg
cmp
jge
out
or
jo
vpmacssdql
mov
cmp
mov
mov
push
mov
xlat
addr16
ins
mov
mov
mov
xchg
cmp
int
jge
psubw
jmp
xor
mov
dec
call
xchg
adc
fstp
mov
dec
mov
(bad)
fisub
fwait
pop
ins
push
jne
out
cs
push
xchg
call
cmp
mov
icebp
xchg
inc
push
pop
and
push
lds
and
(bad)
jns
mov
mov
adc
inc
xchg
inc
sar
push
or
lahf
inc
movs
and
xchg
std
inc
(bad)
call
popf
inc
xor
mov
xor
jmp
mov
pushf
xor
jbe
scas
daa
mov
mov
test
stc
mov
push
cmp
es
push
das
aas
and
test
mov
test
js
xor
dec
ds
int3
and
and
fwait
mov
jg
(bad)
ins
inc
retf
mov
fsub
imul
inc
cmp
lds
mov
in
jo
retf
jle
xchg
inc
or
cmp
mov
ja
cli
les
(bad)
xlat
mov
and
lods
mov
push
arpl
cli
and
or
movs
pop
repnz
inc
cmp
es
jnp
or
mov
in
mov
sbb
(bad)
jb
sti
mov
adc
and
jae
popa
iret
sbb
or
mov
mov
hlt
hlt
mov
out
sbb
mov
aam
mov
fs
adc
dec
rcl
xchg
push
ret
int3
or
jmp
mov
out
ret
aad
sub
dec
and
push
loopne
hlt
jns
cmp
(bad)
out
push
xchg
test
repnz
mov
xor
fadd
nop
aam
jle
rcr
mov
pop
cmp
loop
adc
xchg
inc
cdq
loope
pop
fnstenv
jge
pop
(bad)
add
pushf
adc
or
sbb
(bad)
push
shr
mov
push
add
pop
inc
sub
(bad)
dec
mov
add
ret
(bad)
sub
mov
add
test
mov
es
sbb
add
push
lock
jno
jp
push
xor
stc
or
clc
(bad)
push
dec
sbb
shl
sub
not
test
jae
in
mov
xchg
int
pop
xchg
enter
xchg
mov
cmp
into
sub
mov
sub
dec
inc
xchg
pop
shr
cmp
mov
mov
out
push
test
jmp
int
xor
imul
push
jg
pop
sbb
pushf
cmps
jne
jns
repz
adc
popa
add
mov
sub
test
fcomp
lea
cli
(bad)
(bad)
popa
or
dec
cwde
push
imul
pusha
aad
push
push
xchg
das
jmp
scas
dec
popa
inc
add
or
(bad)
fbld
outs
shl
pop
ret
jecxz
pop
mov
lock
leave
mov
dec
pop
xor
mov
jno
sar
push
add
mov
test
pop
icebp
fidiv
sub
icebp
mov
pop
mov
push
sbb
outs
bound
retf
nop
mov
sub
mov
inc
and
and
arpl
inc
mov
sub
retf
mov
lods
dec
mov
inc
repz
pop
shl
mov
es
and
inc
pop
and
data16
jo
rcl
xchg
gs
cmp
jae
fiadd
adc
lds
or
movs
jnp
mov
out
adc
(bad)
pop
mov
bound
sbb
adc
popf
jb
je
repnz
fcomp
call
and
es
dec
and
xchg
test
les
(bad)
ins
in
retf
dec
mov
js
xchg
and
call
add
dec
jb
jnp
stos
stos
and
xchg
test
sbb
movs
outs
dec
jmp
add
arpl
imul
sbb
cmp
xor
add
test
bound
imul
cmp
add
hlt
mov
cmps
ret
xchg
mov
and
imul
pop
arpl
xor
xor
dec
pop
jge
je
mov
mov
mov
lahf
mov
or
xor
popf
out
mov
fcom
dec
jae
xor
sub
push
inc
sbb
mov
clc
dec
ret
mov
cmp
fadd
sub
sar
push
lea
or
call
cmp
mov
not
push
push
fisttp
movs
hlt
jmp
in
into
int3
jl
repnz
xchg
jns
jmp
nop
add
sbb
or
loopne
pop
adc
pushf
push
(bad)
or
fs
or
jle
outs
add
xor
adc
xor
pop
push
into
sbb
je
aas
cmp
hlt
mov
xor
add
mov
and
or
jno
popf
or
adc
sbb
ins
add
dec
xor
jmp
fbstp
in
mov
dec
retf
adc
pop
adc
push
dec
ins
arpl
pusha
adc
mov
pusha
pusha
mov
sub
arpl
inc
ins
pop
xlat
movs
(bad)
pop
push
in
ins
jno
mov
or
mov
sub
mov
in
es
sub
mov
mov
aad
addr16
add
add
adc
stos
inc
test
sbb
and
mov
dec
lea
adc
sub
mov
jmp
ins
push
cld
jg
shl
hlt
loope
push
pop
arpl
das
pushf
fsubr
fdiv
out
mov
fisttp
mov
gs
mov
push
setnp
xchg
xor
inc
jns
push
cmps
icebp
cmps
in
cmp
in
aas
mul
push
outs
and
dec
xchg
push
rcr
stos
sub
or
cmp
fwait
popf
fadd
ret
inc
sbb
cwde
sub
jno
pop
scas
inc
scas
jnp
addr16
pop
xor
dec
fstp
ror
jmp
ins
mov
(bad)
daa
mov
enter
movs
inc
jmp
xchg
fisubr
add
mov
repz
das
test
jmp
lods
or
cmp
dec
push
mov
shl
rcl
sub
add
lods
arpl
push
sub
cdq
cmp
daa
jg
mov
out
sbb
mov
icebp
xor
jne
xor
pop
cmp
dec
addr16
inc
mov
push
xchg
sub
hlt
mov
rcr
es
inc
iret
xchg
test
test
aam
dec
mov
adc
xchg
adc
lods
cs
ins
jo
push
and
mov
fnstenv
xchg
mov
adc
ds
pop
aad
pop
jo
lods
stos
jecxz
sub
and
cwde
js
js
adc
mov
add
mov
xchg
sbb
xor
lea
adc
push
test
inc
cmp
mov
mov
and
ja
fstp
movs
pop
push
loop
pop
dec
in
sub
push
xchg
out
(bad)
xchg
pop
mov
jge
mov
or
jmp
dec
adc
das
adc
mov
sbb
int3
ins
sbb
push
jl
imul
pop
push
ds
dec
and
mov
sar
iret
sub
fs
push
ret
js
mov
adc
fidiv
out
jle
cs
in
adc
dec
in
in
test
ret
mov
jecxz
and
hlt
fwait
shl
test
push
mul
xchg
mov
jo
add
cmp
loope
and
mov
sub
adc
mov
enter
pop
and
push
pop
mov
lods
add
arpl
mov
rcl
sub
iret
mov
aas
cdq
dec
and
rol
jmp
out
icebp
adc
adc
in
sbb
add
xchg
sbb
lods
cdq
(bad)
movs
jo
xchg
shl
xchg
nop
cmp
repnz
cmp
cld
pushf
pusha
cmp
pop
xchg
(bad)
push
xchg
jg
scas
mov
sbb
and
jp
dec
mov
mov
jmp
pop
pop
pushf
and
mov
popf
cmp
inc
jne
in
or
dec
shl
push
xchg
ins
shl
faddp
std
bound
cmps
data16
or
jo
pop
add
ffree
hlt
call
cmp
jae
hlt
dec
mov
pop
xor
jle
or
adc
inc
in
int
test
or
shl
rol
vandnps
push
or
rcl
gs
neg
shl
mov
mov
sar
adc
je
addr16
adc
mov
jl
add
push
in
(bad)
xchg
xchg
mov
(bad)
cmp
pop
fbld
call
adc
push
aaa
inc
mov
loope
ficomp
push
daa
push
sub
arpl
push
out
xor
xor
adc
xchg
pop
mov
rcr
dec
inc
pop
push
out
mov
jnp
adc
adc
test
call
mov
sbb
cwde
inc
xchg
cmp
fisubr
sbb
xchg
(bad)
js
les
push
cmps
xor
mov
les
add
or
xor
fdivr
(bad)
xor
lds
retf
sub
add
sahf
lods
retf
mov
push
pop
pusha
lds
inc
mov
(bad)
(bad)
rcl
cmps
sub
jg
or
data16
and
adc
push
lock
inc
scas
jnp
ret
sbb
bnd
fcom
ffreep
and
test
in
xor
xchg
mov
outs
xchg
lods
imul
mov
mov
jo
shl
outs
popf
lahf
dec
cmp
idiv
and
test
(bad)
in
(bad)
mov
retf
mov
jle
fwait
outs
or
inc
cmps
mov
mov
hlt
adc
dec
(bad)
mov
cmps
cli
cmp
out
inc
mov
sahf
rcr
sbb
dec
inc
pop
addr16
mov
gs
jae
mov
fwait
dec
movs
push
sub
jb
and
sahf
inc
push
mov
loopne
in
es
(bad)
leave
sar
in
mov
xchg
adc
mov
or
aaa
test
pushf
jge
vpackssdw
and
jne
ss
jg
imul
jbe
xchg
add
dec
(bad)
sahf
lods
test
inc
imul
in
add
ins
aam
aas
stos
sbb
clc
icebp
pop
popa
or
and
data16
inc
pop
nop
jge
ret
jmp
mov
ds
in
add
out
fwait
mov
jnp
bound
int3
jnp
sub
dec
add
addr16
or
mov
test
clc
aas
or
add
xchg
cmp
push
or
dec
arpl
stc
dec
in
sbb
adc
mov
jge
jo
xor
xor
in
aad
xor
dec
xchg
sub
pusha
pop
jge
sub
lods
push
mov
dec
pop
ss
addr16
inc
jmp
cmp
outs
sti
scas
movs
(bad)
or
lds
daa
push
add
pushf
dec
lahf
push
es
mov
pop
pop
jmp
inc
je
movs
aas
scas
jns
cmp
call
cld
push
adc
cmps
and
cld
and
jmp
hlt
mov
dec
neg
lea
mov
xor
inc
mov
retf
lods
test
push
or
adc
retf
cld
call
cmp
jle
jns
sar
ds
inc
or
jmp
(bad)
(bad)
cmps
out
xor
mov
dec
or
mov
dec
movs
aad
push
movs
push
inc
sar
retf
jmp
dec
jmp
xchg
dec
pushf
inc
xor
and
in
out
pusha
xor
and
int3
mov
mov
lods
mov
xor
xor
push
scas
outs
pop
inc
mov
call
lock
repnz
fild
dec
jge
je
fisttp
add
cmc
mov
les
lea
scas
fbstp
scas
inc
pop
mov
imul
inc
or
mov
mul
add
(bad)
repnz
inc
pop
gs
or
inc
fcmovnbe
sti
or
jbe
adc
sub
retf
nop
cwde
inc
lods
sub
gs
jp
idiv
sti
mov
jbe
rcr
gs
mov
cmp
inc
push
stc
sbb
add
test
imul
cmc
or
pop
sahf
xchg
popa
(bad)
fdivr
push
mov
sub
enter
inc
out
mov
inc
lods
into
mov
push
push
pop
daa
adc
loope
push
out
outs
cmp
and
(bad)
inc
push
xor
cmp
sub
jb
xchg
out
push
aad
leave
pop
js
call
push
add
jg
jmp
adc
xchg
xchg
lods
mov
add
jbe
fsub
(bad)
mov
xor
ins
adc
mov
mov
les
mov
repz
repnz
sbb
retf
sti
fistp
sbb
push
mov
cmc
popa
xor
pop
fprem1
sub
jle
jb
push
mov
je
and
xchg
gs
jb
cmps
mov
and
xchg
(bad)
lock
sub
scas
sahf
call
pop
enter
cli
jno
and
mov
add
cmp
dec
repz
fdivrp
pop
or
or
mov
nop
mov
cmp
pop
movs
pop
xor
mov
into
aam
pop
xor
mov
fwait
push
inc
stc
(bad)
xchg
push
mov
ja
pop
add
(bad)
aaa
jbe
movs
frstor
enter
int
mov
mov
test
cmp
dec
nop
cdq
xor
bound
add
imul
call
sar
ins
outs
(bad)
aas
loopne
iret
push
test
test
inc
ficomp
cmp
std
lods
or
inc
neg
leave
mov
mov
into
push
or
xlat
xor
lds
mov
mov
push
sbb
fld
mov
nop
cld
popa
aas
dec
dec
cmp
xor
bound
(bad)
gs
add
icebp
addr16
dec
ror
std
sub
mov
stos
imul
sub
add
dec
xor
fistp
inc
mov
jle
jmp
aaa
dec
mov
and
jp
mov
fidivr
xchg
stos
sbb
js
add
pop
mov
(bad)
cmps
mov
xchg
fsubr
call
movs
pop
std
cdq
mov
xchg
lods
jae
cmp
pop
add
push
(bad)
xor
pop
or
or
cwde
sub
dec
not
push
cli
jg
in
popa
mov
pop
mov
popf
cmp
adc
jo
dec
ss
stos
repz
or
add
mov
inc
jmp
xor
sub
add
sub
jmp
cmp
call
loope
retf
push
add
sbb
pop
xchg
pop
jmp
mov
les
ficom
xchg
dec
jae
push
mov
ins
pop
shl
mov
mov
jb
sub
scas
push
inc
cdq
call
cmp
mov
pop
cmc
repnz
push
inc
pusha
leave
xchg
xor
stos
pop
add
pop
icebp
xchg
jbe
xchg
cmp
mov
sub
inc
inc
leave
shl
xor
add
dec
mov
mov
cmp
jg
push
push
xchg
xchg
dec
fdivr
out
(bad)
sbb
icebp
add
out
call
popf
and
jle
mov
loope
dec
lods
out
push
aam
jo
jmp
push
test
or
mov
cmp
mov
dec
or
retf
or
test
mov
dec
sub
xchg
mov
mov
fidiv
push
jbe
push
jmp
jne
push
leave
aad
mov
mov
stos
cmps
bswap
(bad)
stc
cdq
mov
jne
xor
add
pushw
adc
and
pop
cdq
mov
inc
cdq
mov
xchg
gs
jp
test
adc
ss
fisubr
xchg
mov
adc
retf
movs
mov
sbb
mov
lock
adc
cmp
ret
inc
ja
dec
cmps
nop
jp
xchg
je
jne
xchg
mov
stos
ins
jg
dec
pop
retf
adc
pusha
icebp
pop
dec
sti
fs
mov
dec
sbb
inc
inc
cs
inc
fbld
shl
xchg
dec
mov
ret
dec
xchg
aas
pop
jne
inc
cs
push
femms
sahf
in
pop
scas
inc
rol
sub
bnd
inc
cli
and
mov
in
loope
jb
popa
jmp
pop
mov
fwait
lods
cmps
mov
mov
mov
add
sbb
xchg
jnp
pop
shl
pop
jb
dec
push
jbe
or
lea
dec
inc
inc
sub
pop
fnsave
sub
jp
rcl
xchg
arpl
(bad)
repz
mov
mov
popa
(bad)
test
shr
xlat
call
sbb
sbb
ds
movs
scas
mov
sbb
push
sahf
xor
and
push
rol
cmc
stos
data16
cdq
js
inc
jmp
mov
(bad)
jns
lods
jmp
jp
outs
hlt
std
(bad)
js
cld
cli
sbb
daa
cmp
pop
leave
enter
(bad)
mov
mov
std
xor
push
fld
out
dec
sbb
(bad)
cli
sbb
push
mov
mov
sbb
adc
push
or
inc
sub
test
add
mov
in
cmp
outs
js
adc
mov
in
in
add
cmp
mov
sub
dec
lahf
lock
pop
mov
cld
mov
rcr
dec
retf
out
and
out
pop
mov
or
sub
aaa
pop
jns
push
loope
out
xchg
lods
and
cmp
daa
test
lds
or
hlt
in
jp
imul
imul
sbb
and
(bad)
in
iret
push
xchg
fsub
std
jmp
retf
jmp
imul
in
xchg
jbe
aam
ja
sub
jbe
fs
in
in
ins
stc
in
mov
popf
push
rcl
dec
xchg
popa
jg
out
jmp
into
push
xchg
adc
ins
jns
sbb
cmp
rcl
scas
ins
mov
or
pop
rol
or
jg
idiv
nop
stos
fmul
stos
out
rcr
lods
pop
retf
jb
lods
fst
popf
out
(bad)
ret
stos
das
mov
pop
add
sti
and
inc
sbb
sti
cmp
push
rcl
xchg
xor
addr16
and
xor
data16
jne
or
sbb
aad
mov
mov
add
(bad)
outs
cmp
push
pop
mov
adc
mov
outs
(bad)
pop
in
js
mov
push
add
aaa
dec
clc
stos
cmp
retf
test
mov
pushf
cmp
aad
jmp
pop
int
in
je
and
hlt
mov
pop
pop
call
mov
xchg
push
aaa
push
(bad)
shr
pop
add
hlt
ror
cmps
mov
dec
and
sbb
ret
scas
cmp
add
cwde
add
ror
movs
js
add
mov
rol
pop
cs
inc
sti
xor
or
sub
or
aaa
shr
loop
stos
mov
js
daa
sub
pop
inc
(bad)
adc
mov
jl
addr16
push
(bad)
push
lahf
shl
jmp
fidivr
test
enter
cmp
rol
sbb
call
arpl
mov
lods
mov
xor
mov
xor
jb
jae
jnp
xchg
adc
ins
xor
fistp
stos
sar
push
xor
shl
push
pop
test
push
arpl
xor
scas
inc
dec
pop
int
sub
jg
sbb
mov
adc
stos
sbb
push
fs
mov
ins
push
inc
inc
push
(bad)
cld
imul
aad
mov
push
cmp
mov
fdiv
fimul
movs
das
mov
clc
adc
shr
add
call
sub
sub
cmp
test
pop
es
hlt
pop
inc
mov
daa
xor
test
(bad)
and
adc
adc
push
xor
scas
pop
aad
add
add
inc
push
and
push
pop
jp
sbb
cmp
sahf
jle
dec
push
jno
inc
adc
jecxz
mov
and
pop
mov
xor
into
xor
fcmove
lock
adc
adc
cli
gs
push
or
adc
mov
cld
add
jns
test
sub
and
sbb
mov
mov
in
mov
add
stos
in
dec
mov
test
test
mov
enter
push
xchg
(bad)
push
cmp
shl
mov
pop
sti
adc
sar
xchg
retf
fwait
push
xchg
out
mov
ins
pop
scas
mov
pop
in
(bad)
(bad)
and
adc
(bad)
retf
std
and
push
test
push
lds
nop
cdq
loop
mov
(bad)
popa
rcl
mov
sbb
call
test
push
aam
jl
sti
daa
out
shl
adc
mov
ja
xchg
(bad)
push
dec
xchg
pushf
aaa
add
dec
xchg
and
mov
in
mov
sbb
mov
sti
(bad)
sar
sti
push
mov
or
fmul
mov
imul
pop
dec
adc
push
cmps
dec
sub
xor
xchg
test
sub
gs
out
retf
adc
stc
jae
and
xchg
inc
nop
and
imul
mov
jo
jmp
pop
xor
std
int3
out
icebp
loopne
sub
cdq
sbb
sbb
or
gs
retf
inc
fisubr
in
xlat
dec
outs
cmp
scas
movs
sbb
or
sbb
rol
fs
mov
fld
stc
repz
and
(bad)
or
pop
jecxz
mov
push
inc
xor
mov
lods
mov
movs
inc
sbb
and
test
jge
jb
mov
add
in
ins
movs
jae
mov
jnp
ins
(bad)
test
(bad)
dec
scas
mov
inc
adc
pusha
sar
xor
popa
movs
xchg
jl
jl
xchg
(bad)
mov
inc
out
adc
gs
mul
pop
and
add
inc
outs
mov
add
outs
loope
xchg
push
mov
push
imul
popf
add
nop
call
push
add
nop
outs
xor
cmp
loope
sub
xlat
add
shl
xchg
aaa
xor
and
push
push
jb
(bad)
das
mov
mov
pop
lds
lods
or
jl
out
sub
in
hlt
jecxz
push
cmp
les
outs
loope
scas
movs
dec
scas
(bad)
mov
and
jp
das
into
enter
inc
add
retf
pop
jnp
out
push
fstp
test
or
xor
pop
mov
fs
aaa
mov
mov
mov
mov
add
or
sar
aam
loop
cmc
xchg
inc
fild
mov
sbb
mov
enter
push
push
push
pusha
call
fist
mov
or
daa
sbb
fstp
ret
fmul
xchg
mov
and
hlt
icebp
loop
sub
pop
stos
mov
xchg
dec
aaa
mov
add
cmp
sbb
cmp
dec
(bad)
mov
(bad)
cdq
inc
sub
sub
(bad)
fsubr
les
push
xchg
fs
in
push
mov
popa
push
mov
nop
mov
cld
push
or
(bad)
or
sub
ins
pop
icebp
imul
or
ret
mov
mov
sbb
ss
push
inc
xchg
pusha
jbe
or
jmp
(bad)
inc
xchg
jb
fimul
out
mov
inc
xchg
mov
leave
stos
mov
xchg
sbb
adc
push
ss
xor
out
ret
mul
iret
movs
repz
jbe
movs
lods
xor
(bad)
cmp
dec
iret
imul
loope
test
call
mov
push
cmp
pop
mov
das
jo
loopne
jg
sub
in
dec
cmp
nop
inc
repnz
jge
leave
cmc
aam
jo
ret
and
ror
rcr
cs
sub
stos
add
(bad)
cmps
jnp
mov
jno
in
out
and
add
imul
(bad)
das
push
cli
std
cdq
jnp
mov
or
mov
sub
les
(bad)
lock
lea
call
jecxz
mov
or
jns
push
mov
inc
or
push
or
out
mov
add
scas
push
test
scas
dec
outs
cmps
popa
call
adc
xor
jnp
nop
lahf
adc
(bad)
jo
pop
(bad)
mov
jne
xchg
pop
jno
sbb
imul
cdq
push
mov
and
mov
sbb
xor
test
test
iret
jecxz
dec
je
jp
mov
add
movs
fidiv
ja
ret
test
pop
dec
adc
sub
push
dec
stos
sub
dec
adc
xchg
mov
lahf
xchg
add
pop
xlat
fwait
ss
push
mov
rol
stos
adc
scas
out
outs
call
or
in
shl
sti
xchg
test
inc
jmp
jne
mul
or
sub
jmp
pushf
fdivr
and
repz
fcmovbe
dec
lea
xor
xchg
out
and
cdq
xchg
cmp
cmp
lea
or
adc
stc
inc
inc
(bad)
(bad)
xor
inc
sbb
popf
cmc
icebp
pop
aad
sbb
and
cmps
inc
movs
xchg
add
mov
mov
cld
fwait
dec
out
in
pop
cmp
and
lds
ins
daa
pop
shr
pusha
rcr
movs
into
mov
je
mov
ret
mov
scas
xlat
and
xchg
loope
mov
fwait
(bad)
repz
or
(bad)
fild
into
dec
pushf
lods
mov
aad
fld
cli
pop
sbb
aad
push
xchg
sbb
mov
fcomp
iret
jns
gs
shl
loope
lock
sub
mov
sbb
in
sub
lahf
xor
ret
mov
int3
sub
cmp
xchg
loop
xchg
mov
les
mov
int3
dec
js
inc
neg
mov
(bad)
ds
push
int3
repz
in
rol
arpl
xor
xchg
ds
xor
ins
or
and
ds
into
cs
or
clc
add
gs
iret
aad
fisttp
pushf
addr16
adc
pop
call
call
sbb
out
xor
sbb
sar
ja
addr16
mov
std
movs
cwde
jnp
fistp
xchg
loope
dec
sub
cmp
lods
les
and
mov
push
in
mov
retf
add
outs
out
jmp
into
test
out
pop
pop
jmp
ja
pop
sahf
stos
(bad)
test
jge
aas
push
mov
jne
inc
or
jae
push
dec
cmp
mov
add
sub
test
mov
inc
pusha
jo
inc
push
sub
repz
test
inc
int3
push
(bad)
lea
mov
cmps
sbb
inc
jg
sbb
scas
mov
dec
scas
(bad)
pusha
adc
popa
push
popf
push
aad
jl
adc
mov
jno
xchg
dec
mov
call
pop
or
jg
mov
retf
repnz
push
push
pop
mov
ins
cli
push
add
movs
call
enter
retf
cmps
mov
push
sbb
xchg
pop
(bad)
leave
cmp
push
pop
enter
fstp
xchg
xchg
or
loopne
inc
jl
lds
rol
sbb
sbb
in
loopne
and
pop
mov
sbb
xchg
push
andnps
out
fdiv
mov
es
xor
call
bound
dec
mov
icebp
(bad)
cmc
mov
fist
jmp
out
jmp
push
jo
sbb
int3
mov
das
aam
fistp
jns
ins
aas
push
mov
hlt
outs
mov
mov
jp
mov
movs
out
dec
and
and
mov
sub
sub
xor
test
sbb
sub
sub
pop
dec
pop
out
inc
loop
scas
sbb
add
aas
add
jle
cmp
rol
(bad)
jmp
jg
cmp
clc
add
int
icebp
jp
retf
(bad)
adc
test
mov
es
jne
pusha
adc
pop
rcl
daa
jg
fadd
sbb
adc
jecxz
jp
div
jge
pop
cmp
and
mov
sar
sbb
pop
mov
fsub
(bad)
mov
push
push
xchg
or
fnstsw
push
mov
and
pop
cmp
test
add
ficom
adc
jbe
call
test
test
out
xchg
inc
aam
sub
or
dec
nop
xor
jp
stc
pop
je
pop
sahf
dec
cmp
mov
scas
cmps
mov
rol
mov
(bad)
mov
lods
ror
jne
sbb
(bad)
out
pop
pop
imul
inc
lock
mov
jnp
in
std
pop
lock
pop
fdivr
repz
or
scas
scas
ror
leave
(bad)
repz
jl
mov
outs
in
sbb
test
jp
mov
aad
jmp
hlt
xchg
inc
sub
loop
mov
sub
dec
(bad)
(bad)
cld
push
pushf
mov
les
cld
mov
addr16
jbe
repnz
pop
and
ds
and
ss
pop
scas
cld
int
mov
and
lods
sti
jmp
xchg
out
sbb
(bad)
adc
mov
scas
dec
test
jmp
mov
jge
mov
clc
and
mov
xor
jbe
jl
jno
jl
mov
sub
add
jb
dec
out
jnp
(bad)
adc
push
push
sub
mov
xchg
or
xor
stos
test
inc
dec
ds
push
mov
fnstcw
jnp
mov
or
xchg
in
inc
std
cmc
add
or
shl
push
adc
mov
into
sbb
out
pop
pop
and
fdiv
call
inc
(bad)
int3
cmp
arpl
mov
xor
in
lock
add
pop
sub
mov
imul
into
test
aam
adc
inc
pop
data16
jo
pop
mov
mov
test
jmp
sbb
shl
arpl
scas
pop
mov
scas
jnp
lock
in
in
loopne
inc
push
shl
xor
sub
fild
aad
into
sbb
stc
fnsave
sbb
lods
(bad)
and
sub
repz
shl
jl
jmp
fild
mov
daa
out
fist
aam
(bad)
imul
int3
inc
loope
dec
jg
cmps
dec
add
ror
xor
dec
cmps
xchg
or
mov
push
aaa
ror
shld
sub
pushf
bound
test
mov
and
xchg
push
xchg
mov
rol
sub
mov
jmp
shr
or
into
shl
pop
push
pop
mov
movs
pop
sbb
cmp
sub
add
inc
loope
in
repz
mov
mov
dec
adc
daa
popf
mov
rol
adc
movs
adc
xchg
shl
outs
fdiv
sbb
or
leave
adc
cmc
pop
inc
xor
lods
push
sbb
adc
mov
setno
stos
pop
cmps
(bad)
xchg
jbe
and
cld
xchg
or
push
stc
mov
mov
dec
sub
(bad)
shr
jnp
dec
inc
daa
movs
inc
xchg
loop
sahf
clc
call
aam
clc
mov
pop
jg
jecxz
in
loopne
arpl
int3
les
jb
ds
inc
mov
push
aas
std
sbb
mov
xchg
iret
inc
sub
jne
pop
js
pop
jg
rcl
call
ins
les
in
xor
pop
inc
xor
inc
xor
dec
xchg
dec
mov
sbb
xchg
fwait
inc
dec
jbe
or
cli
and
push
iret
dec
js
ja
push
aas
inc
jne
mov
inc
loope
dec
push
out
repz
mov
xor
push
mov
loopne
stos
sahf
jecxz
sbb
lds
jbe
jno
xor
pop
and
ret
xchg
les
jo
mov
jmp
xchg
ins
fld
cwde
test
adc
je
dec
adc
js
loope
push
out
pop
sbb
push
mov
je
call
mov
adc
inc
dec
lock
pop
dec
cmc
xchg
mov
inc
push
sbb
mov
imul
mov
repz
dec
cmp
cli
push
call
sbb
push
push
cmps
mov
test
call
cmp
adc
std
test
movs
(bad)
retf
mov
jbe
xchg
(bad)
sbb
aas
mov
dec
test
cmp
sti
or
out
and
mov
inc
(bad)
imul
retf
fist
fdivr
xor
bound
lea
push
(bad)
cli
push
adc
(bad)
push
stc
fs
jl
mov
adc
(bad)
xor
xlat
je
sbb
rol
nop
xchg
xchg
cmc
adc
and
cmc
(bad)
cmp
xchg
xchg
rcl
cld
ret
rcr
mov
rol
outs
mov
jp
out
sbb
inc
ret
mov
jle
mov
test
cmp
rcr
dec
ins
jecxz
jns
jns
cmp
add
loope
rcl
add
sbb
mov
jns
sbb
cmps
and
addr16
pop
test
arpl
pushf
xchg
inc
pop
xchg
int
aam
push
sbb
xor
xor
sub
pushf
xchg
sahf
movs
mov
inc
dec
xor
and
adc
dec
cmps
xor
pop
adc
push
push
out
xchg
cmp
push
mov
popa
pop
sar
xchg
leave
cwde
outs
pop
jmp
pop
and
sbb
pusha
sar
inc
sti
lock
lods
mov
mov
inc
inc
fld
ror
fs
aam
add
ds
or
popf
cmp
(bad)
addr16
imul
cmc
or
(bad)
and
mov
xchg
mov
xchg
adc
xchg
inc
add
and
xor
ror
stos
mov
mov
lea
cs
push
test
lods
es
call
loope
xchg
mov
cli
loope
jo
cmps
inc
fwait
xor
jne
ds
adc
test
mov
je
ds
jge
sub
push
jg
mov
cwde
xlat
inc
pop
sbb
stos
mov
sub
adc
fist
jnp
mov
mov
jle
cmp
or
(bad)
mov
addr16
mov
rcr
add
xchg
enter
adc
mov
sbb
xchg
ss
jle
sbb
push
les
mov
or
hlt
and
(bad)
adc
jge
scas
push
push
leave
out
(bad)
test
test
dec
xor
movs
mov
into
xor
(bad)
cs
outs
push
push
dec
dec
sub
(bad)
pusha
and
inc
push
mov
xchg
inc
push
lock
xor
jnp
mov
lock
or
loopne
lock
xchg
hlt
arpl
inc
es
or
call
jl
out
mov
xor
mov
in
dec
jl
mov
call
loopne
rcl
(bad)
mov
adc
aas
pop
test
out
aam
jecxz
push
jno
xlat
jle
mov
adc
out
outs
lds
retf
or
cld
arpl
or
out
cmp
out
adc
dec
sub
sbb
int
inc
fnstenv
in
inc
inc
jne
cmp
fwait
adc
fdivr
jns
mov
imul
sahf
xor
aad
sahf
fisub
enter
push
xor
push
(bad)
gs
(bad)
jecxz
mov
push
js
jmp
je
jecxz
xor
mov
jg
jne
popf
push
(bad)
mov
mov
xchg
fdivr
pushf
movs
in
loope
and
or
mov
xchg
retf
aad
lea
or
mov
psubusw
xor
add
stc
xor
push
ror
cmps
sbb
in
cmps
or
fwait
push
mov
jecxz
xor
add
rcl
mov
xor
test
out
sar
or
scas
cmp
mov
sahf
mov
inc
mov
cmp
call
push
gs
dec
push
jg
mov
jge
aaa
sub
pop
imul
xlat
mov
stos
call
pop
push
div
out
ins
(bad)
movs
and
cdq
or
ror
push
cs
dec
xchg
push
jl
push
adc
gs
sbb
cmps
mov
in
jg
dec
jl
adc
push
and
(bad)
jmp
aaa
adc
stos
and
mov
sti
dec
pop
scas
loope
mov
dec
push
pushf
mov
out
pushf
(bad)
movs
rcr
pop
sbb
push
push
out
cmp
adc
xchg
imul
inc
movs
inc
movs
daa
mov
jge
and
test
addr16
into
sbb
inc
push
pop
fsub
pusha
in
or
jp
dec
xor
push
mov
mov
mov
sbb
fmul
sub
pop
pop
stos
add
js
inc
xchg
mov
daa
push
adc
out
(bad)
sar
data16
push
mov
movs
les
aam
and
add
and
sub
cmp
sub
add
pop
lahf
dec
(bad)
sbb
daa
pop
mov
push
push
xchg
and
pop
sub
dec
cmp
sub
push
mov
popa
xor
fistp
lds
jle
idiv
enter
hlt
rol
clc
scas
mov
and
mov
add
inc
imul
pop
int3
call
test
movs
int3
cmp
(bad)
push
mov
in
cmp
pop
popa
adc
nop
inc
inc
out
cdq
shl
inc
push
jbe
test
mov
call
outs
or
dec
mov
and
mov
sbb
mov
inc
inc
sti
pop
inc
push
out
in
pop
jmp
adc
aad
mov
pop
jbe
mov
lods
push
les
repnz
xchg
into
jae
movs
out
in
xchg
add
repz
jge
in
movs
ss
add
fxch
cmc
imul
aaa
loope
mov
cld
js
into
(bad)
fisttp
shl
imul
and
cli
and
pop
stc
mov
xor
jg
pop
scas
cmps
inc
sub
aam
mov
inc
aad
jl
test
or
dec
aaa
scas
loop
cmp
jg
call
mov
mov
cmps
mov
sbb
lods
pop
and
pop
rcr
pop
add
das
out
push
mov
jnp
add
rcl
inc
jmp
sbb
sub
je
daa
inc
jle
sti
movs
dec
add
jecxz
shr
lods
inc
jg
loop
adc
mov
ins
out
push
sub
push
add
ja
stc
sbb
cwde
cmp
jb
mov
xor
jp
in
jmp
or
or
les
inc
imul
or
in
ret
xor
scas
jecxz
leave
gs
pusha
test
aam
cmp
xor
adc
call
push
xchg
scas
sahf
jno
cli
jno
sub
adc
inc
inc
mov
xchg
dec
sbb
mov
ret
test
inc
sub
mov
sub
push
enter
cld
pop
cmp
jo
jmp
out
gs
jbe
out
push
pop
loope
adc
arpl
inc
mov
and
in
pop
(bad)
mov
sub
xchg
es
in
jle
xor
mov
les
ins
dec
sbb
inc
cs
into
inc
adc
jmp
jo
test
aaa
jmp
in
push
cmp
lock
and
mov
mov
jns
(bad)
into
cmp
adc
in
lahf
push
popf
mov
inc
dec
in
mov
cwde
fstp
pop
retf
je
dec
outs
mov
(bad)
xchg
movs
stos
clc
or
leave
outs
sar
in
test
pop
test
dec
retf
iret
mov
or
mov
dec
arpl
sub
jbe
in
cmp
pop
int3
mov
out
dec
push
dec
fadd
hlt
fdiv
xchg
lds
jo
cmps
enter
adc
add
pop
jmp
add
pushf
sub
clc
xchg
xchg
shl
dec
lea
mul
cmps
lods
mov
pusha
sbb
and
mov
loop
ret
aaa
sub
xor
leave
jecxz
rol
mov
sub
jno
imul
pusha
adc
es
xchg
jns
ret
mov
mov
push
ret
push
outs
je
arpl
shr
or
adc
pop
(bad)
int3
in
scas
adc
cmp
push
sahf
inc
adc
jmp
(bad)
adc
xor
in
sub
sbb
jne
xor
mov
xchg
cmps
lahf
cmps
xchg
fisttp
fiadd
fcmovnbe
xchg
adc
int3
jo
dec
into
test
loop
or
dec
out
xchg
mov
iret
jne
push
jle
jmp
dec
fnsave
lock
push
mov
mov
sar
push
(bad)
test
lea
fcom
out
pop
push
fstp
test
xor
xor
bnd
dec
aam
adc
mov
(bad)
push
ror
sub
out
loopne
or
jmp
dec
sbb
cmp
jnp
ficom
jmp
adc
or
fstp
int3
jno
and
test
(bad)
mov
mov
dec
shr
xor
icebp
cmps
xchg
(bad)
movs
cli
pop
das
daa
push
inc
div
inc
jae
(bad)
mov
lock
ss
pushf
ret
rcr
mov
out
lahf
inc
fwait
not
or
stc
out
out
dec
retf
cmps
mov
mov
mov
add
pop
std
dec
fisttp
jo
out
mov
or
js
push
fild
mov
xchg
fdiv
or
hlt
sub
std
xor
dec
xor
xchg
ror
mov
dec
dec
int3
div
test
cmp
loope
call
shl
les
cmc
imul
ficom
sbb
dec
loope
out
inc
mov
cli
sbb
imul
inc
out
lods
sbb
ret
test
mov
xor
ins
mov
das
sub
pop
xor
mov
dec
call
push
inc
js
xlat
mov
or
movs
hlt
add
xlat
add
imul
pusha
inc
fiadd
bndstx
inc
int
lods
or
add
cmp
mov
dec
dec
hlt
stos
push
dec
cdq
jb
mov
jo
loope
mov
pop
push
xchg
call
push
and
add
cwde
leave
cmps
enter
dec
ret
xchg
xchg
leave
add
cmp
stos
scas
ror
movs
leave
add
sub
add
fist
xchg
pop
or
adc
adc
iret
sub
xor
scas
js
daa
dec
mov
cwde
mov
in
bound
je
(bad)
pop
mov
sub
xor
ret
scas
xor
test
mov
inc
jnp
shl
mov
mov
mov
mov
xlat
(bad)
lahf
lahf
xchg
push
adc
enter
or
mov
dec
jnp
sti
mov
mov
test
iret
fst
mov
jbe
fneni(8087
push
or
call
sbb
sar
mov
push
pop
mov
adc
sub
jmp
mov
fistp
fidiv
jo
jne
mov
arpl
addr16
pop
push
loope
mov
or
cmp
movs
mov
push
or
adc
(bad)
aas
pop
sub
out
sar
dec
cmp
dec
mov
push
psllw
xchg
retf
mov
and
or
cmp
(bad)
ins
mov
aam
shl
neg
sub
aam
mov
test
adc
dec
jle
mov
jge
or
lock
(bad)
sahf
or
mov
jo
adc
cmps
or
out
cmp
mov
(bad)
inc
ss
repz
out
in
cli
sbb
ins
sbb
aad
fisub
js
sti
mul
retf
and
les
nop
jmp
jo
test
(bad)
imul
sar
sub
sbb
lods
sub
das
and
lahf
aad
loop
(bad)
fistp
xor
xor
adc
(bad)
iret
lahf
jae
into
or
in
int
or
mov
push
mov
mov
and
or
lds
scas
pop
stos
test
lds
push
push
sub
fadd
aas
add
fld
adc
xor
add
les
cs
mov
cmp
pop
cli
fs
mov
ins
mov
aad
pop
cs
pop
call
ja
dec
jl
push
xor
icebp
push
loopne
pusha
es
pop
(bad)
jmp
jo
(bad)
ds
xchg
pusha
xchg
aaa
pushf
or
push
adc
and
shl
xchg
mov
clc
scas
jecxz
add
out
pop
in
mov
xchg
xor
sbb
adc
pop
mov
add
popa
int3
xor
fwait
out
add
jg
mov
(bad)
idiv
push
nop
fcomip
push
xchg
pop
ds
lea
inc
mov
jmp
push
in
arpl
push
lods
push
lea
jmp
popa
ret
pop
retf
in
jbe
xchg
paddb
sbb
xor
cwde
jecxz
rol
test
xchg
xchg
call
xor
jp
adc
cmps
cmc
xor
add
jmp
and
push
xchg
lahf
ja
loope
pop
ins
retf
push
inc
cld
jae
bound
in
(bad)
xlat
aad
iret
sbb
pop
out
dec
iret
into
test
push
out
xor
in
(bad)
push
lea
mov
pop
pop
add
retf
sub
fld
(bad)
dec
mov
lahf
sbb
call
adc
add
dec
int3
pop
adc
in
jns
pop
mov
add
mov
dec
or
pushf
out
hlt
sub
shl
xor
stos
jmp
xchg
mov
cdq
push
movs
xchg
cs
div
inc
cld
mov
xchg
xchg
jne
adc
dec
xor
in
int
retf
sub
jg
fcmove
jnp
gs
test
adc
jbe
dec
sahf
jno
or
ret
dec
mov
cld
and
jl
cli
xchg
or
les
xor
clc
mov
xchg
mov
pop
test
in
cmps
inc
mov
push
out
cmp
daa
(bad)
push
jbe
hlt
cld
lock
mov
inc
add
cwde
test
outs
cmps
adc
and
inc
cmp
retf
lock
add
xchg
ins
xchg
int3
leave
mov
inc
mov
and
popf
jns
or
aad
hlt
jnp
movs
cmovl
mov
cmps
lahf
jno
mov
sub
xor
or
push
cwde
jge
jle
inc
(bad)
imul
and
or
pusha
xchg
addr16
pop
in
stc
or
outs
sti
sbb
cld
or
mov
repnz
lock
pop
mov
sub
mov
cmps
rcr
enter
mov
or
test
sub
inc
in
cmp
bnd
add
mov
popf
mov
inc
stos
(bad)
and
sbb
cmp
dec
fstp
test
stos
out
add
mov
call
add
xor
push
aad
pop
jmp
cmp
sub
call
sti
repz
sub
jns
cmp
fisttp
dec
mov
movs
pop
iret
pop
mov
into
fsub
ret
or
test
push
cmp
stc
pop
addr16
push
outs
adc
retf
xchg
and
cmp
jne
inc
cmp
idiv
add
inc
aas
cmps
fwait
aam
mov
sub
push
bound
ret
mov
retf
and
sahf
(bad)
push
add
push
repnz
or
icebp
jb
movs
ror
jmp
pop
(bad)
xchg
test
fcomp
dec
shl
hlt
push
add
dec
out
xchg
daa
mov
sbb
inc
mov
faddp
mov
jo
sbb
and
mov
mov
mov
ins
pop
loop
shr
and
call
push
mov
ret
push
call
(bad)
(bad)
push
xchg
dec
jno
sbb
push
test
mov
arpl
out
test
pop
out
(bad)
push
xchg
movs
jae
iret
dec
rcr
cmp
push
dec
scas
addr16
movs
cmps
shl
(bad)
jg
icebp
clc
repnz
mul
adc
and
jmp
scas
fcomp
cmp
mov
mov
in
dec
ja
scas
adc
push
test
push
cmp
inc
add
push
in
xchg
mov
pushf
push
pop
mov
test
mov
rol
cwde
inc
cli
cld
lahf
and
scas
ret
xchg
xchg
ins
test
mov
iret
pop
jmp
add
popf
fdivr
clc
mov
scas
jl
lahf
cmp
inc
xchg
dec
rcl
or
and
test
aad
mov
add
push
add
scas
or
out
repnz
xchg
jb
add
adc
push
xchg
cmp
in
call
stos
ss
cmp
gs
pop
mov
jmp
into
jmp
fisub
adc
int
add
xchg
das
pop
pushf
cs
xor
ds
out
dec
bound
cmp
cmp
sar
pop
pop
jge
sbb
adc
xlat
mov
push
push
into
xor
cmps
mov
pop
das
dec
inc
fiadd
fadd
stos
dec
jbe
aaa
jnp
mov
mov
repz
xchg
push
xchg
out
xor
imul
sbb
push
mov
(bad)
and
(bad)
icebp
movs
iretw
push
enter
pop
ret
std
push
aam
mov
pop
ror
xchg
cmp
mov
xchg
push
add
jl
cmps
push
dec
jnp
mov
imul
inc
lods
in
sub
imul
scas
loop
into
add
adc
push
xchg
sbb
jbe
pop
adc
mov
jb
xlat
inc
nop
lea
add
cmp
and
push
xor
or
xchg
adc
mov
mov
popa
xor
xlat
aam
ss
pop
dec
popa
lods
(bad)
mov
xor
shl
rol
jno
mov
push
loope
ficom
xchg
out
dec
imul
mov
dec
cmp
jns
fwait
dec
sub
fcmovbe
mov
dec
test
mov
push
inc
cmp
rcl
inc
mov
out
mov
(bad)
in
fdiv
cmp
cmp
and
pop
inc
sub
push
or
into
push
leave
(bad)
mov
imul
test
inc
out
add
shl
(bad)
cmp
int
mov
push
xrelease
pop
add
jo
fxch
shr
jg
das
xchg
or
addr16
clc
lock
jb
shl
cwde
pop
scas
sub
mov
loop
out
cmc
jl
in
or
fstp
(bad)
cmp
in
add
push
fidiv
push
dec
test
cmp
test
int3
fsub
je
cli
jle
mov
mov
push
pop
cmp
ss
xor
pop
inc
xor
sbb
(bad)
out
xchg
pop
test
test
call
mov
add
sub
xchg
or
(bad)
adc
(bad)
nop
dec
inc
cmps
inc
dec
mov
inc
neg
cs
test
jne
mul
addr16
sub
jge
call
jecxz
sbb
repnz
jnp
add
ins
repz
mov
mov
cmp
fdiv
(bad)
adc
fisttp
sub
imul
pop
int3
lock
clc
es
xor
xchg
xor
mov
test
mov
js
repz
cli
mov
imul
pop
adc
std
cmp
lock
sbb
call
arpl
push
push
mov
(bad)
dec
lods
out
out
add
push
push
pop
mov
cwde
out
sub
mov
mov
mov
cmps
xchg
dec
jge
push
call
push
push
sbb
xchg
add
pop
inc
iret
out
and
add
pop
pusha
popa
jno
ret
push
mov
and
jle
(bad)
pop
(bad)
and
or
push
cmp
out
adc
ss
sar
imul
mov
push
dec
imul
cmp
daa
cmp
xchg
cdq
mov
or
bound
sub
inc
ret
sub
sub
jo
fnstenv
jnp
es
push
sub
inc
ret
pushf
and
cwde
inc
mov
sbb
pop
or
mov
cdq
mov
pop
mov
arpl
and
dec
inc
push
jmp
outs
call
sbb
sti
out
repz
gs
cmps
or
mov
shr
jne
ss
stos
es
(bad)
scas
dec
pop
mov
mul
mov
mov
jecxz
dec
xor
pop
adc
movs
mov
(bad)
shr
push
jmp
mov
outs
loopne
jnp
mov
mov
mov
gs
mov
pop
cmp
and
ja
js
xchg
xchg
loopne
cli
xor
jg
ret
push
push
(bad)
jo
push
mov
adc
mov
les
ja
xor
popf
dec
cdq
jecxz
stos
cmc
mov
js
cmc
xchg
lods
bound
shr
mov
repz
sbb
xor
cwde
mov
dec
cmc
in
and
int
sub
in
loopne
xchg
sbb
je
lods
mov
xchg
int
imul
cmps
xor
cmp
dec
pop
leave
mov
mov
jg
push
xor
shl
scas
xchg
or
mov
mov
lods
inc
imul
push
(bad)
or
adc
pop
fisub
retf
inc
ss
mov
cmp
vmwrite
mov
fbstp
inc
adc
cmp
mov
mov
mov
cmps
pop
xor
push
mov
sub
addr16
mov
loop
mov
loop
pop
icebp
neg
sbb
test
mov
sti
mov
shl
jge
sub
(bad)
sbb
inc
lock
and
dec
xor
add
jno
mov
cwde
fwait
mov
test
cmp
add
xchg
cmp
pop
scas
inc
mov
xchg
push
push
movs
aad
push
stos
es
aas
push
std
xor
dec
aas
test
out
ret
push
aas
xlat
mov
cmp
pushf
xor
arpl
(bad)
sahf
jnp
sbb
sub
test
call
mov
jne
mov
call
sub
push
sub
xchg
add
iret
jns
dec
data16
repnz
loopne
cmp
mov
pop
mov
in
loope
(bad)
cli
out
mov
mov
retf
cmp
fist
xor
(bad)
mov
in
enter
mov
es
pop
pushf
test
dec
adc
or
sar
cmc
and
or
sub
and
scas
jae
(bad)
and
int
loop
mov
push
xchg
movs
cdq
in
jmp
mov
push
pop
mov
jnp
das
jbe
aam
test
shl
cli
ficom
sbb
stos
pop
call
(bad)
or
int
lahf
mov
stc
test
out
xor
xor
lea
jo
push
jge
loope
rcl
nop
jmp
mov
xor
adc
push
jmp
xor
lock
outs
test
cmp
hlt
pop
int3
mov
lea
xchg
test
sbb
adc
jle
sub
dec
lock
int3
ins
jns
mov
cmp
scas
xchg
in
pop
inc
pop
add
mov
std
mov
ficom
enter
dec
psrad
fucom
push
pop
mov
mov
dec
cmp
xchg
stc
adc
loop
jb
call
stos
pop
fild
test
test
xor
fst
xor
lock
xchg
mov
fdiv
jnp
add
ror
cld
dec
aaa
stc
fcomp
mov
cmp
cmp
shr
add
cld
jl
addr16
es
push
or
mov
test
lods
jo
repnz
xor
enter
cld
adc
mov
xor
int3
sbb
mov
fnstenv
aas
jbe
xchg
pop
ror
mov
mov
js
or
sbb
mov
ins
mov
mov
aad
pop
or
sbb
jbe
ins
in
repnz
jmp
addr16
in
mov
sub
xor
push
push
retf
xchg
test
pop
outs
jp
sbb
aad
sub
pushf
out
(bad)
mov
push
movs
xchg
out
mov
mov
nop
cmps
stc
nop
mov
jecxz
(bad)
jb
add
jbe
sub
mov
inc
or
push
add
fidivr
mov
repnz
scas
xlat
cmp
dec
xor
dec
ins
in
or
and
test
inc
loope
dec
retf
inc
pop
call
lock
jle
(bad)
std
or
add
mov
xor
imul
icebp
aam
push
push
xchg
xchg
dec
mov
xchg
mov
mov
lods
arpl
retf
jle
loop
out
loopne
xor
ficomp
mov
push
and
and
lahf
sub
sub
pop
sub
sbb
mov
mov
mov
imul
cmp
mov
es
sahf
arpl
push
jmp
mov
pop
cs
lds
sahf
inc
xchg
ins
fst
sar
aad
jp
std
cmp
push
imul
jl
xchg
sub
lods
in
sbb
and
add
xchg
sub
pop
xchg
sub
mov
fmul
retf
mov
push
js
(bad)
clc
adc
jmp
mov
and
or
push
xchg
xchg
fild
scas
cwde
jo
(bad)
in
push
or
in
gs
imul
push
push
call
and
xchg
inc
xchg
pushf
or
call
mov
mov
retf
(bad)
ffree
push
ret
mov
jbe
mov
xlat
out
cld
aam
and
js
bound
push
or
push
jmp
inc
dec
mov
and
xor
arpl
test
test
(bad)
ror
mov
out
add
and
xor
stos
ror
pushf
repz
mov
cmp
retf
jmp
in
push
dec
jp
adc
or
mov
xor
hlt
aaa
(bad)
cld
inc
hlt
lock
xchg
(bad)
xor
and
sub
add
xor
inc
xor
out
sub
and
popf
xchg
mov
hlt
dec
mov
xchg
mov
mov
neg
pop
jns
cli
movs
inc
das
ds
push
(bad)
call
cmp
push
xchg
gs
mov
js
sub
sbb
push
or
and
mov
fldcw
pop
es
lahf
retf
dec
js
mov
jmp
cmps
aam
icebp
lea
dec
sbb
jnp
or
adc
inc
mov
arpl
and
add
enter
adc
aaa
xor
sbb
and
dec
fstp
jle
sub
inc
fs
mov
xor
pop
mov
outs
cmp
rol
xor
outs
inc
popa
sbb
fdivr
call
mov
mov
xor
in
and
sbb
iret
mov
jle
repnz
fs
outs
out
stc
fwait
pop
data16
shl
push
or
sahf
add
xor
cs
mov
test
imul
fsub
xor
out
pop
xor
jns
out
fisttp
frstor
sbb
xor
push
xor
inc
push
sbb
les
add
movs
or
or
mov
frstor
test
clc
ret
idiv
sbb
fld
xchg
dec
inc
pop
(bad)
test
push
jg
and
int3
jne
jp
enter
pop
add
jns
cwde
xor
sbb
ins
push
outs
daa
rol
pop
and
xor
xor
cli
out
ret
cmp
inc
je
in
add
dec
jg
lea
je
cmp
repnz
call
stos
cmp
push
jmp
stos
rcl
and
mov
push
ja
repz
dec
push
outs
ret
arpl
jo
xor
cmp
imul
jmp
cdq
push
imul
xor
or
in
pop
repnz
fisubr
and
mov
call
out
repz
cmp
dec
push
repz
inc
movs
hlt
push
mov
call
shl
add
cmp
(bad)
cld
add
or
leave
mov
sub
mov
shr
lods
ss
push
mul
mov
lods
jbe
or
loop
pop
in
(bad)
into
sub
cs
push
push
cs
lahf
fwait
cmp
mov
into
xor
pop
(bad)
fcom
xchg
and
out
stos
dec
jg
daa
mov
sub
aad
fxtract
mov
movs
cmps
daa
(bad)
lock
lds
push
std
int3
sub
xchg
sbb
mov
scas
loopne
les
pop
aad
in
cmp
movs
pusha
sar
cld
(bad)
cli
xchg
test
mov
sub
fs
push
clc
retf
enter
pop
inc
repnz
mov
or
out
int3
adc
iret
mov
inc
(bad)
push
in
popa
repnz
adc
mov
(bad)
cmp
cli
adc
push
ret
(bad)
out
sub
mov
ror
or
sub
mov
aam
and
pop
call
cmp
pop
das
js
pop
or
out
xor
inc
dec
adc
ret
xchg
inc
lods
outs
dec
dec
sub
nop
cmp
(bad)
popf
push
xchg
inc
imul
xchg
mov
fiadd
or
ins
mov
xchg
pop
or
lods
inc
fsub
sbb
push
and
jle
xchg
stos
cmp
mov
adc
data16
push
clc
pop
ins
jne
and
xlat
out
xor
or
repz
or
mov
pop
fcmove
popf
pop
pushf
adc
adc
lods
loop
neg
sahf
test
sbb
jnp
stos
shr
xchg
pop
mov
sbb
add
jns
mov
ss
aas
dec
pop
push
inc
jbe
mov
fwait
lea
not
dec
fwait
sub
retf
popa
rol
and
fst
repz
enter
jns
xchg
cmps
scas
loope
mov
scas
jmp
fstp
scas
push
fmul
out
dec
call
jl
ss
jle
repz
mov
inc
loopne
fnstenv
test
dec
and
pop
addr16
push
mov
cmc
(bad)
mov
div
sar
mov
and
xor
das
jle
push
pop
or
rcl
std
pop
cmp
leave
adc
mov
in
xor
xchg
dec
aad
out
(bad)
sub
lods
or
dec
cmp
int
daa
fldcw
xor
cs
movs
fs
mov
(bad)
pop
call
cli
fwait
push
sbb
adc
mov
jg
jmp
xor
cmps
fst
sbb
add
add
and
inc
(bad)
add
mov
lea
push
ss
inc
out
push
jge
mov
or
fbld
inc
stos
ret
jno
jmp
push
push
push
repnz
lds
push
movs
xor
adc
dec
loop
add
sub
pop
xchg
mov
sahf
xchg
(bad)
aad
jo
fwait
cmps
cwde
sahf
stos
pop
call
inc
sar
mov
nop
pop
or
jae
jmp
jo
pop
lods
pop
call
xchg
mov
or
into
cdq
jl
ficomp
or
jge
imul
nop
jmp
ss
mov
xor
jmp
mov
inc
stc
xor
mov
cs
inc
inc
sahf
stc
fld
rcl
mov
div
and
cmps
sub
mov
fild
or
adc
icebp
add
push
idiv
in
mov
mov
mov
bound
mov
or
mov
push
pop
xchg
leave
mov
int
jg
inc
add
sub
push
hlt
ret
in
push
(bad)
pop
xchg
mov
xchg
ret
iret
fnstenv
aas
and
imul
in
inc
clc
and
stc
adc
xor
lock
or
mov
in
push
add
shl
inc
dec
jno
in
adc
pushf
shr
arpl
mov
jl
xchg
jbe
dec
popa
cdq
(bad)
mov
adc
mov
mov
sbb
rol
hlt
in
nop
int3
retf
scas
xchg
mov
and
mov
xchg
into
fimul
data16
jp
movs
mov
jle
jl
(bad)
ins
push
fwait
call
push
fsub
push
pusha
daa
rol
es
retf
pop
fcomp
xchg
jae
jb
daa
mov
or
dec
stos
pop
rcr
pop
outs
js
icebp
(bad)
ds
sbb
leave
adc
xchg
js
inc
mov
je
addr16
hlt
mov
scas
and
pop
or
lods
jo
or
in
sbb
ror
cmps
sahf
mov
lods
cmp
cli
add
fisubr
sbb
(bad)
movs
or
out
test
sbb
push
das
inc
in
ins
(bad)
repnz
xor
push
retf
mov
jae
lock
das
mov
(bad)
aas
aam
push
popa
jg
cmp
shr
sbb
pop
sub
hlt
mov
out
pop
pop
cmps
fwait
cmp
in
jmp
pop
jecxz
adc
retf
ds
jae
inc
dec
jl
loop
mov
push
sbb
adc
jnp
push
lds
mov
xor
dec
jle
mov
stc
and
int3
lds
push
add
sbb
xor
push
mov
mov
inc
adc
ret
pop
imul
inc
mov
mov
in
shl
loope
xor
div
sbb
xor
fsubr
pop
cmp
in
add
ins
dec
bswap
iret
push
imul
pop
pop
or
jp
mov
scas
dec
and
hlt
sub
sub
loope
pusha
push
rcr
iret
pop
repnz
sbb
jno
xor
xchg
out
adc
add
imul
aad
test
dec
mov
dec
add
and
or
loope
out
mov
popa
fld
pop
imul
mov
xchg
cmp
ins
test
cmp
and
inc
fsubr
enter
xchg
hlt
cmp
retf
xchg
cmp
aad
mov
adc
push
mov
pop
fs
jg
jge
jg
xchg
shr
jmp
shl
cmp
repz
or
lea
out
xor
retf
push
movs
inc
push
aad
adc
and
jb
adc
stos
mov
inc
sti
xor
rol
pop
jmp
jge
out
mov
add
xor
pop
cmp
mov
mov
ret
xchg
mov
repnz
mov
test
test
cmps
or
lock
sbb
mov
arpl
shr
cmp
or
lods
mov
push
dec
xchg
xor
and
enter
xchg
in
nop
fnstsw
and
inc
xchg
and
cdq
jbe
xor
rol
outs
sub
xchg
jl
push
mov
cli
stc
test
dec
aas
stc
fsub
iret
jae
push
adc
mov
pop
sbb
fwait
or
popa
mov
sbb
xchg
stc
daa
shl
sub
test
dec
jmp
(bad)
mov
es
inc
shl
adc
mov
in
mov
mov
jecxz
jo
lea
dec
inc
add
jp
ins
jo
ins
sbb
mov
in
ss
inc
lock
mov
sbb
inc
cmp
add
inc
push
jecxz
mov
or
cld
adc
ds
pop
movs
xchg
mov
outs
xor
push
xchg
xor
les
pand
call
pusha
or
pusha
jb
fadd
stos
xor
lds
mov
fmul
loop
mov
mov
adc
ja
int3
call
pandn
adc
fdivp
sbb
jmp
jmp
jo
ja
mov
inc
adc
in
jle
push
or
ds
sar
sar
sbb
pushf
push
popf
mov
gs
mov
rcl
fisttp
push
inc
fisttp
adc
push
adc
mov
xor
pop
jl
cmp
icebp
jmp
xchg
scas
jnp
xchg
in
push
mov
test
fwait
jns
(bad)
or
(bad)
sbb
mov
jle
inc
stc
les
xlat
sti
aaa
gs
jg
dec
jge
(bad)
repnz
add
ja
xor
or
(bad)
mov
in
pop
mov
mov
fdivr
cmp
push
frstor
and
xchg
pop
add
sysenter
ret
repz
pop
dec
mov
mov
jmp
jecxz
mov
mov
aaa
and
sub
pop
mov
sub
push
cwde
inc
pop
mov
and
shl
jl
add
lods
stos
mov
inc
xchg
xchg
jns
mov
jnp
xchg
jae
jle
xchg
jmp
jno
sbb
je
das
lods
nop
or
in
pop
hlt
inc
jmp
int3
iret
cmp
outs
mov
dec
push
pop
clc
sub
pop
xchg
adc
mov
mov
mov
mov
or
in
hlt
stos
test
mov
mov
inc
jp
in
xor
idiv
scas
jnp
ret
in
inc
sub
int
jno
and
add
mov
adc
pop
and
aad
sbb
in
and
inc
mov
dec
adc
mov
mov
add
popa
ins
xchg
jo
aaa
inc
push
mov
lahf
xor
or
lods
cmp
push
imul
jae
or
(bad)
sub
push
adc
push
ret
inc
pop
lds
repz
push
cs
hlt
cmp
push
shl
movs
push
loopne
je
out
and
or
cmc
(bad)
(bad)
adc
jns
jb
jae
adc
test
pusha
pop
out
mov
mov
sbb
push
jae
retf
pop
ja
jg
add
fwait
jnp
mov
cmc
adc
push
in
dec
or
ja
cld
iret
cmps
push
loope
pop
es
repnz
(bad)
daa
xor
xor
fs
xor
rcr
push
iret
mov
sar
or
mov
jmp
mov
and
aam
pop
jb
push
fs
sbb
adc
fs
call
jecxz
and
dec
pushf
mov
mov
out
arpl
(bad)
ret
aam
pop
add
and
fwait
in
mov
imul
pop
in
gs
je
mov
scas
cmp
outs
jbe
add
and
daa
test
in
xchg
pop
xchg
dec
jb
jbe
cdq
push
cmp
push
mov
xchg
inc
cs
inc
popa
ds
jp
sbb
mov
(bad)
lods
mov
xlat
stos
movs
cld
bound
in
sub
popa
cmp
movs
inc
cdq
sub
lea
mov
push
mov
ins
mov
xchg
push
sub
xor
push
push
xor
xchg
jnp
loopne
pop
(bad)
jbe
repz
pop
xchg
or
jo
repnz
cld
into
and
mov
cli
lea
ret
pop
cli
sub
rol
jle
xor
lea
sbb
inc
loope
push
and
sti
jge
movs
fistp
std
(bad)
fwait
dec
jg
add
call
xor
xchg
push
or
(bad)
push
(bad)
pop
jne
aad
dec
mov
pop
push
pop
mov
and
(bad)
fwait
mov
repnz
imul
out
rcl
test
stos
push
rol
movs
sub
push
lods
xor
jmp
jno
sub
cmp
push
adc
repnz
and
cdq
or
sar
and
stos
push
jecxz
out
mov
sub
cmps
and
mov
int
into
sbb
movs
and
lahf
sbb
shr
popf
js
add
loope
mov
mov
dec
and
loop
popa
js
pop
cmps
aas
sbb
fwait
paddb
jns
dec
(bad)
(bad)
sub
mov
sub
aaa
repz
mov
shr
add
addr16
pop
outs
mov
inc
paddusb
push
rcl
or
rol
imul
push
pushf
mov
push
aad
test
inc
in
(bad)
adc
push
int3
and
xchg
xchg
loopne
ins
mov
scas
mov
xor
jmp
fwait
gs
cmps
sbb
test
arpl
call
pop
cmp
aam
popf
mov
retf
loop
inc
cmp
fst
js
ficom
jmp
test
enter
rcr
movs
jl
idiv
mov
rol
(bad)
xchg
std
mov
mov
js
ds
inc
cmp
cdq
pop
sbb
icebp
adc
cmp
sub
inc
sub
push
loope
jns
sub
xlat
sub
xor
loope
imul
pop
sbb
les
sahf
jb
adc
push
cmp
bnd
inc
xchg
call
push
fnsave
and
lods
xchg
inc
repnz
cmp
mov
aas
aad
enter
mov
ss
jo
dec
xchg
pop
les
addr16
leave
pusha
sbb
xchg
push
sti
arpl
xchg
aaa
inc
fldcw
mov
(bad)
pop
and
add
jg
xor
lods
push
jbe
into
fnstcw
xor
sbb
fimul
add
lods
das
mov
adc
test
rol
sahf
xor
cmp
sar
or
(bad)
inc
pop
pop
push
fisttp
push
imul
mov
push
adc
jle
(bad)
pop
pusha
cld
mov
ja
pop
xor
jg
(bad)
jecxz
lea
inc
pop
and
sbb
sbb
pop
clc
sbb
les
xor
mov
ds
xchg
ins
push
nop
or
clc
xor
je
dec
push
fdivr
dec
(bad)
adc
xchg
out
mov
sbb
add
pop
push
int
test
retf
push
cld
cmp
in
leavew
std
mov
mov
stos
fs
hlt
dec
out
cli
addr16
fadd
and
and
mov
dec
in
pop
mov
je
pop
adc
xor
add
mov
jmp
push
jmp
xor
push
pop
ret
addr16
ds
enter
arpl
xor
dec
or
call
jae
fcmovne
out
imul
shl
les
adc
test
mov
push
mov
test
add
dec
inc
sub
push
and
adc
mov
push
imul
lds
push
outs
div
ret
cmp
cmp
push
sub
and
cmp
dec
push
out
xlat
mov
std
or
sbb
out
or
lock
mov
push
sub
mov
mov
or
pop
mov
pmullw
shl
add
pusha
ror
shr
sbb
cmp
adc
mov
jg
icebp
sar
call
push
mov
shl
dec
imul
sub
jne
sar
js
xor
sub
loop
xor
jmp
(bad)
pop
add
mov
call
(bad)
loopne
sub
aaa
cmp
shr
mov
adc
repnz
mov
repnz
sbb
mov
mov
mov
push
xchg
sbb
(bad)
cld
fisttp
jns
rep
push
popa
aad
fcomp
bound
mov
mul
fiadd
jg
es
mov
cmp
lahf
xor
and
mov
push
push
and
mov
push
mov
das
cmp
xor
jg
scas
and
call
ss
push
mov
sbb
pop
and
stos
sbb
(bad)
add
or
xlat
dec
lods
cmp
ret
rol
sub
sbb
xchg
test
pop
xchg
adc
mov
add
add
or
retf
sbb
mov
sbb
mov
mov
mov
stos
pminsw
(bad)
xor
shr
inc
ret
lods
mov
jg
mov
push
add
(bad)
hlt
fdivr
mov
jp
or
into
fistp
sub
clc
jl
stos
mov
fist
push
imul
add
in
lds
dec
cli
popa
adc
fcomi
fs
std
mov
xor
mov
movs
add
add
jae
cmp
push
movs
pop
(bad)
stos
fstp
retf
ja
(bad)
and
fnsave
adc
test
loop
jmp
add
cmp
mov
mov
aad
ror
mov
leave
jb
cmp
test
in
xor
mov
ret
(bad)
adc
pop
and
sahf
pop
mov
mov
test
pop
fstp
fs
jae
adc
ins
cmc
cli
xchg
out
(bad)
xchg
add
aas
add
out
cmp
lods
das
(bad)
mov
imul
and
push
sbb
push
cli
push
loop
sti
push
adc
adc
fstp
jns
out
mov
mov
jne
arpl
call
pop
scas
es
mov
pop
mov
pop
and
outs
dec
add
in
xor
clc
cs
shl
mov
fisub
test
and
cmp
push
and
cmps
push
add
sbb
sbb
fisttp
rcl
jo
in
dec
jb
loop
push
and
pop
sub
mov
sub
jb
outs
jecxz
shl
sar
movs
jns
cmp
inc
inc
(bad)
xchg
jl
mov
in
leave
and
and
(bad)
sub
cmp
push
cmps
mov
ret
inc
lods
adc
mov
jg
jno
jbe
mov
jns
jmp
arpl
inc
out
jo
xchg
adc
scas
adc
cmp
push
pop
fiadd
push
adc
jmp
push
mov
mov
(bad)
xlat
push
and
jmp
setne
rol
mov
xor
inc
arpl
ret
fmul
gs
mov
xchg
jbe
test
inc
in
rol
pop
xor
(bad)
mov
add
jge
jmp
xlat
push
sub
int
fisttp
out
xchg
into
mov
push
ret
or
push
enter
sub
ss
(bad)
jo
mov
call
(bad)
xchg
cs
scas
das
or
cmp
sbb
scas
cmps
adc
jne
mov
cld
sub
mov
mov
jle
arpl
adc
cmp
(bad)
(bad)
xor
imul
mov
jno
inc
(bad)
movs
rcr
mov
or
xor
pop
or
shr
fidivr
cmp
enter
out
js
pop
inc
and
push
inc
mov
repnz
pop
aam
xchg
or
call
test
cwde
mov
fcom
hlt
pushf
sub
fidivr
mov
imul
pop
mov
packuswb
inc
movs
jnp
pop
loopne
daa
add
inc
pop
cwde
std
xor
cwde
and
fiadd
cmps
les
pop
xchg
ja
clc
stos
call
mov
cmps
inc
mov
imul
sub
pop
cmp
inc
loop
je
ret
aas
lahf
leave
in
scas
cmp
inc
jl
sets
xchg
out
je
jl
or
inc
or
mov
mov
push
push
nop
fisttp
inc
xchg
jno
mov
mov
or
xor
aam
fcmovnb
hlt
push
mov
mov
mov
repz
ret
dec
pop
das
cli
test
pop
push
call
(bad)
std
ret
mov
or
add
ret
lock
sub
add
jnp
cmp
xor
popa
test
cmps
lahf
cmp
mov
fwait
aaa
dec
in
pop
or
pop
iret
ins
xor
cmp
xlat
fist
mov
int
xor
sahf
mov
leave
inc
das
xor
mov
inc
lods
mov
das
enter
mov
jns
in
ss
out
cmc
or
mov
push
addr16
repnz
nop
sbb
mov
sbb
push
(bad)
sbb
dec
xchg
int3
in
shr
and
sbb
xor
dec
push
xor
scas
psubd
push
or
rcr
out
ds
mov
jge
clc
mov
mov
or
cmp
(bad)
xchg
clc
push
dec
retf
outs
and
sbb
dec
jl
dec
std
mov
push
lods
adc
lods
adc
push
nop
rol
pop
inc
dec
or
mov
and
rol
out
jbe
out
sub
mov
std
fs
pop
clc
xor
fnsave
sbb
pop
push
jecxz
js
push
repz
arpl
xor
xchg
mov
adc
jmp
test
cdq
adc
pop
pop
(bad)
lds
daa
xlat
stc
test
stc
mov
jmp
mov
dec
lahf
cmp
adc
rol
test
data16
imul
sub
or
or
(bad)
mov
jnp
xchg
cli
xchg
mov
pop
pop
popf
or
retf
pushf
ficomp
out
push
test
les
popa
repz
xchg
ret
nop
fcomi
adc
daa
mov
bound
jl
xchg
imul
je
out
mov
mov
xchg
leave
sub
add
mov
shl
push
ds
mov
sahf
or
add
fcom
(bad)
cld
sub
push
xchg
outs
test
scas
fcmovne
push
xor
jae
pop
fs
jnp
push
ss
jns
cmps
inc
int3
push
dec
ss
mov
in
lahf
outs
sub
push
sar
mov
(bad)
mov
jbe
ret
rcl
push
pop
xchg
sub
cmp
test
push
jg
push
mov
adc
aad
and
xchg
mov
stos
in
inc
outs
inc
adc
loopne
sub
cdq
retf
push
cli
adc
outs
loopne
retf
(bad)
ins
lds
cmp
xchg
les
bt
adc
stos
movs
inc
fist
sar
cmps
push
imul
push
scas
mov
fild
mov
shl
mov
mov
xchg
mov
iret
stos
xor
dec
test
sbb
xor
ja
mov
cmc
pop
pop
movs
fcomp
mov
adc
scas
push
dec
sbb
fnstcw
sub
arpl
jl
mov
mov
adc
push
adc
cmp
shr
pop
mov
ja
pop
add
cmp
pop
ret
hlt
ja
popa
sbb
push
jg
xchg
and
dec
out
ins
and
iret
retf
sub
add
bound
aad
or
mov
gs
adc
xchg
fdiv
mov
sub
in
std
mov
mov
fisub
cmp
cld
imul
icebp
cmp
loopne
push
rcr
sbb
nop
pop
mov
mov
jno
jne
mov
(bad)
dec
jo
xchg
shl
xor
mov
adc
mov
cmp
daa
cmps
call
push
jle
and
push
mov
rcr
push
rol
mov
pop
imul
or
pop
das
jge
xchg
lea
das
(bad)
aam
lock
(bad)
jo
std
pop
or
mov
and
pop
stc
aaa
lds
mov
adc
add
out
les
push
repnz
pop
push
mov
and
mov
mov
mov
mov
ret
or
gs
adc
pop
inc
add
je
mov
xchg
rcr
cmp
daa
jae
adc
loope
test
push
jmp
jbe
sub
or
sbb
sub
std
(bad)
movs
fmul
loopne
mov
cmp
xchg
arpl
sahf
cmc
aas
mov
mov
cmp
xchg
dec
jbe
mov
xchg
mov
push
xchg
icebp
(bad)
and
xchg
dec
mov
fcom
pop
loopne
sbb
movs
ja
pushf
mov
or
mov
shr
mov
ds
int3
retf
add
push
arpl
inc
push
cs
aaa
push
sub
shl
xor
(bad)
sbb
iret
add
adc
cwde
mov
and
mov
or
and
ins
xor
push
je
jl
mov
pop
and
imul
lods
icebp
mov
or
stos
cmp
rcr
ins
pop
ds
or
xchg
jmp
mov
mov
sub
jns
cmp
sbb
mov
ss
sahf
mov
sub
mov
mov
push
jmp
pop
outs
mov
and
stos
enter
movs
sbb
jb
dec
unpcklps
cli
retf
cwde
aas
push
dec
xor
cmp
sub
movs
ins
cmp
cs
out
sbb
lahf
in
xor
daa
mov
jbe
jae
std
(bad)
lds
or
xchg
dec
and
test
mov
loopne
pop
into
cmp
ss
adc
cwde
jl
add
loop
xchg
sbb
sub
cmp
and
xor
pushf
or
mov
(bad)
and
sub
out
jle
aaa
popf
fwait
mov
(bad)
repz
(bad)
push
xlat
push
lea
push
xlat
xchg
mov
data16
out
fcom
ins
xchg
fnstsw
dec
cmp
dec
cdq
in
daa
add
out
inc
sub
pusha
inc
jle
pop
aam
scas
in
push
jl
sub
scas
push
mov
lea
or
mov
imul
aad
into
push
retf
jae
and
inc
in
mov
jns
push
neg
jmp
dec
push
pop
jno
call
fdiv
pop
jp
movs
xchg
adc
pop
pop
dec
mov
and
scas
imul
sub
add
daa
and
pop
push
or
mov
cwde
shl
shr
dec
inc
jb
hlt
cmp
cmp
jae
mov
ret
aam
xchg
jle
sbb
cmc
push
sahf
pop
xor
cdq
dec
push
int
xor
pop
jae
mov
mov
pop
hlt
inc
mov
cdq
nop
loopne
ss
jno
in
jp
shl
xchg
sub
mov
mov
sbb
(bad)
stos
xor
xlat
push
in
retf
outs
jmp
mov
pusha
or
xchg
ds
sar
ret
lds
pop
and
dec
les
jl
mov
or
and
inc
dec
mov
push
dec
pop
neg
dec
retf
lods
adc
stc
dec
xchg
in
and
push
mov
sbb
xchg
lods
lds
movs
pop
popf
mov
adc
mov
test
pop
imul
push
scas
popf
cmp
hlt
jge
or
mov
rcl
pop
test
and
add
push
sbb
fistp
pushf
and
clc
dec
add
cld
mov
stos
ins
cli
xor
or
daa
retf
mov
(bad)
push
mov
fdivr
xchg
stos
sub
shl
inc
cmc
addr16
sbb
xor
imul
adc
xor
mov
jns
nop
sbb
cs
into
inc
sbb
pop
add
or
jne
idiv
push
aam
es
push
adc
stos
mov
mov
pop
sbb
cmp
loope
push
fwait
inc
rol
sti
lock
or
loope
adc
les
cmp
bnd
sub
sbb
push
add
bound
adc
mov
mov
adc
jg
xlat
mov
add
sti
jge
nop
mov
imul
popf
(bad)
cmc
mov
retf
mov
pop
mov
outs
call
test
aaa
push
adc
jle
aas
push
or
and
cmp
mov
(bad)
dec
dec
mov
arpl
mov
aad
push
xchg
sub
fwait
pop
movs
(bad)
mov
repnz
(bad)
mov
pushf
push
enter
ret
mov
addr16
out
cmp
sbb
out
sub
add
xor
adc
cmp
pop
and
aad
push
and
adc
je
xchg
mov
pop
and
out
std
jle
push
jns
push
in
aam
push
fnstsw
sub
adc
push
sbb
cmp
scas
jle
xlat
ficomp
popf
in
cmp
out
sbb
aam
(bad)
loop
mov
push
sar
push
das
add
in
sahf
cmp
mov
scas
test
push
jns
mov
clc
push
sub
(bad)
jmp
xchg
aas
pop
in
mov
loopne
mov
dec
inc
(bad)
ins
scas
jne
mov
loop
xor
js
call
or
and
mov
dec
ja
mov
loop
and
bound
dec
mov
or
jle
sub
fwait
test
xchg
mov
fisttp
movs
aas
jbe
dec
dec
movs
mov
inc
aas
xor
pop
ret
lahf
adc
and
jmp
leave
dec
daa
aam
jmp
xchg
add
lahf
js
xor
and
jecxz
pop
stc
pusha
mov
add
imul
fwait
mov
lea
stos
xor
xor
cmp
jp
mov
cmps
jg
jg
add
aad
push
pushf
(bad)
(bad)
stos
or
sbb
scas
pop
cmp
das
popf
cmps
and
repz
(bad)
repz
scas
xchg
mov
mov
je
mov
sahf
call
or
ret
push
int
mov
and
fwait
inc
(bad)
rol
push
ficom
cmp
xchg
out
sub
stos
cmp
xchg
xor
pusha
dec
js
or
pop
cwde
inc
sbb
pop
pop
dec
xor
imul
bt
jg
push
cs
addr16
fst
mov
sbb
mov
dec
xchg
or
pop
test
sub
and
lock
call
ss
out
push
push
fcom
add
inc
mov
popf
mov
sub
scas
adc
mov
sub
add
add
pop
ja
sbb
ror
jne
lock
mov
jb
mov
inc
mov
mov
dec
(bad)
ins
jae
adc
rcl
jmp
rol
xchg
outs
xchg
cmp
jbe
adc
sbb
fisttp
push
push
loopne
lea
add
adc
adc
fadd
or
sub
cli
test
cmc
xchg
loope
in
jmp
jmp
cmp
js
or
jecxz
xchg
mov
mov
icebp
jmp
movs
xor
pop
xor
retf
mov
hlt
mov
mov
cdq
mov
icebp
mov
xor
push
jbe
lock
mov
scas
mov
fmul
loopne
scas
rcr
inc
ins
jns
aas
in
cmp
test
pop
popw
push
push
pop
cmp
sbb
jl
in
mov
jl
xchg
out
nop
retf
aad
sub
mov
popf
ds
dec
mov
jmp
jnp
jge
pop
and
loope
hlt
adc
xchg
(bad)
int
cdq
mov
outs
xlat
pop
shr
adc
jmp
xor
mov
mov
xor
rcl
repz
or
out
cs
scas
lds
xchg
test
(bad)
sbb
enter
call
push
sbb
(bad)
jae
cmc
cmp
lods
call
push
fs
mov
push
push
xor
or
fs
or
push
repz
add
loope
push
add
mov
xchg
adc
fmul
dec
and
mov
clts
call
adc
xchg
cmp
mov
or
mov
jp
sub
xchg
inc
test
mov
pop
and
push
inc
mov
cmps
rcr
or
inc
xchg
cmp
fwait
mov
imul
or
mov
and
mov
cmc
lods
test
adc
int
and
ss
sub
xor
rol
popa
mov
iret
mov
sub
mov
add
xchg
cs
jp
cwde
std
jmp
and
jge
or
sti
mov
cli
icebp
dec
cmps
fdiv
cmp
cmp
clc
xchg
xor
mov
jmp
adc
adc
out
repz
call
jb
or
lods
cmp
icebp
outs
js
test
jmp
daa
gs
and
cmp
cmp
cmps
icebp
fcmovnbe
mov
ja
cwde
mov
and
pop
test
test
jbe
jp
inc
retf
inc
and
add
jmp
inc
or
fiadd
mov
test
bound
and
popa
jo
sub
sub
repz
inc
pop
(bad)
sbb
cwde
jmp
xchg
dec
pushf
nop
and
dec
stc
rcr
jo
icebp
ins
add
inc
repnz
rcl
imul
xchg
inc
push
mov
js
ret
pop
push
mov
pop
es
popf
cli
lods
arpl
fidiv
es
adc
and
fcomp
adc
push
fld
pop
pop
movs
pusha
mov
stos
in
ret
jl
pop
test
ror
sbb
inc
mov
adc
and
fdivr
(bad)
scas
out
cli
jmp
fcom
in
inc
stos
sbb
call
ins
xchg
idiv
pop
sahf
pushf
outs
jl
or
rcl
dec
jno
sbb
mov
rol
movs
inc
add
mov
sub
lock
lods
in
jmp
pop
data16
aad
dec
fisttp
dec
add
xchg
xor
aas
or
or
xchg
cmp
and
adc
mov
pop
cmp
shl
pop
cdq
(bad)
mov
jge
inc
xor
mov
fsincos
arpl
scas
and
scas
aaa
lods
popf
xchg
bound
out
cmp
xchg
fcmovu
xchg
arpl
es
dec
add
fistp
dec
shld
add
sbb
arpl
das
mov
rol
pop
sub
adc
dec
or
aas
call
enter
or
lea
pop
into
cmp
in
dec
inc
shr
aaa
sbb
push
dec
push
push
int3
sbb
leave
loopne
lods
inc
shl
jge
and
or
sub
pop
aas
jmp
fisttp
repnz
push
aas
xor
adc
mov
int
fcmovb
nop
stc
shl
int3
inc
pop
in
loop
retf
mov
or
xor
adc
shl
leave
jl
mov
xor
popa
push
lods
leave
inc
das
xchg
sbb
loop
xchg
ror
xchg
inc
mov
xchg
push
mov
loop
iret
add
mov
pop
std
lock
shl
movs
js
xor
sti
jl
push
adc
retf
mov
xchg
das
rcl
push
push
fadd
mov
js
jae
scas
mov
push
das
(bad)
(bad)
les
xor
in
retf
dec
push
outs
ss
test
and
xor
mov
jb
mov
movs
mov
icebp
and
leave
dec
jge
(bad)
(bad)
and
ror
mov
jecxz
test
push
or
jno
je
fnstenv
ins
mov
imul
xchg
sbb
cmps
in
js
iret
adc
mov
sub
pop
sub
sub
and
jge
je
push
push
enter
xor
dec
push
dec
xlat
dec
in
xor
xor
(bad)
mov
cmps
sub
mov
push
mov
aaa
arpl
jns
pushf
dec
(bad)
cwde
imul
out
mov
arpl
in
pop
jmp
cmp
aaa
mov
neg
mov
mov
xlat
arpl
sub
cwde
(bad)
xor
aaa
mov
in
pusha
jbe
outs
push
ror
push
ja
(bad)
xchg
stos
fnstcw
pop
sbb
paddusb
aad
in
gs
sbb
pop
inc
dec
fistp
hlt
and
js
retf
or
in
shr
test
xchg
xchg
vmwrite
pop
stc
repnz
(bad)
mov
adc
ret
ds
mov
pop
sbb
test
push
(bad)
call
icebp
mov
rcl
outs
jnp
call
cmp
es
sub
dec
push
jl
and
retf
test
pop
popa
jg
add
daa
data16
xor
mov
jno
adc
loope
aam
adc
sbb
lock
ins
scas
and
jmp
sub
mov
rcl
retf
mov
mov
pop
retf
(bad)
fidiv
pop
cmp
cli
sbb
stos
lods
lock
pop
xlat
and
lock
pop
pop
and
and
and
ret
mov
adc
xchg
cmp
add
ror
lds
xchg
fldcw
int3
(bad)
aaa
adc
mov
dec
jg
lock
rol
rol
pop
xchg
outs
cmp
fsubr
rcr
jb
cmp
push
push
dec
add
cmp
inc
sti
je
pop
sbb
into
int
pushf
mov
mov
pop
lods
xlat
mov
cmp
inc
mov
jno
outs
inc
inc
mov
jbe
ins
ss
jae
push
mov
adc
in
mov
pop
push
mov
sub
retf
and
scas
jns
add
fcom
add
xchg
sub
adc
repz
fist
mov
mov
mov
cmp
mov
xlat
xchg
rcl
sub
push
jle
adc
mov
test
mov
mov
in
hlt
ret
mov
or
dec
pop
in
retf
dec
rol
cmp
dec
add
mov
loopne
ret
(bad)
imul
lods
scas
out
in
mov
sbb
xchg
xor
mov
and
test
jmp
mov
fcom
fbstp
dec
push
call
mov
mov
stos
sub
add
retf
or
in
sbb
sub
shr
into
mov
rcr
sahf
jno
push
lahf
ficom
push
sub
lods
leave
inc
ret
movs
fisub
pop
repnz
or
fdiv
xchg
movs
stos
mov
clc
push
push
mov
sub
cli
and
or
mov
jae
stos
ds
loop
(bad)
and
fidiv
loopne
inc
add
sbb
(bad)
adc
mov
xor
inc
adc
nop
fstp
sbb
mov
aas
xor
cmp
daa
sti
push
and
sbb
jne
fidiv
adc
jae
mov
sbb
hlt
mov
ja
sbb
mov
mov
sub
xchg
cmp
sub
sbb
pop
jno
push
add
push
call
mov
test
daa
test
cli
aaa
pop
in
adc
std
or
iret
int3
xchg
test
sub
jmp
sbb
dec
icebp
pop
pop
les
pop
jae
aam
hlt
(bad)
push
xor
fistp
sbb
sar
cmp
or
cmps
dec
or
sub
cmp
pusha
push
xor
test
mov
pop
pop
adc
das
das
mov
fisttp
call
dec
(bad)
sbb
js
push
push
out
popf
and
mov
sbb
sbb
xchg
jo
mov
add
push
mov
stos
cmp
pop
cwde
adc
adc
das
ret
sahf
ss
in
mov
push
ins
dec
sub
scas
cmp
mov
cli
ds
add
mov
add
pop
jmp
jmpw
outs
lods
scas
adc
xchg
lds
push
stc
pop
aad
out
stos
fdivr
mov
lds
nop
dec
pusha
or
dec
adc
cld
and
jno
ins
retf
mov
adc
stos
out
add
loop
xchg
lods
add
out
js
mov
xor
dec
stos
fisttp
jmp
dec
sbb
push
inc
mov
pop
hlt
and
lods
lods
(bad)
in
cmps
adc
ss
fcomip
or
or
push
in
shl
(bad)
call
mov
clc
sbb
cld
mov
clc
jmp
pop
dec
inc
push
jmp
xor
and
mov
cmp
cmp
sti
add
cdq
dec
add
data16
pop
out
jne
jnp
push
stc
sbb
das
imul
mov
cmp
inc
dec
mov
and
inc
lahf
xchg
stos
mov
sbb
and
mov
scas
sub
je
cmp
xchg
ficom
mov
dec
mov
pop
lods
in
xor
mov
sahf
push
pop
push
push
pusha
in
xchg
dec
xchg
xor
pmuludq
jl
inc
mov
dec
mov
into
jb
push
inc
sbb
mov
add
in
mov
add
movs
shl
sub
or
mov
pusha
push
call
jmp
retf
cmp
xor
cmp
jmp
sti
lds
xchg
mov
pop
ret
into
sbb
retf
inc
nop
xor
out
add
fild
xlat
sub
or
mov
add
ss
mov
shl
push
cmps
rol
aaa
sti
repnz
sbb
sub
shl
xor
pop
dec
fld
leave
fs
dec
neg
test
movs
leave
lahf
add
and
pushf
(bad)
jno
add
add
fistp
pop
jmp
fild
pusha
lds
cs
adc
sbb
movhps
daa
or
push
sbb
cmp
(bad)
dec
xor
and
jns
or
cwde
je
cld
jmp
aaa
push
(bad)
push
push
pusha
mov
daa
pop
and
in
aam
lea
lods
pop
mov
test
mov
inc
scas
pop
dec
cmp
int3
pop
imul
dec
or
rcr
push
pop
cmp
aas
cmp
xor
mov
fs
popf
shl
ret
jno
mov
or
and
pop
dec
(bad)
int3
ins
aas
sbb
mov
add
xchg
dec
and
add
arpl
add
mov
mov
xor
repnz
dec
or
jno
xchg
pusha
inc
mov
cmps
add
bound
call
xor
retf
cmp
in
fcom
fdivr
or
lods
in
sti
test
gs
push
xchg
aam
cmp
mov
add
div
inc
in
gs
jne
mov
and
out
add
dec
out
mov
xor
mov
push
inc
push
fs
inc
aad
cmps
push
add
paddsw
jle
push
fwait
mov
mov
outs
push
into
mov
push
mov
push
inc
cld
(bad)
mov
dec
add
inc
push
adc
out
pop
push
pop
adc
(bad)
sub
or
les
and
add
cdq
mov
aad
jmp
fldenv
mov
addr16
loopne
cmp
add
inc
cdq
pop
cdq
or
movs
push
jmp
mov
adc
push
pop
loope
push
sbb
mov
popf
jbe
mov
sub
xor
xchg
jnp
jp
or
xlat
and
cmp
ss
and
dec
cmc
pop
mov
push
pop
jmp
inc
(bad)
jle
scas
pop
enter
push
fidiv
dec
test
mov
sbb
lods
call
jb
and
xor
and
add
add
lock
xchg
sbb
push
mov
jae
xchg
into
add
cli
adc
cmp
cdq
call
scas
(bad)
loope
cmp
push
in
or
or
stos
js
mov
outs
ds
mov
push
or
rcr
int
add
js
fimul
sbb
mov
imul
arpl
call
(bad)
sbb
loopne
xor
(bad)
fdivr
stos
adc
scas
aam
fisttp
or
adc
daa
fidivr
mov
(bad)
adc
int
mov
jg
ret
mov
jge
cmp
aam
nop
inc
push
sbb
stos
sub
lds
pusha
sar
sub
sbb
div
(bad)
jmp
fstp
rcr
(bad)
pop
inc
cmp
mov
mov
xchg
repnz
sub
mov
ds
clc
inc
out
outs
mov
adc
jl
stos
xchg
add
dec
sub
outs
jecxz
call
movs
scas
mov
outs
push
out
retf
sar
nop
fcmovbe
std
or
lea
mov
dec
mov
and
stos
cld
adc
mov
pop
sar
cmovae
jl
push
clc
cli
mov
push
ret
inc
mov
outs
push
mov
jns
xchg
mov
int
inc
fisttp
or
jne
retf
mov
les
aam
ja
mov
xchg
fwait
lock
mov
pusha
dec
mov
(bad)
adc
aam
je
inc
movs
mov
pop
dec
jno
adc
aad
test
add
(bad)
out
test
repnz
mov
push
inc
add
adc
ss
mov
xlat
movs
into
pop
and
push
cli
into
mov
pop
pop
cmp
pop
ds
xchg
stos
and
je
out
or
mov
dec
mov
xor
stc
or
cmc
ficomp
jb
mov
inc
adc
fisttp
(bad)
out
jbe
add
dec
jp
pop
fsub
jle
mov
add
sbb
mov
(bad)
ret
xor
pushf
inc
sbb
clc
and
or
fcomp
int
mov
imul
std
xchg
dec
ins
xchg
cmp
xor
jmp
add
outs
sub
jl
inc
in
popa
aam
sbb
adc
pop
inc
fxch
btr
pop
lock
test
dec
cmc
fiadd
or
aad
js
cwde
dec
fistp
inc
xchg
dec
fcmovne
push
adc
rcr
cmp
sahf
imul
add
add
jg
push
xchg
mov
fild
lds
or
dec
not
jle
push
sbb
cli
pop
pop
jne
sbb
je
jp
add
inc
icebp
dec
sbb
jns
aam
cmp
ret
and
repz
xchg
jl
mov
ins
stc
fdivr
xchg
inc
adc
mov
inc
and
pop
add
outs
push
test
dec
push
push
jmp
test
pop
or
out
sbb
sar
mov
and
aam
fild
push
and
add
daa
xchg
sbb
mov
and
xor
xor
push
xchg
sub
fsubr
fmul
outs
ins
mov
push
mov
jmp
fimul
mov
dec
imul
mov
aam
shl
addr16
in
xor
push
and
push
dec
or
sbb
or
jmp
dec
push
lock
fstp
jg
or
dec
leave
inc
mov
cmp
cmp
inc
push
out
push
das
arpl
out
int
mov
mov
xlat
add
mov
nop
sbb
fwait
scas
lds
cld
mov
out
outs
jnp
and
and
jns
jne
mov
add
sub
scas
adc
in
cmp
pop
dec
(bad)
pushf
das
and
dec
jno
push
sti
jg
popf
ds
xlat
jnp
jp
fsub
ror
jmp
adc
dec
rcl
icebp
scas
adc
sub
push
out
gs
loopne
iret
add
xor
leave
dec
push
call
adc
fdivrp
es
hlt
cmp
push
sub
push
jg
add
outs
or
(bad)
frstor
jg
mov
and
jo
adc
cmps
sub
(bad)
rol
mov
push
sar
jmp
mov
push
(bad)
arpl
xor
iret
ins
ret
icebp
cli
sub
add
ret
shl
mov
cmp
bts
outs
shr
push
hlt
inc
dec
test
adc
xlat
shr
stos
dec
pop
test
leave
nop
imul
shl
enter
sar
push
bound
and
and
push
adc
not
push
or
imul
sbb
push
mul
add
ror
sbb
lock
xor
adc
jl
repnz
sbb
fwait
mov
xor
push
jle
xchg
add
adc
adc
jle
mov
mov
or
fild
pop
or
dec
sahf
cmps
inc
imul
sub
push
ins
mov
lock
into
ret
lods
mov
mov
in
sbb
jmp
into
movs
mov
cmp
xchg
ss
xor
pop
lds
mov
mov
xor
and
lods
rcr
fld
inc
arpl
aaa
shl
mov
mov
add
gs
je
mov
inc
dec
xchg
push
add
or
push
jecxz
jo
sti
push
jns
ror
(bad)
dec
mov
fsubr
xor
pusha
dec
enter
scas
inc
push
cmp
pop
push
in
ret
test
int3
pop
push
pusha
ret
enter
push
xchg
jp
xor
and
int
icebp
loope
stc
int
or
and
mov
mov
cwde
xor
xor
gs
push
fld
adc
mov
mov
cmc
jle
lea
dec
(bad)
outs
stos
scas
adc
pop
pop
xor
dec
inc
add
dec
sub
xchg
fadd
sar
(bad)
aad
mov
out
ror
retf
xchg
lahf
cmps
adc
sbb
add
and
loop
sub
loop
xor
push
push
mov
add
shl
imul
test
out
cdq
mov
mov
xor
pop
cmp
idiv
rol
or
cwde
pop
inc
scas
pop
imul
repnz
(bad)
dec
mov
jmp
cmp
lods
xor
mov
mov
add
push
push
pop
fs
into
dec
aad
mov
jb
pop
xlat
xor
pop
pop
imul
sbb
clc
arpl
std
jb
sbb
pop
cmp
mov
mov
cmp
arpl
mov
das
enter
sbb
pop
outs
adc
xchg
inc
or
clc
jmp
push
xor
sub
adc
out
je
popf
xchg
sub
pop
das
push
mov
test
push
dec
mov
jmp
cmps
mov
mov
lahf
in
push
imul
outs
pop
movs
cs
jns
add
pop
pop
pop
div
jle
dec
dec
jle
xchg
aam
sbb
push
mov
jp
cdq
clc
push
pop
std
cmp
push
fst
call
and
imul
inc
js
in
jne
add
mov
std
retf
pop
jp
mov
jnp
test
and
cdq
int3
add
mov
push
les
jno
add
sub
fstp
(bad)
or
push
nop
sub
pushf
mov
jmp
into
addr16
jmp
sahf
leave
mov
dec
mov
loopne
jmp
jmp
pop
mov
aam
(bad)
pop
sub
icebp
mov
call
repz
int
add
pop
repnz
out
into
and
jne
fcmove
mov
sbb
fdivr
cmp
adc
or
xor
push
in
imul
pop
cmps
mov
and
inc
lea
inc
daa
push
adc
xchg
clc
inc
gs
xor
popa
dec
out
fst
push
sahf
xor
mov
pop
in
cmp
or
int
jns
fadd
fcomp
mov
cmp
inc
pop
in
xchg
add
aam
ret
mov
sahf
jne
xor
mov
in
xor
mov
cmp
lods
mov
cli
sar
push
or
das
js
fs
mov
xor
dec
std
test
mov
call
fwait
mov
adc
in
pop
in
cmc
pushf
js
sub
pop
dec
dec
adc
clc
dec
shl
fnstsw
frstpm(287
or
call
adc
pop
sub
inc
stos
xor
pop
mov
js
jl
cmps
(bad)
xchg
lods
mov
mov
push
xor
mov
and
xlat
adc
dec
adc
sub
leave
or
test
inc
push
add
xor
(bad)
mov
popf
lods
sub
sbb
retf
push
push
xchg
hlt
mov
stos
mov
sbb
sbb
stos
or
cmp
jp
sahf
and
dec
cmp
inc
mov
pop
pushf
mov
sbb
sbb
mov
dec
mov
ja
add
stc
shl
sbb
jg
and
mov
dec
push
push
stos
sub
imul
xor
xor
scas
ins
dec
mov
adc
mov
xchg
jg
jle
fnsave
mov
cmp
xchg
mov
neg
fimul
ret
sub
clc
sub
xchg
(bad)
dec
out
pushf
inc
add
call
xor
adc
das
xchg
sar
xor
adc
add
scas
out
stos
daa
xchg
shr
cmps
push
jns
mov
dec
in
or
aad
cli
(bad)
mov
mov
in
jecxz
or
sub
dec
jmp
add
adc
add
xchg
xor
push
xor
shr
int3
mov
xchg
sar
dec
sub
mov
dec
add
sbb
ret
mov
and
inc
mov
clc
movs
push
dec
faddp
xchg
pop
imul
sahf
jns
sbb
pusha
imul
adc
aad
into
push
(bad)
pop
mov
mov
mov
jae
adc
push
jno
dec
lods
mov
test
xor
xor
inc
in
ins
or
lock
adc
(bad)
jb
stc
dec
push
lea
(bad)
sti
jge
pop
in
lods
call
pop
test
fwait
mov
les
mov
xor
pushf
iret
push
push
mov
(bad)
scas
loop
ins
sbb
push
dec
add
(bad)
pop
sub
mov
push
(bad)
rcr
popa
jge
test
cwde
lahf
iret
push
and
mov
sar
or
test
cmps
in
push
stos
mov
jo
and
(bad)
out
cmc
mov
jl
sub
sbb
pop
pop
daa
popf
call
dec
xchg
jmp
fimul
jl
and
pop
xor
adc
jge
out
jmp
xchg
cmc
mov
aam
and
fldcw
xor
lea
rcr
addr16
inc
je
ret
xchg
mov
push
(bad)
gs
and
movs
pop
and
inc
cmp
test
div
add
rcr
push
mov
int
sub
dec
mov
stos
sub
pop
or
(bad)
sbb
adc
in
xchg
data16
jle
rcl
xor
inc
das
or
stos
stos
mov
clc
fbld
sub
mul
lahf
iret
loopne
test
repz
sbb
pop
push
cwde
nop
das
xchg
and
pop
ins
push
cmp
test
ss
jp
adc
icebp
in
sar
mov
inc
pop
dec
inc
rcl
cld
aad
outs
or
rol
dec
sbb
cmp
jb
fucomi
ins
push
inc
inc
jnp
scas
mov
xor
sbb
push
movs
mov
adc
pop
dec
or
or
xchg
imul
shl
inc
neg
loope
xor
call
mov
mov
mov
xchg
xor
ins
in
pushf
xchg
fldcw
push
sub
push
das
cwde
dec
sar
jle
cdq
into
ret
imul
out
xchg
mov
mov
fwait
mov
pop
shr
add
stos
sysexit
outs
jne
cmp
leave
mov
call
mov
or
idiv
xor
jecxz
shr
out
popa
inc
stc
mov
js
sahf
retf
sar
mov
push
dec
jg
movs
pop
sbb
adc
xor
aas
retf
add
xchg
push
dec
outs
ins
daa
nop
push
scas
sbb
sbb
push
loopne
test
aad
cmp
push
mov
add
push
ret
adc
fdiv
fmul
push
push
fisubr
jae
mov
push
lds
inc
adc
sbb
xchg
enter
mov
push
mov
sahf
repnz
push
pop
inc
ins
pop
fpatan
mov
pop
ins
mov
sub
jae
in
retf
not
dec
or
in
or
jle
ins
out
push
xchg
dec
mov
nop
stos
mov
jmp
xchg
dec
fldz
inc
sub
in
mov
pop
inc
inc
ins
mov
sub
test
jmp
inc
lahf
ror
add
or
je
mov
repz
daa
mov
sahf
dec
outs
in
add
pop
pop
inc
sbb
outs
inc
ret
cmps
mov
movs
inc
inc
test
repz
sti
xlat
mov
loope
(bad)
and
scas
pop
in
xor
xor
mov
(bad)
mov
(bad)
dec
cli
or
mov
cdq
out
call
or
sub
stos
cmps
out
or
call
ret
nop
sbb
repnz
mov
push
or
jnp
jmp
daa
fist
mov
inc
mov
and
push
fwait
mov
(bad)
in
push
mov
pop
xchg
sub
sbb
mov
in
xchg
push
add
or
jne
push
sub
push
aam
jnp
sbb
pop
pop
mov
not
sub
mov
pop
mov
xchg
mov
xchg
dec
shr
repz
xor
jp
mov
inc
aaa
inc
test
add
push
or
mov
mov
push
and
mov
ltr
(bad)
and
inc
ja
xchg
push
pop
aaa
les
in
xchg
neg
cli
out
ja
stos
adc
xchg
sub
cmp
(bad)
push
cdq
mov
popf
and
aas
(bad)
cmps
mov
push
xchg
push
or
lods
sub
or
shl
sub
mov
popa
jmp
adc
xor
jge
push
mov
adc
pushf
fcom
jo
cmp
aad
into
xor
dec
popa
jb
sub
push
cs
das
push
push
jecxz
rcr
ss
push
dec
gs
jmp
push
jge
add
mov
out
jns
inc
jmp
rcr
lahf
xchg
add
mov
jmp
in
shl
fsubr
dec
mov
hlt
inc
push
mov
push
mov
sbb
add
push
push
sbb
add
imul
push
ja
retf
cdq
mov
sbb
pop
(bad)
pop
inc
mov
mov
popa
imul
inc
cli
aaa
jecxz
mov
jnp
call
sbb
imul
mov
sub
hlt
es
xchg
cmp
push
mov
or
nop
sbb
mov
sub
ins
and
pop
addr16
mov
sub
shl
mov
rol
cmp
rcr
retf
jnp
pop
xchg
dec
je
(bad)
cdq
out
adc
js
dec
(bad)
mov
rcr
fucomi
jg
jg
add
xor
fsub
dec
adc
sbb
test
xchg
cmps
sbb
xor
cmc
push
xchg
inc
clc
push
mov
shl
fwait
dec
xor
push
mov
ins
ins
inc
fwait
sahf
xchg
mov
in
xchg
repz
jne
sti
mov
outs
inc
pop
lahf
cmp
inc
loope
out
push
pop
test
jl
push
adc
sar
mov
outs
arpl
in
(bad)
xor
cmp
jmp
mov
imul
inc
push
retf
cmp
out
inc
fnstenv
xchg
movs
xchg
not
icebp
xor
add
ss
add
in
ins
test
movs
sbb
push
cdq
fwait
and
dec
sub
stos
int
imul
lock
outs
mov
call
movlps
xchg
cdq
dec
daa
jbe
xchg
pop
inc
add
pop
inc
jno
dec
retf
jnp
jge
(bad)
xchg
mov
pop
jmp
mov
sbb
jb
fnsave
mov
ds
js
xlat
push
aas
mov
(bad)
(bad)
fld
hlt
mul
dec
jo
not
out
outs
cmp
aad
cli
or
imul
and
test
add
(bad)
mov
and
movs
sub
nop
cmp
or
addr16
in
imul
mov
xor
sbb
jno
mov
fcom
jb
pop
sbb
sbb
jl
ror
xchg
push
mov
sub
sbb
push
lock
push
iret
(bad)
jmp
lods
std
pop
and
add
or
sub
or
add
imul
call
pop
xchg
pop
inc
inc
cmp
das
lods
mov
iret
jg
in
aad
cmp
stos
xchg
fcom
pop
jns
jbe
leave
xchg
out
sbb
clc
push
mov
outs
sub
lock
leave
pop
sbb
sbb
dec
scas
and
sub
cs
aas
scas
pop
adc
jmp
add
je
lods
inc
and
push
(bad)
mov
cmp
mov
rcr
les
popaw
xchg
mov
sub
je
inc
cmp
and
scas
push
pop
jmp
cdq
jg
les
lods
aas
and
mov
dec
frstor
mov
inc
fcmovnu
aam
stos
xor
dec
mov
mov
push
retf
jbe
enter
adc
pop
(bad)
xor
mov
popf
jne
cdq
into
leave
jo
mov
adc
cmp
(bad)
xchg
sub
jns
mov
js
gs
push
mov
into
shl
(bad)
mov
pushf
xor
lock
xchg
inc
xor
je
movs
mov
add
ja
cmp
sub
jb
xlat
(bad)
dec
inc
ror
out
(bad)
fld
test
movs
sbb
xchg
inc
das
lods
(bad)
mov
or
cdq
(bad)
ins
dec
out
gs
imul
dec
shr
push
cdq
mov
mov
ror
or
sub
ds
es
pushf
jecxz
push
iret
or
call
mov
inc
ja
mov
push
xchg
cmps
sub
fstp
mov
inc
mov
iret
fcomp
mov
jb
mov
lods
aas
push
fisub
cli
fstp
mov
mov
jns
sahf
push
aad
scas
sub
jo
cmp
jmp
inc
add
mov
jae
ror
push
pop
in
mov
cwde
data16
and
inc
js
stos
test
les
cmp
adc
cmps
or
mov
lds
(bad)
out
pop
or
add
sbb
push
loopne
jo
push
ss
inc
sti
std
fdiv
pop
inc
addr16
mov
and
mov
jae
imul
mov
jns
jbe
push
je
pusha
je
jo
mov
imul
adc
push
js
imul
fwait
dec
cmp
test
pop
xchg
mul
mov
add
jl
mov
pop
push
and
dec
and
stos
ins
ins
mov
inc
scas
mov
ficomp
push
mov
xchg
jge
adc
shr
cld
sbb
add
cli
dec
sbb
add
mov
and
xchg
iret
fidivr
and
test
adc
jecxz
stos
gs
loopne
push
push
cmp
mov
out
add
or
xchg
xchg
fcom
jne
xchg
sbb
(bad)
cmp
jns
js
add
ror
push
ins
mov
mov
pop
jo
out
sar
outs
sbb
sahf
stos
div
fimul
loope
test
jno
mov
ficom
cld
adc
mov
mov
in
xchg
xor
sbb
xor
push
out
(bad)
mov
or
xor
lds
mov
cwde
ins
pop
in
in
push
(bad)
adc
push
ret
cmp
push
cmp
xor
div
inc
mov
adc
loope
(bad)
adc
jge
aaa
mov
sbb
or
mov
and
sub
loopne
sub
mov
adc
sbb
or
mov
rcr
sbb
xor
sub
lods
loope
and
js
sub
gs
sub
sahf
jae
and
sub
dec
imul
inc
mov
and
sbb
add
cld
sub
jns
push
jbe
add
xchg
push
adc
push
pop
and
push
cmp
cmp
push
mov
add
sbb
divps
or
lds
loop
mov
and
push
jecxz
test
add
(bad)
dec
stc
inc
test
outs
in
dec
or
call
rcl
enter
ucomiss
inc
ss
xchg
(bad)
ror
imul
mov
call
or
cmps
aaa
in
sbb
ss
fld
call
arpl
jmp
outs
xchg
xor
in
jg
mov
xor
push
push
cmp
sbb
mov
mov
test
pusha
imul
push
ret
mov
xor
push
mov
xchg
es
call
xchg
int
add
adc
bnd
inc
jmp
hlt
dec
into
cmp
push
rcr
mov
nop
mov
cwde
pop
mov
data16
and
mov
dec
dec
dec
add
dec
push
sub
or
jmp
push
test
sub
jns
or
dec
addr16
cli
leave
sti
sbb
jge
dec
aad
adc
mov
or
sbb
rol
mov
repz
and
xchg
mov
(bad)
ret
sub
jmp
into
outs
push
retf
js
mov
inc
retf
ficomp
cmp
sbb
mov
repz
dec
dec
fadd
dec
or
add
xchg
retf
xor
rcl
cmp
or
pop
push
sbb
add
cdq
jmp
adc
and
cmps
mov
popf
out
jne
gs
dec
push
icebp
(bad)
loopne
and
loop
(bad)
repz
vpmacsdql
outs
pop
int3
std
out
push
sbb
mov
(bad)
sbb
push
dec
inc
sahf
lds
cmp
lock
leave
retf
mov
cmp
test
cmp
fwait
jp
jnp
mov
fwait
pop
movs
xchg
jge
ins
sbb
xchg
mov
mov
jp
hlt
bswap
cmp
jae
rcr
jp
ss
sahf
sub
out
bsf
and
sbb
daa
out
and
aad
test
and
inc
into
xchg
sbb
test
ret
sbb
cmps
inc
ud2
add
xchg
xchg
add
(bad)
or
dec
add
mul
jle
cmc
ds
dec
sbb
out
(bad)
movs
xor
jecxz
sub
les
jp
(bad)
lea
stc
in
cmp
mov
(bad)
imul
mov
fidivr
push
repnz
out
sbb
adc
lock
jl
pop
push
js
out
int3
sub
das
jp
loop
xor
push
mov
pusha
or
add
pop
daa
pusha
out
lods
cmp
push
outs
and
adc
jns
loop
mov
emms
dec
rol
out
cmps
add
rol
adc
xlat
enter
lds
inc
adc
and
fdiv
xor
adc
ds
inc
cdq
outs
push
push
pop
mov
fnstenv
movs
call
in
jle
scas
stos
or
adc
in
pop
xlat
sbb
add
pop
mov
xlat
outs
inc
scas
add
xor
fld
addr16
gs
pop
cmps
stos
inc
mov
pop
pop
mov
imul
dec
and
fwait
pop
sbb
xor
out
jle
mov
into
xor
mov
cmp
mov
push
pushf
pop
mov
scas
push
ds
adc
outs
lds
pop
retf
(bad)
aam
daa
out
imul
cmps
je
int3
sbb
mov
push
in
sti
in
xor
fisttp
mov
and
pushf
jae
xchg
mov
mov
nop
sub
mov
pop
add
mov
fucomp
hlt
add
fsub
inc
pop
sbb
mov
push
hlt
jb
mov
jle
mov
shl
jp
aad
push
mov
inc
push
cmp
and
cwde
push
retf
ror
sbb
in
dec
mov
push
pusha
int
add
nop
loope
pop
sbb
out
in
mov
adc
retf
sub
stc
cmp
test
dec
mov
xchg
and
lock
int3
pop
mov
mov
inc
xor
sbb
mov
mov
loopne
les
nop
adc
add
popa
retf
psubb
(bad)
std
add
pop
cmc
xor
sub
pop
jne
imul
call
cs
pop
fwait
stos
push
add
and
mov
stc
and
sbb
sub
imul
mov
or
xchg
leave
dec
arpl
int
nop
jbe
and
mov
push
xor
mov
ss
inc
inc
stos
ins
fs
jl
inc
les
lods
inc
addr16
das
retf
out
dec
lods
sub
dec
not
cmc
test
inc
push
and
out
out
xchg
fst
mov
pop
sub
neg
xchg
mov
mov
mov
cmp
sub
dec
push
addr16
inc
jnp
pop
movs
cmp
push
sub
(bad)
call
ret
mov
lods
mov
or
ins
adc
test
and
(bad)
fistp
add
das
dec
cmp
pop
shr
and
cmp
sub
aas
daa
mov
cmp
jns
mov
pop
ins
rcl
and
xchg
xor
xchg
out
xor
out
adc
push
mov
dec
dec
jnp
dec
xchg
dec
pop
fidivr
aas
dec
mov
repnz
call
inc
push
push
icebp
sbb
addr16
sub
pushf
pop
call
arpl
leave
mov
rcr
pop
std
sar
xchg
and
imul
jg
cmc
retf
clc
(bad)
and
(bad)
mov
xor
pop
push
dec
jmp
xchg
mov
or
fs
adc
push
gs
imul
or
pop
mov
clc
bound
cmp
mov
ds
fild
push
pop
cmp
in
xchg
mov
push
mov
or
fiadd
pop
or
movs
lds
(bad)
and
dec
mov
jae
inc
div
mov
cdq
fdivr
jne
icebp
ss
add
push
shl
add
repnz
lahf
jge
inc
fdiv
frstpm(287
setp
jmp
mov
test
mov
sar
add
(bad)
fiadd
or
add
enter
and
outs
nop
clc
aaa
sub
sub
cmps
jno
movs
mov
sub
pop
adc
popa
(bad)
pusha
adc
or
mov
mul
es
(bad)
xchg
inc
imul
push
cdq
out
fistp
add
and
aam
lods
cmp
imul
leave
leave
repz
jnp
mov
xor
imul
test
xchg
dec
idiv
outs
bnd
jnp
sahf
imul
movs
pusha
sub
adc
cmp
sbb
sub
out
xchg
fild
cmp
mov
xchg
mov
imul
dec
jae
call
or
stos
(bad)
or
(bad)
and
inc
push
lds
iret
push
fnstenv
inc
test
sbb
mov
and
push
inc
add
fiadd
sub
mov
fs
and
in
jmp
out
xchg
mov
sub
gs
sub
xchg
push
ins
push
mov
outs
ss
popa
add
and
lea
add
inc
aaa
scas
sbb
ret
push
push
sbb
aaa
xor
cli
mov
das
repnz
cmc
stos
sub
cwde
repz
(bad)
iret
push
data16
and
jl
sti
jecxz
push
lods
mov
mov
jg
push
outs
cmc
mov
shl
add
lock
dec
repnz
jecxz
dec
mov
shl
jb
mov
mov
mov
sar
dec
mov
in
movs
lock
jmp
and
push
jnp
vpsrad
cmp
sub
addr16
repnz
mov
and
neg
ins
push
and
mov
in
mov
mov
in
add
aad
loope
or
(bad)
test
sub
jns
call
pusha
mov
(bad)
pop
cdq
inc
push
and
push
add
adc
push
ret
sbb
jno
xor
inc
mov
jp
sub
loop
mov
out
jecxz
(bad)
addr16
repnz
inc
cmps
es
jnp
adc
and
into
pop
retf
push
add
xor
movs
jno
or
or
pop
inc
and
dec
rcl
pusha
sub
xor
popa
inc
cmp
(bad)
aas
dec
fdivr
cmps
sub
addr16
test
mov
test
and
(bad)
cmps
fsub
sbb
xchg
sahf
mov
xor
add
out
fisubr
mov
adc
mov
pop
push
test
pop
test
aas
aad
test
gs
mov
inc
rol
ret
inc
jae
mov
retf
ror
xchg
push
xchg
imul
mov
add
push
sahf
aam
push
push
jo
fist
mov
daa
xor
sub
push
xor
scas
rol
sbb
add
sbb
imul
ja
mov
xor
cmps
sbb
popa
pusha
out
in
add
push
scas
xor
jb
test
dec
ret
enter
sbb
mov
rcr
in
push
pop
mov
inc
out
sbb
mov
push
sbb
adc
cdq
retf
or
test
adc
pop
push
cmp
push
shr
push
shr
cmc
out
cmc
xor
lods
jge
arpl
in
inc
jno
bnd
mov
sbb
fisttp
fadd
fimul
in
adc
xchg
mov
scas
mov
cmp
adc
movs
lock
and
cdq
ret
inc
fmul
sub
inc
loop
icebp
sub
and
mov
pop
sub
hlt
mov
mov
add
lods
xchg
or
sbb
pushf
lahf
add
mov
dec
and
shl
retf
out
nop
cdq
push
lock
push
cmp
jge
ins
addr16
xchg
and
iret
inc
sbb
test
jns
out
xor
lods
shl
pop
xor
js
mov
test
mov
imul
test
jb
mov
out
adc
inc
and
lods
dec
inc
dec
ret
sti
(bad)
fbld
push
js
sub
je
adc
xchg
jmp
xor
movs
(bad)
shl
adc
sub
xchg
imul
inc
sti
iret
in
mov
and
loope
or
test
int
stos
stos
scas
(bad)
das
xlat
ss
mov
sbb
test
hlt
xchg
ss
sub
dec
outs
stos
add
fs
jmp
popf
pop
push
jp
lods
aad
push
pavgw
jp
aam
add
inc
fs
cmp
cdq
xor
cmp
or
push
fstp
lock
and
push
pop
pop
push
cs
fsubrp
mov
popf
mov
es
cmp
cmp
ffreep
lea
push
fisttp
movs
clc
or
adc
push
push
loope
inc
mov
inc
(bad)
or
adc
in
dec
mov
stc
mov
mov
arpl
std
cwde
xchg
sbb
stos
inc
cmp
movs
pop
mov
stos
mov
or
pop
(bad)
cs
retf
test
(bad)
fmul
cmp
and
fcmove
cmp
ret
or
dec
loop
imul
test
and
jb
or
stos
xlat
idiv
es
adc
jecxz
xor
ds
mov
scas
pop
cmp
xor
fisttp
sbb
fs
sbb
dec
dec
icebp
xchg
mov
ror
stos
aad
inc
test
inc
iret
mov
lds
xchg
stc
sub
nop
xlat
or
fist
sub
push
adc
into
mov
rcl
pusha
inc
inc
sub
and
or
loope
or
adc
(bad)
gs
push
mov
outs
test
mov
(bad)
xchg
sub
dec
adc
cmps
mov
fs
add
int
cld
test
push
sahf
clc
add
out
mov
je
lahf
mov
jbe
push
enter
ss
mov
addr16
fsubr
xchg
sbb
inc
sbb
mov
cwde
cmp
(bad)
call
inc
(bad)
xor
ret
aaa
adc
cmp
(bad)
cs
inc
loop
mov
lods
mov
repz
into
test
xor
mov
jns
sub
jo
adc
add
dec
push
or
lock
fadd
jb
xchg
iret
push
cwde
xor
(bad)
cmp
loope
scas
test
ins
pop
pop
jecxz
fwait
cdq
sbb
pusha
cs
cmp
add
mov
xchg
lods
mov
sahf
jnp
out
ja
retf
mov
fnstsw
mov
jb
jb
lds
sub
push
sti
jg
(bad)
xor
pop
pop
mov
mov
xchg
in
lds
mov
daa
test
cld
(bad)
out
int
push
int
stos
inc
loop
xchg
outs
cmp
dec
stos
shr
imul
cdq
cmp
dec
or
das
in
sbb
cmp
popa
rcl
xlat
cdq
mov
pop
and
and
(bad)
sbb
xor
cmps
gs
rol
mov
retf
or
loopne
ins
xchg
sar
jmp
jno
inc
dec
in
fnstcw
lods
jbe
aam
adc
cwde
idiv
inc
jmp
jne
inc
lea
stc
sbb
retf
ret
(bad)
fadd
mov
sub
stc
pop
nop
stos
into
outs
pushf
pop
fist
ja
and
into
into
scas
xchg
xchg
idiv
jnp
pop
or
push
loope
ins
out
scas
add
push
(bad)
adc
sahf
pop
stos
idiv
sub
addr16
sbb
push
stos
mov
(bad)
(bad)
cmp
cmp
cld
icebp
cmp
cmp
xchg
cmp
sahf
add
push
repnz
xchg
xchg
sub
loope
dec
nop
or
in
in
punpckhbw
mov
scas
popa
xchg
test
add
jg
mov
retf
(bad)
fnstenv
enter
cmp
cmp
cs
mov
pop
mov
lea
sahf
loop
int
or
xchg
mov
cwde
scas
cs
js
mov
fdivr
mov
add
mov
fisttp
outs
fwait
sbb
pop
fwait
popa
mov
mov
aaa
cmp
lock
(bad)
je
push
or
add
cli
test
lahf
out
sahf
fdiv
lods
retf
(bad)
ins
jge
xor
(bad)
push
mov
pop
clc
stos
jg
jmp
sbb
adc
fdiv
jns
std
jb
sbb
or
into
xchg
clc
or
gs
push
pop
out
popa
pop
int3
fsub
out
cld
dec
in
inc
adc
out
xchg
mov
cmp
std
dec
out
out
das
in
hlt
cmp
sar
loope
(bad)
call
mov
jns
push
loope
std
xor
test
in
popf
xchg
pop
popa
jg
stos
add
scas
movs
jmp
pop
xor
sub
jno
jno
std
and
clc
and
dec
arpl
push
ins
je
fldenv
push
in
xchg
pop
push
lods
pop
xchg
pop
cs
mov
jp
and
stc
fwait
mov
sahf
adc
mov
(bad)
mov
cdq
add
pop
and
sbb
imul
and
and
lock
adc
xor
ja
mov
jb
mov
pop
ja
sbb
(bad)
cmc
sbb
xchg
jl
sbb
jmp
jecxz
push
les
pop
lock
add
mov
out
adc
adc
sar
into
or
je
leave
sub
inc
mov
cmp
xor
(bad)
enter
scas
inc
(bad)
mov
sbb
fwait
pop
jnp
aas
sub
test
stos
rol
sbb
xchg
or
and
arpl
stos
ret
pop
outs
cdq
mov
retf
sub
call
mov
rcl
adc
pop
mov
rol
lods
mov
dec
shl
cmp
push
push
stos
jl
leave
jo
dec
and
jl
scas
push
(bad)
jnp
add
add
xchg
mov
std
mov
add
dec
cli
out
lds
push
xchg
ja
fstp
pop
lods
retf
icebp
xor
jecxz
mov
loopne
pop
clc
mov
rol
jns
fwait
xchg
dec
sub
add
ins
pop
mov
mov
inc
pop
test
xor
mov
aaa
xchg
pop
and
enter
sbb
stc
mov
shl
dec
cmps
imul
out
imul
sahf
dec
imul
jmp
adc
cmp
pop
gs
or
int
push
push
cli
enter
dec
and
imul
adc
pop
cmp
out
push
and
imul
pop
sbb
mov
add
gs
inc
inc
pop
out
int3
inc
movs
fisttp
push
mov
push
sti
or
rol
movs
xchg
es
movs
rcl
shl
inc
add
and
or
push
push
into
inc
mov
mov
and
mov
fistp
mov
or
push
dec
movs
aas
sbb
inc
sub
cmp
push
scas
shl
inc
daa
es
arpl
data16
lahf
int
cmps
push
scas
push
inc
mov
cmps
push
fnstenv
adc
mov
push
xor
mov
mov
bound
lahf
stos
xchg
out
add
retf
jb
lds
or
inc
fcmovnb
jmp
dec
pop
adc
adc
cmp
jbe
xor
xor
or
aad
push
fisub
out
in
das
scas
(bad)
ret
dec
add
adc
and
sbb
push
mov
ins
sbb
cmp
outs
and
pop
enter
inc
xchg
cmp
test
addr16
stc
adc
inc
inc
das
div
cmps
push
clc
sub
pushf
mov
dec
movs
add
xor
and
xchg
inc
fist
and
jg
sub
shl
push
inc
mov
xchg
mov
(bad)
jne
adc
test
cwde
loopne
int3
jmp
stos
sub
pop
loopne
pop
fld
stc
xchg
aas
fwait
test
jne
loope
jae
xchg
and
clc
and
add
and
hlt
and
stos
lock
xchg
outs
add
mov
aam
test
xlat
mov
jo
adc
sbb
inc
or
cld
and
inc
xor
adc
pop
mov
imul
out
popa
out
adc
cmp
pop
mul
sub
inc
mov
std
enter
mov
pop
push
inc
(bad)
mov
ror
jbe
add
dec
sbb
call
sub
test
(bad)
sbb
repz
and
out
jge
adc
add
adc
aad
xchg
mov
fs
inc
mov
ins
cmp
sahf
test
mov
pop
out
out
sti
dec
call
dec
fdiv
mov
mov
outs
push
mov
jnp
fidivr
jb
mov
dec
aas
jbe
add
jl
imul
adc
sbb
inc
shr
gs
push
dec
xchg
mov
and
idiv
push
ds
xor
ds
add
cdq
cmps
mov
or
ins
movs
fiadd
xor
and
repnz
or
and
das
xchg
(bad)
addr16
mov
(bad)
scas
jae
dec
lds
retf
pop
fcomp
jge
add
fnstcw
nop
retf
xchg
outs
jbe
fucomip
call
mov
sti
lea
aam
adc
xlat
jg
inc
stos
xchg
je
adc
inc
aas
inc
xchg
mov
jg
stos
or
push
ss
push
push
add
leave
dec
stos
mov
xchg
inc
or
and
sub
mov
pushf
push
jbe
dec
call
and
test
js
enter
sti
cld
jne
jmp
cmp
jl
jmp
sbb
xchg
stos
out
or
cmp
sahf
cmps
push
pop
sub
int
lods
dec
pop
(bad)
pop
pushf
stos
jmp
xchg
dec
nop
mov
mov
cwde
mov
std
sti
pop
mov
mov
add
xlat
call
(bad)
mov
jns
out
maxps
int3
mov
out
cmp
push
and
cmps
ds
add
sub
pop
inc
xchg
(bad)
retf
or
stc
into
mov
push
add
les
xlat
pop
test
(bad)
mov
push
mov
shr
mul
(bad)
dec
imul
bnd
xor
fild
bound
add
sub
ss
out
out
sub
and
mov
repnz
int3
mov
push
mov
mov
or
cmp
rcl
pop
mov
jge
popaw
jmp
sub
or
int3
pop
imul
sbb
or
push
mov
mov
dec
mov
test
cs
pop
push
test
cmp
shr
ja
mov
xchg
jle
repnz
pop
sbb
dec
xor
out
out
pop
(bad)
cmp
imul
cmps
xchg
lock
mov
ret
mov
fsubr
repnz
mov
mov
cs
push
imul
mov
outs
adc
adc
sub
pop
dec
inc
scas
mov
jno
gs
xor
lods
push
daa
push
in
hlt
mov
ja
and
jp
or
movs
movs
pop
outs
adc
das
jo
mov
sbb
or
push
mov
mov
push
mov
xchg
adc
mov
ret
shl
pop
sub
std
popa
cmp
push
test
enter
or
jge
xchg
jae
sahf
js
xor
gs
out
shl
inc
pop
(bad)
mov
jl
jo
push
lahf
outs
(bad)
imul
adc
mov
push
shr
(bad)
sbb
je
pop
push
cmc
xor
and
mov
sub
sub
clc
cmps
mov
jo
add
out
fadd
or
push
sti
jmp
push
mov
cmc
push
inc
jmp
(bad)
jmp
cmp
or
xchg
push
add
adc
jo
mov
pop
add
in
mov
call
push
in
cdq
jns
aam
icebp
test
pop
cmp
jmp
xchg
ja
add
dec
aaa
enter
mov
jmp
push
xchg
clc
bound
out
sub
jns
push
arpl
and
and
or
add
jae
sub
adc
jne
(bad)
daa
pop
popf
push
jnp
pop
fstp
js
popa
(bad)
pop
or
sub
mul
add
sbb
test
fdivr
pop
fcomp
sub
outs
sub
jnp
adc
ud0
int3
(bad)
iret
xchg
jecxz
mov
jno
pushf
cdq
mov
push
retf
cmps
cmp
mov
cs
jno
test
xchg
dec
test
pop
sahf
pop
loop
pop
mov
movs
(bad)
sbb
pusha
adc
mov
xor
cmp
pop
loop
lods
pop
mov
pushf
fcmovnb
idiv
sub
mov
cmps
sub
xlat
call
enter
xchg
pop
xor
mov
loopne
add
and
call
mov
aaa
aam
adc
clc
stos
jmp
int
cwde
(bad)
xchg
mov
dec
sti
jae
popfw
push
(bad)
out
fwait
push
xor
out
jo
(bad)
or
fdivr
sub
mov
inc
xchg
mov
gs
outs
lock
xlat
sub
jle
cmps
jmp
cmp
xchg
fsub
and
push
fisubr
scas
cmp
mov
ins
adc
js
movs
ffreep
sub
adc
add
and
add
xchg
jns
pop
add
out
mov
retf
ins
sbb
stos
mov
push
stos
pop
frstor
jg
pop
and
pop
inc
pop
popf
xchg
xor
xor
mov
in
adc
imul
ss
bound
js
xor
outs
lds
or
stos
push
loope
xchg
sahf
and
test
sbb
sub
bound
popf
push
add
xor
cwde
mov
dec
test
jns
jo
sub
sbb
mov
gs
ins
mov
imul
(bad)
stc
dec
imul
pop
addr16
sbb
shl
xor
push
mov
mov
jp
in
and
test
sbb
cmp
cmps
mov
lahf
pop
and
push
(bad)
cwde
loop
or
out
add
inc
jg
cmp
mov
cmc
dec
sub
pushf
inc
sub
inc
pop
cli
push
std
icebp
adc
lods
(bad)
push
call
inc
sti
into
mov
xchg
push
mov
std
ror
sbb
adc
pop
sbb
icebp
push
dec
(bad)
mov
pop
mov
stos
into
jecxz
jmp
cmp
repz
(bad)
fst
mov
add
mov
jb
fucomip
dec
fsub
dec
cld
fnstcw
scas
push
xchg
fcom
das
cmp
push
push
mov
xor
inc
pop
push
xchg
std
mov
inc
lock
rcr
push
xchg
or
xchg
rcr
div
jle
dec
mov
es
and
push
sub
push
or
or
cmps
movs
imul
adc
std
mov
je
in
pop
mov
xor
idiv
pop
ficom
push
push
xor
lea
ins
aas
pop
inc
(bad)
sub
push
out
adc
cmp
mov
pop
and
xchg
fmul
out
pusha
xchg
push
loopne
push
repnz
in
jae
xor
daa
cld
call
mov
sub
pop
call
cmp
xor
(bad)
sbb
adc
xchg
xor
mov
xchg
xchg
xor
hlt
inc
add
add
lahf
(bad)
les
fcom
in
xchg
push
ins
loop
inc
jg
sub
dec
dec
cmps
sub
std
xchg
xchg
pop
and
inc
xchg
and
xchg
push
cli
lds
adc
adc
daa
inc
and
out
lahf
push
pop
not
pop
dec
aad
cmps
idiv
dec
push
and
pusha
push
stos
cwde
imul
adc
mov
stos
outs
fwait
jle
dec
mov
gs
fstp
mov
ret
cmp
pop
inc
cmps
cwde
xlat
mov
pop
shl
jnp
mov
ja
xchg
dec
mov
xor
cwde
sub
jg
fcomp
pushf
imul
push
or
cmps
in
sub
and
cmp
pop
movs
ret
test
xor
jne
xchg
or
dec
lods
cli
jmp
mov
add
rol
out
js
dec
movs
xor
mov
jae
push
cmps
fwait
(bad)
cmp
cs
das
retf
retf
push
jmp
jmp
popa
ffree
leave
mov
jnp
cmc
(bad)
in
xlat
dec
bound
pop
inc
jmp
out
jbe
pop
inc
fisub
adc
dec
sbb
(bad)
sar
shr
adc
push
xor
std
rcr
mov
fcomp
pop
inc
scas
dec
outs
add
scas
pop
lods
fcom
sbb
sti
push
sub
sbb
sub
sbb
cli
fldz
shl
cdq
mov
pusha
gs
test
xor
sub
xchg
jmp
dec
or
ins
xchg
leave
inc
pushf
sbb
scas
mov
jnp
les
dec
retf
xlat
mov
test
mov
out
shr
push
jp
rcr
xchg
jno
adc
test
mul
(bad)
and
and
xchg
out
test
cmp
push
std
inc
sbb
aas
(bad)
jg
out
icebp
jl
int
sbb
mov
std
jmp
loop
sbb
mov
js
cmps
and
or
cmps
popf
mov
(bad)
cmc
loop
mov
shl
inc
xor
jg
mul
sbb
imul
lods
xor
cs
jg
xor
adc
adc
stc
call
push
test
mov
inc
rcr
arpl
or
(bad)
in
cmps
inc
jbe
mov
cli
mov
jecxz
sbb
mov
cmp
fnstcw
dec
sub
cmc
repnz
clc
xor
bound
sub
xchg
gs
and
push
outs
adc
xchg
aad
add
fs
or
pop
inc
xchg
inc
imul
jnp
xchg
test
fild
push
sub
ret
xor
push
cmp
or
xchg
inc
iret
adc
cmp
pop
sub
push
sub
js
jbe
jae
inc
sub
xchg
push
les
outs
jne
jmp
rcr
dec
mov
(bad)
cmp
cmc
icebp
sahf
dec
push
dec
add
dec
faddp
mov
jmp
push
fild
push
jge
cmps
inc
cmp
jle
lahf
adc
inc
adc
sbb
pop
push
lahf
dec
jb
xlat
pop
enter
inc
sub
dec
ins
sbb
scas
jecxz
loop
aas
push
jmp
inc
pop
stos
mov
retf
inc
jae
mov
cwde
enter
shl
xchg
cmps
loop
cmp
ja
call
sbb
push
dec
mov
xor
nop
ins
fiadd
cs
mov
xchg
ret
stos
mov
jge
cld
push
ins
xchg
jmp
mov
push
jne
(bad)
lock
adc
push
pop
mov
mov
push
je
sub
push
sub
push
in
retf
test
add
lods
push
icebp
sysret
dec
push
aad
lock
mov
clc
mov
xchg
push
shl
ja
fst
adc
in
into
repnz
scas
add
(bad)
arpl
mov
mov
mov
or
out
out
pop
shr
repnz
sbb
lds
enter
fsubrp
and
and
and
add
das
pop
fwait
inc
jg
fstp
adc
clc
xchg
xlat
cs
hlt
(bad)
lock
jnp
cmp
push
jo
and
mov
int
xchg
add
jle
pushf
and
shr
sub
scas
loope
ret
xchg
stos
xchg
out
jl
cmp
add
dec
mov
(bad)
shl
xlat
fprem1
sbb
xor
cdq
les
test
pop
ficom
pop
mov
add
mov
mov
lea
call
push
mov
sub
idiv
mov
int
xchg
xchg
sahf
push
test
outs
dec
sbb
xor
in
rep
adc
test
aad
xchg
test
dec
mov
loopne
jbe
add
in
daa
into
mov
ins
(bad)
pop
in
inc
cmp
nop
sbb
aas
cs
mov
mov
and
pop
(bad)
je
xchg
add
mov
hlt
adc
or
jge
ja
or
cvttps2pi
jge
out
adc
neg
or
gs
stos
sbb
dec
mov
xchg
mov
sti
mov
mov
pop
(bad)
push
js
(bad)
sar
arpl
std
leave
pop
movs
dec
mov
adc
scas
loop
ja
dec
add
icebp
stos
jmp
pusha
sub
push
mov
fwait
mov
lods
retf
sub
push
xchg
ret
and
xchg
inc
in
movs
scas
ficom
jp
in
inc
adc
cmp
cmc
dec
cmp
cwde
fcomp
sbb
jmp
fdiv
pop
pop
ficomp
(bad)
xor
inc
in
inc
mov
lea
es
dec
mov
pop
dec
les
xor
movs
mov
jge
xor
rcl
lods
cmp
mov
pop
adc
adc
sbb
or
scas
sbb
movs
jl
fwait
inc
xchg
loop
imul
test
pop
mov
dec
mov
jns
or
cmp
icebp
bound
pop
pop
sbb
xchg
jle
or
cmc
inc
sahf
cmp
push
inc
xchg
pop
xor
iret
cmc
mov
xchg
and
sbb
xchg
fimul
mov
and
add
and
dec
adc
dec
test
outs
retf
inc
popa
cmc
sub
fsubr
stos
xlat
mov
adc
mov
adc
fbld
sar
mov
cmp
data16
sub
outs
cmp
and
and
in
pop
jne
vmptrld
std
loope
loop
pop
jae
rol
dec
int
dec
mov
push
jp
jmp
dec
mov
push
das
(bad)
mov
pop
jle
push
not
retf
xlat
xor
imul
imul
push
and
adc
xor
push
xor
aaa
lahf
clc
xchg
mov
shr
inc
sub
imul
jg
mov
mov
adc
repz
push
pop
sbb
cmp
popa
jmp
sar
mov
dec
repz
sbb
pusha
icebp
pop
push
dec
sbb
scas
jmp
xchg
cmp
cmp
cmp
js
jbe
push
mov
xchg
fstp
(bad)
mov
jnp
gs
pop
jnp
mov
outs
sti
mov
lahf
jne
test
ret
adc
sbb
cdq
xchg
cmp
sahf
cdq
test
cmps
ror
add
fnstcw
xor
lods
cmc
and
xor
push
outs
aaa
xchg
cmp
cmp
push
mov
ret
jae
xchg
adc
add
or
xor
adc
(bad)
sub
sahf
or
out
mov
xchg
cmp
sub
jmp
aad
add
adc
xor
repz
cmc
push
push
das
les
push
call
js
repnz
inc
int3
repz
bound
xor
dec
mov
mov
movs
js
pusha
ror
adc
lahf
movs
or
mov
jle
mov
mov
pop
addr16
xor
sahf
sbb
inc
cld
and
loop
fnstsw
xor
sbb
lahf
pop
sub
xor
leave
fs
retf
les
fs
stos
push
mov
xor
outs
and
mov
sub
pusha
xchg
sbb
mov
sub
lods
rcr
sub
push
movs
cmp
xchg
sahf
nop
cmp
les
sbb
imul
data16
fld
daa
iret
mov
cdq
mov
int3
fdivr
retf
add
mov
or
pop
rcl
ds
fsub
and
mov
and
enter
sub
ret
fild
dec
pop
in
hlt
cmp
lds
and
cmps
xchg
call
mov
in
fiadd
sahf
mov
test
jp
popa
(bad)
lods
push
rol
stc
scas
lea
call
shl
call
sub
cmp
sahf
pusha
cmc
mov
inc
movs
sub
sub
aam
pop
or
ret
fucomi
scas
in
cmp
call
mov
call
les
cmp
xchg
shl
cmps
fbld
jmp
push
inc
std
sub
and
pop
or
mov
mov
pop
cdq
and
(bad)
dec
xchg
sbb
sbb
add
out
out
lods
push
mov
test
adc
je
scas
dec
pop
retf
data16
fnstenv
cmp
inc
sub
test
lea
mov
jg
jnp
sub
je
(bad)
out
test
and
mov
retf
sbb
inc
cli
jl
cmps
cld
push
add
xor
push
nop
sub
cmp
aas
mov
leave
mov
jo
cmp
into
jmp
sar
arpl
dec
mov
addr16
loopne
mov
outs
pop
cmp
jmp
mov
and
inc
dec
pand
call
jae
jns
jo
fcomp
out
test
add
fist
adc
repnz
dec
loopne
mov
inc
repz
mov
mov
retf
inc
push
aas
or
xchg
jmp
data16
jle
enter
push
add
sbb
jne
sti
mov
add
adc
cwde
cli
ror
retf
and
push
jmp
xor
fisub
xor
call
inc
and
or
jmp
push
cmp
pop
pop
out
jne
push
mov
outs
fsubrp
push
lds
adc
fstp
bound
cmps
outs
sub
jns
retf
repz
test
imul
inc
dec
push
mov
fisub
push
ret
push
sub
push
mov
pshufw
or
pop
xor
ja
sbb
mov
clc
sub
and
sbb
or
pop
mov
loope
jge
jno
jbe
sub
inc
das
add
outs
fst
fstp
or
jne
add
(bad)
test
stc
inc
sbb
or
xor
add
mov
mov
xchg
test
add
pop
jno
inc
xchg
dec
xor
pop
ins
adc
push
ror
pop
ror
jmp
stos
inc
xchg
fdivr
xlat
xor
fst
(bad)
rcr
leave
mov
arpl
mov
or
sbb
or
call
dec
inc
aaa
sub
and
outs
loope
jle
jb
dec
shl
mov
xor
(bad)
std
aaa
stos
inc
push
mov
or
test
mov
scas
mov
in
push
popf
and
xchg
mov
loopne
xchg
lahf
cmps
mov
push
xor
into
cmp
in
sub
ret
jp
mov
in
retf
xchg
fild
ss
loop
(bad)
(bad)
sub
fwait
inc
std
and
push
sbb
or
ds
ror
dec
jae
inc
or
pushf
dec
push
xchg
push
enter
ds
fisttp
in
jo
mov
fmul
and
jmp
jmp
mov
dec
pop
loopne
outs
mov
rol
pop
mov
leave
push
shl
(bad)
mov
mov
sub
push
gs
inc
xchg
aas
mov
out
mov
loopne
inc
fiadd
outs
fcomp
mov
loopne
pop
xor
mov
jl
mov
mov
dec
rol
das
jns
clc
pop
mov
mov
inc
push
xor
ret
push
mov
adc
idiv
push
fsubr
daa
loopne
dec
pop
xchg
inc
mov
(bad)
push
inc
xor
ror
rcr
movs
pop
lods
out
cdq
(bad)
jp
xchg
sahf
dec
jns
push
sti
je
sar
xor
and
ss
add
adc
inc
clc
icebp
sub
popa
pop
sub
cli
inc
pop
popa
test
mov
push
dec
inc
sti
add
aas
mov
test
in
sub
ret
fcmovbe
sbb
mov
in
add
mov
pop
pop
cmps
popf
dec
enter
in
add
mov
mov
in
and
inc
pop
call
add
jge
enter
jmp
pop
daa
xchg
hlt
add
pop
sub
jl
xchg
jmp
xlat
mov
xor
dec
fnsave
pop
in
cmp
push
js
jecxz
and
ret
stos
mov
inc
xchg
js
fwait
mov
push
outs
mov
cmp
(bad)
nop
mov
ins
mov
rcl
sbb
cs
add
xchg
push
fisttp
pop
sar
or
mov
or
(bad)
sub
out
call
jl
in
and
std
pop
inc
mov
add
push
sbb
push
jb
cmc
sbb
xor
dec
ins
cli
push
mov
enter
mul
movs
mov
cmp
or
fld1
inc
in
test
into
sub
sbb
test
(bad)
mov
push
outs
cs
es
loopne
xor
add
outs
and
arpl
push
or
enter
mov
pop
cmp
imul
sbb
pop
push
pop
dec
inc
fisubr
repnz
pop
int3
es
dec
loope
mov
cs
out
(bad)
mov
or
mov
jl
(bad)
adc
jmp
daa
pusha
out
enter
xor
(bad)
gs
push
or
(bad)
out
(bad)
inc
dec
push
sub
loopne
jge
sbb
mov
into
push
ret
sub
adc
sbb
and
push
clc
outs
aad
lods
test
fnstenv
pop
jae
cmp
mov
je
fst
lea
jae
dec
scas
jp
inc
sbb
loope
push
adc
cld
add
add
les
aad
mov
mov
and
out
or
mov
ret
out
les
ins
mov
aam
sar
fsubr
ins
sar
out
cs
mov
cld
pop
push
or
test
push
ss
ffreep
loop
das
pop
mov
pop
xchg
dec
xchg
push
dec
pop
jb
int
mov
xor
or
jge
jecxz
jae
and
call
or
les
retf
mov
mov
jg
sub
into
out
retf
movs
and
outs
add
jg
push
mov
mov
or
adc
retf
call
movs
js
cmp
jecxz
and
and
test
and
mov
not
jge
mov
jl
dec
cli
call
fs
inc
enter
cmp
aas
(bad)
jmp
xor
call
lds
inc
jbe
dec
pop
push
(bad)
push
xchg
xchg
jp
jge
(bad)
retf
(bad)
cs
or
lea
cs
mov
hlt
jb
sub
test
push
std
dec
xor
repnz
xchg
out
repnz
sbb
outs
fild
test
pop
jecxz
jae
jge
jnp
sti
or
int
ja
je
push
shl
shl
fcom
shr
add
lock
dec
in
in
fistp
cmp
repz
call
lock
dec
xchg
les
dec
mov
push
cli
test
out
or
out
mov
(bad)
xchg
pop
leave
lods
call
push
pop
add
inc
mov
fiadd
out
adc
out
outs
sub
sbb
pop
icebp
adc
call
xchg
inc
lock
jns
push
add
inc
std
cmp
adc
imul
fild
gs
lods
adc
loopne
imul
out
mov
test
dec
jno
add
and
push
jnp
(bad)
pushf
test
gs
fcomi
jnp
pop
call
arpl
mov
(bad)
out
(bad)
ret
jmp
mov
fmul
mov
dec
into
push
or
xor
popf
int3
mov
std
push
or
addr16
adc
and
stos
in
push
mov
lahf
rcr
cmp
or
iret
out
sar
clc
sbb
mov
aam
push
sahf
gs
jbe
pop
mov
ror
cdq
jmp
push
inc
test
push
mov
push
ror
enter
fwait
arpl
scas
aaa
jae
ror
mov
mov
or
lahf
clc
dec
and
xchg
(bad)
fxtract
pop
inc
xchg
pop
loope
call
movs
movs
jg
scas
adc
sub
jecxz
cdq
or
push
aas
adc
test
pop
sbb
sub
rol
shl
fidivr
icebp
lods
jns
retf
(bad)
mov
and
mov
sbb
out
inc
icebp
fistp
pop
push
xchg
mov
mov
jge
(bad)
fisubr
jbe
sub
loopne
xor
xchg
xor
nop
int3
xlat
adc
ret
test
adc
xor
test
popf
adc
push
rol
push
xchg
cmp
xor
cli
les
ret
loope
jne
xor
mov
cmp
xchg
xor
mov
test
scas
lock
xor
or
add
fistp
and
add
cmp
movs
pop
(bad)
rcl
cld
cmp
mov
aaa
(bad)
movs
push
dec
dec
dec
fimul
xchg
push
sub
mov
int
repz
xchg
push
stos
sub
in
mov
and
(bad)
fisttp
imul
mov
mov
dec
inc
out
mov
shl
das
mov
aad
xchg
lods
dec
int3
adc
mov
(bad)
push
pushf
dec
sbb
or
cmc
int
jne
jb
dec
ins
ins
addr16
loope
mov
int
sar
fstp
pop
jno
dec
iret
and
pop
inc
test
imul
and
movs
adc
test
xor
aas
xchg
mov
outs
fisubr
pop
xchg
inc
jmp
mov
sbb
rcr
sbb
jmp
loope
fwait
or
mov
aad
cld
dec
fild
ds
xlat
cmp
mov
or
inc
add
cmp
test
lds
cmps
or
push
in
test
(bad)
fstp
scas
(bad)
cli
shr
cmps
fwait
ja
sti
sub
xchg
fwait
dec
int
test
sbb
or
out
jmp
dec
jae
movs
retf
jnp
fwait
and
push
or
cs
shr
adc
inc
or
dec
int3
ret
(bad)
jno
ins
push
jg
xor
ret
xor
inc
dec
xor
outs
stos
daa
mov
jmp
(bad)
mov
push
mov
in
(bad)
cmp
inc
pop
mov
fdivr
arpl
test
outs
xor
das
out
ja
aas
fstp
push
daa
and
lods
ret
sbb
mov
fmul
jmp
push
or
sahf
push
fidivr
or
xor
sbb
in
clc
sahf
and
xchg
stc
xchg
cwde
test
fidivr
mov
jns
sbb
dec
loopne
out
mov
xor
movs
out
dec
cmc
or
js
movs
inc
xchg
or
mov
cli
pop
leave
aas
in
arpl
sti
xchg
loopne
cld
mov
dec
es
fst
xchg
inc
ror
mov
and
adc
pop
sar
cdq
pop
adc
mov
sti
mov
push
mov
retf
inc
adc
pop
push
outs
loope
test
xor
ret
jp
pushf
push
xchg
retf
out
xlat
pop
(bad)
xchg
into
mov
adc
ins
mov
xchg
xchg
int
mov
hlt
pop
xchg
aad
scas
mov
addr16
sub
and
dec
out
rcl
(bad)
enter
add
push
(bad)
jmp
out
xchg
cmp
mov
xor
imul
jo
fstp
jne
and
popf
jmp
mov
sub
inc
mov
loopne
pop
xchg
pop
shr
push
dec
jns
inc
aad
jg
and
int3
call
or
in
leave
cmp
push
daa
fsubr
xor
push
jmp
pop
dec
cmps
or
xor
aam
jbe
push
int
iret
sub
push
jecxz
popa
lods
mov
cmp
push
or
scas
cmp
cmp
xchg
mov
mov
pop
aas
or
cli
xchg
cmp
js
adc
loope
popa
sbb
aaa
xchg
add
lea
lds
iret
dec
and
scas
mov
rep
fwait
jmp
pop
loope
sbb
mov
push
mov
arpl
in
pop
fld
in
mov
mov
daa
xchg
xchg
inc
or
mov
ja
or
sbb
add
xor
xchg
or
xchg
jo
pop
mov
sbb
mov
sar
icebp
pop
dec
or
sbb
gs
addr16
dec
ja
pop
mov
mov
cmp
ins
inc
xlat
jmp
test
in
cld
nop
jp
push
nop
and
iret
push
push
inc
loop
xchg
pop
jo
mov
cmp
cdq
fst
mov
push
jle
mov
js
test
pushf
push
shl
xchg
jle
mov
out
xor
out
sub
cmps
xor
dec
inc
xchg
adc
bound
adc
adc
loop
jae
and
fs
pusha
call
fmul
fmul
dec
push
pop
xchg
mul
sub
jle
aaa
xor
out
outs
mov
popa
add
ins
xchg
loope
test
cmp
mov
xchg
push
pop
mov
jne
mov
pop
in
jle
mov
cmps
push
out
stos
js
fs
(bad)
ror
mov
inc
cdq
mov
in
cmc
data16
out
outs
in
in
and
mov
call
push
jge
and
pop
push
ds
pop
pop
jnp
and
push
ror
or
std
inc
mov
mov
cdq
push
cmps
jbe
das
out
push
cs
xchg
sahf
ins
push
mov
xchg
sbb
je
fisttp
inc
mov
xchg
jnp
sub
test
xor
ror
push
mov
mov
push
aam
loopne
xchg
test
and
push
enter
adc
int
cmps
ret
ja
js
out
jns
rcr
push
mov
dec
adc
pop
xor
mov
mov
or
test
mov
xchg
(bad)
imul
in
jp
jecxz
out
stos
stc
xor
cmp
jg
mov
enter
add
mov
retf
mov
pop
mov
sbb
(bad)
retf
adc
lahf
aad
cmp
stos
xchg
repnz
cmp
cmps
sar
add
jecxz
push
repz
push
sbb
pop
jp
ins
push
push
fld
cmps
mov
cmp
add
or
jmp
mov
lahf
dec
mov
inc
scas
pop
sub
adc
out
jo
sbb
jb
daa
dec
adc
movs
call
jle
icebp
mul
or
fsubr
pop
mov
push
call
sub
ror
pop
sbb
inc
(bad)
pop
push
aad
sbb
(bad)
sahf
in
ss
or
cmp
popa
mov
mov
(bad)
std
hlt
sub
push
jl
pop
dec
sbb
dec
dec
or
out
mov
push
jbe
push
in
sub
shl
je
xchg
pop
jecxz
xor
mov
mov
inc
(bad)
nop
idiv
push
repz
stos
dec
add
popf
mov
mov
mov
push
mov
mov
push
xchg
cmps
dec
cmp
jno
sub
test
daa
xchg
xchg
mov
ins
cwde
enter
adc
rol
xchg
or
mov
js
cwde
add
test
ds
test
sets
jg
call
lock
sbb
xchg
out
xchg
xchg
movs
cwde
pop
mov
or
mov
jae
out
inc
push
xchg
add
push
pop
pop
adc
clc
cld
je
mov
pop
cdq
imul
mov
(bad)
xchg
mov
into
mov
fdivr
jmp
pop
(bad)
(bad)
xchg
jno
adc
int3
ins
inc
aad
fidivr
or
int
imul
jg
fdiv
test
mov
pop
inc
je
add
cs
or
out
mov
jns
dec
mov
mov
fwait
mov
pop
pop
cdq
xor
dec
(bad)
fnstcw
cmps
mov
push
sub
nop
mov
adc
mov
cld
mov
movs
xor
popa
in
pop
mov
adc
push
jae
ja
cwde
mov
arpl
sub
lock
adc
adc
cmp
aad
sbb
or
pop
mov
bound
int3
or
call
mov
push
shl
gs
jb
(bad)
fwait
ins
mov
loopne
inc
adc
faddp
add
cmp
push
pop
add
mov
and
mov
dec
fadd
nop
movs
lds
push
sub
stos
cmp
sahf
les
mov
(bad)
mov
cwde
outs
(bad)
addr16
shl
les
bound
mov
and
shr
xor
cmc
pop
xor
mov
aas
and
dec
or
sub
in
leave
sub
and
stos
sub
ror
push
mov
and
inc
inc
add
sub
call
and
test
add
popa
mov
in
xchg
ins
ins
push
leave
dec
sbb
cdq
pop
add
push
and
push
out
retf
push
dec
pop
sub
sub
inc
cmp
dec
movs
into
int
popf
test
mov
and
adc
mov
jl
lock
or
pop
ss
sub
enter
mov
mov
adc
push
sbb
jno
fist
lahf
arpl
cld
bound
fcmovnb
rol
lods
xor
out
das
sub
daa
mov
call
cmp
rol
lahf
in
dec
add
cmp
cli
jne
inc
int
retf
repz
inc
iret
hlt
movs
mov
sbb
shr
or
cmps
xor
lock
mov
out
cmp
jmp
xor
xchg
in
adc
add
or
inc
jge
or
xchg
cmp
or
fwait
xchg
in
dec
push
jle
inc
xchg
xchg
in
rcl
cmp
xchg
dec
fdiv
mov
jecxz
or
clc
rol
hlt
stc
es
xor
xor
je
pop
(bad)
addr16
loope
and
shl
and
sti
mov
dec
arpl
cmp
jno
int
xchg
fcomp
shl
cs
icebp
push
cmp
dec
sbb
ds
add
(bad)
cli
mov
xor
out
stc
bound
push
cmp
cli
lock
pop
cwde
lahf
push
lahf
imul
add
dec
aam
push
xchg
fldz
in
sub
sar
inc
jg
xchg
mov
sub
pop
lock
adc
jo
popa
sbb
xchg
mov
or
push
popf
out
lds
pushf
xchg
sub
jp
or
fild
push
ror
push
jmp
lahf
sbb
movs
dec
retf
mov
sbb
sbb
fsubr
xor
fadd
(bad)
jg
mov
enter
js
ins
cmp
ficomp
xor
jae
js
cmps
sbb
jecxz
movs
xor
xor
jge
mov
mov
add
add
inc
or
adc
jno
mov
push
push
rcr
push
sub
xlat
mov
clc
bound
dec
add
repnz
jmp
(bad)
data16
iret
cmps
sub
ret
test
sar
sbb
jle
movs
cmp
sbb
add
push
cdq
mov
rcl
sbb
or
mov
rcr
nop
in
in
fcmovnu
adc
les
iret
in
cwde
adc
mov
and
loop
icebp
into
outs
dec
xchg
aam
cwde
stos
adc
call
or
ins
loop
jg
and
jle
mov
mov
fdivr
cmps
out
enter
xchg
cmp
fs
out
mov
push
pop
cdq
sbb
aad
mov
adc
call
xor
sub
daa
lods
inc
movs
jb
adc
push
scas
nop
mov
test
ins
and
in
dec
mov
iret
inc
outs
cmc
movs
int
popf
call
cs
mov
mov
rcl
rcl
jmp
sbb
xchg
loop
jns
adc
cs
xchg
xor
sbb
adc
(bad)
rcl
arpl
inc
dec
cmp
push
pusha
cmp
test
xor
jp
sar
aam
inc
inc
lds
push
dec
pop
pusha
and
lds
push
sti
bound
adc
movs
pop
mov
aam
sti
fidiv
mov
movs
or
mov
pop
mov
jge
hlt
jmp
xchg
cmp
cmps
shl
rol
inc
adc
pop
mov
push
jle
mov
adc
mov
xor
pusha
mov
xchg
lock
jg
and
pop
fxch
in
call
das
pop
cmp
and
jecxz
rcr
shl
mov
xchg
jno
aad
scas
clc
dec
mov
cli
pop
out
std
xor
arpl
pop
pop
xchg
push
sbb
shr
sbb
sub
fnstcw
enter
mov
aas
or
and
pop
adc
mul
lds
mov
fld
push
out
cmp
cmp
mul
cs
ss
aad
and
or
add
mov
and
mov
cwde
ret
pop
jmp
(bad)
adc
hlt
fist
cwde
xor
and
mov
lds
push
ins
test
and
jp
mov
shr
addr16
or
outs
push
addr16
daa
jmp
or
mov
pusha
cmp
add
xor
and
dec
xchg
stos
sbb
imul
and
dec
ins
mov
(bad)
jno
ret
jo
stos
jmp
mov
adc
gs
push
add
repnz
ds
addr16
and
push
jl
and
push
jnp
ret
(bad)
das
idiv
jnp
scas
pushf
mov
idiv
(bad)
push
enter
push
call
das
movs
pop
aas
(bad)
cmp
stos
dec
cmp
mov
mov
xor
jne
addr16
jns
(bad)
sti
punpckhbw
jno
and
cs
sbb
popf
sub
cmps
mov
xlat
popa
or
mov
sbb
and
mov
lock
mov
add
sbb
xchg
jbe
xchg
cmp
stc
xor
ja
mov
fisubr
jne
test
xor
mov
cmp
xor
jecxz
nop
pop
adc
adc
popa
jmp
pop
dec
push
and
sbb
(bad)
sar
(bad)
nop
and
or
push
in
popf
nop
xor
sti
and
jae
not
popa
cmp
pop
add
sub
jo
push
shl
repnz
iret
mov
or
fucom
xor
loopne
ror
data16
and
fadd
sbb
push
dec
or
hlt
push
cmps
jns
aaa
mov
cmp
outs
xchg
adc
xchg
dec
movs
fsubrp
mov
fnstcw
cmp
xchg
inc
pop
push
loope
and
dec
mov
push
mov
stc
fwait
addr16
addr16
sub
push
mov
inc
push
adc
inc
pop
sti
push
cdq
test
std
dec
outs
in
pop
xchg
xchg
xchg
icebp
and
add
or
add
call
rol
out
jne
jge
xchg
pushf
mov
out
test
ss
shl
sti
sbb
cmc
xor
stos
dec
loop
sub
cmp
cmps
push
xchg
fidivr
inc
mov
pop
add
pop
lds
les
fbld
(bad)
(bad)
popf
or
xor
std
push
mov
scas
(bad)
leave
jae
jecxz
fsubr
pop
add
jo
sar
sbb
fdivr
sub
jle
aaa
not
push
dec
adc
push
fsub
cmps
fdivr
push
inc
fnstsw
movs
repnz
in
jno
xchg
es
cmp
or
aad
jb
jo
dec
movs
xchg
rcr
sub
ret
mov
cmp
mov
outs
mov
add
cmp
pop
mov
sbb
sub
push
(bad)
jne
cdq
mov
inc
adc
mov
pop
jns
push
out
inc
pop
jbe
fdiv
dec
jmp
mov
mov
sbb
and
popf
(bad)
cmc
es
sbb
inc
add
out
inc
and
lahf
and
imul
dec
mov
pop
push
cmp
(bad)
or
cld
dec
lods
loopne
repz
jg
xchg
jge
cmp
call
mov
pop
cmp
aas
icebp
cmc
push
jmp
(bad)
and
xor
jno
pusha
aaa
mov
test
xor
jnp
repnz
and
xchg
and
fwait
(bad)
adc
pushf
and
adc
sub
lods
bound
mov
and
cmp
ins
sub
xchg
clc
out
sub
out
jns
(bad)
cld
adc
enter
pop
loop
mov
rcl
push
mov
iret
dec
ja
fwait
daa
adc
add
push
in
lea
dec
ret
pop
push
sahf
jbe
jbe
add
test
inc
mov
xchg
cmp
cmc
cmp
and
xlat
add
(bad)
adc
in
sub
mov
jg
int
out
xchg
fsub
jg
xchg
mov
ret
in
or
xor
mov
fidivr
retf
in
pop
pop
mov
mov
addr16
not
inc
xor
mov
(bad)
sub
xchg
and
dec
shl
test
sbb
add
jge
or
adc
mov
or
jae
mov
sbb
sub
not
into
or
imul
(bad)
aam
jno
and
pop
jae
pop
cmp
jbe
and
popa
jnp
lds
jne
pop
call
in
xchg
stos
bound
stos
add
and
add
xchg
and
shr
jg
(bad)
mov
imul
mov
mov
jmp
test
add
jae
mov
inc
dec
ss
cmp
dec
iret
fcom
in
pop
inc
mov
xor
xlat
xchg
fisttp
scas
dec
xchg
in
pop
mov
dec
dec
jnp
push
ss
pushf
fcomp
and
push
mov
add
or
sub
enter
or
mov
push
and
hlt
mov
dec
pop
cdq
ret
out
cmp
mov
pop
iret
mov
lods
push
xor
retf
xchg
xchg
sub
mov
adc
push
gs
adc
repnz
out
fist
inc
fwait
push
mov
inc
jmp
fisttp
imul
fs
call
jne
pop
ucomiss
push
das
aad
mov
pop
scas
mov
jecxz
adc
aam
push
cbw
lock
movs
jle
inc
mov
jmp
fisttp
in
outs
sbb
pop
loope
in
bound
pop
outs
das
ror
ins
test
scas
push
ret
mov
lock
mov
xchg
mov
fistp
and
jbe
mov
hlt
shr
xchg
push
fwait
sbb
leave
je
xchg
scas
jge
and
jle
mov
and
mov
sub
data16
pop
mov
jmp
ds
mov
mov
out
jp
add
pop
ins
std
dec
jecxz
adc
sub
jne
mov
aas
cmp
mov
repnz
jnp
inc
push
loope
push
arpl
adc
sub
mov
int
push
popf
mov
rcr
jns
lahf
(bad)
(bad)
jle
sbb
xchg
cmp
cwde
add
push
adc
mov
jmp
ja
xchg
std
lock
or
add
sbb
add
and
arpl
lahf
out
pop
es
fcomp
adc
stos
popf
rol
jle
push
and
out
int3
call
inc
div
ret
stos
scas
clc
movs
in
and
idiv
movs
jl
(bad)
sub
in
jmp
in
jae
aad
mov
dec
adc
xchg
fst
loope
shl
mov
mov
enter
in
pusha
push
iret
mov
xchg
cmp
add
sub
imul
cmp
pusha
jb
push
repz
xchg
addr16
stos
mov
enter
jle
cmp
xchg
dec
jp
xor
test
das
cmps
fisub
stos
adc
sbb
icebp
xor
push
adc
retf
popf
mov
jb
stos
stos
pop
out
jmp
mov
mov
sub
push
sub
daa
out
inc
adc
mov
lock
push
mov
lods
mov
push
int3
dec
and
call
repz
jnp
push
fwait
add
mov
push
xchg
in
push
lods
inc
out
stc
mov
repnz
mov
sub
inc
cmp
or
movs
cwde
out
push
ja
xor
lods
dec
iret
or
mov
sub
mov
xchg
pop
lods
sbb
(bad)
inc
add
or
mov
in
(bad)
hlt
push
mov
cmps
fadd
push
inc
push
popf
adc
out
call
dec
cdq
cmp
pop
dec
fnstenv
adc
sub
mov
ret
mov
call
outs
inc
jno
retf
or
cli
jmp
mov
cmp
aas
push
cmp
icebp
and
andnps
or
add
iret
cli
sbb
xchg
sub
xor
and
test
adc
mov
inc
out
in
ins
rcr
stos
lods
mov
dec
mov
adc
(bad)
pop
rcr
and
out
dec
mov
adc
mov
imul
ret
or
mov
cmps
aad
(bad)
aas
mov
(bad)
mov
pop
xlat
push
bound
add
(bad)
mov
gs
cmp
xor
xor
imul
inc
mov
in
xor
sub
lods
fimul
jp
hlt
jle
pop
aam
ror
push
mov
and
shr
sbb
test
sti
aam
push
out
pop
das
mov
test
xor
test
push
in
xchg
xchg
cwde
inc
int3
add
ror
xlat
bound
xchg
das
nop
scas
pop
xchg
cmp
adc
push
mov
cmps
jmp
mov
mov
lahf
mov
and
add
or
and
push
jne
cmps
dec
sub
dec
sub
lds
cli
add
jno
jno
ins
(bad)
cmp
pop
push
imul
jmp
ficom
aas
stos
fist
neg
sbb
movs
loope
ins
or
jp
xor
fsubr
or
ins
out
div
test
call
mov
and
inc
and
das
inc
call
cmp
ss
sbb
and
clc
aam
test
mov
or
pop
mov
cmp
cmp
adc
sar
sbb
xlat
push
cmc
inc
in
cmp
fwait
inc
cld
push
test
mov
imul
imul
pop
pusha
test
(bad)
test
in
xchg
lds
push
cs
mov
jbe
dec
lock
ds
mov
or
in
pushf
in
jle
int
shl
sbb
mov
xor
push
sbb
sahf
xchg
add
add
cmp
push
jg
adc
cmp
rol
and
pop
xor
sbb
out
sbb
sti
adc
and
jo
mov
or
in
jmp
shr
loopne
jne
xchg
repnz
int
sbb
das
dec
cmc
or
icebp
pop
into
jbe
and
mov
jge
mov
and
sub
das
cmp
ds
mov
shl
or
and
pushf
(bad)
outs
and
fidiv
test
rcl
int3
add
mov
push
lods
leave
arpl
jnp
pop
test
nop
les
jne
out
lods
pop
push
mov
push
fstp
fstp
(bad)
mov
lock
adc
adc
data16
lods
sub
inc
sub
outs
mov
cmp
cmps
and
mov
xor
in
enter
or
retf
xchg
add
cmp
sbb
call
push
adc
cmps
mov
loope
cmp
ins
fs
js
jge
dec
sbb
sub
jmp
je
pop
shl
clc
jg
(bad)
cmp
(bad)
mov
cmps
cdq
mov
idiv
(bad)
repz
push
out
(bad)
(bad)
mov
adc
xchg
je
cld
sbb
dec
mov
(bad)
(bad)
fwait
sub
fdiv
sbb
fs
add
push
hlt
ret
arpl
sbb
jmp
dec
out
jae
daa
iret
xor
jae
mov
cmp
mov
rol
call
jnp
iret
adc
sahf
mov
ds
mov
mov
mov
mov
pop
xor
(bad)
repz
retf
fwait
inc
cmp
(bad)
pop
test
cmps
(bad)
pop
inc
sbb
dec
xchg
mov
in
push
daa
rcr
into
inc
xchg
pop
add
neg
nop
cmp
adc
sbb
inc
sub
loop
inc
mov
or
cld
out
cmps
mov
inc
and
mov
adc
ret
pop
inc
push
bound
lds
das
test
pusha
ss
repz
es
cld
add
xchg
mov
xlat
xchg
out
in
cmp
cmp
out
adc
int
je
cld
test
add
sub
retf
xor
js
aam
pop
lods
mov
icebp
jmp
scas
das
je
out
mov
(bad)
outs
jle
dec
mov
(bad)
addr16
(bad)
ins
in
lds
cmp
cmp
pop
leave
xchg
xor
adc
add
icebp
or
ror
mov
pop
cwde
rcl
sbb
ss
cdq
ja
push
cmps
jo
imul
jmp
and
into
jns
xchg
aas
hlt
das
cli
pushf
imul
mov
inc
jmp
(bad)
pop
shl
sub
shr
stos
or
push
dec
daa
adc
pusha
lock
retf
ja
sub
jge
lock
push
adc
int3
pop
xor
xor
jae
mov
or
lods
add
imul
push
shl
rol
int
xchg
jg
dec
fsub
jne
xor
stos
mov
paddw
lods
es
push
mov
out
jecxz
mov
test
and
leave
pop
xchg
cli
imul
int3
nop
jmp
lahf
aam
or
mov
inc
int
test
mov
mov
mov
into
test
lds
xor
in
pusha
test
mov
xchg
popa
sbb
sub
mov
out
fwait
fwait
push
add
mov
outs
lock
inc
(bad)
adc
cmps
pop
jmp
dec
or
xor
std
mov
jno
ror
loop
js
bswap
sbb
(bad)
dec
adc
pop
mov
js
aam
inc
cwde
adc
adc
mov
push
faddp
lea
imul
out
fwait
out
aas
xchg
mov
or
hlt
jecxz
(bad)
fwait
mov
and
xor
inc
xchg
dec
dec
xlat
dec
jno
add
je
mov
xchg
retf
test
mov
and
jmp
inc
adc
cmp
or
fisub
add
bound
jo
push
in
mov
jmp
dec
add
fs
xchg
mov
mov
and
and
les
retf
inc
mov
stos
popa
sbb
hlt
sub
cli
pop
inc
or
aaa
jp
cmps
inc
test
loop
xchg
xchg
repnz
stc
into
ret
(bad)
(bad)
sbb
mov
or
std
test
xchg
xchg
cmps
sub
retf
test
ficomp
stc
int
xor
stos
add
ja
stos
adc
ja
loop
ja
repz
and
pop
pop
push
push
jmp
(bad)
or
clc
xchg
jbe
data16
cmps
sub
mov
xchg
pop
adc
ja
jno
cmp
sbb
imul
jle
outs
mov
cmps
aas
pop
cs
or
jecxz
jb
jno
mov
fsubr
bound
gs
mov
mov
add
mov
not
sti
adc
xor
in
lahf
js
cmps
repz
sbb
stc
add
daa
rcl
dec
daa
loopne
xchg
mov
mov
jmp
xor
xchg
sbb
inc
sbb
xchg
dec
cmp
fiadd
add
retf
mov
mov
adc
bound
mov
and
inc
fst
mov
pop
push
sbb
dec
xor
int3
jmp
push
aam
sub
stc
fdiv
adc
push
popf
add
enter
ret
mov
dec
(bad)
dec
mov
push
lods
(bad)
xor
test
stos
push
lods
into
ret
into
cmc
repz
fs
ficomp
enter
push
push
cmp
arpl
pop
add
push
int
mov
(bad)
lods
fs
push
ins
retf
call
and
add
dec
fidiv
fld
clc
mov
lock
xor
add
cmps
retf
xor
mov
data16
sub
jle
sbb
jmp
sbb
popa
or
push
mov
scas
xor
fisub
sahf
in
mov
ret
repz
test
rcr
push
mov
std
arpl
cmps
icebp
and
(bad)
adc
sbb
loopne
xchg
dec
jmp
add
adc
mul
xchg
(bad)
lea
out
dec
sbb
xlat
cmp
lds
pop
out
in
ins
adc
mov
aad
les
xlat
xchg
lea
imul
rcl
loop
imul
mov
pusha
test
adc
adc
test
and
sub
iret
dec
sbb
inc
fisub
push
lock
push
mov
out
adc
or
data16
mov
pop
cs
fidivr
(bad)
push
mov
mov
xchg
pop
jecxz
xchg
pushf
jae
mov
jg
pop
mov
mov
and
stos
sbb
aas
pop
fcmovne
mov
dec
not
pop
int3
out
mov
adc
movaps
pop
shr
retf
fstp
push
int3
mov
sbb
inc
push
sub
sbb
mov
adc
push
dec
or
dec
fs
sub
cmp
cmp
jno
adc
jge
lock
(bad)
loope
cld
mov
mov
push
in
ret
fld
mov
sahf
jl
adc
add
push
pop
and
or
push
inc
ds
pop
fdivr
je
sbb
mov
in
in
dec
mov
inc
mov
adc
push
pusha
jbe
inc
fwait
or
retf
ins
dec
sub
popf
mov
pop
mov
aad
(bad)
leave
sub
movs
add
or
jl
dec
and
dec
das
lods
add
shl
jns
and
pause
xchg
test
scas
pushf
and
mov
jg
fs
pop
sti
cmc
jbe
out
pop
inc
into
fnstsw
adc
sub
jmp
cmps
inc
mov
jmp
sbb
jl
in
cmps
repnz
(bad)
xchg
mov
pushf
jnp
ret
cmp
popf
mov
dec
jp
retf
adc
adc
and
push
mov
stos
jns
jmp
popf
push
in
cs
shl
mov
retf
(bad)
inc
(bad)
imul
cmp
ret
add
push
fnstcw
jo
repz
mov
mov
pop
das
cli
lahf
ins
cmp
cld
add
test
sbb
daa
imul
inc
push
mov
dec
retf
sbb
push
outs
stos
jmp
or
pop
inc
xor
popf
(bad)
push
fisttp
adc
sbb
lods
cmp
fimul
std
loop
shl
dec
cld
ins
dec
adc
call
mov
sahf
or
cwde
jg
pop
jb
cmp
bound
xchg
lahf
loope
test
push
mov
aad
idiv
mov
pop
xor
daa
inc
bound
fcmove
and
mov
repz
jecxz
adc
fcom
sar
xchg
out
in
sub
leave
outs
outs
nop
or
or
sbb
neg
ret
dec
push
or
js
mov
add
scas
xor
xlat
pop
add
mov
cmp
loopne
fstp
sbb
inc
cs
push
fiadd
dec
int
fnsave
into
push
add
outs
repnz
ins
loopne
xor
push
mov
sbb
sub
add
stos
and
or
sbb
and
fcom
inc
push
out
sbb
ficomp
inc
retf
dec
xor
cdq
or
mov
imul
pop
jae
in
jo
dec
pop
cmps
sahf
popf
jecxz
add
xchg
jb
jbe
or
dec
pop
mov
jb
addr16
cmps
(bad)
add
mov
mov
sub
mov
and
aas
js
imul
out
mov
xchg
psubsb
es
and
sub
push
fwait
pop
mov
cmp
adc
stos
mov
dec
in
loope
jnp
nop
xchg
inc
adc
adc
call
mov
push
lods
hlt
(bad)
ret
pop
outs
mul
sbb
es
jg
adc
sub
jnp
rcl
and
mov
ss
mov
outs
xchg
pop
mov
push
jp
cmp
sar
rol
mov
lock
cmps
stos
xlat
cmp
mov
and
out
mov
call
push
movs
in
push
and
movs
mov
xchg
sbb
lea
das
test
push
adc
aad
pop
leave
(bad)
xchg
jmp
lds
inc
cdq
je
mov
test
je
or
push
xor
(bad)
sbb
adc
adc
shr
data16
retf
jmp
test
cld
push
pop
mov
call
repz
or
cmp
enter
gs
xlat
int
dec
sbb
stos
rol
ret
cmc
adc
popa
jp
jnp
retf
sbb
push
test
mov
fsubrp
jecxz
cli
dec
pop
inc
lea
aam
ret
data16
xor
ret
les
test
pop
outs
(bad)
push
rcl
fidiv
pop
mov
jge
and
data16
push
das
sub
shr
test
movs
sar
adc
push
sbb
pop
mov
stos
pop
dec
mov
retf
or
gs
lods
jbe
out
fbstp
sub
movs
mov
in
sbb
or
mov
adc
dec
aad
xor
push
sbb
iret
sbb
mov
in
lea
nop
sti
cmc
cmps
xor
fidiv
lock
inc
(bad)
fdiv
into
xchg
sub
pusha
rcr
pop
retf
mov
xchg
inc
repz
sbb
add
cwde
test
mov
inc
push
out
and
add
jae
mov
popf
pushf
cdq
cs
pushf
in
mov
xor
cld
add
inc
shl
mov
mov
xor
fs
in
call
test
mov
and
addr16
fsubr
std
int
pop
es
movs
(bad)
push
adc
xchg
cmp
enter
mov
out
mov
inc
loop
and
idiv
push
xchg
mov
push
add
(bad)
stc
add
bound
fs
adc
add
add
add
xor
push
into
mov
aas
daa
aam
add
lock
mov
mov
cmps
sti
lds
sbb
stos
lods
fimul
clc
add
pop
test
mov
mov
jb
unpckhps
imul
retf
sub
sub
mov
loopne
enter
adc
xor
push
(bad)
not
adc
sar
cmp
mul
mov
movs
(bad)
sahf
cmc
popa
std
shl
retf
sub
nop
xchg
or
and
int3
cmp
lods
retf
leave
mov
xor
jp
sbb
fild
adc
pop
mov
mov
leave
jl
leave
xor
mov
daa
xor
xchg
call
nop
xor
push
(bad)
add
outs
test
push
xchg
adc
cmps
jl
pop
cmc
shl
sub
leave
cmps
cmp
mov
out
cmps
add
loop
xchg
fldenv
in
mov
jo
sub
and
add
pop
cs
sahf
or
lock
add
pop
or
push
jo
ins
lahf
cmp
fmulp
xor
inc
outs
fisub
hlt
repnz
cmps
mov
jp
jecxz
sbb
push
jge
stos
call
(bad)
jno
ins
ss
stos
outs
push
loop
(bad)
sbb
dec
(bad)
pusha
mov
xor
lock
and
pop
xchg
sbb
lea
mov
or
jp
mov
jmp
add
ja
test
mov
lock
xor
mov
sbb
sub
mov
hlt
push
pop
(bad)
popa
dec
stos
inc
mov
icebp
popf
int
jmp
pop
iret
mov
sub
and
xor
loope
jnp
loopne
arpl
in
xor
cmp
mov
dec
jp
mov
aam
dec
mov
pop
jmp
or
pop
and
add
sbb
arpl
repz
or
or
dec
data16
cmp
out
nop
test
mov
sbb
jmp
inc
or
jmp
pop
stos
xor
mov
dec
mov
xor
or
push
pop
sub
out
ret
adc
or
dec
pushf
cs
fdivrp
add
sub
int3
jg
jge
sahf
test
sbb
jmp
or
push
sti
mov
jae
mov
push
push
and
cmp
adc
addr16
into
scas
sub
sbb
in
fmul
mov
mov
icebp
sub
jae
test
aam
ja
out
retf
dec
ins
mov
and
jae
cmps
out
sub
in
and
jecxz
retf
add
dec
ja
lock
jp
icebp
and
or
cmc
pop
cs
xor
aad
push
out
xchg
mov
stc
test
jmp
pop
jb
mov
xchg
sub
mov
lock
and
das
mov
in
imul
xchg
pop
jle
fadd
pop
or
dec
jno
aad
push
mov
sbb
jge
movs
inc
mov
sbb
cmp
ins
test
mov
inc
jmp
and
xchg
xor
bound
adc
mov
jne
pusha
call
idiv
cmp
sub
xor
cmp
xlat
push
out
mov
and
out
lds
dec
or
push
sbb
ja
dec
int
adc
xchg
rcr
jmp
das
xor
std
mov
jmp
jnp
mov
pop
in
mov
aas
bound
or
inc
mov
pop
imul
rcr
fnstsw
and
(bad)
pushw
sub
jle
pop
pop
enter
fs
mov
or
test
(bad)
je
jmp
push
mov
test
push
cmp
mov
push
ins
jb
outs
mov
lahf
fld
jge
jp
or
add
mov
xor
pop
sar
out
sbb
ins
fidiv
jecxz
nop
add
js
sbb
sbb
out
sbb
mov
ret
mov
lock
push
dec
and
or
ss
dec
imul
ret
ret
inc
mov
hlt
adc
mov
push
lods
in
int3
mov
shr
sub
sub
jb
pusha
or
(bad)
sbb
(bad)
cmp
push
aaa
out
adc
pop
enter
cmps
xchg
fisub
fisubr
cmp
js
in
mov
or
cmp
lea
and
push
dec
test
sbb
shl
and
mov
scas
pop
iret
jno
cmp
fisub
push
inc
cmc
test
popf
jnp
sbb
aam
mov
jbe
xchg
repz
mov
push
and
mov
cld
add
mov
mov
jne
aaa
das
pop
les
fsubr
xchg
mov
movs
xchg
cmp
addr16
mov
ds
fmul
cmp
sbb
faddp
imul
iret
xchg
dec
int3
push
mov
enter
jb
iret
aas
outs
aas
(bad)
ins
mov
fstp
sub
and
jl
fs
lods
mov
mov
mov
jo
aam
add
pop
sbb
cmp
(bad)
sbb
dec
pop
es
daa
data16
ficom
outs
(bad)
mov
shr
(bad)
sbb
fnstsw
mov
add
dec
push
push
add
sbb
sub
push
clc
add
mov
fstp
xchg
sbb
xchg
test
push
popf
add
retf
push
shl
mov
repz
out
rcr
stos
aaa
popf
push
js
xchg
jmp
or
dec
sub
rcr
out
out
stc
and
clc
jns
addr16
inc
push
xchg
xchg
and
push
jp
mov
add
out
fisub
dec
sbb
add
lahf
cmp
sub
inc
lods
inc
cdq
fisttp
jp
pop
dec
fist
clc
cs
add
test
jnp
push
mov
dec
repz
sub
mov
in
loope
ds
or
ror
mov
dec
int3
cmps
adc
sub
inc
add
sub
cmps
ins
sub
enter
loop
cdq
mov
out
jle
lods
sub
lahf
imul
push
xor
jg
add
(bad)
div
sbb
xchg
fstp
add
pop
pusha
movntq
out
adc
fistp
leavew
(bad)
aas
stos
ror
cdq
test
adc
lods
mov
push
pushf
aam
stc
test
push
jg
outs
icebp
sub
ret
scas
mov
pop
cli
pop
std
sub
push
sub
sub
aam
sbb
test
and
imul
jbe
cld
adc
out
je
es
add
or
push
rcl
dec
xor
or
rcl
mov
scas
stos
aaa
ins
jmp
push
push
jne
xchg
and
push
stos
mov
ror
jno
jge
dec
shl
inc
jecxz
adc
cdq
gs
popf
leave
(bad)
jo
into
jnp
push
xor
sub
push
jnp
(bad)
adc
dec
rol
sub
lds
xor
retf
dec
fisttp
inc
sub
cwde
xchg
movs
push
pop
daa
adc
ins
jnp
in
xchg
out
xor
jno
adc
push
test
push
imul
jns
cs
inc
or
cdq
stos
xchg
pop
dec
dec
mov
(bad)
sti
daa
xor
xchg
fild
call
rcr
fisttp
arpl
jno
mov
mov
and
xchg
and
inc
pop
pusha
out
clc
(bad)
enter
or
call
xchg
(bad)
xor
inc
inc
and
aas
pop
popf
pop
mov
loop
hlt
icebp
popf
dec
loope
cmps
pop
jbe
icebp
adc
jle
bound
xchg
lds
pop
mov
mov
iret
scas
add
dec
(bad)
das
cmp
pop
fnstenv
xchg
inc
push
call
icebp
xchg
or
mov
fwait
and
stos
xor
mov
into
movs
inc
add
push
ret
inc
icebp
cdq
retf
adc
pop
push
push
pop
push
or
inc
stc
jns
mov
pop
mov
sbb
jmp
push
dec
cmp
pop
pusha
pop
pop
mov
pop
or
inc
or
syscall
retf
lods
movs
fidivr
lds
push
aaa
push
out
jg
rol
sub
repnz
cmp
imul
push
mov
xor
cdq
sar
adc
fwait
pop
cmp
adc
jnp
cmc
add
jg
enter
and
in
int
mov
test
jle
add
dec
stc
loopne
cld
or
imul
in
loopne
mov
adc
in
enter
movs
pop
cmps
js
jmp
sti
jne
fcomp
data16
jge
scas
sub
gs
jno
pop
sub
jnp
clc
mov
adc
retf
xchg
shl
xor
fild
leave
mov
and
sahf
in
mov
mov
popf
ins
sbb
rcr
das
out
fbstp
fisubr
aas
rol
sbb
in
inc
jmp
jmp
fild
sbb
add
jmp
pop
push
inc
xor
mov
in
or
adc
cwde
jb
or
mov
repnz
xor
add
inc
xor
jne
cmp
outs
and
adc
dec
jo
add
mov
leave
add
movs
xchg
xchg
aam
pop
sbb
sbb
out
lds
test
movs
enter
test
pop
je
call
jmp
jle
les
jle
bound
enter
mov
data16
dec
dec
test
loopne
popa
mov
push
shl
sub
mov
mov
ins
neg
dec
icebp
mov
adc
sbb
popf
xor
gs
mov
mov
sbb
xchg
adc
in
nop
ret
cs
dec
into
inc
mov
js
mov
xchg
and
inc
adc
pop
hlt
or
std
fdiv
push
and
dec
mov
push
out
push
popf
and
lahf
daa
push
xor
xor
fwait
adc
popf
outs
out
cdq
scas
in
xchg
ret
lea
pop
in
loope
jmp
js
xchg
pop
mov
mov
adc
repnz
xor
out
xchg
scas
pop
repnz
stc
(bad)
pop
ss
arpl
mov
movs
stos
adc
mov
call
pop
lock
jmp
cmps
arpl
(bad)
push
loopne
jge
dec
clc
pop
xor
add
fidiv
cwde
(bad)
les
rcr
mov
add
mov
out
fs
not
out
(bad)
sbb
add
push
inc
outs
imul
ins
repnz
les
cmps
pop
aas
inc
jnp
bound
add
jge
imul
sbb
sub
movs
jo
pop
sahf
sub
sahf
fmul
sahf
xchg
das
push
cmp
arpl
mov
adc
cmp
jmp
add
jp
retf
push
sbb
add
sub
push
in
mul
cwde
andps
in
fmul
dec
lods
fmul
or
or
mov
jle
jmp
mov
add
clc
das
out
inc
or
repnz
bound
rcl
stos
sub
pop
sub
pop
or
repnz
aam
movs
cmp
lahf
pushf
pop
push
inc
mov
adc
mov
imul
lock
out
pop
push
and
mov
outs
outs
in
pop
adc
or
stos
dec
dec
cmp
jbe
mov
add
leave
cmp
outs
push
pusha
ret
mov
lods
repnz
int3
push
add
xchg
test
fiadd
sub
out
aas
xor
mov
mov
in
popf
jecxz
push
clc
ins
dec
mov
aaa
inc
popf
addr16
repz
movs
std
div
push
popa
mov
xchg
pop
dec
into
mov
push
adc
gs
inc
sub
cdq
das
inc
xchg
test
jecxz
test
dec
lock
lock
jge
test
vcomisd
mov
(bad)
cdq
cmps
fistp
int3
out
inc
add
pusha
ror
or
or
in
pop
in
xchg
inc
jmp
adc
add
(bad)
call
push
nop
aam
sub
sbb
fnstenv
sbb
push
(bad)
push
jecxz
fwait
inc
or
aad
das
and
and
xor
jb
jbe
cli
sub
mov
mov
mov
call
mov
ins
xchg
(bad)
mov
in
push
lods
rol
mov
mov
ss
xor
data16
mov
int3
test
fs
sub
fdiv
mov
sahf
sbb
jle
jno
(bad)
pop
out
inc
add
dec
ins
mov
xor
ins
outs
dec
inc
jb
dec
or
ss
je
or
mov
enter
mov
stc
jb
xor
ret
int3
mov
das
push
add
loop
cli
cmc
gs
mov
mov
inc
out
push
or
test
add
in
leave
cli
fwait
mov
test
jae
mov
cmp
int3
(bad)
cmp
scas
add
call
repz
mov
ret
cmp
sbb
int
adc
sbb
jno
and
sbb
jl
sub
xchg
pop
js
adc
dec
js
push
mov
lods
or
jns
sub
lea
jp
push
mov
imul
clc
outs
pop
sub
ret
repz
inc
sub
ss
sub
jno
cmp
cmps
mov
or
rcr
mov
sar
or
xchg
mov
add
inc
jmp
movs
aas
jmp
dec
adc
outs
scas
mov
ins
(bad)
jne
adc
test
je
xchg
mov
ss
shl
std
pop
cs
data16
and
mov
mov
pop
lea
push
das
fldenv
out
sahf
les
xchg
dec
mov
js
pop
lods
dec
mov
daa
adc
sti
test
or
cmp
ret
or
cli
add
les
xor
ret
add
into
imul
fild
sbb
sbb
inc
inc
cmps
and
ins
int3
jo
sub
or
or
loope
popf
pop
push
int3
xchg
(bad)
sti
shl
dec
or
addr16
dec
outs
das
mov
in
mov
or
loope
(bad)
push
call
jo
hlt
cmp
or
neg
fs
xchg
inc
sahf
adc
push
or
aad
cwde
sbb
test
mov
adc
aas
jl
adc
or
and
dec
inc
test
xchg
jge
dec
hlt
in
push
add
push
fs
xchg
and
cmp
mov
faddp
jmp
xor
add
mov
outs
int3
sbb
mov
adc
and
jbe
mov
stc
clc
xchg
adc
sbb
dec
jno
adc
mov
pop
or
iret
test
and
jmp
or
add
sbb
pop
int
pushf
pop
xchg
adc
sbb
mov
push
xchg
cwde
jnp
inc
add
mov
stos
out
lods
out
cmp
(bad)
push
ins
ss
jnp
fs
cmp
mov
lea
enter
pop
fist
jns
or
jb
sub
nop
adc
xchg
xlat
cmps
xchg
jle
cvtdq2ps
fxch
leave
pop
shl
adc
adc
es
pop
test
mov
dec
fstp
pop
int
jl
paddd
jns
jle
jl
pop
xchg
pmaxsw
xchg
in
adc
(bad)
mov
sub
dec
stos
jb
clc
aaa
jbe
xor
(bad)
jp
pop
xchg
xchg
fs
cmp
jmp
sbb
xlat
cli
adc
adc
cmp
push
jno
adc
stc
lea
loopne
add
fistp
movs
dec
cli
mov
xchg
out
pop
sbb
enter
and
(bad)
addr16
fcom
pop
mov
cmp
dec
or
push
arpl
mov
stos
outs
mul
imul
dec
add
sbb
xor
mov
fsubr
data16
mov
dec
mov
jl
push
jle
stc
xchg
test
or
jecxz
xor
mov
mov
stos
shr
imul
push
stos
out
push
lock
daa
(bad)
adc
test
das
pop
xor
ss
pop
pop
fmul
lahf
imul
mov
xchg
inc
dec
stos
pop
iret
push
ror
sub
push
aad
in
test
into
and
xchg
cmovle
je
sbb
sub
ds
lock
mov
ins
fsubp
out
push
push
sti
mov
mov
and
push
int
cmp
lock
mov
scas
pop
icebp
ret
out
(bad)
sub
out
cs
dec
push
aaa
mov
rcr
jne
arpl
adc
stos
sar
pusha
das
or
xor
frstor
loope
mov
mov
jae
xor
sbb
inc
xchg
mov
int
and
dec
dec
gs
jmp
leave
or
loope
(bad)
adc
fs
pop
es
mov
lea
xchg
fist
mov
adc
repz
sub
adc
or
(bad)
mov
js
leave
lds
push
inc
int
mov
jns
dec
mov
mov
outs
imul
mov
xchg
inc
pop
fld
mov
xor
in
repnz
and
fneni(8087
cmp
or
sub
test
xchg
xor
xchg
cmps
iret
jmp
adc
push
sbb
js
fist
(bad)
and
data16
push
std
cmp
xor
dec
inc
call
mov
leave
loop
(bad)
rol
aad
aam
xlat
out
out
fdiv
(bad)
push
ds
ins
retf
or
jo
(bad)
pusha
int3
or
xor
jne
pop
stos
test
gs
xchg
imul
inc
sti
in
ret
jp
cs
retf
sar
pop
adc
and
mov
out
cld
and
fsub
dec
test
jae
pop
mov
pop
dec
inc
rol
(bad)
mov
jmp
nop
inc
sbb
mov
cmp
fwait
nop
jle
ret
test
fadd
or
push
and
pop
popf
xchg
sbb
fsubrp
pop
dec
adc
data16
popa
xor
xchg
pcmpeqb
inc
adc
enter
sub
popf
rcl
in
lods
push
lahf
mov
xchg
sub
mov
(bad)
ss
pop
dec
cmp
xchg
adc
into
leave
pop
sbb
retf
mov
push
std
pop
imul
arpl
and
mov
mul
push
(bad)
cmp
pusha
push
rcr
imul
jmp
pop
and
stc
mov
div
das
jns
xchg
dec
out
out
loopne
ror
or
sub
fisttp
push
inc
aad
je
adc
dec
cmp
jl
fisttp
add
adc
dec
push
or
mov
mov
pop
jle
loope
(bad)
ds
push
stc
test
lea
mov
repz
fst
sub
cmp
jnp
sbb
inc
pop
pop
jle
aas
sub
mov
cdq
adc
pusha
nop
inc
dec
mov
shl
xchg
jmp
icebp
inc
jmp
in
lods
inc
mov
ja
cmp
push
adc
inc
sbb
sub
das
xor
jb
or
jne
mov
mov
movs
push
and
mov
jl
ret
jg
push
cwde
repnz
jg
add
dec
adc
(bad)
test
cmp
or
cmp
lock
cs
xor
add
leave
call
mov
sbb
ret
push
mov
stos
int3
cmc
jecxz
fbstp
sti
pop
les
cmp
xchg
test
aad
das
shr
(bad)
mov
sub
mov
adc
add
and
xor
mov
out
or
outs
sub
fstp
sbb
dec
enter
bound
test
inc
and
test
xor
xchg
mul
and
sahf
ret
aad
int
popf
rol
ds
add
outs
stos
xor
test
pop
add
mov
ret
sti
push
push
not
xchg
dec
xchg
push
pop
sahf
ret
mov
jle
les
test
cli
neg
adc
scas
pop
int
(bad)
nop
loopne
adc
(bad)
imul
inc
sub
fadd
retf
add
movs
mov
add
jns
jecxz
paddb
mov
adc
jmp
call
xor
aas
cmp
ss
pop
cli
enter
call
lahf
cmp
pop
xor
adc
dec
sub
sub
xor
push
or
iret
aam
mov
(bad)
dec
add
in
fs
and
scas
cmp
(bad)
jne
aas
sub
jg
push
pop
cmp
adc
bound
mov
mov
pop
dec
lahf
push
add
mov
mov
test
push
inc
mov
cmp
in
dec
xor
sar
fist
xchg
sbb
outs
nop
mov
icebp
iret
push
repz
(bad)
std
mov
imul
loope
stos
test
lds
in
std
enter
mov
pop
add
sahf
pop
push
fsub
lods
xchg
jne
jl
jmp
les
push
push
ins
ins
out
jge
(bad)
cli
jmp
push
stos
sub
mov
jp
ret
enter
out
(bad)
js
arpl
stos
inc
lods
std
add
dec
jnp
pop
out
leave
(bad)
cmc
es
ja
arpl
aaa
lea
mov
cmc
inc
mov
aam
cmps
(bad)
retf
dec
(bad)
(bad)
add
jmp
pop
popf
jo
daa
sbb
xor
leave
cld
dec
or
push
mov
jmp
or
cmp
adc
cmp
out
mov
icebp
xchg
sar
lea
pminub
int3
dec
aas
cld
(bad)
icebp
test
cdq
cmp
jmp
dec
sahf
outs
(bad)
mov
call
clc
push
popf
sbb
popa
popf
je
fxch
and
ret
push
jg
int3
and
test
xchg
mov
test
jmp
mov
fimul
mov
xor
cdq
xchg
push
iret
mov
sbb
cdq
push
xor
pop
sar
bound
adc
sub
add
add
sub
fdiv
mul
test
(bad)
jb
aaa
push
data16
push
retf
fistp
enter
out
jl
cmp
fisubr
pop
add
mov
or
scas
fdiv
pop
jg
outs
loope
adc
lods
fldenv
cli
sbb
iret
movs
(bad)
jmp
xchg
pop
add
mov
ins
das
pop
push
inc
arpl
fstp
in
das
adc
add
push
retf
aaa
js
(bad)
hlt
(bad)
push
jno
retf
sub
aam
out
in
push
les
aas
(bad)
loope
dec
pop
pop
lea
addr16
imul
mov
xor
xchg
addr16
fdivr
mov
pop
das
jecxz
adc
scas
pop
xchg
loop
retf
test
jb
jl
popf
push
fist
call
xchg
add
mov
dec
jl
fldcw
data16
pusha
mov
movs
fidivr
repz
imul
(bad)
xor
inc
mov
dec
jge
xlat
sti
cmp
rol
sbb
jg
inc
sub
cdq
add
test
fcmovb
(bad)
in
int3
scas
sbb
add
mov
test
inc
pop
imul
push
stos
mov
push
sub
loop
or
and
push
mov
push
fiadd
inc
sbb
xor
jge
sbb
jns
iret
fisttp
cs
mov
into
std
xchg
jge
mov
mov
hlt
jo
fistp
scas
mov
add
mov
xlat
pop
inc
(bad)
mov
(bad)
iret
mov
fistp
add
cdq
pop
imul
stos
aam
add
fdiv
xchg
(bad)
jno
(bad)
cmc
jmp
or
out
shl
imul
xor
jmp
loopne
fiadd
sub
rcr
jmp
mov
in
sbb
mov
pop
stc
cmps
cmp
mov
loope
pop
ins
fnstenv
aad
push
add
ins
or
imul
cmp
sub
les
or
ds
sbb
xchg
dec
ja
or
popf
int
cmc
sub
xchg
cmp
clc
movs
mov
popa
pop
or
ss
push
addr16
pushf
pop
movs
add
(bad)
mov
pop
ds
inc
add
mov
addr16
and
imul
xchg
loopne
push
vmwrite
xor
icebp
add
mov
inc
adc
addps
or
(bad)
das
dec
mul
dec
sbb
pop
stc
aam
jno
dec
test
add
xchg
fsubr
and
mov
mov
jae
sbb
pop
cmp
es
mov
jbe
dec
cld
pop
adc
scas
sbb
jb
sbb
xchg
inc
mov
sar
and
mov
cmp
retf
hlt
movs
shr
and
out
and
or
fadd
jnp
mov
fdivr
mov
or
push
call
xor
sub
inc
popf
mov
xchg
sub
loop
inc
mov
dec
imul
xchg
repz
jnp
xor
pop
fdiv
imul
mov
pop
mov
stc
mov
xchg
or
mov
aad
fcom
mov
addr16
adc
push
inc
mov
sbb
dec
or
outs
and
inc
out
cli
xor
mov
out
mov
or
xor
adc
and
inc
xor
ss
jo
rcl
xchg
pop
(bad)
push
mov
dec
inc
xchg
outs
mov
pop
or
sub
in
jne
jnp
adc
push
lds
xor
rcl
fcomip
nop
ja
stos
lock
and
mov
sub
push
pop
and
ins
xor
dec
mov
imul
cli
mov
mov
mov
inc
push
cmp
stos
jg
bound
sub
mov
std
iret
dec
scas
pusha
je
daa
lds
inc
in
push
pop
imul
cld
dec
pushf
frstor
(bad)
mov
shl
xor
shl
cmps
inc
pushf
sbb
sub
sub
gs
ret
adc
mov
xor
jle
fiadd
mov
push
sbb
cwde
mov
jbe
sbb
sub
adc
mov
loopne
sbb
or
sbb
in
les
cld
sti
dec
jp
cs
(bad)
lods
cmps
lds
in
sbb
jmp
out
movs
sub
mov
rcr
popa
ret
dec
sbb
push
jno
xchg
loop
imul
rol
out
mov
mov
mov
pop
(bad)
jmp
shl
imul
out
adc
lds
retf
cld
jns
out
inc
mov
rol
imul
clc
mov
stos
mov
xchg
hlt
sub
push
mov
das
jae
fidiv
icebp
adc
push
mov
loop
fstp
mov
xchg
out
jae
out
and
loopne
jmp
retf
jl
cmp
mov
(bad)
mov
cwde
adc
adc
cmc
pop
ja
xchg
daa
mov
inc
mov
or
ret
xor
or
push
push
mov
or
mov
jne
(bad)
adc
cmp
rol
out
loopne
movs
(bad)
and
es
mov
in
push
adc
jns
pop
dec
lods
sub
popf
loop
ja
mov
xchg
iret
shr
add
dec
les
mov
sub
mov
mov
stos
cmp
lds
scas
sub
inc
cmp
jmp
xor
fistp
(bad)
push
daa
pop
jae
push
or
dec
rcl
je
cwde
add
lods
xchg
pop
jbe
ja
sbb
and
sti
pop
call
test
arpl
scas
xor
sbb
sub
rol
xchg
into
adc
cmc
ror
mov
shr
and
xchg
sbb
cmps
and
lock
mov
(bad)
pop
xor
ins
in
push
fisubr
add
mov
popf
sub
aad
iret
int3
fs
ins
sbb
aaa
sub
pop
(bad)
sbb
pop
inc
xchg
dec
xor
pop
pmullw
cmp
sub
aaa
add
movs
pop
int
shl
xor
popa
mov
les
push
xchg
push
fwait
push
and
in
idiv
retf
pop
cmp
jg
sbb
enter
add
mov
push
push
out
ror
inc
call
push
xchg
dec
cld
shl
in
ds
mov
dec
xor
mov
push
scas
pusha
(bad)
out
mov
mov
push
cmp
mov
mov
and
lds
les
ins
leave
xchg
scas
das
mov
xchg
dec
aam
mov
repz
sti
inc
inc
mov
jle
mov
(bad)
ins
adc
(bad)
ss
rcr
arpl
xchg
dec
imul
fdivr
fiadd
pop
xchg
sbb
aam
clc
jmp
test
mov
sbb
rcr
lock
sub
adc
sahf
pop
jno
mov
test
mov
mov
sti
pop
push
mov
cmps
and
adc
arpl
mov
leave
imul
push
fs
pop
sub
xor
rol
xlat
in
test
ret
jmp
mov
cwde
cwde
imul
pop
pusha
out
jno
or
pop
jmp
cmp
pop
pop
inc
lods
mov
sbb
cmovle
dec
mov
jmp
xchg
sub
fucom
and
into
arpl
mov
xchg
mov
jns
leave
into
mov
cmp
fldcw
dec
xor
pushf
rcr
jno
mov
mov
sbb
bnd
pop
push
jmp
mov
sbb
ret
xor
dec
movs
push
and
pop
xor
or
push
inc
in
sub
inc
jae
dec
repnz
jo
mov
sbb
push
xor
and
(bad)
repnz
lea
sbb
(bad)
jae
mov
cli
lahf
enter
mov
mov
fs
sbb
(bad)
gs
aas
and
xchg
cmps
mov
jns
and
add
cld
push
cmps
inc
paddusb
pop
mov
test
push
loopne
rcl
loop
(bad)
in
mov
std
mov
xchg
add
xchg
lock
cmc
call
or
and
gs
outs
pop
pop
sbb
cmps
inc
call
in
push
mov
jae
sub
mov
nop
push
adc
push
mov
pop
push
int
jp
stos
lods
(bad)
out
movs
stos
sub
ins
xor
test
or
mov
out
pusha
pop
sbb
sbb
int3
in
stos
cmps
and
imul
dec
das
stos
sub
arpl
popa
sahf
xchg
scas
loop
mov
popf
mov
sub
sbb
ins
or
fstp
dec
pop
push
mov
mov
daa
enter
adc
jg
(bad)
and
test
aad
addr16
data16
stos
sbb
pop
jnp
push
test
scas
popa
sbb
stos
mov
cmps
push
fcmovnu
cmp
or
fwait
movs
test
inc
adc
inc
repz
in
arpl
xchg
cmp
pop
xor
adc
(bad)
xchg
adc
or
cmps
xor
cmp
cmp
or
dec
xor
jo
push
shl
shl
out
mov
mov
cmp
dec
outs
mov
adc
jp
dec
out
rcl
shl
lods
hlt
jle
mul
and
xchg
fisttp
xor
dec
fcomi
xor
push
xchg
pushf
jle
leave
(bad)
push
pop
mov
call
ror
add
dec
add
mov
push
and
inc
xor
in
or
inc
les
outs
add
sti
pop
mov
ds
in
push
(bad)
mov
add
inc
mov
stos
pop
dec
mov
repnz
call
mov
push
sar
jmp
sbb
pop
adc
jb
stos
jne
ss
pusha
dec
ja
jmp
ret
mov
push
das
xor
sbb
ffree
dec
push
push
nop
sahf
mov
jmp
push
add
int
cmp
pushf
push
xor
fucomp
(bad)
ja
jp
sbb
push
int3
test
xlat
xchg
dec
xor
scas
aad
cmp
and
fist
leave
push
cmps
push
mov
mov
push
syscall
mov
xchg
xchg
loopne
test
xchg
or
inc
lds
fs
lods
add
scas
jb
popf
or
jne
sti
leave
loope
(bad)
adc
dec
das
gs
loop
loopne
aam
jmp
dec
or
out
les
(bad)
xchg
sub
in
cwde
mov
xchg
ja
test
jno
call
int
fxch
popa
(bad)
add
mov
inc
out
nop
cmps
iret
test
or
mov
xchg
sti
xor
jnp
enter
cli
xchg
mov
ror
iret
repz
leave
je
stos
pop
(bad)
out
sbb
push
imul
jns
out
and
jae
mov
int3
je
or
aad
sub
inc
popa
mov
mov
into
into
cmps
cmp
dec
addr16
add
inc
xchg
mov
jb
test
or
xchg
xor
xor
mov
int
shl
inc
pop
ja
pop
sbb
sbb
cwde
test
sub
xor
addr16
push
or
xchg
ret
and
xchg
inc
aaa
leave
pusha
(bad)
mov
hlt
jae
mov
add
mov
stc
ds
jmp
lods
ins
scas
and
retf
rcl
retf
push
sahf
imul
in
mov
mov
scas
cmp
dec
fdivr
outs
iret
xchg
fisttp
cmp
gs
add
xor
sub
cmps
jmp
mov
mov
loope
push
loope
inc
cdq
pop
cs
cld
sbb
aad
or
add
out
cmp
inc
sbb
sbb
cs
int
in
add
sbb
sbb
jge
ds
mov
sar
or
iret
mov
mov
sub
cld
push
xor
fwait
mov
cdq
cmp
jo
cmp
ins
js
aaa
push
int3
sbb
xchg
adc
in
movs
or
cdq
rol
cmc
imul
shr
xchg
stos
inc
cmp
retf
mov
sahf
retf
mov
inc
out
hlt
add
daa
or
call
fxch
cmp
xchg
sbb
addr16
mov
outs
fwait
jnp
jnp
and
(bad)
push
push
ja
dec
std
cli
lods
cmp
or
int3
inc
sbb
cmps
push
in
dec
dec
data16
imul
cmp
test
push
mov
ds
imul
fcmovu
das
fisttp
xchg
lods
xor
jno
push
adc
or
sub
add
aaa
push
mov
mov
call
inc
cld
jg
inc
(bad)
mov
fdiv
pop
xchg
(bad)
sar
and
xchg
add
mov
push
mov
mov
or
mov
shl
cmp
or
jae
aas
adc
xchg
jmp
shl
rcr
hlt
fwait
outs
(bad)
push
lahf
jle
scas
test
cmps
xchg
pusha
movs
and
(bad)
xchg
clc
mov
cmp
fidiv
dec
mov
and
rol
jne
sbb
out
jb
dec
and
retf
mov
pop
mov
mov
push
sub
js
in
dec
inc
mov
and
nop
mov
dec
jne
jmp
dec
sub
ja
jmp
(bad)
push
xchg
test
lods
mov
adc
jmp
sti
les
mov
lds
sbb
jns
test
ds
push
push
ss
int
mov
pop
xchg
pop
lahf
mov
pop
mov
cmp
leave
xor
sbb
mov
fld
clc
jle
sbb
fdiv
out
jnp
sbb
jbe
xor
or
lea
shr
push
inc
ins
mov
jge
sub
mov
sub
cmp
mov
mov
adc
inc
jmp
fst
or
stos
sbb
ss
test
sub
dec
call
es
mov
jb
mov
addr16
cs
mov
retf
mov
fild
jno
push
xchg
loopne
movs
and
cmp
rcl
mov
mov
retf
mov
out
add
mov
retf
jnp
and
hlt
sbb
lods
addr16
fisttp
fdivr
sbb
pop
test
retf
and
xchg
add
aas
add
lods
jno
ss
and
dec
push
shl
pop
iret
sbb
addr16
scas
popa
in
dec
xchg
dec
rcr
push
mov
(bad)
je
pop
dec
inc
test
fild
cli
cmp
scas
jo
stos
enter
std
mov
ror
hlt
push
adc
rol
pop
jns
sub
mov
add
cmp
or
mov
es
popf
xor
jl
xor
add
jae
xchg
and
(bad)
pop
mov
hlt
loopne
cdq
add
push
or
dec
js
imul
push
jge
sbb
pop
push
adc
int3
add
in
shr
jp
test
mov
dec
(bad)
loop
int3
jbe
xor
imul
loope
add
and
sub
and
pop
jo
sbb
sbb
mov
js
mov
xlat
sub
ss
sbb
out
ins
mov
fwait
jp
sbb
xchg
aas
popf
mul
sub
push
(bad)
dec
retf
inc
cmps
movs
mov
and
jae
mov
or
mov
jno
mov
cld
inc
aam
push
jb
stos
xchg
dec
fstp
arpl
nop
sub
enter
push
jl
jge
js
js
push
cmps
jl
cld
in
cdq
pop
sbb
xor
std
addr16
std
or
dec
fs
js
(bad)
jo
xor
cmp
enter
cmp
out
adc
or
(bad)
mov
stos
mov
(bad)
call
xchg
shl
mov
sahf
dec
sub
sysret
jne
imul
add
jne
xchg
fmul
int
dec
cs
mov
cmps
ins
inc
mov
cli
mov
add
xchg
das
xor
mov
sti
test
movs
or
rol
ret
sub
mov
mov
std
fadd
push
and
push
fdivr
sbb
stos
enter
test
(bad)
push
inc
push
mov
push
cli
fsubr
dec
xor
push
cmp
inc
iret
push
mov
sti
je
call
sub
dec
mov
mov
sub
int
jl
or
jo
jns
sbb
push
mov
pop
mov
call
out
xor
mov
(bad)
loopne
aas
mov
or
loopne
push
adc
xor
dec
jae
iret
test
or
jmp
mov
jmp
test
pop
or
lahf
dec
jmp
mov
dec
fs
or
pop
ret
xchg
adc
dec
call
push
repz
mov
or
scas
out
std
les
cmp
addr16
cmp
or
inc
or
(bad)
addr16
ret
int
pop
outs
arpl
push
pop
sub
out
jp
dec
pop
mov
sub
arpl
lock
sbb
in
(bad)
xor
push
jne
(bad)
xlat
push
div
inc
test
and
das
rol
pop
jg
shr
sub
xchg
xlat
dec
aas
mov
adc
mov
xchg
push
sbb
sar
mov
adc
push
call
mov
cmp
bound
nop
mov
test
adc
xchg
xlat
push
and
pop
and
mov
push
pop
mov
xor
push
jmp
xchg
mov
adc
dec
add
inc
mov
aaa
pop
sbb
fldcw
jb
mov
(bad)
imul
jge
inc
ins
(bad)
mov
cmp
test
xor
dec
out
mov
pop
loop
repz
ret
sbb
push
mov
dec
es
mov
shl
rcr
inc
jle
test
fcomp
sbb
sahf
repnz
jl
cwde
mov
lahf
cmp
sub
ins
stos
mov
aas
sbb
sub
jnp
ss
fcom
push
or
aas
add
and
mov
sbb
sub
loop
mov
clc
xchg
xchg
lea
sub
and
dec
pop
push
cmp
fidiv
inc
stos
bound
push
xchg
(bad)
mov
mov
mov
push
lods
shl
inc
add
jae
sbb
(bad)
adc
xchg
adc
dec
xor
sahf
in
retf
shl
scas
jl
shr
inc
je
xchg
fisttp
sbb
and
(bad)
es
mov
das
loop
add
fbstp
xchg
adc
int
pop
shl
imul
xchg
arpl
(bad)
adc
jae
rcr
cdq
out
inc
ret
retf
into
push
dec
test
iret
push
mov
adc
cwde
pop
scas
jb
sub
sbb
mov
cs
das
add
jmp
sbb
test
sbb
sti
jae
jmp
inc
jns
dec
icebp
cdq
lds
dec
mov
dec
jns
jbe
(bad)
out
repnz
mov
shr
(bad)
cmp
imul
pop
test
jle
js
pop
and
retf
xchg
cwde
stc
sub
or
(bad)
mov
dec
pop
dec
test
add
fmul
das
dec
ds
aaa
push
stos
cmp
in
inc
jp
ins
stc
mov
aaa
sub
dec
in
out
pop
sub
adc
fs
fimul
sti
loopne
add
seta
xchg
clc
lea
out
jo
fwait
push
mov
fisttp
dec
pop
cdq
mov
repnz
iret
cmp
ficomp
xchg
popf
je
jecxz
sub
cmps
push
aaa
in
sbb
pop
nop
adc
test
adc
jmp
add
(bad)
enter
add
push
fisub
cmp
ror
push
cdq
jne
lds
or
mov
lods
add
mov
jmp
lock
daa
cwde
xchg
dec
out
aas
mov
mov
lods
les
cmp
pop
dec
iret
inc
aad
cmp
jno
lds
retf
inc
int3
sub
jae
push
adc
out
daa
cld
and
push
push
stos
adc
sub
je
or
xchg
inc
mov
cmp
pop
jle
int
sti
cwde
push
push
(bad)
mov
aaa
ss
mov
mov
fwait
pop
jg
cmps
add
sbb
int
or
mov
into
int
rol
or
sub
fist
bound
sbb
test
shl
cdq
int
jp
mov
scas
enter
pop
mov
std
add
daa
sub
mov
mov
dec
push
cmp
ss
shr
std
push
mov
dec
clc
pushf
lahf
push
mov
mov
repnz
or
or
call
ss
cwde
lods
xchg
aam
(bad)
pushf
mov
verr
(bad)
pop
cmp
iret
iret
(bad)
aam
repnz
mov
shl
sub
inc
std
jp
xlat
arpl
inc
cwde
imul
jns
mov
add
int3
and
fmul
mov
ret
rcr
adc
addr16
cwde
pcmpeqd
mov
mov
add
addr16
xchg
sub
push
scas
nop
shl
inc
or
adc
inc
pop
mov
out
scas
cs
sahf
lahf
and
sahf
mov
xchg
rcl
mov
and
fwait
ret
xchg
cmp
jg
movs
test
ret
fcom
cmc
in
imul
retf
and
daa
or
mov
cwde
and
scas
adc
add
sub
lods
push
out
cli
popa
scas
aas
jle
sub
popa
bound
fbld
jmp
xchg
inc
fndisi(8087
out
xchg
es
fsub
mov
sub
push
add
xor
mov
jae
stos
in
jp
inc
cmp
pop
adc
add
outs
add
mov
fs
pop
out
je
ret
sbb
push
cmp
stos
es
jns
xor
sbb
cmp
in
sti
leave
jae
pop
xchg
xchg
cdq
pop
pop
cdq
test
jecxz
cmp
sub
hlt
xchg
xor
lea
inc
push
sbb
xchg
movs
ficomp
and
movs
repnz
cli
ss
retf
adc
xlat
adc
repnz
(bad)
jp
repz
xor
scas
retf
fstp
jbe
retf
sub
xlat
push
mul
jmp
pop
clc
dec
data16
sub
and
jno
lea
shr
jge
lahf
std
dec
xor
push
fcom
pop
fadd
pop
popa
push
ret
das
xor
rcr
or
inc
or
and
inc
cmps
pop
fdiv
in
enter
int
jmp
mov
inc
in
add
stos
rcl
mov
jmp
mov
jp
dec
or
push
pop
or
inc
(bad)
or
ss
xor
fidiv
clc
push
cmc
cmc
mov
push
lods
fst
(bad)
pop
mov
dec
adc
jnp
push
sbb
ret
xor
pop
pop
int3
cwde
int3
mov
outs
mov
mov
xchg
ret
mov
xchg
(bad)
sub
sub
hlt
out
mov
mov
mov
call
inc
adc
push
add
into
xor
push
jp
xchg
(bad)
cmp
sub
pop
iret
add
aas
xchg
xor
xor
lods
inc
mov
lar
push
outs
push
or
das
lahf
fst
cmp
mov
les
aam
jmp
hlt
mov
sub
ret
mov
(bad)
cmc
aaa
push
fdivr
cmps
push
gs
std
push
pop
popa
push
push
scas
jns
leave
mov
ss
sahf
mov
pop
aas
mov
jae
xlat
push
cmp
mov
mov
sahf
add
not
or
pop
push
inc
xor
fwait
push
jns
scas
adc
stos
adc
jae
cs
inc
mov
hlt
ret
rcr
jmp
test
mov
pop
std
call
das
xchg
xor
fiadd
out
sar
and
sub
pop
std
mov
sbb
xchg
pop
out
int
xchg
fcomi
cdq
std
imul
xor
addr16
pop
xchg
icebp
(bad)
inc
xchg
jb
rcr
add
repz
mov
test
push
or
xor
sub
adc
mov
push
data16
mov
or
inc
inc
mov
iret
push
add
stc
jne
lea
test
daa
pop
call
jnp
test
loop
or
sub
jl
sahf
mov
in
adc
es
sub
cmp
fld
push
mov
sub
ins
sub
xor
mov
adc
stos
or
pop
and
int3
cmp
out
cmps
sbb
sti
int3
cmps
and
jl
push
shr
loopne
mov
xor
xchg
mov
cli
pop
mov
(bad)
cmp
bound
jmp
imul
lahf
push
mov
mov
lock
int
icebp
mul
sub
mov
jecxz
mov
ins
pop
push
jae
mov
jns
ins
push
mov
xchg
mov
lahf
sahf
push
jmp
ins
jp
fwait
std
xor
push
imul
loope
push
icebp
popa
out
jge
dec
add
sub
pop
(bad)
cld
adc
and
js
je
ds
test
test
xchg
inc
or
loop
jmp
or
mov
mov
sahf
imul
leave
push
cmp
sub
call
push
sub
shr
retf
fild
cdq
push
ins
sahf
xor
push
bound
arpl
les
cmc
mov
sbb
call
xor
cdq
sub
mov
or
(bad)
sub
and
sub
sti
popa
daa
cmps
sbb
aam
xor
mov
jno
cmp
cmp
mov
jmp
in
inc
jecxz
repnz
iret
sub
jne
pop
sbb
retf
cmp
call
in
jo
(bad)
mov
mov
hlt
mov
jmp
sub
retf
fwait
mov
push
sbb
ds
add
and
add
inc
cmp
dec
mov
sbb
int3
sub
xchg
lea
(bad)
out
push
mov
fs
les
jl
in
sub
inc
push
icebp
loopne
repnz
icebp
popf
sbb
or
imul
jecxz
adc
xor
retf
mov
inc
stc
jecxz
test
outs
dec
out
cs
cmp
jbe
into
sbb
sbb
mov
push
ficom
or
ficomp
add
bound
sub
mov
mov
sub
in
in
mov
mov
push
and
cmps
fs
pop
xchg
xor
xchg
retfw
cmp
scas
out
jne
(bad)
push
fwait
out
mov
test
and
rol
mov
xor
dec
out
push
jmp
je
xor
clc
push
add
mov
jg
int3
push
jo
lods
in
dec
ret
cmp
adc
pop
or
mov
push
imul
int3
test
xor
mov
retf
pop
cmp
xlat
lea
inc
and
ins
into
push
(bad)
push
and
adc
jbe
pop
fdivr
int3
pop
addr16
int3
les
or
fucomp
jae
cmc
cmp
pop
lods
inc
hlt
in
jae
outs
fpatan
pop
arpl
sbb
jle
or
jno
iret
rcl
or
push
fiadd
sub
repz
cmp
pop
xor
adc
pop
hlt
scas
mov
sbb
scas
push
adc
mov
data16
pop
mov
repz
or
lods
lahf
mov
mov
sbb
push
mov
fwait
jmp
cmp
sbb
pop
repz
test
sahf
push
pop
inc
fcmovnbe
test
pushf
xchg
cmp
enter
scas
rcr
outs
scas
loope
mov
out
jo
xchg
push
xchg
cmp
push
(bad)
cld
mov
(bad)
std
cli
loope
adc
add
cmps
mov
pop
mov
dec
and
sbb
xchg
xchg
hlt
icebp
mov
mov
add
jno
in
(bad)
mov
adc
inc
jnp
cmp
mov
and
int
inc
push
adc
int
ins
and
dec
ds
mov
and
push
mov
jb
loop
dec
mov
stc
or
jg
(bad)
call
inc
mov
push
jecxz
aad
mov
(bad)
fincstp
and
shr
(bad)
int
xchg
jmp
dec
iret
lock
les
cmps
adc
ret
push
rcr
mov
(bad)
or
lds
movs
and
cs
data16
mov
es
aaa
xchg
push
pop
mov
xor
mov
push
sub
mov
ret
adc
dec
mov
adc
jmp
jecxz
inc
jl
dec
repz
sbb
dec
jnp
jmp
mov
shl
sbb
les
rcl
sub
mov
mov
stos
lods
hlt
jno
jmp
or
dec
xor
inc
popa
fwait
cdq
loop
pop
cmp
mov
inc
leave
push
sti
xchg
je
pop
hlt
enter
stos
jns
shl
or
jnp
dec
mov
jo
fist
fsub
mov
sub
pop
jb
or
push
or
ss
push
jmp
test
pop
adc
cmp
aad
dec
fsub
movs
jle
in
sbb
sti
cmp
cli
and
test
scas
outs
not
mov
dec
adc
push
(bad)
push
stos
std
xor
clc
push
adc
push
inc
ins
push
dec
mov
push
fsub
and
mov
fild
aam
xchg
dec
ja
es
test
cdq
mov
fisttp
mov
out
cld
sub
add
call
mov
sahf
mov
push
and
ins
mov
aam
dec
mov
ins
stos
sbb
and
fwait
imul
cwde
pop
and
les
stos
test
retf
mov
xlat
fsubr
push
jmp
adc
icebp
and
jg
cmp
mov
or
jbe
test
data16
xor
iret
lods
les
lds
outs
fcomp
xor
cmps
sar
sub
cmp
cmp
das
lock
push
inc
jnp
cmp
nop
mov
sti
add
ja
cli
mov
popf
dec
aaa
push
(bad)
push
ret
hlt
mov
pop
push
js
adc
and
loopne
loopne
inc
jno
clc
mov
push
sbb
jle
nop
(bad)
jp
jb
call
les
and
pop
inc
pop
mov
(bad)
test
pop
adc
add
rcl
pop
pop
or
xchg
aad
xchg
scas
fcmove
add
mov
mov
adc
or
adc
push
push
xor
and
in
retf
inc
mov
sbb
sahf
adc
add
push
sbb
push
mov
sub
movs
xchg
in
fwait
cwde
mov
cmc
cmp
xchg
mov
cmp
push
adc
xchg
push
adc
jge
adc
and
cmps
push
mul
cmc
push
jae
and
ins
in
out
cmp
(bad)
jp
dec
inc
add
inc
mov
ja
pop
xor
scas
retf
mov
and
push
mov
vsqrtps
in
mov
test
(bad)
scas
bound
mov
dec
sub
dec
sub
sub
pop
aad
push
shr
ret
mov
cld
jnp
adc
add
or
and
mov
jl
xchg
xlat
daa
jbe
cmps
mov
lea
mov
repnz
and
sbb
sbb
or
xchg
(bad)
cmp
repz
jg
ds
jnp
outs
fiadd
jge
stos
inc
adc
popa
sub
dec
xchg
sbb
lds
cwde
mov
cmp
jno
iret
sub
mov
loope
ins
gs
rcr
rcl
inc
cmp
aam
jecxz
sub
and
push
adc
and
pop
or
pop
test
and
cmp
and
test
movs
mov
(bad)
loope
push
mov
fwait
push
xchg
lods
ja
lods
jmp
sub
xor
fwait
sub
nop
fs
add
sub
ds
cmp
adc
cmp
xor
jle
sub
inc
xor
inc
mov
cli
nop
fisttp
xchg
mov
sub
inc
sub
lea
sbb
sub
stc
cmp
xchg
pop
mov
adc
shr
push
mov
cmp
xlat
out
adc
(bad)
fstp
pop
gs
xor
in
sbb
jecxz
(bad)
inc
add
imul
cmp
sar
js
ins
popa
ins
nop
out
dec
das
int3
jl
xchg
loope
es
sub
call
dec
sahf
js
(bad)
mov
js
lahf
mov
pop
sbb
fdiv
or
(bad)
loopne
enter
push
and
add
inc
clc
lods
xchg
(bad)
adc
xor
jmp
xor
mov
jg
inc
pusha
mov
xchg
push
inc
daa
jo
repnz
push
adc
in
sbb
rcr
sub
ficomp
aad
inc
or
lods
dec
or
mov
imul
out
sbb
jl
push
ins
mov
or
push
mov
mov
outs
mov
sbb
push
cmps
jo
out
jmp
mov
mov
rcl
push
movs
cmps
cli
shr
xlat
aaa
sahf
xchg
mov
add
xchg
out
jns
xchg
in
sbb
xor
pop
xchg
inc
sti
pop
inc
jmp
call
cmp
adc
mov
dec
arpl
int3
loope
shl
(bad)
arpl
jne
inc
int3
mov
iret
add
dec
mov
in
iret
or
test
or
repz
jp
push
push
gs
xor
in
xor
leave
(bad)
ins
scas
aas
cmps
xlat
push
xor
test
icebp
icebp
loope
js
xchg
fnsave
xchg
test
dec
xlat
jmp
scas
cmp
(bad)
adc
retf
inc
aam
into
data16
ins
lods
leave
cdq
jno
xchg
sahf
outs
daa
push
jb
rcl
push
dec
or
(bad)
into
mov
push
push
nop
inc
xor
out
or
inc
clc
add
leave
or
push
xchg
mov
xor
fldcw
xchg
scas
cdq
inc
hlt
stc
and
lods
sub
jnp
sbb
inc
mov
push
movs
mov
jno
and
stos
push
je
push
(bad)
mov
jmp
xchg
fcom
ror
xchg
add
adc
xor
sub
dec
out
int
in
xchg
xor
bound
out
icebp
ss
mov
in
fdivr
push
stos
add
cmp
or
(bad)
jo
fwait
loope
jg
rcl
jne
(bad)
jae
cmp
mov
mov
ror
dec
push
or
and
mov
or
fcomp
(bad)
rol
and
call
fwait
sub
xchg
or
lds
jg
test
data16
and
xor
xor
jmp
mov
inc
cmp
jg
sub
fiadd
and
cmp
loopne
mov
sbb
fabs
movs
and
repz
jo
or
mov
xchg
in
xlat
jecxz
mov
mov
or
mov
push
adc
test
and
lock
js
jne
icebp
and
mov
add
popa
xchg
lahf
or
cs
imul
mov
and
adc
push
out
cmp
xlat
mov
cmp
mov
mov
xor
mov
enter
mov
jecxz
push
inc
xor
sar
mov
fsubr
xchg
add
inc
test
add
ins
xchg
popa
mov
inc
out
add
stos
xchg
mov
and
add
xchg
mov
stc
loop
and
cmp
dec
lahf
and
(bad)
xchg
push
jle
rcr
sub
es
and
test
pop
je
add
sub
push
scas
mov
js
push
cmps
icebp
adc
xor
(bad)
and
imul
cmc
cmp
mov
sub
test
pop
xor
stc
add
outs
push
push
xor
xor
aaa
inc
inc
inc
sub
retf
nop
fcomp
jmp
mov
or
in
pop
jo
rol
retf
fdivr
jns
cmp
and
mov
out
jmp
push
(bad)
cmc
loopne
inc
dec
add
mov
and
dec
xchg
sbb
pop
xchg
loopne
cmps
pop
cli
pop
jmp
call
sar
and
adc
mov
jb
rcl
xchg
ror
mov
(bad)
sbb
add
(bad)
mov
jae
xlat
ret
and
xor
pop
jb
xchg
mov
shl
ss
dec
jp
xchg
mov
xor
ret
inc
(bad)
push
mov
loope
mov
inc
xor
lds
pop
cmp
leave
mov
test
inc
push
mov
out
cmp
sub
and
shl
dec
rol
jmp
fiadd
js
lods
call
(bad)
mov
mov
mov
jb
jno
(bad)
scas
push
jg
les
data16
ss
rcl
pop
(bad)
nop
and
mov
mov
cwde
cmps
inc
jmp
jbe
inc
pushf
mov
ret
or
mov
fidiv
sbb
inc
test
mov
or
push
xor
mov
jmp
jecxz
pop
mov
xchg
jecxz
loop
popa
out
jl
inc
fnstsw
iret
mov
sub
mov
scas
div
ret
xlat
es
inc
sbb
mov
jbe
add
ja
add
mov
jo
scas
pop
jnp
rol
lea
add
aam
ret
cmp
aam
pop
rcl
ins
mov
xchg
cmp
push
pop
mov
xor
inc
loop
cmp
mov
dec
loopne
loopne
fadd
mov
adc
leave
add
sub
repnz
loopne
sti
add
(bad)
pusha
das
aam
push
xchg
pop
out
cmp
push
popa
cmc
push
and
stos
jns
enter
fld
adc
call
rcl
fnstcw
repz
inc
out
cdq
mov
ror
js
push
jnp
nop
jo
es
in
movs
jmp
(bad)
js
sti
pushf
clc
ins
add
adc
jmp
sub
add
pop
loop
retf
push
and
jle
push
pop
cs
enter
daa
adc
das
cmp
psubq
mov
(bad)
dec
cmp
push
daa
push
cmp
call
pop
push
pushf
dec
pop
jmp
gs
inc
iret
sahf
xchg
mov
das
or
sbb
xor
loopne
and
call
daa
add
fcos
adc
dec
ret
fs
ins
int3
xchg
push
ins
adc
ins
outs
(bad)
push
xchg
cmp
out
rol
fld
cmc
ja
(bad)
(bad)
jae
pop
jno
idiv
add
inc
jge
ss
jns
cmp
mov
repnz
test
imul
pushf
scas
loop
ret
test
into
jne
(bad)
aad
sbb
mov
outs
cmp
pop
pop
jne
cmp
inc
push
adc
mov
mov
and
xor
mov
xchg
sub
(bad)
mov
shl
adc
mov
xchg
sar
in
jl
add
out
and
pop
aam
(bad)
vdivss
jno
sbb
xor
lock
adc
imul
movs
mov
xor
mov
mov
dec
(bad)
ficom
sub
ror
jg
jne
(bad)
fcom
repz
leave
pop
and
and
sbb
in
push
xchg
pop
(bad)
(bad)
mov
shr
xchg
jne
push
shr
cmp
in
ins
adc
cmp
das
pop
jl
(bad)
mov
pop
dec
mov
xor
xchg
outs
ret
mov
stos
mov
das
fild
mov
pop
sbb
mov
push
pop
in
mov
add
ret
push
adc
push
mov
push
ror
jno
int3
and
imul
add
jbe
(bad)
rcl
push
sub
scas
test
xchg
pop
pushf
(bad)
rcl
bound
test
mov
(bad)
sub
jg
add
adc
and
ja
mov
adc
and
repz
loop
or
dec
test
add
repnz
add
jo
mov
mov
pop
sub
loopne
add
fnstenv
mov
hlt
add
dec
xchg
scas
pop
adc
dec
int
pop
push
aaa
jmp
sub
inc
sub
pop
xchg
xchg
pop
sub
sub
in
pop
xchg
lds
push
sub
and
lods
fnsave
mov
jle
dec
jmp
test
retf
fsubr
mov
mov
sub
sbb
repnz
cmp
mov
dec
call
loopne
adc
mov
popf
add
push
jno
mov
jg
pop
iret
sbb
jmp
sbb
ins
xor
dec
loopne
imul
repz
cs
sub
aam
test
cmp
stos
call
stos
cmp
lds
push
push
or
js
push
inc
pop
cmp
cmps
mov
movs
and
sbb
or
xor
push
mov
jp
es
shl
out
ja
fst
je
mov
mov
sbb
retf
fidivr
pop
ja
gs
mul
imul
add
test
aad
fild
arpl
ds
adc
movs
ror
cmp
icebp
mov
adc
cmps
pusha
ror
mov
neg
imul
sbb
ins
cmp
xchg
cs
sub
jae
mov
cmp
imul
es
inc
js
adc
push
in
or
jle
into
dec
inc
das
test
data16
fisub
mov
and
std
out
loopne
shl
scas
push
sti
fsub
xor
xor
push
ja
daa
or
mov
mov
setge
sbb
enter
je
sbb
sub
pop
sar
push
ins
mov
xchg
popf
(bad)
sub
cmp
or
imul
jbe
xchg
xchg
popf
lahf
cmp
std
dec
pusha
push
add
inc
rcl
cli
sbb
adc
jp
cmp
cli
je
stos
mov
pop
js
or
mov
push
(bad)
jecxz
inc
mov
cmps
shl
fist
mov
mov
mov
cmc
test
jp
jecxz
lods
adc
bound
ret
pop
inc
add
or
ins
xchg
inc
jns
xor
mov
enter
mov
dec
mov
movs
mov
std
sub
push
test
xchg
call
xor
sbb
jns
add
push
inc
retf
jae
fsubr
fwait
dec
and
cmp
xchg
xchg
(bad)
cmc
retf
scas
fcmovnbe
push
mov
loopne
in
sub
sub
(bad)
(bad)
inc
mov
clc
movs
sbb
ficom
cmp
sub
push
inc
pusha
fsubr
dec
jmp
xor
sbb
push
mov
jp
mov
loop
or
fisub
repz
xchg
int3
cmc
stos
addr16
push
xchg
jae
mov
leave
add
icebp
sbb
mov
mov
sti
ret
out
stc
ins
and
inc
push
pop
jns
pop
adc
sub
rcr
inc
adc
push
lds
ds
xchg
int
push
scas
jp
dec
cmc
mov
iret
xchg
cmp
xor
cld
lahf
test
or
xor
xor
dec
add
mov
ins
repnz
adc
push
in
inc
mov
aam
sbb
popf
inc
loopne
adc
stos
outs
inc
popa
mov
mov
mov
cli
and
leave
xchg
pop
sub
push
sahf
mov
sti
mov
stos
loop
inc
popa
pop
icebp
cmps
jbe
inc
call
cmp
cmps
mov
shr
imul
outs
call
mov
rcr
sbb
jmp
xchg
imul
outs
in
jle
(bad)
fdivr
pop
out
addr16
stos
ret
adc
lea
iret
and
add
scas
fcmovu
adc
lods
xchg
sub
adc
mov
mov
add
mov
aad
int
push
loopne
ins
stos
sysenter
sub
jae
xchg
stos
ret
xchg
adc
dec
pop
popa
daa
push
retf
sub
jmp
inc
inc
inc
jl
clc
push
xchg
mov
dec
fwait
or
dec
cmp
add
xchg
test
sub
cli
lods
xor
mov
cmp
gs
sub
pop
push
jno
out
stos
cmp
pop
movs
aam
sbb
push
cmps
sahf
xor
loop
push
xchg
xchg
sub
fsub
test
adc
test
lods
mov
adc
xor
sub
sahf
add
mov
and
lea
ret
jns
popf
add
xor
popa
(bad)
dec
pop
jl
jmp
(bad)
add
scas
jne
or
add
(bad)
(bad)
push
sbb
call
mov
and
out
xchg
xor
jns
cmp
cmp
loop
cdq
outs
pop
cld
mov
pop
sbb
push
xchg
pop
(bad)
xchg
lea
in
adc
dec
ret
sti
or
adc
nop
push
adc
inc
inc
(bad)
fistp
fsub
inc
mov
call
es
mov
mov
aaa
adc
sbb
clc
sub
mov
push
add
adc
push
(bad)
daa
xor
test
loop
xchg
and
or
push
push
dec
in
cmp
pushf
cld
mov
mul
sub
mov
pop
stos
cmps
mov
sbb
dec
loop
std
clc
dec
lock
aaa
push
cmps
pop
cmp
jns
sbb
push
push
push
lods
add
xchg
fdivr
pop
loopne
xor
cld
xor
adc
dec
add
ins
sar
(bad)
scas
sub
jmp
or
test
ret
arpl
les
jae
cmp
movs
pop
jae
imul
dec
adc
adc
xchg
ins
mov
popf
dec
pop
int3
adc
popa
xlat
mov
cmp
jge
pop
or
push
jae
aas
js
lds
nop
mov
shl
push
sti
jmp
daa
gs
xchg
(bad)
adc
push
sbb
fs
stc
imul
bound
adc
sub
cmps
in
shr
lahf
dec
test
sti
inc
jg
cmp
dec
jle
call
jl
adc
xor
xchg
out
sub
shl
ror
xor
cmps
inc
je
call
mov
add
adc
(bad)
and
cmp
adc
jge
mov
in
sbb
dec
pusha
shr
movs
pop
pop
call
lahf
mov
jle
pop
sahf
and
push
xchg
mov
sub
cmp
arpl
fwait
nop
loop
cmps
dec
test
int3
mov
and
xchg
test
jmp
dec
cmp
jae
mov
dec
cmp
adc
add
pop
dec
leave
sar
aad
add
push
push
hlt
pop
mov
jb
iret
jecxz
pop
push
fdivr
inc
xchg
sar
mov
or
outs
mov
pop
test
movs
xchg
rcl
js
stos
push
xchg
dec
popa
mov
das
stos
xor
jmp
push
xchg
add
in
test
clc
xchg
inc
stos
lds
leave
dec
mov
add
imul
adc
and
call
jns
cmp
push
loop
ja
lods
icebp
test
mov
je
and
cmp
ds
(bad)
xor
adc
push
xor
aaa
mov
pop
cpuid
int
mov
xchg
shl
fdiv
jbe
inc
(bad)
add
cvtps2pi
mov
in
jae
xchg
pop
mov
mul
fs
fnstenv
icebp
cs
push
adc
scas
shl
clc
or
jnp
js
clc
cmp
xchg
mov
adc
push
(bad)
stc
aas
mov
retf
pop
xchg
cli
loopne
xlat
imul
jbe
jmp
adc
pop
add
es
pop
sbb
xchg
dec
or
xchg
sub
ss
and
xor
add
push
push
sbb
jne
ds
call
dec
ins
cdq
cmp
inc
fadd
lock
(bad)
adc
dec
mov
call
pop
int3
les
int
xchg
xchg
fistp
(bad)
xor
cmp
jecxz
mov
pop
add
push
or
call
jno
cwde
sbb
inc
and
mov
fidiv
scas
mov
stc
cs
fidivr
mov
jbe
jb
sbb
pop
push
push
dec
fidiv
call
push
inc
pop
in
in
push
aad
xlat
jns
int
pop
idiv
add
mov
outs
pop
mov
in
popa
out
repnz
mov
pusha
pop
imul
dec
enter
fsubr
clc
mov
fnsave
inc
push
leave
mov
outs
loope
jae
jno
not
stos
mov
dec
jne
ss
mov
pop
dec
mov
pusha
outs
int3
in
mov
push
shl
mov
ret
mov
add
cmps
stos
in
dec
cmp
mov
jmp
imul
sbb
mov
jg
mov
sub
cmc
xlat
cld
ins
jb
enter
jb
fist
scas
int3
inc
js
aam
leave
lsl
push
and
outs
mov
xor
xchg
mov
or
addr16
or
ret
cdq
gs
mov
aaa
call
ins
arpl
adc
add
data16
ss
push
push
fwait
mov
aam
jbe
stos
retf
push
xlat
stos
xchg
test
dec
mov
add
mov
cmp
cwde
or
sub
out
pusha
jmp
dec
stc
xor
out
mov
ins
xchg
lods
fdivr
or
xchg
ret
ins
dec
push
adc
call
adc
icebp
loop
mov
ror
sub
out
aas
sahf
inc
push
or
rep
inc
fstp
cmp
repnz
xor
nop
inc
bound
sub
mov
pop
push
dec
jno
dec
and
xchg
xor
ins
jb
shr
mov
retf
adc
or
ss
inc
pop
nop
(bad)
mov
jbe
test
data16
jecxz
mov
scas
jo
pop
xor
repz
mov
mov
pop
cmp
popa
xchg
adc
frstor
cmp
adc
push
test
sub
push
mov
pop
not
mov
cdq
push
sub
hlt
lods
xchg
or
inc
cvtpi2ps
into
stos
inc
pop
fsub
outs
push
push
add
push
fsubr
popa
icebp
mov
push
fldcw
sbb
cmp
sbb
nop
push
in
sbb
xchg
push
inc
fs
jo
dec
(bad)
dec
xor
addr16
mov
fistp
ror
pop
outs
jg
xchg
pop
pusha
ins
cmc
ja
data16
ficomp
xor
(bad)
fdivr
fwait
adc
dec
fst
in
out
push
popf
mov
pop
lock
sub
cpuid
and
repz
(bad)
or
shr
xor
sub
outs
sbb
enter
movs
(bad)
movs
push
mov
int3
scas
scas
xchg
cmp
in
and
and
fstp
repz
sbb
ret
mov
mov
or
fucom
add
lods
lds
shl
xchg
dec
cld
in
div
jb
arpl
push
jecxz
pmaxub
popa
sub
fmul
cmc
sbb
or
pop
test
xchg
push
dec
xchg
pop
pop
ffreep
jb
sahf
adc
fistp
(bad)
push
pop
push
mov
ss
repz
xchg
mov
cmp
sub
clc
push
xchg
repnz
mov
clc
jle
(bad)
out
sbb
fs
xor
fwait
mov
jmp
in
dec
enter
outs
pop
std
xchg
mov
inc
adc
stc
cmp
or
inc
add
add
jp
movs
arpl
cmp
xchg
inc
push
loop
test
pushf
push
retf
inc
sbb
ret
ret
psrad
inc
das
pop
pop
(bad)
dec
cmp
les
movs
mov
int
jecxz
cwde
loope
xchg
sbb
cdq
dec
je
jp
test
add
ins
cdq
inc
ret
mov
shr
icebp
pop
rol
sbb
xchg
js
jno
add
jge
dec
mov
cmp
xchg
or
cmps
ins
mov
xor
sbb
mov
add
pop
scas
mov
fwait
or
rcl
push
cmp
bound
je
ins
ds
dec
fcmovu
ins
sbb
add
inc
cmp
inc
pop
jle
mov
xor
jmp
dec
stos
mov
(bad)
les
dec
lods
sar
je
xor
sbb
test
cmps
xlat
sar
dec
mov
mov
mov
fsubr
out
scas
popf
loope
push
push
lahf
test
sbb
imul
sbb
sub
xor
div
mov
inc
aaa
fstp
nop
pop
inc
xchg
in
xor
movs
and
into
inc
xchg
mov
lock
mov
leave
mov
jmp
mov
inc
in
lods
add
(bad)
test
push
mov
fiadd
stos
xor
leave
ror
in
fwait
iret
int3
inc
push
dec
xor
add
sti
add
mov
cmc
and
mov
in
cmp
jg
and
mov
cmps
dec
xor
add
cmps
add
rol
daa
cmc
lods
gs
retf
inc
mov
xlat
inc
jle
sub
retf
addr16
mov
mov
imul
add
jnp
or
rcl
cmp
push
pop
imul
add
ficomp
mov
fnstsw
mov
std
add
jbe
mov
leave
out
sbb
jmp
arpl
cmp
ffreep
aas
push
pop
ret
inc
mov
test
or
mov
jo
out
lock
clc
mov
jno
xchg
cmps
xlat
in
jnp
pop
cli
shr
in
(bad)
jle
pop
sbb
lea
or
outs
js
xor
add
hlt
lods
inc
pop
or
mov
ror
jmp
out
mov
add
cmp
int3
rcr
popw
cld
push
aas
pop
jp
and
xchg
scas
xchg
or
dec
aad
xor
push
lahf
out
mov
es
adc
cmps
pushf
inc
loope
call
inc
or
cmp
stos
aad
cmp
pop
retf
in
popf
mov
btc
mov
call
sbb
sbb
pop
pop
mov
ds
aas
call
stos
mov
mov
out
fucomi
and
push
jecxz
mov
cwde
inc
pop
pop
jmp
inc
add
mov
cmp
repz
js
dec
mov
mov
sub
(bad)
inc
fnstcw
jbe
adc
xor
push
jle
clc
cmp
arpl
loopne
adc
icebp
std
xchg
aad
xor
dec
xlat
ds
cmp
push
aaa
fistp
sahf
lods
mov
(bad)
push
jmp
mov
mov
rol
dec
cli
sub
aam
push
sar
jecxz
mul
or
adc
sub
adc
dec
sbb
movs
imul
sbb
lods
mov
and
gs
xor
and
sub
in
(bad)
push
loopne
in
sbb
jmp
iret
cld
(bad)
sbb
iret
scas
fldenv
shl
pop
ror
push
shl
adc
ret
xchg
loope
fisub
xchg
add
dec
gs
sub
xchg
movs
enter
mov
test
mov
rcl
outs
cmps
je
mov
movs
(bad)
fadd
cmps
jne
je
dec
sub
out
pop
pop
neg
jge
repnz
xlat
(bad)
or
cmps
scas
add
les
lods
xlat
mov
ins
jbe
add
popa
lods
sbb
arpl
push
or
push
jbe
add
dec
mov
xchg
jae
sahf
dec
cmp
fdivr
mov
add
push
sub
(bad)
in
enter
and
or
fcomp
scas
or
out
dec
mov
xor
int3
xchg
(bad)
loope
pop
dec
sahf
mov
xor
pop
inc
rcr
in
inc
push
add
movzx
adc
jge
xchg
int3
adc
add
cdq
fs
push
and
inc
mov
dec
adc
inc
jnp
fwait
jne
mov
data16
mov
scas
outs
test
fcmovbe
stc
lods
sub
or
dec
cmp
add
mov
cmps
adc
sbb
jo
cli
pushf
jae
cmps
(bad)
push
or
test
cs
test
xchg
call
std
test
or
retf
and
jo
push
adc
dec
jmp
bound
adc
mov
aas
jae
push
leave
sbb
repz
push
dec
jae
mov
adc
popf
hlt
xor
jo
aad
aad
in
movs
loopne
adc
test
cmp
repz
and
cld
imul
movzx
iret
or
dec
scas
ins
fs
xchg
lea
pop
icebp
pop
imul
mov
fimul
xor
and
aaa
(bad)
(bad)
sbb
and
xchg
aam
or
inc
shl
adc
xlat
sub
pop
jnp
mov
jae
or
dec
xchg
jl
icebp
jmp
pop
pop
xlat
sub
sbb
mov
and
and
jmp
add
mov
mov
dec
xor
mov
enter
addr16
mov
stos
adc
cmp
jecxz
pop
and
xchg
imul
mov
js
in
pop
nop
addr16
mov
cmp
fidivr
jo
cli
cld
sbb
sahf
xor
mov
mov
adc
and
jle
push
out
or
repnz
adc
cmp
sub
jno
retf
ins
sub
gs
pop
inc
sbb
cmp
dec
sti
and
push
sbb
(bad)
js
adc
and
dec
lahf
jo
xchg
push
xor
xchg
mov
or
lods
add
fidiv
mov
dec
aam
push
cdq
xlat
cmp
(bad)
fistp
call
mov
cld
xchg
mov
in
mov
retf
sub
ins
das
xor
outs
mov
div
mov
shr
or
xchg
aad
and
sbb
mov
jo
jnp
dec
xchg
dec
or
jnp
add
stos
sti
rol
cmp
mov
test
in
mov
sbb
mov
jno
mov
lea
sub
inc
adc
aas
mov
dec
faddp
push
push
xchg
mov
jnp
inc
push
mov
cmp
push
push
test
cmp
daa
out
mov
enter
add
and
fucomp
aas
out
in
dec
push
test
sbb
dec
mov
retf
and
aaa
cmp
stos
mov
lahf
neg
inc
jb
dec
dec
icebp
(bad)
adc
out
dec
or
jmp
aam
sub
iret
xchg
and
rcl
jl
fistp
ret
or
push
ja
add
mov
mov
out
jge
xchg
(bad)
pop
repz
dec
xor
fsubr
cmc
mov
mov
outs
pusha
pusha
out
dec
jnp
jne
jmp
push
enter
loop
mov
sbb
fcmovne
jmp
mov
inc
cdq
sbb
stc
cmp
inc
cld
xchg
fidiv
bnd
es
fdivr
test
stc
sub
add
add
ret
cli
inc
retf
das
imul
jbe
mov
fcmovnu
xor
stc
fimul
and
outs
push
call
xchg
shl
sub
sub
iret
test
mov
sbb
sahf
jmp
les
daa
dec
xchg
xor
fmul
xchg
inc
add
cdq
out
test
push
mov
jge
pop
cmps
stos
ret
fistp
pop
popa
push
iret
fsubr
push
gs
arpl
fimul
and
(bad)
ds
add
(bad)
stos
add
dec
jae
pusha
adc
mov
pop
mov
in
js
fwait
imul
hlt
inc
cmp
daa
xlat
sbb
xor
cwde
cdq
mov
sbb
shl
mov
into
add
pusha
js
addr16
xrelease
sub
dec
cmps
pop
xchg
push
sub
fstp
inc
inc
xlat
retf
jb
and
cmp
imul
mov
out
aad
std
icebp
aaa
ret
pop
push
fdiv
dec
(bad)
push
fwait
retf
adc
fincstp
aas
sub
je
pop
dec
add
cmp
je
xor
test
nop
aas
jmp
or
fld
push
dec
inc
mov
ret
mov
inc
rcl
jl
inc
retf
(bad)
mov
adc
mov
pop
clc
xlat
jno
pop
aas
cld
lds
pop
xchg
fwait
add
std
mov
xor
cmp
push
pop
dec
xor
pop
into
mov
fldcw
(bad)
pop
cmp
cmps
jns
(bad)
mov
stos
aas
push
mov
fnstenv
rol
xchg
mov
test
pop
cmp
btc
xchg
(bad)
mov
sub
scas
xchg
repnz
mov
fistp
sar
pop
call
cdq
das
lods
addr16
and
mov
outs
push
mov
not
dec
pop
pop
xchg
adc
and
lods
cmp
movs
lock
shl
inc
sub
jl
xchg
sub
xchg
aam
mov
(bad)
xchg
mov
push
(bad)
out
xchg
jl
clc
(bad)
xor
ins
push
xor
mov
out
cmps
push
stc
mov
mov
xor
and
call
push
sub
gs
pop
outs
popa
or
dec
and
or
dec
jnp
cmp
xchg
jb
cdq
pop
mov
std
push
fs
mov
mov
or
mov
or
loopne
or
pop
inc
adc
mov
jg
jae
rol
or
xchg
(bad)
loope
dec
scas
adc
cmc
test
sti
pop
adc
lods
das
into
outs
in
xlat
add
xchg
inc
and
xchg
adc
mov
loope
mov
xchg
dec
push
mov
mov
push
mov
dec
inc
out
sbb
jnp
inc
inc
jle
sub
shl
inc
lock
jmp
data16
out
cli
mov
cli
push
test
retf
adc
jbe
mov
add
stos
enter
xchg
jbe
stos
jge
add
inc
lea
cmp
or
fiadd
pop
aas
xchg
in
xchg
xchg
fstp
mov
in
adc
dec
mov
int3
setae
ja
cmc
sbb
dec
(bad)
dec
mov
aas
or
xor
(bad)
jle
push
inc
add
add
out
inc
sub
jnp
dec
cmps
dec
lods
js
sub
(bad)
mov
mov
cmp
and
or
jo
bound
ins
ret
into
pop
jb
dec
pop
sbb
xchg
int
cmps
inc
rcl
bnd
call
mov
sbb
adc
leave
pop
and
idiv
js
fdivr
xchg
fs
popa
pusha
aaa
push
adc
(bad)
inc
fst
(bad)
mov
cmp
or
mov
and
add
call
or
pop
fwait
(bad)
adc
ds
sbb
pop
mov
aad
or
mov
push
test
lods
mov
lahf
movs
xor
xor
stos
je
and
fisttp
js
and
lods
jbe
and
jp
leave
test
jmp
scas
pop
cmc
xchg
cld
loop
jnp
gs
jbe
mov
pop
stc
rcl
std
jge
pop
mov
mov
or
mov
pop
enter
enter
int
sbb
mov
or
enter
ficom
dec
pop
mov
inc
lods
add
adc
scas
push
imul
enter
dec
test
das
mov
movs
mov
pop
ret
into
and
inc
aad
outs
loope
push
call
jl
sahf
add
sub
xor
lahf
sub
dec
adc
mov
icebp
sahf
cdq
out
mov
ds
rcl
mov
xchg
mov
lock
loop
outs
cmc
push
rcl
fistp
push
inc
adc
xor
mov
daa
bound
mov
sar
xor
ret
test
js
mov
push
xor
pop
les
fisubr
jmp
cmps
dec
pop
mov
gs
cmp
je
mov
and
xor
or
cdq
cld
iret
push
out
sahf
rol
ss
xchg
shr
or
xor
int3
in
push
sub
push
push
lahf
sbb
push
scas
mov
xchg
dec
push
ret
aaa
push
pop
add
push
jl
xchg
fiadd
add
xor
aad
shl
xor
ss
(bad)
mov
inc
mov
push
xlat
pusha
sub
in
xchg
inc
and
sbb
xchg
push
js
push
xchg
lods
dec
call
inc
dec
dec
mov
das
sbb
mov
leave
cmc
pusha
dec
cmps
xlat
idiv
icebp
sbb
stos
pushf
mov
push
jecxz
sub
mov
leave
lds
(bad)
neg
push
addr16
add
pop
sbb
shl
arpl
cld
ja
cmc
mov
in
ds
or
fisubr
scas
sub
jmp
cli
clc
(bad)
fisub
cld
or
xchg
pusha
daa
ret
das
cdq
xor
stos
push
add
sbb
(bad)
xor
test
out
mov
aam
or
jl
jmp
add
add
push
xchg
ds
mov
xchg
cmps
retf
(bad)
jle
out
lods
fdiv
inc
(bad)
xchg
xchg
pop
xchg
inc
int
(bad)
xor
daa
aaa
ins
and
dec
mov
gs
je
jp
xchg
mov
mov
jmp
movs
lock
mov
inc
loopne
shr
jns
sbb
sub
into
sub
rcpps
xchg
ret
in
jo
and
xchg
jo
sbb
ret
pop
lods
out
push
out
daa
xchg
aam
push
icebp
hlt
jae
pushf
cmps
jle
ret
adc
xor
loope
popf
mov
fs
retf
cli
rol
fsubr
aaa
or
xchg
xchg
pop
mov
sbb
nop
int3
shr
add
adc
mov
call
xor
and
cli
dec
cmps
idiv
js
imul
mov
loopne
jo
xchg
mov
adc
mov
out
cmp
or
or
in
imul
ret
mov
and
push
mov
fwait
pop
dec
pushf
xchg
(bad)
shl
shr
dec
and
ins
dec
cmps
or
cmc
ins
xor
cmp
xor
ret
or
xchg
js
scas
xchg
stc
mov
pop
ret
add
pop
inc
adc
or
sub
push
adc
icebp
or
stos
push
dec
pop
mov
sbb
dec
mov
hlt
sbb
mov
out
adc
ret
jp
in
inc
inc
add
xchg
xor
sbb
jmp
sbb
inc
(bad)
sub
or
sub
pop
(bad)
int
jnp
int3
or
xchg
jmp
mov
pusha
les
loopne
or
(bad)
push
jmp
xor
mov
xor
inc
cwde
(bad)
jp
fist
je
test
jo
mov
jb
push
test
mov
test
repz
sbb
or
mov
jno
(bad)
xor
xchg
or
nop
or
ror
(bad)
push
adc
mov
push
xchg
jb
push
pop
adc
xor
push
push
or
cwde
cmp
mov
sub
pop
rcr
test
xchg
mov
dec
js
pop
cmp
call
(bad)
enter
jmp
ja
or
sub
xchg
out
addr16
xchg
cmps
outs
xor
popa
movs
mov
dec
sub
lods
dec
sbb
call
cdq
jne
pop
sub
outs
dec
stos
icebp
xchg
mov
add
pop
shl
jno
jno
pop
push
mov
imul
jnp
xchg
popa
popa
inc
mov
dec
std
xor
in
xchg
mov
or
mov
fistp
mov
and
mov
inc
mov
int3
or
xor
lock
aam
das
or
aad
loopne
push
fnstcw
push
jge
sub
mov
push
mov
mov
cmc
cmp
imul
cmps
dec
mov
xor
sub
jmp
fdivr
in
imul
xor
mov
aam
clc
add
cdq
lahf
out
hlt
mov
sti
jbe
adc
test
jo
lock
ss
pop
(bad)
and
fstp
mov
mov
mov
rcr
sbb
cmps
push
push
dec
push
push
mov
add
pop
push
and
adc
int3
and
xor
pop
imul
sub
or
shr
fdivr
xchg
jmp
ret
inc
bound
sar
add
xchg
add
push
jge
into
cmps
xchg
add
fst
loope
add
push
push
inc
mov
or
cmp
jecxz
in
js
inc
inc
mov
mov
mov
(bad)
or
push
fnsave
nop
imul
test
(bad)
mov
sbb
sub
call
and
or
sub
es
add
sub
mov
fisttp
loope
mov
jge
push
scas
sti
adc
mov
div
jnp
push
sub
or
leave
sbb
test
pusha
mov
xor
mov
xlat
xadd
and
arpl
cmp
dec
and
lods
push
sbb
lds
or
push
stos
std
jmp
ss
lock
scas
(bad)
popf
mov
jo
lods
shl
pusha
std
mov
call
sub
dec
movs
pop
cmp
pop
push
jnp
hlt
inc
mov
lock
sub
jnp
in
movs
jecxz
ror
(bad)
out
sub
jo
pop
mov
jb
dec
scas
mov
enter
add
clc
sub
scas
push
sbb
xchg
(bad)
mov
ret
cld
adc
xor
test
add
push
shl
repnz
ins
aaa
out
xchg
ror
mov
daa
aaa
push
call
leave
mov
das
sbb
(bad)
outs
mov
sub
rol
mov
dec
out
out
or
stc
push
dec
mov
adc
addr16
aas
mov
pop
shr
jnp
dec
into
cs
and
mov
dec
clc
test
push
jl
sbb
stos
jo
icebp
fwait
sbb
out
fsubr
jle
in
(bad)
mov
repnz
mov
mul
mov
mov
cmp
arpl
xchg
ss
test
call
mov
jb
mov
adc
pop
xchg
ins
scas
gs
jns
jmp
sqrtps
sar
mov
(bad)
jg
test
dec
jl
mov
xchg
aaa
mov
lods
(bad)
lock
cmp
cs
xor
es
ja
(bad)
outs
adc
jp
movs
bound
call
sub
ficomp
push
ins
inc
pop
fild
push
jmp
mov
sbb
imul
and
jecxz
sbb
push
push
lods
loope
inc
or
dec
sub
call
mov
das
mov
pop
adc
sar
xrelease
xchg
cmp
imul
sub
or
ins
out
inc
call
loopne
sub
ins
mov
daa
push
into
out
xchg
std
mov
xor
(bad)
mov
imul
scas
jo
daa
test
in
jg
lods
jbe
popf
or
test
aad
xchg
ret
cmp
test
xor
and
adc
imul
movs
or
jp
aaa
push
pushf
mov
sub
jmp
inc
inc
outs
sub
ins
stc
out
sub
in
or
adc
mov
retf
outs
push
dec
loop
stos
mov
mov
push
jns
jbe
outs
js
mov
scas
ror
mov
mov
xor
dec
push
pop
fwait
sub
es
jl
repz
sbb
pop
ins
cmp
adc
cmp
sbb
hlt
lds
add
loop
jecxz
pusha
mov
pop
or
cdq
xchg
add
jge
add
sbb
jo
or
outs
jl
fwait
aad
stc
jbe
mov
push
les
adc
stos
jb
cs
mov
add
xchg
xor
(bad)
mov
aam
(bad)
xstore-rng
cmps
inc
sub
fld
mov
xchg
popa
arpl
stc
cmc
lea
mov
in
retf
std
cmp
mov
fcmovnbe
xlat
jp
das
sahf
cmp
mov
popf
dec
stos
push
aas
stos
xchg
ins
neg
and
adc
test
jg
inc
movs
lods
push
scas
cs
retf
cwde
stc
js
(bad)
xlat
popa
das
jmp
ins
mov
sbb
sub
pop
xchg
call
clc
neg
popf
imul
popf
mov
daa
pusha
mov
cmps
sub
aaa
sub
inc
mov
push
push
push
xor
push
dec
jge
and
jb
sbb
mov
adc
xor
loop
lock
xchg
jp
sbb
into
iret
adc
sbb
mov
sti
pop
mov
mov
stos
jno
dec
jecxz
int
cdq
xor
in
push
mov
xchg
push
das
mov
fwait
add
(bad)
jle
inc
pop
mov
lds
mov
mov
xchg
cli
sbb
out
inc
test
add
and
lock
dec
cmp
push
mov
jmp
sbb
xchg
inc
fstp
xchg
dec
sub
sbb
or
(bad)
sbb
retf
outs
sti
cs
stc
pop
out
cmps
jo
xor
shl
pop
fwait
sub
test
aaa
scas
out
rcl
inc
enter
popf
push
mov
ins
mov
pop
add
test
pop
imul
sub
inc
es
jmp
ss
in
inc
in
mov
xlat
xchg
mov
lahf
adc
add
mov
sbb
and
sbb
mov
ror
arpl
adc
push
je
lods
cmp
dec
xchg
sub
(bad)
mov
mov
test
and
jbe
xlat
(bad)
test
and
or
and
mov
lods
xchg
pop
pop
call
add
js
jg
out
imul
(bad)
popa
lods
aad
repz
push
sub
inc
and
ins
rcr
mov
and
pushf
test
mov
add
push
outs
imul
and
movs
(bad)
sbb
iret
push
mov
popf
and
inc
std
add
add
jbe
xor
xchg
shl
into
inc
adc
das
js
fisub
xchg
xor
adc
fadd
sbb
push
and
jge
and
jmp
lods
fwait
xor
dec
mov
js
je
test
xor
jmp
pop
(bad)
es
lods
fcomp
pop
adc
clc
mov
pop
loope
cmp
sti
mov
lds
aam
enter
mov
add
push
inc
cmc
inc
je
es
ja
inc
cmp
add
repz
mov
push
popa
cmp
xor
cld
adc
sub
inc
cmps
mov
in
sbb
or
pop
pop
fsubr
mov
jns
(bad)
nop
push
inc
(bad)
shl
shl
jmp
test
es
fstp
repnz
jge
sub
sub
fidivr
lock
and
xchg
cmp
call
jl
sti
bound
enter
(bad)
jmp
scas
inc
aad
pop
fsub
or
push
lock
clc
jb
out
repnz
shl
jecxz
fstp
rcl
dec
aaa
cmp
jb
fucom
adc
test
(bad)
bound
nop
xor
add
jnp
and
and
clc
inc
fmul
inc
xchg
pop
mov
mov
jae
in
aam
jns
cmp
inc
addr16
xor
pushf
retf
and
inc
lahf
bound
pusha
test
mov
outs
add
(bad)
push
test
pop
jl
lods
mov
ins
repz
jns
dec
mov
retf
jmp
push
js
aaa
push
inc
ret
jbe
mov
lods
aam
pop
test
clc
mov
push
pop
sub
mov
jmp
cli
jns
popa
push
ins
xchg
push
mov
mov
out
adc
or
xlat
(bad)
in
sub
ds
neg
ss
dec
ss
lock
cmp
and
daa
dec
sar
mov
iret
and
cmps
and
sbb
retf
mov
or
test
das
inc
ins
lods
inc
jmp
div
xchg
push
fld
movs
in
lds
inc
jecxz
cli
fwait
imul
add
and
push
ins
cmp
pusha
jnp
js
(bad)
cmp
xlat
inc
fdivr
fdivr
adc
push
not
jl
xor
sahf
ins
test
mov
rcl
or
inc
xchg
push
pop
ja
test
jg
jmp
(bad)
out
cmps
adc
and
add
mov
or
mov
jbe
push
cli
cld
dec
mov
jmp
or
mov
pusha
jecxz
inc
dec
sub
dec
add
iret
or
push
nop
sub
stc
and
push
dec
xor
bound
mov
add
movs
stos
xchg
dec
cmp
lea
mov
dec
cmp
(bad)
mov
call
cmps
out
sbb
sar
(bad)
dec
or
fisubr
fistp
cs
daa
cmps
sbb
cmc
xor
sub
inc
mov
push
sub
pop
adc
fisub
lea
mov
mov
mov
sbb
lock
pop
in
call
add
mov
or
in
mov
neg
cmp
movs
cmc
jl
call
into
neg
xchg
hlt
clc
mov
push
enter
lods
jno
jl
(bad)
shl
sub
pop
add
cwde
(bad)
pop
loopne
retf
das
xor
cmp
sbb
mov
sub
mov
ror
cmp
pusha
(bad)
mov
je
popa
cli
ret
dec
pop
xchg
clc
nop
pushf
inc
pusha
(bad)
push
(bad)
jbe
call
fcomp
dec
inc
jp
inc
test
sbb
and
push
clc
loope
daa
out
(bad)
sub
mov
add
imul
(bad)
or
and
inc
add
fimul
jne
enter
int3
xchg
or
cmps
add
mov
jecxz
mov
xor
int3
test
mov
jns
in
mov
and
add
mov
repnz
mov
push
jns
nop
adc
mov
ins
sbb
jnp
ret
loopne
imul
mov
lods
adc
mov
(bad)
das
fidivr
mov
dec
repz
fwait
imul
pop
ja
arpl
jle
or
test
mov
outs
cs
scas
in
jno
adc
mov
out
xor
sbb
fnsave
aam
sub
shl
jo
retf
xchg
call
movs
es
div
es
loop
inc
sbb
or
mov
sub
adc
jae
xchg
in
pop
sbb
sbb
mov
test
outs
je
pop
xor
sub
retf
sahf
and
mov
imul
mov
jl
and
adc
dec
and
cmp
jae
and
dec
jle
add
and
jnp
and
or
call
mov
lods
gs
pop
pop
mov
popf
retf
sub
into
sub
push
aaa
in
mov
sub
pop
in
or
or
mov
ins
fs
bound
aaa
(bad)
and
jne
add
imul
fimul
loop
inc
(bad)
xchg
adc
fmul
add
sub
repz
jmp
inc
lea
ror
jne
or
mov
xchg
sahf
pop
mov
int
and
add
sbb
and
mov
xor
add
sub
mov
icebp
sub
pusha
and
sbb
pop
sbb
cld
mov
pop
and
std
loop
add
idiv
clc
icebp
push
xchg
popa
ret
or
mov
push
loopne
mov
movs
fild
jnp
loope
int
aad
inc
popa
xor
enter
sub
xchg
cmp
push
cs
xlat
jo
push
and
adc
jmp
shl
push
repnz
(bad)
mov
and
jecxz
mov
neg
(bad)
mov
inc
sub
scas
pop
push
sbb
sub
fdivr
leave
add
loopne
xlat
jp
xchg
mov
fiadd
sub
fwait
scas
mov
fistp
gs
mov
jl
xor
in
push
sub
aas
sbb
mov
aad
out
retf
xor
fmul
stos
dec
loope
mov
sbb
inc
test
outs
mov
test
xor
cld
sbb
jmp
outs
xlat
aaa
int
pop
iret
fsub
je
in
shl
inc
loopne
loopne
xchg
sbb
(bad)
and
hlt
aam
jne
push
jmp
daa
loop
hlt
cmp
mov
add
leave
add
lds
dec
push
cmp
scas
iret
mov
ss
std
retf
ins
cmp
jle
cli
nop
pop
fwait
repz
jnp
arpl
gs
jmp
imul
cmp
pop
cdq
pop
jmp
imul
ror
sub
xchg
and
fistp
adc
xchg
dec
fldcw
lea
sbb
clc
mov
je
or
sahf
fisttp
jl
cmp
in
cli
inc
jge
sub
mov
sub
dec
bound
into
les
add
ss
push
and
loopne
jmp
push
sub
lds
xor
pop
shl
and
sbb
mov
push
(bad)
dec
dec
cmp
xchg
xor
pop
jl
xor
mov
test
pop
or
lods
ja
pushf
mov
dec
adc
into
lods
loop
push
(bad)
aaa
loop
test
call
ins
outs
fbstp
pop
inc
(bad)
mov
in
out
dec
rol
mov
rol
sub
retf
mov
push
and
outs
cdq
xchg
rcr
jmp
int3
xchg
test
sub
loopne
retf
push
mov
pop
dec
test
imul
and
xchg
jecxz
rcr
cmp
xor
(bad)
lods
push
lods
int3
push
xchg
in
es
mul
mov
mov
out
cmp
jne
call
dec
call
js
dec
shr
xchg
fisttp
imul
jno
dec
fbld
push
int
jae
inc
(bad)
gs
cmc
sub
(bad)
ficomp
mov
and
enter
xor
add
neg
lahf
adc
adc
xchg
cmp
pop
nop
mov
pop
jle
xor
int
push
inc
inc
adc
push
or
mov
icebp
(bad)
lock
int
ror
cmp
in
pusha
fisub
pop
and
push
cli
push
jbe
push
xchg
mov
fidivr
retf
lods
loop
ins
push
or
pop
sub
call
enter
and
xor
mov
push
adc
inc
pushf
jae
fs
loop
pop
pop
jne
fidiv
cdq
xchg
push
cmp
sbb
xchg
aam
fcomp
cld
mov
mov
ins
cmps
and
cwde
push
ins
popf
and
pop
je
dec
call
daa
jmp
in
outs
xor
(bad)
dec
stos
jbe
pop
add
inc
mov
int3
xchg
rcl
cmp
adc
fldcw
imul
dec
mov
fsub
cmp
jge
mov
hlt
cli
push
xchg
retf
inc
aas
cwde
mov
jmp
mov
ja
inc
iret
or
jo
in
inc
mov
mov
fstp
jbe
ret
js
mov
xor
inc
inc
adc
and
enter
pushf
xchg
push
sub
stos
and
jnp
cmp
(bad)
test
jno
push
outs
iret
lds
(bad)
sbb
mov
cmc
movs
or
fisubr
pop
xchg
mov
mov
popf
xchg
movzx
call
sar
cmp
jnp
rcl
dec
mov
sub
dec
mov
arpl
mov
and
mov
ss
ja
inc
into
imul
es
pop
sub
add
pop
fistp
out
fisttp
rcl
or
clc
mov
fcom
outs
or
dec
retf
jl
push
fsub
movs
push
repz
(bad)
shl
pusha
add
lods
cmp
and
rcl
pop
in
pop
xchg
sbb
call
dec
xlat
call
adc
xor
jae
mov
or
jne
xor
push
int
cdq
lods
movs
je
int3
mov
inc
mov
jl
or
outs
mov
xchg
bound
fldcw
pop
in
dec
mov
add
xchg
out
jb
jnp
xor
gs
jnp
pushf
lods
pop
adc
das
in
mov
mov
into
xchg
mov
pushw
jae
aam
in
jg
or
into
addr16
les
mov
jmp
call
out
adc
pop
adc
xlat
cmp
cmp
xchg
call
mov
outs
mov
sbb
stos
sbb
fisttp
add
mov
pop
ss
xchg
cmc
ficom
or
or
popa
mov
push
popa
sub
xor
xchg
xor
mov
fdivrp
xlat
or
push
push
cmp
xchg
test
mov
out
adc
jnp
cdq
dec
dec
cmp
mov
and
jae
push
lods
pop
dec
and
sub
adc
xlat
mov
ins
or
mov
jne
cmps
cmp
push
sbb
xchg
icebp
loop
ins
ret
adc
add
ds
inc
je
push
dec
adc
cmp
add
in
out
mov
mov
pop
mov
jne
jns
pusha
lea
mov
or
dec
sbb
lahf
cmps
dec
mov
loopne
xchg
outs
mov
sar
nop
hlt
inc
xchg
sub
ss
dec
out
aas
test
outs
mov
push
and
sahf
ret
stos
js
xor
pop
ret
enter
add
rol
es
add
dec
add
jmp
mov
cmp
ins
sub
(bad)
cmp
mov
xchg
mov
call
sbb
jmp
xchg
or
mov
stos
pop
das
pop
nop
xchg
mov
jmp
sbb
sub
(bad)
mov
ds
(bad)
aam
aam
ds
jns
sbb
cmp
add
adc
sahf
mov
xchg
push
inc
pop
sti
sub
int
loope
aam
push
int3
daa
lods
lds
stc
add
xchg
sub
push
inc
pop
(bad)
(bad)
repz
dec
imul
xchg
test
icebp
hlt
(bad)
mov
adc
cli
nop
shr
aad
mov
ins
cld
jmp
push
aam
ins
mov
pop
enter
dec
std
hlt
jbe
xor
std
push
fidiv
and
mov
rcr
outs
ja
call
sahf
mov
and
jge
mov
add
sbb
mov
xchg
das
push
test
sub
dec
cmp
ds
leave
pop
sbb
in
cs
sub
lods
dec
lea
nop
sub
inc
loop
mov
adc
ja
and
push
sbb
adc
pop
sbb
fnstenv
out
mov
and
dec
mov
mov
or
sahf
mov
mov
mov
inc
adc
call
sar
adc
mov
rcl
pop
(bad)
adc
cmp
and
movs
cmp
div
mov
sbb
dec
aas
push
nop
fwait
sbb
add
bnd
pop
fild
mov
sbb
mov
pop
rcl
cwd
jne
and
mov
sbb
test
sub
xor
add
fidiv
fnstsw
jmp
dec
adc
push
fprem
test
ret
lock
cmp
test
xchg
cmps
cmps
sub
and
scas
add
mov
ret
in
xor
xor
xchg
inc
pop
xchg
in
xor
lea
dec
out
retf
jl
push
in
lods
icebp
or
dec
clc
fld
xchg
xchg
mov
aam
pop
int
fbstp
fs
jae
xchg
adc
xor
mov
adc
xlat
sub
mov
cmc
mov
iret
dec
jbe
inc
ret
jmp
jae
jl
pop
dec
jns
push
das
jecxz
sbb
fdivrp
jns
adc
fimul
ja
loope
push
dec
sub
hlt
sub
sub
adc
push
mov
scas
aam
lea
fcmovb
add
xchg
test
ja
imul
mov
dec
and
mov
xor
(bad)
cmps
rol
dec
stc
adc
loopne
or
fdivr
jb
into
ja
xchg
push
jl
mov
cs
sub
(bad)
sti
add
xchg
stos
les
cmc
fstp
stos
test
pusha
lods
add
rol
add
jns
out
push
mov
test
cmp
das
aam
jo
cdq
push
pop
sbb
imul
mov
cmp
pop
jecxz
inc
in
and
ror
js
in
pop
adc
mov
js
shr
inc
shr
lds
xor
iret
out
pop
xchg
ja
into
(bad)
fisttp
add
cwde
lods
cld
push
repnz
stos
(bad)
in
leave
mov
aam
and
call
fcomp
push
ror
mov
and
aad
ds
xor
outs
cli
adc
jl
(bad)
aad
gs
repz
fnsave
repnz
jae
inc
jns
and
sub
or
(bad)
mov
movs
add
dec
mov
xlat
rol
mov
out
rcl
ja
mov
or
lods
xchg
(bad)
adc
lock
cmp
inc
xchg
inc
cdq
pop
inc
cmp
in
xchg
push
sbb
lea
xchg
cmp
inc
inc
mov
pop
hlt
imul
jge
ins
add
sub
mov
mov
in
outs
dec
mov
add
stos
push
ds
ror
mov
repnz
pop
aaa
jne
aas
or
xor
adc
shl
sbb
or
scas
inc
mov
imul
ss
sbb
imul
daa
xlat
xor
mul
in
inc
cwde
push
jmp
pop
gs
xor
call
nop
push
mov
in
pop
mov
fsubr
cmc
push
in
and
inc
cs
cmp
mov
dec
lahf
shr
popf
mov
sbb
xor
xchg
call
xor
mov
pop
push
sub
outs
mov
xchg
and
ret
adc
jecxz
cmps
adc
fmul
cmp
hlt
xchg
enter
dec
aas
xor
xchg
push
sub
addr16
or
inc
pop
adc
pop
hlt
test
sub
fs
xlat
rcl
jo
pop
rol
addr16
bound
retf
int3
and
xchg
inc
stc
mov
(bad)
cwde
test
retf
push
or
es
sysret
and
lds
push
es
dec
retf
test
push
fnstenv
nop
pop
pushf
in
cmp
dec
test
xor
mov
ja
xor
jle
(bad)
stc
adc
sti
dec
shl
sti
inc
push
cli
cs
inc
fwait
test
arpl
or
or
push
shl
pop
ins
mov
inc
or
aaa
out
stos
test
pop
mov
mov
sub
mov
inc
mov
fs
push
je
push
fnstsw
(bad)
repz
add
push
stos
dec
das
xor
fdivrp
(bad)
and
aad
icebp
xchg
aad
adc
int
(bad)
retf
push
lods
ss
jb
ret
cmps
icebp
imul
cli
mov
sbb
sbb
sbb
push
adc
or
and
mov
sbb
fnsave
mov
push
push
pop
add
out
jb
cld
cmova
jne
inc
gs
push
out
mov
ja
inc
retf
arpl
or
or
dec
add
clc
lods
sti
call
xchg
push
mov
loope
mov
aam
adc
std
pusha
add
dec
xchg
and
adc
imul
cmp
arpl
or
pushf
icebp
cmp
fistp
push
sti
pop
xchg
stos
cmp
cmc
bound
push
out
into
rol
mov
in
imul
and
fisub
fnstsw
cmps
push
mov
xchg
jge
ins
lea
cld
aad
popa
push
mov
add
sub
adc
xchg
cli
ds
frstor
cmp
cmp
les
into
fst
outs
cmp
enter
jno
inc
outs
jmp
mov
js
aam
cmps
mov
mov
test
jns
xor
ss
and
movs
lods
dec
add
mov
movs
aam
cmp
xchg
jno
mul
xlat
imul
push
cs
(bad)
fidivr
jg
mov
jecxz
jl
icebp
jle
lock
and
push
jbe
xchg
pusha
ins
jmp
xchg
shl
call
in
or
hlt
cs
aaa
push
pop
popf
fimul
imul
pop
pop
mov
(bad)
jle
jb
ins
push
repnz
inc
ss
mov
push
xchg
pop
jno
xor
fsub
adc
jp
popa
mov
pop
mov
or
dec
and
aaa
push
mov
ret
sub
outs
xor
hlt
loop
ficomp
mov
cwde
mov
fs
sbb
inc
mov
or
jecxz
pop
cdq
push
mov
push
popf
test
adc
lods
jbe
ret
lock
loopne
lods
push
jbe
mov
(bad)
int
mov
shr
or
repz
loopne
jl
fcomp
outs
mov
rcr
sbb
aam
adc
or
outs
xlat
fwait
idiv
push
lods
mov
push
iret
ret
lods
mov
pop
pop
jns
(bad)
loope
jnp
jg
mov
jl
mov
inc
mov
jg
call
lahf
mov
xchg
jae
cmc
dec
mov
outs
in
(bad)
fisubr
cmps
sub
aad
es
jmp
xchg
adc
and
or
enter
mov
cld
mov
neg
je
iret
movs
outs
out
cwde
das
add
test
cmp
je
(bad)
jmp
nop
or
and
push
xlat
pop
xchg
xchg
xchg
pop
retf
outs
inc
in
enter
sub
and
mov
xchg
mov
mov
out
and
jnp
stos
jmp
inc
out
mov
push
ins
repz
inc
test
lock
sub
inc
mov
jb
mov
add
push
jnp
pop
or
sbb
(bad)
mov
cli
mov
pop
pusha
fdivr
pop
into
or
xlat
jne
rol
mov
inc
jmp
scas
sub
out
push
cmp
or
scas
out
mov
repnz
ret
out
cmp
addr16
sahf
in
jbe
jle
test
(bad)
and
pop
pop
sub
repz
aam
and
jbe
push
dec
sar
mul
movs
jmp
in
popa
cwde
jecxz
mov
jp
mov
ss
fcom
cld
loopne
shl
aaa
out
ins
out
leave
inc
sbb
sub
in
loopne
mov
(bad)
mov
jmp
jge
push
mov
loop
pop
sbb
mov
es
out
jp
in
mov
xchg
popa
jnp
loop
shl
mov
push
call
cmp
ja
mov
imul
adc
mov
mov
shr
clc
lahf
scas
sbb
mov
out
mov
test
push
data16
lods
mov
add
mov
cwde
push
push
xor
outs
call
jo
cwde
cmp
mov
nop
out
pushf
nop
sub
pop
push
mov
sti
mov
sar
(bad)
icebp
ss
xchg
jge
jns
xor
cli
adc
add
xchg
mov
adc
cmp
hlt
cmp
cmp
aad
fs
ret
mov
rol
aas
loop
loopne
mov
mov
lods
xchg
pop
mov
lahf
out
xchg
adc
mov
mov
pop
retf
shl
sti
test
xchg
inc
dec
fcmovb
and
cs
pushf
cmp
add
inc
add
lock
pusha
cmp
push
mov
lahf
xor
mov
(bad)
xchg
ds
cdq
xor
ret
jecxz
in
sbb
lods
mov
pop
add
dec
(bad)
ins
push
ss
sbb
push
rol
push
sub
call
sub
mov
jns
jmp
cmp
jmp
ret
ficom
mov
dec
mov
jno
mov
cld
xchg
xchg
dec
sbb
mov
shl
sahf
jns
push
enter
xchg
aam
mov
sub
push
jmp
mov
pop
call
repz
ret
adc
test
xchg
in
sub
mov
in
outs
xchg
inc
fmul
es
and
mov
adc
dec
clc
mov
xchg
(bad)
dec
sub
movs
(bad)
hlt
xchg
aad
pop
cmp
and
aas
cmp
lods
jae
je
inc
adc
push
add
add
dec
push
adc
aaa
cwde
sbb
xlat
in
stos
out
inc
cdq
push
xchg
sbb
dec
inc
fucomi
dec
das
push
lock
aam
iret
add
mov
(bad)
xor
dec
(bad)
cli
mov
je
scas
test
shl
ja
test
cdq
scas
push
das
push
test
dec
mov
or
mov
inc
std
jp
cmp
jns
fnstsw
ins
in
push
repz
cmps
mov
and
and
outs
push
les
ror
jbe
inc
ror
pop
adc
stos
rcr
data16
add
inc
pop
xchg
std
xor
cmp
jne
in
mov
pop
les
cmps
adc
addr16
xor
ror
fist
call
sub
cmp
retf
test
mov
gs
fcomp
xchg
mov
imul
out
pusha
adc
inc
loopne
retf
out
mov
cmp
or
aam
icebp
mov
mov
and
in
hlt
or
retf
mov
mov
mov
inc
fist
xchg
jne
push
pop
xlat
ret
retf
push
adc
xor
(bad)
cmc
popf
das
test
fcomp
and
push
xchg
fist
sub
sub
aam
jmp
hlt
mov
cmc
push
dec
(bad)
sub
(bad)
mov
cmp
fisub
pop
ja
inc
mov
push
lock
and
adc
stos
and
dec
mov
out
call
ds
sahf
jecxz
je
fistp
sub
fisttp
mov
xchg
sti
xchg
fstp
pop
pop
int
add
fdiv
push
adc
lahf
add
sbb
dec
into
and
fisubr
imul
lds
sbb
pop
call
jb
mov
pop
test
icebp
jp
push
(bad)
mov
inc
pop
outs
xchg
jns
gs
jne
jmp
(bad)
fbld
xor
(bad)
mov
in
push
mov
je
jecxz
and
ret
inc
sbb
inc
in
pusha
push
int3
addr16
sub
pop
ss
push
jecxz
or
(bad)
test
fdivr
dec
inc
lods
movs
sahf
rol
pop
mov
and
scas
in
enter
loopne
out
and
pop
cmp
mov
jne
call
cmp
dec
repnz
stos
loope
sub
mov
lock
fldenv
jecxz
out
jg
jno
int
mov
and
add
pop
fs
loopne
in
sbb
pop
dec
adc
add
lea
jns
and
push
(bad)
adc
mov
daa
cmp
jg
retf
loope
dec
add
fdivr
in
repnz
call
push
push
sub
push
xchg
or
imul
loope
sbb
xchg
cmp
jae
jne
add
rcr
adc
out
enter
pop
outs
ss
mov
lods
gs
push
mov
inc
or
cmps
add
imul
and
aaa
push
adc
mov
add
lahf
mov
jmp
jecxz
test
mov
pop
xchg
fdivr
(bad)
(bad)
jmp
xchg
jge
sbb
pop
mov
loop
gs
shr
cs
or
add
mov
imul
stc
test
mov
loope
addr16
(bad)
int
xchg
pop
pop
xchg
jmp
mov
sbb
in
rcr
xor
cli
and
push
idiv
cmps
jo
add
ss
imul
mov
movs
les
popf
dec
lods
push
test
xor
test
sahf
and
hlt
sbb
push
xor
jl
test
sti
inc
pop
mov
dec
retfw
shl
push
and
out
push
jge
dec
add
adc
adc
aad
add
or
aaa
cmps
add
xor
cdq
jmp
xor
xor
xchg
in
dec
sub
aam
leave
cmp
push
ins
sete
xlat
xor
mov
jmp
or
aad
daa
xchg
aas
pop
call
mov
test
mov
fsubr
test
xlat
pusha
jecxz
and
addr16
push
inc
pop
mov
(bad)
in
imul
sub
push
fmul
and
ret
fnstenv
add
fisub
rol
mov
xor
jmp
rcl
imul
mov
and
mov
sub
push
cmp
dec
rcl
mov
(bad)
xlat
nop
arpl
dec
dec
call
xchg
sbb
pop
out
lds
std
outs
adc
pop
adc
pop
sbb
cmp
and
lea
sbb
sbb
out
sbb
xor
xor
mov
add
test
mov
sbb
push
ret
xor
lea
fisub
shr
retf
lods
sub
(bad)
jg
sti
and
int
xor
cdq
cmp
xor
stc
and
cld
movs
hlt
dec
je
dec
into
sbb
dec
test
sub
mov
or
dec
push
sar
push
dec
js
jb
shr
popf
(bad)
call
gs
pop
ins
adc
outs
dec
(bad)
fs
xchg
data16
in
enter
jnp
sub
adc
sbb
xor
clc
mov
mov
out
(bad)
xor
out
dec
xchg
popf
xchg
xor
jnp
mov
retf
jne
aad
retf
xor
popf
mov
leave
inc
fisttp
mov
int3
and
daa
test
xor
es
into
cmp
dec
pop
push
sbb
adc
sub
add
cmp
sbb
adc
add
les
cmc
cmp
cmp
hlt
push
sbb
add
test
push
push
das
cs
mov
push
pop
fdiv
aaa
inc
xchg
push
mov
push
mov
jmp
(bad)
ds
(bad)
stos
push
xchg
sbb
imul
(bad)
leave
pushf
div
imul
pop
out
mov
xor
push
push
mov
mov
aad
in
out
mov
scas
sbb
add
ins
dec
dec
sub
jmp
mov
sub
pop
aaa
push
jo
shr
call
or
mov
dec
sti
test
mov
call
jnp
and
outs
arpl
or
outs
mov
dec
xchg
popa
xchg
sub
mov
mov
xchg
aad
and
jns
xlat
sbb
scas
mov
call
cld
add
mov
(bad)
sbb
jecxz
xchg
imul
clc
ins
daa
push
frstor
lods
and
jl
cwde
jne
out
jmp
dec
dec
repz
sbb
fndisi(8087
bound
sbb
pop
mov
test
lahf
pop
mov
mov
bound
inc
outs
cwde
jmp
inc
mov
xor
(bad)
adc
aam
fisttp
and
mov
mov
(bad)
ficom
or
rcl
sbb
xor
les
imul
out
pop
fs
scas
dec
pop
xchg
mov
inc
iret
js
sub
or
adc
sti
ins
movs
cmps
xchg
stos
or
in
xor
cdq
jle
xor
push
sub
(bad)
jmp
iret
push
dec
adc
lods
sub
dec
add
and
mov
rcr
sbb
sbb
and
call
sbb
pop
cmp
stos
dec
adc
push
push
jne
or
and
data16
lock
mov
sbb
pop
pop
xor
je
test
imul
cmc
(bad)
cmp
scas
sbb
jl
data16
mov
aam
pop
test
and
(bad)
lods
mov
adc
repz
out
add
out
jo
fidiv
and
or
or
out
mov
mov
cmc
ror
gs
mov
iret
test
add
sub
or
into
sbb
out
popf
bound
jne
addr16
mov
ret
sbb
jl
lock
adc
js
cdq
jmp
sti
pop
daa
ret
(bad)
cmps
or
mov
es
sub
loopne
adc
addr16
dec
mov
jne
clc
and
jmp
adc
add
mov
push
loope
push
mov
jae
mov
pop
aad
adc
mov
in
jnp
call
inc
dec
pusha
jb
movs
adc
sub
mov
jl
sub
sub
xchg
cmp
out
mov
hlt
outs
pop
push
xchg
sar
popa
and
pop
jmp
sub
repz
inc
mov
ret
imul
inc
stos
sbb
stos
scas
xor
sbb
cli
mov
mov
scas
test
and
jp
xchg
mov
jge
popf
shl
mov
rcr
aaa
fs
xchg
(bad)
inc
sbb
pop
in
mov
pop
outs
sbb
xchg
cdq
movs
and
pop
sar
mov
ret
inc
or
jo
(bad)
vmovd
addr16
push
jmp
ss
cdq
lods
clc
adc
(bad)
sub
jecxz
out
fbld
jmp
mov
mov
or
imul
ins
rol
sub
adc
sbb
test
rol
dec
pop
fcmovnb
test
das
sub
jecxz
add
mov
mov
dec
inc
xchg
dec
scas
mov
add
mov
pop
fwait
push
mov
retf
pushw
dec
jle
arpl
jno
outs
inc
pop
xchg
out
pop
call
repz
clc
(bad)
dec
dec
lock
fwait
pop
xor
call
movs
repnz
ss
cmp
mov
imul
stc
jle
cwde
sti
sbb
sbb
retf
aas
jne
push
add
sub
retf
sbb
push
pop
lock
mov
or
cmp
nop
pop
push
ficom
mov
cdq
pop
not
dec
fdiv
mov
jge
js
jle
inc
inc
out
xlat
mov
jne
xchg
out
push
mov
mov
inc
mov
in
mov
pop
imul
(bad)
aad
push
sahf
dec
mov
mov
sbb
scas
fcmovb
mov
jp
sbb
ror
in
es
repz
xor
dec
dec
sub
arpl
mov
xchg
or
inc
and
ret
jo
outs
sbb
xor
dec
imul
std
jp
fnstenv
or
ins
sbb
sub
ss
mov
fs
cmps
jb
pop
das
xor
or
cwde
xlat
mov
xchg
and
out
mov
add
adc
or
retf
jns
cmps
fild
pshufw
addr16
or
jb
push
mov
xchg
sbb
popf
xor
retf
aad
not
sar
sub
or
inc
rol
outs
aaa
popa
jmp
mov
sub
xlat
aaa
xor
cmp
clc
imul
xchg
(bad)
in
loope
into
in
ins
sub
test
jmp
lods
mov
dec
hlt
or
shl
jmp
sub
jl
adc
mov
mov
cmp
out
pop
int3
cmp
hlt
daa
gs
fcmovnu
mov
iret
adc
mov
fcom
pop
les
(bad)
mov
jb
cmps
jp
sbb
pop
mov
and
and
jne
ds
stos
out
mov
sbb
mov
dec
push
test
lahf
std
sub
sbb
repnz
rcl
push
imul
mov
into
outs
test
adc
sub
mov
adc
in
loope
mov
ret
jb
lods
cmp
call
into
pop
icebp
mov
stos
mov
push
xor
scas
cli
dec
and
retf
bound
(bad)
cmc
test
jbe
retf
dec
pop
or
dec
ror
xor
not
jb
cdq
mov
mov
mov
jne
ror
jb
cmp
jb
rcl
scas
pop
test
xchg
rcl
pop
pop
loopne
xchg
jb
sti
mov
loope
inc
mov
pushf
sub
pop
out
dec
retf
pop
cmp
cmps
in
mov
stos
mov
mov
adc
push
mov
pop
aad
add
xor
stos
cmp
int
ins
ret
iret
(bad)
int3
fwait
push
test
dec
mov
ficom
pop
dec
inc
cmp
xor
aaa
out
pop
sbb
xchg
push
xchg
and
push
jb
pop
(bad)
jns
(bad)
popf
iret
mov
adc
mov
sbb
js
sbb
jae
push
push
cmc
fwait
and
adc
inc
data16
bound
or
inc
and
mov
mov
cmp
xchg
cmps
out
mov
mov
sbb
add
xchg
rcl
dec
jbe
sbb
sbb
outs
sbb
out
mov
stos
inc
data16
adc
mov
das
add
xor
xlat
cmp
mov
xchg
mov
mov
out
xchg
xchg
setno
cwde
imul
call
sbb
lods
movs
adc
lods
dec
in
retf
(bad)
jo
shr
pop
and
xchg
cmp
push
inc
dec
push
in
loopne
inc
push
imul
sub
xchg
xchg
sub
dec
mov
jbe
xchg
sub
addr16
xchg
enter
mov
jb
ss
fild
repnz
sub
pop
out
ja
gs
cmp
aam
sub
jg
jns
push
or
inc
mov
(bad)
xor
sub
adc
fbld
dec
arpl
lock
adc
lods
jle
fild
sub
retf
mov
das
mov
mov
adc
mov
mov
or
or
sub
xlat
push
mov
sub
jmp
xor
out
cmp
clc
mov
retf
loope
dec
in
mov
cld
ins
cld
outs
add
push
pop
pop
movs
pop
jo
cmp
repz
push
and
xchg
and
pop
xchg
or
and
cmps
jl
(bad)
cmp
in
mov
sub
lahf
mov
rcl
and
arpl
or
add
cmp
loop
jmp
fild
and
ss
retf
(bad)
xor
mov
adc
inc
out
cmp
cmp
sbb
inc
out
ds
mov
xor
sahf
sub
push
mov
jb
sub
xchg
ror
jmp
movs
push
sub
shr
les
push
inc
jmp
or
imul
dec
inc
fisubr
sbb
sub
sbb
cmp
pop
mov
push
cmps
jle
in
(bad)
xor
xchg
cmp
sub
xchg
out
mov
repz
fld
ins
fidivr
push
inc
mov
out
popf
adc
xchg
inc
popa
fadd
fxch
dec
xchg
mov
std
xor
add
mov
adc
mov
les
mov
in
mov
aaa
inc
mov
(bad)
int3
lock
das
sahf
sbb
mov
out
lea
jo
xor
jg
jl
mov
addr16
aaa
mov
pop
dec
ss
inc
fild
sbb
adc
idiv
mov
fwait
xor
xchg
rcr
sub
imul
adc
aam
pushf
sar
out
mov
les
mov
ret
push
out
imul
and
adc
div
adc
and
pop
jbe
arpl
arpl
add
add
push
adc
pop
sahf
sbb
lds
call
aas
dec
aas
std
or
xchg
jno
sub
mov
fild
xor
test
xchg
int3
jmp
lahf
call
call
pop
push
fist
xchg
fwait
mov
aas
inc
js
xor
sti
jb
mov
push
call
lahf
mov
fld
sti
xor
out
pop
dec
xor
mov
mov
ins
out
and
out
inc
xor
sub
sar
jno
aaa
jecxz
inc
cli
xor
movs
mov
adc
stos
xlat
jle
std
int
mov
lods
pop
(bad)
fidiv
pop
xor
jo
inc
fbld
xor
hlt
adc
pop
out
call
mov
cmp
retf
or
stc
dec
clc
sbb
popf
inc
into
or
xor
sbb
fst
inc
and
jb
inc
fidiv
jge
repnz
ss
jl
pop
add
xchg
xchg
call
icebp
cld
pop
mov
sub
inc
mov
int
imul
adc
imul
lods
xor
sti
jmp
push
fstp
jp
into
(bad)
call
ret
mov
call
lahf
jns
push
aad
jae
xchg
aad
adc
push
or
add
repz
add
xlat
aam
data16
ins
mov
jns
sbb
xor
adc
inc
mov
fsubr
dec
icebp
inc
leave
lods
mov
rcr
arpl
mov
push
sar
jae
push
aas
pop
shl
inc
repz
cmc
inc
cli
fs
and
icebp
dec
add
iret
(bad)
out
gs
mov
push
pushf
fbld
std
jmp
xor
imul
mov
sub
push
ret
ss
repnz
int3
mov
mov
adc
jp
sub
cmp
or
cmp
add
push
mov
adc
dec
(bad)
enter
push
scas
pop
xchg
or
lock
dec
into
fidiv
outs
ror
in
imul
jmp
mov
das
push
shl
xor
adc
movs
shr
cmp
out
xchg
nop
ins
jmp
fs
mov
fmul
std
sbb
sub
mov
(bad)
je
pop
adc
adc
jno
es
inc
mov
mov
or
mov
xchg
lahf
dec
pop
sbb
cmp
stos
ss
cmps
loope
(bad)
mov
sbb
inc
add
enter
push
jp
pop
or
inc
sbb
add
jmp
in
lds
pop
mov
popa
(bad)
sbb
fisubr
shr
push
mov
sbb
cmp
xor
pop
and
icebp
pop
das
test
rol
dec
sbb
push
push
xor
push
dec
and
add
cli
push
daa
sbb
xchg
inc
lahf
(bad)
xor
add
test
neg
or
add
mov
inc
jb
dec
xor
push
pop
dec
enter
and
inc
shl
loopne
xchg
popa
mov
call
push
test
push
dec
call
movs
dec
ins
das
push
pop
imul
xchg
fnsave
test
xchg
xor
movs
mov
or
push
push
in
aaa
cmp
adc
popf
sub
(bad)
push
in
test
aaa
mov
popf
sti
push
mov
cli
sbb
out
xchg
lock
pop
cmp
xor
mov
add
pop
add
ja
xor
mov
sub
fs
push
stc
out
sub
sub
pushf
jmp
mov
xor
cld
sub
push
jne
xlat
push
mov
dec
sbb
and
jns
fiadd
xchg
fcmovnb
jle
fwait
dec
cmp
mov
hlt
shl
aam
sbb
pop
cmp
push
inc
pop
mov
ret
push
mov
sub
pop
and
ret
fsub
mov
fcmovbe
shr
jmp
leave
add
or
pusha
mov
push
lods
gs
fs
pop
add
(bad)
lock
and
out
jb
xor
mov
cmc
xchg
bound
pop
call
jecxz
mov
jg
je
iret
push
mov
cmp
mov
ror
add
cmp
mov
in
mov
mov
xchg
push
mov
cs
inc
out
xlat
mov
sahf
clts
add
push
xor
cmp
pop
sbb
add
xchg
jno
daa
sbb
or
test
into
inc
dec
inc
std
jle
xchg
mov
clc
or
xor
push
push
cld
cmp
addr16
es
adc
stc
addr16
push
(bad)
mov
sbb
addr16
push
push
inc
lock
mov
lods
rcr
inc
sbb
xor
mov
ret
jne
int
test
and
mov
lods
cmps
mov
(bad)
out
jmp
movs
add
or
add
dec
push
mov
xor
int3
(bad)
mov
mov
or
push
(bad)
mov
dec
data16
dec
push
out
pusha
lds
cmc
or
sbb
cmp
fistp
pop
repz
cmc
out
push
xchg
and
clc
ret
sub
addr16
test
test
loope
jns
xchg
lea
cmp
inc
xor
cmp
jg
or
add
mov
bound
rol
ja
aaa
xor
cmp
jne
jl
sbb
mov
imul
xor
ja
pushf
loopne
hlt
mov
pop
push
cmps
test
mov
in
sahf
arpl
int
jo
(bad)
sub
or
jmp
lds
sub
sub
das
test
mov
xor
pop
lahf
or
xchg
div
cmps
js
into
es
pop
lods
lds
push
lods
mov
fwait
mov
adc
xor
jne
test
xchg
repz
mov
or
rcl
aas
ret
mov
or
das
add
dec
cmps
(bad)
pmovmskb
mov
and
lods
xchg
jecxz
in
fiadd
lods
pusha
sub
pusha
stc
cwde
adc
arpl
scas
dec
das
jns
pusha
div
adc
cmp
cwde
(bad)
leave
nop
mov
cmps
shl
jne
xchg
mov
or
not
in
lea
ret
xor
aas
mov
outs
sbb
add
cmc
mov
cmp
sub
cmps
test
dec
and
adc
push
fisttp
fstp
mov
ds
add
out
inc
mov
imul
and
cmp
arpl
xchg
sar
sub
ins
and
icebp
repnz
cmp
pop
jne
fndisi(8087
jnp
cmp
gs
scas
mov
mov
repz
inc
sub
dec
mov
and
stc
pop
sbb
mov
pusha
xchg
mov
jmp
mov
call
mov
and
retf
out
div
(bad)
out
sbb
call
sbb
sub
cwde
and
mov
add
add
pushf
(bad)
shl
cmc
je
jne
cdq
call
(bad)
fcmovne
mov
xlat
mov
pop
ins
mov
enter
bound
sahf
inc
nop
push
lock
inc
lock
jb
(bad)
push
push
sbb
lods
xor
mov
sbb
xchg
outs
pop
cmp
xchg
ins
add
jmp
add
dec
mov
enter
and
jge
mov
lahf
xor
and
pop
pop
add
mov
xchg
jmp
mov
shl
and
dec
pop
jg
sbb
pop
fwait
addr16
xchg
push
outs
xor
cmp
pop
push
mov
mov
mov
shl
cli
daa
cmps
jge
imul
mov
sub
adc
stc
sub
mov
(bad)
nop
imul
inc
iret
push
adc
inc
pop
repz
in
jbe
outs
or
and
aam
sti
lods
and
stos
dec
test
pop
sbb
adc
fmul
and
pop
in
sub
rcl
aas
repz
cld
jo
into
inc
dec
cmp
arpl
push
cs
vmovlpd
push
xchg
inc
scas
inc
ret
in
mov
dec
dec
arpl
lods
push
test
inc
out
mov
sub
mov
cmp
fidivr
push
add
shr
movs
or
mov
push
movs
adc
outs
or
dec
xchg
daa
das
sbb
jecxz
hlt
mul
ja
(bad)
mul
add
mov
mov
pushf
sub
je
lods
sub
push
icebp
pop
cmp
(bad)
xchg
pop
sbb
xor
outs
outs
outs
mov
pushf
sbb
jge
inc
es
push
imul
mov
cmp
jb
sub
cld
inc
inc
jmp
xchg
push
push
sub
ins
xchg
dec
je
addr16
retf
xor
jl
push
mov
xchg
retf
jg
or
cld
int3
dec
adc
mov
stos
jbe
icebp
mov
cmps
and
fsub
ja
inc
cmp
dec
pop
adc
int
xor
pop
repnz
xor
ret
dec
xor
int3
push
ins
add
sub
rol
scas
lahf
sbb
jae
pop
xchg
in
(bad)
imul
clc
rcl
call
adc
jl
xor
jno
xchg
sub
sbb
(bad)
add
mov
push
pop
dec
jne
pop
fneni(8087
jg
pop
jp
or
aas
dec
aas
pop
sbb
js
add
imul
movs
xchg
cli
cwde
mov
xor
jecxz
inc
ds
sub
jnp
cmp
std
rcl
out
sbb
xor
xchg
retf
stc
fild
push
clc
mov
cmp
les
mov
stos
aad
xchg
mov
jnp
jmp
mov
adc
lds
scas
pop
ficomp
cmps
mov
in
imul
push
rcl
dec
lods
inc
ins
cmc
int
jno
test
cmp
rcl
cmc
sbb
icebp
test
xor
push
aas
mov
fmulp
adc
outs
mov
cmp
xchg
std
gs
cwde
xchg
cmp
mov
sub
sbb
sub
gs
mov
pop
imul
scas
cmp
call
adc
aam
out
sti
mov
dec
repnz
ret
push
mov
retf
(bad)
mov
ret
mov
and
rcr
push
repnz
sbb
jmp
mov
dec
stc
ins
nop
mov
out
bound
push
mov
mov
xor
mov
xor
pushf
adc
push
fild
(bad)
sub
test
outs
pop
pop
mov
loopne
mov
and
and
sbb
popf
xor
and
(bad)
ret
cwde
xchg
aam
sub
or
mov
xor
dec
mov
cmp
mov
aam
pop
fcomp
jp
add
xchg
mov
push
cmp
call
dec
pop
stc
popf
mov
xor
mov
stos
inc
jle
fldln2
gs
xchg
(bad)
mov
les
pop
push
pop
inc
iret
xchg
add
xchg
xor
je
inc
xor
dec
add
xlat
in
xchg
jge
add
repz
loopne
or
mov
mov
ret
leave
test
mov
jno
pop
inc
dec
xor
push
mov
ret
cmp
arpl
pop
sahf
push
push
jb
clc
jmp
mov
and
imul
dec
ds
fs
inc
adc
jne
add
sub
stos
mov
xchg
mov
cmp
mov
idiv
je
jo
idiv
jb
jo
jp
icebp
fsub
mov
popf
es
adc
or
hlt
fs
call
fld
jle
dec
sahf
lods
retf
stos
adc
and
fbld
adc
xor
mov
jnp
stos
pop
in
cwde
lahf
sbb
jecxz
push
jg
retf
fidivr
push
scas
add
adc
push
pop
mov
push
add
les
aad
loopne
lods
fbld
cmps
pop
lods
and
lea
lods
inc
cmp
ret
clc
sub
enter
and
enter
inc
push
inc
mov
ins
jno
leave
js
call
outs
cmps
outs
mov
out
fsubr
fwait
mov
xchg
push
aam
adc
sub
in
and
sub
push
push
or
aaa
loop
les
and
dec
dec
dec
ds
daa
ret
dec
add
jl
sar
movs
ins
inc
mov
rcr
adc
in
inc
cmp
icebp
cmp
mov
neg
xor
jmp
push
shr
add
(bad)
ja
scas
aad
xchg
pop
ja
mov
pop
in
repnz
and
call
jp
in
jbe
clc
xor
lock
std
int3
and
popa
mov
js
mov
shl
sbb
cs
mov
mov
nop
fisubr
mov
fnstenv
jg
adc
jge
ins
mov
pop
sar
ror
ins
push
jo
leave
push
push
pop
outs
dec
ins
retf
and
pop
sbb
(bad)
jp
in
inc
lods
das
jbe
popa
aam
push
jp
xor
sub
fld
pop
pop
das
cmp
mov
pop
pop
jl
jmp
mov
jg
sbb
inc
and
ja
fsubr
or
idiv
mov
scas
fwait
mov
pmuludq
into
jg
call
rol
or
push
adc
dec
pop
lods
inc
cmp
daa
ss
sahf
push
shr
cmp
and
stos
dec
test
push
sar
jl
adc
cs
lahf
mov
dec
jl
mov
cmp
push
test
into
push
push
es
sub
inc
aaa
and
scas
sub
(bad)
jecxz
mov
(bad)
xchg
sahf
enter
jmp
xchg
pop
push
sbb
jbe
push
xor
imul
push
add
(bad)
(bad)
jo
dec
sbb
in
fist
push
sub
xlat
inc
push
scas
inc
pop
push
cs
mov
sahf
arpl
and
ret
push
cmp
test
ficomp
stc
(bad)
push
pop
jle
sbb
daa
ret
push
es
imul
data16
or
test
fnsave
add
aam
in
push
icebp
scas
mov
test
or
jecxz
lock
mov
imul
mov
in
add
in
enter
jne
or
les
add
push
push
test
jle
ins
aaa
push
sbb
test
push
mov
jle
aaa
inc
outs
in
outs
add
mov
imul
pop
add
push
mov
push
adc
xor
cmp
sahf
mov
retf
pop
jp
mov
pop
repnz
(bad)
js
movs
cmp
and
call
jecxz
and
dec
pop
bound
jmp
fisttp
fld
retf
cmp
push
cmp
inc
and
dec
rcr
enter
mov
call
mov
aad
call
aam
mov
xchg
add
push
push
xchg
popf
stos
retf
jecxz
mov
stc
shl
aad
sbb
(bad)
jns
retf
mov
shl
mov
sti
mov
repnz
je
mov
adc
inc
sbb
cmp
loope
xchg
mov
hlt
jecxz
xchg
inc
mov
or
aam
push
cmp
dec
retf
imul
cs
call
(bad)
loopne
das
int3
js
iret
iret
fsubr
push
(bad)
pop
mov
or
and
adc
inc
jmp
ret
sub
and
sub
pop
cmc
jecxz
add
sub
cmp
fcmovnu
and
fsub
cmp
jne
xchg
les
sub
pop
or
jbe
xor
fdiv
lds
cmp
test
stos
sbb
scas
inc
es
jecxz
(bad)
cli
out
cmc
ds
popf
xor
ins
addr16
outs
repz
inc
push
mov
cmp
out
dec
cmp
imul
cli
mov
daa
pop
push
popa
or
push
in
nop
cmp
push
fwait
aas
je
outs
mov
mov
jmp
jmp
sub
les
add
dec
cmps
ror
push
scas
add
inc
loope
push
pop
pop
mov
int3
add
xchg
shl
hlt
fidiv
popa
push
enter
push
dec
fiadd
xor
aam
lods
mov
jl
lds
ja
jb
jns
hlt
loop
mov
aaa
sub
or
mov
ficom
int
inc
pop
cmp
rcl
dec
out
cdq
call
inc
inc
ins
das
js
sbb
xchg
cwde
fidivr
mov
inc
movs
imul
adc
iret
xchg
push
and
test
cdq
cmp
lahf
ret
adc
nop
addr16
jecxz
dec
inc
sub
mov
clc
leave
mov
mov
aas
mov
fistp
cmps
scas
sbb
xchg
dec
jmp
inc
adc
sub
inc
or
leave
test
nop
jbe
les
sub
xchg
jbe
les
dec
jge
xor
mov
jmp
pop
sub
mov
jmp
xchg
adc
stos
ret
xor
and
pop
xchg
shl
aaa
aad
pusha
jp
inc
add
sti
and
clc
fst
dec
cmp
push
pop
lahf
inc
gs
push
scas
imul
jp
or
sti
adc
adc
das
ficomp
inc
enter
sub
mov
in
ja
movs
fwait
add
aas
jno
sbb
lea
imul
mov
mov
mov
(bad)
inc
(bad)
(bad)
push
and
imul
je
lods
(bad)
das
mov
xchg
nop
out
je
rcr
iretw
xchg
cmp
lea
xchg
cli
addr16
movs
test
add
mov
push
sub
pop
and
aad
mov
adc
cmp
and
pop
dec
scas
pop
push
nop
mov
(bad)
neg
adc
in
fsub
push
imul
jb
mov
sti
pusha
fsubr
mov
imul
(bad)
pop
dec
xchg
leave
or
fsubr
sub
jge
mov
lods
inc
push
or
loope
sub
cmp
out
jle
mov
inc
mov
enter
leave
cmps
pop
push
adc
bound
retf
arpl
(bad)
(bad)
popa
icebp
xchg
cmp
mov
out
xchg
ins
sub
pop
xlat
(bad)
push
stos
xchg
mov
cmps
enter
or
test
popa
and
mov
mov
sbb
sar
sahf
dec
call
adc
jae
sub
retf
sub
inc
fdivp
nop
jbe
cmp
nop
mov
shr
pusha
xchg
push
add
mov
sar
sbb
fnstenv
retf
jp
std
inc
fstp
les
or
push
sbb
jp
int3
scas
scas
jmp
inc
mov
and
mov
and
jbe
jge
in
inc
daa
and
jecxz
arpl
cwde
mov
bound
mov
jmp
in
or
pop
jno
imul
fnsave
ds
sbb
mov
ins
iret
push
push
pop
std
dec
push
(bad)
pop
mov
outs
inc
scas
mov
pop
cmp
test
jl
in
or
iret
xlat
arpl
sbb
lahf
shl
retf
call
in
cmps
ins
sub
mov
repnz
fst
mov
shl
out
fs
das
leave
push
fidivr
mov
scas
(bad)
lahf
add
cmp
jecxz
and
mov
stos
es
cli
inc
sahf
xchg
mov
jmp
and
cmp
cmp
cmp
lods
out
neg
jmp
jnp
mov
mov
cmp
rcl
js
stc
push
inc
push
mov
or
imul
mov
cmp
cli
jle
shl
jmp
stos
test
inc
call
popf
jge
(bad)
jg
mov
les
jmp
inc
pop
and
lods
in
xchg
clc
test
out
div
or
push
cmp
clc
mov
and
xor
xchg
xchg
lock
cmp
daa
jbe
sub
mov
add
movs
lods
cmp
test
mov
ss
sbb
ins
cmp
inc
xchg
mov
or
mov
gs
out
xor
in
inc
mov
hlt
imul
fadd
push
loope
mov
pop
lds
push
and
ins
push
mov
push
push
fsub
mov
sub
xchg
cmp
and
dec
adc
(bad)
jmp
dec
adc
xchg
jg
push
cmp
rcr
shr
shl
push
and
ret
fisubr
xchg
stos
sbb
sar
xchg
outs
xchg
and
jmp
push
push
dec
pop
jg
psubw
fistp
fmul
shl
(bad)
push
xchg
out
arpl
xchg
dec
ds
ja
mov
lock
push
ret
jmp
cmp
adc
mov
lahf
fldenv
popa
gs
xor
icebp
es
fcmove
lods
dec
daa
or
test
or
sbb
mov
xchg
mov
push
and
jb
mov
jmp
sahf
adc
fnsetpm(287
adc
pop
sar
push
stc
mov
movs
jg
icebp
and
je
pop
rol
mov
pop
fstp
gs
or
test
inc
pop
clc
inc
adc
cwde
call
stos
fisttp
mov
xchg
imul
ret
pushf
sar
dec
or
pop
inc
add
out
adc
jecxz
sub
mov
sbb
jmp
test
xor
adc
inc
xchg
mov
cmps
pop
stc
inc
fwait
dec
std
xor
fs
inc
jno
hlt
sub
(bad)
pusha
sti
xchg
pop
ja
or
cmp
xor
mov
aaa
fidivr
je
mov
dec
xchg
xchg
add
jb
arpl
aad
push
mov
pop
push
loop
icebp
mov
je
imul
lahf
imul
nop
or
dec
jmp
mov
mov
icebp
popa
icebp
mov
add
test
xor
jle
push
es
push
wbinvd
jl
leave
sbb
or
pop
addr16
pop
cli
push
stc
push
dec
mov
es
or
mov
into
out
xchg
cmp
mov
leave
clc
dec
jmp
push
dec
jmp
js
xchg
xor
sub
mov
in
pop
mov
cmc
sub
add
cmp
cmps
psrld
shr
call
jns
and
and
cmp
mov
pop
scas
lods
repz
adc
icebp
pop
(bad)
lds
fs
stos
and
call
sti
and
push
mov
xor
mov
push
hlt
pop
pop
or
pop
xchg
sbb
jecxz
mov
js
out
aad
int3
jg
cs
xor
fucomi
(bad)
pop
adc
(bad)
in
push
int3
mov
inc
jmp
sub
or
std
fcomp
add
pop
sahf
hlt
mov
xor
sbb
retf
push
call
retf
inc
(bad)
movs
add
cmp
adc
add
mov
lds
ret
out
je
jmp
cmp
dec
xor
inc
xor
ret
int3
les
movs
loope
ret
and
fild
sar
sub
xchg
outs
int
xor
mov
sub
push
(bad)
loope
les
retf
xchg
dec
lahf
jnp
sub
adc
xor
mov
jecxz
mov
sbb
sub
add
pusha
or
leave
call
out
(bad)
push
sti
sbb
push
mov
aas
xchg
sub
inc
scas
adc
arpl
mov
ins
or
cmp
cmps
jno
fs
mov
lahf
fsub
mov
not
(bad)
pop
cld
cmp
xchg
loope
add
call
xor
xchg
rcl
sub
in
sbb
xor
vorps
neg
xchg
pop
cli
and
call
int3
xor
mov
iret
mov
inc
mov
xchg
(bad)
leave
retf
js
shl
add
xchg
xchg
push
xlat
test
inc
shl
mov
sbb
adc
pop
mov
xlat
xchg
push
mov
mov
add
jecxz
pop
imul
rcr
xchg
mov
xchg
out
jp
xchg
mov
shr
inc
sub
sbb
test
test
mov
in
mov
add
adc
push
sti
nop
jge
or
dec
mov
lods
int3
push
test
jb
push
mov
sbb
mov
mov
jecxz
pushf
call
or
fbld
mov
mov
xor
clc
(bad)
loope
ror
add
xchg
adc
xchg
iret
in
bound
out
inc
mov
out
inc
xchg
xchg
adc
mov
stos
into
pop
adc
mov
add
arpl
sub
push
mov
jg
xor
xchg
clc
mov
or
xor
in
test
test
fmul
jmp
push
push
push
sahf
test
inc
aam
or
sub
adc
cmc
dec
add
stc
rol
sub
jno
jg
adc
ins
adc
aad
cld
pop
ror
push
enter
popf
nop
add
mov
pop
ror
enter
dec
in
sub
retf
cmp
cli
or
rcl
sbb
lahf
sahf
add
xchg
popa
push
inc
push
sbb
and
ins
ss
ja
add
loope
leave
pop
(bad)
int3
cli
xchg
fs
(bad)
loopne
jp
push
push
cmp
jnp
ror
mov
mov
outs
xor
mov
lods
xor
adc
xor
in
cli
or
jno
push
inc
push
cmps
pop
pop
and
pop
fisubr
inc
cwde
hlt
sbb
xchg
shl
inc
out
jne
data16
arpl
inc
fild
jge
mov
sub
inc
inc
push
(bad)
aad
dec
les
xor
sub
pop
std
pop
xchg
ss
mov
movs
xor
mov
and
cmp
(bad)
hlt
sti
outs
imul
ins
push
in
je
fstp
fist
inc
xor
push
inc
adc
les
or
call
sub
sbb
repz
or
in
jbe
push
out
rcl
dec
(bad)
cmp
rol
out
push
or
lods
sub
adc
repnz
ja
out
aad
and
xlat
sub
pop
clc
cli
adc
inc
push
add
cmp
nop
daa
fcmovu
stc
outs
pop
idiv
loope
sti
stc
jae
pop
sub
btc
jg
push
push
jno
mov
stc
frstor
mov
add
xchg
std
mov
mov
(bad)
cmp
retf
mov
rdtsc
mov
div
test
fwait
xchg
jmp
jne
fs
push
mov
jecxz
popf
jp
bound
xchg
mov
jmp
mov
cld
cmp
std
cmp
lock
hlt
mov
fisub
popf
scas
jnp
pop
sahf
add
lahf
std
retf
jg
inc
xor
imul
das
mov
mov
stc
pop
push
jp
mov
sub
mov
sbb
mov
mov
dec
pop
dec
loope
mov
(bad)
shl
sub
adc
mov
pop
push
mov
aam
sub
icebp
and
add
or
comiss
and
in
xchg
call
imul
add
adc
fs
cwde
inc
push
add
lods
les
sub
jmp
ins
dec
sub
cdq
mov
sbb
arpl
mov
(bad)
jns
fimul
ror
loopne
and
sbb
(bad)
mov
cmp
daa
lahf
out
movs
push
stc
cs
inc
or
loop
sbb
lds
les
inc
outs
dec
xchg
shl
sub
mov
xor
loope
sahf
ins
jmp
outs
or
cmc
scas
or
je
scas
cmc
cmp
test
push
pop
sub
or
(bad)
or
je
aam
cmp
cli
lahf
inc
retf
mov
out
(bad)
sub
pop
dec
mov
(bad)
pop
xchg
dec
aad
in
sahf
test
xchg
fstp
and
repnz
mov
mov
sbb
rcr
or
xlat
out
dec
adc
xchg
cld
xchg
rcl
sub
in
ret
retf
hlt
loop
fnsave
push
in
or
test
ss
jns
in
mov
(bad)
mov
sbb
popa
fisubr
jl
int
ret
xchg
cmp
add
fcmovnu
addr16
enter
scas
(bad)
jge
scas
adc
rcl
es
push
mov
dec
or
int
xchg
stc
lea
mov
push
or
adc
movs
cmc
fsub
scas
and
mov
jae
cmp
(bad)
adc
pop
pop
out
and
jne
pop
pop
cmp
mov
test
pop
loop
mov
sub
sbb
inc
movs
mov
inc
sub
jbe
aad
xchg
shl
xchg
scas
test
mov
ret
rcr
repz
in
test
mov
popf
popf
hlt
mov
sbb
cmp
jo
jnp
cmp
push
push
mov
scas
enter
mov
out
mov
lahf
addr16
push
ja
in
mov
jbe
inc
test
sub
fwait
mov
icebp
nop
cld
sub
sbb
mov
test
sahf
outs
pop
pop
jno
mov
jmp
aas
sbb
mov
movs
add
dec
dec
jmp
inc
lock
cmp
cmps
iret
pop
inc
inc
and
xor
fwait
or
leave
sti
jb
cmps
sbb
mov
aaa
dec
or
xor
cli
rcl
adc
out
fldcw
popa
or
ret
pop
test
dec
pop
mov
lds
sahf
push
push
pop
dec
cmp
and
hlt
xor
push
ss
test
out
push
xchg
fs
outs
add
or
cmp
es
pop
not
mov
dec
xchg
mov
push
rep
retf
and
sub
out
(bad)
jg
mov
mov
scas
(bad)
cmc
push
mov
test
fistp
jbe
ficom
clc
mov
test
sbb
jge
scas
js
test
mov
xchg
loope
xor
cmp
xchg
mov
repnz
pop
xor
sbb
push
jae
jo
shl
(bad)
pusha
inc
sub
dec
es
pop
cs
call
push
or
inc
or
jl
xchg
js
pop
mov
jle
shr
pop
ins
mov
not
loopne
adc
shl
xor
mov
fimul
pop
aam
mov
sbb
sbb
imul
sar
jmp
in
test
mov
lods
dec
inc
cmp
movs
in
test
rol
fwait
jmp
jmp
mov
mov
aam
or
mov
mov
mov
xchg
and
add
(bad)
movmskps
jmp
test
mov
jmp
xor
dec
cmps
pop
sub
stc
and
in
in
add
push
and
xor
jmp
or
ror
outs
outs
jmp
cmps
xchg
xchg
xchg
adc
mov
out
pushf
mov
inc
cmc
(bad)
repz
stc
xchg
cmp
mov
xchg
sar
mov
push
rcr
ret
ret
out
mov
retf
pop
xchg
jp
pop
xor
mov
nop
xor
sar
add
and
mov
cwde
jmp
push
adc
adc
into
mov
mov
enter
in
arpl
fwait
mov
fidivr
movs
in
jne
out
into
nop
mul
arpl
inc
xchg
shl
push
dec
popf
scas
scas
xchg
mov
in
ret
pop
push
mov
mov
push
lods
push
jp
jnp
icebp
sbb
gs
in
mov
pop
shr
xchg
and
js
sub
mov
and
in
in
adc
push
inc
fisttp
pop
push
jno
test
mov
xor
or
add
inc
dec
jg
je
stc
test
mov
aas
in
in
int
adc
push
ret
inc
xor
cld
cdq
dec
cmp
ret
mov
or
out
fidiv
mov
pop
hlt
out
daa
icebp
loopne
movs
bound
sub
retf
fisubr
and
xchg
mov
push
cmc
stos
fidiv
push
mov
adc
inc
jns
or
xor
cmp
xchg
leave
add
cmp
jl
retf
shl
dec
sub
pusha
adc
push
pop
sar
je
or
xchg
mov
jns
mov
sar
cs
jge
in
push
fcom
push
sub
mov
frstor
jne
mov
loop
jmp
fstp
inc
jo
pop
aam
retf
out
push
push
inc
jb
sub
or
int3
cmc
mov
sbb
repz
(bad)
shr
push
lds
jg
hlt
push
fidivr
dec
daa
sub
mov
out
cmp
xor
cmps
jb
bnd
call
xor
push
mov
scas
sub
sbb
jno
out
adc
push
in
mov
aam
sbb
outs
int
in
sbb
shl
ins
int3
outs
ins
jg
dec
or
and
jle
int3
test
(bad)
adc
into
sbb
fldcw
jns
(bad)
adc
dec
mov
xchg
dec
js
test
mov
hlt
retf
and
push
dec
mov
sbb
xchg
adc
test
jo
movs
out
pop
xchg
adc
mov
mov
push
shl
push
fcom
inc
cmp
xor
push
push
inc
ins
xchg
sub
ins
pop
or
pop
cli
inc
push
int3
lea
pop
mov
aas
or
and
or
bound
lea
xor
adc
push
dec
jp
mov
sub
sbb
sub
popf
not
loope
pop
shl
stos
movs
sti
jae
das
pop
dec
lods
not
(bad)
xor
dec
push
mov
mov
shl
mov
sbb
(bad)
jno
push
mov
xor
outs
dec
or
xchg
ins
movs
cmc
fild
daa
dec
or
lods
nop
daa
and
clc
jbe
push
bound
add
sub
inc
scas
out
pop
data16
and
dec
out
xchg
ds
dec
and
(bad)
aaa
ror
outs
out
push
iret
(bad)
or
add
push
and
mov
mov
jmp
xlat
xchg
adc
pop
aad
and
jb
outs
daa
punpckhbw
mov
fisubr
add
and
jmp
gs
gs
sub
mov
inc
lea
in
lods
sbb
adc
sub
sub
fwait
jns
jmp
xor
mov
push
add
sbb
and
mov
inc
cwde
cli
and
sub
jmp
call
jge
mov
inc
dec
ins
inc
xchg
lods
js
or
xor
setl
into
lds
mov
ffree
(bad)
fmul
fcom
and
es
dec
aas
dec
dec
stos
lea
or
sub
cwde
pop
nop
call
ins
arpl
(bad)
adc
mov
and
xchg
pop
sub
add
jbe
je
and
cmp
xor
adc
or
and
ret
aad
stos
test
add
jmp
fidiv
adc
pop
lahf
imul
(bad)
sbb
add
cmp
out
fist
vfrczsd
xor
jae
inc
add
inc
dec
loope
jmp
xlat
dec
pusha
xor
mov
gs
sbb
ror
jg
cmps
jno
xor
ret
lock
test
pop
push
xchg
mov
or
fidiv
push
fwait
adc
mov
shl
and
inc
xchg
ret
cs
jp
pop
jns
or
add
enter
xchg
arpl
jge
sub
push
sti
jno
fsubp
sar
hlt
xchg
pop
mov
mov
vpunpckhbw
xchg
leave
dec
ins
cmp
stos
ins
fwait
xchg
mov
jno
and
sbb
clc
inc
sub
adc
push
xor
paddsw
loop
neg
in
jno
fcomp
mov
adc
push
jbe
mov
add
sbb
inc
xchg
imul
xor
adc
popa
mov
cmps
out
cwde
test
stc
mov
mov
mov
(bad)
data16
test
xor
and
dec
mov
out
(bad)
jne
adc
(bad)
shr
jecxz
xchg
or
cmp
xchg
mov
test
sahf
(bad)
jmp
push
loop
je
sbb
vpmuludq
adc
xor
not
mov
mov
popa
and
retf
scas
push
outs
mov
push
and
mov
cmp
sbb
aaa
inc
mov
push
mov
sub
lds
mov
pop
pop
xchg
xor
shr
hlt
sbb
inc
mov
push
pop
dec
jbe
mov
icebp
push
and
lea
inc
movs
popf
and
dec
xchg
sbb
xor
cwde
aas
cmps
test
test
or
ins
out
shr
sti
scas
sub
ror
pop
and
sbb
pop
icebp
rcl
int3
enter
or
jo
jnp
jo
loopne
ret
movs
fldenv
test
aad
leave
inc
mov
mov
sub
mov
push
std
test
add
add
repz
and
mov
jne
les
mov
mov
mov
stc
jl
push
pop
aad
jl
aaa
jl
cmc
push
pop
cmc
xchg
inc
mov
dec
mov
test
add
pushf
sbb
jg
(bad)
mov
mov
pop
mov
push
popf
pop
sahf
test
cmp
out
out
push
pop
push
add
cmp
loopne
jae
jnp
dec
div
adc
arpl
add
outs
adc
xlat
mov
or
ds
inc
mov
(bad)
div
pushf
shr
fistp
movlhps
repz
adc
pushf
or
fiadd
out
imul
xor
pop
add
mov
ss
dec
ds
jg
and
mov
cmc
lahf
add
jmp
push
sub
or
in
mov
movs
cmc
cmp
xchg
das
xor
and
int3
dec
inc
pop
outs
into
cmp
adc
xor
sbb
out
sbb
(bad)
sbb
jns
or
xchg
rcl
aam
and
add
js
mov
xchg
loopne
bnd
je
outs
mov
sub
ret
out
xlat
pop
popf
retf
mov
aaa
std
cmp
adc
sub
dec
mov
jmp
retf
repz
in
mov
jg
dec
fdivr
sar
aas
lock
repz
jbe
pcmpeqd
fdivr
cmp
mov
lea
pop
push
pop
mov
bound
fnsave
int3
dec
or
push
xor
and
arpl
mov
sub
sub
mov
jmp
xchg
(bad)
inc
or
xor
(bad)
and
stos
or
and
inc
xlat
jns
push
dec
imul
pop
cmp
jb
xchg
inc
mov
or
dec
xor
add
and
mov
jmp
test
push
fwait
mov
mov
mov
daa
mul
scas
adc
dec
repz
cmp
add
pusha
jns
xchg
mov
shr
push
mov
add
jbe
sub
(bad)
push
jnp
xor
mov
icebp
aam
jmp
push
enter
xchg
add
les
xor
into
rcr
lahf
ret
daa
fcomp
mov
repz
push
outs
les
fiadd
add
cmp
std
fs
call
(bad)
cmp
push
ins
(bad)
pop
mov
sub
add
sub
dec
xchg
int
scas
or
jns
out
in
mov
js
sub
imul
lds
add
jbe
mov
push
cmp
shr
nop
das
fisttp
fcom
retf
aam
mov
mov
mov
add
mov
bound
jecxz
fild
int3
fisub
sub
retf
xchg
loop
mov
mov
ds
xchg
mov
pusha
outs
xchg
jbe
dec
mov
inc
and
outs
pop
pop
dec
fld
scas
or
les
pop
mov
fld
jmp
push
push
fdivr
rcl
sub
lods
cmp
mov
loopne
test
test
cmp
push
mov
(bad)
adc
gs
add
es
ror
or
mov
mov
cmp
(bad)
lahf
daa
sbb
repz
andps
popf
sar
mov
dec
in
mov
adc
add
daa
xchg
inc
mov
add
in
fidiv
ret
jb
sub
jge
pop
dec
xchg
lods
lods
pop
retf
data16
js
arpl
mov
movs
jp
cdq
add
lods
in
hlt
and
sub
nop
push
jp
rol
daa
hlt
pop
mov
jb
sub
pop
aaa
xchg
and
mov
jns
adc
and
add
retf
mov
adc
push
test
je
xchg
dec
sar
pop
dec
sub
lock
push
jae
outs
clc
and
jmp
movs
lock
mov
jmp
test
lds
mov
mov
jl
sbb
mov
push
rcl
xlat
fidivr
sbb
ret
or
mov
addr16
js
push
out
(bad)
sub
iret
les
cmp
icebp
xchg
adc
sub
adc
adc
lods
inc
daa
mov
mov
sbb
adc
div
mov
repz
dec
adc
sub
mov
and
call
in
gs
pusha
loopne
push
pop
jo
push
adc
popa
sub
lock
push
ret
cmps
cmp
and
pop
out
cdq
mov
stos
aam
inc
push
fnstsw
xor
inc
(bad)
je
bound
add
div
imul
push
mov
imul
std
mov
and
cmc
pusha
sbb
or
jne
leave
mov
and
cdq
cmp
rol
pop
cmp
lods
or
and
push
push
cmp
or
aam
rcr
mov
in
mov
dec
ds
push
into
jecxz
pop
fisubr
ja
sbb
mov
out
cmps
(bad)
out
sbb
pop
or
or
test
test
jno
jmp
pop
leave
or
inc
sub
inc
cli
adc
outs
shl
in
dec
iret
stos
shr
ficomp
push
push
adc
faddp
sbb
jg
xchg
add
fwait
out
sbb
lods
or
adc
jbe
jnp
mov
mov
sub
pop
ret
mov
cld
bound
pop
sub
test
xchg
add
cmp
xchg
(bad)
out
push
xchg
push
adc
jbe
jle
mov
sub
add
rcl
enter
jae
sahf
add
sub
xlat
call
ror
aad
pop
xor
sub
mov
and
aaa
xor
mov
jmp
in
add
adc
xchg
out
mov
xor
sub
pop
or
mov
sub
daa
adc
popf
test
mov
pop
jb
lods
mov
mov
jge
dec
push
(bad)
call
ds
mov
call
inc
mov
mov
test
test
cmp
mov
call
sub
fs
fmul
mov
push
sbb
loope
cmp
daa
push
lock
jl
sub
aam
inc
pop
push
xor
arpl
aam
ret
xchg
scas
stos
inc
cld
in
fmul
dec
in
outs
and
aam
pop
jge
test
iret
pop
mov
jae
cmp
sub
ja
es
mov
ja
add
inc
mul
push
pop
xor
push
js
out
imul
aas
imul
pop
ins
ins
pop
in
addr16
das
xchg
shl
adc
jecxz
pop
mov
cli
cmps
mov
push
outs
adc
mov
or
je
stc
int3
push
pop
jbe
push
dec
out
ds
daa
pop
mov
rcl
test
popa
xchg
clc
xor
adc
jns
(bad)
call
and
adc
retf
cmp
adc
inc
inc
mov
ins
int
cmp
or
or
(bad)
jno
sbb
sbb
int3
dec
push
push
cli
xchg
mov
push
xor
mov
and
dec
outs
aas
xlat
push
xor
jne
out
movs
arpl
jecxz
pop
out
jo
add
ret
(bad)
(bad)
int3
push
jecxz
repz
push
enter
pop
shr
int3
push
mov
push
gs
pop
test
in
jo
mov
scas
jbe
and
pop
mov
mov
mov
test
jmp
jmp
jmp
test
sub
pop
or
add
jmp
mov
jbe
mov
cmps
call
aad
fwait
test
sub
(bad)
cmp
aad
(bad)
movs
mov
mov
add
mov
pop
push
repz
pushf
adc
push
xchg
hlt
mov
cmp
repnz
mov
mul
pop
retf
push
push
mov
mov
cmp
jno
add
ret
dec
loopne
sbb
fdivr
icebp
mov
push
ja
jmp
js
(bad)
xor
dec
in
aad
daa
(bad)
aad
inc
stos
aas
imul
xor
scas
outs
mov
cmp
ror
cmp
push
jmp
cmp
xlat
xchg
or
dec
jnp
push
std
es
cmps
lods
cmp
xor
add
pop
jmp
repz
mov
sub
fmul
jmp
sub
push
shl
cld
xor
loopne
dec
daa
dec
retf
jb
mov
leave
mov
outs
mov
xchg
push
ret
push
cld
pop
sub
retf
pop
in
mov
das
fist
data16
out
or
mov
daa
add
fdiv
cli
shr
xchg
fisub
cmp
call
jecxz
into
in
sahf
out
sub
dec
out
cmp
hlt
xor
out
jno
ret
test
jge
imul
push
push
(bad)
xchg
or
out
mov
out
ins
push
idiv
mov
shl
push
loop
pop
lds
sti
mov
iret
jne
test
and
add
cwde
popa
test
add
adc
imul
ja
stc
and
dec
std
push
mov
fdiv
jecxz
es
pusha
dec
mov
xchg
fcom
jnp
mov
icebp
mov
inc
sub
adc
ss
jmp
shr
jae
enter
stc
push
int3
test
iret
xor
inc
jno
cmp
fsubr
stc
mov
loope
hlt
jmp
fcomip
xor
popf
dec
xor
cmc
push
inc
aam
jno
popa
xchg
push
inc
dec
cmp
repnz
mov
mov
aas
test
shl
mov
xor
or
test
cmp
ud0
pop
push
mov
into
loop
mov
xor
jns
push
sub
(bad)
es
stos
jg
mov
lock
loop
movs
test
or
lods
mov
xchg
das
mov
push
scas
fscale
fild
out
xchg
out
mov
pop
mov
sar
and
test
push
and
adc
jecxz
mov
xor
loopne
je
dec
push
cmp
scas
outs
ja
jns
mov
push
push
inc
lea
outs
daa
push
iret
test
pop
dec
add
push
jl
mov
jmp
(bad)
mov
cdq
das
push
(bad)
loop
xchg
xor
fisttp
xchg
jne
in
sbb
dec
rol
pop
(bad)
lods
or
test
lods
mov
out
sub
sbb
or
aad
gs
mov
fld
cdq
cld
lds
jne
cmp
sub
adc
ins
fst
(bad)
fisubr
mov
loopne
cmp
into
je
jge
(bad)
adc
hlt
adc
inc
cmp
mov
cmps
pusha
mov
pop
push
push
push
ret
adc
and
dec
mov
rcr
mov
sbb
mov
add
loopne
out
call
pop
or
stc
mov
mov
xchg
or
sub
rol
jbe
xor
and
mov
mov
dec
jae
stos
repz
jb
fscale
pop
mov
inc
ds
ret
outs
sub
cmp
cwde
and
mov
xor
add
add
cdq
outs
mov
xor
repz
cdq
add
call
push
nop
fadd
bnd
inc
jp
jge
call
pop
ret
mov
dec
mov
inc
fnstsw
dec
lea
mov
and
shl
cwde
fidiv
ss
fwait
retf
cs
sub
sub
cmp
dec
retf
pop
mov
xchg
mov
adc
outs
(bad)
mov
icebp
popa
sub
loop
pusha
jnp
or
add
out
mov
xchg
je
movs
ret
out
sbb
cmp
mov
fwait
push
jecxz
mov
cdq
lock
and
out
pop
push
and
sahf
out
or
(bad)
mov
pop
and
jb
sub
test
push
mov
push
int
in
jp
out
sar
jne
stos
sbb
inc
out
pop
cld
std
cmp
es
and
call
mov
clc
push
pop
mov
fwait
pop
inc
sbb
inc
adc
std
mov
cmps
jmp
jge
das
clc
(bad)
jb
mov
and
outs
adc
sbb
scas
push
(bad)
pop
repz
push
mov
dec
int
cmps
sbb
repnz
pop
loopne
mov
push
sub
ja
pusha
pop
ins
sbb
(bad)
fadd
lds
call
or
sahf
outs
jg
iret
into
adc
sub
data16
or
ss
mov
push
sub
(bad)
ficom
inc
icebp
mov
ss
cwde
inc
stc
jmp
jb
movs
mov
fs
xchg
inc
or
mov
retf
fist
mov
fstp
jle
xchg
repz
jmp
movs
xchg
lea
cmps
mov
xor
fdiv
fcmovnbe
dec
fstp
clc
aam
dec
ins
das
mov
inc
jae
mov
adc
sti
js
xor
scas
lea
adc
movs
ror
(bad)
not
jne
jge
mov
and
mov
pop
in
mov
or
out
mov
aad
mov
retf
and
enter
adc
sub
rol
mov
(bad)
ret
fist
lea
rcr
call
sub
jge
fsub
push
push
xchg
cs
cmp
neg
xor
addr16
pop
add
js
test
xchg
lahf
xchg
push
sbb
cmp
test
loopne
std
push
aad
mov
inc
shl
clc
test
pop
nop
mul
xchg
xor
jg
test
push
mov
jg
fs
outs
scas
mov
repnz
xchg
ret
adc
pushf
jmp
push
mov
sbb
mov
shl
adc
in
shl
add
ss
stc
retf
xchg
aam
lds
(bad)
sti
dec
pop
dec
ss
xor
fmul
fs
(bad)
mov
cmp
or
test
js
add
test
add
(bad)
out
adc
add
mov
mov
mov
mov
inc
push
or
mov
add
mov
jle
lods
fild
outs
push
mov
jmp
inc
cmp
push
daa
xchg
pop
mov
cmp
and
mov
data16
inc
fs
fidivr
cwde
shr
(bad)
loope
in
xchg
xor
inc
dec
xor
mov
inc
mov
add
inc
stos
lock
mov
dec
pop
das
pop
ins
dec
pushw
sahf
popa
cwde
(bad)
in
dec
push
mov
pop
ret
mov
xchg
cmps
xor
cwde
mov
jnp
pop
add
or
repnz
into
int
stc
sub
mov
xor
mov
jb
sub
aam
data16
or
xchg
xchg
loopne
xchg
push
retf
push
je
push
push
in
out
fisttp
iret
ficom
out
mov
xor
adc
inc
jp
jns
dec
sahf
(bad)
xor
mov
sub
cli
call
in
fadd
cli
mov
sbb
and
std
(bad)
and
sub
cmp
xor
jp
out
sahf
adc
mov
pusha
stc
xor
arpl
xchg
pop
push
add
aas
xchg
pop
fisttp
call
cmc
cmp
fwait
imul
pop
or
dec
enter
test
mov
and
fsub
test
fadd
sbb
icebp
pop
jp
mov
jae
jle
nop
push
xor
ss
popa
sbb
icebp
mov
pop
retf
lods
repz
(bad)
jmp
mov
std
stos
sar
leave
arpl
in
push
jecxz
inc
mov
sahf
and
ja
mov
xor
mov
aaa
mov
cmps
mov
sbb
jp
add
cmp
mov
adc
pushf
adc
cwde
leave
push
cs
jge
rcl
fbstp
sub
or
fisttp
push
jle
out
adc
or
mov
(bad)
mov
cmps
loope
cmp
in
push
push
dec
ret
inc
pop
and
push
les
sahf
out
xchg
add
push
retf
sbb
inc
fcom
mov
or
push
pop
loopne
retf
mov
ins
jae
jle
aas
je
push
hlt
add
lds
jb
add
jnp
and
jns
div
xchg
mov
movs
test
(bad)
mov
bound
dec
loop
push
dec
fadd
cmp
push
xchg
and
pop
jne
shr
loop
dec
ss
test
xchg
or
inc
jb
retf
jmp
lds
mov
popf
mov
leave
pop
pop
imul
add
push
sar
adc
sbb
inc
push
out
dec
not
fimul
dec
push
ret
cmovp
loope
push
xor
jg
sbb
push
xor
mov
xchg
(bad)
push
xchg
faddp
pop
call
mov
mov
scas
cdq
int3
into
arpl
(bad)
jmp
lods
sub
scas
sbb
mov
lahf
pop
xor
or
add
lahf
dec
dec
leave
pusha
sub
push
dec
mov
pop
call
mov
mov
sbb
test
fwait
retf
imul
mov
ret
or
cmp
sub
mov
cmc
rol
loopne
push
aas
and
in
mov
pop
pop
lods
and
es
dec
stos
sub
fdivr
xchg
imul
adc
inc
call
jmp
out
jae
jbe
add
sub
lea
mov
mov
call
fwait
leave
fisttp
shr
dec
jne
mov
in
mov
mov
sbb
dec
xor
jmp
ja
retf
push
jbe
lods
xor
lea
mov
int
ja
cmp
in
sub
mov
or
jecxz
xchg
lds
ret
pop
pushf
adc
ss
nop
pop
xor
sub
push
mov
rcr
or
mov
push
lock
bound
sbb
cmp
cmps
adc
aas
mov
mov
fwait
and
leave
cmp
push
int
aaa
mov
mov
mul
jge
in
in
aam
xchg
fcompp
ins
cwde
or
cmovo
in
mov
xor
cmps
movs
nop
bound
ja
movs
jmp
test
pop
xor
pop
inc
arpl
add
adc
sub
hlt
icebp
xchg
shl
daa
es
add
pop
(bad)
lock
imul
xchg
and
shr
cli
and
sub
mov
call
(bad)
stos
popf
mov
std
dec
mov
push
jnp
fcmovne
adc
outs
xchg
enter
inc
mov
add
jnp
int3
jno
outs
int
jnp
cmps
repnz
js
xchg
mov
xchg
add
lock
or
je
mov
push
mov
jnp
fldenv
enter
ss
stos
xor
or
out
ds
out
ret
(bad)
xor
in
bound
push
jecxz
lods
mov
push
or
cdq
sub
sahf
test
push
(bad)
push
pop
es
das
shl
std
and
ret
outs
pop
sahf
ss
jp
mov
mov
cmp
dec
push
jp
outs
out
mov
gs
dec
pop
sub
adc
adc
mov
loop
mov
fidiv
clc
cmps
pop
js
loope
pop
je
fistp
scas
push
sbb
sbb
dec
loope
dec
call
mov
dec
jge
jmp
popa
out
fstp
loope
cmp
jb
or
icebp
mov
ror
mov
ds
xchg
and
mov
inc
xchg
cdq
iret
ds
pusha
test
std
shl
cmp
mov
jne
hlt
or
pop
dec
jno
movs
push
sbb
sub
mov
js
mov
cmp
int
xlat
aad
call
outs
inc
(bad)
and
int3
lds
into
add
test
pop
bound
jb
clc
xor
bound
pop
popa
pusha
scas
out
in
xchg
jmp
lock
push
dec
sub
xchg
pop
adc
dec
dec
add
in
mov
imul
in
pop
fmul
sbb
and
iret
mov
cld
into
mov
adc
movs
leave
stos
pop
das
push
sbb
sar
jns
add
cmp
cmp
sti
cmp
call
jmp
stos
icebp
push
xlat
movs
loopne
call
adc
fsub
inc
mov
cmp
jbe
leave
add
adc
adc
cmps
mov
pop
dec
mov
push
jecxz
sub
pushf
(bad)
sbb
nop
mov
outs
outs
dec
fbld
out
sbb
mov
mov
jl
jne
adc
sti
xchg
repnz
fsub
int
leave
pop
inc
lods
mov
sar
les
adc
jb
jp
sbb
sbb
xor
add
call
adc
mov
cmp
inc
or
out
pop
inc
push
dec
ins
push
test
adc
mov
xor
inc
imul
mov
fisub
(bad)
push
push
into
gs
adc
test
xchg
xchg
cmp
adc
mov
sub
cli
push
das
push
sub
retf
rcl
in
cmp
or
es
add
or
or
mov
lds
mov
leave
or
(bad)
dec
dec
inc
mov
push
ja
adc
out
dec
jp
mov
adc
push
or
jno
ds
sbb
jg
(bad)
cli
jbe
cmp
leave
mov
push
bound
lea
aad
dec
sub
fild
ja
dec
int
add
cmp
call
mov
rcl
in
cli
push
cmp
fsubr
inc
cmp
jge
adc
je
add
out
or
scas
je
xchg
mov
stos
fiadd
and
(bad)
jne
lahf
sub
pop
cmp
ja
and
sub
mov
int3
mov
inc
xchg
pop
lock
mov
sub
test
retf
adc
sbb
inc
call
cdq
dec
pop
pop
add
mov
sbb
das
imul
into
adc
xor
jno
ret
sbb
addr16
popa
xchg
(bad)
xchg
and
mov
leave
adc
and
add
cmp
jle
xor
movs
cmc
mov
or
loop
push
pusha
xor
fisub
xchg
jnp
xor
cmp
out
movs
ds
adc
push
or
call
fld
inc
jbe
jmp
arpl
retf
jle
xchg
mov
lods
test
dec
adc
das
(bad)
in
sbb
test
add
in
sar
jae
jl
stc
lahf
dec
add
inc
mul
jae
sub
pushf
sbb
jae
repnz
ss
dec
cld
dec
and
fnstenv
jne
pop
test
in
xchg
add
cmp
(bad)
push
lock
rol
(bad)
fcmovnu
test
dec
std
cld
ja
fwait
xlat
ret
dec
xchg
push
inc
pop
ins
mov
fs
add
mov
je
stos
mov
or
add
cmp
mov
or
pop
push
pop
jl
clc
jne
test
mov
rol
cli
and
clc
add
inc
pop
(bad)
jo
pop
jmp
(bad)
icebp
mov
fidiv
leave
ins
in
cmp
inc
shl
lods
ja
inc
data16
xchg
ins
push
push
xor
adc
pop
cmp
mul
mov
pop
lods
rol
test
ds
mov
sti
fdivr
sahf
dec
repnz
add
imul
lock
(bad)
in
mov
inc
icebp
leave
out
push
repnz
push
iret
je
sahf
mov
fidiv
mov
ss
out
aad
aam
xor
std
aam
popf
mov
(bad)
add
mov
(bad)
(bad)
jp
movs
ret
(bad)
inc
jbe
(bad)
mov
(bad)
test
mov
push
dec
outs
adc
repz
iret
jmp
hlt
iret
push
cmp
pop
sahf
push
adc
in
jle
rcl
xor
push
mov
stc
data16
clc
std
movs
into
aam
outs
mov
push
mov
std
cmp
pop
cmp
lock
je
inc
ja
pop
inc
out
daa
or
adc
mov
cwde
xchg
stos
dec
aam
cmp
mov
xchg
(bad)
jmp
sub
stos
fwait
or
xchg
sbb
jl
jb
mov
pop
add
popf
aas
inc
push
xor
and
sbb
mov
mov
popa
xchg
retf
xor
jmp
adc
kmovb
ret
sbb
jle
jmp
push
inc
push
sbb
jbe
rcl
nop
movs
xchg
in
mov
lds
or
sbb
(bad)
das
push
and
ja
cdq
push
daa
ja
add
inc
int3
push
in
inc
mov
mov
stos
jmp
sbb
pop
pop
(bad)
(bad)
outs
mov
test
call
xchg
ds
inc
nop
into
xor
jns
pop
push
scas
jmp
dec
jmp
xor
call
cli
mov
cmp
int3
cmps
ror
iret
jmp
pop
jl
loop
xchg
retf
sti
mov
push
pop
lods
sub
adc
xchg
call
jbe
call
daa
enter
out
xchg
outs
pop
and
inc
dec
or
mov
xlat
mov
out
mov
in
test
call
jmp
rcr
adc
jns
out
inc
and
in
pop
lahf
hlt
cmp
or
sub
repnz
cwde
xor
call
(bad)
cli
lods
ins
outs
cmp
shr
sbb
pop
jmp
xchg
mov
(bad)
dec
pop
lea
in
sub
(bad)
xor
clc
repz
into
call
movs
ss
(bad)
ficom
js
std
sub
mov
jecxz
mov
mov
stos
or
bnd
outs
(bad)
mov
cmp
add
inc
lods
lea
scas
(bad)
js
add
(bad)
pop
mov
popf
leave
out
jle
ret
lods
pop
mov
jo
dec
das
inc
push
shl
jecxz
mul
(bad)
add
jmp
add
mul
cmps
add
mov
fwait
std
xor
nop
sbb
jp
les
xor
lea
into
mov
xor
sbb
imul
cmp
ss
xor
mov
xlat
ins
adc
jmp
outs
popa
ror
jbe
cmp
inc
retf
hlt
fs
inc
or
ret
leave
mov
adc
sub
mov
push
push
popf
mov
lock
xor
sub
retf
push
push
out
cmp
lahf
xchg
lods
xor
and
(bad)
enter
or
xor
adc
pop
jl
gs
dec
loope
shl
int
mov
aam
sbb
push
mov
or
test
or
push
or
push
dec
sti
retf
cmps
lods
sub
sbb
sbb
fist
rcr
popa
in
push
adc
add
ins
fidiv
mov
stc
jbe
mov
jnp
cmps
std
mov
idiv
loopne
sbb
sub
fst
sbb
(bad)
cmps
inc
lds
les
cld
scas
jecxz
lods
popf
push
loop
inc
enter
xchg
xchg
xchg
les
adc
push
mov
jp
xchg
push
movs
dec
mov
push
push
outs
ret
mov
out
(bad)
jmp
ds
mov
ret
movs
in
xchg
jae
cli
sbb
loop
xchg
push
out
dec
loopne
dec
pop
cwde
mov
sub
popf
scas
loop
and
push
mov
cs
fist
sub
pop
shl
jns
pop
nop
ja
sbb
into
rol
push
fwait
mov
lods
sub
js
outs
cmp
loope
mov
pop
and
lea
movs
jmp
cdq
in
mov
pusha
xlat
cld
repnz
pop
lods
aam
sbb
dec
xor
and
std
push
ss
pop
dec
push
jnp
rcr
sub
jp
adc
std
in
hlt
mov
inc
mov
add
dec
sbb
not
xor
clc
cmp
mov
jmp
add
pop
and
cli
clc
mov
jno
cs
jns
dec
addr16
(bad)
pop
outs
test
dec
int
loop
rcr
cmps
sub
sub
push
loope
aaa
dec
(bad)
fisttp
gs
ins
mov
aaa
mov
dec
xchg
lahf
and
aad
test
popf
imul
pushf
leave
mov
mov
dec
push
in
mov
cs
mul
hlt
mov
ret
pop
lods
inc
mov
stos
inc
pop
fucomip
hlt
push
pusha
pop
add
inc
pop
mov
jbe
mov
pop
cmp
stos
shl
jge
adc
push
test
or
adc
adc
imul
xor
lahf
mov
addr16
lahf
sbb
cmps
fnsave
fimul
mov
hlt
push
xchg
pop
test
jb
lock
xor
test
xchg
retf
out
out
pop
inc
adc
and
inc
lods
sub
xchg
jne
arpl
mov
or
pushf
not
stos
add
imul
inc
xlat
add
push
add
adc
push
movs
lea
js
dec
mov
lock
sar
jne
ss
pop
fimul
mov
sbb
sub
push
outs
inc
mov
ja
les
pop
rcl
ins
sub
jmp
and
test
iret
pusha
int3
aad
js
pop
lock
mov
jge
les
push
fs
or
push
leave
rcl
mov
jecxz
mov
fs
sahf
inc
inc
outs
mov
mov
aas
out
jmp
push
popa
mov
sbb
out
adc
call
cmp
leave
push
mov
lock
mov
es
mov
jecxz
cs
mov
repnz
mul
loop
xor
aam
stos
jnp
ins
in
lahf
pop
shl
shl
sbb
outs
in
cmp
pop
mov
push
imul
jle
cmps
fild
lock
and
adc
popf
mov
scas
in
mov
pop
inc
out
fisubr
push
popf
pushf
xlat
retf
mov
in
cmp
mov
mov
mov
lds
add
iret
sahf
stos
mov
pushf
add
jmp
(bad)
mov
pusha
push
test
mov
out
mov
or
retf
cmp
xchg
das
jp
int3
fs
icebp
clc
mov
sbb
sub
adc
sbb
pop
xlat
pop
(bad)
out
adc
mov
inc
mov
push
add
push
sar
scas
stos
adc
mov
dec
stos
mov
or
cmps
add
das
test
cmps
jle
push
fimul
psraw
fist
and
push
pop
lea
ret
dec
or
jge
and
cmp
lods
aas
pop
in
sbb
(bad)
fbld
fcom
lods
mov
jmp
pop
imul
sub
mov
ja
inc
adc
addr16
inc
cmc
push
inc
std
(bad)
inc
fnsave
sub
xor
cmp
add
call
mov
jg
xor
and
push
inc
adc
ret
mov
sbb
xor
add
shr
xor
sahf
pop
popf
in
dec
and
pop
sub
cmps
mov
dec
daa
add
mov
jnp
sbb
pop
pop
loopne
call
push
inc
test
loope
mov
sahf
jo
dec
scas
jo
outs
dec
pop
retf
xor
jbe
mov
xchg
pushf
hlt
fistp
sub
(bad)
cmp
call
add
pop
lods
adc
sbb
out
bound
cld
or
push
dec
imul
mov
and
ins
out
cdq
jnp
arpl
cmp
mov
addr16
and
in
dec
mov
shl
aas
loopne
test
je
iret
push
or
xchg
sar
sub
mov
jmp
jmp
call
adc
arpl
(bad)
rol
add
inc
push
cli
cmps
mov
loopne
jb
mul
push
mov
adc
cmp
cmp
pop
cmp
cmps
fstp
jbe
pusha
add
cmp
(bad)
mov
scas
dec
loopne
dec
jle
repnz
push
lods
jb
jo
cmc
in
inc
xchg
in
jg
cmp
or
dec
sar
lahf
dec
pop
call
pushf
jns
mov
(bad)
jle
movs
jl
xchg
mov
shr
inc
cmp
fcmove
clc
jmp
dec
leave
retf
and
pop
rcr
or
enter
inc
xor
retf
jmp
mov
imul
adc
inc
dec
pushf
sub
dec
jg
aas
dec
sub
push
sub
add
adc
push
int3
jne
lock
inc
mov
mul
mov
pop
mov
out
pop
xor
fidivr
jp
fbld
retf
cwde
cli
sahf
dec
rcl
(bad)
jno
sub
xchg
mov
popa
xchg
pop
dec
xchg
daa
ficomp
push
jge
cmp
not
mov
fwait
stc
popa
ret
mov
fdivp
repz
jmp
or
push
ins
test
sub
mov
test
stos
push
stos
inc
sbb
dec
aaa
jmp
mov
mov
mov
mov
les
dec
cmc
inc
sub
and
xor
jle
(bad)
xor
add
outs
out
jae
and
ja
mov
popa
cmp
cmp
adc
dec
mov
bswap
mul
jnp
cwde
xor
into
imul
add
pop
test
jle
jecxz
int3
dec
mov
xchg
cs
pop
shl
inc
pop
xlat
mov
in
stos
cmc
push
leave
cmc
xchg
xchg
push
sbb
jbe
rcr
cld
xor
mov
dec
pop
ss
pushf
(bad)
(bad)
hlt
pop
sbb
jmp
jmp
lahf
add
or
sbb
je
xor
leave
add
inc
fisttp
mov
adc
test
(bad)
jle
mov
or
jle
sbb
cmp
mov
mov
fist
call
inc
es
dec
add
or
test
cld
cdq
adc
mov
ror
sub
out
dec
push
hlt
(bad)
push
cmp
fwait
hlt
cs
sti
dec
lahf
add
in
add
mov
out
shl
sub
xchg
mov
gs
stos
jecxz
lahf
sub
mov
xchg
push
xchg
std
pushf
add
adc
push
pop
pushf
inc
ja
xchg
fwait
rcr
push
push
push
push
test
mov
(bad)
or
sub
add
dec
call
sbb
jno
xchg
enter
sub
xchg
push
(bad)
ins
nop
in
pusha
lds
out
push
lock
push
add
inc
and
loop
iret
loopne
aad
ret
(bad)
ja
pushf
std
push
sbb
and
or
pop
sbb
mov
dec
sbb
daa
dec
xor
mov
pop
lea
xchg
lods
and
iret
mov
aad
in
pop
adc
sbb
sti
mov
movs
popa
outs
retf
mov
loope
and
je
pushf
mov
enter
dec
mov
test
loop
or
mov
inc
ss
jbe
es
icebp
jecxz
or
mov
retf
je
and
add
dec
sub
scas
cmp
dec
pop
in
jae
(bad)
into
sahf
in
stc
cs
mov
jae
xchg
(bad)
scas
lods
sbb
mov
xchg
dec
out
cld
rol
mov
dec
cmpxchg
movs
in
xor
jle
cdq
cmp
iret
and
jl
jle
es
cmps
push
inc
xchg
push
jns
aas
adc
(bad)
scas
and
aas
push
mov
das
loop
int3
mov
sub
cmc
pushf
mov
in
dec
sub
pop
xor
mov
xor
neg
in
and
cmp
std
add
adc
test
cmp
fistp
cmp
add
hlt
sar
sti
(bad)
mov
cwde
pop
and
into
repz
jg
scas
jno
mov
fsubr
inc
repnz
(bad)
sub
fs
add
inc
dec
nop
mov
mov
xor
data16
movs
and
adc
pop
pushf
pop
rcl
outs
xor
xchg
test
push
inc
xor
cmc
sbb
data16
pop
or
add
mov
ss
repnz
pop
push
imul
test
daa
jmp
and
and
lea
inc
mov
jne
push
fnstenv
adc
icebp
and
sahf
mov
mov
retf
fnstenv
xchg
sahf
stos
inc
or
icebp
pop
jne
xlat
mov
mov
jns
xchg
lods
repz
cmp
add
in
(bad)
syscall
mov
pushf
adc
outs
(bad)
sub
xchg
xchg
push
scas
aaa
cli
ds
or
pusha
or
movs
push
(bad)
outs
fwait
pop
je
outs
jg
das
fisub
sub
sbb
mov
xchg
mov
lea
adc
je
jg
div
(bad)
div
xchg
lods
rcl
scas
mov
pop
cmps
sbb
sbb
cmp
adc
push
inc
repnz
gs
stc
xchg
pop
loop
lods
mov
xor
int
and
int
gs
sbb
dec
mov
in
inc
push
rcr
xchg
and
add
rol
movs
sbb
jne
int
jmp
and
lock
sub
clc
(bad)
mov
ret
cmps
push
ins
data16
jnp
sbb
xlat
jg
push
sbb
pop
or
jno
or
push
inc
arpl
pop
xchg
mov
leave
mov
jo
pop
adc
cdq
repnz
imul
jge
pop
push
pop
in
push
jecxz
fxch
jo
mov
push
push
jmp
mov
jmp
adc
lahf
lock
xchg
or
mov
pop
add
data16
xor
xor
icebp
and
xchg
mov
(bad)
(bad)
xor
hlt
mov
das
(bad)
nop
jbe
jnp
int
jp
jnp
pop
lods
cwde
daa
sbb
inc
adc
or
out
idiv
mov
push
or
leave
cmp
jae
gs
(bad)
test
call
int
hlt
call
sahf
aam
test
mov
mov
out
mov
stc
loope
(bad)
mov
xor
pusha
jne
add
or
add
outs
jnp
sub
into
xor
mov
fwait
rcl
rol
pop
dec
mov
sub
mov
arpl
sbb
xor
jb
pop
cs
pusha
pop
leave
and
jne
repnz
pop
adc
js
rcl
psllq
sub
in
sti
pop
or
ficomp
loop
std
mov
adc
xor
xchg
push
jae
retf
xchg
or
jae
cmp
push
ret
nop
pushf
dec
lea
and
mov
jbe
inc
jo
lahf
cmc
popf
not
pop
xor
das
retf
mov
sub
cmp
call
push
mov
inc
adc
xor
jne
mov
cmp
add
outs
loop
iret
stos
inc
repz
adc
push
sub
xlat
jmp
comiss
xor
xor
test
jno
aas
out
sub
shl
push
push
mov
std
cld
jge
adc
lahf
out
not
scas
ffree
cmp
mov
call
and
adc
imul
mov
int3
mov
outs
mov
or
inc
inc
xchg
cwde
jecxz
dec
jmp
push
sub
adc
mov
push
popa
int
pop
scas
ficom
call
adc
jbe
push
lods
pusha
mov
push
mov
jg
dec
pop
gs
arpl
(bad)
mov
cwde
or
adc
mov
inc
loopne
jl
cmp
mov
cmc
bound
stos
in
mov
das
call
sahf
mov
bound
xor
adc
fsubp
movs
lock
and
mov
and
repnz
or
push
mov
shr
or
das
and
retf
adc
push
jae
inc
xor
aad
cwde
cmp
mov
call
jb
ret
sbb
aaa
xchg
jmp
jge
aam
bound
inc
mov
sbb
cmps
push
aas
ds
shl
jae
lods
arpl
pop
loopne
inc
sub
dec
xchg
cmp
mov
or
add
ffree
movs
add
cli
push
add
aam
jle
lods
mov
jns
outs
lsl
xor
sahf
mov
pushf
lds
scas
(bad)
dec
aad
adc
jecxz
(bad)
out
into
mov
pop
es
xchg
adc
mov
loope
mov
sbb
inc
sub
xchg
test
ins
inc
lods
pop
gs
push
push
sub
xchg
bound
add
mov
das
test
(bad)
idiv
dec
sahf
mov
out
popa
pop
test
jbe
xor
sub
pop
outs
retf
arpl
xor
out
mov
cmps
out
scas
inc
xor
adc
cwde
fsub
jg
sub
pop
jns
push
add
popa
jle
xor
aas
mov
sbb
xchg
ins
push
mov
test
cmp
loop
mov
add
in
inc
loope
(bad)
jne
sti
push
xchg
dec
cdq
(bad)
sbb
and
mov
movs
adc
les
inc
sub
mov
gs
jle
adc
es
out
adc
enter
ja
adc
sub
lods
fcmovbe
repnz
push
js
into
cmp
jmp
jo
(bad)
outs
jmp
inc
ins
jns
add
mov
inc
out
sbb
dec
cmc
hlt
in
outs
mov
pusha
fsubr
mov
cwde
int3
dec
ret
ins
mov
cdq
out
jo
clc
jne
vpunpckhbw
cmp
xchg
and
(bad)
xchg
out
add
cdq
repnz
or
icebp
mov
sti
xor
push
cdq
lea
dec
cld
push
test
mov
mov
cmp
je
dec
mov
shl
jb
aas
js
in
mov
mov
and
push
sub
int
out
hlt
dec
aam
dec
test
(bad)
sti
jg
ins
lods
dec
rcr
xor
pushf
loop
scas
pop
icebp
loopne
(bad)
inc
outs
adc
adc
sub
cwde
pop
push
sbb
outs
mov
add
jp
pop
jbe
stos
push
(bad)
jmp
call
push
push
jno
dec
mov
mov
iret
or
(bad)
scas
dec
and
sub
xor
xchg
in
and
movs
call
cmp
movs
pop
js
cmp
inc
jge
sbb
xor
sub
sbb
mov
fist
bound
shr
sub
adc
add
rol
cmp
add
jmp
jno
sbb
add
push
inc
sub
pop
xor
pop
sbb
add
mov
pushf
sbb
jbe
(bad)
in
add
repnz
mov
sti
ins
lea
out
mov
addr16
mov
stc
frstor
call
add
iret
fstp
in
lahf
push
sysret
aas
popf
mov
cmp
inc
mov
mov
cmp
gs
pop
(bad)
enter
lea
std
popa
out
out
fs
outs
ins
int3
sub
cmp
cmp
into
retf
push
mov
cli
or
imul
push
retf
mov
sbb
mov
outs
and
fldcw
or
mov
cmp
and
cmp
les
add
add
fstp
(bad)
repnz
xchg
call
mov
lea
inc
add
mov
sbb
es
fs
sbb
lahf
inc
pushf
sub
pushf
xchg
mov
inc
cdq
sub
repz
pop
bound
jmp
daa
ja
out
stos
cld
fidivr
cmc
in
das
iret
(bad)
fist
scas
es
es
pop
pop
inc
cmp
sub
loop
test
jmp
inc
mov
in
loop
ret
mov
cmps
sar
stc
loope
add
push
pop
imul
cmps
sbb
mov
jecxz
add
push
jno
lods
cmp
fidivr
sbb
mov
mov
push
xor
movs
rol
or
and
out
outs
pop
push
mov
cmp
push
sub
pop
idiv
lods
lods
ins
sbb
adc
mov
nop
push
mov
enter
dec
in
into
nop
dec
clc
adc
sbb
clc
or
push
inc
mov
sbb
inc
cmps
in
sbb
scas
mov
out
xor
adc
gs
inc
fwait
retf
adc
cli
xchg
arpl
movs
fmul
retf
sahf
cvtpi2ps
fsubr
push
push
dec
cs
movs
inc
test
cmp
in
mov
(bad)
(bad)
jge
xchg
ins
mov
lods
or
in
hlt
jbe
inc
aaa
ss
stos
push
movs
movs
adc
or
loopne
ret
mov
or
ins
mov
es
enter
ficom
or
adc
fucomp
xchg
push
pop
sub
iret
stos
test
popa
int3
add
fldenv
cmc
cld
push
sub
hlt
dec
int
out
das
adc
test
sti
push
sub
in
test
leave
xchg
sub
jge
jb
xchg
or
into
icebp
in
icebp
mov
movs
retf
mov
jl
mov
jge
aas
jo
pop
loopne
les
into
add
or
push
rcr
xlat
(bad)
and
sbb
pop
add
push
sbb
or
mov
test
or
idiv
mov
push
aad
shr
and
lock
or
jl
xchg
dec
jp
or
inc
icebp
sub
sar
into
movs
fcmovb
mov
push
cmc
dec
cs
adc
xchg
iret
sahf
fwait
xor
sub
push
or
adc
int
and
scas
pop
xchg
xchg
mov
jne
jno
out
cli
pop
xchg
push
add
iret
cmp
or
pop
adc
into
and
or
push
jg
ds
int
sub
test
sub
outs
push
retf
jo
data16
stos
dec
dec
xor
mov
test
mov
(bad)
int3
bswap
aas
cmps
pusha
push
dec
aaa
xlat
cli
jno
arpl
push
(bad)
add
ret
cmp
cmc
fsubr
in
repz
jp
js
jecxz
jmp
js
cmp
adc
pop
or
ror
fisub
(bad)
je
lock
pop
jno
fadd
xchg
add
mov
das
xchg
sub
xor
sbb
mov
loop
ds
fcmovne
mov
cmp
iret
mov
mov
pop
mov
add
pushf
sbb
pop
add
mov
inc
sbb
call
(bad)
xor
retf
jno
ins
into
pusha
xchg
and
shl
gs
inc
mov
aas
adc
pop
mov
cmp
fwait
das
dec
adc
daa
or
loop
cwde
pop
cmp
sub
in
hlt
jg
inc
mov
cs
je
mov
mov
adc
cmp
cmc
sbb
xchg
mov
lods
mov
stos
inc
(bad)
movs
imul
cmps
cmp
xchg
call
dec
jmp
push
add
stc
aas
mov
lahf
stos
fisttp
pusha
inc
cwde
(bad)
loopne
mov
ret
pop
dec
adc
xor
xchg
cld
(bad)
leave
jmp
out
jnp
dec
sub
add
sub
jae
leave
pushf
aaa
lods
sbb
fs
call
aas
addr16
int
dec
mov
mov
push
xor
dec
ins
pushf
ret
push
sbb
inc
movs
or
fisub
cwde
mov
jbe
(bad)
pop
push
sahf
sub
shr
jb
fidivr
and
js
jg
cmp
movs
adc
jbe
mov
enter
sbb
loope
aaa
xor
jo
xor
xor
xor
push
xchg
pop
xor
fcomp
add
ds
jb
mov
sbb
imul
sub
scas
jmp
js
sbb
mov
mov
sar
mov
enter
mov
(bad)
mov
scas
push
mov
out
pop
mov
push
push
sbb
adc
arpl
and
mov
daa
or
loope
mov
mov
shl
outs
nop
jne
iret
cmp
popa
fstp
mov
test
add
sub
or
cs
stos
test
jge
and
xchg
ja
fisttp
int3
xchg
shr
(bad)
std
push
test
jne
jae
sub
add
mov
rcl
inc
mov
sub
pop
(bad)
pop
sub
sbb
push
adc
ret
call
daa
and
aam
pop
rcl
scas
pop
mov
aaa
cmp
fstp
pop
out
mov
retf
out
xchg
mov
rcr
inc
adc
fnsave
mov
loope
and
fistp
jb
movs
push
mov
ror
or
dec
push
test
cmp
jne
pop
cwde
pushf
fistp
and
sti
mov
arpl
shl
shl
push
adc
xor
jge
jmp
and
push
out
and
xor
push
xchg
fst
outs
inc
xor
ja
mov
xchg
sub
jno
(bad)
ficom
pop
in
cmps
dec
pop
sub
outs
ins
mov
sbb
mov
cmp
in
or
push
ret
lahf
dec
jg
aaa
jnp
push
push
scas
outs
sbb
push
cmp
pushf
lds
cmp
and
scas
rcr
not
mov
fdivrp
hlt
and
cld
sar
and
sahf
push
stos
jbe
cmp
cmp
xor
pop
cwde
je
xlat
scas
cwde
cmps
ret
add
fs
setb
inc
sub
dec
cld
retf
add
addr16
mov
add
jo
adc
jmp
push
fcomp
mov
and
mov
inc
sar
scas
jbe
ins
retf
jecxz
push
mov
rol
cmps
lods
(bad)
dec
rol
sar
sbb
push
loopne
dec
ins
mov
cmc
xor
stos
fadd
shl
push
in
fidivr
mov
sbb
leave
repz
mov
xchg
push
shl
inc
mov
adc
icebp
loopne
xor
fcomp
movs
idiv
out
xchg
adc
jge
inc
push
stc
or
das
or
jge
idiv
inc
sti
cli
xchg
popf
ret
ins
cmp
or
(bad)
ret
repz
sub
cwde
mov
xchg
lods
dec
xor
push
and
or
mov
mov
call
xor
mov
clc
pop
or
stos
stos
push
(bad)
cmp
repnz
pop
test
pop
clc
jmp
ss
pop
pop
popa
nop
fisub
pop
sub
adc
pushf
sti
mov
dec
bound
out
aas
sbb
fdiv
push
push
sub
das
lahf
int3
push
xchg
push
mov
push
cmp
jnp
inc
loope
and
xchg
cmp
movs
push
xor
and
mov
pop
(bad)
jns
cmps
sbb
and
and
cld
add
adc
mov
fld
int3
mov
loopne
xor
jmp
loop
push
add
ret
jecxz
xchg
loope
rol
fwait
push
fbld
std
ds
sahf
push
ds
jno
retf
sub
sub
imul
jno
dec
adc
in
daa
jo
(bad)
add
inc
adc
cmp
mov
mov
(bad)
xlat
mov
mov
pop
(bad)
push
push
in
shr
mov
mov
test
or
mov
je
and
mov
inc
push
int
and
scas
shr
int
ror
lock
dec
jp
addr16
icebp
and
repnz
les
loopne
cmp
jl
imul
jge
jl
push
dec
sti
imul
stos
xchg
les
cli
jle
jmp
scas
pop
dec
dec
popa
mov
xchg
jo
int3
enter
jne
lahf
push
neg
mov
xor
popf
cld
cdq
outs
movs
outs
mov
ret
jmp
sbb
xchg
fwait
or
cmp
xor
jne
jg
ins
jl
jnp
mov
and
pop
xchg
mov
mov
les
cmp
fcom
sbb
cdq
jne
imul
cwde
ds
inc
mov
or
ret
add
jl
bswap
jcxz
mov
in
ins
mov
aaa
in
clc
leave
fist
ja
mov
jns
and
out
cmc
idiv
test
jne
pop
outs
push
cdq
or
mov
mov
mov
jns
xor
mov
adc
sbb
or
jns
fst
fdiv
add
icebp
push
outs
xor
adc
clc
or
cmc
or
sub
mov
gs
push
div
scas
or
xchg
out
(bad)
std
cmps
int
inc
cdq
mov
daa
jle
call
cs
idiv
cmp
outs
ret
test
ss
in
or
in
das
push
lock
mov
les
je
fist
hlt
(bad)
cmp
movs
mov
in
push
(bad)
lahf
ins
repnz
add
sub
mov
out
cld
mov
mov
and
xor
dec
fdivr
xchg
cli
xor
loopne
pop
scas
xor
loop
call
lods
add
or
adc
mov
es
daa
xor
and
push
(bad)
or
repz
xchg
mov
mov
and
aaa
outs
int
popf
les
mov
jbe
xlat
add
sbb
fwait
ror
mov
scas
xor
cld
xchg
in
inc
sti
enter
fmul
pop
jmp
cmp
imul
mov
addr16
mov
cmp
stos
adc
xchg
enter
ins
outs
jp
sbb
jecxz
inc
bound
or
xor
out
jg
test
aas
dec
cmp
cmp
or
push
inc
cmp
leave
dec
outs
out
pop
mov
dec
popa
(bad)
and
rol
cmp
jns
mov
cmp
dec
dec
adc
adc
js
inc
jmp
push
jnp
retf
and
shl
sbb
mov
dec
aas
push
mov
les
imul
(bad)
cmp
dec
es
cld
ds
xor
fnclex
jge
dec
sbb
mov
sbb
inc
xchg
push
repnz
and
push
pop
fist
xor
sub
enter
icebp
xor
mul
inc
scas
cmp
push
pop
jecxz
ins
iret
pop
ja
out
mov
loop
mov
(bad)
cmp
jb
mov
jbe
imul
dec
jb
mov
jmp
(bad)
mov
retf
ins
aam
test
push
jmp
sbb
out
pop
push
sti
pop
out
jp
mov
push
mov
sub
jbe
bound
lods
mov
call
int3
(bad)
and
cmps
stc
and
jo
in
fs
or
add
pushf
or
inc
mov
push
scas
sub
or
xchg
sbb
jle
and
imul
and
dec
dec
(bad)
shr
cmp
clc
mov
lock
push
jecxz
ficom
or
cmp
out
xchg
mov
push
jecxz
jge
xchg
pop
adc
outs
stos
ins
sbb
cld
mov
push
mov
push
push
mov
ss
bound
or
sub
mov
or
cmp
into
shl
sar
sub
in
inc
jp
clc
arpl
sub
jns
fldcw
lods
sahf
jnp
jl
add
lea
repz
cmp
adc
sub
dec
mov
iret
mov
ret
dec
fwait
or
dec
or
dec
cli
daa
(bad)
lods
cmp
and
pop
jno
push
xor
mov
mov
xor
push
sbb
imul
adc
lods
xchg
cld
mov
inc
push
movs
sub
and
fucompp
cli
popf
mov
xchg
and
adc
je
mov
ja
aaa
add
mov
sbb
push
push
or
push
inc
sub
int3
ins
outs
or
pop
fs
sub
mov
das
outs
cmp
push
jg
int3
inc
add
adc
into
dec
mov
hlt
and
fs
je
mov
int
fs
cdq
jo
jmp
sub
inc
cmps
and
add
or
push
xor
adc
dec
sub
test
jbe
rol
mov
inc
sbb
or
push
imul
cli
push
(bad)
movs
pop
mov
fadd
inc
sbb
jmp
sbb
cmc
fadd
push
imul
div
je
test
xor
cmp
push
jae
mov
adc
shr
(bad)
lahf
aas
cmps
pop
or
rcr
push
and
sbb
mov
(bad)
mov
test
add
pusha
and
lea
inc
rol
adc
popa
mov
xchg
sti
loop
inc
js
lahf
push
fisttp
aam
pop
test
xchg
je
jmp
jnp
sub
jne
call
jg
xchg
sbb
mov
jmp
out
mov
add
mov
popa
sbb
inc
push
xchg
push
jae
mov
mov
mov
aas
jecxz
mov
fs
xchg
fisttp
sbb
add
lea
push
call
jp
pop
mov
popf
inc
pop
dec
inc
mov
cmp
pushf
ins
add
add
daa
jecxz
add
shl
test
cdq
sbb
jne
add
xor
les
mov
inc
dec
cmp
cld
inc
scas
mov
inc
stos
cmp
sbb
jmp
sub
in
xchg
test
and
(bad)
dec
xor
rcr
xchg
gs
(bad)
ja
push
repnz
jl
call
repz
imul
jg
not
adc
mov
sahf
pusha
dec
push
and
push
push
scas
and
jns
mov
shl
mov
fcos
movs
jmp
rol
push
test
lea
icebp
dec
stos
xchg
xor
adc
fld
or
adc
push
cld
enter
leave
push
sar
test
repz
or
std
not
jo
dec
pop
and
adc
inc
mov
mov
ins
sbb
pop
mov
(bad)
sub
in
push
push
fwait
outs
scas
push
jmp
xor
push
jb
mov
sbb
in
mov
adc
inc
clc
xchg
das
enter
add
jg
push
dec
mov
jne
xchg
sub
sub
dec
or
icebp
test
int3
add
sar
mov
cmp
das
(bad)
mov
fnstcw
dec
les
or
out
and
in
xchg
and
push
dec
and
or
cmps
leave
pop
and
mov
jbe
mov
test
(bad)
pushf
jb
inc
cld
mov
popa
pop
mov
jne
or
lock
push
hlt
push
sbb
and
mov
xchg
imul
add
mov
(bad)
mov
mov
bound
hlt
pop
jle
add
rcr
push
jp
rcr
sbb
shl
std
adc
and
or
push
cli
call
sub
sub
jb
jp
lods
mov
cmp
scas
cmc
sbb
cmps
inc
sub
ss
inc
ret
xor
(bad)
or
add
rol
xor
jmp
out
mov
sbb
pop
push
pushf
ret
lea
dec
sbb
add
adc
inc
ret
inc
add
ja
repnz
inc
fnstenv
inc
outs
pop
jne
xor
push
push
dec
int
sub
mov
or
fwait
cmp
bound
ins
fwait
sub
shl
sub
bound
inc
push
xchg
pop
add
jmp
pop
push
pop
adc
inc
popa
inc
shl
mov
xlat
mov
push
cs
and
jns
cdq
mov
dec
add
fistp
sub
mov
jo
and
xchg
clc
neg
xchg
adc
jns
fnstsw
mov
faddp
add
aas
pop
(bad)
shl
pop
mov
shl
dec
fcom
inc
retf
std
jge
repz
ficomp
sbb
push
xchg
push
inc
adc
cmp
data16
mov
movs
push
js
xlat
scas
dec
nop
int
sub
mov
inc
movs
push
mov
in
and
mov
cld
cdq
adc
xchg
loopne
les
inc
popa
into
addr16
ficom
jmp
(bad)
retf
jg
sub
loopne
mov
idiv
push
push
(bad)
xchg
mov
sbb
mov
pop
out
cmc
cmp
jmp
push
cmp
pop
rcl
sub
mov
stc
xchg
aaa
sbb
(bad)
xor
movs
xchg
mov
repz
call
ret
sbb
push
mov
ja
adc
movs
mov
mov
push
dec
mov
in
movs
(bad)
pop
(bad)
aad
or
mov
push
fpatan
add
dec
sahf
ins
mov
ds
mov
or
sti
cmps
xchg
mov
in
sub
cmp
pop
xchg
cdq
rcr
lahf
adc
pop
aaa
fst
xchg
xsaveopt
inc
mov
pop
call
leave
inc
mov
sub
int
mov
mov
cmp
and
and
add
jae
pop
add
int
and
hlt
xor
es
inc
mov
test
mov
(bad)
xlat
loopne
and
jno
mov
mov
pusha
cwde
add
mov
aaa
sti
mov
les
dec
loop
pop
hlt
pop
sub
mov
adc
sub
cmps
sub
pop
jb
sbb
mov
mov
push
out
jae
dec
xchg
xor
mov
pop
pop
aad
shl
loope
xchg
inc
sbb
sub
fld
adc
outs
sahf
int
xchg
int3
pop
add
xor
shl
push
push
lock
cld
pop
jmp
mov
mov
jecxz
jnp
or
push
xchg
inc
bound
pop
and
adc
and
popf
push
mov
jecxz
dec
sbb
lea
icebp
nop
or
cmp
dec
mov
xor
nop
nop
dec
xlat
lods
xchg
cmps
mov
ficomp
inc
mov
xchg
cmp
dec
or
in
js
mov
push
jne
and
outs
sahf
outs
and
pop
cmps
mov
dec
push
lods
call
lods
pusha
jmp
cmc
div
cmp
dec
push
jb
jg
push
icebp
inc
fs
ret
jge
mov
xchg
push
jbe
cmps
mov
enter
in
add
jmp
push
push
mov
popa
repz
not
pop
jg
test
daa
mov
cmp
sbb
inc
push
dec
fcom
daa
pop
xchg
jne
pop
pop
scas
push
sub
sub
mov
push
clc
or
(bad)
jb
add
loop
mov
lock
hlt
mov
scas
mov
(bad)
jge
mov
jns
mov
in
sbb
sbb
ja
mov
(bad)
call
or
fucomi
xor
test
mov
and
pop
mov
xor
add
ret
sub
in
inc
mov
mov
push
pop
(bad)
fild
mov
cmp
retf
push
fs
xor
popa
shl
(bad)
aaa
out
mov
inc
dec
jae
xchg
loope
sti
or
jnp
sbb
xor
sub
mov
mov
add
mov
ror
in
sar
cld
or
push
inc
scas
xor
out
sub
adc
mov
ja
(bad)
dec
xor
jno
mov
std
es
xor
push
pop
sbb
imul
nop
fs
mov
jb
gs
mov
rcl
lea
and
and
bound
mov
(bad)
mov
arpl
xor
dec
loope
push
enter
ficomp
mov
mov
inc
jg
aad
and
sub
cmp
sbb
inc
repz
mov
call
inc
xchg
or
(bad)
fs
movs
(bad)
dec
jmp
pop
movs
adc
retf
pop
jb
push
ds
sbb
jmp
call
fwait
into
movs
fwait
and
cmp
out
cmp
rol
cmp
cmps
call
xor
jmp
jecxz
outs
mov
arpl
pop
dec
adc
mov
out
test
mov
sub
pop
gs
test
out
sub
or
dec
xor
mov
mov
cmp
(bad)
js
loopne
daa
cld
out
cdq
jno
das
dec
jge
cwde
int3
bound
push
outs
out
push
adc
(bad)
pop
pop
xor
inc
dec
out
mov
xor
sub
pop
mov
in
adc
mov
jmp
adc
out
mov
out
or
fsubr
inc
(bad)
call
mov
adc
inc
inc
xchg
add
mov
push
adc
jno
retf
fsqrt
xor
jne
stos
mov
mov
sbb
call
rol
pop
fisub
out
sbb
dec
imul
repnz
stos
hlt
or
jo
lea
mov
mul
dec
imul
pop
fstp
test
fidiv
xor
mov
pushf
xchg
pushf
test
inc
mov
xor
lods
inc
je
and
pop
sub
nop
sbb
mov
inc
in
xchg
(bad)
clc
retf
sar
stos
cmp
dec
aam
jge
sub
or
add
daa
xor
fadd
inc
cdq
jle
push
and
cmp
imul
jp
nop
inc
pop
sbb
jns
iret
fild
push
xchg
mov
rol
cmp
js
shl
pop
mov
cmp
xchg
imul
add
cwde
dec
lock
and
mov
inc
outs
cmp
in
ja
fmul
or
push
inc
pop
and
gs
cmp
jp
iret
test
mov
cwde
and
fcmovnbe
aad
mov
(bad)
fld
jle
pop
rcl
or
fld
inc
(bad)
aas
jp
scas
ja
jo
cmp
mov
jmp
xor
sbb
mov
enter
mov
push
cmp
add
push
imul
es
mov
jp
pop
out
cs
pop
push
cmp
aam
call
push
dec
dec
xor
arpl
push
xchg
cli
std
jp
pusha
mov
mov
fdiv
out
test
popa
pop
mov
je
mov
add
mov
mov
shr
into
pop
jne
pop
ss
hlt
(bad)
enter
push
in
mov
pop
mov
enter
cwde
mov
pop
inc
fist
add
mov
or
shr
sbb
ins
xor
and
(bad)
dec
pop
or
fbstp
cmovns
jno
mov
loop
pop
xchg
not
mov
and
push
mov
cmp
sbb
xor
aad
adc
test
sub
(bad)
xchg
pop
xchg
push
push
xchg
lock
pushf
loope
pop
(bad)
push
ds
push
xchg
test
jbe
xchg
pusha
adc
inc
mov
pusha
sub
pop
fs
aad
jp
jmp
sbb
lock
(bad)
je
dec
out
cmp
mov
adc
mov
add
cli
retf
arpl
sub
fwait
shr
mov
rcl
cmps
ret
fidiv
jge
cli
push
jmp
sub
push
inc
nop
fistp
lods
cmp
xor
mov
in
scas
or
push
call
sub
xchg
out
cs
mov
jo
in
dec
and
add
mov
dec
(bad)
cli
dec
xchg
mov
sub
jmp
fld
sti
push
or
scas
adc
pop
jo
ror
ja
xchg
cmp
mov
(bad)
aad
jmp
mov
popa
sahf
mov
gs
mov
mov
std
cli
inc
cmp
mov
adc
daa
loopne
stos
stc
movs
call
loopne
xchg
pop
xor
add
out
pop
pop
xchg
test
sbb
pop
mov
test
xchg
das
jae
movs
ds
pop
mov
jmp
in
inc
dec
cmp
jge
mov
leave
mov
lock
add
pop
mov
mov
jg
cs
sbb
sbb
cmp
cs
ins
cmp
push
(bad)
in
ret
jae
cmp
sbb
jmp
push
add
dec
out
les
fst
out
and
aam
mov
ins
leave
sahf
out
out
arpl
aaa
jl
aad
push
push
sar
mov
pop
shl
cmp
push
mov
mov
jns
retf
or
test
adc
icebp
(bad)
sbb
sbb
add
cmps
leave
outs
push
(bad)
pop
pusha
aas
fnstcw
or
mov
push
mov
fs
fbld
adc
cmp
ror
xor
lahf
jnp
movs
cmp
das
fstp
adc
xchg
lea
add
xchg
imul
cmp
mov
xchg
jns
add
aad
sub
call
cmp
jmp
fidivr
mov
pop
pop
mov
mov
inc
cwde
out
cmps
dec
pop
and
in
gs
pop
inc
push
es
mov
inc
sahf
cmp
pusha
pop
dec
data16
leave
add
sub
and
pop
adc
dec
clc
ins
sub
cld
hlt
xchg
mov
jl
adc
jbe
addr16
cli
popa
daa
data16
mul
arpl
dec
ja
pop
stos
push
mov
push
mov
mov
data16
sub
sbb
repnz
mov
pop
fst
mov
mov
xchg
arpl
in
mov
pop
stc
xchg
mov
fst
retf
xchg
and
add
ds
lahf
jle
mov
retf
pop
dec
mov
fcmovnbe
scas
cmp
or
lds
repnz
int3
fbld
cmps
and
inc
cmc
push
data16
int
inc
(bad)
push
mov
push
cdq
pushf
and
cmp
mov
xchg
mov
loop
sbb
inc
mov
mov
loop
(bad)
in
iret
mov
adc
test
jns
mov
ret
lahf
loope
cmps
sub
rol
mov
and
add
push
repnz
sub
sbb
cdq
xor
fst
fmul
ja
fadd
xor
mov
ins
xchg
push
xor
push
push
mov
shl
call
mov
sbb
sbb
fsub
xchg
aas
add
or
or
stc
mov
jb
mov
rol
lock
dec
dec
rcr
iret
mov
popf
xor
push
pop
mov
sub
mov
aaa
pop
shr
mov
or
lods
popa
paddusb
push
xor
dec
in
add
mov
int3
push
ins
rcr
ret
push
xor
pop
dec
or
jl
pop
mov
mov
imul
cld
nop
mov
add
mov
leave
lods
pop
xor
jge
fisttp
xor
ja
cmp
inc
inc
and
aad
aas
loop
pop
fucomip
dec
mov
icebp
lods
or
cmp
add
dec
mov
or
push
mov
jmp
test
inc
ret
xor
jl
cs
ins
daa
push
xor
xchg
ret
test
xchg
repz
mov
aad
jge
inc
in
jmp
out
push
cli
(bad)
sub
push
sub
adc
(bad)
int3
add
bnd
jne
leave
mov
shl
push
lods
ror
sti
(bad)
and
sub
or
js
daa
jnp
(bad)
test
mov
(bad)
mov
sbb
sbb
imul
jmp
out
dec
test
xchg
xchg
rep
in
sub
(bad)
test
test
sbb
bound
out
loope
inc
retf
push
test
ret
jo
pop
xor
bound
jmp
adc
imul
inc
xor
mov
cdq
and
push
(bad)
fimul
test
data16
scas
shr
outs
mov
cmp
mov
shl
cmp
mov
aaa
xchg
lock
cdq
inc
call
cmp
and
pop
mov
out
iret
pusha
jns
cld
cwde
ja
push
mov
iret
xchg
out
cmp
pop
jo
inc
inc
ins
fcom
(bad)
cs
leave
stc
bound
(bad)
ret
ss
pop
mov
(bad)
jns
sbb
mov
mov
or
cmp
data16
(bad)
fwait
jl
dec
mov
cmp
daa
leave
jg
cwde
lahf
xor
out
mov
shl
and
in
lods
into
and
fisub
jb
ins
das
xor
(bad)
mul
mov
in
fcmovnbe
mov
add
shl
push
push
mov
mov
in
cmp
cli
enter
sub
hlt
xor
xor
test
cmp
ret
xor
mov
inc
xor
or
xor
pusha
call
jecxz
je
pop
outs
xor
cmps
test
(bad)
std
push
mov
jle
xchg
(bad)
pop
test
pop
mov
out
push
dec
and
inc
push
stos
jle
ins
jno
and
pop
dec
dec
mov
rcl
mov
sub
fld
sbb
sbb
and
lds
sbb
movs
or
xor
xor
sub
icebp
je
mov
in
push
sub
cs
rol
mov
stos
loope
icebp
jno
mov
pusha
scas
pop
xchg
mov
mov
jnp
xchg
ds
rcr
cmp
(bad)
adc
pop
sub
clc
stc
fwait
je
xchg
fucomp
pop
jmp
fimul
push
jp
in
pop
sti
mov
xor
pusha
rcr
call
jge
ret
push
in
scas
test
dec
and
mov
mov
fcomi
adc
push
gs
xchg
xor
mov
xor
xor
push
cmp
test
and
push
jmp
lds
add
cdq
cmp
inc
in
cmp
and
fsubr
mov
jb
scas
psubusb
rcr
dec
sub
addps
ret
cmps
cld
sbb
or
(bad)
mov
cmp
mov
dec
dec
scas
sub
push
shl
les
js
mov
mov
outs
sub
hlt
sub
or
mov
inc
je
rol
push
add
dec
mov
rol
dec
out
test
inc
fdiv
cld
neg
and
dec
scas
fild
std
cmc
push
mov
add
loopne
pop
fild
scas
or
xchg
mov
lods
fcomp
mov
cli
vsubps
ss
pushf
xchg
imul
(bad)
inc
repz
dec
mov
loop
pop
fidivr
aas
les
adc
daa
mov
lods
inc
ror
test
xchg
and
aam
sub
dec
inc
hlt
test
loopne
imul
sub
cwde
adc
dec
add
cmp
pop
jb
into
xchg
or
cs
mov
cmps
dec
test
scas
mov
stos
jg
xor
mov
mov
inc
push
or
repnz
pop
mov
sub
jb
arpl
lock
in
out
pop
rcl
les
inc
mov
shl
xchg
jo
ficom
and
or
dec
inc
aam
or
jo
dec
push
or
fist
inc
cmc
fcmovu
sti
and
aam
in
cmp
fwait
push
cmp
aaa
adc
in
mul
test
iret
mov
and
mov
imul
push
sbb
jns
jo
jecxz
jg
mov
sbb
lock
retf
imul
jnp
mov
pop
push
dec
cld
dec
sub
hlt
data16
pop
addr16
int
jmp
mov
push
and
call
std
and
lea
pop
push
lods
addr16
pop
and
ret
push
test
pushf
(bad)
adc
sbb
imul
sti
test
jae
cld
and
(bad)
pusha
push
sbb
out
xor
cmp
stos
xlat
(bad)
mov
adc
sbb
sti
jns
clc
rcr
ss
mov
push
jecxz
push
cmp
mov
ins
add
lods
stos
jge
add
pop
ja
test
sbb
inc
mov
and
into
cwde
sub
mov
mov
push
retf
scas
test
imul
jne
imul
push
and
shl
sub
mov
mov
inc
jae
push
stc
mov
and
jo
nop
sar
push
xor
adc
xor
(bad)
cmp
or
sub
cwde
xor
cld
xor
add
call
sub
lock
clc
push
jmp
xchg
mov
mov
call
jns
push
call
lock
xor
cli
or
add
out
out
sbb
dec
or
inc
nop
mov
inc
ins
sub
(bad)
mov
ja
xor
add
fstp
pop
(bad)
push
push
hlt
pop
aam
dec
xchg
retf
or
cmp
xor
push
push
ret
xchg
sbb
push
sti
popa
int3
pop
(bad)
rcl
repnz
enter
les
adc
fdiv
outs
cmp
jmp
xor
jmp
add
or
cwde
aas
and
jns
pop
idiv
(bad)
fdivr
in
rcr
lods
mov
dec
out
daa
xor
outs
cmps
mov
cmc
and
xor
xchg
scas
popf
shr
jo
int
shr
jl
xor
repnz
jg
iret
leave
aad
pushf
pop
aaa
xchg
jge
out
xor
stos
jae
mov
addps
jno
ja
enter
fidivr
lods
sub
push
scas
test
les
mov
and
pop
or
mov
sbb
ror
call
or
and
jo
jns
sbb
sahf
add
cmps
jmp
xchg
jo
or
dec
daa
scas
test
pop
daa
cmc
rcl
inc
test
xchg
push
or
mov
iret
or
fs
mov
movs
js
mov
repnz
dec
lds
lods
mov
outs
imul
xchg
push
loope
pop
stc
push
in
inc
nop
int3
jns
ficom
mov
dec
xor
push
mov
push
sbb
rol
jno
dec
sbb
dec
in
popf
bound
aad
inc
outs
pop
lds
push
xchg
mov
jne
and
fistp
es
mov
jb
ds
or
mov
iret
cmp
sahf
push
daa
fucomp
and
mov
sub
inc
pushf
push
aad
repnz
das
adc
call
inc
pop
hlt
int3
pop
sub
sbb
xchg
fdivrp
dec
out
(bad)
fld
pop
push
dec
idiv
gs
js
xchg
je
ficom
xor
nop
jl
sub
test
ret
enter
sub
ins
mov
cmp
dec
data16
xchg
adc
in
inc
jecxz
sbb
test
pop
add
dec
bound
bound
and
jle
xor
dec
fsubr
daa
add
cwde
jg
movs
lods
lds
mov
idiv
sti
shl
xchg
adc
push
shl
popa
or
xchg
jae
inc
and
mov
sub
mov
mov
les
daa
pop
add
dec
push
std
cld
mov
mov
fadd
and
ss
xchg
mov
shl
js
mov
in
shl
add
test
add
in
data16
pop
clc
mov
test
cli
aam
xlat
std
xchg
retf
ret
mov
call
(bad)
addr16
jmp
dec
lods
fld
dec
ds
or
test
lea
pop
jmp
add
push
rcl
test
aam
ds
push
popf
shr
loope
fnstcw
mov
ins
leave
aas
das
jl
outs
in
or
test
and
xor
ss
xchg
pop
scas
jmp
popa
aaa
inc
sub
push
not
xor
pop
sar
repnz
pusha
out
nop
jb
fidiv
test
inc
test
out
xor
jnp
ins
inc
pusha
xor
xor
(bad)
cmc
movs
mov
dec
push
fincstp
clc
mov
jle
in
int
mov
dec
cwde
jge
xchg
test
mov
dec
aaa
icebp
mov
mov
sahf
mov
xchg
xor
jbe
mov
hlt
cmp
aad
scas
push
std
sub
dec
sbb
jle
int3
jle
(bad)
test
sbb
int
aas
sbb
xor
xor
adc
jnp
inc
ins
fdivr
pop
out
(bad)
mov
cmc
ror
inc
add
xchg
mov
jge
add
push
xchg
push
ds
jmp
aas
iret
pop
adc
xor
add
dec
push
rol
scas
pop
ins
call
shr
ins
fsub
cld
sar
push
lods
test
loopne
movs
pop
and
mov
add
ret
mov
jmp
mov
(bad)
and
jecxz
movs
ret
les
ds
xor
jmp
fimul
sar
inc
sbb
pop
test
mov
and
cmps
out
jno
cmps
adc
in
pop
stos
enter
out
aas
dec
movs
ins
inc
cmp
jbe
pop
mov
fcom
shr
std
push
ss
xor
iret
mov
add
(bad)
in
loopne
xchg
jno
dec
fadd
(bad)
pop
cmps
pop
sbb
stos
push
and
pop
inc
sti
popf
inc
pop
lock
dec
adc
dec
leave
idiv
sahf
push
sub
cwde
addr16
push
es
jmp
out
and
cld
sub
adc
dec
rcl
xchg
mov
sahf
jnp
mov
adc
shl
push
xor
bound
xor
inc
call
jecxz
les
jb
sti
imul
dec
jae
in
or
xor
lahf
mov
jecxz
fld
adc
not
pop
push
mov
add
jnp
sub
xor
test
dec
jo
mov
cmp
lods
(bad)
in
push
add
push
ins
sti
mov
pop
pusha
fist
stos
jo
ja
sub
sub
xor
pop
cmp
scas
xor
or
retf
dec
push
das
inc
xor
push
rol
cld
add
and
push
ror
ins
pop
dec
mov
sbb
xchg
icebp
mov
xchg
mov
or
mov
push
lods
mov
adc
xchg
or
cmps
and
es
and
sub
gs
loope
loop
imul
sub
in
pusha
aaa
test
jb
jb
dec
jmp
pushf
rol
add
xor
(bad)
push
adc
(bad)
call
push
imul
sub
mov
pop
cmps
aas
std
push
shl
cli
int
adc
cmp
not
in
sub
jns
out
mov
scas
movs
shr
cmp
(bad)
xchg
jne
xor
or
mov
add
lea
aaa
add
not
(bad)
retf
lods
in
jg
adc
cs
jmp
pop
jns
mov
push
add
add
add
add
push
mov
mov
test
and
arpl
or
sbb
mov
mov
aaa
mov
mov
cdq
movs
jge
push
addr16
add
pusha
mov
hlt
dec
retf
xchg
sbb
fadd
xor
jno
pop
inc
loop
scas
inc
inc
xchg
iret
mul
fnstsw
mov
retf
xchg
rcr
stos
cmp
push
aas
push
ins
adc
xchg
dec
imul
add
fdivr
and
mov
pop
in
test
sbb
mov
mov
or
sbb
jle
mov
sub
pop
(bad)
push
xor
(bad)
cmp
pop
xchg
and
jne
test
pop
sub
jmp
dec
hlt
jecxz
lea
aas
movs
xor
jle
sbb
popa
in
popf
pop
enter
test
push
mov
xchg
adc
and
jge
(bad)
out
iret
mov
sub
mov
xchg
hlt
bound
xor
cmp
pop
in
popa
push
adc
mov
sbb
and
mov
pop
mov
and
ja
jne
pop
xor
scas
mov
pop
mov
xchg
aam
dec
hlt
stos
pusha
neg
iret
mov
mov
daa
fyl2xp1
sub
add
test
mov
dec
add
inc
int3
cmp
xchg
pop
loop
clc
je
pop
shr
(bad)
push
fsub
out
adc
pop
pop
xor
mov
sti
in
push
fisttp
mov
push
add
adc
lea
xchg
mov
test
cmp
pop
sti
sbb
jns
in
jp
icebp
push
xor
cwde
inc
push
lock
jns
mov
push
stos
repnz
aam
pop
jbe
test
jno
rol
(bad)
xor
xchg
int
out
cmp
adc
test
mov
shl
and
in
outs
lds
aad
push
or
lods
aad
pop
stc
fcomi
sbb
bound
push
test
sub
mov
fidiv
sti
and
std
adc
mov
out
dec
and
and
je
xchg
xchg
lahf
fld
adc
pop
outs
adc
jg
mov
rol
push
(bad)
in
dec
cmp
push
lock
movntps
mov
push
(bad)
pop
pusha
push
xor
js
jecxz
push
popf
sub
mov
ins
shr
push
cdq
adc
inc
ret
sbb
sub
sbb
(bad)
dec
push
add
daa
push
cmp
sbb
iret
adc
sbb
sub
lods
jae
add
mul
jne
in
test
cmp
test
xor
shl
idiv
ret
dec
sbb
mov
mov
shr
mov
iret
mov
push
frstor
ret
sbb
lahf
adc
stc
je
cmps
push
mov
adc
lds
xor
loope
xchg
outs
lods
sahf
fidivr
pop
shl
addr16
lahf
sub
out
dec
mov
fadd
sar
mov
jne
in
mov
push
cmp
cmc
adc
loope
inc
(bad)
and
stos
arpl
mov
jg
cmps
sbb
cmps
outs
push
fidivr
and
lds
mov
in
dec
sub
ins
outs
xchg
cmps
ja
scas
push
repnz
pop
sub
adc
cmp
stc
out
mov
pop
mov
js
out
retf
push
ja
sub
aas
cdq
xchg
mov
ret
dec
jne
rcr
lahf
jo
mov
enter
repnz
aas
out
mov
xor
jo
mov
xchg
pop
repz
out
add
pop
cmp
sbb
pop
(bad)
cmp
mov
dec
mov
jmp
xchg
inc
pop
repz
push
(bad)
xlat
mov
xchg
and
push
cli
mov
clc
jb
pop
push
xchg
mov
mov
fbld
and
pop
ret
test
(bad)
sbb
movs
push
das
sbb
jmp
jbe
lahf
lods
inc
mov
fnstsw
nop
push
retf
xlat
(bad)
rcr
iret
pop
add
test
cli
mov
cmp
repz
xchg
repz
adc
jge
add
push
mov
dec
es
idiv
xchg
test
inc
arpl
push
adc
lods
je
js
xor
loope
xchg
adc
xor
daa
in
or
sub
outs
and
mov
jl
sbb
in
dec
nop
push
dec
or
fstp
shr
lahf
cmp
xlat
mov
xor
dec
(bad)
sub
mov
xchg
mov
ins
mov
pop
xchg
loopne
rcl
adc
push
inc
xchg
xchg
cli
push
jae
lods
int
and
push
bsr
push
dec
dec
mov
dec
inc
or
inc
into
jp
mov
push
(bad)
je
fdiv
movs
ror
pop
loope
or
rol
dec
adc
dec
adc
jb
hlt
dec
mov
in
or
cli
stc
and
or
xor
ja
cmps
push
add
dec
push
scas
imul
repz
int
push
mov
les
mov
xor
mov
cwde
jge
mov
out
test
leave
mov
cmp
dec
xor
or
aad
mov
stos
outs
jne
adc
xor
push
sbb
stos
int
push
adc
mov
and
or
inc
popa
jl
arpl
xor
scas
test
pop
aam
popf
outs
out
cmp
jmp
dec
inc
mov
shl
(bad)
xor
sbb
imul
add
sub
mov
cmp
out
xor
loopne
sub
sbb
test
sahf
(bad)
and
imul
bnd
mov
(bad)
bound
xchg
aaa
cmp
dec
xor
mov
pop
and
push
cs
xchg
cdq
sbb
fwait
sub
xor
fmul
and
pop
push
mov
mov
loope
push
add
adc
inc
fdiv
push
pushf
xchg
movs
mov
ds
dec
je
jnp
mov
(bad)
cmc
test
test
dec
xor
popa
das
sbb
in
stos
loope
out
fcmovnb
js
shr
ss
or
scas
mov
gs
fst
ret
pop
xchg
jae
int3
mov
and
cmps
imul
out
hlt
push
cmp
(bad)
in
push
test
xor
sub
mov
out
in
mov
and
mov
mov
mov
ja
pop
jg
ins
mov
adc
add
sub
cwde
push
xchg
mov
loopne
stos
mov
xchg
push
fst
gs
shl
push
mov
(bad)
out
jns
jge
repz
mov
nop
dec
add
sbb
into
or
mov
fs
jecxz
ins
jle
jl
push
and
mov
inc
call
dec
pop
xor
pop
cmp
mov
mov
mov
add
test
je
add
or
pop
sub
mov
sbb
mov
enter
rcr
sub
pop
cmp
dec
pop
push
xor
icebp
aam
mov
sbb
aam
push
or
mov
cmps
dec
into
cwde
imul
dec
cmp
mov
adc
ret
pop
outs
mov
mov
ins
bound
mov
nop
jp
ds
xlat
mov
call
xchg
mov
into
mov
dec
xchg
call
neg
mov
aam
cs
lock
sbb
adc
add
mov
mov
push
or
es
clc
out
or
stos
addr16
lds
fidivr
mov
sub
add
out
test
push
addr16
xor
push
lods
pop
je
jle
mov
cmp
xor
js
ds
scas
ficom
daa
adc
and
(bad)
repz
es
stc
cmps
or
imul
call
loopne
adc
iret
push
imul
js
outs
mov
pop
mov
xchg
ins
jmp
sar
test
idiv
cmp
pop
mov
dec
inc
loop
mov
fisttp
sbb
mov
cmps
dec
xchg
repz
mov
sub
jmp
mov
loop
cmp
fidivr
ja
dec
out
shl
call
in
addps
ins
sbb
cli
push
jle
pop
adc
xchg
scas
enter
pop
sbb
add
test
pop
inc
and
outs
push
aam
addr16
mov
imul
add
dec
inc
cmp
ja
(bad)
addr16
add
mov
sub
sbb
xor
fadd
adc
pushw
adc
lods
push
into
hlt
sar
xchg
sbb
push
mov
xlat
stos
in
adc
sbb
adc
xchg
adc
cmp
mov
mov
adc
int
push
pop
ret
in
sti
inc
sub
les
mov
add
add
jmp
or
and
pusha
js
jge
out
dec
sbb
out
adc
pop
push
js
loope
jmp
cli
jmp
xchg
pushf
shr
push
dec
retf
pop
pusha
(bad)
push
sbb
pop
aad
xchg
add
movs
lock
test
arpl
adc
add
xchg
cmp
or
gs
mov
fild
cli
jl
outs
jg
sar
lods
aaa
xchg
retf
mov
out
ja
les
cmovbe
stos
jns
iret
or
loope
shl
fwait
add
dec
xor
pop
cmp
xor
outs
repnz
add
daa
imul
jecxz
cs
mov
loope
sbb
inc
call
aad
cli
jns
add
hlt
bound
xor
sbb
mov
xor
movs
jge
fwait
aam
les
ds
das
dec
inc
mov
movzx
popa
or
in
xchg
or
xlat
jmp
mov
xor
add
in
adc
cmp
or
add
stos
dec
dec
std
dec
movs
sbb
icebp
xor
retf
inc
or
cmp
in
push
add
mov
push
clc
xchg
cwde
scas
cs
mov
fbld
mov
cmp
xor
daa
lahf
sbb
cmps
dec
sub
and
xchg
out
lods
loopne
jecxz
shl
dec
add
xor
mov
lock
out
xchg
adc
scas
inc
inc
sti
jne
arpl
jle
dec
or
jle
stos
jo
stos
jle
cli
mov
jge
inc
fstp
imul
jne
and
jne
and
cli
and
inc
xchg
mov
aas
pop
loop
jmp
push
push
push
mov
dec
test
scas
addr16
sub
jmp
pop
cmps
cmp
sub
test
pop
pop
mov
ja
popf
inc
mov
movs
cmps
cdq
xchg
mov
mov
inc
out
xor
sbb
jp
sub
scas
pop
rcr
daa
jp
and
ins
enter
ficom
rcr
pop
xchg
aas
sbb
test
es
xlat
ss
stos
in
sub
jmp
fld
enter
pop
jecxz
or
pop
daa
mov
dec
add
ror
enter
pop
pop
js
add
sbb
cld
mov
data16
inc
sti
xchg
xchg
ds
sub
pop
lods
sub
pop
mov
cmp
(bad)
xchg
xor
loopne
(bad)
jbe
pop
sub
pop
test
adc
pop
cmps
and
popa
xchg
js
test
jp
sub
int3
call
addr16
dec
push
fmul
pop
loopne
xchg
jg
cwde
push
mov
jg
es
sub
pop
out
adc
mov
pop
hlt
fistp
sbb
inc
jns
ins
xchg
inc
iret
sub
sbb
stos
pop
leave
xlat
and
movs
mov
mov
push
ficomp
pop
in
(bad)
sub
jae
sar
adc
(bad)
jmp
inc
das
adc
cmp
add
jae
mov
jg
sub
push
xchg
test
enter
inc
out
daa
cmc
mov
pop
adc
or
xchg
aam
mov
adc
xchg
clc
data16
int
mov
inc
mov
pusha
les
icebp
(bad)
rcr
pop
pushf
xlat
mov
or
push
(bad)
cwde
pop
lods
enter
fyl2x
test
imul
add
pop
repnz
test
hlt
ficom
lods
inc
clc
(bad)
into
sub
popa
inc
cmps
(bad)
scas
bound
fadd
push
jbe
or
xlat
xor
sub
lods
ds
outs
mov
cmp
ds
(bad)
and
xor
xor
pop
(bad)
xchg
mov
sub
dec
or
mov
daa
jae
cmp
mov
call
ds
retf
test
call
push
cmp
mov
cmp
mov
pop
loope
mov
adc
cmp
add
mov
push
jbe
push
out
pop
cmc
ret
hlt
inc
sub
loop
xchg
cdq
push
les
popf
or
mov
pop
dec
movs
int3
aam
test
dec
push
aas
fwait
scas
adc
cmp
outs
pop
push
jp
inc
adc
xchg
push
ja
popf
in
cli
shl
cmp
dec
je
outs
ins
jl
xor
or
jne
or
(bad)
test
je
adc
ds
arpl
or
ret
cmp
rol
fldcw
cwde
mov
into
inc
movaps
mov
call
call
mov
popf
(bad)
and
jnp
jecxz
or
dec
inc
jl
jno
adc
cwde
or
mov
pop
pshufw
pop
mov
fwait
bound
out
and
mov
add
cmp
push
movs
in
and
fimul
les
test
ss
xchg
and
inc
retf
(bad)
pop
jo
fwait
cmp
mov
(bad)
daa
mov
mov
add
dec
mov
jmp
fcom
retf
loop
inc
mov
xchg
dec
loope
adc
icebp
cdq
jmp
mov
fs
out
mov
xchg
sub
sub
es
mov
test
(bad)
aam
adc
jmp
mov
fldcw
xlat
inc
ins
pop
das
clc
inc
and
xchg
or
movs
(bad)
xor
xor
mov
das
push
imul
aam
push
pop
fimul
jbe
xor
sbb
inc
lahf
and
push
dec
jmp
clc
rcr
xchg
dec
les
jge
cs
mov
sub
cmp
out
xor
jle
cwde
pusha
imul
stc
and
icebp
mov
or
sbb
test
mov
stos
test
(bad)
fdiv
or
mov
inc
pushf
jmp
push
or
mov
push
ror
sbb
(bad)
pop
pop
jmp
pop
rol
or
push
pop
mov
mov
int
cmp
iret
push
sbb
push
mov
pop
xor
push
jns
or
mov
addr16
int
cmp
bnd
dec
or
or
sbb
(bad)
inc
pop
jecxz
mov
(bad)
popf
ret
add
repz
fiadd
fbstp
ja
icebp
xchg
jbe
mov
and
retf
add
inc
mov
call
pop
or
mov
sahf
div
cld
mov
pop
push
push
mov
fnstcw
inc
imul
or
sub
ins
fsub
int
mov
jmp
sbb
push
jmp
mov
sbb
push
mov
mov
outs
shr
shr
mov
inc
das
and
jbe
push
lock
pop
es
cmp
mov
pop
jno
es
out
add
test
mov
sub
sub
lock
mov
nop
xchg
mov
pusha
jecxz
dec
mov
inc
or
test
dec
hlt
jmp
and
or
(bad)
dec
xchg
stc
(bad)
cmp
mov
jns
pop
aam
pop
xchg
mov
inc
pop
xchg
(bad)
lock
sbb
arpl
push
icebp
out
ja
xchg
repnz
and
imul
daa
xlat
xchg
outs
sbb
rol
dec
fisttp
imul
out
and
stc
jmp
stc
shl
sahf
repnz
xchg
mov
bound
sbb
mov
(bad)
push
sahf
ss
out
lods
xchg
call
cmp
mov
icebp
mov
add
into
mov
rol
mov
add
or
sub
je
pop
pop
adc
jl
retf
sahf
mov
push
add
mov
pop
sub
or
push
adc
scas
xor
mov
cmc
std
and
inc
neg
adc
fisttp
test
xchg
fist
movs
mov
pusha
mov
jne
mov
repnz
cmp
push
test
ins
call
loope
sub
bound
daa
out
pop
xchg
call
adc
jmp
pop
enter
icebp
mov
push
xchg
mov
scas
adc
dec
inc
fcomp
xor
pop
push
jmp
push
cmp
inc
clc
(bad)
and
popa
and
stc
sbb
js
sbb
xchg
mov
jo
daa
fisttp
push
mov
jnp
das
dec
fstp
jp
inc
imul
call
mov
test
lods
fst
cs
es
dec
sti
sbb
test
call
fs
out
push
sbb
retf
xlat
mov
or
mov
jmp
(bad)
loope
imul
and
mov
and
push
push
mov
shr
pop
outs
push
in
jg
inc
jbe
push
mov
stos
(bad)
jns
(bad)
cmps
pop
mov
clc
mov
xor
popa
sub
enter
mov
call
les
dec
xlat
je
sub
dec
push
push
push
movs
shl
mov
arpl
inc
test
fdiv
inc
or
out
jo
cmps
ficom
adc
in
or
mov
pop
outs
imul
std
sbb
xor
or
stos
outs
and
out
or
fidivr
inc
push
les
push
loope
fisttp
add
add
bound
loopne
shr
std
addr16
gs
jbe
mov
jo
xchg
cdq
div
mov
push
cmp
cmp
lods
jl
push
xchg
sub
shl
mov
push
mov
sub
pop
push
cmp
pop
rcl
es
(bad)
jmp
cdq
inc
xchg
push
pop
cmp
jp
push
fst
xlat
add
mov
hlt
ror
icebp
xchg
cmp
jb
and
das
mov
and
scas
adc
std
add
in
retf
or
cmp
jge
iret
lea
xlat
push
dec
dec
mov
jno
jl
fsubp
jae
and
mov
repnz
mov
fisttp
shr
iret
shl
push
or
xchg
dec
iret
xor
sub
add
mov
mov
sub
adc
sub
and
sub
fiadd
and
xor
or
cmp
mov
xor
sbb
add
mov
sbb
fistp
add
retf
and
cdq
xchg
sbb
and
mov
mov
retf
push
data16
pop
mov
imul
retf
sub
adc
mov
push
and
xchg
jmp
or
cli
sbb
xchg
jo
sbb
push
mov
push
mov
push
in
ret
addr16
and
retf
adc
push
adc
in
ins
xor
aas
and
cmp
test
mov
xor
or
int
jae
inc
jbe
fdivr
retf
xor
push
and
(bad)
jne
(bad)
xchg
shr
stos
pop
aam
xlat
lock
ins
cmp
dec
loopne
mov
(bad)
pop
fbld
jecxz
xchg
data16
cmp
ds
pop
test
loop
mov
repnz
xchg
sub
xchg
pop
jl
push
repnz
cmp
adc
rol
mov
sub
or
rcr
scas
lahf
mov
fsubr
dec
mov
movs
out
push
and
adc
cli
js
test
in
or
fild
inc
gs
cmp
mov
jl
cld
int
cmps
mov
lahf
ret
lods
inc
bound
js
cmps
cmps
jp
push
out
dec
scas
mov
movs
nop
cmp
fdiv
fistp
das
repnz
hlt
inc
xor
xor
pop
pop
push
int
lds
fisubr
jbe
test
mov
inc
js
call
or
nop
psllq
daa
fistp
pop
push
test
mov
or
sahf
aas
je
or
and
xchg
dec
hlt
xchg
mov
mov
mov
enter
inc
fcompp
lods
dec
xor
rcr
jne
pop
mov
fwait
mul
enter
leave
mov
jecxz
jnp
es
cmp
mov
bound
fnstsw
fldenv
inc
clc
test
push
fdivr
sub
fcomip
jmp
arpl
xor
enter
dec
mov
or
aaa
stc
mov
inc
push
pop
les
dec
or
hlt
or
push
repnz
out
hlt
imul
rcl
fcom
mov
dec
sbb
push
jge
test
ss
pop
shr
jle
(bad)
int3
cmp
push
adc
je
mov
cmp
xor
fldz
push
cmp
jl
lock
pushf
sbb
scas
in
repz
cmps
out
stos
push
mov
sti
fmul
pop
lahf
fs
adc
ret
mov
pop
mov
inc
mov
fsub
std
dec
pop
shr
lea
adc
repz
call
int3
cmp
pop
push
dec
(bad)
stos
push
arpl
dec
mov
popa
ss
cmp
dec
inc
xchg
sbb
pop
push
xor
add
or
pop
into
mov
or
mov
stos
mov
arpl
jno
dec
std
cs
sbb
mov
mov
arpl
dec
retf
arpl
wbinvd
movs
inc
jl
sbb
pop
mov
xchg
push
loope
lods
xchg
or
mov
pop
rol
stc
jle
xor
(bad)
and
push
or
adc
pop
mov
adc
rcl
xchg
(bad)
rcr
bound
inc
inc
sbb
mov
add
test
jns
mov
jnp
fsubr
adc
(bad)
xchg
cli
adc
ins
ss
mov
add
cld
fwait
int
adc
push
nop
cmp
fsubp
jge
add
pop
adc
sar
or
sahf
pop
push
xchg
adc
mov
sbb
add
pop
in
imul
mov
ret
jmp
adc
ins
jbe
popa
pop
inc
inc
push
popa
test
add
mov
lods
mov
pusha
xor
not
lea
add
mov
outs
in
leave
(bad)
lods
js
shl
pop
movs
mov
jbe
rcl
test
icebp
jmp
adc
mov
rcr
jne
or
(bad)
mov
div
sbb
or
add
mov
mov
inc
xchg
cmp
sbb
lock
lods
rol
pop
clc
cmp
mov
test
adc
xchg
or
push
dec
lock
push
neg
inc
adc
xchg
fcmovbe
test
(bad)
fdiv
stc
mov
sti
sub
cwde
outs
pop
pushf
xchg
inc
mov
addr16
in
push
mov
nop
sub
push
div
push
call
sub
out
and
ja
and
inc
jbe
dec
arpl
jns
jmp
das
(bad)
ret
enter
in
lahf
out
jbe
cmc
movs
adc
jp
in
out
cmp
cmps
or
sbb
xchg
into
scas
cmp
ins
xlat
mov
push
push
nop
mov
add
xchg
and
jge
push
fstp
adc
lahf
shr
cmps
adc
lahf
not
pop
dec
dec
test
das
fnstenv
ds
rol
pop
ret
push
(bad)
loopne
pop
add
or
cwde
movs
jg
jne
xchg
push
aad
clc
sbb
dec
push
and
mov
call
sbb
mov
pop
jns
cwde
cmp
rcr
ins
not
movs
imul
in
adc
sbb
xor
sub
jg
or
push
xor
div
jl
fistp
repz
mov
mov
in
mov
cmps
add
out
cmp
outs
popa
test
into
cmp
or
movs
inc
mov
dec
sbb
dec
xlat
and
mov
in
push
mov
and
ins
jno
inc
fmul
(bad)
in
xchg
xor
xor
inc
out
sub
push
mov
lds
dec
(bad)
dec
in
fwait
mul
popa
jo
sbb
stos
into
icebp
xchg
mov
push
mov
ja
xchg
ficom
xor
fs
pusha
add
sbb
mov
pop
ja
adc
or
out
adc
lods
and
repz
pop
mov
mov
call
in
movs
pop
mov
sub
cld
mov
mov
int
mov
(bad)
in
mov
mov
mov
outs
ficom
jnp
ss
fisttp
in
adc
ror
aad
repnz
pop
jle
sar
pop
inc
fild
mov
call
or
daa
fidivr
lahf
jbe
mov
rcr
fstp
adc
sbb
nop
inc
scas
fsubr
in
jne
cmps
aam
imul
pop
fdiv
mov
(bad)
mov
sbb
jbe
mov
push
scas
xchg
jecxz
fst
cmp
lods
xor
pop
pusha
fiadd
inc
jmp
xor
inc
jns
and
jmp
retf
sbb
jp
(bad)
movs
out
outs
fs
stc
pop
push
ja
or
fldenv
and
aaa
jg
outs
test
arpl
fnsave
and
imul
pop
ins
pop
cmp
pop
xor
and
push
or
jnp
jbe
pop
adc
pop
stos
(bad)
cmps
mov
dec
adc
and
call
rcl
ins
pushf
rcr
ja
jae
imul
adc
stos
cmps
jge
jg
in
inc
icebp
mov
ins
outs
mov
fadd
mov
aaa
sub
push
dec
(bad)
stos
mov
aas
dec
cmp
inc
mov
pop
fs
xchg
stos
mov
out
sbb
inc
add
enter
adc
adc
cmp
rcr
xor
push
fwait
ins
and
jb
mov
sub
sbb
aad
jae
inc
lods
sbb
aaa
mov
add
or
pop
add
xchg
shl
pop
xchg
jmp
fidivr
out
xchg
pop
add
ins
and
jmp
jo
push
pop
push
cmps
call
std
pushf
movs
sbb
std
jge
or
or
cdq
not
sbb
and
and
mov
ins
stc
sub
jo
loopne
ja
cld
lea
mov
fbstp
shr
fidivr
mov
mov
push
call
in
int
out
shl
jmp
nop
adc
sub
test
mov
(bad)
xor
xchg
jns
in
sbb
iret
daa
sub
out
lods
push
sub
ds
jp
push
cmp
push
xchg
sbb
dec
sub
add
push
rcr
push
push
imul
movs
jb
aas
ins
or
les
arpl
cs
std
inc
jl
ja
push
cwde
push
xor
push
fistp
sub
out
push
xor
(bad)
sub
cld
in
inc
jmp
xchg
sbb
dec
push
add
push
fidiv
push
xchg
dec
mov
mov
jl
out
pop
and
js
sub
je
sbb
mov
inc
xor
xchg
out
icebp
ror
and
mov
repnz
lods
shr
dec
out
sbb
jg
or
lods
(bad)
sbb
and
mov
test
icebp
push
push
lods
hlt
cdq
shl
adc
jge
xlat
dec
cwde
dec
pop
imul
clc
test
int3
cmp
nop
cli
ins
and
sbb
jb
inc
test
push
mov
sar
shl
mov
push
mov
inc
ret
adc
add
push
outs
fidiv
shl
mov
and
mov
cmc
retf
or
sbb
fldenv
pushf
xchg
iret
mov
xchg
fcom
pusha
popa
sbb
stos
je
xor
int3
sbb
jns
jecxz
jmp
jecxz
push
(bad)
lods
and
mov
mov
mov
mov
cli
pop
scas
hlt
test
lods
(bad)
je
push
inc
test
(bad)
sub
mov
inc
addr16
push
push
sub
and
xchg
leave
pop
push
xor
add
jmp
mov
pusha
jnp
lahf
mov
or
ins
fdiv
call
sub
ins
mov
add
loopne
xor
inc
movs
xchg
jl
xchg
(bad)
dec
or
(bad)
mov
cmps
mov
jae
loop
lea
stos
in
ror
ret
sub
jge
out
(bad)
in
push
pop
mov
jns
xor
xchg
imul
dec
sbb
inc
(bad)
out
into
pop
stc
repnz
cmps
pusha
and
call
xor
mov
js
sar
jle
out
sbb
jecxz
leave
jbe
scas
mov
jg
lock
push
sti
mov
and
push
push
pushf
adc
dec
mov
mov
inc
imul
fcomp
ds
push
shl
fbstp
mov
jae
in
xchg
movs
movs
outs
mov
jne
(bad)
add
fstp
sub
push
inc
sbb
and
retf
xor
fwait
mov
repz
mov
imul
fucom
sbb
jno
pusha
dec
nop
test
call
dec
adc
sub
jb
clc
in
dec
xlat
shl
retf
(bad)
ins
jnp
mov
mov
dec
mov
in
or
stos
adc
mov
or
stc
ja
pop
movq
dec
push
sub
rol
enter
push
test
in
lods
adc
dec
popa
add
pop
dec
rol
(bad)
push
xor
out
out
sar
push
sbb
fimul
lds
sbb
out
xor
cmps
rol
loopne
push
xor
mov
xor
add
pop
sub
pushf
sbb
cli
shl
test
dec
inc
(bad)
loope
rcr
cmc
outs
push
pop
in
gs
inc
repnz
sub
pop
scas
into
test
stos
fisub
mov
jnp
repz
mov
xor
das
call
(bad)
and
rcl
mov
mov
in
retf
lahf
xor
sbb
mov
jmp
fstp
(bad)
call
in
mov
test
add
mov
jo
ss
add
or
pop
stos
sbb
sub
scas
and
data16
xchg
mov
fldenv
in
xlat
sub
push
adc
sbb
rcr
ret
mov
scas
cmps
stos
sub
push
in
(bad)
xchg
sbb
mov
mov
(bad)
icebp
outs
js
xor
out
scas
cdq
jbe
sub
loop
push
mov
in
cmp
movs
inc
shl
repz
pop
les
movs
out
jg
and
sti
nop
arpl
mov
and
sub
mov
cli
(bad)
pop
pop
inc
xchg
add
sbb
int
xor
inc
sub
pop
sub
out
xor
mov
adc
sbb
or
inc
call
mov
jmp
shr
push
rol
cli
loop
and
push
fisubr
std
dec
xor
jp
out
push
and
icebp
cmp
dec
jge
fcomi
out
pop
lods
ja
ins
out
adc
cmp
daa
cmps
mov
imul
rol
je
push
mov
xchg
or
das
popf
or
mov
mov
adc
aam
retf
rol
jae
sbb
sub
jg
xchg
aad
pinsrw
push
cmp
sar
std
xchg
(bad)
lock
jo
bound
movs
push
adc
mov
ds
retf
jmp
cmp
sub
adc
adc
xor
mov
inc
in
into
dec
pop
pop
sar
and
or
adc
xchg
data16
add
add
mov
add
mov
pop
lods
adc
sub
add
dec
and
ja
pop
push
fidivr
jmp
fld
stc
aas
or
mov
push
mov
sahf
ds
loop
rol
sbb
js
test
das
fnsave
jl
pop
mov
daa
shl
mov
das
into
or
lock
sbb
scas
xchg
retf
or
fwait
xchg
sbb
jge
cwde
aad
out
(bad)
loop
mov
mov
leave
int
ret
test
sbb
cmp
sub
shr
add
add
lds
hlt
xlat
or
mov
pop
adc
into
stos
and
jmp
mov
movs
cmp
jecxz
out
ss
dec
jne
mov
(bad)
jns
mov
rol
test
mul
push
push
adc
sti
lods
mov
cmps
(bad)
fs
mov
pop
call
shl
sub
cmp
retf
sbb
stos
pop
mov
ins
rol
sti
leave
std
stos
inc
mov
cmps
mov
nop
push
jno
sti
push
je
ffree
daa
mov
xor
adc
movs
push
repz
loope
dec
sbb
in
or
loopne
and
xchg
mov
sub
jmp
cmc
imul
imul
into
mov
in
pusha
pusha
jge
cli
sbb
sbb
mul
cmp
mov
cmp
cmp
ret
mov
(bad)
sub
int
dec
or
test
loopne
rcr
outs
xor
shr
int
add
pop
out
int
dec
repnz
dec
aam
mov
ror
adc
leave
and
in
push
dec
scas
stos
dec
push
pop
inc
(bad)
in
stos
jns
push
fldcw
mov
cli
into
clc
rol
mov
loop
xchg
mov
push
aam
leave
adc
push
into
mov
test
ffreep
test
call
sahf
test
sahf
jns
cmps
lock
xchg
test
imul
test
xchg
mov
mov
ret
cmp
sub
xchg
mov
in
rol
mov
xchg
jb
and
jbe
adc
push
dec
fstp
outs
out
fs
stos
xchg
add
sbb
mov
stos
hlt
ror
pop
sahf
sub
cmp
stc
stos
shl
push
sub
mov
call
and
hlt
push
test
xchg
inc
sbb
scas
lods
out
(bad)
jae
mov
int
xchg
in
ins
(bad)
test
dec
call
xchg
adc
mov
stc
mov
loop
daa
test
test
jle
jg
and
cs
adc
sbb
inc
popf
jnp
mov
jo
je
cmps
in
imul
and
ror
retf
aad
into
pop
inc
sbb
xchg
jnp
pop
ret
jl
mov
xor
test
or
imul
cmps
cmps
loopne
add
sbb
cs
scas
jl
lea
retf
sbb
fcomp
imul
jo
sub
idiv
fwait
pushf
cmp
jp
dec
fnsave
test
inc
js
push
loop
arpl
and
cs
arpl
shl
jns
cmp
in
mov
cmp
pop
mov
xlat
xchg
test
(bad)
call
test
test
push
in
pop
or
jb
movs
add
ins
xchg
xor
mov
jle
jl
inc
movs
dec
js
push
xor
movs
or
cmps
cmps
cmp
in
ins
push
jp
xchg
in
cmp
mov
js
dec
pop
xchg
in
xlat
cmc
push
lea
dec
cmps
jne
fld
mov
mov
hlt
push
shr
mov
push
ffreep
cmps
sbb
lds
xor
pop
jo
xor
sub
add
push
add
pop
or
cmp
(bad)
mov
rol
div
repnz
jbe
bound
shl
xchg
xchg
cmc
fild
out
xor
mov
xchg
mov
mov
mov
(bad)
mul
add
loope
xlat
out
pop
pop
jae
dec
pop
mov
and
add
(bad)
scas
mov
loopne
pop
push
daa
sbb
push
(bad)
in
jecxz
stc
dec
pop
sub
pop
and
cwde
push
jl
aaa
adc
(bad)
push
and
push
cmc
pop
idiv
loopne
pop
fidivr
push
test
jge
je
jnp
call
cmps
xor
xor
cdq
mov
imul
or
shr
inc
add
pop
lods
sbb
mov
fistp
sti
jo
xor
imul
xchg
pop
dec
test
xor
mov
out
popa
pop
(bad)
mov
inc
popf
push
jge
ins
jmp
popf
xchg
(bad)
xor
rcr
inc
addr16
lds
test
sub
clc
aam
add
loope
scas
and
mov
(bad)
in
hlt
out
or
jmp
mov
sbb
inc
adc
ret
adc
call
retf
xchg
mov
jge
inc
out
jo
adc
mov
cmps
in
mov
arpl
sbb
call
xchg
adc
pop
rcl
fstp
pop
mov
push
dec
cmp
sub
and
mov
jnp
add
inc
icebp
retf
js
mov
and
inc
mov
pusha
mov
lods
stos
dec
adc
mov
(bad)
sar
push
dec
pop
ret
sub
enter
or
iret
out
jo
das
mov
cmps
or
or
gs
and
(bad)
cld
fld
pop
popf
sbb
jb
dec
xor
inc
inc
dec
mov
into
jb
inc
and
jnp
dec
rol
push
sbb
jmp
cld
sbb
pop
xor
cmp
xor
lds
stos
retf
inc
ss
sub
push
adc
sbb
lds
rol
lods
mov
sub
iret
arpl
xlat
mov
mov
pushf
and
imul
inc
jbe
out
mov
dec
push
ror
sub
mov
test
push
hlt
cmp
pop
mov
sbb
inc
bound
scas
pusha
sahf
outs
rol
sti
jnp
push
mov
jmp
cmp
movs
and
cs
dec
bound
gs
mov
test
fs
enter
fnstsw
ins
push
(bad)
leave
xor
jle
arpl
jmp
test
jp
xchg
pop
jle
outs
xor
loope
jl
cmp
xlat
xor
push
ds
sti
cmovne
xchg
cmp
xor
and
rcr
ins
cld
inc
add
xchg
mov
and
dec
and
push
loopne
sbb
xor
dec
or
enter
push
adc
jle
jle
aad
and
arpl
xchg
lods
sub
call
icebp
cli
jmp
mov
jbe
das
fstp
test
xor
xchg
faddp
jbe
mov
out
and
and
int
or
add
movs
dec
xchg
sar
inc
ret
xchg
sub
xchg
cdq
and
cmps
xlat
test
sub
(bad)
aam
fcom
(bad)
int3
(bad)
pop
popf
outs
push
dec
iret
jbe
cmp
aaa
mov
mov
sub
mov
dec
jne
not
sub
jb
jne
jl
in
inc
sar
jns
out
sub
out
inc
sub
push
fstp
mov
push
cmc
loope
bound
mov
mov
sahf
dec
cmp
sbb
push
cmps
pop
or
pop
sub
or
lock
movs
scas
es
mov
pop
aam
cmp
or
or
pop
mov
jae
jns
jae
pop
imul
mov
js
and
mov
hlt
and
cmp
retf
xchg
hlt
jmp
pusha
xchg
dec
push
ret
add
pop
aaa
xor
pop
jmp
es
test
pop
scas
inc
pusha
enter
scas
inc
outs
outs
movs
push
popf
jno
lahf
shl
addr16
mov
int
mov
mov
jl
dec
in
jmp
stos
jl
mov
sub
leave
rcl
add
sbb
les
ja
jns
hlt
xchg
jmp
mov
js
fisttp
sbb
cmp
fcmovb
pop
pop
dec
fs
fdiv
lea
xor
lods
mov
in
lods
add
jmp
xchg
fisubr
sub
je
mov
mov
and
arpl
ret
xor
jmp
mov
retf
in
xor
(bad)
(bad)
pop
xchg
jmp
ret
inc
push
add
dec
dec
jecxz
jge
lahf
and
sub
shl
cmp
cmp
les
or
xor
sahf
test
(bad)
dec
nop
aas
nop
jle
mov
xchg
jge
arpl
add
sbb
mov
movs
cmps
dec
push
jle
pop
retf
inc
or
xor
inc
mov
xchg
call
adc
and
mov
jg
fld
sbb
loope
call
xchg
dec
dec
js
cmp
xchg
les
push
iret
sbb
xchg
in
fld
cmps
test
mov
cmp
xchg
mov
pop
mov
gs
cdq
cmp
xor
dec
ret
mov
movs
aas
std
leave
inc
mov
loopne
mov
push
lods
sub
cs
das
test
(bad)
icebp
ins
sbb
jmp
shl
push
push
push
lahf
adc
dec
mov
jns
add
gs
retf
xchg
aaa
adc
sub
jp
sub
inc
int
xor
cmp
lea
rcl
dec
icebp
pushw
sub
jg
fnstcw
xchg
into
push
retf
xlat
lahf
aam
pop
mov
mov
aad
xor
ins
sub
or
dec
mov
gs
sti
sub
lock
je
(bad)
cmps
pop
mov
push
dec
bound
out
xchg
icebp
sbb
fisub
ret
icebp
stc
sti
cs
sbb
test
call
add
jae
out
fwait
push
mov
sar
jge
int
daa
aas
fistp
pusha
sahf
push
xchg
and
xchg
fmul
test
cmp
stos
(bad)
cvtdq2ps
push
pusha
adc
or
cmc
nop
popa
rcr
and
das
sbb
test
add
sub
dec
add
adc
push
xor
fucomp
out
xchg
fcmovbe
stc
fdivr
xor
ins
mov
shl
lods
out
adc
xchg
(bad)
inc
test
imul
xor
stos
add
adc
inc
rcl
lock
or
shl
jl
cmp
xchg
ja
aam
xor
or
dec
clc
ud2
push
xchg
test
sti
push
xor
and
inc
pop
inc
popa
imul
lahf
jg
ret
fnsave
pop
cs
xchg
xor
add
add
push
out
cs
jne
repz
clc
push
outs
pop
push
lods
jo
xor
sub
adc
dec
ins
mov
not
mov
(bad)
fsub
jl
(bad)
mov
lock
add
icebp
pop
test
mov
cmp
(bad)
mov
dec
idiv
hlt
into
mov
(bad)
aam
and
xchg
(bad)
xor
adc
test
lods
ds
test
sahf
aad
push
pop
inc
leave
inc
or
jne
xor
cwde
aad
mov
(bad)
leave
mul
mov
pop
jle
pop
push
mov
mov
aam
push
dec
aad
jne
fucomp
int3
mov
popa
pop
fld
sbb
sub
push
call
xor
fidivr
or
mov
inc
dec
jmp
jle
mov
xlat
add
loopne
clc
cld
iret
xor
in
cmp
arpl
test
lea
ret
sub
cmp
cli
mov
inc
dec
popa
and
mov
mov
add
cmps
adc
mov
je
mov
xchg
repnz
mov
test
(bad)
xchg
in
sahf
fiadd
adc
pop
out
inc
in
xchg
lods
xchg
jg
retf
cmp
mov
into
hlt
shr
push
ins
mov
xor
fisttp
out
sar
xchg
xchg
out
mov
lods
and
jb
(bad)
lds
pop
sahf
test
xor
or
dec
push
leave
jmp
dec
mov
jge
repz
xchg
shl
aam
push
xchg
inc
dec
into
mov
sbb
(bad)
inc
clc
popa
inc
jp
mov
mov
(bad)
in
jne
mov
lea
adc
or
fistp
in
sbb
xchg
or
enter
aad
in
add
or
and
sub
xchg
popf
mov
ror
dec
push
or
mov
inc
repz
xchg
xchg
xchg
add
push
adc
into
cmps
nop
mov
daa
mov
adc
sbb
gs
call
fstp
ret
push
enter
add
xchg
cmp
xchg
xor
stos
jns
pop
retf
ret
inc
fdiv
outs
xchg
stc
stos
mov
sbb
pop
stos
add
test
hlt
mov
mov
popa
xor
addr16
shl
arpl
ds
(bad)
je
std
add
jp
push
movsx
fwait
dec
pusha
retf
mov
or
mov
aad
loope
xor
scas
addr16
data16
and
les
mov
out
sar
ss
in
mov
cmp
adc
data16
aam
inc
mov
sub
mov
fist
jne
push
ja
imul
add
push
retf
jbe
mov
pop
xchg
sbb
mov
test
pushf
xor
in
dec
imul
imul
dec
jecxz
xchg
sbb
scas
les
inc
mov
movs
cmp
jbe
scas
jbe
dec
pop
fwait
add
and
fimul
(bad)
bound
pop
mov
mul
mov
popa
shl
out
and
call
xor
stc
es
sbb
cmc
mov
xchg
jb
mov
das
pop
adc
push
jecxz
das
add
(bad)
lods
inc
xor
out
popf
mov
xchg
sub
xlat
jl
mov
jge
call
mov
std
std
pop
adc
inc
pusha
dec
cli
sub
stos
mov
out
pop
inc
jl
push
ret
add
mov
sbb
xchg
xchg
(bad)
jmp
shl
dec
adc
jle
cs
xor
mov
adc
cmp
scas
aad
movs
push
xchg
mov
mov
xor
add
or
stc
arpl
mov
scas
sub
or
sub
sbb
lahf
mov
leave
add
ss
adc
ret
cs
and
pop
push
mov
pop
dec
xchg
scas
and
xor
dec
mov
fadd
mov
sub
push
rcr
pop
rcr
ja
inc
je
adc
mov
push
scas
ja
sub
(bad)
mov
cmp
push
lods
ins
enter
jae
jl
pusha
int3
cmp
jb
es
or
out
ins
mov
pushf
in
repnz
mov
add
es
xchg
inc
push
sahf
and
xchg
or
jns
add
dec
lock
xor
std
std
add
inc
adc
ror
lahf
mov
nop
xchg
scas
push
dec
and
sti
out
mov
hlt
call
(bad)
scas
sub
inc
jno
(bad)
jge
jmp
daa
es
or
sub
loopne
xchg
shl
sub
(bad)
call
into
loope
mov
ror
stos
cmp
jmp
cld
imul
sbb
jmp
push
cmc
pushf
adc
push
pop
xchg
aad
dec
fisub
shl
xor
and
aad
outs
xor
stos
into
out
scas
(bad)
cmp
push
shr
jmp
mov
mov
adc
aam
inc
mov
out
fist
fnstsw
je
call
sub
xchg
or
adc
push
popa
xchg
sbb
lds
fld
add
push
aaa
shl
loop
pop
cwde
mov
or
test
into
mov
jmp
push
pusha
lods
pop
xor
cmp
outs
and
scas
(bad)
repz
imul
xchg
mov
sub
xor
add
(bad)
out
out
mov
pop
jo
sub
jns
sub
dec
int3
mov
shr
sbb
test
fcmovbe
mov
xor
in
pop
hlt
addr16
stos
or
push
cmp
fisttp
cmps
stos
popf
outs
cmps
inc
out
add
cmp
pushf
sbb
dec
inc
daa
test
les
ja
imul
dec
(bad)
sar
add
retf
push
fmul
add
scas
push
xchg
scas
push
sbb
mov
inc
jnp
xor
pop
mov
mov
mov
push
jmp
in
sbb
addr16
je
cli
retf
and
test
lea
ds
or
xchg
ja
push
push
psubw
add
push
cmp
jbe
mov
push
cmp
shl
outs
fld
rcr
or
push
test
inc
adc
mov
int3
(bad)
xchg
push
out
into
cmc
mov
aad
push
jecxz
lods
out
mov
scas
dec
push
add
xchg
imul
cdq
jle
cmps
stos
shr
aam
mov
xor
pop
mov
lahf
int
mov
test
mov
xor
shl
es
je
in
jl
jae
adc
(bad)
jmp
cld
outs
in
popa
stc
dec
jne
std
xchg
leave
jl
test
inc
addr16
loop
push
ja
enter
out
ror
scas
ins
sub
mov
lds
cld
popf
adc
ret
pop
adc
push
jo
cmc
fld
xor
imul
mov
in
retf
mov
test
out
fsubr
rcl
outs
and
clc
enter
int3
jp
cmc
add
into
sbb
repnz
ins
lds
cdq
pop
cwde
mov
and
push
div
enter
jnp
test
iret
xor
adc
add
test
cmps
mov
mov
scas
sbb
shl
test
add
mov
movs
inc
jnp
and
adc
push
xchg
mov
or
mov
and
add
mov
test
push
push
pop
push
mov
xor
jl
push
in
ins
(bad)
cmc
mov
pop
mov
(bad)
(bad)
sti
dec
cld
mov
movs
clc
jmp
pop
in
fdivr
out
jge
add
sub
jecxz
pop
in
jbe
add
xlat
mov
(bad)
xor
push
int3
xor
pop
xor
stmxcsr
test
cmps
test
aad
imul
push
das
in
inc
push
in
mov
mov
mov
jns
sbb
sbb
xchg
or
out
xor
and
mov
add
(bad)
movs
in
(bad)
or
jns
mov
or
je
enter
div
outs
sahf
std
or
mov
retf
xor
mov
sbb
inc
iret
mov
das
push
mov
xor
cld
arpl
dec
out
mov
mov
gs
mov
mov
repz
xchg
(bad)
pusha
mov
mov
stos
jo
and
xchg
xor
test
leave
lods
rol
sbb
jo
jmp
cmps
stc
adc
call
nop
pop
fwait
cmc
inc
rol
or
push
or
out
inc
inc
fs
pop
in
inc
xor
adc
push
jbe
inc
xchg
cld
pop
std
sub
out
mov
inc
jne
adc
pop
(bad)
dec
push
pop
jp
out
xor
dec
imul
ret
je
dec
cld
xchg
sub
cmp
dec
pop
sbb
stos
pop
push
pop
hlt
sbb
xor
cli
pop
push
les
pop
daa
mul
iret
or
adc
xchg
push
in
mov
push
sahf
daa
dec
jle
cmp
hlt
out
or
es
fwait
mov
rcr
cmp
and
int
xor
sub
js
movs
adc
sbb
sub
out
in
leave
jb
leave
push
mov
mov
adc
(bad)
jg
rol
sti
jns
enter
ss
xor
div
repnz
xor
out
repz
loopne
icebp
dec
call
jge
and
nop
or
rcl
pop
mov
ss
cmp
fisubr
dec
clc
and
or
arpl
lds
pop
push
push
out
(bad)
aam
dec
fimul
xchg
rcl
dec
loopne
inc
pop
(bad)
femms
(bad)
pop
fst
sar
jns
cmp
mov
retf
adc
jg
nop
ins
add
push
mov
das
add
sub
inc
lahf
adc
or
popf
mov
jmp
hlt
imul
aas
out
and
cmc
sahf
repnz
ret
pop
std
les
mov
sub
mov
jg
cs
mov
cmp
jp
mov
and
call
mov
iret
(bad)
sub
stos
mov
aas
adc
jmp
adc
lods
fiadd
pop
and
adc
xchg
add
push
xor
mov
imul
stos
sub
push
out
mov
icebp
repz
scas
sub
addr16
aad
out
push
js
adc
ret
movs
and
nop
movs
pop
ror
jl
hlt
pop
js
push
sub
popf
push
(bad)
hlt
mov
xchg
and
les
jge
push
test
mov
xchg
dec
pop
mov
cs
(bad)
and
stos
sub
cmps
jle
cmp
mov
idiv
sbb
sar
adc
mov
xchg
lods
jmp
lds
pushf
add
test
les
rcl
mov
cmc
outs
aad
add
in
or
push
mov
cli
loopne
mov
or
cmp
push
std
pop
sub
pop
into
sbb
jns
enter
stos
add
jl
lods
sar
mul
xchg
scas
or
or
test
pop
aaa
dec
mov
cmp
(bad)
lods
mov
arpl
xor
jle
in
in
cmps
int3
xchg
mov
xchg
jno
nop
jmp
(bad)
int3
push
retf
ficomp
test
and
nop
inc
pop
add
gs
xchg
and
pop
jle
mov
aad
fcomp
iret
(bad)
pushf
gs
retf
or
jnp
(bad)
cmp
mov
pop
jnp
push
fwait
add
cs
sbb
cmps
(bad)
js
mov
mov
and
mov
inc
sub
fwait
mov
push
scas
pop
jl
add
pop
sbb
imul
xchg
out
popf
sbb
stos
adc
fadd
xchg
out
(bad)
clc
ret
mov
mov
ficom
das
add
ret
into
scas
mov
sti
dec
push
sti
inc
mov
mov
call
lods
mov
inc
leave
pusha
dec
out
in
lock
jmp
push
sbb
inc
add
jle
pop
je
ror
ins
dec
std
xchg
or
retf
or
lahf
xchg
gs
enter
mov
xchg
fild
lods
sahf
(bad)
cmp
outs
rcr
adc
clc
pop
dec
cmp
loope
imul
xor
in
add
mov
mov
addr16
inc
call
pop
mov
call
adc
xchg
add
xchg
cli
push
adc
sbb
jo
lea
scas
aaa
sbb
xchg
fisub
ror
outs
pop
mov
cmp
sub
lock
cmp
sub
cmps
int3
cwde
adc
cmp
fst
mov
imul
pop
push
inc
aaa
cmp
imul
cmp
pusha
adc
mov
retf
and
adc
arpl
dec
add
mov
mov
cld
jo
in
sub
out
stc
mov
push
mov
push
daa
cmp
add
jne
jnp
pop
loop
mov
lock
ins
jns
outs
xchg
fwait
popf
es
aam
add
cmp
in
cmp
fmul
in
mov
aam
mov
jg
or
(bad)
jmp
(bad)
cmps
repz
mov
mov
xchg
cmps
popa
fild
lods
fnstenv
xor
test
pop
pop
(bad)
mov
out
movs
imul
stc
(bad)
inc
(bad)
loop
sub
neg
adc
fild
fwait
aam
dec
nop
fs
test
nop
ret
popf
add
mov
gs
pop
test
mov
(bad)
xor
gs
lds
or
and
aas
test
jge
fs
cmps
cmps
mov
jae
mov
mov
mov
sub
jecxz
scas
enter
je
dec
jp
shl
jne
adc
neg
ins
push
aas
popa
mov
and
jl
(bad)
je
mov
mov
mov
mov
(bad)
mov
mov
pop
jbe
jnp
xchg
sub
not
pushf
mov
xchg
gs
inc
pop
mov
(bad)
mov
jno
jle
pop
xor
ss
sub
popf
(bad)
jmp
push
inc
and
fnclex
jmp
pop
mov
jmp
adc
pop
mov
sbb
or
(bad)
loopne
call
(bad)
repz
es
jg
mov
aam
lock
in
shl
mov
test
in
pop
cmp
or
mov
xchg
pop
mov
es
push
jmp
adc
pop
imul
pusha
outs
mov
mov
icebp
mov
test
out
test
jbe
adc
outs
aad
cmps
sar
push
hlt
push
fisubr
pop
int3
cli
leave
mov
xlat
(bad)
out
xchg
addr16
mov
ds
mov
mov
mov
sbb
leave
out
lods
add
push
jmp
int3
cmp
lods
or
mov
cmp
xchg
mov
inc
or
int3
pop
jno
stos
out
mov
test
je
in
pop
movs
sub
sbb
dec
inc
fldenv
add
test
repz
test
je
loopne
cmp
sub
(bad)
fist
or
leave
in
into
fldenv
inc
sub
sbb
xor
pop
(bad)
sub
ins
(bad)
scas
jecxz
rcl
fs
test
cmc
inc
sub
jl
cld
cmp
cmp
lods
jo
dec
mov
xor
xor
idiv
scas
mov
inc
inc
add
or
imul
mov
push
xchg
data16
psubb
lahf
and
mov
dec
push
pop
adc
jecxz
sbb
mov
imul
mov
(bad)
pop
stos
(bad)
mov
in
mov
mov
je
cmpxchg
adc
retf
std
pop
dec
dec
fwait
movs
gs
ins
mov
outs
jbe
pop
dec
fnstsw
jne
sub
push
daa
and
icebp
test
cli
dec
sbb
rcr
pop
xor
and
lods
scas
add
cmp
inc
shl
mov
pop
dec
arpl
scas
sbb
in
and
leave
aad
sub
scas
and
xchg
ja
loopne
push
pop
pushf
lods
xor
cmc
out
shr
adc
rcr
cmp
xchg
rcr
cli
jns
sbb
repz
aad
xor
adc
xchg
movs
stos
enter
mov
sub
inc
icebp
inc
xchg
jno
push
aam
nop
or
and
mov
sahf
xor
mov
inc
cmp
mov
mov
cmp
sub
mov
bnd
or
xchg
mov
or
loop
push
scas
(bad)
loope
xor
mov
sbb
dec
cld
jb
xor
aam
jecxz
jns
int3
call
nop
push
sub
int
pop
movs
mov
cs
imul
in
jae
push
pop
popa
mov
and
mov
(bad)
pop
mov
mov
xchg
cmp
mov
das
or
pop
pop
addr16
aaa
std
mov
mov
shl
xchg
jl
test
ficom
adc
adc
xchg
imul
repnz
stos
mov
lods
lahf
jmp
mov
cwde
cmp
mov
fdivr
push
pop
in
cmp
std
lds
faddp
movs
sbb
out
mov
enter
mov
jae
and
inc
stos
lahf
sbb
mov
pop
xchg
leave
xchg
mov
das
into
mov
fadd
retf
xlat
(bad)
mov
cmps
loopne
scas
or
(bad)
and
inc
push
xchg
mov
into
and
xchg
rcl
cmp
pop
leave
mov
dec
mov
pop
daa
adc
sbb
xor
shl
popf
ds
and
xchg
pop
fidiv
fdivr
cmps
xchg
movs
int
xor
push
sub
cmp
or
dec
call
(bad)
imul
push
(bad)
jno
jmp
push
aad
ret
ficom
repz
mov
dec
(bad)
and
jp
mov
add
dec
mov
sub
dec
or
and
and
jecxz
into
cmp
fwait
cmp
mov
push
add
add
jo
pop
scas
loop
fs
shr
cdq
pusha
lods
(bad)
call
mov
dec
frstor
dec
and
in
hlt
jnp
inc
fistp
loope
nop
push
lahf
xchg
call
adc
mov
(bad)
mov
push
repnz
sti
xchg
retf
mov
adc
xchg
mov
push
popa
sbb
into
mov
cmp
sub
and
rcr
inc
sub
xchg
mov
rol
(bad)
shr
add
jns
jnp
sti
test
rol
sub
push
ss
(bad)
shl
mov
lds
jge
jl
inc
mov
sbb
ret
shl
sub
xor
js
div
nop
mov
ret
out
or
push
int
call
in
inc
dec
cld
mov
int3
inc
js
sub
arpl
nop
add
ficom
jne
into
das
std
mov
xchg
popf
bound
jle
push
pop
sbb
mov
bound
sub
into
inc
jl
imul
ds
repnz
push
fsubr
(bad)
test
pop
pop
jns
stos
jg
push
mov
mov
mov
fiadd
addr16
push
xor
test
mov
add
out
in
inc
xchg
jle
call
inc
xor
xlat
add
lods
outs
imul
sub
dec
ret
shr
bound
out
sbb
das
sub
xchg
xor
jb
bound
retf
jne
js
mov
int3
xchg
sbb
shl
daa
inc
shl
mov
mov
cmc
xrelease
pop
inc
lahf
sbb
dec
push
sbb
mov
loope
mov
dec
lock
xlat
xchg
scas
push
and
mov
pop
cdq
jno
idiv
into
sub
call
and
sbb
mov
xchg
loopne
jbe
mov
xchg
and
xchg
inc
lea
jl
lea
in
jno
and
and
shl
sub
mov
stos
out
xor
test
push
gs
enter
cmp
mov
out
retf
stos
test
outs
std
sub
repnz
fdivp
sbb
fucom
inc
pop
inc
ret
jl
cli
aam
xor
add
je
in
jns
(bad)
dec
icebp
js
sbb
inc
stc
loop
cmp
ins
hlt
js
ret
or
call
sub
les
cmp
gs
jge
pop
out
pop
push
(bad)
stos
mov
mov
adc
add
mov
or
std
sub
mov
mov
sbb
int3
push
add
jbe
(bad)
xor
dec
adc
cmp
dec
pop
dec
test
test
mov
cmp
test
mov
lahf
in
lods
mov
pop
jmp
test
mov
add
xchg
mov
fisttp
sub
and
bound
ret
xor
push
iret
mov
addr16
aam
mov
sub
jmp
movs
(bad)
das
jg
adc
bound
add
and
mov
and
jo
sti
cmps
in
cmps
pop
mov
cmp
out
xchg
and
inc
out
arpl
(bad)
pushf
mov
imul
daa
sbb
cmp
int3
pop
fist
repnz
scas
aam
push
add
ins
mov
ins
sti
rcl
add
ja
sub
fistp
mov
neg
shr
sub
or
lods
imul
dec
hlt
xor
sbb
push
jmp
fwait
pop
fucomp
xchg
fnsave
scas
push
adc
xchg
adc
push
or
mov
ds
dec
out
stos
or
dec
cwde
out
jne
les
or
lock
jnp
fist
add
jmp
xchg
out
dec
ins
pop
setno
xor
sub
(bad)
or
push
dec
(bad)
sub
pop
sub
xor
jo
rsqrtps
ins
clc
push
pop
std
stos
fdivr
(bad)
fwait
adc
add
ins
mov
inc
mov
jae
push
in
and
pop
adc
push
cmp
shl
mov
in
imul
popf
mov
jecxz
mov
dec
iret
adc
or
fsin
cmp
mov
mov
(bad)
pop
pusha
push
pop
(bad)
fisttp
jp
fbstp
pop
leave
int
xchg
(bad)
push
and
mov
stos
pop
dec
adc
fild
fisttp
mov
(bad)
mov
out
xor
cs
stos
sub
dec
ins
add
mov
cwde
mov
data16
or
cmp
scas
dec
inc
fbld
xor
fidiv
ror
(bad)
mov
je
out
sbb
adc
cmp
lock
das
or
and
ja
iret
imul
int3
and
cmp
dec
sahf
add
push
cmp
mov
inc
in
xchg
inc
clc
es
repnz
jg
imul
iret
sbb
fstp
out
ds
aas
pop
mov
push
mov
leave
cwde
push
mov
push
stc
sar
and
push
xchg
das
mov
lock
adc
repnz
(bad)
dec
in
ja
mov
mov
sub
into
ror
and
mov
xchg
pop
dec
es
jo
pop
inc
cmp
(bad)
(bad)
stos
les
lods
fwait
mov
sub
loop
jno
push
xor
mov
cld
adc
sbb
(bad)
mov
xor
loopne
push
aaa
repz
mov
sub
or
retf
mov
mov
mov
scas
xchg
mov
sbb
imul
js
jmp
xor
(bad)
jb
push
rol
xlat
fisttp
les
push
fcom
out
jns
mov
xor
int3
xchg
jae
in
imul
ins
xchg
shl
ror
cmp
push
mov
xor
es
sbb
or
mov
xchg
cmp
xchg
adc
movs
adc
cmps
neg
into
imul
dec
push
dec
lahf
jl
cmps
xor
mov
outs
xchg
call
ret
dec
aam
xchg
push
mov
push
call
scas
mov
icebp
xchg
xor
pop
mov
lahf
out
cmp
jb
lock
add
cmp
fldenv
cmps
repnz
mov
cmp
mov
xchg
std
retf
or
dec
fs
jns
and
and
push
dec
and
mov
retf
xchg
in
jne
inc
sub
jle
dec
and
out
cmp
jne
int3
sub
inc
popa
cmp
test
jno
jb
cmp
push
push
add
mov
xor
xor
mov
xchg
in
xchg
imul
add
in
xchg
shl
clc
jnp
cmps
add
fnsave
sub
pop
xor
mov
mov
adc
aas
inc
dec
push
cwde
std
aaa
mov
push
je
sub
rol
jecxz
repz
dec
pop
sbb
mov
inc
mov
(bad)
sbb
xor
ret
pop
aaa
cmp
ds
fidiv
(bad)
popa
cli
xor
aaa
cs
jp
jo
(bad)
mov
pop
and
repnz
aas
xor
add
std
lock
inc
shl
mov
mov
fstp
lods
in
ds
(bad)
mov
shl
dec
inc
cmp
mov
push
sub
call
sar
xchg
cmp
or
psubsw
mov
ret
sub
jns
in
inc
daa
jge
mov
sbb
int3
add
jne
mov
sbb
in
xor
push
pop
ins
dec
and
(bad)
mov
enter
aam
sbb
mov
in
push
xchg
push
mov
sbb
lds
test
xor
dec
cld
(bad)
mov
inc
cmp
in
push
dec
pop
pop
ret
fmul
xchg
fistp
jno
in
jmp
movs
xor
dec
sbb
fimul
leave
pop
mov
fldenv
add
ror
jbe
cmp
scas
mov
arpl
pushf
outs
jmp
sbb
jbe
and
ds
int3
pop
push
dec
outs
add
pusha
add
test
into
push
inc
sbb
xchg
pop
fwait
or
lock
icebp
in
movs
mov
mov
xchg
les
cmps
push
jb
pop
xchg
mov
aam
lods
nop
add
adc
jno
fidiv
or
add
aad
movs
sbb
jns
push
sar
mov
ins
leave
jmp
sub
fwait
mov
scas
mov
pop
pushf
push
adc
loope
sub
pop
or
test
xchg
ror
ds
mov
adc
pusha
jl
mov
adc
iret
cli
adc
ins
mov
movs
or
lods
and
rcr
xor
mov
mov
(bad)
pushf
xchg
adc
inc
sbb
ja
int3
inc
inc
loop
jb
inc
xor
dec
pop
out
hlt
jmp
cmp
and
sub
jmp
imul
pop
mov
xchg
sbb
ret
stos
and
dec
or
imul
dec
movs
fstp
or
adc
shr
popa
push
add
adc
dec
sahf
pop
and
loopne
in
cwde
or
mov
xchg
or
test
in
xchg
jmp
mov
and
scas
(bad)
lods
cmp
pusha
adc
inc
mov
xor
jb
adc
aaa
xchg
lahf
iret
rcr
inc
scas
ret
or
push
push
test
add
stc
stos
iret
mov
loop
add
clc
pop
mov
jge
adc
daa
icebp
les
jno
loop
and
or
mov
rcl
arpl
xchg
jle
sub
cld
inc
test
loope
dec
push
sub
ins
push
daa
dec
xor
and
outs
out
int
(bad)
js
aam
lods
lods
push
cs
cmp
mov
xor
int
cs
mov
mov
dec
ins
or
or
and
inc
fcomp
nop
sub
aam
lea
inc
cs
mov
in
stos
shl
enter
sub
sub
call
fidiv
aas
test
loopne
jecxz
int3
cmp
(bad)
aam
dec
rcr
lods
mov
sti
mov
xchg
sbb
(bad)
out
std
or
mov
or
inc
lds
and
sbb
inc
ins
push
(bad)
inc
mov
lods
out
mov
fsub
dec
inc
fwait
dec
(bad)
push
test
jne
dec
cli
retf
dec
inc
jmp
scas
jo
push
mov
mov
call
in
out
xchg
into
sbb
mov
addr16
dec
cmp
add
out
push
retf
cmp
sub
(bad)
js
repz
push
test
cwde
mov
inc
or
and
inc
or
inc
xor
or
(bad)
out
xor
stc
test
int
push
inc
fst
cdq
fnstcw
jl
ss
(bad)
nop
jbe
cmp
push
into
mov
dec
out
rcl
mov
lods
add
or
sahf
pusha
cwde
mov
dec
add
mov
mov
bound
pop
jg
xchg
pop
cmovle
push
cdq
(bad)
and
call
xacquire
fcomp
lods
sbb
ss
shl
add
push
lea
push
push
stos
(bad)
pop
xlat
add
cmp
and
nop
int3
xlat
fdivr
jmp
jne
and
ret
(bad)
cmp
adc
enter
(bad)
ins
sub
adc
pop
xor
pop
test
retf
and
cmp
loopne
cmc
mov
in
jmp
pop
inc
sbb
xchg
jno
dec
inc
inc
jb
pop
sahf
lea
popa
mov
push
push
or
and
es
sub
push
adc
sbb
inc
and
pop
jnp
and
sub
scas
mov
scas
pop
test
cwde
test
jno
jge
pop
mov
in
mov
fistp
push
pop
push
frstor
movs
outs
ss
je
ins
xlat
in
jp
cmp
test
push
scas
sbb
dec
pop
mov
out
rol
outs
int3
pop
mov
inc
and
lea
popa
jae
mov
inc
cmp
or
mov
cmp
fs
jle
call
into
(bad)
hlt
sbb
das
cmps
inc
scas
std
into
retf
ret
mov
cmc
sar
and
pop
cdq
daa
fstp
xchg
jle
pushf
movs
inc
jb
test
movs
xor
push
xor
or
dec
mov
movs
fist
dec
pop
retf
push
pop
(bad)
jmp
pushf
or
mov
repz
or
inc
movs
add
into
mov
popf
outs
scas
pop
jl
pop
xor
mov
fadd
or
in
shl
call
test
push
pop
jnp
repz
adc
jmp
xchg
iret
inc
scas
mov
(bad)
mov
test
sub
(bad)
call
(bad)
dec
ret
xor
push
popa
mul
dec
jge
and
cmp
(bad)
xchg
xchg
mov
cdq
rcl
fdiv
cmp
imul
cmp
mov
data16
sub
clc
loop
movs
cmps
inc
hlt
pusha
xchg
mov
stos
call
pop
inc
mov
test
push
xor
nop
(bad)
(bad)
xor
cmc
sub
sub
pop
loopne
mov
repz
std
into
push
pop
cli
test
mov
jno
pop
addr16
retf
(bad)
add
add
add
lock
inc
(bad)
pop
adc
mov
xchg
jmp
popf
jnp
sbb
test
out
outs
xor
and
pop
push
push
push
mov
cdq
int
jmp
aas
xchg
mov
(bad)
mov
ror
push
pxor
(bad)
setbe
inc
loope
add
push
xor
aas
scas
mov
mov
add
stc
fnstenv
xchg
js
mov
lds
cdq
push
or
mov
jmp
icebp
test
xchg
xchg
pop
push
xor
test
outs
jno
xchg
and
ret
imul
sbb
jo
add
jp
mov
fsubr
sub
out
add
ss
mov
dec
mov
inc
loop
test
jge
pop
ins
sbb
jle
pop
dec
inc
mov
pop
mov
lahf
jmp
and
inc
jge
call
lock
xchg
gs
sub
mov
jae
and
outs
adc
sbb
xor
inc
push
mov
fdiv
xlat
pop
(bad)
mov
cwde
aad
cmp
test
push
mov
jle
in
(bad)
lahf
add
jp
in
adc
mov
adc
mov
aad
jge
xchg
lahf
xchg
lock
sti
pop
mov
lods
mov
data16
cmps
adc
or
jns
cs
ficomp
addr16
jge
pop
call
mov
scas
lds
pop
stos
ins
and
fistp
dec
and
cmp
pusha
push
aaa
sub
jb
fcom
loop
mov
ds
sub
call
fcomp
(bad)
mov
fldenv
jns
mov
jp
add
aad
or
xchg
sahf
pusha
xchg
sbb
and
test
in
aaa
test
div
push
push
jnp
pop
loope
loop
mov
xchg
sbb
xor
test
jne
or
or
or
adc
(bad)
rol
popa
mov
pop
dec
push
sub
(bad)
sti
inc
adc
out
dec
cmp
sti
sub
xchg
jns
add
push
mov
mov
mov
sub
mov
movs
test
cmp
mov
std
and
mov
(bad)
rcl
xchg
test
sub
pop
mov
xor
nop
push
jl
mov
je
clc
or
xchg
and
loope
jle
cmp
push
pop
mov
xor
and
or
ja
xor
mov
je
imul
jge
jb
daa
xchg
dec
sbb
sub
xchg
push
(bad)
clc
dec
leave
mov
iret
cwde
movs
outs
xchg
lahf
aad
out
adc
sbb
mov
pop
mov
sahf
in
and
loope
or
lea
push
mov
jg
fisttp
adc
sub
mov
pop
sbb
js
(bad)
push
stos
cmps
and
push
enter
mov
add
mov
ret
adc
addr16
cdq
ror
out
xor
in
mov
push
arpl
sub
and
mov
cwde
lods
lock
cmp
cmp
xlat
inc
jmp
push
sub
push
(bad)
and
jnp
ja
pushf
fstp
(bad)
pop
add
gs
pop
add
sbb
sbb
cli
mov
and
sub
add
fdiv
lods
sub
jle
lea
sub
inc
cmp
dec
nop
sbb
cld
repz
enter
inc
adc
iret
xchg
sbb
sub
dec
cwde
in
push
mov
sub
xchg
fwait
and
nop
push
dec
sub
outs
mov
xor
pop
mov
pop
scas
jno
nop
xchg
pop
shl
out
std
stos
mov
jle
js
sbb
sahf
je
mov
jmp
jb
sbb
mov
cmp
inc
jae
mov
sbb
out
push
loopne
imul
ja
cli
(bad)
out
cmps
or
and
loope
popf
imul
or
fcomip
inc
stos
dec
js
cmp
mov
outs
pop
and
add
scas
or
(bad)
and
inc
adc
(bad)
sbb
es
repnz
clc
mov
rcl
mov
pop
dec
xchg
lods
dec
aaa
pop
push
mov
in
mul
stos
cmp
sub
mov
sbb
mov
mov
shl
movs
push
inc
add
dec
cmps
aaa
ficom
(bad)
cmc
lds
je
mov
cmp
shr
ds
push
cmc
out
call
scas
test
scas
out
nop
addr16
ins
(bad)
(bad)
or
inc
push
mov
push
(bad)
pop
repnz
jb
xchg
and
icebp
pop
pop
mov
adc
inc
dec
cmp
leave
sti
mov
ja
cmc
xor
sar
push
ret
push
sbb
repnz
dec
rcl
fucomip
stos
pop
out
fisubr
out
adc
xor
sbb
mov
ds
movs
push
rep
je
pusha
dec
repz
ret
mov
pop
lahf
icebp
xchg
loope
movs
cmc
sub
clc
push
add
or
mov
push
xchg
les
idiv
xchg
and
mov
inc
pop
in
and
movs
mov
fs
dec
aam
xor
mov
pop
adc
sub
addr16
psrad
fbld
outs
stc
bound
shl
jecxz
es
fist
test
inc
mov
xor
imul
mov
and
cmp
dec
adc
cmp
dec
ret
mov
mov
inc
stos
sbb
cwde
jmp
iret
or
dec
dec
mov
in
shl
out
imul
call
jg
mov
jae
ins
sbb
das
loop
lods
out
push
sub
les
loope
hlt
mov
int
mov
adc
xadd
mov
mov
or
mov
push
cmc
mov
popa
test
in
dec
test
(bad)
lahf
cwde
addr16
mov
sahf
jl
fist
loop
es
(bad)
popa
jle
push
add
mov
mov
push
push
or
in
xor
xor
jno
lods
call
sbb
xchg
imul
push
inc
enter
(bad)
pop
sub
sub
xchg
pop
sub
gs
rcr
cwde
dec
cdq
loope
in
loope
fidiv
dec
push
push
inc
sub
fs
sbb
mov
aam
scas
icebp
sub
or
sub
les
lds
fisttp
cmps
mov
pop
push
(bad)
dec
enter
test
xor
rol
add
nop
push
push
lahf
sar
mov
std
pop
pop
dec
aas
clc
push
xchg
int3
jge
and
jnp
jge
pop
imul
jmp
add
cmp
cld
imul
dec
adc
sub
mov
mov
cdq
dec
rcl
leave
popf
push
js
repz
outs
mov
test
and
mov
es
mov
adc
outs
sbb
jg
adc
addr16
imul
in
and
sub
jae
sti
std
mov
(bad)
jbe
push
mov
jg
(bad)
mov
cmps
(bad)
add
int3
pop
push
mov
ret
cmp
loopne
(bad)
push
mov
sysret
(bad)
sti
fistp
inc
shr
std
arpl
cdq
rcl
xor
or
and
xchg
cli
xchg
cld
jmp
or
lods
out
dec
aaa
adc
jl
jno
test
stc
inc
fild
xchg
xchg
aam
js
das
icebp
jmp
sbb
mov
xlat
sbb
out
adc
sub
sti
cmps
sbb
xchg
fwait
fs
das
ja
inc
ja
adc
mov
lock
jge
bound
test
xor
pop
and
push
cmp
pop
out
add
out
sub
ins
dec
jne
aaa
jecxz
int3
mov
arpl
push
fs
xchg
mov
push
hlt
or
icebp
mov
adc
add
sub
mov
xchg
sub
inc
hlt
push
xchg
imul
mov
call
mov
sbb
push
rcr
pop
fnstenv
inc
xchg
mov
xchg
stc
mov
fnsave
mov
xchg
mov
ja
xor
add
or
(bad)
sahf
sub
(bad)
pop
sub
(bad)
or
xor
(bad)
and
daa
dec
nop
push
cmp
mov
jp
and
movs
popf
inc
push
loop
lods
into
fidiv
cli
aad
in
inc
inc
cmp
in
sub
mov
je
adc
mov
mov
mov
add
xlat
push
dec
adc
mov
dec
mov
jmp
cdq
ins
dec
pop
out
mov
je
lods
call
dec
mul
push
push
dec
push
or
jb
cmps
int3
repnz
add
ins
xor
in
push
fsubr
mov
and
stc
rol
push
call
ret
push
adc
inc
pop
inc
sti
pop
xor
pop
mov
sbb
not
push
mov
popf
xor
pop
push
fcom
fdiv
cs
push
pop
jmp
push
cmp
xchg
pop
test
pop
les
into
(bad)
(bad)
lock
mov
jl
or
xchg
rcl
arpl
test
and
arpl
aas
mov
sbb
mov
jb
mov
sbb
ss
test
push
int3
xchg
pop
add
out
in
jecxz
je
(bad)
cmp
adc
ds
mov
mov
cmc
mov
mov
inc
add
adc
(bad)
mov
pop
jns
stc
int3
add
xchg
call
js
xchg
lods
test
das
dec
push
pusha
ret
rcl
and
aam
mov
jge
adc
pusha
xor
and
shl
dec
add
idiv
cwde
(bad)
push
xor
aam
ds
sahf
push
jnp
popa
adc
out
mov
push
in
cmp
xchg
(bad)
dec
jns
push
lea
pop
pop
cmp
stos
mov
test
sbb
ins
addr16
fwait
gs
mov
ret
or
cmp
sbb
imul
xor
push
out
pop
jmp
outs
xor
out
movs
addr16
(bad)
pop
imul
stos
cli
and
jmp
imul
jb
pop
call
test
(bad)
push
pop
cmp
(bad)
mov
pusha
sbb
leave
sbb
mov
pop
lock
pusha
loopne
addr16
out
movs
sbb
test
or
mov
movs
xchg
push
push
xlat
and
sub
cli
dec
adc
jno
inc
jle
pop
inc
jle
add
xchg
(bad)
(bad)
sar
fldenv
icebp
fstp
stos
xchg
or
mov
test
dec
mov
jns
add
xor
mov
cli
cmp
mov
mov
mov
int3
jl
inc
stos
inc
sub
jmp
je
mov
pop
push
in
in
sub
mov
mov
sub
mov
retf
inc
xchg
cmc
stos
call
out
or
mov
mov
push
jno
lock
shr
je
cmp
mov
xchg
mov
movs
aaa
je
add
adc
ss
imul
mov
push
sub
mov
jne
xchg
dec
(bad)
xor
cmp
mov
icebp
pop
mov
push
mov
aam
sub
imul
dec
cmps
push
jl
int3
xchg
adc
sub
xchg
pop
sti
dec
or
and
call
or
pushf
dec
or
cmc
mov
outs
mov
mov
jmp
das
ficom
mov
test
xchg
sub
jno
dec
jl
stc
xchg
pop
fstp
out
clc
clc
sbb
lahf
xor
ret
push
mov
or
xchg
clc
loopne
outs
mov
dec
test
retf
jne
movs
lods
push
iret
cmps
inc
xor
mov
xchg
add
ret
xchg
add
pop
pop
push
cmp
outs
in
and
icebp
cwde
push
aad
mov
mov
ins
mov
cmp
pop
fcom
add
and
pop
mov
sahf
sub
add
stc
add
nop
xor
pop
cmp
je
sub
idiv
cmps
dec
(bad)
mov
or
pop
int
(bad)
out
and
stos
cmp
push
or
cmp
shl
mov
mov
movs
rcl
stc
mov
inc
xchg
repnz
add
nop
inc
retf
pop
mov
cwde
fadd
inc
cmp
push
mov
jle
mov
xor
repz
or
adc
pop
in
sbb
neg
cmp
cld
mov
cli
mov
retf
out
stc
(bad)
sub
inc
fld
push
sub
lock
pop
sahf
arpl
mov
cwde
sbb
movs
inc
jae
out
push
add
inc
inc
clc
push
out
shl
add
(bad)
mov
add
push
cmp
and
xor
mov
add
sub
jo
pop
retf
cmp
jp
cmp
pop
(bad)
xchg
mov
(bad)
xlat
inc
mov
test
mov
add
pop
mov
mov
mov
call
mov
loop
dec
lds
mov
xchg
dec
jp
xchg
pop
ds
or
js
fmul
(bad)
and
rcl
and
repnz
(bad)
push
xchg
div
repnz
sbb
dec
jbe
icebp
movs
xchg
aam
test
xor
ds
push
xchg
aaa
inc
push
mov
fucom
call
nop
or
nop
outs
mov
and
imul
cmp
shl
(bad)
pop
aam
push
(bad)
mov
xchg
or
(bad)
jbe
adc
daa
bswap
push
stos
mov
cdq
das
add
jno
or
push
popf
call
out
mov
push
aad
mov
adc
repz
sub
dec
add
movs
add
xlat
fdiv
pop
dec
dec
dec
popa
jp
mov
int
xchg
les
(bad)
sbb
rol
adc
sub
mov
adc
push
sahf
lods
adc
cmp
rcl
pusha
cmp
int
cmps
or
lea
repnz
push
mov
or
mov
fnstsw
sbb
ja
fidiv
stos
mov
ds
div
and
or
test
sbb
sub
xchg
mov
pushf
dec
add
ror
jno
rcr
cs
jge
cmp
push
xor
jg
stos
inc
inc
mov
mov
ins
xor
cmp
adc
mov
and
inc
popa
in
mov
dec
mov
mov
xchg
jb
sahf
cmp
je
inc
sub
mov
dec
imul
scas
pop
mov
(bad)
int
inc
out
lea
shr
xchg
ss
(bad)
jmp
mov
cli
mov
sub
mov
and
ficomp
jbe
fwait
sbb
addr16
cmp
(bad)
(bad)
and
into
stos
out
push
enter
push
(bad)
stos
imul
inc
dec
shl
jg
(bad)
es
arpl
lahf
and
jg
dec
lods
nop
popf
retf
ja
pop
lahf
sub
jne
adc
stc
jmp
sbb
mov
push
inc
repnz
retf
jg
xor
cwde
push
push
fwait
dec
call
or
clc
sti
dec
pop
int3
rol
pop
les
cmp
imul
sub
push
xchg
cmp
pop
sbb
pop
and
dec
out
cmc
sub
jecxz
or
leave
dec
jl
inc
push
and
scas
xchg
iret
rol
sbb
shl
xchg
cs
gs
cmc
pop
fcomp
pop
ffree
fs
out
inc
add
push
daa
cwde
les
push
cmp
ret
jl
adc
clc
and
inc
sub
dec
mov
or
sbb
out
loop
jmp
mov
in
out
xor
dec
xor
xor
ret
sbb
cmp
mov
cmps
call
hlt
mov
fdivp
sub
and
mov
sbb
add
jg
push
pop
out
push
and
add
test
lods
data16
out
test
lods
xchg
mov
adc
jge
repnz
(bad)
mov
cld
cmp
out
jb
adc
out
call
push
sub
jno
dec
mov
mov
ss
imul
movhps
clc
ret
xor
inc
mov
sub
cld
ret
cmc
loop
out
or
lods
cmps
dec
add
mov
inc
push
xchg
xchg
mov
xlat
cmp
div
(bad)
jmp
pop
mov
loopne
popa
push
out
pop
mov
in
stos
mov
jae
movs
ret
cmps
sar
cmp
jl
pop
xchg
cmc
mov
gs
dec
xor
jge
jge
popf
iret
aas
inc
xor
pop
jp
or
sub
daa
fstp
dec
add
add
or
in
mov
(bad)
es
scas
mov
add
not
inc
or
xchg
xor
aam
inc
xor
test
lods
sbb
fist
jae
int
or
xchg
fwait
mov
bound
adc
mov
test
outs
xchg
jnp
and
sbb
gs
sub
xchg
sub
pusha
jbe
lds
das
mov
jp
js
add
push
stc
call
xchg
mov
pop
and
jecxz
or
fist
pop
mov
in
(bad)
adc
imul
imul
movs
test
lods
int
mov
push
mov
add
dec
dec
rcl
lock
arpl
call
xchg
sub
pop
inc
adc
and
pop
jl
scas
mov
cwde
test
jno
movs
adc
add
jae
(bad)
dec
and
outs
xchg
popa
cmp
sub
out
stc
sub
call
dec
jl
dec
fbstp
or
outs
mov
jae
xor
pop
loopne
xchg
data16
sbb
cmp
test
pop
fs
sbb
test
sub
pop
cld
cld
mov
stos
arpl
js
mov
repz
mov
pop
mov
pop
gs
sbb
jmp
push
adc
nop
std
mov
cwde
js
stc
pop
loope
sub
xor
(bad)
pushf
fld
cmp
loopne
call
iret
add
out
jmp
adc
dec
data16
mov
push
call
cmp
jnp
fsubr
cmps
pop
cmc
and
sbb
push
adc
in
add
sbb
mov
scas
pushf
movs
sbb
mov
sbb
inc
mov
dec
cmp
outs
jnp
add
stos
data16
adc
mov
stos
sbb
in
iret
out
cmp
int3
push
call
ficomp
aaa
iret
div
or
nop
and
pushf
outs
add
cmp
xor
cmp
int
ss
mov
and
inc
clc
ret
push
push
icebp
sub
sbb
stos
adc
inc
add
sub
ins
or
popf
test
shr
and
xchg
inc
nop
jns
xor
aas
lods
jno
cmp
pushf
adc
test
(bad)
ret
and
mov
xor
jg
sbb
jge
or
and
dec
mov
cmps
in
adc
mov
hlt
lds
rcl
add
js
pop
lahf
repnz
cmps
(bad)
in
mov
sub
leave
daa
popf
je
or
aas
adc
retf
fmul
ret
mov
mov
(bad)
jg
je
cmp
mov
adc
retf
jne
push
xor
xchg
sbb
cld
clc
int
or
sub
ds
nop
adc
mov
fdivr
mov
dec
xor
and
push
xor
cmp
inc
push
lods
loope
push
cmp
or
and
out
ret
sub
cdq
adc
(bad)
mov
dec
jo
lds
mov
cmc
xchg
push
mov
and
adc
add
xchg
push
adc
fld
sahf
pop
imul
adc
in
push
loopne
je
movs
xchg
cmp
ror
ins
shl
xor
retf
enter
mov
cmc
xchg
xchg
ss
sti
test
rcl
aas
fstp
or
test
pop
cmp
sbb
mov
fsubr
repnz
stc
mov
(bad)
fldcw
rcr
adc
inc
dec
sbb
xchg
dec
dec
(bad)
pop
mov
cmps
test
push
fiadd
mov
adc
pop
sub
adc
in
nop
lods
xor
xchg
inc
aas
sbb
xor
into
lahf
cdq
mov
pop
push
or
push
test
sub
cmp
test
adc
inc
in
jb
test
push
je
adc
xor
inc
or
dec
add
dec
adc
jns
stos
push
je
int3
push
xlat
xchg
ins
push
dec
retf
jle
out
sbb
mov
dec
cmp
je
ss
push
dec
push
inc
sti
jns
xor
pusha
sbb
sahf
sahf
cld
sbb
pushf
bound
pop
aam
dec
sbb
sbb
or
in
loopne
jns
ds
fst
stc
popa
jp
pop
lds
shl
ja
push
mov
test
or
cld
jno
xchg
add
mov
cwde
pop
cmp
xchg
js
mov
mov
loop
rol
pop
xlat
fptan
mov
mov
out
rcl
dec
je
lods
jae
jbe
jecxz
nop
jnp
pop
pinsrw
or
jns
out
wbinvd
push
out
mov
mov
xor
fdecstp
pop
or
pop
push
inc
xchg
lahf
mov
mul
mov
gs
out
out
mov
xor
ret
mov
cld
ds
ret
cmps
inc
xor
lods
sub
mov
or
xchg
cmps
cmp
pop
and
loopne
aad
nop
int
pop
inc
sar
dec
sub
call
in
sub
daa
outs
jg
dec
push
xor
dec
repz
scas
push
mov
fisub
shl
ins
daa
xlat
mov
push
icebp
test
sub
or
adc
xor
sub
cmp
mov
fwait
push
adc
and
push
pop
call
cmp
inc
sub
inc
inc
ret
shl
sbb
sub
iret
out
jns
inc
retf
push
enter
mul
add
mov
pop
mov
mov
add
xor
scas
sbb
or
cmp
cmp
sub
aad
xlat
loop
and
jbe
js
lea
xchg
sbb
imul
xchg
enter
outs
daa
push
adc
or
loopne
fnsave
mov
inc
add
xor
outs
retf
and
inc
mov
adc
or
shr
mov
sub
mov
test
xchg
outs
popf
mov
xchg
out
jb
repnz
xchg
and
and
pusha
cmp
(bad)
and
stc
mov
stc
sub
test
lock
fidiv
mov
add
jb
add
and
push
hlt
movs
mov
cld
in
daa
icebp
mov
lea
sar
fistp
mov
xchg
cmp
imul
test
in
ins
shr
jmp
cwde
fmul
mov
or
jb
jg
call
push
test
cmp
leave
jnp
dec
xor
or
xor
loopne
inc
std
and
fcomp
jb
mov
pop
mov
sar
pop
ins
pop
pop
push
mov
or
adc
je
ds
repz
dec
push
ror
in
dec
xchg
sub
sahf
test
mov
pop
jno
ret
and
and
adc
das
ds
add
cmp
or
xchg
mov
add
add
pop
jno
add
loope
and
xchg
sbb
aad
(bad)
mov
sub
mov
loopne
fistp
std
adc
adc
dec
dec
aam
into
sbb
lahf
imul
(bad)
das
mov
lahf
sub
cmp
adc
dec
jmp
addr16
rcr
(bad)
jp
push
jo
and
sbb
sub
xor
mov
jge
mov
cwde
inc
rcl
inc
pop
(bad)
jno
push
arpl
inc
or
js
aaa
and
aaa
push
ins
pop
cli
out
mov
jnp
mov
sbb
pop
add
shr
cld
loop
lods
cld
loope
and
pop
adc
retf
xor
cmp
dec
xor
dec
pusha
loope
pop
aaa
fild
scas
xor
repnz
dec
mov
xchg
mov
or
pop
push
push
mov
(bad)
popa
inc
out
dec
cwde
dec
fnsave
adc
dec
fldcw
mov
push
rol
mov
in
leave
xchg
lods
dec
icebp
fldcw
pop
dec
adc
or
out
icebp
aaa
mov
je
dec
and
mov
xchg
test
pop
adc
dec
mov
(bad)
mov
cmp
pop
movs
fs
out
aas
xor
rol
fwait
mov
mov
fwait
in
lods
mov
fsubr
add
aam
movs
inc
enter
dec
mov
xor
inc
push
bound
dec
(bad)
inc
inc
mov
adc
and
test
sub
or
imul
imul
pop
xlat
aas
cmp
sbb
shl
push
shr
outs
sbb
(bad)
(bad)
cmps
je
xchg
pushf
adc
lods
cli
inc
nop
sbb
sub
jl
repnz
jns
aad
(bad)
jge
bound
rol
cwde
adc
xor
xor
sub
sbb
jle
jns
int3
jae
pop
xor
data16
xchg
cmps
aam
jle
in
inc
popa
aad
or
dec
cmp
sbb
adc
mov
outs
pop
sbb
pushf
scas
cli
in
or
cmps
out
adc
jae
test
shl
pop
aas
mov
push
jmp
test
or
pop
aad
sbb
jmp
or
inc
retf
xchg
or
mov
jmp
ret
cwde
test
cmp
scas
push
sub
xor
pop
pop
add
loop
xor
pop
sar
dec
stos
int
xchg
test
jp
retf
push
dec
inc
fcom
push
and
aam
mov
fcomp
shl
mov
jecxz
cmp
bound
and
test
adc
ror
mov
es
fisttp
inc
sub
call
call
push
sti
sbb
popf
in
add
jns
int
loop
data16
add
icebp
sbb
into
(bad)
jne
pop
jo
sub
push
pop
aad
bound
adc
hlt
les
mov
and
call
xchg
stos
push
shr
rdtsc
pop
xor
(bad)
icebp
fild
shl
push
sbb
inc
sti
push
clc
sub
add
test
xor
enter
or
xor
xchg
push
xchg
xor
add
rol
sbb
sahf
int3
stos
rcl
jnp
xor
ffree
or
cmc
wrmsr
cmp
push
sub
cwde
push
dec
jle
mov
and
cmp
inc
outs
xlat
sub
cmp
inc
cld
lock
test
mov
out
jl
ret
sub
mov
push
ins
add
xchg
loop
ret
push
cmps
inc
outs
pop
inc
mov
mov
pop
js
sti
and
xor
inc
hlt
cli
pop
xor
dec
push
lods
call
test
mov
fsubr
inc
sahf
mov
outs
push
xor
dec
sbb
cmps
add
frndint
je
call
xchg
popa
js
in
arpl
sahf
mov
add
imul
mov
test
mov
test
scas
retf
out
inc
popf
es
jecxz
mov
xor
stos
jb
jg
arpl
xor
and
sbb
int
push
and
shl
add
lods
(bad)
mov
mov
add
xchg
fsub
lock
repnz
(bad)
and
pop
inc
xchg
dec
rol
or
test
repnz
dec
cmps
shr
outs
cmp
push
inc
or
dec
retf
loope
push
out
pop
xor
cli
pop
cmp
not
or
mov
fs
mov
mov
cdq
out
mov
push
mov
ja
mov
xor
daa
mov
pop
(bad)
mov
xchg
rcl
bound
mov
pop
inc
shl
out
lods
or
jno
div
mov
stos
dec
dec
neg
test
cmp
pop
retf
outs
or
stos
imul
jae
mov
dec
jb
ins
adc
jg
(bad)
ret
je
sahf
mov
fild
mov
shl
xor
inc
lods
push
das
xor
pusha
push
adc
or
mov
mov
and
push
adc
adc
dec
rcl
out
sbb
outs
nop
int3
sub
cmp
jo
cmps
cmp
lea
dec
lahf
adc
mov
xchg
sbb
shl
or
movs
or
push
xor
dec
cmp
iret
iret
outs
mov
addr16
test
cmps
and
sub
scas
retf
ins
cmp
jns
popa
int
jecxz
xchg
sbb
mov
(bad)
repz
mov
xor
mov
add
stc
add
push
loope
or
aaa
jmp
jg
std
fild
inc
hlt
push
mov
shl
pop
cmc
mov
and
jmp
push
stc
cmp
repnz
sbb
ds
mov
mov
cli
jae
rol
int
add
xor
sub
push
or
js
pop
ins
cmps
push
loopne
loope
arpl
and
xlat
mov
cld
popf
push
xor
fdivr
arpl
ins
mov
fadd
jmp
jno
push
repnz
cmp
gs
aaa
retf
cmp
rcl
cwde
cmp
or
sti
dec
add
add
div
pop
pop
movs
adc
inc
into
hlt
inc
push
mov
loop
mov
hlt
xchg
and
aam
lea
nop
fmul
mov
add
push
sub
mov
stos
lock
aam
xor
push
mov
sahf
add
test
cs
je
movs
nop
dec
xchg
inc
pop
push
sbb
xchg
out
aad
(bad)
sti
adc
movs
inc
cld
ret
xchg
mov
pop
inc
pop
adc
add
inc
nop
push
sub
in
aam
add
aas
cld
adc
inc
jmp
loopne
test
mov
jb
stc
xor
xchg
(bad)
das
cmp
push
push
or
ins
imul
out
retf
push
xor
dec
jmp
inc
out
out
cmps
inc
gs
push
call
(bad)
mov
or
mov
mov
push
mov
pop
xor
pushf
out
push
or
mov
scas
cdq
pop
fisubr
popf
dec
mov
clc
xchg
push
daa
jle
push
xchg
rcr
pop
push
fisubr
sbb
add
xchg
imul
jmp
xor
lahf
cmp
sbb
and
call
adc
sub
sbb
(bad)
pop
aas
cld
test
fcomip
mov
and
adc
mov
out
dec
movs
mov
shr
mov
add
in
mul
jp
and
cmps
fst
shr
loopne
lds
inc
fistp
bound
mov
xor
mov
test
cmp
sub
and
movs
push
fwait
aad
in
push
mov
fistp
in
ins
out
retf
loope
dec
scas
mov
cmp
rcr
mov
xchg
push
and
xor
stos
movs
sbb
jmp
outs
xor
aam
into
ss
loope
push
adc
jno
(bad)
mov
aaa
sbb
add
sbb
push
xchg
enter
loope
add
dec
fcmovbe
mov
jle
mov
mov
or
imul
in
mov
sub
jne
lea
sahf
pop
mov
jecxz
retf
leave
fisttp
aaa
mov
ins
loopne
cwde
int3
inc
inc
imul
ret
ss
stc
inc
outs
lahf
jmp
not
int
test
pop
jmp
add
sbb
ror
inc
lods
jge
adc
dec
push
add
inc
cmp
or
loopne
pop
push
ins
dec
test
jno
jge
repz
retf
scas
cmps
ret
(bad)
not
jl
push
ins
jg
loopne
adc
std
sbb
iret
push
sbb
js
push
cmp
push
ficom
stc
xor
fisubr
jbe
nop
fbstp
hlt
sub
jmp
call
dec
pop
push
cmp
or
retf
lea
hlt
adc
cmp
les
ficomp
nop
ror
lea
mov
jno
push
mov
hlt
aad
arpl
dec
pop
pop
push
adc
mov
leave
push
and
or
pop
or
retf
sbb
mov
dec
adc
inc
xchg
leave
xlat
jmp
mov
xor
mov
mov
loop
jnp
and
adc
repnz
pop
movs
adc
xchg
or
jmp
dec
test
cdq
les
push
out
xor
and
outs
shl
inc
aam
scas
pop
test
test
pop
sbb
js
cmp
jge
scas
into
pmulhuw
loop
bound
adc
xchg
test
test
mov
test
xchg
pop
imul
sbb
retf
dec
mov
pop
adc
lock
scas
adc
mov
and
inc
xchg
cmp
leave
outs
setp
pop
or
xchg
pop
jge
push
aas
out
or
inc
scas
sbb
and
je
jmp
pop
inc
xor
retf
push
lahf
shl
xchg
rcr
aas
pop
test
(bad)
(bad)
mov
addr16
loop
dec
mov
clc
das
jecxz
pop
mov
inc
inc
jne
xchg
and
ins
scas
int3
mov
je
dec
ror
imul
mul
(bad)
shl
mov
lea
fimul
jo
xchg
and
pop
fs
mov
shl
fst
jnp
std
(bad)
loope
jae
int3
in
imul
stc
repnz
ss
push
mov
mov
push
jae
ins
mov
mov
pop
mov
cmp
jmp
xor
inc
push
add
mov
push
sub
out
loop
sti
xchg
add
inc
lahf
sub
jns
adc
sbb
mov
and
sbb
movs
js
push
loopne
icebp
cmp
and
adc
icebp
out
mov
rol
add
push
ret
cmps
sbb
and
xchg
sbb
sar
imul
scas
gs
mov
test
dec
leave
ror
test
jb
jbe
jae
daa
inc
xchg
sub
shl
xchg
jne
mov
sbb
adc
jmp
bound
test
dec
or
cdq
mov
pop
jns
popa
cdq
jge
jmp
mov
xchg
dec
in
leave
mov
out
out
mov
push
scas
and
fmul
dec
cmp
mov
cwde
pop
pop
fwait
pop
icebp
or
imul
inc
mov
dec
inc
ins
mov
(bad)
dec
pop
aam
popa
into
adc
ret
mov
dec
jg
stos
inc
dec
dec
test
inc
cdq
retf
pop
adc
sbb
test
jge
mov
inc
sub
or
(bad)
es
inc
add
mov
nop
jecxz
(bad)
retf
pop
jnp
mov
xchg
or
stc
sbb
jmp
ret
fs
shl
sub
or
in
jmp
(bad)
jnp
int3
xchg
stos
imul
mov
fidivr
push
push
or
test
idiv
add
call
push
das
mov
sti
push
adc
std
int
ds
sbb
push
in
xor
push
pop
fadd
mov
xchg
int3
lods
xlat
dec
and
retf
mov
leave
into
das
or
enter
nop
sahf
cld
aas
scas
jne
outs
mov
and
(bad)
aad
xchg
or
sbb
mov
pop
adc
int3
inc
or
aad
mov
shr
push
jecxz
and
mov
xor
lahf
and
bound
gs
iret
jo
fidiv
in
lods
mov
lds
fs
xor
loopne
das
push
in
div
jg
mov
and
je
out
inc
daa
push
test
ins
das
inc
or
pop
icebp
sahf
inc
dec
push
mov
pop
inc
sahf
cli
movs
out
xchg
aam
pop
cmp
cli
jmp
mov
jge
cmc
mul
loopne
hlt
ror
shl
repz
loopne
call
sbb
dec
scas
cmp
les
xchg
add
fs
fs
pop
mov
adc
mov
push
push
fsubr
inc
fs
push
cwde
xchg
and
and
xor
in
fisub
mov
fdivr
frstor
and
retf
cs
dec
sub
fwait
movs
sub
fiadd
mov
fwait
mov
mov
fdiv
pusha
mov
jae
jnp
mov
shl
jle
xor
adc
test
mov
call
push
xor
in
cmp
mov
repnz
jo
push
and
(bad)
js
jmp
sbb
add
stos
fist
dec
dec
sub
and
hlt
jp
or
call
mov
idiv
sub
inc
ret
add
mov
out
shl
call
ret
imul
push
out
out
stos
mul
int3
cld
jmp
ins
jb
sub
xchg
mov
sub
push
stos
jge
cld
push
mov
jge
ins
xlat
rcr
cmp
call
stos
div
jle
retf
(bad)
test
xor
in
sti
or
add
int3
mov
sbb
cmp
repnz
jp
inc
mov
ret
sub
jecxz
imul
(bad)
das
sub
test
pusha
fisub
(bad)
jge
jbe
push
sub
inc
je
shl
mov
xchg
(bad)
clc
test
mov
test
adc
outs
daa
sbb
inc
shl
shl
popa
scas
std
dec
sub
or
mov
xor
shr
scas
inc
(bad)
(bad)
ja
jnp
js
mov
out
push
aas
addr16
adc
xor
test
lahf
jne
xchg
mov
or
pusha
sub
fild
adc
jg
cmovbe
fcmovu
push
jg
mov
xchg
test
inc
cmp
addr16
jae
jmp
loop
js
(bad)
fsub
cmp
imul
pop
pusha
aam
out
ficom
mov
jne
bound
lods
push
pop
mov
sar
pop
mov
les
aad
jmp
mov
mov
arpl
arpl
cmps
push
mov
stos
push
rcr
xor
xchg
iret
scas
sti
mov
lods
or
ret
lods
xor
add
in
cmp
pop
ss
mov
dec
push
clc
mov
test
hlt
jne
or
or
mov
jo
daa
push
xchg
shr
jns
lods
mov
cmc
ss
sbb
test
stos
out
mov
mov
adc
add
or
repz
gs
rol
sbb
jne
cmp
imul
or
sbb
out
imul
pop
rcr
cmps
mov
dec
pop
mov
js
add
movs
add
xchg
xchg
test
cli
jmp
push
clc
pop
mov
aaa
push
xchg
xor
fisubr
shr
or
daa
out
sti
pop
push
test
jecxz
inc
push
cmp
test
push
pop
hlt
add
(bad)
xlat
or
repnz
push
dec
mov
ftst
pop
sbb
inc
outs
push
sbb
test
or
inc
push
mov
loope
arpl
pop
(bad)
push
add
jmp
mov
push
xchg
(bad)
xor
xlat
mov
xchg
sub
mov
sti
xchg
cmp
ret
nop
clc
add
pop
pop
xor
call
and
jno
add
ret
pop
jne
pushf
cmp
mov
or
std
jnp
push
sub
push
cld
xchg
add
test
out
fs
add
(bad)
stc
fadd
mov
aaa
sub
xor
dec
in
rol
add
mov
call
sbb
mov
aas
push
and
mov
sub
push
mov
stos
sti
and
test
push
and
xchg
add
inc
dec
dec
ss
jae
add
jmp
dec
cli
aam
and
sbb
loop
jge
sub
pop
aaa
retf
mov
cdq
imul
dec
inc
div
loop
ins
jmp
pop
push
ror
push
retf
pop
jmp
sbb
adc
pop
fadd
mov
test
iret
(bad)
cmp
push
lock
mov
push
jmp
scas
push
fwait
mov
adc
sbb
mov
mov
mov
sahf
push
dec
jo
ret
sbb
fnstcw
xor
std
jp
repnz
cdq
js
push
add
stos
fldcw
arpl
test
inc
addr16
cmps
(bad)
fadd
movs
xlat
aam
jge
ds
jp
pop
(bad)
cmp
or
jb
inc
inc
hlt
and
(bad)
pop
scas
popf
jne
std
push
push
fs
jae
iret
jge
mov
inc
fisttp
std
sbb
ficomp
dec
mov
fldcw
sbb
inc
or
push
mov
fdivr
mov
into
push
mov
popf
test
xor
dec
dec
pop
scas
adc
sbb
int3
aad
sti
jnp
cmp
or
jp
and
dec
mov
or
out
fistp
rcr
mov
fidivr
add
sub
cmp
pop
lea
rcr
cmp
and
pop
aam
stc
test
repz
fstp
mov
dec
scas
and
test
addr16
jae
psrlq
pop
mov
jmp
add
out
test
jecxz
fwait
xor
or
rcl
xlat
shl
daa
jo
in
mov
pop
cmp
pop
clc
shr
lea
inc
inc
fcomp
sar
clc
xor
loop
aad
mov
dec
out
cld
inc
sub
cmps
mov
(bad)
xchg
sub
fwait
sahf
cmp
hlt
xor
push
jo
test
call
jns
test
xor
inc
lock
cmp
popa
mov
movs
mov
shr
fiadd
sub
icebp
addr16
cmp
dec
cwde
xor
test
pushf
push
retf
test
cmp
idiv
call
int
cmp
loope
mov
adc
dec
jbe
jmp
das
dec
mov
mov
pop
test
int
mov
xchg
sbb
nop
cmp
(bad)
(bad)
(bad)
aaa
adc
(bad)
popa
add
mov
xor
xchg
mov
and
pop
rcl
pop
inc
mov
pop
(bad)
lds
push
push
fstp
repnz
pusha
jbe
je
mov
sbb
in
cmp
jbe
push
jne
adc
add
es
and
push
imul
push
jno
inc
xor
dec
outs
fdivr
dec
stc
xor
jl
mov
dec
pop
int3
adc
out
and
jp
arpl
lahf
push
imul
imul
pop
push
sub
mov
mov
data16
or
test
sbb
aam
scas
sbb
mov
cmp
loope
mov
push
out
xor
stc
or
xchg
sbb
fistp
sbb
cmp
scas
(bad)
mov
loop
inc
das
hlt
pop
dec
loope
xor
inc
(bad)
stos
add
in
fistp
movs
movs
jmp
clc
pop
pop
push
cmc
stc
push
mov
(bad)
dec
and
add
pop
push
inc
dec
mov
iret
outs
dec
cmp
dec
or
aad
mov
cmp
sub
fwait
aam
gs
mov
stc
sbb
push
inc
je
(bad)
xor
cs
jo
movs
mov
out
scas
pop
jmp
(bad)
sub
jnp
fimul
dec
fisubr
xchg
push
scas
popa
lahf
test
jae
and
les
ret
push
fcom
loop
dec
push
mov
add
mov
shl
sbb
jae
push
dec
in
ret
mov
inc
sbb
les
fcmovb
sbb
dec
test
stos
xchg
jecxz
lods
xor
movs
shr
pop
test
add
imul
dec
xchg
out
out
dec
repz
rcr
in
jne
retf
jmp
xchg
shl
sub
and
inc
lahf
push
xor
bound
sbb
jbe
mov
sbb
or
cli
adc
ficom
cmp
outs
pop
cli
cmp
cs
mov
cs
xchg
push
mov
add
cmp
cwde
shl
dec
or
je
jne
jns
icebp
pop
outs
test
mov
enter
popf
ds
icebp
daa
or
jbe
jecxz
sub
out
std
and
cwde
jmp
ins
adc
aad
and
xor
inc
(bad)
pop
and
shr
mov
sbb
js
mov
adc
pop
push
mov
loopne
jae
inc
scas
cmps
sar
lods
mov
inc
push
mov
xor
neg
iret
ss
cmp
sbb
pusha
jbe
jns
shl
or
jno
or
jb
pop
push
mov
dec
or
outs
mov
ret
(bad)
or
sub
jmp
sub
std
int
push
mov
mov
call
aaa
mov
scas
or
je
push
cdq
or
cwde
hlt
mov
(bad)
dec
push
mov
mov
push
cmp
xchg
out
ss
call
icebp
dec
add
push
clc
or
scas
imul
add
fsub
iret
ret
sbb
cmp
mov
cmp
pop
fidivr
popf
jne
mov
pop
lock
push
add
fs
aam
push
bound
sbb
xor
test
pop
pop
repnz
mov
aad
std
xor
retf
push
fsub
jp
out
mov
stos
cmc
adc
adc
mov
hlt
inc
or
mov
ret
xchg
jnp
push
bound
test
stc
sbb
les
jno
les
sub
test
add
retf
sahf
push
stos
cmp
lods
and
adc
push
popf
xchg
idiv
dec
jo
mov
enter
add
sub
loope
into
popa
jno
das
fcomp
pop
sti
(bad)
fild
inc
push
mov
mov
lea
int
std
xor
out
sub
adc
(bad)
div
imul
out
stos
cmp
cld
push
enter
test
addr16
mov
movs
sti
sar
in
clc
mov
sub
jmp
call
push
cs
xor
cmp
jno
aaa
ss
call
push
fsub
dec
mov
xor
ret
leave
addr16
xor
sbb
pushf
mov
rol
cmps
das
fwait
test
xlat
fs
push
sbb
add
add
pop
inc
or
int
pop
test
mov
dec
les
push
outs
ss
rcr
add
push
fs
es
mov
mov
mov
gs
imul
jmp
jns
xor
sub
lock
pop
sbb
cmp
aad
dec
ret
or
push
jmp
or
add
and
inc
inc
pop
loopne
nop
(bad)
mov
aaa
mov
jb
mov
mov
dec
ret
loopne
ss
outs
fsubp
(bad)
push
pop
pop
mov
sbb
retf
iret
ss
jmp
pop
jmp
cwde
loopne
and
fadd
jge
xor
cmc
sub
mov
gs
cld
jmp
aam
mov
aaa
jmp
sbb
ds
xchg
xchg
(bad)
cmp
repnz
call
dec
loop
mov
pop
pop
adc
imul
push
test
loopne
and
out
dec
jb
push
add
or
jecxz
fstp
sbb
dec
xlat
lods
adc
jbe
cli
pop
jns
(bad)
test
mov
das
in
outs
call
test
hlt
pop
add
xchg
je
scas
(bad)
push
test
adc
add
movs
sbb
shl
xchg
(bad)
cmp
lea
lds
lahf
test
mov
mov
outs
icebp
out
stos
jo
hlt
rol
into
jb
fidiv
xlat
mov
mov
stos
mov
repz
scas
xchg
and
and
mov
mov
push
loop
or
adc
(bad)
mov
cmp
in
clc
clc
fisttp
sub
lock
sbb
inc
dec
retf
xchg
loop
pop
pop
push
std
pop
popa
pop
xor
adc
adc
add
dec
call
cmc
stos
cmps
mov
mov
ss
pop
imul
fdiv
test
mov
pop
fist
push
mov
xor
inc
out
xchg
sbb
mov
(bad)
sar
sbb
clc
lods
push
xor
pop
enter
push
jns
mov
mov
ins
shl
stos
aad
lods
idiv
aas
jg
loopne
dec
pushf
add
lods
dec
push
aas
loope
mov
repnz
jbe
pop
rcr
popa
mov
cmp
inc
movs
(bad)
dec
mov
sbb
loope
dec
and
cwde
inc
adc
mov
fidiv
test
or
push
mov
out
int3
dec
das
stc
push
sub
mov
xor
dec
xor
and
es
inc
mov
mov
push
push
inc
out
mov
scas
lea
lods
jo
pop
pop
add
adc
and
dec
mov
fsub
add
jge
lods
or
rcr
jmp
fdiv
add
adc
dec
fldcw
stos
scas
or
bnd
dec
cli
inc
adc
xchg
mov
cmp
xchg
lods
and
jb
stc
jge
ret
jae
pop
push
sahf
push
aad
add
adc
adc
rol
push
or
pop
stos
pop
ins
jno
addr16
cmc
sahf
jg
xchg
mov
aas
aam
jecxz
push
ds
adc
es
nop
inc
sti
in
push
xchg
push
bound
jo
dec
hlt
pop
aad
ins
pop
add
jle
out
ja
repz
jl
nop
not
pop
cdq
retf
sub
gs
xchg
jae
mov
dec
inc
inc
jecxz
mov
stos
add
loopne
inc
inc
xchg
cmp
aam
jnp
adc
cld
fsubp
add
out
mov
dec
(bad)
call
rcr
mov
jl
pop
add
and
mov
stos
dec
inc
pop
pop
jae
loope
mov
push
pop
fmul
into
sti
xor
fidiv
addr16
and
push
pop
jl
mov
dec
sub
sub
mov
repz
aas
pop
dec
pop
arpl
jecxz
outs
test
pop
xchg
xlat
adc
add
inc
add
or
xchg
or
gs
sahf
mov
ins
sub
sub
push
sar
jl
popf
or
leave
ret
stos
aaa
retf
repz
je
enter
or
icebp
sar
lahf
loop
sub
addr16
(bad)
scas
add
adc
xchg
push
aaa
pop
shr
mov
imul
mov
mov
ja
rcl
call
out
fbld
shl
or
dec
mov
push
loope
lds
jl
rcl
add
fcom
mov
cld
loope
mov
cs
mov
mov
xchg
mov
cs
pop
addr16
test
ins
mov
mov
add
aam
das
rcl
dec
push
push
cs
push
je
jns
sbb
add
push
dec
ds
ins
loopne
in
icebp
fstp
ja
pop
jl
and
pushf
dec
out
add
jg
jnp
add
pushf
adc
ins
lods
jecxz
inc
ret
jecxz
pop
pop
inc
cli
mov
pop
aad
xor
cmp
cmps
fnstenv
aad
sbb
aam
out
push
dec
adc
les
add
sbb
push
pop
ins
pop
(bad)
mov
dec
cmp
mov
jnp
and
scas
rcr
call
in
mov
imul
xchg
adc
sbb
and
xor
sub
lods
push
imul
add
daa
jmp
int3
sbb
xchg
cmp
push
mov
(bad)
fist
or
pushf
cmp
pop
push
arpl
cmp
aas
fwait
call
std
stos
pop
push
ret
into
dec
aaa
dec
aad
jge
retf
mov
int3
int
jb
ins
(bad)
pop
call
push
nop
dec
mov
and
xchg
push
std
adc
mov
das
mov
jmp
or
jg
cmc
js
mov
or
dec
fwait
pop
jae
mov
je
inc
sub
dec
hlt
sbb
push
mov
cmc
sbb
cwde
and
mov
mov
cmps
lahf
inc
dec
repz
push
and
outs
jl
jbe
push
fimul
int3
aam
call
cli
xor
rol
mov
mov
test
dec
repz
push
test
push
and
imul
call
xor
jmp
push
sbb
loop
ins
inc
outs
scas
into
js
or
inc
add
or
push
jbe
adc
sub
xor
in
adc
or
dec
jp
clc
add
aad
inc
jmp
xor
arpl
aam
ss
inc
cmp
mov
scas
mov
daa
mov
(bad)
mov
lahf
ror
movs
sbb
adc
add
ret
fs
stc
pop
push
cmp
mov
jbe
imul
mov
pop
push
sub
xchg
sbb
mov
shl
xor
mov
mov
cdq
popa
(bad)
sbb
test
bound
add
test
inc
jge
cmp
sar
cmc
inc
fsub
ds
jo
mov
pop
pminub
mov
aam
fs
jmp
jp
add
jmp
rcl
out
mov
fmul
das
dec
xchg
jbe
cmc
cli
addr16
(bad)
dec
mov
aam
ja
jmp
sbb
retf
inc
push
and
mov
loopne
rcr
ror
icebp
loop
popa
adc
stos
stos
inc
push
(bad)
shl
cwde
add
mov
and
test
std
push
std
cmp
iret
pop
shr
sbb
or
dec
or
retf
mov
dec
mov
(bad)
out
icebp
mov
adc
mov
mov
pop
jnp
mov
int
inc
cmc
mov
rcr
dec
sahf
test
bound
jae
xchg
jmp
aaa
ja
adc
scas
call
loopne
push
cmps
inc
push
add
into
pop
jo
mov
leave
pop
cmp
jo
jl
(bad)
shl
and
inc
aaa
xor
lock
sub
inc
mov
add
inc
adc
hlt
fmul
cmp
and
jge
fsub
mov
clc
lods
stc
xchg
jg
les
push
sbb
mov
pop
and
in
or
repz
(bad)
loopne
dec
mov
pop
sbb
mov
sti
loopne
data16
pop
mov
pop
xor
ds
xchg
adc
xor
mov
sub
popf
dec
fstp
sti
loope
call
shr
popa
ss
push
adc
int
outs
sbb
mov
add
mov
ins
xchg
fcomp
mov
add
mov
jmp
sti
dec
(bad)
push
jno
repz
jne
ret
pop
loop
sub
in
mov
int3
pop
fst
outs
fcomp
cli
xchg
push
jne
push
xor
cmp
jl
mov
mov
xor
call
push
imul
ss
and
call
xchg
jo
jmp
(bad)
aad
in
in
(bad)
xchg
fld
lahf
ror
imul
add
scas
imul
push
mov
fadd
and
mov
js
or
adc
test
add
xor
dec
(bad)
or
jb
lock
mov
or
in
frstpm(287
cmp
cmp
rcr
xor
outs
inc
lock
outs
jge
aas
fwait
or
jmp
ja
cli
sbb
popa
jl
or
jns
loop
addr16
cmp
inc
loopne
bound
mov
shl
xor
test
ret
lods
adc
ins
pop
dec
pop
mov
aam
(bad)
icebp
pop
(bad)
xor
jno
ins
xor
mov
sti
xor
pop
aad
mov
and
cmps
mov
je
cld
jno
mov
scas
(bad)
mov
cwde
jg
test
mov
test
pop
or
rcl
mov
jbe
push
xor
sbb
pusha
add
call
jo
ret
jmp
sub
out
idiv
sub
push
retf
mov
add
int3
push
in
and
jle
mov
lds
add
cmp
mov
out
cmp
ss
ror
into
ins
inc
js
imul
and
dec
dec
fld
and
xor
mov
ficomp
fistp
cmp
mov
ror
ds
pop
pusha
mov
ja
das
call
fld
scas
xchg
jno
inc
cmps
push
pop
mov
mov
sub
fild
sub
leave
test
mov
scas
jns
movs
sar
lds
xor
ds
pop
neg
movs
inc
sub
add
or
add
jmp
mov
jmp
pop
movs
and
push
pop
or
mov
fcomp
ss
rcr
ins
cmp
out
pop
scas
mov
mov
cmp
push
push
aas
jl
jbe
fbld
daa
sub
es
iret
rcl
add
xor
adc
sbb
or
iret
push
loop
stc
dec
dec
and
inc
int
fidivr
daa
adc
mov
sub
fsubr
into
push
popf
fstp
push
retf
sub
das
mov
inc
sub
mov
lock
ret
ret
je
cmp
mov
ret
out
mov
sub
xor
jp
or
fwait
mov
mov
xchg
push
mov
or
loopne
dec
and
sti
aaa
push
push
pop
push
jecxz
sahf
aaa
retf
or
adc
mov
or
pop
xchg
js
sti
xchg
adc
out
inc
inc
in
mov
pop
cmp
ret
add
cmc
mov
mov
test
dec
sub
pop
add
jns
popa
je
addr16
aad
cmps
dec
cli
dec
mov
jp
and
lods
add
xor
pop
adc
das
xor
cmp
jl
lods
loop
(bad)
jmp
adc
xchg
inc
stos
dec
call
inc
js
gs
xor
xchg
push
dec
or
loop
cli
std
or
pop
xchg
or
bound
mov
fsubr
ds
test
mov
(bad)
test
jb
inc
ds
or
or
aas
inc
jle
push
ss
push
fcmovne
xor
mov
cmc
jb
and
or
fwait
jnp
pop
sbb
fild
into
ins
add
push
mov
sahf
pushf
and
and
lahf
or
jne
bound
lods
into
jns
dec
int
cli
mov
mov
test
outs
iret
lds
push
push
dec
ror
add
pop
add
outs
mov
ret
jl
or
inc
test
(bad)
scas
adc
sar
fwait
addr16
loopne
lock
jns
jbe
xchg
xchg
mov
mov
dec
ins
xchg
xchg
cli
and
mov
xchg
outs
inc
xchg
pop
pop
stos
test
popf
popa
mov
mov
sar
cmp
call
cmp
(bad)
xor
jae
add
ja
mov
sbb
sub
shl
iret
add
cmps
in
xchg
cwde
xchg
add
or
or
inc
retf
push
(bad)
(bad)
xlat
pop
push
add
ins
dec
and
mov
sbb
add
sahf
fwait
and
or
ds
(bad)
fsubrp
neg
cmps
mov
icebp
cmp
js
mov
loopne
mov
mov
fld
cld
das
jecxz
xlat
add
xor
xor
movs
sahf
stos
(bad)
mov
add
fnstcw
cmp
jns
xchg
push
data16
xor
jmp
imul
int3
and
rcl
sbb
xchg
das
ret
push
dec
and
xchg
mov
cmp
jge
mov
hlt
sbb
pop
pop
mov
sub
movs
push
jg
add
mov
mov
int
or
mov
mov
cmp
hlt
inc
mov
popa
in
fcomp
xor
mov
xor
daa
push
ds
mov
jbe
loope
aam
test
fld
ret
mov
movs
jns
out
mov
pop
xor
push
ss
test
mov
mov
loop
out
iret
sub
out
loope
dec
popa
add
push
test
fsubp
call
add
aad
ss
cmc
aas
call
fsub
inc
gs
adc
fld
dec
test
ja
mov
imul
push
outs
xor
(bad)
jns
jmp
enter
xor
stos
jnp
ss
(bad)
das
out
add
sahf
call
adc
cmc
rdtsc
int
xor
gs
mov
xchg
jbe
jmp
xor
cwde
mov
sbb
mov
cmps
mov
xlat
dec
cmp
push
enter
out
dec
cmc
xchg
mov
cmps
cs
and
inc
sbb
shr
jecxz
inc
jecxz
adc
pusha
push
ret
push
cwde
inc
sub
adc
loop
adc
inc
dec
sbb
mov
cmc
and
outs
les
or
or
retf
or
daa
and
xor
imul
mov
inc
sub
sbb
jae
add
pop
sbb
mov
je
mov
dec
repnz
jno
aam
int
xor
in
sub
(bad)
mov
rol
not
(bad)
push
pop
or
add
sub
jge
sbb
sub
add
and
ja
lods
pop
pop
mov
test
sahf
push
dec
mov
icebp
sub
adc
mov
mov
out
xor
loope
mov
pushf
dec
aas
mov
mov
mov
inc
jmp
call
lods
stc
inc
call
pop
xchg
pop
jmp
pop
mov
fdivr
retf
jl
mov
in
rcl
xchg
push
or
dec
pop
push
lds
or
inc
(bad)
fdivr
sbb
das
into
add
sbb
mov
cmps
js
das
xor
mov
dec
add
and
mov
fwait
sbb
mov
(bad)
mov
mov
into
cmps
scas
out
cmp
nop
icebp
jp
fwait
or
pop
jbe
add
mov
repnz
in
daa
fbld
les
add
add
push
pop
mul
jl
mov
cs
adc
add
bound
add
les
loop
js
cmp
mov
or
sub
mov
push
cmp
pop
lds
test
call
mov
and
jecxz
adc
ss
icebp
les
movs
(bad)
lods
aaa
adc
int3
xor
fimul
push
cmp
mov
scas
jae
es
les
add
jne
cmps
imul
fcomp
js
jnp
pop
mov
adc
bnd
mov
jbe
xor
xchg
icebp
push
push
ins
pop
bound
mov
js
inc
fnsave
add
les
sti
inc
test
cli
jge
dec
(bad)
sub
into
jo
fst
xchg
dec
repz
pop
or
out
push
xchg
popf
xchg
jmp
daa
and
repz
out
fs
and
push
or
ja
add
mov
jae
in
aam
inc
mov
ret
ja
in
mov
push
das
pop
(bad)
pop
or
(bad)
push
xchg
push
out
lods
cmp
ret
fsub
fwait
pop
add
mov
mov
inc
in
mov
repz
in
scas
gs
enter
test
outs
repnz
sbb
add
out
xchg
adc
dec
iret
sti
movs
adc
lea
fistp
xor
jp
adc
fnstsw
xchg
fidivr
add
add
adc
mov
xchg
out
sahf
sbb
cmp
xchg
inc
xor
and
clc
in
jp
(bad)
fs
jecxz
inc
in
inc
or
into
sub
inc
jmp
jne
arpl
dec
mov
pop
ja
push
inc
and
cmp
imul
inc
xor
jg
sub
add
cmp
adc
bound
imul
jae
inc
sub
mov
js
mov
ret
call
pusha
ins
fbstp
scas
jmp
pop
xor
xchg
adc
ret
shl
jmp
mov
mov
mov
std
leave
mov
out
push
mov
xchg
aaa
shl
or
mov
mov
pop
fs
or
icebp
hlt
dec
loop
ror
pop
xor
inc
out
sbb
pop
stos
dec
and
mov
jbe
fimul
fild
sub
add
scas
(bad)
sub
mov
retf
dec
jo
addr16
loop
push
bound
or
dec
xor
scas
test
lea
shl
xor
in
es
out
and
inc
pop
outs
mov
sbb
es
mov
ins
ja
mov
inc
jle
ds
cmps
mov
cli
pop
mov
mov
jle
fs
iret
jne
arpl
sub
cmp
test
fbstp
cmp
repz
pop
(bad)
mov
popf
sub
mov
and
jb
in
xor
cmc
mov
(bad)
pop
push
das
xchg
jge
xor
test
push
addr16
ror
mov
ins
call
push
scas
fcom
mov
es
sahf
mov
or
and
int3
in
pop
dec
mov
push
les
xor
popf
call
dec
mov
pop
movs
in
jb
fist
stos
scas
cmp
and
push
mov
cmp
lock
out
dec
add
popa
aam
jle
hlt
enter
scas
or
lock
hlt
fdiv
push
jnp
shr
rol
loope
mov
push
dec
and
and
leave
cli
xlat
leave
cmps
jle
test
cs
dec
xchg
sbb
pop
mov
xchg
sbb
add
mov
jnp
xchg
ror
push
daa
jnp
or
mov
xchg
in
(bad)
mov
or
movs
mul
test
les
xchg
xchg
call
data16
les
mov
xchg
mov
xchg
jg
adc
adc
mov
adc
call
mov
jl
lock
pop
inc
cmp
or
pop
mov
sub
mov
loop
call
adc
gs
and
jnp
outs
inc
cli
sub
xchg
or
xor
sub
mov
mov
cwde
lock
lock
and
(bad)
push
pop
sub
add
shr
add
jne
adc
ds
jg
and
int3
pop
cld
ss
hlt
cmp
cld
stc
sub
fistp
test
jbe
mov
mov
sbb
lds
dec
mov
sub
xchg
mov
or
pop
push
ja
aaa
cmps
stos
inc
dec
pop
dec
cmp
in
xchg
pop
add
and
dec
inc
or
fistp
cli
push
mul
lea
adc
sti
push
aas
not
sub
xchg
(bad)
pop
in
test
cmp
fidivr
cmp
lds
cmc
stos
jae
retf
dec
xor
fmul
pop
loop
les
jne
adc
call
ss
lods
lods
loopne
push
cmp
es
iret
nop
push
xchg
mov
idiv
lahf
bound
xor
or
sub
pop
sbb
in
iret
stos
mov
xor
retf
or
icebp
pop
push
aam
lea
push
push
jne
addr16
push
sbb
cmp
clc
push
lahf
call
stos
test
test
(bad)
push
(bad)
fisttp
ret
jbe
add
xor
addr16
(bad)
stos
sti
jne
scas
je
mov
push
pop
or
into
test
and
add
sti
ja
lds
imul
inc
mov
dec
add
pushf
xchg
pop
mov
mov
dec
mov
push
mov
lea
sbb
push
lock
fisub
fsqrt
int3
xchg
push
or
adc
sbb
int3
inc
mov
enter
push
or
sbb
or
(bad)
jo
mov
xchg
cmp
adc
xor
sub
mov
jnp
cmp
add
sti
push
cmp
rcr
pop
popa
dec
cmp
mov
in
add
inc
mov
pop
int
into
sub
mov
fcmovnb
mov
jge
popf
adc
and
jge
call
pop
dec
je
pop
mov
add
and
or
sub
lods
shl
fist
add
shl
sbb
inc
in
ins
repz
(bad)
xchg
retf
adc
je
pop
xor
cmc
or
dec
fistp
add
addr16
icebp
jbe
in
iret
scas
fild
adc
sbb
sub
dec
mov
mov
fwait
cdq
mov
lds
and
retf
popa
push
and
push
sbb
xor
xlat
(bad)
pushf
mov
add
or
push
cmps
and
sub
cmp
and
gs
cld
lds
mov
into
and
dec
stc
repz
call
xchg
mov
add
scas
inc
cwde
jbe
leave
or
add
cmp
add
pop
stos
popf
push
adc
loopne
xchg
cmp
inc
mov
mov
ja
fiadd
dec
sbb
xchg
mov
xchg
dec
push
and
in
shufps
xchg
dec
pop
enter
outs
jne
and
outs
inc
pusha
push
push
mov
aas
ror
adc
jo
pop
and
cli
sub
in
xor
mov
js
sar
call
xchg
(bad)
xor
pop
stc
mov
push
(bad)
shl
int
into
jbe
sub
inc
cli
push
sbb
repnz
sub
ss
in
xchg
call
push
inc
inc
sbb
push
mov
add
in
stc
movs
mov
sub
or
dec
loope
iret
int3
lock
mov
ss
adc
mov
cdq
lea
and
popa
pop
adc
outs
lahf
xchg
add
(bad)
push
imul
out
mov
enter
cs
xor
cld
das
or
xor
or
push
in
in
loop
push
jmp
sbb
adc
test
mov
(bad)
gs
and
jno
push
data16
loope
xlat
adc
mov
inc
movs
into
jmp
mov
inc
jl
and
lods
inc
and
in
je
out
mov
imul
out
cmps
or
(bad)
into
push
push
mov
in
fld
and
hlt
rsqrtps
in
jbe
pop
sti
pop
out
clc
jg
dec
pop
jne
ins
test
(bad)
retw
and
jb
xor
loope
jmp
mov
dec
pusha
bound
sub
popa
mov
clc
ins
cwde
stc
mov
adc
shl
(bad)
push
add
sub
(bad)
leave
dec
cmp
mov
xchg
out
movs
jb
(bad)
movs
adc
lods
inc
fidivr
(bad)
pop
lods
adc
loope
cmp
das
inc
out
rcl
mov
imul
iret
pop
fimul
jae
mov
and
pop
push
sbb
sbb
mul
ss
nop
sub
test
(bad)
aas
mov
inc
push
shl
mov
inc
ss
daa
aaa
gs
mov
mov
mov
arpl
aaa
dec
fist
lods
push
or
retf
inc
cld
jns
gs
ds
push
push
nop
in
daa
mov
je
push
push
mov
rol
out
outs
leave
mov
out
sub
mov
daa
mov
jo
jo
inc
mov
mov
icebp
jns
js
and
std
movs
xor
sbb
mov
lods
mov
or
cmp
movs
adc
(bad)
jecxz
or
push
js
mov
cld
pop
jmp
dec
add
test
pop
jg
dec
cmp
pop
push
xchg
rol
cdq
sbb
mov
sub
or
ret
movs
(bad)
sbb
mov
js
push
int
aaa
es
add
leave
inc
mov
jb
pop
mov
leave
mov
or
jae
pop
dec
sar
aas
and
inc
cmp
nop
jae
mov
pop
retf
jo
test
dec
jp
jae
mov
jmp
and
cmp
lahf
xchg
int
pop
fistp
mov
cwde
push
in
mov
xor
mov
mov
sbb
and
popf
sbb
jecxz
add
call
je
fisttp
push
outs
jmp
mov
push
scas
lock
repnz
call
sbb
popf
arpl
je
in
pop
(bad)
cmp
test
xor
(bad)
xchg
and
mov
sbb
jbe
shr
push
push
outs
dec
pop
xor
mov
jnp
loop
adc
retf
imul
fbld
cmp
fwait
or
pop
mov
dec
xchg
push
sahf
pop
dec
out
repnz
ds
sbb
enter
sbb
data16
mov
sahf
imul
int3
jg
in
(bad)
cld
jmp
mov
xor
lds
pop
ja
pop
xchg
inc
ja
out
or
cmps
push
cmp
mov
adc
imul
push
or
inc
and
mov
mov
cmps
das
clc
or
movs
fnstsw
fidivr
xor
mul
rcr
pop
test
push
and
mov
dec
push
pop
fild
cld
dec
fs
dec
lahf
xor
imul
rol
xchg
jmp
cmp
mov
xchg
repnz
dec
cmps
arpl
xchg
xchg
dec
jbe
ficomp
mov
dec
push
test
hlt
sbb
call
xchg
sub
pop
in
test
and
dec
mov
inc
or
mov
mov
into
in
mov
enter
(bad)
pop
(bad)
(bad)
clc
pop
mov
(bad)
xchg
ja
and
popf
cmp
xor
push
gs
xor
or
add
xor
in
sbb
adc
cmps
push
popf
push
repnz
push
xor
rol
jg
mov
and
sar
scas
xor
imul
jo
cld
sub
or
pop
jmp
dec
jbe
push
adc
rol
pop
adc
and
fdivp
add
fsub
adc
xor
xchg
(bad)
popf
fidiv
jno
imul
es
lods
outs
fld
scas
push
xchg
jle
cmp
mov
pop
jmp
pop
int
push
bound
and
movs
(bad)
ror
in
xor
fisub
push
push
pushf
push
std
jae
xchg
mov
or
jbe
ins
xchg
push
sub
jmp
in
sub
xor
jecxz
iret
fs
push
sub
cmp
aam
adc
xchg
sub
cmc
loopne
xchg
lods
cs
inc
push
sub
sub
xor
clc
pop
pop
test
xor
and
mov
stc
cmp
shl
inc
sbb
inc
pop
sbb
dec
(bad)
aam
ins
repnz
pop
cwde
mov
or
cmc
add
pop
jl
mov
jle
nop
shl
mov
mov
cmps
push
imul
repnz
mov
mov
(bad)
es
adc
adc
rol
or
bswap
pop
lahf
jo
dec
call
fld
test
das
push
pop
sbb
pusha
test
in
rcl
dec
aaa
sar
mov
out
mov
push
lahf
shl
cmp
cld
cmp
jb
sbb
jae
inc
push
shl
jbe
cwde
push
push
cmps
mov
test
bound
and
repz
out
adc
not
or
dec
jl
lea
nop
push
sub
pusha
pusha
cmp
out
push
in
sti
pop
test
xchg
popf
loop
rcl
pop
repnz
out
push
aad
adc
addr16
inc
cmp
test
das
int3
ror
and
adc
ret
addr16
xchg
(bad)
shr
out
push
sbb
push
xchg
fucomip
popf
test
add
and
dec
mov
add
add
(bad)
mov
int3
mov
and
pop
daa
jmp
sub
pop
sahf
jo
lods
ror
ja
int3
jecxz
and
add
adc
jmp
hlt
mov
scas
and
movs
or
aad
pop
rcl
aas
sbb
add
cmp
sbb
in
jle
adc
push
rcr
or
stos
push
imul
iret
push
add
jg
or
(bad)
into
out
es
int3
lock
sbb
or
add
lock
popf
adc
out
inc
or
mov
jp
std
leave
add
out
scas
adc
iret
mov
ins
dec
outs
push
push
adc
or
cdq
sbb
rcr
mov
mov
es
and
nop
adc
adc
pop
mov
cld
jg
push
ins
lds
call
aam
faddp
and
call
jle
rol
xchg
jb
sbb
cmp
lods
pop
test
stos
fldenv
xor
jno
mov
inc
fs
or
inc
ret
mov
repnz
push
arpl
sbb
cmps
inc
xor
stos
inc
rol
lods
loopne
pop
and
xchg
add
inc
lea
(bad)
retf
ret
sbb
stc
and
and
push
bound
mov
jp
xlat
mov
push
mov
mov
mov
dec
xchg
stos
(bad)
in
xor
stos
fnsave
int3
out
movs
nop
add
pmaddwd
push
jp
ror
cmp
icebp
int
or
icebp
loopne
jne
jmp
sub
sub
add
mov
test
pusha
and
push
mov
sbb
movs
mov
popf
ret
fild
test
and
data16
push
(bad)
les
mov
lds
std
jo
(bad)
test
lea
adc
popf
mov
cmp
xchg
loop
or
movzx
push
or
addr16
iret
and
in
sub
push
push
dec
sub
or
mov
dec
jno
fwait
in
mov
cmps
lds
popf
scas
dec
jne
jnp
xor
mov
push
push
ds
pop
inc
lods
addr16
repz
mov
push
(bad)
or
mov
pop
stos
mov
mov
aaa
mov
(bad)
mov
mov
inc
mov
unpcklps
push
fs
icebp
and
sub
jle
sbb
or
pop
movs
mov
mov
mov
sub
into
push
jle
in
out
mov
mov
js
inc
cdq
aad
mov
ins
sti
add
xchg
cmps
in
retf
out
mov
and
inc
or
(bad)
fsubr
cmc
pop
mov
mov
or
mov
inc
stc
stos
or
outs
jmp
(bad)
test
add
mov
jmp
repz
inc
cmp
xor
inc
inc
and
jno
stos
pop
and
das
movs
data16
dec
les
jbe
ds
je
mov
jge
pop
push
cmp
stos
sbb
sbb
test
aad
xlat
adc
pusha
jp
xlat
es
xor
xchg
das
outs
mov
loop
add
ja
ss
pop
mov
and
push
pusha
mov
mov
aaa
push
and
lea
fistp
mov
sub
sub
bound
add
adc
sub
loop
sub
cmc
sub
xchg
mov
inc
inc
(bad)
fist
mov
je
ffree
push
xchg
loope
ficom
addr16
xor
shr
test
sbb
jecxz
icebp
jnp
mov
mov
in
jp
cmps
mov
mov
popf
push
xlat
mov
xor
sbb
jo
sbb
add
inc
leave
xor
and
dec
or
push
add
stos
retf
mov
mov
int
cmc
xlat
pop
mov
and
and
push
xor
fisub
stc
jno
sbb
or
xchg
add
pop
adc
clc
ins
pop
mov
aam
cmp
(bad)
lods
xor
jnp
aad
dec
push
js
call
in
add
cmova
movs
push
or
loop
daa
sbb
jp
push
je
(bad)
out
repz
adc
dec
sbb
lahf
or
lahf
daa
int
fcmovnb
movups
dec
mov
test
popf
pop
adc
std
xchg
mov
inc
out
popf
pop
add
and
mov
dec
adc
sub
jle
mov
aam
movs
jo
fdivr
scas
jnp
es
mov
dec
stc
dec
nop
jo
(bad)
retf
jno
loop
and
into
mov
mov
push
das
hlt
sub
hlt
adc
in
xchg
dec
mov
dec
std
xchg
pop
mov
cmp
repz
sbb
xchg
cmps
test
lods
lods
and
mov
push
adc
fidiv
cmp
mov
pusha
inc
dec
outs
outs
cmps
xchg
in
add
scas
jb
in
sbb
pop
hlt
pop
jge
jno
addr16
(bad)
jl
or
cmp
fimul
mov
and
adc
mov
stos
or
jge
jp
push
mov
lods
call
data16
leave
neg
nop
scas
push
retf
cmp
ret
ret
push
fsubr
xchg
popa
mov
push
push
inc
mov
or
jae
push
push
or
aas
stos
inc
(bad)
out
loop
inc
pop
(bad)
addr16
jns
je
fnsave
(bad)
es
dec
stos
js
rcl
inc
jnp
dec
xor
pop
test
js
cmp
enter
stos
pop
out
sub
ret
out
fcom
sub
adc
push
pop
mov
in
pop
cmp
cmp
adc
mov
pop
shl
push
ret
in
sahf
xlat
repnz
clc
cs
mov
scas
push
and
mov
pop
sub
in
adc
cmps
outs
shl
test
push
enter
cmp
nop
ret
mov
stos
aad
or
sbb
adc
std
sbb
dec
pusha
xchg
out
or
mov
add
sub
icebp
popa
mov
push
js
(bad)
adc
xchg
shl
pop
mov
in
inc
int3
sbb
pop
and
sbb
pop
pop
out
out
mov
jns
mov
xor
jmp
sbb
scas
(bad)
jg
sti
cs
mov
push
push
ficomp
dec
out
in
sbb
jmp
shl
and
mov
movs
pop
(bad)
fiadd
or
sub
loopne
int3
inc
clc
dec
jmp
fmul
rcl
cmp
in
daa
jmp
scas
ret
test
mov
xor
pop
cld
lods
rcl
xor
int
rcr
xchg
cmp
cs
lock
adc
inc
inc
ds
cmp
cli
int
mov
fistp
nop
frstor
imul
stos
push
inc
out
pushf
aaa
xchg
loopne
inc
xlat
jno
or
outs
jle
pop
add
pop
xor
ret
jo
adc
dec
and
hlt
shr
mov
out
jecxz
inc
(bad)
fiadd
xchg
sbb
or
pop
in
inc
pop
scas
or
inc
popf
or
jb
pause
data16
test
aad
test
cld
xor
add
aam
pop
jmp
jmp
icebp
cmp
test
(bad)
mov
or
or
xor
add
sbb
push
mov
jae
fdiv
shr
repnz
ins
add
push
fisttp
fnstcw
adc
pop
(bad)
call
adc
xor
xor
lock
cmps
or
scas
pop
mov
ret
ja
sub
jmp
mov
mov
push
push
adc
cmps
cmp
pop
iret
and
mov
ror
enter
jae
nop
(bad)
xor
jbe
mov
jbe
mov
pop
dec
jmp
call
fwait
aad
xor
addr16
clc
test
movs
(bad)
into
test
dec
jo
(bad)
push
push
or
xor
add
stos
(bad)
mov
pusha
xchg
ins
in
test
jecxz
mov
push
ss
out
xor
es
inc
xlat
pop
jno
sbb
rcr
shl
mov
sti
cs
shr
xor
adc
sub
and
mov
pop
cld
pop
les
mov
daa
push
xor
mov
push
mov
xor
test
clc
xchg
shl
ja
ret
pop
pop
xchg
retf
lods
add
int
cli
mov
mov
int3
mov
cwde
scas
movs
call
cmps
loopne
jle
xrelease
jns
(bad)
adc
jg
cmc
jne
add
add
lea
mov
stc
(bad)
gs
push
pop
or
clc
xchg
push
jmp
dec
cmp
mov
(bad)
cld
push
sbb
cmp
pop
inc
or
in
fsubr
pop
xchg
pop
icebp
add
cdq
cmp
(bad)
ins
ret
xor
jge
mov
sar
(bad)
pop
aam
cld
scas
sbb
outs
xchg
ret
je
pop
sbb
xchg
xchg
in
mov
mov
dec
or
inc
movs
dec
or
dec
std
ror
jno
pusha
push
popa
xor
pop
cmps
int
stc
sub
adc
push
ret
jecxz
cmp
add
pminsw
xchg
leave
pop
shr
add
jge
or
pop
or
dec
into
add
outs
sub
sbb
jp
xchg
xlat
mov
adc
push
das
jl
call
icebp
pop
sub
je
shr
cmc
stos
daa
imul
push
jmp
jnp
mov
cmps
ss
shr
xchg
add
fs
retf
scas
push
add
add
jns
sbb
es
cmp
sbb
ds
cmp
rcl
xor
cmp
push
xchg
cmps
iret
cmp
jne
lods
dec
cld
xchg
mov
and
cld
aaa
dec
in
sbb
test
or
push
push
push
ds
(bad)
int
outs
pop
adc
sbb
or
or
bound
ror
cmp
imul
xchg
and
arpl
mov
pop
jge
daa
xor
(bad)
mov
or
(bad)
and
pop
sbb
test
cmp
inc
ins
out
mov
adc
jns
push
push
stos
sub
pop
mov
lods
xor
dec
lds
aam
pop
fdivr
cmp
pop
xchg
push
nop
sub
dec
repz
xchg
es
xchg
adc
cmp
clc
jns
xchg
push
loope
shr
jg
loopne
jae
lahf
xor
sub
mov
mov
push
or
xor
dec
stos
cmps
mov
inc
push
test
fidiv
push
loope
sub
inc
xor
cmp
retf
sub
push
and
or
ins
sti
push
sti
sub
(bad)
jne
jne
xor
rcpps
dec
call
sbb
scas
data16
adc
sub
fisttp
xor
inc
aam
xchg
mov
adc
lods
(bad)
addr16
jg
(bad)
repnz
adc
addr16
pop
ror
es
inc
inc
repnz
lahf
and
and
mov
stos
sti
fild
mov
sbb
inc
jno
aad
adc
dec
jecxz
xchg
scas
shl
sar
jmp
jl
and
jo
clc
xchg
popa
cmc
stos
dec
mov
inc
enter
pop
add
inc
enter
adc
loope
or
shl
fsubrp
out
or
in
and
out
cmp
into
lods
fwait
call
clc
or
dec
jne
iret
sub
iret
call
inc
shld
add
mov
dec
or
push
or
adc
pop
ja
mov
xchg
aas
dec
in
repnz
adc
or
push
or
mov
inc
mov
adc
retf
in
ret
and
pop
lock
push
or
mov
xchg
fwait
push
mov
bound
inc
sbb
iret
pop
popf
call
pop
and
cmp
mov
and
add
and
cs
cmc
mov
jb
mov
out
loope
ja
movs
fisttp
data16
inc
ds
je
inc
push
cmp
xchg
jno
sub
idiv
pop
xchg
aaa
add
inc
ret
adc
icebp
pop
or
or
pop
add
jns
leave
push
fbstp
push
lods
ins
cmp
sub
adc
in
lods
arpl
test
in
das
xor
out
int3
std
sub
fld
pop
mov
add
je
ins
adc
mov
pop
or
lahf
inc
and
and
(bad)
and
cmp
(bad)
jmp
inc
mov
cld
fisttp
pop
sub
cmp
in
inc
pop
sub
test
push
call
std
int
cs
jno
test
ffree
repz
adc
stos
out
inc
in
pusha
push
lods
jbe
adc
ds
adc
push
rol
and
adc
adc
fwait
rol
sbb
dec
int
xchg
add
mov
mov
mov
jbe
xchg
push
ja
movs
or
rep
push
inc
jo
mov
mov
jae
cmp
sahf
mov
or
fptan
fnsave
adc
aaa
stc
or
stc
cmp
les
sbb
xchg
(bad)
fst
jmp
push
mov
push
push
jnp
jge
push
xchg
int3
and
inc
sbb
and
cwde
lock
inc
stos
cmp
cmp
mov
fbld
movs
pop
jae
ins
dec
jge
push
(bad)
cwde
iret
push
pushf
scas
push
push
mov
cmp
ins
je
out
mov
leave
fwait
repz
xchg
popa
(bad)
(bad)
loope
push
cmp
test
mov
cmp
push
mov
fisub
ins
mov
sub
inc
adc
dec
xchg
mov
pop
test
cmp
imul
and
mov
adc
mov
jg
xor
push
aas
scas
mov
enter
mov
push
add
sbb
mov
xchg
stos
js
sar
not
in
mov
ins
mov
test
fyl2x
and
sub
pusha
fmulp
mov
sbb
or
aas
scas
jne
hlt
aaa
mov
mov
retf
icebp
sti
int3
arpl
cld
frstor
adc
sbb
pushf
sbb
push
sbb
xchg
ins
daa
addr16
xchg
push
cmp
rol
fmul
and
popa
popf
daa
icebp
adc
or
jg
mov
add
inc
leave
cmp
clc
mov
lock
jne
fimul
scas
in
add
sub
pop
aas
je
pop
shl
sub
pusha
and
jge
lods
jb
mov
add
fisttp
sub
jp
add
ds
cmps
mov
or
push
pop
dec
loopne
mov
imul
cs
das
sahf
in
pop
jne
fmul
sbb
retf
xor
sbb
test
cli
sub
add
sbb
addr16
(bad)
xor
sub
dec
(bad)
frstor
sbb
mov
mov
fucomip
lods
xor
xchg
or
adc
in
xor
push
data16
lock
cwde
scas
int
call
adc
sub
ja
clc
jp
lods
cmps
sub
lods
mov
es
and
hlt
pop
inc
push
xchg
or
mov
imul
mov
movs
stos
and
and
xor
loopne
movs
scas
bnd
pop
lds
sti
scas
jl
push
pop
pop
or
movs
mov
stos
push
rcl
sbb
sbb
das
mov
sub
adc
xchg
and
cs
sub
push
pop
adc
jl
aam
pop
ficomp
in
retf
fdivr
dec
out
jmp
push
aad
stc
jno
push
dec
mov
call
ss
and
cmp
adc
cmp
ins
sub
xchg
push
or
mov
nop
scas
std
push
scas
enter
sub
lds
outs
cdq
leave
mov
dec
fistp
out
rcr
xchg
adc
mov
ds
ffreep
inc
cwde
push
jne
mov
sbb
(bad)
rcr
inc
aam
and
push
iret
ror
std
sar
mov
imul
mov
mov
frstor
jg
or
pop
mov
jmp
fcmovbe
aad
(bad)
lods
mov
neg
cmp
adc
repz
sub
or
mov
dec
retf
or
or
loope
pusha
push
push
ds
mov
movs
push
xchg
pop
mov
stc
mov
shr
mov
cmps
test
and
cwde
xchg
out
jne
add
leave
jo
or
mov
ss
imul
ficom
sub
sub
idiv
rcl
mul
push
fucom
mov
adc
leave
mov
xor
jmp
mov
add
add
xlat
xor
imul
out
inc
pop
aaa
jns
icebp
std
mov
jge
push
lahf
out
icebp
ror
mov
mov
not
movs
std
fucomi
js
sub
shl
jp
xchg
scas
push
fimul
mov
xchg
repnz
outs
int3
ret
push
sub
lock
pop
xchg
and
fidivr
xchg
mov
xor
scas
jnp
fadd
outs
cmp
mov
cmp
movs
sbb
bnd
daa
out
shl
push
xor
cdq
mov
stos
adc
icebp
dec
sbb
rcl
scas
jle
dec
dec
mov
sbb
sbb
dec
xor
add
fcmovnu
inc
cwde
cmp
jge
(bad)
je
lea
das
mov
cwde
pop
sub
push
inc
mov
cs
cld
xchg
frstor
pushf
jp
stc
adc
fisubr
(bad)
sar
rol
sbb
outs
ret
add
sbb
sbb
hlt
cmp
pusha
pop
cli
jecxz
and
outs
int3
mov
push
pop
add
ret
pop
ret
js
mov
(bad)
fadd
loop
jb
xchg
jns
jl
test
imul
pushf
jbe
and
dec
mov
or
lock
std
shl
add
adc
mov
ins
pop
sub
pop
int3
and
dec
mul
(bad)
fldenv
xchg
lahf
sahf
push
cmc
xchg
ja
mov
jge
imul
lea
sub
hlt
jg
jp
xchg
shr
mov
in
fs
inc
fnsave
je
lea
(bad)
or
or
mov
les
shr
mov
aad
lea
(bad)
movs
push
cmp
dec
lds
in
ror
mov
repnz
aaa
sbb
lahf
stos
xchg
mov
shl
in
sbb
cs
outs
cli
fadd
jae
xchg
pop
sbb
jns
cs
aaa
jp
jno
daa
or
adc
push
mov
fcmovnbe
sub
adc
test
push
ss
mov
sbb
and
daa
inc
imul
shl
and
int3
or
dec
daa
lahf
inc
jbe
fidivr
into
leave
lods
pop
jns
nop
jo
in
adc
es
call
pop
jl
movs
mov
and
mov
test
in
lea
ror
dec
sbb
dec
(bad)
out
push
loope
retf
ficom
sbb
pop
loopne
push
push
adc
mov
xlat
mov
sub
rcr
mov
push
ret
cld
adc
outs
xlat
mov
pushf
ss
int3
arpl
xor
pop
imul
dec
test
pop
mov
xchg
and
mov
enter
adc
test
outs
xor
xor
and
leave
push
js
push
stos
xor
icebp
outs
add
lods
sbb
jg
add
push
retf
je
add
jne
dec
(bad)
loope
lea
mov
pop
jl
jne
jb
xchg
push
xor
fild
xor
lock
mov
xor
retf
cmp
sbb
jge
out
jp
test
adc
jg
lods
jmp
mov
and
ss
movs
xchg
sub
xor
fstp
pop
push
and
ds
xor
ror
je
mov
imul
push
dec
inc
test
push
xchg
inc
rol
pop
scas
inc
mov
jnp
jp
out
call
retf
rcr
repz
mov
sub
inc
fstp
sbb
mov
jmp
cmp
adc
adc
lods
rcr
xchg
jbe
ret
out
cmc
scas
adc
rol
sar
inc
retf
inc
retf
arpl
(bad)
(bad)
add
jns
mov
or
aad
pop
dec
sub
daa
jmp
sub
mov
pop
repnz
movs
jnp
xchg
sbb
ror
mov
xchg
jg
aad
aaa
loope
arpl
push
or
or
aam
leave
mov
test
shr
aad
pop
fcomp
(bad)
popa
in
mov
sbb
loop
out
out
fild
push
jge
movs
enter
scas
(bad)
push
xor
das
aam
xor
xchg
pop
hlt
daa
loopne
aas
sbb
push
mov
psrlq
inc
les
lahf
cmps
ja
stos
mov
fild
xor
out
retf
test
pop
mov
add
cmp
call
pushf
jb
test
(bad)
pop
scas
loop
imul
in
jp
sub
jo
les
pop
clc
lea
or
test
mov
cmp
or
call
cmps
xor
repnz
and
add
sbb
out
sbb
ins
dec
mov
xchg
aaa
pop
pop
mov
in
clc
pop
adc
push
popa
lock
icebp
dec
repnz
sub
ja
sbb
xchg
add
pop
xor
and
hlt
ds
call
mov
pop
add
xchg
push
stc
and
and
(bad)
sahf
inc
mov
or
pop
dec
cwde
into
push
in
adc
fwait
xor
hlt
mov
xchg
jns
inc
movaps
cmp
cwde
pop
mov
mov
(bad)
std
mul
cmp
adc
add
dec
dec
xchg
les
addr16
sahf
fimul
into
sbb
imul
hlt
sub
mov
sbb
outs
mov
pop
movs
mov
cmps
mov
jno
lock
pop
daa
out
and
jns
ret
cs
sub
cmp
es
stos
mov
push
call
jno
js
ins
fwait
sub
push
dec
test
loop
mov
fsubr
cli
dec
xor
shl
das
mov
iret
inc
xor
cmp
or
xchg
dec
xchg
xor
adc
sysenter
or
retf
popf
nop
into
xor
inc
push
imul
fsub
loopne
data16
mov
call
sahf
cs
in
pop
cdq
mov
and
xchg
cmp
pusha
lods
mov
aad
xor
add
push
ds
dec
jmp
cmp
adc
aas
gs
iret
push
frstor
in
jno
mov
dec
daa
scas
sbb
dec
dec
sub
push
push
xchg
rol
outs
xchg
sbb
in
sahf
call
loop
js
dec
imul
mov
sti
cmp
loop
xchg
aaa
bound
mov
xor
push
push
sbb
mov
shr
dec
pop
sbb
ficomp
jg
mov
mov
cmp
pop
in
push
jb
fist
pop
in
rcl
mov
mov
mov
popa
cli
aam
pop
fidivr
jnp
sub
dec
stc
fsub
push
movs
idiv
mov
xchg
mov
xor
or
mov
xchg
xchg
repz
pop
pop
or
cmps
xor
ror
fisttp
aam
sbb
mov
in
sbb
pop
mov
and
or
ds
cmc
ss
outs
push
pop
fidivr
sbb
pop
dec
hlt
jnp
call
add
and
fisttp
sti
movs
pop
call
sub
pop
cs
jmp
loop
ds
outs
push
xchg
dec
add
mov
icebp
mov
xlat
inc
test
or
out
js
dec
scas
adc
fs
xor
pop
xlat
xor
adc
leave
scas
ror
outs
dec
mov
stos
aaa
dec
jnp
jge
mov
scas
xlat
jl
sbb
in
fwait
cmovne
hlt
push
rdtsc
xchg
dec
push
cli
pop
mov
jmp
xchg
mov
dec
icebp
cwde
outs
cmps
and
test
xor
stos
inc
push
icebp
push
out
aam
test
or
ret
clc
mov
mov
stc
push
repz
sbb
sub
xor
addr16
rcr
rcr
sbb
retf
mov
inc
(bad)
(bad)
dec
xor
sub
movs
ja
adc
jmp
mov
pop
xchg
into
out
gs
aaa
jmp
mov
dec
mov
out
sbb
jo
xchg
inc
out
test
mov
mov
nop
push
mov
std
adc
push
arpl
popa
data16
xchg
xchg
in
mov
out
jmp
retf
cli
pushf
xchg
lods
cmp
mov
cmps
mov
mov
arpl
xchg
pushf
mov
or
xor
test
mov
pop
sub
dec
or
or
fwait
imul
jbe
jmp
in
lods
sar
mov
fnstenv
popa
pushw
adc
adc
xchg
icebp
xchg
lock
neg
out
in
and
pop
mov
bound
mov
fistp
cmp
fst
sbb
mov
int3
test
pop
or
retf
test
dec
data16
sbb
inc
test
pop
pop
and
inc
lock
push
xor
inc
mov
cmc
leave
daa
xor
mov
push
stos
outs
cmp
loopne
movs
leave
jmp
(bad)
xchg
popf
xchg
xor
fild
into
xor
sbb
aas
ss
adc
inc
mov
imul
push
sahf
dec
outs
test
inc
xchg
jmp
mov
ficom
jecxz
rcr
or
push
shr
mov
sub
sbb
neg
xor
jge
sub
mov
addr16
jmp
fstp
ins
data16
jbe
sub
test
addr16
xchg
or
rep
mov
(bad)
test
je
sbb
xor
pop
gs
mov
sub
in
pusha
ins
jl
retf
mov
cmp
inc
pop
add
arpl
aas
mov
int3
inc
jne
or
into
jnp
ins
sub
push
mov
sub
jb
sahf
fdivr
cmps
cwde
sub
xor
fcom
adc
mov
fst
sahf
sbb
adc
popa
outs
test
ror
(bad)
and
mov
call
clc
clc
xchg
xchg
dec
int
popf
mov
test
jo
fild
bound
sbb
xchg
les
sbb
jns
and
(bad)
sbb
fmulp
or
fisttp
sbb
push
out
push
enter
pop
dec
mov
ss
out
retf
test
out
pop
push
xchg
add
test
es
mov
hlt
loope
mov
or
and
ds
adc
push
inc
inc
xlat
div
int3
and
les
pusha
or
call
sbb
or
jb
jecxz
rcr
stc
sbb
retf
ss
jmp
loop
dec
push
dec
mov
sbb
ret
js
sub
out
mov
fiadd
lds
add
xchg
mov
push
fdiv
fcom
nop
call
fyl2xp1
cld
mov
adc
shr
jo
add
pusha
int
test
inc
or
ror
inc
daa
stc
fwait
jl
pop
mov
fidiv
int3
push
pop
into
sbb
sti
jmp
cmp
(bad)
pushf
push
addr16
shr
aaa
cmp
add
rcl
not
pop
cmps
inc
iret
jae
pop
ins
loopne
xor
adc
cld
cmps
cmp
clc
jae
pop
repnz
or
adc
shr
(bad)
fldcw
test
add
push
(bad)
xlat
bound
mov
movs
dec
stos
and
fdivr
mov
sbb
outs
sbb
stos
rcl
cmp
xor
or
jge
scas
jb
gs
jmp
mov
cmp
gs
pop
fild
sbb
sbb
sbb
fistp
das
mov
mov
xchg
push
idiv
dec
in
cmp
ss
shr
push
mov
lds
dec
aaa
add
int
js
mov
ds
adc
pop
and
outs
call
into
push
or
imul
cli
aad
aas
retf
aam
inc
fisttp
cmp
rcr
ss
leave
mov
test
ins
std
and
out
xor
sbb
int3
xchg
xchg
mov
(bad)
aad
cmp
mov
cmp
enter
push
push
outs
push
pop
pop
dec
cli
fild
pop
mov
mov
xlat
call
pop
movsx
(bad)
loopne
cmps
fsubp
and
into
sahf
and
test
sti
outs
inc
fisub
push
(bad)
and
mov
mov
inc
xchg
add
jbe
cmps
xor
icebp
mov
(bad)
mov
jle
enter
adc
std
ins
push
xchg
inc
adc
push
test
and
sub
ja
lahf
pop
mov
call
jle
icebp
mov
push
inc
fadd
(bad)
repnz
jmp
cmp
jne
jbe
neg
lods
lahf
stos
test
ss
fstp
shl
sahf
in
mov
or
mov
and
pusha
fdivr
mov
cli
and
sar
mov
mov
idiv
popf
ins
(bad)
rcl
add
push
pusha
add
retf
mov
sub
xor
daa
xor
(bad)
stos
mov
add
cmp
dec
sahf
cmp
xor
ss
inc
sub
jbe
jo
jl
mov
mov
and
std
in
mov
or
push
push
jmp
sbb
cmp
xchg
popf
sbb
mov
mov
add
lods
mov
fwait
xor
add
outs
das
and
add
xchg
inc
sub
lods
es
mov
adc
inc
sub
sbb
push
xchg
xor
sbb
cmp
popf
das
dec
aam
mov
push
hlt
adc
aas
sbb
daa
sbb
int
popa
repz
mov
jno
mov
lds
jno
retf
jg
pop
popa
arpl
bound
aad
sbb
dec
jg
bound
xchg
jnp
inc
sbb
enter
daa
jo
xchg
inc
xor
pushf
cmp
mov
mov
pop
xchg
pop
cld
mov
dec
ins
pop
sbb
mov
lods
sub
(bad)
pop
jge
fsubrp
mov
sub
ror
enter
hlt
arpl
jmp
jb
and
push
ret
sbb
repz
lahf
jg
arpl
adc
mov
enter
ret
rol
lods
pop
fcomp
mov
into
mov
repz
sbb
scas
rcr
sub
push
daa
push
or
je
xchg
add
je
sbb
and
cmp
pop
outs
stc
adc
movs
test
mov
pusha
xchg
add
mov
(bad)
mov
dec
xchg
mov
inc
dec
sti
adc
pop
aad
xor
jl
cmps
cmp
mov
test
mov
loopne
leave
jb
addr16
ja
sbb
sub
mov
shr
out
jne
push
mov
adc
xor
cmp
(bad)
and
test
lock
jb
in
out
in
fldcw
dec
xlat
lods
mov
or
(bad)
inc
cmp
scas
mov
lea
pop
aad
sub
or
ret
cs
cli
jno
mov
mov
mov
sbb
xor
push
js
in
test
outs
test
hlt
into
and
mov
mov
push
inc
out
call
lock
add
cli
mov
icebp
push
mov
inc
and
xchg
sbb
mov
bound
dec
push
push
adc
adc
push
sbb
mov
hlt
pop
adc
iret
mov
xor
repz
out
dec
ficom
ret
mov
pxor
jbe
ins
ja
fisttp
das
ja
add
xlat
das
xchg
sti
sub
pusha
xor
lahf
adc
leave
adc
pusha
cdq
pop
icebp
cmp
call
jnp
les
cmp
cmps
xchg
lock
aad
outs
add
cs
xchg
test
hlt
hlt
push
addr16
pop
dec
sbb
xor
js
pushf
(bad)
in
xor
and
jae
ins
cmp
scas
test
and
xchg
nop
sub
js
mov
(bad)
outs
outs
sbb
sbb
das
push
mov
lahf
cs
adc
je
rcr
dec
push
jmp
xor
je
and
pop
fnstenv
dec
mov
push
mov
mov
add
pop
xor
push
js
add
(bad)
lahf
jmp
es
pop
sbb
outs
and
repz
loop
xor
ja
adc
shr
adc
xor
mov
call
in
jl
fistp
and
sbb
icebp
adc
loopne
icebp
leave
pop
jbe
xchg
ror
or
push
into
and
imul
(bad)
lock
sbb
add
mov
fcom
mov
and
imul
loopne
mov
pop
inc
js
mov
and
sbb
push
mov
fmulp
xchg
(bad)
and
inc
js
imul
and
and
fistp
inc
bound
or
popf
jne
aam
fnstsw
xchg
xor
mov
mov
mov
rep
repz
mov
out
push
add
jg
dec
jg
dec
cli
in
les
add
jb
mov
cmp
call
(bad)
shl
xchg
jo
div
cmps
adc
jmp
out
test
addr16
dec
gs
jle
out
adc
jmp
test
sub
ds
sar
aas
cmp
aad
sbb
fstp
dec
daa
out
imul
jb
sbb
fwait
pop
add
mov
sti
sub
dec
les
adc
push
inc
fistp
add
mov
xchg
add
ins
shl
out
call
int3
xchg
jl
mov
int3
xlat
fcomp
sbb
cmp
mov
sbb
inc
push
into
das
sbb
xor
mul
mov
xchg
mov
push
sbb
cmp
mov
mov
arpl
xchg
sub
adc
popa
or
add
or
fcmovne
mov
inc
xchg
mov
outs
push
push
dec
sub
ins
dec
cmp
push
push
nop
adc
push
push
movs
push
mov
scas
cmps
cmps
adc
jge
(bad)
adc
adc
xchg
pop
scas
in
pop
(bad)
jmp
sub
mov
jle
call
xor
das
ret
lock
int3
fs
(bad)
rol
cs
ficom
pushf
sti
rcr
sar
test
scas
sbb
mov
(bad)
xor
gs
popw
xchg
ret
shl
jmp
cmps
fs
(bad)
js
sahf
test
call
bound
inc
stos
mov
xchg
fld
das
call
mov
cli
push
jmp
add
mov
ret
push
adc
iret
pop
inc
jbe
xchg
xchg
pop
aas
repnz
jnp
popf
mov
mov
mov
js
mov
nop
pop
sbb
dec
add
test
and
xchg
repnz
or
loop
push
jne
(bad)
fidivr
sbb
sbb
or
cmps
add
pop
xor
pop
fiadd
pushf
jno
(bad)
hlt
shr
push
cli
push
js
inc
ins
mov
or
mov
in
cwde
pop
push
add
pop
ss
cmp
arpl
or
adc
rcr
es
and
jge
push
pop
mov
sbb
call
(bad)
mov
int3
ret
push
mov
mov
sbb
mov
cmp
jg
mov
adc
xor
push
in
jl
push
inc
stc
loopne
pop
lods
popa
fstp
sahf
sub
jmp
pop
pusha
aaa
jno
adc
dec
retf
test
and
lods
sbb
test
push
in
sbb
or
ins
or
mov
dec
xor
sbb
fs
frstor
aas
lock
inc
mov
call
aam
(bad)
mov
arpl
mov
out
cld
jb
xchg
mov
aaa
push
jmp
push
addr16
mov
cmp
aas
mov
sub
sbb
call
aas
icebp
(bad)
cld
adc
fdivr
(bad)
jmp
out
ds
shl
add
jnp
jne
inc
mov
jg
mov
lds
outs
adc
fwait
mov
add
and
jg
dec
mov
dec
push
fnstcw
inc
xor
sar
mov
or
mov
mov
dec
frstor
int
xchg
mov
xlat
sbb
pop
rcl
test
stc
shl
les
mov
dec
fsubr
test
push
mov
cdq
iret
clc
push
outs
xor
or
fild
sub
hlt
call
mov
sub
cdq
xor
movs
cli
fld
lock
cmp
pusha
mov
sbb
iret
std
cmps
push
and
call
shl
or
pushf
mul
pop
cmc
aad
jecxz
push
scas
inc
jecxz
test
(bad)
in
xor
and
jbe
into
jmp
aaa
retf
ja
push
cdq
aam
popa
mov
mov
imul
jb
pop
icebp
and
int3
sbb
xchg
xchg
lahf
sub
adc
pop
outs
and
js
cdq
retf
inc
mov
in
in
dec
aas
xchg
sub
xchg
pop
add
pop
xchg
fsubr
pop
out
cmp
sub
arpl
cmp
push
(bad)
shr
js
fstp
mov
ret
dec
loopne
adc
leave
push
dec
push
hlt
xor
xchg
inc
mov
mov
push
ss
or
mov
push
push
inc
pop
inc
out
sbb
loopne
and
(bad)
fucomp
movs
adc
jmp
ss
ja
fwait
cmp
inc
jecxz
mov
cmp
sbb
(bad)
outs
inc
jb
sbb
retf
mov
lahf
mov
fld
mov
retf
and
rcl
dec
iret
fwait
push
jns
xor
scas
movs
aad
mov
sbb
or
cmp
pop
sub
xor
mov
inc
cmp
mov
cwde
push
mov
xor
or
add
add
push
pop
mov
cli
pop
repz
mov
push
pop
xor
int
push
mov
clc
push
add
dec
aam
mov
or
icebp
push
outs
xor
psubb
jge
push
aas
out
adc
fisubr
jae
dec
sahf
inc
mov
push
mov
in
xor
cmps
dec
sti
repnz
pop
adc
push
test
inc
pop
push
sub
jne
pop
mov
sub
mov
and
pop
push
pusha
pop
movs
jmp
repnz
fnstsw
mov
mov
inc
repnz
push
xchg
mov
and
jae
or
push
xor
add
jg
or
mov
lods
es
add
ror
aam
push
int3
xchg
mov
mul
shr
lock
mov
mov
(bad)
dec
add
hlt
in
mov
and
nop
mov
cmp
out
dec
out
add
or
add
and
jb
cwde
fidivr
adc
ret
hlt
stos
xchg
inc
shl
sub
mov
cmp
(bad)
pop
dec
cmp
or
out
mov
hlt
sub
or
inc
into
mov
cmp
inc
jae
xchg
adc
pushf
gs
nop
ret
add
int3
ret
mov
sar
inc
cmp
lock
sbb
imul
popa
icebp
and
nop
test
xor
inc
pushf
sahf
cli
mov
loop
dec
popf
aas
jb
xor
out
pop
ja
mov
cli
aaa
in
and
test
jbe
cmp
loop
in
daa
add
xchg
push
mov
lahf
mov
xchg
sbb
mov
cmp
dec
and
pop
fidivr
das
fild
ss
stos
not
lock
adc
and
mov
mov
mov
mov
je
fldenv
sbb
es
jnp
es
and
inc
xchg
rol
adc
push
mov
mov
dec
lods
and
ror
jnp
les
std
dec
fwait
lds
push
rol
mov
xchg
fwait
ds
add
imul
fnstsw
xor
inc
dec
(bad)
aam
stos
add
and
or
aaa
sbb
fld
push
or
ins
mov
dec
pop
shl
aad
stos
sbb
adc
ins
pop
jbe
add
aam
mov
out
push
push
or
pushf
lock
or
and
pop
inc
iret
sub
addr16
fnsave
or
pushf
mov
cmps
mov
jmp
push
sub
jmp
inc
adc
iret
cmps
dec
sub
int3
cmps
daa
ins
repz
in
call
xchg
xor
and
inc
inc
cmp
or
(bad)
pop
dec
adc
loope
popw
in
iret
shl
sahf
in
or
sbb
hlt
xor
lods
es
push
or
pop
aam
not
cs
fwait
scas
jl
add
je
out
mov
hlt
sub
test
xchg
repz
add
sar
ins
mov
sub
sbb
pop
add
inc
dec
out
out
or
jbe
test
jle
fnstenv
sbb
jmp
popa
fsubrp
sbb
cs
bound
sub
xchg
and
(bad)
push
push
jb
ret
imul
mov
mov
mov
or
pop
clc
(bad)
xor
arpl
jnp
bound
aam
sar
push
mov
call
inc
adc
jnp
mov
ja
scas
sbb
sub
dec
imul
ret
adc
mov
shl
out
fmul
cmp
ret
mov
sahf
je
or
cmps
push
adc
mov
push
jae
clc
mov
jno
mov
mov
cmp
xor
in
mov
push
push
or
outs
add
test
inc
fwait
in
cmp
push
xchg
cmp
and
mov
dec
ins
jno
sub
sub
imul
add
xchg
pushf
or
add
jp
cmps
mov
das
and
adc
test
(bad)
pop
mov
ficomp
iret
in
shl
loope
shr
add
call
mov
push
inc
cmp
dec
fisubr
sbb
add
fisttp
jnp
dec
cmp
mov
xrelease
cwde
push
fs
xor
adc
xchg
add
dec
adc
test
adc
xor
hlt
je
(bad)
fsubr
mov
mov
inc
sub
sub
push
dec
or
push
mov
dec
cmp
jnp
add
mov
pop
int3
pop
adc
in
sti
push
mov
fwait
movs
adc
jmp
adc
xor
xchg
add
out
mov
outs
jo
movs
xor
dec
hlt
mov
(bad)
cmp
call
das
mov
dec
push
mov
and
lods
push
push
rcr
sbb
loope
cmps
jns
jge
shl
iret
xlat
dec
mov
test
push
ficomp
scas
push
fdiv
(bad)
std
shl
call
cmp
dec
and
or
mov
sbb
sub
ror
div
xor
or
or
xchg
sbb
test
or
je
es
push
scas
or
fdivp
mov
inc
arpl
add
sbb
mov
inc
push
cs
(bad)
dec
lods
loopne
sbb
inc
jle
std
mov
mov
mov
add
(bad)
and
push
mov
push
cmp
pop
inc
mov
ss
setbe
inc
and
push
push
or
mov
push
push
test
mov
call
not
pop
test
scas
test
mov
push
repnz
pop
mov
fs
es
or
adc
xor
xchg
jne
push
ror
dec
adc
repnz
jg
neg
and
ret
xchg
pop
dec
mov
push
mov
adc
jns
imul
cli
imul
pop
dec
aad
outs
jl
mov
test
mov
jecxz
lods
add
mov
mov
and
iret
(bad)
div
movs
cs
jns
or
stc
mov
xor
mov
xchg
mov
jecxz
movs
dec
sbb
pushf
xchg
(bad)
or
and
outs
sub
cwde
and
xor
inc
retf
or
popf
xor
rcl
bnd
inc
xor
xchg
ja
xor
dec
ffree
inc
adc
rcl
mov
push
mov
pop
sbb
gs
sub
cmp
push
dec
mov
out
bound
popf
jnp
int3
ficomp
xchg
in
les
dec
mov
jno
sar
fnstenv
movs
ffree
sub
(bad)
sbb
aas
scas
pop
xor
push
mov
add
rol
scas
test
mov
cdq
mov
das
cmp
jnp
int
jae
loope
int
xchg
call
cmp
inc
lods
add
inc
jnp
push
xor
in
xchg
xor
jns
mov
pop
push
or
inc
pusha
je
test
nop
push
mov
rcl
jnp
add
jmp
jg
aaa
mov
sbb
pop
lea
add
inc
cmps
mov
or
(bad)
xor
(bad)
in
aaa
lock
dec
(bad)
addr16
cmp
test
cmp
jbe
cmp
adc
jne
xor
pusha
jg
cdq
jo
popa
stos
add
mov
cs
add
jg
out
xchg
stos
jmp
sahf
mov
ss
test
push
push
jbe
sahf
add
(bad)
sub
scas
inc
push
fild
retf
inc
repnz
int3
sahf
cmp
lods
nop
xchg
mov
scas
out
adc
xor
jge
scas
(bad)
cwde
xchg
loope
(bad)
or
ds
fcmovnu
(bad)
ret
or
leave
mov
mov
mov
adc
xchg
xchg
dec
test
clc
jg
add
xchg
xchg
mov
lahf
mov
ss
lahf
not
das
sub
inc
cmc
ss
sahf
mov
and
jmp
push
mov
mov
push
fwait
jl
sub
mov
adc
jp
aas
ret
(bad)
xor
cmp
ret
xchg
sbb
ret
adc
push
addr16
xor
aaa
inc
mov
mov
push
mov
(bad)
jmp
call
cdq
and
clc
push
xchg
cmp
cmp
mov
rcl
jmp
nop
sbb
push
(bad)
xor
int3
(bad)
outs
arpl
leave
inc
mov
add
les
jnp
test
aas
cli
into
add
pop
add
loopne
(bad)
aas
or
iret
inc
sub
js
sub
cmps
sub
ds
retf
push
inc
sti
popa
js
pop
outs
pop
pop
repz
popa
and
dec
sti
and
mov
cmp
jbe
xchg
nop
out
inc
int3
jns
push
rol
jae
sbb
idiv
xchg
xor
jg
retf
sbb
int
push
pop
call
loope
sub
mov
sbb
fucomi
sub
leave
in
ds
js
ins
int
adc
outs
add
mov
or
mov
push
inc
sub
adc
add
out
pop
pop
mov
xor
jmp
dec
in
test
ret
add
outs
adc
es
pushf
pop
jmp
adc
add
cmc
out
jle
jmp
sahf
imul
cli
outs
in
mov
jecxz
inc
xchg
mov
cmp
xchg
push
adc
aam
and
adc
aas
dec
sbb
ds
and
fcom
push
ret
add
mov
imul
jae
test
arpl
jne
retf
in
jnp
(bad)
loopne
cmp
aad
xchg
push
pop
repz
or
fidivr
dec
jmp
in
sbb
rcr
inc
pop
data16
cdq
sbb
cmc
scas
jmp
inc
push
push
call
stos
and
iret
inc
jno
or
inc
and
daa
dec
lds
pop
in
sub
mov
je
mov
mov
fs
xchg
mov
jecxz
mov
jae
jae
call
sbb
lea
hlt
jmp
shl
push
jle
stos
push
mov
xchg
repz
test
xchg
pop
dec
adc
bound
lds
mov
das
mov
aad
mov
rol
inc
xor
addr16
fld
popf
in
xlat
in
ret
push
sti
(bad)
pusha
(bad)
mov
adc
icebp
outs
sbb
int3
test
and
int3
(bad)
popf
ficomp
inc
mov
sbb
arpl
jbe
popa
dec
jb
lea
sbb
xor
inc
sbb
(bad)
sbb
aas
xchg
mov
int3
sub
movs
out
mov
and
out
jl
and
fidiv
pop
pushf
inc
jne
retf
and
int3
sbb
shl
xor
fcomp
inc
jno
xor
inc
jge
or
daa
push
or
add
and
pop
and
sbb
cdq
iret
push
cmp
in
and
adc
push
jg
ja
push
xchg
out
xor
fist
mov
sub
push
clc
add
jl
push
adc
sbb
jns
fs
and
jnp
cmc
push
or
add
push
or
dec
int3
cmp
sub
(bad)
aad
sbb
pop
xchg
sbb
mov
and
rcr
sbb
jecxz
clc
sbb
movs
cmp
(bad)
push
inc
adc
mov
inc
retf
ins
inc
add
push
mov
nop
sbb
xchg
das
cmp
enter
sti
cld
in
sti
adc
push
or
cmps
cmp
leave
rol
add
xchg
aaa
add
xor
pop
fwait
pop
xchg
imul
pop
dec
cmp
ss
cld
(bad)
das
(bad)
inc
xor
dec
push
or
outs
rol
adc
mov
xor
lods
fidivr
iret
sub
or
lahf
push
shl
xchg
mov
xchg
sub
fsubr
mov
std
inc
add
inc
xor
fadd
sbb
adc
mov
jge
and
or
push
xchg
iret
pop
sbb
test
push
loopne
pushf
std
data16
jecxz
xor
push
rol
dec
das
push
rcpps
jle
xor
pop
mov
fsub
adc
or
call
(bad)
xor
push
aas
outs
cmps
cli
mov
push
dec
clc
stos
out
fisub
push
push
scas
sub
inc
cmps
xchg
and
arpl
jbe
mov
mov
jno
mov
mov
(bad)
cld
dec
cs
cmp
mov
xchg
ss
clc
mov
ds
pop
pop
sbb
fcom
push
cmp
sub
jbe
ror
out
sbb
mov
cli
sbb
fs
(bad)
daa
ja
xor
pop
repnz
jo
xchg
inc
jno
xchg
sbb
repz
aaa
jbe
sbb
xchg
repz
and
xor
xor
sbb
pushf
test
sub
rcr
ud2
pop
ror
mov
mov
or
ja
and
fldenv
xchg
mov
push
aas
std
xlat
sbb
imul
cmp
sahf
pusha
imul
(bad)
aam
movs
dec
mov
and
lods
shl
inc
cmp
out
pop
addr16
cmp
movs
call
retf
call
xor
fadd
jl
dec
pop
adc
cmp
sbb
loopne
sbb
sbb
ins
inc
mov
push
sbb
dec
inc
arpl
aaa
jg
out
shr
inc
inc
shl
jnp
cmp
mov
ds
add
clc
mov
movs
sti
enterw
mov
mov
ins
mov
cmc
sbb
push
out
sar
dec
xchg
mov
adc
xor
cmp
cmps
cmps
dec
cmp
sub
(bad)
es
call
cwde
pop
fwait
enter
mov
sub
loopne
adc
or
test
outs
jne
leave
jae
pop
(bad)
je
int
addr16
in
or
inc
data16
mov
std
add
mov
cmc
mov
test
shufps
retf
xchg
test
nop
(bad)
lods
sub
and
push
data16
mov
sbb
mov
enter
sbb
das
cmp
adc
ins
arpl
or
push
repz
les
mov
movs
mov
pop
add
adc
mov
pushf
cmp
and
and
movs
(bad)
dec
xor
inc
xchg
pusha
call
add
dec
fdiv
cmp
scas
mov
es
lahf
(bad)
pop
mov
xor
cmp
jge
fcmovu
mov
push
mov
cmp
imul
icebp
jmp
out
(bad)
scas
loope
stc
push
jmp
push
or
mov
push
push
or
ins
div
inc
les
xor
or
dec
jae
in
mov
pop
fwait
mov
pop
(bad)
aaa
aaa
mov
xchg
je
push
shl
dec
pop
retf
add
mov
leave
jne
dec
(bad)
adc
test
and
and
xchg
lahf
out
idiv
jl
sbb
sbb
or
scas
lds
out
out
imul
ins
movs
idiv
sub
je
out
cmp
call
scas
mov
push
neg
mov
pop
enter
cmp
rcr
(bad)
cmp
xor
mov
fbld
jb
bound
test
test
xlat
fbld
fwait
retf
lahf
ret
loop
shr
and
or
xchg
xchg
arpl
cmp
dec
sub
xor
int
sub
mov
jns
mov
lea
js
ss
rol
cld
or
in
fwait
adc
mov
sti
lods
push
xchg
loop
jnp
adc
into
jge
in
test
loop
cmp
pop
lock
sub
lea
and
mov
in
stos
xor
add
jnp
sub
mov
test
addr16
sub
out
lds
or
fld
lds
dec
mov
mov
push
mov
sbb
cwde
clc
cli
dec
stos
adc
dec
push
in
nop
aad
xchg
mov
mov
push
pop
and
lods
std
retf
mov
jle
push
in
pushf
shr
fidivr
ins
clc
stc
jns
and
add
and
jne
mov
scas
mov
and
das
test
sub
adc
jl
sbb
inc
mov
ds
push
push
and
inc
popf
and
test
jecxz
pop
scas
bound
addr16
fdiv
pusha
fdivr
pop
xor
inc
push
mov
cmp
jno
test
daa
inc
sahf
movs
test
push
jle
aad
ins
inc
pushf
popf
xlat
mov
and
jle
sbb
icebp
shl
int
sbb
test
repz
popa
dec
xor
(bad)
mov
mov
add
dec
lds
div
pop
xchg
adc
cmp
inc
add
test
sub
lock
cmp
push
mov
lods
ins
mov
cmp
(bad)
push
sbb
adc
addr16
mov
mov
xor
lahf
rcl
jecxz
rcr
fnsave
out
or
sub
das
pop
ins
mov
push
mov
(bad)
xor
fwait
xchg
out
cmp
test
rcr
pop
add
xchg
test
jmp
inc
stc
call
ins
outs
pop
mov
or
sub
sti
adc
dec
stos
je
fcmove
sar
fdivr
xchg
and
xchg
mov
cwde
mov
jle
fsubr
sbb
push
pop
int3
shl
movs
sbb
addr16
pop
push
aas
push
hlt
push
add
fisttp
out
add
push
int3
push
jge
cmp
adc
mov
xchg
sub
ret
push
mov
cmp
jge
add
fdiv
(bad)
ins
popa
rcr
add
lods
mov
fidiv
dec
call
ja
push
mov
(bad)
aad
icebp
ins
stc
imul
pop
push
(bad)
std
xor
mov
xchg
xchg
and
xchg
out
lds
(bad)
mov
iret
addr16
out
sar
das
ficomp
push
popa
sub
fwait
jae
cld
adc
xchg
les
nop
fs
test
jge
and
inc
dec
mov
jle
lea
div
or
ins
xchg
mov
int
add
push
jle
fisttp
adc
or
or
jae
cwde
dec
les
pop
cmp
cli
scas
jno
adc
dec
(bad)
in
daa
int3
xor
imul
xor
das
xor
jecxz
scas
scas
ja
ror
shr
jl
cmc
inc
inc
mov
dec
mov
or
cwde
call
dec
lds
vpunpckhdq
add
jbe
adc
leave
ins
in
mov
add
js
bound
(bad)
mov
ins
retf
or
fucomip
in
or
xchg
adc
call
and
enter
mov
add
mov
hlt
mov
inc
aas
add
popf
inc
adc
js
sahf
imul
or
dec
aam
cmps
adc
shl
(bad)
inc
arpl
pop
or
adc
push
push
jns
push
outs
(bad)
les
imul
jmp
jbe
jge
loop
mov
and
cli
jg
push
xchg
dec
test
pop
dec
cmps
sub
leave
cmp
es
dec
int
push
es
loop
cmp
dec
adc
pop
rcl
imul
pop
adc
(bad)
add
mov
jecxz
pop
xor
inc
jns
jbe
mov
test
mov
jne
int3
pop
outs
out
pop
xor
xchg
stos
xor
push
stc
leave
icebp
imul
pop
pop
dec
enter
fcomp
add
jecxz
mov
or
(bad)
arpl
or
dec
adc
jmp
jb
ss
adc
adc
lahf
inc
dec
dec
ret
aad
adc
mov
movs
je
cli
int
fsubr
scas
pop
push
sub
fcmovb
dec
or
or
es
ss
movs
or
data16
xlat
adc
popf
push
movs
out
and
jmp
test
imul
fist
mov
neg
call
dec
or
adc
add
adc
(bad)
sbb
xchg
fwait
jns
push
and
adc
and
sub
lds
or
(bad)
adc
in
inc
nop
xlat
cli
jmp
push
out
pop
das
lea
push
jbe
adc
lahf
xchg
jmp
nop
and
(bad)
xlat
push
movs
cmps
fwait
jae
sar
xor
xchg
mov
xor
(bad)
and
jl
int3
retf
es
jg
mov
sbb
movs
inc
fld
push
fstp
jmp
loopne
sub
inc
scas
dec
sbb
outs
mov
movs
movs
cli
shl
jecxz
test
fisub
and
fld
sub
push
fs
into
or
(bad)
pop
lods
sbb
dec
xor
jae
xor
sub
clc
loopne
dec
leave
add
jg
cmps
out
mov
inc
(bad)
pop
mov
retf
stos
sbb
mov
xor
xor
mov
mov
imul
cwde
xchg
xchg
sbb
push
cwde
push
sub
sub
sahf
mov
adc
out
leave
neg
in
inc
aas
xchg
(bad)
fsubr
inc
pop
mov
or
push
push
mov
stos
add
ins
test
pop
push
outs
pushf
nop
fcomp
mov
or
pop
out
sub
mov
jmp
mov
mov
sbb
xor
or
xchg
jp
repnz
pop
fwait
movs
cmp
call
fcmove
inc
lea
sbb
sub
std
iret
loope
jmp
jecxz
cmp
cwde
jbe
dec
je
rol
xor
imul
retf
inc
das
loop
mov
add
or
ss
xlat
dec
rcr
pop
stc
fucomp
sub
and
inc
and
and
fwait
(bad)
cli
aad
sbb
adc
dec
addr16
mov
mov
add
hlt
cmp
in
sub
push
inc
fild
dec
sub
clc
push
out
xchg
push
xchg
rcr
xchg
mov
xchg
es
fwait
popa
imul
mov
push
or
movs
fs
push
mov
call
retf
popf
sub
push
imul
xchg
inc
retf
add
cmps
mov
mov
call
hlt
in
jg
cmp
pop
mov
and
repnz
or
cwde
fisubr
add
push
scas
inc
mov
adc
jl
loop
adc
adc
dec
aas
dec
xor
adc
push
out
cmp
mov
lock
sub
sbb
push
cmp
add
scas
mov
lods
jmp
xor
shl
adc
je
or
ja
idiv
xor
das
xor
mov
pop
add
jecxz
fdiv
mov
mov
repz
mov
mov
clc
jmp
outs
and
xchg
(bad)
mov
daa
imul
bound
std
xor
dec
push
(bad)
mov
or
mov
inc
mov
cmp
mov
jmp
lock
add
loope
arpl
sbb
mov
mov
and
hlt
push
outs
add
or
xor
inc
sar
jle
daa
mov
out
or
dec
mov
jae
jo
(bad)
inc
mov
fnstsw
mov
out
xchg
js
push
jno
xchg
add
push
js
pop
push
jbe
jp
cmp
pusha
inc
js
ins
xchg
sar
lahf
or
sbb
push
lahf
mov
and
test
adc
movs
bound
pop
mov
inc
inc
arpl
imul
cdq
sub
or
cmp
test
push
cdq
scas
push
retf
push
xor
and
ret
stc
xchg
inc
sbb
or
inc
xchg
in
pop
sub
lock
pop
jmp
out
or
jne
sbb
int
pop
ror
xchg
pop
sub
sbb
mov
in
imul
jp
xor
jnp
fiadd
nop
fidiv
and
mov
and
and
test
jecxz
out
push
dec
lds
adc
xor
push
mov
lock
push
fsub
mov
es
popf
xchg
or
xchg
outs
aas
xchg
movs
sbb
inc
pop
fs
or
xchg
cdq
and
xchg
fsub
ins
jl
cmp
movs
enter
call
out
lock
push
pop
(bad)
pop
jae
jb
and
pop
add
inc
xchg
pop
mov
cwde
sub
das
or
jb
fucomi
mov
ins
fsubr
ror
jno
out
aad
add
inc
(bad)
xchg
shr
daa
lahf
gs
ins
dec
mov
sub
lods
inc
retf
movs
mov
in
arpl
test
cmp
cmp
or
dec
leave
or
out
dec
mov
outs
aad
inc
push
imul
ds
mov
mov
mov
adc
jns
pop
ss
push
dec
jmp
outs
popa
outs
repnz
and
fcomp
enter
cli
and
and
(bad)
loop
fxch
jmp
push
cwde
out
test
push
sbb
xchg
push
jmp
sbb
xchg
jnp
ret
gs
cs
or
cmp
and
push
int3
int
or
aas
clc
mov
inc
mov
push
mov
shl
dec
pop
jl
mov
sbb
mul
sar
pusha
push
and
shl
xchg
sub
and
adc
adc
xchg
std
fsubr
pop
pop
movs
mov
xor
cmpxchg
dec
daa
out
and
sar
push
repz
jo
and
xchg
mov
xchg
inc
sbb
sub
loopne
sub
in
scas
sub
and
sbb
add
cdq
lock
rcr
adc
sub
mov
inc
neg
imul
cld
sub
cmp
stos
(bad)
aad
inc
mov
mov
inc
inc
and
repz
inc
into
inc
sbb
out
stos
pusha
xor
outs
lods
iret
fscale
mov
punpckhdq
pusha
cmp
jbe
daa
add
loop
mov
fstp
pop
mov
ins
aaa
icebp
les
scas
push
adc
in
jb
adc
jbe
in
out
repz
cmps
push
xchg
fadd
jp
jge
iret
faddp
xchg
xor
xchg
mov
inc
cmp
and
(bad)
cdq
nop
and
into
loope
xchg
shl
cmp
push
mov
addr16
xor
js
dec
loopne
(bad)
cmp
daa
cmp
or
sbb
ds
sbb
fadd
test
xchg
xor
mov
repz
mov
dec
jmp
in
ret
xchg
jae
mov
xor
ficom
sub
xchg
in
pop
jae
push
sub
inc
test
sub
fadd
adc
fwait
call
adc
push
test
mov
sub
into
pop
fisub
enter
dec
pop
nop
jmp
call
jne
jmp
mov
sub
fstp
fild
scas
mov
mov
dec
jmp
xor
inc
mov
repz
push
in
ss
mov
les
add
jp
cdq
or
jecxz
dec
or
sbb
cs
mov
push
(bad)
icebp
cmp
ffree
push
inc
inc
lock
cwde
pop
stos
xchg
clc
pushf
xchg
add
dec
sub
(bad)
jmp
cwde
pop
in
sbb
in
xor
jmp
loope
bound
scas
cmps
adc
cmp
loop
pop
cmc
push
and
push
or
adc
in
xor
lods
xchg
and
test
jb
inc
push
aas
in
cmp
js
stos
pop
out
jmp
mov
les
das
and
pop
popa
ins
stos
inc
cs
adc
ins
ins
and
dec
in
adc
cwde
xor
sub
(bad)
push
adc
out
outs
das
ret
loopne
mov
call
int
add
lods
push
sub
shr
sbb
inc
mov
sar
mov
fsubr
ins
adc
fstp
sbb
les
mov
hlt
test
adc
lahf
inc
xlat
add
mul
pop
adc
fucomp
mov
gs
retf
or
mov
adc
stos
adc
jg
repnz
xchg
sbb
dec
adc
mov
ins
push
xchg
fld
xlat
test
mov
xor
retf
in
loope
jge
popa
scas
pushf
xchg
emms
data16
adc
or
ret
dec
(bad)
and
loop
stos
push
add
rcl
mov
pop
and
pop
(bad)
cmp
mov
adc
ds
jmp
and
test
out
(bad)
icebp
data16
sysenter
xor
in
leave
fidiv
push
iret
cmps
jnp
inc
les
in
in
je
mov
lds
ss
xor
adc
or
rcr
or
icebp
ins
lods
loopne
(bad)
pop
or
pop
cmps
mov
hlt
mov
fucom
adc
dec
cmps
push
clc
mov
mov
dec
dec
mov
in
push
sbb
xchg
cmp
jns
and
das
pop
sbb
mov
pop
jl
repz
retf
pop
pop
and
add
dec
lods
mov
push
xchg
std
(bad)
sbb
test
mov
xchg
pop
add
bound
ja
sub
rol
ret
test
xchg
loop
mov
xor
repz
out
mov
cmp
out
out
not
mov
(bad)
add
sti
xor
fisttp
fnstenv
(bad)
mov
jmp
mov
sbb
ret
pop
mov
push
push
lea
loope
(bad)
pop
jbe
xor
sbb
xor
cmp
adc
or
xchg
xlat
inc
in
xor
cs
xor
inc
mov
mov
inc
aas
out
gs
xor
sub
jp
jb
adc
adc
imul
sub
test
mov
xchg
(bad)
in
nop
push
sub
sbb
and
test
ror
in
loop
mov
cwde
jmp
es
addr16
call
fidiv
jmp
out
sub
repnz
mov
fbstp
mov
mov
mov
mov
out
pop
in
addr16
js
ins
stc
push
xor
lods
movs
jnp
xchg
sub
out
push
repz
adc
fistp
shl
pop
pushf
loopne
pop
retf
push
scas
xchg
pop
and
mov
mov
mov
cmp
cmps
inc
or
cmp
push
xchg
mov
inc
xchg
xor
pop
stos
in
add
fdivr
shl
frstpm(287
stc
in
xchg
cmp
cmp
sub
sahf
das
add
xchg
in
ins
add
sub
retf
add
mov
rol
out
lods
cmps
repnz
push
clts
mov
xlat
sbb
aam
fild
ss
dec
call
cmp
pusha
adc
test
fisttp
add
rcl
call
or
(bad)
loopne
stos
jecxz
movs
and
xchg
dec
inc
lds
inc
dec
adc
mov
(bad)
leave
sbb
ror
mov
jmp
das
imul
mov
retf
cmp
cwde
ins
int
push
clc
test
adc
pop
xchg
pop
inc
fist
cmc
fs
in
nop
ret
or
sbb
xor
pop
imul
mov
ss
mov
test
sub
and
pop
add
sub
jmp
repnz
inc
std
inc
jb
inc
and
scas
fs
pop
retf
(bad)
cmp
enter
js
cmp
rcr
lock
ins
mov
push
out
xchg
repz
repnz
ret
add
ds
pop
sub
fsub
jmp
add
pop
mov
mov
shl
out
cmps
xchg
inc
mov
sub
sub
mov
jecxz
cmps
mov
call
repz
adc
inc
cmp
aaa
aas
pop
cmp
inc
sahf
jbe
mov
cli
nop
xor
movs
test
lods
adc
mov
inc
les
movs
push
push
mov
add
ins
cmp
ja
stc
imul
cmp
jmp
inc
jb
nop
aas
dec
shr
into
or
mov
xor
mov
dec
pop
lods
xor
repnz
jns
int3
and
mov
call
nop
cmp
xchg
jbe
add
pop
fsubr
in
ss
fild
add
imul
cwde
add
xchg
xchg
or
push
jns
and
mov
sbb
fstp
sbb
add
outs
cmp
sbb
lds
mov
push
jbe
out
push
fmul
sbb
stos
inc
inc
dec
cdq
jge
ja
push
addr16
lds
int3
rol
es
aaa
lea
(bad)
test
test
shl
sti
mov
inc
rcl
adc
xchg
add
push
inc
adc
cmp
shl
shl
xchg
lods
in
push
xor
leave
mov
push
sub
mov
xchg
push
sbb
pushf
inc
cdq
sub
stc
push
xor
mov
in
jmp
or
arpl
(bad)
jg
push
lahf
mov
adc
pop
cmp
inc
icebp
xor
jb
pop
into
int
pop
mov
in
jne
lahf
hlt
call
ss
and
xchg
xchg
or
inc
jp
jno
test
ror
das
mov
mov
cmps
inc
fwait
pop
push
ror
xchg
sub
mov
out
xor
sbb
mov
or
dec
hlt
call
lods
add
cmp
jg
icebp
dec
lea
push
leave
scas
jmp
test
fst
sahf
wrmsr
addr16
xchg
mov
repnz
daa
ins
mov
jle
jno
push
stos
push
sbb
je
lods
xchg
sub
out
das
not
cmp
push
imul
js
jmp
ret
cmc
adc
inc
cmp
hlt
add
rol
adc
mov
add
repnz
out
test
jmp
inc
sub
or
xchg
loopne
mov
and
mov
out
(bad)
mov
data16
stc
pop
loop
outs
xchg
call
es
into
xchg
and
pop
popf
cwde
clc
xchg
push
pop
mov
ins
sar
in
mov
fdivr
movs
cld
neg
xchg
inc
sbb
xor
xchg
add
aam
dec
clc
and
test
(bad)
enter
jp
and
scas
and
mov
call
lock
adc
fwait
loope
lods
(bad)
push
cmp
lods
lea
dec
sub
inc
dec
cwde
push
push
fisub
fisttp
movs
loopne
idiv
sub
mov
mov
sub
shl
mov
mov
cmp
scas
xor
inc
add
or
jae
mov
cld
mov
mov
loop
adc
jp
xor
cmp
xchg
pop
loop
out
and
sub
pop
mov
adc
add
aaa
and
adc
cli
fst
in
out
dec
fld
mov
enter
out
stos
sub
arpl
test
ret
adc
call
inc
add
movs
or
add
sbb
sub
arpl
adc
mov
inc
leave
pusha
shr
loop
add
fbld
jl
bound
sbb
lods
loopne
(bad)
sbb
pop
mov
mov
sub
mov
mov
std
sti
jns
jmp
mov
dec
fwait
out
std
mov
fcmovu
test
test
rol
mov
push
mov
push
ror
call
push
jb
arpl
jecxz
mov
xchg
mov
retf
popf
adc
enter
aas
or
mov
in
sub
aad
jo
jns
shr
mov
mov
adc
push
mov
pop
jle
cli
js
mov
jne
adc
mov
push
sub
xlat
or
mov
push
out
shl
mov
nop
push
lods
shl
inc
or
popf
in
mov
ss
fs
lea
repnz
retf
and
mov
fdiv
pusha
into
mov
ret
fcomp
xchg
jg
(bad)
in
rcr
imul
mov
int
je
pop
pusha
retf
jmp
or
or
cli
push
jmp
jns
pop
jnp
cmp
loopne
pop
mov
or
cmps
addr16
sub
cwde
push
push
loope
and
mov
sub
gs
sahf
xchg
sbb
dec
inc
outs
lds
lea
add
jne
sbb
pop
sbb
jmp
gs
push
adc
pusha
(bad)
jns
clc
sbb
ror
hlt
sahf
test
push
in
fiadd
call
mov
mov
jno
jbe
and
mov
inc
sbb
shl
xchg
dec
xchg
(bad)
out
rcr
lods
loopne
xor
xchg
fisttp
idiv
arpl
jae
jp
sahf
loopne
mov
sbb
push
les
stc
jno
add
jne
push
mov
push
jle
or
in
dec
lea
push
popf
add
in
sbb
cld
aam
lea
out
in
jge
jnp
cli
ret
xchg
adc
mov
sbb
shr
test
push
loope
popa
and
stc
mov
dec
lds
imul
pop
jb
nop
ja
mov
fs
jg
push
fstp
xchg
inc
lods
out
adc
idiv
(bad)
aas
loope
mov
mov
pop
lds
jo
ror
mov
cwde
mov
pop
in
inc
retf
fcomi
stc
mov
xor
(bad)
out
cmp
in
adc
mov
or
jl
inc
mov
mov
aam
ror
xor
ins
loop
mov
xor
fadd
clc
adc
mov
xchg
sar
cmps
scas
inc
xor
mov
jmp
js
dec
aas
movs
pop
test
sbb
mov
or
arpl
pop
ja
mov
jmp
imul
jae
cli
inc
les
fild
hlt
sbb
es
push
cmp
jbe
adc
(bad)
xchg
mov
push
xor
rol
mov
push
je
adc
dec
or
mov
out
jne
aad
inc
xor
mov
and
scas
scas
out
inc
xor
bnd
cmp
inc
dec
mov
adc
sub
lahf
lds
push
or
cwde
and
test
sbb
jae
cwde
mov
mov
int
cdq
mov
in
jmp
aaa
jmp
inc
xchg
repz
data16
dec
mov
not
or
cmp
ins
out
cmps
repnz
and
xchg
mov
loop
xchg
mov
sbb
xchg
mov
cwde
(bad)
clc
cs
sub
mov
sti
and
js
add
xchg
inc
sub
out
outs
(bad)
jle
and
pop
fcomp
dec
lock
fcomp
call
(bad)
fild
adc
les
sub
add
pop
jl
mov
sbb
out
inc
jl
sahf
push
shl
call
jle
(bad)
jne
push
pusha
mov
das
inc
adc
ins
fiadd
mov
dec
fld
fnstenv
(bad)
jmp
xor
cmc
lea
push
nop
pop
in
mov
sahf
cmc
and
icebp
jg
push
dec
dec
mov
mov
jae
repz
ins
imul
fwait
jne
outs
pop
aas
sbb
das
mov
inc
xchg
ror
push
jae
stos
jmp
pop
fdivr
lods
out
adc
and
mov
js
popf
icebp
add
pusha
mov
add
inc
cmc
and
xor
add
jo
leave
mov
in
shl
jecxz
sahf
sbb
pop
sar
lds
cpuid
mov
arpl
push
adc
xchg
mov
fisttp
jl
inc
add
movs
cmps
and
sub
loop
or
in
inc
push
cmp
inc
push
xor
push
or
mov
(bad)
adc
sbb
xor
stos
sbb
mov
jns
mov
adc
mov
pushf
stos
mov
out
adc
ins
lods
or
add
adc
adc
jecxz
and
mov
push
mov
(bad)
cmc
mov
inc
jns
inc
data16
dec
mov
scas
idiv
mov
sub
gs
jmp
jno
aam
std
mov
sub
out
mov
test
sbb
sub
xchg
mov
fucomi
out
adc
adc
xchg
aad
sub
aaa
sti
lea
shl
movs
sub
jecxz
pop
jg
push
sub
jnp
sbb
icebp
imul
mov
ret
bound
je
sub
(bad)
xor
mov
dec
adc
mov
pavgb
(bad)
dec
jmp
dec
fwait
ret
and
cmp
retf
test
mov
inc
xchg
int3
inc
fnsave
sbb
sub
je
mov
shr
push
cmps
push
fldenv
jne
sub
mov
test
cmp
push
inc
sbb
mov
popf
xchg
ds
inc
sbb
pop
dec
fisttp
lods
mov
(bad)
inc
sbb
xchg
lods
(bad)
cmp
test
fwait
pop
stos
ins
pop
adc
xor
ss
stc
or
bound
add
pop
in
sbb
sub
push
sahf
sahf
push
add
or
jnp
adc
popa
rcl
adc
rcl
ret
jmp
jo
or
scas
test
pop
add
cmp
push
iret
les
mov
ss
imul
out
inc
mov
fnstcw
sbb
fmul
add
fs
push
jne
stos
dec
sti
push
loop
push
test
in
test
ret
adc
fdiv
mov
mov
fs
sbb
jle
inc
test
retf
cmp
or
cli
push
out
je
sub
xchg
add
mov
push
out
(bad)
mov
add
fimul
das
mov
push
xor
cmp
add
or
sbb
push
pop
ret
push
add
push
mov
inc
add
pop
int
sbb
sti
xchg
pop
adc
mov
movs
sbb
loop
sub
cmp
in
rcl
and
jne
pop
push
jmp
jg
adc
dec
cmps
add
xlat
inc
adc
loop
(bad)
and
xor
push
fst
dec
ror
movs
data16
int
sbb
jne
inc
repnz
add
and
scas
sbb
mov
je
leave
and
jno
daa
mov
clc
push
retf
push
mov
movs
push
inc
(bad)
enter
cmp
ror
inc
mov
dec
mov
pop
sbb
push
sbb
xor
out
adc
sbb
mov
push
enter
xchg
mov
das
inc
sbb
and
or
pop
adc
add
addr16
inc
lock
ret
jp
mov
jmp
cmp
cwde
mov
push
loope
in
fldcw
sub
test
les
and
and
(bad)
aaa
mul
cmp
retf
or
mov
sub
pop
sub
sub
ds
ja
mov
cdq
pop
push
jns
add
sub
fmul
mov
sbb
xchg
sbb
hlt
and
sahf
hlt
aaa
bound
in
pop
or
adc
mov
xchg
ror
(bad)
jns
dec
out
movs
cmp
pusha
xchg
add
xchg
iret
mov
jg
sti
(bad)
xor
aad
mov
icebp
retf
nop
addr16
outs
jne
mov
adc
loopne
rol
out
iret
xchg
cmc
sub
sbb
fsub
mov
jmp
jmp
call
loope
dec
sbb
or
in
(bad)
imul
mov
stos
int
fcmovnu
shl
jmp
mov
inc
in
pop
mov
into
stos
fisubr
xor
imul
lea
repz
sub
cmc
push
lods
enter
adc
das
xchg
mov
ins
adc
cmc
cmp
jb
add
push
into
inc
outs
sub
sub
push
aam
mov
sar
sbb
dec
loope
xchg
ficomp
movs
js
ja
icebp
sub
shl
push
dec
loopne
push
jg
xchg
(bad)
cmp
(bad)
popa
add
mov
mov
jmp
jo
int
dec
xchg
fwait
icebp
adc
in
(bad)
inc
xlat
xchg
sbb
xlat
mov
cli
dec
int3
pop
xchg
dec
nop
jge
xlat
push
js
push
out
pushf
cs
add
test
and
mov
mov
inc
test
in
adc
cmp
cmc
push
or
mov
xchg
out
int
add
inc
cmp
jns
sbb
adc
lds
mov
loope
mov
adc
mov
sti
sub
daa
data16
xchg
(bad)
(bad)
out
adc
jns
jne
mov
repnz
into
push
pop
xchg
add
adc
mov
adc
dec
(bad)
mov
add
ret
dec
sbb
movs
test
push
pop
xchg
cdq
shr
scas
mov
push
test
mov
std
or
arpl
dec
cmc
fcomp
pop
outs
mov
push
sbb
or
add
sbb
test
jp
es
aaa
adc
call
jno
xor
loope
fisubr
mov
bsf
outs
(bad)
ins
jmp
scas
mov
sahf
mov
arpl
or
mov
test
daa
fsubr
test
pop
sbb
das
pusha
fcomp
dec
std
sub
mov
lods
and
pop
xor
xor
cld
jl
mov
jg
jne
mov
fst
call
call
out
ins
ret
ja
out
popa
cli
mov
outs
sub
dec
jg
popa
ficomp
sub
jo
pop
push
enter
test
inc
stos
pusha
(bad)
cmp
xchg
jmp
mov
repz
aad
xor
jo
adc
push
pushf
push
cmp
xchg
idiv
rcr
(bad)
cmp
test
(bad)
push
adc
mov
mov
mov
adc
pop
cmp
int
push
fs
leave
mov
sar
cmp
add
test
cli
pmaxsw
das
dec
mov
aas
jp
mov
fild
jmp
popf
stos
xchg
loopne
xchg
hlt
das
mov
addr16
in
inc
mov
ud0
jno
add
out
sub
mov
xchg
sub
and
fistp
hlt
test
mov
mov
popa
sub
call
pusha
add
fiadd
cmp
data16
iret
xchg
outs
shl
or
fdivr
fistp
into
push
or
repz
test
mov
mov
xor
mov
sti
scas
stc
repnz
div
pop
in
or
cld
push
adc
pop
and
test
jnp
xchg
or
fisub
cmc
cmp
mov
popa
or
test
neg
dec
out
mov
push
sbb
xchg
mov
(bad)
push
sub
mov
xchg
add
inc
and
dec
adc
test
pcmpeqd
adc
cmp
aam
xor
das
xchg
rcl
in
pop
dec
cmp
push
ins
dec
fwait
ins
sbb
in
adc
push
ja
aad
std
mov
cwde
(bad)
xor
stos
mov
push
out
out
xor
pushf
nop
imul
jmp
pushf
mov
dec
in
pop
retf
ror
cs
sbb
(bad)
dec
mov
jmp
in
xchg
pop
xchg
or
fisub
pusha
xchg
ds
mov
push
cdq
fs
push
mov
test
xchg
cld
outs
xchg
ror
xchg
jo
mov
and
or
push
es
add
pop
rcr
loop
mov
leave
ds
cmp
adc
push
aaa
ins
out
xor
call
sbb
cmp
push
sub
popa
or
fld
fabs
out
xor
out
cmps
push
test
add
inc
jo
push
stc
outs
dec
cmp
push
push
jbe
in
dec
push
mov
sub
mov
repz
push
xchg
imul
mul
test
sbb
cdq
icebp
cli
scas
push
inc
loope
and
xchg
cdq
fisub
cmp
pop
and
popf
dec
cwde
std
sar
pushf
js
sbb
jle
pop
sbb
push
pop
mov
cmps
stc
imul
mov
or
xlat
test
and
test
inc
fsubr
dec
test
out
shl
xor
rcr
mov
test
ds
int3
lods
ins
sub
pop
mov
(bad)
jnp
arpl
lock
pop
shl
jns
call
ins
jmp
cs
loope
rcr
repz
xchg
xchg
aaa
xchg
inc
mov
xor
call
in
xchg
xchg
sub
sub
xchg
cwde
jmp
push
gs
sbb
movs
je
push
nop
mov
sahf
pusha
imul
call
or
mov
jb
ret
sbb
or
sub
xchg
xchg
mov
ss
pop
call
repz
(bad)
mov
jbe
shr
jmp
aam
sub
aaa
in
mov
dec
inc
lods
cld
mov
mov
cdq
or
mov
and
(bad)
movs
cdq
add
xchg
clc
test
xor
test
call
lock
mov
pop
mov
popf
shl
fbstp
jae
(bad)
mov
dec
dec
enter
ret
fidivr
aam
sub
sub
jno
loope
cmc
push
into
imul
sub
add
enter
mov
pop
cld
inc
out
inc
inc
sub
cs
out
aas
into
pop
outs
add
dec
push
inc
mov
div
ret
mov
and
sbb
mov
unpcklps
arpl
sbb
fcom
push
mul
call
call
adc
mov
nop
sub
shr
xor
sbb
mov
mov
xor
inc
xor
push
xchg
jne
(bad)
pop
jmp
sti
or
xor
rcr
out
addr16
xchg
cmc
mov
out
scas
inc
ret
aaa
mov
es
pusha
sahf
out
ror
shr
jecxz
xchg
les
aam
push
sahf
xor
adc
sti
dec
sahf
xor
aad
mov
loopne
sar
jle
xchg
inc
push
bound
inc
mov
xor
fisttp
cwde
jmp
sbb
(bad)
jge
push
mov
out
mov
gs
pusha
or
mov
mov
pop
repnz
add
pop
push
jo
pop
adc
cmp
dec
pusha
loop
pop
test
push
retfw
cmp
cwde
add
and
xor
dec
xor
xchg
iret
fsubr
xchg
jmp
push
pop
mul
iret
(bad)
(bad)
test
add
add
mov
push
retf
sub
aaa
mov
hlt
inc
jbe
jle
cli
shl
fldenv
jno
cmp
and
add
add
sub
fidiv
jno
cs
aad
xchg
scas
test
adc
sub
(bad)
xchg
dec
jo
movs
popf
rcr
or
push
ss
stos
and
xchg
xor
xchg
bound
jmp
mov
hlt
mov
xor
dec
sbb
ret
pop
pop
les
sub
aad
fcomp
pop
sub
xor
mov
mov
rcr
push
call
mov
das
dec
cdq
in
add
mov
push
add
sbb
aam
cmp
test
int3
mov
fcomp
fs
aaa
mov
mov
pusha
and
xlat
in
fwait
jge
mov
bound
adc
dec
pop
fistp
(bad)
scas
inc
xchg
lahf
mov
outs
inc
sahf
clc
mov
push
xor
xchg
out
(bad)
sub
sahf
or
xor
(bad)
adc
mov
daa
sub
fisub
(bad)
stc
jnp
push
shr
sbb
nop
cld
pushf
popf
jl
push
mov
pop
aad
and
stos
fdivr
retf
or
jnp
mov
push
push
cmp
(bad)
imul
push
jo
xor
sub
lock
mov
xor
or
or
jg
push
xchg
adc
sbb
js
mov
xor
mov
sbb
shl
mov
sar
sar
arpl
pop
pop
ss
push
mov
add
jnp
xor
push
das
adc
cmp
rcr
(bad)
jl
add
in
or
pop
call
lods
xchg
mov
lods
dec
mov
mov
cmp
cmp
in
movs
mov
pop
mov
or
outs
or
and
test
cmp
stc
push
stos
dec
inc
inc
push
mov
adc
in
xchg
jecxz
cwde
push
fwait
leave
std
in
cmp
pusha
xchg
mov
xchg
leave
rol
in
test
int3
push
mov
xor
into
mov
outs
mov
sbb
dec
test
cmp
daa
aaa
push
or
sbb
mov
in
shr
pop
pusha
push
cmp
fcom
sbb
push
fdivp
jb
sbb
not
jg
je
stos
fcmovnb
loop
pop
pop
stos
or
int
mov
cmp
add
lea
or
jg
mov
cmp
mov
jbe
pop
and
xor
xor
mov
popf
jb
imul
or
loopne
pop
push
and
addr16
or
xor
js
iret
sbb
sbb
pushf
cmp
std
xchg
jae
dec
fs
ins
jmp
jg
repnz
add
fldenv
into
retf
aas
gs
test
cmp
sbb
ror
or
retf
hlt
sub
adc
jl
jmp
xchg
repnz
lock
xchg
push
rol
mov
int
mov
or
imul
pushf
mov
push
mov
and
fstp
jnp
xchg
(bad)
in
push
cmps
imul
pusha
inc
pop
pop
or
dec
loop
push
in
and
mov
jl
mov
jbe
fwait
or
sbb
cmp
or
ins
xchg
cmc
dec
mov
cwde
int3
in
cmp
cmp
ret
imul
sbb
jp
fxch
or
lock
or
sub
retf
push
aad
sbb
iret
sub
sbb
xor
pop
sub
out
bound
sub
dec
fild
sbb
sub
in
and
imul
lea
iret
mov
push
sub
mov
das
pop
mov
shl
ret
outs
pop
movs
push
test
sub
adc
outs
ins
or
shl
xchg
or
fnsave
imul
addr16
pop
xor
popa
sub
inc
jp
sbb
or
rcl
lock
add
jge
iret
add
mov
jecxz
dec
stos
(bad)
cmp
sbb
js
jmp
je
daa
cli
adc
xor
mov
bound
jg
das
iret
mov
stos
cmp
pop
clc
ja
fidivr
xchg
and
mov
(bad)
std
and
ret
ss
fsubr
pushf
lock
and
cdq
cmp
in
jmp
ins
js
fsubr
pusha
xor
mov
xchg
pop
xor
imul
sub
dec
stos
pop
(bad)
or
test
cmps
mov
ror
and
out
outs
dec
push
mov
(bad)
test
xlat
(bad)
int
repnz
imul
ja
jbe
add
mov
or
inc
outs
js
jl
in
loop
and
sahf
mov
loope
outs
in
in
push
enter
sar
cmp
shr
aas
xor
mov
test
inc
mov
outs
jmp
scas
int
call
push
fwait
pop
inc
push
mov
add
cmp
inc
popa
fs
ds
mov
sbb
stc
ss
mov
in
dec
(bad)
in
imul
sbb
shl
test
cmp
sbb
pop
pop
pop
imul
push
add
ds
test
jmp
sbb
push
call
leave
adc
sub
mov
cmp
loop
jae
lock
adc
sbb
xor
test
in
add
or
loop
push
hlt
mov
mov
push
push
jle
cmp
cmps
cmp
dec
js
and
mov
ins
cmp
cmp
mov
aam
sbb
test
push
cmps
repz
rol
inc
mov
fst
push
sbb
inc
das
push
cmp
sahf
idiv
ret
dec
pop
push
pusha
push
mov
in
scas
pop
mov
pop
icebp
hlt
xor
pop
in
push
sub
int3
xor
jns
dec
or
cmp
cdq
repnz
xor
cmp
inc
frstor
loop
push
dec
cmp
mov
out
sub
and
mov
mov
jmp
inc
pusha
fsubr
cmps
jp
nop
add
jno
or
add
repnz
ret
(bad)
ja
add
rol
dec
dec
or
xchg
lods
data16
dec
mov
aam
push
jge
inc
push
cmp
repz
pop
sbb
mov
cwde
mov
jbe
iret
ins
shl
arpl
pop
sbb
adc
lods
in
scas
mov
gs
inc
(bad)
fcomp
pop
xor
stos
add
xor
int3
or
int
mov
(bad)
sti
ja
jmp
mov
dec
aas
pushf
sub
or
cmps
cdq
movs
cmp
mov
cmp
and
add
mov
jmp
inc
add
xor
or
pop
ret
into
adc
xchg
adc
enter
mov
or
mov
mov
jnp
xchg
cld
lds
ss
(bad)
adc
mov
adc
adc
hlt
leave
pop
arpl
mov
mov
ret
aaa
pop
outs
ja
test
xchg
mov
js
repz
int3
shr
cmp
jl
sbb
mov
sub
pop
out
push
or
or
dec
repnz
test
xchg
leave
(bad)
test
retf
or
dec
pop
adc
repnz
mov
xchg
xor
and
mov
int
ret
rol
je
and
imul
adc
nop
or
jb
inc
push
dec
xor
in
mov
nop
push
ss
fld
in
adc
jo
mov
fcmovnbe
jno
add
ins
int
cmp
jmp
movs
push
in
and
ret
jb
daa
aaa
(bad)
aam
mov
aad
push
jmp
movs
mov
ret
xchg
call
loopne
or
test
ss
pushf
out
or
icebp
push
and
in
cmp
loop
stos
dec
jg
loope
pop
sahf
jne
mov
jecxz
rcl
out
inc
dec
xor
cmp
or
xchg
sbb
fidivr
push
out
mov
cs
push
shl
push
cdq
cwde
ss
sar
retf
shl
in
imul
aaa
jg
icebp
cdq
mov
push
xor
mov
cmps
mov
push
dec
and
or
push
push
or
(bad)
shr
dec
add
test
lods
xchg
icebp
add
neg
mov
dec
cwde
outs
js
test
xchg
mov
mov
fimul
cmp
mov
in
sbb
or
ss
mov
cdq
cmp
fmul
rol
neg
(bad)
adc
dec
jmp
hlt
(bad)
cmp
mov
sub
or
or
icebp
(bad)
mov
mov
call
mov
mov
pop
test
mov
push
aas
jo
or
stc
adc
push
xlat
cmc
jge
adc
std
dec
jae
or
movs
dec
call
bound
jmp
in
cmp
lods
inc
dec
popaw
scas
xor
and
cwde
push
xlat
jmp
lock
div
cmp
in
dec
mov
test
dec
jle
clc
sbb
ins
xor
jno
push
popf
test
cmp
aas
(bad)
pop
push
fs
push
and
clc
test
add
jmp
(bad)
mov
movs
test
mov
jae
add
mov
ret
addr16
xchg
push
cmp
mov
jmp
cli
cmp
xchg
mov
out
push
sbb
xchg
xor
popa
xchg
cmc
sub
ret
xchg
and
jmp
rol
fcomp
jle
adc
repz
hlt
inc
les
adc
daa
jmp
sbb
mov
aam
inc
xchg
jb
jbe
js
xor
mov
inc
sbb
sbb
fist
push
and
and
lea
jno
adc
mov
xchg
sub
(bad)
pop
and
or
pop
cdq
jp
add
pusha
xor
jb
daa
(bad)
jmp
(bad)
mov
cmpxchg8b
push
or
pop
push
pop
sahf
mov
xor
mov
push
jmp
xchg
aaa
add
sbb
fwait
jmp
pop
fist
mov
push
popf
mov
add
daa
sbb
lods
hlt
xor
jecxz
sub
push
xor
and
inc
push
stos
std
movs
cmp
and
push
sahf
imul
mov
jb
retf
xchg
pop
ss
cmps
jae
in
cld
adc
in
lahf
dec
retf
xchg
(bad)
fldcw
or
add
dec
adc
xchg
adc
xchg
push
jmp
push
jno
mov
cwde
mov
push
xor
and
mov
mov
bound
clc
das
into
enter
jb
mov
mov
push
lahf
push
push
mov
imul
dec
mov
std
mov
pop
dec
es
mov
mov
lahf
icebp
xchg
aad
outs
jo
loopne
xchg
les
pop
add
scas
lds
push
dec
jl
rol
sub
xor
cli
xor
rcr
push
cdq
in
xchg
aam
mov
or
call
(bad)
cmp
mov
inc
xchg
lahf
xchg
std
push
xor
cmps
ror
mov
adc
jo
lea
mov
cmp
push
mov
dec
sub
or
xchg
mov
xor
scas
std
inc
xchg
neg
retf
cwde
(bad)
cmp
cmc
out
xchg
inc
and
lock
sbb
mov
mov
sbb
loope
add
xor
dec
sub
iret
lea
cmp
push
daa
imul
add
jle
ins
or
or
aaa
adc
add
movs
or
cmp
pop
jno
cwde
pop
in
int
add
out
repnz
or
xor
test
pop
(bad)
shr
pop
and
mov
pop
scas
imul
repnz
rol
call
gs
and
dec
ins
adc
(bad)
in
pop
les
adc
cwde
push
in
cwde
mov
sbb
scas
movs
push
jmp
pop
in
scas
ds
ds
mov
test
addr16
fst
stc
xchg
add
xor
aad
lahf
icebp
sub
adc
dec
(bad)
je
xchg
mov
cmp
pop
mov
adc
mov
dec
mov
inc
je
pop
rol
jno
clc
push
cmp
xchg
sub
mov
add
loop
dec
push
mov
jmp
enter
push
out
mov
mov
jno
jne
nop
imul
ja
dec
xchg
std
xor
clc
mov
add
adc
test
mov
repz
dec
mov
xchg
push
or
out
pushf
adc
inc
mov
out
adc
aad
ins
enter
add
jns
(bad)
cmp
pop
push
fcmovnbe
lea
xor
arpl
mov
std
out
jge
xor
shl
int
fcmovnu
enter
xor
sub
mov
dec
test
retf
inc
fst
out
aad
inc
out
cs
dec
dec
(bad)
fimul
enter
xchg
cdq
and
cli
imul
(bad)
xor
sub
stos
sub
and
adc
inc
xchg
mov
pusha
mov
inc
xchg
repz
ins
retf
push
test
mov
cmps
push
push
xchg
xchg
jae
and
sub
daa
hlt
jae
call
ror
jae
je
imul
aas
push
or
mov
pop
fcmovnbe
jl
jno
rcl
aad
or
inc
cmp
adc
dec
mov
call
inc
sti
xchg
sbb
add
enter
mov
bound
or
adc
xchg
pop
pushf
mov
popf
mov
call
mov
pop
mov
mov
push
das
adc
adc
sub
enter
dec
int
stos
cmp
xchg
push
inc
cmp
jns
bound
shl
sub
push
mov
shr
mov
add
loopne
inc
sbb
inc
add
pop
add
inc
cmps
pop
jns
shl
mov
mov
fistp
daa
mov
jne
sbb
push
or
dec
rcr
sbb
jb
fsub
aad
sbb
leave
sub
ins
cld
mov
loopne
pop
movs
les
stos
js
ror
ja
mov
pop
out
nop
ret
ret
enter
loope
test
(bad)
adc
push
pop
adc
imul
cmps
clc
lods
std
jns
add
xchg
push
xor
dec
rcr
pushf
dec
aam
push
ror
sti
rcr
or
call
mov
push
aaa
aad
jno
add
cmps
and
adc
mov
cmp
in
mov
pop
fiadd
and
das
sbb
sahf
lahf
inc
inc
mov
push
add
adc
das
cld
stos
push
jnp
inc
mov
pop
sbb
(bad)
stos
cld
pop
imul
mov
jo
push
adc
jns
jge
jmp
(bad)
add
xlat
call
mov
adc
xchg
leave
rcr
add
rcr
jb
inc
pushf
test
sbb
test
sub
pop
dec
rcr
jne
sar
mov
cld
in
test
jge
fwait
or
(bad)
hlt
mov
mov
mov
xor
imul
cmp
out
lods
outs
push
push
mov
stos
out
addr16
jmp
jl
pop
sahf
pushf
aad
dec
mov
inc
aas
xor
sub
shr
pop
mov
pop
and
je
jg
xchg
int
daa
repz
rol
(bad)
(bad)
loopne
in
out
ror
push
test
sbb
pop
mov
add
push
mov
out
js
mov
mov
mov
mov
mul
jmp
pop
adc
sub
shl
sbb
cmps
(bad)
int3
xchg
iret
xor
sar
std
jmp
jmp
push
call
dec
xchg
or
dec
xor
and
sbb
xchg
js
call
aaa
stos
int
xor
out
jmp
cmp
(bad)
jl
pop
stos
and
inc
inc
jle
iret
dec
and
test
xlat
xchg
push
stos
push
jne
rcl
cmc
iret
cmp
cmp
imul
in
cdq
xor
lock
cmp
add
repz
in
xor
or
daa
loop
jmp
mov
jae
pop
jge
loope
test
das
(bad)
ret
pop
mov
into
lahf
mov
hlt
aaa
add
push
cmps
and
add
imul
fild
jmp
mov
inc
adc
cmp
aaa
shl
push
pop
cmc
aas
cmc
jecxz
jb
lods
xchg
xlat
hlt
mov
or
inc
pop
stos
mov
jnp
jne
jbe
add
loope
retf
and
sbb
cmp
bnd
mov
loopne
lods
ins
inc
ret
bound
xor
call
rol
adc
push
inc
(bad)
loope
loope
(bad)
jmp
mov
pop
mov
xchg
dec
push
sti
mov
jne
sub
scas
loopne
addr16
jnp
fsub
or
mov
sub
daa
or
pop
inc
in
push
adc
cmp
out
mov
fadd
dec
jne
add
addr16
xchg
idiv
movs
shr
or
les
cmps
pop
in
xchg
jnp
jl
loopne
outs
sti
sti
arpl
cmp
adc
mov
ss
jb
sbb
xchg
in
movs
sahf
call
fadd
dec
mov
mov
mov
call
inc
ficom
pop
lods
out
stos
imul
femms
iret
lods
adc
scas
jmp
jg
push
push
mov
ins
hlt
out
xchg
sbb
pop
out
push
gs
mov
repz
mov
sbb
in
out
popf
add
pop
push
sub
fist
(bad)
jo
mov
xor
cmp
sbb
fst
stos
js
sbb
fistp
repnz
call
mov
les
and
cmp
les
dec
jne
fcom
jg
ja
in
mov
cmp
loopne
jmp
or
repz
mov
fdiv
js
(bad)
jg
fnsave
mov
xor
sbb
hlt
into
call
retf
data16
jmp
mov
mov
stos
mov
lea
stos
cwde
leave
jmp
loopne
test
mov
inc
cmp
pop
cmp
jp
aam
cmps
mov
adc
outs
out
sbb
mov
pop
xchg
fild
push
in
mov
push
jae
xchg
jp
shl
nop
sub
pop
mov
into
cmp
cmp
add
jecxz
xchg
(bad)
sub
gs
mov
lds
sbb
jp
jle
loopne
push
mov
pushf
xlat
pop
push
ins
push
pop
fxch
loop
pusha
repz
stc
dec
sar
sahf
icebp
add
int
nop
cs
push
adc
adc
mov
and
or
jbe
jmp
inc
and
pop
in
inc
call
jecxz
pop
mov
xor
(bad)
xor
ins
mov
icebp
(bad)
in
xchg
ins
pop
(bad)
jge
out
adc
mov
inc
enter
add
push
(bad)
in
mov
ret
pop
pop
mov
cs
mov
and
jo
adc
fist
mov
cli
mov
movs
repz
jl
and
hlt
or
in
stos
mov
pushf
sub
adc
and
out
fs
sub
scas
inc
stos
pusha
gs
or
aas
push
stos
cmps
ja
sub
push
adc
mov
mov
dec
dec
ins
pop
mov
scas
push
bound
inc
repz
fcom
rcr
ss
mov
gs
imul
mov
mov
mov
xor
mov
jge
rcl
mov
rcl
mov
out
mov
outs
sbb
sbb
jno
sahf
sti
loopne
fdivr
xchg
push
pop
pop
or
hlt
scas
mov
test
pop
mov
or
push
xchg
popf
xchg
mov
mov
loopne
pop
sub
iret
push
cli
hlt
add
retf
cmovl
adc
sub
mov
and
dec
inc
jmp
sar
shl
(bad)
and
les
sub
and
sub
mov
xchg
sbb
pop
mov
pop
imul
shr
adc
push
push
cmp
pop
jnp
mov
dec
cmp
gs
sar
out
push
pusha
xchg
jns
mov
sahf
add
dec
sbb
mov
cdq
xchg
mov
dec
inc
cmp
push
and
arpl
movs
(bad)
aam
or
rcl
add
jb
add
mov
cli
dec
frstor
cmp
jmp
and
cmps
int
je
mov
xor
pop
adc
fimul
(bad)
mov
xor
aad
pop
xchg
daa
mov
sbb
mov
movs
int
or
lods
add
dec
pop
push
stos
cs
or
cld
lock
jne
dec
xchg
repnz
pop
not
loopne
xchg
mov
cmp
jl
cmp
shr
int
popf
adc
cmp
test
fld
add
lea
and
mov
in
repnz
out
inc
mov
test
stos
xchg
pop
clc
movs
test
fwait
scas
clc
mov
loopne
das
repz
lods
pusha
ins
loope
push
xor
pop
aaa
adc
outs
ss
lods
push
lods
in
call
pop
sbb
sbb
cmp
mov
xor
dec
sbb
adc
mov
and
lods
xchg
movs
jb
sbb
pop
xor
push
call
imul
hlt
inc
retf
test
shr
scas
test
in
jbe
popf
imul
jl
cmp
rcl
out
sub
cmps
call
rcl
or
shr
loop
out
or
dec
xchg
adc
mov
xchg
hlt
jae
jmp
push
or
mov
mov
ror
in
mov
adc
pop
test
mov
outs
mov
subps
xchg
cmps
pushf
cmp
xor
and
imul
int3
push
sub
mov
psubq
xchg
movs
rcr
and
clc
test
sub
sub
or
into
push
fldcw
mov
dec
js
rcr
pop
xchg
rcr
mov
jmp
push
mov
jo
scas
fldz
dec
xchg
shl
dec
mov
mov
je
pop
retf
sbb
or
mov
push
mov
inc
(bad)
or
call
push
push
jb
add
sbb
or
inc
retf
jl
out
dec
jg
jmp
cmps
fwait
mov
mov
jbe
jmp
ret
and
adc
js
sti
fiadd
cmp
mov
sti
fsubr
xor
or
ret
pop
xor
mov
jge
fisttp
jns
cmps
xor
mov
ins
mov
sbb
sbb
scas
(bad)
aas
sbb
mov
inc
xor
cdq
pop
arpl
or
mov
inc
inc
cmp
adc
jo
and
inc
push
aad
mov
into
ret
and
clc
popf
std
jge
add
fnstsw
push
pop
iret
xor
jge
xor
ss
add
xchg
jns
sub
bound
fcom
scas
dec
pop
ror
pop
mov
test
sub
or
out
js
fwait
(bad)
sbb
push
sub
mov
mov
jno
or
retf
xor
cmp
xor
inc
inc
clc
sub
mov
xor
mov
mov
lock
mov
and
sub
ret
cs
fmul
and
jmp
pop
jno
fsubr
cdq
dec
rcpps
cdq
leave
ret
add
and
nop
jge
shl
(bad)
and
xchg
outs
sbb
ins
movs
adc
es
dec
mov
aas
sub
push
movs
aam
push
fdivr
mov
and
cld
inc
repz
jbe
pushf
clc
call
sbb
cmps
mov
cmp
popf
test
pop
dec
mov
sub
call
or
icebp
mov
mov
pop
pop
jmp
stos
das
fsub
shl
pop
lock
cmp
scas
nop
cmp
dec
(bad)
movntq
out
jle
inc
popf
ja
sbb
sti
sub
in
cmp
(bad)
mov
jno
push
and
jne
pop
pop
pop
(bad)
bound
mov
hlt
adc
cmp
and
dec
stos
sub
dec
cmps
lsl
int
cmps
and
pop
scas
rol
bound
aam
stos
loopne
arpl
lds
sub
(bad)
movs
add
or
sub
mov
lea
inc
jmp
xchg
outs
add
mov
cmp
mov
shl
int
pushf
push
sub
xchg
push
data16
push
(bad)
(bad)
xor
aad
sub
mov
push
jl
cwde
mov
xchg
mov
rcl
(bad)
dec
sub
fsub
inc
leave
stos
retf
ror
test
dec
adc
movs
mul
fstp
aad
xor
dec
fs
cmp
xor
mov
and
nop
lock
sbb
pop
push
js
cli
jmp
(bad)
mov
pop
das
ins
smsw
stos
cs
loop
pop
jp
sub
stc
sub
rcl
mov
(bad)
jle
pop
mov
and
rcl
sub
jo
sbb
or
cli
sub
dec
xor
imul
mov
dec
mov
dec
lds
and
aam
(bad)
std
mov
dec
icebp
xchg
mov
iret
jl
lds
and
xchg
lods
neg
in
push
adc
and
into
movups
xchg
mov
dec
mov
mov
mov
xchg
mov
fsubr
bound
and
mov
out
cli
cmps
imul
mov
xor
mov
inc
mov
mov
push
test
cmp
jno
jb
jae
(bad)
aaa
(bad)
cli
or
jge
movs
sbb
movs
dec
imul
push
mov
enter
xchg
js
mov
add
add
in
mov
jb
xchg
pop
dec
pop
mov
ror
sti
pop
mov
in
adc
repz
pusha
aaa
or
rol
jl
sbb
aad
cmp
mov
(bad)
cmps
or
in
push
iret
lock
cmp
mov
shl
stos
stos
repnz
jmp
mov
mov
fbstp
mov
push
bound
inc
pop
cmps
mov
mov
(bad)
jge
mov
pop
loope
int
adc
test
inc
pop
cwde
lods
dec
xlat
dec
adc
dec
ins
out
or
das
dec
or
and
jge
mov
and
mov
pop
push
in
outs
jmp
out
and
gs
lds
out
mov
jmp
and
aas
idiv
cmp
cmp
stc
scas
(bad)
div
mov
lods
pop
pop
push
mov
push
retf
rcl
sub
mov
cmps
rcl
cmp
fistp
ins
xchg
pop
aas
pop
out
add
packuswb
repz
jle
adc
push
cli
jg
jl
fs
ins
cwde
jno
jnp
gs
sub
push
stc
push
popf
(bad)
(bad)
out
out
in
xor
add
loop
adc
daa
adc
add
arpl
dec
in
mov
lahf
gs
fisub
sub
push
loopne
pop
xchg
sti
js
xor
push
mov
movs
outs
jmp
fucomip
and
and
int3
or
mov
mov
repnz
dec
mov
sbb
sub
mov
dec
das
out
xor
pushw
and
fidivr
ss
jno
jnp
add
movs
mov
xchg
push
mov
dec
test
and
inc
lock
jg
xor
mov
lahf
xchg
sbb
lods
fucomi
stc
jb
push
fild
push
mov
jmp
jmp
out
pop
scas
sbb
mov
out
push
sbb
pop
push
mov
pop
ficomp
call
pop
mov
aam
(bad)
or
aad
or
fadd
outs
fdivr
push
mov
xor
sbb
(bad)
test
movs
dec
add
jmp
ffreep
sbb
push
push
and
xchg
in
mov
cmps
js
mov
(bad)
xlat
push
test
shl
rcl
sbb
and
xor
mov
lods
sbb
daa
inc
mov
dec
xlat
int
std
jnp
fcmovbe
aad
jmp
pop
call
outs
lock
bound
inc
mov
mov
pop
push
das
in
push
inc
(bad)
add
outs
xlat
retf
xor
cmc
jae
icebp
mov
iret
sub
sub
pop
sbb
ins
(bad)
test
adc
pop
paddq
add
aad
add
pop
sub
lea
hlt
adc
jp
out
adc
shl
loopne
std
shl
call
popf
cwde
popf
cmp
lahf
and
pop
adc
cmps
icebp
mov
inc
and
and
out
pop
das
mov
lds
stos
add
jge
push
les
in
std
push
push
mov
and
or
and
dec
mov
cmp
fsin
stos
mov
arpl
sub
aad
pop
jl
scas
clc
xor
cmp
int
aad
das
mov
jp
mov
shl
and
hlt
cmp
std
daa
enter
sbb
dec
sub
lds
jae
das
sahf
mov
ja
mov
test
imul
call
mov
push
push
lods
xor
imul
aas
xchg
pushf
ss
sbb
jmp
fst
adc
repz
mov
cmp
push
rcl
scas
call
pop
mov
iret
cmc
ret
arpl
data16
sub
jge
test
pop
adc
ss
imul
push
xlat
lods
xchg
test
movs
adc
retf
adc
xor
test
in
mov
ret
mov
(bad)
xchg
sub
lock
psubusb
imul
xor
xchg
mov
push
sar
dec
jp
dec
leave
es
inc
fadd
inc
das
in
inc
xchg
gs
sub
cmc
sahf
cmps
(bad)
mov
mov
mov
hlt
dec
inc
add
rcl
pusha
sub
xor
adc
cmps
jecxz
in
fdiv
jmp
inc
and
sbb
fmul
adc
ins
push
(bad)
mov
scas
jae
mov
push
mov
clc
add
jae
inc
jae
mov
imul
mov
cwde
mov
rol
addr16
jbe
mov
nop
(bad)
adc
cmp
pop
popa
fcmovnb
adc
pusha
pusha
shl
ds
cmp
sar
fld
fcomp
mov
push
out
xor
test
vmread
not
outs
retf
aaa
xchg
out
(bad)
adc
or
xchg
clc
cmc
loope
and
cmp
or
ffreep
sbb
sub
call
push
aad
outs
dec
xchg
loopne
pop
and
add
sbb
shl
dec
pop
mov
cld
sbb
(bad)
movs
imul
xchg
mov
mov
loopne
jle
mov
cmp
jae
pop
imul
push
(bad)
and
add
pop
int3
dec
inc
cmp
mov
cs
pop
data16
out
sub
add
lock
test
pop
lds
jnp
outs
mov
push
in
pop
mov
sti
clc
adc
mov
jbe
les
jp
pop
ret
in
lock
test
retf
lea
cdq
jbe
call
mov
mov
je
sbb
lods
sbb
pop
call
inc
neg
fwait
add
pop
mov
daa
inc
fadd
lock
das
mov
test
ret
cs
lods
call
lods
es
(bad)
das
adc
rol
test
les
mov
cld
jmp
dec
scas
dec
ins
mov
lea
xchg
ds
cwde
sbb
aas
bndldx
lds
ror
cwde
inc
loop
inc
push
inc
lock
mul
pop
out
int
push
imul
loope
mov
and
sbb
das
nop
stos
xor
(bad)
call
xchg
ret
dec
ror
jmp
adc
mov
hlt
pop
imul
stc
call
mov
sbb
arpl
xlat
into
ds
stos
mov
rcr
fwait
inc
xchg
cmc
scas
pop
into
push
inc
mov
sbb
test
push
fsubrp
or
int3
out
push
add
dec
enter
ror
jb
add
fisub
sbb
adc
in
and
sub
sahf
mov
sbb
cmp
jl
add
push
in
(bad)
or
fwait
cmc
xor
cmp
and
jnp
or
jg
jle
inc
inc
cs
or
and
inc
pop
push
xchg
cld
call
dec
nop
jno
es
loopne
daa
push
xor
ja
repnz
movs
jb
adc
ins
fs
pop
fwait
leave
xchg
xor
popa
push
cs
ret
inc
stc
inc
sbb
loope
push
shr
scas
test
push
fadd
push
mov
sbb
lea
or
push
fld
add
adc
and
sub
mov
or
popf
repnz
or
scas
lods
add
iret
jns
pusha
shl
popa
jg
dec
dec
nop
and
jmp
jle
iret
fs
xor
jle
repz
add
fistp
call
rol
movs
out
or
shl
std
sub
jmp
mov
xchg
fsub
dec
sub
mov
fistp
cs
mov
inc
(bad)
jo
push
pop
fs
mul
les
dec
xchg
cli
aam
(bad)
and
clc
aaa
scas
mov
lods
xchg
sub
jecxz
addr16
aaa
sbb
mov
inc
pop
mov
out
ficom
jp
pushf
mov
popa
icebp
les
and
sbb
mov
sbb
and
aaa
mov
scas
or
ror
clc
mov
mov
aad
pop
pop
int3
jo
aam
pushf
xor
jge
mov
mov
icebp
fwait
dec
loop
sub
mov
add
fcom
or
mov
jb
lock
push
les
jl
cs
mov
push
xlat
adc
inc
xor
inc
xor
ins
pop
sahf
scas
dec
pop
int
ror
xor
adc
inc
js
daa
loope
cmp
(bad)
stc
push
mov
sub
xchg
adc
add
int
sub
aas
inc
loope
adc
(bad)
iret
sub
test
mov
std
jbe
sub
fs
mov
xchg
push
imul
xor
and
mov
xchg
adc
cmp
xchg
les
push
out
scas
add
into
pop
sahf
jo
cmps
sub
adc
out
movs
pop
mov
int
mov
xchg
mov
mov
and
push
mov
fs
fwait
stos
in
dec
nop
int
sub
retf
sti
jb
rol
int
outs
add
xchg
pop
test
push
test
sub
les
sbb
pop
jmp
add
push
mov
nop
fdiv
inc
sbb
mov
int3
inc
pop
jno
retf
fwait
pushf
mov
out
jecxz
mov
dec
cmp
(bad)
ret
add
icebp
xchg
test
ffree
ss
xchg
je
inc
and
pushf
xlat
jmp
and
movs
stos
and
push
sub
pop
ss
scas
xchg
les
not
out
adc
sub
jmp
(bad)
aam
mov
neg
cmc
mov
cld
push
dec
or
xchg
adc
xchg
xlat
xchg
pop
stos
and
lea
loopne
mov
pop
in
fcmove
xchg
pop
and
enter
or
sbb
out
mov
jne
jae
scas
inc
(bad)
mov
mov
jmp
sbb
leave
or
dec
(bad)
jmp
sub
jmp
cmp
jl
jb
imul
in
aam
adc
pop
add
push
aam
inc
or
cmp
out
sti
out
mov
es
or
inc
or
outs
cmp
xlat
cmp
or
sub
cli
xor
daa
in
add
adc
or
hlt
pop
jnp
xchg
(bad)
jecxz
movs
shr
stos
popf
jle
repz
popa
fsub
xchg
jg
inc
xor
sbb
cli
icebp
jecxz
scas
mov
add
xchg
inc
mov
mov
adc
jae
fsubrp
into
or
addr16
pop
rcl
ins
sub
test
xchg
mov
pop
and
sti
add
xchg
xor
add
leave
test
mov
repnz
idiv
xchg
pop
loop
mov
push
(bad)
cmp
pop
dec
bound
xchg
sbb
sbb
(bad)
push
mov
lock
push
mov
outs
cmp
jnp
neg
add
cs
add
sbb
ret
sbb
jmp
sub
inc
push
pop
jp
lds
add
(bad)
fistp
add
dec
out
inc
ficomp
jmp
add
ja
mov
sub
cmp
inc
fild
mov
loop
inc
test
cli
repz
les
xchg
(bad)
sub
mov
sub
mov
sub
jg
xchg
out
push
cs
mov
pop
retf
dec
adc
test
repnz
dec
popa
aad
in
cs
cdq
(bad)
hlt
xchg
hlt
es
xor
add
shr
xor
add
push
mov
jno
ret
jg
test
mov
ret
and
mov
mov
xchg
mov
jl
out
int3
mov
push
inc
sahf
idiv
sbb
neg
adc
inc
js
xchg
or
in
xchg
mov
xor
and
sub
call
ins
loop
jl
push
xchg
out
sub
pop
mov
cmps
sbb
add
inc
push
push
(bad)
and
test
cli
pop
(bad)
push
ss
xor
xor
dec
fwait
ins
sbb
daa
inc
out
xor
loopne
hlt
inc
out
jl
lock
loope
adc
movs
mov
pop
xchg
in
sub
inc
xor
pop
sub
idiv
fst
push
mov
jo
ds
xchg
mov
aad
jno
repz
call
inc
fbld
cmc
fistp
mov
icebp
imul
sahf
fsincos
mov
retf
and
daa
and
mov
ss
lods
mov
push
aam
retf
mov
out
ins
sbb
or
pop
sub
ror
mov
and
push
xor
cmp
push
mov
leave
or
test
call
sahf
out
sti
mov
lock
into
pop
pop
or
loope
fidiv
das
mov
dec
dec
add
xor
xchg
fisttp
rol
imul
add
push
dec
cmps
push
cmp
test
ret
jae
and
nop
mov
jbe
addr16
or
mov
call
cs
mov
aas
mov
mov
fs
fsubr
stos
fidiv
add
aad
pop
mov
xchg
aad
sbb
jo
test
scas
std
mov
test
pop
ror
retf
icebp
popf
sbb
jno
pushf
retf
fcomp
xor
aam
mov
push
ja
cmp
inc
mov
jo
push
push
xchg
sub
sbb
loop
mov
std
jl
jno
mov
jae
ins
inc
mov
or
inc
inc
pushf
ins
cmps
je
repz
ja
mov
sub
push
xor
mov
rcr
or
retf
sbb
mov
mov
mov
retf
ficom
daa
pop
aaa
mov
jecxz
es
sbb
pop
sub
or
adc
xor
pushf
jl
scas
or
ins
repnz
lock
jmp
mov
cmp
dec
fnstsw
loope
shl
aad
xor
add
mov
add
nop
mov
nop
xchg
jp
lods
or
mov
jle
outs
(bad)
adc
sahf
xchg
in
xchg
or
mov
repnz
or
pop
push
hlt
jmp
mov
sbb
pop
xchg
jl
dec
and
bound
ds
(bad)
add
xor
pop
sub
mov
push
cmp
xor
jle
push
shl
ins
movs
in
lods
fisttp
sub
inc
(bad)
or
cmp
dec
fistp
aad
dec
inc
or
xor
or
xor
sbb
add
arpl
inc
sbb
push
lahf
loopne
scas
ficomp
ins
fs
jp
xchg
out
mov
add
and
or
icebp
cmp
mov
mov
aaa
xlat
jnp
ss
hlt
jp
mov
jns
sbb
mov
cli
out
out
adc
xchg
push
stc
div
call
(bad)
lock
jge
mov
std
sar
xchg
add
jecxz
(bad)
icebp
mov
rol
sbb
(bad)
nop
sbb
ror
add
sahf
mov
adc
mov
jmp
aaa
sub
dec
pop
mov
mov
adc
inc
xor
nop
ret
(bad)
cli
cwde
mov
out
xor
xor
in
xchg
mov
leave
lock
lds
mov
mov
sar
imul
jmp
jecxz
fdiv
push
inc
out
push
fs
(bad)
cs
js
push
iret
xchg
mov
ss
mov
xor
mov
mov
fimul
xchg
shr
adc
mov
in
inc
hlt
inc
sub
scas
pop
push
xchg
inc
cmps
mov
leave
in
aad
push
ins
jg
jecxz
xchg
fisubr
add
add
dec
outs
cli
addr16
and
popf
push
les
add
cwde
mov
in
mov
add
xor
fst
inc
lods
mov
js
mov
mov
add
data16
mov
sub
ins
jecxz
xchg
dec
loop
cli
je
pop
rol
mov
jnp
xor
movs
das
dec
and
ret
cmp
sbb
(bad)
cmp
js
sub
xor
mov
in
inc
addr16
pop
and
sbb
mov
mov
dec
xchg
sbb
rcr
cs
inc
xor
shl
xchg
and
pop
mov
into
imul
mov
pop
shr
ja
xor
or
bound
hlt
sub
or
adc
dec
loope
add
adc
mov
xchg
push
lods
aaa
mov
aas
popa
arpl
ds
retf
inc
in
add
xchg
std
fbstp
loop
cwde
add
sbb
mov
inc
ret
pop
xlat
sar
lahf
sbb
dec
mov
daa
arpl
mov
leave
pushf
add
iret
mov
in
out
sub
add
adc
pop
or
jle
and
xor
sbb
setge
sub
mov
pop
push
mov
dec
repz
bound
mov
repz
fmul
add
cmp
imul
call
out
push
(bad)
and
xchg
xor
repz
ins
loope
fistp
lods
push
mov
int
rcr
inc
push
push
and
out
jb
shl
fstp
cmp
sbb
imul
jae
ds
pop
jnp
push
xchg
rol
scas
mov
adc
fwait
push
jno
mov
ret
xchg
inc
pop
ret
xor
stos
jno
repz
adc
or
adc
mov
adc
jl
and
add
or
scas
fsub
add
jno
fiadd
(bad)
repnz
mov
imul
adc
ss
sub
push
div
cmp
je
aas
aaa
cmp
test
imul
adc
hlt
lods
sti
jne
push
daa
xor
sub
call
loop
adc
dec
mov
push
adc
cmc
and
xor
mov
jns
fwait
or
or
xchg
cs
mov
xor
out
add
or
mov
dec
xor
inc
mov
dec
ficomp
add
lock
shl
mov
js
push
inc
in
xchg
jmp
dec
pusha
(bad)
xchg
cmp
dec
mov
call
repz
pop
sub
fwait
outs
scas
dec
jecxz
pop
mov
out
jae
or
fist
lods
mov
or
push
int
ja
xchg
cmps
inc
mov
dec
lea
pop
jbe
pop
jg
rcr
rcr
out
aad
mov
mov
mov
sbb
bound
out
lahf
enter
enter
push
outs
mov
(bad)
(bad)
and
jne
(bad)
fnstsw
xchg
pop
xchg
aas
xchg
popa
push
mov
and
pop
pop
add
inc
fdiv
jo
mov
fwait
iret
jo
dec
inc
test
stos
inc
jecxz
cmp
popa
js
jl
sar
cdq
fsub
mov
push
rcl
push
mov
fdivrp
test
jae
or
xchg
mov
adc
arpl
inc
imul
jns
jns
pop
sub
stos
test
xor
cli
fwait
and
in
pop
add
push
push
add
mov
dec
push
popa
ins
daa
pop
cld
xchg
and
push
jge
cmp
mov
adc
mov
sbb
adc
sti
sub
pop
jl
out
pop
daa
repz
sub
mov
mov
push
jno
fnsave
cmp
enter
or
loope
add
adc
je
ds
pop
popf
or
repz
sbb
movs
mov
mov
sti
sbb
pop
(bad)
ja
fdivr
mov
push
(bad)
pop
test
mov
jno
dec
xlat
mov
aam
int
xchg
or
dec
add
pop
mov
in
imul
pop
xchg
push
in
(bad)
cdq
jp
in
mov
jae
mov
and
ja
jne
sub
lahf
push
push
js
clc
gs
or
in
aas
push
or
fst
js
add
push
call
shl
pop
pop
dec
mov
js
movs
cs
retf
ficomp
mov
or
sbb
xor
ins
lods
sub
mov
xor
inc
js
or
cmp
nop
sub
sub
cli
push
xor
(bad)
fucomi
loopne
sub
dec
xchg
in
dec
(bad)
frstor
outs
loopne
mov
xchg
fsubp
mov
es
lahf
push
cmps
adc
xor
mov
dec
inc
ja
mov
in
stc
sar
mov
and
adc
jecxz
adc
nop
mov
pusha
imul
sahf
shr
jle
test
lahf
xor
ja
(bad)
out
inc
int3
sbb
add
push
adc
add
adc
mov
dec
mov
mov
sbb
push
xchg
stos
push
stos
cmp
cmp
(bad)
pop
adc
push
(bad)
push
in
ret
enter
call
test
add
mov
pop
adc
(bad)
xor
jmp
sbb
jmp
jae
xor
add
mov
(bad)
shl
dec
mov
sahf
ja
jge
rol
mov
sub
(bad)
hlt
(bad)
cmc
add
adc
and
mov
pop
loop
sti
mov
and
dec
jb
sbb
std
xor
ror
jmp
movd
cmp
lods
mov
rol
or
mov
(bad)
out
mov
sub
fdiv
(bad)
xor
std
lea
adc
mov
shr
push
(bad)
pop
cli
aam
or
test
mov
mov
jecxz
mov
dec
test
fiadd
fstp
shl
popf
stc
adc
xchg
aad
mov
int
nop
loope
push
and
adc
mov
es
cmp
je
dec
push
and
pusha
jg
sub
cmc
cld
in
dec
mov
rol
inc
mov
adc
(bad)
push
xchg
icebp
test
push
xor
and
scas
gs
xor
(bad)
cdq
mov
test
mov
cmps
imul
leave
lahf
imul
pop
out
fld
(bad)
mov
fs
out
mov
ins
add
dec
xchg
fmul
aas
push
mov
mov
(bad)
xchg
pop
dec
shl
lahf
and
les
jmp
sar
sar
push
mov
mov
test
cs
and
inc
(bad)
lods
sub
retf
cmp
add
sub
sbb
jnp
cmp
sub
mov
cs
sub
icebp
and
ss
jb
rol
js
xor
cs
cwde
cmp
mov
cmp
leave
sbb
xchg
adc
or
and
fistp
lea
jae
pop
push
jne
imul
sub
nop
out
or
scas
jge
inc
jg
out
lds
xor
mov
out
and
(bad)
cmps
es
ds
nop
jge
xchg
jb
enter
rcl
loope
and
movs
pop
mov
inc
arpl
xor
in
and
pop
sbb
jns
and
mov
inc
push
push
xchg
cmc
dec
outs
cld
clc
mov
ds
fstp
xor
push
jmp
imul
adc
ja
sbb
leave
mov
push
pop
mov
mov
rcr
shl
test
ss
fsub
jo
mov
xchg
pop
daa
shr
sub
adc
int
inc
dec
or
jle
push
aad
cmovp
clc
rcr
(bad)
fnclex
ins
pop
inc
rcr
xchg
out
adc
push
xchg
dec
loope
push
ret
add
add
sub
adc
jle
adc
pop
aad
inc
mov
mov
xor
and
xor
mov
dec
dec
ficomp
(bad)
out
sbb
xchg
jnp
lods
mov
int
aam
movs
cmc
scas
jb
sub
bound
adc
in
xor
xor
popa
xchg
dec
mov
pusha
mov
mov
mov
push
jnp
xchg
imul
sbb
lds
outs
imul
jb
lods
fdivr
mov
mov
push
cmp
loopne
jmp
out
add
xor
xchg
xchg
addr16
aad
mov
mov
inc
mov
mov
fadd
(bad)
sub
add
xchg
shl
imul
mov
call
sar
pop
loop
into
imul
inc
aas
sar
and
jmp
in
sub
dec
lods
std
jmp
inc
cli
pop
cmovs
pop
adc
jne
mov
sbb
push
inc
(bad)
and
ins
pop
or
mov
push
and
xor
add
daa
or
jno
jne
adc
push
mov
test
dec
jne
push
cmp
into
out
in
cmp
cld
scas
and
pop
jns
cli
enter
dec
cmps
pop
cmps
cmc
and
clc
shl
cmp
jge
stos
jbe
jmp
arpl
mov
and
mov
dec
arpl
cld
jge
jnp
cmp
add
dec
into
fist
or
(bad)
mov
sub
xlat
sub
loope
pop
sub
loopne
dec
ret
jmp
dec
pop
sub
push
jecxz
std
sub
aad
push
sbb
clc
or
ror
push
xchg
mov
add
xor
xor
push
std
mov
aad
lds
in
xchg
cmp
mov
cmp
or
retf
popa
ds
ja
popf
stos
ret
mov
xchg
leave
bound
dec
or
xchg
xchg
push
mov
push
lods
xchg
bound
hlt
jl
lock
scas
dec
cmc
mov
retf
fmul
and
popa
push
inc
clc
inc
mov
push
mov
push
aas
jo
pop
sbb
es
jb
mov
jno
mov
aad
test
(bad)
cmp
mov
in
xor
retf
adc
sbb
adc
mov
cmp
(bad)
sbb
jo
push
ins
jmp
das
pop
repz
jbe
test
push
sub
xchg
sbb
icebp
or
dec
enter
pmuludq
fdivr
shl
test
test
mov
stos
pop
xchg
sub
lea
out
xor
retf
pop
nop
mov
pushf
repz
ins
or
ja
iret
sbb
ss
or
inc
sbb
fdivr
test
or
or
aad
imul
sub
push
jle
and
cmp
push
sub
fs
js
mov
xchg
adc
idiv
sub
and
ins
aam
jg
pusha
repz
push
jmp
int
gs
xchg
add
inc
jp
loop
enter
push
mov
outs
cmp
movs
(bad)
addr16
(bad)
mov
mov
aaa
push
mov
and
mov
and
fstp
push
sub
pop
aad
mov
jmp
mov
mov
mov
jno
inc
jmp
pop
cmps
lods
retf
jne
ret
(bad)
clc
cdq
cmp
add
idiv
out
and
push
test
test
out
cdq
out
dec
pop
loop
scas
xchg
mov
push
or
xor
dec
sar
jg
ror
lahf
sbb
test
adc
(bad)
jp
dec
daa
and
test
sbb
js
call
(bad)
and
(bad)
xchg
lea
shl
xor
lds
call
cmp
or
mov
stos
jl
in
lea
inc
inc
jge
mov
or
sub
xchg
cli
push
mov
or
push
and
jns
sbb
inc
cld
call
sub
inc
cdq
xor
int3
lea
imul
and
aas
mov
rol
sbb
sub
mov
sbb
fdiv
out
mov
add
test
mov
movs
cmps
in
in
mov
inc
in
imul
fiadd
je
jp
cmp
xchg
mov
fcmove
pop
mov
in
lea
jbe
call
push
enter
fs
cmp
and
jmp
retf
pushf
lar
xor
sbb
shr
and
mov
adc
inc
xchg
add
shr
call
aas
or
adc
mov
jo
cmp
adc
jge
xor
(bad)
push
movs
loopne
cmps
mov
into
call
popf
mov
pop
ret
xchg
xor
leave
ficomp
mov
fisttp
mov
mov
dec
push
popf
cdq
mov
xor
or
lahf
jne
das
stos
inc
repz
xor
int
mul
add
mov
ds
xor
lods
sbb
mov
adc
and
xor
mov
int
mov
jl
add
xchg
cmp
jle
dec
inc
nop
inc
lods
push
fistp
das
rcr
sar
mov
(bad)
scas
stos
inc
and
mov
stos
sbb
sub
in
dec
dec
ret
cmp
mov
inc
push
(bad)
js
stc
das
enter
dec
in
push
test
(bad)
mov
add
add
popa
rcr
daa
ret
cmp
daa
sub
cdq
add
imul
retf
(bad)
mov
adc
xor
mov
jmp
mov
arpl
int3
sub
or
push
jecxz
pop
xlat
shl
jp
push
add
mov
mov
xchg
int
js
xchg
inc
jge
jecxz
ror
aas
lea
je
adc
xchg
mov
sub
repnz
push
fs
aam
or
pop
mov
cmp
xchg
adc
scas
(bad)
mov
dec
adc
xchg
scas
inc
mov
out
push
push
frstor
mov
push
jl
xchg
loopne
and
jg
mov
jns
loope
cmps
hlt
pusha
push
mov
sbb
icebp
cmp
and
sbb
pushf
sti
mov
xchg
rcr
cmp
cmp
out
and
xchg
retf
test
sub
mov
cmp
sbb
jne
add
ret
adc
ins
adc
clc
sbb
dec
mov
xchg
sub
out
retf
ins
aaa
sub
jp
push
retf
mov
rcr
in
call
jmp
iret
xor
into
pop
add
dec
clc
rcl
(bad)
maskmovq
movs
leave
sbb
mov
cmp
add
int3
xchg
mov
das
jb
push
pushf
mov
jmp
aad
dec
loop
dec
mov
ins
cmps
push
repnz
add
and
xor
test
mov
fs
xchg
jae
sub
loop
inc
test
xor
inc
add
loopne
repnz
cwde
mov
pop
dec
stos
test
pop
cmp
adc
mov
jg
dec
or
into
pop
dec
inc
mov
xor
std
pop
mov
test
repnz
jno
and
sbb
inc
(bad)
push
sbb
daa
test
cmps
push
xchg
jle
add
int3
add
in
xchg
mov
xchg
xchg
pop
pusha
cli
out
xor
cmps
popa
sub
mov
jg
call
lahf
jnp
xor
in
jmp
es
dec
and
shl
retf
jae
loopne
leave
cdq
and
in
popf
clc
cdq
pop
dec
(bad)
and
sbb
lods
sub
add
popa
xchg
(bad)
cmps
int3
lods
dec
or
jecxz
mov
push
dec
retf
fldenv
mov
repnz
(bad)
out
popf
dec
loop
sar
cmp
cmp
test
test
jmp
(bad)
in
mov
inc
test
adc
mov
dec
std
int
mov
aam
add
gs
in
out
jge
mov
mov
adc
jge
pop
inc
int3
js
aas
mov
inc
es
adc
sbb
mov
mov
imul
fld
sub
pop
(bad)
sbb
jae
aad
lods
rcr
push
cmp
mov
movs
ret
sub
movs
or
sbb
dec
mov
or
call
sub
pop
es
cmc
mov
fisttp
xchg
mov
xor
xchg
daa
aad
push
cwde
pop
icebp
mov
ja
push
mov
mov
bound
popa
adc
int
(bad)
aaa
jne
adc
ret
repz
xor
mov
(bad)
dec
cld
mov
rcr
js
add
cwde
js
test
sub
sbb
push
mov
push
jne
in
add
(bad)
loop
fwait
lods
retf
ja
or
outs
cs
fst
mov
sub
dec
xor
test
and
jmp
arpl
xchg
dec
aad
add
xor
loop
or
push
push
or
test
loopne
sub
pop
je
int3
mov
imul
push
sar
fsubr
aad
mov
cld
lods
and
jnp
lods
sbb
inc
mov
xchg
sbb
and
add
pop
mov
enter
cmps
dec
mov
push
pop
cmp
nop
dec
icebp
(bad)
retf
or
mov
test
fbld
fimul
push
mov
shl
dec
rcr
push
loope
or
cmp
addr16
pusha
cmps
inc
mov
dec
mov
jg
addr16
outs
adc
push
arpl
mov
sub
push
xor
dec
stc
add
pop
or
(bad)
push
jno
dec
sbb
sbb
test
rcr
jmp
or
push
sub
adc
mov
push
(bad)
xchg
xor
cwde
icebp
pop
ins
pushf
xor
mov
fld
inc
outs
and
(bad)
pop
dec
mov
jnp
sbb
outs
pop
and
gs
pop
or
jno
repz
imul
push
jb
adc
movs
dec
sub
js
stos
xchg
cs
loopne
(bad)
push
imul
fcmove
test
cmp
mov
rol
int3
cmp
outs
fs
jmp
mov
xchg
jl
adc
lods
xor
ja
sub
sbb
add
xor
ins
pop
mov
sub
pop
sub
push
push
lds
out
or
in
push
and
pop
mov
jnp
pmulhuw
stos
arpl
push
ja
sbb
stc
fild
jbe
mov
(bad)
fnsave
pop
rcl
xor
push
daa
(bad)
rcl
fmul
scas
pop
mov
dec
push
sahf
ds
stc
jl
and
int
pop
mov
fs
adc
adc
in
and
jmp
push
mov
inc
clc
sub
mov
adc
div
mov
loope
dec
aad
std
add
jnp
or
adc
stc
jo
jl
cmps
pop
inc
out
or
mov
stc
pop
loop
mov
push
jmp
nop
movs
and
fisubr
fs
sbb
pop
dec
sbb
pop
xor
cmp
add
cmp
mov
inc
mov
inc
adc
or
in
push
cmps
adc
add
aam
retf
fld
cmc
push
sahf
jno
push
shl
pop
xor
mov
jae
cld
in
leave
lds
icebp
pop
mov
out
inc
call
dec
imul
movs
outs
push
mov
fdivrp
mov
cld
jno
cmps
sub
clc
push
movs
movs
dec
push
adc
(bad)
push
call
dec
add
iret
jmp
out
mov
shl
loope
push
jmp
jle
inc
inc
das
or
inc
(bad)
pop
xchg
pop
cmp
ror
ror
push
xor
push
faddp
cli
or
pop
ds
dec
xor
and
inc
fidivr
inc
xchg
repz
pop
fnstcw
addr16
mov
pop
push
lods
mov
mov
les
cmp
and
push
(bad)
pusha
cdq
sahf
xor
daa
ret
ret
mov
outs
fistp
jno
outs
or
neg
mov
or
and
div
jns
ins
xor
xchg
ins
cli
xor
scas
and
adc
push
scas
sbb
pop
jecxz
ins
xchg
cmp
mov
mov
xchg
mov
outs
inc
es
xchg
jg
mov
dec
mov
dec
pop
cmp
add
ds
sti
lahf
push
rol
dec
push
je
sbb
std
mov
sbb
mov
loopne
and
bound
test
pushf
pop
sub
adc
add
adc
xchg
pop
jecxz
mov
cli
push
adc
adc
cmp
mov
xor
jg
iret
sbb
sub
daa
sub
movs
jecxz
pop
cmp
sahf
dec
jno
ins
xchg
loope
mov
xchg
mov
mov
call
mov
adc
rcl
xchg
mov
jnp
loopne
jmp
fwait
int
cdq
dec
mov
push
push
inc
jge
cld
xchg
xor
or
adc
shl
rcr
sbb
stos
test
sub
push
sbb
xchg
test
mov
fwait
push
icebp
push
cmc
xor
xlat
inc
imul
outs
jp
or
and
(bad)
ins
stos
das
push
dec
push
sub
sub
sub
stc
sbb
ins
fisub
xchg
adc
les
add
out
test
cli
dec
mov
and
mov
or
rcr
inc
pop
out
xchg
mov
jmp
stos
push
pop
les
mov
sub
shr
mov
push
aas
dec
(bad)
cmp
shl
pop
push
outs
adc
add
or
ins
inc
xchg
or
test
lahf
jmp
pop
adc
out
mov
cmp
test
sub
dec
mov
inc
out
ror
push
sub
movs
jmp
mov
rol
push
sbb
jmp
mov
mov
pusha
xchg
in
movs
push
hlt
add
mov
out
xchg
or
mov
push
add
cmps
aam
cli
cld
xchg
adc
add
lock
clc
bound
sbb
bound
aas
fidivr
sub
fimul
push
adc
or
imul
mov
inc
cmps
out
pop
aas
xor
mov
or
sti
or
xor
std
fdivr
lods
fs
sbb
iret
das
or
lahf
or
clc
fdivr
xchg
or
or
xor
dec
daa
push
out
fsubp
jns
es
mov
dec
retf
or
inc
mov
lods
cli
les
es
mov
outs
imul
dec
jmp
je
xrelease
and
rol
fcomip
mov
add
popf
xor
add
cmc
(bad)
sub
fstp
fld
das
cdq
inc
(bad)
pop
push
retf
pop
and
std
shr
lock
fnstcw
rol
daa
dec
cmc
imul
(bad)
call
sar
mov
sub
cmc
ins
adc
dec
or
mov
and
mov
or
sbb
push
dec
inc
ret
jnp
jmp
cmp
add
mov
jge
retf
add
movs
xor
lahf
xchg
mov
mov
out
add
pop
cdq
or
mov
mov
sbb
sub
int3
mov
scas
inc
scas
gs
jle
lahf
xchg
sti
cmp
arpl
dec
dec
add
addr16
stc
xor
mov
int
mov
(bad)
pop
pushf
nop
xchg
mov
das
xchg
push
lahf
or
jnp
out
call
mov
movs
into
int
pop
in
dec
sbb
inc
push
icebp
inc
jge
icebp
sbb
cmps
pop
mov
inc
je
call
out
mov
scas
mov
ds
sbb
add
dec
adc
mov
xchg
ja
and
sub
or
das
(bad)
aam
out
add
jmp
mov
pop
outs
pop
mov
mov
push
cli
fisttp
dec
inc
mov
jne
fnstcw
inc
cli
test
mov
call
ret
sbb
mov
imul
mov
adc
adc
push
repnz
jle
mov
push
cmp
dec
or
jle
call
push
stc
inc
jae
in
mov
sbb
aas
sub
gs
jmp
dec
shr
ficomp
mov
xchg
pop
dec
dec
nop
or
out
rcl
sbb
jmp
loop
add
push
int3
inc
sar
jno
aad
scas
lods
(bad)
into
mul
aaa
(bad)
ins
pop
jg
ret
(bad)
mov
inc
ja
add
fadd
or
sub
inc
xor
cmp
repz
fldenv
imul
mov
dec
inc
aad
cld
xchg
inc
or
pop
aaa
stc
bound
out
mov
jmp
inc
test
sub
test
xor
inc
js
aaa
mov
movs
push
stos
adc
imul
lahf
sbb
sahf
lea
add
mov
mov
call
out
loopne
outs
imul
mov
mov
jle
int
hlt
les
sbb
xchg
jns
(bad)
mov
ins
outs
retf
and
movs
jne
sub
pop
ins
nop
popf
dec
adc
pop
adc
xchg
mov
lds
lock
jo
scas
cmp
into
cli
pop
out
mov
(bad)
div
(bad)
icebp
push
ins
ja
mov
fcom
bound
bound
xor
inc
addr16
shl
and
or
push
sbb
test
dec
mov
cmps
push
pop
sub
movs
or
jecxz
clc
(bad)
mov
mov
outs
xor
stos
jmp
mov
daa
cmp
mov
cmp
jo
scas
or
int
js
adc
sbb
adc
xor
mov
in
mov
dec
loop
fidivr
xchg
xor
aad
ret
mov
sbb
add
push
and
cmps
or
jns
sahf
std
ret
(bad)
pop
loopne
fdiv
and
adc
dec
add
cmp
movs
jg
jne
inc
imul
dec
fst
fsubp
jmp
cmp
cmp
push
jecxz
and
xchg
sbb
xor
fwait
sub
mov
call
and
int
scas
repnz
test
dec
mov
jl
xchg
inc
mov
addr16
ins
jns
scas
lock
and
ins
mov
pop
mov
je
outs
sbb
rol
jecxz
cld
xlat
fbld
jle
and
dec
fs
add
mov
mov
mov
pop
xor
cmps
xor
scas
cmps
mov
or
lahf
int3
in
fnsave
rcr
jbe
mov
jnp
pop
cmp
and
inc
in
push
mov
xchg
aad
cli
imul
xchg
or
ret
cmp
icebp
cmp
lahf
mov
sub
jae
mov
(bad)
jle
sbb
lahf
mov
pushf
push
jne
scas
xchg
cmp
mov
loop
or
(bad)
imul
mov
push
imul
mov
(bad)
jle
outs
iret
cmc
adc
adc
scas
push
aas
or
cdq
sbb
mov
sub
jae
dec
xchg
mov
fs
inc
setnp
xor
lods
gs
jb
add
mov
ss
into
fisub
adc
test
stc
sub
fcmovb
in
imul
bound
cmp
push
aas
rol
push
(bad)
aaa
imul
repz
xor
(bad)
hlt
jbe
sbb
mov
xor
(bad)
cmp
stc
outs
push
fst
fs
dec
in
aad
enter
lahf
in
shl
(bad)
cwde
test
mov
cs
sub
mov
movs
iret
sti
test
pusha
fwait
test
xchg
xor
lahf
ret
add
mov
rol
cs
int
mov
adc
cmc
(bad)
lods
stc
jbe
hlt
push
mov
xor
cmps
push
add
es
jg
fdivr
aaa
shr
icebp
nop
jo
pop
xor
out
addr16
popa
add
test
mov
cs
xlat
pop
repnz
lahf
fcom
iret
iret
pop
mov
mov
push
retf
ds
push
jbe
cmp
add
out
std
call
test
out
jo
sub
jmp
es
sub
aas
iret
mov
jns
cmps
cdq
aad
je
lahf
ror
ins
dec
mov
jno
add
sub
jl
add
push
test
inc
stc
ret
jle
and
dec
stos
inc
aaa
cmp
cmc
xchg
out
imul
adc
sbb
ret
and
and
dec
push
mov
sahf
or
xor
stc
push
je
mov
push
sub
(bad)
fs
push
and
jmp
push
and
test
dec
push
hlt
jns
mov
jne
mov
test
popf
mov
(bad)
out
aam
addr16
cdq
jp
loope
pop
adc
add
adc
sub
outs
in
pop
jg
mov
jnp
pop
sub
push
mov
cmps
or
xchg
cli
jnp
(bad)
cmc
call
mov
mov
push
pop
and
xchg
adc
inc
into
jnp
aaa
xor
es
xchg
pop
scas
xchg
lds
sahf
dec
add
cmp
push
movs
sub
mov
ret
packuswb
mov
mov
je
cmp
retf
js
jbe
or
inc
mov
mov
not
lds
lods
out
cmp
ror
and
push
jle
sbb
mov
rcr
xchg
enter
mov
inc
aaa
ds
mov
mov
and
inc
xchg
(bad)
not
xchg
push
outs
into
or
cdq
stc
or
mov
jmp
lahf
ret
stc
movs
loopne
sub
sub
std
inc
pop
scas
mov
lea
fs
call
pop
pop
leave
out
and
ins
scas
jecxz
xchg
popf
push
rcl
mov
jmp
in
pushf
mov
in
lods
sar
dec
push
imul
push
fnsave
and
mov
dec
sub
out
mov
retf
pop
fistp
push
adc
xor
inc
push
adc
sti
repz
jg
js
xchg
dec
sbb
fisttp
mov
mov
push
push
and
cmc
cwde
pop
push
and
dec
jnp
idiv
fidivr
sub
lahf
dec
xchg
call
dec
les
lahf
inc
sub
or
clc
lea
cmp
iret
mov
out
add
repz
push
dec
pop
sbb
mov
cmp
test
test
adc
lds
xor
jmp
ror
adc
shl
addr16
fistp
pop
xor
lock
push
outs
lea
sbb
mov
mov
gs
inc
xor
jbe
dec
scas
daa
fbld
sub
sbb
pop
jmp
out
mov
retf
repnz
clc
sbb
(bad)
jnp
out
ss
xchg
or
(bad)
cmp
cmp
ds
or
fist
movs
fstp
mov
(bad)
lods
fiadd
xchg
mov
call
fs
mov
aaa
xchg
push
mov
in
repnz
movs
jne
xor
and
addr16
mov
sub
adc
iret
sbb
fist
das
sti
jle
xchg
mov
push
mov
daa
rol
icebp
lahf
sar
add
movs
icebp
or
xchg
mov
add
iret
jo
ret
ret
cs
adc
ds
pop
mov
ins
sub
mov
je
sti
fild
bt
add
cmp
fcmovbe
dec
ret
cmp
mov
mov
push
sbb
mov
fistp
repz
fs
cwde
xor
inc
mov
scas
jmp
daa
std
push
cmp
std
lods
test
popa
lahf
mov
jecxz
sbb
jbe
adc
scas
pusha
sub
movs
pop
or
fdiv
stc
shl
inc
lahf
and
rol
sti
mov
mov
push
xor
ds
sti
call
cmp
out
out
jg
adc
cli
cld
dec
scas
fisub
push
jns
(bad)
sbb
adc
(bad)
out
jb
inc
sub
fistp
pushf
cdq
push
out
and
mov
jg
push
cmp
stc
inc
jle
rol
lock
add
test
out
in
imul
ds
or
test
rol
(bad)
xchg
inc
dec
xchg
lods
pop
pop
xor
add
shl
(bad)
bound
fldenv
sub
jae
jp
jmp
std
xchg
mov
in
pop
not
repnz
push
jle
jg
jmp
xchg
dec
stos
and
xlat
icebp
repz
adc
add
(bad)
and
cmps
cdq
pop
sbb
test
inc
and
jb
xor
test
add
inc
loopne
inc
or
cmp
xor
retf
mov
inc
mov
mov
retf
jnp
es
mov
nop
test
cs
enter
adc
js
iret
shl
pushf
lds
(bad)
bound
push
cli
push
aad
loop
loopne
cwde
out
clc
(bad)
(bad)
jnp
mov
mov
or
ins
inc
(bad)
fdiv
sbb
test
push
gs
das
or
jl
mov
(bad)
pusha
and
(bad)
inc
dec
out
cmp
dec
(bad)
nop
mov
loope
add
adc
mov
out
imul
test
ins
test
jp
frstor
mov
out
xor
lahf
sbb
clc
mov
mov
adc
cmp
pop
and
repnz
and
mov
popa
jb
icebp
adc
lahf
iret
jmp
and
rcl
xor
sti
jae
sub
pop
push
movs
test
movs
call
or
jl
inc
fxch
scas
paddq
mov
sbb
outs
stc
fimul
imul
call
lds
scas
dec
(bad)
and
test
out
adc
in
jge
lea
(bad)
imul
cld
add
mov
in
ins
hlt
push
stc
int
dec
push
cmps
out
mov
cmp
and
pusha
mov
rcl
retf
cdq
(bad)
fsubr
xor
jbe
into
ins
loopne
das
retf
(bad)
sbb
jbe
fist
pushf
shl
lea
sub
(bad)
cmp
cdq
xchg
mov
adc
cmps
imul
outs
ins
pop
lock
loopne
enter
lods
sbb
repnz
cmp
repz
add
sub
fist
out
int
mov
cmp
dec
in
cmp
ret
rcr
retf
cmp
js
jmp
in
mov
call
cmp
mov
inc
push
(bad)
jle
stos
cmps
xor
fild
adc
xchg
pop
xchg
mov
movs
or
jns
mov
daa
jo
cmc
and
lock
pop
jge
into
push
fist
stc
aas
or
clc
xor
ret
je
loope
cdq
es
int
and
test
push
stos
fnstsw
pushf
popf
cmp
inc
inc
inc
scas
dec
adc
jmp
push
ds
pop
jl
sbb
cli
and
aas
xor
nop
test
js
sub
sbb
dec
sahf
jae
lds
and
scas
mov
repnz
out
es
jge
retf
mov
lahf
outs
inc
xor
jae
mov
cmp
mov
jnp
add
sbb
adc
out
sub
cs
repz
ret
push
movs
add
aaa
clc
scas
(bad)
xlat
sub
call
out
fmul
fsub
idiv
repnz
cwde
test
jg
js
(bad)
jmp
cmc
cwde
bound
jne
enter
sbb
push
jno
dec
add
js
inc
shl
out
inc
and
fcom
(bad)
inc
pop
xchg
pop
movs
fadd
lds
mov
sahf
xchg
mov
(bad)
mov
pop
in
mov
addr16
push
push
sub
(bad)
dec
jmp
mov
repnz
xchg
imul
jns
pop
pop
inc
int
add
sti
cwde
mul
stc
mov
cwde
aad
and
push
sbb
mov
mov
sub
and
aaa
pop
mov
(bad)
ss
loope
push
mov
stos
bnd
push
scas
jnp
sub
sbb
sahf
mov
or
dec
mov
jmp
push
sbb
adc
inc
and
ds
ds
push
adc
aam
call
jp
iret
mov
sub
pop
movs
test
movs
inc
adc
jle
pop
fdiv
xor
shl
pop
mov
int3
sar
push
push
aas
mov
loope
(bad)
jecxz
mov
daa
add
fidivr
adc
inc
jae
mov
mov
xchg
ins
mov
xor
pop
push
(bad)
dec
jmp
jne
pop
cmc
mov
adc
sahf
mov
jmp
xor
idiv
add
adc
push
sub
mov
addr16
iret
hlt
cld
and
fwait
jo
loopne
jecxz
in
popa
scas
or
pop
(bad)
jecxz
mov
ja
mov
cld
data16
and
sti
(bad)
pop
jmp
and
add
add
xor
xor
pop
fs
cmc
jnp
or
fnstcw
inc
loopne
or
and
dec
cmc
test
lock
(bad)
jne
and
rol
mov
and
je
mov
inc
test
fild
xor
mov
int3
add
adc
out
dec
lods
dec
add
sti
xchg
mov
and
mov
mov
out
aaa
or
jns
test
mov
sar
cmps
pop
push
out
mov
addr16
fcom
push
popa
cwde
mov
and
push
jge
movlps
aad
inc
shl
mov
pop
pop
aad
nop
sar
cmp
(bad)
fld
mov
pop
push
add
stc
adc
imul
psadbw
fcomp
cmp
mov
shl
(bad)
sub
fnstsw
sar
or
sbb
scas
xchg
ret
daa
mov
xchg
repz
loop
mov
rol
jne
loopne
xchg
push
push
xor
jmp
inc
sahf
clc
adc
cli
mov
fsubr
jmp
(bad)
add
jmp
pusha
xchg
neg
xlat
fs
inc
jmp
lock
push
push
or
ds
adc
sbb
hlt
out
nop
pop
lods
pushf
je
iret
popf
adc
or
and
sti
mov
cmp
xchg
xchg
mov
sub
mov
pop
inc
push
xlat
inc
push
xor
xor
inc
xchg
sbb
rcl
pop
daa
stos
scas
ret
addr16
adc
xor
out
scas
dec
mov
scas
lahf
mov
inc
mov
fcmovnb
and
repz
jp
call
push
xor
(bad)
mov
aaa
jnp
jl
jecxz
cs
push
inc
mov
ins
mov
cmp
xor
es
icebp
xchg
pop
test
pop
fwait
ret
jmp
cmp
add
das
lods
xor
call
fiadd
mov
fldenv
sbb
shl
(bad)
aad
and
mov
sbb
jne
scas
adc
mov
and
cld
xchg
sub
sbb
jge
div
dec
and
sub
push
mov
fcmovb
inc
fsub
inc
imul
push
jp
aaa
imul
aad
nop
add
scas
sbb
aaa
push
out
mov
movs
push
popa
xor
and
and
int
outs
push
jns
xchg
repnz
xor
fucomi
add
mov
neg
sbb
pop
sub
ja
or
pop
jl
cmp
popf
push
or
adc
cmp
xchg
xchg
xchg
mov
jae
fcmovb
jno
sbb
ret
int3
je
div
inc
jae
mov
out
dec
cmp
sbb
les
test
dec
pop
repnz
xor
sbb
aam
add
(bad)
in
jne
dec
xchg
xor
dec
imul
pop
cli
push
fadd
adc
push
mov
(bad)
sbb
ss
sbb
xor
mov
out
pushf
lock
cld
mov
leave
test
pop
add
gs
clc
cmp
sub
fdivr
sbb
jns
fwait
pusha
aas
or
sahf
pop
ds
out
in
aas
cld
mov
imul
jbe
mov
cwde
or
data16
call
jecxz
mov
fidiv
xchg
je
inc
or
dec
iret
int3
bound
leave
arpl
shl
add
cmp
outs
mov
mov
scas
jmp
cmp
push
mov
xchg
xchg
mov
scas
adc
(bad)
jno
cwde
sub
out
ins
rol
test
(bad)
mov
push
dec
pop
xchg
adc
push
(bad)
add
mov
out
sub
ins
clc
xor
imul
xchg
cmp
dec
cmc
gs
mov
sub
std
xor
mov
adc
and
stos
bound
sub
sub
int
data16
out
fsubr
push
(bad)
data16
dec
inc
mov
adc
loopne
lods
pop
sbb
test
dec
sbb
adc
mov
aas
stos
in
cs
xor
mov
pop
mov
xchg
out
inc
xor
aaa
enter
in
ss
cld
je
sub
dec
or
(bad)
xchg
dec
sub
xchg
int3
test
mov
adc
jmp
jmp
sbb
lahf
repz
and
xchg
jno
xchg
sub
add
sar
push
jmp
popa
dec
push
lock
cmp
stos
addr16
pushf
mov
xchg
sahf
xchg
les
pop
mov
lods
lock
mov
mov
not
or
test
jg
test
pop
js
(bad)
mov
sbb
cmp
aas
sar
shl
ficomp
loopne
inc
cmp
sar
cmp
mov
pop
mov
je
out
push
fnsave
aas
sti
loop
jnp
addr16
mov
rcl
mov
inc
ss
and
push
bound
jle
stos
sbb
lea
xlat
(bad)
and
push
sub
pop
outs
aad
add
sub
xchg
ficom
dec
adc
and
inc
fs
inc
xchg
test
jae
cmps
pop
mov
inc
pop
or
cmp
mov
ficom
adc
or
daa
ret
cmp
pushf
mov
dec
xchg
xor
je
dec
mov
repnz
adc
iret
lods
ss
shl
fcomp
add
addr16
ins
add
ins
add
jbe
add
cdq
push
mov
mov
push
aad
fcomp
clc
test
out
cmp
js
std
or
mov
in
pop
pusha
dec
movs
inc
(bad)
mov
repz
mov
out
mov
xchg
movs
add
add
sar
repz
pop
mov
daa
(bad)
and
lahf
jl
fldenv
shr
rcl
push
nop
xchg
mov
cmps
and
outs
mov
imul
repnz
aam
push
hlt
xchg
retf
arpl
xor
mov
mov
push
cdq
(bad)
cld
mov
xor
fdivrp
call
test
test
mov
dec
sub
(bad)
mov
inc
inc
lods
add
call
ins
or
dec
adc
cwde
out
icebp
sub
pop
ds
sbb
(bad)
ficom
ror
scas
and
jl
dec
cdq
jp
sub
mov
loope
mov
out
push
push
jmp
mov
test
fsubp
sub
ret
jnp
popa
fmul
sti
jno
mov
out
pop
lds
imul
data16
dec
mov
das
lods
cmps
xchg
jns
cmps
push
and
xor
dec
pusha
push
or
fld
cmp
das
in
in
ins
test
xchg
jmp
loop
mov
ror
nop
jbe
test
xchg
fs
push
sbb
pop
cmp
ret
push
and
aaa
lock
in
jae
movs
mov
ror
div
lock
pusha
or
jmp
jle
xor
cmc
jg
xchg
jae
mov
xchg
imul
dec
fdivr
inc
jp
ja
jp
mov
fdivr
movs
shl
mov
mov
inc
add
inc
mov
xchg
les
fwait
aad
outs
xor
adc
add
push
pop
adc
mov
adc
jmp
push
push
mov
loopne
xor
lds
scas
xchg
sbb
mov
loop
loopne
pop
outs
mov
mov
or
push
inc
shl
xchg
inc
dec
mov
xchg
loope
loopne
pop
in
fld
mov
and
or
sbb
xchg
cli
lods
mov
sub
es
push
ss
shl
push
pusha
mov
pushf
(bad)
fs
jp
push
dec
jl
in
cli
into
inc
jmp
xchg
dec
in
iret
rol
dec
inc
mov
aas
aam
push
sub
imul
jg
jmp
mov
add
mov
dec
pop
mov
sub
in
scas
es
jae
mov
xor
adc
ror
jp
cs
add
adc
aaa
pop
pop
adc
cmp
xchg
xor
xchg
ror
mov
sahf
push
std
(bad)
ss
sbb
pop
out
into
dec
sub
pop
cdq
inc
bound
cmp
nop
fstp
in
call
inc
lods
les
jb
sbb
out
sti
sbb
inc
repz
rol
push
gs
mov
test
jmp
jp
bound
xchg
lahf
pop
rcr
(bad)
outs
cmc
loopne
and
add
cmp
push
dec
cmps
xor
movs
sbb
ins
push
fwait
jb
cmp
movs
adc
hlt
clc
mov
mov
js
pop
push
or
icebp
test
dec
test
cmp
mov
movs
call
mov
shr
xchg
js
mov
or
scas
popa
in
stc
retf
push
xacquire
retf
jae
xchg
dec
int3
adc
mov
arpl
inc
push
jp
movs
into
fnstcw
mov
dec
adc
repnz
sub
ins
adc
jp
inc
or
rep
and
cmp
pop
scas
nop
mov
fidivr
out
ret
(bad)
shr
cmp
fstp
movs
repnz
cmp
cmp
and
ins
stos
shl
and
js
js
cmp
clc
jmp
adc
ss
mov
nop
test
(bad)
mov
cmp
push
test
pusha
jne
sbb
push
mov
cmp
jecxz
mov
sbb
adc
xor
stos
vpcomud
cmc
popa
and
scas
pop
out
sub
cmp
mov
aas
test
and
(bad)
xor
push
push
inc
les
push
repnz
mov
test
sbb
xchg
jmp
adc
sbb
pop
sub
(bad)
std
pop
mov
cmp
aam
rcr
in
in
dec
ret
or
add
push
jg
into
ret
cmp
sbb
sub
mov
fldcw
fadd
xor
push
cmp
jmp
jno
xor
shr
addr16
inc
in
adc
add
fstp
jbe
aas
retf
pop
test
test
or
(bad)
hlt
fidivr
rcr
out
jge
inc
retf
ja
pop
push
nop
imul
sbb
mov
xlat
repnz
cmc
loop
imul
sbb
pop
cdq
push
(bad)
jmp
fist
pop
cmp
rol
mov
mov
movs
cmp
mov
dec
aad
dec
dec
push
xor
or
std
dec
push
pop
cmps
mov
jle
cs
popf
mov
clc
leave
add
xor
xor
pop
and
sbb
int3
sar
das
adc
xor
mov
inc
add
pop
xor
cmps
aam
inc
and
adc
icebp
and
int
inc
xchg
sbb
scas
push
or
test
cmps
(bad)
fsub
mov
test
clc
pop
adc
cld
push
or
in
cmc
push
xor
in
inc
pop
popa
sub
add
(bad)
cmp
popf
or
pop
mov
jnp
not
or
mov
pop
cmp
js
or
sbb
dec
scas
ret
out
pop
scas
lods
cmp
pop
and
adc
xor
dec
jmp
adc
add
or
jno
popf
(bad)
loope
cs
mov
push
xchg
adc
ds
pop
jle
fs
movs
jnp
jle
enter
add
lahf
push
aad
inc
and
jecxz
add
ss
cmp
(bad)
sbb
inc
(bad)
mov
sbb
xor
and
adc
in
sbb
daa
leave
ret
aad
or
test
sub
fist
test
rcr
pop
xor
dec
int3
cmp
psubsb
out
clc
test
pusha
mov
sub
jl
sub
popa
mov
inc
pop
xchg
pop
mov
mov
(bad)
es
outs
push
mov
mov
je
clc
mov
sahf
aas
xchg
mov
cld
inc
xor
cmp
test
jmp
cs
lea
push
hlt
mov
xlat
or
mov
xchg
jno
repz
sub
add
outs
bnd
mov
xchg
mov
(bad)
fwait
lock
(bad)
xchg
lea
pop
icebp
fadd
sbb
aad
rol
cmp
xchg
inc
sahf
cmp
jle
jg
mov
sub
out
xchg
loop
jecxz
pop
dec
add
jg
popf
cwde
cld
or
ins
popf
out
jg
mov
in
add
adc
mov
push
mov
jle
fwait
push
mov
fcomp
mov
pop
mov
jne
mov
test
jb
dec
movs
les
xchg
cmp
fist
repnz
xchg
adc
nop
mov
fdivrp
jns
sbb
fcom
push
dec
mov
out
test
and
cmp
inc
dec
in
push
shr
push
stos
outs
lock
jmp
call
iret
sbb
test
scas
adc
ror
cld
adc
icebp
enter
test
fwait
movs
retf
ins
repnz
sub
mov
ror
fnsave
push
inc
cmps
push
add
push
sub
jb
jge
adc
push
retf
adc
cli
mov
ret
push
sti
pop
pop
fcom
push
and
aad
jo
pop
sub
dec
test
sub
loop
int3
fisubr
and
sub
dec
jnp
cmp
xor
pop
adc
mov
adc
(bad)
add
call
inc
mov
inc
adc
jae
imul
xor
in
(bad)
jl
add
pop
inc
dec
call
inc
fs
push
out
mov
sbb
mov
sti
push
dec
push
in
std
lds
gs
out
jae
push
mov
and
jns
inc
pop
sbb
xchg
sub
cmp
idiv
mov
dec
mov
jno
cwde
pop
das
jl
popa
out
push
iret
cld
sub
gs
cmp
cmp
into
iret
inc
in
mov
daa
sub
mov
push
or
xor
and
and
push
pusha
xlat
rol
xor
fcomi
or
pop
leave
test
out
les
stos
mov
jb
mov
loop
xor
sbb
push
not
jmp
dec
mov
dec
fistp
(bad)
mov
sahf
add
test
mov
add
mov
bts
rol
and
imul
xchg
cli
mov
fwait
out
jl
std
cs
dec
mov
loope
loopne
mov
outs
and
add
ret
xor
inc
hlt
loope
inc
sub
xchg
push
jae
inc
cld
sahf
pop
inc
ins
mov
rol
outs
cwde
shl
push
ret
mov
gs
jo
mov
iret
fsub
dec
pusha
pop
push
in
xchg
in
inc
cmp
cdq
pop
mov
adc
mov
mov
jb
rcl
nop
mov
gs
test
shl
sbb
or
lahf
mov
push
repnz
in
test
dec
ss
aad
or
fisttp
sbb
ror
xor
push
xchg
popa
sbb
push
xchg
(bad)
jmp
dec
movs
sti
hlt
pop
xchg
enter
dec
sub
ds
mov
shl
mov
xchg
gs
push
sub
jbe
(bad)
jg
out
adc
inc
xor
sub
out
inc
mov
xchg
inc
fiadd
aam
mov
ds
imul
jns
out
enter
mov
mov
and
mov
jle
and
add
shl
lods
push
mov
mov
movs
rcl
inc
sub
out
and
out
and
imul
cmps
test
bound
fst
pop
imul
jmp
inc
std
cdq
sub
pop
leave
jmp
adc
mov
stc
test
push
pop
pmovmskb
cmp
imul
xlat
aaa
in
adc
cmp
mov
movs
out
add
cmp
mov
icebp
fidivr
scas
and
sub
push
dec
sub
and
in
std
mov
sbb
(bad)
and
in
jl
adc
shr
xchg
js
xchg
fsubp
pop
cmps
data16
add
dec
imul
jecxz
out
adc
mov
xchg
adc
add
stc
out
ins
fwait
mov
cmp
nop
out
cmp
test
dec
or
xor
in
push
jmp
test
es
pop
cmps
in
shl
test
inc
inc
jno
push
adc
in
jne
(bad)
imul
je
pop
add
dec
gs
into
add
xchg
rcr
mov
adc
test
lods
jns
rol
ja
mov
inc
xor
and
(bad)
imul
(bad)
pop
test
add
fdivrp
cld
aad
xor
int
sub
inc
inc
into
xor
sub
fld
movs
pop
idiv
add
jne
stos
(bad)
out
ret
in
cli
dec
pop
dec
(bad)
xchg
lds
nop
xor
int
(bad)
xor
pop
sbb
popa
cmp
sub
test
ds
add
cs
jl
outs
push
and
aam
(bad)
xor
cmp
dec
in
mov
or
xchg
xchg
jns
(bad)
pop
(bad)
(bad)
sbb
sub
push
pop
aam
fmul
scas
sub
push
sub
adc
push
push
or
popf
repz
fisttp
cmps
pop
addr16
das
int3
fs
xchg
inc
lds
scas
hlt
nop
push
mov
aas
cmp
inc
mov
mov
mov
inc
mov
dec
int
imul
jnp
dec
loop
out
nop
xchg
mov
add
loope
aam
leave
test
push
adc
popa
and
movs
ins
lds
sar
shl
loop
nop
nop
clc
movs
sbb
out
or
clc
jns
mov
inc
mov
aad
mov
push
scas
sbb
shl
jle
(bad)
addr16
arpl
lea
add
test
mov
push
adc
(bad)
sbb
dec
sti
pushf
push
arpl
jp
mov
shl
push
mov
fist
mov
mov
mov
xor
pop
xchg
sahf
movs
test
mov
pop
push
test
test
ss
cmps
or
dec
or
aaa
fistp
fstp
pop
inc
les
mov
xchg
sbb
or
(bad)
sbb
ins
xchg
imul
in
sub
arpl
inc
cwde
xchg
outs
jno
push
cmc
movs
push
and
xchg
inc
inc
in
pop
adc
adc
ss
loop
cmp
or
pop
mov
(bad)
test
and
add
out
mov
pop
xlat
mov
jmp
shl
ss
xchg
bt
sbb
stos
das
xchg
adc
dec
and
les
repnz
mov
mov
jns
in
int
mov
shr
mov
mov
aaa
inc
lds
cmp
repz
inc
cwde
push
lahf
test
rcr
pop
sbb
xor
pop
rcl
mov
mov
ret
sub
(bad)
mov
scas
ins
out
sti
mov
and
scas
jb
shl
iret
cdq
addr16
stos
pop
pushf
xchg
daa
lods
push
lds
xchg
cmc
add
mov
or
add
sar
pop
sti
into
sbb
shl
add
retf
or
adc
out
dec
pop
mov
outs
pushf
xlat
push
ins
sbb
in
ret
cmp
cli
stc
push
cmp
mov
pop
sub
neg
outs
sahf
lock
out
lea
repnz
adc
fisubr
adc
cmps
xor
lods
mov
mov
das
lea
inc
lods
add
dec
jnp
cmp
rol
cmp
pop
ja
mov
adc
push
push
int
adc
and
jg
and
pushf
xchg
dec
mov
push
test
pop
inc
add
mov
sbb
push
int
enter
adc
or
pop
jmp
aas
(bad)
xchg
mov
jle
push
leave
add
or
push
addr16
dec
adc
ss
enter
push
into
sub
pop
sbb
jb
repz
jmp
push
push
sub
aam
ja
das
icebp
int3
outs
fdiv
and
and
add
push
in
rol
mov
test
adc
and
and
add
cmps
lods
icebp
ja
idiv
loopne
sub
repz
js
sub
or
xor
cmp
rcr
sub
sbb
fcomp
push
inc
mov
inc
je
mov
sti
jecxz
xor
mov
test
cmp
mov
(bad)
mov
sbb
sub
mov
and
pop
add
les
mov
inc
mov
jae
scas
xor
or
les
add
xor
nop
inc
xor
sahf
push
stos
cdq
ret
fcmovb
int3
in
sub
ret
fmul
xchg
les
push
xchg
(bad)
dec
cmp
xor
cmp
scas
push
fmul
cmc
mov
loope
pop
ins
movs
rol
stos
push
imul
iret
scas
push
(bad)
popf
push
sbb
or
stos
enter
cmp
jno
test
sbb
adc
jmp
fidiv
mov
pop
adc
inc
mov
inc
ret
pop
dec
mov
mov
pop
mov
js
pop
xor
xlat
aam
popf
dec
xor
aam
sbb
cmp
aas
dec
jb
out
fidivr
rcl
aas
fdivr
jo
jecxz
jo
ins
movs
call
dec
pop
dec
pop
jno
fwait
es
dec
(bad)
daa
cmps
out
dec
(bad)
xchg
cmps
sub
clc
into
movs
lahf
icebp
call
dec
sbb
imul
sub
fwait
leave
dec
adc
inc
aaa
dec
pushf
leave
pop
mov
mov
mov
scas
adc
mov
ror
jae
or
cs
call
adc
jecxz
sbb
mov
ret
push
mov
cmp
fs
sbb
test
fwait
pop
xchg
mov
loop
adc
bnd
xor
and
icebp
inc
cli
(bad)
cmp
push
imul
syscall
imul
push
fcomp
and
lea
mov
xchg
rcr
adc
cmp
fidiv
mov
mov
xchg
outs
push
push
inc
repz
fisttp
test
inc
dec
retf
jmp
cdq
xor
mov
icebp
cli
xchg
or
in
js
dec
sub
pop
or
pop
add
sahf
cmps
inc
call
push
dec
repz
pop
jo
fimul
stc
push
adc
xchg
inc
lods
and
sbb
sbb
xchg
push
or
jmp
jp
mov
test
push
outs
sbb
and
xor
cld
aaa
sbb
mov
or
into
pop
jg
jmp
mov
jl
xchg
pop
sbb
xchg
clc
je
(bad)
xor
fist
mov
add
jecxz
or
jns
popa
xchg
sub
jne
ret
repnz
(bad)
and
lods
rcr
mov
xor
in
push
sar
loope
lods
mov
push
loope
jns
out
leave
ret
sti
sub
or
mov
and
ret
(bad)
cmp
jo
ins
jecxz
cwde
and
dec
cmc
sub
xchg
xor
jno
scas
jo
mov
fimul
cmps
push
sub
dec
mov
sbb
pushf
adc
fidivr
jl
mov
mov
xor
outs
ds
fdivrp
jne
cmp
sub
cmp
movs
outs
(bad)
out
ins
sbb
dec
mov
in
sub
adc
pop
mov
or
adc
stc
mov
imul
retf
icebp
push
adc
sti
push
cli
xor
sub
(bad)
add
pop
(bad)
mov
scas
add
cmp
xchg
(bad)
dec
or
push
ror
mov
mov
and
jae
xchg
(bad)
and
push
retf
sar
fwait
shl
xor
retf
lods
adc
mov
jmp
fldcw
fisubr
in
(bad)
mov
add
push
js
jmp
(bad)
dec
xor
add
in
xchg
rol
fwait
es
call
or
ss
mov
push
fs
movs
and
into
sub
gs
lds
aaa
dec
mov
mov
lds
int
stos
addr16
retf
sub
jecxz
cs
cdq
xchg
hlt
jg
test
adc
or
sub
inc
adc
dec
outs
jp
movs
mov
inc
xchg
cmp
je
mov
cmps
sbb
(bad)
out
ss
daa
ror
mov
or
sbb
cs
cmp
inc
adc
mov
xchg
jge
pop
(bad)
fld
out
shr
repz
add
shl
out
dec
(bad)
adc
mov
(bad)
mov
pop
mov
clc
adc
add
xchg
stos
fs
sub
push
dec
fwait
in
pop
iret
add
jl
fdivp
ret
popf
and
movs
xchg
dec
dec
jge
push
bound
push
stos
pop
xor
mul
mov
fxch
adc
loopne
sbb
sub
rol
xchg
xor
jecxz
push
add
cmp
add
xor
or
cmp
mov
adc
test
bnd
(bad)
mov
mov
mov
ss
inc
push
sahf
sub
mov
xchg
stos
cmp
and
lock
sub
iret
daa
cdq
int3
in
sbb
pusha
jecxz
xor
and
push
inc
les
outs
push
ins
test
xchg
popf
cmp
scas
pop
and
sub
mov
in
and
mov
stos
adc
hlt
xor
dec
pop
je
inc
add
mov
out
xchg
add
(bad)
jmp
push
repz
jo
lahf
and
cmp
dec
dec
inc
pop
jg
loope
and
ret
push
test
shr
mov
ret
pop
and
sbb
les
fst
push
dec
jg
cmp
pop
inc
nop
test
add
pusha
jno
cmps
(bad)
stos
adc
mul
jo
ja
aas
adc
out
mov
sub
mov
fisttp
push
(bad)
cmp
push
push
mov
scas
cld
outs
push
jne
add
cmp
rcr
call
and
dec
rcr
adc
sti
mov
cmp
cmp
or
sub
jb
mov
lods
rcl
imul
js
inc
por
pop
mov
sub
test
push
mov
jae
pop
sub
mov
xchg
jbe
mov
movs
or
xchg
jno
les
jne
push
test
test
mov
add
movs
mov
in
dec
loopne
dec
push
fist
xor
jmp
jne
sti
xchg
sbb
fidivr
out
stos
int
dec
cmp
mov
push
xchg
xor
pop
or
in
repz
es
pushf
cmp
in
pop
retf
ins
aas
sub
adc
mov
jne
pop
cmp
add
test
sub
ss
(bad)
in
push
mov
inc
jmp
cmp
adc
xor
jmp
aaa
jecxz
fstp
push
shl
and
inc
into
mov
data16
add
pop
push
vpavgw
inc
lock
sbb
jle
fld
test
shl
jg
(bad)
cs
pusha
div
mov
outs
add
es
in
xor
sti
call
jnp
(bad)
outs
xor
fimul
cmps
jb
add
jns
and
mov
into
xlat
ret
and
dec
clc
sbb
nop
imul
mov
jl
push
cdq
mov
(bad)
in
pop
jno
add
test
push
jp
mov
add
push
std
mov
pop
sbb
mov
pop
retf
add
mov
xor
xor
popf
xchg
jmp
ins
sbb
and
push
imul
mov
dec
add
lea
adc
pop
shl
lods
xlat
inc
push
add
add
ins
leave
sbb
(bad)
cmc
pusha
mov
xlat
mov
stos
movs
push
lahf
fisubr
(bad)
xlat
and
(bad)
adc
das
adc
and
jg
outs
fs
xchg
dec
fiadd
push
aad
loop
cmp
mov
jge
mov
outs
xchg
shl
jl
inc
push
(bad)
jmp
mov
xor
stc
mov
sbb
inc
aad
ret
and
js
stc
test
das
or
fild
xchg
sub
cmp
pop
popa
nop
mov
cmp
ds
xchg
push
xor
dec
inc
in
mov
pop
jae
cmovbe
imul
mov
push
and
mov
add
lea
pusha
xor
loop
push
leave
sbb
call
and
pop
mov
pop
inc
daa
imul
into
jmp
mov
clc
cmp
mov
lods
cli
mov
shl
add
shl
movs
retf
lods
jmp
mov
test
and
mov
cwde
int
outs
jecxz
xor
dec
pop
pushf
cmps
push
repnz
push
or
ja
bound
icebp
mov
jge
in
out
mov
mov
movs
push
idiv
mul
push
repz
addr16
(bad)
out
sbb
stc
add
imul
xchg
test
mov
call
cmps
in
xchg
repnz
add
fidivr
enter
mov
loopne
adc
push
adc
xor
jg
push
gs
mov
retf
inc
sub
test
sub
inc
sub
xchg
sar
push
pop
leave
push
mov
addr16
in
scas
adc
int3
ret
pop
pop
mov
scas
xor
cmps
add
cmp
imul
fs
mov
mov
and
das
xor
das
xchg
pop
mov
jp
scas
dec
mov
and
inc
or
test
and
xlat
mov
or
ins
cmovae
sti
or
cmps
xor
retf
cmc
cwde
out
dec
mov
loope
cmps
sub
push
xor
jle
call
sbb
xor
inc
mov
call
adc
sbb
stos
leave
retf
ret
xchg
or
icebp
ins
mov
retf
pop
cmps
sub
mov
cmp
je
enter
xor
sub
call
mov
call
data16
inc
cmc
xlat
stos
jns
ret
lods
add
and
inc
int
inc
shl
pop
and
jns
test
popa
xchg
inc
dec
mov
adc
pop
(bad)
in
mov
out
dec
and
shl
stc
idiv
cmp
in
xchg
out
pop
ins
sub
jecxz
fwait
sar
xor
out
bound
ret
call
or
pusha
cmps
xchg
jecxz
mov
push
add
and
and
xchg
test
sbb
les
xchg
test
sbb
mov
aad
nop
jmp
jle
or
fmul
sub
add
cmp
ins
xor
shr
shr
inc
adc
(bad)
fldenv
enter
pop
xchg
sub
xchg
ret
out
movs
mov
xor
cs
fld
and
repz
xchg
pop
add
lock
cmp
adc
je
jmp
std
loopne
test
test
push
lods
mov
aad
(bad)
xchg
sub
inc
fwait
rol
in
pop
adc
dec
mov
push
test
xchg
(bad)
in
mov
mov
sbb
test
sar
jmp
jmp
ret
mov
ds
and
push
and
jne
mov
test
xchg
ins
jo
cli
imul
jae
imul
jo
nop
das
jge
sbb
xor
scas
movs
lds
fs
out
and
js
adc
or
sub
push
mov
daa
push
pop
mov
or
pop
rep
out
imul
jns
cmp
jp
js
ja
popf
add
in
sahf
mov
bound
xchg
and
pop
fwait
mul
push
ret
xor
sti
sub
aas
into
ret
add
sbb
jo
imul
nop
nop
(bad)
sub
fild
sbb
(bad)
jp
or
jns
sbb
mov
mov
mov
(bad)
std
pop
(bad)
call
aas
movs
retf
std
sbb
xchg
or
or
stos
sub
aam
les
push
cmc
push
sub
(bad)
lods
pminsw
sub
dec
adc
clc
push
aad
enter
push
fwait
mov
add
loop
gs
sub
xor
and
(bad)
dec
push
push
or
and
lods
fs
mov
xchg
std
les
xor
out
(bad)
ja
std
mov
movs
xchg
int3
cwde
xor
sbb
mov
int
ret
mov
ror
xor
loopne
outs
jmp
add
cdq
cmp
mov
ret
jns
push
push
nop
out
aaa
xor
sbb
xchg
mov
sub
push
xchg
mov
push
xchg
mov
push
out
pop
stos
imul
ss
xchg
mov
inc
shl
sar
stc
int3
push
shl
fwait
cmp
idiv
sbb
loopne
and
popf
repnz
lods
jecxz
add
jne
(bad)
adc
dec
or
test
pop
xchg
sbb
add
jb
pushf
jp
sahf
les
pop
movs
push
mov
adc
and
xchg
outs
adc
push
mov
mov
jl
repz
sbb
mov
data16
xchg
addr16
dec
test
leave
mov
mov
mov
scas
push
dec
stos
test
sub
sub
add
outs
(bad)
xchg
sbb
rcl
repz
fwait
add
push
nop
jno
je
daa
loopne
addr16
sub
iret
daa
fs
(bad)
and
ja
shl
cmp
fistp
push
adc
frstor
ss
mov
xlat
enter
das
and
add
loope
cmp
mov
xor
icebp
xchg
pop
or
shl
fisttp
(bad)
push
addr16
sbb
cmps
cmp
fs
sub
pop
push
xchg
and
push
aad
ror
pop
stos
fmul
mov
push
sbb
mov
scas
imul
inc
inc
retf
aas
nop
arpl
adc
retf
jne
xchg
mov
add
test
retf
sub
ss
inc
ins
mov
adc
nop
push
mov
jg
(bad)
or
mov
add
sub
xor
sbb
jno
xchg
mov
cdq
call
or
dec
mov
lahf
lock
push
xchg
ja
inc
das
jl
pop
jns
pop
xchg
sbb
push
pop
xor
fcmovnu
call
sub
sbb
(bad)
dec
and
not
mov
in
or
mov
loope
outs
(bad)
and
dec
jnp
cs
daa
and
xchg
out
retf
ja
retf
stos
push
dec
dec
lods
in
cmp
movs
push
lock
sahf
lahf
inc
nop
jecxz
lds
cmps
sub
call
sub
mov
jnp
out
add
out
sub
lock
mov
lods
dec
push
bndstx
xchg
loopne
push
inc
fs
mov
xchg
ror
out
sub
jge
retf
sub
retf
loope
pop
daa
push
pop
arpl
and
and
mov
jl
(bad)
dec
adc
push
in
pop
ror
xor
aas
xchg
jb
pusha
fisttp
push
ins
fs
jge
ret
sub
fucomip
pop
pop
dec
fld
std
imul
add
hlt
inc
xchg
shr
dec
sar
xchg
std
and
loop
add
dec
fs
push
inc
add
dec
xchg
test
push
cmp
xor
push
or
mov
adc
or
rcr
push
mov
pusha
adc
lea
pop
call
jne
jmp
addr16
cmp
fs
or
or
rcl
sub
and
pusha
adc
scas
or
cmp
mov
jmp
push
sub
mov
mov
mov
mov
dec
inc
xchg
and
pop
inc
mov
fisub
and
jg
or
xor
(bad)
pop
popa
mov
call
cli
adc
push
xchg
leave
jae
ins
sbb
cli
xor
repz
mov
sbb
push
dec
mov
div
(bad)
jbe
push
aaa
(bad)
rol
sbb
add
and
mov
or
cs
cmc
sub
mov
imul
scas
ja
jmp
movs
test
mov
or
cmp
jecxz
(bad)
stos
pop
inc
mov
in
pop
add
mov
jl
aad
jb
cmp
cli
sub
push
popa
mov
sub
and
ja
lock
aam
ret
adc
cmc
les
mul
xchg
mov
inc
pop
push
cmp
ins
in
and
out
popf
out
push
dec
fimul
imul
add
call
cld
cli
jbe
inc
mov
inc
arpl
pop
xor
push
stos
sub
js
dec
ins
pop
out
lds
cmp
lds
mov
sub
ss
mov
loopne
test
pop
ja
mov
xor
out
stos
das
sub
mov
cmp
(bad)
sbb
add
xchg
push
out
ins
test
jbe
sub
rol
idiv
push
jl
push
(bad)
rol
xor
sti
out
cmp
sbb
into
adc
scas
addr16
jp
sti
stos
adc
push
fadd
stos
push
test
jnp
inc
push
(bad)
sbb
lahf
in
and
repz
test
nop
jae
mov
push
scas
jl
shl
fsubp
(bad)
fild
cmp
jbe
xor
mov
scas
push
or
jle
and
gs
xor
xchg
and
mov
push
jo
xor
mov
ret
sar
bound
mov
sbb
gs
icebp
push
out
ds
dec
dec
ja
retf
jae
dec
dec
pop
into
test
(bad)
shl
inc
lahf
push
pop
clc
ret
and
int3
lahf
dec
xlat
pushf
or
ja
mov
xchg
jnp
retf
call
cwde
cwde
mov
bound
mov
je
xchg
icebp
stc
sar
call
test
ret
movs
lds
loopne
sbb
ret
adc
dec
jo
lea
fs
leave
hlt
push
or
je
and
pop
sar
jmp
pop
sbb
popa
sar
stos
push
jmp
jmp
(bad)
sub
(bad)
jb
retf
dec
jno
inc
mov
mov
cdq
iret
xchg
cwde
leave
stos
xchg
sub
sar
cmp
xor
pop
push
mov
fwait
or
mov
push
jbe
add
sbb
das
pop
push
rol
jno
push
xor
adc
push
push
(bad)
std
dec
or
mov
loopne
pop
xlat
cwde
mov
inc
aas
jmp
push
jecxz
mov
pop
cmps
or
enter
sub
mov
jnp
cmp
ins
cmc
lods
nop
in
fs
test
aam
lods
pop
fwait
loope
gs
outs
lock
mov
mov
(bad)
loop
mov
xor
fs
aaa
push
or
fucomi
add
or
and
bound
cmp
popf
push
sahf
bnd
out
lahf
shl
test
rcr
mov
and
push
imul
clc
xchg
xor
push
fistp
inc
and
fwait
loopne
sbb
jo
mov
ins
jl
sbb
enter
rcr
daa
sbb
in
adc
mov
arpl
jbe
scas
mov
imul
xchg
cmp
dec
sub
push
lea
adc
fst
jge
js
ret
adc
repnz
ss
enter
mov
mov
pop
rol
gs
cmp
in
push
int3
xor
scas
mov
lods
js
xchg
add
iret
xchg
mov
out
jl
(bad)
jae
test
adc
jmp
add
mov
test
sub
adc
aas
or
mov
cmp
xchg
and
pop
adc
push
cs
mov
in
adc
out
out
and
repz
(bad)
push
sub
leave
fldcw
push
popf
add
pop
mov
mov
or
or
dec
mov
jns
call
and
jp
xor
jb
xchg
addr16
loop
mov
mov
and
stos
stos
and
push
pop
and
push
ss
and
push
stos
std
add
(bad)
data16
imul
int3
push
mov
jo
xor
bound
xor
push
jb
mov
sbb
jecxz
call
adc
ins
shl
pushf
cmp
loop
mov
loop
sbb
movaps
jl
loop
jbe
jmp
sub
cmp
daa
mov
sub
sub
adc
dec
enter
pop
xchg
mov
dec
sub
call
das
pop
dec
sub
sbb
stos
sbb
or
ins
jp
imul
jnp
cdq
mov
push
in
pop
sbb
ins
mov
ret
mov
mov
(bad)
cmps
loope
fs
mov
xor
les
iret
sub
nop
xchg
or
mov
pushf
xchg
mov
mov
mov
ja
shl
push
jmp
mov
sub
cmc
shl
cmp
inc
add
rol
sub
cmps
xchg
movs
sti
neg
stos
call
pop
jmp
mov
test
inc
shl
and
scas
add
jge
cmp
or
jg
mov
push
(bad)
mov
ins
ret
stc
jge
adc
retf
mov
stos
(bad)
js
jne
fdiv
(bad)
(bad)
ror
pop
jmp
mov
arpl
jg
fnstcw
sub
nop
pushf
inc
sahf
out
stos
inc
pop
inc
add
sbb
inc
push
popf
mov
dec
sbb
sbb
jl
adc
mov
int
ror
jge
cmp
scas
adc
cmps
outs
xor
sbb
call
sbb
sbb
daa
jo
pushf
cwde
sti
fsubr
pop
es
inc
jmp
cwde
xchg
mov
std
or
xor
sbb
cwde
out
loopne
icebp
stos
mov
dec
mov
mov
mov
jb
sub
sbb
dec
inc
dec
jne
test
aam
popf
add
outs
sub
mov
jl
and
mov
aas
jne
sbb
and
sub
fstp
(bad)
fistp
xchg
scas
inc
test
cli
js
movs
mov
mov
ins
mov
pop
fistp
jmp
aas
cmps
lods
xchg
fs
push
ja
add
sbb
inc
ja
neg
add
sub
call
cmp
shl
adc
add
repnz
xor
addr16
call
adc
es
xlat
and
adc
das
shl
ficom
lods
dec
(bad)
dec
jecxz
call
(bad)
sub
loop
in
fsubp
xchg
inc
fild
data16
inc
ins
xor
pop
retf
imul
mov
xor
jbe
outs
xchg
inc
push
or
int3
xor
popf
bound
jp
jle
mov
xor
in
jne
clc
ja
imul
clc
dec
imul
xchg
das
jae
or
add
push
(bad)
das
sbb
fdiv
stos
mov
icebp
ds
ds
sti
push
test
sbb
ss
in
retf
stos
loopne
pushf
ret
inc
xor
adc
mov
fisub
dec
or
cmc
mov
cmp
aad
mov
(bad)
std
mov
movs
add
hlt
ins
aad
jnp
and
pop
mov
inc
out
cmp
inc
sbb
test
ror
mov
push
dec
popa
paddb
cmc
xchg
sar
(bad)
dec
ret
xchg
mov
loope
fidivr
sub
in
cmc
xor
add
imul
popf
xor
clc
outs
mov
fbld
jmp
(bad)
hlt
mov
jno
enter
inc
stc
mov
and
inc
cmp
pop
add
iret
mov
sbb
fsubr
mov
mov
push
scas
cmc
retf
inc
pop
mov
push
or
fmul
ror
enter
sbb
cmp
pusha
enter
mov
rcr
enter
pop
hlt
dec
cmp
xor
jmp
cmp
push
adc
mov
ins
mov
lahf
cli
jmp
xchg
outs
cmp
mov
rcr
es
dec
jge
inc
sbb
out
sar
in
mov
mov
test
aaa
add
rol
(bad)
xor
movs
mov
stos
retf
xchg
test
bound
inc
or
out
sbb
add
clc
mov
xchg
inc
xor
inc
loop
sub
sub
jae
and
xor
pop
ja
in
mov
sbb
dec
imul
push
cmp
mov
(bad)
rcl
add
repz
je
call
ins
dec
mov
outs
ja
sbb
jle
cmp
repz
das
popa
mov
cli
ficom
jmp
loope
inc
retf
xor
pop
inc
jle
stc
and
sub
mov
add
mov
cli
mov
ror
sbb
rol
adc
mov
in
cmp
movs
rcr
icebp
dec
ins
mov
mov
loop
adc
shl
ins
inc
daa
push
mov
cmps
ins
pop
push
mov
dec
leave
cdq
adc
mov
imul
(bad)
stos
enter
into
stc
clc
or
push
mov
popf
mov
sub
int
ror
mov
push
imul
jo
sahf
jne
sbb
iret
ror
and
leave
rol
in
(bad)
shl
sbb
ins
push
div
aad
in
leave
mov
out
cmp
or
repz
jae
and
sbb
mov
and
arpl
xor
lock
cmp
dec
popa
mov
push
aad
sbb
add
fistp
mov
test
pop
xor
inc
adc
scas
retf
ins
or
fmul
cmp
xor
sbb
mov
jmp
xor
dec
pop
mov
imul
sahf
mov
ds
dec
sub
data16
ja
adc
mov
vsubpd
lods
(bad)
imul
retf
cmp
inc
out
lahf
cmp
mov
pop
inc
cli
cdq
(bad)
xchg
je
pop
pop
dec
mov
xor
call
out
dec
retf
lods
adc
cwde
and
aad
adc
dec
push
mov
jbe
sub
pop
inc
popf
iret
leave
dec
or
adc
or
pop
mov
daa
mov
inc
dec
lahf
out
mov
dec
jge
lahf
test
push
mov
test
and
gs
dec
call
outs
add
mov
jb
sub
jg
push
mov
inc
or
fst
sbb
iret
addps
punpckhbw
xchg
jo
in
adc
mov
icebp
enter
nop
outs
js
and
fs
lods
xchg
call
jo
pop
xchg
and
mov
dec
shl
fs
push
in
jg
repnz
inc
movs
ret
and
dec
adc
mov
jae
pop
sub
mov
movs
push
lahf
adc
fdivr
and
sub
(bad)
imul
adc
fistp
mov
push
pop
pop
shl
jb
test
pop
inc
repnz
fiadd
popa
mov
xor
add
int3
retf
in
push
inc
ja
xlat
aaa
add
jecxz
test
dec
xchg
mov
sbb
add
mov
sahf
sub
les
xchg
jo
xchg
cmp
and
aas
xor
call
and
pop
mov
dec
pop
jge
nop
into
cmp
movs
inc
stos
mov
jns
stc
dec
push
pushf
(bad)
and
adc
out
inc
bound
add
xor
fsub
out
mov
mov
cmp
ror
add
scas
data16
pop
js
mov
bound
dec
aad
cmp
mov
jbe
out
jg
lods
jg
outs
cli
pop
mov
ins
test
clc
sbb
jno
out
adc
dec
cmp
pushf
or
adc
jl
pop
out
(bad)
in
or
adc
ss
and
and
and
retf
push
inc
ror
push
adc
out
push
and
mov
dec
lods
cmps
push
sub
xchg
(bad)
cld
jmp
out
js
nop
movs
mov
mov
repnz
and
fwait
out
ja
(bad)
out
xor
inc
loope
ds
jne
inc
es
nop
jg
add
push
sbb
aaa
adc
inc
sub
cmc
jnp
ja
jbe
xchg
ret
dec
fsubr
mov
push
test
and
or
aad
in
mov
jl
cs
pop
adc
sbb
call
outs
sbb
jge
mov
int3
in
pop
and
daa
sbb
mov
retf
jge
and
fcom
sbb
inc
mov
xor
das
fistp
out
sbb
xchg
inc
mov
add
pop
jns
loope
mov
sbb
pop
xchg
dec
xor
rol
push
out
(bad)
(bad)
call
sbb
out
dec
ja
or
dec
jae
cmp
push
pop
mov
cmp
cs
out
shl
imul
in
mov
pop
std
inc
inc
cmps
pop
sbb
hlt
fstp
xchg
jle
xchg
inc
stc
(bad)
add
push
cli
pop
sbb
pop
(bad)
enter
cmp
xchg
pop
dec
push
adc
jae
test
cwde
mov
nop
mov
push
add
or
arpl
jg
test
xchg
test
cmp
push
jnp
ret
mov
jno
js
call
jecxz
xchg
pop
or
(bad)
or
sub
jp
and
cmp
xor
mov
sahf
and
cmp
adc
hlt
mov
push
adc
mov
aad
and
or
test
loope
or
fadd
(bad)
push
or
js
dec
enter
retf
test
loop
sub
xchg
pop
test
lea
mov
rcr
mov
or
(bad)
cmp
sub
(bad)
sahf
xchg
sbb
fcom
inc
jl
push
cdq
add
xor
mov
clc
sub
cmp
sub
push
mov
pextrw
nop
and
push
in
mov
dec
sbb
repz
in
or
mov
mov
cmps
mov
add
jne
in
stc
sbb
stos
ss
dec
pushf
es
inc
hlt
jg
jp
fwait
nop
inc
mov
or
ins
jo
or
into
mov
pop
shl
inc
or
fsubp
pop
dec
mov
call
ret
sbb
dec
aas
repz
add
stos
pop
stc
pop
push
(bad)
aad
and
lock
pop
arpl
popf
xchg
mov
cld
and
pop
cs
adc
call
mov
cs
ja
push
push
dec
cmp
inc
push
push
mov
mov
xchg
sbb
cli
ret
cmp
inc
mov
jmp
dec
aaa
leave
mov
ret
pushf
cmps
dec
jno
mov
xchg
inc
jl
xor
into
and
xor
cmps
shl
movs
adc
xchg
sub
je
add
dec
cli
cs
cmp
add
bnd
inc
dec
rol
add
adc
nop
and
jnp
pushf
loopne
jle
(bad)
mov
mov
jns
fst
and
inc
out
push
adc
retf
les
lea
push
mov
nop
je
push
in
icebp
(bad)
jns
jo
inc
mov
inc
(bad)
clc
sbb
cdq
add
push
jae
pop
fild
popf
cmp
in
clc
out
sbb
test
pop
in
arpl
jbe
mov
ins
mov
xor
movs
out
stos
leave
dec
iret
hlt
ja
push
sub
push
add
sbb
sti
ins
arpl
(bad)
fisttp
fstp
xor
mov
push
mov
jno
bswap
icebp
jp
in
call
fmul
into
jp
push
rcr
ds
test
push
add
jge
mov
lea
inc
aas
and
(bad)
mov
pop
mov
mov
sar
jp
(bad)
lods
xchg
push
jns
mov
dec
sub
test
out
mov
or
aaa
push
push
jmp
iret
pop
sahf
mov
imul
dec
push
stc
pop
(bad)
mov
je
rcr
jbe
xchg
or
mov
mov
out
sub
push
pusha
fs
fcomi
inc
or
xor
leave
cmps
xchg
inc
cmps
add
push
outs
sbb
cmp
mov
loope
pop
push
xchg
aaa
dec
sar
xor
cs
call
call
ds
rcl
sbb
shl
in
cmp
mov
dec
outs
inc
repz
dec
xor
lods
sbb
rcr
pop
add
fsub
add
sbb
and
imul
nop
rcr
add
loope
mov
xchg
(bad)
in
inc
inc
mov
or
adc
push
push
dec
or
xchg
fsub
jmp
(bad)
stc
mov
inc
loop
jg
sbb
aad
div
ss
inc
out
nop
jp
mov
cmp
nop
cmp
movs
out
ret
dec
push
xchg
dec
repz
repnz
ret
inc
push
imul
hlt
adc
jmp
xchg
cmps
repnz
scas
dec
test
pop
fistp
jne
sbb
pop
ss
ror
pushf
ja
mov
mov
movs
je
nop
enter
repnz
xchg
pop
popa
clc
push
cdq
cmps
aas
jecxz
ins
imul
icebp
cwde
pop
mov
dec
inc
ins
shl
fisub
push
mov
inc
mov
int
icebp
in
fist
pop
ret
jmp
push
and
inc
outs
dec
icebp
outs
arpl
test
or
rol
push
out
in
lea
cmp
in
aam
push
mov
iret
mov
fcmovnb
mov
mov
push
mov
out
(bad)
out
inc
jmp
mov
pop
mov
iret
into
mov
call
in
inc
xchg
mov
inc
jo
cld
inc
lahf
cmp
or
add
push
add
scas
lods
mov
adc
call
fdivr
aad
xchg
sub
stc
cmp
mov
popf
xchg
cmp
add
and
aaa
mov
inc
xchg
xchg
aas
mov
cmp
rcl
fistp
pushf
cs
gs
adc
sbb
add
fisub
jg
mov
xchg
adc
loopne
jns
adc
out
xchg
push
neg
cmps
xchg
cld
movs
mov
mov
sbb
movs
inc
dec
sub
push
jmp
sub
xlat
nop
pop
dec
lods
sbb
mov
test
add
jne
(bad)
test
call
sbb
data16
mov
scas
popa
push
sub
mov
and
sub
(bad)
mov
inc
jae
in
scas
stc
xor
sbb
ins
jp
and
inc
enter
adc
pop
mov
bnd
sub
adc
inc
inc
shr
mov
aad
xchg
cdq
or
or
out
loop
xchg
hlt
mov
or
cmp
test
dec
sbb
jl
call
in
test
outs
jno
or
dec
test
sub
jmp
mov
(bad)
pop
iret
shr
mov
nop
(bad)
fwait
aad
mov
loopne
push
ja
dec
in
cwde
stos
xor
sbb
xor
jbe
movs
gs
je
pop
or
jge
inc
dec
ret
xchg
pop
jl
push
mov
and
(bad)
mov
cmovs
cmps
out
xchg
ret
dec
push
cmp
inc
mov
add
je
imul
je
pop
mov
jmp
mov
nop
adc
loope
xchg
out
adc
call
sahf
inc
pop
mov
and
xor
inc
movs
in
cmps
ret
cmp
imul
call
lods
lods
mov
or
jg
icebp
movs
mov
lea
ret
pop
imul
push
push
mov
dec
sbb
in
sbb
sub
mov
rcl
adc
sub
dec
ficom
or
retf
or
fdiv
scas
ret
loop
cmp
stc
jle
jnp
(bad)
dec
adc
jle
mov
jmp
adc
iret
mov
lea
fwait
int
sub
xor
popfw
mov
or
call
into
mov
popf
mov
in
pop
out
add
adc
inc
mov
sbb
cmps
add
rcr
pop
or
loopne
push
xchg
ret
jmp
dec
sub
cmp
lock
cld
mov
xchg
dec
cmps
pop
xchg
aaa
ficomp
pop
and
aad
pusha
outs
test
outs
data16
aaa
addr16
mov
inc
mov
stos
jae
loopne
push
and
and
inc
sbb
inc
es
dec
inc
jle
dec
xchg
cmp
xor
xor
enter
jle
inc
in
dec
inc
test
add
sar
push
in
mov
xor
dec
xor
div
jmp
mov
pop
outs
adc
cmp
sbb
adc
inc
mov
cmc
repnz
(bad)
adc
sbb
inc
sar
cdq
daa
inc
stos
rcr
and
pop
xchg
ret
dec
push
test
jmp
sahf
sbb
jg
popf
adc
addr16
(bad)
ins
shr
mov
sar
push
shl
loope
sbb
scas
(bad)
mov
adc
inc
xor
lea
lahf
fmul
add
movs
es
jle
fild
pop
push
add
outs
pop
pop
ins
sbb
sub
mov
movs
xchg
mov
add
sub
(bad)
cmp
inc
ins
outs
mov
ficom
daa
stos
cld
inc
sbb
stos
jle
xchg
and
jnp
mov
mov
xchg
aaa
inc
addr16
push
rcr
add
mov
retf
push
pop
out
iret
(bad)
in
movs
jg
and
mov
jmp
or
je
cdq
xor
shr
nop
gs
iret
repz
mov
xor
sub
aas
fistp
out
mov
call
leave
cdq
push
(bad)
mov
xchg
pop
sub
add
out
lods
and
lock
outs
pop
sub
push
(bad)
fcmovb
jmp
and
and
sbb
and
cli
arpl
sbb
dec
mov
ret
ret
out
sub
add
mov
nop
daa
lods
fcom
push
sbb
and
jmp
mov
jne
mov
mov
imul
mov
gs
push
sar
(bad)
ss
push
xchg
cwde
push
mov
xchg
rcr
mov
mov
mov
adc
fdiv
jmp
repz
in
shl
sub
call
pop
cdq
sub
mov
outs
stos
sti
xor
lods
div
jns
sahf
les
inc
ja
out
dec
in
in
rcl
xor
inc
xchg
pop
jmp
push
std
icebp
sahf
jl
les
sub
mov
aas
sub
pop
xlat
ror
sti
pop
(bad)
push
push
imul
push
jl
inc
fcomp
imul
out
call
stos
mov
push
imul
mov
mov
push
ss
sbb
xchg
adc
in
leave
sbb
xchg
push
call
cs
push
or
mov
jmp
inc
out
into
dec
out
loopne
mov
xchg
div
scas
push
lea
cmps
jnp
cmps
dec
jo
cmp
rcl
aaa
in
iret
stc
dec
hlt
daa
jmp
ja
ror
xchg
push
daa
mov
lahf
repz
lods
mov
or
xchg
add
mov
dec
sub
cmps
mov
fmul
xchg
clc
xor
mov
test
rcl
loop
mov
mov
fdivr
push
pop
xchg
retf
push
es
mov
sub
fwait
or
adc
inc
mov
add
data16
sub
xchg
das
pop
sub
pop
pop
gs
mov
xlat
add
scas
sub
into
or
add
aam
sar
(bad)
mov
inc
sbb
rcl
mov
popa
cmc
loop
fstp
push
sub
outs
cmp
test
xor
nop
jp
(bad)
add
in
push
arpl
jp
inc
jecxz
jp
mov
arpl
pop
xor
loopne
push
enter
dec
(bad)
(bad)
aas
es
out
movs
test
movs
push
mov
adc
int3
pop
push
sbb
add
push
xor
jl
fs
imul
dec
scas
adc
jg
lock
push
shl
(bad)
loopne
dec
outs
mov
mov
sub
sbb
xor
jmp
cmp
int
inc
arpl
dec
retf
loopne
ja
leave
call
test
inc
nop
shl
inc
xor
xchg
ret
adc
xchg
push
push
sub
jo
imul
mov
cmps
add
mov
mov
ffreep
dec
adc
imul
push
call
rcl
jg
pop
push
retf
repz
mov
cmp
scas
popa
retf
cs
test
lahf
fs
outs
sub
not
dec
pushf
lahf
retf
adc
push
mov
inc
dec
popa
lock
xor
inc
dec
mov
and
aas
push
add
ds
pop
xchg
mov
js
aam
and
bound
shr
and
(bad)
in
shl
dec
pop
xchg
mov
in
arpl
cmp
mov
xor
push
push
fistp
mov
mov
cmp
sub
int3
jo
push
adc
and
push
pop
cwde
push
lods
jnp
scas
in
mov
fadd
add
dec
mov
pop
not
sbb
xor
jl
adc
retf
and
lds
jmp
dec
jae
xor
dec
mov
jae
or
je
lahf
dec
pop
sub
ret
jp
push
sbb
jns
adc
cmps
sbb
enter
and
mov
pop
push
fnstcw
stos
cwde
movs
jge
enter
sub
sub
mov
arpl
ins
inc
cdq
outs
iret
push
push
into
xchg
int3
inc
sbb
xchg
cld
(bad)
adc
adc
mov
or
rcr
clc
outs
outs
cli
stc
mov
(bad)
mov
cli
call
sub
daa
inc
and
add
in
mov
jge
or
add
sbb
loopne
xchg
inc
outs
icebp
repnz
sbb
push
daa
push
xchg
and
daa
pop
popa
cmps
sbb
push
mov
(bad)
lahf
jmp
jp
or
ficomp
sub
je
out
retf
mov
movs
js
adc
cmp
mov
call
dec
and
movs
les
mov
movs
nop
push
sbb
or
iret
popa
(bad)
in
or
test
test
jno
(bad)
stos
scas
dec
jmp
push
mov
mov
adc
sbb
(bad)
cli
xchg
test
cdq
jle
ins
loopne
xchg
sbb
ret
arpl
jle
sub
dec
test
mov
inc
and
arpl
cmp
into
loope
push
jo
and
(bad)
(bad)
pop
ins
call
rcl
sub
call
into
daa
mov
cld
pushf
inc
std
or
xor
stos
mov
neg
and
je
lock
das
pop
jg
test
pop
mov
(bad)
add
into
(bad)
std
shl
add
xchg
or
mov
adc
fsub
fsubr
mov
dec
mov
in
dec
sub
jmp
in
mov
imul
xchg
std
pop
push
inc
push
nop
sbb
cmp
cli
jecxz
xchg
stos
xor
loopne
imul
add
mov
bound
test
mov
aad
mov
dec
mov
jmp
or
inc
pop
xchg
mov
and
xchg
sbb
xor
mov
xchg
ret
push
sub
arpl
ret
xchg
jecxz
jmp
lock
loopne
aad
imul
mov
ret
les
jl
add
mov
add
fsubr
xor
jb
push
mov
inc
adc
push
sub
xchg
ins
fwait
add
adc
inc
scas
or
inc
push
stos
inc
pop
sub
daa
sti
cmp
std
cmps
inc
push
adc
xchg
add
mov
dec
or
pop
mov
inc
test
push
sahf
cwde
and
pop
push
cwde
jnp
mov
pop
jae
jmp
or
js
pop
or
ins
ror
push
je
retf
sub
ret
(bad)
mov
ins
mov
mov
mov
test
inc
mov
pop
popa
dec
jno
out
scas
repz
call
xchg
mov
sbb
call
push
add
(bad)
dec
add
xlat
std
cmp
dec
pop
dec
add
cwde
pusha
test
aam
ja
mov
inc
fidiv
daa
and
push
adc
push
rcl
pushf
jno
push
dec
in
xchg
dec
retf
repnz
out
pop
dec
sbb
push
jnp
xor
retf
jmp
dec
cmps
mov
push
cmp
add
pop
cmp
vmovss
push
sar
push
retf
in
push
mov
sahf
sbb
push
pop
inc
fcomp
adc
or
in
imul
je
fs
imul
jmp
loope
in
push
(bad)
and
aad
or
jne
sub
jmp
add
jns
inc
ins
cmp
push
stos
push
xchg
inc
ins
mov
aas
mov
pusha
push
retf
push
das
cmps
stos
dec
add
xor
push
cmp
lock
and
jbe
cmp
fwait
and
adc
fs
mov
(bad)
lock
(bad)
push
arpl
movs
addr16
dec
test
xlat
cdq
push
and
xchg
fld
imul
ins
dec
cmp
xchg
je
sar
(bad)
std
call
adc
dec
pop
repz
push
cmp
push
popa
ret
jae
mov
sub
repz
int
test
not
and
jb
aam
xor
cmp
loope
add
push
mov
jae
push
mov
mov
out
ins
movs
add
movs
imul
sub
shl
popf
adc
out
(bad)
retf
and
add
mov
mov
mov
cdq
jmp
in
ds
icebp
push
push
sub
cmp
into
jno
(bad)
sub
sbb
ss
pop
jns
cmps
loopne
mov
pop
pop
fdivr
ficom
nop
mov
or
xor
sahf
add
or
jle
sbb
ret
dec
jg
lock
or
xor
jo
cmp
xor
sti
outs
jb
xor
in
outs
ror
mov
xchg
ret
push
(bad)
inc
jae
popf
pop
cmp
cwde
in
cmp
cdq
mov
(bad)
std
idiv
out
cdq
sbb
inc
push
clc
shr
jle
pop
dec
or
popf
fidiv
mov
jp
push
and
dec
imul
test
and
push
rcr
test
in
jae
mov
div
imul
cmps
jmp
xchg
xchg
mov
sub
(bad)
mov
xchg
jecxz
shl
mov
push
repz
or
jno
imul
fistp
(bad)
retf
push
je
jmp
dec
test
sti
retf
(bad)
jb
scas
push
or
nop
add
cmps
pop
dec
icebp
sahf
mov
data16
ss
fcomp
sbb
aad
cmp
inc
(bad)
pop
aad
push
inc
int
mov
xlat
cmp
sub
push
mov
shr
mov
sbb
call
cmp
mov
inc
lock
scas
aas
cs
ja
ret
sbb
sub
jmp
jno
push
push
shl
test
adc
mov
les
pop
std
jno
add
aas
lahf
inc
lahf
cmp
xchg
iret
(bad)
(bad)
jae
inc
in
inc
pop
mov
out
xchg
mov
push
push
mov
jmp
xor
imul
inc
jge
ss
ins
repnz
cmp
pop
pop
sub
cmp
inc
cmp
mov
(bad)
xchg
jp
in
repz
aad
ss
inc
je
and
call
fstp
test
jl
push
aad
pop
in
fild
fs
inc
fiadd
and
clc
jne
fmulp
gs
xor
mov
rcl
gs
and
push
dec
cmp
adc
push
aad
ret
test
rol
xchg
xchg
ret
jns
sub
lods
dec
repnz
push
pop
movs
cmp
mov
xchg
icebp
mov
mov
fbld
add
or
push
mov
pop
jmp
stc
scas
push
dec
inc
cmp
popa
ds
clc
test
jl
inc
(bad)
mov
mov
add
sub
icebp
sub
(bad)
jg
out
mov
cmp
test
(bad)
adc
push
fldenv
repz
popf
push
push
(bad)
sub
pusha
xlat
lods
(bad)
jge
xlat
and
sbb
fadd
scas
xor
aaa
pushf
popf
xor
mov
jo
int
lock
jle
xchg
mov
ror
(bad)
in
mov
ret
push
or
(bad)
ficom
and
mov
xor
or
push
mov
(bad)
iret
cmp
add
cmp
jno
fisubr
sbb
cwde
mov
xor
jle
int
sti
and
adc
sbb
push
add
call
lods
aad
mov
push
xchg
pop
inc
(bad)
fist
popf
add
mov
mov
push
xchg
or
leave
retf
sub
bnd
cmc
mov
jle
mov
jnp
jecxz
mov
add
sbb
pop
xchg
mov
test
lods
nop
je
cmps
jp
sub
sbb
pop
gs
iret
iret
jl
inc
or
(bad)
sbb
push
mov
test
xchg
mov
test
js
xchg
sub
mov
stos
add
and
push
in
movs
adc
inc
add
mov
in
pop
leave
call
or
loope
lods
or
js
inc
int
mov
aam
and
pop
add
bound
fimul
mov
dec
icebp
dec
fistp
jo
icebp
(bad)
jnp
stc
(bad)
repz
aam
lock
out
adc
gs
xchg
cmp
xchg
cmc
das
retf
in
xchg
outs
cmp
jbe
xchg
test
call
push
je
mov
bound
pop
aaa
imul
cwde
rol
push
pusha
pop
lahf
sub
(bad)
int
lods
in
ja
mov
es
call
or
ficom
shl
cmp
push
into
adc
das
mov
add
and
iret
cld
pop
(bad)
cmp
jae
out
xchg
jb
mov
les
loopne
cdq
in
or
adc
inc
jmp
xchg
ret
aaa
leave
mov
es
and
cdq
and
call
retf
ror
xor
ja
movs
jnp
dec
xchg
pusha
push
and
aad
mov
es
out
out
imul
fldpi
sub
mov
in
mul
cmp
(bad)
sub
push
dec
sub
repnz
test
test
addr16
add
and
or
pop
bound
jmp
cmps
sub
stc
(bad)
dec
and
cdq
push
lds
fist
out
xchg
shl
jne
test
int
out
jno
mov
add
or
lea
mov
or
mov
(bad)
retf
mov
pop
popa
push
pop
push
sbb
dec
lds
xor
shr
iret
mov
add
aas
out
out
enter
inc
outs
in
call
or
jg
cmp
mov
xchg
les
adc
fisubr
sub
cld
into
out
fst
pop
cdq
lds
imul
sbb
mov
es
push
dec
mov
int3
shr
adc
sbb
lods
push
push
sbb
sub
adc
ins
push
in
push
mov
or
inc
dec
(bad)
push
retf
mov
and
pop
cmp
xchg
mov
inc
loope
mov
or
sub
fist
xchg
scas
into
mov
sti
push
mov
or
cmp
mov
cmp
and
or
cmp
inc
or
pop
cmps
sbb
jle
cmc
sub
mov
stc
mov
movs
scas
dec
mov
mov
pop
(bad)
pop
or
cmp
add
out
(bad)
and
xchg
jb
retf
loope
mov
(bad)
sbb
mov
leave
adc
push
cmp
out
lahf
daa
sbb
into
cmps
sbb
loopne
test
pop
loope
pop
das
cmps
jne
push
test
dec
(bad)
mov
jno
sbb
out
xchg
sbb
pop
sub
jl
adc
cmp
lods
fnstsw
enter
fsubr
shl
lods
sbb
lahf
mov
retf
mov
jnp
add
rcl
sub
movs
mov
or
fs
shl
out
dec
fdivr
cli
in
jno
push
add
mov
xchg
adc
cmp
sub
popf
retf
sbb
sub
cmp
or
xchg
int3
outs
test
xchg
cmps
pop
mov
or
clc
popa
add
aad
push
mov
pushf
(bad)
push
jle
xchg
inc
pop
out
imul
mov
pusha
shr
fwait
push
cmp
add
pop
or
mov
mov
pop
shr
cdq
inc
cmc
sbb
cs
test
dec
xor
inc
lds
sub
popa
fimul
push
ja
in
mov
scas
mov
mov
mov
and
inc
test
sub
mov
lahf
sbb
pop
push
or
inc
lock
push
cmp
test
sbb
cwde
adc
outs
xor
push
push
mov
enter
xchg
call
push
ror
mov
push
mov
call
mov
inc
imul
test
and
add
lahf
and
jbe
lods
xchg
cwde
ret
fwait
clc
push
or
sbb
(bad)
sbb
(bad)
mov
sub
cwde
das
int
aas
pop
into
ins
(bad)
or
adc
ficom
mov
mov
mov
adc
loope
cwde
cmp
fdiv
push
dec
mov
adc
sahf
xchg
aas
stos
les
or
jbe
in
push
cld
fisttp
and
adc
inc
sub
test
inc
out
clc
push
mov
mov
push
test
sub
imul
inc
sub
push
cmps
cmc
and
jo
popa
inc
sub
int
push
xor
adc
sbb
pop
xor
in
push
xchg
retf
ret
sbb
and
dec
nop
cmp
lods
test
jp
pop
xchg
xchg
call
sbb
sbb
or
aad
add
pusha
popf
pop
movs
imul
mov
ret
and
lea
rol
mov
mov
sub
xlat
xchg
fmul
lahf
js
push
and
jbe
add
aas
xor
mov
xchg
and
dec
cdq
aam
inc
xchg
stos
enter
add
iret
fldenv
arpl
fs
pop
popf
lea
stos
push
fdivr
fcmovnu
out
mov
ss
and
hlt
adc
jg
adc
inc
adc
xor
jecxz
push
fimul
mov
adc
retf
ret
lock
jne
pop
xchg
mov
xlat
cmp
or
imul
out
lahf
ss
rol
les
out
shl
sti
inc
rol
push
xchg
xor
lods
add
and
add
pop
inc
sti
int
adc
xor
and
xchg
mov
je
test
cmps
push
cmp
jg
(bad)
push
and
mov
adc
cmc
and
shl
jmp
mov
xchg
adc
and
push
xchg
cmp
or
fsubr
add
daa
pop
jo
scas
jmp
mov
cdq
or
add
rol
sub
std
mov
in
test
jb
aam
sub
cmc
pop
imul
sub
fisttp
push
cmc
xor
frstor
lmsw
mov
adc
add
movs
dec
push
nop
lods
jb
dec
div
mov
jo
jae
lods
dec
cli
xchg
pop
ins
add
bound
jne
inc
iret
outs
pop
vmovntdq
ins
xchg
xlat
sbb
lea
add
inc
arpl
or
mul
repz
jo
sbb
ss
mov
bound
push
jnp
push
xor
or
jnp
lock
or
xor
cwde
inc
dec
imul
retf
jmp
lods
push
inc
sub
int3
jecxz
div
xchg
imul
cli
icebp
inc
add
sub
mov
cmp
out
sbb
xchg
sbb
and
inc
daa
lock
stc
add
icebp
mov
add
dec
add
fdiv
out
push
fidiv
cmp
cmp
fs
mov
sbb
mov
jmp
aam
scas
sahf
pop
xor
out
mov
xchg
push
mov
pop
imul
es
pop
pop
sub
jae
scas
out
fnstsw
fsub
mov
mov
push
fisttp
xor
test
dec
mov
jmp
js
test
xchg
in
push
fst
adc
jne
ret
inc
sbb
mov
aam
sbb
cs
jne
leave
sub
loop
scas
scas
call
push
mov
pop
dec
sbb
lods
xchg
(bad)
mov
test
lahf
(bad)
repz
sahf
and
or
push
popa
push
pop
jne
retf
movs
xor
xor
sub
push
mov
xor
jg
pop
mov
out
sub
xchg
xor
int
or
lods
xchg
add
pop
xor
jne
cmp
or
cmp
mov
cmp
in
pop
jmp
fs
gs
sbb
in
pop
scas
daa
sbb
lods
ss
div
push
or
jmp
sub
sbb
push
les
pop
fst
dec
jb
retf
outs
movs
ins
jb
or
and
mov
or
mov
(bad)
sar
sub
pop
dec
sti
call
inc
and
sub
jno
pop
cwde
inc
repnz
adc
pop
jmp
into
fist
add
or
sbb
cwde
lea
push
mov
neg
fst
inc
push
or
mov
xor
(bad)
fwait
jp
jmp
pop
cmp
xchg
das
jmp
ret
or
inc
cmp
pop
repz
aad
out
pop
add
sbb
aad
mov
in
cwde
mov
repnz
mov
test
test
loope
sub
lahf
inc
(bad)
leave
pop
test
fild
dec
in
psubq
cmp
sub
stos
sbb
mov
and
sub
je
add
loopne
stc
xchg
shr
push
int
push
dec
stos
pop
enterw
sub
outs
fdivr
outs
lea
push
mov
xchg
js
inc
xor
fild
xchg
add
sbb
sub
out
mov
lods
and
ds
mov
dec
jns
mov
dec
imul
fdiv
test
push
outs
inc
jnp
push
adc
cmc
mov
xchg
stos
push
iret
movs
add
rol
sbb
aam
inc
nop
dec
dec
or
sub
(bad)
pop
mov
jnp
scas
dec
ins
push
gs
call
xchg
test
stos
mov
clc
add
cwde
ret
and
lods
das
dec
and
fnstsw
outs
pop
cdq
test
mov
cmps
sub
add
xor
hlt
jae
mov
fild
and
in
inc
(bad)
fstp
push
lods
push
aas
jne
pop
xlat
into
idiv
sbb
or
fnsave
inc
shufps
mov
adc
cmp
(bad)
(bad)
jmp
loope
xchg
jmp
xchg
and
jmp
inc
das
or
mov
or
cmp
xchg
and
adc
jnp
into
lahf
inc
test
ss
cmp
lods
and
shl
pop
and
jmp
ja
call
mov
shr
ret
sub
dec
std
sti
mov
cmp
xor
aaa
inc
xchg
shr
icebp
push
ret
jecxz
cmp
je
ds
popf
push
push
int
sbb
xchg
xchg
add
pop
in
in
mov
in
mov
xchg
fild
push
lea
mov
inc
and
fdivr
ror
mov
(bad)
adc
movs
push
xor
jae
fild
ret
lea
sbb
sti
push
sub
cmp
ins
popa
inc
push
pop
ret
dec
xchg
xchg
pusha
mov
cmp
fdiv
and
out
add
pop
xchg
inc
aaa
popa
fild
rcr
(bad)
mov
out
push
inc
mov
jmp
cdq
into
add
lds
std
inc
mov
leave
lock
popa
jl
sbb
shr
(bad)
pop
push
cmp
pop
clc
jae
xor
or
repnz
cs
call
dec
fadd
or
mov
mov
stos
dec
cmps
pop
int3
pop
cld
mov
add
or
sar
outs
lock
daa
ins
sbb
imul
movs
loop
and
ja
imul
jo
mov
mov
inc
sub
fwait
mov
test
loope
sahf
jecxz
rcl
jbe
std
fst
inc
mov
jmp
les
dec
push
mov
icebp
mov
shr
shl
mov
adc
mov
cmps
xchg
push
ins
test
popa
ficomp
inc
or
sub
inc
jmp
jo
pushf
xchg
cs
test
(bad)
enter
dec
es
jbe
adc
xchg
dec
push
xor
(bad)
retf
fbld
mov
lock
sbb
scas
xor
jbe
dec
cmc
outs
mov
test
xor
pop
movs
xor
fs
ins
dec
push
js
mov
push
inc
fimul
sub
sbb
mov
mov
je
popf
xchg
ja
xchg
cs
adc
xchg
jmp
stos
mov
adc
pop
sub
ficomp
jbe
mov
xor
mulps
lods
lock
dec
xlat
jg
xor
push
icebp
mov
lock
fwait
sub
cwde
mov
add
aaa
push
pop
adc
adc
sub
sub
lock
movs
sti
cwde
ret
stc
mov
xor
push
mov
sbb
jmp
xchg
inc
sbb
les
pop
fiadd
pop
sbb
or
inc
idiv
push
adc
bound
ror
xor
and
mov
and
adc
mov
adc
das
(bad)
mov
mov
and
add
pop
icebp
jnp
mov
push
mov
sub
and
scas
mov
inc
(bad)
std
xchg
or
push
lods
out
jbe
iret
mov
push
or
adc
adc
mov
popf
icebp
sahf
cli
das
push
pop
retf
sti
(bad)
retf
icebp
rcr
ins
fwait
ret
bound
pop
mov
aad
mov
inc
or
fadd
sbb
pop
mov
shr
add
out
iret
jle
icebp
imul
dec
neg
xor
in
shr
sbb
(bad)
add
sbb
lods
movs
mov
mov
int
xor
xor
in
xchg
jl
and
gs
inc
jl
mov
stc
mov
adc
or
sub
mov
test
jmp
das
ret
inc
fbld
ret
fwait
fwait
xlat
lea
mov
call
mov
pop
and
dec
(bad)
clc
xchg
neg
push
and
or
ds
push
jecxz
hlt
sub
ret
xor
cmp
sub
movs
xor
and
jns
xlat
mov
cmp
adc
js
pop
push
mov
jae
mov
xor
inc
out
jecxz
lods
dec
outs
cmps
sbb
bound
jl
out
test
dec
(bad)
inc
dec
stc
inc
adc
push
xor
push
pop
dec
add
call
loopne
adc
jo
lea
fst
popa
mov
(bad)
and
ror
xchg
mov
mov
mov
sub
test
mov
shl
jns
(bad)
sar
add
xchg
sbb
add
jmp
mov
cmps
fnsave
cmp
pop
dec
pop
xchg
sbb
add
mov
pop
je
add
add
in
mov
push
jae
inc
pop
add
rcl
sbb
push
mov
add
lods
pop
call
cld
stc
lods
test
xor
inc
or
aam
cs
xor
push
xchg
add
in
inc
inc
mov
push
repnz
inc
xchg
pop
(bad)
pop
fwait
sbb
jbe
pop
sub
xchg
pusha
test
jbe
jnp
inc
in
out
inc
(bad)
mov
fwait
add
in
mov
sub
sub
fsubrp
test
xor
cmp
sub
add
rol
inc
xor
jge
cmp
sub
lock
out
push
jbe
ds
cmp
icebp
inc
dec
std
cmp
mov
fwait
stc
mov
pushf
xor
iret
aas
xchg
popf
mov
pop
ins
int
jne
mov
adc
movs
mov
dec
retf
std
retf
mov
or
and
sar
mov
fwait
xchg
cmp
dec
(bad)
xchg
or
jno
add
shr
xchg
push
leave
sar
mov
sti
jle
shr
inc
dec
icebp
out
mov
inc
repz
xor
mov
pop
add
jmp
pop
mov
test
test
fcom
sbb
stos
xor
mov
inc
(bad)
xlat
dec
lods
mov
out
mov
jge
jb
imul
sub
sub
into
clc
inc
sub
or
push
xlat
pop
div
xchg
pusha
ins
sub
inc
mov
cmp
sub
call
pop
rcl
loop
shl
add
mov
or
pushf
mov
ret
in
std
fild
jno
adc
xor
test
daa
call
repz
xchg
mov
(bad)
in
adc
mov
sub
idiv
call
lods
dec
xchg
jg
mov
sbb
(bad)
mov
cs
data16
jo
sar
push
shl
or
inc
jle
cmp
inc
adc
pop
test
pushf
adc
adc
ret
addr16
fwait
(bad)
sbb
scas
mov
adc
add
cli
je
pop
ja
jle
dec
and
pop
dec
shr
movs
(bad)
rol
pop
lods
test
jg
add
faddp
imul
jae
out
aaa
jo
pop
push
bound
(bad)
pop
(bad)
lea
js
sub
xchg
scas
es
xchg
sbb
and
add
imul
(bad)
clc
(bad)
pop
je
rcl
dec
cmp
add
mov
test
add
dec
das
mov
jns
frstor
fwait
fwait
push
pop
btr
push
fisub
repnz
push
mov
pop
(bad)
in
aam
sub
cmp
mov
shl
pop
in
push
xchg
rcl
sub
cmc
push
ret
stos
dec
lock
shl
cdq
and
mov
mov
pop
cwde
in
add
mov
and
xor
or
xor
cmps
push
xchg
dec
arpl
dec
mov
call
out
int
mov
aad
ss
ins
test
xchg
fcomp
sbb
cmp
xchg
push
jg
inc
test
lock
test
sbb
add
clc
jmp
iret
ins
xchg
mov
mov
dec
jno
cmp
outs
adc
pop
out
idiv
or
or
xchg
mov
test
sub
mov
or
mov
pop
push
sbb
add
pop
xor
add
fisub
jle
sbb
ins
dec
fst
dec
test
rcl
cmp
jns
pop
repz
xchg
call
jbe
movs
mov
out
mov
test
adc
or
push
inc
pop
out
test
mov
pause
push
ins
ror
dec
addr16
jnp
sar
std
or
xchg
mov
in
call
imul
(bad)
icebp
jle
jbe
fist
lds
ds
fsub
mov
imul
test
mov
mov
movs
sbb
jo
rcl
jns
fldenv
outs
or
pop
xor
aad
adc
(bad)
cli
push
xchg
mov
cmps
inc
fst
nop
icebp
xchg
(bad)
xor
jne
shl
clc
mov
mov
mov
adc
cmc
pop
scas
aam
shl
inc
xor
dec
js
outs
jg
cmp
stc
aas
mov
jmp
pop
sub
test
xor
jne
inc
cwde
push
(bad)
mov
movs
nop
mov
mov
and
sub
adc
sub
test
ss
or
sub
(bad)
ret
in
lock
xor
xchg
mov
fldcw
push
loope
out
mov
adc
mov
add
std
cmc
jge
std
inc
stc
or
mov
cmps
cmps
(bad)
xchg
scas
icebp
jp
je
push
sub
xor
inc
push
fisttp
inc
or
or
daa
es
mov
mov
pop
xor
fldcw
or
xchg
mov
cwde
rcr
mov
aam
jg
and
inc
js
hlt
sbb
jns
adc
ss
xchg
pusha
imul
lds
shl
push
dec
pop
loopne
xor
(bad)
stos
cs
nop
(bad)
das
jnp
push
mov
stos
daa
dec
shl
pop
lock
imul
fwait
psubusb
add
mov
leave
fild
mov
and
fdivr
mov
cmps
sti
jb
pop
scas
in
in
lds
sub
ret
aaa
test
mov
mov
mov
mov
stc
or
scas
xchg
cmp
(bad)
xor
scas
xchg
jmp
sub
jns
pop
neg
cmp
das
dec
sub
or
outs
inc
sbb
aas
mov
jb
fdivr
xor
xor
out
dec
in
jmp
leave
std
mov
fadd
push
push
dec
rcr
jns
mov
sub
lahf
mov
and
jmp
stc
xchg
cmps
jg
test
ror
push
(bad)
adc
(bad)
outs
dec
aad
xchg
(bad)
inc
dec
xor
pop
push
cdq
pop
cld
nop
jns
adc
outs
mov
xchg
adc
pusha
jno
rcl
imul
xor
dec
push
push
and
xchg
arpl
cdq
mov
dec
int
mov
test
mov
gs
test
push
addr16
or
out
jecxz
push
inc
pusha
movs
mov
les
cmps
(bad)
out
xor
scas
mov
xchg
test
add
out
stos
inc
adc
bound
mov
or
clc
in
dec
int3
nop
push
fsub
pusha
mov
dec
pop
jns
adc
sbb
xchg
outs
jle
add
fmul
push
sub
jecxz
jae
push
nop
xor
xor
or
outs
rol
aad
adc
sub
mov
ret
dec
lods
add
xchg
outs
xchg
std
cld
lea
aad
and
mov
cmc
mov
sti
add
xchg
stos
push
pop
adc
leave
dec
dec
enter
inc
push
loopne
pushf
jae
loope
and
fs
push
les
jle
adc
pop
push
sti
push
mov
xchg
mov
loope
pop
mov
pop
jle
inc
xchg
cdq
inc
or
push
mov
xor
and
mov
mov
xor
xchg
lods
jecxz
pushf
das
(bad)
mov
hlt
mov
mov
inc
gs
leave
jge
pop
jno
jbe
es
movs
sahf
sbb
cmp
test
les
loopne
pop
stc
pop
push
jbe
imul
xchg
lahf
in
xchg
shl
xlat
shr
shl
repz
jle
sub
xor
mov
in
mov
fs
scas
fcmovne
xchg
add
ds
sub
pop
mov
cmp
lods
sti
add
push
jmp
inc
jge
cmp
pushf
xlat
push
push
push
mov
mov
push
dec
fstp
retf
mov
aam
xor
mov
jmp
dec
ins
not
inc
popa
fimul
push
sub
inc
inc
fild
push
scas
ret
retf
aad
push
mov
mov
push
call
mov
xor
sbb
ficom
aad
sbb
ficomp
imul
mov
xchg
sub
push
inc
popf
pop
jl
es
in
shl
mov
shl
cmp
sub
xchg
retf
in
scas
cmp
jle
or
ret
lahf
push
cwde
sbb
or
cmps
mov
sub
sub
pop
iret
in
lock
in
stc
(bad)
movs
pop
clc
into
pop
xchg
shr
sub
cmp
bound
adc
jb
xchg
xor
add
das
cli
adc
mov
and
std
mov
sbb
jbe
fcmove
sti
mov
adc
aad
mov
daa
xchg
sub
repz
pop
or
je
cmp
inc
popf
sub
leave
xor
xchg
sbb
mov
mov
std
das
push
retf
xor
pop
or
pop
sti
adc
aaa
sub
popf
rol
push
mov
fidiv
push
push
mov
repnz
push
ds
cmp
scas
add
xor
mov
js
push
clc
out
dec
jge
inc
add
loopne
loopne
mov
mov
test
ficomp
bound
call
les
inc
test
xchg
fwait
pop
loope
inc
pop
(bad)
rcl
out
sub
sbb
xchg
mov
aad
rcr
cmp
dec
std
movs
push
sbb
push
(bad)
xchg
dec
ret
repnz
sbb
or
ffree
pop
or
data16
push
test
clc
or
jmp
out
pop
lods
call
adc
movs
add
aad
and
lock
aaa
rcl
mov
cmp
jle
and
and
sub
dec
and
setp
lods
fdecstp
pop
ss
or
imul
aad
mov
leave
jle
pop
imul
mov
(bad)
out
data16
lss
and
push
sbb
sbb
sbb
push
jno
xor
push
mov
outs
addr16
inc
mov
clc
xor
pop
jmp
xchg
test
scas
mov
jmp
daa
and
jge
imul
pop
fwait
arpl
(bad)
iret
adc
mov
cmps
es
std
adc
mov
scas
mov
call
pop
xchg
mov
outs
mov
loop
cmp
sub
loopne
test
ja
jle
js
jmp
fwait
aaa
std
jnp
and
pop
ins
repnz
outs
mov
scas
retf
dec
sub
mov
adc
(bad)
mov
inc
pop
pop
cwde
in
pop
cs
out
in
pop
pop
cmc
leave
test
xchg
xchg
cmps
cld
shl
stos
pop
jo
lock
(bad)
in
cld
pop
(bad)
cmp
lds
lock
dec
jnp
ds
repz
enter
ds
cmps
mov
neg
mov
sbb
cld
movs
push
inc
cmp
jmp
aaa
not
xchg
aas
(bad)
fs
mov
ror
pop
mov
mov
add
ffree
inc
pop
std
sbb
mov
repnz
inc
jmp
dec
dec
scas
fs
in
or
aad
popa
or
inc
inc
dec
stos
pop
cmps
xchg
je
pop
mov
test
xchg
or
ds
dec
jb
stos
or
mov
or
shld
je
sbb
outs
popf
imul
xlat
(bad)
ror
das
jle
push
add
or
mov
je
rol
inc
bound
stos
dec
ret
and
lds
mov
inc
push
mov
and
jecxz
imul
in
pop
jle
sbb
in
outs
pop
add
cdq
outs
aad
xrelease
fimul
pop
sbb
push
cmps
push
xor
ret
jge
rcr
pop
pop
mov
sahf
ds
mov
test
mov
jne
or
lock
mov
imul
adc
pop
nop
ret
jns
jo
mov
xchg
repnz
pop
addr16
xor
adc
pop
enter
add
inc
pusha
stos
push
setne
out
in
aam
jle
sub
out
sbb
out
test
push
push
jo
fdivr
or
outs
mov
jmp
xor
and
mov
sbb
mov
inc
mov
(bad)
mov
inc
test
cmp
mov
pusha
mov
rol
adc
cld
xchg
and
dec
fwait
in
inc
cmc
aas
int3
xchg
stos
es
mov
add
jmp
arpl
inc
mov
jge
sbb
rol
xchg
test
ret
scas
(bad)
(bad)
push
(bad)
push
inc
jge
lock
(bad)
mov
ins
inc
jle
inc
aas
cmc
test
test
jb
pop
pop
outs
or
jns
push
jmp
push
cmp
outs
pop
sti
cdq
add
pop
mov
jl
adc
mov
pop
xor
arpl
xor
jo
mov
leave
out
ss
retf
lods
mov
fwait
jecxz
xchg
jae
push
sti
fs
mov
mov
loop
not
inc
sbb
fs
mov
cmps
imul
sbb
cmc
pop
and
mov
lods
adc
pop
das
in
into
pop
cmp
shl
je
and
dec
or
xlat
data16
and
data16
xor
jo
cmp
es
aas
leave
shr
xor
or
aam
add
jge
fstp
cli
fisttp
loop
ins
in
jmp
imul
or
loop
pop
ja
stc
cmp
imul
jg
mov
add
out
scas
sti
int3
sbb
or
ja
popf
jns
jmp
add
loop
retf
lods
sub
loopne
push
in
mov
in
mov
pop
sahf
nop
loope
aaa
out
stos
mov
cld
push
loopne
mov
test
add
stos
sahf
fld
sahf
iret
out
adc
and
pop
(bad)
retf
or
jecxz
into
dec
loope
shl
clc
iret
inc
and
push
sbb
test
out
test
cwde
adc
ds
jg
sbb
or
dec
les
test
inc
cmps
fisttp
and
leave
icebp
fild
jl
pop
(bad)
sbb
loopne
dec
push
mov
sub
mov
arpl
sub
ret
dec
jo
mov
es
pop
aas
and
cmc
add
cmp
out
jno
jmp
dec
ss
dec
ror
xchg
xor
test
xchg
cwde
inc
or
sahf
or
sbb
xor
daa
sub
jecxz
jb
xor
push
push
sub
(bad)
in
pusha
out
xchg
rol
add
lds
adc
ins
mov
dec
push
fisttp
pop
fs
leave
xor
mov
mov
mov
test
aam
mov
outs
jmp
pop
shl
ror
nop
test
test
adc
(bad)
fnstenv
mov
add
test
scas
(bad)
jne
adc
adc
jo
add
add
les
loop
pop
sub
inc
test
jmp
loopne
inc
(bad)
push
je
jecxz
lahf
mov
nop
push
mov
jnp
cmp
mov
mul
mov
mov
cmp
and
(bad)
aas
and
ret
xchg
xchg
push
and
sahf
js
lds
lahf
pop
movs
mov
das
cdq
cdq
rcl
cmp
add
mov
add
jno
mov
adc
aas
cmp
nop
jbe
imul
fbld
sbb
mov
fs
cmps
cmp
xchg
inc
cmc
or
ins
or
pop
addr16
das
inc
and
mul
mov
sub
lahf
adc
mov
stc
sub
loop
cmc
sub
sub
xchg
dec
mov
imul
popa
popf
mov
mov
fnstenv
icebp
mov
sbb
xor
ins
add
pop
lock
icebp
adc
ss
div
xor
daa
sbb
add
int
sub
out
call
xlat
fucomi
xchg
pop
fst
cmps
mov
das
das
sub
xchg
pop
sub
int
cmp
fst
xchg
fistp
jns
imul
sbb
repnz
or
inc
mov
sahf
repz
retf
and
loopne
xor
xor
jmp
div
movs
add
retf
sbb
pop
frstor
repz
lods
data16
ins
and
pusha
pop
gs
and
(bad)
xlat
lock
inc
mul
jp
lods
bound
jo
mov
cmp
xor
mov
push
je
das
mov
(bad)
push
jns
les
imul
xor
dec
xor
sub
xchg
push
ja
push
mov
cmp
xchg
and
imul
mov
xor
hlt
in
adc
mov
aaa
movs
mul
pop
jle
fwait
cmp
mov
sbb
xor
stos
(bad)
shl
jg
pop
sbb
dec
sti
out
xor
lock
test
data16
xor
or
sub
mov
sar
jecxz
jl
dec
sbb
mov
or
pop
jb
adc
mov
cld
outs
mov
fwait
ja
sub
stos
shr
ret
ss
xor
sti
(bad)
bound
neg
push
mov
dec
inc
and
aam
mov
sub
fadd
pop
int3
gs
popf
sub
mov
sub
rcr
inc
cmps
add
pop
arpl
fbld
or
jmp
cdq
sbb
lods
sub
xchg
mov
in
lds
ins
jmp
call
pop
cmp
push
mov
inc
and
into
sahf
iret
mov
sahf
cmps
popf
in
or
jg
mov
ret
sbb
cmp
cdq
es
stos
ins
(bad)
mov
mov
(bad)
push
stos
xchg
std
ja
adc
and
outs
bound
sbb
das
inc
jno
(bad)
lahf
push
ror
enter
jp
lahf
clc
sbb
mov
xchg
adc
xor
and
mov
les
push
jecxz
cmp
add
cmp
dec
sub
push
mov
and
jecxz
cs
mov
icebp
inc
inc
inc
push
popf
add
das
sahf
add
xor
dec
jl
in
pusha
sbb
fs
dec
loope
mov
test
and
(bad)
sbb
mov
dec
xchg
bound
mov
sbb
ins
mov
pusha
xchg
sti
movs
fidivr
mov
shl
out
popa
jbe
mov
dec
jo
sbb
inc
movs
pop
and
pop
mov
or
inc
ficom
sub
sub
(bad)
mul
mov
pop
xor
jne
adc
cmc
or
cs
sbb
and
xchg
add
scas
rol
movs
xor
movs
xor
push
test
push
shl
bound
aad
sbb
mov
test
sub
(bad)
lds
call
das
dec
inc
aam
dec
lds
nop
xlat
pop
repnz
cmp
or
fwait
les
push
shl
cdq
scas
aaa
ret
or
ret
cmp
shl
jne
xchg
bound
and
xor
les
adc
mov
or
or
jns
mov
(bad)
sti
ret
xor
(bad)
mov
inc
rcl
pusha
fst
xchg
mov
xor
xchg
add
dec
(bad)
ffree
and
popa
xor
mov
retf
pop
inc
pop
int3
add
mov
pop
sub
addr16
retf
inc
or
pop
enter
dec
inc
and
movs
mov
nop
or
fistp
mov
adc
mul
popa
clc
cwde
scas
xor
xlat
loop
push
and
jbe
scas
fwait
(bad)
pop
into
ja
pushf
jnp
retf
lds
int
sahf
int3
cmp
sub
cli
not
push
dec
and
jo
fst
and
pop
or
dec
xor
ficomp
add
xchg
pop
clc
xor
leave
push
fwait
sti
adc
push
xchg
into
mov
cld
mov
sbb
sub
scas
shr
dec
xchg
sbb
jbe
jmp
cs
push
clc
mov
ja
xlat
jne
jecxz
push
mov
pop
mov
xchg
lods
popa
fldlg2
inc
test
push
inc
add
push
loope
fbstp
fwait
or
jmp
loop
cmp
fdivr
fisttp
lea
bound
add
ss
cmp
add
int3
jmp
lods
sbb
movs
cmps
lods
xchg
cli
mov
push
(bad)
inc
in
and
sub
es
inc
(bad)
loop
cmp
test
cli
push
push
push
mov
mov
shld
pop
ret
mov
push
add
rcl
cmp
test
push
iret
jae
add
repnz
inc
lea
fdiv
jnp
push
adc
retf
movs
dec
mov
push
mov
in
mov
xlat
mov
loope
loope
sbb
cmp
push
or
mov
out
xchg
leave
retf
les
cld
dec
push
xchg
movs
hlt
fimul
jbe
shr
div
push
into
(bad)
cmp
mov
jmp
cmp
push
data16
push
repnz
mov
ins
fld
into
cmp
xor
lock
outs
mov
sub
ins
out
add
stos
fimul
cwde
pop
sub
(bad)
lahf
jns
cli
iret
or
aam
movs
mov
jmp
in
mov
dec
out
fisubr
xchg
into
push
xchg
ss
jmp
mov
jne
cmp
movs
adc
adc
clc
inc
(bad)
std
retf
mov
sub
in
mov
mov
int
sub
test
mov
add
xor
ss
pop
inc
arpl
hlt
and
rcl
fimul
(bad)
mov
ins
es
adc
lods
daa
int
bound
movs
jnp
(bad)
mov
test
cmp
pop
adc
jle
sar
pop
ret
(bad)
xor
adc
rcr
arpl
ret
ins
inc
call
mov
leave
ror
aas
mov
out
fidivr
aam
xor
ret
push
pop
cmp
xchg
fst
ins
mov
xor
pop
mov
xor
and
cdq
out
inc
loop
imul
jae
xchg
js
cs
mov
or
push
jmp
inc
cld
adc
sbb
inc
in
add
jbe
stos
out
xor
push
outs
cmc
dec
ret
hlt
sub
or
pop
aam
cmp
dec
sbb
int3
jl
jns
cmp
adc
and
pop
cmp
jl
dec
test
push
scas
lods
mov
adc
int3
and
add
or
pop
xor
clc
mov
jae
out
push
mov
call
cmp
jnp
out
sbb
sub
or
ret
cli
cmp
daa
arpl
xchg
dec
add
mov
xchg
dec
jl
xchg
ins
ja
data16
test
sub
stos
xchg
push
adc
stos
dec
inc
(bad)
and
out
push
sub
loope
dec
mov
out
xchg
mov
sub
push
sub
repz
jmp
ret
xchg
fistp
enter
test
fidiv
jp
icebp
or
call
pop
pop
stos
mov
jmp
mov
inc
fwait
pop
cmp
mov
out
pop
jnp
push
add
jecxz
cli
shl
push
adc
inc
jmp
cld
pushfw
in
jmp
cmp
pop
call
(bad)
push
or
jo
jns
shl
lea
(bad)
stos
sbb
out
push
jae
outs
and
dec
out
sbb
popa
ret
xor
xor
adc
and
jecxz
jo
xlat
movs
inc
inc
or
sbb
or
jo
push
test
in
mov
mov
jl
push
push
jp
int3
mov
jns
les
mov
xor
or
mov
aas
mov
les
arpl
std
ss
dec
jns
push
mov
adc
push
pop
pop
cmp
sahf
leave
jle
in
push
fist
pop
cmp
pop
mov
outs
adc
ret
xor
push
shl
ror
ds
xchg
add
out
pop
and
stos
clc
sbb
test
push
push
repnz
pop
mov
test
pop
dec
mov
test
xchg
test
push
outs
iret
mov
stos
js
xchg
pop
add
mov
mov
sahf
cmp
adc
not
or
test
and
fsubp
int3
mov
fdivr
pusha
mov
adc
dec
xchg
cmp
pop
shl
pop
pop
test
stos
xchg
jo
inc
ret
sub
ror
aas
outs
and
mov
ins
pop
sbb
outs
pop
sbb
xchg
addr16
or
jo
lods
dec
pop
jl
pushf
or
fincstp
mov
mul
out
cmp
adc
ss
addr16
dec
jmp
sub
push
pop
add
fcomp
or
loopne
inc
xor
bound
xlat
mov
ss
aad
loop
mov
adc
test
sbb
push
jns
inc
stos
fistp
sti
lea
mov
mov
test
loop
dec
in
pop
sar
jbe
mov
daa
stos
sub
in
stc
xor
mov
int
mov
add
xchg
clc
push
xor
mov
shl
stc
shl
pop
mov
les
pop
cmps
(bad)
shl
dec
repz
cdq
sbb
and
repz
adc
pop
xor
dec
mov
push
xor
xchg
xchg
out
cmps
push
cmp
addr16
mov
aaa
pop
sub
sub
cmp
xor
mov
inc
cwde
dec
mov
cmp
call
(bad)
push
dec
addr16
into
pushf
mov
push
jbe
mov
mov
retf
push
rcl
mov
movs
inc
mov
ja
imul
loop
in
push
inc
jnp
mov
inc
pusha
cmp
inc
retf
or
popf
nop
sbb
and
out
lock
test
or
push
stos
inc
cmp
(bad)
fcompp
jmp
fcomp
mov
lds
pop
cmp
ret
sub
scas
shl
or
mov
idiv
(bad)
fcomp
sub
mov
mov
in
ret
mov
jge
mov
adc
rcr
gs
push
or
mov
sub
(bad)
xchg
inc
adc
dec
add
arpl
push
add
mov
mov
scas
dec
jno
call
je
cwde
imul
retf
dec
repnz
mov
inc
imul
jnp
scas
and
jbe
neg
or
shl
push
push
(bad)
mov
ja
mov
loopne
jno
push
inc
(bad)
cmp
std
jge
or
out
jns
mov
int
dec
imul
add
push
add
aaa
xchg
clc
xor
sti
(bad)
xor
loop
mov
adc
sbb
js
dec
xor
sub
hlt
ds
adc
or
dec
sti
adc
xchg
div
push
xchg
gs
sub
es
lock
mov
scas
inc
pushf
leave
xchg
xor
xor
lods
into
sbb
mov
mov
push
jle
stc
aas
mov
daa
fcom
inc
outs
jp
rcr
add
aas
cmp
pop
push
retf
or
pop
enter
and
sub
iret
jg
test
test
das
xchg
sbb
jge
push
lods
and
jb
ins
call
scas
cld
imul
xchg
mov
in
outs
cmc
cwde
sbb
mov
shl
repz
mov
sbb
xor
inc
cli
and
cdq
ss
fimul
test
sbb
lods
sbb
add
push
mov
xor
clc
mov
mov
adc
mov
xor
add
xor
enter
test
movs
inc
cld
pushf
xchg
mov
inc
ds
in
pop
imul
push
cmp
pop
xlat
sbb
imul
add
shr
push
jle
popa
or
in
xlat
arpl
adc
cmp
mov
mov
push
jb
xchg
xchg
out
cs
sub
add
sub
ins
sub
pop
cmps
xlat
dec
sar
call
icebp
sub
and
retf
lock
cdq
inc
cli
ss
dec
add
je
xor
(bad)
fisttp
dec
push
lock
mov
sub
xchg
sbb
mov
pop
stc
scas
jge
pop
ja
add
sub
dec
xor
call
scas
dec
xchg
mov
std
jno
sub
inc
cmc
and
mov
adc
mov
sbb
push
dec
stos
pop
pop
adc
aam
add
outs
repnz
mov
movs
mov
push
cmp
mov
adc
pop
mov
lea
out
adc
popa
jae
std
mov
icebp
add
std
dec
add
or
repnz
inc
ins
lahf
in
sub
lahf
je
mov
mov
sub
(bad)
mov
in
(bad)
push
out
mov
test
xchg
pop
or
dec
mov
loope
sbb
das
rcl
pop
mov
into
gs
out
push
and
cmp
push
dec
sub
cwde
rcl
js
fstp
frstor
add
adc
fdiv
or
bound
dec
repnz
retf
xchg
xor
fs
leave
dec
arpl
in
aas
es
jg
lods
and
pop
cdq
add
mov
or
dec
loopne
in
and
push
jnp
cmp
(bad)
addr16
push
lahf
adc
and
add
mov
xchg
inc
lock
adc
mov
mov
imul
stos
dec
nop
sahf
shl
mov
jo
pusha
loopne
pop
icebp
sub
les
lds
imul
lahf
ss
and
stos
xor
mov
inc
xor
clc
jp
sub
cmps
xlat
jbe
rcr
push
xor
not
fdiv
cmp
in
jge
ds
push
ds
add
mov
adc
sbb
pop
daa
pop
mov
push
xchg
outs
int
inc
push
enter
push
and
popf
aad
(bad)
or
or
dec
outs
push
xchg
retf
pop
sbb
sbb
cmp
sub
sub
mov
mov
mov
pop
and
ins
es
loope
in
les
cmp
shl
mov
(bad)
xor
cmc
mov
mov
mov
mov
sub
sbb
adc
out
repz
inc
jo
dec
ja
mov
push
daa
sahf
add
sbb
sub
iret
ins
add
xchg
mov
(bad)
cmc
xor
hlt
(bad)
cmp
mov
mov
repz
add
int3
pop
dec
jbe
ficomp
fldenv
inc
mov
mov
sub
lds
enter
push
repz
mov
xchg
jg
jmp
mov
test
jbe
jne
or
ss
cli
mov
mov
iret
loop
and
sbb
in
jecxz
je
pop
test
lock
jmp
inc
rol
fst
push
mov
es
shl
(bad)
jmp
sub
xor
clc
leave
mov
pop
push
adc
xchg
fwait
ins
daa
cmp
xchg
jae
dec
jo
aas
or
xchg
cmp
shr
jmp
mov
sti
adc
inc
and
int3
ins
add
pop
mov
sbb
mov
cmps
adc
mov
jb
lock
cmp
jb
iret
inc
add
adc
out
popf
test
clc
adc
ins
adc
dec
mov
fdiv
lea
fnstcw
sbb
mov
int3
and
mov
mov
(bad)
leave
push
xor
and
fsubrp
scas
push
cld
push
cdq
jnp
and
sbb
push
retf
and
popa
aaa
sub
xchg
xchg
pop
push
push
mov
pop
ret
mov
and
repz
push
bnd
jge
push
pushf
aam
mov
sub
out
cmc
cmp
xchg
push
shl
push
or
iret
jmp
(bad)
fistp
inc
out
mov
mov
adc
inc
jmp
cs
pop
rcl
cs
mov
fidiv
(bad)
jnp
pop
push
or
fst
jge
dec
jmp
leave
ss
adc
jbe
jae
jmp
cmp
das
cmp
fdiv
cmc
push
add
out
cmp
out
ins
out
xor
xchg
in
cmp
jno
(bad)
jno
cmc
pop
fstp
push
dec
call
scas
int
add
scas
pop
jmp
jb
push
movs
jbe
or
push
dec
dec
stos
das
push
sahf
std
(bad)
dec
sub
push
std
sub
data16
pop
sub
xor
mov
jmp
jae
cs
setb
xor
push
(bad)
(bad)
push
or
std
mov
aad
sahf
int3
test
test
inc
repz
nop
iret
jb
loop
icebp
mov
shl
and
dec
pop
xchg
sbb
fisub
mov
or
leave
mov
or
int
repz
sbb
in
stos
leave
xchg
mov
aam
outs
lock
adc
fptan
dec
add
int
lock
and
or
cwde
sub
cmc
jns
mov
bsr
mov
nop
adc
inc
(bad)
cli
(bad)
push
imul
mov
adc
jge
xchg
cmp
push
xchg
mov
dec
jge
(bad)
pop
lods
push
icebp
hlt
mov
mov
mov
cmp
movs
retf
pop
imul
inc
jnp
lock
pop
fistp
add
mov
inc
cmps
test
stos
movs
or
jbe
push
cmp
xchg
and
fndisi(8087
pop
inc
out
test
mov
sub
hlt
or
mov
jno
cwde
mov
out
in
iret
pop
or
inc
test
arpl
sbb
test
sub
aas
push
push
mov
scas
mov
repz
cld
and
pop
iret
mov
pop
pop
pushf
dec
xchg
mov
xor
pop
jo
popa
add
lock
sub
lea
pop
imul
sub
jle
or
jp
add
cmp
stos
cli
ja
push
xchg
fld
fnstenv
loop
test
out
fucomip
into
leave
add
jg
ins
nop
xchg
lea
mov
iret
mov
xor
mov
nop
clc
cmp
or
sbb
mov
mov
sbb
clc
ss
iret
sub
daa
pop
cmp
jmp
enter
pop
popa
clc
rcl
sbb
jl
enter
dec
addr16
push
xor
adc
mov
popf
add
pop
cmp
ja
retfw
add
pop
mov
aad
cmp
push
cwde
fmul
stos
inc
add
mov
cld
or
jns
jb
cdq
jmp
add
pushf
inc
pop
lods
ds
cmps
sbb
add
dec
movs
addr16
sub
icebp
retf
ins
movs
(bad)
stos
cmc
rcl
mov
call
pop
clc
cmp
dec
inc
push
hlt
outs
pop
pop
popa
cmp
imul
movs
jle
or
push
jno
mov
rcl
sbb
mov
cmp
and
jno
cmps
inc
add
(bad)
aas
mov
out
ja
gs
sbb
inc
mov
inc
jmp
inc
shr
in
fbstp
xchg
inc
aam
add
xchg
mov
scas
pusha
hlt
cmp
and
fdivp
scas
cwde
mov
xor
mov
aad
add
mov
lods
icebp
rcl
cpuid
pop
jo
jecxz
shr
jns
push
fbstp
mov
jo
dec
and
cmp
mov
stos
in
xor
(bad)
pusha
mov
xchg
mov
xchg
add
call
sub
sbb
ret
(bad)
clc
sub
cmp
push
push
cwde
xor
sti
push
and
shr
and
pop
xlat
mov
pop
stos
pop
(bad)
call
and
outs
jge
cmp
mov
leave
or
je
clc
es
dec
fistp
pop
ds
daa
add
ror
pusha
pop
pushf
and
xor
mov
pop
test
and
cmps
out
dec
les
ret
sbb
push
sub
jae
push
into
jg
jmp
mov
outs
(bad)
out
gs
scas
mov
jg
pushf
pop
push
adc
ret
test
jmp
popf
mov
mov
fsubr
and
mov
repz
(bad)
sub
pop
sbb
ficom
lods
lock
jle
or
sub
fild
cmp
xchg
pop
xchg
mov
jnp
ja
leave
dec
or
inc
jg
loope
adc
cmp
adc
jo
enter
mov
mov
aaa
movs
shr
mov
outs
call
pop
daa
jb
test
enter
mov
or
cld
repnz
mov
repnz
push
push
mov
call
sub
jae
xor
mov
fstp
call
idiv
or
mov
mov
xchg
fmul
cmps
mov
sar
dec
stc
or
je
add
inc
fiadd
pop
bound
mov
test
outs
mov
sti
call
outs
(bad)
cli
aas
stc
mov
pop
loop
(bad)
cmps
or
jne
lds
and
xchg
ss
(bad)
lahf
mov
cmp
repz
mov
xor
push
push
mov
dec
clc
scas
cwde
inc
xchg
push
mov
add
das
push
sub
sub
adc
mov
adc
out
bound
mov
and
and
addr16
aad
cmp
jle
and
iret
hlt
js
push
lahf
into
or
cmp
ins
jae
stc
fnsave
or
sbb
cmps
mov
pop
stc
push
movs
fstp
push
dec
dec
call
jo
ss
fs
mov
std
sbb
daa
test
push
xchg
dec
js
(bad)
cmp
jno
into
movs
xchg
dec
or
scas
ds
jns
les
je
and
ret
out
push
inc
xor
add
adc
and
xchg
pop
std
pop
jo
fcomp
test
sbb
xor
jge
jmp
jbe
push
xor
mov
adc
cmp
mov
mov
adc
cmp
pushf
xor
mov
clc
dec
fldcw
or
lods
cmps
leave
dec
loopne
add
pop
sbb
mov
arpl
jle
or
push
or
and
je
push
aam
outs
cmp
or
ins
loope
mov
and
xchg
in
(bad)
cmp
fwait
dec
jo
mov
lods
mov
sbb
call
adc
jnp
or
add
push
add
inc
lock
inc
gs
(bad)
cwde
imul
aas
out
xchg
cwde
mov
lock
pop
push
jle
fdivr
mov
mov
test
pop
imul
cdq
sti
xchg
mov
sbb
or
mov
add
outs
mov
test
or
or
out
mov
mov
sbb
mov
inc
leave
adc
inc
cmp
lds
jmp
jne
pushf
ret
push
inc
ret
repnz
xor
(bad)
les
adc
cmp
xlat
adc
and
mov
inc
fadd
test
mov
add
push
aas
push
in
repz
sbb
pop
push
fs
jp
mov
cli
inc
or
mov
addr16
ja
enter
test
nop
sbb
retf
in
jo
cmp
xchg
nop
jb
imul
adc
mov
inc
stos
inc
mov
add
push
push
ja
and
loop
sbb
(bad)
shl
hlt
jb
outs
test
or
push
cmps
or
out
sbb
cmp
jecxz
add
jge
movs
xlat
scas
in
mov
adc
and
ss
pop
dec
dec
(bad)
es
jbe
adc
xchg
adc
and
mov
cld
add
sbb
out
int
adc
xchg
inc
xchg
jno
out
jns
mov
sub
mov
clc
outs
dec
pop
mov
sbb
and
out
int
sahf
aam
xchg
mov
jno
cli
mov
test
and
xchg
clc
add
(bad)
loope
mov
data16
sbb
inc
arpl
add
cmp
xlat
xchg
cmp
xor
pushf
arpl
(bad)
lds
cld
cmp
sbb
or
inc
stos
in
les
add
mov
enter
inc
outs
sbb
in
(bad)
mov
mov
push
gs
mov
repnz
rol
push
mov
adc
xchg
cmc
jae
xchg
call
xchg
(bad)
rol
gs
out
(bad)
cmp
sbb
push
xchg
mov
xor
mov
mov
push
xchg
add
adc
test
jne
cmp
dec
stc
push
ret
or
dec
and
inc
jne
xchg
pop
adc
movs
dec
ud2
cld
or
(bad)
jecxz
lock
leave
push
cmp
mov
inc
into
mov
add
mov
mov
dec
std
jnp
push
sub
mov
test
es
adc
xchg
xchg
push
scas
pop
mov
sub
sub
pushw
fsubr
repz
lock
jno
enter
adc
not
push
jmp
push
aas
jg
push
jnp
int
fild
jmp
push
xor
loope
pop
pop
push
xchg
out
xchg
loope
xlat
mov
and
add
xchg
into
and
add
test
scas
sbb
cmps
adc
jmp
sbb
mov
xchg
or
out
sar
pop
dec
sar
(bad)
or
dec
outs
push
adc
xchg
mov
sub
sbb
stos
ret
clc
cwde
xchg
mov
pop
sbb
imul
dec
cmp
int3
and
cmp
mov
mov
cmps
push
xor
pop
lds
and
and
add
aaa
inc
cmp
mov
and
adc
int3
daa
jg
into
xchg
inc
cmp
cli
mov
push
jle
aad
sbb
std
cmp
std
fcos
or
xchg
lahf
imul
enter
dec
mov
fst
bound
cdq
mov
movs
and
stos
rdtsc
mov
add
jns
fwait
jbe
cmps
loope
aas
dec
sbb
push
inc
js
inc
and
sub
mov
retf
mov
sbb
or
ret
push
pop
bound
daa
adc
sahf
sub
aas
test
(bad)
xor
or
out
cmp
pop
xor
cld
xchg
dec
push
popf
in
sbb
xchg
or
pop
jle
sbb
mov
push
aas
mov
sbb
mov
xor
and
dec
in
pop
inc
stc
daa
sbb
or
jns
push
cdq
lock
outs
cmp
pop
add
es
test
out
xor
retf
jae
mov
dec
popa
bound
dec
fist
add
inc
stos
jg
nop
retf
test
(bad)
jne
or
xor
mov
outs
aas
lds
outs
xor
pushf
shr
sbb
inc
sbb
sbb
cmp
mov
xchg
pushf
fist
out
mov
ins
adc
jb
and
out
push
movs
pop
push
xchg
push
xor
test
mov
push
imul
xor
adc
adc
cmp
xchg
rcr
ja
test
cmps
shl
add
jno
clc
popf
jecxz
lock
mov
test
fiadd
cli
call
je
mov
sbb
dec
ins
out
lods
dec
inc
arpl
ins
int
jmp
inc
mov
adc
das
push
pop
sbb
bound
pop
aad
inc
(bad)
stos
pop
fstp
sub
pusha
jmp
mov
and
std
stos
and
or
loope
imul
leave
movs
iret
jp
xchg
test
and
adc
loope
jge
inc
xor
hlt
mov
xchg
mov
sub
(bad)
and
rep
movs
int3
push
shl
lea
dec
not
push
push
xor
jno
cld
sub
ret
jge
and
arpl
ds
add
jl
inc
push
retf
mov
pusha
out
outs
aaa
out
imul
pop
fwait
cmp
sbb
lfs
arpl
sub
mov
pop
adc
out
dec
rcl
icebp
sub
inc
sub
xor
ja
in
int3
(bad)
jb
ss
pop
sub
ja
ret
push
test
xor
sar
ret
js
ds
jbe
mov
adc
lods
retf
ds
push
adc
pop
mov
in
enter
stc
std
shl
adc
jge
(bad)
outs
(bad)
adc
test
mov
jmp
fcom
cdq
movs
and
cdq
ret
jb
mov
inc
or
test
retf
dec
and
dec
or
mov
mov
call
jo
add
jmp
movs
pop
fsub
push
dec
dec
and
mov
pop
bnd
and
dec
(bad)
out
icebp
pop
sar
scas
out
sahf
lea
sbb
xor
dec
mov
movs
dec
movs
add
cmp
out
dec
out
and
ds
dec
add
out
ror
add
sub
std
and
(bad)
icebp
adc
mov
add
shr
or
(bad)
and
fcom
es
in
mov
clc
sbb
scas
jbe
loopne
pop
pop
test
ds
cmps
in
int
repnz
lock
or
loope
loopne
lds
cmp
cs
mov
test
mov
sahf
mov
out
jg
lods
pusha
sub
outs
adc
dec
outs
je
cmp
cmp
jmp
cli
nop
mov
movs
dec
(bad)
sbb
mov
jae
jbe
cs
(bad)
std
js
sbb
dec
std
int3
test
mov
adc
jecxz
sub
dec
or
cmc
xor
adc
leave
int
repnz
arpl
inc
out
nop
jo
xchg
out
or
movs
stc
xor
push
mov
or
inc
push
mov
cmc
jns
mov
mov
sar
jae
xchg
lods
jae
jo
sub
push
mov
add
sub
xor
mov
lds
lods
or
aam
hlt
pop
daa
dec
ror
mov
mov
dec
popf
push
xor
ja
popa
(bad)
in
out
les
pop
stc
(bad)
retf
and
xor
les
mov
or
call
pop
xor
sbb
in
imul
push
scas
sbb
dec
in
shl
retfw
jl
xchg
and
sub
jmp
mov
call
push
lods
shl
gs
out
in
ret
dec
pop
xor
shl
dec
mov
xchg
les
data16
mov
hlt
push
push
in
inc
dec
pop
pushf
jecxz
push
std
aad
and
inc
in
cmp
jo
fisttp
adc
lock
mov
or
push
sbb
jmp
fsubr
test
mov
fcmovu
ja
push
sub
cwde
fiadd
mov
les
je
push
sbb
cmp
enter
retf
push
scas
pop
mov
xchg
dec
pop
fucomip
add
enter
fbstp
out
stos
adc
and
arpl
xchg
in
adc
or
popa
mov
and
pop
adc
les
jo
push
shl
push
dec
or
jbe
fild
jmp
sbb
mov
mov
test
(bad)
(bad)
mov
cmc
scas
enter
call
leave
push
stos
pop
inc
xor
ins
mov
cdq
les
hlt
(bad)
outs
cmp
(bad)
loopne
adc
retf
aas
sub
or
lahf
loope
sbb
pop
cli
adc
aaa
xchg
dec
jmp
xor
and
or
jg
pop
test
arpl
mov
inc
bound
aad
xchg
pop
gs
add
sub
je
scas
or
icebp
bound
cmc
movd
call
(bad)
pop
push
cli
sbb
leave
sahf
adc
mov
int3
xlat
push
jp
pop
lock
push
jae
cdq
or
ret
in
out
adc
shl
retf
xchg
push
xor
add
in
clc
fld
mul
test
fst
fsubr
(bad)
jae
dec
push
xchg
lea
add
adc
repnz
call
(bad)
mov
push
rol
or
add
lea
add
xor
imul
pop
fisubr
dec
movs
cld
lea
scas
pop
gs
enter
mov
inc
mov
cmps
push
and
dec
ja
adc
xor
rcl
mov
xchg
fcomp
sar
sub
call
mov
or
adc
or
(bad)
scas
repnz
jl
cdq
xchg
jp
mov
in
or
(bad)
jp
fisubr
inc
dec
lods
add
xor
lea
push
loopne
jg
inc
mov
cmc
or
xchg
push
jle
in
adc
pusha
jecxz
mov
or
movs
cld
add
and
add
jle
jmp
adc
pop
pop
jno
pop
data16
pop
cli
daa
xor
add
adc
pusha
dec
ins
and
inc
sti
adc
add
or
clc
mov
stos
inc
xlat
neg
stc
int
add
xchg
or
ret
jnp
sbb
jmp
mov
(bad)
in
je
fistp
fnstenv
mov
mov
mov
adc
inc
sbb
test
daa
out
mov
pop
(bad)
(bad)
pop
mov
xor
in
aad
call
aad
dec
(bad)
ins
nop
arpl
xor
pushf
pop
in
inc
dec
mov
dec
push
sub
add
jmp
add
mov
pushf
adc
inc
or
sbb
(bad)
dec
(bad)
call
in
add
iret
add
int
jecxz
test
xlat
mov
mov
(bad)
int
xlat
fisttp
jbe
sbb
fisubr
ror
sbb
in
mov
jle
aas
test
xor
call
xchg
pop
push
xchg
aad
jmp
add
xchg
jge
inc
outs
pop
fndisi(8087
dec
mov
jmp
out
or
xchg
push
push
jno
xor
in
push
mov
retf
inc
add
test
xabort
pop
push
pop
cdq
pop
adc
inc
mov
inc
mov
out
imul
inc
cdq
cmp
sub
mov
add
pop
sub
sub
xchg
dec
stc
repnz
mov
or
aaa
adc
and
and
sbb
shl
push
div
sbb
lods
pop
xor
jecxz
shl
jg
dec
mov
xor
fisubr
(bad)
out
lahf
xchg
sar
mov
shr
or
sbb
dec
and
jge
dec
xchg
sar
dec
mul
cmp
test
sbb
mov
sub
xor
daa
ror
jle
xchg
push
pop
int3
shl
call
pop
jl
cmp
arpl
fimul
data16
arpl
scas
or
or
scas
mov
fistp
xor
mov
or
ins
inc
sahf
stos
mov
add
mov
stos
xchg
fmul
lds
cmovne
mov
out
mov
data16
xchg
cmc
lahf
pusha
push
adc
jne
cmps
rcr
push
jge
xlat
pcmpgtd
xor
adc
lahf
dec
icebp
fcomip
fisttp
out
mov
pop
(bad)
fdivr
cmp
jae
mov
mov
mov
mov
jne
lods
rcr
addr16
push
dec
xchg
in
popf
sbb
rol
push
inc
add
xchg
(bad)
sahf
ja
sub
std
(bad)
push
jp
cmp
jmp
mov
sbb
sar
es
inc
mov
imul
repnz
add
repnz
test
push
push
dec
cmp
mov
sar
mov
mov
scas
cmp
cmp
sub
add
or
iret
xor
ins
or
lea
loop
mov
jmp
into
sbb
das
popf
inc
call
or
lods
stos
or
not
or
push
inc
and
xor
cli
dec
retf
mov
fcmovnb
out
ret
test
fs
dec
xchg
mov
sti
mov
dec
retf
or
cmc
cs
outs
push
add
pop
mov
lods
outs
das
pop
push
dec
add
test
xlat
das
out
es
rcr
das
ret
dec
les
ja
xchg
sbb
and
icebp
cmp
jbe
dec
add
mov
cmp
jne
mov
popf
movs
test
shl
and
pop
or
ja
cld
iret
data16
sub
mov
dec
xchg
repnz
lds
xchg
in
loopne
cwde
xor
dec
imul
aaa
shr
pop
ret
sti
repz
out
sbb
lods
or
xor
test
inc
dec
fdivr
pop
dec
hlt
adc
xchg
cmp
mov
cs
fbld
stos
fiadd
lds
retf
mov
jp
nop
stos
pusha
add
retf
mov
pop
cmp
pop
mov
xchg
lea
dec
xor
out
push
mov
fwait
cmp
cli
or
stos
ss
and
xor
rol
cmp
mov
cs
ins
(bad)
xchg
sub
and
pop
fstp
push
add
cmp
test
loope
dec
ret
pusha
jae
rol
cld
imul
sbb
mov
mov
je
daa
mov
xlat
(bad)
in
sbb
hlt
dec
sar
imul
js
js
sbb
dec
out
js
daa
adc
jno
(bad)
xor
fsub
mov
xor
int3
and
pushf
frstor
sbb
scas
mov
inc
xor
in
call
xchg
rol
and
(bad)
out
dec
cld
cmps
pop
mov
cmp
jbe
mov
xor
inc
adc
cld
aaa
stc
mov
stc
dec
inc
mov
cmps
jbe
jle
xor
and
shl
lds
adc
mov
aam
xor
cmp
popa
ja
mov
and
dec
push
mov
in
or
pusha
pop
inc
test
sbb
add
enter
out
aaa
bound
add
test
xchg
jbe
test
jbe
retf
pop
add
cdq
fisttp
mul
adc
mov
bnd
js
inc
fidivr
data16
sbb
ins
out
test
nop
pop
jp
adc
cmc
pop
test
adc
lahf
cld
jmp
sub
leave
nop
mov
or
ds
and
bound
sbb
inc
enter
xor
xor
neg
xor
xor
xchg
inc
adc
sbb
xor
cdq
mov
push
mov
das
jecxz
lods
ja
pop
rcr
pop
fucomp
add
push
jns
mov
mul
popf
push
fucom
xchg
pop
(bad)
inc
jl
pop
js
mov
sub
imul
scas
loop
jb
xchg
mov
pop
pop
std
add
aam
or
mov
xchg
nop
mov
mov
jg
packssdw
scas
push
stos
ss
dec
add
xchg
xor
jae
add
scas
jge
ja
(bad)
push
cmps
and
lods
lock
inc
jno
fadd
push
shl
mov
mov
hlt
rcl
das
xor
retf
xchg
bound
scas
sbb
gs
mov
jbe
xor
jmp
lds
into
and
fwait
cmp
cmps
mov
test
test
stos
and
sbb
add
jne
mov
loopne
push
loope
aad
lea
or
ror
xchg
jbe
out
scas
ficom
xchg
movs
push
test
mov
inc
cli
shr
cmps
adc
daa
lahf
test
sahf
mov
mov
fstp
jo
pop
mov
push
mov
shl
and
idiv
xor
push
movs
mov
jmp
int
inc
sub
adc
pop
adc
aas
adc
outs
xchg
in
ret
mov
daa
cli
jecxz
lahf
dec
sahf
jmp
mov
push
xor
hlt
stc
(bad)
test
out
int3
push
adc
aam
fs
xchg
iret
mov
ret
je
inc
dec
jnp
push
pop
movs
mov
pop
aad
stos
cdq
mov
inc
pop
adc
pop
aas
jmp
or
mov
popf
fmul
inc
lods
dec
mov
mov
mov
mov
push
xchg
mov
inc
jmp
jbe
xchg
cmp
adc
iret
ds
popf
inc
clc
imul
jbe
push
int3
push
je
mov
dec
daa
pushf
addr16
outs
jle
xor
lock
idiv
sbb
outs
fs
aad
lods
daa
cdq
push
hlt
jbe
and
adc
ds
jp
mov
stos
jo
sbb
push
or
cmp
push
dec
xchg
jmp
xchg
or
fistp
std
stos
sub
lahf
fs
inc
rol
cmc
xchg
push
int
jb
enter
mov
ins
rol
leave
sti
cli
lidtd
jge
add
adc
test
dec
out
rcl
int
sbb
adc
pop
and
retf
jmp
ret
in
leave
mov
les
in
adc
arpl
xchg
sti
sub
jecxz
push
and
push
fmulp
cmp
stos
pop
outs
fmul
packsswb
sub
leave
cli
call
sbb
xor
jmp
int
adc
sub
add
sbb
mov
lock
jl
(bad)
push
lahf
sbb
cmp
outs
ds
or
mov
push
ds
cmps
jp
mov
pop
sub
fdiv
loop
std
daa
pop
dec
call
mov
movs
pop
pop
(bad)
stos
mov
movs
push
inc
jno
hlt
aam
and
imul
rcl
mov
mov
sahf
fsubr
xor
(bad)
inc
(bad)
out
xor
(bad)
lods
push
sub
test
call
addr16
scas
popf
inc
aad
das
pusha
inc
inc
sub
jnp
sub
imul
out
sub
cmps
jbe
loop
mov
xchg
adc
movs
push
cli
mov
rol
mov
repnz
mov
dec
xchg
ja
mov
pusha
cwde
jb
retf
(bad)
cmp
inc
jbe
(bad)
aaa
mov
jcxz
mov
(bad)
stc
inc
sbb
pushf
lods
mov
pushf
int3
xchg
movs
arpl
sub
jbe
inc
or
(bad)
not
inc
cdq
pop
push
jg
lods
fwait
xlat
add
push
into
aad
sub
loopne
or
loop
fst
pop
mov
sbb
lock
xchg
in
mov
add
inc
mov
add
pop
add
xchg
popf
ficomp
sbb
add
out
dec
int3
faddp
(bad)
xor
inc
jo
jae
addr16
mov
lods
push
mov
mov
iret
xor
rcr
dec
adc
and
dec
jbe
es
imul
cdq
out
ret
cwde
sub
fadd
pop
mov
pop
mov
cmps
or
shl
mov
inc
xor
std
jecxz
jmp
out
les
or
adc
lods
mov
inc
sbb
inc
jl
int3
pavgw
(bad)
test
dec
mov
push
iret
iret
sub
push
dec
xlat
imul
sar
jo
cmp
xor
xchg
jp
outs
and
or
push
outs
inc
mov
xchg
push
or
test
jl
adc
mov
outs
or
cmp
fsub
xchg
fadd
enter
ja
rol
std
inc
popf
(bad)
mov
ffreep
pop
rcr
fst
(bad)
imul
and
test
cmps
add
cwde
pop
sti
or
ss
xor
sbb
call
or
jns
xor
pop
daa
nop
jle
cmp
inc
jnp
lea
aaa
pushf
ja
dec
mov
push
retf
cmc
(bad)
clc
mov
in
push
jp
and
or
inc
adc
mov
das
push
or
inc
not
addr16
mov
dec
or
xchg
xchg
sbb
add
js
and
fnstcw
aaa
mov
pop
and
je
add
adc
mov
fwait
lods
cwde
mov
mov
scas
or
dec
mov
fist
rcl
jb
jb
cmc
sub
sahf
sub
pop
mov
inc
loope
call
xor
call
sahf
push
xor
xchg
add
push
pop
ins
fisub
add
mov
(bad)
push
sub
iret
cmp
and
data16
out
mov
data16
jecxz
ds
out
push
ins
add
out
or
jecxz
bound
mov
inc
sti
inc
mov
pusha
adc
inc
mov
dec
pop
sbb
mov
movs
jo
push
jne
adc
sub
sahf
or
jns
pop
iret
es
les
or
pop
cvtpi2ps
repnz
dec
test
mov
pusha
pop
pop
fstp
fisub
inc
jne
sbb
sbb
push
mov
aad
jo
popf
jle
xchg
js
int3
outs
outs
int3
xor
add
pop
pop
mov
in
mov
movs
add
in
test
jo
ins
icebp
(bad)
mov
add
loope
lock
(bad)
loop
xor
mov
adc
xor
or
mov
sub
or
test
fcomp
imul
out
test
int
leave
cld
adc
cmps
dec
cmps
imul
cmp
fcom
clc
hlt
retf
pop
arpl
inc
push
in
xor
mov
push
scas
or
loop
es
xor
ret
jne
inc
outs
ret
nop
inc
div
sbb
ds
loope
sbb
add
jl
jge
test
inc
popa
push
call
lahf
movs
ret
mov
or
jb
mov
cld
outs
movs
sub
mov
call
mov
scas
hlt
scas
mov
add
push
cld
xchg
(bad)
cwde
and
(bad)
stos
xor
pop
push
push
pop
inc
retf
mov
inc
call
inc
push
sbb
mov
pop
dec
pusha
and
rcl
add
sahf
xor
cmp
mov
push
hlt
inc
xchg
out
push
test
mov
js
std
inc
clc
mov
push
sub
jno
mov
jns
cmps
ret
add
adc
mov
sbb
lock
pop
lods
dec
je
fucompp
in
adc
lds
clc
pop
outs
imul
add
jnp
aaa
mov
dec
push
sbb
inc
sar
ins
pop
test
mov
(bad)
arpl
sbb
or
neg
push
cmp
hlt
shl
movs
jg
xchg
scas
mov
mov
or
fild
mov
xor
mov
xor
xchg
push
ss
mov
test
mov
dec
sbb
out
stos
inc
adc
jmp
(bad)
movs
push
xlat
pushaw
xchg
test
fiadd
enter
mov
pop
pop
pop
mov
sub
shl
imul
dec
xchg
call
inc
movs
cld
dec
and
dec
jne
xchg
in
ficom
movs
stc
daa
test
ja
scas
jbe
or
sub
ret
daa
xchg
mov
add
mov
push
imul
cmps
mov
stos
popa
add
aam
ret
or
mov
push
sbb
push
fdivrp
ja
imul
jge
ret
dec
dec
movs
lods
call
in
jb
enter
imul
es
jb
test
mov
not
xchg
and
xchg
or
and
pop
jecxz
fcmovbe
std
mov
les
inc
je
push
rol
push
adc
das
lods
out
mov
aaa
pop
fld
fld
jb
cmp
or
xchg
ss
stc
sbb
sub
and
je
cmp
dec
mov
add
sbb
shl
xchg
in
jmp
adc
adc
mov
push
xor
mov
call
ds
fwait
sbb
(bad)
push
stc
push
(bad)
xchg
and
adc
dec
or
push
xor
test
xlat
ss
enter
in
sbb
out
push
dec
aam
fs
ret
jmp
(bad)
ficomp
add
and
sbb
shl
lea
div
mov
jae
std
jge
inc
inc
inc
dec
(bad)
mov
and
stos
iret
jmp
iret
ret
mov
stc
lahf
fiadd
cmp
lock
aam
jge
mov
repz
dec
test
sub
xor
ror
aaa
sub
sbb
iret
dec
(bad)
mov
fwait
imul
dec
sahf
and
mov
add
mov
aam
mov
dec
dec
pop
call
mov
cmc
mov
shr
push
out
xchg
popa
push
sbb
or
gs
xor
jae
jo
push
(bad)
nop
push
pop
ror
loopne
dec
js
shr
dec
jmp
lods
aas
clc
int3
adc
hlt
retf
mov
lock
push
sbb
cmc
xchg
mov
cwde
repnz
stos
movs
cmc
je
jne
push
fwait
pushf
data16
shl
int
push
stos
cmp
mov
es
leave
or
cli
jg
mov
pop
sbb
retf
(bad)
push
mov
dec
sbb
xor
sbb
repz
pop
inc
adc
in
and
and
stos
or
xor
call
xchg
xchg
xor
mov
jb
inc
sbb
jge
add
adc
push
xchg
cmp
xchg
dec
pop
pop
in
sub
in
rol
lahf
jb
adc
out
jnp
mov
movs
js
ins
lea
pop
test
movs
leave
iret
sbb
jge
lea
sub
xor
nop
loop
rcr
inc
adc
int
call
dec
cmps
jnp
xchg
sbb
or
mov
ds
add
test
xor
jnp
shr
into
jb
cli
pushf
or
xchg
lock
mov
stc
and
pop
pop
popa
dec
and
retf
ficom
jnp
dec
xor
fist
nop
loopne
cld
fmul
xor
out
mov
or
mov
mov
popa
mov
aad
cmp
cld
mov
mov
mov
(bad)
jmp
movs
fild
call
cs
sub
jo
jbe
mov
and
or
int3
or
jmp
xor
add
dec
jno
inc
inc
sub
push
mov
je
xor
push
dec
and
adc
test
sub
movs
or
frstor
cmp
dec
scas
sub
aam
rol
cmps
imul
mov
pop
mov
mov
and
jle
sbb
inc
das
jnp
and
sub
addr16
scas
and
mov
adc
rcl
inc
xor
sub
pop
mov
pop
mov
sbb
test
movs
stos
ret
sub
lods
adc
in
inc
repnz
and
inc
leave
scas
shl
push
and
std
pop
add
outs
jle
inc
add
fistp
iret
mov
xchg
outs
lea
in
lods
push
fadd
nop
jle
cmp
test
ins
sub
bound
not
push
or
jp
das
inc
adc
push
jmp
jbe
ror
sub
outs
adc
sub
xor
aad
sbb
rcr
ss
fdiv
sub
stc
inc
retf
enter
ins
test
data16
out
fidiv
(bad)
adc
push
not
dec
xlat
es
dec
inc
mov
stc
sar
mov
fsubr
fst
ror
pop
call
mov
sahf
push
scas
jae
jo
(bad)
mov
movs
test
and
scas
ret
loop
shr
arpl
pop
stos
fstp
mov
sbb
pop
mov
add
loope
sub
sar
repnz
bound
jo
push
fwait
jbe
or
xchg
and
push
out
retf
in
popf
sub
mov
sub
fisttp
(bad)
or
add
cmp
dec
das
and
inc
fnstcw
xchg
adc
push
xor
or
xchg
ins
push
enter
loope
call
lods
or
call
mov
cmp
inc
stc
pop
stos
rcl
clc
inc
sbb
sbb
push
mov
rcl
lea
dec
dec
adc
sub
ffreep
xor
mov
aam
test
adc
pop
daa
pusha
pop
(bad)
out
add
icebp
pusha
push
pop
icebp
fadd
pop
adc
and
jl
inc
repnz
or
je
pop
cdq
imul
adc
ins
ins
int3
jp
cmps
push
pop
(bad)
jne
in
sahf
(bad)
jg
jo
cmovnp
test
xchg
mov
xor
call
lock
bound
pop
xchg
in
jns
addr16
jge
sti
mov
cmp
pop
jno
addr16
aaa
xchg
mov
mov
mov
inc
(bad)
leave
mov
leave
lods
add
out
dec
aad
fsubr
pslld
jle
mov
jle
adc
push
fwait
cmp
dec
sbb
lds
in
sub
cmps
xor
and
jecxz
outs
ss
div
adc
and
xor
dec
pop
jnp
rcr
sbb
cmp
jl
dec
push
stc
lods
int3
mov
movs
dec
or
scas
scas
push
sbb
movs
loopne
pushf
push
stos
mov
adc
int
pushf
es
mov
mov
stos
cs
pop
jbe
iret
mov
add
mov
jbe
ds
xor
test
or
(bad)
shl
adc
rcl
and
mov
fcom
xor
in
shl
cmps
mov
add
cli
(bad)
xchg
ret
icebp
add
mov
das
outs
jo
jo
xor
dec
cmp
cwde
shr
daa
adc
loopne
addr16
icebp
and
xor
bnd
addr16
inc
or
cmps
mov
add
das
test
popa
inc
mov
pop
jbe
or
mov
bound
mov
dec
push
fidiv
ss
pop
adc
daa
clc
fwait
add
jae
data16
out
pushf
fsub
ins
out
popa
arpl
push
cmp
xchg
push
and
nop
in
in
cmps
xchg
xor
stos
fidivr
test
outs
mov
daa
ja
ficomp
pop
scas
push
movs
jns
and
lods
cmp
jo
xchg
not
popf
pop
mul
inc
mov
loopne
push
dec
inc
fsub
sub
jle
pop
in
cmp
inc
retf
push
jo
stc
out
add
mov
shl
mov
ins
adc
and
and
ds
mov
adc
dec
je
jge
sbb
arpl
jb
test
pop
fwait
stc
aas
jl
jmp
push
xor
fadd
pop
jae
mov
add
fiadd
pop
mov
and
call
jmp
ret
nop
scas
es
test
xor
call
imul
cmp
ret
sub
shl
push
or
lods
shr
push
ret
cmp
push
sbb
xchg
xchg
adc
jp
aas
adc
sbb
mov
xchg
cwde
(bad)
dec
jle
movs
ret
out
jmp
mov
fdivr
inc
cmps
mov
mov
mov
jg
scas
cmp
cwde
popf
aaa
adc
push
or
sub
sub
dec
ins
push
shr
pop
or
pop
add
out
push
in
test
jle
ins
jg
xchg
sbb
xor
shl
xor
cmc
gs
rol
adc
xchg
sub
xchg
cwde
int
xor
dec
test
sbb
shr
pop
js
adc
div
leave
xor
jmp
addr16
fild
cmp
inc
data16
or
adc
mov
jnp
sub
dec
imul
jne
fild
pop
popf
xchg
movs
dec
cmps
cmc
popa
and
adc
or
mov
push
or
cmp
push
and
xor
je
xchg
sahf
xchg
test
xlat
lods
pop
dec
rcr
pop
push
lahf
enter
int3
add
dec
xchg
arpl
in
in
push
(bad)
es
and
jmp
mov
mov
dec
out
mov
(bad)
sub
and
outs
push
jmp
ret
xchg
test
jmp
sbb
cmp
inc
jge
xor
mov
jecxz
retf
pop
ja
fwait
out
mov
imul
loope
in
pop
add
sub
retf
add
pop
es
ds
imul
out
cdq
pop
cmp
or
pop
stc
push
stos
das
test
loop
fisub
push
fiadd
jg
jl
and
test
aam
add
imul
daa
clc
fnstsw
cdq
imul
jp
shr
outs
(bad)
in
cmp
aam
jl
or
test
pop
push
cmps
adc
jns
rcl
aas
cmp
mov
pop
scas
jg
mov
das
or
and
out
sbb
mov
push
call
xor
mov
sbb
cli
int
shr
out
inc
(bad)
mov
or
sub
hlt
mov
xchg
jb
cmp
add
iret
into
push
cmp
xchg
(bad)
mov
inc
(bad)
jge
jmp
test
icebp
(bad)
int
jmp
out
out
bound
add
mov
cmps
adc
popa
inc
pop
xchg
cmp
pop
jmp
daa
xor
inc
add
jbe
clc
icebp
shl
pop
xchg
scas
test
(bad)
pop
sub
imul
pushf
adc
test
icebp
mov
adc
test
push
aas
(bad)
outs
jnp
cmp
sub
adc
sub
fs
jnp
enter
lahf
pusha
lods
test
xchg
xchg
sbb
mov
fbstp
inc
mov
in
sti
mov
mov
clc
pop
dec
fbstp
xchg
dec
inc
xor
sub
mov
mov
sbb
cs
jle
jae
sub
add
enter
inc
jmp
push
sbb
mov
or
mov
lods
jne
sbb
dec
push
mov
add
lds
sub
ins
mov
push
xor
mov
mov
scas
add
xor
push
in
rcr
jo
jmp
adc
out
sbb
mov
add
pop
out
or
or
jns
add
int
or
cld
in
mov
mov
(bad)
xor
imul
enter
retf
push
ss
mov
jmp
push
cld
not
loop
jge
(bad)
fstp
xchg
scas
rol
mov
mulps
in
inc
push
mov
jbe
adc
jnp
lea
sbb
sar
push
xor
fidiv
sti
aaa
xor
outs
shl
xchg
xor
sti
push
loope
adc
add
adc
adc
xor
mov
(bad)
push
inc
mov
mov
sub
sbb
lods
mov
add
sub
pop
xor
in
and
pop
add
cwde
ror
(bad)
adc
mov
ret
(bad)
enter
jecxz
cmp
jo
and
icebp
xchg
or
(bad)
cmps
and
(bad)
(bad)
hlt
and
ret
not
push
enter
imul
cmps
fsubr
xlat
mov
jge
xor
pop
pop
jecxz
adc
aad
xchg
push
scas
push
ss
sub
push
pop
(bad)
push
fmul
xchg
push
pop
out
fbld
sbb
inc
imul
mov
or
sbb
mov
xor
jl
ror
dec
jecxz
push
adc
stc
mov
mov
or
leave
lea
pop
sbb
enter
aaa
dec
push
out
rcr
jge
lea
push
aas
sbb
scas
xchg
jmp
test
scas
dec
xchg
ror
mov
lock
inc
ins
inc
push
mov
mov
out
adc
cmp
aam
mov
rol
rcr
loopne
xchg
test
imul
inc
cmps
sbb
das
mov
mov
xor
bound
repz
push
and
je
call
es
pop
mov
sub
cmc
test
ds
in
in
lods
sub
cli
and
in
outs
mov
mov
push
outs
neg
xlat
pop
sbb
scas
and
ja
fwait
mov
lds
mov
dec
pushf
fnsave
cdq
jo
stos
xchg
inc
sub
push
jecxz
sbb
dec
lods
aad
shr
dec
mov
les
xchg
fisubr
mov
icebp
xor
ins
jb
icebp
pushf
mov
xor
sub
mov
push
mov
or
cmps
jmp
mov
retf
mov
mov
je
outs
aad
(bad)
jg
jmp
push
mov
pop
push
pop
mov
ss
adc
xchg
mov
scas
push
call
inc
jns
pushf
test
add
add
pop
sbb
ret
adc
adc
cmc
sub
fimul
pushf
adc
add
fs
loope
mov
add
test
add
arpl
jno
mov
sar
lock
xor
mov
lods
bound
std
fld
dec
xchg
sub
pop
pushf
jg
pop
mov
cli
ror
loop
icebp
iret
imul
xchg
movs
jo
stc
cdq
mov
scas
(bad)
jmp
sub
mov
rcl
lods
fild
test
mov
pop
call
out
sub
out
mov
xor
sbb
shl
jl
dec
(bad)
pop
pusha
sub
xor
pop
sahf
and
enter
xor
cmp
mov
call
(bad)
adc
fdiv
icebp
or
push
arpl
pop
lock
cmps
std
cmp
or
fisubr
mov
mov
sub
fs
lds
mov
push
retf
mov
dec
jns
enter
mov
xchg
mov
movs
xchg
fs
mov
cmp
mov
out
mov
je
add
loopne
inc
jb
loope
ins
outs
add
sub
cmp
imul
repz
or
outs
jae
push
xor
dec
stos
sbb
enter
xor
ins
fimul
xor
mov
xchg
jbe
dec
sbb
imul
cmp
imul
jle
push
jb
jnp
jne
add
sbb
test
(bad)
add
sub
inc
(bad)
jcxz
jb
xchg
pop
imul
mov
ret
cld
ins
ins
add
mov
xchg
dec
mov
add
ret
pop
js
mov
rcl
pop
ins
loopne
cmc
push
arpl
adc
mov
push
mov
gs
out
fistp
das
leave
xchg
push
add
dec
div
neg
icebp
mov
cdq
call
ja
cmp
sub
pop
dec
int
mov
les
cld
inc
repz
mov
enter
repnz
cmp
or
push
dec
call
movs
xor
mov
or
mov
xchg
out
movs
sub
mov
xchg
xchg
sub
mov
imul
sub
sbb
xor
repnz
mov
je
clc
sti
outs
outs
add
in
and
les
movs
jae
and
cmps
push
mov
(bad)
call
(bad)
or
pop
jl
mov
data16
int
scas
lock
xor
fs
cmps
xor
sub
lods
add
repnz
ins
jle
and
sub
call
sbb
pop
adc
mov
or
adc
inc
sbb
shl
dec
fcomip
pop
test
pusha
adc
mov
repz
jmp
mov
retf
jno
fld
dec
lods
in
lds
mov
xchg
adc
jne
movs
xchg
cmpxchg8b
lock
cmc
sub
leave
(bad)
outs
(bad)
imul
xchg
sti
aaa
pop
ror
hlt
dec
dec
mul
jo
push
push
sub
loop
xchg
aaa
ja
sti
xchg
push
adc
jp
sets
cmp
jbe
movs
cmps
test
in
scas
pushf
pusha
or
arpl
mov
adc
jmp
pop
or
sub
js
cmp
loopne
call
in
scas
add
dec
test
fistp
inc
mov
cmps
scas
and
or
xlat
cmp
mov
xchg
lea
xor
xor
dec
pop
mov
push
push
fisub
std
aaa
jl
(bad)
ss
push
lahf
into
inc
inc
jo
out
setl
push
mov
adc
sub
lea
les
mov
push
sti
xchg
add
adc
shl
jbe
push
nop
add
push
or
movs
setbe
push
push
aam
dec
mov
or
xor
jno
push
icebp
jno
push
lods
or
and
stos
mov
scas
inc
shr
aad
aam
dec
cwde
jecxz
and
jo
pop
inc
test
pop
or
aas
jo
mov
dec
jp
hlt
retf
sub
push
or
cmps
sti
or
fistp
(bad)
sub
mov
add
add
retf
aam
mov
push
imul
scas
not
loope
inc
mov
sbb
cwde
cmp
mov
mov
icebp
mov
stos
mov
popa
repnz
jle
mov
leave
cmps
sbb
loopne
ins
pop
out
adc
les
pop
cmp
adc
add
into
sbb
jle
test
push
popf
arpl
pop
adc
in
test
dec
sbb
in
aaa
mov
sub
mov
push
das
nop
mov
loop
mov
sbb
cmps
mov
jmp
ret
ins
jo
xor
or
sbb
jecxz
jae
fidiv
and
jns
stos
fst
int3
cmc
mov
(bad)
mov
jne
pop
and
fs
jb
(bad)
daa
or
stos
test
inc
push
xor
ja
mov
idiv
pusha
outs
add
shl
aad
into
mov
ret
xchg
add
int3
push
add
ror
push
outs
aad
dec
ficom
imul
dec
pop
ror
push
sub
call
adc
enter
or
lock
int
movs
push
jp
sbb
or
adc
add
popa
inc
fdivp
mov
cmps
sub
jno
inc
pop
xchg
inc
cmps
enter
sbb
jno
push
inc
mov
dec
pop
fstp
mov
jne
jb
jmp
cmps
mov
das
inc
jp
pop
shl
mov
(bad)
jg
jle
mov
mov
bound
ret
cdq
imul
inc
outs
push
idiv
push
rcl
adc
hlt
outs
pop
test
dec
adc
dec
mov
xor
lds
mov
or
jnp
sub
es
lock
inc
call
mov
pop
sbb
(bad)
pop
inc
mov
sbb
or
push
shr
js
jg
push
cmp
inc
out
data16
int
and
cmps
add
sbb
pop
xchg
cli
sti
xor
jecxz
xor
sbb
mov
jg
iret
pop
and
and
mov
mov
iret
cld
mov
mov
push
sub
sub
inc
pop
fcmovnb
add
std
dec
jns
fwait
rcl
sub
mov
xor
cmovl
jns
aas
outs
sub
inc
mov
mov
push
pop
call
mov
adc
test
lea
pusha
pop
mov
xor
mov
dec
cld
sbb
cmp
ror
pop
push
cmp
mov
ret
jb
sub
mov
movs
das
dec
sbb
xor
mov
sbb
cld
fwait
outs
lahf
inc
lods
push
ins
test
movs
sbb
mov
mov
lods
jns
mov
and
or
ss
sbb
mov
jecxz
(bad)
cmp
imul
loopne
jb
pop
es
add
jmp
out
daa
add
loope
aaa
sub
jp
fs
xor
jns
shl
push
bound
mov
rol
(bad)
cli
cwde
adc
in
repnz
xor
sbb
gs
push
pop
adc
push
sar
push
test
mov
adc
or
or
(bad)
xor
scas
cmp
xchg
pop
pop
and
outs
arpl
int3
jp
mov
xchg
hlt
sbb
daa
(bad)
in
jno
ss
cmp
ffreep
out
inc
xor
add
adc
jb
outs
adc
mov
fs
push
idiv
imul
imul
imul
ss
add
jae
xor
test
fs
jp
pop
test
out
sbb
fwait
xchg
(bad)
out
sbb
call
adc
repz
mov
out
inc
out
jle
imul
inc
mov
cmp
addr16
add
or
cmp
jl
(bad)
jg
movs
cwde
add
das
pavgw
xor
mov
rcl
xchg
cmp
hlt
sbb
add
stc
sbb
ret
mov
inc
movs
aas
imul
adc
mov
es
jne
sub
add
cmp
fiadd
mov
(bad)
cli
scas
enter
pop
lock
add
int
cdq
xchg
iret
or
outs
test
les
scas
int
or
dec
pop
xor
cmps
mov
imul
pop
pop
xor
cli
pop
mov
mov
mov
xor
mov
mov
repnz
sbb
(bad)
loop
sbb
xchg
bound
sub
fmul
ret
or
mov
inc
and
nop
push
aam
push
cmp
sbb
repnz
stos
stos
rcl
xor
mov
js
cwde
xor
dec
push
test
and
mov
mov
fild
adc
out
mov
xchg
or
into
jp
fmul
mov
fsub
sbb
push
mov
mov
mov
mov
retf
or
jbe
popa
mov
icebp
loopne
mov
cmp
mov
xchg
push
pop
push
jp
mov
xor
mov
imul
and
sti
xchg
in
jne
or
inc
nop
lods
cmps
(bad)
mov
xchg
test
jbe
ja
(bad)
pop
adc
cld
pusha
jae
push
adc
pop
ret
sub
mov
mov
jl
cwde
mov
sub
popf
shl
and
into
fstp
ins
fs
mov
out
mov
push
(bad)
pop
popf
jl
fwait
jge
ss
dec
sahf
call
fwait
ret
ds
imul
pop
sub
out
hlt
daa
int
pop
xchg
inc
test
or
add
les
sbb
int
sbb
jmp
adc
call
xor
pusha
inc
cwde
xchg
dec
bound
adc
add
adc
shr
push
xor
pop
and
pop
ja
adc
add
xor
mov
add
sbb
icebp
mov
adc
xor
jmp
in
into
xor
je
(bad)
jle
cmps
jmp
sahf
icebp
sbb
xlat
adc
jle
push
and
out
and
enter
data16
sbb
mov
add
leave
ss
lea
xchg
movs
push
pusha
arpl
jp
arpl
adc
sahf
mov
scas
rol
aad
outs
jl
ins
ror
pushf
xor
pop
push
adc
fs
addr16
jl
lds
stos
les
in
dec
cwde
movs
xor
push
popf
sub
loope
fisubr
jecxz
test
mov
hlt
dec
mov
adc
xor
dec
xor
pop
push
dec
push
cmps
mov
gs
(bad)
(bad)
cld
test
push
push
pop
sub
inc
ss
or
xchg
test
mov
mov
sar
push
or
and
out
out
js
clc
inc
dec
iret
add
pop
sub
loope
in
push
pop
jmp
inc
cli
(bad)
adc
lea
pusha
adc
xor
div
std
arpl
jl
lahf
jge
inc
jbe
xchg
add
ret
pushf
(bad)
xchg
xchg
xor
and
je
cli
and
push
nop
cmp
retf
pop
fnstsw
jae
pop
adc
fdivrp
(bad)
into
retf
pop
test
dec
scas
inc
mov
push
jl
sbb
xchg
add
repnz
mov
mov
push
xchg
mov
push
xor
push
mov
stc
je
jl
aas
cli
jo
pop
add
out
push
and
mov
imul
stos
push
add
jl
push
jo
pushf
mov
lea
int3
sahf
mov
stos
(bad)
pop
call
test
inc
dec
pop
mov
fiadd
test
(bad)
pop
out
mov
inc
xor
addr16
jmp
lods
inc
outs
inc
mov
add
aas
movs
fwait
dec
or
daa
sub
call
sub
inc
movs
mov
or
jno
movs
push
(bad)
pop
outs
jae
sub
gs
mov
gs
xor
and
shr
enter
stc
xchg
inc
call
sbb
lea
pop
stos
sahf
jg
and
sub
adc
ja
add
or
addr16
loop
dec
mov
jmp
fs
and
cwde
(bad)
mov
mov
xchg
pop
inc
mov
xor
test
jmp
jle
sbb
cmps
inc
lds
mov
(bad)
sub
add
pop
pop
clc
clc
push
inc
rcr
jecxz
fst
nop
aam
push
sbb
add
out
jno
gs
stos
mov
jp
jnp
and
ja
push
cmc
inc
test
xchg
cmc
mov
dec
inc
adc
cwde
je
test
dec
jb
sar
cs
and
fdivr
pusha
jle
out
pop
shl
xchg
jnp
mov
cmps
pushf
outs
and
dec
cmps
fisub
push
mov
xor
outs
stc
clc
scas
nop
push
inc
mov
push
pop
pusha
and
mov
mov
(bad)
mov
imul
sub
pop
push
ret
xor
dec
xchg
push
mov
stos
aaa
mov
sbb
adc
in
jbe
jmp
jae
in
pop
jmp
mov
les
sub
mov
leave
dec
cld
popa
cmp
bound
cwde
gs
icebp
(bad)
pop
mov
cmp
mov
jno
push
inc
adc
sub
mov
enter
sub
push
jno
ret
fistp
(bad)
ja
arpl
(bad)
sbb
sbb
fnstenv
adc
jge
ins
arpl
mov
jp
daa
fcmovnu
mov
clc
sahf
and
mov
inc
daa
cwde
jmp
sub
jnp
adc
mov
frstor
popa
xor
(bad)
gs
inc
(bad)
jmp
pop
dec
mov
cmp
inc
dec
ds
icebp
ficomp
add
push
ret
cmp
or
pop
aam
fwait
push
mov
xchg
pop
inc
jns
push
and
lahf
or
cmc
(bad)
mov
lock
imul
mov
scas
pop
out
cmp
mov
(bad)
adc
fimul
xchg
pop
cld
jns
aas
inc
fistp
xor
enter
test
neg
sbb
pop
mov
aas
xor
adc
and
mov
in
popf
shl
jo
push
bound
dec
jge
fisubr
sahf
out
cld
mov
pushf
sbb
sub
pop
mov
jb
jg
test
inc
push
iret
adc
or
sub
push
ins
rcr
jnp
mov
mov
test
mov
jge
in
aas
mov
repz
jp
leave
and
adc
adc
mov
mov
adc
int
inc
sbb
jge
push
or
sti
in
mov
out
sbb
mov
dec
mov
(bad)
sahf
xchg
adc
or
stc
pushf
cld
inc
mov
add
lahf
push
leave
add
outs
mov
or
push
rol
les
mov
into
dec
in
dec
stos
sub
jbe
adc
into
cmp
test
fisttp
pop
mov
mov
xor
fs
test
adc
into
mov
loope
push
std
mul
pop
retf
mov
or
call
sar
aam
js
popf
hlt
(bad)
and
cs
in
mov
mov
or
xchg
push
arpl
mov
and
addr16
xor
push
prefetchw
or
mov
inc
lock
cmp
fnstenv
mov
mov
xchg
add
push
repz
sub
jecxz
ftst
aas
sub
sar
cs
adc
mov
ins
fcomp
push
mov
addr16
xchg
push
ret
or
loop
pop
pop
jmp
push
add
scas
ror
(bad)
jbe
and
sub
loopne
mov
inc
push
scas
add
outs
shl
loopne
cwde
test
or
mov
lea
iret
mov
mov
pop
call
stc
outs
sti
jmp
xor
jecxz
cmp
fdivr
mov
enter
mov
int
test
movs
push
mov
adc
ja
sub
mov
outs
pop
loop
dec
xor
dec
sub
test
stc
mov
mov
jnp
retf
mov
cmp
stc
nop
dec
(bad)
in
mul
mov
mov
cmc
push
mov
add
or
loope
das
add
jns
add
dec
push
es
mov
sub
mov
xlat
and
xchg
mov
retf
xchg
jnp
jb
out
xchg
std
movs
xor
call
dec
mul
(bad)
aam
ins
cmps
dec
mov
and
push
je
mov
shl
retf
add
cmp
hlt
int
fld
leave
pop
and
inc
ins
mov
xlat
js
xchg
or
push
movups
in
pop
scas
adc
leave
test
sbb
jmp
push
dec
outs
fwait
xor
adc
sbb
push
inc
arpl
xchg
inc
push
pop
movs
pop
jle
mov
xlat
hlt
mov
test
(bad)
inc
in
shl
lods
inc
add
loopne
sbb
inc
dec
gs
(bad)
stos
push
pop
mov
mov
xchg
hlt
gs
cmc
popa
popf
jmp
inc
imul
pop
cmp
mov
pushf
add
add
lahf
fstp
(bad)
dec
sub
pusha
inc
inc
mov
pop
ds
ins
(bad)
in
sub
test
(bad)
lods
jmp
xchg
rcl
sahf
mov
outs
cmp
call
cli
xor
call
scas
jns
or
xor
push
push
dec
jo
or
jp
push
xchg
subps
into
sahf
leave
js
cli
fmul
and
cmp
cmp
sub
and
ds
push
movs
inc
rcr
shr
mov
fadd
mov
jle
(bad)
popa
xchg
fwait
loop
pop
test
lock
test
shr
gs
sbb
fidiv
inc
or
xchg
in
xor
pop
add
inc
inc
dec
icebp
jne
sub
loope
push
test
push
xlat
call
cmp
out
fistp
pop
ret
pop
sti
and
retf
mov
sub
inc
xchg
jnp
and
shr
mov
jl
test
mov
shl
push
xor
jle
mov
jle
push
fisubr
enter
shr
test
pop
pop
push
push
lahf
shr
pop
mov
cmp
fisubr
adc
xchg
test
and
and
jne
jmp
jne
mov
dec
mov
in
in
xor
pop
sub
mov
sti
daa
test
pop
dec
cld
stc
push
in
adc
and
pop
cmp
std
loopne
add
popf
repz
xor
mov
adc
adc
sbb
push
xor
popa
mov
and
mov
aas
jg
out
ror
icebp
xchg
and
cmps
imul
retf
or
xchg
shl
dec
int3
loop
(bad)
lock
pop
shl
js
jmp
rcr
outs
clc
pusha
mov
(bad)
rcr
popf
cdq
fsub
clc
push
pusha
pushf
(bad)
xchg
das
sbb
adc
(bad)
ficom
dec
leave
xchg
sbb
(bad)
scas
adc
out
and
(bad)
sbb
mov
dec
and
aam
or
mov
jae
jp
jg
pop
lahf
pop
sbb
movs
add
xchg
into
in
int3
(bad)
push
out
jno
ror
ds
jns
fs
fst
xor
or
inc
jnp
stos
xchg
leave
jmp
mov
loope
jno
ins
gs
cmps
push
mov
sub
sbb
aam
xchg
in
or
cmps
fst
add
dec
inc
or
or
jp
pushf
das
mov
fstp
sti
call
dec
std
lahf
mov
movs
jp
call
out
push
fwait
int3
push
scas
das
stos
adc
mov
shr
inc
loop
mov
inc
je
jmp
sub
adc
inc
pop
sub
repnz
push
inc
xor
(bad)
lock
pushf
outs
aad
adc
cmp
nop
nop
mov
(bad)
lea
rep
sub
sar
imul
outs
push
popf
ss
fsubp
pop
sbb
pop
pop
xchg
cmp
mov
mov
fld
jmp
(bad)
stc
sub
dec
mov
jecxz
cmps
les
fild
mov
int3
shr
call
inc
bound
gs
imul
repz
mov
(bad)
xchg
out
and
clc
xor
lods
daa
call
add
rol
push
xchg
out
xor
sahf
fsub
push
add
mov
cli
sbb
dec
and
pop
push
push
icebp
xchg
ja
pop
mov
aad
leave
xor
ficomp
push
mov
lds
cmp
xor
icebp
pop
ret
outs
out
push
pop
cmp
or
mov
lds
dec
mov
jno
push
aaa
lahf
imul
jge
xor
or
inc
cmps
aaa
fadd
inc
mov
(bad)
div
fiadd
leave
ret
pop
adc
mov
sbb
test
mov
sbb
test
mov
cmps
jp
pop
idiv
mov
sbb
jb
outs
jmp
sub
cmc
sbb
enter
add
pop
ror
mov
pop
aad
and
cwde
lds
adc
aam
ret
hlt
fsubr
repnz
sti
stos
and
dec
call
jg
xlat
(bad)
outs
lods
add
rcl
push
pop
pop
inc
mov
sbb
pop
sub
inc
adc
pop
jecxz
sub
cmp
sbb
sbb
push
add
loope
dec
lock
popf
add
cld
or
sub
add
sbb
adc
sbb
enter
pop
jne
cmps
ja
fdivr
mov
outs
ficomp
lea
in
adc
mov
loope
out
in
add
ins
push
and
sbb
or
pop
ret
fidivr
rcl
cmps
jns
mov
cmp
repz
jns
xchg
xchg
mov
or
mov
shl
push
mov
sbb
dec
mov
adc
add
or
outs
cld
nop
add
outs
sub
add
daa
lods
dec
sahf
test
dec
(bad)
jecxz
jg
ds
fwait
adc
adc
(bad)
hlt
xor
push
lock
(bad)
fdiv
test
xor
adc
fisubr
jo
ja
movs
mov
addr16
fs
inc
in
pop
add
push
push
scas
dec
mov
fistp
mov
cs
lahf
xor
pop
bndldx
fst
test
mov
push
pmulhw
cmp
pusha
jge
sti
add
das
pop
call
call
mov
pop
adc
and
mov
movs
pop
sbb
(bad)
xchg
int
sbb
xchg
pop
cdq
xor
ror
pop
pushf
(bad)
imul
add
test
jmp
icebp
lahf
cmp
jb
daa
std
std
cs
sbb
cmp
push
imul
mov
sbb
imul
ret
sbb
gs
je
aaa
ret
adc
sub
call
xchg
push
fs
xor
int
out
ja
cmp
js
jp
lods
lods
popa
mov
mov
(bad)
sub
jecxz
retf
mov
mov
jns
xchg
aam
loopne
push
push
mov
in
and
pusha
xchg
call
fisub
not
jnp
sar
les
cmp
sbb
popf
aaa
xlat
data16
pushf
call
sahf
jb
cmovnp
sub
sahf
retf
sbb
adc
sbb
aaa
mov
pop
cld
jmp
pop
fidivr
in
lea
smsw
xchg
test
ss
mov
and
xchg
jmp
fsubrp
xor
sbb
cmc
inc
mov
dec
jb
sti
sti
inc
add
push
leave
or
shl
jo
ins
stc
in
ja
mov
inc
pop
or
jmp
loopne
xlat
in
inc
jo
mov
adc
adc
hlt
dec
retf
mov
fs
mov
ds
nop
or
out
jmp
les
out
adc
pop
cmp
cmp
shl
inc
ds
(bad)
out
cmps
jns
fdivp
dec
mov
int3
mov
mov
rol
sbb
imul
adc
mov
retf
push
adc
xor
aam
loop
and
shl
and
jmp
loop
sar
pop
push
popf
jmp
aas
xchg
jb
loopne
xor
mov
jae
mov
jecxz
push
js
cwde
inc
inc
dec
jns
hlt
lods
push
mov
jg
and
pop
daa
movs
dec
cmp
push
adc
xchg
pop
mov
and
test
inc
mov
aaa
fwait
dec
je
push
xlat
lock
and
inc
movs
movs
dec
inc
push
(bad)
scas
cmc
jno
fld
push
lds
bound
out
or
push
(bad)
inc
test
xor
xchg
jb
mov
(bad)
mov
jae
shl
ret
sub
dec
arpl
lods
movs
addr16
into
pusha
dec
adc
jne
mov
call
scas
into
adc
ins
sbb
jmp
fild
sti
movs
mov
loop
es
xor
push
shl
int
xchg
jne
shl
xchg
add
icebp
or
call
pusha
sahf
jg
push
(bad)
idiv
daa
push
popa
lea
je
cmps
sub
test
inc
cdq
cmp
jl
in
lahf
fs
addr16
sub
cmc
xchg
xchg
mov
out
call
or
aad
pop
jae
ss
fwait
jo
enter
lahf
mov
das
xchg
cmps
(bad)
xchg
mov
out
mov
pushf
jl
lods
and
push
inc
mov
out
repz
loop
mov
cwde
icebp
imul
ins
dec
cmp
leave
xor
dec
std
pushf
xchg
xchg
cmp
cli
cld
punpckhbw
je
es
call
or
mov
mov
fild
adc
(bad)
xor
inc
enter
mov
movs
lods
push
in
add
mov
jno
or
pop
jmp
jecxz
into
inc
idiv
push
lds
imul
std
mov
retf
sub
push
js
ins
mov
xchg
xchg
inc
xor
out
add
cmp
push
fs
aam
push
dec
addr16
in
jecxz
pop
sbb
into
mov
jb
in
sahf
mov
(bad)
and
test
call
sbb
mov
ret
jmp
sub
mov
add
cmp
test
and
out
jbe
adc
test
test
xor
ret
add
sub
mov
jbe
sub
mov
cmps
sti
sub
pop
pop
and
clc
dec
sub
stc
xor
les
mov
inc
int
popf
sti
sub
(bad)
sahf
adc
cwde
push
ficomp
and
(bad)
(bad)
push
push
les
jae
loopne
xor
stos
push
jae
mov
sbb
mov
and
clc
pop
sbb
imul
inc
cmc
xor
sbb
sbb
nop
mov
sub
sbb
repz
outs
pop
fadd
cmp
jp
jmp
out
fidivr
dec
jmp
mov
fisub
jecxz
rcl
das
jp
das
daa
jnp
sub
or
fimul
jge
inc
ja
jp
outs
popa
push
dec
fistp
jbe
mov
mov
dec
or
push
xchg
cli
and
out
mov
xchg
cmps
push
jb
jmp
sub
ss
test
jae
stos
and
xchg
xor
inc
xlat
mov
mov
outs
cmp
stc
je
data16
jae
mov
test
cmp
jmp
repz
jbe
push
mov
lds
outs
inc
or
call
ss
mov
pmulhuw
jne
sbb
jns
jmp
dec
push
jnp
les
popa
jmp
fwait
es
xchg
cmc
push
mov
cmp
hlt
mov
in
adc
push
fucom
mov
int
jmp
or
jnp
ret
enter
shr
sbb
stos
and
pop
jmp
cwde
outs
fbld
xlat
mov
out
pop
xchg
pop
cmp
mov
push
mov
fadd
pop
outs
add
jno
aas
sub
xor
cmp
push
and
cmp
js
xchg
dec
int3
pop
popa
mov
cmp
mov
or
mov
ret
popa
ss
inc
xchg
repnz
push
xchg
(bad)
movs
jge
pusha
sahf
cdq
mov
ins
cmps
pop
int3
cmp
cmps
pushf
cwde
mov
fadd
fsub
mov
stc
mov
cmp
je
push
ret
pop
fbstp
cmp
mov
fadd
in
sar
rcl
jecxz
dec
cmp
or
and
cmp
sub
gs
mov
inc
mov
cmps
add
fst
fisttp
int3
or
sbb
inc
scas
test
test
les
sbb
jmp
(bad)
fistp
stos
push
arpl
add
push
(bad)
push
out
ins
es
int
push
mov
jns
ror
xor
nop
adc
aam
mov
loop
arpl
cmps
add
xor
idiv
fsubr
inc
scas
cmps
sbb
push
sub
jl
xchg
add
jge
xor
ffree
(bad)
sbb
bound
mov
aaa
sbb
lahf
sbb
hlt
jl
daa
outs
fs
in
jl
mov
scas
sbb
not
jge
jecxz
sbb
movs
xchg
pop
xchg
add
mov
lahf
(bad)
xchg
out
pop
cli
push
in
xchg
mov
mov
add
pop
dec
call
out
mov
retf
fwait
ds
lods
add
(bad)
cmp
or
sbb
sbb
push
cmps
rcl
out
and
in
sbb
les
rol
xchg
fisub
test
xchg
test
add
icebp
mov
lods
adc
mov
out
xchg
movs
mov
xor
inc
add
es
add
dec
(bad)
fmulp
cmps
add
cs
sbb
xor
daa
movs
in
ret
cmp
ficomp
lods
fiadd
dec
call
xor
(bad)
sbb
cmp
sub
adc
test
rol
add
nop
nop
jo
adc
mov
add
or
je
cwde
addr16
outs
xlat
cmps
xor
sub
push
or
outs
push
(bad)
ss
sti
mov
test
jns
and
jp
pop
mov
inc
xor
and
enter
pop
punpcklwd
xor
popaw
jno
loop
test
mov
jmp
cwde
sbb
pop
leave
nop
inc
and
jg
mov
mov
jnp
adc
cmps
adc
add
movs
cwde
pop
call
loopne
push
ds
inc
int3
test
inc
cmps
lock
and
mov
push
(bad)
(bad)
mov
mov
(bad)
stos
(bad)
call
test
xchg
stos
pop
ja
in
cmp
pop
mov
jnp
add
mov
pop
jbe
mov
inc
leave
jbe
dec
lock
clc
enter
test
imul
xor
call
mov
test
ror
lock
ror
and
aas
dec
gs
(bad)
jp
sub
fs
push
cmp
xchg
and
ror
sbb
jbe
pop
(bad)
rol
sbb
jne
cmp
mov
adc
in
out
scas
xlat
ja
or
cmp
xlat
ja
mov
mov
add
jbe
rcl
mov
mov
int
test
pop
hlt
call
mov
and
iret
inc
adc
fwait
sbb
inc
jge
fs
or
or
leave
pop
cmp
or
inc
pop
imul
repnz
bound
jecxz
xor
mov
fadd
mov
add
dec
pop
push
xor
jns
push
iret
outs
push
cwde
int3
jp
xor
add
(bad)
es
jmp
inc
ss
stos
movs
icebp
test
loopne
loop
(bad)
and
pop
out
lea
mov
test
mov
pop
test
cmp
sbb
jbe
in
push
cmp
adc
icebp
xchg
mov
xchg
sub
stos
pop
adc
sbb
or
inc
sub
enter
or
cmps
sbb
js
mov
je
sub
push
jg
add
jmp
mov
push
aas
fidivr
mov
stos
cmp
and
retf
pop
mov
les
mov
loopne
lock
mov
or
sbb
leave
mov
pop
mov
lods
inc
enter
lods
pop
movs
ja
fwait
jae
(bad)
out
repz
jb
cli
adc
push
ins
mov
sbb
jae
push
int
leave
lods
ret
cmp
fimul
xor
iret
out
push
sub
call
(bad)
pop
jle
xchg
nop
outs
test
sub
mov
mov
push
jb
test
or
and
je
fisttp
add
loop
neg
jecxz
push
xor
mov
popa
adc
add
enter
push
cli
je
pop
or
sahf
rcl
pop
add
inc
dec
pop
fmul
and
push
inc
mov
out
mov
fsub
outs
inc
jnp
lds
push
adc
mov
aad
stos
pop
shl
add
stos
pop
push
fist
push
imul
sbb
sub
push
mov
inc
fwait
pusha
popf
inc
pop
mov
sub
shr
rep
std
cmp
data16
sub
jecxz
add
(bad)
mov
(bad)
jp
lock
and
stc
push
pop
jmp
je
mov
jb
ds
inc
push
clc
pop
mov
(bad)
cld
lds
mov
pop
out
sbb
push
inc
adc
cmc
add
ja
dec
jno
cli
push
cdq
sub
sub
loopne
mov
test
and
jl
inc
lods
pop
nop
cmp
scas
sbb
into
shl
lock
cmp
cmp
lods
mov
pop
mov
mov
push
dec
push
jmp
hlt
pop
push
add
(bad)
push
push
js
jae
push
(bad)
(bad)
cmc
jmp
retf
push
stc
xlat
daa
mov
jbe
lods
push
xor
push
xchg
shl
jle
sub
bound
jmp
pop
push
aas
retf
and
loopne
inc
inc
into
mov
jmp
and
or
sub
push
test
cmp
push
div
lahf
lea
and
rcr
std
lahf
call
aad
dec
shl
pop
push
sbb
push
outs
repnz
cmp
leave
call
mov
and
and
or
sahf
(bad)
call
into
or
mov
int3
push
bound
dec
jmp
cmp
daa
and
shl
test
fnclex
inc
pop
jnp
cmp
bound
fnstsw
repz
daa
lock
jnp
(bad)
inc
pmuludq
test
or
int3
in
mov
jne
inc
lods
mov
clc
(bad)
mov
jmp
dec
bound
jp
pop
push
arpl
outs
call
xor
jnp
and
cli
ror
cmp
int3
in
stc
(bad)
dec
mov
mov
(bad)
lods
push
xchg
pop
mov
cs
pop
push
jnp
push
(bad)
xor
popf
push
stc
mov
xor
out
push
or
retf
cmps
retf
cmp
ror
ficom
popa
sbb
mov
jno
call
pop
aas
aaa
push
pop
push
mov
pop
fs
pop
jo
adc
test
add
pop
adc
adc
xlat
aaa
fcom
inc
lods
push
pop
repz
ret
es
jg
add
shr
pop
sar
iret
movs
lock
ins
push
pop
movs
pop
lods
sahf
or
or
sbb
mov
xor
sub
jmp
in
shr
inc
jo
sar
ins
and
movs
push
rcr
xchg
jno
leave
mov
mov
ins
retf
jle
ror
sbb
hlt
rol
jb
cld
loop
addr16
(bad)
outs
inc
js
dec
mov
imul
neg
dec
xchg
pop
in
jecxz
loopne
dec
int
in
jecxz
dec
in
add
in
xor
push
fisubr
ja
or
xor
or
cmp
pop
lods
push
ins
dec
adc
add
icebp
dec
addps
call
xchg
loope
mov
adc
sbb
fimul
icebp
loope
push
xlat
mul
push
fdivr
ret
ins
(bad)
jp
into
rol
out
enter
lahf
adc
mov
stos
nop
fdivr
dec
add
arpl
test
in
stc
add
pop
sub
pop
push
mov
push
pusha
cmp
dec
push
lods
mov
ins
pop
adc
arpl
sti
ror
adc
mov
leave
inc
leave
sbb
(bad)
jb
stc
pop
mov
bswap
ins
add
pop
in
or
pop
addr16
xor
and
call
into
mov
mov
out
push
xchg
lea
cmps
jbe
mov
ins
loope
ins
pop
pop
xchg
add
inc
and
ds
or
mov
out
and
or
lods
out
adc
inc
push
dec
repz
lds
fcom
sbb
push
(bad)
cmps
mov
bound
or
mov
adc
aas
lock
mov
jle
push
ficomp
inc
or
and
setae
dec
jns
test
jmp
retf
out
sub
dec
mov
fiadd
cmc
xchg
jge
mov
out
test
pop
pop
sub
es
cld
fidiv
inc
cmp
icebp
push
push
xchg
cmp
pop
dec
ret
std
fcomp
push
and
unpcklpd
rcl
icebp
sbb
(bad)
mov
stc
xchg
inc
mov
mov
rcr
mov
adc
sbb
imul
repnz
sbb
and
push
stos
int3
mov
dec
cs
ss
pusha
std
xchg
pop
cmp
jp
stos
add
aas
push
mov
je
adc
lock
mov
int
retf
cmp
jecxz
aam
rol
pop
or
add
mov
xchg
pop
ret
jle
in
in
jl
or
int3
adc
pop
pop
inc
pop
add
xor
sub
inc
xor
add
movs
ret
sbb
cld
popa
lods
and
jns
test
sbb
repz
mov
mov
popf
frstor
adc
xor
hlt
in
xchg
sbb
adc
std
mov
shl
push
or
xchg
outs
push
test
ror
(bad)
push
popa
imul
jmp
mov
stos
mov
sbb
jns
in
mov
or
pop
outs
jno
retf
sbb
pop
pop
mov
add
aad
std
dec
add
xor
push
sbb
and
mov
mov
lock
cmps
cmc
sub
in
in
ins
lock
dec
mov
lods
rcr
inc
mov
outs
fs
adc
adc
sub
jmp
mov
mul
pop
jge
arpl
cld
(bad)
xchg
(bad)
retf
test
data16
jge
test
and
jno
mov
jo
and
enter
cs
popf
sbb
adc
stos
pop
in
adc
leave
lahf
into
add
inc
push
loopne
push
int
and
sbb
cwde
out
retf
sub
imul
or
retf
aad
mov
jnp
(bad)
or
mov
xchg
dec
cli
in
fmul
add
adc
sbb
mov
mov
add
xor
arpl
or
lahf
(bad)
icebp
mov
imul
sub
jmp
ret
jecxz
in
imul
push
call
sub
ret
lock
(bad)
sbb
push
pop
dec
mov
das
dec
dec
fwait
push
movs
(bad)
arpl
inc
imul
int
jmp
lods
sub
retf
sbb
mov
stc
pop
popf
and
sub
fidiv
test
repz
inc
adc
dec
pop
or
or
sbb
popf
fs
jns
cmp
sbb
gs
mov
ja
and
inc
mov
out
inc
imul
sub
mov
add
push
xchg
and
jne
mov
stos
es
pop
ins
jmp
lea
mov
lahf
inc
push
test
outs
add
mov
fs
mov
in
je
push
gs
dec
das
clc
jo
sbb
mov
int3
add
pop
mov
test
xchg
pop
cld
clc
sub
pop
out
xchg
add
pusha
cmp
xchg
out
mov
cmp
dec
arpl
xchg
sub
les
dec
cli
je
imul
stos
mov
or
sahf
xchg
(bad)
lods
inc
mov
(bad)
or
or
mov
rol
imul
loope
ss
push
and
sub
fs
outs
cmp
mov
enter
xor
mov
push
lea
add
pop
out
cli
jmp
add
and
and
or
ds
call
mov
aad
aaa
stos
xchg
ficom
cwde
popa
sbb
mov
push
and
loope
lock
add
call
dec
add
pusha
int
daa
lods
mov
loope
push
fwait
outs
popf
fmul
or
leave
xchg
(bad)
repz
pop
and
inc
test
sub
ret
shl
es
add
dec
int
clc
ss
pop
push
clc
xlat
adc
jae
leave
pop
jecxz
dec
mov
mov
fnstsw
inc
in
sbb
mov
int3
sub
mov
retf
inc
push
test
mov
push
or
sbb
xchg
dec
jno
xchg
pop
jecxz
cmp
in
fbstp
jbe
mov
addr16
mov
mov
in
imul
dec
or
add
jo
out
cmp
pcmpeqw
mov
mov
jo
cmp
push
pop
and
mov
(bad)
mov
es
sar
dec
popf
cmp
add
push
(bad)
sub
xchg
or
xchg
jnp
cmp
xchg
mov
pop
data16
iret
nop
leave
outs
ret
push
push
rol
icebp
repnz
test
js
jae
in
mov
mov
jecxz
icebp
imul
loopne
shr
loop
sub
pop
stos
mov
mov
ror
push
push
mov
jno
aad
mov
pop
loop
in
(bad)
pop
rol
pop
add
adc
pop
mov
je
add
int3
retf
(bad)
push
ja
xchg
fcmovbe
test
fs
push
mov
cli
mov
scas
jb
icebp
push
xchg
in
jmp
add
cmps
mov
pusha
add
add
aas
xor
or
cmp
push
push
je
ret
cmp
xor
and
add
imul
cmp
arpl
int
test
inc
arpl
fild
and
movs
lock
fs
or
test
loope
add
popf
mov
cmc
pop
xor
mov
lock
(bad)
ss
gs
ja
in
outs
ror
repnz
arpl
fimul
ficom
mov
cmp
mov
cld
ret
inc
sar
and
xchg
popf
jecxz
daa
mov
jb
adc
stos
iret
sbb
mov
add
arpl
mov
jno
xor
push
loopne
aaa
or
fstp
outs
push
cmps
cmp
dec
adc
repnz
jge
pop
cwde
mov
xchg
aam
je
or
adc
out
retf
jecxz
(bad)
sbb
push
test
cmp
mov
adc
std
push
cli
inc
sbb
iret
(bad)
(bad)
sub
jbe
mov
add
cmp
scas
adc
das
xlat
and
adc
cdq
adc
mov
das
aam
or
pop
lods
stos
xchg
inc
push
inc
das
sub
scas
int3
pop
es
sub
push
mov
jl
and
push
xor
cli
pop
cmp
mov
icebp
popa
adc
and
das
aad
cmps
or
loop
mov
pop
cld
test
inc
inc
fwait
enter
jb
(bad)
popa
pop
setno
stos
mov
and
ret
pop
jnp
imul
add
mov
cmp
adc
outs
iret
jmp
popa
dec
aas
jle
test
mov
int3
mov
push
(bad)
iret
or
ss
lods
aam
add
xchg
mov
test
inc
test
mov
gs
pop
jmp
cli
ss
test
sub
push
or
sub
mov
scas
cdq
mov
shl
jo
mov
jo
arpl
(bad)
mov
push
fisub
dec
cmp
sbb
dec
xchg
sub
lods
inc
aad
jnp
or
enter
shl
and
pop
into
and
sub
mov
sbb
push
inc
iret
dec
and
inc
and
stos
sub
out
push
loopne
mov
sub
(bad)
aam
pop
pop
or
mov
ins
xor
(bad)
jb
in
mov
(bad)
(bad)
aaa
sub
mov
loopne
scas
jmp
push
ret
sbb
test
xor
inc
mov
sbb
lahf
mov
mov
xchg
jle
jmp
adc
jg
inc
jno
inc
cwde
mov
rcl
mov
mov
shld
imul
xor
dec
call
cmp
js
and
sahf
lahf
and
pop
test
mov
mov
out
adc
or
scas
adc
and
push
pop
cmp
or
data16
lock
int3
retf
or
imul
jp
push
adc
sbb
stos
shr
or
xchg
stos
adc
cwde
pop
inc
neg
jmp
popa
xchg
pushf
shl
adc
(bad)
(bad)
cmp
mov
lods
call
inc
inc
push
adc
jns
push
mov
dec
adc
loopne
fstp
pop
or
cmp
lods
int
mov
hlt
in
jl
js
inc
and
ror
scas
loop
ins
xchg
dec
adc
mov
jp
outs
call
cs
and
sub
sub
inc
xchg
ja
inc
jmp
jg
fisttp
push
or
xchg
dec
nop
pushf
and
fld
aas
int
mov
push
jno
aaa
mov
sbb
movs
xlat
jo
mov
stos
push
add
sub
scas
xlat
mov
push
outs
cmp
mov
mov
cmc
jns
aad
push
xchg
(bad)
clc
xor
pop
sbb
mov
adc
dec
inc
cmp
sub
outs
call
adc
adc
scas
(bad)
jp
cdq
and
out
out
cmc
mov
jbe
jae
(bad)
sbb
lock
sbb
dec
add
pushf
js
clc
mov
pop
(bad)
adc
sti
mov
pop
push
lods
mov
mov
pop
test
or
jg
sahf
lods
icebp
fwait
(bad)
sbb
cmps
mov
sbb
add
lock
test
inc
gs
cmp
data16
(bad)
sub
jle
inc
imul
push
test
cmps
jb
and
das
push
mov
or
jnp
mov
push
xor
and
mov
mov
add
push
dec
add
in
test
or
out
call
cwde
call
je
in
js
jo
xor
js
sahf
jmp
xor
pop
jbe
call
out
jo
and
mov
into
ret
sbb
sub
push
adc
pop
and
in
sahf
fs
push
js
(bad)
xor
inc
sbb
repnz
in
add
mov
call
sub
sti
ja
and
cmp
xchg
fisttp
(bad)
jo
mov
nop
dec
jmp
adc
lock
dec
jmp
sub
push
fst
inc
rol
es
sub
pusha
push
push
retf
or
sub
fcomp
mov
or
fnstcw
jbe
fadd
jmp
push
mov
and
inc
(bad)
mov
sub
enter
mov
push
xchg
xchg
fsubr
pop
push
adc
repz
test
jae
xchg
test
outs
leave
mov
pop
xor
jb
xor
scas
add
sub
add
lds
mov
cmp
mov
into
cmp
mov
sahf
xchg
les
sbb
push
xor
jb
cmc
jo
dec
aad
mov
sub
jno
je
lods
js
scas
mov
xor
into
stos
addr16
sub
jecxz
pushf
test
and
sub
cdq
imul
sub
loopne
loopne
in
push
mov
xlat
pusha
mov
ins
idiv
jge
jecxz
push
pop
pop
sub
sub
adc
neg
or
jae
ret
jae
gs
nop
fld
jle
adc
cmp
mov
adc
mov
jp
push
stos
mov
dec
mov
and
jne
cwde
jnp
out
xchg
mulps
add
lahf
and
lock
push
mov
scas
test
push
test
cwde
mov
adc
stc
cmp
sub
dec
push
and
dec
push
fdiv
inc
mov
cmps
test
sub
pop
jmp
dec
fs
mov
mov
adc
cmp
add
sbb
push
ja
ret
adc
or
cmp
inc
jl
add
pop
mov
movs
mov
sbb
dec
(bad)
hlt
out
mov
outs
ins
dec
jmp
mov
cli
pusha
clc
es
add
test
xchg
ins
xchg
pop
mov
shr
sbb
into
mov
xchg
pop
(bad)
jg
out
or
mov
pop
sub
sub
vmaskmovdqu
icebp
div
mov
retf
pop
enter
mov
test
or
clc
xor
add
mov
pusha
cmp
aam
ins
mov
push
pop
test
push
or
inc
mov
jl
es
fnstcw
(bad)
hlt
sub
stos
mov
push
popa
jl
fwait
cmps
push
xchg
imul
loopne
sub
cmps
lods
xchg
mov
arpl
xchg
fild
cld
dec
sar
xor
mov
rcr
inc
or
sub
sub
data16
dec
(bad)
and
(bad)
loope
loope
ret
and
bound
mov
mov
xor
xchg
dec
hlt
add
jmp
and
int3
sub
leave
mov
pop
xchg
jmp
lods
dec
mov
sub
xor
cmp
pop
pop
jmp
push
test
add
imul
mov
xchg
fldenv
mov
mov
mov
das
xlat
sbb
push
popa
pinsrw
retf
ja
fld
jb
test
sbb
push
xchg
sbb
cmp
into
mov
nop
mov
and
das
sbb
jge
call
sbb
sub
xor
not
adc
int3
rol
movs
retf
call
cmc
int
rol
sub
inc
data16
cmps
inc
xchg
(bad)
into
pop
dec
aam
cmp
mov
push
fmul
add
in
mov
jo
xor
aaa
cwde
xor
cmp
or
mov
popf
fcomp
out
sub
scas
mov
and
cmp
cmp
sbb
lds
rcl
ss
mov
jmp
and
dec
xchg
movs
dec
mov
pop
ret
movs
aas
shr
fstp
out
dec
cmp
push
xlat
jp
dec
push
adc
stc
movs
mov
jg
cmp
jbe
push
rcr
fsubr
repnz
inc
into
push
adc
xor
js
mov
sbb
pushf
stc
xchg
and
fidivr
sub
fnstcw
jnp
pop
push
pop
test
mov
dec
inc
jecxz
mov
pop
xchg
sub
sbb
(bad)
popa
popa
and
or
test
jne
out
sar
mov
retf
or
dec
lock
sub
ds
adc
push
dec
add
nop
adc
mov
sub
es
scas
jl
or
inc
outs
movs
xchg
outs
repnz
inc
jne
popa
out
sbb
fwait
data16
push
mov
dec
lahf
call
call
mov
in
inc
mov
loope
pop
and
outs
mov
push
fcom
fisub
pop
push
inc
das
inc
push
in
mov
aam
sahf
mov
dec
cmp
sub
or
test
sub
mul
or
or
fwait
fs
bound
inc
stc
(bad)
outs
mov
push
jp
inc
mov
sbb
push
les
mov
(bad)
pop
sub
and
loop
repnz
(bad)
imul
push
inc
inc
out
push
mov
mov
or
mov
mov
jae
cwde
add
jbe
push
inc
arpl
(bad)
ds
ret
mov
outs
in
push
stos
arpl
mov
or
xor
in
or
inc
xchg
lahf
cmp
in
or
(bad)
pop
pop
out
addr16
test
xor
ja
retf
fiadd
js
in
ds
xchg
loope
mov
repnz
ds
imul
daa
push
rcr
lods
neg
fst
sbb
cmp
icebp
push
add
movs
fnsave
cmp
mov
and
sbb
call
mov
pop
jnp
sahf
pop
add
pop
jg
add
aas
mov
dec
ss
jne
outs
jmp
out
unpcklps
push
add
int3
xor
stos
into
(bad)
test
sbb
and
bound
fisub
fs
test
fwait
mov
in
push
enter
adc
sub
aas
in
iret
int
retf
icebp
dec
shr
pop
mov
popf
test
mov
or
dec
add
mov
sti
push
iret
push
clc
inc
inc
jg
imul
mov
outs
loopne
pop
and
mov
and
gs
sub
ror
in
cmp
inc
or
sub
(bad)
mov
mov
dec
sub
cdq
cmp
push
mov
pop
mov
dec
retf
inc
outs
lock
pop
jecxz
add
outs
aad
enter
jle
ins
or
and
sub
and
mov
dec
fwait
int3
push
jl
lea
adc
popa
adc
pusha
sbb
int
das
in
cmp
adc
cmp
sahf
out
inc
inc
add
jne
or
pop
pop
retf
add
xchg
outs
sub
data16
or
sahf
shl
data16
sub
cli
rol
imul
pop
and
scas
adc
test
loop
scas
scas
in
mov
popa
and
icebp
scas
inc
add
out
es
test
fistp
sub
sub
jge
xchg
add
cmp
cmp
jp
outs
aaa
popf
mov
fnstsw
pushf
jo
and
fsubr
mov
stos
aad
loop
pop
adc
retf
cmp
jmp
mov
mov
dec
arpl
mov
rol
daa
rcr
sbb
fiadd
adc
test
xor
mov
sbb
mov
sbb
dec
and
mov
push
jbe
xchg
jnp
lds
or
xor
iret
mov
fst
mov
lods
ja
pop
mov
cmp
popa
je
ja
adc
iret
or
jns
push
or
sbb
jne
adc
jo
dec
lods
ds
in
movs
adc
jno
pop
repnz
xchg
cmps
mov
cs
or
push
jbe
or
das
into
out
push
jo
mov
fcmove
cmp
cwde
add
jno
add
pusha
aaa
mov
aam
cli
mov
in
xor
aam
aam
push
cmp
sbb
loope
nop
loopne
adc
inc
cli
(bad)
pop
xor
mov
shl
mov
stos
jns
sbb
dec
ss
mov
scas
mul
xchg
leave
mov
xchg
jle
add
jecxz
mov
scas
addr16
add
test
pop
loop
push
xor
fistp
mov
xor
xchg
cs
pop
xchg
add
(bad)
mov
arpl
mov
inc
xchg
movs
pop
dec
out
mov
sub
push
push
popa
pop
pop
jnp
jg
push
js
icebp
arpl
outs
in
lahf
mov
dec
jmp
pop
mov
(bad)
adc
sub
(bad)
xchg
outs
xchg
xchg
sub
cmp
js
stos
xchg
sbb
icebp
inc
js
mov
cmps
mov
fld
dec
out
pop
pop
add
sbb
hlt
lds
dec
mov
hlt
xor
inc
add
fbld
dec
les
dec
mov
mov
cld
pop
adc
mov
mov
cdq
dec
ret
cmps
mov
mov
imul
mov
out
cmc
outs
stc
movs
mov
out
xor
fs
xor
mov
dec
(bad)
mul
xor
mov
cmp
sbb
add
aad
dec
cmp
gs
xor
mov
push
cld
sar
inc
ret
ret
popf
xor
sub
jb
pusha
jmp
daa
dec
xor
in
or
push
pop
adc
call
rcl
rcl
sbb
fdivr
repz
(bad)
int3
jp
ins
or
jp
hlt
ds
xor
lock
aad
popf
mov
fisubr
or
inc
lea
add
and
and
(bad)
mov
jle
jns
mov
or
hlt
hlt
xor
mov
sub
jae
and
jae
addr16
pusha
ins
pop
sub
xchg
ds
push
lods
push
add
push
sbb
fild
mov
arpl
out
mov
pop
push
repnz
ror
stc
dec
int3
cmp
or
xor
lods
js
ins
aam
pop
and
cmp
popa
push
dec
cmps
or
fcmovnu
inc
dec
dec
retf
ins
mov
retf
jb
retf
push
gs
cs
push
shl
in
inc
cvttps2pi
mov
mov
mov
cmp
jo
aaa
enter
movaps
scas
sbb
add
pushf
cli
mov
cmp
mov
sbb
je
cmp
retf
sar
jmp
push
test
pop
out
dec
mul
lds
enter
mov
dec
mov
xchg
aam
push
mov
xor
push
dec
mov
adc
pop
scas
or
iret
and
inc
sbb
adc
cld
mov
adc
fiadd
and
inc
jb
pusha
sar
push
js
mov
inc
sbb
pop
mov
xchg
sub
xchg
and
mov
lock
jno
call
out
and
je
mov
stc
fwait
xor
xor
stos
test
arpl
mov
jns
cs
sbb
push
shr
add
dec
push
in
xchg
xchg
addr16
out
push
cmp
sbb
out
pop
les
and
(bad)
les
mov
in
call
adc
(bad)
pop
ins
jge
pop
and
mov
bound
popa
push
xor
ret
arpl
(bad)
jnp
test
ret
inc
push
cs
sub
xor
inc
and
imul
repz
adc
adc
fisub
cmp
jbe
sub
mov
ins
mov
mov
mov
repnz
cmps
mov
fimul
fisub
in
add
test
test
daa
jbe
fadd
cwde
out
cmp
scas
jbe
call
pop
mov
pusha
test
mov
adc
test
xchg
cmc
into
inc
icebp
push
push
cdq
sbb
sbb
loope
daa
xchg
push
cwde
arpl
addr16
mov
scas
jl
stos
mov
test
push
and
cli
daa
daa
fs
lea
mov
jns
mov
mov
rcr
fist
jmp
pop
iret
mov
hlt
sbb
jmp
mov
pop
imul
mov
cmp
inc
js
rcl
sub
inc
in
adc
test
ret
mov
inc
aas
out
sbb
mov
ds
in
js
js
aam
jg
dec
cld
mov
mov
sbb
outs
retf
cmps
fsubr
xor
lahf
mov
jge
or
adc
outs
fs
imul
sbb
clc
xor
sub
rol
jle
int3
ins
inc
xchg
iret
scas
sub
pop
pop
bound
pop
icebp
push
cmp
jns
stos
fdiv
ror
stc
fld
mov
fbld
outs
jmp
jno
test
push
adc
dec
sub
jno
addr16
mov
cs
xchg
(bad)
shr
cmps
inc
mov
shl
xchg
aas
imul
nop
inc
daa
and
mov
das
mov
dec
nop
out
jl
fidivr
xchg
dec
jae
ss
scas
or
mov
jl
cmps
pusha
dec
lods
movs
stc
sbb
div
jmp
into
and
jbe
adc
loopne
inc
sbb
ins
xchg
pop
popf
adc
xchg
mov
sbb
inc
jnp
sub
sub
sub
mov
mov
stc
int3
dec
aam
dec
imul
jae
cmp
retf
add
popa
sbb
or
or
push
xor
mov
les
inc
ror
mov
dec
sbb
mov
call
add
xor
or
ret
jns
mov
fstp
stos
out
push
cmp
mov
mov
dec
int
lds
inc
stos
rol
loop
lds
inc
bound
imul
retf
adc
enter
es
jbe
push
inc
stos
das
je
mov
dec
lods
xor
int3
fcmovb
mov
pusha
jnp
(bad)
or
pop
dec
(bad)
fld
push
add
pop
inc
adc
jo
into
fxam
call
bound
cmp
das
aad
sahf
stos
std
mul
or
and
aam
movs
iret
fdivrp
aam
das
xor
sub
call
mov
ret
addr16
xchg
faddp
(bad)
push
inc
imul
xor
xchg
cmp
sub
retf
sub
xchg
stos
pop
out
adc
loope
cmc
xchg
xlat
(bad)
cmp
push
aam
fsubr
lea
dec
ficomp
fcom
les
push
sub
ror
(bad)
sar
loope
mov
xchg
mov
les
mov
out
shl
scas
cmps
das
ret
xor
push
push
enter
xor
out
adc
and
nop
push
push
rcl
or
fidivr
add
int3
add
jmp
aam
adc
sbb
fst
outs
scas
bound
sub
scas
jmp
mov
nop
xchg
dec
sti
lahf
cmp
pop
pop
adc
inc
lea
or
rcl
or
jae
or
ret
fwait
pop
imul
jmp
sub
and
fidiv
enter
and
fisub
jecxz
(bad)
mov
outs
push
xchg
lods
push
pop
loope
adc
loop
adc
inc
adc
scas
out
in
aaa
push
ss
or
jmp
retf
sbb
mov
retf
sub
xlat
test
cmp
es
cwde
cmp
imul
dec
rcl
add
loope
fdivr
push
mov
xor
dec
test
inc
aas
into
popf
dec
jp
mov
mov
mov
retf
aas
sbb
xor
out
imul
pop
push
pop
(bad)
sub
jge
js
cmp
fldl2e
sbb
inc
je
addr16
pop
and
(bad)
jmp
ds
lahf
into
movs
call
in
inc
inc
out
xor
push
retf
or
jae
rcr
mov
push
jge
jmp
adc
pop
fnsave
jp
and
aam
add
fwait
(bad)
cmp
push
mul
lds
sbb
sub
jne
add
test
jns
ins
xchg
(bad)
out
pop
loope
inc
pop
mov
mov
gs
nop
movs
aas
inc
cmp
iret
xor
or
xor
jecxz
ret
jg
pop
jbe
out
cmp
test
and
mov
bnd
pop
aas
je
shl
ja
mov
dec
lds
sbb
(bad)
mov
xchg
add
push
sub
pop
push
sub
mov
push
push
data16
mov
inc
or
xor
add
inc
inc
dec
pop
mov
and
inc
add
lahf
jle
mov
stos
js
arpl
pop
loopne
jmp
aad
adc
repz
retf
jge
fs
add
rcl
pop
inc
test
icebp
(bad)
push
in
shl
sub
cmp
pop
or
inc
pop
das
ds
loop
dec
lods
adc
cmps
shr
jnp
sub
in
sbb
sbb
pop
pop
mov
jmp
arpl
sub
aas
int3
adc
adc
xor
ret
out
xor
(bad)
(bad)
lods
jo
and
ds
mov
jno
icebp
mov
mov
loop
in
repnz
jbe
xchg
cmc
pop
les
xchg
inc
xor
icebp
mov
and
xchg
int
loopne
fmul
cmp
mov
jbe
jle
add
std
jns
test
sbb
icebp
mov
imul
mov
shr
pushf
(bad)
mov
(bad)
fbld
rcl
je
fidiv
mov
call
jbe
dec
(bad)
dec
jg
cmp
sub
div
std
xor
sahf
in
ins
cli
jbe
out
std
adc
sbb
cmc
cmc
push
rcr
cdq
and
or
sbb
mov
rol
cli
push
std
cmp
or
push
mul
outs
enter
push
push
es
or
xlat
outs
aaa
aas
lods
push
sub
das
dec
or
jbe
ss
std
rol
fidivr
(bad)
aas
pop
or
cld
or
addr16
hlt
test
mov
hlt
xor
aas
(bad)
nop
adc
cmp
daa
and
jno
shr
add
clc
in
push
xchg
test
jmp
fld
ficom
mov
ret
mov
xor
jae
gs
push
int
gs
mul
xor
mov
inc
mov
adc
sahf
fcom
mov
fild
jl
adc
outs
jne
int
inc
sub
loopne
or
lea
cmp
test
mov
xchg
push
in
or
imul
push
cmc
mov
xor
xchg
xchg
out
sti
sub
sbb
inc
push
out
mov
add
ja
(bad)
dec
in
xor
shl
push
fiadd
or
stos
(bad)
jns
movs
adc
ficomp
push
pop
cmp
fst
push
mov
mov
push
or
mov
not
fdivr
leave
(bad)
ret
dec
jnp
in
xor
push
bound
arpl
fwait
xor
ja
movs
dec
mov
aad
leave
ja
push
sub
(bad)
add
mov
arpl
mov
mov
cmp
push
addr16
lea
pop
frstor
fcomp
push
push
shr
call
fcomp
or
in
ja
std
test
fxrstor
movs
cmp
push
cs
test
js
sbb
stos
lea
test
jne
out
pop
stos
aaa
mov
push
lea
and
mov
fnstsw
jg
push
xor
adc
or
adc
inc
neg
sti
repnz
fisub
in
push
xchg
out
aas
rol
movnti
sahf
xchg
mov
jne
mov
push
movs
addr16
cli
add
fucom
ins
mov
fs
push
(bad)
aad
or
sbb
jnp
ja
dec
and
retf
add
repz
in
mov
push
js
add
and
mov
inc
and
push
ret
mov
cmp
or
xor
cs
inc
test
cld
mov
ins
es
or
mov
inc
shl
mov
xchg
push
syscall
(bad)
out
ret
ficom
mov
mov
jge
adc
sbb
rcr
add
fs
cmp
cmp
bound
xor
and
dec
xchg
in
and
fisubr
xor
test
dec
sub
dec
call
test
jecxz
ret
js
in
ret
(bad)
and
xchg
jp
xor
mov
cmps
ins
ret
hlt
cmp
in
xchg
mov
call
outs
fmul
icebp
mov
cmp
outs
lock
aam
stos
repz
mov
xchg
imul
xchg
mov
adc
mov
inc
adc
jae
icebp
adc
data16
das
dec
mov
sub
push
cmp
stc
push
mov
(bad)
pop
mov
and
movs
pusha
cmps
cmps
mov
in
(bad)
push
je
(bad)
(bad)
js
loop
mov
push
inc
xchg
popa
sub
imul
dec
dec
jno
cmp
adc
or
fwait
(bad)
(bad)
and
jmp
test
adc
aas
cmp
inc
sbb
adc
lahf
jl
iret
bound
inc
pop
xor
dec
xchg
xchg
das
in
xchg
dec
inc
cwde
out
pop
jle
fs
jns
xchg
mov
or
iret
or
push
ja
jbe
xor
mov
cmp
aad
scas
push
movs
adc
adc
jmp
inc
pop
or
dec
and
cmp
jne
pusha
not
xchg
mov
mov
into
lods
retf
iret
cmps
pushf
lds
movs
ins
mov
jo
mov
jb
(bad)
movs
mul
xor
cdq
loop
out
repnz
inc
fisttp
adc
adc
mov
pop
outs
(bad)
push
cmps
cmc
ficomp
hlt
adc
ds
jbe
mov
aam
add
dec
pop
add
out
add
aad
sar
mov
mov
and
xchg
xchg
adc
cmp
ror
rcl
push
mov
jno
mov
push
int3
and
jp
mov
aam
inc
cli
inc
mov
jb
call
ins
mov
push
lahf
adc
scas
push
gs
daa
std
xor
mov
(bad)
jle
sbb
shl
dec
mov
cmc
jb
stos
push
scas
mov
add
stos
mov
push
xchg
xor
push
dec
mov
out
repz
call
adc
mov
ffreep
dec
sbb
push
fiadd
xor
ret
add
je
(bad)
cmps
jg
jno
inc
out
fiadd
ins
dec
mov
inc
aad
shl
add
jno
sar
adc
mov
popa
cld
lods
(bad)
iret
ins
mul
test
cmc
sub
sub
inc
(bad)
repnz
push
loope
cmp
sub
sbb
ds
mov
aam
pop
rcl
sbb
mov
jl
push
pusha
fprem1
pop
pusha
outs
pop
shl
dec
pop
pop
mov
test
fidivr
sbb
mov
mov
cld
sar
jb
mov
dec
xchg
mov
retf
push
ds
push
data16
sub
les
mov
fadd
(bad)
xor
dec
pop
fstp
jg
xchg
dec
nop
pop
mov
rcl
sbb
iret
cwde
dec
xchg
jecxz
adc
sbb
ds
aas
int3
jmp
test
cmp
xchg
pop
cmps
sub
xor
inc
mov
mov
jnp
inc
fcmovnbe
out
dec
repnz
sti
pop
loope
xchg
and
adc
lahf
push
jne
add
cmp
lock
mov
push
cli
loop
or
call
retf
dec
cmp
jmp
dec
xor
shl
dec
pushf
and
test
dec
retf
xchg
mov
jg
jnp
adc
jg
mov
pop
and
(bad)
pop
(bad)
jno
or
add
mov
mov
jle
push
shl
lods
adc
fild
add
pop
adc
in
dec
out
cmps
jno
jmp
stos
xor
ret
dec
jbe
pop
(bad)
ja
sbb
xchg
inc
cmps
shl
pop
ret
mov
out
dec
inc
mov
leave
cmp
inc
mov
popa
xchg
lds
adc
ficom
mov
loop
outs
and
loope
mov
mov
and
adc
mov
bound
and
fistp
or
mov
jnp
ds
(bad)
icebp
mul
push
pop
or
ins
aaa
sbb
sbb
test
jle
(bad)
adc
fiadd
mov
les
jbe
add
cmp
adc
mov
retf
inc
xor
push
xor
daa
test
mov
nop
mov
in
cvtps2pi
jae
or
adc
loope
jp
stos
jmp
cmps
xchg
inc
push
es
push
lds
pop
cmp
(bad)
outs
bound
pop
jp
xchg
cli
add
outs
xor
cmp
jnp
mov
cmp
(bad)
mov
dec
cli
push
shr
cwde
cdq
mov
out
shl
cmp
mov
outs
mov
iret
and
movs
int3
out
popa
call
jmp
sar
sbb
lds
fmul
call
fmul
fnstcw
xchg
aaa
imul
int3
shl
adc
pushf
fadd
pusha
(bad)
(bad)
cmp
inc
jp
mov
fimul
xchg
cmp
push
fsub
jge
and
jmp
movs
idiv
mov
ins
xor
cmp
out
push
rcr
push
push
aaa
ins
les
mov
add
inc
mov
int
cmp
pop
xchg
xlat
mov
xchg
lds
cmp
test
sti
or
fcom
jmp
xor
mov
call
jno
mov
adc
cmps
adc
push
ins
cmp
adc
pop
outs
jmp
ins
je
jne
xor
pop
jmp
or
clc
mov
inc
xor
dec
ret
(bad)
adc
fst
daa
pop
pop
outs
aad
cmp
mov
dec
sbb
mov
xor
test
pop
lahf
mov
sti
stos
lock
mov
jns
movs
adc
inc
sbb
rcr
call
inc
leave
mov
xchg
jns
cmp
into
out
lods
(bad)
xchg
stos
dec
hlt
les
dec
push
mov
adc
fistp
push
psubw
iret
loop
fcomi
jns
lods
add
mov
push
xchg
fidiv
push
mov
mov
inc
ret
dec
into
jg
mov
jne
dec
mov
iret
jno
(bad)
pop
std
inc
dec
stos
popa
dec
popa
push
xor
sub
mov
or
repnz
sar
mov
jo
adc
imul
pmuludq
pop
clc
pop
pop
imul
mul
mov
lods
sub
out
and
ds
jns
lea
aaa
iret
outs
daa
mov
ss
sbb
push
inc
inc
addr16
mov
mov
popf
dec
cmovs
and
pop
fldcw
fstp
cmp
inc
xchg
ins
call
sub
adc
mov
push
cmc
in
push
cmp
push
pop
out
push
sub
jnp
mov
xchg
ja
(bad)
ss
shr
fcmovb
inc
inc
out
dec
mov
je
test
leave
sbb
and
(bad)
jmp
cmc
retf
dec
adc
cmp
fdiv
test
rcr
inc
sahf
xchg
fs
push
lds
cmps
stc
add
test
inc
or
xor
mov
(bad)
idiv
aad
cmp
gs
in
shr
adc
xor
mov
dec
(bad)
jmp
pop
jp
stos
pop
fwait
mov
pop
push
ins
push
adc
jl
les
or
xor
jp
xchg
mov
imul
sub
and
inc
cmps
jno
sbb
daa
mov
hlt
stos
cwde
or
stos
imul
xor
sbb
test
sub
push
into
sahf
aam
dec
add
push
loope
(bad)
leave
jmp
fdivp
xor
jl
pop
inc
stos
jmp
jecxz
in
or
inc
call
cwde
jae
cli
leave
scas
jecxz
call
lds
retf
(bad)
push
cmp
cs
por
and
rep
jne
shr
jb
enter
test
in
push
add
mov
push
mov
xor
xchg
daa
adc
pop
jmp
aas
mov
lea
lods
jnp
mov
ret
fmul
mov
dec
dec
cmp
out
cld
mov
daa
pmaxub
rol
stos
aad
push
inc
jl
xchg
and
cmps
pop
jg
fxam
cmp
adc
fs
pop
sbb
pop
loope
pop
sub
pop
rol
and
(bad)
bound
paddw
mov
xchg
sbb
xchg
adc
jg
loope
pop
cmp
scas
paddusw
jno
ins
xchg
aaa
xchg
pop
pop
or
retf
push
mov
retf
fs
out
cmps
mov
pop
stc
mov
sub
pop
jmp
add
test
loop
arpl
push
cmps
js
xchg
mov
inc
add
int3
push
bound
adc
push
cmp
sub
mov
int3
pop
adc
mov
test
mov
data16
idiv
dec
stos
cmps
(bad)
push
xor
inc
idiv
vmovupd
pop
pop
mov
xchg
sub
dec
mov
imul
inc
inc
cmps
xor
ss
js
push
mov
jne
jp
push
cmp
mov
test
in
push
(bad)
int
pop
xchg
(bad)
test
aas
sbb
mov
push
(bad)
fidiv
jbe
mov
stos
dec
(bad)
icebp
scas
adc
bts
out
cli
adc
bound
push
and
shl
fdiv
fdiv
mov
push
(bad)
xchg
push
and
pop
mov
cdq
sub
popf
stos
sub
ins
out
icebp
pop
or
cmp
xor
mov
ins
imul
xchg
inc
and
shl
mov
pop
or
pusha
cmp
mov
cmp
in
jns
mov
push
xchg
mov
mov
sub
dec
and
(bad)
cwde
hlt
push
or
xor
pop
jmp
imul
cmp
mov
inc
lea
outs
mov
bound
sbb
dec
imul
ins
cmp
ret
inc
les
jae
lock
cmps
mov
mov
pop
sar
das
push
pop
pushw
mov
xor
js
sbb
inc
das
lock
cmp
xchg
mov
jl
fisttp
in
sub
push
jns
cdq
push
xor
ret
mov
shl
xor
in
fs
inc
xchg
cmp
adc
(bad)
cmp
in
or
mov
loop
call
adc
rol
push
xchg
cmp
xchg
fdivr
xor
adc
xchg
pop
outs
popf
jg
ret
and
addr16
pop
enter
or
mov
xor
or
mov
pop
ret
cmp
std
(bad)
retf
int
ins
push
or
mov
pop
ins
or
push
fnstsw
xlat
movs
shl
scas
sub
adc
mov
data16
icebp
sahf
cmp
pop
fiadd
fcmove
loopne
cli
pop
xor
jle
push
mov
cwde
sahf
mov
call
pop
mov
mov
pusha
dec
mov
fwait
push
rcl
sbb
dec
lds
cmp
mov
sbb
ror
xchg
cmp
add
icebp
aaa
add
and
xchg
inc
popa
out
cmp
jae
ins
loope
cmps
push
iret
sbb
inc
loop
sub
je
movs
lods
fild
lds
mov
pop
lods
xor
imul
or
test
jg
jns
and
mov
shl
lods
fsub
pushf
push
sbb
(bad)
mov
adc
hlt
sbb
sub
mov
dec
and
adc
push
fcom
ficomp
loop
aas
and
mov
mov
jmp
jno
gs
mov
fimul
rol
jmp
(bad)
and
lock
sub
das
dec
(bad)
cmp
movd
mov
or
mov
mov
dec
mov
call
test
jns
jecxz
jmp
or
lods
iret
rol
pop
mov
jae
adc
lds
xor
les
dec
scas
jp
push
scas
lock
jmp
sbb
int
std
ret
xchg
push
imul
mov
pop
popf
cdq
dec
xor
repnz
cmp
scas
mov
cmp
xchg
mov
dec
das
js
hlt
jl
xlat
enter
minps
call
xlat
cli
xlat
inc
out
cli
(bad)
int3
mov
mov
stc
call
push
test
ret
call
ja
rcr
daa
test
push
in
or
loopne
jnp
xchg
lds
out
jnp
xchg
adc
loope
adc
daa
aad
mov
sub
out
inc
mul
iret
inc
ret
push
repz
xlat
sbb
mov
pop
mov
push
ror
mov
dec
scas
sbb
rcl
jns
test
xchg
mov
cmp
mov
jno
jecxz
cld
nop
cmps
mov
(bad)
clc
stc
das
cmp
mov
out
push
pop
ins
sbb
aam
das
mov
scas
xchg
ins
in
push
retf
push
dec
dec
(bad)
ret
mov
stc
pop
inc
(bad)
or
jnp
rol
ret
sub
cli
pop
jnp
push
out
jns
jno
retf
jge
mov
mov
mov
jecxz
push
lock
xor
push
pop
adc
and
out
and
ins
sub
sub
(bad)
lea
cwde
ret
adc
out
rol
push
clc
jmp
fwait
pop
pop
mov
jge
xor
scas
scas
adc
lock
or
pop
lock
sbb
ret
(bad)
cmp
push
add
addr16
test
int
mov
jmp
dec
cmp
lods
xor
push
cmp
ins
(bad)
in
data16
mov
pop
push
pop
mov
adc
push
mov
inc
push
icebp
mov
scas
mov
adc
test
rcl
pop
add
jnp
hlt
xor
push
jl
inc
rdrand
int3
inc
xor
mov
push
cmp
push
dec
mov
xchg
and
sub
(bad)
lds
pop
lods
sub
sub
das
not
sub
xor
enter
stos
jp
jnp
test
inc
sbb
add
sub
sbb
xor
jno
(bad)
sbb
js
lds
mov
iret
jbe
inc
inc
xor
mov
pop
cdq
aad
xchg
inc
sbb
cmp
add
xchg
and
gs
or
mov
or
sub
fnsave
(bad)
push
clc
add
pop
sub
rcl
mov
mov
adc
push
fdiv
test
pop
mov
cld
icebp
lods
fbld
mov
retf
and
movs
pop
push
sbb
ret
mov
pop
adc
and
ficom
push
or
mov
xchg
lds
mov
leave
pop
pop
jmp
jae
lock
in
mov
gs
movs
clc
pushf
sub
sbb
fcom
add
retf
push
mov
fsqrt
int
xchg
jbe
cmp
(bad)
(bad)
xchg
jmp
push
jne
stc
enter
cmp
cmp
and
jb
push
mov
sbb
test
add
pop
ror
ret
mov
cmp
aam
idiv
test
ds
pop
push
inc
push
push
fs
xor
iret
inc
icebp
mov
pop
adc
cmc
jecxz
xchg
(bad)
psubb
dec
mov
addr16
hlt
(bad)
jl
addr16
adc
sbb
shl
cmc
rep
out
add
jmp
fistp
in
movs
shl
(bad)
push
mov
icebp
repnz
pop
loope
in
jne
std
xchg
cmp
popf
ins
mov
arpl
inc
imul
sub
xchg
sbb
stc
cmps
add
scas
jb
jl
les
add
xlat
pop
rol
mov
inc
inc
inc
mov
or
clc
jns
xor
jg
(bad)
jp
jb
push
cpuid
adc
int
imul
out
or
xchg
adc
mov
leave
fs
aaa
push
dec
pop
adc
sub
mov
jbe
mov
int
cmps
jge
cdq
pushf
or
push
dec
mov
xchg
pop
mov
inc
and
lods
sbb
leave
ss
mov
push
ins
xchg
cs
out
cmp
rcl
pop
fadd
xchg
mov
or
pop
inc
sbb
cmp
pop
jns
retf
aas
ret
arpl
sbb
sub
stos
data16
pop
dec
(bad)
outs
jl
and
call
dec
cli
enter
add
outs
mov
mov
pop
outs
dec
mov
push
push
mov
dec
mov
jmp
pop
(bad)
mov
fs
xchg
cmp
(bad)
shl
lahf
mov
inc
xchg
rol
sbb
jl
xor
sub
mov
in
out
es
push
mov
xor
out
cmp
mov
addr16
enter
retf
iret
out
loopne
pushw
dec
xchg
out
ss
add
imul
sub
sbb
inc
mov
push
mov
popa
and
jmp
(bad)
xor
sbb
rcr
jmp
xchg
adc
ret
aas
aam
(bad)
mov
push
mov
add
xor
cdq
jg
shl
ins
test
hlt
mov
dec
aas
(bad)
fst
(bad)
jbe
and
out
dec
xor
adc
mov
jg
retf
mov
mov
cmps
aam
int
retf
xchg
pop
cs
clc
iret
push
mov
mov
call
imul
outs
sub
xchg
dec
or
fimul
nop
jle
mov
es
les
pop
jae
inc
stos
movs
fiadd
imul
je
mov
sub
pop
mov
out
pop
and
sub
mov
test
addr16
aam
add
mov
daa
and
shl
cmp
push
loop
jecxz
jb
aam
xor
stos
out
imul
mov
mov
push
sbb
dec
std
(bad)
and
in
jo
fidiv
jo
inc
popa
inc
sahf
pop
add
(bad)
pop
inc
jle
mov
cmp
jg
fcmovb
jmp
or
xor
shl
fld
and
mov
xchg
or
sti
adc
loope
sub
sub
call
aas
hlt
into
push
jp
sbb
enter
cmps
pop
cmp
aaa
ins
mov
out
test
mov
jns
push
mov
std
stc
cmp
xchg
sub
je
mov
pushf
aam
add
pop
shl
lds
push
mov
dec
xlat
clc
mov
cmp
div
mov
xor
mov
mov
adc
xchg
das
iret
adc
fild
into
inc
add
fiadd
jl
inc
fistp
scas
pop
cmp
dec
push
jnp
clc
adc
or
pop
mov
add
jb
mov
call
mov
push
or
add
sbb
inc
xchg
push
mov
sbb
xchg
(bad)
pop
fwait
lock
lds
aam
mov
add
ja
rcl
(bad)
out
dec
neg
push
push
out
nop
daa
xor
jmp
js
jle
sub
or
hlt
push
sub
pop
rcl
jecxz
xchg
ficom
out
adc
and
mov
retf
sbb
ss
cmp
shl
and
push
pop
xchg
inc
and
mov
cli
and
cmp
or
mov
jno
js
dec
ss
add
sbb
mov
movs
inc
(bad)
(bad)
scas
push
sbb
popf
arpl
mov
push
sahf
push
stc
ja
adc
cli
jne
movs
jecxz
push
(bad)
retf
ja
pop
cmps
int
push
pop
test
sub
adc
gs
or
ret
pop
aad
and
sub
in
or
cli
xor
pop
pushf
stc
jnp
sbb
and
inc
mov
into
pusha
or
add
add
es
int3
xchg
fisubr
sub
xchg
mov
mov
out
cmp
mov
xchg
jp
cli
scas
jge
cmp
mov
inc
cs
push
scas
mov
hlt
lds
fwait
dec
bound
mov
mov
sub
mov
inc
xchg
js
test
out
sub
jne
push
hlt
jge
cmps
(bad)
add
mov
sub
test
pop
push
and
test
or
nop
mov
or
or
or
nop
shl
push
out
xor
push
shl
mov
push
ja
add
leave
enter
push
fdivr
push
hlt
and
aas
mov
pop
jmp
int3
fcomp
or
add
or
push
stos
add
je
sbb
js
add
mov
std
or
sub
clc
imul
test
sub
jne
loop
and
in
movs
aad
nop
and
pop
mov
and
cmp
scas
dec
and
inc
xchg
or
add
dec
lods
push
cmp
jmp
jb
mov
ret
das
xor
sbb
adc
mov
mov
sub
stos
retf
push
clc
xor
das
das
push
jl
inc
ins
cmp
cdq
xchg
cmps
cmp
rol
mov
xchg
adc
mul
push
nop
aaa
cmc
dec
xchg
inc
dec
ret
test
mov
jge
dec
cmp
sub
jecxz
fcom
(bad)
mov
aaa
mov
mov
jp
mov
push
es
inc
pop
call
inc
les
push
les
mov
xchg
mov
dec
pop
push
mov
mov
mov
add
sar
lock
lods
dec
pop
mov
rol
jl
dec
jo
push
jle
pop
mov
add
fdivr
mov
pusha
lods
es
sbb
imul
xor
std
outs
adc
xchg
mov
adc
imul
js
mov
fdiv
mov
fs
movs
call
enter
int
scas
cmp
sub
pop
shr
pushf
inc
clc
lods
stc
dec
adc
out
cmp
neg
loopne
mov
push
mov
fst
sub
xchg
or
pusha
push
xor
data16
adc
daa
pop
pop
stos
cmps
mov
jp
enter
(bad)
mov
sub
(bad)
jo
mov
mov
mov
sbb
mov
sub
pop
xchg
jge
mov
sbb
xchg
fidiv
in
cmp
or
inc
je
sahf
push
cmp
jmp
arpl
mov
sub
adc
das
and
mov
lds
cmp
das
mov
aaa
(bad)
pop
in
adc
loopne
loop
jns
xchg
sbb
es
ret
sub
xchg
and
sbb
sub
fldcw
(bad)
scas
mov
imul
imul
pop
xchg
idiv
outs
loop
mov
sub
pop
addr16
and
aaa
stc
sub
mov
xchg
xchg
pop
stos
aad
cli
dec
cs
ret
cmc
jle
repnz
push
push
add
cwde
sbb
fldpi
cmps
je
sub
popf
xchg
xor
mov
push
aad
add
mov
stos
pop
sbb
and
neg
lahf
or
xor
sub
mov
xchg
push
les
cmps
push
jae
mov
jg
cvtps2pd
stos
iret
stc
dec
mov
mov
outs
and
mov
ins
pop
inc
push
mov
aad
cmp
ret
je
sbb
inc
sub
xchg
scas
adc
sbb
pop
inc
mov
cmp
sub
mov
or
or
adc
cwde
popf
dec
repnz
lock
push
push
lahf
aaa
lock
lds
mov
push
jns
ins
add
imul
ret
inc
xor
addr16
ret
or
ficomp
imul
lahf
dec
dec
ror
fs
add
outs
xor
cli
push
add
jge
je
jl
cdq
sbb
dec
jno
xor
mov
and
(bad)
repnz
push
mov
mov
sub
int
arpl
add
xchg
outs
leave
mov
push
fstp
xchg
loop
(bad)
(bad)
(bad)
test
jl
pusha
int
inc
aam
add
ficomp
xchg
pop
test
sar
xlat
scas
pop
sahf
scas
xchg
rol
fdivr
mov
jno
xchg
rol
aaa
outs
inc
ins
fwait
jge
mov
daa
icebp
xor
ret
jle
mov
dec
inc
sar
inc
push
pop
sub
cmc
mov
or
shr
push
icebp
movs
mov
popf
mov
jo
pop
jmp
daa
loopne
xchg
ja
sub
pop
(bad)
xor
push
shl
test
pop
ficom
in
(bad)
rcl
mov
loopne
add
les
in
mov
neg
int
pop
(bad)
arpl
ficom
sbb
repnz
popa
dec
jg
jns
fdivr
mov
lock
or
outs
into
(bad)
cmp
pop
xor
imul
stc
scas
mov
test
xor
add
ins
jnp
push
jnp
int3
jb
neg
int
ss
adc
mov
pop
inc
pusha
sbb
bound
mov
push
inc
fcom
mov
push
xchg
loop
out
jmp
sbb
mov
inc
dec
std
sbb
mov
pop
lods
sti
retw
sahf
pop
aad
outs
xchg
inc
push
js
xor
retf
add
and
pop
frstor
add
mov
mov
leave
push
mov
push
mov
loope
sub
jecxz
mov
sub
sti
adc
mov
mov
inc
add
mov
test
push
(bad)
ja
imul
sahf
cmp
dec
cwde
dec
mov
imul
jno
(bad)
adc
cs
dec
(bad)
jge
sbb
fidivr
push
xor
imul
inc
aas
dec
test
or
and
cmp
js
and
ins
in
push
push
mov
pop
xor
jmp
jne
mov
fiadd
inc
ins
mov
jno
xchg
rol
xchg
ins
fwait
jns
or
fisttp
leave
int3
(bad)
mov
adc
push
mov
sbb
in
inc
mov
imul
aas
xchg
test
or
cmp
jbe
dec
cmps
loop
in
xchg
mov
dec
(bad)
test
pop
sbb
cmps
into
mov
shl
imul
pop
pop
adc
inc
les
xor
pop
shl
mov
rcl
jmp
inc
jne
mov
imul
hlt
in
or
int
adc
test
icebp
and
mov
dec
aam
fstp
bound
scas
push
(bad)
mov
fdiv
movs
mov
xchg
add
ror
in
push
cdq
sub
retf
das
imul
inc
lahf
add
rcl
aaa
pusha
sti
rcl
lea
lea
hlt
test
add
lods
adc
push
mov
je
fdivr
push
or
sub
clc
fistp
retf
lods
cdq
mov
push
cmc
mov
xchg
pop
mov
hlt
push
or
movs
mov
jle
lods
cmp
xor
cmps
sti
jmp
addr16
push
fimul
push
dec
push
cmps
xchg
stos
fsave
ror
out
push
adc
mov
xor
jmp
sbb
dec
test
cmp
xor
or
xchg
shl
sub
mov
ds
jno
stos
dec
fsub
arpl
stc
mov
or
and
call
cmp
cwde
leave
mov
rol
xchg
jecxz
mov
add
mov
das
into
aaa
push
dec
and
fdivr
jmp
gs
and
mov
inc
mov
jmp
xor
lahf
daa
out
pop
pop
jecxz
data16
mov
sub
xchg
dec
mov
adc
xor
mov
sbb
in
xor
enter
out
sub
xchg
movs
xchg
push
dec
jp
xchg
dec
push
pop
mov
enter
sbb
loope
fwait
push
and
lea
sti
aaa
or
inc
test
stos
out
add
pop
sbb
loop
dec
mov
jp
adc
js
sbb
pop
lds
pop
test
pop
ret
adc
and
outs
xchg
(bad)
mov
ja
stc
sub
cmp
and
in
adc
imul
(bad)
es
jnp
jb
cdq
cmp
push
fxch
(bad)
add
arpl
fimul
inc
pusha
pusha
sti
jmp
sbb
pop
push
scas
in
or
mov
rol
(bad)
cmc
(bad)
mov
out
cmps
shr
leave
pop
fisubr
fs
scas
jp
ins
(bad)
imul
cmc
out
adc
inc
adc
pop
clc
mov
sbb
pop
mov
adc
aas
mov
ins
gs
jno
shl
inc
or
mov
(bad)
(bad)
enter
call
cmp
scas
add
mov
pop
in
cwde
add
movs
stc
cmp
jmp
clc
(bad)
iret
sub
popa
movs
int3
cwde
jnp
xchg
mov
repz
push
dec
les
jno
in
hlt
jbe
fucomp
push
ret
aad
fs
xlat
jecxz
mov
call
push
stc
push
ror
pusha
rcl
mov
fcom
fwait
mov
add
adc
jno
mov
push
jnp
(bad)
and
repnz
mov
mov
jbe
les
shl
mov
fld
jg
cmp
xchg
pop
inc
and
lds
daa
xchg
jg
sti
push
xchg
fisubr
mov
test
(bad)
sub
out
data16
jl
mov
push
mov
fbstp
call
dec
loopne
sbb
pop
jl
mov
test
nop
mov
into
cli
dec
or
mov
xchg
xchg
jle
cdq
push
repz
js
mov
and
mov
xchg
pop
inc
cmps
mov
jae
add
or
enter
sub
ds
fiadd
fwait
mov
retf
lahf
aam
push
pusha
out
jno
dec
jmp
pop
les
fld
ss
mov
cdq
adc
add
inc
xchg
jb
mov
sbb
push
and
cld
in
inc
adc
jl
dec
rcr
cs
fdiv
mov
scas
or
mov
mov
clc
addr16
sbb
rol
sub
xor
out
xor
iret
jl
push
sbb
xchg
in
test
xchg
dec
dec
sbb
bound
or
adc
fldcw
in
cld
aaa
or
mov
mov
stos
iret
(bad)
pop
mov
test
mov
(bad)
cmp
out
dec
jmp
xor
cld
cmc
aam
adc
enter
ss
and
xor
or
xchg
adc
adc
mov
sub
(bad)
pusha
fsubr
jmp
out
imul
or
mov
imul
call
test
aam
add
or
pop
pushf
mov
mov
fcomp
int
in
and
mov
push
test
jg
add
in
test
jno
push
test
popa
push
scas
lahf
in
mov
dec
daa
stos
cmp
inc
xlat
ret
sub
daa
dec
inc
scas
lods
addr16
sbb
retf
adc
sub
pop
sub
pop
out
mov
rcl
or
mov
mov
xchg
push
loopne
sub
ret
mov
hlt
push
adc
aas
inc
xlat
inc
iret
js
cmp
pop
dec
add
inc
inc
imul
aaa
sbb
xlat
add
leave
pop
loopne
xlat
loopne
add
xchg
mov
and
or
jecxz
repnz
mov
jle
imul
shl
outs
or
js
push
add
sbb
sahf
sbb
movs
pushf
mov
in
cmp
iret
cmp
xchg
or
js
xor
shl
xor
push
arpl
push
jmp
add
adc
in
ret
push
xlat
xor
call
jp
xchg
(bad)
inc
lock
adc
add
mov
leave
xor
adc
mov
(bad)
in
bound
mov
sbb
xchg
jne
out
inc
sbb
mov
push
cwde
out
sub
clc
cmp
pop
(bad)
int
push
xor
div
and
outs
mov
ds
mov
push
pushf
fxch
sbb
mov
adc
xchg
fsubr
xor
dec
mov
(bad)
addr16
daa
mov
out
fs
mov
xchg
aam
dec
fisttp
sub
nop
movs
imul
adc
push
push
xor
sbb
xchg
in
lahf
hlt
adc
icebp
loope
pop
cwde
pop
enter
cmps
fdivrp
jg
cld
jp
push
test
push
or
lea
loop
push
push
push
popa
ins
mov
popa
and
popf
xchg
inc
mov
repz
mov
idiv
shl
nop
add
stos
mov
mov
iret
or
xor
dec
and
nop
adc
and
call
imul
mov
ret
rcl
sub
adc
cmp
xlat
jl
pop
js
outs
repz
xchg
and
push
mov
ret
jp
inc
dec
test
retf
mov
cmp
sbb
push
in
popa
data16
mov
into
add
dec
aad
cmp
fldcw
test
and
push
in
sbb
outs
xchg
pushf
stc
pop
push
cdq
adc
and
dec
sub
loop
add
jl
movs
sub
jne
push
push
outs
add
jecxz
push
ss
lds
dec
jle
es
in
(bad)
fmul
or
(bad)
imul
or
je
ret
push
mov
xchg
mov
push
scas
fdivr
cmp
bsr
nop
cmp
mov
stc
xchg
cmc
test
dec
shl
push
repz
test
mov
ret
ins
push
or
sub
pop
call
xchg
sub
mov
mov
mov
inc
imul
push
xlat
pop
inc
cmp
xor
test
aaa
adc
out
cmc
xchg
(bad)
jnp
loopne
mov
add
push
jb
xchg
cs
ret
and
jmp
xor
push
sub
mov
cmp
push
push
lods
mov
shl
test
jl
popa
les
fdiv
pop
xor
mov
fwait
lods
cli
mov
js
stos
xor
loop
je
pop
pop
nop
test
mov
add
lock
clc
in
out
aam
fild
pusha
fstp
cmp
and
push
fimul
test
lea
pop
xor
fnstenv
jne
push
inc
xlat
mov
mov
adc
jb
and
loope
mov
sar
neg
imul
and
and
cli
mov
das
(bad)
into
inc
pop
dec
loopne
in
adc
dec
sbb
leave
leave
test
mov
dec
arpl
push
push
push
fdivr
test
mov
addr16
mov
sub
inc
push
mov
sub
outs
out
sub
cli
mov
bound
or
cmp
xlat
and
(bad)
cmc
mov
push
inc
or
cmp
mov
mov
fwait
xlat
leave
scas
popa
dec
jge
push
jae
adc
jbe
repz
je
sub
push
sbb
dec
fwait
add
inc
adc
pop
add
cwde
push
inc
xlat
sbb
popa
dec
jmpw
cdq
jp
hlt
shr
repz
dec
push
repnz
int3
int
ret
sar
inc
add
dec
sbb
(bad)
adc
sbb
in
outs
sub
idiv
xchg
or
loop
adc
jge
cmps
inc
les
aas
dec
emms
and
mov
daa
xlat
(bad)
(bad)
out
push
cmp
leave
inc
hlt
cs
lock
idiv
test
jae
imul
rcl
loop
adc
xchg
xchg
call
test
adc
pop
sbb
outs
jo
push
lock
cmp
dec
ins
dec
or
add
xchg
fisubr
fcom
sbb
jl
addr16
mul
(bad)
push
jle
fwait
jno
data16
sahf
xor
or
sbb
imul
into
jno
push
sbb
not
call
repnz
mov
xor
cmps
hlt
sbb
clc
push
xor
xchg
jnp
fnsave
mov
mov
mov
mov
ret
xchg
push
and
pop
pushf
inc
aaa
ja
inc
pop
inc
push
pop
xor
or
adc
pop
retf
std
in
fcomi
xor
mov
or
jg
jle
(bad)
je
inc
in
cwde
add
or
(bad)
rcl
mov
jmp
imul
and
out
(bad)
lds
cmps
sbb
fild
les
or
xchg
fcmovne
sbb
cmp
jmp
rcl
xchg
imul
push
out
cdq
xchg
xor
inc
dec
xchg
mov
jbe
retf
or
or
or
jge
and
mov
jle
lods
jle
add
aaa
loope
inc
loop
xor
or
and
mov
cli
fbld
mov
popf
inc
sub
cmps
aam
clc
loop
pushf
push
push
cmps
(bad)
jmp
push
into
adc
sub
inc
ficomp
jae
retf
nop
and
not
test
push
mov
dec
arpl
mov
ret
sbb
push
pop
mov
jg
fisubr
xor
lods
inc
xchg
(bad)
push
and
fbstp
retf
(bad)
enter
in
dec
or
stc
in
pushf
daa
or
mov
xchg
cmp
ins
jle
xor
mov
and
jecxz
cmps
jmp
cmp
aam
xchg
xor
mov
aas
imul
std
jmp
cmps
rcr
aad
sub
xor
sub
popf
adc
es
xchg
lods
les
xor
mov
loop
sbb
sub
jo
dec
or
mov
inc
imul
jno
stc
nop
push
jns
and
aam
das
(bad)
dec
mov
inc
push
cli
cmp
div
div
bnd
sahf
pop
cli
or
xor
or
jae
out
xchg
imul
aaa
arpl
pop
lds
outs
mov
mov
outs
add
dec
mov
push
test
pop
xchg
adc
int3
pop
test
ds
xor
sbb
sub
dec
(bad)
outs
js
mov
mov
cmp
push
ss
clc
mov
loop
or
ja
jmp
mov
mov
and
push
or
out
and
dec
fmul
dec
pop
pusha
sbb
xchg
les
sti
sub
mov
sub
inc
adc
es
cli
mov
dec
inc
out
loope
out
les
cmp
push
sub
push
popa
fstp
xchg
mov
mov
mov
adc
xchg
(bad)
div
xchg
xor
xor
xor
(bad)
cli
movs
jp
or
icebp
jnp
inc
lock
xor
out
stos
pop
cmp
repnz
ja
sub
retf
adc
add
daa
push
lahf
xchg
add
call
xchg
and
cdq
dec
(bad)
aad
dec
inc
mov
imul
loope
pop
stos
data16
mov
fisttp
dec
shr
fwait
call
and
cmp
dec
mov
jb
enter
fcomp
adc
xlat
xchg
pop
and
jno
xchg
push
aas
fistp
push
iret
jne
dec
sub
in
or
push
xchg
or
mov
shl
popf
sub
aas
fsubr
int
(bad)
sahf
out
add
dec
pop
cmc
mov
dec
push
int
mov
(bad)
retf
sbb
cmp
test
popa
cmp
add
xor
fwait
lahf
imul
test
sub
xor
cmp
sbb
iret
jl
or
adc
lds
cmp
push
(bad)
int
fwait
sbb
dec
pop
sbb
jo
mov
or
fwait
sbb
cmp
test
mov
sub
lock
mov
shl
cld
aam
add
clc
cmp
ret
in
or
ret
xchg
cmp
pop
xchg
xchg
pop
out
adc
idiv
mul
lahf
fimul
out
cdq
in
repz
in
pusha
pop
push
mov
mov
ror
push
repnz
jecxz
inc
mov
repnz
or
sub
sbb
xchg
scas
mov
ficom
(bad)
shr
(bad)
pop
add
push
inc
dec
push
adc
mov
cli
pop
cmp
not
aam
fisubr
or
sahf
das
sub
sbb
pop
cwde
daa
xchg
inc
out
bound
xchg
in
leave
mov
sbb
retf
xlat
pop
neg
pop
xchg
inc
imul
das
ds
mov
mov
leave
cmps
mov
jmp
or
cmc
daa
cmp
pop
daa
fs
call
popa
cdq
(bad)
mov
jecxz
jo
push
loope
mov
and
and
outs
or
jnp
in
shufps
fimul
adc
lods
scas
ins
je
int3
inc
cmp
sbb
fild
lds
int3
xor
dec
(bad)
push
sbb
mov
cmc
mov
inc
pop
(bad)
out
jg
mov
call
adc
pushf
scas
es
or
jae
push
mov
xor
or
sbb
sub
iret
pop
sti
mov
jbe
sbb
mov
aam
mov
sbb
retf
jnp
mov
jbe
xor
jo
pop
mov
call
pop
out
mov
pop
(bad)
inc
sahf
ins
popa
test
jmp
mov
xchg
call
movs
mov
stos
sbb
adc
xor
push
in
cmp
jb
loopne
inc
in
push
push
in
mov
js
adc
jae
hlt
pop
retf
push
and
stc
in
aaa
sbb
lock
and
movs
cmp
or
sub
lock
stos
fbld
loope
fisubr
jmp
shl
test
jl
sbb
xor
sub
jg
sbb
scas
repnz
push
sbb
cdq
xlat
adc
pop
inc
rcl
inc
and
daa
not
dec
call
sbb
call
cmc
sahf
and
mov
and
pcmpgtd
and
pop
test
xor
adc
icebp
add
jae
ret
ret
sbb
das
leave
xchg
int3
out
adc
mov
out
popa
rcr
push
mov
jne
loop
jecxz
rol
mov
cmps
push
mov
inc
jmp
push
cdq
sbb
fwait
ret
ror
add
cli
sub
(bad)
call
fsubr
scas
xchg
pop
mov
sbb
lock
cmp
sbb
repnz
(bad)
sbb
enter
push
add
repz
les
jle
sub
jns
mov
scas
cmp
xlat
setbe
arpl
sahf
js
retf
jg
ret
pop
outs
rol
adc
adc
not
std
or
inc
cmp
inc
jae
stos
repnz
out
lahf
xchg
test
xor
cli
repz
ds
test
stos
gs
ja
into
xor
adc
ss
mov
push
ret
mov
push
aam
jns
dec
mov
adc
data16
fsubr
jmp
add
mov
xor
outs
lods
and
inc
outs
inc
cmp
dec
jae
jl
mov
dec
retf
and
sahf
dec
cmps
add
movs
int3
fsubr
push
cld
fimul
fwait
test
das
shl
lods
add
out
pop
popa
loope
call
mov
jecxz
shl
dec
push
push
js
addr16
sub
gs
popf
jmp
jbe
mov
cld
ds
cmp
pusha
pop
add
(bad)
es
les
out
adc
adc
mov
and
ret
jecxz
mov
aad
ds
cmp
cmp
cli
scas
(bad)
aam
stos
adc
arpl
mov
mov
mov
xchg
mov
and
push
mov
inc
add
shl
clc
add
and
inc
jnp
inc
hlt
jns
out
test
pop
sub
jns
adc
adc
sbb
pop
and
jnp
ss
and
cmp
pop
mov
pop
ds
dec
ret
iret
in
pop
mov
sbb
leave
push
rcl
arpl
inc
xchg
add
hlt
inc
push
add
sbb
jae
mov
shl
sbb
sbb
inc
test
mov
lock
popf
scas
inc
in
push
lock
std
les
adc
ret
xor
add
cs
sub
mov
inc
push
pusha
cmp
call
push
push
adc
mov
test
cld
xchg
and
in
lahf
inc
cmp
adc
icebp
cdq
sub
or
pop
sbb
cmp
sti
scas
push
ins
push
mov
div
test
ret
xor
(bad)
xlat
adc
jne
push
xor
jp
fld
cmp
push
xor
mov
xchg
jne
cld
mov
sub
add
data16
adc
out
aas
mov
fidiv
jg
sar
sahf
jge
cdq
jne
adc
imul
jae
jmp
xor
aad
sub
or
mov
ret
fcmovu
es
jmp
adc
adc
xor
rcr
out
ret
dec
mov
xor
outs
int
push
mov
popa
add
retf
or
jns
mov
dec
sbb
mov
mov
repz
jg
fs
mov
sub
push
(bad)
fld
jmp
dec
mov
adc
mov
mov
(bad)
jbe
sub
fld
movs
movs
add
pop
xor
jb
jnp
fldenv
cli
jl
mov
mov
iret
sub
adc
and
outs
mov
retf
ret
push
clc
mov
push
pop
(bad)
sub
inc
imul
and
hlt
cmp
adc
push
or
mov
loop
das
sub
pop
shl
mov
loopne
leave
add
lahf
fnstcw
inc
pop
(bad)
addr16
popa
mov
mov
andps
xor
mov
out
mov
jnp
aas
(bad)
out
rcl
or
fidivr
aad
mov
inc
fisubr
out
call
dec
pop
jo
xor
sahf
jb
aaa
(bad)
mov
pop
adc
ins
out
hlt
rol
ret
and
sub
cmp
xor
fisub
mov
and
adc
add
mov
fstp
mov
rol
js
fisubr
or
(bad)
jo
pop
mov
xchg
cmps
or
dec
in
jle
(bad)
or
hlt
test
in
iret
push
cmp
lods
push
leave
sahf
sbb
ins
cdq
fadd
mov
dec
cmp
jmp
cmp
lea
repz
fdivr
jmp
xchg
mov
iret
sbb
repz
cmps
aad
pushf
push
inc
inc
pop
or
push
dec
outs
cwde
lods
fld
rol
lds
test
popf
fsub
lahf
cwde
push
lds
sbb
fisubr
mov
pop
inc
mov
pop
jo
out
adc
inc
jecxz
cs
and
add
shr
rcr
xchg
test
lods
mov
loopne
inc
adc
shl
out
adc
pop
inc
sti
mov
and
mov
les
in
jb
add
addr16
cmp
xchg
sti
sbb
lahf
fwait
push
pop
pop
add
jmp
sar
cmp
mov
mov
loop
add
push
push
rcl
shl
(bad)
mov
add
shl
pop
repnz
mov
add
outs
test
xor
cld
cmps
jbe
jmp
mov
xchg
rcr
cmps
dec
xchg
mov
aad
in
les
shr
lods
ja
sub
push
jg
jno
std
cmp
adc
dec
mov
int
icebp
dec
push
adc
pop
mov
cmp
cmp
mov
sub
jmp
push
mov
arpl
je
push
dec
lods
mov
pusha
test
jge
mov
test
cs
fcmovu
cld
enter
push
xor
int3
dec
sbb
mov
aas
pop
xchg
push
sub
imul
mov
cmc
pusha
mov
call
sub
outs
pop
lods
fst
dec
mov
mov
cmp
outs
mov
aaa
mov
or
sbb
xchg
mov
cmp
in
xor
mov
inc
mov
mov
dec
fmul
sub
les
in
pushf
call
pop
clc
jno
push
mov
repnz
push
dec
leave
mov
or
jle
adc
scas
inc
sar
ss
cmp
mov
jmp
and
xchg
sbb
loope
pop
cmp
outs
push
mov
sbb
push
nop
xor
ins
sub
add
sbb
loope
and
lods
test
mov
dec
in
xor
jmp
jo
fdivr
loop
dec
sub
cmp
push
inc
pop
cmp
repnz
addr16
cmp
mov
nop
retf
add
jmp
call
repz
pop
pushf
mov
fisub
add
ret
(bad)
rcr
loop
jmp
and
push
jbe
std
sbb
mov
inc
inc
xchg
addr16
retf
sbb
sub
push
xchg
out
lock
or
xchg
mov
bnd
cmc
fistp
and
push
push
mov
dec
aaa
aaa
cwde
js
loope
push
sub
sub
jmp
push
xchg
sbb
push
push
inc
sti
ja
mov
out
push
jb
and
aas
data16
int3
or
in
add
es
cmc
shl
jo
push
shl
into
dec
jnp
in
into
arpl
imul
sbb
cmp
and
stos
fisub
cmp
inc
iret
mov
inc
inc
mov
cmp
jmp
repnz
xor
sbb
xor
sub
in
inc
fsubr
mov
xchg
jg
dec
dec
dec
loop
outs
adc
and
jmp
mov
and
int3
fs
xlat
outs
int3
or
push
adc
sar
ret
adc
xor
mov
mov
and
mov
lock
add
ins
and
push
clc
sbb
dec
scas
mov
stos
addr16
or
scas
(bad)
dec
inc
leave
pop
mov
push
cwde
sub
jns
mov
cmps
xor
push
aas
gs
(bad)
es
movs
cmp
arpl
(bad)
std
jae
dec
cmp
enter
sbb
sysenter
cmp
fsubr
mov
add
sub
test
cmp
in
xor
outs
sbb
leave
pop
out
add
jmp
xchg
jg
push
test
fistp
inc
mov
add
ja
push
add
std
ja
mov
enter
xor
mov
sbb
jns
mov
mov
nop
xchg
add
mov
stos
mov
dec
lods
pop
xlat
or
mov
cmp
in
(bad)
push
mov
xor
stos
dec
fwait
movs
repz
sub
cs
or
mov
adc
xchg
cmp
fwait
xchg
push
addr16
enter
inc
dec
mov
dec
push
inc
jmp
add
mov
outs
push
xchg
adc
mov
pop
gs
dec
rcl
push
fiadd
and
mov
data16
xor
icebp
sbb
and
rol
es
cmp
into
and
hlt
loop
mul
xor
dec
repnz
pop
add
sbb
and
jp
or
outs
cwde
(bad)
dec
pop
inc
inc
bound
sbb
add
jae
or
xchg
ja
dec
imul
push
fstp
sub
cld
in
adc
mov
hlt
out
pop
jle
ins
adc
rcr
cmps
mov
mov
fwait
mov
jmp
push
cdq
and
iret
mov
xchg
les
loop
retf
add
cmp
mov
and
lock
xchg
push
add
data16
add
aad
cld
movs
mov
mov
xor
sub
paddsb
jp
ficom
add
jge
(bad)
jmp
dec
test
cld
outs
inc
or
sbb
dec
ins
jb
jo
sbb
lea
jnp
daa
dec
xor
and
inc
test
mov
push
mov
pop
sub
adc
jmp
jmp
cmp
sahf
sbb
(bad)
pop
mov
cmp
dec
inc
ds
leave
daa
idiv
or
je
call
adc
js
pop
je
push
retf
rcr
sbb
inc
call
xchg
lea
or
pop
adc
dec
dec
jp
les
outs
mov
ds
pop
(bad)
(bad)
js
add
hlt
mov
pop
push
ins
call
xor
mov
lea
and
and
jns
pushf
js
sub
pop
call
int3
jecxz
inc
dec
inc
pop
inc
addr16
shl
mov
ret
test
popa
mov
push
xor
sub
or
cld
outs
stos
inc
push
inc
je
retf
sbb
out
cdq
mov
dec
ret
mov
ror
adc
mov
mov
lds
xchg
xchg
lahf
mov
iret
sbb
arpl
mov
mov
and
push
pop
int3
stos
push
scas
je
push
jg
mov
in
adc
sbb
or
cld
xor
sbb
sbb
and
push
cmps
dec
inc
in
jae
mov
lods
cmc
xlat
lods
iret
dec
xchg
sub
pop
rol
stos
and
pop
loop
ins
cmc
push
cmp
stc
ins
and
test
jle
jle
pushf
lock
arpl
or
xchg
xor
stos
adc
add
add
dec
xlat
push
in
xchg
push
mov
pop
jnp
lods
movs
clc
dec
jb
dec
bound
push
mov
sub
jbe
std
or
mov
cmc
jns
pop
or
adc
(bad)
mov
mov
imul
mov
out
xchg
ja
jp
cld
loopne
pop
call
pop
cdq
leave
inc
mov
xchg
imul
sbb
es
shl
outs
shl
pusha
mov
cmp
mov
add
les
inc
cmps
jbe
outs
clts
sub
adc
in
mov
cld
jl
lods
push
int3
lds
or
add
loop
std
das
in
stos
adc
mov
aaa
(bad)
xor
pop
dec
out
mov
punpckhbw
loope
popf
fs
mov
dec
sub
xor
sub
mov
mov
add
imul
push
retf
pop
je
shl
call
das
daa
es
icebp
les
inc
push
mov
inc
dec
lods
cmc
jnp
cmp
retf
cmp
fwait
in
and
xchg
cmps
jle
jp
sbb
mov
shufps
xchg
icebp
icebp
mov
sub
push
je
(bad)
in
fwait
out
jae
pop
inc
jmp
sti
in
sub
pop
sbb
cli
mov
xor
mov
push
fadd
mov
sbb
push
xchg
data16
cmp
hlt
pop
aaa
pop
in
imul
cmc
mov
add
cmps
stos
std
pop
lock
in
pop
xchg
push
pmuludq
and
sbb
mov
inc
shl
ins
xchg
inc
dec
jae
xchg
fs
mov
pop
xor
outs
mov
lods
mov
dec
pop
push
jne
stc
dec
xchg
mov
sahf
pop
pop
cld
movs
sbb
cdq
aad
popf
sbb
cmps
out
jns
ror
pusha
inc
xchg
xor
mov
pop
mov
pop
mov
inc
je
icebp
add
xchg
jmp
loop
push
jle
popf
push
xchg
sbb
mov
adc
lods
iret
pushf
arpl
xchg
aam
clc
enter
xor
ficom
mov
jns
adc
stos
dec
mov
iret
dec
scas
xor
out
pop
ror
add
mov
pop
adc
lea
pushf
mov
sbb
cmc
cwde
shr
sub
pop
dec
mov
fistp
pop
cmp
cmp
mov
cli
jno
xlat
or
cdq
push
dec
adc
pmullw
or
mov
xchg
and
dec
mov
pusha
fnstcw
pusha
(bad)
push
add
movs
je
xchg
repnz
iret
or
dec
jmp
(bad)
and
sbb
adc
lock
xchg
out
dec
xor
out
mov
push
rsqrtps
and
mov
popf
jle
or
mov
push
mov
inc
daa
fwait
ret
in
push
mov
movs
packsswb
test
aam
and
cld
sub
mov
push
test
(bad)
repz
gs
pop
neg
mov
and
shr
sbb
ss
int
arpl
add
mov
adc
fmul
sub
repnz
in
dec
cwde
dec
fs
repz
clc
(bad)
loopne
aas
jmp
adc
popf
cmp
sti
push
xor
jb
sub
mov
push
mov
nop
push
pop
mov
lock
or
mov
dec
sahf
hlt
repz
or
xor
outs
cld
and
sar
sub
push
ficom
xchg
push
dec
jp
leave
cs
fcmove
clc
out
mov
movs
enter
shld
sub
mov
or
outs
or
test
dec
push
push
pushf
mov
nop
aas
xchg
fiadd
and
into
faddp
or
xchg
add
and
mov
repnz
ficom
addr16
test
(bad)
push
(bad)
aam
pop
ror
(bad)
push
repz
cmps
std
inc
mov
fild
push
lahf
pop
inc
add
mov
stos
lahf
cld
sub
xchg
cmps
sbb
fwait
jmp
ret
sub
aad
or
mov
jne
ja
jb
jns
outs
pusha
pop
dec
inc
push
rol
inc
mov
xor
dec
mov
arpl
inc
imul
jg
push
mov
pusha
mov
cmp
inc
cld
cmp
mov
push
sub
xchg
repnz
fstp
mov
iret
push
xor
mov
es
fisubr
repz
sub
push
aam
scas
lea
sbb
adc
add
in
ret
or
sbb
popa
loope
test
mov
mov
or
test
xchg
jg
ret
sbb
movs
imul
and
fsubp
dec
cmps
in
dec
cmp
lds
mov
pop
inc
jae
xchg
(bad)
cdq
fcomp
push
mov
outs
sub
push
imul
movs
xchg
inc
xor
iret
xor
jl
pusha
in
fistp
fbstp
in
push
mov
pop
ret
inc
jno
sti
popf
fsubr
ret
dec
sbb
clc
popf
aaa
cmps
sbb
dec
pop
pop
mov
mov
or
or
or
test
adc
scas
pop
inc
mov
mov
mov
ret
fnstenv
(bad)
loop
imul
rcr
xchg
movs
sbb
rcr
ins
or
fcom
outs
mov
lock
fucompp
mov
jb
pop
ret
fsub
cld
test
jecxz
rcl
int3
adc
inc
loopne
xor
mov
jmp
(bad)
dec
cli
xor
imul
cmp
mov
and
nop
stos
pushf
jb
sbb
ds
xor
rol
lods
cmc
jne
mov
jmp
movs
add
mul
mov
inc
pop
iret
popa
dec
pop
mov
inc
xchg
jecxz
jg
cmp
xchg
mov
sub
push
cdq
int
jb
cld
mov
in
mov
xchg
enter
mov
push
sub
add
adc
pop
or
mov
imul
sbb
jge
scas
xchg
and
cwde
sbb
fwait
out
xor
ds
clc
jecxz
cmp
inc
mov
pop
adc
mov
mov
fstp
pop
jns
adc
pushf
pop
push
mov
pop
inc
xchg
or
aad
jno
out
in
outs
or
dec
jno
pushf
pop
rol
shr
mov
push
xor
xchg
xchg
cld
and
pop
xor
out
adc
movs
inc
pop
mov
push
call
outs
jbe
jmp
lea
xor
and
xchg
gs
pop
xor
jmp
cli
push
loopne
push
or
adc
out
or
mov
sub
icebp
mul
xchg
loopne
mov
cld
pushf
sti
retf
je
xor
adc
mov
dec
fs
sbb
xor
mov
xchg
data16
jmp
push
and
rol
out
jmp
out
fucomp
(bad)
enter
movs
and
repnz
(bad)
mov
inc
lods
push
mov
fadd
push
loope
add
jnp
xor
pop
je
mov
dec
rol
xchg
sbb
stos
push
adc
nop
jne
movq
or
push
aaa
xor
fnop
les
cdq
add
lds
sbb
fprem
add
fisub
push
sbb
dec
mov
jb
adc
fsub
adc
and
shl
inc
repz
iret
adc
in
cmp
aaa
xchg
cmp
(bad)
mov
ror
jbe
aam
pusha
inc
popa
pop
adc
xchg
call
sahf
shr
cmp
fbstp
fsub
sbb
push
mov
xchg
repnz
cli
test
push
lahf
adc
in
loope
or
rcl
push
movs
add
outs
jmp
lods
pop
sub
xchg
inc
jp
sub
pop
jmp
cld
shl
xchg
mov
adc
jmp
xor
fisubr
inc
popf
retf
loop
jecxz
stos
call
jmp
cmp
loop
sbb
xchg
clc
aas
ins
jle
(bad)
repnz
ret
sbb
cmp
pusha
jb
push
sar
dec
imul
arpl
fadd
pusha
sub
add
movs
sbb
outs
ins
pop
das
shr
adc
(bad)
pop
nop
popf
call
loopne
dec
test
add
lock
jae
call
and
cmp
lock
(bad)
into
mov
jmp
lock
ret
xor
loope
mov
mov
neg
enter
mov
ins
jmp
gs
stos
cmps
out
mov
fwait
mov
inc
in
call
mov
or
and
test
dec
stos
xchg
(bad)
test
lock
jge
pop
sahf
push
and
sbb
shr
adc
jnp
xor
jmp
lock
push
loop
jp
xchg
cmp
xchg
icebp
outs
xchg
or
and
mov
rcr
call
js
sub
pop
and
repz
cwde
xlat
cmps
or
ins
mov
cmc
add
push
sbb
fisubr
ja
retf
loopne
bound
push
xchg
adc
mov
cmps
das
lahf
add
pop
jne
jne
daa
dec
jmp
movs
push
pop
stos
hlt
cwde
inc
xchg
fldenv
repz
lock
ret
icebp
inc
add
clc
popa
popf
dec
pusha
cmp
jnp
pop
ds
push
xchg
int
mov
pop
imul
and
das
push
sti
mov
leave
adc
loopne
rcl
sbb
sbb
arpl
sub
push
in
pop
or
loopne
cmp
icebp
fbstp
bound
nop
jae
and
sub
lods
xchg
adc
mov
jo
xchg
stos
aad
test
out
arpl
push
sahf
add
punpcklbw
xchg
jl
sbb
pop
rcl
and
inc
xor
inc
ja
inc
xchg
scas
cmps
in
mov
hlt
(bad)
hlt
sbb
sub
cmps
mov
js
mov
mov
mov
scas
test
mov
in
ret
push
dec
stc
xchg
cmp
push
dec
mov
push
sbb
and
(bad)
popf
xor
out
ror
lahf
out
and
jns
pop
xchg
(bad)
sti
jns
div
push
dec
pop
loope
cld
xchg
or
xchg
cmp
push
das
les
cmc
(bad)
sti
movs
or
xor
push
push
adc
in
adc
jl
mov
ret
cmc
ror
jo
cmp
cmps
or
shl
xor
adc
retf
mov
push
mov
xchg
push
(bad)
inc
push
push
mov
ffree
(bad)
movs
jle
inc
mov
pop
adc
jbe
mov
into
test
or
jb
jnp
test
cmc
and
sub
jle
pushf
inc
sahf
leave
pop
sub
popa
jne
jmp
adc
pop
mov
loope
jae
and
add
fdivr
cli
inc
xchg
pop
jo
add
and
add
out
xor
inc
stc
ret
xor
add
mov
pop
loop
sub
cli
std
popf
xor
pop
cli
pop
jl
lea
cmp
addr16
fneni(8087
xor
push
pop
push
js
xor
mov
and
fnstcw
xor
dec
movs
adc
stc
mov
mov
or
mov
sub
int3
mov
sbb
cmps
arpl
movs
push
sub
mov
fwait
and
cmp
ins
and
sbb
sub
movs
add
stos
push
pusha
popf
repnz
xchg
ds
and
jo
mov
je
ins
inc
pop
mov
sti
or
add
lock
gs
mov
cdq
inc
out
xchg
or
xchg
xchg
xchg
mov
xchg
lock
jp
loopne
outs
push
adc
jnp
adc
test
push
les
xchg
les
imul
test
dec
jo
frstor
jge
sbb
leave
inc
ficom
pop
xchg
xchg
xor
pop
in
fs
cli
xchg
xor
mov
xchg
inc
int
push
push
aas
dec
push
out
cmp
jg
iret
pop
add
sbb
or
and
sbb
popf
daa
adc
dec
ret
jne
gs
ds
enter
bound
scas
push
xchg
outs
or
int
(bad)
and
xor
xchg
and
xchg
rcr
mov
and
lods
mov
add
ret
and
jmp
or
sub
dec
push
or
outs
xchg
inc
fs
(bad)
or
sti
mov
dec
xchg
lahf
sub
pop
xor
jecxz
jns
or
dec
mov
stc
xchg
mov
push
pushf
movs
mov
push
or
mov
mov
pop
cmp
push
fcom
dec
(bad)
sahf
(bad)
jp
adc
enter
push
jmp
ins
add
aam
mov
push
dec
gs
out
xchg
out
(bad)
cli
int3
jne
out
cmp
sti
data16
rcl
mul
sub
dec
xor
aad
push
(bad)
mov
mov
arpl
in
adc
ss
adc
sbb
mov
jae
jne
pusha
in
das
in
mov
xchg
int3
(bad)
retf
into
inc
pop
cmp
xchg
test
mov
(bad)
push
ins
scas
and
sbb
js
in
pop
xchg
popf
cmp
and
add
(bad)
mov
push
aam
jmp
xchg
ins
daa
adc
push
(bad)
xchg
lahf
jno
sub
fst
cli
scas
aaa
imul
push
ins
retf
icebp
jle
or
pushf
cmp
pop
pop
push
add
lock
mov
into
addr16
sti
lahf
clc
arpl
jo
adc
in
aas
(bad)
and
sbb
jge
pop
fsub
shl
mov
xchg
das
pop
dec
push
xlat
(bad)
and
mov
sbb
and
adc
adc
sub
jg
push
sbb
cld
pusha
cmp
mov
jmp
movups
cwde
cs
or
add
push
cwde
ret
and
outs
cmp
mov
or
xchg
push
test
dec
aam
inc
cmc
mov
cld
push
jno
out
in
xor
int3
imul
inc
pop
ret
pusha
dec
aas
mov
stos
(bad)
mov
mov
push
data16
out
imul
aaa
mov
in
aaa
mov
lods
xor
xchg
in
lock
in
out
das
cli
imul
sbb
push
sub
sbb
repnz
push
cs
fwait
loop
idiv
icebp
push
cmp
movs
pop
test
je
xor
js
fist
sbb
out
mov
push
jb
xor
xor
cmc
mul
xchg
test
(bad)
imul
scas
daa
xor
fiadd
dec
or
dec
cmp
xchg
das
aas
add
and
ret
mov
pop
cmp
fcomp
xchg
mov
ror
movs
test
arpl
adc
or
ins
test
inc
jmp
pop
icebp
jne
stos
add
mov
inc
rol
dec
in
imul
cmp
out
shl
inc
jle
enter
sub
retf
cmp
pushf
ja
inc
nop
sub
idiv
fnsave
lock
or
inc
dec
push
repz
loopne
xor
mov
add
pop
mov
inc
fs
mov
enter
stos
popf
xchg
inc
inc
bound
inc
mov
or
mov
jmp
icebp
fdivr
ja
scas
jb
xchg
xchg
stos
mov
rcr
push
test
sbb
pushf
mov
push
pop
mov
fs
add
adc
aaa
or
retf
cmp
add
out
outs
icebp
mov
push
lods
xchg
mov
or
jg
push
mov
(bad)
(bad)
hlt
push
(bad)
cmps
or
imul
sub
data16
gs
mov
loope
dec
repz
push
pushf
shr
dec
dec
ins
call
int
inc
mov
xchg
dec
pop
fisub
adc
cmp
retf
cwde
mov
xchg
out
and
and
xchg
mov
and
lods
leave
sbb
jmp
and
cmps
cli
sub
cdq
aam
or
mov
mov
ja
pushf
out
(bad)
cmp
sbb
std
cmp
pop
xlat
add
ja
sahf
int
cmp
inc
enter
mov
(bad)
sub
retf
sub
push
gs
je
xchg
cdq
jns
jle
xchg
imul
adc
inc
es
lahf
hlt
es
ror
xchg
push
bound
mov
loopne
call
sbb
adc
mov
enter
adc
int3
xor
mov
push
pop
in
popa
mov
(bad)
adc
pop
or
cli
fst
dec
bound
pop
dec
pusha
ins
push
leave
loopne
mov
sbb
pop
mov
(bad)
fsub
cli
sbb
mov
sbb
push
xor
mov
shl
leave
add
fst
jmp
jle
sbb
mov
(bad)
and
out
in
das
out
jnp
cld
xchg
and
scas
cmp
imul
mov
and
and
loopne
push
ds
mov
adc
test
sahf
lea
add
icebp
rol
rol
gs
es
dec
cmc
add
popf
shl
fidiv
cmp
or
movs
xchg
jbe
arpl
jl
dec
jns
call
(bad)
push
push
sbb
and
xchg
and
iret
jae
or
arpl
xor
push
sbb
dec
ins
movs
mov
lea
adc
jge
ret
mov
sub
fneni(8087
lods
(bad)
sub
fst
(bad)
xor
(bad)
loopne
push
nop
loopne
test
mov
retf
popf
pop
inc
(bad)
lock
popf
(bad)
sub
mov
sub
sahf
bound
mov
inc
inc
inc
push
or
xor
xchg
pop
pusha
loope
in
fcomi
mov
ja
stc
sbb
dec
mov
not
mov
pop
pop
jne
lock
imul
int3
into
enter
out
jp
outs
push
cmp
or
sub
cli
xor
fidivr
lods
mov
data16
cld
push
pop
add
xor
dec
test
push
push
pop
push
mov
je
or
lods
pop
cmp
stos
outs
jae
popa
lods
bound
xchg
mov
out
xlat
shl
push
sar
mov
repnz
mov
push
or
out
gs
mov
fld
sub
imul
retf
add
imul
or
retf
loope
pop
mov
cmp
lds
or
or
xor
xchg
cmps
loope
outs
mov
mov
sub
(bad)
adc
repz
fmul
mov
mov
cmp
rol
pop
in
rol
mov
dec
xchg
sub
int
inc
jg
sbb
stos
popa
lock
adc
xor
push
mov
and
dec
xor
and
enter
xor
mov
mov
mov
xchg
jmp
test
repnz
add
cmp
rol
xchg
inc
in
(bad)
fmul
sbb
push
fcomp
mov
ret
sub
and
or
out
dec
out
mov
fmul
push
and
frstor
adc
push
in
enter
ins
or
cmp
cmp
or
jmp
cmc
push
stc
hlt
repnz
mov
dec
ja
jo
cmp
xor
jg
jae
or
or
push
cwde
adc
out
adc
xor
aam
mov
js
mov
inc
mov
xlat
and
mov
sbb
pop
cdq
xor
jae
es
lods
mov
inc
in
pop
and
scas
add
les
inc
add
ret
cmp
jnp
pop
stos
adc
pusha
addr16
mov
inc
cmp
ja
mov
push
inc
in
dec
dec
fmul
mov
inc
pop
movs
pop
dec
div
dec
push
add
push
add
mov
fiadd
dec
xchg
or
fmul
dec
cmp
cmp
or
fnstcw
ins
fxch
xor
pushf
out
xchg
sbb
fmulp
mov
into
test
adc
jg
(bad)
cmp
shr
rol
in
retf
test
aaa
mov
adc
cmp
in
loop
out
or
adc
pop
xor
rcr
ficomp
jmp
js
clc
pop
inc
push
loop
or
dec
test
sub
inc
dec
inc
jmp
arpl
lods
mov
enter
jle
enter
loope
mov
jno
mov
cmps
xor
and
call
add
add
imul
shl
retf
pop
inc
cmp
lds
arpl
in
jecxz
push
scas
and
jg
mov
cmp
add
or
data16
jb
arpl
movs
js
nop
xlat
retf
lods
icebp
xor
fst
or
xchg
xchg
aas
aad
cdq
(bad)
es
cwde
sub
pop
cs
fdivr
(bad)
stos
and
sbb
jle
cmp
cmc
or
and
iret
mov
mov
push
dec
pushf
loope
shr
test
pop
pop
loope
cmp
add
ins
pop
add
ds
jb
cmp
or
mov
ret
inc
cmp
inc
js
dec
cmp
inc
mov
cli
sub
push
xchg
outs
jecxz
imul
xchg
mov
inc
mov
rcr
stc
popf
ds
stos
in
loop
in
or
xor
out
outs
add
cmc
pop
xchg
xor
dec
lahf
mov
jae
adc
pop
sbb
lock
push
shr
cs
je
iret
mov
xchg
cs
shl
push
push
das
xchg
mov
fbstp
jbe
mov
popa
rcr
pop
aam
int3
movs
in
xor
add
mov
outs
dec
mov
mov
clc
cdq
int3
dec
mov
mov
push
mov
mov
mov
push
popf
fcom
xor
mov
mov
jp
mov
or
cmps
inc
shr
iret
retf
jle
or
loope
adc
add
imul
inc
test
lods
out
push
and
xor
sahf
jae
call
pop
pusha
add
xchg
repz
xchg
sbb
mov
inc
pusha
or
dec
cld
jmp
xchg
mov
cmp
shl
push
sbb
cmp
nop
add
xchg
nop
push
stc
and
pop
adc
mov
inc
pop
bound
retf
mov
cli
idiv
mov
pop
jae
xchg
mov
movs
inc
xchg
xor
inc
xlat
(bad)
cs
sbb
mov
shl
jno
inc
xor
and
xchg
or
inc
in
jge
or
sbb
mov
add
sbb
pop
or
jg
add
sbb
inc
mov
mov
fwait
cs
add
dec
cdq
add
cs
enter
adc
enter
mov
shl
jbe
test
ins
sbb
(bad)
lahf
outs
mov
aas
push
push
jb
push
mov
mov
or
add
inc
(bad)
fld
or
pusha
ret
add
retf
rcl
stos
xor
mov
cmp
in
rol
fwait
loopne
fs
nop
(bad)
jb
sbb
(bad)
(bad)
sub
rol
add
std
in
pop
add
mov
adc
push
add
xchg
es
cmps
push
sub
adc
jnp
cmps
cmp
dec
mov
call
outs
retf
cmps
cld
mov
xchg
pusha
lods
stos
sahf
add
pushf
cmc
ins
outs
bound
mov
mov
or
js
aas
shl
mov
inc
mov
nop
xchg
and
push
xchg
movs
xchg
outs
(bad)
jno
push
cmps
lock
xchg
pop
mov
test
jnp
call
inc
mov
outs
pop
xchg
fdiv
xchg
push
pop
mov
xor
bound
dec
test
mov
pushf
mov
or
sar
fisubr
xor
sbb
sub
inc
and
cmp
mov
stos
cld
or
lds
or
push
out
sbb
aam
int
(bad)
sar
mov
ret
mov
fs
sti
sar
je
in
aad
jne
movs
enter
mov
dec
clc
adc
cmp
mov
dec
imul
sub
mov
enter
jne
xor
(bad)
pop
inc
jg
imul
jae
ins
inc
mov
mov
xchg
in
out
cwde
icebp
jg
fucomp
xchg
pop
dec
imul
jge
mov
outs
shl
jae
xchg
jmp
leave
cmp
das
cmp
pop
adc
mov
dec
push
imul
ins
push
inc
std
popf
mov
jbe
mov
mov
jo
jl
add
push
jnp
add
ds
out
mov
pop
sub
push
pop
cdq
stos
rcr
outs
sub
pop
retf
add
xor
in
repnz
push
mov
outs
cmp
into
sub
outs
in
bound
ds
mov
out
out
cmp
xchg
test
inc
mov
jmp
ret
sbb
jae
sar
or
push
and
jle
cwde
jmp
dec
add
mov
xchg
sbb
les
enter
xchg
je
(bad)
sub
out
pop
dec
sti
imul
and
mov
repnz
push
inc
sbb
cmps
mov
test
adc
jg
test
or
loopne
push
das
inc
popf
mov
xchg
or
test
mov
(bad)
jp
sbb
inc
hlt
aad
mov
dec
mov
add
fmulp
bound
add
into
mov
shl
push
dec
lea
shl
(bad)
pop
jecxz
cli
loope
aam
sub
gs
pusha
mov
and
push
mov
pop
leave
mov
stos
ds
aas
push
and
pop
push
jmp
pop
lods
cmp
and
fadd
mov
lods
and
fist
mov
(bad)
ds
cmp
leave
hlt
jb
test
xlat
mov
loop
adc
mov
xchg
scas
adc
fwait
stos
loopne
pushf
addr16
push
xor
(bad)
bound
hlt
adc
movs
cld
cmp
inc
int
in
xchg
pop
bound
leave
inc
xor
ds
sbb
mov
push
inc
jg
stos
xchg
cmp
mov
xchg
mov
loope
mov
mul
mov
aam
mov
dec
icebp
pusha
cmp
and
cmp
ror
xchg
and
sub
pop
mov
ds
inc
fs
xor
lds
lods
mul
push
sub
call
rol
dec
pop
(bad)
xchg
or
ret
int3
push
lock
jecxz
aas
mov
sbb
dec
xchg
js
and
inc
bound
outs
xchg
rcl
pop
imul
addr16
dec
repz
inc
ja
arpl
inc
(bad)
fidivr
iret
xchg
adc
xchg
neg
dec
xor
je
xchg
jo
out
push
add
dec
mov
scas
adc
sub
loop
fs
lods
repnz
xchg
out
mov
stc
cdq
aad
add
enter
cmps
jb
cmp
mov
jno
pop
or
mov
or
jbe
fidiv
int3
outs
and
addr16
(bad)
jmp
and
cmp
sbb
leave
jno
pop
pop
mov
das
shr
enter
sbb
fsub
cmp
loopne
push
in
ror
cdq
jecxz
jle
daa
mov
sbb
and
cli
das
and
mov
ret
push
xchg
out
bnd
nop
popa
inc
cdq
fwait
scas
mov
addr16
loopne
sub
jp
nop
mul
and
pop
mov
test
jg
fs
cmp
inc
xor
fmul
adc
jmp
rcr
xchg
or
push
es
mov
pop
xchg
pop
inc
add
js
std
mov
dec
adc
xor
test
sahf
ror
scas
or
xlat
sbb
addr16
aas
or
jl
ficom
ret
movs
je
aas
scas
xor
jl
fldcw
and
jl
int
jg
or
add
lea
call
sbb
jmp
les
lods
jle
xchg
repz
pop
adc
int3
fwait
cmp
jmp
mov
test
mov
(bad)
icebp
or
mov
lods
(bad)
jbe
dec
mov
xlat
popa
bound
dec
scas
mov
movs
fist
xchg
cli
jl
jbe
(bad)
push
sub
inc
test
or
inc
sbb
retf
jmp
fld
dec
mov
lahf
cmp
jns
scas
add
sbb
xlat
scas
jecxz
and
cmp
(bad)
adc
sub
retf
xchg
imul
mov
mov
cmps
ror
dec
or
add
ror
ja
jbe
nop
cs
(bad)
test
popf
sar
ss
(bad)
ds
mov
push
(bad)
add
xchg
cmp
mov
mov
sahf
sub
mov
and
mov
push
enter
icebp
inc
(bad)
add
int
lahf
das
sbb
sti
and
cmp
xor
imul
aaa
inc
sub
pop
ficom
iret
outs
push
add
jl
inc
cmp
fst
or
into
pop
retf
call
sti
ffreep
scas
aaa
call
adc
cmc
mov
mov
das
inc
push
add
jno
daa
shr
popa
(bad)
repnz
add
jl
into
imul
ret
add
pop
hlt
jmp
jg
mov
xor
fidiv
(bad)
lock
movs
aas
out
jl
jnp
jmp
dec
and
pop
les
lahf
mov
imul
jae
repnz
je
repz
fisubr
add
inc
push
xor
add
xchg
rcr
push
movs
sub
mov
adc
cdq
jo
pop
and
inc
or
sub
fst
xchg
mov
and
xchg
pop
sahf
dec
pop
into
repnz
fbld
pop
dec
lods
mov
jb
pop
fdiv
scas
dec
call
pop
(bad)
stos
ret
lea
xchg
(bad)
jmp
ds
imul
sbb
loopne
sub
cmps
sbb
or
sub
mov
cwde
and
das
repnz
popf
mov
and
sub
leave
pushf
movs
push
and
fldenv
add
inc
xchg
cwde
and
cmp
lods
retf
xchg
in
and
cmps
sbb
mov
adc
jns
pop
movs
mov
ret
inc
ja
jmp
mov
jmp
adc
movs
aad
bound
aam
sbb
pop
jg
sub
repnz
nop
arpl
test
add
mov
in
ret
xchg
mov
sub
push
jmp
and
cmp
mov
ja
(bad)
sub
push
mov
xchg
jecxz
sbb
(bad)
enter
stos
and
rcl
push
mov
mov
sub
xor
rcl
sbb
or
and
and
mov
sbb
adc
push
out
and
fwait
jae
push
and
xor
adc
or
daa
(bad)
jno
in
mov
clc
mov
mov
sbb
stc
jne
xlat
xor
leave
in
jl
mov
pop
or
inc
out
aas
add
mov
push
cmc
dec
cmp
test
outs
jg
sub
cmp
inc
out
pop
pop
adc
mov
cmp
xor
mov
mov
mov
stc
pop
retf
xchg
mov
pop
jnp
jp
aam
test
mov
imul
sub
jnp
retf
dec
mov
fadd
sti
ja
sbb
pop
dec
dec
loopne
xchg
out
mov
out
and
add
cwde
pop
xchg
add
add
add
pusha
fild
jbe
or
inc
out
and
pop
xchg
mov
movs
shl
or
pop
push
in
sub
(bad)
mov
add
sbb
ins
mov
rcr
sbb
(bad)
mov
mov
out
mov
pushf
daa
pop
add
ret
lahf
xchg
es
push
dec
mov
or
rcl
inc
sar
push
in
xor
(bad)
hlt
jnp
inc
ins
pop
pop
jl
int
add
inc
stc
movs
or
jbe
pop
loopne
pop
ja
add
jae
sbb
adc
out
mov
sub
je
lods
jmp
mov
mov
push
cmp
(bad)
iret
clc
cmp
(bad)
sbb
popa
cmps
(bad)
push
into
fild
inc
fwait
ret
leave
into
ins
or
out
ret
in
pop
adc
aam
jne
mov
xchg
jbe
pop
push
jmp
xor
jmp
ins
adc
sub
retf
push
xor
mov
add
cdq
xor
je
popf
(bad)
rol
push
jle
xor
push
js
cmps
mov
push
add
in
fldcw
fiadd
clc
mov
fild
cmc
mov
(bad)
out
jmp
cmps
popa
sahf
call
rol
mov
and
fadd
ret
cmp
or
fistp
adc
push
xor
xchg
push
loopne
mov
pop
aas
xchg
xor
mov
fisttp
jbe
mov
or
adc
sbb
mov
dec
dec
inc
sbb
pop
outs
xor
and
jmp
es
xor
mov
push
test
retf
pop
and
dec
mov
add
int3
mov
adc
ret
das
cmp
xchg
inc
jp
mov
dec
add
rol
icebp
(bad)
retf
mov
(bad)
aad
or
sbb
xchg
adc
ja
sub
(bad)
ud2
mov
and
jno
ds
mul
in
mov
data16
inc
xor
mov
inc
cmp
aam
arpl
daa
push
xchg
xor
pop
cmp
or
out
pop
fdivr
gs
dec
cmp
add
mov
(bad)
punpckhbw
and
pop
or
fisttp
or
add
sub
cmp
mov
xor
xchg
push
inc
mov
adc
dec
lea
leave
cmps
cli
push
popf
fs
jl
mov
pop
scas
ror
in
stc
(bad)
out
mov
stc
cmp
outs
dec
stos
js
jle
sub
jp
mov
and
add
and
pop
shl
push
or
retf
fidivr
ja
repnz
push
mov
adc
data16
(bad)
sub
mov
push
adc
dec
xchg
mov
cdq
imul
jp
(bad)
inc
cmp
jb
into
or
in
jne
inc
xor
lods
dec
mov
and
test
mov
repnz
add
push
push
pop
jle
out
scas
stos
ds
pop
xchg
call
pop
je
int3
push
icebp
inc
cs
sbb
dec
inc
dec
scas
je
jle
test
mov
aad
call
sbb
mov
out
out
mov
outs
pushf
sub
jecxz
in
(bad)
inc
jmp
pushw
xor
pushf
lea
push
push
hlt
mov
jmp
adc
adc
jno
rcr
inc
or
outs
fst
popf
mul
in
pusha
test
dec
pop
fstp
dec
mov
stos
shl
mov
or
std
mov
scas
pop
pop
xor
cdq
fwait
or
test
cmc
enter
leave
sub
addr16
mov
call
in
or
aad
jo
mov
xchg
cs
repnz
lea
hlt
mov
repnz
(bad)
fcom
cmps
xor
add
mov
mov
adc
xchg
xchg
jbe
jmp
test
jmp
test
push
int3
ret
packsswb
lods
jle
(bad)
cmc
es
les
cmp
mov
popa
adc
fisub
push
loopne
jno
or
lods
dec
fwait
das
xchg
fistp
mov
fadd
pop
adc
dec
dec
adc
add
jae
xchg
fbld
jmp
adc
cmp
sbb
loope
adc
rcr
dec
cli
jg
retf
mov
xor
fisttp
adc
jo
rol
out
pop
jns
mov
mov
rcr
movs
ins
lock
push
sbb
aam
sti
jle
(bad)
and
imul
rol
jno
(bad)
adc
js
adc
add
gs
das
loop
in
xchg
dec
jo
fmul
shr
lea
jmp
pop
outs
retf
xor
hlt
sub
mov
mov
push
ja
movs
leave
imul
loope
pop
ja
scas
popa
cmp
mov
loope
out
fimul
pop
(bad)
xchg
scas
xor
jle
es
adc
xchg
or
pop
cmps
pop
and
sbb
in
adc
sti
(bad)
out
clc
jmp
add
iret
mov
imul
push
push
dec
loop
ret
pop
gs
push
jb
xchg
inc
mov
jl
dec
lods
cmp
ss
bound
stos
(bad)
pop
sub
mov
fidivr
mov
repz
outs
push
ficomp
push
cmp
xchg
and
aad
dec
and
aam
shl
mov
lock
push
nop
inc
daa
out
(bad)
sbb
repnz
scas
pop
cmps
(bad)
sub
dec
mov
loopne
cmp
shl
mov
das
dec
inc
or
shr
(bad)
push
adc
mov
sbb
imul
(bad)
push
push
adc
test
pop
ds
add
sub
push
mov
xor
fwait
hlt
jne
add
es
and
cld
movs
xor
lahf
adc
or
dec
and
dec
(bad)
cmp
nop
cli
pusha
lahf
adc
repz
or
pushf
jae
jg
or
inc
inc
jl
retf
loop
mov
xchg
fwait
jae
inc
push
sub
cdq
mov
adc
dec
xchg
push
cmp
and
inc
fisttp
add
lds
jecxz
xor
pop
clc
ss
cmp
push
mov
fisub
ret
dec
nop
stc
adc
adc
or
pop
scas
cmp
xchg
or
jno
daa
or
fisttp
jmp
ficom
fnstenv
sbb
lds
out
iret
inc
ror
mov
pop
aad
add
inc
movs
mov
ds
mov
ja
pop
shr
loopne
add
push
adc
mov
aaa
jmp
xor
pop
pop
mov
xchg
cli
sbb
fistp
push
call
outs
mov
push
test
je
sbb
add
rcr
inc
cmps
scas
mov
inc
and
add
pop
push
xor
outs
and
jmp
push
out
add
inc
retf
cmp
add
mov
ret
out
hlt
xchg
dec
out
push
in
or
sub
inc
push
fist
jmp
xchg
leave
cbw
inc
mov
dec
pop
(bad)
out
imul
rcr
ds
or
je
popa
and
push
push
sub
cmc
call
stos
fmul
inc
mov
jmp
or
cli
jge
adc
je
mov
sbb
shl
push
xchg
pop
movs
(bad)
call
mov
adc
or
push
repnz
loopne
jmp
mov
fidiv
movs
adc
icebp
xchg
adc
daa
push
retf
aam
repnz
adc
(bad)
pop
js
xor
mov
xchg
cld
mov
call
test
dec
cdq
and
je
dec
sar
repnz
xlat
call
leave
shl
call
ins
(bad)
in
xor
fdivr
sub
pop
mov
and
mov
lds
jl
mov
sub
popf
loopne
mov
mov
pop
into
retf
mov
in
adc
out
cmp
inc
mov
sub
pop
(bad)
xor
call
and
rcl
das
inc
jno
jnp
rcr
add
cdq
jl
pop
lds
jp
xchg
xchg
stos
cmp
mov
aam
aad
popa
fistp
scas
jne
jno
gs
push
mov
retf
push
sbb
movs
les
inc
call
pop
dec
(bad)
mov
inc
push
mov
aas
sbb
xchg
ja
inc
xchg
push
aaa
aam
in
dec
pop
in
push
(bad)
(bad)
stc
mov
jmp
mov
in
inc
enter
xchg
sbb
lods
jg
xor
mov
xchg
adc
(bad)
jnp
push
out
das
sub
lods
call
push
mov
scas
js
xchg
sahf
jmp
in
popa
jne
cmc
sbb
inc
cmp
add
mov
(bad)
push
jg
cmp
leave
add
cwde
cdq
pop
push
mov
xor
outs
mov
adc
jno
dec
stos
push
mov
adc
pop
cmp
shl
push
xchg
leave
mov
call
mov
in
sahf
xchg
call
lahf
test
jno
cmp
jnp
inc
in
adc
and
popf
dec
mov
pop
sub
inc
pop
div
adc
movs
scas
iret
jl
repnz
sbb
cmps
sbb
cmps
cmp
call
mov
arpl
(bad)
pop
fisubr
pop
ins
scas
pop
and
jns
pop
std
jno
pop
mov
ja
mov
push
dec
in
jno
push
pop
cwde
(bad)
dec
jno
xchg
retf
pushf
mov
test
or
daa
(bad)
retf
or
push
scas
outs
cmps
dec
inc
(bad)
sti
xor
and
iret
(bad)
lahf
stos
arpl
adc
pop
leave
retf
inc
sub
test
add
ret
add
lods
mov
xor
sbb
in
mov
xor
push
xchg
mov
(bad)
xor
inc
adc
add
fdivr
mov
xchg
shr
popf
shl
pop
ins
sahf
xchg
sub
les
jbe
(bad)
addr16
or
xor
test
fbld
into
in
loopne
ret
test
loopne
addr16
mov
inc
mov
push
inc
stos
dec
lods
in
jns
and
int
das
mov
ret
xchg
xchg
push
ret
je
dec
cmc
adc
pusha
rol
mov
sub
mov
daa
cmps
pop
shl
cmps
aas
pop
mov
jno
pop
imul
iret
push
scas
xor
fild
std
fmul
popa
div
sti
cmp
movs
jp
scas
call
pop
lahf
movs
adc
aad
adc
test
movs
add
cmp
fist
jmp
dec
and
(bad)
mov
jle
push
sbb
xlat
xor
push
adc
jle
or
aas
bound
mov
(bad)
xchg
retf
call
mov
cmp
cmp
sti
and
pop
bound
fadd
pop
lea
pop
std
xchg
aad
xor
pop
call
shr
mov
jp
pop
adc
test
xchg
test
cwde
mov
mov
inc
fisub
cs
jne
jno
aad
repz
aas
cmp
ror
jo
in
dec
sub
stos
inc
test
shr
dec
in
dec
jb
dec
jmp
popa
and
aam
pop
sahf
dec
fdiv
xlat
xchg
mov
jo
dec
sub
push
jg
xor
mov
xchg
add
xchg
and
cmp
ss
lock
lock
push
adc
mov
sub
cmp
movs
repnz
in
mov
addr16
int
arpl
fadd
rcl
rcl
fisubr
mov
cmc
mov
xchg
adc
ins
pop
retf
cld
mov
sbb
std
repnz
jb
jnp
jp
xor
clc
fbstp
sahf
test
push
add
movs
cmp
not
inc
shl
je
enter
adc
push
jns
ins
jmp
and
pop
pop
dec
ret
xchg
xor
aas
shl
mov
ins
cli
fisttp
daa
cmp
aad
(bad)
jnp
aad
pop
movs
xchg
call
sbb
ror
cdq
iret
sbb
sbb
scas
test
out
das
pop
scas
adc
(bad)
jb
test
shl
test
call
mov
les
add
neg
ja
fcmovne
(bad)
or
out
(bad)
cmp
std
push
ror
sbb
ja
dec
lahf
dec
or
jno
inc
fdecstp
popa
inc
sbb
jl
push
cdq
out
(bad)
ja
mov
rcr
fnstenv
inc
aam
fs
mov
add
jne
mov
sub
sub
in
scas
xor
dec
dec
cld
jmp
or
add
shr
popf
push
sbb
adc
rol
xor
jbe
rcr
pusha
(bad)
or
add
icebp
repz
and
jns
cmps
xchg
mov
loopne
jnp
aas
pop
add
sar
imul
(bad)
jns
fstp
js
call
push
jmp
pop
(bad)
and
(bad)
clc
je
add
xlat
cwde
scas
inc
iret
test
pusha
stc
inc
mov
test
mov
mov
cmp
push
movs
hlt
sub
fmul
mov
xchg
jae
sbb
jmp
push
lahf
pop
xchg
sub
daa
popa
leave
into
jg
add
inc
cmp
jo
mov
jle
jmp
rol
mov
dec
(bad)
ret
mov
stos
lds
loope
or
xchg
fidiv
aas
jl
lods
stos
add
push
dec
cmp
loop
xor
test
and
cmc
loope
mov
movs
sub
jne
or
xchg
adc
sbb
jno
test
inc
add
jecxz
fld
int
sub
test
sbb
lock
das
xchg
adc
addr16
sub
jmp
or
(bad)
xor
sbb
add
pop
inc
push
sub
(bad)
mov
pop
adc
xchg
imul
adc
addr16
mov
cld
dec
mov
test
sti
push
inc
xor
pusha
mov
push
push
or
icebp
pop
mov
je
dec
div
out
test
popf
test
out
mov
pop
push
std
jns
sub
stc
ss
ficom
inc
jl
inc
imul
cmps
inc
inc
sub
dec
push
sbb
sub
inc
(bad)
adc
stc
les
xchg
sub
mov
aad
sar
and
xor
cmp
es
jno
and
sbb
dec
inc
movs
int
cmp
sbb
mov
neg
inc
loop
loopne
loopne
mov
pop
shl
aas
repnz
mov
add
push
pusha
jmp
mov
ror
push
sbb
pop
inc
xlat
jae
shl
mov
movs
and
sbb
adc
jns
push
call
jnp
iret
gs
pusha
push
cmp
enter
dec
and
jo
rcl
adc
xor
mov
mov
imul
pop
dec
ins
xor
inc
pop
call
addr16
popa
bnd
pop
repnz
ficom
aad
stos
pop
pop
jge
mov
(bad)
ret
sahf
sbb
cmp
int3
cmps
div
push
cmp
mov
pop
movs
je
add
mov
(bad)
aam
jne
push
loopne
jns
daa
jge
popa
push
adc
dec
mov
rol
aas
frstor
shl
jge
retf
js
(bad)
push
fisubr
repnz
pusha
bound
movs
and
dec
push
fimul
pop
sub
mov
add
into
into
cmp
dec
sar
add
popf
scas
or
mov
or
jl
pusha
sahf
cmp
xor
call
arpl
dec
push
rcl
in
push
lods
aad
push
out
aam
push
add
std
mov
out
mov
adc
into
fdivr
rol
ret
gs
out
adc
das
psrlw
jno
pop
adc
sbb
ret
dec
jge
sub
pop
stos
outs
xchg
mov
jne
repz
data16
dec
or
xchg
ds
pop
sub
or
dec
ins
test
add
scas
jg
ins
pushf
loop
mov
xchg
dec
lods
add
push
pop
dec
pusha
test
mov
adc
test
lahf
cmc
jb
inc
test
push
fsubr
and
adc
movs
inc
dec
mov
ret
(bad)
cmps
push
dec
adc
mov
aam
jo
(bad)
jge
push
push
out
pop
into
ins
fsub
rol
dec
cmps
xchg
and
mov
or
push
dec
push
sbb
out
inc
xchg
stc
adc
adc
jp
mov
or
jne
adc
js
adc
push
cdq
mov
lods
test
mov
mov
test
mov
stos
mov
mov
out
or
mov
or
or
xchg
cwde
in
inc
out
test
scas
ret
sbb
ret
inc
xor
ds
or
add
mov
out
call
in
rcr
les
test
adc
aad
test
mov
or
mov
and
lods
arpl
jne
pop
mov
test
lods
in
mov
inc
in
(bad)
ret
sub
loop
cmp
fsubrp
pop
mov
sbb
sub
pop
sub
adc
cmp
mov
imul
mov
cmp
bound
mov
ins
xchg
js
xor
pop
mov
out
(bad)
sbb
je
xchg
jo
and
jns
pop
mov
frstor
sbb
xor
mov
clc
shl
jmp
mov
mov
or
pop
xor
pop
push
inc
push
adc
or
dec
jb
pop
adc
mov
call
add
inc
xor
add
fdiv
mov
or
shl
addr16
push
mov
push
repz
(bad)
push
mov
mov
call
ss
movs
std
or
mov
push
jae
in
je
or
das
dec
in
sbb
xchg
or
adc
test
retf
mov
xor
in
int3
sub
scas
sbb
mov
(bad)
mov
in
mov
out
inc
or
push
loope
(bad)
(bad)
xor
inc
movs
call
dec
xchg
cmps
(bad)
test
scas
ja
sub
or
lahf
mov
stc
dec
retf
and
loop
mov
dec
leave
cmp
sbb
jo
aam
sub
add
inc
and
aad
repz
adc
push
cvtps2pd
lods
inc
aad
imul
pop
pop
jbe
sub
or
inc
cmp
into
pusha
sub
loopne
push
and
jmp
pop
or
fisub
idiv
jle
cld
sub
cmp
cmp
add
sub
xchg
repnz
push
sub
iret
xchg
xlat
dec
mov
xlat
cmps
add
add
push
adc
dec
movs
add
adc
and
int
int
jbe
mov
stos
js
in
inc
xlat
push
sbb
xor
ins
or
fwait
sub
cli
mov
inc
pop
xor
out
sti
fisub
addr16
retf
daa
fld
test
fild
sub
mov
adc
adc
int
cmps
std
repz
enter
lahf
mov
cmps
push
mov
pop
mov
or
cmp
jl
mov
push
xchg
imul
adc
cmp
stos
inc
cmp
not
fnstsw
mov
fdiv
mov
in
sahf
int3
imul
sti
ds
cmp
test
into
push
rcr
bound
popf
sub
adc
call
lods
push
sbb
mov
aam
popf
jmp
xor
lods
sahf
mov
leave
adc
cmp
mov
xor
cmps
xchg
and
inc
xor
jno
hlt
call
in
jl
mov
dec
test
or
cmp
xor
je
xor
je
and
dec
mov
mov
cmp
mov
sbb
loope
fs
and
js
lods
mov
out
lock
or
lods
add
jmp
rcr
xchg
xor
repz
shl
or
in
pop
mov
call
rcl
pop
xchg
test
movs
pop
loop
bound
movs
and
push
jecxz
push
or
shl
aaa
lock
popa
cmp
les
jbe
loop
jae
pop
nop
test
(bad)
dec
pop
imul
in
mov
bound
stos
or
in
mov
popa
cld
sbb
and
mov
inc
add
inc
add
ror
dec
cmp
mov
xchg
and
mov
jmp
enter
mov
daa
mov
pop
add
les
jno
inc
xor
sti
and
nop
rol
sbb
cmp
and
test
retf
dec
ss
or
inc
cmp
out
out
sbb
rcl
pop
repz
mov
lock
int
aad
ins
repz
push
test
test
fldcw
imul
aas
or
pop
fcomp
fcmovu
dec
lock
mov
fwait
cwde
stos
mul
imul
test
push
jle
inc
jo
jge
dec
test
push
gs
int3
outs
and
sbb
(bad)
sti
and
lock
mov
(bad)
retf
fwait
mov
xlat
xchg
add
cmp
and
out
(bad)
icebp
fdiv
cmp
retf
seto
mov
pop
aam
or
shr
mov
(bad)
mul
add
jbe
fdivr
data16
pop
or
in
add
data16
rcr
je
push
inc
xchg
xchg
in
mov
dec
mov
or
and
sub
aas
out
in
(bad)
call
aad
call
(bad)
xor
sub
push
repz
mov
xor
push
pop
mov
xor
add
mov
push
inc
push
dec
(bad)
sub
mov
or
test
mov
lods
pop
cdq
movs
mov
test
xchg
dec
mov
(bad)
js
mov
pop
pop
repnz
mul
adc
retf
cmps
icebp
xor
out
or
loop
sub
xchg
jl
cmp
imul
ja
aam
in
dec
ret
inc
jle
scas
test
cmp
or
call
cmp
fisttp
lahf
and
mov
sbb
mov
jecxz
data16
nop
test
aam
push
loop
mov
aas
pop
add
pop
cdq
jbe
lock
and
lock
fst
dec
fistp
fdiv
mov
mov
mov
sub
jecxz
fwait
or
cld
test
xor
icebp
adc
or
out
sbb
in
dec
mov
cmp
movs
jp
push
mov
mov
loope
add
push
jge
les
xor
mov
jbe
arpl
scas
fmulp
jnp
mov
mov
sub
stos
out
push
cmp
jne
mov
ret
add
leave
dec
(bad)
mov
jns
jecxz
mov
inc
push
inc
cmp
cmp
fcomp
xchg
test
(bad)
push
jmp
dec
sbb
das
jnp
xlat
mov
ins
jge
xchg
mov
idiv
inc
jmp
leave
xor
adc
pop
neg
push
cmp
fadd
pop
iret
xchg
mov
cmp
or
jae
adc
std
mov
xchg
mov
les
arpl
(bad)
jg
aas
gs
test
cmp
popa
push
sahf
dec
shl
inc
mov
sbb
and
dec
adc
inc
inc
stos
jmp
cmc
out
dec
mov
dec
int3
push
mov
mov
rcr
(bad)
inc
mov
xor
jne
bound
pop
add
or
gs
retf
sbb
mov
lea
sbb
xor
movs
xchg
aad
mov
jp
shr
(bad)
cdq
mov
mov
dec
jne
addr16
cmp
sub
ficom
add
and
stos
pop
mov
add
and
idiv
not
mov
adc
pop
sub
xchg
(bad)
out
cmp
pop
sub
sbb
call
sti
jg
(bad)
sub
xchg
lahf
cmp
or
push
into
sti
mov
std
and
and
pop
add
ja
jl
jl
push
movs
bound
clc
aas
cmps
shl
mov
push
gs
xchg
fnstsw
jnp
xor
in
mov
push
jecxz
cmp
xchg
xchg
and
or
adc
(bad)
mov
stos
sub
inc
add
shr
scas
push
or
aam
(bad)
scas
shr
cmp
cmp
data16
(bad)
div
add
or
aaa
cmc
pop
aad
rcr
and
dec
ret
ret
dec
dec
rcr
adc
mov
mov
xchg
and
(bad)
xchg
cli
pusha
stos
and
pop
out
rcl
mov
test
or
inc
sub
lods
inc
ror
sub
push
ss
mov
or
jae
scas
xor
lods
push
jnp
into
std
arpl
mov
mov
out
dec
repz
rcl
retf
sbb
stos
cmp
pop
(bad)
cli
mov
mov
int3
in
sub
mov
mov
pop
pusha
out
call
daa
mov
imul
int3
loopne
inc
adc
div
fisub
stos
sbb
loope
sub
fisttp
push
xor
js
ss
hlt
jp
(bad)
in
test
leave
xchg
cld
movs
pop
mov
pop
lods
pop
ds
lods
push
fcmovbe
sar
rcr
out
rcl
mov
dec
and
fdivrp
xchg
mov
push
mov
faddp
xor
dec
xor
or
in
fsubp
and
or
dec
mov
inc
repz
sahf
retf
js
or
sub
mov
(bad)
adc
adc
sub
mov
jmp
push
ror
movs
rol
sub
into
bsr
add
aam
xor
xchg
in
adc
cmps
xor
stc
inc
jmp
sub
mov
mov
out
mov
jmp
in
xchg
inc
ret
jne
add
lahf
mov
pop
mov
neg
imul
xchg
in
inc
movs
push
scas
xchg
inc
mov
les
int
xor
inc
mov
inc
out
dec
inc
in
in
and
mov
inc
jge
inc
inc
js
push
xchg
add
sub
xchg
in
jle
jle
data16
repz
add
or
add
ret
aas
nop
adc
fistp
mov
inc
fcomp
jne
test
leave
and
xchg
lock
mov
repz
rcr
jbe
sahf
js
pop
jnp
out
scas
and
sub
sbb
jb
push
(bad)
jge
cmovb
sbb
sbb
mov
sbb
sahf
fs
shl
cmp
jge
cmp
ds
inc
add
dec
add
ss
adc
adc
push
cmp
inc
lods
test
jmp
add
adc
add
push
outs
ss
retf
xchg
mov
fst
shl
cmp
out
xor
pop
add
adc
arpl
cmp
xor
mov
retf
pop
(bad)
jbe
(bad)
cmps
push
cmp
cmps
call
inc
push
add
(bad)
arpl
sub
sbb
fdivr
leave
xchg
ret
jb
cmp
sub
xor
sub
dec
out
(bad)
push
movs
ins
(bad)
and
into
aaa
daa
fidiv
fidiv
out
push
inc
pop
sub
and
adc
sbb
int3
lods
sub
pop
lahf
pop
into
sahf
xlat
push
adc
fnstsw
lock
inc
dec
sub
pop
arpl
mov
ins
pusha
cmp
xor
cmp
shl
rol
xor
mov
xor
ins
mov
xchg
and
xchg
pop
xchg
mov
mov
cli
fnstenv
pop
shr
iret
cmp
aad
js
retf
jmp
cmps
inc
neg
pop
test
mov
rcr
dec
imul
ror
sbb
cld
jno
mov
fiadd
ja
sub
fdiv
add
add
stc
mov
movs
pop
stos
add
ss
call
and
sbb
and
xor
xchg
jge
fisubr
inc
jmp
ins
movs
or
loope
rcl
das
lahf
or
cmp
pop
int
das
out
in
pusha
dec
push
or
adc
not
push
cmp
loopne
adc
jmp
scas
adc
aad
inc
add
ret
sub
push
adc
jnp
in
movs
cmp
mov
out
jmp
mov
add
loop
push
pop
pop
and
test
pusha
leave
push
mov
xor
dec
cmps
in
add
fisub
sbb
not
xchg
add
ds
push
pop
(bad)
jecxz
sbb
bound
jno
dec
push
or
rol
mov
test
push
clc
sahf
dec
inc
mov
inc
data16
mul
shl
mov
ficomp
inc
popa
out
sbb
aad
or
jle
sbb
div
test
pop
(bad)
sbb
mov
xchg
test
push
pop
push
fwait
arpl
(bad)
fcomp
sbb
les
sub
les
dec
jno
sub
mov
push
and
ret
pop
sbb
iret
cmps
mov
mov
inc
mov
xor
movs
fdiv
push
mov
fcomp
mov
sub
jmp
push
cmp
scas
lods
mov
inc
xor
push
push
pop
nop
push
adc
sbb
push
nop
xor
adc
cld
push
jb
sub
aaa
dec
(bad)
dec
sti
cli
sbb
jle
jno
inc
(bad)
sbb
mov
pushf
cli
pop
xor
stos
and
cli
rcr
sub
lahf
icebp
data16
sub
jno
pop
jmp
xchg
sar
xchg
ja
add
cmp
fistp
pop
cmp
shl
(bad)
adc
imul
sbb
inc
xor
xor
sbb
cwde
test
popa
dec
iret
push
loopne
jge
(bad)
jmp
(bad)
into
out
jmp
int3
loopne
mov
lods
ds
or
sbb
sub
nop
inc
lock
lea
test
shl
xchg
xchg
mov
pop
out
in
cld
xor
das
inc
add
stc
fcmove
dec
mov
rcl
ss
mov
dec
(bad)
(bad)
repnz
outs
dec
sub
retf
dec
movs
xor
aad
scas
aad
cmc
cdq
lods
sub
mov
push
dec
in
aaa
xchg
(bad)
adc
xchg
dec
ret
int
jb
pop
idiv
push
push
jmp
leave
int
pop
push
imul
add
icebp
out
cwde
cmps
dec
jge
mov
adc
mov
out
sbb
addr16
mov
or
add
mov
sbb
inc
jge
test
test
mov
outs
arpl
mov
and
ins
pop
fld
les
data16
mov
cdq
push
and
lods
push
inc
jmp
xchg
in
mov
cmp
popf
jae
lds
repz
mov
sbb
mov
xor
pop
fisubr
inc
popf
nop
add
pop
cmp
dec
call
and
sub
xor
xchg
sti
das
and
inc
mov
mov
ret
or
cdq
leave
pop
sub
sbb
and
mov
and
xor
xchg
and
pop
push
cwde
fwait
push
push
inc
add
in
test
or
cs
nop
xchg
vpunpcklbw
cmp
cmc
push
push
push
mov
jae
daa
xor
jnp
and
mov
and
rcl
pop
movs
xchg
mov
cdq
dec
sub
cmp
ds
nop
fsubr
out
inc
test
scas
cmp
xchg
cmp
ins
es
dec
mov
sub
inc
lahf
dec
mov
hlt
je
push
imul
xor
mov
repnz
xchg
sbb
fwait
xchg
(bad)
jmp
pop
in
(bad)
dec
mov
and
scas
adc
into
jle
icebp
mov
mov
mov
inc
mov
mov
jmp
pop
std
mov
pop
aaa
xchg
mov
js
sub
out
mov
bnd
jno
shr
push
ret
push
pop
push
jg
xchg
pop
and
(bad)
jmp
inc
mov
popf
mov
pop
push
pushf
shr
call
mov
je
(bad)
and
inc
outs
xor
imul
les
push
lods
imul
packsswb
xor
mov
in
pushf
cmps
sub
(bad)
cmp
and
popa
addr16
ins
(bad)
call
cmp
repz
fidivr
and
ss
popf
je
ret
and
fcomip
push
xchg
call
adc
imul
frstor
mov
(bad)
pop
adc
pop
xor
movs
cmp
xchg
ds
es
sbb
ret
mov
or
rol
retf
cmc
imul
dec
mov
outs
aaa
call
fld
sbb
xor
inc
and
push
or
or
mov
out
inc
mov
mov
call
aaa
jae
mov
nop
sub
mov
ret
sbb
add
adc
sbb
mul
imul
popf
jcxz
ins
fwait
cmp
mov
scas
pop
gs
sub
mov
cmp
mov
das
loope
ds
adc
mov
mov
(bad)
pop
stos
adc
jmp
push
pushf
nop
ds
cmp
(bad)
mov
or
inc
push
int
dec
and
sbb
dec
lock
sub
inc
xchg
and
jge
or
xchg
xor
xchg
push
xchg
mov
mov
popf
sbb
cmps
pop
int3
cmp
sahf
inc
out
xchg
mov
cmp
inc
push
les
pop
cmp
shl
or
and
retf
test
mov
test
push
leave
dec
pop
ss
stc
(bad)
or
test
xchg
pop
jb
add
ja
into
mov
fld
xor
jno
cmp
sub
loop
jns
psadbw
xor
xchg
mov
or
inc
in
or
dec
stos
sub
or
inc
xchg
pop
(bad)
cmc
dec
(bad)
dec
fmul
or
mov
lahf
leave
out
inc
in
mov
add
int3
push
mov
mov
sub
dec
mov
hlt
jne
xor
enter
jno
add
ret
add
dec
nop
sub
xchg
ja
les
inc
cmps
ins
int
rol
arpl
xchg
arpl
jecxz
test
xor
pop
pop
cmps
sbb
out
add
es
fnstsw
ins
dec
pop
push
pop
sbb
add
jae
xchg
push
mov
shr
xchg
and
and
xor
mov
cmps
ficomp
in
mov
mov
lods
xchg
or
shl
fadd
clc
stos
popf
neg
pop
or
mov
gs
mov
dec
stos
out
push
in
cmp
in
adc
leave
add
jns
pop
fstp
xchg
gs
shl
cmp
jecxz
sub
mov
(bad)
lock
add
test
or
ret
rol
cs
sbb
pop
retf
or
push
popf
xchg
jg
scas
outs
or
mov
rcl
dec
or
lea
sbb
adc
inc
into
add
ficomp
jge
loopne
pop
push
fisubr
push
dec
out
stos
xchg
mov
sbb
jo
loop
iret
and
adc
ds
jge
pop
mov
movs
or
lods
and
push
mov
xchg
repnz
nop
sbb
cdq
fwait
arpl
mov
sbb
ret
(bad)
mov
sbb
xchg
daa
popf
movs
inc
in
cwde
and
outs
xor
cmc
jle
and
xchg
sbb
mov
mov
ds
test
inc
das
add
(bad)
mov
cld
mov
jle
push
push
lods
push
pop
icebp
shl
call
scas
int
mov
test
aam
mov
mov
or
jmp
imul
mov
shr
rcl
or
(bad)
jmp
adc
sub
scas
loopne
cmp
scas
sbb
adc
movs
xchg
jae
retf
and
adc
jp
push
out
shl
(bad)
in
push
popa
daa
fcom
aas
mov
into
inc
pop
mov
inc
outs
xchg
int3
and
or
int3
mov
call
pop
fstp
(bad)
sbb
fild
adc
dec
xchg
mov
and
cmps
pusha
mov
xor
push
pop
mov
cmps
adc
pop
out
dec
mov
fiadd
cdq
cmp
mov
or
cmp
(bad)
(bad)
mov
sub
lods
mov
and
xchg
stc
ins
cmp
inc
mov
in
jmp
ret
das
fst
enter
xchg
(bad)
in
fwait
push
and
clc
adc
jecxz
mov
aam
inc
cli
add
xor
jnp
out
(bad)
in
mov
jl
fild
jns
in
mov
jmp
pop
sub
popf
mov
cmp
inc
fs
ds
jb
(bad)
arpl
mov
icebp
in
xchg
scas
test
pop
and
hlt
mov
cli
fwait
add
jp
sub
shl
inc
and
inc
daa
and
xor
movs
jae
test
mov
and
push
popf
mov
pop
mov
sub
arpl
cmc
push
jmp
ds
jne
add
bound
cmp
mov
xlat
stos
das
mov
push
xchg
in
jge
inc
or
ds
xchg
pop
cli
cmp
or
lock
mov
mov
xchg
sbb
xor
adc
mov
stos
test
test
add
ja
and
into
mov
sbb
scas
fnstsw
xchg
cmp
push
add
mov
jno
mov
pushf
mov
jge
or
sahf
mov
cli
out
clc
push
mov
gs
je
push
mov
icebp
mov
cmp
cs
das
outs
jns
pop
dec
enter
or
or
int3
in
sub
xlat
add
dec
adc
(bad)
sub
adc
das
push
sbb
stos
mov
sub
ss
adc
and
loop
inc
xlat
pusha
lea
jg
es
mov
movs
sub
inc
into
lahf
and
dec
addr16
test
in
mov
sar
sbb
fidivr
cmp
dec
ss
cmp
(bad)
test
ror
push
rcl
sub
sbb
pop
xchg
addr16
xchg
dec
mov
fidivr
push
pop
pop
sbb
aad
scas
mov
mov
cmp
ss
cld
xchg
xchg
mov
jno
jge
sti
adc
xor
iret
lds
mov
cmp
ins
jne
and
inc
or
cmp
inc
imul
xchg
lock
pop
loopne
inc
adc
pop
push
adc
or
repnz
jnp
cmc
and
pop
inc
iret
adc
cmp
sub
pusha
ud2
adc
pop
out
mov
dec
scas
rcl
pop
fmulp
or
xchg
and
(bad)
pop
dec
out
daa
loope
scas
xchg
push
sbb
push
repz
nop
xor
cmp
mov
cmp
dec
gs
aas
lock
pop
pop
imul
pop
movs
js
push
mov
push
bnd
push
hlt
or
mov
dec
xchg
push
and
shl
icebp
jmp
add
mov
cmc
dec
push
aad
xchg
xor
call
mov
and
in
mov
pop
ror
out
daa
sub
jnp
push
mov
dec
cmps
lods
pop
mov
mov
dec
push
xlat
mov
inc
(bad)
neg
push
add
cmps
and
gs
icebp
fdivr
aas
push
ret
hlt
sbb
jb
or
push
push
sti
fcom
pop
pop
and
scas
inc
js
pop
xchg
push
in
(bad)
inc
dec
in
jno
mov
pop
jnp
sti
adc
dec
pop
push
adc
test
or
push
pop
(bad)
retf
stos
inc
aam
jb
pushf
or
xor
rcl
les
movs
xor
mov
dec
ret
bound
in
rol
inc
add
cmp
int
jge
cmc
push
or
xchg
fcomp
popf
jge
sub
fsubr
gs
mov
leave
(bad)
aad
daa
retf
clc
cmp
iret
and
cmp
xor
call
(bad)
ds
pop
mov
dec
loop
(bad)
lock
imul
jmp
ins
mov
div
js
adc
js
cmp
and
xor
mov
ret
xchg
ret
push
xor
jmp
(bad)
and
in
xchg
lds
add
mov
test
imul
mov
jp
daa
rol
call
(bad)
xor
mov
es
sahf
jae
outs
mov
sbb
push
in
xchg
retf
ins
loop
push
out
inc
adc
(bad)
push
adc
and
neg
dec
mov
cld
jmp
mov
dec
fwait
add
push
push
outs
cmps
lds
push
xor
aad
and
push
ja
in
dec
xchg
add
fdivp
xchg
int3
pop
sar
cmc
xchg
jmp
mov
dec
neg
stos
std
xchg
adc
add
mov
sbb
fwait
mov
pop
xchg
repnz
dec
aam
cmp
repz
inc
outs
ficomp
add
jge
out
xchg
stc
adc
scas
rcl
mov
call
xchg
mov
daa
test
pop
mov
add
sub
ss
aas
clc
clc
(bad)
pop
lods
out
popf
addr16
add
jmp
shl
sub
call
repz
ds
xor
or
(bad)
xlat
div
out
and
pusha
in
inc
cmp
mov
inc
(bad)
stc
push
retf
shl
mov
pop
lock
mov
les
pop
mov
inc
push
push
pop
adc
js
xor
out
cmp
loopne
and
fwait
cmp
repz
xchg
mov
inc
dec
arpl
jne
cld
xchg
push
and
jbe
add
retf
inc
scas
jmp
es
mov
sub
lods
imul
rcr
(bad)
stc
repz
xchg
out
in
hlt
push
push
rcl
jge
pop
push
and
mov
push
dec
cmc
sbb
or
inc
adc
sbb
mov
pop
mov
jbe
inc
mov
push
(bad)
xor
ficomp
mov
mov
getsec
daa
cmp
je
push
cwde
sar
mov
hlt
mov
nop
fdivr
pop
mov
mov
pop
mov
aas
pop
les
jmp
out
inc
xor
in
cwde
test
push
mov
fidiv
sbb
test
add
mov
add
ror
push
icebp
cli
fs
pop
push
adc
pushf
js
fdivr
or
xor
das
(bad)
adc
push
das
retf
ror
pop
sub
ins
shr
or
rol
push
out
or
dec
inc
jp
loop
mov
in
push
ins
inc
dec
fst
xchg
mov
cmp
nop
sar
adc
rol
xchg
adc
aaa
lahf
inc
mov
in
(bad)
xchg
je
aad
xchg
ins
enter
push
adc
mov
dec
(bad)
fidiv
jbe
inc
or
jae
cdq
mov
out
pop
mov
pop
mov
sub
icebp
mov
repz
inc
mov
push
mov
mov
bound
dec
xor
mov
xor
shr
retf
jmp
jns
int3
bound
and
add
dec
or
adc
dec
iret
jb
cmps
fstp
imul
push
add
inc
ret
jb
jl
mov
arpl
xor
aas
mov
cmps
retf
adc
pop
or
push
sbb
cmp
stos
fnstsw
scas
mov
and
add
push
xlat
in
mov
cwde
fs
fidivr
adc
mov
mov
in
jmp
cmp
fisub
dec
cmp
mov
sub
imul
mov
jbe
mov
dec
test
adc
sbb
mov
out
xor
ins
stc
inc
mov
add
jle
or
repz
ins
mov
dec
cs
jle
xor
movs
pop
repnz
cmps
add
lds
add
sub
cmp
cs
mov
mov
push
retf
ror
cmps
inc
lods
jbe
mov
inc
cmp
add
xchg
loopne
ret
inc
test
xchg
dec
(bad)
sar
jo
psrld
jae
sbb
pop
ret
sbb
aam
in
lock
or
loope
pusha
mov
imul
cmp
inc
adc
sar
or
(bad)
ins
adc
dec
in
mov
xor
xchg
bound
lds
ss
xor
outs
sbb
xor
mov
into
mov
mov
dec
mov
leave
mov
popf
test
dec
(bad)
lods
sbb
shl
hlt
push
out
test
xor
(bad)
jmp
mov
outs
mov
retf
add
cs
out
adc
add
les
leave
and
dec
in
jge
cmps
cdq
jmp
in
in
dec
add
sbb
das
mov
xchg
std
pop
cmps
xchg
cwde
out
rcr
pop
test
ins
ss
(bad)
mov
or
outs
test
pop
daa
cmp
test
test
cmp
jecxz
dec
fldcw
or
mov
nop
and
out
movs
pop
inc
movs
or
adc
ins
ret
lock
test
mov
adc
cmps
pushf
leave
lods
push
dec
add
cmp
jnp
inc
jge
pop
fist
pop
cmp
mov
push
in
jmp
xor
(bad)
mov
pushf
psraw
adc
hlt
xchg
loopne
mov
sbb
arpl
or
das
outs
fs
enter
xor
js
jae
test
shl
leave
xchg
push
dec
inc
(bad)
out
aad
mov
pop
xor
and
jmp
out
sub
or
push
jmp
xchg
aaa
cmps
icebp
repnz
inc
and
xor
xchg
stos
lock
pop
xchg
bound
int
ret
add
inc
push
and
inc
add
ds
lock
int3
sbb
sub
xchg
mov
sub
test
sar
fdivr
(bad)
mov
mov
xchg
pop
mov
or
mov
mov
shr
cdq
jecxz
mov
pop
cs
pusha
fldcw
xchg
xchg
js
mov
sub
data16
aas
lea
shl
cmp
add
ins
iret
xor
pop
pop
jg
daa
mov
mov
cld
push
pusha
adc
cmp
push
jo
(bad)
sub
imul
call
mov
cmps
xchg
cmc
push
test
xlat
loop
add
test
sub
add
dec
and
and
outs
test
stos
jae
outs
jg
mov
retf
mov
scas
sti
lahf
jne
repnz
push
pop
fimul
push
cmp
stos
or
cdq
shr
pop
ds
mov
popa
mov
ds
pop
xor
(bad)
push
sti
and
cmp
jp
aam
cs
les
das
xchg
je
jp
repnz
retf
sbb
xchg
adc
je
(bad)
ja
mov
xchg
xchg
in
mov
dec
mov
loop
push
sub
fiadd
mov
fs
stos
arpl
push
rol
pop
rol
jle
stos
push
mul
ret
ins
rcr
xchg
jl
mov
mov
mov
jmp
in
xlat
div
cmps
dec
push
xchg
iret
xchg
out
sub
das
ror
in
rcr
inc
in
adc
inc
sub
inc
(bad)
dec
or
jmp
arpl
push
dec
lods
ins
jae
fwait
call
sbb
test
(bad)
jbe
or
inc
dec
retf
into
lock
and
xchg
(bad)
lock
add
add
mov
jge
cs
pop
sub
pop
fld
call
stos
(bad)
loop
push
fnstcw
push
xchg
ret
stos
push
jge
or
leave
(bad)
stos
aad
dec
pop
push
mov
sar
jns
or
js
jne
cmp
ins
push
ins
test
cmp
scas
retf
cmps
lahf
fld
jb
mov
or
lods
fwait
pop
test
aaa
sti
or
adc
cs
or
inc
aas
fcom
mov
sub
jmp
fwait
out
add
mov
and
add
ret
add
pop
push
mov
(bad)
out
cmp
push
sub
mov
dec
sbb
jmp
xchg
ja
xor
sub
(bad)
idiv
dec
unpckhps
les
cmp
jb
and
mov
pop
adc
cmp
and
imul
push
(bad)
(bad)
inc
xchg
cmp
cdq
loope
mov
inc
mov
out
sub
xchg
and
jo
add
xor
adc
(bad)
lahf
sub
pop
jno
loopne
inc
lock
ror
ins
dec
imul
dec
add
ficom
mov
mov
jp
aad
jge
ja
in
in
jb
sub
vpaddb
mov
xchg
js
stc
jp
rcr
fild
pop
stos
sbb
and
fsub
jmp
enter
aam
mov
in
xchg
add
cmp
xor
repz
sub
add
(bad)
pop
add
lods
cmp
scas
pop
mov
inc
sbb
pusha
cmp
xchg
sub
and
inc
bound
pushf
std
ins
adc
in
loope
mov
(bad)
fadd
fsubr
xchg
outs
or
(bad)
pop
loop
and
mov
ret
xor
(bad)
outs
and
inc
loop
lahf
(bad)
mov
mov
jp
(bad)
push
popa
mul
gs
jmp
lods
jo
mov
pusha
in
sti
jnp
daa
mov
jl
aam
ss
fmul
loope
or
sbb
outs
add
sahf
jbe
btr
movs
or
neg
js
sub
and
call
mov
dec
add
js
inc
xchg
leave
xchg
jo
mov
bound
or
add
mov
lods
retf
fwait
pop
mov
or
mov
ja
xchg
mov
call
push
pop
sbb
out
js
bound
cwde
inc
add
out
enter
inc
and
mov
bnd
and
cmps
sbb
mov
pop
cdq
int3
push
mov
push
adc
jnp
and
sub
cmp
fs
dec
pop
jbe
mov
jle
in
xchg
je
test
outs
into
(bad)
cmps
sub
lock
cwde
pop
imul
aam
sbb
pop
mov
div
sub
inc
push
xor
dec
gs
add
lahf
es
add
jp
shl
jae
fucomip
mul
syscall
stos
adc
dec
sbb
test
test
dec
and
jle
adc
jnp
adc
test
mov
fdiv
and
scas
adc
mov
(bad)
aam
push
arpl
cmps
xor
scas
inc
mov
jne
ret
mov
sbb
repz
add
out
not
in
pop
int3
sbb
and
adc
mov
push
jmp
push
mov
push
call
xchg
fsub
pop
xchg
sbb
fdiv
fs
xchg
test
daa
dec
push
mov
shufps
sti
repz
fwait
adc
xchg
ror
cmp
outs
and
cmp
in
inc
pop
dec
test
nop
inc
sub
inc
clc
jp
dec
cmp
mov
jle
pop
pop
(bad)
cmp
mov
xor
in
cmps
pop
jmp
cmp
shl
inc
imul
lds
jns
je
(bad)
push
adc
movs
das
cmp
je
nop
or
mov
rol
ret
pushf
aad
xor
outs
push
mov
push
es
addr16
xor
push
out
data16
push
je
push
sub
stos
(bad)
xor
int
xchg
dec
cmps
clc
jle
mov
xchg
mov
inc
in
push
in
fbld
push
arpl
add
jmp
loope
outs
cdq
scas
jmp
pop
ins
test
mov
stc
or
aam
push
ds
ds
push
mov
adc
mov
sti
dec
push
sbb
and
xor
out
jmp
add
mov
sti
stos
mov
sbb
mov
ins
mov
lods
dec
sub
stc
(bad)
fiadd
sar
popa
push
fwait
pop
not
arpl
aas
int
shl
mov
sub
mov
pusha
jo
cmp
inc
adc
mov
jbe
or
mov
repz
(bad)
ins
xor
mov
shl
scas
outs
xchg
cmp
gs
add
cs
jp
add
push
mov
test
out
mov
mov
xor
(bad)
out
mov
retf
outs
push
fdiv
fwait
sbb
inc
outs
iret
mov
mov
lahf
or
xchg
mov
jmp
push
mov
mov
jno
mov
jae
mov
inc
imul
cmp
add
dec
sub
int
fnstenv
mov
sbb
(bad)
test
sbb
inc
xchg
aas
xchg
sub
jns
loopne
add
retf
scas
xchg
stc
movs
cmp
jle
mov
sbb
inc
mov
arpl
shr
xchg
mov
sbb
ficom
retf
xor
(bad)
push
scas
jp
out
dec
xchg
xchg
pop
hlt
pop
push
lea
push
mov
push
adc
ss
push
aad
std
mov
fidiv
jmp
cs
cmp
shr
inc
sub
push
cmp
das
fimul
sbb
jecxz
test
aas
push
and
jbe
push
sbb
inc
pop
sub
adc
adc
mov
fcom
ret
push
and
mov
mov
in
pusha
and
bound
add
jno
cmp
and
or
adc
push
shl
fisttp
mov
xor
mov
cmps
daa
out
add
popa
dec
neg
jmp
sti
int3
push
adc
push
push
push
dec
test
push
aam
cmp
dec
shl
inc
mov
inc
jmp
jl
emms
push
frstor
loope
pusha
mov
xchg
cwde
fwait
xor
and
push
sub
fneni(8087
(bad)
or
add
xchg
addr16
jnp
mov
cmps
inc
mov
sti
loop
jg
push
adc
fdivr
scas
mov
pop
fbstp
or
hlt
jle
pop
adc
and
mov
cli
int
dec
sbb
mov
js
clc
pop
jge
out
lods
aas
mov
aam
in
cmp
push
mov
cld
sbb
mov
cmp
(bad)
lods
mov
xlat
xor
push
push
sbb
add
lahf
jmp
cmp
js
jg
add
mov
into
xor
jmp
(bad)
aad
sub
add
sar
shl
sub
push
cld
cmp
(bad)
std
dec
sbb
dec
repnz
adc
mov
mov
jmp
mov
jl
pop
or
inc
xchg
in
ror
int
add
in
dec
repz
cmps
and
jg
cmp
mov
or
mov
xor
sub
repz
je
cmp
je
push
jae
gs
jecxz
daa
cmp
sub
lods
xchg
or
outs
lea
dec
pop
out
xor
jle
stos
les
fs
push
xchg
dec
and
cmp
push
and
sahf
(bad)
into
fsubr
inc
imul
dec
aas
loope
lods
data16
not
mov
scas
rcr
adc
push
mov
imul
scas
sbb
rcl
add
popf
dec
(bad)
cmps
sub
pop
fwait
jns
ror
xchg
lods
or
xchg
movs
sub
push
and
jg
push
or
add
jnp
sbb
sub
aaa
cmc
outs
or
lods
push
sub
pop
add
cs
psrlw
or
push
addr16
push
cwde
out
aas
sahf
xor
sti
pushf
add
(bad)
je
xchg
test
pop
imul
je
add
jmp
sub
or
inc
xchg
mov
mov
jns
xchg
cdq
or
or
mov
int3
inc
push
clc
jg
loop
out
push
cmps
sbb
test
inc
ds
sbb
popf
xlat
dec
hlt
dec
mov
mov
inc
fs
dec
jo
jne
mov
jbe
mov
xor
sub
(bad)
mov
sub
fisubr
inc
out
jae
sti
jle
mov
dec
shr
pop
mov
aam
test
js
mov
call
div
repnz
int3
xchg
ins
(bad)
adc
pop
fcomp
jae
mov
sar
int
loopne
push
jg
jl
in
push
adc
int
dec
cmp
rcr
pop
cmp
out
push
sbb
mov
mov
push
lea
aam
mov
mov
icebp
pop
out
mov
jge
retf
into
clc
mov
jns
push
out
mov
dec
(bad)
mov
es
retf
gs
mov
cwde
stos
push
(bad)
orps
add
aaa
(bad)
lock
jecxz
and
movs
retf
or
xchg
mov
and
and
and
mov
in
retf
popa
inc
call
sbb
retf
(bad)
mov
ret
mov
outs
and
jmp
adc
int3
shl
xchg
fimul
xchg
fmul
pop
mov
mov
stos
or
or
push
jle
imul
loopne
js
inc
add
das
mov
data16
push
jbe
nop
les
test
jp
push
inc
jecxz
push
jg
inc
sbb
test
jmp
ret
popf
xlat
ds
jb
pop
test
ret
adc
aas
sub
mov
jno
fdivr
jne
cmp
add
out
shr
aas
ja
fst
cmp
pushf
jne
mov
mov
sbb
std
ror
push
xor
jp
(bad)
jg
loope
dec
iret
inc
loopne
jae
add
std
mov
or
pusha
shr
mov
std
not
inc
add
mov
or
out
jmp
add
(bad)
adc
jp
cld
jp
and
shl
push
add
xor
sti
imul
lahf
js
std
push
stos
loope
inc
enter
cdq
add
pushf
std
pop
xchg
(bad)
mov
movs
mov
inc
jp
pop
popa
mov
and
dec
mov
out
sbb
xchg
sbb
in
adc
mov
push
ins
aas
sti
ins
pop
mov
mov
xlat
push
por
pusha
pop
lods
fwait
jg
pop
mov
mov
mov
and
inc
ss
cmps
mov
push
stc
push
fcmovb
(bad)
cld
movs
mov
pop
jae
hlt
sbb
stc
push
pop
call
sub
fdivr
inc
sahf
add
scas
jl
push
daa
and
push
adc
mov
ja
add
jne
(bad)
mov
addr16
in
push
sub
repz
rcr
loopne
inc
pop
jne
in
pop
lods
mov
push
jg
retf
adc
add
dec
or
add
sub
xor
lds
jle
push
xchg
and
stos
mov
fdivrp
imul
cmp
and
aas
jns
xor
mov
push
adc
and
sbb
pop
pop
ret
mov
push
outs
sbb
and
je
fisttp
pop
ret
push
mov
inc
in
dec
and
cmp
fstp
xor
nop
lds
cmp
and
add
mov
cmp
cmps
ins
stos
(bad)
in
xchg
sbb
fdivr
inc
fcomp
idiv
and
mov
daa
inc
fcmovu
xor
rcl
mov
inc
sub
xlat
mov
aam
je
(bad)
xor
cdq
pushf
mov
addr16
jge
add
inc
dec
add
jle
repnz
dec
dec
rcl
xchg
ja
enter
out
test
dec
mov
loop
setae
(bad)
adc
cmp
sbb
fmul
inc
cmps
sbb
sub
out
fdivr
movzx
pop
jae
aam
dec
pop
and
aam
int3
mov
arpl
mov
cmp
xchg
cdq
cmp
adc
imul
mov
test
scas
pop
fcom
std
scas
push
shl
bound
aam
movs
add
push
(bad)
cmp
fst
lds
cmp
test
test
and
lea
xchg
pop
lods
ret
hlt
bound
in
ds
test
(bad)
movs
test
xor
cmp
jp
clc
xor
sbb
mov
mov
imul
sbb
ins
push
int3
jbe
sub
in
cmps
stc
idiv
mov
aam
xor
or
mov
push
mov
sbb
inc
imul
sbb
scas
cmps
push
js
or
pushf
add
call
sbb
(bad)
imul
jmp
xchg
aad
rol
aam
scas
sub
pusha
int
rcl
push
iret
jb
mov
iret
stc
jmp
pop
add
ja
gs
cmps
rcr
add
(bad)
daa
push
fs
and
jne
or
retf
inc
imul
out
ucomiss
inc
inc
jne
mov
push
cdq
cld
jnp
adc
call
test
xor
mov
outs
fild
es
jp
xchg
dec
xchg
mov
jle
and
inc
adc
cmp
xor
fiadd
mov
fs
icebp
or
test
fist
shl
fdiv
jo
enter
cmps
inc
sub
push
sbb
jbe
push
dec
sub
inc
sub
push
aad
dec
pop
jo
ins
sub
inc
test
sbb
mov
push
lods
or
ds
adc
and
adc
shr
gs
repnz
mov
jle
push
xlat
lahf
test
enter
add
loopne
xor
inc
hlt
je
xchg
movs
push
inc
call
xchg
retf
popf
mov
push
push
sbb
push
fwait
push
add
imul
xchg
sub
add
inc
mov
push
sub
cdq
sbb
out
cmps
xchg
dec
adc
xchg
call
fs
sar
add
inc
pop
add
adc
jg
adc
dec
xor
and
sub
push
jmp
ret
add
stos
cmps
call
pop
xor
icebp
cmp
imul
mov
push
(bad)
dec
daa
out
pushf
inc
ja
jg
pop
scas
clc
cmps
dec
jno
jmp
cmp
into
fcmovne
pop
dec
inc
out
inc
dec
xor
dec
(bad)
mov
add
mov
jge
test
or
jbe
in
ins
cmp
xor
out
ins
adc
call
cmp
xchg
mov
or
fldlg2
mov
add
adc
neg
xchg
pushf
movs
mov
aaa
pop
add
lods
and
sbb
cwde
fisubr
ins
in
xor
pop
in
jne
pop
xchg
mov
xchg
rcl
scas
cwde
test
int3
fwait
add
pop
sub
test
imul
call
adc
push
adc
cmp
(bad)
mov
dec
mov
sub
xchg
cdq
fadd
mov
cmp
xor
retf
pop
mov
jmp
retf
jge
cmp
inc
aaa
adc
setg
fwait
je
rcl
pushf
adc
pop
push
pop
or
jl
mov
lahf
pusha
lods
test
jae
sahf
push
jae
mov
jo
imul
push
jno
push
add
inc
mov
jnp
add
ss
int
cmp
outs
cmp
sub
fs
bound
push
fimul
and
sbb
fadd
mov
dec
shl
adc
imul
je
or
inc
or
jnp
dec
pop
xchg
in
mov
js
popf
rep
jno
or
iret
adc
push
test
cld
loopne
das
outs
out
cs
dec
dec
push
sbb
push
ficomp
int
stos
iret
shl
sub
aam
jmp
stc
sub
add
pop
shl
xor
das
popf
sub
cmps
and
(bad)
in
push
and
dec
mov
ja
mov
std
mov
and
out
ret
jmp
cmps
xchg
addr16
aas
mov
clc
sbb
rcr
mov
out
ss
or
jg
inc
ss
lds
std
movs
(bad)
jmp
add
cli
aaa
mov
mov
mov
push
sbb
movs
mov
inc
pop
jmp
cmp
add
add
nop
aas
jo
in
push
inc
sbb
jle
enter
scas
repz
aaa
ret
sbb
dec
xlat
mov
imul
fisttp
inc
popf
sub
mov
out
das
pop
sbb
cmps
mov
mov
icebp
mov
add
in
cmp
xlat
imul
cmps
cld
add
fstp
adc
pop
dec
fist
dec
push
(bad)
fs
addr16
mov
sub
popf
mov
inc
add
push
cwde
call
add
sbb
retf
sub
mov
jb
push
cmp
mov
cdq
icebp
xor
mov
pop
or
(bad)
iret
retf
inc
cmc
inc
cmp
stos
daa
repnz
xor
add
cmc
lods
jmp
sbb
shr
adc
and
mov
retf
pop
mov
in
push
hlt
mov
cmp
or
cmp
mov
sub
mov
mov
mov
jno
pop
pop
add
hlt
mov
(bad)
addr16
leave
sub
(bad)
push
mov
cld
int
sbb
fcomp
cld
ins
pop
lods
xchg
push
addr16
or
je
adc
or
in
loopne
test
int
cs
adc
adc
jns
push
js
mov
mov
jbe
add
xchg
or
xor
or
(bad)
arpl
lahf
outs
adc
in
test
inc
push
mov
ret
mov
xor
push
xor
sbb
stos
jl
movs
fstp
mov
push
push
(bad)
sub
dec
sahf
or
es
jb
adc
das
push
idiv
adc
pop
lea
pop
repz
clc
adc
xchg
shr
add
aas
sbb
xchg
scas
scas
and
test
fdivr
test
pop
inc
or
shl
push
or
arpl
mov
das
fs
ret
mov
shl
pop
pop
fidiv
leave
xchg
imul
mov
call
mov
jg
popf
inc
sti
out
mov
fidiv
mov
sub
add
cmp
mov
ins
xor
out
mov
mov
push
mov
mov
aad
jae
mov
(bad)
xchg
test
xor
inc
mov
pop
dec
jnp
retf
repz
sub
or
(bad)
sbb
ja
xor
in
lock
push
into
jecxz
push
outs
int3
push
mov
test
cmp
jmp
loopne
jl
pop
mov
ret
push
lds
es
cmp
in
xor
imul
or
xor
xchg
imul
mov
adc
xor
lahf
(bad)
loop
sbb
call
mov
xor
mov
lods
dec
jg
call
pop
xchg
and
les
aam
stos
sub
mov
mov
cmp
sbb
stos
inc
loopne
dec
imul
(bad)
repnz
mov
jp
dec
xchg
enter
(bad)
xor
cmp
and
and
sbb
lea
xchg
xor
inc
sbb
(bad)
jmp
xor
inc
cmp
mov
sbb
loopne
pop
mov
cli
push
lods
jo
int3
push
rcr
adc
int3
xchg
mov
mov
test
jmp
mov
cmp
rcl
cwde
mov
mov
aad
xor
mov
movs
cli
adc
inc
pop
popf
sbb
jge
adc
aaa
sub
push
push
out
jl
inc
xchg
add
and
loopne
jge
into
or
out
or
scas
jge
addr16
jecxz
into
pop
mov
jp
push
movups
mov
mov
sub
xor
mov
pop
jg
cmp
imul
push
pop
jnp
xchg
cmp
popf
sar
jbe
dec
adc
adc
xchg
daa
pusha
pop
lahf
rol
lahf
stos
cmc
outs
jecxz
xor
outs
(bad)
stos
inc
loopne
scas
jmp
jbe
(bad)
(bad)
lods
(bad)
cmp
or
push
adc
in
mov
pop
cmps
out
retf
mov
in
div
xchg
ins
jmp
or
cmc
and
fwait
adc
in
jle
shr
pop
ret
out
xor
adc
dec
(bad)
cmc
xchg
ret
out
add
das
(bad)
sahf
lahf
pusha
aad
sub
ins
and
cmp
pop
sar
sbb
push
mov
jl
mov
rcr
mov
fmul
cmps
pop
lods
sahf
icebp
inc
cmp
inc
daa
cmp
retf
mov
add
and
sub
and
mov
xchg
retf
add
cs
cmps
mov
mov
or
mov
adc
adc
nop
aam
inc
mov
mov
jae
or
jg
call
addr16
inc
push
stc
repz
ret
xchg
adc
sub
leave
aad
jne
popa
jmp
popf
and
push
or
fadd
push
retf
es
dec
lock
fs
jl
inc
inc
pushf
cmp
ja
in
das
mov
sbb
jle
jne
scas
cli
movs
sub
push
movs
jo
test
in
mov
fstp
aas
inc
dec
jmp
and
push
loopne
data16
push
in
fs
sbb
mov
mov
and
xchg
mov
iret
cs
jmp
loope
inc
repnz
cmp
aas
push
les
add
push
jp
pop
aad
xlat
loope
jns
jno
xor
adc
(bad)
bound
jbe
js
cmp
call
cmp
dec
fxch
bnd
ins
and
mov
push
adc
cmc
dec
mov
and
aaa
sti
sti
mov
fwait
push
loope
test
cmp
mov
jl
xor
fbld
dec
sti
xchg
scas
repz
fs
fisttp
enter
hlt
jo
or
mov
dec
retf
sbb
ror
and
xor
lahf
dec
pop
mov
test
mov
mov
pusha
enter
cmp
inc
cmp
and
dec
es
out
(bad)
les
mov
fwait
stos
adc
(bad)
in
inc
int
or
ins
xor
loope
add
pop
dec
pushf
inc
call
loopne
pop
mov
sub
push
movs
fimul
mov
aas
loope
xchg
sbb
adc
sub
fsub
xor
sub
pop
js
sar
mov
addr16
xchg
push
sub
outs
mov
dec
or
mov
adc
cdq
add
or
sbb
adc
mov
mov
cmps
push
cmp
mov
mov
cmp
push
mov
jns
vphaddbd
iret
ret
(bad)
jg
inc
int3
ins
in
sub
mov
sub
add
aaa
adc
add
sbb
in
xor
in
push
cmp
ret
xor
mov
out
mov
test
in
cmps
xchg
in
fs
call
rcr
ret
dec
out
ret
mov
retf
rol
cmp
outs
fucomi
cmp
mov
dec
test
call
pop
call
and
xchg
sbb
mov
out
fsubp
xor
(bad)
sbb
aas
ficomp
loopne
adc
sub
cwde
sub
data16
inc
scas
mov
lahf
in
sub
add
shl
adc
in
mov
adc
push
test
mov
mov
loop
lock
mov
cmp
idiv
idiv
test
lds
cmp
es
or
mul
dec
push
outs
add
(bad)
and
sbb
scas
iret
push
push
ficom
jl
pop
shr
mov
in
dec
sbb
jbe
pop
inc
sbb
pop
cs
out
les
adc
jg
mov
pop
sub
mov
daa
jne
xchg
fs
pop
push
cli
ja
mov
add
xor
mov
cld
adc
or
cwde
fild
in
cmp
loope
mov
push
inc
imul
leave
lds
pop
cdq
push
and
addr16
(bad)
pop
call
stos
jle
xor
jp
call
mov
in
ins
sbb
dec
aam
add
mov
jnp
addr16
test
stc
add
adc
cmp
ret
sub
push
and
fidivr
ficomp
pushf
scas
loope
mov
(bad)
xchg
xor
fist
lock
hlt
push
(bad)
jae
in
stos
add
fisub
mov
jecxz
sbb
ret
xchg
pop
cmp
xchg
cmp
pop
ja
or
icebp
(bad)
sbb
popa
fdivp
retf
(bad)
das
xor
pop
loopne
jmp
or
js
fwait
repnz
stc
stos
pop
xchg
pop
lds
jge
xchg
jae
lock
stos
lea
daa
pop
cmp
dec
(bad)
stos
lods
xor
push
xlat
or
and
dec
nop
clc
aaa
iret
dec
cmc
faddp
fs
inc
ds
ins
xchg
mov
repnz
jnp
pop
and
xchg
push
sbb
ins
int3
(bad)
out
sbb
xchg
push
out
mov
push
pop
push
lock
(bad)
jle
rcr
mov
(bad)
les
dec
mov
out
mov
mov
out
mov
aad
aas
(bad)
sub
imul
sbb
inc
sbb
cld
pop
std
ins
mov
cmp
sbb
ret
ss
inc
xor
add
fild
jo
sbb
push
dec
adc
adc
inc
ds
mov
lahf
pop
add
mov
ret
pop
mov
adc
and
and
fld
cmp
adc
push
test
sbb
xchg
jo
cs
mov
and
adc
out
jmp
cmp
pop
popa
int
pop
and
jge
xchg
fs
enter
mov
mov
in
gs
pop
push
pop
fld
icebp
cmp
in
push
jo
adc
push
sbb
cmp
pop
hlt
ss
ja
(bad)
dec
or
push
pop
std
nop
and
(bad)
sbb
dec
popa
test
in
hlt
lahf
(bad)
stos
pusha
mov
add
popf
clc
ja
or
stos
into
and
add
cmps
pusha
dec
ret
stc
adc
sub
pop
push
xchg
test
(bad)
xchg
das
je
sub
fisubr
xchg
ins
addr16
pop
push
stos
hlt
jp
imul
mov
mov
mov
fnstsw
neg
dec
out
mov
xor
inc
cdq
test
mov
dec
or
outs
xchg
dec
data16
adc
cli
cmp
sub
xor
dec
shl
push
lods
(bad)
sub
lods
lods
inc
push
and
sti
mov
iret
ja
shr
icebp
jge
mov
fsub
test
call
fist
sahf
sub
and
mov
int
cdq
lahf
addr16
adc
cmp
lods
jge
pop
cwde
mov
push
(bad)
arpl
xlat
inc
pop
clc
push
jmp
pop
xchg
fidivr
mov
xor
mov
add
pop
jno
aad
hlt
mov
xor
adc
retf
(bad)
test
test
scas
cmc
test
add
vminpd
in
les
out
fs
mov
rcl
sbb
aas
jno
stos
jecxz
retf
std
fsubr
mov
popa
xchg
dec
pop
add
add
or
xor
jl
pop
scas
sbb
jae
jb
add
fidivr
push
mov
sahf
xchg
out
and
xchg
ficom
sub
jp
addr16
data16
mov
sub
dec
pop
out
jnp
call
and
ss
push
cmps
pop
cmp
mov
retf
call
jge
sti
sub
or
mov
(bad)
mov
cmp
aam
xlat
sbb
inc
push
cmps
pop
adc
fwait
retf
fidivr
xor
repnz
ds
in
je
push
mov
sbb
enter
pop
inc
jl
mov
and
mov
xor
xchg
jno
lock
add
js
mov
xlat
nop
sbb
sbb
mov
add
loopne
mov
mov
mov
jns
xor
loop
add
or
test
cmp
sti
mov
push
jg
xchg
fnstsw
lock
xchg
or
jno
scas
test
xor
mov
test
lahf
mov
adc
movs
mov
arpl
jae
jae
dec
inc
xchg
lea
ror
movs
sub
jl
pop
fdivr
idiv
out
or
test
jno
pop
mov
inc
mov
mov
xchg
cli
and
inc
sub
inc
and
(bad)
mov
mov
fbstp
mov
sti
in
and
inc
ja
adc
aaa
leave
into
(bad)
fnstenv
jmp
popa
retf
jecxz
jno
outs
cmp
mov
(bad)
jnp
sub
xor
push
stc
pop
pcmpeqw
jmp
mov
xchg
mov
add
cmp
pusha
mov
ror
mov
repz
sub
outs
add
ins
xor
shl
jnp
fsub
shl
mov
adc
rol
mov
cwde
adc
iret
sbb
cmp
ins
inc
mov
push
cmps
loope
push
cli
pop
inc
retf
sbb
and
into
cmps
(bad)
sbb
imul
out
sub
bound
call
add
popa
inc
add
mov
rcl
ins
cld
xor
icebp
shl
movs
mov
jl
dec
pop
xor
xor
test
int
or
xor
pop
sbb
test
and
test
fdivr
xchg
daa
stos
clc
push
cmps
pop
sbb
sub
mov
imul
cmp
add
and
mov
retf
mov
sbb
scas
cbw
outs
int
add
addr16
aad
addr16
ret
adc
and
dec
dec
pushf
jae
stos
pop
rcl
rol
ss
adc
aad
inc
out
jns
stos
xor
clc
mov
iret
xchg
jmp
outs
and
scas
inc
movs
lock
xchg
add
nop
push
fisub
(bad)
ins
fadd
adc
pop
lods
push
and
xlat
call
adc
cdq
mov
cdq
int
rcl
jmp
xor
aad
push
ret
xchg
xor
outs
pop
in
fcom
(bad)
sub
push
repnz
pop
nop
sub
(bad)
pushf
sbb
xor
sub
mov
pop
sub
in
lds
call
outs
inc
jmp
imul
out
mov
aaa
loopne
add
jg
fild
pop
pop
mov
inc
icebp
out
mov
inc
neg
sbb
dec
jne
jmp
cmp
(bad)
mov
jmp
adc
push
and
addr16
(bad)
ins
pusha
shl
ins
shl
call
pop
into
jo
inc
scas
std
mov
mov
and
scas
fisubr
cmp
test
mov
seta
loope
mov
jg
pop
cmp
xor
pop
vmovq
lods
mov
adc
fs
sbb
xor
pop
sub
int3
ficom
dec
push
xchg
inc
jle
lods
mov
iret
dec
(bad)
or
ins
push
jecxz
adc
jl
sahf
fldenv
mov
mov
add
pushf
sub
lahf
push
mov
out
out
mov
push
xor
sub
(bad)
adc
out
shl
stc
fwait
loop
dec
iret
jmp
scas
faddp
cmp
shl
lds
mov
mov
stos
sub
aaa
adc
retf
push
mov
scas
mov
(bad)
xchg
inc
or
in
(bad)
push
inc
int3
outs
xchg
push
inc
mov
dec
xlat
cmps
cmps
xchg
je
mov
xchg
jge
cmp
mov
mov
add
pop
div
in
iret
ins
pop
xlat
aas
dec
fs
into
ret
rcl
sbb
call
mov
outs
je
mov
adc
and
stos
call
fmul
mov
cmp
jmp
pop
(bad)
outs
fld
aam
arpl
push
test
(bad)
fsubr
icebp
(bad)
xor
sbb
inc
jp
repnz
movs
fst
movs
in
cmp
cmp
aam
das
pop
mov
xchg
mov
aaa
dec
je
fcomp
and
xchg
daa
shl
mov
jl
adc
int
jp
push
xor
fsubr
pminsw
lods
mov
sar
cmp
push
leave
xchg
mov
fwait
fs
in
mov
dec
mov
test
pop
test
pop
sub
xchg
(bad)
mov
push
mov
or
cdq
mov
cmp
imul
and
mov
fistp
cmc
sub
gs
mov
pop
and
test
pushf
je
push
xchg
retf
mov
int
test
mov
mov
popa
fnsave
push
add
or
cmp
lock
push
std
imul
cmp
loopne
jmp
jg
xchg
cld
push
adc
or
in
adc
loop
std
cmp
jbe
jnp
pop
inc
out
pop
push
aam
dec
pop
inc
or
fild
push
cdq
imul
sbb
and
pop
loop
sub
jb
rcr
or
(bad)
xchg
fptan
push
jg
cmp
lods
fist
fist
adc
stos
aad
jne
xchg
in
imul
cdq
in
lea
add
sub
fst
mov
push
test
aam
mov
scas
push
inc
add
or
fsub
lahf
es
jne
dec
xor
or
push
test
add
jbe
std
(bad)
retf
nop
gs
adc
xor
lahf
cmps
jns
das
loope
sub
xor
add
mov
pushf
stos
adc
xchg
pop
add
mov
cdq
xlat
xchg
sub
inc
ds
and
pop
test
data16
xchg
test
cld
repz
push
ret
mov
pop
jmp
dec
xchg
pop
movs
loope
and
fsub
mov
aad
sbb
das
push
pushf
mov
or
ret
mov
sbb
push
bound
xor
dec
xlat
cmp
call
sub
(bad)
outs
mov
pop
xor
sbb
cli
mov
pushf
test
cwde
inc
dec
mov
dec
xchg
jnp
mov
push
rcl
mov
mov
sub
(bad)
outs
push
repnz
fidivr
xchg
fimul
xor
add
aas
loop
push
nop
(bad)
dec
out
add
not
mov
bound
pop
xor
je
js
xchg
mov
lock
lea
dec
(bad)
mov
cmp
jne
sub
xchg
push
pop
xchg
mov
imul
dec
push
adc
sar
imul
xor
mov
inc
cmc
sahf
stos
sbb
jle
ret
mov
xchg
ret
pop
mov
sub
pop
mov
fidivr
(bad)
jl
pusha
scas
test
inc
mov
mov
push
aad
test
xor
in
cmp
int3
cmp
ins
dec
hlt
jae
add
ret
call
adc
xor
mov
aaa
push
fsub
xor
out
sbb
jo
into
xchg
xchg
pop
mov
mov
mov
ss
call
cmc
mov
mov
sub
outs
inc
imul
shr
ret
das
dec
ficom
stos
jae
les
(bad)
and
sbb
pop
loop
pop
mov
in
pop
mov
mov
add
jno
in
jle
xchg
leave
stc
scas
mov
adc
leave
test
mov
mov
pop
cmc
jmp
shr
clc
mov
inc
sbb
call
icebp
dec
pop
repnz
cdq
add
aam
xchg
push
mov
setbe
sub
movs
int
mov
xchg
jo
sar
push
pop
mov
xchg
jmp
xchg
sub
stos
and
mov
out
ins
je
int
addr16
sub
sbb
xchg
imul
pop
mov
jecxz
mov
inc
dec
aaa
cmps
hlt
adc
inc
ror
pop
sub
jno
and
jmp
dec
nop
sub
cmp
addr16
lar
stc
fadd
jl
(bad)
sbb
ja
cmp
popa
xchg
inc
rcr
jmp
push
mov
sub
outs
mov
mov
scas
ret
lods
int3
cmp
jmp
int
sub
push
out
mov
icebp
stc
(bad)
mov
pop
ja
jno
sub
and
sub
and
sub
mov
push
xor
push
ret
shr
outs
push
inc
inc
mov
adc
xchg
cdq
add
test
sub
in
mov
mov
out
push
add
es
aaa
add
in
dec
popf
scas
sbb
cs
les
or
cdq
sbb
mov
lahf
mov
js
sbb
retf
pop
and
aad
shr
pop
adc
in
adc
cli
ja
pop
sbb
mov
mov
sbb
retf
loop
push
aam
jae
xchg
lahf
xchg
mov
mov
cmps
xor
mov
sub
clc
cdq
push
idiv
mov
fwait
mov
lea
or
mov
sti
push
sahf
mov
xchg
inc
mov
push
inc
lahf
pusha
fdivr
dec
sbb
mov
mov
sub
inc
fsubr
pushf
xor
push
rcl
and
adc
pop
add
fs
lods
popf
popa
(bad)
pop
push
sbb
leave
ret
cmps
int
sbb
xor
clc
xor
sbb
lods
repz
inc
adc
faddp
sar
pop
sbb
dec
ja
cmp
dec
adc
popf
xor
push
test
sbb
pushf
fs
test
mov
out
cmp
(bad)
dec
aad
enter
lahf
out
jl
sbb
fsubp
jge
int3
adc
and
daa
jne
sub
fcomp
repnz
mov
ret
jne
imul
cwde
stos
sub
rcl
dec
call
jbe
push
jg
push
outs
sbb
pop
pop
inc
sahf
adc
loope
cmps
or
sub
jns
in
cmp
jge
push
clc
sub
jl
xor
dec
fidiv
mov
outs
dec
ret
xor
inc
add
in
test
cmp
and
aad
or
xchg
sub
pop
pop
mov
adc
sbb
mov
cmp
push
aad
cmp
test
repnz
arpl
mov
xchg
pop
or
arpl
retf
loopne
shr
test
nop
and
jbe
sub
pop
jno
les
rcl
push
aaa
leave
jmp
fld
shl
pop
imul
out
xchg
stc
retf
pop
scas
ss
sub
je
scas
out
ret
sbb
add
pop
gs
add
add
mov
gs
mov
sbb
ins
cli
mov
add
add
mov
xchg
xchg
mov
ret
hlt
fcomp
xchg
sbb
addr16
xchg
sar
jae
ds
mov
jae
jnp
or
inc
mov
movs
mov
mov
jo
test
adc
fadd
lock
jp
inc
adc
pop
and
aam
and
imul
push
test
xchg
test
repnz
outs
cmp
cs
pop
(bad)
movs
call
jmp
dec
xchg
addr16
mov
ins
ds
inc
call
sub
sub
push
jg
adc
(bad)
popa
inc
dec
fnsave
shl
xor
int3
lds
(bad)
ins
pop
xor
and
fldcw
xchg
fadd
jmp
jns
cmp
and
rcr
sbb
fidivr
into
pusha
cmp
xor
stos
xor
pop
(bad)
mov
test
(bad)
test
icebp
fidivr
dec
inc
bound
popa
or
rcr
pop
cmp
movs
mov
mov
mov
sbb
cwde
cmp
sbb
xor
lahf
int3
push
pop
fs
sbb
or
push
and
xor
cmp
sti
fstp
jne
(bad)
xchg
or
add
or
sub
sbb
jo
std
jnp
add
jmp
xor
iret
dec
into
sar
dec
mov
out
xchg
leave
data16
cmp
jae
mov
mov
mov
popa
lods
xchg
or
int
pop
push
pushf
or
jp
retf
xchg
clc
jge
repz
pop
cmps
ret
add
xlat
and
shl
xchg
cmp
mov
retf
movs
jne
add
pop
add
add
xchg
retf
test
mov
xor
jae
cld
push
enter
ja
sub
(bad)
(bad)
push
jmp
mov
(bad)
out
dec
add
jne
sbb
ret
ins
leave
sbb
mov
inc
cwde
inc
popf
pop
fcomi
stc
data16
movs
lds
iret
xchg
jb
sbb
mov
mov
hlt
arpl
adc
outs
jp
in
adc
into
leave
dec
cld
mov
and
dec
sahf
cmp
stc
push
imul
shl
add
into
in
repz
test
js
mov
call
loopne
test
push
push
sub
xchg
pop
outs
push
(bad)
fild
ds
mov
mov
in
sahf
cmps
mov
jge
jmp
dec
cdq
std
mov
hlt
nop
jmp
pop
pop
add
sub
xlat
pop
sub
push
ret
call
(bad)
cmp
imul
xor
and
fsubr
sub
mov
fcom
fs
xchg
repz
xchg
mov
aaa
or
dec
arpl
sub
pushf
cs
xor
xchg
sbb
jo
push
aas
cmps
fwait
(bad)
repz
cmp
aad
imul
fld
loop
adc
out
sbb
(bad)
movs
sbb
ds
add
push
int
push
sbb
lahf
and
sbb
fadd
cmps
mov
push
mov
sbb
fldenv
rol
mov
sub
popf
ficomp
add
test
mov
mul
xchg
and
daa
jne
push
or
and
jl
sti
mov
jno
add
stc
in
div
les
ins
mov
push
bound
retf
or
jns
push
imul
inc
jb
lds
xor
(bad)
jno
pop
arpl
(bad)
repnz
(bad)
sub
mov
cmp
pusha
or
xor
inc
je
test
push
aam
cmp
stos
push
jne
or
xor
jae
inc
cmps
stos
iret
pop
stos
mov
cs
fnstsw
and
enter
push
(bad)
int3
cmp
xchg
push
jae
(bad)
ins
fsubr
mov
mov
cmps
sbb
add
push
ins
cmps
inc
movs
inc
add
or
out
loopne
ret
push
clc
xor
mov
or
nop
adc
mov
mov
push
pop
xchg
cmp
inc
out
ror
addr16
fdiv
std
mov
inc
xor
(bad)
inc
pop
lods
push
dec
movs
cli
lock
out
or
push
cs
xor
jns
ds
retf
stc
pop
mov
das
js
xor
add
xchg
and
nop
sbb
sub
inc
aam
(bad)
retf
mov
inc
and
xlat
push
push
(bad)
nop
mov
inc
xor
mov
nop
xchg
out
xor
xor
cmp
add
movs
enter
sub
test
dec
call
enter
dec
fdivr
mov
push
jp
retf
cmps
sub
(bad)
mov
(bad)
xchg
add
std
jmp
int3
mov
pop
sub
aad
and
out
fist
pop
call
out
iret
xchg
mov
imul
movs
into
adc
xchg
hlt
fidiv
movs
ins
xchg
sbb
fistp
sub
pop
retf
(bad)
dec
mov
jae
movs
jp
and
rol
and
pusha
cmp
scas
or
data16
pop
dec
cmc
(bad)
or
shr
in
fsubrp
retf
sub
sub
lods
push
int3
mov
cmp
movs
outs
retf
or
mov
out
loope
loope
movs
xor
js
mov
jle
cmp
rcl
repz
lahf
stos
jmp
leave
leave
loopne
xchg
sbb
inc
inc
lods
fwait
dec
test
pushf
pop
outs
rol
add
rcl
xor
mov
or
inc
sub
or
dec
sub
inc
data16
fwait
jno
loope
adc
test
and
int
dec
outs
mov
pop
inc
mov
jge
sub
or
aam
or
retf
mov
in
call
call
jne
shl
mov
mov
cmc
popa
lock
xchg
and
cmovg
push
dec
ffree
mov
adc
xor
loope
loope
stos
and
(bad)
jl
mov
in
mov
gs
test
push
ja
add
clc
jns
mov
fs
pop
stos
ret
mov
ror
(bad)
not
jp
pop
int3
xor
mov
cmp
push
jg
fwait
jo
xor
lea
sbb
imul
jge
out
or
adc
mov
jmp
lods
pop
ins
ja
mov
mov
pop
repnz
pop
push
lds
into
and
imul
rcl
inc
test
and
adc
shr
mov
dec
gs
icebp
dec
pusha
sub
pop
adc
fs
mov
cmps
clc
(bad)
(bad)
sub
cdq
stos
fimul
call
imul
dec
xchg
imul
cwde
push
push
fwait
out
push
push
inc
iret
imul
shl
push
push
inc
inc
popa
cmc
cwde
imul
mov
ins
arpl
xchg
sub
sbb
sti
and
push
shl
and
imul
jmp
lahf
mov
and
xchg
jg
sbb
aad
mov
cmp
adc
nop
jl
push
push
pop
out
hlt
or
sub
out
popf
cmp
sbb
and
cmp
cmp
sbb
mov
lea
fnsave
cmp
stc
sbb
cwde
xor
add
int
pop
lea
outs
xor
cmp
nop
retf
aam
pop
add
ds
leave
sub
dec
enter
xchg
push
lahf
pop
sbb
or
scas
pop
cmps
xchg
add
inc
shl
int
fcom
aam
jp
sbb
out
in
inc
dec
and
xchg
jp
stos
pop
movs
sar
mov
pop
xlat
jne
jmp
sbb
sbb
shr
mov
sub
fsubr
xchg
or
(bad)
iret
mov
add
add
es
into
cs
outs
cli
push
push
mov
mov
enter
stc
cli
jp
imul
movs
or
lock
cld
sbb
add
mov
fwait
popa
and
pop
push
and
push
mov
or
xchg
repnz
dec
inc
push
xchg
cmc
retf
pop
shl
sbb
jnp
mov
mov
out
out
ret
cld
aaa
popa
das
(bad)
retf
add
sbb
loop
test
out
shl
pop
sbb
mov
and
push
data16
pop
add
(bad)
xor
sbb
cmp
inc
pop
and
jbe
scas
fcom
pop
push
adc
add
call
ins
cmp
fmul
cmps
jle
stc
out
dec
cmp
or
aas
cvttps2pi
bound
inc
jle
xor
int
mov
in
xor
pop
xchg
std
and
stos
sahf
dec
inc
enter
mov
stos
sbb
dec
cmp
imul
pop
lea
mov
shl
(bad)
mov
cmp
pop
ins
test
ins
mov
je
sub
popf
jmp
jl
pop
sub
cmps
nop
and
test
stc
mov
add
sbb
or
add
jecxz
imul
mov
fndisi(8087
jne
call
sbb
jns
jp
imul
pop
inc
fucomip
lods
or
jle
into
sbb
dec
mov
add
mov
mov
fist
xor
adc
cmps
mov
jge
shl
cmp
cmp
fs
dec
out
imul
push
cli
and
in
ror
jbe
inc
inc
and
das
stos
popf
inc
fldcw
mov
mov
out
dec
in
mov
fs
fisubr
mov
cs
lahf
fwait
xchg
mov
fcomp
mov
jbe
dec
sbb
inc
push
adc
enter
inc
ja
dec
dec
dec
test
outs
gs
shl
repnz
into
movs
xchg
pop
mov
sbb
repnz
push
into
cmp
les
movs
mov
jo
jo
or
or
iret
push
pop
add
jle
(bad)
mov
xchg
mov
xchg
in
mov
clc
ret
sbb
pop
jbe
xor
out
into
ja
xor
test
adc
pop
(bad)
inc
into
adc
pop
sar
cmp
inc
aad
fs
cwde
sbb
push
add
dec
les
into
or
shr
aam
arpl
cmc
mov
pop
pop
and
xchg
adc
and
mov
outs
push
in
mov
or
dec
fwait
jbe
xchg
add
popf
add
inc
sbb
or
fucomi
ror
xchg
clc
arpl
and
shr
mov
rol
lods
adc
movs
shl
repnz
sub
cmc
sbb
in
mov
out
xchg
mov
fcomp
push
scas
loop
cmp
and
dec
or
cli
or
dec
fs
in
popf
jo
inc
push
pop
jbe
movs
ret
call
inc
adc
pop
ret
jmp
dec
imul
jp
xor
les
or
cs
dec
cli
xchg
leave
push
xor
mov
es
int
or
fwait
pop
test
pop
vmovupd
cmp
dec
outs
or
shl
in
rcr
sub
pop
and
enter
cmp
cmp
es
jns
push
lock
add
mov
jns
cmp
mov
push
adc
loopne
inc
xchg
shl
pushf
aaa
fsubp
jno
repnz
movs
dec
inc
pushf
or
xor
sbb
push
repz
pop
movs
fst
adc
cld
(bad)
xor
xchg
sti
adc
std
pop
push
xor
aad
icebp
hlt
(bad)
jne
jge
mov
dec
fnsave
xlat
nop
sub
mov
in
add
xor
pusha
iret
push
xor
and
cmp
xchg
aas
repnz
xor
iret
stc
retf
cmp
pop
mov
mov
imul
xchg
lds
cmp
fucomi
or
neg
loop
cmp
mov
cmp
adc
clc
adc
mov
(bad)
ret
sbb
stos
int3
call
cmp
xchg
loope
jns
nop
test
jns
mov
adc
add
cs
das
repz
aam
mov
jl
pop
xchg
(bad)
mov
xor
shr
inc
scas
(bad)
ficomp
ret
add
(bad)
call
sbb
scas
popa
ins
std
icebp
and
xchg
or
ret
jp
cmc
(bad)
imul
test
and
mov
push
sub
out
nop
mov
iret
int3
test
jecxz
and
sub
js
nop
movs
aas
push
outs
cmp
adc
sbb
loope
aam
mov
and
sar
test
xchg
retf
pop
xor
or
jle
enter
adc
sbb
cld
and
jns
xchg
sbb
retf
sbb
pop
cmp
je
les
pushf
ds
int
jge
movs
icebp
je
clc
xchg
test
(bad)
mov
leave
jg
add
or
jo
lock
cdq
mov
mov
xor
leave
xchg
adc
loopne
in
pop
push
ins
hlt
popf
jbe
out
in
mov
rcr
xchg
jp
add
sbb
arpl
mov
out
xchg
jbe
test
pop
jb
shl
cmc
and
jl
push
mov
push
push
inc
fmul
inc
mov
xchg
mov
cmps
add
movs
mov
loopne
and
inc
in
fisubr
adc
and
adc
dec
out
fdiv
ja
repnz
add
mov
call
mov
push
push
loope
xchg
jl
and
scas
popa
(bad)
shr
and
out
jb
jmp
xchg
imul
push
popf
cdq
add
pop
sub
mov
adc
mov
cmc
pop
sahf
pop
push
imul
lahf
aas
scas
movs
xchg
pusha
mov
jecxz
sbb
add
add
mov
(bad)
dec
push
sahf
jo
cmp
scas
adc
js
int3
mov
pminub
xor
gs
stos
sbb
stos
std
dec
push
jbe
cmp
pop
int3
sahf
fdiv
ror
xchg
inc
(bad)
icebp
stos
sbb
pop
ins
xchg
sbb
aas
add
fst
fidivr
imul
push
fmul
dec
jp
pop
xor
clc
sub
push
outs
(bad)
or
sti
xor
lods
push
adc
xchg
xor
jl
sahf
bswap
mov
pop
cld
add
sti
daa
xchg
cwde
sbb
dec
mov
hlt
sbb
into
out
(bad)
movs
mov
ss
data16
sub
aam
add
ja
movs
jmp
outs
pop
adc
xor
(bad)
sbb
xchg
dec
pop
hlt
adc
sti
jne
pop
mov
int
imul
cmp
(bad)
push
dec
les
mov
aad
add
sbb
nop
ror
xor
in
mov
ffreep
ror
cmp
and
bound
pop
adc
mov
retf
js
mov
adc
out
jmp
pop
(bad)
scas
sbb
pop
aad
adc
bound
into
mov
imul
inc
test
dec
push
loopne
in
(bad)
jb
push
lea
mov
jae
sbb
xchg
add
push
retf
push
jg
arpl
mov
jns
sahf
out
push
stos
adc
stos
lahf
enter
sub
jbe
mov
mov
leave
sbb
arpl
lea
les
inc
mov
mov
xchg
jno
cmps
or
icebp
retf
sbb
push
add
pop
mov
adc
cli
icebp
ja
xor
pop
push
inc
mov
outs
sub
nop
pop
mov
mov
or
out
imul
push
mov
sbb
int
dec
pushf
push
jmp
out
fst
repnz
pop
rcr
or
push
pop
leave
ins
(bad)
movs
and
pusha
pusha
test
cmps
cld
pop
(bad)
(bad)
das
dec
nop
dec
(bad)
xchg
adc
and
and
jmp
sub
pop
gs
add
movs
js
mov
rol
jnp
lahf
jno
repnz
jmp
mov
xor
pop
stos
(bad)
cwde
fdiv
push
mov
data16
ret
inc
ror
inc
add
sbb
or
pusha
adc
mov
cld
and
shl
add
jnp
cmps
test
js
add
push
ror
retf
dec
pop
into
xor
aad
adc
fwait
pop
ins
or
pusha
outs
leave
leave
and
adc
push
cdq
push
int
fmul
int
xchg
mov
xor
ror
mov
adc
shl
mov
mov
jmp
outs
xor
fs
mov
adc
jo
cmp
inc
repnz
jecxz
jb
and
jecxz
xor
and
jo
and
fistp
jne
adc
gs
les
gs
sbb
inc
adc
sub
mov
inc
lea
loope
into
pop
inc
mov
jno
jno
dec
adc
xor
dec
scas
loop
or
lds
or
outs
out
dec
(bad)
mov
pop
test
push
cmp
test
js
out
jns
inc
je
xlat
pop
or
int
mov
xor
or
je
add
in
les
mov
adc
or
popa
jne
int3
adc
xchg
repz
add
push
sbb
adc
inc
xchg
in
sub
jae
mov
fs
fidiv
sbb
and
scas
jns
or
ins
push
dec
shl
cdq
sti
mov
sub
cmp
xchg
sub
xchg
mov
pop
fcomp
sub
mov
fcmovnb
mov
outs
adc
xchg
mov
lods
or
mov
sub
ret
jmp
inc
or
mov
stos
lods
mov
mov
int
int3
ss
icebp
clc
mov
outs
sub
inc
ficomp
movs
pop
imul
pop
jp
aaa
push
pop
add
(bad)
dec
cmp
add
xchg
pop
shr
shl
mov
sub
mov
cwde
pop
lods
jge
xchg
in
mov
mov
fst
and
mov
push
and
repnz
retf
inc
jne
pusha
push
xlat
outs
and
into
mov
push
mov
out
xlat
fs
in
xor
adc
adc
mov
push
jbe
test
and
adc
sbb
push
fcom
std
inc
mov
inc
int
pop
cmps
cli
xchg
mov
lock
cmp
(bad)
popa
push
icebp
(bad)
push
and
(bad)
fimul
mov
xchg
add
xor
xchg
cmps
rol
(bad)
popa
xchg
or
sub
add
mov
mov
adc
and
mov
in
rol
xor
dec
sub
jne
add
adc
ret
mov
cmp
inc
jnp
push
dec
sub
and
push
or
cwde
dec
and
lods
mov
movs
int
jnp
cmp
xchg
xor
xchg
ins
mov
mov
lods
and
imul
dec
adc
mov
push
fsubr
(bad)
shl
mov
out
out
mov
or
mov
inc
sahf
inc
outs
pop
push
(bad)
mov
cmp
arpl
leave
inc
push
cwde
cmp
adc
jo
repz
dec
cwde
stc
fdiv
xor
push
les
mov
arpl
popa
fadd
in
sub
mov
push
dec
adc
push
pop
lea
inc
(bad)
test
cwde
adc
mov
cdq
ds
xor
ins
push
jle
cli
cld
pusha
cld
inc
push
pop
dec
repz
adc
(bad)
fnsave
outs
pop
in
xor
int3
popf
fistp
hlt
cmp
ss
js
push
(bad)
cdq
(bad)
loopne
push
popf
mov
shr
xlat
cs
ss
cmp
lds
ror
das
mov
xor
lods
cmp
dec
dec
scas
pop
pop
cmp
inc
gs
adc
mov
jnp
mov
inc
stc
cmp
xchg
(bad)
xchg
stc
adc
in
aad
jmp
pop
repnz
out
call
ja
adc
push
ins
sub
jb
and
xor
xor
push
inc
lahf
test
xor
mov
pop
lock
jnp
jmp
scas
fdivrp
outs
and
dec
add
arpl
popa
(bad)
jecxz
in
push
sbb
pop
xor
push
dec
loop
sahf
add
ins
mov
lods
mov
ins
iret
xchg
mov
lea
inc
ret
int
xor
out
(bad)
push
stos
(bad)
mov
sahf
adc
adc
pop
inc
cdq
pop
inc
mov
es
lea
sbb
inc
cmps
les
add
pop
push
or
retf
mov
test
mov
and
jp
and
pop
xor
xor
xor
xchg
sar
pop
jle
xor
sbb
push
or
sub
in
stos
push
retf
stc
imul
jl
inc
(bad)
test
jo
in
fld
out
mov
sbb
dec
idiv
lahf
adc
mov
adc
mov
sahf
gs
jns
xor
push
dec
pop
icebp
mov
pop
fcom
movs
sbb
add
xchg
adc
inc
mov
pop
mov
add
(bad)
xchg
jmp
into
push
mov
pushf
add
movs
mov
xor
mov
lea
mov
loop
aam
xchg
cmp
xor
sub
stc
loopne
lahf
xor
sbb
sbb
jo
ror
cmp
cmp
leave
mov
push
and
sahf
repz
inc
pop
scas
dec
mov
mov
lds
fsubrp
and
xor
dec
jae
(bad)
pop
aam
add
ret
test
cmp
mov
cmp
xchg
hlt
outs
je
xchg
inc
jmp
mov
ins
ret
rcl
out
xchg
mov
int3
mov
or
jb
mov
xchg
dec
fwait
jle
mov
or
sub
mov
sbb
fdiv
cmp
jns
or
jmp
fcom
cmp
xchg
out
cmps
jl
pop
(bad)
sub
lods
loop
sub
leave
rol
int
adc
cmp
dec
bound
ret
cmps
pop
xor
popa
mov
xor
out
jnp
push
pop
hlt
or
jl
sub
mov
xchg
xor
mov
push
pop
push
rcr
cli
into
test
call
cld
shl
add
mov
push
pop
mov
(bad)
shl
xor
xchg
jg
mov
mov
and
or
into
cdq
test
idiv
repnz
test
or
jns
jno
pop
add
push
push
rcr
fdiv
jnp
lods
cld
leave
sub
aas
push
inc
mov
inc
cmp
push
scas
(bad)
jmp
push
(bad)
adc
test
dec
mov
inc
lahf
clc
push
movs
das
cmps
mov
jno
(bad)
int3
(bad)
adc
lds
mov
xchg
cmp
mov
sbb
test
repz
std
je
dec
xor
sbb
mov
add
in
xor
ins
pop
adc
lahf
and
call
scas
push
push
clc
enter
scas
mov
mov
xchg
aam
cmp
inc
cmp
sub
pop
cli
lea
fimul
lock
cmps
sbb
stc
inc
and
lahf
je
jno
dec
pusha
mov
(bad)
sub
aas
(bad)
inc
test
cmovle
mov
mov
adc
lahf
mov
xor
cld
jp
jle
js
adc
jns
cmp
sbb
pop
stos
xor
add
inc
cli
add
xchg
xor
fbstp
cmp
data16
lock
lock
neg
pop
enter
(bad)
cmps
jo
lea
imul
mov
pop
and
fidivr
sbb
test
lahf
icebp
pushf
in
mov
mov
jg
pop
push
sti
xchg
cs
in
push
imul
movs
sub
dec
fldenv
push
aaa
enter
call
pushf
sbb
leave
cmp
pop
or
sti
or
sbb
pop
ins
push
fwait
jno
imul
xor
test
jo
push
cmc
adc
out
lods
int3
not
pop
shr
push
daa
or
lods
add
mov
pop
cmp
mov
jg
jge
sbb
xor
add
or
jle
mov
test
add
jmp
xchg
std
into
aam
jge
loopne
pop
jmp
sbb
add
mov
lods
lea
mov
push
sbb
fdiv
xchg
fs
data16
pop
push
pushf
inc
cwde
sbb
fs
mov
dec
(bad)
idiv
aas
stc
fld
jae
or
jge
(bad)
rcl
or
sub
fucompp
sub
pop
imul
test
aam
sar
clc
xor
test
imul
add
xor
xchg
push
push
stc
push
xchg
sub
adc
push
lods
cmp
jl
mov
inc
test
mov
stos
or
call
cmps
(bad)
rcr
jnp
dec
push
jle
add
lods
arpl
xchg
int
repz
mov
push
js
pop
jno
pop
test
imul
add
(bad)
mov
push
pop
mov
scas
rcr
cmp
fbstp
xor
icebp
pop
mov
pop
shr
adc
mov
inc
pop
mov
rsqrtps
jmp
iret
sbb
mov
push
aam
sbb
xchg
dec
cmp
mov
test
xchg
mov
mov
pop
jmp
stc
lds
rcr
cdq
mov
arpl
inc
xor
pop
clc
pop
mov
pop
movs
and
pop
xor
and
loope
cwde
call
push
pop
mov
mov
and
ucomiss
pusha
aam
add
je
cld
or
inc
outs
xor
div
in
cmps
sbb
xor
and
mov
pmaxsw
fnstcw
shl
iret
and
jne
test
push
dec
loopne
je
(bad)
movs
mov
loopne
clc
(bad)
in
nop
call
loope
jnp
mov
cmps
std
movs
xor
jecxz
add
mov
les
call
add
es
aas
xchg
xchg
adc
scas
xor
inc
ds
dec
cli
cmp
or
les
jg
xchg
mov
fchs
push
aaa
movs
ret
test
cld
in
mov
fwait
xor
inc
jmp
add
in
iret
out
cdq
jg
cmp
mov
adc
popa
xchg
inc
aas
lds
mov
pop
retf
fistp
int
and
adc
pop
sysret
jne
outs
sub
mov
add
sub
jne
stc
shr
lds
fwait
popa
cwde
bound
pop
mul
adc
jp
mov
lods
jmp
lods
xchg
stos
sar
cs
push
push
(bad)
leave
mov
test
push
inc
fs
xchg
test
lock
(bad)
mov
out
cld
fldcw
jns
mov
xchg
sub
stc
fs
into
xor
and
pop
xchg
fisttp
aad
push
mov
mov
jns
hlt
pop
sub
xor
dec
movs
addr16
mov
sahf
inc
loope
(bad)
or
mov
jb
ss
inc
add
jg
cli
bound
movs
rol
xlat
es
inc
mov
add
cmps
dec
jae
fwait
stos
movs
pop
jne
scas
add
cmps
fist
sub
repz
mov
xlat
fsubr
das
lods
outs
inc
cmp
add
movs
xchg
into
les
cmc
push
outs
(bad)
jle
jg
idiv
inc
push
xchg
retf
pop
loope
imul
adc
repnz
xor
out
loope
int
cmps
movs
mov
xchg
push
add
jno
xor
xchg
inc
adc
add
iret
test
std
dec
es
pop
jne
pop
aaa
icebp
and
inc
push
pop
fiadd
icebp
xchg
cmp
xlat
or
pop
repz
xor
pop
dec
inc
ret
mov
sub
(bad)
add
fld
cmps
stos
cmp
out
mov
push
sbb
jns
mov
ja
jle
inc
cs
in
test
dec
sub
rcr
ret
pop
clc
(bad)
cdq
aaa
stos
pop
mov
aam
sbb
call
pushf
xchg
rcl
repnz
gs
mov
cmps
add
loopne
xor
push
out
std
adc
bound
(bad)
sub
stos
in
test
dec
xor
add
cmc
mov
sbb
loope
pop
jne
(bad)
lock
sub
repz
aaa
std
lea
loop
sub
xchg
das
mov
and
hlt
jge
loop
jb
sbb
sahf
mov
adc
cwde
dec
das
aas
dec
pushf
retf
jle
sbb
dec
(bad)
jge
pop
arpl
fiadd
cmp
(bad)
loop
data16
cs
in
xor
mov
xor
or
xlat
div
cdq
adc
xchg
es
fwait
out
fsub
fwait
xchg
mov
xor
int
(bad)
or
cli
stc
xchg
add
rcl
gs
and
pop
and
fbstp
xlat
popa
repnz
dec
ds
test
shl
test
lahf
jb
xor
ins
sbb
cmp
shr
enter
push
test
lds
add
lods
jns
repz
add
lahf
aaa
aaa
idiv
mov
cmp
and
mov
jns
xor
cmp
adc
enter
push
inc
dec
outs
jle
loop
js
mov
aas
xor
sub
pop
xor
fcmovu
mov
sbb
outs
pop
hlt
cli
into
jp
stc
push
out
xchg
ror
lock
ss
icebp
pop
adc
push
jmp
mov
outs
and
sbb
pushf
mov
in
movs
inc
loope
jg
add
leave
lds
xchg
retf
xchg
sub
mov
xor
jns
inc
mov
jb
mov
retf
xchg
or
cmp
pop
jg
test
cmp
icebp
or
sbb
(bad)
dec
aaa
lds
loope
cwde
push
push
adc
jnp
fwait
aam
mov
stos
mov
jo
mov
dec
cld
xchg
idiv
jae
sti
inc
push
lea
bound
dec
rol
mov
fisubr
mov
xchg
adc
xchg
or
or
mov
mov
stc
push
daa
xor
in
jmp
imul
in
fs
push
ret
pop
mov
lock
mov
jmp
call
mov
mov
retf
jge
sub
mov
add
(bad)
iret
movs
xchg
and
inc
rcl
scas
push
xor
adc
(bad)
in
in
push
stos
sbb
nop
pop
push
ds
(bad)
(bad)
mov
or
arpl
dec
stos
cmc
pop
inc
sbb
lds
dec
and
sbb
das
loop
int
gs
cmps
lock
push
jl
je
loopne
jecxz
dec
stos
lods
inc
les
sub
mov
cmc
push
and
das
lock
in
adc
pop
les
pop
jns
addr16
push
mov
inc
mov
xor
lea
and
jl
mov
sub
push
movs
jb
lahf
inc
jns
ret
aaa
test
inc
push
inc
loopne
in
ins
in
push
mov
nop
test
mov
loop
push
sti
and
lahf
sar
fild
sub
jbe
imul
scas
(bad)
sub
inc
sbb
mov
xor
push
xchg
mov
loope
loop
fnstsw
push
or
ud2
add
mov
(bad)
push
inc
stc
cli
repnz
mov
ins
jge
mov
dec
xor
daa
mov
loopne
aas
jnp
adc
js
cmp
add
pop
ficom
and
mov
or
in
xor
mov
sbb
xchg
mov
and
bound
sub
pusha
ror
jl
fstp
and
les
out
fisttp
iret
adc
pop
inc
int
mov
daa
popf
fst
pop
mov
adc
jl
movs
cs
or
lods
test
mul
inc
imul
lahf
push
and
inc
shl
repnz
in
cmp
retf
inc
mov
cmp
(bad)
clc
inc
xor
data16
cmp
repz
or
inc
and
cs
loopne
or
xor
push
mov
cli
xor
mov
and
and
jmp
mov
or
in
rol
scas
push
pop
loope
sub
xchg
stos
fs
adc
mov
fcmove
cmp
xor
xchg
lods
(bad)
stc
dec
retf
das
push
loop
mov
aas
in
and
cmp
ins
mov
fcomp
mov
dec
mov
fsub
add
shr
jnp
int3
push
cmps
cmp
repz
aaa
cmp
int3
aas
pop
mov
lahf
pop
sti
lods
out
jns
movs
mov
bound
dec
bound
scas
(bad)
aaa
cmp
stos
mov
imul
and
push
test
mov
int
mov
mov
sbb
xor
fisubr
frstor
ret
or
xchg
in
dec
movs
test
pop
ja
mov
cmp
jns
setb
sub
loopne
loop
std
stos
das
imul
call
adc
pop
enter
mul
adc
inc
mov
jno
hlt
iret
jg
ficom
mov
fisub
out
mov
cmps
or
cmovnp
sar
push
(bad)
add
fchs
and
adc
mov
jle
cmp
pop
and
push
retf
les
fisubr
pop
out
push
and
adc
leave
(bad)
jp
sub
scas
xor
xchg
cwde
sub
call
sbb
xor
iret
xchg
xor
icebp
(bad)
fs
repz
ret
add
or
push
lods
push
pop
push
cmps
fwait
mov
jg
sbb
js
jmp
pop
test
dec
mov
jl
fdivr
fist
cmp
cmp
mov
mov
add
fstp
mov
mov
mov
xchg
fdivr
lock
imul
jne
clc
stc
in
adc
mov
mov
lods
lahf
sub
mov
(bad)
mov
cwde
imul
sbb
mov
fld
sar
iret
jae
adc
ss
push
icebp
sub
dec
mov
inc
repnz
lods
sti
je
std
inc
nop
fdivr
fcom
pusha
das
sbb
hlt
sti
and
push
jbe
sar
iret
pop
pusha
shl
add
sbb
adc
cmp
fild
lock
cmp
je
mov
sbb
jmp
jp
hlt
(bad)
movs
cmc
nop
pop
and
aaa
cli
arpl
mov
aad
inc
add
fcomp
jle
jae
(bad)
fs
xchg
pop
pop
xchg
and
add
mov
mov
(bad)
xor
push
ret
pop
cmp
mov
loopne
adc
mov
mov
adc
test
cmps
fsubr
sub
jbe
sub
xchg
(bad)
cmp
cwde
adc
test
mov
repz
mov
mov
and
jbe
mov
aam
jmp
enter
rol
add
lods
outs
daa
xchg
loope
mov
dec
(bad)
je
scas
and
pusha
jmp
shl
or
lods
mov
mov
in
inc
ret
push
(bad)
loopne
fs
xchg
xor
pop
pop
ins
mov
pop
add
xchg
out
add
fs
mov
sti
inc
out
push
adc
jns
pop
int3
sub
dec
mov
test
or
pusha
inc
adc
daa
xor
in
int3
out
jmp
addr16
into
mov
xor
push
popf
fsubr
movs
mov
imul
mov
mov
xchg
cmp
ficom
xchg
dec
xchg
pop
pop
test
stos
xor
js
cmps
and
pop
and
xchg
aam
out
sub
add
or
scas
cs
pop
jg
popf
xor
dec
mov
xor
jl
xor
push
pop
daa
jbe
xchg
fld
sbb
call
mov
out
xchg
xchg
imul
xor
loopne
add
dec
add
pop
div
out
cmps
int
adc
loopne
data16
add
jp
cmc
(bad)
xor
nop
(bad)
cmc
push
push
loopne
js
rcl
fiadd
ret
inc
add
push
jge
jge
cs
xor
addr16
push
lds
(bad)
rcl
shl
sub
mov
dec
cmp
pop
jae
sub
das
cmps
shl
sbb
fld
cmp
sbb
jmp
mov
sbb
jmp
dec
retf
test
mov
loopne
xchg
ror
inc
fsub
pop
in
test
fistp
scas
inc
gs
mov
out
xor
(bad)
cmp
xchg
xor
inc
aad
jns
xlat
xchg
or
push
and
inc
nop
push
xchg
push
jo
das
mov
mov
jp
or
aad
aas
and
dec
sti
xor
scas
(bad)
stos
stc
(bad)
mov
pusha
dec
repz
cdq
mov
add
dec
leave
leave
push
les
ret
add
int
inc
frstor
cwde
push
mov
scas
mov
jnp
adc
dec
shr
(bad)
cld
jns
mov
push
mov
add
pop
popf
icebp
mov
int3
add
div
pop
loopne
xchg
mov
aam
frstor
mov
int3
push
dec
dec
inc
push
mov
outs
lea
outs
cmc
lods
fisub
scas
push
lock
mov
mov
lods
pusha
std
push
imul
cld
retf
mov
xor
push
and
add
sub
add
push
ror
and
je
sub
call
jb
xchg
inc
jb
repz
das
inc
push
jmp
add
adc
icebp
jnp
push
mov
stos
repnz
shr
xchg
lahf
jnp
fdivr
adc
push
push
retf
push
fwait
stos
repz
xchg
fwait
mov
pop
int
loop
test
add
ficomp
lds
adc
push
inc
sahf
jge
jo
jae
shl
dec
xchg
push
xchg
cmps
mov
ss
xor
sbb
test
cmp
out
lds
enter
loope
lahf
xchg
mov
mov
pop
xor
(bad)
stos
das
jg
pop
pop
ror
cmp
pop
cmp
xchg
xchg
sbb
ss
pop
inc
mov
sbb
mov
mov
mov
and
mov
aas
cwde
out
jnp
neg
dec
jmp
push
xchg
mov
and
int
fstp
leave
jno
sar
fs
int
mov
adc
push
xchg
push
scas
xor
jg
jb
aas
out
in
sbb
xchg
sub
(bad)
xchg
jp
dec
dec
mov
mov
xchg
and
inc
pop
sbb
and
mov
adc
sar
mov
adc
fs
loop
or
retf
dec
mov
mov
mov
out
ds
ret
mov
mov
inc
pop
ret
fistp
ds
in
sub
fidivr
int3
std
das
mov
daa
add
cld
stos
sbb
xor
jmp
in
pop
pushf
mov
dec
ins
inc
jo
jb
cs
mov
push
mov
push
or
pop
(bad)
jmp
sti
or
dec
mov
pop
adc
xchg
and
lea
or
dec
cmc
mov
sar
out
jne
(bad)
push
sbb
scas
ror
push
xor
pop
aas
fdiv
daa
mov
xchg
jmp
movs
shl
es
(bad)
movs
dec
ja
int3
push
call
(bad)
sbb
ja
xchg
adc
pop
fisub
dec
pop
out
jne
adc
nop
mov
dec
adc
pusha
xchg
add
test
pusha
fsubr
icebp
lods
inc
cli
rol
jg
aad
and
out
push
dec
test
loopne
(bad)
loopne
in
lods
pop
les
(bad)
fld
scas
dec
adc
imul
scas
in
(bad)
push
mov
or
mov
sbb
rol
dec
and
sbb
and
sbb
sbb
xchg
stos
(bad)
icebp
inc
out
gs
ja
xchg
mov
ret
mov
push
pop
mov
fs
fsubr
mov
popf
xchg
cmp
mov
rcl
das
adc
push
jnp
aam
add
fadd
arpl
cmp
xor
(bad)
ins
loopne
popf
mov
mov
jne
call
xchg
cli
sbb
daa
lock
fmul
adc
xor
xchg
jno
mov
push
jp
loope
js
cmps
mov
pop
and
(bad)
pusha
mov
adc
shl
or
addr16
int3
jno
es
sub
inc
mov
mov
fisttp
aas
xor
push
mov
xor
sub
cmps
push
adc
mov
int3
fsub
xchg
or
sub
mov
jno
stos
or
dec
cmp
test
mov
mov
pop
shl
and
call
mov
fucomip
stc
call
sub
sti
cmp
jne
adc
push
shl
nop
fwait
sub
inc
ret
popaw
jp
outs
dec
push
jmp
mov
(bad)
int3
imul
and
mov
cld
jno
fs
cli
sbb
lahf
imul
clc
push
sbb
pop
jge
push
inc
inc
ret
cmp
dec
push
pop
std
adc
push
inc
imul
mov
dec
adc
jno
fs
adc
test
pusha
push
adc
xor
push
mov
xor
fild
iret
stos
push
stos
iret
push
pop
mov
outs
mov
sub
sub
int3
out
mov
dec
adc
jb
add
jg
sbb
ja
movs
scas
pop
jno
(bad)
popf
xchg
call
inc
in
or
(bad)
(bad)
mov
jl
je
push
dec
das
add
dec
push
lock
mov
ja
or
icebp
or
sysret
pop
pop
pusha
ds
inc
leave
cdq
mov
mov
fild
popf
cmp
sub
not
stos
jnp
add
lods
jae
idiv
pop
cwde
shl
iret
scas
(bad)
into
xor
out
mov
test
and
cmp
xlat
pop
push
add
cmc
add
into
add
inc
icebp
mov
pop
call
inc
(bad)
(bad)
pusha
push
out
cmc
out
in
out
dec
push
xor
xor
fmul
adc
mov
ins
xchg
ins
lahf
pop
arpl
jmp
adc
inc
xchg
fild
pop
push
xchg
adc
cmp
xchg
pop
add
and
outs
aaa
loop
inc
js
xchg
sti
xchg
sbb
pop
xlat
pop
pop
out
xor
scas
call
(bad)
inc
call
sub
aaa
ss
imul
pushf
clc
xor
sub
sbb
mov
add
mov
sbb
and
push
mov
push
into
cmp
push
das
dec
ds
xchg
(bad)
pop
pop
into
pop
loop
icebp
mov
push
sub
sbb
dec
je
mov
stc
repz
rcl
mov
cld
add
push
imul
arpl
lock
inc
fimul
lods
sbb
aas
mov
sub
adc
dec
pop
pop
ja
dec
and
xor
push
mov
test
mov
mov
repz
mov
fisttp
nop
loop
push
mov
fs
lock
lods
popf
add
or
sub
xor
adc
movs
cdq
push
sub
lods
(bad)
jne
addr16
repnz
add
pop
or
or
mov
push
cld
fldenv
mov
jno
not
cmp
xchg
adc
aam
mov
loopne
mov
sahf
mov
fld
pop
pop
aaa
jae
in
popa
jmp
jb
cmp
sub
icebp
cmp
sub
outs
add
ret
sub
stos
sbb
lock
xchg
lock
popa
imul
xchg
push
jns
dec
xor
mov
dec
pop
repnz
or
mov
aas
scas
push
cmp
aad
in
sahf
cdq
pop
in
addr16
xchg
aad
int3
(bad)
sti
sbb
mov
mov
loopne
add
rcr
mov
dec
aad
lock
into
(bad)
in
cmp
(bad)
lods
in
sub
adc
mov
mov
dec
cld
aas
pop
fbld
icebp
ds
imul
mov
call
dec
dec
and
cmp
push
outs
sub
jns
mov
mov
leave
daa
ins
sbb
in
das
push
popa
and
dec
int
sbb
pop
out
push
push
ja
div
es
pop
dec
arpl
jle
fbld
mov
enter
fwait
pushf
xchg
and
or
jmp
jbe
popf
cmp
scas
xor
repnz
xor
dec
loope
jb
ja
jo
dec
out
mov
dec
dec
inc
jns
fimul
add
and
jo
and
callw
nop
dec
add
cmc
loope
shl
daa
loope
icebp
jbe
(bad)
(bad)
ins
daa
inc
sbb
mov
stc
loop
inc
push
pop
xchg
ret
cmp
xor
mov
mov
lahf
sub
enter
mov
movs
es
test
lods
push
sysexit
rcl
inc
movs
push
mov
sbb
dec
adc
cmp
cmp
push
movs
mov
mov
popa
mov
ds
imul
inc
inc
jbe
mov
sahf
lods
in
and
shr
sbb
repz
push
es
inc
ins
arpl
retf
mov
or
inc
push
sub
xor
or
inc
push
lds
popa
ret
inc
and
arpl
mov
jmp
jns
dec
(bad)
(bad)
test
cmp
loop
sbb
ret
lods
data16
out
das
jmp
(bad)
mov
in
addr16
inc
pop
sbb
push
pop
sbb
not
xor
fild
inc
cmc
loopne
pop
sub
or
(bad)
push
repnz
cs
mov
mov
arpl
dec
(bad)
bound
push
test
fs
sbb
es
mov
pusha
jmp
sbb
add
sbb
sbb
mov
sub
cmp
sub
and
cmp
sub
outs
cmp
scas
pop
leave
add
add
push
in
push
pop
les
xchg
pop
xchg
(bad)
sub
sbb
dec
retf
gs
ins
pop
jne
retf
mov
add
adc
pop
mov
mov
jmp
outs
lods
daa
in
cmp
xchg
aas
das
(bad)
jno
stc
(bad)
rcr
fstp
cmp
cmp
push
inc
adc
mov
sbb
push
adc
and
mov
sub
cdq
mov
cli
jmp
mov
pop
into
out
sub
jo
test
push
xchg
mov
out
fs
cs
jne
mov
pop
inc
arpl
jbe
add
mov
mov
loop
movs
sahf
popa
xor
pop
or
xor
test
fdiv
jmp
(bad)
mov
movs
cmp
sub
xchg
in
mov
or
mov
cmc
mov
in
xchg
cmp
mov
xchg
and
pop
xor
loope
ror
mov
out
mov
push
in
mov
fcomp
mov
popf
enter
dec
je
push
(bad)
icebp
pop
arpl
or
scas
stos
push
cmp
aad
mov
popf
cmc
out
mov
cmp
shl
leave
xor
or
sbb
ret
push
cmc
xchg
aad
test
aas
xor
aaa
mov
mov
xchg
inc
add
repnz
mov
repz
xor
fs
mov
pushf
loope
sahf
daa
mov
jmp
inc
push
adc
popa
inc
(bad)
js
inc
push
inc
push
(bad)
(bad)
test
(bad)
sbb
jle
shr
movs
or
icebp
das
sbb
sub
add
retf
push
ss
in
jge
xchg
sahf
mov
sahf
sahf
mov
mov
scas
mov
and
mov
xor
ds
js
test
cmp
add
fisub
test
cmps
pop
push
sub
add
inc
mov
loop
addr16
inc
das
imul
stos
inc
(bad)
lock
int
movs
xor
lock
test
ret
cmc
push
cmp
(bad)
pop
imul
popf
push
inc
rol
xchg
sti
and
cmp
mov
and
adc
in
es
or
arpl
or
js
fadd
ins
sti
sahf
inc
sbb
jno
call
int3
ss
add
add
out
cmps
adc
push
neg
or
mov
popa
shr
pusha
lods
enter
xor
out
push
je
sub
inc
push
jmp
rcl
lods
dec
adc
aam
mov
bound
add
add
in
jne
hlt
js
mov
cmp
test
sub
add
mov
jecxz
(bad)
fst
mov
ror
arpl
movs
popa
dec
ds
test
add
push
ins
mov
into
shl
imul
dec
ret
int
and
jecxz
mov
out
cs
sub
xchg
pop
push
jmp
adc
pop
pop
shl
pushf
pop
mov
sub
fisub
cmp
push
mov
ret
mov
pushf
xor
jmp
xchg
jmp
dec
xchg
cwde
iret
xchg
jge
lock
pop
dec
push
push
cli
mov
popf
rcr
lods
stc
mov
rcl
fdiv
push
inc
dec
mov
out
adc
pop
retf
inc
inc
add
ret
ss
pop
(bad)
outs
out
push
adc
jmp
js
dec
shr
jns
daa
js
jecxz
or
loopne
std
les
les
xor
in
inc
out
cmps
ss
add
jne
lods
cmc
sahf
js
xor
mov
popf
stos
xor
mov
sti
frstor
sar
std
add
sar
mov
movs
cmp
jle
sub
scas
retf
push
mov
out
cwde
jae
js
(bad)
aas
mov
add
leave
addr16
or
push
jo
jp
mov
mov
xchg
or
push
adc
rcr
xchg
xchg
je
call
ds
sbb
mov
inc
adc
rcr
aas
mov
dec
push
shl
(bad)
and
cli
ret
xchg
jecxz
sbb
call
ins
(bad)
push
xor
(bad)
std
aaa
dec
stc
in
aas
mov
xor
sbb
dec
cli
iret
cmps
hlt
cmp
lea
les
dec
in
std
sbb
and
inc
cmp
test
fs
imul
fs
inc
xor
xor
mov
div
push
sub
scas
in
outs
and
das
das
hlt
stos
shl
sub
ins
sar
fld
dec
add
int3
retf
push
jne
add
xchg
pushf
or
adc
push
cmp
jbe
cli
xchg
or
pop
ja
(bad)
dec
test
stos
mov
push
push
sub
and
xchg
adc
or
in
std
sbb
in
cmp
mov
jmp
adc
sbb
xchg
push
mov
xchg
mov
ja
fnsave
or
les
push
imul
mov
retf
lds
ins
div
sbb
es
sti
or
inc
mov
aas
ret
cdq
mov
mov
sbb
clc
pusha
daa
dec
push
or
out
ret
mov
inc
add
and
ret
aaa
mov
xchg
mov
ins
out
pop
mov
test
cmp
add
mov
push
outs
sbb
pushf
pop
es
adc
push
call
(bad)
cs
and
mov
push
xchg
sub
push
popa
fst
cmp
aad
daa
mov
and
cmps
cli
cmps
inc
out
inc
xchg
xchg
pop
inc
mov
mov
fist
sub
mul
cmp
cmp
call
cmp
sub
adc
mov
mov
mov
cmps
sahf
xchg
xor
dec
cmp
std
add
xlat
das
jae
inc
sahf
dec
jnp
mov
mov
and
sbb
call
push
dec
test
xor
rol
fild
and
cdq
cwde
ficomp
jns
xchg
aas
lea
xchg
cwde
hlt
lahf
xchg
add
into
xor
pop
fidiv
and
jg
fwait
add
xchg
(bad)
cmp
fwait
mov
push
lock
test
jnp
shl
test
daa
mov
mov
std
pop
and
sub
sub
xchg
shl
mov
jmp
lock
cli
out
jne
fnstsw
dec
pop
loope
enter
push
in
xchg
adc
sub
cmp
and
ds
cmps
cdq
cmp
loope
movs
rol
popf
dec
jo
pop
sub
lods
retf
xchg
lahf
xchg
push
(bad)
pushf
aas
add
pop
(bad)
mov
clc
pop
xchg
dec
xchg
push
mov
mov
sbb
and
daa
xchg
pop
(bad)
mov
cmp
jno
add
mov
dec
enter
add
not
xchg
cmc
sbb
inc
push
mov
iret
mov
cld
addr16
jmp
jmp
adc
rcl
(bad)
add
dec
inc
mov
cwde
sub
push
mov
aas
dec
jp
mov
sub
repz
inc
adc
sub
sub
pop
ror
ds
adc
pop
les
pop
call
arpl
mov
and
gs
aam
addr16
jl
out
cli
mov
int3
jne
icebp
call
fsubr
jno
sub
sub
sub
push
ror
mov
stc
fnstcw
cli
mov
pop
adc
dec
(bad)
ficom
push
adc
icebp
sbb
sbb
imul
out
outs
(bad)
repz
dec
lock
inc
adc
jns
cmp
cmp
push
out
jae
cmp
ficom
ret
cmp
popa
stc
lods
cmps
rcr
shr
mov
mov
push
xor
xchg
addr16
retf
mov
ins
mov
fbstp
inc
push
push
in
ficomp
inc
movs
push
imul
push
stos
jo
sar
or
loop
or
enter
lahf
cmp
dec
and
push
add
mov
and
dec
jl
mov
ror
lods
sar
ror
xor
jbe
pop
fs
mov
jne
inc
xchg
push
pop
clc
mov
ja
in
pop
mov
sub
push
adc
xor
and
cmps
mov
mul
adc
sub
cmps
jcxz
cli
jns
and
push
rcl
xlat
jne
sahf
cmp
aas
hlt
dec
fdivrp
dec
sti
out
sub
push
pop
les
jne
int3
adc
adc
stos
ins
mov
lods
or
sub
lods
inc
repz
pop
dec
cmc
popf
imul
inc
cs
cmp
pop
mov
jle
cwde
mov
jo
call
push
shl
cdq
(bad)
or
scas
mov
mov
sbb
lods
shl
xchg
adc
xchg
ffree
ret
jns
rcr
pop
movs
pop
icebp
mov
call
shl
xchg
pop
stc
jge
cli
ds
repz
and
adc
mov
shr
mov
jno
inc
repz
mov
xchg
xchg
jg
iret
idiv
jnp
sub
nop
and
shl
inc
fldenv
push
hlt
cmp
sub
adc
movs
add
xor
sti
das
aas
mov
mov
mov
shr
pop
stos
aaa
sbb
test
inc
dec
in
jbe
add
or
lahf
xchg
ficomp
lods
mov
call
out
dec
cld
movs
pop
xchg
es
(bad)
aam
adc
xchg
sbb
pushf
pop
cmps
sahf
or
pop
sub
int3
push
pop
hlt
movs
push
mov
or
aad
into
ret
lock
cli
aam
sub
xlat
(bad)
rol
pop
sub
ins
pop
es
cli
xor
ja
mov
jp
div
(bad)
pop
jmp
mov
enter
add
or
ds
mov
mov
std
fld
xor
ret
gs
out
repz
cmp
imul
inc
loop
lock
add
mov
adc
popf
cmps
mov
movs
pop
(bad)
mov
daa
mov
mov
adc
jecxz
popa
inc
dec
sti
stos
pop
retf
stc
push
adc
dec
sbb
and
or
gs
test
loope
lods
(bad)
loopne
or
shl
cmp
std
dec
retf
daa
or
sub
xchg
test
xchg
test
les
add
in
jb
lds
push
repz
xor
mov
(bad)
int3
outs
dec
pop
mov
push
in
pop
xor
cwde
gs
stos
mov
je
add
imul
pop
pop
push
cmp
out
and
inc
sbb
imul
cwde
or
mov
js
(bad)
mov
adc
pop
sub
cdq
out
mov
aaa
mov
jle
cs
push
add
or
jo
dec
or
push
movs
inc
leave
call
fnclex
jle
lods
jo
mov
les
test
mov
cdq
ins
push
and
mov
xor
cs
pop
cmps
out
xchg
dec
sbb
sar
out
sar
mov
retf
xor
or
mov
or
pop
mov
or
jl
pop
xchg
mov
and
ss
mov
fisttp
push
adc
(bad)
push
adc
sub
call
pop
push
push
mov
hlt
cld
clc
xlat
adc
adc
fstp
pop
rcl
std
test
stc
aad
push
loopne
(bad)
call
and
pop
cmp
dec
sub
cli
(bad)
jg
call
dec
std
cmp
push
loop
mov
mov
mov
adc
out
popw
or
push
movs
push
fdivrp
mov
addr16
sub
movs
(bad)
mov
cmps
pop
fnstcw
out
and
stc
sub
add
cmp
(bad)
adc
mov
gs
(bad)
adc
mov
mov
pop
in
pop
and
mov
xor
xlat
dec
add
imul
adc
addr16
rcr
inc
mov
lods
es
mov
fiadd
test
ja
add
xchg
sbb
stc
stc
lds
pop
mov
mov
sub
cmp
imul
movs
div
or
daa
xor
shr
sub
inc
repnz
out
dec
sbb
pop
cli
sti
aad
jecxz
ins
push
push
(bad)
shl
(bad)
jp
rcl
jecxz
fidiv
outs
loop
pop
mov
ja
sahf
mov
bound
or
pop
lea
xchg
adc
jo
jmp
scas
dec
sub
shl
maskmovq
not
mov
sti
scas
push
or
mov
enter
les
dec
into
rdpmc
outs
and
stos
mov
rcl
(bad)
out
enter
sti
xor
push
and
mov
mov
inc
int3
popf
pop
mov
repz
enter
jge
stos
mov
loopne
(bad)
pop
mov
lahf
add
inc
mov
pop
scas
fwait
inc
pusha
and
enter
xchg
icebp
mov
sbb
in
add
xchg
test
mov
mov
fs
(bad)
das
mov
iret
daa
femms
mov
pop
in
xchg
or
cwde
pop
cld
add
or
inc
call
pop
fucomi
cmp
push
add
scas
cmp
jge
shl
(bad)
pop
into
pusha
add
hlt
fistp
in
cmp
ja
call
adc
mov
mov
scas
dec
push
pop
bound
mov
rol
push
xchg
mov
nop
mov
call
shr
or
mov
out
xchg
(bad)
push
mov
xor
adc
iret
cmps
push
inc
xlat
std
loope
push
mov
push
js
push
mov
mov
jb
ftst
fmul
xchg
dec
popa
das
mov
call
loope
jne
mov
outs
jno
int3
div
and
push
lahf
aas
data16
ja
fistp
stc
adc
jnp
ret
sub
mov
cmp
in
enter
enter
xchg
xlat
mov
test
fcmovnb
leave
ss
or
scas
dec
xor
cmp
push
popa
sbb
pop
aaa
out
bound
fs
cld
cli
lahf
imul
popf
test
std
in
adc
out
mov
adc
pop
fsub
cmc
call
dec
das
mov
mov
enter
lods
adc
xchg
push
loopne
jnp
jp
pop
dec
jne
pop
inc
jo
in
jecxz
adc
test
pushf
fsubp
ins
cmp
stc
into
cmp
sub
push
(bad)
(bad)
xlat
mov
ret
mov
xor
mov
push
adc
popf
push
sbb
test
popa
sub
jle
push
das
mov
dec
push
or
call
sbb
xor
test
jb
sub
test
pop
out
mov
cdq
pusha
div
nop
mov
jmp
xor
sub
lahf
fmulp
loope
mov
adc
fdivrp
xchg
inc
(bad)
fild
pop
in
pop
xchg
stc
mov
shr
(bad)
imul
adc
loopne
push
xchg
adc
pop
sti
cmc
jle
mov
pop
xchg
xor
(bad)
mov
adc
fld
lods
jecxz
das
outs
and
mov
fs
xchg
adc
mov
xlat
ret
and
jo
inc
inc
xchg
cld
neg
pop
sub
jnp
repnz
dec
fiadd
sahf
shl
inc
pop
sub
mov
jmp
fld
sbb
outs
stos
fwait
mov
pop
and
cmp
pop
ficomp
pop
push
out
pop
or
jno
pop
jmp
lods
jnp
sbb
or
adc
and
push
inc
mov
sbb
call
push
(bad)
or
les
mov
cli
aad
xor
jecxz
cdq
retf
xchg
(bad)
dec
in
shl
hlt
sbb
in
or
imul
fnstenv
jo
outs
sub
aam
adc
adc
push
pop
test
xchg
in
push
sbb
retf
int3
xchg
pop
jns
(bad)
out
leave
xor
fwait
jne
mov
stos
icebp
and
fstp
mov
sbb
push
ins
adc
xchg
sahf
test
dec
push
ret
sbb
lods
dec
ret
mov
fisub
inc
jp
rcr
dec
pop
add
pusha
cmp
out
ja
pop
push
mov
xchg
mov
out
stos
push
jbe
add
gs
inc
cmp
mov
push
push
push
push
js
sbb
mov
call
int
mov
pop
imul
jmp
mov
arpl
les
in
cs
rcl
mov
sub
mov
jbe
push
cmp
jg
call
imul
fwait
pop
push
mov
add
mov
test
hlt
ins
je
xchg
mov
addr16
sub
loop
ds
jp
pushf
mov
retf
inc
hlt
rcr
fnstcw
mov
std
mov
ret
push
icebp
push
and
int
or
(bad)
and
xchg
in
ins
mov
test
jmp
push
mov
mov
jo
pusha
fistp
shr
xchg
or
cwde
call
cld
mov
stos
pop
test
nop
xor
repnz
push
(bad)
cmp
inc
bound
scas
jns
mov
push
inc
adc
sbb
lahf
aas
ficom
imul
cmp
repnz
xlat
addr16
in
addr16
test
aaa
jno
xor
xchg
dec
xchg
mov
add
imul
jne
pusha
stos
lahf
rcr
xlat
ret
ret
retf
call
inc
pop
mov
xchg
ins
test
fisttp
stos
sub
mov
add
adc
pop
pop
in
pop
mov
mov
pop
pop
xchg
in
(bad)
and
pop
or
stc
inc
shl
adc
stos
imul
adc
je
or
(bad)
mov
cmc
push
outs
(bad)
test
or
scas
int
pushf
mov
lods
mov
sub
push
vmovd
sub
scas
fnstenv
out
and
loopne
test
mov
(bad)
movs
test
jo
leave
lea
jmp
ss
stc
call
and
(bad)
fimul
push
fucomp
xor
cmps
or
retf
(bad)
out
addr16
cli
xchg
daa
out
jae
call
imul
mov
jbe
test
cld
ja
pop
mov
cs
sub
or
loopne
in
sahf
mov
out
dec
popa
scas
loope
mov
or
sub
cmp
mov
mov
mov
test
nop
loop
loop
xchg
jp
ds
cmp
loope
or
(bad)
in
jmp
inc
sbb
mov
xchg
inc
cs
test
mov
lods
xchg
(bad)
jmp
aad
loop
add
test
shr
shl
jbe
sub
and
adc
fidivr
arpl
adc
xchg
sub
mov
mov
cdq
push
mov
in
stos
icebp
hlt
mov
cmp
pop
ret
stc
sub
xchg
lock
mov
xor
les
arpl
mov
sar
repnz
fnsave
adc
or
add
mov
and
daa
mov
stc
leave
inc
fisubr
cmp
(bad)
aas
shl
jge
inc
jb
jmp
ss
das
mov
mov
and
jp
and
adc
adc
xchg
sahf
aaa
ror
jns
adc
int3
xlat
test
mov
lods
xor
lods
iret
sahf
sbb
shr
(bad)
int3
mov
test
(bad)
sbb
in
push
mov
push
push
bound
jecxz
cmp
xor
test
popa
sub
mov
and
imul
mov
call
fwait
jmp
out
pop
in
xchg
mov
imul
and
inc
in
inc
xchg
in
sub
sub
cmp
fild
scas
cwde
mov
adc
mov
ja
ss
repz
sbb
lea
and
cmp
in
mov
or
push
shr
cmps
jnp
sbb
retf
ror
pop
mov
retf
push
pop
in
scas
sbb
out
dec
pop
jae
add
push
mov
test
jl
rcr
jl
mov
xchg
xor
aam
xchg
pusha
pop
dec
jmp
adc
xchg
and
add
aam
dec
xchg
push
sbb
repnz
fidivr
lods
inc
(bad)
je
pop
xchg
pop
or
jmp
cmp
dec
mov
sub
pop
out
mov
xchg
adc
out
cmps
mov
or
jno
mov
add
loopne
lea
(bad)
mov
xor
and
cmp
mov
inc
sahf
popf
icebp
sub
jmp
rol
inc
nop
and
xchg
sub
popf
(bad)
cmp
shr
pop
je
mov
(bad)
jne
pop
xchg
(bad)
rcl
sar
dec
repz
std
out
add
outs
or
rcr
(bad)
loopne
and
or
fimul
lods
aam
out
ss
jmp
mov
(bad)
jmp
and
push
push
cmps
iret
imul
test
push
mov
inc
mov
out
in
outs
mov
inc
mov
push
imul
and
jae
add
test
in
adc
pushf
cmp
inc
out
cmp
inc
test
mov
adc
pop
cli
pushf
xchg
shl
cmp
mov
lock
rcl
scas
mov
jno
mov
and
mov
inc
test
repz
inc
pop
jecxz
dec
adc
jge
fdivp
ins
mov
aas
addr16
cmp
ror
loop
and
add
inc
addr16
adc
and
push
cdq
sub
jo
sub
out
xchg
adc
jmp
jmp
mov
push
dec
xor
cmp
adc
retf
loope
test
adc
sbb
add
lea
add
xchg
ja
jbe
cwde
cmp
cmp
repnz
sub
stc
jno
rcl
mov
jmp
icebp
cmc
push
fwait
sub
xchg
rcl
cld
cmp
call
stos
ror
sbb
push
dec
cdq
ins
mov
or
cmp
fwait
call
cdq
fdiv
cmp
inc
cld
xchg
mov
leave
pop
xor
sub
jmp
ja
stos
mov
or
xor
fsubr
mov
cmp
jp
mov
(bad)
cdq
jg
sbb
lahf
sub
mov
push
sbb
daa
sbb
out
retf
into
or
xor
jmp
cs
lds
cmp
movs
in
adc
mov
fmul
dec
lods
inc
ins
pop
push
sub
adc
mov
ror
test
fcom
test
outs
mov
sar
out
pop
out
mov
xor
sbb
fadd
(bad)
dec
jns
cmp
aam
sub
mov
jnp
mov
xchg
enter
out
test
sub
div
or
enterw
sbb
fdivr
fist
add
mov
mov
test
idiv
or
outs
mov
jmp
add
lock
mov
(bad)
xchg
add
sub
jns
dec
jns
fnstenv
data16
ins
sbb
xchg
cmp
movs
dec
ficomp
imul
sub
rcl
iret
test
pop
sub
scas
dec
mov
int
cmp
xor
cmp
cmps
int
dec
pop
adc
setnp
movs
sahf
idiv
xchg
add
ss
or
or
mov
add
stc
dec
mov
adc
lock
sbb
ficomp
pop
pop
dec
sbb
mov
cmp
das
shr
jns
pop
sbb
push
je
lea
or
sub
cmp
repnz
pop
mov
fisttp
psubusw
lahf
cmp
shr
stc
jmp
xchg
lods
fld
mov
loope
mov
cmps
xor
ror
push
(bad)
pop
inc
pop
dec
clc
jbe
lods
test
jne
(bad)
cmc
dec
cmp
mov
stos
shr
mov
cmps
aam
call
std
ret
mov
sbb
ret
stos
mov
into
ficom
push
mov
mov
xor
sub
outs
pop
retf
retf
and
and
cmp
and
xchg
sub
pop
fidiv
and
sahf
sub
cmp
gs
fcmove
rcr
jle
add
jmp
out
cli
cmps
mov
aad
push
sbb
sub
pop
sub
mov
cmp
sub
movs
fistp
fistp
sbb
mov
xchg
sbb
push
jp
ret
push
icebp
arpl
jg
in
dec
or
mov
out
push
pop
mov
dec
stos
jnp
add
dec
ins
in
inc
leave
mov
test
lahf
sub
addr16
test
cs
nop
js
mov
inc
inc
test
int3
inc
popf
xchg
aas
ja
stos
mov
xchg
mov
out
int
call
pop
xor
adc
nop
push
out
sbb
stos
jecxz
or
sbb
pop
fnsetpm(287
ja
pop
pop
adc
lea
pop
sub
ja
push
pop
pusha
sub
mov
jo
mov
aas
or
sub
movs
add
test
inc
adc
xchg
outs
sbb
cmp
xor
cmps
mov
popa
mov
std
arpl
ret
jns
pop
rcl
pand
sbb
jecxz
inc
xchg
xor
mov
in
les
mov
cmps
jmp
xchg
je
mov
scas
daa
retf
xchg
sbb
xor
jbe
shr
mov
in
xor
inc
sbb
push
add
fiadd
jl
pop
jle
out
es
sbb
pop
push
dec
clc
cwde
jge
call
repnz
popf
jno
fcom
dec
loope
push
test
mov
leave
fidivr
jmp
leave
or
sub
jmp
xchg
and
aam
inc
lds
das
xchg
jns
cmp
ret
mov
mov
mov
jo
nop
jge
pop
es
sub
add
out
(bad)
and
sub
rcl
or
and
dec
(bad)
jg
test
inc
test
adc
pop
movs
arpl
mov
ss
std
xchg
mov
sub
stos
(bad)
shr
rcl
jmp
cmp
retf
pop
out
test
cmps
movs
sub
xchg
xchg
xlat
jbe
cld
loop
xchg
mov
addr16
pop
adc
jae
inc
add
fist
lods
daa
push
jmp
dec
xor
sti
xchg
jae
pushf
(bad)
shl
call
iret
jecxz
dec
xchg
outs
loop
pop
sbb
shl
repz
(bad)
xchg
cmp
jle
xlat
or
cmps
push
loop
or
jne
stos
sub
jne
loope
sbb
push
xor
add
adc
aam
cmp
test
pop
sub
jae
idiv
pushf
movs
push
or
cmp
fdivp
mov
and
fwait
mov
jb
adc
adc
xor
add
clc
out
(bad)
jmp
jp
push
cmps
sbb
xor
das
push
adc
dec
push
mov
push
or
jo
lds
out
loopne
je
adc
inc
xchg
sub
add
in
sbb
sbb
aas
and
daa
push
xchg
pusha
loopne
int
adc
dec
inc
or
mov
not
sbb
mov
scas
ss
pop
xchg
push
stos
outs
aaa
cmp
leave
push
xchg
test
fiadd
(bad)
out
pop
popf
xor
gs
(bad)
cld
cmp
jnp
adc
push
dec
test
sub
pop
ret
sar
movs
push
push
aam
scas
mov
loope
dec
out
shr
push
and
pop
loopne
(bad)
dec
inc
(bad)
sub
ss
xcrypt-ecb
cmps
dec
pusha
cmp
inc
mov
stc
jnp
fucomi
(bad)
test
out
js
adc
loopne
sar
int
sbb
movs
add
lea
sub
les
mov
fstp
mov
call
arpl
mov
loop
shl
sbb
aaa
xchg
lods
dec
imul
mov
and
jo
call
sub
mov
outs
ret
aad
sub
push
mov
inc
jg
xor
pop
mov
ret
scas
xchg
adc
call
mov
mov
push
mul
pusha
cli
out
into
add
jnp
push
sub
sub
dec
inc
mov
outs
arpl
inc
repnz
pop
test
int3
mov
adc
or
retf
rol
cmp
call
call
sar
mov
loopne
sar
push
das
mov
dec
xchg
push
in
retf
pop
adc
or
shl
clc
stos
sub
inc
arpl
cmp
and
fbstp
and
sti
fldenv
in
mov
inc
cmp
mov
inc
aad
xchg
gs
lahf
enter
jno
push
dec
jo
jae
fistp
mov
dec
jno
adc
pop
add
inc
mov
adc
and
(bad)
rcl
pusha
and
arpl
jbe
not
adc
push
add
shl
mov
data16
nop
fistp
je
mov
pop
sbb
adc
jmp
cli
icebp
mov
in
into
xchg
cmp
cmp
shr
mov
cmp
lods
inc
aaa
cli
movs
xlat
mov
test
pop
pushfw
cmps
(bad)
sysret
xor
fiadd
jne
fwait
int
mul
xor
xchg
add
clc
stos
inc
bswap
das
cmp
mov
aaa
pop
arpl
or
xor
popf
pushfw
(bad)
cs
ins
xchg
loope
or
cs
std
pushf
dec
aam
and
daa
inc
nop
sub
push
stos
daa
mov
mov
fwait
(bad)
lods
test
xor
lods
or
dec
xchg
ss
pop
js
and
mov
sub
pop
in
xchg
dec
cwde
cmc
mov
sub
mov
cmp
adc
push
inc
scas
int3
xor
mov
cmp
aas
mov
push
mov
mov
and
retf
ss
scas
test
les
punpckhwd
jo
out
popf
xchg
out
mov
sub
pop
xlat
pop
arpl
sti
data16
leave
and
imul
shl
mov
xchg
nop
adc
mov
shr
push
pusha
or
cmp
cmps
(bad)
mov
mov
adc
clc
aad
int3
sbb
mov
das
sbb
pushf
loopne
jbe
push
icebp
inc
nop
js
es
out
sbb
gs
adc
scas
cs
dec
outs
jbe
mov
je
sbb
out
les
movs
aad
inc
xchg
inc
div
jg
cli
fwait
cmc
pusha
cmp
test
push
inc
mov
xchg
inc
inc
cli
in
pop
push
mov
jmp
xchg
pop
iret
addr16
mov
mov
leave
pop
js
cmp
test
sbb
fwait
xor
arpl
loop
lea
outs
pop
cmc
repnz
int3
in
push
xlat
add
std
inc
dec
cmps
repz
out
pop
sbb
push
outs
xchg
imul
dec
cli
sar
test
pop
push
dec
dec
mov
sbb
fdiv
and
push
or
inc
cmp
xlat
rcr
pop
aam
inc
aas
repz
mov
mov
clc
imul
jnp
xchg
jecxz
dec
mov
shl
loopne
adc
gs
cmp
sbb
(bad)
push
sub
shl
hlt
push
ficomp
psubd
cs
mov
inc
push
cmp
push
int
mov
push
xchg
call
dec
jle
or
dec
pop
mov
pusha
loope
stc
jae
add
push
xor
inc
ret
fsubr
lds
jg
or
xchg
mov
outs
cld
sbb
outs
mov
icebp
retf
mov
lods
loop
repnz
xchg
mov
call
sub
sub
and
mov
cmp
shr
cdq
push
aam
xchg
mov
push
push
fdivrp
dec
xchg
dec
xchg
fcom
jmp
(bad)
fld
inc
icebp
add
cmp
out
and
outs
cmp
pop
pop
dec
jecxz
loopne
repnz
lea
pushf
or
sbb
xor
xor
jne
sub
mov
test
nop
xor
mov
sti
cmp
hlt
inc
ss
add
and
jne
jp
retf
stc
xchg
mov
xor
add
mov
adc
in
xchg
sbb
rcr
jmp
dec
xor
std
cli
lea
mov
daa
sbb
scas
mov
xor
leave
add
mov
mov
jne
fwait
pop
sbb
ja
adc
dec
les
pushf
retf
call
mov
mov
push
sahf
or
(bad)
push
loope
call
xor
je
push
pop
cmp
adc
aaa
mov
int
jl
pop
(bad)
cwde
shr
cwde
(bad)
mov
pop
inc
stc
mov
outs
bound
cwde
daa
std
adc
inc
repz
pusha
les
ins
dec
lock
sar
nop
or
jl
pop
stos
pushf
xchg
sub
inc
fdivr
nop
sbb
mov
shl
fmulp
mov
or
dec
and
test
out
cmps
rcl
inc
pop
jle
jmp
js
push
ins
cmps
loopne
fnstsw
mov
mov
icebp
fld
sbb
out
out
mov
pop
jg
into
rol
sbb
add
pop
sbb
jp
into
xchg
lock
mov
adc
ror
adc
dec
movs
jmp
mov
jb
pop
lahf
repz
or
pop
or
pop
inc
and
dec
cwde
dec
in
aad
or
push
mov
xchg
xor
jo
xor
ret
push
mov
or
push
and
xchg
ret
xor
(bad)
aaa
mov
and
fiadd
outs
jp
push
test
in
in
or
stos
dec
xchg
ror
test
mov
sahf
push
inc
add
(bad)
enter
bound
xor
loope
std
sbb
fdivr
push
dec
js
ja
popa
ror
lahf
xor
(bad)
stc
xchg
popf
cdq
fs
mul
jb
test
push
push
lods
pop
sbb
not
imul
cli
jecxz
(bad)
and
cld
xchg
outs
ja
es
pop
repnz
push
cmp
std
and
loopne
das
xchg
push
pop
js
pusha
mov
push
mov
sub
xchg
cs
call
pop
jmp
pop
push
inc
xchg
cld
jb
(bad)
mov
retf
xchg
sahf
iret
(bad)
mov
neg
inc
pop
xchg
adc
cld
cmp
mov
add
mov
sub
push
data16
dec
push
inc
shr
push
mov
cmp
sahf
or
out
ss
mov
(bad)
jecxz
stos
lea
rcl
pop
sbb
pop
pop
sti
or
jp
xor
and
adc
jmp
cmp
and
jno
cld
push
sahf
gs
xor
jns
fbstp
das
retf
aam
mov
out
rcl
xchg
add
xor
rcl
in
mov
out
mov
gs
pop
push
cmp
int3
inc
mov
add
popf
xchg
sahf
sub
sti
xchg
pop
(bad)
mul
pusha
mov
mov
sub
mov
into
rcl
not
mov
mov
dec
mov
push
cmp
stos
sbb
pop
mov
mov
xlat
jmp
je
sbb
adc
je
jbe
pop
nop
add
cwd
xchg
stc
lahf
jl
cs
ss
and
xor
adc
fdiv
fistp
mov
mov
icebp
sub
sub
fisub
push
and
fisubr
gs
adc
and
mov
(bad)
nop
movs
in
mov
and
sbb
mov
sub
popf
xlat
into
rcl
imul
not
mov
cdq
and
adc
jp
pxor
push
jmp
add
add
outs
sar
add
call
aaa
ja
sbb
xchg
push
inc
or
mov
gs
mov
pop
les
or
fnstsw
imul
fwait
pop
cli
xchg
sub
and
jmp
in
dec
rcl
call
sar
repz
xor
hlt
push
cmps
ror
leave
scas
loopne
push
mov
xchg
pushf
mov
pushf
addr16
test
sub
mov
mov
push
xor
sub
dec
test
pavgw
es
lea
ret
mov
stos
and
jg
dec
push
lahf
sbb
repz
pop
outs
mov
sbb
xor
mov
or
pop
push
div
in
std
leave
out
(bad)
out
fsubr
(bad)
aaa
imul
add
cmp
call
and
pop
xchg
cmc
mov
push
ja
rcl
mov
call
neg
leave
scas
xchg
int
aaa
cmp
xor
loop
mov
mov
out
sub
mov
ins
bts
rcr
mov
std
sub
imul
ficom
shl
test
rcl
add
jb
sbb
mov
in
xlat
xor
les
shl
stos
mov
jbe
mov
jae
sub
imul
push
or
xor
adc
xlat
pop
movs
call
pusha
je
pop
mov
and
mov
cmp
push
xlat
push
je
pop
or
mov
jg
out
scas
jne
(bad)
cwde
call
arpl
or
xor
mov
inc
sub
bnd
hlt
xchg
aad
adc
and
fbstp
adc
out
jae
jg
ins
(bad)
iret
mov
mov
jo
add
sar
scas
stc
sbb
mov
ret
add
popa
and
push
or
cmps
xor
ss
inc
rcr
pop
inc
call
aam
mov
clc
cwde
xchg
daa
mov
add
sub
adc
mov
xor
mov
(bad)
jns
push
inc
dec
dec
in
push
mov
xor
scas
mov
fdiv
dec
ja
ins
mov
inc
or
mov
mov
cwde
pop
and
or
jmp
push
mov
pushf
shl
mov
sub
stc
sbb
cmc
mov
add
and
dec
outs
mov
popa
ins
mov
sbb
loopne
test
adc
pop
ds
push
push
cmp
or
and
mov
jge
int3
mov
inc
iret
dec
xchg
aaa
push
jb
arpl
pusha
add
repz
jbe
je
mov
push
pop
and
add
mov
frstor
jmp
sti
push
pop
mov
push
lods
out
pop
mov
or
out
dec
jnp
jl
lahf
or
cmp
mov
sbb
sub
test
test
dec
loopne
in
xchg
adc
imul
mov
leave
(bad)
outs
fs
dec
sub
out
sbb
lods
xchg
js
movs
in
add
(bad)
xor
cwde
xchg
in
dec
ins
jl
in
fistp
push
mov
adc
sub
icebp
and
or
inc
and
inc
rcl
cmc
adc
ficom
jl
pop
int3
cmp
xchg
out
fsubr
cmp
loope
test
icebp
fdivr
not
cmp
addr16
sar
stos
out
and
sahf
cmp
sbb
repnz
stc
push
lea
sub
stos
and
inc
dec
retf
test
xor
cli
mov
and
lahf
mov
aam
lea
and
gs
mov
pushf
outs
sub
dec
jb
inc
sahf
in
ss
add
cld
jmp
mov
sbb
scas
dec
xor
fucomi
cmp
and
adc
jl
or
shl
cmps
push
sbb
stos
imul
add
imul
mov
fcom
mov
mov
(bad)
xor
mov
sbb
inc
pop
retf
rol
(bad)
xchg
(bad)
add
and
rcr
push
push
les
mov
inc
mov
mov
leave
push
xchg
fidivr
in
sbb
xchg
and
pop
stc
out
popf
mov
gs
fisubr
push
sub
dec
sbb
out
lock
and
ds
test
scas
mov
sub
and
test
or
iret
lea
or
pushf
dec
test
adc
loop
adc
test
cmp
enter
dec
aaa
cmc
mov
push
xor
fdivrp
mov
inc
lahf
fimul
icebp
fsub
mov
dec
aam
push
dec
loopne
fmul
in
(bad)
push
(bad)
movs
and
outs
mov
add
scas
or
mov
(bad)
std
dec
or
pop
cli
cmps
ret
mov
ret
ja
sub
jg
sti
xchg
sbb
fisubr
movs
cmp
pop
outs
aas
std
(bad)
pop
and
retf
mov
test
pop
cmp
fdiv
retf
xor
mov
mov
imul
mov
add
push
rcr
(bad)
push
pop
fstp
jbe
in
loopne
fld
push
mov
test
scas
shl
cmps
cmp
scas
cmp
adc
push
call
xchg
addr16
out
and
adc
xchg
movs
pop
sbb
ret
ss
pop
jbe
ds
inc
sub
cmp
call
cmps
and
stc
movs
cmp
fist
xor
popa
imul
ret
pmuludq
fwait
push
jle
test
mov
sbb
mov
dec
div
rcl
adc
sub
add
test
push
mov
dec
xchg
adc
xchg
fcom
hlt
sub
xchg
out
mov
repnz
test
rol
xchg
xlat
cdq
dec
inc
into
jns
iret
or
popf
dec
and
inc
std
(bad)
loope
outs
fild
push
(bad)
ss
xor
(bad)
and
loop
push
inc
pop
out
movs
sub
(bad)
movs
mov
push
push
dec
jge
outs
sub
test
mov
dec
inc
sub
xchg
das
or
fiadd
mov
xlat
pop
daa
test
mov
sbb
shl
call
push
les
inc
jne
dec
hlt
(bad)
mov
mov
outs
aad
and
mov
add
nop
jle
mov
cli
mov
dec
or
push
mov
mov
cmps
push
repz
into
push
sbb
mov
push
inc
mov
hlt
mov
lods
xor
push
adc
sub
xlat
(bad)
call
and
leave
shr
sbb
xor
sub
pushf
pop
sub
lods
pop
clc
cmp
les
test
je
pop
add
xchg
inc
adc
frstor
test
rcr
ret
sbb
addr16
sub
xor
adc
call
lea
repnz
mov
mov
jmp
mov
xor
pop
push
cmc
rcr
repz
popa
dec
shl
pop
jb
(bad)
add
push
push
or
mov
mov
jnp
imul
ins
mov
fsubr
(bad)
and
les
ror
cmp
inc
or
ja
mov
mov
cmps
cmc
dec
push
in
xchg
xor
push
sbb
out
cmp
scas
mov
xchg
push
and
in
sbb
mov
(bad)
(bad)
jmp
cld
add
ins
(bad)
movs
push
scas
xchg
jns
pop
ret
call
loopne
push
fld
push
push
fisub
or
enter
jo
out
inc
xchg
std
cdq
inc
pop
int
popf
fst
pop
mov
adc
iret
test
jmp
push
mov
xor
xchg
pop
mov
push
mov
cmp
add
imul
ror
inc
sub
aaa
or
stos
fisub
repz
lahf
test
mov
dec
jle
fcomp
fidivr
int
xor
and
dec
sub
push
adc
mov
test
test
sbb
sbb
push
fcomp
sub
ins
fnstcw
std
inc
jae
(bad)
push
jl
dec
jo
or
sbb
retf
lahf
in
(bad)
pop
aad
shl
ds
sbb
mov
jbe
retf
inc
cmp
xor
cmps
adc
leavew
pop
or
pop
or
jge
xchg
mov
xor
fcmovnbe
cwde
stos
es
fldl2e
bsf
push
xor
push
es
push
(bad)
jae
outs
imul
call
mov
sub
icebp
in
or
cwde
out
movs
ds
out
adc
dec
add
jne
pop
xor
jns
cwde
clc
or
push
cmp
xchg
inc
cmp
fisttp
test
add
xor
pop
push
xchg
sbb
xlat
add
les
sub
jp
icebp
nop
fst
and
into
or
xchg
and
pop
cmp
out
cmp
sbb
push
test
jmp
inc
mov
adc
mov
xchg
(bad)
xchg
cmp
mov
out
add
xor
or
sub
mov
ret
push
test
ficom
lods
loope
imul
lahf
test
add
int3
push
in
adc
in
aad
xchg
xchg
xor
adc
mov
test
adc
arpl
inc
rcl
and
mov
xchg
mov
mov
xchg
adc
js
push
jno
mov
xchg
push
addr16
dec
loope
push
mov
xchg
mov
fnstenv
mov
nop
(bad)
pop
or
pop
aam
pop
mov
pop
das
fbstp
movs
jb
enter
ret
push
and
fs
pushf
jge
sbb
or
cmp
stc
jb
(bad)
mul
adc
lock
jmp
lahf
mov
iret
popa
(bad)
cmp
sbb
sbb
push
not
jmp
call
jnp
pop
jmp
push
fwait
jecxz
pop
push
addr16
or
dec
movs
mov
daa
sub
sti
pop
or
push
mov
jg
xchg
or
jle
test
cmp
inc
xor
clc
mov
adc
fmul
adc
dec
popa
mov
(bad)
and
mov
push
into
mov
push
mov
adc
ds
stos
pop
pop
test
int3
push
and
push
or
enter
lock
mov
lock
mov
dec
push
and
lahf
cmp
pop
ins
test
mov
push
sbb
les
sbb
and
mov
cmp
daa
inc
xor
rcl
dec
xor
mov
cdq
push
shl
adc
or
pop
cli
sub
jge
xchg
in
aaa
adc
push
push
or
and
faddp
shl
loope
loope
cmp
int3
or
push
jge
imul
out
push
push
jbe
sub
aad
outs
mov
(bad)
jle
mov
daa
daa
fs
scas
push
sub
xor
mov
iret
inc
xchg
das
out
loope
jle
dec
xor
inc
sub
jnp
cs
mov
inc
push
jge
dec
ret
mov
and
push
cmc
out
dec
push
adc
pop
outs
push
jbe
adc
dec
into
push
add
jp
pop
(bad)
stos
adc
jge
je
pop
dec
xor
mov
pop
mov
mov
rcr
dec
sub
sar
(bad)
push
movs
dec
adc
idiv
adc
clc
mov
dec
jmp
loop
dec
cmp
mov
div
loop
pop
and
push
sub
lods
pop
mov
jno
(bad)
int
pop
lods
push
icebp
fs
mov
pop
movs
lock
fimul
fldcw
sub
loopne
add
ds
bound
jl
jmp
rol
and
bound
push
adc
mov
pop
fiadd
sub
jg
mov
fidivr
(bad)
xor
enter
ja
fisub
or
adc
push
mov
pop
xchg
loope
cmp
ds
pop
or
loop
mov
push
lock
nop
pop
jno
pushf
dec
test
jmp
loope
mov
sub
add
popf
retf
mov
adc
pop
cmp
fwait
imul
jae
sbb
inc
outs
sub
gs
rol
adc
sar
call
sbb
pop
fdivr
cmp
xchg
adc
out
jge
pop
mov
cmc
cmp
jbe
push
and
sahf
lea
das
fmul
aaa
push
jbe
add
cmc
in
repnz
mov
mov
out
mov
inc
jle
addr16
outs
sbb
mov
push
cld
lea
movs
dec
imul
test
iret
leave
mov
arpl
out
jo
push
ret
enter
jae
inc
pop
add
out
jl
sub
mov
loop
mov
popw
xor
adc
xchg
and
cmp
xor
push
int
cmp
adc
test
(bad)
in
mov
ja
movs
cmp
pop
adc
sub
call
sbb
(bad)
xchg
sbb
xor
xchg
inc
push
in
ss
aam
adc
jp
add
and
jnp
into
and
cmc
pushf
int
addr16
pop
lods
das
add
hlt
or
and
push
xor
in
(bad)
or
add
shr
adc
mov
fsubr
nop
(bad)
mov
rcr
cmp
xor
mov
daa
out
pop
popf
pop
cmc
in
cmp
xor
out
or
cmp
jge
data16
jecxz
dec
and
xor
jle
out
or
adc
mov
mov
jmp
test
xor
push
rol
call
add
aas
out
aad
retf
stos
mov
sub
mov
sbb
pusha
mov
int3
out
jg
iret
pop
and
in
sbb
or
add
mov
cmp
lods
rcr
ret
rcl
inc
sub
xor
xor
imul
sub
dec
mov
clc
jae
dec
inc
retf
fiadd
pop
pusha
mov
mov
and
jecxz
mov
fild
shl
cmps
jb
in
aaa
push
out
jnp
imul
dec
imul
clc
sub
shr
aas
cmovne
(bad)
cli
test
ja
in
adc
ds
cmps
pop
in
pop
jnp
jle
pop
lods
jbe
es
jle
movs
aad
mov
out
mov
push
inc
xchg
jne
popa
sub
bound
jo
ins
push
lahf
ins
enter
data16
mov
mov
mov
mov
push
loopne
xor
mov
xchg
jl
aas
mov
adc
mov
cmc
das
int
(bad)
mov
ins
ret
test
cmp
mov
pop
sbb
or
mov
or
inc
dec
mov
adc
dec
daa
jg
sub
out
mov
cmp
aad
(bad)
not
pushf
(bad)
dec
jle
enter
retf
mov
jb
adc
hlt
mov
add
stc
jnp
xchg
mov
cmp
push
int3
inc
sub
pop
lea
dec
mov
aas
cmps
popf
nop
inc
and
lock
loop
out
outs
adc
sub
cmp
pop
pop
rol
loopne
push
mov
in
mov
mov
stc
pop
cmc
clc
add
mov
mov
sub
xor
dec
push
xchg
adc
mov
rcl
add
xchg
mov
aam
imul
xlat
mov
adc
(bad)
mov
add
mul
test
loope
pop
scas
not
xchg
add
lock
je
cmp
sub
enter
je
mov
cmps
push
inc
and
xchg
in
dec
ins
inc
dec
fistp
pop
mov
inc
in
inc
repz
push
mov
xor
mov
dec
sub
aaa
mov
mov
push
enter
mov
mov
popf
imul
cmp
mov
das
mov
xchg
shl
out
mov
jmp
push
outs
neg
add
inc
test
sbb
or
shl
or
sar
stos
in
cli
int3
xor
(bad)
fwait
popa
popa
inc
or
cld
and
push
cmp
out
movs
adc
orps
loope
dec
or
lds
ja
mov
xor
out
jne
imul
das
mov
jp
data16
ins
pop
mov
mov
mov
jp
nop
and
fwait
les
sbb
mov
aam
cmp
cmp
inc
mov
mov
jo
pop
add
and
jo
jmp
imul
sbb
or
cmp
push
cs
gs
fild
cmc
adc
or
std
mov
(bad)
push
jae
push
or
(bad)
push
fs
out
or
jecxz
inc
sbb
jg
sbb
xlat
mov
sbb
cmp
shl
repz
cmp
jnp
jl
or
(bad)
pop
fdiv
ja
jle
fst
sahf
fcmovb
sub
int
add
inc
cmp
out
push
fldenv
pop
loopne
xlat
and
ss
xor
fadd
stos
xchg
sbb
das
sbb
ins
stc
and
xchg
lea
je
loope
enter
jo
jge
push
test
pop
dec
sbb
outs
fld
add
leave
data16
aad
sub
jno
adc
jo
push
add
in
rcl
sbb
fwait
cmp
test
mov
in
mov
ss
adc
lea
cmp
aad
adc
mov
mov
jmp
pop
dec
push
enter
movs
or
mov
mov
dec
cmp
xchg
imul
out
mov
xlat
xchg
mov
mov
jno
xor
int
mov
jb
jno
xor
and
sar
cmps
xor
jge
and
mov
jmp
inc
or
imul
and
pop
and
dec
mov
icebp
mov
xor
loope
test
dec
jae
jecxz
mov
das
mov
imul
sti
sti
aas
xor
cmp
out
outs
push
add
popf
cmp
rol
clc
imul
mov
jle
in
lea
cwde
call
pusha
mov
xor
sbb
mov
add
push
sbb
daa
ret
add
xlat
pop
call
xor
cwde
cmp
push
sub
inc
imul
popa
iret
xchg
int
aam
xor
cmp
xchg
rcl
test
std
sahf
sbb
(bad)
pop
call
fistp
imul
pop
outs
icebp
dec
outs
pop
inc
push
rol
jle
xchg
sti
sbb
mov
push
push
push
lods
dec
jmp
dec
scas
fcom
leave
or
sbb
retf
repnz
sbb
je
inc
inc
in
push
into
mov
cmc
mov
aam
lahf
js
jno
jae
dec
fdivr
push
mov
cmp
adc
sub
lock
fidiv
adc
jae
xchg
test
ret
js
push
dec
mov
cmps
ds
dec
stc
jmp
ja
sbb
mov
dec
push
mov
sbb
cld
rol
push
call
idiv
cmp
push
sahf
icebp
adc
inc
push
sub
ins
or
inc
mov
pushf
jmp
sbb
xor
and
dec
bound
and
pop
jne
int
mov
aad
cdq
into
dec
movs
dec
pop
shl
int3
jb
ret
retf
xchg
out
repz
in
sar
cld
das
shl
inc
pop
scas
rcl
xchg
lds
add
jmp
xchg
aam
test
dec
inc
cmps
xor
ror
movs
jge
ret
mov
xchg
pop
test
jo
int
arpl
aas
sahf
jnp
dec
push
fs
xchg
shr
lods
jp
pop
add
xlat
cmc
xchg
setb
mov
and
(bad)
and
xor
adc
mov
push
test
out
mov
shr
push
or
(bad)
jbe
iret
sub
or
or
xchg
mov
ror
jae
adc
aam
(bad)
in
push
mov
xchg
out
into
cli
cmc
in
lods
sahf
pop
(bad)
popf
stc
cmp
shr
outs
out
mov
rcr
jb
jmp
and
mov
and
fwait
mov
lods
(bad)
jbe
ja
add
cmp
js
inc
cmp
jmp
mov
sbb
xchg
mov
int
and
dec
cs
imul
repnz
rcr
test
mov
cmp
cmp
push
dec
sub
jnp
pop
sub
enter
fsub
in
sub
(bad)
sbb
push
add
push
(bad)
fst
cmp
loop
hlt
test
in
addr16
mov
cld
or
stos
fsub
sbb
mov
int
jl
jl
or
xor
push
out
mov
aam
add
dec
push
call
test
xor
je
inc
scas
bnd
mov
pop
xchg
stos
push
and
cmovl
or
adc
pop
in
arpl
cmp
scas
test
shl
jne
sub
dec
bound
sbb
pop
or
je
pop
mov
test
iret
jg
ins
xor
out
aaa
mov
(bad)
fucom
xchg
or
xor
jmp
pop
ja
mov
and
add
xor
or
rcl
sub
jg
call
dec
jp
leave
or
retf
and
pop
pushf
enter
xchg
dec
mov
data16
pop
loopne
mov
iret
or
jecxz
xlat
push
cli
jnp
mov
and
sbb
xchg
dec
fdivr
mov
sbb
cmps
sub
jnp
iret
inc
push
test
jbe
xchg
and
call
pop
inc
and
sub
mov
push
out
je
in
jo
push
pusha
and
mov
push
mov
or
mov
rcl
lock
mov
cwde
inc
mov
dec
pop
lods
scas
pop
cmc
push
cmp
fidiv
mov
pop
cmp
cmps
std
retf
gs
nop
test
loop
test
mov
dec
shr
movs
or
dec
ret
push
leave
mov
xor
mov
idiv
sub
jmp
(bad)
ret
mov
mov
or
xor
nop
xor
and
movs
cs
or
mov
cmc
cmp
jnp
xchg
dec
jno
cmps
in
push
in
jmp
inc
imul
sub
jmp
inc
jmp
lahf
test
mov
sbb
cmc
stos
mov
(bad)
std
cmps
cld
sbb
jnp
mov
fimul
mov
and
jbe
or
test
and
mov
retf
inc
in
fild
adc
fcmovnu
inc
jbe
outs
cmp
bound
ins
in
(bad)
test
les
andnps
rcl
sar
add
add
enter
ret
adc
fcmovb
data16
fiadd
jmp
add
xor
inc
inc
xor
adc
lock
stos
sub
aam
or
bound
nop
jmp
mov
adc
pop
call
xchg
enter
adc
test
dec
sar
and
ins
in
(bad)
xchg
inc
shl
xor
and
push
mov
and
addr16
sbb
fisub
sbb
adc
push
jmp
in
lds
jo
cld
(bad)
adc
iret
cmp
das
nop
jae
test
sar
adc
cdq
add
xor
shl
or
popf
inc
(bad)
fdiv
sahf
dec
or
test
cmp
out
jns
sub
and
call
shr
jae
cld
cmp
outs
loopne
adc
call
dec
std
mov
sbb
cmp
mov
repnz
pop
cli
mov
lahf
mov
xlat
or
xchg
in
jl
sub
mov
adc
inc
jecxz
gs
not
pop
pop
mov
movs
jb
call
lahf
inc
pop
mov
sub
out
mov
or
push
push
repz
adc
adc
mov
jno
xchg
sahf
xor
and
adc
or
bound
jge
not
jmp
or
out
ins
imul
or
loop
or
les
cld
retf
adc
push
push
jl
add
jmp
inc
(bad)
cmps
fsubr
adc
fnstcw
cmc
push
and
int
xchg
scas
jle
ss
mov
gs
fistp
xor
in
out
sub
sub
inc
xchg
out
sub
cli
shl
xchg
xchg
and
or
push
ja
aad
jecxz
inc
test
mov
add
lds
aam
push
lods
mov
imul
in
rcl
test
pushf
sbb
push
(bad)
jnp
aam
scas
fst
add
(bad)
mov
call
xchg
jne
sub
pop
pop
mov
mov
mov
push
fmul
pop
cmp
(bad)
xor
in
cmp
popa
xor
test
fwait
ja
clc
and
pop
cmps
and
adc
imul
and
test
es
dec
int3
pop
out
adc
outs
mov
add
in
push
or
xor
jl
jmp
cmp
imul
ins
cmc
push
inc
xor
xchg
mul
adc
jo
rcl
and
mov
push
jno
cs
and
dec
mov
pop
test
mov
adc
sbb
arpl
pop
clc
(bad)
jle
enter
popf
push
jo
cmps
push
fs
inc
sub
mov
and
adc
sub
push
mov
fcomp
popa
adc
sub
out
inc
ret
adc
clc
add
push
jl
sub
xchg
xchg
rcr
ret
add
mov
ficom
dec
and
xor
arpl
lock
movs
dec
mov
jne
inc
iret
jge
test
xor
jbe
iret
sar
mov
cmc
out
cmps
dec
pushf
sahf
pop
or
lods
lock
xor
jb
and
dec
push
cld
push
iret
dec
das
xchg
es
gs
out
mov
cmps
mov
mov
xchg
mov
neg
stos
lahf
mov
sbb
mov
mov
fadd
inc
test
pop
outs
lea
pop
(bad)
xchg
call
xchg
push
pusha
ret
in
sahf
sbb
sar
pop
out
mov
test
mov
lods
cmp
cli
test
movs
addr16
xlat
inc
daa
mov
out
xor
fidivr
int3
sbb
adc
cmps
pop
aas
sahf
shl
xor
aad
sar
inc
es
aas
jb
pop
pop
ja
adc
int3
leave
mov
cmc
mov
mov
mov
inc
aam
sbb
jno
int
cwde
sar
or
test
enter
inc
and
fimul
push
mov
sub
mov
out
gs
cmps
push
ror
stc
inc
js
clc
gs
xor
or
xlat
shl
outs
mov
nop
jg
and
cmp
mov
and
adc
sub
inc
inc
lock
sti
cmp
inc
jg
rcr
mov
movs
xchg
(bad)
aad
mov
in
mov
dec
push
pop
addr16
add
push
sbb
add
xchg
fild
out
ss
imul
mov
xchg
xchg
pop
and
mov
and
imul
xchg
mov
ror
outs
scas
mov
repnz
inc
mov
je
aaa
adc
pop
(bad)
adc
std
sub
xlat
xor
xchg
lods
push
aaa
mov
fdiv
cwde
inc
jmp
and
pop
xchg
mov
ret
call
icebp
jmp
and
adc
hlt
pop
les
push
adc
jmp
pop
add
mov
push
cmp
pop
inc
xor
cmp
sbb
xlat
lds
jle
or
sub
iret
mov
mov
jecxz
push
pop
mov
add
xchg
fs
push
imul
test
xor
mov
push
div
sub
add
jns
xchg
sti
inc
lds
inc
daa
lahf
fcmovnu
cmp
(bad)
inc
sub
cmps
(bad)
xor
jno
lods
fwait
add
test
lods
loope
mov
pop
cmp
(bad)
call
stos
mov
icebp
add
and
fcom
xor
rcr
into
mov
into
repz
jns
test
adc
push
sub
jg
and
lods
fidivr
add
(bad)
mov
mov
sar
mul
xor
xchg
loopne
repz
xor
cld
pop
push
mul
jmp
test
dec
js
mov
mov
jg
stc
and
ins
xor
sbb
cmp
mov
ins
(bad)
enter
fwait
push
lea
into
cwde
stos
pop
ins
dec
retf
inc
inc
loopne
push
daa
cs
inc
push
fiadd
and
mov
mov
sbb
mov
mov
data16
jb
aad
push
movs
in
mov
push
cld
push
push
mov
or
jb
daa
out
and
aad
es
inc
ins
loop
jp
enter
jmp
sub
jp
add
daa
in
test
into
ficomp
jmp
test
push
outs
fisubr
mov
xor
mov
popf
addr16
shl
lds
repz
shr
push
inc
lods
gs
push
jecxz
push
jl
(bad)
scas
ins
adc
push
ret
test
sbb
cmp
enter
retf
dec
in
cld
mov
pop
fnstenv
pop
dec
mov
mov
outs
inc
(bad)
arpl
int3
jmp
pop
inc
dec
pop
and
sti
pop
dec
pop
sbb
cli
mov
sbb
pop
adc
cmp
dec
mov
xchg
push
jp
cmps
mov
adc
push
arpl
pop
xor
jb
out
mov
xchg
ficom
aad
in
or
xor
dec
and
test
adc
inc
inc
inc
rcl
mov
adc
lahf
inc
test
mov
and
cmps
mov
adc
je
sub
cwde
push
(bad)
mov
pushf
stc
mov
out
mov
stos
shr
push
jecxz
daa
xchg
es
pushf
jp
into
xor
sbb
adc
bound
pop
dec
mov
daa
sbb
imul
jns
lods
add
or
jmp
push
bnd
enter
jp
jae
pop
ds
in
movs
sub
dec
sub
add
push
pop
ja
ds
sbb
das
xor
mov
mov
sub
ret
mov
ja
sar
push
mov
popf
push
pop
mov
mov
xchg
sti
aaa
cmp
mov
cmp
sbb
fisttp
mov
sub
push
push
jnp
mov
push
lahf
in
mov
les
in
idiv
and
or
clc
in
shl
xchg
mov
mov
xlat
mov
xchg
inc
iret
popa
sub
sub
loopne
adc
and
and
jecxz
je
bound
mov
test
out
movs
jne
ret
jge
(bad)
(bad)
rcl
sbb
fsqrt
xchg
nop
pop
xchg
mov
add
jl
cmp
adc
or
add
mov
neg
test
ss
ret
jns
and
das
fist
mov
jns
(bad)
test
jb
and
test
pop
or
in
push
nop
sbb
loop
add
xchg
and
in
arpl
adc
sub
rcr
nop
mov
mov
fld
mov
js
hlt
and
or
stc
add
cwde
push
xor
dec
mov
cmp
mov
enter
or
mov
test
(bad)
pop
dec
lods
jg
iret
shr
gs
test
dec
aad
jecxz
sbb
in
mov
xchg
call
ror
cmp
sbb
sub
out
pop
dec
movs
jle
out
fiadd
mov
adc
sbb
mov
xlat
fsubr
mov
pop
pop
in
into
pop
xchg
mov
jae
pop
out
cmp
or
loopne
mov
mov
mov
outs
sub
jmp
xchg
xchg
sti
call
mov
pop
pop
enter
lds
mov
movs
out
stc
cmps
(bad)
push
aam
(bad)
sub
pop
mov
xchg
mov
mov
ror
int
lahf
dec
out
call
or
jle
cmps
push
mov
push
ins
scas
popa
hlt
mov
popf
popf
repnz
test
xor
aas
sahf
mov
cs
push
aam
inc
lods
xor
cmps
div
xchg
(bad)
enter
mov
push
cmp
outs
stos
int
in
aaa
mov
jle
scas
push
repnz
shl
xlat
pop
shr
lock
mov
dec
cmp
sahf
add
pop
push
add
push
rcl
(bad)
(bad)
repnz
push
ficomp
add
push
xchg
jbe
es
mov
mov
xor
sar
mov
xchg
dec
fwait
pop
add
fwait
dec
retf
mov
cmp
fidiv
cmps
jbe
and
xor
in
push
dec
call
js
pop
stos
cmps
adc
cmp
add
(bad)
mov
xchg
push
xchg
push
cmc
jne
adc
push
retf
cmp
inc
stos
xor
fwait
sub
mov
or
xlat
pop
jle
out
mov
push
xchg
std
data16
jge
mov
mov
out
outs
push
popa
cld
mov
ret
and
sbb
mov
dec
or
stc
jae
stc
xchg
mov
xchg
inc
scas
pop
push
mov
push
pop
and
arpl
cmp
or
add
sub
fisubr
inc
rol
mul
outs
pop
push
enter
out
pop
mov
adc
(bad)
jb
mov
test
and
mov
fstp
mov
xchg
xor
sbb
mov
mov
jno
dec
sub
out
sti
scas
jmp
jno
std
(bad)
(bad)
stc
pop
es
sub
push
bound
int
int3
call
jg
inc
mov
loope
je
sbb
inc
sbb
pushf
xchg
aad
test
(bad)
fild
cmps
push
push
jp
sub
sbb
or
push
retf
add
and
lods
fstp
jb
fwait
leave
adc
cmp
cld
sub
xor
xchg
inc
fcmove
enter
add
inc
jmp
shr
adc
dec
push
movs
fs
arpl
push
xchg
out
(bad)
mul
dec
ficom
jns
icebp
cmp
push
add
aad
mov
mov
js
pop
pop
cdq
jmp
cmp
aam
aas
test
popf
sub
cli
jnp
mov
add
jecxz
pop
shr
addr16
sub
lods
mov
jnp
ds
push
sbb
inc
lods
iret
jns
dec
add
sbb
xor
jae
cmp
mov
fst
add
mov
ret
out
ins
cmc
dec
data16
xor
jne
pop
jbe
fcom
dec
(bad)
data16
and
not
dec
cdq
xor
inc
mov
lds
xor
(bad)
mov
push
(bad)
jo
xchg
cmp
arpl
sbb
mov
sub
aaa
ds
(bad)
mov
movs
loop
sbb
inc
adc
pop
out
les
jl
xor
gs
stos
(bad)
or
add
(bad)
fdiv
pop
dec
adc
sbb
lods
leave
mov
(bad)
js
dec
mov
popf
movs
ins
pop
ja
inc
inc
test
inc
in
sub
adc
call
adc
fistp
dec
sbb
or
fcomp
jb
rcr
mov
fsubr
or
and
iret
or
mov
push
sti
lds
ins
outs
pusha
push
int3
sti
sbb
mov
loope
mov
add
in
ss
neg
push
sahf
inc
cld
popa
cmp
ret
mov
jp
dec
sbb
mov
arpl
sub
and
pop
mov
cmp
stos
(bad)
out
sbb
xchg
mov
ss
sbb
sahf
xchg
in
btr
dec
sub
mov
rcl
dec
and
ficom
mov
aad
int3
mov
data16
push
xchg
mov
inc
jmp
int
scas
or
jne
pop
cmps
retf
test
cmc
push
xchg
clc
xchg
xchg
push
jnp
clc
cs
out
mov
xor
pop
int
imul
push
out
ja
int3
jmp
pop
scas
iret
mov
test
cmps
sub
push
inc
mov
(bad)
dec
push
rol
or
mov
div
mov
adc
dec
inc
adc
jno
and
fwait
jne
(bad)
cmp
sub
icebp
lods
mov
inc
push
inc
mov
or
or
lods
(bad)
sub
(bad)
mov
mov
(bad)
shl
jl
xchg
dec
dec
xchg
ret
shl
in
lods
inc
loope
adc
xor
test
mov
jl
dec
add
or
outs
mov
mov
jge
jne
gs
aaa
enter
std
aas
mov
adc
js
out
mov
cmc
mov
sub
or
cmps
cs
xchg
or
dec
shr
scas
push
dec
sub
pop
dec
les
mov
sbb
mov
jl
jp
adc
mov
cdq
jl
and
test
outs
push
dec
fnstcw
mov
in
js
std
jecxz
push
gs
mov
aam
add
pushf
cmps
xchg
inc
test
out
dec
push
outs
rcr
xor
aas
cmp
push
push
inc
xor
retf
dec
sbb
aad
(bad)
dec
jle
mov
jmp
(bad)
adc
lahf
nop
arpl
retf
pop
xor
jge
loope
sub
test
test
(bad)
sub
dec
cli
ss
int
arpl
push
adc
mov
mov
jecxz
jecxz
jnp
xchg
sbb
push
push
out
xchg
outs
inc
rol
lods
lods
jae
dec
inc
mov
mov
xchg
xchg
xchg
int3
std
dec
jbe
cld
adc
(bad)
out
rcl
int
les
and
test
sbb
or
(bad)
rol
fiadd
mov
repz
ret
(bad)
lods
mov
bound
repnz
mov
call
rcr
idiv
or
(bad)
gs
ss
mov
mov
rcl
mov
cmc
sbb
je
push
push
jg
jle
xchg
sbb
mov
sub
adc
adc
enter
inc
nop
lahf
or
ret
push
es
dec
in
into
stos
fwait
lock
pop
inc
and
add
jmp
gs
jo
inc
int3
adc
jecxz
push
dec
or
loop
in
xchg
cmc
jp
xchg
mov
jg
jo
xchg
xor
cmp
jno
lods
add
mov
pushf
icebp
jne
frstor
jns
call
push
inc
rcl
xchg
stc
dec
cwde
ins
aaa
pusha
in
fstp
stos
leave
or
mov
or
mov
mov
add
mov
fs
mov
in
addr16
mov
adc
enter
in
sub
push
inc
pop
sub
cmp
faddp
mov
dec
into
ret
out
repz
in
push
dec
inc
pusha
and
mov
call
shl
cmps
dec
fild
cmp
mov
aas
jmp
xchg
in
jl
jmp
out
and
arpl
stc
cmp
gs
adc
add
retf
fs
cdq
jp
dec
adc
fcompp
repz
and
jne
mul
push
fs
outs
stos
mov
aad
call
and
enter
jmp
mov
inc
pop
cmp
fisubr
push
pop
jge
mov
rcl
mov
retf
push
pop
outs
lock
jb
pop
xchg
mov
jmp
mov
jmp
xor
sub
add
in
xor
cmc
addr16
jecxz
jb
adc
fs
icebp
bound
push
icebp
(bad)
ds
bound
or
scas
sub
dec
add
fild
push
pop
or
fadd
fdiv
jns
adc
rep
addr16
adc
jbe
(bad)
inc
adc
hlt
sbb
inc
adc
inc
xor
jno
out
mov
sub
xchg
je
dec
mov
and
xchg
(bad)
stos
push
inc
loope
popf
les
pop
xchg
push
jae
imul
mov
mov
inc
jnp
adc
dec
push
loopne
dec
imul
mov
adc
fcom
xlat
pop
xchg
inc
lea
pusha
leave
sub
push
int3
or
fdiv
shr
call
mov
cmovbe
std
inc
lock
mov
mov
test
cld
scas
ficom
push
xor
add
dec
add
jns
cmp
push
xor
test
push
jo
pop
lock
inc
stos
xor
pop
retfw
scas
addr16
dec
pop
int3
ds
call
pop
enter
cdq
into
nop
test
mov
call
clc
scas
cs
or
enter
cwde
fidiv
addr16
xchg
lods
jge
push
not
pop
sbb
jns
gs
(bad)
jmp
jb
jle
(bad)
mov
cmp
mov
pusha
mov
push
jp
rcr
mov
push
mov
js
mov
sbb
mov
lea
lea
pusha
mov
push
xchg
int
pop
nop
or
push
dec
loopne
cwde
dec
push
(bad)
xchg
das
push
dec
loopne
fisubr
lahf
data16
sbb
data16
ss
xchg
sbb
push
movs
call
ss
inc
sub
int3
push
mov
dec
psllq
repnz
(bad)
lods
iret
push
pop
and
test
mov
not
mov
or
and
pop
xor
scas
enter
div
sub
fcmovnu
jge
cmp
test
in
cmc
pop
cs
aam
test
xor
mov
or
xor
div
pop
mov
jl
test
lods
dec
in
dec
pop
retf
(bad)
pushf
iret
cmp
push
or
mul
add
out
mov
cmps
shl
cs
mov
jmp
and
push
sbb
test
in
lahf
fst
(bad)
jmp
out
lods
xchg
cmps
retf
das
or
pusha
mov
outs
sub
mov
lock
jl
aam
dec
inc
jmp
movs
cmps
ret
xor
cmc
jbe
push
lahf
dec
add
hlt
fild
mov
sar
not
mov
in
add
call
inc
inc
cld
enter
nop
add
jns
xor
clc
fist
xor
call
or
jno
dec
mov
and
addr16
xor
sbb
sub
jne
jmp
das
outs
aam
mov
imul
adc
xor
jle
je
push
xor
inc
pop
cmps
adc
in
rol
inc
loopne
pop
push
cmps
in
dec
movs
pop
inc
out
push
daa
mov
add
scas
xchg
add
push
sbb
xlat
xchg
imul
je
or
xor
les
mov
mov
pop
fdivp
in
xchg
jb
add
dec
pop
add
mov
add
outs
push
jle
sbb
inc
xchg
fist
jbe
xor
mov
aaa
push
ins
or
add
dec
scas
xchg
xor
inc
idiv
or
and
cmc
adc
and
icebp
jge
mov
mov
add
(bad)
enter
xchg
addr16
ror
fbstp
xor
pop
int3
push
jae
in
or
xchg
mov
into
sbb
cmp
hlt
gs
out
rol
sqrtps
mov
(bad)
out
pop
dec
rol
(bad)
xchg
xor
clc
cdq
xor
mov
(bad)
je
ficom
inc
xor
(bad)
jbe
sti
adc
jne
mov
pop
mov
fucomi
fbstp
dec
pop
dec
(bad)
lods
sar
ffree
mov
jl
stc
ins
mov
cmp
dec
rcr
in
not
dec
cwde
imul
adc
ds
sahf
mov
jns
mov
ins
shl
and
icebp
cvtpi2ps
add
cmp
mov
jge
xchg
cmp
out
dec
sbb
test
(bad)
xor
mov
xchg
jo
lds
cli
fmul
and
(bad)
fsub
mov
movs
push
fmul
add
out
mov
ss
hlt
dec
adc
gs
pushf
add
adc
neg
pop
xchg
pop
ss
inc
jecxz
fst
jg
xor
les
xor
nop
les
mov
jle
mov
cmp
push
sahf
or
xchg
movs
jbe
push
pop
mov
push
movs
mov
mov
gs
imul
movs
in
inc
mov
inc
dec
dec
xor
add
mov
xor
ds
scas
push
mov
push
jp
test
repz
pusha
jmp
(bad)
jmp
ja
ins
jp
and
cld
scas
push
dec
popf
cld
popa
push
sbb
inc
lds
xchg
das
cwde
hlt
cdq
mov
pop
cmp
jg
cmp
(bad)
out
repz
xchg
int
call
sub
adc
dec
das
mov
sub
xchg
in
mov
icebp
ins
mov
sti
sbb
jb
cli
xchg
js
arpl
(bad)
inc
and
pop
sub
dec
adc
mov
clc
push
xor
push
or
mov
mov
pop
int3
and
dec
inc
test
nop
bound
mov
xchg
jno
int3
push
jbe
and
dec
inc
adc
into
icebp
scas
outs
mov
ds
scas
cwde
sub
jl
jmp
xor
pop
inc
mov
fadd
lahf
lea
ins
push
cmp
inc
jle
(bad)
jns
ret
mov
or
ss
xchg
mov
adc
add
outs
in
call
mov
push
pop
movs
adc
je
xchg
mov
xchg
imul
(bad)
sub
mov
and
push
gs
cdq
call
mov
push
fs
lahf
mov
rol
fnstsw
and
in
mov
sbb
jg
shl
lds
push
mov
stos
imul
sub
xor
cmps
sahf
cdq
xchg
call
or
mov
push
jmp
jae
inc
leave
push
and
jb
daa
mov
add
jno
inc
stos
jnp
in
rcr
std
int3
ret
mov
cmp
jb
in
imul
add
rol
lock
pop
ret
push
mov
int
ficom
dec
fst
cmp
dec
push
push
movs
add
scas
add
xlat
test
nop
jmp
or
dec
sub
jp
xor
std
jg
(bad)
(bad)
sub
sbb
std
jae
cs
inc
mov
pop
sub
pop
daa
inc
pop
inc
sub
clc
test
add
and
minps
ds
sahf
sub
xor
hlt
xchg
enter
xchg
pusha
arpl
clc
lock
into
lods
(bad)
in
add
(bad)
sbb
adc
inc
dec
imul
add
or
dec
sbb
into
adc
push
cmp
sbb
dec
ret
cmp
dec
or
inc
jno
xor
sahf
and
mov
mov
sub
xchg
xchg
jge
loope
scas
hlt
arpl
mov
push
nop
and
ror
cli
dec
sahf
jae
outs
int
and
mov
popf
out
outs
adc
jo
pop
mov
cmp
mov
push
out
mov
div
ins
mov
mov
inc
imul
ficom
clc
bound
mov
es
mov
call
clc
jnp
adc
std
dec
dec
xchg
jae
push
clc
adc
out
dec
test
jbe
jnp
or
mov
sub
fs
push
sub
outs
test
stos
test
push
mov
mul
dec
lea
sub
jecxz
push
pop
mov
(bad)
add
adc
(bad)
mov
es
sti
sbb
fwait
dec
pop
mov
iret
loop
in
or
mov
daa
jmp
in
xchg
aaa
lods
sbb
xchg
jge
lods
push
push
jmp
adc
nop
icebp
dec
pop
xchg
pushf
in
dec
fcmovb
mov
jle
stos
dec
dec
or
aam
sbb
scas
mov
fwait
inc
mov
fild
pop
pop
imul
jmp
sti
xor
dec
idiv
retf
stos
aad
adc
rol
jae
xchg
xchg
jl
pop
cmc
cmc
repnz
push
cmp
in
sbb
iret
adc
and
xor
mov
clc
std
imul
stos
pop
std
cmp
les
jge
push
fnstenv
(bad)
mov
cmps
push
inc
fdiv
mov
(bad)
fmul
or
mov
scas
mov
arpl
pop
cld
xchg
and
iret
mov
inc
inc
push
inc
imul
sub
add
shl
outs
leave
ret
push
int
addr16
mov
ins
fdivr
push
push
xor
or
imul
out
aam
(bad)
fcomp
adc
test
ja
jge
or
pxor
lock
or
xchg
mov
clc
inc
dec
cmovl
cvtpi2ps
test
into
pop
shl
mov
sbb
jl
psubusb
fcmove
dec
cdq
mov
mov
rcl
enter
ror
add
in
xor
ror
nop
in
(bad)
imul
fs
mov
mov
out
xchg
add
or
test
push
shr
dec
ins
loopne
xor
aad
and
ss
jge
pushf
loopne
dec
push
xchg
xchg
ins
in
push
pop
adc
inc
push
cmps
xlat
pushf
or
iret
enter
ins
adc
or
fild
xchg
call
(bad)
test
mov
lock
(bad)
mov
aad
fcmovnbe
jmp
and
out
mov
jo
jle
add
push
sbb
mov
adc
xchg
cmps
arpl
xor
aam
xchg
(bad)
out
jl
mov
arpl
jl
cmp
xor
xlat
xor
cmp
lahf
scas
inc
movs
mov
jmp
jl
stc
stos
add
xchg
push
loop
xchg
div
add
jo
stos
aad
adc
push
loop
jecxz
and
cmp
in
ror
in
xchg
mov
mov
pop
enter
pop
push
js
inc
push
pop
push
mov
out
jg
inc
ror
stos
popf
xchg
repz
icebp
les
addr16
mov
cdq
jecxz
sbb
imul
js
sub
push
adc
and
jmp
sti
out
xor
aas
outs
xchg
mov
sbb
adc
fwait
inc
inc
ficom
ds
bound
jge
hlt
mov
jp
xlat
in
pop
push
jns
cmp
mov
push
adc
int3
and
shl
inc
jbe
xor
test
jae
ins
inc
clc
lea
(bad)
fstp
jne
cmps
jecxz
rcr
stos
repnz
sub
inc
cli
fcomp
repz
dec
xlat
mov
dec
pop
cdq
stos
pop
xor
dec
or
out
push
test
mov
arpl
push
pop
mov
cld
shl
imul
sub
ins
dec
push
jmp
pop
dec
mov
les
cmp
push
push
cmc
int3
shl
jne
or
adc
nop
fisub
inc
ins
repz
push
xchg
mov
mov
out
popa
(bad)
xlat
pushf
(bad)
aad
push
(bad)
(bad)
and
xchg
scas
fnstsw
pusha
test
popf
mov
in
arpl
les
std
das
aad
inc
push
gs
mov
dec
lahf
div
imul
(bad)
pop
stos
pop
add
and
shr
mov
xchg
scas
push
mov
ja
pop
enter
(bad)
mov
lods
and
xchg
ja
xlat
cmps
inc
sub
fistp
and
xor
mov
add
mov
mov
mul
in
mov
jg
jno
(bad)
pop
mov
push
sbb
and
mov
mov
ret
add
cmc
or
pop
retf
and
or
jp
fidivr
cmp
xor
inc
enter
(bad)
xchg
(bad)
pop
push
fcomp
ret
mov
dec
jbe
pop
lahf
shl
jbe
mov
cmps
clc
pop
test
idiv
data16
and
std
mov
mov
call
cmp
aad
xchg
and
xchg
(bad)
int
movs
push
data16
xchg
sub
cmp
pop
xchg
mov
and
and
add
js
or
adc
movs
mov
or
popf
pop
push
add
sub
pop
cld
cdq
jl
dec
xor
or
pop
mov
add
mov
cmp
stos
in
cmp
pushf
je
ds
inc
pop
sbb
das
cdq
or
popf
xor
jmp
push
int3
adc
and
xlat
inc
shl
jmp
xchg
sti
cdq
xchg
or
cwde
sub
cli
aas
or
mov
mov
lds
imul
xchg
mov
retf
mov
sbb
cmp
cs
pop
adc
jmp
lock
mov
jae
push
jmp
pop
aaa
jae
push
mov
sbb
fcom
dec
popf
in
sti
push
shr
in
mov
pop
sahf
dec
test
sbb
arpl
or
xor
adc
xor
and
jle
movs
cmps
test
pop
fnstenv
loope
test
jmp
and
mov
cli
pop
fs
call
inc
pop
pop
xchg
cmc
push
mov
fstp
loop
lods
or
out
mov
lods
adc
lock
ins
popf
inc
xchg
std
(bad)
in
out
jno
addr16
mov
popa
adc
nop
cmps
add
leave
ret
push
dec
aam
push
retf
aad
cmp
xchg
push
or
in
pop
and
adc
push
cdq
popa
and
cmp
xor
shr
rcr
cmps
inc
and
pusha
pushw
outs
mov
mov
lods
scas
mov
mov
and
popa
popa
iret
div
pop
fadd
or
dec
mov
fwait
fwait
xor
popa
fwait
into
fistp
dec
xchg
jne
out
push
jmp
out
in
aam
les
add
pop
or
push
push
(bad)
std
ret
pop
leave
mov
cmp
ror
data16
ror
and
outs
add
or
imul
push
in
pop
jnp
inc
cmps
push
shl
fnstsw
xor
(bad)
push
push
mov
inc
test
cmp
ret
out
xchg
(bad)
sub
cmps
dec
inc
imul
mov
mov
mov
push
xchg
scas
cs
cmp
xlat
dec
mov
inc
sub
outs
fidivr
cmps
les
aam
mov
scas
in
dec
adc
pushf
pop
fidivr
out
hlt
sub
ds
jl
hlt
mov
int3
sub
adc
js
sahf
rcr
sub
inc
dec
jmp
pop
mov
and
scas
ret
push
sub
add
js
gs
out
data16
add
ja
aas
ret
mov
dec
loope
fsub
aad
loopne
mov
adc
(bad)
out
fcmovnu
test
add
scas
push
or
xor
retf
fwait
inc
stc
es
aas
xchg
pop
sahf
add
xor
add
imul
xor
loopne
cmp
cmp
aaa
jmp
sbb
cmp
ins
pop
pop
pop
push
sbb
jb
mov
mov
or
movs
or
cmp
mov
shl
mov
in
add
cmp
mov
cdq
mov
pop
cmp
add
fadd
scas
sub
shl
outs
push
inc
push
popf
adc
xchg
mov
mov
lods
aam
inc
fidivr
mov
mov
fnstcw
es
mov
ja
push
add
popa
rcr
shr
stc
in
push
mov
mov
arpl
inc
mov
dec
aad
mov
xchg
in
push
pop
out
or
sub
add
sub
dec
pop
aaa
push
xlat
jmp
unpcklps
cdq
repz
adc
xchg
aam
pop
mov
rcl
repnz
add
in
dec
ds
pop
mov
stos
add
fmul
mov
pop
rcr
mov
pop
outs
sbb
sub
cdq
es
sbb
(bad)
setp
outs
add
adc
or
das
mov
sahf
cmp
push
enter
adc
jmp
arpl
mov
cmp
movs
fadd
out
pop
loop
push
sub
shl
(bad)
in
xchg
jl
dec
mov
ror
jl
iret
test
or
sbb
lods
(bad)
fld
or
lds
cli
push
lds
lock
jae
jo
sahf
sbb
xor
int3
pop
in
in
shr
cdq
iret
cmp
cmp
das
cli
pop
mov
mov
les
js
test
inc
sub
add
shl
and
pop
xor
pop
cmc
mov
(bad)
(bad)
pushf
or
inc
mov
jl
adc
pop
push
xchg
shl
fnstsw
psraw
xabort
or
cmps
call
imul
add
stc
aas
ja
leave
jno
sbb
sub
jae
inc
dec
sti
(bad)
cld
test
mov
loopne
dec
or
fsub
cs
dec
mov
jmp
pop
sysexit
jp
loope
popa
test
sub
mov
repz
sbb
cmp
mov
ret
(bad)
pop
cmp
fcomp
imul
pop
jno
aam
jle
and
imul
sbb
gs
fcomp
push
inc
test
icebp
pop
sub
mov
xor
mov
(bad)
fs
(bad)
lods
repnz
pop
push
pop
shl
daa
mov
cmc
call
or
add
mov
pop
aad
int3
dec
mul
jle
push
and
sub
mov
imul
sub
leave
sbb
retf
push
(bad)
cmp
xchg
out
imul
outs
stos
ins
sbb
and
mov
cmps
mov
jne
mov
fst
outs
js
call
repnz
sbb
iret
cs
sub
movs
pop
add
fwait
jecxz
ds
retf
jp
dec
inc
cs
jo
inc
or
(bad)
or
mov
(bad)
nop
jle
cmp
test
ins
cwde
enter
push
cwde
fadd
movs
test
fdiv
imul
stc
adc
cmp
cmp
pushf
cmp
adc
add
jns
jnp
inc
push
xor
push
into
ret
cmp
mov
in
dec
cmp
(bad)
jb
sti
cmp
cs
div
sub
lds
shl
sub
mov
or
sbb
xor
retf
adc
jg
pop
mov
daa
in
outs
fdiv
hlt
in
mov
add
add
sbb
jmp
or
dec
push
sub
mov
in
in
jno
adc
leave
inc
(bad)
mov
xchg
leave
push
sbb
loope
or
sbb
movs
dec
jl
sbb
mov
mov
arpl
repz
mov
and
jg
sub
lahf
gs
shl
daa
lock
push
stc
shr
xlat
movs
retf
add
cs
jmp
dec
int3
(bad)
scas
ja
sub
(bad)
leave
push
mov
(bad)
add
xor
cmp
xchg
adc
xor
mov
add
mov
dec
mov
cmp
jno
addr16
(bad)
sub
(bad)
sbb
add
jbe
mov
push
mov
aas
sbb
dec
bound
inc
out
xchg
cli
int3
xor
adc
xchg
fimul
dec
push
pusha
xor
bnd
mov
hlt
retf
cs
sub
mov
inc
pop
xor
adc
lock
sbb
xchg
aad
push
out
jp
iret
mov
fbld
loop
push
call
adc
adc
add
cmps
es
dec
and
add
mov
sbb
xor
jne
lea
psllw
xchg
or
lock
movs
add
sbb
into
outs
imul
jp
add
sub
inc
jne
pop
fwait
cmp
push
and
push
stos
pop
lea
(bad)
jmp
repz
mov
retf
or
jae
push
cli
retf
ror
fwait
mov
js
dec
loop
cmp
pushf
jmp
ficomp
or
add
addr16
int
dec
inc
cmp
mov
lds
test
iret
int3
(bad)
cmps
mov
jns
jns
add
stos
xchg
sbb
xor
gs
int3
in
jle
mov
xor
sahf
scas
dec
push
mov
jb
dec
imul
and
in
jno
dec
sub
dec
into
push
sbb
sub
in
inc
in
in
ret
add
mov
gs
shr
sub
jmp
inc
test
xor
je
cmp
test
outs
aam
int
sub
sbb
sbb
dec
mov
mov
fld
test
loop
into
data16
and
popa
out
jg
std
xor
pop
lods
scas
loop
gs
sub
inc
idiv
out
pop
movs
ins
pushaw
xchg
or
jecxz
xchg
adc
shl
and
repnz
enter
test
pop
(bad)
jmp
scas
jne
adc
shl
cmp
cmp
cld
mov
movs
inc
test
or
push
or
mov
adc
and
out
lea
mov
xlat
sbb
hlt
inc
fsub
adc
outs
mov
add
lahf
aaa
mov
jb
jo
pop
in
les
dec
test
cli
ror
cmc
pop
mov
test
pop
rcr
xlat
add
and
and
lods
cmp
cmps
and
and
mov
jle
inc
stos
xchg
mov
add
idiv
mov
sbb
pop
repz
idiv
clc
push
xor
xchg
icebp
test
xchg
sbb
xchg
adc
mov
mov
inc
stos
cs
mov
xor
adc
inc
push
inc
fistp
movs
mov
aaa
adc
(bad)
push
jle
dec
setne
lock
div
outs
movs
xor
jo
fisttp
fs
push
add
jns
arpl
xor
rcl
adc
dec
das
push
rcr
bound
push
(bad)
fsub
cmp
gs
icebp
sbb
mov
aaa
pop
mov
das
xchg
in
add
mov
adc
and
pop
xlat
xor
stos
in
inc
das
push
mov
sub
and
aam
sub
repz
jae
ffree
adc
scas
scas
popf
(bad)
out
push
jno
jl
pinsrw
(bad)
xor
xor
movs
mov
push
xchg
inc
ja
icebp
jae
mov
push
int
(bad)
jecxz
adc
xchg
cwde
pop
sbb
adc
adc
inc
fwait
cmp
xor
inc
cmps
lods
ss
mov
movzx
xchg
sub
(bad)
push
nop
fcmovu
lods
xor
push
dec
mov
pop
aas
outs
ret
mov
test
mov
dec
push
fcom
out
and
dec
mov
ret
push
in
mov
ret
in
add
and
add
xchg
add
push
jecxz
outs
push
jno
mov
(bad)
mov
cmps
and
aaa
pop
sbb
popf
xor
mov
xor
(bad)
lods
iret
mov
xor
pop
fstp
das
retf
jp
sti
fbld
xchg
stc
fbstp
cmp
add
xor
xlat
popa
pop
xchg
outs
and
fdiv
jmp
fild
push
inc
push
dec
inc
cmp
repz
sbb
xchg
lahf
push
lds
inc
les
in
shl
inc
out
jg
and
jle
(bad)
test
pop
push
aaa
pop
(bad)
mov
or
mov
and
push
pop
push
cdq
icebp
and
xor
adc
or
(bad)
lahf
dec
sub
fdiv
retf
inc
xor
pushf
jae
inc
pop
xchg
es
test
pop
fsubp
add
xor
inc
inc
test
mov
retf
pop
adc
lahf
jb
pop
or
ss
adc
xor
repz
repz
push
or
stos
and
stos
ret
add
(bad)
push
stos
pop
sbb
pop
popf
dec
or
jmp
mov
inc
test
int
xor
mov
xchg
inc
push
xchg
lods
jb
int3
adc
inc
sbb
xchg
jmp
rcl
push
mov
jg
pusha
enter
cmp
push
arpl
add
ret
icebp
sub
add
push
push
jecxz
sub
xor
pop
test
push
sbb
stos
cmps
loop
lods
add
jmp
mov
inc
sub
pop
push
pop
sub
adc
adc
pop
pop
pop
es
cwde
push
movs
or
xchg
xor
inc
pop
fwait
cmp
icebp
mov
ficom
loope
cmp
jae
push
xchg
shl
and
aam
jae
jge
not
jge
mov
or
jg
addr16
dec
in
sbb
lods
pushf
push
sbb
push
cmp
xor
sbb
scas
pop
scas
into
sbb
fcomp
ficom
push
adc
jmp
sbb
lea
xor
jmp
repz
dec
and
push
xor
jbe
jl
dec
push
daa
add
call
jecxz
xchg
cmp
sar
push
jnp
repnz
sub
fsub
sar
ja
and
fnsave
aad
pushf
add
out
jne
push
fnstsw
(bad)
push
jmp
shl
test
dec
or
push
int3
xchg
inc
fnstsw
(bad)
movs
inc
and
mov
aaa
stos
fs
cmp
mov
pop
div
(bad)
cmp
sar
sahf
mov
add
adc
xchg
ret
and
adc
ret
pop
(bad)
jbe
jbe
ss
xchg
push
rcr
pop
pushf
pop
cmc
shl
sbb
pmulhuw
jno
add
(bad)
popf
bswap
xchg
sbb
sub
fnstenv
lea
xor
add
dec
jl
in
xor
jle
pop
data16
and
jl
in
push
xor
jg
aas
push
xor
xchg
(bad)
outs
fwait
iret
aaa
(bad)
iret
dec
in
pop
adc
cmp
rcl
das
leave
fcom
popa
adc
xor
mov
cmp
pop
xchg
div
inc
lods
(bad)
jmp
out
push
cmps
ss
jp
pop
shl
ds
fisttp
cmp
sti
and
xor
jns
jl
aam
dec
sahf
jecxz
or
and
sub
test
or
xor
daa
push
cmps
lock
std
arpl
gs
mov
repnz
retf
adc
dec
push
pop
ja
jno
or
or
dec
jmp
fs
mov
jbe
inc
add
idiv
and
dec
icebp
adc
iret
(bad)
lds
sbb
(bad)
call
pop
push
xchg
mov
adc
cmp
fistp
retf
mov
push
stos
ja
(bad)
mov
aas
adc
mov
rcr
outs
retf
cmp
xchg
adc
mul
cdq
jge
lods
ss
rol
mov
inc
shl
sbb
add
xlat
mov
test
das
xchg
jne
cmp
push
movs
push
in
inc
pop
enter
in
test
mov
loope
sbb
in
ja
pop
stc
pop
xor
ss
adc
jmp
(bad)
ins
mov
push
jae
or
sbb
ror
jo
push
call
call
jae
call
sbb
out
repnz
xchg
adc
sub
nop
inc
test
outs
pop
mov
adc
jecxz
sub
push
sbb
pop
cmp
leave
pop
fidiv
fbstp
mov
push
xor
mov
and
fsubr
adc
mov
or
inc
sahf
ror
(bad)
sti
pxor
and
shl
adc
push
push
adc
or
test
sub
mov
(bad)
je
push
int
lea
repnz
sar
cmp
sub
test
out
jns
(bad)
cmp
inc
test
and
pop
cmp
out
into
inc
push
icebp
icebp
mov
add
addr16
loopne
push
retf
xor
aaa
sar
in
mov
and
mov
and
aad
es
cmps
mov
fdivr
jo
and
ret
stos
mov
enter
dec
xchg
push
aaa
scas
in
inc
idiv
push
out
pushf
sbb
pop
iret
fcmovu
rcr
stos
mov
push
sub
ror
retf
dec
fwait
xchg
jb
mov
hlt
xchg
mov
push
dec
(bad)
jg
sbb
cmps
call
xchg
mov
xlat
imul
aaa
scas
and
xor
inc
test
pusha
fisttp
cmp
cli
sub
cmps
xlat
outs
mov
add
jns
out
pop
std
jns
push
add
cmp
not
enter
or
inc
mov
(bad)
add
xchg
mov
pop
scas
xor
or
jo
call
aas
leave
(bad)
and
in
and
popf
jae
dec
xor
das
aad
fst
repz
in
adc
lds
jno
cli
sti
inc
push
(bad)
es
xrelease
imul
(bad)
popa
push
cli
pop
mov
add
les
cdq
test
mul
xchg
sub
and
clc
pop
mov
test
mov
mov
mov
rcl
push
mov
gs
icebp
sar
mov
ret
mov
scas
inc
fdivrp
ss
ret
daa
pop
(bad)
mov
add
or
idiv
lds
mov
clc
mov
ss
sbb
arpl
ficom
aam
adc
pop
fiadd
dec
in
sub
cmp
aam
loope
xchg
pop
or
loop
daa
add
cmp
adc
es
or
shl
nop
or
add
sbb
jb
nop
mov
sbb
or
(bad)
or
(bad)
sti
jge
sub
or
stc
jne
(bad)
in
imul
cmp
adc
adc
adc
jge
pop
les
popa
sbb
and
push
cmp
xor
addr16
xor
cmp
push
pop
dec
and
xor
fstp
mov
addr16
test
sbb
jb
push
cmps
sub
add
sbb
or
mov
or
xchg
test
xchg
(bad)
jb
repz
into
and
mov
add
imul
outs
sub
imul
aas
out
mov
xchg
jle
adc
and
sbb
arpl
jmp
pop
stos
or
lods
adc
pop
fnstsw
or
xchg
push
ret
dec
hlt
stos
pop
cmps
xchg
test
dec
sub
xchg
sub
jne
mov
sahf
mov
leave
and
jb
pop
data16
sub
jbe
enter
mov
jo
mov
and
std
jbe
aas
jmp
mov
lock
mov
mov
in
mov
ret
mov
stos
and
adc
xor
pop
repz
push
push
jge
int
or
jb
sahf
in
int
or
and
pop
shr
sbb
shl
pop
mov
xor
fcmovu
inc
retf
mov
div
cwde
jmp
nop
aad
fcomp
jno
or
das
test
ret
(bad)
xor
repz
pop
add
xlat
jl
mov
out
(bad)
cld
bound
fistp
mov
mov
scas
jg
cli
retf
sub
int
push
push
inc
std
popf
add
ds
stos
jmp
(bad)
nop
sbb
pop
cwde
xor
jmp
int3
gs
xor
clc
dec
inc
mov
gs
fdivp
xchg
movs
xor
out
out
inc
push
jbe
je
pushf
adc
mov
retf
pop
adc
inc
sub
cmp
sar
fisttp
dec
xchg
inc
mov
add
in
neg
pop
push
lea
xor
mov
pop
xchg
mov
jne
jnp
and
adc
cli
nop
fist
mov
push
mov
imul
pusha
jle
ins
xor
imul
(bad)
pushf
adc
fidivr
les
fst
or
cmps
inc
(bad)
jmp
sub
jmp
test
mov
xchg
jecxz
push
push
stc
out
jl
(bad)
fwait
retf
sub
gs
hlt
adc
mov
push
scas
dec
adc
jl
test
jle
ret
sub
inc
or
pop
loopne
xchg
ret
in
mov
(bad)
inc
in
xchg
lock
inc
and
jp
pop
leave
add
mov
sub
fistp
xlat
xchg
xchg
sub
ficom
ret
pop
das
test
bound
jl
fwait
xchg
repz
bound
push
pop
mov
sbb
sbb
call
cwde
mov
aam
sub
push
in
xchg
(bad)
push
inc
mov
in
pop
jecxz
ret
mov
jbe
or
xchg
rdmsr
lds
les
mov
mov
and
sub
nop
aad
push
xchg
sbb
outs
or
aas
cmp
inc
xor
dec
retf
push
stc
add
addr16
push
jmp
jecxz
mov
mov
addr16
mov
adc
inc
cs
jp
test
push
test
bnd
dec
pop
data16
lods
dec
sub
sub
das
lds
out
cmp
cmp
out
test
mov
or
push
movs
int
aam
or
outs
loopne
dec
nop
cmp
ds
push
addr16
or
and
fld
aaa
imul
pop
cs
fidiv
(bad)
cmp
(bad)
cmp
(bad)
in
pop
pop
jp
jmp
and
sub
repnz
shl
jnp
dec
fdiv
fist
mov
add
or
add
inc
pop
jo
ins
cmp
scas
jne
sbb
popa
xchg
inc
mov
daa
repnz
push
fcmovu
inc
add
fstp
stos
pop
rcl
or
repz
not
psubsw
stc
into
and
retf
push
adc
cmp
mov
mov
mov
mov
leave
addr16
cmp
sbb
call
dec
xchg
sub
test
push
inc
repnz
aas
xchg
adc
cli
pop
mov
out
enter
or
fadd
mov
(bad)
shr
ss
lea
jns
lock
cmp
jo
inc
push
inc
data16
mov
ds
xlat
in
movs
sbb
or
jno
clc
xor
call
adc
(bad)
aas
push
push
add
inc
xchg
and
test
dec
mov
or
nop
(bad)
jb
push
mov
sub
in
pop
cli
sub
lods
sub
stos
scas
xchg
retf
lods
pop
sbb
ror
add
mov
aas
and
popa
pop
test
cmps
adc
data16
mov
xchg
xchg
push
dec
in
js
(bad)
mov
dec
std
push
dec
cmps
test
inc
out
hlt
xchg
mov
jb
sub
loope
or
jle
inc
lds
push
rep
pop
mov
cmc
add
jmp
cmp
in
dec
dec
dec
std
ins
int
leave
dec
mov
push
pop
test
cmp
xchg
stos
pop
mov
movs
daa
mov
leave
mov
test
cs
sbb
fsubr
das
gs
and
and
mov
xchg
call
movs
xchg
data16
cmps
add
out
jae
adc
xor
test
dec
mov
inc
cmps
add
rol
ins
in
cmp
jl
adc
(bad)
mov
xor
addr16
mov
idiv
jb
(bad)
in
add
and
jnp
or
sbb
pop
inc
xchg
outs
adc
cmp
dec
sub
retf
or
hlt
dec
lds
mul
out
jg
jmp
dec
pop
mov
sub
push
jmp
test
ret
or
dec
ror
call
push
clc
mov
or
loop
in
inc
add
std
xchg
icebp
mov
lds
iret
xchg
and
test
xor
dec
push
add
xor
or
jmp
sbb
ins
sub
dec
pop
hlt
adc
cmp
call
pop
rcl
inc
loopne
dec
fmul
xchg
or
push
(bad)
sub
inc
xchg
sub
sub
pop
xchg
test
lods
or
ror
cdq
shl
jmp
movs
test
(bad)
jno
pop
or
movs
mov
(bad)
push
leave
pop
jae
xor
sub
out
or
xchg
mov
pop
jle
jno
mov
retf
imul
jae
cld
cmp
jge
fild
addr16
daa
add
push
iret
imul
in
xlat
pop
aas
dec
fwait
sahf
shr
aam
jo
mov
cmps
aad
jmp
push
lock
add
(bad)
addr16
(bad)
addr16
push
sbb
outs
(bad)
jmp
lds
nop
mov
add
(bad)
pop
ficom
sub
addr16
(bad)
call
or
lock
inc
cdq
or
lods
adc
cs
fld
inc
call
push
pop
js
daa
xor
xor
or
imul
imul
adc
or
mov
xor
push
mov
popa
jecxz
loop
pusha
stos
mov
or
mov
cmp
aas
(bad)
cmp
dec
inc
lea
(bad)
cmp
dec
arpl
inc
mov
dec
into
idiv
push
addr16
mov
shr
cwde
push
sub
mov
push
hlt
lea
mov
aas
in
sbb
xchg
and
sub
and
or
popf
jmp
add
mov
push
daa
aaa
adc
pop
add
jle
mov
sub
mov
dec
into
repz
int
sbb
push
fdivr
mov
in
push
adc
out
shl
mov
cdq
push
xchg
repz
push
shr
mov
addr16
xor
outs
jp
xlat
push
mov
and
pop
and
bound
sub
sbb
xor
dec
in
sbb
fmulp
cmps
mov
push
out
outs
popf
push
iret
loopne
pop
scas
pop
pop
stos
sub
mul
jg
pop
dec
fadd
lds
xchg
mov
sbb
sub
mov
push
js
cmp
sbb
lds
lods
push
int3
jmp
jp
(bad)
not
loop
int
pop
pushf
sbb
pop
ficom
ins
test
sti
push
mov
test
and
repnz
movs
imul
mov
push
cs
mov
pushf
mov
cmp
lea
cmp
jmp
and
adc
xchg
sbb
les
stos
out
imul
sub
jae
dec
rol
ins
sbb
test
jne
ins
jae
push
sub
and
or
sub
dec
xchg
std
jns
push
test
pop
ret
shufps
(bad)
mov
test
dec
inc
xchg
dec
push
jmp
mov
fisttp
push
and
cmps
jno
in
jns
cmps
pop
xchg
outs
ret
pop
(bad)
pop
xlat
neg
mov
out
mov
fmul
push
ins
pusha
jmp
mov
lock
push
mov
sbb
(bad)
or
outs
or
add
out
lahf
sbb
iret
push
rcr
sbb
add
fwait
(bad)
fmul
xor
(bad)
jnp
out
lea
jmp
test
stc
pop
dec
dec
out
mov
or
inc
mov
cwde
xor
xchg
aas
jb
and
mov
pop
push
add
dec
push
iret
inc
xor
sbb
cmc
sub
popf
sub
xor
je
mov
mov
xor
adc
imul
mov
cld
dec
popa
out
sub
push
data16
test
movs
ret
lods
call
mov
pop
(bad)
mov
cmp
adc
or
scas
adc
push
adc
test
add
clc
ja
(bad)
mov
jne
call
lods
out
jmp
fmulp
sub
jecxz
in
push
popa
dec
out
dec
mov
test
(bad)
stc
in
mov
fs
(bad)
mov
add
push
ja
lahf
aad
mov
daa
ret
mov
cmp
test
call
sub
stc
call
cmps
xchg
mov
imul
sbb
ins
mov
xchg
inc
int
cwde
jne
or
test
sbb
retf
xchg
call
lods
xchg
or
lds
movs
outs
or
push
nop
out
(bad)
xor
ror
cmp
out
les
jbe
sub
ficom
dec
adc
sbb
inc
call
mov
out
fadd
mov
dec
cmp
mov
in
les
outs
or
data16
mov
and
and
cs
sbb
sbb
inc
cmp
(bad)
fwait
inc
sbb
test
push
jmp
int3
fisubr
mov
inc
jg
adc
cdq
xchg
jno
std
arpl
cmps
jge
pop
xor
pop
outs
ret
or
cmc
arpl
daa
daa
fs
(bad)
ret
xor
mov
mov
loop
adc
pushf
or
repnz
mov
in
xor
aas
xlat
or
adc
add
push
out
xor
pop
jns
daa
enter
mov
jmp
adc
cmp
pop
fadd
shl
in
mov
jp
sub
(bad)
fild
movs
stos
gs
outs
pop
cs
adc
jmp
dec
sub
cmp
stos
xor
cmp
push
push
xchg
mov
mov
stos
mov
mov
push
xlat
or
cvtpi2ps
push
xlat
dec
cmp
sbb
test
sub
jae
cs
xchg
inc
(bad)
gs
pop
leave
inc
pop
mov
data16
jge
adc
dec
pop
add
dec
dec
bt
dec
pop
cmps
or
outs
push
xchg
(bad)
inc
xlat
hlt
adc
add
outs
push
cmp
push
mov
(bad)
mov
loopne
mov
mov
loopne
xchg
jp
push
inc
aad
mov
inc
repnz
cmps
and
xchg
add
clc
cmc
sbb
xor
inc
repz
div
pushf
fistp
mov
test
dec
jge
inc
pop
dec
and
fwait
std
sti
push
or
inc
lds
clc
or
cmp
(bad)
cwde
sbb
ret
dec
rol
mov
adc
jb
int3
aam
adc
sub
ja
mov
or
push
jns
pop
push
inc
mov
push
jmp
bound
iret
pop
cmp
sbb
fcomp
dec
ins
repnz
(bad)
call
push
mov
or
jl
(bad)
stos
pop
mov
retf
sub
out
push
mov
adc
xlat
cwde
jmp
adc
and
adc
mov
(bad)
cld
movs
cs
gs
xchg
out
dec
shr
cs
repz
outs
sar
enter
out
lea
sbb
scas
shl
xchg
loopne
dec
shr
cmp
ficom
mov
inc
cmp
mov
sbb
fmul
sbb
xor
fldenv
je
gs
lahf
loopne
cmps
or
ret
jmp
retf
test
xchg
(bad)
push
sbb
add
mov
push
sbb
cli
add
(bad)
(bad)
jae
and
aad
in
or
sbb
dec
cmp
mov
pop
sar
movs
inc
popa
inc
loopne
cld
pusha
sub
pop
jl
aad
mov
(bad)
(bad)
jns
sub
call
lods
adc
fisub
addr16
ins
neg
ret
nop
addr16
daa
fild
push
sbb
jbe
adc
mov
mov
mov
adc
ins
jl
jno
fnsave
pop
fld
and
jmp
lods
inc
retf
gs
jle
and
in
mov
inc
ret
adc
jge
push
test
outs
pop
or
add
movs
cmp
jo
xor
push
bound
jno
arpl
sub
in
je
jg
jl
push
movs
icebp
out
icebp
push
inc
mov
mov
add
outs
popf
sar
jne
sub
les
call
mov
push
sub
sub
dec
inc
stos
jmp
jmp
daa
mov
loop
call
hlt
outs
and
or
clc
aad
loope
cli
and
nop
pusha
mov
pusha
or
pop
call
aas
lds
aaa
ds
cmp
mov
xchg
lods
inc
movs
test
pop
aad
scas
cld
xchg
mov
adc
lea
jne
xcrypt-ecb
cmps
retf
lods
fild
ins
fstp
ins
loope
jbe
stc
xchg
out
sub
jae
lahf
sbb
ja
pop
dec
gs
push
adc
jbe
pushf
and
push
dec
call
ds
dec
push
out
shr
and
xor
pop
movs
out
mov
xor
sbb
mov
or
imul
and
int3
cld
rcl
loopne
xchg
ja
mov
in
push
out
mov
jne
addr16
or
xchg
repnz
lea
mov
add
fidiv
mov
fidiv
jl
(bad)
dec
jae
int
mov
mov
in
rol
xchg
xor
sti
add
jae
mov
inc
or
mov
xor
out
cmp
xchg
fistp
mov
scas
sub
sbb
outs
lods
adc
or
push
fbstp
(bad)
mul
jecxz
xor
dec
outs
sub
xchg
outs
ficom
cld
dec
and
mov
cmp
cmp
mov
mov
sbb
fdivp
sbb
pop
pop
pusha
sub
mov
xchg
inc
fwait
cmp
js
repz
int3
cli
(bad)
out
inc
loope
out
out
mov
inc
dec
mov
push
sbb
pushf
cmp
popf
inc
mov
scas
fwait
repz
sub
gs
mov
cmps
stos
leave
popf
inc
add
ret
jecxz
xor
inc
repz
or
not
or
mov
adc
adc
pop
and
daa
sbb
jl
mov
aas
ficom
dec
inc
xchg
dec
adc
or
retf
mov
or
xlat
lahf
push
scas
push
jo
xlat
adc
sbb
loope
jno
scas
push
aas
or
xor
mov
test
mov
jne
aad
sub
loop
retf
xchg
retf
xor
xlat
dec
pop
fsubr
ds
movs
inc
mov
popa
(bad)
lock
push
dec
stc
xor
push
aas
mov
cmps
dec
test
xor
sub
or
jmp
loope
stos
movs
mov
rcl
xchg
mov
mov
xor
les
imul
mov
not
add
push
popa
aam
mov
sub
push
jno
push
dec
cwde
sar
cli
data16
dec
test
mov
div
lds
jns
fs
aas
ficom
shl
rcr
xchg
lods
arpl
aaa
cdq
adc
jmp
sub
(bad)
iret
das
sub
jl
pop
cdq
sub
bt
ret
and
scas
inc
test
jle
pusha
repnz
shl
retf
cmp
push
and
pop
and
jp
mov
sbb
aam
dec
jp
xchg
jp
cs
mov
out
enter
inc
(bad)
mov
adc
icebp
xor
jle
repz
ins
push
sub
mov
pop
fwait
retf
jmp
inc
or
dec
or
push
int
outs
push
test
iret
outs
les
mov
inc
mov
mov
and
xor
xchg
stos
sbb
in
dec
test
cdq
push
sbb
in
(bad)
enter
std
mov
aam
int
loopne
add
xchg
or
aam
sub
mov
xchg
call
pop
xor
sub
stc
mov
fild
(bad)
lock
shl
mov
mov
xchg
and
jne
jo
aaa
adc
outs
ret
inc
xchg
mov
(bad)
call
in
jg
icebp
cld
and
sti
out
dec
adc
mov
mov
(bad)
jne
pop
arpl
call
add
push
retf
xchg
and
or
cmc
out
mov
inc
mov
sub
and
mov
mov
(bad)
inc
lods
push
cli
test
and
cdq
adc
cmc
mov
js
lahf
test
jbe
std
dec
inc
xor
push
icebp
in
leave
xor
jno
cmps
scas
xchg
mov
dec
xlat
cmps
into
les
aad
jl
lock
sub
ja
movs
and
and
nop
mov
mov
mov
push
inc
mov
lahf
ret
imul
sub
dec
ficomp
xor
and
xor
cmps
inc
stos
jno
scas
xor
add
dec
pop
icebp
(bad)
fcomp
les
xlat
cmps
cmps
js
mov
push
xchg
jnp
fstp
popa
cmp
cld
adc
ja
rcl
mov
je
push
jge
pop
fisubr
xchg
xlat
sahf
jg
add
sub
fidiv
mov
sar
fmul
sbb
cmc
gs
pusha
add
xlat
lds
loop
in
push
add
mov
pop
lods
adc
jae
add
mov
jo
dec
jmp
inc
pop
and
adc
faddp
mov
fwait
inc
cmps
mov
and
cmc
outs
push
stos
or
jp
or
addr16
pop
cmp
scas
rol
hlt
push
jg
sbb
sub
ret
call
sbb
push
xor
not
out
pop
sub
adc
cmp
int3
aam
int
jle
mov
(bad)
popa
pop
mov
out
enter
push
popf
mov
pop
not
and
sbb
mov
pop
out
scas
lock
test
outs
imul
and
fcomp
(bad)
mov
dec
pop
je
xchg
rcr
loopne
sahf
and
jno
shr
inc
xchg
mov
movs
sub
cmps
idiv
icebp
and
jae
ret
fsub
add
shr
inc
cmp
mov
dec
(bad)
aad
mov
js
xchg
scas
push
cmp
xchg
mov
pusha
and
loopne
mov
test
add
mov
push
push
sub
stos
mov
outs
std
push
stc
jmp
pushf
dec
iret
xchg
xchg
and
cmp
xlat
inc
xor
fisttp
retf
in
pop
lock
(bad)
int
jp
sub
jae
les
jb
sub
gs
mov
fist
outs
les
not
inc
mov
mov
cmp
out
mov
enter
sbb
dec
push
jns
mov
(bad)
pop
ss
bound
test
out
dec
fimul
imul
sbb
pop
out
push
call
xor
sub
pop
pop
jle
jle
pop
loop
icebp
stos
(bad)
jnp
dec
mov
sbb
jae
sub
and
ror
pop
jno
mov
rol
xchg
or
adc
(bad)
mov
inc
pop
cmp
mov
test
or
adc
xchg
cmp
dec
sub
(bad)
into
cmc
mov
repnz
aam
bound
(bad)
fidivr
sbb
fs
dec
push
not
fild
pop
mov
push
jg
mov
in
stos
in
xchg
test
ror
mov
ja
sub
dec
pop
pop
or
clc
mov
stc
and
(bad)
je
cmp
sbb
jb
add
inc
mov
pop
in
sbb
outs
pop
aaa
or
xchg
push
sbb
enter
fscale
sub
jae
int3
outs
out
les
xor
sub
les
fcomp
lods
xchg
xor
xor
repz
dec
mov
lahf
or
jmp
mov
add
cmps
outs
mov
and
imul
test
jl
fwait
lahf
lock
loop
inc
cmp
stos
sub
cwde
fisttp
xchg
fistp
scas
fimul
pop
cmps
loop
pusha
sbb
dec
and
lea
call
and
xchg
loope
pop
add
mov
and
adc
sub
das
xchg
mov
fwait
nop
ss
fidivr
mov
or
imul
push
and
cmp
in
xchg
(bad)
pusha
sbb
mov
ds
call
ret
sub
mov
sti
in
pusha
push
jno
fmul
dec
jne
jo
cmc
mov
sub
bnd
jae
jae
repz
cmp
ror
test
add
in
sbb
xor
lods
ret
lea
adc
mov
in
cld
dec
mov
inc
sbb
loop
add
dec
pop
dec
leave
enter
popf
lock
sar
outs
sub
inc
mov
stos
xchg
sbb
call
xor
sbb
outs
cmp
add
mov
dec
fs
mov
pop
jae
adc
cdq
hlt
js
ins
add
iret
sar
mov
sub
into
mov
jno
xchg
int3
test
push
(bad)
jg
mov
in
or
fistp
inc
retf
mov
jmp
xor
jne
or
or
orps
push
or
sub
in
arpl
mov
mov
shr
in
or
inc
inc
ffree
mov
xchg
mov
push
sub
jge
and
div
mov
dec
jge
sbb
sub
xor
popa
mov
into
xor
mov
ja
outs
push
das
outs
sbb
and
(bad)
cmp
mov
or
push
xor
mov
(bad)
shl
leave
push
fimul
mov
xor
dec
dec
jo
mov
dec
cmp
mov
fld
xchg
dec
cmp
cmp
jae
push
adc
push
lea
push
jnp
xor
fdivr
cli
jno
pop
fbld
inc
dec
cld
fwait
push
iret
mov
int3
cmps
inc
mov
daa
cmc
or
push
stc
test
dec
jmp
push
icebp
jmp
ins
in
rol
out
loope
dec
cmp
mov
cwde
inc
call
jge
fwait
out
(bad)
jmp
(bad)
xchg
outs
mov
mov
ja
jb
jp
outs
mov
push
loopne
aaa
inc
mov
push
mov
and
arpl
ja
mov
sbb
lods
adc
xchg
shl
mov
scas
retf
loope
das
push
or
adc
xor
or
xor
shl
fldcw
inc
dec
ss
adc
(bad)
jmp
sub
fld
jno
iret
arpl
adc
mov
push
mov
xchg
ins
fnstenv
popa
sub
div
sti
mov
dec
es
dec
xchg
shr
jl
pop
out
rcl
lock
mov
iret
or
cmp
outs
xor
(bad)
mov
(bad)
daa
in
push
sbb
mov
gs
xchg
pop
dec
pop
pop
daa
out
cmps
out
(bad)
mov
ins
retf
jno
movs
cmp
arpl
mov
(bad)
rcl
shl
in
loop
loopne
jb
sub
jmp
ret
xor
ss
or
pusha
or
push
pop
jmp
dec
fiadd
pop
sub
sbb
jo
arpl
popa
imul
sbb
sti
inc
mov
or
(bad)
or
sbb
(bad)
pop
jno
and
jecxz
(bad)
test
loopne
test
jmp
pop
cli
pop
fistp
xchg
ror
push
fldl2t
inc
cmc
call
push
xor
call
aas
into
arpl
xchg
outs
lea
out
push
pop
pop
xchg
pop
adc
pop
neg
jo
outs
inc
lahf
stc
ds
sbb
push
shl
sub
mov
cdq
js
je
dec
inc
test
mov
inc
jbe
cmp
dec
adc
dec
dec
mov
bound
push
mov
sbb
adc
in
pusha
aas
mov
and
shl
mov
stc
shr
movs
int
in
cmp
pop
js
lds
test
movs
push
jbe
jno
fisubr
jo
retf
popa
cmps
and
popf
retf
gs
ret
xchg
sub
xor
mov
mov
int
shl
and
mov
and
mov
dec
cmc
inc
nop
fcomp
fs
dec
and
or
inc
mov
adc
push
repnz
jmp
and
sahf
sbb
push
fcomp
leave
retf
sbb
js
mov
lock
mov
fnstenv
adc
mov
(bad)
mov
stc
loope
push
xchg
cmps
inc
xor
ror
in
push
outs
xor
vmwrite
jmp
cmp
stos
lea
ss
loop
xchg
jle
mov
sbb
inc
push
sbb
jns
jecxz
fld
in
xor
arpl
jmp
out
loopne
sbb
call
push
pusha
sbb
aad
int
xchg
adc
xchg
test
mov
stc
dec
or
call
mov
icebp
sub
cdq
or
ja
xchg
cwde
out
or
sti
inc
mov
pop
sti
iret
cmp
out
(bad)
jnp
outs
in
or
xchg
and
add
dec
js
mov
bound
int
and
mov
ret
pop
xchg
call
fsubr
jnp
out
test
cs
push
scas
ror
imul
shl
sbb
inc
addr16
sbb
inc
rcl
ds
nop
retf
icebp
sub
ja
sub
nop
in
inc
popa
add
push
or
arpl
jnp
sub
pop
sbb
(bad)
addr16
xchg
fs
fld
add
xchg
adc
ret
push
xor
xchg
retf
scas
scas
mov
push
push
jp
jno
jbe
mov
cmps
loope
js
ins
daa
and
test
stos
adc
cmp
jb
ja
in
mov
push
sbb
or
loopne
cmp
sar
fisubr
add
xor
mov
cmp
call
push
(bad)
cmp
xchg
fsubp
jmp
pop
push
lea
ins
mov
(bad)
mov
repnz
stos
movs
dec
sar
(bad)
pop
adc
int
sub
out
inc
outs
es
jl
add
out
add
sub
in
pop
ins
add
fs
and
sub
scas
adc
or
call
lods
jo
dec
cmp
lsl
sbb
or
call
push
and
ficomp
or
sub
addr16
or
aas
daa
retf
pop
sub
push
aas
add
mov
mov
ins
das
lea
jno
inc
xchg
test
cmp
in
mov
sub
jg
inc
xchg
ret
sbb
fisub
out
xor
loopne
push
sbb
mov
int3
stc
mov
sub
pop
xchg
inc
sti
into
retf
and
pop
inc
mov
push
jg
js
(bad)
cs
push
fdivr
stos
lods
je
or
lods
js
push
es
adc
mov
js
popf
dec
add
popf
or
mov
jle
inc
mov
movs
add
cmp
sbb
push
jl
add
rcr
mov
mov
adc
lahf
sub
movs
or
aam
mov
sbb
into
(bad)
adc
in
jae
in
jmp
inc
loopne
mov
mov
imul
pusha
fcompp
stc
jl
xor
iret
jo
aaa
push
bound
push
sub
xchg
jnp
cmps
sub
xor
sti
xlat
push
cmp
arpl
out
mov
rdtsc
mov
or
popa
mov
test
mov
sbb
sar
pop
das
fld
(bad)
cld
inc
ins
pop
jmp
jnp
(bad)
clc
in
sahf
outs
mov
and
jecxz
movs
cmp
sti
xor
push
dec
mov
dec
add
sub
dec
xchg
movs
std
push
push
mov
push
sub
sub
sub
nop
idiv
out
into
rcr
into
popf
(bad)
xor
xchg
pusha
mov
dec
mov
cmp
ja
call
xchg
jmp
jmp
popa
xor
push
mov
push
repz
cmp
iret
push
das
inc
movs
ret
cld
and
cwde
lods
out
dec
stc
cmp
adc
pop
dec
je
xlat
push
pop
cmp
xchg
or
cmp
fdiv
into
icebp
(bad)
icebp
add
sbb
mov
outs
fwait
mov
lds
aaa
adc
iret
mov
fwait
cli
xor
pop
adc
dec
fistp
ror
movs
inc
push
xchg
arpl
jnp
adc
arpl
ins
ja
cmp
pusha
mov
cld
loop
inc
sub
mov
push
lods
inc
pop
inc
movs
lea
or
xor
cmp
mov
push
push
ins
call
jmp
cmps
popa
lea
lods
nop
mov
aam
mov
rcr
jg
stc
inc
add
(bad)
aad
push
call
(bad)
daa
adc
mov
int
test
ja
lock
jbe
add
aas
xchg
push
loope
mov
shl
bound
mov
mov
gs
sub
icebp
xchg
ins
sbb
mov
rcr
loope
iret
(bad)
cmp
lahf
(bad)
sbb
dec
jecxz
addr16
in
data16
mov
pop
jmp
pop
iret
mov
mov
les
(bad)
jl
xchg
lds
xlat
mov
stos
sub
sub
dec
out
imul
pop
(bad)
arpl
dec
push
add
lods
repnz
xchg
mov
dec
mov
pop
cwde
rcr
mov
xchg
jo
and
inc
inc
popf
mov
adc
nop
out
enter
push
stc
test
or
pop
fst
xchg
(bad)
clc
call
jne
out
(bad)
retf
or
movs
into
stos
cmps
jo
xchg
fld
mov
popf
out
mov
pop
adc
test
dec
jl
mov
cli
sbb
leave
mov
mov
jmp
popa
clc
rol
outs
inc
inc
jmp
stos
sub
stc
retf
cli
(bad)
hlt
mov
daa
xor
int3
or
cmp
pop
cmp
call
add
cmp
mov
dec
out
retf
pop
ja
imul
fild
outs
jmp
xchg
dec
and
aas
js
stos
pop
ficom
adc
cmp
out
mov
aas
jns
loop
repz
sbb
push
pop
jecxz
movs
push
mov
adc
and
xor
sti
ins
in
dec
fadd
push
jne
or
mov
scas
push
mov
rcl
xlat
jmp
mov
addr16
xor
xor
jae
inc
add
cmp
add
push
js
ret
daa
(bad)
pop
out
rol
ror
jge
xchg
mov
mov
cmp
lods
icebp
pop
out
(bad)
xor
cmp
gs
cmps
test
adc
xchg
call
jno
jge
mov
ffree
xchg
cmps
aas
jl
mov
out
lea
adc
mov
mov
jge
(bad)
xor
xor
jg
fucomip
mov
adc
push
mov
and
add
cmpxchg
mov
mov
dec
stc
dec
lea
int
jnp
sub
fimul
push
add
and
pop
cdq
aad
loopne
lods
dec
(bad)
movs
aad
mov
mov
mov
mov
jge
add
push
das
jmp
sbb
icebp
mov
sub
mov
shl
leave
mov
leave
cmp
xchg
out
loop
sbb
push
(bad)
xchg
pop
cmp
sub
cdq
es
mov
movs
sbb
or
les
fwait
ds
sti
aaa
repnz
and
jecxz
ret
in
ror
mov
dec
pop
(bad)
jmp
dec
add
aaa
mov
adc
sub
jnp
lahf
nop
fnstcw
xor
jp
test
shl
pop
jl
push
dec
xor
push
lea
cli
bnd
test
retf
lahf
jb
push
mov
lea
clc
cli
xor
std
mov
inc
imul
xchg
xor
cmp
and
mov
push
call
shr
bound
push
xor
hlt
push
imul
dec
adc
mov
stc
push
mov
movs
aas
adc
cmp
mov
pop
mov
ret
and
(bad)
push
mov
data16
lds
and
cmps
dec
repnz
push
out
stos
xor
cwde
pop
add
into
inc
adc
mov
test
push
arpl
mov
sub
(bad)
fcomp
mov
and
test
xchg
inc
mov
xor
push
mov
cmc
jle
mov
jp
shl
imul
cmp
cmps
fisttp
loop
xor
push
pop
push
ds
cmp
sti
repnz
js
iret
jno
(bad)
xor
arpl
fadd
fsubr
call
repz
mov
bound
and
(bad)
xchg
xor
pop
push
(bad)
push
mov
nop
aam
jns
movs
pop
fsub
dec
es
xchg
jb
test
pop
jb
inc
pop
(bad)
or
retf
adc
cmps
ins
cmps
fadd
(bad)
cli
int
shr
jbe
repz
retf
lock
pop
aaa
fcom
adc
push
sbb
dec
and
mov
and
sub
xchg
mov
pop
mov
dec
scas
pop
repnz
mov
and
dec
arpl
into
xchg
repz
adc
push
jno
addr16
dec
(bad)
cld
push
ror
sub
sahf
sub
sbb
push
int
add
sti
cdq
xchg
mov
js
cmps
cld
sbb
cld
mov
cmps
in
popf
cmp
leave
lock
mov
into
or
sub
mov
sub
call
hlt
(bad)
jnp
and
mov
hlt
or
(bad)
into
push
or
dec
mov
aam
fsub
in
adc
repnz
clc
sbb
out
push
jmp
pop
mov
adc
jb
or
add
xchg
clc
and
int3
data16
retf
std
pop
into
mov
xor
or
lahf
and
add
sbb
mov
enter
dec
in
push
jmp
lds
stos
mov
into
in
cdq
lock
je
gs
in
imul
sar
scas
jle
push
jo
outs
xchg
outs
in
les
sub
dec
loop
xchg
adc
mov
shl
imul
ficomp
aam
fild
mov
leave
inc
pop
sub
push
xchg
pop
cmp
inc
test
out
adc
arpl
mov
test
out
lahf
mov
push
cmp
(bad)
mov
cmp
jmp
sbb
mov
pop
gs
mov
mov
test
(bad)
jb
dec
sbb
cwde
xchg
stc
push
ds
int3
mov
(bad)
xchg
outs
retf
fld
push
push
mov
pop
das
inc
add
jle
leave
scas
mov
mov
dec
clc
stos
inc
shl
arpl
test
and
mov
ds
xor
jne
lods
enter
in
imul
fxam
adc
add
ret
sub
sbb
dec
inc
jg
pop
push
sti
sub
dec
cmc
add
mul
mov
mov
nop
popa
and
sub
jg
jmp
xor
lock
and
xchg
pop
fdiv
adc
jbe
fild
out
sbb
shl
sbb
pop
call
pop
mov
sub
and
sub
frstor
(bad)
xchg
mov
(bad)
mov
push
stos
xor
mov
cmp
push
leave
stos
mov
sahf
and
sub
fcomp
ret
sbb
adc
push
push
pop
jnp
ins
test
mov
add
mov
(bad)
xlat
jnp
cmc
adc
es
ins
push
aad
mov
int
shr
add
cdq
cmp
retf
and
loop
jns
aad
pop
outs
(bad)
neg
xchg
ins
mov
lods
push
xchg
sbb
popa
mov
cdq
in
lahf
fld
dec
ja
imul
mov
sub
mov
sub
imul
xor
adc
aaa
out
dec
(bad)
fcmovnbe
jbe
into
loopne
adc
or
inc
mov
sahf
push
pop
xchg
push
bound
sbb
dec
lock
fisubr
pop
cmps
or
mov
loop
inc
jp
xchg
mov
jge
pop
mov
mov
and
xchg
sbb
sbb
add
jbe
push
mov
sbb
scas
fld
sub
jno
mov
mov
cmp
jns
sub
stc
retf
(bad)
js
push
cmp
dec
pop
ret
sbb
adc
loopne
(bad)
stos
cwde
stc
movs
mov
jecxz
mov
xor
addr16
rcl
pop
jecxz
mov
aaa
sbb
in
lods
inc
xchg
pop
add
cmp
xchg
pushf
shl
inc
pop
stos
retf
dec
jge
rcr
push
fs
int3
ss
fwait
jecxz
out
mov
inc
inc
push
call
retf
mov
inc
dec
dec
mov
jb
or
push
sub
cmp
fnstenv
mov
test
movs
jmp
mov
cmps
mov
rcr
cmp
cmps
jb
mov
enter
clc
call
pop
and
jmp
(bad)
adc
les
mov
loop
and
aaa
fwait
retf
fcomp
(bad)
mov
mov
lock
sbb
mov
mov
js
jmp
mov
frstor
jmp
adc
xchg
scas
xor
dec
sbb
xor
mov
push
cmps
imul
xchg
mov
cli
push
js
push
and
cld
mov
or
test
imul
imul
mov
rcr
loopne
xor
or
in
div
pop
mov
add
and
jns
leave
sub
cmps
sbb
mov
stos
mov
xchg
fwait
lea
clc
cmp
cdq
popf
and
jae
test
pop
pop
or
nop
mov
leavew
test
aaa
push
push
sub
and
pop
int
mov
sar
xchg
idiv
in
fcom
and
call
cmp
ins
ins
jae
push
adc
ins
ret
or
push
push
mov
pushf
es
add
cmps
mov
fmul
mov
inc
(bad)
sub
sar
cmp
cdq
mov
push
push
sub
mov
mov
in
push
mov
mov
cmc
mov
icebp
in
mov
ja
cwde
jae
mov
jnp
in
jg
retf
mov
daa
(bad)
fcomp
test
loope
mov
call
xlat
sub
cmp
(bad)
or
mov
imul
mov
xor
dec
xchg
push
rol
adc
inc
jno
cmp
push
push
inc
xchg
sahf
(bad)
cmp
pushf
fimul
popf
xor
mov
sti
loope
pop
jg
(bad)
xchg
shr
nop
mov
in
mov
sbb
or
add
int
cmp
inc
jo
es
mov
adc
and
out
movs
in
mov
xchg
fs
call
ret
inc
xchg
push
xor
adc
mov
pop
mov
dec
jns
icebp
je
jl
popf
outs
jbe
nop
test
or
(bad)
xor
sub
mov
ds
retf
mov
retf
mov
data16
out
mov
sub
lahf
adc
mov
jo
sahf
xchg
fstp
dec
push
aas
into
fdivrp
sahf
sbb
fsub
aam
or
xchg
shr
adc
push
jo
cmps
test
adc
mov
jecxz
pop
inc
or
mov
mov
je
loope
movs
scas
jbe
aas
arpl
outs
jecxz
add
call
int
vphaddudq
sbb
sbb
adc
fucomi
dec
bound
sti
dec
inc
stos
sbb
pop
mov
cmp
loope
xor
mov
pop
cmp
sets
sub
sar
loop
and
(bad)
int
sbb
gs
mov
test
or
ret
or
mov
shl
dec
fsubp
mov
push
sbb
lahf
push
jne
mov
adc
sub
je
inc
push
jb
add
push
shl
(bad)
push
xchg
idiv
loopne
out
mov
scas
jmp
xchg
out
dec
pop
movs
cmp
xor
cwde
jmp
xor
pop
mov
rol
scas
ret
xor
pop
mov
sub
mov
(bad)
rcr
dec
mov
fdiv
mov
dec
inc
xchg
sbb
push
mov
ss
mov
cli
and
mov
cdq
(bad)
sub
jle
ja
lods
lods
fist
xchg
mov
add
ss
jmp
xor
fistp
and
(bad)
imul
gs
jmp
icebp
stos
mov
sub
gs
iret
jmp
lds
sbb
sbb
ins
ss
mov
rcl
fadd
push
(bad)
fucom
push
shl
mov
xor
cmp
add
jae
add
scas
pusha
wbinvd
ret
test
hlt
outs
xchg
mov
mov
loopne
jle
xor
aam
outs
psubq
and
lods
mov
rcr
jl
test
rol
mov
xchg
mov
lds
sbb
fwait
or
jae
cmp
stc
dec
ds
in
cwde
push
pop
adc
dec
scas
in
outs
xlat
int
mov
js
enter
loope
lods
adc
add
ins
sub
pusha
xchg
or
cmp
daa
inc
movs
jb
fbstp
sbb
pop
ficomp
adc
aam
xlat
mov
mov
sbb
sbb
inc
jmp
mov
pushf
inc
call
pop
hlt
adc
inc
dec
femms
vdivsd
sub
ret
mov
add
pop
je
jb
mov
repz
call
or
sub
js
cdq
in
fnsave
mov
cli
or
mov
sbb
xchg
mov
call
dec
and
aaa
jecxz
inc
fsubr
and
dec
mov
out
cmp
add
adc
enter
jle
push
adc
dec
or
xchg
pop
fcomp
sbb
inc
std
ss
jmp
outs
in
pusha
xor
sbb
mov
lahf
inc
inc
ins
daa
inc
fld
sti
pop
into
test
popa
imul
jno
inc
daa
shl
pop
cmp
sbb
jecxz
imul
cmp
jge
popa
pop
sub
test
mov
mov
add
into
fisttp
addr16
and
mov
sbb
cmp
bound
add
test
or
out
sub
retf
xchg
or
stos
(bad)
jne
imul
or
je
das
out
shl
inc
adc
fistp
movs
leave
ret
and
in
pop
std
adc
test
adc
push
add
pop
push
add
xor
dec
jne
xor
addr16
test
pop
push
push
ins
jb
ins
rol
mov
jns
dec
aad
inc
xor
popa
sahf
js
ins
pop
sub
in
cld
mov
push
xchg
xchg
scas
(bad)
loopne
cmp
or
xchg
xchg
das
arpl
in
pop
xchg
hlt
sbb
sub
stos
es
fild
pushf
jge
stos
mov
mov
arpl
lea
(bad)
jmp
stos
add
lock
sub
(bad)
out
mov
xor
pop
adc
(bad)
rcl
icebp
mov
mov
sbb
mov
nop
xor
scas
pop
mov
sub
pop
imul
loope
push
xor
mov
sub
aam
sbb
adc
sub
or
adc
dec
out
jle
sbb
jp
and
cmp
mov
sbb
xor
popf
jno
dec
push
inc
sub
dec
pop
sbb
mov
clc
das
data16
pop
dec
out
cli
cmps
xor
xor
jb
sahf
jns
iret
repnz
sbb
jp
mov
retf
ret
pop
cmc
pop
cmc
arpl
fisubr
les
ds
mov
test
outs
fld
push
dec
push
add
fstp
je
fidivr
mov
and
mov
add
pop
sub
adc
imul
ins
lock
jb
cmp
pop
push
jb
js
call
dec
jp
jl
aaa
ins
mov
div
and
inc
cmps
es
sub
enter
rcr
ja
dec
xchg
clc
xchg
adc
jmp
lds
add
jmp
repz
cmp
aad
sub
cs
mov
mov
cmps
ret
rcl
adc
lahf
and
test
adc
test
mov
or
rcl
lea
sub
jo
pop
movs
fdivr
jp
lods
pushf
mov
test
imul
xchg
xchg
mov
neg
bound
adc
push
push
mov
sahf
sbb
sar
xor
movs
cmp
mov
arpl
inc
jmp
cmc
mov
sbb
cli
mov
cmp
(bad)
jo
push
(bad)
(bad)
jne
sbb
gs
lods
scas
sbb
push
pop
or
add
aaa
jnp
popf
dec
in
ins
cmp
jb
imul
test
add
xchg
sbb
xchg
clc
call
xchg
imul
cmc
test
add
fwait
retf
pop
cmps
mov
jo
and
(bad)
push
sbb
imul
scas
dec
cmp
add
clc
dec
push
jmp
jmp
cmp
sbb
xor
bound
pushf
cmp
xchg
loope
ss
jecxz
pop
push
aad
cwde
xchg
mov
jb
dec
fdivp
cli
in
mov
cmp
inc
and
xor
inc
addr16
lock
mov
in
arpl
clc
jle
cli
mov
dec
cwde
jb
popa
dec
sbb
pop
imul
sti
cmps
jmp
xor
ins
je
les
popa
push
cmp
add
push
push
rol
mov
sti
ins
lock
rcl
data16
jge
(bad)
(bad)
in
pop
sbb
stos
cmps
mov
aaa
adc
adc
outs
loopne
pop
aad
test
outs
add
les
mov
loope
jmp
inc
fidivr
cli
xor
cmp
js
sbb
aad
test
cmp
sti
inc
jecxz
sbb
pop
cmp
lods
add
push
fwait
jmp
test
or
sbb
(bad)
fbld
hlt
xor
cmc
xchg
pop
sahf
pop
xchg
cmp
mov
xchg
sbb
mov
outs
lds
lds
int
popa
adc
clc
aam
dec
mov
jo
shl
leave
mov
mov
lds
int
push
mov
ret
rol
imul
mov
jp
jnp
xchg
xchg
sahf
xor
mov
test
adc
test
inc
push
push
pop
mov
ror
dec
cs
aam
dec
clc
out
mov
mov
call
mov
pop
adc
jmp
aam
(bad)
js
or
pusha
sub
cmc
inc
xor
xchg
shr
clc
xchg
mov
mov
jg
ret
mov
icebp
xchg
daa
inc
out
pusha
adc
mov
pop
xor
jl
lods
cld
loope
stos
adc
popf
int3
pop
mov
or
mov
retf
cmps
shl
dec
out
sbb
arpl
cmps
dec
gs
inc
mov
sub
ins
sub
test
data16
mov
xchg
cmps
cmp
add
mov
not
cld
or
push
inc
xchg
daa
or
add
nop
adc
mov
cmp
retf
les
movs
aaa
mov
in
ror
xlat
mov
pop
aaa
jne
mov
imul
pop
cmp
repnz
push
sub
or
fild
(bad)
mov
inc
xchg
cmps
scas
dec
(bad)
loope
stos
add
mov
imul
pop
jp
mov
xchg
lods
cmps
and
jns
sub
movs
push
fldcw
or
pop
dec
xchg
in
popa
ss
jmp
cs
loop
shrd
daa
int
out
jge
xor
movs
push
dec
dec
lods
outs
imul
mov
or
in
mov
imul
scas
mov
mov
mov
or
jle
icebp
addr16
jp
int
test
outs
jo
in
dec
xchg
mov
xchg
pusha
mov
(bad)
jbe
xor
daa
pop
push
pop
sbb
popa
mov
fstp
mov
xor
or
sti
jle
pop
adc
in
fadd
inc
mov
push
xchg
mov
add
loop
xchg
sub
cmp
xor
mov
adc
and
aad
add
enter
out
loop
inc
mov
xor
push
cmp
mov
aaa
sahf
in
and
xsha256
cmps
xchg
(bad)
fs
aad
sahf
push
xchg
xchg
inc
sub
lahf
xor
(bad)
pushf
jbe
imul
rcr
jge
(bad)
stos
ss
dec
sub
push
xchg
inc
inc
arpl
and
mov
or
inc
retf
fnstsw
adc
arpl
mov
mov
jg
mov
ins
dec
test
inc
enter
push
jp
inc
pop
fcom
push
pop
dec
rcr
xchg
fdivr
retf
out
dec
imul
adc
js
out
stos
mov
aas
push
neg
sahf
lock
mov
test
or
mov
imul
jge
scas
lock
cmc
(bad)
mov
cmp
aas
adc
lds
(bad)
sbb
loop
xchg
(bad)
lods
mov
scas
cmp
fs
mov
pop
mov
inc
sti
jge
out
cdq
ss
stos
mov
fstp
mov
fwait
out
mov
ins
xor
xchg
xor
outs
adc
sahf
jg
not
pop
mov
sub
pushf
arpl
mov
aad
ds
stos
jo
pushf
pop
icebp
mov
in
fs
movs
out
mov
and
pop
icebp
sbb
mov
mov
sti
inc
sub
xor
mov
ror
retf
jnp
shl
push
add
scas
xor
or
dec
movs
les
ins
outs
mov
mov
mov
mov
test
sar
dec
push
out
mov
test
xchg
lahf
cli
call
arpl
fstp
(bad)
shl
imul
push
and
addr16
lahf
test
and
mov
push
or
sti
inc
sbb
push
xor
lods
and
cmp
inc
(bad)
icebp
pop
jle
dec
popa
push
xor
mov
jecxz
mov
push
pop
hlt
mov
imul
jbe
popa
clc
popa
(bad)
mov
sub
inc
push
ins
in
int
cmps
(bad)
xchg
stc
fistp
jp
cli
or
mov
aaa
sbb
fadd
and
or
mov
jecxz
inc
lahf
aas
xchg
and
inc
arpl
popf
add
inc
mov
outs
test
jnp
sub
pop
cli
add
adc
mov
pop
enter
(bad)
lea
mov
fwait
jecxz
inc
js
scas
sub
(bad)
pop
push
or
mov
adc
call
inc
push
call
pop
push
(bad)
pop
mov
jmp
pop
scas
jmp
push
jecxz
jmp
push
aam
sbb
push
cmp
adc
ds
add
out
add
in
pop
test
jns
mov
cmps
sbb
or
fistp
mov
and
cdq
test
dec
call
sub
data16
xchg
das
sub
push
sar
mov
pop
push
inc
test
xchg
pop
leave
and
push
test
jp
push
in
inc
mov
jp
mov
pop
outs
outs
(bad)
les
lea
iret
mov
fs
sbb
lods
jmp
add
mov
(bad)
fiadd
aaa
adc
mov
push
movlps
inc
adc
movs
or
(bad)
repnz
pop
inc
and
xor
test
xchg
(bad)
xchg
add
xchg
call
jns
mov
jno
cmps
or
jp
int
pop
aam
fbld
(bad)
movs
(bad)
lahf
test
repnz
int3
fsubrp
mov
fmulp
pop
pushf
add
ret
outs
jne
fimul
(bad)
jo
xor
mov
xchg
cmps
xchg
(bad)
ror
repnz
mov
xchg
iret
pusha
call
or
jno
(bad)
jp
sub
cmp
xor
ss
jbe
jmp
adc
fdiv
cmc
cwde
ret
mov
test
inc
ins
ins
xchg
mov
inc
push
sub
push
into
jbe
push
std
dec
(bad)
loopne
mov
stos
mov
rcl
add
inc
jae
lods
jbe
das
dec
mov
fidivr
push
outs
mov
fwait
cwde
int
push
pop
mov
mov
mov
mov
int
mov
gs
pop
shl
fistp
cmp
lds
xchg
mov
and
cmps
fld
push
xor
call
jbe
push
out
adc
xchg
push
ss
fwait
imul
sub
add
repz
retf
cdq
das
sub
fmul
mov
cmp
or
ins
or
sbb
(bad)
dec
cmp
retf
out
arpl
jno
push
add
adc
icebp
int3
xchg
jne
pusha
inc
out
jl
outs
mov
adc
call
cmc
add
adc
in
xor
cmp
mov
jb
cmps
push
ja
jmp
or
in
mov
loopne
jno
inc
(bad)
enter
call
clc
daa
sti
pop
xor
sbb
push
ins
call
cmp
outs
push
imul
retf
cs
mov
push
and
sub
cmps
neg
mov
leave
cmp
popf
cmp
jns
cld
das
dec
ins
inc
repz
mov
sub
push
jnp
or
jg
nop
leave
mov
daa
int
xor
enter
jmp
bound
sbb
inc
xor
arpl
movs
mov
cmp
out
jns
pop
mov
sbb
inc
sub
ficomp
test
call
ins
mov
mov
push
or
mov
neg
mov
sbb
mov
xchg
aas
cwde
sub
das
(bad)
and
xor
add
ficomp
leave
outs
test
cs
inc
ins
test
add
fimul
dec
cmps
dec
jmp
dec
inc
jge
aas
into
data16
movs
adc
add
and
mov
test
push
mov
pop
xor
inc
pop
in
mov
rol
cdq
push
(bad)
imul
xchg
push
xchg
data16
xchg
pop
push
das
mov
ins
jnp
jae
lods
mov
cmps
popa
test
jp
in
sub
add
add
and
jnp
add
cld
and
dec
xchg
lea
movs
jbe
fnstsw
add
fdiv
jle
shl
cmp
rcl
dec
fsub
cmp
pop
push
int
rol
pause
and
cmp
std
fwait
cmp
jl
cli
call
fst
mov
sbb
cdq
test
sbb
jle
sub
cmp
jb
mov
xchg
repz
stc
pusha
sub
mov
jmp
fmul
jne
out
(bad)
and
cmp
shr
das
mov
ja
repz
fdiv
(bad)
mov
dec
and
xchg
es
dec
adc
xchg
inc
mov
xchg
repnz
sahf
(bad)
cmp
xchg
hlt
daa
and
mov
xor
sub
or
dec
sbb
jl
call
loop
in
test
gs
mov
bound
adc
add
jmp
add
cmps
inc
mov
xlat
inc
inc
adc
push
inc
dec
jecxz
push
mov
retf
(bad)
in
icebp
shl
sbb
pop
popf
mov
sub
inc
stos
add
push
xchg
cmp
js
scas
and
(bad)
popa
pop
adc
sub
fld
mov
arpl
jecxz
cmp
fwait
in
bound
xchg
push
jmp
mov
cmp
inc
shr
mov
xchg
cmp
imul
loopne
push
ins
das
popf
mov
movs
adc
xlat
mov
inc
fldcw
xchg
arpl
test
or
mov
sub
(bad)
stos
fistp
jle
cdq
out
pop
mov
outs
mov
cmp
cmp
or
push
into
mov
xchg
fstp
pop
popf
clc
jne
outs
xor
adc
push
xor
out
and
lods
leave
stos
aad
jbe
jno
or
(bad)
and
std
xor
push
ins
std
retf
mov
inc
or
(bad)
aaa
mov
or
dec
(bad)
jns
iret
xchg
push
add
mov
repnz
popa
lods
in
mov
retf
pop
mov
jnp
jnp
dec
push
and
sub
inc
push
push
jno
push
mov
inc
pop
(bad)
xor
cdq
push
adc
pop
imul
jns
jecxz
cmp
mov
cmp
leave
sbb
dec
push
sub
aas
loopne
(bad)
pop
dec
out
jo
adc
mov
aad
sahf
sub
mov
adc
ins
mov
in
xchg
in
push
in
inc
sub
jne
jnp
fiadd
inc
cmc
mov
sar
fnstenv
pushf
adc
(bad)
loope
std
pop
sub
pop
stc
or
dec
ss
sbb
into
test
daa
jg
dec
test
pop
mov
dec
xchg
sbb
rcr
test
xlat
lock
sub
jle
(bad)
adc
call
das
les
mov
push
push
loopne
mov
add
arpl
sti
pop
ss
pushf
mov
call
mov
mov
dec
gs
mov
loop
fisubr
lods
push
pop
adc
(bad)
jecxz
cmps
push
pop
fwait
test
mov
or
dec
mov
fiadd
loopne
adc
fistp
xor
jns
ins
mov
xchg
movs
mov
pushf
jae
stos
or
sub
or
push
xor
mov
lods
dec
cmpps
pop
(bad)
shr
out
jb
xchg
loop
ss
repz
ss
mov
out
cs
je
cmps
icebp
sbb
xor
xchg
dec
(bad)
bound
jns
jle
sub
cld
loope
push
out
mov
xchg
(bad)
std
or
mov
dec
jecxz
inc
inc
dec
and
xor
mov
xor
adc
mov
xor
inc
push
mov
sub
stos
inc
sub
test
test
jnp
sbb
dec
or
dec
addr16
sbb
mov
je
jg
xor
mov
lock
mov
sbb
hlt
inc
cmp
sbb
push
stos
rol
fld
sti
xchg
stos
enter
not
addr16
mov
popa
test
add
(bad)
shl
data16
xchg
fldenv
mov
pusha
inc
or
sub
bound
fistp
pop
jecxz
xlat
cmps
dec
fld
aad
pop
pushf
mov
mov
xchg
loop
cli
add
std
pop
out
adc
rcr
xchg
mov
mov
(bad)
xchg
and
add
or
pop
cmc
icebp
pop
in
jg
xchg
nop
ror
or
mov
mul
(bad)
mov
cmp
loope
jl
imul
adc
jmp
push
lock
mov
test
mov
mov
ja
fsubr
js
pop
jne
rol
call
ficomp
rcl
loopne
mov
jne
jmp
mov
sbb
adc
in
add
inc
mov
cmp
mov
xchg
jae
xchg
or
icebp
and
leave
jp
xor
jo
push
imul
aaa
jae
sbb
aaa
inc
cmp
stc
clc
sbb
jl
or
dec
mov
mov
push
cmp
sub
je
neg
outs
pop
mov
xchg
gs
fdiv
xchg
and
add
and
scas
shl
push
fild
mov
dec
fwait
xchg
loope
add
arpl
sub
ds
ror
add
sub
loope
mov
cld
cmp
dec
xchg
lods
xchg
ds
mov
adc
or
mov
jb
or
sbb
cli
cmps
mov
loope
inc
push
inc
in
loope
retf
mov
stos
or
inc
clc
mov
mov
xchg
push
in
pop
fst
cmc
xchg
mov
lock
cmp
cld
lods
add
stc
inc
je
mov
xchg
dec
mov
jmp
push
pop
sar
jl
fpatan
push
or
pop
mov
dec
icebp
adc
call
mov
sar
mov
and
int3
jle
push
mov
adc
or
aaa
add
jl
aas
int3
inc
sbb
popa
ins
mov
cmps
aas
inc
mov
shl
in
enter
add
(bad)
test
mov
xor
push
mov
sar
jmp
push
repz
xchg
xchg
out
xor
daa
(bad)
mov
mov
jnp
adc
fs
jecxz
enter
sbb
xor
or
and
mov
mov
or
ret
test
call
test
mov
push
and
adc
push
push
iret
pop
sub
dec
arpl
dec
fnstenv
int
add
jecxz
lods
xchg
mov
inc
mov
pop
in
sub
jb
sti
daa
adc
mov
adc
mov
div
or
dec
or
test
cmp
fs
(bad)
jle
int
bound
popa
stos
fidivr
dec
(bad)
dec
add
dec
aaa
inc
out
fwait
jnp
icebp
das
pop
xor
push
push
jp
rol
out
push
or
test
xchg
mov
mov
adc
cmc
jecxz
out
std
sbb
lds
dec
dec
jnp
xchg
movs
retf
int3
mov
orps
jae
(bad)
addr16
push
sbb
inc
cmp
lods
inc
mov
imul
test
(bad)
dec
addr16
out
and
aas
sub
mov
das
iret
lods
jp
push
xchg
mov
fnstenv
sti
mov
not
mov
repnz
gs
cmps
dec
cmp
cli
fisttp
and
jmp
adc
sub
push
outs
inc
jmp
jmp
pop
xchg
xor
mov
inc
mov
sahf
xor
push
push
ss
sub
imul
xchg
stos
jo
cmps
inc
mov
imul
dec
int
es
pop
loopne
jge
nop
and
adc
push
or
lods
outs
cmp
mov
mov
xlat
mov
push
inc
cmp
(bad)
cld
hlt
imul
pop
(bad)
sbb
pop
push
mov
std
lds
cmp
fs
test
inc
loope
push
sub
pop
push
and
aam
shr
push
mov
mov
sub
lods
sub
fstp
mov
mov
int3
shl
pop
out
adc
and
xor
cld
mov
mov
test
xchg
imul
jno
push
and
ror
mov
jno
fadd
jge
mov
lahf
inc
inc
push
lahf
test
cmc
retf
test
inc
fsub
xor
stc
sub
mov
sbb
push
pop
jecxz
loop
bound
jbe
test
push
sbb
and
dec
xchg
mov
icebp
out
xor
jmp
shr
pop
in
mov
push
dec
test
jbe
mov
inc
jp
rol
jmp
push
sbb
add
and
test
jne
dec
ret
add
ins
inc
aaa
sub
mov
push
push
cmp
in
pop
lahf
(bad)
out
mov
in
test
xor
sbb
pusha
pop
in
xchg
aaa
or
das
cmp
sbb
addr16
dec
icebp
popf
dec
pop
stos
or
jmp
fsubr
inc
fistp
out
cmc
jmp
or
or
pop
sub
push
xchg
test
(bad)
mov
or
sub
pusha
mov
pushf
jnp
popa
nop
jo
mov
call
push
mov
shl
jmp
leave
cs
sbb
and
ja
fs
je
in
clc
inc
mov
ror
mov
outs
xor
es
cli
xchg
out
mov
sbb
sub
mov
xor
popf
mov
or
or
aaa
std
sti
into
and
addr16
fnstcw
mov
adc
fcomp
test
dec
scas
pop
or
jge
xchg
test
push
in
sahf
loop
popf
or
rcl
stos
or
pop
nop
push
and
ret
not
rcr
sbb
lea
ins
push
or
fdivr
out
icebp
mov
jmp
sbb
(bad)
mov
dec
ror
in
mov
xchg
mov
mov
sub
rcr
hlt
sahf
mov
imul
jno
mov
ds
mov
ins
stos
imul
push
lods
lea
pop
xchg
mov
pop
adc
int
sbb
adc
fcmove
sahf
sbb
lods
pop
and
or
ret
mov
mov
xchg
mov
out
mov
(bad)
mov
xor
stos
jno
xor
js
arpl
bound
loopne
sub
sbb
bound
outs
jmp
gs
jmp
pop
jl
xchg
adc
sbb
(bad)
or
push
xchg
inc
or
mov
sbb
sub
pop
pushf
push
xchg
xlat
leave
lea
sub
mov
test
(bad)
sar
sub
ins
jp
imul
xchg
out
mov
add
imul
(bad)
mov
xor
mov
test
scas
jle
in
cdq
ficomp
pop
sub
ror
int3
mov
inc
mov
loopne
xchg
ret
sbb
or
mov
retf
cmp
neg
(bad)
xlat
sub
imul
outs
add
lea
mov
mov
cmp
dec
shr
cmp
xor
cli
inc
stos
out
sub
pop
iret
or
push
adc
jmp
sbb
jae
inc
ss
jo
(bad)
es
shl
cld
rcr
imul
retf
mov
push
pop
sbb
aam
mov
inc
pusha
ret
(bad)
mov
addr16
leave
push
push
mov
mov
mov
jge
aaa
jle
add
outs
inc
pop
adc
into
sub
bound
xlat
mov
and
cdq
shl
jne
aaa
fnstenv
inc
fidiv
pop
es
gs
pusha
xchg
addr16
xor
sub
movs
push
push
out
leave
mov
inc
mov
jae
adc
mov
adc
data16
jl
or
push
movs
jge
(bad)
in
addr16
sbb
add
pusha
lods
or
cmp
xlat
mov
jmp
fbld
jne
xor
push
test
inc
(bad)
xchg
lock
nop
cmp
test
cs
xlat
imul
cld
dec
sbb
sub
fidivr
or
rcl
mov
adc
jbe
pop
mov
and
lock
outs
sub
popa
dec
jmp
out
gs
cli
dec
in
out
ret
mov
into
jns
sar
dec
xor
inc
es
out
sub
stc
lods
imul
xchg
out
xor
imul
cli
xchg
mov
mov
not
xchg
fs
mov
std
call
loop
pop
dec
push
call
test
loop
les
add
and
and
sub
(bad)
icebp
fisttp
hlt
sbb
add
hlt
jmp
adc
and
sbb
imul
test
push
push
test
fimul
movs
ret
scas
test
fild
stos
cwde
jl
in
lea
rcl
arpl
sbb
in
imul
cmp
jge
in
xor
fwait
dec
mov
jp
and
lahf
aam
in
cmps
sbb
mov
sub
arpl
out
pop
in
shr
lods
mov
fs
sti
push
jmp
fldcw
inc
test
rcr
in
mov
dec
lods
and
dec
mov
dec
and
push
pop
and
pop
stos
dec
add
or
mov
cmp
xor
and
jmp
stos
pop
adc
fild
or
jnp
(bad)
mov
push
fimul
sahf
fisttp
adc
xchg
mov
imul
ss
inc
dec
ds
mov
dec
adc
xlat
call
xchg
test
cs
(bad)
push
mov
je
push
dec
push
dec
arpl
mov
fst
sbb
(bad)
mov
and
adc
shr
jle
pushf
out
push
arpl
(bad)
nop
or
dec
jmp
test
mov
mov
or
fisubr
xor
js
js
push
sub
stc
retf
les
adc
repnz
fxtract
sbb
call
mov
rol
pop
data16
cmp
fcom
mov
xor
mov
cmp
sti
test
int3
xor
inc
xor
mov
fimul
fisub
iret
mov
shr
fiadd
dec
or
mov
mov
sbb
leave
xchg
mov
mov
cli
sbb
mul
push
movs
daa
hlt
(bad)
dec
sub
sub
js
sub
jmp
inc
push
mov
mov
int3
dec
jmp
outs
dec
int
in
mov
xor
jbe
aaa
aaa
into
adc
jae
lods
mov
out
fisub
push
cwde
mov
pop
jmp
sub
xchg
hlt
movs
dec
les
cmp
test
cld
hlt
shr
and
push
mov
bound
fisttp
xor
mov
rcr
mov
rol
mov
sub
mov
inc
mov
mov
adc
mov
mov
inc
add
stos
add
repz
or
jmp
sbb
mov
cmc
sar
cmp
cmp
outs
pop
jl
popf
outs
xchg
dec
dec
repz
xor
stc
(bad)
jg
push
(bad)
xor
mov
sub
dec
inc
loop
lods
outs
in
push
pushf
pop
or
pop
jg
xchg
fadd
or
lea
cld
sbb
imul
adc
fbstp
lds
adc
test
jnp
sbb
mov
gs
lock
rcl
nop
and
in
aam
sub
scas
(bad)
inc
sbb
mov
inc
mov
pop
(bad)
ins
jno
lahf
jae
dec
enter
xchg
cli
rol
adc
mov
mov
push
aam
enter
dec
xchg
js
inc
or
add
push
data16
xor
shl
in
movs
adc
ins
mov
icebp
sbb
push
loope
xchg
push
push
inc
scas
xchg
cs
adc
push
aad
int3
inc
inc
ja
cli
dec
add
les
and
(bad)
xor
push
pop
mov
popf
and
rcl
push
pop
(bad)
or
cdq
aam
push
iret
loopne
fwait
pop
sbb
xlat
push
or
daa
and
pop
and
pushf
xor
or
out
test
xor
das
dec
repnz
(bad)
pop
sbb
int3
push
push
sub
push
mov
out
(bad)
sti
inc
xor
pop
repnz
(bad)
sub
sbb
push
dec
rol
or
push
call
jo
test
pop
leave
clc
imul
push
pop
in
jno
lods
xchg
es
inc
movs
sub
cs
call
xor
call
xchg
sbb
xor
or
or
call
mov
xor
jmp
ja
data16
and
cmp
jno
sub
xor
cld
sub
je
sub
and
gs
lea
sub
stos
xor
sub
(bad)
stc
cmp
mov
rol
sahf
mov
scas
dec
sub
add
test
and
lods
clc
sbb
neg
and
or
ret
test
dec
xor
retf
add
mov
dec
es
fdivr
loope
push
repnz
dec
and
sar
repnz
jl
or
add
sahf
pusha
ss
in
cmc
mov
rcl
dec
pop
test
scas
xor
in
cs
cmps
pop
xor
add
inc
aas
rcl
push
jle
jmp
mov
xchg
leave
jmp
xor
rdmsr
mov
rcl
jmp
les
adc
cmp
icebp
jp
mov
std
jnp
test
shl
lods
sub
test
mov
scas
(bad)
push
or
mov
adc
mov
xchg
add
mov
push
rol
and
out
mov
mov
daa
mov
pusha
loopne
adc
mov
outs
inc
dec
pop
dec
aas
out
out
mov
jle
xlat
out
stc
sahf
mov
xlat
fidiv
pusha
scas
sub
pusha
sbb
fadd
imul
or
in
scas
in
aad
and
or
or
cmps
mov
je
pop
movs
push
inc
and
cmp
pop
repnz
jl
int3
or
js
popa
mov
repnz
jl
in
mov
xchg
pusha
pop
xor
imul
push
das
and
icebp
sahf
sub
xlat
sub
cli
inc
ret
adc
sbb
push
jmp
xchg
scas
movs
fdivr
jge
popa
sub
fiadd
sbb
push
mov
mov
lea
mov
clc
lods
xlat
imul
(bad)
jae
arpl
cmps
inc
cmps
idiv
icebp
adc
arpl
mov
not
xchg
outs
jp
movlps
xor
cmp
jnp
aam
push
clc
ins
mov
xor
jp
mov
push
ret
mov
mov
das
pop
pop
cmp
lock
dec
cmp
jb
mov
sbb
jp
sub
add
inc
xor
jmp
jmp
les
aad
std
int
ret
sub
mov
xchg
movs
(bad)
mov
or
and
in
retf
icebp
add
pop
aaa
iret
test
xchg
ja
popa
ror
jmp
(bad)
push
test
in
(bad)
out
out
dec
sub
push
dec
(bad)
(bad)
jecxz
xor
pop
pop
jmp
push
push
mov
lock
in
je
or
cmp
dec
jb
in
dec
mov
push
sub
or
cwde
in
leave
gs
jb
push
enter
bound
in
sbb
retf
out
adc
loope
mov
es
ins
xor
sub
outs
mov
enter
shl
add
mov
push
cmp
mov
and
add
ficomp
movs
add
(bad)
movs
retf
push
cmp
adc
int
test
xor
xlat
mov
ficom
imul
arpl
mov
inc
lods
(bad)
das
xchg
mov
pop
(bad)
xlat
adc
sub
or
(bad)
jns
shr
push
das
addr16
adc
sar
call
dec
out
dec
rcr
iret
pusha
jle
mov
xor
mov
into
sub
test
loopne
std
jno
mov
push
jmp
adc
pop
(bad)
les
(bad)
into
jl
int3
lahf
gs
dec
cmp
jns
int3
rcr
dec
stos
mov
cmp
jb
call
(bad)
pop
pop
jns
xor
(bad)
add
sahf
push
fidiv
icebp
xor
mov
push
xchg
sub
jae
xchg
stc
(bad)
xchg
lock
mov
mov
push
out
retf
dec
add
sahf
push
call
dec
(bad)
pop
pop
stos
adc
popf
ret
cld
iret
dec
loope
xor
adc
sub
push
fstp
and
mov
imul
xchg
and
or
cmp
in
movs
fbstp
mov
adc
shr
(bad)
and
jle
jmp
xor
aas
mov
dec
(bad)
sub
sahf
pop
cmps
inc
adc
xor
daa
(bad)
jp
inc
cdq
mov
sub
das
and
fdivr
movs
or
dec
push
or
mov
push
mov
aam
cmp
xor
dec
bound
inc
pop
aam
mov
push
rcl
ds
sub
push
inc
mov
icebp
mov
inc
cmc
xor
jmp
and
shr
pop
aam
pop
imul
add
leave
data16
dec
fadd
jl
jne
mov
(bad)
push
sub
lods
fcmovb
or
rcl
adc
clc
jno
sub
xchg
movs
adc
push
mov
fadd
jne
imul
jp
xchg
lods
dec
inc
and
cmp
movs
jmp
fsubr
or
daa
push
mov
jp
xchg
pushf
(bad)
cmp
ja
mov
fsub
aad
into
sbb
out
outs
ror
jb
jp
inc
or
pusha
xchg
pop
arpl
les
dec
and
inc
aas
mov
into
jecxz
mov
(bad)
xor
push
stos
jbe
pop
push
dec
inc
add
inc
jp
jle
iret
and
es
inc
pop
xlat
data16
sbb
inc
aaa
and
and
dec
and
fs
sub
sub
mov
dec
test
lahf
mov
std
loope
jle
movs
adc
sbb
jne
mov
mov
mov
sar
push
cdq
mov
repz
inc
adc
mov
xor
jne
add
outs
bndstx
cmp
clc
inc
repnz
push
cmp
nop
std
xlat
pop
xor
mov
sub
adc
stos
cdq
int
dec
scas
lods
leave
inc
ins
pushf
inc
loopne
stc
ss
sub
pop
into
pop
(bad)
test
imul
or
and
call
push
mov
adc
push
push
cmps
fwait
fs
iret
fs
pop
imul
stc
shl
repnz
vprotb
fmul
sub
pop
adc
push
jnp
add
and
(bad)
xlat
xor
push
std
and
fcom
pop
aas
mov
out
das
add
and
inc
scas
jnp
dec
iret
jmp
iret
test
cmp
dec
mov
lea
sbb
inc
xor
iret
inc
mov
mov
enter
adc
jecxz
sub
hlt
mov
and
or
lods
xchg
sbb
enter
inc
retf
addr16
push
out
cmp
pushf
inc
push
out
pop
rcl
test
or
and
inc
push
sbb
or
pusha
iret
daa
ins
jg
sub
imul
mov
out
ss
(bad)
xor
outs
cmp
hlt
pop
sbb
adc
jmp
jl
fwait
lods
fisttp
lods
mov
xlat
stc
movs
sahf
dec
cwde
les
pop
pop
cwde
fs
mov
test
ret
cmp
call
icebp
push
jg
xchg
mov
sub
fadd
ss
clc
xchg
arpl
jb
in
xchg
adc
sub
cmp
dec
sbb
neg
jmp
xchg
aas
push
fdivr
and
in
clc
mov
jo
push
cwde
mov
mov
nop
into
pop
dec
xor
pushf
adc
fdiv
dec
jb
test
inc
xor
sub
cmp
call
jp
ins
out
jbe
add
push
iret
push
sti
jl
adc
outs
call
jns
add
test
loopne
ror
push
sbb
cmp
int3
(bad)
fcmovnb
cmc
dec
lods
jmp
pop
dec
es
jmp
cli
mov
adc
pop
jmp
inc
mov
xor
fisttp
dec
ins
jecxz
pop
pop
mov
scas
out
sub
dec
outs
daa
add
push
add
inc
rol
or
jno
(bad)
mov
sbb
inc
adc
lock
div
dec
xor
and
push
xor
sbb
mov
pop
addr16
dec
mov
imul
retf
cmp
dec
ret
mov
(bad)
xor
pop
sub
in
inc
jno
fcmovbe
adc
xor
mov
call
lods
jle
dec
dec
sbb
sbb
sbb
repz
dec
push
test
cmc
lahf
leave
or
imul
and
lds
jnp
je
fs
jmp
xchg
and
push
and
mov
retf
addr16
rcl
repnz
mul
imul
cmc
into
mov
imul
push
js
push
mov
in
jo
das
out
pop
movs
push
stos
pop
pusha
jmp
and
mov
test
(bad)
cmp
bnd
fucom
mov
sub
xor
lahf
jl
mov
xchg
leave
adc
imul
cmp
jb
add
xchg
xor
dec
inc
mov
sub
dec
aas
adc
idiv
push
outs
nop
mov
mov
xchg
cmp
sub
mov
or
dec
dec
stos
sub
add
pop
test
or
sahf
icebp
retf
jns
jmp
mov
xchg
test
test
pop
cmp
jne
movs
pusha
(bad)
mov
and
sub
sar
sub
xchg
pop
pop
fadd
jne
shl
cmp
lods
mov
(bad)
in
iret
int
int3
movs
mov
pop
pop
cmp
mov
aam
cmp
jmp
cs
or
loopne
mov
fs
cwde
(bad)
or
mov
push
inc
sub
int3
jecxz
push
jnp
cdq
add
and
test
jmp
shr
mov
scas
in
pop
sti
mov
push
add
sub
push
and
inc
fisttp
out
rcr
jl
dec
test
stos
inc
adc
loop
scas
inc
mov
mov
leave
xor
or
scas
sub
in
mov
or
and
sar
mov
cmp
mov
xor
pop
sbb
cmp
mov
pop
sub
push
xchg
adc
popa
push
jle
push
cmp
lds
and
outs
repz
in
xchg
mov
xchg
mov
cwde
xchg
or
mov
push
mov
xor
inc
aaa
pop
mov
mov
js
pop
or
(bad)
mov
push
fld
adc
aas
fwait
jbe
add
fst
add
dec
(bad)
shl
ffreep
xlat
hlt
xchg
jbe
fcom
rcl
sti
(bad)
lock
mov
jle
lock
mov
jo
fnsave
mov
repz
jnp
iret
arpl
jne
cmp
adc
nop
(bad)
sub
pop
xchg
ror
fwait
add
ror
(bad)
enter
push
pusha
into
inc
inc
mov
cmp
frstor
aam
mov
scas
cdq
test
xchg
cmp
xor
push
rcl
(bad)
neg
fdivp
pop
repnz
add
add
jp
das
int3
inc
sub
and
or
sub
mov
(bad)
jmp
mov
aad
sbb
enter
fscale
add
push
std
pop
fldcw
ins
inc
sti
jb
repnz
mov
dec
das
inc
call
cwde
inc
pop
lods
in
add
xor
jge
aas
fbstp
loope
retf
outs
in
js
or
push
sub
adc
dec
cs
(bad)
jne
addr16
add
fldl2t
ins
sub
sbb
xchg
fdiv
test
adc
xor
mov
dec
stos
and
inc
fild
call
mov
jle
scas
call
or
out
adc
push
push
fwait
pop
jbe
and
mov
push
push
sub
cmp
sbb
push
sub
fisttp
imul
out
in
aam
dec
std
lods
mov
jmp
push
mov
mov
ss
xor
out
addr16
iret
push
inc
pop
cmp
cmp
leave
lock
movs
jns
in
hlt
stc
jnp
outs
hlt
push
inc
inc
stc
jns
ins
mov
dec
lods
loop
xor
fiadd
addr16
call
push
cmp
pop
mov
adc
sahf
or
push
ret
rcr
inc
fisttp
add
retf
or
xchg
lea
ss
mov
loop
mov
and
mov
(bad)
sub
cmp
inc
pop
jl
cmp
push
pop
add
fwait
push
rol
je
sub
sbb
cmc
fisttp
inc
pop
repnz
xchg
pop
mov
jb
inc
cdq
sub
push
sahf
push
test
lock
das
xchg
jmp
imul
psrad
pop
bnd
jae
rol
cmp
jp
push
jbe
(bad)
sbb
inc
pop
in
sub
stc
retf
loope
jae
clc
add
cmp
inc
jge
repnz
pop
cmp
or
mov
pusha
mov
(bad)
(bad)
icebp
or
push
loop
cmc
stos
sbb
data16
sbb
js
cmp
rcr
mov
or
xchg
lock
sub
loopne
sti
mov
push
sti
xchg
xchg
jl
fs
adc
lods
out
div
jns
outs
pop
dec
clc
stos
pop
iret
xchg
jecxz
les
xchg
or
js
test
out
aad
xchg
xor
dec
hlt
dec
xchg
or
out
call
or
shl
sub
mov
jle
pop
leave
cld
push
adc
fnstenv
mov
scas
sub
pushf
out
jb
mov
outs
cmp
and
cmp
mov
ins
mov
call
xor
xor
push
dec
add
mov
clc
jge
inc
jae
mov
es
mov
arpl
repnz
mov
aad
cmp
xor
sbb
lds
push
loope
xchg
mov
mov
push
je
inc
dec
lahf
push
xor
popa
push
xchg
adc
pop
repz
mov
nop
inc
xor
stos
fisttp
inc
bt
sbb
jmp
nop
pop
ins
mov
xchg
leave
pop
add
idiv
pop
mov
jbe
xchg
pop
test
xor
push
push
in
out
adc
cmp
scas
retf
retf
and
in
and
lds
pop
into
jge
mov
aam
xchg
cmp
inc
mov
nop
mov
sbb
ins
mov
call
push
add
gs
stos
nop
fwait
imul
je
cmp
or
push
cmc
stos
rcr
push
push
pop
mov
les
pop
leave
out
pop
jnp
aam
fist
movs
cmps
fstp
fisub
cs
cmp
fsubr
lods
push
lods
lods
jmp
push
loopne
sub
jns
lods
int3
pop
push
mov
add
jmp
call
cmps
add
and
xchg
push
(bad)
test
popa
cmp
cmp
dec
fs
aam
cmp
cmp
xchg
ja
mov
push
push
cli
cmp
xchg
sub
sbb
in
mov
cld
sbb
ins
maxps
or
(bad)
pop
jnp
or
pusha
shl
jns
push
retf
jmp
mov
rcl
js
and
push
movs
mov
sub
inc
hlt
fwait
sub
jmp
sub
out
test
fs
or
fldcw
adc
fldcw
hlt
aas
inc
cld
fmul
jmp
jae
mov
adc
(bad)
mov
cmp
inc
(bad)
fwait
xor
and
inc
addr16
mov
dec
jb
xchg
cmp
lods
jmp
je
sbb
mov
mov
xor
mov
cld
cmp
xchg
aas
mov
fistp
in
imul
lods
push
fld
test
push
rol
jne
mov
les
mov
mov
inc
xor
mov
push
cs
sbb
mov
retf
inc
movs
mov
jno
or
push
cs
ja
mov
xor
dec
or
(bad)
and
ins
mov
adc
stc
jge
call
daa
test
jne
xchg
mov
dec
and
sub
outs
xor
mov
aam
popf
sar
outs
push
mov
sub
jns
cmps
dec
je
sbb
push
and
mov
jmp
push
out
add
loop
icebp
add
in
frstor
scas
int
loope
jge
cdq
xchg
imul
sub
(bad)
imul
hlt
pop
fwait
ins
adc
shl
fisttp
push
xchg
outs
mov
arpl
in
adc
mov
mov
test
jecxz
(bad)
cmp
movs
sub
hlt
cmc
pop
test
dec
cmp
cmovle
std
mov
xchg
out
retf
dec
and
mov
scas
xor
int3
inc
pop
(bad)
sub
jmp
mov
data16
sub
das
not
push
jmp
inc
(bad)
pop
jp
cmps
jne
or
xchg
test
icebp
xchg
xor
adc
jl
shl
mov
sub
retf
jns
cli
and
jo
adc
ret
dec
jecxz
sub
pop
dec
pop
jbe
test
lods
(bad)
fst
inc
pop
shl
sub
scas
daa
fsubr
jnp
(bad)
sub
xor
movs
or
push
xchg
inc
ss
out
imul
into
push
(bad)
sbb
xchg
ror
stos
pop
(bad)
div
push
out
jb
(bad)
sub
cmp
mov
enter
std
fcom
fist
mov
lds
add
inc
ins
adc
fistp
sbb
push
leave
div
mov
mov
jb
xor
ds
jp
ja
jl
addr16
sahf
xchg
xor
loopne
and
xlat
daa
dec
lods
inc
ds
jne
rcl
dec
jmp
push
fidivr
and
sub
sub
out
or
loope
das
test
ror
(bad)
iret
and
mov
sub
and
adc
scas
push
xor
and
cmc
jb
mov
in
imul
dec
xchg
xor
int
in
outs
mov
cmp
imul
inc
scas
add
loop
data16
inc
mov
aas
push
jle
pushf
loope
(bad)
stc
sub
cmp
fwait
leave
stos
mov
pop
inc
les
mov
fstp
aam
in
sub
pushf
mov
arpl
mov
lods
jno
xchg
into
(bad)
sbb
sbb
jge
mov
mov
dec
loopne
fs
push
(bad)
enter
xor
mov
icebp
inc
in
mov
pop
mov
adc
and
dec
cmps
call
adc
push
and
ss
jno
out
adc
ins
mov
xor
mov
lds
and
mov
adc
scas
cld
dec
bound
xchg
enter
jae
push
jb
mov
(bad)
jns
daa
xor
dec
cmc
addr16
gs
aas
je
shl
(bad)
dec
gs
test
popa
js
retf
ss
in
jp
retf
and
cli
dec
push
imul
mov
mov
aaa
jl
cmps
mov
dec
je
or
jns
fst
pop
adc
xchg
aaa
fisub
das
mov
imul
in
mov
mov
fldenv
int
xchg
ret
loop
ret
jl
cdq
(bad)
dec
test
stos
outs
pop
outs
int3
sub
dec
leave
push
movs
xchg
rol
mov
mov
inc
push
stos
jo
lods
or
xor
sbb
pusha
mov
add
inc
and
jns
popa
cwde
add
iret
ret
mov
jns
inc
xor
xor
jae
and
sub
add
mov
dec
xchg
xchg
repz
sbb
fldenv
das
clc
shl
pop
xchg
stos
test
cmp
pop
fisubr
sub
mov
into
push
mov
dec
sub
out
jbe
xlat
xchg
data16
out
or
es
shl
or
jmp
mov
xchg
mov
outs
cld
inc
jge
jmp
sbb
mov
scas
mov
xchg
add
dec
ds
fwait
add
aam
shr
pop
xor
imul
bound
adc
mov
jnp
ins
or
call
sbb
call
loopne
xchg
add
fdiv
ret
stos
jae
xchg
repz
xchg
icebp
shl
pop
mov
sub
ins
popf
mov
ret
adc
lock
mov
in
xor
pop
fsub
sub
and
xchg
add
(bad)
pop
gs
xchg
int
aaa
ja
aam
outs
popf
call
mov
mov
pop
stos
add
out
inc
pop
in
test
repnz
dec
push
arpl
mov
addr16
or
push
or
pop
sbb
pop
popf
or
add
xchg
push
mov
js
jo
mov
dec
adc
test
in
mov
adc
sti
js
shl
addr16
jae
mov
stos
mov
push
hlt
rol
int
mov
push
dec
(bad)
and
repnz
pusha
sub
je
push
cmp
outs
and
or
add
add
lods
fild
ja
add
jle
les
cld
ins
addr16
data16
cmps
cdq
cdq
dec
mov
sbb
sbb
arpl
lahf
inc
mov
inc
mov
mov
iret
ret
cmc
repnz
push
in
test
dec
jb
xlat
mov
(bad)
sbb
push
(bad)
nop
call
loope
xor
jecxz
xchg
outs
dec
mov
repz
test
lods
call
dec
sbb
add
adc
sub
js
or
call
sbb
inc
pop
jl
repnz
sbb
pop
push
mov
ret
pop
out
mov
jmp
sub
mov
out
jno
(bad)
and
add
mov
js
test
std
pop
movs
jnp
test
cli
jae
pop
sub
adc
mov
mov
add
popa
jmp
mov
jno
sub
jp
lods
push
mov
cmp
mov
ss
push
or
or
fsubr
jp
inc
jp
xor
cmp
loope
mov
or
(bad)
lock
xchg
cs
jnp
shl
fldcw
pop
outs
xchg
inc
or
push
pop
in
iret
push
cmps
push
pop
push
cmp
jmp
ins
ror
jno
ficom
and
dec
popa
lock
cmp
fistp
aad
hlt
lahf
adc
and
imul
or
iret
mov
adc
(bad)
mov
pop
push
nop
aam
pop
pop
fs
test
into
adc
ins
xchg
pop
pop
jmp
push
push
stc
adc
in
xchg
sub
inc
sub
or
pop
mov
lods
sahf
push
cmp
mov
bound
ret
ins
mov
data16
inc
movs
mov
cmp
fimul
xchg
sub
dec
jle
cmp
scas
and
in
dec
arpl
mov
xor
mov
push
test
jg
pop
ret
inc
inc
into
dec
(bad)
fwait
aad
mov
(bad)
mov
pop
cli
dec
xor
mov
dec
and
pop
cmp
enter
out
jne
push
ror
and
push
inc
and
cmp
cli
ds
aam
cmps
mov
xor
jnp
daa
test
test
sti
add
pop
mov
dec
leave
sbb
mov
es
imul
sub
(bad)
rcr
xchg
sbb
bound
daa
jmp
mov
cwde
loopne
adc
inc
add
repz
jecxz
scas
mov
jge
jnp
push
push
jo
jns
rol
adc
jmp
jp
imul
pusha
mov
sbb
lods
xor
cmove
sub
mov
(bad)
jbe
in
sahf
or
xlat
cmp
xchg
sub
adc
push
fmul
outs
les
mov
and
mov
xchg
xchg
fbld
mov
cld
aas
neg
mov
hlt
or
push
fist
fisub
push
mov
popa
iret
mov
pop
mov
or
push
inc
cmp
jns
movs
out
hlt
push
es
ds
add
fld
cmp
aad
dec
inc
or
xchg
cmps
xchg
mov
scas
mov
popf
arpl
mov
inc
std
mov
imul
jmp
outs
test
jbe
pop
outs
(bad)
sahf
mov
pop
mov
sbb
push
add
and
fsubr
cmps
mov
jecxz
mov
ds
mov
repz
push
jle
daa
int
lods
mov
cli
pop
cwde
stos
pop
fwait
pop
(bad)
push
sbb
(bad)
jo
test
and
in
in
add
or
jo
push
and
es
shl
jmp
repz
(bad)
mov
stos
cmp
dec
inc
mov
sub
test
clc
scas
xchg
mov
aad
cmp
fisubr
inc
jle
dec
push
pop
out
sbb
mov
pop
psllw
inc
jo
out
(bad)
iret
jecxz
in
dec
push
cmc
shl
aas
sahf
repz
xchg
enter
pop
mov
stc
pop
test
xor
jno
jl
push
jno
rol
cmp
adc
mov
retf
adc
(bad)
jg
je
mov
sub
dec
xor
push
int3
adc
(bad)
or
or
mov
push
mov
stos
in
sbb
adc
hlt
es
outs
cli
push
and
mov
les
shl
mov
sub
dec
push
shr
sbb
ds
into
push
out
cmp
jecxz
adc
sbb
out
or
lahf
imul
or
xchg
xor
sti
imul
sbb
mov
mov
push
rol
add
jb
push
outs
add
rol
icebp
mov
out
sub
aaa
popa
and
out
imul
sbb
or
int3
pop
popa
ret
rcl
cmp
aam
push
imul
sub
push
(bad)
call
mov
inc
in
rcr
ss
push
and
movs
xor
mov
jbe
push
adc
mov
shl
inc
in
mov
sbb
mov
ror
bound
out
iret
ja
lea
xor
jle
rcl
push
mov
jmp
pop
das
mov
sub
test
and
ins
lods
jg
mov
scas
cs
dec
cmps
(bad)
stos
retf
jne
(bad)
add
dec
shr
pop
ret
enter
jns
xlat
jmp
sub
xor
in
mov
adc
mov
je
push
jecxz
and
pop
push
pop
cmps
cdq
jnp
jg
(bad)
jmp
out
mov
retf
addr16
(bad)
div
daa
(bad)
mov
in
vcompressps
cmp
adc
aad
cmp
shl
pop
mov
inc
mov
mov
jb
jg
arpl
jae
mov
jns
ins
or
addr16
ins
sbb
adc
add
stos
sysret
into
jbe
retf
mov
(bad)
(bad)
pop
aas
push
push
cwde
lahf
js
in
pop
xor
push
sub
push
mov
(bad)
mov
push
xor
ds
ja
jmp
mov
push
repnz
test
adc
pushf
xchg
int3
inc
pusha
mov
jns
(bad)
(bad)
inc
in
test
fnstsw
and
es
rcr
jle
retf
mov
movs
aas
iret
shl
pop
js
mov
aas
mov
popf
shl
mov
or
jp
std
into
and
jmp
xchg
mov
cmc
jo
shl
in
cmp
inc
gs
gs
pop
jmp
retf
call
sbb
fidivr
dec
dec
push
stos
cwde
loopne
mov
xor
jne
sub
stos
inc
aam
inc
cmp
sub
add
popf
ficom
add
retf
or
jb
retf
adc
test
in
xchg
rol
xchg
cmps
int
xlat
les
adc
push
add
jnp
adc
adc
sub
sub
pusha
pop
inc
ins
push
loopne
jne
mov
mov
xor
rep
lods
jno
(bad)
cmp
arpl
mov
fistp
in
loop
jnp
les
stc
aam
mov
xor
mov
pop
fst
dec
nop
cmps
ds
fcom
imul
(bad)
(bad)
stc
mov
lods
imul
dec
add
push
dec
xor
cmp
outs
cmps
sub
mov
jle
mov
mov
adc
cwde
push
(bad)
cmp
ds
(bad)
sbb
fsubr
in
mov
std
test
mov
ret
mov
aas
ror
imul
and
test
arpl
das
idiv
cmp
(bad)
cmps
aam
out
fs
add
mov
inc
mov
mov
rcl
loope
aad
es
cld
lsl
stos
(bad)
mov
out
push
add
or
mov
jmp
jge
or
out
stos
xchg
jbe
cmp
jno
mov
xchg
lahf
sbb
mov
jb
push
dec
cdq
sbb
cdq
jo
and
ins
jge
fisubr
push
inc
adc
mov
std
aam
movs
pop
add
or
lahf
dec
test
les
addr16
repnz
jg
aas
pop
mov
cmp
rol
std
xlat
fsubr
adc
xchg
add
arpl
xchg
mov
or
icebp
pop
dec
pop
cmp
xor
(bad)
(bad)
test
lahf
out
ds
pusha
add
movs
arpl
arpl
not
inc
cwde
arpl
inc
cmp
pop
lock
inc
aad
ret
(bad)
ds
aad
test
das
adc
add
mov
ret
aas
std
pushf
sbb
call
mov
clc
cmc
adc
addr16
mov
mov
cmps
and
popf
pop
adc
cli
stos
dec
push
test
mov
sbb
add
pop
icebp
cmp
cld
cmp
jp
sbb
ret
adc
ror
mov
push
or
adc
push
dec
push
lea
inc
jns
neg
enter
mov
fsub
repz
inc
es
adc
bound
or
cmp
imul
sbb
xchg
nop
je
cmp
scas
ds
sbb
ins
adc
je
mov
inc
cmp
push
sub
ins
push
xchg
fcom
bound
inc
mov
jmp
movs
or
bound
loop
sbb
shl
mov
mov
adc
pop
fstp
int3
ds
cli
repnz
loop
pop
in
clc
sbb
fucomip
cdq
clc
iret
adc
or
ss
retf
xor
(bad)
(bad)
cmps
jle
add
xor
enter
ret
xchg
shl
pusha
out
xor
push
sbb
add
out
jle
das
pop
repnz
fnsave
shr
hlt
std
dec
cmp
push
fcmovne
dec
push
lea
mov
sbb
jle
push
loopne
inc
scas
(bad)
clc
vpshaq
mov
sub
je
imul
mov
pop
sub
mov
mov
xchg
mov
shl
dec
adc
inc
test
add
jmp
jmp
sub
xchg
cmp
popf
scas
addr16
mov
inc
pop
add
in
dec
xchg
pop
jecxz
sti
cli
mov
stos
clc
sar
push
inc
rcl
repz
pop
mov
imul
add
mov
loopne
jmp
aad
sti
add
push
sti
scas
(bad)
ret
push
push
jecxz
data16
popf
and
push
imul
mov
ret
mov
xchg
out
cmp
jne
mov
call
fcmovb
(bad)
or
stos
xor
or
sar
sub
pop
int3
pop
xor
lock
mov
pop
cmp
ins
mov
inc
cwde
int
adc
popa
inc
add
xchg
xchg
dec
test
fmul
shl
cs
std
in
dec
dec
ins
int3
jge
imul
mov
push
movs
and
fwait
sub
aas
push
in
jg
mov
sbb
cwde
in
or
xchg
imul
adc
outs
pop
jb
inc
sbb
aam
fsubr
dec
fwait
ja
int
sbb
mov
mov
xchg
daa
add
shl
imul
dec
in
test
inc
xor
jg
cmps
mov
jnp
jg
jle
inc
sub
and
rcl
lahf
test
shr
jns
push
mov
or
out
(bad)
aas
add
sub
mov
xchg
jg
test
imul
cmp
int
das
push
jno
or
xor
(bad)
ja
ret
push
inc
dec
inc
jns
mov
xor
fsubr
not
mov
(bad)
out
std
add
les
test
or
inc
outs
stos
and
aaa
xor
js
test
add
push
xchg
cmp
call
cmp
shl
mov
mov
mov
jo
imul
sub
push
jmp
pop
lods
cmp
fild
push
xchg
dec
or
cmp
dec
cmp
icebp
ja
sbb
ret
pushf
and
mov
sbb
pop
pop
sti
ficomp
fistp
stos
fimul
sbb
pop
out
imul
cmp
aaa
mov
xor
cmc
cmp
sub
sub
push
and
mov
inc
movs
cmc
xor
(bad)
add
cmc
mov
lods
cmp
ins
test
mov
outs
inc
clc
lods
mov
aas
pop
pop
jmp
sub
inc
movs
arpl
push
aas
imul
or
add
(bad)
jne
mov
mov
mov
cld
shr
mov
push
dec
aam
and
fidiv
jae
ja
inc
pop
in
ror
adc
ins
push
pop
push
daa
mov
mov
shl
mov
into
jecxz
not
fnstcw
and
adc
test
add
xor
test
jne
call
(bad)
into
xor
cmp
inc
scas
(bad)
push
add
xchg
sti
stos
jmp
not
xor
in
jns
daa
sbb
in
push
retf
test
adc
push
mov
push
cdq
(bad)
loopne
call
xor
scas
mov
push
sahf
and
jmp
push
(bad)
in
test
pop
cs
jl
dec
or
add
nop
adc
inc
stos
sbb
nop
or
push
pusha
ret
mov
add
fdiv
mov
cmp
xor
xor
push
pop
loop
add
dec
fs
or
pop
and
push
in
out
fwait
retf
arpl
retf
jmp
xchg
xchg
mov
xchg
enter
xlat
mov
(bad)
push
addr16
data16
xchg
pop
adc
and
in
mov
retf
loop
clc
jo
std
dec
fadd
adc
ins
(bad)
sub
push
retf
dec
sbb
fwait
arpl
adc
pop
push
test
fs
imul
ja
and
out
or
and
mov
lds
jl
mov
jnp
in
mov
popa
dec
push
test
mov
mov
dec
adc
mov
mov
jl
cmovle
daa
pop
and
jmp
or
pop
pop
sub
int3
or
inc
sahf
mov
mov
ret
mov
inc
xchg
fisttp
xchg
mov
push
mov
out
sub
shl
or
ds
cmp
sbb
lea
jle
(bad)
jns
addr16
xchg
out
std
addr16
sbb
bound
mov
dec
and
mov
mov
sub
or
dec
or
mov
push
pop
push
int
ins
fsub
retf
in
in
sub
test
jmp
cmp
inc
xchg
mov
inc
jae
outs
cmp
loopne
adc
adc
enter
lock
xor
cmc
dec
xor
das
push
and
inc
xchg
out
push
lea
xor
in
fdiv
int3
(bad)
scas
or
sti
mov
fnstenv
test
cdq
add
mov
out
mov
lock
sub
dec
in
out
push
mov
and
push
pushf
and
sub
mov
sbb
fdiv
dec
inc
cmp
retf
rcl
imul
test
pop
rcl
retf
lahf
mov
icebp
inc
dec
sbb
or
test
loope
xor
fs
nop
mov
dec
add
add
mov
aaa
inc
pop
and
mov
in
enter
xchg
dec
dec
add
int3
add
arpl
inc
in
mov
xchg
popa
jo
push
in
mov
fs
push
call
lods
repz
inc
call
jne
stos
pop
xlat
xchg
or
sti
cwde
(bad)
and
jo
sbb
dec
sbb
xchg
mov
cwde
cmp
movs
push
std
enter
icebp
fidiv
sub
sbb
iret
push
not
das
sbb
adc
pop
es
mov
add
nop
imul
cs
push
fadd
and
getsec
mov
jg
cmp
xlat
mov
scas
sub
ins
push
push
out
or
(bad)
push
adc
push
test
dec
aaa
dec
jae
les
or
xchg
pop
inc
xor
mov
sbb
cmp
ret
bound
movs
inc
sub
add
sub
xor
pop
ins
xchg
dec
popa
cs
mov
sub
jle
jae
popa
push
test
(bad)
je
or
dec
or
and
daa
sar
xlat
loope
xor
dec
mov
(bad)
fild
jp
movs
mov
les
mov
add
xchg
mov
add
jl
leave
shr
xchg
int
pop
inc
scas
pop
mov
sbb
popf
inc
adc
repnz
fimul
daa
scas
add
loopne
cmps
adc
in
out
adc
and
pop
add
stos
cmovs
push
les
mov
div
dec
mov
jns
cwde
xchg
jo
mov
mov
push
popf
or
pop
cmp
and
daa
jle
mov
daa
cmc
lea
out
icebp
jae
les
add
data16
dec
cmc
push
icebp
retf
and
adc
mov
arpl
mov
cmps
mov
jp
mov
sbb
out
out
jecxz
adc
jno
sub
mov
inc
lods
or
sti
xor
inc
push
mov
repz
or
push
(bad)
xchg
pop
add
or
movs
mov
sahf
inc
pop
dec
push
test
adc
(bad)
sbb
xchg
pop
cld
mov
lock
xor
push
pop
ins
or
adc
dec
and
mov
out
lods
lock
push
fnstsw
push
cs
retf
call
pushf
sar
add
hlt
stos
mov
inc
out
jnp
(bad)
jl
cli
push
xchg
outs
mov
push
repnz
push
and
rol
cmp
adc
and
fidivr
loopne
add
pusha
cmps
xchg
jp
xchg
pushf
mov
sbb
inc
cmp
and
imul
push
mov
xor
dec
inc
test
jp
das
or
in
mov
out
cwde
daa
mov
ins
div
rol
dec
mov
cmp
jl
push
jae
cmp
enter
jbe
mov
pushf
push
or
lea
fadd
lea
out
ds
test
cmps
pop
and
ss
and
mov
sub
iret
xor
ror
into
push
pop
and
xor
push
ins
popa
fistp
retf
sub
cld
sub
nop
pop
cmp
iret
xor
ins
jno
fwait
outs
inc
mov
(bad)
sub
cs
xor
fdiv
xchg
(bad)
xor
add
pop
out
ins
xchg
and
pop
jns
sbb
and
mov
out
push
lock
mov
data16
test
clc
dec
jmp
dec
push
pop
xor
pop
outs
jg
iret
sbb
adc
mov
mov
pop
rol
jle
inc
jle
or
mov
pop
mov
xor
push
jge
mov
test
cli
daa
les
stc
pop
jo
mov
dec
mov
xor
sbb
push
mov
lea
cmp
cmp
jmp
sub
enter
test
push
mov
dec
scas
cmp
cdq
jg
push
pop
sub
dec
mov
or
ficomp
pop
sub
adc
loop
cmp
rcr
add
retf
daa
dec
into
lock
fdiv
add
sbb
inc
ror
xor
cmps
mov
jle
push
sub
inc
std
xchg
push
push
inc
and
dec
aam
out
dec
sbb
sub
scas
inc
(bad)
stos
aad
dec
test
cmp
xchg
mov
cmp
jns
fs
cmps
or
lds
or
repz
movs
sti
cmp
mov
sub
cmp
xor
inc
cmp
scas
and
les
xor
into
imul
jl
out
cmp
outs
(bad)
inc
dec
xor
ins
jp
cli
xchg
xor
dec
arpl
out
int
data16
push
enter
xchg
(bad)
leave
out
sahf
sbb
xchg
pop
ret
push
fist
aad
movs
movs
test
push
je
push
mov
pop
ds
sbb
mov
xchg
push
out
push
pushf
jo
gs
xor
fisub
call
or
cmp
inc
into
adc
sbb
ss
push
pop
clc
in
push
data16
sahf
add
or
mov
xor
xor
ds
jae
movs
push
(bad)
call
out
pop
imul
mov
cmp
xor
pop
es
lods
mov
enter
movs
sub
dec
int3
push
jbe
dec
xor
cmp
outs
sub
sar
pushf
lea
jle
push
iret
mov
mov
int3
out
add
add
push
push
cmp
cmp
push
gs
fbstp
dec
fimul
jmp
xchg
or
cli
outs
xchg
inc
in
cmp
cwde
stc
xor
stos
(bad)
push
iret
mov
icebp
inc
and
xchg
imul
js
or
cli
(bad)
stos
pop
jl
add
and
mov
outs
push
in
lea
pop
jg
in
mov
push
adc
inc
inc
sub
add
mov
cmp
push
jae
rol
lea
sub
leave
dec
sahf
dec
push
ret
sub
mov
cs
outs
fbld
add
lock
fist
arpl
inc
pusha
in
fisubr
xchg
and
(bad)
in
rol
inc
push
mov
lahf
pop
das
xor
fistp
int3
mov
fstp
fstp
sbb
stc
not
mov
mov
dec
push
(bad)
mov
mov
stos
or
push
push
je
shl
in
arpl
dec
stos
push
mov
fcom
mov
inc
jmp
loopne
dec
(bad)
fwait
mov
jnp
mov
cmps
clc
cdq
call
or
(bad)
push
adc
xchg
pop
sub
pop
cmp
fist
push
div
test
out
lahf
imul
(bad)
lea
adc
dec
bound
je
push
addr16
fmul
add
mov
dec
mov
mov
adc
xchg
cmps
gs
ficom
shl
mov
shr
xchg
pop
retf
push
test
sbb
dec
or
test
mov
jg
inc
jae
mov
dec
add
stc
fincstp
push
cmc
clc
out
adc
jno
cld
aam
cwde
sbb
sub
jge
xor
das
enter
mov
jb
push
pop
lods
mov
mov
ret
hlt
mov
xor
sub
jo
data16
jbe
dec
inc
enter
lds
add
repnz
push
scas
jge
add
or
lock
dec
mov
mov
push
jecxz
test
dec
lods
fsub
push
loope
cmp
test
mov
jg
inc
outs
daa
mov
aam
std
les
aad
cmp
mov
mov
pop
(bad)
ins
ror
das
lea
add
pop
movs
push
push
outs
mov
(bad)
mov
hlt
mov
outs
sbb
dec
data16
cld
and
and
or
adc
scas
fcomp
dec
pop
test
popf
sbb
or
ins
push
sbb
fwait
cmp
xor
cmp
dec
and
outs
dec
xchg
pop
cwde
outs
push
int
push
mov
out
(bad)
stos
dec
mov
xchg
imul
sbb
dec
add
and
pop
pop
xor
addr16
stc
ins
mov
fidivr
pop
push
adc
pop
pop
test
xor
push
mov
fist
adc
dec
mov
lods
lods
push
fst
test
sub
mov
cld
icebp
fnstcw
lahf
rcr
cdq
pop
imul
bound
repz
mov
sti
loopne
sub
ins
leave
push
fisttp
sbb
inc
sti
sub
mov
inc
and
sbb
ret
mov
lods
dec
dec
mov
and
mov
push
fmulp
test
hlt
xor
test
retf
inc
add
ds
popa
and
add
inc
pop
neg
shl
push
and
mov
cdq
out
outs
cmp
pop
push
call
test
xchg
aam
adc
inc
xchg
rol
pop
jo
int
pop
or
xchg
fsub
add
sar
push
inc
mov
cmp
push
out
sti
sbb
dec
add
retf
xchg
inc
inc
aam
imul
or
sar
es
or
popf
jbe
and
or
icebp
xchg
and
fmulp
call
add
or
loopne
ret
jmp
adc
xlat
cwde
addr16
mov
jge
push
push
xchg
bndstx
(bad)
mov
adc
fbstp
inc
cmps
cmp
sbb
pop
pop
out
sbb
cld
repz
mov
hlt
cmp
movs
in
inc
cmp
add
pop
sub
data16
xlat
pop
iret
aas
xchg
pop
outs
sub
popa
mov
sub
mov
dec
xchg
shr
mov
mov
shr
jecxz
lahf
ror
daa
arpl
xchg
mov
mov
push
int3
cmp
call
jecxz
or
scas
aam
pop
push
inc
in
sub
add
xchg
adc
shl
lods
imul
scas
scas
cmp
inc
cmp
lock
in
(bad)
pushf
repnz
adc
dec
cdq
xor
call
es
xchg
lds
stos
or
(bad)
cli
and
dec
mov
lods
push
mov
test
pop
ins
jmp
push
call
sub
ror
inc
xchg
sub
and
cmp
stos
mov
jne
rcr
mov
or
loope
sub
add
outs
(bad)
fcom
ret
fstp
xchg
sbb
push
retf
jne
test
push
in
xchg
cmp
mov
adc
icebp
and
nop
sub
push
push
movs
xlat
fcomp
xor
je
(bad)
cmp
inc
jl
mov
test
aas
push
fild
mul
sbb
test
int
pop
retf
push
lods
loopne
dec
outs
or
sbb
pop
test
mov
xor
fldcw
sahf
les
pop
lods
das
jl
in
and
pop
(bad)
mov
jne
sub
pop
stc
dec
dec
fmul
add
xchg
pop
xor
shl
popa
jo
arpl
movs
xchg
jo
sub
call
pop
mov
cmp
cmp
jle
loope
mov
push
dec
sbb
bound
pop
dec
fidivr
(bad)
inc
in
pop
sub
mov
jb
into
div
lahf
adc
daa
retf
ret
div
sub
push
xor
rcr
aad
adc
push
pop
cwde
outs
pop
sub
cdq
xor
add
test
fwait
int3
lahf
or
pop
shl
and
xchg
sbb
ret
or
jnp
mov
cmp
pop
jmp
pop
or
lock
cmp
cmp
cmc
movs
and
jle
mov
or
ss
sahf
adc
cli
mov
nop
inc
loope
jmp
leave
fdivr
test
lahf
pop
out
inc
dec
lahf
adc
add
cmp
xchg
inc
add
test
push
jae
lods
jp
pop
xor
xchg
jns
das
pcmpeqd
rol
repnz
test
or
retf
pop
pop
not
dec
sub
dec
test
jg
ret
mov
ins
lock
clc
je
mov
loopne
or
cdq
dec
mov
mov
dec
popa
call
add
jb
push
push
jns
lea
ret
inc
(bad)
call
inc
sbb
push
mov
sub
ror
push
nop
popa
jnp
les
sbb
sub
cld
inc
jp
pop
sub
xor
outs
adc
push
push
jae
cdq
sbb
cmp
test
mov
inc
in
pop
cmc
pusha
push
test
inc
loopne
jo
and
pop
pop
movs
dec
cmp
fnstcw
call
lock
sub
jae
mov
sar
fcom
jp
movs
mov
lea
dec
mov
push
mov
adc
cmc
jne
arpl
aam
mov
(bad)
call
into
jbe
pop
sar
adc
inc
jle
arpl
xor
inc
sbb
jge
push
outs
outs
std
mov
stc
mov
cmp
sub
lea
ins
ror
inc
in
loopne
dec
cwde
push
xchg
xor
push
into
cmp
mov
lock
xchg
int3
pop
dec
dec
or
push
std
nop
cmp
push
les
push
jb
xor
lods
sbb
dec
sbb
add
adc
popa
ret
add
jl
shl
jle
jne
pop
add
mov
ror
shl
cmp
(bad)
jmp
hlt
mov
mov
cmps
ror
addr16
dec
and
nop
aaa
ret
mov
es
lods
add
in
add
pusha
inc
stos
dec
push
cs
pusha
cmp
adc
lahf
and
mov
adc
sub
ds
cmc
add
sub
pop
fcomp
outs
aaa
lods
repz
xor
imul
mov
sahf
pop
mov
sbb
cmp
sbb
retf
sahf
or
out
int3
cmp
add
cmc
test
sub
mov
scas
sbb
imul
arpl
ret
popa
test
adc
cdq
(bad)
std
push
sbb
in
je
push
pushf
fwait
inc
cli
mov
retf
and
xadd
imul
test
scas
cmps
mov
xchg
push
jb
xor
xchg
sub
or
arpl
ret
fist
adc
mov
fdiv
xchg
shl
sar
inc
call
push
jle
mov
jg
repz
dec
push
mov
cmps
sub
imul
push
cmps
div
push
test
cmps
fs
xor
int
add
hlt
or
mov
scas
mov
sub
pop
xor
jl
pop
sbb
aas
int3
mov
jns
loop
jp
jne
xlat
inc
repz
mov
loope
outs
pop
adc
xchg
jmp
rcr
les
je
push
gs
ret
loopne
iret
add
retf
out
xor
pop
ror
add
outs
aas
scas
sbb
xchg
mov
ja
xchg
or
sub
xchg
movs
cmps
pop
mov
icebp
inc
leave
jnp
outs
fmul
and
fidivr
mov
xchg
push
dec
inc
mov
xchg
test
sti
daa
push
cmc
xor
dec
and
cwde
pop
adc
je
push
pop
sti
jo
add
out
xor
dec
dec
add
push
lds
stos
cmp
fdivr
int
push
add
mov
add
jns
cmp
push
xor
jno
or
or
stc
stos
sub
shr
jmp
aaa
xlat
jecxz
mov
sahf
clc
ins
and
push
sbb
jmp
xchg
dec
stos
xor
sbb
xor
retf
mov
adc
scas
jo
push
gs
xchg
shr
xchg
add
add
mov
add
dec
mov
cmp
in
fist
push
mov
jge
mov
mov
adc
push
pop
xor
or
mov
mov
dec
push
daa
or
mov
test
not
mov
call
cmp
inc
jae
(bad)
ss
(bad)
std
loopne
ror
xchg
mov
mov
xchg
rcl
sbb
iret
push
cmp
ficomp
pop
cmp
sbb
pop
and
outs
xchg
mov
and
popa
out
push
jne
mov
movs
loop
inc
cs
dec
into
hlt
push
and
or
xor
sbb
pop
test
xchg
ins
scas
dec
inc
mov
jns
stc
cmp
(bad)
mov
enter
sbb
out
into
mov
sahf
pusha
and
mov
popaw
cmp
retf
inc
ror
in
mov
dec
or
ret
pop
mov
retf
sbb
sti
movs
mov
pop
jmp
push
mov
dec
ja
hlt
lock
fcmovne
cwde
jmp
mov
iret
mov
pop
lahf
test
mov
dec
jmp
jne
push
cmp
mov
scas
stos
push
push
sbb
fsub
bound
mov
ret
mov
hlt
adc
(bad)
cli
cmp
daa
inc
push
cs
pop
mov
call
js
inc
or
lods
into
hlt
dec
dec
push
add
sahf
cwde
pop
in
sub
cmp
(bad)
or
and
fcomi
sbb
dec
push
xchg
jb
cmc
or
pop
fisubr
outs
jo
fidivr
ja
xor
cwde
jo
sar
addr16
cli
les
cld
pushf
shl
movs
movs
in
pusha
adc
jne
inc
fimul
or
js
xchg
mov
mov
shl
xor
mov
lock
fcmovnb
cdq
cmp
mov
fiadd
inc
add
in
xchg
xchg
clc
mov
ja
xchg
mov
es
ret
jmp
adc
jns
shl
es
and
xlat
jbe
lea
out
addr16
outs
imul
inc
cmp
fldcw
sbb
lock
and
ja
push
int
jge
adc
adc
mov
mov
add
(bad)
loopne
mov
dec
and
mov
adc
lds
dec
test
sahf
pushf
fcom
cmp
stos
clc
mov
mov
das
scas
int
mov
add
xchg
jb
and
cmp
or
or
xchg
or
test
cmp
je
sub
sbb
push
cmp
stos
jmp
cdq
pop
dec
or
(bad)
dec
jmp
cmp
xchg
mov
push
(bad)
pop
push
adc
or
pop
sbb
cdq
mov
jno
mov
out
mov
(bad)
js
in
sub
in
lods
cmp
cmp
shl
mov
mov
ror
gs
sbb
push
retf
addr16
jne
js
out
xor
mov
xor
cmp
and
mov
cmc
adc
das
cs
cli
test
(bad)
or
call
ins
dec
pop
repnz
push
pop
pop
xchg
(bad)
mov
stc
pop
pop
(bad)
stc
push
imul
xchg
xlat
sahf
and
das
jns
sbb
clc
ja
sti
or
push
in
(bad)
xor
fsubrp
adc
pop
xchg
retf
lods
push
fidiv
inc
aas
sbb
inc
jmp
fldcw
shr
retf
mov
cmp
stc
test
cs
pop
push
mov
mov
jecxz
push
loope
xchg
int3
out
dec
sbb
pop
mov
pop
dec
pop
ja
mov
mov
xor
pop
push
dec
dec
pop
sti
dec
icebp
idiv
pop
repz
add
and
popf
jg
push
push
mov
mov
jns
(bad)
or
jns
add
fmul
mov
jl
or
shr
mov
scas
scas
sub
push
stos
xor
mov
enter
push
aas
jae
mov
add
sub
test
push
xor
push
push
icebp
jo
cmps
cwde
rol
outs
mov
(bad)
pop
(bad)
adc
pop
bnd
push
fiadd
dec
popa
pusha
add
adc
jno
cmp
sbb
leave
bound
call
and
sub
push
fnsave
(bad)
jl
sub
fcmovnbe
hlt
mov
inc
push
or
ret
jo
jge
retf
add
dec
cmp
jecxz
lods
add
dec
mov
fldenv
jo
mov
loope
pop
mov
inc
jno
int
in
loopne
fsubp
sub
icebp
push
fld
adc
fscale
(bad)
jno
rcl
add
test
pop
fisub
dec
imul
sbb
movs
movs
mov
dec
adc
and
lods
or
hlt
test
scas
push
mov
sub
mov
stos
mov
inc
(bad)
push
frstor
mov
or
xlat
(bad)
sub
sub
ins
cmp
sub
outs
mov
mov
mov
push
pop
jbe
dec
dec
lock
add
push
xchg
cwde
add
jge
test
(bad)
lock
addr16
adc
inc
cmps
pop
iret
inc
pop
int
(bad)
mov
mov
xchg
pop
inc
cmp
popa
shl
dec
sbb
out
xor
adc
(bad)
xchg
lods
cmp
es
sahf
(bad)
mov
sub
pop
js
mov
mov
xor
icebp
xor
cdq
in
sbb
neg
outs
add
test
and
jae
inc
pop
stc
sbb
xchg
pop
shr
push
in
sbb
test
cld
pop
mov
sti
icebp
sub
push
in
jno
(bad)
pop
cmp
dec
pop
mov
retf
rol
xchg
scas
pop
aaa
mov
jnp
pop
or
test
push
add
mov
adc
movs
sbb
sub
les
mov
xchg
out
outs
sbb
xchg
add
retf
call
rcr
clc
adc
or
in
jg
and
mov
inc
(bad)
jmp
pop
imul
cmp
sub
call
jmp
iret
jne
movs
mov
cmps
pop
cmp
fistp
sub
jne
mov
mov
stos
cmp
add
ror
inc
mov
fld
xchg
mov
adc
dec
cmps
fisttp
mov
xchg
mov
bound
push
pop
repnz
sub
and
jg
xchg
mov
outs
movs
scas
mov
lea
cmps
mov
push
pop
sbb
cs
inc
pop
and
out
and
jns
retf
movs
sbb
cmps
inc
enter
and
and
popa
movs
lods
adc
xor
popa
add
pop
lds
inc
add
sub
out
pop
test
push
ss
add
mov
daa
mov
push
retf
popf
cwde
mov
xor
sbb
cdq
adc
mov
push
jo
and
cmp
mov
mov
cld
adc
and
inc
add
fmul
sysenter
fwait
jecxz
push
xor
mov
nop
pop
mov
and
or
push
cmp
xor
push
mov
push
mov
and
hlt
aaa
cs
sahf
sub
ins
sub
adc
ja
test
scas
bound
je
jb
test
ins
in
mov
fidivr
test
push
xchg
dec
push
cli
call
mov
inc
mov
mov
pushf
in
imul
xchg
mov
int
test
xchg
(bad)
stos
ins
push
in
pop
mov
mov
cdq
test
and
daa
inc
or
dec
out
mov
cli
ja
pop
enter
hlt
test
in
iret
push
daa
outs
jbe
or
or
rcl
out
div
test
aad
inc
jno
sbb
into
adc
shl
std
pushf
lods
shl
sub
pop
pop
loop
stos
mov
xor
movs
(bad)
xchg
pop
movs
jnp
imul
clc
mov
add
jno
jg
cmc
mov
xchg
inc
mov
add
inc
test
out
cmp
hlt
sub
sub
scas
xchg
jns
cwde
cmps
cmp
jns
mul
arpl
rcl
push
mov
mov
test
xor
adc
lods
add
(bad)
mov
mov
cmps
sti
cmp
ins
(bad)
xchg
sub
push
sub
fstp
(bad)
push
mov
dec
pop
in
sub
mov
add
cmps
pop
pop
push
or
mov
jno
adc
pop
gs
das
dec
rcl
mov
xor
dec
sub
add
fnstenv
pop
pushf
arpl
mov
add
hlt
mov
cmc
sti
jbe
cmp
retf
mov
std
cmp
sbb
inc
ds
adc
mov
mov
or
shl
bound
mov
repnz
pusha
inc
rcr
sub
xchg
(bad)
dec
enter
cmps
add
cmp
imul
in
mov
xor
in
and
mov
(bad)
shr
fwait
es
jae
iret
push
mov
lds
sub
sub
mov
in
sub
or
test
sbb
ds
mov
xlat
pop
ret
stos
inc
add
pop
test
xor
xor
(bad)
xlat
shr
js
mov
adc
dec
and
mov
fdivr
sbb
cmp
not
xchg
mov
mov
inc
retf
xlat
scas
fstp
or
and
bound
pop
cmps
sub
push
sub
inc
mov
lods
retf
int
retf
fadd
adc
stos
pusha
xor
sub
push
jnp
movs
fmulp
test
and
imul
lods
aam
or
xor
xchg
adc
imul
shl
ins
cmp
(bad)
push
add
mov
repnz
mov
inc
pop
jmp
jmp
shl
adc
sub
add
xor
ja
and
imul
cmp
dec
retf
push
inc
mov
call
push
xor
fisubr
hlt
test
or
jbe
ins
fisttp
dec
or
sahf
inc
jmp
in
cli
pop
pushf
adc
dec
inc
test
pop
add
ds
(bad)
sbb
pop
lods
in
cmp
scas
mov
dec
test
jge
div
ja
idiv
mov
cs
push
sub
jo
pop
enter
jo
push
mov
cmp
mov
mov
jns
add
xor
mov
jb
inc
ror
mov
std
jno
dec
je
jl
push
mov
add
movs
mov
add
pop
push
cmp
dec
outs
and
faddp
dec
jno
lahf
push
dec
ror
scas
jnp
ret
fstp
add
add
aad
lods
sbb
loop
lods
push
sbb
ficomp
mov
push
sbb
mov
cs
fidivr
xchg
cmp
popf
inc
xchg
pop
sahf
cmp
stos
imul
icebp
dec
popa
in
mov
ja
mov
shl
ja
inc
jecxz
das
pop
(bad)
xchg
retf
xor
repnz
dec
ds
loope
sbb
or
fwait
bound
dec
fst
pop
cmps
retf
sbb
sub
adc
xchg
xor
pushf
movs
in
pop
and
setno
sbb
mov
clc
pop
arpl
dec
js
add
(bad)
lds
mov
jg
jb
push
or
icebp
adc
mov
aaa
sub
inc
sub
push
stos
ins
rol
or
cmp
into
xchg
cdq
sbb
aas
mov
jb
mov
push
outs
dec
call
fdivr
dec
daa
pop
test
scas
ror
mov
mov
(bad)
inc
call
pop
or
jge
pop
(bad)
data16
mov
(bad)
movs
sub
hlt
cmp
inc
in
(bad)
jne
and
pop
fnstcw
hlt
or
pusha
scas
fistp
or
xor
hlt
clc
int
jo
jb
push
mov
push
out
sub
pop
movs
mov
test
push
out
push
loopne
enter
push
push
mov
adc
dec
(bad)
and
in
xor
jmp
loope
xor
push
or
icebp
mov
je
mov
mov
mov
adc
std
cmps
mov
mov
popa
test
cli
jne
and
adc
js
xchg
in
jne
mov
push
adc
mov
stc
jp
cwde
inc
out
test
pop
xchg
test
ja
mov
daa
test
and
into
cdq
inc
js
daa
(bad)
pop
aad
test
dec
dec
ins
push
or
or
and
test
pop
bound
push
rcl
jge
hlt
jmp
dec
mov
sbb
out
xchg
(bad)
rcl
imul
clc
bound
dec
push
div
popa
aam
out
xchg
fld
sahf
pop
iret
cmp
mov
cmp
or
jno
jbe
int
push
retf
aam
rcl
inc
dec
(bad)
test
aam
xor
or
adc
sub
dec
out
adc
out
retf
and
jo
data16
and
ret
dec
lock
sti
mov
sbb
lea
mov
inc
xor
rcl
push
in
movs
(bad)
daa
fadd
push
xor
adc
loopne
and
repnz
test
jmp
rsqrtps
pop
call
addr16
pushf
mov
mov
retf
sbb
or
movs
and
and
adc
or
dec
adc
mov
imul
cmp
xchg
push
test
test
pop
stos
inc
rcl
lods
inc
outs
jno
jns
mov
xchg
fistp
ins
cli
mov
pop
add
jle
add
push
pushf
aaa
push
jmp
or
std
loopne
jmp
mov
mov
push
pop
push
sub
sbb
push
popf
mov
pop
dec
rol
or
mov
pusha
int
and
jl
sbb
and
sub
jecxz
das
repz
lods
sub
je
pop
cmp
or
retf
ret
fisttp
and
push
fcmovnb
dec
lock
mov
bnd
cmp
loop
movs
mov
dec
out
cwde
cli
sub
in
or
and
xor
add
stos
imul
cmc
imul
mov
inc
rcr
dec
jb
mov
cmps
mov
shl
cmp
xchg
mov
pusha
je
je
and
scas
rcl
in
into
aaa
dec
xor
cmp
inc
mov
movs
mov
xchg
bound
mov
jmp
push
mov
pop
adc
pusha
pusha
scas
mov
scas
jmp
mul
popa
add
pop
sub
add
and
and
ret
xor
pop
pushf
xor
xchg
aad
sub
nop
mov
mov
ret
xchg
xor
lock
loop
dec
movs
xor
cmps
or
imul
mov
outs
fnstsw
push
dec
dec
xor
jge
imul
mov
movs
xchg
fisubr
mov
(bad)
and
dec
les
cmp
cmc
jno
sti
jo
adc
sub
pop
push
stc
movs
pop
cmovns
mov
mov
inc
add
xor
adc
push
mov
cmp
ja
xor
cmp
out
clc
into
mov
(bad)
xor
cmp
push
xor
in
mov
mov
xor
arpl
les
or
bound
outs
aam
cld
push
es
ss
neg
cmc
xor
cmc
jno
out
mov
and
mov
jnp
push
dec
push
test
mov
data16
stos
idiv
adc
cmc
and
ror
icebp
mov
pop
f2xm1
stc
out
(bad)
sar
adc
fistp
jl
test
out
scas
jb
sub
shl
jns
sub
lea
fistp
dec
push
fild
or
xlat
sbb
and
out
jae
push
xchg
add
nop
out
sub
mov
or
sbb
add
or
dec
cmp
call
cmp
xchg
inc
int3
xchg
shl
(bad)
or
adc
fnstsw
inc
jp
in
mov
hlt
or
jecxz
pop
cmp
popf
sub
xchg
shr
fistp
cmp
mov
mov
ja
inc
cmp
rcr
daa
push
idiv
stc
sub
ret
add
pop
pop
xchg
addr16
sbb
or
pusha
idiv
inc
add
xchg
and
push
push
pop
and
adc
adc
ja
add
test
dec
jae
leave
fs
out
mov
mov
cmp
sar
push
test
fwait
adc
(bad)
jo
jns
rcr
push
mov
xrelease
pop
mov
out
je
mov
add
mov
xor
xchg
add
or
daa
cmps
lods
out
call
repnz
leave
fld
ficomp
xchg
movs
mov
movs
enter
idiv
bound
mov
xchg
les
jb
mov
push
push
data16
ficomp
pop
push
fcom
mov
loopne
nop
int3
jbe
outs
retf
out
pop
scas
push
mov
je
push
ss
out
xlat
pusha
in
xchg
mov
adc
(bad)
push
mov
in
cmp
lock
mov
shl
add
je
sti
push
jo
jecxz
out
lds
sub
lahf
leave
imul
(bad)
xchg
xchg
test
jmp
push
les
or
call
jl
push
js
push
mul
cli
leave
sti
xchg
push
xchg
xor
jno
loopne
loope
stos
inc
mov
call
mov
not
xchg
mov
push
push
or
jns
jp
push
arpl
mov
pop
jp
jge
(bad)
dec
push
test
ja
(bad)
into
fdiv
xchg
adc
in
call
call
mov
cmc
add
fdiv
movs
clc
ret
jge
iret
scas
jle
shl
std
loop
scas
mov
mov
or
pusha
loopne
push
div
mov
inc
sbb
and
pop
retf
arpl
pop
sub
lods
std
ret
lods
mov
adc
add
es
xor
daa
lea
mov
add
xor
inc
xchg
or
lahf
(bad)
adc
and
shl
or
adc
cmp
loope
or
out
into
ss
or
pop
arpl
push
arpl
push
sbb
das
jmp
and
push
xchg
sbb
shr
imul
xor
test
pusha
jl
xlat
es
aaa
and
mul
xchg
fnstenv
cmp
std
movs
inc
lahf
daa
add
not
stc
mov
idiv
xor
popa
inc
(bad)
cs
sub
add
scas
fmul
add
(bad)
nop
retf
scas
push
push
test
pushf
rcr
jo
into
pusha
pop
shl
cli
sub
cli
sub
pop
scas
cmp
mov
xor
mov
pushf
mov
xchg
lock
daa
outs
push
adc
mov
rcr
sbb
mov
outs
mul
jb
adc
shr
adc
add
sub
push
dec
adc
iret
aaa
adc
shl
pop
addr16
imul
dec
add
scas
add
inc
(bad)
or
lods
jge
mov
mov
stos
sbb
imul
enter
pop
cmp
push
imul
mov
mov
xor
cmp
push
sbb
xor
push
es
add
mov
jne
fs
dec
cs
ret
xor
xor
es
out
leave
pop
jo
popa
out
sbb
push
aam
xchg
iret
mov
shl
dec
in
mov
cwde
enter
push
addr16
push
inc
mov
icebp
ret
dec
sbb
inc
and
pop
add
pop
or
repnz
das
mov
iret
xor
not
push
sub
retf
loopne
dec
imul
mov
pop
sbb
fdivr
cmps
and
(bad)
pop
gs
mov
out
clc
inc
jmp
dec
adc
push
ins
es
das
test
pop
cdq
fs
mov
push
dec
or
pusha
(bad)
cmps
mov
pop
clc
cmps
add
add
ror
or
neg
mov
push
outs
mov
jbe
jnp
cmp
ins
xor
xor
inc
test
push
jge
mov
ror
neg
cmps
movs
outs
adc
adc
pop
retf
push
adc
in
icebp
push
mov
ss
rol
and
dec
or
push
sub
cmps
inc
mov
test
sub
imul
mov
in
pop
test
adc
pop
push
shr
stos
iret
bound
or
icebp
push
push
push
inc
pusha
rcl
push
enter
imul
cmc
adc
mov
scas
xchg
mov
mov
cmp
push
shld
fcmovnu
jb
mov
and
and
adc
cdq
mov
sub
jbe
mov
push
faddp
sub
cmp
test
imul
push
outs
adc
in
sbb
sahf
xchg
retf
stos
jb
sbb
cmp
pop
sbb
or
lods
cs
mov
mov
imul
jnp
inc
xor
mov
adc
shr
mov
bound
ror
sub
stos
lods
push
xchg
(bad)
sar
sahf
push
xor
push
daa
add
push
int
pop
mov
jb
mov
or
cmp
aas
jbe
dec
addr16
int3
ja
out
cli
or
jae
add
les
enter
cmc
lea
push
js
clc
out
mov
loop
daa
sub
iret
stc
inc
mov
test
pop
pop
pop
mov
lods
add
pop
imul
mov
aam
jbe
das
xchg
arpl
push
mov
mov
leave
inc
or
pop
xchg
pop
xchg
sbb
cmp
iret
shl
lock
mov
pop
jne
mov
aas
iret
movs
jns
inc
and
loope
test
cmp
hlt
inc
mov
inc
outs
mov
jmp
test
test
jmp
push
mov
gs
hlt
loop
lods
imul
scas
mov
daa
and
inc
loop
mov
or
popf
xchg
or
jle
pop
out
(bad)
mov
fxch
lds
nop
in
pop
shl
pop
mov
sbb
test
cmp
pop
pusha
retf
push
lock
les
mov
fwait
sub
sahf
xchg
ficomp
popf
scas
and
mov
sbb
cmps
add
add
inc
gs
xchg
cmp
iret
add
mov
and
movs
push
xor
jle
push
inc
sbb
fst
sub
sub
ret
imul
mov
movs
and
stos
test
pop
mov
cs
jne
add
lds
jl
cmp
push
dec
mov
mov
mov
not
push
arpl
pusha
sbb
jle
push
xchg
xchg
ret
fdivr
mov
retf
sub
pop
push
inc
sbb
mov
and
test
imul
ins
adc
cwde
arpl
retf
add
(bad)
jle
jae
ja
adc
icebp
dec
dec
mov
fucom
fcom
rcl
bound
idiv
xor
inc
stos
sti
mov
test
mov
xor
pop
sub
inc
je
mov
mov
xchg
ret
adc
mov
xchg
add
arpl
add
sub
fs
imul
add
jbe
sahf
mov
fidiv
sbb
data16
sbb
sti
call
aad
loope
cli
hlt
outs
and
lods
add
sub
test
out
loop
(bad)
out
lea
pusha
arpl
movs
xchg
mov
xor
movs
mov
adc
pop
and
adc
mov
out
hlt
(bad)
xor
addr16
jge
fs
scas
daa
push
stc
outs
mov
movs
dec
xchg
(bad)
shl
scas
add
jmp
jo
cmp
pop
imul
and
or
push
cld
sub
fs
sbb
and
jg
mov
add
int
jo
adc
and
dec
imul
fisttp
jae
iret
inc
aas
mov
aaa
cmps
pushf
int3
ins
push
xor
dec
mov
mov
jne
mov
adc
mov
pop
sahf
pop
cwde
or
(bad)
(bad)
popf
adc
sub
xlat
adc
mov
cdq
sub
cmc
cmp
mov
sti
aas
inc
shl
bound
xchg
js
push
cmp
js
and
pop
scas
cwde
repnz
loopne
outs
pop
call
dec
sbb
stos
pop
adc
(bad)
call
dec
sbb
js
inc
add
shl
sbb
shr
aad
xor
jmp
jbe
fisubr
stos
repnz
rep
int3
mov
inc
mov
inc
and
inc
cmps
push
inc
sbb
(bad)
sbb
in
mov
fcompp
loope
jnp
jl
mov
in
mov
adc
and
in
mov
es
ja
jo
(bad)
popa
mov
pop
pop
jb
out
ins
mov
aam
dec
mov
mov
int
adc
lods
shr
add
pop
test
das
pop
mov
mov
adc
int3
add
push
ficom
jg
and
cld
push
push
jae
sbb
adc
dec
jmp
jp
sti
push
fldenv
test
mov
not
cmp
push
mov
out
inc
arpl
sbb
pop
dec
into
aam
xor
xchg
imul
ja
cmp
lock
add
ss
sar
imul
ret
int3
nop
cmp
mov
in
or
(bad)
lods
and
outs
adc
mov
add
xchg
adc
jmp
stos
cwde
mov
daa
jle
mov
gs
pop
mov
jle
add
inc
mov
jmp
dec
inc
bound
movs
(bad)
stos
test
dec
pop
loopne
push
xor
push
inc
(bad)
fisubr
xchg
push
stc
popa
mov
xchg
cmps
jno
push
mov
out
stos
mov
mov
mov
(bad)
cmp
and
cmp
aaa
fst
jp
ins
hlt
fimul
loope
mov
out
dec
cmp
les
or
cs
sub
xor
add
ins
imul
cmps
test
into
jge
mov
add
cmp
or
les
mov
dec
add
adc
outs
cmp
stos
fisubr
ss
push
lds
rol
in
xor
push
sub
ja
dec
dec
ins
mov
(bad)
fmul
jnp
push
jae
xor
mov
sbb
loope
or
es
jmp
adc
in
and
jg
(bad)
dec
fucomip
pop
mov
mov
xor
in
mov
ret
pop
fwait
mov
in
push
jle
sub
(bad)
jl
movs
or
cmp
xor
loope
sahf
shl
inc
pusha
pop
mov
idiv
and
pop
sbb
das
leave
imul
aad
xchg
sbb
aad
xor
sbb
inc
dec
xchg
pushf
fdivr
adc
sbb
movs
loope
or
jp
pop
push
neg
inc
psubb
pop
in
inc
xor
and
addr16
test
mov
in
xor
arpl
lock
cld
(bad)
in
fdivr
inc
push
inc
pop
test
jp
cwde
test
arpl
mov
xchg
xlat
push
xchg
test
nop
fld
test
adc
pop
arpl
jg
ins
and
test
mov
mov
mov
mov
inc
imul
inc
mov
inc
pop
les
cmp
add
jno
pop
rcr
(bad)
stos
push
lods
ds
(bad)
jmp
lahf
push
sub
popf
lahf
xchg
jl
out
xor
into
add
pop
sub
pop
test
fild
mov
lods
es
pop
sub
sahf
jb
clc
push
fld
ds
js
lods
mov
leave
out
inc
call
push
jp
repnz
imul
mov
cmp
and
fimul
aam
and
(bad)
mov
mov
fnclex
jnp
icebp
nop
sub
and
ins
scas
les
lods
ret
xor
into
int
int
fs
leave
jecxz
ror
ret
ja
inc
loope
sbb
pop
mov
clc
xchg
shr
imul
dec
push
cmc
inc
loope
sbb
jl
inc
xor
imul
mov
cdq
mov
push
mov
push
xor
ja
pop
jnp
add
sti
call
iret
mov
push
sbb
scas
jne
(bad)
xchg
push
push
mov
addr16
test
and
loop
inc
xchg
call
pop
sar
sbb
xchg
mov
aaa
(bad)
lods
ror
sbb
ins
xchg
jg
data16
jmp
daa
push
jne
mov
pop
icebp
and
add
loopne
repnz
jne
xchg
add
loop
xchg
sbb
test
sbb
lds
dec
movs
pop
iret
imul
jl
retf
cmc
(bad)
int3
push
mov
(bad)
push
push
loope
nop
in
fptan
(bad)
loope
xchg
fld
cdq
mov
pop
inc
imul
or
outs
xchg
lds
loop
inc
xchg
ficom
ins
dec
leave
adc
mov
fdivr
mov
and
xor
daa
push
dec
in
repnz
(bad)
retf
loop
fdivr
push
adc
mov
add
scas
mov
js
je
ins
(bad)
fs
cmps
xchg
shr
je
out
popf
(bad)
test
mov
add
pop
sub
fisttp
xor
loop
mov
pop
cmp
test
ret
lods
sub
(bad)
popf
pop
lds
in
es
scas
xor
add
xchg
sub
jns
sub
and
adc
pushf
mov
ss
ficom
(bad)
xor
dec
cdq
enter
or
sbb
mov
or
sti
std
push
mov
xor
scas
gs
mov
fist
sub
fs
ror
icebp
rcl
lea
je
jle
cmp
and
int
and
fld
mov
addr16
mov
out
inc
pop
popf
xchg
not
or
jae
out
aaa
ins
push
imul
imul
jl
(bad)
jns
fdiv
push
sti
cmp
outs
fidivr
stc
pop
aas
or
cmps
sbb
hlt
mov
cmp
fisub
imul
int3
dec
daa
and
gs
cmps
xor
inc
retf
jge
adc
jge
xor
imul
mov
fnstsw
call
adc
bound
daa
add
pop
ins
sub
push
xchg
push
fwait
push
into
ja
ret
je
add
lock
ret
inc
(bad)
jp
mov
neg
xchg
xor
shl
rcl
sub
stos
retf
xchg
cmp
(bad)
not
lock
xchg
xor
cs
cmovl
stos
mov
mov
ins
iret
xchg
sbb
retf
or
popa
inc
movs
pop
pop
or
rcr
cmp
xchg
and
push
scas
jle
mov
hlt
adc
clc
call
rcr
jge
push
fild
adc
aas
push
scas
pop
lahf
add
ret
xor
or
xchg
cwde
inc
ja
jl
sbb
jne
lods
jo
xchg
and
jmp
pop
jmp
fbld
int3
sti
mov
in
imul
sbb
cmp
ret
cmp
adc
push
(bad)
sbb
cmp
aas
popa
test
ror
xor
(bad)
aaa
mov
mov
movs
(bad)
push
push
pop
sbb
xlat
mov
lds
into
add
jbe
mov
push
clc
push
fs
unpckhps
aad
out
mov
mov
inc
movs
pop
push
jmp
loopne
cld
mov
jae
inc
sub
inc
hlt
cmp
inc
mov
ins
enter
aam
ror
inc
push
cmp
pop
int3
push
mov
out
adc
adc
adc
mov
xor
jle
lahf
out
inc
ror
in
(bad)
movs
call
jne
ss
lahf
stc
mov
jge
add
adc
add
jg
push
or
dec
in
jno
cdq
mov
xor
ret
call
push
pusha
push
xor
mov
xchg
jno
or
push
call
xor
inc
cmp
push
pop
scas
inc
push
int
repz
sar
jne
mov
and
or
cmps
or
mov
inc
mov
stc
dec
sahf
pop
leave
xor
mov
and
mov
int3
dec
mov
inc
loop
out
jnp
mov
lods
pop
jl
arpl
sbb
push
out
icebp
inc
push
and
mov
test
cmp
repz
cwde
jo
jns
mov
ins
mov
ss
mov
xchg
loopne
and
adc
add
fwait
test
mov
xor
xor
cmp
fwait
cwde
in
shl
dec
icebp
pop
dec
adc
push
div
mov
mov
xor
stos
jmp
rol
fcomp
retf
mov
ja
inc
stos
rcr
popa
jmp
stos
rol
sbb
mov
jmp
out
ds
loopne
and
cli
and
sub
jge
inc
push
dec
xchg
jl
and
and
fcomi
outs
out
aas
dec
mov
adc
or
xchg
inc
test
push
xchg
dec
les
(bad)
xchg
add
sbb
int3
mov
or
pop
xor
scas
pop
or
inc
(bad)
aaa
xor
lods
push
in
mov
movs
add
lods
loope
mov
js
test
dec
pop
mov
fstp
into
repz
je
cmc
and
in
jge
(bad)
in
mov
push
pop
jle
push
push
call
add
lds
xor
in
(bad)
jmp
pushf
mov
clc
dec
inc
popf
mov
pop
mov
pusha
jmp
or
sbb
ret
pop
push
popa
xchg
gs
lds
(bad)
clc
icebp
mov
and
jl
push
xor
or
leave
jae
inc
fbld
fnstcw
test
repz
and
add
inc
mov
mov
data16
mov
xchg
rcl
dec
or
in
adc
loope
retf
outs
out
mov
and
and
xchg
(bad)
hlt
lods
shl
or
movs
popa
mov
pop
dec
mov
dec
pop
retf
fisttp
sbb
in
jg
or
enter
mov
push
jp
cli
enter
inc
stos
das
adc
daa
imul
pop
ja
repnz
pop
cmp
ins
ret
push
arpl
mov
mov
ss
leave
ror
inc
aad
lahf
push
aaa
iret
rcl
mov
es
ret
cs
test
pop
ud2
retf
dec
and
je
push
sar
movs
xor
stc
shr
add
out
test
nop
out
or
in
push
push
movs
pop
cmp
dec
call
sbb
cmp
mov
imul
jb
shr
in
aas
aaa
mov
stc
mov
mov
into
jb
and
cmps
ds
cmc
lahf
sub
sub
mov
call
scas
pop
retf
mov
ss
push
adc
mov
jne
jb
push
pop
fidiv
inc
xor
les
movs
popf
fisubr
cmp
(bad)
adc
fnsave
pop
xchg
js
test
ret
and
fwait
sbb
jnp
cs
mov
and
or
ret
(bad)
xlat
stos
mov
push
mov
xchg
fimul
test
hlt
push
sbb
pop
sar
test
jp
mov
jmp
loop
(bad)
sub
outs
jmp
fwait
push
ds
push
xchg
lahf
inc
mov
ds
loope
cmp
jmp
lock
mov
repz
call
xchg
cli
dec
pop
(bad)
push
dec
pop
pop
out
fnstenv
pop
(bad)
ja
cmp
mov
push
dec
adc
inc
or
leave
gs
aas
inc
pop
push
mov
out
int
in
dec
lahf
ret
bound
dec
cmc
es
jl
push
gs
stc
mov
fadd
out
bound
arpl
mov
hlt
mov
inc
(bad)
jns
xor
pop
or
call
movs
mov
scas
mov
sub
inc
bnd
or
(bad)
push
cli
mov
push
aas
int3
xlat
imul
sbb
sub
(bad)
shl
inc
daa
pushf
(bad)
loopne
sar
fiadd
in
xlat
or
out
in
and
mov
arpl
mov
pop
dec
or
jg
in
pop
imul
int3
pop
push
dec
sub
cmp
sub
retf
or
ja
int
cld
add
pop
test
push
test
or
cmp
fstp
add
mov
out
mov
leave
scas
dec
je
sbb
and
jae
cmp
lock
dec
fwait
xchg
test
lods
and
popa
mov
adc
pushf
outs
mov
jae
cmp
jo
sbb
es
sahf
in
rol
dec
xor
into
pop
or
or
ds
out
fwait
icebp
mov
mov
pop
jle
xchg
xor
xchg
call
push
shr
mov
(bad)
add
int3
nop
das
stc
push
(bad)
lea
sub
jge
punpckhwd
xchg
push
jne
lahf
fwait
pop
dec
div
popa
enter
dec
jecxz
and
pop
push
sub
and
fmul
inc
or
ret
xchg
data16
add
jmp
jle
dec
sub
(bad)
jnp
jl
(bad)
(bad)
jno
loope
jmp
mov
test
adc
jnp
dec
jle
cmc
xor
in
mov
mov
loop
cmp
or
mov
retf
inc
pop
xor
mov
xor
loope
xor
adc
sbb
inc
pop
jg
mov
xchg
daa
mov
push
cmp
push
fistp
rcr
and
mov
fcmovu
enter
add
push
push
sub
pop
jg
ror
jmp
xchg
leave
xchg
ret
xchg
cdq
xchg
xor
pop
cmc
push
or
mov
sbb
add
ss
rol
push
mov
sbb
dec
leave
xchg
jmp
jmp
sub
jno
out
add
retf
or
test
cmc
xchg
pop
in
add
retf
aas
ds
pushf
xchg
aas
mov
movs
cdq
jmp
push
aaa
retf
mov
stos
pop
adc
or
sbb
or
ficom
or
outs
call
test
adc
fisttp
ror
adc
pop
cmp
popf
movs
cmp
or
leave
sub
adc
jae
cmp
adc
pop
add
dec
adc
out
cmp
dec
xchg
cmc
xchg
xchg
das
(bad)
or
mov
push
sub
inc
data16
sub
add
inc
aaa
es
mov
(bad)
sbb
jmp
jp
sub
outs
mov
jbe
or
sbb
xchg
rol
data16
adc
int
xchg
mov
repz
and
add
xor
dec
xor
and
inc
mov
cmp
int
pop
sbb
icebp
or
js
push
rcr
jno
(bad)
aas
jns
push
jg
repz
inc
pusha
jno
dec
inc
xchg
sahf
pop
and
cmc
mov
test
adc
in
lods
and
popf
mov
cmp
sbb
xor
cmps
dec
mov
inc
xchg
jo
pop
xor
add
mov
(bad)
neg
mov
sub
test
aam
es
sub
jmp
jne
inc
icebp
fst
inc
in
cmp
arpl
call
cmp
aam
xchg
inc
jge
js
mov
mov
add
test
sbb
sbb
imul
pushf
in
sub
ss
jmp
xor
dec
jecxz
xchg
jnp
cmps
test
sahf
cmp
push
pop
test
mov
fs
mov
sub
mov
sbb
les
or
mov
in
cmp
inc
jno
repz
dec
cmps
xor
jnp
dec
jnp
xchg
test
jecxz
cli
push
sub
mov
pop
sbb
stc
movs
pop
scas
retf
sub
adc
add
(bad)
scas
push
retf
daa
scas
rcr
in
sti
add
and
aad
push
aad
sbb
ret
(bad)
push
pop
mov
icebp
push
jae
adc
mov
(bad)
mov
leave
mov
dec
jmp
push
inc
fwait
xchg
cmp
adc
mov
push
fnsave
add
outs
sbb
xchg
jge
fadd
xor
popa
push
mov
sbb
or
push
popf
mov
xor
imul
mov
or
sbb
or
cmps
push
xor
sub
and
mov
outs
ss
jns
push
sbb
sbb
aaa
pop
or
div
xchg
mov
sbb
(bad)
leave
loope
(bad)
clc
lods
and
bound
inc
aam
sbb
jno
push
push
or
sbb
movs
push
mov
mov
in
pop
xor
xchg
pop
pop
and
test
cmp
fsub
std
pop
or
xchg
jns
loope
mov
pop
sbb
pushf
inc
mov
push
outs
enter
and
inc
mov
push
shr
retf
jb
scas
pusha
cmovge
sub
mov
ins
xor
imul
pop
inc
pop
cmp
mov
inc
or
xor
push
scas
repz
pop
int3
aaa
stos
dec
dec
xchg
loop
mov
inc
dec
pushf
dec
or
sub
inc
xchg
cmp
loope
jnp
(bad)
cmps
inc
call
ror
sbb
dec
add
or
xchg
push
(bad)
in
int3
or
and
cmp
cmps
sbb
aas
lds
popa
ins
mov
and
pop
imul
cmp
mov
lods
push
rcl
jne
out
retf
sub
jnp
(bad)
lods
cli
mov
mov
fsubr
rol
repnz
xor
mov
dec
fidiv
cwde
adc
mov
pop
call
pushf
dec
aam
clc
pop
pop
nop
pop
cli
jmp
leave
xor
mov
stos
test
daa
mov
add
je
bound
cld
jle
xchg
dec
lock
and
or
xor
js
sub
arpl
ret
fisub
mov
dec
ds
imul
gs
test
and
fs
(bad)
jmp
sahf
dec
jg
mov
leave
or
pop
sbb
ror
cmps
xchg
aas
sub
retf
stos
add
dec
mov
jns
pop
loop
ds
cmp
cmps
lock
lahf
adc
fld
and
outs
jg
inc
scas
sbb
xchg
mov
and
lods
cmp
mov
mov
jmp
loop
in
aas
pop
mov
cs
adc
repnz
mov
mov
(bad)
sbb
jp
inc
and
in
or
call
loopne
ins
daa
fistp
scas
pop
cmp
add
push
jnp
movs
gs
repz
adc
dec
mov
add
loop
push
fwait
pop
sbb
cmp
loop
loope
cmp
mov
xchg
jmp
adc
out
adc
sub
jns
sar
mov
sbb
sub
in
cmp
cmps
or
ficomp
mov
cmc
lea
stos
stos
mov
mov
inc
daa
sub
sub
loopne
inc
inc
cmc
cmp
pop
xor
idiv
(bad)
sbb
sbb
mov
aas
aaa
lods
bound
cmp
call
inc
cmp
jge
adc
test
call
mov
fcomi
add
push
push
jo
sub
(bad)
sub
sbb
jg
jb
push
out
adc
pushf
pop
push
(bad)
sbb
sub
add
pop
sub
sbb
mov
mov
push
jnp
xchg
daa
mov
aas
pop
xchg
jb
mov
sub
and
mov
xor
jge
mov
hlt
nop
and
(bad)
in
xchg
dec
sub
loopne
div
mov
mov
fld
push
mov
inc
mov
adc
or
rep
int3
cmp
neg
mov
sbb
mov
in
mov
cmp
(bad)
out
aam
mov
test
out
push
aaa
inc
iret
mov
mov
int3
js
push
lods
enter
pop
enter
cmp
cmp
and
fs
mov
loop
nop
sub
retf
dec
fdiv
xor
cmp
and
cmc
stc
fmul
call
mov
mov
movs
(bad)
fidivr
(bad)
gs
ds
rcr
mov
(bad)
rol
xchg
cmp
aaa
out
sub
jge
pop
repnz
leave
sub
inc
aaa
fsubr
fwait
in
xchg
dec
jns
dec
mov
push
cmp
(bad)
stos
mov
repz
sbb
cwde
lea
jns
push
or
cmp
test
or
xchg
push
popa
out
mov
sbb
enter
dec
shl
je
lods
int
cmc
not
sbb
push
cs
sbb
push
mov
mov
rcl
xchg
sub
push
pusha
je
ja
mov
mov
pop
or
inc
rcl
pop
inc
call
clc
into
out
test
test
or
dec
mov
sub
adc
out
jno
pop
and
mov
adc
stos
leave
push
xor
call
inc
cs
or
or
push
and
pop
jb
loop
mov
jmp
xchg
fnsave
test
sub
pop
mov
ficom
mov
stos
dec
or
jne
push
icebp
(bad)
cmps
jne
xlat
out
add
inc
sbb
mov
mov
daa
mov
retf
mov
ins
aam
pop
cmps
popf
or
pop
dec
dec
jecxz
shl
fist
pop
mov
mov
sub
mov
mov
adc
jno
inc
loopne
cmp
or
ror
sahf
xor
or
add
cmp
mov
mul
scas
cmp
push
push
sbb
dec
hlt
mov
data16
(bad)
into
xchg
jnp
popa
fldenv
cmc
mov
movs
add
xor
jmp
xchg
jns
cmp
(bad)
cli
or
into
stos
cwde
pop
mov
call
ret
mov
out
pop
ja
pop
mov
ss
imul
jp
dec
jnp
movs
call
ja
add
sub
stc
mov
xor
aaa
push
jb
push
fld
pop
sub
pushf
lock
not
add
fwait
mov
aam
jns
jmp
dec
xchg
movs
mov
mov
les
push
sub
jl
test
or
ds
lock
mov
lea
mov
push
int
icebp
add
imul
cmp
push
in
pop
stos
adc
(bad)
not
mov
ds
adc
in
sub
mov
mov
jmp
and
pop
jae
mov
scas
fs
push
push
dec
aam
pop
stos
stos
cmc
push
inc
xchg
add
js
enter
(bad)
pop
mov
xchg
test
stos
lock
int3
jmp
call
bound
inc
test
jns
xchg
jns
out
mov
sub
adc
sub
cmp
jmp
add
jl
and
div
(bad)
mov
or
jp
adc
push
stc
cmp
xor
sub
xchg
int
imul
and
sbb
fwait
xchg
in
data16
add
mov
shr
mov
xor
and
fisttp
pop
lods
xchg
out
mov
gs
push
in
mov
ja
dec
sbb
jae
cdq
sbb
dec
cmp
fcmovnb
out
dec
mov
xchg
in
cmp
ins
les
sbb
js
push
xchg
ja
sbb
dec
mov
(bad)
std
xchg
stos
jno
aas
xor
sbb
test
cmp
cli
inc
(bad)
ja
and
int3
(bad)
mov
stos
popf
scas
cdq
dec
enter
xchg
jp
jae
shl
scas
or
pop
xchg
fisub
test
xchg
adc
retf
out
push
jmp
test
adc
mov
inc
and
cdq
shl
inc
je
sbb
mov
and
inc
jmp
sbb
sub
fadd
aad
cli
nop
adc
inc
mov
mov
mov
jge
retf
and
lahf
jns
hlt
fcomip
loope
in
cmps
es
lods
inc
in
out
xor
leave
push
enter
stc
mov
mov
movs
mov
push
ret
sar
std
jle
xor
jno
ins
outs
mov
outs
pop
(bad)
js
push
jno
and
mov
and
and
mov
fnstenv
xlat
nop
lock
aad
inc
inc
retf
push
clc
fs
or
ret
xchg
sbb
sbb
jmp
inc
jmp
retf
int3
push
test
aam
mov
dec
int
loope
mov
(bad)
fcmovnb
xchg
xor
fdivr
lock
jb
mov
imul
cmp
call
fst
gs
add
into
outs
sbb
cmc
repnz
cmp
jns
cmp
mov
test
adc
ins
ror
add
add
mov
pop
je
mov
fwait
je
adc
cmp
movs
pop
arpl
jns
sbb
movs
sti
xchg
push
aam
xlat
call
xchg
out
(bad)
cwde
jge
retf
ins
xchg
inc
ret
aad
mov
push
mov
sar
inc
out
sbb
and
cmc
arpl
outs
xor
mov
pop
inc
imul
cmp
je
stos
in
or
sti
pop
cld
fdivr
adc
icebp
sti
pop
mov
aas
test
loop
jb
push
ds
sub
scas
pop
mov
scas
inc
pusha
mov
xor
sbb
pop
mov
adc
std
mov
pop
inc
jae
aas
push
mov
sub
mov
sub
push
mov
inc
xor
ss
push
shl
test
mov
xor
neg
mov
fnstsw
xchg
pop
add
adc
call
cmp
mov
cmp
sbb
cmc
cmp
mov
(bad)
jmp
jae
dec
cli
fs
gs
mov
cdq
xor
repz
add
jp
data16
out
mov
(bad)
push
mov
(bad)
aad
adc
dec
cmp
loopne
pusha
sbb
outs
adc
ds
out
idiv
or
push
inc
loop
sub
ror
repnz
or
jmp
mov
jo
ja
call
stc
sbb
fldcw
test
out
push
je
fwait
in
xchg
jecxz
pop
mov
arpl
xchg
pushf
gs
loope
in
adc
pop
fadd
call
lock
xchg
jmp
sti
outs
mov
enter
(bad)
cmc
sahf
sbb
in
mov
mov
nop
push
sub
push
pop
xchg
or
sahf
shl
scas
cdq
movs
push
xchg
icebp
dec
rcl
fwait
mov
or
ja
ret
pop
addr16
mov
sbb
(bad)
ret
loope
out
clc
jp
push
adc
out
cmp
std
add
or
mov
test
outs
jne
loope
inc
mov
test
cmp
jge
pop
bound
inc
lods
(bad)
pop
in
pop
mov
xchg
pop
mov
ds
ss
jmp
cmp
outs
mov
sbb
cmps
dec
shl
xchg
sar
xor
iret
sub
inc
xor
push
push
mov
(bad)
push
adc
outs
sbb
movs
or
in
add
retf
jb
loop
push
(bad)
jmp
rcl
ds
cs
mov
push
sar
pop
mov
xchg
pop
ds
sbb
loop
aad
pop
outs
icebp
dec
dec
bound
pushf
cld
mov
lods
mov
cwde
cmp
ins
(bad)
(bad)
or
lahf
gs
sahf
adc
add
mov
sbb
pop
lods
sub
dec
push
shr
loop
ds
les
stc
mov
cmp
push
repnz
or
test
xchg
(bad)
fdiv
es
outs
push
dec
inc
loop
loopne
(bad)
adc
addr16
int
ds
mov
xor
mov
mov
shl
push
xlat
out
inc
iret
ds
push
jo
clc
out
mov
fnsave
dec
xchg
and
lea
cld
out
xchg
dec
int
jmp
shl
test
jg
xchg
xor
repnz
xchg
add
cmp
xchg
pop
push
cs
cdq
setl
enter
lods
sbb
push
dec
mov
sub
imul
(bad)
cmove
iret
outs
jge
pop
cld
jne
adc
test
jne
movs
cmp
dec
xchg
adc
iret
in
mov
mov
retf
ret
mov
sbb
sub
cmps
cld
mov
push
in
popa
adc
sbb
sbb
sub
jg
xor
inc
jae
add
sahf
ja
push
fmul
dec
mov
sahf
add
jo
inc
dec
fwait
movs
ds
outs
out
cdq
jg
mov
test
and
mov
xor
js
ds
dec
push
aad
push
or
(bad)
fist
ret
popa
mov
stos
call
xchg
pop
sub
fistp
movs
or
push
ja
mov
icebp
fs
xor
xor
push
aam
jl
dec
push
dec
jnp
loopne
in
ror
ret
xchg
dec
nop
and
xor
add
push
mov
push
arpl
cmp
mul
and
pop
jns
push
out
stc
dec
lahf
sub
jae
jmp
dec
jnp
pop
popf
jae
mov
mov
mov
movs
int
xchg
dec
mov
xchg
cld
enter
add
sub
daa
xor
mov
adc
fistp
dec
(bad)
jns
inc
lds
pop
test
cmp
xor
xlat
push
movs
rcl
mov
sub
daa
loopne
stos
add
pusha
ins
sbb
popf
popa
mov
or
fbstp
push
add
(bad)
jecxz
adc
cmc
sub
fild
adc
es
dec
fs
jnp
jo
mov
pusha
mov
jge
repnz
test
and
enter
xchg
jno
lock
nop
and
push
addr16
jb
sbb
rol
pop
(bad)
fs
sti
mov
cmps
rcr
scas
outs
push
push
test
cdq
add
sub
repz
outs
pop
icebp
rcl
cmp
cdq
cdq
rol
cmps
loopne
sbb
shl
dec
fistp
xchg
ds
cmp
and
mov
ins
or
pop
pop
cld
xor
cld
sbb
jle
scas
int
mov
fld
fsub
mov
shl
(bad)
cwde
xlat
(bad)
fst
cmps
(bad)
iret
js
dec
mov
xor
ret
adc
addr16
(bad)
in
sub
pusha
cmp
retf
push
fs
jp
mov
das
stos
pop
data16
dec
pop
es
ja
retf
lahf
js
sbb
aam
and
mov
cmp
mov
aaa
jbe
retf
push
and
adc
xor
pop
dec
mov
in
clc
out
xchg
jg
pop
scas
dec
icebp
sti
cmp
sbb
and
pop
sub
aam
jne
pop
or
sub
gs
clc
cdq
or
ret
push
mov
cmp
out
mov
(bad)
mov
pop
out
push
mov
jp
dec
mov
iret
pop
dec
and
(bad)
lea
clc
mov
fcmovnu
frndint
xchg
sub
and
out
jnp
push
xchg
pop
test
or
js
cs
movs
push
out
fmul
pop
mov
and
gs
mov
mov
data16
xor
aaa
add
jo
cmps
push
xor
fadd
scas
fwait
lods
test
cs
fwait
cmc
push
(bad)
out
into
icebp
jp
mov
jmp
stos
in
or
cmp
add
mov
jbe
fs
aas
pop
inc
loope
sbb
jg
je
in
sbb
push
sar
adc
jae
mov
(bad)
aad
cmp
les
inc
adc
pop
xor
popa
dec
jo
(bad)
or
mov
mov
pushf
repnz
sbb
cmp
ret
mov
xor
in
in
add
xor
and
push
test
mov
jns
inc
sbb
(bad)
or
lahf
(bad)
addr16
xchg
fldenv
mov
ret
xor
addr16
push
jnp
xchg
ins
sar
or
test
cs
xchg
mov
js
sub
mov
cmps
sbb
jp
sbb
lods
sub
adc
and
sub
jecxz
test
fwait
add
dec
and
cmp
mov
aas
jne
add
fwait
or
sahf
ret
mov
lock
daa
sahf
repnz
mov
aam
add
inc
outs
inc
pop
icebp
iret
cmp
mov
jbe
lock
leave
jge
mov
je
icebp
xor
push
fbstp
and
icebp
ret
jp
fcmovnbe
adc
and
fadd
jl
popa
add
movs
(bad)
add
aad
lock
jnp
loope
lahf
mov
jmp
pushf
daa
add
sbb
xchg
pop
fmul
ret
ss
ins
cmp
retf
(bad)
sbb
stos
outs
sahf
sbb
mov
lods
push
clc
xor
add
push
add
loope
jae
test
loop
loope
imul
jo
je
test
fdivr
sbb
jmp
mov
bound
pop
mov
in
dec
or
das
cmps
data16
test
push
sub
sub
fdivr
mov
add
test
push
out
push
mov
cli
adc
jge
adc
mov
jmp
pop
mov
push
xor
or
xor
call
add
inc
ds
sbb
inc
ret
and
adc
jge
je
cmps
mov
xor
in
into
or
dec
popf
inc
push
cwde
xchg
fisubr
iret
mov
fidivr
jno
cld
out
pop
(bad)
and
in
inc
jns
add
mov
xor
(bad)
push
jae
inc
test
push
call
inc
lahf
push
dec
(bad)
jns
mov
mov
and
mov
fcomp
fiadd
dec
xchg
bnd
(bad)
ss
stos
test
out
pop
icebp
jo
repnz
fld
xchg
sahf
rol
cld
xchg
jb
mov
jmp
jnp
retf
lds
dec
sti
xacquire
cmp
movs
add
sbb
jns
shl
mov
jmp
jecxz
and
icebp
xchg
add
lock
rcr
ror
into
mov
cli
mov
(bad)
inc
xchg
(bad)
ds
fbld
add
daa
in
adc
pop
(bad)
call
rol
bound
js
jp
test
jmp
jmp
dec
test
add
call
jmp
mov
ret
dec
into
into
xor
call
ins
mov
inc
pop
scas
daa
imul
lods
retf
rcl
adc
xchg
cmp
aam
leave
xlat
iret
daa
out
and
and
test
les
xor
ret
and
test
xor
arpl
adc
adc
in
fidiv
and
je
jge
lock
ss
cmp
fwait
xor
mov
setbe
mov
enter
ja
jge
xchg
cmp
push
cmp
xchg
push
out
fldenv
jo
mov
arpl
lods
ret
mov
or
mov
je
pop
sub
cmp
mov
and
push
or
(bad)
pop
add
push
mov
iret
call
push
(bad)
div
pop
jmp
pop
out
mov
cmp
cs
or
mov
dec
mov
sub
push
addr16
sub
push
pop
repnz
push
bound
cmps
(bad)
cdq
int3
pop
fstp
sub
lock
jne
sbb
xchg
mov
inc
mov
fadd
(bad)
xchg
sahf
xchg
cli
test
pop
pop
xlat
aas
pop
mov
cmp
imul
xor
sbb
cdq
inc
test
shl
sub
test
sbb
jne
pushf
jmp
push
mov
mov
loope
mov
rcr
leave
sbb
xchg
pop
cli
adc
mov
addr16
mov
inc
sbb
(bad)
sbb
sahf
sbb
cli
push
xchg
fwait
and
cmps
ja
inc
adc
xchg
push
sub
jmp
push
(bad)
and
jae
mov
out
call
inc
jns
mov
or
jb
mov
fsubr
sbb
shr
jl
sbb
cli
and
adc
adc
mov
or
aad
jo
mov
sub
mov
ja
push
and
mov
fidivr
(bad)
xor
sti
mov
lock
mov
popf
mov
xchg
cmp
and
inc
inc
int
xor
xchg
inc
pop
cmp
(bad)
movs
adc
jnp
cdq
inc
add
jle
jge
jae
or
adc
lods
stc
inc
inc
iret
mov
and
dec
dec
push
xor
cmp
pop
out
push
cmps
or
bound
lea
mov
pop
in
mov
push
and
mov
dec
ds
xchg
fisubr
std
in
xchg
int
and
dec
outs
imul
push
inc
call
shl
mov
dec
ficomp
mov
shl
lahf
ins
inc
mov
sub
jno
and
data16
mov
lock
jl
cwde
sar
jg
in
(bad)
sbb
inc
iret
pop
sub
jnp
cmp
push
sub
xchg
xchg
mov
jae
sti
pusha
dec
loopne
add
sbb
ficom
or
sub
inc
(bad)
cmp
push
int
xchg
xchg
sbb
add
sbb
bound
cld
loope
not
in
(bad)
in
dec
sbb
mov
call
mov
fldcw
cmc
js
movs
xchg
(bad)
jae
(bad)
lods
jmp
out
jno
sahf
leave
aas
add
shr
pop
push
pop
push
push
xor
xchg
in
sbb
push
xchg
cwde
mov
idiv
sbb
loope
cmps
test
test
mov
aam
icebp
or
push
jecxz
movs
and
mov
jo
fmul
cmp
bnd
add
lods
mov
les
rcl
aam
cld
pop
fiadd
jmp
out
xchg
mov
ins
inc
mov
adc
sbb
popf
or
fwait
sub
retf
test
inc
inc
xor
xor
mov
add
mov
push
test
and
je
sub
scas
inc
arpl
jp
shl
in
clc
retf
inc
addr16
inc
das
pop
scas
xchg
repz
fwait
adc
cwde
push
dec
cmc
call
and
mov
or
mov
xlat
int
jp
scas
adc
cmp
dec
iret
stos
je
cmp
lds
(bad)
stos
(bad)
daa
jmp
nop
das
fcomp
inc
cmc
pop
jmp
retf
(bad)
div
sbb
add
pop
arpl
mov
int3
(bad)
cdq
mov
adc
jle
cdq
mov
cs
sub
pushf
xor
imul
push
(bad)
cmp
add
xor
xchg
mov
cdq
jae
xchg
es
push
mov
lods
and
pop
sbb
or
fcmovne
inc
pop
pop
iret
xor
jns
xchg
dec
in
in
push
xlat
lahf
(bad)
rcl
pop
and
(bad)
mov
adc
cmps
mov
test
inc
rcl
jecxz
rcr
je
fldcw
mov
xor
out
pop
pop
push
cmp
out
mov
mov
scas
jns
mov
bound
imul
movs
jmp
push
ror
xor
sub
das
neg
mov
mov
enter
push
mov
or
jo
sbb
adc
pop
push
fs
sti
cmp
sbb
lea
mov
xchg
in
jo
and
aad
icebp
mov
jmp
pop
mov
mov
add
cmp
fninit
out
das
jmp
ss
out
es
ja
pop
cdq
mov
out
test
fidiv
leave
movs
xchg
das
cmp
xor
cmp
dec
lods
adc
or
pop
sub
movs
cs
(bad)
movs
sub
xor
scas
jae
inc
pop
dec
or
into
mov
inc
std
adc
sub
shr
jl
pop
push
cmps
rol
push
push
cmp
lods
loop
lds
leave
pop
(bad)
mov
pushf
addr16
dec
dec
mov
mov
xor
shr
test
push
pop
mov
and
cdq
adc
ret
mov
rcl
mov
ja
sbb
out
jae
sub
jmp
adc
inc
test
aad
add
test
inc
jb
(bad)
leave
sub
fstp
mov
(bad)
pop
add
call
enter
(bad)
jb
xor
mov
data16
pushf
sub
sbb
cmp
pop
inc
mov
add
xchg
add
xchg
outs
bound
or
ins
not
xor
inc
outs
xchg
cmp
(bad)
mov
xchg
or
ret
cmp
ins
fs
fwait
xchg
add
loope
lahf
push
sub
fwait
push
cmp
ror
sub
(bad)
pop
jge
pusha
fdiv
sub
imul
(bad)
fsubp
out
jb
pop
or
inc
cmp
sub
xor
ficomp
and
cmp
retf
jmp
lods
cmc
fisttp
imul
test
add
add
jp
dec
popf
mov
shl
mov
cmp
std
enter
jmp
repnz
cld
cmp
in
shl
or
arpl
fsubr
push
cs
int3
push
xor
stos
lods
mov
mov
cmp
jge
fdiv
push
xchg
sub
fdiv
cld
or
adc
jp
outs
push
mov
or
scas
fst
inc
push
push
addr16
shl
fwait
push
shl
cmps
or
push
sub
mov
or
xor
adc
retf
cmp
xchg
fmul
mov
dec
mov
test
add
(bad)
jmp
(bad)
push
dec
and
pop
add
jg
iret
sti
stos
fiadd
xchg
sahf
or
adc
xchg
outs
iret
sbb
push
dec
in
aad
jmp
iret
xchg
jmp
sub
hlt
movs
sbb
jge
(bad)
add
push
and
jno
movs
int3
in
fisubr
and
hlt
pop
xor
pop
add
out
aaa
xchg
mov
je
shl
sbb
xchg
std
fst
ja
ret
pop
dec
loop
sbb
inc
jp
push
push
inc
shr
sbb
add
in
popfw
xor
arpl
call
dec
push
loopne
test
inc
push
push
daa
daa
aad
repz
enter
or
xchg
push
pop
inc
push
mov
fisubr
mov
mov
scas
daa
arpl
mov
mov
inc
imul
xchg
test
xor
js
cmc
and
add
std
sub
addr16
jbe
xchg
xor
jne
sbb
inc
cmc
fisttp
arpl
xlat
inc
(bad)
xchg
jmp
test
movs
ins
jp
sub
jmp
add
fs
pop
rol
push
sti
lods
(bad)
in
jmp
cmp
and
dec
repz
push
shr
push
ja
add
pop
dec
ds
sbb
mov
pop
and
add
jle
sbb
lods
(bad)
icebp
inc
push
mov
mov
(bad)
mov
jb
push
in
sub
sti
mov
mov
dec
pop
add
outs
push
mov
sahf
inc
lock
sub
fwait
push
mov
pusha
movs
dec
xchg
mov
xlat
scas
fist
jge
mov
call
mov
cmp
js
sub
mov
sbb
push
and
cmp
daa
push
movs
out
fs
pop
mov
mov
aas
cmp
enter
xor
pop
cmp
jns
retf
xor
add
inc
rol
or
shl
cmps
call
ficom
fiadd
fwait
dec
inc
sbb
je
jg
test
jmp
cli
dec
and
xor
mov
fsubr
mov
pop
fbld
in
ret
adc
mov
ja
jle
sbb
push
jo
cwde
iret
int3
or
sbb
pop
add
mov
ret
cmp
adc
push
jmp
adc
sub
and
stos
push
lea
call
je
enter
xor
(bad)
or
in
shr
and
out
cmc
jmp
pop
and
scas
sbb
scas
ret
aaa
sub
mov
cmp
aaa
retf
stos
adc
outs
imul
xchg
outs
mov
xchg
xchg
jnp
inc
mov
movs
lds
movs
(bad)
pop
loop
daa
adc
jne
dec
mov
push
or
daa
mov
sub
fist
sbb
or
sub
sbb
push
sbb
and
push
daa
jno
mov
sbb
out
ret
or
adc
inc
pop
mov
jno
adc
sub
sbb
(bad)
push
pushf
lea
mov
jb
clc
push
test
cmp
mov
or
mov
ds
jno
in
movs
push
mov
sar
add
mov
cmp
aad
push
mov
repz
shr
cli
xchg
sub
jge
sbb
mov
or
call
xor
nop
jecxz
stc
stc
mov
test
retf
or
pusha
sub
int
out
add
mov
cwde
cmps
and
dec
fmul
mov
mov
icebp
add
adc
inc
out
test
push
sbb
std
ss
or
out
sub
imul
add
test
adc
cmp
inc
enter
lahf
dec
hlt
push
retf
imul
xor
popf
or
bound
pop
cld
and
cmp
mov
mov
mov
ret
das
pop
pushf
sbb
push
popa
sub
sub
mov
(bad)
js
dec
into
dec
lea
sub
and
sti
in
fs
outs
out
mov
clc
sbb
ja
call
mov
pop
call
movs
inc
popa
pop
ss
(bad)
sbb
add
mov
xor
xor
jp
jp
(bad)
adc
push
retf
lahf
xor
inc
lock
lods
pushf
and
fs
test
stos
ds
mov
test
push
ss
popa
adc
adc
push
shl
and
out
or
mov
push
fimul
sti
mov
fyl2x
jno
inc
jg
push
lods
mov
arpl
inc
shr
test
ins
sub
sub
dec
xchg
leave
sbb
push
scas
jbe
cmp
xchg
pop
neg
and
dec
aas
xchg
adc
mov
call
and
std
sbb
outs
cmp
mov
push
and
cdq
and
jg
mov
sbb
push
push
xchg
stc
jbe
jns
or
inc
sub
xor
sar
leave
shl
ret
pop
je
int3
repz
(bad)
sbb
ror
mov
push
xchg
mov
push
imul
adc
les
push
aad
dec
repz
xlat
fadd
call
pop
retf
jne
xchg
call
(bad)
rcr
dec
xchg
jnp
push
bnd
mov
or
xchg
sar
iret
in
inc
push
mov
pop
dec
(bad)
test
pop
or
sub
cmps
sub
ret
jmp
or
xchg
push
sub
jecxz
mul
jge
cmp
mov
lods
jb
adc
(bad)
stos
cld
icebp
sbb
icebp
sbb
push
mov
out
sbb
fmul
test
pop
(bad)
les
jmp
jae
mov
aam
frstor
xchg
fdivr
xchg
adc
sub
push
(bad)
jmp
sbb
clc
jecxz
adc
sbb
(bad)
stc
mov
jo
adc
shl
xchg
dec
push
jge
jo
ret
idiv
enter
sub
dec
lds
cdq
in
int3
inc
mov
fwait
mov
aas
push
sbb
jg
xchg
dec
aam
push
sahf
pop
pop
or
jle
inc
imul
push
pop
loop
sub
sub
mov
cli
mov
cld
leave
in
cli
stc
and
xchg
mov
lods
int
aaa
aad
sbb
push
adc
cmp
repnz
dec
add
jne
cmp
mov
out
jmp
xchg
int3
lahf
in
mov
inc
pcmpeqw
call
retf
fadd
inc
or
mov
pop
sbb
out
lods
mov
clc
pop
movs
test
daa
mov
sbb
jecxz
inc
retf
add
out
punpckldq
mov
sbb
xor
and
pushf
inc
cmp
cld
or
ret
dec
and
mov
push
addr16
push
out
jbe
js
inc
jnp
repz
(bad)
into
jge
shl
es
sbb
outs
sub
clc
push
sub
push
adc
mov
jmp
pop
pop
ret
mov
std
dec
mov
inc
jp
in
and
xor
daa
mov
cmps
jb
mov
and
fist
sub
push
call
push
xor
ret
push
fwait
push
adc
mov
jecxz
mov
cmps
push
shl
(bad)
faddp
pop
mov
call
and
retf
mov
rol
xor
stc
loop
(bad)
vmovupd
jl
enter
test
out
je
pop
in
pop
pushf
repz
xor
xor
pop
mul
out
lods
add
jmp
mov
in
pop
inc
or
ja
js
sub
or
icebp
(bad)
mov
mov
out
daa
aam
adc
inc
jg
call
gs
mov
aas
(bad)
cli
int3
sub
fstp
es
push
mov
rcr
addr16
push
push
popa
jle
dec
mov
pop
mov
out
xchg
jns
add
aam
iret
mov
cmp
mov
gs
(bad)
popa
retfw
dec
jne
call
in
jmp
retf
out
hlt
(bad)
sub
icebp
mov
out
nop
not
fnsave
das
mov
aas
in
sbb
jns
les
add
out
arpl
scas
jae
call
pop
adc
push
outs
mov
jecxz
outs
scas
push
pop
push
and
call
mov
pop
xlat
scas
sbb
cmc
push
(bad)
and
push
loop
cmp
js
mov
mov
sub
sbb
outs
and
cmp
es
in
push
int
pop
xor
das
cmps
sub
rcl
jge
das
xor
retf
dec
mov
xchg
adc
fmul
sub
sub
fldcw
repz
xchg
fcom
int
or
lods
ja
mov
and
cmp
idiv
jns
lods
jecxz
sbb
call
push
cmp
xor
das
es
int
and
dec
ins
(bad)
std
imul
mov
sti
std
loope
mov
ins
add
mov
gs
dec
dec
mov
inc
dec
inc
cwde
std
mov
add
sbb
mov
xor
cmps
sbb
lods
and
call
pop
mov
jl
push
jmp
rol
jo
inc
movs
push
imul
dec
pop
ins
pop
out
fcmovu
mov
push
and
fucomp
mov
or
sahf
aad
mov
sbb
adc
inc
adc
(bad)
test
popa
fdiv
psllw
into
iret
adc
adc
jmp
outs
outs
xlat
fbstp
jae
dec
les
xor
and
adc
mov
mov
add
gs
jnp
add
jmp
clc
mov
jbe
pop
sub
mov
inc
cmp
cwde
xchg
pop
mov
out
popa
or
repnz
popf
inc
push
mov
popf
jge
push
jmp
ds
mov
pop
mov
lods
sbb
ins
xchg
cmps
dec
pop
(bad)
mov
in
sbb
dec
add
mov
dec
jne
xchg
add
test
xchg
jecxz
sbb
enter
(bad)
mov
(bad)
inc
lock
jp
add
shr
cmp
rol
mov
push
nop
sbb
aas
int
dec
std
xchg
cs
fdiv
hlt
fwait
aas
fstp
pop
jg
mov
popf
js
sub
fidivr
mov
ins
cmp
inc
fwait
pop
shl
dec
aas
jmp
cmp
dec
xchg
lods
or
(bad)
dec
jecxz
sub
imul
sbb
fcomp
cmp
fs
dec
std
lahf
fldenv
icebp
sub
push
mov
scas
pop
xchg
mov
sub
fcmovnu
lea
daa
dec
mov
inc
or
xor
mov
sub
xchg
lahf
inc
sub
inc
jo
xor
add
add
retf
stos
xor
les
ret
xchg
mov
sti
test
cli
push
mov
jmp
icebp
add
sbb
push
cmp
imul
in
fcom
cwde
out
movs
xchg
push
jmp
rcl
sbb
pop
leave
nop
push
xor
adc
mov
mov
(bad)
(bad)
bound
int
leave
xchg
sub
cmps
ficom
pop
stos
or
pop
mov
(bad)
ss
scas
dec
or
shl
cld
or
cld
das
setg
aaa
fisttp
(bad)
arpl
ins
enter
or
sahf
stos
cwde
sub
pop
mov
jp
neg
out
pop
jle
lock
stc
cmp
lock
fld
ins
out
(bad)
int3
dec
pop
mov
push
push
cmps
movs
push
adc
mov
je
fimul
add
dec
leave
pop
out
xchg
mov
mov
loop
sub
mov
push
or
std
ds
pop
(bad)
(bad)
pop
hlt
daa
xchg
jns
es
pop
xchg
inc
cmp
test
leave
mov
sbb
jne
mov
mov
clc
fstp
add
clc
jmp
jl
div
adc
lock
sub
dec
jne
sub
test
int
mov
iret
mov
fldenv
movs
jl
adc
inc
jp
js
sbb
pop
rcr
mov
mov
ins
lea
push
and
daa
stc
(bad)
int3
addr16
fistp
xor
mov
sub
pop
push
sub
stc
jmp
push
fcom
jmp
or
dec
ins
rcl
jo
xchg
dec
push
jno
xchg
adc
jnp
add
bound
jecxz
adc
mov
ret
fmul
imul
test
pop
imul
mov
and
xor
imul
push
test
lods
push
(bad)
enter
inc
leave
xor
jne
movs
cmp
adc
not
push
addr16
mov
bndldx
lahf
rcr
cmp
cdq
sahf
shr
mov
jb
push
pop
and
in
adc
xchg
sub
mov
push
sbb
ficom
mov
pop
mov
das
sub
cmps
pop
cld
jns
dec
fwait
test
cmp
push
sbb
pop
lds
adc
cli
cmp
push
dec
adc
sbb
push
(bad)
movs
stc
dec
js
and
scas
sahf
mov
mov
mov
mov
mov
lahf
xor
adc
xchg
mov
push
push
shl
jg
ficom
pop
push
mov
add
inc
inc
es
cmp
cmp
sub
das
aaa
dec
in
push
xor
pop
popa
icebp
out
xchg
dec
jno
ins
mov
cmp
mov
ror
fbstp
jmp
daa
dec
pusha
dec
cmc
aaa
xchg
jne
mov
xor
inc
iret
js
je
or
fiadd
(bad)
imul
(bad)
jge
fs
loopne
jae
lock
jo
push
inc
inc
out
mov
jnp
pop
add
mov
or
dec
fiadd
sbb
sub
call
fild
lds
fisttp
mov
mov
idiv
repz
jb
xchg
(bad)
mov
push
mov
ja
popf
js
cmps
nop
adc
popf
pop
jne
fild
fsubrp
pop
push
call
mov
in
cmps
pop
xchg
test
fnstsw
adc
(bad)
cmp
mov
repnz
sub
shl
in
not
jl
push
mov
sub
(bad)
cmp
and
scas
nop
xchg
jmp
push
into
mov
repz
sub
sub
sub
pop
repnz
jge
sub
(bad)
xchg
pop
stos
jae
adc
mov
mov
push
and
aaa
ret
mov
sbb
push
popf
mov
mov
xchg
dec
jmp
leave
dec
xor
push
(bad)
pop
jle
jo
sub
fdivr
stos
add
inc
loopne
mov
push
xlat
add
pop
xchg
xchg
mov
pop
imul
xor
js
test
add
dec
push
mov
mov
imul
fcomp
out
and
pop
inc
fnstcw
ret
adc
jns
cld
mov
xchg
loope
xor
xor
icebp
cmc
iret
or
mov
mov
jne
nop
(bad)
xchg
adc
mov
pusha
mov
fisub
outs
jo
fild
and
inc
xor
dec
shr
xor
mov
push
lds
icebp
pusha
mov
sub
iret
mov
cmp
arpl
pushf
(bad)
xor
xchg
lea
mov
push
jg
inc
jo
sahf
es
rcl
adc
imul
loopne
sbb
cmp
push
aad
stc
push
ins
mov
cmp
jae
push
or
fmul
jle
or
imul
add
std
sub
repnz
or
xchg
mov
mov
mov
mov
sbb
mov
lds
lds
ins
jno
cmp
ret
dec
fs
mov
sub
(bad)
cmp
inc
xchg
mov
rep
out
loopne
stos
mov
sbb
dec
xor
cmps
scas
mov
push
fwait
add
add
adc
sub
jmp
icebp
retf
xor
loop
faddp
push
lods
fiadd
push
or
or
fcmovnb
repz
int3
dec
movs
push
push
cmp
cmp
jmp
outs
push
(bad)
push
mov
loop
adc
paddusw
pop
fmul
leave
adc
int3
fnsave
push
into
dec
not
or
add
or
imul
fnsave
cdq
div
jno
outs
ss
mov
push
fs
sbb
stc
imul
fstp
test
popf
das
test
retf
bound
leave
cld
xor
inc
fist
arpl
test
movs
lds
std
out
fcomp
popa
shl
aad
sbb
add
pop
xor
js
rcl
pop
push
daa
ins
sbb
test
imul
daa
mov
sub
xor
sbb
xchg
pusha
stc
inc
shl
and
test
stc
mov
xchg
pop
imul
adc
(bad)
test
mov
sub
mov
mov
fsub
fld
push
cli
inc
add
adc
sub
movs
lods
add
mov
imul
dec
inc
fild
sbb
int3
cmp
mov
push
cdq
xlat
push
ins
iret
in
dec
js
fs
dec
popa
clc
fsub
sbb
(bad)
mov
ret
xchg
cli
and
mov
pushf
or
mov
adc
call
call
mov
jno
fcom
cmp
sahf
int3
out
pop
jecxz
frstor
xlat
stos
pop
lock
xor
retf
mov
cmp
jae
adc
or
adc
adc
enter
pusha
cmp
adc
and
pop
jns
pop
repz
jmp
arpl
cli
rcl
sub
retf
imul
xor
adc
js
jecxz
jmp
cdq
(bad)
mov
sub
loope
aad
ja
pusha
out
shr
jno
inc
ins
out
jl
mov
lock
addr16
inc
jg
pop
jo
dec
jmp
adc
sahf
into
ins
(bad)
jg
pop
test
scas
add
mov
icebp
inc
push
mov
pop
push
lock
ja
cmps
fdivr
inc
inc
loope
lock
ja
xor
popa
les
mov
mov
xor
xor
cmp
push
popa
dec
jge
retf
sar
mul
fbld
xor
outs
or
push
test
pop
rcl
pusha
jmp
sub
xor
xor
int
add
imul
movs
pop
jmp
retf
pusha
add
clc
or
movs
dec
pop
fs
mov
mov
test
in
lock
jp
aaa
imul
sub
gs
test
outs
or
not
mov
outs
call
lds
fcom
mov
cmp
fadd
sub
fild
jecxz
add
test
in
sub
data16
ret
sahf
inc
es
adc
in
xchg
pop
loop
xchg
imul
out
add
aam
and
test
mov
fbstp
sbb
push
and
clc
rcl
push
rol
push
fiadd
mov
jae
or
jb
sub
push
dec
pop
and
les
mov
mov
ret
push
jmp
add
xlat
or
cmp
pop
nop
inc
sub
jns
mov
sbb
sub
xchg
and
(bad)
sbb
xchg
xor
or
sbb
adc
mov
ja
je
ret
pop
pop
cmp
cmp
pop
inc
xchg
sbb
(bad)
(bad)
in
push
(bad)
xchg
sub
inc
out
(bad)
inc
sbb
jo
add
inc
cs
out
push
xlat
(bad)
xor
out
mov
pop
and
mov
rcl
sub
loope
cmp
mov
mov
aam
fisttp
retf
dec
loopne
pop
cmp
xchg
repz
cmc
add
ror
ror
inc
cmp
retw
xchg
dec
add
jns
shr
adc
test
(bad)
in
cld
ins
pusha
or
jge
sub
imul
jge
mov
cli
gs
push
push
sbb
jge
mov
or
add
ret
mov
jecxz
xchg
jb
pop
ret
mov
imul
les
or
jmp
pavgb
mov
adc
pop
aam
cmp
jbe
mov
lods
(bad)
add
jg
add
jl
mov
jmp
jbe
mov
dec
push
cmp
lods
fisubr
jb
arpl
in
mov
xchg
push
and
cdq
mov
xor
cdq
aaa
stc
hlt
xchg
mov
call
inc
ror
mov
gs
bound
lods
xchg
mov
sti
mov
add
jg
pop
cld
cdq
bound
imul
or
js
pop
cmps
mov
daa
ja
js
and
div
mov
fld
cmps
xor
cmp
cmps
fadd
test
push
xlat
mov
mov
push
sub
sbb
int3
push
cdq
out
lock
or
dec
push
lds
or
jle
(bad)
out
xor
stc
xchg
inc
(bad)
aas
sbb
stc
jo
pop
das
xlat
mov
ror
xor
adc
dec
mov
out
jl
ret
adc
movs
cmp
inc
(bad)
(bad)
push
rcl
cli
(bad)
and
idiv
lds
dec
cld
in
mov
xchg
add
or
xchg
std
push
add
pop
in
pop
mov
cmp
inc
scas
add
pop
sahf
sbb
pop
mov
and
jge
imul
call
pop
sbb
jmp
hlt
mov
pop
lock
or
stos
loop
jnp
nop
cmp
shl
scas
xor
xor
cmc
mov
movs
add
ret
xor
ja
call
xor
les
mov
mov
cld
je
sub
push
movs
xlat
adc
ins
adc
ss
lea
xchg
repz
add
cmp
add
clc
lock
movs
lahf
add
and
and
push
mov
lods
add
fst
mov
mov
mov
into
out
leave
mov
add
shl
push
push
in
in
and
sbb
mov
push
ins
jge
add
mov
addr16
push
sbb
mov
int3
stos
test
pop
mov
xchg
cmps
sbb
mov
mov
sbb
add
xchg
sahf
pop
(bad)
loopne
mov
push
or
mov
fndisi(8087
test
dec
or
xchg
xchg
movs
(bad)
shr
lock
and
dec
ss
cwde
fidiv
xchg
hlt
aad
movs
(bad)
pop
arpl
mov
ficom
mov
stos
into
sbb
jge
and
fistp
jnp
dec
push
xchg
adc
xchg
data16
cmps
push
jo
pop
adc
rol
add
popf
dec
mov
add
cmp
mov
sbb
xchg
int
cmp
lds
arpl
pop
xor
cld
add
mov
dec
in
ret
gs
aaa
clc
cmp
jo
pushf
mov
sbb
inc
fnsave
mov
jp
add
fisub
xchg
mov
lahf
mov
(bad)
dec
sti
in
dec
lds
(bad)
popf
xor
mov
xchg
cmp
test
and
retf
clc
das
ins
xor
stos
sub
xchg
lds
inc
inc
push
pushf
dec
stos
rol
or
sub
shl
cmp
push
xchg
mov
repz
rol
xor
retf
adc
(bad)
fcomp
leave
iret
xor
inc
fimul
ds
mov
or
in
inc
das
imul
sbb
or
push
loope
lea
push
stos
cli
xor
pop
neg
adc
mov
cmp
jl
jb
pop
jns
push
stc
xchg
rcl
pop
xchg
mov
and
xor
lods
sbb
jne
popf
mov
jo
jecxz
icebp
push
fisttp
push
add
mov
xchg
nop
mov
sbb
jns
or
jl
(bad)
fcom
push
add
fild
cdq
pop
mov
xchg
test
xchg
ins
aad
push
loope
pop
arpl
xchg
mov
test
xor
push
and
enter
into
or
or
loop
xor
lock
push
test
(bad)
push
adc
jne
aad
mov
or
add
pop
repz
call
jno
mov
fnsetpm(287
mov
xor
cmp
jmp
push
and
out
sti
dec
lahf
cs
xchg
stos
pop
or
shr
mov
test
mov
xor
inc
cmp
pop
leave
jne
push
sbb
arpl
cs
ret
pop
inc
neg
push
xchg
(bad)
repnz
xchg
xchg
push
inc
sub
dec
pop
mov
out
mov
test
mov
retf
ins
mov
sub
pop
inc
mov
pusha
retf
dec
add
je
fs
(bad)
(bad)
retf
sub
int3
push
dec
push
push
jno
xchg
retf
out
das
mov
repnz
(bad)
fs
out
lds
shr
mov
ja
fwait
clc
and
xchg
inc
(bad)
sahf
inc
sbb
fild
in
xchg
add
addr16
mov
mov
inc
pop
lods
push
mov
js
mov
sbb
cmp
dec
jle
jno
jp
test
(bad)
outs
es
cmps
adc
fld
retf
jmp
jge
lock
and
and
or
sub
lock
rol
and
adc
scas
icebp
popf
jmp
xor
stc
data16
pop
xor
je
jg
or
push
lock
mov
pop
es
inc
fidiv
mov
lods
fs
imul
retf
xchg
xchg
pop
pop
out
pop
test
cmps
pop
push
mov
inc
and
adc
mov
fisub
mov
mov
sti
jo
sbb
dec
movs
dec
stos
jmp
inc
sti
push
imul
ins
int3
nop
mov
cli
cmp
mov
(bad)
adc
inc
ins
addr16
int3
fwait
ja
inc
jns
test
fs
mov
out
scas
mov
int
imul
adc
sbb
ficom
jns
popf
nop
inc
ja
dec
sub
shr
int
(bad)
lods
aam
inc
call
sbb
ret
pop
jae
stc
sbb
push
sar
(bad)
dec
sti
dec
into
push
(bad)
outs
pop
outs
xchg
adc
mov
mov
scas
sbb
mov
and
bound
or
loop
or
rol
adc
loope
sahf
stc
and
out
enter
xchg
push
enter
dec
stos
inc
int3
cmp
xor
xor
test
sub
sub
jbe
push
sub
mov
xchg
leave
into
fmul
pop
pop
call
push
(bad)
enter
pop
mov
pop
aad
pop
push
fdivr
mov
mov
sbb
jbe
push
stc
shr
mov
mov
outs
xchg
not
push
loope
jne
fidivr
jae
pop
mov
adc
or
retfw
add
int3
jbe
repnz
mov
push
jp
mov
outs
sbb
xor
or
popa
inc
or
ror
jmp
lods
mov
push
pop
popf
adc
mov
jns
jl
cld
mov
adc
imul
mov
inc
clc
out
sub
sub
(bad)
shl
fisubr
outs
mov
pop
jmp
sbb
ror
repnz
xchg
jb
dec
std
nop
pop
outs
dec
jb
dec
leave
pop
and
jecxz
(bad)
push
push
je
mov
push
pop
sub
jo
(bad)
enter
xchg
pop
xor
add
mov
push
add
or
jnp
ins
aad
sbb
fbld
cli
or
mov
jo
ins
add
les
cmc
and
retf
shl
cli
iret
adc
pop
daa
ficomp
sub
lods
jb
push
ret
xor
push
push
(bad)
fisubr
(bad)
cld
lock
arpl
fisubr
add
shl
dec
enter
jl
(bad)
fs
add
dec
mov
dec
sub
add
sub
xor
mov
test
cmps
push
sbb
int
sti
popf
push
int
jl
cld
cmps
stos
stc
addr16
xor
pop
ds
fdivr
sbb
cdq
arpl
jo
pop
enter
jae
in
retf
scas
adc
pop
adc
xchg
ins
mov
pop
xor
popa
fist
(bad)
into
scas
test
xchg
mov
fisub
test
nop
jl
test
mov
pusha
mov
xor
cmp
jl
jbe
xchg
push
sbb
jno
rcl
mov
(bad)
in
inc
push
sbb
pop
dec
ja
es
xlat
cmp
fimul
push
push
iret
sub
push
xor
mov
fist
inc
int
and
cdq
aad
push
mov
jne
pop
xor
dec
(bad)
xchg
cdq
jns
jns
xor
rcl
or
les
dec
mov
outs
test
loop
pop
cdq
cmp
leave
nop
(bad)
mov
sbb
cld
pop
gs
lea
ins
das
mov
into
lods
mov
xchg
(bad)
mov
push
xchg
data16
ins
sbb
jp
nop
inc
leave
aam
shl
out
rol
push
adc
sbb
inc
mov
nop
pushf
mov
fwait
mov
cmp
xchg
aam
xchg
push
mov
ins
pop
mov
in
adc
pop
jl
jno
sub
xor
enter
push
hlt
or
out
and
into
push
push
or
mov
mov
sub
push
push
pop
loop
sbb
cli
adc
sahf
inc
add
outs
or
into
cmps
dec
lods
or
adc
shl
jg
adc
mov
mov
int
ins
mov
mov
aas
mov
outs
pop
sub
xchg
dec
fs
addr16
xchg
pop
xor
add
outs
(bad)
push
jmp
pop
mov
mov
jne
idiv
popf
test
test
icebp
jecxz
adc
xchg
cmp
jne
or
cmp
cmp
sub
jb
mov
mov
and
jle
mov
repz
push
fnsave
jle
fcmove
les
sbb
xchg
push
adc
mov
ficomp
xor
pop
ja
push
adc
adc
push
inc
int
jbe
repz
icebp
data16
sar
push
movups
add
(bad)
xor
pusha
jno
sbb
or
pop
xchg
mov
loope
sub
stos
adc
test
arpl
fisubr
sub
jmp
or
hlt
pop
out
inc
cmp
cmc
cwde
mov
or
loop
jge
or
xor
lahf
add
(bad)
fadd
scas
pop
jge
lods
push
push
fnstsw
and
fistp
xlat
std
fisttp
mov
add
pop
mov
es
mov
inc
pop
cmp
outs
cmp
jae
mov
inc
adc
repz
test
fmul
sub
xchg
retf
retf
push
jle
mov
fild
cmp
or
mov
jno
outs
pop
jb
mov
ss
ja
neg
into
mov
add
pop
or
mov
push
test
int3
xor
pop
sti
jle
scas
adc
shr
jge
jne
sti
mov
sub
ret
lea
test
add
dec
mov
fmul
pop
das
jle
cdq
test
shr
and
ret
cmp
adc
mov
sahf
adc
bound
pop
jmp
push
fsubr
cmp
cli
aam
cmp
jecxz
jno
jo
mov
mov
mov
out
pushf
mov
inc
dec
arpl
out
add
inc
or
mov
lds
ficom
sub
adc
dec
mov
jo
cdq
mov
fwait
outs
xchg
cmp
je
inc
outs
xchg
cdq
out
(bad)
ja
cmp
xor
test
js
and
iret
pop
call
lock
dec
dec
jg
outs
fmul
and
jae
repz
adc
leave
(bad)
imul
into
pop
jle
int
and
out
fstp
cwde
lds
aaa
cmp
cmp
out
jmp
add
fsubr
popa
mov
fcom
or
push
xor
push
push
mul
test
mov
or
idiv
and
ss
iret
(bad)
movs
test
popf
in
or
sub
mov
lods
add
jg
dec
(bad)
sahf
mov
mov
in
xchg
daa
nop
nop
jo
popa
test
imul
leave
inc
into
mov
neg
fadd
jmp
adc
pushf
jb
inc
div
(bad)
xor
leave
xor
scas
fdivr
lds
mov
into
(bad)
sbb
out
or
(bad)
push
dec
mov
lods
mov
inc
mov
outs
cmps
add
mov
cli
xchg
pop
xchg
pop
scas
xchg
and
stc
out
push
inc
dec
imul
in
addr16
cdq
push
jmp
aam
fsqrt
dec
cmps
fist
sub
xor
mov
pop
jnp
xlat
mov
sbb
popa
cld
pop
out
or
mov
mov
loopne
or
movs
es
cld
mov
adc
xchg
movs
push
mov
push
scas
out
ds
xchg
and
and
daa
outs
dec
push
aad
adc
retf
enter
cdq
aas
cmp
sub
inc
sub
push
loop
loope
scas
shr
mov
pop
adc
not
outs
inc
xchg
mov
arpl
pop
add
loopne
std
and
popf
mov
ror
out
mov
mov
pushf
mov
adc
xchg
arpl
pop
popf
sahf
sub
jns
mov
or
mov
aas
outs
out
mov
push
lock
push
test
aam
inc
xor
adc
jo
cmp
push
sbb
sub
add
js
adc
nop
xchg
jecxz
mov
jne
cli
test
mov
jle
jnp
leave
sub
ds
mov
mov
stc
xor
jge
or
dec
test
sti
scas
out
xchg
add
mov
cmp
pop
cmp
test
(bad)
fnstcw
and
cmp
jbe
push
sbb
adc
cmp
mov
mov
pusha
xlat
add
sbb
movs
dec
cmp
push
dec
push
sbb
xchg
jmp
sub
mov
jl
sar
mov
mov
jbe
cmps
test
jbe
out
pushf
pushf
das
and
adc
je
sub
xchg
jno
or
or
mov
lods
inc
and
jmp
pop
jl
push
inc
sbb
dec
fimul
mov
pop
mov
addr16
push
jmp
ins
add
(bad)
mov
dec
pop
aam
mov
xor
lds
cmp
dec
pop
loop
ins
fmul
pop
mov
shl
daa
leave
test
jl
dec
and
cmp
xchg
push
enter
xchg
fwait
mov
or
sahf
pushf
push
(bad)
adc
pop
std
jno
leave
sub
cs
leave
addr16
nop
jo
push
jmp
dec
inc
movhlps
pusha
cmp
sti
addr16
fisubr
loop
add
cdq
pop
xor
jecxz
dec
cmp
pop
(bad)
into
dec
bound
fwait
movs
stos
(bad)
scas
(bad)
vpaddq
mov
or
pop
stos
mov
pop
jbe
inc
push
cmp
pop
pop
or
dec
sbb
lock
fld
cs
push
les
jmp
stc
xchg
push
gs
leave
hlt
(bad)
(bad)
jbe
sub
into
bound
icebp
pushf
(bad)
js
jo
pop
test
or
ins
or
ja
mov
mov
addr16
push
sahf
or
inc
adc
inc
ret
push
cmp
iret
mov
inc
or
loope
xchg
mov
loop
mov
cmp
xchg
call
sub
xor
retf
cmps
cwde
fld
xor
push
push
jo
inc
or
inc
push
into
lods
gs
push
pop
jmp
mov
test
jge
add
push
pop
int3
cmp
test
sub
cmp
jno
jmp
or
sub
adc
jno
popf
jmp
pop
bound
ror
jno
int3
cmp
xor
xchg
scas
mov
popa
(bad)
jo
sbb
das
cmp
aaa
popa
rcl
jmp
pop
sbb
dec
shl
ins
mov
daa
out
lods
xchg
call
inc
and
pop
out
push
jb
mov
jge
add
adc
sub
icebp
repz
mov
shl
jo
and
push
adc
mov
mov
cmc
imul
ja
out
fsub
mov
adc
(bad)
cmp
ins
ins
or
xchg
mov
and
inc
test
(bad)
cmps
sbb
add
loope
loopne
mov
jne
popa
test
jae
out
mov
push
push
jle
add
pop
and
fstp
mov
add
mov
sub
push
jnp
pop
out
pop
stos
xchg
in
pop
mov
ror
cwde
dec
push
and
fcmovb
hlt
aad
mov
adc
stc
lods
inc
sub
(bad)
jo
xchg
push
fwait
mov
popa
sbb
and
mov
xchg
sub
mov
mov
sub
push
popf
xchg
in
adc
retf
js
add
loopne
sub
outs
std
dec
movs
test
ror
loopne
mov
shl
cld
imul
jbe
jl
(bad)
nop
mov
pop
xchg
jno
inc
leave
sbb
add
sub
jnp
xchg
mov
jl
imul
jmp
cmp
mov
or
pop
test
les
cmp
ror
xor
cmp
xchg
sahf
ror
out
gs
sbb
int3
pop
jecxz
shl
xchg
pop
int3
adc
jmp
in
and
ins
sub
dec
jle
inc
mov
mov
fwait
aad
imul
sbb
dec
je
cs
or
ins
push
(bad)
hlt
xchg
mov
inc
sbb
jp
cs
mov
pop
cwde
adc
jl
push
push
mov
jmp
xchg
sbb
mov
popa
std
jmp
pop
ins
cmps
add
sbb
or
jecxz
str
aas
je
enter
mov
push
in
mov
lock
add
stc
ss
inc
das
pusha
js
inc
add
les
adc
addr16
adc
sbb
sahf
mov
repnz
or
xchg
ret
sbb
or
sbb
dec
cwde
and
loope
fnstsw
push
mov
adc
test
bound
repz
mov
int3
popf
stc
loop
(bad)
(bad)
retf
cmp
jl
sub
mov
adc
push
xor
adc
adc
xchg
out
xchg
cmc
cmps
dec
scas
shl
mov
mov
cmp
mov
mov
loopne
mov
pop
jne
aas
adc
and
xchg
sub
aam
fcomp
inc
ud1
or
lods
sub
dec
push
xchg
ficom
sti
adc
and
sub
imul
test
(bad)
imul
mov
inc
mov
(bad)
stc
push
cmp
mov
sahf
push
jg
dec
mov
lods
cmp
lahf
pop
jb
icebp
sub
pop
repnz
icebp
pop
sar
cwde
(bad)
mov
cmps
out
inc
pop
movs
pusha
sar
add
push
push
or
int3
push
pop
idiv
cmp
in
add
or
inc
sub
inc
and
adc
daa
scas
(bad)
dec
adc
test
nop
mov
add
(bad)
mov
pushf
imul
aam
mov
mov
pop
push
xorps
xor
sahf
xchg
inc
aas
outs
cmp
loope
out
adc
and
pusha
imul
clc
dec
ret
adc
xchg
xor
cmc
sub
mov
add
mov
mov
adc
mov
out
jne
pop
jbe
add
aam
loope
jno
rcl
sahf
std
sahf
pop
jecxz
xchg
mov
inc
cmp
hlt
and
sbb
(bad)
jmp
mov
ja
movs
jno
fs
cmp
adc
int3
push
dec
mov
div
jl
fs
xchg
dec
in
sub
les
mov
pop
je
ja
imul
popa
adc
pop
push
in
out
nop
and
enter
das
mov
cmp
sbb
out
mov
repnz
dec
push
fnstsw
xchg
scas
mov
gs
repz
fist
fldenv
ror
popa
mov
adc
dec
dec
jl
push
pop
js
je
mov
inc
pusha
das
mov
sar
push
sbb
sbb
fbstp
sbb
out
xor
jecxz
mov
(bad)
daa
ds
cmp
icebp
sub
jg
out
aaa
in
mov
cmp
sub
cmp
int
add
test
in
mov
dec
add
push
jmp
and
push
jecxz
push
sbb
xchg
jbe
test
sbb
fst
adc
stc
or
mov
das
mov
adc
not
gs
(bad)
and
shl
cld
xor
ss
and
call
je
jns
cld
aam
(bad)
dec
dec
push
aad
fcmovnb
les
std
or
cld
push
mov
jbe
retf
lods
scas
idiv
xor
test
adc
pop
nop
ret
ins
mul
aad
sub
inc
xchg
dec
test
movs
fsub
inc
xchg
fidiv
jl
jg
clc
xchg
scas
(bad)
jbe
call
adc
fdivr
push
test
in
push
fwait
das
jg
cmp
jae
jne
sbb
sub
inc
xor
int3
call
add
inc
ficom
mov
lea
fwait
out
mov
fiadd
in
into
ror
cmp
outs
ja
add
test
dec
lds
and
outs
mov
repnz
std
pop
inc
and
mov
imul
lods
dec
cwde
stos
test
add
mov
dec
or
retf
xchg
fild
inc
rol
dec
shr
sub
cmp
or
pop
xchg
pop
push
sar
cdq
aam
or
push
ins
addr16
xchg
or
mov
lods
cs
inc
stos
in
push
sub
cmc
retf
adc
adc
sar
les
or
add
imul
fdivrp
movs
fld
imul
iret
imul
fadd
lods
minps
push
fisttp
add
out
mov
arpl
cmp
xchg
sbb
retf
cwde
(bad)
movs
bound
sub
je
mov
jle
add
add
fs
push
push
mov
fmul
dec
ins
mov
push
imul
hlt
jp
(bad)
and
cmp
sti
mov
push
js
fwait
shr
fist
cmp
xchg
cmp
cmps
xor
cld
jae
rcr
enter
cdq
jmp
cmp
stos
mov
push
enter
jnp
cmp
lock
mov
inc
cld
pusha
sbb
sub
repnz
popf
mov
mov
mov
xchg
jbe
aam
test
aas
inc
aad
jae
xchg
jno
pop
sti
lock
fcmovbe
fld
xor
iret
and
push
sub
xor
xchg
or
mov
cmps
push
add
inc
into
push
dec
aas
pop
lods
mov
sbb
test
lods
adc
mov
test
aad
iret
mov
scas
pop
push
scas
mov
adc
lock
mov
mov
mov
push
push
mov
jns
add
sahf
pop
adc
hlt
fidivr
lahf
push
push
push
mov
(bad)
xor
push
lods
test
push
and
mov
mov
fstp
cld
xchg
add
fstp
mov
test
lock
push
or
pop
inc
sub
push
mov
not
adc
mov
repnz
fcmovnbe
xchg
or
sub
imul
jg
pop
in
test
daa
and
jns
dec
mov
nop
adc
loop
cmps
call
dec
add
xlat
and
adc
dec
cs
sahf
rcl
dec
jmp
into
mov
retf
cmp
and
lds
dec
sahf
and
test
test
leave
pop
cmps
lock
cmps
mov
repnz
jmp
in
xor
pop
ret
mov
arpl
mov
xor
(bad)
(bad)
sbb
(bad)
lods
xor
and
shl
bound
jecxz
jl
lods
aas
pop
adc
push
je
add
bound
jge
cwde
fwait
mov
fnstcw
xor
push
lds
mov
push
(bad)
sub
rol
xor
cs
(bad)
and
inc
inc
or
mov
cmp
pusha
loopne
daa
out
dec
enter
repz
imul
cli
and
pop
cmps
int
and
sar
scas
cmps
and
rcl
ret
jne
mov
ja
xor
ja
or
loop
cmps
fisub
mov
jmp
mov
popf
aaa
or
into
xchg
sahf
push
(bad)
push
arpl
(bad)
and
add
pop
sub
ss
loopne
mov
xchg
cwde
xchg
jns
cld
out
(bad)
enter
test
pop
icebp
stos
adc
sbb
push
gs
fwait
(bad)
pop
cmp
jl
retf
lahf
mov
add
ss
pop
cmp
out
cld
and
adc
in
ins
and
sar
adc
pop
jnp
push
loop
(bad)
sub
push
xchg
jo
and
mov
iret
pop
xor
push
jp
fistp
aas
xchg
add
dec
jne
jb
jae
xchg
push
dec
loope
cmp
and
lods
add
pop
lahf
sbb
stos
loopne
(bad)
cs
lahf
push
xor
push
frstor
pop
mov
cmp
arpl
mov
mov
cmps
ret
push
cmp
sub
jno
into
add
push
iret
push
scas
xchg
out
loopne
adc
jmp
es
add
cmp
push
out
pop
and
jo
push
add
das
cmp
mov
fistp
mov
xchg
mov
adc
lahf
dec
cmp
cmp
jecxz
int3
imul
(bad)
int
call
xor
jl
pop
sbb
(bad)
hlt
hlt
and
int3
or
out
js
sbb
int3
xor
pop
inc
stos
cs
lock
mov
inc
cld
jp
pusha
test
repnz
test
rcr
mov
stos
mov
fisubr
sbb
stos
retf
push
mov
(bad)
or
(bad)
popa
stc
pop
repz
call
aaa
test
fild
mov
mov
hlt
scas
sub
repnz
test
inc
enter
popf
cdq
push
push
cs
push
mov
repnz
or
ins
jae
mov
mov
fiadd
cdq
push
jge
mov
cmc
aas
(bad)
loop
(bad)
popa
sbb
shr
in
outs
push
add
push
dec
dec
fsubr
add
xor
or
push
xlat
fnstcw
stos
jle
cmp
cdq
(bad)
gs
pop
in
mov
(bad)
loope
or
std
and
sub
or
movs
cmc
jl
in
cmps
in
repnz
enter
xchg
jmp
movs
xor
imul
mov
loop
push
mov
lds
mov
frstor
push
mov
mov
retf
bound
push
pop
lds
out
int3
dec
out
fmul
adc
and
ins
out
retf
loopne
enter
add
xor
dec
sub
movs
jmp
or
imul
sub
cmc
popa
js
xchg
dec
fimul
(bad)
loop
xchg
jle
sahf
les
push
or
push
fidiv
addr16
pop
call
jno
leave
loope
sbb
dec
sti
sbb
xchg
mov
mov
or
pusha
je
pushf
mov
push
fstp
dec
sahf
ins
sbb
inc
cld
mov
push
test
repnz
sbb
out
sbb
push
push
arpl
cmp
nop
cmp
rcr
lea
inc
fld
addr16
jp
add
mov
adc
push
adc
popa
mov
ret
or
mov
call
xchg
pushf
mov
push
es
mov
ret
dec
or
xlat
inc
loopne
adc
dec
test
popf
mov
das
jo
arpl
int3
rol
push
(bad)
add
cmc
gs
pushf
lds
push
popf
lods
pop
pop
mov
popa
mov
sar
or
xchg
sbb
push
stos
ret
repnz
dec
jae
shl
bound
push
ins
push
adc
jns
and
leave
aas
(bad)
aaa
int3
sub
leave
jmp
xor
dec
ss
pop
daa
ja
cdq
nop
mov
sbb
iretw
and
adc
cwde
(bad)
inc
fiadd
push
addr16
lahf
sub
and
jb
loopne
add
jns
in
pusha
sbb
ins
(bad)
jne
lods
sbb
mov
aaa
dec
adc
loope
call
in
stos
pop
je
popf
lods
out
in
fidivr
dec
and
adc
test
imul
cmp
push
pushf
pop
out
push
fucom
shl
jg
push
mov
mov
mov
xor
pop
add
cmp
lahf
push
jle
pusha
cmp
dec
call
daa
loop
ja
ins
std
dec
stc
pop
mul
and
or
add
mov
outs
and
ja
mov
pop
enter
mov
sub
mov
mov
mov
mov
jmp
or
and
cmc
jmp
sbb
clc
iret
add
add
and
xor
jae
push
or
cmp
mov
retf
pop
stc
mov
mov
fmul
push
add
add
xor
jbe
adc
je
jo
jecxz
ja
dec
lahf
push
fxam
aam
mov
mov
adc
pop
jp
xchg
stc
call
rcl
pop
sti
fdivrp
push
lds
aaa
adc
test
popa
retf
sub
add
idiv
jge
dec
cmpps
rcl
loopne
loopne
dec
aam
jge
test
sub
or
pop
repnz
jmp
or
pop
pop
pop
and
rcr
aam
mov
mov
adc
mov
xchg
hlt
push
dec
dec
or
jecxz
fsub
call
cs
in
push
arpl
pop
mov
lds
sar
jnp
push
add
lods
arpl
dec
les
xchg
(bad)
std
cld
jae
pop
xchg
cmp
sub
jns
rcl
or
mov
in
add
(bad)
cmp
add
mov
int3
xchg
fbld
hlt
icebp
inc
not
push
cmps
mov
(bad)
call
jne
lods
out
dec
mov
nop
adc
dec
repz
(bad)
fild
xchg
in
sub
loope
and
ja
adc
dec
(bad)
sub
xchg
call
pop
xor
mov
or
scas
jb
push
xchg
repnz
pop
push
sbb
jmp
fwait
cwde
out
loope
pop
adc
rol
jle
jno
xchg
or
imul
in
fsubr
sub
and
mov
adc
or
xlat
pop
lock
lea
js
dec
out
gs
cwde
cli
sbb
cwde
push
push
pop
cs
es
jnp
pop
(bad)
out
sbb
pop
dec
jno
adc
int
mov
icebp
int3
lods
ret
jecxz
ret
mov
xchg
in
xor
aaa
jne
pop
pop
jmp
sbb
in
fstp
sub
in
retf
push
xchg
daa
add
ins
rcr
adc
loopne
or
xchg
dec
mov
dec
retf
cmp
sub
and
cmp
rcr
std
xchg
fist
fwait
push
mov
ins
stc
cs
in
push
xchg
(bad)
outs
jo
push
xlat
in
ins
adc
pop
pop
push
cld
push
and
pusha
mov
or
fcom
jnp
xchg
in
push
adc
add
lds
push
outs
mov
pop
enter
push
dec
popf
fmul
mov
xchg
sbb
cdq
cmp
leave
cmp
call
mov
pop
es
or
adc
and
push
pop
mov
mov
ficom
test
lods
je
out
or
mov
push
mov
sub
sbb
js
sub
frstor
jb
bnd
dec
in
stc
adc
mov
je
int
jmp
out
and
scas
and
aas
cmps
pop
cdq
sub
sub
add
rcl
pop
sbb
add
test
jbe
and
pop
out
sub
sub
add
les
push
push
call
sub
push
adc
into
aas
dec
das
pop
sub
rol
cmc
fild
sbb
aam
and
in
fimul
jo
adc
cmp
mov
scas
xchg
popa
std
xchg
ja
test
cmp
dec
add
mov
fstp
test
sub
add
or
jg
aaa
xbegin
lahf
inc
cmp
dec
jl
imul
retf
loopne
bswap
jmp
inc
repz
and
loopne
push
sbb
fadd
pop
aam
inc
rcr
sbb
xor
and
sub
sbb
mov
fld
jbe
push
adc
addr16
cmc
and
xchg
(bad)
cmp
cld
add
xchg
imul
fmul
xchg
(bad)
fst
adc
adc
es
ins
fmul
xchg
xor
jb
je
mov
adc
inc
cmc
xchg
xor
(bad)
aam
addr16
dec
data16
dec
push
xchg
test
add
jmp
jmp
je
push
jb
int3
movs
lods
scas
sub
xchg
push
push
push
add
mov
sbb
repnz
xchg
push
jns
cmp
dec
fs
jnp
mov
mov
jb
xchg
imul
fisttp
sub
sbb
sbb
in
xchg
mov
scas
inc
fidiv
jb
mov
lea
xor
cmc
out
add
adc
mov
mov
aad
std
pop
daa
cmp
push
iret
ret
adc
inc
cmp
inc
or
mov
fnsave
mov
cmp
int3
pop
hlt
(bad)
jno
push
xchg
dec
arpl
es
dec
and
jne
inc
xchg
sub
mov
push
gs
iret
cdq
mov
cld
pop
shr
out
add
jle
dec
and
mul
sbb
inc
pop
scas
(bad)
sbb
add
dec
and
xchg
pusha
popf
cmp
pop
jb
add
pusha
pop
xchg
int3
jno
mov
adc
add
(bad)
aad
mov
cwde
popf
ds
inc
mov
or
imul
mov
mov
(bad)
retf
xchg
ins
cmp
pushw
lock
pop
add
and
or
mov
loope
sbb
dec
ret
sbb
in
dec
outs
out
dec
les
out
loopne
sub
scas
add
push
retf
inc
xchg
jp
inc
cmp
jne
in
enter
scas
rol
aam
fsubr
je
mov
nop
dec
fs
dec
or
fnsave
mov
out
cmp
ins
shl
rcr
(bad)
xor
test
mov
sbb
jl
add
mov
xor
and
psllq
xchg
inc
dec
cwde
fdiv
pop
sub
fneni(8087
int3
leave
sti
loop
mov
fisub
push
(bad)
movs
in
or
sub
and
mov
daa
jne
lahf
mov
sub
fwait
adc
mov
mov
push
xor
jp
les
pop
or
clc
jle
fdivr
cmp
push
fiadd
out
or
in
xchg
cld
and
cwde
mov
or
add
shr
sbb
out
xor
inc
mov
neg
inc
mov
pusha
test
mov
data16
xlat
jecxz
fwait
icebp
adc
push
daa
int
test
mov
and
jmp
jne
shl
mov
xchg
test
test
dec
xchg
xchg
sub
and
rol
imul
into
sbb
out
scas
cdq
leave
inc
jp
dec
mov
mov
dec
sbb
mov
cli
mov
aad
xchg
and
sbb
mov
lds
xchg
xchg
nop
cmps
mov
daa
fld
shl
pop
push
fwait
nop
adc
mov
in
(bad)
mov
adc
adc
dec
inc
iret
fstp
and
xchg
or
jnp
(bad)
sbb
outs
test
push
mov
les
aam
xchg
(bad)
loopne
add
out
dec
sti
lods
retf
ror
and
pop
add
cld
push
icebp
sbb
pop
adc
shr
dec
(bad)
pop
xchg
or
sbb
repnz
push
ds
sti
in
mov
or
mov
mov
imul
push
push
rol
push
ror
mov
cmp
pop
push
data16
fidiv
jge
cmp
sub
xchg
hlt
or
ja
fsubr
inc
(bad)
ror
cmp
arpl
mov
dec
jns
xchg
call
sbb
je
loopne
fstp
out
ret
adc
ret
loopne
xchg
cli
scas
mov
sub
add
xor
out
popf
and
inc
mov
jae
and
aaa
jbe
xchg
sub
pusha
push
or
or
test
movs
dec
adc
test
pop
test
leave
xchg
cmps
pop
mov
rcr
dec
test
sar
into
inc
push
mov
inc
dec
mov
arpl
cwde
inc
cmc
pushf
mov
call
js
adc
movs
mov
mov
fwait
xor
jge
fcmovnbe
mov
movs
jbe
movs
mov
fadd
loope
andps
gs
rol
xor
mov
arpl
inc
xor
in
in
jb
or
adc
jns
or
dec
outs
fadd
lds
jo
test
outs
pop
sub
(bad)
jne
loopne
xor
pop
add
clc
lahf
std
inc
jge
inc
sbb
mov
bound
push
and
outs
cs
cmps
hlt
jns
xor
push
nop
in
jecxz
mov
pop
outs
ret
mov
mov
(bad)
popf
xchg
(bad)
arpl
test
call
jbe
mov
retf
mov
mov
js
or
xor
cmp
xchg
xchg
pop
jne
and
mov
jmp
into
hlt
bound
addr16
neg
addr16
or
pop
das
sahf
push
jmp
mov
daa
pop
test
jne
popa
(bad)
add
in
lods
pop
punpcklwd
and
jno
cmp
repnz
dec
stos
push
adc
mov
cmp
arpl
repnz
cmp
fisttp
jbe
inc
dec
xor
nop
xor
sub
adc
loope
inc
out
sbb
int3
cli
pop
mov
sub
(bad)
xchg
jp
sbb
movs
ffreep
stos
mov
and
sahf
fistp
or
les
std
shr
test
lods
lods
(bad)
mov
call
repnz
mov
je
test
scas
lds
fbstp
lock
data16
cwde
add
cld
call
mov
inc
(bad)
mov
xchg
mov
jmp
mov
cld
into
cld
retf
sbb
or
lds
lods
xchg
mov
sub
shr
add
ret
jo
stc
jns
ret
je
push
mov
jecxz
push
pop
xchg
ja
loope
inc
xchg
imul
sbb
(bad)
jo
pop
lods
es
es
nop
or
cmps
sar
inc
ror
adc
jge
mov
mov
je
das
jbe
jmp
cmps
cmp
retf
xor
dec
sub
leave
and
ds
addr16
or
mov
jge
mov
fistp
inc
and
fistp
pop
repz
or
pusha
je
pop
shr
add
ror
(bad)
mov
sub
push
or
and
sbb
mov
dec
rcr
or
sub
jecxz
inc
sub
stos
inc
aaa
int
sub
(bad)
cmp
mov
sti
int3
(bad)
sub
push
and
std
jmp
ret
inc
mov
idiv
dec
(bad)
daa
or
(bad)
dec
mov
fistp
(bad)
xchg
sbb
retf
stos
lock
and
popa
pop
pop
jns
sub
je
call
pop
movs
adc
ins
dec
add
add
sar
push
mov
inc
and
pop
lods
movs
xchg
retf
stos
dec
and
add
loope
push
inc
xchg
mov
lods
hlt
aas
inc
mov
mov
sbb
loopne
xchg
pop
and
jp
lock
fdivr
pop
mov
push
inc
pop
pusha
mov
enter
out
sbb
icebp
pop
pop
mov
inc
xchg
cmp
push
push
mov
mov
mov
mov
dec
mov
cmp
dec
mov
pop
fbstp
iret
mov
mov
mov
dec
(bad)
cmc
mov
and
add
or
jnp
fidiv
mov
push
add
jle
add
push
popf
popa
ins
ins
mov
pop
push
mov
loop
(bad)
push
inc
imul
sub
adc
ins
out
jmp
(bad)
icebp
fwait
inc
cmp
sub
cdq
cwde
or
xchg
inc
pop
pop
mov
sub
imul
xor
cwde
aam
test
inc
fld
(bad)
cmp
xchg
out
jge
int
mov
push
push
fisub
into
stc
xchg
mov
retf
fnstsw
nop
adc
push
push
and
mov
cmp
icebp
aad
pop
mov
std
ins
sbb
xchg
or
xchg
dec
fs
fs
ins
or
hlt
clc
lods
jnp
test
mov
pop
loope
pop
jp
jp
jp
mov
lods
call
les
or
jle
icebp
xor
push
jg
pop
outs
int3
push
xchg
xchg
bound
out
and
jl
push
lea
aam
hlt
test
cwde
in
lds
call
jle
out
rcl
and
js
imul
xchg
scas
repnz
std
inc
lods
mov
jns
add
cmps
jno
add
(bad)
loop
xchg
dec
jne
clc
add
dec
les
xchg
mov
stos
iret
js
sub
ins
pop
or
repnz
jmp
xor
imul
and
jns
sub
fadd
or
mov
fisub
xor
inc
mov
cmp
(bad)
nop
jmp
lods
xchg
inc
xchg
sub
mov
push
mov
ja
out
cld
in
arpl
jae
std
mov
or
mov
pop
and
ja
and
push
das
ins
outs
and
pop
pushf
push
inc
iret
mov
jns
mov
xor
icebp
adc
pop
dec
cwde
iret
enter
add
jbe
adc
fimul
repz
jp
mov
out
pop
test
test
cmp
push
in
in
pop
out
xchg
xchg
add
and
les
or
imul
cwde
cmp
jmp
arpl
pop
std
push
out
xor
dec
mov
xchg
adc
out
or
daa
or
out
or
xchg
xchg
aas
jb
es
test
xchg
cwde
call
dec
fwait
call
push
lock
add
push
sar
mov
fs
lds
pop
scas
push
scas
movs
mov
in
pop
mov
loop
inc
lea
sti
dec
dec
inc
push
loopne
adc
jmp
lds
cmp
dec
dec
push
cmps
pop
pop
cdq
(bad)
mov
jmp
icebp
xchg
pop
aas
mov
push
lods
call
fs
sar
sbb
push
mov
add
mov
mov
sbb
push
call
and
sbb
in
fiadd
imul
aaa
jmp
dec
shl
(bad)
sti
mov
dec
xor
cmps
(bad)
sbb
inc
out
dec
mov
jmp
daa
scas
mov
retf
dec
div
and
and
ja
mov
jnp
loop
ss
mov
or
cdq
std
arpl
sbb
xchg
dec
ret
cmps
outs
lods
cmps
push
jns
cmp
or
pop
jecxz
sbb
jo
retf
mov
pushfw
or
jecxz
push
leave
dec
(bad)
mov
repz
stos
ret
arpl
dec
cmp
xor
(bad)
jl
jg
mov
leave
cmp
test
adc
stos
out
loopne
loopne
cli
jmp
dec
sbb
loopne
(bad)
fistp
xlat
les
sub
daa
sbb
push
xor
fisttp
mov
in
jmp
mov
mov
leave
mov
push
jb
push
inc
sbb
addr16
sub
ret
add
jo
add
mov
inc
aam
mov
loop
loope
cmp
mov
mov
div
out
xchg
mov
scas
xor
cmp
mov
arpl
sub
pop
add
test
sub
xor
pusha
sub
ror
fxch
mov
dec
mov
sub
push
call
out
pop
(bad)
loopne
jg
mov
mov
add
push
xor
test
adc
push
dec
sbb
xchg
pop
in
mov
mov
(bad)
rol
push
ins
or
push
out
ds
imul
xor
mov
ds
mov
cmp
push
jne
mov
xor
enter
ds
sub
xchg
jnp
mov
sbb
lods
dec
add
ds
into
sti
out
lock
pop
sbb
xor
or
popf
ret
(bad)
ror
je
inc
mov
(bad)
rcl
test
stos
imul
mov
in
mov
xchg
and
je
sub
out
mov
pop
dec
aaa
rcl
nop
mov
dec
pop
mov
xor
stc
sbb
mov
push
cmp
aam
mov
xchg
and
dec
mov
es
stos
mov
xchg
jl
cmc
aad
mov
pop
inc
pushf
call
push
push
add
(bad)
jmp
into
xor
add
xchg
xlat
adc
fwait
lea
xchg
and
cmp
add
jae
fiadd
push
pop
mov
add
pusha
retf
mov
test
xor
sub
int
push
jae
mov
(bad)
in
mov
inc
fnstcw
in
jge
fidivr
and
int3
sbb
mov
es
pop
push
fdiv
daa
add
movs
stos
mov
(bad)
std
fidiv
mov
pop
sub
rcl
mov
push
sar
gs
sbb
inc
movs
cmp
dec
int
cld
outs
xor
mov
sbb
cwde
mov
xchg
cdq
xor
lock
or
jle
std
bound
push
pop
loopne
mov
or
or
jg
fimul
pop
cld
xlat
push
fdivr
mov
push
pop
loopne
push
call
and
add
in
sbb
outs
(bad)
movs
xor
mov
pop
xor
hlt
(bad)
popa
adc
sub
scas
cdq
enter
cmp
sub
mov
inc
jg
retf
mov
jb
sbb
clc
xchg
xchg
push
mov
xchg
dec
sti
or
push
mov
jo
adc
fdivr
aas
push
mov
and
lea
test
mov
cld
sub
mov
das
dec
ds
loop
add
bound
mov
mov
addr16
pop
dec
or
dec
not
test
dec
aam
dec
aam
(bad)
pop
ss
or
adc
popa
mov
push
sbb
jge
inc
mov
jp
mov
fdivr
mov
mov
cmp
pop
mov
push
pop
stc
add
push
sbb
shl
mov
aaa
aam
int3
pop
loope
jecxz
mov
les
nop
cmp
call
push
fs
pop
gs
or
movs
push
lods
out
jbe
pop
cmp
adc
data16
push
push
mov
add
mov
pop
mov
fs
dec
xchg
mov
out
es
sub
addr16
imul
cmp
adc
call
test
ret
bound
pop
ins
pop
xchg
mov
sbb
mov
mov
fsin
imul
pop
fmulp
mov
imul
aam
movs
call
in
imul
imul
scas
test
imul
neg
mov
fucomi
jbe
jmp
loope
jmp
adc
add
cmps
cld
arpl
inc
jl
jge
cli
jne
pop
pushf
and
mov
fisttp
outs
dec
push
push
sub
es
dec
rcl
ins
test
addr16
mov
mov
dec
or
pop
xchg
add
in
push
(bad)
jbe
pop
xchg
lahf
xlat
dec
cdq
out
fcom
ins
shr
xchg
scas
push
mov
dec
jmp
pop
push
sahf
mov
jecxz
adc
jbe
add
out
cmps
out
in
mov
push
and
imul
inc
mov
(bad)
aas
(bad)
lea
mov
aam
das
push
fdivr
fwait
stc
ja
jbe
or
clc
cmc
cmps
das
mov
mov
push
jo
je
sbb
cs
jmp
sub
adc
scas
ss
movs
inc
repz
adc
pop
xchg
cmp
inc
push
jne
cld
es
inc
leave
loopne
cmp
cmp
sbb
loopne
es
popf
pop
stc
ss
sbb
nop
outs
lods
jo
call
push
sahf
test
jp
shl
push
fucom
cmc
sbb
out
out
pop
mov
xchg
test
cmp
fs
cmps
xor
and
lock
fsubr
push
lods
loop
loope
in
arpl
cmps
cmp
fsub
lods
into
addr16
loop
mov
jp
data16
data16
mov
add
jo
inc
sub
xchg
dec
out
cmp
push
adc
js
popa
xchg
in
test
pop
(bad)
loopne
pop
mov
mov
mov
pop
sub
mov
xor
sbb
mov
sbb
and
shl
pop
or
das
mov
add
(bad)
loopne
or
cmp
push
push
daa
fs
sbb
mov
xchg
cld
pop
mov
mov
or
push
mov
addr16
lahf
and
cmps
push
in
xor
cmp
push
out
outs
mov
and
es
ja
out
je
aas
jl
jmp
je
outs
mov
(bad)
repnz
mov
jmp
mov
jnp
fs
sti
pop
cs
mov
xor
pushf
neg
xlat
jbe
and
mov
shr
icebp
jb
dec
adc
fcom
xor
stc
imul
push
pop
mov
xor
push
dec
ficom
mov
add
dec
jno
inc
idiv
or
fidivr
inc
fstp
push
sar
sbb
or
in
cs
call
mov
repnz
add
(bad)
cmp
jmp
addr16
lods
in
push
ins
sbb
mov
mov
xchg
ins
mov
pop
mov
adc
pop
gs
scas
or
out
or
out
mov
jns
je
push
mov
stos
xlat
movs
jb
mov
mov
fbstp
or
mov
mov
xor
sbb
callw
retf
xchg
jmp
pop
xor
lods
rcr
sbb
and
inc
clc
pop
ror
ror
bound
push
mov
popf
jl
xor
das
ficomp
ja
iret
mov
push
pop
repz
cwde
aam
xor
adc
scas
pop
loope
pop
lock
mov
jp
pop
cmp
mov
rcr
sar
mov
ror
iret
pop
mov
sbb
inc
stc
shr
fild
add
les
nop
adc
inc
add
mov
inc
push
cmc
add
call
ins
xchg
xchg
fist
mov
aas
loop
imul
cli
shl
hlt
push
out
inc
xchg
(bad)
idiv
mov
sub
add
test
aaa
jnp
dec
ds
ret
outs
(bad)
jne
xchg
cmp
and
mov
cmp
out
dec
jne
and
scas
mov
hlt
or
ins
dec
adc
mov
jp
add
sub
ins
clc
or
aam
loopne
test
aas
ja
std
adc
jno
cmps
repz
nop
rol
sbb
cmps
fdivr
in
xor
loop
ret
pop
adc
sbb
mov
xchg
push
imul
pop
xlat
(bad)
(bad)
mov
mov
movs
and
mov
push
retf
jb
in
or
loope
repnz
sbb
cli
(bad)
icebp
and
js
mov
nop
and
mov
sub
call
bt
sub
data16
hlt
test
add
add
call
clc
mov
inc
push
mov
and
pop
aad
jl
pop
xchg
pop
nop
inc
sbb
xchg
mov
dec
xchg
mov
sub
adc
pop
jecxz
xor
mov
jle
mov
daa
jge
imul
jl
and
int
xor
mul
push
jae
movs
sub
dec
sub
js
(bad)
fadd
jno
jmp
xor
mov
pop
xchg
jnp
xchg
mov
sahf
mov
js
(bad)
mov
out
nop
adc
fwait
inc
ss
in
lock
retf
fisttp
xchg
push
add
adc
repnz
rol
cmps
jg
scas
lock
or
or
and
ror
shl
jnp
jo
sbb
add
or
pop
xchg
(bad)
out
jbe
mov
sub
pop
or
outs
adc
les
adc
or
fist
xchg
and
cdq
push
cmc
adc
data16
loope
jae
jo
push
test
data16
mov
cmp
fcom
ds
add
add
mov
cdq
sbb
xchg
aas
push
rcr
dec
jbe
push
jns
mov
nop
mov
ds
xor
sbb
sbb
xor
cmp
mov
fstp
inc
add
and
pusha
shl
push
jecxz
aam
inc
jo
sahf
aas
dec
mov
inc
scas
in
mov
imul
adc
xchg
xchg
in
pop
cwde
scas
inc
rol
fiadd
cwde
mov
dec
aad
add
cmp
fisttp
mov
fsubrp
(bad)
cli
xchg
je
mov
pop
cs
popf
lock
xchg
cmp
push
or
mov
mov
jl
call
dec
movs
mov
cmc
or
fcmovu
sub
sahf
mov
shr
mov
ja
jmp
into
aad
mov
repz
cld
mov
(bad)
sub
int
popf
(bad)
inc
outs
mov
movs
xchg
or
hlt
add
inc
dec
dec
push
sub
add
lea
(bad)
iret
jo
test
repnz
and
jmp
pop
and
int
in
jle
in
add
xchg
and
or
daa
jo
repnz
into
sbb
js
(bad)
pop
sub
or
mov
cmps
xchg
(bad)
fist
out
xor
pushf
jae
or
cmp
fbstp
les
enter
inc
int3
or
jno
push
mov
ror
push
mov
ret
call
xor
sub
(bad)
(bad)
loope
addr16
push
cmps
push
movs
sbb
dec
jbe
out
pop
scas
push
inc
loope
ss
ret
mov
sbb
add
stc
repz
pop
inc
inc
call
sub
ins
xor
fild
daa
(bad)
dec
sub
je
push
sub
ret
rol
and
mov
jecxz
(bad)
push
nop
outs
add
(bad)
movs
pop
outs
jno
and
ins
jnp
(bad)
jmp
popa
adc
push
jmp
jmp
in
fdivr
adc
cs
call
aam
mov
bound
outs
jmp
push
jmp
in
je
xor
enter
scas
dec
inc
cmc
aam
push
mov
adc
ret
xchg
dec
jg
mov
hlt
sub
(bad)
movs
std
sub
mov
mov
sti
push
mov
xchg
outs
test
push
push
lds
push
cmp
(bad)
movs
lds
test
fsin
shl
jle
ficomp
jecxz
push
aad
mov
movs
retfw
mov
pop
imul
inc
or
dec
inc
jo
jbe
push
and
repnz
or
outs
sbb
movs
retf
hlt
mov
sar
push
into
lock
xor
xchg
mov
jbe
pop
mov
pop
xor
ficom
or
fidiv
cmp
aaa
stc
mov
sub
adc
ror
cwde
arpl
das
dec
sti
clc
es
xlat
pop
out
adc
rcr
mov
std
jnp
mov
sahf
jp
sub
jo
jg
pop
pop
in
aad
dec
out
jge
outs
jbe
imul
pusha
jle
jae
into
fst
cmp
fst
pop
push
rol
ins
sub
sbb
les
and
sbb
and
mov
jecxz
cmp
shr
jp
psllw
mov
push
xor
(bad)
fwait
iret
jecxz
cmp
sbb
out
popa
adc
pop
push
xchg
outs
xor
sar
pop
lods
movs
mov
sbb
inc
shl
mov
adc
pop
inc
jb
lods
lock
ins
inc
dec
(bad)
push
and
call
pop
cmp
mov
stc
jg
xchg
xor
ficom
xor
ror
dec
movs
push
jle
and
lahf
es
dec
sub
js
xchg
aam
and
mov
ror
xor
or
iret
jne
push
jae
dec
rcr
mov
adc
test
sbb
mov
mov
inc
jp
fstp
pusha
in
add
clc
aaa
jl
lahf
pop
xor
mov
add
sub
(bad)
ds
aad
retf
outs
or
into
cmp
jge
jmp
cwde
mov
ficomp
mov
dec
test
icebp
sbb
nop
mov
retf
pop
jmp
arpl
mov
retf
dec
pop
xchg
or
dec
(bad)
leave
arpl
pop
mov
push
sub
cli
scas
adc
add
lea
loopne
aad
adc
push
retf
push
xchg
adc
add
mov
mov
test
arpl
xchg
jbe
out
xchg
mov
sbb
xchg
fsub
ins
cli
sbb
f2xm1
or
xchg
add
mov
and
cmps
pushf
hlt
mov
and
cmps
mov
and
out
sub
mov
jnp
je
add
dec
jg
sub
adc
test
rcr
lods
mov
aam
ins
jmp
cmps
inc
jmp
iret
cmp
push
repz
popf
repz
outs
xor
call
cmp
push
mov
add
(bad)
and
sbb
test
xchg
xlat
xor
add
cmp
and
sub
push
mov
adc
sbb
pop
mov
sub
scas
test
pop
stc
call
lock
inc
xchg
mov
call
call
mov
cmp
cwde
sahf
pop
sub
je
jae
shl
cmp
movs
dec
sbb
add
push
arpl
xor
mul
(bad)
fstp
xchg
cmps
bound
cmp
repnz
sbb
(bad)
inc
inc
int
sbb
lahf
jo
iret
popf
add
sahf
cdq
in
mov
fs
sbb
aaa
in
add
jg
push
push
mov
cmps
sbb
ss
mov
xor
xor
and
arpl
mov
adc
(bad)
fwait
inc
xchg
rcl
retf
cmp
xchg
or
jp
jbe
adc
(bad)
or
and
into
nop
add
pop
sub
aas
push
push
clc
pop
jg
jle
xchg
sub
jo
cs
mov
jmp
pop
adc
(bad)
pop
mov
pop
sub
repz
add
aaa
dec
call
repnz
jmp
jmp
sub
sub
es
enter
add
pushf
sbb
stos
push
adc
ins
outs
push
sub
scas
sub
xor
std
mov
imul
push
or
and
leave
ret
(bad)
jecxz
push
cli
mov
fst
xor
fdiv
sbb
sbb
pop
and
sub
cmp
fcmovb
cli
je
stos
pop
(bad)
jmp
sahf
cmc
fbstp
and
fisttp
sub
xor
and
aad
lods
inc
mov
and
out
cs
pop
and
jmp
les
loopne
push
fs
jno
dec
mov
xor
mov
test
add
or
pop
scas
addr16
(bad)
or
mov
idiv
loopne
arpl
(bad)
sti
add
adc
push
push
and
inc
mov
mov
pop
push
or
pop
lds
or
mov
jp
sub
mov
sbb
aad
not
outs
cwde
pop
je
jnp
cdq
inc
pop
pop
add
sub
jb
jge
rcr
(bad)
daa
mov
scas
push
push
movs
into
or
hlt
out
dec
xor
adc
stos
mov
into
xchg
mov
pop
add
int3
jg
mov
int
jne
push
stos
mov
repz
mov
nop
mov
pop
aad
adc
pop
ret
not
dec
cmc
(bad)
fisttp
jno
cld
sbb
leave
and
xlat
mov
mov
mov
je
cmp
adc
push
and
inc
inc
inc
xor
ret
fnstcw
pop
(bad)
dec
(bad)
js
ret
mov
(bad)
cmp
cld
arpl
push
mov
in
in
ficom
cmp
xchg
loope
sbb
mov
and
jnp
stos
lea
out
xchg
adc
add
outs
movs
adc
dec
pop
lods
pop
in
inc
mov
jg
push
jne
xchg
jl
xchg
sub
int3
daa
outs
pop
cmp
imul
shl
add
mov
xchg
jnp
mov
aam
inc
es
in
rol
jo
jmp
push
mov
adc
sbb
ds
sbb
leave
cld
and
mov
mov
jbe
aaa
outs
or
icebp
push
push
cwde
(bad)
push
sub
push
call
fistp
jmp
pop
ret
mov
or
xchg
push
mov
aaa
sti
fadd
cld
out
dec
mov
arpl
mov
int
fmul
cli
jge
popf
(bad)
pop
inc
in
fbld
int3
mov
ja
add
jmp
jmp
frstorw
es
add
sub
inc
add
dec
in
mov
test
call
movs
mov
mov
inc
lods
scas
mov
mov
xchg
dec
stos
aad
rcl
sbb
push
mov
(bad)
(bad)
push
loop
xchg
out
shl
imul
sahf
cmp
push
mov
jl
icebp
push
inc
test
mov
arpl
and
shl
sbb
(bad)
mov
mov
or
bound
xchg
xor
ins
mov
mov
adc
jb
rcr
stc
mov
aad
jge
sti
jmp
add
or
not
jp
sub
inc
xor
jb
mov
icebp
add
scas
sahf
pop
sub
jp
pop
add
das
cmp
mov
sahf
mov
dec
(bad)
sub
dec
and
mov
js
test
mov
adc
(bad)
adc
pop
adc
lahf
inc
or
lahf
cdq
xor
push
hlt
jne
push
sub
mov
fidivr
retf
sbb
fbld
ja
pop
(bad)
xchg
test
mov
lods
int3
push
popa
jae
sti
lods
inc
mov
shl
xchg
sahf
adc
sub
adc
scas
mov
je
fsubr
ror
cmp
jl
sbb
lock
cdq
sbb
imul
inc
lock
mov
shl
loopne
jno
adc
pop
adc
or
mov
test
fsub
adc
(bad)
dec
dec
cmps
push
cwde
xchg
loop
arpl
pusha
jg
pusha
mov
xor
jge
mov
xor
mov
fwait
movs
lea
ins
ret
jp
mov
in
enter
xchg
sahf
retf
add
mov
push
push
lds
xchg
mov
or
enter
aam
loope
loop
adc
push
movs
push
(bad)
into
dec
rcl
movs
adc
mov
pop
or
out
xlat
sbb
add
xchg
jo
stc
or
jmp
xor
mov
pop
ret
pop
push
jb
jg
xchg
mov
sub
sar
pushf
ja
ret
pop
sub
stos
mov
dec
mov
sbb
push
cdq
jae
push
add
jg
push
jecxz
xchg
gs
movs
add
pop
push
push
and
lock
or
inc
sar
cmp
and
sub
movs
mov
xor
or
bound
movs
adc
mov
in
arpl
scas
mov
adc
push
push
add
dec
cld
outs
pop
dec
mov
lock
dec
xchg
stos
std
and
mov
lds
jecxz
test
or
cmp
mov
xor
pop
in
test
test
mov
push
dec
das
cmp
fstp
jno
repnz
addr16
mov
scas
adc
cmc
inc
xchg
mov
mov
aam
test
pop
in
sar
out
mov
movd
shr
jl
or
dec
cmc
push
test
dec
push
push
jns
xor
mov
cmc
add
inc
scas
add
mov
pop
pop
out
ret
adc
ret
push
imul
push
mov
in
ja
imul
iret
cwde
ds
dec
loopne
pop
xor
scas
shr
in
loope
xor
inc
aas
fldcw
jae
jae
(bad)
pop
sub
add
sub
and
mov
jl
sub
cwde
icebp
daa
sub
adc
pop
inc
popa
cmp
inc
adc
pop
ret
out
xchg
push
outs
and
jo
cmp
push
cmps
sub
mov
stos
ror
cwde
or
sbb
shr
jl
test
hlt
test
add
cmp
sbb
cld
movs
sahf
mov
mov
aas
sahf
rcr
hlt
xchg
sub
xor
mov
mov
pusha
mov
jae
or
sub
sahf
or
jp
pop
les
dec
or
aad
cmp
(bad)
sbb
loopne
pop
call
xchg
cs
loop
mov
and
push
loope
cld
lahf
cdq
rcr
outs
fs
int
sub
jmp
sahf
mov
shl
xchg
imul
out
or
(bad)
(bad)
mov
daa
and
pop
mov
inc
sub
mov
test
adc
(bad)
mov
cdq
movs
xchg
xchg
rol
xchg
jbe
(bad)
test
in
inc
mov
jae
call
cmp
stos
push
mov
in
stc
call
pop
cmp
popf
addr16
push
pusha
lods
lock
sub
sbb
xlat
iret
push
jg
ret
and
jmp
mov
cmp
shr
outs
adc
mov
dec
aas
mov
mov
in
add
in
add
repnz
into
sbb
pop
push
ja
mov
pop
fist
inc
and
add
sar
test
pop
movs
retf
test
out
es
mov
ret
(bad)
mov
dec
cs
arpl
mov
fstp
std
cwde
push
aad
adc
(bad)
out
int3
jnp
in
dec
pop
dec
mov
sbb
in
pop
into
dec
inc
ins
jge
hlt
pop
fsubrp
or
popa
xor
mov
dec
test
cld
mov
push
push
in
ds
pop
outs
and
push
dec
in
mov
xchg
stc
pop
xchg
les
ror
push
(bad)
cli
(bad)
xchg
es
inc
std
std
popf
rol
cmps
(bad)
int
dec
jae
stc
xor
nop
mov
add
xchg
and
push
pop
xchg
pop
jnp
aas
js
das
in
je
mov
call
or
stos
out
dec
jbe
pushf
dec
aaa
icebp
cdq
add
mov
jnp
outs
rcl
mov
dec
(bad)
cli
retf
pop
ins
push
ins
(bad)
int
cmp
dec
fwait
cmp
pop
(bad)
es
mov
test
mov
jae
mov
call
jl
add
ss
cdq
test
lock
push
shr
mov
cmp
push
fisttp
push
out
(bad)
xchg
arpl
out
mov
jne
push
pop
lahf
xor
or
push
add
add
sbb
(bad)
sub
pop
push
into
fwait
xor
sub
jecxz
fdiv
and
add
mov
shl
aas
popf
out
in
xor
repz
aam
inc
aas
pop
push
push
int3
push
enter
push
mov
adc
repnz
jne
jp
push
dec
shl
cmp
test
addr16
mov
mov
shl
xchg
das
sahf
xchg
mov
push
mov
pop
test
xor
pop
xchg
push
mov
ja
inc
inc
popa
shrd
call
leave
sub
xor
aam
cmc
ret
leave
jmp
jo
addr16
mov
int3
sub
(bad)
jne
adc
loopne
jno
das
lods
popf
jnp
sbb
sub
fidivr
dec
jnp
cmp
test
lahf
inc
mov
xchg
mov
lgs
xchg
bswap
pop
push
out
out
test
cmp
cmc
rcl
xlat
pop
mov
lods
xor
fsub
mov
(bad)
loope
bound
push
sbb
xchg
dec
pop
fst
daa
adc
shl
mov
mul
push
out
jns
je
mov
test
or
jg
adc
cs
cli
nop
or
ret
push
mov
mov
xchg
xchg
out
popa
sub
bswap
xor
aas
gs
daa
out
mov
(bad)
pop
lds
push
test
inc
push
jg
sub
shl
jne
(bad)
outs
into
sti
sbb
aas
in
xchg
push
inc
stos
outs
lahf
push
pop
mov
daa
or
sub
ud1
imul
pop
pop
mov
daa
fwait
jge
adc
ficomp
jo
sbb
and
pop
jge
movs
sahf
dec
btc
xlat
stos
fiadd
jmp
xchg
xchg
and
jo
xor
fs
jp
imul
mov
nop
rcr
lea
push
jns
xchg
jnp
mov
jp
inc
pop
pop
not
in
sbb
ins
pop
mov
and
jae
cmps
cmp
repz
fmul
xchg
clc
cmp
ins
mov
ja
cwde
xor
xchg
adc
scas
mov
inc
(bad)
jbe
push
(bad)
or
fld
test
cli
cmps
push
cmp
push
or
pop
jne
mov
data16
hlt
(bad)
aam
stc
rcl
xor
cli
popf
pop
(bad)
shl
mov
and
out
pop
hlt
mov
push
arpl
cli
pop
into
push
xchg
imul
shl
retf
sar
mov
dec
out
test
outs
sub
mov
sub
fs
mov
loope
sbb
je
jae
call
dec
jbe
shl
add
retf
ds
div
fisttp
xlat
sub
jp
inc
and
scas
add
xor
stos
xor
xor
(bad)
mov
sub
mov
les
repnz
pop
stc
push
xor
mov
(bad)
jmp
pop
inc
adc
cmc
les
sbb
add
sahf
jg
jle
mov
int
fidivr
fisttp
xor
sub
mov
int
mov
sbb
dec
imul
cmps
and
cmps
mov
mov
push
leave
lods
mov
outs
std
jne
ja
jecxz
inc
fwait
(bad)
test
or
xchg
nop
push
jl
loop
(bad)
fild
les
aaa
fdivr
xor
add
scas
loopne
in
mov
mov
adc
cmp
ficomp
and
jmp
ds
dec
in
(bad)
std
fs
call
cmp
aam
pushf
fdiv
mov
push
jecxz
popf
inc
xor
sbb
cmps
xchg
jbe
push
add
call
jg
test
adc
loopne
fs
jmp
shr
aaa
add
cmps
jle
sub
(bad)
repnz
add
fdivr
sbb
(bad)
sub
ins
int
fcmovu
outs
inc
js
in
fs
stos
pop
cli
and
imul
add
adc
sahf
add
popa
push
xchg
push
dec
mov
mov
jle
daa
cmps
xchg
ss
je
or
test
loopne
adc
adc
fstp
data16
xchg
xlat
aad
add
cmps
pop
push
outs
and
xor
and
ror
out
push
call
mov
or
xchg
cdq
sbb
cmps
int
jg
scas
cmp
cwde
ror
xchg
inc
mov
lods
xchg
push
loope
pop
loop
jl
fmul
adc
or
or
(bad)
fisubr
jae
jns
push
fs
mov
out
add
ins
loopne
jb
or
out
xor
xchg
pop
mov
pop
cmps
push
inc
(bad)
sbb
test
addr16
sbb
popa
sub
jb
lahf
es
mov
push
adc
retf
jge
and
test
int3
ret
mov
popf
mov
dec
nop
lahf
movs
adc
lds
sub
gs
xchg
sub
lds
and
dec
xor
xor
inc
inc
cmps
mov
sbb
mov
dec
daa
xor
stos
add
into
cdq
jle
cmp
cli
xchg
cdq
xchg
jl
(bad)
retf
or
int
jb
xchg
fldenv
and
lds
daa
jmp
lds
ins
ins
jg
gs
and
out
and
xor
jecxz
int
sbb
aam
fidivr
call
scas
add
rcl
cmp
int
jecxz
(bad)
mov
call
out
into
(bad)
jp
jns
inc
lods
sbb
pop
add
jnp
jbe
push
dec
push
and
mov
adc
ins
or
inc
aaa
or
mov
push
xchg
not
mov
add
push
push
xchg
xor
stos
(bad)
inc
cmp
test
aaa
mov
or
jl
sbb
ret
lahf
or
popa
inc
and
data16
pop
adc
movsx
jb
shl
xchg
cdq
jecxz
cmp
xor
cmp
je
movs
loop
push
(bad)
mov
xor
cmp
xchg
aas
es
cmp
xchg
lods
imul
mov
dec
xchg
add
mov
das
dec
ret
jb
push
mov
shr
out
sbb
pushf
js
adc
(bad)
push
or
mov
neg
es
jns
add
cmp
xchg
cmp
ins
test
dec
sbb
adc
sbb
lds
je
adc
aaa
mov
mov
sbb
cmp
aaa
test
jl
adc
push
jno
jp
add
pop
add
xchg
dec
inc
cli
fwait
lods
jp
enter
(bad)
mov
rcl
pop
dec
mov
xchg
push
cmc
jmp
sub
inc
rol
call
add
shl
add
ja
mov
cmc
ror
in
or
dec
and
inc
and
jns
loop
fwait
aaa
popa
arpl
add
pop
(bad)
loop
sbb
pop
imul
(bad)
mov
into
out
cs
movs
pop
pop
push
jmp
in
gs
jg
push
sahf
add
xchg
sub
sub
mov
push
aad
or
jb
je
adc
lock
icebp
mul
adc
dec
icebp
or
imul
jbe
jns
cmp
xor
sub
nop
mov
sbb
(bad)
jmp
mov
sub
mov
clc
loop
ss
adc
in
mov
xchg
jbe
sub
push
mov
mov
aas
mov
pop
cmp
int
dec
das
xchg
fldenv
mov
adc
aad
jae
mov
xor
shl
and
fst
mov
sbb
ret
push
popf
jg
fs
scas
sub
mov
aad
cmp
xor
pop
sbb
outs
sbb
or
lods
pop
dec
fld
mov
movs
sahf
mov
inc
leave
mov
inc
(bad)
sbb
es
adc
nop
sub
iret
pop
cmc
add
outs
rcl
xchg
mov
daa
loop
mov
mov
(bad)
xor
addr16
inc
push
jns
or
les
xchg
lea
jge
test
push
mov
fcom
xchg
cmp
jecxz
mov
pusha
daa
sub
ret
rol
dec
add
jmp
jle
mov
std
gs
loope
adc
xchg
data16
pop
cmps
dec
cmp
cmc
adc
popf
loop
imul
pop
fwait
xor
std
dec
fidivr
xchg
(bad)
cmp
adc
lds
or
stos
jb
js
dec
iret
out
xchg
shr
movs
popa
mov
test
mov
inc
and
jb
test
iret
arpl
sbb
add
(bad)
stc
jge
mov
jb
in
sbb
in
dec
xor
or
fwait
add
popa
outs
and
mov
cmp
push
ror
pop
jle
sbb
push
mov
mov
cli
jno
mov
lds
scas
lea
mov
push
inc
adc
add
mov
cmp
repz
xor
mov
mov
inc
inc
imul
xchg
or
sub
mov
inc
cld
mov
adc
dec
add
nop
call
fimul
inc
jg
add
retf
ins
jecxz
cmp
test
popf
add
rcr
xor
out
aas
pop
pop
popf
in
inc
imul
pop
inc
or
pop
adc
gs
dec
inc
ds
jns
xchg
sub
cmp
add
cmp
sti
test
pop
outs
and
cli
inc
and
jmp
mov
or
dec
call
sub
jl
(bad)
cmps
ins
mov
outs
rol
pop
fdiv
sub
push
rol
ja
cmp
rol
jno
scas
mov
push
fcmove
mov
inc
push
add
push
popf
retf
ss
mov
mov
pop
pop
push
mov
dec
push
retf
mov
xchg
inc
fst
in
add
push
fmul
mov
ja
fstp
shl
add
mov
mov
(bad)
hlt
xchg
call
call
sbb
push
fsubr
(bad)
stos
mov
mov
out
sti
sbb
dec
call
jns
mov
in
lock
pop
mov
mov
movs
and
lods
mov
addr16
mov
dec
mov
mov
in
and
retf
xor
dec
scas
or
xchg
mul
fcmovnb
add
mov
add
test
aaa
mov
mov
adc
std
push
push
daa
in
sbb
daa
mov
je
add
or
dec
rcl
push
cwde
inc
push
xchg
sahf
sar
loop
mov
dec
hlt
mov
cld
shl
cld
fnstsw
mov
xchg
mov
fist
shl
(bad)
(bad)
jnp
sub
scas
retf
jl
leave
retf
gs
out
ret
dec
lea
inc
outs
int3
mov
add
call
in
repnz
mov
out
mov
retf
cli
jmp
dec
mov
xchg
cmp
cmps
jnp
and
mov
dec
or
arpl
cli
loope
outs
mov
jge
fldenv
aas
sub
cs
jno
add
rol
call
repz
mov
sub
retf
sub
mov
mov
push
xchg
outs
shl
mov
dec
loopne
add
fnstenv
out
addr16
repz
movs
xor
xchg
mov
mov
push
call
sar
sbb
jmp
das
push
call
jle
ds
dec
dec
das
cmp
stos
(bad)
xchg
fs
xor
add
test
jae
dec
js
int3
leave
icebp
sar
or
sbb
mov
or
push
jo
and
adc
(bad)
test
and
cmps
pop
inc
psraw
cmp
fucomi
popf
jbe
or
or
jp
lods
in
jae
jecxz
add
and
sub
sub
dec
mov
inc
mov
xchg
pop
aad
clc
sbb
es
out
cmps
sbb
sub
pop
jl
fs
push
aam
mov
popf
sub
xor
xchg
mov
ins
movs
mov
pop
sbb
jo
cmp
mov
inc
pop
cmp
jns
add
movs
aam
and
xchg
xchg
lods
pusha
movs
ss
mov
and
mov
xor
sti
ficom
leave
pop
and
cmp
(bad)
lods
cmp
or
xchg
loopne
loop
xchg
add
out
(bad)
push
in
cld
pushf
call
inc
popa
inc
lea
cwde
push
inc
xchg
xchg
xor
popaw
jns
iret
or
adc
jb
sbb
mov
imul
shl
loope
push
pop
sub
repnz
or
cmp
sbb
and
mov
adc
ss
lds
sub
in
mov
pop
ins
loopne
mov
(bad)
fadd
pop
movs
or
pusha
pop
in
in
cwde
jnp
call
add
pop
movs
out
retf
sysexit
inc
add
fimul
adc
fbld
dec
xor
jb
adc
push
ss
mov
jb
xchg
mov
sbb
push
dec
mov
sbb
sbb
lds
call
pop
inc
das
mov
push
and
jge
mov
cmps
mov
es
push
jbe
mov
pop
xchg
push
stc
inc
add
jp
adc
pusha
dec
dec
ret
sub
pop
test
xchg
xchg
push
cli
cdq
push
fisubr
les
ret
pop
pop
pop
xor
sbb
xor
xchg
inc
cmp
(bad)
pop
inc
mov
fstp
addr16
lea
mov
vphaddbw
cmp
jb
daa
sbb
aam
push
(bad)
aam
and
cmp
xchg
out
sbb
jae
or
stos
mov
call
dec
sbb
scas
in
adc
mov
fisttp
and
out
lahf
sbb
sti
cmp
pop
mov
inc
sbb
or
xor
sub
lahf
or
imul
pop
push
sub
jge
test
loop
mov
add
jne
aam
push
xchg
adc
mov
xchg
push
mov
(bad)
push
pop
and
and
leave
les
ror
arpl
mov
xor
mov
in
mov
pusha
jae
sahf
(bad)
mov
int3
cmp
dec
clc
add
fwait
mov
sahf
scas
add
lock
cmp
mov
jnp
movs
sbb
dec
imul
pop
sub
icebp
pop
mov
jb
jg
pop
rol
(bad)
adc
arpl
cmp
dec
repz
mov
lea
jb
mov
mov
adc
in
sub
rol
cmp
pushf
mov
fidiv
mov
std
xchg
outs
sub
pop
cwde
out
adc
sbb
jno
adc
sub
inc
or
and
add
out
retf
cmc
pop
jmp
adc
pop
add
aam
xchg
or
xchg
or
sbb
loopne
mov
cdq
pop
add
shl
retf
js
repz
add
pusha
dec
repnz
and
ss
push
les
adc
loop
push
loopne
std
sbb
cmps
sub
mov
lods
cmp
fnsave
jecxz
mov
xchg
ret
cmps
in
jl
mov
cmp
lahf
ja
not
(bad)
call
(bad)
push
pop
sbb
xor
pop
push
int3
pop
cwde
inc
mov
or
jmp
mov
xor
jmp
imul
fisub
dec
aam
ret
xor
dec
xchg
sub
dec
xchg
jl
sub
or
jp
adc
mov
add
data16
mov
pop
adc
xchg
cmp
ja
adc
pop
push
xchg
pop
xchg
push
dec
inc
mov
or
xor
pushf
(bad)
dec
stos
jmp
rol
retf
pop
inc
in
xchg
fldenv
mov
fsubrp
sub
inc
aad
inc
or
rcr
stos
or
je
mov
fistp
ins
int
rcl
inc
pop
(bad)
ins
xor
addr16
imul
xchg
cmovle
xchg
fidiv
mov
dec
adc
(bad)
dec
push
sbb
mov
in
mov
jl
dec
sub
mov
jns
leave
adc
pop
ror
adc
loop
enter
inc
stc
stc
inc
nop
sti
xchg
(bad)
sbb
cmp
aaa
push
pushf
pop
scas
mov
push
pop
mov
test
xchg
mov
cmc
xchg
inc
fsub
inc
inc
(bad)
jns
jecxz
and
test
pusha
jns
call
int
out
and
xchg
aam
mov
xor
inc
pop
mul
mov
jmp
into
mul
dec
jmp
dec
gs
jb
ds
or
adc
out
nop
push
(bad)
repz
leave
xchg
ror
fyl2xp1
mov
retf
and
xchg
push
mov
xor
ins
mov
test
cdq
test
rcr
pop
mov
es
cmps
cmp
inc
in
(bad)
aad
cmp
lods
sar
sub
frstor
mov
gs
cmp
cmc
and
add
mov
dec
xor
xchg
stc
mov
in
mov
adc
and
jmp
and
xor
xor
mov
ins
in
outs
pop
jge
pop
rcr
cld
scas
xor
outs
test
enter
xor
in
daa
pop
add
mov
and
retf
nop
sub
stos
ds
fs
sar
repz
clc
inc
sbb
push
call
test
dec
mov
and
xor
adc
lds
pop
int
(bad)
cmc
(bad)
xchg
cmp
dec
dec
pop
inc
adc
sub
ret
pop
cmps
adc
loop
or
shl
or
pop
pop
fxch
out
lea
xchg
and
test
mov
dec
add
sti
xchg
mov
jo
hlt
imul
cwde
sar
mov
repnz
xchg
pop
rol
mov
les
in
cwde
sub
fld
test
outs
pop
sar
in
push
jae
push
fldenv
test
ror
pop
inc
ret
clc
popa
dec
bound
add
in
jl
fld
jp
xchg
idiv
pop
lods
xlat
mov
cmp
push
(bad)
jg
jecxz
psubq
loopne
sub
mov
test
gs
shl
mov
xchg
fs
jecxz
sti
or
jae
xor
idiv
loope
and
jl
add
movs
lahf
out
xchg
js
lock
fild
mov
in
ja
push
mov
movs
fst
stos
mov
xor
or
dec
aad
call
fnsave
out
daa
sahf
cmps
daa
pop
mov
pop
idiv
pop
fmul
push
or
dec
jno
sub
daa
out
add
cmp
stos
sub
xchg
mov
fwait
stos
ret
push
add
lods
jne
test
(bad)
ins
leave
jae
pop
mov
add
dec
cmp
lods
sub
loope
mov
cmp
cmps
or
ins
jmp
lea
outs
pop
nop
sbb
nop
mov
jp
xchg
ins
mov
sahf
cmp
xor
push
int3
adc
mov
jg
sbb
mov
inc
data16
cmp
jno
push
mov
add
out
outs
jmp
pop
hlt
imul
push
push
int
and
addr16
sub
push
add
or
or
or
push
inc
jns
nop
inc
es
loop
or
fs
outs
rep
xor
sbb
mov
in
inc
dec
out
dec
das
xchg
cmp
mov
pop
mov
push
into
jnp
cmp
jge
and
arpl
mov
mov
lds
cmp
mov
div
popf
pop
(bad)
inc
jmp
mov
movs
mov
jb
xor
and
call
dec
inc
addr16
ret
mov
or
out
ror
bound
nop
fstp
int
mov
shl
xchg
mov
in
inc
pop
and
dec
loopne
push
xchg
(bad)
mov
push
mov
sub
mov
cmc
adc
xchg
ss
outs
xchg
sbb
data16
adc
add
mov
xor
mov
jbe
mov
cmp
in
push
mov
cmps
and
lods
add
cs
(bad)
pop
sar
test
pop
pop
pop
mov
pushf
(bad)
jns
push
xchg
cli
jp
ins
mov
xchg
push
cmp
leave
popa
enter
xchg
shr
or
aaa
in
pusha
and
jne
jle
leave
jae
pop
fstp
jecxz
rcr
mov
div
cmps
jmp
outs
test
iret
lods
sti
xor
test
hlt
mov
test
(bad)
aas
or
push
lock
jmp
call
mov
or
adc
and
fstp
jnp
enter
adc
sbb
imul
nop
mov
daa
arpl
sbb
add
adc
or
xchg
push
or
xchg
inc
xchg
mov
test
retf
pop
(bad)
test
pop
sbb
adc
daa
sub
push
stos
fcom
xor
adc
sub
and
test
aam
lods
or
mov
stos
scas
xor
fimul
dec
mov
(bad)
mov
lea
ficom
or
sbb
mov
jge
sub
push
or
jnp
dec
xor
(bad)
stos
jp
fnstsw
cmp
sahf
and
inc
repz
jecxz
repnz
push
fisubr
and
or
ss
jbe
imul
je
push
(bad)
fwait
cmp
(bad)
fincstp
pop
inc
cmc
(bad)
int3
ins
dec
aaa
xor
xchg
push
add
cmp
loopne
pop
xor
mov
outs
mov
lahf
addr16
ret
ins
sar
ret
sbb
adc
in
or
popf
gs
push
test
and
xor
(bad)
cmp
push
aam
ins
aam
jecxz
dec
inc
(bad)
and
cmp
(bad)
mov
pop
xor
movs
add
mov
add
outs
fstp
arpl
cmps
cmp
inc
pop
adc
xchg
in
gs
dec
xor
xor
fidivr
call
xchg
pmaxsw
and
mov
retf
mov
mov
cmps
ins
dec
mov
sbb
push
pop
cwde
loope
mov
jo
xchg
ret
addr16
jle
mov
test
mov
jae
and
cld
sbb
pop
(bad)
sbb
dec
push
jmp
retf
scas
pop
pushf
mov
shl
fldenv
enter
dec
mov
mov
shl
pushf
jl
push
das
xchg
adc
pusha
sub
test
xchg
imul
jmp
std
jecxz
je
call
div
ds
stos
hlt
adc
xor
mov
dec
add
sar
mov
lahf
push
push
mul
sub
xchg
xchg
cli
call
or
cld
inc
sub
xor
xchg
sbb
jl
jno
outs
pop
cdq
inc
xchg
cmc
(bad)
out
fs
shr
pop
bound
jge
sub
inc
sbb
xchg
jno
cli
repz
outs
lea
jp
sti
test
adc
jge
arpl
or
mov
sub
gs
loopne
mov
sub
lds
scas
or
retf
sbb
cwde
retf
xor
dec
mov
js
mov
sub
inc
sbb
jp
mov
bound
push
adc
retf
(bad)
jb
xlat
fbstp
push
pop
or
adc
imul
add
cmp
scas
jle
pop
cmp
sbb
inc
fisttp
data16
pop
imul
dec
jns
pop
push
popa
mov
mov
loope
out
adc
enter
retf
jecxz
sti
sub
jno
sbb
inc
lods
cmp
xchg
es
dec
push
rcr
clc
inc
jp
ins
into
sub
xchg
test
sbb
adc
jp
mov
movs
stos
pop
loop
sub
cmc
imul
cmp
adc
xchg
sbb
(bad)
daa
pop
mov
xchg
add
ins
xchg
test
and
ret
repnz
xor
dec
mov
stc
test
jmp
repz
ins
xchg
sub
push
rcr
xchg
push
dec
mov
fmul
(bad)
mov
dec
hlt
sbb
es
push
cld
dec
sti
aaa
fidivr
push
and
leave
sub
push
and
leave
xchg
lds
in
mov
repz
clc
pop
jecxz
bound
out
jg
mov
inc
nop
xchg
rol
(bad)
aam
mov
ja
and
xor
jb
jbe
push
nop
sbb
jg
push
pop
hlt
xchg
pop
xchg
mov
mov
mov
adc
lods
mov
cmp
es
add
mov
xchg
sahf
jnp
lods
dec
push
inc
loope
jo
pop
adc
mov
dec
scas
(bad)
(bad)
div
sbb
mov
cmp
jmp
add
jo
add
and
pop
clc
loope
lods
lods
adc
pop
inc
xor
loopne
(bad)
jmp
stc
jnp
popa
xor
pop
xor
sti
push
inc
adc
adc
push
aas
in
jns
push
movs
mov
arpl
mov
(bad)
hlt
loop
sub
mov
mov
jge
(bad)
movs
xchg
mov
ja
push
sbb
ins
data16
add
pop
fdivr
rcl
lock
(bad)
and
and
sbb
retf
sub
jmp
xchg
jmp
test
and
mov
mov
bound
jmp
or
addr16
in
call
pop
movs
cmp
fdiv
mov
dec
jbe
aas
inc
mov
cmp
stos
mov
cmpxchg
pusha
adc
lahf
mov
or
out
fist
popa
mov
loope
ss
retf
cmp
push
mov
mov
call
inc
movs
push
push
cmp
xor
pop
and
cmp
stos
push
rol
mov
cdq
jecxz
xchg
push
and
arpl
or
call
hlt
mov
xchg
mov
imul
dec
fld
adc
cs
bound
sub
jb
pop
dec
push
cmp
sub
pop
adc
js
mov
jae
cld
mov
popf
pop
stos
mov
out
jne
pop
loope
stos
call
adc
retf
pop
inc
(bad)
adc
shl
inc
or
leave
mov
mov
mov
xchg
xchg
sub
outs
cmp
repz
into
fiadd
cmc
and
xor
jecxz
mov
adc
fstp
and
fwait
arpl
repnz
mul
or
enter
xchg
xchg
rol
push
inc
les
(bad)
and
test
pop
(bad)
in
loopne
(bad)
mov
mov
xchg
in
sub
xchg
pop
mov
sub
pop
adc
or
pop
loope
(bad)
data16
call
jecxz
(bad)
xor
lods
sbb
fwait
in
pop
sub
or
adc
sbb
ror
pop
es
mov
cmp
mov
xchg
loop
stos
push
imul
test
add
mov
jg
pop
mov
dec
rcr
dec
adc
mov
(bad)
enter
mov
xchg
lods
call
or
int3
mov
inc
mov
je
xlat
mov
adc
jbe
dec
imul
add
gs
push
sbb
add
lahf
jg
test
sbb
and
ss
loopne
add
lahf
imul
or
jge
dec
cmp
jb
sub
frstor
jb
add
push
lods
cmp
push
inc
je
push
es
fwait
push
mov
mov
cmp
fwait
out
adc
enter
pop
ds
imul
mov
pushf
ss
aam
cld
xchg
push
sub
xchg
mov
push
shl
push
lods
or
outs
sub
sbb
div
adc
icebp
inc
loope
adc
ret
pushf
jo
aaa
nop
mov
mov
adc
scas
loopne
lahf
sub
stc
js
dec
push
fidiv
sbb
jmp
psubb
aad
scas
pop
cmp
js
loope
sbb
out
add
push
and
dec
mul
pop
loop
sbb
and
or
mov
mov
xor
test
add
xchg
shl
pop
(bad)
retf
inc
push
ja
pop
mov
mov
or
cmc
cdq
push
aad
mov
repz
ja
lods
loopne
aam
add
loopne
mov
push
sbb
loope
adc
inc
mov
div
mov
sub
leave
lods
aam
xor
fsubr
cmp
adc
jl
inc
jnp
test
aad
sbb
stos
mov
test
xor
ins
jmp
arpl
(bad)
mov
rcl
xchg
jo
cdq
sub
add
loop
or
int
stc
ins
sti
dec
xchg
test
lahf
nop
test
mov
daa
cmps
cmp
test
das
xor
sti
add
or
sbb
std
ror
pop
push
mov
das
int3
xchg
in
imul
inc
test
out
and
mov
mov
js
add
cmp
jle
mov
fld
test
retf
(bad)
sbb
sti
ins
dec
jne
mov
pusha
cmp
adc
xor
retf
adc
inc
repnz
xchg
dec
fadd
push
in
sbb
call
mov
cmp
dec
pop
test
js
mov
push
popa
popa
fs
popa
not
dec
add
lea
sub
xchg
jbe
jbe
pop
mov
data16
hlt
or
fsubr
nop
mov
lea
push
test
fisttp
jg
push
push
fdivrp
mov
push
sbb
vmovss
rcl
sbb
mov
or
test
inc
add
jp
and
fucomi
ins
jns
repz
mov
add
sti
and
inc
cmp
mov
jl
sahf
movs
sbb
data16
mov
enter
mov
mov
rep
jl
xchg
mov
mov
or
add
repnz
or
pop
push
mov
imul
and
xchg
out
pop
and
push
rol
ins
jns
cvtpi2ps
cmps
dec
lods
psadbw
std
mov
pop
xor
sub
sub
cmp
xchg
mov
cld
js
call
add
sub
stos
in
inc
out
sbb
ficomp
jno
pop
inc
jge
stos
push
mov
fs
inc
add
sbb
movs
imul
loop
into
cld
cmp
ficomp
lock
adc
cmp
mov
dec
outs
sub
repz
add
mul
mov
int3
jecxz
jbe
xchg
int
clc
cmp
inc
hlt
pusha
call
pusha
test
dec
cmp
add
int
pop
rol
dec
jno
jge
(bad)
inc
js
dec
and
inc
jg
push
adc
mov
lahf
jae
add
sub
sub
enter
and
(bad)
mov
sub
adc
ins
mov
jae
adc
mov
jge
push
add
cmp
cmps
pop
and
jb
js
cmps
mov
adc
bswap
cmps
adc
xchg
in
mov
mov
sub
adc
mov
test
pop
inc
dec
mov
ja
in
push
mov
lahf
pop
cmp
xchg
cmp
or
adc
push
in
mov
mov
push
stc
mov
sub
xchg
sti
lods
add
or
push
or
mov
aad
(bad)
mov
sbb
adc
mov
ror
(bad)
mov
scas
inc
mov
mov
mov
pushf
out
cmp
(bad)
cmp
(bad)
mov
inc
dec
ror
sar
push
jae
adc
es
mov
xor
movs
cmp
fldenv
push
in
sbb
scas
in
sbb
dec
xchg
jl
enter
lock
mov
cdq
jmp
mov
inc
cmp
movs
adc
or
scas
cmps
lods
sub
pop
cmp
inc
and
icebp
test
mov
mov
mov
movs
jmp
xchg
fld
test
mov
mov
mov
das
int3
mov
in
cmc
cmp
pop
inc
leave
retf
fistp
xchg
inc
jo
rol
retf
dec
mov
aad
pop
jmp
js
in
cs
in
dec
inc
(bad)
loope
stos
or
pop
gs
fstp
fst
and
jae
dec
mov
add
(bad)
aam
clc
loopne
sbb
sub
pop
xor
and
test
fdiv
push
repz
movs
adc
ror
sub
(bad)
sub
xchg
scas
daa
jp
aam
jae
xor
lahf
sbb
xchg
mov
jle
jbe
add
sbb
(bad)
daa
rol
sub
jl
sub
sar
in
cdq
std
mov
xchg
jb
xor
stos
jmp
cmp
push
ja
popf
in
loop
fcomp
mov
sti
mov
test
mov
mov
icebp
les
push
pop
push
mov
loope
mov
cmp
call
xor
sub
mov
or
rcl
and
in
sub
cmp
in
or
cmp
push
mov
aaa
mov
xor
push
xlat
jmp
xchg
fcmovu
pushf
cwde
mov
std
test
xor
int3
stos
(bad)
sbb
mov
psadbw
cmps
inc
xchg
inc
sbb
push
jne
int3
push
xor
loop
add
jmp
cmp
sbb
jnp
fdivr
fistp
mov
loope
xor
or
ja
cmp
sub
int3
pop
or
mov
sahf
fisttp
repnz
pop
scas
push
rcr
cmp
fs
dec
jno
and
dec
lock
je
mov
mov
mov
mov
mov
mov
repnz
push
and
inc
nop
add
mov
jae
cld
retf
jp
cmc
ja
in
ret
push
sub
push
xchg
call
ret
or
mov
cmps
pop
add
das
mov
push
out
mov
rcl
in
ja
xchg
bound
add
mov
cmps
mov
shr
push
sbb
jno
imul
sub
adc
inc
push
sub
hlt
adc
mov
and
or
pop
lahf
mov
inc
xor
loop
jns
cli
aad
cwde
mov
sub
add
das
jl
cdq
scas
mov
rol
into
and
inc
pop
and
mov
je
adc
xchg
ds
pusha
pop
ja
jle
xchg
