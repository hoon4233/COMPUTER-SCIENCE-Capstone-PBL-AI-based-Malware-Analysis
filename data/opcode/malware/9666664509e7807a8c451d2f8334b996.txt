push
mov
sub
push
push
push
push
push
push
push
push
push
call
mov
push
mov
mov
call
add
mov
call
push
push
mov
call
push
mov
call
add
push
push
mov
call
mov
call
test
je
push
call
push
call
mov
mov
cmp
jne
cmp
jae
mov
cdq
xor
idiv
mov
call
push
call
mov
add
xor
mov
xor
xor
mov
inc
cmp
jb
mov
xor
xor
sub
je
cmp
jne
xor
jmp
inc
movzx
movzx
xor
xor
inc
cmp
jl
xor
mov
inc
cmp
jb
mov
xor
push
mov
call
add
mov
call
test
jne
push
call
mov
lea
push
push
push
push
call
mov
xor
sub
mov
je
cmp
jne
xor
jmp
inc
movzx
mov
add
movzx
xor
xor
inc
cmp
jl
xor
inc
mov
cmp
jb
call
push
call
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
push
mov
cmp
jbe
push
lea
mov
imul
xor
div
sub
jne
pop
mov
sub
xor
div
mov
pop
dec
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
fidivr
mov
jnp
mov
push
mov
loope
mov
repnz
or
mov
iret
je
addr16
(bad)
aas
dec
std
sbb
(bad)
add
sub
push
ret
pop
popf
push
(bad)
push
mov
jbe
dec
jmp
mov
stos
nop
pop
sar
cmp
fwait
jnp
cmps
call
fcomp
xor
into
push
scas
mov
mov
rcl
mov
mov
fs
push
or
in
test
cmp
clc
es
gs
popa
mov
mov
pushf
cli
xor
and
xchg
jp
mov
push
mov
mov
push
and
ret
(bad)
mov
or
ss
shl
inc
push
jl
jo
or
cmps
push
dec
out
test
out
push
int
adc
mov
fadd
mov
(bad)
leave
dec
aas
pop
and
sub
retf
or
push
out
ret
mov
bound
mov
nop
xlat
inc
les
xchg
aaa
and
frstor
inc
fsub
add
popf
cmp
inc
repz
loop
gs
xchg
pop
les
js
sub
cmp
mov
lods
sbb
or
inc
test
cmc
(bad)
shl
dec
dec
pop
pop
jo
iret
aam
clc
mov
inc
sbb
pusha
retf
sbb
xor
pop
xlat
mov
shl
mov
stos
pop
cdq
add
(bad)
cmp
clc
xchg
std
mov
cmp
(bad)
jne
aam
or
cld
jno
add
inc
mov
lea
jnp
mov
dec
in
mov
mov
pusha
xchg
stc
jno
dec
push
das
mov
dec
shl
xor
xor
ror
loop
je
pop
pop
xor
sbb
sbb
xchg
jp
push
in
ins
rcr
shl
cmp
int
fstp
cmps
cmp
mov
sub
mov
leave
inc
cmps
jge
mov
mov
lods
shr
inc
xchg
test
repz
push
jecxz
inc
sbb
call
cmp
ret
(bad)
jl
cwde
dec
pop
imul
xchg
ins
mov
inc
cmc
jle
jmp
or
js
int3
or
inc
pop
sub
mov
dec
pop
out
sti
js
pop
cmps
pop
mov
inc
rcl
lock
pop
xchg
cmp
xchg
pusha
sar
repz
add
pusha
pop
ja
jae
push
inc
mov
fld
fnstsw
fnstcw
outs
pop
add
stc
xchg
ins
sti
mov
push
inc
cli
sbb
jnp
push
std
(bad)
cmc
cmp
int3
cli
mov
cmc
loope
jle
mov
dec
jg
adc
cmp
jnp
mov
and
inc
cmp
dec
or
in
retf
ins
xor
rcr
mov
mov
mov
lods
sbb
xor
adc
loopne
arpl
retf
push
xchg
dec
push
xchg
(bad)
lods
movs
out
mov
ss
imul
mov
stc
sub
mov
or
mov
sbb
fwait
mov
xor
cmp
jg
mov
lds
push
cli
add
sbb
sub
jl
push
test
or
push
mov
xchg
pop
sbb
bound
fdiv
xor
mov
pushf
mov
jnp
das
mov
mov
in
mov
jmp
pop
int3
fbstp
sbb
push
mov
mov
add
ja
jge
test
and
(bad)
inc
or
dec
loop
add
lahf
dec
int3
in
add
(bad)
scas
test
adc
mov
out
(bad)
in
test
ins
repz
(bad)
fldcw
sbb
fwait
dec
scas
mov
sbb
mov
stos
or
xchg
call
xchg
fld
loopne
mov
arpl
cmps
icebp
inc
xor
pop
xlat
mov
mov
mov
popa
xor
jo
mov
mov
jmp
mov
jp
cmps
pop
clc
aaa
mov
scas
or
push
aad
jno
js
dec
push
repnz
int
mov
jge
pop
lahf
stos
cwde
mov
jge
sahf
call
sti
mov
test
xchg
and
(bad)
cld
iret
and
aam
adc
xlat
cmp
jmp
xor
xor
pop
dec
jae
fcomp
test
sub
addr16
mov
mov
imul
inc
test
jbe
je
push
push
mov
in
push
push
(bad)
pop
and
jmp
and
out
lods
mov
mov
push
repnz
mov
ret
cs
jb
push
dec
jecxz
jmp
cwde
adc
push
xchg
int
sub
aad
push
jb
mov
(bad)
sbb
icebp
int
xchg
xchg
ret
mov
adc
cmc
iret
mov
(bad)
cwde
rcl
jno
xor
je
ror
add
aas
xchg
xchg
mov
add
jno
inc
cmps
cmc
inc
xlat
dec
(bad)
int3
fcmovu
jge
out
push
cli
ins
and
dec
mov
jecxz
scas
mov
xchg
sub
in
icebp
outs
push
clc
add
call
imul
in
lds
stos
xchg
or
jecxz
das
aam
jbe
daa
js
jnp
mov
fisubr
imul
pop
xor
xchg
pop
sbb
mov
shl
enter
cmp
test
xor
outs
add
xor
scas
inc
and
xchg
xor
and
lahf
je
pop
jnp
retf
test
add
mov
(bad)
adc
(bad)
enter
ds
(bad)
dec
sbb
lea
push
into
pop
iret
fmul
jge
and
lahf
jmp
stos
xor
inc
je
mov
mov
sub
sbb
cmp
popa
mov
adc
push
inc
clc
int
pop
es
xor
dec
in
mov
out
xor
jmp
sub
sub
vshufpd
fsubr
mov
push
adc
add
xchg
or
mov
dec
push
outs
or
out
mov
or
and
outs
lods
nop
adc
data16
data16
push
(bad)
push
(bad)
fnstsw
xor
rcr
lock
outs
sbb
mov
ss
lock
or
in
mov
sti
add
pop
fisubr
test
bound
movs
jg
add
dec
iret
xchg
inc
imul
cld
and
test
mov
inc
mov
test
retf
push
mov
ds
mov
or
sbb
mov
test
dec
push
iret
mov
das
sbb
test
ja
jl
mov
and
cmps
mov
(bad)
xchg
adc
push
leave
push
rcl
push
sti
clc
(bad)
in
push
ret
iret
jmp
push
sub
push
push
test
push
and
dec
add
scas
js
dec
scas
std
aas
aaa
scas
push
lods
loop
inc
gs
mov
dec
cmp
dec
stos
daa
mov
add
jmp
in
sbb
out
int
or
movs
bound
pop
mov
nop
ins
sbb
cwde
cmp
scas
out
or
mov
ret
dec
jp
jge
sbb
(bad)
mov
mov
popf
sahf
arpl
movs
or
sub
mov
cmc
outs
fld
fcomp
repz
mov
or
enter
adc
adc
mov
(bad)
and
xchg
xor
mov
push
pop
and
pop
cmp
cmp
sub
mov
rcl
adc
and
fcom
jecxz
stos
stc
das
cmc
js
pushf
jo
inc
inc
(bad)
in
cmp
lds
inc
adc
fmul
pop
jecxz
loopne
pop
add
dec
lock
add
out
push
cwde
sti
sub
clc
push
push
fmul
mov
xor
retf
or
imul
sub
push
icebp
je
mov
mov
inc
fadd
leave
std
or
sub
fcomi
cmp
jle
add
in
test
jle
fwait
mov
add
adc
dec
lock
xchg
sbb
sbb
sets
mov
fild
mov
mov
and
out
in
lods
pop
jecxz
xchg
cs
std
repz
and
pop
outs
xchg
pop
mov
fiadd
frstor
add
mov
jmp
cmps
inc
nop
in
call
mov
imul
mov
dec
int3
les
push
lahf
mov
jbe
xchg
sbb
dec
lea
dec
lock
xchg
sbb
sbb
sets
mov
int
daa
xchg
xchg
popf
(bad)
pop
xchg
outs
(bad)
push
lock
jbe
mov
test
movs
pushf
mov
pop
je
loope
adc
or
lock
ins
inc
sub
cmps
je
in
out
shr
lahf
cwde
mov
add
adc
dec
lock
xchg
sbb
outs
add
or
jl
mov
fs
fwait
push
iret
lds
test
xor
daa
mov
mov
daa
mov
sti
test
push
lock
xor
jmp
xchg
(bad)
repz
xchg
push
int
test
stos
push
mov
xchg
push
mov
pop
arpl
jns
or
(bad)
xor
push
cmps
cmps
scas
ins
(bad)
xlat
xor
mov
push
lods
sar
cwde
and
and
dec
or
push
dec
dec
lods
add
push
mov
xchg
imul
arpl
retf
jle
dec
gs
movs
pop
xchg
xchg
mov
sbb
xchg
xor
cmps
or
pop
lds
mov
sbb
mov
jnp
push
(bad)
stos
in
and
arpl
jne
dec
dec
fs
imul
sti
(bad)
push
xor
(bad)
movs
jbe
cwde
and
mov
movs
ds
pop
dec
ud0
loop
mov
mov
push
cmp
popa
xor
je
xchg
adc
inc
mov
fcomip
push
sub
jg
or
jbe
in
or
xchg
inc
imul
dec
or
xchg
pop
or
mov
daa
or
xchg
push
or
popa
mov
sti
clc
xor
idiv
xor
mov
stos
jnp
dec
shrd
and
mov
in
mov
xchg
xchg
xor
std
in
or
movs
fld
out
add
jo
rcl
call
iret
mov
movs
pop
xchg
xchg
mov
sar
add
dec
jmp
lahf
fsubr
or
(bad)
stc
mov
movs
pop
xchg
je
gs
ret
je
xchg
dec
lock
lods
cli
dec
xchg
popa
mov
jmp
xchg
push
xchg
dec
and
push
jns
push
mov
mov
adc
xor
mov
je
dec
fs
paddd
mov
je
sbb
cmc
in
push
rcr
mov
xchg
je
dec
fs
mov
push
push
fldenv
stos
addr16
pushf
jmp
fwait
pop
fstp
out
add
mov
cmps
loope
inc
push
dec
test
fs
lods
add
aam
je
shl
sbb
test
loope
retf
xchg
or
bnd
push
rcr
lds
mov
cwde
je
shl
test
push
sbb
(bad)
adc
call
out
pushf
push
xor
scas
dec
test
or
fimul
in
ins
cmc
popf
jnp
mov
shr
ja
push
ja
ffreep
aas
lahf
xchg
or
add
ins
adc
add
fistp
add
add
add
int3
int3
int3
int3
int3
int3
mov
sub
test
jne
xor
add
ret
mov
cmp
jne
mov
add
cmp
jne
mov
mov
add
push
add
push
push
mov
mov
mov
mov
add
add
xor
mov
mov
mov
test
jbe
mov
movzx
mov
mov
jmp
jmp
lea
mov
mov
mov
lea
movzx
sub
jne
mov
sub
lea
test
je
mov
movzx
inc
movzx
sub
je
test
jl
jg
test
je
inc
cmp
jb
pop
pop
xor
pop
add
ret
mov
movzx
mov
mov
pop
pop
add
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
add
add
mov
mov
ret
push
mov
xor
add
add
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
xor
add
add
mov
mov
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
push
push
push
xor
xor
push
cmp
jbe
mov
cmp
jne
xor
jmp
inc
mov
movzx
movzx
xor
lea
xor
inc
cmp
jl
xor
mov
inc
cmp
jb
cmp
je
call
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
xor
div
test
je
sub
add
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
test
je
lea
mov
dec
mov
inc
inc
test
jne
mov
pop
pop
ret
push
mov
sub
mov
mov
mov
add
mov
mov
cmp
je
mov
mov
mov
mov
add
mov
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
movzx
push
push
test
je
movzx
mov
sub
cmp
jne
mov
test
je
movzx
test
je
cmp
jne
add
cmp
jne
cmp
je
movzx
add
add
test
jne
xor
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
