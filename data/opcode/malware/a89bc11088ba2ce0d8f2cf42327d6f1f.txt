shr
into
iret
fcmovbe
xchg
xor
hlt
pop
dec
fisttp
fldenv
mov
mov
inc
hlt
add
xchg
imul
push
stos
or
scas
jge
sbb
das
push
loop
dec
add
or
adc
mov
push
das
pop
inc
pop
cld
pop
retf
or
jmp
cmp
popf
xchg
inc
retf
sbb
sbb
lea
in
loope
xchg
mov
retf
iret
inc
push
add
and
ret
popf
fmul
scas
das
adc
je
dec
adc
outs
push
call
add
jbe
jne
daa
neg
(bad)
adc
mov
mov
je
jecxz
cmp
xchg
pushf
push
popf
ror
leave
test
pop
popf
rcr
cs
cmp
mov
mov
inc
sub
or
xor
scas
mov
in
and
mov
int3
jmp
popf
(bad)
and
dec
ss
push
sub
jns
movs
movs
inc
es
(bad)
mov
bound
pop
inc
ss
mov
pop
mov
or
jbe
stos
xor
call
mov
sbb
xor
imul
pop
movs
xor
int
(bad)
jge
cli
pusha
icebp
call
cmp
add
jecxz
fwait
scas
lods
fnstenv
mov
jp
add
retf
loopne
shr
movs
ins
push
(bad)
std
mov
xor
scas
push
mov
lods
shl
jnp
(bad)
fistp
push
popf
int3
and
dec
sti
and
mov
push
fwait
push
int
inc
out
sub
and
(bad)
ins
fs
adc
and
not
popf
dec
inc
sahf
adc
adc
(bad)
(bad)
pop
pop
mov
inc
jmp
xor
push
mov
hlt
(bad)
jge
xchg
dec
pop
cs
sub
jmp
popf
(bad)
and
dec
push
dec
sbb
cli
xlat
into
fisub
dec
cmp
loop
sbb
adc
sub
push
enter
adc
mov
std
cmps
pop
xchg
imul
lea
cmp
or
lahf
les
cmps
mov
cmp
les
jp
daa
(bad)
mov
rol
jl
call
xor
or
and
(bad)
ds
push
xchg
jle
and
lods
sub
pop
shl
xor
pushf
cld
dec
push
xchg
add
xchg
ret
loope
lea
jmp
or
jmp
inc
push
pop
push
lahf
add
in
jnp
mov
sub
shl
lea
jle
out
mov
mov
out
repnz
jno
(bad)
mov
jle
sub
push
xor
mov
jo
in
cmps
and
inc
ja
pop
ficom
jae
push
dec
pop
lods
(bad)
sub
mov
sub
(bad)
jo
ja
dec
mov
(bad)
es
ja
jmp
add
mov
jo
(bad)
mov
pop
int
pusha
cdq
out
cmp
sbb
int3
repz
mov
jne
clc
push
aaa
sti
mov
lods
push
jle
mov
mov
out
cmps
push
sub
pushf
adc
mov
xchg
or
shr
jae
dec
push
and
fld
ud0
rcl
mov
repnz
cmp
outs
data16
test
hlt
jns
pusha
push
jmp
jp
jge
enter
adc
iret
xor
popa
sbb
ffreep
dec
mov
out
xchg
sti
mov
scas
and
ret
stos
push
aaa
daa
jb
popf
addr16
popf
sub
inc
clc
mov
pushf
fwait
ja
add
jmp
sbb
push
cmp
aam
and
iret
(bad)
fwait
or
inc
pop
mov
mov
and
fwait
xor
(bad)
(bad)
(bad)
push
stc
dec
clc
mov
leave
movs
inc
adc
je
sub
and
ins
into
stos
rol
mov
mov
jecxz
repz
jb
iret
push
pop
cs
aas
fdiv
xor
or
push
ins
mov
icebp
pop
xchg
paddusb
xor
sbb
out
or
enter
mov
inc
or
leave
jbe
daa
rcr
pop
movs
sahf
loope
sub
adc
(bad)
xlat
cli
scas
mov
daa
adc
sub
mov
mov
sub
out
push
xchg
lods
xor
mov
cmp
ds
in
mov
pop
outs
sidtd
sti
cli
dec
sti
cmp
cmp
mov
inc
retf
pand
mov
jbe
inc
cmp
and
xchg
(bad)
jno
outs
cdq
and
push
(bad)
pop
push
pop
xchg
push
idiv
(bad)
pusha
adc
sub
adc
inc
cmps
push
scas
fild
xchg
pusha
in
mov
xor
xor
xor
mul
mov
sbb
aas
jmp
pop
add
les
and
int
cmc
pop
mov
cdq
sbb
leave
scas
ins
jp
inc
push
call
dec
mov
imul
mov
inc
dec
out
jno
in
sub
cmp
sub
call
cmc
xchg
and
pop
sub
push
pop
pop
and
push
fs
emms
mov
ret
call
test
stos
adc
sbb
sub
stos
rcr
fidivr
outs
inc
push
pop
pop
adc
xchg
and
rol
in
stc
push
in
fnsave
ss
push
rol
mov
cli
scas
fimul
xchg
sub
mov
xchg
pusha
or
jmp
pop
sti
jo
in
mov
mov
clc
pop
push
jns
sub
test
icebp
cmp
and
cld
loopne
out
add
adc
jecxz
fidiv
retf
pusha
movd
mov
fisubr
aam
scas
repnz
enter
jns
add
push
jmp
or
cdq
aam
cmp
into
and
adc
adc
dec
sub
cwde
inc
push
cs
addr16
sub
dec
xchg
lods
xchg
mov
in
jne
sub
stc
xor
mov
hlt
out
pop
movs
inc
xchg
mov
xor
mov
mov
aad
vmovlpd
jle
out
xchg
add
cmp
data16
in
jmp
mov
push
data16
add
addr16
movs
dec
in
fisttp
addr16
loopne
pusha
sub
xlat
jl
inc
(bad)
mov
les
nop
cmc
and
jg
and
movs
sub
push
stc
cmp
cmps
cmp
stos
shl
mov
call
push
and
lahf
push
loop
mov
or
out
loope
jmp
jmp
pop
out
loopne
dec
cmp
push
mov
retf
xor
shl
popf
pop
cmp
jmp
inc
popf
icebp
fimul
mov
enter
jno
sub
xchg
int3
push
dec
adc
(bad)
cmc
ret
adc
pusha
cmp
stc
shl
xor
mov
add
imul
or
add
mul
loope
and
sub
mov
jg
mov
jns
mov
dec
(bad)
mov
popa
sti
lds
not
fsub
(bad)
jmp
push
scas
fnstcw
cwde
(bad)
and
xchg
mov
sub
jb
idiv
adc
mov
fidivr
adc
imul
lods
add
inc
inc
jno
mov
jns
dec
mov
mov
jmp
iret
mov
mov
or
in
or
or
imul
push
mov
in
xor
popa
das
inc
mov
aam
or
pop
aad
cmp
outs
cmp
add
mov
mov
in
pop
or
inc
jno
xchg
fadd
fidiv
dec
repnz
movs
cmps
sbb
push
inc
outs
sub
jno
repz
mov
ins
add
xchg
xor
or
mov
ror
dec
pop
fild
out
or
pop
add
mov
push
pop
and
pop
stos
aaa
jp
hlt
rcl
jle
lock
popf
repnz
cwde
jne
mov
dec
push
hlt
mov
cld
push
mov
das
inc
push
mov
push
pop
pusha
test
and
jmp
xchg
mov
idiv
jmp
and
int
mov
fcom
mov
pop
in
pop
imul
cmps
mov
jge
and
scas
ret
sub
sub
dec
adc
mov
mov
mov
pusha
push
les
push
or
mov
and
movs
scas
dec
iret
jle
add
enter
pop
pop
arpl
fimul
daa
pop
inc
push
push
imul
pop
rcr
ss
addr16
fistp
xlat
push
jge
outs
add
jno
repz
adc
adc
clc
and
xor
add
in
mov
mov
adc
inc
pop
mov
bound
scas
pop
mov
dec
cmp
jnp
jge
sub
test
ins
int3
or
ror
out
pop
and
mov
inc
stos
cmc
and
push
adc
shr
shl
adc
and
sbb
sbb
ret
xchg
or
movs
scas
test
jl
stos
push
sbb
mov
push
push
mov
icebp
mov
xchg
ds
cld
add
sub
mov
loopne
call
jle
adc
mov
jb
sbb
ja
out
bound
test
loopne
dec
push
mov
jl
xor
cmp
push
and
adc
mov
mov
adc
pop
mov
push
popf
inc
repnz
xor
mov
jl
mov
daa
inc
push
dec
call
xchg
fs
lock
mov
and
cwde
xchg
loopne
lods
adc
les
sbb
lods
mov
push
or
leave
in
call
mov
jl
mov
fdivrp
movs
rcl
and
fdiv
or
push
sub
jo
int3
fwait
int3
sbb
scas
xor
call
adc
cmp
fild
push
jbe
and
fst
cmp
dec
jo
movs
add
retf
stc
test
retf
cmp
mov
dec
xchg
xchg
lea
stc
jle
xor
pop
pushf
in
sbb
stos
das
cli
xchg
adc
adc
aam
xor
sbb
(bad)
and
call
pop
pop
out
hlt
dec
mov
ror
mov
jmp
ins
jecxz
pop
cmp
adc
aad
fst
pushf
jb
fistp
dec
dec
sub
adc
sub
adc
fld
lods
iret
mov
sar
lds
inc
outs
dec
fldenv
cmp
xor
fst
stos
dec
scas
or
push
mov
mov
or
or
lea
jbe
dec
pop
xor
cli
sub
mov
frstor
sub
lock
ret
xchg
loope
mov
(bad)
xlat
stos
jge
mov
data16
jns
add
(bad)
jmp
sub
mov
test
inc
ret
mov
and
inc
jecxz
inc
addr16
es
xor
out
adc
popf
in
inc
sub
push
pop
add
sar
adc
cmp
add
xor
rcr
ret
ins
in
jle
clc
in
movs
into
inc
or
push
pop
sub
stc
jne
pop
ror
add
add
xor
mov
dec
inc
sbb
xchg
popf
call
jle
xlat
adc
push
(bad)
aam
inc
push
aas
call
jb
mov
loop
push
es
fyl2xp1
pop
mov
and
(bad)
popf
aad
mov
xchg
dec
dec
sbb
mov
ret
popa
and
and
and
and
dec
hlt
jmp
xchg
cmp
mov
add
mov
cdq
mov
in
cmp
xor
xor
dec
pop
mov
test
mov
inc
aaa
neg
jmp
jmp
subps
and
retf
lock
mov
(bad)
popf
hlt
pushf
sub
push
add
lea
sbb
sbb
rcr
pushf
add
movs
or
xchg
xchg
call
xor
push
enter
sub
sub
call
inc
pop
pop
mov
cld
jg
xor
xchg
stos
or
dec
outs
repnz
cmp
aaa
in
mov
push
pop
(bad)
out
mov
pop
cwde
and
or
or
mov
pop
cwde
jg
mov
cmp
scas
and
jecxz
cmp
xchg
test
ja
(bad)
jae
cmp
ins
dec
je
or
imul
mov
and
sbb
daa
mov
or
and
aaa
adc
pop
mov
gs
in
ftst
or
out
repz
leave
or
and
cmp
mov
xchg
xor
add
mov
fsubp
push
jge
out
push
jle
(bad)
mov
jp
repnz
add
adc
mov
mov
sub
rcl
xor
jbe
sti
loopne
test
add
mov
and
inc
cmps
test
pop
mov
hlt
imul
pop
push
adc
repnz
fadd
inc
stos
inc
mov
out
xchg
movs
pop
rcr
outs
cmp
scas
in
mov
push
pushf
cli
or
xor
cwde
xor
adc
jnp
mov
clc
xor
push
xchg
popf
sub
and
cmps
or
fadd
or
xor
push
add
adc
ja
out
and
xchg
or
mov
mov
popf
(bad)
in
jg
mov
xchg
test
sbb
fwait
bound
mov
xchg
js
ficom
out
in
outs
bound
(bad)
shr
jmp
push
adc
in
xchg
test
dec
test
mov
sub
mov
arpl
cmp
outs
xor
dec
add
add
mov
mov
jg
add
movs
pop
xchg
addr16
dec
(bad)
or
cwde
jno
mov
outs
pop
mov
sbb
or
push
mov
scas
jge
out
fild
outs
(bad)
adc
stc
in
ds
pop
mov
pop
mov
shl
movs
imul
popf
jp
sub
cmps
mov
adc
mov
dec
adc
xor
out
cmps
jo
fadd
mov
mov
or
lahf
or
inc
add
dec
pop
push
cmps
or
stos
in
sbb
jle
mov
(bad)
loope
inc
sar
add
add
test
jnp
cmp
inc
pop
and
pop
aas
jmp
jo
js
inc
in
jmp
icebp
sub
push
ror
imul
scas
sub
sbb
sub
mov
outs
outs
mov
mov
(bad)
xchg
call
pop
add
enter
stos
push
jae
hlt
jo
jo
or
in
mov
nop
pop
adc
pop
dec
gs
add
inc
aam
push
mov
jecxz
ficom
adc
retf
mov
mov
xor
enter
dec
add
jo
or
(bad)
rol
jne
aaa
adc
shr
push
xor
sub
dec
xchg
xor
mov
or
jge
cmp
and
dec
xchg
mov
xchg
push
mov
ja
push
mov
outs
xchg
(bad)
or
fwait
aad
loopne
fnstsw
mov
mov
test
inc
add
int3
inc
xchg
mov
test
fdivr
xlat
jmp
cmp
xchg
aaa
not
inc
sbb
jge
repnz
pop
or
add
sbb
call
mov
not
pop
pop
cmp
and
shl
mov
jmp
rcr
retf
dec
mov
cmps
or
mov
inc
dec
test
ins
xor
adc
sub
mov
pop
stc
inc
outs
pop
repz
popf
cmp
lods
mov
jbe
add
ret
rol
je
jmp
rcl
out
addr16
int3
xchg
sbb
push
cld
scas
push
or
outs
out
pusha
mov
sub
pop
push
ret
push
popa
pop
push
sub
xor
dec
push
inc
xor
inc
push
xchg
jp
in
lahf
mov
retf
inc
sahf
and
test
rol
imul
(bad)
mov
add
jle
cmp
and
fwait
and
aam
or
mov
ins
(bad)
xchg
movs
cmp
dec
imul
mov
mov
mov
jno
shl
jp
inc
ins
mov
add
xor
push
scas
std
jo
test
sbb
(bad)
aaa
jb
pop
or
jmp
xchg
inc
imul
lods
fst
scas
mov
sbb
pop
jbe
loopne
jo
stos
vmread
mov
push
ja
push
dec
cdq
pop
arpl
mov
inc
mov
cmp
gs
xchg
add
jmp
outs
lock
lea
ds
xor
(bad)
or
sbb
lea
adc
jmp
cmp
in
and
adc
push
div
add
add
movs
shr
mov
push
test
jo
adc
xor
add
movs
rcl
push
ja
add
jo
lods
xlat
imul
pop
ss
dec
inc
imul
jmp
push
scas
cli
fs
idiv
ja
xlat
loop
cmc
pop
mov
imul
push
data16
xor
test
movs
sti
dec
std
add
or
shr
cld
pop
cmc
ror
gs
and
ins
xor
(bad)
clc
cmps
aad
push
dec
or
enter
push
mov
movs
sub
ja
jmp
push
enter
pop
mov
xor
add
rol
clc
(bad)
es
in
movs
jmp
call
and
xchg
pop
ds
push
dec
cmps
add
sub
add
sbb
and
int
inc
mov
stos
mov
cld
clc
xchg
mov
xlat
inc
jnp
push
push
push
or
out
push
inc
push
push
aaa
cmp
pop
test
and
(bad)
mov
jl
xchg
sbb
adc
outs
jo
sub
push
mov
or
xchg
xchg
add
daa
loope
fwait
jns
cmp
inc
jo
mov
pop
test
into
xchg
bound
cmps
mov
and
out
scas
in
test
jo
xlat
sub
stc
jmp
(bad)
in
bnd
pop
stc
sar
push
rcl
lahf
(bad)
in
or
ficomp
pop
jg
pop
fild
xchg
or
lahf
or
je
push
or
adc
mov
aam
je
cmp
add
mov
mov
cmp
rcl
enter
test
jp
aad
sub
rol
pop
push
mov
dec
push
push
inc
in
ds
mov
sbb
cs
ins
adc
jns
cli
mov
mov
leave
iret
in
popf
pop
and
inc
or
cmps
mov
xor
sub
jne
icebp
in
add
fadd
pop
xlat
sbb
jb
out
bound
int
xchg
inc
mov
cmp
ins
cmp
sbb
pop
sbb
cmp
mov
nop
js
mov
push
push
rcl
rcr
popa
sub
jb
fneni(8087
ja
(bad)
cmp
sbb
push
ret
mov
call
ret
inc
sbb
and
mov
adc
jmp
or
fwait
fs
iret
stos
call
daa
jae
daa
sbb
sub
mov
or
xchg
sub
call
lea
pop
pop
mov
iret
jp
and
sub
je
loope
outs
sub
xchg
or
and
sub
int
clc
cs
sahf
add
out
push
repnz
icebp
or
xor
(bad)
retf
add
mov
call
inc
push
test
xchg
shl
sahf
test
inc
cmps
jmp
movsx
cmp
call
push
jge
xor
push
test
pop
cmps
stos
and
test
pushf
cmps
lahf
mov
(bad)
(bad)
push
arpl
sub
scas
movs
mov
hlt
iret
add
pop
pop
mov
push
mov
mov
stc
push
push
fcomp
add
shr
bound
pop
aam
clc
push
ins
mov
xor
sbb
dec
jbe
or
lods
retf
and
dec
xchg
test
jmp
int3
lahf
inc
pop
push
std
mov
mov
push
cs
test
dec
dec
jno
cwde
xchg
or
inc
mov
daa
ins
pop
ret
adc
jg
adc
xor
out
aad
push
inc
cwde
push
int3
test
int3
iret
mul
add
adc
xchg
dec
pop
cs
xor
jnp
pop
dec
ins
cmp
push
fistp
or
sbb
sar
mov
inc
jae
adc
pop
dec
xchg
fucomip
lahf
test
xchg
mov
xor
ins
ret
push
mov
mov
(bad)
jmp
cdq
add
out
stos
add
pop
xchg
mov
fild
scas
in
xor
mov
xchg
push
data16
sub
xor
sbb
cmps
jbe
fs
aas
push
jmp
in
fucom
xor
icebp
in
push
arpl
ss
dec
inc
jge
adc
jecxz
aaa
ret
cmps
jmp
mov
lock
sbb
sub
dec
fsub
into
jmp
add
data16
cli
xchg
sbb
test
mov
test
sbb
imul
push
sbb
mov
xor
div
ins
lock
jecxz
(bad)
(bad)
cwde
shl
and
dec
sub
cmp
ins
cli
inc
push
lods
out
cmp
loop
cmp
stos
mov
pop
icebp
gs
ror
and
or
mov
(bad)
cmc
jns
or
test
inc
jbe
ltr
adc
jge
in
jo
sub
stos
adc
inc
arpl
xor
push
imul
imul
jbe
int3
jmp
cmp
push
lods
jge
fisubr
mov
loopne
nop
xor
iret
cmp
add
xchg
adc
xchg
(bad)
(bad)
das
push
or
cmp
test
push
bound
push
pop
lods
add
adc
fiadd
or
xor
les
cs
push
add
test
ins
jmp
mov
sti
rcr
jle
lods
test
xor
outs
and
cmp
push
dec
inc
dec
inc
xchg
aas
cmps
loopne
pop
xchg
jge
int
imul
loop
jge
je
mov
aaa
push
inc
mov
mov
aam
test
xchg
ror
inc
cwde
xchg
sbb
xor
out
js
fwait
xor
leave
dec
mov
fidiv
push
mov
lock
and
inc
or
mov
add
stos
add
cmc
mov
cmps
jp
mov
jmp
jno
inc
sbb
and
pushf
mov
bound
shl
(bad)
stos
pushf
pop
push
xchg
hlt
outs
pop
xchg
mov
movs
subps
cmp
test
cmp
adc
imul
or
test
daa
adc
push
dec
and
das
mov
xor
sbb
call
xlat
push
mov
not
xchg
out
jnp
cmp
lods
jmp
aaa
jmp
or
jbe
mov
jle
push
fmul
pop
jno
jae
fidivr
sbb
xchg
jns
xor
es
outs
push
mov
mov
dec
cmp
int3
mov
es
leave
sbb
loopne
dec
int
scas
fwait
das
clc
rcl
jmp
adc
rcr
xor
and
cmp
xchg
xchg
xchg
gs
jb
inc
inc
adc
loop
sbb
push
out
push
shr
ja
sbb
push
mov
xor
dec
out
es
push
mov
cmp
clc
mov
dec
xor
ss
cdq
lahf
in
xchg
iret
ret
push
mov
add
xor
pop
into
xchg
adc
rol
scas
mov
push
fsubr
add
push
adc
call
xchg
mov
add
shl
mov
lods
(bad)
mov
(bad)
sbb
cmp
pop
std
loopne
mov
sbb
fdiv
push
bound
pop
push
std
mov
enter
int3
fmul
push
xor
movs
or
and
movs
inc
jae
jns
push
movs
aas
lods
(bad)
fsubr
lock
pop
add
lock
inc
sub
stc
stc
adc
movs
lods
xchg
stc
jg
sbb
pop
repz
push
jno
and
sub
push
inc
and
cmp
pushf
xor
iret
lods
or
clc
enter
dec
bound
hlt
pop
xchg
pop
ss
(bad)
adc
and
jp
ret
mov
std
xor
call
fwait
mov
repz
xor
sbb
call
(bad)
xchg
aaa
mov
rcr
jg
push
cs
clc
or
(bad)
adc
pop
jl
loope
fimul
js
lea
fs
mov
or
inc
pop
call
retf
xor
call
pop
mov
and
lods
cmp
jmp
mov
push
aaa
pop
mov
jp
jmp
repz
mov
sbb
cmp
leave
stos
cmps
sbb
aam
push
lahf
add
movs
xor
fisub
push
int
push
inc
shr
in
int
adc
push
dec
inc
jge
or
(bad)
out
lea
sbb
add
xchg
pop
push
cld
(bad)
into
(bad)
and
mov
mov
out
sbb
mov
pushf
lods
push
es
loop
ins
cld
out
fisubr
jp
mov
fs
fwait
scas
dec
sar
push
xchg
inc
mov
sbb
in
mov
es
cmc
xchg
je
dec
sbb
shr
dec
out
inc
cmp
and
pop
mov
add
test
xor
push
pop
jecxz
mov
jle
js
test
jns
xchg
xchg
(bad)
in
inc
push
sar
pop
add
push
push
pop
adc
mov
or
loop
xchg
xchg
inc
ins
pop
jbe
pop
loop
ins
mov
pop
mov
retf
movs
loopne
jbe
xor
push
nop
push
or
mov
rol
adc
sbb
arpl
and
jo
push
rcl
scas
stc
lahf
and
xlat
sete
jo
pop
outs
pop
add
cmps
sub
pop
int
jo
shr
das
inc
sbb
mov
add
je
cmc
add
mov
dec
repnz
lods
pop
call
mov
mov
dec
cld
jne
xor
daa
or
xor
pop
rcl
cmps
scas
dec
lahf
test
mov
enter
jnp
addr16
(bad)
mov
jmp
(bad)
out
aam
mov
or
jae
mov
and
nop
ret
jle
nop
js
fdiv
hlt
pop
ret
outs
in
iret
push
ret
lods
push
je
and
call
cld
icebp
sahf
push
jnp
jg
ins
mov
daa
test
adc
test
fucomi
fdivr
jnp
or
les
in
aas
sub
jp
outs
inc
cmps
cmp
adc
repnz
sub
mov
or
pop
sub
fadd
jmp
and
stos
stos
loop
push
lods
sbb
xor
test
sub
sub
adc
int3
sti
adc
or
addr16
fmul
sub
ss
mul
std
nop
adc
fmul
and
outs
sbb
pop
(bad)
cmp
pushf
jg
jl
adc
and
std
mov
lods
loope
shr
inc
mov
shl
adc
popa
push
mov
fwait
mov
push
fild
xchg
neg
xor
ss
popf
shl
clc
iret
mov
jns
push
mov
(bad)
leave
(bad)
push
push
adc
sub
popf
xchg
test
mov
pop
jb
adc
lea
adc
clc
fdivrp
add
jmp
sahf
or
xor
arpl
fst
sub
iret
mov
adc
mov
inc
xor
and
cmp
adc
mov
jge
(bad)
cmp
xor
add
sub
imul
sub
sbb
mov
es
pusha
outs
xchg
push
inc
mov
fcom
cwde
push
into
or
push
fxch
fs
or
jae
pop
cs
frstor
cmp
out
mov
dec
icebp
sub
mov
push
mov
push
clc
pop
adc
add
xchg
ds
xchg
xor
(bad)
test
xor
xor
(bad)
mul
adc
pop
push
push
test
int3
mov
push
jo
ror
xchg
call
or
mov
push
add
(bad)
sar
jle
arpl
xlat
sub
das
push
jnp
push
in
ins
jp
mov
test
and
test
shl
(bad)
test
xor
ins
popa
xchg
jo
push
pop
pop
sahf
out
pushf
(bad)
jmp
repz
dec
xchg
in
xor
loopne
(bad)
dec
or
cmp
mov
shl
mov
add
lds
sbb
punpckhdq
test
mov
hlt
aaa
sbb
jg
xchg
xchg
rcr
pop
cmp
inc
jecxz
sti
jmp
dec
les
sub
popa
mov
stc
bound
int
push
jg
or
sahf
add
sub
adc
jns
or
gs
pop
jb
sbb
inc
inc
jne
add
push
adc
outs
(bad)
ins
dec
(bad)
adc
inc
(bad)
inc
inc
aam
or
mov
cmp
mov
retf
xor
mov
cdq
in
stos
scas
(bad)
cld
and
retf
scas
sub
pop
inc
loope
dec
xchg
shr
mov
in
aam
test
rcr
dec
js
imul
xor
add
add
mov
push
dec
fwait
sti
sub
(bad)
jns
or
xor
cmp
and
or
or
cwde
adc
xchg
stos
mov
cs
test
push
mov
mov
sub
push
pop
scas
(bad)
je
popa
sub
cs
xchg
les
les
rcr
(bad)
(bad)
and
add
and
adc
or
mov
pop
add
movs
ins
and
gs
jge
pop
xchg
inc
cmp
nop
leave
dec
dec
sub
fcom
mov
cld
lock
outs
xlat
mov
int3
and
fistp
addr16
cmp
mov
sbb
cs
mov
or
jb
dec
lahf
fistp
push
adc
push
loop
adc
div
sar
test
pop
aad
out
jns
push
sub
mov
cmp
jle
imul
mov
push
retf
ins
lds
(bad)
mov
push
outs
jl
sub
ins
adc
cmp
xchg
rol
or
jmp
ds
test
push
outs
das
mov
pop
repz
and
inc
lock
push
ds
push
mov
cmps
dec
push
pop
aaa
out
rcr
mov
cmc
or
xor
call
mov
or
test
leave
movs
js
jl
mov
inc
cwde
jp
gs
sti
sbb
sar
adc
cmp
out
das
test
mov
jno
push
jg
add
or
pop
push
mov
stos
out
dec
xchg
inc
neg
dec
dec
lahf
rcl
sbb
mov
jae
adc
or
pop
scas
cli
adc
mov
add
lahf
dec
out
aas
shl
jae
and
out
sti
and
xchg
repnz
test
dec
imul
test
fadd
xor
popa
cmps
xchg
ficom
or
loope
mov
sub
popa
mov
jge
cli
shr
pop
iret
adc
retf
mov
scas
mov
xchg
sub
stc
lods
add
mov
sub
cmp
sti
pushf
mov
adc
dec
cmp
xchg
and
jae
out
inc
cmps
icebp
mov
sbb
sbb
mov
test
ror
outs
addr16
cld
daa
jae
xchg
arpl
je
and
jae
xchg
jle
sbb
jns
mov
stc
ret
mov
ins
cmp
mov
pop
pop
or
neg
js
and
test
aam
pop
push
ja
rol
shr
dec
retf
and
adc
shl
(bad)
mov
push
xchg
mov
or
or
mov
add
or
emms
fsub
ss
stos
inc
jmp
or
jmp
jbe
pop
call
test
add
mov
ret
std
dec
push
pop
popf
pop
jne
cmps
xchg
xor
icebp
sbb
daa
in
es
call
jle
sbb
push
sub
sub
fsubp
mov
inc
pop
jns
scas
dec
push
movs
sub
xchg
mov
add
dec
shl
sbb
in
test
imul
xor
add
bnd
sbb
aad
sbb
data16
or
fs
xor
je
push
stos
push
dec
int
jp
pusha
mov
call
pop
xchg
loopne
mov
lds
adc
(bad)
(bad)
fcmovnb
add
push
push
out
push
sub
push
rcl
movs
hlt
jns
loopne
xchg
sbb
cmovno
scas
mov
es
and
test
pusha
stc
xchg
popf
(bad)
das
and
jnp
retf
push
call
xor
sbb
(bad)
adc
push
iret
xlat
jb
loopne
push
ficom
sti
test
nop
das
jge
daa
call
or
bound
into
mov
mov
mov
stc
dec
sbb
rcl
adc
int
add
fdivr
inc
in
or
push
inc
pop
data16
enter
inc
cmp
mov
xor
popa
dec
xor
sub
or
xor
into
pop
gs
adc
xchg
cli
clc
cdq
retf
xchg
mov
fsubrp
test
dec
adc
xor
call
cs
inc
mov
call
mov
sbb
push
add
movs
ja
mov
adc
cld
loopne
sbb
xchg
std
adc
in
pusha
jbe
pop
push
xchg
fidivr
cmp
cmp
mov
inc
fimul
out
icebp
cmp
call
imul
xchg
jns
std
push
cdq
inc
jbe
and
in
push
mov
sbb
repz
ffree
pop
lods
add
clc
push
adc
pop
test
rol
push
(bad)
out
mov
adc
and
jecxz
mov
mov
lods
sub
xor
mov
push
xchg
(bad)
mov
(bad)
push
repz
fdiv
push
jle
sub
fcmovne
inc
dec
pop
int3
mov
lock
ror
adc
movd
dec
test
push
mov
sub
lds
inc
jecxz
xor
adc
stc
mov
xor
and
loop
call
pop
or
movs
add
add
add
jg
xor
scas
les
shl
jne
jno
xchg
sbb
pop
sub
mov
jmp
xlat
sbb
mov
(bad)
out
or
add
jnp
xor
call
and
iret
add
xchg
ja
mov
push
push
mov
out
js
add
pop
retf
cdq
dec
add
xor
push
and
movs
stos
mov
in
adc
fistp
inc
push
pop
inc
jne
aaa
shl
(bad)
dec
lea
lock
cmp
ror
mov
dec
sar
setg
call
xor
add
shr
mov
dec
and
gs
push
aas
cdq
sbb
adc
pop
push
push
push
mov
(bad)
push
lods
nop
xchg
in
arpl
xchg
pusha
cdq
in
cmp
outs
cmp
fst
scas
jge
pushf
nop
mov
aad
push
adc
fs
es
jp
sbb
sti
lds
into
xchg
iret
inc
daa
sub
cs
mov
ja
cmc
jecxz
sub
hlt
in
div
mov
pop
repnz
sahf
cdq
(bad)
push
cmps
sbb
jecxz
rcl
mov
js
xchg
das
and
mov
mov
stos
mov
lods
pop
retf
jp
clc
mov
and
scas
jns
in
(bad)
leave
push
pushf
jae
mov
xchg
loop
fisttp
mov
ins
mov
pop
xor
jnp
sbb
or
aam
adc
sahf
xchg
not
icebp
or
sahf
xor
imul
push
and
xchg
and
imul
add
lea
mov
jne
jno
xchg
xor
jmp
push
cld
adc
test
nop
leave
cmps
in
xor
stc
mov
mov
mov
mov
push
enter
push
jo
stc
xor
ror
mov
jns
lods
push
clc
sbb
jecxz
pop
inc
sti
xchg
jno
imul
retf
fsub
rcl
xor
test
mov
call
cmp
push
mov
or
test
add
jbe
pop
xor
pop
rol
pop
inc
pop
sub
shr
ins
loope
sbb
cdq
adc
sti
add
lods
push
rcl
mov
jno
fbstp
cmps
into
jnp
add
xor
jbe
jle
sbb
call
mov
pushf
push
in
ret
mov
jne
jecxz
test
lds
pop
iret
imul
sbb
mov
xchg
ror
dec
call
movs
inc
mov
jno
loop
lods
pop
inc
test
pop
sub
pushf
dec
push
stos
sahf
loop
push
retf
mov
jnp
adc
cmp
ret
aad
fcom
xor
mov
mov
lods
mov
clc
or
adc
jmp
or
or
pushf
ins
(bad)
xchg
xor
inc
inc
mov
sub
jns
scas
das
pop
dec
jmp
pop
mov
iret
int3
in
repz
pop
mov
fwait
inc
cmp
xchg
psubsw
ror
jns
je
(bad)
pop
test
ss
icebp
ins
jle
ret
outs
cwde
pop
jmp
cwde
cmp
in
xchg
jg
outs
pop
sub
sub
jmp
dec
das
and
arpl
aaa
dec
imul
or
xlat
test
cmp
cmps
shl
inc
cmc
in
outs
scas
clc
shr
imul
scas
stos
xchg
ret
sbb
dec
int3
adc
mov
stos
imul
pop
push
or
lock
repz
fadd
loope
ret
push
fs
(bad)
mov
mov
mov
retf
add
ret
nop
pop
pop
sbb
fs
push
sar
mov
lahf
mov
xor
add
test
ret
xor
loope
push
xor
out
mov
push
push
enter
push
add
stos
sub
push
aas
in
add
outs
test
addr16
lahf
scas
rep
inc
xor
retf
pop
pop
mov
clc
aad
add
xor
xchg
sub
aam
sbb
and
mov
xor
cmovne
xchg
xor
adc
jl
add
jmp
mov
ins
push
inc
push
aas
aam
in
cmc
mov
mov
cdq
ret
sub
mov
mov
and
mov
or
hlt
(bad)
idiv
mov
sub
leave
sahf
ins
hlt
inc
sbb
(bad)
addr16
cmps
imul
rep
adc
sub
adc
fmulp
ja
(bad)
xlat
ds
cmps
pop
sbb
inc
retf
popa
sar
aam
jl
call
add
sbb
or
rcr
mov
mov
ss
sub
dec
or
or
movs
ss
fdivr
adc
leave
retf
add
pop
call
dec
push
imul
push
add
mov
pop
aaa
sbb
xor
or
call
mov
jmp
fadd
jl
pop
stos
call
mov
dec
les
lea
sub
cmp
adc
push
mov
dec
das
lea
inc
push
xor
das
ins
out
mov
push
loop
xor
add
lods
sub
stos
or
test
xlat
mov
xchg
adc
fild
xlat
loopne
cmp
ss
lods
push
lahf
int
push
loopne
pop
(bad)
adc
mov
sub
or
mov
adc
cmp
sbb
add
push
dec
sub
ins
or
xlat
add
adc
inc
cwde
jmp
stos
not
xchg
std
sbb
and
push
jbe
in
js
mov
mov
add
imul
int
dec
pop
movs
adc
sbb
mov
and
js
(bad)
cwde
lea
daa
jge
sub
push
movs
jp
ins
jmp
fistp
mov
push
push
cmps
loopne
adc
xchg
dec
jo
or
retf
add
fwait
aaa
sbb
sar
bound
jno
pop
jae
and
push
sbb
jns
test
fs
int3
inc
data16
pop
cmps
lds
inc
pusha
stc
pop
outs
std
shr
xchg
pop
push
mov
mov
sahf
(bad)
sar
pop
jmp
nop
out
aad
lods
xchg
sbb
sub
iret
and
in
cmp
push
mov
cdq
jbe
mov
or
test
arpl
xor
pop
xor
stos
mov
inc
mov
jmp
(bad)
dec
out
fistp
jp
push
adc
xor
ins
and
or
rcl
icebp
ins
jp
gs
ins
and
cmp
dec
cmps
dec
fucomi
ret
xchg
sbb
addr16
int3
daa
jg
xchg
and
fiadd
xchg
popa
stc
stos
sub
mov
push
pop
ror
add
lods
mul
retf
(bad)
aad
test
jge
xchg
adc
cmp
jae
inc
cmp
ins
outs
scas
ins
mov
fdivr
les
mov
fstp
mov
dec
loope
push
dec
jae
jnp
add
lods
addr16
jnp
dec
or
sbb
jne
(bad)
cmp
(bad)
cld
jb
sub
daa
loope
call
je
loop
(bad)
jne
mov
mov
in
add
es
jmp
cmps
jns
mov
cmp
xchg
je
cdq
jnp
jl
cdq
push
sbb
mov
xchg
xor
ret
movs
int
jg
sub
cli
add
repnz
add
cwde
adc
xlat
mov
mov
test
push
push
jno
inc
pushf
sahf
and
push
jmp
dec
in
add
in
div
imul
fisubr
test
add
outs
xor
jge
inc
iret
pop
or
stc
imul
(bad)
mov
sub
xor
icebp
pop
xor
add
sbb
iret
je
sti
adc
push
out
adc
enter
or
mov
cmps
push
dec
aas
repnz
cmp
movs
pop
jg
aad
(bad)
xchg
std
push
lods
cmp
sub
sahf
sbb
(bad)
hlt
and
fwait
add
dec
sbb
sub
mov
inc
pop
ret
movs
retf
fistp
xchg
add
sub
out
push
out
movs
add
in
arpl
add
xchg
scas
pop
fs
cld
aas
pop
or
fwait
cmc
push
ss
pop
iret
mov
cli
mov
ja
jle
mov
popf
stos
dec
call
sub
xor
mov
or
nop
push
ins
pop
mov
test
xor
popa
jnp
and
cmp
test
ja
sti
fmul
out
mov
push
cmc
jb
sar
loopne
les
outs
adc
js
movs
mov
ja
push
mov
sub
test
stos
int
mov
sahf
mov
call
cmp
adc
mov
addr16
int
out
and
sar
add
into
movs
and
add
xchg
scas
icebp
push
stos
adc
jae
into
mov
jae
scas
and
ss
sbb
fwait
adc
aaa
xor
(bad)
dec
jb
push
mov
pop
scas
(bad)
push
push
push
jmp
in
push
push
fld
inc
data16
fcmovnu
dec
cmps
push
icebp
rcr
jmp
mov
inc
pop
jp
push
push
(bad)
pop
sub
std
pop
test
add
cmp
jns
stos
mov
mov
pop
jecxz
retf
je
add
ds
dec
adc
and
cmps
mov
dec
sub
inc
pop
sub
lds
ror
lods
and
jnp
jbe
cmp
mov
clc
push
mov
aam
ret
stos
and
movaps
or
dec
mov
mov
imul
idiv
loop
fidiv
mov
loop
pusha
xchg
pop
xchg
sub
jbe
movs
adc
cmp
shr
jae
call
and
inc
push
or
arpl
push
jne
xor
inc
and
shr
sbb
cmp
nop
dec
(bad)
arpl
gs
out
test
push
xchg
jl
(bad)
adc
pop
add
retf
sbb
mov
retf
pop
pop
fst
xor
mov
in
mov
dec
cmp
inc
pop
(bad)
dec
das
dec
ret
pusha
jl
data16
mov
pop
jecxz
(bad)
in
cmps
test
sar
test
add
cld
and
pop
mov
call
cmp
dec
mov
xchg
data16
in
jmp
scas
in
lds
xchg
mov
sub
pop
shr
inc
push
mov
aam
rcr
and
call
aad
cdq
das
xchg
test
dec
and
fs
or
js
jl
cmp
push
dec
outs
or
xor
lock
call
push
or
adc
loop
jecxz
pop
in
cmp
ret
imul
lock
retf
cdq
cmp
add
data16
out
test
xor
mov
ret
or
aam
lock
pop
out
in
daa
xor
cmc
jecxz
pop
pusha
adc
jge
add
pop
mov
mov
pop
in
xchg
or
cli
xlat
cli
adc
xor
imul
cmc
sar
cmp
sbb
sbb
pop
xchg
out
dec
cmps
and
jo
gs
or
sbb
xor
popa
sbb
pop
sbb
mov
jge
xchg
push
mov
fs
xchg
mov
mov
inc
retf
loopne
cmp
imul
pop
inc
(bad)
or
loop
mov
mov
loope
pop
popa
lock
pop
int
mov
cmp
mov
movs
int3
ret
pop
fcomp
push
jmp
into
cmp
loop
ins
pop
rol
dec
mov
jmp
xchg
mov
sbb
dec
cmp
fsubr
jb
or
arpl
(bad)
fist
popf
sbb
stos
cmp
and
cwde
test
xor
xlat
mov
adc
sbb
fild
inc
out
sub
cwde
(bad)
fst
lahf
xor
jne
mov
mov
loopne
sti
inc
retf
xchg
arpl
stos
test
fidiv
inc
das
sub
cmp
mov
adc
sub
mov
cwde
in
es
scas
add
and
rcr
retf
(bad)
ret
cmp
aas
(bad)
cs
push
sbb
fidivr
test
cmp
pop
sub
icebp
mov
in
int3
sub
dec
mov
cmps
cdq
dec
dec
mov
stc
loop
pusha
pop
aad
inc
outs
addr16
dec
mov
test
scas
ss
in
fxch
xor
cld
mov
movs
cmp
push
add
ss
sahf
mov
out
mov
jo
push
xchg
pop
movs
push
sub
sub
setns
loop
mov
and
neg
lods
in
cmps
xchg
idiv
in
push
jno
(bad)
sub
jp
pop
test
xchg
mov
je
es
outs
jmp
je
xchg
addr16
dec
inc
mov
cmp
dec
ins
adc
jbe
call
shl
mov
dec
fisub
hlt
add
bnd
sub
mov
mov
popa
dec
es
rol
shr
mov
(bad)
push
sub
ret
fdivr
cli
daa
mov
add
xchg
aad
dec
inc
clc
arpl
icebp
lods
xor
movs
fistp
std
xchg
aam
pop
sahf
imul
ins
or
dec
and
outs
mov
sbb
test
jle
jmp
jae
hlt
or
out
cmc
sbb
xchg
ret
jg
movs
stc
adc
adc
mov
push
cld
mov
das
sahf
push
sub
sti
push
mul
cdq
loope
ret
repnz
adc
cmp
ret
jno
loopne
push
mov
fcomp
das
adc
sub
lahf
push
pop
scas
adc
add
shl
mov
pop
sahf
bound
(bad)
cmp
adc
in
stos
imul
add
mov
push
(bad)
cs
adc
xor
push
loopne
out
cmp
cdq
enter
ror
xor
out
stc
imul
mov
push
cmps
add
pop
pop
call
inc
loop
cmp
enter
outs
outs
jbe
jo
cmp
mov
or
por
(bad)
sbb
dec
mov
or
mov
mov
xchg
clc
mov
test
cmps
jnp
or
dec
repz
popf
ficomp
dec
push
pushf
mov
inc
jb
or
adc
shl
or
mov
test
add
sub
rol
inc
sbb
clc
xor
jmp
pop
and
mov
dec
xlat
push
cwde
push
(bad)
push
sub
mov
out
stos
cdq
xlat
dec
jl
(bad)
es
addr16
push
retf
je
push
jecxz
add
jne
fdecstp
add
ins
fistp
fdiv
out
dec
test
repz
out
push
and
movs
sub
loop
and
jge
jge
mov
jle
outs
loopne
int3
ret
dec
enter
scas
fwait
lahf
(bad)
fstp
mov
jb
or
ds
rcl
sar
lea
sbb
sub
sti
jl
push
adc
xor
jbe
sub
out
movs
ja
or
cmp
xchg
repz
inc
cdq
test
mov
movs
out
mov
(bad)
jo
fcomp
hlt
xchg
test
dec
xadd
movs
jnp
ins
sti
out
add
lea
mov
cld
test
int3
or
push
push
loopne
popa
xchg
ss
out
repnz
in
mov
movs
cli
leave
mov
sbb
mov
push
js
(bad)
jo
push
adc
retf
dec
mov
addr16
xlat
hlt
hlt
cmps
xchg
daa
ror
jecxz
mov
jo
cdq
rcr
iret
jecxz
xchg
sbb
bswap
xor
and
iret
pop
or
iret
add
lods
dec
cwde
jne
(bad)
(bad)
out
pop
push
adc
cmp
sbb
xchg
data16
xchg
jl
inc
sbb
ret
xchg
pop
mov
(bad)
cs
test
pop
xor
das
lock
mov
outs
bound
pop
out
dec
sbb
adc
mov
push
mov
push
rcl
mov
movs
repz
data16
call
les
sub
and
scas
push
lods
stc
jns
loope
and
aad
rcr
mov
retf
cmp
movd
lock
cmps
mov
mul
jg
and
test
pushf
hlt
jnp
arpl
ret
cmp
adc
add
dec
sub
lods
sbb
push
or
mov
(bad)
jbe
cmp
arpl
stos
rol
inc
outs
dec
push
mov
sub
and
add
fist
lods
add
es
sbb
std
daa
xchg
jns
jno
mov
sub
lds
in
ret
sbb
dec
sbb
push
adc
xchg
sub
out
je
and
sbb
leave
fst
pop
int
add
mov
out
mov
xchg
mov
jns
dec
dec
addr16
cmp
mov
call
xor
push
rcl
inc
(bad)
jecxz
outs
push
jmp
pop
xchg
das
jo
icebp
fisubr
pop
pop
adc
sub
sub
sar
cmp
in
inc
add
in
pop
sub
xor
adc
cmp
adc
stc
lea
cdq
cmps
xchg
sbb
into
ror
xchg
inc
cmp
jae
aam
(bad)
sbb
es
xlat
add
lock
jmp
adc
cmps
hlt
push
push
or
inc
jp
test
jmp
aaa
or
sub
xchg
das
xor
fwait
pop
out
fnstenv
lds
jmp
push
sbb
and
push
xchg
fst
sar
mov
ret
sti
mov
sahf
int
movs
lds
cwde
dec
dec
imul
sub
and
push
adc
or
jge
ret
sub
dec
test
pop
pop
pop
push
daa
retf
add
aaa
(bad)
(bad)
pop
xor
mov
or
or
jno
jno
mov
popf
xor
loop
push
les
mov
loop
push
imul
ret
les
mov
inc
mov
fwait
mov
adc
cmp
xor
call
aaa
repnz
lods
dec
mov
mov
jb
sbb
in
in
pop
adc
xor
mov
mul
hlt
push
fdivr
or
in
mov
out
and
xchg
inc
adc
loop
stos
test
cmc
xor
in
call
les
ins
add
and
sub
loope
rep
in
repnz
aad
mov
dec
jae
lds
add
mov
lods
xchg
popa
ja
sbb
xchg
movs
add
dec
in
and
cmp
or
imul
fld
imul
int3
jl
enter
pop
je
pop
inc
adc
fs
xchg
adc
push
(bad)
jbe
test
and
or
add
mov
sbb
mov
jl
jmp
pop
dec
loop
popf
ins
jmp
cmp
cli
or
ins
mov
icebp
cdq
xchg
dec
enter
call
jecxz
daa
inc
jmp
test
test
ins
pop
add
xor
popf
and
dec
data16
stc
xlat
adc
iret
adc
sub
sbb
icebp
mov
lahf
mov
loope
call
movs
lods
push
(bad)
into
dec
inc
out
movs
lahf
test
call
cmc
jno
adc
enter
sub
mov
dec
sahf
adc
imul
loope
loope
in
cmps
jmp
adc
or
sub
clc
adc
(bad)
xchg
pop
fisttp
mov
jns
adc
(bad)
cwde
(bad)
pop
dec
pop
retf
movaps
push
or
inc
jle
push
stc
pop
push
aas
jmp
mov
xor
les
in
mov
mov
test
add
paddusw
(bad)
icebp
pushf
jae
cmc
mov
popf
adc
mov
dec
(bad)
in
mov
sahf
pusha
clc
imul
inc
xor
mov
scas
push
stos
es
cmp
jl
mov
mov
rcl
fwait
into
xchg
test
sahf
jne
in
imul
(bad)
je
ins
into
call
sbb
jne
je
maskmovq
mul
jnp
pop
or
cld
jmp
fsub
sbb
call
imul
inc
cmps
imul
add
daa
inc
fdivr
pushf
pushf
mov
jmp
inc
(bad)
xchg
sub
ja
push
jl
add
dec
aas
push
sbb
and
adc
rcr
jne
hlt
add
or
(bad)
mov
sbb
sub
loope
sti
pop
movs
fwait
movs
xchg
mov
mov
mov
mov
inc
mov
icebp
mov
jns
push
sbb
pop
mov
ss
imul
ret
dec
add
(bad)
ret
or
pop
out
mov
or
ret
dec
jmp
test
mov
gs
cld
ja
cmp
dec
rol
(bad)
pop
pop
stc
sub
jae
sbb
pop
repz
inc
pop
and
cld
push
dec
nop
push
leave
push
mov
shl
test
push
lock
fs
loopne
jo
retf
bound
or
aas
jbe
xchg
pop
shl
jecxz
js
arpl
add
nop
mov
pop
call
lea
jge
call
out
xlat
repnz
pop
sub
sbb
mov
loop
pusha
out
sti
adc
sbb
mov
out
inc
jge
push
lods
jmp
jo
xor
mov
jne
adc
pusha
push
dec
sahf
push
jmp
mul
mov
xor
sbb
cli
mov
dec
retf
repnz
xchg
scas
sub
dec
mov
dec
sbb
mov
pop
lock
(bad)
stos
xchg
call
dec
inc
mov
arpl
jmp
aad
ja
pop
(bad)
and
sub
sar
mov
xor
les
xor
mov
(bad)
jo
iret
pop
test
(bad)
sbb
shl
cmp
ret
gs
push
mov
cmp
xchg
lahf
adc
call
sahf
and
adc
jmp
aam
shl
jmp
dec
lahf
and
sti
jne
xor
fsubrp
cwde
jmp
retf
lea
pop
inc
leave
push
pop
xor
fstp
data16
push
cmp
jmp
inc
pop
lahf
loopne
imul
leave
retf
jmp
cwde
jae
retf
(bad)
fdivr
dec
xchg
mov
fcom
mov
inc
jp
and
scas
dec
ret
jnp
ss
push
arpl
enter
inc
mov
dec
mov
int3
mov
push
xor
in
push
ins
push
adc
div
jmp
popf
jne
aam
xor
push
test
mov
neg
adc
dec
push
pop
add
xor
pop
daa
in
lea
movs
retf
xchg
add
pop
loope
aam
imul
cmp
mov
clc
mov
out
sub
jl
dec
pop
in
or
inc
mov
out
lock
popf
mov
pop
mov
xchg
dec
ror
pop
ins
jge
imul
jp
fistp
or
or
jp
nop
inc
jbe
lods
out
jno
cmps
sbb
aas
sahf
jno
cmps
(bad)
xor
mov
and
cmc
mov
adc
xchg
adc
lock
dec
test
hlt
gs
jp
shl
or
mov
loope
mov
repz
adc
cmps
push
sbb
jp
ret
cmp
(bad)
(bad)
sub
jge
cs
iret
(bad)
cld
cmp
push
cwde
mov
jbe
mov
test
cmp
shr
mov
jecxz
inc
mov
mov
pop
sbb
lods
adc
stc
pushf
jge
mov
mov
dec
mov
cmp
outs
rcr
or
sub
ficom
mov
movs
sub
push
cld
addr16
aad
mov
adc
fidivr
jecxz
test
stos
sub
add
and
leave
mul
call
adc
sub
js
pop
and
xchg
aam
pop
pop
sub
cmp
pop
adc
xor
jp
inc
add
jns
scas
jp
inc
sub
cmp
int3
mov
jne
das
lock
inc
pop
cmp
(bad)
xchg
adc
rcl
rol
das
outs
mov
mov
jnp
enter
push
mov
jp
iret
out
imul
sbb
gs
mov
inc
inc
adc
in
(bad)
enter
and
xchg
clc
ss
into
pop
push
xchg
int3
xchg
popa
inc
push
lea
mov
sbb
inc
dec
push
loop
xor
popa
sar
jo
inc
lods
imul
retf
cmp
in
and
(bad)
call
std
or
xor
rcl
lods
mov
shl
add
iret
inc
jne
daa
(bad)
pop
sbb
mov
gs
sub
fisubr
sub
push
arpl
sbb
push
cmp
adc
int
pop
iret
jle
lods
xlat
add
(bad)
cdq
ins
dec
jp
sbb
scas
stos
push
ins
lock
mov
out
pop
dec
or
or
push
sbb
jb
jge
repnz
sbb
xor
fistp
xchg
mov
stc
hlt
leave
xchg
mov
in
xor
sbb
add
mov
xchg
ficom
not
cmp
addr16
mov
pop
dec
sub
retf
test
inc
dec
sub
inc
push
cmp
xor
inc
stc
jae
mov
mov
pop
add
dec
and
or
or
jmp
adc
sbb
and
in
jmp
mov
xchg
popf
loopne
call
and
lea
out
enter
inc
or
mov
in
popa
inc
sub
push
(bad)
popf
cmp
mov
stc
xchg
cdq
iret
push
repnz
add
add
fsubr
sbb
popa
ror
mov
pop
cmp
sahf
sbb
les
sub
inc
jl
jle
in
mov
xor
adc
enter
arpl
jle
or
and
push
mov
push
imul
retf
aad
pop
call
xchg
lds
rol
(bad)
in
sub
cdq
fild
das
and
sub
out
addr16
xchg
stos
iret
fld
cmps
jb
pop
mov
scas
or
push
sti
div
dec
pop
(bad)
into
xlat
scas
scas
jmp
icebp
inc
cmps
push
mov
(bad)
mov
and
out
leave
imul
inc
retf
test
test
xor
(bad)
jo
fisub
or
push
pop
in
scas
xor
retf
mov
jecxz
fnstcw
fs
(bad)
stos
scas
mov
sub
push
add
jmp
mov
fstp
adc
in
mov
mov
push
adc
inc
scas
mul
pop
or
cmp
sbb
push
in
or
rol
and
xchg
ins
cmp
pop
pop
call
pop
and
rcl
pop
je
lahf
test
pop
push
jl
jl
mov
xchg
push
xchg
mov
leave
sub
in
add
call
mov
call
xchg
test
cmps
dec
sub
cmps
xor
inc
adc
push
xchg
or
or
movs
add
dec
jmp
(bad)
jnp
(bad)
dec
adc
adc
push
aaa
push
push
retf
inc
aam
arpl
cmps
fisub
jo
test
outs
std
jbe
or
xchg
mov
test
pop
xor
mov
icebp
sbb
sar
stos
dec
sbb
out
push
std
lahf
bound
shl
cmp
or
xchg
rcr
call
mov
push
(bad)
scas
sub
dec
loop
mov
(bad)
push
push
push
or
cmps
pop
inc
das
jo
sahf
inc
jmp
lods
out
cmps
jge
dec
scas
mov
inc
and
call
mov
(bad)
gs
les
(bad)
cs
sti
(bad)
sar
adc
stc
jge
sub
pop
scas
inc
add
pop
pop
pop
push
push
and
stc
aad
(bad)
lock
int
(bad)
das
mov
sti
and
cmp
sbb
xor
add
cmps
imul
mov
mov
mov
jne
movs
(bad)
scas
jne
and
mov
stos
cdq
cdq
jmp
std
push
icebp
inc
jmp
inc
jmp
push
fisub
push
jecxz
scas
imul
xor
sbb
sbb
inc
sub
jp
ss
(bad)
(bad)
in
inc
std
sub
loop
ror
in
inc
out
ds
push
loope
repnz
or
mov
adc
icebp
dec
lods
pop
mov
lods
add
xor
pop
pop
loope
dec
mov
lock
cmp
mov
mov
pop
leave
xchg
popa
cmp
stos
cmp
das
jecxz
lock
inc
or
dec
lahf
jb
sub
fs
add
outs
mov
mov
mov
dec
fcom
fstp
icebp
loop
jo
fwait
adc
je
shr
push
sub
cmp
cmps
xchg
ror
int
or
and
sbb
xchg
ja
inc
out
aad
pop
cmc
dec
push
aam
pop
xchg
pusha
div
iret
push
adc
aaa
add
fstp
pushf
pop
dec
adc
add
add
cld
and
sub
mov
sahf
aaa
test
add
mov
push
mov
mov
popf
dec
adc
jb
ds
leave
movs
cmp
xchg
add
mov
xor
cdq
movs
lea
stc
lds
push
inc
push
clc
mov
jbe
lock
dec
lahf
sti
or
aas
dec
jo
into
shl
add
mov
xor
xor
pop
mov
or
add
adc
pop
ins
ror
(bad)
xchg
call
xchg
push
vpsrld
or
mov
outs
sub
repnz
push
pop
cmp
adc
in
dec
inc
loopne
sub
or
xor
(bad)
retf
and
sub
data16
or
test
sbb
hlt
mov
xchg
mov
bound
cmp
xor
(bad)
cli
hlt
or
mov
hlt
not
shl
jns
jne
daa
bound
pop
iret
xor
cmp
aam
sub
(bad)
fiadd
cs
cmc
gs
sbb
rcl
movs
and
sahf
cwde
(bad)
xchg
mov
repz
jae
sub
cmp
das
je
mov
adc
cdq
outs
(bad)
in
dec
jmp
sbb
inc
dec
mov
fild
mov
jmp
push
pusha
mov
jno
daa
mov
or
dec
lahf
cmp
rol
add
or
cld
cmp
fwait
or
(bad)
daa
(bad)
into
ss
mov
ds
ins
(bad)
jnp
add
pop
dec
xor
xchg
push
mov
int
mov
adc
dec
and
in
(bad)
xchg
dec
push
ins
mov
fcmovnu
lock
mov
js
test
jb
(bad)
xchg
pop
fild
or
jno
push
fnstenv
xchg
repz
scas
inc
aam
int
stc
jbe
cmps
(bad)
sub
xchg
in
mov
repnz
mov
ins
inc
xchg
adc
push
outs
xchg
jae
xor
je
pmaddwd
pop
sbb
xchg
rcr
xchg
jmp
movs
rol
mov
sub
test
es
iret
fstp
mov
mov
fstp
sub
call
inc
sti
icebp
xor
dec
sbb
dec
inc
fstp
and
fld
pop
icebp
and
and
push
mov
arpl
dec
jb
retf
(bad)
out
data16
adc
jns
loop
jge
cli
mov
(bad)
iret
push
stos
sbb
in
add
(bad)
mov
sbb
lock
xchg
retf
fisubr
dec
ss
mov
retf
pop
stc
ss
retf
cmp
add
sbb
jbe
movs
mov
pop
push
jmp
ret
popa
fnstsw
jg
pop
xchg
out
aaa
mov
rcr
sbb
mov
sub
call
dec
fnstenv
xchg
push
xchg
dec
push
xchg
adc
imul
ret
push
iret
add
mov
pop
push
sbb
xchg
sti
or
retf
fwait
mov
jmp
inc
shr
jmp
inc
sub
aad
mov
add
mov
add
mov
nop
fistp
mov
xor
iret
lods
mov
inc
imul
jmp
repz
jle
jmp
dec
cmp
add
jne
dec
xchg
loope
cli
adc
adc
leave
ins
loope
sub
pusha
sub
jp
cmc
dec
aad
add
push
add
mul
mov
(bad)
adc
pop
xchg
shl
mov
movs
stos
jl
out
jg
sub
aaa
outs
mov
dec
add
lahf
xchg
lods
and
inc
leave
cwde
cmp
repnz
sti
imul
out
sbb
ins
cmp
inc
cmp
popa
dec
inc
push
or
xchg
sub
ins
xchg
mov
inc
fcomp
or
jge
cld
push
jge
hlt
pop
jl
or
jo
aam
sub
jg
ror
test
inc
outs
sbb
std
es
lea
(bad)
mov
or
data16
mov
fdivr
xchg
sub
or
fild
jl
inc
mov
add
js
mov
(bad)
mov
pop
sbb
(bad)
sub
jle
mov
add
adc
cmp
int3
and
inc
lahf
clc
ins
sub
aad
mov
push
cmc
xor
dec
and
dec
adc
imul
clc
and
aaa
loop
(bad)
sub
aas
cmp
pushf
pop
adc
cwde
sbb
and
cmps
mov
dec
fcomp
addr16
stos
mov
pop
dec
mov
jg
sub
je
ret
fmulp
mov
lods
ret
scas
sub
dec
ins
into
sub
in
ss
jg
and
jge
mov
popa
adc
shl
push
cld
pop
xchg
cmps
call
int
ss
jb
jmp
pusha
or
xchg
ins
(bad)
push
inc
fmul
retf
lea
lahf
dec
(bad)
cmc
dec
or
popa
push
bound
cli
fwait
push
gs
lds
sub
mov
sbb
rcl
fwait
std
outs
push
(bad)
cmp
jg
std
mov
pop
in
ins
fwait
xchg
sbb
shl
jmp
jl
xor
fcmovnu
mov
dec
mov
mov
addr16
dec
mov
xor
mov
push
std
or
sub
pushf
dec
rcr
stos
jmp
add
and
or
scas
aad
test
mov
sub
push
inc
add
dec
pop
in
jg
dec
mov
fwait
mov
ss
stc
xor
mov
je
scas
aam
clc
xchg
out
mov
lahf
scas
fisubr
(bad)
nop
mov
sub
icebp
add
stos
stos
sub
jne
mov
leave
nop
push
stc
push
rcr
pop
dec
xchg
into
mov
sbb
jle
inc
outs
xchg
(bad)
mov
inc
inc
stos
pop
inc
adc
enter
inc
inc
push
mov
clc
stos
xchg
outs
ret
dec
or
cli
in
aad
add
dec
push
in
and
inc
push
fiadd
popa
xchg
add
int
or
dec
mov
xor
mov
stos
loop
ins
jecxz
nop
dec
mov
fwait
sar
popf
scas
mov
icebp
in
add
div
rol
dec
ret
stos
adc
das
add
and
mov
hlt
sbb
stc
mov
movs
push
push
movups
jecxz
idiv
cli
mov
test
ret
mov
loopne
xor
xor
(bad)
mov
jmp
les
loop
div
dec
(bad)
out
jp
enter
push
bound
fidivr
sub
cmp
mov
push
in
ss
pop
icebp
sbb
and
imul
pop
mov
mov
aam
fcomp
ss
dec
loope
stos
out
push
les
das
xchg
adc
mov
mov
fist
(bad)
sbb
icebp
int3
call
out
loop
inc
mov
mov
jo
mov
mov
jb
jno
inc
or
mov
xchg
sub
cs
add
mov
mov
or
xchg
dec
call
pop
aad
sbb
popa
mov
lods
or
fistp
jp
shl
addr16
test
out
jecxz
cmps
sti
sar
xor
mov
mov
mov
movs
test
inc
in
test
loop
or
popa
mov
mov
mov
jmp
retf
idiv
in
sbb
lahf
jbe
repz
pop
das
out
lods
mov
(bad)
cmp
ror
jo
das
mov
sub
push
movs
mov
add
xor
inc
jbe
mov
adc
dec
outs
(bad)
les
or
add
adc
daa
loopne
mov
cmp
and
xchg
xor
adc
adc
int
ret
ret
jle
aad
loope
sahf
and
sbb
cmp
cmp
scas
mov
imul
push
adc
fwait
sbb
jae
outs
xchg
es
movs
mov
cmc
dec
sar
sub
xlat
aam
test
mov
xchg
arpl
arpl
test
fnstenv
mov
push
jge
aaa
push
jmp
sbb
pusha
push
scas
xchg
and
xor
popf
movs
lahf
int
std
sbb
retf
iret
and
sbb
adc
rcl
jmp
mov
mov
and
pop
lahf
rol
out
sub
shl
add
retf
jp
dec
(bad)
(bad)
sbb
mov
cmp
pop
fwait
pop
sub
jo
mov
inc
clc
pop
cs
fstp
inc
add
stos
xchg
ins
add
call
inc
push
and
sbb
(bad)
xor
addr16
repz
shr
mov
xchg
pop
lods
scas
or
pop
cwde
inc
sar
(bad)
jbe
enter
fidivr
push
adc
jb
jae
push
int
lods
push
dec
inc
mov
dec
out
call
sbb
mov
aas
inc
mov
aas
pop
adc
and
adc
clc
leave
loopne
dec
lods
xchg
sub
scas
imul
xor
xor
mov
cdq
not
mov
sti
fcomp
inc
addr16
lods
mov
das
stos
jo
(bad)
vpsubd
(bad)
adc
pop
mov
(bad)
outs
dec
jmp
dec
pop
and
mov
pop
add
add
scas
cmp
iret
xchg
mov
sub
adc
imul
fwait
inc
data16
loope
sub
test
(bad)
jge
mov
sbb
jle
dec
loope
dec
adc
cmps
push
add
and
push
xchg
mov
in
adc
xchg
lods
pop
ret
mov
and
inc
xchg
xor
adc
ret
jg
outs
xchg
sub
fsubr
dec
and
call
xchg
jmp
push
int
xor
jecxz
leave
jns
shl
sti
adc
repnz
mov
jne
imul
jl
push
xchg
or
add
loopne
shl
sub
jno
rcl
dec
jle
pop
not
adc
shl
cs
icebp
rcl
dec
imul
movs
aam
dec
push
push
mov
mov
cmp
fldcw
sti
push
sti
add
(bad)
adc
adc
inc
test
stos
xchg
pusha
clc
mov
and
sub
xchg
pusha
and
ffree
out
mov
sahf
jecxz
mov
jg
int3
les
push
add
inc
jp
sub
aam
jmp
sub
xchg
jmp
or
xor
pop
int3
fdivr
adc
jno
sub
pop
fld
call
jg
inc
xchg
dec
aad
push
daa
pop
pop
xchg
cmps
pop
inc
gs
in
je
sbb
dec
aas
shl
ret
or
xor
mov
adc
aaa
fisub
mov
outs
mov
loope
pushf
sbb
sti
adc
cmp
clc
lods
call
cmp
je
lds
int3
inc
icebp
add
pop
or
fadd
dec
outs
sbb
xchg
push
xchg
pushf
test
dec
shl
push
pop
retf
(bad)
add
fwait
inc
jmp
push
icebp
jge
cmps
cmovp
jl
add
push
sbb
stc
xchg
and
sbb
or
int3
and
int
mov
lock
adc
mov
cdq
ss
add
rcl
pusha
and
jge
push
mov
stos
aad
ss
xchg
jl
jmp
sbb
xchg
dec
cmc
(bad)
int3
icebp
fnstcw
aam
mov
xchg
or
stc
loope
mov
add
and
mov
push
dec
imul
jne
hlt
mov
stos
cmp
inc
add
mov
out
iret
xchg
gs
aam
mov
aam
sbb
mov
nop
int
xor
sbb
mov
rol
out
bsr
cs
inc
pushf
pop
jmp
test
xor
fidivr
fcmovnbe
int3
add
push
scas
pop
sar
push
int3
cmp
int3
mov
push
sub
and
dec
je
sub
cmp
adc
sbb
out
pushf
retf
pop
inc
ins
(bad)
mov
add
leave
xor
sub
add
xchg
aaa
dec
fistp
popa
jno
repz
aam
test
mov
xor
(bad)
mov
dec
mov
movs
aas
cmp
xchg
and
call
iret
ja
ret
mov
pop
shl
(bad)
out
cmp
sahf
jmp
imul
add
inc
dec
lahf
xchg
mov
lods
mov
call
inc
mov
arpl
push
lahf
cmps
fistp
cmp
xlat
je
jnp
fs
rcr
mov
dec
iret
fadd
and
neg
pusha
add
aam
lds
pop
stos
aad
les
out
movs
out
(bad)
out
sahf
out
js
in
xchg
cli
inc
sbb
bound
dec
jl
cs
fcom
movs
gs
mov
xor
dec
sub
popf
or
(bad)
cdq
mov
aaa
cmp
push
pop
in
sahf
or
cmp
inc
ins
adc
rol
and
lods
test
mov
cmps
inc
lahf
xor
mov
sub
je
cli
xchg
dec
xor
out
(bad)
pop
push
jns
mov
cmps
pop
sbb
mov
icebp
repz
ins
lods
and
sahf
mov
out
mov
(bad)
scas
adc
pop
iret
ja
sub
outs
or
mov
cmps
push
sbb
test
add
lea
xchg
arpl
daa
dec
xchg
mov
int3
pop
scas
arpl
inc
das
cmp
in
gs
and
out
jo
cmp
inc
sub
cmp
push
into
fdiv
ins
jg
inc
gs
movs
fcom
neg
or
ficom
rol
dec
in
inc
dec
pop
pop
push
out
(bad)
lock
adc
lods
xchg
cmp
paddb
inc
mov
pop
fwait
mov
xchg
retf
mov
mov
aaa
inc
jnp
fbld
out
sbb
mov
pop
jecxz
test
gs
mov
and
cmp
(bad)
in
dec
dec
jno
rcr
xchg
jl
and
js
and
mov
push
push
adc
inc
inc
jbe
adc
lds
pop
or
retf
mov
xchg
sbb
pop
add
add
cs
and
pop
int3
jnp
push
mov
pop
jp
cmp
sbb
js
xchg
leave
push
add
inc
loopne
imul
nop
mov
pop
xor
pop
mov
xchg
xchg
fdivr
(bad)
jb
lods
and
jmp
hlt
xchg
sbb
shr
rep
or
mov
call
and
inc
nop
pop
xchg
mov
enter
ja
test
outs
fdivr
rol
ror
inc
inc
rcl
lods
clc
lahf
pop
fnsave
sbb
sub
gs
leave
stc
cmp
cli
cmp
mov
dec
mov
or
and
lock
mov
je
sbb
add
fldenv
mov
push
mov
inc
jo
or
xor
mov
scas
inc
mov
test
xchg
add
dec
cli
loope
les
push
push
dec
lock
cmp
inc
add
in
dec
(bad)
imul
mov
scas
out
and
jmp
mov
inc
pop
mov
mov
and
dec
prefetch
adc
add
fcmovne
pop
and
and
mov
lock
out
ret
repz
clc
in
in
enter
sub
mov
jmp
fisttp
repnz
sub
sub
in
inc
dec
mov
lods
xchg
jecxz
loope
int3
daa
push
repz
repz
xor
imul
lods
addr16
and
stc
enter
neg
fild
sub
gs
imul
pop
ja
push
out
popf
cmc
mul
int
clc
scas
mov
xor
sbb
enter
pop
pop
jae
aam
sahf
clc
scas
adc
cmp
in
clc
lds
ss
mov
adc
dec
xor
xchg
shr
mov
adc
sub
(bad)
cmp
fistp
dec
pusha
mov
pop
mov
mov
daa
mov
push
sbb
cmp
push
pusha
clc
gs
mov
push
(bad)
pop
xor
xor
cmp
hlt
call
xchg
mov
mov
imul
fnstcw
mov
mov
inc
jecxz
into
std
push
ror
int3
jo
retf
int3
and
(bad)
out
dec
sbb
outs
neg
in
pop
ins
stc
sbb
aad
mov
in
or
bnd
inc
mov
adc
xchg
lods
mov
cmp
scas
xchg
js
retf
mov
sbb
pop
inc
and
scas
cmp
in
cld
add
mov
jle
pop
scas
mov
(bad)
mov
imul
aam
retf
loope
nop
pop
add
push
push
jnp
enter
ds
adc
in
scas
push
or
addr16
(bad)
pop
push
jmp
dec
xchg
iret
xchg
das
inc
and
les
or
xlat
jle
mov
push
mov
jne
ret
data16
dec
call
call
das
or
pop
int3
icebp
add
push
inc
lock
sub
cdq
cs
dec
push
outs
dec
js
in
cdq
imul
fcmovne
xabort
imul
neg
mov
pop
cs
mov
inc
pop
push
xor
cmps
scas
xor
out
xchg
data16
sub
in
cwde
lahf
mov
adc
add
sbb
push
rcr
ins
aaa
pop
ret
ror
movs
arpl
iret
es
jnp
mov
mov
loope
sbb
inc
or
mov
cmp
repz
pop
aam
push
mov
jae
mov
xor
mov
xlat
fist
jno
repz
and
dec
mov
pop
inc
pop
xchg
ffree
pop
xor
sbb
es
bsr
push
sub
hlt
psubusw
scas
jno
loope
inc
dec
shl
jae
mov
aaa
dec
rol
mov
sahf
mov
push
mov
dec
jnp
and
dec
lods
fmul
out
mov
in
pop
rcr
(bad)
mov
lock
es
std
mov
or
jg
mov
dec
das
popf
sbb
push
daa
aad
xchg
and
imul
or
add
mov
jnp
mov
lea
sub
dec
in
nop
sahf
lock
xchg
lahf
sub
jb
out
push
imul
jle
mov
xchg
hlt
scas
jl
fwait
sbb
jns
ds
cdq
pop
mov
dec
shr
adc
icebp
mov
inc
rcr
fprem
sub
inc
or
push
xchg
adc
mov
cmps
pop
mov
cmps
xor
lods
cmps
pop
push
pop
mov
push
push
icebp
(bad)
sahf
ror
adc
jae
jle
push
push
adc
out
mov
cs
sbb
jno
push
pop
jo
out
arpl
das
scas
mov
jl
sub
aas
dec
push
mov
fdiv
xchg
popa
xchg
jmp
ret
in
mov
fcos
mov
or
and
xchg
add
push
test
ins
bound
mov
add
or
arpl
dec
cmp
push
xchg
ror
test
shl
fwait
mov
ret
in
outs
xlat
pop
lods
into
sub
or
bound
sbb
and
(bad)
out
jmp
jge
aaa
das
iret
dec
clc
jmp
adc
pop
cs
xchg
sbb
fs
je
jle
xchg
jle
push
sbb
dec
cmp
and
push
sub
adc
jbe
or
cmp
mov
fcmovne
leave
mov
mov
push
jb
push
cmps
and
dec
ror
add
xor
stos
inc
sbb
daa
adc
shl
int
ins
xchg
test
fisub
std
aaa
push
les
div
(bad)
ror
or
(bad)
std
jbe
push
push
pop
dec
cdq
pop
xchg
sbb
add
dec
add
pop
adc
sbb
rcl
and
dec
(bad)
jmp
int3
add
mov
xchg
pushf
cmps
jg
mov
dec
or
test
jecxz
cmp
push
nop
inc
arpl
dec
rol
ins
scas
lds
xchg
retf
popa
mov
pop
mov
mov
retf
xchg
mov
(bad)
gs
jns
rol
xor
xchg
rcl
fs
dec
ret
in
adc
add
push
test
fidiv
loop
adc
jp
xchg
pop
pop
inc
nop
push
(bad)
je
dec
cli
arpl
mov
add
jmp
std
dec
jmp
jns
in
les
adc
dec
leave
dec
fxch
inc
mov
(bad)
dec
out
cmp
rcr
fdivr
mov
xchg
ficomp
sbb
inc
loop
cmc
imul
mov
xchg
xchg
dec
ror
mov
or
xor
daa
arpl
or
add
out
xchg
xchg
hlt
aas
mov
xchg
arpl
cmp
cmp
addr16
lds
xor
inc
stc
mov
cmp
into
xor
ret
pop
jp
int
mov
call
shl
lea
lds
cld
mov
stos
dec
pushf
jbe
pop
jp
sar
cmp
mov
test
stos
dec
jmp
popf
inc
nop
xchg
lods
sbb
sbb
xchg
(bad)
mov
dec
shl
inc
test
loop
fsubp
xor
mov
ins
cmp
scas
or
pop
add
mov
stc
xchg
std
jg
and
repz
sub
aad
sar
in
or
(bad)
push
arpl
cmps
push
xor
(bad)
and
jo
push
fsubr
fdivr
fadd
mov
cmp
daa
fdivr
sbb
scas
and
or
cmps
fcom
ret
pop
nop
sub
rcr
std
cmp
adc
fdiv
fisttp
bound
out
into
mov
inc
fcmovnb
adc
lock
(bad)
ficomp
test
(bad)
mov
pop
xchg
xlat
shl
in
xor
xchg
jl
or
scas
xchg
outs
push
fst
dec
dec
push
pop
(bad)
aas
pop
bound
pusha
inc
inc
mov
mov
cs
xlat
das
sbb
pop
movs
xor
xchg
rcr
sbb
or
data16
int
test
pop
int
push
repnz
pusha
xor
add
push
and
dec
xor
xor
xchg
pusha
cmp
scas
jge
mov
retf
clc
pusha
dec
inc
mov
push
fdivr
sub
pop
adc
dec
push
and
push
dec
clc
cmp
jmp
int3
jge
test
les
sub
and
dec
out
add
xor
hlt
sub
add
call
push
mov
xlat
scas
dec
jge
imul
xchg
pop
das
mov
test
ja
shl
neg
fcom
and
ss
jae
dec
cwde
call
out
jmp
pop
enter
pop
stc
(bad)
sub
loop
fdivrp
ds
sar
mov
aas
cmp
jne
jne
(bad)
xchg
fsub
sbb
adc
data16
and
dec
adc
mov
mov
xor
clc
fwait
mov
mov
and
js
adc
cmp
mov
psrlw
xchg
pop
scas
push
xor
mov
ret
fdivr
mov
icebp
jl
and
rep
cmp
pop
lea
ins
jnp
dec
adc
(bad)
sbb
inc
mov
mov
and
mov
and
ins
and
mov
imul
ret
sbb
xchg
jmp
xchg
jmp
pop
mov
lods
mov
inc
and
icebp
cmc
mov
add
pop
in
pop
sbb
(bad)
lahf
xor
and
(bad)
sub
pop
xor
dec
arpl
test
push
adc
jbe
test
push
clc
mov
adc
nop
sti
inc
inc
jle
sahf
lea
movs
rcr
sub
cmps
leave
adc
xchg
fistp
test
pushf
leave
data16
xchg
xor
aaa
jg
out
dec
ins
je
xor
aam
dec
leave
cld
mov
or
cdq
xchg
mov
add
cmp
mov
loope
dec
int3
inc
fld
aad
sbb
sbb
je
nop
pop
fs
in
clc
or
call
pop
pop
les
ins
dec
mov
daa
inc
out
retf
xchg
imul
clc
jnp
pop
push
in
sub
mov
adc
jl
mov
sub
pushf
arpl
(bad)
shl
sahf
in
push
call
xchg
pop
or
and
das
push
enter
das
sub
push
dec
add
stc
retf
and
dec
sbb
scas
add
mov
xchg
lock
hlt
neg
push
add
arpl
addr16
dec
pop
aaa
pop
loopne
xchg
inc
push
outs
xchg
rol
retf
imul
mov
test
test
cli
push
test
test
jnp
idiv
mov
cs
jge
repz
out
and
(bad)
lods
pop
repz
es
mov
ds
pusha
lock
repnz
mov
mov
ins
dec
mov
push
push
pop
xchg
or
inc
pusha
dec
sbb
pushf
test
enter
mov
jmp
test
lods
dec
add
dec
push
dec
xchg
scas
sbb
mov
xor
mov
in
cmps
and
sbb
mov
jno
cli
xor
movs
jns
pop
bswap
enter
fisubr
cmp
lock
stc
(bad)
(bad)
pop
pop
cld
lea
push
adc
jb
and
neg
mov
mov
inc
repz
push
sub
push
and
pop
cmp
dec
pop
add
jp
sbb
jl
mov
shr
jg
xchg
(bad)
pushf
sbb
nop
add
or
mov
xchg
cmp
stos
inc
daa
xchg
mov
mov
in
vpconflictq
jp
in
and
push
adc
cdq
sbb
jmp
push
xor
imul
je
fidiv
push
inc
jmp
jle
cmp
loop
scas
leave
aas
cmp
repz
add
mov
gs
enter
push
xor
inc
fadd
cmp
imul
xor
add
and
in
sbb
and
mov
loope
mul
push
push
mov
and
out
fs
out
adc
push
xchg
mov
xchg
punpcklbw
xor
jnp
repnz
ror
out
lods
jp
enter
hlt
jmp
and
pop
addr16
xor
pop
cmp
mov
and
cmc
jns
outs
leave
les
es
or
test
xchg
mov
mov
push
mov
div
stos
xor
and
or
sub
cmp
jl
push
rcr
add
fdivr
xor
fwait
pop
pop
mov
daa
jo
popf
mov
aaa
cwde
mov
push
mov
pop
push
fisub
inc
rol
mov
inc
ret
int3
das
into
mov
in
pop
xlat
in
push
test
mov
cmp
mov
data16
pop
loopne
xor
mov
scas
out
std
aam
pop
in
xchg
inc
push
cmp
jnp
jle
adc
nop
inc
pop
popf
mov
inc
dec
mov
fs
xor
nop
dec
scas
xor
ret
hlt
retf
in
inc
adc
fisubr
push
ror
jb
outs
cwde
ins
lods
cmps
mov
jmp
test
test
mov
ror
cdq
xor
mov
hlt
sbb
cmp
pop
sub
ins
mov
or
in
dec
aam
mov
fcmovb
mov
mov
sbb
jg
scas
mov
mov
inc
and
loope
mov
pop
xor
jo
mov
test
jns
xor
mov
sub
std
mov
icebp
xchg
mov
mov
inc
dec
std
shl
xchg
aas
test
mov
gs
cmp
mov
call
lea
daa
push
mov
dec
adc
shr
out
lahf
jb
pop
xchg
sub
mov
sbb
hlt
arpl
sahf
pop
dec
push
out
xor
loopne
xchg
loopne
or
nop
into
test
jne
sbb
jae
shr
sbb
pop
js
loope
rol
rcl
adc
sub
adc
push
std
fdivr
jmp
jne
(bad)
repnz
jp
or
sub
repz
jne
bound
jg
xchg
idiv
dec
mov
mov
mov
and
loopne
shl
std
fimul
mov
and
pop
xor
outs
clc
or
daa
aam
sbb
(bad)
xchg
jae
retf
idiv
dec
mov
mov
mov
jnp
inc
jae
jp
lds
std
(bad)
sbb
int3
int3
int3
sub
push
push
xor
xor
lea
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
cmp
jl
xor
xor
mov
mov
div
movzx
add
add
and
jns
dec
or
inc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
movzx
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
cmp
jl
xor
inc
and
jns
dec
or
inc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
add
and
jns
dec
or
inc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
movzx
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
add
and
jns
dec
or
inc
movzx
xor
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
cmp
jb
pop
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
mov
call
push
push
push
lea
push
push
call
add
lea
call
push
push
push
push
call
push
mov
mov
push
push
call
add
call
pop
xor
pop
add
ret
push
push
mov
push
call
mov
mov
push
call
call
sub
cmp
jbe
call
sub
cmp
jae
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
push
call
mov
mov
mov
mov
push
call
call
sub
cmp
jbe
call
sub
cmp
jae
lea
push
lea
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
push
call
lea
mov
push
lea
push
call
push
call
push
lea
push
push
mov
mov
call
add
push
lea
push
push
call
push
push
lea
push
call
test
jne
lea
push
lea
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
push
call
mov
lea
push
lea
push
call
push
call
push
push
push
push
push
push
mov
call
push
call
push
mov
call
mov
jmp
lea
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
push
push
push
push
call
push
push
push
push
call
mov
call
push
push
push
push
push
push
push
push
push
push
push
push
mov
call
mov
test
je
mov
push
push
call
push
call
push
push
call
mov
push
push
push
lea
push
mov
call
test
je
push
mov
push
mov
lea
mov
lea
push
push
push
call
test
jne
lea
push
call
lea
push
call
push
push
push
lea
push
call
test
jne
pop
pop
mov
pop
pop
add
ret
pop
xor
pop
add
ret
int3
int3
int3
int3
sub
push
mov
push
push
mov
mov
mov
mov
mov
mov
call
push
push
mov
call
mov
mov
push
push
mov
mov
mov
call
lea
push
mov
call
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
sub
sub
push
je
sub
je
sub
je
call
mov
movzx
sub
je
sub
je
mov
push
push
mov
push
push
call
pop
mov
pop
ret
mov
push
call
xor
pop
mov
pop
ret
mov
mov
push
push
push
push
push
call
xor
pop
mov
pop
ret
mov
lea
push
push
call
lea
push
push
call
xor
pop
mov
pop
ret
push
call
xor
pop
mov
pop
ret
int3
int3
int3
mov
sub
je
sub
jne
mov
cmp
je
cmp
je
xor
ret
mov
movzx
push
push
call
mov
ret
mov
push
mov
cmp
jne
call
push
call
push
call
pop
pop
pop
ret
push
push
call
xor
mov
lea
push
call
push
pop
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
cmp
jbe
xor
cmp
setne
mov
jmp
mov
xor
inc
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
push
call
pop
cmp
je
push
call
pop
call
test
je
movzx
jmp
push
pop
push
push
push
push
call
mov
cmp
jne
push
call
call
mov
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
mov
cmp
jne
push
call
call
mov
mov
jmp
xor
inc
ret
mov
mov
mov
call
ret
call
jmp
mov
push
mov
mov
mov
cmp
jne
cmp
jne
mov
cmp
je
cmp
je
cmp
je
cmp
jne
call
xor
pop
ret
push
call
xor
ret
mov
push
mov
push
mov
push
call
push
call
add
cmp
ja
test
je
pop
pop
ret
mov
push
mov
call
push
call
push
call
push
call
add
pop
ret
mov
push
mov
push
call
test
je
push
push
call
test
je
push
call
pop
ret
mov
push
mov
push
call
pop
push
call
int3
push
call
pop
ret
push
call
pop
ret
mov
push
mov
push
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
cmp
je
push
call
pop
test
je
push
call
pop
call
push
push
call
pop
pop
test
jne
push
call
mov
mov
call
cmp
pop
je
push
call
pop
test
je
push
push
push
call
xor
pop
ret
push
push
call
push
call
pop
and
xor
inc
cmp
je
mov
mov
mov
cmp
jne
push
call
pop
mov
mov
test
je
push
call
pop
mov
mov
mov
mov
sub
mov
cmp
jb
call
cmp
je
cmp
jb
push
call
mov
call
mov
call
push
call
mov
push
call
add
cmp
jne
cmp
je
mov
mov
mov
mov
mov
mov
jmp
push
mov
call
pop
push
mov
call
pop
mov
call
cmp
jne
mov
push
call
pop
push
call
xor
inc
cmp
je
push
call
pop
ret
call
ret
mov
push
mov
push
push
push
call
add
pop
ret
mov
push
mov
push
push
push
call
add
pop
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
mov
push
call
mov
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
mov
pop
ret
mov
push
mov
push
push
push
mov
push
push
xor
xor
mov
cmp
je
inc
mov
cmp
jb
cmp
jae
push
call
pop
cmp
je
push
call
pop
test
jne
cmp
je
cmp
je
push
mov
push
mov
push
call
add
test
je
push
push
push
push
push
call
add
push
mov
push
push
mov
call
test
jne
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
push
call
inc
pop
cmp
jbe
push
call
sub
add
push
mov
push
sub
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
jmp
xor
push
push
push
call
add
test
je
push
push
push
push
push
call
add
mov
push
push
push
call
add
test
je
push
push
push
push
push
call
add
push
push
push
call
add
jmp
push
call
mov
cmp
je
cmp
je
push
lea
push
lea
push
call
pop
push
push
push
call
pop
pop
pop
leave
ret
push
call
pop
cmp
je
push
call
pop
test
jne
cmp
jne
push
call
push
call
pop
pop
ret
ret
mov
push
mov
push
push
push
call
mov
test
je
mov
mov
push
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
cmp
jae
cmp
jne
mov
jmp
xor
test
je
mov
mov
test
jne
xor
jmp
cmp
jne
and
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
add
cmp
jge
imul
mov
and
mov
mov
inc
add
add
cmp
jl
mov
mov
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
push
push
call
pop
mov
jmp
and
push
call
mov
pop
mov
or
pop
pop
pop
leave
ret
mov
xor
test
jne
mov
movzx
cmp
ja
test
je
test
je
cmp
jne
xor
test
sete
mov
inc
inc
jmp
cmp
ja
inc
inc
movzx
test
jne
ret
mov
push
mov
push
xor
test
jne
or
jmp
cmp
je
inc
push
call
pop
lea
movzx
test
jne
push
push
inc
push
call
mov
pop
pop
mov
test
jne
or
jmp
mov
jmp
push
call
mov
inc
cmp
pop
je
push
push
call
pop
pop
mov
test
je
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
add
lea
cmp
jne
push
call
and
and
mov
xor
pop
pop
pop
pop
ret
push
call
and
or
jmp
mov
push
mov
push
push
xor
push
mov
mov
mov
mov
cmp
je
mov
add
mov
cmp
jne
mov
xor
test
sete
push
inc
inc
mov
pop
jmp
inc
test
je
mov
mov
inc
inc
movzx
inc
inc
test
je
test
jne
cmp
je
cmp
jne
test
je
xor
mov
and
xor
cmp
je
movzx
cmp
je
cmp
jne
inc
inc
jmp
dec
dec
jmp
cmp
je
cmp
je
mov
add
mov
inc
xor
inc
xor
jmp
inc
inc
inc
cmp
je
cmp
jne
test
jne
cmp
je
lea
cmp
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
jmp
dec
test
je
push
pop
mov
inc
inc
inc
test
jne
movzx
test
je
cmp
jne
cmp
je
cmp
je
test
je
test
je
mov
inc
inc
inc
inc
inc
jmp
test
je
xor
mov
inc
inc
inc
mov
jmp
mov
cmp
je
mov
inc
pop
pop
leave
ret
mov
push
mov
push
push
push
push
push
push
mov
push
xor
xor
push
mov
call
mov
mov
cmp
je
mov
cmp
jne
mov
lea
push
push
lea
xor
mov
call
mov
pop
pop
cmp
jae
mov
cmp
jae
lea
add
add
cmp
jb
push
call
mov
pop
test
je
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
jmp
or
pop
pop
pop
leave
ret
mov
push
call
mov
xor
cmp
jne
xor
pop
ret
cmp
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
inc
push
inc
mov
push
push
call
mov
pop
test
jne
push
call
mov
pop
pop
pop
ret
push
push
push
call
add
jmp
jmp
push
push
call
xor
mov
lea
push
call
mov
push
push
pop
push
call
pop
pop
cmp
je
mov
mov
lea
jmp
mov
or
mov
mov
mov
mov
mov
mov
mov
add
mov
add
cmp
jb
cmp
je
mov
cmp
je
mov
lea
lea
mov
mov
cmp
jl
mov
mov
jmp
push
push
call
pop
pop
test
je
mov
lea
mov
add
lea
jmp
mov
or
mov
and
and
mov
mov
and
mov
add
mov
add
cmp
jb
inc
cmp
jl
jmp
mov
and
test
jle
mov
mov
cmp
je
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
shl
add
mov
mov
mov
mov
mov
push
lea
push
call
pop
pop
test
je
inc
inc
inc
add
cmp
jl
xor
mov
shl
add
mov
cmp
je
cmp
je
or
jmp
mov
test
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
test
je
push
call
test
je
mov
and
cmp
jne
or
jmp
cmp
jne
or
push
lea
push
call
pop
pop
test
je
inc
jmp
or
mov
inc
cmp
jl
push
call
xor
jmp
xor
inc
ret
mov
mov
or
call
ret
mov
push
mov
mov
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
mov
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
push
push
mov
call
test
je
mov
cmp
je
push
push
call
call
test
je
mov
jmp
mov
push
call
test
jne
push
call
pop
test
je
push
push
call
test
je
push
call
mov
mov
pop
pop
ret
push
call
pop
ret
mov
push
mov
push
push
mov
call
test
je
mov
cmp
je
push
push
call
call
test
je
mov
jmp
mov
push
call
test
jne
push
call
pop
test
je
push
push
call
test
je
push
call
mov
mov
pop
pop
ret
call
ret
mov
push
push
call
mov
test
jne
push
call
pop
mov
push
push
call
mov
pop
ret
mov
cmp
je
push
push
call
pop
call
or
mov
cmp
je
push
call
or
jmp
push
push
call
mov
push
call
test
jne
push
call
pop
mov
mov
mov
xor
inc
mov
test
je
push
push
mov
call
mov
push
push
call
mov
mov
mov
mov
mov
push
call
pop
and
push
call
mov
call
push
call
pop
mov
mov
mov
test
jne
mov
mov
push
call
pop
mov
call
call
ret
xor
inc
mov
push
call
pop
ret
push
call
pop
ret
mov
push
push
call
push
mov
call
call
mov
test
jne
push
push
call
mov
pop
pop
test
je
push
push
push
call
pop
call
test
je
push
push
call
pop
pop
call
or
mov
jmp
push
call
pop
xor
push
call
pop
mov
pop
ret
mov
push
call
mov
test
jne
push
call
pop
mov
pop
ret
push
push
call
mov
test
je
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
cmp
je
push
call
pop
push
call
pop
and
mov
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
call
push
call
pop
mov
mov
test
je
push
call
pop
cmp
je
cmp
je
cmp
jne
push
call
pop
mov
call
push
call
pop
call
ret
mov
push
call
pop
ret
mov
push
call
pop
ret
mov
push
push
mov
push
call
test
jne
push
call
pop
mov
test
je
mov
push
push
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
cmp
mov
mov
je
cmp
je
cmp
je
test
jne
mov
mov
mov
mov
mov
mov
call
mov
cmp
je
push
push
call
test
je
call
push
call
push
mov
call
push
mov
call
push
mov
call
add
mov
call
test
je
push
push
call
pop
call
mov
cmp
je
push
push
call
mov
pop
pop
test
je
push
push
push
call
pop
call
test
je
push
push
call
pop
pop
call
or
mov
xor
inc
jmp
call
xor
pop
pop
ret
mov
push
mov
xor
cmp
push
sete
push
push
call
mov
test
jne
pop
ret
xor
inc
mov
pop
ret
int3
int3
push
push
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
push
mov
mov
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
push
mov
push
mov
xor
push
mov
mov
mov
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
test
jne
mov
lea
mov
mov
mov
mov
cmp
je
lea
lea
mov
lea
mov
mov
mov
test
je
mov
call
mov
test
jl
jg
mov
mov
cmp
jne
cmp
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
mov
jmp
mov
cmp
jne
cmp
je
push
call
add
test
je
mov
push
push
call
add
mov
call
mov
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
mov
cmp
je
push
push
mov
call
jmp
mov
push
mov
sub
mov
and
and
push
push
mov
mov
cmp
je
test
je
not
mov
jmp
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
cmp
jne
mov
jmp
test
jne
mov
shl
or
mov
not
mov
pop
pop
pop
leave
ret
push
push
call
call
mov
test
je
and
call
jmp
xor
inc
ret
mov
mov
call
call
ret
push
call
pop
mov
ret
mov
push
push
xor
mov
cmp
jne
lea
mov
push
push
add
call
pop
pop
test
je
inc
cmp
jl
xor
inc
pop
pop
ret
and
xor
jmp
mov
push
mov
push
mov
push
mov
test
je
cmp
je
push
call
push
call
and
pop
add
cmp
jl
mov
pop
mov
test
je
cmp
jne
push
call
add
cmp
jl
pop
pop
ret
mov
push
mov
mov
push
call
pop
ret
push
push
call
xor
inc
mov
xor
cmp
jne
call
push
call
push
call
pop
pop
mov
lea
cmp
je
mov
jmp
push
call
pop
mov
cmp
jne
call
mov
xor
jmp
push
call
pop
mov
cmp
jne
push
push
call
pop
pop
test
jne
push
call
pop
call
mov
mov
jmp
mov
jmp
push
call
pop
mov
call
mov
call
ret
push
call
pop
ret
mov
push
mov
mov
push
lea
cmp
jne
push
call
pop
test
jne
push
call
pop
push
call
pop
pop
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
and
push
push
lea
push
push
call
lea
mov
lea
add
mov
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
lea
push
call
test
jne
test
jne
push
call
pop
push
call
push
call
mov
xor
pop
call
leave
ret
mov
push
mov
push
call
pop
test
je
pop
jmp
push
call
pop
pop
jmp
mov
push
mov
mov
xor
cmp
je
inc
cmp
jb
lea
cmp
ja
push
pop
pop
ret
mov
pop
ret
add
push
pop
cmp
sbb
and
add
pop
ret
call
test
jne
mov
ret
add
ret
mov
push
mov
push
push
push
push
push
call
push
mov
mov
call
mov
pop
pop
cmp
jb
mov
sub
lea
cmp
jb
push
call
mov
lea
pop
cmp
jae
mov
cmp
jae
mov
add
cmp
jb
push
push
call
pop
pop
test
jne
lea
cmp
jb
push
push
call
pop
pop
test
je
sar
push
lea
call
pop
mov
push
call
mov
add
push
call
pop
mov
mov
pop
jmp
xor
pop
pop
pop
leave
ret
mov
push
push
push
call
mov
push
call
add
mov
mov
test
jne
push
pop
pop
ret
and
xor
pop
ret
push
push
call
call
and
push
call
pop
mov
mov
call
mov
call
ret
call
ret
mov
push
mov
push
call
neg
sbb
neg
pop
dec
pop
ret
mov
push
push
xor
lea
push
call
add
pop
mov
cmp
jb
pop
pop
ret
int3
int3
int3
int3
mov
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
cmp
jne
xor
mov
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
add
movzx
push
push
movzx
xor
push
lea
test
jbe
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
mov
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
mov
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
mov
xor
cmp
sete
mov
ret
mov
mov
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
push
mov
mov
mov
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
pop
cmp
jae
cmp
je
xor
pop
ret
push
call
pop
ret
push
push
call
xor
mov
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
push
mov
call
mov
add
mov
jmp
mov
sub
je
sub
je
dec
je
call
mov
xor
push
push
push
push
push
call
add
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
push
call
mov
pop
xor
cmp
je
cmp
jne
push
call
cmp
je
push
call
pop
xor
mov
cmp
je
cmp
je
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
mov
add
cmp
jge
mov
imul
mov
mov
inc
jmp
call
mov
mov
call
cmp
jne
push
push
call
pop
jmp
mov
mov
cmp
je
push
call
pop
ret
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
pop
ret
push
push
call
and
push
push
call
mov
jmp
mov
mov
mov
mov
xor
cmp
sete
mov
ret
mov
cmp
jne
push
call
and
mov
mov
call
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
push
call
pop
test
je
push
call
pop
test
je
xor
inc
pop
ret
xor
pop
ret
mov
push
mov
sub
push
push
push
call
and
cmp
mov
jne
push
call
mov
test
je
mov
push
push
call
test
je
push
call
mov
push
mov
call
push
call
mov
push
mov
call
push
call
mov
push
mov
call
push
call
pop
mov
test
je
push
push
call
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
push
mov
call
pop
pop
mov
test
je
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
test
jne
or
jmp
mov
cmp
je
push
call
pop
test
je
call
mov
test
je
mov
cmp
je
push
call
pop
test
je
push
call
mov
push
call
pop
test
je
push
push
push
push
call
jmp
xor
pop
pop
pop
leave
ret
mov
push
mov
mov
push
xor
push
push
cmp
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
cmp
jne
mov
jmp
mov
cmp
je
inc
dec
jne
cmp
je
mov
mov
inc
inc
cmp
je
dec
jne
cmp
jne
mov
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
pop
ret
mov
push
mov
push
push
mov
xor
push
cmp
jne
cmp
jne
cmp
jne
xor
pop
pop
pop
pop
ret
cmp
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
cmp
mov
jne
mov
mov
inc
inc
cmp
je
dec
jne
jmp
mov
mov
inc
inc
cmp
je
dec
je
dec
jne
cmp
jne
mov
cmp
jne
cmp
jne
mov
push
mov
pop
jmp
mov
call
push
pop
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
mov
push
mov
mov
push
xor
push
push
cmp
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
inc
inc
cmp
je
dec
jne
cmp
jne
mov
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
pop
ret
mov
push
mov
mov
push
xor
cmp
jl
cmp
jle
cmp
jne
mov
jmp
mov
mov
jmp
call
push
push
push
push
push
mov
call
add
or
pop
pop
ret
push
push
call
mov
test
je
cmp
jne
push
call
pop
and
push
call
pop
mov
test
je
push
push
call
pop
pop
mov
call
cmp
jne
push
jmp
push
call
pop
ret
push
push
push
call
test
jne
call
mov
call
push
call
mov
pop
call
ret
mov
push
mov
mov
push
push
push
xor
cmp
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
pop
pop
pop
pop
ret
mov
cmp
jne
xor
mov
jmp
mov
movzx
mov
inc
inc
inc
inc
cmp
je
dec
jne
xor
cmp
jne
mov
call
push
pop
mov
mov
jmp
mov
push
mov
push
push
xor
push
call
mov
pop
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
push
push
push
call
mov
add
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
push
push
call
mov
pop
pop
test
jne
cmp
je
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
mov
mov
inc
inc
test
jne
sub
sar
dec
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmp
je
push
push
and
and
cmp
pop
pop
jne
pop
pop
pop
jmp
test
jne
shr
and
cmp
jb
rep
jmp
nop
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
js
inc
add
inc
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
dec
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
inc
(bad)
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
fs
inc
add
add
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
add
inc
add
stos
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movs
stos
inc
add
inc
add
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
lods
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
mov
push
mov
push
push
mov
mov
xor
push
cmp
je
cmp
je
mov
cmp
je
cmp
jne
mov
cmp
je
cmp
jne
push
call
push
call
pop
pop
mov
cmp
je
cmp
jne
push
call
push
call
pop
pop
push
call
push
call
pop
pop
mov
cmp
je
cmp
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
push
call
add
lea
mov
cmp
je
cmp
jne
push
call
push
call
pop
pop
lea
mov
cmp
je
mov
cmp
je
cmp
jne
push
call
pop
cmp
je
mov
cmp
je
cmp
jne
push
call
pop
add
dec
jne
push
call
pop
pop
pop
pop
pop
ret
mov
push
mov
push
push
mov
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
mov
cmp
je
mov
test
je
push
call
cmp
je
mov
test
je
push
call
add
dec
jne
mov
add
push
call
pop
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
push
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
mov
cmp
je
mov
test
je
push
call
cmp
je
mov
test
je
push
call
add
dec
jne
mov
add
push
call
pop
pop
mov
pop
pop
ret
test
je
test
je
push
mov
cmp
je
push
mov
call
pop
test
je
push
call
cmp
pop
jne
cmp
je
push
call
pop
mov
pop
ret
xor
ret
push
push
call
call
mov
mov
test
je
cmp
je
call
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
and
lea
mov
call
mov
mov
call
jmp
push
call
pop
mov
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
push
push
mov
push
xor
lea
push
push
call
xor
movzx
mov
mov
mov
mov
shl
or
lea
stos
stos
stos
mov
add
lea
sub
mov
mov
mov
inc
dec
jne
lea
mov
mov
mov
inc
dec
jne
pop
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
lea
push
push
call
mov
test
je
xor
mov
inc
cmp
jb
mov
mov
test
je
lea
movzx
movzx
cmp
ja
sub
inc
push
lea
push
push
call
add
inc
mov
inc
test
jne
push
push
lea
push
push
push
lea
push
push
push
call
xor
push
push
lea
push
push
push
lea
push
push
push
push
call
add
push
push
lea
push
push
push
lea
push
push
push
push
call
add
xor
movzx
test
je
or
mov
jmp
test
je
or
mov
mov
jmp
mov
inc
cmp
jb
jmp
lea
mov
xor
sub
mov
lea
add
lea
cmp
ja
or
mov
add
jmp
cmp
ja
or
mov
sub
mov
jmp
mov
inc
cmp
jb
mov
pop
xor
pop
call
leave
ret
push
push
call
call
mov
mov
test
je
cmp
je
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
and
mov
mov
cmp
je
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
mov
mov
mov
push
call
mov
call
jmp
mov
push
call
pop
ret
mov
push
mov
mov
push
mov
mov
test
jne
call
mov
mov
mov
mov
mov
mov
cmp
je
mov
test
jne
call
mov
mov
cmp
je
mov
mov
test
jne
call
mov
mov
test
jne
or
mov
jmp
mov
mov
mov
mov
mov
pop
pop
ret
mov
push
mov
sub
push
xor
push
lea
call
mov
cmp
jne
mov
call
cmp
je
mov
and
jmp
cmp
jne
mov
call
jmp
cmp
jne
mov
mov
mov
jmp
cmp
je
mov
and
mov
pop
leave
ret
mov
push
mov
sub
mov
xor
mov
push
mov
push
mov
push
call
mov
xor
mov
cmp
jne
mov
call
xor
jmp
mov
xor
cmp
je
inc
add
cmp
jb
cmp
je
cmp
je
movzx
push
call
test
je
lea
push
push
call
test
je
push
lea
push
push
call
xor
inc
add
mov
mov
cmp
jbe
cmp
je
lea
mov
test
je
movzx
movzx
jmp
push
lea
push
push
call
mov
add
imul
mov
lea
mov
jmp
mov
test
je
movzx
movzx
jmp
mov
mov
or
movzx
inc
cmp
jbe
mov
inc
inc
cmp
jne
mov
inc
add
cmp
mov
jb
mov
mov
mov
call
push
mov
lea
lea
pop
mov
inc
mov
inc
inc
inc
dec
jne
mov
call
jmp
or
inc
cmp
jbe
inc
inc
cmp
jne
lea
mov
or
inc
dec
jne
mov
call
mov
mov
jmp
mov
xor
movzx
mov
shl
or
lea
stos
stos
stos
jmp
cmp
jne
or
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
or
call
mov
mov
call
mov
mov
call
mov
cmp
je
push
call
pop
mov
test
je
mov
mov
mov
rep
and
push
push
call
pop
pop
mov
test
jne
mov
push
call
test
jne
mov
cmp
je
push
call
pop
mov
push
mov
call
test
jne
test
jne
push
call
pop
and
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
push
call
test
jne
mov
cmp
je
push
call
pop
mov
push
call
mov
call
jmp
push
call
pop
ret
jmp
cmp
jne
cmp
je
push
call
pop
call
mov
jmp
and
mov
call
ret
cmp
jne
push
call
pop
mov
xor
ret
mov
push
mov
mov
mov
imul
add
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
pop
ret
mov
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
mov
test
jne
push
lea
mov
mov
mov
mov
mov
mov
test
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
dec
jne
mov
and
jmp
lea
shr
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
mov
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
not
and
dec
jne
mov
and
jmp
lea
shr
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmp
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
mov
cmp
jae
cmp
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmp
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
dec
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
and
mov
mov
dec
mov
mov
cmp
jne
and
mov
cmp
jne
push
push
push
call
mov
push
push
push
call
mov
mov
imul
mov
sub
lea
push
lea
push
push
call
mov
add
dec
cmp
jbe
sub
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
push
mov
push
xor
cmp
jne
add
imul
push
push
push
push
call
cmp
jne
xor
jmp
add
mov
mov
imul
add
push
push
push
call
mov
cmp
je
push
push
push
push
call
mov
cmp
jne
push
push
push
call
jmp
or
mov
mov
inc
mov
or
mov
pop
pop
ret
mov
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
add
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
mov
cmp
ja
mov
sub
shr
lea
inc
or
or
lea
mov
lea
mov
mov
mov
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
and
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
mov
cmp
jbe
push
pop
mov
mov
cmp
jne
mov
cmp
jae
shr
mov
lea
not
and
dec
jne
mov
and
jmp
add
shr
mov
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmp
jle
mov
mov
sar
dec
lea
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
mov
cmp
jae
cmp
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmp
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
mov
mov
cmp
jbe
push
pop
test
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
dec
jne
mov
and
jmp
lea
shr
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
mov
cmp
jae
cmp
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmp
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
mov
imul
add
add
and
mov
sar
push
dec
cmp
push
push
jge
or
shr
or
jmp
add
or
xor
shr
mov
mov
mov
jmp
mov
mov
and
and
or
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
mov
cmp
jb
cmp
jne
jmp
cmp
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmp
jne
add
mov
cmp
jb
cmp
jne
call
mov
mov
test
jne
xor
jmp
push
call
pop
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
je
mov
mov
and
and
or
jne
and
mov
lea
mov
and
and
or
jne
inc
mov
add
jmp
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
add
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
dec
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
dec
mov
jne
mov
mov
and
jmp
mov
cmp
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmp
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmp
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
lea
mov
test
jne
cmp
jne
mov
cmp
jne
and
mov
mov
lea
pop
pop
pop
leave
ret
cmp
jne
repz
jmp
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
push
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmp
jne
push
mov
call
mov
mov
call
jmp
pop
add
pop
pop
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
push
push
push
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
push
push
push
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
push
call
add
pop
ret
mov
push
mov
sub
mov
xor
mov
test
push
je
push
call
pop
call
test
je
push
call
pop
test
je
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
lea
mov
mov
mov
mov
push
mov
lea
push
push
call
lea
add
mov
lea
push
mov
mov
mov
call
lea
push
call
push
call
int3
and
ret
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
test
jne
cmp
jb
cmp
je
jmp
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
push
call
xor
mov
xor
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
cmp
jne
push
call
pop
mov
push
call
pop
mov
cmp
je
mov
sub
mov
jmp
mov
mov
call
cmp
jne
push
push
push
call
mov
mov
call
ret
xor
mov
mov
push
call
pop
ret
push
call
pop
ret
mov
push
mov
mov
test
je
sub
cmp
jne
push
call
pop
pop
ret
push
push
call
and
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
mov
call
mov
call
ret
push
call
pop
ret
mov
push
mov
push
mov
cmp
ja
push
push
mov
cmp
jne
call
push
call
push
call
pop
pop
mov
cmp
jne
test
je
mov
jmp
xor
inc
push
jmp
cmp
jne
push
call
pop
test
jne
test
jne
inc
add
and
push
push
push
call
mov
test
jne
push
pop
cmp
je
push
call
pop
test
je
mov
jmp
call
mov
call
mov
pop
mov
pop
jmp
push
call
pop
call
mov
xor
pop
pop
ret
push
push
call
mov
xor
cmp
jbe
push
pop
xor
div
cmp
sbb
inc
jne
call
mov
push
push
push
push
push
call
add
xor
jmp
imul
mov
mov
cmp
jne
xor
inc
xor
mov
cmp
ja
cmp
jne
add
and
mov
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
mov
call
mov
cmp
je
push
push
push
call
add
cmp
jne
push
push
push
call
mov
cmp
jne
cmp
je
push
call
pop
test
jne
mov
cmp
je
mov
jmp
xor
mov
push
call
pop
ret
cmp
jne
mov
cmp
je
mov
mov
call
ret
push
push
call
mov
test
jne
push
call
pop
jmp
mov
test
jne
push
call
pop
jmp
cmp
jne
xor
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
cmp
jb
mov
push
push
push
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
push
call
mov
cmp
je
mov
dec
cmp
jb
mov
push
push
push
call
push
push
call
add
mov
call
cmp
jne
test
jne
inc
add
and
mov
push
push
push
push
call
mov
jmp
mov
mov
push
call
pop
ret
mov
test
jne
cmp
je
push
call
pop
test
jne
call
cmp
jne
mov
call
push
call
pop
mov
jmp
test
jne
call
cmp
je
mov
jmp
test
jne
inc
push
push
push
push
call
mov
test
jne
cmp
je
push
call
pop
test
je
cmp
jbe
push
call
pop
call
mov
xor
call
ret
call
jmp
test
jne
call
mov
call
push
call
mov
pop
mov
jmp
push
mov
sub
mov
mov
mov
mov
mov
shr
jmp
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
mov
mov
mov
pop
ret
push
mov
sub
mov
mov
mov
mov
mov
cdq
mov
mov
xor
sub
and
xor
sub
cdq
mov
xor
sub
and
xor
sub
mov
or
jne
mov
mov
and
mov
cmp
je
sub
push
push
push
call
add
mov
mov
test
je
mov
mov
add
sub
mov
add
sub
mov
mov
mov
mov
rep
mov
jmp
cmp
jne
neg
add
mov
mov
mov
mov
rep
mov
add
mov
add
mov
sub
push
push
push
call
add
mov
jmp
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
mov
mov
mov
pop
ret
push
push
call
and
movapd
mov
jmp
mov
mov
mov
cmp
je
cmp
je
xor
ret
xor
inc
ret
mov
and
mov
mov
call
ret
mov
push
mov
sub
xor
push
mov
mov
mov
push
pushf
pop
mov
xor
push
popf
pushf
pop
sub
je
push
popf
xor
cpuid
mov
mov
mov
mov
mov
cpuid
mov
mov
pop
test
je
call
test
je
xor
inc
jmp
xor
pop
leave
ret
call
mov
xor
ret
mov
push
mov
push
mov
test
je
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
mov
push
mov
push
push
mov
xor
mov
mov
push
push
xor
push
mov
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
cmp
push
push
push
setne
push
lea
push
push
call
mov
cmp
je
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
mov
jmp
push
call
pop
cmp
je
mov
add
mov
test
je
lea
push
push
push
call
add
push
push
push
push
push
push
call
test
je
push
push
push
push
call
mov
push
call
mov
pop
jmp
xor
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
push
push
push
call
mov
add
cmp
je
mov
push
push
push
push
push
call
mov
cmp
je
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
mov
push
mov
sub
mov
xor
mov
push
push
xor
push
mov
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
mov
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
mov
sub
dec
cmp
jge
inc
mov
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
cmp
push
push
push
setne
push
lea
push
push
call
mov
cmp
je
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
mov
jmp
push
call
pop
cmp
je
mov
add
mov
jmp
mov
cmp
je
push
push
push
push
push
push
call
test
je
mov
push
push
push
push
push
push
call
mov
mov
cmp
je
test
je
cmp
je
cmp
jg
push
push
push
push
push
push
call
jmp
cmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
mov
add
jmp
push
call
pop
cmp
je
mov
add
mov
jmp
xor
cmp
je
push
push
push
push
push
push
call
test
je
push
push
cmp
jne
push
push
jmp
push
push
push
push
push
push
call
mov
push
call
pop
push
call
mov
pop
jmp
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
push
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
push
push
push
call
add
mov
cmp
je
mov
push
push
push
push
push
push
call
mov
cmp
jne
xor
jmp
jle
cmp
ja
add
cmp
ja
call
mov
cmp
je
mov
add
jmp
push
call
pop
cmp
je
mov
add
mov
jmp
xor
cmp
je
push
push
push
call
add
push
push
push
push
push
push
call
mov
cmp
jne
xor
jmp
push
lea
push
push
push
push
push
call
mov
mov
add
neg
sbb
and
push
call
pop
jmp
push
push
push
push
push
push
call
mov
cmp
je
push
call
pop
mov
cmp
je
cmp
je
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmp
je
push
push
and
and
cmp
pop
pop
jne
pop
pop
pop
jmp
test
jne
shr
and
cmp
jb
rep
jmp
nop
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
clc
aad
add
inc
add
inc
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
retf
(bad)
inc
add
(bad)
inc
add
(bad)
inc
add
(bad)
inc
add
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
inc
add
(bad)
inc
add
(bad)
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
inc
add
xlat
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
inc
add
inc
add
inc
add
inc
add
add
add
add
inc
add
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sbb
add
fadd
lods
fadd
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmp
jne
push
call
pop
push
call
push
call
leave
ret
int3
push
mov
push
push
push
push
push
push
push
push
call
pop
pop
pop
pop
mov
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
push
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmp
je
cmp
jbe
lea
mov
mov
mov
cmp
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
push
mov
sub
mov
mov
mov
shr
pxor
jmp
lea
nop
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
dec
jne
mov
mov
pop
ret
push
mov
sub
mov
mov
cdq
mov
xor
sub
and
xor
sub
test
jne
mov
mov
and
mov
cmp
je
sub
push
push
call
add
mov
mov
test
je
add
sub
mov
xor
mov
mov
rep
mov
jmp
neg
add
mov
xor
mov
mov
rep
mov
mov
mov
add
sub
push
push
push
call
add
mov
mov
mov
pop
ret
mov
push
mov
sub
push
push
lea
call
mov
lea
cmp
ja
mov
mov
movzx
jmp
mov
sar
lea
push
mov
and
push
call
pop
pop
test
je
mov
push
mov
mov
mov
pop
jmp
xor
mov
mov
inc
mov
push
push
push
lea
push
push
lea
push
lea
push
push
call
add
test
jne
cmp
je
mov
and
xor
jmp
movzx
and
cmp
je
mov
and
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
and
add
sbb
or
pop
jmp
push
lea
sub
and
add
sbb
or
pop
jmp
mov
push
mov
sub
push
lea
call
movzx
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
mov
push
mov
push
push
push
call
add
pop
ret
mov
push
mov
sub
mov
xor
mov
push
lea
push
push
push
mov
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
mov
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
push
mov
mov
push
mov
mov
push
xor
mov
mov
mov
cmp
je
mov
lea
push
push
call
mov
test
je
cmp
jne
lea
push
push
call
test
je
cmp
jne
mov
mov
cmp
jne
push
call
mov
pop
inc
cmp
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
mov
jmp
push
push
push
push
push
push
call
mov
cmp
jne
xor
jmp
push
call
pop
cmp
je
mov
add
mov
jmp
mov
cmp
je
lea
push
push
push
call
add
push
push
push
push
push
push
call
test
je
mov
cmp
je
push
push
push
push
push
push
push
push
call
test
je
mov
jmp
mov
cmp
jne
push
push
push
push
push
push
push
push
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
push
call
cmp
jne
push
call
pop
mov
jmp
cmp
je
mov
mov
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
sbb
not
and
mov
and
cmp
jb
mov
pop
xchg
mov
mov
ret
sub
test
jmp
mov
push
mov
sub
push
push
push
lea
call
mov
mov
xor
cmp
je
mov
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
xor
jmp
cmp
je
cmp
jl
cmp
jg
mov
push
mov
mov
lea
cmp
jle
lea
push
movzx
push
push
call
mov
add
jmp
mov
movzx
movzx
and
test
je
mov
inc
jmp
cmp
jne
or
jmp
cmp
jne
mov
inc
mov
test
jl
cmp
je
cmp
jg
test
jne
cmp
je
mov
jmp
mov
cmp
je
cmp
je
mov
jmp
mov
jmp
cmp
jne
cmp
jne
mov
cmp
je
cmp
jne
inc
mov
inc
mov
mov
xor
div
movzx
movzx
test
je
movsx
sub
jmp
test
je
mov
sub
cmp
movsx
ja
sub
add
cmp
jae
or
cmp
jb
jne
cmp
jbe
or
cmp
jne
mov
dec
test
jne
cmp
je
mov
and
jmp
mov
imul
add
mov
mov
inc
jmp
mov
test
jne
test
jne
and
je
cmp
ja
test
jne
cmp
jbe
call
test
mov
je
or
jmp
test
push
pop
setne
add
mov
mov
test
je
mov
test
je
neg
cmp
je
mov
and
mov
jmp
mov
test
je
mov
cmp
je
mov
and
xor
pop
pop
pop
leave
ret
mov
push
mov
xor
push
push
push
push
cmp
jne
push
jmp
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mul
mov
mov
mul
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mul
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
