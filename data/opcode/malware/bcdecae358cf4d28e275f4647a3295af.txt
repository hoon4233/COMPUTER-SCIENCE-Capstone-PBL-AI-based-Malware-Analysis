(bad)
(bad)
call
in
push
mov
push
call
test
jne
mov
push
push
push
call
add
(bad)
jo
shl
or
jne
mov
pop
pop
ret
xor
jmp
je
(bad)
cld
push
push
add
rcl
jne
imul
mov
(bad)
fcomp
sar
leave
ret
dec
sub
push
retf
mov
mov
mov
add
fisttp
mov
mov
(bad)
dec
cld
clc
ret
mov
adc
xchg
pop
sub
sub
mov
mov
xor
rcr
push
fmul
or
or
pop
mov
lea
aaa
in
lock
ja
add
mov
std
dec
jle
ja
lahf
mov
push
lea
iret
and
test
test
mov
ja
mov
xor
inc
mov
fdivr
ret
sbb
jb
mov
mov
push
add
in
xlat
fiadd
les
stos
in
movs
pop
pop
ins
pop
xor
and
int3
jmp
leave
dec
lock
jae
scas
sti
in
add
and
mov
rcl
mov
cmp
iret
or
adc
iret
sti
jg
pop
cmc
int
fsub
out
inc
and
mov
rcl
sub
xor
and
xor
inc
adc
sbb
in
loopne
pusha
test
or
and
xor
add
(bad)
fisubr
xor
adc
lods
idiv
je
pop
shl
push
arpl
pop
and
sahf
xor
pop
mov
push
rcpps
add
mov
les
mov
cmp
and
cwde
adc
out
(bad)
jns
adc
fist
les
and
cmps
adc
out
push
(bad)
push
sbb
repz
or
cmp
adc
dec
pop
jmp
cmp
(bad)
mov
dec
inc
xor
leave
movs
repz
lds
shl
je
mov
inc
mov
dec
add
and
je
add
sub
sub
icebp
xor
into
cmp
call
jbe
mov
or
int3
add
mov
add
aam
inc
iret
ret
int3
or
inc
mov
mov
push
sbb
jb
jbe
add
imul
xlat
push
mov
add
inc
pop
push
or
mov
or
inc
mov
mov
push
adc
adc
or
sbb
jne
dec
ja
push
jbe
cld
pusha
xchg
jno
xor
mov
sete
pop
test
sbb
or
enter
into
xor
call
or
xchg
pop
into
into
inc
fs
push
dec
and
jno
sub
inc
xor
nop
loope
xor
add
call
mov
and
xor
fstp
idiv
sbb
or
mov
sbb
out
data16
in
dec
sbb
arpl
fcmovnu
inc
fmul
push
(bad)
sahf
fimul
mov
sbb
push
cmp
or
test
repnz
sahf
xchg
pop
sub
jmp
paddsb
outs
mov
shl
or
mov
out
fbld
sbb
and
sub
fstp
push
(bad)
and
push
ja
sub
daa
mov
scas
mov
xor
cwde
add
and
jmp
or
pop
cmp
rol
inc
push
or
sub
or
imul
pusha
daa
ins
les
test
inc
xor
sub
sbb
sub
push
mov
hlt
cmp
ins
push
pop
(bad)
jmp
mov
and
mov
and
xchg
jb
adc
movs
sbb
push
add
and
jo
and
jo
adc
sbb
in
jp
pusha
or
cmp
add
std
(bad)
imul
push
pusha
mov
and
out
iret
add
rol
ds
sti
movs
loopne
cdq
dec
or
inc
sub
iret
mov
sub
mov
push
pop
in
or
push
iret
jnp
sub
jo
je
in
mov
es
rol
sub
adc
or
je
sbb
fiadd
mov
xchg
mov
xor
mov
shl
fsubrp
adc
or
mov
in
push
int3
jl
sbb
inc
mov
fsubr
in
jle
add
int3
(bad)
int
loope
in
push
lock
mov
xor
repnz
retf
in
in
sbb
add
cs
xchg
retf
cwde
add
cld
add
mov
clc
xchg
sub
cld
add
lods
ins
mov
icebp
cmc
mov
dec
jbe
pop
inc
adc
and
ror
ins
in
xor
inc
sub
or
enter
or
lods
clc
and
sbb
or
adc
addr16
jns
sbb
sub
sahf
xchg
xor
cmp
inc
enter
mov
dec
mov
iret
fcom
ret
pop
hlt
jns
out
sbb
pop
and
adc
fmulp
enter
push
xchg
aaa
repnz
inc
retf
sub
mov
mov
jns
sahf
xchg
pushf
aam
in
(bad)
enter
or
mov
inc
in
add
cmps
jge
pop
bound
cmp
push
shl
mov
cmp
mov
and
sub
lock
out
pop
jg
das
je
dec
cmp
fistp
jmp
lds
lea
sar
mov
imul
sbb
pop
pop
add
xchg
add
mov
retf
fldcw
lea
cmp
jle
jmp
(bad)
and
add
enter
sub
clc
sti
fistp
sub
inc
xor
mov
cmp
out
fld
jecxz
push
lea
mov
(bad)
loopne
add
xchg
and
pop
xor
add
cdq
sbb
xor
xlat
push
popa
rcr
xchg
add
cmp
push
pusha
mov
int3
fmul
jg
sub
adc
dec
xor
(bad)
fisubr
or
inc
mov
in
mov
clc
pop
cvtps2pi
mov
jbe
sub
dec
cmp
inc
sbb
adc
xchg
shr
cmp
stos
es
test
adc
outs
sti
pop
adc
sbb
imul
out
lea
setbe
jmp
xchg
push
xchg
(bad)
push
pop
vmread
fiadd
cdq
test
dec
push
fist
js
push
hlt
push
mov
mov
icebp
mov
test
je
push
sbb
push
icebp
(bad)
loop
push
int3
cmp
mov
push
and
or
fcomip
(bad)
adc
sub
dec
je
dec
sub
je
aas
loop
xor
or
add
call
sub
add
add
lea
mov
into
(bad)
mov
jmp
xchg
jne
mov
imul
mov
mov
pop
aam
data16
(bad)
ret
mov
test
dec
adc
(bad)
dec
add
add
dec
in
stos
inc
inc
inc
ds
mov
add
loope
pusha
pop
sar
add
out
jg
pop
or
mov
sbb
mov
or
xlat
and
pop
pop
or
mov
sbb
pusha
push
mov
jno
push
sbb
cwde
jo
fs
ja
push
and
pop
jb
lea
(bad)
dec
pushf
xchg
js
inc
dec
mov
cmp
mov
clc
aas
nop
inc
cmp
jge
cdq
iret
mov
ins
clc
adc
or
add
shr
lock
out
push
(bad)
sub
push
push
push
mov
div
mov
dec
jno
push
pop
fmul
jne
lock
and
add
and
fcom
pop
mov
jge
shl
push
sbb
lea
mov
jge
push
fistp
in
dec
dec
xlat
dec
stos
cld
push
icebp
push
mov
cmps
mov
mov
inc
je
or
sbb
movs
je
lods
mov
adc
daa
mov
inc
or
loope
sbb
sbb
ficom
and
adc
in
lock
mov
mov
mov
loopne
pop
dec
or
call
xchg
fs
mov
push
jns
xchg
dec
pop
adc
ficom
movs
dec
pop
and
push
push
cmp
and
push
fdivr
inc
mov
in
not
push
cld
add
cmp
test
sbb
in
mov
or
enter
mov
sbb
mov
push
adc
pop
cmp
dec
data16
mov
sub
dec
cli
ror
push
ficomp
pop
cmp
or
pop
nop
cwde
sbb
(bad)
cmps
(bad)
pop
ret
adc
mov
push
inc
jb
jge
jns
lock
lock
fnstcw
push
lea
cdq
lea
rcl
push
loopne
pop
push
push
pop
xor
popa
shl
loopne
xor
inc
movs
rol
je
jbe
je
inc
cmp
jl
or
dec
cmp
mov
mov
leave
lock
and
daa
(bad)
jp
ret
xor
jmp
jmp
pop
dec
adc
shl
lods
retf
push
clc
aas
jge
clc
or
fcmovnbe
or
or
push
and
mov
mov
cmp
(bad)
test
aam
std
movs
mov
dec
push
hlt
add
bnd
(bad)
jg
push
jmp
push
pop
add
or
fcom
ins
and
add
xor
and
or
pop
arpl
push
and
or
aaa
lahf
push
lea
sar
push
dec
jle
inc
xor
sub
xchg
mov
sbb
sar
dec
shl
hlt
push
lea
push
jl
mov
xor
or
jmp
xor
cld
iret
pop
mov
cmp
je
push
clc
mov
jbe
push
add
or
sub
mov
mov
in
xchg
add
or
add
mov
leave
push
pop
je
loop
nop
shl
or
push
xchg
cmp
or
pop
sahf
enter
sbb
cmp
ror
adc
xor
jmp
push
lea
xor
stos
adc
jae
push
(bad)
in
sub
adc
sub
out
ins
out
xchg
sub
sbb
in
ins
outs
pop
add
push
adc
rcr
push
shl
jno
enter
pop
ret
and
mov
aad
sahf
add
pop
inc
xor
(bad)
cmp
inc
(bad)
leave
ret
jle
pop
or
mov
add
push
adc
dec
add
dec
leave
and
mov
pushf
lods
mov
in
ds
aam
popa
out
cld
push
add
nop
or
inc
inc
sbb
cld
mov
cmp
dec
icebp
push
lea
cmp
test
push
mov
mov
jb
add
fs
push
fldln2
sbb
loopne
cmp
and
or
sbb
add
enter
add
dec
fiadd
cmp
in
mov
nop
pop
cs
retf
xchg
cwde
pushf
mov
jmp
add
les
in
jge
enter
aam
add
fmul
loopne
stc
cs
in
in
pop
lock
mov
repnz
add
add
in
push
add
or
adc
retf
in
sbb
and
or
mov
sub
sub
cmp
repz
adc
cmp
cmp
out
add
add
or
sti
fild
mov
adc
mov
call
in
lock
cld
les
lods
add
je
jl
les
mov
pusha
mov
pop
retf
in
mov
imul
mov
shl
ins
push
or
test
rcl
cmp
push
scas
test
push
ins
sub
(bad)
cli
out
sub
push
pop
mov
sub
fild
or
cdq
popa
xchg
out
(bad)
lock
add
add
push
jne
rep
or
or
or
mov
pop
add
enter
fldcw
mov
adc
jle
stos
es
sbb
ds
pop
fcmovbe
in
and
xor
push
js
stos
inc
stos
daa
lock
mov
mov
loop
imul
or
mov
(bad)
jmp
push
shl
adc
cmps
std
sbb
xor
jp
data16
jle
add
or
add
je
cmc
adc
jns
pop
xor
inc
dec
cld
repnz
into
jl
push
ins
aaa
jo
push
xor
lock
clc
je
fcomp
or
xor
retf
xor
or
adc
sbb
pop
or
cmc
call
or
test
push
pop
pcmpeqb
jp
sbb
iret
pop
jg
push
paddb
inc
cmp
xchg
add
jmp
jnp
stc
push
and
fwait
(bad)
mov
pop
sbb
inc
adc
adc
sbb
lea
and
inc
push
inc
xor
adc
xchg
adc
mov
sub
mov
push
adc
popa
shl
push
sub
pop
or
sbb
je
push
pop
imul
add
mov
adc
popa
inc
mov
push
push
jp
es
jp
pop
(bad)
push
push
sub
push
rcl
mov
sub
and
and
js
or
ins
punpckhbw
inc
add
addr16
jb
mov
or
jecxz
add
lds
xor
enter
push
repz
jecxz
jne
dec
mov
les
push
and
ror
test
push
call
(bad)
or
adc
pop
push
jmp
push
add
and
add
pop
pop
jmp
inc
add
xor
mov
icebp
lods
sbb
icebp
mov
pop
repz
or
sbb
push
sub
pop
jg
push
outs
or
pop
inc
or
inc
cmp
aaa
push
add
xor
add
mov
mov
mov
cmp
add
adc
xor
scas
sbb
inc
mov
test
push
cmp
xchg
cmp
das
inc
jo
test
lea
cmp
ja
mov
lock
xchg
add
shl
lea
hlt
ds
inc
dec
push
imul
and
popf
sbb
out
pop
sahf
pop
and
les
inc
ds
push
sbb
mov
mov
(bad)
push
(bad)
jnp
xchg
adc
xchg
xor
sub
aas
mov
scas
dec
call
and
jmp
lea
push
push
out
je
sbb
data16
sti
jmp
stos
sbb
cmps
je
or
push
ret
add
mov
fmul
mov
lea
(bad)
loopne
adc
rol
mov
sub
mov
inc
or
mov
jle
sbb
cmc
or
adc
int
enter
scas
hlt
cmp
jb
mov
mov
into
push
jmp
cmp
pop
inc
xor
jmp
push
outs
sbb
scas
(bad)
jecxz
hlt
into
addr16
inc
stc
cmp
adc
fist
mov
lock
and
jmp
stos
ret
pop
cmp
push
(bad)
sbb
inc
mov
mov
mov
inc
push
test
push
jmp
xor
das
push
push
add
into
or
ficomp
cmp
and
push
or
mov
add
or
and
loop
push
pop
push
push
lock
ja
stc
cmp
int
xchg
jmp
in
daa
outs
rcl
pushf
ds
inc
shr
cwde
jecxz
push
sbb
cmp
dec
mov
ror
jl
sahf
push
cmp
ins
and
lea
cwde
or
scas
outs
les
or
sbb
iret
rcr
fs
push
push
std
push
mov
push
ja
mov
push
mov
loopne
push
xchg
pop
adc
loopne
mov
arpl
jno
lahf
shl
(bad)
(bad)
push
test
push
dec
jns
sub
fsubr
mov
cmps
mov
rcr
ret
call
outs
cmp
cmp
add
mov
imul
push
je
or
movs
push
sbb
movs
hlt
and
in
pop
loope
sbb
(bad)
inc
cmp
cmp
mov
jg
clc
fsub
lahf
xor
pop
ret
cmp
repnz
pushf
jo
push
ja
dec
push
cmp
arpl
jno
fistp
psadbw
adc
(bad)
es
(bad)
cld
call
sub
shr
sub
mov
mov
add
and
out
inc
add
jno
adc
cmc
cmp
push
jo
sub
xor
aaa
mov
call
sbb
add
outs
adc
(bad)
out
adc
add
cmps
(bad)
and
data16
sbb
adc
movhlps
and
ins
cmp
adc
loopne
inc
add
mov
mov
mov
push
bound
lahf
in
jecxz
cld
xchg
das
adc
cmp
jl
mov
sar
in
and
push
in
push
sub
scas
sbb
and
js
pop
in
fucomi
dec
or
mov
fisttp
retf
adc
cmc
test
push
xor
or
sbb
push
ret
push
shl
iret
sbb
mov
mov
mov
jp
xor
fdiv
add
jmp
fidivr
pop
jne
dec
shl
ins
sub
sahf
mov
ja
jl
or
fsubr
out
mov
(bad)
std
pop
add
mov
mov
out
and
or
sub
push
(bad)
inc
scas
in
xor
sti
mov
pop
stos
push
(bad)
sbb
and
xor
or
test
xchg
outs
push
cld
jo
fisttp
test
sbb
sbb
ds
or
mov
lahf
mov
adc
and
cmp
sbb
imul
into
sbb
push
clc
add
(bad)
and
out
mov
push
mov
push
lea
cmp
stos
and
inc
mov
sbb
mov
mov
dec
loopne
mov
bound
sub
movs
mov
lods
push
out
vpmacssdql
mov
dec
inc
std
and
xor
fst
fcom
dec
adc
add
ins
into
adc
loopne
and
(bad)
sub
les
sahf
adc
lods
rcr
xchg
test
ins
mov
shl
and
adc
add
in
pop
pusha
in
sti
out
bound
cmp
add
and
rcr
lahf
(bad)
or
xlat
xchg
inc
fsubr
inc
cmp
jmp
punpckhdq
mov
call
cmp
dec
leave
icebp
lods
lea
ds
sub
cmps
mov
mov
xor
xor
mov
dec
mov
rol
lea
jmp
add
pushf
es
push
mov
xor
js
mov
sub
aaa
sbb
pusha
jne
mov
mov
call
jne
dec
test
cmp
jno
and
dec
scas
and
nop
adc
jmp
leave
and
push
sub
in
call
push
frstor
cdq
movs
sbb
mov
dec
dec
ins
jle
iret
imul
fst
sti
int
pop
push
fnsave
jmp
test
dec
sti
sbb
retf
push
xor
in
mov
imul
sbb
mov
jl
jae
inc
sbb
lock
push
xor
ss
jne
je
and
pop
test
adc
div
and
jg
fcomp
sbb
mov
push
js
or
mov
ds
or
inc
jl
jne
jno
pop
retf
add
cmp
dec
out
mov
sub
xchg
jg
xor
jb
or
cmc
add
pop
fisubr
hlt
popf
outs
sub
sbb
jmp
mov
xchg
cmp
dec
ins
inc
imul
add
rcl
push
fcom
jl
pop
das
xchg
mov
sub
or
adc
rcl
pop
adc
ret
add
sub
call
clc
mov
push
push
jbe
mov
push
jp
cmp
call
or
mov
repnz
adc
popa
push
bound
and
(bad)
jg
cmps
ret
adc
clc
push
or
rol
or
add
jns
pop
cmps
cld
xlat
test
push
and
inc
jne
dec
dec
adc
push
test
(bad)
xchg
(bad)
or
aas
mov
push
adc
fs
mov
sub
or
mov
mov
xchg
push
and
push
push
mov
dec
call
mov
or
ret
or
fldcw
aaa
pop
adc
inc
and
fsub
aaa
cld
stos
dec
cmp
jne
cmp
jbe
(bad)
sub
fstp
test
pop
out
dec
dec
and
cmc
cs
inc
cmp
out
out
mov
imul
mov
adc
add
adc
and
fld
mov
jecxz
xor
dec
je
adc
(bad)
and
in
retf
push
clc
or
pop
or
inc
or
or
ret
(bad)
int
adc
inc
(bad)
(bad)
rcr
cmp
jne
iret
jbe
shl
clc
mov
sbb
jno
push
outs
adc
stos
test
add
add
add
push
in
js
sub
cld
(bad)
xchg
fs
dec
dec
add
mov
xor
out
sub
(bad)
adc
shl
push
les
or
adc
div
dec
mov
jno
jbe
pushf
adc
arpl
mov
xor
add
not
xchg
call
iret
push
mov
xor
loop
fdiv
sbb
mov
jo
ror
outs
xchg
mov
shl
enter
pusha
sbb
hlt
mov
jge
hlt
sub
inc
sub
pop
push
mov
push
out
mov
sti
jmp
clc
jmp
push
cmp
mov
shl
add
sbb
mov
inc
mov
hlt
clc
mov
or
nop
xor
inc
aad
add
cmp
and
mov
and
jbe
xchg
mov
in
(bad)
pop
popf
cmp
test
cld
or
call
mov
push
push
sbb
sahf
and
cld
cld
mov
push
or
dec
in
(bad)
aad
add
add
pop
push
or
(bad)
cmc
adc
push
sub
shl
xor
cmp
fsubr
jg
pop
cld
sbb
sub
(bad)
xor
icebp
inc
dec
xor
push
sbb
add
cmp
test
push
push
xor
retf
mov
int
mov
push
and
inc
(bad)
push
dec
xchg
cmp
cmp
jle
out
push
movs
push
or
cmp
icebp
or
into
in
js
pusha
dec
daa
mov
xlat
enter
or
es
clc
rcl
call
pop
xor
pop
adc
dec
cmp
jl
pop
retf
xchg
loopne
sbb
in
pusha
adc
mov
jg
pusha
adc
jo
fcom
stos
cli
cmp
jbe
mov
jl
ins
or
cdq
ds
pop
jo
ror
jmp
inc
jb
jmp
jecxz
ret
lock
dec
fcmovnu
add
aam
imul
xchg
(bad)
pop
or
add
adc
adc
das
adc
je
cli
push
pop
sub
add
xchg
mov
movs
ins
std
adc
leave
push
sub
addr16
sub
movs
mov
cmp
pop
xor
push
sub
adc
mov
mov
xlat
je
jmp
punpckhdq
gs
pop
iret
xchg
xchg
out
inc
lods
xor
mov
bound
adc
jmp
mov
mov
test
test
arpl
fdivr
cmp
xor
add
test
leave
test
(bad)
(bad)
call
outs
add
inc
sti
jge
sbb
stc
push
or
imul
int
xor
loopne
xlat
jmp
es
fisttp
(bad)
push
push
cmp
push
push
imul
test
mov
or
xor
add
pusha
sbb
std
add
sub
dec
push
cmp
mov
aaa
scas
pop
clc
imul
add
clc
scas
push
push
mov
mov
jb
add
aas
clc
push
lock
pusha
imul
mov
push
inc
mov
call
icebp
test
push
dec
xor
sbb
cli
push
inc
(bad)
jmp
push
jmp
add
push
mov
mov
not
mov
sbb
arpl
adc
or
fdivr
(bad)
push
push
ja
adc
mov
into
or
mov
(bad)
call
xchg
and
mov
sbb
add
in
inc
call
push
(bad)
adc
(bad)
fimul
and
push
fadd
dec
in
mov
loopne
xchg
rcl
hlt
je
pop
fwait
mov
jo
and
dec
div
jb
jge
pop
adc
lock
pusha
das
dec
out
add
mov
retf
sub
xchg
mov
lods
sbb
sbb
aam
mov
stos
lock
push
lea
call
pop
in
test
int3
add
mov
iret
pop
std
lock
xor
cs
and
cmp
cld
outs
add
lods
push
add
push
pop
mov
push
aam
adc
div
or
daa
sbb
fcomp
rol
mov
fadd
in
mov
add
mov
ja
outs
mov
arpl
js
cld
adc
push
or
mov
pop
jecxz
pop
adc
cmp
push
loopne
cmp
push
sbb
cld
push
(bad)
push
mov
pop
imul
and
loop
pop
dec
aad
mov
mov
addr16
push
out
les
neg
add
jnp
mov
ret
addr16
mov
push
not
jbe
add
ret
push
or
push
and
sbb
push
adc
xor
pop
mov
push
retf
push
and
cwde
jb
mov
xlat
aad
test
lods
push
movs
out
repz
cmp
sbb
inc
cmp
cpuid
scas
cmps
sahf
test
not
in
sbb
(bad)
jmp
xchg
adc
jg
clc
mov
cld
xor
gs
loope
and
ret
mov
mov
fistp
out
mov
jge
fs
ds
lea
mov
sete
push
cli
xor
call
dec
cmp
sahf
cwde
or
xor
out
adc
pusha
scas
jnp
in
out
push
imul
or
sbb
js
adc
pop
jmp
cmp
cmp
les
push
adc
ss
loopne
push
mov
mov
cmp
jne
mov
add
outs
mov
(bad)
or
jl
or
loope
pop
add
stc
and
xchg
fld
jecxz
xor
sbb
xchg
int
pop
stc
repz
add
js
fs
jge
shr
das
repnz
cmp
and
fisttp
loop
outs
and
and
mov
aaa
push
jle
and
sub
nop
mov
or
in
pop
test
mov
add
sub
mov
lea
push
neg
add
mov
jle
adc
or
addr16
inc
cmp
jl
push
xchg
icebp
add
lods
fidivr
jnp
mov
lds
push
cmp
ss
xor
lea
sbb
jnp
cmp
xor
inc
push
push
inc
cld
push
js
in
push
xor
xor
sti
jl
lea
out
ss
mov
mov
fs
lea
fdivr
dec
push
(bad)
je
mov
(bad)
push
adc
xchg
or
cmp
jl
mov
ins
ja
mov
in
push
mov
add
cli
and
jbe
sbb
sub
add
sar
popf
add
push
mov
push
jmp
ret
fidivr
push
cld
add
jmp
out
mov
jne
adc
add
mov
or
outs
add
dec
rcl
jnp
sbb
adc
add
stos
or
into
je
shl
out
(bad)
je
and
mov
cdq
dec
mov
push
jb
pusha
and
(bad)
jne
into
das
cmp
mov
sbb
add
push
push
stc
jno
mov
mov
sti
div
or
call
sbb
cmp
jmp
or
inc
sub
call
push
push
inc
or
or
inc
sub
test
push
push
mov
scas
push
test
mov
test
jmp
ins
adc
sbb
adc
push
punpckhwd
sbb
dec
lock
inc
cmp
push
sbb
pop
aas
xor
cmp
jb
mov
cmp
push
(bad)
sbb
push
push
pop
cmp
jb
cmp
sub
rol
cmp
sub
cmp
xor
push
push
and
pop
xor
mov
xor
cmp
xor
fsubr
push
sub
sub
les
inc
xor
jle
adc
cmp
in
or
sti
jb
test
jne
mov
mov
rcr
and
sar
int
mov
cdq
sub
into
jg
jae
sbb
cmp
cmp
jl
jg
mov
rol
or
mov
adc
sub
fiadd
cmp
jg
jl
adc
fsubr
enter
push
pop
sub
mov
jmp
cmps
cmp
(bad)
inc
push
push
lock
adc
ret
test
shr
xchg
lds
(bad)
rol
pop
clc
lock
push
and
xor
push
cld
pushf
add
mov
add
(bad)
adc
xchg
xlat
push
clc
pop
ja
dec
mov
jne
pop
sub
daa
ret
jg
or
neg
push
clc
add
stos
jo
pop
bsf
scas
push
inc
or
cmp
add
fisttp
or
add
add
js
ret
ds
mov
test
je
mov
in
(bad)
cmp
jg
adc
repz
jbe
push
out
adc
hlt
nop
pop
xor
mov
cwde
jmp
test
imul
push
retf
fwait
daa
push
add
or
xor
hlt
ds
cmps
add
adc
mov
in
adc
ret
in
jmp
cmps
push
cmp
xchg
ds
cwde
ficomp
in
mov
aaa
lock
pop
shr
fisubr
add
sub
push
add
dec
jns
pop
or
add
aam
mov
pop
ja
sti
adc
pusha
mov
js
into
dec
or
imul
ins
cmp
ins
lock
mov
mov
nop
fldcw
(bad)
or
or
push
or
or
sbb
xor
xor
loop
aad
stos
pop
jl
cmp
adc
cld
movs
push
repz
mov
mov
inc
fwait
xor
push
mov
add
jo
push
retf
mov
or
mov
or
pop
ja
adc
sbb
sahf
js
and
add
mov
xor
cmp
inc
lods
jne
pop
inc
dec
push
inc
ror
repnz
push
pop
pop
pusha
data16
aad
adc
inc
jo
push
and
shl
inc
(bad)
cmp
pop
mov
adc
mov
jl
test
jbe
mov
es
test
adc
std
pop
ror
sbb
icebp
cmp
sub
pusha
cmp
mov
xchg
inc
enter
call
out
repnz
jb
and
loopne
xchg
xchg
mov
mov
push
das
add
cmp
fisttp
popf
and
retf
sbb
sub
test
fiadd
addr16
mov
or
aas
enter
pop
push
adc
inc
sub
dec
adc
or
adc
inc
and
je
test
push
mov
test
cmc
lock
push
xor
mov
sbb
or
pop
mov
movs
retf
mov
sbb
add
aaa
clc
cdq
test
mov
inc
cmp
cli
cmp
icebp
sub
add
enter
movs
retf
push
xlat
mov
add
in
push
add
setb
neg
or
push
sub
xor
imul
mov
jno
add
sti
and
cli
inc
hlt
adc
lods
or
cmp
cmp
call
cmp
stos
inc
mov
fisub
lods
add
imul
mov
add
out
inc
ss
mov
push
or
jmp
jmp
imul
pop
push
aaa
sbb
mov
jg
test
jo
shl
inc
cmp
add
adc
scas
stos
lock
ss
cmps
sub
inc
or
inc
or
xor
or
and
push
or
ret
xor
jmp
cwde
(bad)
pop
rcl
push
in
les
lahf
test
pop
inc
dec
or
mov
or
or
cmp
jle
fistp
aad
and
je
xor
or
mov
rol
push
mov
or
xor
push
xchg
mov
or
pushf
nop
sbb
mov
mov
jmp
dec
push
ds
add
pop
jmp
xor
jmp
rcr
(bad)
fidiv
and
test
jmp
sub
dec
js
dec
mov
xchg
push
and
(bad)
aaa
mov
jbe
push
cs
push
stos
mov
sub
jg
mov
inc
mov
cmp
mov
sbb
movs
pop
cld
xor
bt
and
cwde
add
or
fld
sbb
xor
mov
ins
xchg
adc
mov
cdq
mov
imul
sbb
jb
dec
ficom
sbb
test
aaa
push
cdq
add
xchg
shr
bound
in
adc
xor
pop
mov
pop
push
push
or
adc
(bad)
jp
add
cwde
or
mov
sbb
xor
lahf
aad
sbb
sahf
mov
jl
adc
pop
push
inc
addr16
outs
or
and
add
and
dec
inc
jp
xor
push
in
jmp
ss
iret
add
jo
jns
rcr
sbb
test
stos
pop
inc
fiadd
les
mov
lea
loopne
pop
test
add
adc
iret
push
cmp
push
dec
(bad)
cmp
dec
dec
ins
test
retf
in
fiadd
lahf
imul
cmp
cmp
inc
out
(bad)
leave
mov
rol
imul
popf
leave
push
bound
dec
inc
add
ins
mov
not
adc
push
jae
mov
aad
fwait
das
inc
icebp
popf
les
inc
sub
gs
inc
loopne
add
in
xlat
xchg
push
rol
aas
add
scas
or
mov
clc
cmp
lock
jns
popa
ret
inc
pop
pop
ret
arpl
(bad)
dec
fisub
jae
push
mov
or
and
test
dec
ja
rol
xor
aaa
and
cmp
mov
test
inc
sub
mov
adc
or
jnp
std
inc
loop
adc
sti
jnp
xchg
cmps
pop
pop
pop
sbb
js
pop
mov
mov
test
and
lods
inc
sbb
mov
test
je
push
enter
shl
push
fdivrp
inc
ficomp
push
call
je
lea
cmp
idiv
sbb
add
call
push
dec
pop
loope
loop
cwde
pop
or
dec
pop
inc
sbb
cmps
clc
mov
jne
pop
pop
ja
inc
lock
js
loope
jp
xchg
mov
das
je
add
inc
addr16
push
jmp
inc
out
cmp
push
fwait
xor
sbb
es
nop
arpl
add
mov
icebp
out
lfs
cwde
and
mov
arpl
sub
inc
inc
stos
mov
and
dec
or
repnz
ret
push
and
push
pusha
rol
shl
cmp
push
lea
jae
xor
pop
imul
cmp
data16
mov
jnp
fcomp
in
pop
pop
ret
iret
push
push
sti
dec
mov
mov
jae
mov
push
push
out
pusha
je
popa
inc
jo
out
add
sti
test
and
inc
cmp
and
mov
jo
inc
adc
aam
push
pop
cmp
lods
add
xchg
inc
dec
inc
and
ficomp
mov
mov
mov
addr16
mov
inc
je
sahf
mov
xor
inc
lods
ror
nop
xor
add
data16
ins
sub
jg
lahf
xor
mov
dec
dec
jne
jne
mov
mov
mov
mov
add
daa
jle
mov
not
jne
push
xor
fisttp
sub
je
dec
jne
hlt
inc
clc
pop
sub
lds
mov
dec
(bad)
enter
shl
sub
aam
or
mov
ss
push
adc
jmp
imul
sbb
test
ficomp
push
ret
xor
sub
and
cmp
jg
inc
inc
mov
or
jo
pop
das
imul
iret
je
pop
push
push
cld
or
inc
or
sahf
xor
inc
cmp
add
dec
(bad)
(bad)
mov
cmp
test
cs
sub
in
sbb
mov
in
inc
and
push
push
inc
into
call
cmp
pop
jp
pusha
pop
out
sub
adc
jno
fs
stc
xchg
retf
or
add
daa
dec
stos
test
je
push
repnz
(bad)
(bad)
cli
iret
test
adc
test
cmp
les
add
out
dec
or
inc
add
pop
mov
sbb
xor
or
rcl
mov
push
dec
(bad)
loope
inc
retf
dec
call
cmp
add
shl
pop
jo
lock
mov
jmp
icebp
rol
push
inc
push
adc
daa
inc
xchg
mov
mov
call
jmp
in
xchg
jmp
mov
jne
or
adc
push
mov
jne
cmp
icebp
xor
popa
xor
jg
int3
jle
lahf
xchg
lds
cwde
xchg
lods
jne
aam
aad
int3
retf
inc
jne
hlt
lahf
mov
hlt
push
add
push
adc
hlt
dec
push
int
jmp
test
sub
add
retf
or
mov
loope
push
jl
add
rcr
dec
fild
jge
js
dec
out
sbb
ror
lock
repz
fdiv
(bad)
fwait
dec
cmc
(bad)
cmp
mov
jmp
mov
shl
add
adc
mov
aad
xchg
xchg
add
sub
data16
add
lds
mov
xor
add
inc
add
clc
xor
shr
lea
xchg
mov
or
popf
into
or
rcr
push
add
adc
mov
jns
test
mov
xchg
cwde
mov
mov
add
out
les
push
rcl
out
fdivr
add
mov
or
sub
lock
xor
add
hlt
mov
jo
inc
mov
push
addr16
dec
nop
in
arpl
jle
dec
icebp
aas
push
not
sar
int3
movzx
push
add
out
lods
push
xor
and
ficomp
dec
scas
xchg
int3
ret
lock
adc
or
jge
and
or
xchg
test
inc
jno
pop
aad
ficom
mov
int
nop
pop
xchg
inc
add
pop
sub
dec
cli
int
xchg
push
iret
call
xor
push
or
or
push
pop
fistp
mov
jg
call
into
in
jb
cmp
push
or
push
push
idiv
jo
call
test
sbb
in
push
pop
out
mov
push
inc
inc
dec
adc
pop
xchg
loop
or
test
cmp
dec
dec
cmp
aam
leave
jle
lea
sbb
dec
inc
(bad)
mov
pop
cmp
ins
cdq
test
lods
(bad)
sbb
mov
sub
jmp
pop
rcl
and
shl
aas
xlat
icebp
ja
dec
aam
data16
push
movs
add
aam
aam
add
push
pop
push
xor
sbb
ret
retf
mov
in
push
push
fsub
je
and
gs
and
dec
mov
and
cmps
sbb
mov
loopne
nop
jne
xchg
test
popa
test
adc
jle
or
sbb
dec
mov
ficomp
jae
adc
jo
fbstp
jne
push
push
ret
dec
push
outs
push
js
mov
movs
nop
leave
leave
dec
jae
push
test
test
or
dec
and
inc
fcmove
and
lock
sub
mov
add
ret
in
xor
or
push
pop
(bad)
jge
fdivrp
iret
je
push
fadd
inc
out
mov
sub
xchg
cmps
mov
call
test
lds
test
push
jge
ds
fwait
or
in
jge
xchg
mov
jnp
xchg
in
imul
xchg
mov
aaa
rcl
mov
in
mov
je
xor
pusha
add
pushf
outs
cmps
je
push
xchg
or
sti
std
loope
adc
lea
dec
pusha
add
jmp
add
push
dec
in
cmc
fdivp
mov
jbe
std
cs
mov
sbb
or
inc
stos
test
sbb
or
sbb
shl
xor
sar
cmp
mov
scas
pop
mov
or
or
dec
or
adc
add
jae
inc
jo
fdiv
lea
inc
shl
sti
pop
shl
jnp
add
sbb
shr
adc
mov
test
and
jo
pushf
cmps
call
inc
pop
(bad)
scas
xor
(bad)
mov
shl
adc
sbb
xor
cmp
and
push
jnp
ja
cmps
lock
test
adc
imul
mov
dec
ss
xchg
jae
and
sbb
les
inc
adc
hlt
push
in
add
dec
sbb
xchg
xchg
xor
test
call
cdq
xor
into
push
test
pop
xor
xchg
jp
xchg
fist
and
sbb
mov
or
ficomp
push
dec
inc
data16
mov
cmp
stos
lea
je
jno
xor
and
mov
sbb
jmp
mov
dec
lock
clc
mov
data16
pushf
popa
or
pusha
cmp
inc
movs
xchg
pop
fisttp
dec
hlt
mov
iret
jmp
pusha
and
adc
xchg
fidiv
daa
push
jge
add
or
aad
inc
mov
push
dec
mov
xchg
pop
push
neg
dec
add
sub
lea
ja
push
cmp
dec
push
dec
push
in
push
push
mov
cmps
cmp
rcr
xchg
ins
and
mov
test
jl
push
add
mov
mov
int
jo
fdiv
fisttp
or
sbb
fdiv
sub
int
mov
cmp
mov
push
add
in
pop
dec
sub
jae
mov
in
mov
mov
push
sub
inc
in
add
mov
jge
dec
sbb
mov
(bad)
fcom
cmps
or
or
inc
mov
and
sub
cmp
adc
cmp
sbb
mov
sub
loop
sbb
cmp
pop
test
bound
in
xor
mov
pop
dec
dec
and
std
dec
xor
mov
cmp
add
cs
mov
push
lahf
mov
push
pop
or
or
loope
sub
mov
push
push
sub
(bad)
inc
push
inc
inc
cli
push
inc
lds
cmp
jl
add
cmp
shr
push
jo
adc
push
sbb
sbb
dec
or
sbb
mov
xor
out
and
add
jbe
cmps
jno
pop
cmp
push
cmp
icebp
jl
inc
xchg
outs
jne
clc
mov
pop
jl
xor
sub
jmp
sahf
scas
pop
cmc
ret
(bad)
xchg
(bad)
cld
dec
fcom
stc
cmp
dec
outs
pusha
cmp
fsubr
push
push
test
adc
pop
pusha
dec
mov
sar
mov
outs
sub
daa
push
inc
xchg
sbb
inc
jne
and
sbb
jb
jmp
lock
shl
push
sbb
inc
bound
(bad)
aad
rcl
inc
inc
mov
push
xchg
push
sahf
push
mov
mov
jmp
push
xchg
sub
js
or
loopne
jp
lea
sbb
inc
mov
mov
dec
fisubr
add
add
fs
adc
jp
pop
inc
cmp
jnp
pop
dec
data16
jbe
jne
mov
loope
hlt
inc
jl
les
ds
dec
inc
ins
jb
jmp
iret
cmps
fadd
push
ja
mov
adc
and
cmc
inc
push
pop
push
ins
pop
xor
js
jle
push
mov
or
jae
pop
add
jg
loopne
pushf
js
cmp
jg
sub
push
mov
pop
or
push
push
pop
shr
or
xchg
cs
daa
movs
dec
pop
pushf
jmp
or
(bad)
clc
jno
mov
shl
cmp
xchg
mov
push
dec
push
clc
adc
jo
mov
loopne
inc
jg
xchg
fs
inc
push
mov
pop
xor
cmp
pusha
jo
outs
pop
cmp
lahf
int
in
inc
mov
xlat
xchg
out
cmp
xor
lods
daa
pop
jecxz
scas
shr
pop
mov
and
lea
ror
pop
and
add
loop
jmp
js
or
dec
push
jno
mov
jp
jne
jae
add
sub
sub
adc
jl
inc
ret
push
ret
mov
add
push
pop
aas
adc
loop
add
add
sbb
loopne
mov
imul
fmulp
fwait
imul
push
loopne
mov
fiadd
mov
adc
les
inc
inc
(bad)
fldcw
pop
adc
mov
mov
adc
pushf
call
mov
ins
mov
mov
add
mov
push
pushf
loope
inc
aam
jb
adc
hlt
(bad)
jle
stos
adc
sbb
sahf
loopne
push
pop
mov
fsub
sbb
cmp
test
push
dec
js
sbb
cmc
jle
push
repz
or
xor
sub
inc
add
add
shr
or
int
outs
icebp
jne
mov
fcmovnbe
ins
sbb
push
hlt
and
iret
jo
inc
lea
shl
fwait
jbe
ds
or
jmp
push
jg
test
js
mul
push
push
std
pop
mov
(bad)
icebp
push
dec
daa
push
add
or
adc
(bad)
movs
adc
adc
pop
or
pop
sub
jae
cmp
(bad)
(bad)
cmp
ja
es
out
mov
frstor
jge
mov
hlt
ins
add
push
clc
add
push
pop
pop
mov
pop
addr16
inc
je
or
jp
add
pop
pushf
jno
sub
jmp
ins
xchg
xchg
xchg
and
mov
xchg
fisubr
je
out
inc
js
jo
xchg
fstp
add
jb
rol
cmp
repnz
movs
imul
loopne
adc
inc
adc
mov
ss
pop
shl
push
test
jmp
adc
jle
sahf
or
cmp
setg
inc
outs
ror
add
loopne
fs
add
stos
inc
sti
add
int3
and
cmp
pop
movs
iret
inc
or
xlat
push
xchg
mov
adc
(bad)
or
push
aas
hlt
sub
aas
inc
adc
je
cmps
lods
xor
fcomp
or
fsub
jnp
dec
aad
add
shl
ret
push
retf
into
mov
clc
(bad)
pop
mov
cld
jge
mov
mov
out
(bad)
jbe
add
(bad)
sbb
je
lea
outs
sub
xchg
lea
inc
mov
adc
pusha
ins
push
movs
xor
or
jge
sub
outs
outs
sbb
inc
and
mov
repnz
ss
cmp
test
int
sub
test
cmp
mov
sbb
je
adc
jge
jmp
cld
add
mov
inc
cmp
int
and
push
jo
hlt
xchg
or
pusha
sub
sub
jnp
fld
cmp
mov
movs
stc
movs
add
test
pop
sub
cmp
fmul
cmp
arpl
and
int
imul
sbb
je
fstp
mov
sbb
ins
and
and
lea
(bad)
loop
sbb
dec
cmp
dec
mov
and
dec
es
mov
push
mov
pop
xchg
sbb
fistp
sbb
(bad)
cmp
clc
mov
add
loope
jp
add
daa
mov
inc
sub
ror
xchg
mov
fnstcw
push
cmp
inc
adc
in
fsub
je
xor
dec
lahf
pop
jecxz
ins
dec
push
cmp
loop
push
cmp
pop
add
inc
mov
(bad)
ja
push
out
jnp
mov
inc
imul
rcl
aad
cmp
dec
bound
xor
inc
sub
(bad)
mov
je
cmp
mov
jp
inc
cmps
cli
les
adc
fdivr
push
loopne
retf
mov
std
pop
stc
ret
mov
add
cld
or
sbb
stos
mov
popa
mov
mov
scas
or
loopne
in
cmp
xor
cmp
cmp
mov
test
test
imul
not
push
pop
mov
cli
call
jge
xor
mov
mov
mov
cld
jno
mov
mov
and
aad
pusha
ja
pop
cmp
mov
ror
lea
mov
dec
push
inc
in
fcmove
lea
adc
or
xlat
fbld
test
test
call
aas
mov
jge
in
push
push
xor
lea
cmp
out
mov
fadd
inc
add
and
hlt
sar
push
or
retf
pop
jo
inc
sbb
add
movs
mov
cwde
add
mov
js
ffree
fst
push
call
jo
push
xchg
or
fs
loop
rcl
cmp
into
jbe
mov
jne
xor
mov
add
ds
cmp
(bad)
xchg
xor
adc
lods
fmul
add
repnz
jae
mov
imul
inc
or
xchg
or
mov
loopne
or
push
pop
data16
fisttp
stos
adc
pusha
es
jmp
push
jae
add
push
sub
xor
sub
ret
test
jne
and
fwait
retf
loopne
stos
push
mov
pop
sbb
sub
dec
es
enter
fild
shl
push
add
inc
(bad)
cwde
jmp
movs
mov
pop
jge
les
icebp
push
frstor
test
pop
inc
rcl
xchg
test
jle
test
add
lock
enter
sbb
or
sbb
loope
xor
sahf
mov
or
add
cmps
ss
sub
or
jp
dec
jbe
ret
mov
add
jmp
sub
sar
cmp
ins
jp
cmp
inc
lods
xchg
cmp
or
js
push
push
cmp
and
ins
cmp
xor
cld
jne
ffree
iret
mov
mov
movs
lods
inc
test
popa
and
sub
xor
dec
dec
test
jne
ins
mov
push
push
jbe
pop
jno
ss
push
movs
pop
cmp
jns
pop
push
hlt
neg
mov
ds
ins
sahf
cmp
das
pop
xchg
lds
adc
add
clc
clc
shr
adc
push
inc
jns
mov
push
ins
test
inc
cmp
je
ret
jnp
lock
push
(bad)
push
sbb
jmp
or
jmp
test
imul
rcr
(bad)
fdivp
cld
add
(bad)
jae
bound
add
push
jne
outs
inc
call
arpl
push
jmp
push
pop
push
and
add
pop
xchg
push
ds
add
cmp
fild
jmp
test
cmp
(bad)
mov
mov
popf
or
jmp
sub
les
push
addr16
xor
adc
test
adc
cmc
inc
xor
or
push
pop
lock
int3
jnp
push
push
and
push
sbb
push
xor
(bad)
lock
inc
push
dec
sbb
mov
or
ins
lea
hlt
push
push
lea
mov
xchg
je
mov
(bad)
or
out
push
mov
sbb
inc
push
aam
sub
cmp
pop
retf
cmps
push
adc
jmp
cmp
neg
sbb
and
jnp
jne
mov
je
or
sub
pop
loop
cwde
aaa
add
inc
inc
pop
push
jl
lods
sub
mov
cmp
inc
(bad)
jnp
cld
mov
cmp
adc
ja
bound
mov
cmp
push
and
push
cmp
xor
lock
jecxz
aaa
jo
pusha
push
mov
and
lea
(bad)
jmp
push
mov
mov
sub
sar
mov
add
sar
push
shr
leave
jg
lea
cld
push
int3
call
sbb
aam
ror
inc
fimul
cmps
(bad)
sbb
jo
xchg
es
or
or
or
push
sub
push
lds
xor
sbb
and
adc
mov
cmp
adc
sbb
or
dec
push
sbb
mov
adc
push
mov
adc
adc
retf
clc
sbb
inc
ret
xor
add
and
pusha
ret
pop
das
lea
mov
data16
sti
mov
inc
push
jmp
and
fsubp
int3
pop
aas
adc
xor
loopne
clc
inc
je
pop
mov
add
ror
adc
sbb
sbb
push
add
sbb
xor
push
pop
ret
pusha
push
adc
push
pop
fdiv
and
pop
mov
ret
test
xor
ins
push
je
push
test
add
in
mov
add
clc
nop
jmp
cmp
adc
enter
jo
repnz
cmps
icebp
mov
push
push
pop
lahf
leave
(bad)
clc
cs
ins
(bad)
push
(bad)
push
jmp
dec
sbb
fisttp
int3
add
mov
lds
pop
ret
mov
lock
test
push
mov
dec
(bad)
cld
das
cwde
js
js
shr
jb
repz
dec
loopne
repnz
mov
mov
ror
out
in
pop
pop
es
add
test
aad
cs
pusha
xor
adc
mov
dec
fsubr
imul
cwde
(bad)
fisttp
add
jo
aaa
fld
mov
(bad)
jmp
inc
adc
shr
add
or
add
sahf
dec
stos
inc
sbb
fwait
push
pusha
retf
and
stc
xor
lods
loope
pop
and
cli
add
mov
test
xchg
push
mov
fmul
shl
(bad)
push
push
dec
dec
jl
or
sub
scas
mov
not
inc
lea
sbb
sbb
int3
push
dec
jl
mov
mov
jecxz
adc
(bad)
sub
hlt
jl
aas
fwait
dec
jae
jmp
loop
fwait
jge
lock
je
cmp
inc
xor
test
test
push
mov
jae
sbb
sub
dec
xlat
cli
adc
pushf
add
aaa
add
and
ja
sbb
push
xchg
adc
es
int
loop
adc
push
sbb
imul
push
sub
icebp
ins
fsub
mov
or
xchg
mov
mov
cmp
loope
inc
and
or
adc
adc
push
fcom
mov
adc
popf
clc
retf
xor
es
rcr
or
das
in
out
lock
clc
push
loopne
pop
test
aad
addr16
cmps
mov
add
push
push
in
cdq
and
add
sar
fisttp
ins
jp
(bad)
mov
shl
and
dec
cwde
add
add
add
loop
add
(bad)
or
jp
push
mov
dec
mov
add
pop
mov
inc
rol
shr
mov
lea
push
rep
adc
data16
jb
cmp
or
(bad)
adc
jbe
add
push
push
cmps
and
shr
rcl
mov
in
adc
pop
and
inc
push
hlt
cmps
and
nop
test
sbb
icebp
fsubr
dec
cmp
jo
outs
jo
add
inc
mov
hlt
in
ss
enter
push
shl
jge
pushf
ret
mov
fst
pop
sti
mov
cli
ss
sub
mov
inc
push
and
fs
push
mov
jge
cmps
pop
test
arpl
or
lea
sub
adc
gs
cmp
ret
imul
add
clc
mov
fisttp
mov
push
ins
sub
jno
push
sub
inc
adc
pop
test
adc
loope
or
cmovg
dec
push
(bad)
mov
mov
ins
ret
xor
sbb
loopne
xchg
sti
aad
xchg
test
loope
dec
adc
fadd
fiadd
push
fcmovnb
in
aam
inc
mov
adc
ror
sbb
lock
push
les
add
and
or
int3
jp
jnp
ss
xchg
adc
and
mov
sbb
xor
and
adc
add
out
sbb
adc
lahf
sbb
sub
pop
xor
mov
call
adc
mov
mov
mov
inc
sub
xchg
add
sar
add
ds
jp
xchg
out
push
in
dec
jg
pop
push
sub
ret
cdq
xor
or
mov
jl
sbb
cmps
fld
inc
adc
pop
adc
adc
shl
adc
mov
pop
jle
add
jbe
jg
and
adc
loopne
repnz
jno
dec
sub
mov
aad
push
ret
sub
cmp
pop
or
lods
sub
enter
adc
faddp
xor
adc
sub
xor
and
push
inc
in
adc
dec
jmp
push
push
push
inc
neg
daa
mov
cwde
jl
cmp
into
xlat
mov
push
dec
jnp
push
mov
jmp
ret
sbb
out
lock
jns
push
fidivr
and
pop
mov
lock
pop
call
das
rol
jmp
push
in
cmp
pop
fs
daa
sbb
sub
sar
repnz
mov
mov
sbb
fisub
in
and
jle
out
push
push
mov
cmp
lock
push
jnp
mov
(bad)
sbb
je
pop
sbb
mov
dec
stc
push
lea
sbb
xchg
add
xor
add
dec
mov
jle
sbb
out
pop
sar
mov
xor
and
nop
adc
xchg
int
mov
add
jo
imul
ins
icebp
xor
ins
xchg
push
jmp
sahf
add
lock
out
(bad)
xor
jb
aas
dec
test
cli
lahf
std
push
cmps
ins
mov
xor
jne
or
jecxz
imul
movs
or
mov
jecxz
stos
(bad)
ds
mov
mov
inc
cmp
sbb
push
xor
or
inc
mov
mov
jne
pop
and
xor
cmps
cdq
xchg
push
inc
pop
aaa
mov
movs
mov
adc
nop
add
mov
fnstenv
movs
imul
mov
in
xor
call
xchg
push
mov
lods
add
mov
jmp
pop
mov
mov
push
mov
cmp
jo
test
lea
nop
in
mov
jp
test
mov
out
inc
sbb
mov
lahf
stos
ret
pop
add
es
test
lahf
or
xor
mov
shl
ins
pushf
pop
sub
inc
ret
das
mov
mov
cwde
sti
adc
movs
icebp
xor
cli
cmp
or
popf
mov
shl
push
inc
(bad)
jp
xor
fld
das
sub
and
cmp
pop
iret
xor
rcl
and
push
aad
leave
push
mov
sub
iret
xor
dec
or
adc
mov
add
dec
lock
or
aam
push
int3
retf
push
inc
dec
mov
dec
ds
add
dec
pop
(bad)
loopne
mov
mov
inc
mov
sub
or
addr16
mov
out
add
mov
mov
mov
fwait
xchg
sub
lea
cmp
jl
jo
repz
loope
mov
and
add
push
or
add
pop
and
push
rcl
clc
shl
mov
jecxz
iret
add
adc
test
lods
fwait
add
cmp
push
js
mov
mov
stos
xchg
jo
inc
add
or
xor
push
clc
xchg
dec
mov
and
push
push
mov
cmp
xchg
lea
bound
fdiv
adc
adc
sub
add
out
aam
mov
add
je
add
popf
(bad)
or
sbb
ins
add
cdq
ds
add
push
cmp
cmp
jnp
mov
idiv
and
mov
jo
mov
mov
mov
push
add
cli
push
cs
lock
mov
ror
sub
shr
or
pop
sbb
add
gs
mov
call
adc
mov
scas
mov
push
add
sbb
unpcklps
pusha
cld
clc
push
lock
ins
ret
push
or
mov
cmp
mov
outs
pop
(bad)
rcr
adc
jno
mov
ret
je
xor
rcl
mov
lahf
aas
clc
xchg
repnz
sar
es
jns
test
jge
in
adc
jo
jge
outs
xor
scas
sar
data16
loopne
outs
dec
clc
push
mov
iret
test
lea
sub
pop
imul
lea
ja
push
push
xchg
xor
into
scas
lods
mov
cmp
mov
jl
jbe
xchg
cmps
add
sub
push
dec
in
xor
xor
pushf
test
int3
popf
adc
mov
adc
fisttp
test
pop
push
daa
shr
imul
inc
inc
sbb
push
mov
imul
test
xchg
sar
push
mov
dec
fadd
call
cmp
enter
mov
jmp
sub
lods
mov
std
iret
pop
add
ror
mov
sbb
jl
je
mov
fnstsw
jno
xchg
add
sar
or
dec
mov
and
ins
jb
leave
push
daa
adc
or
lds
out
xor
sar
push
sar
cmp
jb
mov
cld
inc
push
sbb
pop
call
fld
mov
icebp
xor
je
xchg
outs
mov
mov
in
xchg
add
add
or
add
add
and
pop
or
or
xor
test
jae
adc
(bad)
mov
adc
add
mov
test
je
cmp
cmp
ja
(bad)
inc
loope
test
cld
xchg
pop
mov
shr
or
shr
or
push
sbb
jbe
mov
dec
ins
js
mov
mov
push
adc
mov
dec
inc
lea
or
inc
lock
je
sbb
ror
bnd
and
mov
dec
pop
push
inc
push
cli
pop
push
icebp
push
inc
inc
dec
pop
fsubr
neg
cs
ja
push
out
pop
sbb
ds
push
sbb
xor
pushf
xchg
clc
sbb
jle
js
inc
adc
mov
loopne
repz
push
lea
pop
nop
retf
ja
aaa
sub
enter
jae
popf
movs
popf
jb
in
jne
mov
ja
in
js
pop
ins
mov
cli
cmp
sbb
xchg
jle
push
fisttp
lock
test
sahf
cmp
ja
ret
ficomp
jp
or
sub
ins
fidivr
(bad)
push
neg
cmp
int3
push
dec
push
js
mov
add
xor
shr
add
pop
cs
or
data16
jns
add
push
add
or
push
mov
add
or
adc
adc
add
add
adc
dec
mov
adc
adc
add
enter
and
rcr
mov
xor
hlt
inc
jbe
cmps
test
jne
mov
mov
ret
push
push
and
dec
mov
jmp
clc
or
adc
xchg
sbb
xor
imul
neg
sbb
popa
mov
pop
push
pop
xchg
mov
stc
in
jge
shl
mov
sbb
adc
adc
ret
(bad)
cld
mov
ins
or
pop
sbb
adc
mov
and
rol
push
or
je
sbb
mov
sbb
repz
call
loop
mov
mov
and
mov
shl
inc
cmp
pusha
fdivr
jmp
jbe
hlt
pop
pop
iret
add
fisubr
pop
sub
add
js
out
dec
sub
xchg
adc
call
xchg
sbb
ffreep
sbb
dec
cmp
mov
mov
adc
cmp
ret
add
dec
pop
jl
pop
aam
and
les
push
in
or
ins
push
fdiv
push
out
add
xchg
jecxz
pop
pop
loope
(bad)
sbb
push
fcomp
or
push
movs
stc
pop
jl
inc
push
imul
mov
inc
jns
jle
pop
or
ins
add
push
xor
push
mov
into
push
pop
fisttp
imul
sbb
pop
aaa
jno
jp
addps
sub
adc
mov
rcr
leave
mov
adc
adc
mov
push
pop
ja
aas
jge
push
clc
addr16
pushf
lods
jge
push
jmp
ja
popf
add
mov
bts
loopne
ins
jmp
retf
in
push
aam
repnz
inc
add
loope
cs
in
adc
test
add
(bad)
and
push
mov
add
and
pop
sub
sbb
and
mov
inc
in
stos
dec
pop
jmp
adc
ins
fcom
rcl
push
push
es
inc
xor
shr
and
test
shl
mov
mov
(bad)
pop
pop
out
add
or
cli
add
(bad)
dec
ja
push
inc
inc
jg
movsx
rol
fisubr
mov
mov
pusha
dec
mov
imul
call
and
jo
jbe
shl
inc
mov
fidiv
lock
jmp
inc
ins
pop
sbb
adc
adc
adc
sbb
xor
ss
cmps
daa
sbb
gs
or
and
and
popa
test
add
dec
and
push
cmc
mov
mov
sub
inc
add
mov
push
add
mov
jle
inc
push
add
(bad)
mul
mov
xor
fwait
xor
loopne
adc
push
pop
push
pop
cmp
movs
sbb
repz
(bad)
xor
popf
sbb
mov
add
mov
dec
fimul
loope
mov
call
mov
clc
out
xchg
sti
sub
test
inc
add
aaa
mov
push
add
sub
js
add
or
lahf
adc
or
lea
in
sub
push
and
jb
stos
or
inc
pushf
sub
clc
jne
enter
shr
cmps
icebp
sub
dec
daa
sar
cmp
push
fst
sbb
pop
mov
push
or
call
ss
jmp
(bad)
xor
cdq
push
test
sbb
into
sar
add
sub
mov
in
jp
push
icebp
mov
cmp
cmp
add
iret
inc
xor
mov
pusha
mov
jo
inc
sub
add
dec
push
mov
int
and
or
add
cmp
test
stos
push
or
sbb
clc
sbb
out
jge
push
and
sub
xor
fisttp
mov
repnz
sbb
test
js
mov
bound
retf
add
push
sub
add
les
inc
inc
mov
mov
mov
pop
dec
push
push
push
and
add
cmp
add
neg
and
sbb
jbe
jb
cmovns
dec
out
aad
nop
sub
dec
push
mov
add
movs
(bad)
cmp
lock
js
push
sbb
sub
fidivr
shr
sbb
mov
inc
rol
les
sti
cs
cmc
cmps
pop
shl
jmp
ret
add
retf
and
inc
push
dec
dec
sahf
push
cmc
mov
sub
push
daa
mov
push
mov
mov
adc
in
cmps
dec
sbb
or
bound
frstor
push
rdmsr
aad
inc
outs
cmps
jmp
bound
ds
sbb
ss
push
jmp
add
push
int
or
push
xchg
sbb
retf
cld
or
lods
xor
inc
inc
or
add
inc
adc
ss
imul
or
and
ds
retf
mov
mov
pushf
xchg
clc
(bad)
fwait
retf
push
inc
pop
cmp
jg
sar
and
and
test
dec
xor
rol
popf
adc
add
cmp
cmp
mov
add
mov
mov
test
test
fsubr
cmp
sbb
add
dec
lahf
ret
add
nop
test
in
loop
lock
scas
dec
aam
and
mov
push
or
sub
sub
dec
mov
test
cmc
sbb
pop
mov
sbb
in
pop
inc
mov
or
repz
cmp
stos
fs
daa
int3
jo
enter
mov
mov
lds
jg
dec
add
and
in
push
mov
xchg
adc
and
push
shr
js
test
add
dec
sub
test
and
adc
sub
cmc
adc
pop
and
mov
xor
add
pop
test
test
mov
jle
pop
push
ds
outs
(bad)
jp
into
stos
mov
jp
fadd
pop
fisttp
leave
lods
and
inc
ror
inc
fldenv
pop
xchg
pop
xchg
movs
push
pop
jo
mov
pop
or
jmp
xor
or
stc
adc
add
pop
aas
sbb
shl
jecxz
add
ficom
inc
adc
pop
fcom
or
cmp
push
lock
je
mov
loopne
and
test
ins
jp
inc
mov
fwait
add
xchg
push
mov
cmp
inc
ret
rcr
sub
ins
mov
ss
xchg
jmp
repnz
adc
push
inc
mov
mov
or
in
dec
adc
stos
sbb
mov
push
and
out
call
or
xor
pushf
or
jle
sbb
cmp
jno
loopne
mov
xor
icebp
sub
add
lea
adc
(bad)
out
rcl
or
lea
jne
pop
ror
jmp
sbb
popa
pusha
jo
xor
mov
pusha
ins
ret
mov
xor
mov
inc
scas
sbb
hlt
sub
dec
scas
add
xor
cmp
cmp
pop
mov
mov
call
outs
cmps
pop
pop
je
adc
call
loop
shl
sbb
fcmovu
add
mov
push
cli
add
fcomp
cmps
icebp
jmp
mov
xchg
push
cmps
adc
ret
rol
in
sbb
ss
sbb
xor
rcl
clc
push
sbb
xor
mov
adc
into
cmp
stos
xchg
add
and
lock
je
inc
stc
ret
and
sub
xor
pop
std
ins
push
push
repnz
adc
add
mov
in
cmp
dec
sub
xchg
std
out
lock
xchg
rol
and
adc
inc
test
fsub
shl
push
push
xchg
sbb
popw
pop
popf
jo
pop
sbb
mov
mov
(bad)
jnp
mov
ins
push
sub
fistp
cdq
sbb
inc
dec
mov
out
fisubr
jo
sbb
xlat
in
mov
xor
sub
mov
ins
xchg
jmp
cmp
xchg
xchg
popa
jmp
mov
jae
jae
(bad)
or
push
std
pop
adc
xchg
and
dec
adc
sbb
push
cld
loopne
mov
sub
mov
pop
hlt
cmp
int3
das
lock
mov
and
xchg
sbb
scas
clc
pop
ficomp
fisttp
adc
ret
cmovo
jle
sub
std
push
mov
and
call
hlt
repnz
div
or
pop
(bad)
imul
cli
cmp
mov
or
(bad)
jmp
or
rol
lock
cmp
xor
sub
clc
loope
mov
sbb
in
push
add
add
out
xor
stos
test
pop
inc
push
jnp
xor
jmp
adc
pop
cmps
aaa
mov
inc
jl
sub
or
nop
rol
mov
(bad)
popf
push
(bad)
(bad)
in
jne
mov
loopne
pop
adc
adc
in
push
aaa
stc
dec
enter
in
xchg
dec
sbb
and
shl
mov
or
inc
add
les
push
jg
mov
add
js
fdivr
test
aam
fild
shl
add
int
and
in
xchg
or
pop
mov
cmp
push
lahf
push
inc
outs
cmova
daa
push
add
inc
call
jae
xchg
xor
cmovbe
mov
xchg
ds
ror
lods
in
hlt
inc
lea
add
sbb
mov
(bad)
and
ins
loopne
push
rcl
out
mov
sbb
inc
and
fld
and
jge
retf
push
push
add
ins
sbb
shr
test
inc
and
imul
daa
aaa
aam
mov
add
jne
mov
pusha
retf
jge
sbb
loop
jl
les
aaa
jp
push
mov
rol
pop
mov
cmp
inc
mov
xor
rol
jmp
mov
(bad)
enter
pop
sbb
add
loop
dec
es
js
xor
mov
jbe
mov
retf
cmp
adc
fidivr
clc
xchg
jne
cmp
push
inc
adc
sbb
in
sbb
push
pop
cmp
jecxz
sti
popa
add
jl
in
dec
cli
imul
mov
xlat
enter
or
xor
xor
cld
dec
cmp
ss
and
jle
push
lods
not
jmp
and
loopne
mov
cmp
add
dec
cwde
xchg
add
and
fisubr
ret
(bad)
push
and
xor
jnp
sbb
(bad)
sub
and
sbb
cmps
pusha
imul
sub
sar
mov
adc
(bad)
push
in
push
cmps
push
stos
lea
cli
mov
adc
stc
jae
mov
mov
mov
push
fadd
ins
mov
inc
loopne
rcl
sub
clc
mov
xchg
xor
popf
rol
or
mov
(bad)
lock
pusha
aad
je
jne
sbb
pusha
jne
cmps
or
mov
dec
adc
mov
(bad)
fst
data16
push
lods
add
pop
fwait
test
clc
jae
mov
mov
mov
sub
cmp
sub
mov
pop
lea
cmc
push
cmp
jmp
(bad)
xor
add
xchg
cmps
or
and
pop
mov
jmp
int3
cs
or
shl
sub
movs
(bad)
push
mov
and
sbb
hlt
jl
cld
push
scas
mov
mov
fs
stos
test
popf
fwait
cld
sub
lea
mov
push
idiv
outs
cmps
std
cwde
jne
test
push
ss
or
sti
shl
call
mov
and
jmp
adc
mov
fdivr
mov
adc
add
and
enter
stos
mov
jb
mov
or
xchg
shl
push
xchg
push
ror
nop
lahf
adc
bswap
or
push
scas
popa
bound
out
int
lahf
pop
sub
pusha
out
cli
mov
int3
add
dec
(bad)
outs
sub
mov
aad
int
dec
push
mov
clc
cmp
jmp
mov
and
and
mov
push
push
add
icebp
adc
outs
dec
enter
ror
fsubr
sahf
jl
fcmovb
push
ins
popf
xor
cmp
sbb
int
nop
cmc
jnp
call
or
push
add
sbb
and
shl
or
xchg
les
sbb
cmp
loopne
(bad)
mov
sub
mov
(bad)
shl
outs
cmp
iretw
sbb
lods
in
loop
push
mov
xchg
fstp
test
xor
xchg
and
xor
mov
pop
push
movs
xchg
fs
in
bound
pop
(bad)
loopne
mov
test
nop
or
ds
mov
xchg
call
add
cdq
hlt
xchg
ins
pusha
ret
les
cmc
mov
mov
add
ds
push
lods
lds
test
jl
and
mov
xlat
dec
jp
mov
(bad)
arpl
or
push
hlt
clc
loop
in
pop
stc
jmp
or
es
add
clc
jmp
cwde
(bad)
jmp
jae
mov
push
cld
les
cmp
je
stos
in
dec
(bad)
mov
adc
or
sub
ins
ret
mov
mul
sar
push
or
aam
or
loopne
or
test
sbb
lea
pop
lods
loopne
clc
out
loop
xor
add
mov
sbb
rol
add
inc
mov
in
cmp
sub
inc
xchg
mov
(bad)
cmp
ror
mov
mov
mov
push
sub
shr
call
mov
jl
cmp
leave
xchg
loopne
stos
or
ins
loopne
das
adc
enter
add
test
lock
ror
mov
cmp
pshufw
aas
sub
xor
mov
lea
jmp
add
sub
sbb
repnz
call
push
push
jecxz
mov
adc
mov
add
pop
push
and
ja
pop
dec
hlt
jnp
mov
add
xor
scas
mov
fdivr
xchg
and
add
dec
cli
adc
and
mov
stos
dec
in
lods
adc
pop
ss
cmp
push
jp
mov
jge
dec
pop
(bad)
in
pop
pop
add
stos
dec
or
push
mov
test
mov
xchg
sub
cmp
inc
into
mov
ret
adc
nop
pop
es
out
jo
sbb
xor
test
dec
dec
lods
mov
adc
and
dec
enter
enter
dec
out
or
xchg
pop
or
js
aam
popf
adc
test
push
or
add
call
or
or
dec
ds
pusha
push
xchg
cld
push
popa
sub
inc
mov
add
pop
push
inc
jmp
lods
sbb
push
mov
div
cli
mov
shld
dec
shr
loopne
(bad)
sbb
fisub
pushf
ins
dec
popa
out
push
adc
adc
inc
ins
cmp
xlat
rol
pop
xor
adc
sub
jg
xor
into
sub
ror
add
loopne
pop
pop
jg
or
adc
jb
dec
inc
hlt
pop
pop
jge
adc
test
ror
int3
lods
or
in
push
cli
shl
sbb
mov
cmp
pop
hlt
leave
sbb
add
pushf
fstp
movsx
or
jl
mov
sbb
lock
outs
push
retf
or
jl
loope
aas
push
retf
test
mov
aas
jp
fdivr
pcmpgtw
add
hlt
mov
iret
pop
or
pop
add
push
or
push
sbb
xchg
add
fst
push
xlat
inc
inc
into
pop
cdq
pop
(bad)
mov
mov
dec
(bad)
js
jl
hlt
mov
repz
or
sub
pop
fs
mov
push
push
inc
sbb
test
ficomp
cli
xor
and
xor
ret
cmp
in
pop
and
or
add
jecxz
push
pop
cmp
add
add
mov
mov
jmp
(bad)
jp
stc
popa
call
stc
xor
jg
scas
adc
call
jo
xor
daa
lahf
sub
or
lahf
and
add
scas
cmp
ret
cmp
jp
mov
mov
dec
call
dec
sti
mov
call
imul
or
ret
mov
sbb
fwait
int3
adc
cs
or
sub
mov
adc
xchg
out
jmp
or
hlt
sahf
mov
mov
call
mov
add
aaa
js
inc
mov
rol
inc
and
add
add
neg
dec
xchg
cli
pop
inc
loop
and
inc
dec
sub
fbstp
inc
mov
add
mov
popf
sbb
shl
xchg
cdq
xor
mov
clc
stos
call
add
or
js
jns
fwait
cwde
xor
inc
test
push
out
ins
ss
je
cmp
inc
push
or
sub
fwait
in
ins
push
cwde
push
cmps
push
cmp
jnp
data16
cs
jge
aad
shl
test
cdq
jns
(bad)
dec
pop
push
inc
sub
mov
jmp
push
dec
dec
dec
mov
jns
jns
ss
push
push
pop
sahf
out
fstp
call
mov
shr
ss
into
inc
test
mov
ds
pushf
pushf
adc
sar
out
sub
push
daa
and
push
nop
outs
jnp
data16
sub
push
and
push
sub
imul
sub
scas
movs
cmps
cwde
push
push
mov
neg
cmps
cmp
cmps
jnp
ret
xchg
je
or
test
bound
add
dec
or
or
push
push
movups
adc
adc
push
pop
sbb
sbb
out
pusha
push
sbb
sbb
and
and
and
and
(bad)
es
sub
sub
sbb
sub
xor
push
in
out
dec
xor
xor
xor
cmp
cmp
out
std
aas
ds
inc
inc
inc
or
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
int
cs
dec
cli
call
enter
xor
cmp
or
in
inc
adc
inc
mov
or
(bad)
cli
xchg
sbb
leave
call
push
mov
nop
ficomp
jo
xor
mov
or
sbb
xor
mov
ds
inc
mov
jns
inc
or
push
outs
jnp
or
call
je
adc
pop
test
pop
push
push
rcl
push
and
jns
inc
mov
mov
jge
and
jp
xlat
inc
aam
xor
leave
ror
push
hlt
pop
or
adc
add
mov
cmp
pusha
sbb
mov
rol
movs
out
pushf
shl
add
mov
sbb
fstp
retf
mov
fsubr
fcomp
pop
aam
gs
pop
sub
cmc
ror
dec
add
cdq
into
xlat
movs
push
lea
loopne
inc
cmp
add
fdivr
dec
loopne
mov
loopne
or
dec
adc
cmps
xor
js
jne
mov
mov
push
ins
les
test
and
imul
inc
sbb
ud0
in
mov
xchg
call
out
bound
or
or
(bad)
sahf
jb
das
adc
push
jne
add
test
or
out
fisub
retf
push
aaa
mov
jns
(bad)
add
cs
cmp
retf
mov
pop
jno
mov
test
pop
or
loop
add
add
xor
adc
or
mov
push
shl
inc
push
mov
int
int
scas
push
xchg
xchg
add
jae
sub
shl
lods
jl
test
inc
xor
lahf
cmp
xor
mov
dec
in
test
jmp
mov
in
add
xchg
dec
loopne
and
adc
(bad)
jl
mov
or
push
aas
outs
pop
sbb
sub
push
xor
push
inc
mov
sub
add
bound
push
jbe
sbb
or
push
aaa
pop
sbb
je
sar
lldt
push
push
xlat
sub
es
pop
mov
hlt
cwde
xchg
xor
je
or
xor
jae
push
icebp
sub
pop
pop
add
out
fld
push
xor
in
sub
inc
int
or
js
pop
retf
adc
(bad)
lock
jle
cmp
or
ret
jg
cdq
push
add
xor
dec
sub
je
gs
out
push
repnz
lock
adc
aad
aaa
inc
stos
cdq
clc
inc
mov
sub
add
(bad)
ins
lods
inc
in
push
xchg
dec
mov
cmp
dec
pop
mov
jle
push
shl
push
pop
xchg
cmp
test
add
mov
xor
jmp
out
xlat
ret
xor
mov
add
sahf
in
xor
or
je
jl
retf
pop
adc
add
fcmovu
cs
stos
(bad)
pushf
and
cmp
loop
imul
sbb
inc
and
push
cmc
cmp
in
inc
test
imul
adc
popa
inc
jb
mov
fdiv
mov
dec
pushf
dec
loop
inc
push
pusha
mov
xchg
sbb
push
cmc
mov
cmps
into
shl
(bad)
jecxz
(bad)
and
or
les
iret
stos
mov
inc
fcmovne
rcr
mov
and
scas
enter
push
rcr
jmp
jg
jne
xor
pusha
push
mov
mov
add
data16
or
inc
mov
ja
call
ins
mov
fild
fcomp
stos
je
(bad)
mov
fmul
jo
jae
jmp
push
xor
lock
mov
adc
mov
push
js
mov
movs
and
push
fadd
cmc
xchg
push
xchg
addr16
push
daa
out
jnp
adc
nop
mov
mov
cdq
push
movs
xor
inc
stos
cmc
mov
jp
xchg
mov
imul
xor
ins
mov
rsm
jmp
data16
cmp
or
adc
(bad)
pop
sbb
add
or
ja
mov
inc
cmp
xchg
or
pusha
inc
push
nop
inc
pop
or
fsubr
aas
and
sub
mov
inc
ss
xchg
rcl
mov
add
loope
int
mov
inc
push
xor
aad
add
mov
dec
push
push
in
dec
dec
dec
cmp
enter
push
dec
and
jg
or
push
cmp
inc
aad
mov
add
movs
fisttp
je
inc
mov
ret
add
data16
std
dec
je
push
inc
enter
xchg
sub
adc
jbe
or
cmp
hlt
mov
stos
pop
mov
out
mov
lahf
shr
inc
pop
dec
add
jp
xor
add
sbb
aad
or
sbb
adc
mov
out
cmps
jae
test
mov
jmp
push
mov
xor
lods
pop
jg
fcmovu
mov
daa
push
dec
add
stos
add
je
inc
sbb
mov
lods
jmp
shl
sti
mov
mov
xchg
fnstcw
pop
mov
push
jae
dec
mov
push
xchg
xchg
js
lods
push
fsubr
cmp
movs
ret
xor
jecxz
stos
push
sub
add
push
add
add
clc
mov
fwait
adc
adc
or
or
mov
or
aas
bound
movlps
adc
or
add
inc
or
popf
mov
and
ror
stos
dec
cmps
mov
sub
adc
lock
mov
pop
or
sub
(bad)
pusha
xor
cld
outs
add
jmp
adc
cmps
push
jmp
adc
pop
add
mov
jle
jg
je
fmul
jb
repnz
ja
push
ja
rol
or
push
adc
sbb
inc
test
jb
gs
and
rcr
jmp
or
(bad)
loopne
ds
cs
adc
lock
add
fdivr
pop
jmp
xor
mov
aas
popf
pop
xor
push
pop
les
stos
pop
(bad)
jg
ret
clc
out
inc
and
and
mov
push
push
pop
cmp
test
ds
loop
mov
jg
mov
dec
shl
shl
test
loop
fldz
loopne
ja
lods
mov
jmp
or
or
aaa
jno
xor
xor
les
lock
dec
jg
mov
mov
mov
test
cmp
aad
inc
or
pop
(bad)
pop
and
icebp
jmp
mov
jg
popf
push
xor
jnp
jne
xchg
or
or
dec
xchg
jle
sbb
sub
cmp
jne
sub
adc
stos
inc
ror
ror
out
push
sbb
ss
inc
adc
and
jne
push
or
sub
jg
sbb
add
mov
int3
retf
lods
adc
pusha
dec
js
push
adc
adc
xor
push
xor
cmc
scas
pusha
test
jle
pop
dec
mov
fidivr
pop
call
shr
ret
xchg
mov
test
pop
hlt
shl
dec
aas
mov
les
add
inc
je
lea
in
xchg
push
fcomp
add
lock
cli
or
scas
jbe
add
call
fist
out
cmps
mov
ret
xchg
out
or
shl
push
mov
add
push
jmp
repnz
add
or
leave
aaa
xor
add
add
or
test
rcl
pusha
dec
jmp
xor
cs
mov
pusha
mov
sub
inc
mov
cs
psubusw
inc
inc
jl
xchg
rcr
jg
add
test
je
jl
sub
cmp
mov
and
jg
push
lock
cmp
jbe
jl
inc
js
or
test
push
mov
or
add
jb
add
iret
xchg
inc
dec
ja
jge
mov
mov
jo
adc
mov
add
or
(bad)
mov
xchg
push
push
or
adc
in
outs
add
inc
sub
nop
cmp
je
jae
dec
mov
lock
xchg
add
sahf
pop
in
cli
sbb
movs
pop
mov
sbb
inc
inc
clc
fwait
imul
mov
mov
jmp
jl
adc
in
mov
or
jb
or
dec
shr
lds
sub
shr
retf
xchg
pop
push
rol
sub
jle
add
jecxz
push
cmp
jne
jnp
js
inc
mov
mov
or
sub
or
ja
adc
add
dec
adc
adc
jg
or
je
cmp
das
jnp
jo
jle
inc
mov
pop
call
sub
cmp
jl
or
add
or
dec
xor
inc
sub
inc
inc
mov
and
lock
sbb
ret
mov
inc
push
push
aaa
sbb
add
mov
push
mov
cmp
int3
mov
mov
mov
ss
aas
(bad)
std
push
test
xor
add
jmp
out
jbe
test
and
jno
mov
or
push
push
inc
push
or
aad
add
aad
jge
push
cmps
push
mov
rol
inc
cdq
loopne
pushf
pop
push
pop
sub
sbb
sti
inc
fsub
test
je
jae
push
pop
add
push
push
addr16
cs
iret
hlt
add
test
or
dec
and
xchg
sbb
jle
dec
and
stos
adc
jno
jecxz
call
push
pop
and
adc
and
sub
adc
les
jecxz
jg
bsf
sti
jb
add
loop
push
pushf
mov
xchg
enter
jbe
or
(bad)
mov
lods
adc
stos
adc
mov
mov
sbb
and
push
enter
lods
xchg
test
xor
ss
sub
js
ret
sub
lea
sub
adc
add
push
inc
push
in
mov
pop
mov
jge
icebp
ret
movs
clc
and
push
pop
mov
les
add
repz
hlt
pop
sub
mov
ss
xor
and
mov
fwait
sub
mov
inc
sub
and
or
mov
ret
and
pop
and
jge
inc
inc
aam
dec
mov
loop
fucomip
movs
pushf
inc
push
fwait
mov
cs
fbstp
jge
test
mov
jne
mov
ret
dec
sbb
test
jmp
cmps
xor
push
addr16
cmc
sbb
es
sbb
fidivr
in
je
add
adc
or
xchg
push
push
and
js
xchg
push
pusha
stos
loope
add
pop
jg
mov
nop
mov
dec
js
or
xchg
lock
hlt
test
bound
stos
add
adc
add
push
or
push
sbb
inc
mov
jb
xor
xor
clc
inc
mov
fstp
cmp
push
pop
les
fiadd
movs
inc
aaa
je
jle
sub
adc
cmp
jle
inc
sub
add
inc
inc
cmp
jg
pop
push
sbb
or
lock
mov
ins
pop
or
xor
test
sbb
aaa
fstp
pop
push
mov
and
cmp
orps
mov
jo
sbb
rcr
pop
and
and
mov
sub
sub
sbb
in
push
test
adc
xor
push
adc
cmp
jae
push
adc
cmp
xor
lds
add
pop
inc
jle
es
fs
push
dec
call
pop
shl
inc
push
aas
add
jmp
pop
pop
test
pusha
mov
xchg
mov
push
sbb
ds
js
adc
fadd
repz
sbb
aad
js
inc
and
out
test
push
xor
mov
xchg
call
pop
xor
jmp
stc
stc
stc
std
bound
into
or
je
or
je
mov
je
pop
je
data16
add
adc
jo
lahf
add
popa
mov
test
pop
add
push
jb
in
ret
push
push
add
pop
add
and
mov
or
out
aas
lock
push
aaa
and
nop
lock
jmp
add
xlat
adc
ds
inc
mov
sbb
sbb
lock
mov
add
into
mov
add
dec
hlt
or
loopne
repz
jg
jge
pop
push
dec
mov
and
in
ins
movs
sub
add
fs
pop
movs
adc
pop
xchg
sub
in
pushf
pop
call
(bad)
in
dec
jnp
nop
movs
ss
and
inc
push
xor
hlt
scas
repnz
dec
lahf
test
xor
hlt
add
inc
jo
clc
push
fwait
mov
adc
ins
jne
adc
push
push
dec
mov
sub
cld
add
stos
pop
fwait
vmaxsd
fisubr
mov
dec
mov
jno
mov
jl
push
adc
mov
test
fwait
inc
push
fdiv
push
cmp
push
add
aam
jmp
inc
bnd
add
fdiv
cld
nop
and
bound
test
mov
repnz
sti
lock
add
leave
ret
mov
or
and
jo
mov
ins
mov
call
pop
mov
cmps
add
ficomp
inc
jle
fdiv
xor
and
sahf
adc
xor
icebp
push
pop
mov
mov
loope
and
mov
or
push
rcl
jo
xchg
inc
je
xchg
mov
pop
lds
jp
or
icebp
dec
and
mov
jne
jbe
cmp
fild
cs
in
call
pop
jne
aad
int3
adc
mov
and
jno
push
mov
test
js
clc
or
inc
push
dec
or
std
movs
mov
out
cmp
xor
fisttp
jbe
xchg
lock
adc
and
cmp
je
xchg
add
jae
clc
and
daa
je
cmp
adc
dec
dec
scas
neg
cmp
in
(bad)
js
add
test
fcomp
xor
cmovne
lahf
fucomi
fidivr
add
inc
jmp
push
(bad)
or
mov
repz
push
jmp
pop
and
xor
test
jmp
sub
jo
enter
imul
inc
inc
ds
pop
daa
ins
rol
(bad)
push
and
(bad)
enter
retf
inc
mov
popa
push
or
int
ret
push
sbb
jns
inc
push
mov
das
and
sbb
shl
xor
push
mov
inc
arpl
pop
or
ja
inc
in
out
je
fcmovbe
cmps
pop
push
push
sub
nop
dec
ror
adc
jne
adc
test
dec
cmp
push
jg
mov
dec
jmp
pop
push
xor
add
adc
cs
dec
loopne
sub
scas
or
jne
jmp
loopne
hlt
sbb
or
lea
pop
in
hlt
xchg
mov
adc
mov
dec
mov
sub
mov
or
push
daa
loopne
imul
in
fild
dec
sub
add
fdivr
or
fadd
and
les
add
adc
fstp
jbe
(bad)
shrd
mov
pop
loope
fdiv
dec
shr
dec
jns
dec
fmul
pop
inc
inc
pop
jne
mov
mov
add
mov
and
inc
xchg
test
fidivr
lea
int3
stos
xchg
mov
movs
xchg
pop
pop
push
int
aaa
pop
push
ins
pusha
or
(bad)
pop
inc
mov
push
sbb
call
mov
dec
rol
cli
hlt
pop
ins
fwait
and
jl
rol
popa
push
cmp
jl
jg
sbb
ja
call
loop
out
jno
pop
pop
inc
xor
jo
cmp
sar
stos
cmp
and
js
ja
xlat
jne
in
mov
ins
and
rcr
retf
xchg
shr
idiv
or
jmp
mov
jmp
cmp
add
dec
jne
das
and
xchg
inc
adc
ja
gs
and
xor
cmp
je
dec
int3
sbb
mov
shl
scas
(bad)
mov
(bad)
into
call
xchg
lock
mov
push
fxch
(bad)
je
ror
cmp
out
pop
mov
adc
jb
fcomp
fstp
pop
push
mov
mov
dec
loop
clc
fst
sub
push
in
loop
sbb
sub
sbb
sub
sbb
cmp
jl
jg
cmp
retf
add
jnp
inc
pop
sub
push
mov
adc
dec
xchg
out
rcr
icebp
mov
push
add
nop
push
cli
cld
mov
mov
mov
clc
mov
or
pushf
or
rol
enter
adc
fdiv
fistp
rcr
out
mov
cmp
int
mov
adc
or
cmp
ror
imul
inc
clc
fucompp
add
sbb
(bad)
leave
cmp
dec
(bad)
mov
xor
pop
mov
sub
jo
xchg
int3
mov
repz
mov
ss
sbb
mov
mov
das
fs
je
test
aaa
mov
adc
das
or
gs
fbstp
xchg
xchg
arpl
clc
adc
push
cmp
xor
int3
adc
inc
add
int
push
add
and
out
rcl
fsub
or
fcomp
add
clc
mov
leave
fs
hlt
mov
rol
stc
push
(bad)
cmps
movs
xchg
fadd
out
push
imul
enter
ss
bnd
dec
aas
outs
inc
cmps
or
add
xchg
jge
jne
dec
pop
je
(bad)
out
dec
push
sbb
or
and
sbb
or
and
xchg
mov
ins
sub
cli
dec
shl
(bad)
outs
jb
mov
sbb
adc
sbb
cs
jo
push
push
mov
ds
mov
inc
rcr
and
idiv
push
das
add
(bad)
std
enter
cmc
fisub
fild
pop
push
add
add
add
add
mov
(bad)
jp
movs
retf
jne
push
add
cmp
fisttp
out
ins
loope
jl
test
adc
mov
movs
cmps
std
fs
(bad)
adc
adc
pop
sub
stos
or
pop
mov
je
popa
imul
adc
fisttp
xor
call
ss
xor
mov
jg
mov
xor
add
add
or
and
xor
mov
ds
adc
jb
imul
push
aam
test
popf
imul
mov
imul
iret
int
xor
add
mov
push
lds
pop
and
data16
shl
dec
pop
ret
sub
add
add
repnz
js
xchg
out
dec
inc
pusha
fisttp
mov
mov
ror
push
mov
cli
jbe
sub
sub
or
fs
retf
and
adc
int
test
or
push
add
sbb
add
into
push
push
ss
jns
mov
inc
pop
fnstenv
(bad)
adc
fcomp
fnstsw
int
mov
sub
movs
mov
daa
xor
jmp
mov
xor
push
(bad)
in
shl
or
pop
jmp
fwait
je
clc
cmp
shr
xor
mov
jbe
sub
cli
mov
push
inc
fimul
push
xor
inc
les
(bad)
pop
adc
adc
add
adc
(bad)
std
std
ja
je
push
dec
cmp
push
cmp
mov
mov
or
arpl
push
add
add
adc
call
js
ror
cmps
mov
hlt
sahf
and
mov
ds
int3
stos
lock
(bad)
mov
xor
call
call
js
fs
dec
jmp
mov
jmp
rcl
sub
out
inc
cmp
mov
adc
pusha
jp
cmp
add
fsubr
cmps
pop
and
imul
jmp
loope
mov
(bad)
push
xchg
jmp
jmp
shl
push
jmp
loopne
or
ins
cs
pop
add
out
adc
out
adc
jne
sbb
add
add
ret
clc
into
test
in
aaa
and
sbb
data16
push
sbb
dec
fdiv
test
mov
call
scas
iret
inc
and
push
pop
aas
pop
add
add
test
icebp
shr
mov
test
push
cdq
pusha
add
(bad)
mov
push
jle
sub
loop
sbb
sbb
mov
repz
xor
out
test
xor
xchg
cdq
loope
movs
jo
shr
into
mov
jmp
mov
(bad)
xor
mov
ds
cmc
test
mov
xor
outs
add
jb
mov
push
call
scas
rol
pusha
aaa
add
gs
nop
ds
(bad)
or
rcr
add
push
mov
sbb
xor
dec
dec
sbb
push
push
clc
jne
cmps
ror
jp
mov
enter
push
add
inc
pop
inc
and
push
retf
int3
rol
verw
scas
or
retf
lock
lods
adc
mov
or
push
sub
sbb
outs
mov
dec
or
nop
jp
ss
xor
or
sti
cmps
adc
add
ret
inc
outs
rol
sub
or
adc
sbb
mov
push
pop
por
mov
push
sbb
or
push
hlt
rcr
mov
clc
push
dec
sbb
or
call
pusha
lock
cmp
mov
xacquire
cmp
fstp
add
xor
imul
sbb
sub
mov
mov
push
cmp
add
sti
inc
xor
push
retf
inc
cwde
retf
mov
sbb
add
sub
enter
sahf
sub
sbb
in
xor
cmps
push
cmp
pop
jb
mov
setns
je
pop
call
retf
sahf
shr
cmp
leave
jb
jb
cmp
xor
sti
xor
sbb
sub
mov
loopne
or
and
call
fdivr
or
or
(bad)
xchg
inc
mov
push
xor
pushf
cmp
add
push
outs
rcl
bound
popf
add
pushf
jnp
lods
out
inc
shr
and
add
mov
push
mov
dec
push
les
(bad)
push
or
push
jnp
mov
pop
sbb
test
scas
push
pop
les
push
call
cs
or
rcl
loope
iret
jne
inc
sti
mov
cmp
dec
cmp
inc
or
jb
jle
shr
jne
mov
div
add
push
test
fisub
stos
xor
pushf
dec
outs
jge
(bad)
aam
cmp
dec
imul
add
mov
or
sbb
mov
arpl
push
jo
push
mov
cmps
jmp
cmp
xchg
mov
loopne
lock
int3
mov
pop
ret
imul
xor
add
pusha
push
popa
xor
sub
pop
in
jecxz
dec
ror
loope
push
or
xchg
popa
push
add
adc
jmp
mov
pusha
gs
sub
sub
aaa
cmps
adc
cwde
cdq
addr16
mov
inc
arpl
pop
pop
and
outs
or
add
and
pop
call
adc
or
rcl
pop
push
sbb
mov
dec
adc
shr
and
js
jnp
mov
scas
xchg
mov
dec
inc
mov
mov
ss
mov
add
repz
xchg
in
pop
mov
cmp
outs
sar
fidivr
add
sbb
movs
jle
aaa
aam
or
xchg
shl
retf
xchg
clc
fwait
cmp
scas
loope
mov
pop
ja
rcl
daa
jmp
pop
ds
pop
jb
lock
and
mov
ss
push
ret
dec
jle
(bad)
mov
stos
add
dec
es
cmp
mov
out
pop
adc
sahf
adc
or
ret
int3
scas
mov
nop
adc
or
jmp
push
add
or
lahf
mov
push
cmp
inc
cmp
dec
das
movs
adc
aaa
ja
loope
inc
sbb
sbb
ja
push
inc
mov
ret
sub
call
inc
shr
and
cmp
in
retf
mov
xor
sysexit
or
and
pop
call
cmp
cwde
jp
pusha
pop
inc
popf
dec
nop
fcomp
add
dec
lods
push
(bad)
inc
add
jo
cmp
add
add
ss
out
push
ins
scas
adc
and
mov
cmp
push
rcl
popf
xor
mov
lea
mov
sbb
inc
cdq
loope
dec
sbb
cs
cdq
add
inc
hlt
adc
cdq
xor
fst
test
pushf
js
out
jge
mov
dec
or
shl
push
clc
push
fldz
pop
inc
fstp
push
xor
dec
pop
cmp
idiv
inc
sar
dec
sahf
adc
push
fcompp
jne
fadd
mov
or
cmps
jo
popa
sbb
push
sar
gs
lahf
rcl
paddb
or
pusha
mov
idiv
lock
jp
xor
sub
lahf
dec
lahf
mov
loope
mov
cmc
sbb
add
jle
jbe
adc
out
std
ins
add
cmc
(bad)
pop
dec
mov
inc
repnz
aam
add
sub
lea
imul
mov
adc
cdq
or
ss
shl
or
xchg
mov
pop
fstp
inc
ror
add
sub
cli
hlt
add
jbe
jno
shr
push
pushf
xchg
pop
jnp
inc
ficom
not
dec
ins
mov
push
ja
xchg
int
rcl
pop
outs
pop
pop
es
push
jmp
ffree
test
or
xchg
push
push
hlt
cwde
enter
stos
cs
add
mov
enter
push
pop
adc
add
(bad)
stc
or
(bad)
sbb
jo
xor
push
cmp
adc
dec
mov
dec
es
hlt
add
lahf
xchg
cmp
jne
mov
inc
xor
jmp
lea
add
icebp
shr
popf
sbb
sub
nop
mov
add
jg
je
mov
lea
cmp
lods
xchg
adc
sti
js
xlat
pop
mov
xchg
inc
dec
test
repnz
xchg
cwde
add
in
cli
pop
push
add
dec
cmp
fcomp
nop
clc
dec
jmp
or
lods
or
ror
das
lahf
xchg
add
add
push
push
rcl
lock
lock
sbb
and
or
shl
xor
sbb
jl
jne
xlat
mov
jb
iret
(bad)
aam
fs
cmp
sbb
push
enter
rol
dec
dec
pop
cmp
jge
mov
add
push
clc
icebp
add
pop
and
test
sub
xor
push
xor
es
mov
add
inc
cmp
sar
(bad)
dec
aas
mov
add
or
call
cmp
adc
inc
ss
push
inc
pop
jo
popa
movs
int3
rol
call
mov
sar
lods
shr
and
cs
fcomp
hlt
add
add
adc
sbb
out
xchg
mov
lea
mov
cmp
out
ss
inc
shl
sbb
add
add
into
mov
stos
jne
xchg
xchg
pop
or
leave
popf
adc
push
jmp
push
(bad)
outs
cld
mov
pop
or
xchg
jmp
mov
and
add
add
xchg
push
les
test
pop
sti
adc
and
inc
repnz
dec
pop
or
xor
shl
mov
mov
sub
rcl
sbb
je
add
add
inc
cmp
fsubr
mov
ret
xchg
fimul
cmp
add
call
fucom
(bad)
rcl
(bad)
mov
mov
bound
jmp
adc
fisttp
adc
sbb
push
pop
add
addr16
inc
mov
cmp
jb
popf
jle
jne
sahf
les
mov
scas
or
sbb
or
data16
jae
adc
ficomp
jmp
repnz
aad
or
jno
sbb
xchg
aam
jle
(bad)
add
imul
pop
push
pop
or
inc
pop
in
stos
xor
not
adc
add
sub
dec
cmp
push
loope
adc
mov
push
mov
cwde
add
or
addr16
xor
fwait
or
out
mov
in
mov
and
repz
lock
ja
add
lods
aaa
lea
popa
rcl
and
mov
call
jo
stos
sbb
repnz
push
(bad)
pop
and
in
popf
je
sub
adc
js
fucomp
or
mov
inc
bound
dec
les
jnp
sbb
cdq
jb
sahf
add
dec
sub
push
mov
cmp
(bad)
mov
push
add
xor
test
out
mov
mov
add
aaa
mov
rcl
pop
aas
and
cmp
sbb
mov
cmp
jl
jns
sti
push
push
adc
xchg
xchg
mov
mov
adc
mov
out
leave
shr
out
pop
test
jg
sub
je
add
sub
adc
movs
ins
or
jae
fwait
add
ins
add
add
add
call
mov
push
mov
pop
mov
mov
adc
add
mov
iret
push
mov
cmp
out
cmp
ret
mov
cmp
cld
fsubr
jne
mov
icebp
sub
adc
xor
sub
push
push
pop
or
addr16
imul
rol
push
mov
arpl
test
(bad)
adc
or
cmp
adc
push
jg
scas
mov
sub
fnsave
or
or
pushw
mov
sub
lahf
add
inc
adc
mov
cmp
jg
stc
sbb
cmp
mov
int3
mov
cmp
imul
inc
fsubrp
adc
call
add
sbb
pushf
or
jle
imul
jge
pusha
mov
pop
(bad)
popa
add
loopne
out
cmp
shl
cmp
mov
jns
dec
and
jne
cld
inc
push
jb
cmp
jno
push
push
ss
(bad)
mov
cmps
or
xor
ins
mov
pop
add
shl
and
push
adc
sub
mov
ja
adc
shr
cs
pop
add
xlat
loopne
lds
repnz
and
mov
icebp
pop
push
sahf
pop
int3
mov
test
(bad)
lods
enter
push
iret
jo
loope
cmp
dec
jmp
xor
int3
sbb
xor
icebp
fwait
sbb
pushf
mov
(bad)
sub
inc
push
sub
stos
mov
fcom
xor
pop
sar
test
cwde
sbb
dec
(bad)
fdiv
lods
add
jl
jnp
out
fistp
add
add
add
add
nop
push
inc
mov
jnp
push
xchg
cmps
push
leave
in
call
aas
fs
pop
clc
call
xor
sbb
sub
jp
or
and
mov
adc
mov
loope
test
or
cld
xchg
iret
xchg
fs
push
rcr
or
retf
out
out
sub
cmps
inc
add
pusha
aaa
pop
sub
mov
and
repnz
loopne
retf
mov
stos
std
or
mov
jge
inc
dec
pop
dec
mov
xchg
dec
rol
mov
fcomp
add
nop
mov
mov
icebp
adc
mov
cmp
in
lods
dec
jbe
push
mov
inc
cli
fdiv
fdivp
or
push
push
dec
inc
pop
imul
es
outs
push
sbb
jns
cmp
push
pop
ins
mov
fdivp
cmp
cmps
jo
div
and
fnstsw
sbb
cmp
mov
fcomp
dec
cmps
icebp
(bad)
popf
mov
cmp
mov
addr16
add
xor
adc
ror
repz
ror
push
dec
stc
inc
je
or
daa
div
repz
je
push
je
push
je
push
je
bound
clc
sbb
jmp
fnsave
test
in
adc
cld
push
add
pop
add
fistp
popf
mov
xchg
mov
loop
add
es
or
mov
mov
push
inc
lods
retf
cmp
je
pop
out
mov
cmp
sti
xor
nop
mov
jge
rol
(bad)
dec
add
jb
mov
das
loopne
rol
dec
leave
sbb
and
je
shl
xchg
rol
fisttp
jmp
mov
jecxz
cmps
les
data16
ror
sub
adc
test
xor
aaa
pop
lahf
add
inc
ret
mov
xchg
sub
outs
xchg
push
jb
jmp
jae
adc
jo
(bad)
pop
push
adc
add
push
cmp
aaa
int3
mov
mov
fcom
mov
mov
test
add
pop
ret
pop
lock
add
push
adc
loopne
mov
pushf
mov
add
ret
cmp
or
pushf
in
dec
into
adc
sub
mov
pusha
jbe
add
inc
sti
adc
int3
popa
inc
shl
pop
movs
ja
cmp
cmp
add
adc
dec
jge
into
ja
jmp
and
mov
mov
loopne
das
push
jl
inc
(bad)
sbb
popa
sub
pop
or
sbb
mov
jge
push
mov
pop
lock
xor
sub
cmp
outs
test
nop
mov
imul
inc
xchg
movs
sahf
push
sbb
cmps
adc
or
imul
jo
pop
mov
sbb
test
pusha
dec
and
sub
(bad)
sbb
xor
js
cmp
adc
dec
mov
mov
xlat
cmp
lock
sbb
xlat
pop
inc
xor
cmp
fbstp
jmp
clc
xchg
adc
ins
clc
in
dec
popf
inc
jmp
pusha
imul
ds
cmps
pop
pushf
add
jp
or
push
mov
push
stos
ret
fnstenv
dec
movs
jb
fcomp
sbb
sbb
inc
nop
xchg
add
dec
cli
adc
in
(bad)
loopne
sub
fmul
add
or
mov
or
nop
jle
rcl
sbb
retf
xchg
psllq
mov
pop
in
(bad)
add
sbb
idiv
sbb
mov
inc
dec
mov
push
sub
xor
pop
push
push
aas
sbb
test
push
cli
dec
pop
mov
jo
(bad)
mov
ins
push
nop
fscale
sbb
jo
mov
rcl
or
pop
out
xchg
test
je
jno
sahf
clc
cwde
into
inc
mov
cmp
les
jbe
lods
(bad)
fsubr
mov
jge
pop
inc
push
mov
sbb
ret
xor
pop
enter
pop
adc
pop
inc
or
jl
jmp
je
rcr
pushf
test
jno
or
adc
inc
adc
or
adc
push
add
jle
pop
int
or
mov
pop
out
mov
adc
lea
jno
imul
retf
jl
push
xchg
stos
stos
loope
or
jle
dec
dec
shr
int3
(bad)
outs
outs
shl
push
ds
or
push
add
cld
or
push
rol
xchg
sbb
sub
xor
xor
repz
int3
pop
ret
loopne
or
aam
push
push
lods
repnz
sub
inc
add
jae
aaa
jb
daa
lods
movs
mov
inc
push
cdq
loope
add
jne
push
jb
ss
nop
sti
xchg
xchg
cmp
add
jg
or
in
mov
cs
sub
add
adc
fsubr
xchg
loopne
add
cs
mov
ja
lea
outs
pop
mov
rol
retf
push
or
cmp
inc
pushf
jb
jmp
jae
retf
adc
stos
push
sub
add
dec
jnp
aad
scas
fcmovne
cmc
or
sbb
shr
and
fmul
imul
inc
mov
sbb
jp
xor
xchg
or
jl
sub
add
dec
push
adc
jle
jae
cmp
xor
push
mov
das
adc
nop
cmps
sti
sbb
sub
mov
jb
xor
or
jae
sbb
sbb
xchg
inc
add
cwde
jne
test
(bad)
mov
scas
add
mov
nop
in
push
and
loope
cld
push
mov
push
fwait
jl
add
rcr
mov
push
dec
in
and
push
and
adc
or
inc
sahf
inc
je
neg
adc
out
push
adc
dec
jne
sbb
mov
shl
or
rcr
mov
sbb
fwait
call
sbb
call
xchg
or
inc
mov
inc
push
mov
mov
int3
ror
loop
int
xor
mov
sar
shl
orps
mov
xor
into
rcr
cs
xor
and
sbb
pop
pusha
jmp
cmp
add
mov
push
pop
push
pop
adc
es
cmp
cmps
cdq
sbb
jmp
mov
dec
lea
xchg
ds
xor
(bad)
aam
call
inc
inc
xchg
aaa
mov
loopne
lods
and
lock
stos
mov
int
add
shr
add
pushf
inc
xchg
retf
add
clc
add
add
pop
fs
xchg
hlt
or
lods
mov
call
inc
pop
xor
(bad)
jle
gs
repz
cwde
test
es
cmp
test
pop
(bad)
push
nop
scas
fidivr
ss
shr
ds
jbe
xadd
mov
sbb
inc
mov
out
pop
scas
jns
push
loopne
out
mov
cs
push
sahf
es
push
cld
fidivr
dec
ret
push
lock
daa
push
pop
jp
int
(bad)
repz
outs
jl
mov
inc
daa
pop
cs
mov
es
push
xchg
lods
in
sysret
daa
add
fisttp
pop
jge
pop
ss
lods
mov
mov
mov
adc
jg
add
or
sub
fstp
or
add
push
sub
xor
cmp
or
pushf
jmp
enter
jae
ret
(bad)
pop
and
push
repnz
je
sti
pushf
scas
sbb
fcmovnu
add
pop
add
pop
mov
sbb
jecxz
(bad)
push
inc
xchg
call
test
inc
adc
outs
in
xchg
shl
ret
or
sbb
mov
es
imul
call
mov
aas
movs
mov
cwde
adc
adc
xor
mov
and
add
sub
add
mov
mov
cmp
jge
imul
fisttp
mov
je
fcomp
adc
imul
add
and
dec
retf
je
cld
test
add
adc
add
popf
jp
add
adc
xlat
push
jmp
das
scas
test
jl
lock
out
or
ds
mov
emms
or
lods
adc
iret
ins
out
mov
mov
inc
outs
pop
push
mov
inc
mov
dec
xchg
clc
cmp
push
ins
or
push
pushf
or
(bad)
cs
dec
shl
pop
pop
stc
fcom
inc
inc
pop
lock
add
bound
push
push
adc
bound
and
adc
out
movs
mov
iret
inc
psrld
ds
inc
xor
adc
ins
sub
adc
pop
rcl
ja
xor
sbb
ficomp
loopne
pop
ret
fs
and
shl
imul
cmp
sbb
into
sbb
mov
es
inc
pop
cmp
into
cmc
and
add
and
mov
add
dec
inc
out
mov
jne
iret
stos
and
sub
icebp
sbb
cld
ret
xor
mov
in
loope
cwde
jo
add
add
data16
test
add
jae
mov
mov
jp
inc
xchg
cmp
out
cmps
into
lods
sbb
lock
xchg
xchg
sbb
ss
xchg
out
push
shr
cmps
push
ss
add
push
pop
shr
adc
dec
add
scas
pop
push
push
add
jnp
je
mov
dec
in
es
pop
mov
retf
fsub
imul
xor
loopne
cmp
xor
pop
(bad)
sbb
cmp
or
add
dec
nop
inc
jb
xchg
call
dec
dec
repnz
sahf
push
xchg
rcl
xchg
pop
inc
popa
mov
sub
and
lahf
push
lahf
push
mov
rol
mov
push
or
loop
iret
push
dec
mov
mov
cmp
push
pushf
sub
inc
ins
xchg
call
loopne
adc
retf
dec
cdq
dec
pop
lahf
lahf
ret
ror
(bad)
sbb
mov
sbb
mov
aas
(bad)
add
adc
popa
fisub
cmp
push
movs
push
test
cli
and
outs
or
dec
and
inc
push
js
mov
and
hlt
test
sub
add
pusha
popf
mov
dec
hlt
cmp
jbe
retf
mov
sbb
ins
add
retf
stos
xchg
jecxz
sub
dec
cmp
sbb
jae
push
test
(bad)
cmp
pop
mov
adc
push
in
sub
cli
sti
jno
loopne
data16
jo
popf
dec
cmp
inc
fmul
mov
or
je
mov
adc
sbb
pushf
retf
lods
pop
pop
jge
pop
jae
shr
inc
mov
inc
and
add
inc
mov
je
call
shl
js
cmc
inc
(bad)
mov
repz
or
add
cmps
mov
das
ficom
jne
idiv
jl
add
and
cmp
mov
cwde
mov
lahf
inc
push
imul
cs
cmp
iret
scas
pop
or
sub
sbb
push
or
sub
stos
add
push
mov
aam
push
mov
adc
sub
sub
xchg
es
outs
jmp
dec
je
dec
dec
ja
or
pop
pop
(bad)
xchg
inc
or
lods
or
add
and
or
jl
sbb
hlt
adc
sahf
cwde
sti
xchg
pop
mov
sbb
xor
pusha
test
mov
repnz
mov
imul
cmc
mov
jmp
mov
and
nop
push
jb
in
in
or
pop
push
(bad)
mov
push
push
push
push
inc
neg
outs
mov
and
dec
sub
lock
adc
pop
jno
sub
and
inc
pop
inc
daa
ss
in
or
rol
in
jmp
and
mov
test
test
adc
dec
jb
jb
and
test
bound
push
pusha
pop
push
addr16
rcl
repz
pop
fdiv
pushf
inc
add
daa
fist
jmp
jo
add
jb
fidiv
in
or
sbb
mov
add
add
scas
sub
loop
add
mov
and
movs
jge
(bad)
sub
sub
mov
retf
sub
xor
or
push
mov
ret
push
js
pop
add
mov
popa
test
adc
icebp
sahf
push
pusha
outs
mov
lods
sub
ficomp
push
mov
loopne
or
call
lock
fs
ja
xor
adc
xchg
(bad)
and
std
add
adc
aaa
adc
dec
scas
es
add
aad
imul
sbb
or
cmp
add
dec
jae
ja
inc
or
shr
mov
jp
enter
rol
inc
jae
mov
sub
xor
push
je
adc
mov
mov
push
pop
(bad)
fcmovnb
mov
js
je
fld
push
or
lahf
inc
mov
es
and
mov
inc
xchg
fwait
jecxz
gs
loope
rol
cmp
bound
jnp
sbb
fstp
xor
pusha
add
jo
in
sub
mov
jg
cmp
xor
frstor
xor
repnz
jg
mov
inc
adc
mov
add
cmp
or
shr
and
es
inc
sbb
pop
test
jle
lea
mov
fsubr
mov
xchg
jl
or
mov
repz
xchg
jge
mov
xchg
and
xor
enter
cmp
add
cdq
bound
add
mov
cmp
inc
fnstcw
push
js
aaa
fbld
or
xchg
inc
sub
cmp
rcl
push
stc
ins
jb
cmp
mov
stos
aas
(bad)
cmp
mov
push
out
or
push
mov
repnz
std
clc
and
sub
out
dec
mov
cmp
test
out
fisttp
inc
cmp
lods
mov
push
push
cmc
xor
push
pusha
pop
sub
pusha
retf
and
fs
lods
push
add
push
xor
(bad)
ror
push
popa
push
mov
xor
das
leave
dec
cmp
fs
imul
enter
mov
cmps
fwait
rcl
test
mov
cmp
sub
int3
push
jl
push
aas
pop
arpl
add
sub
sbb
dec
fmul
das
xor
shl
daa
or
inc
lds
mov
cmp
xchg
push
add
mov
retf
dec
int
sbb
xchg
movs
add
push
cmp
cmp
repz
pop
add
lock
std
fmul
and
and
inc
mov
cld
jl
nop
sub
dec
inc
sub
xchg
in
test
retf
and
pop
movs
test
out
into
mov
sbb
push
cs
add
pop
xchg
push
and
ret
dec
ins
add
add
mov
cmp
jle
mov
int
sahf
(bad)
pusha
ds
in
pop
cld
and
icebp
(bad)
jmp
sahf
mov
cwde
push
inc
(bad)
xchg
inc
popf
lock
aad
in
push
cwde
popa
sbb
pop
test
js
out
xchg
ret
sub
imul
mov
cmp
xchg
jmp
xor
lods
pop
bound
cmp
ja
xor
add
mov
mov
cmp
add
xchg
inc
cmp
mov
not
push
out
adc
and
and
sar
xor
cmp
stos
jb
stos
ss
sti
fidivr
cmc
and
shl
or
jns
and
add
add
inc
or
mov
(bad)
push
mov
sbb
adc
cmp
sbb
cs
push
ret
ret
mov
sbb
dec
push
xchg
pop
sbb
or
je
sbb
dec
sbb
sbb
add
jae
xor
lock
cwde
pusha
stc
(bad)
sti
inc
pop
out
push
fdiv
xchg
in
int3
push
shr
xlat
push
out
fild
or
cmp
xor
or
push
outs
das
pop
and
movs
cmp
scas
mov
xor
and
mov
mov
jo
dec
movs
data16
adc
fbld
scas
inc
or
scas
test
clc
adc
lods
cli
pusha
loope
jl
push
push
leave
push
adc
out
ret
ds
(bad)
push
ins
in
loopne
mov
stc
jno
and
add
repnz
push
shr
mov
(bad)
dec
retf
fst
mov
xchg
shl
enter
sub
arpl
(bad)
sub
(bad)
(bad)
cli
pop
shr
fiadd
add
jb
(bad)
rcl
inc
(bad)
jmp
aam
clc
xor
jl
call
sti
ins
dec
push
cld
push
sar
popf
pushf
addr16
test
daa
mov
dec
std
push
jbe
or
fdivr
fldenv
pop
cmps
inc
push
adc
mov
push
daa
ficom
fld
outs
aam
jle
mov
stos
stc
mov
add
push
pop
add
mov
(bad)
jo
jnp
sar
cld
ficomp
add
div
push
xor
clc
icebp
and
(bad)
movs
sub
push
in
push
(bad)
repnz
mov
jecxz
xchg
sbb
push
xor
add
add
add
mov
push
pop
sub
sbb
ins
popa
iret
repnz
fldenv
mov
cdq
cs
inc
pop
(bad)
shl
gs
xor
add
ja
xchg
das
add
add
cdq
iret
fisubr
pop
push
call
mov
neg
mov
mov
aam
aam
xor
push
push
mov
pop
aas
test
(bad)
fisubr
pop
(bad)
test
sbb
inc
and
bound
pop
pop
mov
imul
adc
cmps
(bad)
mov
movs
clc
js
lahf
cmp
call
inc
pop
adc
xchg
mov
nop
and
mov
ja
dec
iret
fwait
mov
daa
das
xchg
mov
(bad)
leave
mov
push
hlt
cmp
push
adc
dec
pop
out
xchg
or
inc
mov
loop
imul
vmovss
adc
adc
je
or
or
adc
push
or
adc
sbb
call
mov
das
push
push
or
mov
add
mov
cmp
sbb
test
push
add
fidiv
pop
hlt
and
inc
shl
rcl
ret
mov
mov
lods
add
adc
into
daa
push
call
mov
inc
and
call
in
add
adc
dec
fwait
bound
aas
fcomp
mov
and
loope
dec
lods
bound
push
loop
sahf
arpl
add
popa
push
jg
sbb
cmp
imul
jns
call
test
outs
ins
inc
lods
iret
and
ds
clc
jb
mov
(bad)
sbb
fwait
mov
mov
pushf
adc
neg
nop
push
lea
pushf
sbb
xor
jb
dec
inc
pop
dec
test
or
dec
mov
push
ret
inc
jle
loope
pop
cwde
fisttp
cmp
ret
test
or
jp
cdq
add
push
lods
cdq
in
ja
push
stos
cli
movs
jns
jmp
fnstsw
fsubrp
loope
cdq
sub
xchg
push
xor
or
in
push
test
retf
out
call
or
mov
pop
fisub
add
jge
repz
movs
and
daa
and
hlt
push
sbb
add
mov
enter
jnp
icebp
mov
call
(bad)
xor
sub
inc
outs
xlat
shr
test
add
pushf
sub
mov
xor
sub
add
or
nop
xchg
mov
sub
adc
sti
into
jl
mov
push
pop
inc
(bad)
fdiv
add
sti
inc
xlat
xchg
ret
mov
imul
sar
mov
shr
add
mov
out
mov
adc
lods
mov
test
and
xor
dec
scas
mov
loope
cdq
mul
stos
sti
add
cs
clc
sbb
dec
sbb
cmp
xor
push
cli
in
aad
or
mov
retf
push
mov
jge
dec
mov
add
jae
lds
or
jmp
mov
sbb
das
movs
jmp
dec
or
cld
xchg
add
shr
pusha
fmul
sbb
or
push
and
xchg
jl
sbb
xor
cmp
adc
lock
dec
cmps
out
dec
add
pop
pop
jmp
test
push
je
or
call
jnp
lea
fistp
add
or
imul
cmp
dec
fnstsw
xor
pop
fmul
add
add
loopne
repnz
add
pusha
rol
or
and
call
mov
mov
jle
(bad)
shr
push
sub
int3
mov
out
adc
fst
adc
cmp
push
or
call
inc
repnz
lods
(bad)
mov
gs
mov
or
mov
je
xchg
add
repz
mov
pushf
adc
inc
jns
sub
push
imul
inc
xchg
dec
repz
adc
stos
clc
inc
sub
(bad)
push
retf
mov
sbb
and
(bad)
outs
inc
and
inc
add
pop
dec
push
in
sbb
imul
pop
daa
jp
std
push
mov
out
mov
sub
jecxz
test
clc
mov
mov
dec
mov
test
into
mulps
push
pop
push
xor
or
lock
ret
jae
aad
div
jle
lods
push
ret
xor
sti
rcl
push
or
shl
pop
cmp
or
nop
inc
repnz
add
inc
cmp
sbb
mov
and
or
adc
cmp
dec
popf
ror
add
and
add
and
pop
ds
pop
cmp
jnp
sbb
in
jmp
cmc
stos
dec
test
je
call
or
push
mov
pusha
xchg
cmp
in
xor
into
adc
pop
test
add
lahf
daa
cld
and
adc
adc
cmp
cmp
fistp
dec
mov
stc
sti
and
mov
fmul
std
clc
imul
imul
dec
(bad)
mov
lock
(bad)
xchg
or
test
outs
push
mov
movs
int3
(bad)
pop
jns
add
pushf
rol
sub
mov
rol
mov
and
push
jns
push
cld
xchg
iret
inc
ds
dec
jno
push
jmp
push
(bad)
mov
mov
icebp
mov
call
addr16
stc
and
ins
out
jle
pop
xlat
add
test
enter
movs
adc
pop
leave
sub
xor
scas
xchg
out
in
iret
adc
mov
lahf
xlat
and
and
fild
mov
mov
das
or
cmps
cdq
add
mov
adc
xlat
xchg
xlat
push
iret
mov
sahf
mov
add
fadd
jno
dec
out
sub
sub
sti
add
jmp
call
sub
rol
inc
out
mov
or
or
mov
or
and
add
btr
daa
cld
loop
jp
mov
lahf
push
or
push
jns
xchg
mov
popa
shl
cmp
fs
into
cmp
adc
mov
add
push
cmp
xchg
das
iret
sub
xor
test
push
push
xor
int3
int3
outs
xchg
retf
mov
cmp
add
or
int
gs
jno
sbb
retf
ja
in
adc
movs
xchg
stos
dec
jmp
cli
rcl
fstp
cmp
and
ds
repnz
sub
mov
retf
aad
mov
pop
inc
aam
into
fisttp
mov
inc
cmc
cmp
pop
shl
retf
adc
dec
inc
sub
mov
sar
or
pushf
loopne
sbb
adc
dec
ins
fsubr
add
mov
inc
and
jnp
mov
repnz
jno
aam
xor
add
adc
imul
jmp
push
jnp
loope
aas
mov
add
out
lods
adc
ja
sbb
ins
sbb
jp
push
adc
aaa
lea
ror
adc
sbb
fmul
inc
mov
add
sub
cmp
inc
test
out
test
cmp
mov
dec
or
dec
fldcw
adc
cmp
pusha
jle
xchg
jge
sbb
fcomp
rcl
or
stos
push
and
pop
cli
push
out
stc
push
or
mov
mov
adc
push
mov
add
scas
mov
repnz
retf
push
seto
ins
mov
fwait
cmp
icebp
adc
push
pop
neg
mov
scas
inc
sysret
das
daa
fisttp
pop
movs
push
xchg
push
(bad)
lods
mov
sub
sahf
or
out
cmps
add
cmps
adc
jecxz
out
out
sysret
das
es
sbb
xchg
addr16
push
sbb
ja
data16
jg
jno
inc
out
pop
fidivr
clts
xor
ror
imul
jnp
add
sbb
out
cmps
lods
add
cmps
stos
mov
sbb
lock
(bad)
out
fadd
add
add
add
dec
addr16
into
mov
ins
cs
out
push
daa
clts
mov
jne
push
pop
or
repnz
das
fwait
mov
push
xchg
push
xor
xor
jo
scas
imul
call
xchg
push
sbb
shr
sbb
mov
out
pop
xchg
mov
lea
dec
and
xchg
or
movs
and
rcr
xor
lahf
fisttp
(bad)
mov
mov
cdq
mov
call
and
adc
jmp
(bad)
push
inc
(bad)
jl
xor
jmp
lea
inc
push
mov
mov
mov
jmp
imul
sar
mov
shr
add
stos
ret
pop
popa
sar
scas
mov
pop
dec
jne
mov
ret
jo
or
lock
cmp
(bad)
push
pusha
and
cmp
or
jle
cwde
push
fidivr
push
push
pop
pop
imul
mov
daa
lock
xor
sub
pop
rol
or
or
add
(bad)
das
adc
adc
test
adc
out
jbe
xor
sub
or
adc
imul
mov
pop
retf
or
popa
fmul
cdq
push
mov
push
call
(bad)
in
mov
ror
fistp
dec
int3
daa
aaa
dec
adc
inc
in
popa
das
or
cmp
jb
test
inc
gs
push
push
bts
push
add
pop
sub
sbb
xor
out
je
out
and
push
add
dec
and
retf
fucomi
jmp
jg
ja
xor
cmp
packsswb
cmp
cmc
push
cmp
pop
push
or
loop
push
jne
fld
pop
push
or
add
pop
lock
cmps
or
xchg
add
pop
sbb
add
cli
or
push
xchg
test
aad
cli
mov
mov
jge
call
jl
out
cmp
cmps
mov
cmp
push
(bad)
mov
into
push
and
das
adc
and
into
xor
dec
adc
sbb
add
fwait
sub
test
pop
enter
sub
xor
push
bnd
xor
retf
int
mov
dec
dec
push
test
mov
or
xor
inc
mov
sbb
and
cmp
imul
adc
push
les
fst
jne
pop
outs
cmp
(bad)
and
or
in
push
lea
fld
je
and
sbb
or
inc
into
adc
call
cmp
jne
cwde
fs
aas
mov
mov
add
inc
xor
pop
ds
or
or
ror
test
daa
dec
or
xchg
mov
xchg
test
push
push
fidiv
sbb
rol
dec
sub
cmp
fmul
xchg
adc
sbb
aaa
imul
sbb
jb
inc
fistp
movups
dec
mov
int3
or
adc
jmp
inc
push
daa
mov
jns
test
addr16
(bad)
and
sahf
cmp
push
jp
and
(bad)
out
or
jle
sbb
inc
dec
jbe
xchg
sbb
xchg
cmps
iret
(bad)
stos
ror
jg
les
xchg
rol
sbb
cmp
nop
pop
call
push
and
push
dec
xchg
scas
pop
push
sbb
nop
jmp
dec
stos
and
cmp
outs
or
jae
sub
imul
pusha
adc
ret
sbb
rcr
clc
jl
lods
xchg
iret
movs
popf
and
in
mov
fwait
cld
int3
mov
mov
add
ror
lea
mov
call
push
cwde
fcomp
xchg
jp
nop
out
test
mov
fwait
inc
xor
mov
call
or
fadd
test
ficom
pop
add
and
push
imul
daa
sbb
(bad)
cmp
clc
inc
jle
xchg
jmp
mov
repnz
or
les
sti
dec
push
add
or
fdiv
pop
cli
dec
(bad)
fld
or
pop
push
and
and
add
xor
and
pop
add
or
sbb
sub
mov
or
inc
mov
pop
mov
cmp
pop
sub
int3
mov
inc
mov
daa
mov
das
sub
xchg
sbb
pop
mov
cmp
stc
lods
pusha
add
push
add
je
retf
repz
push
dec
je
dec
pop
xchg
fldcw
cmp
mov
pop
stc
sbb
mov
push
adc
sub
daa
mov
(bad)
mov
outs
dec
or
push
xchg
call
mov
(bad)
mov
pop
stos
push
imul
xchg
ret
or
cli
adc
or
mov
xor
adc
retf
shr
and
(bad)
ss
les
sub
inc
cmp
adc
les
jg
(bad)
sbb
inc
adc
pop
pop
movs
pop
lea
aad
xchg
sbb
addr16
jbe
retf
mov
cli
pop
ror
mov
fistp
nop
je
pop
dec
add
xchg
mov
inc
pushf
and
ss
fwait
pushf
test
mov
ja
cmp
popf
mov
inc
sbb
sar
fld
adc
add
ins
adc
or
and
push
mov
test
add
aad
xor
jl
mov
xor
hlt
sbb
xchg
(bad)
mov
fdivr
push
jb
mov
cmp
add
sbb
movs
pusha
fild
xor
mov
sub
pop
pop
push
adc
sbb
neg
std
push
daa
mov
lfs
adc
or
fdiv
cmp
sbb
inc
pop
jb
sbb
adc
mov
dec
dec
or
cmps
cmp
add
mov
cli
push
mov
jmp
add
push
jns
sub
cs
pop
lods
mov
pop
xchg
xchg
mov
jb
sub
std
jmp
or
or
sar
adc
push
jp
in
pop
out
cmps
mov
fild
shr
sbb
inc
cdq
inc
pusha
repnz
inc
mov
jbe
js
lods
xchg
sbb
xor
mov
pop
test
(bad)
or
loop
mov
or
sbb
sar
sbb
jle
add
call
xchg
jb
lea
cmp
mov
xchg
test
jne
adc
adc
and
pop
add
jmp
push
inc
jne
add
dec
add
sbb
inc
xchg
pop
mov
mov
loop
add
fild
mov
sbb
adc
cmp
xchg
jnp
bound
test
and
pushw
push
ret
dec
jnp
sbb
mov
adc
sbb
xchg
sbb
lahf
movs
aaa
add
cmp
xchg
add
imul
adc
jge
push
mov
mov
add
jmp
pop
sub
or
sar
sub
enter
xchg
pop
clc
sbb
add
sbb
(bad)
xchg
xor
cmp
jle
or
and
ficom
scas
pop
cmp
xor
mov
fistp
inc
pop
inc
mov
adc
addr16
icebp
jae
xor
push
je
rol
adc
sbb
push
dec
(bad)
push
inc
pop
xor
pop
imul
test
push
pusha
push
sbb
addr16
fs
sar
je
pop
mov
add
cld
ret
repz
popf
js
jne
inc
sub
ja
adc
ret
rol
mov
(bad)
lock
push
mov
push
adc
popf
mov
inc
scas
adc
dec
sbb
bound
push
mov
add
fdiv
shr
inc
mov
cmp
jge
dec
outs
sub
mov
jmp
add
lods
sbb
loope
es
mov
add
pop
enter
pop
jb
pop
or
js
pop
ret
shl
or
shr
retf
std
mov
cmp
cmp
icebp
add
and
cwde
add
in
(bad)
pop
ins
jne
pop
je
push
je
dec
ffreep
pop
rol
xor
sbb
dec
and
sbb
xor
fbld
inc
inc
sbb
sbb
aas
daa
(bad)
fisttp
push
sub
and
outs
inc
mov
jae
fmul
push
mov
push
punpcklbw
dec
mov
int
paddb
xor
push
adc
pop
lods
and
repz
and
loope
dec
xchg
jb
add
cmp
hlt
dec
int3
fld
adc
pop
loopne
cmps
pop
sub
int3
(bad)
or
and
outs
test
push
cdq
mov
(bad)
adc
mov
retf
ret
xchg
jbe
jecxz
je
jb
xchg
adc
inc
wrmsr
loopne
cli
fs
xor
xor
push
mov
je
cs
mov
jle
fadd
shr
shl
(bad)
fdiv
stos
gs
jae
dec
test
jne
fs
aaa
hlt
xchg
bound
xor
adc
dec
dec
xchg
xor
sub
push
push
jb
push
and
inc
jno
in
add
movs
pop
enter
in
xchg
addr16
pop
ss
adc
dec
lods
dec
inc
mov
test
ja
repz
dec
mov
div
push
scas
adc
popa
xor
mov
sti
test
jle
and
jmp
push
fisttp
shl
xchg
inc
in
sti
push
sub
sub
fmul
mov
xor
cwde
lds
and
popa
enter
retf
pop
push
pushf
pop
pop
inc
enter
add
and
js
xchg
add
or
add
int3
mov
sbb
clc
clc
adc
pop
pop
lahf
jbe
mov
out
arpl
jl
xchg
or
enter
inc
dec
pushf
cs
ror
xor
stos
ror
lods
test
in
ret
dec
idiv
xor
mov
xchg
nop
push
or
pop
xor
push
cmpps
cs
sub
push
push
sar
jnp
pop
push
jmp
dec
xchg
jb
jmp
inc
jmp
mov
ss
fsub
stos
and
sbb
jle
scas
je
mov
and
pcmpeqw
out
mov
mov
dec
jne
add
adc
addr16
dec
nop
mov
push
(bad)
loop
call
mov
lock
(bad)
scas
std
je
or
pop
and
in
(bad)
xchg
cld
pop
leave
dec
sbb
test
xchg
cli
mov
xchg
pop
mov
or
dec
fwait
test
sub
leave
xchg
scas
movs
aad
mov
or
mov
adc
pop
xchg
push
sub
add
cmp
je
loope
retf
movs
std
pop
bound
jl
or
std
cdq
nop
fisttp
fmul
retf
test
test
loopne
add
scas
dec
fwait
out
jl
adc
add
dec
sbb
push
cdq
pop
or
cld
sbb
jle
scas
pop
xor
pop
cmp
mov
sub
inc
and
pop
aam
and
lahf
inc
inc
sbb
cmp
jnp
sbb
push
adc
dec
shr
popa
arpl
jae
inc
mov
push
add
push
mov
fisttp
cmp
pop
daa
ret
cmp
test
test
xchg
pop
sbb
fst
or
imul
loopne
add
mov
lock
in
jle
js
in
jge
mov
cdq
xor
ror
jb
push
mov
jecxz
mov
fst
and
push
cli
jmp
neg
aad
mov
mov
cli
test
jns
add
jmp
retf
xor
popa
jl
mov
dec
sbb
lea
shl
cs
test
push
push
jg
scas
(bad)
cdq
(bad)
in
mov
in
adc
jns
adc
enter
lea
cs
cs
cs
push
push
jmp
mov
adc
push
or
push
jle
out
aam
push
adc
add
mov
call
xchg
mov
cmp
or
mov
int3
add
adc
and
bound
mov
xchg
scas
fidivr
dec
add
arpl
sub
push
and
dec
jl
daa
pop
sbb
pop
adc
or
jo
cdq
mov
sub
icebp
jmp
dec
adc
push
ret
push
and
cdq
mov
dec
inc
fcom
push
mov
xchg
or
mov
push
adc
mov
test
dec
adc
add
into
xor
(bad)
jno
js
cmps
sub
aam
jecxz
dec
in
adc
out
pop
nop
mov
call
ret
adc
jp
sbb
add
mov
jne
inc
test
(bad)
mov
xor
xor
mov
les
inc
and
in
mov
xor
inc
or
sbb
cli
xor
call
or
xor
adc
ret
mov
shl
sbb
fcmovb
jmp
dec
(bad)
test
neg
(bad)
xchg
mov
pop
mov
cmp
jo
sbb
sbb
sub
xlat
add
sbb
dec
add
repz
sub
or
adc
jmp
rol
jne
adc
aas
test
cmps
aas
mov
mov
adc
cmp
jne
or
push
pop
int3
add
aam
popf
pop
rcl
jmp
push
imul
pusha
aaa
cmp
and
add
jle
movs
sbb
cmp
xor
gs
mov
adc
stos
fcmovb
and
xlat
cmp
or
pusha
mov
loopne
daa
jle
xor
xchg
or
xchg
(bad)
mov
push
retf
jnp
jl
cmp
mov
repz
js
sub
out
(bad)
or
xchg
xchg
push
sbb
add
sbb
lahf
push
popf
add
cmp
ja
push
cdq
mov
inc
fiadd
adc
add
mov
repnz
mov
ror
pcmpgtb
jb
test
mov
mov
xchg
add
test
sub
loope
or
and
sub
addr16
push
mov
mov
retf
pop
cmp
adc
push
aaa
aas
mov
adc
cmp
push
mov
rcl
dec
ror
lea
lea
add
add
rol
push
jns
not
adc
test
test
mov
shl
cmp
repnz
movs
xchg
out
inc
test
int3
in
outs
and
pusha
out
rol
and
cmp
int3
add
call
loopne
(bad)
arpl
adc
jge
cmp
daa
in
lock
cld
clc
add
aam
mov
xchg
push
jns
out
adc
add
out
loopne
ja
loope
sbb
enter
cmp
iret
and
dec
inc
and
pop
out
jae
pop
and
cmp
nop
retf
pop
sbb
js
add
add
in
add
fdiv
out
inc
movs
lods
cmp
push
cmp
repnz
push
add
xor
inc
enter
sub
lock
pop
fisub
(bad)
mov
test
cmp
pop
adc
nop
inc
push
rcl
or
adc
jnp
out
sbb
and
arpl
stc
es
xor
jbe
add
jns
cmp
dec
inc
sbb
xchg
nop
dec
push
add
jns
pop
jbe
shr
leave
nop
inc
push
mov
in
in
test
nop
xor
add
and
mov
and
mov
in
add
int3
loope
repnz
out
mov
loopne
jl
xchg
pop
cmp
mov
mov
add
add
add
in
out
adc
sub
and
and
inc
push
jb
sub
xor
pop
mov
xor
xor
out
inc
push
dec
jns
and
gs
push
pop
dec
push
jb
ins
jo
js
xchg
and
pop
mov
enter
nop
xchg
cwde
out
sbb
pushf
movs
ins
mov
in
retf
pop
scas
mov
mov
pop
jbe
add
iret
pop
aam
cmp
jnp
arpl
fcom
loopne
jnp
nop
inc
in
ret
sbb
add
inc
cld
mov
adc
sbb
add
or
adc
adc
jbe
sbb
and
repnz
sbb
sub
sub
jbe
enter
inc
push
push
adc
out
sbb
pop
jbe
push
mov
mov
nop
inc
jo
jl
xchg
int
mov
xchg
enter
mov
les
push
cmp
adc
mov
pop
pop
fcmovnbe
adc
add
pop
mov
call
push
das
fwait
clc
mov
push
or
add
add
js
nop
add
cld
adc
add
fsub
(bad)
icebp
dec
sbb
adc
mov
xor
sbb
cmp
cmp
ja
inc
dec
xchg
out
inc
dec
push
cmp
(bad)
in
add
push
mov
in
in
jo
js
nop
inc
mov
out
mov
add
add
fstp
sub
mov
fsub
xchg
sbb
jns
int3
push
and
stc
sahf
retf
mov
movs
arpl
clc
ja
xchg
(bad)
adc
add
in
mov
loopne
sbb
sbb
addr16
ret
push
and
ja
add
stc
ss
lock
arpl
cmp
adc
push
jbe
cs
gs
pop
shl
cmp
nop
fs
jae
xor
xchg
mov
cwde
push
movs
lea
lods
mov
pop
sahf
retf
jae
push
in
xchg
aam
fadd
mov
cmp
loopne
in
pop
inc
and
cmp
lock
clc
add
cld
pop
mov
mov
pusha
sub
xor
add
cs
mov
and
xchg
jns
cmp
retf
jae
and
arpl
arpl
in
xor
add
jbe
and
out
add
xchg
in
arpl
nop
retf
out
into
fbld
jns
add
jl
mov
enter
in
rol
aam
fsub
mov
add
in
ja
push
repnz
lock
add
add
cmp
les
dec
mov
adc
add
jbe
xor
xor
cmp
ss
addr16
add
push
(bad)
fwait
enter
arpl
add
sahf
mov
pop
out
ins
ins
js
sbb
fld
adc
xchg
ja
and
(bad)
in
add
test
in
in
lods
inc
mov
nop
inc
cs
rcr
repnz
add
inc
fdiv
in
jmp
adc
pop
jns
cld
jbe
mov
nop
mov
mov
jae
xchg
and
sub
in
nop
outs
(bad)
adc
xor
cmp
push
jbe
sbb
push
add
add
fsub
xchg
xchg
push
pop
adc
jns
or
push
in
retf
hlt
js
sbb
test
fld
mov
and
and
rol
and
jns
add
add
test
repnz
cs
push
arpl
xchg
mov
in
lock
jp
pop
jns
movs
mov
nop
xchg
add
sbb
enter
and
add
add
in
dec
cmp
push
push
push
push
add
fimul
out
cmp
mov
jo
xchg
je
out
inc
push
jl
mov
xchg
retf
pushf
sbb
enter
lods
and
idiv
(bad)
enter
mov
les
stc
jge
bound
dec
stos
ja
add
mov
jns
(bad)
add
pop
adc
push
cmp
fcmovnbe
mov
sub
xor
cs
nop
inc
xor
jbe
dec
xchg
jns
dec
push
push
retf
jae
and
shl
jl
ins
shr
je
in
xor
js
jl
jbe
nop
xchg
std
fist
fs
pop
jbe
out
pop
ss
or
rol
mov
and
(bad)
int3
and
out
sub
ror
sbb
loopne
in
dec
pop
outs
shl
stc
ja
inc
cld
mov
add
add
or
jp
nop
or
fs
pop
in
inc
mov
adc
out
push
sbb
cmp
inc
jb
and
pop
sahf
inc
push
push
add
cmp
div
arpl
je
mov
out
cwde
mov
cmp
mov
dec
nop
xchg
cwde
repnz
movs
movs
enter
mov
mov
cmp
sbb
mov
in
mov
fsub
nop
inc
push
loopne
in
xchg
xchg
adc
aam
call
or
adc
idiv
fcom
sbb
iret
adc
ja
inc
push
cmp
sub
ss
out
in
inc
aad
inc
sbb
and
add
int
sbb
pop
adc
fs
cwde
enter
push
sbb
je
adc
enter
mov
xchg
nop
xchg
cmps
fisubr
inc
push
jns
add
fnstenv
(bad)
fdiv
and
jl
repz
sub
pusha
arpl
cld
push
sbb
popa
adc
mov
int
mov
sbb
add
ficomp
and
and
ja
sub
and
(bad)
inc
xchg
enter
push
jb
xor
pop
cmp
ficomp
fs
push
xor
xchg
test
inc
mov
jb
and
call
sbb
enter
lods
mov
int
and
int3
and
rcl
inc
push
jns
fcomp
add
mov
lock
arpl
clc
adc
add
sbb
mov
test
(bad)
mov
mov
retf
cmps
jns
pop
cmp
outs
cmp
(bad)
in
inc
dec
add
mov
cli
pusha
repnz
inc
push
fs
mov
or
jbe
mov
add
jns
and
add
inc
push
mov
ja
enter
fldln2
sbb
jae
and
loopne
adc
enter
in
jbe
jle
addr16
mov
cld
mov
repnz
cmc
adc
push
lock
sbb
and
ja
stc
push
arpl
inc
sbb
enter
inc
add
jae
push
dec
pop
pop
mov
enter
push
addr16
jl
nop
inc
push
stc
ja
test
mov
xchg
xchg
mov
icebp
hlt
movs
test
pop
sahf
inc
push
mov
lods
les
in
repnz
pop
mov
jbe
(bad)
jb
xchg
call
out
xchg
clc
rol
mov
or
out
adc
dec
adc
add
fwait
and
adc
cmc
clc
xor
nop
inc
push
cmp
add
out
or
xor
arpl
repnz
pop
adc
fs
xchg
js
sbb
jl
test
jbe
pusha
pushf
push
cmp
mov
pusha
mov
enter
mov
and
(bad)
enter
enter
nop
adc
sub
adc
push
nop
inc
push
test
ss
data16
shl
mov
fwait
retf
sbb
sbb
jbe
sub
mov
xor
cld
in
cmp
inc
out
enter
xchg
gs
inc
push
mov
repnz
pusha
or
je
enter
mov
add
fwait
inc
push
test
jb
iret
pushf
mov
nop
add
and
les
sbb
enter
lds
arpl
pop
cmp
nop
out
push
sti
ja
lock
js
or
jl
ret
adc
inc
xor
inc
ret
sahf
retf
jnp
ret
jbe
sub
in
xchg
xor
mov
pop
inc
aam
jb
nop
out
xor
push
adc
jns
sbb
fs
cld
jo
in
retf
inc
je
jl
mov
push
or
add
nop
retf
mov
add
add
xchg
jns
mov
enter
jbe
fsub
arpl
pop
sahf
inc
jle
ret
ja
or
cwde
ins
sar
ret
add
cmp
adc
or
adc
jb
outs
sbb
and
sub
and
pop
sahf
retf
jae
call
enter
push
pop
retf
jae
sbb
out
or
mov
jo
js
neg
test
nop
shl
cmp
enter
pushf
add
test
ins
mov
and
cmp
mov
in
in
add
nop
fdivr
and
sub
ret
sahf
outs
xor
ret
ret
pop
pop
ja
mov
cld
adc
mov
rcl
add
add
in
mov
adc
jbe
and
inc
push
cmp
sub
pop
sahf
retf
out
out
or
aaa
dec
jb
and
iret
neg
xor
push
nop
inc
jo
add
repnz
sahf
inc
sbb
push
cmp
nop
xchg
cwde
cmp
out
pushf
movs
test
mov
retf
cmp
ror
lods
aam
enter
fcomp
loopne
repnz
in
sar
repnz
fwait
arpl
lds
adc
out
jnp
or
adc
adc
scas
enter
adc
ja
sub
mov
push
xor
sub
jb
in
inc
dec
dec
xchg
addr16
xchg
pop
pop
fs
push
mov
in
xor
jo
je
out
test
add
and
inc
mov
jmp
mov
cmp
nop
mov
mov
jns
rcl
aam
xchg
fcomp
loopne
js
iret
call
clc
sbb
and
add
sti
sahf
add
cld
adc
jbe
adc
in
arpl
ja
add
add
pop
xor
sbb
push
jo
xchg
inc
inc
dec
int
sbb
dec
add
pop
in
inc
mov
adc
repnz
sbb
jbe
test
dec
retf
sbb
inc
jns
fs
mov
pushf
pushf
in
nop
outs
jae
sbb
lods
mov
repnz
jbe
arpl
and
aam
nop
mov
fsub
push
stc
ss
loopne
sbb
arpl
clc
imul
add
add
repnz
adc
push
adc
adc
ja
add
and
aam
or
mov
mov
jbe
pop
sbb
and
mov
je
sbb
enter
mov
nop
push
cwde
cwde
jb
mov
inc
rol
test
iret
mov
sbb
mov
out
mov
cs
int3
ror
sbb
add
nop
retf
out
fsubr
sbb
cmp
hlt
clc
cld
xchg
fistp
enter
adc
enter
punpckhwd
sbb
and
fwait
retf
jbe
jbe
and
jns
cmp
nop
inc
cmp
inc
add
dec
cmp
pop
add
cmp
pop
pusha
fs
retf
xor
push
dec
enter
add
xchg
test
lea
push
mov
mov
in
loop
int3
ror
xor
inc
aam
fadd
mov
and
arpl
pop
out
and
add
mov
retf
jg
or
add
sbb
in
adc
sbb
and
retf
out
clc
xor
cmp
in
cmp
mov
hlt
or
and
push
pop
pusha
fs
int
cmp
and
or
leave
leave
int
sbb
jbe
pushf
and
data16
sbb
lods
ja
ins
rol
xchg
dec
enter
(bad)
enter
cmp
out
fmul
and
mov
ja
sbb
add
add
imul
adc
jb
adc
add
in
mov
div
enter
xor
add
cs
retf
xor
sub
cmp
nop
inc
pop
pop
pusha
add
mov
je
xchg
enter
test
retf
xchg
add
out
inc
bound
mov
and
mov
nop
retf
fisub
rcr
fs
retf
aam
(bad)
enter
loopne
dec
in
push
jns
pop
gs
addr16
lock
cmc
push
retf
sub
inc
push
sbb
dec
retf
cmp
retf
sbb
ins
sub
arpl
xor
retf
xor
cmp
ja
sbb
mov
(bad)
xlat
ja
push
pop
cs
and
inc
push
mov
js
cmp
nop
jl
mov
in
outs
jae
aaa
adc
and
cmp
sbb
jns
mov
in
xchg
enter
pop
movs
in
dec
loopne
ds
xor
stos
ja
fidiv
call
in
ins
and
repnz
sbb
sbb
and
in
retf
cmp
sub
add
xchg
xor
test
jl
dec
cmp
dec
push
mov
cmp
nop
push
pop
pusha
jbe
nop
inc
cs
ins
cmp
jo
cmp
or
js
jl
cmp
in
mov
cwde
out
inc
push
pushf
mov
xchg
push
mov
mov
nop
cmp
rol
add
ss
addr16
fs
jne
fmul
in
loopne
in
in
pop
pop
imul
and
mov
add
push
sbb
or
or
jbe
adc
movs
push
movs
inc
int
sub
add
cmp
xchg
int
jbe
inc
add
dec
and
jns
dec
push
add
ins
cs
pop
loopne
add
ins
enter
jo
je
js
ss
ja
out
hlt
mov
nop
jbe
and
retf
out
cmp
cmp
mov
mov
addr16
or
sub
mov
mov
add
ret
cmp
jbe
push
clc
cmp
xchg
gs
into
add
add
mov
jbe
adc
push
stc
push
dec
cmp
and
sub
cmp
sub
jbe
and
inc
dec
repnz
enter
fs
retf
out
gs
cmp
jl
push
jns
pop
mov
mov
xchg
cwde
mov
mov
mov
in
inc
mov
int
movs
ror
aam
sbb
enter
call
mov
aad
leave
and
into
iret
adc
jbe
adc
out
call
(bad)
mov
ja
sub
jae
aam
dec
arpl
nop
arpl
xchg
int
cmp
data16
fs
enter
jo
mov
test
nop
mov
inc
pushf
clc
or
push
mov
out
cmp
mov
in
nop
inc
push
stc
ja
aam
int
cmp
fsub
and
dec
nop
mov
iret
mov
mov
or
fisubr
not
adc
push
adc
sbb
enter
ja
sub
pop
sahf
retf
inc
cmp
enter
push
push
mov
pop
add
lods
leave
pusha
fs
and
adc
je
sbb
add
test
adc
jl
xchg
ins
movs
ss
out
test
sbb
mov
mov
mov
test
push
(bad)
rcl
add
in
loopne
in
imul
clc
fdivrp
fisub
mov
adc
and
inc
adc
sbb
in
jb
sub
xor
jb
and
pop
sahf
inc
push
inc
add
xchg
fldcw
pop
pusha
(bad)
nop
add
jo
add
nop
outs
jae
ins
sub
add
adc
jae
out
movs
test
and
jns
add
jb
cs
in
int3
(bad)
nop
xchg
add
add
jb
retf
int3
cmp
add
(bad)
lock
and
push
stos
fbstp
or
test
inc
repnz
ficom
adc
ja
sbb
retf
out
or
push
xor
nop
xor
cmp
inc
fstp
dec
out
js
lahf
loopne
xchg
pop
pop
pusha
fwait
retf
xor
add
mov
test
jl
test
push
cmp
jb
cmps
inc
mov
nop
xchg
xchg
outs
(bad)
enter
enter
fcomp
pop
mov
in
ret
jmp
in
lock
dec
ds
fwait
cld
cli
or
or
or
rcl
shl
push
fst
sbb
and
xchg
sub
xor
retf
jae
and
sbb
inc
cs
push
jb
push
pop
sahf
inc
push
repnz
add
pop
push
pop
je
and
or
nop
xchg
enter
push
cwde
jmp
mov
jb
retf
xor
pop
das
ror
pop
gs
fidiv
mov
or
call
je
add
lock
cli
push
loop
sub
or
jmp
xchg
adc
adc
mov
jbe
sub
fild
nop
inc
push
xor
add
out
or
fmul
fist
jb
and
fnstenv
add
cmp
nop
outs
push
mov
mov
ja
sbb
push
cmp
mov
inc
cwde
pushf
mov
movs
lods
inc
in
nop
outs
xchg
(bad)
ja
arpl
jb
enter
mov
fbstp
(bad)
cmp
pop
sbb
idiv
aam
stos
ja
push
hlt
and
add
sbb
aad
adc
xchg
int
or
push
shr
push
jb
and
xor
fistp
cmp
dec
push
add
inc
xor
dec
pop
aad
neg
out
pop
pusha
mov
sbb
sbb
call
aad
cmps
dec
push
aad
test
push
sub
pushf
add
gs
pop
(bad)
mov
sbb
(bad)
int3
in
repnz
fsub
mov
out
lds
pop
ja
ficomp
hlt
cld
cmp
adc
add
push
sub
or
(bad)
cld
or
sbb
lods
adc
ja
sub
in
xchg
add
inc
cs
adc
out
adc
dec
push
cmp
nop
dec
push
push
pop
and
push
jns
jo
add
cs
sub
push
nop
enter
xchg
cwde
pushf
pop
sahf
retf
jae
cmp
mov
sbb
and
add
mov
aam
add
jb
and
loopne
xchg
out
pop
out
in
pop
clc
mov
cld
xlat
add
add
fdivp
sbb
xlat
or
adc
sbb
into
and
ja
sub
in
in
add
inc
jns
nop
arpl
dec
(bad)
repnz
cmp
jbe
add
adc
and
jae
push
jns
add
in
retf
and
nop
xchg
pop
sahf
inc
push
cwde
mov
in
xor
inc
mov
enter
iret
pop
ja
fdivr
arpl
call
sbb
sub
fsub
inc
push
fcomp
fmul
adc
into
ins
adc
and
in
(bad)
ja
sub
xor
iret
in
cmp
inc
cmp
inc
dec
dec
add
mov
and
(bad)
push
jl
in
js
test
arpl
mov
nop
xchg
pop
sahf
retf
cmp
jnp
and
ja
out
or
mov
push
lods
nop
inc
xchg
fcomp
jae
pop
fdiv
xchg
lock
fist
cld
add
test
jbe
adc
and
fdivrp
adc
repnz
ja
add
in
retf
out
xor
push
cmp
loopne
in
pop
pop
aam
fs
inc
push
push
cs
retf
clc
xor
test
mov
pop
ss
adc
cmp
retf
xor
int3
cmp
nop
inc
rcl
fsubr
jns
loopne
in
aaa
push
ja
cmp
nop
lock
clc
cld
out
jge
inc
fiadd
adc
jbe
adc
enter
fcmovu
stc
sahf
popa
pminub
add
ins
arpl
fidivr
cmp
inc
pop
sahf
popa
(bad)
fild
dec
mov
cmp
fstp
cs
pusha
fs
xor
inc
push
xchg
cmp
out
add
mov
xchg
int3
cmp
mov
mov
mov
pop
jbe
and
ror
sbb
enter
fsub
repnz
inc
add
nop
inc
push
cmp
hlt
clc
inc
in
jae
add
adc
push
cmp
cmp
arpl
jae
mov
cmp
or
in
xor
cmp
repnz
sahf
inc
dec
pop
push
mov
push
cmp
pop
pop
pusha
cmp
out
fs
jo
loopne
inc
push
mov
in
in
nop
mov
inc
mov
xchg
mov
rcr
in
(bad)
enter
and
jl
mov
ds
or
jae
and
jp
retf
or
mov
(bad)
adc
mov
xchg
ja
jbe
sub
sbb
(bad)
adc
nop
cmp
push
add
ja
aas
adc
pop
pop
(bad)
in
in
push
pop
inc
pop
inc
adc
fcomp
fdiv
cmp
jb
pop
cwde
xchg
pushf
mov
movs
test
mov
xchg
int
pop
mov
push
jns
(bad)
enter
cmp
and
arpl
push
repnz
ja
lock
clc
pushf
(bad)
fld
fiadd
mov
or
push
cmp
adc
adc
sbb
mov
sub
sub
iret
and
inc
shl
fild
inc
or
push
pop
add
jns
iret
fs
enter
fst
sub
and
inc
and
xchg
out
cwde
pushf
mov
pop
jbe
and
inc
out
rol
retf
xor
inc
enter
sub
mov
loopne
fisub
(bad)
fld
jbe
mov
push
push
adc
jns
(bad)
adc
mov
and
inc
scas
ja
cmp
nop
sub
xor
pop
sahf
inc
cmp
dec
dec
arpl
cmp
dec
push
adc
das
out
nop
pop
pusha
jbe
ins
add
jb
jo
js
ins
cs
and
inc
push
mov
in
in
test
mov
jb
and
mov
int3
cld
fadd
repnz
inc
fsub
add
pop
xchg
lock
pop
ins
cs
jl
mov
imul
add
sub
and
xor
sbb
(bad)
adc
out
nop
xor
jbe
inc
loop
inc
push
cmp
dec
dec
push
ins
cs
nop
push
pop
jbe
push
push
mov
repnz
js
and
mov
mov
adc
pushf
movs
jbe
mov
jb
and
(bad)
cmp
nop
cmp
add
rcr
mov
cs
adc
add
repnz
sbb
in
jbe
clc
mov
and
xlat
and
adc
ja
and
adc
movs
mov
xlat
loopne
dec
adc
loopne
mov
and
jbe
push
jb
pop
sahf
xor
inc
dec
cmp
xchg
dec
push
add
iret
in
pop
call
in
inc
ins
jo
out
mov
or
in
nop
mov
jae
xchg
arpl
mov
mov
ja
inc
ror
xchg
enter
loopne
cs
and
fs
adc
mov
clc
arpl
xor
inc
xchg
add
jbe
adc
jbe
arpl
mov
and
int
cmp
sub
test
dec
in
inc
mov
adc
out
push
sbb
shl
in
retf
dec
sbb
pop
sahf
inc
push
jo
hlt
test
cmp
repnz
mov
xchg
pushf
add
push
or
sahf
test
arpl
loope
jbe
xor
in
int3
fcom
aam
nop
xchg
fadd
in
stc
ss
dec
lock
inc
arpl
clc
cmp
inc
cld
loop
adc
jbe
outs
xchg
fisubr
dec
cmp
add
dec
mov
pop
loop
and
iret
in
sub
cmp
inc
inc
inc
dec
add
mov
pop
fadd
fs
and
pop
jns
and
jo
test
and
nop
add
fsub
push
fld
test
pop
jbe
call
enter
rcr
enter
fsub
dec
retf
out
clc
in
add
nop
inc
xchg
loop
loop
cld
mov
jecxz
push
add
add
fs
jecxz
jecxz
xchg
cmps
dec
jbe
sub
pop
cmp
out
sbb
inc
dec
cmp
in
retf
mov
iret
and
push
mov
ficom
pop
bound
jb
mov
cmp
mov
iret
and
js
mov
les
sbb
jecxz
xchg
xchg
cmps
jbe
nop
(bad)
imul
nop
in
lock
clc
add
pop
popf
daa
in
lahf
in
push
push
imul
adc
xchg
out
ret
ja
sbb
mov
imul
cmp
sbb
enter
ror
and
pop
cmp
sbb
pusha
fs
in
enter
fnstcw
nop
xchg
mov
or
ss
clc
pushf
ins
movs
arpl
pop
in
out
mov
fstp
sbb
ins
xchg
(bad)
in
and
add
fwait
retf
xor
cmp
outs
push
enter
jmp
repnz
hlt
cld
pop
in
and
fdivp
adc
jb
adc
in
in
js
enter
outs
pop
xor
and
mov
mov
mov
in
inc
pop
pusha
push
test
jno
js
sbb
enter
mov
in
cmp
cwde
mov
jb
movs
test
ins
cs
mov
mov
nop
inc
push
(bad)
enter
in
aam
loopne
arpl
xchg
pop
xchg
sti
ja
lock
clc
push
pop
add
add
imul
out
inc
adc
out
adc
and
sub
cmp
sbb
xor
cmp
inc
xor
enter
jbe
arpl
adc
fs
jb
in
jo
je
iret
and
jl
mov
add
inc
mov
nop
outs
jae
mov
inc
push
jns
rcl
add
nop
out
mov
fsubr
sbb
pop
out
lods
ja
js
in
hlt
mov
adc
adc
or
dec
retf
cmp
jbe
sbb
enter
aaa
ja
sub
cs
and
xchg
jns
dec
push
push
in
fs
add
cld
enter
ins
jnp
jo
xchg
js
test
sbb
in
pop
nop
fwait
xchg
cwde
out
inc
push
pushf
mov
xchg
xor
repz
inc
rol
aam
dec
cdq
cmp
mov
std
(bad)
fmulp
add
js
jecxz
lock
mov
sub
xor
stos
push
ja
sar
inc
lods
enter
xor
lgdtd
xor
repz
and
dec
inc
pop
out
xchg
pop
movs
cs
jb
or
ror
imul
mov
xor
mov
test
jge
rcr
xor
mov
inc
pop
or
adc
test
dec
jge
cmps
pop
rol
mov
push
lock
push
and
or
lods
ins
or
push
sbb
inc
mov
mov
cmp
shl
ror
push
jmp
dec
push
iret
ins
or
mov
imul
adc
loopne
call
mov
pop
ret
sub
dec
dec
test
pop
js
arpl
ror
cmp
pop
hlt
pop
outs
lock
or
imul
sbb
hlt
fwait
xchg
inc
inc
sbb
adc
add
dec
outs
outs
mov
adc
movs
cmp
imul
test
in
hlt
sbb
jno
test
push
clc
pop
adc
add
lock
push
sub
push
test
mov
pop
jnp
pop
and
add
loop
inc
sbb
ret
aad
pushf
nop
movs
mov
loopne
xor
clc
cmp
sbb
xor
cld
scas
and
lods
popa
or
inc
rcl
mov
ret
sub
mov
sbb
and
jo
dec
je
hlt
cmps
sub
retf
retf
mov
stos
or
pop
pushf
cmps
add
enter
rcr
and
cwde
push
ret
loopne
shl
mov
dec
pusha
test
arpl
push
mov
sbb
jg
mov
push
pextrw
cmp
dec
lock
xchg
and
xor
xchg
or
sbb
addr16
inc
add
add
push
or
pop
idiv
add
sbb
inc
xlat
movs
es
mov
pop
mov
sub
push
push
jecxz
or
jne
push
es
adc
or
sub
ins
add
test
mov
push
pop
sub
and
push
push
(bad)
(bad)
lock
call
and
sub
mov
jbe
(bad)
out
mov
adc
aaa
rcr
fisttp
retf
jo
push
test
cmps
pop
push
div
clc
mov
jne
clc
add
inc
mov
(bad)
inc
xor
nop
aam
shr
inc
cmp
cmp
shl
fisttp
or
or
jl
adc
sbb
es
(bad)
and
dec
adc
ins
mov
pop
shl
inc
add
sub
push
or
dec
pop
enter
fisubr
pop
sbb
pop
pop
jne
cmp
adc
data16
adc
dec
jnp
scas
retf
push
test
movs
adc
dec
or
jno
pop
je
ds
xor
loope
sbb
jno
(bad)
xor
jbe
sub
mov
loopne
adc
ds
sub
xor
cmp
sub
push
push
mov
clc
jbe
push
popf
or
xlat
push
adc
fdiv
push
push
ror
xor
push
fstp
lea
data16
add
rcl
and
lods
mov
test
xor
scas
sbb
idiv
loop
ja
sbb
adc
xchg
and
loopne
and
loopne
fdiv
or
xchg
mov
(bad)
in
js
sti
fnop
or
pushf
test
mov
mov
in
js
add
cmp
push
add
add
jg
mov
jo
pop
dec
mov
movs
dec
shl
(bad)
js
push
outs
push
push
out
sahf
je
mov
adc
pop
add
popf
cmp
cmp
in
cs
adc
pop
inc
or
mov
(bad)
ja
ss
add
shr
call
adc
inc
adc
add
jbe
add
clc
sub
sbb
or
loop
mov
lahf
push
sub
cmp
xor
lea
jbe
push
adc
rcr
xchg
test
into
nop
cli
push
xchg
cli
cmp
jae
out
and
jl
ss
adc
cmp
push
inc
sahf
sbb
add
call
inc
add
sar
xlat
inc
inc
and
mov
rcl
sub
test
(bad)
retf
mov
icebp
pop
mov
add
cmp
je
sbb
mov
sub
call
ficom
test
and
inc
pushf
sbb
push
push
inc
sub
add
loop
push
fldcw
into
popf
movs
cmp
loopne
sbb
test
cwde
repnz
push
and
and
ins
mov
ret
push
add
or
xlat
mov
or
in
int3
push
lods
push
push
push
or
jno
push
loope
lea
inc
adc
xchg
dec
xor
xor
adc
lahf
adc
(bad)
aas
xor
mov
repz
xor
je
dec
dec
sbb
xor
add
js
iret
xor
add
shl
xchg
movs
or
shl
push
sbb
outs
push
push
or
ins
leave
shl
mov
out
rol
or
stos
add
inc
xchg
push
cmp
nop
push
jmp
push
fbld
mov
outs
mov
cmp
sbb
cmp
jno
scas
xor
or
test
mov
mov
call
wbinvd
loopne
mov
inc
ret
push
retf
inc
out
xchg
rcl
mov
out
jmp
lahf
and
sub
imul
jbe
sbb
out
jg
call
into
retf
and
jmp
lahf
push
and
test
in
mov
cmp
sbb
adc
or
jmp
sub
add
test
xchg
pop
or
ins
jbe
inc
cmp
pop
jbe
mov
je
or
dec
mov
pop
or
aaa
rcl
loopne
sub
cmp
add
mov
enter
push
nop
xchg
add
gs
pop
pop
mov
sbb
add
adc
push
cmp
sub
sbb
loopne
cmp
mov
loop
data16
pop
sub
xchg
mov
in
mov
pop
and
mov
aam
shr
(bad)
add
pop
jmp
mov
clc
out
inc
pop
ud1
(bad)
jbe
mov
xor
mov
push
data16
(bad)
sub
dec
dec
cli
xor
jae
addr16
push
test
sti
into
dec
pop
dec
or
push
cmp
loope
xchg
arpl
adc
fwait
icebp
cmp
inc
xchg
fiadd
sub
or
mov
cld
inc
jnp
dec
jne
jno
jne
mov
mov
loop
inc
dec
adc
xor
adc
or
xor
xor
mov
add
xor
mov
xlat
push
aam
dec
jl
pop
or
cmp
and
cld
sahf
mov
jne
pop
cmps
adc
ds
fnsave
mov
mov
mov
push
push
sub
clc
dec
je
ror
sub
jmp
repnz
out
push
and
repz
add
es
inc
aad
or
dec
(bad)
push
test
jae
mov
mov
adc
cmp
jne
popa
sub
sbb
adc
(bad)
pop
cld
fsubrp
and
sti
sahf
dec
adc
fstp
sbb
xor
cmp
sbb
adc
lahf
movs
fwait
sub
and
mov
and
cld
mov
push
lods
dec
and
loop
push
or
(bad)
and
test
sbb
or
jg
push
or
mov
inc
dec
push
cdq
or
jnp
xor
add
js
dec
xchg
movzx
cld
lods
sbb
sbb
or
mov
lahf
jne
and
mov
or
inc
or
and
rol
clc
(bad)
push
jmp
fcomp
fist
stc
jmp
sub
cmps
int
aam
xchg
out
xor
call
int
lock
mov
jns
fidivr
dec
cmp
push
dec
add
and
add
pop
and
mov
push
jg
push
leave
cmp
add
xor
cmp
test
adc
cmps
lahf
clc
mov
pushf
mov
je
je
rol
add
cmps
add
scas
xchg
js
add
mov
jg
or
xor
mov
dec
test
arpl
or
xor
adc
clc
movs
add
add
sub
jle
movs
sbb
xchg
sub
cmps
adc
aas
mov
add
cmp
inc
pop
xor
and
adc
xor
mov
mov
sub
retf
push
jl
or
xor
sub
push
mov
test
in
cmp
and
push
mov
sbb
jle
jl
xor
jl
push
cli
es
push
repz
pop
rcr
push
ja
inc
jne
cmp
in
sbb
rcr
add
xchg
cmp
test
repnz
je
and
adc
jp
push
dec
xor
scas
pushf
add
and
pop
call
call
fiadd
pop
sahf
das
xor
mov
repnz
sahf
jbe
push
or
ds
and
push
xchg
loopne
int
test
mov
push
jle
cmp
and
push
adc
push
adc
sbb
pop
sub
cmp
mov
dec
mov
popf
lock
jne
lds
adc
sti
xor
adc
or
js
inc
fwait
dec
dec
mov
mov
sbb
push
add
ret
xor
mov
mov
add
push
cmps
sub
popf
nop
inc
xchg
fs
and
movs
and
inc
push
push
je
jmp
or
and
(bad)
loop
mov
ror
icebp
aaa
mov
mov
sbb
adc
sbb
ss
push
push
ret
movs
jno
mov
cmps
imul
cmp
out
call
je
shl
mov
fiadd
inc
mov
fs
imul
mov
dec
adc
add
dec
sbb
ret
and
adc
ret
rcl
ret
pop
sub
sbb
xor
sbb
pop
out
outs
adc
mov
cmp
sub
shr
inc
or
cdq
dec
ins
sti
rol
sub
sbb
(bad)
mov
cmp
je
add
sar
and
sbb
add
mov
add
and
mov
xlat
inc
call
push
mov
add
mov
inc
addr16
or
sub
inc
js
add
dec
jo
ficomp
add
push
js
pop
ror
mov
cmp
sbb
leave
add
(bad)
mov
mov
test
lea
adc
push
or
nop
push
fsubr
or
jae
pusha
jnp
jecxz
ss
in
call
xor
push
daa
sub
mov
push
push
bound
mov
inc
cmp
or
mov
sbb
xchg
add
pop
and
fld
data16
mov
inc
cmp
dec
add
xor
pop
pop
pusha
repz
and
fdiv
adc
push
add
loope
xchg
adc
xchg
mov
mov
fbld
js
xor
mov
xchg
data16
call
mov
enter
sbb
xchg
mov
dec
add
add
inc
mov
jns
cdq
add
mov
int
outs
dec
inc
or
ret
pusha
mov
add
inc
push
jp
sub
fcmovnu
mov
or
scas
add
shr
add
ror
into
pop
ins
nop
rol
add
mov
and
stc
push
pusha
inc
mov
mov
call
iret
in
cmp
adc
in
cmp
fimul
test
jge
jge
mov
xchg
xor
xchg
inc
sahf
and
in
nop
sub
sbb
push
push
test
ja
cmp
xchg
addr16
inc
cmp
pop
neg
sbb
pop
je
imul
rcr
jg
out
xor
nop
dec
mov
inc
jo
jmp
pusha
xor
ret
jmp
stos
mov
inc
inc
push
sbb
scas
in
cmp
and
mov
push
hlt
dec
add
push
(bad)
add
adc
or
outs
xor
inc
int
or
inc
popf
retf
aam
hlt
fisub
adc
inc
mov
adc
xchg
xor
test
ss
and
dec
rcl
pop
adc
fdiv
inc
jbe
ins
(bad)
aad
push
inc
rcr
pusha
jle
jp
jmp
call
ins
mov
(bad)
jl
sbb
jb
mov
xor
or
xchg
xchg
aad
xor
xchg
add
push
pop
push
ror
or
adc
mov
and
push
fnsave
push
mov
add
adc
scas
jmp
fisttp
ror
or
shr
hlt
push
jp
mov
adc
ins
add
mov
loopne
stos
int3
add
and
and
mov
mov
sbb
in
mov
push
(bad)
mov
mov
into
pop
adc
push
inc
or
or
mov
jle
jae
aam
push
xor
ret
and
out
mov
push
mov
idiv
and
add
or
jmp
and
test
add
add
xchg
test
dec
or
scas
inc
add
and
in
jg
push
cmp
or
lods
call
movs
add
neg
pop
js
out
in
cmp
add
push
push
inc
push
cwde
(bad)
les
dec
mov
scas
cmps
or
inc
and
(bad)
adc
dec
or
(bad)
fistp
jmp
mov
dec
push
shr
(bad)
jno
lock
mov
movs
mov
movs
movs
push
ret
mov
adc
sbb
sbb
add
shl
push
rep
je
jns
xor
inc
mov
or
adc
jge
(bad)
lock
cs
and
retf
ret
cld
inc
test
fdivr
loope
call
cmp
loope
or
nop
adc
and
aam
add
es
outs
jmp
jmp
dec
js
jmp
sub
jg
jmp
or
mov
xor
inc
aaa
movs
push
mov
mov
fist
test
dec
loopne
int3
add
fisub
test
and
or
adc
mov
outs
fdivr
push
nop
cmps
pop
jp
fistp
or
sub
test
loopne
pop
xchg
and
xor
popf
loope
dec
bound
(bad)
push
mov
imul
sub
mul
cmc
or
add
push
cs
repnz
adc
test
push
js
int3
lea
aas
cdq
adc
(bad)
in
xchg
std
je
in
and
cmps
stos
sub
jmp
test
popa
pop
pushf
xchg
add
imul
fucom
push
js
add
push
gs
pop
test
add
or
or
movs
sbb
mov
in
pop
xchg
pop
cld
xlat
aam
jl
fmul
dec
clc
add
cld
cmp
pusha
or
dec
pop
push
pop
or
test
aas
data16
sub
push
cdq
push
inc
data16
daa
push
add
loope
jg
stos
pop
add
movs
fld
shl
inc
outs
add
ret
add
mov
push
ret
xchg
aaa
rol
mov
ja
ds
jmp
pop
mov
pusha
push
imul
ins
and
push
jg
pop
push
lods
leave
sub
inc
fcomp
ret
out
inc
jmp
push
popa
nop
xor
dec
xor
test
inc
jne
in
repnz
cmp
je
adc
add
and
ja
add
sahf
neg
add
pop
push
dec
pop
cmp
das
or
clc
and
mov
inc
cmc
xor
dec
and
cmp
adc
in
add
(bad)
xchg
xchg
out
xor
xchg
or
inc
dec
add
(bad)
mov
fs
bound
shl
push
jle
push
cmp
movs
test
sbb
hlt
jo
sub
push
and
inc
add
pop
shr
jmp
js
out
fisubr
push
add
xor
jmp
cmc
cmovl
lea
inc
fcom
sti
push
jmp
mov
std
loop
aaa
js
jle
lea
jbe
(bad)
jle
push
jg
push
cmc
cmp
out
ins
jmp
cli
ret
mov
je
outs
or
imul
adc
push
lock
pop
jo
pop
add
inc
add
adc
inc
or
mov
adc
jmp
xchg
inc
jp
arpl
out
fdivr
sbb
or
mov
test
push
std
pop
ror
xchg
xlat
sahf
mov
test
lods
xor
cmps
push
push
ret
jne
lock
imul
cld
ret
push
or
hlt
dec
or
and
mov
mov
call
xor
cmp
shl
sub
dec
jl
xlat
dec
and
push
or
pop
bound
(bad)
mov
lock
imul
pop
mov
lea
jp
mov
xchg
inc
cwde
sub
or
repnz
xchg
mov
or
cld
das
pop
inc
loope
pop
add
ds
ret
and
push
jmp
cmp
push
sub
mov
jmp
push
mov
stos
inc
dec
mov
sbb
(bad)
jno
cli
jae
cmp
fadd
xor
rcl
jnp
sbb
inc
adc
push
sub
(bad)
repz
sbb
sbb
adc
or
push
mov
mov
das
ds
pop
rcr
push
inc
ss
dec
mov
mov
jbe
add
or
enter
cmps
and
cmp
sti
out
mov
outs
inc
mov
ss
add
outs
dec
sub
pusha
fcomp
sub
xor
dec
lahf
push
and
push
xor
push
and
push
adc
mov
sbb
stos
je
mov
sub
add
dec
xor
sbb
xor
nop
xor
call
add
push
idiv
mov
push
inc
div
sahf
jg
add
mov
mov
push
icebp
sahf
neg
push
dec
scas
ds
out
xchg
mov
(bad)
mov
add
add
in
adc
and
jno
jnp
push
push
or
or
add
mov
adc
pop
mov
add
jp
inc
movs
mov
pushf
mov
retf
test
lahf
fs
mov
mov
jne
cmp
outs
imul
jge
inc
aas
mov
shr
ins
call
mov
call
sbb
and
call
clc
loop
mov
push
push
pop
rol
mov
(bad)
jnp
mov
mov
inc
push
fs
cld
or
icebp
jecxz
xor
sbb
fcom
push
sub
sbb
pop
ja
add
ins
lods
movs
jne
mov
jae
dec
ror
sub
sbb
inc
push
xchg
mov
lock
sub
xchg
mov
push
js
repnz
es
xor
push
mov
cld
(bad)
push
cmp
xor
xchg
(bad)
addr16
dec
adc
cld
mov
movs
std
and
movs
inc
jmp
adc
mov
loopne
inc
and
ret
iret
mov
fidivr
mov
int
cmp
lahf
sar
int
push
arpl
cdq
xchg
iret
mov
dec
out
push
rcr
repz
xor
loope
cs
outs
mov
lods
cmp
call
push
shl
cmp
pop
or
rcr
aam
push
test
jle
push
jmp
lahf
jbe
mov
adc
cmp
xchg
jl
mov
dec
int3
xchg
sub
jmp
in
push
scas
shr
rol
call
or
inc
imul
cdq
test
push
mov
push
fdivp
dec
call
mov
push
and
dec
jmp
pop
test
div
pop
call
sub
bound
js
adc
imul
frstor
movs
xchg
push
pusha
aam
pushf
mov
or
retf
jae
or
lods
loopne
movs
adc
mov
sbb
inc
adc
adc
push
lock
inc
pop
xchg
pop
mov
pop
adc
je
sbb
mov
adc
pop
fnstsw
cmp
je
or
int
aam
xor
rcl
adc
in
xor
iret
mov
fwait
loope
xor
popf
scas
push
mov
stc
jmp
add
rcl
jecxz
jne
sub
jae
gs
xchg
or
lods
inc
add
mov
idiv
and
lods
inc
mov
les
sub
cmp
imul
or
bound
mov
and
mov
jmp
lds
xchg
icebp
jl
jmp
lock
dec
xchg
or
push
dec
add
cli
pop
or
adc
push
(bad)
(bad)
repz
(bad)
cmp
fidiv
inc
mov
push
xor
clc
add
jo
in
addr16
push
dec
mov
enter
mov
stos
mov
or
pop
add
stc
push
test
loop
stos
sub
(bad)
cld
jb
xor
je
mov
adc
pop
or
int
jnp
pusha
adc
lahf
mov
push
js
push
add
retf
sub
pop
sub
xchg
ins
and
push
or
leave
jge
mov
mov
add
push
imul
loopne
inc
mov
adc
add
and
dec
call
imul
sbb
or
xchg
xor
mov
cmp
inc
sbb
or
mov
sbb
movs
mov
xor
mov
sub
mov
jmp
mov
shl
fisttp
and
jmp
(bad)
ffree
addr16
test
or
add
adc
push
xor
add
(bad)
xor
and
xor
adc
hlt
iret
inc
test
xlat
jo
lahf
mov
mov
lods
(bad)
jo
scas
js
xchg
inc
cwde
cmps
je
nop
pop
inc
adc
clts
or
or
nop
xchg
add
jge
pop
adc
pushw
and
test
mov
jge
xor
xchg
outs
xchg
or
add
in
je
inc
dec
add
push
dec
push
comiss
xchg
aad
ror
out
inc
cmp
in
inc
aam
pusha
lea
dec
loop
call
adc
sbb
inc
mov
inc
and
ret
out
mov
in
out
cmp
jne
mov
ret
lods
add
fwait
mov
pop
sub
or
lsl
xor
movs
nop
fnop
imul
ins
xor
add
ret
jbe
sbb
neg
add
outs
add
sbb
inc
push
or
jne
push
pop
mov
push
pop
inc
cmp
inc
pop
test
push
clc
lock
fstp
ret
in
aaa
dec
add
lods
and
adc
mov
or
icebp
add
dec
adc
jp
inc
leave
out
or
dec
mov
mov
or
int3
int
mov
mov
or
loopne
ja
inc
ror
sub
ja
fldlg2
pop
in
sub
add
rol
inc
jp
aad
scas
jbe
or
cmp
ja
and
push
add
int
add
lea
push
js
rcl
aam
adc
jnp
add
cmp
dec
add
fld
add
or
push
gs
sbb
adc
pushf
pop
mov
cmp
(bad)
mov
mov
aam
(bad)
mov
leave
and
jo
or
mov
jne
add
sub
jbe
adc
pop
mov
sahf
adc
jge
rcl
ja
fcom
inc
test
(bad)
je
lea
sbb
lods
and
jb
ins
stos
mov
push
jbe
into
cmp
jb
sbb
ret
jne
inc
(bad)
into
mov
(bad)
jge
jge
xchg
mov
sub
in
icebp
je
inc
and
push
inc
cmps
sub
lods
add
out
mov
sbb
lods
sub
xchg
xor
add
push
mov
mov
not
inc
inc
jo
fld
ins
pop
adc
pop
shr
mov
xor
sub
push
js
retf
mov
push
pop
les
idiv
pop
inc
shl
test
bound
xchg
or
loopne
mov
cs
iret
mov
dec
inc
in
cmp
add
pop
pshufw
imul
and
jge
sub
neg
pop
add
add
pop
push
cli
(bad)
jno
(bad)
or
mov
daa
call
sar
jle
adc
mov
sbb
pop
vdivps
xchg
mov
lds
inc
fst
shr
or
dec
mov
push
jl
mov
add
jl
(bad)
push
mov
pop
inc
push
and
lahf
pop
enter
std
fist
push
pop
sub
add
push
pop
ss
mov
cmp
push
adc
xor
enter
mov
sub
pop
int
nop
data16
or
sub
imul
pop
xor
lea
or
out
repnz
adc
dec
adc
xchg
mov
pop
je
(bad)
push
push
(bad)
sar
jg
clc
push
pusha
std
std
inc
jmp
jg
ror
and
push
dec
pop
je
mov
and
push
jo
aam
in
ror
or
fisttp
xchg
popf
xor
out
mov
ror
imul
rol
cmp
mov
pop
mov
test
movs
push
push
jle
ror
jle
fmul
lea
cmp
adc
ffree
and
cld
js
dec
xor
sub
enter
(bad)
jg
or
test
loop
fdivr
mov
dec
push
push
add
sbb
dec
lock
fsub
add
ja
push
pop
push
shl
lahf
cmp
ret
push
or
pop
inc
add
imul
adc
shl
fstp
sar
jae
mov
icebp
dec
add
imul
xor
mov
gs
dec
test
xchg
mov
mov
test
aas
and
push
inc
cmp
jl
in
push
mov
pop
mov
test
pusha
ja
push
retf
add
jmp
sub
or
outs
or
mov
jmp
pop
enter
(bad)
xchg
iret
sti
jg
les
test
sub
ror
test
retf
xor
shl
xor
les
xchg
sahf
sub
or
xor
sbb
pop
xor
xor
pop
push
sbb
xor
xor
adc
add
inc
shl
inc
mov
ror
add
(bad)
mov
pop
mov
(bad)
or
push
add
repz
push
cmp
popf
mov
push
jne
sahf
mul
into
leave
loop
jmp
iret
out
retf
adc
iret
repz
and
das
ss
aas
dec
add
sahf
sub
cmp
out
mov
repnz
pop
sbb
fcompp
repz
push
inc
pop
repz
out
mov
mov
neg
lahf
mov
mov
out
neg
shl
jnp
mov
les
fadd
cmp
je
sahf
idiv
or
mov
imul
push
(bad)
scas
mov
div
fist
inc
push
push
sbb
(bad)
(bad)
addr16
sub
pop
jnp
(bad)
and
jecxz
sbb
xchg
mov
and
lds
push
or
frstor
mov
push
mov
retf
nop
std
cmp
jbe
jmp
or
pop
or
(bad)
pop
fidiv
mov
fs
pop
xchg
push
cmc
ds
imul
jecxz
mov
popf
enter
fs
es
lds
push
add
or
xor
rcr
pop
or
sbb
ret
lea
sbb
add
add
int
adc
mov
adc
xor
aam
adc
add
leave
test
cmps
cmp
add
iret
rol
or
add
xor
xchg
stos
call
mov
or
adc
jnp
mov
iret
cmp
test
mov
sbb
fcmovne
mov
in
test
cmc
add
in
adc
or
xor
in
lea
or
push
mov
push
lods
inc
add
mov
or
or
(bad)
lods
push
adc
jecxz
mov
cmp
pop
cmps
and
sub
das
add
and
cmp
sub
sub
push
cs
movs
cmp
dec
add
inc
mov
mov
sbb
inc
movs
jbe
fs
push
icebp
sbb
gs
mov
add
and
cmp
sub
inc
je
gs
sub
jbe
clc
sti
jae
arpl
and
mov
ja
pop
fild
xor
add
jne
mov
mov
push
cmps
rcr
jge
sbb
shl
pop
cmp
dec
adc
push
loopne
in
in
rcr
je
call
mov
jbe
xchg
leave
push
retf
lods
call
adc
ret
loope
push
inc
xor
or
test
sar
or
jo
adc
xor
and
pop
mov
xchg
pop
and
mov
and
inc
push
adc
jnp
cmp
pusha
iret
jbe
dec
and
push
jecxz
jecxz
jmp
push
jns
lock
loopne
push
ins
xchg
stc
adc
mov
inc
movs
sbb
or
or
(bad)
gs
cmp
adc
test
shl
sbb
popa
je
cmp
push
xchg
sbb
adc
ins
mov
and
push
int3
pop
adc
sub
mul
adc
and
sbb
fmul
adc
xchg
mov
sbb
imul
or
cmp
lock
dec
fild
jmp
movzx
(bad)
add
and
pop
pop
imul
jo
ins
push
call
fcom
adc
push
inc
push
ffree
push
inc
mov
cmp
outs
adc
cmp
fnsave
mov
or
loopne
add
xchg
popf
cdq
inc
out
xor
xlat
ror
lock
cmp
clc
call
js
xchg
xchg
outs
add
and
sub
dec
stos
shr
call
in
not
mov
fmul
shr
je
sbb
leave
jmp
fcom
or
fstp
jmp
fdivrp
push
adc
push
int3
dec
and
push
sub
test
lock
pop
xlat
(bad)
cs
or
mov
out
fidivr
fild
(bad)
loope
or
sar
adc
(bad)
push
out
jecxz
sbb
mov
ret
mov
call
jmp
push
pop
loope
psubb
arpl
sbb
push
sbb
xor
push
aad
(bad)
fldz
imul
cmps
or
mov
xchg
add
and
xor
mov
inc
fsubr
push
push
fimul
xor
dec
mov
jno
push
add
int
jno
xchg
shr
ret
add
dec
das
jl
cmp
mov
cmp
jne
test
into
outs
pop
push
pop
sbb
and
pop
fidiv
imul
add
loopne
scas
push
or
add
or
mov
clc
jne
es
enter
fs
sbb
or
pop
inc
xchg
inc
jnp
pop
cli
push
jl
or
shl
jbe
xor
xor
fiadd
stos
test
inc
jecxz
aaa
xchg
(bad)
cmps
sbb
dec
movs
pushf
mov
mov
mov
cmp
popf
dec
sub
jmp
or
int
inc
cmps
xchg
scas
jmp
xor
div
inc
scas
fwait
pop
xor
adc
inc
aaa
icebp
lock
aad
sbb
ret
add
sub
jne
or
fild
aad
or
add
xlat
or
ret
add
scas
sbb
test
dec
cdq
pop
ret
lock
les
shl
loop
(bad)
sbb
adc
mov
test
popa
xor
(bad)
fcom
sti
vmovaps
ins
cmp
imul
(bad)
pop
loopne
das
cmc
sub
ins
xchg
sub
pop
add
cdq
adc
jle
outs
add
fadd
in
pop
xlat
push
or
xor
push
dec
test
dec
test
scas
fwait
sub
inc
jmp
or
push
fcom
iret
lock
xor
or
dec
push
push
loop
mov
out
mov
or
sbb
pop
mov
sub
cmp
xor
sbb
mov
jo
push
(bad)
push
add
cmp
mov
pop
xor
js
(bad)
fs
xchg
push
push
push
mov
cmc
jmp
xchg
imul
pop
dec
inc
sub
add
imul
push
push
loop
sub
push
push
imul
sbb
xchg
or
adc
xchg
je
push
clc
cmc
dec
add
jecxz
pop
mov
ror
pop
bound
adc
add
inc
les
fst
jmp
fsub
mov
mov
aam
iret
dec
movs
ror
enter
pop
xchg
dec
xlat
push
xor
lds
ret
ret
stos
push
sub
mov
ins
add
add
sub
push
(bad)
fdivr
lea
adc
pop
fistp
jmp
xor
pop
inc
shr
mov
cld
mov
sahf
dec
jno
movs
xor
push
popa
pop
push
sbb
shl
sbb
(bad)
mov
cmp
test
shl
adc
fild
arpl
add
sub
sub
add
or
sar
hlt
repnz
in
xor
into
addr16
loopne
and
nop
aas
add
clc
or
lods
sub
and
test
pop
dec
or
cs
push
jae
add
ret
rcl
jg
mov
stc
dec
movs
adc
or
call
in
lock
or
mov
lock
mov
mov
jecxz
xchg
clc
mov
and
enter
imul
adc
mul
adc
and
inc
push
(bad)
arpl
sahf
add
cmps
paddq
test
out
and
je
mov
cmp
movs
mov
push
movs
test
jmp
mul
push
(bad)
in
add
add
je
jle
or
mul
xlat
sar
mov
fld
jg
sub
je
or
(bad)
mov
inc
pop
adc
idiv
je
sahf
int3
loop
adc
lea
ds
pop
(bad)
enter
loope
cmc
cdq
add
fiadd
dec
scas
leave
pop
jb
add
or
mov
mov
sbb
pusha
mov
rcr
mov
pop
pop
shl
aas
fwait
and
xor
stos
push
add
push
mov
fwait
dec
loopne
in
xor
cs
outs
mov
mov
ds
or
push
icebp
xchg
icebp
mov
sahf
ss
push
mov
sub
sbb
push
sbb
jle
jo
repnz
ret
xchg
adc
cdq
clc
push
scas
cmp
mov
and
and
ret
and
pop
dec
ss
sbb
pop
shl
pop
xchg
mov
outs
add
pushf
ins
add
or
adc
push
imul
pop
push
push
test
movs
pop
jecxz
test
add
pusha
mov
dec
or
dec
xor
ror
sbb
add
add
outs
mov
inc
pop
out
push
adc
or
add
jmp
or
lea
lahf
add
jmp
popf
int3
mov
or
int3
push
push
imul
out
xor
jne
or
or
adc
rcl
sahf
pop
sti
pop
fstp
xor
frstor
sub
adc
out
push
call
or
clc
mov
cld
je
shl
jmp
jno
mov
loopne
out
jne
add
popa
idiv
push
sbb
dec
retf
popa
mov
adc
clc
jno
add
and
leave
cs
outs
sub
add
or
add
add
fmul
adc
in
cmp
mov
mov
jge
rcl
test
add
pop
pop
repnz
inc
add
jno
cmp
int3
push
push
or
pop
enter
dec
jmp
(bad)
cmp
jbe
cmp
xor
or
pop
add
rep
fs
cmp
push
jmp
jle
xchg
add
test
xchg
jo
pop
mov
fldcw
add
and
(bad)
or
jmp
jae
jmp
pushf
mov
push
and
jae
repz
mov
fidivr
sub
or
(bad)
cvttps2pi
push
mov
cmp
add
dec
hlt
inc
xor
out
hlt
push
pop
adc
sub
in
lods
push
fisub
psubusw
jg
pop
test
ret
sbb
add
xchg
in
outs
and
xor
ins
cmp
cmp
clc
push
inc
push
in
mov
or
jne
or
mov
sbb
enter
ins
adc
sahf
xchg
pop
outs
adc
pop
xor
mov
loope
sub
add
jmp
dec
adc
jbe
jne
shr
loop
mov
jb
rep
inc
dec
stc
cmp
cmp
jb
loopne
jnp
inc
nop
enter
or
(bad)
jnp
ins
enter
nop
fcom
or
sub
ror
int
std
mov
mov
or
scas
adc
repnz
dec
sub
int3
add
mov
addr16
add
add
or
push
pushf
push
xchg
mov
je
mov
mov
call
call
repz
repz
hlt
clc
clc
cld
fdivr
push
mov
add
lock
fnstenv
addr16
push
rcr
jbe
int
dec
jp
pop
ret
nop
inc
pop
or
shl
outs
(bad)
sbb
lea
jl
cld
or
push
jo
and
std
(bad)
cld
out
jecxz
xor
ret
neg
shl
add
daa
stc
fidivr
cmp
sub
pop
inc
push
nop
push
push
inc
jnp
fiadd
jl
mov
fst
sahf
inc
xchg
push
ficom
push
add
imul
pop
add
adc
add
mov
jns
dec
or
push
adc
and
loop
sahf
sub
cmp
sbb
out
sahf
sbb
sbb
adc
out
adc
or
out
xchg
out
add
or
ret
repz
nop
(bad)
mov
add
cmovs
and
pop
ret
sti
lea
or
movs
sbb
(bad)
loope
shr
je
cmp
adc
pop
push
scas
mov
pop
push
dec
and
outs
stos
iret
jg
jg
shl
or
jbe
lahf
iret
idiv
jle
xor
jg
jg
jg
mov
lea
mov
or
lds
dec
sbb
sar
inc
out
and
je
mov
pop
adc
or
gs
lods
(bad)
je
cmps
pusha
(bad)
add
push
idiv
mov
add
push
mov
push
pop
jnp
(bad)
push
mov
shr
dec
adc
dec
xor
mov
retf
add
jl
retf
or
jmp
ret
jmp
inc
add
in
inc
push
scas
sbb
pop
push
mov
ret
sbb
add
cmp
ss
stc
aam
pop
pop
imul
sub
add
add
icebp
(bad)
aaa
gs
std
(bad)
xchg
cmp
inc
or
ret
push
(bad)
add
or
repz
ret
and
inc
sub
and
add
clc
je
xor
adc
lahf
ror
jbe
jne
pop
fwait
or
jle
push
inc
add
iret
enter
add
jmp
je
pop
imul
inc
jmp
bound
dec
adc
cmp
pusha
pop
jg
adc
and
add
adc
pop
push
push
push
enter
pop
pop
pop
mov
pop
or
or
pop
push
jns
or
dec
and
enter
xor
or
cmpxchg
or
nop
out
inc
or
cwde
inc
push
and
movs
push
sub
jle
adc
xchg
adc
xchg
add
dec
adc
jns
daa
xor
adc
cmps
nop
out
push
push
adc
call
sub
adc
add
pop
rol
jb
add
or
pop
pop
push
add
and
sbb
sbb
xor
push
xchg
adc
xor
sbb
add
push
cmp
sbb
push
xor
sbb
add
add
inc
push
mov
and
pop
pop
inc
loopne
repnz
xor
sub
icebp
add
mov
ja
mov
pop
ja
loope
cld
pop
push
add
push
and
sbb
or
add
inc
in
repnz
shl
out
and
in
add
out
add
adc
sub
call
dec
jmp
xor
jmp
jmp
loop
or
jmp
mov
in
inc
in
xchg
cmp
out
jno
cs
enter
dec
lock
mov
imul
nop
add
jb
jns
repnz
sub
mov
hlt
mov
movs
imul
or
mov
cmc
inc
daa
nop
xchg
inc
add
jns
div
sbb
add
nop
cmps
clc
clc
clc
jmp
out
add
inc
stc
int
add
sbb
sub
stos
add
cmps
nop
out
sti
test
cld
nop
mov
jne
cld
pushf
adc
add
jne
fdivr
cmp
inc
cmp
inc
sahf
(bad)
(bad)
and
push
mov
or
cld
cmp
sbb
jecxz
cmp
in
aam
jne
pop
cmp
iret
out
jno
push
add
and
out
outs
mov
fld
call
cli
es
push
movs
test
(bad)
jmp
jne
rol
jmp
pop
aaa
lds
inc
push
imul
sub
mov
lds
hlt
std
(bad)
jmp
jmp
dec
rol
push
nop
cmps
jb
sub
fmulp
add
repz
inc
xlat
cdq
inc
pop
push
push
enter
sub
dec
add
idiv
div
daa
fdiv
jmp
cld
push
fild
lds
mov
or
push
pop
jge
sti
fadd
push
into
add
inc
cld
inc
cld
and
mov
mov
out
or
inc
push
jp
sub
xchg
fcomp
push
push
daa
or
movs
loop
das
xchg
sti
into
add
cs
jecxz
jne
fidivr
xor
lock
sub
ins
inc
call
push
pop
xchg
cli
out
(bad)
and
cli
xchg
push
movs
test
jmp
push
sub
inc
cli
and
in
call
out
out
xchg
adc
jmp
xchg
push
pop
int
stc
lea
dec
int
or
jae
repnz
cmp
int
stc
enter
idiv
mov
cmc
xchg
div
pop
fcom
inc
cmps
mov
jl
inc
cmp
lock
pusha
pop
das
int
or
clc
cli
cli
cli
mov
sub
sti
int
fist
jmp
int
adc
mov
cmp
data16
test
inc
call
mov
or
loop
sub
push
jb
neg
loope
xor
mov
sub
in
retf
adc
pop
in
test
lods
and
cli
xchg
or
jmp
fs
jmp
imul
cmc
sub
enter
in
in
je
fadd
pop
(bad)
in
jp
lods
pop
sub
cmp
cmc
icebp
icebp
icebp
pop
and
ins
mov
cli
xchg
inc
dec
test
pop
call
cmc
cmc
movs
ins
jmp
lods
or
sbb
sub
int
add
stc
cmp
(bad)
repz
push
lods
xchg
inc
dec
lods
nop
test
inc
sub
add
inc
out
jle
mov
sub
add
mov
or
cmps
xor
lock
test
sub
repnz
inc
iret
add
sub
sub
push
mov
mov
push
add
ret
mov
lahf
add
in
lea
or
inc
add
out
pusha
cmp
jmp
xchg
xrelease
inc
and
sti
stos
mov
mov
mov
inc
add
pop
fisttp
gs
repnz
ins
cli
sti
push
in
loop
jmp
dec
push
cmc
xchg
stc
int
mov
out
ss
data16
ins
hlt
imul
lea
rol
jmp
jo
sahf
out
push
out
movs
fld1
pop
add
mov
popaw
jmp
jb
push
sbb
clc
dec
add
inc
fimul
rcl
je
ret
jne
inc
sub
or
mov
cmp
lea
(bad)
dec
std
addr16
pop
pop
arpl
and
lods
cs
lea
adc
or
xor
mov
ror
or
or
rep
jmp
dec
cmp
or
sti
pop
loopne
sub
stc
adc
neg
ffreep
add
mov
fsubr
or
jne
mov
shl
add
or
inc
inc
inc
into
push
rep
fmul
dec
jmp
ret
xchg
ret
jmp
jns
add
and
rol
call
mov
or
fild
(bad)
jp
push
pop
out
xchg
dec
lods
push
in
pusha
pop
mov
or
lods
add
mov
hlt
out
adc
and
(bad)
dec
pop
xchg
sub
sub
mov
cmps
adc
mov
and
mov
dec
(bad)
jmp
cld
sbb
add
or
shl
jbe
inc
push
rol
adc
cmp
jae
mov
adc
mov
(bad)
jb
push
push
nop
pop
in
popa
cwde
adc
ds
or
mov
sub
in
iret
push
sub
je
lea
push
mov
xor
imul
scas
and
iret
mov
jno
(bad)
adc
push
pop
mov
adc
push
jno
in
cs
fisub
push
jo
push
ins
mov
or
jb
push
adc
(bad)
mov
adc
inc
jo
pop
push
pusha
int3
imul
nop
(bad)
fcomi
dec
or
mov
dec
loopne
and
push
xor
je
retf
into
int3
or
sar
pop
test
jne
rcr
lea
pop
sub
mov
sbb
pop
or
push
add
or
push
(bad)
lahf
mov
push
jl
fimul
int3
lods
fs
je
ret
ja
push
adc
push
lock
retf
mov
or
rcr
add
and
enter
sbb
xor
rcr
int3
sbb
and
lock
mov
sbb
clc
cmp
sbb
dec
pop
gs
push
cmp
ja
dec
pop
ficomp
xchg
dec
repz
ret
nop
add
test
fwait
out
(bad)
push
jmp
out
idiv
push
hlt
or
jnp
es
ds
pop
add
pop
aaa
mov
and
rol
add
mov
bound
(bad)
into
popa
jo
mov
dec
outs
stos
sbb
push
outs
add
ret
dec
fsub
icebp
push
lea
sub
jmp
add
mov
jne
test
arpl
inc
and
mov
push
call
mov
push
ds
mov
lea
test
je
push
mov
ins
mov
sbb
nop
jns
dec
jmp
mov
out
and
aam
mov
mov
mov
add
mov
jb
mov
or
cwde
mov
adc
or
cwde
out
pusha
shl
sub
sar
inc
mov
cmp
pop
or
frstpm(287
jb
jne
mov
add
lods
pop
clc
outs
inc
inc
sbb
jb
aad
adc
aaa
sub
ja
mov
add
(bad)
adc
sbb
inc
fcom
pop
test
popa
xor
push
leave
mov
icebp
lea
add
jae
dec
sbb
push
pop
cmp
mov
pop
push
mov
in
add
sub
inc
shl
or
push
idiv
mov
fsubrp
pop
je
push
inc
push
push
lock
pop
add
mov
jmp
xchg
scas
mov
fmul
inc
mov
loopne
xchg
dec
mov
mov
or
and
les
rol
add
fadd
mov
adc
pop
pop
sbb
out
inc
aas
je
push
dec
sbb
es
ins
nop
rol
xor
sub
or
and
xchg
sub
xchg
repnz
jno
jp
jns
mov
outs
ja
dec
mov
adc
jbe
push
je
inc
out
or
inc
stc
xor
adc
xor
cmp
xchg
adc
aaa
loope
adc
or
rol
test
imul
push
push
leave
push
push
lahf
push
js
pushf
mov
lock
push
bound
sub
jbe
outs
icebp
xor
jo
test
ja
jb
ret
shl
rcl
out
repnz
sbb
movups
(bad)
jb
pop
mov
loop
or
shufps
and
aam
jp
mov
cmp
jmp
or
or
sbb
push
ret
add
sbb
inc
push
push
add
add
sbb
and
jg
add
shl
outs
enter
add
pop
pop
sbb
ja
push
xchg
add
and
cmp
add
sub
jns
add
je
add
adc
gs
(bad)
imul
cmp
iret
jne
sub
sbb
mul
or
sub
mov
jns
leave
call
add
pop
cmp
outs
push
cmp
lock
and
daa
jp
inc
add
and
movs
xchg
adc
dec
and
mov
xchg
test
push
sbb
fs
adc
inc
jbe
es
loopne
push
test
add
hlt
or
lods
dec
sbb
sbb
clc
(bad)
xor
mov
or
lods
clc
inc
or
rcl
scas
sbb
lea
cmp
icebp
pop
loopne
stos
sbb
jmp
aad
clc
retf
push
fs
(bad)
loop
or
dec
mov
loop
inc
imul
bound
push
sbb
js
loopne
sbb
inc
mov
out
dec
sub
pop
push
jae
sub
fcmovb
shl
(bad)
loope
dec
cmp
(bad)
div
push
ror
add
enter
out
add
push
mov
mov
mov
rol
shl
ret
jl
xor
push
cld
jb
test
mov
fidiv
adc
je
int
loopne
cmps
mov
es
adc
std
cld
aam
or
imul
ret
cmp
mov
(bad)
jmp
push
pop
cmp
pop
sub
cwde
adc
dec
sahf
xchg
dec
and
mov
popf
dec
je
xchg
adc
cmp
stos
adc
pop
leave
mov
sub
popa
jb
bound
movs
sar
stos
add
jb
popf
mov
mov
mov
in
in
in
cmp
push
out
cmp
dec
cmp
pop
sub
xchg
mov
dec
je
aas
jmp
adc
add
loop
xchg
fld
mov
les
(bad)
lea
stc
push
add
out
enter
sub
retf
hlt
(bad)
not
fadd
sbb
into
in
add
mov
ins
sbb
inc
sub
loopne
mov
mov
les
push
inc
or
mov
cmc
inc
(bad)
and
stos
push
push
pop
cmp
les
and
jmp
push
out
jp
ja
outs
xchg
mov
add
(bad)
sar
add
scas
dec
jne
and
in
cmp
or
arpl
or
nop
mov
loope
sub
add
in
int3
cli
icebp
mov
inc
fs
fnstsw
lea
clts
adc
or
jae
sbb
mov
jmp
jo
sub
xor
cdq
mov
and
mov
pop
push
xchg
or
je
or
inc
xor
jne
push
add
jmp
cmp
dec
loope
mov
inc
adc
outs
shl
jo
add
jo
idiv
or
dec
out
fistp
sub
pushw
shl
int3
push
jmp
shr
aaa
cmp
shr
and
adc
stc
idiv
out
lds
push
jo
mov
jne
push
(bad)
mov
shl
(bad)
adc
out
mov
enter
(bad)
enter
or
popf
add
mov
mov
add
clc
loop
or
je
add
out
pop
lock
pop
das
call
dec
push
mov
sub
loop
or
pop
pop
daa
pop
mov
add
cmp
(bad)
jl
or
fild
int3
or
sbb
test
popf
dec
stos
mov
arpl
mov
lods
jno
pop
inc
xchg
sub
das
dec
or
xor
ins
nop
sbb
into
xor
ins
fst
push
sbb
add
sbb
cmp
jle
mov
mov
jmp
mov
xor
enter
inc
and
sub
outs
sar
adc
adc
xchg
repnz
out
shl
jo
icebp
or
cmps
xchg
ret
in
sbb
xchg
mov
sub
je
ficom
ja
retf
add
ss
retf
xor
mov
retf
push
stc
mov
in
(bad)
push
hlt
or
xlat
ror
fsub
and
mov
pusha
cmps
mov
and
adc
inc
sbb
pop
retf
fisttp
inc
add
mov
add
ins
adc
jne
cmp
adc
ds
pop
mul
into
and
pop
sbb
sbb
out
jecxz
add
adc
and
mov
je
or
sub
sub
mov
push
je
pop
add
cmp
mov
pop
rol
jb
or
push
jg
mov
pushf
inc
jle
jmp
inc
pop
push
mov
or
and
call
je
or
ror
sub
add
cmp
mov
bound
or
mov
jbe
cmps
aam
(bad)
fsubrp
and
out
push
fmul
icebp
loopne
fs
cmp
jb
mov
lods
mov
jg
jbe
ja
dec
xchg
idiv
cmps
push
inc
sub
sar
cmp
jbe
push
push
ds
nop
int
sti
cmp
sub
jl
push
mov
jecxz
imul
(bad)
jae
push
xor
pop
movs
xor
movs
cmp
dec
jns
and
sbb
dec
xchg
ror
push
pop
and
pop
mov
jmp
or
daa
or
xchg
mov
popf
push
mov
dec
int3
(bad)
aad
jae
popf
shl
pushf
push
dec
mov
pop
pop
stos
or
es
js
push
imul
push
xor
in
or
addr16
dec
mov
das
lods
outs
pop
loopne
pop
das
fmul
xor
cmp
dec
call
inc
adc
xchg
mov
ins
xchg
cmp
outs
add
adc
sbb
ror
sub
(bad)
pop
test
daa
cmps
jae
push
mov
(bad)
jge
rol
cli
xchg
and
or
jo
xchg
(bad)
xchg
push
mov
test
inc
rcr
push
dec
cmp
aam
add
sahf
push
pmaddwd
xor
cmp
pop
vmread
sbb
add
add
push
adc
jmp
inc
rol
fisub
jo
ss
daa
adc
or
(bad)
in
clc
mov
icebp
xchg
mov
pop
fld
ret
cmps
jno
mov
adc
mov
jge
adc
imul
and
push
jo
test
pop
mov
ret
adc
movs
mov
and
lea
cmp
ds
inc
leave
ret
or
push
jle
cmps
jno
je
or
sub
cwde
mov
lea
push
add
sbb
xor
pop
cld
jne
cmp
sub
or
sbb
adc
adc
inc
cmp
or
in
pop
je
cmps
inc
inc
cli
movs
xchg
pop
mov
sub
sbb
mov
sub
add
push
adc
xor
dec
in
dec
clc
adc
mov
mov
xchg
sub
shr
in
movs
stos
add
aas
cmp
mov
push
add
inc
mov
add
movs
jo
add
ja
inc
fadd
pxor
ret
adc
test
xor
cmp
shr
ret
mov
and
jmp
sub
sbb
jbe
or
cld
add
jmp
repnz
lods
add
sbb
pop
xor
sub
sbb
test
ror
rcr
pop
dec
add
mov
test
add
lods
add
or
(bad)
jge
scas
ss
jecxz
inc
sub
cmp
inc
and
jne
or
imul
dec
or
int3
sbb
add
je
dec
add
shl
push
jne
add
adc
pop
mov
xor
(bad)
shl
push
enter
lea
jmp
xchg
shr
mov
jae
xor
loop
push
mov
sub
push
outs
cmp
push
outs
jb
test
int
test
sbb
out
add
or
repnz
inc
out
jmp
pusha
or
sbb
add
pop
pushf
shr
jmp
mov
mul
sbb
xlat
in
mov
(bad)
bound
mov
daa
test
(bad)
in
mov
xor
adc
inc
add
sbb
mov
pop
iret
adc
adc
push
adc
rcr
dec
jl
je
jmp
out
cmp
mov
shl
out
push
fist
pmullw
in
pop
ins
jo
icebp
xchg
je
ins
cmp
cmp
or
outs
into
scas
mov
popa
out
test
pushf
pop
or
dec
jne
inc
jne
add
xchg
mov
xor
pop
mov
(bad)
push
imul
cwde
adc
inc
popf
mov
or
mov
repz
aam
push
sub
add
mov
rcl
add
lods
xor
sbb
jne
add
or
sub
jns
ret
cmps
clc
add
sub
and
shl
and
and
mov
xchg
daa
jbe
cwde
jmp
pop
test
jbe
ss
inc
clc
jmp
rol
push
sbb
mov
pop
cmp
mov
pushf
mov
pop
shr
or
ror
out
out
mov
popf
in
mov
pop
pusha
mov
or
adc
mov
add
push
cs
cmp
push
pop
cmp
sub
cmp
cmp
leave
or
mov
or
ins
mul
loop
loope
das
jmp
inc
scas
aaa
(bad)
xor
xor
loopne
push
aaa
push
out
jne
mov
rol
add
shl
pusha
sbb
movs
test
add
movs
push
loope
push
lahf
pusha
push
les
xchg
adc
or
aad
loopne
stos
jne
(bad)
cmp
ja
mov
imul
test
pop
fist
sbb
sub
pop
push
mov
rcr
loop
add
(bad)
dec
(bad)
into
nop
mov
sub
rol
adc
mov
inc
stos
sub
add
dec
in
sub
add
pop
cmp
(bad)
shl
in
cdq
jnp
mov
sub
or
shr
and
pop
xchg
mov
and
mov
mov
push
mov
mov
sub
mov
jo
es
dec
xchg
leave
jg
(bad)
jecxz
add
adc
mov
lock
or
sub
int3
sub
loop
cli
or
sub
rcr
lods
or
rol
add
sub
sbb
js
mov
xchg
clc
mov
sbb
enter
retf
pop
cli
xchg
pop
dec
(bad)
cld
mov
test
lods
jl
rcl
je
xchg
adc
or
pop
cld
test
jne
push
xchg
ins
fisttp
inc
mov
je
retf
dec
rol
stc
dec
loopne
push
fisttp
mov
and
fwait
cmps
stc
fidiv
push
ret
loop
adc
add
inc
xchg
je
and
jmp
and
loopne
shr
fsub
mul
push
xchg
sbb
pop
in
sbb
mov
inc
sub
pop
inc
jecxz
out
test
imul
pusha
(bad)
stos
shl
cmps
pop
or
and
mov
pop
mov
test
(bad)
jbe
and
cmp
jne
push
dec
mov
jle
push
call
or
pcmpgtd
(bad)
or
mov
inc
sbb
ror
mov
inc
mov
xchg
aas
mov
cmp
pop
(bad)
and
sub
es
xor
movs
xor
dec
and
pop
aaa
and
jecxz
adc
xor
ins
mov
inc
or
inc
mov
jge
fist
mov
loop
pop
lods
xor
(bad)
sti
shl
or
add
xor
ror
test
push
sub
pop
inc
int3
jmp
cwde
adc
mov
or
adc
mov
sub
movs
push
push
or
adc
add
mov
ss
imul
push
xlat
cmp
push
ror
jmp
and
popf
pcmpeqw
mov
mov
sbb
or
(bad)
pop
add
rcr
fisub
push
mov
jae
fcompp
adc
ds
inc
push
scas
mov
int3
or
xchg
in
add
and
lods
cmp
push
push
shl
and
xchg
push
leave
pop
cmps
hlt
push
es
xchg
push
dec
or
jo
jo
gs
add
retf
test
clc
(bad)
jns
sub
jmp
mov
jge
test
(bad)
add
pop
ds
dec
or
pop
lock
mov
es
popa
ret
mov
mov
cmp
adc
jg
dec
outs
or
stos
adc
mov
rol
xchg
mov
mov
jae
je
leave
sub
dec
cld
std
add
loopne
cmp
adc
cld
push
clc
push
push
push
cmp
shl
add
pop
inc
push
jnp
clc
xchg
push
sub
adc
popa
sbb
pop
push
sub
and
data16
sbb
and
sahf
or
ror
dec
movs
mov
shl
lds
ret
rol
arpl
dec
push
fldl2t
push
adc
outs
push
mov
enter
pop
push
sub
and
sbb
cs
into
test
arpl
and
add
mov
push
push
fst
jmp
dec
push
test
call
aam
loope
and
cmp
mov
jp
cmp
inc
stos
push
mov
mov
or
push
xlat
xchg
sub
cmp
aaa
jmp
adc
cmp
repnz
push
mov
mov
enter
leave
jne
dec
cmp
retf
push
add
and
(bad)
fist
jbe
fadd
push
dec
push
mov
cmp
sti
mov
jno
sahf
xchg
mov
mov
inc
imul
jmp
sbb
aam
into
adc
int
jnp
xor
cmp
cmp
xchg
or
scas
loopne
imul
repnz
jmp
xlat
repnz
pop
nop
jne
fnstcw
cmps
mov
jg
std
jno
mov
adc
mov
push
sbb
ja
pushf
inc
xchg
cmp
mov
idiv
pop
adc
lea
jno
enter
inc
push
or
push
push
add
cmp
cmp
popf
into
in
xchg
pop
sub
movs
push
and
push
je
ret
fyl2x
dec
sub
stc
je
mov
or
aas
jecxz
sbb
mov
loopne
leave
arpl
in
scas
retf
ror
pop
mov
or
push
call
scas
jns
push
dec
jmp
and
lock
pop
and
mov
call
xor
jne
in
or
and
cmp
push
cmp
inc
jne
xchg
inc
je
fisttp
(bad)
int3
push
push
dec
pop
fsave
rcl
jecxz
push
clc
pop
frstor
add
je
in
sbb
dec
(bad)
jmp
push
test
fsubr
adc
or
and
mov
in
or
mul
pop
add
add
sbb
test
je
mov
fcomip
jl
(bad)
loope
test
jmp
adc
jnp
mov
test
cmp
frndint
pusha
mov
fwait
outs
ja
aaa
mov
jne
fcomp
fcompp
daa
inc
sub
ins
ret
mov
int3
ret
and
rcr
push
jle
sub
adc
xchg
pop
add
stc
inc
jg
cmp
jbe
mov
clc
mov
mov
jns
and
and
mov
xor
repnz
leave
mov
dec
jl
push
and
int3
push
aad
add
iret
mov
les
pop
fdivr
icebp
or
add
stos
push
pop
clc
cmp
add
rcr
xor
xchg
push
push
mov
fcom
push
pop
js
ins
arpl
lods
hlt
repz
inc
or
jmp
test
(bad)
mov
(bad)
xchg
test
fdiv
mov
loopne
xor
clc
adc
imul
inc
pop
push
mov
or
jns
or
xchg
add
or
xor
jmp
aam
mov
xchg
push
push
jp
inc
push
arpl
aam
je
adc
push
or
dec
sub
xchg
sbb
pushf
loope
xchg
cmp
jbe
mov
or
jns
test
ja
inc
or
or
addr16
movs
inc
iret
cmp
aas
bound
xor
xor
jp
inc
cmp
or
mov
xchg
jbe
jmp
dec
jmp
inc
je
and
loope
cmp
push
sub
icebp
out
pop
fldenv
mov
xchg
jne
mov
ret
push
gs
ds
cmp
ja
mov
cld
fimul
jmp
xchg
pop
sub
test
push
mov
bound
or
in
and
or
push
clc
mov
inc
dec
dec
or
bndldx
les
ds
vprotq
jmp
lock
adc
sub
bound
push
adc
adc
in
mov
je
or
sub
jne
test
fdivrp
cmc
(bad)
repz
ss
mov
(bad)
inc
mov
sub
(bad)
into
(bad)
loope
(bad)
int
or
ret
mov
cmp
jne
mov
inc
or
cmp
sub
bound
inc
jbe
mov
jns
adc
fimul
es
add
stos
add
ret
paddq
scas
mov
enter
push
neg
lods
mov
inc
add
add
add
push
sahf
into
ret
pushf
mov
(bad)
data16
outs
inc
pop
icebp
je
mov
fcomp
mov
push
daa
and
add
mov
sbb
cli
push
loope
test
shl
push
aad
mov
rcl
jle
add
pop
movs
mov
or
in
jmp
inc
fisttp
inc
push
sbb
push
and
rol
jne
ret
test
sar
fbstp
out
sbb
out
push
cli
adc
sub
pop
xor
add
jle
push
or
add
and
test
sub
loopne
add
mov
lods
frstpm(287
fcmovnb
adc
lock
add
push
pop
adc
push
push
or
cmp
add
in
test
mov
(bad)
pop
rcr
jb
daa
sub
sbb
adc
ret
test
push
das
test
adc
add
rcl
mov
mov
pop
cmp
jge
mov
(bad)
std
adc
inc
push
jecxz
or
(bad)
clc
div
pop
jae
(bad)
sar
mov
pop
jmp
mov
stc
mov
jmp
and
rcl
cli
test
jne
sub
sub
repnz
add
rcr
in
jnp
test
in
cmp
repnz
dec
cli
cmp
xor
push
in
fild
jl
xor
pop
pop
push
cs
sbb
shr
adc
sub
or
cmps
push
mov
popf
call
lahf
sub
or
sub
out
push
ins
rol
cmp
test
jg
add
xchg
cmp
test
add
xchg
dec
pop
pusha
mov
lea
push
cld
out
mov
loopne
xor
jmp
dec
into
pop
mov
push
mov
add
les
inc
add
pop
retf
xor
dec
adc
mov
mov
cli
jl
inc
enter
das
dec
bound
dec
mov
mov
lahf
push
add
inc
mov
lea
add
xchg
mov
test
mov
rcl
je
or
sbb
sbb
add
(bad)
cmc
iret
mov
cmps
mov
test
adc
sub
adc
aad
dec
add
scas
dec
sub
add
setge
iret
dec
enter
lock
pop
sub
push
dec
xor
pusha
call
loope
xchg
jmp
pusha
ins
ja
dec
jge
jns
push
iret
cmp
ja
xor
adc
push
arpl
or
lock
mov
push
pusha
inc
int
inc
ins
add
xor
xor
pop
int3
jne
shr
sub
adc
mov
and
add
xor
mov
mov
in
or
in
sub
sub
shl
push
ins
in
push
adc
push
push
loope
int
jb
fmul
pop
mov
pop
ja
and
jb
test
push
div
shr
jl
sub
jbe
call
push
push
leave
out
pop
das
test
mov
sub
add
or
sbb
and
scas
das
or
inc
out
cmps
jne
dec
add
or
test
rol
inc
das
push
pop
pop
outs
inc
call
nop
popa
ja
bswap
cmp
push
mov
in
xchg
jmp
dec
test
inc
fldz
and
ds
ror
fst
shl
ds
add
lock
xchg
std
push
fldcw
and
sbb
mov
and
pop
inc
inc
fldln2
fxch
fyl2x
pop
cmp
cli
in
pop
(bad)
jo
sbb
xlat
push
pop
jmp
test
stc
sbb
and
mov
lds
and
pop
jmp
cmp
sbb
mov
xlat
rcr
mov
inc
or
xchg
adc
jl
movs
mov
ret
and
lahf
add
and
cmp
sbb
aam
daa
jmp
inc
push
jnp
xchg
mov
xor
xor
repz
enter
rep
xor
sub
jmp
pop
and
jae
dec
fadd
push
loop
sar
nop
out
cmp
arpl
popf
or
nop
ja
scas
enter
movs
push
jne
bound
je
pop
sub
add
xchg
bound
lods
sbb
mov
xchg
lahf
pushf
and
clc
in
int3
in
in
xor
xor
fwait
sbb
cmp
or
sar
lahf
mov
in
sbb
lahf
or
inc
aad
fs
dec
aam
pop
leave
ss
repnz
arpl
cld
cmp
mov
fwait
and
fistp
je
or
fstp
jo
jmp
ins
sbb
or
jecxz
lods
ins
pop
stc
mov
mov
add
add
lods
test
aaa
xchg
push
repnz
retf
call
xor
or
(bad)
jmp
push
lods
arpl
lds
xchg
inc
xor
dec
dec
enter
(bad)
dec
and
or
cwde
push
shl
and
xchg
pop
jo
retf
and
cmp
adc
mov
clc
fdiv
pushf
or
sahf
push
add
cmp
mov
add
inc
pop
sbb
cs
cmp
xchg
add
inc
sar
movs
and
push
jmp
shl
adc
loope
mov
aas
mov
jae
clc
pop
stos
and
cmp
xor
jnp
movapd
push
clc
xor
mov
jbe
xor
jle
xor
cli
lea
retf
mov
mov
pop
test
jge
repz
add
jg
(bad)
jle
dec
or
cs
jnp
mov
loopne
fadd
sbb
ret
or
add
fld
sbb
push
cmp
sbb
repnz
add
idiv
subsd
int
out
rol
sbb
fisub
seto
or
push
and
adc
shl
or
adc
or
push
jae
ret
adc
and
ror
test
aaa
sbb
push
push
rcl
ret
cdq
nop
mov
cmp
add
mov
add
and
leave
push
push
mov
loopne
aam
dec
jb
aas
jbe
retf
jmp
add
js
jp
sbb
aad
call
push
je
mov
enter
pop
test
jnp
inc
push
stc
mov
pop
xor
xchg
pop
sbb
into
and
push
sbb
push
push
pop
pop
jmp
jmp
cmp
jge
mov
mov
cmp
pop
sub
mov
das
popa
push
mov
sub
test
call
or
and
imul
xchg
jmp
call
js
in
test
(bad)
mov
jmp
add
mov
out
pop
ret
mov
icebp
jb
cmp
sahf
push
ja
or
add
pop
(bad)
shr
or
pop
jmp
scas
mov
add
xchg
sbb
pop
jge
push
int3
into
fisubr
or
icebp
out
mov
pop
fcmovnb
jb
cmp
or
ret
adc
jecxz
mov
cmp
pop
jae
push
scas
popf
sub
ficomp
fcom
arpl
popf
dec
xor
xor
jbe
sub
aas
pop
stos
icebp
sub
in
lods
xchg
or
pop
xchg
sbb
mov
mov
ja
cmp
aas
mov
sbb
shl
call
inc
cmp
aas
and
mov
add
xchg
retf
rcr
stc
je
out
out
add
adc
adc
fisttp
cmp
xchg
test
inc
mov
cmp
jb
or
addr16
gs
ja
sub
jmp
add
ret
and
cmps
sbb
dec
adc
mov
dec
jmp
arpl
fild
hlt
add
ret
xor
add
dec
push
cmp
pusha
jle
std
dec
and
jg
mov
movs
std
jl
cmp
jae
outs
ds
pop
sbb
add
jmp
lock
add
push
adc
addr16
in
and
dec
hlt
xchg
sar
mov
shl
rcl
fstp
xchg
adc
aaa
mov
jbe
loopne
sub
and
dec
loopne
fcmovbe
movs
add
imul
add
push
repz
cdq
aam
ss
jne
push
inc
clc
cmp
inc
and
out
rcr
clc
(bad)
movs
je
popf
sub
je
xchg
add
gs
clc
and
xchg
or
sub
sbb
aaa
cmp
(bad)
repnz
and
push
cs
inc
test
sub
sbb
sbb
jp
call
and
sar
shl
(bad)
push
adc
loop
cdq
and
lock
fimul
sub
xor
data16
les
adc
inc
out
imul
mov
call
inc
jl
jg
(bad)
push
fadd
shr
idiv
add
mov
out
adc
sbb
inc
ss
jg
jl
in
into
jae
xchg
pop
dec
cdq
push
and
adc
rcr
ss
or
add
mov
dec
adc
adc
lods
push
out
mov
cdq
sbb
fiadd
les
lds
jg
inc
rcr
inc
les
retf
add
leave
add
rcr
and
movs
xor
sbb
pusha
dec
je
push
test
int
test
hlt
inc
or
scas
jmp
xchg
pop
pop
adc
dec
or
shr
push
dec
dec
adc
movs
cmp
or
cmps
mov
sub
dec
jae
pop
sbb
inc
pop
rol
dec
les
mov
dec
inc
test
or
jl
leave
add
clc
dec
rcl
or
add
inc
and
test
fistp
sar
push
pop
sub
adc
dec
fcom
sub
add
jle
add
jmp
dec
or
dec
dec
and
bound
jmp
mov
out
jg
inc
ins
sbb
lock
cmp
jno
arpl
sbb
xlat
sub
sbb
jge
in
movs
adc
in
inc
sar
mov
daa
sar
lock
cld
cmp
ret
xchg
mov
add
xor
push
jg
mov
add
loope
jns
sub
pop
mov
xchg
add
cmps
cmp
fs
out
adc
call
jae
fs
lods
mov
test
push
add
xchg
pop
xchg
xchg
adc
dec
jle
je
xchg
xchg
mov
xor
retf
mov
add
arpl
add
imul
and
sahf
adc
mov
add
mov
inc
(bad)
in
adc
aam
je
arpl
xor
retf
add
ret
and
dec
iret
fiadd
sahf
push
fs
inc
pop
jle
pop
sti
jns
adc
push
xor
push
or
add
xorps
(bad)
pop
adc
js
into
jg
(bad)
outs
pop
inc
push
in
add
push
jg
shl
adc
or
mov
cmps
loope
xchg
(bad)
pop
ret
cld
jo
retf
in
fld
test
jne
sub
sub
call
inc
xor
iret
cwde
jno
setne
pop
xor
lods
add
mov
les
add
push
test
scas
repz
ins
pop
dec
pop
sub
adc
add
mov
adc
ss
pop
cmp
mov
inc
pushf
mov
je
add
shr
mov
xchg
and
jbe
std
fcom
cdq
sbb
aad
stc
push
lahf
lock
jg
jg
dec
pushf
dec
loopne
scas
pop
adc
push
push
adc
bound
xor
or
fcom
add
loope
ins
sub
jle
adc
or
pop
iret
dec
fiadd
dec
lods
rol
add
dec
push
cld
add
mov
call
(bad)
ror
cs
add
pop
add
shl
xlat
adc
inc
dec
dec
fistp
ss
mov
xor
mov
(bad)
sub
xchg
cmp
jbe
mov
push
dec
jmp
sti
mov
fnstenv
(bad)
mov
jle
inc
ja
pop
mov
jbe
into
xchg
pop
inc
add
jmp
popf
aas
ret
(bad)
stos
pushf
cmp
je
dec
imul
mov
test
add
jne
aam
test
xor
or
into
fist
pop
push
out
adc
adc
xor
xor
or
sbb
push
(bad)
fsubr
mov
and
nop
push
or
push
push
pop
pop
xor
xor
fsubr
sub
(bad)
or
adc
add
das
and
push
xchg
ds
adc
adc
iret
repz
or
repnz
add
js
lds
mov
push
cli
add
cmps
pop
ds
lock
movs
jecxz
call
sbb
jmp
sbb
push
mov
sti
or
rol
cmp
add
push
sub
addr16
inc
pop
adc
sub
xchg
enter
jg
fstp
mov
rol
jne
call
push
ins
loope
dec
mov
loop
mov
inc
and
adc
dec
sar
or
xchg
cmp
jbe
mov
fbld
add
xor
clc
sbb
dec
fs
pop
inc
stos
lahf
mov
les
mov
jecxz
daa
icebp
out
mov
in
mov
cs
inc
int
adc
add
add
inc
cli
fs
rol
inc
fcomp
aad
cmp
pop
adc
sbb
fs
xor
repz
ror
or
pop
push
popa
jne
shr
or
ss
pop
sbb
cs
pop
dec
je
add
push
dec
ficomp
rol
inc
push
or
mov
ins
dec
or
movs
imul
sub
jne
push
inc
call
mov
cmp
aaa
jae
add
push
dec
push
cmp
cs
dec
scas
pop
cmp
dec
and
lock
add
pop
out
sar
(bad)
xchg
gs
jmp
xchg
inc
popa
fs
dec
rcr
sbb
jle
push
xchg
and
test
push
fimul
dec
pushf
call
push
or
xor
mov
inc
and
pop
iret
adc
push
lods
add
pop
jmp
xor
dec
mov
sbb
int
or
jmp
lock
add
jmp
ins
push
jmp
and
pop
dec
jmp
dec
je
sbb
in
xchg
xor
xchg
xchg
lock
or
sar
nop
arpl
dec
inc
stos
je
scas
sbb
sub
cmp
loope
adc
push
or
push
(bad)
jmp
or
mov
repnz
out
adc
in
pushf
push
mov
ret
mov
add
add
cwde
or
es
and
and
jbe
push
movs
and
push
mul
fisttp
push
call
inc
movs
add
jl
mov
fucomip
jne
pusha
sbb
movs
add
test
mov
lock
aad
xchg
adc
loopne
xor
and
ret
ror
add
jne
cmp
jbe
and
sbb
pop
and
dec
adc
push
cld
ja
adc
test
(bad)
jge
and
adc
stos
or
retf
sbb
ret
jge
inc
mov
pop
ficom
jo
mov
pushf
push
mov
cli
xchg
pop
mov
pop
in
mov
lods
push
fdiv
mov
and
enter
imul
mov
sbb
xor
and
sub
cmp
xchg
mov
xchg
jb
mov
mov
pop
and
adc
or
xor
loopne
mov
mov
sub
jns
add
ja
cs
aam
push
pop
and
or
push
inc
mov
movs
movups
aam
mov
pop
adc
jge
or
mov
dec
push
sbb
sub
out
add
dec
sub
add
add
in
push
pop
add
jae
xor
sbb
sub
test
cmc
daa
and
shl
stc
inc
xchg
mov
and
test
add
push
(bad)
nop
inc
pop
add
int3
or
test
cmovl
push
xchg
adc
sbb
add
pop
and
scas
jns
out
push
pushf
xchg
mov
je
jns
loopne
add
push
rcr
scas
mov
sar
push
in
and
and
push
add
inc
rol
jns
push
nop
push
push
jb
inc
push
add
mov
mov
or
adc
repz
sbb
sub
cmp
test
inc
out
out
inc
or
jl
and
(bad)
mov
add
ficom
es
push
sar
push
rol
mov
sbb
and
sub
inc
push
lea
sub
fs
into
add
pop
cwde
dec
or
scas
sar
push
or
inc
clc
add
cmp
or
ss
sub
cmp
inc
aaa
or
scas
ficom
xor
pop
mov
mov
add
movs
dec
push
hlt
mov
std
pushf
inc
test
call
adc
jge
inc
outs
jne
pop
les
imul
outs
mov
mov
sbb
(bad)
aas
dec
cmp
pusha
push
add
cmp
scas
adc
sub
add
das
adc
add
sbb
or
int3
and
sbb
out
add
inc
jmp
fisttp
cmps
mov
push
inc
mov
or
mov
sub
fsubr
loop
stos
sbb
test
push
call
jb
das
sbb
mov
popa
dec
lods
dec
add
mov
lock
add
push
pop
adc
inc
or
sar
adc
adc
inc
call
dec
add
pusha
lock
cdq
lea
xchg
xchg
sub
add
or
(bad)
push
lock
mov
cs
jo
sbb
nop
push
ror
iret
cmps
ins
cld
and
mov
pop
fdivr
sar
(bad)
mov
sbb
ds
mov
dec
pusha
pop
adc
(bad)
and
icebp
fcomp
sbb
push
jns
pop
cli
(bad)
jmp
push
push
pusha
popa
aam
fst
cli
push
push
fld
das
add
mov
and
jmp
add
adc
and
mov
dec
movs
inc
inc
inc
mov
shr
aaa
je
or
cmp
adc
or
xor
cdq
lods
push
mov
fs
dec
iret
cmps
sub
dec
jecxz
pop
add
or
outs
inc
cli
pop
pop
ret
mov
adc
rcl
cdq
cdq
(bad)
cwde
arpl
mov
mov
mov
pop
inc
cdq
xchg
pop
pop
jbe
fs
push
lods
ins
cmp
cmps
cmp
repnz
cmp
pop
jbe
push
sti
cmp
loop
or
loop
repnz
jle
cdq
fwait
adc
fcomp
and
nop
jmp
inc
xchg
iret
(bad)
int3
adc
and
addr16
xchg
pop
jne
call
xchg
cmp
rcl
ror
adc
xchg
pop
and
adc
call
dec
lea
loopne
mov
pop
push
xor
push
mov
gs
mov
sub
outs
push
adc
push
push
sub
cmc
add
out
xchg
cmp
dec
pop
cmps
pop
lea
dec
xor
(bad)
xor
add
xor
(bad)
(bad)
sbb
das
mov
inc
jb
cmp
loope
push
dec
push
sbb
and
lods
lods
fisubr
lea
std
add
mov
push
sbb
sbb
mov
das
add
call
dec
sub
mov
push
jae
loopne
sub
sbb
mov
pop
push
retf
xchg
jnp
pusha
mov
sub
or
mov
mov
sbb
cmp
sub
test
adc
leave
fisub
pop
scas
jne
data16
mov
aam
pop
or
cmp
test
inc
jmp
icebp
outs
dec
and
ins
sbb
dec
ss
sbb
mov
stos
ins
popf
pop
xor
jg
sub
or
loope
rol
xchg
jmp
inc
sar
xor
or
add
jne
jmp
fmul
(bad)
stc
jle
mov
sbb
sub
std
or
pop
xchg
fcomp
int3
jns
stc
std
data16
popf
enter
cld
jns
movs
shr
ficom
lods
mov
(bad)
hlt
(bad)
jmp
popa
cmp
add
cmp
add
sub
mov
adc
(bad)
and
jno
sub
js
mov
in
scas
aad
mov
mov
pusha
push
stos
xchg
bound
sbb
stc
scas
mov
pop
loope
push
sub
lahf
or
pop
int
lock
add
pop
add
ins
add
mov
inc
or
and
pushf
sub
xchg
xor
test
pushf
jg
mov
outs
sub
xchg
repz
das
jl
daa
test
push
pop
(bad)
sar
xor
test
ss
call
test
mov
hlt
mov
mov
out
jae
daa
out
ds
stos
and
jne
mov
shr
movs
lods
xchg
retf
mov
inc
js
pop
cmp
jne
cmc
cs
cmp
pop
sbb
jno
lods
adc
mov
pop
inc
jl
movs
lock
and
jbe
sub
sub
push
ret
mov
loop
mov
sbb
sbb
add
rcr
cwde
(bad)
adc
inc
scas
sbb
test
add
cmc
xor
bsr
arpl
jg
and
inc
pop
aaa
cmp
mov
dec
test
adc
fsubrp
jb
loop
call
jbe
mov
cs
jecxz
pop
dec
xlat
pop
xlat
push
sub
jb
mov
cmps
mov
xor
pop
xchg
nop
add
jmp
jo
jle
add
das
jo
jle
movs
ds
adc
inc
test
imul
lea
inc
sub
push
and
pop
cmc
sahf
cmp
and
jbe
gs
add
inc
push
pop
adc
lods
cmp
xor
iret
dec
jecxz
and
push
mov
dec
pop
inc
sbb
ret
pusha
xor
sbb
adc
or
xlat
xor
lock
cs
mov
or
in
push
xor
pop
mov
and
push
sbb
mov
neg
or
push
dec
cli
sbb
cdq
std
lock
jo
ins
push
or
add
sub
push
fidivr
push
retf
icebp
jo
sub
std
sub
adc
jbe
lock
movs
dec
loop
clc
mov
cld
dec
enter
xor
mov
jecxz
pop
nop
mov
push
jg
ror
movs
xchg
nop
mov
cli
(bad)
mov
mov
inc
pusha
mov
cmp
mov
xlat
daa
cmp
neg
add
popa
rcr
arpl
imul
mov
je
xlat
ja
icebp
and
lock
mov
cdq
inc
or
mov
out
out
mov
push
fnsave
test
or
pop
and
mov
mov
cmp
fst
sar
loopne
int
fist
xor
stos
arpl
push
fs
imul
sub
push
inc
or
inc
dec
and
retf
data16
fisttp
mov
or
mov
push
jmp
je
and
inc
dec
jo
lods
push
push
pop
mov
inc
cmp
jb
jmp
push
lea
es
adc
scas
and
or
imul
mov
inc
and
adc
mov
loopne
xchg
jge
dec
cmp
xchg
mov
nop
ret
out
or
int
push
pop
mov
clc
dec
sbb
cmp
ja
stc
or
inc
fdivr
xor
test
xor
and
outs
xchg
nop
sub
dec
mov
mov
push
xor
test
jmp
or
test
loope
nop
cli
push
dec
mov
and
add
cmp
outs
mov
sbb
add
mov
inc
inc
sbb
mov
clc
jo
sti
rep
jp
push
jnp
and
cmp
mov
or
sub
inc
lea
xor
cmp
cdq
or
sub
pop
push
cmp
inc
sbb
lea
sbb
push
fisubr
ror
cmp
mov
jecxz
or
jae
mov
(bad)
mov
and
pop
mov
dec
or
sub
inc
jmp
xor
fwait
popf
in
ffreep
jge
mov
mov
inc
or
push
retf
mov
(bad)
stc
nop
inc
jmp
dec
adc
cmp
pop
push
les
push
push
repnz
add
jmp
mov
jmp
xchg
fst
jns
mov
adc
push
pop
adc
pop
ins
movs
xor
pop
push
push
call
push
sub
jle
mov
cwde
pop
repnz
cmp
jb
cmp
jae
ins
cld
call
jmp
(bad)
aam
aaa
adc
jmp
push
mov
push
and
je
lods
lea
or
hlt
out
(bad)
adc
jbe
cmp
out
xchg
push
cmps
and
cmps
pop
or
jmp
mov
mul
inc
xchg
cli
sub
mov
mov
inc
or
inc
(bad)
stc
arpl
stos
sub
xchg
jo
jle
jne
jle
jl
or
jl
or
and
dec
mov
in
imul
lea
dec
je
mov
sub
sbb
pop
xor
adc
xchg
inc
push
sub
inc
adc
inc
dec
add
cmp
jo
sbb
gs
mov
loope
pusha
or
jge
push
daa
loope
fs
pop
cmps
sbb
mov
dec
jne
imul
nop
dec
aad
jne
fcomp
and
xchg
lock
xchg
inc
mov
jb
in
sbb
sub
xor
push
mov
inc
xchg
inc
add
scas
mov
and
and
dec
jle
adc
cmp
push
jmp
and
imul
and
dec
add
sbb
adc
pop
mov
das
and
jne
pop
cmps
add
jecxz
dec
rol
push
test
push
mov
cli
mul
inc
push
and
hlt
ss
xor
jbe
or
jbe
add
mov
add
aad
rcl
jb
add
dec
add
sub
add
jmp
lds
mov
sbb
add
pop
push
jmp
adc
int
popf
xor
ret
js
out
ret
pop
sbb
inc
add
mov
jo
inc
adc
dec
test
xchg
jmp
cmps
mov
inc
jo
sub
xor
cmp
ds
and
add
arpl
and
cmp
add
out
sbb
inc
fbld
pop
sub
sar
dec
mov
push
vpunpckhbw
sbb
push
arpl
and
pushf
dec
jecxz
adc
add
mov
or
clc
sub
xchg
mov
mov
outs
jns
add
push
(bad)
into
iret
inc
outs
inc
mov
(bad)
jae
and
mov
jne
mov
cmp
sub
in
pop
dec
sbb
adc
adc
lea
dec
push
mov
fcom
push
pop
ins
pushf
add
mov
scas
fwait
inc
mov
pushfw
xlat
mov
aad
push
outs
mov
add
adc
and
or
mov
xor
sub
mov
inc
das
cmp
mov
inc
dec
sahf
push
mov
call
xor
and
jnp
cdq
cmps
push
mov
push
add
pop
loop
in
add
jnp
aad
jmp
popf
mov
sub
(bad)
es
push
push
call
cmp
push
bound
pusha
or
push
push
sbb
xchg
sub
nop
jge
std
xchg
pop
sbb
or
mov
jl
retf
jmp
push
scas
gs
cmp
adc
ins
(bad)
imul
xor
jmp
xlat
add
jecxz
push
ret
pushf
add
pop
lahf
push
mov
fwait
stos
lea
enter
mov
mov
or
mov
cmc
inc
and
xor
out
pop
sub
jmp
(bad)
test
nop
jns
inc
push
sbb
mov
xor
or
mov
inc
inc
lds
test
push
cmp
sbb
in
leave
fcomp
adc
xchg
mov
xchg
adc
push
cli
jno
into
xchg
clc
jp
push
scas
les
adc
pop
test
test
jbe
or
adc
sbb
mov
pop
push
in
mov
retf
enter
retf
dec
cs
push
rcl
adc
nop
pop
sub
enter
pop
xor
xchg
add
sbb
mov
retf
mov
sbb
rcl
mov
ror
and
or
sub
xor
xchg
inc
mov
sbb
add
sbb
enter
pushf
mov
xchg
add
test
in
and
lods
pop
sbb
pop
inc
mov
pop
test
rcr
or
add
cmp
test
pop
nop
add
add
adc
mov
outs
jmp
add
jne
jb
mov
add
je
pop
jb
and
dec
dec
into
movs
mov
pop
retf
mov
mul
jns
push
or
es
adc
nop
loopne
sbb
mov
add
inc
loopne
cmp
mov
das
inc
fidiv
repz
sahf
adc
cs
sbb
cwde
mov
fld
in
in
adc
hlt
add
inc
and
dec
inc
sub
xor
nop
jbe
pushf
stos
add
sub
add
lock
or
scas
add
or
(bad)
leave
sub
movs
mov
(bad)
jne
push
adc
add
clc
hlt
xchg
add
imul
mov
mov
sbb
je
inc
cmp
scas
jb
push
lea
or
clc
adc
imul
and
pop
lea
int
pop
xor
pop
cmps
outs
mov
dec
cmp
(bad)
and
add
push
cs
pop
push
add
rol
rcl
pop
xchg
pop
or
push
stc
jb
inc
sub
sub
or
push
push
ins
sbb
mov
cs
jae
adc
(bad)
mov
add
pop
mov
xchg
inc
sub
push
test
int
push
cdq
xor
or
mov
lods
and
inc
and
shl
pusha
pop
sub
cmp
sub
xchg
dec
pusha
dec
dec
mov
jb
pop
js
and
mov
bound
adc
ror
in
push
sbb
mov
fwait
rol
mov
pop
loope
sub
out
mov
fild
push
arpl
jmp
pushf
das
sub
and
sub
retf
test
stc
or
or
sbb
ins
stc
sbb
test
or
sbb
sub
or
pop
shl
dec
pop
pop
es
or
popf
(bad)
sbb
add
arpl
mov
jne
(bad)
icebp
inc
or
push
ret
jmp
pop
adc
jmp
push
push
fdiv
repz
xlat
jmp
or
pcmpeqb
js
or
int
mov
xchg
jmp
sbb
cwde
push
sbb
and
aad
sbb
push
sar
dec
adc
popa
adc
pusha
cmps
aam
xor
dec
inc
inc
pusha
fs
push
mov
(bad)
jne
sbb
int3
(bad)
or
pushf
jmp
popa
or
mov
jg
mov
jge
mov
imul
pop
addr16
or
or
inc
ss
jmp
and
add
lods
je
ret
std
add
cdq
and
sbb
push
fcomp
add
loop
fdivr
es
pop
cmp
jmp
popf
xor
mov
push
adc
push
pop
dec
int3
fs
sbb
cmp
shl
xor
sti
stos
sub
sub
jb
imul
push
adc
jae
sbb
mov
add
es
iret
add
(bad)
adc
ret
pop
and
lea
lea
bound
in
popa
mov
push
push
popa
out
and
cmp
(bad)
sub
jae
out
nop
call
add
dec
outs
jne
cmp
dec
add
in
jne
push
sbb
mov
fisub
pop
pop
inc
add
adc
icebp
sub
sub
call
add
dec
xchg
adc
mov
or
add
or
pop
or
or
hlt
lods
idiv
std
fcom
or
lock
enter
shr
inc
push
std
dec
mov
shr
rcr
shr
rcr
or
jne
div
fild
sahf
pop
dec
adc
inc
mul
pop
jb
cmp
or
push
out
jb
cmp
or
xor
and
or
push
ret
or
fidiv
or
jmp
push
add
and
mov
leave
pop
pop
sahf
push
pop
leave
ret
lods
idiv
adc
shr
jl
or
fld
cmp
out
mov
(bad)
ds
and
shl
adc
nop
sub
pop
enter
jne
repz
cdq
(bad)
popf
jne
mov
or
xchg
mov
pop
getsec
or
sub
sub
xor
(bad)
jne
sbb
ret
sbb
in
xchg
fld
add
jnp
gs
fistp
into
inc
push
pop
push
(bad)
ja
cmp
jbe
pop
jbe
push
lea
ja
push
cmp
push
push
inc
inc
test
pop
xchg
add
cmp
pop
dec
clc
dec
add
mov
and
fcomp
stos
bound
inc
pop
ret
pop
retf
loopne
imul
setb
add
xor
fist
scas
fld
fimul
mov
dec
adc
pop
into
inc
mov
ss
int3
(bad)
aaa
xor
or
pop
xchg
mov
xor
add
mov
xor
pop
sbb
add
sbb
cmp
lock
outs
int3
sub
inc
sub
mov
sub
add
pop
or
jecxz
mov
cmp
jge
xchg
sbb
(bad)
(bad)
call
sbb
je
shl
xor
fdiv
cmp
jmp
sbb
dec
sar
sti
or
mov
shl
pop
add
mov
jb
jns
adc
(bad)
adc
js
push
in
or
jmp
ja
add
sub
push
add
jecxz
adc
push
(bad)
dec
leave
sbb
pop
adc
cli
cdq
push
push
mov
inc
jo
or
loopne
cmp
cmp
adc
mov
lock
lock
jb
fcomp
push
ret
push
inc
sahf
cmps
sti
xor
pop
clc
and
ret
retf
xchg
(bad)
rol
sar
in
aas
adc
bound
call
(bad)
nop
adc
jo
lods
dec
adc
mov
cmp
jb
add
es
ja
push
es
cs
mov
sti
and
xchg
call
in
out
xor
ficomp
into
mov
sbb
call
fdiv
add
cmp
cli
pop
adc
and
enter
jl
and
or
mov
mov
adc
mov
in
add
push
(bad)
outs
inc
add
pop
add
sbb
jbe
call
jmp
cs
add
fmul
cmp
push
pop
sbb
neg
stos
sub
inc
mov
pusha
xchg
pushf
into
clc
jge
inc
push
imul
mov
inc
and
or
inc
(bad)
pushfw
push
push
es
mov
scas
jnp
or
push
add
out
rol
inc
sbb
push
cld
(bad)
mov
jo
sbb
mov
or
cwde
loopne
loopne
mov
ret
and
test
push
pop
pop
sbb
mov
inc
and
jg
ss
je
or
sub
loope
inc
adc
je
es
or
xchg
inc
cmp
dec
push
cmp
inc
and
aas
sub
adc
sub
pop
ror
cmp
jno
ss
xchg
sar
arpl
inc
sbb
retf
jl
in
mov
push
pop
ins
add
fild
leave
and
jmp
rcr
or
leave
add
es
mov
mov
inc
shl
add
mov
inc
add
je
push
push
xchg
das
and
mov
imul
jmp
scas
cmp
cmp
sar
add
or
mov
(bad)
xchg
push
and
aam
daa
call
out
jo
jb
mov
jle
sti
stc
sub
popf
lock
call
aam
shl
sar
or
pushf
cmp
shl
je
mov
ror
lea
add
mov
popf
sbb
vpscatterdd
repnz
mov
into
idiv
sub
mov
sbb
test
in
adc
sbb
js
imul
js
inc
pop
lods
and
dec
lods
jmp
mov
mov
sub
lahf
dec
popa
add
loopne
mov
pop
lock
shl
lods
ins
or
sbb
rcl
cmp
push
ss
mov
rol
cmp
jge
imul
dec
sbb
or
fiadd
cmp
imul
xor
sub
or
sbb
test
add
sub
xchg
loop
xchg
popa
cli
push
pushf
fdiv
mov
add
and
int
lods
xchg
mov
repnz
push
lea
adc
add
repnz
into
jnp
in
in
sbb
sub
retf
pop
xor
or
enter
xor
inc
call
xor
mov
shr
push
pop
inc
or
jmp
sbb
ja
mov
fnstenv
inc
test
pop
xor
pop
adc
xchg
test
in
arpl
outs
js
ficomp
fcom
test
jmp
stos
jbe
xor
or
fwait
sbb
dec
xor
lock
test
mov
mov
enter
or
js
mov
jmp
jmp
jg
je
retf
int3
(bad)
std
push
push
inc
aad
sbb
js
js
inc
push
xor
test
adc
mov
cld
sar
pop
push
or
sbb
inc
cmp
fcomp
mov
jp
xchg
mov
inc
mov
cld
sti
xchg
jb
std
jg
(bad)
dec
sbb
or
push
mov
xor
fiadd
or
adc
fidiv
das
retf
pop
mov
mov
push
xchg
loopne
cwde
adc
and
sub
rol
adc
mov
cmp
test
sbb
push
mov
inc
mov
and
test
inc
dec
push
popa
pop
je
out
xchg
add
sti
imul
add
mov
pop
test
push
inc
dec
ss
xor
pop
pop
and
hlt
popa
fs
mov
addr16
push
add
rcr
inc
mov
outs
mov
xchg
not
or
les
in
jb
and
xor
adc
jmp
aas
xor
ret
int3
in
inc
aaa
pop
(bad)
add
xchg
mov
add
mov
(bad)
mov
js
shl
imul
mov
sbb
daa
data16
add
mov
mov
adc
pop
sti
sbb
add
jmp
outs
add
push
(bad)
cmp
or
in
test
jns
(bad)
loopne
pushf
inc
pop
jmp
push
mov
ds
test
data16
loop
mov
add
mov
mov
ror
or
jmp
nop
mov
cmp
mov
hlt
add
addr16
test
dec
cmp
jle
leave
pop
aam
push
mov
pop
cdq
mov
out
test
out
nop
scas
xor
daa
mov
jne
jmp
mov
iret
pop
in
js
in
mov
cld
cs
mov
push
rcl
das
sub
lea
push
rcr
jp
sti
out
and
add
mov
push
push
mov
pop
mov
dec
cs
pop
jne
fimul
(bad)
loop
ds
clc
xor
add
test
cmp
sbb
jae
cld
dec
fwait
add
test
add
sub
loope
adc
iret
and
jne
push
pop
ins
(bad)
enter
aam
pop
jno
or
imul
adc
adc
pop
sar
or
or
test
jmp
inc
dec
cld
into
clc
das
sbb
clc
jg
jl
and
stos
add
adc
fst
clc
neg
xchg
mov
dec
xchg
jecxz
aaa
fnstsw
inc
jmp
and
inc
cmp
(bad)
jle
xor
or
(bad)
fild
dec
pop
ret
jae
jg
cmp
loope
daa
cdq
push
push
push
std
add
pop
pusha
icebp
rcl
stc
cmp
cmp
cdq
ret
add
pop
xor
in
mov
call
inc
(bad)
sub
je
mov
push
jo
cmp
fs
mov
dec
sub
jmp
xor
je
sbb
add
cdq
sub
xlat
loope
sub
lods
inc
and
sbb
movs
add
mov
pop
pop
fsub
sub
sub
test
(bad)
jmp
xchg
lea
cdq
aad
push
cmp
mov
rol
cmps
je
js
xchg
cmp
cdq
mov
test
or
sub
xchg
in
push
push
mov
dec
pop
xchg
and
movs
cmc
sbb
xor
fisttp
dec
scas
push
movs
xor
xor
cmps
hlt
lds
or
push
add
sbb
pop
push
mov
mov
or
lea
neg
pusha
clc
adc
push
out
add
jne
js
mov
and
inc
jae
and
mul
or
fwait
test
adc
push
cmp
cmp
bound
arpl
fdiv
xor
imul
dec
scas
xor
sbb
cmc
sahf
rep
add
ss
lods
sbb
mov
push
xchg
push
cmp
push
enter
sahf
lahf
or
or
push
and
stos
test
push
xchg
aam
ss
ins
sbb
data16
out
xor
fstp
jl
je
sub
(bad)
push
(bad)
xor
add
dec
mov
mov
inc
ds
mov
push
bound
and
add
mov
inc
sub
out
cmp
jo
retf
add
add
les
leave
sub
and
push
in
mov
or
popf
push
dec
add
add
in
mov
(bad)
call
rol
outs
jmp
mov
mov
push
adc
leave
inc
stc
shl
and
xor
adc
adc
adc
pusha
js
jl
and
sbb
pusha
jg
push
movs
inc
jmp
or
cmp
bound
(bad)
jnp
out
(bad)
int3
ss
fistp
out
jne
sbb
or
inc
pop
mov
dec
push
sub
dec
mov
sub
mov
and
icebp
hlt
fdivrp
xor
pop
sub
dec
je
dec
jne
les
add
pop
push
jnp
outs
sbb
mov
push
xor
call
sahf
out
and
xchg
and
add
jo
mov
in
xchg
push
push
add
loopne
push
cmp
sub
(bad)
js
int3
jo
dec
mov
mov
dec
call
add
xor
scas
and
ret
les
and
aam
es
sbb
loopne
dec
cmp
movs
cmp
mov
mov
and
sahf
mov
mov
aas
test
and
cmp
movs
lods
mov
stos
dec
pushf
inc
nop
mov
mov
loopne
jne
jle
(bad)
xor
push
loope
add
mov
or
inc
and
xchg
leave
test
(bad)
pushf
jg
xchg
test
out
or
or
stc
push
les
je
or
add
or
std
sahf
loop
or
xor
cmp
ins
ins
or
add
jle
icebp
xchg
fmul
ja
add
sub
pop
sub
shl
in
add
push
call
dec
mov
sub
sbb
adc
push
add
mov
mov
sub
sbb
in
lods
loopne
pop
mov
out
nop
mov
ret
mov
cmps
ss
outs
dec
je
das
or
je
add
in
ficom
inc
jle
jle
test
inc
cmp
pop
mov
push
adc
ret
imul
lock
and
and
jo
(bad)
push
or
jbe
or
into
pusha
lock
out
es
loope
push
pop
adc
add
jge
mov
not
jmp
inc
jmp
inc
(bad)
xor
jae
mov
inc
mov
fs
mov
mov
call
and
cmp
outs
scas
adc
movs
jne
lods
ret
je
xchg
push
jb
and
push
or
loope
repz
push
clc
retf
mov
js
adc
mov
mov
pushf
sbb
mov
jg
sbb
aas
ss
pushf
lea
ins
cmp
inc
sub
inc
jae
adc
and
sub
or
pop
js
jl
scas
sbb
or
outs
lds
sbb
cmp
mov
xor
inc
push
jbe
cmp
jne
cmp
mov
jne
jmp
adc
shl
ins
mov
jmp
push
jmp
mov
loope
pop
cmp
(bad)
or
cmp
adc
push
jo
jmp
adc
or
dec
push
lds
out
aam
movs
rcl
cmp
(bad)
mov
sbb
mov
cmp
jl
inc
mov
push
sti
loope
sbb
lods
jmp
sbb
dec
cmp
jne
mov
or
stc
mov
loopne
jmp
mov
ins
jg
leave
jns
neg
test
add
mov
sub
enter
arpl
pop
push
mov
sub
and
push
or
pusha
addr16
sub
push
jns
and
test
or
push
nop
adc
popf
fdivr
jae
(bad)
and
add
sar
mov
cmp
pop
cmp
pop
add
inc
inc
xor
xor
mov
mov
rcl
xor
or
adc
into
push
repnz
fnstcw
ja
and
and
cld
add
xor
cmp
inc
mov
dec
mov
xchg
fadd
test
sub
icebp
or
and
jne
sbb
and
and
aas
ds
sar
dec
js
pop
jp
inc
test
push
xchg
jne
dec
adc
test
ss
nop
inc
ss
fld
push
shl
or
cmc
add
or
pop
stos
cmp
je
adc
ror
cmp
sub
jmp
mov
pop
lea
mov
mov
int
in
and
push
mov
clc
mov
jp
mov
cmp
stos
fnsave
cmp
jae
add
clc
clc
ins
cwde
and
jmp
test
dec
test
xchg
inc
daa
(bad)
mov
pop
(bad)
inc
dec
loopne
aam
mov
shl
mov
jge
adc
mov
es
test
sub
xlat
shr
add
or
push
and
jmp
nop
fs
add
mov
aam
push
jg
or
adc
xchg
mov
data16
shl
add
je
inc
push
add
(bad)
pop
outs
mov
ins
mov
les
shl
shr
shr
or
stos
mov
cmp
cmc
jne
push
rcr
clc
(bad)
mov
pop
jmp
mov
call
not
and
add
and
addr16
adc
push
call
mov
jmp
push
fiadd
adc
pushf
repz
add
pop
adc
pop
or
mov
or
add
lods
jbe
sbb
push
cld
push
add
add
and
test
xor
mov
add
or
jle
xor
push
popa
mov
scas
sub
mov
mov
cmp
or
jmp
aad
add
xor
scas
lock
cli
push
rcr
mov
lock
or
mov
inc
pop
add
mov
xchg
push
out
je
rep
nop
push
fwait
xchg
or
out
xchg
and
mov
popf
sub
cmp
pop
add
xchg
pop
sub
mov
pop
sar
or
fnclex
xor
cmp
outs
fistp
popf
nop
sbb
mov
xchg
inc
inc
retf
cs
cwde
pushf
pop
dec
sbb
movs
jbe
inc
test
sub
dec
add
xor
not
je
lea
lods
sub
adc
dec
xor
jno
mov
adc
das
xchg
test
out
cmp
add
les
and
xchg
add
mov
fwait
and
pusha
mov
cli
inc
xor
shl
out
jno
ds
add
fs
cld
nop
lds
cmp
js
fadd
mov
aam
cmps
jne
inc
add
sar
lock
sbb
nop
cmps
xor
add
and
xchg
xchg
mov
daa
fwait
and
int
rcl
cmp
jbe
push
call
pop
mov
cmp
fistp
mov
mov
add
pop
or
call
xchg
rol
outs
fisttp
test
adc
lea
ja
idiv
add
ins
xchg
xchg
inc
in
and
out
mov
(bad)
jno
es
inc
movs
out
push
push
xor
adc
dec
mov
inc
inc
fdiv
or
jle
retf
and
pop
mov
inc
add
mov
clc
shl
pop
inc
inc
loopne
and
and
cwde
pushf
inc
cmp
call
lods
rol
push
push
cmova
sbb
cmp
jb
inc
cdq
sub
ins
je
pop
ret
inc
jmp
and
cld
mov
outs
loop
pop
or
imul
xor
sbb
aad
dec
add
xchg
fs
jg
les
test
adc
out
push
sbb
mov
lods
loopne
and
inc
xchg
test
shl
sub
fs
inc
push
mov
inc
push
loope
xchg
pop
inc
adc
xchg
shl
push
cmovns
mov
rcr
pusha
cmp
jae
mov
sar
lock
pop
sahf
and
inc
push
cs
je
daa
mov
sbb
pusha
loopne
inc
adc
adc
call
or
jmp
not
add
or
inc
push
pop
sbb
sbb
sbb
pop
fcom
inc
push
(bad)
jne
xor
add
es
pusha
xor
dec
cmp
or
repnz
add
shr
or
xchg
jge
inc
sub
das
int
push
ins
push
push
mov
sar
stc
std
movs
leave
or
ret
retf
jne
shl
sub
ror
push
shr
dec
movs
push
push
jnp
xor
cmp
sub
mov
adc
jbe
shl
sub
popf
ret
xor
lea
xchg
fmul
sbb
push
adc
mov
sub
div
or
inc
and
jg
or
and
and
icebp
cmp
mov
mov
jp
lea
mov
push
test
push
sbb
inc
fmul
push
sar
inc
fadd
add
sub
sar
fnstsw
cmp
daa
mov
mov
movs
sti
push
sbb
daa
icebp
sub
stos
lea
inc
fcomp
into
mov
xor
push
push
pop
fadd
mov
and
loopne
aad
retf
push
inc
add
and
adc
loope
call
ret
stos
movs
inc
aad
xchg
mov
add
inc
push
jge
mov
int3
jecxz
add
adc
sahf
aam
xchg
mov
sbb
add
lods
push
movsx
or
nop
test
(bad)
push
sub
mov
push
mov
cmp
inc
clc
cs
sbb
push
or
add
pop
ret
and
ds
fwait
outs
or
test
or
jmp
push
inc
add
cmp
push
dec
lea
mov
in
adc
jge
jl
lahf
push
sub
test
or
push
or
jmp
jae
loope
mov
(bad)
mov
dec
xchg
cmp
and
fdivr
adc
dec
xor
add
movs
cmp
test
or
addr16
and
and
pop
fadd
inc
dec
mov
in
push
or
in
inc
or
lods
xchg
sub
push
adc
imul
pop
push
pop
aad
cmp
pop
or
inc
retf
stc
nop
lock
icebp
shl
sahf
xor
adc
and
call
mov
add
sar
cmp
or
and
jmp
jne
xor
shl
add
mov
aas
dec
xor
clc
mov
je
out
cmp
jnp
call
repz
test
pushf
test
and
add
add
ins
pushf
(bad)
push
inc
mov
test
push
pop
aaa
cmp
sbb
push
stos
jge
fisttp
shr
xchg
or
mov
ja
mov
adc
xor
mov
adc
jle
fcomip
sbb
sub
in
sbb
test
dec
dec
or
cmp
and
add
cmps
jl
cmp
mov
mov
add
mov
and
pop
add
add
in
in
ds
jo
xchg
out
fcom
adc
mov
xchg
les
popa
and
pop
int3
mov
ret
dec
fild
add
or
and
int3
xor
lods
push
out
fild
push
mov
mov
ins
push
mov
call
rol
lds
popa
ret
hlt
jmp
mov
add
pop
push
push
mov
ret
mov
mov
mov
bound
(bad)
cmps
or
(bad)
adc
add
xchg
(bad)
push
hlt
mov
inc
retf
sub
push
sub
cs
mov
cmp
mov
lds
push
inc
jns
sahf
push
inc
mov
dec
add
in
int3
es
mov
stos
mov
push
in
add
jno
or
inc
out
fwait
cmp
rcl
mov
dec
daa
adc
dec
mov
fdivr
(bad)
add
mov
test
in
out
das
xor
xchg
mov
inc
xlat
enter
xchg
aas
mov
sbb
jne
dec
pop
ret
std
dec
lock
inc
xor
mov
inc
inc
mov
rcr
pusha
cdq
push
jne
xchg
in
dec
xchg
mov
inc
inc
mov
push
xor
add
or
mov
sub
stos
xor
sub
pop
add
out
dec
mov
loopne
retf
mov
sub
leave
test
adc
push
stos
sbb
(bad)
aad
dec
jo
shl
mov
movs
add
rcr
cmc
ds
xor
push
mov
mov
jne
and
mov
out
pop
add
icebp
ret
add
xor
push
sub
(bad)
jmp
inc
xchg
or
mov
and
xlat
jo
sbb
jno
fwait
and
inc
jmp
bound
add
mov
sub
sti
loopne
clc
stc
test
retf
jae
add
add
clc
mov
adc
add
xor
add
dec
in
shr
aas
sbb
push
or
or
sub
add
shl
repnz
and
xlat
pushf
rol
add
sub
loopne
jecxz
je
jbe
mov
push
movs
mov
je
mov
lahf
mov
lods
cmps
shl
hlt
jg
jmp
movs
imul
repnz
push
cs
mov
sub
shl
dec
enter
scas
mov
mov
jo
les
adc
inc
jbe
or
or
lock
arpl
jle
dec
test
adc
dec
or
pop
mov
jmp
mov
ss
or
or
les
cmp
sub
and
or
inc
(bad)
vdivps
jns
leave
and
mov
xchg
into
stc
lock
test
repnz
enter
mov
mov
xor
push
stos
leave
fldenv
xchg
test
push
aas
movhps
enter
stc
rol
repnz
sar
jg
jbe
mov
in
or
jl
push
mov
jl
jbe
mov
loopne
fmul
mov
test
(bad)
out
mov
cvtpi2ps
lock
mov
pop
and
or
dec
sub
(bad)
cmp
ret
sbb
inc
mov
jecxz
in
(bad)
mov
or
inc
mov
shl
scas
popf
call
fdiv
outs
daa
iret
add
std
sub
dec
dec
rcr
add
mov
cmp
mov
repnz
mov
adc
and
sub
cmp
and
fcomp
sbb
mov
std
loope
je
rcr
loopne
je
and
pop
imul
aaa
ret
push
(bad)
jmp
je
je
mov
or
or
xchg
sub
xor
sub
stos
push
sbb
mov
mov
call
and
add
adc
xchg
jg
xor
mov
add
cmp
aas
xor
aas
fs
test
cmp
push
mov
sub
xchg
js
pop
push
pop
xchg
sub
xchg
add
shl
push
cwde
es
ins
push
cmp
push
js
sar
mov
sti
dec
push
ret
mov
loopne
or
scas
mov
js
mov
test
mov
movsx
add
imul
or
sbb
dec
cmp
test
std
jno
ds
pop
(bad)
fdivr
call
std
daa
pop
pop
mov
je
mov
add
cmp
cmps
push
mov
leave
cli
retf
popa
call
push
shl
inc
jbe
(bad)
std
mov
adc
jno
rol
leave
(bad)
sar
push
mov
ss
dec
mov
jo
daa
jmp
pop
int3
pop
and
je
add
daa
jne
inc
ror
pop
push
adc
std
dec
jecxz
je
imul
mov
fsubr
ret
loop
dec
push
xor
ror
adc
sbb
xchg
arpl
sbb
or
xchg
xchg
push
mov
or
imul
enter
cmp
jb
inc
call
or
inc
cs
icebp
mov
hlt
lds
mov
add
jns
push
std
jbe
lds
call
enter
mov
jns
std
sar
std
in
les
test
and
std
addr16
sub
push
jb
fdivr
mov
cmp
addr16
mov
jno
jb
sub
std
scas
inc
xchg
daa
and
pop
std
fist
daa
mov
std
sahf
sub
push
and
mov
aad
jno
xor
repz
out
add
(bad)
leave
adc
test
cmp
mov
out
dec
xor
call
mov
out
adc
iret
inc
mov
fstp
sar
shr
mov
std
mov
mov
std
stc
sbb
pop
fdivr
pushf
std
sar
adc
sar
cli
mov
daa
push
inc
retf
jae
pop
and
ss
mov
clc
out
sub
push
xor
and
xchg
fisubr
pop
dec
pusha
dec
inc
mov
cmc
jnp
mov
sub
iret
lock
inc
cmp
jmp
nop
sbb
jmp
ror
shr
add
enter
mov
in
adc
xchg
push
pop
xchg
mov
inc
out
lods
std
std
and
sub
sar
aam
mov
sbb
sbb
push
movs
test
lods
je
push
jns
into
dec
cdq
pop
push
push
fmul
movaps
movs
mov
add
aas
cmp
sub
sbb
add
call
inc
cmp
cmp
or
inc
rcl
inc
add
pop
cmp
push
xchg
jp
js
sub
xor
and
jle
adc
and
repz
xor
pop
test
int3
sbb
sbb
nop
std
mov
mov
mov
push
push
test
and
out
loope
stos
cmp
jl
and
call
or
inc
jp
sub
nop
add
add
or
mov
jno
add
sub
or
inc
mov
xchg
ret
jmp
outs
mov
imul
retf
loop
adc
adc
cmp
jo
add
xor
xchg
mov
test
mov
add
push
rol
je
ss
dec
aas
scas
movs
sub
cmp
sub
adc
test
mov
pop
cmps
sbb
xor
loope
inc
or
mov
aam
xor
sub
push
aas
inc
dec
fwait
or
xor
fs
or
cmp
jmp
ret
dec
ja
mov
mov
mov
shr
mov
dec
cmp
retf
ja
jl
mov
xor
jb
imul
in
and
enter
and
sub
or
jne
push
jmp
lds
add
xchg
clc
push
stos
cmp
dec
push
xor
pop
div
sbb
aas
xor
add
xchg
cmp
dec
adc
ret
dec
push
(bad)
and
add
adc
or
mov
shl
cmps
push
push
out
pop
enter
and
inc
jecxz
fadd
push
(bad)
jne
cmp
add
sbb
dec
mov
call
dec
adc
call
push
imul
(bad)
movs
xchg
mov
mov
xor
mov
lea
ficom
rcl
retw
adc
movs
ret
push
mov
shl
and
je
leave
mov
lock
adc
jne
or
push
mov
inc
mov
gs
sbb
jle
push
or
bound
xchg
fwait
dec
invd
adc
mov
int
jne
or
mov
rcl
add
ret
adc
jp
fstp
sub
ficomp
mov
icebp
or
(bad)
test
push
adc
test
addr16
push
fnstcw
(bad)
outs
cmp
mov
adc
add
or
dec
add
(bad)
in
jle
add
dec
das
je
movs
mov
test
pop
and
mov
retf
xchg
in
push
or
stos
inc
sub
sbb
or
mov
and
es
out
add
or
inc
daa
jle
sub
mov
pop
aaa
adc
xor
lock
and
bswap
or
retf
clc
popa
jge
mov
or
or
mov
bound
and
xchg
js
add
or
cmp
loop
cmp
sbb
bound
or
sub
int
test
ja
adc
and
add
dec
push
dec
rol
shl
dec
sub
cli
add
cmp
add
push
lea
test
mov
jo
es
jnp
sti
and
push
das
adc
and
ins
rol
xor
mov
out
imul
inc
sub
cmps
fs
mov
push
mov
(bad)
in
out
mov
mov
iret
jmp
adc
lock
inc
sub
xchg
outs
pop
xor
lock
test
repz
icebp
add
cld
adc
xchg
push
loop
sub
test
mov
add
out
inc
and
fistp
or
nop
push
adc
imul
mov
aaa
or
adc
dec
or
fisub
pop
adc
push
fcomp
sub
sub
add
sub
sub
jmp
cmp
mov
sub
push
sub
xchg
or
jmp
fldcw
movs
cmp
leave
adc
mov
into
add
fld
hlt
push
bound
popa
jnp
sbb
lea
sbb
push
hlt
dec
mov
xor
mov
fcomp
cmp
mov
leave
inc
jmp
mov
or
push
mov
imul
push
sub
dec
or
xchg
mov
add
test
mov
push
repnz
sbb
add
cmp
adc
ins
clc
dec
jne
loopne
mov
fst
push
mov
frstor
push
xchg
adc
cmp
adc
jae
sub
or
cmp
int3
shl
jp
xlat
jne
mov
or
push
cmp
ins
cld
cmp
popa
pop
test
add
or
mov
jbe
jb
mov
loopne
push
and
mov
mov
xchg
or
sbb
push
les
pop
push
mov
add
test
add
xor
sbb
imul
xchg
xchg
data16
or
adc
mov
lock
xor
push
jmp
pop
and
cmp
enter
add
call
add
and
sub
mov
aaa
dec
mov
or
push
add
dec
or
xor
or
add
cmp
and
xor
inc
inc
xchg
xor
inc
rol
and
mov
or
div
ret
jmp
inc
and
mov
and
cmp
add
aaa
jecxz
sbb
into
xor
push
mov
xchg
jmp
inc
lea
pusha
and
or
cmp
mov
in
outs
and
pusha
and
push
fld
push
fldcw
adc
pusha
ins
pop
sbb
pusha
loope
add
push
iret
xchg
sbb
cmp
adc
rcl
pusha
xchg
jp
punpcklbw
add
push
xchg
jecxz
xchg
loopne
cmp
push
ficomp
or
bound
and
adc
sti
cmp
cmps
repnz
add
add
aaa
test
movs
add
je
ins
add
je
add
dec
jne
or
adc
or
out
push
jmp
pop
test
cmps
jne
dec
outs
test
jnp
je
dec
mov
sub
and
inc
add
adc
loopne
cmp
fld
fstp
jmp
fisttp
push
xor
lahf
dec
ret
push
ja
les
xor
sbb
aas
dec
aaa
push
or
cli
cmp
sub
push
jl
sub
pop
adc
imul
adc
push
cmps
in
sbb
sbb
aam
ror
mov
and
sub
data16
dec
js
xchg
es
mov
push
ret
pop
ss
push
adc
push
(bad)
leave
pop
mov
cmp
outs
iret
pop
adc
pop
mov
cmp
xor
scas
mov
int
or
xchg
leave
jmp
xchg
xor
arpl
mov
aam
fidivr
ret
and
cld
fnclex
movsx
sti
rcl
fstp
sbb
aad
push
not
and
or
push
push
fsincos
retf
arpl
ins
or
push
arpl
fld
std
sub
pop
or
jbe
enter
sbb
jle
jp
xor
test
jmp
xor
imul
sbb
fldpi
xor
ffree
retf
dec
dec
and
inc
ret
cmp
popa
call
push
test
mov
movlpd
adc
pop
ror
adc
outs
push
clc
movsd
sub
(bad)
push
cli
xor
int3
add
rol
(bad)
cmp
mov
cmp
(bad)
fild
sub
popa
loopne
adc
sub
push
mov
movs
sub
mov
cmp
fild
push
add
mov
inc
test
retf
int
cvtdq2pd
dec
sbb
neg
xlat
es
lahf
mov
and
mov
outs
jns
sub
pop
out
jo
push
repz
stos
loopne
pop
lock
sahf
rcl
pop
jbe
and
ret
add
add
xor
add
movs
test
call
mov
stos
neg
repz
inc
rol
fsubr
ror
in
push
adc
mov
mov
jge
rol
rol
(bad)
cld
sbb
imul
aam
out
(bad)
push
cmps
pop
repnz
cmp
or
ins
lock
(bad)
out
and
add
mov
mov
cmp
rol
into
mov
or
(bad)
and
push
fld
daa
ret
mov
sbb
add
imul
out
shl
push
out
add
push
push
loope
sub
repz
or
jo
out
repz
or
iret
sbb
or
loope
enter
pop
mov
dec
pop
loopne
xchg
or
int
pop
lock
rcr
pop
(bad)
out
mov
add
cwde
setge
sbb
iret
data16
ror
div
lock
repnz
cli
add
push
div
add
and
lds
or
in
sub
cmp
adc
movs
(bad)
(bad)
lock
jns
jnp
loopne
sar
clc
ret
fdiv
jb
repnz
adc
repz
jecxz
test
mov
push
les
inc
lods
test
pop
int
ret
fstp
pop
rcl
jle
dec
adc
push
icebp
push
adc
and
leave
pop
sbb
inc
or
jo
push
or
lahf
rcr
into
neg
add
mov
cmps
push
mov
mov
fst
cli
icebp
out
(bad)
fisttp
out
repz
rcl
ret
fstp
rol
sbb
xchg
fs
loope
pop
cmp
mov
lock
hlt
stos
push
cmp
pop
mov
mov
mov
add
repnz
adc
mov
add
mov
xor
or
cld
xlat
clc
aas
adc
pop
mov
or
dec
cs
mov
into
aad
enter
sar
sub
inc
clc
sub
mov
aam
xor
pusha
add
stos
add
xor
adc
xchg
mov
mov
mov
jne
sub
(bad)
shl
and
mov
loopne
xchg
ret
and
iret
icebp
(bad)
aam
add
pop
retf
inc
leave
mov
popa
out
f2xm1
sbb
aam
push
leave
loopne
fadd
push
adc
retf
into
push
sar
ja
mov
stc
mov
dec
pop
shl
test
xor
xor
int
mov
push
ret
or
inc
push
xchg
test
aaa
outs
js
pop
sub
adc
les
xchg
add
adc
mov
iret
or
stc
jnp
or
add
cmp
pop
leave
mov
or
jmp
fcmovb
ins
pop
aaa
xor
jne
and
jne
xor
push
sti
fild
add
call
lock
push
faddp
add
jmp
or
lahf
pop
loopne
xor
mov
les
movs
jns
ret
or
jae
retf
shl
ret
int
pop
rol
jp
add
dec
ins
in
pusha
mov
add
inc
and
cmp
mov
and
push
outs
in
shr
push
add
pop
sub
dec
adc
or
fld
sbb
or
pop
sbb
adc
fdivr
rol
ins
mov
nop
push
inc
xor
dec
mov
inc
and
jmp
xchg
mov
stos
loopne
and
add
into
dec
and
aam
pusha
dec
sbb
inc
pop
dec
mov
sub
sbb
xor
retf
neg
sar
dec
inc
les
loopne
add
push
clc
jne
lods
mov
faddp
sub
test
repz
cmp
test
mov
push
div
rol
in
(bad)
mov
jl
or
mov
ret
inc
jg
pop
rol
iret
and
lock
(bad)
shl
or
adc
sbb
add
sbb
(bad)
std
or
in
std
ins
push
xor
lahf
push
shr
fucomp
ret
ror
pop
push
cmp
inc
aad
pusha
lds
jnp
adc
pop
sbb
pop
out
pop
and
and
jb
push
shl
or
(bad)
js
push
dec
pop
aam
shl
add
ret
les
lahf
scas
cmc
and
std
nop
(bad)
sbb
mov
test
cmp
jmp
and
in
fldl2e
fmulp
(bad)
into
dec
pop
dec
fsubr
popa
sub
test
add
shr
retf
test
hlt
dec
lea
int
cwde
ror
push
sub
and
jge
aad
loope
scas
cmp
pop
or
mov
rol
cmc
sub
mov
pusha
sbb
rol
push
ret
inc
iret
(bad)
ins
popa
mov
or
jne
pop
in
jmp
sbb
inc
mov
mov
push
mov
dec
xchg
or
jmp
jmp
push
jo
ja
or
jb
xchg
add
lea
cmp
or
add
adc
xchg
cmp
(bad)
fisttp
daa
in
les
f2xm1
ret
mov
xchg
les
ficomp
push
fadd
fnstenv
adc
clc
mov
retf
sahf
mov
mov
cdq
inc
jbe
adc
data16
push
inc
or
mov
loope
leave
cmp
jne
popf
test
fbld
out
mov
mov
mov
test
in
xchg
ins
sbb
add
cmp
jge
loope
stc
rol
and
xlat
movsx
and
es
fimul
stos
xor
jg
mov
push
iret
cmp
and
ins
scas
loopne
rol
mov
mov
or
in
or
cmp
xor
fadd
mov
jmp
test
fisttp
fstp
or
ja
loopne
jp
pop
pop
add
shr
hlt
ret
mov
push
cwde
imul
and
cwde
dec
sar
and
out
cmp
push
(bad)
movs
mov
test
stos
dec
loopne
mov
or
add
ss
shr
lea
push
push
push
dec
dec
add
sub
jge
jg
or
ins
or
and
inc
push
jb
push
xor
dec
test
test
sub
retf
sbb
fldcw
popa
bound
dec
mov
jbe
xchg
ret
sbb
jnp
movlps
mov
in
ror
fld
and
test
inc
je
icebp
fucomip
xor
movs
enter
or
add
or
fld
out
add
or
mov
mov
ret
outs
cmp
sbb
and
pop
ret
gs
sbb
push
je
jle
or
or
push
gs
sbb
adc
mov
fs
in
je
xlat
pop
mov
jne
add
(bad)
sbb
and
daa
fucom
mov
add
jb
dec
fcomp
jge
test
(bad)
xlat
sbb
push
xor
out
and
jbe
sub
jmp
jnp
jg
push
pop
pop
test
jne
and
pop
fucom
pop
jp
jmp
ds
jmp
lock
clc
inc
clc
pop
fucompp
inc
(bad)
cmps
add
sbb
mov
pop
sbb
idiv
cmp
inc
lods
xor
add
cmpps
sti
cmc
or
aam
cs
int3
outs
outs
test
int
inc
cmp
cdq
movs
sar
or
mul
xchg
cmp
mov
inc
adc
inc
pop
dec
pop
rcl
sub
loopne
(bad)
mov
inc
repz
fcom
jmp
bound
pop
push
ins
scas
sbb
je
push
pop
js
enter
add
(bad)
sub
fwait
jp
and
cmp
xchg
mov
mov
ret
fstp
xchg
cmps
mov
mov
inc
call
sbb
adc
sbb
mov
push
jbe
dec
cwde
ficomp
push
and
or
sbb
cwde
add
jle
pop
xor
cmp
sti
scas
mov
fiadd
cmp
mov
push
adc
pusha
pushf
or
je
jae
push
imul
inc
cmp
mov
leave
jmp
cwde
fild
cmp
enter
mov
int3
stc
sbb
mov
sub
inc
push
cmp
ficom
nop
loopne
inc
sbb
or
dec
adc
shl
xchg
inc
adc
add
and
xor
and
dec
add
jmp
xchg
push
jo
hlt
cmp
je
jmp
jb
and
je
std
or
mov
jl
test
iret
add
or
pop
iret
mov
sub
(bad)
sub
shr
and
mov
test
mov
add
test
inc
push
dec
je
push
sbb
or
jg
nop
add
test
mov
cmp
mov
xor
pop
imul
inc
cwde
aaa
inc
pop
cmc
jge
mov
push
mov
jg
jecxz
cld
rol
xlat
je
outs
pop
sti
add
movs
and
(bad)
fcom
or
sub
sub
sbb
sub
jmp
rcr
jmp
js
ret
mov
sub
jmp
sbb
iret
movs
sahf
out
xor
ss
push
mov
pop
sub
add
fsub
and
jno
sahf
mov
push
ja
test
jmp
imul
jnp
inc
push
dec
arpl
xor
scas
adc
add
movs
mov
sbb
add
push
cmp
adc
and
jl
frstor
inc
add
ret
push
dec
ret
std
xor
daa
das
rol
sbb
lds
ds
pop
rcl
mov
mov
or
jg
mov
mov
adc
aas
js
jmp
push
mov
add
fst
cwde
les
and
jg
mov
fld
xchg
xor
jo
and
sbb
xor
mov
cmp
jbe
lea
lea
or
rol
adc
int3
sti
shr
dec
push
add
mov
push
mov
pop
sbb
sub
mov
push
add
jbe
xchg
mov
xor
test
out
outs
test
add
adc
pop
inc
mul
mov
and
xor
lods
sub
add
sub
mov
xor
push
inc
repz
xchg
xor
xor
xor
xor
push
mov
add
shr
repz
inc
cmp
xor
out
or
mov
mov
mov
add
push
movs
in
ins
enter
rcr
push
mov
and
(bad)
scas
js
dec
push
shr
cs
adc
das
cmp
fisubr
xchg
push
je
or
add
popf
mov
aam
jne
jmp
pop
cdq
push
hlt
sbb
inc
or
sbb
push
mov
lock
ds
imul
mov
retf
loopne
mov
lahf
dec
inc
icebp
inc
push
mov
push
sbb
or
sub
inc
and
or
mov
fimul
ret
mov
div
sti
push
add
xchg
pusha
nop
pop
xchg
cld
and
jge
xchg
jne
popa
test
sub
call
xchg
sbb
inc
adc
add
(bad)
inc
rol
ja
add
addr16
dec
mov
add
mov
inc
add
(bad)
mov
add
(bad)
popa
popf
xor
je
push
sbb
pop
pusha
and
xor
push
push
sti
adc
clc
pop
pop
or
cmp
div
jno
or
fcom
test
out
inc
adc
dec
add
fsubr
adc
adc
adc
or
add
gs
mov
mov
ss
pcmpeqw
call
push
or
jmp
(bad)
inc
or
xlat
push
push
xor
xor
cmps
inc
sub
and
pop
lahf
dec
call
fiadd
mov
xchg
push
push
and
xor
shr
test
les
mov
and
fimul
sbb
xchg
inc
fucom
pop
push
inc
push
daa
adc
(bad)
rcl
stos
loopne
fadd
pop
jno
daa
inc
sahf
int
in
test
xor
add
jmp
adc
dec
jmp
inc
sbb
add
sub
mov
mov
mov
fsubr
rol
add
push
cmp
(bad)
mov
jmp
xchg
or
sbb
adc
push
push
xchg
int3
dec
dec
stos
movs
push
pop
dec
fidiv
loopne
xchg
xchg
ffreep
fs
dec
push
inc
sbb
out
push
ret
fwait
rcr
xchg
or
or
xor
jb
pop
call
and
inc
sbb
push
fdivr
push
lock
cs
imul
jg
jbe
dec
mov
out
mov
cmp
je
sub
dec
clc
nop
js
adc
push
add
inc
dec
cmp
in
sbb
inc
pop
sub
pusha
dec
inc
mov
out
jmp
mov
add
and
or
es
mul
push
dec
arpl
inc
pop
pop
and
dec
ds
test
push
and
pop
je
cmp
les
add
je
xchg
push
(bad)
jnp
sub
mov
(bad)
add
xchg
mov
push
data16
sub
rcl
sbb
and
pop
inc
adc
xchg
mov
inc
retf
retf
add
mov
lods
fnsave
mov
sahf
and
xchg
(bad)
cmc
mov
ret
mov
into
ja
fbld
mov
dec
and
push
xchg
push
aaa
mov
mov
mov
or
or
jmp
and
mov
imul
lea
push
aam
push
xchg
js
push
sbb
sbb
cmp
sar
lods
inc
pop
loope
in
add
adc
enter
or
loope
gs
leave
mov
xchg
xchg
jno
mov
mov
push
fsubr
(bad)
jl
outs
shl
and
cld
fstp
lock
mov
push
mov
es
jo
add
lock
dec
dec
adc
aad
push
inc
cmps
sbb
shr
dec
sbb
push
push
pop
fstp
push
sbb
sub
(bad)
mov
or
test
lock
add
cwde
cmp
lods
movs
mov
xchg
jp
std
cs
mov
test
js
inc
mov
enter
loop
arpl
and
bnd
in
or
xor
repz
dec
inc
cmp
xor
add
xor
in
jecxz
(bad)
sub
dec
js
ret
inc
add
jmp
sbb
or
fdivp
idiv
outs
mov
jl
cmp
sub
pop
in
jne
es
sub
fwait
inc
ret
push
push
sbb
push
xor
shr
es
div
js
dec
mov
jno
xor
xor
call
(bad)
sahf
add
dec
xor
add
inc
xchg
xchg
adc
into
cmps
mov
xchg
stos
loopne
jp
mov
(bad)
mov
mov
mov
das
js
cli
jae
loop
pop
mov
adc
and
xor
cmp
push
sbb
pop
cmp
pop
sbb
xchg
push
ins
sub
cwde
cmps
aas
cmp
jb
jmp
dec
sbb
out
rcl
and
mov
mov
jp
retf
mov
loopne
sub
imul
pop
add
xchg
icebp
dec
or
add
jmp
hlt
sub
mov
inc
out
add
imul
push
push
sbb
in
or
add
xor
mov
add
xchg
pushf
sbb
icebp
add
sahf
inc
test
jmp
pop
adc
clc
gs
ret
xor
stc
and
lods
pop
mov
popf
dec
xchg
out
sbb
sbb
cmps
sub
out
add
je
add
mov
sbb
jge
loopne
lds
or
dec
pushf
in
add
mov
loop
cs
cli
xor
inc
and
sbb
pop
inc
or
mov
jae
or
jae
movs
ret
ret
mov
bound
push
cmps
js
inc
fdivr
ss
aas
lods
rcl
jmp
test
cmp
test
sub
out
dec
enter
fs
inc
mov
enter
dec
push
push
addr16
or
lods
mov
or
cmp
bound
inc
xchg
add
mov
enter
sub
xchg
push
xor
inc
es
xor
popf
xchg
jns
gs
mov
dec
jo
int3
inc
inc
cs
jo
or
std
push
(bad)
adc
iret
mov
cmp
cmp
shr
sub
push
das
sbb
ss
(bad)
mov
jno
test
inc
out
and
js
stos
mov
jmp
cmp
in
sahf
mov
int
enter
rcr
xchg
adc
icebp
dec
shl
into
push
lea
jl
mov
and
js
lock
mov
ret
sub
or
pusha
mov
mov
mov
adc
ds
call
push
adc
daa
sbb
push
xor
rcl
pop
adc
pop
arpl
(bad)
pop
nop
cmp
inc
inc
cmps
mov
into
data16
push
pop
cmp
sar
and
fldcw
loope
ret
loope
mov
fmul
loopne
ret
pop
xchg
inc
xor
pop
in
ins
and
sar
adc
outs
mov
(bad)
sar
mov
cs
lds
icebp
fstp
rol
jl
and
pop
sbb
mov
sub
fstcw
sub
jle
or
adc
inc
outs
outs
add
mov
and
or
fsubr
int
and
std
cld
int3
mov
ret
or
fmul
sub
or
retf
data16
ins
cld
adc
enter
pusha
dec
stc
or
fistp
pop
jle
jmp
iret
jb
push
sub
clc
out
or
xchg
jb
ja
test
(bad)
jb
jmp
push
sub
shl
bswap
les
out
or
in
inc
and
jae
dec
fadd
leavew
jae
cs
stc
push
push
jo
pushf
and
sbb
xor
pop
cmps
sbb
(bad)
out
fstp
pusha
ret
or
pop
jmp
movs
nop
inc
jae
or
je
and
inc
xor
pop
sbb
inc
push
fs
adc
(bad)
dec
int
je
iret
arpl
push
in
dec
mov
mov
ret
inc
sti
push
sub
jnp
sbb
cld
gs
mov
xchg
and
sbb
mov
pop
dec
clc
rcr
mov
rcr
xchg
dec
scas
(bad)
je
dec
adc
dec
mov
mov
outs
or
sbb
je
cmp
je
push
xor
mov
sahf
hlt
add
mov
(bad)
jge
cs
inc
pop
dec
fldcw
test
pop
ss
and
sub
data16
inc
jmp
das
dec
loopne
(bad)
and
add
or
push
test
cwde
jae
and
mov
mov
nop
jbe
mov
popf
xor
jle
inc
inc
mov
mov
cld
(bad)
fidivr
adc
jne
lea
in
and
pop
mov
push
in
push
push
sahf
or
and
mov
cmps
sbb
pop
mov
sbb
hlt
push
adc
mov
jne
mov
(bad)
jg
and
xor
add
movs
fmul
inc
push
jl
or
neg
ins
imul
add
push
jg
sub
add
int3
push
call
out
aad
int
sub
les
sti
test
and
and
idiv
mov
mov
xor
(bad)
mov
into
out
mov
sub
hlt
push
repz
les
push
pop
(bad)
mov
les
std
jl
xchg
jmp
icebp
icebp
and
pop
sub
shl
add
mov
js
sbb
pop
jo
xor
adc
retf
loopne
daa
nop
repnz
je
lock
cs
pusha
pushf
stos
mov
inc
ins
daa
dec
neg
outs
repnz
es
cmc
retf
cdq
sub
push
leave
and
dec
aad
shl
xor
ret
rol
or
pop
mov
push
mov
mov
ret
ret
cmp
out
call
xor
je
sub
in
mov
aad
mov
jmp
mov
mov
mov
mov
clc
or
mov
outs
jp
mov
xchg
dec
mov
cmp
dec
sub
inc
rol
jp
add
in
outs
je
push
cmps
cdq
xchg
mov
fistp
call
pop
call
movs
push
adc
das
push
sub
jp
int
adc
jae
adc
jb
adc
pop
fldenv
push
call
nop
test
push
mov
push
(bad)
fild
mov
out
ins
rol
mov
pop
jb
cld
loopne
adc
dec
scas
pop
inc
xor
jb
dec
scas
cmp
add
lock
push
jg
push
repnz
out
out
jge
jae
and
mov
mov
mov
sub
cli
jle
xchg
in
jae
clc
cs
inc
stos
dec
push
mov
mov
pop
shl
push
stos
das
sub
jmp
xchg
stos
cmp
jne
shl
add
adc
or
jmp
in
pextrw
sbb
sub
test
sbb
inc
sub
js
in
cmp
icebp
inc
fld
rol
mov
fisttp
xchg
pushf
mov
es
xor
daa
loopne
pusha
adc
jmp
nop
(bad)
in
add
les
inc
lock
mov
jo
enter
push
sub
sbb
mov
hlt
ins
jmp
add
sar
mov
push
and
(bad)
fcom
adc
pop
cmp
push
push
fistp
jmp
or
out
cmp
mov
and
mov
sahf
test
shr
icebp
inc
pop
cmp
int3
cs
repz
inc
xlat
jmp
mov
fstp
dec
adc
repnz
cmc
in
(bad)
rol
mov
fadd
push
push
loop
int
and
cmps
bound
out
shl
les
sub
jno
cmp
mov
xlat
pop
push
loopne
iret
cmc
sbb
in
mov
sub
iret
sti
cs
fdivr
jl
mov
sbb
sti
xor
repz
add
gs
(bad)
hlt
jo
stos
ror
ret
pop
nop
add
not
jno
jns
retf
div
xor
ss
lock
push
loop
push
mov
pxor
xchg
into
cwde
test
sub
cmp
adc
test
dec
fucomp
xor
into
cmps
xor
cwde
or
jecxz
inc
jbe
bound
mov
cmp
and
out
push
enter
and
jb
ror
test
ror
pop
repnz
shl
nop
push
retf
hlt
sbb
out
and
push
in
jl
cmc
out
adc
jmp
leave
lock
out
dec
mov
sub
jmp
mov
and
sar
or
push
cmp
out
sbb
in
or
add
out
inc
movs
pop
rcr
call
jge
jns
jae
push
ret
xor
shr
pop
mov
loopne
fimul
aad
iret
pop
adc
fcomp
ret
pop
bswap
pop
fcmovne
fwait
pop
jecxz
into
bndstx
pop
jmp
pop
(bad)
xchg
pop
in
fwait
loop
push
rol
and
aam
aad
ret
out
cld
inc
inc
sub
xchg
cmps
jmp
pop
adc
push
aas
sub
popf
iret
outs
dec
movs
or
push
rcl
popf
nop
and
add
shl
or
pop
sbb
jg
add
mov
mov
xlat
xchg
jmp
std
add
jmp
iret
loopne
pop
je
test
pop
int
jg
and
dec
adc
push
and
jl
push
les
retf
clc
or
retf
add
mov
cmp
jns
pop
loopne
fmul
nop
xchg
sbb
push
inc
inc
inc
sahf
sub
mov
push
repnz
add
nop
fs
scas
xor
scas
cmc
aas
push
sbb
and
dec
(bad)
adc
stos
xlat
movs
lock
pop
jo
add
add
cmps
loopne
out
or
mov
out
mov
popf
adc
push
mov
adc
inc
mov
xchg
inc
pop
js
mov
shl
and
inc
inc
(bad)
loopne
sub
add
and
mov
xchg
inc
add
push
iret
adc
push
sub
nop
mov
scas
neg
add
and
cmp
rcl
sar
add
jno
inc
(bad)
xor
or
sbb
je
(bad)
jp
dec
adc
push
clc
aam
repnz
pop
cmp
nop
test
out
out
sbb
out
inc
sti
arpl
cmp
mov
arpl
or
popa
or
sub
or
daa
push
outs
or
sub
push
(bad)
pop
xlat
arpl
push
imul
cmp
std
mov
cli
loop
xchg
xcrypt-ctr
cmps
pop
jno
xlat
addr16
pop
inc
jg
pop
(bad)
call
data16
repz
push
(bad)
xchg
mov
sub
(bad)
int
nop
(bad)
test
dec
xchg
(bad)
cmp
cmps
or
push
inc
sub
push
iret
add
pusha
dec
imul
pop
xchg
dec
adc
inc
sbb
adc
mov
sub
cmp
aad
les
inc
mov
sub
test
add
and
dec
js
sub
dec
inc
jbe
sub
sbb
int
pop
adc
sub
add
add
call
cld
lea
mov
loope
loope
push
mov
push
add
loop
jns
imul
xchg
call
cmps
ins
and
pop
hlt
outs
das
mov
ret
adc
stos
cmc
push
aam
js
inc
pop
fld
shl
aas
dec
inc
pusha
add
jmp
sar
retf
xchg
cmp
dec
and
push
or
addr16
loope
inc
inc
xchg
js
mov
repnz
mov
xor
rcr
mov
loope
aad
cmp
leave
dec
fxch
mul
popf
push
push
loop
adc
sar
mov
js
into
ja
cmp
mov
push
pop
jmp
fiadd
push
nop
jle
ror
cld
(bad)
fisubr
shl
add
les
pop
jg
out
shr
cmp
out
pop
fs
jmp
nop
out
rcl
out
test
xchg
jo
sbb
dec
and
pop
mov
aas
push
repnz
mov
jmp
inc
inc
ja
jecxz
dec
jo
dec
ja
(bad)
dec
pop
and
into
adc
popa
js
loop
leave
(bad)
adc
(bad)
or
icebp
sbb
loopne
aas
cmps
ja
pop
jno
call
xchg
pop
lock
bnd
arpl
js
mov
ins
fadd
call
cmp
xor
ret
out
pmulhw
adc
pop
sbb
cli
push
aam
pop
rcr
sub
mov
cwde
or
call
mov
cld
sbb
mov
icebp
sub
dec
shl
lods
out
sahf
push
(bad)
retf
into
and
setne
fstp
dec
ret
sub
cmps
shl
inc
push
add
aaa
mov
add
jp
mov
nop
test
rol
add
repnz
enter
and
jns
add
dec
cmc
std
push
das
jb
inc
cmc
and
or
xor
call
nop
xor
clc
and
inc
je
add
mov
loope
or
add
push
pop
(bad)
adc
rcl
rol
ror
add
inc
sub
xchg
pop
sub
sbb
dec
int
cmp
scas
pop
pushf
loopne
mov
test
sub
add
or
js
adc
lock
lea
imul
aaa
call
lock
inc
push
or
push
retf
test
jnp
mov
mov
in
je
xchg
xor
dec
dec
stos
xchg
(bad)
sbb
and
js
xchg
pop
pushf
sbb
push
add
push
pop
sbb
fsubr
adc
retf
cdq
cdq
push
add
xchg
mov
pop
test
fstp
inc
shl
sub
pop
loope
mov
(bad)
fstp
jle
and
sub
repnz
sub
ja
mov
pushf
scas
jmp
icebp
mov
in
mov
mov
adc
fadd
leave
and
mov
pop
sub
cs
int3
jmp
adc
jmp
mov
adc
xchg
rcr
lock
pop
pushf
adc
ret
jne
push
xchg
test
ja
sub
mov
ss
repz
cmp
leave
out
out
jns
cmps
push
fwait
pop
push
add
pop
mov
sub
push
xchg
cmp
lods
sub
sbb
push
sbb
sub
mov
div
or
mov
push
cdq
jmp
inc
push
push
cwde
cmp
push
aas
fsub
xor
test
lahf
adc
fldenv
clc
push
es
fadd
jne
call
test
lock
movs
push
leave
inc
enter
pop
dec
enter
jecxz
hlt
lods
dec
stc
movs
xchg
data16
cdq
shl
aad
push
fmul
cmps
int
mul
sar
inc
je
(bad)
adc
sub
push
sub
fcom
sbb
retf
mov
cmp
or
mov
ret
pusha
pop
call
pop
mov
enter
and
imul
xchg
xor
push
(bad)
dec
retf
jmp
push
clc
mov
adc
cmc
rcl
sbb
push
cmp
cmp
inc
push
push
jb
push
sar
sub
mov
and
es
xchg
jbe
stos
mov
push
or
xor
add
dec
aas
cdq
push
inc
les
test
mov
mov
pop
push
push
sub
push
test
or
add
pop
jo
push
add
mov
cdq
aas
xchg
leave
push
xchg
sbb
and
and
add
repnz
jg
stos
or
dec
(bad)
xchg
add
adc
add
test
xor
cld
inc
jne
gs
ins
cwde
(bad)
lock
push
lea
inc
sbb
cmp
pop
pusha
sbb
dec
imul
jge
daa
loopne
or
inc
sub
mov
scas
mov
pusha
inc
sub
mov
mov
add
popa
(bad)
add
push
or
jl
dec
push
sub
pop
(bad)
mov
cmp
mov
sbb
repnz
fcom
push
add
or
icebp
push
push
xor
in
pop
and
push
imul
sub
mov
or
jo
aam
pop
cli
lods
xchg
rcl
mov
pushf
loop
sub
xchg
mov
retf
je
push
and
rcl
(bad)
call
add
sbb
hlt
movs
nop
xor
push
sahf
inc
(bad)
sbb
pop
mov
sub
lahf
dec
adc
das
and
xchg
mov
and
pop
idiv
dec
sbb
daa
mov
sbb
outs
(bad)
push
paddb
jbe
fisub
clc
push
pop
sbb
sbb
in
test
into
jmp
rcl
fadd
daa
push
dec
dec
lods
nop
push
idiv
adc
repnz
leave
leave
test
movs
pushf
jne
dec
pushf
or
mov
(bad)
mov
enter
cs
cli
sahf
or
mov
outs
mov
call
imul
test
pop
xchg
add
mov
or
lock
mov
add
sub
pusha
pushf
sub
pop
xchg
les
xor
xlat
fs
push
sbb
stc
jge
test
mov
sar
push
jle
jge
int
(bad)
es
jg
push
jle
jge
sub
sbb
imul
adc
out
cmp
dec
sbb
push
imul
das
sbb
adc
ret
add
pushf
sbb
inc
xor
arpl
ret
inc
mov
int3
xor
rcr
inc
in
enter
(bad)
jg
popa
xchg
xor
cdq
inc
cmp
fcom
dec
loop
xor
adc
dec
dec
mov
and
jnp
ins
loope
cmp
pop
je
mov
dec
push
mov
or
cmp
sub
and
pop
ja
int3
inc
sbb
mov
xchg
xchg
dec
pusha
fmul
ss
dec
sbb
cmp
stos
jne
dec
pop
xchg
popa
imul
syscall
fisttp
or
dec
jle
mov
push
xchg
or
jne
mov
dec
loopne
xchg
lods
rol
enter
mov
imul
sti
add
test
add
inc
mov
push
out
icebp
and
push
push
dec
pop
call
out
pop
add
mov
outs
xchg
into
push
jge
fiadd
mov
dec
xor
outs
push
jno
mov
or
jae
adc
push
sub
push
pop
pop
mov
adc
dec
fsub
xchg
test
xor
sahf
add
cdq
adc
dec
fidiv
aam
rol
xlat
or
scas
out
lahf
mov
push
inc
pop
int
inc
inc
push
and
retf
cmp
xor
push
or
(bad)
mov
cmp
jl
cmp
jg
inc
jmp
push
mov
push
clc
ret
clc
jecxz
test
jne
ja
sti
rcr
mov
add
xor
pusha
arpl
jge
dec
sbb
fbld
cs
neg
cs
adc
cmp
or
xchg
jmp
das
jle
setno
inc
sub
addr16
add
icebp
push
loope
mov
test
adc
mov
fcomp
or
outs
sbb
cmp
je
jb
pop
loop
push
pop
movs
jl
or
jo
mov
mov
push
sub
inc
or
fiadd
or
in
sub
jmp
push
add
mov
xor
(bad)
pop
pop
pusha
mov
shl
sbb
jle
lea
stc
add
add
sbb
inc
adc
loopne
inc
xor
ret
scas
sbb
ret
sbb
test
push
inc
cmp
or
sub
cld
jle
sub
jmp
retf
(bad)
push
jnp
adc
or
cmp
pop
mov
jge
and
inc
sub
int
jg
sub
shr
add
cli
test
sub
sub
adc
lds
mov
add
mov
lea
outs
movs
jle
jns
rcr
call
add
fnstsw
adc
jg
jmp
je
and
pushf
mov
xchg
add
aas
iret
and
xchg
pop
push
xor
inc
sub
dec
loop
adc
xor
neg
sbb
in
add
ja
je
sbb
sbb
fs
or
jmp
shr
rcr
or
fcomi
sbb
adc
les
and
dec
jne
xchg
movs
xchg
sahf
jns
pop
pop
and
xchg
and
push
pop
adc
inc
fbld
jp
xor
inc
(bad)
xchg
mov
ror
je
jns
jmp
popa
outs
mov
enter
adc
sub
and
sbb
mov
popf
sbb
or
call
xchg
jmp
adc
add
push
mov
dec
push
or
stc
mov
mov
jl
lock
or
mov
push
pop
inc
cmps
test
les
push
scas
pushf
mov
mov
test
into
pop
mov
sub
add
xor
add
or
adc
mov
push
and
pop
sbb
es
jl
inc
add
pop
sub
push
jecxz
push
call
push
test
inc
inc
cmp
add
fnsave
mov
or
dec
test
xchg
add
ret
sbb
or
rcl
outs
push
out
inc
adc
inc
jmp
mov
dec
add
nop
daa
sahf
loope
loopne
cmp
inc
add
pop
mov
xor
iret
mov
rol
xchg
outs
arpl
and
rcl
pop
lock
jne
push
int
add
into
es
push
cmp
jne
add
leave
or
ror
aaa
in
je
or
sbb
call
or
repz
xor
or
xchg
xchg
hlt
sub
bound
in
inc
inc
aas
mov
add
jbe
mov
dec
jne
push
js
pop
cdq
dec
bound
jmp
sub
ret
jbe
call
scas
jmp
push
rol
sbb
push
inc
(bad)
push
and
add
ja
adc
mov
(bad)
and
fild
cld
or
push
ins
mov
adc
lea
imul
push
jle
cmp
jle
push
sahf
add
push
xchg
xor
add
enter
push
and
es
das
mov
into
sbb
or
sbb
jmp
in
and
movs
pmuludq
push
adc
(bad)
xchg
mov
pop
fwait
imul
mov
mov
dec
es
or
lahf
int
sbb
pop
sub
mov
pop
setae
and
rcl
adc
rcl
ret
or
mov
cmp
add
sbb
or
pop
sub
(bad)
mov
sub
cmp
adc
jecxz
add
and
jne
dec
and
mov
or
mov
and
add
cs
std
lock
sub
jno
pop
sub
push
push
mov
lds
xchg
cs
into
std
adc
aam
ins
xor
inc
fdiv
push
sbb
cli
out
push
or
sbb
test
out
fisttp
add
aas
jae
mov
mov
pop
add
add
pusha
ss
mov
mov
and
sub
fsub
inc
dec
div
sbb
icebp
and
add
sbb
adc
add
jmp
dec
sbb
movs
add
xchg
idiv
jmp
add
cmp
mov
loop
cmp
ja
scas
and
push
xor
jne
ficom
rcr
pop
outs
mov
mov
or
dec
xor
sbb
push
push
inc
cld
sub
or
jne
add
rsqrtps
rol
jmp
mov
sbb
add
cmp
xor
pop
or
adc
fadd
or
test
cmps
and
push
xor
jne
pop
rcr
test
jns
sbb
sub
lods
or
push
shr
es
ds
leave
mov
pop
es
pop
repnz
in
and
jnp
sub
cmps
sbb
repnz
dec
(bad)
or
xor
jbe
std
and
inc
jb
mov
push
(bad)
lock
add
sti
(bad)
sbb
mov
push
jmp
pop
test
cmp
dec
adc
movs
fld
mov
rcr
inc
ja
fs
lock
add
dec
and
pusha
adc
xchg
js
inc
es
cmp
push
rcr
and
add
jp
ret
xor
test
jno
xchg
lock
and
push
movs
out
fist
sbb
push
xchg
mov
rcl
add
jmp
and
lahf
js
adc
pop
mov
unpckhps
xchg
fsub
xor
xchg
push
jl
sub
pop
(bad)
outs
call
mov
pop
aam
pop
(bad)
adc
ror
inc
cmp
into
xchg
test
mov
mov
sub
icebp
div
jnp
cld
or
cmp
jne
mov
test
jecxz
add
loopne
or
cmc
cmp
ror
les
push
or
inc
sub
add
fnsave
adc
not
jp
pop
and
pop
lods
xchg
std
sti
or
int3
xlat
shr
jo
lods
movs
mov
stos
hlt
cmps
pop
or
push
pop
dec
(bad)
ja
outs
pop
pop
push
daa
cs
and
in
push
mov
pop
add
pop
sbb
cdq
test
push
cmp
mov
nop
add
adc
sub
and
inc
movs
inc
inc
or
lods
mov
xchg
lds
fild
adc
pop
bound
fdivr
inc
jecxz
add
dec
push
jmp
add
hlt
sbb
lds
push
inc
out
popa
inc
push
pop
movs
aaa
sar
jbe
aas
add
inc
and
das
nop
retf
leave
enter
(bad)
adc
adc
div
les
sub
das
push
dec
inc
or
push
mov
std
mov
mov
jae
sub
lea
xchg
mov
out
or
std
lock
or
xor
dec
sbb
sahf
out
adc
rol
daa
xchg
enter
stc
loop
and
int
sub
mov
movs
popa
into
sub
pop
adc
sub
pop
call
and
sub
in
leave
in
xor
mov
cmp
cs
pop
cmp
push
retf
and
inc
jb
in
pop
dec
pusha
dec
mov
xor
fs
ds
cs
add
or
xchg
pop
and
dec
fldenv
xchg
xor
lds
leave
dec
or
fcmovne
leave
leave
adc
ss
and
and
sub
daa
daa
daa
daa
xor
cmp
ins
sbb
inc
and
inc
dec
dec
dec
outs
cmovs
xchg
xchg
or
add
xchg
xchg
fs
xchg
xchg
je
jl
sub
leave
and
mov
and
dec
xor
leave
mov
xor
and
rol
or
xchg
enter
es
fs
fsub
cdq
fs
fsub
in
cdq
fs
dec
shr
lock
dec
es
clc
cld
sbb
add
or
xchg
dec
cmps
dec
or
adc
es
sbb
es
fs
and
sub
cdq
fs
dec
xor
cmp
or
inc
gs
dec
xor
and
lahf
dec
push
push
leave
and
dec
pop
pop
pusha
je
enter
xor
and
retf
inc
gs
and
enter
push
pushf
jecxz
mov
lock
add
in
inc
cmp
dec
out
cmp
xor
(bad)
and
mov
and
ror
lock
sub
mov
(bad)
sbb
dec
loop
add
or
sbb
leave
add
lock
xchg
add
adc
or
lock
movs
adc
mov
and
test
pop
or
stc
dec
jo
add
jo
test
movs
icebp
mov
loopne
ret
or
add
mov
xor
sar
movs
and
and
add
and
push
(bad)
sub
cmp
aas
and
jns
jns
idiv
adc
mov
inc
or
xor
adc
out
sub
mov
pushf
(bad)
sub
lods
mov
lea
cmp
mov
popf
cmp
inc
std
js
mov
cmp
xor
sub
push
xchg
scas
shl
enter
imul
cmp
xchg
xchg
out
cmp
clc
push
shl
push
stos
cmp
or
cmp
add
lods
popf
or
nop
cmp
pop
out
sbb
pop
popf
lods
jg
cs
dec
jne
fs
outs
(bad)
xor
lea
rep
in
call
mov
out
sub
rcr
jbe
fild
inc
(bad)
mov
push
xor
in
push
mov
nop
xchg
mov
rol
cmp
test
mov
add
mov
sbb
imul
js
mov
dec
push
das
pusha
fcomp
push
sub
nop
mov
push
aam
ins
push
mov
xchg
aaa
daa
jl
nop
movs
ror
pop
sbb
cmp
jne
call
mov
ins
dec
ret
jge
je
push
cmps
sub
sbb
add
pop
push
sbb
jmp
mov
mov
dec
in
dec
in
push
call
lds
lock
shr
mov
add
add
inc
lahf
adc
jb
add
and
jne
adc
sahf
jmp
call
gs
ja
or
push
xor
mov
or
mov
retf
mov
test
inc
fdiv
dec
push
adc
or
shl
add
pop
dec
push
dec
inc
call
add
cwde
push
int3
lds
loop
dec
shr
sbb
add
adc
jmp
mov
push
pop
push
mov
add
inc
inc
cld
inc
repz
sub
mov
mov
inc
test
lock
test
jne
addr16
push
(bad)
mov
loope
retf
ret
fwait
or
mov
and
cmp
adc
sub
inc
(bad)
dec
movs
(bad)
or
bound
aas
pushw
imul
xchg
cmps
sub
enter
and
sbb
push
sbb
popa
iret
in
push
inc
out
xchg
fdivr
jb
mov
int
push
jbe
sbb
mov
enter
xchg
fisttp
mov
jae
movs
ror
xor
pop
mov
inc
xchg
xchg
das
dec
xchg
jnp
sbb
sbb
es
enter
in
push
jnp
inc
cmp
fld
loopne
daa
jg
(bad)
sub
xor
sbb
xchg
repnz
xlat
xor
add
sub
inc
and
ror
popf
sbb
xchg
push
add
loope
and
push
or
and
in
or
loope
shl
inc
jge
and
push
jmp
or
ss
jno
jmp
adc
adc
popa
pop
clc
sub
inc
sbb
mov
loope
mov
sahf
cmc
std
jo
add
js
add
or
out
inc
cmp
sub
(bad)
lods
add
cmp
in
push
ins
dec
jb
and
or
jo
mov
mov
adc
add
xchg
or
xor
mov
jecxz
jecxz
test
push
ret
or
cmp
pop
data16
inc
cld
lock
outs
sbb
les
sbb
fmul
sub
adc
stos
adc
adc
inc
in
fild
idiv
jmp
add
js
jo
cmc
sub
outs
loopne
sbb
push
mov
add
ret
inc
je
pop
adc
xchg
adc
sub
call
mov
adc
iret
push
or
xor
xor
mov
test
pop
call
pop
je
and
inc
cs
or
inc
ja
push
ds
inc
(bad)
mov
mov
arpl
push
fcmove
outs
jmp
pop
cmps
fadd
push
xchg
jb
add
test
mov
xor
add
jle
sub
sub
add
add
add
push
mov
lea
call
(bad)
xor
push
sub
retf
enter
loop
adc
dec
enter
and
cmp
mov
push
ins
bound
inc
add
stos
jle
hlt
or
xchg
adc
popa
(bad)
add
int
call
mov
inc
sub
loope
dec
movs
sahf
aaa
sbb
cld
fs
pop
movs
pop
mov
mov
rcl
jle
dec
jl
les
inc
sub
xor
iret
mov
push
movs
jo
or
jne
pop
test
add
add
not
pop
jmp
add
sti
(bad)
(bad)
jl
fidiv
jge
mov
pop
and
mov
mov
std
es
pop
xchg
loopne
sub
test
jmp
push
and
loopne
call
enter
aad
and
jae
ins
mov
mov
js
add
mov
cmp
pop
lock
outs
pop
jge
mov
push
mov
add
and
mov
sub
stos
jle
ret
jle
loopne
mov
mov
mov
and
push
push
or
add
sbb
test
lock
mov
jo
mov
push
ret
movs
mov
add
sub
xor
dec
rol
(bad)
jbe
iret
loopne
mov
bound
pop
js
(bad)
mov
mov
nop
and
ds
or
xchg
mov
loopne
fidivr
les
jne
xlat
push
add
rcr
add
out
push
adc
or
inc
(bad)
lock
mov
cli
mov
push
mov
test
inc
test
mov
pushf
aam
repnz
lds
cmp
retf
add
jmp
jbe
ss
in
push
xchg
movs
and
inc
adc
dec
pop
sbb
out
or
test
and
cmp
pop
xchg
jae
sub
mov
fld
push
inc
push
aam
jno
mov
retf
and
mov
add
push
sub
pop
pusha
cmp
retf
not
in
add
loope
call
cmp
into
and
loopne
pop
test
inc
dec
pop
jl
add
mov
std
sbb
dec
rcl
icebp
sub
jmp
in
adc
mov
add
and
mov
and
push
dec
cmps
inc
mov
fsubr
js
pop
xor
sub
or
adc
addr16
lods
sti
jbe
xchg
add
add
daa
and
call
or
inc
inc
xchg
dec
cld
xchg
repz
push
ret
mov
nop
pop
xchg
inc
sub
adc
sbb
dec
dec
cwde
call
(bad)
cmp
mov
add
out
and
push
xchg
and
sar
je
pop
fisub
xchg
aaa
icebp
fadd
(bad)
add
(bad)
repz
push
cmp
or
add
in
nop
sbb
xchg
pushf
mov
jb
movs
cmp
and
xor
or
cwde
and
add
and
add
add
cwde
xor
push
mov
jge
adc
adc
cmp
(bad)
cmp
xchg
aam
xchg
dec
xor
add
popa
fadd
xlat
push
repz
add
fidiv
add
jbe
ret
idiv
add
or
add
sub
int3
jle
and
or
mov
mov
das
inc
and
inc
adc
mov
sub
adc
(bad)
adc
and
mov
lock
pop
xor
loopne
mov
pop
or
out
mov
push
jb
fadd
inc
mov
xor
nop
rcl
int3
hlt
loopne
dec
add
pushf
sub
iret
add
lea
or
xor
or
inc
jmp
cwde
cmp
mov
ja
mov
pop
add
daa
lea
xchg
xor
dec
inc
fadd
loopne
jp
test
sti
ds
inc
jle
add
dec
add
ss
shr
movs
push
xchg
jne
je
fwait
and
mov
pop
adc
(bad)
add
dec
cmp
pusha
fdivp
(bad)
div
shl
pushf
fs
(bad)
nop
push
inc
push
cmp
(bad)
mov
cld
or
pop
mov
add
push
je
push
push
mov
int
int3
data16
popa
add
out
retf
pop
or
je
data16
test
pop
inc
icebp
sbb
sti
lds
inc
je
dec
inc
mov
xor
lock
add
je
pop
inc
cmp
and
sub
sbb
mov
cmps
movs
and
add
lock
inc
jmp
jmp
imul
push
cmp
ja
jp
test
cmp
add
push
sbb
je
data16
and
sbb
lea
shl
and
xor
mov
pop
add
inc
inc
into
mov
jmp
cwde
test
sub
inc
push
cld
mov
cmp
xchg
dec
and
add
mov
pop
imul
mov
sbb
std
out
sub
cmp
loope
add
mov
xor
xchg
lock
dec
mov
test
movs
push
lods
push
add
pop
ret
daa
xchg
inc
mul
gs
ret
cmp
loop
in
leave
inc
scas
inc
jmp
loopne
loope
inc
adc
fs
xor
inc
add
add
aaa
enter
mov
mov
es
cmp
shl
push
fs
adc
dec
xor
mov
jle
xchg
mov
mov
push
add
outs
and
cmps
movsx
ins
sahf
mov
aam
mov
fadd
add
pop
retf
test
sub
add
dec
jg
scas
sbb
test
aaa
fcomp
pop
or
ss
fisub
std
or
or
sbb
out
mov
xchg
hlt
je
xor
push
xchg
cmp
or
rcr
inc
or
rol
adc
pop
add
cmp
js
inc
aam
lock
mov
inc
push
or
sar
mov
fsubr
dec
clc
fcom
inc
cld
sbb
js
jg
mov
cmps
add
or
or
push
ins
inc
adc
pop
mov
dec
cmp
cmp
fdivr
push
mov
sub
cs
adc
mov
pop
jl
xor
scas
dec
test
call
adc
push
push
outs
jbe
inc
inc
dec
inc
push
or
cmp
xchg
xor
inc
dec
pop
rcl
test
push
inc
clc
jmp
mov
pop
add
cmps
push
sti
out
dec
dec
repnz
push
push
xor
cwde
sahf
sahf
ja
sbb
rol
bound
xchg
adc
add
or
inc
mov
push
sbb
xor
push
sbb
adc
push
dec
test
push
retf
adc
cmp
adc
dec
xor
rol
push
arpl
jnp
lea
push
jle
rcl
hlt
dec
lock
and
sbb
add
pusha
mul
push
inc
out
ret
push
int
lds
les
jmp
icebp
out
add
sbb
les
dec
adc
pusha
icebp
jns
neg
dec
int3
pop
mov
or
idiv
add
sbb
pop
push
add
cmc
push
and
repnz
xor
push
ss
and
dec
dec
jl
test
imul
add
adc
adc
pop
mov
in
clc
jp
mov
pop
pop
loope
pusha
mov
je
pop
shr
or
jmp
(bad)
call
popa
imul
cmps
in
xor
ds
mov
inc
dec
xor
cmp
mov
mov
adc
bound
sub
push
retf
in
push
inc
in
or
push
adc
jb
dec
movs
cdq
arpl
sub
repnz
sbb
pop
jnp
adc
pushf
and
cmp
inc
(bad)
clc
popa
cmp
xor
sub
lock
test
push
dec
pop
xchg
fcom
inc
jmp
lock
sub
addr16
arpl
pop
cmp
aaa
or
xlat
push
mov
adc
push
sbb
out
adc
pop
dec
and
out
cmp
imul
mov
ret
jmp
push
gs
js
mov
or
mov
mov
xor
jae
je
(bad)
push
adc
jno
jne
push
inc
pop
jo
rol
push
xor
test
rcl
fs
pop
ins
rol
xor
arpl
bound
lea
pushf
add
shl
and
mov
jne
push
outs
cmp
dec
mov
pop
icebp
cld
jl
cmp
es
push
std
xor
stc
mov
pop
rcr
add
jmp
das
test
dec
stc
push
jns
push
test
scas
xor
add
bnd
jne
scas
fisttp
xchg
std
aaa
add
sub
mov
inc
jb
jmp
cmp
je
cmp
mov
add
and
dec
cmp
cli
std
pop
mov
mov
dec
mov
inc
inc
mov
popa
cmc
fiadd
pop
sbb
fwait
inc
jge
inc
push
and
push
sar
movs
mov
add
dec
ror
inc
cld
retf
movs
in
xor
jmp
xor
(bad)
repnz
or
int
movs
stos
mov
and
stos
mov
sub
jmp
inc
aad
les
inc
xor
pop
pop
mov
xlat
or
inc
scas
push
mov
adc
ds
pop
cmp
push
out
fcomp
mov
pop
mov
add
and
sbb
cmps
add
test
xor
push
outs
adc
fs
pop
add
test
ins
pop
pop
rol
std
adc
sub
jmp
add
sbb
inc
aam
dec
add
push
inc
imul
lea
push
inc
or
adc
sbb
js
or
call
and
shl
push
adc
xor
pop
hlt
fwait
rcl
movs
mov
(bad)
pusha
retf
daa
jmp
xchg
fdivr
cmp
imul
push
ins
cwde
loopne
pop
fnstenv
pop
mov
sbb
gs
sti
ret
jne
shr
or
push
sbb
shr
adc
dec
in
out
mov
pop
pushf
je
cmp
jne
dec
adc
mov
popf
xchg
clc
cmp
arpl
and
popf
pop
mov
shl
cs
push
push
int3
lea
mov
add
and
fadd
push
cmps
cdq
or
and
sub
push
pop
dec
mov
adc
mov
mov
rcl
adc
jmp
call
out
pop
push
xchg
sub
or
test
rol
je
sbb
(bad)
push
lods
rcr
sub
jecxz
pop
mov
jae
jb
sub
jne
or
jge
rol
inc
jne
jle
pop
int
push
dec
icebp
push
pop
cmp
in
jno
test
or
dec
inc
adc
scas
xor
pop
adc
frndint
shl
sbb
inc
or
mov
stos
sub
mov
rol
pop
and
dec
or
pop
clc
je
add
ret
nop
xor
arpl
ins
fadd
or
jecxz
dec
mov
jmp
or
loop
push
pop
int
dec
retf
jae
cmp
call
ss
sbb
cmps
add
(bad)
mov
je
inc
jp
mov
jg
push
ror
pop
mov
loope
inc
push
dec
je
xor
cmp
addr16
fst
(bad)
dec
dec
fidiv
or
pop
pop
xchg
and
mov
push
sar
and
ss
push
ss
cmp
ins
mov
(bad)
sbb
or
xchg
or
je
or
retf
and
xchg
or
inc
cmp
aaa
shl
ror
sub
enter
aam
shl
or
mov
loopne
outs
je
sub
or
daa
int3
sub
leave
push
mov
je
js
repz
sahf
mov
sub
cli
and
xchg
sub
mov
aam
or
adc
pop
out
(bad)
jns
add
and
pop
fcmovnb
jo
jne
and
das
and
in
imul
adc
xor
sbb
sar
into
ret
adc
hlt
(bad)
jg
je
fiadd
je
or
fwait
sub
jns
js
bnd
dec
sti
cmps
inc
xchg
add
cmp
push
add
sahf
out
pop
and
push
mov
add
jo
mov
or
mov
aad
push
cmps
add
mov
xor
ins
test
ss
cli
add
retf
sbb
mov
inc
or
and
push
push
outs
adc
or
add
out
or
lods
sub
push
adc
adc
jne
mov
outs
adc
cs
and
add
cdq
add
or
or
xchg
jge
mov
push
jno
popf
cmps
pop
hlt
clc
dec
dec
sbb
add
add
in
mov
and
in
xor
add
push
add
jae
jg
or
jne
mov
xor
push
ret
add
jns
sbb
and
inc
jns
out
rcl
jl
mov
in
enter
cmp
xchg
inc
mov
jne
aaa
jne
mov
call
add
dec
call
add
sbb
and
mov
clc
sub
outs
and
mov
pop
js
(bad)
push
ret
sub
mov
rol
aaa
push
enter
mov
add
fild
movs
dec
sbb
dec
ficom
and
sbb
adc
push
pop
pop
dec
xor
dec
jg
fadd
jne
jb
aam
xchg
out
push
mov
pop
rol
daa
lods
jmp
sbb
lock
mov
adc
or
jecxz
xchg
dec
outs
sar
jmp
inc
inc
and
jle
sub
add
add
test
pop
or
sbb
lods
add
pop
jp
add
or
push
add
add
ret
test
test
lea
lds
nop
sub
frstor
rcr
fcom
ins
mov
fs
add
icebp
setp
or
xor
push
push
mov
out
push
shl
jmp
sbb
loope
scas
in
test
cwde
mov
je
cld
mov
outs
cmp
mov
leave
or
adc
pop
pop
jne
cmp
pop
sub
(bad)
(bad)
fidivr
xchg
or
sbb
pop
mov
mov
or
loopne
lahf
je
xchg
jne
adc
xor
jge
movsx
sub
sbb
cmc
jmp
enter
push
or
jns
rol
add
in
std
push
push
jb
pop
mov
fadd
lock
jg
mov
and
pusha
cmc
retf
shl
std
push
mov
xor
mov
xchg
mov
xchg
adc
rol
int
pop
or
mov
cmp
push
rol
rol
test
retf
pop
pop
and
jmp
aad
and
mov
cmp
cmps
mov
xlat
xlat
mov
push
dec
xchg
cmps
aaa
and
ror
sar
dec
lea
push
fcomp
scas
and
stos
dec
pop
outs
imul
add
mov
mov
sbb
adc
dec
adc
jns
adc
push
adc
dec
cld
add
add
push
sub
and
mov
push
xchg
jle
pop
sub
ret
push
push
jg
xchg
leave
xchg
push
lea
lods
and
inc
test
push
inc
fcomp
or
cmp
mov
or
sub
mov
movs
sbb
imul
or
adc
and
mov
cld
jge
xchg
xor
mov
cmp
xor
cs
or
push
pop
jo
push
sahf
mov
push
mov
cmp
or
mov
dec
rol
scas
mov
mov
push
push
push
jmp
hlt
rcl
scas
mov
fdivr
cmp
pop
and
arpl
and
leave
je
push
mov
inc
pusha
mov
aam
pop
mov
lods
cmp
jo
push
inc
inc
sbb
cmp
ret
or
jne
push
test
call
sbb
rol
adc
test
add
mov
push
dec
enter
push
and
mov
dec
add
add
mov
xchg
pop
xor
jne
push
sahf
pop
and
fimul
xchg
sar
add
adc
dec
mov
xchg
or
pop
push
and
cmp
dec
jb
xor
ja
push
adc
(bad)
cmc
mov
fstp
or
loopne
stc
xor
cmp
mul
push
je
repz
pop
pop
push
retf
inc
push
leave
push
add
jno
mov
out
xor
rcl
fld1
mov
jmp
fcom
loope
shr
dec
and
pop
dec
inc
ret
je
test
inc
cmp
(bad)
pop
xchg
shl
je
and
push
inc
inc
je
mov
sub
mov
retf
lock
mov
cmovb
jne
cmp
loopne
rol
mov
pop
mov
cli
jbe
inc
clc
push
ret
lods
dec
daa
mov
add
jmp
and
shl
sbb
in
imul
add
inc
call
mov
pop
cld
pop
push
shufps
pop
jp
cmp
add
in
sbb
adc
mov
ins
or
push
add
adc
cmp
sbb
aas
inc
sbb
xchg
push
sbb
inc
sbb
pop
mov
inc
dec
sub
jmp
fcmovb
add
jl
sbb
dec
cmp
je
or
cmp
in
inc
add
or
mov
les
fdivr
cmps
and
popf
(bad)
jge
fadd
mov
cmp
push
dec
and
test
fwait
inc
jo
sbb
fmul
add
add
adc
add
test
clc
test
cmp
push
mov
test
cmp
inc
jb
or
jnp
cmp
and
mov
add
js
sub
adc
cmp
popa
out
mov
or
hlt
adc
aaa
mov
mov
inc
dec
dec
(bad)
call
jg
rcr
shl
and
sub
pop
js
pop
dec
add
push
xchg
movs
les
mov
xchg
mov
mov
and
inc
jo
or
ror
mov
mov
es
xor
add
stos
(bad)
fs
mov
jns
clc
mov
fdiv
ss
or
mov
or
jmp
lahf
jns
stos
add
push
jl
sar
and
pop
sub
test
test
lea
mov
movs
movs
xor
(bad)
fdiv
ror
mov
nop
dec
xchg
and
sbb
or
icebp
lds
test
push
push
lea
leave
push
push
aam
inc
movs
sub
xor
pop
push
sbb
adc
mov
lds
adc
jge
and
pop
pop
adc
clc
mov
sbb
or
and
div
shl
loopne
lock
je
or
xor
jns
daa
sbb
sbb
dec
or
ins
add
xchg
dec
sub
inc
and
dec
fadd
push
ret
loope
mov
dec
inc
inc
(bad)
dec
(bad)
dec
fsubr
ret
and
pop
(bad)
(bad)
add
add
out
adc
call
retf
add
inc
mov
inc
jmp
es
movs
mov
or
push
push
sub
push
sub
rcl
adc
mov
mov
cmp
cmps
push
shr
call
movs
add
add
jp
xor
pop
mov
push
and
push
out
fwait
out
adc
inc
jne
cmp
sar
neg
mov
jae
push
lock
movs
movs
inc
stc
shr
and
add
sbb
inc
sub
xsaveopt
inc
cmp
rol
ror
cmc
adc
fisubr
push
or
enter
jbe
jb
add
mov
pop
or
fadd
ret
loop
int
fidivr
adc
xor
dec
daa
mov
jmp
xor
push
or
pop
rcr
inc
cmp
das
and
cmp
jbe
mov
jp
push
imul
or
jnp
outs
add
les
pop
ret
loope
xchg
inc
push
add
add
cmp
in
pop
mov
pusha
loop
mov
cmps
(bad)
push
jns
add
imul
inc
inc
add
les
(bad)
loopne
imul
inc
push
xchg
push
or
out
out
out
xchg
mov
mov
push
inc
mov
push
inc
push
xchg
sub
rcl
xor
sbb
cmp
(bad)
sar
ret
fst
mov
xchg
add
push
lods
fisttp
jmp
wrmsr
(bad)
push
mov
jno
lea
daa
retf
mov
and
adc
jb
mov
shr
push
mov
sub
hlt
rcr
adc
jg
neg
jmp
sub
mov
or
lock
xchg
lock
(bad)
dec
ins
jmp
xchg
jl
mov
std
push
leave
adc
push
adc
inc
jmp
rol
loop
inc
test
enter
mul
inc
test
and
xor
ss
lea
ins
and
imul
jge
jmp
mov
out
or
bound
sbb
dec
mov
js
(bad)
test
ss
push
cs
leave
mov
fadd
adc
movs
arpl
sar
mov
bound
add
pop
out
and
(bad)
mov
shl
outs
jmp
pop
pushf
retf
add
mov
jbe
pop
shr
push
out
or
jp
ss
imul
cmc
mov
push
sar
and
adc
lahf
xor
ins
mov
or
and
adc
or
fdiv
movs
mov
out
or
inc
push
or
test
ss
push
outs
or
je
or
jmp
out
inc
(bad)
jnp
add
push
cwd
lea
cmp
ja
sbb
mov
pop
cmp
jnp
fld
add
inc
call
or
xchg
stos
pop
stc
push
xchg
jmp
xchg
jmp
pushf
scas
jbe
mov
mov
sbb
int3
int
call
je
stos
std
jbe
mov
jle
sub
push
add
(bad)
jo
mov
dec
push
pop
cld
mov
xchg
scas
outs
xlat
out
mov
sub
mov
gs
adc
cdq
adc
ins
jecxz
aam
repnz
xor
mov
inc
sub
in
jb
xlat
cmp
dec
repz
sub
je
fild
sub
and
xlat
add
mov
imul
je
xor
cmp
std
adc
in
jb
iret
or
adc
sti
inc
jle
or
out
cmp
loop
dec
(bad)
pushf
cwde
ret
xor
or
(bad)
(bad)
rcl
pop
pop
loop
sub
addr16
es
lahf
pop
mov
sti
sar
(bad)
inc
(bad)
iret
je
fwait
stc
retf
mov
popf
loopne
shl
xor
push
ins
and
push
imul
stos
leave
mov
xor
mov
and
dec
add
mov
mov
sbb
mov
mov
mov
or
jo
jmp
mov
ret
jmp
aaa
sub
test
(bad)
rol
lock
ret
or
jmp
push
and
mov
or
repz
mov
jl
xchg
test
sub
dec
jle
xchg
pop
dec
cmp
jae
int
push
mov
movs
add
xchg
out
dec
test
sbb
(bad)
sub
adc
cld
and
add
aad
lea
jmp
xchg
into
cwde
(bad)
repnz
dec
gs
mov
adc
and
sahf
sub
mov
xchg
(bad)
fidivr
add
je
mov
and
and
and
mov
ins
sub
lea
adc
and
xor
aas
adc
les
jns
imul
and
inc
jb
jns
nop
cwde
mov
enter
test
dec
push
sbb
jl
pop
mov
jge
mov
nop
mov
movs
inc
xchg
or
and
mov
or
(bad)
xor
inc
or
mov
add
repnz
mov
mov
inc
jo
pushf
jge
pop
add
mov
inc
xchg
in
mov
sub
(bad)
fnstsw
iret
mov
arpl
mov
iret
jnp
int
gs
pop
push
push
es
xor
xchg
in
jo
push
sbb
mov
push
loope
pop
mov
lock
nop
mov
shl
sahf
mov
lods
addr16
das
push
mov
movs
or
mov
test
cmp
sbb
addr16
jge
adc
adc
repz
inc
mov
and
lahf
sub
xor
jae
loope
add
or
mov
mov
bound
mov
push
cmp
cmp
sbb
dec
mov
inc
clc
mov
sub
cmp
mov
jmp
pop
and
mov
mov
mov
mov
add
mov
or
imul
add
sbb
in
mov
aam
jmp
xchg
loop
bound
inc
and
fst
sbb
xor
mov
int3
out
mov
cmp
je
scas
test
je
cmps
mov
imul
call
jl
sar
push
mov
arpl
inc
(bad)
cmp
add
(bad)
(bad)
(bad)
xor
inc
or
and
mov
sub
add
std
and
cmp
inc
jecxz
dec
in
adc
into
ins
cmc
jge
iret
nop
popa
idiv
or
pop
shl
push
push
xchg
ja
pop
aaa
sbb
nop
add
ins
ret
jno
push
or
or
push
retf
ret
jmp
aaa
mov
mov
xor
adc
jmp
add
inc
lea
pop
sbb
jl
cmp
add
shl
inc
push
lea
stos
or
into
mov
jbe
pop
(bad)
add
inc
jne
mov
test
jb
mov
jl
div
mov
push
pop
sbb
add
or
cmp
xor
add
test
je
cmps
add
loop
shl
enter
dec
fiadd
(bad)
add
jecxz
sbb
test
cld
xor
xchg
lock
jno
call
jl
mov
push
fwait
and
shl
or
inc
test
call
cdq
jmp
into
mov
or
hlt
frstor
mov
jmp
xor
xchg
test
je
test
test
fld
mov
mov
mov
shl
bnd
jns
test
cmp
dec
cli
inc
repnz
push
inc
cli
test
sar
jae
repnz
adc
dec
hlt
mov
xchg
and
jmp
movs
pushf
call
push
mov
xchg
mov
inc
cld
jne
sbb
test
aas
mov
adc
sahf
sahf
inc
mov
inc
mov
stc
mov
jge
mov
(bad)
and
(bad)
(bad)
xor
int
clc
pop
test
push
call
xchg
xor
mov
in
jno
call
dec
fdiv
sahf
loopne
add
or
aam
hlt
add
jle
(bad)
sub
sub
cmp
xchg
call
mov
inc
cwde
xchg
inc
xchg
pushf
cwde
cli
std
cwde
mov
test
pop
adc
jbe
xchg
push
mov
push
inc
inc
dec
push
mov
jb
sbb
(bad)
mov
mov
data16
mov
add
arpl
pop
and
fucomi
push
pop
xchg
ret
jne
shl
aam
les
dec
lock
enter
loop
pop
pop
mov
lods
push
lods
movs
or
push
cli
jecxz
mov
idiv
(bad)
jl
je
data16
cdq
aaa
dec
inc
pop
lahf
xor
test
adc
push
mov
jmp
or
cs
and
aam
push
and
sbb
xchg
mov
retf
or
ins
jo
imul
add
pop
xchg
mov
and
and
jne
lods
sub
push
dec
nop
inc
adc
shl
pop
push
xchg
das
ins
mov
jno
add
or
mov
clc
sbb
add
pop
mov
int3
adc
adc
push
or
pushf
mov
and
pop
mov
call
pop
int
inc
(bad)
shr
xor
jne
cmp
mov
xor
aaa
neg
sbb
iret
pushf
mov
cs
xchg
pop
ja
xlat
jmp
loope
inc
add
add
movs
cmp
mov
test
sub
cmp
cmp
mov
movs
je
or
pop
sbb
mov
cld
xor
movs
(bad)
retf
mov
les
icebp
jb
jp
push
dec
mov
adc
xor
or
xchg
hlt
in
outs
pop
add
mov
(bad)
enter
sbb
mov
add
call
loop
adc
mov
jecxz
in
lock
cmps
stos
movd
or
dec
xchg
sub
jl
inc
scas
or
dec
add
mov
mov
(bad)
xor
cmp
mov
dec
jg
mov
add
push
push
(bad)
nop
nop
sub
adc
(bad)
jmp
movsx
mov
je
js
das
and
outs
test
jp
icebp
sbb
pop
xor
aam
loopne
dec
sub
or
shl
imul
or
xor
repz
mov
add
daa
sub
add
inc
ja
imul
mov
mov
mov
add
sbb
xlat
je
cmp
mov
sub
jo
movs
lock
push
push
add
retf
xchg
pop
mov
sahf
sbb
ret
pop
sar
or
adc
push
cli
or
dec
cmp
and
add
lods
test
add
push
scas
jl
leave
or
add
out
add
push
or
or
cmps
(bad)
cmp
mov
movs
lods
repnz
loopne
(bad)
cli
dec
push
adc
jo
adc
into
iret
jge
out
cmp
jne
and
cmc
cmps
lock
jbe
adc
(bad)
sub
out
iret
cwde
fs
(bad)
call
test
push
push
xor
push
pop
lods
lods
clc
fldcw
mov
mov
xor
and
into
into
(bad)
imul
or
daa
aaa
cmp
retf
je
push
jno
cmp
bnd
or
jns
and
leave
into
into
jnp
cmps
out
sbb
jae
mov
cli
scas
loopne
hlt
rcr
pop
in
sar
jecxz
add
mov
out
test
xor
cmc
lods
jle
jl
jmp
add
jb
pop
ror
leave
leave
fimul
mov
pop
mov
sub
mov
pop
sub
jl
jp
mov
out
jge
shl
cmp
fidiv
push
jae
les
sub
or
pop
add
xchg
mov
xlat
xlat
clc
adc
sbb
pop
xor
or
test
in
jecxz
pop
aad
jo
mov
dec
fcmovnb
or
add
add
add
add
and
aad
push
sub
int3
inc
and
cmp
cmp
or
data16
jne
mov
aad
sub
mov
or
mov
sub
xchg
(bad)
push
mov
popa
xchg
push
outs
pop
push
jp
jmp
or
rcl
sbb
inc
adc
mov
inc
add
jne
jnp
cmp
adc
jp
cli
and
dec
js
mov
ins
and
and
cmp
fistp
dec
icebp
out
rcl
rcr
(bad)
dec
cmc
lahf
add
mov
lock
push
adc
mov
cmp
ret
or
(bad)
jo
outs
or
pop
dec
jae
jmp
mov
and
fmul
popa
add
daa
mov
jns
mov
mov
inc
jbe
adc
cmp
repnz
jae
rol
scas
xchg
dec
lock
popa
pop
iret
sub
push
sub
adc
xchg
pop
enter
call
loope
inc
pop
cmp
xchg
pushf
push
mov
add
fs
fadd
or
stos
pop
adc
clc
dec
pop
push
add
lods
ret
push
cmp
pop
adc
push
ss
mov
cmp
pop
xchg
dec
mov
jne
add
dec
dec
sub
pusha
add
xor
jge
js
and
pop
sub
ret
lock
stc
movhps
dec
cmp
or
inc
add
push
push
lea
mov
push
(bad)
fild
repz
ja
xlat
adc
jnp
jo
mov
add
or
out
dec
in
fcomp
ins
add
adc
sub
push
call
push
rol
cmp
je
inc
pusha
icebp
(bad)
icebp
sar
jge
(bad)
add
jmp
pusha
add
or
cmp
jns
cmp
stos
lahf
movs
sub
push
push
jbe
or
jne
pop
sub
dec
and
push
push
adc
jmp
push
add
inc
aaa
or
dec
xchg
xor
mov
outs
inc
adc
fcmove
mov
push
(bad)
jge
push
in
push
adc
jge
push
push
push
sub
and
jge
aad
inc
add
jge
stos
jl
and
sbb
xchg
sub
push
rcr
xchg
adc
movs
pop
push
rcl
or
add
int3
mov
fisubr
nop
adc
je
sub
call
fbld
loopne
cmp
je
in
dec
add
std
pop
add
ror
add
shl
mov
out
add
pop
cmps
fcomp
lahf
fcom
aaa
cmp
gs
jl
push
add
or
lahf
cmps
pushf
pop
jmp
push
mov
movs
add
mov
push
loope
fsubr
jecxz
sub
cmp
sbb
push
adc
in
leave
movs
adc
add
in
or
inc
inc
call
movs
adc
mov
sbb
sbb
sub
or
fdivr
add
gs
call
mov
cmp
inc
add
lock
call
call
ja
jnp
add
jne
fs
retf
push
adc
mov
les
lock
in
xor
in
icebp
and
mov
xor
xor
cmp
push
sub
and
sub
jmp
jmp
jne
mov
or
test
jo
add
mov
add
sub
loope
int3
leave
mov
pop
push
or
enter
jb
jmp
sub
mov
xor
sub
xor
pop
(bad)
xor
fwait
fwait
rcl
ror
add
inc
mov
pop
sbb
cmp
in
jecxz
and
rol
xchg
jo
sub
ins
cwde
and
xor
add
es
push
add
jmp
mov
pusha
shr
lock
push
push
stos
in
into
add
in
jb
mov
(bad)
inc
ret
or
mov
sar
and
shl
sub
or
rol
cmp
shl
jg
lock
cld
jle
xor
add
jbe
jmp
add
ror
ror
mov
retf
je
pop
jmp
sub
or
push
push
cwde
add
mov
mov
xor
mov
outs
push
jmp
iret
or
fdiv
(bad)
jo
xor
mov
and
xor
shr
ins
out
les
fmul
add
ret
pushf
cmp
test
cmp
jb
je
div
cmp
call
iret
jmp
fs
jnp
or
js
std
cld
xor
or
hlt
sbb
pop
dec
jne
mov
push
cwde
cli
inc
mov
mov
mov
(bad)
pop
mov
or
dec
(bad)
mov
jb
mov
cmp
adc
push
shr
pop
jmp
retf
loopne
pop
add
ror
pop
mov
pop
retf
test
or
ffreep
or
dec
xchg
mov
pop
cli
xor
cdq
pop
das
fist
dec
into
dec
loop
push
push
test
pop
push
mov
push
sti
add
xchg
mov
add
pop
add
int
cli
add
iret
and
jbe
repnz
mov
mov
stos
xor
push
not
adc
(bad)
jbe
inc
pushw
jge
add
jae
inc
(bad)
or
icebp
cmp
cmp
xor
cmp
frstor
push
rcr
not
cmp
outs
push
jmp
ss
out
sub
mov
adc
pop
add
ss
dec
or
loop
inc
cmp
icebp
je
dec
mov
dec
jp
dec
add
int3
cmp
popf
or
inc
aaa
mov
pop
ret
xchg
sub
jge
stos
out
add
sbb
lahf
in
pusha
dec
cmp
xchg
pop
and
push
sub
mov
mov
and
call
ret
pop
xor
inc
imul
js
cmp
sub
add
add
mov
fimul
int3
and
dec
xor
je
shl
rep
sahf
add
and
xchg
pop
not
(bad)
in
in
mov
and
shr
mov
sub
inc
fs
dec
arpl
mov
mov
bound
(bad)
in
test
pop
sbb
adc
xor
adc
push
or
cmp
inc
and
dec
pusha
or
mov
inc
push
mov
pop
loop
rol
cmp
jl
adc
ficomp
jl
mov
and
and
fistp
jle
fadd
in
rcl
and
push
pop
mov
xor
and
cmp
jle
jo
or
cmp
add
xor
test
ins
push
push
shr
adc
repz
adc
push
inc
xchg
adc
inc
push
adc
pusha
in
aam
adc
dec
jmp
cmp
sbb
jge
inc
sub
add
lea
add
mov
int
add
adc
and
pop
out
jmp
inc
call
dec
adc
jg
les
cmps
or
pop
cmp
dec
mov
fld
sbb
and
sub
out
jmp
jns
(bad)
test
js
sbb
pop
dec
inc
dec
sbb
mov
and
dec
cmp
test
push
pop
xor
arpl
daa
cdq
iret
push
adc
jno
add
and
or
repnz
or
cmp
ds
and
cdq
scas
(bad)
enter
add
mov
jmp
or
mov
repnz
inc
jne
xchg
sub
iret
jecxz
xor
mov
add
out
cwde
pop
xchg
xor
adc
sub
push
daa
or
and
pop
pop
loopne
ret
push
stos
lea
adc
or
dec
mov
fsubr
pop
adc
lods
inc
add
add
loopne
mov
dec
inc
or
aas
add
jnp
clts
or
mov
popa
jge
call
outs
push
call
popa
loop
pop
sub
or
adc
add
lods
iret
mov
sbb
adc
dec
pop
xor
push
adc
popa
xchg
fimul
enter
clc
pop
mov
leave
sub
xchg
mov
pop
jmp
out
push
and
and
mov
xor
xchg
or
fsub
retf
dec
xor
cmp
repz
pop
xchg
inc
dec
adc
add
pop
add
push
hlt
mov
movs
mov
push
(bad)
int
push
(bad)
or
or
test
popa
jecxz
cmp
inc
(bad)
bound
push
in
sbb
push
mov
sbb
jge
inc
pushf
jnp
std
and
cdq
mov
(bad)
or
addr16
mov
sti
mov
inc
not
or
test
xor
pop
lea
push
push
adc
jnp
and
(bad)
dec
mov
repnz
mov
sbb
inc
pop
in
clc
nop
push
cmp
jo
push
stos
or
ror
mov
loope
pushf
push
dec
mov
into
not
test
push
cmp
(bad)
adc
mov
sbb
mov
pop
push
xor
fisttp
out
sbb
adc
push
dec
(bad)
int
xor
mov
clc
and
or
scas
jl
push
add
or
in
aad
ret
cli
xchg
inc
aam
dec
stc
ins
sbb
pop
enter
ret
xor
cmps
and
mov
ret
ret
sub
ret
adc
test
cmp
inc
retf
test
retf
aam
adc
add
mov
sbb
push
repnz
xchg
lds
add
mov
jecxz
xor
addr16
sub
inc
and
loopne
imul
jl
imul
jg
dec
jp
add
test
je
push
push
dec
add
test
push
sbb
xchg
outs
rcr
adc
push
xor
lds
mov
mov
mov
popa
jecxz
or
sub
sbb
fiadd
or
sub
out
popf
ror
sbb
sub
popa
add
inc
or
dec
sub
inc
neg
arpl
iret
push
loop
adc
loopne
sbb
dec
(bad)
adc
sbb
je
in
pop
jnp
push
inc
mov
js
jb
daa
fneni(8087
rcr
data16
fisttp
es
cwde
inc
sbb
mov
mov
stc
ror
pop
add
sbb
or
lods
mov
pusha
loop
xchg
dec
cmp
cmp
sbb
mov
and
shr
clc
js
pop
add
inc
and
pop
adc
add
inc
clc
arpl
jge
sub
aam
dec
jbe
xor
cmp
sbb
and
loopne
mov
mov
sbb
and
(bad)
adc
icebp
cmp
sbb
cmp
and
fmul
cmp
movsx
xor
inc
inc
pop
push
sub
imul
xor
dec
and
imul
(bad)
call
push
jg
je
push
or
pop
push
inc
out
ins
mov
mov
loop
adc
inc
or
push
push
cwde
or
or
sbb
gs
stos
lds
ret
sub
ret
adc
ja
mov
and
sbb
cmp
push
ds
dec
xor
push
std
fsub
call
push
cmps
or
sbb
pop
leave
data16
lods
adc
cmp
dec
fst
or
sub
adc
pop
push
push
movs
push
and
out
or
pmullw
fsub
xchg
test
xchg
push
pop
fcomp
push
in
in
hlt
sub
sar
cmp
mov
std
or
adc
mov
popa
mov
push
push
add
leave
ret
fsubr
dec
cdq
adc
xor
mov
and
cmp
mov
test
or
push
pusha
hlt
aam
push
ficom
inc
ret
lds
jne
cmp
loopne
dec
push
sar
scas
mov
fldlg2
movs
stc
push
retf
sbb
push
pop
dec
out
cs
add
cmp
lds
fist
fadd
repz
pop
inc
lods
push
xor
or
jbe
dec
push
fmul
add
std
push
dec
loop
and
push
lods
fsubp
cmp
sar
xlat
push
daa
add
lock
mov
pop
test
dec
lods
sub
pop
sbb
pop
or
push
jl
jl
sbb
cwde
adc
sbb
call
push
lods
push
mov
sbb
dec
jne
and
sti
popf
sbb
pop
push
dec
shl
jl
push
loopne
invd
pusha
es
cmp
ss
dec
xchg
rcr
cli
sbb
adc
xadd
or
scas
mov
adc
pop
pop
ja
mov
rcr
lods
retf
add
and
fucomp
ficom
and
inc
add
loopne
js
mov
cmp
shl
push
and
retf
jmp
outs
jno
push
pop
push
sub
rol
js
mov
mov
retf
jle
(bad)
xor
mov
shr
clc
sbb
jl
ss
cmp
or
or
(bad)
dec
cmp
sub
and
push
shl
add
sahf
or
xor
ss
dec
fsubr
ret
xlat
stc
loopne
ret
inc
mov
xchg
loope
jo
dec
sbb
aas
lock
repnz
mov
xchg
or
push
aad
movs
lods
cli
mov
push
adc
sar
cs
adc
push
(bad)
or
lds
into
mov
arpl
(bad)
fcom
xchg
inc
les
test
jl
sub
adc
jns
mov
xor
pop
xchg
dec
mov
fistp
lahf
adc
inc
dec
sbb
xchg
cs
or
xchg
sub
jne
in
push
bnd
(bad)
add
push
mov
push
xor
push
dec
jb
and
pop
lock
mov
mov
jbe
popa
pop
mov
push
ja
push
dec
push
daa
sub
jl
pop
call
and
in
or
rcl
int3
js
mov
ror
jo
adc
into
jb
sub
fcom
ds
cld
xlat
mov
add
add
add
lock
add
push
adc
pop
sbb
inc
sub
mov
jmp
inc
sub
hlt
inc
ss
retf
dec
mov
mov
push
adc
mov
sub
lea
movs
push
xor
cmp
add
loopne
(bad)
mov
icebp
cmps
dec
add
in
(bad)
lahf
lock
xor
ret
fild
ret
add
push
fwait
les
retf
add
jmp
into
add
dec
push
call
lock
add
fmul
mov
jge
mov
fadd
add
movs
lods
jb
and
jmp
xchg
and
lods
mov
scas
add
into
push
shl
aaa
(bad)
sbb
mov
mov
ins
(bad)
test
aaa
lea
push
xor
dec
add
add
lea
hlt
cmp
ror
push
es
xchg
enter
js
add
pusha
jmp
cdq
or
scas
int3
or
mov
mov
or
test
sbb
popf
push
sbb
dec
add
fwait
por
push
repnz
lock
mov
dec
mov
sti
sbb
fwait
mov
and
push
stos
pusha
sub
or
jmp
inc
adc
add
aam
(bad)
not
pop
or
cwde
js
pop
scas
jge
fnstcw
add
iret
or
test
mov
lea
xor
out
push
shl
push
mov
mov
je
inc
shl
arpl
cmc
mov
fwait
push
movs
adc
test
ret
lock
jmp
jl
xchg
inc
jo
mov
mov
jmp
push
mov
mov
inc
ds
arpl
jb
lea
ins
dec
rol
cs
ins
sahf
rcl
xor
mov
or
xor
in
pop
mov
data16
inc
push
mov
test
xor
mov
push
arpl
inc
mov
(bad)
test
mov
mov
fcomp
and
clc
or
(bad)
into
or
mov
(bad)
sub
xchg
stc
xor
push
jo
inc
add
fwait
cs
dec
and
ror
add
es
push
add
ss
imul
iret
rol
pop
ret
rol
inc
push
dec
add
shl
fimul
jecxz
xchg
outs
and
mov
es
cs
sub
inc
xchg
call
fist
ror
and
xlat
and
mov
cmp
push
test
jbe
push
adc
shl
lahf
lock
iret
add
hlt
push
push
push
cdq
in
inc
fdivrp
(bad)
pushf
aaa
das
sbb
out
adc
sub
sti
scas
rcr
jno
pop
jne
hlt
cmps
or
je
sti
xor
pop
add
pop
fnstcw
(bad)
ins
(bad)
push
outs
or
fist
sti
push
hlt
mov
push
sbb
mov
inc
(bad)
adc
test
ins
jae
enter
xor
loope
shr
mov
or
pop
fcomp
pop
div
movs
hlt
pop
outs
sti
push
mov
out
pop
mov
les
fisttp
push
push
movs
icebp
pop
nop
and
rcr
lods
mov
out
sbb
push
in
add
mov
in
dec
adc
aaa
mov
adc
jbe
and
bound
and
sar
outs
dec
inc
push
cwde
jmp
sbb
xor
cwde
arpl
dec
arpl
pop
xor
in
adc
rcr
ja
cmp
pop
xchg
cdq
cmps
shl
(bad)
cmp
dec
enter
and
popf
xchg
data16
or
push
cmc
lock
or
pop
add
gs
ret
add
arpl
add
repnz
pop
cmp
inc
inc
xchg
push
mov
adc
cld
sub
popa
adc
pop
sbb
sub
inc
jo
inc
rcl
js
cmp
mov
cmp
adc
mov
(bad)
sbb
or
xchg
mov
dec
fpatan
das
inc
inc
and
and
inc
adc
sub
xchg
cmp
out
out
add
sbb
dec
and
repz
shl
pop
jl
xchg
shl
sub
or
test
cmps
mov
adc
(bad)
push
or
ficom
adc
cmp
xor
cs
mov
pop
pop
jmp
mov
int3
inc
loope
xchg
dec
sub
sti
repnz
jo
inc
fucomp
or
cmp
pop
or
dec
or
cwde
stos
js
push
or
movs
loope
cmps
(bad)
dec
adc
cld
mov
mov
ret
sub
sub
sbb
pop
or
mov
pop
icebp
ins
leave
xor
ret
pop
pusha
ror
mov
pop
ja
lea
dec
or
into
sar
push
mov
jle
ins
add
lods
add
jo
pop
mov
shl
mov
mov
add
les
mov
nop
jp
lea
js
dec
inc
out
lock
push
push
ja
fiadd
scas
les
inc
push
ds
xchg
push
aaa
jb
ins
ficom
cmps
test
jo
inc
mov
sbb
push
fld
push
jno
push
test
xchg
push
push
daa
aaa
arpl
push
and
pop
pcmpeqb
xchg
xchg
es
xchg
xchg
dec
pop
ret
inc
mov
nop
rol
cmc
mov
pop
add
fisttp
push
xchg
add
jge
repz
adc
push
lsl
out
and
jbe
add
push
mov
aam
xor
push
and
imul
movs
loopne
pop
pop
and
add
push
or
in
in
add
sbb
daa
push
add
test
mov
pop
jo
push
leave
cmovo
ret
call
or
enter
movs
add
mov
jmp
lods
adc
mov
and
enter
test
or
pop
adc
and
push
(bad)
add
jno
cmp
cmp
xlat
inc
add
xlat
xor
adc
xchg
xor
shr
pop
xor
inc
gs
stos
xor
sbb
lods
fisttp
sub
push
aas
cmps
ja
aad
jl
add
in
enter
or
mov
cmp
test
(bad)
add
cmps
cmp
sbb
sub
sbb
ret
mov
jne
(bad)
lock
xor
adc
icebp
xchg
or
and
fldcw
cmp
inc
arpl
out
or
dec
fstp
sub
clc
lock
add
out
xchg
or
dec
mov
pop
sbb
or
add
fiadd
adc
pop
add
in
popa
jns
and
adc
push
add
fwait
shl
mov
jl
xchg
aam
push
push
mov
add
fadd
pop
push
js
push
mov
sub
cmp
ds
popa
and
pop
add
sub
fcomp
push
in
xor
ja
sub
gs
or
push
pusha
ss
pop
out
mov
cmp
fidiv
inc
dec
add
xor
cmp
sub
pop
fisttp
sub
int3
popa
popa
inc
cld
fsubr
mov
pusha
aad
sub
jmp
fs
add
jl
pop
rol
adc
xchg
push
xchg
inc
jo
sbb
ret
icebp
cmc
(bad)
imul
push
jmp
ficomp
push
adc
mov
push
dec
test
loop
mov
rol
popa
pop
lods
and
cld
test
out
adc
cmp
lock
mov
popa
cmp
repnz
aam
dec
jecxz
push
shr
sub
xchg
xor
test
jb
or
push
ja
pop
mov
aas
xchg
movs
ret
shr
push
jmp
mov
cmp
push
adc
push
mov
xchg
adc
mov
scas
and
add
adc
cwde
push
out
fsub
mov
adc
pop
mov
jl
ja
dec
sbb
cmp
or
jns
rcl
mov
add
mov
jp
push
add
pop
inc
es
lock
mov
pop
pop
and
mov
inc
loopne
xchg
sub
adc
and
sbb
adc
mov
in
sub
dec
adc
dec
mov
hlt
cmp
int3
inc
adc
push
arpl
mov
clc
pop
pop
cmp
pop
push
dec
mov
add
enter
sub
sbb
pop
test
dec
push
add
inc
test
scas
test
iret
push
mov
adc
div
inc
in
imul
adc
(bad)
cmp
int
adc
mov
mov
test
add
sub
push
push
add
sbb
popfw
sub
push
pop
xor
sub
fcomp
rcl
mov
and
xchg
push
mov
retf
or
add
add
jecxz
mov
dec
add
fsub
jnp
push
leave
sbb
dec
inc
arpl
jp
add
je
mov
lahf
sbb
push
sub
shl
int3
sub
fsub
xchg
retf
sbb
add
dec
xor
sub
jo
pop
sbb
or
cmp
push
rcl
out
adc
xor
xor
add
sub
rcl
sbb
sub
cmp
pop
xchg
xor
add
mov
push
dec
ror
and
outs
in
pop
mov
(bad)
push
push
cmp
mov
cmp
sbb
inc
mov
fsqrt
jl
test
and
and
mov
sub
pusha
xor
pop
jae
loope
sbb
clc
imul
nop
lods
mov
ret
test
mov
imul
ja
in
ins
push
cmp
cdq
pop
dec
cmc
sbb
pusha
pop
int3
dec
jnp
xor
xor
fs
out
jns
pop
cmp
fwait
adc
(bad)
shl
xor
and
inc
sbb
adc
pop
ret
or
sar
add
mov
rol
jne
adc
jns
lds
shr
ret
cmps
(bad)
(bad)
sub
xor
sbb
pop
xor
pushf
cmp
mov
inc
mov
sar
cdq
pop
add
xor
cmp
pop
xchg
and
inc
(bad)
rol
fnstenv
sbb
call
inc
das
inc
sbb
clc
dec
mov
aad
pop
or
cmp
ret
fcmovb
das
add
sub
das
lock
add
push
pop
cli
and
scas
sub
and
outs
jl
retf
icebp
mov
les
or
mov
in
add
dec
ret
ds
(bad)
adc
(bad)
movs
popa
fs
adc
pushf
clc
or
push
fsubr
add
fld
jg
pop
or
jge
and
jae
popa
outs
in
sub
add
push
mov
pop
movs
push
push
push
mov
ins
mov
aaa
(bad)
mov
loope
or
clc
pop
cld
addr16
sub
ins
sbb
push
call
mov
pusha
(bad)
jge
push
push
mov
push
std
push
or
cmp
push
sbb
shl
push
daa
shr
dec
dec
push
lods
sbb
cdq
daa
add
or
movs
or
add
mov
mov
leave
popa
xchg
inc
cs
es
daa
adc
cld
shl
out
cmp
adc
das
outs
loop
hlt
xchg
out
je
pop
cmps
add
test
mov
into
in
pop
push
push
or
mov
pop
adc
push
adc
nop
enter
sub
add
or
hlt
mov
jnp
jl
xchg
push
xchg
int3
mov
pop
popa
jge
add
daa
fimul
dec
dec
call
rcl
cmp
cmc
shl
lock
int
imul
clc
ror
or
mov
mov
pop
fstp
xchg
daa
test
xor
push
push
pop
sti
mov
inc
jne
inc
nop
jle
or
js
cdq
add
xchg
xor
je
xor
mov
aam
inc
pop
fwait
and
fild
psubw
and
adc
clc
sub
test
add
jno
pop
sahf
jnp
sub
pop
enter
scas
cmps
xor
je
dec
outs
jecxz
dec
call
je
push
xor
pop
fnstsw
popf
popf
fsubr
and
in
inc
sub
inc
sub
xor
mov
and
mov
call
inc
or
bound
in
and
pop
jne
push
mov
or
aas
mov
or
mov
or
pop
je
fs
push
inc
mov
or
lahf
sbb
inc
add
scas
sar
stc
addr16
(bad)
rol
jb
fmul
pop
xchg
sbb
ds
enter
pusha
jge
mov
mov
mov
aam
add
popa
or
inc
sbb
inc
or
es
int
push
scas
mov
dec
adc
ss
adc
or
mov
adc
stos
mov
sub
call
jge
in
xor
rcl
sahf
outs
mov
mov
xor
push
push
and
cmp
xchg
call
adc
(bad)
mov
xchg
popa
xchg
push
push
fmul
pop
adc
jnp
das
nop
mov
jmp
push
inc
dec
pop
jle
mov
pop
push
and
cmps
xor
dec
jo
jne
xchg
sbb
sbb
test
push
and
sar
jne
cld
and
sub
pop
sysenter
ret
ret
rol
mov
les
sub
pop
mov
clc
add
test
mov
adc
or
or
or
or
sub
xor
(bad)
push
pop
push
hlt
mov
pop
sbb
inc
mov
adc
sbb
mov
xchg
or
mov
stc
pop
sub
or
add
xor
push
adc
in
pop
call
push
fwait
or
stos
xor
pop
pop
dec
mov
fist
xor
or
sub
call
add
and
push
pop
sbb
psubsw
outs
cmp
push
push
push
sbb
mov
jbe
sub
bound
and
xor
call
repz
add
add
dec
jmp
and
icebp
je
dec
pop
push
add
sbb
push
fimul
rcr
aaa
mov
test
pop
adc
cmp
ja
mov
dec
gs
stos
or
add
cmp
jno
cmp
sub
and
iret
ja
push
push
add
mov
mov
mov
icebp
ds
sbb
jae
fwait
pusha
fcomp
imul
or
sbb
nop
add
cmp
xor
jge
mov
inc
and
sbb
cmp
cmp
push
sbb
add
xchg
imul
ds
xchg
addr16
adc
lock
adc
cmp
pop
adc
shl
xor
out
aad
sub
or
mov
ja
fwait
adc
jge
push
mov
pushf
mov
pop
ret
jnp
es
xor
pop
mov
outs
jns
and
sub
mov
sti
scas
pop
jb
lea
call
into
add
repnz
mov
push
or
or
enter
dec
xor
mov
adc
lods
xor
inc
pop
pop
adc
dec
nop
aas
frstor
cmp
inc
das
cmp
xchg
push
sbb
pop
ret
popf
pop
pop
push
or
inc
mov
mov
or
(bad)
adc
data16
les
push
adc
or
add
cs
cmp
mov
adc
test
xchg
dec
pop
cmp
hlt
adc
add
mov
mov
test
mov
jmp
test
dec
inc
mov
push
ror
addr16
or
sahf
mov
fsub
add
dec
imul
mov
pushf
mov
and
cld
loope
adc
and
cmp
pop
ja
push
cli
mov
repnz
xor
mov
repnz
mov
pop
loopne
in
adc
mov
sub
lods
dec
mov
sbb
push
push
or
push
fldcw
pop
enter
add
push
sbb
iret
call
or
in
pop
sbb
push
ror
add
ds
dec
add
ret
xchg
or
sbb
stos
add
call
adc
push
push
xor
icebp
cld
cmp
out
cs
popa
pusha
fwait
mov
sbb
cli
or
push
xor
jo
pop
cmp
mov
sbb
and
pusha
add
repz
push
mov
fs
push
idiv
(bad)
mov
mov
push
pop
push
and
mov
jmp
(bad)
add
ss
mov
xchg
arpl
sub
xchg
in
or
inc
adc
lods
or
neg
and
and
loopne
mov
pop
mov
lock
mov
mov
xchg
and
add
or
jno
pop
inc
mov
add
dec
cmp
push
int
lahf
or
add
popa
sub
pop
lahf
inc
sbb
test
and
xchg
mov
test
add
dec
jo
or
mov
mov
dec
not
scas
fldcw
je
sbb
retf
push
(bad)
mov
jmp
loop
dec
adc
bound
cmp
inc
js
pushf
xchg
sub
aas
xchg
div
sbb
mov
fist
mov
adc
rcl
mov
imul
xchg
push
repz
pop
mov
cmp
or
jbe
ja
xchg
fwait
leave
sub
int3
fild
cdq
outs
(bad)
fadd
inc
adc
jno
mov
je
add
jns
pop
out
jge
and
dec
stos
dec
dec
cwde
sbb
je
and
jae
pop
xor
js
adc
add
dec
fist
and
mov
mov
rol
bound
sbb
adc
pop
ss
add
or
jo
inc
and
shr
push
push
cmp
or
cmp
push
fild
jnp
cmps
xchg
add
enter
leave
jns
loopne
add
and
mov
daa
sar
mov
add
call
test
dec
add
dec
push
lods
add
cmp
cs
cmp
ror
xchg
mov
mov
jnp
cmp
rol
or
loope
sbb
out
jns
or
int
fs
mov
clc
xor
adc
mov
retf
imul
mov
aad
movs
sbb
sbb
or
and
xor
cwde
jno
mov
add
and
popa
jg
push
test
mov
test
in
jge
pop
mov
cmp
test
push
pop
inc
js
ja
xor
cdq
add
(bad)
aas
fdiv
sbb
fld
mov
mov
stos
rcl
sbb
add
in
jmp
push
mul
xor
inc
dec
jne
pop
mov
xor
das
inc
mov
sbb
adc
jae
adc
test
jne
in
xchg
test
cmp
adc
daa
mov
sar
sbb
adc
inc
rcl
cmp
ss
outs
cwde
cmp
daa
pushf
xor
mov
cmp
addr16
jnp
sub
jmp
call
mov
push
push
or
shl
inc
mov
or
push
xor
loop
push
ja
dec
jl
ret
iret
lds
lods
xchg
je
pop
jae
mov
jae
mov
pop
shl
push
lahf
push
add
cld
cmp
jne
lea
dec
push
call
ret
lds
push
xchg
sub
jmp
aad
ret
fstp
and
push
or
xor
xor
movs
and
mov
repnz
mov
fnstenv
lds
in
sbb
imul
(bad)
or
cmp
test
pop
add
add
mov
aam
xchg
and
pop
add
sub
shl
sbb
cmp
hlt
xor
mov
jmp
sub
cwde
dec
mov
int3
imul
bound
mov
icebp
add
jmp
sub
add
push
push
adc
int
fdivr
test
push
(bad)
nop
dec
fisub
sub
test
mov
and
pop
cmp
sti
sbb
jmp
aaa
or
adc
or
sub
inc
push
lahf
jno
cmp
sbb
dec
inc
and
sbb
push
retf
cmp
jns
ret
sbb
jmp
imul
and
add
movs
pushf
daa
push
imul
jle
ficomp
test
push
sub
push
inc
shr
pop
movs
test
adc
mov
sbb
jne
push
test
dec
inc
sub
test
aam
sbb
sbb
sbb
or
cmp
or
push
inc
(bad)
and
das
movs
or
jl
stos
ins
loop
dec
and
data16
jmp
imul
cwde
js
xor
jne
jge
movs
in
and
inc
adc
dec
fsub
mov
jmp
and
jg
ret
sbb
pop
sub
cmp
pop
cmp
sbb
inc
ds
jne
dec
mov
loop
jge
je
loop
cmp
pushf
adc
or
xor
adc
xchg
das
jmp
pop
sub
adc
adc
fdiv
add
mov
inc
js
pushf
add
pop
loopne
call
retf
jbe
inc
mov
mov
sbb
mov
popa
mov
addr16
sub
sub
xchg
xor
sub
sub
jmp
xor
ins
inc
pushf
add
sub
cs
push
or
rol
add
cmp
ja
mov
xchg
ds
jno
inc
cmps
push
in
cmp
retf
mov
push
loop
loope
add
mov
or
rcl
div
sub
repnz
xor
inc
mov
das
lock
cmp
(bad)
in
fst
add
xchg
inc
ins
add
les
loopne
push
jo
adc
and
sbb
mov
xor
adc
mov
cmc
mov
dec
jp
ror
outs
add
push
or
push
sub
add
sub
cmp
add
pop
inc
ins
pop
dec
retf
dec
adc
xor
add
adc
or
into
addr16
aaa
or
xchg
jne
out
call
add
(bad)
dec
sub
add
sbb
leave
push
fs
popa
inc
jo
mov
mov
add
cmp
xor
xor
mov
pop
inc
ror
cmp
sti
adc
jp
or
ins
mov
mov
mov
ins
inc
inc
adc
or
mov
jns
in
mov
cmp
xor
fs
ins
popf
test
and
sub
push
in
data16
or
sub
mov
aaa
fnstcw
sets
fcomp
retf
fcom
xchg
mov
xchg
(bad)
or
out
sub
mov
mov
sub
mov
add
or
jae
(bad)
aas
cmp
adc
sbb
xor
pop
(bad)
or
push
fadd
mov
mov
movs
test
inc
clc
rcl
test
inc
sbb
push
ins
mov
mov
mov
jns
mov
(bad)
retf
movs
lods
jnp
sbb
idiv
sbb
loopne
sub
inc
dec
jo
push
mov
jmp
sub
pop
retf
pusha
sbb
or
daa
in
and
mov
mov
pop
imul
inc
or
popf
push
jmp
sti
ss
dec
or
nop
dec
shr
cs
and
lea
scas
add
push
jg
mov
adc
aam
add
rol
fs
push
xor
push
push
mov
mov
adc
icebp
and
test
mov
mov
pop
pop
jb
clc
inc
and
push
dec
or
cdq
fiadd
cmp
adc
jl
sub
or
or
or
push
call
adc
cmp
sahf
inc
call
inc
mov
scas
sbb
(bad)
push
movs
mov
nop
push
and
mov
add
std
push
bound
sbb
jno
dec
mov
xor
data16
xchg
(bad)
mov
or
ins
pop
addr16
inc
popa
or
es
out
jae
jecxz
ins
dec
(bad)
movs
sti
cmp
mov
pop
xor
push
mov
sub
add
les
sbb
cmp
xor
add
inc
jne
cmps
add
shr
or
je
push
inc
and
sbb
dec
sbb
fstp
adc
hlt
mov
adc
mov
enter
xchg
(bad)
and
inc
daa
daa
test
mov
fmul
inc
add
pop
push
inc
xchg
pusha
add
or
rcr
pop
push
xor
inc
fwait
mov
dec
(bad)
nop
test
mov
ror
jl
mov
xchg
add
push
or
dec
cmps
pop
and
and
out
xlat
gs
sbb
xor
jg
add
fistp
in
cmp
xor
adc
jne
or
inc
fdiv
xchg
push
sbb
mov
(bad)
sbb
push
(bad)
push
add
jne
ss
daa
dec
cld
pop
dec
retf
frstor
repnz
and
and
repnz
out
push
adc
add
shr
pushf
into
(bad)
cld
sbb
xchg
mov
and
lea
ins
shr
or
xor
mov
sub
or
outs
push
sub
xor
xchg
ss
xor
and
sub
sbb
sub
rcl
ds
pop
cmc
mov
push
sahf
sbb
loop
jmp
aam
loop
stos
add
pop
mov
cmp
clc
ret
dec
jne
dec
ret
push
push
dec
pop
or
inc
xchg
sti
jb
or
pop
popa
or
push
adc
outs
in
call
pop
sbb
rol
inc
(bad)
xor
lock
jae
fimul
sub
popf
test
add
push
jecxz
xor
adc
jp
add
xor
cmps
enter
retf
iret
mov
mov
retf
dec
aad
mov
pop
pop
stos
pop
fimul
adc
dec
cmps
sub
jge
je
add
add
scas
jb
rcl
inc
loopne
pop
pop
push
shl
sar
mov
and
call
fld
jl
ins
mov
loope
pop
in
push
pop
cmp
dec
or
inc
js
pop
scas
adc
aas
movs
daa
cmc
int
cmp
in
sub
aaa
cmp
adc
mov
jmp
or
pop
cmps
mov
ret
add
add
push
pop
sbb
inc
je
or
and
sub
test
fidivr
jecxz
sub
or
es
test
je
nop
add
and
cmp
fsubr
or
jecxz
push
mov
mov
mov
add
xor
fild
retf
jmp
sbb
dec
mul
jmp
dec
or
pop
dec
aaa
jmp
xchg
leave
shr
icebp
sbb
pop
mov
adc
or
inc
test
adc
lods
jae
push
jmp
and
movs
xor
leave
int3
in
add
pop
lds
shr
pushf
inc
mov
inc
inc
shr
mov
mov
fnsave
add
jl
dec
push
add
mov
loop
pop
cs
dec
mov
adc
mov
shl
adc
add
xchg
stos
inc
xor
dec
or
call
nop
push
dec
and
lea
ja
in
mov
jne
xor
(bad)
call
stos
dec
or
pop
movs
jmp
push
cmp
jne
pop
fldcw
jo
xor
imul
ins
rep
dec
or
cld
popa
das
add
cmp
ror
and
movs
pop
push
sub
mov
push
cli
adc
mov
jne
lea
xchg
add
cmps
(bad)
ins
inc
push
and
and
push
aad
fldenv
push
retf
jo
adc
fstp
cmp
pop
jg
pop
loopne
push
test
dec
loop
adc
dec
jmp
pop
sbb
xor
adc
push
mov
ins
pusha
push
retf
add
and
dec
and
mov
sub
pop
lock
or
push
je
pop
sbb
pop
ins
cmp
or
sbb
mov
test
inc
sbb
ror
shr
and
fstp
cld
push
xchg
popf
(bad)
and
ds
adc
test
or
daa
(bad)
imul
inc
(bad)
arpl
add
lahf
or
xchg
cmps
into
arpl
xchg
push
fimul
sub
sub
(bad)
jbe
sub
push
jbe
push
pop
arpl
push
sub
xor
pop
jecxz
xchg
and
cld
push
and
test
ins
push
sub
imul
push
adc
lds
(bad)
rcr
or
cmp
ficomp
adc
seto
lahf
sub
rol
ja
mov
or
test
xchg
xchg
mov
mov
dec
push
rol
pop
or
and
mov
je
out
pop
xor
loope
out
idiv
xchg
les
pop
test
sub
in
or
retf
stc
cmp
dec
mov
mov
sbb
cmp
jnp
add
sbb
xor
or
mov
aam
fs
and
add
and
and
inc
sbb
rcl
and
or
add
mov
enter
fwait
jmp
lock
adc
rol
repnz
jmp
(bad)
xchg
add
xchg
cmp
hlt
add
add
fistp
add
push
ror
add
xor
jb
xor
jle
sbb
xor
add
lock
int
inc
and
(bad)
stc
jle
stc
dec
es
inc
push
mov
xor
lock
cmp
sub
mov
scas
push
mov
sub
sub
pop
mov
jo
sub
test
and
cwde
or
push
loope
pushf
lea
adc
cmps
ins
retf
test
gs
pop
fxch
fxtract
pop
cmps
mov
imul
loop
repnz
sub
lock
or
stos
or
dec
adc
in
pop
sub
push
nop
xchg
cmc
sub
jecxz
in
je
(bad)
push
rcr
jmp
inc
fnstsw
pop
xor
ror
or
mov
push
outs
mov
dec
mov
mov
stos
in
clc
aam
in
add
add
fcom
enter
add
sti
xor
loopne
les
push
adc
mov
push
inc
sub
mov
jne
add
xchg
and
add
lock
jecxz
(bad)
cmps
ds
aam
fistp
sub
or
je
sub
dec
int
push
jle
lock
outs
retf
mov
fcom
or
out
aam
stc
(bad)
sub
adc
aas
cmp
sbb
mov
jmp
sbb
rol
adc
outs
pop
clc
rcl
push
ror
add
in
fdivr
mov
inc
mov
call
inc
fistp
sbb
js
pop
push
inc
add
push
push
jecxz
out
mov
dec
jp
mov
xchg
jmp
push
popf
xor
jb
and
mov
rcr
call
xor
or
dec
in
mov
icebp
rcr
dec
add
sbb
pop
movd
ret
and
test
cdq
adc
(bad)
mov
lds
hlt
xor
clc
shl
inc
add
cmp
cmp
jle
xchg
push
(bad)
sbb
test
add
sbb
popa
inc
sbb
js
or
cmp
add
jl
sbb
or
and
inc
push
push
mov
mov
pop
adc
push
cs
imul
jmp
jle
js
cmp
call
xor
aam
lock
mov
cmp
mov
ret
and
cmp
push
inc
mov
scas
outs
fadd
(bad)
adc
pop
movs
inc
aad
dec
mov
fdivr
ds
ror
sub
cs
outs
loopne
stc
out
sbb
lods
or
or
stc
sbb
xor
xor
nop
jecxz
(bad)
adc
outs
pusha
stc
adc
mov
push
in
icebp
cmp
jne
push
add
pop
sub
add
adc
out
xchg
xchg
sbb
clc
aam
or
and
sbb
sti
mov
and
js
loopne
lock
lock
shl
pop
add
or
xchg
mul
add
(bad)
dec
(bad)
inc
xchg
xor
inc
or
adc
mov
adc
rol
mov
mov
or
inc
sub
dec
or
out
scas
add
inc
and
dec
cmp
jb
mov
sbb
daa
clc
stos
cmp
adc
psrad
pop
sbb
icebp
sub
je
pop
stc
push
sbb
adc
ins
mov
xor
(bad)
xor
push
xchg
cmp
and
fwait
cmp
pushf
sbb
push
pop
cmp
dec
shrd
jmp
and
cwde
cmp
mov
loope
dec
push
inc
mov
dec
cmp
fnstenv
cmps
cmp
adc
mov
sub
sub
adc
inc
pop
add
jb
pop
(bad)
mov
adc
push
cmp
push
jp
inc
sti
pop
sub
fimul
je
mov
call
mov
and
mov
add
in
pop
mov
scas
cwde
lahf
sbb
or
mov
lods
xchg
mov
jmp
les
push
jbe
les
or
adc
pop
aad
jecxz
lock
(bad)
ins
arpl
inc
outs
adc
clc
adc
es
imul
sbb
mov
xor
pop
sbb
sub
push
lock
jmp
mov
test
test
xchg
push
add
into
ror
js
sbb
imul
mov
or
and
inc
idiv
sub
inc
xor
sbb
stos
push
aad
cmp
adc
inc
inc
ins
dec
ret
jns
add
sub
sahf
pop
add
jl
js
mov
add
lea
or
mov
xor
mov
loop
pop
in
jbe
clc
gs
sub
fwait
push
out
jb
out
push
ror
vpaddq
jmp
loopne
sub
nop
pop
sub
icebp
jno
shr
jmp
sub
and
out
fist
clc
sbb
adc
and
add
jno
aaa
sbb
adc
push
js
mov
cli
cdq
inc
loope
adc
push
dec
inc
pop
cdq
loope
inc
retf
loopne
or
(bad)
mov
ins
adc
cmp
mov
(bad)
cs
add
ins
and
xor
dec
int
rol
push
daa
mov
call
mov
out
add
inc
jmp
mov
clc
shl
pop
sbb
cmp
inc
sub
inc
lods
dec
loope
jb
ss
inc
adc
add
je
in
cmp
push
nop
rcr
hlt
fst
std
sbb
mov
add
cdq
and
mov
shl
in
dec
xchg
pop
fdivrp
mov
push
fs
sub
and
sub
xor
test
or
mov
inc
inc
inc
jbe
push
into
pop
jle
mov
inc
ins
dec
(bad)
outs
cdq
jo
and
jo
adc
mov
jbe
cdq
mov
sbb
sbb
lods
mov
cmp
sub
adc
jns
or
inc
push
cmp
fwait
test
mov
popa
stos
add
cmp
and
add
sub
test
xor
fldenv
enter
mov
sub
retf
pop
pop
nop
jmp
cmp
cmp
ins
jne
dec
jns
lea
inc
jge
sub
dec
xor
mov
hlt
lods
lock
ja
adc
cmp
jmp
pop
pop
ror
cmp
shl
cmp
sub
mov
and
and
mov
icebp
jno
out
adc
pop
adc
xor
ins
mov
sbb
sub
adc
inc
out
mov
adc
push
pop
jbe
add
frstor
or
dec
pop
or
mov
push
fs
push
cli
loope
sbb
je
sbb
or
sbb
daa
fistp
icebp
inc
in
adc
dec
add
mov
(bad)
jnp
jno
lea
adc
out
jle
cmovbe
push
clc
mov
adc
(bad)
fwait
test
loope
xor
fs
pusha
stos
aaa
or
xchg
outs
shr
push
jmp
push
sub
movs
test
push
mov
or
outs
popa
pop
pop
ja
lock
(bad)
in
jno
pusha
and
sbb
lock
cmp
mov
add
or
mov
dec
lea
push
inc
pop
cmp
inc
xor
mul
inc
sub
push
cmp
xor
leave
pop
popf
div
jb
sbb
mov
aad
inc
mov
cmp
adc
dec
jbe
or
mov
jmp
add
sub
adc
pop
or
mov
jbe
das
fild
dec
sub
lock
cmp
ror
ins
ret
out
ret
sbb
xchg
add
xor
push
stos
out
xor
or
jg
enter
xchg
pop
add
pop
pop
sbb
mov
retf
nop
cmp
push
mov
and
push
std
push
cmp
mov
xchg
add
sbb
and
jb
push
lods
jo
popa
cmp
into
xor
not
fiadd
dec
js
lea
pop
nop
sbb
mov
fidiv
sub
xchg
and
mov
ins
ss
jle
sub
cmp
pusha
jns
sbb
faddp
push
sahf
fs
mov
je
pop
retf
ret
inc
jbe
jo
cmp
xor
mov
lds
icebp
and
or
xor
inc
and
inc
repnz
adc
mov
fiadd
mov
push
or
adc
mov
inc
lds
mov
rol
mov
sub
sbb
call
mov
mov
add
mov
(bad)
push
jne
mov
jo
mov
and
shr
pop
lahf
out
jg
nop
pop
sar
pop
add
dec
mov
adc
mov
into
outs
or
sbb
push
inc
enter
bndstx
mov
jns
jno
ror
data16
call
push
push
and
fadd
outs
dec
jae
and
pushf
adc
push
out
and
inc
xor
iret
and
aam
cmps
xor
fwait
js
jnp
mov
imul
out
or
sbb
or
inc
inc
icebp
ds
xchg
pop
jmp
mov
enter
pushf
lock
jmp
dec
jl
icebp
daa
jle
mov
add
or
pop
xchg
lods
xchg
out
dec
add
lods
mov
fild
or
add
jmp
or
add
add
pushf
sbb
fdivr
dec
inc
pop
cs
xor
mov
jle
movs
mov
neg
sbb
and
lsl
adc
xor
stos
xor
aam
xchg
cmp
ins
fisubr
fiadd
mov
cli
icebp
or
jns
sbb
xchg
jmp
sub
or
add
or
pop
push
or
or
inc
mov
add
or
aas
out
push
dec
sub
sbb
clc
fdivr
push
test
push
cli
or
and
mov
push
push
daa
ficomp
sub
clc
call
mov
xchg
xchg
push
xchg
sti
cmp
js
nop
inc
mov
in
mov
rol
push
add
or
and
sub
adc
out
ror
out
iret
loop
sbb
push
sub
xchg
dec
sub
sub
mov
pop
daa
cmp
hlt
jb
push
push
inc
sub
bound
and
mov
sub
frstor
pop
mov
or
in
and
inc
add
dec
cmps
cmps
mov
push
add
xchg
jl
xchg
int3
push
adc
jp
push
rcl
mov
dec
jle
xchg
or
push
jne
inc
sbb
inc
clc
lea
push
jecxz
dec
shl
adc
cmp
call
push
push
xor
and
add
xor
das
fs
and
out
push
xor
inc
mov
dec
mov
neg
ret
push
cmc
adc
add
and
add
cmp
repz
pop
lea
and
adc
gs
or
sbb
pop
or
ror
add
jns
push
xchg
sub
daa
cmp
push
or
outs
pop
call
gs
pusha
popa
or
mov
mov
(bad)
jmp
scas
pop
fsub
sbb
hlt
repz
imul
adc
or
adc
dec
xchg
add
shr
test
ret
fwait
pop
cmp
cld
nop
call
sbb
cmp
mov
or
in
lods
add
sub
fdiv
aam
rcr
jmp
sub
and
prefetcht0
pop
mov
dec
sbb
pop
cwde
test
enter
jl
movs
rcr
jge
call
cmp
and
add
add
ins
data16
add
xor
or
dec
ins
sar
(bad)
mov
outs
adc
pop
push
mov
cld
(bad)
pop
ss
push
outs
mul
add
sub
ins
dec
xor
sub
pushf
aas
outs
inc
je
call
in
adc
mov
cs
hlt
popa
mov
jge
outs
add
or
fist
xor
jne
outs
jp
xor
push
pop
push
sub
sub
inc
inc
sbb
adc
test
aas
or
ret
jmp
lahf
and
jle
pop
add
or
add
ja
rol
ja
inc
jo
pop
xor
shr
pusha
push
loop
cmp
add
push
pusha
call
adc
gs
or
inc
cmps
in
sahf
out
pop
lahf
xchg
push
xchg
push
sub
pusha
add
cli
outs
call
dec
sbb
or
mov
dec
mov
push
or
cmp
pop
(bad)
push
add
xor
push
inc
(bad)
es
xchg
js
jbe
mov
adc
inc
sub
std
bound
adc
mov
ficom
adc
rol
cmp
xor
jg
rcl
jno
ss
or
add
imul
jo
mov
xchg
sbb
pusha
and
loopne
mov
in
fs
and
push
jmp
mov
(bad)
stc
jno
push
jne
cmp
xor
ins
shr
test
sub
push
(bad)
sbb
xor
lods
cld
dec
push
jmp
fimul
jne
jo
cmp
jmp
cmp
sub
fnstsw
jbe
push
pop
mov
(bad)
mov
sub
dec
test
es
ja
push
mov
xchg
jns
retf
or
push
sbb
push
sahf
retf
cli
inc
push
push
mov
mov
cmp
add
dec
mov
out
jb
dec
leave
xor
or
xsha1
cmps
dec
mov
shl
mov
hlt
and
or
dec
add
adc
pop
pop
xchg
mov
or
pop
push
add
shr
add
push
inc
adc
xchg
test
sbb
clc
mov
and
dec
mov
dec
fbld
outs
cs
push
add
mov
jmp
add
add
sahf
dec
fsub
jo
mov
push
arpl
push
jns
cmp
loope
mov
shl
(bad)
call
inc
push
sub
push
sub
movs
retf
jmp
or
adc
inc
mov
int3
xchg
loopne
or
sbb
mov
sbb
push
cmp
(bad)
lea
test
add
sbb
push
mov
push
jle
inc
or
push
sbb
adc
jns
xor
test
adc
push
add
enter
or
jbe
push
push
add
push
mov
xor
mov
retf
fs
clc
and
push
or
mov
mov
sbb
mov
rol
push
je
je
imul
outs
cs
sub
dec
and
push
mov
pusha
or
push
mov
cmp
push
adc
ins
dec
sbb
imul
std
pop
mov
lock
add
mov
fistp
xor
push
fs
cmp
jb
lods
gs
xor
push
or
adc
cmp
loope
dec
neg
or
pop
add
setb
rol
and
aas
ror
sahf
imul
xchg
icebp
fwait
lock
mov
jmp
mov
mov
ret
sbb
ret
sub
adc
add
xchg
lea
jmp
in
inc
mov
mov
xlat
mov
stos
fimul
mov
dec
xchg
push
das
push
or
sahf
add
ds
mov
and
add
lock
xor
sbb
in
scas
push
inc
test
popa
push
popf
adc
mov
rol
pusha
pop
push
push
clc
jle
retf
push
push
test
sub
xor
mov
cmp
dec
test
lods
and
dec
and
adc
shr
dec
sub
add
jo
inc
into
stos
jnp
inc
pop
pop
arpl
cli
jp
in
out
sub
fs
or
sub
jecxz
xchg
xor
mov
or
push
inc
ds
and
pop
xor
push
inc
push
jmp
fldcw
or
cmp
ret
xchg
je
je
inc
xor
sbb
je
sub
add
ss
les
xchg
movs
jmp
jmp
sbb
or
jns
pop
adc
pop
sub
sbb
mov
add
out
test
retf
add
cmp
lods
call
shr
fnsave
(bad)
or
test
adc
xor
pop
inc
jne
cs
sub
cmc
mov
jne
and
pop
cmp
mov
popa
adc
sar
sbb
je
push
dec
sbb
bound
lock
movs
push
adc
addr16
bnd
fs
in
ficomp
invd
push
jne
add
ins
fstp
je
push
mov
xor
(bad)
js
loopne
adc
add
cld
bound
popf
mov
adc
add
mov
xor
dec
add
(bad)
shl
add
xchg
loope
and
(bad)
xchg
add
nop
rol
pop
fucomp
add
add
sbb
jl
add
outs
dec
sbb
pop
push
jne
(bad)
rol
or
cmp
lock
js
stos
pop
jmp
ret
push
pop
add
mov
add
mov
xlat
inc
adc
rcr
add
mov
xor
mov
inc
(bad)
xchg
push
push
ficom
sbb
and
jle
sub
je
push
fwait
jbe
shl
cmp
jne
aaa
call
sar
mov
mov
xchg
rol
addr16
dec
daa
pushf
rcr
cwde
push
mov
or
jb
test
sub
xor
enter
in
xchg
dec
push
inc
mov
adc
add
stos
imul
imul
inc
iret
mov
or
daa
push
inc
sbb
and
pop
loop
jb
pop
push
clc
mov
or
jb
outs
pusha
adc
cmp
jbe
push
hlt
jl
imul
inc
cld
sub
or
lock
out
pop
cwde
(bad)
sbb
sub
mov
stos
mov
stos
jmp
test
and
sbb
dec
add
xor
je
arpl
sbb
add
pop
mov
sbb
jae
clc
ins
mov
xor
and
dec
fsub
and
add
pop
xor
popa
push
bound
sub
enter
xor
jle
adc
into
sub
xor
inc
mov
or
ins
scas
add
js
sbb
push
pop
inc
fs
and
jmp
sub
dec
and
iret
mov
inc
pop
jns
jmp
je
je
cs
jnp
cmp
jge
in
cmp
popa
frstor
fdiv
jne
sbb
mov
pusha
add
sub
fild
push
into
add
mov
sbb
je
cmps
mov
add
mov
cmp
sub
xor
mov
sbb
(bad)
out
nop
movs
fnsave
pusha
jbe
jmp
push
jno
sbb
adc
add
pop
int3
jp
mov
loop
mov
(bad)
xor
das
sbb
and
loope
lods
or
out
fild
sub
xor
mul
inc
mov
and
dec
stc
daa
add
xchg
pop
or
cmp
outs
pusha
push
inc
stos
es
cmp
lods
into
sbb
imul
push
and
push
rol
jle
fcmovbe
xchg
sub
pop
xor
inc
mov
sbb
jle
add
push
or
xor
add
or
adc
sub
sub
sub
into
mov
inc
mov
xchg
sub
push
lea
mov
pop
test
outs
cmp
add
adc
xchg
and
or
jmp
out
push
adc
push
pop
cmp
outs
addr16
pop
inc
cmp
sbb
sub
cmp
pop
pop
(bad)
pop
add
pusha
movs
and
fs
push
iret
sbb
outs
call
mov
je
js
jl
or
jnp
jle
nop
test
mov
iret
ds
adc
int3
(bad)
mov
pop
adc
retf
stos
cmp
enter
data16
mov
aam
pushf
mov
repnz
ret
push
and
cli
into
push
(bad)
xchg
pop
jge
sub
dec
add
or
es
sub
sahf
jne
pop
push
add
adc
mov
add
xchg
dec
and
sub
sbb
cmp
pop
or
inc
xlat
xchg
enter
loopne
add
pop
pop
or
add
pop
or
popa
mov
leave
cmp
xor
ret
jp
fidiv
repnz
or
add
dec
or
inc
rcr
in
inc
jns
in
xchg
mov
jbe
cmp
inc
inc
xchg
cdq
(bad)
sub
fist
stos
adc
ret
inc
jo
jno
push
inc
adc
jmp
adc
iret
movs
sub
mov
cmp
cmps
lds
xor
sub
lock
mov
mov
loopne
call
mov
aad
call
pop
jne
and
mov
pop
sub
adc
inc
stc
ror
push
out
add
les
pusha
jae
adc
test
xchg
fist
jbe
adc
jne
mov
mov
sub
sar
add
mov
mov
pop
sbb
hlt
jecxz
loope
mov
scas
dec
add
lock
retf
mov
xchg
xor
or
pop
inc
adc
jmp
cld
inc
popf
inc
dec
adc
loope
inc
adc
mov
or
cmp
fs
ins
and
inc
inc
pop
mov
push
cmp
and
pop
add
and
in
in
and
loopne
test
ret
xchg
sub
or
sub
push
dec
mov
scas
sub
retf
rcl
xchg
or
out
dec
stos
xor
mov
adc
dec
xchg
test
fsub
pop
pop
test
mov
clc
pusha
xor
sub
mov
inc
push
inc
lea
sub
and
imul
cld
loopne
rcl
lea
movs
push
mov
ret
sbb
pop
pop
loopne
and
push
jne
pop
mov
aas
iret
in
shr
lods
add
in
mov
in
push
out
add
mov
push
popa
aaa
xor
add
ret
pop
(bad)
pop
test
dec
dec
arpl
adc
gs
dec
jmp
add
cli
push
mov
fcmovnu
adc
iret
mov
pop
ret
jne
mov
cdq
int
mov
pop
pusha
hlt
or
cmp
into
inc
test
sbb
iret
pop
pop
xor
pop
sbb
sbb
lods
or
jle
shl
adc
add
and
sahf
jnp
push
and
inc
cmp
rcl
or
(bad)
call
adc
jge
push
out
mov
inc
cs
popa
movs
rol
mov
push
or
in
sbb
inc
jb
mov
mov
in
dec
dec
inc
test
dec
cwde
push
sub
fsubr
das
bound
push
pop
push
inc
pop
dec
xchg
mov
shl
pop
mov
sbb
xor
sub
test
ins
mov
pop
adc
iret
or
test
inc
iret
or
or
pop
mov
test
iret
aaa
push
loope
fsub
clc
(bad)
mov
sub
mov
imul
out
scas
pop
shl
pop
and
push
sbb
adc
call
loope
movs
sbb
inc
movs
and
and
and
jle
dec
and
inc
jb
or
sbb
fld
(bad)
(bad)
dec
sbb
fwait
hlt
outs
inc
adc
test
push
xchg
aaa
xor
test
scas
mov
or
mov
stos
nop
rcl
(bad)
lea
and
(bad)
hlt
into
inc
push
mov
scas
fcomp
or
inc
adc
ret
pop
nop
retf
aam
clc
inc
fcom
add
dec
push
jnp
pop
add
adc
sub
pop
jne
add
xor
jnp
inc
push
sub
jo
dec
sbb
sub
mov
fsubrp
(bad)
pcmpgtd
cmp
mov
(bad)
jmp
adc
cmps
jbe
rcr
icebp
or
cs
mov
mov
and
icebp
jb
inc
sbb
xor
nop
jns
sti
fadd
mov
test
fisttp
sub
xor
xchg
sbb
pop
clc
add
jae
mov
out
sub
sub
out
xor
xchg
in
es
sub
xor
icebp
add
stc
ret
movs
test
imul
mul
mov
je
xrelease
lea
pop
(bad)
or
mov
sbb
mov
adc
ret
jbe
mov
ror
out
push
je
and
adc
mov
fcom
pop
js
sbb
out
into
and
rol
pop
in
sbb
dec
cmp
rol
enter
shl
mov
jbe
or
clc
or
cmp
jg
fcomp
xchg
loop
xchg
dec
sbb
push
les
add
add
leave
cmp
or
jl
jne
sbb
fld
stos
dec
mov
jno
or
dec
cmp
add
pop
jne
adc
shr
push
dec
adc
je
rcr
rol
push
cmp
cli
jne
push
mov
xchg
xor
loopne
sbb
loope
xchg
lods
fs
ret
jecxz
lods
add
sub
pop
and
sub
push
pushf
add
inc
push
and
jle
scas
add
call
push
ret
jne
jp
es
ja
popa
inc
jmp
dec
push
into
sub
adc
int
pusha
test
lahf
je
sub
push
add
cdq
add
and
adc
jle
call
cld
rcr
popa
jns
push
or
add
or
and
loopne
jmp
adc
cmp
jb
jl
add
adc
mov
cmp
mov
in
xchg
aaa
jg
push
test
loop
aas
jns
xchg
test
push
jl
adc
mov
js
addr16
xchg
sbb
pop
retf
clc
jne
xchg
rol
push
lods
and
xchg
mov
add
sub
lock
xor
repz
je
xchg
js
mov
xor
push
cmp
(bad)
icebp
xchg
call
add
lea
mov
fisttp
jnp
retf
mov
push
(bad)
hlt
in
or
push
add
popf
or
pop
mov
push
push
push
outs
in
mov
push
inc
outs
inc
xor
clc
jl
add
ins
push
xchg
hlt
pop
in
pop
or
cmp
stos
adc
jge
(bad)
jmp
and
add
sar
cs
xor
xor
dec
test
enter
ss
sub
inc
inc
cmp
mov
shl
cmps
push
push
add
xor
lar
adc
lock
add
cmp
and
add
out
jmp
add
movs
add
cmp
inc
cmp
add
enter
add
repnz
or
xor
sbb
rcr
(bad)
push
add
xchg
daa
mov
sbb
add
dec
mov
test
push
mov
sub
mov
nop
jmp
lock
inc
popa
dec
sbb
cmps
adc
and
mov
sti
push
je
pop
and
jb
mov
mov
add
adc
push
xchg
or
push
xor
mov
adc
adc
pushf
mov
iret
push
push
hlt
sbb
or
les
xor
mov
jg
popf
ss
and
stos
mov
pmovmskb
ins
imul
aaa
(bad)
lea
add
dec
mov
inc
mov
jl
dec
inc
pop
js
push
xchg
push
stos
nop
add
fnsave
cmp
sbb
dec
xor
inc
xor
int3
adc
lock
mov
jmp
adc
sbb
das
enter
and
adc
lock
loope
enter
loopne
sbb
pop
in
or
xchg
add
nop
shr
xor
or
adc
xor
je
cwde
adc
test
pop
popf
cmp
imul
xor
je
int3
push
inc
in
bound
xorps
pop
xor
push
fmul
sbb
jp
test
jl
dec
fmul
dec
clc
nop
das
fcomp
fwait
ins
pop
(bad)
mov
mov
repnz
inc
sub
inc
mov
aad
push
pop
rol
xchg
mov
loope
pop
cmp
jmp
cmp
dec
in
inc
wbinvd
retf
leave
dec
int3
mov
xchg
adc
sbb
mov
cmp
fcom
dec
or
adc
and
dec
jne
clc
add
arpl
add
xchg
jge
js
add
mov
shr
or
pop
pop
add
inc
adc
in
pop
push
cmp
call
lock
inc
jmp
and
pop
mov
int
ins
adc
cmp
inc
in
aaa
add
add
in
inc
fs
imul
outs
xor
xchg
jl
dec
dec
mov
and
arpl
sbb
push
ret
xchg
lea
sbb
js
add
iret
mov
and
cmp
pop
jmp
out
cmp
mov
push
pop
test
push
sbb
cld
dec
pop
mov
cmp
push
push
lock
js
lock
or
dec
addr16
fcom
ss
pushw
jns
jmp
call
fs
or
inc
test
add
jbe
sub
push
test
add
sub
outs
xchg
inc
and
sub
xor
repnz
sbb
jp
jo
add
add
pop
push
pusha
(bad)
enter
sbb
mov
rcr
mov
mov
mov
mov
mov
add
dec
shl
add
dec
sti
(bad)
aas
inc
js
and
pop
cmp
jge
ins
in
mov
sub
xor
das
xchg
ret
xor
dec
or
xor
mov
jb
je
ins
ror
nop
sbb
loope
or
cmp
fisttp
in
add
outs
inc
ret
push
movs
cmp
je
aaa
sbb
adc
jg
add
sub
mov
test
sbb
inc
add
adc
add
sbb
add
clc
sub
cmp
add
out
xor
js
mov
gs
cli
popa
mov
test
sbb
sub
xor
and
fcmovu
push
ficomp
adc
push
and
imul
pop
nop
nop
adc
test
push
rcr
push
sub
xchg
xchg
push
xchg
xchg
js
mov
popa
mov
(bad)
rol
inc
push
dec
enter
hlt
rol
dec
les
shr
adc
push
inc
ja
mov
or
data16
inc
pushf
je
fsubr
jmp
pop
fidivr
push
inc
fs
jl
xor
add
repnz
arpl
mov
push
push
test
push
imul
cs
nop
push
call
and
inc
or
cmp
je
cmp
je
mov
es
(bad)
(bad)
(bad)
(bad)
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
jmp
je
cmp
je
cmp
je
test
cmp
je
cmp
sbb
jmp
sub
scas
je
cmp
xor
and
cmp
je
cmp
je
cmp
je
cmp
je
cmp
ficomp
sar
push
mov
sub
inc
jp
or
push
rcr
inc
mov
mov
mov
mov
(bad)
sbb
sbb
ror
xchg
sub
xor
jno
loopne
pop
cli
xor
cmp
daa
dec
or
cmp
shl
cmp
cmp
ret
xchg
in
xor
sbb
adc
adc
movs
test
sbb
pop
sbb
sbb
inc
push
jge
jae
fwait
in
hlt
(bad)
mov
push
sbb
fbld
inc
xchg
test
adc
es
sbb
sbb
in
mov
or
test
dec
aad
sbb
or
jo
dec
lahf
out
add
(bad)
retf
stc
nop
test
push
cmp
addr16
sbb
repnz
rcl
sub
mov
sbb
pop
cmp
fisttp
fs
adc
add
inc
sbb
lea
ret
inc
sbb
adc
push
pop
imul
rcr
daa
inc
add
push
pop
and
xchg
jle
(bad)
jge
pop
bound
data16
fldenv
add
sub
sti
loop
rcr
jae
int
inc
adc
movs
and
pop
test
mov
sub
test
dec
mov
out
int
xchg
inc
aaa
xchg
imul
je
cs
popa
fiadd
add
mov
and
dec
dec
cli
adc
fild
imul
mov
shl
and
cmc
dec
cmp
imul
fs
inc
outs
adc
pop
(bad)
xchg
mov
std
jne
mov
sub
jmp
pop
jle
xor
or
inc
sub
or
bound
mov
xchg
adc
ins
pop
pusha
mov
pop
lea
push
ss
push
sahf
dec
adc
test
arpl
mov
pop
xchg
aam
and
xor
adc
or
lock
sub
bnd
clc
sbb
pop
popa
jno
push
push
mov
loop
rcl
das
inc
push
in
or
cs
push
xchg
xchg
fsub
ror
jp
cmp
and
add
dec
add
dec
stc
pop
scas
xchg
inc
push
or
and
lods
push
sub
hlt
es
cs
pop
adc
push
jno
rcr
and
push
test
loopne
int3
mov
test
cwde
mov
sub
clc
jmp
call
aas
(bad)
sub
nop
popa
inc
fisub
inc
int
sti
fs
and
and
popa
inc
xchg
ins
sub
clc
scas
push
mov
jge
data16
and
je
pop
mov
jne
gs
sti
mov
nop
lock
sbb
xchg
mov
xchg
and
jne
std
fsubr
add
scas
in
xor
jmp
data16
or
jns
imul
sub
xor
in
cmp
xor
dec
push
mov
xchg
jle
xor
fcomp
shr
cli
adc
mov
push
push
call
mov
inc
pop
push
add
push
pusha
out
nop
xchg
popa
sbb
add
dec
daa
aad
push
or
mov
push
pop
inc
push
lea
sub
pop
mov
mov
ins
jmp
iret
lods
cmp
lahf
sub
push
mov
mov
jno
out
cmp
adc
shl
pusha
pop
es
push
fistp
add
cmp
or
jmp
cmc
aaa
sbb
mov
jl
add
in
movs
repnz
out
imul
pop
in
jl
test
movs
fadd
out
add
fbld
sbb
aas
cmp
xor
adc
stos
cwde
sbb
ins
xor
stc
ins
push
out
add
nop
cld
call
adc
pop
pop
add
sub
dec
out
test
call
adc
jmp
popf
dec
xor
and
xchg
dec
sti
push
in
sbb
and
or
movs
xor
mov
mov
retf
cmp
movs
sub
cmp
dec
fbstp
outs
dec
or
call
mov
fidivr
push
mov
test
out
cmp
movs
push
ins
ss
sar
inc
inc
xchg
fidivr
pop
pop
and
adc
in
push
test
pop
(bad)
or
lds
in
xor
mov
lods
push
imul
sti
inc
sar
out
sbb
sbb
add
call
ret
daa
sbb
mov
div
shl
pop
and
jl
dec
mov
sti
adc
mov
lods
xchg
dec
lea
pusha
icebp
iret
std
je
sub
pusha
fst
xor
xor
cmp
(bad)
jg
pop
or
lods
jp
inc
cmp
sbb
call
sbb
dec
add
and
ja
inc
int3
div
mov
push
jmp
pop
add
xchg
dec
stos
push
repnz
test
imul
jnp
lock
inc
and
dec
into
in
cmp
imul
jo
rcr
retf
(bad)
fadd
out
mov
push
fisubr
aam
outs
add
inc
push
push
(bad)
mov
add
aam
ret
mov
sbb
shl
or
mov
cmp
sbb
fs
imul
lods
inc
cli
shr
or
mov
out
add
clc
cld
inc
dec
inc
sahf
call
leave
or
pop
fsub
push
sbb
mov
sub
push
or
(bad)
or
pop
out
neg
rol
sbb
bound
or
cs
call
inc
pop
add
and
fwait
ja
jmp
outs
je
sahf
mov
or
je
or
or
mov
(bad)
and
pop
fisttp
add
cmp
fadd
fcomp
cdq
nop
mov
push
sub
pop
into
inc
es
cmp
and
rol
and
movs
jnp
cmp
mov
add
inc
aaa
test
out
jg
push
and
and
xor
dec
shl
add
xor
dec
dec
inc
sub
jo
mov
je
cmp
push
push
stc
mov
xor
sub
iret
add
add
movs
jb
es
sub
and
cmp
pop
or
mov
leave
and
leave
mov
enter
xor
leave
in
dec
xor
xor
or
fst
and
mov
aas
rcr
sbb
and
adc
xchg
shl
and
inc
pop
jmp
add
or
xchg
jnp
ret
test
sbb
pop
ret
(bad)
(bad)
jge
loopne
inc
std
js
sbb
js
mov
in
or
fisub
je
or
inc
inc
jns
fsubr
push
inc
add
es
xor
clc
pop
fnstcw
hlt
dec
mov
into
je
fild
loopne
into
and
loope
fsubr
inc
mov
(bad)
out
sub
or
js
dec
jp
add
or
xor
inc
call
ins
mov
pushf
jp
ss
dec
add
or
scas
lods
fsubr
sbb
fisubr
je
pop
inc
mov
cmp
push
adc
push
gs
sbb
and
nop
push
dec
cld
sbb
pop
mov
mov
sar
cmp
arpl
xor
and
xor
adc
lods
push
arpl
sub
dec
jp
sbb
dec
test
test
xor
leave
hlt
sub
loopne
adc
or
jmp
in
sub
lods
and
nop
addr16
push
mov
mov
add
add
int3
xor
outs
call
test
fmul
push
aam
sar
add
es
js
mov
pop
adc
add
and
loopne
xor
push
mov
jecxz
add
outs
add
fsubr
jae
scas
ret
test
inc
sbb
fld
adc
inc
imul
push
sahf
sub
or
dec
dec
mov
pop
pop
add
outs
cld
lods
xchg
push
mov
add
add
fs
jecxz
push
lahf
loop
mul
mov
outs
icebp
sar
sub
(bad)
daa
icebp
lds
fucomip
inc
and
div
cwde
sbb
adc
pop
sub
inc
inc
sub
test
xor
(bad)
popf
clc
or
push
or
sub
cdq
or
shl
in
sbb
xchg
(bad)
adc
jmp
or
push
jo
inc
es
arpl
and
push
mov
push
adc
pop
sahf
pop
pop
mov
inc
or
inc
loopne
xchg
icebp
mov
jge
out
fistp
mov
sbb
nop
add
add
add
adc
adc
and
add
add
jle
in
int3
or
xchg
(bad)
push
out
fwait
mov
aaa
cmc
adc
mov
or
cmp
pop
jmp
cmp
sub
fxtract
or
lods
and
dec
and
and
mov
call
or
and
adc
out
sub
imul
cld
mov
and
pop
lds
outs
mov
xchg
loopne
add
hlt
cs
gs
sub
and
sbb
mov
jnp
and
jl
sbb
data16
mov
pop
pop
mov
cmp
jnp
adc
pop
push
adc
adc
cmp
cmp
js
xor
dec
in
scas
pop
add
inc
retf
sub
or
add
out
inc
mov
idiv
cmp
repnz
push
dec
ror
aam
rcl
cmp
test
icebp
mov
sub
cs
or
xchg
mov
les
sbb
xor
and
dec
sbb
pop
into
push
and
add
xor
or
cmps
mov
ins
mov
mov
sub
mov
xor
adc
cmp
daa
adc
out
aam
pusha
xchg
push
shl
adc
mov
inc
xchg
retf
adc
in
movs
mov
jmp
loopne
sbb
xor
jl
ja
or
cmps
adc
scas
or
dec
or
and
ja
add
sbb
adc
pop
push
pop
mov
cmp
or
jne
jmp
cmps
add
rcr
adc
cmps
movs
cmovno
xor
lock
mov
mov
sub
sub
adc
add
sub
xchg
popf
sub
int3
pop
mov
xchg
pop
and
sar
lea
cmp
add
iret
push
add
cmp
sti
dec
inc
push
in
rcr
in
cs
xchg
cld
(bad)
push
sub
sub
scas
jmp
and
xor
add
jl
sbb
(bad)
sar
mov
stos
push
loop
cwde
dec
les
inc
xchg
mov
data16
rcr
mov
jne
icebp
fadd
add
dec
inc
aas
mov
inc
setp
pop
mov
ds
and
dec
call
mov
xchg
jle
or
adc
pop
jmp
out
stos
mov
imul
fist
(bad)
push
inc
push
or
push
(bad)
ins
inc
fstp
sar
jmp
(bad)
popa
sbb
js
pop
aad
inc
je
push
arpl
pop
push
and
in
test
add
mov
adc
pop
movs
(bad)
in
fld
xor
sbb
push
pop
inc
jmp
test
or
jbe
pop
jmp
(bad)
pop
cmp
fcomp
mov
test
push
ss
add
push
neg
movs
pusha
xchg
pop
pop
jl
sar
je
mov
cmp
pushf
mov
jno
sub
fcmovb
pusha
cmp
xor
jecxz
imul
jmp
dec
cmp
sub
jmp
xchg
add
mov
push
enter
jo
ins
fdiv
out
mov
pop
mov
sbb
add
lahf
mov
js
or
pop
mov
cmps
xor
push
rcl
ficom
daa
dec
jne
pop
shr
lods
daa
dec
push
fild
cmp
call
int3
repnz
mov
mov
xchg
dec
pusha
mov
push
lea
adc
add
jmp
aaa
or
xor
pop
jl
into
sbb
fnstenv
push
dec
push
or
cmp
jle
loopne
(bad)
mov
sub
push
xor
cwde
ins
movs
mov
jp
or
inc
jmp
sub
js
jle
adc
lea
mov
cmp
retf
mov
test
test
ss
jl
push
or
fsub
call
mov
inc
imul
inc
add
xor
hlt
xor
sar
pop
jl
je
jge
cmp
add
dec
or
cmp
(bad)
and
pop
mov
jge
inc
mov
push
pop
or
pop
shl
jmp
cmp
dec
jp
or
repz
sbb
jns
or
pop
fidiv
sbb
push
mov
pop
pop
xchg
jg
(bad)
rcr
call
sub
mov
mov
mov
ret
enter
fxtract
xchg
jo
mov
push
mov
xchg
mov
shr
cwde
(bad)
dec
outs
mov
mov
fidivr
ror
mov
xchg
dec
add
pop
pop
inc
adc
inc
dec
inc
push
fwait
jl
add
aas
fdivr
add
pop
and
sub
xchg
add
test
cmp
(bad)
lock
jl
sbb
and
sub
enter
imul
push
add
pushf
inc
test
test
jp
cmp
cmp
loopne
mov
xor
xchg
adc
pop
pop
call
cmp
mov
scas
ss
push
sub
clc
int3
inc
or
push
aaa
mov
or
jo
jl
and
fwait
cmp
add
dec
loop
push
cs
js
sbb
adc
dec
sbb
push
outs
inc
je
cld
xchg
loope
push
cmp
add
shl
faddp
outs
xchg
dec
add
mov
cmp
(bad)
pop
push
adc
test
test
dec
add
xor
pushf
sbb
push
cmp
mov
sbb
xchg
or
mov
xor
inc
xchg
dec
shl
ror
xchg
xchg
jo
iret
jecxz
dec
cmp
push
jp
adc
add
mov
imul
inc
jne
xor
xchg
sbb
sbb
push
cli
and
jo
add
mov
(bad)
xchg
mov
cs
push
cmp
sub
outs
sbb
mov
dec
ins
cmp
jmp
scas
dec
cmps
retf
inc
fnsave
push
pop
pushf
mov
push
jne
jo
bound
(bad)
push
xchg
inc
push
mov
loopne
mov
xchg
mov
cmp
cmps
leave
and
or
xor
xchg
out
cmps
or
sbb
mov
jl
inc
mov
xchg
jl
push
cmc
out
xor
jmp
xor
mov
adc
loopne
in
mov
or
cmps
xchg
mov
adc
test
aad
mov
sub
jae
rcr
push
out
or
stos
sub
mov
popa
pop
inc
pop
inc
outs
and
retf
js
aad
data16
sbb
xor
outs
fbstp
jge
add
fs
inc
fsubr
xor
or
test
push
es
mov
push
add
add
add
xor
pusha
cwde
ins
or
mov
xchg
or
adc
jae
adc
pusha
dec
shr
je
cwde
sbb
shr
sbb
pop
es
xchg
cli
(bad)
sub
inc
sbb
clc
inc
sbb
out
add
inc
dec
lea
lods
in
push
hlt
cmp
xadd
or
or
ds
aam
sahf
xor
test
ret
icebp
cmp
call
dec
daa
sub
sbb
or
inc
inc
sbb
pop
sbb
cwde
in
movs
fsub
and
xor
and
adc
xchg
adc
mov
hlt
loop
jg
sub
push
mov
loopne
sbb
mov
or
mov
or
lds
arpl
push
mov
and
call
mov
mov
std
cmc
icebp
sub
dec
mov
add
gs
push
rol
ins
sbb
sub
sub
les
xor
add
xor
int3
push
daa
fidiv
inc
add
push
mov
cmp
adc
xor
js
push
aad
std
mov
ss
movs
adc
ret
mov
adc
es
in
test
fdiv
adc
test
cmps
mov
inc
xor
cs
cld
test
add
inc
ja
je
sub
out
xor
add
or
mov
loopne
cmp
loopne
jg
aaa
dec
stos
lea
sub
hlt
jp
lds
jmp
fcomp
cmp
adc
push
xchg
nop
in
loope
fld
sbb
push
jecxz
leave
inc
and
xchg
dec
or
sbb
xchg
jl
mov
fdivr
jmp
xor
movs
inc
mov
xor
repz
je
test
cmp
or
pop
mov
cld
pop
sub
cmp
imul
test
sar
push
ds
mov
adc
std
add
test
or
add
je
push
push
pop
or
sbb
mov
xor
es
loop
es
pop
cmovb
push
je
retf
icebp
ins
and
or
inc
mov
out
cli
ins
cmp
sti
inc
cmp
fmul
repz
push
not
ret
jmp
repnz
dec
inc
dec
or
lods
sbb
cmp
ja
pop
shl
es
les
sbb
and
xchg
mov
mul
jbe
test
adc
jns
dec
cdq
adc
xchg
dec
leave
int3
jl
lods
mov
mov
xor
leave
test
pop
or
add
and
dec
fsub
jmp
add
retf
push
or
xchg
xchg
xchg
ja
push
add
add
loopne
push
pop
pop
outs
lock
add
pop
push
jp
push
inc
mov
mov
jno
aam
add
jnp
mov
jg
adc
call
rcl
jp
adc
cmp
lock
cmp
sbb
adc
mov
sbb
adc
lahf
imul
fwait
mov
je
push
adc
fnstcw
add
add
inc
das
movs
push
cmp
das
test
pop
adc
pop
push
sahf
add
mov
sbb
adc
gs
mov
(bad)
mov
adc
dec
lahf
push
ins
push
cwde
shl
xor
ins
jge
mov
and
movs
mov
or
sahf
lods
and
in
jg
dec
and
(bad)
lods
je
ror
ja
dec
add
adc
dec
add
sbb
add
aas
inc
sbb
stos
xchg
ja
jecxz
or
mov
push
jmp
mov
xor
and
push
dec
push
push
mov
pop
(bad)
push
xor
push
push
add
cmc
jge
pop
retf
sub
imul
jp
dec
mov
dec
pop
jecxz
pop
add
inc
leave
xor
dec
mov
mov
push
push
dec
push
push
sub
movs
movs
(bad)
mov
push
push
mov
jo
mov
pop
jmp
fsub
cwde
inc
inc
pushf
inc
sbb
pop
mov
xchg
inc
std
mov
enter
sub
inc
daa
pop
cmp
mov
push
jne
xor
and
call
push
mov
pop
sub
jae
xchg
mov
fld
sbb
daa
sti
mov
cmps
aaa
cmps
xchg
ins
test
push
xor
pop
pop
cdq
stos
adc
adc
data16
pop
adc
das
mov
scas
jmp
inc
add
or
ss
add
in
pop
je
loope
rcl
xor
pop
or
fisttp
add
pop
xor
lock
ret
push
and
out
inc
mov
movs
xor
call
mov
in
mov
push
push
or
fs
mov
jmp
mov
aaa
cmp
pop
in
jns
jmp
sub
or
outs
mov
nop
lock
sub
sbb
cli
dec
adc
mov
sub
jge
mov
ret
ror
repz
jmp
dec
adc
mov
bound
in
addr16
les
push
pop
(bad)
js
push
dec
push
pop
xor
add
push
test
test
lahf
lock
js
js
add
mov
lea
inc
adc
adc
cwde
and
out
dec
jbe
data16
lock
shr
pop
ss
(bad)
sbb
int3
or
or
std
popa
gs
jecxz
dec
push
mov
gs
xor
pop
inc
in
push
or
mov
cli
pop
movs
ja
mov
dec
mov
sub
add
pop
push
fcomp
arpl
mov
aam
or
jmp
movs
cs
mov
out
ja
neg
out
pop
adc
mov
push
aas
cmps
mov
mov
adc
sub
lods
out
in
clc
popa
bound
add
pop
jne
popa
mov
cdq
mov
or
mov
bound
das
lds
mov
or
add
jl
mov
dec
loope
mov
add
add
sbb
push
and
push
adc
cmp
add
call
mov
frstor
jne
pop
mov
(bad)
jmp
add
loope
pop
pop
sub
shl
cmp
mov
bound
pop
adc
pop
rcl
ins
ret
pop
jge
lea
out
sbb
or
push
and
aam
xor
inc
mov
fwait
dec
fdivr
push
aad
dec
or
push
cwde
cmp
adc
cmp
add
repnz
xor
push
(bad)
mov
repz
and
stc
gs
les
jmp
adc
cld
aas
pop
xlat
mov
xor
enter
mov
push
jae
xlat
ret
in
xor
lock
xor
in
mov
cmps
bound
mov
imul
int3
push
inc
xcrypt-cbc
cmps
push
or
xchg
popa
dec
inc
cmp
retf
pushf
xchg
addr16
stc
push
mov
test
push
lahf
inc
xor
pop
stos
fwait
clc
push
and
mov
xchg
dec
(bad)
cmp
aam
mov
loopne
push
pop
out
outs
cld
jge
jmp
cmp
pop
inc
ins
shr
cmc
dec
std
pop
and
mov
and
or
cld
push
and
cmp
sub
repz
stos
dec
imul
into
dec
push
push
sbb
imul
push
adc
inc
sbb
pop
push
xor
and
jmp
cmp
sar
test
add
je
into
cmp
ret
mov
push
mov
out
pushf
or
push
sbb
mov
shl
retf
bound
xchg
jns
dec
pop
pop
push
pop
mov
cmp
jb
fst
push
mov
or
jae
call
ret
sbb
je
ins
xlat
out
pop
fldenv
arpl
imul
sbb
jmp
retf
pop
shl
xor
push
imul
xchg
hlt
mov
push
xchg
adc
and
xchg
pusha
add
pop
cmps
pop
dec
push
jo
cs
test
and
xor
adc
pop
std
sbb
je
sub
jg
pop
rcl
ficomp
inc
js
sub
movs
mov
movs
ins
lahf
sub
mov
jp
jbe
inc
inc
inc
fisubr
cmp
subps
xor
ins
repnz
sub
push
and
and
sahf
dec
jo
hlt
(bad)
(bad)
push
pop
cmp
call
jmp
mov
mov
fdiv
push
test
sbb
movs
mov
xchg
cmp
mov
lods
adc
retf
push
push
xchg
dec
add
adc
out
clc
(bad)
push
add
test
mov
jne
loopne
iret
push
add
retf
(bad)
outs
call
jo
cmp
(bad)
stc
mov
xor
and
loope
and
sbb
or
xor
into
mov
mov
stc
jmp
pushf
pop
cmp
sub
mov
cld
push
mov
adc
out
dec
cmp
arpl
test
add
fidiv
and
xor
push
mov
push
adc
stos
pop
retf
stos
push
(bad)
(bad)
and
sub
cmps
mov
cmp
or
ret
cmp
clc
fld
fwait
xchg
in
cmp
retf
inc
and
pop
sbb
inc
jge
add
push
dec
xor
mov
push
pop
or
dec
mov
into
pop
pop
jo
wbinvd
clc
rcpps
pop
leave
ret
rcl
cmp
push
adc
data16
and
or
sbb
adc
pop
pushf
inc
sbb
xchg
jg
push
add
push
jno
or
xor
dec
add
or
retf
sbb
sub
dec
or
aaa
ins
ss
dec
dec
fsub
sbb
repz
in
test
in
jae
clc
nop
xchg
mov
push
or
and
or
pop
and
ds
cmp
int3
push
pop
xchg
push
sbb
and
stc
jae
repz
sbb
out
rcl
inc
pop
fild
adc
ss
dec
fnstenv
mov
and
xor
add
jge
js
fdiv
mov
or
jno
sub
in
xor
push
jge
cmps
xor
and
add
and
mov
retf
jne
dec
add
and
fimul
lea
adc
sbb
ss
nop
sbb
ret
mov
push
ror
xchg
sub
lea
mov
mov
nop
xchg
or
ret
test
fld
(bad)
mov
or
mov
mul
jp
adc
mul
jmp
pop
je
pop
fidivr
or
or
pop
in
mov
cmp
push
loopne
xor
mov
sub
jbe
(bad)
push
in
mov
jne
pushf
cli
out
dec
outs
or
ins
outs
jnp
fwait
or
fidiv
mov
xchg
std
gs
(bad)
call
jo
(bad)
xor
xor
sti
jmp
push
dec
popf
in
push
in
loope
jmp
or
enter
daa
mov
mov
arpl
sbb
or
fst
(bad)
mov
loopne
jmp
icebp
push
addr16
stc
je
ror
xor
je
sub
fimul
inc
outs
jnp
mov
es
push
hlt
fisubr
add
mov
sub
test
jl
rcr
ret
dec
inc
inc
es
icebp
ins
jns
ss
js
sbb
shl
xchg
push
lahf
inc
loopne
jne
icebp
jno
loope
arpl
sbb
jno
jne
popa
or
and
mov
sar
adc
mov
(bad)
(bad)
ror
mov
ja
push
popf
cmp
mov
push
pop
sbb
lods
imul
adc
stos
fild
add
jns
pusha
inc
sub
call
nop
es
adc
jmp
pop
gs
adc
push
adc
jmp
sbb
jb
add
call
pop
cmp
dec
fs
js
or
ror
loopne
ds
pop
pop
lods
pop
push
sbb
inc
push
cmc
push
inc
and
or
imul
out
(bad)
cmps
ret
sbb
mov
push
jo
push
ins
mov
adc
arpl
mov
and
adc
mov
and
add
add
hlt
or
hlt
xor
enter
aad
leave
push
addr16
and
cwde
jmp
sub
inc
dec
add
mov
enter
cld
cld
dec
xchg
jp
fild
dec
push
push
push
sbb
sbb
fisttp
sbb
adc
and
pop
es
push
arpl
js
inc
or
ja
mov
push
jno
mov
or
mov
lock
retf
add
pop
jl
push
data16
mov
sub
pop
xor
jnp
xchg
int
cmps
push
mov
inc
leave
push
and
aas
mov
add
arpl
and
test
sti
inc
inc
cmp
xchg
lea
sbb
dec
pop
(bad)
clc
push
xor
push
pop
in
mov
dec
jb
push
or
xor
xchg
out
(bad)
jmp
ins
shr
push
cmc
sub
test
adc
fwait
push
stos
adc
and
xor
sbb
add
add
lds
mov
cdq
jno
and
cmps
popa
scas
aam
add
xor
add
jecxz
ret
cwde
jge
js
inc
push
repnz
ss
mov
add
(bad)
out
(bad)
add
ja
pusha
cmps
and
mov
or
mov
fisub
push
push
jmp
add
push
je
mov
and
sbb
mov
lods
rol
ins
push
loopne
mov
sbb
sbb
enter
xchg
xchg
and
(bad)
dec
sbb
clc
mov
or
cmp
xchg
lods
jecxz
pop
into
mov
ss
or
sub
xchg
inc
cdq
xchg
jle
nop
sub
cmovle
push
daa
sub
mov
popa
adc
test
pop
dec
clc
into
fdiv
mov
cwde
sub
mov
sub
daa
bound
sbb
sbb
adc
inc
ds
es
mov
mov
sub
adc
and
mov
out
cmp
mov
inc
sub
fadd
cmp
pop
mov
scas
push
test
xchg
fwait
cmp
xlat
sub
sub
jg
test
int3
cmp
jle
mov
mov
cdq
fimul
jmp
mov
test
sbb
cmp
pop
or
jmp
test
mov
adc
add
and
xor
xchg
inc
jl
xor
les
dec
push
push
add
fstp
cmp
dec
inc
sbb
xchg
jo
(bad)
out
push
mov
in
imul
mov
imul
sub
sahf
sub
dec
mov
test
or
adc
mov
add
(bad)
push
fstp
xchg
fsub
add
aas
fs
sti
push
dec
inc
pop
xchg
push
sub
jbe
adc
sub
ins
je
pop
ja
rcl
mov
add
pusha
cmp
cmp
rol
push
mov
sub
inc
mov
in
std
in
sub
(bad)
jne
adc
cmp
jmp
mov
(bad)
dec
clc
(bad)
xchg
push
sbb
push
and
or
pop
push
and
adc
add
adc
mov
scas
bound
lods
pop
xchg
dec
or
adc
fidiv
hlt
adc
mov
jle
call
test
sbb
jecxz
(bad)
and
(bad)
push
push
and
or
ins
loop
jnp
repnz
or
loopne
lods
push
movs
movs
pop
js
xchg
push
cwde
xchg
add
ret
es
test
clc
mov
inc
sar
sbb
and
sti
or
retf
sbb
add
mov
aam
mov
cld
jl
loopne
cli
adc
clc
mov
pushf
mov
sub
xchg
fcom
bound
dec
pusha
lods
cmp
out
je
jmp
and
xchg
dec
sub
fwait
test
cmp
or
xchg
rol
ja
mov
add
aam
ret
jb
(bad)
mov
out
add
adc
inc
adc
add
and
clc
inc
fimul
push
push
jmp
sub
adc
or
mov
add
add
jb
push
fdivr
fdivr
lea
jne
addr16
sub
in
mov
fimul
and
ds
cmc
cmps
mov
cmp
popa
les
imul
test
dec
mov
pop
fmul
push
add
rcl
dec
mov
inc
jae
retf
and
xchg
dec
in
sub
sbb
pop
fisubr
je
icebp
bound
add
mov
sub
mov
ins
inc
mov
inc
pusha
lds
sbb
or
das
(bad)
pop
xor
xchg
lea
fdivr
add
pop
test
and
adc
and
mov
adc
fiadd
mov
sbb
xor
adc
lods
and
lea
mov
jecxz
mov
sbb
sub
cmps
mov
xor
jmp
push
and
jl
and
push
daa
push
jne
ss
icebp
mov
push
xor
xchg
imul
mov
out
push
or
repnz
jecxz
jge
inc
mov
loopne
sub
push
out
pop
mov
pop
push
push
je
cmp
pop
jo
xor
jmp
cmp
ins
es
fimul
sub
ret
test
pop
lods
xchg
mov
cmps
aas
sub
dec
stc
cmp
xor
and
mov
push
lock
cdq
idiv
jge
lea
push
add
mov
and
les
js
xchg
cmp
cmp
jge
loop
push
jne
push
add
(bad)
push
pop
jnp
adc
and
rol
(bad)
sahf
jbe
mov
andps
dec
punpcklbw
and
jmp
and
jo
daa
je
and
cmps
mov
mov
inc
and
dec
daa
inc
sbb
in
cmp
push
add
sub
mov
sub
add
mov
es
or
data16
cmp
sti
inc
or
test
jne
ret
push
push
sub
mov
adc
fimul
add
mov
add
pop
jmp
xchg
retf
push
or
scas
mov
movs
hlt
and
or
sahf
dec
jno
pop
add
xor
fdivr
pop
push
cmp
adc
fcomp
ror
jb
and
sub
or
mov
xor
addr16
out
push
outs
sub
(bad)
stc
and
push
je
adc
sub
daa
and
or
inc
je
dec
into
sub
sbb
pop
ins
sub
les
push
xchg
cmp
mov
jb
cwde
out
ja
aam
pop
jmp
and
pusha
xor
or
mov
jge
push
push
mov
xchg
call
adc
das
sbb
test
mov
es
sub
les
sti
js
xor
loop
call
xchg
(bad)
sub
dec
call
dec
pop
mov
mov
mov
push
mov
test
mov
les
loopne
push
leave
push
mov
sbb
inc
sbb
push
or
call
cmp
test
adc
sub
inc
bound
inc
push
add
fistp
rep
push
mov
pop
movs
mov
(bad)
mov
es
xor
icebp
cmp
cmp
adc
mov
scas
and
mov
mov
cdq
push
idiv
mov
or
loope
inc
inc
mov
jne
cmp
fwait
jle
(bad)
pop
outs
pop
cmp
(bad)
xchg
pop
and
add
into
push
pop
lods
xor
rcr
push
hlt
pop
mov
adc
dec
inc
or
xchg
cmps
pop
pop
and
xor
push
mov
cdq
push
scas
pop
pop
rol
dec
adc
inc
stos
inc
shl
inc
and
push
push
loopne
fs
xchg
push
shl
sbb
sbb
jo
jecxz
and
sub
inc
adc
pop
jge
lods
pop
clc
or
jl
dec
add
mov
add
daa
test
xchg
leave
retf
and
ror
retf
xchg
loope
inc
outs
shl
push
rol
mov
gs
pusha
lahf
or
gs
outs
sub
push
inc
jo
adc
mov
pop
mov
pop
xchg
or
mov
loop
sbb
not
sar
pop
sub
pop
sahf
or
inc
or
test
dec
lahf
imul
clc
lea
ror
les
clc
sbb
std
js
pop
pop
sub
mov
sub
loop
not
push
sbb
jecxz
dec
in
xchg
push
rcr
mov
retf
jne
shr
push
(bad)
repnz
shl
pop
inc
lea
push
ins
add
add
retf
xchg
ja
and
sar
push
and
xor
cmp
add
dec
cwde
adc
add
addr16
(bad)
push
adc
loopne
stc
js
pop
cld
ins
inc
pusha
jmp
dec
or
hlt
stos
mov
push
mov
cmps
push
rcl
and
movs
mov
mov
add
cmp
push
test
es
out
push
push
cmp
aad
inc
sub
and
push
mov
setnp
inc
push
sbb
call
repz
add
dec
dec
aaa
xor
adc
mov
push
cmp
xchg
and
add
and
xchg
ss
or
aaa
add
and
mov
loopne
xchg
leave
add
dec
out
push
loop
mov
jns
mov
scas
inc
jmp
xchg
jecxz
scas
daa
push
push
xchg
xchg
and
dec
popa
adc
popa
daa
and
cmp
inc
adc
shl
sub
rol
push
loope
ds
mov
sbb
cmp
add
and
cmps
xor
sub
ds
cmp
imul
inc
dec
lock
mov
sub
into
mov
rcl
mov
or
in
dec
arpl
iret
dec
add
pop
sub
or
lea
dec
jmp
test
xchg
xlat
jmp
adc
and
push
sub
cli
ret
add
cdq
into
or
add
jmp
sub
sub
loopne
hlt
mov
add
repnz
jbe
mov
or
jl
lds
adc
gs
sub
add
pop
mov
or
loopne
sub
pushf
sbb
arpl
imul
sbb
cs
ds
xor
jmp
fist
jbe
ins
pop
mov
or
push
loope
push
sub
in
fist
mov
fcmovne
mov
fld
dec
push
push
add
movs
pushf
out
fiadd
cld
hlt
lock
mov
cs
pop
adc
adc
ror
jp
sti
jne
mov
add
fwait
cld
inc
loop
je
dec
mov
mov
fs
push
add
mov
or
push
adc
(bad)
sar
adc
push
aad
adc
aam
add
rol
stos
push
(bad)
and
imul
and
xor
mov
pop
je
pop
ss
data16
add
clc
dec
(bad)
arpl
pop
jmp
les
sub
mov
jle
xchg
aaa
imul
(bad)
pop
test
push
adc
push
loopne
mov
mov
popf
les
xchg
or
xor
fstp
adc
cdq
and
push
adc
mov
mov
imul
xor
sub
push
das
inc
xor
shl
inc
retf
imul
dec
lea
and
cdq
jns
and
fcom
cmp
pop
lea
jno
xor
add
cdq
push
xor
mov
xor
cmps
pusha
mov
add
cmc
and
shl
jmp
or
pop
js
push
into
sahf
and
and
dec
jo
ror
push
sbb
cmp
stos
lahf
mov
and
adc
pop
in
mov
lods
sub
ss
ret
sbb
xchg
pop
rcl
or
add
sti
push
sbb
in
xor
sub
mov
add
sub
idiv
sub
adc
xor
pop
call
gs
(bad)
scas
jg
and
jmp
pusha
sub
mov
push
jo
ins
jecxz
cli
mov
dec
sbb
cmps
ja
sti
jle
adc
xor
add
inc
sub
sahf
adc
and
and
or
fnstenv
mov
mov
sar
add
inc
mov
jb
icebp
shr
add
or
ins
and
sbb
je
je
shr
or
bound
pop
sbb
sub
add
adc
jge
mov
jb
test
scas
pop
jle
push
add
cmp
or
fnstsw
sti
sub
xor
in
push
ins
mov
jae
push
mov
cmp
outs
dec
cmp
(bad)
mov
pop
dec
js
xchg
cmp
imul
push
sub
fst
jbe
push
inc
(bad)
daa
xor
sar
sbb
movs
xchg
xor
cmp
lds
shr
push
fstp
add
or
into
movs
jbe
push
cs
sub
or
push
push
mov
jo
in
inc
or
jp
pop
add
push
xchg
pop
push
cmp
mov
inc
xor
inc
pop
sbb
movs
ficom
mov
aad
(bad)
jp
outs
or
xchg
and
sbb
push
ds
inc
sbb
loop
gs
inc
adc
fnstcw
pop
mov
sbb
or
jns
add
adc
mov
push
mov
neg
arpl
or
movs
dec
sbb
ins
loop
mov
aaa
add
or
icebp
cmp
jl
push
mov
popa
dec
and
xchg
loopne
and
and
and
adc
push
fcom
inc
inc
mov
cs
push
sbb
push
xchg
clc
push
push
ret
cmp
fcom
dec
movs
setp
push
fistp
push
push
mov
loop
in
and
test
clc
mov
adc
xchg
fisttp
mov
mov
loopne
es
loop
enter
inc
ds
and
pop
xor
dec
cmp
or
and
inc
rcr
lock
fnsave
and
cmp
push
fld
xchg
call
das
push
call
xchg
dec
ins
cs
ins
jae
push
cmp
lods
mov
hlt
or
or
fsub
adc
inc
and
out
jge
push
add
mov
sbb
sub
addr16
sbb
dec
ins
or
add
add
(bad)
stos
idiv
cmp
cmp
xchg
inc
lods
dec
mov
or
cmp
mov
add
(bad)
aas
pop
adc
pop
sbb
mov
movs
pop
add
je
arpl
pop
add
push
retf
inc
sbb
mov
test
add
push
inc
jo
or
(bad)
and
getsec
xchg
adc
movs
shr
lds
xor
mov
dec
imul
xchg
and
outs
adc
and
mov
lods
test
xchg
mov
mov
jl
and
inc
test
jo
sub
in
xchg
test
push
jbe
je
xchg
mov
mov
and
add
mov
test
and
push
inc
and
pusha
inc
inc
and
mov
ins
and
fstp
not
push
dec
push
sbb
sub
leave
sbb
iret
dec
adc
call
adc
aaa
and
add
ins
and
cmps
xchg
into
adc
cmp
push
rcr
ins
movs
jnp
popf
adc
sbb
mov
inc
in
push
aam
mov
scas
push
push
cmp
test
inc
inc
pushf
mov
add
pop
xchg
or
or
add
in
jae
and
fisttp
inc
mov
pop
into
js
frstor
mov
and
xchg
or
push
div
inc
or
(bad)
js
push
xchg
pop
xor
sbb
dec
pop
ret
sub
push
cmp
neg
mov
or
test
and
dec
cwde
sbb
outs
xor
mov
stos
test
jne
xchg
jo
and
cmp
outs
push
std
fmul
sbb
jle
pop
sbb
cmp
push
push
ror
cld
div
jmp
pop
mov
loope
bound
sbb
test
push
int
idiv
mov
nop
adc
lock
jns
push
into
test
adc
pop
mov
data16
call
test
imul
inc
rcr
add
cmp
sbb
cmc
out
imul
pop
pop
dec
popf
pop
(bad)
adc
repz
je
add
mov
sub
jmp
movs
jns
and
dec
jns
adc
out
push
jbe
and
or
or
out
cmp
adc
popa
jns
sahf
sbb
sbb
mov
sbb
push
add
test
mov
adc
sbb
stos
xchg
je
and
push
add
and
add
test
je
adc
pop
sbb
dec
sub
adc
pop
mov
xchg
adc
adc
es
mov
(bad)
xor
push
mov
and
sbb
sub
add
pop
or
ret
loopne
pop
imul
jb
call
fwait
or
dec
add
xchg
mov
and
and
fisttp
add
data16
ja
cmp
adc
xor
dec
pop
cwde
pop
inc
dec
sub
mov
scas
mov
xchg
jl
adc
es
enter
into
adc
adc
adc
ret
inc
pop
or
and
loope
jae
imul
mov
ret
pop
xchg
js
stos
pusha
xchg
xor
imul
mov
cmp
sub
or
imul
jnp
pop
cmps
xor
jae
jmp
and
sbb
ret
add
pop
dec
ret
cmps
leave
ret
or
imul
adc
jnp
cmp
or
sbb
rcr
or
int3
mov
mov
sbb
inc
movs
clc
mov
add
cmp
pop
popf
pop
jo
pop
retf
ret
push
sti
clc
push
inc
shl
xor
inc
sub
cmp
mov
mov
inc
inc
jg
sbb
and
pop
and
into
or
cmp
jmp
pop
and
sub
jmp
jns
pop
mov
and
cdq
mov
push
add
stos
adc
ret
push
dec
fidiv
xlat
mov
sbb
jmp
js
cmp
sahf
inc
push
movs
push
xchg
push
xor
sub
dec
(bad)
push
cmp
outs
ds
js
sbb
or
add
dec
dec
cmp
ds
stos
jne
mov
sbb
cmp
push
bound
test
adc
arpl
add
in
sbb
or
push
pusha
adc
mov
(bad)
aam
push
mov
loopne
or
(bad)
enter
xchg
mov
lods
push
xchg
xchg
dec
dec
inc
movs
mov
pop
popa
scas
xchg
stos
pop
gs
inc
adc
adc
mov
push
test
or
xchg
cdq
adc
in
mov
imul
push
enter
aad
xchg
scas
sahf
and
test
in
jns
mov
xor
pop
mov
push
iret
lock
sbb
cli
nop
(bad)
dec
ret
dec
sbb
cmp
sub
xor
shr
(bad)
jne
dec
add
pop
pop
inc
jle
pop
xchg
jne
push
ror
ret
fsub
add
gs
add
add
retf
sar
inc
out
adc
adc
clts
rcr
sub
push
movs
adc
loope
jno
out
mov
and
adc
ja
(bad)
or
push
sbb
push
pop
xchg
retf
add
imul
shr
sub
cmp
or
xor
repnz
push
sub
xor
fldcw
cmp
jae
push
aam
cmps
es
adc
mov
pop
push
cmp
sbb
mov
xor
add
loopne
cmp
jae
mov
xchg
cwde
lods
sub
xchg
call
jae
retf
inc
mov
sbb
add
lock
or
movs
adc
jp
fnsave
cdq
inc
sahf
rcr
add
cmp
cmp
pop
inc
sub
sub
mov
xchg
push
test
sbb
mov
loop
addr16
inc
mov
inc
mov
pop
inc
or
scas
pop
fld
xor
rcl
add
fisttp
and
and
ret
push
xor
pop
xor
xor
ret
push
add
mov
aas
push
and
pusha
xchg
add
push
inc
push
add
mov
mov
ret
push
jne
inc
test
and
mov
ror
mov
inc
and
outs
jp
push
adc
stos
sbb
jne
add
bound
adc
pop
or
icebp
ins
push
pop
movs
inc
add
idiv
pop
xor
dec
inc
sbb
and
lds
or
shr
push
sub
pop
jp
inc
bound
ins
nop
stos
add
cmp
and
dec
call
adc
and
mov
outs
lea
ret
push
mov
icebp
or
adc
inc
xor
ins
inc
daa
icebp
jg
xchg
pop
adc
scas
mov
mov
je
or
sbb
cld
cld
cld
push
je
push
je
push
je
push
out
sub
and
mov
les
jg
sub
pop
xor
fiadd
js
movlps
ficom
dec
adc
dec
adc
inc
sub
mov
add
shl
xor
shl
mov
mov
inc
sbb
xor
mov
push
ror
push
fwait
jl
jns
sbb
cmp
push
and
or
je
out
jno
inc
ss
ja
aas
mov
jae
aaa
call
mov
mov
mov
push
cld
jo
cmp
mov
pop
dec
push
sub
cmp
ror
adc
jns
cmp
test
pop
and
and
out
adc
jp
jp
hlt
or
dec
sub
test
add
push
jmp
out
popa
mov
cld
and
and
jmp
sbb
pop
daa
jl
cmp
push
lea
call
neg
sub
xor
leave
sub
add
data16
push
rcl
push
enter
or
jbe
sbb
loop
les
sbb
dec
xor
xchg
or
adc
or
(bad)
jno
je
add
and
rcl
adc
xor
or
or
xchg
mov
iret
jmp
push
mov
retf
rcl
or
bound
or
push
das
imul
dec
rcr
push
or
pop
ficomp
or
mov
jmp
sbb
pop
dec
jmp
ret
mov
or
mov
add
out
aaa
pop
pop
cli
adc
cmc
xchg
aad
std
inc
test
loopne
xchg
inc
xor
dec
xlat
adc
add
fadd
nop
hlt
add
or
lods
gs
mov
jmp
xchg
or
mov
cmp
pop
jae
adc
add
cmp
dec
inc
jecxz
push
jl
lock
jne
mov
sub
sbb
jno
dec
sub
jne
fisub
sub
stos
sbb
or
sbb
dec
cld
or
call
cmp
inc
aaa
mov
jnp
aaa
sti
mov
ins
push
mov
sbb
inc
add
das
fstp
inc
or
sbb
add
and
pushf
inc
push
test
adc
or
clc
pop
or
leave
ds
xchg
add
aad
lock
adc
call
adc
jl
adc
push
pause
and
adc
(bad)
cld
jo
icebp
or
mov
cmp
clc
jge
mov
retf
sub
arpl
xor
int3
daa
adc
cmp
cmc
ja
sbb
mul
pop
cmp
add
inc
lea
test
btc
xchg
rcr
and
popa
test
out
sbb
mov
sbb
(bad)
adc
xchg
in
push
add
dec
jle
mov
cmc
add
xchg
stos
out
mov
jne
add
add
push
adc
ret
add
cmp
lock
out
pop
xor
sub
lahf
(bad)
fist
repnz
mov
mov
fbld
push
lea
pop
sbb
cmp
mov
or
shl
cmp
adc
jne
pop
add
jbe
add
dec
inc
inc
jae
add
add
or
ret
push
or
cmp
and
in
push
dec
or
xchg
es
cmps
outs
add
sub
jecxz
(bad)
jg
and
adc
inc
cmp
inc
inc
adc
or
and
outs
adc
test
adc
mov
mov
mov
inc
xor
jl
(bad)
sub
sbb
add
or
push
aas
jne
retf
popa
mov
in
xor
xor
inc
fistp
sub
rol
add
mov
and
mov
call
or
aaa
push
cmps
or
mov
jmp
ficom
mov
xor
push
cdq
pop
cmp
jo
popf
sub
add
ss
cmp
xchg
or
ret
mov
xor
sbb
cmp
sti
aas
sbb
out
popa
jp
cmp
outs
cmp
test
sub
shr
push
arpl
or
adc
sub
dec
or
push
and
cmp
inc
push
movs
imul
and
mov
sbb
ret
jmp
mov
xor
jno
add
bound
add
push
dec
mov
bound
mov
sbb
fld
pop
icebp
or
xchg
jns
xor
mov
out
mov
(bad)
push
sahf
xchg
std
aam
fldcw
pop
add
sbb
arpl
sbb
add
or
jle
or
cs
xchg
nop
dec
and
gs
cmp
mov
push
or
or
js
les
add
or
push
mov
xor
jmp
or
or
or
adc
cmp
mov
push
add
mov
or
mov
and
mov
addr16
fadd
cmp
add
les
add
xor
bound
xchg
inc
call
cmp
test
xor
jne
loopne
test
sahf
loope
movsx
ret
sbb
or
mov
add
inc
add
in
jle
add
push
add
shl
adc
add
adc
dec
inc
add
nop
push
push
loopne
jbe
adc
imul
sbb
lds
mov
mov
dec
and
popa
or
test
movs
rcl
add
or
or
push
cmp
or
mov
sbb
outs
retf
adc
lods
in
(bad)
call
push
push
mov
std
sbb
dec
sbb
and
cmp
add
mov
jmp
xchg
fstp
retf
(bad)
or
sub
inc
(bad)
sbb
psubsb
mov
inc
in
or
push
mov
pop
or
shl
mov
sbb
fwait
mov
ret
dec
popf
and
push
mov
and
int3
rol
dec
dec
aam
icebp
(bad)
aad
pop
call
fidiv
adc
jb
ss
adc
mov
add
pusha
cs
jno
pop
sbb
push
daa
inc
push
pop
clc
mov
sbb
or
movs
pusha
or
xor
pslld
clc
(bad)
jl
or
inc
jo
aad
add
or
or
loopne
add
cmp
lods
mov
scas
jmp
test
add
or
add
push
sti
or
out
cmp
mov
dec
iretw
repz
cwde
push
nop
jae
sub
jmp
lock
xchg
pop
jecxz
add
int3
sub
mov
fnstenv
push
ds
test
xchg
sbb
movs
inc
pop
std
lahf
mov
in
dec
xor
push
xor
les
sahf
dec
or
and
imul
jmp
movsx
in
mov
ret
jle
fimul
or
add
jmp
fld
hlt
das
iret
sub
inc
sbb
call
call
call
jmp
inc
and
xchg
imul
les
ss
sub
and
xor
stos
add
movs
jg
xchg
fwait
pop
pushw
inc
jb
cmp
loope
outs
push
sub
nop
mov
mov
or
(bad)
(bad)
sbb
cmp
inc
fs
or
fisubr
shl
(bad)
jnp
inc
loop
lods
mov
lea
movs
scas
and
movs
mov
add
and
(bad)
jmp
dec
imul
mov
fidiv
and
sbb
cmp
(bad)
jbe
jg
pusha
mov
out
test
(bad)
pop
es
cwde
sub
movs
inc
movs
jge
bound
test
aad
mov
mov
mov
xor
push
adc
push
imul
ins
adc
lods
adc
pop
add
dec
pop
xchg
push
cld
(bad)
jns
leave
jle
dec
inc
js
xor
mov
iret
mov
gs
sub
push
sub
sbb
push
sub
(bad)
xor
ret
call
push
add
cli
hlt
add
mov
(bad)
cmc
add
inc
dec
test
sub
pop
clc
les
push
add
outs
or
jmp
sub
push
pop
push
cmp
dec
in
outs
mov
ret
push
imul
outs
lahf
push
aaa
sbb
xchg
jae
fld
(bad)
enter
lods
and
xor
pop
sbb
xchg
stos
mov
stos
dec
jo
out
xor
clc
jecxz
lods
outs
xchg
dec
shl
repz
xor
push
mov
jns
addr16
test
xor
mov
sub
push
push
sahf
dec
popf
mov
push
jle
mov
pop
nop
sahf
(bad)
cld
lahf
and
jns
mov
inc
fs
repnz
das
leave
mov
mov
jle
or
pop
jbe
pop
push
push
xchg
pop
cmp
or
les
add
pop
cmp
pop
test
rcr
adc
gs
sbb
lds
(bad)
pop
je
js
mov
inc
cmp
dec
loopne
adc
sbb
je
pushf
xor
push
popf
or
sbb
repnz
lahf
sbb
wbinvd
test
outs
add
cmp
adc
js
xor
cmp
pop
std
or
shl
add
mov
fidiv
xor
pop
retf
loope
call
mov
mov
icebp
push
test
adc
push
idiv
cli
jb
stos
je
stos
ins
loop
jb
push
femms
jmp
mov
pusha
inc
cmps
pop
mov
test
push
add
pop
inc
jbe
loopne
cmp
cmp
mov
ins
sbb
repnz
jg
push
cwde
push
test
imul
jne
addr16
jmp
mov
loopne
mov
nop
or
inc
iret
inc
ror
call
fstp
jo
xor
jne
ss
rol
movs
imul
test
adc
mov
loopne
enter
cmp
test
mov
mov
xor
jbe
xchg
sub
test
nop
xchg
imul
and
xchg
test
mov
nop
pop
xor
push
iret
sub
aam
mov
push
or
rol
into
push
jb
or
dec
dec
inc
fld
pop
or
daa
sbb
add
outs
or
cli
mov
loope
jmp
arpl
scas
das
aas
dec
add
fld
adc
push
pop
fmul
je
outs
inc
mov
cs
enter
add
and
adc
mov
push
stos
add
pop
jmp
xor
ret
aad
fnstcw
inc
cmp
mov
and
and
or
test
call
add
inc
retf
aas
add
xchg
push
or
sahf
and
pusha
psrad
jne
ret
and
pop
aaa
sbb
or
aas
xor
or
xchg
rcl
jb
push
leave
add
inc
fnstenv
fs
or
sbb
imul
add
out
test
and
sbb
adc
xor
or
or
sbb
mov
adc
out
pushf
mov
xchg
or
add
jmp
ffreep
punpckhwd
adc
adc
or
enter
mov
jmp
pop
mov
adc
ja
dec
cmp
xor
shr
sub
pusha
fld
lds
rol
adc
fimul
out
pop
rol
sbb
pop
sbb
hlt
push
xor
les
mov
ins
sbb
or
add
stc
xor
aam
jecxz
xor
cmp
push
add
cmp
sub
and
inc
hlt
pop
(bad)
mov
arpl
mov
jmp
mov
cdq
lea
mov
aas
dec
or
xor
outs
xor
and
aam
ror
and
cld
add
out
push
mov
dec
jne
cs
cmp
adc
mov
loop
pop
shl
ss
and
pop
pop
xor
pop
popf
and
mov
nop
(bad)
inc
push
fcomp
push
push
imul
jle
sub
popa
cmp
push
sub
mov
or
inc
fiadd
adc
mov
(bad)
outs
fnsave
out
add
mov
sbb
push
xor
(bad)
mov
call
daa
fmul
loopne
mov
or
inc
jo
cmp
test
ins
stos
pusha
or
pop
dec
rcl
icebp
mov
jo
pop
xchg
dec
cmp
test
cmp
test
pop
outs
or
fnstenv
fmul
xchg
inc
mov
and
sbb
outs
sbb
lods
lock
cwde
movs
test
pop
xor
mov
mov
add
aas
inc
sbb
outs
call
mov
(bad)
test
pop
xor
pop
jne
cmps
add
mov
pop
out
and
fisubr
and
mov
int3
pusha
jp
lea
(bad)
sahf
xor
adc
bound
icebp
pop
mov
add
loope
cmc
or
mov
fs
pop
fisubr
dec
push
nop
jbe
and
fiadd
mov
cmc
sub
sbb
sbb
rol
or
scas
adc
lea
(bad)
loope
add
adc
mov
sbb
mov
jmp
inc
sub
out
fwait
mov
fimul
cmp
pop
dec
cmp
in
dec
mov
dec
ins
ins
mov
in
mov
cmp
xchg
dec
and
inc
pop
imul
or
and
add
xchg
movs
(bad)
xchg
stos
add
mov
jmp
shl
mov
aaa
cwde
or
mov
ret
and
fadd
push
ret
push
stc
(bad)
pop
test
aam
retf
push
leave
cmp
mov
xchg
test
dec
jnp
nop
loope
add
inc
cwde
adc
add
lods
mov
mov
cmps
lods
arpl
mov
mov
mov
and
sub
lods
xchg
and
nop
lea
cmc
aaa
or
xchg
cmp
dec
test
and
pop
and
sbb
loopne
cmp
xlat
jbe
bound
and
add
adc
out
push
push
push
jg
icebp
nop
rcl
ret
add
inc
mov
xchg
inc
imul
(bad)
add
enter
(bad)
adc
and
adc
sbb
cwde
push
inc
std
out
or
sbb
adc
mov
push
push
fwait
(bad)
and
sbb
call
xchg
pusha
ins
cmp
icebp
xor
xor
pop
and
pop
push
lahf
xor
loope
in
popa
ins
imul
ins
push
sbb
mov
push
fild
mov
imul
ret
xor
push
pusha
add
sbb
inc
aam
push
mov
inc
imul
inc
push
mov
dec
add
pop
test
mov
xchg
mov
call
out
popf
fucomip
leave
cmp
inc
mov
xchg
stos
cmps
pop
mov
sbb
or
adc
cmps
xchg
cmp
and
mov
call
lods
lock
mov
or
aam
push
and
clc
sbb
xchg
lahf
jns
jno
mov
repnz
inc
xchg
add
xlat
jl
loop
into
imul
xchg
enter
jg
inc
or
and
push
mov
les
or
and
xor
rol
or
hlt
adc
clc
pop
stc
ds
push
add
je
or
xchg
test
add
adc
push
cmc
dec
pop
sbb
int3
fs
inc
jns
cwde
xchg
jge
les
mov
inc
dec
jne
jmp
add
outs
les
push
lods
push
add
pusha
adc
inc
repz
sbb
js
sub
fcmove
jmp
sbb
shr
les
and
sub
and
sbb
sub
test
or
mov
fstp
jg
sti
mov
add
jno
imul
fadd
lea
inc
mov
cs
ficomp
arpl
xlat
sbb
sbb
daa
dec
fdivr
sub
add
inc
cmp
stc
xor
(bad)
into
mov
and
mov
and
dec
pop
or
pusha
fs
mov
je
scas
dec
out
or
movs
add
sub
(bad)
enter
out
xchg
xchg
in
jno
inc
jbe
mov
push
les
pop
inc
nop
pop
(bad)
in
xor
mov
xor
test
adc
push
lock
sbb
fsubr
fs
test
lock
mov
std
xchg
and
jne
in
xchg
mov
in
dec
cmp
inc
repnz
imul
arpl
fdiv
jmp
push
cmps
sbb
and
push
in
push
pop
mov
addr16
inc
xor
dec
test
fst
enter
or
push
pop
cmps
loopne
pop
dec
sbb
mov
sub
xchg
or
add
xor
iret
inc
sub
mov
dec
test
ins
into
inc
pushf
into
ds
and
dec
enter
call
icebp
push
jge
sub
sub
enter
mov
imul
and
cmp
push
mov
rcl
in
xchg
cmps
lea
add
lahf
mov
push
add
loope
push
mov
mov
or
inc
jge
xchg
jmp
popf
scas
pusha
or
outs
rol
sbb
push
dec
dec
sbb
push
lock
xchg
mov
dec
xor
mov
jecxz
popa
inc
cmp
aam
adc
dec
jne
pop
mov
sbb
pop
jmp
and
scas
mov
jmp
push
ja
push
push
test
ja
leave
push
jbe
push
mov
in
imul
scas
pop
cs
pushf
mov
inc
and
mov
hlt
in
lods
mov
stos
push
sub
popf
push
jp
stc
push
ret
or
iret
adc
sbb
mov
push
push
push
iret
aaa
dec
mov
loop
cmp
mov
cmp
sbb
arpl
data16
cmps
sub
or
inc
imul
inc
fidivr
add
div
adc
ss
jne
and
adc
nop
(bad)
jbe
sub
dec
push
mov
add
xlat
es
rcl
push
aam
pop
movs
xchg
lock
and
movs
(bad)
dec
cli
test
xlat
lock
fwait
cwde
popa
bound
(bad)
cmc
test
mov
mov
mov
aad
or
fmul
mov
sub
xchg
push
dec
and
inc
push
or
mov
push
push
mov
xor
mov
and
nop
in
inc
push
dec
jne
fs
add
ss
mov
lea
(bad)
adc
inc
scas
outs
add
test
clc
iret
add
pop
pusha
xchg
addr16
icebp
aam
fnstsw
sub
push
(bad)
(bad)
jmp
loopne
addr16
mov
cmp
cmc
ins
arpl
lods
call
imul
add
in
add
sbb
mov
ins
push
dec
add
mov
jbe
push
adc
inc
nop
sti
sub
pushf
pop
sub
jno
cmp
dec
adc
int3
add
push
mov
ins
nop
pop
loope
pusha
mov
leave
push
movhps
mov
mov
xor
out
ror
adc
dec
shr
jmp
xor
jb
adc
mov
fisub
and
push
movzx
lods
ret
int3
(bad)
and
mov
movs
or
adc
jnp
xor
sbb
xor
sti
push
sub
push
rol
or
jg
aam
inc
fcomp
jb
mov
xchg
add
arpl
imul
outs
xor
dec
sbb
jae
pop
repnz
mov
or
sbb
pop
push
dec
pop
or
push
imul
and
cmp
xor
out
sub
es
sbb
push
das
or
push
sub
xlat
jne
add
(bad)
fidivr
push
movs
cmp
push
repnz
jbe
cmp
loop
bound
inc
push
xor
mov
movntps
mov
rcr
cs
or
mov
dec
(bad)
js
dec
sbb
jns
and
cmps
inc
out
shl
and
inc
mov
sub
mov
pop
test
mov
lods
push
les
cmp
jb
mov
xchg
hlt
mov
and
mov
mov
push
mov
sub
mov
xor
add
or
out
or
jno
pop
cmc
in
aam
xchg
cmp
mov
mov
xor
mov
push
adc
push
(bad)
jge
pop
test
in
jge
cmps
mov
loopne
int3
push
nop
outs
mov
aas
xor
or
dec
repnz
adc
pop
xor
cwde
and
loopne
add
imul
dec
jl
xchg
and
jno
(bad)
jg
add
fsub
push
and
jb
jmp
adc
sub
inc
test
int3
fadd
loop
jl
jae
cmp
or
add
daa
xchg
rcr
int3
loope
pop
clc
inc
cmp
cld
or
or
push
xor
cmp
add
or
or
call
loopne
test
push
and
adc
inc
inc
sar
mov
mov
je
sub
dec
xchg
inc
add
push
push
mov
dec
sbb
repz
jge
push
inc
pusha
and
nop
std
pop
pop
popa
std
cmp
add
cli
adc
lea
aad
push
mov
inc
cmc
sbb
jno
and
push
test
xor
mov
adc
add
jg
push
(bad)
mov
mov
repnz
fld
mov
dec
jmp
inc
enter
loope
and
cmc
mov
mov
outs
inc
retf
add
add
mov
or
xor
inc
jnp
or
cmps
(bad)
jne
xor
lods
repnz
cli
and
add
adc
mov
jb
fsubr
sub
es
pusha
cmp
or
push
xor
cmp
sub
dec
xor
or
es
jg
es
dec
dec
cmp
add
outs
inc
mov
jmp
or
mov
ds
aam
int
xor
cld
push
ret
jbe
adc
or
and
push
mov
jmp
jne
mov
clc
cmp
fimul
push
push
adc
push
or
mov
or
pop
inc
cmp
or
test
ja
or
add
loop
and
or
push
or
test
mov
aas
or
and
jne
fwait
and
pop
mov
xlat
inc
shr
outs
add
xor
js
or
sub
inc
mov
js
test
inc
jbe
and
(bad)
shl
or
xchg
push
cdq
(bad)
dec
lods
mov
dec
or
xchg
xchg
xor
mov
add
xchg
mov
pusha
adc
xor
pusha
out
inc
cdq
jp
sbb
adc
stos
sub
pop
xchg
sub
pop
push
jo
xor
fiadd
jmp
pop
jmp
or
mov
pushf
test
rcr
shr
and
ins
out
add
mov
push
stos
fidivr
retf
test
fst
inc
fdivr
pop
adc
ins
mov
gs
daa
push
xchg
sub
adc
xchg
push
sub
jmp
cmp
rcl
popa
and
mov
inc
je
or
ss
inc
or
movs
and
mov
sub
jg
bound
or
shl
xlat
das
jne
lock
add
out
push
ins
mov
pop
add
loopne
aaa
push
daa
dec
add
and
push
nop
fs
xchg
dec
lea
jg
pop
mov
xchg
ds
aas
(bad)
mov
jns
mov
ins
push
sub
xor
jle
jecxz
dec
mov
cmp
dec
inc
mov
sbb
ficom
mov
les
popa
cmp
lods
sub
ret
sub
and
div
not
and
jnp
xor
xchg
xor
cs
ret
or
cld
and
sar
xchg
or
test
mov
repnz
xchg
pop
mov
xchg
mov
push
adc
and
push
xchg
xchg
outs
das
je
xchg
pop
sub
repnz
inc
int3
pusha
ins
xor
add
push
js
imul
add
jnp
fwait
and
jb
and
xor
aas
adc
mov
inc
push
outs
retf
xchg
xchg
jp
ins
arpl
inc
mov
fbstp
dec
popa
lods
xchg
push
retf
xor
jb
sub
(bad)
jmp
(bad)
push
in
sub
cmp
popa
test
movs
fnsave
ss
test
xor
cdq
jb
inc
rol
test
outs
inc
mov
or
adc
ja
aaa
sar
jmp
adc
nop
retf
jmp
and
jmp
movs
repnz
jmp
inc
aas
and
push
add
cmp
mov
add
inc
mov
pop
xchg
aam
cs
push
jne
add
add
sbb
mov
pushf
cmp
mov
mov
cmp
or
push
ins
faddp
mov
add
pop
push
mov
cmps
shl
xchg
(bad)
adc
(bad)
daa
sub
fs
sbb
mov
shl
mov
pop
or
inc
cmp
inc
dec
lahf
mov
sub
pop
mov
(bad)
fbstp
cmp
ret
add
mov
stos
les
retf
and
cmp
and
push
and
adc
add
int3
loop
ja
push
dec
fadd
out
add
xchg
imul
inc
lock
aaa
xchg
xchg
fcomp
in
mov
xchg
inc
xor
push
and
shl
aaa
pop
jmp
mov
sub
mov
dec
mov
pusha
fimul
bound
fwait
addr16
xor
add
or
pop
popf
xor
leave
add
in
or
or
in
in
pusha
sub
repnz
clc
mov
sub
aas
pop
xchg
sbb
enter
fwait
in
add
dec
push
jbe
inc
mov
sub
imul
jbe
movs
pop
sub
daa
mov
inc
dec
mov
xchg
pop
dec
aas
add
mov
or
fs
xor
inc
fsub
arpl
mov
or
stos
lods
sub
(bad)
push
das
or
and
mov
repz
xor
(bad)
xlat
leave
xlat
jne
push
sub
ret
xor
imul
add
sbb
or
not
dec
movs
jb
xor
mov
jb
inc
or
pop
mov
push
cmp
rdpmc
aas
pop
push
mov
mov
add
dec
mov
sbb
mov
ror
adc
pop
mov
or
jmp
shr
xchg
sub
enter
jmp
fsubr
cmp
retf
lock
cld
jmp
sub
jmp
sub
pop
adc
sbb
adc
or
jmp
xor
xchg
add
lock
sbb
jo
push
sub
cmp
les
jb
rcl
adc
call
scas
mov
(bad)
retf
popf
out
sahf
rcr
loopne
out
push
xchg
mov
add
aam
ror
and
rcl
pop
daa
push
push
test
adc
clc
pop
call
leave
cmp
data16
adc
sbb
jl
scas
add
add
or
mov
or
(bad)
test
(bad)
in
clc
jp
popa
ins
xchg
push
pop
push
pop
pop
mov
fsub
out
add
data16
cmp
jne
or
push
mov
clc
add
sbb
xchg
rol
pop
mov
xchg
add
and
cs
and
hlt
popa
jne
push
ret
lea
or
jmp
popf
lods
sub
add
ins
push
ins
iret
sub
pop
je
call
inc
sub
out
jl
or
add
xchg
jmp
adc
inc
cmp
jnp
cmp
mov
xor
and
jmp
push
mov
retf
sub
int3
gs
lods
retf
sbb
xlat
lods
pushf
add
aas
jne
mov
xchg
clc
das
dec
hlt
jns
lock
iret
je
and
test
push
xor
sub
dec
fsubr
lods
test
cmc
push
jp
clc
popa
ins
in
xchg
and
xchg
push
and
ins
and
cdq
icebp
push
aaa
inc
out
repnz
fsub
sub
aaa
jbe
xlat
ins
out
mov
cld
cld
mul
or
pushf
inc
fs
sub
xlat
sub
cmp
adc
iret
stos
test
dec
arpl
inc
sbb
cmp
fidiv
js
popa
jnp
pusha
pusha
cmp
jmp
daa
inc
jl
dec
xor
or
xchg
add
and
cmps
cmp
test
sar
pop
sub
das
pop
inc
les
retf
dec
xchg
xor
out
jge
nop
mov
mov
sbb
push
sub
lock
or
sbb
repnz
sub
in
fwait
add
stos
add
dec
cmc
leave
xchg
pop
in
jne
clc
pop
pusha
add
jne
ret
dec
pop
sahf
cmps
mov
je
sbb
ror
fs
(bad)
push
push
add
inc
test
movs
jmp
or
and
repnz
pusha
jbe
sub
sub
cs
sbb
mov
hlt
xor
bound
fist
cmc
dec
jmp
stos
jl
(bad)
pop
(bad)
cmp
xchg
xchg
add
mov
and
inc
das
cmp
ffreep
hlt
push
dec
gs
imul
or
pop
pop
and
and
mov
ins
inc
int
add
clc
or
xchg
xchg
or
add
or
fcomi
inc
ror
add
pusha
inc
daa
outs
pop
dec
adc
dec
jmp
loop
sub
popf
dec
mov
out
sbb
cmp
add
mov
mov
mov
inc
lea
aam
cdq
add
and
arpl
fisub
mov
pop
lds
sub
push
fstp
call
inc
(bad)
xchg
push
stc
jbe
push
leave
sbb
lds
je
sub
es
rol
nop
mov
ins
mov
sar
and
jno
mov
cmc
adc
inc
mov
xadd
jmp
or
dec
in
sbb
xor
adc
fcomp
xchg
xlat
sbb
mov
fsub
cmp
test
movs
push
xor
adc
mov
jno
mov
pop
push
and
sub
enter
adc
push
mov
cmc
outs
ret
test
and
cmc
cmp
das
or
fidiv
lea
xchg
push
cmp
jbe
call
and
imul
add
cmp
adc
inc
push
adc
dec
inc
or
in
stos
sahf
movs
arpl
sbb
pop
xor
adc
stc
xor
sub
sbb
rcr
retf
neg
add
add
je
jmp
imul
lods
into
mov
mov
add
call
add
aaa
pop
jnp
ds
push
fcmovb
out
or
retf
js
xor
add
pop
pop
jbe
push
sbb
pop
sbb
retf
call
add
sbb
addr16
add
or
sub
repnz
sub
outs
push
cmp
movs
sbb
leave
dec
or
xchg
sub
add
add
xor
jb
lea
xchg
mov
aas
retf
xor
mov
add
mov
pop
stc
cmc
nop
adc
add
outs
movs
test
pop
inc
rol
popf
push
inc
or
sbb
inc
mov
fcom
shl
add
sbb
cmp
cmp
push
pop
fs
pop
cld
mov
pushf
in
retf
inc
jmp
daa
jne
fmul
shl
adc
call
or
xchg
mov
hlt
adc
retf
add
rol
sti
shr
inc
lods
fnstenv
push
or
lods
outs
pusha
jne
inc
dec
mov
sub
sbb
sbb
retf
nop
jns
sbb
jae
or
pop
mov
aam
or
outs
lock
jb
cmps
or
push
dec
or
fmul
int
xor
push
fcom
repz
xchg
test
addr16
jmp
inc
sbb
dec
push
sub
xor
cmp
mov
xchg
mov
pop
mov
test
or
jae
add
test
into
movs
sub
ret
sahf
jmp
sar
daa
push
(bad)
mov
stc
jmp
sbb
cmp
test
jl
cmc
adc
pop
ins
fdiv
mov
sti
mov
mov
jmp
xchg
into
inc
ss
rol
and
pop
test
pop
add
ror
ss
and
sbb
pop
xor
and
in
sbb
sbb
ds
pop
cdq
ret
xchg
enter
shr
or
cmp
repnz
sub
dec
mov
xchg
pop
adc
adc
lods
xchg
xor
adc
shr
or
xchg
jnp
cmp
cmps
push
xchg
shr
fadd
pop
mov
ret
jb
push
mov
retf
xor
cmp
pushf
gs
dec
or
out
inc
sub
aaa
lahf
and
push
pop
imul
adc
iret
fmul
enter
push
dec
inc
xor
sub
or
jle
xchg
xor
push
retf
arpl
push
push
and
std
mov
push
fiadd
mov
jmp
loope
sub
arpl
jg
pop
jae
daa
mov
pop
inc
mul
jp
rcr
cwde
push
daa
jnp
rcr
ret
and
add
rol
sbb
xchg
pop
stos
dec
xor
or
mov
cmp
and
aad
pushf
push
inc
push
mov
inc
adc
gs
es
test
xor
adc
or
imul
add
bound
or
sbb
retf
mov
mov
sahf
push
dec
or
aad
dec
daa
rcr
pushf
je
adc
mov
fimul
sti
inc
jbe
movs
fisub
inc
inc
movs
inc
mov
cmp
pop
lods
movs
out
retf
dec
xchg
or
test
inc
mov
sahf
scas
xor
sub
inc
adc
and
cmp
mov
ficom
pop
inc
inc
cmp
dec
inc
je
mov
add
adc
push
cmps
adc
sbb
rcl
test
aad
jb
push
fiadd
enter
sub
and
push
sbb
ja
hlt
adc
sbb
xchg
pop
inc
add
popa
or
data16
push
jp
add
mov
pusha
call
into
dec
repnz
pop
sbb
push
out
push
sub
icebp
push
and
jne
int3
cmps
adc
stos
sub
sbb
sbb
sbb
xor
mov
push
clc
or
daa
fst
pop
inc
jmp
add
adc
push
(bad)
mov
xor
rol
push
(bad)
and
jmp
dec
dec
mov
mov
repnz
push
nop
pop
xchg
dec
loopne
xor
outs
imul
or
mov
dec
je
add
sbb
add
add
push
xchg
push
mov
fsubr
push
pop
jmp
xchg
outs
and
pop
nop
mov
mov
pop
adc
cmp
or
xor
cmp
mov
sub
fmul
pop
pushf
neg
push
xor
loopne
rcl
and
les
mov
scas
push
aad
das
push
ret
idiv
es
mov
push
cmps
add
or
movs
sar
inc
popf
or
sub
or
cs
or
sbb
add
pop
shl
fstp
push
adc
inc
clc
or
pop
mov
mov
adc
push
pop
sub
nop
in
sti
cmp
add
dec
lea
sub
add
jae
adc
inc
pop
sbb
or
sub
mov
es
enter
add
xor
test
add
inc
push
cmp
and
mov
leave
scas
test
adc
leave
pop
inc
dec
and
(bad)
cmp
add
push
jmp
pop
js
push
leave
das
in
retf
push
fisttp
cmp
add
pop
pushf
push
mov
cmp
out
push
dec
push
push
jae
and
(bad)
xor
sbb
and
sti
out
and
mov
jne
xchg
lock
and
(bad)
aas
aas
add
add
ja
jne
sub
cli
or
imul
data16
sub
xor
retf
cmp
and
in
push
std
ffreep
inc
push
movs
xlat
sbb
add
jo
and
data16
les
mov
call
enter
call
add
or
in
and
sbb
cmp
enter
inc
and
add
inc
and
push
dec
bswap
push
or
mov
and
mov
pop
retf
fild
into
xor
jge
adc
mov
sub
xchg
push
scas
mov
inc
ret
dec
inc
push
add
sub
and
enter
adc
jo
jbe
mov
push
push
jmp
test
adc
dec
popa
out
push
(bad)
jno
dec
add
pop
cmp
daa
sbb
xor
dec
dec
stos
sub
and
xchg
lea
add
(bad)
or
movs
daa
push
loop
or
push
fdivr
xchg
icebp
dec
sub
or
test
sbb
dec
sahf
and
test
or
fwait
and
jmp
dec
cmp
std
popf
(bad)
or
or
adc
or
shr
ja
push
jmp
mov
scas
ins
and
test
or
jecxz
stc
dec
pop
imul
pusha
xchg
addr16
(bad)
pop
xchg
inc
icebp
icebp
cmc
enter
lahf
mov
cmp
shr
mov
and
and
xor
lods
or
sub
xor
add
arpl
jmp
push
pop
daa
je
add
sti
xchg
pop
xchg
xchg
movs
xchg
mov
ret
jne
xchg
xchg
push
je
aad
add
push
xor
lods
sub
test
xor
pop
mov
mov
js
outs
shr
add
(bad)
adc
push
sbb
xor
scas
stos
sbb
push
retf
jmp
sti
inc
and
push
sub
xor
add
or
mov
movs
enter
mov
push
adc
dec
push
or
das
cmps
dec
imul
bound
sub
into
outs
(bad)
and
push
push
pop
fisub
mov
add
and
in
inc
cmp
add
ds
mov
inc
lods
or
xchg
rcl
jge
xchg
outs
sub
jecxz
sbb
je
mov
sbb
hlt
or
out
adc
jo
ror
nop
pusha
and
pop
call
or
jo
clc
inc
or
mov
sbb
sbb
and
dec
inc
xchg
add
aas
sub
(bad)
mov
sbb
lea
lea
inc
add
test
adc
inc
aad
ret
rcl
pop
xchg
push
pop
xchg
pop
pop
add
push
xor
mov
adc
or
dec
or
ret
cmps
outs
or
sbb
ds
push
or
mov
iret
add
cs
jmp
cmp
adc
fiadd
in
push
mov
ja
xor
ins
pop
adc
iret
mov
and
out
jae
mov
cmp
push
clc
sahf
add
popa
inc
test
jne
dec
xchg
and
shl
mov
and
cmp
sbb
scas
nop
adc
pop
test
js
sub
shr
imul
and
ins
rcl
hlt
scas
sub
xchg
inc
sbb
lods
cmc
call
repz
shl
or
mov
add
adc
(bad)
add
sub
cmp
aam
les
inc
addr16
dec
mov
mov
mov
pop
out
push
bound
and
(bad)
retf
loop
jne
movs
retf
xchg
data16
push
gs
pop
fild
(bad)
xlat
pop
jp
push
loop
clc
sub
dec
push
or
adc
cmp
add
inc
sbb
ror
loopne
sbb
rol
push
mov
xchg
pop
sbb
adc
sbb
lahf
mov
ret
sub
dec
sti
xchg
sbb
retf
push
sub
push
xor
jb
bound
pop
test
outs
popa
je
push
je
jae
inc
hlt
ins
adc
inc
or
fsubr
outs
push
xor
jb
in
outs
je
or
je
adc
addr16
add
loopne
or
nop
loopne
std
push
mov
mov
and
retf
cmp
cmc
mov
jbe
or
mov
pop
add
or
pextrw
add
gs
stos
xchg
pop
sub
sbb
and
and
imul
inc
or
xor
jecxz
inc
add
push
xchg
fwait
pop
mov
push
aaa
xor
push
arpl
pop
outs
cmp
cmp
and
into
inc
jnp
mov
jmp
xor
pop
mov
jae
les
sbb
jmp
mov
jg
ret
mov
mov
cmp
test
sar
sub
or
xchg
mov
mov
push
or
add
or
adc
mov
or
sub
sbb
mov
sub
pop
mov
or
add
sub
imul
cmps
pop
sub
cdq
add
mov
dec
xor
mov
mov
daa
mov
cmp
into
ja
sbb
or
lea
rcr
jg
pop
gs
push
cmps
sub
ins
aad
dec
pop
loopne
fcom
jl
gs
enter
out
ins
lods
jno
loopne
and
sti
push
or
inc
lods
cmc
xchg
pop
cmp
adc
sub
add
fs
dec
add
xor
or
sbb
fs
inc
inc
gs
push
cs
lahf
addr16
loop
cld
dec
push
cmp
inc
pop
shl
mov
scas
xchg
out
stos
out
jle
inc
sbb
nop
inc
jmp
push
mov
inc
add
sbb
jge
and
daa
add
inc
dec
fisttp
push
pop
and
xchg
pop
or
stos
jne
sub
in
imul
test
add
add
inc
fadd
ret
add
shr
cld
push
jmp
sub
rol
jl
(bad)
adc
test
push
xor
scas
jnp
gs
and
cwde
cdq
mov
inc
adc
call
sbb
xchg
inc
cmp
jnp
loop
inc
mov
shr
out
push
cmp
xchg
rcr
cdq
lea
addr16
loop
mov
inc
jge
pop
xchg
aad
mov
inc
sub
dec
mov
jo
fs
add
sbb
jl
pop
xchg
sub
or
clc
clc
jmp
pop
add
xor
rcl
cmp
or
add
inc
mov
mov
jl
pusha
mov
nop
icebp
clc
and
nop
aam
test
(bad)
mov
cmp
cmp
(bad)
push
sub
dec
jmp
shr
pop
dec
push
jge
out
adc
xchg
inc
inc
inc
mov
or
push
pop
ja
aas
sub
jmp
sbb
movs
add
jo
xchg
sahf
add
jg
push
push
push
push
pop
jmp
xor
inc
add
add
inc
sbb
mov
xor
sbb
xchg
sub
pusha
(bad)
cli
pop
add
cmps
push
inc
es
mov
or
add
inc
inc
sbb
dec
inc
sbb
retf
push
adc
xor
rcr
pop
gs
pop
cmp
inc
fs
adc
push
retfw
jae
pusha
popf
cmp
xchg
xor
mov
in
sbb
inc
mov
cmp
push
mov
add
sub
movs
pop
sub
inc
out
dec
dec
scas
sub
popf
jmp
mov
dec
daa
or
pop
add
rcl
inc
or
neg
push
pop
leave
push
adc
jb
cmc
cmp
sbb
and
in
pop
dec
xor
mov
cmp
push
jmp
loope
adc
xchg
sbb
das
ss
add
neg
mov
pop
call
mov
call
inc
pop
mov
inc
push
(bad)
aaa
cwde
xor
jne
test
pop
pushf
inc
push
or
es
push
jae
xor
xchg
push
fisub
inc
lods
xchg
in
add
outs
test
push
cmp
inc
cmp
add
jmp
pop
cdq
inc
push
sbb
xor
enter
lods
retf
sub
and
dec
shr
loope
nop
pop
fist
add
inc
or
pop
test
or
nop
mov
add
sbb
test
call
jecxz
xchg
mov
jbe
xchg
mov
leave
dec
inc
mov
inc
mov
and
xchg
in
push
(bad)
push
fcomp
xchg
femms
repz
dec
jne
aaa
loopne
add
mov
or
pop
or
mov
pusha
jne
clc
pop
movs
fisubr
pop
rcl
loope
stos
pusha
test
cmp
push
es
ret
sbb
imul
add
fcom
xor
or
xor
lock
push
lock
iret
das
add
mov
(bad)
mov
mov
push
inc
jmp
loopne
or
push
dec
shl
add
xor
adc
or
xor
jecxz
jnp
push
pop
pop
adc
add
lods
sar
jb
cmp
jne
inc
push
adc
rcr
popa
cmps
dec
imul
fs
push
ins
xlat
sahf
or
popf
sar
(bad)
push
repnz
add
or
dec
movs
sbb
ss
pop
push
mov
ss
add
push
add
inc
jmp
or
repnz
mul
push
lock
add
jecxz
push
or
adc
pop
fdivr
mov
adc
push
push
add
or
or
add
shr
push
pop
mov
cmp
sub
jne
test
fs
inc
fidiv
repz
movs
add
mov
push
ins
pop
nop
push
pusha
jae
loope
pop
imul
jle
ret
sti
or
dec
dec
sbb
fimul
call
sbb
jmp
clc
cmp
sbb
and
rol
add
adc
in
jne
dec
inc
pop
loopne
cmc
mov
push
test
xchg
adc
ss
cmp
(bad)
cmp
icebp
add
sub
adc
addr16
sbb
retf
cmp
pop
or
in
shl
retf
retf
movs
cmp
ror
push
pop
sub
jo
cmp
cmps
lods
retf
ret
das
push
test
xor
in
stos
push
and
adc
ret
fimul
nop
and
pop
pusha
sar
add
mul
sub
xor
cmc
mov
mov
lock
push
inc
push
xor
(bad)
cmp
ins
js
outs
mov
xchg
cmp
imul
aaa
cmp
xor
sar
ins
and
pop
clc
adc
xor
loopne
add
jb
adc
inc
movs
add
clc
sub
xor
xchg
xchg
xor
ds
loopne
test
adc
jmp
mov
cmp
sub
xor
xchg
addr16
cmp
xor
push
lds
add
cmp
lods
pop
adc
test
pop
mov
imul
add
add
loope
jg
mov
sbb
scas
adc
imul
add
adc
add
add
lods
add
pop
or
outs
lea
mov
or
and
retf
das
loopne
js
xchg
sbb
xor
ins
out
mov
jnp
test
mov
and
xor
outs
in
ret
inc
in
and
mov
dec
imul
lahf
and
mov
mov
mov
out
rcl
push
sbb
test
and
scas
sbb
adc
sbb
enter
adc
inc
pop
add
xchg
jne
push
std
ins
xor
xlat
sub
adc
mov
cmp
retf
and
mov
xor
addr16
add
xchg
jno
imul
xor
xor
dec
dec
mov
test
sar
jne
mov
and
fld
sbb
inc
mov
mov
cmp
adc
daa
cmp
or
lods
(bad)
je
popa
cmp
adc
(bad)
and
rcl
out
push
loope
es
or
fadd
lea
in
popa
cmps
inc
mov
xchg
aad
sbb
loope
and
(bad)
mov
pusha
adc
mov
mov
push
dec
or
jne
adc
or
xchg
ror
(bad)
adc
pop
pop
fild
mov
push
test
inc
jo
test
sub
test
fmul
je
add
imul
cs
rcl
or
xchg
aam
std
ds
fs
push
(bad)
push
adc
add
and
jo
pop
fwait
imul
aaa
stos
js
jp
(bad)
loop
add
mov
push
push
dec
daa
add
push
test
adc
inc
mov
or
stc
in
dec
or
and
jl
mov
hlt
inc
clc
inc
cld
xor
or
jo
cmpxchg8b
lock
cmp
adc
sbb
and
rol
adc
imul
or
imul
jge
and
(bad)
movs
push
movs
pusha
retf
push
push
gs
dec
sbb
sub
mov
pop
add
adc
sbb
pop
mov
int3
dec
inc
push
das
pop
adc
outs
or
aam
imul
jmp
xchg
mov
imul
dec
add
pop
push
std
or
or
push
push
das
in
inc
sub
sub
mul
and
xor
or
mov
mov
cmp
sar
and
rcl
xchg
and
dec
mov
add
sub
in
xchg
adc
fs
xchg
pop
aas
sbb
je
inc
or
jnp
dec
ss
and
jle
inc
punpcklwd
push
pop
int3
or
pop
or
xchg
fcom
leave
xchg
pop
add
adc
leave
add
add
pop
pop
add
xchg
pop
leave
xchg
adc
leave
xchg
pop
leave
nop
push
or
xchg
pop
leave
xchg
adc
leave
xchg
pop
leave
or
adc
adc
call
or
push
cmp
cdq
into
sar
add
das
or
jmp
jp
mov
call
loop
push
aaa
push
pop
cmp
jmp
inc
sbb
jbe
and
rcr
or
je
retf
(bad)
jg
fwait
inc
pushf
push
sub
lods
dec
loope
aaa
lds
les
and
pusha
inc
xchg
cli
pop
jle
icebp
dec
loopne
mov
aas
push
inc
jbe
icebp
popf
dec
loope
mov
add
pop
lea
les
push
mov
sbb
jo
cmp
in
xor
push
push
pop
or
mov
dec
dec
loop
inc
adc
xchg
ror
movs
pop
mov
fcmovu
fwait
mov
loopne
xor
mov
push
push
jbe
jne
and
in
mov
loopne
jo
jge
push
jmp
sbb
mov
adc
test
and
dec
call
push
dec
call
inc
sub
pop
and
pop
sbb
lock
in
rcl
mov
or
aam
cmp
mov
and
jb
add
sub
cld
rcr
add
adc
pop
push
movs
pop
push
cdq
iret
inc
cmp
mov
es
jle
aaa
cmps
xlat
or
sub
jmp
cld
test
imul
shr
sbb
pop
cmp
rcr
dec
cs
or
jae
pop
or
ds
mov
jnp
add
ins
mov
cli
xchg
sbb
dec
dec
aas
dec
iret
mov
sahf
je
inc
adc
jl
icebp
sub
fdiv
popa
xchg
lock
sti
in
mov
mov
cmp
iret
jmp
gs
mov
and
or
imul
enter
push
imul
jnp
and
js
lds
add
sub
jmp
mov
in
pop
xor
adc
call
lahf
ins
push
add
xchg
ret
push
jns
mov
adc
aad
dec
pop
inc
outs
dec
scas
inc
push
iret
cdq
mov
mov
or
sbb
sahf
in
adc
neg
push
ins
jl
adc
fdiv
mov
xchg
xchg
mov
inc
mov
add
scas
pop
xchg
stos
rol
jns
pop
and
xor
and
adc
das
mov
push
jb
mov
mov
push
xchg
je
push
add
cmp
dec
cmps
ror
(bad)
call
push
cmps
xor
pop
outs
ret
adc
mov
fld
in
test
test
(bad)
jle
add
(bad)
test
ret
adc
test
fsub
mov
cld
add
sbb
xor
adc
cwde
cmp
bound
call
sub
sub
loop
fimul
sti
xchg
jo
sub
inc
mov
and
xchg
or
sub
leave
adc
paddb
xchg
or
dec
and
add
into
push
cmp
lods
jmp
cmp
xchg
lock
shr
xor
js
and
rcr
(bad)
sub
daa
inc
repnz
jp
push
sub
adc
dec
fldcw
jecxz
pop
(bad)
push
mov
sub
sbb
mov
js
push
push
stc
and
push
icebp
push
fcmovu
push
ror
and
std
jge
adc
push
inc
push
or
mul
dec
sub
fsub
in
retf
movs
jnp
aaa
call
or
test
dec
sub
loop
mov
mov
imul
inc
lods
push
mov
push
mov
les
fld
jmp
jmp
xor
mov
jo
sbb
push
imul
les
mov
scas
adc
mov
and
pop
mov
sbb
push
das
outs
cmp
pop
test
push
jno
push
rol
mov
push
mov
jns
pop
and
mov
adc
mov
dec
mov
aam
hlt
add
into
jb
push
sub
push
adc
pop
hlt
retf
sbb
add
mov
or
mov
scas
out
or
add
sbb
sbb
sbb
cmp
push
lds
mov
add
shl
jnp
arpl
xor
mov
mov
or
je
cmps
xchg
sbb
neg
out
ror
add
push
les
(bad)
push
inc
movs
sub
push
jle
call
and
movs
mov
into
retf
mov
aad
mov
cmp
jecxz
mov
xor
daa
cmp
fist
sbb
add
inc
repnz
repnz
push
hlt
push
add
fild
sbb
popf
iret
mov
pop
push
pop
push
mov
jnp
retf
daa
loopne
ret
inc
push
add
cmp
pop
clc
push
ds
add
push
cs
mov
sub
add
or
(bad)
jge
dec
jp
mov
xchg
mov
popa
cs
sbb
dec
ss
add
imul
inc
leave
push
or
push
clc
mov
xor
into
push
ror
inc
push
mov
sti
ret
sbb
and
push
cs
pop
pop
das
add
xor
mov
clc
push
sbb
jmp
xchg
push
dec
adc
lock
mov
xchg
xor
lock
xchg
xor
push
jmp
mov
movs
arpl
imul
gs
jne
add
jecxz
shr
and
add
fldenv
repz
and
rol
jne
add
cmps
daa
push
repnz
push
cmp
(bad)
dec
fsubr
int3
xchg
es
or
push
div
lods
sub
inc
pop
mov
inc
cmps
pop
add
loopne
sti
inc
popa
(bad)
push
jne
cmp
leave
and
sub
adc
loop
popf
jbe
pop
inc
mov
push
xchg
or
lods
mov
push
sbb
bound
sbb
cmp
jb
and
sahf
fld
adc
jno
pop
adc
or
mov
inc
sbb
push
mov
test
xor
mov
lock
inc
daa
sbb
push
dec
movs
add
inc
mov
xchg
and
scas
sbb
iret
inc
mov
push
or
sbb
imul
js
imul
or
xlat
inc
add
or
ret
xchg
pop
aam
sbb
int
push
aaa
ins
stos
xor
mov
stos
sbb
cmp
pop
xchg
or
push
and
pop
cmp
jl
mov
aas
icebp
dec
add
mov
xchg
nop
out
pop
xor
ror
dec
sbb
inc
dec
pop
or
je
das
cmp
fcos
jae
pop
jmp
inc
add
test
jge
fidiv
jmp
sub
int
cmp
inc
call
add
xchg
shl
iret
(bad)
push
mov
xlat
sti
mov
adc
cmp
mov
je
pushf
xor
xor
mov
into
cdq
popa
lea
or
enter
and
and
or
inc
mov
retf
xchg
pop
xchg
sbb
iret
mov
pop
cmp
cmp
mov
push
mov
add
xchg
add
dec
or
inc
mov
retf
pop
pop
stos
sub
and
mov
cmp
in
inc
jecxz
and
push
ds
daa
andnps
cs
mov
imul
and
outs
add
or
push
stos
add
sbb
dec
inc
(bad)
sbb
ds
inc
inc
and
jbe
pop
loopne
and
sbb
add
dec
push
inc
sahf
sub
push
pop
enter
je
xor
ret
pop
mov
xor
pop
lahf
test
add
mov
pop
pop
addr16
jmp
cmp
sbb
cmp
sbb
das
sub
inc
shl
push
push
jns
cmp
lds
sub
xor
(bad)
cmp
pop
adc
pop
clc
cmp
jle
mov
or
adc
mov
imul
call
sub
or
xlat
jbe
sbb
jmp
and
sbb
fbld
adc
inc
repnz
sbb
lds
cmp
mov
aas
aaa
push
loope
movs
mov
rdtsc
inc
les
call
sub
xchg
jne
pop
mov
icebp
add
jb
cmp
pop
(bad)
jmp
fwait
shl
cmps
adc
cmp
and
adc
pop
or
(bad)
pop
ja
stc
push
inc
push
cmp
(bad)
imul
xchg
dec
adc
push
iret
xchg
test
lods
leave
rcl
les
xor
and
sub
sub
adc
xor
adc
xor
or
cmp
shl
retf
pop
sub
mov
inc
dec
sbb
push
or
jns
push
and
xor
xchg
mov
mov
aam
push
mov
mov
inc
fmul
mov
mov
jae
push
fs
adc
nop
pop
add
fwait
adc
add
sti
jno
pop
xor
push
inc
jmp
lea
dec
pop
inc
loope
sub
or
mov
retf
dec
or
ins
sahf
aam
mov
mov
or
cs
and
mov
pop
or
adc
imul
(bad)
call
fs
or
add
out
push
cli
push
mov
push
cmp
sub
pop
cmp
shr
mov
ret
jnp
pop
mov
or
call
dec
daa
sbb
lds
xchg
movs
stos
jmp
pop
es
ret
sbb
sbb
cmps
xor
and
or
mov
sub
xor
inc
imul
or
mov
xor
dec
inc
push
pusha
push
mov
dec
daa
jno
inc
test
sbb
mov
and
ror
and
push
mov
(bad)
pop
sti
dec
add
les
xchg
fcomi
inc
sar
ins
push
mov
xor
adc
inc
imul
add
fisttp
and
mov
or
je
adc
sar
ret
jb
loope
nop
xchg
cmp
push
mul
sbb
push
push
repnz
add
adc
adc
leave
repz
int3
adc
inc
jl
xor
loope
cwde
fldz
add
rcl
out
push
sub
js
nop
xchg
push
clc
movs
xlat
outs
sub
jmp
iret
je
cmps
inc
add
jmp
xor
add
in
rcr
inc
sbb
je
adc
fsubrp
or
push
mov
pusha
add
sahf
dec
cmp
lahf
sub
ja
add
mov
enter
lahf
(bad)
xchg
call
out
mov
push
inc
outs
jmp
call
adc
dec
(bad)
mov
dec
add
push
dec
push
jmp
mov
mov
sbb
adc
enter
dec
(bad)
dec
jmp
push
xchg
ds
or
test
mov
scas
mov
pop
adc
and
push
xchg
dec
sub
nop
dec
dec
sbb
push
and
add
sbb
push
sub
jns
in
jbe
push
stos
test
add
cmp
xor
dec
sub
mov
ss
mov
and
and
xlat
add
sbb
ins
or
adc
xor
icebp
sub
and
inc
xchg
pop
inc
neg
rol
inc
inc
cli
inc
cmp
jae
jl
call
pop
loopne
or
push
inc
jl
retf
cmp
mov
push
inc
out
sti
push
cmp
add
inc
cmp
adc
dec
dec
push
rol
sahf
add
mov
inc
pop
push
test
popa
test
xor
and
or
scas
imul
aas
xor
dec
mov
dec
test
pop
ror
call
adc
add
leave
mov
fwait
cmp
jge
mov
adc
clc
dec
mov
mov
aam
adc
dec
rcr
jae
inc
sbb
rcl
fs
dec
or
aaa
mov
mov
push
add
push
push
fild
or
hlt
mov
or
test
mov
add
pop
sub
dec
sub
inc
pop
cmp
push
jbe
in
out
cmp
pop
das
dec
and
fild
jo
in
nop
jmp
mov
or
inc
add
cmps
push
iret
adc
cbw
ins
or
or
in
pop
into
or
or
fs
push
enter
sbb
push
mov
mov
rol
sub
loope
pop
add
out
movs
ss
dec
mov
dec
pop
lds
xchg
repz
imul
mov
cmp
cdq
or
scas
mov
push
push
cmp
or
inc
ret
jmp
cld
add
jne
lahf
hlt
add
pop
add
bound
xchg
(bad)
jb
out
pop
dec
pop
repnz
mov
add
leave
cmp
loopne
test
cs
dec
daa
popf
or
add
push
fs
ret
pop
fs
push
push
lea
jo
mov
sbb
push
sbb
xor
aas
and
ins
retf
(bad)
dec
dec
inc
fild
ret
xchg
xor
mov
push
sbb
and
pop
xor
xor
add
dec
jmp
hlt
fnstcw
nop
leave
test
test
popf
push
in
add
jae
or
jne
push
(bad)
xor
sub
sub
lea
add
lock
out
movs
jecxz
sub
ds
loopne
and
sub
sbb
cld
fs
jo
push
shl
mov
mov
pusha
test
mov
test
pusha
and
dec
fisttp
clc
call
call
jno
sbb
adc
sbb
sub
nop
adc
cwde
push
mov
(bad)
mov
ja
mov
push
adc
in
sub
push
sub
sbb
sti
loopne
or
repnz
retf
xor
sub
shr
dec
cmp
jle
fdiv
add
jmp
shr
jmp
cmp
inc
jnp
push
adc
lahf
add
adc
inc
sbb
adc
mov
(bad)
sub
sbb
out
mov
inc
mov
or
retf
jmp
or
pop
ins
xchg
xchg
pop
sub
or
push
inc
or
and
pop
ror
mov
stos
and
mov
xor
scas
adc
sbb
and
xchg
fld
das
cmp
push
mov
or
xchg
retf
or
dec
(bad)
add
cmp
and
dec
cmp
jle
in
push
lods
and
ss
aam
loopne
jne
mov
push
mov
pop
cs
xchg
jbe
jae
push
jo
(bad)
jg
and
jmp
pop
scas
scas
out
retf
shl
push
div
loop
pop
movsx
lea
movs
sub
mov
adc
adc
or
(bad)
jp
push
mov
xchg
add
push
xchg
ins
xor
add
inc
mov
mov
lsl
push
and
das
jo
lock
or
add
push
pop
sbb
xchg
push
mov
lods
data16
and
cs
push
push
sti
cmp
aam
cmp
out
push
ds
sbb
mov
inc
sbb
push
jp
push
xchg
inc
bound
fwait
and
fidiv
jecxz
xor
mov
aas
jg
ds
pop
mov
add
icebp
xor
and
fisttp
jmp
push
inc
adc
dec
shl
push
cwde
loopne
jns
fs
inc
add
pop
and
test
adc
ja
jbe
fsub
add
pop
bswap
mov
mov
adc
and
sahf
and
mov
adc
aaa
shl
or
(bad)
icebp
xchg
sub
push
cmp
dec
sbb
push
xchg
and
jbe
mov
mov
jo
inc
call
jmp
popf
mov
cmp
jne
jg
xor
add
sbb
imul
xor
cmpps
retf
inc
adc
jmp
inc
cmp
sbb
nop
cdq
add
inc
aaa
pushf
sbb
jae
jnp
lock
sbb
sbb
fst
test
jo
jmp
push
pop
adc
mov
push
jns
add
mov
xor
jo
cmp
ins
and
push
pop
mov
jo
aad
add
lock
mov
cmc
jecxz
pusha
adc
rol
loop
inc
mov
or
pop
mov
test
jno
or
sbb
sbb
fwait
push
mov
cmp
xchg
xchg
ja
ins
add
mov
add
or
jl
loop
shl
gs
imul
call
scas
test
stc
push
in
dec
fimul
sbb
aam
shr
sahf
out
xor
in
cmp
lea
call
lea
push
dec
inc
add
cdq
fadd
(bad)
rol
int3
fwait
push
or
or
les
pop
or
inc
jo
adc
ret
xchg
add
inc
shr
retf
dec
idiv
pop
sbb
fnstenv
je
movs
and
inc
leave
xor
addr16
movs
pop
jmp
xlat
add
pop
test
leave
mov
cmp
mov
mov
mov
loopne
jbe
addr16
adc
fmul
loop
ret
ja
mov
mov
dec
test
adc
adc
xchg
pop
neg
(bad)
das
or
push
mov
push
popf
fadd
sub
popa
adc
add
mov
or
daa
mov
sub
mov
add
test
lods
mov
test
add
repnz
xor
leave
jne
push
adc
sub
xchg
cmp
popa
xchg
push
pop
test
pop
shr
add
loop
dec
xor
jl
and
call
sbb
mov
cmp
ror
daa
outs
lea
mov
fcom
mov
xlat
movs
dec
push
pop
push
mov
aaa
ss
mov
mov
xchg
push
adc
ret
xor
bound
cmps
addr16
and
xor
dec
seto
inc
aam
push
hlt
cmp
jnp
and
mov
in
cmc
cmp
or
cmp
or
inc
dec
mov
loopne
mov
sub
push
pop
adc
sub
cwde
jo
(bad)
fcmovnb
cmps
lods
sub
jnp
ss
inc
ret
clc
mov
outs
lods
and
xor
add
call
adc
je
cmps
push
jns
sbb
je
xor
and
pop
or
push
sbb
add
xchg
add
int
jecxz
dec
add
mov
sub
(bad)
jno
popa
dec
and
fmul
xchg
pop
cli
iret
shl
and
push
xchg
sub
cmp
jge
adc
sbb
xor
cmp
inc
pusha
push
cs
sti
cs
test
shl
inc
nop
loopne
push
sbb
push
or
ret
and
sbb
sub
cmp
ss
push
not
mov
into
add
pop
push
dec
jmp
rcr
sti
and
or
ins
and
ins
dec
scas
call
pop
pop
push
rcl
sub
cs
cwde
fs
out
lea
push
xor
sbb
cmp
sbb
pop
pop
and
retf
add
popa
cli
ja
pop
sub
jne
gs
imul
push
cmps
popa
stos
xchg
or
mov
adc
inc
lods
adc
jne
add
cmp
add
add
ror
cwde
inc
jmp
mov
sbb
shr
call
adc
pop
add
imul
fistp
sbb
or
jbe
pop
sub
push
jl
imul
jmp
dec
jge
daa
imul
inc
inc
sbb
pop
pushf
adc
pop
jbe
push
fsubr
hlt
jmp
jp
jne
mov
push
mov
mov
cmp
xor
sbb
es
ret
clc
int
sub
mov
mov
inc
stos
in
mov
nop
dec
or
sub
fnsave
and
ins
cmp
ffreep
inc
mov
pop
push
stos
lods
retf
dec
add
add
arpl
ins
mov
or
pop
xor
mov
pop
mov
mov
and
inc
shl
sbb
fwait
mov
mov
out
jne
adc
dec
mov
outs
add
adc
fs
inc
xor
(bad)
leave
cmp
sbb
jp
lods
test
outs
les
sub
add
jle
mov
das
fistp
cmovae
inc
or
fcom
sbb
xchg
mov
mov
dec
test
cdq
imul
pop
mov
pop
sub
mov
popf
push
test
pop
dec
test
je
sbb
dec
bound
stos
repnz
push
push
jmp
fimul
pop
mov
mov
or
retf
cmp
jbe
pop
xor
aad
mov
in
adc
enter
add
push
dec
xchg
inc
(bad)
xor
push
pop
xchg
in
push
xchg
(bad)
cmp
dec
adc
sub
fmul
fwait
pop
add
arpl
aad
or
lahf
loop
and
ss
jge
dec
pop
jmp
cmp
adc
add
and
adc
jge
and
pusha
xor
in
add
or
and
repnz
jo
pop
adc
pop
hlt
ja
enter
push
in
fcomp
(bad)
outs
arpl
and
inc
pop
sub
fxch
fiadd
pop
in
xchg
sub
push
jle
pop
mov
fldz
fcompp
sbb
mov
dec
nop
adc
aaa
pop
sub
test
push
jno
jns
aam
call
jns
mov
xchg
sbb
nop
pop
in
loope
push
leave
xor
and
add
inc
mov
mov
jns
ret
sub
or
ins
jl
es
xor
jmp
add
(bad)
cmps
cs
sar
mov
mov
or
push
xor
or
or
jmp
ins
cmp
mov
pop
cmp
stc
lahf
or
mov
or
les
sub
adc
pop
add
fld
mov
add
inc
fdivr
pusha
dec
push
test
call
jl
add
adc
pop
or
jb
sub
pop
sbb
or
popf
fist
mov
mov
les
dec
push
fst
pop
pop
mov
xchg
js
adc
adc
ins
ins
push
sub
pop
push
out
jmp
test
movs
ins
jno
and
sbb
xchg
adc
sti
pop
adc
push
and
das
sbb
(bad)
stos
je
ret
push
shr
sbb
sar
aas
or
mov
shl
jnp
fdivr
jo
pop
or
jne
fiadd
or
test
mov
add
sbb
xor
add
push
(bad)
ror
movs
add
mov
lods
jnp
(bad)
xchg
add
call
push
enter
cmp
xchg
scas
leave
adc
idiv
(bad)
mov
xchg
push
aas
outs
push
pop
mov
ins
push
mov
std
add
test
mov
push
inc
pop
iret
mov
pop
pop
push
sub
pop
xor
mov
jne
loopne
loopne
ja
fwait
mov
pop
push
lds
loope
sub
inc
inc
dec
and
dec
mov
hlt
add
pop
cmp
lahf
nop
cmp
ror
inc
daa
jb
xchg
es
push
lods
pop
push
cwde
les
jle
adc
stos
mov
adc
sar
clc
ret
sub
and
sbb
aam
mov
inc
add
out
xor
stc
ret
and
xlat
test
sbb
sbb
add
sub
mov
push
and
mov
or
ja
pop
cwd
inc
jg
data16
or
push
fnstsw
or
movs
sbb
ins
cmp
cdq
rol
and
and
pop
mov
fs
pop
aaa
or
sub
add
push
and
jg
cmp
jnp
pop
cdq
mov
fisub
pop
xor
repnz
add
push
push
into
add
jb
and
(bad)
shl
sub
mov
xchg
mov
pop
iret
or
mov
in
inc
js
in
sbb
pop
inc
sbb
stc
pop
and
add
loop
push
add
pop
push
lahf
or
xchg
xchg
xchg
inc
sub
add
cmp
adc
lock
and
fs
cmps
xlat
push
test
nop
sub
xchg
sbb
push
gs
or
jmp
fdivr
and
loopne
push
pop
or
add
adc
add
mov
push
(bad)
xor
add
rol
push
(bad)
jns
add
aaa
pop
mov
mov
cmp
and
and
add
xchg
and
fisttp
push
jge
add
les
inc
aas
mov
cli
inc
popa
pop
mov
dec
push
push
jns
xor
adc
xchg
aam
mov
push
push
inc
ja
das
push
push
sub
mov
add
inc
sbb
into
pop
clc
xlat
lods
mov
test
sbb
ins
xchg
mov
frstor
repnz
mov
push
adc
push
cmp
je
rcl
dec
repnz
sti
add
jns
repnz
sub
sub
cmovge
lea
mov
jbe
ins
cmps
sbb
jne
add
shl
xor
les
imul
or
jmp
push
or
push
cmp
cmp
rcl
imul
adc
push
lods
sar
je
or
sbb
rol
inc
jge
aam
add
add
stos
cmc
jne
rol
inc
ret
and
dec
sbb
sub
neg
push
pop
rol
sbb
ret
stc
mov
retf
es
sub
gs
sbb
adc
int
fisubr
xor
dec
sar
xor
cwde
push
fild
xor
inc
jecxz
nop
stos
xchg
or
pop
dec
sbb
xchg
xchg
and
mov
cmc
xor
or
test
mov
mov
pop
out
cmp
push
xchg
xchg
add
xor
ret
enter
pop
dec
pop
cwde
cmp
ds
sub
cmp
sbb
add
cmp
cmc
and
pop
shl
iret
mov
pop
add
xor
or
lea
push
and
xor
push
dec
push
inc
push
or
and
(bad)
push
or
mov
inc
adc
sbb
adc
mov
add
(bad)
cmp
adc
or
mov
es
(bad)
jne
and
add
jecxz
rcr
(bad)
and
fldenv
test
addr16
ret
sbb
xchg
mov
jmp
push
inc
ss
xor
push
fbstp
pop
and
push
ror
pop
mov
mov
push
or
mov
cmps
mov
call
add
mov
mov
retf
push
or
fldcw
shl
or
xchg
movs
and
popf
and
bound
adc
and
add
sbb
fild
shl
hlt
fldz
fsub
xlat
pop
push
cmp
in
sbb
or
xor
or
push
neg
add
adc
addr16
bnd
xor
and
mov
inc
adc
adc
or
push
inc
inc
int3
and
mov
push
sub
imul
adc
scas
loope
(bad)
daa
mov
xor
add
mov
outs
add
icebp
jmp
mov
dec
pusha
cmp
adc
jle
dec
sbb
ret
push
add
ss
mov
sbb
popaw
movs
cmp
inc
pop
add
ficom
fild
inc
inc
inc
inc
or
lea
out
jae
cmp
aam
mov
test
or
cmp
mov
(bad)
iret
ja
xchg
call
fsub
int
push
cmp
adc
arpl
shl
test
xor
cmp
adc
dec
mov
inc
cmc
adc
ffree
jae
dec
out
push
pop
push
je
and
rol
cli
pop
adc
xchg
add
call
or
cs
sysenter
icebp
in
cmps
push
jmp
push
fiadd
push
xor
xchg
xchg
in
and
lahf
or
jb
push
add
and
jns
lods
jbe
push
bound
hlt
cmp
popa
(bad)
add
or
add
jbe
sub
pop
mov
push
xchg
test
push
dec
lock
mov
cmp
pop
ins
in
adc
lea
lods
test
pop
sub
add
stos
mov
jnp
aam
ficom
test
sbb
xchg
or
sbb
in
add
dec
xchg
dec
xchg
adc
sbb
and
or
xor
dec
pop
or
shl
sbb
test
mov
push
inc
gs
add
mov
retf
ins
sbb
xor
sub
add
jbe
in
dec
cwde
add
in
xchg
sub
cmp
imul
xor
int
adc
jo
cmp
lahf
mov
or
(bad)
jne
(bad)
fsubr
cmp
xchg
cli
mov
or
nop
jns
les
xor
dec
loope
pop
clc
add
mov
mov
nop
out
mov
push
inc
jecxz
add
popa
popa
inc
push
adc
push
sub
and
xor
jno
imul
lock
in
adc
or
adc
call
sbb
or
push
push
mov
sbb
push
add
add
pop
jmp
fcom
shr
mov
add
fs
jge
cmp
xchg
retf
xchg
and
xor
dec
dec
dec
je
lahf
fs
push
and
and
adc
mov
(bad)
adc
jp
addr16
jns
add
sahf
xchg
add
addr16
rol
sahf
enter
rcr
aam
fadd
sbb
fadd
loopne
jmp
scas
dec
push
dec
ins
in
adc
and
dec
xor
dec
jmp
jmp
pushf
cmp
adc
fucomp
movd
push
sub
test
add
push
inc
bound
pop
and
adc
add
(bad)
mov
dec
fmul
or
sub
test
cmp
xor
add
call
pop
mov
fsubr
pop
cmp
add
mov
dec
push
dec
adc
movs
sub
sub
or
adc
ins
in
push
sbb
test
cli
scas
adc
mov
jno
arpl
cmp
cli
push
mov
ror
adc
and
(bad)
adc
movs
inc
sbb
jb
inc
lods
xor
in
in
xchg
adc
leave
gs
and
sti
imul
shr
stc
adc
jmp
sbb
mov
inc
and
out
add
test
and
xchg
push
or
or
adc
inc
movs
lods
aas
pusha
in
ja
lds
inc
arpl
mov
mov
jmp
jo
add
jge
mov
addr16
push
dec
rol
jmp
adc
mov
add
sub
add
push
cmp
iret
ret
rcr
inc
test
mov
or
movs
adc
or
inc
pop
loopne
inc
jne
mov
sub
add
inc
fiadd
cld
jecxz
mov
add
xchg
push
(bad)
push
inc
fild
or
and
add
imul
pusha
mov
inc
lods
outs
movs
jbe
pop
sub
cmp
cdq
dec
add
rol
xor
adc
adc
jmp
cmc
sbb
in
xchg
repz
pop
dec
adc
cmps
mov
mov
nop
mov
scas
iret
mov
ror
add
xchg
sub
bnd
call
dec
add
push
push
jbe
cmp
add
ds
xchg
je
rol
call
not
ss
std
and
pop
scas
iret
lock
loope
cmp
sti
test
pop
nop
fdiv
push
mov
mov
(bad)
rol
mov
mov
jno
xor
inc
xchg
mov
pop
dec
mov
inc
or
cld
cmc
leave
sub
pop
jmp
cmps
aas
push
imul
movs
sub
sbb
inc
cmp
jns
jp
std
or
je
cmp
xor
push
inc
or
push
retf
dec
sbb
inc
adc
jmp
bsf
test
push
mov
adc
mov
imul
xchg
sub
aam
nop
out
icebp
sub
inc
cmp
cmp
jb
aaa
stc
dec
jmp
sub
fsubr
mov
jb
iret
sub
add
add
aaa
pop
or
jb
inc
adc
push
test
jmp
and
call
int3
arpl
clc
retf
or
adc
je
ret
or
inc
jo
push
pop
mov
js
cmp
push
jl
lea
call
adc
pop
xor
jmp
or
loop
push
mov
cmps
ret
dec
sub
leave
or
push
cmp
or
je
jnp
or
push
rol
fadd
out
xchg
test
adc
push
loop
or
add
add
adc
(bad)
bound
stc
add
rcl
sub
repnz
ret
push
fucom
adc
rol
cmc
js
test
lea
loope
cdq
xor
js
cmp
sub
aaa
sbb
dec
or
pop
and
ss
or
and
fstp
and
or
sbb
adc
(bad)
mov
xor
out
pop
sub
mov
mov
enter
cmp
add
mov
push
loope
jne
daa
js
sub
or
mov
int
sub
sub
inc
jo
dec
pop
push
mov
mov
push
leave
mov
dec
or
add
cwde
mov
xchg
mov
sub
push
inc
lar
ror
xor
xchg
lea
xor
cli
add
(bad)
ins
push
pop
(bad)
or
mov
out
mov
and
push
mov
lods
inc
inc
mov
mov
enter
sbb
cmps
push
ins
or
(bad)
and
hlt
inc
neg
(bad)
jge
sub
mov
add
lds
dec
test
pop
loope
mov
push
cld
je
hlt
fstp
fadd
enterw
sub
arpl
icebp
into
into
xor
xchg
jp
xor
or
mov
mov
push
mov
adc
inc
and
aaa
cli
aaa
std
(bad)
cmp
mov
and
push
aam
adc
sub
or
pop
sub
pop
or
add
jge
imul
or
and
cmp
inc
int3
push
scas
adc
gs
xchg
leave
push
fcom
xchg
lahf
mov
popa
inc
addr16
pop
(bad)
sub
ror
mov
mov
dec
or
adc
sbb
adc
fdiv
je
sahf
and
std
ror
outs
and
sbb
xor
and
fwait
ins
mov
jne
mov
adc
ficom
mov
jmp
jmp
or
add
adc
pop
and
jge
or
inc
or
test
add
sbb
jne
add
sub
push
pop
xor
jne
lock
aad
xchg
and
into
push
and
xor
ja
imul
push
xor
enter
adc
movs
jmp
push
rcl
test
popa
dec
pop
and
mov
xchg
movs
sub
xchg
sbb
xchg
sub
xchg
clc
stc
jecxz
add
inc
add
gs
mov
cwde
fs
cdq
mov
pusha
xchg
mov
or
add
sub
imul
arpl
dec
dec
test
xchg
pop
and
sub
push
mov
inc
dec
push
dec
sbb
add
outs
pop
jmp
imul
xchg
mov
popf
add
aaa
sub
or
icebp
sub
scas
xchg
lahf
adc
add
add
inc
pop
sub
sub
les
dec
int
adc
cwde
sub
and
enter
cmp
push
je
imul
in
mov
add
imul
cdq
or
and
fst
test
cld
mov
mov
cs
and
push
mov
fsubr
add
(bad)
fdiv
and
push
pop
or
mov
and
jno
test
test
fmul
add
outs
sub
scas
xchg
inc
stos
adc
fsubr
jecxz
xor
test
sbb
inc
dec
jl
pop
hlt
iret
jo
inc
cdq
leave
clc
or
inc
sub
push
mov
pop
sub
mov
stos
cli
popf
int3
aaa
enter
dec
stc
enter
lock
test
enter
sbb
pusha
or
jmp
and
scas
rol
jne
test
push
push
mov
mov
popa
or
(bad)
arpl
add
mov
add
shl
push
add
sub
sbb
cmp
or
test
fadd
rol
test
jmp
xor
push
fisttp
or
loope
adc
dec
xor
stos
imul
pop
or
mov
or
loop
(bad)
lods
rcl
adc
shl
sub
inc
dec
pop
sbb
and
inc
es
push
mov
inc
sub
lds
(bad)
imul
sbb
ror
xor
mov
mov
mov
dec
out
das
push
add
neg
call
(bad)
adc
movs
lock
das
mov
xor
sbb
add
dec
or
jmp
outs
cmp
mov
push
mov
mov
ja
dec
and
test
popa
cmp
cmp
into
dec
mov
addr16
jns
add
sbb
(bad)
cmp
and
inc
test
sbb
rol
jmp
push
mov
xor
imul
or
js
inc
imul
jmp
loopne
push
cmp
xchg
inc
fwait
popa
ins
pop
call
cld
rcl
xchg
xor
es
stos
outs
sbb
mov
adc
mov
dec
add
mov
into
inc
vmwrite
push
inc
sub
add
je
mov
xor
or
cmp
movs
push
xor
xor
in
mov
mov
push
dec
stos
cmc
mov
xor
xor
repz
mov
mov
or
aas
add
or
ja
xchg
inc
xor
mov
mov
push
push
jno
push
cdq
ret
pop
arpl
popa
inc
mov
cwde
add
sbb
jae
pop
rcl
push
(bad)
jmp
pop
sub
ja
jnp
inc
inc
retf
(bad)
jmp
cmps
push
lahf
xchg
mov
or
ror
outs
retf
sub
or
pop
mov
pop
inc
icebp
iret
retf
push
or
leave
or
push
lods
and
jmp
popa
outs
lods
mov
cs
xchg
dec
xor
stos
add
push
jmp
leave
mov
loopne
xchg
or
dec
popf
dec
push
and
pop
sbb
xchg
mov
test
push
mov
iret
sbb
mov
lahf
jecxz
inc
adc
mov
mov
les
and
call
aas
mov
popa
mov
stos
add
scas
dec
popf
or
loope
sbb
sbb
or
loopne
inc
xor
dec
ds
mov
ja
cwde
js
je
sub
jb
pop
lods
or
aaa
test
mov
pushf
pusha
xor
xor
xchg
jge
fdiv
push
inc
add
mov
dec
and
call
inc
arpl
add
lds
into
and
out
ds
jmp
(bad)
repz
pusha
push
push
arpl
xchg
popa
ss
adc
inc
jge
mov
pop
push
sub
sbb
push
in
into
push
ins
mov
mov
inc
rol
pop
js
push
xchg
ret
mov
add
add
daa
xchg
adc
adc
sbb
and
mov
js
xor
inc
cmp
movs
fwait
test
test
or
cmp
rcr
sbb
test
lea
ds
cmp
test
mov
add
test
jb
lods
fstp
ins
and
mov
add
mov
cmp
mov
rcl
sbb
add
push
out
in
shr
jl
push
jbe
ret
xor
dec
dec
in
bswap
push
ficom
or
mov
sub
cmp
push
jo
mov
stc
fiadd
cs
adc
and
xor
cmp
push
mov
mov
cs
cs
mov
cwde
cs
mov
retf
nop
dec
push
nop
out
mov
add
or
sahf
out
sahf
push
and
xor
inc
jp
out
inc
sbb
pop
cmc
xchg
or
jb
or
popf
dec
or
cmc
adc
and
xchg
test
sub
adc
or
leave
add
test
sub
es
and
scas
sbb
test
pop
or
fiadd
inc
sub
add
xor
push
mov
ins
pop
ret
mov
add
rcl
and
cdq
imul
push
and
pusha
pop
call
adc
fsub
xor
mov
pusha
push
push
jbe
fisttp
loope
xor
push
inc
inc
xor
in
aad
(bad)
fs
cs
push
sahf
push
sub
dec
das
dec
idiv
imul
imul
push
test
push
inc
jnp
push
jle
jo
and
and
adc
push
or
xor
ret
mov
scas
dec
pop
push
nop
ret
mov
(bad)
sbb
cmp
mov
fidivr
add
or
add
clts
add
adc
sbb
or
and
shl
cmp
rcl
lahf
cmps
adc
imul
jnp
push
out
add
mov
sbb
add
cmp
inc
push
call
rcl
inc
mov
outs
jb
sub
ds
mov
inc
rcl
sahf
sbb
and
mov
adc
add
data16
pop
pop
call
xor
fisubr
aaa
pop
jmp
and
mov
add
daa
and
or
mov
cmp
jb
mul
inc
mov
out
test
xor
lock
pop
push
push
sub
ret
jnp
mov
iret
or
cmp
inc
retf
js
call
dec
add
sub
in
sub
in
call
in
retf
cwde
push
or
lods
loopne
loop
jle
sub
inc
inc
neg
(bad)
out
inc
push
clc
push
shr
mov
lock
mov
xchg
icebp
stos
int
mov
out
jo
jb
cmp
jnp
or
mov
repz
mov
mov
bound
push
sbb
push
push
leave
mov
push
xchg
(bad)
xchg
xor
sbb
adc
ror
inc
sub
pop
push
or
or
cmp
mov
push
or
inc
xor
movs
pop
adc
imul
mov
clc
lock
nop
pusha
push
pop
add
cmp
mov
into
pop
adc
cmp
pop
outs
js
cs
jmp
push
fisttp
mov
and
hlt
call
or
add
sub
cmp
push
jecxz
clc
aam
(bad)
xor
sahf
std
and
and
push
adc
iret
add
add
lock
shr
adc
ss
lock
add
or
pop
mov
jb
adc
pop
sub
je
pop
and
mov
xchg
push
pop
and
mov
or
mov
test
stos
in
js
dec
pop
xor
mov
scas
hlt
adc
loop
or
add
outs
rol
shr
cs
inc
xchg
mov
mov
adc
or
cmps
fisubr
pop
push
mov
push
sub
test
and
cmp
pop
xchg
adc
lods
lahf
fxch
test
aam
iret
dec
xor
aas
sbb
or
push
xchg
xchg
inc
ror
movs
sub
mul
int3
pop
sbb
rcr
mov
push
aaa
add
out
(bad)
add
pop
dec
push
adc
fdiv
mov
test
call
test
call
daa
lods
cdq
(bad)
lock
pop
clc
or
jo
shr
and
cld
fcmovnbe
add
nop
push
cdq
push
add
test
cmp
shl
mov
xlat
jns
scas
fs
jbe
cwde
inc
add
pushf
cmp
jne
inc
add
(bad)
int3
data16
mov
xor
aaa
out
xchg
xchg
popa
dec
out
jle
inc
mov
xor
rcl
mov
adc
lods
test
dec
clc
and
add
cmc
add
cmp
xor
imul
push
and
pop
sbb
mov
mov
mov
pop
pusha
pop
xchg
popa
or
sbb
inc
pusha
adc
push
in
or
add
into
imul
cmps
pop
and
clc
jecxz
mov
loopne
je
jmp
aad
movs
hlt
clc
pop
add
mov
fsub
fdiv
push
pop
stos
fdiv
out
add
mov
adc
inc
xchg
xor
add
lods
pop
xchg
inc
add
imul
(bad)
iret
jb
inc
adc
dec
dec
adc
nop
out
ins
call
sbb
pop
xchg
cmp
test
push
shl
inc
or
mov
jp
xchg
adc
sub
inc
mov
or
dec
rol
mov
add
fwait
jp
ja
pop
add
or
mov
aad
jne
xor
lods
adc
mov
mov
fsubr
shl
ja
in
xor
loopne
daa
in
sbb
xchg
mov
sub
sti
scas
xor
add
fcom
imul
push
call
aam
jae
inc
fmul
imul
ror
ss
popf
fmul
push
jne
loop
mov
sbb
retf
push
or
cdq
sbb
add
jo
jmp
pusha
or
mov
jp
push
pop
ror
inc
or
push
adc
mov
cwde
pop
pop
sbb
cmp
enter
mov
mov
push
test
outs
(bad)
movs
xor
ret
cs
or
mov
lds
bound
mov
adc
mov
cld
cs
push
retf
test
mov
mov
sbb
add
cmp
mov
inc
sbb
enter
fcmove
or
mov
cdq
and
sbb
xor
push
mov
shr
sbb
pushf
mov
inc
js
mov
jb
adc
ja
pop
xchg
adc
shl
cmp
retf
test
jb
ja
lods
jge
and
sub
std
ss
adc
pop
dec
or
out
bound
sbb
add
or
sub
and
cmps
push
jo
loopne
rcl
nop
xlat
(bad)
adc
push
aad
add
js
cmp
je
push
out
and
mov
test
and
adc
pop
inc
adc
jg
push
push
pusha
das
push
sbb
test
pop
cmp
scas
rcr
or
or
call
add
jno
mov
add
push
jne
sahf
xchg
icebp
pop
nop
nop
xor
sbb
xor
cld
pop
add
mov
fadd
xchg
push
dec
inc
inc
lea
pop
and
cmovp
aas
sbb
cs
adc
xor
cmps
mov
call
mov
cdq
jne
inc
leave
(bad)
fs
xchg
add
int3
and
adc
daa
push
and
scas
adc
jns
loope
mov
or
jns
and
inc
mov
sub
lods
xchg
xor
inc
mov
and
add
add
or
movs
and
sahf
mov
jl
mov
lock
and
scas
xor
cmp
hlt
sbb
adc
mov
sbb
aaa
sbb
inc
xor
xchg
and
mov
into
data16
inc
fsubr
adc
lods
sub
mov
push
sbb
loopne
inc
add
xchg
xchg
or
lods
or
daa
mov
adc
jo
sub
test
xchg
adc
popf
inc
mov
add
sbb
adc
jle
jmp
das
iret
push
sub
adc
mov
dec
repnz
adc
fstp
inc
movs
adc
pushf
outs
and
loopne
sbb
mov
and
and
ror
nop
hlt
xor
aam
cmp
dec
xlat
pop
xchg
push
inc
stos
and
je
cmp
cmp
xor
pop
retw
into
cdq
and
je
and
jae
inc
or
push
push
stos
in
push
ja
sbb
sub
dec
adc
push
fwait
dec
movs
(bad)
xchg
ss
cdq
and
adc
mov
sbb
push
retf
add
and
add
push
mov
sar
aaa
inc
cmp
mov
inc
lods
mov
movs
dec
adc
(bad)
push
stos
inc
stos
std
shl
cmc
xor
and
imul
push
inc
xor
push
sub
mov
add
xchg
aas
dec
shr
xor
adc
push
push
or
into
shr
(bad)
adc
bndldx
into
loop
rol
lahf
shl
add
or
push
pop
jmp
push
jae
lods
(bad)
rcr
mov
jmp
push
rcl
sub
jmp
bound
icebp
sbb
mov
mov
sahf
jo
mov
or
adc
scas
in
test
sbb
mov
sbb
cmps
and
jnp
adc
rol
add
hlt
lock
pop
or
sbb
(bad)
sub
jmp
push
inc
imul
add
nop
or
sub
pop
call
jmp
xchg
movs
and
dec
sbb
test
push
jl
inc
test
mov
cmc
cmp
xchg
cmp
rol
js
mov
or
adc
cmc
push
push
lods
call
mov
bound
sbb
jno
jne
push
pop
aaa
sar
cli
or
lea
rol
push
shl
in
add
shl
iret
scas
lea
adc
ins
sbb
cmps
das
ficom
push
fwait
mov
inc
mov
adc
push
and
or
loop
jge
inc
jo
push
mov
and
repz
cmp
adc
mov
dec
cmp
nop
adc
cmp
shl
fmul
dec
sbb
je
dec
loope
shl
loop
je
lea
and
jg
cmp
jo
shl
cmp
pusha
sub
adc
add
movs
adc
and
das
out
dec
add
dec
and
(bad)
xor
push
jl
stc
ins
push
mov
adc
mov
push
add
int3
push
inc
mov
js
mov
push
icebp
add
lock
xor
mov
xchg
rol
(bad)
fs
movs
and
cmc
stc
mov
ins
mov
in
add
sahf
lods
movs
popf
fcomp
jmp
leave
dec
sbb
sub
cmp
cmp
xor
scas
push
and
pop
cmps
not
rol
jbe
(bad)
sub
nop
jo
mov
dec
sbb
fs
xlat
cld
cwde
popa
ins
ss
fsub
sub
pop
sbb
ror
xchg
xchg
mov
pop
sbb
xchg
push
pop
lahf
jb
loope
xchg
adc
xchg
inc
add
cmp
jg
iret
push
mov
movs
mov
popf
or
loopne
xchg
xor
inc
xchg
push
push
test
lods
movaps
and
jns
arpl
lock
rcr
sub
imul
sub
mov
bound
xor
xchg
ja
lods
pop
das
or
cmp
mov
adc
je
cmp
js
ja
imul
dec
sub
sbb
xor
outs
jo
jl
sub
mov
pop
fcmovnbe
cmp
imul
jmp
pushf
xor
aam
fst
movs
popa
sbb
clc
in
retf
jmp
xor
movs
xor
jmp
cmp
push
xor
test
inc
pop
mov
in
dec
pop
pop
mov
dec
jle
cmp
and
iret
push
mov
adc
dec
jns
push
pop
jo
into
xchg
cld
mov
add
out
and
lods
jecxz
push
sub
adc
push
dec
xchg
sbb
mov
(bad)
jmp
dec
inc
ds
xor
popf
loope
pop
dec
push
add
clc
or
test
ja
repnz
or
inc
cwde
inc
mov
add
push
fimul
test
out
in
push
fcom
push
or
push
retf
mov
fcmovnu
(bad)
rcl
and
popa
cmp
adc
dec
pop
add
fsub
and
mov
inc
or
jbe
rcr
fcom
cmp
pop
push
sub
mov
neg
pusha
rcr
and
inc
test
data16
lahf
lea
jl
and
jmp
push
test
sub
cld
add
push
mov
(bad)
pop
pop
inc
jge
imul
adc
mov
das
sbb
enter
push
jecxz
jb
retf
xchg
ror
push
clc
push
fstp
inc
inc
into
movaps
inc
inc
sbb
sbb
clc
add
cmp
inc
lock
sbb
dec
sbb
into
push
jecxz
push
adc
cmp
adc
and
jle
scas
jnp
jns
push
call
pop
loopne
dec
add
or
imul
add
movs
add
jne
es
adc
xchg
cmp
jmp
push
adc
and
lock
push
es
lock
ret
shl
loopne
in
add
in
add
xor
mov
sti
into
popf
shr
and
loope
(bad)
jne
push
jg
fwait
sub
nop
pop
sub
push
call
sahf
jl
(bad)
hlt
mov
fdivr
dec
cmps
icebp
or
add
in
jl
enter
and
enter
inc
fdivr
mov
(bad)
fdivr
inc
loopne
inc
cld
nop
jle
test
sbb
stos
xlat
cmc
mov
cli
add
xor
repnz
sbb
dec
push
jmp
adc
dec
in
adc
call
mov
jne
test
jmp
mov
xlat
pop
loop
or
dec
test
xchg
sbb
mov
loop
outs
xchg
mov
loop
ins
cld
cld
cmp
movs
movs
cmps
adc
stos
or
test
daa
fnstcw
sbb
add
mov
and
pop
lahf
push
leave
fiadd
push
lods
and
lahf
mov
fcomp
push
mov
mov
push
pusha
inc
dec
or
lods
adc
retf
(bad)
sub
rcl
sar
dec
or
ror
adc
sbb
les
sub
nop
bound
pop
or
nop
pop
fdivp
jb
mov
das
cwde
lods
stos
or
dec
push
jnp
test
adc
repnz
dec
dec
push
fild
(bad)
dec
fcom
inc
mov
(bad)
adc
xor
cli
mul
(bad)
mov
mov
scas
iret
mov
lea
mov
loope
adc
in
jo
das
or
std
fsub
or
or
xor
push
xchg
loopne
mov
or
pop
sar
jmp
pop
movs
mov
push
xchg
movs
pop
sbb
add
js
mov
pop
jo
xor
movs
inc
lock
jp
les
jmp
sub
mov
push
dec
clc
pushf
mov
add
jmp
mov
pop
push
or
mov
add
add
lock
mov
push
xor
sbb
push
lods
and
adc
push
pusha
ror
les
in
(bad)
sub
mov
sahf
nop
add
sbb
inc
jne
mov
fsubr
jge
movs
inc
ins
imul
rol
js
ja
mov
int
mov
or
sahf
adc
add
js
or
adc
fdiv
mov
in
push
or
mov
jbe
xchg
pusha
dec
mov
lahf
xchg
mov
out
dec
xor
inc
push
sub
(bad)
adc
and
xchg
or
test
and
arpl
enter
xchg
mov
mov
jecxz
in
jbe
test
pop
xchg
sbb
ficom
push
enter
imul
mov
dec
je
xchg
cli
sahf
cmp
adc
pop
cmp
mov
add
cs
nop
add
inc
lods
fs
add
xchg
ins
mov
add
add
sub
enter
push
mov
scas
cwde
xchg
mov
and
jnp
(bad)
data16
pop
and
cwde
fdivr
imul
lea
dec
and
call
retf
add
sbb
mov
or
adc
in
lods
aaa
enter
test
or
mul
je
sbb
mov
aam
inc
mov
(bad)
push
push
xchg
pop
mov
and
pop
sahf
rcl
mov
inc
fsub
into
loopne
push
out
add
mov
add
pop
test
mov
push
sub
ror
rcl
fimul
fist
pop
lss
imul
or
(bad)
enter
add
xor
jo
call
shl
push
mov
mov
and
jmp
nop
(bad)
stc
mov
pop
movs
jns
ins
or
inc
nop
fwait
adc
xor
dec
xchg
cdq
jo
sbb
pop
fwait
and
ror
add
sub
or
push
pop
mov
or
dec
inc
xchg
sbb
loope
xchg
mov
inc
popf
and
inc
xchg
dec
imul
js
add
and
adc
rol
xchg
xchg
xchg
arpl
jle
and
cmc
cmp
inc
test
sub
add
or
call
test
and
xchg
jmp
push
cmp
(bad)
loope
dec
mov
jmp
xchg
sbb
pusha
outs
inc
jo
ss
jnp
add
jns
mov
scas
dec
push
rcpps
push
push
push
jno
jmp
mov
sbb
pop
dec
imul
mov
mov
pop
int3
push
les
jne
pusha
pushf
dec
jne
data16
sbb
adc
cmps
jae
mov
inc
mov
ret
(bad)
jl
xchg
or
xchg
mov
cwde
mov
mov
bound
ret
add
pop
fimul
xor
les
sti
mov
(bad)
pop
jp
add
in
sbb
loopne
push
test
scas
pop
dec
pop
xchg
push
sbb
dec
sbb
inc
aam
data16
push
rcl
push
xchg
push
stc
mov
ficom
dec
push
xchg
dec
sub
(bad)
mov
dec
inc
push
jmp
xor
(bad)
jmp
sub
dec
gs
and
sti
add
sar
cmp
mov
push
xor
push
pusha
mov
mov
aam
mov
dec
test
adc
pop
pop
mov
push
adc
mov
push
mov
cmp
or
imul
or
int3
cmp
dec
outs
xchg
or
aas
adc
inc
shl
cmp
xchg
mov
inc
test
cmp
push
cmp
jp
pusha
add
dec
cwde
cmp
xchg
movs
lods
sub
push
adc
shl
retf
mov
xor
push
ret
adc
mov
adc
repz
sub
adc
mov
push
add
add
lock
add
loop
xor
test
(bad)
sub
outs
jb
adc
inc
or
pop
adc
cs
add
test
lea
loop
jl
stc
mov
data16
xchg
fsub
lock
pop
xchg
xchg
lea
xchg
dec
inc
ins
sbb
push
mov
xor
je
enter
mov
cmps
sar
inc
sub
xor
dec
cli
xchg
jp
add
lea
scas
dec
sbb
mov
rol
or
adc
mov
dec
mov
js
popa
push
push
sub
test
enter
pushf
push
in
pop
push
jo
and
(bad)
and
pushf
push
mov
jmp
sbb
push
push
loope
clc
test
jne
or
or
mov
mov
mov
fimul
push
pushf
push
push
adc
add
add
xor
mov
xchg
es
pop
pop
shr
ds
adc
cmps
lea
jmp
loope
lds
xor
push
lods
or
test
push
adc
pop
clc
sbb
dec
jne
push
lds
mov
mov
test
sbb
movs
mov
mov
out
jne
jne
inc
retf
push
xchg
out
fidiv
mov
adc
adc
(bad)
and
imul
dec
in
unpcklps
mov
nop
and
push
mov
adc
lea
add
mov
popf
cmc
add
mov
(bad)
fstp
mov
cwde
and
movs
adc
jbe
xor
or
add
sbb
ins
and
rcl
adc
add
xchg
adc
pop
dec
in
inc
(bad)
push
addr16
(bad)
pop
cmp
cwde
sar
adc
rsqrtps
sbb
or
add
movs
lock
inc
inc
sbb
mov
(bad)
lea
fwait
mov
(bad)
int3
repnz
sub
rol
mov
push
lods
rcr
fdivr
inc
sbb
sbb
aas
mov
push
pop
bound
cmp
mov
popa
add
mov
cmc
bound
lock
or
inc
hlt
ja
push
push
aaa
jne
div
retf
cmp
or
jg
push
stos
sub
push
push
pop
in
push
and
inc
ss
push
in
cdq
sub
(bad)
fdiv
add
movs
xchg
lock
lahf
pop
jp
test
add
iret
mov
ja
xchg
xor
popf
jp
jmp
xchg
test
cmp
lahf
pop
stc
inc
les
sub
push
fnstsw
aam
jecxz
mov
out
jecxz
or
push
cmp
lahf
jo
add
sbb
lock
add
rol
rcl
dec
sub
fwait
je
mov
xor
fiadd
adc
dec
cmp
mov
loopne
jbe
push
sbb
xor
sub
inc
adc
or
lods
push
jl
fdivr
sbb
movs
inc
pop
add
aaa
dec
push
pop
and
mov
lods
push
rcl
or
dec
es
dec
xchg
cld
rcr
xor
adc
add
(bad)
in
add
imul
jnp
sub
xchg
(bad)
or
cmp
je
inc
rol
inc
xchg
mov
add
or
adc
loope
add
push
std
fadd
inc
xchg
test
call
test
mov
cmp
into
rol
stos
or
mov
pop
xchg
fmul
mov
inc
pop
and
push
mov
ret
push
cmp
mov
aam
mov
inc
inc
or
cmp
add
jae
ins
add
dec
adc
push
xchg
push
adc
adc
test
add
movs
or
cmp
push
push
mov
xchg
inc
and
xlat
jp
cmp
sti
and
push
seto
xchg
push
adc
xor
dec
fsub
inc
cmp
repz
out
retf
int3
std
lock
push
fucomp
(bad)
iret
clc
and
lahf
aad
jmp
mov
in
sub
jmp
sbb
or
push
adc
movs
sub
call
xor
xor
cmps
push
in
mov
cmp
call
xorps
(bad)
shl
ror
into
add
pop
imul
adc
pop
pusha
add
xchg
fisttp
pushf
dec
mov
mov
dec
enter
jl
cmp
int
push
and
xchg
inc
popf
test
inc
cmp
sbb
int3
int3
out
add
pusha
(bad)
push
in
test
inc
add
dec
push
xor
xor
std
mov
hlt
inc
jne
add
out
push
loop
push
fisttp
add
ins
dec
cmp
and
int3
pushf
sbb
jb
movs
popf
ja
test
ret
pop
adc
dec
ror
and
fwait
xchg
inc
lods
pop
(bad)
cmp
sub
rol
jns
inc
cmp
pop
xchg
sahf
and
lock
cmps
jle
and
test
jmp
jl
mov
sbb
aas
into
movs
xchg
add
push
sbb
push
adc
or
mov
in
mov
pop
and
test
outs
and
push
(bad)
sbb
or
mov
fdiv
xor
push
inc
outs
sar
dec
sar
popf
mov
sub
ficomp
mov
leave
clc
and
add
pop
clc
clc
push
pushf
fcmovb
xchg
lds
outs
ins
dec
dec
ror
inc
jmp
sub
pusha
lds
call
xor
lea
shl
scas
repnz
enter
push
jae
stc
bnd
push
cvtps2pi
and
sbb
or
jmp
popa
push
dec
cwde
iret
sbb
dec
mov
rol
push
out
jb
lods
mov
pop
push
mov
or
adc
sub
xor
pop
ret
adc
mov
add
or
xor
pop
pop
es
mov
fild
pop
cmps
push
mov
je
or
adc
xor
or
js
push
xor
daa
jbe
call
pushf
pop
mov
pop
nop
add
adc
pop
or
add
mov
add
ins
add
dec
mov
lea
test
inc
mov
pushf
or
aad
xor
rcr
sti
test
inc
movs
add
ror
or
fst
out
addr16
jmp
or
scas
jmp
and
add
or
jmp
or
jmp
fild
mov
test
retf
mov
xchg
push
jp
lods
sti
push
jmp
pop
mov
mul
inc
loopne
retf
movs
sti
(bad)
add
mov
inc
popf
push
nop
or
call
inc
leave
jmp
jg
adc
sub
pop
mov
lds
mov
mov
sbb
inc
lock
push
xchg
dec
mov
sub
add
data16
out
xchg
add
fimul
inc
imul
jne
enter
or
mov
cmp
les
or
dec
add
xchg
jae
add
cmp
jne
adc
sbb
push
cmp
movs
jbe
jne
xchg
and
dec
sub
inc
dec
pop
icebp
add
dec
ret
test
sbb
aam
loopne
mov
push
test
fstp
es
les
inc
push
cmp
jle
add
adc
rcr
movs
les
mov
adc
sub
xor
push
(bad)
dec
sbb
and
inc
(bad)
loop
mov
popf
xchg
add
and
cmp
adc
arpl
ja
xor
jg
or
mov
sub
inc
add
mov
lea
and
js
hlt
or
pop
jae
les
cmp
or
sub
iret
(bad)
shr
cwde
xchg
dec
dec
idiv
(bad)
fcom
inc
jmp
shl
mov
adc
inc
js
push
in
mov
push
or
or
ins
lahf
nop
and
or
daa
mov
inc
mov
cmp
loopne
inc
call
pusha
dec
sar
dec
stos
or
out
popf
popf
cmp
les
cmps
dec
dec
mul
mov
xchg
fist
hlt
xor
arpl
sub
mov
xor
movs
xchg
stc
pop
daa
pop
aaa
or
fldpi
pop
xchg
sbb
test
lock
dec
mov
sub
jnp
push
or
sbb
loope
pop
call
test
push
dec
retf
fstp
lea
and
(bad)
fdiv
add
mov
add
sbb
xchg
(bad)
pop
pop
cmc
or
xchg
jge
(bad)
test
lahf
push
dec
shl
push
xor
aad
or
mov
adc
mov
mov
mov
mov
test
rcr
push
or
inc
or
jae
mov
add
gs
cmp
or
or
cmps
and
push
dec
into
push
jo
xchg
xchg
jno
add
shr
and
bound
adc
shl
pop
xchg
xchg
push
inc
test
fcmovbe
or
xor
loop
ret
sti
cmp
fsubr
add
lds
push
pop
(bad)
push
test
std
arpl
xchg
fdivr
enter
push
adc
loopne
(bad)
jmp
mov
mov
rcl
pop
mov
(bad)
add
mov
or
adc
adc
hlt
jecxz
dec
dec
mov
ret
adc
sbb
call
add
mov
jp
dec
int3
ds
jns
out
dec
es
add
imul
add
sub
gs
les
ret
cmc
ins
xchg
cmp
inc
and
stos
aaa
xchg
call
sar
or
inc
pushf
pusha
movs
lock
out
xor
mov
outs
mov
add
or
adc
rol
test
pushf
and
push
loope
imul
jg
xor
gs
mov
lea
mov
mov
test
ins
mov
sub
and
adc
push
pushf
jbe
mov
add
xchg
push
inc
mov
push
js
or
xchg
mov
and
(bad)
in
movs
cmps
inc
adc
not
movs
mov
dec
aam
mov
cmp
jno
mov
xor
dec
pusha
push
(bad)
jge
xchg
ret
inc
add
fild
jno
icebp
add
and
mov
dec
pop
mov
mov
xor
ja
dec
clc
sub
loopne
pop
jmp
sbb
cmp
dec
and
xlat
or
push
std
cdq
retf
aam
test
test
repz
push
inc
inc
mul
aaa
jp
enter
add
jae
addr16
(bad)
lock
jge
dec
cmp
add
popa
xor
mov
outs
sbb
call
hlt
or
inc
(bad)
adc
loopne
push
inc
or
mov
leave
cld
je
mov
stos
pop
inc
mov
xchg
fucomi
dec
cmps
pop
sahf
test
push
push
call
add
jbe
push
lds
sub
out
inc
pop
or
shr
xchg
xchg
dec
mov
imul
pop
imul
test
scas
enter
sbb
pop
inc
call
popa
cdq
test
(bad)
scas
dec
in
xor
inc
add
adc
add
and
ret
adc
mov
inc
cmp
or
sbb
in
xor
xor
push
and
icebp
sub
mov
dec
or
push
cs
repnz
fild
(bad)
push
sbb
adc
lods
xor
out
pushf
push
push
sub
por
add
inc
push
add
cs
mov
aam
cmp
mov
sbb
stc
inc
or
iret
std
pusha
popa
dec
adc
adc
inc
inc
or
lock
inc
hlt
push
sub
pushf
and
test
lahf
pop
adc
inc
adc
ja
or
mov
cwde
shr
push
jge
xor
pop
add
je
pop
push
mov
mov
cli
movs
movs
mov
sub
dec
punpckhdq
leave
push
mov
push
mov
push
test
and
jbe
jmp
or
mov
inc
ja
mov
adc
dec
jmp
mov
sbb
inc
clc
sbb
mov
cmp
bound
fisub
scas
(bad)
add
add
and
push
rol
cmp
push
adc
cdq
sub
loopne
inc
inc
or
test
or
adc
add
sar
jg
cmp
sbb
adc
add
aam
adc
test
(bad)
jne
ret
mov
(bad)
and
ins
cmp
dec
movs
test
inc
or
pop
add
call
mov
enter
xchg
leave
sbb
cmc
repz
or
out
(bad)
das
inc
lods
pcmpeqw
mov
jnp
inc
addr16
outs
add
lods
fcmovnbe
fidivr
mov
inc
loope
sub
lds
jb
push
retf
pop
or
adc
(bad)
rcl
mov
inc
xchg
jg
jns
add
cs
dec
adc
pop
hlt
mov
sub
(bad)
shr
or
mov
outs
inc
imul
cwde
nop
push
xchg
mov
jno
pop
xchg
xor
inc
lock
bound
mov
push
jmp
adc
xchg
mov
jmp
stos
mov
xchg
sub
test
xor
pop
inc
pusha
lock
ret
mov
cmp
cld
cmps
fist
out
arpl
inc
ror
and
in
xor
call
test
fadd
rcr
add
shl
jo
inc
dec
sub
fiadd
rol
jae
or
ret
mov
daa
inc
xor
sub
pushf
lock
lock
cmp
popa
add
loopne
jo
loopne
dec
mov
and
jg
aam
inc
push
dec
jecxz
outs
add
sub
movs
aaa
dec
cmp
xor
ss
mov
pop
aaa
mov
outs
xor
push
xchg
pusha
sub
inc
add
pop
push
xor
sbb
movs
push
addr16
inc
mov
mov
lahf
cli
jb
mov
mov
xor
mov
sbb
xchg
xor
test
jbe
jle
mov
push
sbb
(bad)
fld
js
(bad)
and
sbb
jne
popa
inc
or
jmp
pusha
push
lock
jmp
xor
pop
(bad)
loopne
inc
sub
add
mov
pusha
mov
js
add
loop
add
popf
clc
add
dec
add
mov
mov
adc
mov
std
ins
out
or
ret
or
rcl
push
add
cmp
sti
test
in
pop
adc
jne
lea
xor
out
jno
outs
loopne
push
shl
inc
lea
sub
aam
pop
xlat
mov
mov
sbb
ds
fcom
pop
nop
or
or
lods
je
mov
clc
(bad)
cmps
stos
dec
xlat
cmc
xor
xor
ins
xor
jp
in
ret
jne
xchg
les
pop
push
inc
mov
dec
repnz
cwde
repnz
push
push
push
sbb
imul
retf
loope
inc
sub
test
inc
inc
fidivr
mov
push
js
jbe
test
dec
repnz
add
xor
pop
push
jmp
add
xor
sub
mov
inc
leave
mov
aaa
xchg
and
push
jbe
xchg
dec
cwde
sub
jmp
movs
loopne
cmc
pop
add
ret
mov
and
es
sub
cmps
imul
(bad)
sub
or
clc
loope
cmp
retf
enter
push
xor
sahf
mov
jge
(bad)
movs
jecxz
add
xchg
repz
rcl
adc
hlt
mov
jmp
ret
add
push
js
out
fs
std
lock
(bad)
inc
push
(bad)
adc
cmps
pop
pop
adc
out
(bad)
pop
push
fmul
inc
mov
push
(bad)
push
fsub
mov
stos
clc
sub
or
rol
ins
or
loope
mov
push
push
dec
sbb
or
xchg
pop
(bad)
jmp
adc
(bad)
fimul
mov
fcom
inc
mov
mov
jo
test
into
jmp
or
push
jge
cmp
add
idiv
push
aam
mov
sar
push
imul
das
lods
jo
(bad)
movs
mov
in
and
and
mov
ficom
nop
pop
pop
dec
movs
repnz
mov
sahf
mov
mov
pop
imul
mov
or
cmovl
cmp
sbb
jmp
push
shr
dec
int3
or
inc
sbb
aas
dec
sub
push
das
push
pop
ds
or
mov
mov
shl
sbb
xor
xor
jecxz
loopne
mov
(bad)
mov
pop
xor
jmp
(bad)
pop
mov
lock
sub
jmp
mov
mov
lods
imul
adc
inc
jmp
jb
adc
add
add
add
ror
outs
dec
call
push
repnz
or
lock
(bad)
push
(bad)
jne
aas
adc
inc
mov
add
xchg
adc
gs
and
xchg
sub
sbb
fisttp
pop
lds
movs
cwde
adc
es
add
push
pop
add
movs
push
lods
stos
mov
jns
aam
or
pop
lea
rep
iret
or
sub
xor
jo
mov
test
sahf
jecxz
mov
lock
sub
cmp
pushf
add
rcl
fadd
xor
mov
dec
xchg
leave
sub
xor
pusha
call
shl
jg
cmp
enter
mov
jmp
sub
mov
sub
inc
sbb
movlps
mov
adc
fs
jne
push
pop
jg
sub
push
outs
xchg
ret
mov
push
dec
jmp
cmps
dec
cmp
add
icebp
or
clc
inc
mov
ror
fwait
js
xor
pushf
xchg
mov
jo
dec
es
or
in
lock
int
inc
xor
mov
test
(bad)
ja
ss
jmp
enter
dec
jmp
inc
or
pop
cmp
jg
inc
jmp
adc
dec
inc
pushf
out
mov
ret
sbb
add
cmp
les
test
mov
pop
call
jbe
mov
sub
sub
dec
nop
ss
add
sbb
adc
(bad)
loope
scas
repz
push
sbb
in
sbb
jmp
das
dec
jmp
cmp
push
push
das
push
inc
rcl
dec
cmp
or
or
(bad)
div
jge
cmp
jle
sub
(bad)
dec
loop
inc
adc
cdq
aam
adc
ret
inc
cld
inc
sbb
(bad)
pusha
movs
xor
xor
inc
inc
mov
pushf
outs
mov
xchg
cs
ja
iret
(bad)
jns
cmc
adc
jo
xor
jno
leave
or
sub
push
xchg
aas
inc
sbb
repz
xchg
mov
add
gs
js
inc
cmp
int3
movs
cmc
inc
ret
and
push
test
call
mov
sub
xlat
adc
sbb
and
pop
div
and
lock
jb
xchg
lea
out
cs
aas
mov
and
mov
mov
out
aaa
fdecstp
in
inc
sbb
mov
pop
out
jmp
sahf
dec
adc
loop
and
jo
xchg
leave
xor
outs
cmp
xchg
fst
test
jo
xchg
mov
popa
sbb
shl
and
cmp
inc
inc
pop
mov
jns
mov
fisub
fistp
mov
add
in
sti
adc
aam
jne
push
fs
scas
mov
jmp
xor
adc
or
out
pop
rcr
in
shl
dec
mov
fwait
dec
push
sahf
ret
push
push
mov
data16
dec
pop
and
xadd
out
lods
test
and
dec
lods
iret
mov
sbb
lahf
pop
js
stos
xor
xor
xchg
loopne
cli
bound
jge
pop
mov
and
mov
loopne
push
push
and
retf
mov
scas
mov
loopne
retf
dec
cmp
arpl
in
mov
xchg
popf
test
rcr
jmp
pop
jg
clc
jmp
mul
rcl
loop
jle
arpl
outs
adc
add
add
mov
dec
push
jne
call
les
test
inc
les
push
add
test
sub
jge
(bad)
cmp
jle
or
mov
fcmovnb
xchg
gs
jae
in
(bad)
dec
nop
sbb
or
jne
daa
xor
jge
jp
stos
push
imul
ja
add
jmp
xor
sub
inc
popa
sti
and
xor
inc
retf
xchg
sbb
pusha
shl
popf
frstor
inc
hlt
call
sub
push
enter
adc
push
cwde
cmp
or
add
jp
je
adc
fcomp
in
in
pop
mov
test
rcl
(bad)
mov
jecxz
or
xchg
jns
xchg
pop
adc
push
stc
mov
cmp
jns
test
aaa
inc
fidivr
lahf
clc
pop
pop
dec
add
push
pushf
inc
loopne
sbb
push
sub
or
aas
xchg
xchg
adc
xor
sub
xor
dec
jmp
div
inc
fsubr
jae
mov
test
adc
and
inc
in
xchg
xchg
mov
lock
add
ret
shl
in
clc
inc
add
movs
inc
mov
icebp
sbb
sub
sub
test
sub
loop
cmp
es
bt
jns
or
push
movs
push
adc
mov
mov
sub
jmp
retf
add
scas
inc
sbb
pop
pop
rcl
pop
shl
mov
(bad)
fisttp
push
mov
push
sub
and
mov
pop
inc
daa
icebp
xchg
dec
pop
leave
pop
or
xor
xor
and
or
pop
and
add
sub
mov
jns
or
icebp
rcl
add
in
push
add
or
inc
or
xchg
add
push
dec
add
xor
in
adc
sbb
adc
dec
pop
pop
mov
inc
mov
cmp
push
xchg
jle
adc
xor
ins
add
pop
outs
loop
jge
add
data16
mov
aam
enter
cmp
mov
mov
push
add
ins
lods
pop
add
out
rcl
cli
push
mov
xor
inc
mov
out
(bad)
pop
mov
in
(bad)
out
jp
outs
cmp
inc
inc
lea
mov
push
mov
cwde
xchg
test
cmc
mov
mov
test
addr16
xor
adc
mov
sub
dec
mov
jl
inc
(bad)
loopne
dec
repnz
or
pushf
das
adc
(bad)
mov
xor
mov
test
push
and
sbb
mov
(bad)
imul
call
rcr
add
add
(bad)
pop
mov
push
jg
mov
fiadd
push
xor
dec
cmp
sti
or
mov
sbb
or
cli
dec
cmp
dec
add
and
pop
aaa
test
cwde
push
inc
(bad)
sub
xchg
push
test
add
fdivr
imul
ins
js
rol
mov
jle
lds
push
fsubr
add
(bad)
je
scas
mov
aam
repz
movs
inc
leave
add
nop
inc
outs
lock
cli
dec
mov
sub
ins
add
xor
add
push
addr16
cmp
adc
or
out
or
jge
bound
sub
add
cmp
ret
mov
mov
fisub
sbb
push
or
jae
(bad)
jg
add
dec
jmp
xor
push
dec
add
cmp
(bad)
(bad)
cmp
sbb
cmp
test
aaa
gs
dec
jge
push
add
sub
or
xor
test
out
xchg
push
outs
sub
jno
mov
and
sahf
jl
jl
push
ret
fld
sbb
shr
add
das
adc
in
movs
stos
or
sar
xchg
(bad)
and
dec
fiadd
pop
push
call
fwait
add
in
jae
add
js
jae
ins
sbb
das
mov
or
loopne
int
mov
cs
mov
or
and
xor
fwait
(bad)
fs
dec
pop
push
sbb
movs
add
push
xchg
js
ret
call
sbb
arpl
xchg
cld
xchg
push
mov
or
mov
ins
jge
xchg
dec
mov
or
push
push
es
clc
ror
or
cmp
cwde
mov
lock
stos
and
or
ror
scas
popa
ret
and
xor
aam
adc
mov
hlt
adc
fdiv
mov
jnp
and
pop
mov
clc
and
stos
mov
popa
inc
adc
push
fdiv
sbb
(bad)
push
jno
sahf
adc
mov
stos
add
movs
je
sti
js
into
add
inc
scas
cmp
mov
sti
lds
jb
jae
adc
call
pop
nop
adc
call
jae
ror
pop
mov
sbb
lods
fcomp
sub
push
push
loopne
in
mov
fs
add
dec
add
inc
or
xchg
adc
sub
movs
and
imul
sub
inc
pop
xor
loopne
inc
jl
push
sahf
js
cmp
xchg
add
movs
push
pop
hlt
aas
test
push
mov
sub
mov
sub
imul
xor
in
xchg
dec
lock
sti
dec
clc
pop
stc
xchg
pop
sti
or
dec
sbb
sbb
fmul
test
and
out
shr
inc
adc
inc
std
or
(bad)
jbe
cmps
mov
std
push
pop
mov
hlt
jo
imul
sbb
or
push
mov
xor
std
xchg
sbb
and
cwde
std
mov
cmp
adc
cs
enter
in
xchg
das
ror
push
call
pop
ins
dec
or
pop
or
(bad)
push
dec
cmps
in
es
adc
push
(bad)
xor
push
xor
xor
cmp
push
pop
pop
pop
mov
popa
cmp
pop
jp
and
and
fs
(bad)
ins
(bad)
lock
test
or
ins
enter
pop
lods
test
rcr
push
and
mov
idiv
add
xor
int3
es
adc
pop
push
fdiv
mov
clc
push
cld
sub
sub
sbb
(bad)
ror
cmps
jne
jo
sub
push
cmp
daa
add
rcl
push
test
fs
js
popa
je
jge
inc
pop
sbb
inc
mov
int3
sub
add
sbb
jb
dec
pusha
rcl
outs
aas
inc
(bad)
enter
rep
xor
or
fucomi
push
repz
push
nop
clc
add
xchg
adc
sysenter
pop
js
or
fldcw
daa
xor
rcr
sub
or
jl
int3
mov
sub
dec
and
or
add
push
rol
addr16
scas
pushf
push
gs
add
push
rcr
ret
or
sub
inc
push
xlat
sub
sbb
rol
cmp
rcl
sub
ret
dec
jns
sub
mov
neg
push
or
adc
and
and
and
mov
inc
xchg
inc
movs
dec
or
jmp
add
push
adc
xchg
leave
test
mov
jae
mov
xchg
movs
inc
sbb
xor
mov
add
fcomp
(bad)
jmp
movsx
jmp
or
movzx
call
ret
pop
pusha
mov
jmp
fld
and
pushf
push
cdq
sub
adc
mov
adc
add
cmp
ds
or
adc
xchg
test
leave
jns
fcmovnb
pop
hlt
popf
pop
xchg
cwde
pop
iret
repz
dec
ret
mov
es
fdivr
inc
mov
mov
shr
(bad)
sub
rol
push
mov
sub
test
fsub
prefetch
jne
jae
cwde
lds
adc
adc
mov
sbb
sahf
sub
ret
mov
pop
dec
push
add
xor
xor
mov
xchg
jne
and
or
ss
push
sbb
adc
cmp
mov
dec
inc
inc
jae
or
inc
sbb
cmp
mov
adc
push
dec
ins
xchg
xchg
adc
sub
inc
out
sti
sub
pushf
ss
sahf
popa
dec
dec
rol
stc
fs
sbb
push
test
xchg
push
test
imul
bound
sbb
sbb
rol
(bad)
aad
push
adc
xor
rcl
pop
sbb
sbb
les
mov
lea
(bad)
leave
pop
cmps
movs
fsubp
push
stos
clc
or
data16
loopne
loope
or
aad
or
or
and
stc
xchg
rcr
ss
cwde
fist
fidiv
pop
jne
mov
in
fld
push
popa
(bad)
sbb
and
dec
push
loop
es
pop
nop
inc
mov
test
and
xor
xor
pusha
inc
sbb
sub
mov
pusha
inc
pusha
mov
scas
add
lock
cmp
into
ja
or
dec
sbb
cmp
lea
push
cli
je
popa
push
add
cld
frstor
sbb
(bad)
dec
sbb
fcom
mov
xchg
cli
in
sub
push
jecxz
shl
test
sbb
test
lds
dec
jg
shl
sub
ret
fsub
nop
pop
pop
xor
lahf
dec
mov
add
or
xor
add
popa
add
mov
mov
or
push
sbb
scas
cmp
stos
in
inc
inc
loopne
shl
xor
loop
pop
popa
and
xor
or
sub
(bad)
clc
sbb
push
outs
mov
dec
movs
push
pop
icebp
js
fld
pop
fstp
or
xor
xchg
sbb
mov
mov
sbb
dec
push
mov
and
jbe
fmul
pushf
add
push
add
mov
or
adc
jmp
pop
jmp
cmp
je
mov
and
movs
add
and
stos
push
cli
xor
jns
mov
adc
pop
jns
out
in
cwde
push
stos
clc
xchg
es
mov
es
or
aas
inc
shl
lods
or
add
mov
jle
test
sar
cld
ds
(bad)
jmp
test
sbb
push
cmp
pop
fisttp
inc
les
dec
and
dec
retf
leave
mov
adc
es
mov
sbb
xor
scas
inc
xchg
mov
adc
xor
mov
mov
mov
jmp
jle
cmp
jl
adc
popf
cmp
pop
nop
jp
adc
enter
(bad)
sbb
js
sbb
pop
inc
inc
or
or
fs
push
push
jp
or
cmp
imul
shl
pushf
pop
jnp
adc
adc
mov
icebp
jo
aas
push
out
inc
adc
icebp
inc
dec
mov
push
pop
(bad)
std
or
pop
mov
sub
pop
and
pop
loope
rol
and
cmp
pop
and
ins
pop
jne
mov
add
imul
pusha
sti
fwait
inc
cmp
sbb
or
pop
fimul
xchg
push
call
dec
and
push
clc
inc
inc
lock
js
cmp
pop
mov
rol
sub
and
mov
cmp
aaa
leave
mov
inc
sub
jmp
pop
mov
jle
cmp
mov
dec
mov
dec
push
loopne
mov
ret
push
inc
adc
pop
jmp
pop
push
(bad)
std
pop
inc
mov
aad
add
test
and
je
dec
inc
dec
dec
sbb
cli
xor
add
push
cmp
in
adc
xlat
xchg
fs
fisub
sub
jmp
sub
adc
enter
scas
xchg
js
aad
aaa
add
dec
cdq
retf
and
jne
cwde
xor
xchg
push
adc
mov
jnp
pop
jmp
sbb
loope
sub
rcr
pop
xor
pop
nop
push
dec
imul
jns
sub
inc
test
cmp
sbb
sbb
pusha
add
sti
icebp
push
add
cli
or
push
add
fs
loop
or
pop
sti
iret
sbb
inc
push
jmp
add
clc
add
js
jle
sub
add
scas
inc
imul
jmp
push
pusha
neg
mov
in
retf
jbe
pop
pop
adc
das
adc
add
fadd
ins
loope
mov
sbb
lock
ins
and
into
mov
rcl
add
pop
fwait
add
adc
sbb
test
sub
mov
add
fidiv
xor
mov
ret
and
adc
push
and
jno
scas
push
jns
fld
leave
sub
add
inc
add
mov
dec
call
jb
std
and
cmp
mov
pop
ret
cwde
sbb
ds
sub
add
adc
sbb
test
inc
and
call
lods
imul
mov
cmps
push
jne
push
xor
mov
sbb
and
adc
cmps
lods
lods
ds
inc
jle
test
stc
jb
push
cmp
je
xchg
movs
popf
es
mov
mov
test
dec
and
sub
xchg
adc
adc
push
push
fcomp
mov
sbb
add
jp
shr
outs
mov
in
push
or
pop
pop
rcl
imul
push
pop
push
xor
mov
les
push
pop
inc
or
ja
scas
push
adc
shl
or
sar
and
mov
push
sub
dec
sti
cmp
add
jns
cmc
stos
ret
xor
fmul
out
jnp
ins
adc
xchg
adc
mov
add
cmps
out
ins
loope
adc
push
and
mov
xchg
jns
pop
cmps
cmps
loope
add
sbb
ds
push
daa
xor
sbb
push
and
jmp
xchg
mov
xor
loop
mov
push
adc
and
stos
push
adc
es
dec
xor
loopne
repnz
mov
mov
push
mov
and
pop
or
inc
or
sub
inc
pop
aas
xor
mov
jnp
sti
nop
or
jmp
cmp
push
mov
or
xor
push
stos
movs
inc
div
stos
sub
aam
or
pop
sbb
push
push
out
add
dec
push
movs
or
add
adc
push
or
adc
push
pop
sub
hlt
push
pop
push
cwde
or
or
pop
pop
sub
xchg
jmp
mov
push
cmp
pop
test
mov
adc
sub
xor
cwde
jno
push
mov
aam
mov
inc
inc
add
add
xor
(bad)
out
add
xor
jmp
sbb
ins
pop
add
jno
sub
fwait
fwait
or
xor
add
enter
jl
mov
dec
in
push
adc
adc
add
movs
lods
or
and
sbb
sqrtps
sbb
movs
into
popf
test
xor
mov
sbb
ret
or
mov
jmp
pop
inc
or
in
outs
inc
sbb
jne
test
lea
lods
dec
xor
jne
lods
das
and
hlt
into
aaa
sub
sbb
xchg
dec
xchg
or
xor
rcl
inc
or
sar
mul
lock
xchg
pop
jne
cmps
or
mov
rol
add
(bad)
es
adc
cmp
fdiv
enter
mov
jmp
test
dec
(bad)
mov
or
sar
jae
(bad)
inc
cwde
retf
pop
push
push
push
adc
les
xor
xlat
sbb
sub
mov
xor
xor
jne
add
aam
mov
pop
nop
pushaw
out
push
fcomp
inc
ficom
add
call
call
adc
repnz
pop
rcl
and
mov
adc
fcomp
mov
xor
sub
adc
rcl
das
inc
mov
loop
movs
iret
adc
arpl
push
mov
dec
push
jbe
xor
sub
jo
adc
sub
add
dec
call
or
shr
clc
push
mov
cmps
add
sub
sbb
int3
ret
pop
inc
xor
mov
and
pop
inc
cs
outs
sub
or
fisub
pop
adc
sub
cmp
or
sbb
adc
jno
stos
fbld
std
and
dec
stos
inc
sbb
xor
inc
cmp
push
dec
and
jmp
test
jg
jbe
pusha
cmp
aam
or
inc
add
adc
pop
or
call
push
jo
mov
or
rcl
cmp
jmp
and
ins
ret
cmp
fs
movs
stc
arpl
jp
push
xlat
and
or
dec
add
add
mov
fidiv
pusha
fistp
inc
and
sbb
cli
fdiv
and
icebp
mov
adc
ins
sbb
sub
out
jb
xchg
cwde
xchg
add
and
xor
mov
mov
adc
les
pusha
lea
push
icebp
lock
add
xor
cmps
and
outs
or
push
and
inc
std
adc
pusha
adc
xor
in
adc
mov
js
add
mov
add
int3
xor
push
cmp
ja
test
mov
movs
pop
clc
or
xchg
xor
add
push
fwait
or
loop
jmp
sub
add
or
push
rol
fcmovnb
jbe
add
rcr
add
icebp
xor
add
dec
dec
scas
jmp
js
sub
shl
aaa
or
xchg
pop
dec
jb
test
add
pop
sbb
ret
xchg
lahf
adc
or
repnz
and
mov
mov
adc
inc
push
jle
adc
iret
adc
pop
or
mov
ret
loope
jnp
xchg
test
nop
or
movs
ins
out
lea
rol
stos
popf
or
ficomp
mov
xchg
pop
enter
xor
bound
xor
sub
jno
cmp
clc
add
ds
test
xchg
jne
dec
mov
pop
dec
loop
retf
rcr
hlt
mov
pop
cmps
pop
push
rcr
add
mov
sub
imul
das
cld
or
or
dec
rol
xor
jl
lods
(bad)
les
fimul
adc
or
xchg
sub
push
add
ins
cld
pop
xor
adc
fbld
je
sub
push
pop
add
cmp
adc
loop
cld
pop
rol
cld
bound
cmps
add
sbb
call
cmp
aam
cmp
sbb
sub
xor
inc
into
xor
shr
gs
(bad)
jo
jo
clc
push
jmp
sti
or
repz
xor
retf
adc
dec
pop
imul
or
adc
xor
pop
ins
add
bndstx
jecxz
sub
add
ins
adc
jmp
pop
sub
outs
rcr
push
add
jnp
jmp
push
mov
mov
jo
sbb
dec
or
ss
js
sbb
mov
mov
jmp
fbld
xor
dec
sub
sbb
ins
lods
and
shl
cmps
hlt
or
out
and
fwait
push
movs
add
pop
jmp
adc
jbe
sbb
adc
sbb
push
add
inc
or
jne
sbb
add
shl
pusha
pop
mov
std
adc
lock
cmp
fnstcw
or
or
sbb
movs
mov
in
jnp
pop
jbe
dec
jbe
and
add
or
mov
pop
out
call
mov
jns
adc
jmp
into
add
stos
stos
es
addr16
or
xchg
ret
and
push
popf
sbb
sub
xor
sgdtd
and
arpl
or
sbb
add
push
sbb
cld
pop
adc
adc
mov
xchg
and
aad
xor
jb
ds
pop
(bad)
dec
mov
sti
imul
inc
and
js
mov
mov
call
mov
jle
mov
leave
mov
inc
push
sub
jmp
mov
mov
and
sbb
sbb
stos
rol
enter
test
or
dec
push
adc
adc
fwait
ret
pop
adc
pop
adc
ror
mov
cmp
pop
ret
out
add
xchg
(bad)
push
sbb
test
aad
test
jne
push
add
rol
cmp
inc
fsubr
das
pusha
push
xchg
test
inc
test
mov
dec
xchg
adc
aam
outs
mov
push
mov
sbb
scas
stos
aaa
fild
das
out
lea
xor
xor
mov
ret
mov
sub
sub
jl
scas
add
cld
or
push
add
add
leave
out
jge
test
in
bound
push
xchg
sub
xchg
nop
mov
sub
xor
mov
adc
dec
dec
cmp
and
scas
pop
push
inc
add
(bad)
in
push
movs
xchg
outs
adc
push
retf
jns
mov
push
xchg
and
xchg
inc
xor
inc
imul
cmps
mov
sub
add
push
mov
in
push
inc
aad
sbb
push
and
add
rol
inc
setg
or
aaa
push
imul
gs
dec
lock
jge
pop
jne
movs
ficom
or
inc
push
adc
and
test
sub
lds
nop
mov
mov
test
test
loopne
mov
or
(bad)
enter
setns
js
sub
jns
push
push
pop
stos
adc
jo
paddb
jbe
push
fild
sub
cmp
jne
adc
sbb
xchg
jmp
in
pop
push
aam
fiadd
or
and
push
mov
cmp
or
push
icebp
xor
jmp
xor
sbb
adc
and
shl
or
out
add
dec
inc
push
mov
and
adc
xor
and
inc
arpl
or
mov
aaa
push
xor
enter
and
xor
imul
xor
push
jns
adc
adc
pushf
test
pop
lods
aam
ud1
loopne
adc
or
ficom
and
and
push
mov
int3
push
lahf
mov
push
or
cmp
cmp
pop
xchg
xchg
(bad)
jg
pop
dec
icebp
loopne
xchg
pop
imul
push
mov
inc
and
sub
in
add
push
mov
and
sbb
fwait
jle
(bad)
aas
xor
pusha
inc
and
inc
dec
push
jb
and
and
and
sbb
mov
retf
repz
or
fiadd
add
arpl
mov
push
cmps
jmp
sub
shl
sahf
cmp
test
sbb
xchg
pop
xchg
lahf
mov
sub
cmp
sub
push
cmps
inc
dec
push
stos
fld
push
mov
aam
or
(bad)
sbb
push
dec
cmp
adc
xchg
push
inc
and
and
shl
push
mov
lods
or
and
sbb
(bad)
cmp
pop
mov
movlps
push
push
mov
mov
mov
push
jbe
ror
int3
adc
adc
cwde
or
dec
sbb
cmp
sbb
push
ins
add
adc
frstor
sub
ja
mov
das
and
pop
mov
sub
out
push
cmp
add
pop
push
clc
ds
push
and
or
or
das
pusha
pushf
xchg
adc
add
enter
das
add
hlt
push
push
jnp
push
sbb
loope
inc
fdiv
mov
ret
cmp
out
jmp
xor
and
dec
loope
cmp
fnstcw
cdq
pop
add
xchg
pop
push
cmps
cmps
cmp
inc
inc
sub
out
jne
dec
cmp
leave
mov
dec
jne
push
sbb
inc
loope
lods
adc
in
and
dec
(bad)
sahf
sub
push
not
test
pop
mov
push
or
movs
or
fist
int
xor
std
iret
cmc
inc
aaa
inc
out
or
pop
jp
pop
sub
shr
dec
retf
les
or
pop
xchg
cmp
dec
shl
fild
jne
(bad)
push
or
jmp
push
movs
sbb
add
mov
aas
jo
add
adc
sub
cmp
adc
aam
add
(bad)
mov
(bad)
lock
mov
lds
enter
sub
or
aaa
test
sti
test
pop
xor
cmp
or
shl
shl
push
sbb
xchg
push
cmp
test
nop
push
add
call
js
mov
lds
enter
dec
adc
retf
xchg
adc
xor
push
xchg
adc
les
adc
or
lods
sub
or
dec
dec
or
shr
xchg
mov
xor
xor
mov
pop
(bad)
sbb
dec
aas
mov
cmp
sbb
adc
ja
jmp
push
sub
pop
fimul
movs
fiadd
(bad)
adc
outs
cmps
pop
cmp
or
out
cs
push
shl
inc
adc
into
fs
test
xchg
cmp
clc
pop
or
(bad)
push
scas
push
pop
test
xor
arpl
js
dec
movs
xchg
sbb
sub
(bad)
sbb
sub
fwait
inc
cmps
pop
ds
sub
add
inc
scas
loopne
add
or
movs
and
fidivr
pushf
mov
push
popf
jb
jp
inc
test
aaa
test
dec
pop
or
jl
mov
cmps
sub
push
and
(bad)
test
xlat
and
lods
ss
jns
inc
pop
dec
adc
pusha
stc
xchg
mov
pop
push
shr
(bad)
dec
mov
mov
sub
xlat
mov
stos
jecxz
imul
add
mov
sbb
inc
les
push
cmp
aad
sub
push
fs
shl
in
mov
and
and
xchg
les
xor
mov
or
dec
pop
pop
movs
aaa
movs
repnz
inc
push
sub
adc
xchg
retf
add
add
test
call
sbb
dec
sub
pop
jmp
push
push
jae
mov
test
and
jbe
cld
call
add
aaa
fnstsw
add
adc
push
ret
xor
test
add
pop
retf
xor
ins
jne
imul
test
mov
mov
in
mov
push
xchg
jmp
and
cmp
mov
xor
loopne
scas
and
or
push
in
nop
or
adc
xchg
mov
jne
imul
call
inc
add
xor
movups
xor
pavgw
dec
je
jb
les
popa
sbb
mov
sbb
movs
sahf
ret
adc
adc
inc
xchg
or
jne
sbb
enter
mov
pop
dec
pop
mov
add
sbb
outs
and
add
ror
add
sub
sti
jg
sub
daa
mov
(bad)
sbb
jae
or
sar
sub
push
sbb
inc
xchg
stos
dec
add
std
mov
stc
mov
call
dec
or
sub
mov
adc
adc
sbb
xchg
add
sbb
mov
xor
and
adc
shl
push
sub
mov
sub
or
jnp
(bad)
fstp
xor
shl
jbe
retf
outs
push
sbb
addr16
int3
push
ds
and
push
call
(bad)
pusha
shl
dec
add
or
nop
jno
pop
and
sbb
cli
xchg
bound
scas
inc
push
xor
(bad)
xchg
pop
mov
mov
sbb
jo
es
mov
add
xchg
ds
inc
shl
or
clc
sub
or
test
lea
add
or
inc
jmp
cmp
add
add
adc
popf
dec
sbb
xchg
pop
cdq
fdivr
pop
and
mov
es
pop
ret
push
push
adc
push
push
fadd
dec
ret
pop
je
dec
lea
inc
xchg
mov
pusha
add
loope
loope
push
sub
cmc
push
(bad)
arpl
xor
jmp
dec
add
lea
jne
push
or
dec
sahf
or
sbb
mov
pop
in
inc
push
jmp
or
mov
inc
popf
sub
xor
inc
add
inc
adc
(bad)
adc
xchg
sbb
popf
pop
mov
and
sub
jo
call
scas
pusha
mov
adc
(bad)
xor
retf
outs
sub
sbb
mov
jns
add
(bad)
inc
add
push
and
and
clc
test
push
call
pop
or
pushf
dec
xor
je
add
push
(bad)
jl
call
or
inc
cmps
sbb
cmp
jmp
cmp
dec
pushf
dec
xor
add
and
stc
dec
inc
cmp
stc
mov
push
test
adc
mov
test
jmp
jae
shr
add
cmp
push
adc
shl
or
mov
or
xor
push
inc
xchg
imul
ror
sti
jg
jo
cmp
adc
add
imul
add
loope
inc
push
jo
call
xchg
or
push
cdq
jmp
xchg
ins
push
inc
mov
add
call
pop
xchg
fs
lods
cmps
aaa
inc
cmp
movs
sbb
adc
mov
xchg
xor
inc
xchg
jl
ret
jo
cmp
pop
inc
mov
pop
(bad)
and
mov
dec
jecxz
push
data16
pushf
js
cmp
cs
adc
xor
xor
loop
imul
add
inc
icebp
out
adc
popf
push
adc
push
int
mov
add
pop
test
dec
mov
push
mov
mov
inc
ins
push
pop
jl
iret
sbb
push
add
push
jnp
push
loop
ja
dec
mov
mov
or
mov
aam
mov
mov
in
add
add
and
pop
in
and
or
jl
retf
adc
adc
dec
jmp
call
add
inc
pop
or
pop
adc
jbe
pusha
inc
and
mov
mov
add
jmp
adc
add
scas
pusha
aam
aam
dec
sub
jno
dec
imul
mov
das
ret
pslld
outs
ror
or
sar
mov
or
dec
fmul
and
repnz
cmp
push
(bad)
nop
aam
xor
xor
mov
les
dec
imul
loopne
push
dec
dec
dec
add
mov
ss
and
(bad)
nop
pop
mov
mov
mov
fldcw
in
dec
les
lock
sbb
cmp
fild
jae
sub
pop
push
sbb
xor
dec
and
add
fidiv
sub
test
or
mov
dec
sub
mov
cmp
rol
movs
aaa
enter
jge
dec
movs
ins
and
xchg
(bad)
sub
jne
adc
xchg
push
dec
push
adc
push
movs
movs
mov
test
cmp
ds
fistp
xrelease
dec
pop
dec
inc
js
dec
popf
test
(bad)
cmp
fild
sbb
dec
sar
pop
pop
dec
popa
ins
or
scas
fcom
pop
add
shr
jl
jne
jecxz
inc
sub
sbb
das
ret
or
(bad)
cmp
or
fld
adc
add
sub
mov
sbb
jne
pop
(bad)
mov
pop
int3
mov
enter
sar
mov
or
movzx
dec
jb
pop
dec
jge
dec
shl
sbb
ret
add
add
dec
mov
xchg
push
adc
(bad)
adc
mov
pop
cmps
out
ror
add
(bad)
or
(bad)
mov
or
adc
(bad)
cmp
or
adc
out
arpl
arpl
push
movs
fcom
mov
rol
add
sub
adc
or
push
inc
daa
inc
outs
jo
lock
adc
mov
cmc
jo
push
retf
popa
xchg
push
add
pop
mov
xchg
cmp
inc
sbb
and
pop
push
ja
push
mov
push
or
je
xor
add
push
dec
cmp
sbb
dec
xchg
inc
xor
movs
jmp
adc
adc
mov
and
add
dec
dec
call
jb
xchg
xor
ja
adc
icebp
nop
jb
add
push
(bad)
test
xor
int
mov
sbb
aam
(bad)
adc
jmp
out
les
push
ret
add
jbe
jbe
pop
xor
movs
xchg
cmp
cmp
pop
jmp
inc
and
dec
inc
rcr
jbe
inc
inc
push
and
mov
mov
clc
push
sbb
inc
lods
ins
out
gs
mov
sub
rcr
int
es
xor
cmp
mov
jo
dec
jns
add
jg
adc
cdq
lea
and
mov
mov
adc
fmulp
or
mov
adc
sub
sti
push
(bad)
fild
xchg
push
xor
xor
sbb
push
inc
xor
arpl
sbb
ds
adc
ins
jl
pusha
inc
jae
sti
dec
mov
xor
push
mov
adc
sub
xchg
sbb
icebp
(bad)
jb
or
out
cmp
xchg
sbb
mov
push
fcom
test
sub
fcmovnb
inc
lods
sbb
call
dec
inc
jmp
push
xchg
push
dec
call
mov
cmps
add
arpl
pcmpeqd
lods
cmp
fadd
or
mov
scas
sti
(bad)
xlat
push
mov
dec
repz
dec
mov
and
push
mov
pop
mov
xchg
test
or
mov
fwait
pcmpeqd
jmp
or
cmp
fdivr
jbe
push
sub
ins
add
adc
and
sub
or
ficom
mov
mov
js
jbe
mov
push
pop
push
jno
dec
add
imul
mov
add
inc
imul
inc
clc
test
inc
les
popa
adc
push
xor
mov
ret
jp
sahf
daa
adc
jns
cdq
into
xor
mov
push
and
push
xor
movzx
int
(bad)
xchg
inc
cmp
push
gs
setbe
add
shr
or
sbb
push
jle
push
pop
dec
add
mov
mov
aaa
xor
or
push
ins
or
pop
cmps
sub
mov
ins
mov
inc
pop
add
popf
xor
dec
add
jmp
lods
jmp
xchg
outs
loop
adc
xlat
fld
and
js
leave
add
adc
and
clc
push
xchg
les
sbb
push
(bad)
pusha
fidiv
bsr
fcmovnbe
inc
jp
movs
mov
popf
pop
cmps
pop
fidivr
adc
repnz
dec
inc
sub
sub
ss
add
jno
mov
push
pop
or
or
mov
inc
call
jno
cmp
pop
ror
or
inc
cmp
in
cmp
outs
mov
jmp
cwde
push
arpl
test
daa
mov
push
sub
dec
out
push
jmp
rcl
or
sar
cmp
pop
pop
push
or
and
xor
inc
push
sub
je
mov
js
lods
int3
shl
and
inc
retf
mov
push
xchg
xor
cmps
adc
(bad)
cmp
add
add
into
jne
adc
clc
int3
mov
xor
add
jb
mov
in
or
call
ss
dec
movs
inc
mov
pop
pop
rcl
adc
push
popa
daa
or
inc
test
dec
cmps
sub
inc
pop
(bad)
mov
fiadd
and
das
sti
cmp
in
int3
add
sub
push
pop
pop
sub
adc
jne
cwde
push
inc
push
dec
in
adc
lods
and
stos
dec
test
inc
add
aam
push
or
dec
rcr
or
pusha
sbb
dec
sar
push
add
push
enter
inc
push
and
call
lock
repnz
ret
nop
cwde
or
or
mov
or
lods
aas
ds
xor
inc
outs
add
xchg
sbb
lea
popf
inc
inc
lea
lds
mov
pop
mov
jbe
scas
add
or
sub
pop
mov
or
(bad)
shr
std
inc
add
mov
push
pop
sbb
pop
sbb
cmps
out
daa
mov
popa
fcmovnb
sbb
out
xchg
ja
sub
inc
jmp
inc
adc
or
dec
lods
sub
jno
arpl
dec
loop
or
dec
and
ret
inc
loope
push
add
dec
or
push
dec
or
cmc
inc
and
adc
push
gs
or
je
pop
ret
add
ins
and
push
add
fs
mov
daa
jmp
xchg
cli
push
repz
stos
jmp
daa
push
jne
xchg
add
dec
push
cdq
inc
jp
stos
dec
lods
or
sbb
or
inc
pop
mov
pop
xor
and
or
clc
test
adc
retf
mov
push
not
jmp
push
adc
push
sar
mov
arpl
je
jge
xchg
adc
push
xchg
aam
mov
mov
or
or
pusha
outs
adc
movs
sbb
add
add
mov
xchg
dec
pop
leave
add
sub
loopne
dec
bound
and
xchg
or
xchg
pop
xor
push
inc
pushf
in
inc
xor
mov
push
(bad)
dec
pop
xchg
or
add
fucomi
jle
inc
cld
xor
out
(bad)
mov
imul
inc
inc
cmp
or
jecxz
mov
jmp
dec
std
int
icebp
sub
mov
pop
add
ret
lods
sbb
movs
mov
jb
cmp
neg
push
xor
push
and
mov
cmp
mov
das
push
or
push
sti
pop
stos
and
popf
xor
daa
adc
add
dec
xor
dec
xchg
mov
sub
xchg
not
pushf
inc
push
pop
pop
inc
retf
sub
out
ss
imul
jle
ror
out
adc
dec
xor
pop
mov
aam
aas
jbe
fld
ds
pop
bound
sbb
pop
add
(bad)
jg
scas
mov
pop
or
cmps
push
rol
(bad)
xor
pop
add
mov
rol
dec
mov
jb
test
dec
mov
jb
or
and
out
cmp
mov
inc
push
push
ins
clc
jmp
or
gs
pop
retf
xor
ins
add
aaa
or
jmp
sub
lods
push
movs
sbb
and
scas
in
dec
add
xor
adc
iret
iret
popf
inc
mov
push
lds
sbb
or
nop
out
add
fisubr
and
ins
sub
jge
sbb
and
ds
cmps
jns
sbb
fdiv
aad
pop
cld
inc
dec
push
jbe
mov
(bad)
aam
shr
jge
xchg
outs
adc
xchg
test
inc
push
push
into
inc
test
mov
cmp
sbb
stos
add
sub
add
cmp
sbb
inc
inc
pop
cmp
adc
xor
cmp
or
pop
add
imul
imul
sbb
je
or
aas
dec
in
dec
nop
movs
cld
jmp
mov
adc
mov
inc
frstor
pop
xor
sti
or
cmp
pop
jmp
pop
sub
movs
loopne
out
adc
adc
jae
sbb
out
dec
sbb
jge
inc
push
mov
out
scas
or
lea
sbb
(bad)
(bad)
dec
pop
test
xchg
jno
xchg
add
mov
or
das
jl
ret
xchg
add
sbb
popf
sub
jmp
adc
xchg
imul
fisubr
xchg
pop
lock
jo
add
mov
inc
dec
adc
(bad)
or
ret
test
fild
jnp
xchg
daa
pop
push
movs
adc
add
rcl
sub
inc
sbb
cdq
sti
and
add
adc
add
push
or
fmul
pop
xchg
jo
add
dec
scas
mov
and
pop
xor
xor
cmp
xor
push
sar
mov
push
cmp
xchg
and
cmp
not
add
in
add
push
add
mov
push
fiadd
popa
adc
mov
jo
inc
jnp
xor
dec
inc
adc
cs
pop
cmps
push
pop
jo
aad
aam
jno
(bad)
aaa
out
xor
add
popf
cdq
push
icebp
daa
sbb
push
cmp
pop
js
xor
xor
mov
xchg
pusha
retf
sub
and
push
mov
loope
test
jg
push
fwait
pop
cmp
or
fcmovnb
and
jmp
cmp
lock
dec
add
lods
inc
or
pop
mov
dec
dec
xor
pusha
and
enter
pop
mov
loop
and
jmp
pop
call
movs
push
inc
push
mov
inc
nop
mov
ja
push
je
mov
mov
jmp
dec
das
test
xchg
add
fnsave
call
mov
mov
fcom
shr
or
or
inc
data16
cmp
jnp
xchg
fs
lock
dec
fld
add
lock
popf
add
cdq
js
sub
mov
cmp
jmp
xchg
cmp
lods
or
sbb
jg
shr
or
mov
add
test
mov
jle
jl
repz
ins
add
ret
ret
mov
mov
jae
pop
hlt
sub
daa
inc
stc
aad
pop
xor
sub
sbb
dec
sub
push
inc
or
cs
and
sub
xchg
pop
pop
sbb
fisttp
ficom
sub
pusha
add
outs
dec
adc
aam
popa
sahf
mov
xor
push
jb
xchg
loopne
and
jnp
iret
sbb
retf
and
stos
dec
and
aam
xchg
cmc
or
icebp
inc
cmp
adc
add
inc
sub
lods
sub
mov
sahf
stc
call
aad
jb
xchg
or
cmp
test
adc
push
mov
gs
adc
pusha
pusha
rol
fldcw
inc
mov
adc
inc
xor
fs
pop
sbb
push
dec
sub
cmp
adc
rol
pop
lds
xor
cmps
bound
repz
pop
inc
scas
sbb
sbb
mov
mov
mov
jmp
mov
imul
add
mov
or
fs
test
test
push
or
push
rol
mov
sbb
or
jp
jmp
rcr
sti
push
mov
ins
pop
mov
jmp
out
mov
or
leave
rol
ror
push
or
jecxz
cmp
pop
mov
sub
div
pop
push
stos
push
daa
push
int
gs
jb
cwde
pop
inc
or
dec
arpl
js
xchg
clc
dec
sub
sub
test
inc
out
mov
xor
inc
or
push
and
jno
cmps
ror
lds
inc
inc
pop
les
add
jb
xchg
or
mov
jmp
inc
cmp
mov
jmp
cdq
add
push
dec
add
adc
inc
or
cmp
xchg
sbb
(bad)
repnz
mov
mov
out
jno
inc
sub
add
xor
or
jmp
ficomp
dec
sub
push
and
sbb
cmp
mov
mov
inc
cmp
aaa
fsincos
inc
arpl
adc
add
sbb
xchg
jmp
or
adc
or
cmp
cwde
test
(bad)
jae
shr
and
sub
shr
and
sub
push
xor
jmp
mov
rcr
jo
add
je
ins
push
push
fs
dec
or
pop
fistp
adc
adc
imul
cmp
int
cli
add
sbb
je
xchg
mov
xor
or
adc
mov
ret
inc
jo
mov
jle
test
push
out
sub
ins
es
push
jmp
cs
sub
sbb
aam
lahf
int
adc
mov
push
arpl
aam
push
xchg
cmp
(bad)
sub
jmp
call
fcomp
imul
adc
test
cmp
dec
and
push
ins
push
jne
in
sbb
and
mov
add
lock
je
mov
das
(bad)
jle
push
add
cmp
adc
xor
push
pop
and
out
inc
inc
or
jmp
inc
inc
in
call
jne
cmp
jg
in
pop
jecxz
in
xor
test
lods
or
or
xor
or
pushf
sub
inc
and
sar
hlt
ss
sub
jge
mov
mov
mov
cmp
lock
ds
inc
(bad)
push
sbb
push
xor
loopne
pop
in
push
mov
pop
into
shl
fdiv
xor
xchg
mov
ficom
pop
enter
fstp
jbe
sbb
or
sub
pop
pop
push
xchg
cmp
pop
cmp
inc
push
jl
sbb
leave
sbb
push
lods
xor
(bad)
cmp
adc
mov
inc
pusha
adc
shl
push
lods
push
icebp
daa
mov
cmps
addr16
scas
mov
adc
adc
mov
adc
pop
mov
and
nop
cmp
sbb
arpl
imul
adc
push
mov
xor
aad
nop
ins
test
fstp
les
dec
jne
mov
bound
cmp
enter
xlat
lods
mov
pop
dec
or
adc
jg
ins
jecxz
add
cmp
inc
(bad)
jge
and
push
jno
sahf
punpckhwd
and
sub
cli
xchg
fs
les
sbb
retf
jmp
push
test
fidiv
mov
xchg
jecxz
fmul
call
pop
jo
pop
dec
adc
ror
test
adc
(bad)
rcr
jb
inc
sub
pop
daa
dec
inc
adc
out
test
in
xchg
add
sbb
addr16
xchg
push
(bad)
jns
cmp
outs
fld
and
mov
cmp
nop
add
lods
push
mov
and
iret
out
scas
pusha
or
mov
dec
ja
adc
cwde
rcr
shr
pcmpeqw
lods
sbb
aad
in
adc
add
cs
fild
popf
adc
push
push
jecxz
lea
xchg
bound
(bad)
push
push
add
and
inc
call
fwait
jl
pusha
aad
jo
lock
add
fs
push
rol
(bad)
mov
repz
or
add
in
fisttp
adc
test
inc
movs
lds
je
call
push
inc
cdq
loop
enter
aas
pop
add
in
pusha
dec
cdq
cmp
mov
push
(bad)
jne
or
jle
adc
(bad)
in
jmp
sbb
lds
inc
jno
sub
dec
fnstenv
gs
sar
xchg
or
stos
scas
fistp
popa
aaa
pop
jne
add
rol
xor
add
inc
push
cmp
sub
push
fmul
repz
add
rcr
cmp
fdiv
(bad)
ror
pop
sbb
js
push
ret
mov
add
ficomp
xor
xor
jecxz
sub
jne
ins
mov
push
aaa
and
sub
pop
cmc
add
mov
movups
and
mov
sub
and
push
push
adc
adc
mov
jl
add
rcr
jle
mov
xor
push
inc
nop
aaa
jb
push
mov
add
xchg
dec
in
dec
jno
bound
mov
cmps
jp
cld
push
mov
imul
call
sar
lea
pop
mov
or
inc
mov
cs
retf
shl
retf
cwde
or
push
int
mov
cwde
int
fld
in
(bad)
and
sbb
sbb
cmp
hlt
retf
sar
cld
loopne
pop
mov
stc
dec
and
inc
or
adc
mov
mov
je
cld
int
sub
pop
xchg
pusha
leave
mov
cmc
cmp
dec
mov
adc
loop
inc
enter
ret
dec
xchg
jmp
or
cmp
jge
jne
sub
lahf
inc
adc
mov
mov
in
inc
mov
fcom
lahf
cmp
mov
inc
push
sub
ss
dec
pop
add
iret
js
xor
adc
adc
in
in
aaa
xor
test
push
cmp
dec
stos
adc
jg
dec
add
(bad)
push
pop
jle
and
xor
das
fidivr
lods
lock
and
inc
lods
(bad)
lods
mov
test
test
ss
iret
imul
retf
retf
jge
add
add
sub
adc
mov
inc
iret
pop
les
xor
clc
jl
pop
cli
shl
cmp
or
sbb
cdq
pop
mov
pop
dec
and
add
pop
int3
xchg
lea
mov
jecxz
out
sbb
adc
sbb
jle
add
ret
and
pop
dec
aas
and
cmp
or
mov
push
push
push
push
push
jmp
push
pop
sbb
xchg
xor
test
push
out
cmp
pop
jge
out
sti
ror
mov
mov
inc
push
pop
jmp
and
push
or
push
daa
inc
(bad)
xlat
dec
add
sbb
jmp
jnp
or
imul
fadd
les
push
add
(bad)
(bad)
rcl
cmp
lods
or
inc
jecxz
shr
xchg
xchg
pop
and
xchg
sbb
mov
sbb
sub
mov
cmp
in
cmp
(bad)
adc
xchg
iret
inc
add
loop
(bad)
mov
and
push
repnz
jb
xor
shr
imul
xor
sbb
addr16
jl
std
push
cmps
and
cdq
into
add
scas
add
add
lds
sub
sar
loop
shr
sbb
retf
fst
test
cwde
fld
jmp
pop
and
shl
mov
cmp
jl
loope
mov
push
lahf
ss
jle
xor
and
aam
sbb
retf
inc
xchg
add
dec
sbb
sbb
cmps
xor
push
leave
cwde
mov
mov
dec
ins
test
ins
(bad)
xor
or
xchg
cmp
adc
sub
dec
shl
sar
sbb
pop
inc
inc
and
adc
pop
jmp
jge
lock
push
push
rcr
push
repz
push
push
adc
shl
adc
dec
je
and
or
(bad)
shl
push
and
in
out
sahf
xchg
push
lahf
sbb
and
lea
sbb
pop
fwait
inc
(bad)
push
and
and
movs
push
nop
sub
fimul
inc
fstp
fild
(bad)
sub
gs
or
cmp
jecxz
mov
fscale
cs
inc
adc
arpl
add
inc
sbb
out
pop
inc
and
mov
jg
mov
aam
or
push
add
or
mov
xchg
sub
push
lock
sbb
xchg
sub
mov
(bad)
jge
js
xor
sbb
and
ins
ror
and
test
jnp
ror
fsub
add
mov
and
stc
jmp
inc
push
add
cmps
out
aaa
xchg
(bad)
xor
cmp
adc
inc
in
adc
jb
test
fs
and
adc
and
and
inc
or
lock
fiadd
outs
call
cwde
out
pushf
pop
add
icebp
adc
(bad)
adc
and
ss
mov
popa
sub
aaa
dec
pusha
sub
outs
jl
addr16
and
push
mov
loop
jne
jno
add
shr
cwde
dec
mov
rol
sbb
jb
clc
imul
hlt
sbb
dec
mov
jo
js
xor
outs
xor
or
icebp
xor
les
out
push
push
cmc
pop
jne
push
mov
cwde
mov
mov
jge
inc
jne
lock
mov
push
pop
push
add
pop
xchg
fist
jge
mov
test
mov
into
mov
or
adc
or
add
jmp
add
mov
push
pop
pop
push
push
mov
mov
push
push
mov
sahf
nop
push
je
push
lock
pushf
mov
sub
jecxz
pop
xor
xor
adc
pop
sub
dec
and
(bad)
sahf
mov
popf
mov
ret
and
ficomp
fcomp
and
pop
sub
lea
sbb
and
push
in
mov
jmp
push
mov
push
retf
sub
mov
out
retf
sub
jne
int3
sbb
fmul
imul
push
arpl
cmps
pop
mov
or
out
sub
add
pop
cmp
lahf
aaa
add
cmp
xor
cmp
add
xchg
push
sub
xor
jg
add
fdivr
dec
call
in
sbb
adc
popf
push
xor
push
ret
xchg
test
dec
jmp
ret
xor
sub
push
sub
mov
dec
cdq
inc
rol
sub
pusha
adc
push
mov
test
jecxz
call
sbb
jne
cld
shl
sub
add
pop
jne
ror
into
add
adc
mov
test
adc
or
or
sbb
cmp
jnp
scas
mov
add
mov
pop
cmp
or
sahf
push
(bad)
cld
mov
or
add
sahf
jecxz
jmp
iret
dec
enter
aas
or
mov
jecxz
cmp
push
fcmovnb
aaa
push
jge
cvtdq2ps
and
je
call
inc
fsub
mov
jmp
cmp
imul
(bad)
nop
mov
mov
and
mov
jmpw
(bad)
jmp
mov
(bad)
ror
or
xor
add
or
mov
or
(bad)
dec
je
cmp
je
cmp
je
cmp
je
xchg
enter
div
adc
outs
call
mov
push
jg
rcr
xchg
cmp
and
xchg
ss
sahf
retf
mov
pop
fdivr
sahf
sub
and
(bad)
enter
pusha
dec
push
pushf
loop
pop
sbb
pop
push
sbb
fdiv
aas
dec
or
jo
not
ret
mov
push
pop
in
cmp
je
adc
es
xchg
mov
xor
rcl
in
pop
rcl
sub
add
ds
ss
stos
psubb
in
and
sbb
in
scas
xchg
or
int3
push
mov
lahf
test
sbb
sub
pop
sahf
ret
push
pusha
cmc
and
pop
add
mov
and
and
xchg
pusha
clc
and
jno
cmps
cmp
cmp
dec
adc
cmp
mov
cmp
jmp
push
ror
add
push
loopne
imul
adc
fcom
push
cs
add
in
mov
push
arpl
pop
aad
popa
je
sbb
je
fmul
pop
inc
push
retf
sbb
jns
outs
sbb
mov
push
mov
push
aam
or
sahf
push
mov
add
mov
push
jne
jecxz
mov
and
test
xchg
pop
cmp
add
loopne
add
pushf
mov
es
xchg
mov
add
mov
inc
mov
pop
xchg
push
fwait
mov
dec
inc
inc
or
push
dec
inc
inc
outs
push
lea
js
mov
inc
pop
sbb
jns
mov
pusha
adc
hlt
movs
pop
shr
xor
add
mov
add
mov
jge
(bad)
mov
cmp
mov
xor
jecxz
push
push
movs
push
sar
les
adc
pop
pop
and
stos
jecxz
sub
jecxz
(bad)
dec
rcr
sbb
xchg
cmps
loopne
and
pop
pop
(bad)
ja
iret
dec
xor
add
pushf
add
mov
(bad)
pop
inc
lods
pusha
pop
inc
or
mov
adc
and
(bad)
push
fcom
repz
push
mov
arpl
mov
dec
out
cmp
jp
cmp
cdq
mov
iret
adc
aas
add
push
and
mov
and
cmps
push
or
cwde
sub
arpl
and
cmc
fcom
push
add
pop
or
pusha
inc
lahf
cmp
mov
push
sub
setno
and
cmp
dec
mov
push
call
(bad)
sub
dec
sub
pop
cmp
jae
cmp
rcl
xor
add
xchg
and
fsubp
mov
dec
fmul
add
xor
dec
xor
adc
in
pop
mov
popa
dec
or
sbb
xlat
xchg
clc
test
mov
std
add
fadd
repnz
shl
sub
imul
xor
sbb
sbb
cwde
push
or
xor
pop
or
and
je
jl
or
in
test
pushf
pop
mov
aaa
xchg
cmps
sub
add
imul
xchg
xchg
fistp
jl
mov
xchg
mov
popf
mov
or
and
cmp
push
adc
rol
mov
mov
les
mov
mov
xchg
mov
xchg
fcom
inc
pop
(bad)
rcr
cdq
sbb
jns
or
dec
push
adc
arpl
clc
pop
pop
idiv
xchg
fld
cmp
jge
lahf
jo
sub
mov
je
inc
out
xchg
test
shl
outs
imul
jo
add
dec
(bad)
stc
and
(bad)
xor
dec
add
fstp
daa
jmp
or
xor
inc
ret
fs
ret
pop
jne
sbb
cmps
je
jo
popf
je
push
jl
mov
push
pushf
mov
push
int
imul
les
mov
cmp
aaa
jne
out
sti
adc
pop
push
mov
ror
cli
add
inc
bndldx
push
add
mov
shl
out
xor
mov
in
fwait
add
loope
imul
das
test
push
mov
cmps
outs
sbb
ret
pop
add
jb
jns
pushf
dec
and
xor
dec
or
ret
dec
repz
xlat
das
cdq
add
dec
jge
cmp
jne
mov
aam
cmp
dec
aaa
sub
sbb
enter
ret
sbb
push
mov
and
cmp
mov
inc
or
nop
push
clc
fistp
ret
xchg
inc
or
out
ss
adc
push
push
jne
sub
imul
loope
add
outs
xor
push
xor
and
pop
adc
push
pop
inc
jge
js
cmp
sub
jnp
in
daa
or
xor
stos
clc
iret
push
stos
sahf
(bad)
(bad)
cwde
sbb
sbb
pop
mov
push
adc
std
cmps
and
enter
dec
mov
jo
neg
sbb
and
call
push
sub
push
sub
cmp
retf
mov
pop
rol
xchg
push
mov
add
xchg
dec
mov
rol
push
push
ret
push
es
loopne
lds
(bad)
aad
adc
push
and
dec
retf
imul
mov
mov
push
xchg
push
push
push
lds
pop
mov
aad
cmp
jne
and
push
leave
loopne
les
and
xor
cmps
arpl
and
push
out
sub
sub
sub
or
shl
sbb
pop
inc
repnz
(bad)
jo
sub
xor
in
push
xchg
out
xchg
sbb
dec
cwde
push
push
jne
jno
test
cwde
mov
pop
mov
in
lahf
xor
mov
ins
jge
pop
push
mov
lods
push
stc
add
popf
call
sbb
rcr
jmp
push
add
inc
add
and
sub
and
loop
jp
cwde
ret
lock
clc
mov
sub
inc
mov
or
push
jo
jmp
push
jae
ret
xor
jg
push
ret
ret
mov
push
or
add
lods
mov
enter
push
fs
push
xchg
and
xlat
inc
sbb
inc
adc
push
cwde
xor
or
ror
push
inc
jg
or
sub
lods
icebp
mov
dec
into
mov
arpl
rcl
mov
mov
xor
push
lea
xlat
inc
jb
and
xor
pop
cdq
add
nop
cmps
xchg
out
or
add
xchg
add
js
int
mov
jo
add
xchg
ss
jmp
xchg
fld
and
(bad)
push
paddusb
adc
dec
mov
and
loopne
and
clc
lods
ins
hlt
xchg
mov
cdq
outs
dec
cmp
ret
jg
fiadd
dec
xor
xchg
add
add
pop
adc
pop
inc
rcr
pop
lods
xor
icebp
aaa
mov
jl
sbb
test
sbb
mov
fmul
push
pop
sub
add
test
pusha
nop
push
push
jl
adc
push
inc
xchg
xchg
hlt
xor
xor
add
pop
jle
pop
lahf
mov
and
xlat
adc
rol
pop
mov
jle
sbb
sub
sbb
xor
sub
pop
inc
push
daa
xchg
sub
adc
or
hlt
mov
adc
and
mov
sub
jg
and
add
stos
sbb
rol
push
jmp
iret
jle
mov
or
jecxz
or
and
jecxz
sbb
add
movs
(bad)
in
dec
ret
popa
int3
jbe
mov
rep
mov
inc
dec
inc
push
nop
div
sub
mov
imul
int
xor
sbb
fs
loopne
inc
adc
adc
adc
or
mov
(bad)
dec
xchg
or
sub
imul
mov
mov
cld
add
lea
add
test
and
(bad)
lock
add
dec
out
sbb
scas
pop
shl
shl
add
push
imul
pop
push
retf
dec
sar
fadd
sbb
and
push
adc
cwde
add
mov
or
adc
shr
jne
jne
jb
mov
pop
or
push
into
add
pop
add
sbb
push
sbb
popa
inc
add
or
push
cmp
jp
xor
cmp
mov
jo
out
mov
dec
dec
sbb
pop
jg
dec
and
push
mov
and
stos
cmp
adc
jo
call
loopne
mov
clc
js
dec
je
push
js
pop
xor
xor
dec
clc
retf
retf
mov
and
sbb
cmps
push
lock
daa
push
jmp
outs
adc
xchg
or
mov
adc
or
dec
adc
and
aaa
mov
outs
adc
mov
sub
pop
jp
xchg
mov
pop
repnz
int
loope
(bad)
shl
mov
or
or
aaa
lods
mov
xor
sbb
xor
nop
jg
and
jae
jmp
(bad)
push
sub
enter
test
adc
push
push
mov
inc
pop
inc
es
sub
cmp
dec
dec
inc
pop
mov
mov
xlat
mov
cmps
rol
sub
dec
mov
stos
sar
or
gs
dec
dec
mov
pushf
mov
adc
into
cmp
mov
mov
ret
or
push
or
adc
cmp
in
inc
and
cmp
cmps
setnp
push
test
(bad)
push
cdq
push
mov
call
rcr
adc
inc
dec
dec
or
or
mov
pop
push
push
mov
lea
add
and
cmc
mov
sbb
xor
xor
add
mov
cs
(bad)
jp
adc
sti
or
adc
mov
aas
mov
add
xor
repz
(bad)
jne
jbe
pushf
sar
push
fmul
outs
add
xor
adc
sub
push
sbb
xchg
push
add
dec
xor
add
test
or
sub
dec
rcl
loope
pop
pushf
add
and
lds
scas
cmp
push
les
outs
fimul
inc
in
mov
stc
or
xchg
cmp
push
fadd
lock
scas
inc
adc
xor
popf
or
mov
mov
fld
sbb
cmps
sbb
add
push
xor
add
adc
or
retf
cmp
mov
adc
test
push
fst
adc
add
add
or
ror
sbb
add
ror
fdivr
leave
or
add
rcl
push
or
push
cmps
push
dec
xchg
mov
xchg
push
or
loop
fs
adc
push
movs
mov
inc
cwde
push
push
adc
or
fsub
nop
sub
sahf
fsubr
dec
or
pusha
push
mov
jo
int
jecxz
sar
mov
inc
cmps
leave
(bad)
shr
sub
maxps
loopne
test
iret
push
mov
or
lock
imul
mov
push
inc
add
loope
(bad)
mov
jae
mov
lock
(bad)
jge
lods
jb
ror
dec
fnstsw
repz
fcomp
stos
ds
icebp
xchg
xchg
call
adc
aad
popa
(bad)
and
push
jo
imul
jb
mov
retf
xor
lods
mov
jno
dec
adc
test
add
scas
call
rol
ins
xor
mov
mov
add
xchg
data16
xor
(bad)
cs
mov
clc
push
add
lahf
xor
or
pop
cmp
or
clc
std
arpl
jns
movsx
retf
add
mov
and
xchg
movs
mov
mov
xchg
aad
push
adc
xor
call
xchg
lds
mov
add
xchg
add
or
jno
scas
mov
inc
inc
and
fdiv
mov
push
adc
imul
jne
sbb
and
mov
xchg
call
in
nop
ret
and
sbb
sbb
dec
rcl
rcl
jno
ret
sbb
cmp
adc
retf
push
adc
add
xor
dec
test
js
movs
xor
(bad)
int3
or
mov
popa
add
mov
sbb
mov
inc
cmc
jnp
adc
pop
xchg
or
inc
and
movs
cmp
je
inc
mov
clc
cmc
loope
outs
movs
sub
mov
or
adc
dec
add
out
cld
dec
inc
cmp
inc
jo
jmp
rol
jle
mov
sbb
xchg
or
sub
mov
inc
imul
xchg
dec
jnp
test
jne
aaa
xchg
inc
push
and
mov
stos
nop
fldenv
adc
cmp
clc
mov
ror
mov
mov
pop
dec
dec
add
inc
and
pusha
jmp
in
fdiv
bt
or
repnz
mov
js
pop
sbb
aad
and
and
adc
push
sbb
clc
push
mov
push
add
inc
cmp
jl
mov
push
pop
inc
xchg
or
mov
test
es
clc
sbb
call
xor
pusha
retf
arpl
add
test
or
sub
and
pop
adc
in
cmps
jb
ds
icebp
xor
jmp
and
add
test
mov
pusha
mov
mov
or
sti
pop
invd
add
or
je
inc
sbb
jns
push
jb
out
push
pop
or
jmp
adc
scas
xor
xchg
sub
enter
jge
sbb
xor
mov
out
(bad)
push
shl
fsubr
dec
data16
cmp
test
cdq
movs
(bad)
out
vcvtps2pd
and
mov
cmps
cmp
lds
stos
xchg
repnz
lea
jg
mov
sbb
push
sbb
fdiv
xchg
xchg
(bad)
adc
add
add
adc
icebp
cmp
mov
pop
mov
aam
lock
xchg
test
xchg
jmp
cmps
pop
sub
dec
mov
pop
ret
xchg
lods
cmps
jbe
pop
lods
xor
add
popa
ret
imul
xor
(bad)
or
pop
mov
(bad)
popa
cmp
not
cmps
mul
ss
mov
fs
xor
pop
push
popa
sub
in
dec
jmp
pop
fwait
xor
adc
dec
jl
outs
pop
call
sub
mov
or
mov
or
mov
rcl
inc
not
push
jmp
xchg
xchg
les
mov
pop
jmp
cmp
ret
mov
movnti
inc
outs
inc
or
xchg
ficomp
dec
or
es
add
aam
inc
or
cmp
or
mov
cmp
xor
xchg
push
fwait
jne
add
(bad)
ins
sub
ss
je
test
pusha
mov
call
retf
adc
pop
test
sub
mov
dec
test
and
int
dec
xor
push
pop
and
xchg
or
inc
cmp
adc
push
(bad)
sbb
xchg
and
out
add
je
add
jo
push
rol
cmp
fnsave
xchg
inc
bound
mov
cmps
inc
pop
push
sbb
out
or
cmps
pop
int
aam
sub
push
jae
retf
lea
popa
dec
sub
sbb
mov
dec
ret
jmp
inc
pusha
movs
mov
call
loopne
pop
jecxz
loope
push
push
push
test
sbb
mov
dec
or
fwait
push
das
cmp
cmp
push
xor
dec
adc
push
js
je
imul
div
or
pop
push
mov
jge
mov
add
cmps
shl
push
cmp
jp
scas
shl
dec
and
ror
add
fidivr
fwait
adc
push
cmps
call
push
pop
ins
out
fldcw
stos
aaa
lods
push
add
and
push
cwde
cs
sub
mov
or
add
add
or
add
push
or
xor
add
rol
pop
ret
jg
or
dec
in
fwait
adc
test
cmc
jne
inc
sbb
aad
sub
pop
sbb
dec
pop
sbb
hlt
popa
sub
jo
push
add
rol
mov
or
rcr
xchg
loope
stc
inc
in
push
ds
add
and
pop
js
das
push
enter
add
add
add
popa
xchg
ins
call
jle
hlt
jp
xor
movs
mov
push
hlt
in
mov
jl
adc
inc
sbb
or
dec
add
mov
in
pavgb
cwde
out
aam
stc
cli
aam
stc
adc
lea
inc
shr
push
fisttp
mov
mov
ror
push
pop
cmps
stc
les
cmp
mov
mov
and
and
lods
mov
jg
test
inc
cmp
ins
sbb
jle
jnp
mov
push
push
push
push
cmp
adc
dec
ss
fs
and
add
enter
std
mov
mov
add
pushf
jmp
mov
or
add
call
push
dec
jmp
pop
loopne
mov
xchg
cmc
push
loop
push
vmovntps
sbb
jb
imul
sub
xor
iret
add
(bad)
jno
or
leave
test
sub
adc
pop
lods
add
xor
push
pop
es
dec
jmp
push
mov
call
xchg
cmp
lods
pop
push
push
dec
shr
call
sbb
adc
cs
je
adc
div
and
or
lods
jle
mov
and
jp
shl
loopne
pop
cli
or
jne
cmp
jne
mov
bnd
add
sub
inc
test
ret
dec
test
movs
je
fwait
js
mov
je
push
xchg
mov
dec
lds
rcr
sbb
into
or
and
push
inc
in
mov
add
inc
cmc
and
xor
cmps
call
popa
nop
cmps
jmp
lds
push
push
xor
inc
sbb
jnp
enter
in
sbb
in
mov
inc
mov
(bad)
jge
sahf
push
mov
sbb
rcl
into
popf
add
leave
mov
xchg
and
inc
test
(bad)
popf
push
call
jne
je
in
jmp
dec
in
mov
call
pop
fild
add
adc
or
arpl
push
jmp
jg
sbb
lea
std
call
lds
jne
mov
pushf
add
sbb
add
aad
fstp
pop
or
stos
mov
test
fs
loope
pushf
fisubr
xor
and
fs
outs
adc
inc
xor
push
inc
in
sub
or
inc
add
jns
aaa
sbb
jo
jne
and
and
mov
push
outs
adc
pop
leave
sub
mov
cmovne
retf
lods
or
xchg
xchg
xchg
(bad)
adc
pop
adc
xor
int
pushf
ret
dec
les
fs
or
sbb
mov
pusha
lea
push
adc
(bad)
lea
xor
add
pop
push
cmp
stos
(bad)
ficom
push
adc
ins
jnp
push
inc
enter
mov
lock
jecxz
dec
adc
sub
jl
or
pushf
inc
popa
xchg
stos
and
call
cmc
add
mov
add
xor
shl
cwde
mov
aam
or
pusha
mov
icebp
inc
pop
outs
dec
dec
ja
movs
enter
push
sub
xor
add
das
sub
sbb
scas
icebp
jl
lds
and
xchg
ror
adc
jmp
cmp
and
cmps
test
mov
push
or
mov
psrlw
xchg
push
mov
or
mov
mov
or
mov
adc
ret
mov
icebp
push
in
add
outs
in
sub
cmp
mov
push
sbb
push
add
xchg
xor
pop
push
imul
arpl
mov
aaa
enter
pop
mov
mov
xor
mov
ret
cmp
and
ret
jae
adc
(bad)
jne
mov
je
jecxz
rol
push
add
xchg
inc
js
pop
in
mov
adc
dec
and
inc
mov
mov
xor
jne
add
cmp
inc
loope
lods
mov
cmps
lds
idiv
or
nop
adc
dec
xchg
jecxz
test
mov
(bad)
mov
arpl
sbb
push
jl
ds
sub
hlt
mov
(bad)
push
fdiv
jno
pop
xchg
mov
jge
cmp
pop
jmp
xor
jmp
push
lods
jne
xor
push
cmp
pop
jo
mov
sbb
cmc
nop
rol
mov
loop
aam
cmp
test
push
pop
(bad)
xchg
sbb
and
lock
ret
and
ret
je
push
push
push
adc
ret
xor
out
push
push
add
test
or
(bad)
pop
mov
cmp
les
mov
dec
cmp
adc
mov
mov
ret
jb
push
add
add
push
and
mov
loopne
scas
and
add
stc
mov
add
or
adc
addr16
push
cwde
dec
add
gs
or
adc
lea
fpatan
out
xchg
jo
add
and
fild
push
loop
push
cmp
add
test
or
xchg
push
cmp
loope
mov
xchg
ja
mov
sub
xor
cmps
fdivr
sbb
ret
mov
pushf
test
pop
fisub
(bad)
xor
repz
adc
mov
shl
mov
fld
sub
es
cld
add
jnp
sbb
js
push
push
sbb
pusha
sahf
push
aaa
xchg
xor
lods
shl
push
cmp
pop
mov
(bad)
pop
cmp
(bad)
adc
jno
(bad)
popf
adc
xchg
xchg
adc
sbb
jl
in
push
and
dec
jb
add
and
lock
data16
xchg
sbb
xchg
adc
xchg
fmul
sub
fld
push
push
pop
push
dec
add
call
mov
push
dec
movs
ins
or
loope
je
xchg
shl
rol
int3
jmp
or
pop
rcr
push
push
and
lock
cmp
and
mov
and
imul
sti
not
and
cmp
jo
sub
add
ror
add
dec
or
dec
add
sbb
sbb
aam
jecxz
xchg
cli
nop
or
pop
pop
jg
inc
mov
out
dec
in
push
mov
into
jg
rcl
jb
sub
xor
dec
xor
push
cmp
jne
inc
inc
xor
xchg
clc
cmp
add
mov
and
dec
dec
repnz
cmp
ss
add
mov
jne
sub
xor
xor
jmp
add
inc
cmp
retf
stos
xchg
push
push
jne
test
push
dec
push
xor
push
add
and
pusha
je
aam
xor
cli
pop
mov
jae
sbb
(bad)
and
shl
arpl
lods
data16
mov
jge
push
and
xor
push
adc
dec
movs
sbb
out
push
scas
add
xchg
sbb
not
and
hlt
std
cmps
or
mov
mov
cmp
push
jmp
cmps
or
sub
add
lock
adc
jb
clc
pusha
mov
mov
sahf
mov
sub
inc
add
or
cmp
xor
cmp
daa
jo
dec
adc
or
mov
ret
inc
das
push
pcmpeqw
cmps
retf
add
lods
or
ret
jmp
pop
movs
cmp
pop
or
or
std
(bad)
and
cmp
sub
jae
ror
push
jmp
push
test
das
cmp
and
sbb
mov
add
pop
jmp
cdq
les
cli
adc
xor
dec
in
pop
inc
lods
daa
push
pop
adc
pavgw
inc
and
xchg
femms
cmc
in
cmp
enter
mov
jne
adc
ret
or
adc
xor
xchg
int
jnp
sbb
(bad)
or
cmps
cmps
or
aaa
xlat
sbb
ret
inc
pop
fst
or
lods
test
or
xchg
and
mov
(bad)
adc
movaps
imul
cmps
rcl
adc
or
add
clc
add
outs
push
mov
xchg
inc
cmp
out
sbb
fsub
nop
jecxz
or
jle
sub
popa
add
aad
mov
xor
or
jmp
push
mov
or
lods
loope
xor
jns
mov
or
sub
push
(bad)
sub
xchg
mov
pop
or
inc
inc
adc
push
inc
sub
pop
add
rol
push
sbb
sbb
pop
inc
pop
in
adc
gs
sahf
push
sub
jbe
jle
adc
xor
mov
add
jmp
inc
outs
retf
dec
movs
xor
add
xor
sbb
out
jbe
xchg
push
push
pop
and
add
or
add
fld
outs
xor
jecxz
repnz
nop
sbb
pop
sbb
cmc
add
test
rcl
adc
das
push
mov
xor
cs
adc
cmp
mov
fwait
dec
fs
xchg
or
xor
dec
out
test
mov
jge
and
inc
mov
ins
mov
add
inc
push
jmp
data16
lock
push
scas
cli
fistp
adc
mov
cmp
or
loopne
sar
cmp
or
jo
aaa
jmp
or
sub
or
cmps
test
(bad)
mov
fldcw
mov
sbb
dec
add
ret
xchg
mov
push
add
mov
in
push
cmp
xor
xchg
sub
sub
test
test
rcr
retf
adc
or
push
js
fisub
dec
outs
adc
push
clc
adc
cmp
mov
aad
fmul
jnp
xchg
jecxz
psllw
clc
push
inc
add
out
push
or
add
inc
ja
pop
fadd
gs
adc
push
and
adc
inc
inc
movs
retf
adc
arpl
sti
adc
add
sub
les
sahf
rol
inc
int
stos
cwde
dec
ror
inc
adc
aaa
fs
sbb
fimul
and
push
xor
ja
sbb
shl
and
inc
add
(bad)
and
push
adc
add
or
push
cmp
adc
lods
xor
add
add
inc
pop
ret
stc
(bad)
lea
lock
jle
adc
xor
movs
je
sbb
inc
das
jecxz
outs
or
mov
scas
js
aam
mov
sbb
adc
movs
cmc
sub
vmwrite
sbb
fadd
(bad)
enter
add
ins
jnp
jmp
xchg
push
push
add
add
dec
sub
cmp
xchg
pop
and
mov
cmp
mov
scas
cmp
lock
add
(bad)
jl
xor
(bad)
and
adc
repnz
add
add
push
push
pop
jge
xchg
sbb
lock
mov
fs
ss
push
push
jmp
lahf
push
fcom
sub
adc
imul
ror
cld
add
inc
xor
adc
rol
pop
pop
mov
xor
adc
mov
cmc
in
rol
lds
es
sub
(bad)
mov
in
push
push
jmp
test
dec
push
add
scas
adc
xlat
retf
fdiv
dec
enter
adc
dec
push
enter
mov
jge
mov
fs
inc
pusha
jmp
rol
push
sbb
sbb
call
fcom
cmc
mov
jae
sar
mov
movs
call
add
in
fadd
xor
push
mov
jge
ins
push
and
jecxz
sbb
push
sbb
push
mov
lods
sbb
std
add
push
jae
in
adc
fcmovb
call
cmp
mov
dec
js
cmp
sbb
pop
retf
call
enter
js
pop
clc
(bad)
fsubr
js
push
psrlq
(bad)
sub
jmp
data16
addr16
jbe
scas
popa
fdiv
int3
cmp
jl
or
jg
sbb
add
inc
(bad)
jg
fwait
enter
xor
adc
cmps
lods
sti
les
add
mov
inc
sbb
test
test
jb
call
shr
jp
add
nop
lock
xor
sbb
retf
mov
push
out
adc
call
cmp
sahf
or
sbb
dec
retf
xchg
sub
in
aam
mov
and
dec
sbb
jle
das
cmp
mov
jbe
ret
add
or
(bad)
cs
pusha
push
call
inc
cmp
rcl
sbb
aas
adc
sbb
dec
inc
rcr
adc
outs
ret
out
or
xchg
test
adc
icebp
test
xor
js
push
(bad)
sub
sar
lea
les
mov
cmp
dec
cmp
inc
xor
jo
sub
add
xor
add
sub
add
jnp
lock
ins
push
mov
clc
push
mov
pop
pop
sbb
pushf
sbb
cmp
ror
je
mov
or
cmps
xor
and
xchg
scas
stos
push
or
inc
push
push
inc
jg
mov
rol
sub
mov
lods
push
sbb
pop
adc
adc
hlt
inc
ins
pop
scas
push
or
xchg
and
push
fwait
jg
ficomp
out
and
mov
or
aas
and
jne
(bad)
xchg
push
imul
imul
xchg
outs
(bad)
pop
pop
jl
adc
lds
enter
cmp
ins
mov
and
pop
imul
sysexit
push
cmp
cli
push
cmp
adc
les
or
xor
mov
aam
sub
inc
shr
retf
push
jb
les
xor
mov
test
adc
push
bnd
mov
adc
adc
addr16
xor
sub
xlat
mov
sub
pop
add
pusha
pushf
and
xchg
jb
xor
and
cmp
cmp
sbb
sub
inc
sti
pop
mov
inc
hlt
imul
push
shr
xor
jmp
push
dec
jle
and
push
(bad)
call
rol
pushf
mov
aad
jbe
jno
xchg
aad
xor
cmc
push
pop
cmp
jbe
fnstenv
xchg
test
mov
add
sub
cmp
inc
sub
inc
push
sbb
retf
lahf
push
pop
adc
add
sub
mov
push
add
cmp
jmp
adc
and
js
lods
sub
mov
loop
(bad)
adc
js
ret
arpl
mov
clc
or
mov
mov
xor
dec
fstp
pop
retf
call
pushf
mov
adc
cs
mov
sbb
push
xchg
iret
cmp
dec
push
cmp
mov
xchg
mov
cmp
push
xor
push
inc
inc
pop
pop
add
shl
pop
ret
push
pop
add
mov
das
out
inc
cmp
lods
or
cmp
cmp
mov
adc
push
sbb
cwde
add
add
mov
push
fisttp
sub
push
jns
or
and
push
push
or
or
sti
iret
imul
dec
jp
mov
dec
fild
mov
adc
or
mov
add
push
sub
mov
pop
inc
sub
in
ins
(bad)
(bad)
rcl
and
mov
mov
xor
inc
in
lock
ror
sub
dec
in
lock
dec
xor
xchg
or
add
iret
sub
xor
int
adc
pop
sbb
scas
loopne
out
cwde
or
mov
(bad)
dec
out
mov
adc
je
adc
and
test
mov
mov
fld
add
push
xchg
inc
adc
inc
cmp
add
clc
enter
mov
cmp
es
adc
sub
cmp
or
daa
inc
inc
imul
hlt
push
mov
fdivrp
clc
sbb
fs
into
shr
dec
push
push
push
inc
add
jge
jae
test
cmp
cmps
lea
icebp
pop
mov
(bad)
clc
cmp
je
pop
cmps
jle
addr16
xor
jae
outs
mov
sub
lock
cmp
xchg
mov
lds
jo
jmp
popa
push
mov
add
push
enter
cmp
mov
dec
call
fsubr
add
nop
sub
daa
and
push
add
xchg
inc
scas
sub
pusha
gs
fcomp
movs
inc
aaa
nop
cmp
sahf
xor
lock
and
push
mov
sbb
sbb
arpl
mov
ss
push
jns
jnp
mov
shl
ror
retf
or
sub
add
and
es
mov
imul
push
rol
in
std
add
sub
inc
push
jmp
or
mov
outs
mov
rol
dec
fild
inc
scas
mov
mov
mov
sub
push
xor
or
scas
and
ja
test
jb
rcr
adc
xor
in
mov
push
jg
fsub
jmp
add
mov
add
add
leave
cmp
out
mov
inc
je
aaa
jge
movs
cmp
pusha
mov
ja
mov
mov
(bad)
cmp
pop
add
and
(bad)
mov
xor
inc
pop
(bad)
enter
or
cmp
xor
ins
fadd
sti
jle
dec
inc
cmps
loopne
loop
and
popaw
cmc
push
pop
sbb
lock
and
jne
cmp
and
add
loop
sub
sub
add
lods
or
xor
sbb
ret
inc
adc
ror
ficomp
xchg
push
cmp
fs
cli
mov
retf
test
sar
lea
dec
dec
jmp
aas
push
je
jns
in
inc
or
push
pusha
or
imul
lahf
jge
fwait
test
ja
clc
and
mov
and
cmp
adc
xchg
es
js
adc
fbld
aad
ja
push
sub
movs
or
sbb
shl
(bad)
scas
cmp
ja
cmp
xchg
or
jae
(bad)
xor
ret
call
imul
(bad)
dec
pop
ds
or
mov
add
shl
mov
xor
add
jmp
cmp
aaa
push
fsub
xchg
imul
or
aad
add
stos
adc
push
pop
stos
es
sbb
fdivr
loop
jo
retf
fs
leave
cld
xchg
cmc
add
(bad)
push
aam
mov
popa
xor
cmps
(bad)
add
push
cmpxchg
mov
fdivr
gs
sbb
push
adc
jno
dec
hlt
push
push
add
mov
dec
sub
cmp
xchg
in
xor
dec
pop
and
or
popf
mov
jo
clc
ins
enter
cld
imul
call
sbb
and
cmp
adc
cmp
cmp
mov
retf
ret
add
cmp
push
mov
mov
push
(bad)
and
mov
or
scas
and
xchg
jbe
dec
inc
mov
nop
mov
pop
mov
stc
and
xor
pop
push
inc
sbb
lock
adc
pop
jno
mov
stos
and
mov
adc
dec
add
dec
or
inc
test
jns
enter
out
sub
jg
jge
mov
cmps
sahf
fnstenv
das
ror
lds
mov
xor
push
out
jle
test
jmp
aas
add
adc
xchg
jbe
add
or
data16
fdivr
mov
sbb
add
push
or
add
sub
sub
movs
dec
mov
popa
pop
fild
hlt
push
ret
add
in
push
cmp
xchg
jg
ror
fsubr
sbb
inc
repz
call
mov
out
imul
bound
dec
jmp
lea
push
push
dec
xchg
add
sbb
ds
rcl
jmp
jnp
adc
in
pop
jbe
or
cmp
cmp
addr16
xor
ret
lods
hlt
push
push
fcomi
mov
(bad)
pusha
ins
sub
outs
sti
sbb
call
jae
jne
or
push
pop
add
push
lods
xor
ins
mov
push
dec
or
sbb
or
imul
pop
push
mov
(bad)
jmp
jmp
jbe
test
sbb
fsqrt
ins
cmp
push
push
mov
sub
sbb
cmp
or
mov
lahf
jg
adc
cld
cdq
inc
(bad)
pop
and
add
imul
in
(bad)
nop
ss
sub
push
add
dec
mov
(bad)
gs
mov
pop
fsub
retf
jno
(bad)
mov
out
add
(bad)
jne
stos
pop
lods
popa
push
cld
adc
cmp
push
add
sub
sub
xchg
cmps
sbb
idiv
repnz
sub
or
ret
das
les
inc
sahf
mov
adc
add
jge
aad
fadd
add
mov
xchg
pushf
or
clc
or
xor
(bad)
fiadd
inc
pop
gs
add
sbb
push
push
add
push
inc
cmovnp
ret
nop
or
ds
jns
xchg
rol
xor
icebp
cmp
and
pop
pop
mov
sar
jmp
mov
ficom
and
jg
or
adc
lahf
gs
mov
push
xor
add
dec
and
mov
imul
inc
inc
add
ins
outs
adc
xor
frstor
adc
xchg
xchg
mov
ja
adc
ss
pushf
adc
dec
inc
stos
pop
sub
retf
add
ins
add
and
pop
retf
(bad)
int3
jmp
retf
(bad)
sbb
or
cmp
repz
dec
les
xchg
sub
xchg
mov
or
add
jle
mov
loop
loope
or
add
clc
pop
cdq
je
adc
clc
dec
xchg
add
das
jbe
into
push
inc
xor
dec
aam
cmp
inc
add
adc
sbb
cmps
aaa
pushf
push
jo
add
sbb
push
xchg
movs
push
xor
jge
mov
pop
xor
ret
push
mov
and
callw
outs
push
push
sbb
ret
cmp
mov
movs
adc
add
push
(bad)
loopne
mov
mov
jne
stos
push
or
cmp
and
lods
sub
lahf
add
and
ror
xchg
pop
xor
jo
xor
sbb
int3
cmp
pusha
add
cmp
mov
setno
das
mov
and
nop
icebp
std
xchg
and
cmp
jmp
add
dec
dec
jmp
cmp
and
mov
ss
ret
scas
(bad)
lds
jns
inc
adc
xchg
out
mov
inc
cmp
lahf
dec
fcmove
sbb
jge
xchg
push
add
push
not
sub
dec
push
fisub
leave
lods
push
push
sti
ss
jo
and
mov
pop
shl
or
loope
ret
(bad)
push
add
lods
out
push
xor
shl
and
ret
mov
jnp
sbb
xchg
sbb
fbstp
mov
cli
lods
adc
(bad)
jg
repz
mov
pcmpeqb
cdq
fwait
aaa
adc
retf
adc
in
or
es
mov
(bad)
jmp
ret
mov
rcl
mov
mov
inc
popf
pusha
int
mov
mov
jl
cmp
xchg
and
cmp
sub
inc
dec
nop
inc
mov
xchg
push
ret
js
pop
rcl
lods
push
inc
dec
sub
loope
or
and
aaa
xchg
sub
pusha
je
sub
ror
(bad)
xchg
and
or
pshufw
fcom
add
and
cdq
add
loope
cwde
retf
inc
push
or
add
or
pop
adc
or
push
fisubr
jl
inc
rcr
sbb
out
inc
cmp
jge
fldcw
dec
xchg
iret
add
and
sub
cmp
inc
test
adc
js
sub
out
mov
push
dec
sbb
sub
fcomp
jl
add
aas
lods
cmps
inc
cmp
push
ret
pop
rol
mov
sub
sub
cmp
shl
xor
leave
xor
nop
out
jns
cdq
adc
jge
and
mov
mov
mov
nop
sbb
ins
add
or
push
aad
jecxz
adc
xor
cmps
or
cmp
scas
dec
push
cmp
push
pop
data16
dec
jns
mov
nop
or
xor
aaa
dec
xchg
cmp
pop
fidiv
pop
aam
hlt
lea
mov
fdiv
pop
adc
rcr
or
jo
sub
ret
jge
push
imul
sub
int
jge
nop
retf
call
and
mov
dec
dec
test
movs
dec
into
es
inc
icebp
add
mov
aam
sbb
adc
cmp
mov
sbb
sub
sub
cmp
aaa
(bad)
adc
imul
adc
js
loop
pop
push
dec
jge
xlat
cwde
mov
jb
or
and
mov
or
loopne
fmul
sub
add
sub
add
ins
stos
call
dec
addr16
xchg
fadd
js
add
ins
and
and
in
jb
call
push
sub
add
shl
mov
xchg
shl
push
mov
adc
xchg
inc
call
in
pop
ret
adc
adc
pop
and
pop
jmp
cmp
and
push
add
loop
sti
mov
xchg
imul
cmp
pop
mov
cmp
jmp
loop
cmp
add
daa
jne
jb
sub
inc
out
sahf
cdq
into
out
sbb
or
loop
add
ret
fld
lods
pop
mov
add
mov
xor
jmp
mov
(bad)
stc
pop
and
cmp
in
pop
cmp
test
ret
add
test
ror
pop
test
sbb
dec
ror
pop
inc
push
pop
xor
xchg
push
jo
xor
sbb
mov
push
jmp
xor
icebp
sub
fsub
xor
rol
dec
xchg
bound
mov
out
rol
dec
test
sub
xchg
sbb
or
fwait
clc
popa
call
cli
movs
sbb
jp
jb
ret
mov
jae
push
jp
test
jns
dec
sbb
into
xor
mov
mov
mov
sub
(bad)
shl
clc
jmp
xor
pop
push
in
xlat
mov
fistp
add
cs
cmp
mov
pop
shl
pop
imul
sub
adc
mov
pop
inc
inc
dec
outs
xchg
jecxz
add
xchg
jle
pop
adc
outs
leave
lock
push
xchg
mov
adc
test
dec
sub
sub
xchg
mov
jne
xchg
push
shl
int
xor
js
xor
mov
ror
lock
jecxz
ret
sbb
xchg
inc
clc
rol
and
mov
push
push
cmp
dec
add
sub
push
pusha
pop
pop
test
inc
cmp
repnz
popa
cmp
dec
mov
ja
aaa
js
repnz
push
cwde
fldcw
push
mov
movs
xlat
adc
sub
inc
add
sbb
hlt
sar
push
mov
jnp
adc
(bad)
inc
clc
xchg
jecxz
adc
push
add
nop
into
mov
cmp
jbe
cmp
mov
dec
xchg
inc
cmp
cdq
lods
and
stc
xchg
xchg
add
adc
test
rcr
xchg
adc
pop
neg
push
xor
sti
jmp
sbb
cmp
sub
pop
and
sti
or
repz
jo
lock
inc
sti
cli
pop
in
dec
mov
test
lods
jno
mov
adc
adc
pop
lea
mov
daa
aaa
push
les
(bad)
jnp
sbb
in
ins
jl
mov
push
push
xchg
aas
fnsave
mov
int
test
pop
mov
ret
adc
stc
mov
inc
stos
jle
je
push
popa
mov
pop
shr
(bad)
pop
adc
adc
(bad)
xor
inc
shl
dec
adc
cmp
push
push
push
push
pop
add
lea
jge
mov
inc
cmps
je
nop
and
or
inc
nop
adc
out
push
mov
repnz
mov
popf
clc
or
enter
or
dec
imul
pop
sub
jne
(bad)
xor
cmp
aad
ret
cdq
ja
or
shr
lock
jo
arpl
fnstenv
dec
sub
or
add
es
fldz
adc
mul
fldcw
cmp
add
cdq
and
outs
xchg
bound
xchg
je
cmp
jmp
test
fs
adc
adc
aaa
mov
adc
add
mov
call
sbb
xchg
push
frstor
sub
xor
fisub
in
adc
mov
pusha
push
adc
inc
add
xor
pop
nop
stos
mov
dec
hlt
mov
mov
add
in
psllw
inc
nop
xor
mov
xchg
push
movs
idiv
cmps
ror
fwait
rcl
rcl
mov
sbb
sti
data16
push
xchg
xor
jns
repz
cmp
mov
fs
bound
lock
js
in
add
pop
cmps
scas
sar
mov
and
stc
mov
or
adc
pop
and
in
mov
xchg
in
inc
test
sti
and
or
adc
(bad)
outs
fs
scas
adc
xor
les
hlt
dec
not
jbe
sar
inc
lock
mov
push
dec
aam
mov
mov
adc
scas
(bad)
repz
or
ret
or
lods
pusha
test
or
sbb
sar
cld
enter
sub
jl
es
enter
cld
mov
test
ins
fwait
xchg
adc
retf
mov
or
mov
mov
xor
das
fcomp
mov
add
jmp
dec
sub
cmp
loopne
pop
jns
and
enter
das
jbe
sub
sub
(bad)
add
add
jmp
push
and
adc
or
sub
sub
addr16
call
add
and
sbb
div
test
jecxz
mov
jno
repz
inc
pop
adc
ror
mov
test
in
sbb
add
daa
cmps
cmps
pop
mov
mov
adc
push
mov
leave
movs
dec
add
xor
hlt
jp
inc
dec
and
mov
push
cmp
adc
sub
or
pop
sub
mov
sti
jbe
jmp
test
in
repnz
std
dec
cli
jmp
xor
xor
adc
sar
sub
add
dec
sbb
or
dec
daa
xor
add
int
mov
xchg
(bad)
jo
ins
cmp
clc
inc
xor
fld
xor
jl
adc
mov
in
test
push
fisttp
rol
ds
cmp
(bad)
cmp
jg
je
push
push
mov
pop
jle
pop
jle
pusha
jle
popa
jne
in
cld
cmp
rol
sbb
clc
jmp
dec
add
sbb
ja
xor
jne
add
pop
pop
pop
fs
add
jne
inc
ror
sub
mov
mov
sbb
jne
push
sub
inc
fucomip
xor
sbb
sbb
fs
and
cmp
lea
ins
jmp
stos
arpl
jmp
stos
cwde
shl
mov
aam
or
jae
add
adc
test
add
(bad)
shl
add
aaa
adc
stos
lea
sub
inc
push
fmul
sbb
jle
ror
push
fwait
rcl
mov
and
ja
(bad)
pop
inc
xor
xor
sbb
push
mov
pusha
mov
inc
pop
shr
push
inc
jae
scas
pop
out
inc
es
in
adc
data16
jl
je
pop
data16
sbb
rol
mov
inc
es
dec
cmp
xchg
xor
ret
movs
mov
xor
sub
shr
and
mov
mov
lock
mov
or
inc
dec
or
and
inc
sbb
pop
push
lods
adc
les
popa
dec
sbb
cmp
pusha
test
push
adc
pop
pusha
pop
fisub
push
cmps
test
push
das
sub
and
xchg
push
mov
or
mov
add
or
ja
push
and
push
stc
ins
mov
cmp
dec
dec
daa
pusha
ds
sub
push
test
(bad)
xchg
cli
stc
arpl
dec
and
dec
pop
sti
add
ret
lods
gs
sub
cmp
imul
fiadd
in
aaa
ins
clc
and
in
add
pushf
(bad)
shr
sbb
push
sbb
test
ret
cmp
and
inc
cmp
fs
mov
pop
push
mov
mov
cmp
jmp
ss
push
imul
or
daa
aam
jl
dec
sub
das
je
pop
sbb
pop
scas
or
cli
mov
push
xchg
cwde
or
inc
mov
ret
add
sbb
and
push
or
loopne
in
repnz
clc
fcmove
je
fdivr
or
jp
out
dec
sub
jmp
test
cmp
rcr
push
ss
data16
loopne
repnz
stc
adc
(bad)
imul
mov
fadd
push
mov
out
cli
jbe
dec
aas
pop
mov
add
push
mov
int3
sbb
test
aad
(bad)
pop
inc
push
jnp
leave
je
pop
push
pop
data16
xor
jne
movs
sbb
js
sub
push
sub
pop
and
(bad)
adc
push
test
nop
les
cmp
add
or
dec
pop
arpl
push
mov
inc
jmp
add
jo
aad
mov
iret
jb
std
and
or
mov
test
inc
xchg
ss
sub
xor
dec
inc
je
cmp
mov
add
mov
pop
fsub
mov
dec
mov
dec
mov
stc
add
hlt
out
dec
sbb
sub
retf
cmp
adc
adc
mov
jmp
and
dec
jmp
push
mov
mov
or
sbb
mov
dec
mov
leave
or
not
jno
inc
mov
inc
cmp
mov
add
ss
std
and
shl
sti
aas
push
je
or
inc
arpl
pop
cwde
sti
sub
sbb
push
add
out
dec
pop
fmul
div
mov
test
lahf
fdivrp
out
xchg
test
mov
fsubr
or
fisttp
test
rcl
xor
js
inc
inc
jmp
cmp
sub
push
rcr
gs
into
dec
cmp
imul
xor
jb
sub
sbb
push
and
jmp
movs
(bad)
sub
mov
mov
call
xchg
out
inc
inc
inc
and
add
sub
mov
sub
and
clc
iret
(bad)
scas
xor
xor
lea
sahf
leave
ret
xchg
mov
adc
pcmpeqw
and
inc
and
(bad)
es
lods
xor
jbe
adc
bound
addr16
xor
mov
imul
adc
(bad)
xchg
sbb
xor
mov
mov
or
test
outs
dec
push
push
es
and
imul
cmp
out
mov
push
std
sbb
fdivp
fdivp
movs
les
push
sub
dec
jmp
add
fisttp
xor
syscall
fdivr
jns
add
push
add
imul
mov
inc
or
or
mov
add
or
retf
add
push
push
inc
scas
xchg
sub
out
sti
and
jp
clc
jnp
or
xchg
jb
dec
cld
cmp
pop
mov
xchg
inc
pusha
jnp
les
ja
fwait
push
test
out
daa
mov
ror
push
shl
push
adc
adc
stos
push
movs
or
jl
push
push
fdivr
mov
dec
clc
ss
mov
jnp
sbb
add
pushf
pop
pop
and
sbb
mov
loope
sub
je
xor
sbb
outs
add
fcomp
jl
(bad)
mov
loop
xchg
xor
cmp
pop
in
mov
xor
mov
test
sbb
xchg
dec
ror
mov
or
or
jo
add
and
pop
add
outs
jp
rcr
jl
enter
ror
in
xchg
scas
imul
jnp
in
cmps
jl
bound
dec
sbb
cli
sub
dec
in
(bad)
mov
daa
ret
push
inc
inc
and
sar
rol
jae
push
popa
sbb
loop
jge
mov
sbb
mov
jne
cmp
fdivr
or
pop
sbb
sub
test
adc
pop
cmc
popf
movq
xor
inc
nop
sub
imul
mov
shl
xor
(bad)
int
or
loopne
add
sub
in
(bad)
ss
ja
cdq
shl
shl
mov
daa
div
idiv
cmp
jg
inc
jge
mov
repnz
pop
push
push
js
test
test
dec
loop
pop
jo
pop
xor
dec
xor
adc
push
sbb
sbb
mov
mov
mov
les
pop
xor
sar
shl
out
push
jg
push
or
add
xchg
call
shl
add
imul
es
shl
adc
sub
cs
je
cld
inc
xchg
cs
aad
jb
faddp
jne
mov
pop
mov
out
rol
adc
jmp
sbb
sub
dec
cmp
jae
fdiv
xchg
mov
xor
jmp
cmps
outs
cmp
mov
daa
inc
loopne
pop
or
lock
adc
test
fdivr
fisubr
sbb
call
jae
aam
and
leave
push
xor
cmps
cmp
dec
loop
inc
push
dec
sub
sbb
fcmovu
clc
push
mov
adc
jge
add
cli
je
add
xor
ds
clc
pop
test
xor
adc
mov
movs
or
mov
dec
jmp
ja
cmp
icebp
add
push
adc
mov
push
or
iret
add
add
sbb
cmp
and
push
xchg
or
dec
or
retf
adc
cmp
add
mov
div
push
adc
and
pop
push
mov
jbe
xor
xor
cmp
push
bound
cs
mov
(bad)
jno
push
cmp
push
sbb
or
or
ins
mov
jmp
fmul
popa
pop
data16
leave
and
sbb
inc
mov
int3
xchg
jo
jo
fimul
push
cmps
movs
outs
and
je
fisubr
dec
imul
js
fucomp
ins
jmp
das
and
adc
xor
or
sbb
shl
add
scas
pop
add
ficomp
push
dec
xor
adc
dec
adc
hlt
inc
fcom
xor
jae
inc
or
xor
dec
shl
icebp
ret
repnz
fcmovnu
mov
mov
push
cmp
icebp
and
js
rcl
adc
push
add
je
add
pop
inc
jbe
add
xor
fisttp
fst
adc
and
bound
cmps
frstor
fnsave
and
pop
xchg
sbb
test
retf
and
(bad)
jmp
pop
cmp
and
imul
cmc
and
icebp
adc
int
rcl
fs
dec
inc
xchg
imul
dec
xor
std
jbe
jbe
and
sbb
xor
in
clc
inc
test
dec
ja
mov
sbb
mov
mov
outs
sbb
mov
pop
add
ror
or
adc
sub
push
out
xchg
xor
arpl
mov
fs
out
ret
sub
pop
and
pop
mov
add
cmp
push
push
jle
pop
xchg
call
sbb
push
inc
pop
push
cmp
inc
scas
popf
pop
enter
cmp
xchg
(bad)
inc
sbb
sub
das
jns
push
out
pop
test
(bad)
pop
icebp
add
adc
in
push
shl
add
add
add
not
pop
and
in
jae
push
and
outs
or
push
pusha
lea
or
pop
out
(bad)
ficom
mov
mov
jne
add
fidiv
sti
xor
gs
sub
push
push
sbb
or
repz
imul
mov
push
sar
rcr
pop
in
sbb
sbb
cmp
xlat
xor
jne
fucomp
fwait
jmp
(bad)
stos
pop
popf
aaa
cmp
je
jns
(bad)
mov
nop
add
add
ins
sahf
out
in
test
shl
iret
mov
pop
fsubr
sbb
mov
and
fmul
inc
ret
or
or
pop
or
call
xor
push
dec
xor
in
adc
call
sub
not
movs
adc
rcl
test
push
or
push
mov
adc
xor
and
jne
imul
add
inc
mov
dec
mov
dec
mov
cmps
jg
sbb
ret
inc
sub
leave
add
adc
and
out
test
sub
icebp
clc
cvttsd2si
mov
ins
adc
add
pop
push
je
test
ds
retf
and
fld
cmps
adc
push
jp
ins
clc
push
pop
iret
sub
out
cmp
jmp
lods
mov
cwde
mov
adc
and
push
loopne
push
sub
(bad)
ficom
test
mov
pop
sbb
es
inc
nop
stc
push
ins
loop
xor
xchg
outs
push
cmp
inc
xlat
mov
dec
inc
mov
dec
push
(bad)
ficom
push
and
and
sbb
loop
mov
clc
cmp
pop
add
aad
imul
dec
sbb
sub
mov
fdiv
or
push
or
pushf
adc
popa
mov
ins
adc
outs
sub
xor
int3
mov
add
pop
test
cmps
xchg
and
mov
ins
ror
jbe
shl
adc
and
inc
adc
cmp
sahf
dec
mov
add
fistp
xchg
ror
inc
add
add
add
add
push
pop
jne
jno
jg
inc
fwait
pop
mov
fwait
mov
test
lahf
jmp
cmp
test
add
pop
and
out
mov
dec
or
jmp
pop
sbb
jno
adc
fisubr
mov
add
popa
rol
mov
and
loopne
xchg
jb
(bad)
dec
nop
outs
and
push
in
xchg
sbb
cli
repnz
cmp
imul
inc
or
mov
jbe
jo
in
test
jne
or
add
sbb
pop
xor
stc
movs
iret
sub
aas
dec
or
(bad)
add
sbb
or
add
inc
test
lods
aas
and
jle
sbb
pop
inc
cmp
ja
dec
jnp
outs
jbe
sbb
stc
adc
cwde
shl
imul
add
push
pop
and
fldenv
xchg
sub
or
adc
add
jnp
push
out
jne
pushf
push
sar
sbb
les
in
pop
ss
stos
add
adc
push
or
jmp
gs
dec
pop
repnz
out
loope
add
fild
and
and
mov
or
ficom
push
lock
adc
add
retf
mov
call
cdq
call
and
pusha
pop
or
and
dec
call
out
sbb
fnstenv
add
push
jbe
cmp
adc
pop
fs
xchg
cmp
test
lock
cmc
lea
stos
jbe
mov
(bad)
xor
iret
and
push
inc
jbe
xor
push
cmp
sti
out
and
add
frstor
test
inc
cli
cmps
cdq
xor
(bad)
dec
cmp
jge
pop
iret
mov
push
xor
push
or
or
push
fwait
add
jecxz
loope
inc
and
es
inc
leave
out
mov
add
out
push
dec
retf
cmp
retf
or
test
add
mov
cli
fadd
fadd
adc
sbb
(bad)
push
xchg
call
pop
and
frstpm(287
loope
sub
inc
inc
inc
movs
xchg
je
mov
mov
mov
dec
lock
inc
inc
and
push
xchg
and
mov
int
sub
mov
add
mov
sub
sub
bound
pop
jb
dec
mov
test
mov
and
hlt
add
popf
sbb
test
(bad)
adc
ret
enter
pop
add
adc
inc
add
add
daa
mov
or
daa
test
sbb
sbb
adc
add
outs
xchg
test
loop
adc
fwait
sbb
scas
(bad)
in
scas
cmp
rcr
add
sbb
add
fcom
add
and
xor
add
pop
add
xor
xor
out
inc
dec
jmp
stos
sbb
inc
arpl
call
ds
add
jne
mov
or
cmp
and
jne
bound
cmp
xchg
(bad)
pop
xchg
or
sbb
shr
sbb
push
jbe
fidivr
scas
and
pop
or
jo
call
jae
iret
fldenv
xor
pop
add
shl
cmp
add
ss
jmp
add
cmp
shl
dec
adc
xchg
bound
mov
adc
(bad)
test
xor
daa
sbb
enter
ret
mov
pop
repnz
add
fisttp
xor
push
sti
and
cmp
les
jl
iret
ror
pop
outs
sbb
sub
ins
test
or
pop
leave
mov
mov
push
sahf
xchg
icebp
or
int3
xchg
rcl
sti
aad
xchg
jne
push
and
into
mov
and
jbe
sti
dec
and
and
sbb
xchg
sub
lods
iret
sub
sar
mov
jmp
sub
xchg
fnstcw
adc
cmp
scas
xchg
jp
jecxz
inc
mov
jmp
sti
and
mov
popf
jnp
jl
cmp
jle
or
jmp
test
retf
adc
inc
push
gs
pop
mov
xchg
mov
inc
data16
jmp
xchg
mov
cdq
sub
jb
cwde
iret
fbld
add
ror
add
rcr
into
adc
ins
add
shl
rcl
dec
or
cwde
sbb
xchg
rol
mov
sbb
ret
ret
bound
outs
(bad)
push
cld
cmp
adc
out
sub
mov
mov
push
fs
imul
and
fist
jmp
add
js
pop
fld
retf
mov
mov
adc
dec
push
adc
addr16
xchg
pushf
lods
inc
lahf
iret
cmp
test
lods
test
push
jle
push
add
mov
push
mov
push
loopne
outs
aas
jne
adc
dec
mov
mov
fild
(bad)
inc
fmul
push
or
jge
cld
neg
dec
fldcw
fild
cmp
imul
ja
or
push
xchg
or
jno
lock
cmp
sbb
(bad)
arpl
mov
ret
mov
cmps
adc
test
and
inc
push
mov
inc
sub
cli
add
sbb
mov
and
and
dec
xor
or
sar
mov
cmps
add
push
clc
retf
fstp
push
pop
push
cmp
sub
pop
mov
and
pop
pop
gs
les
xchg
shr
cld
pop
adc
dec
xor
icebp
mov
push
dec
pop
pop
cmp
xor
mov
adc
cmc
add
or
mov
adc
push
add
(bad)
into
mov
cwde
xor
cmp
or
cwde
sub
jecxz
and
jmp
out
inc
xchg
xor
enter
sbb
or
sahf
mov
div
fstp
xor
sbb
or
imul
dec
call
out
fwait
cmps
call
xchg
div
jg
xor
imul
inc
inc
in
xor
xchg
xchg
add
or
jns
sub
or
mov
mov
or
fadd
lock
out
and
inc
and
adc
cmp
add
xor
aas
add
adc
retf
or
js
inc
clc
mov
jb
push
addr16
pushf
sbb
out
not
xchg
sbb
sub
xchg
mov
mov
retf
pop
ds
mov
fcomp
cli
sbb
pop
stos
fwait
dec
xchg
in
mov
cmp
in
jmp
add
stos
and
sbb
push
data16
mov
jge
add
fadd
js
outs
pop
push
add
shl
imul
adc
lods
dec
push
cmp
sbb
jo
cwde
or
sbb
bound
pop
pop
je
and
aad
inc
mov
in
ss
jnp
inc
inc
inc
xor
inc
add
arpl
adc
pushf
ds
enter
inc
inc
inc
sbb
sub
aas
or
sub
mov
or
jl
fsubr
and
cmp
les
add
out
sub
and
adc
sbb
retf
push
push
xchg
fisttp
push
inc
pop
cmp
je
mov
sub
out
adc
dec
retf
scas
sub
mov
mov
or
adc
push
xlat
jle
or
mov
js
adc
jmp
mov
int3
movsx
je
sbb
mov
dec
sbb
in
imul
sbb
push
and
or
add
nop
movnti
pushf
push
sbb
mov
les
icebp
loopne
mov
sub
lods
movs
ss
cld
pushf
pushf
clc
into
in
ds
cmps
cld
adc
and
int
lock
ss
fisub
sbb
dec
pop
add
rol
mov
(bad)
mov
cmp
dec
mov
push
into
add
mov
add
es
jae
add
clc
inc
jg
sbb
xlat
div
js
or
mov
jno
call
xor
xor
sub
sub
rol
or
adc
outs
dec
addr16
pop
aaa
test
test
(bad)
in
sub
inc
xor
pop
inc
pusha
adc
stc
jae
mov
push
and
ins
sbb
ins
pushf
xchg
ins
or
inc
add
pop
inc
addr16
jne
pop
stc
pop
jmp
push
mov
push
pop
or
push
adc
inc
call
outs
sbb
pop
dec
push
sbb
lods
mov
push
or
push
sbb
sbb
sub
je
push
mov
mov
(bad)
push
cmp
mov
xor
aaa
xor
xor
sub
inc
xor
je
mov
dec
mov
fsubr
sbb
xor
out
jge
repnz
sbb
lahf
adc
add
cmps
adc
sahf
pusha
jecxz
enter
repnz
into
and
xchg
pop
dec
ss
cdq
retf
xchg
cld
ror
jnp
or
add
pop
sbb
imul
dec
xor
sub
cdq
data16
in
loopne
inc
out
or
xor
(bad)
or
sbb
jne
add
sub
imul
add
loopne
fdiv
clc
stos
jbe
test
aad
jmp
ins
aaa
jne
ret
adc
lock
xor
ins
outs
and
jae
push
aaa
push
mov
pop
push
pop
sub
pop
icebp
or
sub
dec
jp
adc
jnp
dec
or
sub
imul
mov
lea
lods
and
bswap
xor
push
fcom
test
mov
inc
stos
pop
xlat
adc
jno
mov
sub
mov
or
aaa
ja
push
scas
xchg
sub
shl
mov
cmc
js
pop
add
call
mov
rcl
or
xchg
gs
mov
outs
xchg
and
jge
push
ja
sbb
lea
adc
hlt
inc
add
adc
and
sbb
popf
movs
push
inc
add
pop
clc
jge
pusha
xor
pop
mov
(bad)
or
inc
sub
push
fld
pusha
inc
pop
cli
pop
adc
cmp
leave
or
inc
rol
ud2
into
adc
dec
pop
inc
mov
mov
es
cmp
(bad)
jl
or
shl
and
ror
lods
inc
dec
mov
push
pushf
jno
pop
js
leave
adc
loopne
and
inc
mov
or
sahf
hlt
sbb
sbb
out
and
mov
push
sbb
cmp
cmp
into
mov
mov
sti
inc
jnp
push
outs
pop
jmp
pop
xor
test
jo
xor
add
mov
(bad)
movs
xchg
jo
push
shr
es
xor
and
push
jae
and
jne
mov
mov
sbb
(bad)
push
fnsave
xor
pusha
aaa
jne
xchg
lock
dec
and
repnz
and
pop
and
xchg
xor
and
sbb
mov
dec
leave
loope
lock
xor
cmp
cmp
xchg
stos
sbb
jge
jl
mov
mov
hlt
jne
pop
inc
or
(bad)
jmp
and
shl
test
adc
mov
test
xor
test
and
xlat
sub
xor
mov
lahf
add
je
enter
fdiv
adc
nop
xchg
or
add
push
push
cmp
lods
loopne
shl
das
mov
sbb
mov
add
mov
xchg
je
hlt
mov
mov
js
push
hlt
adc
dec
dec
(bad)
iret
dec
data16
sbb
in
daa
cwde
cmp
cmp
stc
jbe
icebp
dec
sar
jmp
jp
adc
mov
loope
call
sub
in
and
in
and
and
inc
ins
les
pop
jb
inc
adc
dec
inc
and
fs
add
push
imul
and
and
cmc
push
cmp
dec
popa
ins
inc
retf
(bad)
fistp
mov
xor
and
mov
push
and
pop
cdq
or
pop
dec
dec
and
adc
(bad)
jo
enter
dec
mov
ret
cs
cmps
int3
fist
dec
xchg
pushf
faddp
popf
call
mov
repz
mov
cld
push
mov
mov
mov
sub
sub
inc
imul
daa
mov
adc
add
xchg
mov
xor
cmp
mov
adc
mov
mov
xor
mov
lods
or
add
inc
cmp
adc
icebp
pop
(bad)
aaa
dec
call
out
dec
adc
adc
fbstp
pop
and
sbb
sbb
punpckhwd
fwait
add
sbb
test
xor
cmp
sti
push
ror
cmc
pop
ror
jg
dec
add
pop
jl
outs
sub
push
adc
or
ror
in
jmp
or
jl
rol
mov
or
adc
push
push
js
adc
xor
call
retf
jb
(bad)
push
cdq
jne
cs
loopne
mov
adc
rcl
inc
daa
sub
ins
inc
cmp
es
ja
cmps
sub
pop
jmp
ins
push
in
sbb
add
cmc
push
arpl
xchg
ret
mov
fistp
xor
mov
or
inc
mov
mov
dec
sub
popf
jns
pop
ret
mov
add
jle
or
sar
cmp
cmp
retf
int
cli
mov
mov
xchg
aam
jnp
xchg
mov
pop
and
inc
or
movs
push
add
xchg
popa
dec
cwde
sub
sub
push
push
ds
and
lahf
movs
adc
dec
push
add
lock
adc
dec
ret
push
es
sar
data16
push
pop
add
push
sahf
push
cmp
ins
xor
(bad)
dec
inc
pop
stc
add
xchg
adc
pop
(bad)
retf
sbb
push
push
push
scas
xor
xchg
push
cmp
jne
popa
loopne
bound
push
repnz
scas
lea
pop
mov
in
mov
pop
ss
add
leave
or
or
cmp
lahf
or
push
xor
nop
cmps
(bad)
mov
xchg
add
in
mov
cmps
nop
test
jmp
ss
xchg
ss
sbb
or
push
inc
push
adc
xor
or
pop
aaa
cs
retf
enter
and
push
add
pop
xchg
sub
mov
mov
clc
loop
adc
cmp
and
sub
scas
sub
mov
mov
cwde
push
mov
cmp
nop
inc
inc
dec
xor
cmp
ror
ds
xor
shl
push
loop
hlt
fldcw
fistp
lock
test
or
and
fisttp
and
mov
mov
jmp
mov
outs
push
call
add
iret
data16
inc
xor
sbb
xor
mov
dec
dec
adc
xchg
loop
movs
mov
rcr
cmp
pop
pusha
fs
pop
dec
pop
fs
mov
pop
dec
add
and
dec
xor
xor
dec
pop
cmp
jg
pop
mov
add
dec
adc
retf
push
fst
adc
enter
push
add
push
neg
ret
add
jmp
inc
adc
inc
adc
cmp
aaa
mov
pop
and
cmp
aam
or
fstp
jg
sbb
inc
je
je
push
sub
(bad)
xor
cmp
and
jmp
adc
je
add
push
cwde
inc
or
xor
mov
push
sub
push
add
fmul
inc
xchg
pop
or
ret
loope
ins
test
(bad)
in
add
popf
xor
sbb
sahf
out
icebp
xchg
mov
enter
pop
shr
jge
sub
cmp
inc
and
ret
ret
fimul
jns
pop
xor
xchg
adc
pop
inc
jmp
mov
mov
add
clc
lds
shr
or
xor
xchg
xor
adc
fidiv
cli
inc
push
xor
test
out
xchg
stc
int3
add
movs
sbb
iret
ins
clc
popf
fdivr
(bad)
adc
xlat
xchg
push
fwait
and
mov
cmp
add
imul
in
mov
lods
xor
push
jg
jb
lods
es
adc
mov
(bad)
stos
add
add
xchg
ss
mov
ja
dec
mov
mov
xor
or
mov
cmp
lahf
dec
call
cmp
inc
hlt
gs
pusha
xchg
and
bound
dec
cmp
je
push
mov
pop
rcr
fdiv
add
or
enter
mov
(bad)
adc
pop
fcmovbe
pop
sub
pop
out
ret
stos
add
xchg
int
rcl
das
inc
and
ss
dec
dec
dec
mov
mov
cs
ds
pop
add
or
rcl
movzx
jp
shr
test
or
or
stos
push
inc
jne
pop
mov
mov
fimul
xchg
dec
xchg
jb
fcmovne
mov
aad
(bad)
leave
ja
or
cdq
loop
and
xor
jg
int
and
sbb
mov
push
pop
call
inc
push
mov
or
xchg
mov
lods
shr
ja
sbb
sub
xor
or
and
xchg
inc
scas
sub
inc
xor
jno
add
xchg
or
jnp
sbb
adc
sbb
cmp
mov
sbb
jle
clts
cmps
push
into
xchg
xchg
pushf
fld
xchg
int3
jmp
cmp
xchg
sub
xchg
push
mov
cmc
mov
out
mov
add
add
inc
add
stc
sub
(bad)
and
dec
aas
sbb
mov
adc
cmp
cwde
add
cmp
pop
das
fwait
cli
cld
mov
ja
jae
fstp
jne
sub
dec
ins
repnz
cmp
and
jle
mov
inc
inc
mov
pop
adc
stc
and
cmp
movs
or
pop
mov
and
push
dec
push
shl
mov
mov
sub
mov
adc
or
cmp
shl
pop
call
add
aaa
dec
sbb
pop
and
ret
jmp
dec
or
cmps
xor
push
push
lock
mul
shl
loopne
add
mov
dec
(bad)
push
imul
xchg
jno
jo
(bad)
sahf
push
xor
xchg
rcl
js
jo
lahf
shr
xor
dec
xchg
aam
bound
adc
mov
test
mov
fisub
fimul
dec
dec
fs
pop
sahf
bound
lock
out
inc
xor
in
sub
(bad)
inc
movs
adc
ret
ds
sub
pop
mov
js
or
mov
push
push
xor
lds
mov
adc
add
(bad)
out
mov
imul
popf
arpl
adc
dec
xor
push
jp
add
add
sub
cmc
adc
imul
ja
jne
mov
ins
fisubr
add
push
mov
mov
lock
push
arpl
inc
mov
inc
push
push
int
xor
push
xor
(bad)
mov
(bad)
sbb
cmp
ss
sbb
add
push
inc
xchg
fild
inc
xor
nop
dec
cmc
aas
daa
or
loope
sbb
jbe
or
mov
movs
push
movs
xor
xor
sbb
mov
jno
add
adc
inc
xor
scas
sub
cli
jl
mov
adc
and
je
add
push
popa
loopne
inc
fmul
mov
pop
nop
neg
or
mov
test
stos
pop
or
dec
adc
pusha
test
inc
adc
rcl
or
mov
xchg
mov
push
popf
pop
sbb
mov
fs
and
push
ds
fmul
adc
push
mov
mov
and
cwde
iret
aaa
cmp
push
add
dec
gs
mov
movs
or
mov
adc
cmps
(bad)
hlt
sbb
ins
jns
mov
add
ins
jns
leave
adc
jno
aaa
adc
popa
loop
aas
or
scas
clc
jo
fmul
mov
mov
call
xor
popa
lods
sub
add
push
push
inc
jp
sub
loope
push
push
xchg
pop
jbe
mov
mov
and
movs
inc
ret
ins
mov
ret
dec
jmp
or
jo
push
rcl
jnp
pop
jp
pop
ret
jl
pop
lods
fnsave
jb
or
mov
retf
adc
push
push
bound
test
sar
call
scas
test
or
mov
push
inc
cli
inc
sub
das
mov
out
fidiv
xchg
add
fbstp
jns
add
sbb
xor
sub
mov
test
pop
push
fist
sub
fsubrp
inc
mov
sub
or
dec
or
add
push
mov
add
lock
mov
and
xchg
fild
cmp
fild
xlat
mov
cmps
pop
fild
mov
inc
dec
adc
arpl
and
sub
es
xchg
add
or
cdq
dec
add
je
add
cmp
je
popf
dec
adc
and
ins
cmp
inc
and
and
jg
test
push
mov
les
push
inc
sti
add
ret
inc
test
jns
inc
pop
das
pop
jbe
jecxz
mov
jp
movs
das
jno
jbe
or
adc
pop
ret
mov
ret
ror
into
add
inc
pop
cmc
clc
fbstp
fmul
es
ret
xor
arpl
mov
xadd
bound
inc
add
ret
mov
mov
mov
dec
cmp
xchg
ja
mov
sub
arpl
out
and
or
and
mov
pop
xchg
push
add
pop
mov
push
mov
fmul
cdq
xor
jl
dec
lea
inc
cwde
dec
mov
adc
repz
or
push
cld
push
movs
inc
ja
dec
call
xor
cld
pop
cmp
and
leave
test
cvttps2pi
lea
ins
loope
adc
sbb
stos
sti
xchg
pop
pop
inc
xor
mov
push
cmps
jne
pushf
cmp
pop
adc
jno
mov
stos
into
and
cwde
pop
movs
add
loope
push
jae
mov
sbb
xchg
daa
lea
(bad)
xor
and
mov
in
adc
out
ins
inc
sub
pop
loopne
cmp
loop
inc
add
push
or
mov
or
aam
daa
push
and
lahf
call
and
xbegin
es
or
(bad)
mov
je
loope
adc
jae
cmp
jae
or
ret
mov
mov
inc
out
sbb
imul
fwait
and
push
(bad)
xor
shl
cmp
std
clc
xchg
arpl
cmp
jge
add
and
jns
add
dec
mov
into
sub
lds
or
dec
ins
xor
add
dec
sbb
mov
leave
je
daa
ret
push
mov
fsub
jbe
add
xor
lods
outs
cmp
mov
or
loopne
xchg
jo
xchg
rcr
lea
imul
(bad)
jecxz
or
or
and
add
mov
inc
sbb
mov
call
adc
fmul
xchg
cdq
aad
push
jmp
fmul
pop
(bad)
sar
(bad)
es
ficom
jl
aaa
jl
pop
out
adc
xchg
cwde
push
dec
dec
dec
inc
adc
xchg
cs
rol
and
and
pop
and
or
dec
rcl
ja
inc
add
dec
push
cs
fmul
in
fdiv
xchg
fs
and
pop
enter
add
mov
test
cs
cwde
cs
imul
cmp
add
lods
hlt
loope
add
popf
out
sbb
push
test
adc
rol
fldcw
lods
sbb
ret
je
out
sub
sbb
js
stos
jne
loop
in
add
jns
adc
pop
adc
iret
push
jno
xchg
imul
dec
xchg
sbb
xchg
or
test
cmp
xlat
jge
fadd
push
jae
test
ret
cmp
xor
inc
sbb
aas
je
push
or
je
sub
sbb
mov
cmp
cwde
inc
add
in
dec
dec
aad
dec
add
rol
and
add
jl
aad
fwait
or
jbe
movs
imul
pop
cmp
push
test
xchg
and
xor
xor
xor
mov
shr
rcl
dec
mov
pop
je
aas
(bad)
mul
loop
inc
xchg
js
xor
mov
jg
push
mov
xor
mov
and
enter
fild
dec
xchg
and
sbb
jecxz
aaa
mov
adc
icebp
add
adc
sbb
inc
jnp
pop
inc
mov
add
loope
jmp
pop
dec
es
inc
shl
jmp
adc
adc
outs
jne
xchg
mov
xor
jmp
sub
or
dec
xchg
shl
or
jo
cmps
mov
imul
fadd
das
xor
pop
mov
sbb
repnz
xchg
test
retf
sbb
ror
cmp
fs
lock
mov
leave
cmps
repnz
add
inc
pushf
xor
mov
je
inc
cmp
mulps
ins
xor
cmp
test
sbb
ds
lea
xor
fadd
rcl
jnp
or
mov
icebp
call
add
pop
ror
push
(bad)
push
inc
in
rol
stos
enter
bound
stos
mov
cdq
inc
jg
sbb
sbb
test
cmp
test
daa
sub
fisubr
punpcklbw
jg
loop
xor
call
ret
in
fdiv
(bad)
cmp
aam
rcr
mov
shr
jns
sub
mov
or
stos
out
cdq
xchg
cmc
and
imul
pop
mov
push
cdq
xchg
add
mov
xor
je
jp
cmp
or
mov
sbb
or
mov
call
(bad)
enter
sbb
cwde
mov
int
les
je
push
mov
scas
jnp
pop
into
in
sub
pop
cmp
dec
loop
pop
arpl
mov
fsub
adc
mov
pop
(bad)
fnstenv
add
retf
and
or
das
xor
add
mov
or
xchg
rol
add
sahf
mov
push
jne
xchg
and
(bad)
fadd
je
mov
jg
jne
inc
nop
add
adc
sbb
inc
mov
(bad)
mov
jmp
or
dec
jns
call
sbb
push
inc
adc
xor
jp
je
add
dec
jmp
pusha
inc
or
jmp
imul
lods
pop
dec
push
mov
into
jg
add
add
cdq
mov
pop
cmps
adc
inc
inc
hlt
fisttp
pusha
sub
xor
push
mov
call
aas
or
fdivp
mov
mov
add
or
mov
cmp
lds
push
add
mov
jo
push
stc
or
inc
add
push
push
outs
inc
cmp
adc
jle
inc
out
js
rol
or
mov
cmps
adc
adc
sbb
xor
mov
or
outs
jl
inc
movs
mov
lock
cdq
jmp
arpl
(bad)
dec
jbe
jns
or
inc
and
enter
cmp
mov
add
sub
pop
mov
add
test
mov
pop
out
das
dec
and
jge
lods
cmps
xchg
popf
push
jle
and
into
js
adc
outs
adc
ror
into
ror
fsubp
xchg
or
inc
or
retf
js
inc
dec
mov
dec
jg
push
cmps
mov
fmul
sub
or
xchg
(bad)
xor
jmp
adc
test
inc
jg
frstor
sub
and
bound
stos
fsub
inc
xchg
jb
sti
push
adc
mov
pop
sbb
inc
cmp
cmp
sbb
dec
jmp
sbb
inc
and
int3
sbb
pop
sub
and
adc
pop
ror
sub
fadd
push
and
shl
mov
es
repnz
ret
mov
pushf
into
sub
sub
(bad)
sub
outs
daa
pop
je
mov
add
int
and
add
dec
repz
push
sub
fldcw
movs
push
push
mov
push
and
mov
into
(bad)
sub
sbb
movs
or
mov
ss
and
dec
aas
pop
mov
add
(bad)
out
or
bound
inc
push
imul
or
(bad)
mov
or
push
push
sub
pop
lods
retf
pusha
ss
test
mov
mov
xor
cmp
inc
fmul
mov
xor
pop
cwde
dec
ret
add
sbb
popa
cdq
mov
ficom
rcr
in
mov
int3
push
xchg
adc
sti
test
push
push
mov
fstp
or
daa
sbb
jns
movs
xchg
sbb
jl
shl
sbb
movs
jb
stc
ret
hlt
or
retf
lock
xchg
and
ficom
ret
sbb
outs
add
popf
pusha
mov
xchg
xor
xor
(bad)
and
pop
sahf
fidiv
loope
add
call
pop
out
jne
das
sub
imul
nop
mov
add
add
push
(bad)
ja
xor
add
scas
(bad)
fisubr
inc
sti
outs
push
dec
cmps
xor
push
pop
lods
pop
es
sbb
or
and
jmp
xchg
cli
or
fisubr
add
lea
nop
xlat
push
jns
movs
adc
icebp
dec
xor
sbb
or
cmp
in
dec
add
inc
jge
jae
add
xor
or
retf
(bad)
pop
add
pop
call
mov
ins
pop
push
lea
push
jmp
lea
xchg
lds
push
or
mov
jecxz
lds
push
imul
div
data16
mov
add
dec
xchg
lods
out
mov
pop
outs
mov
dec
add
cmp
inc
inc
jo
cli
pop
jmp
or
fidiv
jmp
xor
pop
(bad)
(bad)
scas
dec
jl
cmp
out
mov
outs
sbb
push
add
add
jge
add
(bad)
ss
or
dec
pop
retf
mov
imul
push
das
sbb
lock
pop
sub
dec
mov
popa
and
xchg
jl
shr
daa
add
and
dec
sub
inc
and
dec
xor
out
in
mov
sar
push
imul
nop
push
dec
in
dec
add
or
adc
adc
push
or
add
inc
shr
sub
mov
mov
call
mov
dec
cmp
popf
inc
xor
xor
cmp
fidiv
jmp
xchg
daa
je
dec
je
ins
loopne
xchg
scas
inc
mov
jmp
ss
mov
add
push
and
or
loop
mov
mov
inc
int
shl
dec
and
or
inc
ror
scas
rcl
jmp
cmp
adc
adc
push
mov
fidiv
mov
loope
cmp
mov
pusha
mov
adc
popa
aad
shr
clc
jl
and
data16
and
jb
mov
mov
sahf
ins
mov
mov
hlt
or
jae
cwde
adc
sbb
push
dec
jnp
adc
push
inc
add
cmc
sbb
dec
pop
stos
add
or
sub
xor
mov
jne
lods
out
daa
in
cmp
shl
icebp
enter
retf
mov
addr16
movs
lahf
(bad)
(bad)
prefetchwt1
add
jmp
inc
pop
sti
mov
ret
add
daa
mov
outs
daa
mov
or
or
push
lahf
adc
xchg
movs
mov
xor
jnp
push
es
repnz
or
or
dec
scas
push
mov
aam
mov
sub
or
fadd
ficomp
dec
mov
movs
push
add
popa
pop
sar
out
push
sbb
mov
dec
mov
test
and
(bad)
cmp
mov
aas
and
pop
dec
inc
inc
jmp
hlt
sub
cmp
jg
or
xor
adc
jp
mov
test
(bad)
fadd
call
xor
nop
mov
and
out
or
in
repnz
dec
add
or
outs
inc
and
xor
sbb
(bad)
loopne
dec
add
push
sub
inc
pop
or
rol
push
pop
stos
xor
pop
cmp
daa
enter
xor
out
loope
pop
jmp
add
or
ret
jmp
add
mov
mov
ins
loopne
jne
cmp
ins
rcl
dec
add
sub
or
lods
mov
or
sbb
call
sbb
ins
enter
arpl
add
aaa
xchg
inc
mov
sub
adc
xchg
cwde
mov
dec
pop
pop
sub
pusha
cmp
js
fwait
pop
pop
mov
add
loope
sub
cmp
add
jmp
test
test
dec
xlat
mov
push
mov
jmp
es
(bad)
add
adc
aad
push
addr16
cld
movs
test
mov
call
mov
adc
sbb
jmp
lea
xchg
sub
adc
cmps
in
movs
arpl
or
lea
jmp
xor
div
inc
mov
adc
pop
sub
pop
jecxz
fadd
add
pop
dec
push
xchg
(bad)
adc
dec
js
outs
add
or
inc
adc
pusha
shl
rcr
fcom
js
inc
sub
push
cli
push
scas
sbb
dec
popa
add
xor
push
movs
test
int3
xor
ins
mov
jmp
sbb
hlt
sbb
pop
pop
pop
push
int
push
jp
cmp
inc
aaa
aas
mov
jo
ss
push
inc
adc
adc
jb
sub
inc
stos
inc
loopne
sub
mov
xchg
daa
mov
inc
sar
xchg
cmc
cmp
xor
call
or
ret
jle
out
push
shl
push
push
ja
jnp
sub
and
dec
and
pop
retf
and
sbb
dec
call
fidiv
adc
add
cmp
sub
jmp
mov
push
or
jmp
std
lea
je
dec
je
sbb
or
loopne
cmp
mov
xchg
inc
fnstenv
mov
fwait
clc
sbb
jmp
enter
dec
retf
sbb
popa
iret
ret
dec
pop
push
in
and
mov
lahf
fidiv
inc
xchg
or
adc
inc
push
ss
sbb
sub
addr16
push
leave
xor
jnp
sub
pusha
ror
and
pop
repz
mov
loopne
cwde
pop
sar
or
inc
outs
(bad)
ror
into
dec
jecxz
lea
adc
(bad)
ss
xor
aam
cmc
sub
add
add
loopne
add
mov
add
in
mov
or
push
imul
dec
je
mov
out
stos
movs
loope
test
out
push
(bad)
jmp
push
sbb
les
push
cmp
cs
ss
push
mov
rcr
cs
(bad)
sbb
fs
test
push
sub
pop
loopne
mov
mov
mov
cmp
jo
cmps
or
sub
xor
scas
pop
in
or
test
jl
add
add
pop
mov
sbb
sar
push
sbb
adc
inc
add
call
add
mov
adc
or
cmp
mov
je
or
add
iret
je
dec
je
ror
shl
add
adc
mov
xor
mov
rcr
(bad)
jb
sub
jmp
out
push
nop
mov
scas
pusha
dec
mov
jne
adc
push
retf
and
pop
sbb
and
je
popa
mov
push
dec
adc
adc
xor
xchg
sub
nop
mov
add
jp
push
and
pop
sahf
add
xor
sub
add
mov
test
cmp
aas
(bad)
je
push
xchg
mov
adc
push
test
fstp
xchg
neg
cmp
aas
and
ror
sahf
xchg
dec
jne
cmps
mov
mov
add
jo
add
cmp
mov
mov
push
and
jmp
add
or
dec
sahf
cmp
pop
ror
or
out
or
dec
daa
adc
pop
mov
cmp
adc
sub
cmc
jns
adc
retf
mov
and
fcmovnb
cmp
adc
das
cmc
das
add
in
xor
ror
fdiv
pop
mov
jg
cmp
sar
mov
mov
movs
dec
and
loop
mov
add
mov
dec
mov
not
clc
lea
and
std
or
inc
and
push
aas
ins
add
push
mov
xchg
cwde
mov
sub
adc
jnp
test
sbb
fbstp
lods
push
test
add
pop
fld
jae
es
test
pop
outs
stos
aam
stos
fmul
mov
into
imul
(bad)
movs
sbb
cwde
ja
xchg
or
retf
and
add
or
js
loop
ds
sbb
push
pop
aas
ret
into
sar
add
dec
pop
mov
lea
add
mov
push
inc
dec
adc
in
add
js
ret
xor
fcmovne
add
aad
sbb
mov
(bad)
jge
aas
add
and
fisubr
ss
inc
sub
cdq
inc
ins
or
mov
iret
aam
iret
ror
sub
jmp
cli
mov
fs
pop
cld
sar
imul
pusha
mov
aam
out
cmp
mov
jo
mov
mov
and
adc
pop
sbb
imul
dec
mov
aaa
inc
add
fsubr
mov
push
loopne
push
test
aas
xchg
jno
inc
aad
xchg
out
in
inc
pop
or
mov
xor
mov
push
or
test
dec
xchg
iret
sub
iret
aam
mov
sub
fsubr
xor
aam
vcvtpd2uqq
push
cdq
in
sub
jmp
dec
pop
sub
aam
add
mov
adc
and
mov
rol
pop
fs
inc
and
adc
xchg
sti
imul
rcl
fisttp
(bad)
mov
mov
(bad)
js
out
mov
mov
fcom
mov
ror
cmp
mov
and
add
mov
add
and
(bad)
and
inc
sub
fisubr
cmps
test
fwait
ret
cwde
push
clc
dec
mov
shr
retf
and
pop
dec
xlat
test
cmp
mov
jbe
mov
ss
xor
xor
jg
cmp
pop
test
outs
imul
outs
jle
push
mov
cmc
loopne
loopne
hlt
mov
nop
rcl
cmps
dec
mov
imul
jecxz
add
aam
adc
in
inc
add
cmp
mov
stos
cmp
adc
cwde
(bad)
or
inc
cmp
fisubr
out
and
xor
jae
or
add
mov
int
cmp
call
pusha
enter
sub
adc
mov
xchg
xor
and
enter
adc
add
push
or
mov
and
mov
nop
in
ss
sbb
push
cmp
pusha
ret
dec
mov
rcr
push
out
jl
push
xchg
inc
jp
shl
sbb
cmp
lahf
outs
enter
xchg
gs
xchg
ins
leave
es
inc
adc
xor
mov
clc
lods
or
push
or
jae
jo
add
jle
mov
xor
inc
push
mov
jmp
enter
add
dec
pop
cld
push
and
stc
push
jle
and
jne
jno
out
hlt
push
add
pop
pop
add
mov
scas
mov
xor
xchg
and
pop
rol
ffreep
mov
shl
mov
sub
and
loopne
in
dec
les
je
cld
fdivr
jmp
or
dec
mov
sub
xor
das
pop
mov
pop
repnz
jbe
imul
xor
fs
(bad)
jmp
sub
fcomp
popa
push
call
call
data16
or
shr
add
add
jae
mov
test
imul
dec
sub
in
lahf
add
jae
sahf
and
push
dec
pop
retf
(bad)
out
test
mov
inc
jne
sbb
mov
sub
adc
adc
call
sbb
cmp
scas
pushf
or
stos
add
xchg
or
inc
arpl
ins
dec
xchg
sub
adc
mov
call
pushf
pop
imul
sbb
sbb
inc
fild
fiadd
sti
cmp
(bad)
fsub
je
fld1
and
fldz
adc
aad
retf
fild
lahf
push
xchg
xchg
inc
call
fldcw
or
xor
mov
pusha
cli
popa
pop
dec
adc
mov
ret
popa
test
lods
test
pop
push
sahf
mov
mov
fstp
nop
or
xchg
pop
ret
gs
call
movs
and
movs
and
or
mov
mov
xchg
sbb
xor
rcl
arpl
fidivr
fiadd
les
clc
into
push
out
les
ins
ins
cmp
xor
or
jbe
(bad)
loopne
and
xor
mov
arpl
adc
inc
pop
fiadd
pusha
pop
adc
mov
and
imul
or
push
and
inc
mov
cmp
popf
lea
fst
cmp
push
out
shl
pushf
add
mov
leave
xchg
pop
jne
mov
add
rol
adc
sub
test
sbb
fcmovb
sub
jmp
sub
outs
cmp
repnz
pop
outs
std
movq
jnp
sahf
out
dec
ins
sahf
test
inc
mov
sbb
sub
dec
fidivr
fwait
ds
push
jl
adc
pop
iret
jnp
(bad)
ss
pop
mov
jg
call
and
leave
xchg
cmp
inc
push
das
daa
iret
rep
jb
outs
daa
mov
outs
jo
gs
jae
jnp
jnp
fmul
pop
pop
daa
pop
and
das
cs
sahf
int
je
mov
push
leave
por
iret
jnp
push
push
sub
inc
mov
and
enter
mov
daa
stc
add
xchg
lahf
and
inc
inc
pushf
addr16
adc
mov
or
out
and
jp
shl
add
inc
inc
or
fist
dec
addr16
mov
and
dec
jl
mov
dec
mov
repnz
ins
add
retf
movs
xchg
or
pop
cwde
push
and
cmp
jne
pop
dec
xchg
add
push
jo
mov
aaa
arpl
in
and
sub
sbb
test
mov
add
pop
and
inc
pusha
in
fcom
into
loopne
add
shl
fld
add
or
xlat
jne
xchg
lods
and
or
and
jl
sbb
jecxz
retf
inc
das
ins
in
cmp
jmp
push
jmp
inc
sub
push
sbb
xchg
jbe
sub
jg
popa
clc
movs
pop
lock
and
hlt
mov
or
int
adc
sbb
dec
and
push
call
push
je
aad
jle
jge
enter
xor
and
fild
jmp
xor
push
mov
inc
cmp
add
lahf
add
outs
push
loope
jne
pop
dec
jae
inc
add
mov
sbb
es
jle
test
xor
mov
pusha
adc
push
sbb
shl
or
jmp
loop
js
fwait
cmp
add
sbb
fcmovbe
in
int3
and
icebp
push
mov
test
mov
mul
sbb
leave
mov
jl
mov
call
dec
sbb
cmp
xchg
xchg
pop
in
out
sbb
push
outs
popf
adc
sub
mov
mov
sbb
jg
loope
mov
inc
mov
mov
je
jmp
daa
jbe
jb
and
out
sub
sbb
cmp
inc
dec
push
test
outs
ins
pop
(bad)
out
mov
jl
iret
dec
les
lea
in
push
pop
inc
mov
mov
loope
or
sub
in
ins
jmp
sbb
movs
imul
cmp
out
or
imul
mov
jmp
jl
adc
inc
fnstcw
inc
fs
or
test
jge
mov
and
stos
popf
test
inc
fcom
add
shl
test
add
fs
and
retf
xor
clc
jne
or
mov
mov
lds
and
jle
and
dec
repz
push
cmp
xor
push
cs
jl
push
xor
or
sbb
and
aad
mov
add
push
aam
call
mov
adc
inc
aas
xchg
in
cmp
imul
mov
mov
std
and
sub
inc
push
xor
xchg
push
jns
sbb
int3
or
dec
pop
fcom
in
or
aam
xchg
hlt
jb
daa
sbb
bound
or
aam
imul
push
call
cmps
mov
xchg
mov
or
sbb
push
imul
popa
imul
jmp
rol
adc
stc
sahf
sub
and
enter
pop
xchg
aam
xchg
xor
xchg
pop
in
push
data16
add
popa
in
cmc
xchg
or
ins
sub
jmp
and
cmp
and
inc
jo
test
outs
adc
addr16
dec
pop
shl
xor
xor
or
pop
jnp
add
out
pop
push
jbe
cwde
push
mov
fnstcw
jp
jge
xor
mov
paddusb
(bad)
jle
jbe
ins
repnz
loop
sbb
push
or
mov
inc
imul
cmp
and
inc
dec
push
adc
mov
fcomp
or
ins
call
mov
and
data16
sub
fwait
add
test
leave
(bad)
jnp
mov
sub
pushf
and
cdq
pop
push
movs
and
xchg
out
pop
adc
(bad)
xchg
out
idiv
je
neg
xor
ret
jl
in
cs
dec
mov
addr16
and
mov
push
inc
pop
das
scas
sub
add
sub
aaa
lods
add
xor
inc
and
aam
test
dec
sub
jnp
xor
in
fnsave
jno
xchg
push
pusha
inc
add
pusha
jne
rol
push
push
pop
push
xchg
js
sub
sub
add
mov
mov
dec
adc
adc
and
sbb
jns
in
add
mov
mov
push
sub
popf
sahf
rcr
lahf
sub
push
rcl
adc
icebp
popa
lea
add
xchg
xor
dec
add
mov
es
(bad)
mov
es
sub
inc
jmp
xchg
push
push
fmul
add
and
sbb
jnp
or
(bad)
pusha
sub
mov
pop
mov
adc
inc
dec
push
imul
call
cmp
xor
in
ins
or
add
and
sbb
dec
(bad)
or
dec
sub
(bad)
cdq
xchg
and
rcl
or
dec
mov
push
div
mov
xchg
movs
jo
xor
mov
xlat
sbb
inc
adc
sub
mov
add
sub
inc
adc
pop
icebp
popa
je
repz
in
or
loop
sub
sbb
xor
aam
and
dec
push
and
(bad)
mov
out
arpl
pop
jle
out
push
inc
xchg
out
pop
popf
arpl
test
pop
out
and
vpcomd
(bad)
nop
sbb
jecxz
mov
sub
push
xchg
out
push
adc
mov
mov
adc
jae
mov
jbe
jns
jne
cmp
mov
push
loopne
add
ss
pop
(bad)
adc
and
loopne
daa
int
inc
(bad)
push
dec
xchg
retf
cmp
sub
mov
and
or
enter
cdq
jae
or
je
arpl
xchg
fadd
ins
jnp
inc
hlt
pop
xchg
ret
imul
jnp
pop
cmp
pop
test
cmp
fisub
push
sub
nop
fcom
nop
fdivr
or
es
xchg
les
sbb
add
movs
jmp
adc
imul
xchg
adc
or
mov
cdq
pop
lods
sub
cmps
xchg
pop
call
push
mov
mov
xor
add
and
pop
mov
mov
xor
fs
retf
mov
pop
mov
enter
ins
(bad)
xor
leave
das
mov
sub
rcl
mov
push
pop
lahf
jns
mov
cmp
jbe
sub
jmp
add
aad
or
cwde
push
cdq
mov
and
xchg
jno
and
das
seto
ins
adc
xchg
bnd
and
add
xchg
mov
xchg
adc
mov
mov
sub
adc
or
ret
fistp
das
fdivr
aaa
loopne
and
je
adc
dec
das
mov
and
push
push
inc
add
xor
ja
rcr
repnz
data16
popa
inc
adc
inc
enter
imul
cmp
cmps
fiadd
aas
push
shl
jb
ds
dec
cmp
or
sbb
test
and
loope
icebp
ins
iret
or
js
adc
dec
push
cmp
sub
ds
and
add
fs
jno
mov
dec
pop
jb
cld
sub
leave
xchg
push
enter
sub
xor
jmp
mov
sub
rcl
adc
sub
xchg
dec
sub
xor
data16
loopne
add
xor
xchg
lods
loopne
push
mov
mov
mov
xor
mov
add
mov
xchg
or
stos
std
repnz
or
and
add
and
or
movs
ret
daa
xchg
lods
scas
push
mov
mov
or
xor
cdq
push
mov
ins
sbb
pop
push
xchg
enter
jl
stos
les
mov
data16
loope
je
mov
add
and
or
xchg
sub
jb
add
fsub
les
or
pop
xor
loopne
mov
xchg
mov
add
iret
mov
or
lods
or
fs
dec
cs
int3
shl
mov
dec
xchg
std
shl
push
in
mov
and
adc
add
add
adc
xchg
xor
cmp
lds
mov
add
retf
xchg
fisub
mov
dec
js
gs
loopne
cmps
or
pop
push
mov
add
pop
dec
adc
movs
aam
sub
das
pop
inc
mov
cdq
mov
or
repz
pop
mov
push
pop
adc
xor
xor
sbb
jl
sub
loopne
aas
or
cmp
clc
push
add
push
jns
push
cmova
dec
adc
mov
in
and
iret
mov
pop
pusha
retf
adc
lock
fs
call
mov
in
inc
adc
xchg
sub
mov
push
inc
aam
bound
mov
sar
js
inc
cli
cdq
inc
gs
sbb
imul
add
lea
pushf
aaa
cmp
or
scas
or
or
mov
das
je
or
sbb
push
fucom
sbb
mov
jne
xor
ins
cmp
arpl
sub
push
dec
jmp
test
into
fcomp
pop
add
push
fwait
and
jmp
mul
cmc
xchg
push
loopne
pusha
dec
es
in
lock
cld
rcl
pop
inc
mov
mov
jne
loope
scas
or
loopne
sbb
(bad)
xchg
js
dec
pop
imul
stc
add
in
repnz
out
popa
(bad)
leave
retf
repz
popa
repz
test
push
sbb
jns
popa
adc
rcr
popa
ins
sub
or
push
mov
inc
loop
(bad)
jp
add
or
call
call
ins
loopne
sub
shr
loope
sub
pop
mov
sub
pop
dec
or
stos
ins
xor
in
and
movs
cmp
xchg
and
pop
shl
xor
add
dec
cmp
adc
xor
repz
pusha
cmp
pop
mov
loopne
nop
xchg
mov
repz
loop
adc
pusha
(bad)
icebp
xchg
inc
outs
sub
jmp
rol
loopne
lock
repnz
xchg
in
add
jb
cmp
pop
lock
pop
sub
and
lock
cmp
shl
pop
mov
sub
pop
mov
add
sub
push
xchg
add
jb
int3
xchg
push
dec
push
std
int3
xchg
mov
mov
xor
inc
push
jmp
ror
xor
sbb
call
push
shr
adc
fsub
xchg
mov
loopne
cmp
repnz
pop
jp
adc
ins
lods
mov
sbb
out
pop
pusha
shr
pop
adc
xor
and
popa
stc
pop
sbb
daa
pop
xchg
inc
adc
rol
xchg
xchg
lods
lods
mov
ds
ins
je
sbb
add
imul
xor
and
ds
aad
or
pop
jbe
xor
mov
(bad)
fbstp
pop
pop
sbb
in
add
ins
fwait
rcr
mov
neg
xor
outs
les
pop
push
lock
sbb
jno
mov
mov
mov
mov
shr
xlat
pop
xor
ins
pop
xor
push
or
pop
shr
mov
or
fadd
js
push
or
test
push
test
lea
mov
outs
retf
and
fs
imul
ins
ins
cmp
nop
inc
lock
enter
sub
mov
pop
push
clc
mov
mov
adc
fcomp
retf
adc
sbb
mov
lahf
pop
xor
mov
stc
sub
pop
jne
jmp
jnp
and
(bad)
cmp
push
mov
mov
mov
adc
outs
in
mov
push
jg
lahf
push
shl
xchg
int
mov
mov
mov
mov
pop
push
jne
xchg
push
mov
fidivr
xchg
cld
out
mov
dec
sahf
out
packssdw
xchg
mov
mov
mov
popf
bsr
fdivrp
xchg
and
ret
out
(bad)
pop
xor
pop
push
or
push
shr
cmp
cmp
xchg
daa
push
call
pop
push
gs
mov
leave
in
xlat
xchg
jbe
mov
push
inc
punpcklwd
sbb
mov
xchg
inc
std
rol
jns
ja
push
add
sub
push
jbe
popa
inc
sbb
(bad)
out
leave
(bad)
int
in
or
jmp
jecxz
xor
inc
or
cmp
mov
add
aam
or
bound
popf
sub
mov
adc
or
cmp
mov
cwde
add
leave
add
test
sbb
cmp
mov
ret
jmp
xor
jp
sbb
xchg
mov
or
xor
dec
pop
(bad)
jmp
sbb
add
add
push
add
mov
add
mov
and
into
fdivr
jnp
inc
loope
(bad)
mov
in
xor
push
inc
mov
mov
ins
dec
je
sbb
mov
pop
push
fs
(bad)
mov
cwde
sbb
adc
adc
jns
nop
xchg
(bad)
rcr
sub
enter
pusha
sbb
inc
jecxz
inc
sbb
pop
nop
loope
pop
push
fisub
jmp
lock
cmp
lock
aam
ins
pop
fbstp
adc
jb
ret
inc
call
movntq
out
sub
(bad)
cmp
xor
pop
dec
ds
sahf
call
add
test
in
or
cmp
xor
stos
push
sbb
mov
mov
inc
scas
and
nop
add
or
sbb
add
inc
nop
add
or
dec
scas
jmp
adc
mov
push
lds
pusha
add
inc
inc
sub
cmp
add
clc
lahf
sbb
leave
push
adc
jae
jno
clc
and
stos
push
int
daa
mov
jg
xor
retf
cmp
sbb
xor
dec
scas
mov
nop
scas
movs
adc
test
jo
popa
mov
pop
mov
mov
jg
mov
or
cld
ja
fisubr
jno
iret
dec
pop
sub
leave
dec
pop
mov
cs
enter
enter
retf
leave
enter
xor
leave
enter
or
and
leave
enter
jne
mov
sbb
cmp
xor
sti
ja
retf
dec
loopne
mov
pusha
xor
leave
in
add
and
out
xor
nop
sbb
pusha
mov
hlt
sti
scas
mov
(bad)
les
mov
add
xor
xchg
and
in
add
mov
and
cmp
test
test
inc
xor
cmp
xchg
or
mov
or
test
inc
lds
out
rcl
mov
or
popf
aas
pop
add
push
movs
outs
pop
dec
add
sub
out
inc
cdq
jge
xor
mov
sub
adc
je
bnd
(bad)
rcr
push
push
push
loope
push
or
mov
mov
adc
jmp
and
mov
pop
ffree
xchg
lea
ret
popf
and
repz
jmp
sbb
(bad)
xor
mov
and
dec
es
adc
dec
lahf
xchg
push
sub
inc
pop
enter
mov
add
hlt
adc
sub
xor
mov
mov
pop
or
push
sub
add
fbld
lock
nop
mov
rdtsc
jno
and
mov
add
or
xchg
adc
mov
ja
gs
sub
add
xor
dec
rol
pop
cmp
adc
inc
xchg
xchg
lahf
mov
and
mov
pop
test
fist
inc
ins
xchg
mov
data16
les
dec
rol
xor
add
mov
aam
bound
sbb
or
ret
imul
jmp
popa
mov
mov
lods
sbb
pop
sbb
sub
jmp
xor
add
jnp
repnz
js
xor
jge
cmp
pop
or
lds
pop
aam
fstp
jge
lahf
sub
jg
in
arpl
js
les
punpckldq
lods
popa
addr16
add
lea
iret
sub
add
sub
iret
inc
mov
adc
sub
cmp
mov
pop
shl
add
shl
add
in
arpl
add
cmps
push
push
sbb
sub
and
movs
mov
dec
pop
adc
jno
jno
pop
sbb
add
sub
fcomp
pusha
hlt
mov
rol
xchg
and
mov
rcr
push
inc
popf
mov
fidivr
dec
loopne
in
js
sub
mov
add
jnp
out
nop
or
sbb
sar
push
push
cmp
cmp
ftst
jns
adc
push
inc
bnd
jmp
jb
push
leave
fcomp
add
or
adc
loopne
fs
pop
aas
jmp
shr
nop
push
xor
push
jmp
int3
and
rcl
pusha
xlat
loopne
push
enter
pop
mov
jl
add
lds
inc
lock
call
add
mov
ficom
fisubr
cmc
or
lea
and
push
push
dec
sahf
out
emms
push
call
fnstcw
test
pop
test
(bad)
movs
push
push
in
in
mov
mov
test
jo
xchg
rol
inc
xor
push
call
or
ins
iret
(bad)
pop
push
adc
pop
paddq
xor
push
pop
sbb
add
adc
adc
inc
movs
scas
or
jns
pop
jb
or
or
fcom
add
mov
sti
add
xlat
or
hlt
jbe
int
push
cmp
cs
push
and
mov
pop
adc
and
cmp
jns
outs
sbb
cmp
ficomp
into
fsubr
das
pop
cmp
or
fs
cmps
daa
mov
sbb
fs
es
loopne
adc
icebp
arpl
mov
rcr
inc
pop
aad
inc
xchg
sub
jmp
(bad)
adc
dec
cmp
and
retf
push
sbb
ja
fnsave
sub
cmp
sbb
ds
or
inc
ret
mov
cdq
mov
mov
jecxz
(bad)
cli
mov
(bad)
es
push
sub
push
cld
out
push
adc
push
push
jle
add
mov
push
adc
pop
sbb
(bad)
push
popa
xor
and
sub
lock
aas
dec
das
jne
(bad)
popa
pop
shl
inc
adc
inc
cmp
nop
cmp
lds
xlat
xchg
push
loope
jmp
mov
pop
mov
scas
mov
out
(bad)
dec
cmp
aaa
dec
std
push
push
shr
inc
mov
loopne
jbe
pop
std
cmp
in
and
aam
adc
retf
inc
mov
add
xchg
add
push
sbb
adc
shl
adc
mov
arpl
popf
push
sub
cmp
cmp
arpl
rcr
lods
fcomp
sbb
jae
sbb
fstp
pop
leave
xor
and
fmul
and
push
das
xchg
sbb
das
inc
xlat
sub
sub
and
jbe
xor
jl
into
mov
push
xchg
adc
ja
fstp
pusha
xchg
out
dec
sbb
test
in
dec
add
mov
ffreep
jg
pop
fcomp
push
sub
pop
cmp
cs
rcl
push
sbb
push
arpl
or
dec
or
jo
mov
jg
pushf
loop
xor
inc
jg
xchg
not
add
neg
ja
mov
add
ret
xchg
jl
scas
pop
sub
jmp
xchg
add
cmp
aam
pop
jmp
ud2
sub
retf
and
pop
cmp
pusha
jg
dec
das
pcmpgtb
jmp
dec
cmp
mov
dec
xchg
aam
xchg
mov
inc
mov
jle
test
and
add
push
sbb
inc
fild
sbb
mov
jl
jbe
je
mov
test
sbb
iret
sbb
xorps
ds
inc
mov
sbb
ins
les
sub
fsub
jb
pop
xchg
pop
aam
jnp
lea
mov
gs
jae
sbb
adc
pop
cmp
adc
mov
or
retf
and
adc
or
outs
mov
inc
add
stos
push
or
sub
push
addr16
mov
pop
jmp
inc
loopne
in
mov
xchg
xor
cmp
retf
xchg
sbb
or
inc
inc
sbb
pop
stos
std
shrd
out
test
add
sub
bswap
mov
xor
add
scas
test
xchg
das
jnp
les
pop
imul
push
and
fwait
sub
push
call
repz
repz
loop
or
test
lock
push
cwde
pop
int
jb
sahf
pop
cli
cmps
mov
gs
cmps
push
inc
je
lock
push
mov
cmp
nop
dec
pop
pop
rol
or
inc
sbb
adc
dec
jecxz
or
les
sub
mov
cdq
push
(bad)
push
jmp
cmp
je
imul
and
adc
daa
xor
pusha
ror
mov
mov
in
dec
xor
cwde
sbb
dec
pop
pop
cmps
fwait
shr
fbstp
sub
in
scas
dec
cli
mov
xchg
push
push
jmp
mov
mov
xlat
and
pop
test
mov
xchg
cwde
test
retf
inc
test
popa
sbb
sti
dec
sar
gs
call
cs
mov
stos
or
rcl
(bad)
in
cmp
dec
mov
add
add
sbb
xor
data16
imul
mov
adc
pop
add
and
xor
xor
sbb
es
sub
add
push
add
xchg
push
and
xchg
mov
fsub
mov
push
sti
sbb
fisub
mov
add
mov
les
sti
inc
mov
pop
adc
adc
adc
pop
lahf
pop
and
mov
popa
cmp
inc
jmp
loopne
sbb
push
into
enter
imul
add
add
and
in
sbb
xlat
stos
dec
inc
loope
mov
push
sbb
pop
stos
imul
cdq
add
rol
mov
pop
punpckhbw
dec
push
add
js
push
or
bswap
sub
test
loopne
pop
push
in
push
js
les
jmp
push
add
jge
and
ret
add
imul
(bad)
out
enter
mov
sub
mov
hlt
dec
sbb
retf
pop
and
jmp
push
clc
aas
jg
pop
mov
and
dec
lods
pusha
adc
popa
mov
test
out
shl
add
push
inc
or
push
popf
inc
sar
clc
xor
push
mov
pop
pop
mov
xchg
test
xor
or
sub
bound
inc
nop
sub
or
imul
xor
cld
rcr
mov
nop
ficom
add
sbb
jbe
mov
(bad)
jl
outs
xor
(bad)
out
jl
or
cmp
mov
jo
or
mov
arpl
sar
dec
je
cmp
mov
xor
int
rol
xchg
mov
add
or
jl
mov
out
xor
inc
inc
cmp
repnz
pop
sbb
pop
popa
fs
movs
lods
xor
into
imul
or
adc
add
ret
outs
adc
jge
cmp
xor
add
push
push
das
fdiv
adc
dec
or
adc
mov
jl
sub
sbb
adc
or
inc
loop
xor
sbb
pop
xchg
les
dec
jecxz
test
fcmove
mov
clc
mov
inc
and
loopne
xchg
rcl
push
outs
nop
xor
add
(bad)
imul
pop
adc
dec
dec
lds
(bad)
ja
dec
inc
jecxz
cmp
and
(bad)
inc
lea
xor
dec
or
push
ret
lods
retf
mov
pop
push
push
push
push
add
xchg
mov
add
sub
push
loopne
pop
push
add
jmp
or
pop
cmp
sbb
add
in
das
dec
add
ins
pusha
adc
push
push
push
shl
inc
das
cmp
cmp
mov
mov
sbb
inc
push
icebp
mul
aam
inc
push
xchg
or
repnz
cmp
add
xchg
ja
arpl
jb
cmp
cmp
xchg
xor
sbb
xchg
mov
and
xor
sub
daa
or
scas
in
fild
les
add
dec
pop
ins
in
push
inc
rol
(bad)
and
aaa
push
jb
ja
xchg
adc
test
stc
or
sbb
jno
mov
xor
in
and
xchg
data16
cmp
lods
add
jnp
sbb
mov
mov
popa
or
add
and
push
add
pop
cmp
js
pop
ret
inc
pop
mov
pop
jnp
push
mov
adc
push
pop
sbb
cli
add
mov
cli
scas
mov
xchg
hlt
mov
ins
stc
or
jae
push
repz
mov
stc
(bad)
inc
sbb
mov
jo
push
dec
dec
jp
xor
and
or
or
xchg
call
xor
mov
inc
jb
xchg
adc
dec
in
xor
addr16
pop
pop
sbb
jne
mov
lods
sub
jmp
adc
in
cmp
add
add
jmp
push
cmp
or
adc
sbb
or
adc
mov
push
fimul
fiadd
xor
pusha
and
add
mov
imul
pop
pop
adc
scas
jge
mov
ins
mov
bound
push
mov
add
bound
or
clc
dec
ror
es
pop
test
cmc
arpl
(bad)
iret
add
loop
sbb
aam
pop
mov
mov
daa
or
(bad)
out
xchg
add
and
and
imul
mov
stos
les
inc
inc
aas
sbb
dec
inc
adc
movzx
test
(bad)
cwde
ins
ror
aaa
iret
inc
xchg
mov
inc
sbb
je
and
mov
test
enter
jbe
dec
mov
movs
mov
addr16
mov
cli
(bad)
mov
pop
push
add
dec
mov
or
(bad)
push
push
and
(bad)
mov
(bad)
gs
jo
push
xchg
sub
pop
nop
cmps
sub
pop
mov
sub
movs
sub
xchg
inc
dec
sbb
ficomp
mov
cwde
cmp
push
xor
jmp
leave
lea
arpl
inc
ffreep
dec
push
mov
mov
call
xchg
inc
mov
imul
and
retf
mov
ret
mov
dec
cmp
jge
xor
out
push
fbstp
or
jb
inc
or
and
jg
ds
cmps
mov
dec
mov
lea
les
add
jb
sbb
fist
and
dec
icebp
mov
inc
mov
and
xchg
push
in
pop
adc
and
test
outs
sbb
jle
pop
aam
ret
pushf
and
cmp
push
or
xchg
or
mov
mov
clc
movd
inc
loopne
mov
mov
fimul
cmp
inc
sbb
sub
push
mov
mov
movs
push
jne
(bad)
xchg
dec
pop
outs
dec
dec
dec
setbe
(bad)
adc
dec
cmp
leave
push
add
dec
scas
push
jns
or
das
xchg
sbb
dec
loopne
jne
push
or
jne
pop
xchg
push
dec
loopne
shl
nop
jne
mov
add
push
or
pushf
or
out
adc
adc
scas
daa
fcmovnbe
fimul
mov
sbb
sbb
sub
xor
jp
push
jp
xchg
push
call
fidivr
iret
push
shr
mov
cmp
or
test
rcl
push
dec
cmps
fmul
pushf
inc
mov
lods
jne
test
rol
ins
or
mov
das
xchg
xor
xor
fcmovnbe
cmp
adc
test
(bad)
inc
mov
mov
pop
jbe
cmp
jecxz
imul
je
sub
repnz
cmp
adc
cs
sbb
repnz
adc
mov
mov
and
dec
clc
lods
ss
ins
add
fcmovb
cmp
inc
call
inc
sti
mov
dec
cdq
jo
call
lahf
movs
out
push
mov
xor
add
push
sub
adc
inc
ds
xor
push
push
mov
or
push
mov
lahf
movs
ja
sub
xor
cmps
pop
or
ja
and
and
mov
push
iret
or
adc
mov
mov
sub
(bad)
cmp
pop
inc
shr
enter
out
inc
jg
fs
pop
pop
dec
jg
push
mov
stc
and
push
sbb
movs
and
mov
mov
sub
or
(bad)
cbw
fcmove
add
pop
jmp
sub
cli
and
xchg
sbb
jns
stos
adc
pop
and
mov
sbb
push
add
xchg
gs
cwde
cwde
movs
(bad)
ror
jmp
fsub
mov
dec
bound
aaa
xchg
mov
sbb
movs
call
xchg
dec
or
add
or
sbb
add
sub
fidiv
and
test
mov
bound
(bad)
sbb
push
lock
push
mov
dec
or
hlt
ret
shr
iret
bound
jle
add
jp
inc
add
add
cmp
cdq
or
cmp
sbb
jecxz
ss
jne
gs
movs
repz
jno
xor
dec
loopne
imul
std
ds
push
fistp
lahf
loopne
lahf
sub
xor
mov
ss
daa
mov
adc
adc
sbb
sbb
addr16
neg
xlat
or
cwde
push
sbb
scas
add
adc
mov
xor
jae
cmp
mov
pushf
cmps
dec
retf
adc
and
jge
jb
aas
dec
add
or
fadd
add
or
aam
cmp
dec
js
ja
adc
nop
aas
rcl
jo
push
sbb
jmp
push
push
mov
push
(bad)
mov
pop
fimul
into
dec
push
stos
add
xor
mov
dec
stos
ds
jbe
jmp
sbb
mov
xchg
and
fstp
adc
mov
xor
dec
or
push
mov
ins
int3
daa
sub
outs
inc
addr16
mov
aaa
pop
push
mov
mov
jp
(bad)
cmp
dec
inc
es
push
xlat
jno
mov
data16
mov
sbb
sbb
or
mov
xchg
xor
fwait
cmp
pop
sbb
aam
mov
xchg
popa
cmp
ds
aam
nop
inc
mov
ret
arpl
ret
rol
lds
cmp
push
add
ins
xor
loop
(bad)
add
test
jp
lods
xor
adc
xor
jns
dec
popf
imul
ds
jmp
cmp
fwait
lods
(bad)
lods
(bad)
cmps
cmp
test
test
jge
jne
int
test
gs
dec
mov
(bad)
and
arpl
dec
mov
enter
xor
sub
fcmovnu
lds
xor
and
sub
xor
jmp
mov
mov
sub
pop
or
aam
pop
mov
push
xchg
icebp
dec
or
mov
clc
dec
sub
push
sbb
ss
mov
add
xor
js
or
jo
test
ror
adc
fs
or
push
fs
mov
nop
mov
mov
data16
add
retf
mov
xor
mov
jmp
or
dec
sub
ins
mov
ret
jle
cmps
test
pop
scas
cmp
cmp
sbb
mov
stos
push
xor
lds
mul
dec
and
enter
add
xor
pop
cli
sbb
pop
movs
mov
xlat
mov
(bad)
mov
mov
lock
test
mov
xor
loopne
inc
pop
add
sub
(bad)
cdq
mov
sahf
into
sub
sbb
push
mov
or
sub
or
jmp
sub
mov
mov
sahf
stos
adc
cmp
sub
add
mov
pop
xor
xchg
fwait
not
mov
fstp
mov
jbe
jle
or
pop
lock
js
cmp
dec
inc
sbb
outs
sub
or
mov
xchg
push
hlt
inc
mov
mov
popf
das
sub
frstor
sub
push
mov
jo
imul
repnz
inc
and
(bad)
jge
mov
cmp
mov
ret
adc
out
xchg
addr16
sub
jge
cmp
add
fdivr
lock
pop
jb
test
ret
ror
mov
add
fild
inc
ret
mov
and
xor
pop
loopne
into
jo
int
dec
ss
mov
dec
and
adc
loopne
mov
mov
std
call
or
(bad)
sahf
int3
adc
or
jle
cmp
ret
icebp
xchg
aad
and
push
add
int
call
mov
clc
lea
mov
inc
into
push
in
loopne
xchg
ret
out
jo
ror
cli
mov
and
es
xlat
test
add
mov
jg
xor
and
ret
mov
sar
mov
mov
call
ja
mov
push
cmps
push
cmp
cmps
sub
and
js
xor
or
int3
sub
int
mov
mov
xor
adc
jno
push
fmul
outs
add
xor
test
pop
pop
push
sar
cmp
pop
xlat
ins
mov
add
dec
or
add
push
push
pushf
inc
inc
idiv
(bad)
sub
add
mov
dec
test
sub
ror
inc
adc
xor
add
(bad)
arpl
push
icebp
das
push
push
pop
loop
iret
dec
xchg
int3
push
fadd
(bad)
push
das
lock
cmps
add
hlt
dec
test
add
retf
fsubr
out
movnti
loope
in
pusha
push
push
pop
jle
fbld
push
push
sbb
scas
add
dec
sbb
xchg
in
data16
push
rcl
fdivr
sub
test
mov
retf
mov
(bad)
sub
sbb
or
leave
pop
out
dec
iret
cmp
dec
or
mov
cmps
test
sbb
sub
mov
test
mov
mov
pop
lahf
adc
xor
jb
out
cmps
ss
sub
mov
int
outs
xor
sbb
lock
add
dec
cs
clc
test
(bad)
mov
push
xor
inc
mov
fucom
icebp
je
inc
ret
xor
imul
nop
jp
fisttp
pusha
fadd
pop
xchg
sub
jmp
mov
mov
(bad)
sti
shl
hlt
jle
xchg
add
and
(bad)
aad
dec
pushf
leave
test
sbb
or
adc
push
add
jge
fdivr
call
push
add
enter
cli
pop
movs
xor
imul
jmp
mov
cmp
jb
cmp
jbe
push
push
add
cmp
ja
les
lea
jmp
push
jl
outs
nop
push
das
xchg
je
rol
stos
test
add
imul
xor
jae
xor
cmp
std
ficom
or
xchg
add
ror
fsubr
jo
inc
inc
mov
cmp
mov
(bad)
retf
call
jbe
mov
push
xor
xchg
movs
pop
jo
or
pop
or
mov
gs
sub
dec
or
pusha
adc
xor
jmp
pop
xchg
fidiv
(bad)
jg
call
cmp
jae
add
adc
pop
mov
xor
cmp
out
mov
mov
es
and
scas
add
sub
xor
pop
outs
jmp
adc
fidivr
shr
pop
or
pop
dec
mov
or
aam
cmp
cld
rol
sub
clc
add
jg
mov
push
or
lea
cmps
push
gs
sub
push
push
call
jno
lods
add
cmp
pop
cmp
cmp
xchg
dec
out
scas
xchg
push
pop
dec
jbe
jl
jb
fimul
nop
mov
call
out
mov
or
or
lods
cmp
adc
or
pop
shl
sbb
jp
(bad)
cs
jl
and
push
cs
jbe
mov
hlt
aam
dec
js
push
push
je
or
jp
or
mov
mov
js
movs
rcl
pusha
dec
pusha
mov
jp
push
inc
mov
jmp
sti
(bad)
xor
xor
and
arpl
aas
push
bound
test
or
jmp
pop
jb
cmp
ja
cmp
push
dec
mov
add
leave
cmp
mov
and
adc
dec
and
imul
mov
ret
ret
jl
add
jle
ins
in
inc
ss
adc
iret
pushf
pushw
sub
pop
jmp
hlt
je
call
fnstenv
out
inc
in
movs
push
jne
nop
jne
pushf
fdiv
fwait
pop
push
pushf
leave
test
ja
(bad)
loopne
sbb
push
add
or
in
cmp
mov
xchg
dec
adc
xchg
imul
pop
pop
imul
fdiv
xchg
cli
jge
nop
dec
push
call
xor
jp
jl
pop
push
pop
push
in
or
adc
xgetbv
or
loopne
mov
jo
in
jle
adc
jge
push
or
daa
sbb
sbb
sbb
mov
cld
lods
inc
inc
add
sbb
pop
and
mov
and
and
std
mov
jns
hlt
jb
sbb
ja
dec
jmp
push
les
jg
sar
aaa
cmp
js
sti
lock
pop
jae
enter
pop
xor
pop
jp
sub
cmp
nop
or
jge
fbstp
inc
add
cmp
sbb
rol
sub
mov
jp
lock
ds
and
push
ss
lods
outs
adc
js
outs
fs
call
xchg
pop
mov
loopne
inc
or
mov
inc
shr
dec
fdiv
nop
retf
add
cdq
test
inc
inc
add
aaa
aad
in
xchg
lock
jb
jmp
popa
jp
mov
fbld
mov
jne
xor
enter
(bad)
test
mov
mov
pop
fidiv
lods
and
in
in
sahf
sub
inc
shl
outs
cmp
and
mov
fsubr
loop
add
fwait
ret
mov
and
mov
fidivr
jge
push
or
jmp
mov
jo
inc
jmp
rol
(bad)
lods
mov
mov
and
and
sbb
retf
xchg
pop
in
add
mov
pop
ja
cmp
jp
leave
pusha
mov
jne
call
aas
jl
pop
in
mov
ins
mov
pop
jnp
popa
cmc
mov
xchg
xchg
add
add
enter
mov
cmp
leave
out
fnstsw
pop
add
pop
je
push
imul
sub
mov
fist
ja
test
and
das
ins
popa
rol
retf
and
and
(bad)
push
lds
test
dec
daa
pop
sub
loop
add
adc
mov
pop
pop
movs
push
call
(bad)
push
ror
ret
inc
dec
call
pop
daa
clc
mov
dec
fcom
in
ficom
popf
shl
in
lds
adc
or
(bad)
retf
in
in
iret
jnp
adc
or
pop
dec
push
jns
imul
loopne
add
das
repnz
adc
xor
setb
ret
loopne
or
xlat
push
not
push
enter
bound
push
add
sbb
rcr
add
add
push
add
jo
add
or
aas
daa
fldcw
nop
inc
xchg
xchg
or
test
jmp
dec
jmp
sbb
mov
das
xchg
adc
sti
adc
enter
or
add
adc
fwait
and
jecxz
outs
out
push
out
adc
add
adc
xchg
jbe
or
fwait
cld
cs
rcr
add
in
daa
dec
pop
sbb
adc
pop
in
inc
pop
jb
in
ss
and
cmp
in
in
in
in
mov
lods
or
sub
fwait
sar
(bad)
repnz
daa
mov
pop
jmp
and
xchg
fbstp
loop
in
sbb
add
or
push
shr
aam
and
add
fist
sbb
pop
pushf
pop
sub
lods
dec
(bad)
outs
dec
inc
mov
into
je
ror
inc
lods
adc
ja
cli
lock
jae
je
imul
cmp
add
test
in
mov
add
imul
cmp
inc
and
add
xor
xor
ds
add
out
arpl
pop
adc
add
dec
enter
or
or
or
cli
call
mov
pop
jp
cmps
pop
shl
call
jle
jmp
add
fnstsw
lock
fdivr
sbb
mov
pop
jmp
aam
aam
jl
push
test
lock
iret
frstor
xchg
jmp
mov
adc
or
xor
sbb
sbb
or
cmps
cmp
cmp
jne
add
mov
adc
inc
das
mov
mov
dec
and
and
and
cmp
cdq
cwde
sub
ins
aas
call
rcr
in
push
adc
je
das
movs
sub
loopne
les
push
jecxz
leave
cmp
je
jns
mov
sub
cmp
fcomp
xchg
movs
jne
fucomi
rol
test
and
pop
sbb
out
and
or
xor
cmc
xchg
stos
neg
xchg
rcl
and
push
mov
sbb
sub
out
ret
nop
cmps
cmp
mov
add
or
jl
ret
sub
int
(bad)
xor
es
add
sahf
mov
jp
les
outs
ss
out
pop
pushf
xchg
jmp
daa
push
mov
and
dec
cs
sbb
fidiv
rcr
js
fs
push
sbb
push
pop
or
sbb
or
jp
sahf
loop
push
clc
jecxz
xor
iret
repz
xchg
loopne
push
jg
add
in
add
push
pop
aaa
or
xor
fs
loope
adc
push
es
add
jne
ds
fs
adc
push
jmp
inc
or
aam
call
adc
or
shl
call
inc
addr16
in
pop
test
push
cmp
sub
iret
mov
mov
adc
dec
adc
ss
ja
mov
xor
and
fmul
and
cmp
mov
cmp
cmp
pop
aad
or
test
sub
ret
adc
sbb
ja
cli
retf
fisttp
ror
mov
je
or
enter
sahf
mov
jb
pop
mov
mov
js
test
and
mov
cmp
mov
mov
dec
ds
dec
cwde
out
fs
daa
jge
jmp
shr
lea
(bad)
idiv
push
xchg
sub
dec
cmps
push
pop
inc
adc
out
pushf
add
imul
inc
(bad)
ds
sub
cmp
sub
sbb
adc
adc
jnp
jp
popa
call
and
jmp
nop
push
push
add
sub
cmp
mov
add
fdiv
sbb
add
inc
mov
mov
mov
inc
pop
pop
mov
sbb
xchg
test
in
ds
inc
sub
inc
pusha
and
lock
ud2
adc
mov
or
imul
mov
out
test
jecxz
jb
push
xor
jo
lea
cmps
call
fild
inc
inc
pop
fistp
inc
add
pop
sub
loopne
or
not
inc
or
bound
cld
rol
icebp
sbb
jne
nop
or
ficomp
(bad)
jns
or
cli
jno
movs
bound
jecxz
test
test
ins
imul
repnz
xor
jb
test
pop
mov
jmp
stos
fsub
jg
outs
cwde
int3
ja
cmp
mov
mov
cs
cmp
sbb
sahf
jp
xchg
cwde
clc
adc
call
std
adc
pop
jne
mov
inc
adc
in
inc
xor
shl
sbb
in
sub
test
jnp
mov
jb
hlt
dec
fmul
cwde
setle
ds
push
hlt
enter
je
xor
sahf
cwde
mov
add
ds
sbb
add
jne
(bad)
lods
pop
and
aaa
mov
xor
dec
arpl
leave
cli
or
push
mov
fisub
jge
pop
jo
shl
fidivr
jl
in
fldcw
xor
push
dec
cld
cwde
cmp
(bad)
cwde
add
hlt
sub
and
test
(bad)
push
sub
mov
sub
pop
popf
xchg
xchg
or
xor
dec
sbb
bound
or
pop
inc
cmp
test
jo
imul
aam
add
(bad)
movs
leave
sub
push
test
shr
sub
mov
sub
fdiv
imul
adc
sub
sar
nop
cmc
data16
punpckhbw
aaa
or
lea
sbb
mov
hlt
and
(bad)
sbb
add
dec
sbb
das
iret
jg
inc
jnp
pop
xchg
xchg
mov
jae
mov
movs
pop
and
(bad)
popf
dec
sbb
enter
scas
mov
xor
push
mov
and
or
arpl
jbe
push
dec
not
out
pop
cld
call
out
pop
mov
inc
xchg
sub
mov
inc
mov
and
dec
adc
push
or
test
inc
test
hlt
fwait
in
xor
jmp
xor
sub
loopne
jg
dec
add
inc
cwde
adc
add
push
cli
not
arpl
addr16
add
inc
sbb
and
clc
push
pop
push
push
and
retf
stos
jne
test
aas
test
nop
aas
fcmove
jmp
push
xor
and
mov
or
(bad)
scas
je
sub
fist
jp
jo
jae
lahf
or
cmp
sahf
fisub
xchg
rol
cli
mov
mov
xor
push
inc
out
xchg
aad
and
cli
pop
dec
sub
xchg
cmp
adc
aas
in
inc
ud0
je
int3
push
dec
movs
mov
fs
imul
inc
pop
adc
push
in
cs
in
out
jne
adc
ret
xchg
mov
dec
jne
jno
sbb
add
sbb
adc
and
mov
cmp
push
xor
adc
(bad)
ss
push
mov
add
outs
bound
jbe
pop
cmps
jp
sbb
jne
and
sahf
mov
xor
repz
loopne
or
inc
movs
or
cmp
cmps
ins
dec
dec
jne
add
push
test
lea
loope
and
jg
sub
push
mov
sub
test
arpl
pushf
mov
fdiv
push
ror
sbb
or
adc
repnz
push
dec
dec
aaa
loope
inc
adc
mov
add
(bad)
push
pop
cmp
inc
inc
sahf
push
rol
ds
adc
jbe
test
loopne
or
jne
sbb
jl
push
mov
dec
ret
imul
push
shr
lock
adc
(bad)
dec
jle
xor
lock
pop
loope
mov
adc
xor
sub
sar
jl
or
pushf
mov
inc
inc
sbb
or
inc
and
inc
mov
push
mov
push
inc
ja
adc
push
and
pop
push
adc
lock
inc
(bad)
jl
fcom
add
ffreep
aaa
repz
jle
jns
push
mov
jp
cwde
push
pusha
mov
ins
inc
lods
mov
push
add
mov
lods
clc
dec
lods
mov
sub
mov
data16
sar
mov
imul
cs
jp
movs
icebp
js
ins
(bad)
out
dec
or
add
mov
aas
fnstenv
dec
xor
cmp
pop
sbb
inc
cmp
cmp
jae
xor
ror
push
jmp
stos
nop
adc
xor
adc
int
xchg
data16
retf
fadd
pop
call
and
lock
push
in
xchg
stos
icebp
fiadd
jle
sub
dec
add
icebp
xchg
xlat
daa
sub
or
push
push
and
ja
mov
or
add
loop
jb
and
bound
sub
sub
dec
and
cs
push
sbb
jno
ret
sub
cld
xchg
hlt
div
xor
inc
add
push
xchg
xchg
mov
mov
sub
xchg
(bad)
mov
cmp
ss
das
or
stos
or
jecxz
jg
js
mov
sbb
mov
mov
add
cmc
ins
ror
push
fwait
lock
push
leave
in
xchg
addr16
sbb
pop
shr
dec
sub
mov
jp
mov
hlt
push
mov
sub
pop
add
and
imul
(bad)
jnp
fild
fstp
fld
fisttp
loop
or
test
pop
push
sub
jmp
aaa
sub
or
sub
mov
pop
adc
popa
and
rcr
adc
mov
add
mov
or
test
xlat
pop
mov
sbb
fwait
jbe
fistp
pop
ss
or
mov
(bad)
arpl
repz
sub
push
push
cmp
das
hlt
add
test
pushf
add
inc
pushf
ins
pop
or
dec
rol
adc
(bad)
push
adc
push
mov
xchg
push
int3
mov
mov
lea
mov
or
(bad)
sub
test
cmp
jae
push
call
mov
mul
retf
ret
sbb
call
in
loopne
fidiv
cmp
ss
pop
push
adc
lock
scas
mov
sbb
jge
cmp
fisub
jmp
push
or
xlat
mov
test
sub
push
push
rsqrtps
pusha
movq
add
push
pop
push
mov
inc
adc
clc
fcomp
test
sbb
jbe
push
pop
add
xor
mov
js
and
(bad)
push
mov
mov
fldlg2
jge
mov
test
add
retf
call
sbb
retf
adc
aaa
and
cmp
sar
inc
jns
bound
ss
sub
ins
retf
push
mov
jb
nop
ds
inc
es
ret
adc
adc
xchg
jns
add
dec
retf
call
enter
lock
test
add
call
cmp
push
repnz
retf
and
std
clc
lea
add
fdivr
call
sbb
jne
fmul
jmp
mov
test
movs
pop
retf
test
mov
add
xchg
cmp
ja
je
jmp
push
pop
add
xchg
retf
xchg
mov
sbb
clc
mov
mov
pop
mov
jecxz
xlat
call
push
xor
mov
mov
in
leave
mov
inc
and
push
pop
nop
movs
mov
ja
push
clc
or
add
lods
ret
icebp
adc
add
xchg
fmul
sub
inc
ror
mov
mov
dec
mov
stos
(bad)
jns
or
or
xor
jb
adc
inc
pop
inc
add
popa
ret
es
mov
xor
or
rcr
nop
jge
call
push
cli
inc
pop
push
adc
sbb
mov
imul
mov
mov
movs
jo
mov
dec
inc
add
and
jl
dec
dec
jmp
inc
aam
fisubr
(bad)
sti
mov
push
popa
or
mov
xlat
sbb
icebp
movs
hlt
cmps
add
jno
pop
push
adc
mov
add
pop
and
js
popa
inc
js
dec
inc
or
pop
inc
push
adc
in
or
and
cdq
movs
and
jmp
adc
cmp
add
aam
(bad)
and
and
out
jae
cld
ds
test
cmp
push
inc
leave
js
mov
sub
xchg
ja
mov
cmp
push
or
daa
cwde
movs
adc
mov
jb
dec
rcl
inc
sub
imul
mov
jne
inc
mov
(bad)
sub
sbb
fwait
pop
xor
popa
push
mov
bound
rol
lds
dec
mov
fsub
dec
adc
jp
jns
jnp
arpl
clc
das
add
cmp
jb
pop
xchg
add
jmp
iret
xchg
fimul
sbb
sub
in
pop
ret
adc
and
loopne
sub
fcomp
cmp
inc
repz
imul
add
push
aas
inc
push
adc
or
daa
and
in
pop
mov
aas
pop
and
fs
inc
enter
(bad)
stos
mov
je
mov
sub
mov
mov
and
and
aaa
out
dec
add
xchg
imul
lds
fisttp
jbe
add
jbe
sbb
push
pop
mov
int3
rcr
push
push
setns
add
movs
popf
inc
jl
das
scas
push
push
pop
xchg
retf
mov
and
sbb
pop
out
xor
xchg
test
imul
clc
mov
sub
or
rol
dec
add
xor
pop
sub
loope
xchg
pop
(bad)
sub
ds
push
icebp
and
cmp
or
dec
add
and
jb
stc
cmp
ror
pop
or
and
and
xor
or
fcom
addr16
dec
fdivr
or
xor
cmp
dec
sbb
daa
push
or
out
call
jg
ins
or
mov
mov
or
mov
(bad)
call
movs
dec
imul
jg
fidiv
jb
inc
dec
pshufw
in
sahf
and
(bad)
xlat
jb
jnp
sbb
jg
imul
mov
lea
mov
fsub
in
dec
loope
lock
sub
and
jns
mov
loope
loopne
test
xor
das
out
xchg
rol
loope
out
cmps
mov
aaa
push
(bad)
ins
adc
inc
stc
pusha
or
in
(bad)
outs
fs
mov
test
mov
mov
push
inc
xor
scas
stos
les
xchg
and
nop
iret
ins
lock
test
ins
inc
mov
jbe
arpl
dec
outs
push
ins
pop
hlt
hlt
and
cli
lea
or
mov
push
ja
mov
adc
add
inc
imul
push
add
cli
xor
xchg
dec
loopne
dec
fld
test
icebp
cwde
inc
mov
mov
ret
sub
sbb
cmp
sbb
addr16
test
sub
cmps
neg
hlt
and
or
or
add
jle
push
mov
sub
(bad)
(bad)
or
gs
adc
mov
or
movs
push
or
es
add
inc
outs
jo
mov
pop
jp
inc
std
adc
inc
pop
jl
arpl
jbe
dec
cmp
inc
mov
mov
cmp
inc
jg
out
mov
dec
and
inc
ins
shl
mov
inc
inc
je
mov
xor
jne
sub
mov
jne
cdq
fdivr
or
push
bnd
(bad)
jmp
mov
or
cwde
repnz
xchg
ret
jmp
ja
jbe
popa
inc
clc
imul
(bad)
push
sahf
push
ret
leave
cmp
or
jmp
inc
loop
jno
or
adc
inc
ret
clc
add
nop
push
push
outs
add
push
or
mov
jb
int
sbb
or
scas
call
jl
pusha
mov
mov
sub
vunpcklps
adc
dec
jne
jmp
adc
pop
mov
out
fist
dec
cli
jb
push
adc
push
rcr
sub
pop
fdivr
add
cld
lock
xor
fstp
repnz
jne
and
mov
jb
sub
inc
dec
push
cmp
push
mov
mov
jae
push
inc
cmp
mov
ja
lea
outs
xchg
jns
adc
in
fwait
or
je
pop
gs
sbb
adc
and
ss
push
jne
sbb
bound
leave
stc
mov
push
mov
push
mov
lahf
stos
in
ds
test
cwde
xchg
mov
inc
sbb
shr
mov
fs
adc
xchg
lods
and
xchg
jne
push
mov
or
push
cmp
cli
xor
xchg
mov
pop
push
sub
cs
adc
gs
test
mov
ret
cs
call
push
sti
(bad)
sbb
adc
jns
adc
in
enter
aad
xor
or
outs
(bad)
add
dec
inc
inc
in
enter
cmp
add
add
daa
pushf
xchg
xchg
fstp
add
test
stos
push
mov
jne
jo
mov
adc
test
enter
out
(bad)
xor
ret
mov
and
enter
inc
cwde
add
lea
dec
cmp
cmp
cld
add
add
xor
cmp
jno
xchg
cli
mov
mov
les
jmp
popa
adc
data16
sbb
nop
sbb
xchg
retf
faddp
lea
stos
mov
or
jbe
inc
dec
cmp
and
push
imul
mov
add
fidivr
pop
mov
aam
lea
jno
sti
in
dec
jg
jo
repnz
cmp
jns
jge
mul
xor
fild
push
jecxz
or
inc
inc
fidivr
inc
jl
shl
and
fdivr
cmp
xor
retf
jo
push
cvtdq2ps
push
retf
enter
inc
out
fsubr
and
int
and
ins
fdivr
jl
dec
pushf
add
or
mov
cmp
ins
mov
leave
rol
cmp
pop
dec
mov
(bad)
out
adc
int3
imul
inc
outs
mov
pushf
jl
mov
mov
mov
daa
cdq
mov
push
inc
push
adc
or
add
ds
dec
sbb
xchg
mov
cmp
add
inc
pop
inc
pop
hlt
and
inc
hlt
adc
dec
daa
imul
or
clc
mov
lea
ret
loope
and
mov
sahf
mov
mov
pusha
retf
sahf
loopne
sbb
mov
mov
sub
mov
outs
loop
or
(bad)
jge
mov
fsubr
sar
xchg
xchg
mov
jg
or
imul
leave
sbb
ins
pop
or
add
and
jmp
ss
push
aaa
out
or
jbe
(bad)
ss
out
mov
sub
inc
sbb
inc
pop
imul
dec
or
xor
(bad)
nop
inc
sub
ds
adc
cwde
nop
push
cmp
mov
xchg
mul
rcl
rcl
sub
mov
or
adc
(bad)
add
push
add
pop
sub
inc
jne
leave
pop
push
loope
adc
inc
fxtract
ror
hlt
dec
xor
add
jge
repnz
lea
inc
mov
or
and
dec
add
shl
aam
(bad)
mov
jbe
jle
cmp
push
fwait
mov
jne
cmps
adc
sub
in
les
ss
jp
les
inc
sbb
mov
mov
fimul
mov
das
mov
sub
outs
ss
lea
xor
aam
ds
and
jp
cmp
mov
pushf
addr16
sub
jne
push
ror
clc
dec
sub
adc
shl
and
adc
ud0
rcr
add
mov
mov
mov
adc
out
xchg
retf
cmp
pushf
jl
add
sbb
mov
ror
inc
xor
bound
jae
sub
mov
aas
daa
and
cmp
or
push
pop
and
adc
push
(bad)
or
adc
into
mov
je
daa
xchg
add
iret
mov
push
outs
pop
pop
or
jno
(bad)
cld
cli
pusha
imul
push
mov
cwde
push
and
push
call
add
jne
in
adc
xor
ret
and
mov
stos
inc
imul
sbb
mov
clc
and
pop
sub
pop
mov
dec
pusha
cs
pusha
call
adc
jo
jl
mov
jmp
int
fidivr
push
ud0
mov
jno
push
js
mov
aam
adc
push
push
mov
adc
pushf
cmp
repz
xchg
push
xor
repz
js
fmul
adc
jo
out
jl
int3
test
jmp
stos
push
mov
xchg
push
aam
pop
inc
sahf
jae
cli
mov
cmp
jae
loopne
(bad)
sbb
inc
enter
test
inc
(bad)
push
or
cmp
into
or
adc
inc
xchg
into
nop
or
bnd
test
lock
push
push
xor
or
fidiv
jne
enter
cmp
in
dec
cmp
and
fstp
cmp
jno
jp
hlt
inc
xchg
mov
push
add
pop
aad
lock
jns
sbb
jns
arpl
repnz
push
or
push
pop
adc
sbb
sbb
pushw
sub
hlt
(bad)
data16
add
pop
and
nop
sub
xor
pop
clc
inc
pop
loopne
jg
mov
dec
push
inc
push
adc
push
arpl
add
inc
mov
ret
dec
push
je
sub
int
pop
adc
jge
add
push
jnp
(bad)
or
test
pop
fadd
xor
gs
fcmovu
dec
cli
js
or
xor
clc
cdq
fcom
xchg
jge
inc
xchg
std
adc
nop
cmp
xor
mov
xor
and
or
ins
retf
mov
imul
test
adc
pop
sub
sar
fs
jmp
pusha
movs
mov
or
add
inc
xchg
jg
(bad)
push
xlat
mov
dec
into
adc
jno
fisttp
js
pop
sub
and
(bad)
pop
jb
adc
add
push
xchg
pop
pop
sbb
push
addr16
dec
mov
sbb
and
or
ins
inc
mov
mov
or
(bad)
ins
(bad)
fidiv
push
add
jg
inc
dec
imul
xchg
das
mov
lea
or
jae
sbb
mov
xchg
sub
js
pop
add
sub
push
repz
and
pop
and
and
mov
leave
in
das
mov
js
js
jne
xor
mov
adc
cmp
push
add
sbb
test
xor
enter
imul
sbb
mov
stos
add
ror
add
mov
and
dec
test
xlat
and
clc
mov
or
adc
rcr
lahf
push
sub
inc
pop
enter
inc
xchg
xor
sar
ja
dec
add
push
repnz
xor
or
or
xor
add
lea
add
cmp
dec
push
nop
push
and
nop
cmps
bound
sbb
push
nop
out
sbb
sub
enter
xor
add
and
inc
push
nop
xor
ds
add
comiss
xchg
sbb
or
ss
add
inc
push
sub
sbb
add
sub
pop
in
sbb
jmp
push
mov
push
xchg
addr16
in
pop
ds
xor
repz
repz
dec
cld
fcom
loope
adc
mov
jns
outs
cdq
add
cmps
sti
add
fsubp
mov
adc
(bad)
outs
leave
inc
add
add
add
or
inc
fwait
ja
inc
xor
or
imul
jnp
idiv
retf
push
or
mov
outs
push
into
jnp
addr16
add
mov
pop
ins
adc
(bad)
popf
fstp
push
push
aam
or
xchg
jl
or
or
or
iret
repz
xchg
push
mov
push
lock
(bad)
dec
adc
add
imul
inc
add
add
outs
add
add
psrlw
cs
cmps
jne
imul
and
xchg
xchg
sbb
sbb
inc
inc
push
dec
jl
inc
push
and
loopne
jne
jne
mov
push
mov
icebp
aaa
and
cmp
aam
mov
mov
mov
das
add
test
mov
and
cld
scas
sub
ret
adc
cmp
(bad)
cwde
inc
call
dec
mov
jbe
or
add
mov
and
rcr
mov
dec
inc
ficom
inc
ja
nop
test
or
test
shl
lock
sbb
or
jg
pusha
mov
sbb
or
cmp
dec
and
inc
mov
(bad)
sub
sub
dec
cmp
mov
jne
cmp
dec
jbe
pop
mov
or
loop
adc
inc
push
ja
retf
daa
push
sub
mov
sbb
push
dec
nop
adc
int3
loope
add
fdiv
add
inc
jge
jl
push
pop
mov
fmul
mov
arpl
cs
jo
(bad)
xor
ins
js
sub
shr
mov
cmp
retf
sbb
ss
push
xchg
sbb
rcl
mov
dec
pop
push
jmp
mov
call
dec
jp
adc
add
in
jmp
gs
std
mov
cmc
bound
jmp
pop
mov
lods
lahf
add
call
adc
xchg
jle
stc
jp
cwde
js
ficomp
test
cli
jo
movq
push
pop
xchg
fcmovne
out
xor
mov
mov
push
xchg
pop
mov
mov
in
mov
sbb
push
sbb
inc
inc
or
mov
(bad)
mov
cmps
in
dec
nop
or
ret
adc
push
call
push
add
jle
and
jecxz
loopne
das
clc
sub
inc
imul
pcmpeqb
loop
add
push
cmp
scas
jle
jbe
dec
add
fsubr
ss
and
rcr
xchg
mov
jl
ja
jmp
mov
(bad)
sahf
push
fstp
push
cmp
add
xchg
inc
pop
inc
lods
aaa
cmp
je
imul
sub
xchg
fld
gs
cmc
into
sub
xor
scas
pushf
mov
call
inc
shl
sbb
mov
(bad)
(bad)
ja
jnp
in
mov
cmps
pop
cmp
je
movs
cmp
pop
and
push
pop
push
sbb
push
pop
mov
je
or
jmp
and
fxch
xor
push
or
mov
dec
push
and
sahf
fnstenv
adc
jl
enter
or
add
sbb
mov
jae
jbe
or
xchg
mov
dec
push
dec
lea
ficom
shl
fist
lds
sub
push
add
mov
daa
push
inc
ins
sbb
xor
inc
mov
add
sub
inc
dec
push
fmul
or
add
ins
add
jle
fldcw
lds
dec
jmp
xchg
mov
ja
loopne
cmp
cmp
out
cmp
sub
jae
repz
jmp
or
mov
mov
push
push
pop
ins
je
xor
pop
cmp
sub
jge
shl
sbb
pop
or
or
addr16
mov
inc
outs
add
xchg
sub
or
out
or
or
test
into
pop
cdq
inc
fst
mov
mov
jne
je
or
pop
adc
in
xlat
xor
int
lea
pop
test
adc
cmp
adc
cmp
loopne
adc
cmp
adc
sub
ja
mov
mov
std
add
addr16
pop
inc
push
mov
aad
xor
sub
test
add
and
ja
retf
inc
xor
sub
jne
ret
add
cmp
push
xlat
push
dec
fdiv
loopne
ror
add
and
inc
call
adc
test
int3
adc
add
or
or
sbb
cs
ss
and
loope
jns
and
int3
imul
lock
cwde
cdq
cdq
sbb
cmp
fisttp
nop
fadd
js
rcr
add
inc
add
push
clc
xchg
or
xor
sub
or
inc
push
call
cmp
add
sub
push
js
mov
jae
cmovo
sub
push
push
cmp
dec
sbb
jb
xor
dec
in
and
add
jb
xor
push
inc
push
pop
push
mov
or
js
ret
ror
push
push
jecxz
(bad)
(bad)
jmp
(bad)
je
cmps
pop
push
mov
sbb
imul
fs
add
push
mov
mov
jge
jp
pcmpgtb
and
push
rol
mov
fmul
(bad)
(bad)
xchg
or
pop
movs
push
xchg
or
sbb
dec
pop
ins
fisttp
daa
das
mov
cmp
pop
cmp
and
xor
xchg
data16
inc
adc
push
adc
cmp
add
icebp
mov
dec
push
test
inc
ss
call
and
or
retf
mov
and
dec
mov
aad
in
sbb
sub
push
add
lock
hlt
mov
sub
je
cmp
push
cld
mov
xor
stos
dec
enter
or
pushf
jg
mov
jne
je
mov
mov
std
mov
mov
scas
gs
clc
pop
les
ja
xchg
mov
out
add
xchg
mov
inc
cmp
loop
cmp
cli
push
add
cmp
stos
pop
pop
test
sbb
jg
add
lahf
jmp
jmp
mov
(bad)
xor
(bad)
pop
popa
lahf
(bad)
lds
das
push
pop
(bad)
mov
mov
or
(bad)
push
add
fidivr
je
xchg
add
add
dec
or
push
jbe
loop
push
or
pop
lea
cmp
mov
xor
pop
add
call
fcmovbe
movs
or
cmp
mov
push
mov
dec
(bad)
call
mov
push
retf
loop
rol
mov
shr
pop
rol
or
es
arpl
push
popf
shl
push
push
add
cmp
je
or
nop
sbb
jo
repnz
xchg
(bad)
aam
arpl
call
mov
ins
jmp
push
test
or
push
int3
cld
shl
int
adc
sbb
ds
iret
xchg
xor
or
shr
or
push
mov
call
out
sub
out
and
add
dec
add
mov
sub
ins
jnp
xchg
cdq
add
or
clc
mov
mov
cmps
sbb
inc
and
int
or
sbb
pop
inc
mov
inc
sub
data16
cmp
pop
adc
movs
add
test
mov
hlt
pop
out
mov
add
test
adc
add
mov
rol
sub
mov
dec
xchg
test
jno
jmp
sub
sbb
push
jmp
ret
mov
js
cmps
sbb
push
aam
push
and
mov
or
rcl
test
faddp
movs
xchg
jae
outs
dec
adc
outs
js
pop
or
sub
push
add
ins
int3
fist
or
test
arpl
ror
jp
sbb
dec
add
adc
or
out
(bad)
adc
into
test
movs
mov
push
or
sbb
sbb
je
jb
or
add
mov
inc
pop
fidiv
js
jo
jno
std
in
in
and
push
bound
adc
ret
mov
sbb
sbb
sub
or
pop
sbb
and
or
pop
enter
test
mov
cmp
int
in
sbb
ss
and
push
or
data16
cdq
jo
lods
inc
jns
scas
enter
mov
mov
sub
push
test
cmc
inc
arpl
fild
fild
loopne
cmps
jecxz
pop
pop
or
pop
jg
mov
jb
sahf
push
jge
sub
jl
frstor
imul
inc
push
imul
add
out
les
sbb
fcomi
or
loopne
adc
and
mov
hlt
into
mov
shr
movs
and
test
mov
cmps
cmp
add
or
mov
push
inc
dec
movs
pop
push
pushf
mov
or
mov
imul
aam
and
ret
cmp
lock
push
jb
ins
fs
inc
ins
inc
cwde
or
pop
add
or
fs
cmp
mov
xchg
ds
cdq
lea
mov
jne
shl
clc
jae
jl
or
popa
xchg
add
xchg
add
xor
into
jg
inc
or
nop
mov
loope
mov
adc
or
ret
scas
daa
xor
rcr
movs
movq
stc
sbb
je
push
(bad)
xchg
aaa
ret
and
adc
in
sti
(bad)
cmp
cli
dec
adc
jne
pushf
out
mov
aad
pop
sahf
and
jne
ins
ds
jmp
pop
mov
push
adc
xchg
nop
jg
jne
xchg
jae
pop
movs
cmps
loopne
xor
and
ins
cmp
pusha
rcl
mov
imul
add
xor
add
leave
add
mov
lods
dec
mov
sub
sbb
mov
and
(bad)
(bad)
or
and
dec
dec
and
mov
sbb
fmul
push
mov
cmp
dec
ror
rcr
xchg
fnstenv
pusha
in
or
psllq
ret
in
inc
sub
sub
fs
push
in
cmp
inc
dec
push
inc
ret
in
sub
aam
push
fild
push
mov
pop
pusha
or
jmp
push
or
dec
aas
add
dec
je
inc
cmp
pop
popa
pop
mov
shl
shl
(bad)
sub
mov
lea
push
rcl
psllw
movs
mov
inc
in
pop
mov
mov
add
inc
lods
jmp
sub
add
repz
enter
push
push
xor
or
mov
and
or
add
push
or
mov
or
psubw
inc
je
(bad)
movs
mov
mov
int3
xor
mov
test
test
lock
cmp
fisttp
sti
test
test
lea
pushf
mov
and
shl
cs
jmp
pop
add
test
xor
(bad)
mov
les
or
push
imul
or
push
repz
fwait
pop
addr16
imul
fwait
addr16
push
push
sub
daa
jns
fwait
in
add
add
xchg
movs
push
test
sub
in
and
loope
aam
add
js
sub
sub
data16
test
mov
js
sbb
cmp
mov
mov
sub
movs
dec
cmc
adc
sbb
in
jmp
popf
cmp
adc
cmc
cmp
test
xchg
pop
mov
sbb
or
test
out
and
or
pop
adc
nop
add
and
push
add
(bad)
fistp
addr16
cmp
and
mov
pusha
retf
shl
in
jae
xchg
pop
adc
loope
pop
daa
hlt
pop
adc
or
ret
mov
in
jne
sub
push
cld
aam
push
adc
mov
data16
test
adc
push
mov
or
test
or
loope
(bad)
push
ins
fmul
push
xlat
aad
adc
push
add
mov
sub
dec
add
or
adc
cwde
pop
mov
rcl
jnp
and
pop
addr16
nop
mov
or
dec
pop
or
jne
push
push
dec
jb
mov
pop
fwait
sbb
xchg
xchg
popf
xchg
sbb
or
cmp
push
inc
or
push
test
loope
fwait
gs
add
call
fnsave
es
mov
sbb
sub
and
push
mov
push
jb
jae
pop
ss
loop
sub
sub
retf
add
add
sbb
adc
int3
add
lea
add
xchg
add
test
out
xchg
push
pop
sbb
push
rol
xor
cmps
sub
pusha
ja
inc
in
mov
mov
xlat
cmp
sbb
pop
imul
or
fs
jbe
sub
push
adc
push
call
mov
xor
mov
push
std
jmp
jmp
dec
sbb
and
adc
cmp
ret
pop
ret
(bad)
fdivrp
jg
cdq
push
mov
push
pop
call
cmps
stos
mov
jae
jp
push
push
sbb
ins
inc
ins
dec
jne
push
cmps
loopne
mov
xchg
ja
sub
adc
ja
cdq
mov
mov
jl
leave
sub
je
sub
adc
jmp
push
or
popf
cdq
mov
or
das
and
vmread
dec
adc
xchg
inc
add
lds
adc
jo
adc
push
adc
aas
out
jno
jmp
cmp
popf
jno
or
and
or
and
adc
inc
nop
test
or
lock
in
jae
adc
adc
loop
adc
bound
scas
or
add
mov
mov
xlat
inc
je
aas
xchg
icebp
inc
je
adc
(bad)
gs
cs
aam
lea
int3
mov
push
mov
into
loop
pop
xchg
jo
xor
mov
(bad)
push
cmp
das
dec
xchg
mov
js
cs
retf
shl
add
xchg
and
ret
ja
int
cmp
jl
es
loopne
je
mov
(bad)
jge
pushf
mov
xor
push
aad
leave
enter
popa
push
test
shl
xchg
aam
add
leave
in
add
jmp
enter
xor
rol
repnz
and
cmps
mov
je
(bad)
and
mov
mov
lea
test
xchg
xchg
add
js
loopne
inc
jbe
sub
jmp
(bad)
inc
jecxz
mov
push
mov
push
push
xor
and
gs
movs
jge
xchg
inc
adc
push
cmps
xor
and
xor
mov
icebp
leave
imul
mov
int
loopne
test
push
(bad)
js
retf
and
pushf
test
fs
dec
call
mov
pop
retf
add
inc
push
xchg
lahf
pop
scas
arpl
fwait
inc
dec
dec
pop
adc
pop
imul
loopne
retf
mov
sbb
test
pop
push
mov
out
dec
pop
inc
fcmovbe
jo
sub
cmp
xchg
stc
or
sti
ss
in
or
sahf
xchg
sbb
xchg
(bad)
shl
xor
cmp
out
ror
push
mov
pop
cmp
adc
push
pop
(bad)
or
out
ins
add
or
mov
pop
add
(bad)
and
xchg
xor
jbe
sbb
adc
out
sbb
add
pop
and
xchg
out
pop
and
in
or
loopne
test
pop
xor
mov
repnz
and
mov
xchg
sbb
adc
inc
sahf
fs
pop
push
pop
pop
push
leave
or
dec
pop
pop
pusha
adc
lock
jle
pop
clc
ficomp
sub
mov
rcr
pop
sbb
push
int3
lea
jecxz
int
rcl
scas
ins
inc
cmc
movs
dec
or
xor
std
sub
dec
inc
call
mov
sub
mov
or
cwde
not
dec
fist
test
jae
pslld
rcl
push
imul
ret
ror
lods
jmp
adc
movs
cmp
enter
pusha
test
pusha
out
xchg
adc
mov
push
std
or
cmp
sbb
cmps
jge
sbb
mov
sti
fiadd
adc
xor
sub
mov
mov
(bad)
cmp
nop
or
loopne
int
lock
out
(bad)
sub
movs
mov
pop
and
and
xchg
dec
xor
jg
push
and
xchg
jbe
xchg
outs
inc
adc
mov
or
call
xchg
or
cmp
and
xchg
push
imul
cmp
or
jl
jbe
cmp
js
fdivrp
jns
imul
inc
jmp
adc
or
fstp
lock
add
dec
xor
mov
jge
inc
pusha
(bad)
and
cwde
add
mov
mov
push
jg
dec
or
div
and
dec
push
and
xchg
dec
cmp
add
mov
(bad)
sahf
jle
sbb
sar
add
and
inc
inc
cmc
call
mov
je
jb
sub
popf
js
hlt
pusha
clc
xchg
add
mov
imul
adc
fdivr
push
mov
lods
add
mov
and
mov
add
xchg
rol
add
in
loopne
rol
cli
imul
jns
pop
dec
or
fs
je
mul
imul
pushf
ss
adc
mov
jl
fdiv
repnz
adc
or
int3
dec
xchg
xchg
adc
mov
cmp
mov
jge
pop
jle
es
jo
push
movs
adc
icebp
dec
push
ja
xchg
test
push
stc
in
jle
push
call
repz
mov
(bad)
div
rcl
dec
aam
dec
mov
mov
or
(bad)
clc
cmp
jbe
xchg
lods
or
inc
sbb
push
add
push
arpl
test
jge
mov
adc
xchg
inc
repnz
cmp
add
ret
mov
push
mov
outs
sub
pop
loopne
ret
test
jbe
jns
sahf
bound
ret
sub
push
loope
adc
jne
and
inc
in
cmp
push
and
repnz
call
aad
push
jb
jmp
call
adc
leave
cmp
add
lods
sub
sti
adc
and
push
jp
or
lods
in
dec
je
cld
mov
mov
and
mov
push
cli
add
sbb
jp
push
fiadd
sbb
pop
fst
pop
aaa
cmp
fdiv
push
dec
inc
call
jno
int3
popf
inc
(bad)
sahf
pop
push
fst
mov
adc
ds
add
mov
sar
pusha
pop
in
xchg
adc
or
aad
mov
push
mov
pusha
mov
pop
sub
movs
pop
mov
dec
test
out
or
in
add
mov
pop
or
xchg
jge
mov
adc
inc
mov
jns
sub
fist
lods
push
int
in
xor
ja
and
shr
and
add
mov
ja
and
cmp
movs
mov
push
dec
push
(bad)
adc
hlt
(bad)
call
sbb
pop
dec
stc
add
pop
mov
das
pop
ins
jg
dec
sahf
test
push
cmp
shl
inc
pop
cmp
xor
sbb
xor
ss
add
mov
sub
xor
icebp
sbb
fadd
cld
jl
push
jae
aad
xor
jmp
cmp
add
inc
pushf
dec
cmp
enter
mov
mov
mov
adc
push
xchg
leave
cmps
add
pop
test
mov
aam
in
shl
jne
add
and
inc
out
or
xchg
xchg
add
es
jne
aam
imul
or
fiadd
aad
test
sbb
cmp
or
dec
sbb
mov
jp
scas
adc
cs
mov
mov
or
add
push
add
dec
jnp
or
dec
loopne
fmul
inc
popa
adc
jmp
sbb
push
and
cmp
dec
adc
jmp
inc
sbb
mov
addr16
sar
mov
and
mov
stos
pop
sub
add
adc
adc
add
and
xchg
mov
jbe
pop
pop
cmp
jnp
xchg
fmul
movs
je
xor
dec
das
xchg
shr
in
jecxz
aaa
jne
xor
ret
push
mov
jmp
adc
sti
int3
jb
pop
outs
dec
js
sub
jb
sub
ss
(bad)
or
jg
scas
add
lods
push
nop
xchg
xor
jmp
adc
sub
pop
hlt
movs
inc
jge
pop
and
sbb
int3
scas
sub
fcomp
push
ja
mov
sbb
push
fs
aaa
xchg
sbb
push
cld
aad
arpl
fdivr
jl
sbb
sar
loopne
rol
push
xchg
push
nop
push
sub
mov
xor
loop
test
hlt
jae
push
sub
cmp
ss
fld
push
aas
test
sub
sti
inc
push
rcl
mov
jle
das
hlt
hlt
push
adc
cmp
scas
mov
jmp
std
ret
mov
pop
cli
jb
lods
out
adc
aaa
cmp
jo
mov
adc
dec
lods
ret
sub
sub
add
ins
cld
jp
dec
dec
sub
xchg
inc
loope
mov
fistp
xor
xor
in
int
add
sbb
mov
adc
fmul
hlt
bound
(bad)
jno
jne
fidivr
mov
aas
pop
mov
out
inc
div
add
out
call
xor
sbb
icebp
jge
cmp
je
adc
push
and
adc
nop
dec
ret
movs
dec
and
xchg
jge
fisub
jle
repz
rcl
cwde
jmp
sbb
test
sub
dec
mov
xchg
adc
or
call
shr
fmul
add
test
rcl
add
into
jne
or
xchg
add
sbb
aam
dec
lea
lahf
inc
scas
inc
movs
inc
pop
fcomp
adc
add
push
and
mov
inc
shl
xlat
inc
mov
xor
xchg
ins
inc
(bad)
aad
xchg
dec
jae
and
sbb
add
push
jmp
mov
dec
rol
cmp
ret
sub
push
hlt
or
pop
pop
cld
call
rcr
inc
pusha
jno
popa
push
mov
mov
cmp
jle
cs
addr16
inc
cmp
test
sub
and
and
imul
ror
shl
sbb
jmp
les
dec
cmp
sbb
shl
xchg
(bad)
test
cmc
add
pop
dec
fcomp
fiadd
dec
add
fmul
xchg
sbb
mov
cmp
push
into
cmp
clc
dec
mov
leave
dec
sbb
cmps
pop
and
jo
lock
xchg
data16
movs
aaa
jmp
xor
mov
inc
mov
clc
pop
add
repz
fwait
xor
inc
dec
rcr
sbb
mov
cdq
(bad)
fchs
mov
jle
lods
or
mov
call
sbb
push
daa
xchg
cmp
jo
lds
pop
add
mov
xchg
or
sub
add
dec
cs
xchg
pushf
xlat
call
dec
addr16
push
sub
lock
int3
call
leave
loopne
or
nop
or
jle
inc
jne
mov
xor
(bad)
mov
fdiv
push
add
(bad)
adc
scas
fisttp
mov
fcmovbe
adc
adc
pop
hlt
cmps
pusha
pop
pop
pop
fmul
hlt
jle
jmp
add
mov
rep
dec
cmp
inc
mul
jb
mov
jg
arpl
jle
xor
jp
xchg
daa
inc
sti
lea
ss
rcr
pop
scas
mov
outs
jmp
ret
lock
sbb
enter
test
add
dec
lahf
mov
push
xchg
add
push
hlt
inc
cmps
ret
ror
into
jl
pop
nop
mov
inc
fmul
nop
or
int3
inc
jmp
xchg
fs
mov
fistp
stos
inc
fcom
push
mov
cs
lock
sbb
ds
or
movs
icebp
lock
bound
scas
inc
leave
fmul
adc
retf
out
sub
shl
jnp
sub
js
in
jne
cdq
fisubr
jecxz
mov
das
push
cmovne
sbb
pop
xchg
jmp
xchg
pop
int
jl
cmp
jae
sub
gs
or
sub
jne
lock
dec
fdivr
or
fidiv
inc
push
mov
jb
aas
loopne
add
jb
cmp
and
fcomp
adc
xchg
je
call
fnstenv
inc
jle
dec
inc
in
push
jo
popa
fst
xchg
cld
ret
sbb
jnp
fwait
pusha
aas
loopne
aas
test
lea
rcr
mov
stc
das
add
das
cmp
call
pop
sub
xor
inc
cmp
adc
ror
movs
mov
(bad)
pop
sub
fidiv
or
das
ror
stc
lods
pop
add
ja
pop
adc
sbb
addr16
loopne
sbb
js
xchg
ins
or
push
(bad)
loope
inc
cmc
sub
add
cmp
add
(bad)
ds
rol
dec
add
aaa
sbb
jmp
daa
push
movs
inc
mov
out
in
stc
cmp
int3
je
push
lock
stos
mov
fiadd
xchg
sbb
dec
dec
xor
push
sub
mov
das
ret
cdq
loop
or
inc
add
cmp
push
outs
and
inc
rcl
inc
jmp
les
inc
or
jle
or
or
in
pop
enter
not
and
(bad)
add
sbb
cmp
fs
push
js
mov
xor
add
adc
adc
and
leave
dec
pop
and
pop
xor
fdivr
in
xchg
sbb
movs
pop
pop
push
mov
in
cmp
add
cmp
xor
in
sti
mov
in
fwait
push
lock
xor
clc
in
jnp
xor
jbe
sbb
ror
iret
mov
ins
into
out
pop
jp
jno
add
xchg
sbb
pop
xchg
int
or
or
mov
jmp
ja
pop
imul
jp
mov
loope
or
dec
fxam
adc
clc
sub
mov
push
nop
pop
hlt
out
iret
je
adc
call
inc
or
jne
or
sar
cmp
jb
cmps
in
add
les
aas
inc
xor
int
push
in
jl
xchg
add
pop
mov
es
mov
(bad)
cmp
push
lea
sub
movs
mov
pop
mov
lea
nop
in
sbb
mov
pop
call
mov
dec
mov
jae
sbb
push
loopne
jo
in
jno
or
pop
loopne
jo
sub
out
fsub
jmp
pop
(bad)
mov
and
or
sub
test
pop
scas
jb
adc
and
push
mov
adc
scas
and
rol
les
jne
xor
mov
pop
in
adc
cmp
pushf
pop
jge
sub
mov
pop
xchg
mov
add
sub
shr
adc
push
and
sbb
jbe
ret
repnz
leave
xchg
das
adc
mov
rcr
xor
mov
movs
data16
add
je
icebp
jo
push
movs
pop
add
dec
sbb
fisttp
stc
and
and
inc
sar
nop
xchg
cmps
add
call
xor
stc
mov
cli
xor
ret
(bad)
sub
cmp
mov
cmp
pop
sub
icebp
cld
loopne
or
dec
and
(bad)
in
mov
pusha
push
adc
add
dec
dec
ins
xchg
ins
jne
cmp
sub
pop
imul
dec
hlt
adc
ret
sbb
jae
pop
dec
pop
add
pushf
push
adc
fsub
xchg
or
dec
imul
sub
sub
popa
inc
fmul
push
loopne
daa
push
mov
aaa
ds
out
pop
jne
int3
push
mov
inc
or
dec
cli
sub
movs
shl
dec
and
xor
dec
fadd
dec
aam
int3
cmp
add
adc
fisubr
cmc
xchg
xor
add
dec
imul
(bad)
mov
cmps
shl
scas
jnp
jp
retf
pop
cmp
loopne
loopne
fst
fadd
or
sbb
cmc
(bad)
mov
jmp
cdq
sub
pop
clc
pop
xchg
jo
mov
add
rcr
adc
add
xor
or
sub
sbb
(bad)
imul
cmps
data16
je
inc
cmp
call
aaa
cmp
lods
and
out
adc
and
sub
push
or
adc
adc
aaa
and
test
add
(bad)
inc
pop
outs
jo
daa
mov
dec
scas
test
inc
test
sub
xor
cmps
sub
es
sahf
cmps
test
test
inc
xchg
pushf
pushf
inc
push
aaa
or
or
inc
(bad)
clc
imul
or
push
lock
jmp
cmp
mov
or
jp
cmp
test
inc
nop
adc
es
push
mov
repz
jo
sub
pushf
sbb
sbb
sub
sub
adc
sub
test
xor
pop
mov
sti
jae
repnz
cmp
mov
sbb
mov
xchg
ficomp
adc
je
rcr
mov
loope
fwait
pop
cmps
mov
xor
lock
lods
adc
stos
add
xor
push
dec
pop
adc
mov
jns
in
xchg
add
xchg
mov
pop
or
xor
daa
mov
dec
aas
test
ret
cli
stos
lock
inc
inc
xchg
and
sbb
mov
mov
adc
es
mov
aaa
push
movs
cs
sub
sub
sbb
or
pop
sbb
sub
popf
xor
jo
jl
(bad)
mov
pushf
push
xchg
add
sub
jno
and
in
inc
dec
sti
lea
daa
jns
xor
and
jbe
sti
or
outs
ret
or
je
pop
outs
push
sub
sub
push
cmp
or
pop
test
sub
jo
jge
jg
sbb
test
popf
int
xchg
and
pop
retf
dec
jg
es
js
retf
jae
enter
sub
sub
sub
shl
inc
push
pop
jg
sbb
inc
fs
dec
sti
mov
sbb
push
imul
sub
and
cdq
push
inc
sub
hlt
add
movs
jb
push
xchg
sbb
mov
scas
ret
pop
leave
xor
imul
je
dec
pop
jmp
pop
in
in
inc
mov
sbb
or
xchg
sub
je
push
(bad)
fnstenv
das
or
adc
pop
popa
add
call
and
leave
inc
xor
and
ret
mov
sbb
cmp
sub
call
mov
push
jmp
cmp
into
jnp
sar
sub
int
cmp
sub
add
mov
(bad)
cmc
xchg
cmp
push
jecxz
and
loopne
jno
lock
and
inc
xchg
push
push
daa
loopne
xchg
sub
clc
jb
sub
xor
push
add
les
sbb
push
or
les
enter
add
in
or
(bad)
mov
repnz
movs
and
xor
mov
scas
(bad)
sub
push
push
fdiv
ret
in
das
xchg
cs
and
cmp
jb
and
sub
pushf
in
enter
sub
or
adc
cmp
sub
dec
jae
sub
rol
sbb
jl
(bad)
mov
addr16
sbb
fmul
lea
add
aam
add
pop
xchg
dec
aam
dec
mov
iret
fcomp
inc
cmp
xchg
cmc
xchg
cmps
sti
ins
ins
test
or
or
xor
jbe
(bad)
es
into
ja
inc
pushw
xchg
rcl
add
add
cs
ret
cmp
and
and
cmps
loopne
hlt
add
rol
aam
aam
lock
fadd
pop
inc
jo
ds
or
loope
push
cdq
and
push
mov
add
cmps
nop
add
push
inc
and
jb
pop
push
adc
add
xchg
add
in
add
dec
enter
rol
sub
and
and
xchg
pop
ds
imul
stos
hlt
mov
test
and
and
add
mov
pop
xchg
mov
jbe
scas
and
add
mov
mov
jae
jae
push
pop
lods
lods
pushf
inc
and
push
xor
test
pusha
test
cmp
and
jg
lds
and
sub
jno
pop
mov
loope
retf
xchg
call
add
sbb
cdq
inc
(bad)
movs
xlat
add
stos
add
fs
movs
fcom
mov
popf
jo
arpl
xor
and
fcomp
pop
ret
and
add
xor
add
or
adc
aam
mov
add
fcomp
fild
mov
loopne
fcomp
movs
sub
fcomp
fmul
add
pop
cmp
addr16
cmc
mov
add
lahf
ret
pop
enter
add
push
pop
sbb
ds
push
jmp
add
sbb
mov
push
fdiv
dec
inc
pop
pop
jl
push
cmp
dec
or
add
add
add
add
ficomp
or
aam
push
out
aam
and
pop
pusha
arpl
ins
add
and
sub
mov
mov
je
dec
fwait
mov
jge
cs
push
inc
sbb
popa
xadd
add
repnz
pop
push
ret
xchg
outs
add
call
jno
jmp
or
push
daa
cdq
in
jmp
push
xor
xor
jnp
mov
xchg
lea
je
sub
lea
jbe
retf
xchg
pop
cs
xchg
sbb
xor
pop
jmp
ins
cmp
sub
das
mov
mov
lock
sbb
pop
and
jne
push
dec
pop
inc
stc
popa
in
ins
adc
sub
push
repnz
and
dec
dec
enter
in
push
mov
scas
lods
mov
lea
lock
dec
push
stos
xor
shr
mov
outs
and
sbb
inc
pop
enter
enter
retf
xchg
outs
clc
add
xchg
cmp
add
cmp
fucomp
push
sbb
lods
scas
xor
(bad)
popf
add
rol
mov
sbb
jb
push
mul
lea
mov
and
pop
mov
mov
test
sbb
pop
loopne
je
mov
jecxz
test
xchg
hlt
sbb
mov
cmps
inc
clc
push
test
mov
std
and
pushf
ret
jmp
dec
je
cmp
(bad)
jne
dec
xor
fcom
mov
or
jno
xor
mov
and
add
sar
inc
cs
sbb
je
sub
add
jne
addr16
jmp
or
jmp
leave
or
add
inc
jmp
movs
inc
shl
movzx
add
adc
inc
mov
mov
ja
test
lds
ret
push
leave
and
adc
and
ret
or
vaddsubps
jecxz
scas
fs
add
test
and
sbb
hlt
add
dec
jl
and
add
xchg
adc
or
sbb
cmp
das
and
cld
add
add
enter
fwait
sti
bnd
and
add
and
in
and
or
push
adc
sbb
add
or
je
add
adc
scas
sub
or
inc
jb
adc
shl
add
adc
movs
jbe
xchg
int
mov
or
inc
sar
and
or
lea
pop
and
popa
js
sbb
jbe
in
clc
add
sbb
out
lea
push
fld
dec
cs
add
jle
jno
add
add
add
add
js
ret
scas
push
dec
mov
dec
inc
pusha
ret
or
repnz
push
repnz
add
add
add
ins
sub
mov
mov
mov
outs
lea
inc
cmps
jae
cmp
ret
cli
mov
jae
mov
je
jmp
cmp
aaa
fdiv
gs
sub
or
or
out
mov
or
arpl
or
dec
psadbw
jl
stc
xchg
add
or
xor
aas
push
movs
jg
sbb
inc
mov
and
lea
jne
sbb
adc
push
ins
(bad)
lock
mov
xchg
adc
cmp
adc
ds
fnstsw
retf
inc
inc
add
repnz
cmp
(bad)
sub
adc
cmp
je
je
jmp
shl
mov
inc
ds
or
je
jg
cmp
inc
jo
sbb
xchg
hlt
cmp
add
sub
scas
jl
mov
enter
and
mov
lahf
xor
cmps
pop
or
jg
jg
pcmpeqb
sbb
jge
adc
pop
les
jb
pusha
cdq
mov
push
inc
or
ja
in
call
inc
xor
xor
add
test
enter
daa
mov
or
cld
add
in
fild
jb
ret
push
enter
add
xchg
es
cmp
jo
mov
xchg
jmp
cmp
enter
je
jns
push
adc
or
dec
and
mov
sub
push
mov
mov
jp
add
cld
xor
sbb
push
(bad)
shr
fld
sbb
or
pop
(bad)
(bad)
mov
push
mov
xchg
push
and
mov
or
shl
popa
test
push
and
pop
ror
inc
(bad)
sbb
fwait
in
das
movs
fcom
inc
bound
xchg
(bad)
mov
mov
or
inc
test
gs
aam
stos
add
mov
jb
inc
xor
cli
jo
lds
pusha
cmp
jo
push
or
or
pop
jo
jo
add
mov
sti
sbb
pop
sbb
mov
push
jne
test
enter
cmp
adc
enter
mov
pusha
mov
sbb
ror
pop
test
cmp
imul
or
test
sbb
(bad)
outs
mov
mov
inc
mov
xor
push
pop
pop
loopne
add
adc
mov
mov
sti
xor
stos
sbb
fwait
popa
add
or
or
nop
loopne
call
cmp
in
or
push
adc
repnz
aaa
test
add
push
inc
push
mov
and
jmp
add
adc
and
pop
xchg
and
xchg
es
ins
shr
xor
sub
pop
mov
and
xchg
sbb
mov
inc
add
jmp
xchg
addr16
test
loopne
xlat
dec
test
clc
add
cmp
mov
or
adc
fiadd
(bad)
mov
icebp
fadd
jno
adc
mov
push
test
jbe
xlat
push
and
jns
mov
and
fsubr
mov
inc
fcom
pop
pop
movs
add
les
and
test
push
int
or
or
cwde
ror
into
xchg
sub
inc
jno
add
jo
cmps
adc
xchg
mov
dec
jb
leave
dec
pop
jmp
xchg
movs
push
push
dec
cmps
sahf
push
lock
cmp
pop
(bad)
bound
add
and
test
movs
push
sbb
inc
inc
pop
sub
jg
sub
sbb
sub
sbb
(bad)
sar
movs
hlt
in
leave
sbb
push
dec
inc
mov
push
mov
push
or
rcr
ret
inc
push
cmp
and
push
push
ja
retf
bound
cmp
xchg
add
jb
out
rcr
sbb
cmp
sbb
rol
push
add
jmp
xor
movlps
mov
loope
dec
or
ret
push
mov
ins
or
(bad)
xchg
push
jne
jbe
pop
fdiv
adc
sbb
ins
push
cmps
or
ror
inc
call
loopne
pop
mov
cmp
or
lock
inc
xor
mov
push
(bad)
mov
outs
add
dec
dec
out
test
mov
sbb
add
shl
mov
adc
fsubr
ret
pop
dec
(bad)
retf
add
fdiv
nop
test
ins
mov
adc
cmp
mov
mov
adc
and
pop
cmps
fadd
jb
add
lock
adc
repz
std
ret
dec
mov
repnz
mov
leave
dec
pop
enter
pop
add
lock
cld
sbb
adc
xchg
or
xor
aam
nop
das
leave
cmp
or
mov
add
xchg
add
mov
jmp
ud1
mov
mov
mov
jno
psubq
out
sub
cmp
sub
test
jns
ja
icebp
xchg
mov
sbb
pusha
cmp
iret
xor
pop
stc
jno
adc
retf
add
mov
jo
and
sub
add
xor
xor
movs
dec
in
das
stc
into
add
add
push
xchg
add
push
test
add
jne
outs
fcomp
and
add
and
inc
jo
retf
dec
push
sub
cmp
push
sbb
dec
arpl
add
(bad)
and
enter
clc
push
enter
test
ds
stos
cmp
(bad)
mul
xchg
into
inc
add
pop
inc
aad
add
sub
mov
push
sub
sub
xchg
shl
add
fwait
inc
sub
and
dec
adc
cmp
jmp
mov
xor
xchg
arpl
icebp
popf
add
sbb
xor
or
add
and
mov
cmp
jb
imul
scas
inc
add
add
sbb
jns
hlt
push
stc
cmps
sbb
pop
pop
push
mov
mov
dec
or
sub
jb
fidiv
mov
in
mov
and
call
(bad)
pop
jmp
inc
js
mov
pop
hlt
pop
inc
cwde
(bad)
adc
add
jmp
fisub
mov
shl
jae
loope
sub
test
out
stc
jmp
aad
stc
mov
stc
mov
add
retf
adc
cmps
pusha
je
mov
shl
jae
shl
push
(bad)
retf
jns
test
clc
ja
and
(bad)
sbb
inc
pop
sbb
cmp
mov
repnz
sbb
into
and
push
adc
push
jne
stc
inc
lock
xor
dec
(bad)
and
in
xor
jno
lahf
mov
adc
pushf
mov
adc
lea
jl
lock
add
dec
xchg
ins
je
cmp
out
xchg
std
test
std
idiv
imul
fsub
xor
jnp
aam
inc
dec
mov
in
aam
xor
add
je
add
ins
push
nop
fdivr
lea
pop
js
arpl
idiv
xor
xor
inc
test
movs
push
or
mov
enter
div
sahf
adc
in
out
push
jno
and
jnp
(bad)
jno
push
les
movs
mov
and
sbb
outs
add
jno
xchg
jg
jnp
cld
pop
imul
das
das
and
or
add
adc
repz
cmp
in
in
fdivr
test
cmc
xchg
inc
repnz
in
dec
jb
cmc
xchg
sti
test
mov
xchg
call
mov
mov
sti
sub
jge
xchg
adc
and
cmp
push
push
fwait
add
hlt
cmp
hlt
test
dec
jae
dec
mov
xor
or
add
jl
jnp
add
cld
retf
shl
cli
neg
ror
cmp
push
and
shl
(bad)
inc
or
jmp
pusha
pop
push
adc
push
in
je
clc
adc
and
and
add
mov
mov
out
repnz
das
mov
repz
push
pop
fmul
push
(bad)
and
xchg
sbb
pop
popaw
or
idiv
div
test
push
neg
mov
or
fidivr
mov
pop
sub
push
repnz
jp
mov
bnd
fimul
lods
repnz
xchg
add
gs
xchg
ss
mov
push
aad
xchg
repnz
sahf
mov
mov
inc
ins
mov
test
sbb
fs
adc
test
test
cmp
cmp
shl
xchg
cld
loopne
das
pop
test
jmp
icebp
push
imul
stos
sbb
in
sub
mov
inc
cmp
push
xlat
add
pop
mov
adc
pop
icebp
mov
out
test
mov
pop
cmps
jecxz
jmp
arpl
lock
mov
mov
sbb
pushf
out
mov
or
test
test
fdivr
sub
fbld
push
xor
mov
out
in
or
xchg
fwait
sub
jne
mov
mov
inc
jmp
mov
and
fwait
aaa
out
inc
xor
fld
fcomp
fadd
(bad)
into
mov
mov
rcr
js
lea
xor
aaa
in
adc
and
cmc
mov
jo
xor
mov
adc
jo
mov
(bad)
rol
push
mov
inc
cmp
xor
sbb
out
pop
mov
nop
jno
loopne
xchg
add
sub
adc
mov
cmp
repnz
leave
into
adc
xchg
in
inc
jne
mov
adc
je
pop
adc
mov
dec
ja
add
test
jmp
cmp
sahf
pop
add
std
ja
jnp
adc
and
and
mov
clc
and
inc
fmul
add
fwait
mov
and
retf
ins
repz
mov
sub
clc
fnstenv
inc
out
cwde
ret
push
sbb
dec
cmps
cmp
fcmovnb
fidiv
call
mov
ret
inc
daa
push
fwait
mov
fsubr
or
push
inc
push
movs
push
jae
mov
ss
cmp
pop
mov
test
sahf
int
pop
clc
push
pop
into
pop
xchg
xlat
push
jg
repz
inc
pop
arpl
icebp
gs
mov
cmp
ret
popw
xchg
pop
es
cmp
mov
pusha
mov
iret
mov
arpl
shr
xchg
in
addr16
ss
push
test
fnstcw
push
js
(bad)
mov
cmp
sub
inc
ss
int
shl
dec
jb
jae
mov
outs
push
jne
push
jns
adc
push
jle
jmp
and
mov
js
jp
jnp
enter
jnp
push
jl
jge
rep
sahf
out
cmp
(bad)
sub
rol
out
ins
push
and
xchg
out
sahf
xchg
lock
mov
ins
xchg
jnp
jbe
pop
xchg
xchg
sti
xor
mov
push
cwde
pop
cdq
xchg
call
ficomp
or
out
out
movs
ret
add
fwait
pop
fwait
test
jl
fistp
cmp
movs
inc
popa
push
jl
fnstcw
xchg
scas
lds
ins
fisub
mov
inc
shl
cwde
push
add
sbb
loopne
sti
mov
pop
push
adc
test
push
jo
ret
nop
pop
mov
mov
sahf
mov
loopne
arpl
icebp
adc
sub
popa
sub
call
sbb
nop
and
inc
xor
xlat
or
or
jno
dec
clc
sub
in
or
jne
cld
(bad)
jg
sub
sti
nop
hlt
(bad)
out
jmp
inc
mov
sti
xchg
cmp
dec
add
mov
lock
dec
or
mov
jnp
push
cs
enter
js
addr16
pop
sbb
ficomp
mov
rcr
jmp
shr
push
lea
in
add
cmp
jns
cmp
cmp
fstp
push
inc
dec
js
mov
and
sub
adc
push
adc
mov
shr
pop
xchg
jne
mov
xchg
popf
and
js
pop
xor
sbb
inc
pop
add
frstor
rol
or
add
dec
mov
ds
vpandn
sar
pop
fwait
lea
xor
leave
enter
daa
jg
and
jbe
stos
lea
lea
popa
xor
and
lock
je
popa
bound
iret
inc
loopne
int
or
aas
shr
push
sbb
cmps
cmp
cs
or
mov
mov
sbb
adc
into
test
shl
add
rol
sahf
sbb
fmul
je
inc
mov
sub
and
and
retf
sbb
dec
addr16
call
xchg
mov
sub
xchg
add
xchg
lea
push
push
ja
loop
and
outs
nop
mov
add
loopne
ja
mov
or
test
in
pop
loopne
inc
cmps
into
mov
ds
test
inc
add
lahf
sbb
push
jo
adc
shr
js
(bad)
arpl
jo
es
lock
push
jne
dec
dec
pop
jb
sub
adc
sar
lods
or
push
es
cmp
jns
mov
or
push
push
int3
xchg
add
adc
inc
and
mov
fbstp
cmp
mov
popa
pop
adc
adc
mov
loope
add
push
add
sbb
xchg
mov
fnstsw
fimul
push
and
jge
push
mov
mov
movs
mov
outs
mov
clc
dec
fcom
(bad)
jb
pop
lock
mov
push
jo
rcr
sbb
add
imul
es
inc
ret
addr16
adc
push
sub
dec
sub
test
jle
loopne
pop
rcl
rcr
sbb
iret
fst
or
test
enter
cmp
sbb
xchg
repz
outs
mov
pop
enter
pop
jmp
add
push
fcomp
fcom
mov
in
(bad)
or
cmp
push
icebp
jmp
cmp
repnz
out
mov
(bad)
add
adc
inc
cld
dec
ins
push
push
ret
ficom
jbe
mov
nop
add
inc
fsub
cld
mov
jo
lea
jne
sub
dec
outs
inc
or
push
xchg
cmp
sub
cli
jl
scas
sbb
out
push
and
scas
add
adc
rcr
push
ds
pusha
daa
mov
es
mov
adc
enter
and
jo
(bad)
ins
pop
dec
test
sub
mov
sbb
popf
mov
push
pusha
lahf
cli
(bad)
inc
mov
std
leave
xchg
xchg
cmp
(bad)
mov
sub
call
fwait
dec
adc
fwait
cmp
jle
xlat
add
rol
cli
pushf
sar
(bad)
cmp
mov
add
shl
ins
idiv
lods
in
call
rcr
sub
xchg
xchg
mov
pusha
fdivr
jne
jbe
dec
pushf
ss
ror
or
jge
imul
and
aad
adc
sub
sbb
cmp
test
jle
cli
jo
sbb
aam
jb
fnstenv
inc
ss
jp
or
ja
mov
or
mov
cmps
nop
imul
pop
loopne
and
es
xchg
cli
shl
sbb
inc
call
test
pop
or
pop
add
es
test
cmp
or
push
cmp
xchg
cmc
xor
sbb
movs
retf
mov
jbe
or
lea
or
and
lea
push
dec
out
(bad)
retf
push
mov
pop
(bad)
lods
test
div
add
mov
sahf
retf
mov
popf
sti
(bad)
and
out
std
in
add
shl
popa
xchg
or
add
jmp
mov
ins
cmp
or
and
push
xor
stc
adc
sbb
pop
jnp
pop
add
add
pop
or
sub
ss
aas
or
ucomiss
(bad)
inc
sbb
mov
add
or
and
jg
dec
sbb
scas
sub
(bad)
adc
mov
mov
mov
or
mov
clc
or
mov
mov
cmp
mov
jo
pop
add
pushf
pop
sbb
mov
fimul
mov
scas
mul
(bad)
in
into
push
fbld
(bad)
clc
bound
and
ins
outs
arpl
imul
add
(bad)
test
add
add
jb
js
je
jb
lods
jge
push
gs
add
dec
outs
sbb
je
jp
leave
outs
in
cmp
data16
popa
jle
dec
push
(bad)
iret
push
xor
add
ins
outs
fs
mov
repz
shl
fucomi
bound
cmp
aas
pop
jbe
outs
add
aas
rdpmc
add
punpcklwd
wrmsr
inc
and
sar
pop
mov
add
loope
sub
mov
jo
add
mov
jo
idiv
cmp
outs
ja
and
xor
dec
shr
jl
icebp
or
and
and
fimul
adc
push
or
je
or
jle
mov
dec
stc
jbe
or
jp
push
imul
jge
in
add
add
jne
dec
loop
ret
jbe
(bad)
push
gs
push
fidiv
popf
push
aaa
fs
inc
aas
cmovbe
jne
out
dec
outs
adc
pop
jb
outs
mov
jbe
daa
dec
popa
mov
bound
popa
call
out
ins
sti
fild
push
loop
dec
arpl
dec
outs
jbe
inc
arpl
out
jne
jne
jns
jb
add
push
mov
mov
aas
mov
test
gs
cmps
(bad)
pop
fdivr
mov
push
das
fs
jns
add
dec
inc
call
sub
dec
cmp
cmp
mov
aaa
ins
sti
fdivp
mov
gs
or
and
jb
pop
push
je
mov
ficomp
pop
(bad)
ins
in
mov
jae
lahf
inc
daa
mov
imul
jb
iret
pop
fild
daa
dec
outs
push
call
popa
dec
jb
jns
cli
(bad)
xchg
jne
ins
aas
push
cmps
neg
cmp
jbe
jbe
mov
sahf
inc
arpl
jb
fcomp
(bad)
and
pop
push
ins
jnp
out
out
pop
idiv
out
push
jae
pop
push
gs
push
jb
pop
das
mov
add
inc
daa
mov
cld
dec
mov
add
add
fnsave
(bad)
add
aas
add
iret
out
jbe
and
dec
add
add
loopne
sub
outs
mov
add
rol
sub
xchg
cmps
add
adc
or
fnstenv
cmps
xor
mov
sbb
or
jb
imul
push
push
push
push
jbe
(bad)
call
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jno
(bad)
aaa
test
js
jp
jl
jle
out
jle
sbb
ret
add
and
ins
jae
in
enter
je
cmova
push
popa
ins
jne
push
out
push
and
inc
jb
arpl
sub
and
js
jo
mov
push
ins
popa
jo
outs
push
and
out
cs
je
arpl
mov
pop
gs
xor
push
imul
mov
push
popa
rol
das
sub
bound
xchg
sar
add
adc
out
std
rol
ret
push
fisub
jne
data16
dec
dec
imul
sub
push
gs
emms
fsubr
js
adc
cld
jbe
fadd
ss
outs
addr16
cmp
lods
data16
mov
xor
(bad)
jns
adc
adc
imul
mov
cdq
retf
inc
imul
inc
gs
inc
outs
mov
jae
adc
ret
test
pop
outs
ins
jo
mov
mov
outs
addr16
out
test
retf
pop
mov
out
pop
repz
outs
aas
(bad)
(bad)
jo
and
push
dec
popa
inc
loop
std
fcomp
dec
jae
imul
rcr
sbb
mov
sub
xor
cmp
stos
cmps
xchg
je
adc
sbb
popa
arpl
scas
xlat
push
das
jmp
jae
ins
push
test
imul
add
pop
inc
pop
imul
fstp
scas
jp
mov
mov
add
push
stos
popa
and
jb
arpl
jb
(bad)
ss
mov
push
and
rol
add
or
mov
cmps
sbb
loope
shr
dec
imul
add
mov
mov
and
jo
cmp
jns
xchg
ins
xlat
je
push
jo
lds
bound
jae
aas
(bad)
gs
adc
mov
xor
push
xor
pusha
jnp
sub
scas
sbb
ret
in
cmp
xor
ja
scas
xchg
mov
pmaxsw
into
(bad)
arpl
outs
xor
xor
jnp
sbb
fs
imul
pop
ret
push
out
jg
lods
bound
aaa
fist
sbb
fistp
out
fwait
mov
push
cmps
xchg
mov
es
xchg
pop
xchg
das
jl
push
inc
pop
lahf
scas
imul
out
xchg
and
sti
xchg
out
push
ffreep
shr
jbe
lahf
fs
daa
popa
pop
js
pop
imul
sahf
pop
push
sbb
add
out
jo
arpl
pop
xor
adc
xor
popa
pop
adc
je
sub
fwait
dec
fcmovbe
imul
fs
pop
ins
push
dec
je
xchg
addr16
push
or
stos
ret
sbb
and
mov
out
fbstp
sbb
jae
jae
cmp
inc
mov
jb
add
jb
shl
out
xor
sub
mov
dec
xor
shr
idiv
lock
scas
das
sub
mov
xor
lds
out
push
lea
inc
daa
sbb
jno
imul
mov
and
dec
test
sub
adc
inc
dec
adc
inc
dec
mov
add
push
xor
pop
in
cmp
inc
push
cmp
jbe
xor
outs
pop
ins
aas
and
out
fst
inc
or
ror
or
or
pop
adc
xchg
das
inc
mov
pop
sbb
repnz
sbb
sbb
mov
push
xchg
das
inc
mov
and
push
and
repnz
mov
fist
jns
jp
test
cld
or
test
push
xchg
xor
test
jo
imul
les
cdq
sbb
and
addr16
aam
in
push
and
push
sbb
rcr
jge
jp
xchg
cmp
sub
mov
fwait
imul
or
(bad)
cs
sar
add
lahf
xlat
rol
jae
aaa
push
mov
jnp
sub
and
in
rol
dec
adc
pop
test
or
cmp
pushf
mov
lea
leave
and
nop
and
xchg
xchg
cmc
cs
in
add
jg
push
or
sub
ins
ins
sub
jb
cmps
imul
dec
push
add
sti
push
push
push
add
add
add
loopne
mov
pop
pop
lods
aaa
xor
push
iret
mov
and
push
js
js
loopne
int3
mov
xor
sbb
pop
js
outs
ja
outs
addr16
xor
es
fwait
std
mov
outs
push
je
pop
popa
xor
in
fidivr
rdmsr
outs
mov
jb
jg
outs
push
fld
dec
add
punpcklwd
lock
data16
add
mov
lock
push
xor
jnp
data16
jns
push
xor
fisubr
ss
data16
xchg
fist
mov
add
sldt
add
int3
out
cmovo
push
add
shl
outs
scas
vmwrite
jbe
shl
or
fsubr
cmp
sbb
add
dec
into
inc
push
inc
fucomp
lods
jo
dec
into
pop
inc
and
jmp
mov
ins
jmp
fisttp
jmp
dec
inc
mov
pop
and
call
dec
into
dec
xchg
and
sbb
out
shr
mov
addr16
das
and
add
mov
out
ror
mov
mov
(bad)
rol
add
out
leave
verw
inc
dec
jb
push
cmp
sbb
add
in
imul
fmul
into
aas
xchg
in
pusha
pop
inc
or
dec
mov
jecxz
daa
mov
leave
loop
pop
mov
aas
cdq
sbb
cmp
mul
outs
loopne
add
jbe
jbe
mov
sahf
pop
ror
in
dec
dec
xor
mov
(bad)
or
iret
pop
inc
mov
leave
xchg
mov
sbb
pop
dec
xor
daa
adc
loopne
in
loopne
in
ss
loopne
mov
outs
daa
mov
je
fisttp
dec
inc
xor
das
adc
(bad)
fdivr
popa
hlt
std
xchg
div
fld
stc
push
cld
sahf
cmp
push
jp
and
adc
fs
aas
inc
xchg
xchg
bound
mov
(bad)
(bad)
ss
pop
xchg
dec
pop
mov
jo
cmp
cmp
pop
std
push
jmp
dec
lods
aas
or
retf
or
aas
in
das
xchg
xchg
pop
dec
(bad)
(bad)
(bad)
call
(bad)
lock
adc
push
clc
dec
push
aas
test
(bad)
push
pop
xor
add
and
inc
rcl
(bad)
mov
(bad)
stc
push
inc
call
jb
mov
and
xlat
mov
pop
(bad)
jg
aas
push
add
xor
(bad)
fadd
aas
dec
je
stos
mov
inc
outs
(bad)
stc
jmp
aas
mov
gs
mov
push
jbe
(bad)
fwait
and
push
(bad)
fcmovnb
dec
push
pusha
nop
fs
rol
push
lds
js
movs
pop
(bad)
aas
clc
jg
(bad)
std
out
pop
jmp
dec
enter
mov
rcr
push
mov
push
out
push
ror
sub
xor
retf
xchg
mov
clc
(bad)
sti
jmp
aas
in
loop
mov
adc
stc
dec
int
sub
(bad)
(bad)
aaa
mov
into
aas
repnz
jle
jecxz
mov
data16
add
stc
mov
push
ss
aas
add
neg
icebp
cmp
mov
into
adc
mov
cmp
push
ja
lods
mov
xchg
aas
ds
nop
movs
inc
sar
pop
aam
call
jne
push
xchg
lods
push
fistp
ds
cmc
xor
cmp
xchg
mov
mov
hlt
jecxz
rcl
dec
pop
pop
inc
test
aam
ins
cld
sti
dec
mov
sbb
shl
aam
movs
int3
push
int
in
(bad)
cmp
loop
sub
mov
cmp
add
aas
jg
jge
cmp
xchg
jle
(bad)
aas
les
and
mov
repz
jg
out
xchg
daa
loop
nop
jle
and
xor
jg
jno
fwait
(bad)
fistp
shl
scas
mov
mov
fdivr
jbe
retf
add
(bad)
out
cmp
call
sahf
rcr
fnstcw
addr16
mul
ds
dec
mov
(bad)
mov
or
xor
sti
fcmovnu
outs
lea
jne
dec
jle
mov
mov
nop
xor
pop
outs
jg
jg
ds
gs
fstp
pusha
pop
sahf
or
dec
js
jle
push
and
or
out
mov
outs
mov
inc
inc
xor
(bad)
out
outs
loop
pop
add
and
cdq
fnstsw
add
call
push
call
or
in
sub
loop
lock
aas
loope
mov
fistp
or
add
shl
sub
jo
fistp
jge
sahf
xor
fist
pop
mov
imul
cs
addr16
cmp
jns
test
lock
out
pop
daa
sub
and
into
aaa
(bad)
jg
js
mov
fmulp
push
push
shl
movs
push
adc
push
pop
inc
xor
or
loope
pop
dec
mov
(bad)
inc
cld
int
jg
sar
fcmove
pop
dec
je
arpl
pop
push
and
fistp
push
pop
add
mov
repz
fcmovnu
jno
add
adc
enter
aas
jp
sub
test
sti
pop
mov
adc
xor
sahf
xor
jnp
(bad)
fidivr
cmc
add
mov
adc
fist
push
xor
mov
xlat
outs
push
and
push
cmp
mov
aas
out
ds
and
out
jmp
(bad)
iret
and
outs
xor
enter
jmp
jg
cmp
inc
lahf
div
xor
inc
out
aaa
jg
sbb
lahf
hlt
and
cdq
retf
(bad)
mov
pop
sub
dec
mov
cmc
push
cmps
jb
mov
rcl
xchg
mov
aas
sahf
ja
cdq
imul
out
xor
sti
repz
fistp
pop
lahf
not
mov
ins
repz
pusha
sbb
int
jg
jns
call
mov
sub
adc
inc
in
popf
sar
push
jg
jo
clc
adc
sbb
repz
sbb
sar
pop
xchg
aaa
xor
in
(bad)
dec
xchg
mov
or
jle
ins
inc
(bad)
shl
cmc
(bad)
jl
dec
shl
xor
push
and
aas
cmp
sti
sar
or
lods
lods
sub
push
mov
mov
in
mov
sbb
enter
sahf
mov
iret
mov
jbe
cmp
sar
sar
repz
outs
ss
ins
(bad)
push
lods
int
or
(bad)
stc
and
ds
cmp
xchg
in
cmc
add
pop
(bad)
out
(bad)
cld
retf
mov
nop
test
cmp
es
pop
jmp
jg
(bad)
mov
retf
(bad)
bound
inc
loop
jge
mov
arpl
(bad)
mov
lods
test
repnz
and
movs
or
inc
push
jg
mov
out
(bad)
push
ins
cmp
ds
mov
sti
jmp
jmp
(bad)
mov
and
lods
arpl
mov
aaa
or
jecxz
(bad)
jg
inc
hlt
sahf
jo
xchg
mov
mov
pop
(bad)
mov
push
inc
push
loopne
push
stc
ret
ss
ret
cmp
cld
int
pusha
je
repz
jecxz
xor
cmp
(bad)
mov
es
(bad)
mov
in
sar
fimul
cld
mov
push
pop
or
xor
dec
dec
mov
cld
mov
pop
in
js
mov
sbb
out
lock
cli
mov
mov
stos
retf
adc
mov
mov
daa
jg
sar
aam
(bad)
stos
idiv
cmp
jle
mov
ds
add
stos
xor
jmp
pop
adc
inc
jmp
out
(bad)
aas
sahf
mov
mov
dec
sbb
pop
iret
jne
mov
not
std
sbb
fdivr
test
mov
int3
scas
jmp
cld
(bad)
stc
dec
mov
cmp
cmp
mov
xlat
jl
data16
mov
sar
cmps
sahf
push
scas
repnz
xor
push
and
jg
call
ins
lds
movs
dec
and
or
sti
jmp
out
xor
repnz
mov
inc
push
jp
jge
xchg
mov
icebp
add
aas
(bad)
call
or
aas
jecxz
mov
lock
pop
sub
mov
xor
clc
out
dec
sub
js
les
ja
int
mov
mov
inc
(bad)
out
paddd
jb
std
cld
sti
cli
jb
jb
stc
clc
div
jb
jb
cmc
hlt
repz
jb
icebp
lock
out
jb
jb
in
in
jmp
jb
jb
jmp
jb
jb
in
loop
jb
jb
loopne
fidiv
jb
fstp
fcmovnu
jb
jb
(bad)
xlat
(bad)
cmp
jb
aam
adc
cmp
cmp
ror
into
cmp
cmp
int
retf
retf
cmp
leave
enter
cmp
cmp
(bad)
pop
push
cmp
add
lock
leave
leave
pop
dec
inc
ds
leave
leave
leave
leave
push
push
push
or
or
leave
leave
leave
or
or
leave
leave
leave
leave
or
or
leave
leave
leave
leave
or
or
leave
leave
leave
leave
or
or
leave
leave
leave
leave
or
or
leave
leave
leave
leave
pop
pop
pop
push
leave
leave
leave
leave
push
push
push
add
add
leave
leave
leave
add
add
leave
leave
leave
leave
add
add
leave
leave
leave
leave
add
add
leave
leave
leave
leave
add
add
inc
stos
test
add
cwde
(bad)
aas
loop
cmp
aas
push
popa
xor
or
and
jmp
xor
sbb
push
or
xchg
(bad)
jg
aas
aaa
cmp
mov
mov
xchg
inc
retf
(bad)
inc
dec
dec
aas
(bad)
sub
xor
leave
cwde
push
aas
sub
lods
sub
jp
out
call
jl
aas
mov
fisttp
rcl
push
aas
in
adc
pop
stc
push
xchg
mov
inc
sahf
jo
mov
aam
(bad)
hlt
inc
es
jg
out
(bad)
jg
fild
loopne
or
fild
inc
sahf
clc
jmp
mul
call
adc
loopne
lahf
push
nop
pop
dec
pusha
xor
(bad)
stc
jmp
aas
xor
lock
dec
gs
xor
dec
call
mov
xor
lea
inc
add
xor
pop
mov
jmp
imul
imul
mov
adc
aas
aas
(bad)
(bad)
inc
sub
xchg
in
int3
mov
sar
repz
(bad)
stc
ins
aas
ds
jl
cmp
aad
imul
adc
mov
call
call
in
outs
jo
jp
add
or
jno
adc
cmc
push
inc
aaa
jg
add
loope
xchg
jge
pop
add
pop
test
mov
sti
jle
data16
push
fstp
push
jae
mov
mov
fbld
or
(bad)
aas
sub
lock
(bad)
push
in
shl
(bad)
mov
jne
pop
in
xor
xor
or
and
jbe
out
adc
test
aaa
jg
pop
xor
inc
pop
dec
jle
sbb
stos
ja
jno
(bad)
(bad)
mov
ret
mov
push
gs
xor
or
fist
rcr
sti
fwait
aas
(bad)
aas
lds
mov
cmp
adc
and
sub
int
mov
and
mov
rol
ss
jnp
rcr
int
call
ret
jl
ja
xor
mov
dec
mov
std
clc
pop
adc
inc
ficomp
sbb
sahf
and
jg
out
jns
jle
jl
les
pop
sbb
mov
pop
inc
cld
repz
fiadd
pushf
pop
mov
nop
xchg
xor
cmp
mov
retf
cmp
push
cmp
(bad)
je
push
int3
lea
dec
dec
(bad)
push
xor
push
and
mov
cmp
mov
ret
and
shl
popf
data16
pop
stc
int
call
mov
inc
sbb
adc
(bad)
cld
in
retf
repz
or
push
jmp
call
fadd
sbb
pop
and
aam
sbb
out
adc
cmp
cmp
out
mov
hlt
neg
mov
(bad)
out
jmp
adc
pop
clc
aad
dec
push
clc
rcr
adc
mov
push
aaa
jg
jle
iret
mov
push
aaa
dec
(bad)
out
aaa
mov
and
xor
aam
inc
retf
in
ret
repz
jg
inc
fsub
(bad)
repnz
inc
sbb
fiadd
aas
daa
(bad)
outs
(bad)
cld
stos
xor
imul
mov
jle
call
test
xchg
retf
mov
mov
(bad)
push
pushf
inc
iret
push
gs
ins
cli
sbb
mov
cmc
jne
sar
lahf
mov
cld
dec
mov
cdq
jl
mov
xchg
sar
(bad)
std
int
cmp
push
inc
dec
pop
lock
shl
je
push
daa
movs
jno
and
repz
push
pop
rol
jl
adc
ja
sub
(bad)
aas
jg
fwait
jbe
and
dec
ins
es
add
inc
cwde
aaa
jg
out
shl
test
aaa
mov
(bad)
cld
push
add
call
cs
loope
sub
lea
out
mov
jbe
dec
mov
enter
jo
out
(bad)
aas
call
mov
xor
jp
sub
jg
outs
out
fucom
or
add
jo
add
psubq
cld
stc
iret
push
xchg
or
dec
loopne
inc
xor
das
stc
idiv
xchg
xor
sbb
outs
mov
mov
or
aaa
jg
adc
inc
mov
inc
push
or
add
jne
or
call
cld
jg
push
into
mov
(bad)
mov
mov
mov
repnz
(bad)
adc
push
push
es
sbb
cdq
dec
(bad)
(bad)
stc
(bad)
call
mov
dec
mov
cmp
test
mov
or
call
movs
lock
dec
popa
cmp
(bad)
(bad)
(bad)
fldcw
sbb
repz
dec
push
dec
mov
call
ficom
or
mov
es
out
fild
xor
mov
mov
adc
cmp
pop
loop
gs
dec
movs
mov
mov
fs
mov
xor
(bad)
clc
fwait
cs
ret
mov
sbb
inc
push
inc
stos
fnstenv
mov
xor
jg
std
sub
(bad)
jnp
bound
mov
sbb
loopne
xchg
jb
jge
jle
pop
mov
popa
mov
sahf
jb
sub
xchg
pusha
mov
movs
push
jo
into
mov
(bad)
(bad)
(bad)
jbe
jmp
inc
pop
mov
mov
push
(bad)
jg
jecxz
mov
aas
cmc
xor
mov
imul
aas
clc
int
and
dec
hlt
pop
or
push
mov
stc
push
fwait
pop
(bad)
fdiv
aaa
adc
sbb
dec
std
mov
cld
pop
sbb
fwait
mov
cdq
ins
std
nop
inc
imul
in
cld
push
jno
stos
jne
dec
jp
cmp
jl
stc
push
ins
call
inc
push
dec
push
mov
mov
mov
jg
cmp
and
dec
mov
inc
aaa
inc
push
out
(bad)
out
call
xor
and
das
(bad)
adc
sar
cmc
or
push
mov
pusha
enter
mov
lea
aas
inc
fldenv
mov
lahf
jmp
fnstcw
jne
jmp
adc
fwait
or
aaa
mov
lahf
icebp
mov
dec
xor
pushf
dec
sub
cmp
pop
adc
adc
mov
fimul
xchg
dec
mov
sub
and
scas
outs
aas
inc
inc
adc
jb
cmp
inc
add
cmp
inc
ds
cmp
xchg
fcmovne
cmp
outs
aaa
ss
xor
outs
daa
daa
xor
outs
xor
cmp
sub
sub
in
in
jb
outs
and
pop
xchg
fcmovne
leave
and
push
outs
sbb
sbb
sbb
outs
pop
push
mov
adc
adc
in
jb
nop
fcmovne
in
or
pop
push
outs
add
add
add
call
std
and
mov
adc
pop
cli
stc
add
leave
leave
xchg
clc
xor
rep
daa
daa
mov
repnz
out
in
in
popf
fmul
outs
jmp
pop
call
mov
loop
outs
leave
leave
in
in
ficomp
(bad)
daa
mov
fcmovnu
outs
fcom
pop
aad
popf
fmul
outs
rcl
pop
iret
into
jb
cmp
leave
enter
jbe
outs
(bad)
ret
xchg
fcmovnb
outs
mov
pushf
fmul
outs
mov
jb
mov
mov
scas
leave
in
in
scas
outs
lods
stos
pop
stos
daa
mov
fld
movs
mov
mov
popf
jb
mov
cwde
pop
xchg
leave
in
in
xchg
outs
xchg
xchg
pop
xchg
sub
mov
in
in
in
mov
lahf
in
in
in
popf
popf
pushf
outs
fcmovne
leave
leave
fwait
fwait
call
cwde
cwde
xchg
xchg
outs
xchg
outs
daa
daa
daa
xchg
xchg
xchg
aas
xchg
dec
dec
dec
dec
xchg
xchg
nop
nop
popf
pushf
pushf
fsubr
mov
mov
mov
jb
mov
mov
xchg
xchg
in
sub
xchg
xchg
fcmovne
add
jge
jl
jnp
dec
outs
daa
jp
jns
js
fmul
ja
outs
jbe
cmp
aas
jae
jb
cmp
jno
jo
outs
in
jb
outs
outs
ins
aas
ins
leave
in
in
ins
imul
xchg
fcmovne
leave
imul
xchg
xchg
gs
arpl
daa
daa
bound
aas
pusha
dec
dec
dec
dec
pop
pop
pop
pop
popf
pushf
pushf
fsubr
pop
pop
pop
cmp
cmp
push
jb
jb
push
outs
push
push
push
in
in
push
aas
push
push
push
leave
leave
leave
in
push
outs
push
push
dec
xchg
xchg
xchg
fisttp
dec
dec
dec
daa
daa
mov
dec
dec
outs
dec
dec
dec
bound
ud0
jmp
jg
rcr
ds
jmp
inc
cmp
ds
ins
push
out
sar
push
mov
out
call
xlat
ds
(bad)
pop
dec
dec
sbb
pop
jg
pop
gs
fnstsw
mov
es
jg
add
sub
in
repnz
in
(bad)
sub
sar
inc
out
dec
sub
ds
es
stc
dec
fistp
add
repnz
out
aaa
cmp
popf
mov
add
ds
jns
mov
scas
cld
mov
ds
sub
mov
retf
mov
or
or
mov
inc
hlt
xchg
mov
cld
mov
inc
pusha
or
cmc
bound
inc
cwde
or
idiv
mov
mov
ds
loope
into
fmul
int3
push
retf
dec
inc
cli
ds
mov
inc
adc
pushf
es
clc
bnd
sar
loopne
or
mov
ds
ins
xchg
jb
in
fnsave
(bad)
and
xor
add
stos
int3
cmp
jg
ror
push
(bad)
or
add
mov
and
adc
es
int
jg
aas
lea
and
pop
xadd
inc
mov
(bad)
(bad)
mov
aas
inc
jbe
aaa
stc
xchg
xor
in
inc
add
jno
ins
loope
mov
sub
adc
and
fs
call
rcl
dec
and
push
aas
jmp
cld
loop
or
jmp
out
call
and
aas
xor
cdq
or
xchg
sbb
jecxz
jb
hlt
sti
in
cmp
pop
(bad)
jg
sub
or
sub
dec
addr16
mov
jle
(bad)
(bad)
inc
mov
pop
jb
add
aas
fcomi
jae
shr
inc
sub
sar
in
xchg
sbb
imul
aad
test
pop
mov
and
out
jo
pusha
jno
pop
dec
and
cld
bnd
not
(bad)
dec
pop
xor
mov
mov
aam
inc
push
aas
lahf
call
iret
jmp
pop
test
aas
daa
push
lock
fisubr
fwait
ja
fwait
shl
ret
inc
pop
sti
push
inc
adc
sub
not
outs
jnp
pop
fist
nop
out
addr16
and
outs
clc
neg
(bad)
mov
sahf
cmp
int
push
and
aaa
sbb
xor
popa
sbb
adc
fwait
sub
aas
or
mov
sbb
push
leave
pop
dec
dec
fistp
rol
jg
mov
rcr
and
aas
aam
adc
stc
stc
(bad)
repnz
jmp
jno
push
sub
add
(bad)
jg
in
and
rcr
mov
pop
jo
xor
jl
aaa
pop
and
das
mov
and
pop
mov
dec
sbb
movsx
ret
daa
xor
inc
adc
sahf
sub
jg
outs
out
pop
cmps
sub
mov
add
aas
mov
mov
(bad)
mov
test
pusha
ja
push
xor
mov
call
out
sub
inc
out
mov
adc
dec
cmp
adc
aas
and
(bad)
add
cld
int
adc
sub
pop
ds
xor
fwait
ja
push
adc
sbb
sbb
jle
in
out
inc
int
jg
xor
push
bound
add
clc
cmp
outs
or
xor
data16
inc
sbb
cmp
int
sub
cmp
fnstcw
out
jmp
mov
daa
cmp
sbb
int3
jnp
(bad)
sti
int
and
loope
mov
or
iret
rcr
movs
sub
std
jmp
add
inc
jo
cld
jnp
scas
and
dec
out
(bad)
pop
stc
fwait
sar
stos
out
cmc
or
inc
and
mov
jne
and
cmp
repnz
push
pop
int3
imul
ins
dec
loopne
call
mov
dec
xor
aaa
mov
aaa
push
(bad)
out
dec
nop
rcr
xor
dec
lock
cld
mov
dec
into
dec
push
push
aas
or
daa
mov
push
mov
movs
(bad)
xor
inc
scas
inc
jbe
add
aas
sub
inc
out
fistp
pusha
dec
and
loope
mov
xchg
(bad)
jg
inc
rcl
cmp
adc
aas
jmp
ror
mov
cmp
(bad)
mov
xchg
aas
mov
xor
stc
in
pop
mov
fcmove
and
xor
stc
in
in
lods
mov
adc
push
nop
and
out
(bad)
jg
xor
and
mov
and
lahf
or
push
push
repz
adc
out
(bad)
out
push
inc
cs
jne
inc
cmp
ss
jae
aaa
ins
mov
push
fld
xor
sub
cmps
push
mov
scas
mov
aas
mov
and
and
cmp
mov
aad
jle
pop
js
jns
inc
cmp
inc
adc
popf
rcr
nop
ds
in
jecxz
mov
jg
fs
xor
adc
jle
int3
inc
std
jge
in
sti
cmp
pushf
xchg
loope
fisttp
mov
test
js
dec
jge
add
dec
jae
outs
scas
adc
test
mov
aaa
pop
inc
fdivr
jg
js
add
add
push
lods
popf
retf
push
mov
inc
xor
xchg
xor
sbb
fld
push
push
cmp
(bad)
out
(bad)
jmp
dec
rol
outs
lock
push
loopne
call
cmp
cmp
cmp
out
aaa
pop
movs
push
ja
dec
pop
sahf
dec
dec
mov
fstp
mov
push
js
jns
pop
inc
repnz
xchg
cmp
shl
fs
out
(bad)
aas
jg
push
add
aas
jle
dec
jl
or
xor
push
shr
les
test
pop
repz
ret
dec
pop
mov
pop
mov
sbb
dec
lahf
pop
mov
enter
cld
int
cmp
pop
call
and
adc
(bad)
retf
(bad)
mov
movs
retf
into
rcr
push
mov
ins
mov
out
sar
loope
sub
aam
lds
pop
jle
not
shl
aam
mov
(bad)
jl
das
stc
jg
outs
push
mov
fs
xor
call
adc
sbb
int
fistp
iret
xor
xor
sahf
xlat
lahf
jno
outs
scas
cld
popa
sbb
push
test
mov
cmp
outs
pop
jle
add
aas
adc
pop
mov
stos
ja
pop
push
xor
and
in
movs
dec
es
adc
dec
xchg
pushf
cmp
inc
rcr
mov
cmp
inc
aas
jg
(bad)
xor
jne
inc
retf
adc
rep
scas
sub
pop
lea
clc
mov
jmp
jg
xchg
mov
(bad)
adc
pop
ret
sbb
fmulp
repz
mov
jae
popf
fmul
fistp
adc
pop
cmp
fistp
dec
and
push
pop
loopne
movs
nop
xchg
sub
and
out
adc
jl
sbb
int
mov
les
inc
loop
dec
and
test
pop
cmp
outs
scas
fsub
pop
adc
xor
je
das
clc
fwait
sub
inc
cli
mov
(bad)
stc
and
jmp
ja
ins
in
adc
loopne
shr
push
mov
cdq
out
(bad)
xchg
in
push
push
adc
je
out
outs
scas
and
dec
adc
mov
ret
test
mov
inc
test
fild
or
push
in
out
jle
cmp
jl
xor
int3
out
inc
shr
add
adc
ja
jae
call
sbb
xor
mov
outs
int
jmp
push
inc
cmp
aas
es
cli
mov
cs
jmp
cld
jae
xchg
mov
or
add
outs
out
pop
mov
pop
mov
dec
or
nop
std
fistp
mov
xor
sub
xlat
lahf
cmps
and
cs
inc
sti
mov
pop
fdivr
push
jge
xor
(bad)
xor
and
adc
stc
mov
push
sub
lahf
or
jge
mov
fstp
push
inc
and
cld
mov
cmp
(bad)
or
xchg
ffreep
scas
xchg
dec
cld
fdivr
out
outs
xor
call
lods
xor
jae
sbb
pop
rcr
mov
rcr
add
pop
bnd
jg
cmps
and
or
mov
mov
add
sub
mov
mov
lahf
push
cld
mov
push
xor
mov
dec
mov
(bad)
mov
scas
mov
lahf
inc
clc
mov
std
mov
aas
jl
push
jg
xor
pop
in
or
mov
retf
es
push
test
dec
mov
out
out
aas
cli
(bad)
xlat
shr
out
js
sbb
pop
aaa
push
(bad)
out
call
jbe
sbb
call
scas
cld
mov
xor
add
cmp
pop
mov
arpl
sub
inc
sbb
dec
mov
loopne
lahf
jno
adc
(bad)
xor
pop
mov
scas
movs
lahf
inc
xchg
add
fmul
pop
stc
fwait
mov
jg
dec
xchg
fld
shl
pop
out
aas
repnz
fild
bound
add
fild
mov
lods
jbe
fistp
jg
jmp
inc
lock
push
inc
clc
push
(bad)
pop
stc
pop
push
sub
loop
mov
push
inc
fiadd
pop
stc
jg
aaa
or
add
adc
inc
mov
or
dec
fwait
sub
repnz
push
or
push
repz
adc
sti
mov
(bad)
cli
add
xchg
repz
and
imul
hlt
lahf
cmp
dec
test
aas
ss
cmc
aas
cli
sub
stc
xchg
pop
pop
jmp
push
adc
cmp
pusha
(bad)
mov
xor
aas
push
sub
aaa
push
push
test
xchg
inc
(bad)
call
dec
std
mov
loopne
pop
inc
out
mov
mov
rcr
in
push
inc
in
adc
sahf
sub
mov
(bad)
(bad)
mov
mov
int
inc
push
mov
mov
retf
call
stc
mov
inc
call
sbb
xchg
xchg
mov
repz
mov
(bad)
repz
repz
lds
cwde
inc
pop
lods
hlt
push
mov
xlat
push
dec
jg
outs
scas
push
inc
push
retf
sub
cmc
mov
push
(bad)
pop
stc
mov
iret
test
xchg
idiv
hlt
mov
sub
aas
out
push
aaa
inc
xchg
cmp
inc
pop
idiv
mov
fldl2t
pop
aaa
out
lock
or
mov
shr
sbb
push
in
(bad)
out
(bad)
out
pop
push
pop
pop
test
aas
idiv
cmp
xor
jg
retf
jmp
(bad)
mov
or
sub
cmc
jg
mov
pop
and
idiv
mov
call
in
mov
jo
aaa
and
jmp
fnstsw
adc
xor
fwait
mov
daa
mov
dec
jmp
cdq
out
pushf
lock
dec
push
dec
jmp
xor
sti
jg
mov
cld
lahf
jno
shr
pop
sti
jmp
mov
cmp
std
jg
jg
cld
jmp
mov
xor
inc
cld
jg
mov
stos
sahf
cmp
(bad)
in
mov
pusha
movs
cmp
jle
mov
cmp
jl
sbb
jne
adc
add
inc
jg
std
out
call
scas
cmp
mov
sar
cmp
ss
(bad)
call
mov
out
ffreep
push
fistp
retf
mov
push
push
cmp
(bad)
mov
loope
pop
mov
sar
inc
fadd
addr16
stc
lds
mov
push
aas
pop
(bad)
jmp
push
mov
mov
add
mov
les
clc
mov
fs
cmps
ret
jns
arpl
add
inc
cs
mov
mov
cmp
mov
push
call
ds
nop
jno
test
call
cld
jmp
ja
sbb
nop
mov
mov
gs
movs
loop
lea
neg
sub
repz
loop
xchg
mov
xchg
test
int
outs
(bad)
cmp
repz
retf
xor
dec
xchg
cmp
mov
ins
pop
mov
(bad)
mov
dec
cmps
cwde
cmp
inc
jb
xchg
int3
jno
loop
fcomp
nop
cmp
rcl
xor
jecxz
out
aaa
push
jnp
daa
pop
cmp
sbb
(bad)
scas
data16
jnp
dec
(bad)
in
fwait
imul
adc
add
icebp
aas
cmp
xchg
mov
mov
mov
jl
fwait
push
test
ss
call
enter
mov
fisttp
stos
out
mov
jnp
jge
mov
xlat
mov
jmp
cmp
mov
xchg
shl
adc
jmp
mov
dec
repz
aam
add
loopne
pop
imul
xor
stos
mov
int
(bad)
jg
mov
cmp
frndint
and
mov
(bad)
jle
scas
cli
mov
cmp
adc
xchg
fdivr
dec
pop
call
movs
xchg
xchg
jle
cmp
jne
jp
jb
(bad)
mov
mov
cmp
cmps
(bad)
push
mov
into
push
pop
movs
hlt
hlt
mov
fnstsw
inc
imul
inc
cdq
xor
push
fwait
mov
fild
cmp
loope
pop
cmc
popf
sahf
call
lods
scas
call
(bad)
sar
mov
or
or
outs
(bad)
jg
in
test
aam
fist
nop
cmp
das
ds
aad
sti
int
dec
retf
adc
push
repz
in
xor
push
xor
dec
cld
jo
push
mov
fdivr
add
mov
pushf
(bad)
call
sar
movs
pop
ss
jmp
inc
lahf
xchg
pop
lds
inc
dec
pop
out
pop
mov
jno
fwait
(bad)
(bad)
jmp
data16
add
cmp
xchg
sahf
mov
jg
in
(bad)
ss
mov
sub
aaa
outs
jle
int
jmp
xor
dec
cmps
(bad)
mov
ficomp
lods
add
(bad)
(bad)
fild
push
repz
push
stc
and
xchg
mov
or
hlt
aas
js
xor
repz
mov
jg
push
fprem1
xor
mov
sub
stc
dec
(bad)
jp
dec
cmp
add
mov
xchg
pushf
cmp
cmp
mov
xchg
aaa
(bad)
mov
mov
rcl
lock
(bad)
retf
cdq
cmp
sub
(bad)
jmp
aad
mov
xchg
inc
jge
or
fdiv
js
mov
(bad)
in
cwde
cmp
sub
jbe
stc
jecxz
pop
ror
mov
mov
ficom
cmc
aas
out
xchg
jg
repz
mov
mov
sub
ficomp
setb
cld
push
pop
retf
ds
mov
inc
outs
xchg
sbb
push
call
aam
(bad)
out
call
push
dec
fld
stos
(bad)
jg
inc
add
mov
pop
mov
leave
push
mov
dec
cmp
dec
and
jg
outs
pop
out
xor
cmps
push
or
jbe
loope
idiv
inc
ficom
inc
loop
jle
(bad)
push
cmp
mov
jle
and
int3
xor
inc
cmp
outs
xor
and
push
(bad)
mov
xchg
mov
mov
push
and
cmp
cmp
(bad)
out
sahf
mov
xor
mov
rcr
or
cld
jmp
jmp
mov
das
sbb
mov
stos
mov
cmp
push
stc
jge
int
(bad)
fcomip
push
xchg
je
in
call
cdq
jp
xchg
add
cmp
gs
fldcw
inc
push
jmp
shr
push
(bad)
mov
aas
pop
fimul
sub
or
add
jae
mov
das
cdq
add
ja
test
rcl
push
ror
cmp
(bad)
(bad)
bound
ss
jns
mov
adc
ds
daa
add
aas
sub
call
adc
dec
cdq
mov
sbb
(bad)
and
inc
jmp
jg
int
mov
in
xchg
inc
fldcw
not
fwait
clc
(bad)
lahf
mov
mov
mov
mov
repz
cmp
mov
es
xchg
jmp
xchg
cmp
inc
mov
xor
stos
jecxz
xor
jo
sub
jmp
ins
xchg
jecxz
adc
test
call
aas
and
in
(bad)
jg
(bad)
aaa
aaa
push
mov
pop
addr16
inc
pop
cmp
movs
xchg
jle
(bad)
jl
jbe
push
dec
ficomp
test
jl
sbb
mov
push
xor
into
xchg
mov
lock
bnd
inc
jl
cmp
(bad)
in
es
arpl
pop
outs
dec
out
retf
cmp
in
jnp
or
jg
adc
dec
pop
mov
fwait
xor
stos
fdivr
xor
cmp
and
loope
(bad)
fld
popf
mov
sahf
jns
(bad)
mov
retf
fwait
cmp
std
jns
imul
cli
nop
cmp
repz
push
shr
xor
(bad)
mov
lahf
call
int
xchg
cmp
cld
(bad)
jmp
lea
pop
push
sti
aas
and
or
mov
mov
xor
xchg
ss
and
pop
jb
ds
mov
mov
inc
pop
sti
bnd
cmp
mov
mov
call
push
push
sar
sahf
mov
push
int3
test
cmp
cmp
repz
pop
ret
pushf
imul
std
pushf
push
test
sbb
mov
inc
sar
fstp
adc
stos
jmp
push
and
inc
fwait
cmp
rcl
icebp
lods
cmp
dec
xchg
cmp
(bad)
(bad)
mov
push
xchg
ins
pop
dec
mov
nop
out
fsub
mov
dec
fwait
jle
(bad)
jmp
cmp
ret
pop
push
or
jb
adc
(bad)
jl
mov
dec
sub
jp
inc
aaa
fidivr
das
push
ja
popf
jno
dec
mov
mov
sbb
aaa
pop
xlat
add
ds
or
jecxz
dec
jmp
call
push
xchg
mov
out
xor
pushf
cmp
aaa
(bad)
mov
and
ret
js
ficom
xor
loopne
(bad)
out
int
sub
(bad)
push
adc
and
adc
mov
cs
push
(bad)
int3
test
cmp
dec
(bad)
sti
mov
jp
lea
and
xchg
cmp
nop
movs
mov
pushf
pop
push
add
sub
lods
adc
(bad)
(bad)
daa
pop
popa
out
sbb
mov
movs
xchg
(bad)
popf
cmp
mov
(bad)
aas
inc
mov
fwait
jmp
outs
pop
jbe
mov
cdq
cmp
mov
jmp
jg
xor
popf
mov
shl
dec
xchg
jno
sub
imul
ret
jns
xchg
je
bound
test
inc
str
pop
jbe
mov
rdtsc
addr16
(bad)
mov
push
aas
mov
imul
cmp
lds
mov
inc
popf
adc
pop
clc
popa
pop
mov
popf
lahf
jg
ud0
loop
cmp
pop
loopne
adc
inc
ins
pop
jb
(bad)
inc
jmp
(bad)
fsub
jno
or
ss
or
sbb
xchg
dec
push
add
mov
lods
arpl
add
adc
or
adc
inc
xchg
inc
(bad)
sbb
xor
fimul
leave
dec
add
or
jnp
(bad)
jb
add
pop
jg
pop
das
sbb
ds
push
out
xchg
outs
cmovo
add
xor
add
cmp
pop
xor
add
dec
(bad)
and
call
dec
ret
pop
(bad)
(bad)
fisub
invd
cmovno
inc
(bad)
pop
wrmsr
cmp
mov
(bad)
inc
push
inc
es
inc
(bad)
sahf
mov
in
shl
scas
scas
aas
pop
movs
push
add
aas
sub
es
push
movs
aas
jnp
(bad)
(bad)
aas
adc
outs
dec
jne
push
mov
mov
or
mov
ror
iret
js
out
dec
mul
les
jnp
pop
cmps
call
clc
pushf
das
jo
mov
outs
push
cwde
mov
mov
daa
(bad)
cmp
jnp
lock
lds
aas
fnstsw
cli
push
bound
test
push
adc
in
adc
test
das
cmp
imul
call
push
(bad)
ret
cmps
inc
inc
outs
mov
mov
add
xchg
(bad)
push
repnz
cwde
sub
jle
mov
or
imul
dec
push
mov
or
xor
das
cmps
les
mov
dec
or
add
sub
rcr
fisttp
sbb
mov
mov
int
iret
push
mov
jae
shl
dec
scas
push
ins
dec
sub
(bad)
push
add
(bad)
popf
and
sub
add
lods
ret
arpl
gs
fistp
dec
push
jns
mov
das
jg
mov
mov
push
or
sub
jg
les
out
push
pop
out
shl
loope
aaa
iret
add
sbb
and
push
sbb
loope
nop
(bad)
push
xor
xor
jle
mov
cdq
test
sahf
test
jmp
xchg
mov
das
push
jno
mov
or
aaa
inc
nop
sub
cs
test
int
push
stos
or
jle
iret
outs
pop
push
cmps
pop
mov
popa
sahf
enter
lahf
push
inc
loope
pop
clc
lods
inc
mov
push
ins
(bad)
stos
loope
test
shl
mov
mov
inc
fild
enter
xchg
cmp
das
mov
mov
lock
lea
push
inc
pop
repz
xor
jle
ret
out
push
cmp
push
pushf
mov
sar
lods
iret
or
stos
(bad)
stc
and
call
pop
loope
push
daa
into
xchg
sub
scas
jno
(bad)
push
mov
ins
in
stos
pop
loope
cmp
outs
or
cwde
mov
pop
sub
int
dec
push
mov
jae
test
das
pop
inc
hlt
pop
push
xchg
retf
xchg
ja
mov
mov
fsub
sahf
cli
out
or
scas
add
loop
cs
inc
iret
push
int
pop
or
inc
scas
push
mov
scas
xor
dec
clc
dec
or
(bad)
loopne
outs
push
push
cdq
lock
sub
addr16
push
mov
fbstp
or
rol
fsub
mov
pop
mov
xchg
rcl
pop
mov
clc
outs
inc
out
push
xchg
xchg
dec
sbb
mov
call
int3
outs
pop
ror
scas
push
add
dec
or
daa
outs
xchg
cmp
(bad)
push
or
stos
inc
mov
mov
outs
push
out
test
xor
cmp
dec
add
mov
das
mov
aaa
pop
xchg
xlat
mov
aaa
xchg
xchg
mov
retf
add
popa
adc
xlat
fild
mov
psubb
pop
aas
ret
into
(bad)
xor
and
adc
xchg
push
repz
mov
inc
ud0
pushf
lock
jg
push
lds
outs
(bad)
sti
ret
push
and
iret
mov
lds
mov
aas
push
jp
ja
movs
xchg
leave
aas
sbb
loopne
or
invd
in
dec
enter
scas
in
adc
inc
es
fsubr
jb
pop
jb
push
lods
jmp
enter
repnz
inc
in
jmp
call
or
sbb
out
pop
enter
add
out
cs
add
das
in
retf
pop
jb
pop
push
push
out
or
mov
adc
jecxz
pop
enter
in
pop
enter
loop
in
es
inc
cs
dec
and
adc
clc
loope
test
jb
pop
sbb
jb
adc
loopne
nop
or
mov
mov
nop
and
iret
das
cli
mov
mov
mov
leave
fidivr
js
fwait
jp
dec
call
daa
fldcw
and
and
cmps
aas
shl
test
pop
js
cmc
and
shl
scas
jo
push
xchg
mov
inc
mov
rcl
rol
inc
(bad)
mov
add
aas
inc
push
push
cmp
ror
ins
xchg
mov
dec
(bad)
jmp
jns
ds
jo
and
(bad)
aas
inc
cmp
adc
sahf
xlat
das
rcr
js
and
mov
(bad)
out
(bad)
fild
dec
sahf
sub
dec
les
mov
sub
neg
mov
(bad)
aas
in
in
dec
push
(bad)
xlat
push
(bad)
push
push
push
or
rol
(bad)
mov
call
pop
addr16
aas
rcl
push
mov
retf
sub
jmp
aaa
(bad)
(bad)
aas
call
push
mov
inc
out
ds
and
xchg
into
aas
sbb
xchg
cld
jg
ja
and
xor
outs
fdiv
and
iret
pop
mov
jmp
std
adc
or
out
xor
sahf
cwde
retf
scas
sbb
sar
mov
or
sbb
mul
push
js
sti
sub
test
loope
loop
push
fwait
(bad)
(bad)
ret
adc
and
dec
mov
aas
add
pushf
std
jmp
inc
or
aas
(bad)
int
or
adc
mov
mov
lock
les
mov
shl
cmps
es
sbb
(bad)
fistp
push
or
add
cmp
aas
shl
(bad)
xor
adc
jl
movs
aas
mov
mov
inc
addr16
sub
mov
rcr
push
pop
data16
pusha
add
add
fldcw
mov
out
cld
int
xor
push
pop
inc
repnz
fld
fwait
(bad)
fidivr
adc
adc
fstp
(bad)
mov
xor
cmp
dec
fistp
sahf
int
push
fwait
xchg
outs
jle
mov
loopne
xchg
fdivr
(bad)
adc
nop
push
ss
int
(bad)
fnstsw
(bad)
cmove
sub
push
shl
stos
aam
sbb
sub
or
(bad)
mov
mov
ins
movups
aas
fdiv
aaa
pop
jg
repz
ja
sub
pushf
enter
(bad)
push
adc
int3
mov
call
mov
cwde
dec
ins
sub
push
fadd
push
jb
fild
cmp
cmp
xchg
outs
(bad)
jg
pushf
mov
jmp
loope
out
sub
adc
mov
stc
fwait
push
ret
shl
movs
or
movs
test
addr16
outs
addr16
stos
cmp
mov
iret
push
dec
outs
push
cld
cmp
push
sahf
ja
jns
xor
das
clc
fwait
outs
sbb
stc
sub
cmp
xor
fistp
jge
pop
jecxz
lock
fwait
jg
test
dec
push
mov
stc
lods
cld
xchg
inc
sbb
xchg
mov
mov
fist
stc
push
sbb
fdivr
push
test
int
inc
sar
in
test
push
mov
iret
pop
arpl
lods
retf
aad
sub
cld
int
and
(bad)
call
xchg
test
adc
repz
and
xor
shl
sub
aas
leave
mov
push
call
xchg
ins
sahf
outs
shr
add
pop
push
stos
sti
int
jg
arpl
jp
aad
and
sub
inc
fimul
add
jg
fdivrp
pop
xchg
mov
sti
and
aas
movsx
pop
xlat
pop
iret
(bad)
jbe
inc
xchg
and
lock
push
lods
xchg
cdq
add
mov
rol
pop
pop
sbb
jno
(bad)
cmps
(bad)
mov
out
cmc
adc
cmp
call
jecxz
dec
in
push
dec
adc
pop
sbb
mov
mov
xor
push
loope
(bad)
call
mov
xchg
aas
retf
repnz
into
and
mov
jl
xchg
dec
in
mov
push
outs
xchg
dec
adc
sbb
stc
retf
addr16
cmovs
cmp
mov
out
les
lea
jnp
ror
(bad)
jmp
js
adc
add
add
les
pop
dec
and
icebp
jmp
aas
mov
xor
dec
inc
or
cmp
jle
idiv
sub
pop
mov
in
xor
or
cmc
xchg
cmp
push
out
mov
frstor
sub
imul
and
dec
jmp
les
loope
xor
jecxz
adc
cld
pop
out
aaa
(bad)
mov
and
lahf
ret
and
or
out
(bad)
mov
loopne
outs
jne
mov
jmp
(bad)
aas
mov
mov
sbb
mov
mov
or
shl
mov
fsub
ins
or
mov
push
push
(bad)
loope
sbb
aaa
movs
call
sbb
popa
mov
xor
(bad)
mov
mov
nop
and
aas
pop
push
sbb
cmp
int
fs
jge
mov
adc
movs
jle
fwait
int
jl
or
repnz
pop
or
ds
inc
lods
retf
cmps
outs
mov
push
and
rol
enter
and
mov
retf
ins
xchg
mov
bound
iret
fcmovnu
add
out
lock
xchg
stos
fmul
add
cmps
movaps
int
jmp
pop
neg
push
daa
out
int3
pusha
data16
add
push
sar
mov
jecxz
cmps
sub
dec
push
ret
in
outs
pop
(bad)
out
(bad)
fcmovnu
inc
lahf
out
cs
cmp
ficom
mov
pop
push
int
jg
xor
imul
idiv
sub
movlps
(bad)
rcr
cli
es
jmp
repz
stos
stc
int3
fwait
outs
(bad)
jg
push
scas
adc
mov
sbb
fnstcw
lods
pop
push
mov
pusha
in
mov
and
test
rcr
icebp
add
stc
mov
sbb
call
fsubr
sub
pop
stos
int
jl
popf
mov
cwde
ja
loopne
jmp
push
int
jg
call
popw
fadd
movs
sub
fwait
(bad)
(bad)
lods
leave
fnstenv
jmp
aas
scas
ins
sub
xor
scas
push
push
repz
mov
pop
add
stc
imul
sub
push
jmp
je
mov
out
stc
dec
or
test
sub
push
xchg
lahf
sahf
mov
stc
fwait
outs
(bad)
mov
and
and
sbb
in
mov
loopne
mov
in
sti
mov
mov
cvtps2pi
fsubr
jg
sub
push
push
adc
ins
ins
imul
std
int
adc
jecxz
sub
cli
mov
ja
dec
sub
outs
lods
push
lea
inc
mov
shr
cs
adc
(bad)
inc
nop
fxtract
outs
push
fist
lea
in
(bad)
ficom
scas
stc
fwait
outs
(bad)
(bad)
mov
aam
pushf
in
out
ret
out
push
and
xchg
test
push
in
sub
mov
adc
stc
fwait
jo
mov
loop
mov
pop
mov
add
out
fsubr
sbb
push
test
cwde
lock
xchg
inc
fistp
sbb
daa
nop
add
cli
rol
dec
mov
pop
jb
in
scas
inc
int3
aaa
jg
int
arpl
shl
rol
in
ja
mov
dec
repz
xchg
outs
daa
and
loopne
xor
xor
adc
aaa
outs
(bad)
out
fstp
cmps
ds
push
sub
ret
in
mov
mov
pusha
mov
push
(bad)
cmp
push
adc
jmp
push
push
push
jmp
ror
cdq
rcr
xor
clc
test
lods
and
jb
shl
(bad)
int
lods
adc
inc
adc
or
dec
sahf
out
pushf
in
pop
js
outs
(bad)
jg
int3
in
lock
pusha
das
sub
clc
mov
and
fimul
stc
fwait
ins
(bad)
ja
sub
loopne
fwait
mov
loope
pop
pop
add
mov
stc
nop
jnp
jl
call
movs
das
ret
test
sbb
pop
cmc
pop
push
sbb
pop
sub
jg
int
push
movs
leave
cld
mov
sbb
xchg
pop
iret
mov
mov
idiv
hlt
dec
ret
aas
mov
and
add
jl
mov
xor
and
push
(bad)
or
add
jg
int
cdq
mov
ja
mov
dec
cs
stos
hlt
dec
mov
call
(bad)
sub
dec
ja
les
in
xchg
cs
nop
sub
dec
jbe
dec
repz
(bad)
or
in
repz
and
push
mov
repz
fistp
sub
imul
and
imul
aas
add
aas
and
mov
inc
lods
loope
push
jecxz
out
mov
lods
mov
enter
call
repz
aam
stc
call
ds
repz
fiadd
aaa
fistp
out
jmp
call
sbb
repz
fxch
std
popa
inc
cmp
out
mov
jmp
xchg
shr
jmp
mov
(bad)
aas
mov
sbb
sbb
cld
test
popa
sbb
and
dec
xchg
test
hlt
rcr
(bad)
add
aas
stc
(bad)
(bad)
or
mov
out
mov
sar
or
push
xchg
xor
gs
call
jne
(bad)
(bad)
mov
enter
(bad)
or
aas
aad
ror
jl
movs
aas
mov
out
pop
or
pop
push
dec
aaa
cmp
(bad)
jl
push
mov
cmp
loop
aas
jg
inc
ds
cmp
aam
repnz
aad
or
ins
repz
fbstp
pusha
iret
push
bound
stos
push
dec
xor
fs
daa
cmps
hlt
(bad)
mov
ja
nop
rol
sahf
adc
dec
and
adc
mov
jle
aas
xchg
adc
ficom
sti
neg
popf
push
js
(bad)
pop
bound
out
and
aaa
(bad)
int
xchg
xor
mov
xchg
jle
or
test
mov
mov
sbb
jmp
repz
fistp
popa
loopne
cmp
mov
jecxz
int3
xchg
fstp
lods
enter
jmp
push
xchg
ret
sbb
out
aaa
punpckldq
sub
mov
xchg
pop
loope
rcl
loop
(bad)
out
mov
mov
sti
out
leave
lahf
mov
push
inc
jmp
ins
fmul
push
fisttp
pop
xor
fbstp
cmp
into
aas
push
mov
sar
pop
imul
mov
jg
int
loope
fisubr
stos
and
fcmove
cdq
outs
sar
pop
(bad)
(bad)
int
in
jmp
pop
(bad)
mov
movs
mov
outs
sbb
(bad)
out
shr
mov
mov
xor
mov
shl
mov
fistp
sbb
sahf
jmp
mov
outs
cs
fmul
fcomip
lahf
adc
sbb
push
xchg
adc
push
xor
lods
ret
retf
jg
and
push
stc
out
mov
(bad)
(bad)
lock
inc
or
popa
shl
(bad)
aas
mov
movs
jp
pop
(bad)
mov
sar
add
or
outs
fimul
push
dec
mov
and
hlt
mov
das
mov
je
ds
ja
sbb
fistp
popa
jmp
int3
(bad)
xlat
clc
cmp
das
mov
sar
pop
popa
fisttp
scas
gs
xchg
mov
inc
pusha
pusha
push
adc
cli
sbb
data16
add
mov
ins
push
xor
int
je
sbb
jp
scas
out
mov
and
mov
sub
aas
loop
pop
mov
pop
repz
imul
outs
(bad)
jo
pop
push
jmp
or
jns
adc
daa
cwde
xor
dec
jne
inc
repnz
adc
mov
aas
xchg
add
ret
outs
(bad)
test
fs
paddsb
call
fisttp
cli
imul
cmps
and
or
adc
adc
(bad)
jmp
inc
(bad)
ret
pop
ss
call
fsubr
(bad)
pop
xchg
imul
aaa
enter
add
clc
xor
lea
sub
sub
test
outs
mov
call
retf
or
cmp
(bad)
xor
stc
fstp
or
add
push
mov
daa
and
outs
mov
fild
push
sahf
jg
cli
pop
(bad)
(bad)
mov
cmp
pushf
lods
mov
jae
xlat
aas
push
mov
outs
(bad)
out
or
test
mov
cmp
call
iret
jmp
aas
arpl
jns
inc
cmpxchg
fwait
outs
push
push
stc
iret
jae
cmp
mov
cld
in
nop
xchg
jge
push
inc
out
ins
test
hlt
iret
mov
out
(bad)
fnstcw
icebp
(bad)
xchg
sub
(bad)
leave
xchg
mov
stc
fwait
outs
call
fmul
std
cwde
and
sar
jmp
outs
(bad)
cli
jmp
ret
sbb
out
call
aas
aas
and
sbb
aaa
fbld
mov
loop
scas
or
(bad)
mov
cmp
adc
inc
lds
or
sub
or
jg
ins
aas
mul
fstp
inc
mov
(bad)
pop
jne
ja
jne
mov
jmp
nop
or
call
cdq
jle
fdivr
mov
adc
add
aas
dec
jo
add
add
test
add
pushf
jp
push
and
jge
ja
dec
aaa
jg
aam
or
nop
push
fild
mov
xlat
sbb
jg
popa
inc
add
mov
lea
frstor
jns
clc
fstp
push
fild
pop
sub
ds
fwait
outs
(bad)
(bad)
lods
push
xor
sahf
jmp
std
hlt
pushf
hlt
aaa
push
cld
lock
pop
outs
in
outs
in
cmps
inc
fdivrp
sub
sti
out
js
call
add
cmps
pop
test
(bad)
(bad)
in
dec
fcmovne
push
in
retf
fidivr
mov
mov
pop
and
fistp
mov
jp
fcomp
std
out
push
xchg
sub
cwde
pop
cmps
sbb
daa
(bad)
outs
mov
ds
push
xchg
pop
addr16
or
push
rcr
aaa
mov
bound
call
loopne
mov
fisubr
(bad)
in
rcl
mov
std
lock
(bad)
es
icebp
pop
inc
pop
sti
mov
inc
outs
dec
int
pop
in
jl
mov
sbb
mov
sub
jo
sbb
push
call
ret
jl
icebp
icebp
(bad)
fisttp
xor
xchg
mov
rcr
loope
jnp
mov
mov
test
data16
lahf
imul
imul
fisub
rep
not
loop
or
xor
push
ins
pop
loopne
pop
(bad)
out
mov
pushf
imul
stos
mov
sbb
repnz
outs
call
mov
das
mov
jmp
mov
xchg
mov
pop
mov
ficomp
inc
imul
cmps
cmp
(bad)
call
jle
xor
aas
pop
pop
cmp
icebp
in
ficomp
in
mov
test
sbb
inc
in
mov
pop
loopne
(bad)
fild
in
push
push
ss
in
sbb
les
sub
outs
mov
fild
stc
or
rol
(bad)
shl
(bad)
(bad)
cli
outs
movs
push
fidivr
(bad)
out
imul
jl
cdq
mov
sbb
fs
push
fidivr
mov
cmps
adc
aas
bound
sub
adc
mov
push
jg
repz
rcr
add
pop
ins
dec
test
push
jmp
mov
pop
jmp
jle
mov
mov
add
(bad)
jne
rcr
xchg
imul
pop
inc
dec
sub
sti
int
sahf
adc
and
pop
ret
cmp
xor
fild
ror
cld
cmps
pop
std
mov
sub
ins
jge
pop
sar
sti
cmp
jg
gs
xor
pop
dec
nop
push
mov
xchg
jle
stos
fcomip
pop
outs
sbb
push
add
adc
repz
or
das
jb
pop
call
pop
sahf
cld
iret
mov
aas
test
rcr
xor
retf
(bad)
(bad)
in
jno
mov
das
xchg
jnp
jae
sbb
aas
push
push
es
pop
jg
std
out
or
jle
cdq
or
loop
(bad)
mov
push
jbe
sbb
test
xchg
adc
and
fcmovnu
cld
int
or
adc
jno
clc
ja
and
mov
add
aas
shl
stc
xor
fstp
inc
ficom
mov
xchg
mov
adc
hlt
sahf
jne
aaa
fistp
rol
jb
jns
adc
cmps
sbb
inc
ja
(bad)
out
sub
(bad)
(bad)
call
cmp
sbb
lock
sar
jno
jno
jmp
stc
fistp
fisubr
sti
movs
in
add
popa
repnz
adc
out
add
jl
jmp
mov
popf
mov
outs
and
(bad)
adc
retf
aas
(bad)
ds
in
sub
scas
sub
xchg
pop
movs
fmul
stc
dec
(bad)
lock
mov
jno
lahf
lds
(bad)
fsubrp
iret
aaa
(bad)
stc
das
js
bound
mov
mov
in
jne
(bad)
sbb
iret
aaa
mov
sub
in
jnp
mov
inc
leave
int
mov
movs
out
repz
xor
xchg
in
fstp
stc
jne
pop
mov
lea
xor
loopne
fs
mov
outs
(bad)
sti
repz
loop
sbb
or
push
dec
int
pop
loope
sbb
cmps
loopne
jnp
mov
fistp
clc
cmp
lock
cmp
stc
int
(bad)
std
mov
xchg
movs
cmps
or
mov
aas
add
popf
cs
fcmovbe
pop
int
mov
(bad)
sahf
cmp
fxch
push
dec
jae
les
aas
(bad)
out
test
xchg
jp
dec
fcmovnbe
add
adc
jnp
dec
(bad)
out
cmp
ret
mov
out
iret
inc
jmp
lahf
outs
jle
mov
mov
test
rol
scas
inc
pop
lahf
vmovdqa
loop
sub
rcl
scas
dec
iret
inc
mov
jg
aaa
mov
test
adc
int3
imul
(bad)
xchg
div
mov
in
xchg
popa
xchg
enter
jl
push
in
push
pop
in
and
sub
repz
push
push
sbb
xor
sub
or
ret
loopne
int
repz
push
xor
inc
sar
(bad)
mov
inc
ror
dec
xor
xor
mov
cld
out
fwait
mov
jg
aaa
ss
call
sub
fdiv
mov
loope
push
mov
mov
je
icebp
stos
xor
stc
cmp
test
jbe
cld
inc
sbb
scas
jno
das
fisttp
movs
scas
jbe
add
fwait
mov
lods
or
lahf
out
xor
movs
pushf
jae
retf
sbb
cld
out
mov
xchg
repz
or
test
jmp
fist
add
push
mov
lahf
(bad)
xor
rcr
pushf
ins
mov
xor
out
mov
add
dec
fadd
jl
mov
repz
mov
jge
jbe
sahf
dec
jl
jae
les
push
cmp
cld
out
cld
pop
or
cs
fidiv
fist
push
or
stc
data16
fucomip
aad
(bad)
arpl
push
xor
mov
imul
mov
test
inc
sub
xor
loopne
cmps
loope
pop
mov
es
mov
fild
loop
fist
dec
adc
jne
push
pop
repnz
(bad)
out
jl
(bad)
test
cmp
lock
sub
cld
bound
repz
cmp
aaa
mov
in
xor
push
lea
mov
or
aad
(bad)
sub
cmp
fst
adc
sub
repz
and
mov
and
int
jle
pop
movs
jecxz
and
les
adc
adc
sub
aaa
mov
sbb
pushf
mov
pop
push
or
repz
and
push
repz
fistp
push
out
retf
lock
out
std
out
aas
clc
cmp
mov
jle
adc
and
out
scas
mov
stc
int
jle
mov
push
and
push
int3
mov
add
cmp
cld
out
mov
(bad)
mov
sahf
mov
sub
dec
sbb
inc
out
mov
popf
aaa
mov
lahf
daa
mov
scas
mov
push
inc
adc
jg
inc
cmp
pop
jne
pop
inc
sar
(bad)
out
sub
(bad)
jno
or
lds
dec
jne
rep
jle
fwait
dec
inc
pop
ret
aas
jmp
pop
aaa
fidiv
out
sahf
aaa
mov
dec
inc
or
xor
es
repz
mov
and
fsubrp
push
mov
xor
in
pop
inc
aaa
mov
stc
cmp
fsub
inc
rcr
dec
(bad)
out
bswap
and
gs
mov
outs
jle
push
push
jecxz
xchg
sub
int3
out
mov
jmp
outs
or
sbb
shl
mov
jae
ss
int
jle
icebp
out
add
sbb
mov
int3
test
mov
mov
xlat
sti
in
aas
and
xor
xchg
fisttp
cld
dec
mov
call
and
jle
scas
repz
fldpi
sub
out
sahf
icebp
je
xor
mov
int3
shr
jle
int
jle
movs
mov
and
cmp
(bad)
sbb
mov
(bad)
ss
mov
cmp
ss
in
xchg
sub
sbb
jmp
retf
cmp
mov
jae
or
adc
icebp
out
mov
cli
rol
mov
call
cld
mov
ds
jle
loop
xchg
stos
push
nop
pop
pop
jae
xor
jmp
cmp
mov
bound
fucomip
aas
inc
cli
xor
jae
dec
out
mov
enter
stos
fnstsw
pop
into
xor
dec
test
jne
(bad)
ins
sar
dec
hlt
cmps
mov
out
ret
dec
test
xchg
inc
xor
cmp
mov
and
loope
aas
icebp
xchg
test
fidivr
ins
ja
sbb
loope
call
cmp
or
aas
and
mov
fistp
daa
sub
push
jp
inc
push
or
cmps
clc
push
push
int
(bad)
jg
push
add
loopne
aas
inc
mov
int3
push
daa
dec
mov
aaa
(bad)
mov
pop
push
sub
inc
shl
and
sbb
(bad)
out
xchg
dec
imul
and
add
test
mov
jg
fwait
outs
push
sahf
and
pop
jns
dec
shl
aas
mov
mov
dec
outs
(bad)
std
shl
fcmovb
out
loop
icebp
fdiv
and
mov
in
popf
scas
xor
mov
sbb
(bad)
jmp
cli
loopne
rcl
dec
inc
aaa
mov
fcomip
call
pop
daa
adc
mov
sub
xchg
mov
xchg
cmps
(bad)
(bad)
(bad)
fnstsw
cli
add
aas
stos
lea
xchg
fstp
sub
mov
push
pop
mov
push
ret
cs
xor
and
mov
xor
call
call
push
and
mov
(bad)
ror
jmp
sbb
rcl
das
clc
add
pop
mov
lock
sub
sahf
das
add
jg
ins
and
mov
aas
arpl
mov
call
xchg
mov
rcl
inc
(bad)
leave
leave
or
cmp
jg
fild
add
pop
test
lds
das
mov
mov
(bad)
mov
xchg
aas
das
xchg
(bad)
fcomi
aas
(bad)
jno
add
aas
pop
aas
dec
in
les
les
sbb
test
outs
cdq
add
or
loopne
loop
outs
and
aaa
aas
adc
or
or
inc
push
xor
or
adc
aas
rcr
adc
hlt
fs
pop
lock
aas
cmp
cmp
sar
jge
push
cmp
add
aas
cs
sti
jmp
jne
inc
ficom
sbb
mov
lock
fdivr
call
aas
xchg
aas
inc
mov
jmp
pop
adc
fisub
test
fwait
or
fcomp
mov
or
mov
(bad)
(bad)
(bad)
aas
test
jbe
sub
aas
mov
jl
aas
and
mov
cmp
pop
xchg
dec
(bad)
(bad)
jmp
dec
inc
xchg
pop
add
aas
and
ds
mov
or
fild
arpl
push
retf
scas
test
aas
mov
ss
movs
test
adc
pop
xchg
test
fld
pop
psubw
lock
xor
aas
mov
add
cli
call
mov
add
(bad)
fnstenv
dec
pop
mov
mov
(bad)
(bad)
cli
pop
xor
iret
fdivr
or
(bad)
mov
mov
add
mov
push
mov
mov
sahf
and
(bad)
aas
lock
mov
dec
hlt
or
inc
and
sbb
cs
push
pop
xor
cmc
clc
pop
sar
leave
aas
adc
aas
pop
shl
cs
push
(bad)
add
aas
call
push
adc
lds
or
rcr
aas
std
daa
mov
push
cmp
fcomp
movs
call
or
xor
inc
mov
sub
push
movs
aas
ins
sbb
pop
stos
mov
rcl
ret
jmp
lahf
loope
push
push
push
sub
cwde
jg
outs
mov
shl
mov
mov
loopne
push
aas
inc
xchg
fsub
xor
cmp
jo
mov
pop
arpl
mov
jo
push
push
cld
int3
rol
inc
push
cmp
and
sbb
xor
xor
fldenv
jl
out
push
bnd
lock
in
rcl
pop
jno
mov
fisubr
xchg
xor
mov
mov
(bad)
fnstcw
mov
in
aas
jbe
mov
fisub
(bad)
(bad)
call
cdq
mov
sub
add
mov
out
cld
cdq
jns
outs
addr16
mov
mov
lods
movs
arpl
hlt
pop
repnz
add
add
psllw
inc
call
fstp
cld
inc
(bad)
lahf
lods
push
aas
retf
cmp
sbb
xchg
add
push
stc
pop
stos
mov
shl
cli
adc
xchg
icebp
in
out
dec
pusha
ror
loope
pop
xlat
nop
mov
mov
aas
xor
std
(bad)
dec
push
fwait
sbb
mov
mov
aas
add
gs
in
xor
sbb
mov
int
push
mov
icebp
dec
sar
xchg
inc
ror
sub
es
ds
jg
(bad)
pop
mov
xchg
mov
in
out
aas
mov
cmc
call
aam
movs
nop
xlat
hlt
adc
mov
sbb
ror
mov
cmp
and
mov
jle
test
aaa
(bad)
push
aas
outs
dec
mov
aas
xor
stos
fnsave
and
inc
add
aam
sbb
xchg
nop
mov
icebp
and
add
(bad)
mov
fcom
(bad)
and
or
and
mov
pop
pop
cmps
ds
repnz
xchg
loop
(bad)
(bad)
(bad)
inc
retf
popa
bound
stc
into
adc
popf
pop
mov
adc
add
je
cmc
cli
push
cld
(bad)
(bad)
jg
sub
mov
adc
push
mov
xor
std
aas
lea
addr16
push
inc
pop
jo
dec
adc
or
sub
pop
pushf
sbb
outs
jge
or
sub
add
mov
loopne
(bad)
(bad)
call
(bad)
nop
aam
sbb
sub
inc
jmp
ins
jp
in
inc
repnz
inc
mov
in
mov
add
(bad)
fadd
add
pop
and
int
inc
sub
push
inc
aas
pusha
idiv
xor
sbb
inc
stos
stos
add
inc
(bad)
cmp
das
adc
and
cmps
into
mov
mov
pop
mov
inc
inc
inc
pop
add
sbb
das
aas
cmp
sar
xor
(bad)
(bad)
jg
jmp
shl
mov
in
mov
mov
adc
or
push
and
dec
and
mov
fcmovnb
test
fs
(bad)
(bad)
push
int
cmps
lods
call
or
mov
mov
cmc
inc
pop
mov
sti
(bad)
jg
int
mov
mov
pop
into
dec
into
mov
pusha
mov
xchg
lahf
iret
arpl
xchg
sub
fisttp
sub
push
and
call
lahf
pop
fisttp
mov
cmp
(bad)
(bad)
(bad)
(bad)
mov
pop
jle
mov
add
bound
das
pop
inc
lahf
aas
cmp
int3
push
pop
push
aad
(bad)
(bad)
(bad)
mov
out
dec
cmp
jmp
call
pop
push
mov
cld
(bad)
mov
inc
movs
push
mov
pop
ds
jp
xlat
push
sbb
jmp
mov
and
and
mov
fild
(bad)
aas
xchg
dec
into
pop
(bad)
mov
xor
(bad)
(bad)
aas
in
lock
xchg
popa
idiv
rcr
mov
(bad)
(bad)
(bad)
(bad)
in
shl
xor
pushf
aas
out
cdq
sar
sbb
leave
mov
arpl
jns
jmp
call
adc
out
mov
xchg
adc
pop
ds
dec
mov
(bad)
ds
call
mov
ror
lds
stc
inc
lock
ins
out
pop
xchg
inc
inc
push
movs
cwde
jge
cmp
add
mov
push
adc
sub
sahf
add
test
sub
push
(bad)
icebp
xor
hlt
(bad)
(bad)
jg
push
mov
mov
stos
inc
div
mov
(bad)
inc
sub
mov
in
mov
je
repz
mov
clc
(bad)
jg
mov
dec
pop
mov
sar
lahf
xchg
jg
mov
imul
adc
in
imul
jbe
sub
and
mov
aam
loop
sbb
xchg
mov
mov
ds
jae
fwait
mov
aas
adc
mov
(bad)
(bad)
(bad)
call
mov
je
iret
and
and
cmps
lock
dec
sahf
dec
lahf
ds
sub
xlat
stos
fs
scas
jae
arpl
(bad)
(bad)
(bad)
jl
cmp
sar
mov
cmp
cli
das
call
stc
psubw
ss
jg
mov
ret
adc
mov
repnz
inc
and
les
mov
sar
ds
(bad)
jmp
sub
scas
aad
out
clc
jns
cwde
and
sub
enter
(bad)
lds
xchg
aas
push
loop
das
sar
outs
xor
stos
jl
mov
(bad)
dec
xchg
(bad)
(bad)
(bad)
(bad)
ds
stos
loopne
inc
(bad)
bound
pushf
mov
imul
dec
fcom
xor
in
add
push
(bad)
ds
sahf
xchg
loopne
(bad)
int3
mov
jg
imul
pushf
adc
dec
leave
aas
cli
fdivr
and
mov
inc
movs
mov
call
mov
(bad)
jmp
hlt
jecxz
mov
sbb
aam
adc
xchg
aas
ins
push
or
mov
xor
outs
push
call
retf
jmp
push
popa
aas
sub
imul
bound
popf
dec
jmp
test
adc
pop
ds
aam
cdq
mov
outs
adc
mov
xchg
aad
int
push
adc
enter
pop
aad
call
mov
(bad)
popa
(bad)
aas
mov
jg
inc
(bad)
add
ins
rcl
cld
aas
call
ins
lea
addr16
mov
jmp
pop
xchg
jns
dec
ficom
or
xor
ja
sub
cmp
inc
iret
mov
sbb
ds
pop
enter
aas
ds
pop
and
aas
aas
mov
jg
xchg
or
in
aas
ds
dec
cs
aas
ds
push
sub
mov
leave
inc
jb
ds
pop
and
pop
ds
ds
sbb
enter
ds
and
adc
aas
ds
popa
xchg
mov
mov
mov
xor
cmp
in
ds
aas
fs
cmp
xchg
mov
aas
sbb
aas
mov
aas
cmp
aas
aas
aas
nop
xchg
or
aas
cdq
inc
inc
es
aas
es
and
mov
cdq
dec
rol
or
rol
inc
es
sar
rol
inc
es
mov
sbb
inc
mov
mov
mov
xchg
mov
sbb
dec
data16
mov
sbb
xchg
or
dec
inc
cmp
inc
inc
es
mov
sbb
xchg
or
mov
mov
xchg
mov
sbb
mov
cmp
and
es
xchg
or
inc
inc
mov
shl
mov
mov
or
or
ret
leave
ins
xor
inc
setg
inc
into
mov
fstp
addr16
dec
dec
and
aaa
loopne
test
inc
jae
add
cld
cs
cmp
(bad)
dec
iret
pusha
or
inc
adc
mov
mov
ins
pop
cs
mov
mov
sbb
ds
push
lods
xchg
mov
or
enter
bound
popf
xchg
jmp
mov
push
xchg
shl
xchg
imul
jl
cs
fdivr
enter
jns
cli
jae
cmp
cmp
fisub
mov
(bad)
aas
je
lds
xchg
lds
cmp
loope
and
aas
std
mov
int
(bad)
sbb
in
pop
push
mov
mov
xor
mov
loopne
ja
xchg
int3
xor
in
out
sahf
inc
pop
adc
aas
loope
add
in
mov
lods
aas
mov
fwait
jmp
repnz
outs
cli
pushf
nop
jg
dec
jle
mov
in
mov
cld
repnz
jne
inc
gs
mov
iret
imul
mov
clc
lods
jbe
mov
(bad)
push
inc
lahf
out
mov
xchg
push
push
aad
pop
push
pop
sbb
test
retf
(bad)
aas
not
bound
push
das
pop
pcmpgtw
shl
lock
mov
sar
mov
aas
mov
loopne
mov
mov
mov
jg
mov
loop
mov
mov
mov
jg
mov
call
jmp
(bad)
aas
mov
jg
mov
jmp
mov
mov
cmp
mov
leave
add
or
mov
es
or
mov
sub
aas
and
jg
or
mov
mov
fwait
pop
inc
(bad)
mov
bound
call
test
es
mov
scas
mov
pop
mov
in
mov
call
adc
push
jg
push
add
jg
call
stos
sar
sub
add
(bad)
cmp
call
and
jg
mov
push
adc
jg
pop
shr
(bad)
inc
stos
pop
push
jg
pop
or
dec
movsx
lods
mov
das
movs
aas
sbb
pop
push
mov
inc
push
movs
jecxz
(bad)
ds
cli
ds
les
popa
mov
cmp
xchg
scas
jge
arpl
das
inc
dec
or
mov
push
or
and
adc
mov
add
lahf
adc
or
dec
outs
dec
mov
inc
mov
clc
ret
movs
add
add
xor
xchg
add
xchg
xchg
add
ins
ret
mov
ins
ret
pushf
mov
inc
mov
or
dec
dec
add
fild
test
test
xchg
sbb
pop
or
(bad)
clc
in
xchg
mov
add
add
add
and
sub
xor
cmp
enter
inc
or
push
or
cmp
pop
or
jo
xchg
and
js
adc
adc
jb
enter
adc
and
sbb
sbb
jb
enter
sbb
pop
mov
call
and
xchg
and
and
and
cmp
daa
sub
xor
cmp
enter
inc
sub
sub
jb
pop
ss
aaa
push
and
js
cmp
inc
cmp
enter
inc
mov
inc
mov
inc
mov
jb
enter
dec
fmul
push
pop
mov
call
pop
xchg
add
retf
mov
int3
add
add
add
cmp
retf
add
sub
int3
cwde
add
mov
inc
pop
dec
or
iret
hlt
or
xchg
mov
fs
jo
jl
mov
mov
xchg
adc
sbb
cmp
mov
das
lods
adc
mov
and
rcr
fcomp
call
retf
hlt
sbb
sbb
and
sbb
pop
xor
cmp
dec
jb
enter
and
ins
and
js
test
nop
sub
test
mov
shr
das
in
lock
xor
xchg
or
adc
and
sbb
jb
sub
cmp
inc
cmp
xchg
and
pop
aas
push
jb
enter
inc
movs
inc
mov
and
sbb
inc
enter
loopne
in
xchg
dec
in
dec
clc
dec
xchg
add
inc
mov
adc
push
sub
push
in
xchg
and
push
gs
imul
jb
ins
add
or
(bad)
pop
iret
add
movs
or
mov
sbb
jb
mov
adc
adc
das
inc
mov
push
clc
sbb
in
sbb
sub
inc
ds
inc
and
(bad)
sbb
imul
add
in
xchg
pop
cwde
or
sbb
mov
imul
in
xchg
xchg
adc
add
or
adc
mov
jb
or
cmp
inc
cmp
xchg
xchg
inc
push
add
add
pop
sbb
jb
js
test
nop
or
sbb
cmp
add
ror
stc
jb
enter
or
sbb
pop
push
sbb
sbb
or
inc
repnz
cmp
je
das
(bad)
sbb
or
cmp
repnz
or
cmp
add
push
push
cmp
fmul
call
cdq
add
in
xchg
and
sbb
xor
mov
add
or
xchg
xchg
inc
pusha
add
ins
or
cmp
jns
in
or
test
inc
retf
xchg
das
pop
mov
dec
ror
int3
or
pusha
in
fadd
in
hlt
push
inc
xor
retf
or
pusha
cdq
cld
jno
add
xchg
and
call
sbb
jb
sub
cmp
xchg
and
pop
shr
je
cmp
enter
fcomp
pop
mov
mov
das
mov
jb
fwait
loopne
or
clc
arpl
repnz
adc
add
adc
ins
sub
mov
add
xor
pop
cmp
jb
add
inc
cmovl
fld
push
mov
jb
xchg
jl
mov
ss
mov
enter
pop
mov
inc
or
in
int
lods
loopne
in
xchg
xchg
and
clc
mov
mov
jb
enter
shl
inc
shr
inc
sbb
shl
pop
pop
ror
sbb
jb
fnsave
jl
mov
xchg
shl
in
mov
xchg
fsub
and
sbb
mov
loope
jno
enter
fisub
xor
enter
pop
and
cmp
push
sub
xor
push
push
(bad)
aas
pusha
dec
jo
ins
jae
pushf
sbb
xchg
je
xchg
and
dec
test
mov
and
out
ds
ror
dec
mov
or
fmul
das
fst
rcr
scas
lss
out
cld
pop
daa
or
xchg
cmp
inc
sub
adc
inc
pop
pop
cmp
enter
push
sub
js
inc
mov
push
adc
push
sbb
fwait
adc
sub
xor
sar
je
into
mov
aas
or
ss
jns
and
test
and
data16
ror
sub
ins
fadd
aaa
cmp
cmp
ja
enter
xor
popf
setg
ja
data16
adc
and
adc
sbb
jb
sub
cmp
cwde
adc
daa
mov
xchg
ss
pop
jle
xchg
mov
xlat
adc
push
jb
in
je
jo
lahf
in
push
lods
test
push
fistp
mov
cmp
test
loopne
in
jbe
pushf
ss
dec
xchg
sbb
mov
sbb
jb
adc
mov
lea
inc
mov
retf
ins
mov
pop
jl
cdq
hlt
jecxz
ret
and
mov
cdq
jecxz
(bad)
sbb
call
mov
sub
xchg
inc
pop
or
pushf
dec
lea
or
cmp
daa
sbb
xor
das
xor
outs
call
sbb
pop
pop
jl
and
in
add
mov
cmp
xchg
jnp
daa
lods
imul
aam
stc
jb
enter
mov
stos
leave
js
sbb
inc
and
pusha
sbb
jb
push
jmp
push
cmp
add
ins
repnz
jae
fs
gs
xchg
xchg
xchg
ins
outs
jae
add
fucomip
mov
jne
imul
je
push
add
mov
leave
in
outs
pop
jo
pop
jb
jb
pop
fld
push
jno
retf
leave
xchg
jbe
add
jne
repnz
imul
pop
outs
bound
gs
sbb
gs
(bad)
ins
pop
data16
fcmovu
sub
mov
jp
mov
scas
ins
cs
mov
in
jbe
outs
imul
dec
mov
scas
jne
push
mov
popf
addr16
sub
gs
outs
mov
fsubr
outs
ins
popa
mov
aas
jns
mov
das
sub
jbe
loop
mov
push
inc
xor
mov
pop
daa
inc
pop
das
push
inc
add
inc
aas
sub
fdiv
push
inc
add
das
clc
mov
sub
jmp
das
push
pop
je
aaa
mov
dec
push
bound
jo
shl
dec
addr16
out
rcl
push
jne
xlat
inc
sbb
dec
ja
movs
sub
jbe
es
popf
retf
je
pop
jb
(bad)
in
mov
out
dec
dec
fs
cmps
(bad)
movs
popa
xchg
pop
cmps
ins
ja
cmp
dec
mov
mov
repnz
push
pop
je
xlat
cmps
fcom
xchg
ja
(bad)
jbe
dec
dec
out
pop
pop
imul
jo
loop
pop
jne
pop
mov
dec
ds
js
fcmovnbe
div
addr16
retf
mov
inc
outs
pop
outs
xchg
scas
shl
je
fisttp
das
jae
mov
push
dec
add
inc
xchg
pop
fild
xchg
push
in
mov
div
es
ret
sahf
mov
pop
pop
pop
das
je
call
fdiv
jb
jae
shl
ins
pop
dec
arpl
mov
ret
rcl
imul
push
mov
fbstp
jno
mov
mov
add
jae
ins
cmps
dec
pusha
rcr
sbb
stos
push
scas
sbb
pcmpgtw
jne
outs
mov
addr16
ins
ficomp
das
data16
dec
xor
addr16
arpl
xchg
imul
scas
or
push
mov
(bad)
dec
xchg
inc
mov
mov
call
add
cmp
sbb
dec
stc
or
mov
inc
add
fdiv
mul
inc
xor
pusha
adc
idiv
jl
add
add
add
fld
dec
fild
test
test
ss
push
mov
dec
add
out
call
inc
outs
aas
mov
mov
or
fdivr
inc
inc
outs
fcom
les
imul
daa
pop
inc
dec
xchg
pop
inc
dec
add
mov
pop
xchg
push
dec
addr16
jae
pop
ss
dec
outs
xlat
xor
dec
outs
pop
jb
aad
mov
inc
dec
jg
push
out
mov
dec
inc
idiv
pop
inc
inc
dec
das
outs
mov
dec
aas
dec
inc
inc
pop
jbe
jbe
push
aaa
das
inc
pop
push
das
outs
pop
imul
add
dec
add
dec
pop
shr
push
cmps
mov
mov
jae
aas
data16
xlat
or
sbb
bound
push
and
jnp
addr16
imul
pop
repnz
imul
ins
add
sbb
imul
jno
fisub
jae
ja
mov
jb
addr16
or
or
ins
mov
das
or
or
imul
les
pop
ret
out
push
fmul
addr16
out
jl
das
add
pop
fsubp
(bad)
ficom
pop
or
retf
cmps
add
pop
jne
ins
or
(bad)
jb
popa
dec
xlat
push
inc
sahf
pop
bound
jp
pop
bound
imul
jb
add
jo
push
or
jne
jae
push
jecxz
dec
push
ja
inc
xchg
jl
ins
pop
jmp
and
or
in
scas
pop
jae
add
outs
inc
ds
ins
add
add
fimul
bound
gs
sbb
jns
das
repnz
leave
jne
ja
aaa
gs
scas
(bad)
in
outs
imul
mov
or
pop
pop
mov
xchg
pop
daa
mov
ins
dec
pop
out
jge
mov
imul
push
das
out
popa
pop
adc
outs
or
or
popa
ret
sbb
or
dec
icebp
jecxz
mov
or
pop
cmp
inc
fisttp
(bad)
jg
jecxz
jge
pop
dec
jb
jns
jo
icebp
ss
or
ja
mov
or
mov
fist
sub
inc
mov
lahf
or
pop
cmp
dec
sbb
mov
or
jae
mov
(bad)
xlat
inc
or
mov
or
rol
push
pop
push
call
jae
xchg
ja
hlt
or
sti
cmp
(bad)
call
retf
in
in
dec
pop
or
imul
or
pop
in
outs
outs
imul
push
int3
(bad)
outs
sti
pop
jae
inc
out
(bad)
jno
ins
pop
das
pop
adc
pop
pop
mov
add
pop
jns
lock
repz
div
imul
je
out
mov
gs
push
cmp
or
lds
addr16
pop
jne
jo
stc
inc
jne
and
data16
pusha
sub
inc
out
push
pop
jbe
ja
fsubr
jmp
mov
cmp
push
iret
pop
ins
add
sub
jbe
das
iret
add
add
sub
xchg
scas
xchg
and
adc
and
adc
add
and
and
add
rcl
add
add
xor
loopne
add
add
mov
push
add
aaa
inc
sbb
push
add
pop
mov
add
shr
and
push
sub
add
xchg
mov
(bad)
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
(bad)
(bad)
jmp
scas
scas
mov
mov
mov
mov
mov
mov
ret
(bad)
enter
dec
retf
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
(bad)
dec
add
jmp
bound
add
cli
xchg
adc
push
js
add
push
cmps
ds
mov
mov
add
or
outs
js
xchg
sbb
je
out
(bad)
gs
imul
popa
jae
push
les
sub
push
gs
movs
or
jg
test
xor
xchg
push
add
add
add
test
dec
adc
or
daa
cmp
add
pop
js
push
mov
sub
jb
push
ret
dec
or
js
jo
add
and
test
gs
xchg
(bad)
out
xchg
mov
aas
popf
ja
and
pop
mov
cmc
scas
aas
sub
ss
out
addr16
das
mov
sbb
mov
jmp
and
push
xchg
pusha
je
pop
add
mov
aas
cwde
enter
in
(bad)
popa
add
(bad)
ret
aas
xchg
clc
ja
(bad)
out
les
jnp
(bad)
aas
or
adc
jb
enter
stc
jg
xlat
nop
retf
aas
and
and
add
jne
iret
aas
call
dec
enter
cmc
mov
aas
inc
retf
mov
call
ja
sar
lods
lds
pop
aas
dec
(bad)
jg
aam
lods
xor
aas
jo
mov
aam
adc
or
(bad)
aas
inc
adc
fmul
dec
mov
aas
jmp
mov
in
(bad)
out
fidivr
jge
mov
pop
popa
cs
mov
fdivr
fs
scas
or
iret
clc
sahf
in
fiadd
lods
fnstsw
leave
fisttp
leave
jmp
daa
loopne
fld
aas
shl
mov
repnz
loope
jle
loopne
test
test
loop
aaa
sti
neg
ds
or
jecxz
or
stc
fwait
loopne
pop
fwait
lahf
cmc
idiv
in
mov
dec
dec
or
in
lock
jecxz
pushf
or
int
xchg
sbb
mov
mov
(bad)
adc
outs
das
aaa
iret
out
xchg
sahf
test
and
div
das
jb
dec
call
aas
imul
jmp
test
rcr
cmp
in
ins
into
add
and
jmp
cmps
into
aaa
push
outs
call
out
arpl
(bad)
and
repnz
shl
(bad)
fisttp
stc
fwait
mov
cld
cmc
lahf
mov
push
mov
push
dec
cmp
push
cs
adc
add
sbb
fwait
pusha
mov
cmp
mov
fcomp
sub
pop
jl
and
cmp
sub
pop
icebp
das
pop
fdivr
out
mov
jmp
add
aas
xchg
jb
in
daa
or
das
mov
jb
mov
out
sti
in
cmp
sbb
das
in
jo
cmp
and
adc
out
fsub
(bad)
mov
imul
lods
jl
or
daa
pop
sbb
jl
iret
hlt
pop
loop
test
sub
push
jg
fcmovnu
cld
das
int3
push
outs
xlat
mov
dec
push
js
pop
cmc
sub
fwait
cld
int
retf
sbb
outs
sbb
inc
frstor
or
arpl
imul
inc
and
fcmovnu
xchg
cmc
js
jl
xor
jl
rcr
scas
pushf
cld
(bad)
fstp
cmp
adc
jo
and
aas
mov
lea
(bad)
es
ror
jae
js
fnstenv
int
clc
mov
gs
cs
in
outs
xchg
icebp
sub
pop
mov
cmps
inc
pop
mov
das
push
pop
mov
stc
retf
pop
and
dec
push
inc
pop
mov
push
dec
(bad)
out
adc
pop
loope
ror
cli
inc
into
xchg
mov
lahf
es
sahf
ret
dec
lahf
mov
xchg
xchg
mov
sbb
(bad)
rcr
outs
scas
pushf
cld
and
movs
daa
call
repnz
pop
int
outs
jle
in
(bad)
aas
cs
or
aam
std
int
in
jge
pop
pop
std
das
clc
gs
dec
sbb
inc
leave
fistp
std
aam
dec
test
nop
aas
cmp
retf
sbb
mov
sub
fwait
sub
add
dec
dec
leave
fistp
pushf
xor
dec
call
(bad)
out
loope
int
arpl
repnz
inc
mov
cmp
jg
sub
rcr
push
call
inc
mov
aam
icebp
imul
lods
in
cdq
std
inc
scas
into
sar
das
shl
sbb
push
xchg
mov
(bad)
dec
mov
das
push
inc
mov
test
mov
mov
fwait
sub
xchg
pop
mov
adc
sar
leave
fistp
push
out
jo
push
dec
mov
out
add
test
sub
xor
outs
pop
xor
mov
daa
jg
or
jae
add
add
pop
cmp
fwait
rcl
fsub
add
mov
mov
leave
fist
rol
das
push
out
ffreep
sub
or
add
and
push
cli
push
jg
dec
das
js
or
fisub
add
cld
in
xor
jmp
(bad)
out
das
add
sub
ret
mov
stc
pop
mov
stos
xor
mov
cmp
fwait
dec
fwait
xlat
or
dec
add
retf
fadd
pop
aam
or
lock
(bad)
dec
(bad)
in
sti
cmps
sbb
mov
icebp
lds
(bad)
cmp
ins
push
push
loop
pop
push
cld
int
xchg
sub
dec
aaa
pushf
mov
cmp
in
scas
pushf
push
test
push
xchg
cmovb
jg
in
xor
mov
jmp
sub
(bad)
sbb
es
xchg
xchg
mov
push
clc
inc
pop
lods
cld
add
inc
(bad)
jo
ins
add
pushf
sub
fist
adc
push
mov
jmp
sub
dec
or
lds
hlt
aas
sub
lds
fdivrp
dec
das
push
cmp
shl
aaa
jg
inc
mov
jne
in
inc
jecxz
mov
das
inc
jo
mov
push
adc
stc
xor
pop
movs
cmp
mov
mov
or
(bad)
out
retf
inc
div
aaa
or
push
mov
push
pusha
inc
retf
or
xchg
mov
lea
sbb
pushf
cld
mov
xchg
das
loopne
or
sbb
fsubrp
aas
pop
add
jnp
out
(bad)
xor
mov
sbb
(bad)
loope
das
(bad)
jecxz
mov
nop
(bad)
shl
xchg
xchg
(bad)
das
loopne
call
sbb
stc
fist
mov
fwait
jne
or
adc
jbe
dec
sub
bound
or
movs
mov
cld
dec
(bad)
sbb
es
int
inc
das
mov
jge
jecxz
pop
jns
sti
dec
mov
dec
outs
mov
mov
mov
das
js
mov
sbb
mov
test
or
ss
dec
inc
sbb
and
dec
in
mov
dec
(bad)
out
or
adc
adc
push
call
es
jb
(bad)
iret
cld
inc
xchg
sti
cmp
inc
aas
push
repz
stc
dec
cmc
aas
adc
push
push
or
pusha
ja
inc
push
jne
test
movs
jmp
clc
test
int
in
outs
xchg
mov
mov
pop
add
pop
mov
sti
push
dec
mov
into
scas
mov
retf
sub
cmp
and
push
dec
sete
iret
jmp
ja
das
or
ds
xchg
dec
arpl
out
in
das
shl
adc
xchg
pop
inc
(bad)
out
cmps
dec
add
dec
pusha
dec
into
push
sti
xor
aaa
test
or
cmp
pop
out
fwait
das
and
enter
stos
cmp
sbb
imul
test
shr
push
sbb
out
enter
xor
xchg
dec
adc
xor
das
inc
add
sbb
push
mov
cs
and
in
jl
call
retf
enter
sub
in
and
mov
inc
(bad)
out
nop
mov
(bad)
aad
outs
dec
and
loopne
leave
outs
mov
test
xchg
int
xchg
mov
xchg
and
inc
pushf
push
outs
scas
pushf
cld
push
stos
js
jg
adc
mov
cld
jae
in
mov
xor
test
pop
and
mov
adc
xor
lods
in
cmp
mov
fistp
dec
or
or
(bad)
out
adc
mov
xlat
shl
repnz
push
pop
ja
or
mov
adc
lds
mov
ret
inc
pushf
retf
cmp
jg
cli
cmp
loopne
adc
xchg
or
fcmove
fistp
adc
in
test
retf
into
fidiv
fbstp
jb
aaa
push
push
jne
jl
cmp
xchg
xchg
mov
inc
sbb
cmp
shr
shr
int3
jnp
out
enter
adc
outs
das
and
hlt
aaa
pop
inc
(bad)
js
xchg
clc
adc
loopne
jae
retf
aad
fistp
ins
test
adc
push
inc
repnz
enter
shr
ficomp
cmp
inc
or
pop
add
cmp
fbld
lock
or
pop
push
and
jg
in
(bad)
das
mov
stc
xor
inc
mov
mov
dec
and
dec
shr
jl
stc
fwait
sbb
sbb
pop
jae
enter
mov
pop
dec
inc
add
das
and
movs
xlat
scas
add
inc
and
jecxz
mov
jl
stc
xchg
and
and
sub
sub
in
fiadd
enter
mov
scas
imul
cmp
out
popa
repz
mov
cmp
lea
mov
inc
inc
dec
xchg
adc
movs
dec
inc
push
cmp
push
inc
dec
inc
int
add
neg
leave
fistp
inc
popa
jo
dec
xor
(bad)
out
addr16
movs
cdq
cmp
in
arpl
jb
aaa
movs
repnz
push
inc
push
push
fwait
mov
xor
enter
fcmovu
jl
stc
addr16
das
mov
jbe
or
(bad)
out
enter
adc
pop
shl
shl
(bad)
jns
inc
mov
jle
and
sbb
in
push
inc
pop
sbb
fs
out
movs
sahf
(bad)
and
pop
das
adc
push
shl
dec
inc
sbb
fwait
das
xor
imul
sbb
jge
pusha
retf
enter
push
mov
mov
cld
out
(bad)
jb
fwait
clc
add
mov
test
test
or
stc
or
inc
push
jp
(bad)
inc
daa
cmp
xchg
loopne
mov
or
in
in
add
in
aaa
push
mov
xor
lock
jg
fsub
push
loop
adc
inc
je
stc
xor
mov
mov
push
or
sbb
(bad)
push
xor
jmp
mov
or
sahf
mov
xchg
jle
lea
aaa
stc
enter
dec
das
dec
jmp
enter
cmp
stc
fwait
das
and
cmp
cwde
(bad)
mov
scas
sbb
sbb
fwait
retf
and
mov
cld
mul
inc
jne
pop
out
xchg
repnz
cld
das
pushf
xchg
mov
shl
pusha
pop
inc
(bad)
out
stos
movs
pop
mov
cmp
test
xor
jge
mov
xchg
xchg
mov
jns
cmp
mov
lods
ins
mov
push
pop
add
loopne
mov
outs
scas
mov
pop
shl
pusha
or
sbb
lods
mov
fs
jae
in
idiv
sbb
mov
cmp
mov
inc
stc
fwait
sub
sbb
mov
test
jl
xchg
adc
mov
retf
xor
sti
loop
sbb
aaa
push
and
ret
sub
xchg
xchg
mov
xchg
sti
call
xor
jl
pushf
cld
int
(bad)
pop
jae
stos
mov
inc
sbb
dec
retf
in
stos
fs
xchg
push
sbb
push
dec
fwait
sub
jg
lods
movs
xor
dec
dec
sbb
iret
imul
fistp
(bad)
xor
pop
pop
ror
(bad)
out
leave
jp
sbb
aam
mov
mov
aaa
push
dec
sbb
fwait
xlat
(bad)
(bad)
jmp
mov
xor
mov
mov
xchg
sbb
fdiv
outs
lods
in
stos
sbb
in
out
das
cld
push
fbld
test
and
(bad)
not
fsub
pop
sti
jp
xchg
inc
add
cmp
repnz
and
icebp
inc
arpl
aad
mov
push
fisub
call
pop
(bad)
jl
stc
hlt
add
mov
ins
and
mov
cmp
out
sbb
cld
int
xchg
and
(bad)
lock
dec
enter
sbb
iret
sahf
dec
cli
test
out
das
dec
dec
cmc
call
inc
gs
pop
push
mov
ret
dec
iret
sub
dec
repz
stc
cmp
idiv
std
sub
inc
cld
repz
test
jnp
jg
inc
mov
das
and
inc
pop
retf
xchg
jg
rol
das
sbb
push
push
xchg
nop
jg
clc
or
call
xor
sbb
xor
push
inc
add
dec
call
das
push
dec
sar
lods
das
enter
inc
cmp
or
mov
jne
inc
(bad)
out
pusha
mov
or
mov
pusha
xchg
sub
aaa
pop
add
call
das
pop
inc
(bad)
out
and
ins
add
shl
adc
xor
aaa
jle
sub
mov
lods
pop
adc
retf
rcl
rcl
add
sub
push
outs
pop
inc
(bad)
pop
jnp
mov
inc
and
mov
cld
int
leave
ror
inc
das
mov
xor
dec
or
in
mov
sbb
inc
ficom
jg
and
mov
stc
fwait
das
cwde
cmps
and
sub
rcl
mov
cmps
sub
loopne
dec
inc
push
or
inc
and
test
add
(bad)
rol
fsub
cmp
out
lock
lds
adc
dec
cmp
repz
cmp
iret
repz
pushw
retf
adc
inc
repz
cmp
pop
fs
ins
jo
js
cmp
cmp
nop
xchg
cwde
pushf
repz
repz
iret
repz
mov
mov
iret
repz
rcl
fcomp
repz
repz
call
cmp
hlt
clc
cld
mov
sahf
out
sahf
or
sub
jns
out
pop
ins
mov
in
(bad)
or
dec
jo
repz
nop
mov
sahf
out
ss
cmp
sahf
out
test
mov
sub
mov
in
pop
pop
bound
gs
push
test
es
repnz
mov
je
push
ins
je
imul
push
popaw
jae
push
mov
imul
xor
jb
jb
arpl
mov
imul
and
sti
push
ins
gs
fwait
ins
and
arpl
push
and
cmp
cmp
pop
pop
push
jo
jb
je
mov
dec
inc
sub
out
mov
pop
push
es
sub
das
out
cmps
mov
ds
push
sub
in
int
sub
data16
jl
fdiv
mov
sub
fisubr
push
push
pop
jmp
jbe
je
pop
daa
add
bound
adc
jns
outs
data16
or
fbld
ins
outs
sub
jae
arpl
addr16
sbb
jbe
das
add
pop
int3
pop
jbe
add
jne
mov
daa
adc
push
cmp
fs
(bad)
stos
and
outs
xor
fdiv
jb
mov
fdiv
jae
jg
jge
mov
mov
push
(bad)
push
aas
jne
mov
imul
jo
nop
adc
add
gs
adc
inc
or
aas
or
movs
sub
push
pusha
jne
and
sub
test
push
ins
adc
js
push
push
dec
ja
pop
mov
pop
pop
aam
jge
adc
outs
ins
mov
sub
into
add
sbb
loope
sub
aaa
cmp
mov
mov
jns
xchg
dec
add
xor
dec
lahf
xlat
mov
mul
fdivr
cmp
inc
nop
sar
mov
cmp
push
lock
das
inc
mov
push
inc
xor
pop
je
or
aad
repnz
lods
stos
loopne
inc
bound
jo
and
pusha
(bad)
fiadd
or
mov
jnp
test
jns
sbb
mov
or
popf
ds
or
sub
daa
lods
and
fcom
inc
cmp
lahf
(bad)
jb
push
ss
enter
and
inc
dec
cmovns
add
push
xchg
and
and
xchg
jbe
xor
cmps
mov
add
mov
mov
dec
inc
pop
in
fidivr
dec
jae
push
cmp
add
aaa
adc
lea
dec
sahf
sbb
pusha
mov
das
xchg
loopne
ficom
push
out
mov
imul
push
jnp
cmp
xor
xchg
pop
in
rcl
dec
mov
retf
fimul
fwait
call
imul
push
sub
movs
ja
sub
dec
mov
add
inc
sub
loopne
dec
push
mov
pop
sar
adc
inc
das
(bad)
mov
(bad)
push
adc
in
loope
xor
dec
(bad)
out
push
sahf
pop
sbb
lods
pop
js
outs
iret
jne
mov
xor
and
inc
pushw
ret
ja
mov
stos
pop
arpl
xor
xchg
dec
les
fist
aas
outs
das
or
and
mov
jbe
xchg
push
inc
jo
rcl
push
xor
dec
stos
jae
jb
xchg
pusha
sti
cmps
sub
mul
test
mov
aas
jae
adc
and
sbb
scas
adc
jno
mov
mov
cli
adc
je
rol
inc
test
ss
iret
push
mov
inc
push
inc
aas
push
pop
push
mov
mov
addr16
in
push
xor
xor
xor
in
in
ss
cmp
in
in
cmp
dec
mov
cmp
cs
push
vmwrite
and
inc
repnz
cmp
inc
ds
push
add
adc
push
push
jecxz
cmp
mov
push
cmp
add
iret
push
inc
or
sub
out
push
das
xchg
pop
dec
cmps
pandn
add
add
and
xchg
inc
pop
sti
jo
(bad)
aas
add
inc
cs
xor
xor
cs
xor
ss
out
inc
cs
cmp
lds
pop
inc
daa
pop
pop
ficom
inc
daa
out
push
daa
ja
xor
test
pop
inc
or
push
fst
pop
(bad)
(bad)
ficomp
inc
aaa
pop
push
mov
pop
lods
out
outs
xor
pop
inc
pop
in
cwde
mov
aaa
push
nop
(bad)
adc
dec
inc
aas
aad
scas
mov
fadd
push
mov
pop
pop
and
scas
test
jmp
dec
ret
inc
xchg
test
call
dec
shl
jbe
das
sub
loope
pop
cmps
pop
push
push
inc
and
pop
scas
das
push
fist
xor
push
das
xlat
pop
pop
imul
(bad)
test
dec
call
arpl
xchg
addr16
rol
cmovg
femms
xchg
rcr
es
dec
nop
sub
bound
push
dec
mov
inc
scas
pop
adc
stos
pop
mov
xor
adc
add
jcxz
mov
fisttp
cmp
aas
ins
add
(bad)
mov
pusha
sbb
jg
xchg
pop
xor
inc
js
test
and
sbb
dec
dec
sub
sub
fadd
sub
dec
cmp
(bad)
add
add
inc
inc
mov
cmp
int
(bad)
(bad)
cld
push
(bad)
cli
jmp
jp
out
mov
std
or
icebp
jmp
(bad)
out
(bad)
clc
pop
in
dec
out
idiv
jmp
es
stos
and
(bad)
pusha
(bad)
es
call
(bad)
div
pop
in
push
in
or
test
aam
or
push
mov
das
call
imul
pop
call
fwait
popf
imul
add
add
aaa
add
add
sbb
leave
add
add
or
scas
add
lods
mov
add
mov
or
pop
add
add
add
mov
push
add
add
clts
add
or
or
or
das
or
pop
in
dec
sahf
add
or
or
retf
push
add
push
and
mov
adc
xor
or
add
imul
inc
or
adc
jle
adc
adc
add
sbb
aas
pop
xchg
pop
sti
sbb
mov
or
cmps
sbb
or
rol
sbb
or
pop
inc
adc
arpl
and
and
and
daa
add
and
daa
sub
sub
jne
das
ss
xor
jbe
fidiv
or
and
xor
inc
int3
out
jbe
xor
adc
aaa
add
add
repz
and
mov
inc
inc
(bad)
pusha
sbb
sbb
lahf
in
add
add
ja
and
dec
add
dec
das
sbb
and
dec
outs
dec
jnp
mov
outs
push
add
push
xchg
push
jle
mov
push
add
add
pop
outs
jnp
cmp
adc
pop
sub
or
imul
jmp
push
xchg
add
mov
add
xchg
and
pushw
pushw
mov
push
aam
popf
inc
imul
inc
add
imul
xchg
dec
cmp
push
ret
popa
idiv
ins
push
jo
jno
rol
add
jae
mov
jne
ja
fisubr
pop
mov
jnp
jl
jge
jle
shl
sti
pop
jg
add
jle
mov
pop
(bad)
das
out
xchg
mov
mov
add
sti
repnz
xchg
add
xchg
add
paddsw
xchg
add
call
pushf
add
add
inc
repnz
mov
inc
leave
inc
movs
cmps
out
mov
test
test
adc
sahf
pop
adc
fisubr
push
nop
das
stc
mov
ins
add
mov
add
mov
retf
cmp
test
add
mov
or
mov
jg
add
jae
nop
mov
mov
mov
mov
mov
push
mov
xchg
sub
pusha
add
mov
lds
sbb
imul
add
sub
and
xchg
stos
add
inc
mov
add
add
push
add
jae
xor
ins
les
in
nop
mov
mov
mov
in
leave
retf
out
retf
int3
add
retf
push
leave
adc
rol
iret
push
aaa
mov
inc
ds
add
shl
aam
ins
mov
add
leave
xchg
cmovs
aad
add
stc
sahf
outs
add
aad
xchg
or
adc
repnz
dec
mov
cmp
cmp
add
push
ins
ja
nop
fild
fild
fadd
ins
add
ficom
in
stos
lsl
jnp
jbe
inc
mov
fdivp
js
mov
pop
cmovae
test
ficom
sar
jns
jbe
add
loopne
neg
mov
loop
cmps
jecxz
in
in
adc
pop
in
shr
or
ins
ins
pop
sar
bound
das
lsl
in
out
mov
add
fidivr
out
push
jmp
mov
aaa
pop
ins
fnstsw
jmp
and
das
out
mov
lahf
ja
jmp
in
sub
out
add
mov
enter
lsl
mov
push
pop
mov
in
lock
add
adc
in
push
lock
(bad)
mov
repnz
jge
xlat
add
add
or
add
pop
sub
ins
push
fisttp
jg
fstp
jns
div
add
push
neg
neg
mov
mov
pmuludq
scas
in
add
stc
cli
inc
jbe
sti
push
imul
ins
add
inc
ins
in
inc
ins
lsl
fisubr
out
push
inc
cld
fcmovu
mov
add
movlps
mov
imul
push
push
or
sub
ins
xor
es
ins
mov
add
add
xor
mov
sub
add
retf
shr
push
jmp
inc
jo
or
jae
add
and
adc
pop
pop
inc
add
lahf
sbb
or
add
mov
add
or
or
dec
fiadd
or
pop
movd
or
call
or
or
xor
data16
add
push
sgdtd
or
fisubr
xor
xchg
retf
adc
fisub
sbb
add
das
push
add
fdivr
aaa
push
adc
jnp
adc
add
pop
pusha
out
adc
mov
push
push
dec
add
add
sbb
in
pop
ins
add
add
pop
push
or
dec
cmp
imul
pop
jnp
add
or
add
or
xchg
sbb
dec
xchg
or
add
jb
mov
in
ja
ds
and
pop
and
jb
and
push
or
and
sub
or
ret
fisubr
lds
es
and
fist
sub
lahf
add
sbb
mov
repnz
and
adc
push
and
or
cs
in
sub
sub
sub
leave
aad
(bad)
sub
add
imul
sbb
ins
mov
dec
sub
sub
mov
aas
aas
sub
enter
movups
add
das
add
add
xor
inc
lds
xor
xor
pop
add
sbb
mov
ficom
push
push
mov
lahf
cmp
icebp
push
pop
inc
dec
sub
stos
add
add
aaa
xchg
cmp
jae
cmp
add
and
ins
add
iret
add
cmp
push
and
and
add
rol
inc
lahf
inc
add
in
loopne
es
inc
add
dec
add
add
inc
cmps
fimul
test
inc
add
inc
push
ss
and
add
in
adc
cdq
dec
jg
add
and
fild
push
dec
add
mov
add
dec
dec
or
dec
and
ja
sbb
dec
(bad)
mov
ins
push
add
ins
add
ffree
add
push
add
or
gs
add
push
push
add
pop
sbb
pop
add
add
push
ror
sub
and
fstp
jbe
add
jg
add
pop
retf
ret
pop
mov
in
fiadd
aas
pop
adc
add
pusha
scas
inc
dec
sub
add
popa
or
fsub
mov
sub
and
repnz
add
add
mov
push
imul
ins
mov
adc
(bad)
out
imul
(bad)
add
ja
jo
add
aas
in
rol
jno
add
ins
add
nop
inc
dec
adc
jne
fcmovnu
mov
add
(bad)
aas
jbe
sub
nop
test
movs
ss
jae
mov
and
jp
(bad)
stos
jne
fist
jp
jl
mov
jge
add
(bad)
push
or
sbb
pop
pop
or
add
add
ret
into
sti
test
add
mov
xchg
xchg
mov
and
aas
mov
enter
mov
pop
ins
sub
add
inc
mov
enter
jmp
add
inc
jle
add
outs
ds
nop
fisub
inc
mov
pop
adc
rcl
fwait
add
ins
daa
push
mov
xchg
add
push
test
xchg
add
xchg
adc
push
xor
add
xchg
in
imul
jnp
mov
jg
pop
mov
pop
inc
pop
mov
xchg
add
pushf
out
pushf
jg
inc
add
add
out
inc
xor
push
xchg
je
lahf
add
add
push
add
mov
imul
mov
cmp
aas
je
popf
movs
add
outs
outs
mov
mov
xchg
push
add
fst
add
add
mov
or
add
mov
add
cmp
xchg
(bad)
pop
str
or
mov
rol
push
xor
xlat
stos
out
add
mov
repnz
cmps
add
or
adc
sub
sbb
mov
add
dec
add
jb
add
daa
dec
clc
adc
mov
mov
adc
adc
mov
xchg
or
add
scas
loop
mov
dec
scas
add
popa
xchg
ins
pop
sbb
(bad)
fnstsw
add
cmps
mov
add
add
adc
add
aas
xlat
push
ss
sbb
or
stos
lods
sbb
xchg
nop
add
mov
adc
addr16
push
inc
mov
ss
adc
or
jg
and
dec
mov
test
add
ss
sbb
or
pop
test
loopne
mov
push
adc
jae
sub
(bad)
popa
adc
ins
push
adc
jg
fild
mov
and
xchg
out
stos
cmp
add
or
push
push
pop
or
fistp
adc
add
jns
les
push
enter
add
sub
jb
add
mov
adc
add
add
add
inc
cdq
iret
mov
or
les
verw
dec
outs
pop
lds
(bad)
jmp
sub
add
adc
aaa
mov
leave
or
add
pop
add
retf
daa
mov
mov
sub
into
ret
(bad)
mov
push
add
lods
add
and
or
ins
adc
rol
jns
fidiv
ins
push
enter
add
add
push
sub
adc
inc
pop
or
shl
rcl
mov
scas
jb
out
or
aaa
add
fwait
bound
(bad)
adc
mov
psrlq
add
sub
push
add
add
jnp
sar
sbb
add
aad
xlat
add
adc
or
inc
xchg
sahf
push
jg
pop
ret
add
add
adc
ins
push
xchg
dec
sub
mov
push
jg
push
cmps
push
inc
xlat
scas
fmul
add
add
sbb
or
fadd
sub
fadd
add
add
sub
adc
dec
inc
aas
fild
add
adc
iret
and
cs
jecxz
in
in
loopne
sub
push
mov
add
out
test
add
adc
or
ins
sub
sub
add
jmp
jmp
add
addr16
add
ret
inc
xchg
ja
in
add
in
push
and
jmp
ins
das
jg
and
mov
(bad)
jge
and
out
add
push
(bad)
fcmovnu
push
movlps
icebp
add
stc
jns
icebp
add
aas
dec
enter
add
adc
add
pop
mov
add
div
fisubr
clc
add
stc
pop
mov
arpl
xlat
jg
and
sti
cld
push
inc
sahf
or
(bad)
inc
add
add
jae
adc
add
mov
sbb
add
pop
add
in
add
push
add
test
and
inc
add
add
or
ud0
push
push
stos
mov
pop
or
add
mov
(bad)
xlat
add
adc
jp
mov
fwait
sub
scas
dec
mov
or
in
lea
adc
adc
out
adc
adc
adc
add
es
or
leave
mov
add
adc
adc
add
ins
inc
cmp
add
add
and
scas
pusha
inc
test
add
xor
(bad)
dec
inc
les
rcr
add
sbb
or
sbb
mov
ins
or
daa
test
mov
mov
add
pop
or
xchg
push
adc
lods
cmp
retf
mov
add
repz
pop
add
inc
mov
adc
inc
cs
push
sbb
aas
call
cmp
fcmovne
int3
rcl
sbb
xchg
in
mov
ins
imul
xor
call
sub
add
add
push
or
or
jg
imul
mov
mov
cdq
mov
add
inc
pop
push
adc
mov
or
jmp
ds
scas
adc
inc
add
and
cmp
push
add
pop
mov
add
inc
cmp
pop
aas
aas
mov
push
add
jmp
adc
inc
rcr
add
and
cmp
inc
mov
sti
or
pop
and
add
add
inc
in
inc
xor
and
stc
ins
add
add
and
add
add
sub
sub
push
sbb
or
push
sub
sub
inc
cdq
or
add
cs
mov
das
xor
add
ins
add
add
retf
push
les
add
ins
(bad)
add
xor
xor
push
add
imul
aaa
jnp
add
add
cmp
es
cmp
add
ins
sub
add
adc
das
ins
in
mov
ds
ss
aas
add
adc
aas
inc
add
iret
adc
les
inc
add
inc
inc
inc
pusha
add
nop
or
add
les
inc
add
dec
mov
sbb
nop
dec
ins
add
sub
adc
jle
adc
push
dec
add
jns
pop
dec
ins
add
xchg
mov
add
push
fidiv
pop
push
add
pop
add
push
add
dec
in
les
pop
add
aas
and
add
pop
pop
repnz
pop
pop
add
xor
pop
add
push
enter
add
pop
add
mov
jb
pop
pop
mul
cmp
ins
add
bound
add
jbe
or
arpl
add
neg
add
or
daa
jmp
add
call
sub
add
inc
fwait
jmp
or
mov
add
adc
add
sbb
nop
add
add
inc
adc
fsubr
add
aam
and
ins
add
inc
and
add
test
stos
inc
leave
adc
add
or
mov
outs
add
test
into
and
ins
mov
enter
add
lahf
push
leave
mov
adc
push
inc
adc
dec
jmp
test
cmp
test
ins
add
and
lahf
movs
ins
nop
or
push
pusha
and
pusha
push
add
pop
sbb
pop
sbb
sub
mov
fcmove
fild
add
punpckhbw
mov
addr16
push
(bad)
or
and
cs
ins
or
rcl
sbb
inc
ins
ins
ins
test
sbb
mov
dec
aas
fwait
add
lea
pop
mov
sub
mov
lods
mov
xor
cmp
sub
push
fisttp
arpl
ins
push
add
push
enter
jb
or
inc
lds
push
fcmovne
inc
test
pop
inc
add
adc
push
ins
mov
aas
pop
inc
xor
mov
adc
fcom
add
dec
push
and
aad
add
push
adc
or
lods
inc
push
adc
add
push
add
stos
add
push
add
stos
in
stos
add
stos
dec
adc
call
xchg
adc
mov
mov
or
dec
dec
dec
dec
pop
push
adc
xor
dec
dec
adc
jmp
and
adc
or
push
inc
mov
or
aas
pop
out
adc
lahf
mov
add
add
adc
and
scas
mov
jns
add
pop
add
sub
outs
xchg
hlt
(bad)
outs
leave
leave
in
fs
ror
into
int
leave
leave
leave
dec
retf
scas
outs
daa
daa
mov
das
rcl
mov
dec
dec
adc
fcmovu
rcr
cmp
repnz
or
in
in
or
cdq
mov
adc
cmp
mov
enter
fist
adc
pop
pop
sub
adc
dec
in
adc
pop
xor
retf
leave
leave
leave
xor
xor
jns
movs
inc
comiss
sub
in
imul
das
std
movntps
sub
out
mov
mov
fist
and
sbb
mov
je
adc
adc
add
daa
mov
aaa
aas
sbb
and
daa
aas
dec
add
mov
pushf
pushf
pushf
cmp
adc
pushf
sbb
aaa
push
xchg
or
pop
fidiv
jb
push
fneni(8087
and
pop
jl
repnz
adc
cld
fnsave
mov
pop
push
cmp
mov
add
shl
pop
and
(bad)
das
add
icebp
outs
das
jmp
out
or
retf
cs
dec
pop
pop
(bad)
out
cmp
dec
mov
iret
mov
dec
ja
mov
cmpxchg
shl
leave
fwait
mov
dec
movq
js
icebp
add
xor
add
adc
rol
outs
daa
mov
scas
sbb
das
sbb
aas
push
add
unpckhps
pushf
pushf
pop
sbb
mov
or
xor
mov
push
pop
outs
aaa
pop
aaa
sbb
jbe
aas
outs
aas
das
aas
push
pushf
mov
pop
cmp
aas
pop
pop
enter
push
adc
pop
fsub
mov
lahf
es
mov
pop
add
pop
das
or
push
pop
bndldx
outs
daa
daa
daa
adc
sbb
leave
leave
enter
pop
sub
jns
leave
leave
sub
sub
sbb
jbe
cmp
outs
xor
repnz
xor
bndldx
fld
ss
ss
lahf
ss
ss
sbb
ins
cmp
movq
fwait
mov
aas
push
or
in
jb
mov
mov
pop
movq
aas
dec
ins
jb
push
add
mov
pop
and
daa
inc
fidiv
push
or
frstor
daa
adc
cs
pushf
fmul
push
adc
popa
mov
pop
push
or
aas
fwait
and
sbb
or
xchg
inc
fidivr
jg
push
pop
pop
push
daa
and
sysret
(bad)
pmulhuw
leave
jnp
push
bndldx
pop
cmp
jb
adc
adc
repnz
sub
adc
sub
sbb
in
in
sbb
push
xor
in
in
pop
pop
daa
mov
imul
cs
xchg
xchg
and
(bad)
adc
jnp
push
add
pop
and
mov
and
and
cs
outs
mov
sbb
xchg
fldenv
ret
(bad)
add
and
add
dec
dec
add
pop
das
in
mov
jbe
dec
push
das
mov
xor
cmp
(bad)
xchg
xchg
daa
mov
pop
cmp
xchg
xchg
xchg
dec
dec
dec
pop
pop
pop
mov
pop
pop
pop
inc
das
fsubr
inc
aas
(bad)
fnsetpm(287
fs
push
(bad)
dec
adc
or
dec
dec
(bad)
retf
cmp
pop
(bad)
mov
push
mov
aas
push
(bad)
mov
inc
loop
add
leave
push
inc
dec
push
push
fs
leave
leave
xor
or
icebp
xchg
fisttp
(bad)
mov
neg
sti
jecxz
stos
dec
pushf
nop
addr16
pushf
pushf
add
or
daa
mov
nop
sbb
and
jg
pop
or
cmovnp
cs
call
push
adc
es
push
lock
sbb
sbb
cs
adc
pop
(bad)
lahf
or
nop
pop
sbb
aad
psubusb
das
in
add
mov
pop
loop
ror
div
jg
fisttp
aas
push
adc
aas
adc
mov
out
(bad)
fstp
push
unpckhps
(bad)
push
fadd
mov
or
jg
cmp
mov
add
paddsb
jbe
lahf
sbb
xchg
fld
push
aas
push
das
push
enter
push
adc
jb
ss
dec
pop
popa
mov
push
or
aas
in
cdq
sbb
fcomp
mov
cmps
(bad)
pop
xor
aas
inc
leave
in
jbe
inc
(bad)
outs
dec
sub
aas
or
fcmovne
leave
inc
inc
dec
das
dec
in
in
dec
scas
cs
ins
repnz
pop
aas
mov
fild
inc
inc
aas
pop
es
xchg
xchg
push
pop
pop
pop
das
mov
push
aas
push
(bad)
push
dec
push
aas
(bad)
scas
or
push
or
cmps
or
add
das
sbb
and
push
lahf
and
in
leave
in
adc
(bad)
pxor
sub
sub
jg
xchg
mov
adc
pop
cmp
nop
sub
prefetch
cs
sub
or
pop
or
adc
jb
inc
pop
aas
inc
das
and
popa
pusha
nop
mov
pop
push
in
in
jbe
das
push
dec
dec
dec
xchg
fcmovne
leave
push
push
push
pop
push
in
xchg
xchg
pop
add
pop
cmp
jns
pop
aas
push
adc
jbe
push
dec
push
outs
push
pop
push
jb
mov
fs
pop
pop
fsubr
jbe
das
pop
jg
aas
jg
imul
arpl
aas
arpl
adc
or
gs
ds
femms
jg
das
shr
push
jbe
movq
bound
out
add
(bad)
iret
adc
dec
imul
sbb
sub
movs
fwait
sub
jbe
xchg
dec
inc
dec
push
fbld
cmps
bound
pop
xchg
sahf
cmp
popa
bound
gs
adc
adc
fmul
jns
add
pusha
dec
xor
and
scas
dec
add
dec
xchg
popa
pop
xchg
out
push
xchg
push
loopne
add
mov
pushf
popf
dec
sahf
dec
or
dec
lahf
mov
lahf
mov
dec
pop
mov
inc
fmul
dec
jg
dec
stos
dec
leave
ja
sub
xor
daa
inc
pop
and
adc
add
pop
adc
dec
pop
lds
add
and
add
and
push
push
dec
retf
mov
pop
repz
jae
jg
pop
les
jns
xchg
lds
mov
leave
sahf
xchg
out
retf
icebp
repnz
xlat
cmp
repz
add
out
mul
mov
pushf
push
mov
jns
sahf
ret
mov
ja
mov
shl
cmps
push
in
dec
sahf
(bad)
aad
rcl
dec
sahf
out
mov
sahf
out
icebp
xchg
mov
pusha
push
out
lea
push
fwait
push
test
xor
pop
mov
pop
dec
inc
push
sub
in
test
dec
popf
jle
cmps
inc
inc
mov
sub
push
dec
ds
mov
ds
sub
push
add
push
mov
inc
mov
mov
pop
add
aas
mov
cld
push
clc
push
js
retf
ja
dec
int
sub
add
(bad)
mov
adc
jge
inc
sti
push
repnz
pusha
adc
retf
mov
push
dec
push
xchg
sar
jo
cmp
fisubr
xchg
inc
push
je
push
outs
mov
pop
je
dec
dec
inc
test
fisubr
pop
outs
ss
lock
pop
pop
xchg
pop
rcl
fistp
sub
and
int
imul
pop
pop
mov
push
ja
mov
dec
dec
addr16
dec
in
imul
inc
sbb
adc
xor
xchg
movs
cmovge
pop
push
inc
div
mov
xor
imul
and
dec
sti
mov
aaa
xchg
dec
fidivr
fadd
push
pop
mov
outs
sub
daa
addr16
pop
ins
ins
lods
mov
inc
sub
dec
jl
pop
cmps
pop
dec
cmp
outs
push
push
pop
pop
inc
fistp
fsub
fild
inc
xchg
shr
fwait
clc
fild
inc
das
fist
dec
xchg
mov
fisubr
push
das
add
icebp
aas
pop
sub
mov
inc
mov
cmp
and
dec
mov
sub
dec
(bad)
push
rcr
rol
and
jmp
push
dec
bound
push
inc
add
push
and
push
inc
retf
jnp
sub
mov
sub
push
pop
arpl
xor
ins
dec
das
iret
dec
mov
outs
inc
int
sub
inc
sub
add
lock
comiss
arpl
mul
bound
out
sub
(bad)
push
mov
sbb
(bad)
mov
pop
push
pop
cs
pop
push
or
add
cmp
dec
push
dec
push
fmul
inc
inc
push
fcomp
jmp
(bad)
xchg
xor
pop
dec
mov
loope
daa
dec
arpl
add
push
push
(bad)
mov
fcmovbe
fiadd
pop
das
ins
seta
aaa
push
inc
and
xchg
mov
imul
mov
mov
sahf
push
call
pand
inc
stos
mov
jnp
push
fist
push
inc
aas
push
das
ins
inc
push
mov
in
imul
lock
fwait
aaa
sbb
push
je
push
mov
sbb
push
aaa
stos
cmp
add
mov
aas
cmova
sub
cmp
inc
cmps
(bad)
push
push
mov
inc
mov
xchg
sbb
push
jg
dec
stos
mov
inc
addr16
(bad)
push
push
add
aas
add
push
outs
push
pop
sub
fisubr
xadd
lods
(bad)
das
dec
iret
xsha1
cmps
nop
inc
ja
(bad)
mov
push
sub
pop
xlat
ret
mov
outs
mul
pop
push
mov
sub
xchg
pop
mov
popa
in
jae
sbb
pop
in
loopne
mov
arpl
aas
add
inc
(bad)
sbb
xchg
fld
mov
dec
cmp
push
imul
sbb
mov
fwait
push
jle
test
sbb
aas
pop
inc
push
push
in
jl
inc
inc
pop
stos
lods
popa
lds
xlat
iret
fisubr
xchg
push
mov
jnp
aam
pop
aaa
inc
xchg
mov
add
pop
and
inc
xor
add
dec
aaa
add
movq
pop
pop
test
bound
dec
das
dec
in
pop
ins
das
inc
xlat
das
mov
aas
push
xchg
mov
and
mov
or
pshufw
repz
push
push
mov
jnp
call
pop
push
inc
pop
push
mov
mov
inc
ins
outs
push
pop
add
inc
add
outs
ret
jnp
mov
ins
daa
fwait
daa
int
pop
push
imul
jmp
or
xlat
mov
push
push
aaa
test
imul
jbe
mov
(bad)
pop
push
das
fistp
jl
setnp
xor
das
das
(bad)
packssdw
cs
sub
repz
or
addr16
aaa
in
or
aas
sub
mov
sbb
cmp
push
bound
inc
pop
mov
xchg
das
push
bt
cmp
lahf
mov
fwait
dec
das
sbb
fimul
mov
daa
inc
jbe
in
scas
cmps
dec
loop
mov
xchg
test
daa
jae
adc
push
(bad)
xor
inc
and
add
dec
lahf
and
mov
adc
sbb
inc
pop
sbb
sbb
mov
outs
push
mov
mov
rcl
cmp
ja
inc
push
xchg
rcr
mov
adc
push
in
cmp
cmp
cmps
aaa
sbb
div
xor
inc
test
cli
or
mov
inc
sbb
fisttp
dec
add
mov
fwait
addr16
fisubr
mov
out
push
xchg
cmp
and
push
inc
inc
push
aam
hlt
xor
mov
dec
sub
sbb
pop
adc
repz
adc
shl
mov
push
ret
dec
addr16
sub
and
jg
retf
xchg
ficom
dec
inc
xchg
stos
mov
push
xor
mov
push
xor
dec
movs
fiadd
inc
jnp
jno
aam
das
push
adc
sub
call
rcr
loopne
aaa
pop
fimul
push
inc
inc
xchg
push
mov
das
push
push
outs
movs
jbe
jb
scas
aas
scas
xor
pop
mov
push
leave
add
push
lds
jb
pop
test
outs
mov
rol
outs
xchg
adc
fdivr
sbb
push
or
add
aas
jecxz
call
inc
pop
aas
push
adc
add
inc
dec
dec
mov
rcl
fist
push
sbb
aaa
fimul
mov
bound
mov
aas
pop
adc
mov
inc
lds
shl
xlat
mov
mov
fcmovu
daa
(bad)
(bad)
fiadd
mov
in
push
push
or
pop
mov
mov
and
stos
inc
outs
fiadd
dec
pop
push
das
adc
das
call
sub
addr16
stos
ret
push
sbb
orps
pop
pop
movs
push
jp
into
repz
jo
jnp
daa
push
add
mov
repz
outs
inc
cmovbe
fcom
and
push
pop
daa
mov
mov
das
stos
mov
push
push
mov
daa
pop
daa
dec
add
push
in
bound
aas
out
dec
xor
sbb
xchg
sti
mov
push
pop
daa
imul
daa
inc
ins
xchg
mov
push
mov
adc
mov
ja
inc
pop
fcmovnbe
sub
dec
fistp
jbe
sub
mov
pop
stos
aam
das
fdivr
pop
pop
outs
sbb
loopne
xlat
push
pop
stos
push
outs
rcl
daa
ja
ins
les
es
not
push
push
lods
add
mov
loope
add
push
das
push
inc
push
mov
call
mov
mov
mov
or
push
stos
inc
das
jmp
imul
dec
pop
push
aas
sbb
jecxz
fimul
xchg
popa
pop
scas
daa
dec
jne
mov
iret
inc
cmps
mov
scas
mov
shl
push
sub
(bad)
sbb
jae
sub
adc
pop
pop
sti
pusha
pop
inc
mov
sub
aaa
dec
add
add
inc
data16
adc
inc
push
mov
aas
das
das
test
test
push
cmp
push
scas
ss
push
lea
outs
jmp
sbb
push
inc
add
dec
pop
mov
adc
xchg
ja
pop
dec
push
push
mov
lahf
daa
ret
mov
fisttp
jg
rol
ins
(bad)
nop
sbb
dec
dec
aas
(bad)
mov
add
add
ficomp
aas
daa
pop
test
pop
dec
ja
cmp
add
out
dec
fstp
sbb
das
mov
push
sbb
mov
sub
add
je
iret
push
out
sub
daa
and
outs
daa
and
mov
fcom
aaa
daa
daa
jmp
das
jp
add
pop
push
or
add
scas
fild
out
xchg
mov
shr
pop
pop
vpmovmskb
das
dec
or
(bad)
mov
pop
pop
bound
pop
add
das
mov
mov
aaa
cmp
inc
popa
(bad)
dec
mov
inc
es
dec
jae
sub
or
jnp
cmp
das
push
call
aaa
add
lea
push
stos
ins
out
aaa
adc
ins
adc
mov
push
xchg
inc
pusha
adc
mov
movs
push
push
outs
pop
or
adc
shr
inc
das
dec
daa
aaa
imul
or
pop
add
scas
aaa
push
adc
movs
lods
rcl
xor
push
cmp
push
pop
push
fmul
jbe
aaa
mov
xchg
pop
daa
dec
call
aas
adc
shl
pop
aas
scas
popa
movs
mov
neg
push
popa
sbb
push
sti
xchg
jb
push
cmc
daa
mov
ins
pop
mov
(bad)
sahf
pop
das
pop
test
mov
stos
push
das
push
ins
sbb
push
adc
aaa
ins
movs
cmp
sbb
xlat
sbb
ins
adc
jmp
bound
rcr
mov
arpl
and
xchg
stos
pop
stos
lods
adc
inc
mov
pusha
inc
test
fisubr
dec
xlat
push
inc
lea
inc
xchg
mov
mov
movs
test
xlat
and
dec
add
lea
loope
mov
push
push
sub
mov
inc
push
aas
jecxz
mov
fimul
bound
iret
mov
and
cmp
jnp
and
pop
pop
add
pop
or
push
daa
xchg
fldenv
jg
inc
adc
fcomi
dec
ja
jno
lods
inc
dec
aas
jb
mov
dec
adc
inc
and
inc
jnp
aaa
jmp
idiv
imul
dec
lea
fist
add
dec
add
shl
or
sbb
stos
pop
fwait
sub
aas
and
dec
adc
adc
or
sub
mov
pop
das
xchg
push
xor
push
adc
mov
aaa
inc
mov
push
add
mov
or
sbb
mov
jle
xor
lods
popa
cmp
jle
cmp
pop
pop
je
loop
es
outs
push
fs
jl
sub
add
xor
sub
push
sbb
out
out
mov
inc
or
xor
fidivr
bound
iret
push
dec
bound
nop
mov
dec
ss
mul
mov
(bad)
inc
aas
setl
sbb
pop
pop
push
pop
xchg
(bad)
cmc
test
arpl
ja
stos
shl
out
jo
sbb
sbb
sub
adc
imul
cmp
sbb
fwait
mov
xor
push
aas
neg
imul
stos
xchg
inc
ins
dec
push
sbb
jg
ins
add
pop
mov
pop
fwait
addr16
add
mov
xor
mov
imul
cmp
arpl
fiadd
(bad)
js
jg
aas
push
or
pop
inc
xchg
cmp
dec
xchg
inc
mov
nop
jbe
inc
imul
mov
sub
scas
xor
stos
popa
dec
inc
je
les
dec
jnp
retf
aaa
push
leave
call
sub
pop
pop
dec
jb
sub
and
ficomp
jmp
jne
out
aaa
nop
pop
call
add
outs
push
cmp
pop
dec
aaa
inc
xor
xor
push
mov
add
jecxz
push
push
or
jns
js
push
mov
push
ins
push
jb
fidiv
push
je
fisub
xor
cmp
mov
sahf
xor
push
fcomp
dec
bound
push
test
arpl
ret
xchg
test
adc
add
xlat
dec
aas
inc
cmp
ds
pop
pop
dec
lods
pop
repnz
push
pop
pop
jg
sub
lods
and
out
sahf
mov
cmp
fwait
pop
and
adc
push
aas
mov
sbb
sti
fwait
inc
mov
dec
aas
inc
pop
or
fcmovb
dec
stos
sub
dec
mov
add
adc
(bad)
aad
and
ret
sbb
and
push
mov
push
aaa
iret
adc
mov
lahf
push
imul
test
mov
lods
lods
sbb
mov
dec
(bad)
test
jg
cmps
add
jns
das
inc
add
test
xor
pop
sub
ins
sbb
mov
in
sub
inc
inc
xor
stos
sub
nop
fimul
(bad)
dec
inc
daa
test
xchg
inc
xchg
xor
pop
adc
push
push
stc
jo
push
xlat
ja
adc
push
ss
repz
ss
daa
test
push
inc
dec
aas
mov
shl
das
push
daa
pushf
shl
xchg
mov
sti
dec
add
rcl
jmp
inc
and
and
in
adc
scas
cmp
test
xor
xchg
loopne
fidiv
fcmovne
mov
adc
movs
push
pop
push
imul
and
xchg
test
je
push
cmp
mov
cs
test
add
xor
pop
inc
pop
aad
sbb
pop
push
xchg
daa
pusha
mov
mov
mov
xlat
xchg
mov
in
mov
jmp
test
rcl
or
push
sti
adc
sub
pop
lods
ins
cmp
mov
enter
inc
pop
sub
daa
aas
mov
jbe
movs
pop
mov
das
ins
popf
mov
or
es
mov
cmp
pop
pusha
add
rol
mov
inc
xchg
push
lods
adc
add
pop
ret
in
mov
cs
iret
shl
sub
mov
sub
jae
fistp
jae
add
outs
adc
pop
inc
pop
or
out
scas
ret
or
sub
add
cs
add
and
es
fidivr
sbb
inc
pop
or
das
adc
aaa
out
push
loop
cs
pop
add
pop
test
and
lds
pop
push
inc
add
jae
mov
fbld
mov
mov
jge
pop
cmp
pop
push
push
ds
sub
fwait
push
jne
sub
out
lock
int
add
sbb
mov
and
scas
dec
mov
cdq
inc
pop
dec
or
rcr
inc
push
nop
sub
(bad)
or
pop
cwde
mov
push
test
jl
nop
adc
jge
aaa
xor
aam
loopne
add
les
push
mov
sbb
xor
out
outs
mov
cmp
mov
add
sbb
and
call
outs
movhps
push
(bad)
inc
add
pop
fdivr
loopne
or
push
fist
ret
imul
pop
mov
arpl
inc
fwait
push
cmc
out
push
push
sub
pandn
pop
repnz
and
fs
sub
mov
sub
ins
stos
inc
jne
outs
dec
je
pop
js
ins
lea
pop
and
pop
fisttp
xchg
add
js
daa
xchg
push
push
cs
pop
jmp
ins
sub
cli
inc
jns
fild
retf
sbb
mov
addr16
push
push
inc
popa
pusha
imul
push
push
imul
movzx
dec
ja
push
ja
rol
push
fst
shr
arpl
imul
push
jo
fadd
pop
dec
gs
ja
shl
mov
data16
aas
daa
pop
cmp
popf
out
mov
cmps
dec
bound
mov
or
jl
adc
fidiv
push
gs
rol
xchg
repz
push
daa
push
mov
pop
fdiv
aaa
dec
ins
out
push
xchg
add
add
sub
outs
add
adc
pop
push
pop
sbb
xlat
add
dec
popa
dec
out
in
sbb
push
jne
fs
pop
mov
sbb
xor
and
cmp
push
shr
inc
and
cmp
retf
add
xor
push
add
call
mov
pop
not
add
aad
push
xchg
dec
outs
mov
pop
xor
pop
fistp
scas
dec
xlat
sub
jle
rcl
ja
push
push
ins
push
and
pop
cmp
aam
in
bound
pop
push
fldenv
aaa
in
les
sub
rol
xor
in
ror
(bad)
cmp
add
pop
ja
test
push
test
daa
neg
iret
aam
div
cld
repz
add
out
std
fisubr
pop
xlat
jge
movs
push
test
in
jg
out
xor
cmc
xchg
and
addr16
ins
cmps
dec
popa
inc
jo
or
lock
loop
jae
outs
ja
xor
(bad)
aas
int3
xchg
jb
gs
xor
cs
ins
(bad)
adc
out
aam
dec
xor
dec
lods
and
pop
aaa
mov
daa
add
scas
xor
sub
sar
push
aaa
jmp
xchg
cmp
outs
mov
addr16
add
in
iret
sti
or
ja
lods
dec
jecxz
push
dec
repz
or
mov
pop
mov
outs
(bad)
out
call
cmp
mov
pop
cld
inc
jo
add
pop
add
add
push
imul
or
retf
add
xchg
xor
mov
movq
jne
pop
out
push
jge
(bad)
repz
jne
hlt
xchg
ins
push
out
fbld
jmp
inc
outs
pop
adc
adc
ins
cmps
iret
push
fcomp
pop
add
push
sub
sbb
inc
fiadd
push
mov
pop
mov
shl
pop
pop
sub
or
sbb
sbb
das
aas
jne
movs
pop
push
push
add
fisttp
imul
loopne
inc
mov
outs
pop
repnz
inc
jb
push
bound
in
or
ja
sub
pop
push
jg
mov
out
ins
not
sti
xchg
ins
aas
jne
daa
xchg
fdiv
xchg
jo
add
out
add
outs
push
xor
mov
lahf
jae
push
imul
data16
mov
out
inc
lahf
sahf
inc
add
pop
lods
jns
dec
pop
popw
adc
fsubrp
in
jae
add
ins
add
xchg
xchg
sti
repz
fwait
out
int3
lahf
cld
adc
sub
and
add
sub
out
jnp
or
and
imul
adc
push
cmp
fnstsw
push
aaa
and
dec
(bad)
mov
xchg
and
sub
les
das
and
outs
mov
arpl
xlat
fstp
lea
pop
sbb
movs
or
push
jg
pop
dec
adc
adc
fs
push
xchg
fcmovu
push
mov
inc
or
or
fidiv
sbb
js
imul
ret
aaa
cmp
mov
sbb
add
iret
add
adc
or
push
pop
fisub
gs
cs
jo
dec
mov
in
ss
bsr
imul
pop
arpl
jbe
or
mov
shl
stos
inc
sar
dec
dec
(bad)
xor
ds
mov
jb
or
jns
dec
pop
cwde
scas
js
sub
jge
pop
imul
or
push
rol
repnz
clc
mov
lods
icebp
push
fisub
pusha
xor
mov
dec
add
mov
add
cmp
mov
dec
add
pop
and
mov
daa
add
sbb
ror
adc
data16
sub
add
cmp
sub
subps
inc
popa
dec
mov
or
ret
xlat
xor
aaa
xchg
vphadduwq
aaa
mov
fidiv
sbb
xor
cmp
pop
push
mov
addr16
xlat
js
lds
pop
cs
shr
outs
or
mov
cs
add
adc
fs
arpl
jae
push
loopne
xor
jg
jge
mov
push
push
add
test
jg
icebp
mov
pop
movs
daa
sbb
dec
or
ja
das
and
pop
rcr
mov
icebp
(bad)
dec
sti
iret
jnp
xor
push
sbb
outs
js
jle
add
xor
and
xchg
mov
and
jl
jae
xor
fs
mov
xlat
inc
dec
dec
pop
inc
sub
fst
rcl
das
(bad)
xlat
dec
dec
std
jle
sbb
and
jbe
jb
adc
cmp
aas
ror
mov
pop
jbe
sti
pop
mov
fadd
mov
ror
lods
loope
aas
add
retf
pop
les
jmp
mov
xchg
jmp
les
into
js
sbb
je
aas
or
inc
arpl
rol
les
add
jg
hlt
(bad)
push
pop
mov
mov
je
jo
fistp
mov
mov
fwait
je
xchg
(bad)
shl
dec
pop
rcl
test
push
inc
arpl
push
bnd
inc
daa
gs
push
inc
xchg
pop
enter
inc
pop
mov
daa
push
xor
jmp
into
inc
(bad)
push
fild
sbb
mov
push
mov
inc
pop
push
jb
test
ds
jg
stos
out
gs
(bad)
jmp
mov
or
push
push
(bad)
mov
ins
(bad)
fiadd
xchg
fwait
add
imul
jae
pusha
jmp
mov
inc
dec
daa
sti
inc
mov
cmps
and
sub
add
cs
fucomi
jo
jp
sub
ja
push
dec
inc
push
ss
clc
inc
jle
lea
test
in
pop
adc
add
sete
cmp
add
out
add
sub
(bad)
push
arpl
mov
pop
pop
aaa
ror
dec
outs
jae
mov
dec
push
aas
sub
push
mov
xchg
and
iret
sbb
pop
cmp
scas
push
out
das
push
imul
mov
setp
int
pop
dec
inc
arpl
or
pop
je
pop
cwde
div
out
aaa
(bad)
(bad)
jmp
out
inc
add
xchg
movs
inc
pop
dec
inc
xlat
jno
pop
dec
dec
(bad)
mov
push
fiadd
xchg
inc
sbb
fist
fld
push
xor
aaa
push
pop
or
in
mov
(bad)
sub
push
pusha
adc
rcr
mov
and
and
scas
sbb
aam
or
or
imul
pop
or
add
mov
xchg
pop
aaa
pusha
or
push
imul
and
mov
sub
and
push
shl
fild
les
add
fs
add
pop
cwde
pusha
inc
add
sub
jl
jo
or
(bad)
cmp
jne
gs
popa
outs
fs
js
ss
xchg
addr16
mov
das
push
cmp
adc
(bad)
push
xor
or
rcl
xchg
push
rol
cmp
jo
pusha
arpl
jae
push
push
mov
inc
lock
imul
ffreep
mov
adc
pop
push
jb
inc
out
call
lahf
xor
leave
lods
mov
dec
dec
dec
ror
ins
pop
push
outs
push
adc
sar
inc
jecxz
rol
(bad)
adc
aad
(bad)
pop
push
pop
in
out
jo
xchg
push
push
das
repnz
pop
ja
xor
cmp
fsubr
aaa
inc
aas
push
inc
mov
lds
sar
pop
arpl
jbe
jne
pop
pushf
sub
add
xor
rcr
sub
pop
mov
inc
mov
cmp
ja
mov
arpl
push
imul
xchg
scas
fwait
add
or
mov
xchg
outs
push
xchg
nop
push
das
ja
stos
dec
fsubr
mov
inc
data16
sub
mov
add
and
addr16
mov
push
push
add
inc
aas
idiv
add
sbb
dec
leave
les
dec
dec
pop
pop
test
and
add
out
dec
sbb
outs
aaa
les
xchg
inc
sbb
push
stos
mov
xchg
push
pop
cmps
sbb
leave
mov
addr16
mov
pop
push
aas
push
das
add
sbb
push
pop
cmp
imul
pop
aaa
sbb
movs
stos
fld
dec
aaa
inc
mov
imul
daa
push
push
push
inc
das
jo
add
gs
popa
or
lock
jo
imul
aaa
or
add
pop
xchg
sub
rol
sbb
adc
push
sbb
pop
or
inc
sub
push
push
and
sub
add
pop
cmps
mov
(bad)
daa
or
jbe
not
inc
and
sub
mov
sbb
pop
daa
out
lods
cmp
pop
(bad)
mov
imul
mov
addr16
push
scas
mov
cmp
and
push
jo
call
rcl
das
arpl
das
add
dec
iret
das
ins
lods
xchg
nop
mov
push
add
cmps
push
lods
xchg
cmp
add
retf
adc
mov
mov
mov
imul
mov
or
add
cmp
sbb
cmp
fisubr
mov
bound
ror
inc
push
mov
xlat
mov
xor
je
jo
call
arpl
das
stos
adc
add
mov
mul
xchg
xchg
xor
xor
xor
push
js
in
and
arpl
test
cmp
mov
inc
xchg
cs
js
pop
xor
dec
pop
push
ret
dec
push
push
inc
fdiv
movs
adc
push
sub
inc
or
dec
mov
jnp
jg
jo
cmp
sub
test
gs
or
aaa
sub
xor
add
mov
outs
mov
pop
adc
pop
cld
mov
jb
outs
jb
je
js
and
shr
fsub
fisub
sub
jo
call
gs
je
xlat
inc
inc
dec
dec
pusha
push
push
inc
xor
sub
jl
(bad)
push
inc
push
dec
dec
pop
inc
es
push
sti
push
dec
push
push
inc
add
push
push
inc
push
push
pop
dec
push
push
and
loope
dec
dec
dec
sbb
push
inc
(bad)
pop
sti
std
iret
pop
push
inc
inc
push
push
push
dec
dec
dec
daa
inc
push
push
dec
mov
fimul
pushf
push
or
pop
xchg
push
and
inc
push
push
pop
pop
push
dec
dec
inc
dec
inc
inc
inc
rol
pop
cli
jnp
aad
rol
xor
dec
add
push
mov
dec
dec
jmp
mov
dec
dec
inc
dec
inc
dec
outs
jne
sub
pop
mov
add
adc
mov
sbb
fisttp
fisttp
add
pop
jo
pop
push
sub
add
xchg
fs
or
jo
xchg
shr
push
aas
add
rcr
inc
pop
cmp
scas
dec
add
pop
add
pop
jbe
add
sbb
mov
mov
add
dec
sub
inc
sbb
sub
nop
mov
mov
pop
jge
in
test
push
mov
ficom
pop
dec
add
stos
xchg
or
pop
int
xchg
mov
fwait
push
push
adc
cmp
xchg
push
jmp
push
push
sahf
pop
pushf
mov
popf
add
cmp
out
xchg
(bad)
cwde
push
cdq
call
popa
ins
jo
dec
outs
ja
mov
jo
or
outs
jne
jae
imul
ins
popa
outs
imul
outs
je
(bad)
fs
sbb
imul
adc
xor
data16
es
and
jo
arpl
rol
js
add
pop
pop
sub
or
or
add
movups
adc
push
or
les
add
or
xor
jg
and
jo
scas
jo
outs
and
inc
sub
or
or
data16
test
and
lods
arpl
mov
data16
push
sar
loopne
ins
pop
jae
enter
in
dec
bound
adc
je
add
outs
shl
jmp
jnp
and
popa
outs
je
imul
add
ds
ins
imul
addr16
mov
outs
not
pop
retf
arpl
pop
or
xor
mov
xor
and
inc
cmp
movs
push
inc
sbb
xor
or
pusha
push
not
or
cld
(bad)
and
aaa
pushfw
es
pop
ins
sbb
mov
mov
gs
jo
add
lock
ss
sbb
fidiv
cmp
js
arpl
test
or
aas
and
add
push
scas
pop
dec
and
and
cmp
popf
jb
inc
lahf
outs
xor
fs
ja
jne
inc
mov
pusha
in
sub
push
data16
sub
sbb
sub
ins
adc
data16
jo
stos
fwait
jmp
push
dec
inc
xor
add
mov
mov
sub
and
arpl
or
les
inc
pop
popa
cmp
shl
sbb
out
fs
and
pop
aad
jmp
addr16
adc
fldenv
adc
jo
dec
fwait
push
sbb
xchg
cs
ret
add
mov
mov
inc
out
push
add
fstp
ins
mov
js
adc
rol
clc
std
jne
ret
sbb
test
sbb
mov
jne
cmp
pushf
or
outs
loopne
cwde
jno
or
nop
js
sub
popf
push
push
sti
pop
sub
out
or
pop
in
inc
lds
sub
pop
cmc
aaa
add
pop
or
cmp
push
shl
les
outs
sub
mov
lds
arpl
mov
push
ret
jae
ins
movs
and
sbb
int
aas
pop
sbb
std
pop
js
xor
outs
or
mov
movs
push
arpl
xor
inc
add
sub
xchg
loopne
rol
outs
mov
mov
dec
sub
ins
dec
jnp
jge
push
sub
stos
clc
cli
push
icebp
inc
sbb
and
xor
mov
xor
dec
arpl
in
add
xor
and
hlt
xor
push
call
dec
jns
js
je
cwde
arpl
test
fst
push
or
fist
sbb
popa
jbe
cmc
and
xor
ret
cmps
pop
push
adc
mov
int3
jo
pop
pop
test
push
cmp
mov
mov
addr16
loopne
aad
mov
sub
mov
fld
push
test
outs
scas
sub
fdiv
and
xor
fsubr
fsubr
inc
xor
jns
rcr
div
xor
push
pop
dec
sub
mov
add
popa
ins
jae
addr16
xor
aaa
out
xchg
or
cmp
inc
xlat
imul
ja
sub
lods
xor
xchg
movs
mov
imul
mov
sub
pusha
add
cmp
push
push
add
mov
repnz
outs
gs
push
push
pusha
add
int3
xor
popf
add
dec
push
dec
push
push
jo
xlat
(bad)
mov
pop
addr16
mov
sbb
sub
outs
adc
pop
or
sub
fld
jle
xor
sbb
mov
inc
mov
pusha
and
pop
out
ror
icebp
jae
sub
sub
js
sub
mov
push
inc
sub
and
mov
mov
adc
fild
add
pop
lahf
shr
jl
popf
imul
lds
rcl
push
mov
pop
je
push
je
loope
mov
nop
stos
jno
pop
loope
add
movs
sub
aad
inc
sbb
adc
loopne
inc
push
popa
jne
mov
mov
outs
retf
inc
dec
dec
(bad)
popa
xor
dec
push
add
call
pop
mov
movs
adc
push
(bad)
xchg
pop
mov
push
pusha
xor
mov
in
(bad)
sti
or
and
js
cmp
cmp
data16
or
jnp
adc
aaa
dec
push
adc
rol
adc
cmp
add
adc
add
add
je
gs
jge
icebp
sub
call
add
adc
movs
or
push
popf
and
push
ror
and
js
leave
aas
sub
imul
mul
inc
sub
loope
(bad)
adc
nop
call
inc
dec
add
mov
popa
imul
or
cmp
dec
mov
in
or
push
adc
dec
and
dec
cmps
jo
test
inc
sbb
mov
mov
jmp
out
daa
fidivr
mov
das
mov
dec
lds
jo
inc
rol
dec
adc
add
push
inc
pusha
cwde
jge
cmc
add
(bad)
cmp
sbb
fwait
sbb
(bad)
cmp
or
dec
xor
ja
dec
push
cmp
ins
cmps
sub
dec
scas
in
pop
add
nop
sub
xchg
add
push
inc
outs
jns
bound
aad
cli
or
adc
cmps
ja
push
inc
mov
pusha
ficomp
jo
sub
push
repz
fldcw
push
outs
outs
ins
outs
outs
add
xchg
mov
or
or
movs
push
mov
ss
popa
cmp
inc
bound
cmp
dec
fstp
arpl
push
mov
or
imul
out
sbb
ins
(bad)
adc
push
jae
imul
jns
outs
je
jb
cmp
xlat
jne
dec
je
jbe
addr16
in
sti
outs
addr16
hlt
dec
imul
inc
in
sahf
pusha
inc
mov
adc
cdq
rcr
daa
push
or
neg
mov
imul
push
sub
loopne
mov
xor
pop
push
fsubr
inc
loopne
push
es
bound
int
pop
imul
addr16
add
inc
stos
ins
xor
add
pop
stos
stos
xchg
dec
outs
cmps
inc
lahf
shr
fisub
mov
jbe
sub
ret
or
add
ss
dec
mov
pxor
or
mov
or
adc
fdiv
adc
pop
dec
xor
rcl
pop
dec
adc
push
loopne
dec
push
es
outs
push
call
pusha
gs
or
ins
bound
test
xor
jnp
pop
inc
adc
ins
add
outs
je
into
mov
hlt
or
sbb
dec
jo
and
push
inc
dec
push
cmp
add
inc
imul
jns
sbb
ja
inc
add
xor
outs
test
(bad)
mov
mov
jb
fisttp
ins
add
push
rcr
neg
ins
dec
ins
add
dec
addr16
dec
ins
mov
jae
mov
imul
pop
dec
retf
push
jo
mov
push
xchg
scas
loopne
sbb
push
ror
int
mov
or
dec
shl
fs
mov
jae
adc
mul
imul
imul
ror
mov
adc
mov
pushf
adc
clc
sub
xchg
dec
jnp
loopne
mov
add
outs
loop
add
ds
call
push
jns
aam
add
dec
add
xchg
rcl
cmp
dec
ja
and
push
adc
outs
push
cld
push
imul
in
push
gs
ja
cmps
xor
sub
outs
inc
pushf
fldcw
dec
sbb
es
push
push
popf
sbb
push
cmp
push
jo
pop
inc
mov
jae
jne
ja
pop
sub
push
sbb
xor
ins
shl
adc
push
sbb
out
sahf
out
add
add
push
sahf
out
sahf
pop
or
or
pop
fimul
mov
jle
add
adc
add
sub
jo
jle
add
add
cmp
jp
inc
outs
push
add
aam
pop
mov
sbb
bound
or
pop
popf
lahf
jbe
push
or
pop
push
add
sub
add
dec
imul
add
and
add
iret
iret
add
or
retf
ror
add
dec
out
iret
iret
add
(bad)
sti
adc
add
adc
packuswb
push
adc
out
out
add
push
add
pop
add
sbb
inc
out
out
sbb
dec
sbb
push
push
add
add
out
push
add
add
out
out
add
add
push
add
in
inc
pop
test
(bad)
add
or
fisttp
and
jecxz
add
xchg
jle
add
and
stc
push
add
add
outs
out
out
push
pop
add
or
or
or
inc
jbe
inc
pop
mulps
add
or
inc
dec
xor
aas
aas
ret
imul
and
or
push
popa
add
rep
cmp
ins
mov
jo
add
stc
mov
add
add
mov
xchg
and
and
out
imul
add
sub
mov
add
iret
iret
out
out
add
pop
add
cmps
sub
out
add
add
lahf
sbb
add
(bad)
repz
test
stc
add
lock
add
inc
inc
retf
inc
add
add
(bad)
cmp
add
add
sbb
xchg
or
or
repnz
pop
je
mov
scas
or
inc
pop
add
out
xlat
adc
cs
add
pop
cmp
add
pop
add
popa
cs
stc
stc
stc
or
js
add
add
add
add
stc
stc
stc
add
leave
aaa
add
stc
stc
stc
stc
cmp
aad
add
cmp
out
add
outs
xchg
mov
dec
mov
test
outs
sti
add
mov
test
jle
pop
add
cmp
pushf
cmps
into
sbb
add
add
fsub
rol
lock
retf
mov
adc
push
jo
mov
es
mov
jmp
fimul
jo
mov
adc
fisttp
or
add
push
jp
push
fucomi
or
les
sub
push
sbb
(bad)
aam
pop
jbe
dec
fs
enter
jle
fdivr
ins
cmp
cmp
xchg
or
push
dec
mov
daa
fimul
xor
cmp
push
sbb
sub
jnp
push
in
and
adc
dec
aas
sub
dec
cs
das
lea
mov
push
pushf
push
popa
inc
aas
fs
ror
data16
aas
fcomp
mov
das
inc
cmp
scas
pop
ds
ins
stos
ffreep
fiadd
outs
sbb
add
int3
aas
and
(bad)
cmp
push
fs
mov
ja
enter
sub
cdq
ins
out
and
add
and
push
je
adc
mov
iret
mov
in
popf
shl
aas
xchg
pushf
dec
dec
fisubr
fbld
xchg
(bad)
out
jg
ds
add
inc
outs
add
dec
dec
push
movs
or
ret
mov
adc
mov
les
add
inc
rol
add
mov
and
add
adc
(bad)
cmp
cmp
int3
pusha
cs
inc
push
inc
movs
and
shl
inc
inc
aaa
lods
ins
loope
getsec
add
push
mov
jo
ja
(bad)
(bad)
nop
into
add
add
nop
xlat
push
iret
aas
jae
pop
sub
inc
add
dec
imul
loopne
out
leave
xchg
(bad)
ficom
pop
mov
adc
add
(bad)
xor
data16
xchg
lds
or
add
cmp
mul
jns
and
sbb
sub
and
add
cdq
mov
mov
in
ja
inc
mov
iret
mov
in
call
fild
jle
adc
push
ficomp
mov
pop
mov
xchg
xor
fcomp
loopne
jb
jle
retf
adc
adc
and
nop
and
(bad)
dec
and
sbb
lods
jmp
jno
ins
leave
adc
iret
repz
add
add
leave
repz
or
or
xchg
fisttp
aaa
or
leave
mov
adc
adc
and
pop
inc
inc
push
fucomi
jbe
addr16
das
push
xorps
pop
mov
das
ins
push
and
in
sbb
jb
pop
and
out
xchg
fild
xchg
fmul
sahf
sub
dec
outs
pop
pushf
mov
into
aas
xlat
sbb
jecxz
and
aas
cmp
repz
mov
mov
mov
out
cmp
in
clc
int
or
adc
sbb
repz
out
and
sub
pop
xor
popf
cmp
cmp
push
pop
push
pusha
sahf
out
sahf
push
pushf
and
movs
mov
ja
out
outs
push
rol
fsub
call
jns
into
add
sbb
repz
repz
test
repz
mov
iret
repz
(bad)
int3
aam
popf
jge
mul
cmps
hlt
iret
iret
adc
iret
and
jns
out
sub
dec
pop
ins
sahf
out
sahf
adc
loopne
jle
fwait
cwde
stos
mov
call
ds
mov
push
cmps
mov
test
jbe
fst
movs
xor
mov
or
iret
das
imul
in
mov
add
out
mov
(bad)
dec
out
mov
jne
mov
cwde
or
or
inc
cmp
aam
or
push
xchg
das
data16
and
pushf
vmread
jl
sbb
jb
enter
and
mov
test
mov
mov
enter
adc
and
or
sbb
jb
or
adc
enter
hlt
adc
sbb
add
sbb
jb
or
adc
sbb
and
and
and
sub
(bad)
repnz
js
adc
add
add
and
or
add
dec
add
pop
push
mov
fs
xor
dec
outs
lock
sub
(bad)
or
jmp
ins
unpcklps
std
and
les
and
rol
xchg
fsubr
add
xor
ret
iret
cmp
push
sbb
mov
and
jb
add
or
and
repnz
ret
mov
adc
dec
pop
and
sbb
(bad)
(bad)
(bad)
dec
sbb
ror
and
sahf
mov
sub
inc
rcr
and
sbb
add
(bad)
(bad)
(bad)
call
xchg
inc
push
add
inc
stc
mov
adc
mov
dec
js
(bad)
(bad)
fistp
outs
(bad)
loopne
jmp
xchg
test
mov
cmp
inc
mov
std
(bad)
(bad)
stc
popf
sti
jmp
stos
push
inc
mov
repnz
test
(bad)
(bad)
jg
mov
adc
(bad)
inc
jmp
aam
imul
loope
jp
iret
inc
gs
(bad)
xchg
(bad)
(bad)
(bad)
dec
cmps
scas
mov
or
add
cmps
xchg
cmp
xor
(bad)
(bad)
(bad)
dec
in
cmp
sahf
xchg
pop
call
lock
mov
popa
sar
mov
fsub
dec
xchg
clc
repz
mov
sub
fwait
xchg
and
and
sbb
int3
add
sti
aas
jno
or
mov
ja
clc
aas
pop
fs
dec
lea
(bad)
fild
ret
shr
mov
icebp
aas
ror
and
adc
inc
lods
lds
scas
inc
xchg
clc
add
jle
inc
jp
aad
mov
jmp
aas
ret
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
(bad)
(bad)
(bad)
dec
adc
call
cmp
push
mov
xchg
aas
and
(bad)
loop
mov
jp
popa
push
movs
mov
call
jle
push
jl
mov
das
lea
mov
jmp
inc
inc
loop
movs
daa
jmp
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
(bad)
(bad)
(bad)
(bad)
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
(bad)
(bad)
(bad)
inc
test
pop
mov
jne
fld
cmp
jno
shl
(bad)
out
dec
nop
pop
cmp
fisub
jmp
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
(bad)
(bad)
inc
faddp
jge
call
mov
xchg
cmp
push
and
dec
dec
gs
std
or
add
ficomp
frstor
mov
pop
(bad)
cmp
iret
repz
pop
ja
mov
repnz
imul
ins
add
repz
cmp
pop
js
mov
sahf
cmps
stc
cmp
adc
xor
jg
dec
add
or
cs
or
sub
daa
push
pusha
jecxz
and
es
pop
xchg
nop
add
adc
cld
call
push
pop
or
xor
add
sbb
xlat
add
add
test
mov
int
push
fwait
out
sahf
(bad)
fsub
call
iret
repz
sbb
xor
repz
repz
dec
push
pop
pusha
iret
repz
push
nop
cmp
repz
movs
mov
int3
fnstcw
repz
lock
iret
add
jns
out
and
dec
pop
sahf
out
sahf
fs
xchg
movs
mov
sahf
out
(bad)
aam
hlt
rol
cmp
repz
cmp
fs
repz
js
pushf
test
shl
repz
fsubr
clc
rcl
jns
out
sub
ins
mov
int3
call
iret
repz
inc
pop
je
mov
sahf
addr16
cld
rcr
xor
jns
out
jo
movs
mov
rep
sahf
out
in
aam
sbb
or
inc
fcom
jns
lods
mov
int3
rep
sahf
out
call
iret
repz
adc
sub
cmp
cmp
repz
je
nop
movs
repz
repz
in
clc
out
sahf
fiadd
adc
xor
out
sahf
dec
pop
push
sahf
out
pushf
test
(bad)
fdiv
and
add
inc
xor
inc
or
jg
leave
test
jg
add
bound
push
mov
pop
pop
sub
adc
cmp
inc
or
dec
add
or
push
add
xchg
dec
scas
push
bt
mov
cwde
ins
dec
test
xchg
dec
jge
cmp
add
adc
aaa
fsubr
jg
or
push
sub
sub
inc
enter
add
add
aam
push
in
add
add
lahf
push
or
jns
out
pop
fs
js
out
sahf
out
cwde
movs
mov
iret
repz
lock
adc
sub
hlt
nop/reserved
push
jns
out
push
repz
out
adc
sub
repz
pop
jo
mov
fnstcw
adc
push
je
sahf
out
nop
mov
cmp
mov
sbb
inc
push
iret
nop
movs
mov
loopne
sahf
out
adc
xor
sahf
out
js
test
enter
out
fdivr
adc
xor
ficom
iret
push
fs
push
je
mov
repz
cwde
mov
sahf
out
sahf
or
inc
push
out
mov
in
push
or
add
mov
add
adc
mov
or
ins
fwait
movs
out
test
sbb
add
sbb
rcr
outs
adc
or
mov
xor
mov
push
scas
aaa
sbb
out
scas
mov
pop
ja
add
mov
cmp
mov
or
xchg
(bad)
ja
fisub
add
outs
imul
imul
nop
pop
sbb
outs
das
cmps
arpl
mov
jae
pop
xor
dec
outs
or
mov
outs
xlat
les
push
dec
and
xor
aaa
dec
outs
xchg
sub
or
inc
and
mov
add
pusha
movs
adc
aaa
xlat
xchg
fisubr
(bad)
fisub
pusha
mov
aas
in
inc
or
or
lock
xchg
xor
ja
(bad)
(bad)
(bad)
jmp
out
mov
les
(bad)
hlt
push
xor
xchg
fs
xor
fdivr
(bad)
(bad)
(bad)
(bad)
jmp
rcl
mov
sub
mov
sbb
dec
(bad)
(bad)
(bad)
push
repz
test
ficomp
jmp
(bad)
mov
hlt
mov
imul
(bad)
(bad)
stc
(bad)
std
in
leave
mov
add
ins
push
arpl
psubd
or
outs
cmp
imul
pusha
aad
jno
mov
inc
aam
dec
std
test
movs
cli
test
xor
(bad)
(bad)
(bad)
(bad)
dec
mov
lods
jecxz
fdiv
jne
fild
or
shr
cmp
ficom
(bad)
(bad)
(bad)
call
enter
mov
and
mov
cdq
xchg
mov
mov
or
push
xchg
aam
or
or
adc
stos
(bad)
(bad)
(bad)
call
data16
inc
fdiv
jno
add
aad
mov
mov
movs
inc
sbb
jmp
mov
call
xor
(bad)
(bad)
(bad)
(bad)
dec
xchg
sbb
push
sub
ins
fs
add
hlt
push
imul
ins
sbb
xor
(bad)
mov
xchg
repnz
xchg
push
ins
jnp
add
shl
adc
cmc
(bad)
fnstenv
(bad)
(bad)
jmp
mov
cld
fistp
ficom
gs
aam
pop
popa
mov
into
idiv
adc
mov
aam
movs
fisttp
xchg
fadd
(bad)
(bad)
(bad)
inc
shl
jmp
outs
xor
mov
sar
add
in
add
pop
(bad)
(bad)
(bad)
dec
leave
jl
fnstsw
add
daa
adc
or
and
test
or
(bad)
(bad)
call
mov
popa
into
push
stc
ficomp
leave
fldcw
and
xlat
(bad)
pop
cmp
mov
cmp
(bad)
(bad)
call
lods
ins
mov
in
mov
mov
add
inc
aad
scas
ja
popf
adc
fild
push
fdiv
or
test
fs
ds
or
or
push
in
dec
xchg
daa
(bad)
(bad)
(bad)
jmp
pop
jge
xchg
(bad)
shl
add
inc
push
imul
xor
(bad)
push
ins
sbb
push
imul
aam
loopne
ror
int3
dec
frstor
fistp
mov
(bad)
(bad)
(bad)
mov
mov
call
xchg
shl
push
repnz
addr16
cmps
(bad)
(bad)
(bad)
inc
mov
dec
ss
fisubr
or
scas
test
pusha
jp
inc
ret
out
pusha
fist
addr16
(bad)
(bad)
(bad)
dec
imul
and
shr
ss
push
xchg
ja
int3
add
mov
call
add
das
es
lds
or
sub
mov
cmps
call
ret
shl
call
ficomp
ret
es
pushf
mov
ins
add
ss
jmp
(bad)
(bad)
(bad)
jmp
jb
push
add
adc
mov
jnp
sbb
xchg
or
(bad)
(bad)
(bad)
(bad)
out
fdivr
fisttp
aam
rol
clc
mov
push
int
mov
mul
adc
outs
ja
mov
out
cli
jo
(bad)
(bad)
out
mov
pop
or
adc
sahf
gs
clc
sar
imul
(bad)
(bad)
(bad)
call
js
or
push
add
mov
cmp
cmps
not
pusha
ror
imul
(bad)
(bad)
ds
push
scas
fcomp
fldenv
fild
cmp
aaa
push
scas
mov
fidivr
mov
jmp
(bad)
push
sbb
mov
retf
mov
cmps
mov
sar
sub
push
mov
(bad)
jmp
cs
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
data16
test
xor
repz
ds
sub
cmp
push
out
loopne
rcr
push
aas
push
xchg
ins
in
mov
divps
cmp
(bad)
int3
pop
js
cld
push
les
mov
push
adc
mov
jg
outs
lock
jns
aaa
push
out
xor
push
ins
sahf
out
sahf
jl
test
fsubr
cmp
jmp
add
add
adc
or
imul
movs
pop
cmp
or
add
mov
mov
or
xchg
call
push
hlt
and
adc
iret
repz
cmp
push
cmp
mov
iret
repz
aam
call
int
and
sub
out
sahf
dec
pop
jo
cwde
test
and
mov
xchg
lods
add
or
push
inc
and
pusha
jmp
stos
xor
xor
push
add
xor
inc
and
xor
xor
inc
mov
inc
adc
pop
add
add
adc
enter
nop
inc
add
add
sub
inc
add
adc
adc
nop
inc
add
add
sub
inc
add
fs
add
nop
push
add
add
xor
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
sub
inc
add
adc
adc
nop
inc
add
add
sub
inc
add
fs
add
nop
push
add
add
xor
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
sub
inc
add
adc
adc
nop
inc
add
add
sub
inc
add
fs
add
nop
push
add
add
xor
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
sub
inc
add
adc
adc
nop
inc
add
add
sub
inc
add
fs
inc
push
leave
inc
add
dec
gs
test
fild
outs
les
ja
ins
stc
add
or
(bad)
sbb
(bad)
in
and
xor
es
jne
je
inc
jns
gs
(bad)
call
imul
inc
imul
fild
push
sbb
fld
jo
xchg
and
dec
outs
popa
fs
gs
inc
adc
sbb
push
cmp
dec
outs
les
mov
adc
imul
stc
or
mov
add
sub
arpl
push
adc
outs
xchg
mov
push
jne
call
fild
outs
jne
jp
push
or
imul
or
dec
jo
inc
aaa
xchg
ins
mov
push
jo
and
dec
ret
push
gs
rcr
and
xchg
push
stos
adc
imul
mov
ins
retf
pop
leave
out
adc
fild
push
inc
ss
loope
push
outs
ins
push
int3
ss
xor
jo
outs
je
inc
and
sahf
sbb
je
and
js
or
xlat
ss
mov
inc
je
bound
jae
imul
and
xor
sub
jo
addr16
pop
mov
imul
inc
pop
inc
shl
jbe
xchg
pusha
push
sbb
ss
xor
adc
or
and
pusha
ja
stos
mov
pusha
jns
mov
xor
dec
jns
cmp
jae
push
(bad)
daa
(bad)
push
imul
push
mov
test
mov
push
pop
ror
gs
mov
sub
mov
push
sub
fist
ins
jo
sbb
mov
inc
sub
imul
fs
repnz
fild
mov
mov
neg
je
pushf
mov
pop
sub
outs
ret
xchg
fst
lea
or
push
mov
call
push
dec
cmps
mov
gs
sub
push
pop
bound
or
cmp
call
pop
adc
stc
dec
mov
(bad)
stos
and
retf
xchg
inc
jo
enter
xor
mov
push
gs
imul
add
outs
pushf
push
test
mov
push
sbb
test
sbb
(bad)
jne
popf
xchg
fdiv
cli
inc
sbb
sub
sub
sbb
push
into
cmp
cmp
cmp
xor
xor
mov
icebp
mov
dec
popa
bound
dec
push
cmc
pop
push
mov
inc
pop
stos
adc
pop
lock
daa
icebp
mov
fldcw
jbe
imul
fisubr
push
scas
imul
xor
inc
xor
daa
inc
(bad)
hlt
ja
push
outs
ins
sbb
das
stos
pop
cmp
xor
sbb
inc
add
push
xchg
popa
pop
mov
loopne
sub
jb
sar
mov
jae
xchg
sub
adc
mov
loopne
push
xor
dec
jge
outs
stos
jns
shl
dec
or
aad
add
and
bound
mov
sbb
push
sub
imul
dec
jae
bound
add
popa
mov
adc
retf
adc
imul
sub
outs
push
iret
sbb
and
out
inc
xor
fucomp
out
dec
dec
ins
popa
mov
sub
dec
jmp
in
sbb
inc
push
push
out
push
js
sbb
inc
xchg
shl
mov
aas
mov
call
inc
and
(bad)
pop
or
dec
xchg
mov
sbb
ins
repz
sbb
std
lea
push
cmovg
adc
mov
cdq
scas
push
ret
fs
mov
push
push
je
movs
ins
arpl
push
mov
pop
popa
pop
lods
xor
mov
sub
adc
stos
aaa
and
push
aad
fcom
lea
inc
push
je
test
test
ja
movs
aaa
retf
cmp
inc
mov
mov
(bad)
scas
aas
push
dec
pop
inc
xlat
xor
mov
jo
sub
sbb
inc
xor
fsubr
fs
dec
sub
fsub
and
sar
inc
add
sub
or
arpl
shl
pushf
stc
push
sbb
int
dec
gs
retf
adc
mov
push
inc
dec
push
test
jecxz
dec
jnp
xchg
popa
push
sbb
nop
test
cwde
sub
xlat
out
jmp
mov
sbb
retf
mov
pusha
arpl
fs
mov
jne
push
outs
imul
dec
jcxz
cmp
dec
sub
jne
push
nop
jo
out
push
bound
inc
shl
fst
es
pop
push
pop
mov
fs
out
loopne
outs
(bad)
fist
jne
mov
outs
sub
add
and
pop
addr16
aam
sub
push
mov
push
in
cmp
adc
push
retf
loopne
mov
sbb
cmp
pop
jl
dec
dec
pop
fs
jns
sbb
xor
pop
and
xor
pop
sbb
ds
out
push
imul
aas
scas
inc
jae
or
imul
push
dec
pop
dec
js
dec
gs
mov
adc
add
dec
arpl
xor
in
call
xor
pop
push
xor
repnz
(bad)
bound
pop
dec
xor
icebp
xor
xchg
(bad)
(bad)
push
xchg
xor
ret
mov
mov
and
pop
xchg
sub
in
jl
arpl
mov
pop
ins
cmp
arpl
js
inc
aaa
outs
push
je
push
lock
inc
imul
das
inc
inc
sbb
ror
jp
inc
lock
ret
add
ja
movhps
cmps
arpl
cld
or
push
les
ins
ret
mov
lods
inc
sbb
es
int3
test
or
jg
and
imul
mov
dec
jb
js
dec
gs
or
jo
imul
adc
sub
mov
push
cs
jb
ds
data16
push
add
or
js
jecxz
cmp
test
repnz
fnsetpm(287
pop
push
rcl
mov
(bad)
addr16
imul
mov
outs
imul
loopne
call
mov
jno
inc
inc
ins
lea
fsub
push
out
add
push
mov
mov
popa
jae
push
pop
pop
add
das
mov
dec
inc
inc
jb
gs
hlt
loope
and
inc
jp
sub
xchg
add
imul
xchg
push
js
jae
jns
loop
push
cwde
push
mov
fs
sub
rcr
(bad)
xor
xsaves
fisubr
and
xor
dec
xchg
add
sbb
xor
movs
icebp
sbb
imul
adc
xchg
icebp
push
add
sub
cmc
(bad)
pop
sub
inc
mov
fstp
test
jns
push
pop
adc
imul
jge
dec
shl
or
push
imul
xor
sar
mov
dec
shl
pop
scas
cmps
imul
and
xchg
repnz
xchg
cmp
je
jmp
dec
cmp
adc
ins
pop
nop
je
cwde
jp
(bad)
inc
pop
dec
inc
jmp
jmp
arpl
outs
daa
push
cmp
mov
sub
sub
ins
test
aas
jl
and
fs
imul
xchg
jne
jo
daa
push
jo
scas
fisttp
aaa
sub
test
popa
vmread
push
cmp
cmp
out
mov
pop
dec
outs
cmp
jns
push
pop
and
push
ror
inc
and
repnz
mov
mov
sbb
sub
jmp
jmp
dec
push
sbb
stos
movd
fbstp
xor
pop
bound
pop
rol
retf
rcr
pop
iret
(bad)
mov
inc
lea
arpl
xchg
(bad)
sub
push
jo
inc
(bad)
mov
push
jne
and
inc
push
or
pop
outs
sbb
sbb
mov
mov
cmp
push
sub
shr
movs
int3
ins
nop
pop
push
scas
mov
pop
jo
push
retf
outs
push
mov
add
loop
shl
and
aaa
xchg
es
or
inc
cmps
inc
ja
pop
mov
inc
pop
test
inc
mov
sbb
or
jo
sbb
pop
mov
push
fs
lahf
pop
rcl
lods
pop
mov
das
imul
and
xchg
add
lds
add
inc
jae
jmp
pop
xor
add
xchg
pop
push
arpl
add
mov
xor
and
push
cmp
xor
pop
cmp
das
inc
cwde
ins
mov
lds
push
ins
outs
jnp
sbb
rcr
ins
and
xchg
push
int3
inc
arpl
sub
pop
mov
dec
push
out
sub
aas
xchg
lods
sub
mov
in
inc
hlt
jnp
push
movs
ins
lods
rcr
fcom
mov
jle
outs
jne
imul
adc
loope
sbb
pop
or
mov
leave
jmp
loop
pushf
cmp
sub
cmp
sahf
retf
mov
fdiv
pop
sbb
pop
test
ficom
inc
xor
mov
jb
shl
lea
jmp
add
jb
xchg
fs
xchg
sub
(bad)
jae
outs
arpl
adc
fstp
add
imul
jno
add
push
push
dec
js
add
js
popa
popf
(bad)
icebp
test
retf
loopne
pop
cwde
fldcw
daa
pop
das
mov
xchg
fbstp
icebp
jne
(bad)
mul
cmp
call
arpl
nop
ins
mov
cmp
inc
dec
sub
sub
(bad)
in
stos
popa
pop
and
imul
mov
jmp
out
std
pop
and
dec
xor
stc
pop
(bad)
adc
push
pusha
pop
pop
adc
push
outs
mov
imul
add
push
sti
sub
inc
sub
mov
xchg
push
cmps
cmp
adc
xor
inc
jmp
jae
dec
hlt
movs
int3
jb
cmps
jecxz
or
fistp
xor
sbb
inc
ins
push
retf
pop
adc
ficom
imul
xchg
push
jmp
jg
mov
sbb
mov
jmp
mov
sbb
sub
imul
test
leave
dec
mov
xchg
jbe
inc
xchg
rol
pop
jge
jns
cmp
mov
and
add
jae
sbb
stos
mov
das
ficom
je
mov
ins
inc
push
and
rcl
shr
pop
icebp
je
sub
mov
mov
sbb
push
jne
cdq
jo
xchg
mov
sbb
add
lea
fcom
inc
add
jae
out
sub
add
adc
rcl
cmp
lea
add
inc
pusha
pop
loopne
sub
sbb
push
stos
pop
or
inc
pop
mov
cmp
or
ins
and
fist
mov
aam
iret
das
dec
cmp
js
jns
adc
jmp
ret
push
dec
and
(bad)
retf
outs
mov
(bad)
sub
dec
jns
add
loop
iret
fs
outs
dec
mov
and
jnp
rcr
jmp
pop
cwde
push
mov
xor
pop
mov
daa
jno
scas
push
data16
mov
and
and
or
inc
sbb
push
ror
cmp
and
imul
retf
sub
sbb
mov
je
test
add
sub
mov
(bad)
imul
imul
sar
test
xchg
add
mov
add
je
adc
outs
call
push
cmp
cmp
add
ss
mov
lock
push
pop
pop
and
sbb
ins
mov
lahf
or
inc
and
adc
mov
add
lock
call
add
add
push
in
push
imul
mov
pop
add
or
adc
sbb
pop
pop
adc
adc
add
(bad)
dec
fsubr
pop
(bad)
add
lock
adc
lock
lock
add
(bad)
push
dec
add
sub
movs
lock
push
lock
and
cmp
adc
pop
add
adc
div
add
jo
pop
adc
sub
or
cs
add
or
les
adc
adc
cmp
jmp
pusha
inc
test
in
or
mov
add
xor
or
xor
mov
ud2
push
adc
neg
(bad)
sbb
or
and
push
or
mov
bound
adc
push
or
adc
or
xchg
xor
(bad)
jmp
ins
aas
sbb
stos
pop
sbb
cmp
adc
mov
xor
jo
or
add
or
test
(bad)
aas
cmp
sbb
add
sysret
xor
femms
sbb
adc
and
(bad)
(bad)
cmp
lock
add
pop
adc
push
cmp
and
push
pusha
movs
or
or
arpl
pop
int3
push
push
inc
lock
push
lock
add
lock
add
push
sub
fwait
adc
push
or
daa
mov
adc
std
add
lock
idiv
mov
sbb
nop
cmps
pop
out
or
cmp
or
sbb
pop
lahf
add
invlpg
and
sub
fidivr
aad
cwde
lock
add
fbstp
adc
inc
lock
add
sahf
push
lock
add
adc
push
cmp
imul
jb
pop
and
mov
mov
sub
or
add
dec
pop
jnp
xor
add
inc
adc
imul
outs
or
push
sub
add
sbb
aaa
lock
repz
adc
adc
xchg
mov
inc
add
and
sub
loope
enter
pop
lock
sbb
sbb
popa
js
adc
add
jl
mov
lock
(bad)
jmp
sbb
cmp
or
les
lock
add
sbb
and
or
push
adc
or
inc
outs
pop
(bad)
adc
inc
or
lods
test
lock
jnp
or
or
adc
pop
(bad)
lock
push
es
sbb
add
or
cld
call
or
or
or
fldenv
pop
and
mov
jge
cmp
sub
or
enter
std
int3
add
adc
push
scas
or
adc
adc
cdq
icebp
ret
outs
clc
lock
add
mov
sub
mov
pop
lock
inc
dec
adc
add
pop
daa
pusha
(bad)
jecxz
bound
sbb
(bad)
and
pushf
dec
lock
add
pop
lock
(bad)
mov
xchg
add
or
ja
fld
dec
or
push
push
sbb
xor
les
adc
adc
adc
mov
ds
cmp
ret
adc
sahf
pop
les
and
bound
mov
or
stos
adc
stos
pop
add
lahf
scas
dec
lock
std
aas
sub
sub
adc
pop
or
adc
add
call
and
adc
gs
mov
(bad)
call
prefetch
sbb
adc
sbb
or
mov
cmp
adc
adc
sbb
pop
std
inc
std
outs
add
pop
adc
outs
cmp
push
sbb
jg
jg
mov
cmp
or
adc
sbb
hlt
(bad)
call
fidivr
hlt
add
push
xor
pop
pop
pop
or
pop
mov
jmp
adc
stos
sbb
and
or
sub
adc
addr16
mov
push
mov
sbb
dec
(bad)
cmc
inc
xor
push
add
jnp
adc
dec
cmp
arpl
int
enter
cmp
emms
pop
out
and
cmp
xor
add
inc
ret
out
das
inc
sub
dec
or
push
push
and
pop
adc
mov
dec
sahf
add
lock
add
pop
jg
xchg
and
sub
or
add
sub
add
mov
bound
cmp
mov
and
pop
jle
or
pop
and
adc
(bad)
(bad)
jg
nop
adc
and
push
or
add
sub
cmp
repz
or
push
push
sub
mov
xor
push
fst
cli
inc
pop
xor
sub
xchg
daa
add
pop
pop
or
popa
inc
sbb
aaa
jns
push
mul
add
push
sbb
or
pop
dec
push
or
or
pop
sub
sub
lock
or
fdiv
or
adc
adc
or
ror
ins
out
pop
inc
mov
dec
pop
adc
inc
mov
add
or
and
adc
push
and
pusha
dec
push
adc
push
or
pop
dec
or
aam
call
and
push
lock
add
fadd
lock
gs
lock
inc
mov
or
addr16
test
cmp
jb
lock
add
data16
sbb
lock
and
add
or
sub
(bad)
call
inc
add
sbb
je
mov
inc
push
and
lock
mov
pop
pop
pavgb
xor
mov
and
push
wrmsr
pop
sub
or
inc
imul
rol
loopne
xor
inc
mul
push
shr
mov
inc
cli
pop
inc
adc
adc
das
adc
push
sub
pop
jl
push
sbb
or
adc
out
out
sbb
(bad)
movsx
add
or
or
or
jecxz
pop
lock
add
dec
inc
popa
push
xor
imul
or
mov
jg
pop
push
and
inc
or
or
sbb
inc
(bad)
(bad)
lods
or
add
sbb
push
inc
je
fsub
pop
mov
adc
mov
sbb
sub
sbb
lock
out
pop
cmc
in
add
cmp
or
and
adc
popw
sbb
(bad)
jmp
sbb
pop
daa
sub
adc
or
mov
dec
dec
sbb
sub
sbb
and
and
xchg
adc
push
adc
jbe
push
cld
and
xor
push
add
and
inc
xlat
cs
or
(bad)
add
xchg
mov
stos
mov
add
add
aad
(bad)
sbb
and
adc
aas
sbb
sbb
sbb
adc
jge
adc
mov
push
into
mov
leave
ss
push
fwait
or
aas
mov
sbb
pop
or
push
lock
adc
sbb
pop
cmp
mov
add
adc
inc
jnp
push
and
mov
dec
dec
cmps
inc
add
pop
adc
or
stos
mov
into
add
gs
sbb
das
clc
dec
sbb
and
inc
adc
pop
cmp
sbb
jle
inc
bound
test
pop
cmp
xor
or
mov
xor
pop
cmp
cmp
xor
sbb
jae
xor
std
mov
ret
sub
push
or
or
mov
in
dec
or
push
adc
dec
mov
data16
pop
add
push
inc
mov
xor
pop
fwait
sub
cli
out
pop
jne
sbb
add
adc
push
in
push
push
or
inc
cdq
push
cmc
add
or
xor
cmp
xor
or
xor
or
or
sub
jmp
cmp
and
adc
or
es
inc
sub
or
(bad)
and
das
aas
cwde
adc
and
add
or
xor
sbb
addr16
mov
adc
add
pop
push
or
mov
adc
adc
sbb
cmp
pop
pop
cmp
sub
push
sbb
cmp
add
retf
adc
adc
sbb
add
daa
adc
xchg
jp
and
sbb
daa
sbb
push
cmp
xchg
scas
or
and
and
or
fbld
sbb
ins
and
and
imul
call
push
adc
sub
adc
js
lahf
fidiv
push
or
cs
sub
in
scas
or
mov
add
add
sbb
adc
adc
sbb
cmp
and
ss
mov
jg
pop
push
ret
sub
and
mov
adc
or
fistp
lock
cmps
and
adc
or
inc
imul
call
xor
dec
mov
es
pop
jp
in
js
pop
or
outs
aas
neg
or
pop
adc
fmul
imul
je
stos
inc
(bad)
add
pop
push
sub
dec
add
adc
xchg
adc
arpl
jmp
pop
daa
or
sub
fadd
xchg
adc
push
add
push
cli
push
clc
iret
adc
or
push
or
jo
sbb
pop
and
adc
push
sub
or
movs
jo
or
ins
mov
ds
mov
add
push
cmp
and
or
jae
lods
cmp
or
call
or
xor
mov
(bad)
and
bound
or
and
add
mov
push
sub
push
das
sub
out
jp
jo
cmp
pop
adc
and
push
push
add
or
adc
or
out
adc
add
pop
sbb
ret
inc
ficom
add
dec
loopne
dec
and
dec
dec
lock
ss
ja
or
jmp
mov
jl
in
push
push
inc
lock
mov
into
add
pop
in
push
push
add
or
jge
add
js
inc
jmp
and
fs
es
gs
sbb
or
sar
test
add
call
push
stc
add
adc
jmp
pop
mov
pop
sub
add
fcom
mov
mov
mov
xor
pop
adc
jns
cmp
cmps
call
shr
lock
ficom
xor
pop
mov
daa
push
outs
adc
pop
or
add
xor
dec
adc
inc
adc
jp
and
xor
outs
sti
ror
(bad)
(bad)
sbb
call
inc
add
nop
sbb
pop
sub
daa
xchg
mov
and
lock
sub
popf
or
loop
xchg
xor
cmp
out
sbb
cwde
pop
xor
adc
sbb
cmp
retf
pop
cmp
sub
aaa
sub
call
jmp
(bad)
push
std
sbb
adc
push
sbb
ud2
das
adc
imul
sub
sbb
loop
and
xchg
jb
dec
pop
stos
(bad)
in
(bad)
inc
das
pop
pop
sub
imul
xor
inc
adc
or
sbb
sbb
xor
or
adc
mov
add
sub
or
and
push
inc
and
sbb
(bad)
(bad)
call
xor
or
or
and
dec
push
push
stos
jns
mov
lock
add
ss
mov
adc
in
sub
cmp
gs
(bad)
(bad)
call
and
inc
sub
sub
das
sub
sub
call
jp
stos
push
xor
pop
adc
jbe
and
adc
add
cmp
retf
add
or
adc
fistp
sbb
cld
sub
rcl
sub
ficomp
pop
pop
sub
and
js
(bad)
dec
(bad)
inc
or
push
inc
or
adc
pop
jle
jle
adc
adc
mov
pop
push
push
push
sbb
(bad)
push
in
push
xor
push
(bad)
push
or
pop
adc
sbb
and
push
push
adc
sbb
add
jbe
add
sti
push
and
sbb
scas
adc
loop
data16
sbb
dec
mov
sub
jae
aad
adc
jg
lahf
mov
cmp
or
ss
sbb
clc
call
icebp
pop
adc
push
sub
push
push
dec
and
aaa
and
aaa
cld
scas
add
inc
xor
or
sbb
and
inc
sub
add
loope
sub
adc
lock
fisubr
adc
xchg
cs
xchg
(bad)
push
dec
pop
sub
and
pop
adc
jb
ja
sub
sub
push
lock
mov
and
cs
(bad)
mov
and
sub
sbb
adc
jne
sub
jp
sbb
or
or
add
das
sub
mov
cs
sbb
rcl
xor
aaa
pusha
std
jmp
je
mov
sbb
pop
jo
popa
or
add
adc
or
sub
mov
or
and
dec
dec
adc
sbb
cmp
cmp
xor
xor
lock
add
push
cmp
mov
xor
lock
and
xor
(bad)
call
sbb
adc
inc
adc
cmps
inc
dec
sbb
sub
xor
clc
call
mov
lods
sub
ret
pusha
adc
inc
dec
adc
out
xor
pop
es
adc
rcl
or
movs
lock
add
xor
cmp
adc
cmp
ins
push
mov
(bad)
(bad)
jg
sbb
mov
pop
pop
cmp
sbb
pop
jbe
inc
or
sub
sub
mov
or
and
(bad)
adc
aaa
add
dec
cmc
cmps
inc
int3
pop
or
and
ret
icebp
or
adc
or
(bad)
dec
sub
sbb
sbb
and
das
cld
push
data16
fadd
pusha
js
out
push
adc
jb
xor
push
call
adc
and
xchg
or
add
xor
adc
xchg
(bad)
in
inc
adc
and
pop
adc
xor
in
lock
sub
mov
cmp
sub
clc
jo
dec
mov
or
cs
sbb
inc
sbb
lock
(bad)
fld
adc
dec
xor
or
xchg
gs
sbb
or
adc
adc
ret
adc
add
or
pop
xor
adc
adc
cwde
lock
add
inc
daa
ret
(bad)
cmp
adc
pop
sub
dec
les
xchg
push
bndldx
lock
add
(bad)
dec
lock
and
pop
xor
cmp
adc
cmps
cs
call
sbb
pusha
pop
or
(bad)
mov
inc
push
das
gs
add
lock
ficom
popa
test
lock
ret
mov
and
mov
mov
pop
sbb
push
sbb
and
push
and
jg
repnz
and
lock
adc
or
or
or
(bad)
adc
xchg
unpcklps
sahf
lock
pop
jo
mov
add
or
push
stos
dec
sbb
push
adc
and
or
pop
and
mov
add
or
aas
adc
inc
xor
dec
push
cmp
cli
mov
jbe
and
push
sub
jle
sbb
es
stos
retf
fs
dec
dec
retf
je
sub
lahf
or
sbb
out
(bad)
adc
push
ins
add
out
add
lock
add
push
dec
pmaxsw
adc
inc
dec
mov
std
arpl
inc
add
sbb
xchg
jbe
outs
rcl
les
or
inc
lock
sbb
loop
daa
push
lock
lds
jle
add
aas
sbb
sbb
inc
aaa
int
cli
pop
mov
push
dec
and
sbb
enter
clc
xor
loopne
sbb
inc
add
mov
push
lock
adc
pop
lock
and
adc
dec
push
icebp
fistp
sub
push
xor
jge
pushf
jl
add
pushf
jo
add
int
xor
xor
push
sub
xchg
adc
xchg
mov
les
inc
cmp
sub
xor
adc
jmp
or
hlt
mov
jg
push
jne
sub
bound
add
lock
jo
pop
xchg
aaa
push
dec
sub
pop
mov
or
fistp
sbb
xor
sub
add
adc
xor
inc
adc
add
xor
fwait
ds
mov
pushf
adc
push
jecxz
out
lock
add
inc
push
jne
xchg
pop
aaa
mov
cmp
es
add
cmp
fidivr
xchg
add
nop
pop
inc
or
nop
adc
or
or
adc
loopne
ins
or
and
dec
aas
leave
(bad)
and
pop
mov
sbb
adc
mov
sub
(bad)
inc
lock
cmp
pop
enter
add
sub
xor
iret
push
push
rcl
in
add
mov
or
scas
inc
fcom
adc
clts
and
adc
push
push
in
jp
or
cs
push
dec
xchg
or
sbb
js
fsub
pop
mov
cli
adc
sbb
fnsave
adc
data16
pop
es
or
sub
pop
sbb
jo
jo
or
movs
pop
inc
cld
ja
nop
or
mov
pop
es
ins
jle
call
rol
pop
or
or
das
sbb
aaa
fadd
jmp
or
popa
test
bt
ret
sub
fs
jg
mov
sbb
xchg
push
and
es
or
dec
lock
add
sbb
aas
push
(bad)
cmp
or
pop
mov
push
cmp
test
and
mov
sub
stos
dec
int3
test
enter
les
fdiv
xor
mov
push
lock
fisttp
adc
xlat
add
push
lock
dec
repnz
pop
push
xor
es
movs
add
(bad)
out
inc
adc
add
es
add
jg
cmps
or
add
sub
sub
(bad)
sub
or
sub
add
sub
or
add
(bad)
jg
rol
pop
lea
lock
shl
pop
xchg
add
sbb
or
ins
or
mov
mov
jle
add
add
sub
jg
mov
dec
out
aam
and
xchg
mov
add
sbb
or
cld
push
mov
xor
js
inc
add
cmps
stos
cmc
mov
fs
add
das
push
and
pop
dec
popa
addr16
push
imul
scas
mov
dec
cld
jmp
sub
inc
cwde
ins
xchg
push
xchg
bound
and
pop
jns
inc
inc
inc
cmp
push
xchg
and
and
lea
sbb
cmp
and
test
mov
jl
inc
cmps
add
int3
pop
out
ret
add
and
leave
shl
and
cmp
dec
push
mov
shl
dec
jp
adc
push
pop
push
add
xlat
and
daa
or
or
lock
popa
or
sbb
and
mov
xor
xor
and
xor
lock
mov
(bad)
sub
pusha
push
inc
inc
dec
sub
mov
and
pop
and
xor
inc
add
lock
or
adc
bound
inc
repnz
enter
mov
cmp
cwde
add
jne
or
(bad)
adc
aaa
cld
pop
fcmovu
aaa
sub
push
sub
js
or
loope
test
push
(bad)
imul
sub
cmp
cmp
sbb
sub
push
sbb
or
pusha
(bad)
sub
setnp
inc
sbb
cmp
or
outs
inc
inc
jg
xor
adc
adc
sub
ins
and
gs
(bad)
(bad)
(bad)
(bad)
jp
pop
and
or
sub
push
add
xor
push
push
getsec
sbb
aas
xor
jmp
or
push
push
sbb
push
sub
pop
xor
fbld
xor
push
adc
inc
and
data16
(bad)
in
add
add
jae
sbb
sbb
(bad)
(bad)
in
jmp
sub
or
inc
push
push
ds
adc
xor
inc
sub
pop
cs
(bad)
mov
pusha
sub
and
test
push
sub
xor
cmp
adc
sub
mov
sbb
jg
aas
adc
or
push
push
dec
sub
jl
(bad)
push
mov
scas
adc
das
aas
sub
inc
sub
cmc
or
mov
sbb
(bad)
pop
adc
sub
and
in
dec
dec
adc
lock
sbb
xor
sbb
loopne
adc
das
jp
adc
cmps
inc
mov
adc
push
ds
mov
inc
sub
xchg
data16
push
xor
outs
cli
mov
repnz
mov
adc
sbb
xor
fs
(bad)
outs
pop
or
pop
adc
sbb
xor
cmps
jb
or
pop
shl
js
dec
or
(bad)
and
push
push
cmovge
xchg
push
or
ins
enter
adc
xchg
mov
dec
movntps
sbb
scas
mov
add
sub
adc
or
sbb
or
or
xchg
add
loopne
and
cs
mov
daa
push
push
or
adc
or
les
movs
sub
adc
or
(bad)
mov
int3
adc
adc
pop
adc
xchg
out
jecxz
jge
and
adc
adc
xor
sub
outs
mov
inc
ds
adc
and
sahf
add
hlt
sti
jnp
pop
adc
adc
sbb
ret
mov
dec
sbb
adc
pop
scas
mov
cmp
adc
pop
add
ja
adc
mov
and
adc
cmp
stos
push
mov
dec
pop
mov
pop
or
movs
adc
adc
and
sub
jl
or
or
jg
std
(bad)
call
or
mov
adc
adc
and
push
and
ss
jl
sbb
or
sub
daa
push
and
xor
cmp
xor
fcomip
and
and
xor
push
sbb
and
adc
aas
cmp
and
lar
and
push
or
or
cli
out
cli
adc
adc
and
sub
sbb
sbb
or
mov
sbb
mov
or
or
sbb
sbb
imul
sbb
inc
xor
(bad)
sbb
and
je
inc
sbb
push
or
pop
add
adc
and
push
add
lock
cmp
or
add
pop
dec
push
fst
adc
xlat
in
pop
sbb
iret
mov
push
cmp
dec
dec
pop
fdiv
fiadd
push
adc
or
or
lods
or
cmp
and
imul
xchg
adc
adc
or
adc
or
daa
and
or
or
or
cmp
jle
and
and
or
out
and
sub
xor
pop
cs
(bad)
mov
aam
push
adc
fist
pop
mov
(bad)
(bad)
aas
outs
add
and
sub
sbb
cmp
or
or
lock
sub
das
add
push
sbb
(bad)
adc
sub
and
add
mov
inc
and
shl
jno
inc
or
movs
pop
or
es
or
sbb
dec
and
push
push
out
clc
loopne
dec
add
lea
xor
cdq
adc
jmp
sbb
or
or
cmp
in
cmp
push
(bad)
lock
pop
sbb
cmp
(bad)
clc
call
ss
sub
jle
sbb
dec
dec
dec
jne
sbb
pop
xchg
and
adc
add
fwait
sub
inc
xor
imul
inc
xchg
pop
lock
lock
(bad)
mov
out
add
pop
dec
lock
mov
push
(bad)
sub
les
mov
and
xor
(bad)
mov
mov
lock
push
lock
add
loop
xchg
add
dec
lods
cmp
push
and
retw
adc
enter
fmul
int3
xchg
movs
pop
loope
lock
add
pop
call
adc
pop
adc
add
push
inc
cmp
adc
adc
std
test
sub
pop
add
(bad)
out
xor
or
aaa
das
das
xor
bound
adc
fimul
cdq
push
enter
adc
or
add
js
outs
loop
pop
push
into
pop
sbb
sub
xor
xchg
cmp
and
ins
lock
mov
inc
add
cmp
cli
inc
pushf
outs
add
or
sub
loope
mov
and
cld
add
or
pusha
fs
call
sbb
and
jp
into
les
sbb
jp
push
xlat
cmp
adc
adc
xchg
push
adc
cmp
or
adc
or
mov
mov
adc
sbb
in
int
mov
das
cli
sub
or
adc
push
or
in
shr
push
es
ins
stos
xchg
in
inc
pop
cmp
fild
fmul
or
mov
push
sbb
or
mov
sbb
daa
xor
lock
jbe
mov
sbb
push
fs
jmp
rcl
lods
and
or
push
call
lds
jmp
add
push
jmp
or
out
adc
cmps
add
out
clc
add
repnz
jg
je
or
aam
xor
xchg
dec
xor
and
fimul
cmp
push
lods
nop
addr16
add
fild
and
adc
add
add
and
mov
bound
adc
dec
add
int3
lods
cmp
stos
fcomip
repz
add
xor
clc
fimul
lock
sub
ficom
es
xchg
pop
and
rol
loope
addr16
push
cli
add
mov
ins
mov
and
sub
or
push
(bad)
jle
pop
jbe
fnstsw
call
pop
lods
sbb
in
lods
mov
push
mov
fbstp
jl
out
add
pop
scas
popf
mov
movs
sbb
mov
mov
sahf
push
sbb
sbb
xlat
shl
mov
movs
retf
push
and
iret
lock
add
in
pop
lock
add
inc
pop
inc
push
cmps
xchg
adc
add
xchg
cdq
or
pop
lock
pusha
test
lock
add
jge
sub
sbb
add
int
cmp
or
stos
push
outs
cmp
push
inc
jb
or
dec
sbb
or
add
hlt
mov
sub
hlt
adc
je
fs
mov
test
sbb
adc
or
add
jnp
sub
sbb
inc
cwde
int3
xchg
and
pop
cmp
lock
push
pushf
add
fadd
and
or
imul
add
and
and
sbb
sbb
sbb
dec
add
add
or
enter
lock
sub
adc
test
jo
lock
(bad)
shl
les
out
pusha
lfs
lock
xor
fs
and
add
push
push
fs
call
dec
and
add
mov
gs
push
adc
loopne
and
or
fild
stos
adc
je
add
ror
inc
pop
rcr
add
verr
push
cmp
ins
ins
in
jae
dec
push
inc
adc
fcmovu
mov
add
into
jl
inc
or
mov
adc
add
sbb
out
sbb
add
push
(bad)
dec
xor
mov
rcr
or
jle
or
je
js
dec
mov
and
add
lock
mov
cs
mov
out
dec
in
dec
test
inc
cs
mov
ins
outs
dec
push
popf
add
or
sar
shr
jae
arpl
out
jae
out
xor
dec
inc
gs
sbb
dec
push
je
dec
cmps
add
or
jbe
loopne
and
scas
fdivr
das
push
outs
addr16
add
sub
inc
add
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
dec
add
add
lods
dec
