ret
push
mov
sub
push
call
mov
cmp
je
mov
mov
jmp
mov
mov
xor
div
mov
mov
xor
push
pop
div
mov
mov
shr
mov
mov
imul
mov
mov
xor
push
pop
div
push
pop
mov
shl
mov
xor
push
pop
div
push
pop
sub
push
pop
sar
or
mov
mov
mov
mov
mov
mov
shr
and
movzx
xor
push
pop
div
mov
mov
and
movzx
and
mov
je
mov
mov
jmp
mov
mov
xor
div
mov
mov
mov
mov
and
je
mov
sub
mov
mov
xor
mov
div
mov
cmp
je
mov
mov
jmp
mov
mov
xor
div
mov
mov
mov
mov
xor
mov
push
pop
sub
mov
mov
xor
mov
mov
or
mov
mov
mov
jmp
call
mov
mov
imul
mov
mov
xor
mov
mov
xor
push
pop
div
push
pop
mov
sar
mov
mov
xor
push
pop
div
mov
mov
shr
mov
mov
mov
mov
xor
mov
mov
sub
mov
mov
xor
mov
mov
mov
mov
pop
leave
ret
push
mov
mov
add
mov
pop
ret
push
mov
push
lea
push
push
push
push
mov
call
leave
ret
push
mov
sub
push
mov
mov
mov
movzx
imul
mov
mov
movzx
sub
mov
mov
mov
push
push
push
call
add
push
pop
sub
mov
mov
xor
push
pop
div
mov
mov
shl
mov
mov
or
mov
mov
add
mov
mov
and
and
mov
xor
mov
mov
xor
push
pop
div
mov
mov
sar
mov
cmp
je
mov
mov
jmp
mov
mov
xor
div
mov
mov
mov
mov
mov
mov
jmp
push
call
mov
sub
mov
cmp
jle
call
mov
mov
xor
mov
mov
xor
push
pop
div
mov
mov
shl
mov
xor
push
pop
div
push
pop
sub
mov
shr
or
mov
mov
add
mov
mov
mov
mov
sub
mov
mov
xor
push
pop
div
mov
mov
shl
mov
mov
imul
mov
mov
xor
push
pop
div
mov
mov
sar
mov
xor
push
pop
div
push
pop
sub
mov
shl
or
mov
mov
mov
push
push
call
pop
pop
mov
movzx
mov
mov
xor
push
pop
div
mov
mov
shr
mov
xor
push
pop
div
push
pop
sub
mov
shl
or
mov
mov
and
mov
mov
xor
mov
mov
mov
mov
and
mov
mov
xor
mov
mov
xor
mov
mov
xor
push
pop
div
mov
mov
sar
mov
mov
mov
mov
shr
and
movzx
mov
and
movzx
imul
xor
mov
mov
xor
mov
mov
add
mov
mov
and
mov
je
mov
mov
jmp
mov
push
pop
xor
div
mov
mov
mov
movzx
movzx
xor
mov
add
mov
movzx
movzx
mov
call
mov
push
push
call
pop
pop
mov
push
call
add
mov
jmp
xor
inc
je
mov
and
mov
jmp
mov
or
mov
mov
and
mov
mov
mov
or
mov
mov
xor
push
pop
div
push
pop
mov
shl
mov
mov
and
mov
mov
mov
push
call
mov
imul
pop
leave
ret
push
mov
mov
xor
cmp
mov
setne
mov
dec
and
add
mov
xor
pop
ret
push
push
push
mov
push
pop
mov
xor
mov
div
mov
push
sub
shl
mov
shr
xor
mov
or
div
pop
push
pop
sub
shl
mov
sar
mov
xor
or
div
mov
pop
sub
shl
mov
shr
or
pop
pop
ret
push
mov
sub
push
push
xor
push
call
mov
push
mov
xor
push
or
xor
push
push
mov
mov
mov
call
add
cmp
jne
push
push
call
push
call
jmp
xor
cmp
jne
push
call
pop
mov
mov
or
sub
mov
and
neg
sbb
and
shl
xor
push
pop
div
mov
mov
sub
shl
mov
sar
xor
lea
or
add
div
mov
imul
jmp
call
movsx
xor
cmp
jne
mov
xor
div
mov
xor
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xchg
xor
sbb
mov
sbb
xlat
mov
jne
ret
add
sub
repnz
add
daa
inc
mov
mov
rol
xchg
add
dec
retf
dec
fwait
add
ins
arpl
leave
sub
sub
rcr
inc
cs
mov
add
sub
sysexit
jne
xcrypt-ctr
cmp
xchg
je
sbb
ror
fist
in
bound
mov
out
rcl
mov
xchg
xchg
frstor
cli
scas
fsub
mov
enter
std
mov
add
adc
jns
jmp
fisttp
adc
push
out
fsub
fistp
test
shr
inc
add
arpl
scas
pop
cwde
add
mov
mov
cmp
mov
add
add
adc
cmp
stc
push
and
popa
mov
and
jle
(bad)
aam
push
lds
fstp
add
mov
pusha
cs
test
call
xchg
call
cmp
adc
mov
jp
imul
add
sbb
add
xchg
and
arpl
sbb
cmp
scas
xchg
daa
or
pusha
mov
push
sbb
add
pusha
clc
or
rol
ins
cdq
add
add
xchg
mov
je
ror
in
je
or
pop
outs
dec
mov
cmp
stc
jmp
inc
add
mov
shl
pop
xchg
xor
icebp
cmc
jnp
pusha
mov
jl
mov
clc
pop
mov
shl
jl
sbb
in
aas
dec
sbb
movups
dec
out
sub
sub
and
ret
mov
add
out
mov
dec
sbb
push
dec
dec
popa
or
fld
push
or
sub
dec
test
js
and
and
enter
add
std
data16
inc
les
mov
femms
jae
pop
sbb
add
mov
fadd
pop
add
jb
dec
dec
aad
bound
test
jne
jmp
ret
and
fldenv
mov
rcl
sahf
xchg
aas
ret
in
xchg
enter
dec
sub
and
std
push
jns
pop
jne
or
adc
inc
in
jmp
mov
or
adc
adc
ficom
or
add
cmp
out
lods
pop
pop
je
sub
inc
jb
stos
xor
aam
sbb
pop
out
sbb
and
xchg
dec
jg
push
add
cwde
mov
xadd
add
(bad)
pop
pop
mov
mov
push
add
cmp
cmps
repz
mov
push
clc
pop
loop
xchg
fild
cmp
add
out
xor
and
jmp
in
fsubr
cdq
add
pop
out
rcl
cs
push
sub
call
dec
mov
pop
mov
loopne
out
cmp
xchg
inc
sahf
xchg
clc
xor
cmp
mov
(bad)
mov
ret
lods
pop
mov
sbb
push
jo
push
leave
adc
mov
sbb
add
loop
pop
adc
push
adc
in
dec
lahf
int
cwde
retf
adc
sub
add
jg
ins
sub
add
pop
call
rol
pop
pop
ret
add
jae
jecxz
test
fstp
add
and
xchg
fldcw
in
clc
arpl
add
ret
add
je
dec
sub
add
lds
or
mov
(bad)
or
and
les
fcomp
pushf
nop
sbb
cmp
mov
and
adc
push
mov
xor
rcl
push
pop
jne
lods
jae
test
add
push
shl
mov
and
ins
daa
jne
mov
shl
data16
adc
push
add
cmp
xchg
mov
fnstcw
scas
add
inc
mov
add
fld
push
arpl
add
(bad)
sahf
sbb
push
repz
push
and
iret
sub
rcr
jno
in
xchg
cdq
test
push
loopne
test
scas
js
dec
dec
push
adc
nop
test
jno
hlt
add
or
pop
xchg
cld
test
and
lock
push
(bad)
repnz
add
sahf
add
push
loopne
fwait
shl
fmul
sub
add
push
inc
leave
add
or
jmp
xor
add
inc
loope
xor
stos
push
or
dec
xchg
repz
daa
cld
xchg
dec
push
add
inc
jmp
push
cld
or
aad
mov
shl
test
in
add
stos
inc
pop
adc
xor
add
cwde
add
dec
or
call
scas
push
mov
mov
pushf
js
sbb
popf
dec
mov
jge
cmp
push
gs
jne
jge
fld
fwait
inc
lea
or
(bad)
in
xlat
add
ds
cli
fiadd
int
add
inc
mov
pop
loop
and
loopne
add
movs
or
xor
push
les
clc
mov
and
cmps
je
mov
dec
mov
(bad)
call
es
mov
add
push
sub
rcl
xor
mov
adc
xchg
je
int
mov
or
sbb
mov
and
dec
jmp
fsubr
mov
adc
cwde
ret
pop
mov
int3
push
sub
mov
jmp
sbb
xchg
jo
stc
sub
mov
les
loope
popf
inc
cwde
fs
cmp
aam
adc
sub
ftst
xor
std
xor
out
pop
or
add
mov
adc
ret
in
push
mov
bound
lahf
adc
push
rcr
push
nop
push
loopne
xor
js
cmp
or
mov
and
jne
retf
ret
shl
dec
mov
inc
(bad)
lea
outs
cmc
js
int
add
mov
xchg
pusha
rcr
hlt
cmp
shr
je
mov
sbb
inc
jae
fsub
xchg
lods
lock
push
or
rcl
cmps
imul
fwait
mov
test
push
dec
int
adc
leave
and
mov
shr
mov
je
fisubr
je
mov
push
sub
in
outs
out
mov
push
lock
cld
retf
cmp
jo
nop
pop
rol
fidivr
mov
ret
imul
enter
xchg
add
(bad)
xor
inc
fist
xor
push
in
movs
adc
push
je
cmp
loop
fld
push
mov
mov
jge
jo
mov
or
add
jne
inc
add
sub
add
add
gs
xor
add
les
and
pop
mov
xor
mov
out
and
aad
in
add
jmp
mov
jle
lock
sbb
test
mov
das
inc
mov
je
push
lock
xor
add
dec
xchg
or
cmp
addr16
mov
aam
xchg
inc
das
push
xor
add
test
je
xchg
cmp
add
xchg
add
inc
add
pusha
xchg
and
jae
inc
dec
or
jbe
sbb
gs
aas
fwait
xor
xor
sbb
sub
push
sar
add
ja
adc
cwde
add
popa
shl
mov
add
add
(bad)
push
and
test
jb
push
dec
fcomp
add
add
mov
add
xor
rcr
outs
mov
jne
mov
xor
or
jge
test
xor
aaa
test
(bad)
push
cmp
pop
scas
add
add
jmp
lea
push
js
push
inc
add
fnsave
push
or
xchg
push
out
rcl
gs
ror
sbb
or
mov
add
pop
test
xchg
push
xor
add
and
xor
dec
ja
shl
inc
(bad)
pop
fld
hlt
je
mov
add
inc
mov
dec
cmp
pop
(bad)
test
ins
test
sbb
sbb
arpl
lock
adc
add
xchg
push
jp
les
add
shl
or
loope
pop
mov
add
jecxz
(bad)
(bad)
mov
jle
daa
or
cmps
in
sbb
add
cmc
mov
in
inc
js
lock
xor
add
sbb
jbe
cs
ja
or
mov
xor
inc
ds
mov
sbb
hlt
out
mov
adc
or
add
add
jmp
adc
js
add
jmp
call
pop
sbb
or
mov
add
mov
test
cmp
dec
add
loope
idiv
ficomp
enter
and
daa
or
or
sbb
jl
ja
sar
in
inc
add
jmp
xor
add
pop
dec
pop
rcl
clc
aaa
add
push
adc
jmp
lsl
xlat
inc
mov
lods
and
int3
mov
pop
clc
push
push
add
bnd
xlat
adc
add
sti
sbb
pop
outs
xchg
cmp
add
or
inc
test
aam
cmc
pop
lock
ins
add
cdq
iret
jp
push
mov
rcr
mov
add
aaa
sub
dec
adc
inc
inc
jnp
sub
adc
mov
push
mov
call
add
std
jbe
icebp
push
adc
pop
add
add
mov
repnz
sub
push
push
rcr
cmp
(bad)
fmul
addr16
jg
dec
add
scas
test
add
push
cmp
pop
inc
nop
dec
ins
inc
cmp
and
dec
add
adc
lods
pop
mov
xor
add
sbb
or
mov
add
aas
dec
sbb
add
add
add
stos
lds
mov
pushf
cld
inc
adc
cmp
int3
add
jns
add
inc
inc
xchg
add
adc
in
add
int
call
or
enter
jae
mov
mul
xchg
or
movs
mov
mov
or
add
push
je
add
sub
ja
xlat
push
stos
xor
lock
dec
add
loopne
push
jmp
add
movs
add
(bad)
in
pop
add
mov
sub
xor
xor
inc
add
sbb
jno
or
add
fcmovne
add
int
xchg
popf
jbe
add
int3
in
mov
mov
aaa
test
add
(bad)
push
daa
add
cwde
add
xchg
jl
or
je
in
mov
jmp
jmp
mov
xchg
sbb
jg
in
movups
imul
arpl
dec
push
mov
cmp
add
add
out
mov
sub
cmps
out
sar
cli
jl
mov
sub
out
pop
in
adc
jb
mov
(bad)
scas
and
add
lahf
mov
pop
push
(bad)
loope
movs
rep
(bad)
push
cmp
mov
les
jns
pop
mov
cdq
cmp
mov
out
push
xor
push
jmp
add
scas
fistp
(bad)
stc
mov
shl
pop
ins
and
mov
push
inc
je
loopne
aam
add
daa
adc
dec
test
rcl
adc
add
ins
clc
push
retf
push
push
jb
add
cmp
adc
bound
pop
aam
(bad)
mov
aad
pop
test
les
or
add
xor
data16
sbb
xor
pop
int3
sub
cmp
sbb
add
cmp
loop
scas
add
mov
push
mov
cmc
in
fisubr
mov
sbb
mov
pop
adc
push
inc
dec
add
and
cmps
xchg
dec
cmp
shl
xchg
out
push
jb
sub
jne
mov
loopne
nop
push
lock
xor
clc
mov
inc
test
ins
dec
popf
clc
je
and
lds
lods
push
ins
ins
add
sbb
daa
adc
test
fsub
sbb
cld
mov
sub
fsub
push
mov
enter
shl
jo
(bad)
dec
cmps
dec
sahf
xchg
sub
dec
jmp
cmp
xchg
push
jo
add
add
ret
outs
push
lea
mov
ins
fwait
mov
ret
fdiv
adc
mov
mov
add
das
js
and
pushf
sahf
sub
inc
loop
in
push
in
iret
pusha
movs
retf
leave
add
lock
sub
out
jbe
pusha
sub
add
push
or
sbb
out
pop
sub
aam
clc
aas
sbb
je
sub
out
(bad)
in
mov
push
dec
inc
mov
test
push
iret
or
jmp
cld
jmp
sahf
or
js
add
dec
popa
push
add
add
inc
mov
sbb
jno
add
jne
repnz
add
(bad)
int3
loopne
pop
test
mov
xor
push
push
add
sbb
add
add
sub
ins
outs
push
xlat
sti
int
leave
fwait
cmp
adc
js
in
dec
pusha
enter
adc
xchg
or
or
push
repnz
add
mov
sbb
repnz
dec
mov
add
sub
sub
fsubr
and
int
call
(bad)
pop
fwait
dec
xchg
add
dec
sub
loope
jo
jne
xor
out
iret
pop
or
inc
xchg
aaa
adc
stc
pusha
mov
add
jg
sub
test
jo
adc
cmps
aas
jns
pop
(bad)
into
mov
push
pop
mov
cmps
adc
mov
cs
ins
(bad)
iret
loopne
mov
jecxz
loopne
out
and
mov
cmp
jnp
lods
mov
add
imul
or
and
fs
or
leave
call
out
(bad)
sahf
cmp
js
push
push
cmps
mov
ret
fs
fucom
je
ds
jmp
xchg
sbb
lods
leave
aas
xchg
fs
add
jno
addr16
mov
jo
cli
jmp
rcr
cmp
enter
dec
add
aas
add
test
mov
popa
das
enter
xchg
pop
test
or
xchg
push
or
icebp
call
pop
mov
ror
or
popf
shr
and
sub
ds
inc
adc
mov
lods
add
push
cmps
loopne
pop
dec
push
sub
add
inc
adc
enter
leave
or
mov
lods
add
jl
es
sbb
repnz
icebp
add
mov
sub
call
add
push
sub
cld
pop
mov
sar
xchg
fwait
mov
jb
cdq
dec
ins
(bad)
scas
add
fadd
lock
jb
and
(bad)
mov
dec
add
jns
or
inc
pcmpgtw
inc
repnz
add
add
(bad)
mov
test
(bad)
cmps
inc
jecxz
add
dec
and
mov
push
jg
inc
daa
fcomp
dec
add
mov
fcomp
adc
stos
inc
add
jg
test
push
sar
mov
mov
add
std
add
rcr
xchg
add
xlat
sbb
pop
js
aas
jo
into
add
add
mov
cli
cmc
jbe
xchg
test
mov
push
push
movs
mov
add
push
mov
retf
shl
mov
fisttp
push
leave
inc
stos
sub
xor
lods
mov
jnp
lods
jle
cs
push
cld
fnstsw
aad
lea
jne
push
mov
test
inc
js
retf
popa
out
cmp
mov
cwde
adc
mov
xor
std
test
cmps
ret
push
cmp
(bad)
fsub
fild
pop
mov
add
pop
pop
and
add
add
pop
jle
enter
in
inc
or
cmp
mov
dec
pop
test
je
fwait
cdq
cs
jmp
or
sub
(bad)
ins
add
push
add
add
add
add
pop
xchg
push
cmp
adc
shr
fwait
stos
imul
add
and
jae
mov
push
add
(bad)
jno
loop
repz
punpckldq
add
push
call
add
mov
mov
repnz
jl
adc
mov
fstp
mov
inc
mov
mov
add
cmp
test
sbb
fild
(bad)
xor
ror
jle
pop
rol
push
or
(bad)
jb
mov
je
mov
dec
in
add
in
jnp
pop
cmp
add
test
pop
xor
cwde
sbb
jo
adc
bound
xor
fcmovnbe
repnz
jmp
push
mov
adc
cmp
cmp
rol
cld
jmp
outs
add
add
(bad)
int
sbb
outs
outs
aas
clc
adc
xchg
in
inc
cs
sbb
mov
add
pop
cmps
jnp
fwait
pop
mov
cmp
test
mov
sbb
and
loop
push
imul
add
call
xchg
adc
jg
hlt
call
jno
push
fs
repnz
stc
dec
dec
dec
add
mov
push
inc
aam
dec
mov
mov
ins
fcomip
imul
xor
xchg
mov
test
xchg
stc
dec
imul
cli
icebp
rcr
inc
leave
adc
inc
test
lock
adc
hlt
pavgw
jb
mov
xchg
lahf
pop
add
popa
sub
and
cmp
rep
ins
sbb
dec
xor
xor
adc
push
pop
xchg
ins
cmova
pop
fbstp
(bad)
ror
mov
xchg
jmp
popf
cmp
mov
in
add
jmp
test
jmp
add
pop
lods
scas
inc
push
(bad)
leave
mov
push
cmp
pusha
(bad)
int3
fidiv
mov
cld
and
jo
jne
or
lods
scas
pusha
lock
pushf
jns
and
cs
push
push
dec
xchg
pop
sbb
rol
xchg
outs
into
dec
jbe
rcl
cdq
aaa
add
push
xchg
shl
stos
imul
test
sbb
(bad)
sbb
imul
ja
or
xchg
jb
add
add
imul
pop
push
cmp
add
and
sbb
popa
stc
jecxz
pop
xor
push
dec
repnz
pop
xchg
jnp
add
ins
add
or
push
(bad)
sahf
nop
inc
(bad)
sub
adc
lea
lods
inc
sbb
add
add
mov
jne
inc
(bad)
push
push
mov
jns
fadd
inc
(bad)
(bad)
pusha
mov
add
leave
dec
xchg
mov
sbb
add
repnz
movs
inc
inc
retf
js
fmul
data16
lock
jmp
pop
movs
add
add
add
hlt
add
adc
jge
add
fidiv
add
rol
bound
sub
fwait
jecxz
les
add
sbb
or
push
mov
mov
add
sub
push
into
outs
mov
cmps
fs
mov
stc
push
cdq
pop
retf
add
pusha
push
shl
sti
rcr
add
mov
push
mov
call
mov
fiadd
sbb
dec
push
mov
sub
out
push
pop
cmps
and
aaa
or
call
sub
mov
pusha
andnps
in
mov
mov
popf
mov
cli
adc
call
enter
xchg
fsubrp
pusha
mov
mov
scas
addr16
fwait
(bad)
popa
popf
jecxz
rcl
sbb
and
enter
sbb
ret
dec
movs
and
loop
mov
cmp
xor
adc
out
sub
pop
cs
jbe
add
pop
je
pop
mov
pop
mov
gs
aam
jg
dec
mov
cld
sahf
dec
popf
adc
stc
cld
fdiv
(bad)
xchg
inc
inc
cld
and
mov
pop
adc
mov
add
pop
ror
xor
add
mov
sbb
cmp
rol
sbb
inc
out
imul
and
add
scas
jecxz
test
add
add
xor
adc
sub
mov
add
mov
psrlw
add
add
dec
int3
aas
inc
and
shr
xchg
and
pusha
mov
xor
idiv
leave
mov
push
add
and
add
in
jnp
mov
sbb
scas
or
daa
sub
jo
mov
fsincos
cmps
cmp
cwde
jne
mov
push
in
or
jae
out
mov
mov
add
xor
fimul
xchg
in
dec
inc
ins
retf
repnz
jns
shl
in
sub
outs
cmp
pop
test
aam
bnd
cmp
je
jg
out
int3
ds
dec
cwde
jle
push
sbb
xchg
add
sar
xor
int3
inc
verw
adc
add
(bad)
and
(bad)
sahf
add
push
imul
in
sub
xchg
jns
or
add
jmp
movs
cmps
test
pusha
sbb
xchg
jmp
or
adc
pop
or
mov
inc
ret
fistp
jne
cmp
add
add
sbb
out
pop
mov
cmp
jns
add
add
int3
inc
xor
push
lods
pop
pop
out
add
aaa
and
dec
dec
pop
pop
or
in
fadd
scas
cmovbe
retf
jbe
movs
icebp
push
xor
add
push
sbb
das
push
retf
xchg
or
fimul
add
cmps
xchg
loopne
clc
jge
adc
and
mov
inc
push
xor
add
jns
pop
jne
add
push
sub
and
inc
cmps
jl
(bad)
fneni(8087
adc
inc
loope
aas
or
dec
mov
out
jb
lods
add
jne
ror
fidivr
aam
sbb
sti
mov
inc
mov
lds
mov
jmp
shl
sar
jmp
pop
mov
iret
xchg
mov
xor
push
loope
enter
test
add
cmp
add
add
add
add
sbb
and
or
js
push
jae
push
dec
dec
cmps
add
mov
cmc
sub
fld
les
call
aas
jp
es
clc
jle
mov
inc
mov
jge
add
mov
hlt
and
mov
enter
add
lods
jg
nop
mov
(bad)
popa
test
dec
add
arpl
aam
xchg
mov
shl
cmp
mov
jno
xor
in
movs
add
stc
jmp
(bad)
fadd
or
sub
std
fldenv
fadd
adc
jo
xor
add
addr16
outs
dec
sub
pop
iret
inc
ret
cmovo
push
or
add
jl
push
pusha
jge
sub
nop
lock
inc
xor
fnstenv
mov
scas
mov
push
xchg
sbb
jno
xor
sti
fistp
rcr
clc
push
loopne
sub
add
je
pop
sbb
inc
jmp
add
mov
and
(bad)
fdiv
loop
cmp
add
push
loope
mov
retf
loope
dec
or
mov
fs
add
jns
xor
add
cld
xor
mov
dec
mov
jmp
mov
test
push
sbb
add
mov
je
sub
jb
ror
jmp
and
add
mov
(bad)
psubb
lock
and
mov
int
sti
out
adc
sar
xor
inc
xor
sub
add
hlt
scas
add
sbb
rcr
je
lahf
out
sub
gs
mov
mov
shl
out
mov
(bad)
test
add
jge
leave
inc
xchg
jbe
pop
xor
or
add
add
stc
out
(bad)
je
jl
push
push
cmp
mov
or
ja
mov
jo
out
xchg
cdq
jg
pop
inc
pop
retf
add
add
mov
stos
mov
inc
shr
(bad)
cmp
jo
sbb
repnz
outs
sbb
shl
in
add
xor
stc
bound
cli
stc
in
ds
dec
out
pushf
mov
mov
(bad)
arpl
dec
gs
cmps
jmp
jle
xor
vmovapd
push
add
in
rol
dec
dec
or
add
clc
je
mov
sub
add
jbe
pop
add
sub
or
daa
std
sti
mov
pusha
xchg
out
pop
xor
xlat
sub
adc
add
xor
cmp
push
test
add
mov
(bad)
inc
sbb
add
pop
hlt
jne
ret
shl
or
sbb
inc
or
imul
dec
rol
or
mov
dec
mov
pop
sbb
pusha
mov
push
cmp
or
dec
add
add
es
inc
imul
ds
pop
enter
lds
sbb
jg
stc
aam
mov
inc
sub
das
mov
aam
fisttp
and
pusha
mov
adc
inc
xchg
xor
bound
add
pop
fld
xchg
mov
push
adc
iret
stos
adc
ins
dec
and
ja
dec
mov
mov
add
shld
jo
jno
fisubr
add
leave
mov
sbb
js
hlt
pushf
inc
popf
bnd
inc
mov
add
push
sub
xor
push
fisttp
push
add
nop
in
imul
xchg
add
repnz
test
adc
and
push
pop
pop
repz
clc
fld
dec
psraw
int
lods
adc
add
add
out
and
mov
mov
pop
ret
test
mov
arpl
adc
push
adc
rol
aad
jmp
aas
pop
jl
cmp
pusha
sbb
add
inc
mov
cmp
call
call
push
xchg
fcom
mov
add
(bad)
cmp
dec
cmp
cs
sbb
mov
jo
mov
sub
aam
cli
push
mov
push
dec
push
xchg
fidiv
lock
inc
xchg
loop
cmp
add
jne
mov
inc
icebp
ficom
add
xor
cmp
xor
pop
call
dec
cmp
imul
dec
scas
jnp
cmps
add
pusha
add
stc
or
fdivr
mov
or
add
push
push
mov
add
push
lods
repz
jle
inc
push
out
int3
ret
div
mov
sti
add
adc
cld
add
xchg
jl
or
mov
lods
movs
call
pop
stos
push
mov
dec
or
out
jecxz
fldenv
push
inc
add
cmps
popa
add
sbb
out
cmp
cs
into
sbb
add
xchg
(bad)
aad
or
bound
push
add
inc
rol
xlat
loopne
adc
xlat
pop
adc
(bad)
ja
neg
add
stos
dec
dec
mov
loopne
lahf
mov
add
add
xor
add
popa
(bad)
inc
push
xchg
and
inc
sbb
scas
cs
je
sbb
add
xor
add
rol
movlps
cmp
pop
or
inc
inc
lods
or
or
jg
sbb
fdiv
inc
clc
jnp
loopne
mov
xchg
push
adc
add
rol
stos
nop
lahf
cmp
mov
adc
stos
push
inc
add
sub
sbb
or
xchg
dec
add
test
scas
mov
and
push
adc
scas
mov
sub
push
add
or
xor
arpl
adc
cmp
sub
out
jmp
xlat
and
add
enter
or
pop
cmc
add
cmp
add
push
outs
xchg
es
pop
imul
fld
inc
mov
and
iret
call
push
stos
mov
ror
mov
inc
or
add
nop
inc
jo
xor
dec
stos
and
sbb
dec
pop
mov
or
inc
xor
sbb
pusha
add
scas
stc
adc
add
mov
push
adc
test
add
in
mov
add
aaa
into
fild
push
push
int
pushf
add
adc
leave
add
inc
sub
pop
call
stos
add
pop
sbb
push
dec
addr16
add
fist
jb
(bad)
push
and
(bad)
iret
fdivr
add
call
pop
sbb
jno
adc
pusha
jge
jmp
lds
or
mov
imul
popa
adc
xchg
mov
xchg
test
mov
xlat
dec
sbb
and
add
inc
ja
dec
add
call
xor
mov
out
inc
(bad)
scas
mov
retf
push
pop
nop
iret
call
mov
sbb
inc
mov
in
ficom
jmp
inc
sub
xor
add
adc
dec
idiv
iret
adc
and
out
test
cmp
popa
inc
cdq
out
or
mov
cmp
mov
push
scas
je
out
shl
add
jb
hlt
cwde
sbb
sbb
pop
fcomp
xchg
sub
daa
js
mov
add
je
pop
mov
es
sub
bound
js
or
stc
add
in
sub
add
loopne
les
xor
jl
shl
jmp
and
dec
sbb
or
(bad)
clc
xchg
loopne
or
cmovge
cdq
and
jb
test
mov
aaa
fmul
adc
movs
jbe
ja
add
(bad)
imul
push
mov
jmp
hlt
add
fldcw
sbb
cmp
or
add
data16
push
mov
inc
(bad)
out
cs
sub
stc
pusha
lea
repnz
jge
inc
nop
xchg
sub
mov
sbb
das
fnsave
scas
jno
loopne
add
or
rcr
int
clc
add
movs
inc
add
call
sub
or
dec
mov
cmp
adc
mov
lods
mov
shl
mov
xchg
add
aas
dec
shl
sbb
in
enter
les
add
adc
or
push
sbb
rol
cmps
lahf
dec
pop
cmp
inc
enter
ret
or
add
jb
nop
and
mov
stc
outs
add
outs
push
jne
push
ret
or
xchg
test
add
add
inc
or
inc
xchg
je
shr
inc
cmp
test
ins
add
add
sub
xchg
sub
push
pop
sub
test
outs
sub
inc
push
xlat
add
jbe
add
inc
sbb
cld
jg
int3
leave
or
push
fmul
or
inc
pop
bound
jmp
jb
pop
gs
fs
mov
and
dec
call
push
inc
mov
sar
cmp
push
mov
pop
push
test
add
(bad)
out
add
arpl
scas
add
(bad)
lods
addr16
out
pop
mov
mov
stc
mul
not
push
jb
inc
cmp
addr16
mov
jnp
mov
imul
int3
smsw
mov
ins
gs
cwde
xchg
cmp
add
mov
sub
cmp
push
lock
ret
jmp
clc
dec
pop
enter
js
mov
inc
cmp
pavgb
xchg
ror
jns
inc
shr
daa
arpl
dec
out
dec
or
xor
ret
inc
(bad)
stos
fbstp
or
loop
dec
repz
sub
movs
add
je
add
ins
out
nop
neg
in
xor
mov
add
call
cmp
popa
cmp
mov
mov
xchg
lock
ret
cmp
gs
ja
sbb
add
push
mov
test
push
lock
fs
add
shl
push
rol
lds
add
pop
jbe
mov
add
or
aas
add
sbb
in
push
(bad)
jmp
add
(bad)
push
mov
mov
call
gs
inc
jb
hlt
sahf
fdiv
pop
xor
(bad)
adc
clc
out
mov
or
inc
gs
jbe
sub
enter
pop
adc
dec
add
movs
add
push
inc
ins
sti
inc
int3
aas
xchg
mov
loopne
jo
(bad)
dec
in
sub
add
dec
les
push
mov
push
mov
jmp
sub
pop
xor
xchg
add
iret
cmc
mov
push
call
pop
rol
xchg
pop
mov
jp
pop
lahf
sbb
imul
add
jp
cmp
pop
or
fimul
popf
mov
mov
mov
in
(bad)
fstp
push
push
add
test
jg
adc
ds
dec
jno
aad
sar
add
shr
mov
push
jmp
data16
push
cmp
test
adc
rcr
sub
mov
cmp
cli
adc
into
pushf
pop
arpl
jmp
sbb
cs
test
int
dec
adc
add
arpl
mov
add
stos
dec
js
jge
push
xor
hlt
pop
xchg
jmp
adc
fiadd
push
ja
lock
mov
xchg
je
ror
dec
test
mov
inc
sub
ficom
int
mov
inc
and
add
lds
pop
in
aam
adc
mov
fnstcw
out
xor
dec
push
retf
gs
add
fs
xlat
rcr
mov
adc
or
push
mov
push
cmp
inc
int
inc
add
xor
(bad)
pop
call
or
mov
xlat
mov
add
aam
and
repz
call
cwde
test
call
je
or
mov
or
dec
(bad)
adc
cmc
mov
jns
inc
jo
sbb
mov
inc
push
int3
and
jmp
sbb
stos
adc
cmp
imul
add
mov
ret
aaa
dec
fs
arpl
add
scas
jbe
push
rcl
int
mov
sub
mov
mov
sub
lahf
xchg
pslld
or
sbb
pop
xchg
pusha
jecxz
fmul
mov
push
stos
add
data16
add
enter
push
gs
jle
nop
retf
xor
js
jge
push
inc
in
jle
ret
cmc
aaa
adc
push
ja
daa
mov
mov
jmp
ja
cmp
or
sar
xor
fs
push
rcr
movs
mov
push
int
mov
add
lock
fs
pusha
aam
mov
mov
lar
adc
add
call
add
adc
(bad)
dec
or
cmc
jne
daa
aad
(bad)
js
cmp
fisttp
movs
imul
mov
cwde
popf
retf
jnp
xchg
push
mov
sub
mov
cmp
pushf
jbe
jmp
adc
imul
fiadd
push
dec
repz
(bad)
jmp
fadd
jle
or
aas
cmps
aad
and
or
cwde
rol
bound
repz
push
add
add
or
inc
movs
or
pop
or
jmp
pop
sub
movs
fdiv
mul
add
aas
or
daa
or
xor
mov
cmps
(bad)
icebp
xor
push
add
fnstsw
cmp
int
add
rol
push
or
cmc
jns
int3
cs
mov
sbb
aam
sub
scas
or
mov
inc
(bad)
into
pop
or
cmp
(bad)
aad
inc
add
add
mov
rol
push
mov
int
add
add
mov
mov
add
xchg
cli
int3
add
js
fmul
test
adc
jae
xchg
dec
mov
rol
and
rol
adc
or
test
lea
sti
and
lds
xor
hlt
xor
imul
mov
cmp
jp
add
jae
les
pop
into
imul
stos
add
leave
xor
aam
popa
push
gs
out
dec
or
push
adc
test
push
sub
inc
or
adc
adc
push
mov
and
dec
idiv
add
lods
push
in
xchg
gs
xchg
imul
lock
stos
inc
and
add
cmp
xor
sbb
(bad)
retf
enter
xchg
mov
mov
sbb
add
push
mov
mov
pusha
pusha
out
stc
(bad)
dec
stos
jne
push
or
inc
mov
push
dec
adc
add
inc
loopne
add
in
data16
int3
stc
cmp
push
xor
ud0
xchg
add
fs
shr
pop
add
adc
clc
scas
cmps
pop
add
mov
fcom
jp
inc
xlat
repnz
les
mov
jb
movs
inc
adc
out
add
mov
add
icebp
inc
xchg
in
lds
js
xor
add
(bad)
retf
xchg
ss
stos
sbb
dec
nop
and
in
fistp
fadd
jmp
pop
sbb
xchg
rol
movs
stos
lahf
sar
test
sahf
cmps
arpl
lock
adc
push
sub
aad
clc
lds
mov
dec
pop
add
scas
xchg
fisub
call
inc
mov
cli
and
pop
add
push
mov
cdq
and
loope
mov
les
sbb
pop
dec
es
xor
dec
cs
call
imul
jl
outs
add
add
ror
xor
jb
test
add
nop
inc
add
std
xchg
add
sub
mov
fldenv
add
inc
add
xchg
hlt
test
add
bound
xor
dec
jnp
mov
sbb
lods
add
sbb
jle
dec
adc
mov
mov
popf
iret
dec
cli
sahf
aam
mov
xor
add
inc
int
mov
hlt
or
cmps
ret
retf
push
mov
repnz
arpl
mov
fsubr
jo
addr16
fcom
or
cmp
mov
mov
sbb
in
pop
or
or
add
xor
push
iret
test
jns
pop
and
cmp
lea
pop
cmp
xchg
add
scas
call
push
pop
mov
push
jmp
add
cmp
mov
ins
repnz
mov
add
pop
gs
adc
rol
cmp
clc
stos
cmp
cmp
gs
mov
push
inc
push
aam
cld
mov
movs
cmps
add
add
jne
js
sar
aas
add
aam
cmp
add
(bad)
mov
rol
sbb
pop
pop
xor
sbb
add
popa
aaa
pop
out
add
inc
and
xchg
push
rcl
in
shl
mov
addr16
les
mov
dec
sti
fld
cmc
mov
fsubr
in
inc
mov
add
sbb
addr16
mov
test
xor
imul
inc
jle
inc
test
stos
into
inc
pop
out
je
add
fmul
arpl
adc
pop
adc
outs
retf
mov
adc
mov
outs
pop
movs
inc
xor
sub
leave
push
add
sub
jb
xor
sbb
aaa
dec
loop
in
repnz
test
mov
dec
aas
or
pop
dec
leave
cdq
add
lahf
jae
and
fiadd
inc
jle
cmp
out
fcom
test
popf
call
shr
cs
dec
rep
jmp
sub
fcom
or
fistp
movs
add
dec
adc
add
mov
or
and
mov
mov
mov
adc
push
add
pop
push
test
dec
pop
add
repz
and
es
hlt
jmp
mov
push
lods
ss
(bad)
xor
xor
jo
pop
xchg
pop
popa
and
aaa
out
mov
xchg
cdq
sbb
jns
mov
call
pop
sub
data16
std
push
(bad)
xor
inc
and
xchg
jmp
add
pop
add
dec
add
add
ret
cs
punpcklbw
ret
add
mov
add
mov
das
pop
aad
inc
ins
sub
sbb
les
(bad)
cmp
popf
je
lock
dec
and
jmp
add
data16
jmp
ror
add
mov
test
das
fsubr
add
adc
fcomp
xor
add
dec
sbb
pop
sbb
gs
dec
sar
sbb
scas
fwait
add
add
jno
mov
lahf
int3
add
mov
in
cmp
pop
out
pop
fcom
sub
es
fistp
sbb
shl
lea
xchg
daa
loopne
je
jae
shl
push
add
jg
rcl
add
or
add
add
mov
ds
jmp
fsubr
aas
popa
stc
shl
mov
adc
into
xchg
xchg
pop
dec
inc
outs
add
and
mov
pusha
add
push
push
call
push
xchg
mov
pop
mov
popf
fs
inc
xchg
lea
cld
add
mov
dec
call
cmp
xchg
push
add
push
hlt
in
in
jns
std
scas
sub
leave
rcr
(bad)
push
add
mov
or
mov
out
lds
sbb
pop
punpcklbw
and
pop
nop
rol
lods
stos
add
iret
(bad)
jmp
rcr
mov
inc
xchg
js
cs
inc
mov
das
or
mov
push
(bad)
fsubr
clc
jo
add
cmp
adc
test
add
imul
outs
push
jge
inc
and
pop
fs
bound
push
and
imul
stc
push
add
mov
add
or
add
arpl
or
add
xor
adc
or
pop
pop
in
mov
sbb
in
fiadd
dec
cmp
outs
(bad)
pop
mov
add
xor
add
sub
mov
das
lahf
sbb
xchg
mov
sbb
sbb
lea
add
outs
hlt
jg
pop
inc
add
fsubr
add
add
test
pop
stc
stos
dec
ret
clc
jp
sub
pop
push
jmp
out
push
xlat
das
aas
fs
add
xor
mov
or
add
inc
jb
pop
lods
cmp
aam
imul
std
lds
ins
inc
xchg
aad
jmp
sbb
pop
jns
or
cmp
pop
add
aas
add
call
dec
cld
sbb
jnp
add
cmp
sub
dec
jge
scas
add
jb
cmp
leave
mov
test
pop
cmp
add
dec
test
adc
mov
(bad)
inc
ret
pop
add
mov
dec
repnz
ins
mov
cmp
pop
sbb
scas
add
pop
sub
gs
add
add
stos
sub
push
mov
pushf
test
lock
xchg
mov
es
jne
mov
pop
adc
xchg
ins
call
add
ins
aam
add
inc
clc
les
std
bnd
push
enter
shr
test
push
fldl2e
js
xor
cmp
pop
add
xchg
pop
jo
jns
clc
out
push
jle
enter
sahf
jo
inc
add
pusha
push
cmp
sub
test
pmulhw
xor
add
mov
pusha
push
cmp
add
idiv
sub
dec
bound
aad
rcr
(bad)
pusha
je
xchg
nop
add
ret
into
je
ret
iret
je
into
add
sub
arpl
pop
ficom
push
and
xchg
rcl
nop
dec
xor
cmp
adc
fistp
loopne
rcr
int
dec
mov
mov
pop
in
dec
inc
add
sub
xchg
repnz
add
verr
and
push
aas
psubusb
fiadd
add
xor
cmp
inc
pop
adc
iret
call
add
(bad)
stos
sbb
add
pop
pop
cdq
out
stc
and
fadd
xchg
enter
adc
comiss
cmps
sbb
retf
mov
dec
nop
mov
inc
jge
jnp
sub
jp
add
push
in
dec
xchg
xchg
mov
mov
enter
mov
mov
add
add
xor
stc
inc
rcl
and
pop
sbb
xor
mov
mov
cmps
or
jno
sub
movq
inc
test
fprem1
add
idiv
adc
dec
loopne
or
paddw
mov
add
into
(bad)
mov
dec
in
adc
xchg
sbb
nop
in
xchg
add
adc
loop
fiadd
mov
test
cmp
xor
js
sub
jns
nop
idiv
js
shr
dec
jbe
out
sub
std
dec
jne
add
sbb
fcomp
es
push
fs
xchg
dec
add
call
fcmovnu
cmp
addr16
mov
sbb
adc
adc
push
mov
push
js
xlat
bound
add
cmp
jmp
fistp
push
arpl
aas
js
add
jo
xor
out
es
popa
xor
mov
push
pop
jno
fadd
add
sbb
dec
icebp
in
mov
push
lods
mov
add
rol
sub
fdivr
adc
push
dec
cmp
push
sub
nop
push
div
mov
in
mov
ds
call
loope
in
cmp
aaa
fld
sub
add
add
dec
dec
sbb
add
and
cmp
loop
jnp
mov
pop
fiadd
test
mov
lock
jb
mov
mov
jmp
add
les
inc
enter
outs
inc
or
adc
add
pop
iret
and
cli
dec
add
add
int
movs
lock
stos
enter
dec
imul
adc
or
jae
adc
pop
stc
cmp
pop
rol
arpl
sbb
and
scas
jmp
fsub
dec
push
xchg
gs
je
or
jmp
dec
cs
out
mov
xchg
cmps
push
adc
iret
mov
mov
sahf
add
movs
pop
inc
lock
inc
adc
popa
in
jmp
adc
cld
mov
inc
add
mov
mov
xor
enter
repnz
mov
add
cmp
add
in
xchg
(bad)
call
rcl
add
and
sub
(bad)
scas
mov
jno
outs
popa
cwde
cwde
jae
mov
inc
mov
ficomp
dec
(bad)
jg
or
cmp
dec
test
cmps
mov
scas
add
add
add
adc
hlt
push
stc
mov
jmp
stc
jg
sub
mov
(bad)
shr
sub
add
in
push
cmp
sbb
pop
imul
xor
outs
or
inc
loopne
dec
push
ja
cmp
pop
bound
xor
or
jb
push
mov
add
bnd
imul
mov
dec
ret
cld
push
or
sar
push
inc
inc
jmp
jno
add
int3
in
or
cmps
(bad)
aaa
fisttp
std
push
mov
pop
add
jecxz
inc
sbb
arpl
pop
inc
neg
add
mov
push
in
cmps
scas
imul
jl
pop
inc
push
mov
add
push
xor
cmp
rol
cmp
pop
add
in
add
mov
xchg
cld
sub
(bad)
mov
div
xchg
inc
pop
inc
push
xor
adc
add
xor
pop
adc
add
sub
add
xor
shl
data16
leave
xchg
icebp
mov
inc
add
xchg
mov
int3
jno
fsubr
mov
jl
or
adc
out
jo
push
push
rol
emms
add
push
pusha
cmps
(bad)
rcr
add
inc
jb
test
cld
in
mov
add
in
mov
xchg
in
cwde
jecxz
scas
add
pop
mov
pop
retf
in
and
xchg
xchg
icebp
adc
xor
test
aas
xor
dec
cmc
or
ss
mov
push
cmp
stos
add
xor
shl
sub
add
loope
jle
icebp
push
cmp
cwde
sub
cmp
imul
dec
sub
mov
mov
add
adc
loopne
mov
test
sahf
mov
rol
cld
add
outs
sahf
cmp
rcr
outs
xor
mov
sbb
jmp
xor
inc
push
or
jecxz
cld
push
or
sbb
cmp
es
cmp
fstp
popf
ja
mov
xor
pushf
loope
push
inc
inc
(bad)
sub
pop
mov
pop
add
cmp
pop
jg
(bad)
popf
lock
adc
jle
add
nop
and
ffreep
or
movs
add
add
add
jmp
fs
loop
js
(bad)
xchg
outs
ss
adc
add
jbe
daa
inc
sub
add
sub
neg
addr16
pop
hlt
mov
sahf
gs
jnp
and
sbb
lods
sahf
pop
mov
xchg
adc
sub
mov
add
shr
mov
adc
pop
loop
xchg
movs
xchg
cmp
push
pop
sti
xor
pop
mov
shl
mov
inc
add
ss
mov
xchg
leave
movs
in
push
mov
movs
mov
mov
mov
mov
add
xor
adc
adc
xchg
inc
mov
and
jecxz
movs
cs
and
sub
imul
adc
push
std
(bad)
lock
mov
loope
xor
add
retf
add
add
out
cmp
adc
push
je
outs
xchg
add
mov
ret
hlt
xor
outs
mov
inc
inc
inc
rcl
aam
add
loope
fwait
add
xor
ds
jmp
sbb
clc
daa
inc
cs
jb
add
dec
cwde
fnstsw
cld
add
fst
scas
call
outs
test
push
leave
adc
pop
push
jmp
or
cs
ret
adc
add
cli
mov
sub
outs
mov
and
jmp
pusha
rol
out
nop
jb
data16
lds
push
addr16
and
je
repnz
ss
ins
inc
push
inc
jne
sahf
sahf
pop
adc
add
push
sbb
and
push
jb
pop
test
stos
call
adc
rcr
hlt
add
pop
cwde
add
xor
add
mov
or
(bad)
sub
pop
or
call
rol
xchg
dec
outs
add
movs
in
pop
aaa
jmp
pop
mov
rcr
add
inc
pop
xor
xchg
cmp
ja
jnp
dec
add
sbb
inc
pop
push
sahf
jl
xor
add
ins
mov
lahf
js
adc
xchg
repnz
add
cmp
mov
sbb
add
stos
add
pusha
sbb
push
mov
pop
or
and
fwait
outs
add
pop
cmp
cld
inc
fnstsw
nop
pop
(bad)
mov
lds
into
bound
rcl
fcomp
or
mov
inc
mov
inc
js
cmps
movs
push
in
add
add
lahf
aad
jmp
loop
aas
ror
mov
xor
add
sbb
pop
add
or
mov
out
movs
cmp
leave
ds
(bad)
xlat
sbb
inc
clc
and
scas
imul
popa
mov
inc
cmp
inc
adc
push
add
mov
add
(bad)
fmulp
cmp
xchg
add
xchg
cmp
push
mov
jmp
or
fwait
movs
add
cmc
movs
xor
sbb
mov
inc
xchg
add
jno
add
mov
and
xchg
retf
jmp
out
inc
sbb
or
int3
xlat
xor
sbb
xchg
inc
sub
jb
les
movs
lea
push
or
repnz
loopne
test
sub
arpl
and
mov
and
sahf
jle
add
sbb
add
jb
push
mov
(bad)
inc
nop
mov
enter
jl
in
and
imul
mov
jbe
inc
test
inc
loope
add
out
sub
imul
(bad)
sub
add
cmp
retf
add
shr
fstp
cmps
call
fisubr
or
add
add
dec
mov
xor
cmps
dec
outs
add
add
repnz
dec
and
pop
mov
enter
inc
data16
xor
jmp
jmp
inc
adc
(bad)
mov
pop
pop
and
adc
add
arpl
cmp
xor
addr16
sar
sbb
mov
gs
add
sahf
js
add
inc
aas
je
mov
add
inc
sub
jno
inc
lods
test
leave
mov
nop
jae
pop
dec
in
cmp
rcr
in
add
es
ins
xor
iret
nop
or
mov
adc
iret
jle
enter
adc
dec
test
clc
int3
jne
pop
call
daa
call
pop
adc
fucomp
pushf
dec
push
sbb
or
inc
or
mov
jns
push
(bad)
xlat
out
js
xchg
push
add
shl
inc
fadd
xor
ins
stos
add
push
mov
sbb
lea
inc
lock
sbb
movs
dec
fs
outs
add
lea
aad
push
inc
cmps
movs
add
stc
mov
mov
lods
inc
sub
idiv
test
jo
test
or
cmp
rol
dec
jb
dec
or
cld
inc
inc
sbb
ja
daa
mov
adc
jge
mov
and
lahf
fcomp
or
pop
cmp
add
lods
das
loop
dec
inc
add
xchg
dec
jg
out
push
add
aas
cmp
stos
fist
xor
mov
jne
loope
and
cmp
inc
ror
dec
dec
jns
jge
mov
pop
lods
cmc
je
and
pop
inc
jb
rol
inc
cmc
(bad)
mov
lea
dec
jmp
stos
scas
cmp
fdiv
mov
in
int3
inc
lods
push
sbb
gs
inc
pusha
inc
test
sub
inc
lods
js
int
xchg
xor
xchg
std
lahf
dec
jbe
adc
imul
adc
jno
pop
adc
mov
sahf
outs
call
mov
shl
imul
adc
jg
(bad)
push
fbld
add
(bad)
ds
les
dec
sub
jo
inc
jmp
dec
cli
adc
test
ja
pop
cmp
rol
jl
mov
dec
add
mov
(bad)
push
(bad)
add
xchg
clc
push
jno
sub
in
pop
sbb
inc
rol
adc
pusha
xor
jo
hlt
repz
sub
js
add
je
cwde
ret
push
dec
popa
jns
aam
std
sbb
shl
cmps
push
and
add
xchg
mov
ds
call
in
inc
ds
leave
or
lods
popa
jns
clc
push
add
(bad)
pop
jecxz
or
jb
mov
and
sub
fiadd
or
cs
and
cmps
add
jns
mov
add
jbe
mov
sbb
add
inc
lods
jo
cmp
stc
jo
ins
(bad)
xor
cmp
jns
push
sub
mov
sub
pushf
push
jmp
aad
(bad)
push
inc
xchg
dec
adc
push
rol
and
jb
cwde
xchg
sbb
or
fs
add
ins
sbb
gs
test
mov
sar
and
sti
or
mov
add
or
cmp
inc
jle
push
sbb
pushf
mov
push
jns
jmp
add
ss
outs
or
call
loopne
out
or
cmp
push
fs
daa
rol
pop
loope
cs
add
retf
jge
fld
mov
jno
inc
ficomp
mov
add
pop
lods
ins
mov
pushf
(bad)
sbb
xor
dec
in
pop
adc
js
inc
popa
cmps
push
imul
add
add
enter
pop
pop
dec
ds
adc
cmp
jl
add
adc
test
mov
repnz
adc
dec
popf
lock
pop
push
add
jae
sbb
mov
call
(bad)
or
(bad)
inc
psraw
jae
and
aam
mov
jg
dec
dec
push
or
add
push
sub
inc
sbb
xlat
lahf
and
out
jb
adc
outs
and
mov
in
mov
loope
sbb
sbb
sub
add
ins
test
add
lods
je
sbb
and
stos
in
aas
sub
add
movs
inc
jp
mov
call
mov
jle
add
xchg
div
mov
stos
sub
pop
xor
xchg
shr
rcr
sub
pop
lods
sbb
and
sbb
add
pushf
arpl
fwait
push
nop
dec
add
add
test
add
jl
cmp
cmp
mov
push
push
lods
lock
inc
(bad)
pop
sub
pop
push
out
and
lock
dec
aaa
ret
inc
shr
lods
adc
mov
xchg
mov
pop
pop
xor
cli
add
inc
in
add
add
ins
jl
pop
test
cmps
inc
hlt
hlt
mov
fs
stos
call
std
push
xor
fnstenv
add
out
lahf
mov
or
mov
adc
cwde
outs
movs
jl
div
retf
adc
scas
dec
addr16
sbb
jb
mov
loopne
pop
dec
add
xchg
add
cmp
sahf
call
out
or
jno
dec
add
cld
out
js
add
adc
add
jecxz
or
icebp
ror
sub
add
add
inc
cmp
xlat
xor
push
dec
test
jnp
sar
call
push
sub
sub
dec
add
(bad)
outs
mov
or
xor
lahf
clc
push
cmp
mov
rcl
ret
repnz
dec
add
jl
aas
fild
dec
adc
or
pmullw
es
mov
call
fisttp
and
pop
pop
push
sub
adc
jbe
add
xchg
repz
jmp
dec
imul
gs
mov
add
ins
mov
jle
iret
or
and
push
or
mov
outs
hlt
popf
push
cmp
test
icebp
and
outs
adc
mov
or
inc
cld
aam
push
sub
test
sbb
cmp
xchg
cmp
mov
leave
stos
retf
imul
dec
dec
test
je
push
test
pop
pusha
pop
add
push
and
jbe
(bad)
leave
or
mov
add
loop
dec
loopne
add
sub
fsub
adc
jmp
xchg
es
js
ficom
stc
sbb
fsubr
add
test
dec
add
fmul
retf
sub
add
sub
xor
mov
ret
inc
mov
inc
mov
arpl
sub
fisubr
lahf
push
and
pop
repnz
ds
pop
je
rcl
fdivr
(bad)
xlat
push
jo
pop
int3
pop
pop
aaa
repz
jbe
les
lahf
bound
(bad)
pop
adc
mov
jnp
(bad)
xor
xor
mov
pop
add
nop
(bad)
enter
push
mov
jmp
inc
call
daa
gs
aaa
and
cs
sub
ins
pop
js
cmp
fwait
xlat
xor
hlt
lods
sub
out
inc
add
add
repz
xchg
aas
das
sub
adc
or
scas
add
cmc
nop
mov
adc
jnp
add
jle
retf
cmc
sub
inc
mov
mov
test
cmp
ror
cmp
mov
rcl
xor
add
xor
add
in
adc
dec
(bad)
rcr
sub
cmc
ins
inc
or
adc
adc
clc
arpl
cld
fistp
fwait
push
scas
loopne
jl
in
xor
iret
les
nop
(bad)
mov
add
cmp
test
int3
push
nop
jae
out
add
pop
inc
or
je
xor
dec
push
clc
call
sbb
(bad)
call
jnp
shl
aam
test
adc
cmps
xchg
jmp
aaa
cdq
add
xchg
cmp
sbb
adc
data16
mov
and
aaa
adc
xor
rol
mov
mov
adc
popf
jnp
mov
loopne
test
out
jmp
out
sbb
mov
sub
pop
je
inc
fcom
sahf
loopne
ror
dec
mov
adc
in
sbb
call
inc
push
jl
ret
mov
adc
mov
add
nop
push
inc
mov
das
add
dec
add
cwde
pop
out
add
fistp
aam
dec
jbe
mov
and
es
jne
add
movs
jnp
repnz
cmp
ret
push
pop
sbb
imul
jb
loope
push
imul
test
in
push
mov
cmc
and
lahf
mov
mov
sar
adc
jp
add
imul
inc
fadd
or
ins
in
pop
cmp
aad
sub
(bad)
add
xor
push
xchg
jo
add
push
jp
add
add
xchg
js
lods
add
push
cmpxchg
pushf
pop
sub
dec
test
add
(bad)
ja
add
leave
out
inc
xchg
add
stos
sbb
movs
shl
mov
int
int3
test
movs
jecxz
add
stos
dec
dec
cmp
sbb
add
mov
fistp
or
add
mov
(bad)
add
jle
cmp
or
addr16
cmps
leave
mov
adc
add
add
inc
sbb
fldcw
sub
mov
jne
imul
lods
clc
mov
push
(bad)
stc
shr
into
push
cmps
pop
mov
outs
rol
mov
inc
iret
xor
ja
pop
cmp
sbb
add
loopne
fnsave
cmp
fist
test
pop
pop
adc
arpl
sar
mov
adc
sub
pop
adc
lods
es
or
inc
and
or
mov
add
(bad)
lock
cli
add
add
inc
sub
mov
push
shl
push
adc
mov
push
jmp
or
jae
ins
rol
pop
test
sbb
mov
mov
call
dec
je
add
(bad)
adc
stos
xlat
add
stos
inc
add
out
mov
inc
add
add
and
pushf
push
mov
push
add
mov
pop
mov
outs
add
add
push
add
xor
out
mov
js
xor
mov
sub
jge
push
cmp
rcr
loopne
shr
sbb
and
test
inc
mov
inc
mov
mov
mov
dec
lahf
cmp
aas
pop
call
sbb
bound
retf
add
cmp
pushf
mov
mov
jb
data16
out
xor
jno
add
stos
mov
push
(bad)
or
sub
rcl
xchg
mov
es
adc
sbb
cmp
and
call
aas
add
inc
mov
cld
hlt
mov
add
mov
push
pop
inc
jno
imul
sub
pop
test
sub
add
xchg
hlt
fcomp
repz
mov
xor
add
lahf
mov
mov
cld
rcr
mov
shl
mov
leave
pushf
jl
pop
dec
das
inc
xchg
mov
out
lods
or
movs
(bad)
dec
and
mov
xor
lods
push
imul
cmc
add
jno
mov
pusha
test
scas
add
std
mov
adc
shl
ret
push
add
add
mov
inc
jp
xchg
push
cmp
push
inc
cmp
in
adc
mov
imul
ins
mov
ror
or
xchg
push
mov
aas
je
jp
push
add
pop
pop
(bad)
mov
add
mov
pop
or
and
pop
push
(bad)
mov
adc
add
aam
frstor
pop
es
cwde
add
clc
scas
stos
aaa
inc
mov
xchg
inc
sub
push
pop
pop
pop
add
repnz
jae
loop
push
push
pop
pop
inc
pop
push
mov
ins
add
mov
rcr
jne
leave
cmp
add
(bad)
ins
cs
inc
push
outs
xchg
sbb
xor
jne
hlt
pop
ins
in
add
xchg
jb
add
pusha
je
add
pop
dec
xor
add
push
push
push
add
sbb
lds
add
jle
out
in
ret
ret
(bad)
push
iret
add
pop
cwde
fdiv
push
add
mov
rdpmc
add
jl
je
xlat
xor
or
push
adc
stos
adc
push
and
dec
jmp
sbb
and
gs
push
in
(bad)
mov
xchg
(bad)
out
pop
aas
xor
test
shl
aaa
add
add
call
clc
ret
shr
cld
aam
dec
out
jns
hlt
and
test
push
jle
test
push
xor
push
cs
mov
ds
ret
pusha
pop
inc
pop
push
out
dec
cmp
mov
mov
and
add
mov
push
enter
lsl
jo
jnp
repnz
test
sti
add
xchg
sti
xchg
je
sti
in
stos
stos
and
add
mov
shl
les
jle
xor
mov
mov
fisub
pop
das
nop
ret
inc
les
push
lods
mov
adc
xchg
and
cwde
adc
push
mov
fwait
test
inc
out
cmp
dec
je
or
add
sub
retf
pusha
add
or
push
js
loop
(bad)
je
out
fwait
dec
pop
or
addr16
mov
mov
dec
rol
jmp
adc
inc
add
sub
hlt
pop
mov
xchg
jmp
jge
cwde
sub
daa
sub
lock
add
dec
outs
add
xchg
adc
pop
mov
pop
mov
es
pusha
test
and
fmul
in
add
shl
jnp
or
arpl
dec
jo
lods
pop
outs
je
cmps
mov
les
inc
call
or
xchg
pop
(bad)
(bad)
push
out
(bad)
sbb
mov
pop
sbb
int
daa
lods
pop
push
push
ja
sub
mov
rcl
popa
push
ret
stos
pop
add
call
fnstcw
push
out
adc
imul
add
push
mov
mov
inc
adc
add
sub
scas
rcl
pop
xor
mov
lods
hlt
cmps
pop
sub
xchg
mov
push
mov
xlat
ss
inc
clc
xor
jmp
add
cmc
inc
and
mov
cmp
jl
rcl
in
imul
mov
adc
xor
outs
es
shr
fcomp
out
and
in
mov
sahf
jecxz
inc
mov
and
loop
cmp
pop
sub
dec
aam
stos
ret
sahf
push
push
ds
or
aas
adc
cmps
lods
mov
bound
mov
in
mov
outs
push
lds
add
out
and
gs
popa
(bad)
ins
fmulp
or
and
mov
and
jae
jl
mov
mov
fwait
and
mov
pop
test
mov
cli
mov
push
repz
(bad)
(bad)
int3
rcl
mov
shl
xchg
sub
push
cmp
jge
test
and
add
adc
inc
mov
ss
mov
add
sub
retf
mov
fdiv
lods
fimul
in
lea
add
sub
xchg
xchg
jae
aam
imul
sub
add
jecxz
call
test
popf
adc
addr16
cmp
pop
push
out
dec
ss
int3
mov
in
repnz
out
pushf
jo
cmp
or
mov
push
xor
out
inc
(bad)
pop
stos
sbb
mov
add
jmp
mov
mov
in
add
or
push
cmp
(bad)
add
loope
das
ror
retf
out
xchg
(bad)
out
dec
into
sub
rol
or
outs
or
pop
ins
inc
add
push
ret
cmp
push
pop
fwait
ins
push
push
add
xor
cmp
sbb
pusha
jno
test
adc
loope
cld
inc
in
adc
enter
add
or
pop
mov
mov
pop
sub
add
sbb
push
mov
inc
or
aaa
and
jp
(bad)
fs
add
jle
retf
xor
(bad)
add
push
fcomip
adc
xchg
add
popa
xor
or
and
mov
add
movs
stc
xchg
shl
add
in
test
(bad)
mov
xchg
push
jo
es
or
xchg
mov
dec
cmps
push
addr16
mov
retf
or
mov
jbe
and
add
adc
(bad)
stos
test
and
clc
sub
inc
leave
nop
out
add
mov
push
rol
push
cmc
int3
xor
add
add
xor
xchg
dec
loopne
mov
xchg
idiv
outs
outs
inc
mov
mov
or
cmp
adc
cmp
les
pop
pusha
fsub
adc
sbb
or
pop
inc
sub
sbb
pop
add
sar
(bad)
psrlw
loopne
clc
sbb
ret
sub
clc
sbb
bound
add
add
test
push
adc
test
dec
inc
and
inc
xchg
mov
inc
stos
push
xchg
leave
push
jb
jecxz
fs
adc
pop
jle
sti
sti
dec
or
fs
clc
ja
into
mov
inc
push
stc
add
add
mov
push
or
sub
push
pop
add
push
lods
fsubr
(bad)
and
dec
mov
mov
pop
pop
dec
xchg
clc
xchg
sbb
cmp
add
dec
iret
mov
in
inc
add
pushw
imul
mov
scas
add
mov
call
fldcw
addr16
outs
jge
sti
add
dec
add
adc
jmp
add
mov
cld
mov
add
pop
je
jmp
test
pop
dec
mov
dec
xor
pop
adc
add
popa
lock
push
out
popf
fmul
arpl
mov
shl
inc
test
xchg
and
pop
sbb
xor
cli
clc
add
pop
xchg
xchg
add
int
lock
(bad)
sahf
dec
jge
xchg
lahf
jl
add
ret
out
adc
in
pop
add
cld
js
bound
movs
pushf
adc
mov
inc
mov
cmp
jnp
sbb
sti
add
add
scas
ret
sub
cdq
(bad)
gs
cdq
movs
cwde
loope
fcomp
mov
cld
enter
sub
dec
cmp
jg
loopne
bound
retf
sahf
mov
pop
add
xchg
mov
rcr
cdq
fild
inc
pusha
movs
mov
call
add
ins
pop
mov
stos
ret
sbb
push
jle
dec
sub
xchg
fxtract
test
cmp
sbb
cmp
popa
dec
sbb
lods
outs
cld
dec
or
mov
add
cs
test
gs
mov
fdivr
or
and
push
add
ret
fld
push
jbe
mov
xor
push
cmp
repnz
inc
aam
movs
cli
xor
data16
add
dec
call
pusha
jp
popa
push
rol
dec
scas
data16
xor
shl
dec
adc
push
(bad)
xor
jl
pushf
add
jo
cmp
out
std
add
ss
cmps
dec
(bad)
mov
add
add
adc
adc
jo
push
(bad)
pop
test
adc
mov
and
outs
in
shl
push
inc
ret
or
jmp
loopne
outs
add
fidivr
sub
test
loopne
jecxz
jmp
aaa
sahf
out
rol
(bad)
out
mov
xchg
mov
dec
sti
imul
pop
add
stos
aam
in
cwde
mov
mov
jge
std
arpl
in
cwde
sar
test
(bad)
cmp
add
add
ins
xchg
cmps
sar
add
ins
pop
add
push
push
mov
dec
js
jge
repz
sar
jnp
push
pop
mov
xchg
jmp
loop
mov
cld
jmp
repz
pop
xchg
sub
pop
rol
lds
mov
(bad)
stc
add
xchg
aas
pop
mov
cmp
dec
call
push
div
push
ror
add
int3
or
jl
dec
jae
pop
push
and
push
pop
sub
nop
push
fwait
icebp
int
add
sahf
in
and
sbb
push
cmp
scas
fcom
hlt
inc
jbe
ins
push
(bad)
lods
xor
add
add
cmp
push
std
sbb
xchg
sbb
pop
imul
pop
xor
add
xor
add
push
and
mov
ds
fcmovbe
cli
loopne
mov
adc
xchg
dec
mov
int
inc
bound
outs
ret
adc
icebp
js
add
or
je
cli
sub
lea
push
mov
pop
(bad)
and
adc
cld
xchg
adc
les
sbb
xchg
inc
pop
pushf
pop
fiadd
add
inc
fs
bswap
adc
cmp
popa
pop
aas
xor
adc
sub
je
xchg
mov
ds
xor
adc
retf
push
add
push
hlt
(bad)
ror
sub
sbb
shr
stos
adc
loop
rol
xor
cld
xchg
clc
xor
sbb
arpl
fsubr
jmp
jns
mov
push
dec
push
and
jg
add
in
int3
bnd
jo
std
out
add
test
mov
xor
adc
fcomp
mov
inc
cmp
je
rcl
add
inc
out
pop
test
(bad)
cmc
xchg
xchg
lock
fistp
arpl
sbb
add
or
loopne
dec
out
sub
fnsave
cs
pop
sub
jmp
and
call
jg
out
icebp
cmp
mov
mov
not
dec
mov
inc
or
stc
jp
les
icebp
test
inc
inc
add
lock
inc
inc
mov
cmps
push
daa
in
bound
mov
scas
int3
push
pop
test
add
data16
mov
inc
jo
sbb
cmp
mov
sti
add
mov
adc
inc
cmp
push
jae
add
test
mov
mov
mov
imul
xchg
sti
or
cmps
dec
sub
fild
push
cli
inc
mov
lock
sub
add
scas
cmps
mov
xchg
add
ret
push
push
ret
push
xor
sub
fiadd
and
pop
and
ret
mov
sbb
add
xor
jnp
gs
and
rcl
mov
cdq
add
add
rcr
scas
and
push
sub
xor
cmp
stos
cld
add
hlt
add
outs
inc
mov
test
add
or
push
sub
add
jns
pop
jb
mov
inc
or
mov
js
adc
add
out
push
and
in
add
push
sbb
ds
call
dec
ret
sub
dec
call
mov
or
ss
push
jns
sbb
xchg
vsubps
pop
pop
adc
pop
cmp
push
das
je
clc
ret
xchg
repnz
retf
out
(bad)
in
(bad)
out
jmp
dec
add
inc
outs
cmp
(bad)
adc
cmp
xchg
sbb
mov
add
add
add
inc
push
fucomip
mov
sbb
pop
and
xor
jnp
and
stos
cmp
dec
and
sbb
add
inc
mov
dec
mov
stos
icebp
call
push
pop
xchg
add
mov
lahf
lea
rol
sbb
shr
pop
ss
jne
xchg
add
call
push
xor
and
fstp
call
mov
paddb
and
loopne
mov
adc
xchg
fist
mov
pusha
pop
cmp
fisttp
adc
push
loope
adc
in
add
push
xchg
add
inc
add
push
pop
loopne
dec
sub
rol
xor
jmp
sub
retf
adc
fimul
clc
into
loope
jb
(bad)
push
les
js
push
dec
mov
xchg
addr16
clc
shl
ins
cwde
rol
mov
sub
fstp
mov
mov
std
mov
sar
add
fwait
and
add
(bad)
ins
loope
inc
add
mov
jge
jb
mov
dec
cli
fstp
inc
(bad)
lock
hlt
sub
add
jg
add
or
pop
rcl
and
dec
mov
int
sub
sar
gs
add
loope
ja
ins
sbb
push
js
add
cmps
jge
in
cmp
inc
mov
jno
dec
mov
(bad)
iret
icebp
add
rol
or
add
daa
imul
inc
jmp
loopne
in
adc
jg
add
loop
add
jl
(bad)
(bad)
jb
ror
daa
popa
out
mov
cli
and
les
pushf
ret
(bad)
push
xchg
gs
adc
shl
add
add
(bad)
cmp
sbb
xor
xor
sti
rol
call
rcl
xor
hlt
xchg
fild
pop
imul
xor
add
jae
jmp
int3
dec
mov
lahf
ja
cmps
call
call
jmp
ror
hlt
and
mov
jle
jns
sbb
add
rcl
dec
sbb
cli
lods
sbb
dec
cmp
adc
hlt
xlat
xor
jnp
and
cld
push
jb
mov
inc
sub
int3
fldenv
cmc
dec
loope
fild
shr
and
xlat
xchg
outs
jp
sbb
movs
mov
jl
fidiv
dec
sub
rcr
stc
std
lds
cmp
test
cdq
lock
in
or
mov
xor
or
xor
leave
mov
xchg
push
add
add
fld
call
jne
mov
sub
xchg
jne
pop
int
das
call
inc
inc
jb
and
adc
pop
add
in
add
jno
ins
mov
inc
push
shl
nop
adc
sub
ret
cmp
jae
adc
dec
dec
sahf
or
dec
ja
add
add
dec
aam
aam
retf
std
enter
dec
into
mov
movs
fs
aaa
call
and
jp
cmp
add
call
xor
movs
add
cmp
xor
aad
les
add
push
inc
dec
pushf
add
adc
sti
lds
ret
lods
add
add
cmp
nop
mov
sbb
mov
xchg
adc
sbb
xchg
pop
adc
mov
push
fdiv
add
jne
jg
popa
sahf
sub
jmp
push
add
sub
mov
loop
lahf
gs
ret
mov
add
mov
mov
jno
stc
pop
adc
pop
sbb
inc
jae
je
xchg
inc
dec
imul
jle
sub
out
rcr
pusha
add
jns
add
popf
inc
mov
pop
test
add
movs
ror
ret
cmp
addr16
or
test
push
add
and
mov
sub
push
xor
sbb
iret
leave
cmps
push
or
mov
xor
hlt
or
add
scas
pop
xchg
(bad)
lods
nop
cld
test
dec
int
je
sbb
pop
dec
popa
les
enter
mov
sti
push
loopne
stc
mov
(bad)
call
shl
lock
adc
jno
inc
cmps
jle
fimul
jo
out
iret
sub
add
add
add
add
push
cmp
cmp
xor
outs
sbb
loopne
pop
inc
ins
retf
cli
jmp
push
xchg
xchg
and
and
mov
sub
imul
call
push
adc
mov
add
fsub
xor
jo
jmp
jmp
pop
cmp
jp
ins
rcr
jl
mov
pusha
add
adc
fnsave
and
cmp
hlt
stos
sbb
pop
or
in
(bad)
mov
add
jmp
nop
xor
pop
cwde
add
inc
dec
in
aad
in
sub
or
stos
fs
ret
mov
out
jmp
jle
inc
jae
inc
retf
add
mov
push
loopne
jb
jge
add
into
mov
add
xor
es
sub
imul
xchg
data16
mov
movs
add
or
xchg
add
fdivr
add
and
out
dec
bound
inc
arpl
loope
leave
and
loopne
ins
and
and
inc
pusha
inc
stos
shr
ror
pushf
loopne
loop
and
and
or
lock
xor
jb
xor
add
add
cmp
sub
add
ret
and
aas
pop
and
cmp
add
mov
mov
cmp
or
add
add
fadd
mov
pop
pushf
sbb
jmp
add
(bad)
jne
mov
add
pop
icebp
push
repz
mov
dec
push
add
sbb
scas
add
out
or
push
lds
popf
mov
cs
call
add
push
or
xchg
add
loop
fist
push
push
jo
retf
sbb
jns
add
xchg
push
push
jge
jo
scas
xchg
mov
dec
mov
add
mov
dec
mov
add
and
mov
sub
xor
jb
xchg
sub
jno
in
mov
pop
cmp
int3
xor
jmp
lds
std
jns
add
pusha
mov
jge
loope
add
push
adc
jne
add
shl
out
cmps
push
(bad)
outs
mov
retf
out
add
pop
dec
xor
push
dec
stc
loop
arpl
push
(bad)
mov
ret
popf
sub
cmp
cmps
aas
add
adc
add
and
fisubr
ins
push
inc
xchg
pop
or
movs
add
dec
js
shl
loopne
xor
mov
test
mov
dec
(bad)
push
jmp
fidivr
add
pop
mov
dec
adc
fmul
or
retf
(bad)
rcr
leave
mov
or
cmp
js
adc
inc
repz
mov
cld
mov
(bad)
mov
push
push
add
cld
add
jp
inc
adc
outs
mov
mov
xchg
pop
push
in
pop
push
clc
jae
shr
out
pusha
fild
ja
xchg
jmp
add
pushf
int3
sub
fs
inc
test
loopne
call
out
rcl
lds
add
sbb
xchg
pop
jecxz
xchg
push
pop
jnp
pusha
loopne
fwait
pmaddwd
(bad)
fimul
dec
mov
adc
inc
call
sbb
sbb
test
dec
xchg
rcl
push
imul
sbb
sub
mov
rol
cld
and
dec
cld
push
mov
inc
test
sbb
cmp
or
mov
add
(bad)
outs
jb
pop
cli
les
pop
cmp
push
add
pushf
ss
xchg
add
outs
call
push
out
sub
cmc
out
call
ror
xchg
test
es
adc
adc
retf
sub
loop
cmp
js
int
lahf
xor
sar
inc
xlat
(bad)
jbe
inc
mov
aam
popa
retf
dec
mov
enter
or
loopne
xchg
mov
xlat
mov
test
xchg
rcl
fcmove
sbb
loopne
imul
cmp
fdiv
mov
shl
cmp
add
cld
scas
fsubr
clc
cmp
cmps
mov
add
add
test
int3
xor
mov
sbb
sar
aam
enter
xchg
fistp
sbb
loop
rol
out
add
jmp
int3
in
out
push
jmp
movs
add
in
inc
or
iret
adc
dec
push
push
in
xchg
(bad)
mov
push
add
mov
cmp
mov
mov
pusha
cmp
rol
add
pop
xchg
xor
hlt
mov
aad
mov
out
jle
mov
int3
jno
fnstenv
cmp
jmp
add
push
cmp
ins
add
shl
xor
xchg
xchg
mov
cmp
mov
add
xchg
mov
add
aam
and
add
add
cmp
add
retf
adc
add
push
and
pop
mov
cmps
out
retf
data16
lahf
adc
movs
aas
mov
ins
jle
sub
clc
fdiv
out
clc
adc
pop
xor
lods
jmp
sub
and
jae
inc
(bad)
out
dec
push
gs
(bad)
sbb
ret
xor
call
fndisi(8087
cmps
bound
xchg
std
das
inc
add
cmp
loope
jb
jg
cmp
ja
pop
push
add
jp
mov
add
popa
jl
fnstenv
adc
loopne
loopne
mov
push
jns
push
pop
xchg
int3
stos
pop
lahf
repnz
inc
ja
adc
or
jle
enter
popa
sub
add
dec
mov
jne
(bad)
sub
scas
cmp
cmp
dec
jb
jo
add
out
jne
and
(bad)
std
mov
gs
icebp
mov
push
mov
ret
hlt
jle
retf
cwde
inc
cmps
cmps
mov
add
daa
call
and
jo
push
add
push
imul
add
not
outs
push
adc
popa
sbb
add
push
jl
and
lds
call
mov
es
dec
imul
or
shl
xor
cmp
add
mov
pop
mov
fisub
mov
cmp
mov
xor
(bad)
jecxz
xchg
into
push
push
neg
adc
sub
and
cmp
add
aas
pop
mov
cmp
push
pop
mov
mov
mov
aad
lods
add
add
call
inc
push
adc
and
sbb
add
lea
add
aaa
call
inc
jge
sub
call
inc
jb
in
add
movs
cmp
clc
dec
push
fwait
xchg
jmp
pop
cwde
icebp
add
fnstsw
fwait
inc
call
or
repz
mov
nop
pop
rcl
in
inc
add
fld
ucomiss
inc
test
pop
outs
imul
push
sbb
add
add
int
mov
call
int
cld
fs
xchg
les
pop
iret
loopne
in
movs
fs
lds
ror
jb
mov
fcomp
out
add
cmps
sub
out
repnz
xor
mov
test
push
btr
mov
mov
mov
jno
pusha
mov
stc
stc
mov
mov
inc
add
add
ins
inc
inc
add
cmp
mov
(bad)
fdivr
inc
(bad)
pcmpgtw
mov
mov
(bad)
int3
sub
push
push
(bad)
mov
and
rcr
mov
hlt
jb
nop
bound
pop
cmp
ja
add
push
stos
cli
lods
xor
add
cmp
cld
movs
sub
call
push
jecxz
popf
add
test
in
and
mov
dec
aam
and
sbb
mov
cmp
mov
lods
outs
std
jl
retf
dec
add
inc
sbb
loopne
mov
out
mov
xor
call
fild
xlat
mov
fs
sar
xchg
xor
adc
pop
pop
jbe
push
dec
cmp
sar
inc
sub
add
dec
mov
cmp
mov
xor
sub
sub
mov
imul
aam
js
and
or
sahf
jo
jns
mov
pop
mov
cmp
add
inc
cdq
add
jae
jns
add
repz
adc
fiadd
pop
cld
aaa
add
fcom
pop
outs
jnp
cdq
jne
cmovae
fmul
and
rcr
xlat
scas
mov
adc
sbb
leave
enter
dec
jmp
jmp
out
or
(bad)
jns
fistp
pop
repnz
(bad)
sbb
xchg
cwde
pop
js
add
icebp
jne
jae
pop
mov
sbb
xchg
mov
jle
and
jle
xor
outs
mov
dec
inc
mov
mov
retf
add
mov
mov
loopne
fs
aas
arpl
or
add
add
loopne
mov
mov
call
add
out
out
mov
and
cwde
jae
loopne
clc
and
cwde
xchg
adc
cmp
aad
sbb
icebp
add
adc
fs
cmp
cli
movs
jb
xor
nop
(bad)
sbb
aam
mov
mov
add
inc
sub
in
xlat
fiadd
mov
aad
jno
dec
pop
shl
add
je
add
ret
fwait
sub
rcl
push
fistp
jbe
push
mov
cmc
dec
pushf
adc
jl
add
popf
dec
leave
add
dec
add
cmp
lock
sbb
push
out
xchg
nop
adc
jno
push
cmp
popf
adc
loopne
cdq
(bad)
fdiv
cs
adc
add
jmp
xchg
leave
into
cmp
in
cdq
and
ret
xchg
push
add
enter
add
add
add
add
pushf
jl
bound
push
es
les
dec
lods
add
cmc
jb
add
rcr
inc
add
xor
pop
fmul
test
std
mov
push
les
dec
jb
cmp
add
push
add
mov
inc
push
mov
or
dec
cmp
add
test
jl
mov
and
std
icebp
enter
dec
inc
add
mov
imul
inc
daa
add
rcl
fstp
rcl
mov
out
stos
dec
(bad)
dec
cmp
ja
loope
sti
xchg
adc
outs
jns
pop
dec
call
fist
dec
popf
nop
inc
sahf
jno
mov
add
(bad)
mov
sub
or
sbb
fild
sbb
arpl
mov
cmp
push
lea
mov
xchg
xor
sbb
popa
movs
outs
mov
les
xor
std
lds
cmp
je
test
int3
xor
out
sbb
shr
jns
cmp
inc
mov
aas
jne
test
and
push
daa
add
adc
mov
and
in
sub
out
adc
mov
ss
add
add
add
fdivr
outs
cld
enter
add
jmp
pop
cmps
addr16
push
mov
movs
inc
cmps
popa
rol
add
push
push
faddp
nop
or
inc
inc
fild
loopne
fist
sti
mov
popa
jecxz
outs
jmp
adc
ror
pop
cmps
int
mov
mov
cli
pop
clc
sbb
rcl
and
sub
cmp
or
or
pop
push
outs
cmp
mov
fiadd
sbb
and
repz
add
les
jns
sahf
js
inc
int
(bad)
sbb
ds
mov
std
in
call
sub
rol
dec
inc
mov
jo
mov
ins
pusha
xor
out
sar
and
pop
xor
cmp
or
push
xor
jp
popa
ss
add
pop
and
push
jmp
pop
and
push
or
imul
bound
jne
inc
add
add
sbb
mul
mov
push
add
(bad)
pop
pushf
arpl
cli
xchg
or
sub
cmp
pop
sbb
je
arpl
xor
xchg
js
inc
outs
sbb
out
pop
sub
rol
add
aaa
sbb
and
out
pop
imul
dec
ins
or
aam
jnp
enter
mov
adc
js
stc
dec
or
ud1
ins
push
pop
push
int
fimul
adc
jge
clc
pop
rcr
les
add
inc
xchg
mov
lods
(bad)
xor
add
fmulp
pop
and
add
push
mov
in
adc
push
add
jmp
jge
inc
dec
jo
stos
jns
add
pop
cmp
inc
fs
add
jo
jl
test
clc
rol
add
lock
push
cwde
xor
test
fisub
xor
aam
js
mov
cmc
sub
jo
or
xor
stos
add
jnp
mov
inc
add
inc
add
cs
in
push
dec
ss
in
jp
mov
nop
add
sbb
or
push
shl
pusha
cmp
popa
pop
je
jecxz
add
cwde
mov
inc
jo
mov
pop
cwde
mov
sbb
mov
test
inc
cmp
loopne
cs
scas
pop
mov
cmp
mov
fidivr
je
pop
sbb
pop
jo
call
(bad)
icebp
dec
or
pushf
cli
xchg
inc
or
mov
jb
add
mov
mov
inc
icebp
add
cmp
xchg
push
and
dec
inc
mov
add
and
(bad)
in
lea
add
push
adc
add
inc
and
push
aas
jne
in
cmp
xchg
adc
and
lock
cld
adc
jmp
push
mov
arpl
add
jae
add
add
scas
sub
fadd
call
outs
js
mov
int3
cmps
adc
sub
jmp
cli
cmp
outs
jb
(bad)
movs
adc
inc
xchg
in
xor
mov
add
or
arpl
add
push
outs
add
add
clc
dec
push
push
push
sub
in
mov
jl
call
test
xchg
loope
adc
icebp
add
(bad)
rcl
icebp
aas
sahf
mov
test
xor
shl
bound
jp
xchg
add
ror
xor
dec
stos
cmp
add
lahf
mov
fnstenv
add
mov
repnz
add
add
in
fiadd
and
out
cdq
add
cmp
add
cs
add
inc
movs
add
ret
mov
ins
or
dec
(bad)
jecxz
add
(bad)
mov
fidivr
push
mov
out
xor
ret
aam
call
xchg
push
cmp
lock
xchg
shl
popa
xchg
dec
clc
(bad)
jno
clc
push
ins
jne
inc
jmp
test
loopne
and
leave
add
mov
and
outs
popf
out
rol
or
mov
das
jae
adc
stc
xor
push
pop
dec
jmp
add
popa
out
mul
inc
mov
xchg
ret
das
call
sbb
add
sub
div
dec
add
xor
dec
add
(bad)
mov
pop
shl
or
sbb
inc
add
and
clc
sub
retf
imul
shl
jo
retf
out
into
mov
push
cmp
rcr
add
in
ins
mov
in
lahf
jbe
push
and
cmp
or
mov
or
add
jne
in
sbb
add
js
ror
sub
rcl
mov
cli
mov
xchg
test
cmp
mov
stos
inc
cdq
repz
xchg
inc
fld
lahf
(bad)
xchg
cs
popa
call
ins
inc
or
call
jne
addr16
push
(bad)
cmp
add
cmp
bound
pop
mov
scas
add
add
in
mov
aas
fnstenv
jb
add
sbb
aaa
out
cs
fisub
faddp
xor
mov
out
jns
nop
pop
inc
add
call
push
xor
push
mov
outs
lock
mov
nop
pop
add
mov
leave
pop
cmps
ret
mov
dec
pop
add
cmp
mov
movs
and
dec
and
push
push
ret
outs
push
sub
sub
aas
cmp
dec
js
popa
jb
sahf
jmp
cmovae
dec
lds
test
data16
cwde
sbb
inc
lds
add
cmp
ins
call
cli
out
xor
pushf
popa
iret
fadd
dec
ds
xchg
sub
jle
and
sahf
sub
add
loope
aas
add
add
mov
int3
imul
or
sti
add
xchg
mov
add
movs
pop
cdq
pop
leave
pop
ret
and
pop
jl
add
ret
in
and
pop
clc
pop
add
push
shl
les
ds
sub
add
dec
xor
inc
loope
add
add
nop
dec
(bad)
and
dec
leave
(bad)
and
cmp
mov
lods
adc
movs
push
pop
mov
add
clc
mov
add
sbb
mov
ins
cli
pop
xchg
cmp
add
in
jge
sbb
xor
mov
inc
pop
cmp
sbb
push
jns
jle
xor
add
jae
or
stos
jae
and
mov
add
and
lea
xlat
fldenv
in
shl
cmp
xor
sub
dec
xchg
add
loope
hlt
cmp
jae
pop
add
daa
add
add
add
add
or
test
sub
mov
add
dec
ror
add
repz
cmp
or
mov
rol
add
leave
(bad)
arpl
push
or
or
mov
stos
jl
outs
cmp
(bad)
lea
sti
(bad)
push
sbb
enter
xor
and
sti
loope
shl
xchg
scas
ins
mov
jmp
ja
push
shr
push
sbb
sbb
sub
fmul
aad
inc
in
test
retf
and
repz
and
and
or
stos
pop
std
shl
cmp
and
or
stos
mov
adc
xlat
mov
sbb
or
mov
mov
adc
imul
mov
retf
cmp
sub
rcr
imul
loopne
(bad)
je
test
jo
sbb
bound
push
adc
or
aam
jb
adc
add
adc
into
add
lods
lock
fst
jae
mov
mov
inc
fldcw
nop
xlat
lods
fdivr
cmp
sub
ins
cmp
adc
(bad)
sbb
test
out
xor
add
loop
and
pop
adc
dec
cmp
add
xor
or
jp
cmp
or
lods
repnz
mov
scas
cmps
std
and
adc
xor
or
imul
ins
add
and
enter
sbb
fs
add
xchg
mov
add
xchg
xor
jno
enter
scas
into
pop
leave
icebp
or
int3
retf
aam
adc
mov
outs
cmp
neg
sub
and
inc
cdq
cmp
and
sub
inc
loop
std
add
push
xor
dec
xchg
xchg
dec
fs
sbb
pop
jb
jecxz
fcomp
lock
xchg
add
jecxz
add
mov
push
lods
jecxz
add
rcl
aam
popf
and
(bad)
jmp
mov
jne
and
jge
iret
mov
inc
ins
mov
xchg
add
test
lock
retf
add
pop
jns
mov
cmp
mov
cmps
lock
xchg
and
ins
scas
shl
and
fstp
xchg
jae
sbb
xor
sti
out
ss
loopne
mov
out
cmc
fisttp
and
retf
mov
mul
push
adc
mov
mov
xor
(bad)
es
inc
in
dec
adc
xor
icebp
mov
test
xchg
test
inc
sbb
jle
jmp
push
dec
mov
fild
add
dec
add
in
add
pop
push
lds
cs
add
inc
adc
fstp
xor
inc
add
push
push
paddq
add
int3
cmps
jnp
add
cli
fs
or
sub
add
cmp
arpl
jno
or
add
in
aaa
ret
sbb
mov
les
add
rcr
mov
cmc
and
xchg
cmc
fcom
and
push
data16
retf
pop
call
shl
outs
inc
push
mov
sbb
in
or
jle
test
push
arpl
inc
add
cld
mov
loopne
xor
cmp
xor
add
arpl
int
push
sbb
sbb
jl
adc
sub
fbstp
push
popf
sbb
sub
cmp
outs
repnz
jmp
test
loop
arpl
in
rcl
dec
dec
mov
dec
arpl
call
sbb
pop
jne
ja
test
push
mov
jb
daa
mov
inc
loopne
ss
gs
stos
int
sub
lahf
push
enter
jle
mov
mov
outs
enter
ss
call
add
or
adc
outs
pop
shl
ss
add
ror
loop
sbb
add
ret
ins
shl
push
add
jmp
adc
stos
fisub
fild
sbb
and
push
cld
stc
sbb
xchg
xor
loope
add
cwde
push
dec
sar
cmp
push
push
test
fcomp
xchg
out
adc
lea
inc
xchg
sbb
clc
nop
bound
stos
test
add
ins
test
and
clc
sbb
add
fnsave
mov
mov
push
call
pop
jb
(bad)
popa
xor
add
hlt
dec
cmp
outs
add
aas
pop
dec
or
cdq
jno
in
jne
jge
add
inc
xlat
aas
jp
jmp
pop
add
mov
add
fs
mov
cli
add
(bad)
setle
add
pusha
or
stos
add
add
add
movs
scas
adc
in
jle
add
(bad)
fwait
sbb
call
and
in
and
push
fdiv
push
pusha
stos
inc
test
std
scas
aam
add
popf
push
jp
add
xchg
cld
out
jle
jmp
es
mov
shl
and
lds
enter
outs
stc
stos
push
mov
in
push
add
add
test
clc
push
sbb
mov
call
mov
out
push
(bad)
xchg
pop
sub
retf
idiv
ficom
inc
pop
xor
pop
fbld
dec
loopne
and
xor
enter
push
cmp
xor
and
ficom
int3
fdivr
call
inc
mov
retfw
and
call
popa
leave
mov
je
add
in
repz
push
clc
mov
pusha
and
or
sub
out
add
es
and
fs
arpl
or
ss
jp
mov
add
mov
daa
add
int
jne
or
jo
add
movs
jnp
cmc
call
ja
int
inc
xchg
test
add
pop
frstor
clc
pop
add
add
ja
jo
ror
popf
sbb
sub
int3
cmp
int
rol
cmp
or
adc
pop
inc
movs
mov
dec
pop
fstp
add
adc
sbb
lds
add
mov
loopne
and
ror
and
sub
call
add
dec
push
push
xor
(bad)
pop
shl
pop
inc
jle
xor
mov
lods
push
dec
mov
xor
scas
ror
add
imul
lea
clc
mov
retf
(bad)
(bad)
fisubr
add
fadd
retf
add
pop
nop
popa
pop
pop
fsubr
(bad)
add
(bad)
or
stos
pop
add
out
imul
fadd
cmp
lea
aad
ret
inc
lock
add
xor
jbe
ins
add
ds
jne
sti
jecxz
(bad)
and
xor
add
les
in
mov
add
sub
sahf
pop
push
jae
or
push
adc
or
ins
rol
sti
pusha
pop
lods
outs
mov
ds
icebp
mov
dec
add
or
mov
or
stos
cmp
dec
(bad)
xlat
loope
sar
mov
cmp
add
sub
fs
ffree
nop
out
adc
xchg
sbb
push
sub
sbb
sbb
sub
add
inc
and
in
push
mov
mov
jo
add
and
pop
add
icebp
xlat
jl
add
and
mov
in
jne
mov
cmp
push
push
sbb
pop
(bad)
dec
sbb
ds
pop
ds
pop
sbb
pop
mov
test
inc
mov
push
push
jle
push
sub
cmps
sbb
mov
mov
and
repnz
dec
lea
std
mov
ds
les
add
hlt
sar
dec
(bad)
jmp
fmul
sub
add
jb
movs
mov
dec
push
data16
not
daa
inc
add
mov
scas
shl
adc
mov
(bad)
leave
inc
pop
dec
mov
cwde
popf
mov
inc
or
mov
pop
add
in
stc
pop
pusha
outs
fisubr
jl
push
push
enter
xchg
ins
aaa
add
pushf
mov
cmp
out
adc
xchg
cmp
jae
ret
sbb
std
fnstsw
(bad)
aam
sub
and
pushf
add
xlat
inc
xor
add
sbb
ins
jne
fldenv
int3
cmp
add
cmp
pop
jmp
sahf
unpcklps
mov
ins
call
inc
add
and
pop
add
xchg
add
aas
dec
add
cmps
out
ins
dec
pushf
xchg
int3
add
movs
xor
or
pop
jno
add
fldenv
rol
fld
lods
enter
mov
push
inc
and
(bad)
inc
loopne
(bad)
in
jo
push
jb
jns
mov
sub
add
add
movs
aam
xor
sbb
test
call
enter
ss
xchg
aad
push
arpl
(bad)
and
sbb
pop
nop
enter
jp
jl
cmps
add
pop
leave
pusha
ss
xadd
jb
xchg
or
add
movs
retf
adc
jle
sbb
ret
pop
mov
fndisi(8087
repz
aam
adc
je
cmp
fnstenv
add
or
cmc
add
(bad)
popf
xchg
push
je
les
pop
test
retf
out
add
pop
jecxz
jp
ja
add
add
frstor
les
clc
xchg
sbb
push
sbb
ja
hlt
fstp
sbb
dec
lods
retf
(bad)
sub
movs
(bad)
push
sbb
mov
cmp
in
or
ret
in
adc
add
lea
push
pop
(bad)
es
jne
repnz
sbb
lock
push
ja
cs
scas
sbb
lock
pop
push
cmp
out
add
xchg
xlat
mov
add
jnp
mov
shl
inc
pop
xor
je
neg
adc
popa
cld
(bad)
fsubr
fmulp
mov
test
mov
pop
mov
push
mov
add
gs
in
dec
inc
dec
inc
inc
(bad)
mov
add
mov
popa
dec
sub
dec
stos
pop
shl
stos
cwde
jle
jecxz
mov
out
add
add
(bad)
std
out
pop
call
cmp
adc
and
add
or
sbb
jb
xlat
fninit
add
retf
mov
mov
dec
popa
es
fdivr
iret
add
in
inc
add
test
sbb
enter
sahf
push
add
cmp
retf
jb
cld
or
dec
imul
mov
sbb
clc
jne
add
sbb
jg
add
mov
or
int3
dec
cmp
dec
pop
push
adc
mov
push
inc
into
lock
sub
pop
les
pop
push
cmp
adc
cmp
xor
(bad)
fsub
cwde
mov
push
jno
and
cmps
inc
int
(bad)
ja
clc
pop
loopne
push
pop
mov
cli
add
or
leave
imul
jp
div
adc
sbb
loope
repz
xchg
pop
(bad)
push
sub
xor
inc
add
add
add
inc
lock
xor
test
hlt
shl
add
push
add
gs
scas
inc
cmp
cmp
call
push
fmul
movs
scas
cmp
sbb
add
neg
jmp
ret
imul
les
jo
pusha
out
adc
push
fsub
sahf
pop
out
std
dec
inc
add
mov
loopne
mov
fbstp
enter
add
push
fsub
cmp
mov
or
or
lds
mov
stc
fisub
dec
sbb
cdq
inc
retf
add
jnp
push
lds
sub
(bad)
mov
add
adc
or
xchg
inc
xchg
mov
(bad)
push
and
mul
in
outs
shl
sub
and
popf
push
jmp
push
adc
and
mov
and
in
inc
cdq
retf
in
stos
int3
sti
in
pushf
add
add
push
pop
and
xchg
cdq
mov
mov
add
sbb
jge
jne
jp
jnp
add
adc
lods
data16
mov
mov
adc
gs
je
sbb
pop
clc
sub
dec
pushf
int3
sbb
sahf
xchg
jl
ins
xchg
les
cld
add
or
pop
ins
es
(bad)
ss
out
add
cwde
movs
dec
aad
jmp
xchg
bound
pop
sbb
outs
(bad)
or
pop
gs
sub
jne
inc
loopne
stos
pop
cmp
sbb
leave
scas
mov
push
sbb
add
sbb
mov
cld
pop
in
popf
adc
in
call
cwde
jne
mov
imul
push
add
imul
(bad)
push
push
inc
inc
cli
mov
test
fcomp
pop
mov
xor
pop
adc
and
pop
mov
dec
sbb
or
add
aad
test
add
aas
psubsw
(bad)
int3
pop
add
imul
push
les
in
fist
jne
cmps
shr
mov
stos
stc
test
out
nop
cmps
rol
sbb
xchg
mov
or
gs
cmovo
out
jp
sub
retf
adc
rcl
fist
in
imul
inc
rol
int
fisubr
push
add
xchg
hlt
add
pushf
gs
pop
cmps
mov
mov
push
inc
push
and
add
mov
call
nop
addr16
jecxz
out
inc
add
xchg
imul
pusha
and
repz
mov
sbb
dec
push
add
lahf
sub
jecxz
gs
fistp
mov
and
shr
or
mov
xor
push
lods
rol
add
or
int3
mov
inc
into
retf
push
inc
cmp
add
inc
xor
mov
(bad)
popa
enter
cmp
mul
pusha
add
dec
push
cmp
stos
jae
jnp
or
xchg
test
in
add
xor
jne
rol
add
test
jne
and
aam
mov
inc
sbb
mov
xchg
mov
rol
fcmovnbe
inc
mov
fwait
mov
rol
popf
int3
sti
xor
mov
sbb
xor
jp
ja
cmp
in
cmp
(bad)
cmp
adc
imul
push
inc
xor
add
add
sub
jg
stc
inc
add
inc
or
push
lods
jno
lea
pop
not
test
sbb
sbb
ds
movs
addr16
pop
adc
push
mov
xchg
fwait
jnp
icebp
mov
popa
and
push
jo
pop
or
cwde
idiv
adc
or
xchg
mov
(bad)
gs
stos
jbe
inc
ret
and
xchg
push
(bad)
adc
add
repnz
jle
and
add
or
int
push
shl
rcr
fmul
push
sub
jo
mov
and
aam
jnp
push
sbb
inc
and
pop
xchg
daa
inc
add
add
nop
mov
mov
fisttp
inc
div
pop
retf
loop
sti
call
jne
pop
jl
popf
movs
ds
std
and
mov
inc
sub
adc
test
mov
test
sub
shl
sbb
test
and
sbb
sub
dec
or
xchg
sbb
out
add
adc
add
cmp
mov
lahf
xor
pop
popf
sub
mov
add
loopne
inc
add
or
stos
pextrw
sbb
aad
mov
lds
jl
add
push
fld
dec
das
inc
mov
jae
add
sub
mov
jle
loop
push
or
jecxz
pop
in
cmps
xor
jle
and
and
(bad)
in
jbe
cmp
mov
and
inc
dec
stc
lea
pop
test
mov
adc
and
shr
xor
mov
xor
add
or
mov
push
dec
test
cs
fs
xor
push
mov
push
inc
shl
mov
repnz
clc
inc
mov
loope
add
stos
enter
xchg
jo
xchg
sbb
add
fwait
ror
add
xchg
inc
sub
add
int
mov
xchg
sub
neg
jmp
mov
adc
daa
loopne
and
add
(bad)
inc
sub
add
xchg
xchg
push
sbb
and
cmp
jne
lock
sub
cs
cli
pop
cmps
xchg
push
popf
rcr
(bad)
retf
sbb
das
test
(bad)
add
push
test
pop
repz
fld
push
pop
mov
push
xchg
push
add
push
add
mov
in
inc
test
and
and
clc
mov
pop
cli
add
pop
adc
ret
and
dec
pop
cmp
mov
push
push
adc
ss
call
or
je
push
mov
jbe
jp
nop
mov
fwait
pop
ret
cwde
push
in
xchg
lock
ins
cmp
pusha
sub
mov
jp
cld
ror
xor
mov
nop
mov
(bad)
daa
data16
scas
or
test
mul
pop
fbstp
push
mov
add
add
mov
sbb
add
add
cmps
or
add
fstp
sbb
mov
aad
aaa
push
add
pop
scas
scas
add
and
dec
jl
jmp
mov
inc
outs
jbe
das
or
dec
fsubr
ss
(bad)
out
imul
in
loopne
(bad)
push
push
loopne
or
inc
pop
push
mov
lods
and
outs
cmp
leave
inc
pop
fdivr
or
adc
cmps
les
call
adc
mov
imul
cmp
pop
popa
inc
jno
push
jbe
rol
mov
push
aam
imul
xor
sbb
xor
and
xchg
ret
add
das
daa
inc
pop
jnp
sahf
add
mov
sub
jae
pop
in
xchg
sbb
pushf
in
hlt
push
sbb
mov
add
or
movs
enter
fimul
test
add
sbb
jmp
xchg
loopne
mov
scas
scas
push
xor
std
and
pop
cmps
js
cmp
adc
sub
push
lock
mov
add
add
loop
xchg
rcl
inc
pop
mov
fiadd
mov
mov
dec
xchg
aaa
psadbw
inc
or
sub
test
push
cld
shl
or
xchg
mov
mov
jl
cmp
adc
push
mov
imul
call
adc
unpcklps
repnz
pop
add
test
stc
fisub
retf
add
sub
adc
add
loope
je
push
or
iret
sbb
lods
jecxz
mov
mov
sub
cdq
dec
dec
imul
adc
(bad)
test
inc
add
std
cmp
mov
adc
add
or
and
mov
stos
cmps
add
mov
xchg
imul
mov
pop
das
ja
pop
push
add
add
push
sub
inc
fild
cmp
push
fcmovu
mov
pushf
repz
adc
mov
outs
mov
in
sbb
lock
stc
cli
push
pop
div
test
loopne
push
subps
add
dec
mov
push
add
stc
push
push
add
ja
dec
sti
dec
cmp
and
add
out
enter
cmp
xor
dec
fbstp
jbe
lahf
je
xor
mov
adc
call
xor
jne
sbb
sub
(bad)
xor
pusha
push
sbb
cli
pusha
mov
rol
xchg
cli
mov
and
add
lods
das
cld
and
out
push
or
loop
and
sub
rcl
sahf
mov
inc
loop
or
arpl
mov
pop
xor
and
add
add
cmp
cmp
addr16
cmps
sbb
(bad)
jno
mov
cmp
in
je
ret
pop
push
mov
xor
sahf
setbe
pop
and
and
mov
lods
adc
gs
loop
dec
das
jns
int3
ror
jne
js
retf
hlt
or
js
add
pushf
mov
rcr
xor
mov
pusha
mov
arpl
pop
inc
cmc
pop
pop
xor
rcl
and
sbb
verw
xchg
loope
outs
sub
push
out
aaa
push
inc
iret
mov
mov
cli
adc
cmp
test
rol
je
jmp
add
fst
pop
cmp
ins
xchg
sub
clc
push
mov
xchg
add
mov
fprem
jae
aas
mov
adc
add
add
sub
in
mov
stos
inc
dec
js
mov
ds
dec
add
or
add
dec
shr
push
sbb
stc
lods
pop
add
lods
ret
mov
add
ficom
jne
inc
(bad)
ret
call
jb
and
and
inc
cmps
add
mov
ss
xor
ja
les
call
or
sti
dec
cmps
add
sti
je
push
add
pushf
repnz
fs
xchg
xchg
imul
pushf
xor
dec
add
adc
cmps
clc
or
imul
loope
loopne
test
push
push
jbe
adc
add
add
call
jp
or
ds
sbb
xor
aaa
pop
mov
pop
cmp
adc
add
fs
idiv
push
lds
cmp
fmul
add
hlt
sahf
jno
inc
or
loopne
add
push
ret
push
fcmovb
and
scas
xor
mov
adc
add
sub
and
out
retf
xor
xor
jp
add
ret
dec
shr
mov
inc
fmul
pop
repnz
add
cld
(bad)
cli
mov
pop
inc
clc
adc
mov
test
mov
aam
fs
inc
add
push
add
ins
jl
add
jp
adc
mov
jnp
ret
mov
repz
mov
dec
enter
retf
fucomp
pop
xchg
mov
jae
push
aas
out
loopne
push
adc
call
add
adc
bound
jl
mov
xor
add
adc
imul
push
jb
rol
mov
out
out
add
mov
xor
aad
add
ss
xchg
dec
gs
cmp
(bad)
and
mov
push
test
pop
cmp
add
or
sub
ds
hlt
sbb
cmp
cdq
add
out
jl
xchg
cmp
pop
cmp
push
adc
imul
jg
push
nop
or
pop
and
mov
cmps
adc
inc
add
in
dec
push
jmp
lock
mov
jnp
jge
sahf
fdivr
enter
cld
adc
cs
jo
inc
popa
in
or
mov
out
adc
sbb
icebp
push
push
jbe
add
imul
in
sbb
cmp
xor
or
movd
(bad)
adc
popa
sbb
test
mov
sbb
cmp
pusha
ja
shl
mov
pushf
je
mov
jmp
xchg
je
push
(bad)
enter
inc
daa
or
mov
inc
mov
inc
adc
push
inc
add
rol
stc
and
add
pushf
iret
mov
cmp
cld
sti
pop
das
es
retf
add
add
cmps
clc
cli
or
(bad)
or
jae
ror
add
(bad)
jbe
jmp
out
dec
xor
dec
(bad)
enter
dec
push
fldcw
push
xor
inc
ins
sub
add
pusha
jle
mov
push
ins
cmp
(bad)
fxam
repz
cmp
imul
in
pusha
add
pop
xor
mov
sar
enter
lods
xchg
call
adc
or
mov
sub
add
sahf
mov
rol
dec
add
cmp
pop
mov
push
lock
nop
add
out
dec
jae
sub
mov
aam
xor
in
fistp
mov
mov
imul
js
mov
inc
mov
inc
mov
and
push
push
add
(bad)
jmp
out
pusha
and
fsub
popa
ror
xor
in
pop
das
mov
add
psraw
mov
push
push
(bad)
mov
loope
test
dec
out
loope
jp
mov
mov
(bad)
sbb
push
or
pop
mov
stos
push
pop
shl
mov
and
push
add
rol
and
sbb
adc
aam
inc
jbe
gs
mov
test
ja
pop
xchg
call
xor
and
push
pop
sbb
out
add
ins
add
push
sub
shl
pop
loopne
push
xchg
cmp
pop
into
push
push
rcl
mov
sbb
mov
add
cwde
popa
xor
add
adc
and
imul
shl
int
add
and
sub
xor
push
push
mov
nop
push
push
in
jae
movs
into
sbb
lahf
xchg
pop
add
jecxz
aad
fucomp
nop
retf
dec
inc
das
je
cmc
pop
dec
cmp
inc
fnsave
fcom
ds
pop
sahf
add
sbb
mov
(bad)
fadd
pop
ja
xchg
aam
movs
stc
out
ret
sbb
hlt
and
loope
je
add
mov
or
push
push
test
add
aas
jnp
pusha
out
sar
sub
mov
out
(bad)
dec
jne
inc
(bad)
cld
jae
test
or
push
xor
cmp
addr16
jge
ret
mov
sub
sbb
test
add
aad
inc
mov
jmp
jecxz
int3
sbb
dec
lahf
retf
pop
cld
dec
mov
jmp
lods
shl
sbb
pop
add
push
jmp
in
inc
lods
lods
int3
loopne
mov
cli
ret
mov
jmp
lods
mov
stc
adc
call
dec
(bad)
mov
mov
ja
adc
stos
imul
inc
mov
add
repz
mov
lods
retf
mov
mov
adc
and
clc
adc
ss
sbb
ds
sbb
dec
adc
jmp
xor
mov
add
stos
jecxz
dec
sbb
dec
mov
jmp
inc
add
ret
push
scas
cmp
retf
rcr
fldcw
cwde
ins
push
add
fcom
cmps
mov
jmp
mov
jp
das
push
xchg
add
inc
cmp
sub
pop
fadd
add
iret
mov
or
cmp
mov
fdiv
and
ror
ins
fwait
jo
adc
and
in
outs
inc
add
and
pop
ret
jb
daa
add
xor
add
mov
int
push
sbb
iret
mov
or
jb
jl
add
aas
add
mov
hlt
push
jg
mov
pop
mov
adc
xlat
(bad)
cmp
add
inc
ficom
sbb
add
pop
ins
jbe
xor
sbb
scas
shl
ja
mov
add
mov
inc
call
shl
cmp
push
lods
inc
push
mov
enter
xor
add
sbb
mov
pop
call
out
add
pop
pushf
enter
pusha
push
pop
xlat
add
add
inc
jae
sbb
or
hlt
sub
clc
in
scas
std
adc
or
adc
call
in
and
mov
add
add
scas
push
stos
cmp
pop
scas
add
mov
shr
mov
add
cmc
xchg
aad
xor
aaa
shr
dec
mov
jnp
add
jno
add
clc
mov
scas
movs
fidiv
loop
outs
ss
xor
fild
cmps
mov
stc
jmp
xchg
out
mov
or
xchg
push
mov
(bad)
movs
sub
popf
and
jnp
psrlw
test
data16
fs
jb
and
add
jbe
add
daa
xchg
sbb
cdq
ss
pop
clc
push
xchg
push
mov
add
lahf
xor
retf
xchg
jo
loopne
cli
jg
xchg
cs
xor
fisub
jne
mov
test
out
or
bound
mov
push
jmp
mov
jo
pop
push
and
push
fwait
cmps
add
js
xor
stc
sub
jle
(bad)
jmp
dec
add
imul
inc
loopne
sbb
or
sub
mov
jmp
jne
fisubr
cld
addr16
dec
adc
add
mov
mov
rol
pushf
mov
cmp
mov
iret
cwde
ret
push
pop
mov
push
pop
xor
leave
xor
mov
push
push
and
pop
fistp
cmp
add
lock
lods
fdivr
bnd
mov
aad
fsub
mov
fiadd
jl
dec
add
out
jl
and
movs
cmps
out
shr
(bad)
nop
pop
cmp
jmp
push
dec
mov
pop
xchg
iret
add
mov
push
mov
sti
dec
dec
out
and
test
iret
and
cs
lds
repnz
add
inc
icebp
and
hlt
add
lods
test
mov
jno
add
aas
mov
cmp
mov
mov
imul
jecxz
or
or
dec
or
movs
mov
cmp
dec
adc
ficom
fdivr
push
cli
add
ret
stos
out
lock
xor
cmp
add
inc
add
pop
cmp
xor
push
adc
pop
add
call
out
inc
fcmovnu
xor
lock
pop
out
push
or
out
add
sub
dec
pop
pushf
arpl
adc
pop
cmp
pusha
pop
add
fdivr
cmp
mov
add
push
cwde
add
jle
xchg
cs
dec
sbb
xor
stc
pop
sbb
xchg
xor
mov
pop
xor
cwde
jno
jp
lds
add
sbb
mov
add
and
sbb
add
inc
inc
lock
or
add
pop
xchg
jno
lsl
sbb
shl
mov
scas
pushf
clc
jg
pop
pop
dec
mov
clc
retf
lods
arpl
mov
mov
push
leave
jmp
test
mov
nop
dec
test
adc
ds
jl
push
mov
add
in
daa
xchg
push
ja
xor
call
add
sub
cmp
lock
clc
push
mov
loope
out
add
sti
xlat
dec
int3
add
cmp
in
shr
push
mov
jge
and
jecxz
add
add
mov
add
ja
jnp
mov
push
or
ja
jne
loope
loopne
add
daa
jno
hlt
popa
add
aaa
adc
repnz
pop
add
xlat
jo
jnp
add
ror
out
add
ins
sbb
push
call
popf
fwait
jns
add
movs
xor
and
jae
xchg
shr
movs
lea
add
jns
xchg
sbb
mov
aam
add
movs
adc
imul
add
push
(bad)
dec
mov
repnz
xchg
clc
mov
push
dec
scas
shr
cmp
dec
test
inc
in
and
cmp
and
push
sbb
ja
cli
add
add
pusha
add
xchg
dec
add
iret
and
daa
test
out
pop
pop
popf
scas
mov
outs
add
push
clc
and
adc
push
inc
add
imul
popa
sar
cli
or
inc
ss
aad
ins
lahf
dec
add
jmp
cmp
jne
rcl
cmp
or
push
loopne
sbb
mov
push
ins
pop
loope
jmp
dec
loopne
add
dec
sbb
add
sbb
xor
inc
arpl
pusha
jno
sbb
add
inc
shl
mov
add
inc
retf
mov
dec
xchg
add
sub
div
fiadd
mov
xchg
test
fdivr
mov
sbb
jnp
or
lds
retfw
lds
js
adc
fmul
inc
mov
mov
call
cmp
add
xlat
pop
xchg
shl
pop
outs
(bad)
jns
cmp
mov
mov
jae
pusha
mov
inc
add
xor
jne
sub
idiv
add
es
add
pop
add
stos
inc
mul
cmp
(bad)
imul
mov
and
jecxz
add
ret
rol
lock
dec
or
aas
sub
cwde
sub
xchg
inc
sub
sahf
aam
mov
inc
loopne
jmp
add
pop
adc
lahf
add
test
pop
pop
stos
sbb
imul
push
imul
data16
cli
jmp
lods
fs
push
add
sbb
push
cli
outs
add
xchg
sbb
cmp
ret
xor
add
adc
ja
lock
pop
shl
pusha
in
add
loope
movs
add
pop
inc
out
mov
push
fimul
(bad)
(bad)
in
add
or
jbe
mov
lods
pop
xor
scas
sub
xor
xlat
(bad)
dec
sub
jge
lds
jle
imul
repnz
aaa
push
cmp
movs
jmp
nop
pop
mov
mov
hlt
imul
lahf
and
add
push
aas
gs
fwait
inc
pushf
loope
hlt
mov
out
out
je
mov
push
dec
arpl
sysret
cmp
mov
and
or
fistp
mov
leave
dec
imul
jle
sti
dec
daa
scas
sbb
xor
add
push
dec
add
sub
add
pop
jae
lods
add
test
jge
stos
cdq
add
add
not
xor
int
ins
xchg
cmp
dec
mov
add
and
add
add
adc
js
pop
inc
addr16
das
bound
push
sbb
stc
daa
fld
pop
stos
jp
aaa
dec
dec
int
add
push
fs
add
repz
arpl
and
adc
(bad)
mov
bound
daa
and
dec
dec
pop
fs
mul
ds
pop
test
sub
fcom
(bad)
mov
cmp
add
jb
mov
inc
rcl
fucomp
add
jb
ror
mov
push
in
push
pop
cmp
and
jo
in
cmp
lahf
into
xor
adc
les
jl
pop
add
mov
dec
jmp
adc
not
xor
mov
pusha
sbb
adc
hlt
add
mov
mov
xlat
jns
xchg
and
(bad)
in
mov
ficom
stos
ror
adc
stos
mov
mov
pop
jmp
sbb
mov
mov
idiv
test
in
add
pop
setne
xchg
pop
add
jg
inc
daa
shl
inc
add
aaa
adc
pop
fld
dec
xor
loopne
std
jne
test
inc
les
mov
outs
add
push
arpl
(bad)
sub
adc
mov
mov
ja
mov
shr
ds
adc
inc
add
inc
sbb
adc
test
jmp
retf
int3
sbb
mov
shl
mov
pop
test
add
cmp
jne
ret
fadd
add
inc
mov
popf
(bad)
ret
add
adc
add
jns
(bad)
adc
push
jo
fwait
icebp
adc
daa
add
push
add
into
(bad)
les
(bad)
cmps
push
into
aam
inc
adc
add
call
mov
adc
cmp
ds
adc
dec
fadd
add
test
repz
popa
outs
sub
pop
jo
icebp
sbb
out
jb
push
mov
pushf
pop
push
mov
push
jmp
shr
in
jg
stc
ret
sub
add
add
add
push
xchg
cli
sub
aad
xor
fcomp
shr
or
jg
sbb
sbb
fld
mov
add
push
es
jmp
sbb
in
cld
mov
mov
cmp
mov
push
sbb
push
daa
push
stc
(bad)
adc
xchg
xchg
les
cmp
sub
into
cmp
sub
xor
mov
sbb
pop
xchg
xor
mov
xchg
jb
mov
test
in
inc
add
jb
aad
cmp
aaa
cs
jbe
into
add
pop
sub
add
jno
cwde
add
xor
stos
and
mov
cwde
mov
xchg
lock
xor
mov
xchg
int
enter
add
(bad)
idiv
or
push
jo
cmps
xor
call
(bad)
and
mov
movs
add
add
mov
(bad)
xor
ffreep
push
ror
xchg
add
aaa
fistp
gs
add
pushf
lock
sub
sub
fmul
inc
nop
mov
call
adc
call
dec
mov
or
mov
inc
jbe
mov
jle
cmp
ds
mov
(bad)
sbb
add
sbb
and
psrlq
jge
mov
ror
add
or
popf
push
rol
popa
mov
and
jo
in
loope
jle
(bad)
call
add
add
jmp
push
add
dec
ret
out
xchg
mov
jbe
call
ret
jb
xor
cmc
push
jl
pop
add
mov
add
and
xchg
mov
jmp
fwait
out
call
add
ins
and
xchg
rcl
jmp
xor
adc
nop
add
add
pop
add
cmp
test
push
repnz
pop
jo
add
mov
pusha
mov
shl
push
ja
fadd
(bad)
jbe
mov
inc
mov
dec
dec
jmp
stc
and
or
add
pop
scas
mov
cmp
add
(bad)
add
push
pusha
sbb
xchg
mov
add
jecxz
call
add
dec
add
jp
adc
js
shl
bound
loopne
(bad)
jmp
pop
mov
int
push
mov
xor
push
lea
icebp
pop
stos
jmp
pop
in
push
pop
sahf
jbe
sub
sub
lods
mov
popf
dec
lahf
jmp
push
arpl
xchg
ret
loope
add
dec
inc
push
adc
popf
aad
cmc
pusha
dec
out
xor
push
push
es
pop
rcl
addr16
inc
mov
lea
jg
imul
cmp
cwde
add
mul
inc
push
cmc
ret
imul
sar
mov
pop
xlat
add
add
mul
popa
cmps
out
adc
fcom
and
sbb
pop
dec
add
pop
jo
scas
adc
int3
or
add
jo
and
pusha
push
or
rcr
add
lea
jmp
xor
(bad)
cmp
xchg
inc
(bad)
push
mov
call
sub
pop
int3
jb
push
leave
pushf
pop
out
inc
mov
mov
adc
cmp
mov
ror
nop
add
aad
scas
sbb
jmp
sti
jl
fild
push
and
add
pop
inc
push
fiadd
xchg
push
les
push
in
aaa
enter
ins
add
mov
sbb
sbb
dec
popa
xor
mov
addr16
add
jecxz
adc
pop
sbb
and
and
dec
leave
add
cwde
push
dec
mov
inc
outs
nop
cmp
jo
dec
xor
cmp
aas
sub
cwde
xor
and
xor
inc
not
sub
pop
test
pop
xchg
fiadd
pop
xchg
pop
fs
das
add
shl
dec
add
ins
dec
stc
out
and
adc
add
outs
das
aaa
cdq
addr16
or
jmp
ret
pop
xor
lock
(bad)
int
add
pop
out
fadd
pop
nop
dec
sahf
add
je
xor
fidivr
adc
mov
and
lods
les
dec
lock
adc
cmc
xor
test
fidivr
push
adc
jne
mov
push
in
lds
sbb
jns
and
aaa
test
jge
ss
jl
add
clc
xchg
ins
retf
pop
call
jbe
scas
ret
lock
pusha
push
cmps
pop
add
cmp
pop
pop
mov
test
ins
pop
pop
sub
xchg
add
int3
movs
movs
push
add
jge
das
jge
lahf
call
ja
ror
mov
add
add
jne
sahf
add
mov
push
nop
gs
int
xchg
adc
call
pop
sub
fsub
int
sbb
push
pop
sbb
ss
ret
xchg
out
push
mov
call
dec
jle
repz
lds
gs
cmp
iret
les
add
add
icebp
xchg
inc
inc
jo
pop
bnd
mov
or
push
(bad)
jne
cmp
sbb
pop
ins
push
push
mov
xchg
add
add
inc
mov
clc
(bad)
inc
mov
imul
add
inc
arpl
cmp
je
repnz
lock
add
push
mov
clc
ror
dec
jmp
add
inc
inc
rcr
ret
cmp
push
and
mov
add
and
inc
popa
fcom
and
add
adc
punpcklbw
or
call
xchg
jge
cwde
fiadd
lea
ret
add
pop
pop
fstp
mov
mov
cld
(bad)
pop
outs
push
pop
popa
sub
cmp
add
stos
add
cmp
mov
or
and
dec
pop
lods
(bad)
in
sub
mov
jno
pusha
or
shl
add
inc
inc
inc
out
loop
mov
jno
shr
pop
jge
add
or
in
add
(bad)
fadd
cmc
out
mov
scas
stos
and
inc
pop
cmp
mov
jbe
inc
push
xor
push
outs
fadd
call
jmp
cmp
dec
mov
movs
int
push
push
add
and
icebp
xor
mov
fsubr
stc
es
xchg
in
add
stos
sub
call
out
push
hlt
add
add
add
inc
sbb
mov
pop
mov
and
inc
xlat
and
pop
mov
add
push
pop
and
test
xor
stos
xor
or
call
pop
mov
or
jmp
or
cmps
pop
mov
push
inc
or
rcr
movs
loop
pop
dec
jl
or
pop
push
sbb
add
adc
add
mul
pop
test
lahf
or
rol
adc
cmp
mov
rcl
ins
movs
mov
or
(bad)
(bad)
xor
jl
jge
pop
and
or
fidiv
ficom
sbb
lock
xchg
or
or
mov
rcr
add
sbb
xchg
cli
add
call
ret
xchg
loope
add
add
push
fwait
ss
dec
or
dec
test
mov
icebp
mov
out
dec
add
add
ret
call
add
lock
or
data16
sbb
add
ins
sbb
ja
les
sti
push
and
add
popa
in
push
ins
(bad)
push
hlt
cmp
jmp
(bad)
loopne
xchg
clc
cmp
fdiv
jmp
add
enter
ins
adc
or
scas
mov
pop
cmp
jle
and
mov
add
push
add
pop
fwait
and
cmps
pop
inc
dec
sar
bsr
xor
fnstenv
mov
adc
mov
test
dec
loope
loopne
int3
push
js
mov
out
cmp
dec
cmp
(bad)
and
push
sub
pop
(bad)
mov
dec
in
or
nop
int3
(bad)
lods
pusha
or
dec
das
gs
add
aas
scas
retf
inc
sub
add
rol
stc
jmp
mov
mov
xchg
out
(bad)
icebp
cld
dec
lea
cmps
bound
adc
es
xor
movntq
pop
cmp
jb
adc
add
pop
mov
cmp
ret
and
dec
popf
xor
rcr
movs
add
xlat
mov
and
ins
cmp
mov
xor
or
push
adc
pop
add
adc
leave
ins
stc
sub
push
jae
jo
sub
cmp
mov
sbb
jae
enter
fwait
das
leave
dec
aam
xchg
lock
xchg
cli
jle
adc
je
ds
in
sbb
fsub
sub
fs
jnp
mov
addps
mov
and
jge
inc
stos
jg
popa
and
xchg
inc
das
lods
daa
dec
dec
xor
scas
(bad)
shr
push
inc
loopne
retf
shl
jl
jp
jnp
push
mov
inc
push
mov
jp
hlt
inc
pushw
or
jl
add
pusha
addr16
test
jnp
ret
dec
add
mov
mov
in
les
push
sbb
xor
push
mov
jo
dec
pop
shl
push
lea
sbb
mov
lods
je
pop
cld
in
add
cli
mov
lods
add
mov
shl
push
hlt
mov
jp
cmc
fmulp
in
inc
add
add
push
pop
test
sbb
jno
inc
jne
push
inc
push
pop
push
pop
fdivr
add
dec
(bad)
loop
lock
or
cmp
add
dec
sbb
sahf
stos
add
pop
sub
in
jne
pop
jge
cdq
cmp
nop
xchg
mov
arpl
fwait
lock
pop
test
gs
add
iret
test
sar
lods
cmps
push
imul
adc
ins
loopne
mov
or
add
smsw
pop
inc
xor
add
bound
add
rcr
(bad)
fs
test
(bad)
mov
ficom
xchg
add
jmp
xchg
adc
xor
inc
dec
fld
popa
mov
jmp
xchg
mov
outs
jmp
std
je
jno
or
sub
mov
push
and
outs
inc
cmp
das
(bad)
and
xchg
pop
mov
mov
lahf
shr
cmc
push
arpl
ret
inc
or
mov
out
imul
lock
dec
sbb
scas
add
cmc
add
int
and
add
test
outs
cmp
mov
push
mov
sbb
fsubp
pop
fild
jne
sub
add
xor
inc
bnd
push
inc
dec
call
xchg
out
mov
adc
pusha
and
ins
rcr
push
xlat
pop
popa
into
js
lds
ret
jne
shr
(bad)
fadd
(bad)
jl
add
sbb
out
dec
xchg
lock
mov
aaa
sbb
jl
dec
movs
in
pop
add
jle
jns
xchg
lds
sub
jo
mov
lea
sbb
paddusb
jmp
pop
fmul
gs
push
jle
push
add
sub
lahf
arpl
nop
add
mov
cmp
leave
jle
fist
leave
push
mov
cmc
add
inc
jmp
mov
je
add
mov
cwde
imul
aaa
push
mov
popa
add
inc
rdpmc
jle
pop
loopne
add
and
push
test
mov
add
add
add
add
(bad)
sti
lds
jecxz
int3
push
mov
lods
int
mov
xor
jge
sub
or
aas
add
test
dec
scas
or
push
adc
add
pop
and
loop
mov
dec
in
cmp
cmp
sub
cdq
jp
xor
xchg
sbb
add
inc
xlat
xchg
test
add
xchg
xor
sbb
inc
jg
jns
in
add
cmp
gs
lock
arpl
adc
jecxz
test
daa
sub
sbb
xchg
stos
test
add
cli
test
(bad)
int
jne
dec
dec
jg
add
shl
hlt
xor
repz
add
add
or
in
imul
xor
mov
neg
jle
mov
imul
enter
test
ins
pop
mov
mov
movs
cmp
jecxz
mov
add
hlt
call
mov
sub
lahf
jb
sbb
out
push
sbb
push
add
jg
adc
xchg
sti
push
and
push
jmp
cmp
fadd
add
ror
and
add
add
rcl
cmp
pop
add
shr
xchg
dec
or
ret
dec
das
sub
rcr
mov
or
popa
sub
clc
imul
adc
xchg
retf
lods
daa
mov
pop
(bad)
loopne
jecxz
xor
aam
(bad)
pop
mov
push
add
scas
test
je
sub
jmp
dec
popa
pop
mov
pusha
xchg
xor
mov
ret
int3
add
in
jmp
or
xor
sbb
mov
js
add
loop
cmp
inc
jb
push
add
gs
xchg
sub
jmp
add
cld
add
bound
mov
adc
sar
inc
jae
pushf
in
mov
mov
mov
add
imul
ret
aas
xor
lock
retf
mov
loop
add
ja
push
lahf
jbe
xor
add
les
test
daa
leave
xor
or
rcr
gs
and
sub
pop
adc
xchg
mov
mov
add
cmp
addr16
push
xchg
call
daa
aad
popa
xor
add
adc
pop
adc
loop
mul
add
inc
cli
jmp
hlt
xor
stos
retf
outs
jnp
jb
scas
mov
dec
test
daa
or
pavgb
adc
jo
inc
or
mov
jb
or
loop
mov
or
repz
pop
es
mov
popf
pop
sub
add
dec
xchg
ins
je
add
mov
sti
shr
cs
les
and
call
jae
xor
pop
pop
bound
inc
inc
jo
sbb
pop
adc
dec
das
fcmovne
inc
cmp
or
add
clc
xor
stos
xor
add
cmps
xchg
sub
cld
jecxz
out
dec
inc
push
fild
push
inc
ins
loopne
sub
cwde
add
aaa
xchg
mov
mov
and
jecxz
ret
push
cs
push
popf
xchg
xor
mov
cmc
into
sbb
out
call
or
sbb
nop
div
mov
mov
cmp
outs
dec
test
int
out
or
mov
inc
push
aam
pushf
cmc
sbb
test
or
repnz
add
cmovle
aam
jecxz
call
mov
sahf
jmp
fcmove
aam
js
jne
fld
sbb
add
cmp
dec
fild
(bad)
sbb
cmps
lods
add
mov
out
nop
aad
sar
mov
pop
outs
enter
and
jecxz
clc
inc
jge
loope
push
jge
jae
push
bound
push
xchg
adc
inc
cli
jae
pop
cli
push
xchg
and
sahf
sbb
adc
sub
xor
adc
adc
and
popa
movs
mov
les
push
sub
test
lock
arpl
lea
jge
sub
inc
sahf
ret
cwde
cmps
loopne
sbb
aam
retf
add
ja
das
cli
adc
(bad)
dec
push
mov
(bad)
daa
aam
push
push
adc
pop
jl
shr
out
or
add
movs
or
add
add
inc
dec
jmp
pop
inc
xlat
or
add
add
sbb
in
add
mov
add
in
popf
or
xor
fs
jno
dec
sub
rcr
xchg
out
ror
mov
jnp
mov
adc
jbe
xchg
fiadd
ss
add
jl
jo
cs
push
rcl
sub
and
popa
loope
mov
lods
in
stc
pop
push
mov
test
stc
push
popa
push
test
jge
and
loopne
add
call
(bad)
ficom
jns
fbstp
push
add
dec
jnp
add
mov
pop
movs
xchg
add
pusha
imul
pop
add
fs
addr16
pop
aam
out
je
add
inc
lods
scas
mov
cld
test
shr
std
inc
add
repz
shl
jno
jle
(bad)
jmp
add
inc
outs
mov
xor
inc
add
add
test
in
rol
outs
inc
cmps
jl
daa
push
add
mov
add
mov
paddsb
icebp
loop
or
inc
and
iret
(bad)
push
fldenv
add
jns
es
add
int3
add
or
sti
add
adc
mov
adc
add
(bad)
into
adc
jne
xor
mov
mov
lds
jo
jbe
jle
add
sub
push
idiv
cmp
sti
cmps
inc
retf
movlps
fsub
fild
mov
add
jmp
or
ins
jb
add
push
fistp
xchg
dec
outs
scas
popf
fwait
add
std
stos
xor
lock
cmps
adc
push
call
popf
add
xchg
nop
test
ds
pushf
pop
jb
mov
xor
dec
lds
ror
ror
mov
dec
imul
lods
repz
add
sub
mov
lods
int
xor
dec
inc
jp
rol
js
dec
xor
fldenv
add
js
add
ja
sbb
pop
add
sbb
add
add
es
je
stos
sbb
shl
mov
fst
mov
call
lds
add
add
or
xor
in
or
arpl
ror
outs
add
jecxz
inc
xor
push
dec
push
add
shl
or
mov
add
repz
jne
jge
loop
adc
loopne
pmulhuw
pop
out
enter
sub
jg
shl
stc
or
frstor
inc
ins
add
imul
cmp
pop
arpl
dec
retf
jns
scas
mov
xchg
add
jge
and
(bad)
sub
cmp
mov
cmp
rol
add
and
and
lds
xor
call
pop
mov
cdq
and
sub
aas
int
shl
and
push
inc
(bad)
test
aad
imul
loopne
xchg
cmp
enter
sahf
dec
jle
repz
fimul
adc
nop
test
push
xor
or
push
push
daa
adc
lods
add
add
int3
int3
out
push
xor
add
retf
cs
mov
adc
sti
add
popf
cwde
stc
cmps
lods
adc
bound
dec
sub
icebp
and
add
push
bound
xor
fsubr
jge
xchg
sbb
adc
leave
mov
pusha
aaa
movs
and
test
out
dec
add
movs
cmps
aam
adc
cmp
sar
jg
jo
mov
add
jp
aas
add
call
adc
dec
pop
loopne
leave
add
ins
pop
jne
mov
add
add
in
and
js
adc
sub
mov
inc
dec
jle
sbb
sub
js
ins
xor
ins
mov
cli
retf
ja
inc
dec
sahf
stc
mov
popa
cmp
xor
xor
xchg
jl
pushf
inc
cmps
dec
add
movs
add
hlt
es
cwde
out
inc
add
add
push
adc
add
dec
call
out
shr
dec
add
and
xor
fld
jp
iret
sub
sar
and
addr16
mov
mov
jmp
fcom
repz
mov
push
sub
rol
shr
loop
aad
mov
int3
mov
mov
cwde
xor
iret
mov
aas
cdq
sub
stc
and
(bad)
jl
call
mov
cmp
inc
or
jl
mov
add
pop
sbb
or
mov
jns
jmp
add
add
int3
outs
mov
or
movs
mov
xchg
xchg
mul
fwait
xadd
add
add
and
add
cmp
cmps
dec
push
imul
outs
arpl
(bad)
xchg
sub
jb
pop
ss
jo
mul
add
sbb
cmps
add
stos
sub
xchg
int3
loopne
leave
popa
pop
add
psadbw
mov
cmp
cmp
xchg
inc
pop
push
gs
lahf
shr
ret
adc
jb
and
int
and
mov
jecxz
call
mov
mov
and
sti
jecxz
addr16
ins
add
jecxz
lahf
push
pushf
jb
cmp
jle
push
xor
inc
(bad)
mov
lds
scas
adc
mov
add
sbb
sti
or
jecxz
add
lea
je
fiadd
out
cmp
pop
mov
xchg
cwde
or
fstp
pop
loope
jle
out
cmp
add
xchg
jae
inc
dec
add
cmp
lock
xor
leave
jne
fstp
adc
jle
push
push
sbb
je
xor
mov
clc
add
dec
ins
push
cld
imul
movs
mov
mov
js
sbb
mul
xchg
shl
mov
and
mov
sbb
sahf
jns
(bad)
cmc
mov
jmp
add
push
and
lock
in
aaa
xchg
ds
add
mov
fnstcw
pop
ins
or
enter
in
mov
out
jb
xchg
xlat
mov
inc
pop
xor
dec
jge
xor
mov
inc
sbb
int
sbb
outs
jns
cld
mov
and
xchg
sbb
or
stc
in
stc
push
scas
xchg
sti
push
hlt
shl
rcl
nop
fstp
or
add
mov
test
pop
push
inc
leave
mov
add
add
xchg
nop
jae
jno
aad
test
add
mov
add
inc
cmp
jne
cwde
mov
add
in
retf
adc
les
push
sbb
sbb
add
cld
adc
(bad)
mov
xor
das
loopne
in
and
sti
movs
cmp
and
pusha
iret
ja
cmps
add
adc
add
pop
add
mov
jno
push
out
pop
mov
cmp
add
jl
mov
mov
in
lods
shl
ss
or
inc
mov
lods
mov
pop
xlat
retf
outs
push
jb
dec
push
pop
in
push
cmp
add
clc
int3
add
in
add
les
adc
add
pop
in
aad
rcl
push
mov
adc
mov
mov
in
add
rol
dec
das
fst
in
iret
jg
xor
adc
inc
jbe
or
mov
dec
imul
mov
add
jecxz
or
and
push
jbe
add
dec
enter
or
rol
and
adc
pop
and
fcom
test
rol
jmp
aad
inc
rol
adc
xlat
add
jl
pop
sub
popa
fwait
sbb
adc
out
push
cmps
fisttp
push
fsub
sub
add
retf
mov
mov
inc
mov
sub
cmp
je
push
push
cmp
out
xchg
sub
sub
ins
xchg
cmp
mov
lds
inc
test
cmps
das
or
add
add
movs
test
xor
and
or
dec
xchg
add
xchg
pop
mov
pop
cwde
lods
push
inc
cmp
dec
xor
inc
clc
push
arpl
inc
cmp
data16
stos
loope
sbb
mov
mov
dec
retf
xor
test
push
or
add
mov
cmp
rol
loop
inc
cmp
dec
je
inc
push
dec
add
add
cwde
test
mov
or
jne
es
fld
add
rcr
add
mov
or
cs
xlat
pop
adc
jmp
add
mov
and
mov
mov
sub
sahf
mov
pusha
pop
scas
arpl
jno
xor
inc
mov
cpuid
daa
fmul
or
jmp
gs
mov
xchg
sbb
add
add
dec
out
jbe
sbb
cmps
add
xor
xor
pusha
pop
jne
ds
jg
dec
add
and
adc
jbe
mov
enter
cli
jb
mov
ror
out
ja
add
jno
xor
aad
add
pop
mov
cmp
fidivr
clc
and
mov
cmp
mov
add
or
add
jecxz
jg
cmp
add
bound
leave
add
pop
sub
stos
push
out
cmp
pop
sbb
imul
add
cs
xor
add
add
cwde
ja
rcl
out
add
ja
or
cmp
sub
pusha
or
xchg
rol
cmp
rol
push
pop
jae
inc
jecxz
hlt
jno
mov
scas
add
push
imul
outs
aam
dec
xchg
or
outs
nop
ds
jmp
add
push
call
leave
jns
adc
daa
mov
inc
dec
into
mov
ss
popf
mov
pop
je
dec
sub
nop
xlat
add
rol
add
adc
iret
mov
imul
xor
mov
cmp
add
sahf
add
imul
aam
cmps
or
ins
test
adc
aad
dec
jge
mov
pop
add
adc
inc
inc
sub
cs
popf
in
sar
push
add
jno
add
add
push
xchg
mov
cmp
hlt
mov
in
adc
inc
test
popf
sbb
push
mov
mov
jne
adc
gs
cmp
scas
jp
les
mov
ds
add
pusha
mov
icebp
xchg
pop
(bad)
lock
add
xor
jne
lods
add
or
hlt
mov
and
add
push
jge
add
jp
jle
add
sbb
pop
pusha
or
data16
cli
sbb
adc
add
pop
outs
pop
add
push
in
jge
xor
sbb
xchg
movs
dec
mov
jb
add
sub
js
adc
and
daa
and
sbb
jnp
add
xor
mov
mov
test
ss
aaa
stos
retf
outs
pop
push
mov
rol
adc
retf
add
and
and
cmp
mov
cmp
test
jae
aam
jae
jl
push
push
jae
out
aaa
imul
iret
std
mov
stos
cmps
sbb
(bad)
cli
xor
sbb
xchg
mov
jmp
push
sub
outs
in
xchg
cmp
sbb
or
stc
(bad)
adc
inc
add
dec
dec
xor
jns
dec
push
xchg
add
test
mov
jae
lea
sbb
ja
bound
add
or
pop
loope
js
or
add
dec
inc
add
add
test
mov
cmp
mov
out
mov
mov
popa
ds
mov
or
fidivr
inc
lods
jo
pop
adc
add
sbb
adc
aaa
call
sbb
ror
inc
stos
sbb
loopne
mov
popw
adc
or
adc
(bad)
fsub
shl
dec
push
and
dec
mov
adc
push
push
std
movs
xchg
or
mov
(bad)
mov
push
push
nop
mov
rol
adc
pop
mov
add
sbb
outs
mov
inc
push
push
(bad)
fsubr
outs
adc
sub
fbld
push
je
repz
add
in
sahf
add
fcomp
jl
jne
pusha
fiadd
xor
add
mov
(bad)
mov
add
aam
fadd
es
add
jne
cmps
imul
xor
mov
movs
push
les
rcr
(bad)
xchg
jbe
add
aaa
cwde
shl
jbe
dec
sbb
pop
sub
sbb
(bad)
mov
pop
lock
clc
lods
retf
mov
imul
out
frstor
adc
add
cmc
shl
push
add
and
xchg
mov
push
sar
push
lods
pop
mov
push
dec
(bad)
pop
int
pushf
cld
push
cmp
push
mov
(bad)
mov
adc
mov
ja
pop
mov
dec
mov
push
add
psubsb
loope
jne
mov
jecxz
shl
push
mov
and
pop
lods
or
add
add
pop
add
je
jg
push
mov
imul
add
(bad)
jbe
add
adc
out
add
add
loop
mov
xor
imul
add
mov
sub
js
outs
and
mov
sub
push
pop
pop
add
mov
fs
sbb
enter
ins
push
rol
stos
sahf
lods
add
add
jno
jbe
je
lahf
or
sub
lock
pop
clc
mov
loopne
int
adc
add
mov
push
hlt
clc
add
call
mov
in
lods
test
js
or
push
sbb
je
add
adc
jp
lods
ins
inc
cdq
add
push
mov
xchg
cmp
cli
push
shr
out
or
add
daa
js
arpl
retf
or
test
and
jmp
leave
cwde
xchg
or
xor
pop
pop
dec
mov
inc
add
nop
mov
mov
lock
adc
mov
inc
fmul
add
lock
cs
repz
cmc
outs
call
sti
int3
clc
out
repz
rol
lods
je
cmc
cmp
clc
cwde
cdq
and
shr
addr16
push
sbb
icebp
push
aaa
inc
inc
dec
jno
and
mov
add
int
ret
sub
dec
mov
lods
scas
add
add
inc
or
dec
push
mov
inc
push
(bad)
jge
dec
inc
mov
cmp
pop
or
jg
add
enter
fiadd
add
stos
cmp
mov
fsub
xchg
ret
lods
popf
mov
adc
cmps
test
std
add
outs
inc
pop
(bad)
cs
push
icebp
cmp
shr
add
imul
xchg
jmp
(bad)
add
add
enterw
push
mov
cmp
(bad)
aad
movs
(bad)
out
movs
add
sub
lods
rcr
cmp
(bad)
cli
sar
not
jo
sub
add
adc
mov
dec
das
mov
mov
mov
inc
fadd
adc
add
and
sbb
gs
add
add
mov
movs
fmul
ins
popa
(bad)
loope
ss
push
xor
adc
mov
cs
pop
sub
leave
jecxz
and
add
push
mov
inc
pop
xchg
scas
ins
loopne
dec
clc
loope
dec
sbb
out
jp
xor
push
fs
dec
ror
gs
adc
sahf
add
and
inc
cmp
mov
in
fidivr
xchg
xor
inc
mov
es
sbb
inc
mov
cmp
(bad)
add
xor
sub
push
jns
or
mov
scas
dec
xor
scas
add
loopne
add
fld
xchg
add
inc
push
imul
pop
fst
mov
cmp
lahf
sar
out
sahf
and
adc
std
clc
pop
jg
fadd
pop
ror
mov
adc
les
retf
add
int3
or
pop
sbb
loopne
add
call
dec
adc
loop
mov
gs
mov
js
xor
add
call
cmps
push
jecxz
jb
xor
add
add
mov
sub
out
add
popfw
push
mov
add
cs
enter
fcmovb
jae
push
push
pop
add
cs
sub
dec
aad
xor
sbb
mov
repnz
xchg
add
aad
mov
jl
inc
dec
cmp
cmps
adc
push
clc
jne
xchg
shr
pop
mov
add
push
sub
mov
repnz
mov
and
mov
clc
sbb
xchg
dec
mov
push
bound
add
scas
sub
sub
dec
js
add
pusha
add
cmp
in
aad
and
jl
mov
lock
icebp
hlt
lds
aas
mov
jge
jmp
outs
je
push
ror
retf
add
cmp
ret
repz
add
out
mov
pushf
shl
jp
jmp
push
adc
sub
mov
push
adc
repnz
cld
jle
mov
add
inc
nop
push
pop
inc
and
lock
call
mov
mov
xor
jno
ret
aad
mov
movs
xchg
or
je
jmp
cmp
or
mov
into
int3
xor
jno
stos
je
shr
scas
scas
pusha
and
fcomp
es
sub
es
cdq
xchg
sahf
xchg
or
popf
sti
mov
mov
in
inc
jle
stc
cmp
int3
xor
ds
mov
or
aaa
mov
add
add
xor
jp
lock
in
lods
and
bound
inc
fiadd
outs
cmps
xor
ja
ins
int
mov
scas
or
push
cmp
pop
sub
xchg
movs
int
out
mov
pop
xchg
imul
inc
das
call
xchg
repnz
test
add
add
sbb
mov
mov
jmp
pop
int
lods
or
jo
mov
add
(bad)
test
(bad)
mov
add
pop
outs
sbb
retf
mov
push
movs
out
add
pushw
and
pushf
retf
mov
add
add
popa
push
jl
stc
mov
or
push
repz
add
and
mov
xor
jns
and
pop
js
pushf
cwde
je
adc
mov
mov
add
add
dec
cmp
je
and
mov
xchg
in
daa
fwait
rcr
sbb
pusha
add
mov
push
add
ds
push
ror
das
jno
call
arpl
inc
fild
movs
mov
mov
iret
aaa
mov
add
adc
jmp
xor
sub
scas
mov
mov
jbe
jne
inc
push
mov
jne
pop
inc
push
imul
inc
loop
test
adc
les
or
add
test
dec
and
sbb
add
dec
xchg
iret
mov
aam
add
cmp
shl
mov
bound
into
sbb
std
add
cdq
pop
icebp
lahf
sbb
in
sbb
push
mov
call
xor
mov
add
mov
(bad)
fcomp
repnz
cmp
and
adc
into
or
add
mov
mov
add
add
cmps
jg
movs
pushf
jns
mov
jle
add
add
shl
stc
pop
jb
inc
mov
or
add
push
nop
outs
xor
aad
int
jb
pop
fistp
sbb
js
data16
mov
nop
push
addr16
add
cmp
fcomp
inc
or
nop
jnp
add
sbb
cdq
ud0
push
arpl
in
add
xchg
ins
add
es
cmc
xor
jmp
cs
sbb
mov
sub
push
loopne
jg
sub
xchg
add
or
inc
retf
push
adc
add
add
mov
retf
sub
ja
add
mov
cmps
nop
mov
icebp
and
mov
cmps
sbb
aaa
push
dec
add
pusha
add
pop
mov
fcom
add
imul
sub
call
jg
enter
loopne
mov
test
or
(bad)
pop
add
sub
and
adc
test
ss
fiadd
fsubr
mov
jge
imul
xor
jno
pop
mov
jmp
leave
add
and
jl
add
add
sub
ins
div
out
push
dec
add
add
xchg
int3
call
arpl
jle
sub
arpl
shl
lahf
push
sbb
inc
push
add
cmp
inc
pop
dec
lock
add
gs
cmps
xor
fsubr
in
pusha
dec
inc
pop
(bad)
movs
retf
(bad)
dec
jl
(bad)
(bad)
loope
adc
cmps
hlt
jbe
or
jo
movs
xchg
bound
push
add
and
retf
jmp
mov
in
push
jmp
add
jmp
scas
add
adc
cmp
cmp
add
or
add
scas
xchg
add
aam
call
pop
jecxz
xor
cmp
call
rol
movs
sub
push
add
mov
out
out
rcr
jge
bound
adc
rol
xlat
(bad)
pop
pextrw
add
mov
jle
jbe
mov
add
rcr
retf
stos
lods
adc
push
ins
iret
jb
loopne
retf
movs
jge
jmp
jmp
pusha
test
clc
jne
movs
les
jge
xchg
add
add
xor
outs
sbb
leave
jns
add
out
and
add
pop
jb
stos
jge
or
iret
add
xor
(bad)
add
fisubr
add
mov
out
xor
xor
sub
inc
into
out
int3
jmp
mov
adc
push
xchg
(bad)
mov
xchg
xor
mov
push
test
retf
retf
add
data16
jp
mov
and
xor
add
int
add
nop
repz
cmp
cdq
fstp
add
and
aaa
popf
fst
sbb
xchg
popa
cmp
xor
in
sub
mov
sahf
mov
es
add
addr16
sbb
adc
shl
mov
and
cmp
add
add
or
add
adc
sub
pop
imul
xor
push
mov
lods
test
add
lods
pop
dec
mov
jo
retf
je
cs
add
push
clc
aas
aaa
xchg
enter
scas
retf
cli
fiadd
dec
nop
mov
ins
(bad)
lock
mov
pushf
mov
push
and
xor
sbb
add
stos
mov
cdq
sub
or
xor
cmp
jmp
dec
lods
dec
rcl
sbb
push
adc
ds
loopne
shl
je
pop
add
ja
lods
add
xor
add
cmp
imul
repnz
add
shl
add
mov
pop
jb
in
xchg
loopne
mov
adc
repnz
mov
jnp
add
test
rcr
outs
or
add
cmp
mov
add
js
mul
xlat
fwait
add
adc
jp
mov
add
add
jmp
cmp
mov
test
stc
add
add
and
push
add
call
(bad)
mov
jo
mov
fstp
dec
jo
inc
data16
repz
dec
mov
xlat
xchg
pop
aad
(bad)
sub
add
pop
dec
xor
adc
pop
repz
pop
push
sbb
add
sbb
xor
outs
or
cmps
not
cmp
hlt
loope
add
adc
jl
push
push
shr
out
fwait
rol
xor
push
cmp
gs
inc
mov
std
add
xor
add
rol
mov
shl
inc
push
and
lea
ret
add
pop
adc
fs
inc
add
popa
fisttp
add
out
or
push
fild
inc
and
xor
ja
repnz
pop
xor
mov
add
push
add
mov
mov
jns
inc
mov
hlt
mov
shl
cmp
scas
jnp
cmp
(bad)
and
add
mov
std
cmp
shl
add
sub
add
loop
sbb
adc
xchg
test
add
aaa
sbb
mov
ror
dec
push
add
sbb
cld
inc
xchg
fst
rcr
lods
shl
sar
and
jmp
push
or
clc
sbb
inc
jnp
fsubr
pusha
cli
push
cmp
dec
sub
xchg
sub
dec
and
mov
fimul
pop
cmp
int3
pushf
add
(bad)
xchg
xor
jno
jp
lods
scas
ficomp
jmp
xor
mov
mov
add
adc
out
and
or
mov
cmps
into
cmp
add
add
ins
pushf
push
push
adc
lods
aad
in
push
mov
sbb
popf
jl
ja
retf
push
addr16
imul
adc
cld
adc
xor
es
in
lods
sub
xor
movs
inc
lahf
and
cdq
mov
pop
or
add
add
dec
and
jns
add
mov
shl
mov
mov
pop
add
inc
mov
test
ds
mov
(bad)
xor
adc
xor
cmp
inc
add
test
cdq
movs
fld
loop
stos
and
add
add
pop
add
mov
add
add
dec
stos
mov
retf
enter
push
add
pop
loope
lea
cli
fs
add
(bad)
push
push
push
mov
add
inc
adc
rol
sub
aaa
jnp
inc
and
add
scas
cwde
ins
xchg
pop
jmp
iret
xor
sub
out
(bad)
(bad)
push
lock
push
push
pop
add
push
mov
mov
out
pop
rcr
add
outs
test
or
and
mov
mov
pop
fs
and
sbb
mov
mov
xor
loopne
and
dec
outs
mov
lds
fstp
nop
mov
ret
xor
jecxz
bound
ss
and
lea
daa
sbb
aad
mov
rol
and
xor
mov
push
lock
shl
js
cld
fild
ret
mov
shr
clc
inc
xor
add
sub
cli
in
or
push
cmp
and
lea
add
jo
add
add
add
ds
inc
daa
repnz
pusha
ret
pop
fwait
jmp
jns
mov
xchg
ret
in
adc
bound
mov
int3
sub
sub
fwait
or
or
cmp
add
cmps
mov
pop
pushf
into
cmps
xchg
stos
xor
mov
arpl
aad
add
and
mov
shr
daa
je
jmp
add
bswap
pop
out
sbb
and
call
push
and
cli
sbb
(bad)
adc
jmp
mov
mov
out
lock
mov
cld
mov
test
mov
gs
fcmovnb
inc
lds
inc
cmp
pop
dec
mov
push
sti
sub
cwde
aam
jmp
push
jp
aas
outs
jno
add
adc
pushf
ins
push
rol
das
push
push
je
popa
movs
test
dec
mov
cmp
fs
shr
jns
cmc
sbb
and
sbb
dec
xchg
add
adc
(bad)
fidivr
add
sub
aaa
in
add
xchg
xor
test
ss
aas
adc
stc
add
jb
cmp
jae
pop
mov
add
fisub
dec
dec
dec
aad
xchg
xor
test
into
and
in
mov
jbe
inc
add
dec
or
add
adc
ror
jecxz
add
loopne
in
daa
inc
jmp
cmp
daa
and
pop
retf
and
xor
xlat
(bad)
call
or
mov
add
mov
or
inc
inc
jp
je
cmp
clc
add
mov
xchg
ds
cmp
xchg
pop
add
sbb
jo
sub
add
(bad)
fild
mov
gs
inc
test
add
add
fist
lds
inc
repz
(bad)
or
xchg
add
dec
cmp
(bad)
sbb
pop
pusha
or
sbb
data16
add
add
cmp
adc
adc
push
dec
inc
icebp
xchg
mov
adc
std
cwde
adc
loope
add
test
lods
xor
leave
sub
sub
repz
pop
(bad)
sub
div
inc
adc
push
aam
test
addr16
out
ret
cs
sbb
sub
call
sbb
sub
ror
and
push
sbb
ins
xchg
push
jg
es
test
hlt
bnd
pop
mov
out
mov
daa
xchg
add
inc
movs
rol
(bad)
out
mov
adc
pusha
lds
pop
sub
and
pop
and
mov
aam
add
arpl
add
mov
enter
pop
and
add
sub
mov
adc
add
data16
mov
movs
jmp
movs
icebp
sti
mov
xchg
call
add
xor
jge
mov
add
pop
popf
dec
hlt
shl
jg
and
push
in
add
mov
mov
add
jmp
jg
mov
add
fisub
xchg
es
cdq
add
mov
pop
sbb
(bad)
jge
loopne
(bad)
cwde
mov
adc
add
es
cmp
arpl
dec
cmp
jne
mov
daa
iret
aaa
xor
gs
push
inc
add
mov
fs
add
sub
lock
jo
in
and
addr16
add
mov
xor
cwde
mov
xor
xlat
ins
clc
jb
or
cmp
cmp
add
pop
loop
loope
int
cmc
cmp
pushf
or
das
cmc
(bad)
adc
inc
shl
or
les
(bad)
xlat
loop
and
cs
add
add
test
rcl
je
(bad)
les
test
dec
mov
jo
cld
imul
enter
add
adc
sub
div
xlat
inc
add
pop
sbb
mov
push
push
(bad)
call
call
cmp
imul
and
popa
mov
ja
adc
add
or
ror
add
jae
call
mov
or
mov
inc
add
sub
in
cmps
and
(bad)
push
mov
fwait
xchg
jnp
mov
imul
dec
aas
xchg
lods
ds
popa
inc
add
xchg
mov
cmp
mov
adc
stos
out
xor
add
dec
cmp
pop
les
shl
call
not
sub
xchg
xchg
sub
add
inc
dec
idiv
or
fcmovb
pop
aad
out
sar
sub
inc
cld
add
add
outs
pop
cmps
repz
je
popa
ss
int3
pop
and
push
dec
out
mov
xor
add
cmp
mov
clc
(bad)
std
cwde
jecxz
and
call
push
addr16
mov
add
mov
and
add
jp
sub
je
stc
add
push
add
push
imul
xor
rol
pop
sub
xchg
pop
add
sub
jmp
call
add
jnp
pushf
push
gs
neg
movs
fwait
jg
push
cmps
push
test
aas
repz
jo
mov
movs
inc
push
sbb
fild
je
or
outs
inc
sub
fild
lods
and
aad
add
ret
imul
in
mov
push
add
cmp
not
xor
mov
add
inc
sub
jmp
jle
cmp
js
push
cmp
add
test
sub
dec
movs
sahf
add
sbb
cmp
cmp
inc
adc
pop
adc
add
add
and
add
clc
jmp
inc
push
in
add
je
rcl
add
mov
pushf
add
js
adc
add
cmp
push
adc
test
ror
jns
mov
sub
adc
adc
inc
sbb
cmp
mov
mov
jo
push
arpl
mov
add
mov
pop
jmp
fstp
add
inc
mov
push
push
push
xchg
add
movs
clc
xor
imul
add
repnz
sub
xchg
inc
nop
mov
out
stc
inc
loopne
add
int
xchg
pop
pusha
add
(bad)
mov
xchg
add
pusha
ds
imul
call
nop
pop
sub
mov
mov
test
cmp
sar
inc
sbb
add
clc
shl
xor
push
sbb
fdivr
add
dec
mov
push
pop
gs
mov
push
bound
outs
mov
mov
jg
jmp
in
and
xchg
push
mov
push
mov
fld
ret
add
arpl
sti
sbb
add
cmp
mov
xchg
hlt
xlat
mov
adc
or
dec
push
push
imul
aaa
movs
jnp
test
and
add
inc
iret
push
xlat
cmps
pop
in
or
and
mov
sub
push
add
hlt
add
retf
xor
cs
pop
cmc
sar
dec
repz
pop
(bad)
pushf
(bad)
(bad)
test
inc
pmulhuw
push
sbb
or
inc
pop
jnp
and
pop
data16
dec
fdivr
push
jne
pop
fidiv
call
iret
lock
inc
dec
push
imul
je
xchg
adc
pcmpgtw
and
adc
shr
cwde
jae
imul
xor
and
jno
add
fnstcw
imul
pop
or
pop
and
fbld
push
arpl
xchg
adc
or
add
lea
mov
fstp
add
xchg
push
cmps
xchg
mov
mov
pushf
jle
enter
es
or
jbe
mov
das
std
fmul
push
and
loope
leave
sahf
int3
mov
add
add
xor
or
add
out
jnp
das
(bad)
std
mov
push
sahf
mov
ins
jmp
cmp
mov
sub
adc
int
das
cmp
ror
cmp
enter
sub
sub
push
pop
mov
add
mov
xor
pop
jo
ret
and
and
jbe
enter
sti
mov
and
dec
pop
scas
sar
pop
push
fwait
add
rol
ss
sub
add
int
inc
cmp
(bad)
ds
js
cmp
add
fst
pop
fdivr
xchg
lds
loop
lahf
dec
data16
add
test
(bad)
in
(bad)
cld
jbe
jp
jno
jne
xchg
add
add
sbb
sahf
lods
pop
push
ja
jmp
pop
dec
mov
dec
rcr
fcomp
rol
pop
or
add
sbb
push
push
jle
add
inc
pop
add
pop
or
jb
int3
inc
cmps
add
mov
add
add
xchg
add
mov
jae
mov
pusha
adc
hlt
xchg
(bad)
scas
test
rol
inc
stos
add
sub
jo
xor
or
pusha
xchg
pushf
add
stos
out
lea
outs
or
pop
add
mov
mov
xor
sub
mov
imul
fs
pop
xchg
(bad)
call
ret
and
push
and
mov
add
dec
add
dec
xchg
loop
push
dec
cmp
add
aam
fdivr
push
gs
fadd
mov
(bad)
cli
mov
mov
cmp
jmp
dec
push
mov
aas
cmc
movs
hlt
or
and
repz
push
stc
xchg
sbb
jle
add
sub
push
mov
jo
xchg
mov
arpl
mov
cld
mov
mov
cmp
je
adc
mov
push
xor
mov
push
inc
cdq
das
dec
loop
ror
cmp
adc
retf
add
xchg
mov
fld
adc
and
rcr
int3
out
pop
imul
lds
loopne
ficom
into
pop
leave
scas
data16
xchg
jmp
xchg
cmp
call
pusha
pop
cmps
outs
mov
xor
push
enter
sti
idiv
cmp
sub
pop
fwait
hlt
xchg
lods
pop
call
or
add
or
push
add
dec
push
inc
fcmove
vmwrite
dec
sbb
stos
or
lock
sbb
xor
pop
add
mov
aas
lea
mov
ins
js
mov
add
mov
aad
dec
mov
push
dec
sbb
fs
fstp
ss
in
imul
push
scas
inc
movs
sbb
test
inc
add
xchg
popa
movs
int
adc
inc
shl
aaa
xor
call
jmp
ficom
jecxz
pusha
iret
aaa
cmp
jae
clc
icebp
sbb
mov
out
fs
arpl
or
call
sub
hlt
push
dec
ret
iret
or
adc
daa
jg
jmp
cmp
add
add
xchg
test
cbw
js
and
dec
add
out
sub
jo
mov
push
stos
int3
adc
aas
xor
add
adc
xchg
inc
cmp
adc
mov
pop
cmp
scas
dec
or
add
mov
dec
sub
mov
out
mov
jge
push
xchg
jmp
nop
sub
add
(bad)
cld
ds
psubusb
(bad)
dec
push
pop
ja
loopne
ins
push
or
add
ins
sub
fsub
jmp
ins
mov
push
mov
mov
add
push
retf
add
mov
mov
push
add
xchg
add
inc
dec
mov
cmps
adc
and
or
add
sbb
outs
or
pusha
dec
inc
mov
and
or
xchg
and
adc
jno
and
dec
icebp
push
imul
pop
int
add
enter
sbb
shl
test
das
or
push
mov
mov
cmp
add
push
xor
mov
sahf
sub
sti
push
cbw
jno
les
cmp
orps
or
leave
cmp
mov
pop
mov
mov
cdq
pmuludq
jno
add
push
addr16
ins
cmp
ja
sar
cmp
mov
enter
ins
adc
clc
ss
mov
xlat
push
add
mov
rcr
scas
xlat
mov
mov
lock
nop
sbb
shl
jns
push
add
sbb
in
dec
ja
xchg
repnz
loope
add
hlt
or
mov
mov
mov
adc
repz
cli
or
dec
inc
or
cs
or
mov
or
ret
sbb
shl
push
push
jae
lahf
add
lds
gs
adc
jb
adc
xlat
sub
and
out
mov
loopne
push
in
fcom
icebp
hlt
mov
rcl
add
cmps
ret
adc
ins
mov
pop
cmp
add
ror
cmp
inc
test
jmp
movs
lock
add
movs
add
test
cmps
inc
repz
popa
ret
mov
or
jge
hlt
mov
imul
add
rcr
scas
or
cmp
retf
cwde
outs
stos
mov
into
les
pop
xchg
inc
pop
sbb
xchg
push
push
mov
call
retf
(bad)
xor
cmp
(bad)
rol
adc
fs
fst
pop
test
enter
jno
jge
or
add
jmp
push
jbe
add
push
jns
cmp
leave
stos
jae
cld
sbb
mov
cmp
aam
outs
push
adc
loopne
call
inc
pop
add
xchg
lahf
lock
mov
jbe
sub
pop
mov
inc
jmp
retf
inc
pusha
add
add
rep
fadd
fcom
scas
ret
(bad)
mov
add
mov
and
xchg
cmp
xchg
inc
jecxz
xchg
inc
add
sub
mov
int3
(bad)
pop
and
dec
pop
mov
sub
icebp
lds
push
jae
ds
or
sub
add
pop
addr16
jge
cmp
aas
add
dec
test
dec
jecxz
sub
push
shl
add
dec
pushf
pop
in
test
dec
mov
mov
mov
sbb
out
add
mov
mov
jmp
jl
retf
pop
jge
mov
jno
xor
add
mov
add
bound
pop
mov
jno
icebp
mov
push
in
cli
mov
out
popf
mov
shl
icebp
out
jmp
mov
push
jl
adc
add
js
and
push
jmp
jo
cs
aam
jb
imul
xor
dec
dec
lds
sbb
adc
add
in
stos
adc
pop
test
xor
fs
add
nop
add
dec
(bad)
xor
sub
xchg
jmp
add
sbb
mov
add
mov
mov
push
cmps
(bad)
pop
test
call
int
imul
inc
jne
enter
sbb
add
int
dec
sbb
pop
pusha
jae
cmp
add
ret
(bad)
mov
sub
sti
add
daa
sbb
add
jnp
add
add
cmp
mov
sbb
movs
push
js
push
and
fsub
jp
xor
pusha
add
and
push
dec
dec
sub
(bad)
shl
(bad)
and
fidiv
pop
adc
stos
add
dec
in
jle
jmp
imul
scas
stos
inc
aad
add
popa
lds
add
jg
enter
leave
cmp
adc
pop
sbb
leave
sub
imul
xchg
cli
jns
mov
jmp
push
hlt
ror
js
sahf
xchg
pop
popf
mov
gs
fmul
mov
cwde
out
loop
xor
pusha
jnp
inc
dec
cwde
add
ins
je
xlat
push
inc
pop
(bad)
movs
rcr
pusha
test
pusha
adc
or
add
fldz
and
out
dec
mov
scas
aaa
lahf
and
xor
aad
dec
mov
xchg
cld
sti
out
mov
cmp
and
push
mov
dec
xor
aas
inc
lock
stos
mov
popa
dec
in
adc
add
ror
loop
mov
imul
addr16
mov
mov
add
sub
loope
pop
scas
arpl
sub
or
mov
stc
call
js
in
xor
or
fadd
shl
retf
inc
ja
test
cmp
ins
xlat
xchg
in
neg
sub
mov
push
loop
jp
lods
inc
adc
sbb
xor
mov
and
xchg
stos
pop
shr
mov
repz
dec
dec
xchg
inc
push
mov
xchg
jle
scas
fldl2e
push
mov
adc
int
xchg
movs
sti
movs
xchg
fild
mov
sbb
pmullw
add
rcl
dec
enter
into
add
xchg
xchg
mov
push
dec
mov
lds
add
and
jg
aam
xor
pop
inc
mov
add
rcl
sti
xchg
lea
xor
retf
test
cmps
ret
cmp
mov
in
add
xchg
fstp
dec
xchg
cdq
repnz
jg
pop
cmps
sub
je
add
dec
data16
sub
clc
cdq
mov
popa
repnz
adc
add
xor
scas
sbb
cdq
inc
mov
fs
rol
cmp
retf
fimul
dec
ss
inc
and
test
cs
and
inc
jb
leave
mov
jecxz
rcl
in
repz
adc
jns
(bad)
in
test
or
add
xor
mov
xor
dec
add
fstp
add
add
shl
mov
add
xor
push
int3
mov
push
pop
or
add
add
add
test
add
pop
and
out
xor
test
pop
cmp
getsec
(bad)
jmp
dec
retf
adc
cmp
lock
xor
dec
cmps
fs
stos
loope
out
lock
call
mov
push
je
mov
imul
add
cmp
nop
jnp
test
inc
push
dec
repz
add
wrmsr
(bad)
pop
xchg
clc
dec
xchg
xchg
add
mov
aad
and
imul
cmp
movs
aad
inc
sbb
out
mov
mov
xor
sub
mov
xor
push
add
lock
jecxz
dec
push
or
xor
out
add
cmp
cmc
shr
scas
add
ja
xlat
push
test
add
loop
add
sbb
mov
jmp
(bad)
rol
outs
scas
pop
(bad)
and
popa
jle
fcom
fidiv
add
jae
daa
mov
or
in
movs
(bad)
aad
push
sub
dec
xor
(bad)
mov
pop
aas
mov
aas
test
into
cli
push
add
sbb
imul
test
pop
add
dec
add
cmp
add
icebp
sbb
in
(bad)
mov
sub
pusha
jge
lds
adc
stc
das
cmp
add
adc
pop
pop
mov
add
iret
add
mov
fbstp
or
out
cdq
aas
enter
pusha
push
jl
js
ds
mov
or
mov
test
sub
xor
push
sbb
cwde
aam
sar
sub
xchg
cmps
sub
sub
rcl
addr16
loopne
lock
jmp
ret
test
out
lock
out
cmc
shl
add
aam
pop
enter
repz
fs
out
sbb
pop
sub
pushf
push
call
add
out
xchg
stc
loopne
cmp
xchg
stc
les
push
add
or
cmp
sub
mov
pop
jmp
inc
in
pop
dec
sbb
push
ins
jne
jbe
sbb
xchg
in
inc
cdq
or
test
sbb
push
inc
xor
sub
sub
gs
xor
pop
loopne
bound
adc
mov
xchg
ror
inc
add
fisttp
sti
jae
add
lsl
jns
push
arpl
ret
mov
loopne
pop
sbb
mov
rcr
lea
mov
out
inc
(bad)
call
repz
es
and
inc
add
in
inc
lahf
les
add
cmc
sahf
mov
add
loope
jecxz
pop
in
loopne
lods
mov
jo
sub
daa
mov
cmp
lahf
mov
adc
pop
nop
ror
adc
and
imul
call
mov
xchg
ror
dec
clc
xchg
clc
or
pop
or
dec
add
add
lods
nop
int
test
lds
pop
xor
leave
clc
pop
pop
add
shr
mov
sub
pop
dec
fcom
pusha
mov
aad
dec
add
sub
repnz
jns
jge
mov
shl
pop
jnp
cmp
add
lods
pusha
ss
xlat
test
mov
daa
mov
inc
push
add
add
cmps
clc
add
pop
mov
jbe
mov
lods
or
push
in
shr
je
add
xchg
xchg
sub
add
adc
and
(bad)
out
mov
xor
xor
jl
pop
and
inc
sar
and
loope
or
pmulhw
push
jnp
stc
mov
(bad)
dec
je
pop
dec
push
gs
add
scas
cs
or
sahf
adc
push
je
add
add
add
(bad)
mov
fwait
add
push
dec
pop
adc
fadd
out
mov
or
cwde
cld
stc
retf
fwait
cmp
add
push
adc
ja
sar
nop
fidivr
pop
and
mov
inc
cdq
cmp
add
setnp
adc
adc
mov
pushf
outs
pusha
dec
loope
mov
inc
lea
add
pop
add
test
(bad)
mov
sar
fild
xchg
ja
mov
xor
(bad)
push
add
cwde
push
adc
push
loope
sub
test
push
sti
push
mov
fcomp
data16
sub
scas
int
sti
loopne
test
xor
adc
xor
mov
add
mov
fnstcw
inc
aam
jl
lods
add
adc
lods
loop
cmp
retf
leave
sbb
dec
mov
cmp
inc
popa
(bad)
jb
clc
jno
mov
(bad)
fmul
mov
add
add
pop
add
stc
xor
jmp
push
pop
dec
cmps
add
xor
movs
lods
cmp
mov
aaa
dec
movs
or
cmps
inc
xchg
add
imul
psubsb
rcl
das
cmp
pop
xor
js
add
cmp
xor
(bad)
(bad)
jle
(bad)
jo
sbb
and
and
jp
sbb
hlt
adc
fadd
mov
add
add
jo
jmp
shl
ins
add
xchg
adc
fiadd
repz
jne
cmp
scas
jg
jbe
jnp
sbb
cld
lods
add
(bad)
aas
dec
pop
add
les
ss
add
sub
mov
push
addr16
push
mov
pop
pop
pop
psubb
(bad)
dec
add
cmp
fmul
add
cwde
jp
add
std
or
fsubr
cmp
cmp
fwait
sahf
or
mov
enter
repz
(bad)
mov
xor
lsl
test
aam
xchg
adc
mov
es
mov
les
(bad)
add
push
fstp
out
add
les
jge
mov
into
mov
mov
ror
xchg
test
dec
mov
mov
add
sbb
mov
adc
sysenter
mov
mov
hlt
add
dec
pop
mov
or
jle
sbb
push
jecxz
xor
add
add
lahf
push
jne
sbb
jno
in
and
xor
(bad)
rcl
inc
pop
xchg
inc
adc
lea
xchg
call
iret
loop
cmp
push
in
movs
repz
jl
jg
(bad)
mov
stos
push
and
mov
pop
dec
call
nop
lds
add
cs
bound
inc
add
add
(bad)
add
add
pop
add
xchg
psrlq
inc
test
imul
lds
or
add
sbb
imul
xor
verr
inc
retf
loop
inc
in
cmp
inc
js
in
mov
lods
dec
mov
mov
int3
adc
and
cwde
xchg
stos
es
push
test
add
ja
dec
push
push
jae
cmp
xchg
dec
lahf
call
ss
jmp
std
out
push
mov
pop
nop
ror
xchg
add
retf
cmp
xlat
sbb
add
push
test
mov
jge
and
cld
shr
or
dec
mov
add
and
adc
fs
jnp
or
inc
add
jo
or
lock
test
sahf
loop
fisttp
repz
add
rcl
xor
mov
add
xor
jecxz
bound
out
sbb
out
into
mov
daa
or
(bad)
scas
test
ret
inc
mov
enter
cmp
sahf
dec
pop
add
(bad)
hlt
repnz
or
dec
add
out
inc
js
test
aas
inc
sub
xor
inc
add
push
jp
pop
std
in
add
lahf
js
xchg
and
mov
sar
xor
add
add
ror
jbe
enter
out
lea
push
push
hlt
je
test
pop
jge
push
push
test
ret
add
fldenv
cmp
jg
cmps
push
pusha
mov
dec
jmp
into
imul
dec
call
inc
hlt
add
add
mov
loopne
loopne
inc
imul
mov
adc
movs
mov
jnp
add
mov
js
cld
mov
pusha
jnp
mov
jmp
adc
sub
push
push
(bad)
icebp
add
shr
add
add
xor
sbb
push
cmp
out
jns
jg
shrd
mov
(bad)
(bad)
lock
fwait
or
rcl
jne
fst
das
xchg
cmp
mov
jbe
add
add
es
xor
and
and
fistp
push
shr
ins
jno
mov
imul
cmp
and
inc
adc
popa
pop
add
or
add
stos
(bad)
sbb
es
mov
xchg
push
inc
add
add
stos
adc
sbb
fidivr
lahf
dec
sub
loopne
push
push
mul
mov
lock
add
enter
retf
imul
mov
ja
add
mov
inc
out
xchg
inc
add
into
repz
push
shr
call
rol
fnstenv
pop
out
mov
add
add
adc
xchg
xchg
mov
ret
fcmovnbe
sbb
mov
add
call
popa
inc
ja
lahf
add
outs
cmp
dec
and
call
inc
nop
popa
sbb
popf
mov
pop
pusha
jnp
ret
imul
jmp
ss
sub
inc
mov
pop
mov
inc
push
add
sar
pop
imul
fmul
add
mov
pop
repz
(bad)
test
xchg
nop
ret
xor
dec
out
sub
pop
enter
push
mov
mov
add
add
repnz
cmp
mov
cmp
fimul
int
mov
push
shl
test
js
dec
jne
pop
ds
adc
mov
xor
add
push
dec
int
add
rcl
sbb
fstp
lahf
add
shl
or
inc
add
add
fisubr
jl
dec
test
cmp
push
ret
add
sbb
sbb
mov
sub
adc
test
fisub
loop
imul
in
imul
push
add
movs
push
shl
and
cli
add
mov
fistp
mov
inc
pop
sbb
add
or
scas
push
lahf
add
mov
loope
dec
int3
fmul
ins
call
out
and
cld
ret
out
mov
pandn
push
sbb
inc
jmp
inc
leave
add
(bad)
push
dec
ret
pop
fiadd
xchg
clc
adc
xchg
add
cmp
call
push
sbb
sub
xor
mov
idiv
jo
and
add
jne
add
jmp
push
call
jo
cmp
add
mov
cmp
aas
xor
pop
push
jbe
in
xchg
or
fxch
outs
mov
repz
movhps
add
jne
bound
sbb
iret
jb
push
jns
lea
setge
fdiv
add
aaa
dec
dec
mov
in
pop
movs
aaa
leave
jbe
dec
gs
mov
sub
repz
test
mov
or
add
ret
jg
jbe
add
call
leave
pop
dec
push
push
mov
mov
shr
jb
cmp
xchg
lds
cmp
(bad)
in
jne
inc
scas
or
mov
cmp
and
rcr
add
rcr
sub
add
add
psubsb
jmp
pop
sub
jmp
add
mov
xchg
outs
push
add
nop
add
scas
jmp
add
add
jb
jmp
cmp
push
jle
cmp
rcl
popa
add
fiadd
cmp
xchg
fstp
or
or
add
push
sbb
ss
clc
rcr
ret
pop
pop
cmc
inc
test
ins
lsl
cmps
sub
pop
adc
lds
leave
rcl
push
mov
sbb
and
pop
and
dec
dec
outs
sahf
mov
xor
and
and
pop
inc
sub
or
inc
and
(bad)
mov
add
fs
xor
mov
jb
inc
pusha
push
pop
mov
jae
push
push
xchg
pop
cdq
mov
cmp
push
lock
sti
mov
shr
clc
mov
xchg
cwde
movs
push
int
xchg
call
sub
fstp
call
cmp
sbb
iret
pop
xchg
pop
mov
mov
cdq
lahf
inc
jmp
aaa
js
push
test
js
push
repnz
and
cwde
add
jg
outs
sub
aas
cmp
mov
out
rol
outs
xchg
iret
out
retf
lahf
pop
arpl
lock
retf
xchg
mov
jae
ja
push
es
mov
pushf
sbb
adc
js
push
ret
pop
add
hlt
hlt
add
addr16
xor
add
cdq
sub
cmp
mov
mov
jmp
sub
cmp
and
ret
mov
and
push
add
das
mov
cmp
clc
inc
out
cli
pop
pop
adc
cmps
or
add
icebp
pop
xor
dec
rcr
rep
jg
cmps
imul
sbb
or
fild
pop
nop
cmps
cmp
add
or
enter
int3
hlt
sub
jmp
pop
in
sub
adc
pop
jl
hlt
inc
push
mov
leave
add
or
mov
cmc
ss
ror
adc
push
movs
test
pop
jmp
pusha
cmps
adc
jno
fcom
or
aaa
add
and
sbb
mov
in
mov
and
outs
rcr
cmps
cmp
movmskps
xchg
(bad)
push
data16
push
add
mov
clc
dec
or
lds
stos
(bad)
cmp
enter
cmp
adc
xchg
cmp
dec
adc
ret
add
mov
mov
loopne
out
(bad)
pop
sub
popf
jmp
xchg
shl
jns
mov
repz
loopne
sbb
unpckhps
dec
xchg
rol
or
leave
movs
xor
es
in
nop
loope
mov
pop
ds
xchg
pop
add
fiadd
dec
outs
jo
loope
lods
jo
add
test
outs
add
mov
pusha
xor
shr
cmc
cmp
popf
fcomp
dec
mov
dec
mov
xor
mov
push
icebp
adc
mov
fidiv
lea
push
dec
pushf
add
xor
bnd
lods
and
jl
dec
ja
dec
sbb
ret
popa
jge
imul
dec
mov
les
push
popa
push
cmp
adc
add
sbb
jae
mov
fmul
pop
ret
fbld
inc
or
in
outs
loop
cmc
je
add
rol
out
inc
leave
cmp
sahf
movs
arpl
jle
jns
iret
jb
push
cmp
out
xor
xor
clc
push
add
cld
sub
add
out
fisttp
pop
mov
cmp
jo
mov
aam
mov
jecxz
push
cmc
enter
mov
xchg
jmp
test
pop
jmp
xchg
sub
add
lods
mov
add
in
(bad)
loopne
pusha
loop
je
cdq
enter
rcr
rol
add
rcl
or
jo
ret
pushf
cli
push
add
pop
dec
adc
(bad)
ins
mov
xchg
hlt
add
pusha
add
jle
(bad)
adc
inc
int
push
xchg
xor
je
mov
mov
dec
xchg
mov
in
add
add
inc
inc
loope
mov
das
xchg
xor
ss
mov
lods
lods
xor
or
and
xor
clc
or
pusha
pusha
(bad)
pop
push
call
adc
pop
xchg
imul
dec
add
(bad)
xor
or
jg
aaa
sbb
mov
add
add
loope
xchg
sub
ror
test
in
gs
or
xchg
out
test
retf
js
outs
adc
xor
not
out
sub
aam
jns
xchg
pop
mov
and
pusha
add
adc
pop
jns
cdq
add
xchg
cmp
cmp
add
nop
fadd
xor
inc
dec
sahf
push
mov
call
test
scas
jno
cld
fwait
sbb
cli
mov
mov
(bad)
mov
cmps
push
xchg
jmp
not
add
jo
rol
inc
rol
push
jg
ins
adc
jne
aas
inc
retf
cs
mov
sub
dec
jae
fimul
retf
call
mov
add
out
xchg
bound
inc
push
pop
in
sbb
dec
popa
mov
inc
inc
or
mov
mov
(bad)
test
mov
sbb
repnz
sub
mov
mov
mov
sbb
pop
mov
pop
sub
mov
dec
pop
popa
pop
mov
xor
cdq
ror
ins
test
and
inc
add
push
add
push
push
cmp
add
mov
jns
adc
and
push
repnz
jmp
clc
add
jno
rol
addr16
jl
add
push
pop
mov
mov
sub
mov
aaa
or
push
adc
nop
sbb
add
adc
push
rol
sbb
xchg
rcl
mov
xchg
and
mov
mov
push
jb
scas
add
popf
repnz
add
mov
fsubr
add
inc
cld
lds
pop
arpl
push
push
enter
enter
add
and
or
or
mov
stos
jge
ret
mov
outs
shl
jo
lahf
pavgw
pop
xor
cmps
call
mov
jbe
add
jge
pminsw
sub
add
nop
lods
mov
xor
into
sbb
xor
dec
cmp
clc
add
xor
in
pop
or
pop
add
test
push
xchg
add
xchg
sub
sbb
push
cwde
pop
xchg
das
outs
sub
and
jle
in
jae
leave
mov
adc
hlt
push
mov
das
cli
add
hlt
mov
pop
pop
xlat
pusha
pop
cmc
sub
inc
push
fcom
pop
cwde
in
add
imul
lods
rcl
xchg
add
mov
add
xchg
adc
push
fcomp
gs
push
mov
lds
xchg
push
jo
add
out
pop
pushf
arpl
out
das
inc
sub
cmp
xchg
enter
cmp
iret
xor
jne
mov
xchg
xor
cwde
add
shl
add
jo
push
push
js
sahf
lds
sub
shl
movs
jae
push
cmp
pop
push
nop
xchg
outs
pop
cmp
sbb
outs
dec
(bad)
pop
(bad)
xor
in
cs
add
add
xchg
xchg
jmp
add
movs
xchg
fwait
mov
nop
add
push
loopne
xor
or
and
pushf
cdq
sbb
rep
jmp
push
pusha
stos
shr
test
add
ret
push
add
and
add
inc
fdiv
add
push
cmp
aad
and
push
fmul
lea
fwait
cmp
sub
addr16
test
inc
fcmovbe
add
push
dec
mov
mov
dec
jmp
fsubr
add
imul
ror
add
pop
jns
push
xor
xor
add
mov
add
mov
mov
fimul
mov
mov
shl
fild
xor
or
popa
sbb
div
scas
sub
(bad)
clc
fistp
cli
cmovge
or
out
sbb
push
(bad)
jg
inc
jmp
mov
mov
add
mov
pop
xchg
pop
sbb
or
add
dec
add
jo
das
xchg
retf
cdq
pop
push
pusha
movs
(bad)
inc
inc
hlt
add
ss
iret
mov
add
push
ins
pop
push
out
fbld
mov
mov
mov
dec
dec
mov
cmp
or
inc
or
xchg
punpckhbw
or
add
add
pop
call
dec
push
jg
add
int3
pop
aam
mov
call
retf
in
stc
lods
add
loopne
hlt
popa
data16
sbb
(bad)
retf
fldenv
inc
add
xor
add
push
sbb
or
inc
jp
dec
mov
dec
sbb
cwde
and
push
mov
pop
sar
std
mov
push
jmp
jmp
fwait
cmp
cmps
xchg
add
imul
and
jg
add
or
jg
inc
xchg
mov
ror
push
adc
jne
ds
loop
dec
sub
out
sti
jmp
shl
push
sti
add
and
jno
and
fs
ins
shr
mov
push
dec
(bad)
mov
mov
push
add
lea
push
dec
test
jl
(bad)
call
call
cmc
xor
inc
(bad)
mov
mov
ret
xchg
out
rol
fs
cld
ins
mov
imul
mov
jb
push
push
sub
fucom
pop
dec
mov
add
or
add
cmp
xchg
rol
pop
sbb
add
outs
dec
push
add
push
imul
push
ret
test
(bad)
cld
and
add
add
ret
add
div
int3
adc
push
cmp
or
outs
sub
pop
iret
mov
cli
mov
mov
add
pop
sar
and
jb
outs
inc
sbb
mov
enter
pop
push
jbe
add
in
add
cmc
dec
movs
in
shr
mov
push
mov
outs
xor
loopne
clc
cli
adc
and
xchg
and
jno
(bad)
pop
(bad)
loopne
sti
sub
xchg
into
add
clc
cwde
test
test
jmp
xor
popf
add
add
fisubr
mov
loopne
fiadd
bound
and
jl
or
inc
inc
fldenv
repz
pop
mov
test
pusha
and
add
mov
push
je
cld
add
pop
dec
push
xchg
pop
cmp
outs
xor
lock
fs
repz
pop
add
mov
dec
test
add
mov
jnp
dec
pop
cld
jns
lods
stos
cdq
call
pop
outs
shr
jae
sbb
add
and
push
dec
out
mov
xor
ins
in
cmp
jne
add
dec
or
dec
ja
cmp
adc
push
sbb
test
loop
mov
pop
push
clc
add
jl
fadd
mov
add
pextrw
add
pop
xchg
(bad)
mov
adc
nop
push
arpl
or
cmp
fild
sub
add
push
pop
aaa
popf
mov
inc
in
ret
lock
xchg
cmps
adc
mov
popf
sar
gs
addr16
repnz
push
outs
inc
test
iret
add
(bad)
(bad)
imul
pop
clc
rcr
mov
stc
or
mov
sub
add
sar
out
pop
(bad)
jbe
mov
pop
jmp
mov
inc
inc
add
add
add
fwait
in
dec
xchg
shl
shl
jp
mov
retf
and
pop
push
inc
xchg
xchg
std
aam
add
add
and
push
mov
rcl
mul
add
mov
rol
and
and
ror
mov
pop
cwde
aam
add
adc
sbb
ds
mov
ds
add
iret
add
(bad)
stos
add
addr16
leave
push
enter
retf
dec
add
rdtsc
push
ret
(bad)
mov
xchg
add
dec
xchg
xor
cmp
inc
shr
sahf
(bad)
retf
push
hlt
in
das
sub
test
cmp
xchg
mov
pop
push
add
movs
fsubp
push
fisttp
retf
pop
jae
loope
clc
jbe
xchg
push
sbb
pop
(bad)
call
jecxz
sahf
mov
stos
add
jmp
js
jge
loopne
jne
ins
iret
mov
add
xor
test
(bad)
gs
mov
ss
cld
mov
jb
into
clc
mov
mov
cli
xor
out
mov
adc
repz
call
mov
fisub
ret
and
(bad)
int3
adc
pusha
push
test
adc
cld
and
pop
mov
fnstcw
inc
mov
add
mov
dec
adc
pop
xbegin
push
jp
inc
jle
sbb
xor
push
inc
mov
mov
push
cmp
cmc
pop
daa
vpsubd
jg
stos
sbb
clc
shr
rol
add
dec
mov
sbb
aas
add
adc
mov
add
out
add
dec
popf
mov
pop
xor
inc
nop
sbb
inc
cmp
int3
sbb
out
cmps
cmps
xchg
lea
clc
sub
loope
and
loop
xchg
add
cli
outs
popa
add
mov
push
and
xor
add
sub
xchg
dec
push
mov
add
clts
inc
psubusw
lsl
cwde
repnz
nop
xor
sahf
out
push
add
push
repnz
dec
ret
lods
jo
aaa
hlt
(bad)
int
outs
xor
adc
repz
sbb
add
push
adc
loop
pop
fisttp
(bad)
add
xchg
sahf
mov
loope
inc
add
jecxz
add
repz
retf
jmp
in
add
iret
and
and
sbb
adc
nop
or
out
push
ins
lea
cmp
cmp
add
addr16
loope
xlat
int3
add
sbb
fld
push
pop
popa
xor
add
cli
cmc
add
ss
add
mov
out
fst
push
xor
sar
push
adc
pop
(bad)
mov
cmp
add
adc
push
cmp
hlt
fdivr
add
aas
jae
cmp
or
jmp
pushf
cmps
aas
mov
add
pop
mov
call
inc
and
and
xor
mov
stos
aas
ins
sbb
add
push
add
sbb
add
ret
and
mov
adc
loopne
hlt
push
sldt
or
mov
pop
movs
sbb
dec
add
xchg
shl
dec
inc
scas
or
test
push
shl
push
rcl
mov
enter
ror
inc
pop
cmp
xchg
sub
push
enter
xor
sub
enter
xchg
add
fst
ja
lock
jae
or
fnsave
aaa
add
lods
adc
mov
(bad)
scas
cmp
sub
jb
sbb
fcomp
test
xchg
xchg
mov
ret
(bad)
jno
jmp
adc
add
shl
add
push
retf
push
movs
cld
jno
inc
or
mov
sbb
push
push
mov
jno
cmp
cmp
btc
mov
mov
ret
stos
shr
out
ss
or
add
retf
or
pop
push
add
xor
int3
imul
push
mov
cmc
rol
push
inc
xchg
adc
adc
push
add
aad
fwait
add
sub
push
pop
mov
lea
stos
push
pop
lea
stos
push
pop
lea
stos
leave
ret
int3
aad
push
jmp
jg
pop
leave
jbe
fwait
test
out
pop
or
xchg
inc
lahf
imul
(bad)
loope
mov
scas
mov
xchg
mov
bound
out
xchg
lahf
and
outs
mov
pop
gs
loopne
rcl
(bad)
xchg
xor
mov
leave
pop
adc
and
mov
ret
cs
enter
sub
outs
and
mov
xchg
in
jmp
daa
fs
mov
fisttp
aad
xlat
fdivr
sub
retf
xchg
adc
test
pusha
popa
cmp
ds
and
sub
cmp
lahf
and
push
xlat
mov
sbb
outs
enter
pop
dec
aas
xor
enter
mov
fstp
and
cli
sub
jl
sahf
test
fidiv
mov
rcl
inc
push
xor
ret
jge
add
std
lock
fst
jbe
fisttp
mov
xor
jae
jmp
or
mov
sub
cdq
sbb
cs
xor
mov
sbb
adc
(bad)
call
mov
lock
mov
call
bound
ret
les
jle
test
stos
retf
fcomi
rol
push
popf
sub
out
mov
fsubr
cdq
adc
into
jmp
mov
das
push
mov
add
and
sbb
lods
and
loop
jmp
cmp
lea
adc
cmp
imul
xchg
aaa
jnp
dec
adc
push
mov
out
mov
sbb
dec
push
mov
and
jecxz
sub
dec
jne
sbb
sbb
push
jmp
idiv
jg
push
inc
cmps
ret
pop
mov
sbb
and
push
pop
dec
(bad)
.byte
.byte
(bad)
.byte
.byte
