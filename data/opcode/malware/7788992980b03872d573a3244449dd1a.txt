icebp
rcl
jo
cmp
jmp
and
popf
xchg
sahf
orps
dec
and
pop
jns
xchg
das
xor
xor
ins
jge
outs
fsubr
mov
std
mov
cld
jbe
mov
xor
push
sub
gs
ret
int3
repnz
jmp
ret
and
mov
pop
push
rol
addr16
jb
cmp
pop
fdiv
leave
fnsave
lods
gs
(bad)
pop
mov
les
adc
adc
or
mov
xchg
pusha
pop
sub
fiadd
xor
jnp
pop
in
iret
sub
loope
mov
in
xchg
and
push
xchg
aas
pop
mov
mov
gs
adc
or
dec
sahf
sti
fdivr
sysenter
loope
xchg
ins
jnp
ins
xchg
(bad)
lods
sbb
pop
pushf
mov
jg
sub
out
shl
mov
call
into
fidivr
ret
imul
jp
je
cmc
cwde
mov
repz
and
sahf
nop
fadd
retf
sub
inc
addr16
je
pop
ins
or
mov
popa
leave
mov
ja
pop
push
scas
out
cmp
addr16
(bad)
xor
(bad)
call
push
xchg
bound
es
loope
and
and
jo
xchg
adc
pop
ins
imul
outs
test
mov
popa
imul
add
cmp
and
ds
xchg
inc
aas
cli
push
sti
jbe
pop
jno
ret
lods
ret
cmp
push
lods
lds
enter
rcr
sbb
cmps
(bad)
iret
lods
gs
sub
fisubr
test
sbb
ds
inc
pushf
stos
mov
lea
retf
sub
cmp
mov
push
mov
ins
inc
pop
cmps
xor
cmp
mov
add
(bad)
ds
out
xchg
ficomp
les
jne
imul
in
pusha
mov
loopne
push
sbb
pop
aam
iret
shl
add
xor
sbb
out
xor
cmp
sahf
call
mov
loop
mov
fnstsw
cmp
faddp
adc
adc
jbe
bound
in
pop
imul
ffreep
outs
push
and
lods
inc
cwde
and
sub
jne
sbb
and
ja
out
sub
int3
dec
dec
jecxz
jmp
test
ins
and
fwait
jmp
pop
int
or
sub
fiadd
mov
mov
or
pop
stos
inc
arpl
lahf
or
sub
in
stos
push
jge
and
mov
pmulhw
movs
pop
adc
sbb
lock
lea
cmc
cmp
mov
adc
inc
add
retf
add
(bad)
pop
jle
add
rcl
fimul
int
mov
movs
and
(bad)
leave
imul
and
push
and
mov
sbb
into
pop
inc
dec
shl
scas
je
cmps
mov
mov
add
mul
arpl
jge
xchg
xor
cmp
pop
(bad)
gs
jmp
pop
sub
jmp
test
push
rcl
stos
loopne
pop
push
inc
cmp
lods
das
dec
rep
mov
push
rol
xor
mov
push
enter
or
add
add
adc
sub
adc
mov
mov
adc
sbb
push
jmp
into
xchg
fcom
sub
push
sub
inc
push
adc
pop
in
sbb
into
add
gs
aad
cmp
pop
mov
mov
(bad)
jp
mov
cmp
add
lds
hlt
lods
test
addr16
mov
dec
sub
push
jp
into
xor
inc
xlat
inc
imul
mov
in
test
mov
(bad)
movs
adc
ret
dec
xor
sub
in
adc
mov
addr16
mov
pop
mov
xchg
dec
popf
jge
ja
fs
bound
mov
push
data16
and
lds
push
inc
mov
cdq
push
mov
sti
test
(bad)
or
loop
xchg
xchg
push
adc
mov
fwait
scas
leave
push
mov
aad
pop
out
mov
popa
or
cmp
cwde
push
jp
loopne
push
add
mov
mov
gs
sub
into
stc
mov
jae
fs
fadd
cld
sbb
mov
dec
mov
pop
jne
and
dec
hlt
(bad)
pop
(bad)
xchg
lods
dec
out
pushf
jecxz
pop
inc
pop
shr
pop
retf
add
popf
sbb
rol
push
repnz
(bad)
in
pop
mov
add
xchg
sti
not
fdivr
add
dec
cmps
icebp
clc
nop
mov
shl
xor
scas
call
xchg
(bad)
pop
outs
(bad)
cli
test
adc
or
retf
mov
cmp
mov
fs
mov
sbb
xor
dec
retf
dec
jge
bt
in
xchg
and
adc
add
ins
ficom
mov
(bad)
jecxz
mov
adc
gs
and
jne
test
xchg
and
(bad)
test
dec
xor
and
add
cwde
jb
mov
call
inc
(bad)
out
stc
shl
enter
push
jg
sub
icebp
fisttp
loope
pop
xchg
add
icebp
cmp
ret
cmc
add
push
pop
leave
adc
movs
leave
sbb
mov
inc
add
sub
push
(bad)
je
or
enter
xor
cmp
or
lods
ins
add
shl
xlat
mov
mov
dec
sub
loopne
sahf
mov
sbb
inc
sti
mov
adc
pop
mov
sub
dec
add
repz
mov
sbb
repz
mov
test
push
mov
mov
fdivr
shl
dec
add
repz
sbb
loope
in
fimul
mov
stos
loope
dec
pop
xchg
sub
fucomi
mov
das
xor
lods
adc
fnstenv
lods
or
inc
int3
call
retf
rcl
in
inc
loop
or
arpl
(bad)
mov
dec
test
dec
ds
mov
(bad)
movs
mov
stos
push
and
out
sbb
xchg
push
dec
arpl
cmps
and
fwait
inc
out
sub
outs
jb
jae
mov
mov
dec
inc
or
(bad)
loope
ror
fisub
jb
in
jmp
(bad)
xchg
loop
xchg
jno
add
loop
iret
sub
sbb
push
dec
fmul
and
and
retf
add
dec
daa
mov
pop
sbb
cmp
cmp
mov
shl
add
cmp
sub
mov
sub
rcr
retf
lahf
jge
imul
mov
scas
mov
dec
jns
jp
jns
retf
push
pop
and
cmps
cmc
inc
popf
ins
iret
pop
jmp
cld
stc
pop
inc
inc
out
jnp
mov
xchg
loope
mov
popa
dec
sub
pop
mov
adc
xor
jns
pop
adc
pop
jbe
jle
mov
inc
sub
mov
jne
cmp
sub
lock
inc
add
movs
div
test
dec
test
push
stos
into
push
dec
mov
shl
inc
out
cmp
cmc
dec
addr16
cdq
scas
or
fadd
arpl
jmp
imul
push
mov
dec
imul
add
dec
in
push
xor
xchg
mov
sbb
mov
and
es
sti
and
cmps
pusha
sub
xchg
dec
xchg
cmp
pop
and
or
inc
mov
fild
push
jne
xor
mov
pop
push
push
(bad)
jecxz
push
dec
das
enter
add
dec
fild
imul
and
cmp
out
repnz
inc
push
lahf
cmp
in
add
or
retf
loopne
mov
push
push
xor
cld
xchg
test
rcr
mov
mov
ret
leave
lods
in
dec
pop
xlat
(bad)
sub
sub
inc
stos
fiadd
add
jge
pop
or
sbb
aad
fistp
xchg
clc
cmps
por
(bad)
pop
hlt
mov
icebp
mov
and
xchg
dec
mov
jmp
sub
(bad)
ror
jle
outs
inc
pop
cmp
mov
add
and
push
pop
push
sub
dec
cmp
or
lock
push
mov
sbb
repnz
jg
cmp
adc
stc
lea
bound
xor
das
fs
and
pop
dec
retf
aaa
in
push
(bad)
xchg
xchg
add
pop
(bad)
lods
popf
test
(bad)
pop
sbb
xchg
mov
int
je
(bad)
(bad)
sar
repz
fs
or
xchg
sahf
retf
add
lods
fcomip
pop
and
fistp
and
outs
je
mov
mov
dec
jge
scas
xor
jmp
fidivr
sub
cmp
nop
lea
repz
jns
out
rol
and
add
out
sbb
cmp
call
fwait
inc
scas
xor
push
lods
fidivr
add
sbb
test
cwde
sub
data16
cld
das
jecxz
mov
scas
xchg
das
push
dec
pop
jbe
mov
in
mov
in
mov
out
or
mov
jg
sti
data16
inc
xor
addr16
in
inc
enter
test
stc
nop
sub
leave
(bad)
out
jno
out
call
dec
out
xchg
inc
enter
mov
jge
jb
pop
inc
push
pop
mov
adc
sub
push
invlpg
inc
sbb
daa
adc
jl
sub
dec
mov
mov
and
and
retf
das
stos
cmp
ret
cdq
xchg
dec
out
pxor
aaa
pop
sub
outs
imul
out
jmp
rcr
outs
jno
out
popa
mov
aas
pop
imul
dec
jl
mov
outs
mov
mov
pop
push
scas
js
add
movs
repz
fidivr
jg
pop
std
mov
hlt
or
aaa
xlat
dec
rcr
daa
in
or
push
sbb
and
adc
imul
fninit
(bad)
iret
sub
pop
rcl
sub
out
xchg
jns
cmp
int
ja
inc
dec
bound
stos
dec
pop
imul
dec
and
xchg
sahf
pop
ss
mov
test
cmc
les
retf
xor
daa
stc
cmp
dec
nop
fdiv
push
mov
mov
(bad)
mov
(bad)
cmp
call
pop
out
push
or
ins
test
rcl
mov
dec
js
xchg
idiv
adc
mov
push
inc
jae
mov
out
add
cmp
(bad)
fdiv
inc
cmp
xchg
mov
es
clc
(bad)
cmp
dec
xor
inc
out
mov
in
(bad)
cdq
and
(bad)
pop
iret
sbb
xchg
sub
fisttp
int3
aaa
loope
add
imul
iret
and
mov
aaa
adc
lods
dec
jns
int3
arpl
lahf
push
push
adc
je
(bad)
cdq
dec
xor
or
jmp
mov
inc
imul
inc
xchg
gs
mov
fisttp
push
or
adc
lods
or
sbb
loop
push
jns
pop
jecxz
xchg
fwait
add
jns
lods
ret
stos
sub
pop
mov
sbb
test
outs
jbe
loop
push
cmp
out
jnp
jmp
jb
idiv
sub
pop
jne
int3
mov
adc
sub
mov
mov
(bad)
xchg
or
neg
cli
jae
pop
add
mov
push
dec
aad
inc
lods
cmp
sbb
and
bound
sub
mov
lock
or
mov
xchg
mov
pushf
(bad)
mov
(bad)
mov
ror
int3
dec
call
call
pop
popa
mov
and
pushf
sub
or
mov
imul
dec
ds
es
push
fucomip
mov
xchg
sub
ins
sub
jg
cmps
sub
adc
add
cmp
ins
xchg
jp
dec
pushw
push
push
mov
aaa
dec
sbb
adc
mov
or
and
imul
movs
sbb
or
pushf
cli
pop
jmp
movs
(bad)
fisttp
xchg
mov
and
addr16
cli
shl
push
xchg
inc
repnz
sti
adc
lock
xchg
aad
loope
cmps
cmp
pop
add
xchg
lahf
mov
push
hlt
add
stos
xchg
fsub
push
mov
popf
add
enter
add
adc
mov
mov
jge
daa
pop
lahf
inc
jb
test
dec
fwait
or
fild
retf
fst
nop
out
push
dec
pop
jl
push
(bad)
aam
add
cs
retf
xchg
mov
mov
retf
push
jp
retf
cmp
add
inc
daa
xor
ja
or
mov
mov
jmp
lods
and
mov
ss
push
jmp
pop
rcl
fstp
call
add
mov
out
sar
je
inc
mov
xor
push
add
fidivr
xor
or
shl
jbe
loop
cmps
ror
adc
mov
sub
out
mov
cs
add
fwait
xor
in
xchg
adc
popf
retf
ret
pop
in
push
jbe
mov
call
out
fcomp
cld
or
dec
dec
popf
dec
push
dec
mov
jmp
xchg
push
add
pop
lods
test
test
adc
xor
push
rol
aam
pushf
repnz
push
xchg
pop
push
inc
sti
fnstsw
xchg
rcr
movs
and
dec
lods
jp
adc
xchg
mov
ror
loope
jge
jo
cmp
mov
dec
pop
fcomp
inc
adc
js
xor
frstor
in
xchg
and
scas
sbb
fild
clc
push
(bad)
cmps
mov
out
call
push
cld
dec
jne
sbb
mov
pop
pop
ja
jno
xor
cmp
push
mov
push
sbb
push
push
mov
cmp
mov
lds
stos
mov
stc
push
xchg
ds
and
gs
push
pop
pusha
popa
lds
pop
mov
outs
adc
test
adc
sbb
sbb
adc
mov
lods
fwait
(bad)
mov
sub
push
pop
sbb
jb
xchg
(bad)
in
scas
cmps
inc
push
int3
pop
cmp
fbld
(bad)
fimul
inc
ds
mov
ret
imul
inc
and
mov
cwde
retf
enter
call
adc
push
bound
outs
es
jnp
mov
dec
cmp
popf
js
dec
and
or
cmp
enter
dec
mov
mov
jge
test
xchg
pop
or
mov
fld
sbb
push
pop
lahf
mov
je
daa
dec
pushf
sbb
imul
fimul
test
xlat
ret
stos
xlat
fld
dec
mov
es
mov
jge
fsubr
int
aas
sar
pop
push
sbb
add
or
push
and
and
mov
retf
sahf
in
les
add
inc
lods
xchg
mov
mov
adc
pop
(bad)
xchg
loopne
xchg
cld
cwde
xor
nop
scas
pushf
retf
cdq
push
and
mov
inc
pusha
cmp
dec
sbb
cli
inc
push
icebp
fisttp
pop
stos
cmp
pop
test
ins
gs
cmp
sub
in
sub
or
mov
out
pop
rcr
scas
cmc
dec
jmp
fldenv
pusha
popf
jmp
dec
pop
inc
lock
mov
mov
popa
repz
or
ror
lods
add
pusha
jo
pop
ret
xchg
pop
dec
aad
mov
and
xlat
out
in
stos
push
sbb
and
out
and
pop
push
or
ins
pop
dec
xor
movs
inc
shl
and
or
and
cdq
es
test
add
(bad)
jnp
push
into
mov
pop
mov
dec
dec
ss
(bad)
in
pop
jmp
sub
comiss
jbe
das
lahf
mov
xchg
mov
pop
adc
sub
imul
icebp
popa
std
mov
(bad)
aaa
cmp
(bad)
rcl
jns
shr
mov
and
jecxz
fprem1
push
mov
movs
mov
into
mov
mov
push
test
fcmovnbe
ror
fcomp
cs
mov
or
(bad)
data16
into
sub
sbb
mov
scas
mov
cwde
in
and
enter
in
mov
dec
movs
mov
test
sbb
jne
movs
mov
repnz
ss
and
cdq
cwde
jp
mov
sbb
aam
hlt
sbb
pop
sbb
and
out
int3
(bad)
fcomi
dec
and
mov
pop
cs
push
and
stc
jl
xchg
mov
dec
repnz
sbb
xchg
jnp
mov
fdiv
retf
push
mov
bound
xchg
mov
and
fsubr
mov
sub
mov
push
je
gs
imul
jae
cmc
pop
sub
scas
xor
adc
cmp
sbb
outs
fsub
or
cmps
(bad)
sbb
cmp
mov
or
pushf
out
aaa
xor
fcomp
(bad)
fidivr
mov
fstp
hlt
dec
jp
ins
inc
daa
push
dec
xlat
mov
ret
pusha
(bad)
not
sbb
or
or
cwde
mov
stos
jge
test
xor
mov
aas
push
jnp
push
sub
add
sbb
add
fistp
add
lea
inc
mov
sti
imul
dec
inc
xchg
mov
push
mov
dec
addr16
cmp
push
shl
ret
pop
clc
sub
jne
or
outs
sbb
cdq
add
retf
(bad)
in
cld
sbb
outs
aas
stc
ins
xchg
adc
sbb
retf
adc
popf
jge
ret
dec
xor
ret
cmp
bound
inc
jae
push
push
stc
enter
xchg
xor
jge
cmp
fsubr
cli
add
push
mov
dec
and
das
daa
mov
mov
movs
shl
es
les
jmp
xor
sti
xchg
adc
out
in
and
xor
sti
mov
and
or
inc
js
xor
ror
out
repnz
pop
je
mov
sub
arpl
test
popa
or
add
lods
in
mov
adc
fwait
cli
aas
mov
pop
xchg
in
sub
mov
cmp
jp
int3
mov
test
cmp
adc
mov
aaa
test
sub
repnz
int
cmp
movs
push
add
test
neg
out
sub
cs
and
mov
aas
lods
push
jb
fiadd
mov
or
and
rcr
(bad)
aad
stc
adc
jg
mov
sbb
ja
fbld
and
loope
dec
mov
pop
mov
mov
out
stc
sub
push
cmp
fsubrp
lods
imul
xchg
push
push
xor
mov
rcl
push
call
push
sub
stc
leave
add
call
lock
enter
and
cmps
jmp
cmp
jmp
outs
retfw
sbb
push
imul
movs
adc
lock
dec
xlat
sbb
sub
xor
jmp
ret
inc
aad
add
int3
test
xchg
push
cmc
fmul
xchg
sar
repz
inc
stos
sbb
int
fwait
es
jmp
mov
or
push
adc
dec
out
js
adc
bound
inc
mov
mov
mov
push
gs
push
inc
clc
pop
and
cmp
jnp
dec
push
sbb
lahf
cli
std
pop
sub
mov
mov
and
(bad)
call
test
neg
je
cmp
in
xor
pop
sbb
xor
mov
push
xor
adc
icebp
pusha
iret
and
cwde
sbb
pushf
xchg
xor
and
push
mov
push
cwde
mov
fstp
data16
mov
xchg
aas
pop
les
xchg
push
arpl
stc
adc
xor
gs
inc
add
xor
lds
jns
inc
in
jns
clc
test
inc
inc
popa
mov
scas
push
add
retf
mov
in
mov
inc
sub
out
in
inc
inc
inc
pop
stc
ret
and
lods
outs
push
rol
mov
cmp
mov
jmp
mov
in
add
test
shl
sub
icebp
and
pop
add
sar
mov
pop
loopne
daa
add
push
stos
mov
sub
sub
cmp
popa
dec
cmp
mov
ficom
shl
movs
fwait
adc
push
add
mov
shl
jns
icebp
add
out
sub
dec
sub
addr16
call
add
icebp
imul
ss
sbb
push
bound
outs
mov
mov
daa
jbe
lods
or
mov
mov
ret
inc
mov
test
and
dec
and
ret
sub
mov
dec
inc
retf
(bad)
nop
ret
ficomp
push
add
mov
sub
pop
inc
mov
push
arpl
outs
rol
xchg
sub
and
push
(bad)
fiadd
mov
test
inc
pop
mov
pusha
pop
inc
dec
cdq
push
xor
push
mov
hlt
or
jmp
mov
hlt
sbb
dec
ds
push
mov
sti
out
mov
push
xor
jb
sub
push
mov
inc
loopne
mov
rcl
rcr
out
jge
aaa
inc
inc
fwait
(bad)
mov
dec
lea
imul
jp
test
cmp
and
je
xchg
mov
imul
jle
mov
push
es
repz
cld
(bad)
(bad)
xchg
push
shl
dec
(bad)
jae
cmps
add
adc
ins
jle
mov
int3
pop
imul
call
xor
neg
int
sub
add
pop
or
shl
mov
test
jo
sbb
mov
rcl
dec
lds
iret
jle
jmp
aad
mov
push
xchg
shl
jae
and
sub
xor
pop
into
test
push
repnz
aas
jp
in
jns
lods
add
stc
dec
loope
ins
sub
mov
jae
popa
dec
jmp
mov
(bad)
out
leave
mov
mov
in
sbb
fnstcw
imul
and
in
jne
loop
inc
mov
cmp
test
lock
inc
ret
pop
movs
scas
adc
das
push
pusha
add
sub
(bad)
jecxz
jb
outs
adc
sub
retf
rol
sub
in
data16
popf
ins
scas
movs
aam
cmp
jp
inc
sbb
cmps
dec
int3
cmp
ret
das
pop
cmp
fwait
clc
xor
in
add
xchg
icebp
les
lods
jbe
and
sub
and
popa
pop
scas
sbb
xchg
adc
data16
mov
dec
mul
stos
cmp
call
inc
mov
sti
push
dec
or
cmp
pop
mov
(bad)
sahf
jle
loop
test
xor
cmp
dec
mov
xchg
adc
clc
inc
out
cmp
dec
pop
dec
cld
pop
xlat
pop
ret
sbb
fidiv
xor
frstor
movs
test
adc
mov
inc
das
xchg
mov
jmp
add
movs
add
pop
inc
inc
mov
lods
das
cmps
sbb
rcl
call
push
(bad)
outs
imul
inc
push
out
xchg
out
stos
mov
pop
loop
into
adc
sbb
and
call
ins
cli
test
lea
out
xchg
xchg
fcomp
pushf
int3
push
jb
mov
sub
jp
fistp
pop
std
xor
das
sbb
mov
fwait
sbb
fadd
test
mov
aam
hlt
arpl
stos
ficomp
movs
(bad)
(bad)
ret
lds
in
stos
mov
idiv
fild
lods
lock
jmp
inc
fsubp
out
fisubr
dec
cmps
arpl
xchg
xchg
movs
ins
data16
mov
in
mov
sub
cld
iret
xlat
mov
stos
xchg
add
sbb
pusha
scas
sub
cmp
sub
and
data16
jo
cs
mov
iret
cwde
fiadd
dec
jle
jl
sbb
ss
fwait
inc
xchg
test
aas
cs
xor
mov
cs
out
das
cmps
imul
(bad)
fsubr
stos
push
pop
or
sub
jo
repnz
sbb
dec
into
push
shl
pop
repz
jnp
jmp
(bad)
mov
xor
das
stos
in
inc
loopne
test
(bad)
cmp
adc
jne
push
loopne
gs
mov
dec
mov
cmps
ins
pop
inc
or
int
(bad)
repz
mov
pop
mov
cwde
xchg
sbb
or
xor
loopne
movs
test
stos
call
cmps
mov
mov
push
fs
mov
div
outs
mov
adc
xchg
inc
cmp
sbb
add
xchg
inc
leave
or
xchg
mov
jmp
sbb
stos
mov
or
dec
neg
sbb
fisttp
push
dec
retf
and
iret
push
mov
inc
fisttp
fld
sbb
dec
leave
jo
mov
mov
adc
fild
cmc
(bad)
cld
nop
adc
dec
sub
(bad)
xor
sbb
jb
out
ret
fld
neg
pop
add
ret
sbb
test
mov
xor
test
pop
inc
cwde
or
pop
mov
jge
cmps
mov
in
or
sbb
cmp
xchg
mov
sbb
adc
sbb
adc
imul
sub
das
fisubr
iret
int3
pop
test
or
sub
enter
sub
arpl
push
sbb
test
sti
pop
push
sub
call
adc
pushf
in
(bad)
jecxz
movs
scas
jmp
outs
jmp
out
xlat
mov
sbb
sbb
std
and
(bad)
cmps
jne
jg
jnp
fmul
jmp
aad
std
ins
mov
int3
or
jecxz
mov
xlat
fidivr
jae
xor
lods
nop
cmc
lock
stc
lahf
and
fbld
cdq
cmps
enter
dec
adc
and
jmp
test
or
fwait
push
mov
inc
jge
add
test
pop
mov
mov
dec
sub
mov
inc
repz
fcom
repnz
mov
add
fxch
mov
mov
pop
xchg
test
sub
loopne
pop
jge
movs
(bad)
stos
cld
pop
movs
in
sub
mov
cwde
rol
push
xchg
out
inc
push
sbb
inc
xor
fisub
xchg
arpl
in
adc
sub
jp
ror
shl
dec
or
fistp
push
or
shl
icebp
pop
push
in
stos
es
repz
pop
xchg
arpl
sub
mov
cmps
adc
mov
xchg
cmp
ins
(bad)
mov
push
ret
or
nop
push
cdq
fwait
cmc
pop
inc
pushf
pop
cmps
aas
hlt
ret
push
dec
xchg
sbb
xor
adc
xchg
xor
popf
imul
jl
push
mov
call
inc
mov
into
leave
or
lahf
xor
push
pop
retf
aam
int
xlat
dec
into
jmp
out
push
lock
test
push
push
out
and
fcomip
loop
jp
push
pusha
imul
ror
je
adc
data16
inc
in
mov
xor
popa
dec
adc
mov
cld
sahf
add
emms
mov
and
out
popf
push
lds
dec
outs
mov
push
call
inc
push
xchg
sbb
arpl
sub
sar
lea
push
fadd
adc
icebp
movs
xor
sub
inc
clc
stos
(bad)
clc
adc
pop
xchg
scas
cmps
rol
dec
popf
aam
xor
cld
mov
sbb
jo
xchg
popf
push
out
stos
xchg
push
outs
imul
js
cmp
jnp
int3
icebp
adc
std
scas
and
adc
jne
call
mov
pop
repz
fwait
(bad)
(bad)
cmp
mov
adc
sbb
into
cwde
adc
retf
pop
popf
mov
cmp
push
popf
pop
mov
or
dec
mov
(bad)
cmp
test
push
xlat
jge
or
dec
push
inc
int3
pop
fwait
or
sbb
mov
hlt
hlt
retf
and
sbb
popf
cmp
cmps
mov
mov
jns
mov
popf
into
enter
sbb
stos
js
loopne
(bad)
dec
xor
shr
test
popf
sbb
cld
and
gs
test
aas
xchg
sub
mov
aaa
(bad)
mov
or
pushf
ret
fld
jp
test
enter
mov
push
pop
leave
dec
mov
retf
xchg
loopne
or
out
add
dec
ins
fst
mov
inc
xchg
lods
imul
jmp
out
add
mov
dec
sub
cmps
add
jp
jnp
das
mov
dec
popf
xchg
push
sti
mov
or
bound
into
les
cdq
repnz
mov
mov
and
daa
cwde
int3
jns
leave
mov
mov
(bad)
jge
and
outs
adc
jecxz
lahf
loopne
sub
xlat
or
ins
add
xor
movs
or
(bad)
out
mov
mov
mov
pop
jmp
inc
and
xlat
addr16
mov
imul
jnp
xchg
shr
mov
ss
push
lahf
jb
ins
lds
icebp
mov
popa
imul
dec
adc
(bad)
cmp
xchg
xchg
ret
lods
push
mov
jae
push
cmps
push
add
fsub
scas
mov
push
jb
inc
or
pop
retf
loope
outs
fwait
retf
push
jae
aas
stos
jne
outs
sar
mov
or
sub
push
xchg
cmp
dec
push
scas
inc
push
sub
jecxz
bound
sub
retf
ds
imul
int
jge
cld
icebp
adc
bound
xchg
cmp
inc
jno
mov
cmp
cwde
add
bound
mov
nop
mov
and
mov
pop
cld
arpl
add
cmp
dec
jmp
js
adc
inc
add
xor
mov
js
cs
jl
arpl
jb
leave
movs
cwde
mov
mov
add
test
movs
cmp
and
ds
jl
es
idiv
and
pushf
adc
fs
mov
push
jge
xchg
outs
inc
jge
ja
adc
inc
cli
imul
idiv
cmps
inc
xor
or
add
cmc
(bad)
cmc
popf
xor
mov
cmps
dec
cs
jp
xchg
test
sbb
xchg
or
mov
mov
(bad)
icebp
inc
repz
(bad)
lock
mov
icebp
test
and
icebp
inc
xchg
inc
add
repnz
and
ret
retf
adc
div
jmp
inc
push
aam
clc
pop
dec
pop
mov
and
adc
arpl
mov
outs
mov
pop
and
cmp
imul
inc
jp
gs
sub
mov
xor
mov
mov
mov
ret
jae
push
cmp
mov
out
fbstp
jb
retf
inc
sub
and
dec
push
shl
repnz
std
int
(bad)
loopne
and
mov
lods
xchg
pop
hlt
inc
add
(bad)
mov
rol
movs
pop
test
out
rcr
ror
jb
and
mov
(bad)
mov
aad
sub
stos
lea
rcr
aaa
push
neg
push
mov
loope
ss
push
popa
cdq
loope
mov
cdq
pop
aam
pop
adc
push
test
xchg
pop
into
rcl
ja
push
adc
jge
imul
sar
ret
push
cmp
sub
xor
sub
jecxz
push
xor
mov
int3
fs
xchg
popa
xlat
pusha
adc
outs
ret
mov
retf
ss
(bad)
rcpps
mov
out
xor
(bad)
cld
imul
inc
inc
and
inc
in
je
pop
shl
push
sub
adc
test
mov
xchg
xor
jo
in
or
adc
pop
xchg
fldenv
add
adc
movs
dec
lahf
maskmovq
neg
mov
inc
xor
dec
ss
cmp
bound
es
and
cld
test
lea
xchg
lea
ja
adc
xchg
fdivr
xchg
sbb
mov
xor
movs
pop
or
aas
xchg
xor
and
push
mov
add
clc
sub
xchg
idiv
movs
scas
mov
loope
and
sbb
fdivrp
dec
dec
xor
push
and
mov
push
ficomp
jmp
add
mov
push
inc
push
push
sub
stc
ins
outs
mov
or
inc
test
pop
adc
fs
xlat
jo
mov
movs
cmp
cmp
jb
pusha
ins
xchg
js
xchg
cli
loop
loopne
push
mov
stc
jg
push
repnz
loopne
out
mov
imul
fild
loop
sahf
jne
mov
imul
cmps
(bad)
fisttp
test
cmps
in
fisttp
sbb
pusha
out
jle
or
iret
jb
ins
mov
retf
jb
mov
adc
pop
nop
loopne
stc
neg
fs
call
cmp
fs
test
or
jo
push
sbb
mov
stc
repnz
lock
fsub
out
test
loopne
ins
das
icebp
ins
cmp
and
pop
sbb
and
mov
sub
mov
shl
mov
sub
test
imul
pop
enter
mov
and
sar
sbb
ffree
mov
xchg
adc
cmps
sub
xor
shr
push
icebp
mov
mov
xor
jnp
test
iret
fdiv
fild
call
push
cmp
push
inc
pop
sti
dec
xor
(bad)
rcl
mov
mov
mov
push
sti
fs
paddd
mov
shr
scas
cmp
jae
jmp
inc
xchg
in
push
repz
xor
sahf
mov
and
nop
add
pushf
retf
test
or
pop
sub
inc
lock
in
pop
sub
test
pop
cmp
loopne
jns
retf
push
int
dec
xor
sbb
push
mov
jl
jle
xor
xchg
adc
lods
add
loope
bound
sti
pop
ss
sbb
mov
mov
push
rcl
xlat
int3
jns
mov
imul
in
icebp
cdq
aas
mov
stos
jp
pop
push
data16
cmp
mov
xor
xchg
xchg
mov
bound
jg
dec
push
xchg
mov
enter
inc
es
ret
xchg
sub
lock
add
jns
sub
dec
rcl
push
mov
mov
fs
xlat
mov
fcom
imul
add
add
cli
jne
movs
or
jbe
lock
out
jg
jp
mov
das
jno
mov
mov
sub
scas
stc
pushf
dec
mov
push
sbb
cli
sbb
mov
jecxz
xchg
leave
std
xchg
sahf
xor
sub
ins
push
mov
ins
jno
push
mov
cmp
mov
out
test
gs
dec
fisub
aas
rol
in
xchg
xchg
outs
ror
into
sbb
sub
adc
fadd
mov
pop
sbb
pop
pop
pop
retf
cmp
bound
sbb
xor
aas
mov
and
jle
js
call
sub
mov
(bad)
popa
rol
out
lods
cld
mov
mov
pusha
cmc
fwait
sbb
cli
int
jb
sub
cmovb
es
ror
push
jle
lock
pop
test
loopne
arpl
and
rcr
cwde
(bad)
mov
movs
in
hlt
(bad)
xchg
mov
mov
(bad)
(bad)
cmp
aas
push
fld
cmp
and
push
mov
sub
sbb
enter
xchg
mov
jno
or
sbb
out
fimul
hlt
xchg
mov
sub
sbb
out
jmp
xor
xchg
push
lods
sbb
ror
lock
mov
(bad)
das
addr16
ret
mov
or
and
das
mov
test
hlt
or
cmc
or
xor
xchg
(bad)
popa
and
push
popa
lds
jl
mov
jo
xor
mov
gs
test
repnz
dec
dec
retf
xor
add
int
mov
ins
sbb
imul
mov
mulps
jb
jno
and
adc
daa
gs
lods
cmp
push
rcr
jge
mov
lds
movs
cmp
jge
mov
inc
repnz
pop
adc
pop
and
loopne
loope
and
xchg
cmp
mov
stos
je
stos
bound
mov
adc
mov
es
xchg
mov
clc
pop
or
cwde
ja
ins
shl
shl
in
ins
pushf
pop
shl
enter
bound
push
jle
and
push
ja
and
xor
sbb
push
pop
je
shl
jl
cmp
xchg
fldcw
xchg
cmps
das
or
sbb
push
outs
pop
adc
sub
push
push
pop
cs
inc
mov
xchg
cmp
inc
ja
out
xor
inc
add
push
cmp
retf
jnp
push
jno
(bad)
popf
add
mov
xchg
fs
mov
pop
jno
xor
add
add
sbb
pop
add
cmps
jl
cmp
sub
dec
push
sub
js
and
xchg
sbb
push
(bad)
push
mov
push
data16
ret
add
les
xor
lahf
jg
sti
aaa
dec
mov
jns
out
add
sbb
inc
aas
mov
dec
adc
sub
aaa
add
mov
fbstp
xor
inc
xor
xchg
xchg
call
mov
call
dec
mov
(bad)
out
jl
push
in
inc
enter
cld
jbe
popa
inc
fisub
adc
xor
mov
hlt
(bad)
in
popf
out
lods
xchg
mov
icebp
xor
pop
in
sbb
test
hlt
or
pushf
aam
ret
adc
sub
jns
int
(bad)
and
movs
inc
sbb
mov
and
dec
inc
sbb
aaa
idiv
jbe
rcr
jns
cdq
fcom
xor
sub
jae
jae
mov
mov
stc
jno
je
add
sub
in
pop
ins
mov
test
hlt
(bad)
xchg
mov
xchg
cdq
adc
vpunpcklbw
stos
and
popa
cmp
jl
in
xlat
(bad)
in
cmp
jp
dec
sub
lods
scas
mov
mov
or
jbe
sbb
mov
enter
inc
pop
mov
mov
and
or
inc
jg
adc
mov
push
or
sbb
dec
call
test
or
imul
push
test
or
jp
out
push
stos
inc
inc
(bad)
repnz
inc
push
push
dec
mov
div
xor
mov
imul
push
lds
fs
aaa
jg
test
popa
mov
pop
shl
(bad)
push
lea
mov
daa
add
iret
movs
std
in
dec
fmul
mov
arpl
imul
push
les
sub
fwait
push
iret
aaa
xchg
pop
(bad)
jne
ins
iret
xchg
shr
push
neg
adc
push
fcmovne
mov
aas
xlat
push
mov
(bad)
jnp
or
jle
mov
lods
lahf
and
ss
add
jnp
mov
je
jb
push
xchg
pop
add
mov
aad
leave
addr16
xor
jae
inc
jecxz
ja
or
out
mov
mov
xchg
les
xor
into
xlat
stc
and
(bad)
aam
sub
loop
test
mov
push
jae
ds
neg
(bad)
sbb
mov
bound
(bad)
dec
push
in
repz
mov
xor
imul
and
jp
xor
inc
cmp
lahf
fwait
lahf
ds
mov
sub
cs
add
inc
mov
retf
(bad)
pop
popf
add
push
inc
inc
lods
sub
ror
push
dec
and
cmp
stos
jnp
cs
jo
popf
fstp
in
sbb
xlat
inc
xor
pop
mov
pop
mov
icebp
outs
xor
sar
add
dec
adc
push
fbstp
pop
push
add
repz
in
mov
div
inc
pop
leave
sbb
adc
jmp
jns
sbb
outs
int3
xchg
call
fiadd
jp
jo
dec
sar
adc
gs
jge
jbe
cmps
pop
sub
jecxz
stos
sahf
add
add
hlt
ficomp
sub
pop
aam
outs
push
jb
mov
sti
ss
xor
test
(bad)
fdivp
in
pop
mov
jb
stos
jbe
retf
adc
mov
jmp
fisubr
push
mov
cli
cmp
in
cmp
mov
fbstp
add
cld
sub
push
pop
pop
js
add
jmp
add
mov
into
popf
movs
inc
cmp
call
(bad)
out
int
jbe
mov
sub
ja
jge
sbb
jno
in
das
es
mov
loop
inc
mov
mov
jl
fisttp
fldenv
jbe
jg
mov
push
mov
cmp
fild
lock
inc
cs
xchg
int3
ret
bound
gs
cmp
mov
adc
sbb
mov
fild
mov
clc
xlat
mov
arpl
mov
ins
mov
jecxz
in
imul
pusha
lock
scas
sub
jmp
pop
push
pusha
leave
inc
(bad)
xor
xchg
xchg
inc
ss
cmp
cmc
mov
daa
jnp
jp
mov
jle
and
xchg
mov
adc
pop
icebp
das
lahf
dec
pusha
pop
(bad)
xor
xchg
in
jno
pop
in
lods
mov
jg
xchg
jne
scas
cmp
ins
repnz
dec
jne
add
jl
jmp
lahf
scas
jle
je
int3
ss
add
in
dec
add
stc
mov
div
and
dec
popa
test
and
push
(bad)
jmp
xor
dec
cmp
dec
or
inc
sbb
mov
ret
and
out
cmp
sbb
stos
call
cs
mov
add
je
mov
fdiv
aaa
and
(bad)
imul
fcmovnu
xlat
cmp
mov
int
addr16
or
retf
pop
pop
js
and
in
pop
clc
cmp
test
test
push
ret
add
mov
mov
xchg
xchg
dec
ror
cld
popa
movs
or
ds
push
cmps
mov
clc
push
dec
dec
mov
ret
pop
mov
sub
xchg
popa
adc
sbb
data16
dec
cmps
iret
out
nop
xor
je
retf
cmp
mov
imul
movs
jne
pop
dec
jo
stos
mov
sub
jp
div
push
push
and
jecxz
ficom
cdq
addr16
out
ds
jmp
adc
dec
jle
out
push
sub
aam
mov
aad
mov
cli
and
fisubr
int
inc
mov
sbb
xchg
xchg
sti
pushf
xor
cmp
mov
stos
cmp
mov
sub
es
ret
pusha
mov
jbe
retf
(bad)
sbb
sahf
adc
xchg
icebp
inc
ds
sub
(bad)
out
outs
ja
retf
pushf
mov
int
mov
adc
mov
xlat
stos
dec
mov
add
push
mov
sub
idiv
and
inc
pop
mov
loopne
adc
mov
ins
in
pop
clc
jo
push
sbb
xor
jne
xchg
pop
mov
mov
push
(bad)
dec
cmp
test
sub
sub
and
outs
popf
cmp
mov
ins
add
sbb
(bad)
cmp
lock
add
imul
ret
mov
jo
arpl
adc
cmp
jae
jmp
push
mov
out
cmp
test
ss
jb
or
aas
push
and
pop
pop
xor
mov
and
leave
lahf
retf
mov
and
cmp
(bad)
(bad)
clc
lea
add
mov
in
and
adc
sub
(bad)
ret
call
xchg
stc
je
outs
in
out
out
(bad)
neg
pop
mov
out
adc
dec
or
mov
pusha
(bad)
cwde
out
pushf
xchg
ins
push
inc
call
dec
inc
push
xor
adc
das
fiadd
add
stos
mov
out
xor
add
mov
inc
sbb
mov
int
ret
push
adc
sbb
cli
sbb
jo
(bad)
cmc
cli
mov
repnz
int
push
jle
dec
adc
xor
sbb
scas
xchg
retf
int
neg
call
inc
ins
or
es
mov
cwde
(bad)
dec
leave
pop
mov
mov
xor
mov
mov
gs
pop
mov
add
std
inc
scas
or
(bad)
push
fiadd
mov
in
jmp
xchg
mov
fild
inc
stc
add
(bad)
outs
adc
mov
mov
pop
jno
stc
lea
mov
dec
push
aam
loop
sub
shr
jg
outs
and
sub
push
test
ds
pusha
leave
push
scas
test
xchg
push
sub
xchg
adc
pusha
cmp
mov
popf
or
ficom
dec
arpl
pop
popa
outs
jbe
clc
cmp
push
fsub
xchg
add
jno
int
scas
daa
add
(bad)
sbb
ficom
mov
push
js
pop
ret
fiadd
mov
fisttp
sub
lods
aam
popa
inc
dec
cmp
out
movs
adc
and
mov
mov
pop
and
fs
dec
cmps
add
ds
out
jge
cs
and
popf
mov
retf
mov
and
xchg
ins
mov
retf
retf
and
and
int
iret
inc
repnz
push
test
pop
ins
cmp
sub
push
pusha
enter
retf
mov
fwait
int
inc
imul
xlat
test
push
push
pop
jmp
mov
sub
xlat
aam
call
adc
and
sbb
dec
ins
mov
jmp
mov
ret
out
or
and
inc
fs
jbe
mov
ja
(bad)
leave
arpl
sbb
repnz
mov
fisubr
pop
mov
xor
mov
xchg
(bad)
in
call
loope
aaa
mov
pusha
shl
xor
popa
in
and
jnp
sahf
(bad)
pop
dec
xchg
call
or
call
aaa
iret
inc
hlt
dec
out
scas
aam
and
daa
ss
mov
xchg
out
or
inc
(bad)
in
add
icebp
cmps
mov
and
cli
dec
push
pop
(bad)
xchg
xchg
jp
and
push
pop
mov
test
data16
clc
push
jbe
pop
jmp
jge
xchg
and
add
and
cli
shl
std
mov
add
movs
outs
jae
popa
xchg
pop
xchg
(bad)
rcl
out
or
push
mov
aaa
push
mov
fild
cmp
add
push
jg
cmp
ficom
inc
or
aas
out
xchg
mov
pop
mov
fimul
popa
dec
ins
in
js
stos
popf
outs
xchg
pushf
sub
cmp
ret
ret
pop
shl
jg
xor
fadd
fcom
rcr
jg
mov
cmp
das
dec
push
ins
bnd
ins
mov
inc
fld
adc
or
fst
xor
sub
mov
lea
aas
outs
bound
push
sbb
das
fidiv
jecxz
adc
jl
dec
inc
cmc
(bad)
jge
loope
in
add
fidivr
sub
outs
adc
imul
sub
mov
in
lock
and
test
cmc
sahf
mov
in
bound
jge
cmp
sub
test
xor
jg
pop
(bad)
(bad)
leave
jmp
mov
loope
loop
repnz
fldl2e
enter
xchg
add
out
stos
inc
mov
xlat
fucomip
mov
inc
jmp
neg
icebp
sbb
inc
outs
mov
jbe
pop
fnstcw
xlat
inc
je
sub
and
or
sahf
inc
sub
shl
xchg
dec
bound
sbb
out
pop
outs
mov
(bad)
repnz
mov
cmps
dec
dec
xchg
and
xor
icebp
pop
mov
je
or
cwde
aas
(bad)
je
mov
js
fistp
scas
push
jmp
pop
fldlg2
and
mov
addr16
loope
push
mov
xor
cdq
xchg
inc
and
xchg
push
adc
jne
lea
pop
mov
sbb
mov
fsub
jo
inc
xchg
lods
fwait
sub
test
dec
sub
out
jns
mov
out
mov
loopne
fcmovu
mov
xor
dec
js
jg
adc
mov
clc
(bad)
xchg
in
mov
dec
push
and
(bad)
inc
(bad)
cmp
inc
ret
cmp
js
addr16
nop
dec
cmc
fdivr
fdivr
rcl
mov
push
push
hlt
sbb
adc
mov
in
xor
retf
shr
cmps
sbb
push
mov
mov
and
leave
js
xchg
mov
pop
call
or
call
add
cli
add
fisttp
(bad)
nop
dec
jmp
dec
mov
cld
jbe
inc
push
popf
push
jne
in
ror
sub
lods
mov
das
inc
js
pop
jo
popf
ret
shl
pusha
pushf
mov
scas
hlt
test
jmp
add
xchg
cmps
(bad)
push
mov
into
enter
inc
inc
pushf
je
dec
push
fnstenv
imul
cmps
add
cmp
pusha
lds
std
ds
xor
add
push
pop
(bad)
jns
stos
inc
adc
xlat
cmp
fcomp
ja
adc
jne
rcr
in
mov
push
arpl
stos
inc
retf
push
mov
cmp
pop
jns
cmp
mov
lock
cmc
test
mov
mov
pop
ins
mov
add
mov
shl
fisttp
iret
stos
adc
ins
ror
mov
add
stos
in
xchg
sbb
icebp
mov
int3
dec
cmp
aas
call
cmp
inc
rcr
call
xchg
or
push
xor
mov
arpl
test
ss
jns
mov
bound
jp
imul
scas
das
ja
fnsave
dec
xchg
lea
or
outs
in
into
jns
repnz
(bad)
pop
sbb
pop
jg
rcl
loopne
dec
mov
mov
arpl
xor
push
and
aas
test
mov
adc
jo
ficom
das
sub
jmp
and
fimul
inc
or
rol
bound
dec
outs
sahf
inc
scas
test
ja
mov
aaa
adc
sub
ficomp
(bad)
or
inc
(bad)
jecxz
fist
ss
ret
push
jle
into
enter
sahf
fnstsw
and
sub
in
push
nop
lods
test
push
ja
and
(bad)
mov
(bad)
sbb
setg
int
xchg
pop
add
out
int
out
imul
xchg
jbe
inc
xchg
cmp
sub
in
test
fdiv
iret
fs
and
xchg
aam
out
sub
inc
jo
pop
adc
xchg
cmp
jle
ja
mul
bound
inc
mov
sbb
pop
jmp
cs
test
sub
push
arpl
adc
cmp
in
add
(bad)
adc
outs
out
cbw
xor
in
xor
mov
in
jne
pop
iret
push
and
movs
inc
xlat
iret
in
into
dec
icebp
pop
js
mov
in
inc
fild
cs
in
test
aas
jmp
push
jae
shl
or
xchg
cmp
test
xchg
or
loop
not
sub
pop
out
ins
push
dec
call
or
in
lods
mov
int3
xchg
ja
dec
xchg
dec
mov
inc
xchg
sub
mov
xor
mov
sbb
call
test
ins
adc
push
out
rcr
pop
stos
arpl
xchg
leave
push
adc
aas
ds
mov
dec
mov
fdiv
cmp
(bad)
pop
sub
fs
retf
cld
xchg
loop
in
mov
ret
add
jne
jae
addr16
dec
xor
cld
xchg
xchg
pop
lahf
or
push
pop
jnp
fidivr
mov
sbb
test
mov
je
pop
xchg
lea
push
xchg
sub
and
loop
lea
sti
shr
in
std
adc
add
fs
mov
test
aam
cmc
push
pop
and
pop
inc
mov
out
jb
push
and
loope
xchg
inc
jmp
add
and
push
jnp
sub
mul
mov
mov
jmp
test
sbb
mov
mov
sbb
stc
mov
mov
xchg
fcom
div
mov
rcl
push
iret
jno
adc
adc
mov
cmc
ins
imul
mov
jb
retf
stc
aam
inc
scas
cs
pop
jo
idiv
ror
das
ins
fcom
test
push
ins
mov
jb
les
test
cwde
xchg
repnz
add
lahf
sub
leave
mov
push
(bad)
cmp
mov
ror
movs
inc
push
addr16
mov
mov
shl
pop
in
inc
pop
pop
arpl
cld
cdq
sub
mov
xchg
mov
or
pop
or
ror
test
lds
pop
jb
and
mov
jb
dec
repnz
xchg
adc
sbb
dec
mov
sub
mov
ds
xor
leave
les
outs
add
(bad)
call
and
mov
nop
or
sti
cs
ja
(bad)
and
jmp
push
adc
test
ja
(bad)
out
push
mov
out
add
out
movlps
in
test
movs
mov
mov
pop
xlat
js
push
and
loopne
(bad)
popf
cmp
lods
cwde
out
mov
adc
mov
xor
stc
add
sub
rcl
mov
xor
sub
jb
rcr
add
xor
xchg
sbb
test
mov
scas
inc
cmp
dec
aas
aam
mov
dec
nop
xor
sbb
and
xor
shl
aas
lods
cmps
sub
mov
push
sbb
mov
mov
jo
cmp
fldcw
std
xor
xor
(bad)
xchg
sbb
jle
push
clc
fst
jo
dec
inc
(bad)
not
(bad)
cmp
cmp
dec
add
mov
mov
retf
cld
mov
mov
pusha
fcom
and
push
push
push
hlt
stos
or
add
in
or
lods
xchg
adc
dec
lods
shl
mov
inc
sub
add
add
xchg
or
jmp
call
mov
dec
inc
pop
test
or
push
out
jo
test
mov
pop
push
sub
movs
jmp
jl
jl
pop
mov
sub
cmp
(bad)
dec
fcom
pop
nop
(bad)
xchg
push
adc
push
sbb
je
mov
mov
mov
inc
lods
sub
push
shl
movs
shl
mov
mov
test
mov
imul
inc
sbb
adc
mov
loop
push
cdq
cmp
dec
adc
mov
mov
jnp
mov
cmp
cmps
mov
sbb
popa
push
fimul
cs
in
cmp
mov
adc
out
sbb
inc
adc
nop
(bad)
movs
retf
outs
aam
xchg
xchg
and
xor
pop
shr
cmp
jle
mov
push
retf
pop
jo
mov
adc
popa
pop
add
inc
push
retf
repnz
inc
jmp
mov
outs
das
mov
push
mov
jb
fiadd
pmaxub
pop
je
or
or
and
bound
js
pop
cmp
xchg
mov
mov
leave
mov
imul
js
or
addr16
and
int
mov
sub
sti
gs
fstp
mov
dec
dec
push
pop
jmp
cmps
bound
stc
fnstenv
jbe
inc
dec
fmul
mov
adc
cmp
cmp
(bad)
adc
push
xor
xchg
mov
aaa
(bad)
push
push
neg
ret
sbb
push
add
fs
rol
xchg
push
mov
inc
push
xchg
js
scas
jns
inc
inc
(bad)
xor
out
adc
sub
xor
sahf
mov
iret
jmp
dec
rcr
mov
fnsave
sbb
retf
jb
cmp
lods
mov
xchg
icebp
(bad)
cwde
xchg
jmp
in
mov
or
and
ds
ds
mov
cs
mov
and
xor
inc
xchg
je
add
iret
jge
pop
or
scas
push
retf
retf
push
outs
sbb
pop
aas
imul
pop
call
(bad)
mov
aam
(bad)
stos
icebp
dec
(bad)
loopne
xchg
cmps
sbb
push
cmp
(bad)
xchg
aas
ja
push
retf
pop
icebp
test
push
aad
in
mov
jno
pop
xor
lock
jl
aaa
mov
pop
inc
shl
call
sub
mov
sar
ds
test
adc
jge
es
cmp
xor
movs
lods
jmp
push
popf
fld
jne
pop
pop
mov
jecxz
ss
jno
retf
pop
xchg
hlt
and
dec
push
jnp
fidivr
push
jne
jns
push
mov
mov
(bad)
cmp
mov
loop
das
mov
pop
push
pop
mov
in
pusha
push
cmp
xor
inc
pop
dec
jno
lods
mov
add
pop
enter
leave
xchg
sbb
f2xm1
mov
movs
stos
inc
or
jbe
push
sub
pop
out
(bad)
fist
push
cmp
es
xchg
mov
mov
cwde
inc
or
outs
and
cmp
loopne
dec
(bad)
or
mov
retf
movs
lea
pushf
add
sbb
(bad)
xchg
imul
xchg
or
xchg
inc
ins
xchg
ret
xor
cmp
mov
inc
dec
cs
mov
xor
scas
xchg
mov
sbb
xchg
push
mov
add
xchg
fnstcw
bound
xchg
dec
ins
scas
jl
xor
js
pushf
adc
jl
push
xchg
cmp
dec
inc
stos
cmp
inc
push
fnstenv
cdq
jne
fsub
das
std
outs
in
lea
in
inc
mov
adc
jno
push
xchg
mov
fbld
sub
movs
mov
dec
mov
movs
loopne
jb
xchg
push
stos
push
daa
scas
mov
test
mov
(bad)
ja
cmps
pop
cmps
mov
sub
mov
pop
xchg
push
mov
pop
dec
inc
dec
xchg
add
in
pusha
test
push
test
fstp
or
mov
xor
nop
out
lea
(bad)
or
sub
inc
jno
sub
stc
mov
and
imul
mov
xor
rol
jae
xchg
push
push
push
cmps
pop
and
xchg
xor
movs
jnp
nop
jl
enter
inc
push
sub
mov
mov
outs
fbld
cmps
ja
push
das
sar
fs
or
mov
push
ja
sbb
sub
and
shr
or
sbb
mov
jmp
jno
scas
pop
jne
std
ret
lea
pop
or
int3
stos
xchg
dec
jl
push
cdq
dec
push
cli
mov
push
je
mov
in
imul
sub
stos
mov
cmp
pop
aaa
(bad)
mov
jb
repnz
mov
xor
neg
into
ja
clc
jmp
adc
and
ins
mov
loop
adc
sbb
cmp
pop
ss
and
sub
lock
push
repz
imul
call
js
fsubr
xor
or
jmp
stos
pushf
cmp
arpl
cli
fwait
movs
out
jo
push
loopne
xor
aad
loopne
sbb
not
stos
data16
or
(bad)
retf
push
dec
cmps
test
aaa
inc
sub
mov
jns
(bad)
sbb
jo
cli
std
sti
es
retf
shl
mov
or
sar
mov
ins
jo
ins
push
push
shr
xor
gs
bound
and
sub
cld
loope
cmovbe
dec
fsubrp
lock
sub
int3
mov
jmp
mov
in
rol
dec
dec
dec
aam
mov
(bad)
(bad)
mov
sub
scas
test
mov
pop
fwait
inc
(bad)
or
mov
outs
popa
sub
sbb
daa
jno
ret
cmp
or
aas
push
cmps
sti
sbb
push
adc
arpl
mov
ins
stc
lods
mov
pop
scas
mov
in
test
das
test
call
fimul
adc
dec
fucomi
shl
div
pop
dec
jl
aas
pop
mov
in
push
movs
dec
lods
cmp
gs
sbb
inc
imul
mov
jge
add
movs
xchg
mov
sbb
scas
cmp
push
add
fwait
push
mov
or
daa
xchg
es
loop
fmul
ret
js
in
or
adc
outs
int3
adc
mov
jg
push
shl
sbb
fcom
adc
push
add
std
dec
lea
cmc
sbb
ja
imul
mov
jecxz
xchg
dec
es
xor
shr
xchg
fiadd
push
and
ss
ins
inc
lods
call
cdq
jnp
push
jmp
and
mov
and
mov
icebp
in
push
lods
pop
or
inc
cmc
enter
xchg
adc
das
dec
cmp
push
icebp
add
push
aam
call
cmc
inc
repnz
int3
shrd
push
lea
mov
xchg
pushf
mov
aam
sbb
das
je
inc
ins
scas
pop
ret
dec
inc
in
lahf
cmps
inc
xor
pop
call
xchg
fst
xchg
iret
in
rcl
ja
test
dec
leave
cmp
jae
cmp
scas
push
ror
jnp
out
mov
sbb
add
mov
imul
cmp
pop
lock
leave
stos
inc
into
mov
mov
mov
cmp
lods
xchg
pop
retf
aas
sub
test
sbb
mov
test
push
test
icebp
xor
das
mov
sar
test
out
jbe
push
add
(bad)
or
ret
int
retf
jno
sub
outs
dec
xor
test
sbb
ror
call
xchg
cs
adc
dec
inc
or
jbe
sar
mov
jmp
(bad)
mov
xchg
call
fwait
int3
nop
push
xchg
xor
inc
cmc
sub
cmp
lods
xchg
mov
or
add
in
aad
xor
jmp
push
and
pop
cld
pop
cmp
(bad)
out
fsub
stos
or
cmp
(bad)
(bad)
push
mov
xchg
or
ja
fs
push
stos
inc
dec
fisubr
cmc
fimul
and
mov
sbb
in
in
xchg
(bad)
(bad)
lock
jmp
cmp
pop
xchg
mov
inc
shr
add
(bad)
(bad)
dec
dec
push
sbb
sbb
rcr
or
gs
(bad)
pop
stc
movs
scas
xchg
ss
inc
jns
push
stos
or
and
mov
adc
mov
(bad)
fst
or
jecxz
shl
fldenv
pop
jns
cmp
lea
fidiv
inc
lahf
popf
aaa
ror
js
dec
jb
xchg
shl
scas
out
push
sub
push
pop
cmp
push
pop
sbb
mov
data16
fsubrp
xchg
test
cmp
loopne
call
inc
cld
cmp
fidiv
addr16
cmp
xor
adc
out
mov
push
lock
jl
sbb
pop
mov
imul
mov
(bad)
sahf
pop
fbld
test
or
sub
xor
repnz
test
xchg
sar
mov
mov
sahf
pop
and
sbb
clc
scas
jmp
push
or
sub
dec
xlat
ret
mov
xchg
xlat
jo
jo
push
fs
(bad)
jmp
sbb
jns
cmp
fnstcw
add
test
mov
push
(bad)
cld
out
out
pop
dec
(bad)
mov
xor
movs
mov
or
pusha
push
test
scas
mov
dec
pop
push
test
lds
or
leave
jnp
adc
xchg
in
pop
push
xchg
adc
inc
push
scas
out
pop
dec
cmp
adc
pop
or
dec
sbb
test
fst
not
adc
mov
cmp
lods
aam
or
or
pop
cld
mov
fxch
xchg
mov
sbb
mov
fadd
pop
seta
(bad)
pop
aaa
xchg
cmc
mov
sub
iret
cmp
mov
retf
inc
xlat
dec
in
xchg
jns
cwde
pushf
jmp
mov
sbb
stos
aaa
jb
xor
mov
movs
or
das
mov
stos
pop
test
push
add
mov
out
fbld
mov
dec
push
mov
sub
pop
mov
repnz
in
ss
inc
dec
jmp
fdiv
push
shr
jns
pop
sbb
cwde
pop
inc
fmul
inc
enter
rcr
nop
test
je
pop
xor
ins
mov
call
or
test
and
int3
out
fild
pop
outs
imul
xor
fdivr
push
add
arpl
jae
inc
mov
bound
sub
adc
pop
mov
imul
pop
adc
xchg
mov
pushf
sub
sar
push
popf
out
xchg
fiadd
push
mov
adc
cmp
shr
rcl
and
inc
les
xchg
mov
cmp
mov
cdq
pop
das
cdq
dec
mov
mov
iret
loop
xchg
fstp
ror
xchg
(bad)
int3
loope
push
iret
jmp
inc
(bad)
popa
ret
push
scas
das
out
int
jns
mov
jb
(bad)
rol
sahf
lahf
in
ins
cmova
es
inc
cmc
mov
aam
(bad)
or
loop
std
ins
dec
int3
xor
pop
sbb
mov
cmp
push
scas
or
sub
call
or
xchg
mov
mov
adc
das
aaa
and
xor
push
mov
cmp
out
push
pop
pop
jne
or
fcom
dec
fdiv
and
mov
inc
out
js
mov
cmp
inc
retf
mov
ret
adc
and
les
dec
xchg
sub
cmp
mov
data16
and
push
aam
scas
sar
ss
or
das
mov
pop
outs
das
sbb
(bad)
(bad)
pusha
mov
sar
push
outs
xlat
ret
dec
shl
loope
retf
scas
bound
movs
and
pop
ror
mov
leave
(bad)
xor
push
push
(bad)
sbb
aas
in
les
stc
out
ins
pop
adc
(bad)
xchg
inc
dec
icebp
dec
popa
push
or
(bad)
das
mov
xchg
xor
addr16
popa
mov
daa
ficom
repnz
rcr
ret
jmp
fist
mov
sbb
pop
jne
xor
pop
dec
inc
sub
cmp
(bad)
iret
pop
cmp
jecxz
push
aad
std
fwait
movs
out
cmp
xor
in
fadd
(bad)
jge
(bad)
jbe
fisttp
hlt
outs
xor
icebp
mov
imul
cdq
fidivr
in
pop
jnp
jecxz
dec
rol
in
jo
add
out
nop
out
movs
add
fwait
fwait
iret
call
call
cmp
ficom
outs
arpl
xor
imul
test
sub
adc
mov
xor
or
bound
mov
sbb
mov
dec
nop
and
sub
push
mov
push
cmp
loop
inc
pop
(bad)
push
ss
sbb
cli
cwde
sbb
sub
xor
sub
aas
data16
or
sub
movs
pop
ss
mov
jge
mov
add
push
or
jb
gs
arpl
add
or
loope
movs
out
sub
lds
dec
in
or
cmps
nop
cld
pop
xchg
mov
in
inc
mov
ret
mov
jno
repz
pushf
jb
into
fidivr
test
push
inc
inc
pop
loope
sbb
mov
fist
test
sti
imul
adc
test
idiv
mov
(bad)
push
out
ret
movs
mov
mov
cmp
sub
mov
cwde
xchg
cli
mov
add
(bad)
mov
push
push
loop
ror
cmp
es
xchg
fs
mov
pop
das
ins
aas
pop
cmp
cld
(bad)
and
popa
or
mov
icebp
lock
jbe
imul
push
add
mov
adc
in
and
add
adc
call
jne
and
xchg
pop
popf
sub
(bad)
mov
ret
lock
jbe
fsub
cmp
add
pop
nop
jne
fwait
retf
sub
in
jg
and
mov
es
sbb
and
fnstcw
sub
inc
movs
cmc
xchg
ffree
cmp
mov
push
fs
jl
push
pop
xor
ins
hlt
ss
jne
sbb
sub
rcr
pop
pop
test
add
pusha
les
sti
mov
bound
pop
pop
dec
(bad)
popa
fmulp
and
mov
mov
movs
add
fdivr
cli
rcr
adc
(bad)
int3
xchg
pop
std
mov
loopne
data16
push
pop
sti
in
mov
cmp
lods
shr
call
mov
sub
add
sbb
pop
mul
push
arpl
dec
jbe
push
(bad)
(bad)
mov
(bad)
cli
(bad)
nop
aas
jecxz
pop
out
aas
mov
dec
retf
sbb
pop
int3
cwde
push
pop
mov
inc
call
sub
(bad)
fcmovnu
loope
les
mov
push
and
add
xchg
mov
fist
jno
or
test
test
in
not
push
add
cwde
or
and
aas
mov
(bad)
loop
mov
push
(bad)
mov
dec
xchg
gs
ror
shl
jbe
sub
inc
sbb
test
into
inc
cmps
leave
and
test
out
into
nop
in
mov
sbb
call
in
mov
and
fbstp
sub
aam
adc
daa
hlt
xchg
ja
inc
cmp
cwde
pop
daa
sbb
mov
pusha
cmp
push
cmp
add
adc
cmp
scas
cmps
jbe
ja
jo
mov
sub
pop
push
and
jmp
out
jo
adc
jle
pop
stc
aas
mov
out
sti
(bad)
dec
ret
test
(bad)
mov
xchg
mov
leave
mov
mov
ds
jecxz
fbstp
outs
mov
xchg
xchg
(bad)
mov
mov
mov
mov
fisttp
repz
fst
mov
jecxz
jb
mov
adc
(bad)
jle
in
jg
push
cmps
mov
sbb
pop
push
dec
leave
pop
ds
adc
or
lds
arpl
mov
pop
mov
fld
pop
xor
inc
div
sbb
xchg
inc
push
mov
adc
movs
jp
and
mov
repnz
sub
mov
adc
lea
repz
dec
(bad)
out
mov
rcr
ret
sub
into
cmp
mov
popf
fsubr
pop
sbb
fcomp
outs
mov
xchg
inc
push
int
call
xchg
push
cmp
add
retf
xchg
sub
pop
pop
and
dec
fisubr
jmp
sbb
ficomp
and
aad
push
push
pop
xor
or
dec
out
jg
sub
sti
or
in
(bad)
mov
mov
or
(bad)
push
push
mov
add
pop
mov
hlt
dec
addr16
mov
sbb
mov
fadd
jp
cli
dec
lea
or
and
mov
pop
xor
and
and
push
add
loope
add
push
mov
jno
add
adc
cmc
lds
jge
retf
xor
jp
xchg
sbb
mov
pop
dec
sub
mov
sub
popa
arpl
into
or
pop
into
xor
or
outs
push
not
lea
hlt
mov
ja
pop
dec
or
imul
inc
dec
cmp
loopne
jbe
imul
or
lods
ins
fs
(bad)
sub
ret
mov
ja
inc
dec
add
fnstcw
jmp
mov
test
cmps
nop
(bad)
je
jb
iret
outs
fwait
mov
or
out
mov
mov
xchg
mov
gs
repnz
inc
stos
fwait
inc
retf
mov
and
mov
jg
mov
stos
leave
arpl
sbb
jbe
gs
inc
mov
aas
xor
imul
mov
dec
pop
fstp
jb
pop
ss
adc
mov
and
jecxz
dec
retf
and
jb
xor
pop
sbb
sar
mov
and
push
(bad)
ret
fcmovnb
aaa
push
xor
sbb
lods
push
push
cmp
icebp
shl
addr16
sub
sar
imul
and
test
push
(bad)
adc
repnz
adc
retf
mov
test
jno
outs
mov
xor
int3
xor
xor
and
pop
outs
in
cdq
call
les
ret
inc
data16
ja
test
pop
ins
or
dec
mov
xchg
sti
fisub
rol
icebp
retf
xchg
mul
cs
stos
mov
imul
ja
adc
and
mov
xchg
mov
arpl
xor
ss
cmp
int
(bad)
shr
mov
mov
rcl
xchg
fcomi
scas
ja
inc
sub
sub
sub
leave
das
xchg
mov
test
mov
popf
cdq
test
mov
aad
pop
cmp
or
add
jle
xchg
js
push
data16
xchg
int3
sub
xchg
(bad)
cld
xlat
jns
xchg
ins
inc
cmp
and
scas
mov
jecxz
retf
and
(bad)
mov
rcr
xchg
dec
mov
mov
sub
cmps
das
in
mov
jo
scas
(bad)
inc
inc
hlt
das
shl
cmp
repz
sbb
xor
jbe
fmul
je
les
movs
cli
fucomip
sbb
push
jl
enter
je
xchg
mov
call
push
mov
pop
xor
sbb
xor
mov
mov
ficomp
mov
push
pusha
ret
lds
rol
cmp
jb
or
mov
push
add
pop
pop
je
xor
mov
jbe
and
mov
or
mov
push
xchg
fisttp
pusha
in
ret
fxtract
mov
sub
or
loopne
test
dec
call
repz
js
call
inc
gs
mov
imul
or
(bad)
mov
and
cmp
push
jle
cmps
or
inc
jl
or
xchg
int3
mov
aaa
jge
jp
cmp
loope
(bad)
xchg
xchg
iret
test
int
call
add
push
add
rol
lahf
sub
enter
xchg
div
add
test
imul
sub
adc
mov
cmps
(bad)
dec
test
rcr
jecxz
adc
cmps
shl
retf
loop
cmp
inc
(bad)
fnstcw
(bad)
outs
sub
sbb
ret
inc
pop
or
movs
addr16
fimul
xlat
or
jg
call
je
lock
jne
jno
inc
cmp
sbb
sub
mov
cmps
xchg
cdq
push
inc
fstp
dec
inc
lods
mov
mov
dec
inc
les
daa
repnz
xchg
or
adc
cmp
(bad)
loopne
mov
mov
(bad)
cmps
cmova
jae
cmps
outs
icebp
mov
retf
push
mov
daa
or
xchg
pop
mov
sub
push
or
and
lds
cmps
shl
mov
movs
bound
mov
lahf
dec
cmp
out
cmps
in
ret
retf
rol
rcl
retf
sbb
ins
outs
and
rcl
pop
sub
aad
or
int3
sbb
push
out
sbb
cmp
and
push
sub
imul
popf
xchg
push
cmp
repz
jnp
mov
cmps
jmp
lods
mov
mov
mov
gs
outs
lock
mov
fist
shl
js
pop
icebp
mov
adc
das
cli
popf
nop
fild
mov
ja
dec
outs
adc
jnp
adc
stos
cdq
cmp
pop
(bad)
mov
rcr
mov
popa
mov
aas
std
jge
sub
mov
(bad)
sbb
scas
pop
rol
out
adc
shl
adc
mov
xchg
push
cdq
test
(bad)
lock
bound
addr16
daa
mov
or
lods
out
test
ja
aaa
sbb
imul
aad
mov
mov
mov
jl
jg
inc
push
stos
out
out
(bad)
icebp
test
popf
mov
adc
add
(bad)
jg
lea
fwait
clc
call
stc
jns
test
cmc
in
call
ins
in
cwde
push
cmps
aam
pop
out
push
popa
sbb
sub
cmp
push
imul
dec
movs
push
not
dec
push
push
stc
and
xor
xor
out
in
mov
mov
repz
out
lods
mov
in
add
mov
into
cmp
out
popf
es
pop
mov
pop
and
lock
mov
cmc
(bad)
mov
loop
mov
and
fisttp
loope
(bad)
popa
sub
and
mov
(bad)
cmp
jnp
xchg
loopne
dec
push
scas
cdq
push
gs
in
dec
out
xor
fst
cli
dec
or
cmp
mov
xor
aas
out
cmc
in
call
cmp
shr
mov
dec
or
(bad)
(bad)
stos
fstp
shl
and
cmp
out
pop
mov
sbb
mov
ror
nop
icebp
mov
aas
out
and
and
dec
jno
mov
jns
sub
xchg
adc
xlat
in
movs
or
mov
lea
retf
outs
mov
jp
adc
xchg
push
ja
or
out
cs
mov
push
xchg
inc
ja
mov
push
sbb
dec
(bad)
loopne
out
pop
gs
sahf
fs
inc
xor
icebp
mov
bound
push
pop
les
addr16
adc
js
popf
imul
pop
das
mov
daa
(bad)
mov
fisubr
xchg
mov
jo
enter
int
xor
dec
mov
or
jnp
and
sti
lock
jmp
leave
rcl
pop
ds
add
jns
test
push
sti
bound
xor
cwde
mov
xlat
pushf
or
movs
mov
jb
(bad)
iret
aad
stc
cmps
fwait
into
rcl
pop
rcl
movs
mov
mov
inc
outs
repnz
or
mov
icebp
arpl
xor
mov
pop
sbb
test
pop
out
rcr
sbb
lods
add
mov
fwait
data16
loop
inc
pop
adc
inc
icebp
sahf
lods
pop
hlt
in
stos
mov
cld
and
cdq
sbb
lds
fwait
data16
push
repnz
jb
sub
pop
scas
movs
mov
cmp
aam
icebp
jb
adc
sti
pop
push
or
call
adc
dec
jmp
out
sbb
dec
in
dec
push
mov
les
cmps
or
lahf
pop
fidivr
fdiv
inc
mov
sbb
data16
dec
mov
pop
sti
call
add
mov
cmps
out
js
enter
loopne
pop
in
and
and
xchg
fadd
and
mov
repnz
inc
in
or
jne
pop
shl
mov
movs
push
push
sti
in
call
lahf
ja
jle
mov
imul
jecxz
out
gs
sbb
ficom
cmp
sbb
test
xchg
mov
dec
jmp
lahf
jae
icebp
test
jno
inc
pop
push
das
adc
xor
xchg
aaa
(bad)
cmps
add
mov
retf
mov
fcmovbe
movs
xchg
push
or
cmp
pop
mov
movs
mov
adc
adc
lods
adc
add
pop
adc
pop
pop
sbb
push
movs
pop
fistp
push
xchg
arpl
pop
xor
adc
shl
cmp
leave
aaa
xchg
(bad)
ret
mov
hlt
xor
xchg
(bad)
cmp
call
add
mov
pop
add
cmp
push
fdiv
lods
sbb
pop
data16
cmp
ins
mov
inc
push
jne
enter
repz
or
(bad)
sahf
sbb
gs
push
test
imul
jl
sbb
sub
xor
lods
sbb
mov
fs
lahf
add
push
mov
dec
adc
xchg
dec
sbb
mov
inc
shr
mov
sbb
xchg
hlt
or
cmc
mov
inc
pop
lea
sbb
sbb
add
mov
out
xor
inc
xor
mov
iret
lds
jmp
push
in
and
push
dec
retf
cld
call
mov
test
(bad)
mov
add
sbb
pop
lods
pop
fst
add
jecxz
aaa
ins
in
push
jns
xor
xchg
fdivr
or
or
test
sub
data16
adc
dec
adc
in
cmc
and
sub
scas
(bad)
cmps
fld
sub
adc
jno
and
hlt
xlat
xchg
loope
cdq
and
into
inc
sub
(bad)
in
xor
icebp
inc
cld
fst
xchg
aas
cld
mov
dec
movs
mov
fcmovbe
dec
xchg
jg
push
clc
and
mov
bound
and
mov
dec
outs
aad
inc
rol
or
scas
mov
jae
pop
xor
call
leave
test
call
mov
mov
add
jo
ins
push
push
xchg
mov
xchg
push
mov
fdiv
push
xor
ins
xchg
sub
jmp
mov
inc
data16
push
(bad)
xchg
sti
int
inc
shl
xor
sub
cmp
or
test
jp
pusha
shl
outs
hlt
scas
inc
xor
and
adc
cmp
jae
pop
ins
nop
push
ds
jge
and
dec
mov
rol
jo
(bad)
ficom
rcr
mov
xor
mov
test
add
add
inc
jecxz
add
dec
ins
inc
xor
stc
cmp
fidiv
xchg
mov
sahf
pusha
int3
or
mov
push
or
clc
add
add
adc
xchg
sbb
adc
cmps
xchg
push
in
addr16
xor
inc
shl
push
pop
lea
dec
fs
xchg
mov
adc
shl
xchg
lahf
and
add
es
mov
daa
jno
popa
pop
or
mov
push
xchg
inc
stc
cli
mov
pop
sahf
mov
dec
dec
ins
sub
das
jbe
fs
push
in
sbb
sub
add
push
in
jl
ds
mov
inc
cdq
fcomp
(bad)
hlt
lds
mov
sar
jns
mov
or
scas
inc
or
jne
call
cmp
sahf
call
push
mov
movs
sub
daa
mov
or
lea
fyl2x
imul
das
adc
(bad)
jno
pop
jmp
pop
je
je
pusha
or
cli
retf
sub
pop
fmul
es
push
out
in
sbb
cs
ret
outs
pop
fist
ret
pop
pop
sti
mov
fimul
xor
sbb
popf
mov
inc
scas
jmp
push
idiv
rcr
fcomp
mov
mov
sub
mov
xchg
mov
arpl
xchg
mov
in
js
mov
popf
or
jp
cmc
fist
dec
dec
add
xchg
cmp
push
mov
lds
lock
in
repz
jmp
xchg
mov
out
xchg
xor
scas
pop
sbb
pusha
sub
cmps
cli
mov
loop
inc
out
cmp
cmp
adc
sar
fisttp
mov
adc
stos
and
outs
adc
(bad)
retf
pop
jnp
bound
daa
mov
mov
dec
push
xchg
movs
xor
sbb
cmp
xchg
sbb
pop
shl
rcr
fwait
cs
es
arpl
adc
sbb
inc
sbb
jb
rcr
sub
nop
fidiv
inc
and
jne
movs
inc
popf
jecxz
add
fcomp
scas
into
shr
inc
pop
pop
retf
dec
mov
dec
pop
dec
jne
xchg
push
retf
out
aaa
add
ja
mov
xor
scas
xor
mov
and
push
std
out
repnz
outs
pop
retf
xor
xor
sub
inc
gs
(bad)
adc
sbb
lahf
mov
pinsrw
mov
mov
xor
lods
mov
in
adc
bound
jne
xchg
out
popa
fnop
aas
movs
(bad)
mov
call
pusha
pop
push
outs
rol
sbb
es
sbb
xor
mov
xchg
mov
add
inc
data16
out
adc
aad
xlat
push
cdq
cmp
out
js
sbb
movs
pop
mov
adc
cmovno
inc
add
adc
dec
jns
sbb
add
and
xchg
pop
mov
movs
mov
dec
nop
pop
and
xchg
stos
ror
mov
ds
and
popf
jne
call
pop
jge
add
jnp
inc
mov
xlat
jl
or
js
jnp
hlt
out
jg
and
xchg
out
jecxz
mov
xchg
hlt
mov
mov
mov
and
pushf
xchg
pop
movs
dec
mov
xor
mov
ins
push
mov
les
fs
xor
xchg
mov
or
inc
addr16
stc
and
mov
rcl
mov
stos
das
mov
cmp
imul
xchg
sbb
dec
frstor
mov
pop
daa
repnz
pop
mov
aas
aaa
mov
push
xchg
cmc
fisttp
cmps
push
out
and
inc
clc
leave
dec
rcr
add
jle
mov
dec
scas
or
(bad)
push
sub
add
loopne
inc
adc
bswap
or
fnstsw
aaa
cmp
je
mov
ss
dec
arpl
pop
inc
mov
(bad)
pusha
or
push
xchg
mov
xor
push
xlat
or
cmp
repnz
jb
mov
ret
fcomp
mov
inc
stos
xchg
pop
or
idiv
fstp
xor
cmc
mov
loop
adc
push
sbb
scas
xchg
push
and
dec
pop
inc
in
(bad)
push
jne
rol
jo
xor
jecxz
ss
xchg
fcom
sub
jp
mov
inc
mov
scas
jmp
add
js
fcomp
lahf
sbb
cmp
or
pop
push
lods
iret
fistp
xchg
xor
mov
and
addr16
fwait
inc
add
inc
sub
adc
mov
mov
xor
shr
adc
cmp
mov
mov
lahf
rcr
cli
(bad)
jo
frstor
(bad)
clc
addr16
cld
xchg
xchg
outs
cmp
sar
push
xchg
xchg
mov
outs
jb
ins
cmp
out
push
fisub
mov
addr16
push
push
sub
mov
ret
pop
add
cdq
mov
int3
movs
cmp
jmp
sub
mov
add
enter
rcr
cmp
aad
dec
push
cwde
mov
xor
and
inc
xlat
fdivr
enter
pop
dec
imul
add
out
into
aas
mov
test
pusha
and
fisub
push
cmp
into
mov
or
mov
mov
cmp
ror
dec
add
(bad)
retf
adc
mov
or
loope
cld
mov
mov
mov
sbb
push
cmp
pop
test
xor
jle
dec
imul
pusha
das
ret
not
rol
mov
(bad)
retf
sub
pop
cmp
push
in
or
fisubr
test
xchg
sbb
adc
loopne
cs
mov
and
mov
int
jge
sub
sbb
(bad)
mov
rol
fist
(bad)
xor
push
or
cld
ins
call
leave
mov
mov
pop
mov
cmp
scas
fcmovnbe
mov
ja
lea
push
(bad)
das
xor
clc
push
dec
pop
push
dec
js
dec
mov
ret
inc
js
cwde
sbb
jnp
movs
int
inc
push
dec
sub
sub
shr
ud1
mov
adc
mov
xor
jle
jno
push
dec
test
adc
data16
mov
mov
cmp
or
dec
cmp
xor
(bad)
push
inc
inc
neg
gs
add
cmp
adc
addr16
jmp
int
lahf
sub
vcvtps2dq
test
mov
std
bound
xlat
data16
push
pop
inc
push
mov
int3
retf
nop
pop
add
xchg
jb
mov
loopne
jecxz
test
shr
data16
aad
lods
fst
fcom
push
inc
and
or
call
fadd
jae
mov
xchg
jle
xchg
adc
aaa
popa
pop
xor
loop
mov
pop
sbb
mov
push
aad
retf
in
retf
pushf
cs
jecxz
cmp
repnz
mov
or
idiv
imul
sbb
shr
push
not
sti
not
and
add
icebp
loope
xor
and
mov
pop
aad
dec
or
imul
lds
fwait
es
es
and
ins
call
loopne
fld
cli
int
loop
cmps
repnz
pop
retf
scas
pop
(bad)
loopne
test
and
jecxz
pop
rcr
push
inc
xchg
loopne
addr16
push
repnz
or
es
mov
mov
sbb
sbb
or
or
xchg
sbb
push
mov
dec
gs
daa
jno
iret
jno
mov
inc
dec
daa
adc
test
dec
inc
icebp
cmps
cdq
add
mov
jg
dec
adc
popa
scas
mov
jns
jle
and
cmc
mov
add
fnstcw
push
idiv
cmp
mov
fcom
push
mov
xor
and
mov
pop
mov
mov
aas
mov
pop
jae
mov
mov
or
or
clc
sub
not
mov
pop
mov
jle
jg
scas
std
ficomp
jnp
xor
mov
pop
adc
ins
push
in
aad
dec
nop
pop
loop
xchg
jns
cmps
ins
mov
addr16
jbe
iret
pushf
stc
or
sbb
loope
pop
mov
sub
mov
xchg
adc
mov
test
imul
frstor
push
sub
cmp
cmp
loopne
repnz
xlat
rol
dec
and
data16
rol
test
into
jo
jl
nop
scas
inc
push
push
xor
pop
sub
stos
rol
adc
jge
jle
sub
(bad)
fucomp
mov
jecxz
xor
mov
fwait
pop
js
mov
aas
cmp
int
arpl
enter
pusha
pop
test
(bad)
(bad)
(bad)
ss
lods
fisubr
adc
shrd
fs
loop
cmp
aam
inc
fs
les
add
jbe
push
jnp
aad
inc
ins
nop
push
es
push
cmp
jb
push
push
dec
jp
lock
xor
jo
and
fsubr
pop
shl
sar
xor
mov
out
pop
or
and
dec
shr
clc
sbb
test
pop
lods
mov
sub
xchg
mov
cmp
xor
lock
ja
movs
mov
push
aam
cmp
or
lock
int3
cs
fild
mov
xchg
fwait
scas
mov
int3
in
sahf
mov
mov
lds
ss
sub
and
jnp
jae
pop
inc
mov
push
arpl
jae
and
cdq
pop
and
fs
outs
sub
push
cmp
fdivr
retf
xor
adc
mov
xor
call
inc
retf
sbb
retf
cli
push
imul
jne
mov
retf
inc
dec
lods
jnp
cli
push
cs
in
and
ins
jmp
not
push
dec
fistp
in
inc
jbe
sub
ins
pop
scas
adc
inc
sub
lods
mov
movs
adc
ret
push
in
sub
sbb
sti
aas
add
mov
cmc
mov
mov
test
and
stos
pop
adc
cmps
test
xor
test
inc
movs
xor
and
adc
fs
adc
ror
out
adc
mov
movs
mov
movs
iret
in
ret
jmp
scas
fucomip
cmp
inc
ins
pop
inc
cmp
lds
test
mov
sbb
pusha
cmc
mov
popf
pop
jecxz
mov
sub
xor
and
test
test
ret
lods
xchg
mov
sub
js
xchg
mov
and
mov
fidiv
xor
and
cmp
test
mov
adc
sti
cli
shl
jo
lock
mov
fwait
mov
dec
mov
jnp
clc
and
pop
ror
rcl
fnstenv
pop
neg
stc
loope
mov
mov
push
dec
add
movs
dec
mov
dec
mov
(bad)
adc
scas
or
sub
rol
mov
rcr
inc
xchg
dec
cmp
mov
clc
add
adc
push
lods
add
scas
mov
gs
xchg
lea
xlat
mov
add
popf
mov
dec
ja
xchg
gs
sahf
pop
fwait
test
mov
jae
test
mov
dec
mov
push
gs
push
cmp
out
ret
repnz
cmp
mov
mov
dec
stos
sub
outs
mov
fnstsw
test
out
mov
inc
sbb
push
sub
dec
in
add
(bad)
daa
jmp
mov
jnp
add
pop
les
mov
rcr
fwait
jge
jae
adc
mov
repnz
cmp
xchg
xlat
mov
(bad)
ret
das
sbb
test
push
xor
ss
inc
sbb
pop
imul
(bad)
jmp
inc
gs
sub
mov
xor
mov
and
rol
ds
mov
mov
jle
sbb
push
fiadd
inc
shl
push
jge
push
xor
lds
adc
das
arpl
movs
inc
ds
pop
xchg
or
and
mov
in
cmp
pop
mov
fcmovnb
xor
pop
test
mov
add
es
(bad)
adc
xlat
mov
shl
inc
mov
repz
jae
add
aad
(bad)
lods
dec
add
in
jmp
jb
out
mov
and
movs
bound
cmp
faddp
nop
(bad)
mov
add
rcr
xor
retf
(bad)
lock
ret
mov
lock
sbb
xchg
cmc
pusha
pop
dec
fwait
sete
lods
stos
lock
xor
gs
cs
jge
rcr
push
mov
inc
cmp
xchg
gs
or
lahf
imul
ffree
pushf
call
push
cld
add
int3
adc
inc
es
and
jno
or
cmc
retf
(bad)
test
mov
jns
ins
pop
sbb
jecxz
lea
pop
jecxz
jmp
bound
push
adc
cs
jg
mov
outs
data16
and
cmc
mov
cli
jl
test
push
lds
xor
std
xchg
movs
mov
scas
loope
stc
retfw
jle
popf
jge
dec
or
dec
gs
jno
iret
xchg
std
in
pop
mov
dec
mul
(bad)
frstor
retf
mov
pop
cmp
push
ret
nop
(bad)
push
lds
(bad)
ins
jae
popa
xor
pop
cld
(bad)
hlt
cld
mov
dec
or
hlt
in
enter
(bad)
jbe
movs
mov
out
push
retf
jbe
daa
cwde
inc
jmp
jle
cdq
icebp
pop
sbb
inc
(bad)
(bad)
mov
test
dec
(bad)
cld
popa
fistp
ret
test
dec
(bad)
jl
not
jb
fild
or
fisttp
mov
add
cmp
iret
mov
rcl
ss
mov
sbb
dec
je
std
sti
imul
jae
cmp
xchg
aad
ins
xor
xchg
inc
sahf
pop
scas
sub
cmp
or
out
lods
dec
mov
mov
clc
cmp
out
scas
xor
adc
mov
mov
sub
test
xchg
sbb
adc
mov
mov
(bad)
bound
jo
in
inc
push
std
out
jbe
repz
shl
push
inc
gs
loope
rcl
call
add
mov
mov
je
enter
scas
xlat
jg
xor
sti
fisub
int3
xlat
xor
fiadd
cdq
inc
or
pop
push
xor
jmp
jmp
mov
mov
dec
out
mov
mov
or
push
mov
pop
in
outs
pop
push
sub
daa
rep
mov
jno
je
lds
pop
and
fs
repz
fidiv
sub
std
jnp
cmp
mov
cmps
pop
cld
jle
out
xor
pop
push
outs
or
mov
stos
add
arpl
lds
cs
and
out
mov
call
inc
mov
pop
fimul
push
pushf
aam
xchg
test
and
jecxz
mov
cli
mov
aam
push
xlat
shl
sub
jl
mov
sti
ins
retf
fs
sbb
xchg
sub
loopne
sbb
push
pop
jecxz
xor
xchg
retf
dec
enter
int3
mov
movs
scas
lahf
fcomp
push
push
jmp
pop
mov
pushf
lock
pop
inc
push
inc
lods
pop
adc
pop
dec
adc
loopne
mov
inc
cmp
in
xchg
test
dec
cdq
lds
nop
sbb
fmul
(bad)
inc
dec
push
mov
addr16
fst
not
rcl
pop
cs
scas
inc
cmp
sbb
sub
sbb
xchg
add
xlat
std
mov
mov
dec
rcr
jg
call
fs
cmp
dec
daa
xchg
mov
xor
bound
push
add
fdiv
(bad)
dec
or
sbb
mov
mov
mov
xlat
dec
(bad)
ja
mov
call
lock
push
out
sub
xchg
fcmovne
fld
fidiv
jp
mov
mov
add
aaa
rcr
lock
inc
idiv
fs
ja
jle
dec
loopne
stc
sbb
and
test
add
push
pop
xor
mov
push
mov
(bad)
sub
ss
xor
sbb
js
scas
fmul
sbb
lea
push
push
out
jno
jmp
dec
stos
sbb
js
in
call
jge
fs
inc
lods
mov
imul
lock
in
mov
imul
adc
mov
jb
loop
test
in
repnz
push
xor
jmp
ret
push
push
fisttp
fsub
repz
add
int3
and
bound
loopne
enter
and
lods
mov
add
aam
mov
imul
adc
cmps
dec
mov
stos
call
sbb
cld
jg
cmp
pop
mov
jne
and
outs
mul
data16
cmp
nop
loop
lds
push
lock
aaa
sbb
adc
cmp
int
retf
cdq
mov
test
xchg
fs
loope
stos
pop
xor
mov
nop
add
jmp
xor
outs
mov
repz
xchg
and
ffreep
cmc
pop
shr
cmp
jae
jo
cwde
cwde
sbb
mov
outs
xchg
ins
xchg
loopne
lods
repz
out
mov
fcomip
jl
scas
retf
movs
test
jne
mov
aaa
mov
fcomp
sti
mov
jmp
adc
ret
enter
xor
sar
jne
jno
jmp
xor
xchg
inc
xchg
scas
mov
push
inc
dec
in
cmp
ja
movs
dec
push
cmp
jle
xlat
mov
sbb
xchg
cwde
fwait
inc
cld
mov
and
test
ret
ret
sub
pop
pop
out
dec
or
cmps
aam
mov
add
mov
call
push
jle
sbb
mov
call
sahf
fsubr
or
and
pop
inc
push
mov
ins
jbe
ror
cmp
mov
leave
aaa
inc
cmp
test
fwait
lea
dec
js
and
jmp
cld
or
and
ds
stc
sbb
shr
(bad)
push
es
push
in
lods
and
imul
retf
jbe
sub
pusha
dec
mov
scas
push
fcmovne
lock
sbb
pop
dec
adc
retf
ins
retf
inc
movs
repnz
fistp
ret
jg
cwde
sbb
sbb
jb
sbb
out
(bad)
fld
call
mov
shr
adc
movs
sbb
adc
adc
add
jae
int3
fldenv
sbb
jne
call
sbb
arpl
mov
mov
dec
xchg
mov
into
sbb
mov
int
push
hlt
adc
dec
mov
sbb
int
jb
mov
mov
fist
lds
ret
rcl
inc
jnp
iret
adc
mov
sub
test
jecxz
jmp
xchg
cld
test
fucom
pop
inc
loope
ret
cs
lods
jne
dec
adc
retf
ds
xchg
nop/reserved
xchg
push
mov
cmp
fisubr
sub
mov
aad
or
(bad)
pusha
and
fwait
pop
test
sub
mov
xchg
sbb
ins
adc
mov
mov
sub
or
test
mov
push
mov
pusha
xchg
dec
shl
inc
loope
and
push
or
jp
xchg
jge
sub
mov
es
xchg
mov
cwde
dec
sub
jb
jge
cli
pop
ficomp
jae
push
adc
push
ins
jae
jmp
mov
fwait
mov
xchg
push
call
or
mov
sub
inc
mov
popf
not
loopne
xchg
daa
mov
xchg
dec
(bad)
stc
shl
gs
jl
mov
dec
push
bound
lds
int3
rol
lea
push
dec
xchg
lea
outs
mov
inc
frstor
arpl
ins
push
mov
mov
dec
retf
neg
addr16
pusha
rcr
mov
and
push
int
mov
cdq
mov
or
imul
mov
call
or
cmp
inc
push
fwait
retf
xchg
fs
jmp
jno
sbb
mov
sbb
test
call
add
lock
cmps
jge
jno
push
mov
xchg
sahf
xor
and
cmc
lods
dec
call
icebp
cmp
js
sbb
pop
pusha
in
xchg
bound
sbb
cs
mov
add
pop
stc
jge
sub
movs
outs
rcl
sub
rol
and
in
push
inc
xor
mov
out
movs
das
in
cmps
outs
dec
rcl
add
out
inc
jmp
(bad)
and
cmp
xor
sbb
rcl
inc
jno
call
lahf
xor
ret
aaa
push
call
or
pop
pop
test
jmp
ins
pop
push
xor
mov
stc
add
adc
test
sub
cli
loopne
inc
xchg
adc
out
cmp
mov
mov
lea
dec
clc
fstp
dec
retf
aam
inc
mov
mov
push
push
fmul
shl
imul
mov
pop
sbb
jb
pusha
mov
push
cmp
call
scas
lahf
and
add
inc
xlat
mov
out
std
or
iret
mov
sub
cli
dec
lahf
jbe
fnsave
loop
cli
or
mov
pop
sbb
or
clc
fnstcw
fisub
add
retf
loopne
add
inc
fisttp
add
cmp
pusha
adc
aam
mov
mov
jb
mov
outs
pop
cmp
pop
jge
fmul
or
pop
adc
ret
sub
xor
popf
dec
sbb
nop
add
dec
inc
xor
adc
bound
pop
stos
jne
arpl
push
icebp
int3
pop
or
or
push
and
cmp
xor
xchg
loopne
xor
aad
dec
iret
xchg
clc
cmc
inc
clc
pop
outs
mov
mov
inc
adc
in
call
cmp
sbb
mov
shrd
lods
xor
popf
jno
push
jp
cwde
push
dec
(bad)
mov
cwde
xor
not
cmp
cmp
xchg
sbb
std
dec
idiv
add
dec
(bad)
jno
push
stos
pop
mov
mov
je
lods
ins
sbb
xchg
ins
lods
lea
dec
lahf
inc
add
outs
mov
test
add
ins
push
shl
dec
sbb
jmp
test
push
mov
clc
cmp
and
ds
push
pop
aam
sub
pop
mov
clc
add
icebp
std
pop
mov
test
test
call
mov
xor
loopne
mov
sahf
loopne
jno
push
push
or
pop
ret
das
cdq
jno
(bad)
in
mov
call
rol
in
hlt
or
daa
imul
ins
and
shl
add
loopne
mov
leave
sbb
lods
ret
xchg
add
fnstcw
fist
mov
aaa
call
xor
pop
sub
sahf
ror
lods
bound
hlt
xor
rcl
and
push
js
jae
test
loop
(bad)
mov
and
add
and
add
xlat
push
ins
ja
push
fxch
dec
imul
gs
retf
jnp
jae
ins
clc
mov
jmp
movs
retf
jbe
sti
dec
imul
sbb
and
dec
inc
cmp
cmp
pop
inc
stos
out
mov
fst
pop
aad
repz
mov
mov
dec
imul
mov
mov
pop
inc
cwde
mov
jne
popa
add
test
pop
scas
(bad)
xor
xor
ret
adc
or
cwde
cmp
pop
mov
stos
nop
and
xchg
sbb
mov
inc
mov
push
cmp
mov
push
pop
or
imul
bound
mov
fwait
push
xchg
or
mov
mov
test
daa
lea
outs
adc
mov
lahf
push
push
out
test
and
xchg
or
add
ret
cmp
jno
mov
div
cs
(bad)
mov
mov
bound
mov
lock
dec
cld
popf
adc
adc
push
sahf
add
add
pop
sar
lahf
data16
pop
neg
movs
test
mov
nop
cmp
ficomp
push
mov
les
popf
cmp
lods
(bad)
xchg
and
sub
push
xor
arpl
pop
mov
das
repnz
mov
jo
popf
test
mov
stc
sbb
mov
dec
dec
(bad)
(bad)
movs
jmp
xchg
sbb
popa
arpl
es
dec
push
popa
adc
inc
inc
mov
movs
jnp
add
loop
sbb
ins
inc
mov
fnstsw
fdivr
movs
test
gs
xchg
push
sbb
icebp
jo
mov
aaa
ss
jg
mov
jnp
mov
jmp
ins
push
mov
mov
retf
mov
retf
fsub
jp
inc
sbb
les
ss
mov
sub
pop
imul
imul
mov
cmp
or
pop
pop
dec
nop/reserved
stos
in
and
dec
jecxz
xchg
pop
ret
(bad)
pop
in
push
jo
xor
dec
or
call
pop
adc
jge
mov
add
outs
test
stos
out
jmp
xchg
daa
and
or
add
ret
imul
or
inc
je
pop
imul
xchg
outs
adc
sub
inc
imul
std
sbb
pop
push
out
dec
icebp
test
inc
clc
lods
leave
retf
jl
jb
test
cmps
xor
mov
jbe
gs
mov
arpl
cmp
jp
test
(bad)
or
cs
or
and
xchg
pop
push
jp
retf
mov
push
or
xor
cmp
ins
cmc
les
aaa
dec
jae
sar
dec
push
and
fs
test
es
mov
mov
(bad)
stos
mov
cmp
ss
xchg
push
jae
movs
lea
enter
movs
mov
imul
dec
lea
fsub
xlat
mov
into
sub
jne
pusha
aam
adc
cmp
dec
test
and
cmps
loopne
mov
in
jno
in
mov
and
fisub
jmp
mov
int3
cmp
es
jl
(bad)
sbb
nop
shl
mov
stos
add
mov
mov
lea
dec
mov
mov
jae
retf
xor
and
or
(bad)
aam
retf
cmp
les
popf
push
cld
cmp
xor
add
mov
mov
cs
ins
stos
ss
mov
push
mov
push
add
jno
and
lods
or
jae
out
(bad)
(bad)
add
adc
jg
xchg
leave
xchg
mov
xlat
and
scas
ja
pop
xor
jle
cdq
pop
jae
push
mov
scas
pop
adc
push
push
push
xchg
mov
push
stos
dec
sti
(bad)
fsub
outs
inc
push
mov
imul
int
jb
stc
or
das
popf
sub
dec
or
pop
loopne
stos
imul
sbb
mov
lea
call
dec
add
ret
fld
mov
or
std
mov
repnz
inc
or
daa
mov
xor
test
aad
push
sub
or
test
add
inc
(bad)
jmp
out
jo
pop
sub
pop
add
cli
leave
lods
push
mov
pushf
xlat
pop
pop
pop
pop
in
jno
fcomp
and
jae
call
xor
mov
adc
mov
add
mov
jnp
fnstcw
pop
jmp
inc
mov
les
push
loop
mov
push
jl
mov
jl
test
xlat
dec
push
adc
mov
add
loop
pushf
test
enter
push
cmp
mov
jo
and
enter
mov
(bad)
(bad)
pop
pop
cmc
lahf
xchg
xor
jle
jmp
cmp
adc
xchg
lods
dec
mov
aam
rcr
xchg
cmp
movs
xchg
push
adc
fwait
test
in
push
and
rcr
or
das
add
jl
jge
mov
adc
ret
in
adc
sbb
aaa
ret
mov
inc
repnz
dec
(bad)
cdq
shl
adc
jo
push
sahf
dec
jmp
lods
fistp
mov
shl
cmp
fcmovb
fidiv
ss
rcl
jl
ret
clc
push
inc
adc
cmps
imul
mov
xchg
mov
sbb
mov
int
shr
mov
mov
xor
pop
push
outs
in
xor
add
in
push
lahf
xchg
add
sbb
js
mov
inc
jmp
(bad)
int
xor
xchg
arpl
jge
or
mov
imul
mov
jmp
and
test
daa
xchg
inc
pop
mov
xor
inc
in
test
cmp
sbb
shr
push
(bad)
sahf
and
push
adc
or
dec
and
cmp
iret
xchg
shr
cli
jo
retf
xchg
xchg
aam
sbb
jmp
repz
sbb
(bad)
(bad)
and
adc
sub
mov
inc
jp
cmp
add
stos
call
fdivp
sub
cmc
je
out
jg
lods
in
inc
clc
jl
scas
sbb
add
fist
or
(bad)
js
mov
int3
mov
and
in
mov
sub
push
(bad)
in
(bad)
repz
sahf
jl
test
mov
js
adc
cmps
pusha
adc
fcomp
push
or
push
mov
in
mov
in
sbb
mov
test
in
adc
xchg
xchg
push
aad
imul
mov
mov
pop
or
mov
(bad)
outs
mov
xchg
mov
adc
pop
in
js
pop
test
push
pop
xchg
into
cld
sbb
mov
in
sub
push
aas
(bad)
dec
inc
and
add
clc
push
repnz
ins
mov
mov
sbb
pop
jmp
cmp
hlt
loope
mov
xor
out
jle
jg
dec
dec
mov
or
fmul
mov
pop
stos
push
jae
mov
popa
cld
aad
and
movs
loopne
sbb
aad
jbe
xor
inc
into
cmp
or
mov
pop
mov
and
cmp
cmp
or
popa
push
rcr
out
push
cmp
push
fs
cdq
sbb
in
adc
outs
and
cmc
mov
dec
cmp
and
popf
cmp
ret
cmp
das
xor
mov
adc
push
jecxz
and
push
xchg
ds
ja
adc
xchg
cwde
ds
mov
(bad)
jo
lds
mov
lods
jecxz
sub
mov
xchg
and
outs
or
jecxz
das
dec
lahf
shl
ror
jecxz
hlt
ror
mov
mov
in
mov
pop
cmps
test
mov
pop
cmp
and
adc
push
push
inc
xchg
dec
inc
dec
dec
and
mov
jl
icebp
or
faddp
sbb
mov
rcr
iret
leave
cmp
push
sub
mov
call
mov
mov
gs
mov
push
add
out
or
adc
pop
and
fistp
pop
out
(bad)
jg
out
xchg
xchg
mov
test
sar
repz
mov
leave
movs
(bad)
push
sub
xchg
pop
cmc
dec
jecxz
cmp
icebp
push
inc
cmps
mov
mov
jne
jae
mov
popa
pop
adc
fnstcw
out
clc
stc
ret
loop
fimul
rcr
adc
sub
call
jl
mov
sub
fwait
stos
sbb
mov
jne
cmps
ror
imul
cli
sbb
adc
fdivr
nop
fcmovbe
sub
call
outs
mov
push
add
jne
jb
sbb
mov
cdq
pop
out
inc
sar
std
(bad)
xlat
enter
inc
repnz
pop
data16
and
call
out
xchg
jo
lahf
cmp
or
(bad)
fs
push
jb
mov
mul
outs
adc
cmps
(bad)
mov
pop
shl
(bad)
xor
nop
mov
in
(bad)
fsubrp
sub
add
in
test
cmp
jge
pop
push
inc
shl
xor
daa
pushf
mov
in
mov
push
(bad)
mov
pop
cli
cwde
shr
cs
xchg
ret
mov
inc
jecxz
inc
xchg
int3
hlt
ret
add
adc
xchg
stos
or
(bad)
mov
mov
mov
pop
lods
sahf
lahf
sub
xchg
hlt
jg
and
call
popa
movs
xchg
jb
push
push
test
mov
and
imul
fmul
les
jbe
xchg
mov
sbb
mov
pop
mov
xchg
fsubrp
into
cmp
pusha
dec
hlt
enter
pop
in
ss
dec
jae
pop
push
ret
fld
push
mov
and
jno
test
hlt
mov
pop
clc
jmp
sub
icebp
movs
test
(bad)
cmp
mov
int3
or
xchg
inc
cmp
inc
aaa
or
inc
popa
ins
aas
mov
mov
scas
mov
in
ins
aad
mov
jp
hlt
(bad)
dec
push
inc
jle
lds
mov
pop
cmps
add
and
xchg
les
add
or
or
xchg
nop
mov
mov
shr
push
aaa
and
push
inc
cmc
test
push
mov
retf
sbb
aaa
repnz
clc
fisub
jne
push
and
jle
dec
push
add
mov
movs
rcl
push
mov
mov
sub
sbb
mov
xor
jl
call
pop
les
arpl
mov
mov
mov
dec
mov
dec
rcr
jae
shl
lea
sub
popf
push
shr
mov
imul
movs
mov
ds
in
sub
arpl
xor
push
jp
push
mov
add
sub
inc
lea
mov
inc
test
lods
mov
jno
add
fstp
je
outs
inc
sahf
mov
mov
cld
test
adc
rcl
outs
mov
mov
cli
aam
cdq
push
jge
push
ins
jbe
mov
xchg
jmp
push
add
or
nop
(bad)
xchg
mov
xchg
cmp
in
cmp
data16
jbe
test
retf
outs
xchg
sbb
int
das
pop
push
sbb
(bad)
mov
test
jmp
sbb
xor
xor
test
add
call
inc
cmp
in
cli
cdq
sbb
mov
cmps
in
sbb
movs
mul
ins
movs
popf
popf
es
inc
mov
jbe
retf
(bad)
shr
dec
mov
out
and
test
sbb
push
adc
repnz
jmp
and
mov
add
fiadd
xchg
icebp
pop
bound
push
mov
cmp
enter
dec
push
dec
mov
(bad)
mov
adc
fld
mov
hlt
dec
jge
int
leave
mov
arpl
jle
adc
retf
sbb
test
popa
cmc
push
pop
cmc
push
mov
xor
jbe
push
mov
gs
and
push
mov
in
bound
das
sti
(bad)
cli
lea
xchg
cmp
xchg
(bad)
cld
cmp
sbb
jg
lea
dec
mov
imul
in
and
adc
(bad)
scas
adc
movs
jmp
jo
cwde
call
jb
aaa
sti
push
jp
(bad)
jnp
xor
xchg
push
xor
in
mov
arpl
jle
rcr
and
mov
lods
outs
(bad)
push
mov
adc
rcl
cwde
jnp
test
test
dec
daa
adc
not
push
sbb
(bad)
mov
inc
ret
rcl
lea
cmp
or
ds
les
jmp
add
jmp
fwait
xchg
push
pop
jne
test
xchg
stos
sbb
in
and
add
pop
push
or
add
popf
fs
pop
jmp
xchg
lea
pop
xor
jmp
pop
adc
loope
xor
inc
cmp
jmp
dec
shl
inc
pushf
in
retf
push
lock
sub
push
je
leave
push
xchg
pushf
inc
xor
ret
test
mov
call
fmulp
mov
or
cmp
and
jns
push
out
mov
mov
ror
ret
push
adc
test
mov
shl
movs
mov
jnp
jo
sbb
adc
jp
mov
adc
mov
push
or
xor
mov
mov
call
clc
cwde
fwait
sbb
inc
rcl
fadd
movs
add
call
push
jmp
jp
stos
xor
or
stos
mov
mov
ror
sub
sbb
cmp
retf
aaa
fs
lahf
test
xor
lods
jno
xchg
sub
pop
test
and
pop
add
xchg
cmp
outs
shr
jp
jmp
adc
lods
jne
mov
icebp
adc
inc
mov
push
nop
and
test
inc
cmps
pop
js
add
shr
inc
loop
lods
dec
(bad)
loope
mov
xchg
sbb
scas
or
jle
sbb
xor
dec
lea
jbe
or
imul
inc
popf
loop
mov
cld
pop
inc
fsubr
sar
fs
and
inc
in
pop
into
mul
scas
rol
xchg
(bad)
loopne
fs
adc
mov
cli
jg
jnp
inc
stos
pop
xor
jge
cmps
xchg
nop
int
or
imul
fstp
cmps
inc
hlt
pop
rcl
lahf
xchg
aas
adc
lods
fstp
ins
lea
rol
push
push
fadd
dec
outs
rcr
push
xor
ret
sub
bound
push
lods
outs
xchg
daa
sbb
dec
fistp
pop
ja
paddd
pop
jmp
in
xchg
mov
rol
neg
mov
jg
xor
adc
or
fwait
das
cmc
aad
jge
std
clc
jl
sbb
pop
enter
or
jnp
xchg
push
(bad)
cmps
enter
or
hlt
es
test
or
xor
sbb
push
fbstp
push
in
adc
(bad)
dec
je
or
out
sub
int
or
out
mov
push
mov
out
mov
mov
lea
xor
xchg
lods
and
lods
shl
loope
movs
push
sbb
not
retf
mov
shr
test
std
mov
retf
inc
in
adc
adc
sub
push
outs
(bad)
jno
mov
mov
in
cwde
nop
mov
sub
mov
cld
adc
adc
fwait
jb
jl
mov
imul
pop
and
mov
stos
jo
pop
jne
dec
js
pop
fcomp
hlt
fisttp
sub
shr
and
and
mov
mov
jg
jne
bound
mov
sub
fidivr
fbstp
data16
xchg
pushf
add
es
sbb
sbb
and
mov
clc
out
les
sub
imul
cdq
sub
test
mov
jo
jo
or
lahf
les
push
xor
pushf
mov
adc
jmp
sbb
ja
jl
inc
pop
scas
ins
jne
(bad)
fadd
sbb
ret
arpl
inc
jno
add
movs
pop
or
int
or
(bad)
sbb
inc
(bad)
push
xor
nop
pushf
jb
inc
cmp
sbb
jbe
(bad)
repz
fnstsw
mov
je
jae
loopne
lds
pusha
mov
loopne
hlt
mov
and
clc
push
cs
or
arpl
dec
mov
out
mov
xchg
sbb
cmp
cmp
in
inc
fimul
dec
lds
imul
jb
pusha
mov
sub
xchg
inc
and
fisttp
add
lahf
fst
jbe
mov
mov
xchg
popf
lahf
xor
xchg
out
cmps
jmp
mov
out
inc
jns
xchg
cmp
enter
mov
xchg
scas
fs
js
les
data16
ins
jl
into
add
(bad)
push
shl
pop
jnp
dec
repz
add
push
xchg
js
fdivr
ret
adc
fmul
scas
js
add
mov
retf
pop
sbb
pushf
enter
lahf
pop
cmp
or
jge
adc
jno
fcomp
cs
sbb
or
mov
dec
and
pop
mov
test
es
out
pop
xor
cmps
nop
aad
or
pushf
cdq
pop
pop
or
daa
cwde
mov
jp
xchg
xchg
fs
inc
mov
sbb
in
dec
into
jns
mov
pop
sar
pop
fwait
aam
lods
lods
sbb
sub
push
and
or
mov
pop
leave
cmc
mul
jne
sahf
pop
xor
mov
imul
in
popf
cli
mov
jp
ins
add
push
mov
repz
push
add
adc
mov
enter
pop
mov
cmp
fild
add
and
in
cmp
or
mov
lods
mov
test
test
ds
test
push
jo
das
test
adc
pop
and
xchg
push
test
mov
imul
xor
inc
xchg
enter
and
mov
sub
fadd
ret
sub
inc
cdq
sbb
sub
xor
mov
sbb
jbe
xchg
fs
lock
cs
mov
xor
adc
jno
mov
adc
and
pop
jp
test
das
xlat
adc
retf
repz
mov
mov
ins
mov
loopne
jmp
and
mov
es
mov
jmp
pop
mov
pop
pop
cmp
(bad)
mov
(bad)
hlt
cwde
sub
sbb
xchg
inc
int
xchg
call
iret
mov
out
dec
mov
ins
xchg
jae
fs
jb
shl
mov
sub
or
inc
inc
and
out
pop
in
mov
push
pop
xlat
pop
adc
xor
ror
stos
es
push
or
jb
mov
adc
(bad)
repz
fnstenv
outs
div
enter
inc
arpl
scas
(bad)
pop
ja
add
cmp
pop
int
cs
or
xor
or
push
xchg
sub
mov
sbb
xor
sub
cmc
data16
test
mov
in
pop
cmc
adc
xor
cs
test
cdq
cmp
test
imul
loopne
jne
addr16
mov
xor
fsub
rcl
push
(bad)
aam
ds
mov
push
xor
aad
imul
das
push
push
or
adc
fwait
sar
(bad)
(bad)
fnstsw
xchg
ror
lods
ins
shl
jecxz
imul
cld
xor
pop
or
and
or
mov
or
out
add
(bad)
jg
xor
adc
xchg
icebp
push
retf
push
push
jecxz
jmp
out
mov
shl
cmp
jne
cmp
dec
add
test
aaa
push
cmp
or
aam
xor
pop
out
cmc
pop
leave
and
xchg
adc
jp
inc
mov
or
fld
xchg
dec
jl
retf
loope
mov
in
dec
add
out
inc
mov
aaa
outs
scas
gs
dec
aas
das
mov
cmp
xor
test
movs
sbb
pop
ret
sub
or
sub
push
mov
ror
inc
pop
push
xchg
retf
mov
ins
cmp
adc
lock
and
out
cmps
mov
inc
arpl
mov
popa
stos
mov
cmps
pop
or
movs
pop
sub
jae
sar
or
push
jl
shl
test
fwait
adc
cld
push
xchg
sub
out
and
and
push
call
jb
stc
add
inc
or
rol
sbb
outs
sti
cmp
(bad)
adc
aaa
ja
adc
fldcw
mov
adc
xor
xor
cli
fidivr
xchg
xor
mov
fsubp
js
dec
jae
xor
dec
lea
data16
jno
sbb
mov
arpl
cmps
jmp
sub
jmp
jne
mov
add
mov
mov
mov
mov
lahf
fiadd
mov
into
add
lea
dec
in
cli
add
xor
pop
pushf
dec
fstp
out
xchg
sub
jae
repnz
xor
push
sbb
mov
imul
push
jbe
inc
sub
movs
mov
sub
xchg
sbb
xor
lock
ret
sbb
push
sub
fst
add
test
cmp
sbb
jp
sub
cmp
imul
dec
stc
es
xchg
loopne
mov
stos
or
mov
test
sbb
sbb
pushf
xor
sub
sub
sub
inc
in
pop
ret
fcmovnb
mov
sar
pop
aam
rol
or
int
dec
retf
fwait
lods
inc
(bad)
movs
out
bound
scas
gs
lock
sti
dec
ja
daa
(bad)
clc
icebp
jne
lods
xor
inc
ins
xor
sub
push
retf
mov
mov
xor
xchg
loop
(bad)
sub
jae
es
xor
test
sbb
dec
pop
pop
xor
fwait
push
(bad)
adc
xor
dec
xchg
xor
mov
ss
neg
call
sub
movs
in
cwde
cmp
test
or
cmps
mov
ret
mov
nop
sbb
push
and
or
mov
sub
mov
mov
inc
push
lea
lds
push
cld
mov
out
imul
sbb
icebp
pop
add
cmc
mov
adc
js
fs
sub
dec
out
idiv
push
jge
mov
inc
iret
and
sub
popf
mov
clc
nop
sbb
dec
xchg
mov
mov
(bad)
xor
mov
xchg
jmp
sub
fmul
add
cmp
jmp
or
loope
test
jns
repnz
imul
stos
xchg
(bad)
clc
out
xchg
mov
(bad)
scas
sub
sub
loop
rcl
push
xor
repz
push
lahf
dec
scas
jecxz
mov
pop
mov
fmulp
imul
pop
pop
xor
dec
aad
jns
push
(bad)
xor
and
test
pop
push
in
pop
sub
jmp
pop
int
adc
(bad)
cld
fist
cmp
xor
ins
cmp
les
popf
sub
imul
ss
cmp
jae
iret
imul
inc
std
mov
imul
test
scas
inc
mov
inc
jge
sbb
repnz
test
daa
jp
xchg
std
mov
mov
push
mov
pop
xchg
retf
add
mov
mov
mov
mov
pop
jnp
push
fimul
mov
pop
adc
sbb
loope
xor
mov
cmp
in
mov
adc
fwait
lods
gs
ror
loop
xchg
dec
pop
nop
sahf
sbb
dec
rcl
scas
add
les
sar
out
stc
or
sbb
enter
and
jmp
sub
mov
or
stc
sbb
repnz
cmp
mov
add
mov
push
adc
inc
inc
out
mov
in
pop
and
push
dec
adc
pop
fcomp
inc
adc
test
jns
jle
shr
imul
mov
call
add
repz
jae
(bad)
adc
(bad)
call
int3
adc
frstor
ss
scas
or
jle
sbb
data16
adc
ret
xor
test
push
(bad)
fdiv
sahf
push
sbb
cmp
jns
mov
mov
les
ins
sub
(bad)
mov
push
aad
sub
pop
or
mov
mov
inc
clc
sbb
test
and
push
repnz
cmp
std
sahf
sbb
pop
add
sbb
loop
xor
push
loop
xchg
mov
mov
cld
jp
push
fld
fwait
jecxz
sbb
je
jne
retf
ror
outs
add
arpl
or
rol
inc
pop
fimul
in
cli
xor
dec
adc
and
retf
push
pop
fcmovne
ret
sub
mov
cmp
retf
cli
imul
(bad)
push
pop
lds
loope
mov
in
fnsetpm(287
nop
sbb
rol
ret
cdq
movs
jae
sub
daa
ja
xchg
cwde
lods
(bad)
mov
in
mov
popa
or
ret
in
sub
nop
(bad)
std
int
push
mov
pop
add
push
nop
and
dec
and
mov
jns
cmp
ror
mul
xor
dec
loop
(bad)
aad
adc
mov
ret
movs
ret
jb
push
fisubr
scas
xchg
cld
jne
shr
mov
add
clc
ja
mov
xchg
lock
nop
mov
cmp
lods
ins
cdq
jmp
out
adc
push
fsubr
push
into
or
mov
ficom
pinsrw
retf
test
test
(bad)
lds
or
or
adc
mov
and
ds
jg
es
push
xor
pop
fcom
shl
sub
je
adc
test
nop
movs
gs
enter
lock
call
xor
cmc
into
fwait
or
aaa
outs
inc
xlat
push
cmp
mov
dec
imul
push
or
(bad)
cli
daa
pop
test
mov
loop
loopne
sahf
jno
stos
sbb
pop
mov
jae
in
call
xor
inc
pop
and
shl
movs
pusha
out
aas
(bad)
or
push
mov
xor
push
mov
mov
lods
out
loopne
push
pop
test
cdq
mov
xchg
stos
xor
sbb
aam
cli
push
adc
aam
aaa
es
sub
sub
test
retw
(bad)
pop
daa
push
xchg
and
(bad)
mov
mov
test
ror
loope
mov
pop
test
xchg
mov
ret
scas
mov
movs
or
sbb
mov
stc
and
je
popa
jg
call
jp
cmp
mov
or
das
or
arpl
hlt
enter
sbb
test
inc
loope
aaa
mov
dec
push
mov
ficomp
push
lods
dec
lods
shl
leave
inc
inc
cwde
lea
push
aam
loope
mov
les
xor
lahf
and
cmps
sbb
icebp
mov
(bad)
xchg
sub
mov
dec
test
imul
pop
adc
mov
inc
in
shr
pop
sti
lock
test
nop
push
(bad)
fadd
sbb
aad
inc
aas
or
in
stos
ror
mov
mov
mov
call
pop
sbb
inc
jbe
xchg
repnz
mov
loope
jbe
ret
inc
(bad)
jg
scas
and
lods
sbb
push
pop
in
or
inc
repnz
jp
mov
jg
nop
ss
inc
jne
call
and
push
or
retf
inc
and
cmp
push
iret
mov
aas
pop
sbb
(bad)
mov
xor
cld
push
ss
add
dec
retf
pop
ds
add
es
xchg
cmc
pop
dec
push
shl
xchg
lea
jmp
sbb
dec
loopne
daa
rcl
data16
js
push
clc
jecxz
pop
or
adc
mov
jns
sahf
lahf
ror
into
out
xor
scas
or
or
scas
rcr
rol
out
test
mov
cmp
outs
jb
push
call
xlat
ret
push
dec
leave
sub
xchg
sbb
test
sub
outs
imul
cld
or
shl
repnz
xchg
arpl
jg
pop
outs
push
das
cld
jp
leave
inc
dec
popa
gs
sbb
(bad)
idiv
test
cmp
sbb
adc
fiadd
adc
mov
cmp
sub
jae
mov
test
dec
jns
cmp
lahf
jnp
(bad)
jnp
rol
or
aam
mov
xchg
ss
fldcw
cdq
xchg
rol
bound
pushf
or
push
cli
cmp
int
mov
add
sbb
icebp
or
nop
int3
add
sbb
fbld
pop
icebp
mov
movs
and
push
inc
test
je
cld
imul
xchg
push
dec
mov
cdq
xchg
sahf
(bad)
or
mov
sbb
push
mov
(bad)
popa
add
cmps
jmp
fwait
pop
adc
lock
sub
lds
dec
mov
push
push
enter
movs
(bad)
in
mov
inc
repz
xchg
call
sbb
push
pop
hlt
xor
mov
and
ret
ror
mov
jecxz
xor
out
inc
cmps
int
sub
aad
jge
rol
outs
(bad)
cmp
data16
dec
scas
xchg
aaa
add
test
mov
out
push
sub
das
iret
sbb
shr
call
jo
mov
inc
xor
cmc
cli
out
sbb
sbb
cmp
mov
pop
das
add
test
inc
adc
hlt
inc
popa
pop
xor
adc
repnz
lods
xor
loope
hlt
mov
leave
aas
cmp
dec
stc
inc
leave
out
scas
push
sbb
(bad)
fmul
dec
retf
mov
(bad)
ja
mov
out
fistp
mov
xchg
xchg
data16
out
mov
inc
int
mov
xchg
outs
aaa
lods
dec
xor
cmp
ja
inc
lods
cmps
push
push
mov
sbb
inc
das
enter
xchg
nop
pushw
push
mov
push
ds
push
mov
push
fs
sar
sub
inc
inc
mov
clc
popa
sbb
and
out
scas
fsubr
mov
jbe
nop
leave
repnz
fsubr
aam
adc
fsubr
sub
jg
jno
lds
test
js
and
adc
into
(bad)
xchg
ja
or
out
mov
xchg
push
sbb
iret
shl
xchg
cdq
mov
pop
sahf
jecxz
cmp
arpl
scas
loop
repz
mov
cmp
outs
and
(bad)
popa
mov
jo
and
dec
sbb
or
mov
cli
xor
std
add
push
adc
cmp
sbb
mov
inc
mov
test
jne
inc
push
sbb
scas
idiv
aaa
ror
out
pop
fdiv
in
and
leave
inc
jmp
xor
(bad)
(bad)
mov
adc
sbb
jbe
xchg
fcom
cmc
cmp
xor
cli
daa
call
push
mov
sbb
fsubr
pop
loop
dec
push
and
xlat
mov
push
loop
scas
pop
push
mov
dec
push
es
pushf
in
sub
sbb
clc
gs
dec
sbb
dec
in
and
sub
and
and
call
push
push
jp
sbb
in
sbb
sbb
ins
mov
and
xchg
mov
mov
mov
add
push
xor
shl
bound
aam
call
lahf
and
retf
jmp
add
xor
inc
jb
hlt
dec
enter
clc
in
inc
jb
shl
adc
mov
jle
test
iret
imul
push
inc
test
sub
inc
xor
(bad)
add
inc
pop
xor
int3
mov
push
aas
adc
inc
pop
cmp
adc
xor
xchg
loope
adc
push
(bad)
es
jge
shr
jecxz
repnz
stc
in
sahf
pop
ins
adc
pop
lahf
enter
mov
je
cli
pop
scas
mov
xchg
pop
pop
(bad)
cmp
xor
jns
imul
in
clc
(bad)
inc
scas
pusha
cwde
shl
adc
jl
cld
sahf
in
arpl
pop
jmp
cwde
popf
cmp
clc
ret
jns
in
aam
jo
ins
sub
dec
sbb
(bad)
pop
in
jnp
(bad)
fdiv
xchg
mov
pop
fs
test
pop
ret
shr
shl
or
or
das
mov
xor
aam
dec
dec
lock
xchg
(bad)
div
mov
mov
jb
jne
dec
mov
add
ins
jg
iret
je
movs
add
inc
and
or
and
jmp
outs
std
js
xor
adc
jnp
or
add
xchg
adc
xlat
and
xchg
jp
ins
imul
in
cmp
inc
ret
xchg
and
retf
fadd
jmp
idiv
cmps
loopne
lods
js
adc
int3
dec
cmps
jge
mov
push
mov
jmp
and
int
daa
out
lea
nop
out
stos
sbb
dec
jo
cs
stos
xchg
inc
jo
(bad)
gs
add
es
jle
std
sbb
(bad)
sbb
add
mov
xchg
outs
xor
add
clc
pop
inc
test
inc
xor
jge
jmp
mov
es
int3
cs
fst
pop
sti
imul
xchg
mov
adc
aam
gs
loope
cmp
int
push
loope
out
cmp
cwde
fidivr
xchg
adc
int3
jae
mov
shl
and
or
push
adc
add
and
push
cld
shl
pop
ja
hlt
(bad)
jmp
jne
mov
pop
xchg
cdq
mov
retf
dec
jecxz
icebp
aaa
jmp
aam
jle
xchg
aam
int3
dec
jg
arpl
lods
xor
jmp
ror
rol
xchg
popf
inc
and
bound
pop
fsubr
xor
ins
mov
and
and
mov
mov
(bad)
in
mov
pop
loopne
call
push
cmp
addr16
jmp
test
pop
test
inc
xor
and
retf
lahf
xor
xor
(bad)
outs
out
push
cmp
jmp
test
movs
(bad)
fdiv
imul
iret
or
lahf
fdivr
ret
(bad)
cmp
cmp
mov
aad
mov
mov
and
call
add
add
pusha
pop
and
lds
int3
imul
call
pop
or
jmp
pusha
cmp
imul
add
xchg
xchg
or
pop
dec
bound
shl
rcl
test
cmp
mov
jp
imul
or
jo
out
mov
in
jmp
arpl
cmps
xlat
adc
mov
fst
sbb
push
sbb
fwait
mov
and
loop
loopne
xchg
mov
sub
mov
aam
pusha
out
jno
add
pop
stc
cmp
outs
fadd
sub
dec
ja
mov
cmp
fnstenv
cdq
movs
jge
mov
add
mov
or
xchg
fmul
mov
jle
or
std
scas
cmc
push
and
(bad)
out
push
push
movs
call
sbb
mov
adc
dec
stos
jecxz
and
stos
mov
outs
repz
xlat
pop
and
cmp
test
sbb
cmps
or
test
add
icebp
xchg
adc
mov
pop
mov
pop
ja
fiadd
bound
ss
repnz
pushw
or
rcl
xor
out
fsubr
push
arpl
fnstsw
and
data16
scas
jno
and
adc
call
adc
sbb
xchg
js
ins
mov
sbb
jb
push
ror
pop
mov
xchg
jl
add
aas
xor
or
push
add
gs
cmps
xchg
(bad)
adc
call
inc
inc
gs
push
fadd
sbb
cmp
push
mov
test
or
xor
add
xchg
jmp
les
test
mov
outs
or
jb
xchg
ret
je
push
and
lods
jmp
cmps
fadd
out
into
sub
icebp
loop
cmps
aaa
stc
adc
mov
fwait
in
fdiv
ds
gs
aad
and
mov
js
mov
ret
(bad)
jmp
leave
jge
aas
xor
push
iret
adc
retf
mov
and
dec
fadd
cmp
(bad)
sub
mov
add
cmp
in
call
aam
retf
cmps
fsub
in
clc
mov
and
push
mov
jne
adc
push
xor
sar
dec
xor
lock
inc
mov
test
sub
je
mov
cmp
sbb
or
jae
outs
nop
inc
mov
xchg
jp
ins
nop
fldcw
sbb
and
sbb
dec
ins
pusha
aad
icebp
mov
cmps
adc
ret
mov
repz
or
stc
lds
mov
scas
out
mov
jg
adc
pushf
movs
loop
fsubr
adc
or
add
pop
ja
sub
push
cli
cmp
dec
adc
pop
and
adc
bnd
mov
xor
mov
jmp
sub
fisub
xor
imul
inc
xchg
cmc
or
mov
lds
push
and
rol
call
(bad)
dec
in
movs
fld
cmps
sbb
dec
and
mov
xchg
cmp
cmc
or
bnd
out
cmp
(bad)
popf
pop
das
xchg
mov
cmp
cli
xchg
adc
dec
dec
fst
cmps
mov
(bad)
inc
jl
dec
or
enter
rcl
or
lds
(bad)
xor
idiv
sub
ja
dec
add
call
xchg
test
fmul
ss
xlat
add
pop
sbb
fldenv
hlt
or
xor
push
mov
call
dec
les
xchg
aas
sub
fcmovne
aam
jle
sbb
test
xchg
test
sub
add
or
adc
cs
push
inc
adc
mov
jmp
cwde
adc
push
pop
enter
sub
dec
jae
(bad)
sub
pop
retf
cmps
lock
inc
jns
and
into
jg
or
jle
or
(bad)
jg
pop
mov
push
mov
adc
stc
push
push
mov
gs
xchg
dec
je
aas
inc
(bad)
clc
cmp
out
mov
mov
and
repnz
push
xchg
sub
mov
les
push
fwait
daa
fmul
retf
ins
mov
lahf
or
jmp
lods
push
mov
dec
int
inc
test
xchg
cmc
adc
xchg
mov
or
lods
jmp
arpl
push
mov
lahf
int
adc
push
(bad)
sbb
sbb
sbb
(bad)
(bad)
adc
lods
cld
adc
test
(bad)
data16
cld
fwait
ds
sbb
push
lods
pop
stos
fdivr
inc
setnp
loopne
scas
mov
add
pop
call
aad
jmp
push
pop
adc
(bad)
xor
add
cld
into
and
jmp
sbb
adc
jns
popf
outs
aaa
and
jp
fwait
xor
lea
sbb
cmps
bound
scas
jge
xor
in
and
pop
ror
ss
loop
je
rcr
(bad)
fld
inc
jb
sub
je
(bad)
out
cwde
jae
mov
mov
fsub
push
jge
ins
loopne
add
dec
push
ins
test
push
pop
(bad)
sbb
push
rcl
gs
out
sbb
push
test
add
push
sahf
in
loope
or
ja
loop
cmp
mov
adc
sahf
dec
cmp
repz
in
fdiv
out
popa
xor
in
adc
stc
dec
repnz
(bad)
fidiv
jl
jp
mov
mov
xchg
sub
push
stc
js
jo
dec
jp
inc
mov
test
pusha
pop
cwde
jbe
test
inc
inc
lahf
rol
push
int3
jecxz
xchg
outs
jno
push
scas
sbb
push
mov
pop
cli
sub
dec
popf
cmps
dec
rcr
add
mov
cmp
pop
fiadd
leave
addr16
mov
sub
in
icebp
retf
test
inc
clc
dec
fisttp
sub
push
nop
das
leave
pop
pop
test
push
fsubr
dec
jnp
lds
jmp
and
inc
mov
ins
int3
(bad)
pcmpgtb
fadd
inc
out
cli
pop
xor
das
cmp
mov
popf
test
(bad)
fadd
mov
sahf
not
icebp
push
test
call
ja
cli
(bad)
pusha
sbb
test
push
pop
cmp
outs
loope
(bad)
sub
dec
fistp
test
loopne
rcr
jp
shl
into
out
aam
dec
(bad)
lahf
popa
ror
pop
(bad)
cmp
pushf
mov
das
dec
movs
cmps
cmp
sti
rcr
xchg
xchg
cmc
mov
push
push
mov
idiv
(bad)
cmc
aam
jmp
scas
stos
test
mov
fs
rcr
scas
shl
xchg
jo
push
in
imul
aam
dec
push
jne
in
add
repz
push
pop
pop
out
cmp
mov
mov
xchg
fsubrp
mov
in
pop
dec
jb
dec
jp
and
iret
pop
ret
dec
mov
in
sub
inc
xchg
imul
dec
adc
xor
mov
jb
inc
sub
mov
into
setnp
daa
jne
push
adc
mov
aaa
jmp
push
xor
add
dec
(bad)
loop
mov
jmp
jns
jmp
test
jmp
in
movs
ins
push
sub
ss
pop
das
mov
(bad)
ja
das
scas
sub
cld
stos
aas
(bad)
and
xchg
add
rcl
jl
shr
or
sbb
and
and
arpl
lods
add
mov
stc
push
and
add
stc
jl
dec
pop
add
xchg
hlt
cmp
fwait
movs
sbb
retf
cs
es
inc
pop
inc
adc
sar
ret
xchg
fwait
scas
inc
div
jl
and
call
pushf
pop
or
pop
jmp
xor
lea
lods
retf
mov
imul
sub
(bad)
xchg
inc
mov
div
fsub
inc
xor
push
out
inc
es
fcom
inc
xchg
mov
es
jns
movs
xor
not
mov
mov
push
and
mov
or
xor
and
rol
mov
jle
in
mov
pop
jae
rol
add
mov
cwde
neg
mov
dec
ror
pop
inc
arpl
nop
sbb
ja
cmp
xchg
inc
in
add
inc
mov
out
pop
and
inc
fsubr
or
sub
xchg
dec
push
lahf
and
mov
(bad)
aam
inc
mov
out
inc
iret
push
fbld
xor
fcomp
fidiv
cdq
lods
add
scas
push
inc
pop
data16
sub
push
push
sahf
pop
push
mov
sbb
data16
int3
cmps
sti
test
icebp
pop
mov
pop
std
mov
sahf
xchg
pop
add
cmps
test
stos
lods
loopne
in
stos
arpl
pop
call
mov
cmp
test
gs
mov
inc
adc
add
std
add
int3
xchg
leave
pop
mov
jg
push
xor
mov
or
xchg
arpl
xchg
jp
loope
xchg
adc
scas
and
sbb
(bad)
movs
inc
jne
call
or
dec
in
dec
xor
je
and
test
inc
mov
and
add
mov
pop
inc
inc
push
into
(bad)
cs
xor
mov
fsub
fld
scas
sti
repnz
mov
mov
jae
int3
adc
mov
adc
jecxz
inc
ins
dec
rcr
xchg
cmp
and
jmp
or
outs
push
or
cld
je
iret
adc
sub
leave
js
repz
in
fwait
retf
pop
js
out
test
dec
ds
inc
(bad)
fcom
nop
movs
dec
mov
add
sub
jle
jg
dec
mov
(bad)
jge
adc
aam
dec
pushf
ins
add
iret
dec
pusha
adc
loope
mov
fsub
dec
cli
(bad)
jmp
arpl
(bad)
xchg
xor
sahf
cmp
ret
jmp
test
add
ror
enter
push
adc
inc
shl
add
or
xchg
jne
shl
ret
adc
out
mov
xchg
push
sti
imul
movs
inc
inc
lds
enter
and
xchg
push
push
retf
mov
adc
cld
int
or
cmp
xchg
jge
dec
sub
mov
les
add
movs
and
xchg
cli
push
push
mov
les
gs
mov
das
dec
movs
icebp
fbld
jno
and
cwde
push
cmp
(bad)
dec
jo
sub
adc
out
mov
adc
mov
loop
dec
xchg
pop
push
into
sahf
xor
call
and
dec
loopne
sar
jmp
retf
std
call
(bad)
inc
push
ror
in
and
test
pop
es
lahf
mov
imul
maxps
pop
pushf
pop
add
popa
inc
fnsave
sub
jge
and
out
xor
cld
retf
loop
repnz
jae
push
out
iret
xor
pop
bound
or
scas
(bad)
mov
sub
and
lea
dec
jp
icebp
sar
dec
out
in
push
and
xor
imul
ins
loop
call
outs
in
jl
or
sub
pop
cli
fisttp
xchg
adc
pop
or
add
or
stc
pmulhw
jbe
(bad)
mov
ss
push
(bad)
or
ins
test
and
dec
xchg
jle
jbe
inc
stc
out
pop
das
out
movs
inc
cmps
(bad)
cli
repnz
test
lods
sbb
pop
adc
es
ss
sahf
adc
sub
sbb
inc
ret
das
lds
xor
jns
loop
push
mov
out
int
std
pop
push
xchg
clc
xchg
jns
or
cmps
ss
(bad)
push
xchg
inc
clc
mov
jae
stc
mov
inc
fisttp
push
sbb
fst
ror
leave
mov
jb
hlt
daa
bound
sub
xlat
nop
push
and
and
sub
mov
and
jge
mov
imul
ins
cmp
(bad)
jmp
inc
jno
xor
sbb
ins
call
shr
xlat
pop
inc
push
or
out
sub
shl
sub
mov
sbb
pop
or
cwde
pop
scas
neg
in
test
pushf
out
jbe
mov
pop
or
mov
ins
retf
jno
and
pop
jbe
xor
inc
jecxz
lock
outs
lods
add
sbb
sbb
add
push
ror
inc
adc
or
cmc
jbe
xor
aas
lahf
lahf
cli
dec
test
pusha
call
cs
mov
push
cmps
push
(bad)
lock
ja
(bad)
ficomp
retf
cld
scas
add
push
adc
inc
cli
jns
lahf
push
sub
adc
jne
push
ins
xchg
out
pusha
fadd
xor
xchg
adc
xor
push
or
dec
ins
gs
imul
loopne
mov
sub
mov
mov
fst
push
popf
out
int3
in
mov
inc
(bad)
pusha
push
push
sub
movs
mov
pop
arpl
ds
ss
popa
popf
int
xlat
jns
pop
push
ja
dec
pop
bnd
adc
mov
mov
(bad)
fst
or
scas
mov
cmp
push
jmp
aaa
sub
popf
xor
xor
aam
dec
mov
repnz
mov
adc
leave
loope
nop
sbb
(bad)
sub
mov
add
aam
cmps
test
push
dec
add
mov
jns
mov
(bad)
dec
test
lahf
mov
cmc
(bad)
jne
fdivrp
(bad)
mov
and
mov
dec
mov
ficomp
sub
jae
adc
imul
sbb
das
pop
(bad)
ins
frstor
ret
sub
movs
mov
call
push
mov
rcr
jge
push
cmp
dec
ds
mov
test
stos
inc
mov
sub
iret
jno
ins
xchg
and
adc
js
test
or
jmp
and
lods
and
push
loope
pushf
xor
push
mov
icebp
xchg
inc
test
outs
mov
inc
or
pop
mov
loope
fwait
pushf
jmp
test
or
xor
(bad)
mov
cdq
xchg
icebp
push
clc
xor
sbb
loop
or
dec
mov
cld
(bad)
out
ss
xchg
mov
cmp
jbe
shl
mov
mov
mov
fnstenv
sbb
push
sub
lea
jnp
arpl
aas
push
jnp
push
inc
add
mov
inc
jno
sbb
outs
inc
(bad)
idiv
mov
fcmovnbe
jo
ret
cmp
fwait
push
push
fld
lds
mov
cmp
repz
ins
cmp
jbe
jmp
xchg
dec
push
lods
loop
pop
test
aam
mov
mov
sub
enter
ret
pop
jecxz
push
sbb
rcl
retf
adc
mov
cmc
mov
lahf
mov
push
test
retf
and
mov
xchg
adc
in
adc
sbb
in
mov
inc
jge
stc
cli
mov
ja
imul
outs
and
jb
push
mov
pop
xor
jp
jo
cld
and
adc
mov
push
jbe
inc
fidivr
pop
jno
push
sbb
sub
lods
and
shl
jbe
dec
ins
mov
push
imul
fnstenv
(bad)
ret
out
shl
pusha
xor
(bad)
icebp
mov
jp
push
jmp
adc
inc
sub
or
aas
(bad)
addr16
mov
mov
and
pop
push
arpl
pop
imul
fnstcw
or
cmps
jmp
cmp
imul
mov
pushf
mov
mov
push
pop
xor
xchg
loop
push
test
inc
aam
adc
sbb
call
stos
jge
adc
inc
inc
shr
jne
aas
mov
xor
repnz
jg
xor
sbb
push
jae
addr16
ds
xor
xor
lsl
mov
pop
jmp
xchg
movs
inc
leave
cmp
push
add
out
jecxz
icebp
int
mov
fld
push
xchg
add
je
mov
fimul
jmp
push
mov
rcl
mov
pop
fisub
sub
push
jp
xchg
fistp
inc
mov
mov
pop
es
or
and
mov
leave
fwait
and
xor
jo
aad
mov
mov
call
sbb
push
or
outs
popf
mov
dec
(bad)
std
cmp
iret
add
sbb
dec
in
mul
fs
hlt
int
sub
push
and
mov
je
test
xchg
pusha
cmps
popf
jg
je
sbb
(bad)
sub
add
fcom
inc
push
stc
xor
stos
lea
ret
mov
and
and
jns
inc
dec
jmp
xchg
dec
jp
mov
aad
jecxz
add
adc
jo
ds
mov
add
lock
stc
lods
jecxz
jo
(bad)
dec
test
imul
add
retf
sub
inc
popf
adc
xchg
cs
into
(bad)
push
add
stos
push
iret
imul
add
lock
and
int
cmp
std
movs
outs
mov
stos
outs
dec
and
pop
imul
sbb
inc
and
call
jbe
inc
jne
das
iret
push
js
pop
sbb
out
mov
adc
stos
loope
enter
and
inc
sub
fadd
out
mov
daa
dec
loopne
aad
lea
scas
ds
out
mov
push
adc
retf
jae
jp
cmp
es
and
add
dec
inc
xor
mov
aaa
sub
add
fnstsw
retf
frstor
cmp
mov
adc
daa
imul
adc
inc
push
or
outs
pop
jecxz
dec
pop
xor
jmp
adc
bound
outs
push
lea
out
fdiv
sub
mov
shl
sbb
jmp
rcl
movs
adc
retf
jmp
daa
lock
cdq
(bad)
repz
ins
ret
or
and
mov
push
jmp
fmulp
push
ja
pop
sbb
sar
(bad)
mov
inc
shl
and
mov
aaa
das
push
mov
cld
jae
push
shl
mov
outs
xchg
adc
ss
mov
stos
in
jno
ins
xor
sub
mov
push
cmps
sbb
mov
mov
mov
in
sub
cs
idiv
xlat
adc
cmp
push
lahf
xor
aam
push
xor
push
leave
sub
retf
jnp
pop
scas
arpl
lock
imul
push
jge
stos
push
inc
aaa
loope
mov
pusha
mov
test
xlat
mov
sbb
ins
jecxz
xor
xchg
sub
jge
mov
or
scas
cmp
inc
aad
pop
inc
fs
xchg
in
call
scas
inc
pop
repnz
sbb
daa
cmps
push
jle
je
rcl
adc
arpl
push
mov
add
push
cmp
pop
test
and
mov
cmp
or
call
add
mov
add
push
xor
and
fdiv
popa
push
mov
xor
sbb
jbe
adc
adc
push
mov
stc
sub
dec
cmp
adc
aad
dec
add
fisub
or
dec
xor
lods
movs
xor
push
sbb
mov
call
les
jmp
xor
cli
leave
imul
inc
fst
adc
add
lfs
xor
cmps
in
call
aas
sub
imul
xchg
cmps
dec
frstor
dec
daa
adc
out
inc
sar
push
push
fsin
cmps
and
sbb
(bad)
cmp
add
pop
cwde
(bad)
repz
outs
ret
dec
or
cwde
unpckhps
jno
add
sar
in
fbld
xor
outs
inc
push
pop
push
(bad)
mov
mov
jns
jge
cmp
add
inc
add
inc
xchg
push
aaa
mov
(bad)
je
cmp
out
mov
push
jae
mov
imul
cli
daa
call
clc
icebp
fsub
cdq
xor
leave
mov
mov
loopne
jl
dec
movs
or
int3
dec
outs
cs
aad
jb
in
sbb
test
xor
cmp
sahf
mov
sub
call
xor
jns
adc
or
jo
fld
in
scas
xor
push
mov
mov
push
es
daa
fwait
mov
div
dec
pop
not
call
ss
push
inc
cmp
retf
(bad)
pop
lea
pop
sbb
mov
xchg
fdivr
imul
iret
test
mov
adc
xchg
bound
or
pop
jnp
mov
jnp
into
jo
iret
leave
jg
retf
test
sbb
(bad)
out
sti
xchg
pop
push
add
jp
loopne
test
pop
gs
loopne
int
or
cmp
sub
aas
repnz
scas
jnp
rcl
jmp
sub
mov
fistp
jno
inc
je
in
fs
xchg
out
xor
ds
mov
mov
fsub
push
pushf
xchg
xor
lods
inc
addr16
push
mov
cmc
leave
vmovaps
sahf
movs
mov
mov
sbb
pop
sbb
mov
jbe
test
mov
(bad)
pop
adc
aas
pop
call
xchg
jp
cmp
loop
mov
pop
push
out
and
aam
mov
mov
cs
scas
sbb
or
jl
push
in
test
in
je
ret
bound
loopne
mov
pop
push
(bad)
sbb
popa
rcr
shr
adc
adc
cmps
nop
xor
stos
jne
cmp
pushf
add
mov
lods
and
mov
iret
push
sbb
add
stc
ins
sti
test
inc
adc
add
xchg
mov
nop
jne
call
dec
push
call
dec
ret
jo
cmp
in
add
pop
dec
or
sub
stos
inc
(bad)
stos
push
jo
addr16
movs
call
clc
adc
push
cmp
push
and
clc
and
xchg
dec
xchg
fisttp
xchg
cwde
sahf
mov
cmp
jns
jae
(bad)
adc
cmp
push
push
stos
xchg
jno
stos
xor
adc
adc
aaa
hlt
in
pop
loop
into
ins
sbb
fstp
dec
mov
jmp
aas
int
inc
mov
in
inc
lods
loopne
pop
les
sahf
fidivr
cmovbe
scas
dec
fimul
call
test
push
inc
pushf
test
xchg
loopne
sub
lea
mov
movs
mov
sbb
mov
cmps
data16
sbb
test
push
and
mov
inc
dec
cmps
jbe
lahf
test
push
dec
sub
mov
call
data16
addr16
mov
push
fdiv
out
adc
sbb
pop
ror
or
inc
or
cs
ss
loop
daa
add
cmp
(bad)
(bad)
loope
dec
test
jg
stc
cli
fwait
mov
retf
icebp
push
or
or
push
sbb
dec
cmp
mov
add
adc
(bad)
sub
jmp
mov
mov
pop
inc
xor
dec
adc
push
aaa
xor
fwait
jle
mov
push
inc
push
push
mov
push
repz
adc
jmp
cmp
push
je
iret
loopne
xchg
dec
mov
xchg
xchg
dec
sbb
sub
push
mov
cmp
push
call
(bad)
mov
xor
popf
jo
inc
test
fmul
inc
mov
push
pop
retf
fnstsw
inc
call
rcl
inc
leave
push
retf
cmp
mov
outs
xor
retf
(bad)
rcr
jl
xchg
jmp
mov
dec
int3
popf
sahf
std
and
fsub
aad
ins
xchg
scas
lea
push
adc
or
xor
push
pop
mov
dec
push
popa
sub
dec
add
icebp
dec
sub
fnsave
jl
sbb
jae
repz
mul
sti
xor
js
adc
addr16
dec
or
psubd
mov
cmp
adc
sub
xor
mov
cmp
adc
cdq
retf
push
jae
push
add
mov
pop
ror
leave
dec
adc
add
(bad)
xor
and
loop
shr
test
mov
or
add
repz
aam
lock
mov
mov
and
mov
movs
dec
mov
les
mov
daa
out
ret
add
mov
xchg
pop
out
(bad)
out
mov
lock
cmp
les
and
inc
or
inc
pop
add
or
push
xchg
pop
jmp
aas
mov
retf
mov
xor
enter
test
aam
movs
dec
out
mov
inc
ss
scas
fist
xor
das
cmps
out
push
add
lock
movs
daa
imul
cmp
xor
inc
push
mov
push
test
and
aas
hlt
dec
xor
lahf
popa
test
jl
movs
neg
sbb
retf
lds
ret
xchg
xchg
cld
pop
(bad)
ins
dec
sub
iret
mov
ret
mov
outs
dec
rcr
mov
pop
loope
fs
(bad)
sub
out
in
aam
mov
inc
or
ret
movs
int3
stc
cld
sub
cmp
sub
iret
repz
inc
push
sti
pop
leave
enter
sub
sbb
test
and
out
xlat
repnz
mov
out
mov
aad
pop
aad
mov
jl
in
arpl
cmps
xlat
das
and
and
lahf
cwde
xor
cmp
cmc
imul
xchg
int3
scas
xchg
(bad)
add
xchg
xor
push
fwait
sbb
imul
pop
mov
cld
mov
and
add
ins
imul
lods
movs
jbe
out
(bad)
jp
sub
dec
push
test
addr16
mov
pusha
loopne
out
js
pop
adc
adc
mov
push
push
cld
imul
mov
xchg
mov
pop
pop
adc
push
mov
ins
mov
adc
xchg
daa
pop
xchg
mul
adc
mov
dec
adc
pop
mov
fnsave
pop
cmps
gs
jnp
popf
xchg
xor
in
(bad)
jmp
leave
cli
cwde
rcr
push
push
iret
add
dec
leave
outs
dec
clc
xlat
cmps
mov
out
int3
mov
inc
adc
je
push
movs
cld
mov
ins
adc
loop
mov
xchg
jae
(bad)
mov
sbb
mov
movs
mov
push
pop
xor
jp
mov
arpl
in
and
mov
inc
repnz
add
dec
sub
fwait
mov
movs
icebp
inc
add
dec
dec
and
mov
mov
push
push
fsubr
push
push
jmp
loope
adc
js
cmp
sub
mov
cmp
ret
or
pop
cmp
shr
out
ret
push
add
add
sub
add
les
add
dec
and
loop
movs
in
xchg
bnd
aad
ret
inc
add
pop
dec
xchg
loope
push
push
sbb
and
or
out
fild
outs
imul
add
vpand
push
cmp
sti
scas
push
lea
sbb
mov
lods
gs
retf
mul
mov
jle
popa
test
sbb
int
sbb
sbb
sub
dec
jge
and
cld
xchg
fmul
mov
shl
or
int3
mov
in
inc
hlt
adc
cmp
clc
cmps
ficomp
cmp
fs
mov
inc
int3
shl
dec
and
xchg
fisttp
or
jmp
movs
out
(bad)
sahf
lea
inc
(bad)
fs
mov
xor
mov
mov
push
call
inc
dec
les
xor
jae
and
(bad)
sbb
xchg
mov
test
xlat
or
or
mov
(bad)
shl
out
dec
leave
pop
callw
push
cld
movs
std
sub
mov
mov
pop
test
pop
test
outs
xor
adc
xchg
fld
push
jo
ins
fwait
inc
aas
dec
cmp
sub
arpl
mov
cmc
or
inc
es
add
or
into
mov
adc
push
or
pushf
fcomp
ins
dec
lahf
sub
mov
jp
cmp
leave
mov
lods
mul
popf
xor
sub
jmp
mov
lahf
fist
(bad)
and
sub
mov
dec
sbb
mov
mov
test
inc
rcl
dec
(bad)
das
ret
sub
ins
fidiv
mov
and
xchg
pop
in
loopne
cdq
in
test
push
outs
repnz
sbb
push
ja
hlt
jbe
push
and
fild
pop
jecxz
scas
repz
outs
cmp
push
inc
add
lds
jp
popa
out
xor
and
jle
cmps
sbb
and
shl
pop
(bad)
and
push
xlat
xchg
retf
and
jns
jp
arpl
xchg
add
call
xlat
bound
adc
mov
mov
jns
sahf
lds
imul
sahf
xor
test
pop
xchg
cmp
scas
ret
ja
xor
pusha
sub
push
jmp
jmp
mov
inc
into
(bad)
aaa
inc
and
nop
add
inc
xchg
pop
test
retf
jbe
jge
add
mov
retf
add
jbe
jl
jb
popf
ins
or
push
ret
mov
mov
jae
mov
push
sub
into
mov
jmp
push
xchg
mov
and
jmp
(bad)
pusha
shr
mov
mov
add
xor
outs
cld
push
mov
(bad)
call
stos
and
pusha
ja
and
pop
scas
xchg
mov
jmp
loopne
adc
loop
push
push
sbb
jl
nop
sbb
cs
(bad)
lods
leave
jle
test
jb
cmp
mov
add
mov
mov
aas
nop
pop
add
mov
div
rol
lock
call
sub
sahf
call
out
lods
mov
repz
repnz
mov
adc
xlat
cmc
das
jns
dec
outs
movs
(bad)
push
jl
and
pop
xchg
xchg
retf
sbb
test
aad
ret
sti
repnz
mov
fadd
pop
xchg
or
test
xchg
fbld
add
ins
adc
ins
leave
xchg
mov
mov
inc
add
out
imul
sahf
inc
(bad)
push
jecxz
inc
fsub
fwait
mov
je
call
ins
aaa
mov
xchg
lea
int3
icebp
mov
sbb
mov
push
call
sub
push
stos
test
out
push
call
aaa
call
test
xchg
adc
jno
cmp
mov
mov
(bad)
scas
sbb
mov
xchg
sub
jbe
jmp
push
mov
xor
pop
nop
sbb
clc
sar
(bad)
push
and
and
out
jge
mov
call
ds
push
jbe
xchg
jo
idiv
jle
mov
jp
cld
mov
pop
sub
arpl
dec
enter
into
fimul
sub
je
ret
cmp
add
push
call
aaa
xchg
das
sbb
nop
push
not
icebp
adc
xor
inc
shl
rcr
adc
mov
dec
xchg
sub
cs
pop
jo
out
arpl
aas
jmp
sub
pusha
popf
inc
fwait
test
retf
mov
out
and
pop
repnz
push
xor
lods
pop
aaa
push
loop
sbb
inc
inc
movs
ret
push
lods
sub
push
jg
push
leave
aad
or
scas
pop
icebp
adc
mov
jnp
je
(bad)
pop
jle
retf
mov
fst
lods
fs
pop
mov
jle
ror
mov
jne
out
pop
cmp
xor
retf
call
movs
jbe
jbe
(bad)
mov
nop
daa
adc
int
sbb
or
push
push
mov
push
add
xabort
ret
ins
fimul
sbb
ficomp
mov
adc
or
pop
lahf
in
mov
hlt
mov
arpl
(bad)
sub
adc
(bad)
fild
mov
sahf
frstor
mov
pop
push
add
repz
popf
dec
aad
leave
cmps
test
xchg
xor
ins
lods
dec
ins
cmp
jmp
mov
and
in
mov
cmp
push
or
xor
dec
adc
sub
test
gs
icebp
inc
push
sbb
push
sub
ins
dec
push
pusha
adc
loop
xchg
(bad)
das
push
jno
add
pop
mov
pop
js
jl
sub
or
mov
loopne
addr16
jns
dec
mov
shr
pushf
lds
dec
and
mov
sbb
mov
pop
aad
aaa
pop
mov
mov
das
or
(bad)
ret
fdiv
pop
les
test
push
xchg
inc
hlt
mov
jmp
mov
push
icebp
mov
jg
stc
add
pop
inc
xor
sahf
and
std
cmp
int
or
or
enter
mov
cdq
push
pop
sub
hlt
or
ret
mov
adc
mov
movs
ficomp
mov
push
rcl
and
ins
push
aaa
jp
mov
loopne
or
sub
inc
test
xor
jnp
nop
into
loope
fldenv
inc
push
outs
je
call
ret
xchg
pop
mov
out
cmp
mov
shl
jecxz
xchg
lods
add
sub
lods
inc
imul
mov
xor
jmp
or
enter
aaa
sub
adc
mov
dec
sbb
sti
fild
xor
pusha
sub
loop
jmp
outs
outs
jo
jnp
push
and
scas
hlt
dec
sar
jg
mov
cmp
fwait
xchg
adc
xor
sbb
pop
pop
bound
mov
mov
scas
jo
js
fisttp
(bad)
(bad)
push
add
jns
inc
fild
jb
pop
aaa
and
xor
push
push
mov
xchg
dec
repz
xor
arpl
push
fcomp
aad
cli
shl
jo
cmp
push
pop
jno
imul
iret
mov
jge
mov
xor
sbb
and
popf
jle
xor
scas
lds
scas
scas
push
cmps
mov
movs
aas
fbld
pop
es
fs
call
dec
lahf
imul
add
jp
and
pop
lea
mov
bnd
xor
pop
xlat
xchg
cwde
loop
in
call
adc
push
mov
je
xchg
cmp
call
lahf
xor
and
mov
dec
push
push
cmp
jle
aas
add
jb
sti
mov
mov
call
xor
sub
(bad)
faddp
add
scas
inc
mov
adc
sub
inc
ret
lds
dec
and
ins
inc
retf
push
pushf
stc
mov
nop
lahf
xor
xchg
mov
imul
dec
lahf
sbb
sti
std
fild
ja
add
in
out
(bad)
xor
pop
je
daa
mov
fld
(bad)
xor
mov
add
cmp
ret
outs
cmp
out
int
add
rol
and
xor
mov
adc
pusha
push
sbb
mov
fs
loopne
inc
inc
call
pop
rcr
xor
jno
aaa
iret
jge
in
push
mov
pop
mov
add
mov
jae
adc
push
lds
jns
or
sub
cmp
loope
mov
dec
(bad)
rol
or
inc
ret
xchg
push
pusha
shr
iret
xchg
(bad)
das
push
dec
pop
loopne
fs
out
ret
imul
sbb
loope
into
mov
xor
or
jle
out
xor
(bad)
sbb
cmps
in
lods
lock
cmp
rcl
adc
call
mov
stos
push
mov
outs
aad
lods
xor
loopne
dec
aam
sbb
sti
nop
push
std
ins
cdq
adc
fdivp
inc
imul
test
mov
inc
dec
(bad)
retf
int3
pop
or
push
std
dec
mov
sub
and
test
nop
mov
mov
sbb
sub
lds
and
jg
cmp
inc
dec
imul
stc
push
jg
outs
test
push
mov
pop
mov
and
jno
mov
test
ret
mov
lahf
mov
inc
dec
enter
stos
mov
ja
inc
test
std
rol
out
ins
xchg
jb
inc
sub
jg
sbb
sub
cmps
sar
mov
or
(bad)
out
dec
test
fdiv
or
sub
and
xchg
mov
out
cmp
sub
(bad)
or
(bad)
push
add
push
mov
retf
scas
xchg
cmps
cmp
adc
pop
sbb
pop
les
push
cwde
mov
push
inc
pop
out
add
or
cld
sbb
mov
and
outs
pop
mov
dec
inc
shr
(bad)
idiv
cmps
sbb
outs
int3
push
mov
xchg
fbld
jg
retf
pusha
push
dec
jne
pop
sar
mov
mov
adc
je
push
mov
leave
mov
sbb
int3
outs
enter
call
xchg
adc
repnz
mov
push
mov
ret
out
xor
mov
imul
add
and
inc
rcr
pop
mov
call
xchg
inc
mov
stos
ret
xchg
sar
cwde
dec
ins
lock
cmps
adc
int3
mov
xlat
push
stos
scas
les
dec
hlt
out
scas
test
mov
jb
mov
jb
xor
xchg
inc
movs
mov
loope
jae
(bad)
enter
dec
jne
adc
aad
gs
ror
cwde
jp
fild
aaa
mul
or
pop
(bad)
cmp
add
test
sti
and
ret
dec
cs
repnz
sub
les
add
sub
mov
xor
mov
(bad)
mov
cmp
sbb
fdiv
cmps
mov
fidivr
or
push
cdq
out
push
inc
jnp
cmp
retf
mov
dec
out
mov
cmps
xchg
jp
mov
fst
icebp
push
in
in
sbb
popa
push
xchg
inc
fist
outs
leave
cs
push
mov
rcr
sbb
(bad)
sbb
loope
mov
mov
cs
inc
aaa
adc
es
sub
sar
jnp
or
cmp
sbb
jmp
stos
nop
icebp
je
hlt
xor
or
(bad)
xor
ret
cmp
repnz
sahf
jae
push
push
daa
xor
fsubr
xor
add
popa
adc
in
inc
adc
jo
add
cmp
enter
mov
mov
fdivp
mov
cld
sub
cld
xchg
ficomp
push
xchg
(bad)
mov
mov
mov
lahf
cmp
test
xchg
and
mov
out
pop
xchg
clc
cld
arpl
sbb
dec
addr16
out
bound
fcomp
ins
lods
call
fldcw
push
(bad)
cld
sbb
add
in
clc
pop
inc
(bad)
fcom
popf
mov
sbb
repz
gs
cmp
add
mov
int3
pop
ds
push
sbb
shl
lock
push
mov
lahf
daa
mov
dec
adc
and
and
stc
pop
pop
push
or
mov
xor
in
jnp
int
push
popf
repnz
push
outs
(bad)
aam
stc
xchg
out
mov
mov
mov
scas
cmps
stos
dec
jnp
push
pop
das
lahf
iret
out
jo
ins
pop
into
aaa
or
lods
sub
jbe
ss
adc
jae
mov
adc
inc
sub
dec
dec
cmps
les
mov
mov
mov
retf
jmp
pop
inc
pop
mov
movs
enter
push
and
test
mov
call
jae
daa
inc
sbb
outs
fisttp
mov
push
sbb
pop
mov
jbe
jo
out
repz
push
mov
dec
jmp
xor
mov
mov
adc
pop
jbe
adc
fisttp
adc
or
mov
jge
xlat
dec
jne
cmps
xor
cwde
in
cwde
push
jo
pop
adc
xchg
mov
imul
enter
in
aam
mov
mov
jl
ins
ins
scas
movs
xchg
imul
bound
jnp
inc
hlt
jecxz
jb
unpcklps
sbb
push
jae
mov
in
xchg
mov
push
in
mov
sti
push
jge
stos
stos
int
(bad)
pop
inc
inc
stc
test
jmp
out
ror
jle
pop
sub
xor
fstp
pop
adc
push
jecxz
(bad)
inc
mov
dec
imul
out
rcr
mov
pop
mov
std
daa
std
dec
jecxz
fmul
cmp
pop
pop
imul
mov
mov
aaa
cld
test
mov
pop
adc
push
adc
jne
scas
loopne
das
mov
jae
push
stos
int3
loop
jnp
mul
aad
inc
aam
jp
xchg
jmp
jp
imul
jbe
int
fst
push
inc
lds
fwait
pop
bound
fwait
mov
lahf
xchg
out
cmps
fiadd
xchg
fsubr
test
xor
and
daa
push
psubb
stc
jg
add
sbb
inc
inc
movs
mov
sub
fistp
lea
adc
popa
inc
xor
fdivr
pop
mov
mov
cmp
dec
lock
arpl
cs
sar
pushf
je
sub
push
adc
pop
nop
adc
add
sti
lods
(bad)
fistp
ja
xor
in
ds
pusha
xchg
pop
jp
mov
mov
pop
hlt
cmps
ja
cs
pop
mov
mov
mov
inc
dec
cwde
(bad)
rcr
lahf
adc
mov
or
les
lods
jb
and
jmp
adc
test
pop
inc
pop
add
cmc
and
jg
ins
xor
mov
dec
in
and
mov
stos
push
push
mov
xchg
shl
mov
and
add
or
hlt
ret
push
int
mov
ret
sbb
or
xchg
cwde
lahf
xor
mov
inc
xchg
popf
leave
(bad)
jb
mov
sbb
or
fwait
jbe
push
sti
mov
out
das
popa
jp
mov
add
cmps
or
push
movs
lods
iret
test
cs
xchg
ins
xor
xlat
fidiv
mov
in
or
add
xor
adc
mov
sbb
test
jo
mov
mov
addr16
stc
push
nop
fild
test
mov
dec
(bad)
and
pop
sub
jp
ins
gs
adc
inc
add
push
push
hlt
or
dec
mov
lock
jmp
xor
mov
push
ins
push
ror
mov
push
outs
in
leave
stos
cmp
xor
enter
ficom
movs
mov
cmp
jmp
or
icebp
ret
es
scas
ja
out
rcl
adc
add
stos
enter
inc
dec
test
mov
outs
ds
sahf
mov
and
popa
call
sbb
add
jmp
sti
int
mov
inc
or
sbb
adc
push
pusha
add
xchg
push
ins
adc
dec
cmc
add
xchg
call
mov
mov
cmp
and
fist
mov
sub
sbb
mov
ret
sub
fwait
add
push
mov
push
ret
jmp
mov
add
icebp
(bad)
push
loop
pop
lock
inc
enter
inc
into
xchg
add
int
ja
imul
add
nop
in
xor
data16
arpl
or
test
xchg
aad
dec
(bad)
outs
les
in
cmc
les
jle
fiadd
stc
jbe
push
xlat
sub
mov
cdq
add
adc
(bad)
jle
adc
cmc
and
adc
mov
clc
fcomp
dec
bound
mov
or
adc
jg
cmp
xchg
add
mov
cmps
pop
popa
test
sbb
mov
push
in
sbb
popf
ret
xor
cmp
out
ds
scas
inc
int
sub
neg
(bad)
jl
adc
mov
mov
dec
cmc
gs
adc
int3
rcr
int3
sub
xchg
mov
xchg
xor
and
adc
inc
pop
adc
hlt
js
sub
sbb
cmp
rcl
test
xchg
mov
leave
mov
shr
nop
add
jmp
imul
gs
cwde
(bad)
fwait
xlat
rol
push
sub
dec
sbb
stos
sub
xchg
add
sahf
push
dec
mov
call
fwait
xchg
ins
iret
mov
mov
adc
fwait
mov
jg
call
cmps
add
jbe
add
mov
lea
mov
fadd
adc
loop
jno
mov
fimul
push
cmp
jmp
and
dec
mov
and
xchg
loope
or
push
pop
mov
fist
sub
pop
and
cmp
pop
cs
jmp
sahf
inc
fst
ror
mov
mov
mov
ins
scas
test
in
sub
addr16
add
cmps
mov
lock
not
pop
xchg
lock
popa
xor
sub
pop
push
or
cdq
xchg
cmp
mov
jl
jmp
or
rcl
jns
cmp
dec
inc
mov
sub
aad
stc
or
mov
fiadd
test
jmp
sbb
aad
dec
or
dec
test
xor
or
pop
lahf
sub
aad
sub
in
shl
sbb
push
das
mov
aas
lock
imul
lahf
push
or
xor
imul
call
or
sub
push
retf
xchg
cmp
into
shl
stc
cmp
addr16
movs
jne
es
pop
mov
mov
ss
cmp
pop
sub
or
push
jnp
push
and
out
add
cwde
inc
sub
and
cli
inc
xor
jne
jno
lahf
dec
hlt
push
lahf
cs
cmps
xor
pusha
(bad)
aam
test
jl
loope
test
test
popa
out
inc
ss
test
div
mov
imul
movs
in
push
mov
ds
lock
pop
jns
xchg
or
mov
pop
inc
test
adc
dec
aam
pop
push
or
pop
out
xchg
fwait
pop
jp
test
dec
stos
push
xchg
lds
sub
jae
or
ror
push
mov
out
jns
ja
inc
or
pop
cmp
or
retf
mov
mov
retf
ret
inc
jae
dec
mov
or
xchg
jg
jnp
mov
add
adc
jp
push
lods
(bad)
stos
aad
(bad)
out
jge
pop
mov
repnz
in
jg
mov
or
test
repz
xchg
inc
arpl
shl
pop
test
ds
movs
stc
cmc
pop
outs
or
and
lods
ret
repz
loopne
(bad)
cld
pop
fstp
jnp
push
mov
mov
dec
loope
mov
repnz
sbb
xor
or
push
stos
inc
(bad)
and
cmps
pop
pop
mov
push
inc
pusha
bound
clc
jge
cmps
jecxz
cld
pusha
lahf
movs
popf
ins
sub
mov
les
sub
dec
(bad)
fild
int3
mov
dec
ficomp
pop
mov
cld
les
jb
jno
pop
mov
inc
pusha
mov
mov
push
jbe
add
push
jecxz
mov
pop
mov
lahf
xchg
mov
in
xchg
push
add
cs
inc
or
push
push
and
push
mul
loopne
push
jmp
pushf
pop
mov
mov
push
sbb
add
cmp
bound
sbb
scas
loopne
ss
jecxz
shl
mov
(bad)
pop
adc
(bad)
imul
mov
mov
daa
ins
out
test
arpl
ror
lahf
std
sub
rol
pop
js
cmp
dec
cmp
je
adc
ds
cmp
ja
outs
sbb
(bad)
(bad)
and
outs
dec
push
imul
push
sbb
mov
out
stos
xor
cwde
daa
push
or
call
xchg
sbb
je
retf
retf
dec
push
mov
push
mov
jl
int3
ins
ds
fst
popf
test
jae
cmps
sbb
les
mov
cmp
out
adc
mov
push
in
stos
cld
jge
xchg
test
popa
inc
data16
fimul
mov
jmp
xchg
sar
pop
sbb
push
pop
daa
daa
dec
call
fstp
pop
addr16
in
aam
add
jecxz
add
mov
mov
push
mov
ret
mov
mov
retf
imul
gs
pop
adc
cs
aas
imul
pop
test
pop
out
or
add
xchg
mov
pop
rol
fstp
sahf
iret
sub
or
dec
call
jo
cmc
jne
mov
pop
dec
cwde
sub
mov
push
(bad)
test
xchg
js
mov
std
pop
dec
add
lahf
loopne
(bad)
fsub
stos
aas
stos
push
inc
(bad)
daa
inc
scas
add
xor
std
cmp
hlt
pop
cmc
mov
inc
imul
xor
sbb
out
adc
(bad)
mul
sub
(bad)
push
cmps
enter
and
retf
loopne
jecxz
out
add
push
pop
aas
aaa
movs
cmps
(bad)
adc
xlat
shl
mov
mov
fs
pop
ss
pop
add
jge
mov
jg
dec
dec
add
and
int
std
pop
dec
mov
cmp
sub
cmp
shl
push
xchg
es
or
jno
push
retf
outs
cmp
addr16
cs
test
push
rol
mov
pop
cwde
jg
cmp
hlt
sub
arpl
sbb
es
inc
pop
sbb
(bad)
jb
enter
mov
inc
sahf
push
into
jbe
fcomp
inc
jl
sbb
(bad)
jb
test
cmp
jmp
enter
xor
outs
mov
adc
les
out
lods
cmps
into
das
and
inc
and
jl
mov
sub
icebp
mov
cmps
imul
sub
popf
iret
ds
pop
inc
push
cmp
fs
(bad)
(bad)
add
clc
pop
jo
adc
add
jb
sbb
mov
lods
cmps
jmp
scas
pop
or
pop
push
popa
mov
mov
loopne
push
push
sub
add
adc
cmp
pop
pop
inc
neg
stos
push
dec
mov
adc
push
add
in
and
add
ffree
mov
test
(bad)
mov
test
sub
imul
ins
hlt
pop
cwde
push
push
scas
inc
cmps
xchg
jle
pusha
fld
dec
rcr
fsub
sub
inc
jns
out
add
iret
xor
cmps
popf
loop
hlt
in
mov
push
test
call
fcomp
and
neg
(bad)
push
and
into
push
jo
loope
push
cdq
ds
push
shl
add
or
pop
cmp
out
mov
push
sbb
and
test
cli
adc
adc
es
(bad)
in
ret
rol
adc
repnz
mov
sub
shl
jne
(bad)
mov
mov
dec
mov
mov
ins
not
jle
jno
lds
adc
jmp
pusha
cmp
das
mov
pop
mov
loop
cmp
in
inc
stc
push
sbb
gs
data16
outs
xchg
(bad)
dec
and
pop
cwde
pop
sub
outs
jae
jbe
mov
popa
adc
sbb
je
repnz
sub
xor
or
inc
out
lahf
cmps
pusha
cmc
mov
add
mov
jb
sbb
inc
je
fcomi
push
in
jge
dec
jne
in
movs
or
or
dec
es
imul
push
cwde
jae
outs
mov
mov
lea
pushf
popa
sub
sub
ret
mov
xor
inc
sub
sbb
inc
test
or
iret
daa
stos
movs
dec
sub
mov
push
mov
inc
call
inc
test
das
push
ret
jle
mov
mov
retf
dec
push
iret
icebp
(bad)
test
or
xchg
mov
test
shl
push
in
cmp
lods
rol
cdq
dec
push
cwde
pop
(bad)
test
jne
dec
cwde
and
clc
sub
out
lds
mov
push
je
push
loopne
xor
cmp
sbb
jnp
call
fwait
nop
push
rcl
movs
push
pop
mov
jb
fstp
das
aas
addr16
loop
push
add
test
fild
ds
lods
adc
mov
fs
mul
nop
push
test
mov
stos
nop
jg
mov
mov
es
ja
shl
popf
ins
xchg
(bad)
aaa
xor
adc
or
lahf
sbb
cwde
(bad)
ins
jmp
push
nop
push
and
(bad)
aam
push
aam
gs
repnz
cli
push
mov
in
les
test
lock
mov
jae
imul
call
cmp
adc
xchg
lods
cmp
pop
cdq
jne
push
jl
mov
xor
xchg
xchg
and
jge
scas
cmps
inc
clc
jecxz
ds
clc
dec
shl
ins
shl
prefetch
or
jmp
fiadd
xchg
sbb
imul
es
std
and
inc
cmp
adc
pop
lods
push
mov
aas
frstor
jle
out
retf
or
mov
aaa
jns
mov
imul
test
cdq
cmp
add
shl
or
pop
add
jno
lods
mov
neg
push
adc
es
stos
(bad)
fsubr
pop
or
test
sub
in
mov
loop
ss
sub
jg
adc
scas
call
arpl
lahf
(bad)
call
mov
sub
jb
inc
cdq
call
jle
js
pop
daa
pop
ret
lea
push
push
sub
adc
cld
or
adc
push
jb
push
and
fcmovu
into
inc
sub
dec
(bad)
dec
push
test
cmp
and
out
cmps
and
fmul
xchg
cdq
stos
jae
int3
inc
or
and
data16
jge
ds
add
adc
xchg
data16
out
loope
fdivr
loop
into
scas
cdq
es
in
(bad)
sar
and
jnp
adc
in
or
out
movs
rol
xchg
aam
daa
sar
adc
std
ret
adc
rol
out
ins
(bad)
jo
repz
addr16
daa
adc
or
daa
jbe
repz
out
xor
xchg
mov
mov
daa
enter
jmp
jp
sar
je
(bad)
std
xchg
pshufw
jno
mov
push
push
dec
repnz
sahf
adc
sub
cmp
fnstsw
dec
aam
inc
mov
call
fistp
dec
or
adc
mov
pop
xor
out
inc
xor
add
sti
pop
and
cdq
or
push
in
jmp
dec
ret
push
scas
scas
shl
push
cdq
push
pop
mov
dec
into
and
pop
add
cmp
lar
xchg
fnsave
cld
sbb
or
pusha
or
mov
rol
cmps
retf
int
push
bnd
pushf
sub
cmp
in
jl
pop
movs
xchg
mov
inc
rcl
xor
push
adc
mov
in
pop
call
mov
mov
pop
pop
nop
out
mov
ins
sti
repnz
les
shl
xchg
sub
push
add
ss
out
ror
pop
ret
add
or
call
idiv
dec
(bad)
sub
jg
fwait
out
mov
pop
push
out
mov
jmp
push
or
cmp
jg
mov
xor
loopne
daa
fst
jno
mov
cmps
lock
sbb
inc
sub
jbe
dec
and
test
jne
or
or
add
mov
pop
cdq
mov
pushf
addr16
pop
cmc
jl
je
rcl
dec
fld
xor
mov
cmps
xchg
mov
xchg
add
dec
dec
pushf
mov
adc
mov
mov
adc
sahf
sbb
call
pop
addr16
sbb
adc
cs
sbb
and
add
mov
lods
retf
cmp
jno
and
inc
pop
daa
or
inc
or
in
jbe
jge
out
jns
out
rol
(bad)
and
sub
dec
aaa
(bad)
enter
bnd
out
and
mov
enter
inc
mov
aad
dec
pop
xor
retf
xor
fwait
jnp
pop
arpl
lock
pop
ja
mov
mov
mov
dec
dec
bts
cdq
div
cmc
adc
shld
cmc
inc
inc
iret
adc
mov
mov
adc
sbb
test
ficomp
pop
outs
adc
scas
outs
add
jo
aaa
popf
call
and
test
in
and
inc
shr
sbb
dec
shl
adc
push
nop
ret
sbb
push
inc
fnstsw
int3
mov
push
sub
ins
pop
and
das
add
icebp
call
aad
mov
mov
fistp
xchg
loope
mov
jge
test
(bad)
jno
adc
lds
jg
(bad)
jne
dec
mov
pusha
xor
adc
jmp
mov
mov
stos
xchg
xchg
xlat
cwde
xchg
xchg
ss
aad
test
imul
repz
mov
push
aad
sub
cld
movs
mov
mov
shr
inc
in
mov
mov
pop
jnp
lods
dec
packuswb
fld
fcom
mov
daa
sub
xchg
ret
dec
cmc
jmp
mov
inc
xchg
in
shl
pop
pop
jl
or
stc
sbb
repnz
dec
mov
dec
and
je
cmc
ret
or
ins
jl
push
out
or
test
cmps
ss
ret
xchg
dec
arpl
jecxz
jmp
and
jl
scas
shr
sbb
jl
adc
ja
cmp
pusha
stos
dec
arpl
pop
mov
js
cmc
xchg
or
xchg
sub
lds
pop
gs
xchg
ins
pop
lods
sub
inc
mov
dec
and
pop
inc
push
jp
sub
pop
test
int3
sbb
adc
in
jbe
add
dec
scas
push
cli
fstp
sub
mov
orps
imul
fnstsw
xor
out
out
inc
aad
hlt
fs
stos
popf
(bad)
es
lahf
(bad)
mov
pop
cmp
add
cmp
or
inc
pop
lea
dec
dec
fnop
xchg
test
cld
pop
outs
retf
xchg
repnz
mul
adc
mov
js
jg
ret
xor
sbb
inc
fsubr
sbb
pop
pop
outs
sar
mov
addr16
jg
out
int
fwait
push
cmp
xor
dec
(bad)
sub
ja
push
fidiv
fidivr
rep
jmp
xchg
xchg
stos
xlat
ret
mov
adc
mov
mov
daa
addr16
pop
or
push
and
mov
mov
cmp
imul
push
jg
cmp
inc
ins
mov
pop
pop
sbb
push
push
into
pop
aas
sub
adc
inc
jp
jmp
bound
icebp
mov
arpl
hlt
ss
xor
adc
fstp
or
imul
jne
retf
faddp
sbb
mov
adc
clc
les
cmps
mov
out
jmp
mov
outs
imul
push
adc
(bad)
loop
pop
or
push
leave
inc
dec
push
call
outs
bound
xchg
pop
pop
pusha
gs
sti
scas
pop
sbb
stos
xlat
mov
aaa
arpl
outs
cmp
fimul
cld
cwde
rcl
mov
cs
sti
cmp
sub
lods
inc
xchg
adc
stc
cmp
bound
sbb
cmp
not
xchg
repz
out
imul
or
movs
xor
xchg
sub
push
xchg
bound
pop
and
ja
adc
pop
mov
dec
lea
data16
jecxz
sbb
out
adc
adc
movs
mov
mov
sub
dec
dec
pop
popa
mov
enter
outs
inc
and
add
inc
dec
push
inc
fcom
or
sub
mov
inc
mov
outs
(bad)
inc
pop
add
mov
mov
(bad)
ins
gs
inc
jne
dec
les
or
mov
or
mov
xchg
cld
mov
mov
into
out
mov
xchg
mov
mov
xor
stos
jno
mov
bswap
in
xor
cmp
ror
add
xor
xchg
and
cld
mov
add
sbb
in
jl
push
sub
mov
add
mov
cmps
das
mov
sti
ret
fs
(bad)
(bad)
mov
outs
lahf
fnsave
fstp
out
adc
out
mov
or
lahf
dec
adc
fisttp
xchg
cmps
imul
fild
in
shl
(bad)
int
mov
jns
inc
mov
mov
push
push
dec
and
jmp
jmp
mov
or
ret
retf
xor
sbb
pop
daa
lock
mov
or
jp
and
inc
test
iret
shr
inc
fmul
int
aas
mov
mov
sub
adc
inc
out
xor
mov
cmps
jns
sub
shr
inc
mov
jb
mov
xchg
push
ss
mov
repz
mul
lods
fs
pop
jmp
je
xor
pop
inc
addr16
pop
shl
sbb
xchg
in
mov
nop
outs
ret
retf
pop
cdq
in
retf
fldenv
mov
nop
test
lea
sub
retf
xor
movs
and
and
(bad)
mov
xlat
and
pop
xlat
cmp
push
cmp
aaa
push
and
or
jno
pop
gs
lods
push
mov
or
call
cmp
mov
pusha
inc
cmps
call
gs
leave
aam
aaa
(bad)
pushf
xor
sahf
sbb
stos
jge
or
sahf
(bad)
movs
inc
and
popf
test
(bad)
dec
fiadd
fwait
jge
sbb
cmp
pop
cmps
in
and
sahf
mov
and
adc
xlat
sbb
ret
jmp
jo
(bad)
mov
bound
xor
mov
sbb
idiv
jle
cdq
inc
inc
sub
xchg
cmp
dec
lahf
mov
and
jo
ds
repz
(bad)
jae
sbb
or
jl
xchg
xchg
(bad)
jmp
and
daa
mov
inc
retf
ja
adc
stc
mov
dec
retf
popa
xor
mov
inc
dec
pop
test
pusha
push
mov
jno
scas
mov
cmp
inc
daa
ret
mul
in
push
test
adc
or
mov
nop
ret
popf
mov
dec
popa
pop
(bad)
std
sbb
fstp
stos
sbb
mov
sbb
mov
mov
mov
or
adc
rol
dec
add
add
mov
cmp
ss
xor
lahf
loope
dec
sti
and
xor
xor
mov
inc
cmp
sbb
aas
test
in
xchg
pop
sbb
adc
movs
push
in
(bad)
lods
call
xchg
push
or
cwde
stos
js
pop
lock
mov
out
dec
outs
rcr
add
imul
les
mov
inc
mov
imul
mov
pop
jnp
add
stc
ret
sti
pmaxsw
pusha
adc
sbb
mov
xchg
mov
pop
lea
ret
cs
(bad)
xor
in
cli
inc
adc
mov
out
fldcw
sub
mov
sub
gs
and
repnz
jle
shl
mov
cmp
cld
ret
pushf
scas
jg
mov
in
daa
dec
jg
sub
dec
mov
push
std
xchg
or
mov
pop
and
pushf
lahf
xchg
mov
js
sub
in
call
add
pop
(bad)
xor
into
and
test
mov
ins
xchg
pop
shr
lds
fisttp
add
movs
pop
or
lea
cld
pop
push
scas
ss
cmp
xor
xchg
dec
xor
shr
mov
aas
aas
movs
mov
sbb
stos
ins
aaa
and
lods
push
jle
xor
sahf
stos
cmp
pop
stc
push
push
daa
push
sbb
test
xor
mov
sbb
pop
enter
mov
sub
imul
cmps
jnp
fisub
ins
mov
stos
mov
jp
into
mov
das
cmps
xor
rol
ja
shl
dec
push
sub
push
cwde
fwait
cmp
jmp
clc
in
and
or
out
retf
pop
jmp
mov
sbb
pop
or
test
mov
mov
adc
mov
xchg
jmp
int
add
push
mov
pusha
dec
(bad)
call
adc
cmp
pop
mov
cld
je
xchg
ds
adc
lods
cmp
cs
mov
pop
adc
imul
jecxz
dec
std
leave
xor
mov
repz
mov
loopne
mov
push
mov
(bad)
(bad)
add
gs
popf
ror
lds
fisttp
mov
nop
cmps
cmc
call
push
arpl
xchg
outs
jmp
dec
jmp
push
std
(bad)
cmps
inc
in
jb
or
in
xor
arpl
add
jb
xchg
or
or
jg
scas
push
retf
call
sahf
pop
inc
pop
push
shr
(bad)
mov
mov
dec
push
pop
(bad)
pop
push
cmc
retf
push
fs
mov
sub
retf
fisubr
sub
jmp
ins
pop
pop
jae
xor
push
add
je
sub
dec
mov
pop
dec
loope
in
pop
scas
rcl
push
mov
and
retf
mov
sub
jnp
retf
imul
dec
or
push
ror
sub
mov
aas
loopne
test
enter
ret
retf
mov
sub
mov
adc
inc
dec
mov
add
fcom
xlat
out
test
inc
out
mov
push
stos
loope
mov
cdq
arpl
cmp
or
(bad)
dec
lahf
and
push
loop
(bad)
jno
ret
retf
popa
fistp
pop
and
test
push
les
mov
jbe
addr16
adc
dec
movs
jo
xchg
sub
mov
push
(bad)
ret
jge
ja
adc
sbb
sub
test
cwde
mov
lock
add
cmp
lock
test
ss
jb
in
pop
outs
inc
jae
add
lds
adc
jmp
xor
(bad)
dec
mov
push
mov
inc
enter
or
jno
lahf
stc
sbb
pop
fld
inc
aad
imul
adc
push
xchg
adc
cmp
in
icebp
adc
pop
jnp
sub
add
ja
inc
add
popa
xchg
add
pop
jno
inc
js
xchg
inc
jne
jmp
jne
pop
mov
dec
push
mul
push
jmp
clc
adc
rcr
pop
mov
inc
mov
push
inc
dec
fstp
cmp
and
repz
xchg
mov
rep
cmp
loop
mov
pop
adc
mov
stos
mov
sub
dec
ins
add
andps
xor
les
cmp
sub
adc
xchg
xlat
cmc
jmp
mov
fs
sbb
dec
(bad)
mov
pop
mov
repnz
push
or
dec
dec
mov
ins
sbb
out
mov
pop
mov
jmp
outs
int3
push
sahf
push
sub
sub
cli
out
daa
loop
mov
retf
or
xchg
push
pop
ja
mov
add
pop
and
mov
push
rol
mov
xchg
xor
dec
xor
cmp
imul
cmps
dec
push
add
jle
mov
pop
cli
push
jnp
sub
dec
fld
pop
add
dec
sub
pop
dec
pop
xor
cdq
lods
fmul
mov
retf
xor
rcr
outs
fstp
out
mov
(bad)
or
test
ror
pop
pop
and
sub
test
jae
jle
fs
mov
cld
test
stc
xor
add
out
in
add
(bad)
xlat
sub
and
xchg
out
rcr
ins
xor
rcl
sbb
je
sahf
xchg
add
cmp
cmps
lds
push
pop
mov
sub
outs
stos
in
push
clc
retf
(bad)
pusha
fsubrp
add
sahf
mov
xchg
dec
aad
leave
adc
icebp
pop
inc
push
(bad)
sbb
scas
push
adc
lahf
sbb
adc
mov
aam
popf
cmp
neg
push
scas
fsubr
lock
icebp
pop
jae
pop
cvtpi2ps
not
data16
and
jge
and
aas
lods
dec
ret
loopne
fidiv
adc
or
pop
push
or
push
shr
push
pop
aas
fistp
or
inc
shr
xor
jge
cld
cmp
push
cmp
out
mov
jnp
mov
scas
cs
xchg
int
fistp
push
bound
sub
sar
mov
(bad)
ins
les
out
cmp
ins
ss
mov
adc
mov
push
cmp
cmovno
arpl
lock
ficomp
xor
mov
mov
mov
inc
pusha
adc
inc
movs
sti
ror
fisubr
add
int
mov
push
(bad)
sub
repz
scas
or
rcr
jg
xor
pop
scas
out
out
jae
push
xchg
rol
xchg
pop
fcom
sub
and
loope
popa
mov
mov
fs
or
repnz
fstp
pop
das
(bad)
fnsetpm(287
ret
in
xchg
push
xchg
call
js
fcmovu
and
add
mov
or
pushf
jbe
ins
gs
cmp
push
test
fisub
or
cmp
jp
dec
pop
cmp
mov
data16
(bad)
cmp
pop
daa
cld
cmp
xor
push
ds
push
and
ins
sbb
xor
int
movs
hlt
imul
out
adc
mov
out
imul
ja
dec
mov
(bad)
xchg
dec
js
jo
in
mov
jecxz
loope
shl
sub
sub
mov
mov
add
movs
enter
xor
adc
mov
inc
les
enter
hlt
mov
adc
jnp
rcr
lods
add
fcomp
outs
xchg
lock
neg
xchg
dec
pusha
pop
mov
ret
rcr
add
xchg
adc
sbb
inc
ret
in
push
or
popa
pop
out
out
int3
jmp
or
test
cld
(bad)
xor
arpl
mov
jns
adc
bound
mov
inc
aas
sub
xchg
add
test
cmps
jp
sbb
mov
std
cmps
out
ja
movs
add
inc
lods
and
mov
mov
xchg
sub
pop
inc
add
cmc
sbb
rcl
in
cwde
int3
mov
push
loop
xor
(bad)
push
lds
loopne
and
dec
rol
fisttp
test
xchg
cdq
adc
and
sti
leave
in
rcr
cs
inc
sbb
call
cmp
iret
mov
xchg
stos
sar
sbb
(bad)
inc
xor
rcr
mov
das
mov
cld
inc
jmp
pop
mov
inc
ins
cld
loope
add
or
dec
test
dec
(bad)
mov
xchg
loop
cmps
fs
ret
popa
mov
enter
je
inc
sbb
or
jno
mov
push
sbb
test
fs
aas
add
lea
hlt
hlt
js
lahf
loop
xchg
repz
cmp
cmp
push
push
cmp
mov
loop
(bad)
and
add
mov
add
in
adc
jp
ds
xchg
xor
pop
and
or
rcl
rcl
dec
xor
lea
lds
and
or
ss
das
xchg
dec
(bad)
lock
fiadd
mov
cmps
(bad)
fist
push
adc
iret
in
cmp
outs
leave
shl
mov
lods
lods
cmps
lea
sbb
stc
fwait
push
add
mov
mov
sub
push
or
vcvtps2dq
add
pop
aad
mov
gs
sub
jmp
jmp
add
inc
sbb
popa
push
xchg
sub
mov
loope
mov
lahf
imul
cli
es
or
mov
xor
aaa
xchg
pop
push
(bad)
and
lea
call
les
repnz
fnstenv
or
and
sbb
mov
pop
jmp
fisttp
rol
cmps
stc
mov
mov
dec
dec
pusha
(bad)
jne
clc
leave
(bad)
daa
fbld
add
imul
sub
adc
icebp
les
xor
mov
sbb
xchg
xchg
retf
repnz
js
(bad)
jo
mov
xor
or
sbb
sub
arpl
leave
ret
retf
xor
loop
jo
pusha
sub
fdivp
xchg
cmp
dec
sub
into
and
pop
cmp
(bad)
adc
mov
rol
dec
fwait
arpl
fs
pushf
lods
and
jne
sets
dec
mov
ficom
pop
mov
jg
das
movs
cmp
sti
inc
dec
xchg
push
dec
popa
and
xor
sbb
jle
jl
pop
mov
lock
loope
adc
pop
fst
mov
movs
push
les
xor
dec
jns
stos
lods
adc
cmp
(bad)
jmp
ret
call
xchg
push
dec
mov
mov
inc
je
pop
and
add
mov
ret
push
pop
stos
mov
inc
adc
call
arpl
loopne
lods
xor
xor
outs
push
cs
mov
push
add
dec
scas
std
int
ja
and
daa
hlt
sar
jbe
dec
fistp
aas
or
aaa
pop
daa
dec
in
call
mov
xchg
imul
outs
and
js
mov
retf
jg
mov
fst
adc
(bad)
sub
(bad)
jae
and
pcmpeqw
mov
inc
bound
mov
imul
into
jb
mov
cmp
pop
dec
dec
push
jmp
arpl
jae
push
xchg
add
mov
popf
iret
movs
not
test
or
sbb
nop
cmc
mov
les
dec
sub
sbb
fcmovu
push
xlat
cvttps2pi
jecxz
or
jmp
sbb
ficomp
bound
adc
cmp
cmp
movs
dec
xchg
cdq
dec
mov
xor
sbb
cmp
fcom
lea
mov
inc
inc
mov
ficom
repnz
out
gs
out
cld
mov
call
add
mov
enter
repz
add
cmp
jp
cs
xor
jg
ja
sub
out
nop
out
push
dec
xor
pop
lods
cmc
pop
fcmovbe
jle
pop
mov
push
pusha
mov
mov
mov
mul
daa
sar
mov
adc
ins
inc
fst
rcl
jo
push
mov
adc
dec
ja
and
in
add
js
js
scas
and
add
std
cmp
ds
dec
jae
fstp
popa
sbb
aaa
jb
jmp
(bad)
pop
mov
inc
mov
mov
inc
mov
jo
cmp
fs
sbb
inc
sti
cwde
inc
movs
aaa
push
loopne
sti
xor
xor
add
or
jmp
test
mov
lods
mov
pusha
dec
lahf
outs
mov
inc
(bad)
and
mov
neg
ja
stos
les
cmp
shl
lock
scas
sbb
popa
arpl
leave
jmp
jle
icebp
addr16
not
mov
int3
rcl
aam
es
mov
aaa
gs
xlat
sub
xchg
xchg
ss
mov
mov
jecxz
aad
aad
jmp
ss
pop
push
pop
cs
aad
mov
adc
cmp
call
icebp
mov
mov
sub
push
add
in
cmp
ins
xchg
cmps
cmps
jns
repz
aad
aas
xor
fcmovbe
mov
das
jmp
imul
ins
ret
or
jg
pop
es
lahf
adc
pop
dec
sbb
push
jecxz
out
cmp
add
out
imul
dec
dec
int3
mov
pop
xchg
aaa
int3
xor
mov
sub
and
pop
test
pop
jecxz
pop
fadd
dec
inc
mov
inc
cmp
jne
aam
push
add
out
mov
or
loop
mov
pop
inc
ins
pop
pop
aaa
xor
sbb
xor
cmc
shl
push
cdq
add
mov
or
mov
mov
(bad)
push
xchg
or
jmp
dec
enter
cmp
call
stc
or
in
jo
jecxz
es
sub
(bad)
rcl
inc
xchg
dec
sahf
fdiv
xchg
call
in
retf
ss
aam
sahf
jno
pop
inc
push
jmp
in
sub
shl
push
adc
adc
ret
push
cmp
dec
outs
inc
mov
inc
test
inc
stc
inc
or
call
dec
push
mov
jle
cmc
lea
lock
cs
jle
ins
add
or
ror
cmovle
(bad)
inc
retf
test
push
repz
cli
rcl
(bad)
jl
mov
fdiv
and
adc
daa
lods
popa
arpl
add
lea
cld
dec
movs
(bad)
jnp
mov
fmul
mov
js
jno
(bad)
pusha
sub
mov
js
arpl
jnp
ja
call
out
fild
mov
outs
retf
push
mov
mov
sbb
mov
ds
ret
cmp
push
push
xor
cmp
xlat
loope
scas
shl
std
add
dec
add
jbe
jl
retf
fisttp
std
pop
dec
fimul
or
push
mov
and
sub
or
imul
mov
psrld
mov
idiv
xchg
lods
test
xor
xor
adc
inc
rcr
rcr
das
adc
add
or
enter
out
test
xchg
into
popf
sub
stc
shl
xchg
fs
jge
xor
xor
push
mov
es
xchg
fwait
iret
sbb
dec
rcr
sub
bound
sbb
xor
add
cmp
sub
lds
jge
jnp
mov
jecxz
sar
in
mov
js
mov
sub
rcr
cmp
bound
mov
mov
sbb
out
cmps
and
jmp
sahf
sbb
mov
mov
leave
push
jl
adc
mov
sbb
add
lods
sub
inc
lock
test
test
adc
cld
cmp
jbe
(bad)
imul
inc
push
adc
pop
mov
add
and
(bad)
(bad)
(bad)
or
in
push
mov
test
shr
xchg
out
xor
pop
xchg
(bad)
xor
pop
retf
xchg
loopne
add
jo
cli
sbb
adc
sbb
cmps
popf
stc
sbb
jbe
mov
bound
push
out
cs
push
xrelease
cmps
pop
and
jnp
out
xor
push
inc
into
or
hlt
sar
inc
mov
out
lods
les
clc
lahf
sub
lods
mov
cmps
jmp
or
loopne
and
test
jno
mov
mov
rcr
stos
fcomp
cmp
xor
mov
dec
push
and
mov
loopne
or
xchg
cmp
fist
jnp
jecxz
adc
imul
pop
movs
aas
xor
cs
ja
int
pop
mov
jecxz
sbb
mov
inc
jmp
inc
pop
lock
sahf
nop
or
dec
out
push
stc
ficomp
js
mov
fstp
dec
mov
sbb
inc
(bad)
cmps
(bad)
aam
or
(bad)
leave
cmp
(bad)
rol
dec
lods
cmp
mov
sbb
cmp
jmp
movs
out
and
sub
jne
in
mov
push
ret
cmp
mov
mov
ins
pop
mov
mov
fdivr
out
pusha
psubd
cmp
push
add
or
mov
stos
enter
(bad)
loopne
and
sbb
seta
fwait
mov
fiadd
and
enter
mov
or
ret
cli
rcl
mov
push
ficomp
mov
cmp
add
ret
mov
rol
push
lock
push
std
inc
imul
fsub
push
mov
cmp
in
push
test
in
add
pop
lock
sub
mov
mov
test
mov
mov
outs
fwait
pop
aad
jmp
pop
adc
fisubr
call
shl
fdivr
pushf
repnz
cmp
arpl
cmc
dec
dec
fsubr
test
(bad)
cmp
ss
js
aad
push
repz
cli
scas
out
scas
jecxz
dec
inc
rol
xchg
or
and
mov
mov
jl
cmp
je
dec
add
int
je
push
xor
add
outs
xchg
ss
jb
jecxz
retf
pop
adc
sub
xchg
outs
push
xlat
push
jo
mov
sti
inc
fst
ss
pop
aas
adc
pusha
ret
jae
jmp
adc
ja
mul
pop
jb
ds
aad
stos
loope
pop
test
nop
retf
in
cmp
dec
(bad)
cmp
adc
and
leave
mov
sbb
aad
lahf
xchg
enter
push
lods
push
(bad)
inc
imul
inc
(bad)
jno
dec
inc
fwait
mov
sbb
movs
jne
test
pop
add
mov
mov
jecxz
push
mov
mov
and
hlt
xor
std
sub
xor
push
ins
jmp
jne
loop
jae
sub
bound
int3
jo
(bad)
shl
push
bound
and
stos
cmp
xor
mov
jnp
fwait
inc
test
jae
bound
inc
jp
xchg
mov
leave
ins
add
sar
or
dec
add
push
ja
mov
xor
leave
jle
sbb
xchg
movs
cmp
out
xor
jne
stc
pushf
std
xor
mov
arpl
(bad)
mov
mov
mov
ja
mov
sti
cmc
cmc
jp
std
rol
add
in
test
es
and
rcr
mov
pop
ss
imul
cli
popa
scas
in
fidiv
fidivr
stos
sub
adc
inc
ror
dec
push
cmp
fs
clc
sub
inc
(bad)
loopne
pop
ror
mov
mov
push
xchg
pop
sar
push
stc
cmc
or
mov
mov
out
mov
push
xchg
and
imul
inc
sbb
pop
mov
imul
fsub
sti
(bad)
xchg
loop
pushf
push
jg
sbb
out
out
outs
sbb
sbb
xchg
clc
test
leave
jne
inc
ret
jle
fwait
out
or
jmp
jns
mov
(bad)
cld
sbb
jge
jns
mov
in
lds
pop
xor
js
cmps
int3
push
or
test
jne
push
pop
daa
push
jmp
mov
gs
xchg
and
shl
cmp
cdq
mov
stc
imul
call
mov
add
ins
sub
addr16
mov
push
pusha
adc
out
xor
adc
ja
xlat
fstp
push
jnp
mov
dec
test
mov
data16
push
int
and
xchg
stos
loope
cmp
lds
mov
or
aad
loope
inc
or
ret
into
arpl
adc
mov
dec
mov
call
imul
aaa
gs
jnp
fisubr
es
mov
jecxz
pop
adc
rol
scas
lock
xor
mov
mov
inc
inc
(bad)
pop
and
in
push
mov
enter
lds
jp
rol
in
je
xchg
ss
mov
popf
cli
mov
add
dec
fmul
adc
fs
ins
xchg
loopne
pop
cmc
add
jl
daa
or
loope
outs
mov
stc
lea
test
dec
sbb
mov
les
dec
mov
inc
loopne
xchg
cwde
push
or
pop
aad
mov
mul
iret
dec
dec
dec
gs
jo
dec
(bad)
cli
and
repnz
pop
adc
test
sbb
mov
xlat
das
pop
stos
and
jl
out
addr16
sub
adc
mov
dec
push
sbb
jmp
imul
inc
mov
daa
out
mov
aas
sbb
xchg
mov
sbb
shl
in
mov
xor
mov
inc
sbb
nop
fstp
push
push
mov
sub
ja
or
xor
push
adc
iret
push
mov
jmp
adc
sbb
push
add
ret
jg
jl
retf
fsubr
inc
mov
rcr
sub
dec
adc
inc
adc
mov
pop
ret
and
sbb
(bad)
sbb
adc
push
outs
aas
pop
push
push
std
dec
sub
adc
mov
dec
mov
mov
pop
nop
add
mov
repnz
cmp
mov
pop
add
dec
mov
inc
shl
popf
pop
enter
rcl
mov
mov
dec
dec
mov
mov
push
sbb
fild
iret
mov
scas
xchg
mov
pop
inc
sbb
pop
es
call
pop
jns
xchg
outs
mov
popf
(bad)
stc
je
and
fild
xor
in
or
push
sub
cli
mov
push
adc
pusha
sub
imul
rcl
add
lea
shl
xchg
and
ret
add
movs
jo
pop
sahf
aam
leave
cdq
mov
sub
jl
mov
es
fadd
retf
adc
pop
call
cmps
jmp
rol
fs
stc
push
dec
cmp
data16
lock
cmps
mov
pop
jmp
sub
xor
mov
enter
push
inc
mov
mov
out
adc
in
mov
adc
int
mov
inc
mul
jbe
cmps
pushf
fwait
xlat
ins
ret
push
and
ret
outs
adc
push
stos
pop
pop
xchg
cmps
jl
aaa
xchg
push
dec
jmp
inc
imul
(bad)
or
and
mov
fldcw
mov
fiadd
ficomp
test
test
jp
cs
jg
mov
push
cli
(bad)
jno
push
mov
fs
jns
adc
cwde
xchg
call
sub
jb
jmp
ret
fbld
push
jmp
js
sub
sbb
aaa
stos
pop
es
rep
pop
push
push
push
push
jl
dec
aas
pop
inc
inc
les
outs
jge
hlt
std
xchg
or
shl
mov
sbb
push
or
xchg
cmp
xor
jmp
jmp
mov
outs
lock
movs
div
sahf
(bad)
mov
dec
sbb
push
xlat
pop
xor
add
jbe
jl
and
add
fdivr
mov
cmc
xchg
jb
ret
cmp
arpl
(bad)
adc
push
cli
inc
scas
test
loopne
pop
xchg
xor
(bad)
mov
stos
jnp
xchg
xor
fs
(bad)
push
cs
in
jg
pop
push
adc
or
jno
sbb
mov
xor
mov
xchg
retf
or
jg
mov
xchg
pop
pop
xor
(bad)
xchg
xor
loopne
shl
adc
lods
push
jb
cmp
add
in
mov
jno
xchg
and
fisttp
into
pop
cld
iret
cmps
adc
sub
fcomp
mov
xchg
push
jmp
ficom
fisttp
stc
sahf
xchg
and
push
xor
jl
mov
xchg
sbb
popa
loope
es
inc
pop
ja
dec
push
fs
mov
in
cdq
into
mov
daa
dec
lods
les
js
fist
cmps
adc
sbb
cmp
ins
mov
rcr
mov
mov
mov
mov
pop
adc
bound
sbb
aas
xlat
sbb
adc
jno
jae
cmp
adc
jl
or
inc
pop
cwde
mov
sub
fadd
lea
jmp
sbb
add
pop
dec
lds
sub
mov
mov
out
push
mov
adc
cld
pop
sti
jp
xor
in
cmps
add
jmp
dec
aad
and
dec
in
or
add
mov
stos
push
ret
pop
shl
dec
inc
test
mov
ins
outs
jns
stos
and
xor
fs
xlat
inc
sbb
push
mov
lods
scas
(bad)
fild
hlt
sub
mov
ins
push
in
push
mov
lods
mov
dec
dec
adc
sub
retf
(bad)
shr
push
out
push
inc
push
lds
dec
pop
cdq
repz
jae
fiadd
adc
jo
pop
cdq
pop
aaa
call
movs
adc
cmp
xchg
fidiv
add
in
jno
sbb
or
imul
jmp
in
stos
ins
push
ret
dec
es
fsubr
cwde
jmp
jo
pop
xor
sub
lahf
sub
fisubr
popf
add
sbb
pop
sahf
cmc
mov
cmp
mov
push
mov
push
adc
loope
push
dec
fisttp
outs
shl
call
sti
push
xlat
sbb
inc
mov
shr
xchg
jnp
jle
cdq
repnz
pop
es
bound
(bad)
fs
cmp
arpl
addr16
push
popa
pop
add
mov
dec
shr
adc
add
lods
div
mov
inc
jle
xchg
pop
repz
add
inc
cmp
loopne
xor
daa
loop
in
in
nop
mov
loop
add
pop
mov
mov
imul
scas
push
fs
xor
add
out
cdq
sub
cmp
adc
popa
jl
sub
push
repz
or
mov
push
enter
pop
cwde
pushf
imul
dec
sub
call
sbb
leave
(bad)
and
mov
ins
das
xor
xor
shl
dec
mov
ret
in
jae
dec
int3
adc
mov
and
xchg
aam
ret
out
je
inc
jge
jmp
jp
fwait
ret
mov
mov
lds
sub
(bad)
fbstp
test
cs
ss
or
and
sub
push
inc
xchg
cli
push
add
adc
adc
mov
push
or
mov
cmp
(bad)
jo
sahf
dec
adc
std
fsubr
mov
push
jg
and
xchg
jns
(bad)
sti
test
mov
dec
inc
and
inc
sub
inc
or
jcxz
scas
mov
mov
fdiv
inc
(bad)
cmp
lahf
sbb
daa
dec
cmp
inc
sti
add
(bad)
in
fsub
loopne
cmp
daa
sub
clc
or
xor
jnp
push
and
dec
jb
call
or
call
xor
sub
(bad)
push
int
out
(bad)
push
test
je
dec
ja
and
pop
mov
mov
iret
inc
in
mov
repnz
sbb
cmp
xor
shr
dec
push
lds
retf
(bad)
aam
mov
mov
inc
mov
pop
test
leave
mov
lock
mov
jo
xlat
enter
fldcw
arpl
clc
imul
mov
mul
push
or
xchg
jmp
pop
clc
push
in
outs
mov
or
jb
mov
mov
mov
ror
sub
out
push
jns
sti
sbb
sub
xchg
pop
xor
xor
das
sbb
and
sub
sub
movs
push
jle
shr
scas
pop
cmp
lods
add
shr
jmp
scas
jp
add
pop
fdivr
ss
pushf
aad
jo
inc
sub
outs
arpl
xor
xchg
ja
mul
test
in
and
dec
or
(bad)
jl
pop
sbb
xchg
call
sub
jg
cmps
out
scas
in
aaa
adc
mov
jno
daa
cmp
cmps
scas
add
jle
mov
call
fist
mov
movs
jecxz
cmc
push
mov
in
and
fs
dec
dec
lea
mov
jbe
xor
dec
iret
leave
lock
xchg
sub
xchg
xor
jne
xor
pop
mov
jp
push
iret
mov
movs
and
mov
pop
and
xchg
push
push
mov
ret
fadd
cmp
je
call
shl
push
xor
push
xchg
cmps
imul
jno
adc
add
mov
jge
lahf
mov
(bad)
lds
je
pop
xchg
mov
cld
and
cmp
cmps
xchg
xor
pop
dec
addr16
int
xor
ss
push
fsub
sbb
pop
aaa
xor
js
arpl
adc
jae
pop
cmp
push
outs
mov
dec
push
pushf
and
div
dec
fwait
jb
int3
xor
push
aas
in
addr16
pop
push
inc
push
jmp
je
fidiv
or
jecxz
jb
not
or
sub
cs
mov
and
popa
push
pop
fadd
(bad)
cmp
stos
fist
mov
fcmovbe
test
inc
sub
xor
push
pop
out
inc
pop
ret
call
mov
push
dec
push
mov
dec
inc
sbb
and
pushf
lock
rcr
(bad)
xor
jl
pop
jp
jg
arpl
shl
mov
mov
mov
mov
and
cs
jb
fiadd
jo
xchg
sub
in
(bad)
fld
shl
dec
ror
mov
cdq
adc
call
pushf
imul
sub
dec
xlat
iret
ins
lock
mov
jmp
or
push
pop
push
dec
pop
mov
xchg
je
jmp
in
call
inc
xlat
(bad)
xor
ror
cs
iret
xor
ja
jecxz
popf
mov
test
stos
and
sub
mov
sahf
inc
shl
push
ror
scas
pusha
aad
mov
or
sbb
(bad)
test
mov
not
jmp
inc
call
imul
hlt
xor
jno
push
aam
test
fst
inc
dec
inc
ds
lods
enter
test
loopne
cld
in
ss
or
jg
in
pop
mov
es
shl
cmps
cmp
arpl
je
pop
cmp
loop
repnz
(bad)
adc
adc
jae
out
mov
iret
sbb
hlt
(bad)
popf
loope
and
hlt
xor
pop
jp
hlt
jge
sbb
ret
pop
mov
adc
jo
lods
mov
adc
or
xchg
jecxz
fstp
into
movs
mov
jmp
push
neg
mov
movs
rol
push
jae
das
call
jp
push
xlat
sbb
ret
or
mov
fstp
aad
stos
sahf
mov
push
jge
mov
cs
fmul
ror
xchg
arpl
push
pop
fld
mov
pusha
add
jae
mov
icebp
jge
rcr
ins
sub
jae
std
in
or
cmc
jnp
call
into
shr
mov
fsub
sbb
push
xchg
je
inc
aas
ret
pop
test
mov
and
add
iret
pushf
xor
push
jnp
out
sar
inc
or
and
adc
adc
lock
jnp
add
jnp
rol
sub
lock
jns
push
lds
mov
jb
xlat
lods
sbb
imul
pop
mov
ins
push
inc
das
jo
sub
sub
or
mov
iret
xchg
test
test
xchg
cmps
nop
fnstcw
cmp
ins
iret
lods
out
lods
gs
lock
add
test
or
rol
and
mov
not
adc
icebp
leave
add
sbb
imul
xlat
in
cmp
call
jge
xchg
or
add
cmovg
or
lods
jne
sub
inc
dec
int
shl
xchg
fs
sub
push
add
mov
sbb
arpl
cmp
sbb
jbe
loop
shl
in
pop
adc
stc
fdiv
in
push
arpl
mov
xor
cdq
or
xor
add
shl
out
sbb
in
retf
mov
and
inc
sti
inc
movs
jbe
inc
in
mov
inc
sbb
dec
xchg
adc
cmp
sbb
inc
cwde
xchg
popf
das
and
arpl
mov
cwde
jnp
sub
xor
je
aam
jnp
mov
pushf
add
fld
ror
movs
mul
out
cbw
in
pop
mov
inc
sar
or
ss
adc
mov
sub
or
push
repz
add
inc
mov
(bad)
mov
ss
pop
adc
rcr
daa
rcl
das
je
xchg
inc
pop
jbe
adc
xchg
rcr
int
sbb
and
mov
in
xchg
imul
mov
in
jo
sbb
xchg
fcomp
gs
mov
imul
jne
lea
adc
xchg
xor
arpl
cdq
cmps
fisttp
scas
pop
js
xchg
mov
imul
(bad)
aam
mov
mov
jmp
pop
push
outs
xchg
push
loop
aam
addr16
repnz
outs
inc
xchg
and
or
call
sub
fisttp
in
add
or
icebp
sti
fmulp
or
push
mov
das
inc
mov
fwait
or
and
(bad)
mov
jne
inc
(bad)
rcl
adc
ins
cs
scas
sbb
in
adc
pusha
jg
(bad)
scas
test
(bad)
pop
cmps
(bad)
addr16
mov
adc
dec
and
(bad)
aad
xchg
aas
out
ins
jl
dec
xor
out
mov
push
icebp
in
shr
jle
inc
out
inc
inc
mov
adc
mov
(bad)
aaa
out
fwait
clc
pop
cmp
es
jno
lods
lea
aad
in
sub
sub
lods
(bad)
lahf
fcmove
daa
adc
sub
add
mov
loop
ret
int3
(bad)
pop
add
cmp
(bad)
repnz
jae
lods
loop
(bad)
aam
ja
ficom
ror
jle
xchg
push
ret
jg
jmp
mov
pop
jmp
adc
out
scas
gs
jae
xor
mov
and
jmp
mov
cmps
add
test
(bad)
fistp
fbld
fdivr
sub
cmp
pop
adc
dec
add
fnsave
ds
int
add
call
add
popf
out
stos
loope
loop
sub
jae
adc
push
push
mov
add
jae
mov
enter
pushw
push
fcomip
jne
xor
jg
xor
push
les
aad
jg
adc
das
adc
push
xor
(bad)
std
xchg
out
pop
retf
(bad)
xchg
sub
gs
pop
dec
cs
aad
(bad)
pop
or
stos
xchg
or
inc
inc
fld
jbe
or
in
dec
jne
sbb
mov
mov
jnp
and
loop
call
fist
mov
out
dec
test
fcomp
in
xchg
dec
lea
jae
mov
scas
jg
(bad)
lods
lahf
loop
in
dec
loopne
add
jle
scas
push
push
xlat
or
sbb
imul
sar
pop
cmp
or
call
xchg
ffree
(bad)
xor
xlat
mul
cmps
lods
ins
lods
ret
xor
movs
pop
imul
loopne
pop
xchg
hlt
cmps
leave
ins
adc
mov
inc
xchg
fld
out
pusha
or
push
inc
jnp
mov
mov
dec
add
loopne
add
outs
into
(bad)
push
fisttp
xchg
lea
sub
mov
stc
cmc
jle
push
sub
mov
retf
(bad)
out
imul
cmp
rol
outs
dec
scas
push
mov
pop
aas
mov
mov
push
xor
into
js
shl
lea
mov
lods
xchg
(bad)
fiadd
call
stos
mov
jmp
arpl
cmp
fcmovnbe
into
aas
push
into
shl
aam
cmp
sub
dec
popf
xchg
cmovg
dec
pop
test
outs
psadbw
fxch
imul
dec
fs
mov
or
xchg
mov
adc
and
ins
inc
loopne
pop
into
sub
mov
adc
jg
pop
inc
push
mov
int3
xor
test
ins
pop
and
and
fucomp
inc
mov
xchg
pop
inc
mov
jp
rol
mov
les
cmp
jle
data16
lahf
(bad)
xor
rcr
dec
rcl
push
hlt
not
xchg
(bad)
leave
sub
add
enter
mov
mov
sub
xchg
dec
icebp
push
popa
js
shr
xor
pop
add
in
push
inc
mov
pop
adc
lods
(bad)
adc
mov
jno
push
cvttps2pi
fild
fst
movs
fisttp
and
push
ins
mov
mov
pop
adc
push
mov
cwde
movs
sar
xor
into
jb
das
sbb
or
push
add
xchg
xor
mov
hlt
pop
jmp
mov
popf
jge
std
lea
inc
cmps
add
inc
inc
mov
adc
retf
stos
shl
inc
add
mov
mov
mov
mov
ins
popf
pop
xor
jae
arpl
hlt
(bad)
mov
sub
stos
out
js
icebp
movs
jmp
sbb
sbb
and
xor
dec
sub
pop
cmp
int3
and
jns
and
cwde
or
inc
lods
ficomp
out
out
xchg
popa
pop
add
loope
inc
lods
xchg
dec
cli
add
enter
fsubrp
sbb
inc
rol
dec
mov
loopne
dec
sub
inc
add
xor
and
js
adc
add
push
push
pop
mov
dec
in
mov
aam
ret
inc
in
shl
ds
lods
clc
and
hlt
in
mov
js
mov
(bad)
pop
mov
inc
movs
mov
out
sbb
mov
push
ins
xor
add
mov
pusha
outs
das
xor
jo
jmp
js
mov
mov
jg
pop
jb
es
mov
cdq
pop
les
push
and
enter
pop
xor
sar
aad
repz
push
jge
das
addr16
jge
pop
add
and
and
movs
fild
loope
push
popf
leave
stc
mov
fcom
xor
mov
xor
and
imul
(bad)
cli
jg
call
mov
cmp
dec
es
(bad)
pusha
jge
aaa
popf
das
xor
fwait
rcr
mov
fldz
jge
movs
ffreep
fs
inc
je
lods
cli
inc
or
mov
pusha
sbb
das
cmps
iret
inc
gs
add
fnsave
or
stos
ins
fidiv
ins
cmp
mov
enter
mov
mov
jnp
icebp
push
cmp
jns
xchg
enter
or
sub
cld
shl
repnz
sbb
out
pusha
imul
js
or
iret
jmp
iret
out
add
scas
scas
movs
stos
jecxz
dec
lock
dec
call
jo
push
jno
add
dec
ins
push
jbe
jbe
ins
mov
shl
push
jl
mul
dec
inc
mov
loopne
xor
xlat
call
mov
pop
or
lahf
jae
retf
add
xchg
(bad)
aas
arpl
cmp
cmp
cmc
stc
lahf
cmp
fs
clc
add
push
add
dec
popa
leave
clc
jae
xor
out
and
xor
in
(bad)
lods
and
sti
(bad)
dec
sahf
jno
push
cs
pop
imul
fldenv
arpl
(bad)
ds
mov
and
xor
or
cmp
(bad)
les
push
fstp
sbb
pop
popa
xor
pusha
pop
mov
push
jne
test
iret
pop
xchg
xchg
inc
cli
mov
call
pop
fst
xchg
(bad)
dec
std
push
js
xor
cmp
jecxz
mov
shl
jl
fcomp
xchg
lds
inc
cmp
clc
int3
jbe
adc
xchg
popa
ret
mov
in
inc
cmp
movs
adc
scas
cmp
mov
lahf
mov
mov
xchg
mov
sar
fdiv
xor
push
sahf
mov
cwde
cs
clc
shl
jno
push
cli
je
sbb
push
inc
jmp
mov
(bad)
xor
mov
pop
add
and
adc
fdivr
call
xchg
inc
mov
mov
adc
push
and
ror
call
jae
daa
sbb
lea
or
das
push
jmp
xor
sbb
xchg
shl
cwde
inc
imul
xor
loopne
mov
out
bnd
int
jge
fidiv
add
xchg
mov
xor
cld
pusha
push
sub
dec
xchg
xchg
pop
xor
lea
ret
jg
ja
mov
mov
xor
loopne
ins
mov
lods
xor
jmp
int
sbb
jb
(bad)
xchg
addr16
popf
adc
mov
adc
(bad)
and
xor
bound
(bad)
out
xor
mov
xchg
cmp
sbb
jb
popa
mov
mov
test
stos
mov
imul
movs
add
xchg
pop
fimul
adc
or
scas
inc
retf
packsswb
lds
pop
push
das
test
sbb
jge
adc
mov
xchg
mov
retf
movs
pop
mov
enter
lahf
adc
mov
and
mov
sti
lea
test
je
jl
sbb
and
sahf
fdivr
fnsave
outs
je
fadd
test
inc
xor
fmul
mov
xlat
mov
cld
sbb
sub
aad
adc
xor
cmp
push
jmp
daa
dec
xor
jmp
xchg
inc
stos
mov
les
pop
inc
jnp
ret
int3
or
std
int
add
test
(bad)
fisub
cmp
test
popa
mov
nop
adc
mov
cmp
xor
lahf
ja
pop
pop
xor
and
fucomp
mov
les
jno
lea
sbb
shl
or
das
adc
pusha
jno
lds
cwde
repz
call
or
push
arpl
gs
out
cmp
jmp
sbb
mov
fst
and
mov
sti
mov
ins
imul
cdq
movs
addr16
mov
in
addr16
movs
pop
and
and
inc
cmps
mov
mov
jg
sub
mov
jbe
inc
sbb
inc
fdiv
cmp
test
ret
ins
mov
sbb
icebp
(bad)
fisttp
daa
xchg
or
push
jbe
mov
jns
push
dec
jge
je
pop
jmp
dec
and
sub
stos
mov
mov
push
in
sub
scas
add
pop
ret
mov
add
adc
push
xchg
lods
mov
arpl
or
cmp
pop
xchg
mov
push
test
add
enter
sub
xchg
jmp
add
idiv
ret
popf
out
cdq
addr16
mov
mov
pop
outs
out
imul
mov
fst
adc
mov
xchg
jns
mov
cdq
loope
mov
ins
aas
jbe
inc
cmp
iret
repnz
mov
push
jo
adc
ds
xchg
add
mov
into
or
fcomp
call
xchg
xchg
outs
pop
clc
dec
jns
mov
test
pop
gs
mov
es
(bad)
lds
mov
push
paddusb
ds
bound
sbb
pop
seta
cmps
xchg
or
push
rcl
repnz
mov
sbb
mov
mov
push
cwde
cmps
fwait
pop
xchg
jp
shl
fs
imul
add
cli
and
lock
mov
shl
inc
jbe
loop
fadd
rcr
mov
gs
arpl
or
loopne
aam
es
int3
pusha
and
jmp
lods
push
xchg
and
sbb
push
and
in
data16
mov
int
enter
or
jmp
sub
pop
jge
int3
andnps
fcom
mov
mov
dec
sub
push
pop
push
pushf
and
xor
imul
jbe
add
add
cmps
mov
movs
outs
dec
das
push
stos
sbb
inc
fadd
sahf
cmp
aad
imul
fild
mov
loop
adc
sbb
mov
inc
(bad)
xchg
in
push
mov
cmc
mov
push
sbb
lock
xchg
aas
cwde
repz
sub
inc
fmul
adc
rcr
cmps
mov
dec
mov
(bad)
xor
sbb
adc
repnz
sbb
jns
cmc
add
les
mov
push
popf
xchg
test
sub
sbb
out
dec
mov
xlat
in
aas
cmc
lds
hlt
sub
dec
and
push
sub
inc
adc
pop
(bad)
adc
nop
mov
jmp
ss
cdq
push
(bad)
jge
mov
mov
sbb
dec
adc
sub
rol
and
fucomi
push
int3
outs
gs
nop
add
sub
xor
data16
jns
adc
inc
lahf
xor
fcom
jnp
in
mov
div
adc
pop
lea
or
pop
push
imul
mov
cmp
pop
cdq
rcr
enter
pusha
retf
movs
sub
jbe
aas
std
sbb
mov
mov
inc
cmp
les
mov
popa
aas
scas
pop
or
ins
fwait
in
ss
ins
push
fdivr
outs
xor
add
push
mov
lds
sar
mov
pop
mov
shr
into
mov
ins
ror
xchg
inc
ins
repnz
shr
psadbw
push
jmp
and
add
inc
or
dec
bound
or
push
cmp
pop
cmp
mov
sub
cmps
lods
daa
mov
jmp
lea
mov
add
dec
gs
adc
or
add
jnp
adc
pop
movs
lods
xor
jp
(bad)
mov
daa
stos
cwde
add
test
ja
rcl
(bad)
js
stc
(bad)
and
es
sahf
sub
or
in
jbe
dec
cli
inc
pop
popa
into
xchg
xchg
loope
ds
jnp
jnp
(bad)
push
arpl
push
cmp
sbb
dec
jmp
test
dec
pushf
imul
mov
inc
daa
and
inc
ja
out
jnp
add
mov
push
ret
sbb
std
push
ss
fisttp
mov
stc
dec
pop
ds
inc
mov
test
mov
mov
adc
je
sub
jge
mov
je
fistp
cmp
jne
call
lahf
xor
inc
ja
int
dec
leave
adc
dec
jecxz
jbe
mov
push
ins
xchg
shl
and
push
mov
mov
addr16
int
adc
add
jg
xlat
(bad)
dec
cmps
mov
in
mov
and
cld
sbb
adc
shl
and
cwde
cmp
push
pushf
cmps
ja
ds
repz
std
retf
mov
cmp
pop
(bad)
fisttp
pop
mov
in
shl
loope
je
arpl
mov
int3
mov
inc
and
std
out
xchg
mov
or
mov
scas
jae
lock
in
adc
fcmovne
adc
dec
xchg
ins
int3
sbb
jmp
mov
jp
movs
mov
xlat
xlat
sub
mov
push
jne
and
mov
jp
adc
(bad)
stos
repnz
outs
push
fwait
stc
mov
retf
imul
or
lods
mov
stc
aam
mov
jnp
pusha
xchg
aaa
sub
adc
int3
loope
inc
popf
sub
push
ret
cs
cmp
nop
pop
adc
push
aas
cmp
clc
xchg
rol
les
xchg
jo
scas
mov
dec
lods
pop
lds
or
sbb
shl
inc
movs
pop
mov
les
(bad)
out
mov
rcr
retf
ss
mov
hlt
mov
inc
in
mov
cdq
dec
aad
(bad)
or
push
mov
inc
cmp
xchg
js
cmp
push
and
fnstsw
or
cwde
jge
int
and
sbb
mov
jnp
xchg
test
lods
push
push
aad
js
ficom
(bad)
mov
lods
sub
or
add
jno
les
xor
ins
adc
fwait
cwde
call
loopne
xor
mov
pusha
jae
shr
mov
mov
add
mov
sub
jg
cli
inc
sub
outs
push
mov
xor
ds
mov
ja
cdq
fimul
out
movs
scas
or
and
xlat
push
mov
icebp
outs
push
repnz
iret
mov
push
push
in
ins
and
mov
cmp
fbld
mov
imul
int
adc
in
adc
xchg
inc
shr
jbe
repz
mov
movs
or
cwde
clc
inc
test
dec
jmp
and
ds
xchg
cmc
mov
test
pop
rcl
out
or
mov
(bad)
js
ret
jmp
inc
push
dec
addr16
and
aaa
or
pop
pop
call
(bad)
push
dec
and
xchg
outs
mov
mov
ficomp
sbb
jle
adc
dec
daa
outs
mov
jmp
jecxz
imul
mov
dec
mov
mov
call
ror
mov
fsub
or
mov
add
xchg
mov
out
xor
ss
xchg
es
xor
rcr
sbb
mov
add
dec
movs
rcl
jmp
dec
adc
test
les
mov
xor
ds
add
adc
inc
mov
lods
div
push
fs
push
jecxz
mov
into
or
mov
sbb
xor
xchg
call
xchg
call
sub
ins
or
fdivr
test
aam
cmp
xor
xor
movs
pop
inc
xor
pop
xchg
imul
or
mov
popa
(bad)
xor
cld
xor
add
push
loope
pop
or
jbe
fwait
mov
push
mov
call
rcr
cdq
xlat
sahf
and
shl
pop
cmp
movs
or
loopne
pop
sub
dec
repz
pop
dec
leave
and
pop
inc
sbb
enter
mov
mov
cmc
mov
xor
fcmovu
lea
(bad)
ins
cmp
xlat
outs
data16
or
inc
sub
sti
cmp
jo
pmuludq
scas
push
scas
inc
push
mov
dec
hlt
cmp
iret
or
int
ret
out
fadd
xor
mov
dec
cdq
sbb
les
add
stos
add
pushf
out
movs
ins
inc
mov
jmp
ret
xor
cmp
clc
mov
enter
mov
sahf
cwde
rcr
fild
sub
rep
xor
mov
add
sub
xchg
mov
stos
inc
fstp
mov
sbb
sbb
xor
sub
or
retf
inc
mov
mov
sbb
jge
jmp
pop
jg
mov
pop
outs
lods
push
inc
in
mov
loopne
pusha
cmp
mov
xor
mov
adc
xlat
or
(bad)
cmp
cwde
pop
dec
(bad)
icebp
dec
ins
mov
lods
push
ins
(bad)
mul
in
ror
sbb
lahf
mov
inc
add
pop
pop
mov
mov
inc
cmp
int3
ins
or
clc
mov
pop
mov
sub
popa
sar
ins
imul
mov
pop
test
or
lahf
mov
jnp
push
dec
int3
pop
jle
repz
lahf
adc
mov
shl
shl
jle
sub
pop
sub
out
cmc
ins
lea
ret
stos
mov
cwde
vmovupd
loop
nop
inc
fwait
mov
gs
mov
popf
adc
aaa
or
sbb
stos
pop
jmp
stos
ret
(bad)
push
sbb
lock
sbb
bound
inc
push
xchg
jp
shl
(bad)
outs
ror
std
test
ret
and
test
sbb
iret
loope
shr
jl
cmp
add
or
cmp
xchg
les
push
(bad)
imul
lea
(bad)
stc
xchg
dec
loop
push
js
retf
repnz
and
cmps
adc
dec
sbb
scas
sbb
lds
(bad)
mov
mov
test
dec
dec
adc
and
hlt
in
mov
and
sub
xor
scas
cli
jle
push
sub
push
ret
add
xor
js
into
repz
jmp
sbb
sub
int3
test
adc
or
arpl
sub
lea
in
cmp
mov
and
push
cld
sahf
xchg
cld
jle
sub
fadd
push
in
fwait
scas
dec
sbb
aaa
dec
icebp
cmp
pop
fmul
xchg
jne
cli
sbb
dec
retf
mov
call
clc
cmps
add
cwde
movs
int3
ss
ret
retf
fisubr
adc
mov
sub
xor
sub
mov
imul
cdq
push
pop
popf
into
clc
call
(bad)
push
push
scas
push
lods
in
in
jae
jge
aad
xchg
hlt
aam
adc
arpl
dec
into
cmp
mov
cld
xor
pusha
movs
stc
aaa
cmp
mov
shl
jecxz
or
pop
mov
mov
ins
xchg
jl
mov
arpl
and
sbb
push
hlt
sbb
scas
cli
jns
int3
daa
sbb
inc
xrelease
inc
sub
mov
dec
xor
(bad)
bound
add
outs
cmp
pop
arpl
aas
fst
out
inc
outs
sbb
out
cmp
jae
pop
in
inc
inc
jg
dec
or
add
test
dec
sbb
sub
mov
and
or
jl
xor
test
int3
shr
hlt
data16
inc
mov
add
inc
mov
ins
shl
lahf
xor
inc
jge
mov
jno
mov
pop
imul
mov
adc
retf
push
ror
pop
retf
inc
mov
or
scas
jns
jmp
popa
jg
xor
je
sahf
aaa
cmp
mov
dec
cmp
dec
(bad)
xor
outs
outs
jecxz
cmps
lahf
out
mov
fnstsw
or
push
inc
adc
mov
outs
(bad)
out
mov
adc
lods
adc
jmp
cmc
fnstenv
and
inc
xor
adc
icebp
push
xchg
adc
nop
daa
xchg
cli
adc
sub
xchg
pop
jle
ret
or
aad
sub
(bad)
mov
or
cmp
test
out
lahf
cmp
sub
imul
sahf
ret
jbe
stos
or
jns
stos
push
add
(bad)
mov
dec
ror
mov
out
inc
out
js
mov
ins
mov
call
lahf
mov
into
aam
mov
je
ins
cdq
cmp
gs
jp
mov
pop
pop
pop
out
(bad)
fstp
cmp
and
inc
and
xchg
adc
pushf
pop
or
test
div
sar
loope
xor
mov
call
xor
in
pop
iret
add
inc
adc
add
cmp
movs
sar
loop
fdiv
cmp
stc
loop
jge
inc
retf
je
xchg
repnz
adc
jmp
loopne
inc
push
add
xchg
or
setge
cmp
test
sbb
jmp
shr
push
and
dec
xor
or
out
adc
xor
test
adc
push
stc
inc
mov
push
adc
sbb
int
jo
sbb
pop
pop
stc
inc
sbb
cmp
sbb
push
out
jo
cmp
mov
loope
(bad)
xchg
inc
shl
adc
loope
popf
xlat
loop
pop
sbb
mov
sub
and
push
pop
push
pop
inc
push
cmp
dec
adc
and
les
das
xchg
lea
int
ss
fs
sbb
fnstenv
sub
inc
loop
xchg
nop
cmps
adc
add
mov
push
inc
dec
or
mov
mov
adc
(bad)
movs
and
or
pop
jmp
fidiv
je
data16
movs
xchg
aad
repz
sub
js
out
pushf
push
mov
fadd
mov
pushf
(bad)
(bad)
aam
stos
loope
popf
into
pushf
cmp
mov
cdq
pop
js
adc
movs
and
add
xlat
or
inc
aaa
push
sbb
nop
sub
dec
jecxz
ins
mov
imul
inc
mov
sbb
mov
ins
xor
test
call
clc
mov
(bad)
loope
test
cdq
adc
imul
mov
ins
mov
push
adc
lods
and
or
bound
in
dec
scas
outs
fmul
ins
(bad)
mul
(bad)
data16
mov
jp
push
sub
out
add
sbb
mov
add
push
js
test
mov
mov
add
xor
dec
push
pop
jecxz
push
cmc
cmp
pop
test
cmp
dec
push
mov
movs
cld
push
cwde
or
ja
fld
add
cdq
clc
xchg
fdiv
or
push
retf
call
punpckhbw
cmp
fs
fbstp
or
sub
(bad)
cmp
imul
push
mov
jg
mov
cmp
lods
ret
fwait
inc
pop
dec
cmp
xor
test
(bad)
data16
aad
push
pusha
(bad)
icebp
pusha
std
cmps
add
cmps
pop
in
icebp
xchg
cmp
out
fist
xchg
sti
movs
dec
dec
dec
ds
call
mov
mov
cdq
pop
ja
fwait
sahf
arpl
xchg
mov
rcl
jmp
inc
push
mov
mov
(bad)
movs
out
sub
inc
out
hlt
dec
lods
jmp
int3
pop
cmc
(bad)
aas
adc
shl
leave
data16
jo
pop
cmps
or
push
daa
sub
(bad)
or
fcomp
or
aaa
je
lods
out
cmp
movs
dec
mov
dec
mov
push
iret
or
and
in
sbb
ret
xchg
mov
inc
(bad)
jle
push
bound
or
mov
(bad)
mov
jecxz
or
popa
fcom
je
out
inc
retf
mov
mov
in
arpl
jo
jae
aaa
inc
xor
adc
imul
aas
inc
sub
scas
aam
retf
sbb
or
inc
push
and
lds
cmp
mov
mov
rcr
dec
sbb
int
xchg
js
jmp
sub
xchg
jns
pop
data16
pusha
faddp
adc
outs
sbb
add
push
dec
call
xchg
dec
div
push
xchg
call
xchg
lea
bnd
jne
ror
pop
sti
stc
and
in
out
repnz
mov
mov
add
pusha
mov
pop
dec
ror
sub
cmp
cs
loope
aaa
rcr
data16
jnp
(bad)
lock
push
jle
shr
jl
jmp
ror
fisub
jg
xor
shr
mov
jecxz
call
call
(bad)
fnstenv
dec
or
ret
dec
mov
jae
adc
and
mov
outs
inc
xor
inc
(bad)
or
xor
cmp
jne
sti
imul
sub
push
jmp
fstp
pop
bound
jns
or
lds
out
xor
pop
lahf
mov
mov
pusha
fadd
stos
ds
xchg
inc
mov
mov
imul
and
sbb
mov
xchg
test
xchg
sbb
cs
outs
add
mov
cmp
add
aam
sar
mov
push
(bad)
in
ror
push
lods
lods
stos
xor
and
push
cmp
scas
lods
dec
mov
aaa
or
cmp
xor
and
mov
mov
cmp
test
mov
ja
xchg
outs
jg
and
sbb
add
push
repnz
cdq
pop
stos
(bad)
out
sbb
pushf
popa
fdivr
aaa
pop
cmc
mov
retf
xchg
add
in
dec
cmp
scas
mov
push
add
(bad)
(bad)
xchg
xchg
cmps
mov
xchg
aam
es
and
xchg
inc
shr
scas
dec
mov
test
std
test
adc
popa
in
sub
das
sbb
stos
lods
popf
pop
mov
dec
add
pusha
(bad)
cld
ret
clc
arpl
mov
out
inc
sub
in
cmp
xchg
xor
xor
ret
mov
or
sahf
repz
in
and
stc
jge
fistp
rcr
cmp
mov
pusha
or
inc
sub
dec
les
aad
(bad)
mov
mov
repz
jno
test
lods
push
xor
cmp
sahf
mov
jns
fimul
sub
arpl
(bad)
in
fldenv
push
sub
cmp
cli
(bad)
sub
xchg
xchg
or
addr16
inc
ja
dec
fdiv
xchg
inc
aam
adc
push
xor
leave
pop
pop
adc
push
das
aas
jmp
cwde
xor
test
xlat
(bad)
retf
jns
pop
mov
cmps
push
movs
ficomp
cmps
(bad)
fcom
push
test
leave
sar
jmp
outs
adc
xor
fbld
add
jb
sub
sahf
xor
and
inc
fistp
xchg
xchg
inc
adc
fwait
or
pop
xchg
jmp
cli
push
dec
or
sar
in
pop
sub
aam
out
cs
pop
jo
jecxz
adc
dec
cmp
retf
test
ret
adc
push
rcr
sbb
cmps
and
xor
lods
push
ret
shl
jmp
sbb
mov
mov
pop
jp
jp
aaa
cmc
lock
adc
push
cmp
sbb
ja
sbb
pusha
sub
mov
mov
cmp
add
and
popa
cmc
sub
imul
and
fwait
cmp
or
std
leave
ret
shl
enter
iret
push
adc
scas
call
cmp
out
pop
movs
sti
pop
xchg
xor
retf
sub
cmc
mov
ja
shl
retf
pop
cmc
cmps
adc
in
repnz
out
lods
xlat
or
pop
std
sbb
add
jno
loop
(bad)
enter
aaa
aad
stos
mov
dec
dec
(bad)
int
mov
pop
cmps
add
add
add
mov
stos
mov
leave
repnz
push
mov
in
jge
mov
mov
xor
xchg
stos
sub
lea
pop
pusha
add
test
and
das
inc
fidivr
movs
mov
inc
xor
pop
pop
inc
inc
out
xchg
jp
push
cmp
mov
ja
outs
pushf
adc
movs
adc
or
fdiv
sbb
call
rol
mov
jns
adc
jbe
jae
sahf
xor
pop
mov
popf
ds
fidivr
stos
int
dec
jmp
mov
pop
cmps
pop
fsubr
into
mov
loop
jo
test
cdq
mov
mov
mov
inc
pop
pop
stos
pop
or
cmp
outs
jle
in
loope
and
ret
aam
sub
mov
movs
loop
popa
cmp
add
cld
arpl
add
adc
pop
dec
sub
inc
ins
mov
and
xchg
scas
cs
cmp
push
mov
xchg
mov
push
ins
dec
pop
ds
adc
jo
stos
mov
mov
aas
addr16
clc
iret
mov
pop
ror
push
sbb
dec
mov
mov
call
in
push
aad
mov
push
mov
jb
outs
aam
je
lods
inc
xor
popa
or
adc
xor
push
pushf
data16
mov
stc
ret
repnz
mov
pop
cmps
es
sahf
je
gs
gs
(bad)
dec
pushf
push
ss
jb
std
and
mov
or
stos
and
(bad)
in
cmp
mov
in
and
and
mov
fwait
rcr
jnp
in
(bad)
adc
dec
jge
mov
or
test
sub
or
shr
hlt
jnp
sar
mov
inc
pop
mov
add
mov
das
movs
repnz
or
or
mov
sub
mov
push
dec
mov
push
pop
push
xor
cmp
mov
sahf
fdiv
into
inc
xchg
pop
ins
clc
add
push
inc
cmp
inc
adc
mov
into
pop
cmp
xor
and
inc
jo
pop
xor
jnp
ret
sahf
mov
test
js
mov
das
pop
jo
bound
into
xchg
cmc
dec
jmp
inc
sub
lahf
outs
rol
(bad)
icebp
scas
pop
sbb
and
mov
pop
shl
movs
aam
movs
push
mov
xchg
pop
movs
add
jle
jno
xor
cmp
stc
js
sbb
enter
lds
lock
stos
sub
jp
push
jle
xor
jl
push
lea
jecxz
sub
rcr
or
rcl
je
or
xor
(bad)
std
push
sub
mov
stc
xchg
aam
in
mov
inc
and
aam
fld
dec
xchg
fdivr
pushf
inc
inc
adc
or
and
leave
adc
mov
mov
jmp
out
(bad)
movs
jb
add
mov
mov
inc
clc
and
inc
je
popa
push
or
mov
dec
daa
mov
mov
cmp
(bad)
out
push
lock
and
outs
bound
aad
in
adc
jp
or
mov
xor
jmp
cwde
xchg
scas
jns
or
cmp
pop
push
(bad)
dec
mov
mov
xor
jbe
inc
mov
fwait
lods
mov
mov
(bad)
fwait
xor
xlat
popa
mov
inc
cmp
add
ror
push
xchg
nop
aaa
dec
xor
ds
clc
gs
mov
xor
movs
mov
loope
jno
dec
hlt
inc
aaa
pop
mov
aas
mov
and
je
xchg
jno
out
push
lds
mov
inc
leave
jnp
and
sub
js
rcl
out
fs
sbb
or
push
xchg
inc
dec
xor
arpl
dec
cmc
pop
add
cmp
stos
icebp
inc
neg
movs
fwait
cmps
loop
pop
cmp
pop
push
rcr
adc
sub
mov
push
sub
dec
test
out
imul
mov
ins
enter
scas
xchg
add
mov
sub
push
not
lds
inc
jae
add
mov
add
and
mov
sub
paddw
int
sbb
xchg
inc
jl
(bad)
push
stos
repnz
pushf
setns
and
jb
push
int
inc
ins
(bad)
push
xchg
rdtsc
je
mov
mov
dec
in
dec
ins
fstp
imul
inc
ss
push
mov
mov
sub
push
push
lods
dec
add
mov
dec
mov
jp
js
adc
ror
fdivr
and
jne
mov
or
push
outs
adc
pop
jnp
pushf
sbb
data16
(bad)
sbb
sub
fcomip
dec
mov
lods
dec
in
sar
mov
and
scas
shr
fwait
lds
mov
cmps
daa
pop
mov
stc
ja
mov
mov
sbb
mov
dec
jne
test
push
jmp
not
or
dec
les
push
ins
mov
xor
aas
add
stos
mov
iret
push
cmp
in
lods
dec
add
fst
ins
jb
test
jnp
jmp
cld
leave
xor
stos
hlt
(bad)
(bad)
cmp
mov
stos
aam
xchg
xchg
xchg
jmp
dec
mov
dec
sub
popf
and
xchg
adc
pop
xor
ss
push
mov
iret
lods
pop
mov
xor
ja
(bad)
adc
jle
mov
inc
shl
jg
fiadd
mov
jp
out
iret
out
lahf
ins
pop
inc
aaa
jno
jp
(bad)
rcl
xor
dec
pop
inc
mov
push
push
fsub
mov
cmps
aas
es
cmp
mov
arpl
pop
mov
push
sbb
popa
add
jmp
int3
aad
loope
dec
popf
jae
jl
movs
mov
pop
fwait
outs
shl
pop
inc
add
cmps
inc
lea
mov
shl
imul
popf
and
and
call
test
pop
cmp
std
jo
daa
jns
(bad)
adc
test
(bad)
lock
lods
scas
xor
lea
push
dec
mov
mov
sbb
jae
loop
repz
pop
shl
mov
loopne
lock
mov
(bad)
retf
jnp
xchg
fisttp
xor
xchg
or
xor
scas
stc
jnp
in
jle
fwait
sub
jb
dec
fwait
mov
div
cwde
push
fdivr
int3
adc
dec
fistp
popa
cmps
cmps
sub
fst
in
inc
xchg
adc
jnp
xor
aas
inc
inc
inc
sbb
sub
fdivr
outs
ja
shl
scas
mov
rol
dec
mov
hlt
push
mov
pushf
add
lds
inc
xchg
xlat
cmps
in
scas
jg
(bad)
fcom
cmp
jp
loop
int3
mov
inc
leave
int3
xchg
imul
inc
xor
jp
push
mov
cld
push
test
rol
pop
and
mov
dec
xlat
xor
xchg
pop
addr16
outs
cmp
jl
xor
jg
jp
push
out
stc
pop
adc
and
inc
inc
scas
out
and
shr
push
and
icebp
loop
pop
or
lahf
sbb
add
dec
ucomiss
lock
pop
add
mov
or
xlat
imul
jge
pop
jbe
xchg
outs
dec
push
lds
mov
ret
popa
mov
push
jle
es
in
in
mov
mov
jmp
mov
arpl
loopne
xor
add
pop
xchg
add
xor
div
mov
int
jae
cli
nop
dec
out
adc
fiadd
mov
push
clc
outs
test
fs
fimul
jg
fcmove
mov
pop
ret
xchg
or
lock
ret
shr
sbb
cdq
shl
sbb
loop
mov
mov
test
loopne
cvtpi2ps
mov
xchg
xor
xchg
lock
dec
jg
and
cld
sbb
or
mov
daa
shr
sub
movs
jge
aaa
jo
sbb
jb
pop
pop
enter
loope
adc
leave
fstp
mov
(bad)
dec
cmps
adc
inc
xor
push
add
popf
call
sub
outs
mov
mov
and
and
adc
mul
outs
aad
inc
pop
pop
sub
adc
movs
sbb
std
repz
sti
ja
inc
adc
jno
neg
xchg
sbb
ja
or
inc
xchg
dec
pop
in
push
inc
jmp
xchg
inc
dec
sbb
(bad)
mov
pop
sbb
pop
sub
sbb
jae
adc
imul
sub
and
adc
and
mov
dec
bound
mov
dec
mov
repnz
(bad)
loop
scas
ja
and
xchg
push
or
push
fstp
ror
aam
and
xchg
stos
add
dec
test
clc
adc
xchg
and
pushf
into
or
mov
lods
aam
addr16
shl
or
rcr
xchg
push
retf
data16
mov
add
mov
sub
aas
inc
out
and
iret
add
mov
cmps
movs
int
xor
sbb
jb
jno
out
sub
das
movs
mov
je
(bad)
das
push
pop
ret
loop
xchg
inc
pop
sub
push
stos
cli
bound
arpl
push
enter
and
sub
(bad)
jle
sbb
sbb
ret
sbb
js
push
xor
or
inc
mov
repz
lahf
icebp
jnp
jb
ret
scas
push
iret
mov
adc
push
push
les
in
mov
std
mov
xlat
inc
lahf
lahf
aam
gs
mov
cmps
add
push
adc
mov
mov
push
pop
or
rcl
xor
dec
lds
push
or
int3
test
adc
add
sbb
mov
inc
popf
cmp
je
mov
int3
cmp
pop
lfs
dec
push
test
and
pop
aas
pop
inc
mov
inc
in
jns
jecxz
and
aas
mov
cmpps
retf
in
ss
daa
(bad)
loope
sbb
pop
push
in
sub
pop
(bad)
mov
mov
or
sub
and
shl
push
push
xlat
ficom
dec
and
or
test
sub
retf
mov
popa
push
jo
pusha
jmp
xchg
push
shl
adc
mov
mov
scas
jne
je
jbe
or
mov
mov
push
shl
icebp
inc
ins
jle
lea
inc
sub
and
mov
fist
push
adc
sbb
add
cli
shr
push
rol
xchg
cmp
push
push
popa
call
push
retf
jg
xchg
fadd
sub
pop
inc
add
cmc
loope
ins
mov
retf
pop
mov
outs
dec
and
push
outs
inc
lods
sub
hlt
adc
jns
inc
jne
sbb
sub
fdivp
out
arpl
add
and
add
pushf
lahf
in
push
pop
int3
adc
mov
push
push
bound
mov
je
pop
shr
sub
jae
or
(bad)
mov
xor
add
lods
sbb
shl
ins
sbb
push
and
lock
mov
cwde
shr
pop
(bad)
cld
mov
movs
call
jb
call
imul
out
dec
dec
in
xchg
call
call
sub
fistp
movs
lahf
ja
ss
cmp
xor
enter
sbb
push
mov
movs
(bad)
push
pop
dec
inc
push
and
std
idiv
mov
cld
aad
ins
gs
outs
fldl2e
mov
(bad)
pusha
mov
and
popf
push
push
shl
imul
fnstsw
pop
sub
push
cmp
iret
(bad)
iret
out
out
add
hlt
std
lods
rol
int
es
ins
mov
ins
ja
mov
push
fsubr
outs
pop
ficom
jns
push
mov
scas
(bad)
push
(bad)
jmp
dec
mov
(bad)
imul
inc
dec
ds
inc
pushf
inc
inc
add
and
addr16
xor
ja
pop
xchg
mov
sub
add
enter
adc
and
dec
scas
xchg
int3
pop
test
sub
fcmovbe
jecxz
sub
mov
xchg
cmp
push
jp
(bad)
ror
xor
sbb
out
jl
popa
outs
push
xor
movs
xor
iret
arpl
push
es
(bad)
fcomip
jns
cmp
std
adc
or
int
sbb
into
adc
pushf
stc
test
adc
fwait
ja
or
ins
leave
mov
(bad)
mov
xchg
mov
(bad)
call
dec
push
arpl
xchg
jns
addr16
pop
push
pop
jbe
xchg
cmp
int3
xchg
jp
jbe
fwait
adc
loope
dec
scas
fsubr
and
jmp
out
es
jb
add
xchg
dec
mov
jmp
or
mov
jbe
sbb
(bad)
aaa
or
cmp
pop
or
icebp
outs
mov
ror
retf
push
mov
and
dec
jo
sbb
mov
sub
xor
int3
and
je
mov
xor
jg
push
sbb
inc
fadd
aas
fst
mov
add
lods
fwait
cmp
push
out
xor
scas
movs
daa
jg
imul
xchg
sahf
mov
cmps
mov
retf
mov
mov
int3
xchg
cmp
sbb
pop
ins
cmp
add
nop
jl
dec
in
(bad)
(bad)
inc
xchg
loope
push
hlt
int
cmps
lds
or
sub
or
jmp
and
stc
sbb
or
setns
dec
leave
jbe
test
and
jns
or
ret
xor
movs
dec
jns
push
cmp
push
cs
repz
test
fs
xor
inc
sub
add
mov
mov
aas
xlat
mov
inc
mov
stos
rol
and
outs
cmp
cmps
push
cli
daa
dec
cmp
dec
lahf
fldcw
nop
mov
data16
sbb
jp
mov
and
movs
in
lds
icebp
ds
push
and
jmp
aad
cmovs
cdq
inc
test
pop
les
cmps
retf
icebp
jmp
imul
imul
mov
(bad)
out
aas
rcl
jl
ins
sub
sar
outs
jns
stos
(bad)
lea
les
cmp
fisttp
aaa
or
loopne
das
call
in
xchg
jbe
xchg
adc
dec
xchg
mov
mov
and
lahf
push
aam
hlt
jns
lods
das
sub
and
sub
sub
call
cmp
in
not
repz
aas
stos
mov
sub
scas
push
cwde
mov
js
pop
jns
pop
retf
and
xchg
ss
mov
loop
jno
jne
xor
mov
jmp
adc
daa
dec
inc
xor
in
popa
mov
or
std
and
hlt
and
scas
dec
ja
sub
mov
push
cmp
gs
mov
bound
dec
add
adc
push
(bad)
jmp
repz
mov
xchg
ror
push
sub
lock
pop
enter
rol
mov
(bad)
call
pop
sbb
jle
shr
movs
dec
sub
push
stos
xor
jbe
popa
mov
mov
xchg
call
je
jp
xor
mov
sub
xchg
sub
add
in
or
int3
dec
and
push
xchg
dec
and
les
inc
mov
mov
mov
sub
jnp
sub
and
mov
jge
retf
xor
or
cmps
xor
ror
fsub
inc
pop
sbb
sbb
push
xor
leave
loope
imul
add
lods
or
mov
neg
mov
enter
sub
pop
xor
jmp
sbb
rep
inc
fwait
aaa
aam
outs
push
ins
fs
icebp
mov
movs
inc
cdq
xchg
das
and
jp
add
xchg
adc
in
pusha
(bad)
add
dec
sbb
stos
push
xor
mov
jmp
outs
dec
fcomp
mov
cmps
push
inc
push
cwde
sub
jbe
fnstenv
xchg
sbb
add
xchg
xchg
and
adc
cs
ret
push
mov
rol
loopne
mov
pop
add
call
push
sahf
loopne
aad
jl
inc
cmp
out
sbb
or
jmp
cmp
or
loopne
adc
int
cli
test
ror
or
popa
or
scas
or
mov
cwde
imul
mov
cmps
inc
mov
hlt
and
mov
sub
js
int3
cmps
fist
call
mov
stos
push
out
dec
or
dec
add
and
dec
test
test
add
or
sti
mov
mov
xor
cwde
neg
jl
xor
xor
loop
add
out
add
movs
add
lods
add
enter
adc
repnz
and
ror
test
sub
pop
retf
ss
pop
sub
scas
pop
jae
and
push
call
test
sbb
sbb
repnz
jmp
cli
add
leave
mov
mov
test
leave
stos
repnz
fisubr
mov
cmc
push
test
fisubr
sbb
in
and
dec
xchg
stc
xchg
sbb
iret
aas
sub
xchg
shl
adc
cli
(bad)
out
ja
mov
xchg
mov
cli
jg
add
sub
jle
mov
cmp
sbb
das
or
pop
sbb
mov
mov
cmp
popf
imul
xchg
jecxz
push
stos
add
pop
scas
mov
xor
push
add
idiv
(bad)
sbb
out
in
sub
xchg
in
mov
mov
jbe
les
ror
icebp
(bad)
retf
inc
add
cmps
mov
mov
lods
cmp
mov
lahf
adc
into
out
aad
add
mov
popa
push
pop
(bad)
jmp
addr16
pop
jp
xchg
das
jmp
or
pop
cdq
push
mov
mov
adc
dec
push
dec
mov
cmp
(bad)
mov
adc
mov
xor
(bad)
out
and
mov
out
jg
mov
dec
push
(bad)
push
retf
mov
push
in
mov
(bad)
mov
rol
xchg
sbb
mov
pop
xor
outs
in
pushf
dec
ins
add
xor
mov
cmp
push
jno
jae
or
mov
jge
mov
sbb
push
or
mov
cmps
push
adc
pusha
sub
stos
inc
pop
and
lock
sbb
cmp
(bad)
stos
push
or
mov
add
pop
into
and
sbb
cmps
pop
add
rcr
mov
sar
push
pusha
daa
inc
pusha
cld
sub
push
mov
mov
or
cmc
aad
aam
imul
xlat
ret
xchg
arpl
(bad)
aad
lods
add
aad
push
adc
int
or
xor
add
jl
mov
xchg
inc
jl
adc
lds
loop
outs
adc
scas
mov
aad
gs
call
jle
sbb
dec
out
lock
mov
das
inc
push
sbb
imul
and
lahf
mov
out
jmp
lods
mov
lds
pushf
call
push
shr
xchg
(bad)
retf
imul
retf
mov
lahf
mov
(bad)
sub
std
and
push
or
pop
int
sub
or
(bad)
mov
xchg
fsubr
xchg
inc
scas
(bad)
fild
push
out
mov
sub
popf
cmc
neg
add
lock
or
dec
ins
jmp
enter
lods
dec
or
adc
test
sub
jge
out
mov
ins
into
cmp
pop
iret
ret
popf
fistp
push
cdq
fistp
cmp
dec
xlat
cdq
sbb
rcr
mov
and
cli
jb
inc
add
push
jecxz
add
imul
mov
push
jl
daa
scas
dec
daa
movs
gs
cmp
xlat
add
push
movs
(bad)
mov
ror
add
bound
adc
jle
sub
pop
das
scas
sub
call
test
cmps
push
out
and
dec
lods
addr16
add
(bad)
int
pop
jbe
push
inc
(bad)
push
lods
jnp
clc
sub
das
icebp
aam
xlat
inc
xor
xlat
imul
jnp
xchg
fidiv
xchg
in
or
ins
in
fist
pushf
lock
retf
(bad)
mov
pop
mov
and
imul
or
daa
mov
(bad)
shl
mov
sub
lods
stos
sub
cmp
es
mov
fadd
mov
movs
inc
xchg
in
ins
pop
sar
adc
stc
jb
retf
push
mov
adc
ss
pop
mov
xchg
shl
data16
js
cmp
jecxz
adc
(bad)
dec
add
pusha
rcl
mov
push
push
sahf
(bad)
std
ficomp
cld
daa
cdq
xchg
fcmovnu
leave
mov
mov
leave
fs
dec
scas
mov
out
and
pop
pop
xor
sub
mov
dec
js
scas
cld
pushf
div
add
inc
arpl
aad
add
jnp
push
xlat
dec
mov
and
stos
inc
adc
test
lahf
mov
jno
pop
out
xlat
cmp
inc
fstp
jns
add
mov
repz
inc
outs
cmps
and
mov
ss
(bad)
jge
(bad)
sbb
loop
dec
xor
test
xor
fwait
lods
mov
int
lods
xchg
(bad)
loope
push
pusha
js
bound
or
cli
ins
lock
xchg
loop
add
inc
gs
fxam
(bad)
mov
in
outs
ror
dec
jbe
jmp
test
mov
fwait
call
sub
push
fisubr
outs
iret
push
dec
mov
ja
inc
mov
in
pop
mov
xor
and
and
jl
(bad)
push
add
outs
pop
add
shr
inc
into
jg
push
aam
jle
mov
xchg
adc
jg
add
push
add
mov
gs
ds
push
adc
bound
out
sbb
jb
push
fnsave
sub
mov
ins
inc
(bad)
jge
push
adc
sub
int
add
or
(bad)
int
pop
cmp
rcr
call
gs
shl
stc
push
sbb
mov
push
into
jnp
fs
in
call
sub
sub
les
jl
pop
mov
adc
test
aam
jns
dec
xchg
xchg
mov
add
dec
cmps
mov
loop
mov
push
sahf
adc
in
dec
dec
jmp
inc
mov
jp
out
adc
push
and
or
mov
inc
cmp
mov
pop
push
jg
pop
cmp
out
push
sbb
pushf
lock
pop
inc
stos
adc
data16
out
fisttp
pop
push
mul
ret
mov
xchg
int3
jle
imul
aaa
(bad)
enter
data16
mov
ret
js
test
enter
cld
push
cdq
inc
sbb
cmp
dec
jg
dec
mov
mov
in
cwde
and
fstp
pop
ins
cmp
inc
and
jb
out
xchg
dec
cmp
xchg
jmp
cmc
jecxz
push
ins
push
inc
cwde
test
adc
jge
mov
push
stos
sbb
cld
stc
rol
std
xchg
retf
test
and
or
out
lock
fstp
mov
jmp
loop
mov
jmp
ret
(bad)
sbb
shl
add
sub
pusha
stos
adc
push
shl
or
lea
pop
fild
aam
aad
push
push
push
out
(bad)
add
ins
int3
into
jo
(bad)
aam
clc
mov
gs
mov
pop
rol
or
add
in
or
enter
add
pop
mov
repnz
sub
int
fisub
mov
adc
push
jbe
call
pop
rcr
fcomi
mov
inc
sar
push
mov
mov
pop
test
adc
xchg
test
mov
call
and
mov
cmps
ds
out
dec
xchg
(bad)
add
pop
pop
and
xchg
xor
lahf
je
or
out
mov
inc
or
iret
or
pusha
adc
dec
and
mov
lea
and
pop
repz
movs
clc
push
out
stos
rcr
jge
arpl
shr
out
ds
pop
std
xchg
mov
xor
or
js
ror
mov
dec
out
sbb
sub
jg
in
jmp
sub
out
inc
xor
xchg
jno
jnp
pop
push
scas
wrmsr
inc
inc
cmp
sbb
mov
jae
and
jne
lahf
mov
sar
(bad)
mov
adc
sub
xchg
retf
in
or
jnp
daa
adc
sbb
div
sahf
(bad)
sbb
mov
pop
je
(bad)
jp
fbstp
sbb
xor
sub
adc
xor
mov
ror
xor
mov
sar
mov
dec
imul
cmps
sbb
out
pop
int
jno
jae
adc
imul
push
or
jp
iret
nop
inc
mov
cmp
out
fs
push
pop
addr16
pusha
es
(bad)
xchg
sub
pop
out
pop
aad
mov
nop
pop
xchg
jno
test
jnp
inc
(bad)
out
aam
or
mov
test
sub
add
outs
nop
mov
fnstcw
hlt
fwait
lods
ds
aad
call
jmp
and
xchg
stos
jl
fdiv
clc
and
(bad)
out
inc
sbb
dec
es
test
sar
cmps
pop
jl
hlt
js
pop
(bad)
cwde
(bad)
adc
je
les
xchg
xor
xchg
lods
shufps
ret
(bad)
idiv
into
push
call
push
iret
xor
cmps
jecxz
adc
sub
pop
adc
sbb
cmps
stos
stos
mov
test
adc
push
fwait
(bad)
jns
and
shl
fimul
inc
aam
outs
out
mov
xchg
pop
jp
cmp
push
sti
jl
xor
pushf
cld
add
test
inc
cs
jmp
xchg
mov
jmp
xlat
ins
out
bound
sub
fs
popf
shl
add
es
mov
push
fsub
mov
in
(bad)
stc
mov
mov
adc
cwde
jne
pop
cmp
loop
jns
retf
pop
adc
inc
add
mov
add
xor
leave
mov
(bad)
xchg
daa
pop
mov
and
shl
shr
in
mov
fist
jmp
ds
push
mov
sub
push
inc
xchg
out
inc
cmp
push
lods
fild
movs
enter
sub
or
push
ins
out
popf
mov
mov
jne
xchg
or
sub
gs
outs
pop
aaa
cmp
imul
cmp
inc
push
mov
adc
adc
jno
clc
popf
dec
xor
es
fs
cmps
aam
push
pop
fcom
mov
and
sub
pop
div
loopne
mov
lods
xchg
push
retf
pop
into
loopne
sar
mov
movs
cmp
cdq
sar
iret
push
mov
sbb
pop
push
stos
push
mov
iret
sar
cmp
cmp
adc
dec
lahf
arpl
(bad)
call
cmp
xor
dec
sbb
inc
data16
stos
ins
scas
outs
sub
test
or
cmps
xchg
aad
pop
push
jmp
mov
cmp
bndldx
iret
fnstsw
push
cdq
add
ret
jmp
add
jnp
and
push
shl
stc
jmp
je
pop
daa
data16
sub
dec
les
sbb
in
sbb
inc
stos
pop
pusha
push
jg
and
out
push
cs
jno
push
or
push
fs
loop
test
xchg
push
push
dec
lock
cs
xchg
push
mov
ret
fwait
xchg
sti
lea
jbe
cmp
lock
jae
ins
fdiv
jno
and
and
dec
sbb
pop
jmp
and
icebp
lea
dec
test
out
out
out
shl
popf
sti
dec
dec
dec
iret
popa
dec
stos
xor
(bad)
dec
loopne
pop
sar
pusha
inc
clc
pop
jo
(bad)
lock
xchg
test
and
icebp
sub
movs
mov
nop
push
sub
jo
mov
pcmpeqw
das
adc
in
lea
data16
inc
js
inc
or
outs
fnstenv
leave
cmp
lods
xchg
xchg
fistp
adc
pop
jno
or
push
sub
fisub
xchg
addr16
ds
jp
inc
mov
iret
loop
bound
icebp
push
pop
or
fld
mov
(bad)
sub
lods
ins
xor
push
jp
sbb
movs
(bad)
dec
add
rcl
outs
mov
jl
mov
xchg
push
and
mov
xchg
pop
in
loope
add
addr16
sahf
sub
imul
pop
shr
in
xchg
and
push
jge
fmul
out
dec
add
ins
or
add
test
ror
lea
mov
popa
aaa
inc
repz
lahf
leave
out
sub
stc
fwait
cmc
mov
nop
cmp
cmp
in
out
enter
arpl
mov
stos
mov
or
call
xchg
and
and
lds
pop
or
movs
cmps
mov
mov
bound
rcr
retf
sbb
pushf
stos
out
scas
mov
xchg
sbb
and
mov
ins
jbe
inc
xchg
or
stos
dec
push
outs
enter
sub
jbe
mov
aad
daa
mov
push
xchg
mov
sahf
adc
jge
(bad)
jle
icebp
cli
pop
cmps
xor
mov
cwde
fist
cmps
lea
test
jmp
mov
dec
repnz
and
add
iret
sar
push
sahf
ficom
push
fs
daa
iret
repz
aad
mov
pop
inc
es
ja
sbb
push
inc
ss
lock
adc
lods
cmps
and
aam
out
mov
and
pop
mov
cmp
mov
dec
ds
mov
add
repz
mov
mov
and
fnsetpm(287
fild
xor
dec
fldcw
retf
inc
sbb
fisubr
ja
in
sbb
fisttp
xchg
xchg
data16
call
fcompp
mov
lock
mov
or
and
mov
xchg
add
jne
xchg
(bad)
in
pop
sbb
jp
fidiv
test
aad
div
cmps
ds
xchg
push
lods
es
lods
xor
cmp
xchg
mov
mov
xor
in
adc
dec
jns
lea
add
pop
sbb
idiv
pop
lock
dec
pop
xor
ret
mov
or
mov
pop
fs
and
mov
imul
daa
mov
sbb
add
add
inc
xor
jmp
or
push
inc
movs
(bad)
cmps
xchg
mov
int
sub
loop
fidiv
pop
imul
inc
dec
jmp
or
ret
xor
popf
inc
outs
pop
pop
lods
ret
push
popa
leave
sbb
lods
adc
mov
jge
inc
sub
jae
push
add
popf
add
mov
mov
push
les
push
cmp
adc
and
cwde
push
sbb
adc
jl
fs
mov
mov
(bad)
and
or
cmp
or
stos
sbb
jmp
scas
mov
stos
mov
mov
jo
imul
and
(bad)
nop
aaa
test
adc
mov
movs
loope
sub
jl
inc
punpcklwd
pusha
retf
and
arpl
es
mov
pop
outs
addr16
mov
inc
add
inc
add
xor
dec
fwait
adc
pop
lods
sub
dec
adc
or
add
mov
mov
jle
adc
or
loope
mov
jns
jle
jmp
daa
xchg
pop
xchg
lods
mov
cs
leave
jb
inc
mov
push
mov
ss
adc
icebp
cli
scas
sub
cmp
xchg
icebp
test
or
into
mov
imul
and
push
ss
int3
jbe
pop
shl
in
test
in
das
popa
push
cmps
cmp
jmp
pushf
sahf
mov
push
loope
cmps
xor
jae
fbstp
out
rcr
pop
std
add
nop
icebp
sbb
jl
(bad)
mov
or
fisub
imul
jl
ja
mov
or
xor
mov
push
gs
test
add
or
popf
rcr
xchg
pop
dec
pusha
or
adc
pop
ins
aam
test
nop
xor
adc
add
jg
sub
pop
(bad)
in
test
leave
sbb
mov
add
icebp
or
pusha
in
cmp
add
jb
data16
mov
das
loope
retf
mov
rol
shr
outs
push
rcr
out
movs
clc
inc
das
das
aaa
add
icebp
pop
push
xor
mov
test
and
fs
and
ins
fmul
test
dec
retf
inc
rcl
cmp
neg
sbb
(bad)
jne
inc
loope
dec
dec
nop
outs
outs
add
outs
cmp
adc
mov
(bad)
sbb
xchg
xlat
mov
arpl
es
mov
cld
dec
xchg
fstp
add
cmc
das
xchg
rol
ja
call
xchg
ins
mov
or
aad
jo
cdq
in
inc
mov
mov
loop
adc
movs
int3
nop
jp
out
mov
add
adc
push
cli
inc
(bad)
pop
mov
xor
cmp
fisubr
pop
push
arpl
xor
icebp
add
ins
jp
retf
imul
cld
lea
push
xchg
aad
out
dec
xor
pusha
pop
mov
fild
pop
sbb
popa
dec
div
repnz
jb
cmp
dec
inc
aad
inc
push
mov
mov
push
std
sar
dec
xchg
xchg
dec
das
movs
lods
mov
int3
mov
loope
rcr
and
fsub
aas
inc
jmp
dec
mov
inc
imul
lahf
sbb
jno
cli
mov
mov
mov
fisubr
mov
xchg
mov
and
jmp
pop
xor
pop
outs
and
aad
hlt
mov
pop
cld
stos
inc
jmp
jle
je
sar
jmp
jl
sub
outs
iret
jnp
aad
push
mov
iret
sbb
mov
loop
iret
dec
xchg
sbb
js
add
and
ins
mov
out
mov
sub
adc
add
mov
sbb
fsub
sub
fs
mov
stos
dec
shl
addr16
dec
sbb
inc
fidivr
inc
movs
rol
imul
fnstcw
sub
es
mov
(bad)
rcr
aam
cmps
outs
push
jle
xchg
and
add
pusha
or
jno
mov
hlt
inc
xchg
scas
loope
out
call
stos
into
pop
and
jmp
inc
cmps
call
adc
jg
xor
mov
cmc
rol
lods
mov
loop
outs
ss
add
les
sub
cmps
pop
cmp
sbb
push
out
cdq
cwde
inc
addr16
jnp
mov
pop
out
ret
mov
xchg
pop
je
dec
pop
cwde
add
push
fst
push
ficomp
sbb
mov
imul
dec
loop
push
and
stc
mov
pop
loope
cmc
dec
xchg
mov
push
dec
pop
dec
jb
std
adc
repnz
ret
cmp
adc
hlt
call
xchg
rsm
push
mov
and
sub
cld
call
cmp
not
test
or
into
div
jb
sbb
fwait
arpl
cmp
xchg
jmp
sti
dec
mov
cmps
pop
cmp
ficomp
sahf
daa
and
mov
mov
push
push
mov
ficom
test
mov
and
mov
stc
int3
scas
cmp
lods
adc
mov
add
jl
jmp
ins
aaa
pop
adc
fdiv
cdq
jp
cmovne
jg
ins
jle
fwait
xchg
loop
fsub
inc
jmp
movs
imul
jnp
sbb
pop
data16
(bad)
iret
xor
xor
aas
or
push
xlat
pop
into
dec
lods
repnz
xchg
cmp
dec
mov
sbb
neg
retf
sbb
push
cmps
repnz
in
push
mov
cmps
call
adc
dec
push
ds
xor
push
std
iret
aas
test
fcomp
add
call
dec
cmp
pop
cmp
or
nop
ins
mov
ret
cld
ja
lahf
push
or
mov
(bad)
popf
adc
fimul
sbb
repz
es
enter
mov
fild
das
test
adc
cli
clc
test
pop
shl
movs
push
stos
adc
xor
add
sub
adc
sub
lea
ficomp
inc
dec
xor
iret
push
ret
cmp
aad
imul
cdq
lea
and
push
push
imul
or
jnp
pop
jmp
arpl
test
aaa
sub
mov
add
and
ror
cmps
xor
xor
sbb
jecxz
(bad)
es
mov
int3
add
sbb
lods
mov
inc
and
xor
stos
pop
dec
xor
shld
in
or
cli
mov
or
add
cmp
out
popf
dec
mov
push
pushf
push
xchg
sbb
cmp
in
bound
nop
xchg
lock
or
out
aas
xor
stc
aas
adc
pop
push
jae
dec
retf
sbb
test
cmp
icebp
mov
jo
push
mov
mov
jmp
(bad)
not
lds
sti
int3
jmp
ficom
ret
dec
mov
jb
ja
imul
adc
and
repnz
div
je
popa
test
out
xchg
and
or
lahf
loop
pop
or
mov
out
jb
and
cmps
xlat
dec
cwde
lods
stos
test
mov
cmc
aaa
and
xor
inc
(bad)
sub
loope
lock
jecxz
jae
xor
push
push
adc
sub
push
cmp
dec
sub
or
or
xor
cmps
mov
dec
xchg
mov
sub
ds
loope
sub
jb
push
hlt
xchg
xor
je
data16
jnp
imul
movs
jle
pushf
(bad)
shr
test
cmp
sub
adc
aad
push
xor
cmp
mov
mov
sbb
jmp
push
(bad)
cdq
and
or
add
mov
jne
fstp
push
dec
mov
cmp
and
movaps
fsub
inc
mov
cmp
add
pop
adc
dec
adc
or
push
cmc
out
push
push
push
sub
shufps
out
or
scas
sbb
jnp
adc
mov
pushf
dec
out
jne
add
jl
mov
ins
push
cmps
hlt
cld
lahf
inc
clc
enter
daa
and
push
scas
push
mov
add
jle
push
pop
push
aaa
xlat
addr16
pop
and
add
out
or
adc
mov
mov
mov
adc
lods
lods
sub
fst
retf
sub
cld
fist
inc
not
xor
inc
sti
js
adc
cli
push
mov
xchg
bound
cmp
pop
int3
retf
adc
and
cmp
or
mov
ret
ins
dec
lods
ret
lock
or
(bad)
lock
fs
rdmsr
jmp
adc
pop
pushf
inc
ror
pop
aad
jecxz
icebp
aas
mov
push
mov
mov
pop
not
xchg
pop
mov
mov
and
push
(bad)
in
retf
sbb
sahf
jecxz
xchg
sub
in
int3
push
push
jmp
out
test
neg
cwde
fnstcw
jle
and
pop
loopne
fwait
div
sar
mov
jmp
push
cwde
daa
pop
pop
push
scas
sub
mov
shl
imul
loop
pop
scas
dec
or
pop
mov
in
sub
xchg
test
(bad)
pusha
mov
pop
or
jb
int
push
mov
push
les
popa
call
and
movs
xchg
rol
pop
shl
fisttp
sti
xchg
loopne
hlt
adc
js
fnstcw
mov
cdq
stc
push
int3
pop
adc
jns
mov
xor
sbb
mov
add
push
add
scas
push
outs
and
sub
mov
xchg
mov
call
and
dec
and
add
mov
pop
mov
mov
cmp
cld
sub
push
xchg
xor
jno
outs
popa
pop
add
loopne
or
jg
push
xor
xchg
cmp
lea
pop
inc
push
xor
xchg
inc
xor
aam
dec
xchg
mov
sbb
int3
add
hlt
pusha
int
(bad)
mov
lahf
test
sbb
or
leave
call
outs
ficom
add
and
(bad)
pusha
dec
dec
ss
rol
xchg
fist
xor
xchg
mov
out
mov
sbb
std
fwait
outs
imul
cmp
dec
or
test
pop
inc
sub
movs
dec
sti
rol
retf
fld
js
xor
xchg
jne
jge
inc
cwde
xchg
adc
cmp
jge
push
push
sub
jle
push
mov
xchg
push
ret
mov
add
lock
mov
mov
les
fcomp
mov
fisttp
push
iret
cmc
ret
stos
add
test
js
xor
adc
cdq
rcl
stos
lock
(bad)
xor
es
sub
loope
jbe
mov
inc
ins
push
lea
add
(bad)
mov
stc
dec
fisubr
addr16
pop
aam
sahf
xchg
fxch
imul
es
cmp
sahf
aam
dec
push
sbb
mov
xor
fidiv
cld
or
cmps
shr
(bad)
repz
outs
and
add
add
jbe
es
jmp
cmp
enter
cmps
inc
dec
movs
xchg
push
(bad)
sti
pop
dec
mov
mul
xor
xchg
and
jmp
adc
jne
sbb
icebp
je
push
movs
gs
inc
mov
dec
lods
dec
pop
pop
add
popf
stos
xchg
push
inc
mov
mov
out
cmp
mov
sbb
mov
out
pop
xchg
loope
fld
ret
mov
dec
sub
mov
sub
aad
xor
fcmovb
ror
out
xor
inc
mov
pop
push
sar
imul
push
and
test
inc
inc
adc
mov
movs
sbb
mov
adc
sbb
mov
or
jmp
xor
jmp
jmp
arpl
mov
add
jle
cli
dec
xchg
mov
dec
sub
push
movs
test
jae
xchg
rcl
dec
push
sub
js
adc
imul
or
push
dec
push
xor
clts
fsubrp
mov
std
mov
jno
outs
fs
test
leave
ds
mov
fcomip
and
push
dec
int3
fxch
bnd
ret
stos
and
sub
mov
aam
retf
dec
dec
pop
aaa
jle
fld
aam
pop
pop
jle
cmp
jns
cmp
fs
jo
pop
sbb
jbe
inc
lea
les
sub
cmp
xor
pop
mov
ins
pop
out
pop
cmp
enter
popa
das
ins
adc
leave
jno
ficom
mov
dec
dec
add
push
fimul
scas
pop
mov
enter
adc
mov
pop
int3
ins
lods
dec
fild
repnz
mov
addr16
aad
popf
cmp
fild
adc
mov
stos
out
hlt
mov
call
jnp
jmp
rol
mov
sbb
mov
test
fnsave
idiv
and
(bad)
sub
adc
nop
add
(bad)
push
inc
mov
daa
pop
(bad)
aas
ds
pushf
(bad)
stc
jl
inc
mov
out
jno
cmps
adc
add
push
stc
inc
call
repnz
scas
sub
pusha
push
scas
scas
cmp
dec
loope
cli
out
(bad)
and
cmp
call
imul
xor
sbb
mov
out
dec
out
ja
(bad)
mov
inc
icebp
push
ja
add
mov
adc
cmp
jg
test
test
push
sahf
mov
push
(bad)
fnstcw
mov
jecxz
mov
int3
icebp
inc
sbb
add
cmp
xor
xchg
push
mov
ret
sub
sbb
xor
lods
add
mov
jno
jmp
cmc
sbb
mov
(bad)
mov
fnstenv
pop
and
lock
push
movs
in
mov
mov
mul
in
push
jno
or
out
cmp
test
out
push
inc
cmp
idiv
cmp
jne
mov
mov
sbb
cmp
call
and
int3
or
mov
mov
push
dec
and
fdiv
mov
pop
cmp
cmps
hlt
jecxz
loope
bound
cwde
in
outs
clc
int
xlat
xchg
add
sbb
xchg
stos
mov
mov
pop
sbb
dec
xchg
pushf
mov
cmp
lea
out
push
push
push
cld
dec
push
or
test
pop
mov
mov
std
fprem
push
jl
fisttp
mov
mov
(bad)
std
xor
add
inc
not
ret
retf
xchg
adc
jmp
ja
je
dec
ins
or
arpl
xchg
stos
add
js
movs
sbb
xchg
or
push
inc
js
or
je
(bad)
or
cld
movs
cdq
inc
jp
and
js
mov
sti
sub
sbb
stos
outs
dec
pushf
dec
ret
imul
test
or
cmp
pop
lahf
push
ret
jmp
dec
and
mov
or
cld
xor
push
gs
daa
sbb
jae
dec
call
and
inc
out
jno
cmps
cmp
mov
mov
pop
dec
ror
cmp
push
pop
mov
das
hlt
push
pop
(bad)
stc
jge
clc
cmp
fidiv
xchg
stos
sub
or
mov
xchg
repz
in
hlt
mov
fwait
add
xor
dec
cmps
mov
xor
movs
xchg
and
call
mov
vxorps
lock
mov
(bad)
mov
ins
jns
adc
mov
mov
jns
mov
jb
ss
push
mov
ins
dec
test
adc
mov
pop
sub
pop
or
sbb
and
popa
popf
jbe
pand
push
lods
call
int
shl
push
mov
sahf
sub
jge
push
and
jno
mov
or
jb
(bad)
xor
inc
popa
mov
pusha
adc
clc
call
repnz
xor
out
or
adc
mov
aam
jp
dec
test
cmps
and
lods
scas
sbb
shl
aam
xchg
cld
or
xchg
sti
sbb
mov
adc
loop
fadd
xchg
or
loope
pop
mov
imul
bnd
push
cmp
add
or
inc
hlt
call
or
dec
test
jnp
hlt
sub
cmp
cmc
pop
sahf
dec
inc
or
pop
out
not
fs
push
fdivp
mov
jno
mov
aas
xchg
jno
or
shr
push
je
out
sub
push
sub
sbb
icebp
sbb
mov
cmp
pop
push
popa
shl
inc
add
scas
scas
xlat
hlt
cmps
pop
dec
aam
pop
dec
fwait
jne
adc
jge
call
(bad)
pop
mov
jo
lods
push
mov
cwde
loop
xchg
ret
sub
add
inc
inc
push
xchg
add
mov
dec
adc
adc
inc
call
add
shr
fstp
lea
cmp
dec
mov
xor
(bad)
or
cld
iret
adc
ficom
fst
lahf
dec
cmps
js
push
inc
push
sub
dec
ret
lds
ror
dec
dec
enter
movs
cmc
sbb
rol
(bad)
in
div
call
inc
mov
and
inc
sahf
sub
rol
xchg
xor
fbld
movs
fisttp
add
dec
xchg
xor
stos
daa
push
das
arpl
aam
repnz
fcom
rol
xor
cs
lods
mov
hlt
aaa
outs
inc
or
inc
mov
xchg
lea
inc
inc
adc
into
retf
and
dec
push
sub
fild
(bad)
jecxz
mov
mov
in
and
push
iret
mov
push
xor
out
aaa
dec
adc
adc
sub
or
jg
xchg
out
add
ds
rcr
jecxz
mov
xor
inc
(bad)
cmp
adc
jle
cmp
mov
aam
xor
xor
mov
retf
jno
jl
(bad)
pop
mov
ins
pop
stc
sub
test
mov
pop
xor
fiadd
push
inc
dec
(bad)
mov
imul
sar
pop
outs
sbb
jns
test
ret
mov
xchg
mov
push
or
ret
jl
or
mov
pusha
ja
ins
cli
jo
aaa
pop
lock
xor
adc
out
fs
sbb
call
out
dec
ror
jo
mov
enter
inc
je
mov
pop
not
aas
data16
inc
lods
and
pop
or
dec
loopne
mov
dec
inc
pop
dec
inc
es
sub
les
sub
lods
xchg
test
jae
hlt
dec
push
fs
pushf
mov
jae
xor
(bad)
fwait
pop
push
sub
ins
popf
icebp
ja
in
sub
repz
add
lock
xchg
fcom
jbe
inc
pop
jl
add
adc
out
int
push
push
pop
or
pop
or
(bad)
ret
repnz
mov
xchg
mov
sti
mov
leave
ds
imul
scas
adc
ret
adc
test
pop
(bad)
repnz
stos
fstp
js
adc
or
rol
ja
popf
sbb
hlt
mov
sbb
and
fmul
mov
(bad)
dec
pop
adc
dec
call
jg
cdq
rcl
es
retf
into
pop
sbb
pop
dec
stos
bound
in
pop
pusha
sub
pop
adc
xchg
call
mov
(bad)
gs
(bad)
and
jmp
xchg
rcr
inc
sub
lea
add
loopne
test
test
or
xlat
scas
push
in
adc
inc
movlps
xchg
out
jle
fwait
repz
and
and
cwde
dec
lods
inc
popf
data16
out
cmp
sub
stos
jp
sbb
popf
cmp
icebp
gs
cmc
mov
inc
pop
xor
arpl
imul
sbb
add
sub
mov
in
fcmovu
scas
std
push
cmp
and
xor
ins
test
and
sub
xchg
movs
aam
scas
mov
or
jne
icebp
aas
dec
and
xchg
mov
jecxz
cld
mov
enter
add
mov
mov
aam
or
inc
out
call
mov
lea
leave
cwde
xchg
fsubrp
les
mov
jno
in
scas
push
and
push
inc
pusha
xor
sbb
xchg
or
jno
xchg
lahf
lods
std
adc
push
fiadd
dec
mov
sbb
fs
ret
xchg
jecxz
jns
cmp
jnp
ss
fst
mov
hlt
retf
inc
popf
sbb
jmp
pop
mov
push
xchg
jecxz
dec
addr16
and
cmc
stos
clc
dec
ss
pop
fldln2
push
inc
daa
ret
dec
push
inc
daa
sbb
imul
adc
dec
ret
and
mov
dec
push
rcr
and
icebp
out
dec
push
inc
(bad)
pop
mov
mov
xor
mov
mov
xchg
lods
jb
hlt
ss
retf
and
lds
movs
push
or
and
and
adc
push
imul
mov
mov
pop
mov
movs
mov
cdq
call
test
or
imul
popa
add
mov
fsubr
shl
in
xor
das
push
pop
test
fs
ret
inc
(bad)
pop
aam
out
push
arpl
jb
add
xor
imul
inc
xor
dec
jb
and
or
aam
push
repnz
(bad)
cli
jecxz
sbb
and
jno
out
lods
pop
or
sahf
movs
movs
int
test
mov
sbb
mov
adc
jo
pop
or
or
shr
push
mov
cmp
add
cmp
dec
hlt
jb
inc
jmp
loopne
dec
xor
movs
ret
repz
fld
sub
fucom
jmp
std
inc
push
and
xchg
fld
sbb
dec
hlt
add
iret
add
mov
sub
jae
mov
out
shl
sbb
outs
pop
jne
sahf
lds
in
mov
gs
retf
sbb
dec
push
ror
ins
inc
pop
dec
stc
cmp
jne
xchg
inc
push
adc
cmp
popa
aad
test
cld
jb
in
sti
xor
sahf
ins
call
and
test
pop
jg
xchg
cmp
out
(bad)
push
jle
lods
dec
repnz
call
dec
or
xchg
xchg
jne
retf
mov
xor
push
shl
rol
pop
xor
jns
(bad)
add
dec
out
push
xor
dec
xor
loop
aad
out
fcomp
fist
ror
push
repz
add
pop
mov
nop
jmp
lods
std
out
xchg
popf
mov
hlt
out
jge
rcl
mov
pop
jp
rcr
sub
in
retf
push
pop
pop
dec
scas
lea
and
imul
stc
jns
xchg
sub
push
push
loop
hlt
push
ja
inc
ins
or
mov
dec
cli
push
inc
adc
jecxz
mov
lea
mov
cmps
xor
test
fucomp
pop
cld
(bad)
push
fisubr
neg
jmp
fidiv
movs
sbb
push
scas
outs
mov
or
ds
add
rcr
cmp
and
(bad)
fs
pop
(bad)
xor
aad
xor
xchg
cmps
jne
fild
fwait
mov
jl
shl
adc
or
mov
stc
push
jecxz
pop
enter
push
push
cmp
adc
cwde
int3
lods
popf
lea
js
mov
pop
pop
dec
retf
xor
out
adc
int
es
jp
in
imul
or
and
push
cli
sbb
stos
cmc
push
mov
ret
add
jno
sub
xchg
dec
xchg
push
ins
popa
jne
je
sub
inc
jne
dec
fsub
mov
into
xchg
adc
xchg
pop
and
pop
xchg
call
(bad)
out
popf
nop
cmp
jnp
shl
inc
loop
cmp
aaa
into
les
adc
pop
loope
test
sub
lods
je
sbb
jns
int3
rcr
ret
sub
aas
neg
sbb
int3
inc
mov
pop
repz
pushf
inc
call
aaa
sti
add
shl
push
outs
push
ds
daa
cmp
push
std
stos
rol
xor
(bad)
(bad)
loop
daa
iret
inc
cmps
fxch
nop
sbb
cmp
xchg
xor
mov
int
pop
lods
push
add
repnz
push
xor
not
sbb
je
lds
bound
sub
mov
sbb
pop
dec
push
sub
push
popf
push
pop
sub
push
hlt
(bad)
adc
pop
cmp
sbb
les
add
push
xchg
inc
mov
fdiv
pushf
mov
xchg
dec
xor
cli
ss
stos
fst
pop
cwde
mov
dec
sar
mov
arpl
mov
mov
xor
add
cmp
and
jp
push
dec
jmp
outs
push
mov
ins
push
mov
pop
enter
test
dec
mov
jl
inc
out
lock
pop
sub
and
sub
xor
rcl
clc
inc
mov
(bad)
stos
(bad)
movs
aas
jae
push
repnz
fmulp
or
pop
gs
or
inc
popa
(bad)
jmp
push
add
scas
sar
mov
ds
mov
inc
inc
out
pop
xor
fwait
gs
inc
or
pop
rol
in
jbe
adc
in
push
bound
xchg
out
mul
xchg
scas
test
sub
push
sub
pop
inc
scas
push
das
xchg
push
call
xor
mov
cli
iret
les
test
or
sbb
mov
push
lahf
cmovge
xlat
sbb
movs
jo
cmc
loopne
dec
inc
sub
je
jmp
or
mov
dec
or
movs
pop
imul
xor
lods
xchg
mov
push
or
cs
mov
mov
les
pop
clc
in
cmps
dec
loop
aam
xor
repz
or
inc
lock
mov
jbe
in
(bad)
shl
dec
out
mov
xadd
jbe
and
push
outs
sar
or
sub
push
mov
lods
es
ins
jmp
inc
and
ret
inc
test
mov
inc
push
rdpmc
push
add
jnp
cmp
sub
sub
sahf
sbb
cmc
push
dec
pop
pop
add
pop
ss
inc
not
jne
mov
and
and
jb
ins
sbb
nop
shr
pop
sub
repz
jne
adc
or
cli
or
jge
inc
xchg
push
mov
dec
jbe
jle
xchg
cdq
movs
xor
cli
in
sub
add
fimul
sbb
or
mov
xchg
not
test
push
xchg
int
dec
xlat
push
cmps
sti
cmp
pop
cmp
int3
jmp
frstor
and
xor
pop
or
dec
xor
popa
dec
cmc
scas
push
fisttp
fimul
jge
mov
dec
rcr
inc
int
mov
pop
jae
aas
jp
cmp
imul
push
push
movs
stc
in
jne
daa
jbe
and
xchg
imul
cwde
call
jno
xor
xchg
push
adc
sbb
dec
fist
mov
ret
ds
fs
cli
or
mov
ins
aaa
je
adc
pop
out
xchg
cmp
scas
gs
xchg
xchg
mov
mov
push
ins
jne
retf
mov
call
adc
push
xchg
mov
lock
iret
xlat
(bad)
xchg
sub
inc
jl
adc
mov
mov
jle
rcr
xchg
jecxz
sti
(bad)
mov
movs
cmp
in
pop
int
int
retf
cli
les
adc
jle
pusha
jg
adc
push
push
add
lds
movs
pop
mov
xchg
push
mov
jecxz
cwde
inc
mov
sbb
pop
dec
aas
sbb
adc
jbe
mov
inc
jmp
inc
push
pusha
sbb
lock
fadd
int
push
cmps
in
mov
je
cwde
fimul
imul
xchg
or
repnz
dec
rcl
or
cmp
mov
into
(bad)
xchg
dec
std
fstp
mov
fstp
xor
sahf
pop
stc
int
fimul
pop
jo
mov
pop
sub
ds
pusha
cmp
sahf
push
inc
pop
sbb
sahf
pop
rcr
add
inc
cmp
mov
sbb
or
xchg
into
fild
pop
sahf
stos
mov
xor
jmp
jl
ret
inc
sub
push
cmp
sub
mov
xor
xor
or
inc
and
sbb
or
sbb
std
in
stos
imul
mov
(bad)
pop
popf
les
push
js
jmp
add
sbb
gs
call
dec
rcl
cmp
sub
je
ins
adc
cmp
sbb
outs
stos
daa
push
mov
add
cmps
(bad)
js
dec
bound
jns
out
adc
xor
mov
jl
retf
mov
sbb
shr
stc
scas
jb
jmp
cmps
pusha
std
and
test
pusha
xchg
loop
push
pop
jmp
or
stc
push
add
daa
xchg
or
mov
push
cwde
ja
cmp
hlt
out
stc
or
pop
sahf
sti
retf
adc
pop
es
mov
sub
out
stos
popa
stos
xor
add
(bad)
ror
out
ret
enter
loop
pop
fsub
imul
push
mov
shl
fs
dec
inc
mov
sub
pop
fld
mov
cli
jmp
pop
adc
ret
rol
ss
gs
dec
or
call
jmp
fs
inc
cmc
jbe
fwait
aad
aam
jp
shr
jl
dec
out
scas
in
jmp
xor
retf
lods
cmp
inc
or
jmp
jns
ffree
ret
jo
mov
cli
jno
mov
jne
(bad)
lahf
mov
(bad)
xchg
xor
sbb
xor
mov
add
lods
fldcw
jp
aas
retf
rol
mov
cmps
xchg
stc
pop
cmps
pop
lea
cld
dec
cmp
pop
and
add
mov
sub
mov
or
ss
inc
and
icebp
leave
dec
fwait
loope
and
add
aam
mov
aaa
out
pusha
pop
outs
repz
pop
int
cs
mov
popf
hlt
test
cld
xchg
sbb
(bad)
outs
mov
(bad)
(bad)
(bad)
js
ret
sbb
xor
pop
push
xor
push
sbb
push
popa
adc
retf
imul
jne
test
mov
inc
call
out
iret
pop
and
xor
xor
pop
xor
aad
je
nop
sbb
sahf
mov
push
pop
mov
adc
je
push
into
cdq
dec
out
inc
sbb
jecxz
cmc
push
add
stos
and
or
int
add
std
mov
fs
sbb
mov
cmp
dec
rcl
fldenv
jne
mov
adc
(bad)
lock
mov
adc
inc
icebp
inc
dec
pusha
jae
cmp
push
jne
icebp
dec
inc
adc
xor
xchg
pop
cdq
cdq
jmp
adc
js
mov
lods
or
lods
and
mov
sub
fld
rcr
sbb
dec
jae
xchg
mov
jno
mov
adc
enter
mov
jmp
(bad)
das
ret
or
xchg
repnz
push
cmc
arpl
frstor
rcl
ss
cmp
(bad)
loope
pop
xchg
jmp
shl
and
jmp
pop
sbb
shr
scas
push
int3
loop
push
dec
or
jmp
enter
stos
ds
jns
(bad)
icebp
js
outs
ret
mov
jo
adc
sahf
xchg
sbb
and
enter
mov
(bad)
mov
push
packuswb
jecxz
aaa
and
jle
jg
inc
lea
sub
fcmovu
in
cmp
std
call
pushf
xor
push
jl
outs
int
or
cmps
mov
adc
mov
js
inc
gs
fld
push
jge
or
leave
jp
mov
mov
adc
xchg
or
rol
sub
jo
shl
into
xor
leave
xchg
push
jecxz
stos
shr
rcr
test
pushf
xchg
dec
data16
adc
add
lea
(bad)
cld
test
hlt
js
or
add
or
ins
(bad)
ja
repz
xchg
scas
mov
mov
inc
pop
repnz
add
outs
(bad)
pop
or
in
adc
cdq
sub
dec
out
inc
add
outs
xchg
cmp
cmps
jecxz
dec
call
push
pop
add
out
mov
xchg
scas
jne
in
and
adc
adc
popa
inc
stos
jmp
adc
adc
cmps
xchg
test
xor
inc
mov
pushf
fdivr
test
je
int
loopne
(bad)
(bad)
xchg
mov
ret
or
das
sub
and
and
aas
hlt
(bad)
aad
idiv
mov
mov
aas
movs
mov
xchg
test
and
clc
ficomp
ins
add
lahf
scas
or
(bad)
and
(bad)
add
fild
push
mov
imul
sahf
(bad)
or
push
dec
xchg
push
or
xchg
aaa
test
es
push
lods
inc
and
imul
push
shl
cmp
mov
loop
sti
jmp
into
fisub
sar
push
(bad)
cmp
mov
mov
popf
or
in
pop
rcl
pushf
jle
pushf
fisubr
xor
ins
mov
inc
mov
xchg
lods
std
loop
outs
jecxz
mov
jb
pop
mov
adc
add
out
lock
out
cli
push
dec
aad
inc
dec
lock
outs
out
push
sub
push
pop
repnz
mov
sub
add
mov
jge
cli
mov
sub
cs
fs
mov
rol
into
sbb
cdq
pushf
pop
pop
test
mov
test
movs
and
mov
loope
pop
dec
push
loope
xchg
in
xchg
jl
in
dec
iret
int3
dec
sub
xor
(bad)
out
pop
push
cmp
fdiv
out
rcr
clc
sbb
sub
je
xchg
lods
mov
bound
nop
mov
(bad)
mov
sub
shr
and
inc
xchg
cmps
rcl
push
dec
xor
sub
dec
fidivr
xchg
sub
lock
xor
push
add
cmp
or
mov
xor
es
mov
shl
xor
test
(bad)
mov
and
mov
pop
lea
cs
mov
xor
pop
(bad)
gs
cmp
or
add
sahf
mov
sub
fidivr
aaa
push
adc
mov
dec
jne
outs
cmp
ja
xchg
xor
xchg
stc
dec
out
sti
jl
sar
lea
xchg
inc
int
add
inc
and
jb
je
mov
jl
cmp
or
jmp
inc
mov
or
(bad)
push
adc
lods
in
or
ret
inc
push
scas
cld
and
mov
getsec
inc
and
scas
and
rol
or
imul
neg
test
aam
pop
dec
adc
call
jo
pop
add
inc
es
rcl
cmc
adc
xchg
sbb
jae
pop
dec
jl
mov
popa
xchg
or
lock
sbb
ds
icebp
jno
(bad)
pop
ficomp
test
jmp
ds
xchg
xlat
sbb
and
fs
sub
lds
sbb
dec
mov
adc
clc
data16
test
or
jge
leave
sub
mov
cmp
ret
popa
and
pop
div
dec
mov
mov
jl
mov
aad
ds
xor
push
stos
rol
jp
scas
repnz
cmp
mov
imul
imul
scas
xor
dec
mov
enter
jge
pop
lods
cmp
leave
idiv
repz
mov
add
leave
sub
add
lods
int3
jmp
shl
retf
mov
jno
dec
shr
pop
sbb
(bad)
popf
mov
fnsave
pop
xchg
mov
cmp
movs
fcmovu
mov
mov
(bad)
rcr
inc
fwait
mov
inc
je
push
adc
into
(bad)
mov
retf
inc
mov
pop
retf
pop
movs
jne
xor
push
call
rcr
rcl
jmp
fmul
add
jo
xlat
imul
add
mov
(bad)
jnp
std
inc
repnz
nop
mov
mov
loopne
or
(bad)
aaa
sub
jmp
xchg
jnp
add
cli
sbb
ret
jo
jge
mov
jg
cmp
jecxz
in
push
xchg
jg
das
and
inc
pcmpgtd
cmp
xchg
sub
or
pusha
(bad)
(bad)
popa
pop
ret
fdiv
out
mov
and
xor
push
mov
bound
pop
jo
ja
mov
mov
icebp
mov
mov
fwait
or
mov
xlat
sbb
(bad)
aaa
ret
test
popf
sbb
fadd
or
jo
outs
inc
test
cmp
dec
cmp
scas
inc
pop
pop
repz
add
sub
inc
(bad)
cli
dec
out
mov
and
imul
mov
sub
ret
imul
inc
ds
imul
sub
outs
scas
inc
sub
and
jg
sbb
test
fimul
pop
cmps
call
mov
and
outs
xchg
mov
arpl
mov
clc
shl
cdq
jge
xchg
jb
mov
or
outs
pop
adc
mov
mov
mov
out
mov
adc
pop
(bad)
sub
pop
dec
jp
inc
icebp
jb
xor
int3
lods
sbb
int3
dec
jg
sbb
dec
(bad)
xor
test
pop
repnz
dec
dec
mov
retf
dec
hlt
ror
mov
mov
cmc
lea
dec
movs
loope
lock
lea
or
or
add
push
dec
icebp
(bad)
push
es
cmps
or
dec
xor
mov
das
popf
dec
call
(bad)
mov
lahf
xchg
or
pop
pop
push
popf
movs
mov
sub
jo
test
sbb
ja
mov
lock
cmp
push
dec
pop
push
or
xchg
or
cmp
nop
js
out
ret
pop
(bad)
push
dec
xlat
add
ins
xchg
push
jp
stc
xchg
not
test
xor
addr16
(bad)
jbe
pushf
jl
adc
pop
int3
pusha
sub
lahf
mov
cmc
push
jb
daa
dec
cmp
inc
ret
jns
out
xor
push
xchg
mov
sub
bound
shl
fcomp
jae
jo
mov
fcomp
aam
out
stc
mov
mov
jo
mov
jbe
push
jmp
push
adc
xor
jle
test
test
xor
add
pushf
sub
xchg
jmp
adc
jg
mov
pop
sbb
iret
sbb
icebp
sbb
or
and
jne
(bad)
frstor
retf
dec
pop
inc
(bad)
(bad)
xchg
add
pusha
(bad)
mov
jmp
aam
scas
jl
jecxz
std
jnp
inc
mov
mov
call
mov
add
adc
(bad)
xchg
jp
pusha
cdq
adc
cmp
and
rdpmc
ins
and
sub
jecxz
push
repz
or
enter
adc
daa
test
dec
in
icebp
fsub
mov
adc
jo
aas
mov
test
ins
or
xchg
xor
fbstp
jmp
cdq
ret
in
mov
mov
xchg
sub
sub
mov
adc
push
popa
cvtps2pd
adc
fistp
pop
in
hlt
pop
mov
test
sbb
sub
or
mov
push
pop
(bad)
mul
add
dec
fwait
les
out
mov
shl
movs
or
lea
and
pop
gs
test
pushf
sbb
sbb
jmp
pop
pop
dec
xchg
movs
lds
fild
push
inc
push
lods
sbb
jno
lods
mov
xlat
inc
add
add
(bad)
bound
push
test
retf
jl
ins
xor
retf
mov
lahf
data16
xlat
inc
std
addr16
out
iret
push
imul
stos
das
cmp
mov
stc
xor
pop
xchg
sub
and
pop
pop
inc
rcr
cmp
dec
bound
fnsave
push
dec
in
pop
adc
sahf
push
xor
mov
pop
(bad)
fs
iret
pop
loope
outs
mov
cli
mov
or
std
mov
xor
cmp
sub
bound
cmp
aas
shl
sbb
push
mov
scas
add
mov
mov
mov
ds
xchg
mov
bnd
imul
push
add
jae
shr
lods
nop
push
sub
ja
fsub
pop
fdiv
sbb
mov
lods
and
pop
add
xchg
das
xchg
mov
push
sbb
test
lods
push
call
cmp
jno
call
movzx
add
push
js
pop
mov
inc
mov
pop
call
jg
sbb
sub
push
or
add
push
imul
les
jmp
and
mov
in
xchg
test
outs
inc
pop
pop
inc
retf
xor
adc
sub
shr
sbb
adc
add
add
fs
loope
sar
push
push
jne
cdq
cld
push
jecxz
push
fcmovnbe
popf
js
out
stos
pop
scas
mov
dec
lods
dec
stos
dec
imul
pop
mov
stos
mov
jno
jns
dec
mov
sbb
aas
jo
outs
out
push
in
popf
xlat
daa
aam
cmp
fst
adc
cdq
jbe
lods
popa
rcl
xchg
push
(bad)
jno
jecxz
les
stos
stc
pop
arpl
pop
mov
mov
rcr
out
fimul
mov
stos
stos
mov
xor
scas
fs
push
fwait
jl
pop
mov
sub
sbb
jae
push
pop
int
iret
pop
xchg
lods
xor
push
xchg
add
push
sbb
mov
stos
(bad)
push
push
icebp
add
cmp
(bad)
push
cmp
push
push
es
sub
out
push
mov
push
out
in
fild
mov
mov
or
add
lods
les
push
jg
cld
lods
adc
pop
pop
daa
gs
sub
pop
rcl
inc
data16
nop
push
xor
neg
and
adc
jp
pcmpgtw
cmp
(bad)
les
jmp
push
xor
fwait
(bad)
mov
clc
pop
cdq
dec
xchg
inc
nop
pop
shl
mov
test
fsub
lds
lea
call
fmul
cmc
inc
nop
out
xchg
pop
xor
or
movs
mov
jb
cld
jl
into
test
das
into
out
jbe
sbb
jmp
and
lds
xchg
mov
mov
add
in
jge
inc
and
int
inc
retf
inc
mov
mov
inc
push
fs
add
(bad)
rcr
out
xchg
js
mov
cmp
dec
mov
fisub
call
cld
mov
pop
in
cmp
test
sbb
dec
cmp
cmp
pop
lahf
scas
dec
jbe
mov
xchg
mov
sbb
imul
or
xor
add
adc
mov
mov
xchg
imul
in
ds
adc
retf
push
sbb
in
and
push
mov
popw
and
pushf
test
not
dec
or
mov
sbb
repz
push
adc
dec
arpl
mov
mov
jo
push
repz
movs
or
sbb
xchg
jmp
ret
xchg
mov
pop
dec
dec
add
adc
and
and
mov
addr16
leave
nop
mov
repnz
adc
pop
inc
out
imul
add
fadd
sti
outs
sbb
ret
ret
and
pushf
lods
test
mov
sti
movs
and
out
imul
js
or
or
ret
lahf
xor
sub
mov
ss
jge
push
or
sbb
pop
sbb
dec
pop
ror
nop
(bad)
out
imul
dec
adc
test
sbb
add
mov
xchg
xchg
mov
call
xchg
xchg
mov
gs
or
stos
test
sub
add
fucomip
sbb
movs
xor
ja
xchg
dec
enter
fucom
dec
(bad)
call
(bad)
fidivr
xchg
sub
xchg
lods
jno
mov
ret
jae
lahf
imul
mov
adc
rcl
xrelease
jecxz
cmp
xchg
mov
outs
sub
pop
and
mov
adc
dec
xchg
inc
lahf
mov
inc
clc
pop
sub
add
repz
add
leave
mov
adc
aad
pushf
cmp
std
sbb
fisttp
int
mov
adc
or
xor
mov
nop
fwait
add
push
test
xchg
loope
fistp
mov
jge
push
lods
inc
fsubr
dec
sbb
popf
mov
push
or
(bad)
mov
popf
or
stos
retf
inc
aas
xchg
add
or
jl
repnz
or
fidiv
test
scas
adc
add
imul
push
or
pusha
push
xchg
movs
in
stos
callw
push
xlat
push
loop
aad
add
ins
inc
xor
dec
adc
inc
das
sbb
and
pop
outs
bound
xchg
inc
mov
stc
sub
pop
add
pop
xchg
sub
xchg
call
rcr
sbb
cmps
pushf
fimul
or
outs
popa
or
or
icebp
in
nop
mov
dec
pop
push
std
jg
shl
push
popa
mov
push
jmp
mov
pop
inc
inc
add
jmp
adc
(bad)
sub
loopne
adc
cmp
test
pushf
pop
or
cli
xlat
add
(bad)
mov
xchg
dec
push
rcl
stos
mov
inc
js
adc
(bad)
cmp
ret
arpl
cmp
stc
or
adc
daa
shl
and
push
xor
inc
test
ss
sbb
stos
add
pop
cli
xor
mov
movs
mov
sbb
xchg
bound
mov
mov
dec
jg
jp
gs
test
loope
into
adc
push
inc
inc
sub
into
xchg
lahf
and
scas
cmp
cmp
push
inc
in
out
enter
or
or
pusha
call
jecxz
push
sbb
jb
jo
mov
jo
adc
pop
xchg
dec
adc
mov
pusha
add
inc
pusha
push
inc
stos
cs
jmp
inc
popa
enter
in
outs
xlat
jge
mov
loop
push
fldcw
mov
inc
and
leave
add
xchg
mov
sbb
es
aas
cwde
dec
mov
jmp
lea
xor
sar
mov
mov
out
jle
push
and
or
xor
xor
jle
loopne
mov
je
adc
jle
mov
jmp
jb
dec
adc
jns
loop
ret
(bad)
in
imul
test
sub
aam
add
inc
sub
pop
inc
in
scas
sbb
xchg
or
pop
inc
add
dec
ret
lds
in
lahf
push
sub
add
mov
int3
sub
stos
lds
addr16
std
adc
sar
call
xchg
gs
dec
pusha
in
sbb
push
lea
pop
adc
cmovo
jnp
ret
ins
hlt
mov
xchg
les
mov
sbb
jb
loop
fs
push
or
pop
and
mov
xchg
lea
or
imul
repz
jge
push
setne
sbb
mov
test
cwde
call
inc
aas
retf
dec
inc
pop
fsub
das
popf
mov
xor
leave
pop
jl
pop
pop
jmp
(bad)
jg
cmp
test
xchg
jb
pop
mov
pushf
pop
stos
les
pop
rol
leave
jecxz
in
aaa
in
scas
pusha
mov
popf
pusha
pop
or
pop
jns
lds
xlat
pop
jecxz
mov
movs
std
jecxz
mov
xor
(bad)
sbb
adc
jmp
leave
enter
dec
repnz
push
jo
cwde
(bad)
xor
loop
add
mov
pusha
jl
imul
movs
test
aam
jns
call
cmp
pop
pop
xchg
pushf
and
mov
mov
ds
int
out
sub
adc
(bad)
cwde
jp
fs
sub
push
shl
add
fist
sti
jge
outs
imul
idiv
hlt
cmp
adc
popa
pop
adc
enter
mov
xchg
cs
push
mov
push
repz
jae
sub
jmp
pop
lea
leave
inc
lods
sbb
fistp
adc
fidivr
imul
call
jb
xor
xchg
xchg
add
inc
scas
pushf
aam
(bad)
in
dec
and
mov
test
mov
lgs
lods
aaa
mov
cdq
sbb
xchg
dec
out
cwde
pop
mov
add
in
aad
add
push
retf
inc
xchg
jne
sbb
push
(bad)
pop
loope
shl
fwait
and
and
mov
xor
retf
or
(bad)
xchg
enter
pop
cdq
stos
sbb
leave
xlat
push
stos
aaa
sub
mov
sti
or
mov
xchg
xchg
aas
mov
adc
inc
jne
and
data16
cmps
pop
imul
push
or
inc
add
or
mov
xchg
lods
xor
xchg
sbb
mov
out
arpl
(bad)
in
xchg
or
mov
adc
sbb
cwde
aaa
adc
and
icebp
stos
nop
fs
fistp
sti
aad
outs
push
mov
pop
aad
sub
pop
out
movs
jbe
test
fsub
mov
sub
fistp
inc
cmp
test
in
xor
add
mov
sub
pop
xchg
aas
sbb
daa
(bad)
loop
je
pop
lds
lahf
repnz
in
ss
fsub
adc
cmp
sbb
scas
pop
mov
inc
cmovae
push
adc
jmp
loopne
xchg
xchg
not
cld
shr
rcr
xchg
push
jnp
cs
sub
arpl
push
push
icebp
outs
rcr
jl
push
cli
aad
xchg
push
in
xor
pcmpgtd
push
(bad)
test
(bad)
test
loop
jge
sub
and
outs
ror
jno
cmp
mov
popa
pop
inc
sbb
fwait
push
sub
xchg
neg
lods
fisubr
lds
div
and
(bad)
enter
and
mov
neg
dec
xor
in
ds
xor
shl
cmc
mov
jbe
inc
punpcklwd
adc
addr16
add
add
xchg
daa
xor
dec
push
cmps
sti
rcl
pushf
inc
in
adc
ja
mov
into
mov
mov
mov
or
popa
mov
xor
fadd
or
(bad)
push
fisub
cmp
cmps
outs
add
add
or
mov
adc
mov
xchg
test
jg
into
mov
ret
inc
test
mov
call
or
add
sbb
aaa
jecxz
scas
test
fwait
ja
aas
inc
arpl
aad
sbb
ret
nop
ss
push
jae
sbb
fcomp
xor
movs
lods
xchg
out
loope
adc
adc
fisttp
imul
cld
movs
sub
test
sbb
dec
mov
sub
outs
les
dec
out
dec
cmps
push
add
xchg
outs
and
pop
and
cmp
aad
xchg
pop
sub
dec
int
lock
mov
or
sti
cmps
aas
out
icebp
stos
outs
in
fwait
xchg
es
dec
xor
cs
cwde
pop
inc
adc
xchg
sti
dec
or
adc
mov
cwde
jle
stos
jle
xor
lea
push
imul
stos
sbb
push
mov
sahf
loopne
sub
mov
mov
xor
jl
(bad)
mov
dec
fld
mov
cmp
xchg
inc
mov
nop
push
xchg
mov
dec
adc
ins
in
dec
and
mov
jb
add
in
dec
add
icebp
daa
repnz
shr
loopne
ss
inc
je
popa
jg
mov
cmp
jmp
mov
mov
loop
std
jnp
int3
add
sub
pushf
pop
dec
call
add
mov
clc
add
jb
mov
pop
push
jge
(bad)
lods
xchg
mov
sbb
in
or
lea
push
lock
jno
cmp
in
jle
and
push
push
dec
fistp
add
inc
mov
lds
(bad)
jg
jmp
xor
outs
aam
scas
loopne
mov
in
cmp
data16
lods
sbb
adc
sti
cwde
sub
sub
(bad)
and
ss
fnstenv
push
xor
pushf
xchg
shl
push
inc
xor
and
sub
mov
les
inc
mov
push
ret
adc
lods
jo
in
out
or
pop
shr
dec
xlat
mov
je
add
adc
aaa
test
jg
push
ja
push
xor
jmp
cmp
test
repnz
stos
aam
movs
sar
add
pop
cmp
sar
xchg
int3
sub
mov
mov
mov
mov
add
mov
xor
das
push
daa
push
and
test
cmps
daa
(bad)
jno
cwde
aam
push
lods
ja
repnz
std
push
mov
dec
push
pop
(bad)
shr
sbb
adc
xchg
hlt
dec
or
les
xor
push
fsub
mov
ror
sub
les
js
mov
adc
sub
mov
push
mov
daa
adc
(bad)
shr
stos
adc
in
(bad)
xchg
jae
jae
push
push
and
fcom
icebp
repnz
jmp
scas
cmc
adc
pop
or
mov
cs
js
pop
mov
pop
fadd
leave
mov
sub
and
push
add
test
sbb
jae
repnz
leave
mov
adc
add
inc
imul
pop
mov
or
pop
mov
fisttp
jmp
enter
sub
inc
sar
sub
lods
jmp
xor
scas
mov
int3
fnstsw
sub
outs
arpl
stos
retf
dec
repnz
sbb
cmp
mov
stos
dec
std
xchg
gs
mov
mov
sub
mov
cdq
mov
hlt
pop
test
xor
mov
push
fsubr
lods
sbb
jae
pop
fs
push
out
mov
xchg
aaa
scas
retf
fdiv
sub
fdiv
and
shl
cwde
and
pop
inc
inc
jnp
in
cmps
sti
push
or
js
pop
xor
hlt
out
jg
mov
mov
inc
inc
and
inc
int
jmp
mov
sbb
jae
(bad)
mov
stos
fisttp
daa
ins
lods
sbb
xor
movs
sbb
rcr
sub
sub
mov
push
stc
adc
ins
shl
loop
xchg
enter
sub
mov
aad
mov
mov
or
dec
mov
lods
add
inc
adc
retf
adc
cmp
aam
adc
push
std
adc
inc
inc
ja
sbb
out
lock
xchg
pusha
cmp
loope
mov
daa
(bad)
cdq
jb
fwait
test
mov
std
mov
jb
sti
ret
mov
xchg
sbb
ss
mov
mov
mov
fistp
mov
fs
int3
add
pop
mov
push
xchg
pop
imul
cmp
adc
data16
shl
dec
outs
pop
mov
retf
scas
inc
xlat
mov
arpl
mul
jnp
sub
sar
cmp
cmp
div
loopne
add
hlt
scas
sbb
clc
std
aas
mov
pop
scas
enter
and
push
and
jl
out
pextrw
jo
addr16
push
bound
aas
cld
shr
(bad)
cmps
mov
cmc
dec
cmp
fcomp
sar
pop
fsubr
add
mov
movs
dec
(bad)
and
mov
aam
stos
inc
jp
aas
mov
jmp
push
ss
push
mov
cmp
jg
jb
aam
sbb
xchg
and
xor
xchg
loopne
xor
jb
mov
sbb
jmp
dec
loope
test
ss
fmul
in
pop
(bad)
adc
dec
push
pushf
fild
cmp
fucomi
sbb
and
out
mov
into
dec
adc
add
adc
mov
(bad)
mov
addr16
adc
mov
mov
pop
xchg
and
and
scas
mov
push
xchg
lea
sahf
(bad)
js
and
vpsadbw
dec
cmp
dec
outs
sbb
in
je
dec
add
push
jl
jne
xchg
cmp
or
aam
test
jmp
data16
jp
inc
pop
loopne
mov
cmc
enter
mov
cmp
mov
test
jp
sbb
rcr
xchg
jbe
dec
jmp
mov
test
scas
lods
pop
pop
xor
outs
sbb
ret
xor
jg
dec
neg
fabs
and
stos
xchg
cmp
popa
retf
jecxz
cld
xchg
ret
loop
push
sbb
jbe
add
cs
cmp
out
test
cdq
jecxz
sbb
xor
or
jae
cmp
dec
xchg
push
mov
sub
(bad)
or
cld
xchg
imul
push
loope
mul
sti
cli
mov
ss
mov
out
xchg
daa
cmc
add
mov
mov
mov
mov
ins
icebp
push
mov
sti
pop
ficomp
(bad)
gs
mov
adc
cs
pop
retf
xor
imul
scas
fmul
movs
or
dec
adc
xor
or
mov
dec
ins
jns
mov
push
shl
jmp
pop
or
arpl
and
shr
icebp
fisttp
push
or
pop
(bad)
jne
pop
es
push
pushf
or
aam
or
mov
lods
ret
jns
jge
mov
in
mov
and
sbb
sbb
shl
xchg
jge
xchg
push
mov
mov
sbb
test
mov
add
rcr
mov
(bad)
pushf
jb
lods
repz
jmp
out
mov
pusha
add
or
ret
mov
hlt
mov
xlat
push
jbe
jns
js
cmp
shl
mov
mov
ficom
movs
mov
and
aaa
mov
ins
out
mov
out
add
popf
les
xor
mov
ret
(bad)
fiadd
jb
adc
cdq
and
pop
and
adc
xchg
rcr
adc
and
repz
movs
jp
add
ins
xor
imul
adc
inc
enter
ins
xor
mov
(bad)
fild
cmp
neg
jno
adc
call
inc
and
hlt
dec
sbb
jmp
lea
pop
mov
out
mov
loopne
cmps
pop
mov
or
rcl
sbb
xchg
cmp
imul
mov
aam
out
ja
pop
adc
jp
cmp
pop
add
push
dec
ret
fsubr
add
shl
mov
and
xlat
jge
call
cmp
test
int
push
push
cmp
pop
jmp
adc
cmp
ds
in
push
xor
sbb
cmps
mov
add
into
mov
or
stos
lds
inc
test
inc
push
arpl
cdq
les
sub
leave
xchg
mov
add
call
(bad)
xchg
out
test
push
call
test
in
mov
or
sbb
or
dec
ret
pop
std
ret
mov
sub
add
dec
xor
lds
sbb
ror
cmp
iret
ins
jne
aaa
mov
jae
shr
pop
jmp
push
jnp
inc
addr16
fiadd
ins
xlat
or
and
pushf
xor
repnz
cdq
in
les
dec
sub
shl
repnz
xchg
xor
xor
repnz
dec
mov
loop
int3
ds
sbb
mov
push
fmulp
fwait
add
es
xchg
and
cmp
aad
loop
sbb
mov
ficomp
mov
push
mov
mov
ins
loope
out
mov
xchg
lock
loope
mov
and
jmp
mov
outs
les
repnz
and
mov
mov
pop
jbe
or
call
mov
in
scas
cmp
in
sbb
inc
aaa
jbe
sbb
movs
xchg
mov
xchg
lds
es
cmp
lock
ror
pop
jbe
inc
adc
out
out
das
imul
sub
cmp
outs
adc
pop
js
inc
push
sub
push
bound
popa
ss
movs
(bad)
mov
sub
dec
ret
test
and
cwde
cld
inc
or
pop
data16
data16
cmps
pop
aad
retf
mov
push
push
or
dec
bound
cmp
jmp
xor
aam
bound
nop
fcmovnbe
mov
inc
call
mov
(bad)
aam
xchg
inc
sbb
sti
adc
mov
mov
inc
(bad)
outs
xlat
xchg
jmp
mov
icebp
(bad)
mov
jbe
xor
out
sub
cmp
mov
sub
lahf
jae
in
adc
push
and
mov
push
push
std
cvttps2pi
stc
mov
stos
xor
inc
xchg
test
enter
outs
inc
aas
(bad)
xor
xchg
jne
ins
cmp
push
loop
movs
pop
nop
jmp
push
shl
arpl
rcr
sub
aam
mov
pop
out
into
mov
in
lods
pop
stc
retf
dec
aad
xor
stos
sbb
mov
or
pop
xchg
scas
mov
cmp
jg
push
mov
fild
inc
pop
clc
jns
pop
ss
xor
push
mov
dec
rol
inc
and
jb
mov
scas
in
aas
pop
sbb
xchg
dec
fcmovb
out
push
cmp
add
mov
xor
retf
shr
and
scas
loope
jns
bound
mov
push
inc
and
sub
pop
fdivr
pop
adc
or
retf
loopne
push
test
cli
repz
lds
cli
fisub
xchg
or
add
rol
mov
iret
mov
jae
jmp
bound
cmc
or
jl
popf
imul
std
add
leave
mov
imul
ja
dec
movs
pop
cs
push
cli
push
adc
jo
std
ret
ss
jle
imul
daa
or
pop
push
fisub
rcr
rcl
stos
inc
pop
lds
mov
(bad)
fbstp
xchg
enter
inc
(bad)
pop
adc
ret
fst
popa
popa
bound
movs
shl
fs
jmp
cmp
fst
daa
(bad)
jae
cli
mov
jmp
add
(bad)
sub
mov
add
mov
retf
inc
jg
pop
and
std
ficom
int3
adc
lods
div
fmul
sbb
xchg
call
repnz
icebp
xchg
(bad)
add
inc
loope
or
add
push
or
jnp
(bad)
add
jmp
mov
ins
call
and
mov
xchg
pushf
fsubr
xchg
std
or
adc
push
mov
je
sub
loope
sub
cmp
sbb
(bad)
cmp
mov
mov
or
fcom
ins
mov
dec
stos
inc
shl
xlat
pop
jns
mov
out
xor
fdiv
push
pop
idiv
jbe
call
popa
sti
adc
add
dec
iret
int
xchg
mov
sub
mov
cdq
lock
xchg
dec
jb
push
cld
adc
xchg
pop
adc
mov
sti
ins
mov
arpl
xchg
ret
pop
dec
mov
fistp
lods
push
jmp
pop
xchg
gs
rcl
push
loope
jl
mov
test
call
mov
push
add
rol
add
dec
enter
sbb
add
shl
or
or
xchg
mov
adc
mov
leave
out
fiadd
cld
rcl
inc
mov
int
dec
and
ror
es
dec
lods
dec
shl
lods
mov
lods
out
lock
and
movs
daa
dec
(bad)
xchg
push
fcomp
fsubrp
stos
aam
in
cdq
jl
(bad)
scas
leave
cmp
loop
mov
mov
add
sbb
cmps
jmp
ins
into
inc
xor
int3
cmp
bound
retf
fcmovne
cmp
in
jle
(bad)
and
aas
push
int
loop
adc
mov
call
jae
jecxz
cmp
mov
pop
jno
fs
jns
add
test
pop
dec
iret
or
pop
xchg
dec
adc
out
inc
jecxz
mov
mov
lods
and
aaa
mov
and
cmps
cmp
adc
movs
fbstp
mov
inc
jl
ins
cmp
mov
mov
jb
xor
inc
push
retw
xor
std
call
les
push
fsub
cld
mov
push
cli
inc
fnstsw
sbb
mov
sbb
xor
push
push
loop
add
dec
pushfw
pushf
mov
lock
jbe
inc
fs
jne
push
dec
and
xor
call
arpl
pop
cwde
stos
pop
jns
sbb
out
or
cdq
(bad)
in
mov
cs
lahf
test
push
sub
jp
(bad)
cmp
sub
jecxz
lock
mov
ins
xor
dec
adc
ret
clc
div
jl
add
iret
cmps
cwde
mov
fsub
xor
imul
sbb
outs
je
mov
dec
ret
add
and
cmp
loop
and
repnz
ficomp
mov
shl
xchg
pop
xchg
call
add
bound
stos
sbb
push
fwait
sbb
xchg
popa
xlat
dec
(bad)
jmp
xor
push
mov
pop
inc
call
clc
jmp
add
idiv
jo
cmp
cmp
mov
mov
lods
xchg
aas
pop
(bad)
sub
pop
lods
dec
cmp
xor
mov
pop
add
jnp
(bad)
cli
mov
rcr
adc
push
std
mov
inc
push
xor
lock
popa
jp
movq
or
jmp
jmp
in
adc
mov
out
jecxz
xchg
movs
push
inc
xlat
xor
add
lods
jmp
and
retf
xchg
jnp
les
dec
retf
mov
pop
sar
fs
xlat
or
aam
mov
cmp
push
cs
push
mov
add
lahf
shl
sahf
push
inc
inc
inc
inc
aam
jl
movs
frstor
inc
xchg
sbb
(bad)
sbb
mov
mov
aaa
ins
sub
jne
inc
out
(bad)
dec
ss
cmp
mov
or
(bad)
sbb
dec
ds
fwait
mov
jbe
push
cdq
or
int
fisubr
fistp
inc
mov
xor
jbe
mov
js
fidivr
ret
and
push
movs
cwde
inc
ja
in
pop
fild
push
(bad)
mov
cmp
data16
inc
push
aam
repz
cld
stc
pushf
adc
pop
ror
repz
pop
jb
mov
je
pop
js
neg
sbb
or
jecxz
fst
pop
test
jge
fsub
push
sbb
pop
mov
inc
je
daa
test
in
mov
xchg
pop
call
xor
sar
dec
or
mov
lea
xchg
mov
adc
ret
int
add
xor
ret
ret
fldenv
mov
adc
lea
xchg
js
sub
mov
mov
fwait
fs
ret
cmp
aam
std
jmp
jbe
dec
xchg
movs
in
mov
xchg
fdivr
xor
stc
ror
mov
in
das
ins
in
xchg
dec
outs
std
out
mov
mov
cs
pop
mov
outs
mov
in
stos
push
xchg
out
xchg
das
or
mov
add
fidiv
(bad)
cmp
fistp
retf
mov
cli
add
jbe
pop
out
movs
popf
leave
lahf
lods
loop
lods
aam
jge
ins
mov
arpl
mov
scas
in
mov
cmc
sbb
sub
mov
inc
pop
mov
push
sti
es
cmp
loopne
lds
(bad)
pop
and
inc
xchg
cmps
push
cmp
adc
aas
arpl
jecxz
dec
cmp
xor
fwait
std
int
dec
sti
mov
ret
mov
add
inc
cmp
xor
push
cmp
and
push
retf
push
push
sub
js
aaa
sub
add
or
outs
mov
inc
mov
xchg
frstor
dec
scas
push
and
scas
add
jl
add
test
jg
jnp
call
xchg
bound
into
sbb
lock
dec
sub
(bad)
push
and
and
out
shl
inc
dec
jbe
sub
jnp
dec
inc
inc
jo
(bad)
movs
and
sahf
stos
out
and
and
int3
fistp
and
sbb
xchg
sub
aaa
jge
jne
in
jp
stc
mov
mov
icebp
xor
xor
jmp
fcmovne
jmp
jmp
jg
and
fadd
cld
bound
push
mov
pop
mov
cmps
rcl
bound
mov
mov
dec
(bad)
jno
shl
movs
sahf
daa
call
cmp
sti
loope
pushf
xchg
xor
mov
push
sub
adc
xchg
sub
dec
adc
pop
push
test
test
call
jmp
and
dec
cmp
push
push
lods
sbb
sbb
into
jmp
les
loope
or
and
frndint
(bad)
(bad)
adc
fwait
adc
mov
(bad)
mov
mov
and
popf
add
in
shr
dec
stos
mov
repnz
mov
xchg
int
pop
or
das
arpl
aas
sbb
xchg
pop
lock
(bad)
imul
adc
scas
call
mov
rcr
mov
dec
into
loop
jno
adc
sahf
mov
sbb
cmp
aaa
push
frstor
sub
jno
retf
ficom
and
mov
es
std
xchg
test
xor
sbb
mov
adc
dec
dec
out
mov
xor
retf
test
or
xchg
add
xchg
aam
cmc
mov
add
cmp
pop
popf
pop
or
dec
test
arpl
rol
lahf
dec
push
push
adc
(bad)
in
loope
lods
in
ficomp
push
shl
outs
out
out
out
int3
jmp
fisttp
das
cmp
or
es
mov
repnz
push
mov
jmp
cmp
add
sbb
mov
or
inc
xchg
call
mov
jg
jo
mov
mov
repnz
mov
ret
sahf
pop
inc
xor
xor
sbb
xlat
aam
scas
stos
jb
mov
js
jle
fcmove
ins
pushf
fs
and
push
mov
add
lods
xor
daa
ins
mov
js
xor
mov
outs
sbb
pop
iret
jp
inc
out
mov
fimul
add
rol
sahf
das
int3
pop
mov
imul
outs
ins
mov
xchg
push
iret
and
ret
and
xor
mov
out
push
xor
not
push
sti
int3
(bad)
inc
jl
push
mov
adc
dec
xor
and
into
and
xor
jecxz
push
(bad)
rcl
hlt
xchg
lods
sbb
mov
daa
mov
adc
dec
xchg
xor
ja
shl
mov
addr16
jnp
xchg
fnstcw
mov
clc
sbb
mov
in
shl
or
xor
xchg
sub
(bad)
jg
aaa
mov
out
mov
movs
ds
jae
adc
and
add
fadd
int
xchg
sub
icebp
add
pop
sbb
div
mov
fsub
popa
test
dec
push
mov
(bad)
out
outs
sahf
add
adc
clc
es
dec
xor
(bad)
sbb
inc
imul
jb
adc
push
mov
rcl
scas
test
push
hlt
pushf
add
cmp
mov
mov
mov
int3
pop
test
js
loopne
out
push
shl
jg
scas
and
and
push
mov
in
pop
ret
fwait
pop
aas
xlat
cwde
add
popa
push
xor
pop
ja
or
mov
or
aas
not
push
mov
cmp
mov
shl
adc
sbb
add
iret
sub
xchg
enter
fbld
retf
sub
loope
adc
ror
call
in
jne
(bad)
jmp
popa
lods
mov
sahf
mov
mov
lock
scas
ins
adc
retf
pop
xor
mov
xchg
iret
or
out
icebp
xor
mov
sahf
test
pop
mov
repz
inc
cwde
push
lock
into
xor
adc
push
lods
stos
mov
sahf
dec
sub
mov
sbb
mov
scas
test
loope
out
outs
jnp
imul
push
in
add
out
mov
cs
sbb
fist
sub
dec
pop
mov
mov
pop
out
bound
add
popa
and
push
push
fdivr
dec
stc
adc
jbe
call
push
push
(bad)
(bad)
sub
into
push
shl
jecxz
loopne
pop
outs
imul
inc
and
lea
add
pop
loope
add
(bad)
xor
popa
stc
repz
sub
or
adc
in
test
mov
outs
mov
inc
jle
sub
add
pop
outs
or
ret
into
pushf
mov
mov
pop
mov
xlat
xchg
mov
and
fwait
inc
retf
in
mov
and
mov
ds
loope
add
push
mov
call
jl
call
ds
iret
dec
repz
sbb
lock
mov
sbb
jne
clc
xchg
sub
test
push
xchg
gs
shl
ins
je
jno
ret
cmc
or
xor
mov
ror
cmp
fst
inc
lods
xchg
shr
(bad)
ret
es
or
fsub
popa
mov
sahf
jbe
pop
pop
test
mov
and
jecxz
(bad)
xor
mov
or
push
(bad)
(bad)
or
or
push
(bad)
loope
test
out
jmp
xchg
fwait
lods
sub
push
outs
loope
ret
loopne
shl
sbb
xchg
pop
and
pop
loop
not
rcr
add
enter
rcr
cmc
aam
pop
mov
or
or
in
mov
hlt
in
hlt
popw
ds
out
cmp
mov
push
mov
andnps
stc
or
dec
add
stos
jp
idiv
sub
aas
add
cmp
or
xchg
sbb
inc
jl
outs
into
dec
cld
cld
cmp
mov
or
dec
inc
jmp
outs
out
pop
retf
(bad)
mov
sti
test
and
push
inc
loope
popf
pop
es
fwait
dec
mov
pop
jo
jno
inc
mov
xchg
mov
mov
fst
mov
out
cdq
jb
out
icebp
outs
sub
pop
and
movs
out
pop
in
cdq
and
xor
lods
(bad)
pop
dec
xchg
jbe
repnz
jp
icebp
scas
int
sbb
add
mov
mov
push
in
(bad)
shl
pop
mov
or
sbb
jl
cmp
sub
push
cmps
xchg
push
mov
cmps
xor
push
fdiv
add
jp
pop
jb
mov
push
or
imul
test
or
je
stc
add
es
shl
xchg
sbb
movs
pop
test
sahf
or
icebp
pop
test
jo
adc
loopne
test
xlat
dec
xor
addr16
cmps
adc
not
mov
xlat
repz
xor
or
jle
add
or
push
jno
nop
test
mov
clc
jecxz
icebp
fmul
and
stc
mov
jmp
cmp
push
pop
inc
scas
add
push
sbb
mov
xor
sti
test
mov
push
in
sub
add
xor
inc
xchg
pop
fwait
repnz
jge
adc
cwde
sub
dec
and
mov
mov
jecxz
test
or
add
xor
outs
jp
jp
lods
in
jg
ret
add
ds
fsubr
aam
mov
fadd
mov
fwait
jbe
adc
adc
aad
lock
call
call
xor
(bad)
mov
cli
std
daa
sbb
inc
imul
dec
jle
std
mov
add
in
fwait
push
or
std
cli
js
push
pop
ret
loope
inc
mov
sub
loope
aad
inc
scas
sbb
add
cmp
test
in
fist
test
mov
xor
(bad)
out
loope
sub
(bad)
je
inc
jbe
or
and
push
jle
fcomp
inc
add
addr16
jmp
retf
mov
sbb
idiv
sub
pop
xor
call
pop
add
sbb
pop
ror
push
mov
jl
dec
jno
sti
or
cwde
jmp
fs
jmp
jns
add
or
out
mov
les
mov
jg
pop
mov
bound
pusha
outs
fwait
scas
mov
or
dec
shl
pop
push
adc
xchg
fsubr
sub
leave
jmp
adc
mov
in
in
inc
fnstcw
fs
rcl
inc
sbb
sub
or
cmp
pop
and
sub
and
js
out
cli
xor
lahf
fldcw
shl
xchg
sbb
cmps
cdq
add
sub
je
pop
outs
or
outs
jnp
jg
push
jne
clc
push
cmps
dec
mov
push
mov
xor
stc
ss
or
js
in
addr16
jb
push
jo
push
add
fidivr
sub
sbb
inc
jp
sbb
push
dec
sahf
lods
pop
sahf
gs
jp
fisttp
dec
pusha
pop
fdiv
mov
rcl
popa
pop
inc
gs
xor
pop
mov
test
add
fdiv
jb
or
cs
mov
clc
maxps
dec
or
add
pop
inc
xor
stc
ins
enter
cmp
scas
in
dec
pop
mov
rcl
and
push
push
imul
jb
adc
call
retf
or
dec
mov
test
jmp
lods
mov
jl
or
xchg
das
mov
aas
popa
adc
dec
push
neg
sbb
inc
push
fsubrp
icebp
pop
fadd
retf
mov
test
adc
sbb
dec
out
xchg
adc
pop
adc
cmp
sub
cmc
rcr
push
repz
aad
sbb
call
idiv
loopne
scas
xor
scas
mov
and
adc
stos
mov
mov
push
add
and
mov
mov
add
pop
aaa
icebp
std
xchg
outs
xchg
cmp
rol
(bad)
jmp
mov
cmp
mov
repnz
dec
sbb
cwde
gs
jb
fcom
add
mov
push
imul
fst
call
ins
mov
pushf
cmp
call
and
sahf
cmp
out
int
mov
push
sbb
enter
jno
xchg
imul
push
mov
inc
cmc
jp
mov
mov
ds
xor
ret
jo
rcr
movs
and
push
enter
retf
pop
lea
repnz
add
and
stos
fs
add
mov
jnp
retf
jecxz
jne
add
jge
mov
mov
dec
mov
lock
xor
xchg
mov
mov
mov
ret
jne
inc
or
into
xchg
mov
push
push
dec
push
mov
mov
mov
sbb
xlat
mov
dec
punpckhbw
adc
push
(bad)
retf
and
mov
out
div
mov
mul
imul
pop
or
lods
lods
ret
xor
iret
xchg
jmp
pop
push
mov
mov
aad
push
sbb
aas
sub
push
loopne
fidiv
xchg
fisubr
jge
lods
mov
imul
pop
mov
out
push
out
test
pop
inc
jmp
mov
jbe
into
xchg
push
adc
fcmove
push
lods
push
cdq
(bad)
mov
sub
(bad)
add
sbb
pop
sbb
push
in
cwde
push
sub
sti
jbe
test
sub
push
cmp
adc
rcl
retf
test
(bad)
test
rcl
push
enter
stc
ja
pop
rol
cmp
and
(bad)
xor
push
jp
movs
scas
retf
inc
sub
mov
fcom
nop
jmp
dec
sub
jle
sub
sahf
fisttp
popa
sbb
lahf
dec
inc
in
sub
pop
fstp
mov
pop
cmp
push
std
mov
mov
pop
xor
ret
xor
mov
and
mov
dec
add
mov
pushf
into
call
(bad)
pop
aam
jmp
or
dec
push
cmc
mov
add
push
fadd
out
add
xchg
ret
in
data16
push
xor
pop
inc
stc
ja
inc
ret
ins
push
sbb
cmp
mov
xchg
sbb
aad
xchg
xchg
xor
cli
sar
xchg
or
loop
push
in
xor
jnp
idiv
in
add
push
hlt
call
adc
pushf
nop
pop
pop
xchg
ja
fs
inc
call
adc
loopne
int3
ins
jno
xchg
cmp
(bad)
mov
cmps
mov
pop
movs
or
out
or
(bad)
int
mov
mov
cmp
jbe
cs
jmp
pop
fwait
(bad)
jns
rol
enterw
adc
call
xlat
and
test
out
mov
xor
inc
sub
repnz
cli
into
adc
mov
dec
gs
lock
cs
mov
retf
or
aam
ss
adc
stc
xchg
xor
push
(bad)
mov
push
sbb
mov
ss
jne
repz
iret
jg
cdq
sti
icebp
call
sahf
(bad)
dec
test
jbe
sbb
inc
pop
push
dec
test
pop
test
enter
les
(bad)
pusha
fsubp
inc
shl
mov
jecxz
fld
xor
xlat
lea
mov
ret
aaa
imul
aam
(bad)
mov
test
repz
pop
fcmovbe
push
mov
and
mov
push
ror
lahf
cdq
xabort
and
pop
icebp
mov
cmp
outs
sahf
adc
addr16
mov
mov
mov
enter
jge
icebp
out
xchg
aad
ins
inc
scas
fstp
mov
into
loop
or
push
inc
pop
sar
arpl
push
mov
mov
sub
call
mov
add
pop
ss
push
mov
movs
mov
mov
shr
(bad)
mov
scas
jge
ret
fild
aas
stos
shl
fmul
inc
repz
cmovs
pop
push
je
cmp
mov
test
jmp
sbb
ds
lods
xor
or
dec
fsubr
inc
cs
dec
xor
add
imul
fstp
dec
(bad)
pop
addr16
fimul
cmp
jmp
dec
sub
cmp
adc
inc
lea
fiadd
in
push
add
xchg
bound
cmp
inc
loopne
lds
mov
fs
xor
dec
ja
aad
repz
cmps
out
out
mov
ins
loop
mov
jp
adc
lea
(bad)
xlat
jmp
repnz
inc
imul
jge
lahf
push
xchg
inc
push
nop
mov
loop
rcl
movnti
mov
push
movs
pop
mov
js
mov
xchg
xchg
push
inc
shl
add
lea
rcl
(bad)
(bad)
jle
pop
pop
test
push
or
lea
sbb
cmp
or
in
xor
push
fidiv
inc
shl
aam
and
ret
xor
jmp
sbb
cdq
das
cmp
fdivp
fstp
or
xor
rcl
pop
(bad)
in
xchg
lods
inc
mov
lds
leave
sub
call
jns
cmp
into
repz
and
imul
push
cmp
or
push
push
(bad)
cli
inc
mov
imul
xor
outs
adc
ds
test
fnstcw
mov
adc
sti
ja
mov
mov
adc
fsubr
xchg
and
or
iret
sbb
jns
and
aas
pushf
leave
out
add
fimul
xchg
jmp
outs
jl
or
js
push
mov
jmp
cwde
mov
inc
in
sahf
not
add
jae
test
ficomp
and
out
(bad)
dec
test
pushf
fnstenv
into
in
mov
das
jbe
jo
ins
mov
retf
cmp
nop
dec
adc
jo
wrmsr
cmc
stc
das
movs
sbb
mov
ins
aam
into
xchg
jnp
popf
dec
adc
cmp
les
sar
push
sub
int
sbb
pop
cld
fmul
(bad)
cmps
cwde
iret
cmps
rol
add
sbb
mov
xor
ds
sub
imul
fadd
arpl
xor
cmc
cmp
dec
jmp
cli
mov
or
mov
aad
jbe
xchg
fs
and
ss
jge
cmp
sub
test
cmp
clc
add
xor
and
mov
leave
call
fadd
mov
stos
int
cmp
imul
jp
or
mov
mov
outs
mul
pop
call
mov
xor
xlat
call
and
ror
lods
xlat
mov
and
imul
jb
jbe
xchg
cmp
mov
add
xchg
es
mov
xor
sbb
nop
cmp
in
add
mov
mov
scas
cmps
arpl
aas
in
xlat
call
loopne
mov
cmp
add
sub
in
dec
xor
stos
inc
pop
call
pusha
shr
xlat
inc
scas
lock
push
mov
in
pop
bound
out
jo
mov
das
pop
clc
fcom
fnstcw
mov
hlt
mov
push
jmp
rcr
repz
outs
add
xor
ret
sar
test
mov
fstp
shl
retf
sbb
lock
fnstenv
xchg
rcr
mov
pop
test
sbb
mov
mov
fist
add
jne
sbb
stos
rcl
fwait
inc
xchg
out
gs
pop
hlt
sub
out
in
jg
sti
scas
add
cmp
pushf
les
push
xchg
retf
popf
lahf
jno
stos
pushf
daa
mov
outs
fsqrt
push
mov
cmp
sbb
mov
clc
leave
mov
das
xchg
mov
mov
cmc
jp
sahf
repz
pop
fcomp
repnz
jbe
fild
xor
jns
shl
cmp
jo
sbb
sti
int
dec
push
shl
pop
mov
out
sti
outs
call
sub
adc
xor
jns
adc
nop
(bad)
pop
sbb
xchg
mov
std
xchg
xchg
stos
outs
je
and
push
(bad)
ja
cs
in
scas
shr
dec
and
ret
stos
in
sub
imul
fwait
xor
inc
pushf
seta
sbb
loop
adc
out
out
and
retf
and
xchg
jns
je
outs
jae
sub
aaa
fwait
pop
push
(bad)
jmp
inc
mov
mov
in
adc
xchg
es
mov
jg
xor
dec
loop
add
cli
repz
fistp
xor
hlt
dec
(bad)
call
pop
std
jmp
jno
popa
jno
repz
and
idiv
stos
jmp
xor
daa
and
xchg
rcr
scas
fwait
and
in
cmc
in
mov
rol
xlat
or
add
(bad)
(bad)
jnp
push
dec
jg
dec
mov
test
jmp
sub
sbb
mov
gs
jecxz
imul
cdq
cmp
pop
lock
mov
arpl
mov
inc
cwde
mov
cli
pop
imul
add
movs
cmc
mov
fistp
int
(bad)
nop
ds
data16
cmp
cmp
mov
push
inc
int3
xchg
cmp
loop
dec
pop
sub
enter
aam
int
pop
jmp
xor
inc
lods
jge
mov
or
sub
(bad)
jnp
fld
jno
cmc
and
dec
mov
sbb
lds
add
(bad)
mov
and
sbb
push
(bad)
iret
jge
lahf
and
pop
cld
sub
dec
mov
ss
sub
idiv
cmp
mov
out
(bad)
and
pop
ret
je
movs
rol
cmps
push
push
dec
data16
test
adc
retf
mov
and
dec
clc
sub
dec
or
adc
test
xor
add
push
(bad)
and
sub
mov
aam
xor
pop
enter
mov
mov
pop
mov
mov
sar
or
rcr
aam
mov
pop
imul
mov
add
push
aas
push
es
repz
test
call
(bad)
loopne
int3
inc
mov
xchg
xchg
and
xchg
pop
inc
out
jns
iret
in
and
xor
pop
bnd
mov
pushf
or
add
in
mov
(bad)
push
push
mov
jl
adc
xor
dec
(bad)
lock
in
aad
imul
les
imul
call
call
movs
xchg
inc
and
cli
inc
test
lods
les
aaa
pop
push
dec
(bad)
stos
jl
repnz
xor
mov
xor
pop
mov
fld
stos
or
(bad)
sub
retf
xor
out
or
out
jae
pop
inc
inc
or
jle
xchg
scas
or
inc
mov
fxam
pop
xor
call
xchg
push
sti
jne
in
or
cli
mov
inc
loope
packssdw
jns
jmp
call
out
enter
cwde
cmc
mov
ret
push
mov
stos
clc
hlt
bswap
daa
mov
mov
test
mov
jmp
sub
push
jns
iret
mov
movs
pop
cmp
scas
dec
inc
cdq
push
fmul
jne
lds
jae
sub
(bad)
add
dec
test
sub
adc
enter
pop
popa
push
sahf
jb
pop
pop
push
add
ds
cmp
aad
jl
jecxz
push
scas
test
mov
jnp
jp
out
cdq
push
cs
enter
retf
xor
retf
mov
sbb
mov
dec
xor
or
es
in
jp
mov
shl
mov
mov
add
sub
xor
leave
rol
pushf
hlt
dec
movs
aam
pop
popf
test
cmp
popf
sub
ins
dec
jmp
mov
push
in
(bad)
jle
xor
dec
ja
mov
xchg
xchg
cmp
sbb
fsub
push
leave
jb
inc
hlt
or
(bad)
fdiv
ss
(bad)
cmps
int
cmps
lds
sbb
cs
add
and
sbb
xor
mov
(bad)
mov
sbb
lods
push
(bad)
jb
pop
icebp
cmp
and
pop
fstp
div
push
dec
or
pop
scas
add
ret
cld
jle
cli
xchg
or
sub
adc
fwait
(bad)
cmp
test
mov
push
fstp
cmp
jae
push
fwait
jb
pushf
fisttp
push
and
adc
xchg
wbinvd
lock
arpl
xchg
mov
mov
call
xor
add
sbb
sbb
add
lahf
in
push
gs
jecxz
clc
dec
add
mov
lods
dec
xchg
mov
push
rcr
mov
ror
dec
popf
mov
imul
sub
js
xchg
add
xor
mov
lock
mov
xchg
push
or
sbb
inc
and
adc
movs
loope
icebp
and
test
and
add
test
lods
sahf
add
loop
xor
adc
push
mov
sub
cs
aas
lods
add
xor
aam
in
jp
dec
scas
sub
and
repnz
cmc
stos
mov
jg
xchg
cmps
out
mov
or
fild
imul
sbb
xlat
mov
shl
lock
xor
sar
lods
dec
and
and
cmps
rcl
pusha
pop
fcom
sahf
xchg
dec
jae
enter
dec
arpl
adc
mov
inc
(bad)
in
icebp
cli
inc
mov
pop
nop
adc
(bad)
(bad)
(bad)
mov
into
mov
and
(bad)
vpaddd
aas
imul
int3
xor
or
or
sub
(bad)
out
cdq
xchg
jecxz
hlt
cmp
fsub
push
xor
ins
fwait
mov
xor
pop
adc
test
adc
sbb
adc
push
std
push
retf
shl
or
jno
push
add
test
sbb
inc
or
pop
js
push
fsub
jle
or
pop
add
push
mov
and
jae
lods
icebp
xchg
xchg
jns
add
mov
hlt
sub
out
ds
xor
dec
cmp
sub
rcr
aad
stos
pop
adc
arpl
leave
sbb
into
call
es
stc
shr
nop
push
cmp
outs
stos
inc
jmp
out
cmp
ja
retf
xor
fsubp
mov
pushf
sub
repnz
sub
push
cmc
cmp
or
or
or
add
aam
enter
cwde
stos
fistp
jl
mov
aaa
and
(bad)
test
add
mov
pop
jmp
mov
xchg
ret
stos
clc
mov
mov
fild
lea
and
imul
sar
push
stos
mov
into
cmc
xor
loope
bound
stc
mov
cld
fnstenv
fsub
leavew
sub
ins
pop
scas
aas
push
dec
jmp
test
mul
and
cmp
fst
push
fs
push
shr
in
xor
loop
xor
lods
popa
xor
cmp
fcmove
add
cmp
cmp
cwde
neg
push
cs
dec
in
xchg
js
cli
jg
add
scas
pop
push
pop
sub
jl
mov
xor
mov
jl
lods
test
push
add
bnd
jb
fisttp
adc
jno
mov
mov
fistp
ret
cwde
popw
mov
in
mov
push
(bad)
pop
pop
in
sub
mov
imul
xchg
cmp
cmps
les
mov
lods
jno
enter
mov
repz
icebp
test
mov
dec
push
pop
xor
dec
ret
pop
jle
cmp
loopne
ret
daa
loope
ret
sub
arpl
inc
hlt
add
dec
mov
aam
jae
adc
xchg
cdq
adc
movs
test
mov
mov
das
add
lds
mov
je
xchg
xor
sub
lock
loop
fs
xchg
push
scas
cmp
in
int
(bad)
cmp
cwde
jae
aas
push
push
mov
pushf
add
pop
fs
dec
imul
and
out
mov
repnz
inc
inc
add
dec
dec
mov
jl
xchg
pop
repz
fldenv
bound
cwde
or
mov
push
push
movs
test
adc
jl
mov
and
pop
mov
mov
int
js
stc
in
cmps
call
sbb
dec
leave
jb
aaa
fdiv
sub
shr
dec
enter
movs
sbb
xor
sbb
add
fcomp
inc
sti
mov
jnp
int
mov
aas
and
sbb
arpl
(bad)
cmp
jg
mov
clc
inc
inc
jns
dec
adc
rol
test
adc
mov
icebp
dec
mov
mov
xor
sub
es
dec
jl
out
add
or
or
es
icebp
push
pop
imul
repnz
out
int
out
aas
lahf
jge
popf
dec
pop
sbb
push
(bad)
pop
sbb
out
fidiv
dec
popa
gs
rcl
gs
or
ins
cdq
xchg
out
xor
pop
add
sbb
sub
rol
and
inc
lahf
push
or
cld
repz
cmp
or
lods
(bad)
scas
int3
fidivr
std
adc
jle
xchg
int3
xor
loopne
or
pop
mov
dec
mov
mov
sub
lahf
loopne
(bad)
cs
out
sbb
aas
push
inc
xchg
gs
push
jle
xor
ds
ror
pop
shr
inc
fild
cmp
imul
lock
sbb
mov
cmps
cmp
test
add
int3
repz
jle
loop
dec
add
fwait
call
cdq
pop
stos
mov
dec
lds
jmp
aam
bound
fdivr
xor
ret
sbb
dec
arpl
mov
js
fninit
lods
inc
fbstp
inc
cli
test
es
mov
popa
inc
cmps
aas
jp
js
jnp
clc
shl
dec
cmp
test
and
jle
pop
addr16
cmp
or
fidiv
jne
scas
popf
add
push
retf
out
push
add
ror
retf
and
(bad)
jmp
movs
sbb
inc
mov
ins
push
xchg
fwait
sub
gs
mov
mov
(bad)
or
xor
and
and
sbb
push
push
dec
push
or
add
xor
and
lods
pop
dec
loop
dec
mov
fisttp
mov
sub
mov
jmp
and
or
cwd
cmp
cs
mov
fdiv
stos
pop
xchg
mov
popa
jmp
or
pop
jb
loope
fst
cdq
fst
cmps
(bad)
aas
fsubr
pop
xchg
in
rcl
(bad)
xor
fistp
sub
xchg
inc
add
stos
jecxz
les
fld
push
movs
loopne
bound
sub
jmp
inc
cdq
jg
into
je
dec
gs
test
stos
fcomp
pushf
fidivr
leave
mov
xor
mov
mov
jae
mov
sbb
movs
out
fadd
ins
lods
push
xchg
jne
je
mov
imul
js
out
ja
add
(bad)
je
or
dec
jge
neg
retf
out
sbb
and
popa
sbb
push
mov
fsubr
sub
dec
pop
outs
bound
add
or
aaa
jnp
xor
cmp
loope
in
jne
not
push
cmova
shl
fwait
jno
cli
add
jne
add
aam
mov
sub
inc
out
rol
cwde
ds
pop
xor
mov
retf
and
and
or
not
mov
nop
adc
mov
sahf
shl
and
je
mov
cmp
add
jle
sub
jl
scas
pop
outs
rcl
sbb
(bad)
icebp
and
push
fldcw
mov
cmp
test
cmp
cwde
shr
gs
retf
(bad)
leave
aas
dec
ror
mov
cmc
push
pop
mov
jns
push
cli
sbb
pop
adc
mov
and
sbb
out
xchg
dec
dec
test
push
ins
push
cs
mov
push
rcl
xchg
out
push
stc
retf
clc
rcl
ret
or
(bad)
lock
test
cmps
out
les
popa
sub
scas
std
jmp
test
test
adc
xor
sub
jecxz
out
es
jp
and
adc
mov
gs
outs
inc
push
mov
pop
sbb
push
stc
out
fwait
xor
adc
xchg
pop
test
ret
pop
ja
xlat
adc
jg
and
pop
loope
imul
test
jae
dec
iret
add
adc
jmp
and
daa
(bad)
sti
arpl
pusha
dec
cmp
sub
xchg
test
sub
rol
push
lds
dec
fsub
lds
inc
jle
cmps
dec
xchg
add
lods
psadbw
mov
scas
adc
gs
cmp
lahf
sub
mov
sti
dec
aas
lods
adc
in
sbb
dec
pop
mov
mov
call
adc
xchg
sub
xor
aad
xlat
(bad)
xor
dec
or
fimul
repnz
int
and
test
daa
pusha
addr16
adc
or
adc
(bad)
or
sub
lods
sub
add
sub
inc
ins
and
add
scas
mov
clc
repnz
adc
popa
arpl
lahf
int3
pusha
jge
jp
sbb
sbb
pushf
xchg
fstp
ins
xchg
mov
aas
jge
xor
fisub
mov
mov
ficom
(bad)
(bad)
mov
dec
xchg
daa
push
icebp
jp
lods
mov
sbb
sar
outs
fisub
or
adc
jmp
dec
in
aam
sti
mov
aam
aaa
stos
(bad)
pop
icebp
sbb
dec
pop
mov
int3
int3
push
dec
into
push
lods
int3
pop
scas
outs
jbe
pop
mov
inc
xor
fiadd
lock
(bad)
js
lods
cmp
lock
jmp
mov
rol
(bad)
push
mov
jbe
jne
and
sub
ret
sahf
repz
pop
push
pop
sub
push
sub
nop
mov
mov
ret
arpl
pop
xchg
int
icebp
add
scas
lahf
in
dec
xchg
push
fld
mov
push
repz
ss
mov
cld
xchg
in
loopne
xchg
mov
cmp
xor
jb
outs
xor
aam
je
outs
add
push
sub
sub
adc
arpl
enter
mov
or
stos
or
ds
cmp
int
and
stc
dec
leave
push
push
jle
shl
stc
xchg
ror
cli
or
ds
dec
outs
sbb
in
aam
fs
addr16
fnsave
xor
xchg
hlt
out
pop
dec
call
jl
jno
mov
cwde
xchg
jne
(bad)
jnp
(bad)
lock
popa
idiv
sub
aam
inc
push
scas
lds
lds
std
fidivr
icebp
pop
mov
lds
sbb
fisubr
clc
and
retf
add
sbb
push
adc
aaa
xchg
mov
pusha
xchg
mov
push
add
xor
call
jle
sbb
sti
(bad)
bound
sbb
sbb
mov
out
fsubr
xchg
add
lock
retf
jb
mov
test
adc
fild
mov
(bad)
(bad)
cmp
xchg
dec
shl
repz
jns
lahf
idiv
(bad)
pop
sub
xchg
imul
dec
cmp
mov
dec
or
out
and
jl
xchg
and
loope
lds
dec
lahf
and
nop
or
inc
loopne
mov
pop
dec
leave
add
pop
inc
jmp
stc
cmps
or
inc
xchg
jns
mov
sub
mov
fisttp
test
ins
inc
mov
outs
inc
aas
jecxz
lods
loope
push
xchg
sbb
push
inc
mov
cmp
adc
mov
sub
pop
mov
xor
mov
jecxz
movs
jp
dec
dec
add
outs
les
lods
dec
ret
and
fsub
adc
mov
daa
jbe
add
push
push
mov
outs
sub
jge
clc
mov
test
stos
pop
add
pop
pop
loop
sub
mov
dec
cdq
rcr
mov
push
push
test
push
sbb
fld
test
rol
clc
cmp
in
add
mov
lahf
sar
repz
pop
xchg
fwait
pop
xor
lahf
pushf
ins
div
cs
mov
xchg
mov
add
sub
imul
mov
cmps
dec
pop
jg
sub
cmp
out
out
dec
xchg
icebp
enter
sub
adc
adc
inc
lahf
mov
cmc
dec
pop
iret
ss
xor
mov
lods
jnp
sar
pop
xor
test
scas
outs
lods
jno
pop
cmp
ja
fs
ss
push
mov
fstp
sbb
cmovle
sub
or
xchg
add
out
jb
ffreep
shl
sbb
or
dec
dec
popa
retf
(bad)
in
push
pop
push
mov
mov
xor
lahf
inc
in
mov
rol
push
sbb
xor
pop
and
fdiv
xor
pop
rcl
out
and
cli
mov
adc
pop
mov
scas
jle
push
(bad)
imul
cmps
cmp
push
and
jnp
sbb
mov
cmp
fimul
pop
daa
dec
jp
jmp
push
mov
leave
or
dec
(bad)
or
xchg
aaa
adc
repnz
rcl
mov
lock
in
neg
jo
div
popa
jae
ds
stos
ins
aam
adc
aad
xor
push
inc
xor
or
(bad)
pop
dec
mov
jle
inc
push
mov
dec
int3
pushf
shr
push
mov
mov
and
xchg
cld
mov
sub
bnd
xchg
or
lods
mov
shl
icebp
in
inc
or
push
or
mov
sbb
test
scas
pushf
inc
or
xor
ss
mov
and
mul
sbb
adc
mov
xchg
mov
jb
cdq
jecxz
xor
clc
and
and
jge
cmp
leave
aad
add
daa
xor
or
sub
stos
retf
pop
adc
mov
push
mov
push
scas
fnstcw
loopne
jmp
cmp
mov
and
add
xchg
int3
std
inc
pop
rol
xchg
div
adc
or
adc
mov
int
out
dec
test
stc
mov
icebp
mov
pop
call
(bad)
jo
lahf
idiv
or
out
in
pushf
test
adc
ret
push
cwde
pop
mov
inc
pop
daa
leave
adc
xchg
leave
and
jmp
daa
jle
das
xchg
fsubrp
add
repz
pop
jbe
dec
mov
cmp
push
fs
(bad)
push
std
xchg
nop
or
mov
xor
mov
repz
pop
ja
imul
jae
jb
stos
hlt
and
sti
push
je
fsub
cmp
pop
pop
pop
in
sub
mov
dec
loop
cmp
nop
xor
cmp
sub
push
mov
les
add
(bad)
sub
cmps
jmp
sub
scas
rol
add
test
js
xchg
xlat
mov
xor
mov
fild
shr
(bad)
sti
xchg
ja
xchg
fstp
ret
shr
inc
in
cmps
(bad)
and
cmp
or
and
push
adc
sbb
mov
xor
cmp
xchg
xor
popa
sahf
jbe
push
js
cmc
in
maxps
mov
shr
push
cmps
je
pop
nop
add
mov
xor
jg
test
(bad)
(bad)
mov
nop
dec
cli
mov
xor
(bad)
(bad)
xor
call
cs
rcr
or
sub
and
sub
push
cmp
add
ja
(bad)
sbb
jmp
jno
add
cmc
push
inc
pop
inc
and
or
clc
pop
int3
sahf
std
ins
arpl
pop
mov
dec
adc
clc
mov
mov
xor
adc
and
xor
pop
loopne
call
push
cmc
imul
fsub
aad
xchg
bound
dec
(bad)
jns
int
in
xchg
sub
xchg
push
xchg
fld
jnp
pusha
fwait
push
pop
neg
or
fisubr
mov
imul
pop
mov
inc
iret
mov
and
out
mov
adc
out
stos
out
aas
or
enter
ds
lahf
inc
dec
xchg
cmp
dec
sar
xchg
pop
clc
adc
pop
xchg
pop
mov
scas
ss
dec
call
jle
sti
xchg
mov
sub
shl
mov
mov
test
push
repz
pop
arpl
(bad)
jecxz
dec
or
adc
and
cmps
cmp
sub
mov
in
icebp
ficomp
adc
les
mov
add
dec
inc
lods
pop
sub
jns
(bad)
pop
dec
test
mov
xlat
and
sub
test
push
dec
cwde
retf
out
add
imul
mov
hlt
add
mov
dec
xadd
xchg
sar
jno
mov
popa
mov
outs
xchg
mov
fcom
sub
(bad)
fadd
dec
bound
mov
loop
cmp
inc
dec
jno
push
ins
stos
or
push
push
add
mov
das
lds
jmp
ret
and
pop
cdq
mov
addr16
pop
fnstsw
test
adc
nop
mov
mov
mov
ret
das
and
(bad)
popa
mov
inc
fbstp
and
add
cmp
cdq
sbb
stc
mov
(bad)
mov
je
(bad)
mov
pop
dec
out
dec
leave
call
ret
popa
adc
ds
sub
xchg
(bad)
pop
jbe
test
int
or
mov
mov
test
push
or
pop
jle
or
pop
call
test
push
(bad)
gs
retf
sub
sbb
mov
pushf
push
pop
(bad)
add
repz
jnp
pop
cmc
cwde
xlat
fs
stos
rcl
inc
or
xchg
jl
push
outs
xchg
int3
and
pop
add
fidivr
xor
pop
pop
repz
jns
dec
iret
scas
shl
sbb
pop
test
ret
push
jecxz
push
mov
das
nop
jp
adc
sub
sbb
add
xchg
lods
pusha
mov
test
popf
sub
ja
sar
ror
outs
xchg
ja
outs
repnz
or
sub
or
jg
adc
jo
lods
loope
push
push
faddp
push
in
add
shl
pop
shl
addr16
test
imul
outs
outs
adc
loope
mov
fist
js
dec
inc
and
leave
popa
clc
mov
fadd
into
shl
sbb
std
fmul
nop
xor
jo
and
enter
mov
xor
mov
in
dec
cmp
jbe
xchg
sbb
out
(bad)
push
iret
shl
cmp
ss
adc
jl
push
push
or
mov
cmp
out
lods
in
dec
loop
jge
shl
pcmpgtd
movs
lds
push
test
mov
adc
aaa
adc
mov
xchg
mov
mov
push
ret
mov
fwait
jl
mov
(bad)
or
in
movs
pushf
not
mov
ret
xchg
imul
adc
enter
xchg
add
dec
(bad)
addr16
dec
shr
sti
retf
aam
mov
gs
popf
gs
add
movs
test
out
not
imul
aas
mov
xlat
mov
sub
cwde
loopne
xor
test
inc
sbb
jmp
lds
daa
cmp
jb
mov
popa
cmp
ss
test
or
adc
mov
sub
pop
xor
and
xchg
lock
xchg
and
dec
jnp
xor
cmp
aaa
mov
sub
xchg
les
fisttp
ins
repnz
bound
dec
test
push
jbe
jae
adc
mov
pop
pop
cmp
lea
(bad)
shl
in
mov
jmp
je
bound
xlat
lods
mov
scas
sub
mov
stos
js
pop
sar
movs
cmp
ins
repnz
jg
pop
inc
inc
in
mov
fld
lahf
call
dec
cwde
addr16
pushf
mov
nop
sbb
mov
sbb
sub
mov
mov
(bad)
nop
mov
cmp
je
jp
mov
inc
ins
or
mov
xchg
and
push
add
jnp
ret
je
mov
jnp
mov
dec
ret
push
outs
scas
lahf
test
mov
shl
iret
cdq
jbe
popa
sbb
in
mov
dec
mov
fld
cmp
jnp
es
ins
mov
or
dec
pop
mov
fild
stos
iret
(bad)
adc
imul
push
in
adc
sbb
mov
leave
retf
dec
mov
icebp
jbe
lds
sub
xchg
je
sbb
mov
fimul
push
ss
inc
xchg
scas
(bad)
jl
cmps
jo
enter
hlt
xchg
pop
jnp
enter
repnz
dec
in
mov
scas
in
fiadd
repnz
cmp
retf
push
mov
add
clc
xchg
movs
mov
pop
jb
(bad)
lods
mov
xlat
call
jb
ret
lea
clc
jmp
mov
jb
nop
fild
sub
jb
xor
pop
loopne
ja
movs
push
push
popa
xchg
cmp
pop
mov
mov
ja
add
pop
mov
sub
cs
outs
nop
stos
add
arpl
inc
pop
jnp
aad
imul
jmp
enter
cli
(bad)
repz
lock
mov
inc
stc
fs
cmps
mov
retf
stos
pop
xlat
jp
pop
daa
sbb
rcr
iret
cmp
stc
pushf
arpl
call
push
jb
add
out
icebp
(bad)
jnp
sub
fldenv
lea
outs
ins
rcr
das
cwde
mov
mov
sbb
adc
mov
xchg
add
sbb
int
in
mov
in
pop
repnz
sub
out
shl
aad
or
or
pop
inc
cmps
(bad)
arpl
loope
fist
inc
jnp
jne
inc
in
add
sub
loope
scas
pop
fwait
mov
and
call
xchg
jno
mov
xchg
mov
push
pop
cmp
das
fnstcw
xor
dec
stos
call
arpl
cli
or
pop
loope
cmp
xor
call
fisubr
xlat
in
js
mov
jmp
xor
add
bnd
test
push
sbb
adc
sti
push
xchg
pop
lock
gs
and
dec
jecxz
xlat
test
push
xor
mov
ins
jmp
xchg
imul
or
(bad)
jle
or
nop
lods
mov
cld
inc
scas
pop
push
sub
cmp
mov
push
ror
int3
int
xor
fdivr
(bad)
fsubr
push
idiv
pushf
push
jp
jmp
jl
mov
fisttp
dec
xchg
cmp
hlt
add
and
out
test
xor
push
shr
sub
sahf
xlat
push
and
sti
pushf
mov
bound
xor
and
cs
pop
out
inc
sub
shr
push
add
cwde
jecxz
dec
jmp
hlt
in
stos
pop
je
cs
mov
dec
xor
rol
mov
push
imul
mov
or
xchg
jecxz
lock
or
push
imul
cmp
je
stos
mov
cmp
sub
ja
and
loopne
retf
dec
test
outs
sbb
lods
xchg
ret
xchg
xchg
pop
div
mov
inc
lods
mov
sahf
mov
mov
test
dec
push
cmp
shl
jge
xor
mov
sbb
shl
sub
repz
mov
inc
xor
mov
xchg
mov
push
xchg
sub
adc
(bad)
cmps
fs
xchg
push
daa
mov
inc
mov
mov
dec
dec
mov
pushf
imul
or
fwait
pop
stos
and
jp
adc
and
jne
les
stos
cmp
mov
rcl
mov
jecxz
imul
adc
xchg
(bad)
dec
lar
int
imul
repz
(bad)
ds
das
call
call
inc
cli
add
js
pop
lahf
lea
nop
xchg
mov
stos
sbb
in
add
repz
shr
movs
mov
outs
jb
js
push
mov
inc
mov
push
xchg
mov
in
es
add
jge
repz
out
ss
scas
daa
scas
adc
or
das
fiadd
pop
or
dec
jecxz
mov
fwait
sub
cmp
cmps
xor
ror
mov
pushf
mov
les
(bad)
cmp
cli
fwait
or
jecxz
out
ins
inc
sub
hlt
push
pop
movs
xchg
mov
adc
pushf
(bad)
sub
ja
xsaveopt
iret
mov
push
mov
adc
enter
movs
cmp
mov
push
cmps
mov
adc
repnz
lfs
adc
and
(bad)
stc
fcom
or
cwde
daa
jnp
pop
into
ret
mov
push
cwde
xchg
(bad)
jo
cmp
or
mov
lock
dec
jle
inc
std
inc
nop
push
shr
adc
inc
xlat
jbe
scas
sub
not
nop
mov
or
and
jmp
jecxz
sahf
xchg
int3
mov
xchg
call
push
cld
imul
dec
xor
mov
out
push
inc
mov
inc
gs
sbb
add
jmp
rcr
std
push
sub
in
call
jne
jns
fs
xor
xchg
add
aas
into
add
lds
mov
dec
push
not
sbb
adc
push
cmp
pop
cmp
sbb
sub
or
dec
jno
popf
pop
movs
cmps
adc
mov
mov
mov
dec
cmc
mov
dec
mov
in
add
in
rcr
inc
int
aaa
push
std
adc
mov
jp
popf
(bad)
mov
aad
add
push
cmp
outs
imul
add
into
cmp
jns
xor
out
add
cmp
dec
pop
dec
fiadd
fimul
sti
xor
pop
in
add
gs
sbb
add
push
dec
jb
mov
dec
arpl
int
or
test
xchg
clc
inc
lds
jmp
jns
mov
or
loope
shl
lods
or
xor
prefetcht0
mov
jmp
int
out
sub
adc
mov
jmp
ja
fs
adc
pop
les
jns
je
sti
sub
mov
adc
cs
ins
retf
inc
lahf
push
scas
pop
jno
and
mov
and
mov
aas
xor
mov
movs
xchg
add
out
mov
aaa
mov
jle
stos
mov
jg
jge
lods
inc
push
mov
add
pop
outs
inc
sti
popa
lock
push
in
jno
mov
push
adc
pop
pop
xchg
jno
retf
inc
in
je
jo
or
mov
inc
imul
cmp
imul
ret
retf
pusha
add
rsm
fisubr
sbb
fdiv
xor
aas
aas
cmp
mov
jb
jnp
mov
inc
mov
repz
fadd
inc
movs
adc
xchg
and
push
xchg
fld
out
inc
nop
xor
outs
inc
push
inc
pop
les
mov
out
punpckhdq
jle
push
call
or
sbb
int3
and
lds
in
xchg
cmp
out
cmc
cld
icebp
mov
jp
cmp
lea
cmp
cwde
iret
mov
inc
cld
js
jg
test
mov
int
nop
mov
ss
test
call
and
jmp
pop
cmp
movs
(bad)
mov
pop
xchg
mov
pusha
popa
call
stc
xchg
in
enter
pop
cmp
clc
fcmovb
mov
ret
test
push
hlt
es
or
inc
xchg
sbb
sub
shr
pusha
mov
sub
and
mov
cwde
test
and
pop
mov
inc
retf
ret
xchg
clc
push
stos
mov
inc
pusha
fcmovnb
pop
(bad)
in
xchg
(bad)
retf
xor
je
stos
data16
xor
test
in
into
fs
pop
ret
jns
ins
test
ds
cld
cmp
nop
retf
dec
bound
inc
leave
or
cwde
or
in
pop
ds
and
jb
scas
dec
test
xor
inc
jmp
cmp
xor
call
mov
xchg
(bad)
(bad)
rol
pushf
rcr
mov
pop
pop
jmp
addr16
mov
bound
sub
jb
mov
mov
sar
rcl
cmps
jns
jo
dec
adc
and
lahf
or
sub
mov
cmp
sbb
xchg
lds
xor
ret
jecxz
rol
arpl
or
inc
sub
ret
call
int
xchg
jnp
xchg
fadd
add
sub
adc
mov
call
push
push
test
cs
out
imul
jmp
(bad)
rol
add
push
lahf
cmp
mov
fst
ss
xor
or
scas
push
cmp
(bad)
mov
les
add
fs
sahf
mov
(bad)
rol
lods
test
cmp
daa
mov
jge
rcl
enter
mov
into
pop
mov
or
mov
add
jae
cmps
pop
xchg
ret
xor
lahf
(bad)
mov
xchg
dec
adc
jmp
ins
enter
addr16
push
push
lahf
test
loopne
inc
xor
rol
jl
popa
push
push
pop
stos
ret
retf
sub
dec
pop
stos
outs
(bad)
jo
out
push
add
jmp
push
lahf
pop
movs
pop
sub
ins
inc
loope
mov
inc
rcr
and
push
jo
mov
dec
dec
dec
xchg
js
push
mov
push
(bad)
(bad)
(bad)
neg
push
cmp
adc
div
popf
push
int3
(bad)
jle
stc
fcom
int
sbb
test
out
mov
mov
retf
add
add
mov
into
jmp
mov
rol
fnsave
stos
mov
outs
rol
and
cmp
xor
lahf
dec
in
sub
lods
pop
mov
mov
mov
dec
loop
test
adc
leave
add
jl
jle
or
(bad)
xor
imul
push
gs
adc
std
pop
iret
ds
lods
popf
retf
mov
cwde
sar
rol
mov
icebp
fsubr
jno
imul
fcom
sbb
imul
rol
xor
jp
bnd
mov
repnz
(bad)
jmp
mov
pop
push
out
mov
adc
mov
sub
out
pop
inc
mov
dec
cwde
in
ficomp
outs
jo
data16
(bad)
js
sahf
or
cdq
adc
js
iret
add
out
cmp
mov
fldcw
idiv
inc
mov
fbstp
sbb
in
imul
xchg
aas
cmp
jle
pop
push
adc
jno
jbe
enter
(bad)
sub
xor
dec
pop
xor
inc
ss
add
aad
add
lods
jge
inc
pushf
mov
scas
aad
push
loopne
sub
xchg
aas
push
into
lods
dec
mov
adc
fucom
out
(bad)
js
ret
sub
jno
addr16
pop
mov
(bad)
dec
push
mov
or
test
inc
xor
cmp
scas
std
jmp
aaa
mov
jecxz
pusha
jg
add
frstor
aas
or
imul
outs
js
enter
inc
mov
sbb
cmps
imul
jns
xchg
inc
mov
in
ins
lods
xchg
jns
mov
mov
lods
sbb
in
add
inc
leave
mov
fcmovbe
sbb
mov
xchg
mov
pop
inc
ror
mov
push
jno
jg
or
das
hlt
cmc
dec
fild
shr
mov
mov
(bad)
mov
out
xchg
cmp
cmps
mov
clc
push
jle
inc
xor
cmp
mov
push
add
or
(bad)
mov
mov
pusha
leave
rol
inc
inc
mov
and
sbb
pop
xchg
daa
sub
fwait
bound
inc
(bad)
sub
mov
(bad)
jge
and
scas
mov
out
cmp
pop
(bad)
dec
sub
inc
push
popfw
sbb
xchg
ja
loop
retf
dec
fcmovnbe
js
sbb
xchg
mov
pop
sub
inc
das
mov
sbb
cmp
js
cmps
mov
call
and
pop
cld
call
or
sti
push
hlt
sar
mov
push
sti
pushf
cs
sbb
sub
push
fmul
inc
cli
cmp
adc
fwait
dec
iret
mov
sbb
pop
push
aaa
(bad)
mov
cmps
mov
push
in
push
scas
lock
es
retf
mov
mov
sub
not
daa
mov
dec
push
jmp
sub
xchg
jmp
mov
mov
sub
in
inc
icebp
ins
sbb
dec
mov
xor
mov
mov
inc
push
adc
test
push
dec
jbe
sub
adc
ficom
test
pop
push
cmp
aas
sub
and
sbb
pop
aas
loope
jl
cdq
xlat
and
daa
push
or
mov
dec
out
sub
test
out
into
popf
imul
pop
mov
add
fisttp
ror
ins
push
outs
mov
jo
fadd
test
cmp
and
arpl
and
cwde
dec
jge
adc
add
mov
in
jne
in
mov
ss
jo
(bad)
fld
cmp
imul
out
ins
jb
push
sub
(bad)
outs
es
xchg
loop
in
cmps
or
fxch
mov
out
sub
jg
sbb
out
shl
pop
in
jb
sub
inc
push
pusha
inc
jge
or
xor
clc
push
adc
pop
mov
sub
pop
cs
xor
fdivr
jmp
mov
ins
cmps
adc
aad
ds
adc
in
jecxz
sbb
push
mov
fisubr
hlt
leave
mov
sbb
mov
pop
lahf
dec
loopne
dec
shl
call
test
movs
xchg
mov
inc
mov
cmp
jl
call
mov
mov
cli
mul
loope
ror
inc
pop
add
push
mov
xor
adc
mov
mov
or
mov
(bad)
sahf
loop
into
mov
fdivr
and
daa
mov
mov
xor
nop
(bad)
add
cmc
pop
in
mov
xchg
mov
jb
jmp
adc
ss
dec
mov
mov
adc
inc
jo
jg
mov
fidivr
push
cdq
jae
sub
div
or
in
mov
cli
hlt
int
aam
rcl
push
sbb
inc
in
lea
(bad)
xchg
push
push
pushf
mov
push
mov
pop
stos
pop
pop
xchg
cmps
je
inc
fldlg2
pop
sub
and
jbe
dec
imul
std
mov
(bad)
daa
scas
and
test
dec
xor
icebp
loopne
ret
cmps
ret
imul
sahf
xlat
ins
push
mov
push
push
repz
cmp
xchg
int
cmp
gs
daa
and
xchg
mov
pop
inc
and
xchg
mov
cmps
lods
inc
sub
ret
mov
push
fisub
push
and
cmp
jecxz
imul
stos
mov
sub
shl
pop
sub
mov
pop
in
arpl
daa
cwde
lods
shr
and
jo
nop
or
shl
pop
mov
mov
jp
mov
mov
lea
shl
sbb
lea
xchg
hlt
stos
int
in
mov
jno
test
fist
test
push
mov
scas
jbe
dec
or
int3
and
dec
movs
popf
xlat
(bad)
push
(bad)
jmp
xchg
cmp
(bad)
xchg
add
inc
xor
sti
stc
cdq
push
test
mov
aaa
cmp
xor
pop
out
mov
js
mov
pushf
mov
add
xlat
sbb
push
sbb
cmp
and
ror
xchg
lds
adc
mov
dec
mov
(bad)
movs
jecxz
sbb
add
into
in
add
lea
shl
xchg
mov
pop
sub
jmp
ja
hlt
sbb
test
dec
xor
cmps
mov
sbb
fist
mov
push
adc
sbb
gs
add
bnd
test
mov
nop
or
adc
mov
clc
push
icebp
fsub
int
lods
pop
mov
ins
sbb
sbb
das
mov
rcr
aad
leave
sub
les
sub
mov
out
mov
sub
pop
cmc
out
test
movs
sbb
repnz
sar
out
aaa
aas
fild
outs
xor
enter
sbb
sti
shl
xchg
inc
test
mov
stos
or
dec
xchg
dec
dec
imul
enter
push
enter
fistp
fnstsw
mov
mov
pop
jle
mov
and
cs
lods
dec
(bad)
jnp
shl
(bad)
mov
mov
out
sub
jmp
mov
data16
xchg
jmp
jl
pop
xchg
(bad)
xlat
jp
je
mov
lods
jge
mov
mov
xchg
adc
lods
push
push
push
mov
les
in
(bad)
push
fld
aas
jne
ja
xchg
mov
in
jbe
pop
jp
xchg
push
jns
pop
addr16
outs
or
sahf
outs
inc
xchg
jl
imul
adc
cwde
push
mov
ret
out
mov
xchg
lods
rol
sub
xor
add
adc
mov
cld
pushf
mov
arpl
mov
cdq
(bad)
int
cmp
and
cmps
jne
mov
adc
pusha
mov
mov
js
fadd
or
clc
sub
mov
inc
stos
mov
xchg
ins
mov
lds
mov
call
inc
aas
sbb
sbb
(bad)
rcl
sub
jge
jg
jmp
jle
add
daa
ins
bnd
adc
mov
in
xor
scas
(bad)
repz
mul
jmp
mov
and
jg
cli
out
push
adc
cmp
imul
fdiv
xchg
cmp
xchg
rol
jmp
mov
test
push
dec
cmp
movs
mov
scas
shl
test
les
pop
add
or
xor
jbe
jnp
in
cmp
sbb
aas
and
or
aam
es
pop
sbb
fadd
pop
lahf
dec
fdecstp
xchg
jg
popa
inc
dec
das
xchg
mov
or
adc
or
in
xchg
or
fcomi
mov
adc
mov
adc
cmp
dec
mov
mov
cmps
jbe
jle
ficom
xchg
xlat
and
mov
aam
jmp
xchg
fcom
popa
add
pop
test
les
arpl
add
ins
jecxz
dec
arpl
in
out
jp
icebp
push
int3
adc
jbe
push
pusha
add
xchg
(bad)
jbe
mov
dec
fnstsw
idiv
mov
or
in
dec
push
lods
add
lds
or
ins
stos
mov
jmp
sub
cli
dec
jb
push
sbb
(bad)
pop
mov
push
test
rol
out
clc
gs
mov
inc
inc
mov
clc
mov
leave
cmp
push
xor
scas
addr16
pop
dec
pop
fidivr
lock
or
shl
pop
cs
sahf
bound
dec
in
xchg
std
pop
movs
sbb
mov
(bad)
imul
cdq
dec
shr
cmps
cmp
rcr
ins
or
mov
scas
mov
shl
cmp
add
mov
es
sbb
pop
ret
push
(bad)
lea
lods
sub
xor
jb
jbe
push
movs
push
test
mov
test
int3
shl
lds
sub
mov
adc
push
out
sti
test
sbb
cs
mov
loope
stc
bswap
imul
or
mov
inc
xor
mov
loope
inc
push
and
mov
jb
test
imul
int
jo
addr16
repnz
cli
mov
popa
lods
pushf
dec
xor
es
mov
mov
cmp
test
cwde
adc
pop
sbb
jp
in
imul
shl
cmp
test
daa
ss
push
fist
int
repz
pop
jns
pop
enter
stos
jge
add
xchg
cmp
ret
pop
inc
push
bound
dec
je
mov
aad
jmp
iret
sub
out
(bad)
mov
nop
stos
adc
out
cmp
xchg
sbb
pop
fcom
mov
push
je
sub
sar
es
inc
adc
mov
jmp
dec
mov
jbe
cmp
movs
cmps
lock
aad
jmp
xchg
imul
ins
(bad)
ffree
mov
into
cmp
mov
xor
test
outs
in
mov
mov
push
pop
mov
and
sbb
pop
dec
jae
sub
in
dec
mov
mov
pop
xchg
dec
mov
mov
add
jl
mov
mov
mov
pop
ret
es
retf
mov
cdq
sbb
jne
jmp
mov
imul
jp
mov
mov
xchg
in
add
inc
mov
das
mov
fisttp
xor
cmps
jb
js
mov
sub
sub
mov
aam
in
std
fist
or
repnz
mov
pop
fmul
jmp
movs
dec
jbe
mov
js
mov
ja
hlt
push
sbb
mov
pop
pop
jmp
(bad)
mov
cli
inc
jle
push
mov
sbb
fadd
mov
jae
adc
test
mov
scas
aam
shl
hlt
outs
int3
lock
inc
add
mov
adc
pop
jbe
pop
leave
xor
adc
sbb
mov
sbb
fimul
std
mov
and
inc
mov
mov
dec
sahf
jl
imul
cmp
adc
adc
leave
xor
out
cmps
sub
iret
test
jmp
sbb
icebp
shl
dec
push
sub
fstp
fnstenv
xchg
mov
fiadd
(bad)
pop
xchg
ja
add
push
data16
out
jecxz
pop
rol
fnstcw
repz
test
xor
sbb
popf
sar
mov
retf
call
bnd
outs
mov
xchg
jg
jecxz
jecxz
bound
outs
mov
idiv
js
pushf
aaa
jbe
int
sub
je
add
fs
aas
call
mov
loop
or
jns
mov
pusha
pop
or
inc
jmp
xor
push
pop
mov
rcl
sub
push
(bad)
int
outs
sar
sub
repz
and
ret
and
fist
repz
outs
sti
test
jg
sub
cmp
aad
fisub
mov
mov
mov
pop
push
bound
rcl
in
mov
jecxz
xor
mov
add
dec
pop
fidivr
lds
rcr
mov
jmp
fnsave
cmp
mov
lods
xchg
adc
pop
inc
push
(bad)
repz
xchg
add
repnz
test
das
mov
push
es
icebp
sub
cmc
jns
xchg
retf
lods
ror
ror
pusha
or
pop
dec
dec
inc
mov
lock
(bad)
push
aad
xor
jecxz
stos
lds
pop
in
dec
stos
loopne
pop
xchg
test
or
fisttp
test
adc
leave
mov
fistp
push
jo
jb
cmps
add
cli
or
out
sbb
sbb
sar
push
sub
je
ins
stos
mov
xchg
into
das
inc
fcom
gs
bound
xor
clc
enter
and
sub
adc
fbld
cli
push
xchg
or
fist
and
(bad)
jmp
in
jle
data16
and
sbb
mov
mov
xchg
mov
cdq
mov
in
sub
repnz
outs
(bad)
mov
adc
jecxz
and
xchg
xor
scas
mov
or
and
sti
ss
fdivrp
inc
mov
mov
(bad)
lods
scas
hlt
dec
aaa
fistp
push
mov
jmp
cli
mov
mov
(bad)
loop
cmp
dec
xor
cmps
jp
sbb
jp
stos
jl
imul
fidivr
push
pop
mov
(bad)
jp
cs
push
add
and
xchg
into
jbe
loopne
push
mov
lock
mov
sbb
or
jbe
call
pop
jmp
pop
leave
mov
in
xchg
and
mov
inc
mov
or
imul
bound
or
arpl
stc
retf
mov
mov
imul
xchg
dec
fimul
push
cmp
stos
scas
or
jle
stc
inc
sbb
int
sub
in
or
push
pop
dec
push
call
xor
aaa
dec
int
fnsave
mov
scas
sahf
cwde
mov
inc
mov
addr16
lock
and
mov
push
enter
movs
jp
movs
cmp
out
shr
xor
push
inc
inc
push
loop
or
mov
test
add
xchg
sbb
arpl
jecxz
mul
push
xor
xor
xchg
inc
inc
jl
mov
and
xor
cmps
xchg
fld
jbe
adc
add
daa
jecxz
add
inc
mov
imul
lahf
sub
pop
push
mov
sti
imul
and
loopne
or
pop
pop
sub
mov
mov
aad
and
xchg
fimul
or
push
mov
jmp
lods
imul
push
cmp
push
push
lods
loope
xchg
loope
(bad)
(bad)
test
retf
arpl
xchg
inc
sub
pop
xchg
or
fist
inc
stos
sbb
adc
lock
int
push
mov
ja
mov
stos
add
iret
xor
(bad)
out
cmp
outs
(bad)
jo
jecxz
lahf
rcl
out
inc
jge
ret
nop
in
mov
loop
mov
dec
push
imul
ins
hlt
addr16
test
adc
sbb
add
test
adc
jnp
jmp
inc
std
aam
or
mov
sbb
xor
lds
imul
cmp
sbb
dec
push
call
arpl
out
and
and
and
dec
pushf
jecxz
pop
inc
scas
mov
xchg
shr
fmul
add
shl
dec
mov
push
dec
mov
fisub
fadd
xchg
mov
not
ficomp
iret
sub
adc
(bad)
xor
aam
push
fnstenv
cmp
add
add
dec
iret
mov
stos
call
jne
mov
loop
jp
fcmovnu
dec
hlt
mov
shr
mov
repnz
inc
inc
xor
sahf
scas
or
stos
repnz
xchg
inc
dec
sub
sub
(bad)
mov
sbb
iret
(bad)
mov
aaa
sbb
jb
or
sbb
mov
push
mov
loopne
inc
iret
enter
jb
cdq
retf
or
je
xor
or
inc
iret
in
or
into
(bad)
std
jbe
mov
mov
inc
sahf
daa
ja
push
jne
pop
xchg
test
add
jno
pusha
ss
sbb
jmp
mov
push
or
jge
movs
jnp
enter
sbb
repnz
shl
test
cli
cmp
inc
mov
arpl
sub
ficomp
mov
ss
fdivr
scas
mov
jne
mov
mov
xchg
mov
fcos
push
sahf
arpl
retf
mov
mov
adc
push
pop
pop
das
jns
jle
inc
push
outs
pop
int3
pusha
mov
and
imul
addr16
push
(bad)
and
pusha
add
pop
in
inc
in
adc
xchg
mov
aas
sbb
nop
cmp
add
test
dec
inc
xchg
dec
bound
jbe
in
inc
hlt
fnstenv
jo
pop
xchg
int
dec
lods
daa
cmps
sbb
aaa
sub
or
push
pop
shl
pop
fdivr
jmp
push
js
pop
popa
lods
ficom
cmps
lods
inc
add
jge
fst
mov
(bad)
xchg
les
adc
repnz
xchg
call
mov
sbb
scas
and
dec
add
sbb
icebp
test
lea
sub
inc
mov
iret
or
(bad)
rcr
push
fidivr
dec
shl
mov
movs
dec
mov
rol
std
mov
mul
sbb
pop
cmps
rcr
cmp
dec
test
and
movs
imul
stos
ds
aam
in
mov
enter
setl
(bad)
adc
pop
mov
adc
xlat
xor
push
ins
pop
xor
jae
add
fild
push
ret
cli
sbb
adc
call
fcom
sti
pop
and
jmp
jp
(bad)
jbe
cmc
cmp
mov
mov
retf
mov
jo
imul
out
mov
out
cwde
adc
fist
push
xchg
lds
mov
jno
jmp
cmp
ror
pushf
sub
aad
mov
pop
push
or
sub
sub
xchg
add
mov
mov
cmp
mov
rol
push
bound
mov
out
aam
int3
dec
mov
pop
mov
cmp
sbb
test
jge
sub
hlt
mov
mov
xchg
push
inc
aam
(bad)
popf
out
mov
sahf
jns
mov
jmp
aaa
mov
mov
or
imul
xchg
mov
mov
mov
sbb
sub
cmc
bound
adc
dec
cmc
pop
jne
and
(bad)
mov
into
mov
xchg
and
mov
inc
das
stc
clc
dec
adc
daa
je
jbe
push
pop
dec
mov
(bad)
mov
data16
lahf
lds
mov
lods
call
pop
push
and
aaa
pop
or
xchg
cmp
xor
(bad)
in
jmp
(bad)
ret
xchg
jle
popa
or
xor
mov
push
sub
popf
mov
pop
aad
mov
add
pop
jl
add
push
call
cs
sbb
mov
loop
xchg
adc
jbe
sub
in
(bad)
cmps
data16
add
pop
sahf
dec
retf
sub
mov
mov
adc
add
add
nop
jmp
pop
fs
iret
fistp
cmp
lock
mov
in
xor
lods
dec
pop
out
aad
or
ret
push
sub
inc
adc
ins
adc
add
fcmovbe
out
adc
inc
xor
inc
dec
jb
lahf
sub
cmp
sub
mov
inc
icebp
shr
call
retf
jne
sub
test
ret
in
fst
pop
xchg
mov
ds
jns
sbb
cmp
lods
mov
dec
and
adc
sbb
jne
dec
leave
cmp
in
sbb
cmp
inc
les
inc
popa
es
xchg
cmp
xchg
xchg
lds
stc
mov
sbb
xor
int
fwait
add
mov
aas
test
scas
or
rol
into
nop
mov
push
jnp
or
test
js
jmp
adc
scas
add
ret
mov
out
mov
bound
pop
cmp
dec
and
test
or
jl
add
cmps
fimul
push
xchg
pop
adc
imul
stos
xor
gs
pop
and
stc
add
mov
popf
imul
cli
xchg
add
inc
stc
sub
add
jge
outs
aas
push
inc
jmp
in
xor
rcl
xchg
mov
pop
inc
and
movs
push
in
xor
sar
cmp
mov
or
sti
nop
lods
mov
test
jbe
push
xor
lds
push
leave
xor
outs
aas
jg
sbb
lahf
lods
add
sub
test
cmp
fisubr
test
adc
ins
cmp
mov
mov
sub
sbb
pop
adc
test
mov
xor
movs
add
lahf
sbb
sub
iret
sub
mov
sbb
rol
pop
das
adc
inc
test
sub
stos
push
xor
cmps
pop
movs
push
fist
ret
iret
or
rcl
inc
jmp
or
loopne
fistp
inc
cmp
mov
mov
jb
sbb
(bad)
into
dec
daa
or
cmc
(bad)
arpl
leave
jecxz
push
pop
dec
mov
pop
loopne
out
mov
add
jecxz
mov
push
dec
sub
pop
movs
sbb
mov
mov
test
lea
dec
jno
jp
adc
clc
dec
jno
and
test
inc
and
pop
jg
int
fucomip
mov
fadd
arpl
cdq
div
cmp
lods
inc
les
fucomp
ror
xor
out
cmc
inc
lock
sar
shl
push
iret
int
push
je
xchg
xor
iret
and
adc
jge
clc
(bad)
mov
adc
sar
mov
lds
mov
adc
and
outs
mov
fst
in
mov
test
jb
jmp
push
test
mov
inc
xchg
jge
popa
xor
inc
pop
pushf
fdivr
jmp
cmps
adc
cmp
jno
mov
mov
movs
adc
xor
(bad)
sub
leave
retf
rcl
dec
lahf
loopne
in
in
lock
push
pop
aas
and
cmps
retf
jge
dec
das
sub
ror
mov
hlt
cmc
cli
jmp
popa
dec
repz
push
inc
add
gs
call
loope
cwde
cmp
jp
movs
sahf
sbb
iret
mov
or
test
js
mov
mov
cmps
xchg
inc
jecxz
rcr
arpl
push
mov
rcl
and
jmp
out
fadd
sbb
sbb
and
push
movs
mov
inc
icebp
dec
jne
inc
std
jg
scas
sub
(bad)
into
or
mov
jns
sar
lods
cwde
rcl
push
sub
movs
inc
adc
push
xchg
inc
pop
lea
or
pop
hlt
cli
mov
push
aad
dec
jb
dec
sti
xchg
inc
ds
mov
xor
test
jb
movs
and
jbe
repnz
(bad)
sti
into
jno
ret
mov
inc
ds
shl
cmp
xchg
fld
sub
add
mov
xor
out
fcomp
push
inc
icebp
packuswb
scas
test
js
sub
or
into
sub
es
sub
adc
jmp
lds
popf
inc
mov
add
jo
cmps
mov
into
popa
loope
push
mov
add
fisub
sbb
addr16
inc
xchg
push
loop
jae
aaa
in
mov
pop
mov
(bad)
fiadd
and
xor
push
push
repz
sub
int
jl
jnp
pop
fnstsw
pop
scas
aas
(bad)
pop
push
neg
pop
fiadd
shr
sar
xchg
iret
cmp
xlat
enter
mov
add
dec
and
xchg
dec
add
outs
xor
cmp
jp
cmp
sahf
add
sub
sbb
jg
rcl
inc
retf
call
fisub
lock
add
stos
fisttp
rcl
mov
mov
mov
add
sbb
scas
push
mov
aaa
and
mov
mov
enter
xchg
clc
mov
(bad)
pop
retf
fsubp
pushf
icebp
dec
ss
jo
sub
pop
jnp
sub
mov
push
mov
std
loop
cmp
(bad)
xor
mov
xchg
pop
pushf
loopne
sbb
xchg
ret
mov
inc
mov
outs
and
jmp
scas
popa
retf
mov
test
(bad)
addr16
or
pop
cmp
sbb
ret
mov
dec
mov
inc
fbstp
punpcklwd
retf
add
inc
ret
push
adc
nop
rcl
mov
out
das
xor
ja
add
pop
and
sub
jo
add
mov
xor
movs
lahf
xlat
pop
jp
loope
outs
cmp
cld
into
retf
out
retf
scas
pop
sub
sahf
jnp
add
mov
xchg
adc
push
xchg
add
retf
fldcw
shl
es
mov
ss
inc
ret
push
dec
call
push
jnp
fist
push
sub
hlt
adc
inc
jecxz
mov
outs
ds
in
push
add
aaa
xchg
pop
je
leave
ds
jae
pop
cmp
xchg
add
ret
hlt
ins
out
push
cmp
add
xchg
jo
mov
dec
push
retf
mov
nop
push
jnp
addr16
repnz
stos
and
pop
dec
test
mov
cwde
std
neg
mov
mov
(bad)
rol
std
(bad)
out
pop
sub
data16
or
dec
dec
iret
inc
je
push
aam
mov
lock
das
ja
adc
nop
mov
push
sti
cdq
ja
and
fsub
pushf
cmp
push
stc
cmp
ins
out
jmp
sub
sti
mov
sbb
jno
je
rcl
xor
daa
mov
jb
(bad)
aaa
ror
mov
fistp
push
or
jmp
stc
mov
pop
xchg
and
or
push
imul
sahf
pop
mov
add
gs
and
jecxz
pop
xor
mov
dec
data16
out
jb
push
add
or
inc
add
mov
bound
or
xchg
test
cli
(bad)
in
push
aaa
addr16
stos
out
ins
adc
or
jno
es
jle
(bad)
pushf
je
and
sbb
xor
xchg
aam
pop
and
push
xor
xchg
add
mov
jb
shl
xor
and
jnp
inc
add
mov
retf
call
mov
fsub
test
inc
enter
jg
out
ins
ss
adc
or
jns
cs
repnz
lods
pop
scas
in
and
aam
inc
cmp
je
imul
jg
add
push
loopne
inc
call
xor
jle
cmp
out
add
xchg
cdq
pushf
mov
inc
es
fimul
loopne
jmp
mov
ror
push
test
add
adc
sub
push
movs
aaa
mov
xor
movs
mov
leave
pusha
dec
rcl
push
ret
jecxz
inc
cmp
arpl
jns
sub
aad
mov
inc
sbb
jg
mov
mov
dec
dec
lds
repz
fdiv
retf
rcr
mov
pop
mov
xchg
out
outs
inc
push
stc
or
mov
data16
and
and
pushf
inc
stc
int3
mov
jnp
xchg
jecxz
add
sub
je
pop
mov
cmp
cs
xchg
test
in
push
mov
and
lods
xor
mov
cmp
add
test
ror
sub
xchg
arpl
jne
ins
jge
cmp
sahf
inc
and
ficomp
mov
sub
aam
xchg
push
ja
outs
std
cmp
hlt
dec
call
scas
pop
std
pop
jb
jp
out
bound
mov
pop
mov
movs
and
mov
or
test
ins
inc
jno
cmp
in
shufps
ins
into
push
fnstenv
nop
pop
lods
add
cmps
and
loope
cwde
mov
pop
faddp
mov
inc
into
cli
bswap
das
js
mov
jne
ret
ss
xchg
leave
icebp
cmp
stos
or
cld
mov
mov
and
sub
jae
jns
enter
test
pusha
push
ja
aad
(bad)
icebp
lods
jecxz
ja
fwait
lock
hlt
test
push
inc
call
cdq
or
cwde
int
cmp
cmp
xor
stos
ds
dec
or
repnz
jle
jge
inc
mov
out
jmp
arpl
cmps
xchg
inc
sbb
mov
outs
arpl
or
xchg
push
jnp
cmc
xchg
shl
xchg
dec
mov
es
mov
add
mov
sbb
in
or
pop
mov
imul
add
cdq
cli
cmp
nop
sub
je
pop
lahf
cmp
pusha
dec
pop
das
adc
leave
xchg
cmp
loop
cmp
xor
mov
inc
cmp
push
jg
sbb
mov
imul
push
adc
inc
xchg
mov
xchg
inc
jnp
push
imul
adc
dec
daa
inc
cmps
mov
retf
adc
icebp
mov
jg
dec
cmp
sub
outs
cld
fistp
cmps
or
js
inc
xor
push
inc
popa
mov
add
(bad)
loope
push
mov
inc
push
movs
xchg
stos
adc
bnd
(bad)
aaa
jg
fistp
pop
aam
jo
frndint
and
and
rcr
or
push
cdq
clc
sbb
hlt
xor
cmc
jmp
mov
jp
xchg
jo
mov
mov
mov
mov
sbb
dec
icebp
scas
inc
(bad)
cmp
pop
dec
movs
dec
call
jle
sbb
adc
dec
stos
fmul
inc
sahf
cld
inc
cmps
xor
or
clc
mov
psubsw
loopne
enter
and
dec
cmp
call
(bad)
mov
(bad)
fcomp
sbb
loope
xchg
fisttp
push
or
outs
imul
movs
pusha
daa
sahf
jno
or
repz
fsub
sbb
inc
xchg
rol
sub
pop
xlat
and
in
hlt
out
pmovmskb
push
(bad)
cli
call
push
dec
pop
mov
xor
(bad)
cmp
fs
psubusw
dec
(bad)
jae
call
xchg
inc
dec
jae
xor
mov
cli
fisubr
and
imul
or
imul
push
daa
call
and
les
jl
mov
lds
fs
xor
sbb
mov
adc
sbb
in
fistp
cli
lea
es
out
sub
(bad)
xchg
ficom
fstp
xor
dec
out
jns
sbb
(bad)
clc
popa
inc
dec
sbb
push
out
(bad)
mov
(bad)
sti
mov
jge
add
xchg
sar
and
jno
dec
test
cmp
mov
ds
int3
add
jbe
retf
scas
stos
xchg
int3
pop
dec
(bad)
mov
cmp
mov
jb
in
cli
sahf
sub
aad
xor
inc
sbb
or
push
fbstp
xor
ret
sbb
aaa
dec
addr16
lahf
xchg
mov
loop
inc
hlt
repnz
cmp
add
mov
stc
cli
cmp
cld
inc
sti
lea
ins
jmp
mov
enter
fidiv
loop
push
jmp
jns
xor
and
scas
inc
dec
(bad)
imul
and
or
add
dec
pop
cs
nop
enter
mov
add
push
cmp
sbb
(bad)
repnz
jnp
ss
int3
xor
xor
fist
(bad)
cdq
sbb
and
xlat
push
mov
int
xchg
pop
(bad)
xlat
sub
mov
lea
jns
ror
jae
pop
iret
fcomp
adc
mov
fwait
cmc
sub
mov
and
test
mov
adc
xor
add
fist
sbb
push
sub
or
cs
outs
and
outs
cmc
mov
aad
out
xlat
cli
mov
cmp
sahf
xor
inc
jb
xchg
inc
push
sbb
cmp
stos
daa
xchg
ins
pop
adc
mov
pop
scas
mov
popf
scas
pushf
retf
mov
js
push
cmp
cwde
xor
js
fidivr
std
mov
sbb
or
sbb
pop
aaa
push
into
arpl
mov
inc
(bad)
out
jae
dec
bound
push
dec
or
inc
nop
sub
adc
mov
push
xchg
pusha
sub
cmp
pop
dec
jnp
das
and
sub
mov
iret
inc
inc
xor
jns
aam
mov
ins
aas
daa
xchg
sbb
fmulp
jb
outs
lock
sub
inc
dec
jae
inc
or
imul
aaa
cmp
add
repnz
jp
rcr
retf
clc
mov
mov
ror
test
sub
shr
add
sahf
add
stos
sub
jecxz
dec
lds
clc
jne
loope
movs
inc
mov
aaa
retf
jns
pop
xchg
sar
dec
adc
and
cld
repnz
xor
jbe
cmp
movs
fwait
cmp
loope
sub
pop
sbb
call
cld
adc
cmp
lahf
daa
xor
mov
dec
push
rcr
or
and
mov
and
mov
hlt
imul
sbb
adc
xor
push
mov
adc
enter
es
ins
add
test
mov
mov
repz
push
jmp
add
sar
add
cmps
xchg
lds
pop
mov
add
call
mov
jo
dec
pusha
jge
dec
and
pop
add
jno
jne
sub
mov
inc
pop
or
pop
jmp
sbb
mov
adc
shl
loope
adc
jmp
test
dec
dec
dec
fbstp
popa
jmp
jle
push
cld
push
nop
test
inc
push
cwde
sbb
mov
push
sub
push
lods
lahf
adc
pushf
jns
mov
mov
shr
jne
lahf
or
sub
pop
aam
stc
or
xchg
cmp
cwde
inc
ret
push
push
xchg
sti
pop
inc
pop
cmps
or
pop
and
xchg
pop
jb
dec
pop
cs
in
ins
std
jl
mov
mov
jae
aad
loop
sbb
add
pop
push
cmp
or
pop
jo
xor
popa
fmul
jns
mov
ror
outs
leave
cmps
jecxz
push
data16
inc
fistp
cmp
jecxz
pop
fcmovnb
sub
mov
mov
inc
adc
pop
inc
push
or
jecxz
(bad)
repz
fcomp
les
xchg
mov
ret
js
jno
and
stc
add
loope
(bad)
push
leave
in
xor
jae
leave
cmp
and
ret
sub
in
inc
sbb
js
jg
dec
sub
jge
add
and
xor
adc
inc
or
jp
pop
xor
jne
mov
jecxz
cmp
jnp
cmps
cmps
sub
adc
push
and
pop
push
rol
icebp
je
pop
jge
mov
inc
sub
pushf
js
iret
gs
push
sbb
jecxz
sti
fist
out
in
xchg
jl
sub
lods
ja
mov
ins
mov
pop
cli
dec
dec
sar
pusha
lods
adc
pop
pop
mov
pop
xor
popa
or
adc
push
adc
inc
lahf
loope
xor
mov
leave
push
ror
mov
nop
cmp
pop
cmovs
mov
cld
sahf
(bad)
adc
cmp
sbb
adc
sti
adc
dec
lods
adc
xor
cs
scas
jnp
cmp
or
xchg
pop
or
aaa
mov
sti
sbb
xchg
inc
scas
aam
xor
ret
dec
mov
mov
(bad)
in
jp
pop
aad
shl
(bad)
fwait
pusha
fs
call
push
or
test
movs
ds
sub
xor
pop
xor
sti
add
sbb
jbe
ins
or
scas
jle
(bad)
xchg
repz
pmullw
and
cmp
xchg
xchg
sbb
outs
jecxz
test
retf
adc
sub
das
lds
dec
xor
inc
mov
add
retf
and
dec
xchg
xlat
push
or
ret
push
add
mov
jp
in
fnstsw
out
mov
cmp
dec
mov
sub
mov
ins
cmp
scas
in
(bad)
fisub
jp
and
mov
or
cli
mov
fdiv
lea
push
jg
imul
cmps
movs
out
sub
fist
mov
mov
add
pusha
mov
sbb
mov
cmps
jbe
sbb
mov
pop
push
inc
sbb
call
sbb
int3
mov
push
icebp
pusha
lahf
or
(bad)
mov
mov
push
sub
lahf
cmps
imul
div
adc
mov
lock
xchg
cs
mov
loopne
and
pop
mov
mov
xor
je
lods
adc
repnz
out
adc
enter
out
(bad)
bound
ins
adc
bound
mov
lds
sbb
lds
sbb
lock
cmps
mov
inc
xchg
loop
sub
pusha
mov
sub
enter
inc
js
dec
ja
sar
(bad)
leave
addr16
dec
or
sar
sub
xchg
inc
bound
sbb
inc
sbb
mov
jmp
jecxz
mov
ret
xor
out
cmps
xchg
xor
push
mov
addr16
aad
test
call
int3
dec
out
adc
add
push
sub
ss
and
pop
sbb
xor
mov
xor
shl
lock
mov
imul
dec
fisttp
shr
test
sub
sbb
call
int3
or
push
mov
pushf
imul
fdivr
stos
sbb
xor
clc
push
sahf
and
cld
aas
cmps
(bad)
adc
or
iret
rol
xor
xchg
xchg
mov
add
enter
mov
xchg
mov
data16
xchg
xchg
std
jbe
mov
pushf
cmps
jecxz
fisub
mov
pop
mov
outs
shl
call
out
fs
pop
add
pop
pop
cwde
pop
ja
mov
dec
xor
pop
dec
cdq
inc
dec
xchg
call
cmp
scas
add
and
mov
xchg
cwde
inc
sbb
hlt
cwde
xor
push
sbb
push
pop
or
out
test
adc
add
je
pushf
cld
and
fsubr
mul
cdq
xchg
jnp
imul
push
pusha
add
cs
mov
cli
adc
scas
xor
sbb
int
mov
mov
push
aad
mov
bound
sbb
retf
outs
xor
pop
xchg
mov
loopne
adc
fild
lea
pop
mul
sbb
pop
add
xor
ja
add
cwde
in
dec
adc
lds
je
cmp
mov
cmc
and
dec
aad
jmp
adc
xor
jae
xor
push
adc
mov
mov
push
jae
popf
fild
fwait
daa
ins
sub
mov
in
push
xrelease
or
xchg
and
cli
adc
jl
or
test
jbe
iret
(bad)
in
dec
and
addr16
xchg
inc
push
mov
aaa
repz
bound
fdivp
mov
bound
mov
dec
add
and
(bad)
mov
and
outs
or
clc
lods
dec
dec
outs
mov
jbe
xchg
pushf
in
ds
out
mov
lods
(bad)
xchg
mov
fsub
push
sbb
add
loope
push
mov
nop
cdq
and
into
push
inc
mov
ins
test
shl
jmp
(bad)
test
mov
pop
xchg
and
imul
lods
jl
jns
mov
fdivr
sbb
ja
pop
int3
(bad)
movs
(bad)
cli
aam
fbstp
sbb
and
dec
xchg
lock
sbb
shr
xor
pop
mov
mov
test
inc
push
out
cmp
inc
jl
dec
repnz
inc
rol
jge
test
pop
repnz
jle
movs
jne
std
mov
out
int3
int
mul
mov
mov
xor
mov
or
or
pop
or
adc
jno
jno
test
aam
fistp
xor
mov
rol
mov
sub
mov
xchg
mov
rcl
fsubr
add
fcmovnb
cwde
mov
mov
xchg
mov
push
cmp
data16
(bad)
fistp
push
push
mov
or
push
bsr
jmp
ss
adc
sbb
push
jmp
add
and
xchg
retf
sar
aaa
mov
xchg
xor
mov
push
in
xchg
mov
xchg
xor
(bad)
sub
lods
pushf
lahf
rol
popf
gs
les
data16
mov
mov
imul
pop
sbb
ss
jge
mov
jecxz
cmp
add
aas
dec
fwait
fs
mov
daa
xor
sub
or
xor
mov
cmp
pop
cmps
test
popa
or
cmp
retf
(bad)
nop
loop
sub
call
cmp
sbb
mov
jp
or
dec
add
sub
mov
mov
in
fidivr
xchg
inc
push
ins
cs
pusha
mov
mov
mov
popa
cmp
push
cmp
pop
fcomp
xor
sbb
sbb
sbb
aad
shl
jne
lods
push
cmps
aaa
adc
leave
test
shr
loop
enter
mov
mov
and
retf
jbe
dec
fisub
lock
jge
push
jmp
das
test
inc
sar
push
dec
add
add
jnp
lock
sbb
add
bound
repnz
pop
jg
mov
ins
mov
call
pushf
mov
hlt
push
add
mov
test
jb
ss
sub
lahf
ret
jb
xchg
sub
cmps
aad
es
shl
xchg
ins
cmp
cmpeqps
mov
inc
scas
mov
in
ss
cdq
imul
mov
icebp
in
test
or
xchg
sbb
adc
addr16
adc
jl
mov
and
pop
adc
ss
sub
pop
stos
cmp
mov
enter
add
enter
lea
lods
ffreep
push
jmp
push
in
ja
jmp
pop
(bad)
mov
stos
xchg
out
cmp
loope
lods
icebp
add
xchg
and
jmp
shl
pop
jmp
cmp
inc
popf
aaa
imul
sbb
cvtdq2ps
lods
out
loope
add
scas
les
lods
add
pop
lods
out
pop
rol
aam
loopne
sbb
cmp
pusha
out
loop
das
or
xchg
ds
xor
aad
mov
(bad)
sbb
je
cli
dec
arpl
sub
add
inc
xor
push
gs
cmp
jg
daa
mov
mov
cmp
push
inc
rcr
test
and
xchg
mov
or
jle
mov
pop
jg
lock
stos
call
add
lods
or
pusha
inc
push
hlt
les
inc
ins
call
xor
aam
cli
cwde
fst
dec
sbb
push
mov
push
dec
cli
mov
inc
cmc
push
pop
aad
xor
cmp
mov
stc
cmc
adc
push
cmps
add
push
in
mov
in
push
daa
or
cmps
pop
pop
shl
add
test
jl
js
cmp
retf
mov
push
retf
and
imul
jle
sub
and
push
loopne
push
in
icebp
push
inc
pop
nop
mov
jns
jb
loopne
out
cmp
pusha
add
popf
and
aas
bound
in
fiadd
cmc
mov
sbb
and
loope
rcr
jno
int
into
lock
and
inc
mov
call
fsubrp
mov
pusha
lds
(bad)
cs
outs
push
call
add
push
dec
cmp
mov
adc
mov
lds
(bad)
cmp
std
ins
cld
mov
aas
xchg
mov
adc
aas
(bad)
enter
idiv
sub
test
test
or
mov
dec
adc
sub
lahf
and
fisttp
mov
call
ins
clc
xor
cmp
sbb
lock
fidiv
xchg
xlat
pop
aam
call
dec
pop
cmp
test
div
or
das
or
in
rcr
in
(bad)
popf
and
sbb
mov
dec
xchg
xchg
dec
pop
out
inc
pop
nop
ret
call
mov
rol
mov
mov
adc
cli
jmp
inc
scas
xchg
jne
jmp
inc
inc
xor
mov
push
jle
mov
aaa
inc
jg
and
jg
loop
pop
(bad)
cmp
jo
mov
mov
inc
pop
mov
(bad)
loopne
xor
push
(bad)
xor
and
je
or
mov
in
iret
sub
add
jns
push
pop
sub
cld
ins
and
lods
adc
std
sub
push
xlat
and
or
cmc
or
pusha
lahf
cmc
mov
lock
imul
pop
jnp
popf
gs
adc
test
rcl
jmp
call
dec
fsub
jae
jge
jecxz
jmp
aam
or
sub
cmp
rcl
ss
test
dec
lahf
out
loopne
jl
fnstcw
ret
js
inc
push
adc
and
sbb
mov
adc
fwait
adc
test
ret
inc
call
popf
jg
outs
push
repnz
add
cmps
fcomp
mov
bound
lods
xor
mov
adc
outs
ret
sbb
adc
rcl
sar
jno
fwait
loop
out
ror
lods
push
popa
and
je
sub
std
int
fdiv
pushf
dec
leave
cmp
add
shl
inc
or
icebp
jae
(bad)
cmp
inc
push
xchg
sub
lods
outs
push
xor
movs
lods
sbb
scas
jmp
adc
add
push
xchg
(bad)
xor
inc
mov
pushf
mov
fidiv
jbe
mov
es
loop
mov
bound
and
mov
scas
stc
adc
xchg
fisttp
jp
push
sub
aaa
push
cdq
idiv
push
daa
shr
dec
mov
mov
cmp
push
packssdw
or
sbb
push
inc
xor
dec
fwait
or
mov
cmp
neg
dec
ins
nop
imul
cmp
mov
(bad)
cdq
sbb
(bad)
mov
cmp
cmp
dec
adc
iret
sti
mov
dec
shl
cmps
neg
cmp
dec
mov
out
mov
out
popa
sub
test
les
mov
mov
dec
mov
or
and
mov
pop
mov
ins
inc
push
and
push
cs
push
sbb
call
cmp
xor
sbb
(bad)
mov
pushf
and
fsubr
out
dec
or
jle
mov
inc
mov
clc
mov
xor
call
jmp
sti
(bad)
fwait
or
addr16
in
adc
ds
push
(bad)
fisubr
cmp
sbb
fidivr
and
add
sbb
xchg
addr16
ins
in
pop
es
out
or
(bad)
mov
and
push
mov
push
push
popa
sbb
test
mov
outs
repnz
push
pop
(bad)
test
das
pop
mov
int3
inc
lds
jno
popa
mov
ret
into
stc
jmp
icebp
lods
push
jle
(bad)
jmp
dec
push
fidivr
push
mov
lods
std
jb
fldenv
jbe
inc
aad
cwde
lds
lock
imul
mov
add
(bad)
or
mov
jg
aaa
sub
ins
outs
pushf
outs
addr16
dec
sub
sub
sub
or
dec
cmp
push
jp
push
adc
call
mov
pop
push
es
xchg
loope
fmul
fst
stc
cmp
arpl
cli
ins
outs
pop
sub
in
ds
mov
jb
jne
dec
sub
adc
pop
inc
and
stos
ret
daa
xor
div
xor
cmc
stc
cli
retf
stos
pop
mov
xchg
push
in
jmp
push
repnz
adc
(bad)
leave
or
movs
pop
mov
add
gs
sar
outs
dec
pop
nop
adc
xchg
retf
xor
mov
std
imul
or
cmp
jb
je
(bad)
or
ds
cli
add
push
arpl
cmp
dec
or
cs
sti
jmp
dec
mov
dec
fdiv
ror
adc
jo
pop
and
fstp
fs
sub
popa
clc
stc
sub
gs
mov
or
test
sbb
jmp
(bad)
mov
xor
int
mov
add
pop
jmp
mov
sub
sar
cmp
sahf
cmps
inc
js
popa
jp
cld
push
add
mov
and
loop
jge
pop
and
ss
jl
scas
in
xchg
hlt
test
out
cdq
lods
mov
loope
fs
adc
sti
repz
add
out
pop
ret
rcl
aaa
inc
cmc
mov
push
cld
int3
rcr
pop
out
cli
fcomip
lds
je
cmp
out
shl
call
xor
push
pop
mov
shl
or
jb
rcl
xchg
in
stc
mov
cmp
sbb
rcl
std
sti
push
push
hlt
test
imul
jp
retf
stc
sar
push
mov
jg
mov
xor
xchg
sbb
cli
mov
lods
fxch
mov
pop
dec
push
add
(bad)
add
xor
pop
dec
xchg
popf
push
add
mov
adc
fld
out
test
mov
out
in
jecxz
jae
cwde
or
xchg
jmp
pushf
stos
aas
shr
push
cmps
xchg
div
xchg
sar
outs
sar
sar
ror
push
mov
mov
hlt
mov
hlt
cmp
add
mov
arpl
push
jp
lahf
dec
inc
sub
jp
int
push
and
dec
retf
jae
test
aaa
dec
popa
xchg
mov
mov
push
mov
jne
add
cmp
scas
jg
rol
mov
icebp
sbb
pusha
xchg
mov
shr
shr
fwait
outs
jae
cs
mov
retf
and
sub
xchg
adc
sbb
(bad)
xor
cwde
mov
xchg
pop
push
dec
fild
lock
call
dec
sbb
cmps
xchg
xchg
(bad)
mov
cdq
rol
pop
sar
das
push
fwait
xchg
add
mov
aas
rcr
xlat
xchg
inc
cmp
and
fbstp
pop
sbb
pop
jecxz
pop
sub
nop
out
popa
sahf
sub
in
hlt
loopne
pop
pop
sti
out
rcr
iret
cmp
loope
ss
pop
fild
gs
xor
sbb
ins
sbb
sbb
shl
mov
fisttp
xchg
es
clc
push
fcmovnu
hlt
jo
popf
daa
(bad)
mov
movs
ret
mov
jno
hlt
jbe
xor
imul
jbe
pop
sbb
or
mov
imul
dec
pop
adc
xchg
mov
xchg
mov
mov
jnp
jno
out
sbb
add
retf
aaa
add
mov
and
push
xor
push
mov
cmp
(bad)
cs
out
movs
and
lods
in
loope
cmp
xchg
xchg
ret
jns
rcr
ss
dec
inc
(bad)
loope
dec
sbb
fmul
add
es
xor
scas
mov
inc
add
inc
out
xchg
cld
call
jno
in
shr
dec
push
scas
mov
xchg
imul
cmc
dec
add
(bad)
jae
test
mov
loop
jecxz
cdq
loop
mov
mov
movs
xor
fld
clc
mov
es
test
scas
push
(bad)
fisttp
adc
and
icebp
jg
mov
and
sbb
mov
pop
pusha
lods
rcl
(bad)
gs
pop
push
add
xchg
mov
add
adc
(bad)
push
sbb
pop
adc
pop
aad
inc
ins
in
mov
sbb
sbb
sub
out
xor
shr
arpl
cvtps2pi
mov
retf
cmp
dec
add
or
nop
(bad)
pop
adc
sub
popf
jns
sahf
push
and
mov
and
mov
jle
popa
arpl
addr16
fs
push
xor
jecxz
out
or
cmc
stos
in
stos
pop
shl
pop
mov
aam
or
sbb
in
sub
shr
icebp
sub
repnz
repnz
xor
iret
std
or
mov
(bad)
jae
fbstp
mov
xchg
outs
mov
mov
xchg
xor
scas
nop
xchg
sbb
or
inc
ret
push
sub
pusha
mov
repnz
xchg
mov
loope
inc
jecxz
mov
or
adc
mov
adc
mov
leave
popa
sahf
or
imul
mov
pusha
ror
mov
adc
(bad)
xchg
mov
jmp
clc
pop
movs
add
sbb
inc
ficomp
jbe
add
int3
cmp
out
push
mov
xchg
xor
stos
outs
in
out
pushf
(bad)
in
rcr
in
sti
mov
mov
push
cmp
pop
pop
sbb
inc
in
mov
xchg
dec
test
neg
es
push
add
xor
daa
in
pop
add
mov
data16
sahf
call
or
daa
aaa
mov
adc
int3
xor
(bad)
call
daa
scas
pop
lea
shl
mov
pop
adc
sahf
clc
or
xchg
push
sub
je
jo
mov
push
push
sub
and
enter
loope
add
test
mov
mov
mov
bound
aad
mov
mov
sub
push
push
ins
add
imul
cmp
ret
push
inc
js
outs
sti
sbb
imul
popa
jge
xor
popa
adc
inc
sti
cmc
test
loop
jae
cld
mov
xor
and
xchg
xchg
stos
enter
push
movs
mov
push
sub
pusha
pop
cmp
and
aaa
push
fwait
scas
pop
dec
dec
movs
ds
push
repnz
shr
pusha
fst
or
(bad)
or
ins
shl
xchg
jae
sub
cmp
cmps
sbb
cwde
push
add
sub
dec
shr
push
push
sub
or
into
xor
mov
jmp
mov
xchg
jmp
scas
add
cmc
inc
inc
inc
sub
push
sub
xchg
inc
arpl
(bad)
dec
out
xchg
or
sbb
cwde
jnp
xor
mov
int3
pop
out
dec
cmp
mov
popf
fadd
jae
repnz
add
xchg
sbb
mov
cmp
xor
cmp
xchg
adc
mov
fldl2t
jne
add
and
inc
pop
mov
retf
jne
test
mov
dec
mov
sti
jge
aaa
sti
xchg
inc
stos
ret
loopne
ins
imul
in
sbb
icebp
sar
mov
mov
mov
mov
jnp
gs
and
xor
loopne
mov
xor
pop
popf
ficomp
dec
xor
mov
inc
jle
sbb
add
das
sbb
ret
(bad)
stc
mov
jns
in
mov
or
cli
icebp
fidiv
or
dec
xchg
fsub
aas
aaa
push
xor
jb
adc
xchg
loop
add
push
retf
je
cmps
xchg
fld
in
mov
jne
xchg
mov
daa
nop
adc
bound
add
test
jo
das
in
movs
repnz
or
pop
daa
and
xchg
jne
mov
sub
shr
dec
inc
punpckhwd
cmp
mov
inc
imul
stos
leave
push
movs
call
das
(bad)
add
les
xchg
adc
jbe
sub
add
std
xlat
dec
pushf
jecxz
inc
fstp
push
pop
inc
inc
adc
dec
(bad)
jmp
push
cmps
stos
bound
xor
aaa
not
cwde
loopne
fild
sub
sbb
sub
out
xchg
in
dec
loop
cmp
mov
lock
aad
pusha
call
cmps
addr16
(bad)
fs
push
repz
inc
and
mov
fadd
xchg
dec
mov
jnp
cmp
push
ins
in
lods
in
mov
mov
sub
adc
shr
mov
add
adc
fs
push
mov
test
jo
pop
mov
cmp
mov
sti
mov
fst
fwait
pop
shr
push
iret
jnp
pusha
adc
and
jl
ror
outs
jo
xor
xchg
pop
inc
bound
add
loope
out
add
pop
pop
cmps
stos
fst
add
test
push
xchg
aaa
jne
mov
jl
js
retf
jg
xchg
test
fdiv
cmps
jecxz
or
xor
pop
pusha
fwait
xor
mov
cwde
xor
mov
out
inc
jo
fild
retf
inc
scas
cmp
(bad)
call
into
outs
loopne
sti
pop
dec
mov
mul
sbb
dec
push
mov
and
xchg
int3
and
xchg
ss
xor
jae
push
outs
or
xchg
and
adc
cmp
fdivr
fsub
imul
pop
add
int
fstp
imul
mov
push
popa
push
xchg
dec
dec
xor
jae
addr16
mov
mov
cmc
add
stc
out
test
jae
das
ss
xor
popf
inc
je
test
ja
loopne
lods
add
js
iret
imul
pop
mov
mov
std
dec
inc
push
ret
push
sub
retf
int
mov
outs
sbb
cmps
movs
push
mov
ja
loopne
xor
test
push
inc
scas
xchg
jmp
adc
push
add
xchg
test
jge
xchg
movs
xchg
pusha
pop
cwde
xor
xchg
cmp
jle
push
mov
int3
and
adc
push
jg
adc
inc
retf
test
test
mov
or
push
xor
rcr
pop
rol
(bad)
out
rol
cld
mov
call
mov
push
xor
push
fwait
aaa
nop
pop
jb
mov
popf
sub
and
and
dec
xchg
xchg
pop
adc
popf
mov
fs
mov
or
xchg
push
rcr
mov
das
xchg
loope
jno
cwde
xchg
mov
xor
xchg
pushf
xor
out
lods
adc
out
int3
xchg
dec
mov
and
(bad)
xchg
das
retf
cmp
adc
sahf
jb
mov
push
in
jmp
jle
sub
push
xchg
pop
dec
sub
pop
adc
xchg
inc
js
jb
(bad)
pop
ss
retf
out
fnstcw
add
mov
aam
sti
cmp
inc
sbb
scas
in
mov
push
add
cmc
mov
idiv
jae
(bad)
int3
dec
cmp
mov
fwait
test
fcomip
fcomp
mov
adc
push
inc
sbb
(bad)
div
int
dec
pop
fs
ret
sub
or
sbb
jnp
leave
sub
shl
dec
or
adc
jge
xchg
push
jmp
jmp
inc
popf
in
mov
ins
in
jmp
dec
adc
cmps
(bad)
int3
inc
arpl
inc
push
loop
cdq
inc
stos
in
out
cmp
xchg
inc
pop
imul
aam
xchg
test
pop
aas
lahf
xor
movs
dec
and
daa
pop
xor
mov
mov
ficomp
jle
int3
and
int3
daa
jb
fistp
jmp
mov
fs
scas
mov
test
xchg
loopne
(bad)
fcmovu
out
clc
test
cmps
add
pusha
mov
inc
dec
pop
sbb
mov
movs
es
outs
push
mov
mov
ficom
test
xor
rol
stc
xchg
sub
and
jae
rcl
js
mov
mov
outs
lds
cs
loope
mov
xchg
inc
ret
inc
ss
nop
mov
out
pop
cmp
out
call
fcmovnb
xor
xchg
add
pushf
mov
inc
or
(bad)
ja
xchg
pusha
lahf
shr
jecxz
jbe
ret
gs
adc
fnsave
cmps
mov
retf
sbb
pop
jecxz
(bad)
jno
iret
mov
jb
enter
cmp
xor
mov
mov
push
(bad)
ja
pop
cdq
jmp
mov
cmp
into
dec
ror
adc
jne
pop
or
loope
inc
and
jbe
test
mov
sahf
in
adc
arpl
dec
imul
lock
out
enter
cmp
fidivr
dec
xor
inc
push
dec
icebp
xor
addr16
(bad)
bound
ret
jmp
movs
(bad)
dec
shl
push
(bad)
fwait
or
icebp
xlat
out
nop
adc
or
xchg
xor
mov
sub
xchg
pop
adc
repz
cmp
jno
jns
jge
mov
sbb
sbb
jbe
pusha
adc
xchg
inc
pop
cwde
in
jb
mul
not
out
cmp
push
xor
lahf
je
add
and
jo
jae
cs
mov
test
jmp
pop
mov
sahf
lods
or
hlt
mov
out
pushf
bound
int3
addr16
mov
clc
cmp
mov
push
mov
xchg
push
fisttp
xlat
rcr
pop
jb
and
xchg
movs
outs
mov
sbb
adc
mov
imul
dec
sbb
(bad)
sbb
gs
(bad)
stc
(bad)
scas
xor
dec
pop
cdq
add
les
adc
cmc
imul
les
popa
inc
adc
sbb
pushf
rcl
push
lahf
mov
inc
lahf
and
call
push
fwait
bound
arpl
int3
pop
inc
dec
cmp
xchg
adc
add
js
aad
inc
je
lods
mov
mov
fnstsw
cmp
mov
dec
arpl
popf
out
cmp
test
in
out
mov
cmp
push
in
mov
ror
mov
pushf
or
push
pop
ss
mov
mov
add
cmp
xchg
mov
xor
pushf
movs
cld
aaa
fsub
jmp
bound
ins
ret
add
and
lock
inc
jmp
xchg
rol
push
cmp
dec
mov
setne
and
ficom
les
inc
ja
pushf
call
adc
test
ret
push
hlt
mov
rol
out
enter
adc
push
mov
adc
shr
xor
mov
and
les
mov
jae
ror
jp
and
ja
aaa
pop
xlat
adc
idiv
(bad)
cmp
add
shl
cdq
sbb
jmp
test
add
ret
pop
or
adc
push
ins
or
sub
rcl
mov
imul
push
jne
mov
mov
mov
daa
stos
rcl
mov
sahf
hlt
jle
(bad)
test
into
xchg
adc
outs
mov
data16
xchg
outs
jmp
mov
std
rcr
cmp
jmp
or
rcpps
cmp
outs
daa
rcl
sahf
mov
add
add
add
mov
xchg
imul
sub
xor
fisttp
(bad)
mov
cmp
jae
adc
push
fnsave
mov
sub
add
and
add
mov
dec
cmp
pop
ja
retf
and
pop
pop
adc
sub
adc
(bad)
cmps
rcl
scas
aam
js
out
mov
ja
and
cli
sahf
or
jg
fwait
aas
mov
ror
popf
mov
retf
push
cmp
mov
nop
inc
mov
push
(bad)
mov
sbb
pop
lahf
in
sbb
mov
mov
push
xchg
ror
pop
test
shr
cwde
icebp
sbb
pop
mov
(bad)
stc
mov
sub
mov
and
push
jl
jmp
sub
sbb
pop
sub
test
lods
inc
fwait
push
scas
xor
mov
push
pop
dec
mov
and
add
or
cmp
(bad)
jl
xchg
pop
adc
pop
sbb
cld
sbb
ss
test
sub
and
sub
(bad)
enter
cmc
hlt
(bad)
icebp
add
out
in
(bad)
cmp
faddp
scas
sahf
pop
mov
push
jmp
fistp
test
adc
sbb
and
shl
into
push
mov
(bad)
lea
jl
stos
outs
test
pop
arpl
add
dec
(bad)
xchg
js
push
mov
sub
dec
in
shl
mov
cmp
xor
lods
xchg
push
cmc
shr
les
loop
xchg
icebp
jno
cmp
jno
nop
mov
mov
lea
dec
xor
lods
mov
rcl
push
fwait
pop
loope
ret
imul
xor
into
cmps
stc
sub
mov
xor
sub
or
ins
mov
push
bndldx
fldcw
out
xor
push
pop
sub
inc
dec
mov
enter
cdq
mov
or
inc
clc
stc
clc
iret
dec
xor
aad
shr
sub
(bad)
jle
cmp
sbb
sub
push
test
clc
enter
pop
je
jbe
push
pop
lahf
xchg
jae
or
test
retf
cmp
div
sbb
lds
imul
dec
leave
lods
(bad)
inc
mov
in
or
mov
pop
cdq
std
push
lock
(bad)
mov
push
mov
daa
xchg
shl
pop
sbb
test
(bad)
mov
xor
xchg
dec
inc
pop
sbb
sbb
movs
jg
and
popa
xor
outs
dec
cmc
(bad)
sbb
jg
lahf
int3
std
or
mov
enter
imul
je
add
ins
mov
les
mov
or
push
jae
test
push
std
add
aam
mov
push
loop
ins
loope
sbb
repz
test
push
push
(bad)
fild
pop
push
xchg
iret
xor
xor
xor
inc
nop
sbb
movs
push
sbb
(bad)
jg
test
push
cli
pop
cmp
and
inc
mov
jg
mov
push
xor
cmc
lds
xor
adc
ror
jge
(bad)
xor
add
popf
sar
(bad)
dec
out
fsubr
data16
sub
loope
retf
sub
mov
pop
mov
psubsw
pop
jbe
lock
push
adc
pop
sub
lods
aam
nop
outs
mov
aam
fs
mov
mov
add
aam
inc
int
retf
popf
jp
xchg
adc
lods
sbb
popf
das
cs
inc
xor
pop
out
jne
in
mov
stos
mov
gs
jecxz
repnz
and
ss
retf
xchg
ss
rol
sub
imul
stc
and
ja
and
sub
lods
xor
out
aam
test
pop
out
movs
cmp
push
dec
sub
repz
cmp
push
adc
into
fist
test
jb
les
sbb
mov
or
mov
add
test
jo
mov
xor
xchg
inc
cmp
or
sti
ficomp
hlt
mov
lock
inc
les
inc
dec
rol
ds
daa
cmps
mov
pop
sub
xlat
lods
push
or
or
push
sbb
push
dec
push
mov
or
or
int
push
stos
icebp
add
rcr
sub
sub
mov
lahf
aad
jle
sub
or
push
push
mov
scas
movs
nop
or
retf
ror
sbb
sbb
out
dec
xchg
pop
inc
sti
mov
push
bound
fs
cld
and
pusha
or
int3
jmp
mov
fwait
out
daa
jmp
sub
imul
dec
scas
push
inc
shl
fisttp
loopne
das
jmp
imul
mov
nop
sbb
mov
outs
(bad)
mov
push
push
add
imul
add
xor
cmp
(bad)
pop
sbb
pop
or
dec
or
push
mov
test
sub
pop
mov
mov
mov
gs
pop
cwde
push
adc
(bad)
mov
add
inc
jle
cmps
ret
out
loop
(bad)
mov
pop
aas
xchg
jo
xchg
jb
imul
repnz
test
xlat
and
and
mov
lods
cmc
cwde
xlat
xchg
out
mov
enter
imul
and
inc
test
sub
ins
and
mov
retf
and
rol
lods
or
mov
fiadd
xor
les
jmp
add
hlt
out
mov
sti
loope
mov
or
lock
adc
pop
xor
into
xchg
mov
bound
pop
add
ins
inc
lds
mov
fild
fidivr
fdivr
dec
hlt
xlat
add
jmp
cwde
mov
xchg
cmp
mov
(bad)
jns
adc
test
les
add
push
into
push
stc
pop
call
(bad)
int
aas
inc
dec
jne
push
cwde
sar
xchg
mov
xlat
aas
push
push
shl
rcr
fwait
or
push
or
or
repnz
jmp
pushf
jg
les
imul
and
call
popf
and
xchg
push
pop
lods
mov
daa
add
loope
not
cmc
jno
xchg
jmp
jmp
fisttp
retf
test
mov
push
pop
scas
sbb
inc
dec
test
add
aaa
stos
push
xchg
jg
jl
jmp
test
rcl
(bad)
in
xchg
xchg
bound
push
or
xor
ret
shl
nop
movs
hlt
xchg
dec
test
pop
push
xchg
xchg
int
inc
xor
pop
imul
push
pop
cdq
sti
dec
and
and
jmp
xlat
in
and
jp
inc
push
retf
(bad)
xor
jge
or
pop
sbb
movs
inc
xchg
fs
adc
sbb
(bad)
int3
push
aaa
mov
inc
jmp
sub
add
sahf
std
movaps
sub
cmp
add
shl
ins
add
mov
outs
inc
cli
call
fwait
pusha
xor
rcr
xlat
xor
add
cmps
push
shr
mov
xchg
gs
sar
mov
sub
mov
adc
sbb
jmp
sti
scas
mov
test
repnz
bound
adc
mov
sbb
inc
push
dec
cld
mov
push
adc
jmp
mov
add
jbe
(bad)
jmp
adc
loop
jmp
loop
dec
lds
aam
dec
jg
and
push
dec
jmp
hlt
shr
jmp
pusha
push
neg
adc
and
mov
mov
and
bound
loopne
mov
in
or
pop
pop
ins
sbb
pop
inc
xchg
popa
retf
jbe
aam
pop
sbb
repnz
sti
iret
test
push
dec
fwait
das
hlt
sub
imul
pop
iret
add
mov
jl
mov
cmp
xchg
mov
cmp
push
pop
inc
in
xchg
mov
mov
push
mov
ret
inc
xor
mov
movs
retf
xor
(bad)
das
retf
mov
mov
jecxz
ror
sub
mov
fst
adc
and
gs
cwde
or
ds
icebp
jge
ins
and
xor
mov
mov
sub
les
mov
sub
test
movs
rcr
xor
jle
fs
ret
aam
into
xor
(bad)
lock
arpl
push
jae
mov
fs
out
js
sti
scas
dec
les
mov
push
add
(bad)
cmp
ins
fcomp
sub
inc
repz
loope
retf
test
cmp
mul
in
inc
push
fs
adc
addr16
adc
push
in
mov
cmp
or
and
mov
shl
push
add
jle
sub
sahf
xor
fwait
les
cmp
imul
(bad)
cmp
data16
inc
ffree
jnp
int
mov
lds
ret
test
push
push
repnz
adc
sar
aad
push
fst
lock
aas
mov
int
xchg
cmps
jl
push
push
push
sbb
add
push
jb
xchg
shl
and
mov
leave
pop
sbb
xor
push
(bad)
add
test
cmp
repnz
ja
xchg
nop
adc
popf
int3
and
push
sbb
fstp
cmps
and
push
push
mov
jge
xchg
aas
push
xor
ins
mov
pop
adc
or
(bad)
adc
cdq
cmp
and
repz
and
dec
js
test
popf
jle
leave
inc
and
xchg
stos
mov
aam
dec
pop
loopne
call
aas
sti
outs
mov
aaa
into
cmp
repnz
jnp
dec
ss
mov
idiv
das
sbb
add
cmc
loop
fimul
mov
mov
enter
loop
stc
aas
mov
sbb
and
clc
push
shr
jne
enter
cmp
jbe
aam
in
test
in
mov
mov
test
sub
xchg
iret
sbb
je
fcmovb
adc
int
aaa
imul
dec
repz
jnp
xchg
push
push
out
mov
fwait
ret
jg
(bad)
mov
xchg
sbb
dec
js
xchg
call
lds
xor
sub
dec
movs
aad
icebp
in
sbb
pop
fwait
xor
adc
or
outs
push
push
sbb
(bad)
inc
sbb
or
shl
retf
dec
jns
pushf
das
mov
xchg
call
dec
push
pop
(bad)
cwde
call
or
mov
mov
or
mov
outs
sar
test
dec
inc
in
mov
fcmove
es
adc
cmc
int3
jmp
sub
ins
mov
loop
pop
ret
loopne
xchg
inc
mov
jne
pop
xlat
xchg
mov
into
outs
sub
cmp
add
icebp
scas
(bad)
push
mov
clc
inc
stos
mov
stos
xor
mov
shl
pop
dec
mov
ja
mov
or
push
xchg
dec
dec
mov
xor
popa
lahf
mov
xor
inc
mov
mov
jbe
in
ins
mov
and
les
mov
retf
inc
icebp
and
outs
aaa
adc
cmp
enter
test
fild
out
(bad)
mov
sbb
or
into
push
mov
dec
movs
xchg
fisub
xchg
inc
ret
out
cmp
cmp
lahf
pop
out
or
pop
jecxz
jmp
xchg
shl
(bad)
hlt
outs
bound
adc
lods
cmp
repz
gs
push
jnp
or
sub
stos
xchg
fsub
push
add
cdq
pusha
mov
fwait
dec
sub
pop
repz
dec
sbb
cmps
mov
cmps
mov
shl
sbb
or
lahf
pop
pop
push
cmc
inc
addr16
loop
stos
out
jns
(bad)
jg
sbb
xchg
popf
cmp
scas
sub
sub
jbe
retf
and
pop
push
hlt
xor
mov
jge
push
ins
js
add
sbb
pop
fistp
add
lea
mov
data16
xchg
es
in
sbb
jl
shr
pop
push
cdq
mov
mov
shl
cwde
mov
inc
inc
adc
rol
cld
int
mov
popa
(bad)
scas
stc
fwait
mov
and
pushf
inc
aam
jmp
push
enter
daa
out
xor
rcl
sbb
add
imul
cmps
push
not
imul
je
inc
inc
push
sti
jmp
stc
imul
cmp
fistp
(bad)
iret
sub
inc
jecxz
and
movs
mov
mov
aad
jmp
and
sbb
mov
jne
dec
sbb
mov
pop
pop
stos
stc
and
jp
outs
mov
sbb
aaa
sbb
stos
push
popa
mov
int
mov
repz
inc
sub
scas
sbb
mov
cmps
mov
xchg
xor
pop
pop
sbb
or
lock
mov
cmps
xchg
ret
xlat
(bad)
sub
adc
sbb
sub
mov
lock
mov
icebp
nop
adc
repz
ds
adc
lds
sub
popf
xor
outs
mov
das
rol
push
in
gs
add
cmp
cmp
in
sbb
sahf
mov
(bad)
ins
and
outs
fnsave
push
jb
das
(bad)
call
cmp
mov
mov
jb
inc
clc
repnz
dec
push
push
inc
loopne
mov
mov
mov
mov
mov
shl
fcomp
ret
es
sti
pusha
les
push
sahf
fnsave
pop
dec
or
push
int3
pop
cs
dec
jb
push
add
leave
arpl
rcl
clc
mov
add
aam
leave
(bad)
xor
push
cmp
bound
inc
movs
repnz
mov
push
pop
addr16
fadd
rcr
nop
in
mov
ins
mov
jo
cmp
outs
dec
xor
mov
ins
stos
sbb
sbb
mov
stos
jne
add
js
js
pop
dec
xor
out
outs
sub
mov
pop
in
xor
cld
dec
gs
mov
in
ins
mov
jmp
in
retf
dec
sbb
test
xchg
(bad)
mov
test
sbb
mov
jg
icebp
ja
xor
bound
jne
and
xor
retf
or
add
jbe
cmp
in
push
les
lods
cs
hlt
push
js
xchg
push
adc
mov
test
cmp
in
cmp
into
mov
dec
dec
mov
jmp
pusha
popa
xchg
xchg
mov
aam
and
in
pop
ins
pusha
pusha
mov
cmp
dec
in
pushf
(bad)
in
ins
jo
add
fisubr
shl
shr
(bad)
fld
mov
add
add
xchg
in
mov
jp
dec
in
dec
jo
loopne
mov
out
push
in
cmp
jg
iret
adc
inc
pop
sub
jbe
xchg
int3
or
imul
test
(bad)
pushf
mov
jb
(bad)
out
mov
leave
imul
dec
out
pop
dec
cmp
aaa
cmc
fistp
xchg
movs
mov
cmp
dec
pusha
push
xchg
fucomp
xchg
fs
aam
loop
paddw
sbb
dec
pop
or
dec
jo
inc
mov
mov
add
mov
movs
(bad)
cld
test
mov
push
jg
sub
lods
clc
(bad)
shr
mov
dec
or
lea
add
test
je
push
call
add
cld
inc
mov
dec
movs
adc
jge
mov
adc
ins
imul
add
pop
loop
test
scas
xor
pop
das
push
ret
gs
xchg
sbb
mov
adc
xchg
xchg
je
jne
pop
daa
add
iret
icebp
and
fstp
dec
cmp
mov
clc
and
inc
jle
push
inc
(bad)
push
jecxz
sbb
out
adc
cmp
mov
retf
or
inc
mov
sbb
and
out
pop
in
add
sar
sub
je
or
jb
xchg
daa
sub
pushf
mov
inc
jp
sbb
das
xor
xchg
imul
xchg
dec
push
loopne
ds
nop
lds
dec
push
sti
mov
bound
std
cmp
js
sbb
cmc
push
add
or
jne
mov
leave
ss
mov
and
pop
lods
popa
aaa
inc
repnz
push
or
out
ins
or
rcl
aaa
push
mov
jp
fadd
cs
pop
adc
data16
out
in
mov
push
jecxz
and
je
das
pop
shr
jmp
test
mov
cmps
mov
call
fimul
adc
dec
adc
inc
(bad)
pop
cmp
jo
out
in
mov
mov
cld
stos
sti
sbb
and
fbstp
scas
outs
jecxz
loop
jno
sbb
mov
inc
fs
mul
xchg
data16
cmp
or
sub
ja
pusha
out
retf
mov
push
inc
jne
sub
inc
mov
sqrtps
cmp
repnz
bound
neg
jle
jne
adc
add
sub
mov
test
push
adc
cmps
jno
jmp
leave
sti
sub
pusha
fld
sub
xchg
adc
xchg
ins
mov
cmp
xlat
mov
mov
inc
xchg
jae
sti
dec
rcl
jp
ror
sahf
inc
scas
or
inc
jb
das
popa
sbb
gs
cmp
out
mov
out
sbb
in
lock
stos
ds
dec
and
mov
xchg
cs
xor
mov
inc
ret
inc
(bad)
jb
inc
mov
and
inc
loopne
(bad)
adc
add
inc
xor
or
xchg
neg
mov
daa
nop
mov
fdiv
js
(bad)
cmp
enter
retf
ss
fdivr
dec
movs
pushf
push
lock
or
mov
dec
retf
adc
mov
aam
push
jg
mov
fwait
popf
rcl
pop
cmp
outs
repz
fcmovnu
sub
rol
call
xor
mov
scas
dec
mov
out
imul
xchg
push
push
leave
cmp
sub
out
popa
xchg
xchg
fdivr
stos
sub
jmp
mov
push
push
sar
mov
pop
nop
dec
leave
rcr
jp
jg
fldcw
jno
inc
fbstp
sbb
push
adc
sar
mov
dec
mov
cmp
sbb
test
lods
or
outs
lods
mov
les
push
inc
fs
add
loop
sti
pop
in
push
jmp
lock
(bad)
pop
dec
std
sbb
(bad)
daa
xor
rol
cld
cmps
movs
jge
test
icebp
cmp
cmp
adc
dec
jae
and
add
cmp
in
jecxz
cmp
bound
inc
add
mov
and
pop
or
aam
rcl
xchg
sbb
clc
add
outs
into
mov
xor
or
fsubp
movs
(bad)
fisub
cmp
fwait
mov
xchg
daa
ds
xor
sbb
sub
int
daa
adc
rcr
add
xchg
std
aas
test
(bad)
mov
ins
push
mov
cmp
mov
cmp
and
aam
adc
pop
xchg
int3
jmp
repnz
sbb
jns
pop
add
lea
addr16
xchg
xchg
inc
push
inc
inc
dec
mov
aaa
push
push
cld
add
mov
movs
push
adc
xor
push
push
or
aaa
fsub
inc
mov
sti
sti
rcr
les
sbb
shl
cmps
retf
or
enter
adc
xor
hlt
add
jmp
fbstp
inc
shl
adc
and
pop
imul
sub
and
jae
sbb
ins
pusha
jle
add
add
and
jg
cmp
inc
scas
mov
mov
mov
into
add
in
push
call
loopne
pop
jge
pop
xchg
add
fstp
pop
(bad)
jmp
xor
ss
jae
xor
scas
popa
retf
adc
sub
(bad)
dec
div
sbb
and
push
add
xor
in
out
(bad)
lock
scas
shr
mov
pushf
or
mov
adc
mov
sub
dec
imul
cmps
aam
mov
sbb
in
les
test
cdq
xor
add
cwde
mov
mov
push
xchg
mov
push
mov
sub
xor
add
retf
pop
mov
xchg
sbb
inc
or
xchg
int3
test
aam
or
push
sub
jmp
mov
movs
aam
push
mov
cmp
fldcw
inc
dec
mov
cmc
and
in
dec
or
movnti
cmp
jmp
cmp
xchg
push
mov
je
pop
scas
pop
cs
(bad)
and
cmp
and
rcr
xchg
dec
stc
cmp
mov
cwde
jmp
lods
dec
xor
mov
sub
fs
mov
addr16
pop
xor
sbb
mov
add
xor
jecxz
cmp
(bad)
lock
ficom
(bad)
stos
fild
mov
fisubr
out
aad
gs
and
dec
movs
repnz
lds
add
xor
sbb
jbe
ds
adc
nop
add
enter
xor
xchg
fcomp
cmp
pop
adc
cwde
xchg
lock
inc
ins
sub
fisubr
(bad)
icebp
dec
mov
icebp
ds
shl
pop
mov
stc
das
and
cmp
dec
shl
ss
cwde
pop
int
enter
dec
push
neg
sahf
pminsw
nop
mov
aaa
pusha
xchg
pop
jge
mov
xor
arpl
aam
or
pusha
mov
add
addr16
iret
dec
test
push
push
jl
outs
and
cmp
es
outs
and
mov
and
popa
pop
sysexit
sub
and
push
in
lods
adc
sub
pop
mov
sbb
sub
xor
xor
scas
xor
cmps
and
(bad)
adc
inc
out
out
mov
push
popa
or
stos
mov
mov
jmp
inc
in
(bad)
push
lds
mov
sahf
pop
dec
iret
sbb
mov
and
mov
and
dec
cli
(bad)
pop
clc
(bad)
xchg
dec
leave
retf
push
inc
fdivr
in
inc
xor
pop
lods
xchg
inc
hlt
pop
std
fiadd
jecxz
adc
pop
sub
outs
repnz
(bad)
out
jo
mov
push
mov
dec
daa
bound
cs
mov
loopne
stos
loop
icebp
inc
xchg
and
push
fidivr
out
xor
mov
fadd
adc
inc
mov
fcom
pop
push
gs
inc
jbe
sbb
xor
pop
cli
retf
ins
adc
xor
cmp
mov
sar
js
sbb
out
mov
iret
or
or
pop
dec
ja
jl
mov
mov
(bad)
sub
push
xchg
or
cmp
cmp
rol
mov
pop
leave
scas
xor
or
adc
jp
xchg
jnp
nop
cmp
jno
xchg
add
dec
es
sti
outs
xor
pop
lods
adc
sub
dec
xor
inc
div
cmp
xlat
adc
and
jne
jb
aas
loopne
cmp
icebp
push
mov
xchg
jnp
fnsave
leave
cmp
mov
jmp
mov
ds
cwde
jne
pop
mov
aad
pop
(bad)
in
mov
retf
(bad)
or
sub
add
aam
xchg
ret
aam
mov
add
jb
lods
adc
mov
dec
scas
and
inc
xor
cmc
mov
neg
and
mov
repnz
sub
outs
shr
xor
sbb
aas
push
(bad)
jle
pop
jnp
sbb
and
mov
outs
loopne
pop
loopne
cmp
imul
jnp
cld
dec
mov
repz
or
fcom
mov
jnp
lods
cmp
sub
and
mov
mov
je
mov
mov
xlat
dec
xor
not
xor
or
sahf
and
stos
xchg
lods
mov
cmp
mov
fwait
loopne
mov
or
adc
cmp
add
or
dec
mov
sbb
xchg
ja
mov
mov
(bad)
enter
arpl
data16
push
jno
fs
dec
shr
fwait
sbb
jecxz
stos
fiadd
mov
js
aaa
fwait
cmp
pop
xchg
scas
add
xor
pop
lods
xchg
pop
xchg
dec
cmp
sbb
dec
sbb
sbb
out
sub
jbe
jo
sti
jle
clc
arpl
mov
inc
mov
sbb
repz
or
outs
dec
aam
pop
cdq
push
xor
add
xor
ror
cld
rcl
ins
pushf
ins
daa
les
pop
and
lods
or
(bad)
ficomp
call
cmps
iret
push
adc
and
or
sbb
(bad)
loop
imul
cmc
sub
or
imul
dec
xor
frstor
sar
fild
cwde
mov
add
cwde
retf
mul
dec
scas
mov
jecxz
(bad)
adc
fs
pop
(bad)
lea
scas
inc
cmp
jne
jno
xchg
adc
in
sbb
std
cmps
push
dec
inc
add
daa
xor
or
cmp
xchg
cmc
jp
sbb
adc
int
jnp
xor
fisub
fld
or
lahf
out
adc
push
xchg
je
cmp
push
jo
call
daa
jo
pop
mov
and
push
add
cmps
pop
pop
jge
xchg
adc
in
es
cmps
mov
pop
pop
mov
ds
repnz
sbb
shl
in
js
sub
ror
ficom
push
out
movs
shl
xchg
pop
gs
lea
or
mov
sub
in
sti
sbb
inc
and
jle
imul
popf
mov
push
xor
outs
aam
icebp
fcomp
enter
in
mov
loop
pop
xor
push
jnp
dec
mov
clc
outs
stos
mov
and
ret
add
inc
pop
cs
fmul
sbb
mov
push
outs
jae
out
adc
ret
leave
cmps
mov
aad
dec
(bad)
mov
nop
lea
adc
sbb
outs
cmp
push
fs
dec
and
fwait
xchg
xchg
cmc
in
(bad)
and
jmp
pop
jecxz
push
or
mov
sub
aaa
mov
in
in
mov
ret
ins
mov
retf
add
xchg
test
lods
sub
ret
ins
aas
xor
inc
add
jge
mov
push
mov
mov
and
imul
sbb
cld
and
inc
int
jge
mov
add
mov
inc
adc
or
inc
cmp
pop
jbe
loopne
test
pusha
push
inc
(bad)
mov
add
pop
add
push
mov
scas
addr16
xchg
in
retf
in
dec
mov
enter
cs
rol
xor
sbb
iret
sub
inc
out
push
sar
sti
mov
inc
cmp
mov
cmc
jae
ja
shr
inc
icebp
mov
repz
inc
mov
adc
pop
dec
sbb
rol
mov
adc
cwde
mov
mov
vcvtph2ps
inc
push
mov
sbb
movs
mov
fdivr
sbb
push
inc
(bad)
shl
cmp
mov
push
in
out
cmp
push
push
scas
ss
jge
jp
into
sti
sbb
mov
inc
int
jl
mov
aad
xlat
hlt
loop
mov
test
cmps
pop
cmp
xor
div
stos
enter
pop
push
sbb
adc
sub
jne
add
into
ret
ret
movs
adc
mov
cmps
cmps
(bad)
sbb
shl
mov
sbb
push
mov
dec
cdq
dec
sub
or
test
or
push
or
shl
and
pop
mov
cmp
xor
int
test
mov
ret
or
out
sbb
mov
or
imul
xor
inc
adc
and
(bad)
mov
aas
arpl
xchg
adc
xchg
out
add
push
jg
pop
hlt
pop
dec
addr16
jecxz
mov
add
nop
cmp
push
(bad)
repz
mov
scas
(bad)
cmps
adc
or
(bad)
stos
ja
sbb
or
js
cmp
aaa
jmp
ret
xchg
sti
jl
xor
xchg
inc
mov
frstor
xor
fistp
add
iret
dec
adc
cmp
push
call
aam
mov
retf
fistp
mov
mov
xor
scas
popa
adc
pop
push
enter
inc
or
pushf
push
mov
mov
hlt
in
inc
outs
sbb
dec
ins
mov
or
sub
sub
xor
iret
pusha
inc
sbb
mov
xchg
retf
(bad)
(bad)
in
push
jo
sub
repnz
cmp
jecxz
lock
push
in
push
mov
cmps
mov
xor
mov
inc
(bad)
arpl
movs
mov
outs
pop
mov
xor
mov
sub
add
push
push
ins
mov
jmp
cmps
rcl
in
mov
jnp
jno
mov
sbb
pop
mov
sub
and
pushf
mov
sub
sub
push
shl
xor
add
mov
jo
aas
into
cmovle
and
jnp
fwait
and
dec
sbb
nop
into
movs
inc
mov
inc
jo
nop
jns
push
int3
or
push
jmp
rcl
sub
pop
inc
shl
es
les
test
enter
jge
popa
inc
or
pop
sbb
mov
stos
pop
adc
sub
test
and
xchg
inc
mov
push
movups
loope
shl
and
shr
jge
cmc
stc
mov
into
inc
push
bound
(bad)
cmp
xchg
adc
push
xor
xchg
hlt
push
call
push
inc
popf
cmp
push
push
stos
fsubr
shl
or
sbb
mov
xor
cmp
fabs
iret
ins
push
ret
inc
pushf
in
loope
fcomp
mov
pushf
and
inc
push
scas
arpl
mov
mov
mov
adc
mov
pop
mov
dec
hlt
xor
mov
sub
and
lea
retf
mov
dec
loopne
push
mov
jge
dec
jno
adc
test
push
inc
mov
mov
leave
dec
sbb
pop
mov
mov
push
inc
push
cmps
mov
mov
sbb
fisubr
dec
clc
jle
or
test
cmp
mov
mul
leave
mov
dec
mov
call
mov
lds
adc
jle
xlat
sar
push
imul
sbb
ficomp
pop
jno
lea
retf
pushf
popa
in
and
xlat
popa
mov
push
cmps
rcl
push
jp
xor
rol
test
add
xchg
jae
mov
mov
out
out
push
fistp
push
sbb
cli
dec
data16
sbb
sbb
xchg
jae
(bad)
je
fstp
cmps
aas
mov
popa
lods
out
xchg
or
test
mov
cli
cwde
enter
pop
cs
cmps
in
stos
cmp
imul
fwait
loopne
sbb
ins
out
xor
and
or
arpl
add
(bad)
div
test
mov
lods
pop
sti
int3
or
shl
pop
dec
cmp
aad
dec
or
lods
add
out
add
push
sbb
inc
les
adc
mov
ins
mov
mov
retf
rol
or
cli
cmp
fcmovnu
or
sub
sbb
(bad)
call
xchg
mov
ins
cmp
push
shl
jecxz
xlat
lock
sbb
movs
aam
and
fnstsw
pop
inc
sti
mov
add
fsubp
nop
aad
mov
push
mov
mov
pop
pop
stos
nop
rcr
imul
pop
fucom
pop
or
movs
sar
pop
inc
div
rcl
in
and
mov
jmp
popf
movs
mov
cmp
mov
inc
into
aad
mov
jb
int3
mov
fcom
nop
cmps
popf
mov
(bad)
mov
mov
push
nop
and
enter
mov
out
or
mov
push
aas
test
adc
sub
rcr
cmp
pop
mov
daa
or
mov
popa
push
(bad)
and
push
jecxz
inc
mov
int
mov
pop
sahf
mov
call
fistp
into
cmp
add
mov
lahf
icebp
add
xchg
sub
sbb
mov
lods
fiadd
jmp
xor
clc
xchg
push
adc
push
mov
and
psubd
mov
stos
fnstcw
or
ja
ds
fisttp
mov
or
test
stos
pop
dec
mov
and
push
cmps
mov
xor
jl
mul
push
pushw
fcmovu
cmp
pop
sub
xchg
mov
dec
dec
xchg
mov
dec
mov
movs
in
jg
push
mul
pop
arpl
mov
mov
loope
repz
int3
retf
pop
sbb
sub
pop
mov
xchg
xchg
fiadd
(bad)
xchg
cmps
fadd
pop
add
faddp
xchg
bound
push
or
xor
data16
cmp
jmp
leave
jb
int3
inc
ss
adc
pushf
push
fwait
xor
dec
jnp
mov
dec
xchg
ds
dec
or
cli
ja
mov
and
neg
mov
hlt
jp
jno
xlat
sbb
in
adc
fmul
adc
and
pop
leave
ins
jle
mov
xchg
pop
xlat
ds
mov
adc
inc
retf
lds
jno
jo
jle
jecxz
xor
idiv
inc
mov
adc
nop
dec
jno
jnp
loop
ret
mov
push
xor
outs
jge
ins
not
or
mov
xlat
pop
dec
imul
dec
popa
push
or
add
lods
test
sub
sti
outs
leave
dec
mov
and
outs
ret
js
(bad)
daa
std
int
out
or
fcomp
cld
(bad)
imul
jp
mov
mov
les
xchg
pop
xchg
lds
mov
ds
mov
pop
pop
ror
outs
(bad)
int
mov
dec
loope
cs
das
int
gs
pusha
mov
mov
ret
push
popa
retf
pop
inc
cmps
jae
(bad)
mov
cs
xchg
jmp
push
rcl
test
inc
outs
jge
cmp
lods
sub
je
or
hlt
lock
aam
mov
or
xor
sub
sbb
mov
jl
add
add
in
jbe
call
aas
sub
push
daa
pop
sbb
(bad)
hlt
mov
test
xchg
cld
pop
into
add
retf
stos
pop
push
repz
mov
xchg
ins
call
fcomip
inc
and
aad
inc
pop
cmc
mov
adc
sbb
into
sbb
imul
hlt
dec
movs
sbb
std
jbe
jae
stos
popa
jge
dec
lods
sub
dec
loop
mov
sub
mov
lock
cwde
or
sub
dec
idiv
push
cmp
pop
add
ret
inc
mov
add
xchg
cli
and
push
cmps
adc
mov
add
inc
shr
jo
sbb
in
arpl
and
enter
out
out
icebp
inc
dec
out
jbe
dec
daa
rcl
imul
dec
pop
add
shl
retf
xchg
xor
jp
rol
inc
add
adc
lds
pop
xchg
shr
and
mov
(bad)
sub
dec
mov
mov
adc
sbb
mov
shl
xchg
add
gs
repnz
cmc
lods
jp
cld
call
jb
adc
or
int3
cmp
call
fidiv
sub
xor
adc
mov
aam
pop
pop
daa
xchg
(bad)
xchg
and
outs
dec
test
mov
mov
out
mov
mov
ret
sahf
and
ror
push
inc
aaa
xchg
jl
leave
pop
mov
sub
xchg
ss
pop
ret
arpl
std
jp
inc
xor
dec
push
ss
push
(bad)
pop
pop
adc
sub
pusha
call
loop
(bad)
psrlq
add
mov
pop
push
cdq
call
inc
in
fisub
dec
rol
test
test
les
cmp
retf
(bad)
repz
outs
iret
popf
mov
in
cmps
mov
xlat
test
mov
sub
pop
mov
jmp
nop
data16
je
pusha
push
xchg
cmp
jne
inc
sbb
mov
push
and
dec
and
push
test
pop
ret
(bad)
inc
add
shl
jg
rcl
add
ins
fisttp
pop
xchg
jne
in
push
dec
imul
(bad)
pop
and
cmp
mov
stos
mov
push
adc
cli
pop
inc
loop
sbb
leave
cs
retf
sbb
adc
(bad)
push
test
int
adc
fcomp
mov
cmc
js
adc
pop
cmp
fstcw
std
pusha
fstp
inc
cmp
sbb
and
jns
cmp
push
inc
push
fstp
sti
mov
dec
repnz
dec
cli
adc
xchg
sub
jo
sbb
out
and
fbstp
cdq
inc
pop
xchg
out
sbb
push
(bad)
retfw
loope
pop
fild
cmc
mov
test
int3
dec
add
enter
cmp
mov
cmp
out
into
push
daa
test
add
aas
and
sub
or
pop
mov
loope
pop
mov
bound
adc
arpl
push
inc
mov
jo
icebp
dec
call
fucomip
add
ins
cmps
icebp
loopne
dec
mov
clc
xchg
ins
mov
push
into
data16
adc
mov
mov
mov
fsub
mov
dec
fisttp
std
adc
pop
dec
mov
fld
and
cmp
stc
inc
pop
(bad)
pop
inc
inc
add
pop
and
addr16
(bad)
in
push
rcr
mov
cwde
aam
arpl
bound
inc
test
xchg
mov
inc
ret
mov
bound
jae
dec
rcr
push
cmc
adc
pop
xchg
jne
clc
pop
fs
adc
and
rcr
mov
add
pop
sbb
sub
jp
cli
test
sbb
cmp
mov
jl
ds
(bad)
jb
sub
jo
fldenv
nop
daa
mov
push
cld
(bad)
adc
push
lods
repz
jecxz
xlat
cld
mov
and
xor
and
dec
test
pushf
mov
fnsave
xchg
sti
jno
xor
stos
out
dec
cs
cmp
push
jl
jbe
mov
or
das
test
rcr
sbb
leave
das
cdq
xor
xchg
(bad)
inc
sbb
push
jg
into
ins
add
dec
jmp
jns
mov
push
inc
inc
pop
jnp
cld
cmps
repz
and
pop
sub
dec
test
out
int3
jg
pop
enter
add
adc
fs
int3
mov
inc
pop
mov
jnp
inc
cmp
in
sbb
stos
shl
fdiv
les
sub
and
test
cmps
push
(bad)
mov
pop
push
cmp
cs
jbe
add
pop
in
mov
pusha
add
enter
mul
pop
je
jle
jp
sti
adc
push
adc
jg
and
out
fnstcw
xlat
out
(bad)
mov
movs
mov
(bad)
lds
mov
loop
sub
sbb
gs
mov
cmp
int
std
jno
hlt
aas
fistp
mov
cmp
xchg
ds
loopne
xchg
xor
daa
icebp
aad
loop
int3
jg
in
pop
stos
loope
lea
mov
ror
jmp
add
sbb
xor
pop
sub
push
mov
push
pop
(bad)
pop
outs
add
outs
xchg
cmps
push
mov
jge
outs
push
jge
or
retf
(bad)
sub
fnstcw
add
xchg
sti
mov
or
pop
xchg
inc
jno
inc
xchg
and
loopne
aad
jne
rcl
jne
push
std
lahf
mov
or
popa
(bad)
scas
mov
push
push
je
fcmovb
mov
inc
js
loop
retf
mov
sbb
dec
das
mov
xchg
inc
jmp
xchg
(bad)
out
hlt
pop
push
add
lods
int3
lods
add
xor
inc
jb
stos
pusha
psraw
(bad)
jae
out
add
or
repnz
sbb
(bad)
mov
mov
loop
in
pop
xchg
xor
dec
cmovno
cmp
xor
movs
xor
ins
push
loopne
(bad)
and
and
sbb
lods
inc
dec
mov
rcr
cmp
(bad)
std
adc
sub
neg
inc
add
das
jmp
hlt
fmul
mov
sar
clc
cld
push
aam
leave
shl
push
add
sbb
jmp
lods
mov
xor
cmps
pop
adc
dec
jae
lods
mov
adc
out
int3
retf
jae
imul
pop
fs
cli
pusha
mov
sbb
inc
sub
fcomp
das
in
mov
inc
mov
mov
lock
or
fucomp
in
or
mov
sub
mov
mov
mov
push
sbb
ror
or
fsubr
rcr
jge
fild
call
enter
loope
std
jns
aam
or
jmp
sbb
out
dec
or
and
push
movs
mov
in
xor
fcomp
push
sub
sub
mov
daa
inc
push
jp
ins
jmp
mov
cmps
pop
call
ret
into
inc
sbb
dec
call
xchg
pop
cmps
cld
mov
lods
or
pusha
jbe
repz
cmp
les
pop
sahf
fmul
inc
push
enter
dec
mov
jmp
xchg
mov
cwde
arpl
inc
(bad)
mov
(bad)
jno
xor
pusha
xchg
lea
mov
mov
dec
gs
nop
hlt
jl
outs
xor
xor
ret
pusha
push
xchg
xor
pusha
xor
cmc
xor
jle
imul
mov
and
xchg
movs
sbb
scas
jmp
jb
js
dec
mov
in
int3
inc
xchg
jecxz
movs
lods
jmp
(bad)
mov
dec
adc
fild
mov
cmp
dec
mov
pop
pop
das
(bad)
mov
arpl
scas
mov
dec
add
inc
mov
add
jns
enter
repz
or
pop
lock
lahf
daa
pop
add
addr16
mov
or
les
and
mov
push
add
xchg
add
push
cmps
inc
jb
rcr
inc
aas
out
jae
outs
mov
call
fsub
imul
jp
xchg
mov
sub
into
pushf
xor
je
sbb
sbb
ror
cwde
scas
cld
sub
fisttp
mov
cmc
pop
mov
out
adc
out
mov
or
push
mov
xchg
cmp
outs
retf
jmp
icebp
fbstp
xchg
xchg
mov
fmul
ins
daa
and
and
adc
cld
das
loop
ffree
xchg
mov
cld
add
dec
add
pushf
jecxz
and
(bad)
call
ficomp
dec
imul
(bad)
cs
sbb
lods
sbb
mov
mov
push
push
mov
cmp
sub
dec
and
fwait
test
sbb
scas
dec
xchg
xor
loop
mov
(bad)
and
call
push
sbb
pop
adc
dec
add
jmp
test
jae
aaa
mov
fiadd
enter
into
imul
pop
test
mov
mov
pop
mov
jo
pusha
jae
adc
stc
call
cmp
clc
popa
dec
adc
mov
ins
(bad)
or
stos
and
mov
ror
pushf
mov
out
mov
(bad)
jmp
mov
leave
and
xor
enter
and
and
pop
(bad)
movs
stc
scas
in
cmp
push
idiv
test
ficomp
cmc
jg
add
pusha
add
cmc
adc
pusha
lahf
bound
push
push
in
stos
mov
jmp
adc
fs
mov
push
jne
mov
movs
cmps
jbe
cmc
add
push
ret
(bad)
pusha
in
pop
call
dec
sbb
sub
fimul
mov
clc
add
mov
into
pop
cmps
jl
cmp
rol
mov
test
or
fwait
pop
xchg
sbb
shl
out
sahf
fdiv
sti
movs
jle
stos
loope
not
imul
popf
cmps
jnp
fstp
mov
xchg
cmp
stos
adc
mov
int
inc
xchg
pop
add
je
sbb
or
add
cmp
inc
(bad)
aad
push
(bad)
aad
inc
mov
cmp
jns
pop
pop
xchg
push
iret
add
movs
popa
pop
add
in
pop
inc
div
inc
add
mov
(bad)
mov
push
dec
dec
lock
and
ja
push
push
cld
xor
xor
pop
js
jle
jne
je
shl
mov
fisttp
imul
sbb
fwait
out
out
test
test
sbb
stos
cwde
mov
aad
jb
sub
push
adc
rcr
inc
push
add
bound
push
cs
nop
push
sub
jb
pusha
mov
jg
sbb
inc
adc
out
xchg
cwde
sub
retf
xor
lds
int
pop
test
inc
sbb
cmp
mov
out
lds
jb
xchg
lahf
sbb
push
push
call
data16
cmp
push
int3
sub
xchg
pop
aas
mov
inc
xchg
sub
dec
imul
call
or
inc
and
mov
mov
mov
iret
iret
fnsave
fwait
mov
mov
xchg
sbb
xor
aaa
(bad)
cmp
xlat
ins
cmp
sbb
xlat
out
js
(bad)
xor
daa
sbb
sub
cmc
loopne
stc
ds
push
push
in
pusha
mov
into
xor
and
lahf
mov
dec
jp
cmps
inc
mov
mov
mov
(bad)
icebp
ror
mov
shr
mov
lock
ror
hlt
push
retf
pusha
sbb
mov
xor
cmp
mov
or
mov
push
arpl
and
(bad)
ret
jl
scas
clc
pop
repz
push
and
pop
ja
push
cmp
in
in
jnp
mov
or
cmps
(bad)
push
(bad)
cwde
rol
mov
out
ins
cmp
inc
pop
sar
repnz
je
gs
sub
shl
out
(bad)
pop
and
mov
xor
clc
ror
sbb
push
mov
push
mov
ds
test
and
lahf
jns
add
and
jb
xor
ja
mov
loop
xchg
fidivr
loop
(bad)
fnsave
sbb
jno
repnz
fstp
push
add
stos
out
aaa
(bad)
sbb
sub
push
xor
loope
imul
cmps
icebp
push
xchg
mov
mov
lahf
pusha
sub
clc
arpl
aas
and
dec
into
pop
inc
(bad)
sub
xor
sub
xchg
pop
arpl
sub
jle
aam
mov
or
inc
mov
dec
mov
jbe
jno
jge
dec
stc
cli
fwait
sbb
aam
repz
sub
xchg
outs
or
imul
dec
adc
jo
cmp
retf
sbb
jne
int3
retf
mov
movs
pop
xchg
jno
and
sahf
and
push
cli
mov
pop
ja
inc
mov
jno
es
bound
addr16
mov
ja
movs
mov
vpunpckhwd
mov
push
push
dec
stc
cs
cmc
and
xchg
out
(bad)
mov
inc
stos
test
adc
jle
mov
adc
mov
dec
push
push
push
imul
ficom
cld
sbb
aas
shl
popa
lea
sub
repz
push
xchg
jecxz
retf
in
lea
mov
mov
push
cmp
mov
rcl
sbb
cdq
int3
push
mov
popw
movs
movs
fidivr
mov
shl
jb
mov
adc
jno
inc
xchg
scas
stos
xlat
cmc
xchg
hlt
inc
or
imul
cmp
jne
cld
or
mov
jns
fdivr
hlt
jg
jae
leave
adc
popf
repnz
daa
test
and
xor
jo
ret
xor
movs
lods
jns
out
jne
rol
test
push
add
rcr
fidiv
(bad)
jg
fs
(bad)
out
push
push
arpl
xor
sbb
dec
mov
(bad)
mul
add
xchg
out
stos
fldenv
cmp
and
xor
test
mov
outs
out
xor
test
xor
pop
inc
mov
cmp
test
inc
and
mov
pop
enter
mov
push
add
dec
push
fs
mov
fs
ins
out
sbb
mov
sbb
or
(bad)
pop
jns
les
adc
cmp
mov
push
ins
int3
mov
push
xchg
not
mov
outs
loop
xor
neg
dec
push
mov
stc
jmp
sub
into
add
es
add
aam
enter
pop
dec
push
hlt
push
std
lahf
xchg
es
lock
shl
jb
test
and
cmp
mov
aam
pusha
push
push
jno
out
test
shr
push
mov
and
sub
cld
cmps
ds
add
cmc
mov
retf
sbb
loopne
sbb
mov
inc
pop
xchg
call
xchg
in
loope
pop
mov
addr16
jge
cmp
gs
sbb
xor
dec
jbe
xor
push
test
adc
cmp
cmc
and
push
add
xchg
aaa
inc
mov
xchg
(bad)
mov
add
cmp
cld
sbb
lock
sub
mul
adc
(bad)
loopne
repnz
add
faddp
into
adc
ror
mov
and
add
cmp
repnz
ret
jae
xchg
stc
add
aam
lock
cmc
cmc
repz
mov
dec
faddp
push
data16
fidiv
adc
(bad)
ins
pop
jne
xor
mov
cmp
je
mov
sbb
ficom
jb
pusha
adc
jnp
push
add
fmulp
aas
adc
or
mul
push
xor
jge
adc
call
xlat
pop
adc
inc
hlt
pop
es
push
jecxz
test
xor
int
pop
fsub
inc
jecxz
shl
mov
inc
rcl
or
dec
mov
hlt
or
pop
xchg
cmp
test
adc
fist
push
mov
cmp
mov
adc
sub
repz
sahf
cmp
or
inc
adc
push
mov
cli
inc
fsub
push
xchg
loop
test
stos
add
fstp
and
(bad)
lock
add
aaa
ds
bound
mov
popf
in
stc
je
movs
in
and
mov
je
mov
fild
jno
sbb
aaa
js
jg
test
cmps
add
ins
or
cwde
xor
sub
mov
shl
jo
xor
jb
bound
mov
out
cmp
aad
xchg
fidiv
xor
test
loope
add
mov
out
aam
imul
cmp
cwde
aad
adc
jg
mov
pop
mov
test
adc
dec
pop
cmp
xchg
mul
jp
add
clc
je
and
jl
test
jb
fadd
dec
rep
mov
es
adc
std
pop
loop
ins
ret
pop
xor
fs
(bad)
out
add
inc
pushf
int3
mov
movs
cwde
cmp
repnz
in
fimul
pop
loop
bound
pop
mov
adc
inc
jle
or
xchg
loopne
adc
and
add
out
shl
pop
cmp
mov
xchg
aas
sub
xchg
pop
pop
add
ror
sbb
ins
or
(bad)
stc
mov
rcr
bound
adc
aad
sub
in
xchg
out
mov
push
xor
lods
mov
xor
mov
jmp
fistp
daa
sub
push
fnsave
xchg
outs
mov
ror
inc
(bad)
(bad)
jmp
sahf
mov
mov
outs
cli
call
sub
mov
or
clc
sub
jae
sbb
jge
sub
and
(bad)
and
inc
popf
retf
sbb
add
in
push
sti
mov
fs
ja
lods
call
mov
repz
movs
in
sub
popa
sub
xor
addr16
movs
out
sub
lahf
test
mov
add
jns
mov
add
out
inc
imul
imul
mov
and
ret
(bad)
shr
test
cs
add
repz
ja
loope
cs
sar
repz
cs
jl
adc
xchg
push
int3
push
mov
pusha
mov
sahf
cmp
xchg
xor
js
mov
inc
and
in
ja
mov
leave
add
mov
daa
xor
xchg
sub
xor
pop
loopne
test
lea
popa
or
leave
adc
push
call
out
ds
pop
pop
jmp
xor
jl
mov
jmp
or
popa
sahf
sbb
jmp
xor
pop
and
mov
test
xor
mov
mov
icebp
retf
aas
je
and
repz
and
test
popa
(bad)
imul
in
out
(bad)
inc
mov
mov
cs
retf
or
xor
xor
aam
pop
sbb
int
(bad)
in
out
(bad)
adc
add
ins
popf
popf
mov
retf
push
sbb
stos
mov
call
inc
div
outs
push
aad
daa
sbb
add
int3
xor
les
xchg
sbb
jmp
push
push
loopne
adc
(bad)
test
je
fmul
dec
mov
hlt
loope
cmc
push
loope
jmp
inc
popf
mov
cmp
xor
adc
cs
sub
mov
(bad)
mov
cwde
in
rol
push
test
and
das
popa
js
mov
mul
inc
adc
test
enter
mov
nop
test
sub
mov
sub
repnz
add
fimul
dec
inc
mov
aas
push
xchg
fcomp
push
retf
sub
fwait
pop
mov
fsub
sti
(bad)
imul
sahf
or
pop
pop
cs
in
mov
imul
or
out
and
ja
lahf
mov
cmp
add
mov
jnp
out
xchg
fldenv
sti
sbb
or
or
xor
sub
fldenv
mov
rcl
dec
pusha
xor
iret
jae
gs
in
ds
sti
out
mov
or
pop
or
xor
adc
adc
ins
push
cmp
xor
cmp
jp
mov
mov
call
adc
stos
pop
rcl
lds
js
jo
icebp
repnz
xor
(bad)
sbb
cwde
sti
sub
adc
push
test
imul
cmps
inc
test
push
cmp
push
mov
rcl
mov
aaa
jl
push
xchg
and
popa
div
test
or
xor
add
gs
jp
jl
cmp
pop
add
sub
hlt
cmp
mov
cmp
mov
sub
or
lds
sbb
inc
mov
xor
lods
cli
stos
dec
xchg
imul
xchg
push
xchg
(bad)
shl
or
imul
cld
or
cmp
sub
sub
jl
mov
jle
aad
adc
leave
push
loope
push
jbe
enter
(bad)
int3
xchg
ins
ins
enter
sbb
dec
fisubr
sub
cmp
mov
stc
(bad)
cmp
das
loope
mov
leave
push
add
mov
js
dec
out
cs
loop
jmp
sbb
call
cmps
adc
ret
cmp
cmp
ss
lds
dec
dec
cmps
aad
sub
push
mov
iret
movs
in
mov
out
out
xchg
mov
(bad)
pop
sti
push
cmps
sti
sahf
xchg
mov
inc
jns
in
sub
and
out
jne
jle
jl
imul
mov
aas
inc
loopne
bound
mov
push
stos
xor
xchg
push
sbb
mov
enter
dec
sub
stos
repz
scas
mov
dec
cli
test
pop
push
mov
jl
mov
cmp
cmp
retf
sub
sub
mov
fwait
mov
ret
mov
(bad)
stc
test
push
gs
inc
push
xor
pusha
mov
(bad)
mov
pop
repnz
jg
add
call
or
xor
jbe
sub
and
fsubp
repz
or
imul
loope
ret
and
dec
mov
ret
xlat
test
adc
or
cmp
mov
mov
hlt
push
pop
out
mov
(bad)
leave
xor
inc
pop
sub
aaa
jmp
aad
cmp
loop
and
cli
sbb
imul
cmp
pop
imul
sub
sahf
dec
dec
bound
adc
test
aaa
pushf
mov
clc
es
adc
or
movs
jle
je
xor
arpl
jmp
adc
stc
popa
jae
cmps
push
xchg
retf
out
jo
xchg
test
mov
hlt
stos
cli
leave
push
jne
leave
sar
scas
fwait
push
lahf
adc
std
popf
loop
or
repz
jo
pop
sub
iret
sbb
mov
cmp
or
fisubr
sti
repz
pop
xchg
xor
inc
or
dec
jno
mov
cs
push
dec
mov
ins
frstor
xchg
mov
sub
(bad)
add
sar
xchg
pop
adc
(bad)
retf
mov
mov
inc
xor
mov
push
adc
lods
test
sbb
cmp
cdq
push
stos
inc
bound
jno
int3
mov
jp
or
mov
push
leave
call
fiadd
or
call
in
out
js
sbb
ror
pop
int
xor
nop
clc
or
mov
sti
push
inc
pop
call
enter
fimul
adc
push
das
push
(bad)
nop
stc
stc
test
mov
pop
gs
fnstenv
gs
add
clc
stos
sbb
popa
sbb
cmp
add
popa
data16
sahf
pop
jecxz
pop
dec
mov
or
cmp
stos
cwde
pop
test
mov
adc
or
jne
pop
xchg
jns
xchg
dec
push
jb
add
sti
fucom
mov
sbb
sbb
nop
int
cmp
cmps
mov
push
sub
add
mov
fwait
xor
push
push
mov
jl
sbb
jnp
(bad)
mov
dec
addr16
int3
gs
cli
retf
dec
outs
dec
cmps
(bad)
mul
push
xor
enter
inc
dec
lea
cmp
fldenv
push
lods
add
push
rcr
loope
push
cmp
call
xchg
icebp
push
dec
sbb
inc
cmc
aas
test
aam
jb
jp
out
push
hlt
jmp
push
jne
sbb
sub
aaa
jnp
or
mov
iret
aad
inc
inc
stos
enter
mov
lea
inc
div
pand
mov
enter
inc
cmps
dec
mov
(bad)
rol
pop
fstp
mov
mov
pop
ficomp
or
add
xor
add
push
mov
inc
add
cdq
mov
push
rcr
and
ds
pusha
inc
xchg
jns
mov
sub
add
mov
dec
ret
jl
sbb
jns
sub
adc
outs
sub
aam
mov
cmc
mov
popa
dec
mov
stos
pmaxsw
push
jle
std
add
push
int
popf
pop
es
push
ror
or
(bad)
cwde
mov
dec
mov
xchg
cmp
daa
lods
aam
out
mov
mov
test
push
in
push
es
push
and
mov
inc
adc
xchg
lods
push
(bad)
out
dec
ins
adc
imul
sub
(bad)
jb
fst
sbb
sbb
cld
ret
imul
push
idiv
imul
call
sahf
jbe
inc
(bad)
mov
movs
cmp
call
loop
pop
movs
sbb
push
mov
loope
xor
mov
jmp
cld
ret
in
or
xor
adc
(bad)
in
jg
(bad)
dec
das
xchg
or
jecxz
mov
shl
or
sub
pop
cmp
adc
xor
jne
mov
mov
mov
adc
add
ins
js
and
mov
push
adc
pop
cmps
jmp
inc
lods
jmp
xor
mov
jns
xor
aaa
jnp
adc
fimul
add
cmp
sar
pop
lock
int
cmp
fbstp
dec
dec
std
add
ss
or
sub
mov
mov
ins
mov
mov
(bad)
loope
xchg
scas
aaa
lahf
ins
(bad)
loope
pop
cmp
mov
test
jae
adc
push
pcmpeqw
jp
push
pop
xchg
add
pop
push
add
inc
arpl
or
xchg
inc
pop
push
cmp
int3
pop
daa
bt
jmp
fsub
out
push
in
aas
push
and
in
jmp
loop
inc
fadd
sahf
xchg
adc
scas
cs
sub
scas
ds
push
inc
pop
jo
mov
retf
mov
xor
push
rcl
jmp
cs
xchg
cmp
lahf
mov
fiadd
lods
lea
push
sub
arpl
and
in
ins
mov
sbb
mov
js
push
jb
jmp
gs
and
hlt
in
(bad)
in
xor
lods
dec
push
out
lds
cli
je
pusha
mov
(bad)
jmp
mov
ja
jp
or
adc
fs
lahf
test
jle
adc
test
scas
mov
outs
call
pop
xor
add
arpl
mov
aaa
mov
fwait
out
shl
push
mul
jne
clc
rol
or
fwait
dec
into
sbb
xchg
ds
rcl
xor
inc
xor
lods
adc
dec
cmps
pop
loop
or
into
xchg
cld
cmp
shl
clc
scas
cli
jle
mov
fldenv
inc
(bad)
sbb
xchg
jl
mov
and
dec
inc
retf
push
xchg
adc
mov
jne
lea
mov
scas
leave
(bad)
fidiv
je
mov
lods
inc
adc
xor
lea
(bad)
pusha
retf
xor
pop
mov
push
push
dec
lods
pop
std
or
aaa
adc
pop
les
xor
dec
cmps
sub
in
test
(bad)
xlat
mov
sub
inc
hlt
jmp
ja
inc
mov
(bad)
hlt
pop
fcom
fbld
cmp
sar
and
mov
xor
xor
shl
fstp
lods
cwde
push
pop
ja
inc
dec
test
cmc
fwait
sbb
push
dec
xor
shr
jno
xor
pop
adc
sbb
push
and
std
retf
inc
adc
jae
add
xchg
rcl
inc
ds
or
call
pop
std
inc
dec
sub
sbb
mov
(bad)
(bad)
pushf
jae
imul
xchg
call
clc
stc
pop
adc
lock
test
jnp
pop
mov
popf
cmp
inc
push
std
rcl
test
pop
mov
inc
inc
jge
inc
lods
and
pop
push
dec
xor
xor
dec
add
jg
pushf
pop
adc
cmp
xchg
fcom
inc
js
stos
jbe
pop
mov
jnp
(bad)
std
mov
ret
pop
mov
aas
push
cmc
bound
xchg
lea
mov
ficomp
add
cmp
and
cmp
mov
mov
scas
fwait
or
shr
add
and
nop
retf
call
out
aaa
cli
test
add
pop
bound
mov
mov
ret
dec
mov
mov
outs
mov
jbe
push
cli
rcl
mov
add
jl
lock
sbb
and
add
test
pop
outs
inc
mov
mov
inc
mov
das
sbb
sub
cmp
jbe
mov
movs
or
or
push
sub
push
pop
mov
das
xor
or
hlt
aam
sub
mov
scas
cld
inc
push
pop
pop
pop
js
aaa
gs
push
stos
mov
fisttp
ins
shl
or
loope
jmp
xchg
add
es
dec
sub
repnz
xor
mov
lock
ins
push
aaa
rol
cmp
or
and
cld
test
dec
in
adc
(bad)
mov
xchg
sub
in
push
xlat
out
mov
retf
fs
mov
out
shl
addr16
add
iret
iret
jo
dec
pop
push
fcomp
pop
repz
outs
jge
mov
rcl
cmc
addr16
pop
rcr
and
pushf
mov
sbb
rcr
imul
push
fmul
pop
jp
adc
hlt
sub
jmp
jecxz
int
adc
sbb
mov
inc
push
mov
neg
and
mov
xchg
test
or
repnz
mov
rcl
popa
fadd
sbb
sub
add
mov
sbb
jge
les
mov
sbb
ret
or
aad
mov
popf
ret
(bad)
(bad)
ret
ret
retf
ds
aam
(bad)
sbb
dec
pop
test
int
inc
cdq
repz
xchg
jbe
dec
retf
mov
jp
retf
les
push
jns
(bad)
(bad)
cld
bound
mov
bound
les
imul
jle
and
dec
inc
sbb
(bad)
sub
test
mov
jb
rol
mov
movs
pop
aas
pop
or
scas
ins
fs
shl
sub
dec
into
pop
std
cmp
into
push
xchg
mov
fnstenv
inc
mov
sbb
sti
mov
add
pop
xchg
lods
mov
out
mov
repnz
fmul
test
lods
pushf
mov
pop
stos
push
mov
mov
in
stos
cmp
ds
sbb
push
cmp
stos
jae
xor
pop
repz
jno
sti
sbb
(bad)
clc
pushf
into
and
cmp
lock
jb
movs
call
and
mov
imul
push
push
fidiv
cmp
pop
popf
cmp
(bad)
jmp
xor
arpl
sti
mov
lods
xor
jb
cmps
sbb
cli
mov
add
(bad)
lods
xor
and
jns
pop
div
xor
inc
cmc
les
in
retf
xchg
stos
daa
int3
push
loopne
jno
dec
push
jns
xchg
xchg
mov
(bad)
sbb
xchg
aaa
ja
xchg
(bad)
frstor
(bad)
imul
inc
in
push
stc
inc
dec
sub
in
pop
in
sbb
inc
push
mov
mov
test
jge
xchg
xchg
inc
adc
cmps
mov
out
jne
sahf
ja
jmp
call
jmp
stos
movs
icebp
xor
push
ret
movs
and
mov
outs
cmps
jbe
icebp
stc
adc
(bad)
inc
pushf
sbb
sub
daa
cmp
mov
dec
gs
mov
scas
int
jge
pop
retf
add
lods
(bad)
jno
xchg
lods
jge
mov
and
jecxz
xor
xchg
(bad)
es
das
pop
in
rcr
call
push
pop
sti
out
mov
sub
pop
add
xor
push
push
js
lahf
mov
and
dec
sub
pop
icebp
pop
ins
add
movs
inc
call
jmp
int
repnz
sub
jmp
lods
adc
sub
clc
sub
je
repnz
jge
mov
lds
push
mov
mov
test
sbb
adc
sub
mov
retf
push
int
add
call
dec
dec
stos
xchg
and
push
pop
fist
es
xlat
adc
xchg
sahf
mov
or
lea
pop
js
shr
rsm
push
add
push
es
mov
cmps
add
dec
or
pop
ds
mov
inc
movs
test
pop
sub
or
jmp
repnz
or
fwait
cmp
pop
add
mov
mov
push
jge
clc
pusha
pop
mov
and
call
push
mov
push
push
inc
aad
pop
out
dec
sub
in
mov
mov
cmps
push
cmps
cmps
sub
cmp
xor
or
inc
ins
je
xchg
bound
ret
xor
(bad)
add
adc
add
or
pop
enter
jbe
jg
(bad)
ficom
aas
fld
cli
cmps
xchg
push
in
ficom
cld
mov
cmp
fcom
out
xchg
lock
int
dec
ins
je
dec
call
test
lock
push
xchg
push
xor
rol
sbb
cmp
in
fld
push
and
jno
test
mov
and
dec
or
cld
or
inc
xchg
pushf
sub
cmp
daa
test
out
inc
into
mov
mov
push
pop
test
jnp
lds
in
pushf
aam
(bad)
sbb
xor
out
xlat
pop
stos
mov
inc
mov
std
cld
ins
adc
stos
dec
push
mov
mov
ffree
jmp
loop
cwde
push
adc
cmp
je
xchg
aaa
jmp
dec
mov
adc
inc
jle
ja
cmp
push
pop
inc
sub
std
ja
mov
leave
out
mov
ja
pushf
nop
sbb
cmc
imul
adc
adc
ror
cmp
add
out
jl
outs
and
retf
je
xor
rol
push
adc
push
rcl
(bad)
out
les
jecxz
jmp
cwde
cli
adc
jmp
sub
cmp
ss
mov
rol
mov
ins
xchg
not
retf
or
(bad)
sar
cmps
jle
xor
jno
ss
mov
xchg
jge
push
cmp
dec
pop
sub
(bad)
adc
pop
xlat
jge
xor
inc
mov
fdivr
repnz
jne
sbb
test
popf
int3
add
rol
sbb
retf
jmp
cli
popa
stc
movs
push
inc
loopne
fcmovu
stos
rcl
sub
mov
xor
inc
pop
repnz
dec
ficom
sbb
pop
xor
test
fs
mov
xchg
shr
aad
ds
call
or
and
xchg
mov
icebp
dec
dec
inc
out
inc
push
jne
inc
or
imul
mov
dec
shl
cmp
shr
xor
stos
fist
lock
dec
and
dec
push
push
adc
test
in
add
push
adc
sbb
sbb
dec
repz
jg
mul
cmp
xchg
test
outs
push
outs
sub
and
(bad)
adc
add
lods
outs
outs
xchg
pop
scas
es
fstp
ret
mov
sub
aad
sbb
out
inc
fisttp
pop
cmps
out
repz
or
mov
ffree
int3
sti
ja
ror
xor
sub
add
xor
loope
mov
nop
sub
fnstsw
lock
xor
rcl
xor
sar
sub
je
retf
dec
cmc
adc
popa
and
mov
outs
inc
inc
cwde
popf
psrlq
out
cmps
lahf
bound
cli
outs
jecxz
icebp
jae
push
fst
test
xchg
pop
xor
hlt
mov
sbb
sbb
popa
cli
in
rol
push
sbb
jmp
mov
call
scas
xchg
xchg
xchg
mov
pop
in
pop
adc
(bad)
dec
shl
xchg
pop
sbb
xor
mov
push
fisubr
xchg
or
imul
cmp
jg
sbb
clc
bound
fisubr
mov
in
mov
aam
adc
enter
nop
(bad)
jg
out
les
xchg
add
in
fdivp
punpcklbw
lods
ret
sub
popf
inc
push
sbb
jmp
movs
push
fsub
cmp
jbe
(bad)
ins
stc
ficomp
pop
adc
sbb
and
xchg
cmp
jno
int3
ins
aad
test
fadd
mov
dec
int3
scas
cmp
mov
or
and
test
mov
push
inc
leave
icebp
lods
(bad)
enter
sub
or
add
pop
cmp
push
std
xchg
cmp
fwait
dec
mov
imul
std
jno
aas
ret
cli
jo
mov
push
and
sbb
mov
ror
fdivr
outs
push
xchg
test
mov
iret
mov
fisttp
mov
pop
hlt
outs
stos
repnz
push
popa
mov
mov
stos
mov
inc
dec
sbb
sbb
push
pushf
sbb
and
pop
mov
jmp
mov
xor
dec
inc
add
aad
ins
pop
sbb
mov
or
jno
jnp
out
sar
and
xchg
clc
push
adc
dec
mov
dec
jb
fisttp
xchg
add
(bad)
mov
mov
ins
jne
jecxz
sbb
pusha
sub
rol
cwde
leave
mov
push
pop
ret
cmp
mov
add
cld
test
inc
jmp
pushf
mov
or
inc
mov
sbb
(bad)
cmps
xchg
push
test
adc
call
inc
xchg
movs
xchg
cmp
mov
not
(bad)
addr16
dec
sbb
mov
lods
inc
lods
ret
push
inc
ds
xlat
xor
sub
mov
jle
sahf
jno
jmp
in
mov
sbb
adc
hlt
and
imul
add
pusha
test
out
pop
inc
xchg
or
jae
inc
pop
mov
imul
loope
push
mov
adc
adc
in
push
loop
enter
jns
jae
jne
shl
not
fiadd
jne
push
test
mov
(bad)
mov
push
sub
inc
dec
pusha
je
jge
arpl
pop
adc
test
(bad)
lods
sub
out
mov
add
fdivr
mov
mov
fs
or
dec
loope
hlt
push
adc
xchg
sbb
data16
cli
ret
jge
mov
(bad)
bound
xchg
mov
or
dec
ret
adc
call
bound
mov
mov
fld
outs
push
dec
cmp
mov
sar
ss
xchg
lahf
mov
in
(bad)
sar
fisubr
call
or
xor
(bad)
fiadd
push
jle
stos
shl
pushf
imul
pushf
adc
ds
or
mov
pusha
sub
shl
cmp
or
scas
dec
dec
ds
pop
sahf
ss
lea
adc
sbb
or
test
shl
pop
arpl
call
shl
dec
pop
mov
sub
shl
cmp
sbb
pop
out
xlat
test
mov
mov
push
das
mov
(bad)
fs
dec
inc
jno
cmp
neg
xchg
adc
fisub
ja
(bad)
call
imul
fst
and
xchg
js
push
and
shl
sub
xor
push
js
sar
repz
mov
sub
aas
jns
jle
xor
dec
xor
retf
shr
xchg
jne
sbb
lea
fwait
or
dec
adc
sbb
jg
dec
cdq
xchg
repnz
data16
inc
xchg
pop
imul
(bad)
(bad)
fadd
fsub
mov
fdivr
inc
inc
fwait
push
mov
aas
lds
add
into
fsubr
pop
imul
ds
mov
inc
cmps
xchg
mov
inc
inc
pop
call
adc
das
stc
vpmacssww
pusha
stos
xor
adc
dec
fadd
inc
enter
jmp
mov
and
fist
sbb
ja
enter
cmp
popa
pushf
mov
aas
call
mov
add
ret
xor
xor
leave
clc
jg
fwait
inc
jo
(bad)
pop
data16
leave
mov
cli
repz
jle
pxor
pop
ja
(bad)
fcmovnbe
call
inc
int
inc
outs
push
inc
sbb
mov
sbb
mov
cmp
jp
push
imul
in
xchg
ret
sbb
fs
or
dec
xor
fwait
call
in
test
push
cdq
pop
pop
cmc
les
call
add
pop
inc
push
dec
sbb
into
cmp
add
mov
int
out
imul
in
gs
ss
mov
gs
test
xchg
je
lods
inc
push
ret
mov
cmc
outs
or
add
mov
jp
es
inc
cdq
mov
push
lods
dec
ror
push
sub
loopne
add
cwde
(bad)
fcmovnb
retf
arpl
fs
xor
loope
jbe
or
sub
jl
mov
sbb
push
scas
or
in
jle
sub
xchg
fisttp
jno
jge
inc
shl
stos
cmp
in
push
loopne
pop
dec
pop
out
stos
fistp
rcr
ret
popa
dec
addr16
shr
mov
pop
dec
add
sbb
loopne
pop
mov
adc
lahf
test
sub
xchg
push
fst
bound
and
(bad)
push
pop
mov
repnz
pop
mov
cmp
(bad)
jle
add
mov
das
lahf
int
shl
(bad)
test
fyl2x
imul
push
repnz
into
ins
retf
adc
fisttp
jge
jb
and
push
xor
pushf
push
int3
xchg
sti
ktestb
in
xchg
jnp
repz
gs
call
cmp
xchg
pop
fs
aas
fidivr
xchg
sub
int
jnp
cmp
jle
aam
push
repz
mov
mov
and
lock
sar
mov
xor
loope
mov
gs
push
xchg
adc
arpl
jno
mov
adc
fstp
stc
dec
mov
push
aam
xchg
je
and
lahf
add
jmp
adc
cs
push
leave
ds
adc
inc
or
je
(bad)
mov
je
mov
call
push
lea
pop
sti
cmps
pop
std
shl
push
lea
lods
lods
cmp
test
dec
mov
int3
jmp
in
push
fsubr
jae
mov
xor
call
mov
popa
add
cmp
pop
popf
mov
xchg
xor
(bad)
cmps
(bad)
sub
call
push
mov
mov
dec
jb
cmp
jae
pop
rcr
fstp
mov
scas
or
jne
xor
jg
not
mov
cmp
movs
mov
sahf
dec
repnz
scas
jecxz
in
pop
adc
jmp
inc
inc
or
sbb
into
nop
xlat
movs
cmp
inc
rcr
dec
or
mov
sub
test
pop
sub
(bad)
repnz
imul
je
ficomp
xor
js
mov
mov
and
jl
pop
jg
or
dec
push
dec
pop
cld
js
js
dec
movs
fst
sub
push
mov
(bad)
dec
mov
jbe
and
fcom
add
mov
mov
out
inc
xchg
inc
addr16
loop
sub
push
popf
in
les
(bad)
leave
hlt
pop
pusha
xor
xor
adc
adc
or
push
add
(bad)
sub
daa
add
pop
sbb
out
jmp
push
inc
lds
sub
clc
repnz
mov
aam
clc
sub
retf
nop
loopne
cdq
fwait
mov
arpl
sbb
out
call
ja
jp
xor
sub
inc
mov
mov
xor
rep
sbb
pop
pushf
data16
in
test
or
xchg
ror
rol
adc
stos
dec
movs
loop
hlt
mov
sub
ja
les
out
js
inc
adc
mov
ror
sub
xchg
adc
xchg
xchg
cmps
mov
jnp
fmul
jmp
and
push
jecxz
aam
pushf
mov
mov
mov
stos
rcl
and
inc
jmp
push
mov
ja
mov
jle
fisttp
jge
es
mov
je
mov
iret
aas
nop
push
cmps
xor
inc
xor
daa
adc
push
ja
add
cld
fist
lods
call
out
mov
rol
add
shl
pop
jl
pop
inc
xor
pop
(bad)
retf
add
mov
sub
fcom
imul
xor
out
das
fwait
mov
xor
das
rol
add
mov
mov
mov
mov
call
mov
ds
cmp
ss
mov
shr
dec
je
pop
mov
cmp
jns
imul
call
cmp
fdiv
xchg
setl
inc
cld
pop
ret
out
pop
mov
or
adc
cvtps2pi
add
into
mov
pusha
lock
int
xchg
inc
icebp
ins
inc
jmp
repnz
out
enter
(bad)
jle
xlat
sub
push
mov
jle
add
movs
mov
in
and
jbe
pop
std
sbb
addr16
es
inc
pop
call
push
outs
xchg
jge
pop
push
int3
mov
jg
lods
stc
mov
jmp
pop
das
push
jp
cmp
out
xchg
test
shl
pop
jecxz
shl
xchg
addr16
jo
mov
and
sbb
xor
outs
xchg
leave
jns
adc
aas
(bad)
or
mov
mov
imul
cld
pop
push
(bad)
pop
imul
mov
test
sub
add
arpl
aaa
or
js
(bad)
loope
adc
lods
jmp
addr16
and
addr16
cmp
mov
sub
mov
les
push
test
push
ret
or
sbb
outs
mov
cmp
jmp
sbb
je
pop
fs
add
int
out
xor
mov
lods
aas
dec
test
adc
mov
adc
add
push
xchg
sbb
xor
dec
gs
cld
or
(bad)
mov
int
add
fisubr
or
xchg
adc
mov
sub
mov
inc
xchg
out
and
icebp
dec
push
nop
jmp
add
pop
sti
inc
jmp
pop
nop
test
rcl
lock
mov
into
enter
or
outs
push
mov
movs
ret
push
out
sub
leave
xchg
in
retf
int3
or
pop
cmp
pop
xor
pop
je
dec
mov
lock
push
ins
(bad)
xchg
sbb
xor
push
dec
jmp
mov
sbb
es
mov
mov
loop
jae
ret
cmp
xchg
fwait
test
popf
pop
and
cwde
repz
xor
clc
stos
mov
lea
and
push
xchg
push
push
call
sbb
xchg
cdq
inc
xlat
pop
imul
and
(bad)
jmp
mov
iret
out
push
in
cmp
daa
aad
xor
imul
cmps
jecxz
push
movs
mov
mov
sbb
psubq
nop
xor
or
ficom
js
and
mov
cwde
sbb
pop
in
mov
pop
push
ins
scas
mov
mov
loop
jl
mov
mov
mov
jg
sub
jmp
pop
and
inc
cdq
fadd
pop
sbb
pop
and
loope
cmps
jae
add
pop
leave
jl
or
cmp
cmps
xchg
add
jge
retf
mov
fdiv
jns
sahf
jae
and
push
data16
aam
loope
rcl
sbb
clc
sbb
mov
jmp
sub
faddp
pop
push
jl
aaa
adc
xchg
xchg
ins
add
fld
cli
leave
mov
aaa
aas
gs
hlt
add
and
stos
std
lea
pop
in
and
les
cdq
add
push
inc
mov
(bad)
not
sbb
rol
ret
js
push
pop
sar
outs
jle
outs
(bad)
mov
jmp
push
adc
inc
add
dec
xchg
dec
xlat
cmc
mov
and
aas
in
rol
sub
aas
sar
test
and
jle
out
mov
jge
cs
jne
dec
inc
add
js
add
and
sti
cmp
push
mov
mov
dec
inc
lds
cs
std
mov
(bad)
pminsw
int3
add
push
js
xlat
sahf
out
sub
mov
stc
repnz
cs
int3
inc
popf
hlt
jecxz
add
pop
fs
adc
jbe
rol
xchg
loop
outs
mov
jns
arpl
push
je
ja
cmp
lods
or
pop
std
test
and
pop
push
pop
or
ss
ret
fwait
cmp
dec
xchg
add
ss
scas
movs
inc
fs
lock
mov
(bad)
xchg
sub
(bad)
dec
repz
jmp
daa
xor
test
mov
xor
inc
je
cs
je
stc
mov
xchg
jo
push
jmp
inc
xlat
jno
add
punpckhwd
and
ins
mov
or
dec
pop
fmul
loopne
dec
js
scas
xchg
sbb
jne
bound
and
mov
dec
aas
push
dec
cwde
mov
fimul
arpl
call
in
xchg
fwait
sub
xchg
and
aad
add
jl
xlat
loop
inc
ret
test
outs
mov
jae
iret
cmp
pop
cmc
mov
outs
push
xor
popa
ds
mov
mov
xor
mov
push
icebp
add
(bad)
adc
ss
out
mov
ds
(bad)
ds
movs
(bad)
and
xchg
add
and
dec
push
push
fs
test
les
dec
scas
jne
sub
jmp
xor
lds
jge
cmp
jp
inc
jb
dec
mov
dec
sub
fs
xchg
mov
cld
inc
xchg
bound
jo
fsub
mov
adc
pop
and
imul
dec
das
jmp
cmp
dec
adc
jmp
cmp
mov
inc
add
xor
mov
cdq
pop
add
repnz
sub
push
pop
and
(bad)
std
push
cwde
loopne
sbb
jp
and
dec
imul
rol
int
test
ds
inc
and
cmp
sub
stc
sub
sbb
jno
jmp
xchg
fild
xor
inc
jno
std
xchg
sbb
cmp
adc
or
xchg
(bad)
out
mov
stos
cli
cli
xchg
cmp
jo
inc
dec
mov
pop
iret
fs
les
(bad)
(bad)
int3
inc
cmps
imul
test
inc
and
cmp
mov
pop
cmps
jb
push
test
sub
icebp
jp
movs
fs
push
lock
sub
fs
lahf
in
jp
test
icebp
and
loop
das
sub
div
lock
jmp
mov
sbb
(bad)
cld
push
cli
shl
adc
movs
hlt
outs
and
jb
iret
xchg
jno
sar
jl
sub
adc
scas
bound
popa
scas
clc
mov
sbb
dec
mov
push
sbb
xor
outs
cmp
iret
and
pop
jo
xchg
loop
mov
and
ins
mov
popa
mov
cmp
adc
loopne
mov
jmp
jno
cmc
jecxz
jg
outs
xor
inc
sub
jmp
dec
xchg
aaa
pop
cs
cld
pop
call
data16
lods
dec
add
cmp
jl
nop
push
mov
jmp
(bad)
sub
xchg
push
mov
sbb
loop
ins
pop
or
pop
stc
adc
fwait
xchg
and
xchg
mov
xchg
js
jmp
ret
cmp
sti
sbb
aam
sbb
(bad)
in
mov
test
push
mov
adc
push
xchg
iret
pop
fbld
xchg
lods
jno
xchg
je
push
push
cmps
ss
cmp
cmp
fldenv
push
xor
icebp
dec
add
xor
fidiv
sub
mov
imul
and
loopne
retf
inc
dec
xor
mov
xchg
test
inc
into
mov
add
jp
fmul
bound
icebp
and
pop
icebp
iret
or
aam
sub
cmps
movs
call
aas
fcom
xchg
xor
das
out
add
push
popf
fnsave
add
sti
jle
cld
pop
xor
jmp
sahf
scas
mov
push
and
lods
jmp
or
xchg
repz
jno
sbb
add
sub
push
(bad)
push
js
int
call
mov
xor
mov
ja
ror
es
mov
icebp
mov
in
push
pop
mov
xchg
ds
and
fiadd
and
add
xor
xor
mov
daa
lock
sti
stos
mov
push
outs
je
or
pop
push
mov
lea
mov
mov
not
cs
mov
mov
cmp
mov
adc
lock
xor
sahf
cmp
jnp
sub
mov
(bad)
mov
mov
(bad)
dec
movs
stos
and
outs
or
mov
inc
sub
out
and
push
fucomip
ret
scas
inc
adc
jno
fsubrp
sbb
sub
mov
pusha
into
push
push
xchg
jnp
addr16
xchg
lea
add
sub
or
dec
aad
dec
mov
or
dec
cmp
add
dec
mov
pop
pop
jge
xor
nop
xlat
adc
shr
push
mov
push
push
or
ins
mov
movs
inc
or
sar
retf
inc
adc
imul
cmc
or
xchg
jo
outs
test
dec
in
iret
sub
push
mov
je
or
jno
fdiv
dec
sub
xor
rcr
jecxz
test
or
lahf
inc
popf
inc
dec
jb
aad
shl
(bad)
or
mov
(bad)
adc
pushf
cwde
sti
scas
pushf
mov
or
pop
ret
dec
enter
mov
mov
push
in
cmp
gs
xchg
mov
aas
mov
retf
popf
das
xchg
inc
sub
enter
(bad)
sar
out
jnp
pop
test
ss
dec
jg
fidiv
inc
inc
loope
adc
lds
xchg
push
xchg
pop
cmp
outs
sbb
jecxz
xchg
loop
cmp
call
xchg
add
(bad)
aam
push
adc
push
pusha
repnz
push
mov
adc
dec
jl
loope
push
out
mov
pop
or
jno
or
ins
mov
xlat
scas
sbb
cmp
stc
fdiv
(bad)
daa
mov
hlt
mov
fcmovbe
daa
ins
out
jae
shr
add
cmp
out
retf
outs
inc
int
mov
daa
call
aaa
pop
(bad)
and
jge
cdq
jbe
shl
dec
push
aad
add
(bad)
add
adc
hlt
adc
cmps
sbb
aaa
rol
and
fdivr
fcmove
pop
inc
adc
sbb
int3
in
jne
jo
xchg
sub
cwde
test
mov
iret
mov
js
cmp
inc
gs
fld
mov
dec
or
push
xchg
gs
adc
mov
(bad)
ror
lds
or
mov
add
xchg
sub
das
mov
pop
mov
ret
jo
fcomp
mov
adc
loop
psubusw
mov
jecxz
cdq
push
add
not
retf
ja
cmp
test
addr16
or
mov
sbb
ds
das
dec
nop
pop
push
cmp
out
cmp
js
ins
(bad)
or
in
push
(bad)
out
dec
jl
stos
push
mov
mov
stc
int
cmp
adc
mov
mov
xor
(bad)
out
cmp
in
addr16
scas
fstp
mov
clc
cmp
jmp
ret
je
fstp
test
(bad)
out
pop
aam
scas
mov
lods
loopne
js
mov
jle
xor
sahf
iret
xchg
icebp
inc
xchg
jns
lods
shl
jo
xchg
mov
jg
inc
dec
sub
or
jo
push
popf
or
pop
loop
icebp
in
jecxz
xor
cmp
stos
sub
iret
sbb
repz
jo
mov
fidivr
mov
or
jmp
xor
lods
out
shr
dec
ret
cmp
bound
movs
pop
ficomp
rcl
mov
icebp
jae
pop
and
jg
aad
test
xchg
mov
ins
(bad)
stos
sbb
lods
(bad)
repnz
mov
outs
pusha
add
add
mov
sbb
hlt
xchg
inc
sti
push
xor
push
lods
push
inc
xrelease
jg
daa
jle
gs
add
sub
push
sahf
out
mov
cmps
xor
mov
(bad)
imul
xchg
cmp
jnp
xlat
test
mov
sbb
ror
dec
jle
mov
sar
lds
mov
inc
hlt
pop
fisubr
xchg
cmp
add
adc
(bad)
or
scas
push
inc
sbb
inc
xor
pop
sbb
jge
ret
pop
clc
sahf
loop
dec
(bad)
jmp
push
push
out
lods
push
call
popf
dec
jecxz
push
loopne
xchg
pop
pushf
xor
ror
icebp
cmp
cmp
outs
jbe
push
nop
push
nop
lahf
add
call
dec
lock
and
xchg
adc
lods
jmp
add
jbe
inc
add
jno
pop
or
sub
jno
and
xchg
(bad)
fnstsw
shr
jg
push
das
movs
lds
rcr
daa
pusha
mov
adc
es
fisttp
mov
repnz
repnz
push
mov
and
jge
jmp
fs
aad
and
inc
xchg
dec
xchg
rcl
mov
jl
jns
daa
jne
or
jmp
pop
stos
mov
inc
push
movs
rol
pop
pushf
(bad)
ror
sahf
ret
xor
adc
inc
ror
(bad)
in
or
sbb
into
mov
jl
fcos
shl
dec
pop
mov
cld
sbb
cmps
ja
xchg
push
popa
es
ds
leave
scas
sbb
out
js
jb
inc
shr
add
jbe
cmc
xlat
pop
stos
pop
push
mov
lods
mov
out
sbb
xor
sub
mov
ss
mov
jge
lds
add
pextrw
mov
or
aam
sbb
mov
inc
push
repz
mov
adc
jmp
loop
pushf
xor
pop
ja
inc
mov
fcmovu
ficomp
add
js
repnz
dec
xor
jbe
inc
dec
rol
jno
sub
adc
pop
aam
mov
cmc
loopne
xchg
call
mov
xor
ins
pop
cmps
mov
movs
ror
sub
(bad)
push
or
loope
lds
mov
push
or
fisubr
iret
hlt
nop
nop
adc
push
mov
repz
mov
stos
push
jno
and
cmp
imul
xchg
xchg
pop
ret
pushf
pop
mov
mov
inc
xchg
js
cmc
sub
test
mov
loop
cmp
inc
push
jbe
add
adc
mov
add
gs
xor
scas
push
std
mov
jae
cdq
xor
stc
outs
xor
dec
mov
add
pop
fild
jbe
bswap
xor
pop
pusha
add
sbb
idiv
and
push
es
scas
adc
lods
and
mov
clc
addr16
jo
pop
lods
div
les
sahf
inc
imul
cmps
cmp
pop
mov
inc
lods
(bad)
xor
(bad)
dec
sub
icebp
cmp
popa
ds
jge
cwde
jmp
sub
dec
pop
clc
jge
pop
mov
fld
fwait
cld
mov
ds
push
dec
xor
and
sbb
lock
inc
rol
xor
fnsave
int
mov
sub
(bad)
int3
in
pop
(bad)
jmp
out
mov
inc
add
jne
mov
test
mov
dec
cmp
test
sub
movs
sti
aas
test
stos
repz
push
in
mov
test
pop
sub
add
sti
and
inc
sbb
retf
(bad)
(bad)
sbb
cmp
inc
push
jnp
cmp
mov
inc
gs
dec
in
cs
jo
(bad)
dec
out
push
adc
cmp
pop
out
shl
ret
mov
push
dec
into
mov
into
mov
pop
sbb
mov
sub
jmp
mov
sub
pop
push
jo
lock
pushf
cmp
out
cli
inc
icebp
les
(bad)
mov
xchg
test
(bad)
rcl
xor
pop
repz
ror
in
sub
mov
shl
cmc
dec
and
fimul
les
push
aaa
(bad)
cmc
or
push
dec
jbe
addr16
fstp
fwait
push
stc
(bad)
mov
loopne
mov
pop
std
int
push
add
mov
add
sbb
popf
pop
xchg
xchg
xor
cmps
push
dec
cmp
fs
xor
sbb
jg
push
stos
pop
pop
xchg
jmp
out
idiv
mov
out
inc
mov
jne
push
xchg
test
sub
ret
shl
xchg
(bad)
xlat
outs
cli
pop
data16
push
mov
dec
shr
leave
inc
or
dec
pop
test
lock
sahf
mov
lea
push
push
adc
mov
retf
sahf
mov
jne
imul
mov
dec
cmps
jmp
movs
rol
pushw
fld
sub
cmps
gs
mov
sar
sar
push
adc
inc
test
pop
test
dec
push
and
push
and
adc
sub
into
ins
cmps
push
sub
cmp
(bad)
mov
sbb
loopne
fiadd
or
sub
dec
inc
inc
mov
aaa
(bad)
aas
gs
(bad)
adc
aam
test
xchg
jo
mov
ins
add
aas
arpl
dec
dec
imul
push
mov
rol
iret
out
loopne
pop
pop
jne
lea
inc
xor
sbb
mov
cmp
ins
pop
(bad)
outs
sub
sub
scas
test
or
sahf
jne
xchg
inc
mov
or
inc
inc
inc
(bad)
mov
pop
push
fs
arpl
lock
cmps
cmp
push
xor
push
sbb
push
or
jnp
mov
xor
ja
sub
sti
aas
jno
ret
cmp
out
out
cmps
mov
xchg
shr
mov
jge
dec
call
test
pop
jb
push
jmp
push
ret
push
mov
push
inc
mov
sbb
sbb
sar
loop
fiadd
stos
mov
int3
dec
cmp
rcl
dec
movs
mov
mov
cmp
and
sub
scas
sub
add
ret
xor
imul
mov
mov
pop
xor
jg
dec
ins
mov
jmp
in
mov
aas
outs
inc
pushf
js
pop
inc
repz
xor
(bad)
jnp
pop
xchg
ss
fs
cmp
imul
inc
inc
push
xchg
ficomp
test
mov
fwait
ja
pop
sub
gs
cs
xchg
dec
leave
rol
rcl
fs
xchg
bound
ret
into
mov
dec
(bad)
and
xor
je
nop
mov
xchg
int
nop
jg
sbb
pop
xlat
sbb
retf
adc
fwait
arpl
push
fstp
in
mov
jne
adc
iret
cld
cmp
pop
fsubp
mov
inc
movs
dec
cli
xlat
into
(bad)
leave
cli
mov
mov
test
stos
repnz
neg
mov
loopne
sub
rcr
test
and
inc
push
outs
js
test
push
cmps
xor
xor
fisub
xchg
dec
out
fucomip
ds
cmps
call
xchg
jp
mov
mov
fmul
sbb
and
jle
and
ja
sahf
mov
jbe
mov
aaa
dec
gs
rol
mul
mov
mul
sbb
jae
ret
mov
pop
cwde
jo
pusha
dec
push
xchg
add
loop
loopne
add
pop
push
mov
mov
iret
cmp
rcl
lock
mov
push
adc
mov
(bad)
imul
inc
push
out
inc
and
mov
xor
add
or
xor
push
pop
imul
bound
bnd
mov
out
dec
mov
retf
push
inc
push
les
in
inc
dec
sub
arpl
imul
mov
adc
xor
ror
clc
test
jns
cmp
mov
movs
xchg
je
fldenv
in
ret
iret
adc
jno
add
test
and
push
pop
inc
xchg
or
movs
lds
sbb
sbb
dec
xchg
mov
mov
mov
jmp
call
push
mov
push
(bad)
sti
enter
sub
dec
test
or
(bad)
test
fadd
inc
jmp
xchg
sub
not
and
in
jo
dec
gs
or
jmp
pop
inc
mov
fcmovnu
call
cli
lds
in
pop
jmp
fmul
mov
pushf
pop
scas
cmp
push
lahf
imul
inc
cmp
and
aad
lea
mov
fwait
jge
inc
jne
and
dec
enter
push
pop
dec
fmul
sbb
dec
arpl
mov
(bad)
sbb
mov
mov
jle
pop
push
inc
lods
dec
adc
popf
outs
loopne
retf
xchg
daa
jns
sub
mov
std
dec
shl
sub
fwait
inc
add
dec
test
mov
push
xor
aam
test
xor
or
push
xor
stos
xchg
stos
adc
xchg
mov
cmps
hlt
cmp
test
cmps
jmp
repnz
pop
loop
jae
ret
push
pop
pushf
pop
ror
fdiv
test
adc
stos
push
inc
fadd
sub
(bad)
aas
into
or
add
adc
fldenv
gs
jae
sub
or
cmp
inc
outs
je
dec
xor
dec
addr16
aad
pop
jl
pop
pusha
mov
out
dec
(bad)
movs
adc
movs
or
push
or
mov
add
pop
mov
(bad)
jns
xor
and
fnstcw
push
iret
jae
arpl
and
sbb
dec
jo
dec
jno
push
jle
(bad)
jbe
sub
adc
adc
jnp
xor
sbb
movaps
dec
cmp
jb
pushf
adc
pop
call
xchg
push
mov
ror
mov
and
clc
pop
not
(bad)
jmp
lods
stos
jmp
rol
sbb
loop
mov
rol
nop
(bad)
inc
int3
leave
loop
popf
sbb
mov
cmp
mov
jp
mov
dec
pandn
inc
mov
jbe
xor
push
(bad)
clc
inc
fistp
jno
arpl
outs
xchg
xchg
jno
dec
lahf
iret
mov
movs
sub
aaa
push
jae
fs
vpandn
ficom
dec
xor
mov
add
lahf
dec
or
stos
test
xchg
sub
pusha
int3
inc
fidivr
jmp
in
xchg
popf
out
(bad)
jge
pusha
les
pop
fist
and
rcr
cmp
lds
push
ss
test
push
(bad)
ds
adc
fstp
mov
inc
mov
retf
mov
scas
cmp
(bad)
jb
sub
test
add
xchg
sbb
test
xor
lahf
pop
bound
dec
cdq
mov
adc
out
std
lock
iretw
int3
in
in
retf
(bad)
mov
(bad)
shl
jp
cdq
lea
test
(bad)
in
or
fwait
pop
pop
(bad)
(bad)
clc
add
scas
dec
nop
leave
icebp
fist
(bad)
hlt
cmp
rcl
stos
and
jb
sbb
sbb
stos
mov
and
adc
dec
mov
retf
call
stos
stos
call
dec
xchg
ret
cmp
dec
push
icebp
cwde
pop
pop
jnp
in
sti
nop
std
and
cwde
or
sbb
pop
mov
retf
add
retf
xor
sbb
lock
add
push
xchg
adc
push
hlt
dec
sub
sahf
pop
dec
xchg
popa
pop
or
and
and
cmps
out
pop
jl
sub
ins
adc
pop
xchg
test
push
xchg
pop
cli
add
or
pop
mov
mov
add
mov
mov
arpl
mov
or
or
xchg
sti
pusha
xor
out
in
rcr
lds
fs
cmc
push
pop
in
push
adc
ins
mov
test
pop
imul
dec
(bad)
lahf
pop
mov
gs
inc
push
dec
mov
and
jo
retf
loopne
rol
mov
mov
jg
inc
(bad)
jmp
lds
add
mov
gs
cmps
add
jecxz
dec
push
cmps
clc
cmp
lds
iret
adc
into
dec
leave
adc
push
inc
xchg
out
test
push
in
push
dec
enter
mov
movs
cmps
out
and
stos
push
mov
aaa
dec
js
retf
les
shl
pop
popa
pop
dec
fsubr
sub
ins
adc
daa
push
fbld
add
push
arpl
mov
sbb
and
jns
dec
fmulp
in
call
lock
jmp
adc
dec
mov
and
cmps
jnp
lea
fsub
enter
mov
jb
sub
pushf
fiadd
jl
dec
retf
push
scas
jne
sub
les
mov
mov
fsub
jg
adc
clc
inc
(bad)
out
das
adc
retf
sub
xor
js
movs
xchg
pop
fld
xchg
push
pop
lds
(bad)
cmc
daa
sub
push
aad
xor
mov
cmp
cs
push
jno
push
and
jle
cmps
inc
push
in
test
adc
ja
inc
bound
mov
adc
or
fmul
stc
pop
test
ret
mov
dec
in
cwde
inc
out
jno
and
mov
xchg
push
test
inc
sahf
xchg
cmc
movs
jb
data16
dec
jge
cdq
and
inc
sub
jg
popf
stos
lea
sub
cmp
or
pop
add
push
lahf
fidiv
mov
add
cld
or
pop
pop
fimul
jo
into
pop
mov
or
jnp
sub
mov
test
jno
add
sub
sbb
lds
xlat
adc
lods
sub
xchg
pop
add
dec
test
xor
(bad)
rol
xor
pop
nop
mov
test
aaa
hlt
pop
add
xchg
movs
jmp
stos
pop
push
pop
je
mov
rol
mov
fbstp
inc
ret
jb
sbb
fcomp
pop
mov
into
lea
mov
outs
sbb
push
adc
rol
call
cmp
mov
cvtps2pi
lock
(bad)
fadd
daa
sub
inc
jmp
pop
stos
inc
push
mov
pop
hlt
scas
dec
in
add
fwait
in
fmul
(bad)
or
push
mov
cdq
cmp
cmps
push
adc
test
clc
cli
sbb
je
rol
nop
(bad)
pop
in
mov
mov
hlt
mov
cdq
das
cmp
inc
cmp
popa
stos
add
lock
xor
mov
mov
cmp
int3
mov
mov
mov
popf
sbb
shr
xchg
lea
sub
pop
inc
pop
outs
(bad)
aaa
out
cmp
lock
push
dec
cmp
fistp
xor
rol
cmp
fsubr
or
inc
xchg
dec
rcr
dec
jo
in
mov
ins
imul
sub
adc
pop
cmp
sbb
dec
push
push
xchg
rol
and
mov
movhps
xor
clc
mov
ffreep
sbb
fs
retf
ja
mov
sub
out
std
push
adc
outs
in
inc
rcl
(bad)
sub
xchg
aam
pop
and
outs
sub
call
dec
sub
adc
push
aaa
mov
adc
adc
push
shr
lahf
aad
(bad)
imul
outs
in
push
inc
out
in
push
mov
and
jmp
hlt
sbb
pop
ins
out
popf
rcl
xor
int3
fisub
fucom
add
mov
add
enter
xor
xor
dec
adc
add
retf
xor
repz
fist
out
xor
add
dec
adc
mov
mov
push
pop
mov
stos
aam
out
xchg
adc
mov
bound
inc
pop
out
ds
dec
mov
sahf
or
loopne
cld
dec
dec
aad
lds
mov
push
xchg
movs
fist
inc
or
adc
in
mov
inc
pusha
mov
loopne
inc
pop
cmp
les
push
ret
push
adc
cmp
jle
push
clc
rcr
jmp
sbb
jbe
cwde
ins
xor
cmp
adc
push
jp
mov
rol
adc
xchg
or
stos
mov
pop
in
aas
or
stos
and
loopne
mov
sub
dec
push
or
das
sub
dec
pop
adc
inc
add
iret
aad
dec
call
out
inc
mov
ins
mov
inc
xchg
test
lahf
ds
mov
fld
xchg
call
in
add
and
js
mov
pop
std
lock
daa
in
sbb
pop
mov
je
js
mov
mov
lahf
jmp
mov
push
xchg
daa
call
mov
jl
ss
or
dec
xor
les
scas
sbb
xor
adc
cld
sti
sbb
sar
cmc
sbb
mov
xlat
lods
xor
push
lahf
or
cmp
push
mov
fist
pop
mul
loope
dec
bound
add
and
nop
or
cmp
ins
rcl
cld
inc
xlat
and
mov
clc
xchg
xchg
sub
test
cmp
inc
mov
call
ins
test
sbb
sahf
adc
or
xlat
loop
xchg
mov
mov
aad
xor
mov
movs
out
pusha
sbb
imul
mov
daa
movs
mov
inc
xor
mov
mov
out
xchg
cmc
xchg
stos
fs
test
jle
xor
loop
add
ror
(bad)
std
leave
sbb
icebp
jg
sbb
mov
and
xor
sub
mul
fmul
dec
push
sbb
sbb
dec
out
mov
mov
out
mov
or
pop
push
jns
cmp
cmp
mov
mov
fwait
or
add
test
pusha
push
pop
push
sbb
in
(bad)
icebp
in
je
cmp
adc
xchg
(bad)
jmp
mov
mov
push
in
xor
int3
repz
mov
(bad)
pusha
xchg
int
cmps
popf
sahf
fnstcw
xor
jg
rcr
mov
and
loope
push
dec
push
imul
repnz
retf
adc
mov
mov
push
data16
cmp
pop
mov
dec
add
dec
in
cmps
dec
inc
fld
cmc
imul
hlt
rcl
xor
shl
aad
xchg
mov
neg
pop
add
pop
aaa
idiv
repz
pop
out
fwait
mov
imul
loop
les
xchg
mov
stos
mov
fwait
add
sub
in
int
adc
and
(bad)
xchg
inc
adc
add
movs
mov
bound
fnop
in
adc
xor
or
sub
addr16
loop
jge
and
mov
pop
stc
sub
arpl
call
dec
mov
iret
pop
xchg
mov
jge
(bad)
push
repz
(bad)
into
mov
cmp
mov
sbb
adc
aas
outs
div
adc
cdq
jns
stos
xchg
mov
pop
lods
fdiv
mov
jg
call
iret
(bad)
outs
mov
das
pop
popf
int3
push
imul
retf
je
inc
mov
inc
mov
xor
mov
fdiv
push
bound
xchg
sub
(bad)
ficom
push
jno
inc
nop
sub
sbb
stos
rol
add
out
and
lods
or
dec
ret
pop
sbb
jmp
adc
xor
test
mov
or
sbb
ret
mov
jmp
fidiv
jno
popf
jae
inc
aam
add
repnz
hlt
adc
xor
iret
mov
mov
push
lods
jb
retf
je
std
lea
loope
add
in
mov
mov
stos
pop
sbb
outs
sti
in
retf
repnz
ds
sbb
shl
cmps
(bad)
(bad)
std
ror
jns
sbb
test
cld
xor
xor
sub
pop
jbe
stos
inc
mov
es
cmp
pushf
mov
sub
mov
addr16
cmp
and
jo
retf
inc
cmp
cli
xor
pop
xchg
lods
inc
mov
sti
fstp
sub
mov
push
adc
and
or
dec
icebp
push
dec
aas
hlt
in
cli
call
push
or
nop
cmps
enter
xchg
fldenv
inc
jge
or
mov
mov
ja
cwde
dec
mov
popa
idiv
sub
shl
jb
into
mov
aad
data16
dec
call
sub
pop
xor
loop
xchg
dec
mov
adc
dec
jne
push
sbb
and
mov
leave
les
cmp
jae
fsubr
loop
sbb
iret
test
push
jns
sbb
pop
cmp
xor
loopne
or
pusha
into
push
sbb
dec
pushf
(bad)
ins
lds
xor
jmp
push
ja
repnz
xor
shr
pop
mov
xor
pushf
or
mov
add
cli
fistp
jb
pop
mov
pop
movs
icebp
mov
retf
pop
sar
(bad)
push
(bad)
out
and
repz
sahf
dec
inc
adc
xor
mov
mov
jne
cmp
mov
and
mov
popa
fsub
pop
xchg
lea
(bad)
inc
sub
push
jmp
sbb
sub
sbb
pop
sub
mov
(bad)
sbb
pop
mov
iret
popa
and
cwde
jo
outs
pop
dec
mov
rol
and
mov
dec
jno
rcr
gs
fdivr
xchg
pop
pusha
sub
sbb
ds
xor
dec
sar
test
call
hlt
(bad)
in
sub
movs
and
inc
mov
inc
sti
mov
mov
cmp
inc
int3
pop
fsubr
std
lods
mov
in
or
xchg
fisubr
je
aaa
mov
aad
inc
lods
stos
popa
and
lea
popa
pop
aam
mov
xchg
adc
out
add
xchg
ins
cmp
push
cmp
mov
dec
add
clc
xchg
loopne
(bad)
jns
mov
mov
push
ret
into
push
(bad)
cmp
ror
mov
push
movs
stos
sub
in
sub
inc
popf
xor
xor
aaa
aas
jmp
pop
ds
data16
(bad)
inc
int3
repnz
cmps
push
adc
ja
arpl
shl
sub
add
jb
cmps
sbb
or
iret
stos
fadd
popa
push
nop
cmc
cmp
mov
int3
mov
fucomi
and
jge
and
mov
mov
xchg
stos
or
push
scas
sub
push
and
nop
cli
je
cmc
pop
push
ror
mov
repz
jle
test
scas
shl
cld
cmp
inc
dec
cli
xlat
add
or
aad
out
add
cmp
int
jmp
dec
aam
inc
ins
(bad)
out
add
sar
scas
lds
mov
movs
sbb
mov
pop
test
lods
stc
mov
out
aas
adc
jl
add
nop
and
shl
loopne
rol
add
mov
test
adc
lock
push
and
(bad)
xchg
mov
lods
xor
jno
xor
inc
in
push
ror
stos
or
aad
jb
sbb
mov
rcl
cmp
sti
ds
xor
hlt
js
ins
test
sub
xchg
add
loopne
shl
push
pop
sub
mov
stos
int
cmc
fwait
mov
popa
pop
addr16
and
(bad)
cld
sub
push
in
aam
fisubr
(bad)
mov
jo
push
es
cmp
jb
ja
lahf
call
jge
test
jp
xchg
xchg
jns
arpl
mov
mov
mov
xchg
repnz
sbb
cmps
out
in
test
and
and
cmp
xchg
hlt
sbb
bound
dec
add
mov
cwde
out
inc
adc
jo
xchg
mov
pop
bound
loope
adc
mov
cwde
data16
jmp
xchg
cmp
aad
gs
xchg
aas
ds
ins
push
enter
push
sti
mov
fadd
mov
fdivr
push
rcl
les
dec
addr16
mov
xchg
sbb
sbb
ins
sub
int
outs
or
and
repnz
cmp
test
pop
pop
pop
cld
sbb
adc
pop
jnp
cld
jae
mov
mov
lea
cmc
lock
ja
or
addr16
mov
sbb
add
and
inc
leave
cs
sbb
leave
enter
movs
test
dec
push
sub
out
xor
sub
cmps
fcmovnu
outs
outs
dec
rcr
mov
aas
jge
aas
dec
jno
cs
mov
cdq
pusha
xchg
push
mov
dec
pop
jns
aaa
lods
stos
jl
pop
mov
inc
sub
into
les
xchg
or
or
lea
in
xor
aam
popa
pop
enter
adc
mov
cld
leave
dec
jnp
dec
faddp
xchg
mov
mov
cmp
cmps
and
es
popf
iret
dec
mov
cmc
wbinvd
das
call
rol
imul
div
repnz
cmc
push
adc
mov
mov
je
pop
dec
adc
and
enter
movs
push
inc
push
mov
pop
push
push
dec
mov
dec
cmp
sub
mov
jae
lds
xor
jno
outs
xchg
adc
mov
pushf
cs
out
gs
bound
mov
jne
pop
mov
shr
popa
icebp
mov
repz
xchg
je
lahf
xor
mov
push
jge
fwait
sub
xor
push
cdq
in
test
or
and
icebp
sub
(bad)
sbb
shl
jmp
xor
pop
leave
arpl
in
cmc
push
arpl
or
jmp
add
fcom
sbb
(bad)
dec
std
adc
sbb
leave
push
retf
out
out
shr
jmp
cmp
iret
dec
or
xrelease
test
fdiv
aam
mul
aas
js
sti
or
pop
lods
ins
movs
jl
mov
xchg
ss
xor
fs
into
sahf
mov
dec
mov
aad
pop
mov
pop
mov
jns
fcomi
add
je
outs
pushf
cmp
push
adc
xor
pop
(bad)
sub
xor
sbb
or
ret
cmc
hlt
mov
smsw
xchg
mov
and
add
ins
mov
and
push
gs
mov
add
sub
push
mov
ds
add
mov
xlat
pop
iret
retf
mov
add
out
mov
lods
rcl
pusha
cmp
xor
out
jl
pusha
inc
sub
dec
or
xor
push
pop
dec
add
test
push
or
lods
stc
enter
cs
(bad)
es
imul
sub
lds
fidivr
lods
pop
movs
imul
or
mov
and
loopne
or
push
or
std
mov
adc
add
dec
jns
push
push
pop
mov
jo
sbb
popa
push
clc
pop
mov
mov
sahf
sub
mov
popf
repnz
or
inc
sub
shl
and
dec
les
retf
mov
mov
jo
repnz
push
adc
iret
cmp
adc
mov
pop
fimul
push
push
lahf
add
fnsave
sub
sbb
xor
sbb
je
sbb
xor
cli
test
hlt
sub
sub
cmp
ret
mov
mov
test
sbb
adc
mov
loopne
outs
xor
in
xchg
sub
jle
adc
out
push
mov
cmp
(bad)
cmp
ins
mov
and
or
mov
xchg
cmps
arpl
sbb
xchg
jo
(bad)
out
push
pop
mov
in
cmps
lods
cmps
or
repnz
jno
outs
push
daa
pop
iret
sbb
out
sub
mov
mov
loope
fmul
(bad)
sahf
cmp
test
pop
mov
fild
fidivr
dec
popa
clc
repz
cmp
fild
es
xor
imul
xchg
push
jnp
dec
call
push
out
out
xchg
out
add
lds
jae
mov
repnz
inc
sbb
sbb
xor
mov
jo
int
mov
ss
stos
imul
and
mov
add
push
jmp
sub
frstor
push
cmp
pushf
inc
shr
nop
push
test
lea
sub
lock
xchg
aaa
cwde
mov
cmps
mov
out
test
test
les
xor
stc
xor
pop
clc
push
sbb
je
mov
jb
xchg
adc
neg
(bad)
lods
sbb
jb
ret
pop
fbstp
in
pop
push
xor
fistp
jg
xor
mov
loopne
clc
xlat
dec
hlt
les
inc
xchg
mov
mov
mov
test
popa
cmp
add
push
popf
shl
rol
mov
mov
cmp
ins
jae
sub
jmp
jmp
fldenv
adc
push
les
outs
mov
sbb
push
mov
jae
or
push
mov
jl
push
imul
mov
ss
rol
pop
ret
inc
or
pop
push
movd
jne
push
mov
outs
or
cmc
mov
mov
pusha
in
gs
pop
shr
sti
fdivr
inc
add
and
cli
cld
fisttp
mov
rcr
in
jns
and
and
and
test
les
xchg
cmp
sub
sub
scas
idiv
jmp
mov
mul
stc
lods
adc
ja
push
scas
cmp
or
mov
arpl
mov
mov
and
cwde
mov
shl
xchg
xlat
sbb
imul
mov
push
loope
adc
inc
adc
mov
je
mov
(bad)
mov
dec
aas
icebp
xchg
js
cdq
pushf
sbb
push
xor
xor
in
sahf
mov
pop
shufps
adc
std
bound
push
shr
add
jns
sub
fs
fld
out
add
mov
ret
pop
push
sub
outs
(bad)
cmp
in
je
mov
aaa
mov
inc
in
loopne
jmp
fdiv
cwde
rcr
call
fidivr
inc
pop
jmp
outs
xor
pop
adc
(bad)
sbb
ins
mov
mov
fstp
add
hlt
lock
ret
jne
inc
stos
sub
xlat
shr
pushf
pop
icebp
(bad)
aam
js
mov
sar
sti
inc
mov
xchg
ins
push
mov
shl
cmp
sbb
test
enter
je
int
xchg
dec
sbb
mov
ret
fld
stc
sub
pop
xchg
test
xchg
test
push
movs
push
mov
fisttp
sbb
mov
mov
aad
movs
cmp
push
out
mov
cmps
mov
xchg
push
add
jb
xchg
lock
fisub
test
fisttp
add
mov
imul
hlt
not
in
push
pop
sbb
hlt
test
push
fisub
hlt
enter
mov
and
jmp
ret
test
mov
push
aas
and
(bad)
lods
add
mov
lahf
fiadd
xor
repz
inc
pop
scas
aad
call
dec
lds
pusha
inc
mov
xchg
adc
cmp
sbb
clc
call
repz
sub
xchg
push
out
fchs
mov
push
sbb
sub
push
hlt
(bad)
adc
out
add
int3
cmp
xchg
gs
push
mov
inc
pusha
leave
inc
test
inc
les
push
fld
pushf
mov
js
clc
(bad)
mov
mov
jno
je
push
outs
and
pop
add
or
ret
xor
(bad)
shl
xchg
add
cs
jp
jnp
adc
push
cmp
push
ds
inc
arpl
(bad)
pop
fstp
xlat
pusha
arpl
loopne
mov
mov
mov
(bad)
mov
in
scas
in
cmp
mov
mov
mov
dec
push
enter
data16
sub
je
adc
jmp
das
fldcw
sbb
push
cdq
ffreep
jge
inc
mov
and
scas
xchg
stos
xchg
jmp
icebp
or
and
dec
sbb
call
in
or
xchg
popa
fcomi
fdiv
mov
sahf
cwde
popf
sub
movs
push
lds
aad
(bad)
mov
inc
retf
(bad)
nop
mov
ja
xlat
lds
jecxz
ins
fadd
inc
dec
cmp
ror
cmc
aaa
gs
inc
push
jnp
mul
inc
add
xor
xor
fst
fldenv
fcom
jp
or
jmp
mov
and
pop
adc
inc
ds
cld
add
stos
inc
clc
xor
dec
aaa
xchg
push
(bad)
cld
loop
out
or
pop
(bad)
mov
add
cmp
add
aad
scas
xchg
loopne
and
(bad)
(bad)
inc
bound
sar
movs
fwait
in
sub
leave
mov
sbb
inc
(bad)
call
ss
leave
leave
aad
cld
call
jno
cmp
adc
sbb
cmp
add
cmp
out
and
imul
cli
xchg
cmp
push
int
inc
shr
mov
pop
mov
xor
fild
jmp
push
lods
retf
aaa
push
add
mov
jmp
or
xchg
dec
(bad)
mov
add
mov
xor
jb
aad
or
push
movs
es
inc
pop
in
lahf
arpl
cli
and
pop
xor
add
test
inc
ds
out
rol
jmp
cmp
pcmpeqd
adc
lock
ja
add
cmp
js
xchg
push
aad
cmp
xchg
(bad)
mov
xor
jp
pop
inc
inc
sbb
loopne
in
or
sbb
mov
sbb
out
shr
dec
or
aaa
bnd
xor
gs
push
push
and
or
loop
into
jmp
(bad)
arpl
data16
mov
test
aas
data16
sbb
inc
das
call
add
sub
sub
shr
jo
movs
retf
mov
dec
imul
and
cwde
mov
fadd
and
hlt
repnz
out
sub
mov
js
mov
(bad)
and
push
mov
mov
iret
adc
sbb
ss
inc
push
mov
mov
jmp
test
(bad)
jne
retf
add
dec
in
xlat
and
aas
jecxz
pop
pop
stc
pop
cmp
popa
mov
cmp
and
xor
in
loop
and
rcl
int
inc
daa
push
pop
rcr
mov
das
scas
push
push
inc
add
xchg
in
jp
popa
icebp
ds
jmp
shr
adc
cmp
movs
movs
mov
lahf
jb
(bad)
xor
jb
lods
int3
pop
inc
aas
cmp
jno
dec
sti
sub
adc
mov
dec
dec
jae
mov
loope
mov
and
sub
xor
cli
ret
mov
outs
inc
mov
push
cmps
mov
xchg
push
das
daa
cmp
das
mov
daa
xchg
push
cmp
jecxz
and
dec
mov
mov
pop
add
dec
or
ror
inc
lds
cmps
inc
cdq
fisubr
cmp
int3
clc
out
and
jl
jl
data16
cmp
std
bnd
es
jmp
test
rcr
stc
bound
popf
and
or
or
pop
pop
sub
sti
jne
pop
mov
xor
scas
dec
(bad)
mov
out
fcmovnbe
pop
and
cmp
outs
out
adc
inc
inc
repnz
rol
lds
ins
mov
call
out
or
xchg
mov
xchg
lea
fmul
mov
cli
je
inc
pop
sub
jecxz
mov
mov
repnz
in
shr
jb
adc
or
mov
xchg
imul
push
and
std
in
or
sub
jmp
fwait
std
fs
jle
mov
ret
sub
hlt
test
jne
cmp
and
not
popa
xchg
or
cmp
jmp
les
inc
sbb
mov
(bad)
inc
dec
out
(bad)
xchg
out
xchg
mov
mov
repz
mov
jo
lock
fstp
sbb
retf
jns
retf
nop
fs
pop
cmps
sbb
enter
in
call
fisttp
cld
or
dec
int
jp
into
icebp
mov
mov
mov
popa
add
push
mov
xor
pop
popf
pop
pop
jge
movs
in
mov
mov
jp
adc
cwde
mov
adc
(bad)
push
jb
or
aaa
add
inc
push
xchg
sbb
fild
cmp
loope
mov
xor
ret
xor
mov
cmps
sub
iret
xor
imul
movs
push
mov
pushf
das
mov
fisttp
cmc
jns
scas
sti
dec
ret
add
mov
push
xchg
test
inc
xchg
dec
mov
add
pop
pop
aas
mov
pushw
mov
(bad)
sbb
retf
rcl
pop
inc
not
mov
call
outs
lds
dec
fisubr
lods
sbb
mov
add
pop
xor
sub
mov
push
arpl
jns
xchg
pop
xchg
mov
call
adc
retf
sbb
mov
adc
mov
mov
add
cli
scas
mov
retf
(bad)
adc
cs
xor
push
retf
jo
bound
popf
ret
jb
jno
dec
fs
push
sub
js
pop
fisttp
std
add
enter
(bad)
xor
or
gs
daa
sar
(bad)
in
push
push
mov
inc
pop
mov
mov
or
bound
push
dec
jnp
sub
mov
adc
jbe
loopne
pusha
pop
jp
fisttp
shl
pop
pop
loop
push
mov
movs
mov
lahf
inc
hlt
ret
mov
fstp
inc
rcr
aaa
mov
xor
dec
lods
xchg
and
cs
xchg
in
xchg
hlt
fwait
jb
popa
jp
lods
fimul
pushf
rcr
cmps
in
fs
xchg
xor
xchg
fsub
and
mul
sahf
sub
aad
scas
mov
cmc
das
retf
ror
xchg
mov
jnp
xor
repnz
mov
push
dec
adc
gs
mov
jb
(bad)
mov
jns
jno
fnstsw
sub
xchg
addr16
shr
jg
mov
stc
imul
jl
cdq
inc
adc
inc
js
movs
push
add
mov
imul
aam
sub
xchg
addr16
inc
movs
pop
fsub
pop
mov
rcr
jmp
js
push
fld
frstor
shr
loop
aam
sub
jge
push
mov
ins
and
jo
push
movs
and
add
loopne
sub
xor
pop
add
inc
pop
adc
lea
mov
cmp
popf
pop
outs
fdivr
addr16
loop
push
dec
retf
xchg
sahf
xor
dec
sub
loope
dec
mov
pop
out
pop
clc
mov
sbb
lds
cli
dec
pop
xor
pop
push
push
xor
push
push
ret
test
sbb
dec
shl
shr
mov
shl
int3
pop
stos
shr
or
mov
mov
or
outs
mov
cmp
lahf
push
mov
jo
movs
and
pop
neg
add
test
xchg
out
push
daa
or
fst
enter
pop
fidivr
pop
pop
jle
jae
xchg
pop
push
or
xor
(bad)
xor
imul
push
fwait
pop
inc
adc
and
aam
(bad)
push
mov
jns
loope
jae
dec
sahf
pop
popa
jmp
scas
hlt
enter
or
outs
inc
shl
ja
mov
cmp
xchg
mov
mov
and
fidiv
push
shl
loop
mov
test
mov
cdq
push
out
inc
addr16
test
outs
push
mov
xor
scas
aad
xchg
xchg
add
jmp
les
xor
das
pop
sub
adc
mov
mov
mov
sti
or
mov
add
jg
fild
out
push
sub
sub
mov
pop
cmps
sbb
inc
pusha
loop
sbb
xchg
sbb
mov
mov
add
jno
fdiv
ins
fldl2t
out
adc
dec
shl
jmp
jl
inc
push
inc
enter
neg
jp
retf
or
fdiv
jae
cmps
push
scas
mov
aad
dec
cmp
int
imul
sbb
inc
push
loope
sub
call
cwde
inc
daa
imul
ret
inc
sub
jne
jae
xchg
inc
jecxz
add
add
add
pop
mov
repnz
push
sti
fwait
mov
push
call
(bad)
push
inc
cmp
shl
add
xchg
iret
pop
jnp
and
std
les
and
jecxz
push
movs
mov
add
jl
leave
pop
fist
sbb
ds
ins
int3
and
mov
fbld
xor
js
in
repnz
fnsave
in
cmps
je
loope
std
add
mov
mov
fistp
cli
aas
pop
and
pop
ret
ror
test
cmp
jle
mov
mov
das
loop
sub
mov
(bad)
daa
rcl
mov
xor
mov
sbb
xchg
xlat
int3
jmp
sbb
shr
xchg
shl
adc
les
or
retf
jge
jbe
popf
jl
lds
ret
fistp
shl
mov
mov
fld
xchg
pop
xchg
pop
add
lock
adc
fdiv
retf
xchg
fld
sub
cdq
aaa
jmp
je
(bad)
xor
call
pop
xchg
mov
sbb
lock
mov
inc
xchg
push
xor
sbb
imul
xchg
pop
push
(bad)
mov
push
rcl
mov
jae
sub
call
xor
and
in
pop
jle
out
cld
mov
mov
or
xchg
and
fst
test
rcr
jg
and
xchg
lods
mov
aas
cmp
movs
jnp
push
xor
mov
sahf
pcmpeqd
lock
sub
popf
pop
push
mov
test
cld
push
cmp
(bad)
mov
and
or
mov
outs
fwait
sub
sbb
pop
ja
div
inc
mov
arpl
push
ja
push
hlt
outs
xlat
daa
mov
push
pop
fcmovb
and
jl
add
cwde
push
jbe
movs
dec
mov
scas
and
mov
test
mov
and
je
cs
sbb
mov
mov
xor
mov
mov
aad
sub
pusha
sbb
daa
sbb
imul
mov
test
mov
mov
xchg
push
aaa
and
mov
int3
in
ins
daa
cmc
dec
push
xor
mov
movups
pop
jecxz
out
xchg
rcl
dec
gs
sub
jge
inc
mov
dec
mov
outs
inc
mov
or
sti
fsubr
mov
pop
mov
fdivr
mov
cmp
pop
pushf
call
arpl
xor
retf
out
(bad)
outs
stos
pop
mov
push
sbb
sub
inc
pop
add
or
icebp
or
pop
scas
push
aaa
cmp
cmps
cmp
push
stos
lea
(bad)
sub
loopne
pop
xchg
mov
inc
sbb
cmp
mul
mov
cmp
jnp
pop
data16
shr
or
mov
jb
sti
and
sbb
jmp
movs
or
dec
or
xlat
ror
hlt
jne
add
stos
or
cmc
(bad)
mov
or
call
cld
dec
loope
dec
push
push
sbb
add
cmp
adc
xor
iret
push
les
jle
xlat
push
lods
or
dec
xchg
iret
sub
jmp
or
fst
xchg
sar
mov
ret
xor
push
xchg
pushf
add
hlt
std
push
pop
inc
jmp
repz
pusha
clc
inc
push
or
cld
dec
mov
push
mov
shr
inc
jbe
mov
test
xor
daa
cmp
ins
pusha
outs
push
mov
sbb
retf
scas
in
adc
push
jg
jns
mov
sti
clc
push
push
jnp
mov
test
mul
inc
stos
in
int
pop
push
iret
jmp
pop
(bad)
outs
icebp
mov
mov
mov
mov
pop
cmps
dec
push
xchg
xor
test
rol
repz
cmp
fxch
hlt
mov
movs
mov
loop
adc
shl
mov
dec
outs
mov
(bad)
push
mov
mov
push
loop
sbb
imul
jno
adc
mov
push
mov
into
(bad)
aad
(bad)
call
sub
inc
hlt
pop
call
sub
pop
ins
cdq
cdq
sbb
pop
shr
jbe
pusha
jnp
jns
adc
outs
inc
adc
(bad)
cli
jns
(bad)
pop
cmc
push
mul
enter
xchg
and
ds
add
test
mov
cli
adc
pop
push
retf
xor
push
mov
movs
push
xchg
jecxz
mov
sbb
js
sbb
pop
mov
jne
push
adc
arpl
pop
pop
ins
ret
or
cmps
pop
mov
loope
dec
sub
ds
mov
add
retf
cmps
mov
hlt
push
add
inc
popa
xor
inc
lahf
scas
dec
fldz
push
dec
and
push
pop
dec
rcr
xor
arpl
or
rcl
fcom
mov
leave
jbe
stc
adc
inc
add
jmp
add
prefetch
outs
cmp
dec
fmulp
push
aaa
xchg
(bad)
cli
(bad)
sub
adc
out
cld
cdq
lahf
std
fnstsw
(bad)
sbb
nop
mov
cdq
and
push
push
out
bound
mul
adc
or
dec
cld
aad
outs
sbb
out
push
ds
inc
ret
fmul
cmps
je
sub
xchg
sahf
pop
lods
or
(bad)
xchg
int3
das
and
inc
cmps
enter
and
out
ficomp
xchg
mov
outs
pusha
daa
xchg
hlt
add
add
add
nop
dec
imul
fs
popa
jmp
outs
xor
in
xchg
test
or
pop
jne
dec
dec
jl
mov
repz
jo
add
(bad)
or
xchg
mov
mov
lfs
or
mov
popf
cmp
or
int3
(bad)
aaa
jp
inc
pop
sbb
out
(bad)
fwait
jnp
mov
xor
call
mov
into
loopne
mov
retf
cld
repz
loopne
or
fdiv
or
imul
sbb
cmp
add
push
(bad)
push
xchg
mov
jns
pop
aam
rol
cmp
pop
adc
or
mov
add
pop
hlt
cli
mov
stos
pushf
push
mov
mov
push
(bad)
jae
fisubr
and
enter
sahf
mov
test
dec
and
call
inc
adc
jmp
aaa
xchg
xchg
push
aam
sbb
fadd
loope
lock
dec
lock
adc
push
repz
jmp
(bad)
xor
jbe
mov
pop
stos
adc
enter
jbe
cmp
inc
or
and
or
imul
ret
jl
aad
push
mov
adc
loope
ins
pushf
sbb
js
sti
mov
in
sub
push
push
dec
mov
mov
imul
jns
pusha
sti
push
fdiv
lahf
mov
sbb
add
ins
xor
rcpps
xor
jnp
out
mov
test
das
adc
sub
loop
mov
cli
in
pop
cmp
and
adc
lods
xor
ins
outs
mov
xor
mov
pusha
test
mov
fcomp
scas
mov
cmp
into
inc
mov
imul
loop
push
aas
xor
mov
dec
ret
mov
mov
lds
fild
mov
gs
ins
into
xchg
call
mov
xor
pop
jl
stos
inc
and
mov
neg
ja
repz
xor
sbb
shl
mov
jns
or
jmp
shr
pop
test
ja
mov
pop
cmp
jno
adc
shl
mov
dec
push
mov
cmp
lock
pop
(bad)
rol
(bad)
push
pop
stos
push
cld
test
jge
sbb
lods
jbe
stos
fmul
cld
je
xchg
xchg
dec
jge
inc
in
lods
pusha
or
push
pop
mov
jmp
rol
jne
popa
ret
xchg
lock
jge
fcomp
inc
add
int
sub
mov
fcom
ja
dec
mov
clc
mov
pop
int
push
mov
sub
pop
loop
mov
je
inc
shl
outs
sub
cmps
or
pop
adc
aas
and
test
aam
inc
fwait
xor
pop
loope
aaa
or
jle
or
xchg
dec
inc
adc
in
stos
mov
data16
xchg
xlat
adc
or
sti
gs
sti
test
add
xchg
pop
jle
xor
aas
mov
mov
push
mov
std
gs
cmps
sub
cmp
and
rcl
int3
cmps
mov
ds
js
or
pop
nop
push
and
inc
test
repz
aaa
mov
pop
(bad)
push
cdq
popf
shr
loopne
scas
shl
sub
jecxz
dec
out
ins
pop
dec
mov
jnp
fbstp
imul
clc
cmp
shl
mov
mov
popf
jmp
cmps
pop
loop
fadd
xchg
sti
cdq
in
imul
dec
outs
sbb
push
pop
out
mov
xor
cmp
repz
(bad)
push
je
mov
add
stc
inc
or
push
inc
in
fwait
dec
cld
or
rol
sub
je
ret
sahf
mov
cmp
in
cmp
retf
fcom
cmp
pop
jp
shr
test
adc
sbb
ror
outs
addr16
dec
pop
test
or
test
stos
push
fxam
bound
jb
sub
js
retf
cwde
xchg
inc
mov
cmc
in
mov
sub
iret
cmp
and
and
repz
retf
enter
dec
dec
xchg
call
sub
movs
addr16
xor
fsubrp
or
aam
cs
xchg
popa
es
or
arpl
es
repnz
and
loopne
jmp
stc
and
int
inc
ins
shl
(bad)
and
ss
pop
cmp
cs
cmp
and
arpl
push
bnd
dec
mov
sbb
mov
sub
pop
adc
xchg
cmp
jge
xor
or
addr16
inc
xchg
loope
pop
xchg
cdq
jbe
fstp
and
imul
clc
mov
scas
and
pop
out
movs
call
lods
cli
push
push
xor
outs
test
shr
push
push
inc
mov
cld
push
movs
test
retf
lock
sbb
cli
or
push
pop
call
pop
cmp
push
sbb
fcom
nop
pop
shl
jg
pop
lods
adc
xchg
lock
xchg
movs
pop
aaa
sub
in
adc
dec
inc
rcl
fbld
scas
in
and
retf
daa
dec
mov
mov
aad
adc
ror
daa
dec
fimul
jg
out
clc
pusha
sbb
push
push
mov
xor
loope
loopne
fs
out
nop
out
mov
rcr
out
push
pop
pop
add
sub
sub
js
call
mov
(bad)
icebp
icebp
out
pop
repz
xor
xchg
fisub
cmp
lods
(bad)
jle
jb
in
scas
or
xchg
mov
out
xlat
test
inc
inc
jl
mov
pop
cli
pop
jg
push
leave
sbb
mov
add
mov
mov
cmp
dec
sub
outs
sub
loope
lock
xor
call
adc
and
shl
aaa
cmp
fsubr
push
mov
add
lea
or
rcl
jge
out
lods
inc
sub
or
mov
lods
lahf
add
xchg
test
xor
jmp
clc
sbb
cdq
xchg
add
stc
loopne
pop
cmp
sbb
jl
and
fdivr
mov
sbb
aam
add
sbb
shl
xchg
xchg
xchg
loop
(bad)
xor
icebp
mov
sbb
std
sbb
mov
xchg
mov
inc
cmc
cmp
fdivr
inc
and
addr16
scas
sbb
xor
or
mov
fcom
mul
les
cmp
pop
pusha
das
push
jecxz
xchg
rol
mov
push
js
fcom
mov
rcr
jmp
xor
dec
and
int3
sub
jns
sub
jg
or
fld
push
jbe
mov
loop
jns
jle
(bad)
(bad)
sar
call
inc
and
jae
add
jbe
push
xchg
mov
cmp
push
dec
test
imul
xor
and
(bad)
mov
xchg
xchg
mov
stos
fisub
jge
mov
cmp
add
adc
sbb
push
push
test
mov
scas
mov
dec
mov
out
dec
mov
xchg
scas
(bad)
xor
sbb
and
pushf
je
lock
scas
add
xchg
add
push
xrelease
pmaddwd
pop
das
fcom
push
(bad)
int3
sbb
dec
dec
push
dec
std
cwde
pop
jbe
ficomp
add
stos
(bad)
std
and
addr16
out
xor
mov
(bad)
les
mov
mov
mov
sub
xchg
cmp
push
fs
pop
adc
stc
xchg
inc
adc
mov
dec
into
sbb
popa
test
inc
xchg
test
mov
mov
mov
aad
shl
mov
cmp
xor
rcr
shl
inc
aam
fsub
js
adc
xor
cmps
dec
(bad)
or
cld
jecxz
aaa
(bad)
inc
dec
xchg
jae
les
sub
xor
push
mov
sub
lods
sub
xlat
shl
cli
mov
fwait
test
push
stos
xchg
mov
sahf
dec
jne
test
and
cmp
add
xor
cli
mov
sbb
out
cdq
stos
sti
test
mov
mov
sahf
mov
out
int3
out
in
std
clc
mov
sub
aad
icebp
cwde
call
jns
ins
(bad)
arpl
pop
mov
mov
or
aaa
jecxz
aas
mov
jnp
fstp
cld
inc
nop
pop
jnp
push
mov
sub
push
jnp
push
ret
ret
loop
test
mov
push
out
push
sar
shl
jno
jne
sbb
inc
arpl
rol
add
maxps
(bad)
xlat
lea
stos
call
mov
(bad)
loop
inc
pop
cmps
pushf
pushf
aaa
cwde
push
fistp
ret
mov
out
and
call
out
dec
mov
mul
jge
stos
(bad)
mov
popa
mov
and
popa
mov
into
mov
repnz
nop
xor
pop
(bad)
outs
test
out
sub
push
adc
rol
mov
ret
cdq
cmp
lahf
in
or
loope
cwde
push
fs
dec
dec
aam
cdq
movs
dec
sub
ret
or
div
fst
lods
inc
mov
mov
sub
adc
sub
mov
dec
sub
cmp
jns
dec
mov
enter
das
pop
and
outs
sbb
sub
(bad)
retf
cmp
mov
sub
or
sbb
test
jge
leave
sbb
shl
pop
stos
pusha
ins
cmps
mov
inc
popa
sbb
push
cmps
ror
adc
pop
or
ret
add
sbb
aad
sub
out
movs
push
mov
sbb
adc
stos
xor
stc
mul
shr
cwde
or
adc
dec
jp
adc
rcl
test
dec
sub
push
add
movs
aas
mov
lahf
xchg
das
int3
cwde
add
outs
ret
or
sbb
in
dec
or
inc
aad
clc
push
sbb
mov
fdivr
pop
inc
pop
mov
scas
pop
rcl
popa
ja
jo
(bad)
pop
sub
pop
jnp
clc
jns
xor
jb
sub
add
mov
ret
movs
xchg
push
pop
popa
mov
push
xor
push
adc
mov
jo
nop
movzx
lea
in
dec
aaa
xor
dec
pop
inc
aad
(bad)
fsubr
sbb
shr
jmp
dec
push
je
pop
mov
xor
inc
pop
nop
sbb
xchg
dec
jnp
rol
shl
jmp
inc
popa
mov
cld
test
xor
inc
pop
and
xchg
iret
inc
stc
inc
outs
cli
es
icebp
cmps
fmul
out
jmp
bound
dec
xor
mov
sbb
xor
mov
mov
inc
mov
(bad)
xor
in
cmp
sbb
or
add
les
sub
cmp
or
adc
ins
add
jp
out
lods
pop
popa
dec
mov
and
pop
push
dec
mov
add
adc
std
xor
fs
gs
lds
push
sub
pop
pop
mov
test
or
mov
out
(bad)
cmp
mov
ror
jno
inc
push
cmps
cmp
les
sti
and
add
cmp
jge
pop
sahf
fs
repnz
shr
mov
scas
bnd
cmp
mul
and
call
mov
aam
xor
mov
loope
mov
shl
aam
adc
call
loope
mov
dec
loop
data16
inc
scas
out
jo
push
mov
sbb
push
push
xchg
pusha
hlt
jb
clc
je
xor
jmp
enter
jbe
sub
fisubr
lock
out
sub
setno
mov
cmp
xchg
shl
push
stc
mov
cmps
int3
(bad)
pop
loop
fidivr
add
pop
xor
out
push
jbe
push
inc
cmp
and
xchg
xchg
push
sbb
xchg
out
pop
imul
push
dec
test
pop
or
(bad)
test
push
dec
pop
pop
dec
sub
fs
cmp
aad
mov
lds
adc
imul
ficom
or
sbb
push
into
fadd
pop
aaa
aaa
pop
mov
xor
cmps
adc
pop
cmp
mov
call
jp
mov
ud0
jne
and
cmp
ja
in
test
dec
in
daa
mov
div
lahf
xchg
js
add
jb
sbb
inc
ror
pushf
xchg
bound
jb
dec
cmp
lods
repnz
das
cmp
xchg
sbb
xchg
std
enter
push
aad
test
div
fs
dec
push
mov
xchg
(bad)
pop
mov
xlat
push
dec
test
outs
rcl
scas
neg
push
adc
pop
ret
cmps
sahf
ja
pop
add
lods
test
movs
and
inc
test
cmps
(bad)
test
jns
loop
imul
mov
loopne
das
mov
test
cmp
pop
outs
xor
pusha
mov
ret
sbb
sub
(bad)
rcl
jl
jl
push
push
cmp
(bad)
push
mov
pusha
sub
stos
inc
xchg
push
std
fldl2t
xor
shr
sbb
(bad)
out
add
dec
xor
xchg
adc
in
fadd
sbb
out
jle
dec
adc
rol
fldenv
rol
push
add
fdivr
dec
jae
jl
mov
push
inc
and
jl
inc
adc
inc
pop
arpl
sub
sub
mov
sbb
jl
or
mov
imul
pop
fisttp
sbb
ins
and
rol
retf
jge
loop
mov
dec
or
adc
lds
mov
test
sti
test
push
jp
dec
bound
das
xchg
inc
sub
mov
ret
and
js
and
(bad)
jmp
popf
test
push
mov
sbb
shl
add
xchg
pusha
mov
cld
sub
in
dec
pop
mov
lds
in
mov
fadd
and
jecxz
popf
inc
add
xlat
sti
sar
sti
or
jne
cmc
inc
outs
lds
and
mov
shr
mov
and
mov
out
enter
sub
jg
adc
mov
push
sub
mov
jmp
dec
aas
xchg
jmp
(bad)
iret
push
jno
es
cdq
retf
mov
sub
push
mov
icebp
rcr
mov
dec
movs
mov
adc
and
mov
rcl
and
fldcw
cwde
dec
mov
mov
dec
jne
call
or
push
and
jno
movs
mov
push
fild
(bad)
out
adc
mov
lea
ins
scas
dec
xchg
adc
int
push
add
aam
inc
in
dec
dec
xor
jns
push
pop
cs
and
retf
loop
dec
xchg
sub
mov
jle
enter
and
adc
sar
add
fisubr
jb
mov
(bad)
dec
jg
call
cmc
cmp
and
or
and
push
mov
cmc
jo
add
xchg
lods
neg
jns
jns
nop
cmps
push
iret
inc
mov
cmp
cmps
jb
jecxz
xchg
daa
popf
mov
and
and
xlat
pop
mov
int
pushf
fsubr
push
shl
ret
js
mov
daa
xor
push
cmp
mov
mov
cmc
aad
jg
(bad)
bound
lea
dec
call
and
sub
imul
ret
adc
sar
imul
scas
cmp
cli
pop
inc
popf
cld
dec
inc
pop
jns
icebp
enter
repz
and
int3
in
ss
loopne
test
xchg
stos
and
dec
ss
jnp
push
mov
inc
fst
sbb
and
adc
mov
cmps
push
xor
cld
cwde
ret
dec
aam
cmps
jns
push
stos
cmps
(bad)
or
repnz
mov
imul
jg
mov
mov
ret
cmp
cmp
dec
movs
inc
sbb
in
test
mov
xor
loope
xchg
dec
pushf
adc
inc
in
push
mov
cmp
jae
out
retf
xchg
(bad)
sub
jo
mov
in
adc
pop
cmp
sbb
hlt
sub
xchg
sbb
mov
add
gs
movs
xor
mov
jb
imul
out
out
hlt
sub
cmps
push
sub
ja
out
imul
pop
retf
rcr
jne
pop
sub
cmp
cmc
mov
xchg
mov
push
pop
rol
(bad)
push
add
std
popa
push
fisttp
push
out
int
fdivr
mov
add
xor
xchg
adc
dec
xchg
xchg
xor
push
jne
call
sub
addr16
pop
mov
cmps
xchg
inc
jbe
outs
dec
mov
gs
add
and
(bad)
cmp
fbld
stos
frstor
cmp
imul
outs
mov
aas
imul
aaa
cmps
fild
sbb
test
add
add
cld
pusha
mov
movs
inc
mov
xchg
aas
das
dec
add
mov
pop
jb
adc
add
test
fs
iret
test
pop
clc
mov
es
or
mov
not
shl
xor
mov
xchg
push
cmp
xchg
int3
mov
mov
or
add
fiadd
ins
call
(bad)
inc
jp
lods
sbb
call
inc
or
cld
cld
int3
shl
out
(bad)
enter
xchg
movs
mov
push
cmp
push
dec
and
mov
and
call
lahf
mov
adc
cmps
mov
sbb
push
jle
(bad)
aam
hlt
dec
mov
loope
scas
aam
inc
add
pusha
shl
jp
sbb
adc
add
push
outs
mov
adc
ins
cwde
lea
and
test
int
pop
mov
push
repnz
pop
fistp
fldenv
or
outs
mov
addr16
xchg
jae
adc
mov
sub
test
and
nop
sar
test
imul
mov
xchg
stos
popa
enter
xchg
xor
inc
(bad)
sti
mov
jo
jmp
in
pop
inc
out
cmps
jp
dec
enter
mov
xchg
and
dec
pop
sbb
add
pop
in
mov
mov
(bad)
jmp
mov
sbb
add
mov
movq
fcmovne
call
dec
icebp
and
fimul
pop
call
fisub
and
(bad)
loop
popf
jae
test
xor
xor
push
shl
push
add
xchg
loope
mov
ret
or
pop
xchg
loop
in
(bad)
shl
fsub
outs
arpl
xor
jo
add
pop
xchg
mov
jns
mov
cld
imul
mov
and
and
lock
jmp
and
cwde
adc
mov
ja
std
(bad)
pushf
fnstcw
mov
mov
sbb
adc
fcom
mov
push
add
mov
jl
(bad)
ficomp
rcr
repz
cmp
sub
mov
jcxz
jl
lea
cld
sub
stos
outs
cdq
adc
mov
repz
mov
repz
xor
loope
popa
cmps
ret
add
mov
stos
(bad)
adc
mov
cmc
cs
adc
push
xor
adc
icebp
jecxz
data16
adc
les
push
in
fisttp
pop
aam
sub
mov
ja
and
jo
pop
movs
mov
test
xchg
sub
push
jae
jbe
sar
xchg
adc
dec
mov
or
scas
mov
rcr
icebp
fwait
retf
scas
dec
mov
pop
imul
or
or
ss
icebp
push
sbb
leave
lods
outs
sbb
call
push
sbb
add
jp
(bad)
out
retf
jmp
test
jmp
in
mov
dec
xor
jle
push
pop
jp
imul
xchg
jbe
or
dec
sbb
aad
pop
push
ja
cmp
(bad)
jg
and
lea
xor
aam
std
adc
stos
xchg
aad
and
add
shl
in
sbb
xchg
push
inc
push
mul
inc
retf
imul
mov
add
fldcw
ins
inc
xchg
push
sub
mov
inc
push
sbb
xchg
mov
outs
sub
pop
jnp
and
addr16
inc
jmp
dec
fwait
icebp
clc
jae
test
pop
sub
jne
out
xlat
(bad)
daa
inc
mov
and
addr16
sub
repnz
nop
popa
or
jl
xchg
adc
mov
daa
jmp
in
repz
dec
inc
mov
mov
mov
imul
rcl
out
mov
adc
jns
faddp
mov
ret
cwde
xchg
mov
adc
sbb
out
adc
ret
sti
xor
mov
sbb
mov
(bad)
pop
pop
and
push
ds
lds
cmp
jecxz
sub
out
movs
(bad)
aaa
jmp
xor
ins
cmps
jb
jbe
aam
test
(bad)
cmp
pop
movs
fldcw
adc
xchg
jle
ins
mov
add
sbb
pop
loope
fstp
int
pop
mov
inc
jnp
jecxz
cdq
clc
jmp
mov
enter
cmp
sbb
retf
movs
adc
push
jae
cmp
push
retf
call
jg
inc
std
ret
into
mov
pop
sar
sbb
push
pop
fld
push
xlat
fdivr
sbb
mov
pop
inc
cmps
imul
jg
push
sbb
xor
out
test
cdq
add
(bad)
dec
cmps
cmp
(bad)
(bad)
stos
or
adc
mov
jb
aad
inc
add
stos
mov
or
jl
(bad)
or
jmp
sti
ror
pop
in
mov
sub
aad
mov
imul
adc
int
outs
adc
cs
repz
sahf
sbb
div
adc
push
or
lods
mov
inc
sahf
popa
cmp
in
sbb
jle
jbe
xchg
add
movs
jne
mov
dec
movs
dec
gs
cdq
add
test
or
test
scas
push
or
sub
add
jno
mov
jne
dec
pop
out
sbb
test
fs
mov
xchg
out
mov
and
sub
loop
ds
cmps
daa
push
adc
adc
pop
mov
stos
repnz
add
adc
inc
pop
mov
dec
cmp
stos
lds
mov
dec
xchg
fldenv
or
inc
fucomip
cmp
pop
cmc
fwait
or
adc
adc
inc
dec
dec
fsubp
dec
sahf
dec
loop
jge
and
std
dec
icebp
loop
push
jecxz
jp
arpl
ins
push
scas
es
sbb
(bad)
ffreep
mov
sub
sahf
sbb
lahf
out
ds
jg
test
adc
adc
pusha
shl
lods
or
mov
sbb
int3
ret
mov
aam
jle
cmp
rol
std
cli
cwde
push
or
scas
and
arpl
xor
sub
or
je
or
sbb
adc
ret
sub
sbb
sub
cmp
iret
movs
mov
aad
xor
jbe
pop
lods
mov
xchg
aaa
dec
sbb
pop
mov
mov
jns
aad
dec
push
pop
inc
mov
es
dec
rcr
loop
dec
dec
pushf
mov
push
xchg
cli
inc
test
neg
popa
fimul
cmp
and
mov
add
push
repz
ret
sbb
dec
lock
dec
push
xchg
sbb
shl
mov
dec
stos
aam
shl
retf
jle
xor
loope
mov
jmp
sbb
push
inc
adc
test
sub
inc
cmp
mov
cmp
gs
xchg
arpl
pushw
into
pop
inc
scas
push
lea
cli
cmps
inc
xchg
and
fist
or
mov
add
sti
mov
mov
sbb
(bad)
adc
(bad)
pop
xchg
push
sbb
and
call
leave
jmp
inc
lahf
ret
cli
cs
and
or
psllq
push
imul
jne
jo
mov
retf
inc
cmp
mov
xlat
push
pop
jae
sub
pop
fs
mov
icebp
mov
inc
lods
lock
push
(bad)
retf
jge
ds
sbb
fisubr
push
or
push
imul
mov
adc
in
jnp
out
jecxz
dec
test
and
rol
jecxz
push
cmps
xor
mov
rol
fwait
jl
push
div
xchg
inc
add
mov
jge
mov
push
jp
aad
pop
cmp
aas
cli
sahf
dec
mov
and
mov
push
pop
jo
(bad)
addr16
retf
movs
mov
lahf
cmp
dec
push
dec
pop
popf
xchg
out
mov
inc
imul
add
inc
and
dec
mov
sbb
movs
ds
sbb
jl
inc
ss
daa
mov
push
jp
pop
mov
or
xchg
(bad)
fwait
sbb
pop
push
mov
call
(bad)
leave
or
nop
lods
int
sbb
in
into
les
sub
cmp
sub
call
and
pop
push
int3
lock
aaa
vcvtps2dq
dec
xor
aas
daa
imul
in
scas
xchg
data16
dec
push
xor
and
jbe
mov
push
sub
push
cmps
hlt
pop
mov
out
jp
test
adc
lock
xchg
lea
out
push
popf
psllw
in
sub
sub
int
mov
xor
out
pop
jecxz
jmp
xchg
fnop
push
and
jmp
cmp
and
and
inc
mov
das
popf
jno
cmps
xor
mov
inc
lahf
ja
xchg
in
jns
out
outs
jle
ja
inc
add
daa
add
mov
xor
bound
lods
shl
daa
jno
ins
test
push
icebp
fs
lods
xchg
or
cld
test
push
les
pop
adc
dec
mov
cs
movs
mov
into
mov
mov
mov
or
lds
xor
adc
xor
add
sub
mov
mov
push
daa
jne
js
fcmovnb
sub
nop
pop
mov
cwde
dec
push
mov
retf
jnp
out
test
test
and
rol
enter
add
jne
ds
xchg
adc
xor
adc
(bad)
jp
jmp
dec
jl
je
aas
pushf
addr16
inc
mov
sub
xor
movs
fiadd
and
popf
xchg
xchg
mov
movs
cs
loope
and
inc
mov
leave
cmp
fs
mov
push
jnp
cli
jb
in
in
into
sar
popa
pop
jp
dec
mov
dec
and
adc
cmp
inc
adc
mov
outs
lahf
pop
xor
cmp
sbb
rcl
mov
xor
sbb
nop
xlat
push
cmps
xor
xor
(bad)
(bad)
cli
fsub
scas
mov
xor
xlat
fiadd
or
call
cmps
(bad)
mov
(bad)
scas
iret
arpl
and
popa
hlt
push
(bad)
or
pop
xchg
sbb
fdiv
pushf
cdq
(bad)
cld
fist
sub
xchg
xlat
test
xchg
mov
or
sbb
stc
jnp
ins
adc
lahf
clc
dec
jle
scas
cwde
rol
mov
iret
js
inc
and
mov
je
movs
out
fld
movs
lods
ja
clc
imul
mov
push
fdivr
cdq
xchg
sbb
inc
dec
xor
cmp
shl
dec
and
repz
arpl
inc
pusha
push
enter
leave
inc
dec
icebp
lods
loope
xchg
fadd
into
pop
retf
inc
and
hlt
add
jg
xor
and
pop
inc
(bad)
lock
das
into
push
jmp
sub
loopne
call
add
pop
dec
mov
sbb
jmp
push
out
inc
push
mov
bound
jb
ss
fwait
xor
ds
(bad)
cmp
repz
out
push
sub
push
test
cmp
movs
pushf
mov
dec
dec
(bad)
xchg
sbb
dec
out
fldenv
dec
cmp
jle
jmp
ins
or
mov
iret
push
js
aaa
xchg
dec
gs
push
or
iret
stc
and
and
dec
imul
sar
nop
xchg
jae
cmp
jl
(bad)
popa
fnstcw
add
sbb
push
in
add
adc
mul
leave
out
ror
pop
les
push
pop
xchg
mov
shr
dec
test
lods
loopne
xchg
into
(bad)
mov
dec
pop
imul
(bad)
lahf
mov
cdq
mov
lds
pop
shl
call
push
ficom
popa
retf
in
repnz
scas
ret
sbb
push
xor
sub
jg
retf
xchg
mov
add
push
ret
xchg
xor
inc
cmp
mov
jp
loop
inc
ror
inc
ds
xor
int
xchg
lea
not
aaa
xor
dec
sbb
mov
clc
sub
xchg
cmp
sbb
iret
test
imul
cmp
mov
sbb
vpmulhw
xchg
outs
inc
and
push
popf
js
das
add
xor
and
sahf
mov
fs
call
(bad)
(bad)
mov
sbb
enter
imul
cmc
xor
test
add
ins
(bad)
mov
in
enter
add
cwde
cmps
jg
jne
jle
dec
inc
arpl
loope
loop
enter
jns
sbb
stc
jl
push
sbb
push
ins
cld
or
cmps
jb
pop
xor
out
pop
out
xchg
js
sub
(bad)
repz
imul
add
mov
or
inc
stos
ffree
or
pop
mov
ret
sbb
and
stc
add
mov
adc
xlat
push
xchg
test
jb
in
pop
fmulp
or
xchg
or
int3
or
add
jmp
lea
cbw
adc
xchg
lea
jb
push
jle
mov
inc
and
rcr
xor
gs
mov
xchg
mov
mov
fidiv
jae
out
adc
xchg
enter
out
pop
xor
in
add
mov
(bad)
ror
scas
xchg
push
ja
xlat
xor
cdq
sbb
je
inc
ret
sbb
xchg
inc
(bad)
ins
pop
not
dec
in
(bad)
test
mov
loop
mov
mov
sub
inc
pushf
cmp
dec
xchg
sub
call
sbb
les
pop
enter
cdq
push
(bad)
neg
add
ss
adc
scas
pop
out
test
fiadd
jl
pop
mov
fwait
and
aas
sub
or
xor
add
cwde
int3
fist
sub
jmp
sbb
enter
dec
pop
sbb
pushf
jae
mul
(bad)
mov
scas
jp
repnz
push
inc
stc
sub
scas
jmp
(bad)
loopne
fnstsw
outs
inc
cdq
mov
mov
mov
push
xabort
or
out
xor
pop
lea
ret
or
dec
xchg
std
xor
dec
fcomp
pushf
pop
fs
je
out
int
jmp
sbb
sbb
or
je
rcl
cwde
lahf
repnz
iret
popa
push
add
mov
cwde
or
cwde
sbb
xchg
stos
out
cs
jb
loope
loop
into
cmc
pop
arpl
dec
inc
lea
push
pop
mov
sub
xor
(bad)
jno
jo
sbb
pushw
jmp
mov
fsub
sub
and
inc
mov
cmp
mov
adc
repz
pop
dec
add
movs
cs
or
xchg
fwait
sbb
retf
or
ins
inc
jmp
pop
jg
dec
inc
xor
outs
clc
imul
shl
inc
jmp
or
and
sub
push
clc
sahf
add
es
push
sbb
mov
push
repnz
dec
gs
retf
and
mov
jecxz
call
clc
daa
mov
ret
lock
cmp
test
(bad)
(bad)
mov
(bad)
sbb
mov
jae
and
std
jecxz
dec
xor
mov
mov
sbb
push
movs
xor
in
mov
mov
aam
ror
mov
xchg
scas
or
jl
js
inc
mov
fnstcw
cmp
mov
jb
and
pushf
inc
call
movs
aas
add
mov
scas
push
cdq
cdq
pop
mov
adc
loope
call
pop
jp
cmp
mov
jno
dec
stos
xor
xchg
test
(bad)
xor
mov
out
in
push
lahf
lods
inc
or
mov
xor
js
push
pusha
bound
sub
(bad)
fisub
popf
popf
jne
in
fsub
or
aam
fild
mov
ss
dec
loopne
je
push
sub
inc
and
cdq
movs
mov
jnp
sahf
mov
or
xchg
sar
jle
sbb
outs
sub
fimul
jl
adc
aas
mov
fiadd
bound
loopne
movs
mov
mov
mov
push
movs
jle
aaa
enter
cmps
outs
sbb
jns
push
jne
sbb
in
mov
jl
ret
cmps
jnp
push
adc
sbb
lahf
aad
nop
repnz
mov
mov
sti
push
ret
mov
test
retf
out
icebp
clc
jno
into
loope
ja
mov
test
xor
dec
js
cmps
cs
in
mov
jmp
xchg
mov
xor
pop
and
ins
mov
cmp
shl
cmp
cwde
jmp
or
ds
jle
imul
mov
add
std
mov
movzx
ret
sbb
dec
add
dec
retf
pop
add
std
mov
pop
ret
dec
test
outs
sub
inc
xchg
adc
lock
mov
mov
inc
push
test
clc
inc
sbb
stos
xchg
add
loopne
mov
or
pop
and
int3
xchg
mov
jmp
adc
inc
sbb
jno
bound
sti
pop
test
jo
jbe
pop
fldenv
into
mov
mov
or
fsubr
enter
xlat
ds
or
test
loopne
push
pop
cmp
(bad)
outs
xchg
popa
shr
pop
aaa
out
in
xor
movs
into
daa
xor
push
mov
pop
jne
cmp
cmps
hlt
aas
jbe
fisttp
int3
int3
lods
ja
loop
test
cmp
cmp
jb
jo
movs
adc
test
shl
(bad)
scas
lock
test
push
das
(bad)
sub
pop
pop
push
pop
sbb
dec
mov
adc
or
mov
adc
and
jg
daa
in
xor
mov
addr16
test
outs
dec
push
mov
or
stos
inc
fldcw
or
pusha
fsubr
icebp
not
xlat
cmp
add
add
dec
fs
push
cmps
lods
test
fldcw
or
clc
test
mov
cld
shl
and
int
push
cmp
imul
pop
cmp
add
and
mov
daa
sahf
cmc
mov
mov
or
lea
dec
mov
iret
and
movs
sub
outs
cli
jno
xchg
cmp
inc
push
push
jge
fwait
shl
xchg
(bad)
inc
and
repz
sub
lods
sysexit
mov
call
sti
movs
packuswb
cmp
add
cld
add
sbb
or
movs
mov
xchg
test
pop
sbb
cmps
xlat
repz
inc
push
and
aam
sar
leavew
dec
ret
loopne
lock
rol
inc
mov
lock
cwde
and
cli
lock
(bad)
fstp
mov
pop
or
push
fdiv
in
lea
jnp
and
jmp
mov
mov
and
pop
sub
test
loop
lea
xor
cli
mov
nop
aam
mov
push
inc
inc
cmp
loopne
call
mov
jmp
stc
loop
arpl
pop
push
sbb
fwait
js
stc
fs
jb
loope
fistp
pop
mov
rol
hlt
xchg
mov
and
mov
rol
and
lods
mov
xchg
fs
inc
jbe
xchg
adc
pop
inc
ins
push
test
adc
out
xor
dec
adc
or
or
loope
mov
ror
cmps
fist
xor
sub
xor
int3
mov
pop
arpl
call
push
lahf
sub
(bad)
sbb
mov
push
imul
jg
ja
sub
stc
inc
pop
out
test
mov
and
mov
jns
(bad)
xor
pusha
sbb
dec
mov
xor
ja
mul
imul
jbe
and
sti
jp
xchg
or
mov
fmul
xor
inc
imul
push
scas
pop
or
movs
scas
ret
xor
call
xor
(bad)
xchg
cwde
inc
leave
mov
cmp
loope
movs
mov
rcl
push
and
pop
xchg
mov
fwait
add
pop
rol
xchg
addr16
loopne
mov
hlt
or
cmps
jns
push
dec
outs
movs
in
mov
inc
mov
adc
(bad)
cmp
dec
pop
shl
lock
jne
push
xlat
push
or
inc
or
inc
and
aam
fisttp
mov
xchg
imul
pop
gs
cwde
pop
xor
imul
adc
cli
xlat
pusha
loope
fs
xchg
cmp
ja
repz
cmc
ret
outs
push
rcl
inc
add
repz
add
lods
or
adc
(bad)
in
ss
aas
popf
in
(bad)
pop
ficom
ss
mov
frstor
mov
daa
mov
push
adc
(bad)
ret
fcomp
std
add
dec
rcr
jg
popa
push
(bad)
in
cmps
sar
ins
fidiv
icebp
xor
mov
ins
stos
loope
lahf
retf
xchg
(bad)
sar
pop
push
and
xor
sbb
inc
ins
std
add
lods
dec
leave
jnp
mov
jmp
sahf
mov
sbb
sahf
dec
aad
dec
xor
pop
xchg
add
repz
les
lods
dec
(bad)
adc
xor
leave
out
dec
std
pop
imul
bound
(bad)
mov
xchg
aas
mov
and
sahf
cmp
inc
inc
stc
and
dec
pop
popa
jae
jl
add
jmp
es
push
inc
ja
inc
cmp
ins
cmps
jo
ror
dec
xor
sub
cmc
xlat
enter
mov
jl
int3
dec
jns
and
sbb
xor
scas
aaa
dec
inc
call
mov
arpl
mov
cwde
ins
mov
add
les
push
cmp
pop
mov
dec
add
push
pop
and
or
movs
inc
das
cli
jl
xor
loope
les
into
xchg
or
xchg
popa
mov
adc
cld
cs
daa
jne
mov
adc
ins
or
sbb
cdq
cmp
or
enter
add
cmp
lods
call
xlat
test
fdivp
inc
adc
sub
add
pop
stos
mov
cmp
jb
retf
add
sub
pop
(bad)
sub
aas
or
jbe
sub
mov
push
mov
stos
icebp
fcom
(bad)
xchg
sbb
jb
jl
sbb
xchg
sar
fs
cdq
(bad)
jae
les
in
fimul
xor
fs
xchg
in
or
sbb
repnz
mov
outs
sub
inc
daa
inc
daa
add
mov
sbb
xchg
pop
jnp
ret
add
mov
sub
adc
mov
pop
add
mov
mov
lods
sub
retf
leave
jmp
into
shl
pop
out
dec
and
xor
test
mov
mov
xchg
fistp
jp
mov
cmps
pushf
cmps
jp
pusha
loopne
addr16
mov
push
push
dec
aam
nop
inc
out
push
sbb
mov
xor
pop
mov
mov
jbe
aas
jmp
pop
push
push
mov
mov
push
pushf
and
mov
out
xor
cmp
push
fwait
pushf
stc
jo
mov
test
and
or
dec
adc
cmp
je
or
pop
jmp
imul
mov
(bad)
pop
adc
pop
pop
mov
pop
push
mov
fucomi
ret
inc
add
dec
adc
pop
cli
pop
enter
aam
xor
sbb
stos
jnp
and
jnp
lock
jne
sbb
mov
inc
ret
sti
mov
pop
xchg
mov
aad
mov
dec
fsubrp
dec
lds
in
add
mov
in
adc
mov
imul
add
pop
xchg
dec
ror
call
test
jp
das
push
cdq
jne
mov
fstp
loope
jnp
pop
pop
repz
add
cmc
pop
pop
mov
xor
imul
xor
cdq
sar
and
mov
lahf
call
icebp
retf
and
aaa
adc
push
mov
mov
and
test
dec
push
dec
cmc
(bad)
pop
fucomi
repz
or
fcmovnbe
(bad)
mov
inc
stos
cmp
icebp
and
inc
mov
das
cmp
pop
in
scas
sti
ror
push
mov
push
into
mov
fadd
xlat
mov
jnp
outs
pop
into
mov
outs
cmp
pop
loopne
lock
push
mov
retf
push
call
cdq
ins
xlat
popf
cmp
test
mov
lods
aad
xchg
inc
aas
leave
adc
ja
mov
loop
jl
cmp
pop
mov
cld
rol
or
inc
scas
movs
aaa
mov
fisub
xor
inc
out
mov
daa
test
push
ds
sub
push
hlt
fwait
mov
shl
dec
or
jmp
daa
ins
add
fdiv
addr16
pop
sbb
call
push
push
xor
sub
or
gs
add
pusha
(bad)
mov
(bad)
jmp
(bad)
(bad)
sbb
push
addr16
and
in
fcom
xchg
mov
jmp
sbb
loop
cmc
jbe
mov
movs
sar
les
xor
call
stos
inc
aas
jge
dec
push
loop
mov
cs
sbb
mov
add
and
sub
out
pop
outs
xchg
retf
cld
scas
test
fcmovnu
jp
inc
lock
xchg
aaa
push
in
sub
repnz
pop
pop
jp
or
cmps
shr
pop
mov
scas
out
pusha
jnp
or
les
repz
push
ret
sbb
dec
fdiv
das
aas
add
add
jno
fcomp
add
aas
cdq
dec
(bad)
rcr
call
movs
pop
pop
push
mov
cmps
lock
(bad)
cmp
add
mov
inc
iret
sbb
jl
test
pop
ss
sbb
and
in
jne
lahf
cwde
mov
dec
xchg
aas
cdq
cmc
fmul
pop
xchg
mov
push
leave
das
adc
mov
mov
xor
sar
xchg
pop
out
out
in
jbe
lods
xchg
test
jge
lahf
pop
mov
pop
hlt
adc
xchg
jnp
mov
sbb
div
pop
inc
xor
enter
fisubr
jo
mov
push
or
outs
enter
repz
sar
pop
and
or
cmp
test
(bad)
nop
cmp
(bad)
rep
sti
fs
in
int3
xchg
sar
lods
push
mov
xor
inc
jge
test
push
xchg
(bad)
lock
xchg
sub
add
sub
push
mov
jge
sbb
or
xor
pop
jb
outs
mov
or
in
inc
bound
pop
pop
cmc
enter
sbb
lea
ja
adc
gs
cmps
cmp
sbb
mov
mov
xchg
aas
cmp
outs
cmp
jne
sbb
arpl
adc
mov
cld
adc
rcl
xchg
sub
test
ret
imul
push
pushf
(bad)
int3
xlat
sbb
pop
xchg
fs
rep
jb
leave
neg
jnp
dec
cdq
loopne
jb
xchg
ficomp
leave
or
cmc
retf
mov
push
in
push
push
push
ret
adc
xchg
xchg
xchg
lock
dec
ja
sub
int
into
adc
and
pop
dec
(bad)
jecxz
ja
mov
adc
nop
icebp
or
push
call
pop
mov
cmp
ins
fs
xor
test
cmp
imul
rcr
push
shr
stc
push
pop
out
push
fwait
pop
es
push
jmp
imul
das
dec
adc
stos
jo
loop
inc
shr
bound
pop
cmp
mov
inc
fcomp
xchg
enter
cwde
rcl
fidiv
mov
fwait
mov
sbb
or
(bad)
lea
pushf
dec
sub
jp
inc
xchg
fsub
out
loopne
(bad)
loope
int
xor
fisub
add
loopne
int
dec
or
fisttp
pop
es
jge
pop
or
arpl
push
mov
aas
jecxz
adc
mov
ja
ja
jecxz
in
cmp
pop
push
mov
js
(bad)
pop
and
(bad)
and
jle
sbb
cwde
and
das
and
fcomp
sub
sbb
shr
and
inc
pop
loopne
xchg
cli
sub
ror
inc
(bad)
xor
and
int3
stos
ds
jns
cmps
leave
xor
retf
lods
sti
(bad)
push
mov
jmp
push
les
clc
iret
jmp
lods
ins
sub
pop
dec
cmps
fisttp
sbb
jne
pop
cmps
cmp
adc
mov
popf
test
scas
pop
pop
mov
xchg
mov
sbb
jne
shr
mov
push
mov
stc
pop
jg
mov
mov
fistp
sbb
sub
(bad)
icebp
idiv
push
cwd
ss
xchg
in
cld
lea
mov
pop
pop
retf
or
mov
mov
push
leave
repz
int
(bad)
adc
jmp
push
repz
dec
cmp
leave
fiadd
out
data16
xchg
cmps
shl
aaa
test
xor
sbb
mov
push
stc
enter
mov
dec
dec
les
mov
xchg
xor
lahf
in
fsubrp
push
and
xchg
(bad)
jge
xchg
xlat
push
cmp
cmp
mov
mov
nop
or
daa
sub
dec
into
xchg
test
cli
sub
jp
mov
aaa
xchg
out
xchg
or
scas
pop
rcl
mov
call
push
shl
jb
iret
pop
mov
xor
hlt
xchg
movs
inc
pop
mov
pop
cld
push
sbb
ja
call
sub
cld
mov
(bad)
(bad)
pop
sub
inc
push
out
mov
push
xchg
das
sbb
mov
ins
cld
pushf
jmp
pop
adc
cmps
and
ret
push
cmp
push
ja
arpl
and
addr16
sar
stc
mov
(bad)
imul
cmp
lds
imul
sbb
cmps
pop
mov
sbb
fisub
xchg
mov
jecxz
push
lods
ror
pop
fst
lea
sbb
(bad)
add
mov
ror
out
push
call
in
inc
mov
out
fsub
rcr
jge
inc
sbb
sbb
mov
mov
lahf
and
aad
ins
fidiv
fdivr
test
or
mov
fwait
inc
xor
xchg
xor
fcom
adc
test
xchg
jecxz
lods
add
dec
gs
xor
jns
mov
aas
cmp
dec
mov
adc
xor
hlt
xlat
jg
rol
shl
dec
daa
adc
jb
cmove
mov
in
push
push
out
jp
jl
mov
stos
out
mov
pop
fwait
sub
aas
xchg
xor
lock
xchg
jb
lods
test
fmul
cdq
push
adc
cmps
test
fdivr
dec
mov
push
adc
mov
in
dec
(bad)
loop
mov
(bad)
or
mov
adc
adc
jmp
fadd
bound
mov
xlat
inc
and
in
and
mov
jbe
xchg
gs
add
mov
aas
cmp
popf
les
jecxz
sbb
repz
dec
cmp
xor
test
mov
xchg
pushf
mov
pop
outs
test
out
jecxz
out
dec
sahf
lods
add
sar
pop
dec
jb
stos
rol
pop
mov
out
push
sbb
in
das
xchg
mov
add
push
data16
pop
int3
dec
in
push
sbb
pop
push
mov
bound
cmp
mov
sti
add
neg
and
shr
add
jmp
cdq
cmp
imul
and
xchg
aam
pop
js
pop
jg
mov
mov
jno
or
shl
mov
loopne
mov
xchg
pusha
adc
rcpps
mov
pop
movs
hlt
addr16
push
cdq
jmp
repnz
mov
(bad)
cmp
mov
xlat
out
sbb
mov
leave
or
enter
add
xchg
or
lea
sti
push
adc
push
lds
xchg
adc
icebp
cdq
je
xchg
jb
inc
test
mov
repnz
aaa
fwait
loope
inc
xchg
and
cmps
add
popf
jecxz
mov
xchg
sub
or
out
jb
(bad)
ficom
out
enter
daa
test
cs
cmp
mov
movs
jo
adc
inc
xor
jne
out
xor
xor
(bad)
sub
and
push
add
jne
add
in
ins
mov
out
mov
mov
retf
clc
std
fisubr
dec
in
out
push
sahf
in
retf
stos
cwde
mov
test
mov
inc
lods
in
sahf
ds
shr
mov
nop
xchg
test
sti
popf
(bad)
ds
push
movs
lahf
out
sub
and
mov
in
ret
mov
out
icebp
movs
or
cli
call
pop
pop
xchg
jl
outs
dec
iret
xsha256
cmps
xchg
int
fisttp
std
pop
pop
or
retf
jmp
cmp
aaa
test
cmp
call
das
in
mov
out
push
cmps
push
cmp
outs
fisttp
sub
inc
push
and
lods
mov
cmp
call
adc
cmp
fist
in
xor
mov
loope
addr16
xor
out
aad
sbb
bound
add
mov
push
(bad)
xor
ja
aaa
mov
rcl
jnp
xchg
mov
addr16
or
sbb
cmp
out
jo
or
mov
push
(bad)
push
div
mov
or
mov
lea
pusha
jmp
stos
sbb
test
adc
xchg
inc
dec
enter
fdiv
jnp
and
push
push
inc
mov
vmwrite
pop
ja
pop
jecxz
lods
hlt
dec
mov
sub
xchg
and
sahf
js
pop
adc
mov
inc
shl
fcom
push
ret
rol
(bad)
pop
xor
and
iret
(bad)
mov
jecxz
int
dec
(bad)
fcomp
es
or
scas
xor
jp
mov
test
leave
sub
pop
enter
jmp
mov
fstp
sbb
mov
sti
xor
cwde
leave
rcl
and
mov
add
imul
sub
clc
pop
je
(bad)
hlt
imul
jmp
sub
sti
pop
test
push
gs
iret
popa
push
mov
and
push
add
jmp
aas
adc
add
cli
and
sub
cmps
or
xor
fstp
mov
lds
pop
dec
xchg
and
test
out
addr16
add
pushf
ficom
hlt
data16
(bad)
mov
fst
sbb
mov
or
sub
daa
test
push
push
mov
push
push
xor
add
cs
stos
call
inc
into
std
loop
les
dec
ret
cld
fcmovu
popa
repnz
xchg
inc
sar
xchg
mov
fsub
ss
jle
shr
or
outs
or
lds
jnp
lock
sbb
mov
jae
into
jl
inc
nop
(bad)
fnstcw
push
hlt
pusha
jg
(bad)
outs
bound
add
jmp
shl
int
or
push
lods
jp
ds
push
ins
inc
sub
(bad)
and
add
mov
test
adc
loope
xchg
and
call
sub
clc
jns
pop
pop
into
mov
sbb
out
shl
mov
(bad)
fldenv
jae
ret
sub
pop
sahf
push
or
shl
push
scas
leave
fs
jge
test
stc
xor
lds
mov
push
jmp
rcl
xchg
hlt
xchg
sub
stc
jmp
fwait
(bad)
cli
loopne
push
mov
call
or
mov
mov
add
and
pop
arpl
xchg
aam
cmp
sbb
dec
sbb
push
jp
pop
(bad)
pop
add
scas
out
ins
retf
jecxz
sub
data16
rcr
jne
xchg
push
retf
je
inc
scas
mov
and
and
dec
fsub
int
(bad)
icebp
sub
fisttp
add
mov
jmp
lods
out
and
rcl
push
cmp
rdtsc
repz
push
mov
add
sub
cld
pop
movq
jnp
and
bound
adc
arpl
pusha
sub
sbb
xor
jle
or
inc
mov
inc
es
jg
fnsave
loope
int3
push
mov
out
mov
jne
loope
xlat
mov
aas
std
mov
ficomp
push
scas
gs
pusha
lock
ret
adc
dec
jmp
add
adc
jns
imul
jle
push
(bad)
xchg
xchg
xchg
mov
mov
mov
xor
mov
mov
xchg
cs
sbb
outs
sub
inc
movs
rcr
shl
dec
inc
scas
push
dec
rcl
mov
mov
repnz
pop
jl
jecxz
jmp
mov
cmc
jecxz
ror
adc
hlt
movs
das
loop
test
(bad)
fnsave
jmp
out
sbb
sbb
xor
mov
mov
out
sbb
popa
mov
xor
out
into
push
push
add
test
mov
test
loop
jno
lea
xchg
push
idiv
(bad)
pop
pop
add
repnz
ror
cmp
retf
or
sub
add
lds
fisub
in
or
and
jae
(bad)
js
test
pop
push
call
push
int3
imul
jnp
mov
adc
xchg
ret
or
dec
xchg
push
cwde
mov
sahf
hlt
lods
add
fwait
retf
jge
add
mov
imul
and
mov
(bad)
outs
(bad)
hlt
scas
mov
fdiv
stos
and
mov
jne
call
outs
and
xor
mov
add
xchg
sub
in
or
movs
enter
test
cmp
xor
xchg
cmp
fcom
and
mov
pop
iret
out
xchg
into
push
xor
es
cli
add
dec
fdivr
mov
das
int3
test
in
adc
gs
jne
ins
mov
fimul
dec
test
xchg
inc
sub
xchg
xlat
mov
ds
xchg
cmps
sbb
fsubr
gs
and
outs
pop
push
cmps
push
sti
xlat
inc
mov
xchg
shl
ja
fistp
lea
fdivr
or
mov
loope
xor
mov
adc
(bad)
mov
scas
movs
loope
hlt
jae
pop
mov
rcr
mov
call
xchg
xchg
fwait
sti
retf
mov
jae
jne
ins
mov
hlt
gs
mov
xor
push
sbb
(bad)
adc
cmp
dec
leave
pop
sbb
fwait
push
and
mov
xchg
test
push
sub
repz
fsub
out
test
mov
jb
jmp
popa
dec
push
cmp
fwait
(bad)
adc
test
inc
pop
jne
jp
fucomip
(bad)
stc
(bad)
cmps
scas
inc
adc
push
pushf
imul
stos
dec
xchg
xchg
daa
cmp
lock
or
cmps
mov
int
inc
dec
inc
add
and
dec
lods
leave
jnp
ret
jle
or
sbb
fmul
ror
inc
mov
mov
cmps
or
pop
push
nop
loope
out
lea
mov
dec
sub
mov
lock
inc
cmc
inc
repz
xchg
clc
les
mov
inc
sbb
pop
or
cmc
(bad)
fcomp
pop
js
adc
retf
inc
leave
(bad)
xchg
repz
xchg
in
dec
sbb
out
lods
outs
out
out
mov
mov
or
pop
and
or
call
xchg
sahf
fstp
xchg
or
xchg
out
xchg
imul
loope
inc
arpl
js
outs
ror
mov
lds
push
sbb
pop
outs
inc
inc
ds
xor
mov
xchg
lea
test
sbb
add
iret
(bad)
ds
xor
jle
adc
aas
fs
push
scas
pop
outs
out
or
js
sub
cmp
loop
mul
mov
push
imul
mov
movs
push
push
jmp
mov
adc
lea
push
in
imul
fmul
test
mov
clc
xchg
mov
rol
test
jmp
fs
dec
outs
mov
push
test
sbb
xchg
mov
test
jns
ds
ja
repz
dec
xchg
jmp
ins
and
mov
stos
xor
call
lea
enter
lahf
and
mov
stos
(bad)
push
loop
mov
pushf
ds
push
mov
cld
xor
jl
test
sub
jo
loop
xor
sub
dec
clc
sub
push
popa
inc
push
inc
xchg
sbb
cmp
or
fnstcw
ret
mov
jl
dec
les
popa
fisub
(bad)
stc
dec
push
not
xchg
into
lahf
mov
cmp
push
repz
sub
pop
rcr
stc
fist
call
cmp
push
cwde
int3
push
(bad)
loope
sbb
hlt
ror
js
lea
ins
and
mov
ret
ret
cmp
das
fcmovne
dec
std
cmp
pushf
xchg
xchg
dec
aad
shl
rcl
xchg
mov
xchg
push
hlt
(bad)
stos
inc
les
sbb
loopne
push
std
fmul
mov
sbb
loopne
sub
sti
xchg
and
xor
jmp
cdq
aaa
loopne
cmp
cmp
into
scas
cmp
sub
sbb
and
je
or
imul
xchg
pop
aas
dec
in
push
in
pop
add
das
das
jmp
mov
push
test
xchg
mov
test
cmp
loope
stos
into
dec
cmc
pop
fild
jae
adc
adc
sbb
mov
mov
stos
adc
push
xor
stc
ins
add
(bad)
lock
sub
outs
sub
xor
fs
sbb
std
dec
bound
les
daa
adc
lods
mov
lods
or
or
ss
int3
outs
bound
push
jmp
pop
ud0
fwait
xchg
outs
sub
repz
mov
push
xchg
ret
je
mov
bound
cmp
dec
ins
outs
(bad)
jbe
dec
push
sub
shr
sbb
or
je
and
dec
enter
add
dec
sar
cmp
aam
sar
dec
loop
pop
call
ins
sub
or
pop
mov
cs
jno
loopne
sub
mov
inc
dec
and
rcl
sub
test
push
sbb
pop
dec
test
sbb
xor
shr
gs
in
cmp
adc
cmp
pushf
sbb
into
push
xchg
pusha
mov
retf
arpl
cmc
lahf
and
jle
lods
push
lock
sub
mov
fcomp
pop
xchg
retf
iret
xchg
cwde
or
das
std
and
fistp
mov
ds
push
movs
scas
retf
cmc
fcomp
(bad)
lahf
sub
push
mov
push
push
cli
dec
push
add
(bad)
pop
(bad)
mov
sbb
aam
push
stc
jle
inc
fwait
dec
mov
mov
cmc
lds
and
imul
xor
shr
dec
pop
stos
clc
loop
sar
and
arpl
jmp
stos
pushf
jg
pop
jmp
or
sub
push
(bad)
js
push
push
pop
pop
shl
adc
bound
pop
popa
pop
std
mov
xor
and
shl
aaa
mov
mov
jle
jmp
sub
sub
mov
hlt
pop
cs
mov
cmp
iret
push
retf
or
xor
push
jmp
mov
scas
jae
shr
jle
add
pop
mov
and
mov
add
mov
xchg
cs
cmp
add
lock
push
xchg
fdiv
jbe
sub
aas
sbb
pop
pop
mov
retf
cmp
push
aas
ffree
repnz
cmp
pop
or
mov
test
test
mov
push
out
pop
call
jne
popw
ror
cli
dec
ja
dec
ret
aas
in
add
sahf
jae
popf
retf
push
mov
stos
dec
cwde
rcr
das
or
mov
test
sub
jno
jmp
mov
sti
push
adc
xchg
push
addr16
fdiv
sub
js
outs
fwait
clc
add
push
lds
and
adc
mov
push
(bad)
fist
fcmovb
pop
xchg
(bad)
ss
adc
loope
movs
ss
mov
pushf
lods
pushf
push
dec
xchg
mov
pop
lahf
add
popf
push
mov
pop
xor
mov
pop
jmp
cmp
int3
or
inc
mov
fiadd
call
icebp
mov
and
fs
int3
cmp
enter
pop
fist
mov
sub
or
mov
xchg
jle
pop
push
mov
cmp
mov
retf
fucom
ds
sub
popf
inc
adc
push
pop
sar
or
sti
in
bound
sub
cwde
push
test
data16
mov
add
les
outs
pushf
xchg
inc
rol
ja
sbb
mov
or
jl
sbb
lea
jne
nop
sbb
test
lods
out
mov
sub
sar
lea
mov
jmp
sbb
aaa
out
outs
aaa
pop
adc
pop
outs
pop
enter
or
(bad)
cli
outs
jge
sbb
xchg
jecxz
inc
test
jmp
mov
addr16
mov
inc
jmp
xchg
pop
icebp
hlt
and
call
fwait
cdq
xchg
xchg
lahf
mov
data16
xor
dec
repnz
retf
cmp
cmp
push
mov
cmp
out
inc
jmp
mov
scas
repz
sbb
popf
jo
aam
cmps
xor
jle
fbld
jp
push
mov
(bad)
shl
imul
fs
loope
jb
pop
loop
or
inc
or
jb
loop
or
pushf
jmp
cmp
mov
adc
pop
xor
cli
jae
cmp
imul
cs
scas
outs
xchg
push
jne
movs
test
(bad)
xor
outs
in
push
mul
je
push
jae
or
das
inc
inc
scas
mov
out
ret
sbb
out
or
sar
sbb
mov
ins
adc
or
pop
sbb
jmp
adc
add
dec
outs
lods
mov
pop
push
add
lahf
in
repnz
jns
jno
popa
mov
out
pusha
jl
mov
aas
push
jge
int
inc
lock
mov
es
push
repz
ret
bound
mov
stos
jne
mov
mov
or
ss
scas
(bad)
mov
add
scas
sbb
(bad)
je
mov
jl
xchg
inc
push
(bad)
icebp
(bad)
mov
pop
scas
jmp
mov
cli
dec
inc
inc
mov
mov
jl
push
test
retf
dec
pop
sar
pop
jg
lods
push
pop
jno
(bad)
ror
cmp
pop
mov
pushf
sub
pop
addr16
sbb
cmp
xchg
cmp
movs
bound
mov
daa
xor
into
and
add
not
mov
sbb
cwde
mov
adc
xchg
jg
jmp
lds
popa
sub
inc
or
loopne
add
adc
dec
xchg
cmp
cmp
fdiv
push
or
loop
aam
push
out
cmp
addr16
rol
adc
and
bound
gs
outs
enter
pop
into
out
jle
pop
call
in
pop
inc
fnstcw
pop
ret
mov
sbb
add
xchg
rcl
cmp
rol
pop
mov
loope
adc
aad
retf
mov
push
mov
sbb
mov
jns
(bad)
mov
or
xor
mov
xchg
movs
and
pop
jns
xchg
out
or
add
fs
test
inc
jns
xchg
xchg
(bad)
ret
and
and
iret
ins
jae
pop
xor
mov
or
lahf
jecxz
mov
sbb
xchg
retf
jbe
mov
push
sbb
xchg
xchg
xor
cmp
mov
cmp
fsub
jb
retfw
mov
ret
aad
sbb
stc
adc
aas
xchg
pop
cdq
mov
adc
stc
into
cmp
sahf
test
dec
mov
out
pop
dec
add
lods
int3
popf
outs
xor
aam
jae
stc
jmp
test
lods
lea
mov
pop
cmp
stos
and
enter
inc
outs
aad
mov
loopne
lds
fst
jae
add
aad
popa
jb
cmc
(bad)
xchg
std
pop
aaa
cmp
stc
dec
daa
out
pop
xchg
inc
repz
or
inc
push
mov
mov
cmps
lods
fsubr
das
retf
sbb
inc
xchg
xlat
mov
es
in
rcr
jbe
lods
jle
push
out
xchg
dec
jns
sbb
inc
dec
sbb
xchg
dec
sbb
dec
arpl
and
ins
cmps
push
xchg
lds
jl
pop
shl
movs
inc
or
mul
cli
cmp
lods
es
jno
jb
or
addr16
pop
mov
les
scas
dec
pop
pop
adc
shl
outs
hlt
(bad)
out
push
inc
clc
adc
(bad)
fcom
(bad)
repz
mov
xchg
push
and
adc
or
sbb
add
xor
jmp
iret
sub
(bad)
jnp
fbld
mov
loopne
mov
xchg
xchg
shl
repz
cmps
adc
inc
out
loopne
inc
add
aad
addr16
lds
mov
test
xor
inc
inc
push
sub
fsub
add
(bad)
cmc
xchg
arpl
sub
and
push
or
adc
dec
inc
dec
mov
out
repnz
sbb
cmp
mov
push
push
dec
mov
jo
lods
push
pop
mov
add
cmps
imul
add
dec
add
inc
inc
xor
shl
jle
shr
dec
push
aas
test
rol
xchg
xchg
xchg
mov
mov
fisub
sar
cmp
push
add
repz
and
add
xchg
enter
pop
outs
pop
loope
mov
aas
pusha
jle
push
imul
cld
cld
mov
pushf
mov
es
ja
bound
(bad)
(bad)
sti
sub
pop
movs
and
mov
test
xchg
daa
inc
out
and
pop
neg
xchg
imul
dec
ja
or
scas
fild
fstp
jp
enter
cs
xor
test
push
call
popf
shl
push
imul
fild
pop
aas
aad
inc
dec
push
xor
push
pop
xor
jno
mov
outs
and
pop
cli
inc
or
neg
js
mov
rol
test
repz
fmul
stos
test
jg
pushw
mov
jl
stc
je
loope
shl
jle
ret
push
popf
fcmovnu
jae
loopne
and
xchg
dec
sub
dec
push
stos
and
dec
neg
repnz
xchg
adc
and
or
jl
lods
inc
out
iret
pop
cmp
sub
mov
mov
cmps
sub
cmp
shl
outs
jbe
rcr
adc
adc
pop
lods
push
cmps
mov
push
lods
(bad)
jnp
xchg
test
sbb
cmc
add
js
add
jnp
out
push
cmp
shl
jno
ss
jnp
es
adc
or
inc
add
mul
dec
data16
pop
sahf
ss
stos
inc
push
lods
(bad)
fst
mov
push
mov
rol
xchg
es
clc
pminub
xchg
cmps
push
push
icebp
cdq
adc
call
sub
mov
stos
cdq
jp
neg
mov
pop
stc
dec
jecxz
std
pop
mov
inc
das
jnp
inc
cmp
xor
adc
xchg
xor
fdiv
cmp
aas
cdq
stos
fnstcw
test
repnz
sub
push
jmp
loope
aas
in
xchg
aam
inc
ins
aaa
rol
ins
int
ror
and
jl
loop
loop
rol
out
cmp
pop
inc
fistp
lea
fisttp
xchg
lods
cmc
jge
pop
gs
or
jno
call
mov
int
or
ss
arpl
call
ins
fld
cmp
ret
pop
mov
sub
icebp
sar
lods
xor
mov
sahf
jno
push
and
lahf
es
xor
dec
(bad)
in
or
push
in
cmc
add
jae
add
gs
fnstcw
cwde
mov
ja
cmps
int3
inc
in
jmp
out
cmp
add
pop
add
cmps
js
out
int3
xor
cmp
arpl
repnz
mov
mov
hlt
gs
rol
adc
lds
sbb
in
xor
je
push
pop
jb
aad
aas
xor
cwde
mov
cwde
dec
or
rcr
mov
mov
push
push
dec
sub
gs
and
pusha
sbb
clc
jmp
mov
push
data16
sub
inc
jmp
xor
in
cli
pop
or
sahf
inc
sub
sbb
fwait
lea
out
inc
add
push
ss
sbb
push
pop
xchg
and
dec
inc
push
test
addr16
push
inc
pop
or
loope
stc
nop
jmp
pop
lea
or
das
loopne
and
cmp
pop
adc
cmps
fwait
or
into
sbb
lds
icebp
lock
or
loopne
jmp
jo
cmp
mul
and
or
in
fistp
or
adc
(bad)
out
inc
jmp
sbb
add
xchg
mov
(bad)
std
pusha
cmc
xor
pminsw
fadd
retf
jb
ficomp
push
inc
fadd
ret
adc
int
movs
cwde
shr
mov
sbb
xchg
xchg
pop
ror
xchg
sbb
ror
jae
jg
inc
jbe
shl
jmp
push
retf
mov
push
shl
add
jle
xchg
mov
outs
mov
dec
ror
and
std
jae
push
xchg
rcr
cmps
jnp
xchg
ins
xor
jmp
mov
mov
mov
fimul
fstp
jecxz
outs
adc
sahf
inc
jae
rol
mov
mov
movs
mov
mov
(bad)
test
iret
pop
pusha
ficom
dec
inc
mov
push
adc
stos
or
addr16
xchg
cmp
addr16
cmp
jecxz
bound
fwait
sbb
inc
and
test
pop
pop
scas
(bad)
add
add
mov
xor
js
jae
mov
xor
push
or
shl
mov
push
push
test
xlat
xor
push
dec
(bad)
cmp
sub
jns
mov
les
in
sub
mov
or
sahf
push
ret
inc
sub
jo
popa
inc
xchg
mov
(bad)
in
stos
enter
out
dec
and
or
xchg
pop
pop
adc
inc
es
cwde
xchg
mov
out
xchg
ror
xor
cld
adc
scas
je
dec
fadd
sub
outs
shl
aam
std
cli
inc
icebp
inc
cmp
into
fist
xor
aaa
lods
xchg
jnp
sub
(bad)
mov
pop
mov
pop
mov
or
cwde
mov
push
xlat
imul
add
jl
pop
inc
add
push
mov
js
test
frstor
cmp
jle
jno
mov
and
push
and
sbb
or
sub
cmp
movs
sub
sub
dec
or
ins
fwait
scas
inc
jmp
mov
and
push
xchg
add
ffreep
js
stc
xor
outs
adc
inc
es
fcom
inc
ret
mov
pop
inc
in
mov
outs
sub
gs
sbb
aas
mov
test
ja
mov
(bad)
lds
fincstp
mov
cmp
mov
mov
inc
xchg
mov
jecxz
dec
in
xor
mov
lea
sbb
xchg
scas
dec
in
addr16
sub
lds
in
pop
ret
push
sbb
or
dec
out
fadd
adc
and
push
jmp
push
aam
(bad)
inc
xchg
gs
rcr
dec
mov
push
mov
mov
adc
mov
std
ret
out
enter
add
or
sar
mov
jbe
or
xor
push
xchg
xchg
jmp
pop
data16
ss
dec
out
shl
in
repnz
retf
jno
or
mov
test
(bad)
aas
fmul
sbb
(bad)
cmp
movs
jno
inc
pop
rcl
add
fmul
test
test
xor
faddp
or
jl
mov
je
ds
inc
es
adc
into
adc
xor
mov
xor
jecxz
push
xor
dec
hlt
iret
pushf
cs
hlt
adc
pop
jb
into
cdq
(bad)
ret
xor
lahf
and
test
xchg
(bad)
inc
xor
adc
sub
cwde
mov
sbb
in
in
push
fdivr
rol
ds
retf
add
lea
jno
push
push
push
cmp
push
jg
orps
jle
push
mov
pop
and
xchg
sub
xor
cwde
push
xchg
push
mov
mov
int3
sub
mov
(bad)
jo
or
adc
adc
pop
lock
add
shl
xchg
in
shr
shl
out
sti
or
adc
retf
sbb
lods
in
xor
cmp
cmp
cs
and
sbb
push
es
fwait
jecxz
jge
or
mov
or
lods
cmps
xchg
dec
scas
fistp
dec
stos
ja
jg
cs
xchg
adc
jmp
and
mov
sbb
jnp
rcr
inc
or
push
xor
push
mov
jae
in
mov
jb
sbb
fidivr
in
push
test
pop
fstp
ret
idiv
nop
xlat
fwait
cmp
dec
in
mov
inc
lock
dec
and
add
test
stos
or
push
pop
xchg
rol
ja
movs
addr16
jecxz
stos
xor
aaa
mov
xor
lods
jbe
jmp
popf
ins
or
mov
xor
call
mov
in
rcr
fs
xlat
and
adc
or
sub
sub
jbe
dec
xor
pop
push
(bad)
pop
dec
test
dec
(bad)
dec
pop
jp
test
pop
xor
cld
test
lods
xchg
retf
ss
dec
inc
sti
mov
es
sbb
jae
cmp
test
and
xor
inc
addr16
fchs
shr
sti
stos
xor
jecxz
pop
test
sub
or
outs
pop
loope
fdivr
pop
cdq
es
pop
fucomi
test
sbb
push
mov
and
(bad)
dec
or
pop
xlat
add
adc
or
je
cmp
jae
push
jle
pop
cmp
add
sub
hlt
adc
cmp
scas
ja
retf
mov
jecxz
inc
sbb
push
idiv
cmc
loopne
push
sbb
jmp
add
ja
sub
push
mov
loop
ja
scas
imul
fstp
lods
popf
sub
xor
mov
xlat
jae
shr
adc
movs
pop
mov
out
xor
cli
pop
xor
push
inc
push
gs
(bad)
jmp
stos
mov
and
pop
lds
mov
and
adc
(bad)
pusha
mov
movs
rcr
mov
mul
dec
dec
adc
or
fwait
and
xchg
div
sub
sub
test
jbe
arpl
std
movs
sahf
adc
jb
pop
rcl
mov
cdq
mov
ret
mov
cmp
mov
xlat
jns
cdq
addr16
adc
and
enter
arpl
repnz
sti
cmp
inc
push
jmp
adc
mov
adc
imul
jno
bound
mov
fwait
cmp
push
xchg
inc
xor
push
xor
fst
imul
mov
mov
sbb
or
xchg
stos
dec
sbb
push
jecxz
and
mov
xchg
or
pop
jmp
mov
add
xchg
pop
imul
push
rol
jmp
dec
sub
mov
xchg
jmp
inc
hlt
pusha
sub
jp
repnz
hlt
(bad)
bound
mov
loop
gs
sbb
pop
nop
stos
mov
jp
fisubr
test
nop
into
int3
movs
push
pop
clc
and
je
xchg
ins
mov
push
repnz
fnsave
arpl
jg
je
test
fst
or
add
cmp
enter
jecxz
rcl
pop
mov
sub
cwde
aaa
bound
out
idiv
sbb
ret
mov
xor
dec
shr
bound
mov
and
stos
cmp
icebp
mov
mov
pop
imul
inc
mov
or
cmp
in
mov
popa
push
and
xor
aad
scas
inc
enter
test
or
adc
sub
xchg
or
out
inc
pop
(bad)
cmps
jo
aad
sbb
ret
shl
loop
movs
pop
and
movs
ja
es
iret
mov
adc
and
or
outs
into
dec
mov
inc
pcmpeqd
or
xchg
sub
sub
adc
or
sbb
fnsetpm(287
and
cmc
mov
(bad)
in
xor
aam
in
inc
ret
inc
stos
mov
inc
scas
mov
jo
mov
faddp
jne
ins
xchg
or
retf
xor
out
(bad)
pop
sbb
es
cmp
in
call
push
es
or
out
and
sbb
or
retf
mov
add
aaa
xchg
repnz
cmps
iret
or
test
xor
and
jmp
scas
adc
in
mov
leave
pop
mov
cmp
dec
test
and
sbb
fwait
mov
adc
div
mov
cmp
dec
push
jle
pop
imul
das
enter
fs
xchg
aaa
jnp
in
enter
idiv
adc
cmp
add
mov
icebp
sbb
push
outs
mov
(bad)
cs
retf
fisttp
push
imul
pop
cmps
jl
cmp
stc
fsubrp
inc
push
xchg
cmc
popf
cwde
into
xor
dec
call
xchg
pop
call
data16
pop
jp
jl
in
sbb
call
dec
in
mov
dec
daa
jp
mov
mov
pusha
loope
cmp
and
push
cmp
int
cmp
push
and
imul
push
add
pop
dec
test
sbb
cmp
jbe
loopne
iret
inc
jg
jmp
fwait
icebp
inc
stos
fldcw
xor
sbb
in
mov
jmp
out
mov
les
pop
into
xchg
ror
mov
dec
mov
stc
pop
adc
pop
out
add
call
movs
imul
push
jbe
mov
ins
jne
outs
add
popf
push
mov
leave
mov
aas
je
jns
xor
inc
clc
sbb
scas
test
ja
and
ds
adc
dec
and
fisub
dec
outs
xor
inc
and
ss
jp
add
aad
pop
inc
adc
jl
cmps
push
fnstcw
xchg
sbb
inc
daa
adc
sahf
inc
fld
sbb
sub
outs
sar
gs
jmp
mov
outs
pop
inc
test
cmp
xor
imul
xor
push
outs
into
dec
inc
sub
dec
pop
push
fsub
xchg
mov
push
aad
loopne
add
nop
add
js
inc
inc
in
inc
dec
xchg
into
outs
(bad)
test
pop
add
inc
xor
xor
sbb
rcr
push
push
outs
xor
fucomi
adc
fmul
and
mov
push
sub
mov
pop
(bad)
sahf
xchg
ret
push
shr
xchg
mov
cs
stos
pop
pop
out
cmp
scas
mov
sti
sahf
neg
js
cmp
ins
xor
(bad)
sbb
inc
and
ror
movs
dec
cmp
les
pop
pop
popa
sub
inc
(bad)
adc
dec
lea
sub
push
inc
xor
lea
(bad)
mov
das
jae
add
xchg
data16
cmp
shl
(bad)
movs
mov
cmp
test
dec
jb
scas
sbb
repz
retf
dec
xchg
xchg
push
int
ret
out
mov
cmp
cmp
sub
popf
hlt
xchg
sbb
or
in
pop
dec
ret
nop
inc
(bad)
retf
xor
(bad)
jne
inc
movq
je
push
sbb
mov
adc
sbb
aad
cmp
jp
cmp
mov
jne
fdiv
cmc
sbb
or
lahf
stc
sub
ss
repnz
mov
mov
repz
and
add
retf
retf
push
mov
stc
call
sbb
jl
sub
clc
icebp
clc
repz
out
(bad)
addr16
or
xor
cmp
pop
ins
jno
dec
shl
cwde
test
psllq
push
test
out
data16
dec
mov
test
std
push
xchg
mov
stos
cmp
push
leave
cld
movs
fsubr
daa
in
adc
jns
stc
jb
push
outs
or
or
mov
jb
imul
fdivr
arpl
mov
shr
enter
dec
jno
nop
adc
cmps
cmp
jbe
add
aaa
mov
sub
es
mov
cld
in
scas
or
repz
in
inc
jae
leave
test
leave
nop
xchg
mov
and
adc
mov
inc
inc
dec
mov
stc
sub
xor
lods
lods
aaa
dec
inc
mov
outs
daa
push
add
sub
js
dec
jo
vmread
jbe
das
sbb
add
fcom
daa
mov
js
mov
push
or
sti
mov
xor
xor
jl
add
int3
jmp
nop
ror
push
mov
cmp
sbb
mov
mov
and
retf
lods
mov
mov
cmp
movs
fidivr
push
cmp
mov
mov
popf
cdq
enter
test
mov
stos
mov
pop
popf
retf
or
loop
ficomp
(bad)
push
fadd
loopne
leave
xchg
and
xchg
mov
jp
ja
xchg
jnp
outs
test
cli
jno
sub
out
sub
inc
or
mov
and
ja
outs
test
mov
out
xor
sub
push
jo
int3
pop
push
xor
aas
jae
cwde
adc
or
xlat
sub
and
lds
out
cmp
jp
fiadd
pop
jge
fcomp
inc
shl
test
sti
stos
cmc
push
xor
cmps
cmps
jmp
ss
call
mov
aaa
clc
out
je
ficomp
lods
push
cmp
push
std
das
xor
jmp
mov
out
sub
lds
and
aad
aam
mov
lfs
int3
jbe
mov
test
pop
cmp
push
mov
jno
mov
daa
icebp
xchg
inc
rol
add
and
mov
setb
mov
stos
je
adc
xchg
mov
nop
rol
xlat
mov
(bad)
sti
inc
out
mov
or
push
jbe
rcr
adc
mov
mov
out
add
es
sub
jns
push
jmp
cld
mov
pop
jge
ja
or
lds
call
add
mov
popa
mov
in
mov
add
mov
xor
mov
nop
sti
sar
hlt
mov
fsub
lahf
in
mov
cdq
and
xchg
mov
jo
push
dec
test
push
jl
mov
inc
call
and
(bad)
out
adc
sub
cwde
in
scas
inc
cmp
push
call
pop
rcl
fdiv
add
addr16
mov
sbb
jl
mov
lea
sbb
fild
hlt
jnp
mov
rcl
cli
or
mov
pop
mov
sub
xchg
into
and
jg
sbb
push
adc
and
(bad)
xchg
outs
jg
add
xor
fs
std
sub
enter
dec
push
sbb
or
repz
cmps
push
test
fs
ficomp
jmp
mov
push
mov
rcl
les
jmp
dec
repnz
mov
(bad)
fistp
daa
or
or
xlat
pop
pslld
mov
jge
loope
pop
out
mov
inc
test
mov
mov
pop
push
out
std
lods
scas
sbb
push
push
cmp
xlat
leave
in
mov
push
jo
xor
inc
jp
test
jno
inc
ss
ret
out
or
dec
(bad)
dec
pusha
mov
pushf
add
imul
shr
or
add
pop
aas
xchg
sar
fs
mov
mov
sub
add
xchg
inc
pop
cmps
inc
xchg
push
add
call
jecxz
popf
loop
fistp
add
or
pushf
test
lds
sub
or
cwde
fisttp
in
or
jo
movs
pusha
jl
xlat
std
je
enter
or
scas
cmp
mov
cmp
xchg
repz
push
or
sub
xchg
push
popa
inc
inc
pusha
xchg
xchg
and
rcr
mov
(bad)
aaa
scas
sbb
je
call
cdq
and
adc
xor
daa
cwde
xchg
and
mov
xchg
pop
dec
pop
mov
jp
pushf
and
mov
aas
shld
sbb
leave
jnp
and
sub
sbb
jb
call
push
cmp
adc
(bad)
cli
sbb
fs
arpl
ret
push
out
mov
jg
call
fcmove
jge
cmp
in
xchg
bnd
ror
mov
retf
movs
(bad)
call
arpl
cmp
pop
shl
inc
pop
jo
inc
mov
loopne
xchg
mov
xor
neg
lahf
cs
out
ret
icebp
sbb
mov
repz
adc
daa
out
push
push
ret
cmp
push
cmps
retf
mov
lahf
sbb
hlt
pop
stos
in
je
(bad)
xchg
out
push
add
in
push
lock
jns
dec
xchg
jo
mov
inc
(bad)
imul
iret
jno
mov
sti
out
inc
into
cmp
jbe
or
imul
jnp
jg
and
retf
pop
inc
or
add
mov
mov
mov
add
cmps
in
push
leave
ins
push
iret
aad
out
push
mov
aaa
test
mov
int
in
nop
cmp
lods
in
ror
xlat
xchg
jp
fld
mov
arpl
int3
loope
lock
icebp
inc
cmp
push
cmp
and
pop
das
mov
lock
or
adc
fnstsw
xor
(bad)
ins
jb
xlat
inc
mov
adc
adc
(bad)
adc
pop
mov
xchg
mov
add
push
xchg
mov
ret
xchg
loope
cmp
out
and
clc
nop
jo
hlt
mov
add
add
xchg
dec
push
push
lahf
pop
iret
cmp
call
inc
mov
xlat
xchg
jb
fwait
cmps
js
and
sub
pop
and
xchg
dec
int
push
jnp
je
xchg
jno
sub
mov
and
mov
pop
movs
xchg
mov
enter
mov
jne
jmp
int3
addr16
nop
es
add
(bad)
and
dec
cmp
or
mov
loop
or
add
push
stc
sbb
jg
xchg
cmp
and
movs
lds
int3
mov
call
dec
push
popf
xchg
iret
sub
jle
sbb
add
movs
psrlw
push
(bad)
jb
adc
aam
mov
xor
fdivr
xchg
ds
bound
cwde
jg
add
mov
ret
and
cmp
pop
xchg
sahf
jne
pop
adc
xor
mov
or
ror
movs
xchg
shr
stc
jge
jno
add
and
ror
xchg
xor
cmp
pop
jns
sbb
push
jle
ins
aas
push
jecxz
mov
mov
mov
and
dec
sti
gs
enter
repnz
pop
jg
sbb
(bad)
lds
fscale
mov
cli
pavgb
out
ins
imul
test
sbb
inc
int3
push
aad
sbb
mov
addr16
push
sub
mov
(bad)
(bad)
or
in
pop
dec
movs
push
ss
sbb
mov
and
adc
xlat
xor
cld
jne
(bad)
mov
or
(bad)
and
xchg
jge
addr16
lock
loope
push
push
and
cmps
dec
mov
jns
dec
mov
inc
rcr
cmps
in
mov
cmp
(bad)
outs
aad
inc
inc
inc
mov
andnps
sub
jge
xor
call
cmp
push
jns
int3
and
sbb
jl
adc
aad
dec
sbb
lods
and
out
into
loopne
repz
jl
loopne
xor
push
mov
pop
(bad)
ficom
fidivr
pop
xchg
jg
sub
in
add
or
pop
ja
cmp
nop
gs
jp
mov
ins
sbb
inc
in
stos
lods
je
inc
out
stos
jbe
jmp
scas
test
sub
pop
pop
xchg
push
and
jmp
and
pop
xor
ins
sub
pop
ja
add
pop
pop
sahf
ffree
xchg
sub
adc
xchg
test
xor
out
mov
xchg
push
fild
jle
pop
lods
jne
adc
mov
pop
push
mov
(bad)
adc
enter
push
call
jg
jmp
pop
test
cdq
cdq
arpl
outs
ins
stos
push
sbb
test
push
adc
lods
out
mov
cmps
mov
fldenv
inc
xchg
ror
pusha
pop
xor
and
pop
cli
jb
dec
fsubr
int3
imul
inc
mov
sahf
add
in
mov
mov
ss
sbb
loopne
shl
fs
sbb
inc
pop
ins
(bad)
(bad)
call
daa
ret
xchg
int
or
bound
jnp
cmp
jb
push
shr
ins
icebp
cdq
shl
inc
ret
push
xchg
jo
adc
and
pop
mov
mov
sbb
test
push
repz
xor
iret
hlt
jl
or
fild
adc
add
fst
mov
call
cld
mov
fnstsw
pop
ret
jbe
push
push
sti
and
shl
shl
into
icebp
inc
xchg
call
adc
push
stc
add
pop
icebp
data16
xlat
jmp
test
push
pusha
stos
cmc
mov
or
sbb
stos
xchg
mov
fst
cmp
sub
mov
(bad)
dec
enter
retf
sbb
push
gs
enter
in
minps
lods
xor
mov
addr16
sar
xchg
mov
arpl
add
rcr
dec
pop
in
push
sar
jle
loop
mov
pusha
push
mov
retf
xlat
fwait
inc
and
add
loopne
mov
mov
mov
mov
add
outs
dec
aam
mov
sbb
adc
mov
sub
xchg
fs
xchg
movs
cmps
fwait
daa
mov
pop
fcomi
movs
call
add
xchg
pop
jmp
inc
movs
retf
xchg
and
inc
mov
inc
(bad)
xchg
sub
ret
jb
pop
(bad)
pop
stos
iret
es
inc
mov
clc
sub
neg
(bad)
or
inc
xchg
jl
leave
loope
xchg
mov
add
daa
leave
mov
and
inc
ds
push
frstor
fisubr
sub
mov
jae
inc
ss
out
mov
ja
jnp
imul
repnz
and
adc
inc
ja
jge
mov
mov
ins
mov
xchg
push
xchg
jg
dec
pop
mov
jnp
add
retf
mov
lea
sub
or
push
enter
xchg
test
das
adc
mov
retf
adc
enter
nop
shr
fcom
(bad)
mov
out
fcomp
(bad)
scas
nop
dec
test
lea
iret
iret
(bad)
sub
call
cdq
inc
cmp
sub
cs
or
sahf
sbb
inc
dec
xor
push
xchg
mov
repnz
ret
adc
mov
(bad)
sub
and
les
pop
jmp
dec
jg
mov
(bad)
idiv
fs
jno
repz
cmps
xchg
jnp
test
inc
cmp
jns
mov
push
add
pop
mov
sbb
ror
jp
adc
out
adc
in
(bad)
adc
or
cwde
inc
fisub
mov
inc
xchg
div
pop
clc
cmp
arpl
int
retf
sbb
push
adc
shl
enter
sub
xchg
mov
int3
mov
xchg
jmp
sub
rol
pop
addr16
test
push
pop
fidivr
ins
dec
sub
in
mov
inc
sub
xchg
add
cmps
mov
add
inc
arpl
(bad)
adc
add
jle
or
cmps
add
bound
inc
popf
bound
lds
fcmovbe
enter
nop
mov
add
outs
mov
push
lods
neg
inc
xchg
mov
pop
bound
out
test
imul
cld
scas
je
sbb
push
push
mov
repz
xor
popa
cmps
lods
adc
push
jo
dec
cmp
pop
dec
stos
jmp
dec
cdq
xchg
inc
rcr
sbb
mov
sbb
inc
out
cmp
jmp
add
cs
leave
fild
jge
ss
sti
ins
jns
sub
jne
push
push
adc
rol
and
std
xchg
mov
test
sbb
into
cmp
or
jge
push
ret
enter
xchg
push
adc
push
lahf
addr16
push
retf
lods
imul
ja
popf
jmp
cld
push
sub
pop
outs
cwde
push
(bad)
xchg
movs
call
sub
cwde
sub
pop
cmp
les
jb
jns
cmp
stos
jmp
pushf
xor
(bad)
gs
xor
add
sbb
pop
mov
mov
or
push
jb
jl
inc
or
and
mov
fwait
stos
test
out
imul
fistp
sbb
cmc
xlat
sbb
xor
sub
into
jns
sub
bound
out
and
adc
mov
inc
in
mov
loopne
mov
xchg
add
and
fadd
inc
popf
ins
out
jno
sar
xor
cmp
adc
stc
jge
cld
aad
adc
and
pop
scas
(bad)
jne
cld
push
ins
or
cmc
dec
and
fmul
in
clc
enter
sub
out
jae
lods
movs
or
stc
adc
neg
popa
push
jno
cmp
int
pop
pop
push
mov
into
xchg
shl
xor
jp
push
(bad)
fisub
call
sub
xchg
mov
jnp
bound
retf
mov
or
push
pop
stos
cdq
sbb
popf
loopne
retf
cmp
inc
or
outs
(bad)
nop
lds
push
jb
repz
(bad)
pop
test
mov
mov
push
fisttp
jg
in
dec
mov
fwait
mov
nop
lock
sub
cwde
jle
movs
sub
aam
push
xchg
add
sar
mov
push
daa
aas
movs
jbe
mov
addr16
sbb
icebp
inc
add
pop
sub
adc
neg
sbb
adc
repz
scas
fst
aam
(bad)
shl
rol
adc
test
inc
cdq
retf
jp
std
lahf
clc
fisubr
jo
call
cld
js
push
cmc
ficom
adc
mov
retf
jmp
daa
inc
inc
movs
jge
jb
gs
(bad)
mov
aaa
or
popa
pop
mov
out
cmp
(bad)
fld
and
jl
cli
out
adc
daa
xchg
add
sub
dec
iret
aas
hlt
outs
out
sti
faddp
inc
enter
test
xchg
movs
jae
jg
imul
iret
in
stc
fs
shr
pushf
std
repnz
pop
cmp
ins
enter
inc
fsubp
cld
or
mov
mov
sub
das
dec
and
das
mov
pop
jae
ja
out
(bad)
call
sbb
dec
pop
arpl
push
dec
pop
mov
xchg
inc
je
nop
sub
scas
(bad)
mov
and
sub
add
stos
stos
ds
test
jl
fild
dec
(bad)
inc
sbb
js
cmps
jbe
ds
xor
jecxz
xchg
pop
fild
aas
pop
mov
in
cs
xchg
fsubr
in
imul
and
(bad)
jg
outs
lahf
mov
clc
mov
arpl
pop
fidiv
fistp
sti
in
xor
das
retf
push
xlat
inc
mov
int3
adc
mov
pushf
pop
mov
mov
movs
xor
jnp
out
ja
sbb
call
(bad)
sbb
out
sar
retf
movs
sub
loop
jmp
sub
(bad)
mov
fist
and
mov
jnp
nop
and
lea
xor
jne
sbb
fs
std
int
pop
fidiv
ins
or
sub
jo
push
mov
movs
cmp
push
mov
jle
cdq
xor
aas
pop
repz
stos
mov
push
stos
jp
movs
inc
sub
bswap
sub
fdiv
and
dec
inc
inc
push
cmp
addr16
(bad)
jge
sti
mov
ficom
fst
push
cmp
fdivr
or
xchg
loop
xchg
loope
mov
mov
mov
push
pop
add
mov
add
and
adc
add
mov
sahf
cmp
popa
xchg
cwde
jle
jmp
push
push
sahf
adc
push
fbstp
cmp
stc
or
cmps
shr
pop
and
push
xchg
push
fwait
pop
pop
icebp
inc
sub
int3
fsub
xor
int3
aas
push
pop
pop
mov
leave
add
cdq
pop
les
mov
imul
(bad)
fldcw
pop
fdiv
and
jnp
(bad)
push
ret
sbb
test
or
pop
icebp
lods
das
idiv
adc
rcl
xchg
ds
mov
xchg
pop
dec
push
mov
lds
mov
push
int
jp
xchg
push
sbb
xchg
loope
jno
ret
call
mov
cmp
jecxz
stos
out
int3
jp
lods
mov
and
sbb
jnp
add
shr
ror
sub
mov
(bad)
test
das
push
sahf
sub
jne
hlt
xchg
in
dec
mov
out
push
in
jne
rol
and
lods
(bad)
adc
cdq
(bad)
pop
arpl
cs
out
cmp
cmp
jmp
pop
xchg
std
dec
mov
popf
mov
cmc
push
fst
daa
pop
xlat
sub
pop
movs
pop
into
mov
xor
test
mov
inc
dec
pop
retf
leave
dec
adc
daa
retf
jmp
iret
jne
adc
test
movs
jp
xlat
xor
imul
test
xor
arpl
pop
in
sub
imul
mov
or
jns
cmp
call
xor
je
imul
fbstp
sbb
fsubr
ins
test
or
push
mov
sub
sar
mov
repnz
stos
push
dec
lods
aaa
xchg
xchg
cmps
jno
xchg
push
or
sbb
mov
js
add
shr
dec
inc
cmp
pop
push
mov
int3
jbe
jno
xor
pusha
movs
add
mov
push
rcl
push
mov
iret
js
loope
movs
hlt
sahf
test
push
pop
cmp
cmps
jmp
das
arpl
push
add
push
pusha
jge
and
or
sub
dec
mov
out
cmp
lds
mov
jg
mov
add
xor
xchg
pop
cld
fnstenv
and
jbe
mov
push
mov
ins
mov
(bad)
jo
inc
jne
cmp
adc
ins
jg
mov
scas
mov
les
lahf
jecxz
mov
scas
and
je
stc
movs
in
push
sub
int3
les
aad
pop
sti
repz
push
nop
sub
ins
or
jl
ficom
sbb
sub
je
add
stos
imul
and
or
out
cmps
sti
test
call
mov
sub
loopne
adc
je
outs
cmp
ja
data16
test
mov
pusha
dec
in
(bad)
in
lahf
stos
push
dec
and
adc
scas
and
mov
fisub
mov
nop
push
(bad)
hlt
cmp
lock
fisttp
adc
and
lock
xchg
arpl
and
mov
sub
ins
mov
shl
lock
(bad)
shl
dec
test
loop
jg
cld
jne
mov
jp
popf
cwde
ja
xchg
repz
sub
sub
fwait
movs
jecxz
ins
test
and
xchg
push
cmps
xor
loope
iret
sub
outs
ins
test
dec
stos
pop
sbb
mov
(bad)
push
aas
and
sub
jno
cmc
into
cmps
popf
xchg
mov
scas
jne
ds
fiadd
(bad)
mov
out
xor
ror
pop
(bad)
rol
push
pop
or
ds
cmp
xchg
mov
cmp
xor
pop
add
movs
inc
out
or
aam
pop
xchg
dec
push
cmp
push
fs
jp
xlat
jmp
jge
retf
inc
cmps
xchg
jne
mov
cwde
push
outs
inc
clc
add
mov
test
pop
cli
aas
cs
test
ss
inc
stos
fdivr
aaa
pop
xor
sbb
xchg
adc
loope
imul
inc
repnz
sub
in
jl
fimul
daa
pushf
jae
cmps
icebp
outs
inc
fild
sub
push
push
ds
das
in
push
mov
adc
in
scas
dec
push
adc
div
sbb
(bad)
loope
push
js
mov
sub
ret
aad
in
jmp
adc
jecxz
mov
mov
pusha
enter
pop
mov
sahf
xor
xor
cli
sbb
fld
push
ret
mov
push
cld
test
ss
fcmovbe
stos
sub
fs
push
(bad)
mov
xchg
xor
scas
rol
idiv
gs
fisub
mov
dec
repnz
adc
cmps
sbb
mov
pusha
out
xchg
dec
aaa
pop
fdivr
leave
out
jb
out
lock
jecxz
push
inc
test
and
test
inc
inc
test
lods
icebp
sub
sub
hlt
push
xchg
dec
lahf
mov
mov
test
inc
or
sahf
(bad)
int3
es
xchg
sar
mov
or
xor
sbb
or
(bad)
xor
pop
sub
dec
loope
ret
and
(bad)
jp
inc
icebp
xor
or
xchg
push
lods
stc
out
mov
xchg
jg
inc
test
dec
pop
adc
jnp
pop
retf
lds
jbe
inc
repnz
inc
scas
push
je
ret
mov
sbb
jb
lahf
fbstp
adc
fisub
stos
mov
add
fstp
sbb
cmc
or
out
in
test
adc
adc
std
fcom
or
cdq
data16
inc
fist
push
cs
movs
out
sub
mov
mov
pop
cwde
je
scas
sar
push
inc
push
sahf
sbb
inc
cmp
xor
lahf
aas
inc
sub
rol
cwde
push
xchg
xor
or
xchg
inc
fdiv
ret
mov
mov
pop
jno
cmp
daa
lds
loop
shl
mov
push
loope
cmps
ret
cmc
add
retf
adc
mov
repnz
in
mov
pop
and
jge
dec
xchg
mov
hlt
pop
rcl
xchg
into
imul
jmp
push
or
pop
(bad)
dec
sub
xchg
outs
stos
pusha
cmp
popa
sub
sti
int
scas
pop
les
inc
push
das
xor
cmp
adc
jmp
sbb
icebp
xor
or
add
sar
je
int3
sub
mov
hlt
rcr
jge
adc
pushf
xor
xchg
mov
dec
out
imul
test
or
setp
mov
adc
cmp
pop
xchg
cmp
xchg
and
dec
out
jns
xor
loope
inc
mov
mov
jo
rol
mov
inc
sti
fadd
xchg
add
add
cdq
bnd
mov
movs
jmp
bound
enter
fcmovnbe
jae
(bad)
pop
pop
pop
mov
lods
pop
xchg
mov
xor
ror
(bad)
or
mov
sub
aas
ja
bound
mov
cmp
dec
push
dec
xor
pop
shl
test
sbb
jmp
lods
popa
mov
stc
push
mov
outs
neg
mov
mov
ror
es
jmp
cli
push
jmp
and
icebp
adc
mov
into
push
movs
in
sub
ficom
dec
push
cld
sub
or
clc
push
std
int
retf
ret
out
aaa
xor
jo
sbb
into
loope
int3
stos
sub
pop
icebp
and
dec
ja
repz
popf
sbb
jg
retf
test
js
loop
std
pop
add
push
sbb
mov
rcl
cmps
sbb
(bad)
dec
fld
push
push
popa
enter
mov
xchg
shl
mov
cli
rcr
les
add
clc
adc
lock
adc
inc
cmp
adc
mov
fadd
mov
push
jecxz
push
add
fadd
pop
mov
mov
repnz
inc
je
pushw
ret
pop
inc
pusha
push
out
dec
fisubr
jnp
mov
sub
sbb
scas
mov
dec
loopne
push
(bad)
movs
(bad)
hlt
imul
mov
aaa
jb
add
and
and
cld
mov
enter
xchg
or
sub
movs
test
out
mov
cmps
dec
push
fst
mov
jg
mov
lock
add
(bad)
in
arpl
push
movs
jae
xor
ja
stos
inc
add
xlat
retf
jecxz
test
cmps
adc
es
sar
btr
inc
or
jns
pop
ss
jmp
adc
js
sbb
sub
repz
sti
daa
int3
cmp
cmp
push
mov
ins
cmp
outs
fs
jmp
jno
in
cld
mul
xchg
push
es
xor
(bad)
mov
mov
inc
mov
cli
shl
test
xor
jmp
dec
adc
and
adc
sbb
ins
or
in
call
cld
inc
push
or
mov
push
out
cwde
lock
arpl
dec
push
inc
mov
dec
ins
enter
pop
cmp
ins
js
and
and
dec
sbb
in
sub
dec
pop
pop
loop
jns
adc
movs
addr16
and
out
cld
stc
ficom
and
or
adc
sti
and
pop
retf
nop
cmp
jae
xchg
xor
mov
dec
(bad)
pushf
mov
retf
loop
push
imul
shl
sbb
in
aam
gs
mov
push
jge
mov
dec
pop
mov
mov
out
push
jne
in
ins
aaa
cmps
adc
cmc
mov
xor
lahf
jg
fs
retf
adc
jnp
iret
mov
bnd
mov
mov
push
adc
adc
sar
fisubr
push
xor
sar
add
inc
jmp
or
cmp
imul
cs
cmp
inc
not
call
dec
test
hlt
cmp
xchg
mov
lods
and
aad
nop
adc
aaa
mov
mov
iret
mov
inc
ret
sbb
inc
shl
movs
aaa
mov
cwde
cdq
xchg
cs
icebp
mov
add
aad
cmc
inc
int3
bound
inc
mov
out
dec
fwait
(bad)
add
mov
push
cli
test
dec
or
(bad)
into
jo
sub
mov
aaa
jns
add
sar
jg
lea
loop
ret
add
jne
(bad)
sub
aad
mov
mov
push
call
cmp
xor
sahf
adc
retf
adc
jne
sub
out
jb
mov
cwde
call
in
sbb
xchg
cmp
leave
push
inc
ins
jge
rcl
and
imul
jge
xchg
ins
out
xchg
pop
ror
jbe
mov
lods
mov
movs
test
sub
and
loope
mov
add
js
jb
inc
jmp
cs
icebp
jle
test
in
icebp
(bad)
test
cmps
jecxz
fsub
imul
repnz
cmp
jle
mov
mov
movs
shr
out
ror
xor
cli
test
adc
dec
add
mov
js
push
pop
lods
inc
daa
mov
push
adc
mov
fld
ret
or
call
ds
xchg
mov
push
add
(bad)
adc
mov
clc
mov
sub
jle
and
je
inc
pop
xor
and
(bad)
push
ret
mov
stc
or
fimul
hlt
or
lock
je
dec
sbb
jmp
add
and
sar
and
fidivr
or
mov
inc
movs
adc
fst
xor
leave
es
add
jmp
sbb
xor
das
add
in
sti
push
aam
or
fcmovnb
mov
push
sti
pop
sbb
(bad)
sti
sbb
inc
sbb
in
push
xchg
sub
fwait
sbb
xchg
stos
sbb
xchg
jl
ret
lahf
daa
xor
or
shl
pop
adc
pop
mov
jno
movs
sub
enter
jg
aas
xchg
gs
and
call
sub
add
test
push
into
add
mov
xchg
(bad)
in
aad
rol
fdivr
sub
ins
jns
mov
jae
fimul
jecxz
lea
sbb
push
ins
cmps
pop
sar
sar
fs
jg
fstp
xchg
dec
push
jecxz
sub
mov
stc
inc
adc
or
mov
mov
pop
push
mov
jp
xchg
push
pop
mov
mov
and
int
push
arpl
bound
mov
clc
xchg
jmp
push
pop
fidivr
mov
pop
mov
pop
push
pop
mov
iret
test
sub
or
push
push
and
or
sub
or
push
fst
inc
cmp
ja
call
nop
cli
inc
cmp
cld
xor
je
loop
mov
mov
test
or
add
dec
mov
dec
outs
jmp
sar
leave
mul
inc
add
ficomp
cdq
in
mov
sbb
popf
and
jmp
jbe
sub
ins
out
pop
cmp
adc
xchg
retf
inc
xchg
inc
test
sub
add
push
je
add
gs
sar
(bad)
imul
adc
aad
jmp
ret
sub
push
rcr
loope
outs
jno
jo
retf
gs
mov
pop
lds
or
ja
jne
xlat
sti
mov
jo
xchg
cmc
in
push
mov
jl
sub
int
adc
(bad)
push
inc
dec
out
push
mov
mov
mov
xlat
xchg
push
sbb
or
fisttp
sub
ss
daa
inc
mov
push
cmps
fbstp
and
fsub
sahf
movs
stos
in
add
jns
push
rcl
dec
jne
jmp
push
inc
xchg
pop
inc
pop
ror
sahf
jns
push
movs
aaa
in
sub
in
cmps
aaa
and
adc
test
sub
shl
lea
shl
shl
mov
cs
add
dec
imul
add
outs
mov
sub
sbb
push
stos
mov
cmp
js
(bad)
jno
repz
push
mov
lds
xchg
and
inc
jbe
sahf
arpl
jnp
or
jb
mov
loop
fild
cmp
sbb
addr16
in
inc
fdivr
jmp
imul
je
jb
and
mov
(bad)
jecxz
out
add
pop
out
fst
push
ret
or
rcr
push
and
movs
cmp
mov
push
pop
lock
into
lock
retf
rcr
imul
and
fadd
sahf
cmp
mov
jnp
inc
jne
nop
loope
adc
paddb
sbb
xor
aam
cmp
push
push
adc
outs
sbb
lock
jmp
push
out
ds
out
clc
pop
jne
inc
push
int
cs
jl
cmp
or
xor
xchg
dec
push
aad
mov
sub
addr16
dec
repnz
cmp
scas
jae
test
xchg
mov
dec
xlat
sti
les
push
mov
mov
mov
or
repz
sbb
sbb
cmps
xchg
or
jl
dec
jno
aam
data16
or
pusha
aam
xchg
call
aad
cmp
stc
pop
xchg
aam
mov
lds
dec
jmp
dec
jmp
out
xchg
pop
sar
std
push
jl
movs
scas
mov
or
pop
mov
aad
dec
xchg
ror
(bad)
mul
loopne
lahf
adc
inc
add
sub
jbe
loope
fdiv
pop
scas
leave
punpckldq
shl
rcr
cmp
retf
cmps
add
aad
pop
mov
push
movs
cmp
call
cmp
(bad)
fdivr
pop
lds
sub
mov
shl
dec
fiadd
or
fstp
mov
(bad)
dec
sbb
inc
xlat
cli
cmp
pop
pop
add
sub
pop
das
aad
test
(bad)
sti
call
jbe
xor
cmp
xchg
aas
aam
fstp
mov
sti
iret
and
inc
mov
and
js
les
push
and
sar
icebp
ret
and
push
adc
sbb
pop
add
cmp
(bad)
jg
xor
rcr
xor
fild
sbb
fdivr
lahf
outs
aas
dec
cmc
popa
sub
mov
adc
pop
mov
jo
mov
and
int3
lods
sub
dec
fwait
leave
add
push
mov
popa
pushf
xchg
add
retf
dec
(bad)
mov
in
call
and
mov
(bad)
stc
js
sahf
mov
(bad)
lea
mov
add
test
cmp
fwait
fs
adc
inc
int3
jns
(bad)
cmps
pop
sti
out
clc
imul
xchg
jne
cmp
mov
xlat
mov
mov
stos
(bad)
popf
(bad)
push
fsub
rcr
pop
pop
out
xchg
loop
js
movs
fisub
fstp
jg
nop
jnp
mov
fisubr
xor
icebp
sbb
jl
out
push
fiadd
jg
loope
leave
fstp
shr
mov
movs
lods
movs
add
das
xchg
popa
fcmovb
add
jp
es
outs
nop
adc
inc
scas
popa
loop
dec
cmp
jo
into
mov
push
mov
add
lods
xchg
xor
push
add
mov
nop
in
fs
dec
bound
aam
sbb
pop
sbb
mov
mov
aam
xor
fsub
ret
(bad)
mov
add
aad
leave
pop
pushf
rol
cmps
stc
outs
pusha
mov
inc
popf
xor
jns
or
jecxz
outs
inc
sbb
in
dec
rol
lds
leave
pop
jl
fwait
retf
cmps
imul
aad
add
and
movs
mov
repnz
repz
jle
sub
cmps
mov
cdq
or
sahf
out
mov
sbb
add
or
cdq
fstp
mov
ss
pop
adc
loopne
adc
out
rol
inc
mov
(bad)
and
fsub
(bad)
in
mov
aas
(bad)
sub
test
pusha
mov
(bad)
jnp
test
and
xor
inc
inc
stc
sub
mov
xchg
movs
(bad)
scas
cmp
test
jmp
jge
or
ret
dec
xchg
jo
mov
xchg
imul
xor
sbb
sub
fsub
xor
dec
(bad)
je
xchg
je
fimul
cli
out
(bad)
aas
clc
in
xor
jl
imul
test
inc
jno
aas
idiv
cmp
aaa
test
adc
loop
inc
bound
aas
cli
sub
pushf
and
mov
mov
cdq
outs
xchg
mov
rol
push
int
xchg
fwait
sub
repz
sub
inc
scas
sbb
enter
jmp
dec
ins
sub
mov
fxch
mov
icebp
retf
mov
mov
movs
push
je
lahf
shr
sbb
aas
in
mov
mov
and
add
mov
jle
or
cmp
xchg
fdivr
jno
hlt
gs
sar
or
and
aam
aas
out
ret
aam
cli
add
lods
ret
adc
stc
arpl
xchg
pop
sbb
retf
adc
mov
mov
ds
jecxz
jb
pop
movs
adc
inc
ret
fidivr
out
test
jae
lock
into
sbb
push
or
push
jg
retf
das
loope
jbe
jmp
sbb
xchg
adc
out
mov
xor
test
test
shr
stos
(bad)
frstor
mov
ror
inc
or
movd
add
mov
push
xchg
stos
and
dec
push
mov
ret
push
inc
xchg
dec
out
cmp
cmps
push
call
movs
std
jb
clc
sbb
xor
xor
cmps
fdiv
test
or
adc
ror
aam
dec
repz
mov
mov
je
enter
inc
cmps
cmp
mov
(bad)
hlt
int3
ret
inc
int3
jo
sahf
hlt
mov
jp
jb
inc
push
mov
adc
mov
or
mov
data16
fs
adc
cmp
mov
push
cmp
arpl
lock
fdivp
push
fs
mov
lds
pop
sti
fild
das
(bad)
loopne
ficom
inc
dec
fisubr
mov
sahf
cmc
pop
push
cmps
mov
adc
(bad)
mov
or
jmp
(bad)
adc
in
rcr
es
sub
lahf
push
stos
push
xor
pop
stos
jg
fbld
inc
fst
adc
add
pop
push
xor
inc
cmp
adc
cwde
dec
popf
ins
iret
inc
adc
out
xor
(bad)
js
inc
fmul
test
mov
in
je
test
jp
dec
lds
std
dec
aas
int
imul
sub
mov
xor
jns
jge
and
std
jg
add
scas
mov
out
mov
sbb
mov
push
mov
adc
adc
std
push
aaa
jno
ins
mov
nop
cmp
push
push
scas
sahf
pop
jae
pop
loop
add
fst
xchg
mov
xor
hlt
jmp
dec
stos
mov
mov
cmp
inc
mov
scas
movs
test
push
xchg
lds
icebp
pop
in
xchg
jbe
call
xlat
xchg
daa
mov
push
sub
out
scas
sbb
shr
mov
push
mov
outs
mov
xlat
cmp
inc
int
stos
cmps
and
push
out
shr
sbb
mov
jmp
push
aad
mov
shl
pushf
imul
mov
loope
cmp
pop
push
stos
xchg
sbb
aas
outs
push
cwde
cmp
mov
mov
fistp
inc
lahf
pop
mov
lock
xor
adc
scas
xchg
add
push
or
dec
adc
xor
dec
fdiv
xor
ficomp
call
into
xor
mov
inc
cdq
stc
xor
test
dec
jmp
and
imul
ja
push
stos
dec
je
stc
xchg
inc
adc
in
push
jg
push
push
add
cmp
mov
pop
or
cmp
jle
ficomp
das
stc
jp
or
jmp
cli
jmp
lods
mov
push
cmp
vrsqrt14pd
jge
jnp
leave
fwait
sub
pop
add
xchg
xor
lahf
jecxz
aas
mov
stos
add
inc
sub
in
movs
popa
lods
and
sahf
pop
mov
pushf
iret
xor
mov
xchg
in
test
addr16
dec
js
pop
mov
fisubr
loope
or
jp
ret
mov
fidivr
mov
jbe
add
mov
or
jmp
dec
cmp
(bad)
in
jns
jne
pusha
std
mov
icebp
cs
repz
sub
xchg
cs
xchg
(bad)
sub
test
mov
(bad)
repnz
adc
clc
lds
test
loopne
aaa
icebp
in
pop
out
or
jle
test
fld
mov
sti
imul
leave
into
inc
jg
movs
pcmpgtb
int
mov
xchg
pop
xor
rol
cmp
sbb
push
add
adc
jne
push
loop
sub
xor
fld
xlat
mov
xchg
pop
or
push
lds
cwde
aam
dec
(bad)
mov
xchg
mov
jl
je
mov
comiss
retf
call
cmp
sub
mov
xchg
pop
cmp
dec
inc
mov
ss
test
cwde
push
outs
inc
adc
jmp
xchg
and
jmp
jmp
dec
(bad)
in
fidiv
mov
jae
mov
xlat
xchg
mov
xor
xchg
icebp
dec
fwait
add
ret
cmps
mov
sub
arpl
dec
in
push
lods
sbb
fsubr
pop
mov
push
(bad)
push
mov
xor
int
sti
jnp
xchg
enter
ficomp
in
shl
dec
dec
push
pusha
clc
pop
(bad)
retf
mov
mov
pop
popa
call
fwait
and
ja
cmp
sbb
dec
cmps
mov
mov
es
push
imul
xchg
ss
mov
sub
jl
(bad)
jl
fnstcw
dec
imul
shl
imul
push
call
push
push
das
inc
sbb
push
pop
push
xchg
and
jmp
pop
es
mov
jae
mov
retf
test
inc
sbb
cdq
rcl
and
adc
and
lea
adc
or
repz
repnz
ins
call
fwait
cmps
mov
cmp
ficom
adc
fild
retf
retf
aaa
movs
lods
mov
repz
mov
rep
(bad)
fnstcw
pop
jns
rcl
mov
sub
inc
cdq
mov
rcl
lahf
adc
test
out
and
adc
std
pop
cmp
imul
mov
dec
aaa
add
xchg
in
mov
mov
fsub
jg
gs
aaa
push
cmc
dec
xor
or
xchg
in
push
jno
mov
ret
loopne
loop
fucomip
push
fist
add
push
pushf
dec
jb
or
pop
cwde
fild
adc
lds
test
fbstp
call
out
pop
push
and
sbb
and
or
icebp
pop
sub
and
mov
add
dec
add
add
into
sahf
in
add
sub
push
xchg
out
sbb
inc
loopne
dec
int
ins
movs
shl
jns
dec
mov
xchg
fcomi
sbb
inc
or
or
std
imul
in
and
xor
pop
(bad)
aas
stc
xchg
mov
sub
inc
cmp
outs
cmp
es
dec
popa
xlat
les
xchg
jecxz
cmp
xor
ds
jno
mov
(bad)
inc
fidivr
into
test
leave
jns
mov
out
pop
inc
mov
fs
mov
movs
(bad)
dec
jge
cmp
in
xchg
fstp
jle
cdq
mov
pop
fst
cmps
pop
xor
push
pusha
cmp
adc
aam
sbb
inc
sub
adc
pusha
xor
fwait
add
fcom
fdiv
lahf
popa
(bad)
out
jl
mov
dec
or
xlat
cmp
stos
mov
push
push
jbe
js
pop
cmps
jmp
lock
daa
push
add
jmp
out
jmp
movs
cmp
sub
cs
sbb
in
call
cdq
jecxz
jno
dec
mov
aad
xor
cmps
out
test
dec
mov
jno
pop
inc
or
push
inc
cmps
imul
mov
iret
push
push
ja
jmp
xchg
mov
cwde
mov
into
mov
add
xchg
ret
sbb
sbb
xchg
mov
imul
sbb
mov
inc
popa
repnz
sub
jp
pop
xor
mov
push
repnz
mov
repnz
out
inc
and
jg
loopne
mov
mov
imul
movs
fwait
sub
fild
mov
aad
fsub
inc
(bad)
jp
adc
loope
pop
(bad)
jb
inc
and
in
lahf
xor
push
fdivr
mov
add
movs
xor
xchg
das
inc
push
stos
adc
push
cmp
shl
push
sub
data16
push
aaa
add
aam
push
imul
push
shl
(bad)
lahf
sbb
cld
dec
mov
addr16
fld
jl
retf
mov
ss
sub
fidivr
mov
mov
mov
jge
ret
ja
pop
pop
xchg
sub
std
jae
ret
(bad)
fcmovu
popf
xchg
or
cmp
push
sbb
jecxz
inc
fs
inc
push
and
sub
mov
mov
test
out
cmp
jmp
mov
dec
mov
add
inc
xchg
and
mov
jbe
int
mov
push
out
jp
lds
cmp
call
push
aas
js
stc
aaa
jns
mov
arpl
ficomp
shr
mov
sub
(bad)
nop
mov
outs
enter
imul
cmps
pop
into
lods
mov
sub
pop
(bad)
pop
jno
xchg
lods
pusha
xchg
xlat
mov
test
lea
cmp
rcl
pop
jmp
fistp
(bad)
mov
stos
mov
pop
xchg
mov
xchg
inc
lods
imul
and
rcl
cmp
in
(bad)
test
inc
and
sub
dec
idiv
imul
mov
aam
jle
mov
or
adc
fidiv
jb
jle
idiv
es
jmp
pusha
cmp
or
cmp
loopne
out
dec
sahf
lock
pop
sub
aas
add
das
out
jo
cmps
jl
xchg
rcr
push
(bad)
mov
or
dec
pop
call
adc
stc
aaa
mov
push
shl
movs
enter
fidivr
test
(bad)
in
mov
xor
lods
jno
ja
push
pop
add
(bad)
daa
in
push
jb
push
div
popf
push
mov
test
lods
xchg
in
cmps
xchg
dec
shl
or
jns
das
loopne
xor
sbb
in
xlat
jne
nop
pop
ret
jle
arpl
adc
mov
inc
pop
(bad)
push
ins
mov
imul
and
push
fmul
(bad)
les
or
inc
mov
lahf
add
jns
ret
add
fistp
xchg
and
enter
and
pop
(bad)
popa
mov
cld
mov
xchg
mov
scas
mov
pop
jb
clc
or
mov
jle
aad
in
fs
sti
mov
mov
cmc
loopne
xor
or
xor
ja
xor
vpmacssdd
push
mov
and
je
movs
das
dec
sub
add
popa
adc
mov
retf
popw
lods
mov
or
ret
imul
fcom
xchg
out
xchg
test
pop
rcr
push
(bad)
jecxz
das
shl
push
out
fsubr
ss
je
lahf
xchg
ret
test
and
cmp
fwait
mov
push
cmps
movs
outs
add
sub
fwait
outs
scas
mov
mov
or
pop
repnz
adc
int3
add
(bad)
cmp
(bad)
pop
or
dec
loopne
mov
pushf
mov
lock
inc
adc
xchg
cmps
stos
mov
repnz
mov
es
mov
pop
or
fs
add
push
mov
aas
xchg
(bad)
jg
and
popa
mov
int3
out
sub
stos
inc
mov
dec
dec
add
stc
or
mov
call
push
in
stc
jo
or
push
out
pusha
jl
aas
jge
loope
popf
div
push
sbb
stos
pop
dec
leave
dec
ins
add
jns
dec
leave
pop
mov
fcom
xchg
dec
retf
mov
pusha
jnp
leave
gs
movs
jge
and
sbb
lds
or
inc
and
loope
lock
add
adc
jno
rcl
sbb
xor
pop
dec
sbb
jmp
sub
leave
fs
jecxz
push
hlt
inc
mov
push
sub
and
shr
mov
add
shl
jmp
inc
adc
shl
inc
das
xchg
inc
dec
cs
mov
xchg
xchg
pop
es
jbe
sti
xchg
(bad)
bound
mov
adc
or
mov
cdq
addr16
in
mov
mov
mov
push
push
sbb
mov
dec
(bad)
scas
pop
rcl
cmp
or
leave
adc
push
mov
push
iret
(bad)
jns
aad
add
sbb
(bad)
in
call
outs
mov
leave
push
stc
aad
cmp
shl
call
mov
jo
mov
sbb
pop
icebp
push
jmp
pop
jp
mov
ret
jbe
jo
or
cdq
xchg
fld
pop
loopne
out
pop
das
sti
hlt
ficom
and
in
scas
lods
scas
xor
rol
mov
push
dec
lea
(bad)
pop
in
outs
retf
lds
rol
xchg
mov
mov
nop
dec
je
push
dec
or
jmp
pushf
loopne
lock
stos
pop
cs
jmp
nop
leave
ins
dec
mov
(bad)
cld
(bad)
sar
lock
inc
clc
daa
lahf
movs
scas
test
pop
pop
pop
inc
xor
or
ss
(bad)
clc
stc
cmp
push
or
fsub
pop
mov
mov
dec
stos
jle
int
arpl
xchg
push
cmp
pop
retf
xor
adc
pop
cmp
cwde
jecxz
jmp
or
push
push
push
ds
jg
out
mov
xchg
push
xchg
lock
pop
sti
adc
cmps
or
sbb
cmp
retf
push
xchg
push
cmp
cmc
pop
(bad)
sbb
mov
(bad)
xor
sub
jnp
ins
pop
and
sub
fmul
and
lds
loope
push
out
cdq
sbb
mov
(bad)
mov
mov
les
inc
loopne
adc
int
std
out
rol
fsub
nop
mov
loope
xor
inc
call
into
repz
jbe
icebp
les
nop
xchg
push
js
lds
pop
cmp
and
sub
ins
jg
movs
xor
jmp
movs
rcr
ja
neg
push
out
xchg
pop
fcmovb
jbe
add
jo
xchg
push
jp
fisubr
sbb
ret
sahf
ret
in
jmp
xor
lahf
aam
sub
jnp
sti
pop
or
mov
lds
or
clc
dec
(bad)
mov
scas
sbb
jmp
jmp
ss
stc
inc
push
pop
fiadd
in
xor
je
fdivrp
pop
das
inc
addr16
push
inc
loop
pop
out
ss
dec
push
cdq
rcr
pop
sub
call
enter
dec
jmp
aas
sub
inc
mov
jnp
retf
sar
hlt
and
std
aam
xchg
or
retf
lods
jecxz
mov
out
int
jl
lods
adc
call
xchg
or
and
sar
dec
sub
jp
mov
jae
scas
ret
push
push
lock
ret
addr16
outs
fwait
cmp
outs
fist
cmc
cmp
aas
hlt
ja
pop
pushf
mov
scas
loopne
dec
inc
cld
mov
inc
fldcw
gs
scas
dec
cmps
in
and
and
dec
mov
icebp
push
add
into
cli
movs
rol
addr16
mov
add
adc
cmp
xor
sahf
and
adc
aad
mov
cs
cmp
mov
mov
test
rcl
xchg
jae
mov
or
pop
out
test
mov
dec
and
fs
push
mov
dec
xor
push
test
xchg
jnp
fidiv
xor
inc
sub
jmp
push
out
ror
repz
push
retf
jns
push
rol
jp
push
mov
dec
pop
add
mov
mov
pop
frstor
fisttp
or
(bad)
push
or
fidiv
mov
enter
pop
sar
into
cs
in
lods
fdivp
and
sti
lds
cdq
pop
jae
sbb
cmps
add
sub
adc
sahf
imul
loope
adc
dec
mul
(bad)
sub
scas
ins
ret
push
(bad)
mov
fsubr
xchg
mov
inc
inc
shl
pushf
add
fs
adc
fwait
ror
mov
sub
xchg
lock
movs
xor
imul
outs
pop
inc
out
into
pop
ins
mov
push
(bad)
pop
enter
sbb
in
fucomip
loopne
loope
bound
pop
jge
mov
adc
pusha
add
sbb
ror
stos
add
sub
cmp
es
ds
es
jmp
fnstcw
mov
mov
add
mov
pop
in
jns
std
outs
fidivr
enter
pop
inc
(bad)
scas
loopne
clc
sub
das
ret
mov
es
and
std
cmp
aaa
cmp
pop
mov
adc
inc
jecxz
popa
or
outs
or
pop
push
lea
dec
xor
mov
cmp
pop
and
xlat
jae
mov
pop
ficomp
xchg
je
test
addr16
sub
enter
stos
xchg
push
mov
mov
mov
outs
sahf
adc
stc
inc
cmp
xchg
pop
movs
int
push
bound
xor
lods
lahf
in
fcomp
lods
lock
push
or
inc
sahf
(bad)
out
sub
out
(bad)
mov
icebp
fistp
push
ror
aaa
(bad)
mov
sbb
retf
jmp
mov
cdq
inc
popa
dec
dec
sub
ficomp
sub
cmp
sbb
call
outs
push
xor
xchg
into
int
jns
enter
fiadd
fnstsw
pop
or
mov
mov
cs
cmc
idiv
std
rcr
and
mov
pop
xor
fs
std
xor
mov
mov
and
scas
mov
mov
test
dec
into
xor
loope
sub
dec
push
dec
cli
jg
pop
cld
daa
popf
idiv
ficomp
xchg
cdq
loopne
outs
cdq
sub
adc
js
pop
mul
push
adc
push
push
push
in
mov
(bad)
xor
(bad)
in
jns
jle
hlt
loope
jb
push
jge
fwait
cmp
and
mov
scas
jns
xchg
mov
shl
test
push
inc
cmp
out
popf
cmc
pop
mov
shr
xlat
fiadd
dec
or
out
dec
mov
stos
mov
arpl
adc
aas
(bad)
retf
add
mov
push
pop
cli
sbb
aaa
imul
pushf
xor
inc
jmp
mov
loopne
lahf
dec
mov
cmp
adc
add
loopne
sbb
xchg
cmp
cmc
push
and
shr
in
lods
scas
ds
xor
pop
fst
jg
jmp
cld
cli
mov
jnp
lods
jae
int
inc
cmp
push
stc
xor
repz
cmc
rol
hlt
sub
inc
pop
jnp
or
loop
ret
stos
ficomp
adc
xchg
sub
push
clc
lock
mov
clc
push
xor
or
dec
jne
stos
(bad)
(bad)
retf
sub
mov
leave
frstor
dec
dec
es
movs
adc
sbb
lahf
aam
popf
fprem
push
push
(bad)
fmul
ja
fs
fild
add
mov
in
daa
dec
cmp
test
lods
jnp
dec
bswap
aad
dec
push
fmul
hlt
fisttp
mov
jnp
xchg
push
sub
adc
pop
pusha
shr
xchg
xchg
add
and
js
or
jns
add
xor
cmp
test
inc
add
mov
fistp
out
leave
mov
sbb
add
dec
sub
(bad)
push
mov
xor
icebp
lods
sbb
inc
repz
pop
repz
div
cli
neg
xchg
mov
stos
mov
inc
add
xchg
adc
xchg
mov
pop
xchg
pusha
dec
adc
mov
mov
mov
out
gs
aaa
push
arpl
push
sahf
add
xchg
jle
mov
ja
cwde
adc
adc
clc
fcomp
mov
sub
sub
jb
iret
push
cmp
int3
in
rcr
pop
rol
mov
fnsave
pop
aam
pop
jne
retf
jmp
pop
fbstp
jle
cmp
and
and
(bad)
xchg
push
and
mov
xchg
xchg
xchg
call
(bad)
je
dec
pop
push
hlt
xor
cdq
sbb
(bad)
fdiv
adc
movs
cs
sbb
and
xlat
repnz
xchg
push
rcr
into
popa
cli
and
les
add
or
nop
pop
and
jmp
dec
rcr
and
add
clc
add
lods
repnz
mov
fistp
pusha
fmul
mov
icebp
xor
out
(bad)
cs
jl
out
mov
pop
ins
ret
movs
mov
out
pop
(bad)
cmc
bound
fcmovnb
xor
xchg
stc
ficomp
fstp
mov
xchg
jbe
popa
cwde
test
cdq
xor
cdq
bnd
sbb
mov
scas
sahf
jae
push
mov
sbb
or
in
(bad)
sbb
xor
mov
xchg
or
shl
loope
cmps
adc
sub
sbb
or
sbb
push
adc
cld
mov
je
dec
daa
out
test
test
cmp
out
es
repz
and
mov
push
clc
bndstx
add
addr16
adc
sub
sbb
jno
xor
or
xchg
ins
(bad)
xor
ret
pop
dec
push
and
mov
sti
and
mov
fild
adc
scas
repz
rcr
(bad)
pop
pop
and
leave
sub
outs
sbb
dec
push
jp
int
or
rcl
jle
jae
jns
retf
cmps
xor
add
adc
push
(bad)
lea
(bad)
pop
mov
pop
pop
sbb
shr
shl
or
(bad)
sti
int3
mov
(bad)
add
fnsave
xchg
dec
sub
clc
inc
popf
pop
pop
jmp
jo
inc
mov
adc
sub
fimul
inc
mov
fucomi
rcl
push
jae
xchg
xchg
nop
add
(bad)
out
inc
sbb
outs
mov
sub
xor
xor
popa
aad
add
test
movs
ins
pop
stos
bound
cmp
add
or
add
dec
mov
out
or
popa
pop
stos
jae
mov
(bad)
fsub
pop
cmp
leave
sbb
push
pusha
cmc
xor
mov
cwde
cwde
aad
or
and
xchg
and
sub
stc
sub
inc
(bad)
pop
inc
sti
and
shr
cmp
xor
fwait
xchg
add
jae
mov
ds
xchg
xchg
loop
xchg
das
dec
mov
push
mov
div
shl
sub
xchg
push
or
and
mov
inc
pop
addr16
cdq
sub
dec
inc
lds
mov
sub
neg
(bad)
jo
inc
out
loope
pop
int3
dec
sub
xchg
es
cld
leave
sbb
cmp
add
sub
push
ins
jge
mov
pop
dec
daa
cli
cmps
push
icebp
and
sub
dec
fst
sub
jp
mov
out
(bad)
cmps
aaa
and
adc
call
fs
mov
jmp
pusha
cmps
xor
aaa
es
std
xor
cdq
ror
adc
cdq
or
cdq
jbe
ins
fwait
add
leave
mov
pop
or
fistp
xlat
mov
mov
and
or
add
mov
sub
cmp
cmp
cmp
xchg
cli
je
pop
ja
mov
mov
aam
xor
jge
push
or
aas
mov
je
into
inc
call
loop
xchg
add
sbb
dec
aam
in
push
mov
out
mov
adc
and
ds
push
dec
mov
adc
lea
mov
jno
scas
jle
adc
adc
add
add
pop
test
xor
js
(bad)
loopne
repz
call
fcom
fs
dec
fistp
mov
cmp
cmps
mov
jbe
je
and
xchg
pop
aad
ins
push
adc
sbb
mov
push
pusha
aas
daa
inc
out
sub
jb
test
xor
mov
dec
fmul
push
jmp
iret
popa
in
push
sbb
pop
out
dec
vpshlb
pop
pop
int
sbb
clc
mov
sti
adc
pop
scas
xchg
adc
rcl
sbb
sbb
fstp
lea
lods
pushf
popf
mov
mov
mov
pop
adc
sbb
dec
and
in
xchg
shr
sub
mov
cwde
ja
scas
div
clc
adc
call
ds
(bad)
adc
jae
inc
inc
leave
mov
out
jns
xlat
repz
dec
sti
sub
mov
outs
enter
ss
xor
out
pop
mov
pop
out
push
pop
pusha
mov
fdiv
push
mov
out
shl
and
test
pushf
rcr
icebp
dec
push
mov
sar
inc
or
xlat
call
mov
icebp
xchg
data16
mov
jae
and
arpl
push
dec
in
das
push
xchg
pop
push
ins
int
mul
movs
test
cs
ds
neg
sub
inc
(bad)
test
(bad)
or
hlt
lea
rol
out
jmp
xlat
pop
stos
jb
mov
std
jle
dec
xlat
adc
imul
sbb
push
retf
(bad)
ins
xor
arpl
jle
mov
loop
xchg
retw
or
mul
push
sbb
xor
pop
inc
pop
sub
lods
xor
push
xchg
mov
pop
or
cli
cld
ins
scas
mov
jl
and
xchg
aas
inc
clc
adc
test
push
inc
sbb
mov
sub
xor
icebp
sbb
rcr
ins
mov
retf
repz
cmp
rcl
arpl
pop
cmp
push
dec
add
fdivr
xchg
ror
fild
cs
fwait
pop
(bad)
xlat
shl
xchg
sbb
xlat
fstp
xchg
jo
or
xchg
xchg
dec
xlat
dec
fnstenv
mov
push
dec
xchg
ret
cmp
pop
sub
sahf
test
sbb
es
pop
ret
(bad)
je
movs
jl
stos
cdq
ja
sbb
ret
daa
push
jae
and
imul
inc
mov
mov
addr16
cwde
iret
lahf
(bad)
or
add
mov
loope
jecxz
sub
nop
pop
aam
pop
xor
and
icebp
push
sbb
ret
inc
fwait
pop
pop
imul
sub
push
cmp
lods
sti
xchg
xchg
out
sti
jmp
dec
mov
add
loope
mov
xor
sti
jnp
fcmovu
jmp
xor
outs
arpl
mov
ja
inc
sbb
pop
dec
cmp
mov
retf
inc
dec
sub
lock
dec
mov
fs
out
hlt
pop
retf
es
js
dec
inc
mov
cmp
scas
xchg
daa
dec
and
jne
or
cmp
xor
xchg
ret
inc
in
dec
cmp
out
dec
jmp
es
sbb
mov
into
sbb
aas
lock
icebp
ja
dec
ror
push
sub
push
fmul
shl
ffree
xor
shl
dec
push
and
pushf
(bad)
std
das
(bad)
in
lds
inc
inc
movs
repz
retf
xchg
(bad)
push
sub
push
mov
sti
jnp
aaa
inc
icebp
sbb
or
jno
mov
xchg
aam
jmp
es
push
cmps
int3
xor
in
out
cwde
sub
ret
add
xchg
inc
ret
cmp
sbb
sbb
add
rol
in
mov
ins
jle
icebp
pusha
jp
je
sub
push
xchg
repnz
dec
push
adc
cmp
push
cmp
fstp
mov
(bad)
into
dec
popf
mov
rol
mov
xchg
xchg
inc
dec
in
xchg
enter
test
add
inc
movs
mov
daa
sti
ins
adc
test
add
cmps
les
in
into
ror
je
jmp
adc
jmp
dec
and
mov
int3
dec
xchg
mov
push
cmps
(bad)
xor
(bad)
sar
and
xchg
stos
adc
add
dec
inc
neg
repz
outs
mov
mov
sub
xchg
fistp
or
xchg
daa
jne
sub
pop
aam
mov
mov
loope
and
lds
ins
addr16
inc
adc
aad
shr
add
xchg
push
(bad)
adc
dec
aaa
mov
imul
js
lahf
out
xchg
sub
adc
push
push
scas
mov
fldenv
lods
cli
mov
call
sub
sbb
scas
inc
mov
xchg
das
push
nop
cmps
clc
leave
or
cmc
popa
add
iret
add
aas
xchg
mov
push
xchg
sahf
sbb
aam
inc
fidivr
dec
cwde
push
cmps
and
xor
lods
mov
popa
xor
mov
pop
scas
out
add
iret
dec
fs
cmovno
and
pop
lea
je
push
enter
push
int
out
fimul
xor
pop
cmp
outs
jg
loope
add
mov
cmp
ret
mov
loope
dec
je
inc
aas
data16
cmp
jg
(bad)
mov
imul
adc
mov
push
(bad)
mov
pop
mov
dec
lahf
jmp
inc
push
inc
(bad)
adc
jge
arpl
loope
push
movs
aas
imul
adc
mov
mov
and
stc
fisttp
xor
ror
fidiv
hlt
lds
shl
and
and
mov
ja
in
fisub
push
cld
pop
mov
xchg
cmc
or
mov
lock
stos
call
rol
cmps
into
pop
daa
or
ins
std
dec
fidivr
adc
mov
cmp
call
push
push
sbb
adc
rol
push
mov
test
std
mov
fstp
adc
xchg
test
xlat
(bad)
fsubrp
enter
sub
(bad)
in
and
shr
inc
or
lahf
test
int
xor
pop
sub
retf
xchg
iret
lods
pop
mov
or
mov
sub
in
mov
out
push
xchg
cs
dec
aas
cmp
push
dec
dec
mov
daa
jg
jbe
and
addr16
and
inc
sbb
mov
rcl
and
sbb
test
xor
aam
clc
faddp
outs
fs
nop
mov
mov
pop
adc
popa
cmp
add
and
mov
jns
retf
adc
or
retf
(bad)
sbb
fs
fs
sbb
mov
lea
into
out
test
sbb
xor
pop
in
shr
mov
jle
add
mov
not
cmp
xlat
repz
xor
out
cmp
xchg
pusha
cdq
(bad)
mov
clc
lock
dec
jo
aad
xchg
imul
dec
inc
mov
mov
test
add
popa
mov
std
neg
push
add
sub
add
add
div
cmc
ds
jae
mov
lea
outs
mov
stos
mov
sub
push
clc
inc
mov
test
leave
ss
xchg
mov
mov
mov
pop
jae
xor
callw
adc
or
adc
pop
cld
mov
sub
push
cmovno
inc
inc
test
xor
dec
in
ficom
mov
jle
dec
fdivr
jmp
shl
mov
cmps
jmp
jg
dec
xchg
push
fsubr
mov
das
adc
enter
mov
in
imul
or
sbb
and
push
cmp
mov
dec
jmp
or
outs
mul
rcl
int3
retf
addr16
or
(bad)
out
jmp
cmp
stc
sti
xor
out
imul
ja
inc
(bad)
(bad)
sbb
cld
push
add
pop
xchg
call
retf
leave
sub
mov
or
dec
cmp
cmps
jae
sub
mov
jmp
fidivr
xlat
pop
aad
repnz
ds
out
jns
push
fwait
(bad)
lahf
das
push
pop
aas
popa
xor
mov
sub
pop
dec
pop
imul
ficomp
aam
mov
lds
inc
or
int
and
pop
cmp
inc
gs
sar
fdiv
adc
test
loop
outs
dec
test
in
(bad)
xor
push
add
out
mov
pop
aam
jns
test
sub
cmp
mov
lahf
test
and
lods
cmp
sbb
pop
mov
pop
shl
shr
popf
jne
in
adc
ret
push
mov
aaa
ds
adc
fidiv
push
mov
sub
push
retf
leave
fisubr
aas
adc
aam
cld
test
jo
xchg
xlat
mov
cmc
pop
cld
add
das
and
lea
push
jmp
pop
dec
test
jbe
jno
push
sbb
(bad)
gs
mov
push
push
add
pop
pop
gs
jmp
sub
mov
pop
leave
outs
sub
mov
jns
cmp
ss
pop
mov
fxch
add
mov
aaa
inc
xor
(bad)
and
xchg
adc
push
sti
xchg
push
ret
dec
test
inc
xor
push
jnp
loope
cmp
ss
not
(bad)
jns
inc
mov
in
push
jl
data16
xchg
jp
data16
sbb
xchg
ret
push
dec
mov
sub
mov
mov
sub
jae
mov
mov
or
ins
lahf
lds
and
shr
add
test
in
adc
mov
push
sbb
mov
push
jecxz
inc
sub
out
test
leave
sar
xchg
pop
xor
and
in
ret
and
icebp
aaa
out
cmps
clc
and
sbb
adc
or
sub
add
dec
pop
pop
and
aad
xchg
data16
enter
inc
lock
pop
dec
cmp
movs
pop
fisttp
xchg
mov
out
add
cld
std
lods
cli
xchg
rcl
pop
sbb
std
aaa
popa
sbb
xchg
ss
push
dec
pop
jecxz
aam
mov
pop
enter
add
sub
pop
bound
push
ret
movs
sbb
push
cmp
loope
lock
xor
dec
scas
aam
jg
pop
and
pop
xor
push
push
cmc
aad
xchg
pusha
pop
js
test
inc
fistp
sbb
mov
repz
adc
inc
push
push
test
mov
cmp
sbb
sub
(bad)
fcmovne
loop
sbb
int3
sub
or
xchg
es
mov
loopne
mov
movs
pop
sti
mov
jecxz
ins
push
pusha
pop
mov
and
add
xchg
sbb
sbb
mov
pop
xchg
fcom
mov
(bad)
mov
ret
mov
push
call
dec
movs
out
shl
jo
push
push
leave
mov
pop
and
mov
imul
add
add
xchg
(bad)
imul
lahf
pop
rol
addr16
lods
fsubr
xor
jno
pop
add
add
sbb
ret
jge
lahf
xor
pusha
dec
xor
mov
xor
and
outs
call
xlat
jno
xchg
int3
sbb
out
fcomp
pop
in
mov
mov
mov
(bad)
lahf
xchg
pop
mov
xor
lds
(bad)
pop
adc
and
stos
xor
mov
leave
pop
pop
and
sbb
push
add
or
(bad)
shl
jle
xor
xchg
mov
stos
lahf
scas
xchg
fnstcw
shr
out
test
jl
cmc
retf
in
push
pop
push
in
xchg
das
or
ret
pushf
dec
sub
sub
enter
dec
repz
gs
(bad)
inc
(bad)
loope
(bad)
test
(bad)
fcompp
adc
sub
pop
adc
movs
mov
cs
push
cmps
dec
in
xchg
fistp
push
mov
push
hlt
popf
test
rol
push
push
sti
(bad)
pop
sbb
outs
shr
rcr
xor
ficomp
imul
popf
mov
jmp
pushf
xlat
fcom
into
(bad)
cli
call
push
xor
jle
retf
xchg
mov
lock
jb
sub
jmp
inc
fnstcw
jl
jae
fisttp
fxch
std
pusha
mov
pop
clc
(bad)
stos
xor
retf
cmc
js
imul
sbb
dec
ret
scas
bnd
arpl
mov
mov
shr
je
mov
vpaddw
add
and
mov
sbb
stos
push
mov
xor
inc
ins
add
inc
push
pop
mov
adc
ja
mov
test
adc
mov
fld
sbb
ds
retf
add
movshdup
jns
popa
jno
test
out
popa
mov
dec
mov
call
retf
leave
or
cdq
int3
mov
(bad)
ins
popa
mov
xchg
and
mov
cmp
mov
and
sbb
cmp
mov
inc
jp
fs
call
pop
cld
xor
ret
pop
(bad)
mov
sbb
mul
mov
jmp
call
cdq
add
push
pusha
add
repz
mov
shl
push
and
dec
mov
add
mov
pop
jle
push
mov
dec
mov
(bad)
mov
cmps
mov
scas
push
out
xlat
mov
out
add
pop
xor
and
sub
enter
push
sub
int
mov
jmp
imul
jmp
lods
dec
call
div
repnz
pop
push
cwde
(bad)
call
mov
jmp
mov
xor
and
add
sub
ror
out
scas
idiv
gs
push
out
arpl
iret
push
mov
pop
inc
push
(bad)
mov
aad
dec
rcl
or
mov
pop
jmp
jge
mov
xor
push
cmp
or
pop
addr16
and
scas
and
push
cdq
lock
dec
retf
inc
int3
mov
cmp
add
shr
enter
fldcw
sub
ins
cmps
inc
call
cmp
or
push
add
(bad)
push
je
retf
lahf
inc
lock
inc
lahf
push
xor
(bad)
ja
sub
xchg
add
retf
sti
pusha
xor
imul
jp
jl
or
adc
inc
and
ficom
jno
imul
ss
mov
jmp
(bad)
jb
out
mov
inc
adc
dec
mov
out
call
inc
mov
jno
dec
mov
or
jno
mov
outs
fst
pop
sbb
xlat
sub
inc
mov
movs
cs
int3
jb
(bad)
mov
adc
mov
mov
push
pop
ds
lahf
out
mov
and
push
cmp
xor
dec
pop
xchg
stos
mov
add
xor
sub
sbb
imul
add
rcr
mov
jnp
sti
push
jo
adc
cli
(bad)
sub
xchg
ins
call
push
push
fsubr
inc
dec
addr16
cmp
inc
cmp
hlt
aam
test
pop
sbb
lahf
mov
cmp
ss
mov
and
adc
stos
outs
pop
add
test
mov
cmp
es
sbb
xchg
cmovbe
or
or
jp
mov
push
gs
jl
(bad)
retf
test
dec
pop
je
imul
inc
out
fstp
sahf
push
push
xchg
mov
dec
or
adc
mov
cmc
and
sbb
sub
cdq
add
into
test
sti
dec
dec
inc
fbstp
imul
popa
cld
ins
addr16
cmp
adc
sub
call
hlt
pop
dec
pushf
and
or
sbb
repz
push
cmps
arpl
xchg
bound
cli
outs
cmp
sbb
not
sbb
fimul
pop
mov
mov
sbb
pop
pop
cmp
push
dec
adc
(bad)
loop
(bad)
jle
in
cs
lods
sub
pushf
jno
push
pop
mov
aad
sbb
mov
dec
inc
ret
mov
cli
and
fwait
jge
fisubr
les
aam
cs
ss
fsubr
(bad)
hlt
push
lods
lods
jmp
ret
xchg
adc
int
aas
xchg
scas
push
(bad)
mov
mov
xchg
mov
xchg
mov
xor
dec
or
xor
in
jne
nop
fisttp
sub
push
ins
push
push
cmp
cli
nop
mov
xchg
xor
loopne
sub
push
rcl
out
xchg
icebp
enter
cmc
pop
out
les
ss
push
addr16
into
outs
int3
jge
xchg
dec
xor
mov
movs
scas
or
push
push
or
icebp
(bad)
leave
xchg
push
fsubr
ins
ror
retf
ret
fwait
xchg
jp
int3
jne
stc
(bad)
fwait
addr16
add
xchg
fist
ins
(bad)
xor
aaa
and
lds
jmp
ja
repz
pusha
arpl
lds
cmp
les
repnz
inc
mov
add
push
pop
xor
lods
jecxz
mov
std
push
rcr
je
sbb
popa
fxtract
xor
mov
nop
mov
pop
xor
mov
dec
inc
sbb
pop
ror
clc
push
pop
adc
loopne
jecxz
jo
stos
fs
inc
aam
das
cli
ret
gs
sahf
mov
inc
fsub
(bad)
sar
scas
push
push
sub
loope
inc
xchg
sub
jl
outs
in
ins
ins
push
sub
cmp
fcom
push
xchg
sbb
idiv
into
push
popa
pop
xor
jmp
lods
sbb
icebp
jmp
in
fadd
jge
lods
sub
adc
cmc
ror
xor
mov
jp
jns
mov
pop
daa
xchg
push
add
jo
mov
adc
xchg
dec
dec
es
ins
or
bound
mov
inc
mov
pop
jg
pop
jg
adc
arpl
cmp
sub
int
adc
(bad)
repz
popa
loope
inc
jo
fs
int3
mov
mov
xchg
imul
mov
mov
std
lahf
push
in
jne
jnp
frstor
lods
mov
push
adc
pop
xor
sbb
inc
sbb
cdq
loop
push
xor
jns
out
mov
fs
push
in
xlat
pop
push
or
(bad)
cmp
cmp
out
ficomp
call
out
push
test
and
sahf
pop
cmps
xchg
movs
mov
aas
in
test
lds
jg
imul
cmps
das
xchg
ficom
push
pop
fs
cmps
sub
aam
aad
fcmovnu
jg
adc
ret
out
repz
in
popf
mov
add
int3
xor
hlt
call
popa
repz
lods
rol
cmp
dec
pop
lea
es
jo
mov
dec
addr16
movs
inc
sbb
inc
pop
jne
les
movaps
ret
lock
mov
inc
jns
into
mov
loope
je
mov
add
inc
nop
(bad)
push
inc
jno
jle
sub
pop
fbstp
sub
stos
lods
aas
cdq
enter
and
(bad)
cld
push
push
pop
pop
mov
fcom
dec
test
test
push
scas
xor
pusha
add
inc
mov
or
push
or
int
iret
xlat
cld
cmp
and
pop
ins
aaa
adc
fidivr
add
jmp
lods
mov
gs
inc
jno
mov
fdiv
and
test
inc
cmp
in
xchg
cmp
test
jbe
lods
enter
lods
enter
(bad)
mov
lds
into
adc
aam
sti
jo
loope
arpl
sbb
inc
(bad)
jnp
inc
test
ds
push
lahf
xchg
(bad)
out
daa
daa
lds
ds
pinsrw
mov
cmp
push
adc
test
or
sub
pcmpgtb
stos
jg
mov
faddp
leave
sbb
ret
sub
inc
mov
xchg
in
or
lods
adc
add
sbb
adc
mov
jecxz
mov
mov
cmps
xchg
out
mov
push
sbb
push
jne
in
jbe
cmps
mov
push
pop
push
dec
call
inc
cmp
push
out
adc
(bad)
das
(bad)
pop
and
outs
enter
jmp
dec
adc
cmps
mov
jb
xchg
scas
or
inc
sub
add
ficom
dec
jge
add
(bad)
ss
rol
(bad)
and
test
aas
fsubr
push
aam
test
ret
les
and
mov
pop
ret
or
icebp
in
call
jo
xchg
jb
outs
push
faddp
pushf
sub
test
pop
or
cmp
cmp
dec
stc
shl
ret
push
xchg
inc
adc
or
mov
repnz
test
mov
inc
(bad)
lds
cmps
sbb
pop
push
ins
jo
inc
mov
cmp
jle
push
mov
dec
pop
ins
sahf
xrelease
clc
xlat
(bad)
fmul
sar
aaa
dec
sub
adc
addr16
pop
sbb
outs
lods
add
imul
mov
cwde
and
push
addr16
scas
jb
div
fcom
dec
(bad)
aam
repnz
jae
pop
movs
gs
cmp
rcl
int
lahf
ror
call
cs
popa
call
push
and
rol
jecxz
sbb
imul
dec
xor
xor
jb
add
jb
std
mov
push
bound
inc
or
jle
xchg
fidivr
fcomip
adc
scas
push
iret
mov
pop
loop
and
jb
inc
pop
push
cwde
mov
mov
adc
scas
xor
daa
(bad)
shl
jno
inc
cmc
inc
(bad)
mov
retf
mov
sbb
pop
push
cmp
mov
sbb
(bad)
xlat
les
xchg
push
retf
pushf
cmp
call
push
rcr
inc
dec
xor
mov
pop
ins
imul
lock
sub
xchg
fdiv
inc
je
ins
loopne
mov
mov
enter
sub
xor
push
iret
and
rcr
and
and
(bad)
mov
mul
mov
mov
popf
jae
call
cmp
xchg
enter
jecxz
ficomp
cwde
stos
push
repnz
jmp
cdq
test
shl
and
(bad)
out
dec
xor
rcr
popa
pop
out
inc
int
mov
enter
popf
push
cmp
mov
imul
mov
outs
and
rcr
pop
push
jg
dec
or
jmp
stos
inc
jle
push
mov
movs
xlat
dec
mov
aam
xchg
push
xchg
(bad)
pop
jp
mov
pusha
into
outs
and
mov
ja
lahf
pushf
neg
xchg
pop
jne
mov
cmp
adc
push
aam
out
or
cmp
iret
call
jmp
cmp
add
dec
push
push
sub
sbb
mov
fs
loop
jne
jns
daa
aam
rcl
mov
xlat
in
push
xchg
cmp
or
xchg
aaa
test
call
das
sar
test
aaa
sub
popa
ins
dec
xor
popa
sbb
inc
out
stos
pop
in
xchg
cmp
cmp
es
inc
jg
mov
icebp
movs
push
adc
leave
shr
xchg
test
adc
mov
inc
push
pop
adc
sar
out
jns
sbb
xchg
fcom
mov
shr
scas
test
or
jae
mov
scas
xchg
aas
lahf
js
dec
enter
mov
xor
jo
push
ds
jbe
xchg
jne
xor
pop
popf
ficomp
cmp
cmp
jb
sub
jecxz
dec
repz
and
into
mov
dec
cmp
sar
scas
xor
and
sbb
xlat
leave
rcr
ja
cmps
aaa
lea
cmp
outs
sbb
imul
dec
mov
std
shr
pop
inc
paddd
sub
jge
pop
ins
adc
jae
push
push
push
imul
aas
mov
(bad)
popf
in
stc
cmp
lods
dec
nop
in
das
je
fld
pop
push
aam
pushf
xor
data16
mov
lods
rcr
jno
xor
outs
lds
push
cmp
push
inc
adc
icebp
push
pop
sub
jbe
jge
mov
or
jbe
fmul
das
ins
out
dec
call
dec
daa
dec
push
and
aaa
mov
js
icebp
sbb
cli
loopne
daa
inc
call
pop
xchg
stos
mov
sbb
add
dec
add
ficom
daa
push
sub
(bad)
scas
sar
jmp
cld
lea
sbb
pop
sbb
das
jmp
cmp
and
xor
mov
and
mov
xrelease
adc
and
and
and
inc
sbb
and
mov
mov
xchg
ror
mov
inc
mov
inc
ds
ror
repnz
mov
(bad)
sbb
loope
jg
hlt
clc
rcl
adc
inc
fidiv
sahf
add
out
mov
sub
cmp
ss
inc
xor
jnp
push
and
cmp
es
je
inc
dec
jl
dec
inc
adc
xchg
jl
wrmsr
cmps
push
cmps
xchg
mov
mov
pop
inc
pop
cmps
cli
cwde
adc
cmp
gs
pop
inc
stc
sub
dec
imul
mov
fsubr
or
cs
mov
xor
adc
dec
add
jo
push
sbb
adc
xor
in
fisub
in
pop
je
retf
cdq
popa
jae
int3
pop
scas
push
pop
rcl
mov
add
sahf
push
mov
scas
in
push
mov
ds
inc
adc
fs
sub
test
arpl
mov
dec
push
sub
jns
scas
jp
mov
pop
xchg
xor
mov
or
out
das
ret
mov
test
jb
sti
std
(bad)
js
dec
cmp
mov
xchg
jns
sub
out
clc
xchg
(bad)
repnz
mov
std
push
xchg
test
push
popf
iret
leave
mov
leave
pushf
jae
mov
mul
pop
das
adc
mov
aas
pop
jl
fistp
mov
inc
mov
arpl
test
mov
sub
ror
push
retf
sub
outs
xor
dec
mov
and
push
or
fldcw
aas
out
jmp
push
js
out
xchg
das
adc
cmp
push
xchg
inc
push
pop
jmp
xchg
xchg
inc
adc
adc
gs
out
loop
into
adc
cmps
dec
int3
pop
call
pop
add
int3
sbb
idiv
jmp
ins
mov
mov
imul
neg
cmps
xchg
daa
jb
inc
inc
popf
add
jb
mov
ret
sahf
push
inc
mov
es
push
retf
and
unpckhps
movs
add
shr
cmp
sub
repnz
test
pop
lock
(bad)
fidiv
mov
js
or
fstp
ins
inc
or
js
dec
cwde
mov
in
in
sub
ret
ffree
jle
mov
push
pushf
adc
cli
dec
or
and
xchg
cmp
lods
push
and
fisubr
jne
or
jmp
jp
mov
dec
cmp
ds
xchg
lods
(bad)
das
sbb
retf
popf
cmp
retf
xor
push
je
and
in
addr16
std
push
jmp
xlat
pop
pop
add
js
xchg
mov
mov
outs
out
lea
into
bound
loop
clc
aas
jb
stos
sbb
scas
adc
cs
sbb
in
inc
in
xchg
sbb
pop
and
fwait
pop
jnp
mov
imul
pushf
dec
aam
inc
jle
adc
sbb
loop
loopne
je
adc
jbe
push
stc
mov
stos
cmps
pop
shl
pushf
addr16
jae
jmp
adc
setno
addr16
pop
xchg
add
lea
sti
ins
gs
xchg
sbb
ins
push
adc
ret
jecxz
or
add
cmp
inc
add
xor
(bad)
in
cmp
mov
xchg
lds
sti
pop
pop
movs
lahf
sahf
jge
xor
pushf
xchg
xchg
cld
mov
sub
mov
test
lahf
mov
xchg
sahf
fwait
add
imul
xchg
je
inc
mov
paddw
xchg
push
mov
ins
aam
jge
ret
cmp
xchg
and
cmps
sbb
ja
ror
or
mov
mov
or
push
sar
lods
add
push
out
pop
cmp
push
test
rol
add
ins
mov
mov
inc
mov
das
mov
xchg
ja
xchg
mov
(bad)
dec
sbb
push
out
pop
lods
mov
and
(bad)
ja
int
ins
in
mov
or
mov
std
sbb
sub
xchg
xor
fisub
dec
int3
or
and
adc
xchg
inc
adc
jns
sbb
movs
push
ret
jl
aad
jnp
test
jb
fwait
inc
add
inc
jg
in
shr
ds
imul
fnstcw
stc
add
push
xchg
pusha
fidiv
xor
pop
add
(bad)
inc
dec
cmp
es
lods
sti
sbb
ret
cmp
push
mov
sbb
dec
jne
pop
ret
jns
icebp
mov
shr
aas
and
imul
aaa
push
xlat
mov
outs
mov
xchg
imul
fild
and
call
dec
adc
mov
and
cmp
les
dec
in
jle
dec
cmps
fiadd
adc
inc
mov
mov
push
retf
cmp
ffree
xlat
ja
jno
inc
call
adc
jb
xacquire
scas
mov
rcl
sub
ret
lea
push
mov
jmp
popa
mov
sbb
das
adc
adc
pop
jns
rcr
xlat
adc
pop
retf
int
cmc
pop
mov
fmul
push
ficom
add
mov
jmp
pushf
add
stos
sahf
(bad)
jecxz
pop
bound
xor
jmp
shl
aaa
(bad)
add
div
push
push
sbb
shl
int3
lahf
inc
scas
mov
sub
test
lock
mov
sub
add
cld
mov
mov
test
das
xor
add
and
jno
mov
mov
cld
inc
pop
movs
sbb
aam
scas
cmps
or
imul
or
sub
mov
lods
lahf
js
add
sahf
loopne
js
and
push
push
aas
xchg
pop
test
push
mov
call
mov
jb
push
adc
pop
lds
pop
mov
pop
push
mov
mov
popa
fld
gs
aaa
mov
push
mov
hlt
xchg
punpckhwd
push
pop
iret
je
cmp
push
or
js
mov
jbe
clc
push
inc
inc
add
leave
push
adc
inc
test
push
mov
pop
(bad)
out
pop
pop
imul
and
adc
ja
xor
mov
dec
retf
mov
xchg
clc
add
push
inc
outs
or
addr16
mov
sbb
inc
rcr
pusha
arpl
dec
mov
xor
mov
xchg
push
jno
arpl
fisub
push
test
xor
push
test
jge
mov
pop
jbe
push
mov
les
mov
aas
daa
sub
cs
cs
cmp
adc
jp
xchg
cld
icebp
out
loopne
(bad)
add
inc
sbb
loopne
mov
(bad)
and
inc
(bad)
xchg
mov
js
push
inc
pop
enter
rcr
mov
mov
mov
or
icebp
lahf
das
sub
jno
adc
dec
push
mov
mov
inc
mov
test
inc
aam
out
in
lahf
(bad)
xor
aaa
xor
stos
cdq
mov
imul
xchg
or
cmp
lahf
and
pop
or
and
nop
xor
test
cmp
cmps
push
and
add
ficom
dec
aam
xchg
(bad)
adc
push
mov
sti
pop
push
mov
pop
lods
mov
adc
dec
and
sbb
repz
push
sbb
xchg
jo
push
fistp
cmp
xor
mov
add
or
adc
mov
adc
mov
jg
fadd
cmp
dec
xor
xchg
pop
into
movs
cmc
inc
pop
mov
cmp
mov
sub
add
repz
ret
adc
jmp
cmp
(bad)
into
leave
mov
cwde
ss
out
js
cmp
ror
jmp
push
adc
iret
aas
xor
mov
div
in
out
push
mov
out
mov
mov
cwde
loopne
movs
sar
test
jge
mov
mov
test
push
jnp
jne
movs
pop
leave
(bad)
lea
fwait
ret
in
xlat
xor
lods
std
pop
test
adc
and
jmp
loop
sub
or
jle
(bad)
(bad)
shl
(bad)
cmp
xchg
inc
push
movs
ja
sar
mov
push
sbb
imul
ror
ficomp
and
add
mov
movs
data16
in
pop
xchg
cmp
and
imul
mov
lods
gs
xchg
mov
call
adc
sbb
enter
mov
ror
cmp
jae
(bad)
cmp
ret
xchg
push
push
push
mov
pushf
ror
shr
xchg
inc
repz
retf
nop
dec
stos
xchg
cld
pop
test
and
jno
je
jp
mov
mov
jmp
out
xchg
loope
int3
adc
jge
cmp
adc
inc
out
xor
xor
sbb
sbb
push
sbb
daa
pop
push
leave
in
xchg
psrad
pop
or
imul
stc
or
or
lock
dec
mov
(bad)
xchg
fsubr
icebp
mov
out
aas
cmp
inc
push
test
popf
dec
pushf
dec
dec
dec
add
pop
in
jle
fcomi
push
sbb
addr16
out
mov
push
sub
cmp
loope
retf
movs
(bad)
enter
push
arpl
loopne
xchg
sub
jecxz
nop
pop
xchg
jo
mov
rcr
je
mov
cmps
int3
sub
dec
leave
mov
mov
clc
into
add
enter
pop
shl
scas
daa
inc
mov
jmp
jp
or
iret
dec
sub
sub
mov
push
jae
sbb
sbb
std
fld
mov
cmps
mov
mov
cdq
or
sub
dec
cmps
adc
jo
jne
stos
xchg
loopne
sub
sub
lods
inc
mov
cmp
add
mov
mov
sbb
pop
bound
aas
in
rol
mov
std
push
pop
(bad)
and
mov
add
cld
repnz
jmp
data16
jecxz
ins
shr
std
xchg
hlt
inc
or
mov
jmp
push
pop
dec
fnstenv
je
and
push
bound
mov
add
lods
pop
inc
xor
sub
mov
xchg
test
outs
(bad)
pop
pushf
sbb
out
lods
loopne
jge
addr16
enter
push
in
popf
add
ins
xchg
mov
add
lea
aam
lods
adc
and
xchg
mov
pop
and
cli
mul
loope
out
jecxz
ja
push
push
mov
or
imul
sub
repnz
push
movs
sub
xor
and
aam
leave
out
inc
icebp
pop
scas
dec
mov
call
sahf
pop
in
idiv
(bad)
sbb
movs
outs
add
stc
jno
stos
pop
cmp
jae
jmp
imul
je
inc
sub
pusha
cmc
ss
pop
push
test
mov
je
ins
cli
or
inc
or
sub
inc
pop
xchg
lds
(bad)
lods
xor
les
or
xchg
or
repnz
aad
sbb
push
cdq
es
fdiv
cmc
push
inc
add
push
mov
dec
in
mov
ret
cdq
cmp
loope
xchg
xchg
mov
and
outs
sbb
gs
sbb
mov
mov
ror
sbb
movs
jge
add
shl
in
sub
add
add
ja
clc
jge
cmp
hlt
and
dec
or
in
outs
mov
scas
repz
mov
outs
jmp
sbb
mov
in
dec
pop
jne
data16
inc
xchg
icebp
lea
cmps
loop
mov
scas
aaa
shr
fisub
inc
shl
push
adc
fmulp
cs
or
and
inc
mov
aad
mov
jge
sub
dec
lods
and
mov
sahf
in
xor
lahf
jae
mov
or
and
fisttp
fild
sar
or
lahf
xchg
jae
dec
inc
cmc
push
and
aas
sbb
rcl
add
inc
push
mov
inc
loop
cdq
and
in
ss
adc
sub
jge
push
inc
and
cs
fwait
test
mov
fimul
sbb
cmp
outs
jbe
cli
lock
ds
and
nop
scas
mov
lahf
fcom
xchg
jo
fbstp
xchg
in
arpl
rcr
movs
cmovae
fldcw
stos
scas
movs
dec
push
sub
sbb
repnz
int3
pop
pop
ficomp
lock
imul
adc
pop
mov
push
mov
cmp
push
aad
lock
pop
movs
pop
sahf
test
shl
cmp
jecxz
xor
push
xchg
sub
and
nop
fcom
test
xor
add
out
cmps
aaa
ret
(bad)
retf
sub
aaa
or
data16
lahf
dec
(bad)
in
or
mov
or
retf
push
lds
add
push
int
cmp
add
into
es
test
mov
sar
pop
mov
sub
lea
mov
sub
shr
xor
pop
cmp
mov
push
pop
xor
sbb
push
fwait
sbb
or
jbe
cli
test
inc
sbb
shl
psubsb
dec
out
cmp
test
pop
dec
dec
xchg
clc
cmp
add
test
arpl
in
xor
nop
or
sbb
push
or
rcl
push
dec
inc
mov
xchg
pop
or
cli
inc
inc
out
xchg
in
mov
dec
mov
cli
dec
sub
sar
loope
int
(bad)
fisub
or
xchg
cs
mov
jae
vaddss
adc
add
mov
jmp
popf
arpl
popa
lahf
xchg
sar
adc
sti
mov
sbb
dec
and
inc
ins
mov
cmp
mov
shl
pushf
mov
xchg
ja
mov
fdiv
arpl
sahf
sbb
jl
popf
int3
mov
fxtract
jmp
into
rcr
int
jge
lods
js
ficomp
pop
sub
or
imul
(bad)
(bad)
push
xchg
jae
cmp
ret
jns
shl
add
xchg
leave
xchg
xor
xchg
mov
loope
in
push
fcom
sbb
cli
rcl
sahf
jp
lock
test
test
jl
retf
or
mov
gs
and
mov
and
dec
dec
(bad)
xor
jl
mov
inc
mov
sbb
sub
stc
out
inc
mov
add
mov
mov
pmaxsw
mov
inc
data16
push
xor
mov
sbb
or
mov
lods
pushf
xchg
adc
mov
outs
xlat
adc
popa
push
ins
ret
mov
mov
xor
mov
push
jae
xor
aas
lahf
rcr
scas
mov
test
dec
push
stos
test
sahf
cmps
mov
or
mov
lods
jle
mov
inc
push
mov
jecxz
pop
dec
in
and
imul
mov
dec
jnp
and
jmp
scas
in
sti
inc
ins
and
add
out
push
cwde
outs
push
outs
cmp
sub
lods
jb
sub
dec
mov
and
rcl
stos
scas
mov
hlt
rcr
push
or
scas
dec
inc
cmp
jbe
addr16
pop
ds
push
test
icebp
pop
xchg
xor
dec
push
cmc
or
popa
popa
test
xrelease
inc
mov
je
mov
cld
cli
jmp
mov
ja
icebp
popa
push
sbb
mov
arpl
les
in
cmp
push
ds
add
sub
mov
sbb
sbb
cs
movs
clc
pushf
ins
daa
retf
out
or
mov
das
mov
mul
jge
fisubr
mov
daa
mov
push
mov
add
stos
mov
aaa
pushf
push
fisttp
sbb
jecxz
aaa
dec
sub
mov
in
aam
pop
mov
fs
mov
or
sbb
retf
jnp
and
jnp
sahf
and
cmp
xchg
stos
in
and
add
xor
sub
test
mov
xchg
cmps
jle
or
push
call
mov
xor
test
cmp
sub
jge
fcmovu
inc
mov
adc
in
xor
vpsraw
sub
dec
mov
jecxz
dec
iret
cs
pushf
stos
jge
scas
sbb
aam
out
and
imul
and
and
and
cli
sbb
dec
sub
(bad)
addr16
ds
mov
mov
sbb
jns
cmp
adc
rcr
cld
shr
fcomp
and
pop
add
dec
aaa
xchg
test
sub
pushf
or
xchg
cdq
fldenv
js
xor
mov
fwait
inc
sub
mov
ss
adc
out
popa
or
shr
lods
test
add
adc
sub
dec
jo
popa
into
stos
or
cmps
in
jo
(bad)
pop
fucomip
fidiv
pushf
(bad)
mov
xor
int
out
sub
ret
in
rcl
test
out
jae
gs
inc
sub
cmp
mov
icebp
mov
aam
mov
mov
pop
push
and
or
dec
xlat
sbb
mov
lock
ja
pop
mov
dec
xor
xchg
outs
mov
inc
test
aaa
jbe
ret
mov
dec
dec
into
outs
int3
ret
adc
mov
enter
sbb
jmp
pop
jbe
out
fidivr
mov
xchg
int3
shl
fstp
add
jo
ret
or
mov
xchg
mov
adc
rcr
pop
test
jmp
jnp
paddsb
sub
mov
out
rcl
xor
jp
mov
adc
and
mov
sub
xor
mov
call
jo
pushf
ins
xchg
push
stc
ss
rcr
aam
sbb
push
sbb
sbb
outs
jno
std
or
xchg
rol
dec
xchg
sbb
pushf
sbb
ds
push
(bad)
in
jne
(bad)
jnp
cmp
ds
sub
push
pop
(bad)
gs
inc
cs
sahf
mov
pop
and
fsubr
call
lds
jmp
cld
adc
or
addr16
pop
and
mov
adc
xchg
pop
lahf
mov
(bad)
mov
fbstp
repz
add
mov
out
lods
bound
adc
push
out
retf
lahf
sub
imul
outs
sahf
dec
fisttp
sub
ja
sbb
stc
sub
mov
jle
adc
iret
data16
(bad)
lea
in
jae
push
pop
push
(bad)
retf
clc
and
out
rcr
push
jp
pop
sbb
push
mov
sbb
ds
pop
out
mov
push
cs
pop
lea
xlat
mov
(bad)
jmp
mov
fcmovnbe
div
and
mov
or
or
adc
fiadd
jecxz
sbb
adc
(bad)
add
jno
loop
stos
adc
out
push
xchg
or
iret
fidivr
adc
sbb
sar
sbb
in
outs
rol
stos
ins
add
in
or
in
mov
jnp
lahf
add
pop
ins
fxtract
test
test
push
repnz
mov
pop
sbb
out
out
jno
and
pop
ret
ret
into
bound
xlat
sar
repnz
pushf
pop
lahf
push
jmp
jbe
cs
idiv
test
imul
mov
xchg
cwde
cmp
jmp
fldenv
(bad)
js
stos
add
push
int3
jae
in
mov
sbb
jl
or
mov
xchg
lock
test
retf
inc
and
xchg
push
into
jle
js
dec
nop
fcomp
bswap
dec
xchg
(bad)
gs
call
jmp
test
cld
cli
mov
push
push
push
dec
jp
adc
fs
lods
(bad)
sub
pop
jne
scas
mov
fsubr
pushf
sub
pop
cmp
fdiv
mov
cmc
push
mov
adc
stc
mov
icebp
outs
mov
stos
in
push
xchg
cld
mov
xor
mov
pop
ds
push
in
mov
xchg
movs
xchg
call
mov
sbb
sub
cmp
addr16
pop
cmp
repnz
nop
loop
bound
fidivr
int3
push
pop
jp
(bad)
das
ds
xlat
xchg
mov
mov
jge
(bad)
adc
dec
sbb
adc
dec
xor
addr16
pop
and
imul
(bad)
ss
and
sbb
leave
sbb
pop
in
push
imul
adc
push
mov
add
push
jbe
sbb
push
push
push
cwde
gs
xchg
fdivr
adc
out
shl
aad
or
or
pop
cmp
push
cmps
(bad)
std
int
ret
cmp
dec
xchg
mov
dec
loopne
jmp
out
mov
mov
das
scas
(bad)
inc
aas
stos
cwde
ror
mov
adc
cld
mov
es
add
(bad)
add
scas
mov
fst
cmc
out
cwde
imul
mov
gs
not
xchg
add
pusha
test
mov
gs
dec
sahf
cmc
div
cmp
xchg
inc
pushf
sbb
mov
pushf
int
inc
je
in
inc
rcl
jo
aam
push
pop
adc
add
stc
adc
or
mov
mov
arpl
scas
sbb
xor
lds
mov
test
push
fadd
gs
xchg
aaa
or
xor
stos
jmp
push
pop
pop
pop
ja
push
push
and
push
inc
out
inc
cdq
cmp
and
repz
iret
push
xor
jmp
push
jl
dec
in
or
sub
sbb
xchg
cmp
adc
int3
xchg
mov
(bad)
xor
xchg
sti
and
mov
fistp
fadd
xor
xchg
test
and
sbb
pop
stos
outs
sbb
cmp
fs
adc
dec
sahf
xlat
or
les
jmp
outs
adc
cmc
add
(bad)
in
xor
call
adc
pop
and
jno
test
inc
jno
dec
jnp
push
out
pop
ss
jecxz
fadd
dec
(bad)
mov
jmp
hlt
rcl
(bad)
cdq
js
retf
add
pop
stos
push
xchg
lea
cmp
adc
add
mov
xor
sub
popa
inc
pop
fcom
pop
sbb
pop
adc
jnp
xchg
mov
lock
fcom
jle
loope
add
imul
aad
mov
add
add
das
xchg
lea
jbe
push
add
loop
out
xchg
bnd
inc
xor
jne
adc
cmp
aam
dec
cs
add
int3
pop
fisub
inc
inc
jle
jp
mov
pop
je
arpl
cmp
sti
(bad)
in
aaa
and
imul
js
ffree
loop
xchg
mov
fisttp
aas
int
pop
sar
pop
cmp
pop
push
cmp
and
retf
mov
imul
movs
mov
sub
jecxz
fadd
out
int
jnp
cs
xchg
enter
gs
stc
pushf
sub
das
hlt
mov
jle
mov
push
pop
or
stc
jg
sbb
stos
xor
not
loop
dec
(bad)
aas
or
mov
push
stc
mov
loop
call
add
sub
pop
repnz
int
and
dec
int
rol
inc
stos
stc
add
xchg
retf
xor
dec
rcl
sbb
les
mov
imul
push
jb
mov
push
jle
mov
dec
sbb
and
sbb
mov
add
xchg
retf
push
dec
push
mov
ja
inc
xchg
out
pushf
fdivr
push
adc
sti
scas
addr16
gs
inc
std
mov
cs
and
push
sbb
outs
jno
inc
sub
push
scas
inc
cwde
adc
mov
cmp
jecxz
dec
mov
sub
mov
fst
cmps
jmp
inc
inc
es
out
je
cmps
ret
sti
data16
jecxz
cwde
pop
aam
repnz
fwait
jmp
dec
xchg
cs
ss
xchg
stos
movs
inc
stos
loope
(bad)
mov
jmp
sub
dec
dec
div
jmp
cmp
call
pop
cmp
les
jbe
into
push
xchg
frstor
push
lds
and
xchg
out
pop
clc
inc
lods
setb
sti
xor
into
dec
mov
sbb
xchg
push
jno
add
or
pusha
out
add
cmp
pop
fadd
xor
das
stc
xor
repz
mov
cmp
add
in
bound
dec
mov
mov
cmp
fcomp
mov
mov
adc
leave
imul
hlt
add
clc
sub
or
cmp
sub
mov
and
loopne
loopne
cmp
mov
xchg
mov
jl
push
jecxz
mov
push
inc
aad
lahf
fwait
pop
fadd
clc
pop
leave
mov
xchg
es
add
sub
lea
les
ja
outs
sbb
and
cmp
pop
imul
push
std
mov
int
dec
push
inc
pushf
jle
mov
jp
pop
scas
int3
adc
fidivr
jp
lods
or
inc
and
test
inc
clc
add
call
pop
test
es
xchg
(bad)
sub
popa
pop
xor
mov
pop
test
imul
adc
push
lods
pop
or
jecxz
or
push
(bad)
mov
retf
sub
mov
inc
xchg
mov
dec
test
mov
push
add
jns
scas
aas
jmp
leave
in
ror
sbb
push
xchg
inc
push
ja
sbb
lea
mov
paddsb
dec
add
das
xor
mov
jb
fstp
out
or
pop
mov
fimul
jb
or
mov
daa
mov
lds
mov
jae
mov
fadd
mov
mov
inc
cwde
enter
xchg
loop
mov
jns
cmp
inc
leave
xchg
mov
and
or
das
(bad)
xchg
sub
movs
rol
pop
push
les
mov
and
hlt
pop
push
push
push
rol
mov
retf
sbb
lock
mov
jmp
imul
(bad)
rol
movs
lods
sbb
stos
xchg
out
dec
fs
fmul
inc
out
scas
dec
push
retf
je
jno
cmp
adc
mov
call
daa
cli
lds
pop
pop
or
aas
dec
(bad)
fist
mov
shl
test
add
repz
lods
sub
repz
cmp
pop
(bad)
pushf
cmps
xchg
mov
lods
movs
jnp
push
fistp
xchg
sub
movs
pop
mov
lahf
data16
in
mov
push
xor
push
jp
test
sub
jl
(bad)
scas
icebp
push
push
ds
or
dec
cmp
ret
enter
mov
push
bound
clc
sar
and
add
int
mov
repnz
ins
mov
or
loopne
rcl
pop
in
push
(bad)
fs
mov
xor
fimul
mov
call
fwait
cs
ins
data16
jp
out
mov
je
lahf
in
push
push
loopne
movs
jb
dec
inc
or
xchg
mov
jp
js
sub
nop
es
adc
shl
cs
sub
jne
rcr
jb
inc
aaa
mov
jp
ficom
jbe
sub
and
add
fwait
cmps
lock
jns
pop
cdq
dec
shufps
arpl
jp
cmp
sbb
sub
xchg
push
and
sbb
fidiv
pop
cmp
and
aas
retw
loop
aaa
xor
jb
movs
ja
mov
cmp
pop
ds
jle
(bad)
lock
jb
leave
js
in
aam
es
mov
loop
jae
arpl
daa
add
jne
ins
test
call
adc
inc
xor
cmc
sub
pop
jne
int3
mov
cmp
jno
sbb
(bad)
push
dec
cmp
push
mov
sub
xchg
inc
call
sbb
mov
add
imul
mov
adc
(bad)
call
add
xchg
adc
sub
sbb
push
jecxz
xchg
call
ins
(bad)
mov
cmps
xor
ds
or
adc
repnz
and
(bad)
adc
dec
inc
adc
sbb
sbb
int3
mov
mov
aas
shl
in
repz
test
out
adc
aas
retf
mov
jo
inc
dec
mov
mov
aam
lods
mov
std
dec
test
lahf
call
mov
push
mov
shl
cmps
push
push
test
mov
xor
and
das
and
inc
push
mov
scas
ds
fs
out
inc
xchg
imul
dec
mov
mov
and
ja
retf
aam
add
push
lock
pop
pop
sbb
aaa
sbb
mov
push
(bad)
leave
inc
call
inc
mov
mov
xchg
call
xchg
cmps
retf
fmul
ins
jno
pop
fcomp
je
mov
stos
adc
aam
sub
and
mov
fnstenv
pop
pop
loope
sbb
aam
jno
and
scas
hlt
stos
div
push
hlt
mov
add
xchg
mov
lock
dec
push
pusha
shr
popf
cmp
ja
dec
sub
sti
push
je
in
sbb
hlt
mov
iret
loope
inc
mov
jne
cmp
stos
int3
stos
xchg
sub
lods
mov
scas
lahf
mov
jge
loope
mov
cmc
test
mov
fucomp
retf
shl
cmps
adc
or
cs
xchg
loop
add
aaa
mov
and
and
mov
fild
xchg
loop
xlat
push
popf
pop
fs
and
pop
inc
mov
jl
inc
into
xchg
cmp
add
or
and
js
hlt
xchg
loope
sahf
push
add
xchg
push
pop
mov
leave
ss
push
sbb
popa
push
(bad)
pop
mov
dec
sub
aaa
xor
test
xlat
and
jge
mov
shl
add
cmp
or
jl
mov
adc
sbb
test
jns
outs
inc
call
out
pop
dec
out
les
inc
jp
add
ss
inc
ret
fistp
(bad)
aam
pop
and
arpl
or
xchg
repz
cmc
aaa
dec
xchg
adc
add
(bad)
add
or
pop
mov
ins
fistp
pop
mov
xchg
jge
and
(bad)
jno
lea
iret
repnz
push
jl
xchg
dec
push
imul
mov
sbb
imul
movs
ficomp
mov
xchg
cmp
in
mov
mov
xor
or
push
xor
dec
mov
mov
or
push
pop
or
das
mov
jno
je
test
inc
call
mov
cmp
or
ss
add
and
test
and
push
out
or
test
adc
push
fwait
out
mov
out
clc
cmc
ins
sbb
xor
push
cli
pop
mov
xchg
test
repz
jmp
push
clc
test
pop
sbb
leave
call
xchg
cmp
sub
in
ret
cmc
inc
aam
cld
jecxz
lods
sar
sbb
dec
test
cmovns
adc
pushf
mov
cwde
arpl
push
mov
pop
push
es
(bad)
(bad)
leave
lahf
jns
or
mov
adc
inc
jae
dec
mov
iret
test
adc
jge
(bad)
rcr
inc
test
mov
call
(bad)
dec
(bad)
into
popf
test
mov
adc
and
and
add
push
push
mov
cmp
pop
call
mov
sbb
std
arpl
mov
fcomp
(bad)
fstp
cmps
add
xchg
mov
in
popf
bound
das
mov
jle
or
out
in
jmp
jmp
fisubr
call
mov
and
(bad)
imul
xchg
jp
xor
xchg
mov
jmp
push
pusha
fmulp
fiadd
jecxz
xor
dec
pop
dec
sub
push
clc
adc
ss
sub
cmp
and
pushf
xchg
mov
mov
pop
xor
xchg
mov
(bad)
pushf
fnstenv
inc
jae
pop
(bad)
pop
inc
jge
imul
cmp
popf
cdq
fstp
xlat
shl
inc
and
sbb
pushw
dec
popa
adc
jb
jmp
js
xlat
sub
fsubr
shl
dec
pop
lahf
cmp
sbb
ja
cmps
arpl
xor
icebp
cmc
sti
retf
jmp
sbb
jbe
cs
jmp
pop
jns
out
clc
mov
imul
push
rcr
mov
(bad)
mov
mov
jmp
cmc
sub
cmps
mov
jmp
cmp
cmp
sbb
jle
cmp
in
fnstsw
xor
add
xchg
(bad)
out
out
adc
sbb
lock
ss
add
add
je
popa
pop
pandn
push
call
mov
dec
pop
mov
add
sub
out
ret
or
jl
fwait
or
xlat
aas
xor
jno
xor
leave
aad
mov
mov
and
sub
mov
enter
lock
sbb
mov
xchg
(bad)
push
adc
out
mov
dec
dec
mov
lods
pushf
mov
xor
sub
fsub
dec
adc
adc
xchg
jae
js
inc
push
repz
push
fidivr
and
rcr
push
jae
add
lds
xor
add
and
jmp
jge
cld
jge
pusha
stos
popf
aad
jge
or
mov
jl
inc
rol
or
lahf
mov
sbb
dec
movs
sbb
cmp
dec
gs
lds
push
cdq
mov
sub
loope
mov
mov
iret
xor
imul
mov
cmp
add
and
jne
inc
daa
(bad)
lahf
js
aam
xchg
mov
inc
mov
lea
mov
into
or
jmp
test
in
test
inc
adc
ror
inc
into
jmp
or
loopne
inc
(bad)
aaa
retf
inc
test
push
jnp
inc
jmp
add
popa
scas
in
sub
sub
jo
xor
xchg
jnp
pop
mov
aam
xchg
scas
les
cs
leave
pop
aad
lods
inc
pusha
add
fld
lods
sahf
iret
mov
popa
cwde
rcr
jo
call
fisttp
aas
enter
adc
bound
add
dec
push
mov
aad
add
pop
test
mov
repz
mov
out
push
sbb
call
xlat
push
stc
(bad)
cld
sbb
push
out
inc
mov
into
clc
dec
or
cmp
jne
adc
pop
test
sahf
es
aaa
bound
inc
out
and
inc
bound
repnz
sti
cmps
cmp
jnp
mov
pop
call
lods
fwait
cmc
adc
adc
or
add
out
sub
loopne
into
lods
cmps
dec
sub
sti
mov
test
sbb
jns
clc
mov
arpl
xchg
mov
pop
in
jns
fs
mov
out
std
adc
lea
loopne
jg
int3
jmp
mov
mov
out
jecxz
adc
gs
dec
icebp
aas
and
dec
shl
jnp
cdq
add
mov
push
push
mov
popa
xchg
xrelease
push
hlt
xchg
fwait
lock
cmps
pop
sub
ds
ret
ss
cmc
pop
stc
adc
aam
ds
push
inc
pop
jg
lea
pop
push
add
test
add
add
cs
cdq
and
lds
pop
mov
lahf
cmp
xchg
sub
repz
dec
(bad)
fst
les
dec
xor
test
lods
xor
sbb
sub
dec
jbe
sbb
add
jp
mov
and
imul
mov
or
ret
and
push
cmps
daa
test
pop
mov
jmp
or
pop
inc
(bad)
sti
mov
test
mov
movs
cmp
mov
mov
push
out
(bad)
cld
jo
mov
cld
ret
xor
out
cmp
in
test
add
call
test
mov
fadd
test
ja
clc
xchg
jne
jmp
js
and
(bad)
nop
push
(bad)
xor
push
out
pop
leave
clc
mov
movs
loopne
pop
retf
das
ss
sbb
call
dec
in
or
mov
movs
adc
cmp
or
out
cmp
xor
xor
imul
jl
cmp
test
cs
pop
push
mov
mov
sub
dec
ins
pop
xchg
out
imul
pop
xor
movs
(bad)
adc
mov
or
ja
inc
stc
mov
mov
mov
vcvtdq2pd
xchg
(bad)
cmp
mov
xchg
lahf
push
aam
sub
call
imul
cmps
jecxz
add
add
push
jmp
outs
dec
out
(bad)
ins
shl
fs
jge
gs
inc
jmp
arpl
je
out
cmp
cmp
outs
sub
imul
jle
jecxz
lea
lods
mov
xchg
cmc
xchg
fmul
jl
cmp
je
sub
sbb
shl
sub
xchg
pmaxsw
mov
rcr
aad
ja
pusha
mov
and
sub
cld
push
mov
xor
or
shl
and
add
into
and
cmc
jmp
sub
mov
cmp
imul
jle
out
(bad)
xchg
ins
add
es
sub
adc
test
xchg
out
gs
fnsave
mov
mov
outs
inc
out
mov
xchg
cdq
and
mov
push
cmp
cmp
pop
sub
xor
test
sbb
loopne
xchg
test
pop
pop
push
pop
mov
dec
adc
or
xchg
push
dec
xor
(bad)
pop
push
and
ret
push
lea
xchg
or
into
loop
mov
mov
mov
push
test
push
lea
es
leave
sub
mov
xchg
inc
loope
clc
bound
cld
je
sub
jmp
call
sbb
sbb
cmp
(bad)
sbb
mov
in
fmul
xlat
inc
bound
ror
pop
add
mov
sub
add
add
mov
loop
jle
(bad)
int
jl
fld
aad
sbb
mov
imul
mov
aad
jo
sbb
inc
inc
(bad)
js
fisubr
or
sub
rcl
xor
fdiv
jmp
lea
mov
scas
inc
xor
sbb
xor
xchg
mov
and
push
ret
jle
mov
jle
shl
(bad)
into
mov
mov
fsub
(bad)
daa
pop
sbb
mov
mov
jl
jecxz
pusha
frstor
pop
mov
jnp
lods
div
pop
mov
pop
xor
loop
dec
inc
stc
xchg
sbb
mov
adc
retf
out
cmps
adc
jg
fimul
cmp
in
fldenv
test
out
xchg
push
xchg
jmp
jmp
mov
fs
movs
outs
cmp
and
push
mov
add
je
or
jb
add
xor
and
cld
into
test
mov
or
(bad)
xor
iret
pop
leave
adc
outs
cli
inc
xchg
and
cmp
push
xchg
pslld
mov
add
cmps
js
or
clc
sti
jecxz
xor
jb
dec
and
cmp
or
or
cmp
(bad)
xor
add
aam
mov
ds
(bad)
repz
scas
out
test
movs
mov
dec
jle
inc
stos
iret
push
test
or
out
xor
and
repnz
(bad)
mov
out
sbb
or
cmp
or
lds
bound
add
pop
push
clc
sar
mov
leave
int
or
xchg
mov
es
bound
xlat
add
and
add
adc
mov
jle
int
ret
jo
xchg
arpl
lds
scas
mov
mov
jnp
cwde
ret
sbb
test
sahf
ins
adc
push
push
mov
xor
or
iret
pop
push
mov
pop
ja
in
and
fsub
jb
adc
aaa
mov
cmps
(bad)
(bad)
cwde
out
leave
xchg
fucomp
in
xor
sbb
inc
out
test
mov
sbb
xchg
outs
xor
retf
lock
pop
or
jne
test
mov
cmp
jbe
jnp
pop
out
cmp
ins
push
cmp
xor
inc
fimul
adc
xchg
enter
dec
sbb
xchg
push
movs
stos
and
mov
lods
sbb
dec
lds
or
int
mov
cmp
adc
inc
rcr
bound
add
stc
jp
scas
rcl
push
repz
sbb
clc
in
mov
lea
cmp
mov
mov
mov
popa
sub
inc
xor
mov
call
mov
and
ror
inc
out
into
and
outs
cdq
fnsave
dec
dec
ins
push
sub
cmc
push
(bad)
and
out
sub
xchg
test
mov
test
xlat
lahf
loopne
pop
mov
out
push
fsub
push
ss
cmc
call
adc
xor
add
sub
mov
xchg
push
mov
adc
retf
arpl
outs
inc
scas
sub
loop
jp
push
xchg
sbb
call
aad
pusha
bound
in
lock
daa
xlat
pop
mov
(bad)
xchg
mov
jmp
sbb
fs
mov
pop
cmps
add
cmp
ja
add
dec
and
push
xor
(bad)
xchg
leave
push
mov
test
sbb
mov
enter
mov
dec
in
and
inc
ins
les
sbb
push
mov
pop
fs
mov
cli
mov
jns
sahf
or
or
fwait
daa
sub
push
and
cli
mov
ja
outs
(bad)
mov
rcl
push
mov
cmp
je
xchg
lods
fsubrp
imul
call
cmps
push
out
push
or
sbb
sbb
loop
mov
push
mov
in
mov
lea
ret
sub
inc
loope
sub
dec
scas
cdq
sub
ss
repz
test
pop
fcmovb
inc
jbe
out
popa
add
xchg
je
add
scas
sbb
jb
cmp
sub
cmps
fs
(bad)
pushf
out
div
out
push
dec
pop
retf
cmp
dec
loop
aaa
cmp
gs
or
ss
fild
cmps
pop
pop
push
js
retf
push
cdq
xchg
ds
push
xchg
fwait
into
mov
jbe
mov
xchg
popf
push
mov
sbb
loope
stos
les
loopne
mov
sbb
(bad)
ins
mov
shl
leave
fxch
sti
mov
push
jmp
stos
cmps
adc
sub
jle
adc
cmp
push
fadd
mov
mov
out
out
pop
and
fidiv
sub
ins
inc
or
std
dec
test
stos
or
scas
fnstenv
aam
push
pop
xchg
dec
ds
push
inc
mov
jp
mov
add
push
shl
adc
fstp
ficom
sti
jmp
outs
mov
mov
iret
mov
cmp
outs
jge
jbe
mov
add
fbstp
clc
mov
movs
cmp
rol
mov
arpl
in
out
mov
pop
inc
pop
xor
or
gs
xlat
pop
push
test
cwde
sbb
jge
push
or
(bad)
push
retf
ret
int
fldenv
push
add
fisttp
(bad)
jmp
xor
shl
mov
popf
pop
(bad)
enter
xchg
shl
cmps
adc
jge
adc
mov
add
mov
fisub
outs
fs
push
sub
push
fdivr
pop
push
leave
mov
fwait
xchg
add
test
minps
sbb
std
cld
cs
es
es
mov
in
ret
mov
dec
mov
in
retf
es
xor
aas
ja
js
sub
xchg
js
push
cmc
push
inc
not
sub
outs
loop
xchg
enter
aam
or
ja
push
or
pusha
cld
mov
xlat
sub
pop
jl
push
out
dec
test
pop
pop
cmp
fwait
or
cmp
inc
add
jmp
adc
sar
or
mov
scas
data16
jecxz
sbb
adc
sbb
ins
jecxz
lock
push
dec
add
add
lods
das
inc
in
outs
enter
sub
jg
aam
ja
icebp
rol
xor
test
mov
sbb
xchg
(bad)
push
ds
adc
jns
popa
in
loop
call
xor
rol
jmp
sti
inc
jmp
mov
cmp
cmp
jno
xor
mov
fimul
stc
inc
push
sbb
loope
mov
dec
inc
sub
call
jae
std
not
lods
retf
movs
cdq
mov
sub
aaa
cmp
scas
sbb
jmp
xor
bound
xchg
bound
inc
push
jmp
imul
add
int
ds
sub
movaps
loopne
fs
or
mov
sbb
scas
mov
mov
xlat
sub
enter
cli
mov
rcl
jmp
jg
test
addr16
jecxz
mov
mov
sub
xor
or
aas
ja
sub
sahf
jb
jae
stos
fisubr
in
mov
mov
jecxz
or
es
arpl
sti
adc
mov
jo
push
jno
cs
(bad)
push
jecxz
push
(bad)
xchg
out
call
jg
pop
inc
call
cwde
fisttp
rcl
xor
out
push
icebp
in
adc
repnz
push
retf
fld
(bad)
push
int
dec
pop
je
enter
jmp
add
cmp
out
jmp
bound
jno
loope
dec
pop
pop
call
cwde
lods
mov
ror
int3
pop
repz
and
lahf
and
cld
ins
and
retf
mov
ret
mov
std
pop
in
ret
(bad)
fidivr
mov
in
mov
push
add
xchg
cmp
sbb
ror
add
mov
sub
sub
jbe
in
fst
cmpps
cmp
std
(bad)
cmp
pop
out
sbb
hlt
bound
lea
enter
mov
cs
lock
(bad)
(bad)
sbb
cdq
ins
jno
xor
inc
jg
int
or
adc
jo
and
enter
inc
cmps
inc
or
outs
fistp
mov
push
out
mov
dec
fistp
ins
movs
out
mov
scas
fdiv
pusha
adc
push
scas
inc
fimul
mov
std
mov
test
outs
push
leave
popf
jb
xor
sub
mov
push
sbb
inc
sub
cmp
aas
adc
dec
(bad)
fild
or
imul
sbb
and
mov
jge
and
pop
pop
es
movs
mov
jo
cmp
jb
ja
cmps
scas
and
mov
mov
pushf
sahf
fdivr
icebp
pop
out
sub
xor
adc
or
jbe
popf
jne
mov
arpl
pop
pop
sub
xor
cmp
jl
in
cld
and
cmps
enter
sub
pop
mov
rcr
adc
gs
push
add
inc
imul
dec
rcr
mov
pop
xchg
push
mov
(bad)
cld
xchg
xchg
jne
jmp
sti
cld
jg
fbld
ds
scas
lds
xor
lahf
xor
inc
sbb
clc
popa
enter
adc
loop
cmps
fisttp
xchg
fcomp
jecxz
push
pop
imul
mov
cmp
and
jo
(bad)
ja
cmp
scas
inc
adc
popa
jne
stos
cdq
fist
dec
add
ret
adc
xor
aad
inc
add
sub
test
pop
jecxz
jp
addr16
or
push
push
clts
shl
test
mov
dec
fwait
jmp
mov
int3
pop
push
sub
scas
pushf
ins
movs
mov
sbb
jg
push
data16
lods
sbb
and
push
call
ds
fimul
sub
pop
push
(bad)
xchg
pop
push
pop
sub
add
jne
add
xor
cs
lods
push
push
or
out
pop
xchg
pop
or
add
mov
lock
sub
sbb
push
add
lods
mov
mov
xor
out
inc
and
pusha
push
std
lods
in
and
and
mov
mov
xchg
les
test
mov
jb
dec
xlat
(bad)
jle
or
cmp
fsub
push
and
clc
push
in
or
data16
and
mov
pop
xor
dec
loope
sar
adc
js
adc
add
ficom
scas
sbb
jmp
repnz
sbb
repnz
sbb
mov
jecxz
sub
and
gs
push
and
bound
in
add
or
or
dec
xor
adc
mov
test
adc
fs
outs
loopne
cmp
dec
xchg
test
arpl
sbb
in
sub
xchg
rcl
mov
sbb
pop
inc
in
jecxz
pop
cmp
ins
sub
gs
xor
scas
pusha
shr
dec
push
dec
popf
rol
xor
mov
inc
mov
push
push
or
or
mov
dec
xor
loope
(bad)
sub
int3
xchg
xchg
mov
mov
fsub
xlat
aam
dec
movs
jp
mov
cwde
push
or
(bad)
loope
pop
aad
movs
and
in
cmp
xchg
fstp
mov
cmp
cmp
(bad)
out
pop
sub
push
or
pop
in
iret
add
enter
mov
and
loop
mov
and
test
mov
sti
movs
push
ins
inc
shl
pop
jb
adc
in
xor
push
popf
inc
movd
pop
pusha
and
mov
(bad)
repz
jo
dec
outs
fld
push
adc
cmp
dec
loope
fisttp
xor
retf
sub
lds
mov
ja
and
ds
pop
add
inc
mov
imul
adc
rol
cmps
or
mov
imul
jecxz
xor
xor
cmp
xor
es
mov
popw
mov
and
cmp
stos
sbb
pop
adc
je
inc
cwde
xchg
mov
fwait
ret
(bad)
call
and
fucomi
add
(bad)
pop
dec
xchg
outs
mov
in
push
jge
mov
loope
and
lea
rol
mov
xchg
mov
dec
mov
in
mov
retf
pop
mov
test
mov
fisubr
or
call
mov
aam
mov
pop
data16
pushf
movs
int3
adc
jmp
push
rcl
push
ja
pushf
(bad)
cmp
icebp
sar
pop
aas
and
sbb
and
in
jno
cmp
mov
shr
out
loope
push
rcr
fs
sbb
es
cmp
nop
stc
imul
pop
leave
cwde
adc
xlat
ret
xor
add
test
sub
data16
popf
loope
(bad)
ss
add
loopne
ins
adc
imul
je
(bad)
sahf
jmp
mov
stos
pop
sbb
addr16
data16
call
into
pop
pop
inc
inc
lss
xchg
stos
(bad)
enter
mov
pop
mov
in
retf
mov
inc
adc
and
or
adc
mov
sub
shr
loopne
jg
cli
push
shr
shl
(bad)
push
fs
mov
jmp
ins
xchg
pop
repz
lds
cdq
sbb
mov
pop
pop
sti
jge
aam
in
mov
sub
xor
mov
cmp
pop
cmc
and
mov
mov
sub
sti
test
test
aaa
rcl
dec
fstp
mov
sub
xchg
sbb
and
popf
fist
lds
add
cmp
sbb
jne
out
mov
das
aam
dec
dec
cmc
sbb
scas
popf
push
fwait
xchg
aam
jmp
data16
cld
or
in
mov
cwde
push
jb
shl
push
and
dec
scas
add
jg
int
mov
hlt
(bad)
call
jmp
in
mov
adc
inc
les
add
das
jmp
fst
jne
mov
mov
xchg
enter
xchg
jp
pusha
or
cdq
jo
jns
sti
enter
inc
cmp
jne
data16
mov
pop
cdq
jmp
ins
inc
lock
mov
rcr
sahf
lods
mov
xchg
and
cmp
cmp
(bad)
out
inc
mov
stos
out
int
inc
repnz
fbld
arpl
(bad)
loopne
xor
inc
ja
inc
add
push
js
aad
cmp
xchg
add
cwde
scas
lds
stc
in
dec
jg
out
push
xor
cmc
daa
es
adc
xor
inc
in
jmp
es
cld
iret
mov
mov
dec
jmp
and
mov
mov
mov
mov
les
ins
pop
pop
retf
pop
int3
dec
xor
mov
ror
inc
mov
fdiv
(bad)
ror
test
sub
out
cmp
inc
fidivr
or
div
xchg
mov
xchg
arpl
cdq
xor
popa
sti
sbb
xlat
jo
(bad)
cdq
push
shr
push
xchg
mov
xor
out
jmp
jecxz
daa
(bad)
sbb
inc
(bad)
push
stos
or
and
adc
xchg
imul
movs
call
push
mov
cmp
jns
pop
mov
mov
popa
push
in
mov
imul
jle
movs
sub
xchg
push
lods
xchg
inc
xor
xchg
mov
cmps
hlt
jmp
and
cmp
ret
xchg
mov
cmps
cmp
jl
stc
out
cmps
je
cmp
cmp
ins
push
imul
stc
rcl
cmps
push
pop
sahf
mov
pop
cmp
pop
(bad)
bnd
pop
es
xor
mov
imul
mov
ficomp
xor
push
test
inc
sbb
add
inc
jne
xor
cmp
pop
push
test
and
inc
std
ret
cmps
push
push
pop
xchg
sub
stos
scas
arpl
mov
xchg
inc
sub
inc
pop
sar
(bad)
loope
inc
mov
pop
or
mov
xor
dec
add
sti
jnp
mov
and
cs
mov
icebp
jmp
pop
rcl
mov
xor
out
pop
out
mov
popf
pop
xor
sub
out
add
js
xor
mov
cld
and
xor
out
div
mov
and
sub
pusha
add
dec
div
enter
mov
fadd
es
push
mov
sti
xor
daa
int
fidiv
pop
ret
jl
or
pop
cmps
xor
and
arpl
inc
mov
outs
mov
pop
clc
or
sbb
inc
mov
shr
or
jae
test
outs
xor
mov
outs
fldcw
into
call
ss
mov
(bad)
into
movs
loop
cmp
aas
rol
inc
xor
and
fwait
adc
out
inc
or
and
adc
or
(bad)
or
mov
aad
push
mov
ins
nop
sbb
xchg
dec
inc
iret
das
(bad)
cbw
(bad)
pop
ins
jmp
mov
arpl
mov
dec
neg
adc
inc
retf
shl
jbe
daa
pop
jle
repnz
fcomp
push
rol
mov
(bad)
xchg
rol
enter
mov
add
std
mov
pop
js
push
call
pop
xchg
sub
push
data16
mov
push
xor
jmp
in
inc
and
dec
xor
loop
fbld
(bad)
sbb
inc
nop
jle
std
imul
scas
imul
jbe
shr
xchg
xlat
pop
xor
inc
aad
push
mov
push
sub
stc
jnp
outs
ficomp
shr
fpatan
pop
inc
data16
nop
cmp
xchg
pop
cmp
sar
cmp
in
xchg
xchg
jne
mov
push
int3
inc
rcr
cli
das
and
and
and
mov
fild
call
sbb
xchg
pop
xor
dec
sti
and
cmp
mov
mov
sar
pop
out
xor
and
sub
std
pop
stc
adc
out
mov
sbb
fdivr
xor
jmp
dec
pop
fwait
retf
loop
into
stc
ss
aam
inc
inc
push
aam
cmps
dec
cmp
push
add
mov
je
jo
push
ins
dec
mov
pop
push
jle
test
jne
mov
das
ins
das
cli
mov
fs
push
retf
movs
dec
add
arpl
addr16
or
push
cmc
adc
mov
(bad)
or
ins
ror
or
sar
adc
lods
mov
jnp
popf
adc
push
pop
xor
jnp
mov
iret
push
icebp
cmps
pop
sbb
lahf
dec
xor
stos
dec
pusha
jg
mov
mov
sbb
xchg
ds
push
mov
inc
and
sbb
cld
jp
xchg
stc
sbb
ret
cmp
sahf
sub
mov
push
xchg
or
jmp
push
mov
jecxz
clc
push
test
pop
mov
stc
sbb
mov
or
call
scas
paddusb
jmp
lods
cmp
push
and
and
add
xchg
lock
inc
rcl
iret
or
cmps
jmp
imul
out
inc
retf
(bad)
push
retf
xchg
push
mov
les
pusha
bnd
outs
sbb
fcom
bnd
(bad)
in
mov
sbb
and
mov
jle
push
daa
outs
cmp
inc
(bad)
pop
pop
jecxz
outs
clc
pop
(bad)
push
cmp
jno
icebp
bound
and
and
xchg
dec
sub
xor
mov
xchg
icebp
add
xchg
mov
(bad)
movups
push
outs
pop
repnz
mov
(bad)
jecxz
add
daa
mov
fwait
inc
inc
pop
das
rcl
mov
dec
inc
repz
sub
jae
pop
pop
and
leave
dec
cmp
push
adc
push
xor
jno
sbb
lock
mov
cmps
mov
sub
je
push
aaa
add
dec
iret
adc
js
or
loopne
outs
pop
repz
jl
clc
and
in
cld
fild
dec
xchg
mov
xor
inc
call
sbb
adc
int
repnz
fwait
mov
shl
push
jge
cmp
test
mov
push
xor
dec
cmp
mov
jmp
jns
in
daa
call
jne
scas
notrack
fdivp
scas
in
push
sbb
(bad)
rcl
call
inc
das
jl
jb
cmp
cmp
xor
mov
jmp
sub
ret
jns
fst
inc
mov
cs
ficom
aad
sbb
mov
cdq
lock
mov
fistp
jge
cmp
sar
bound
cmp
(bad)
(bad)
stc
aad
das
or
(bad)
cs
jle
data16
cdq
(bad)
dec
ss
inc
xor
pop
shl
xchg
fimul
jge
mov
push
mov
xchg
cmps
jmp
mov
js
sbb
adc
sub
sbb
dec
dec
jmp
loope
lea
cmps
dec
sub
aaa
dec
add
adc
cdq
mov
sub
in
add
hlt
mov
sub
jg
rol
sahf
adc
js
in
mov
ins
div
popa
add
jmp
lds
mov
lock
cmp
xchg
and
retf
iret
cwde
ret
popf
xchg
lahf
std
popa
cmc
mov
add
sbb
aaa
jle
iret
popa
cmps
ins
cdq
imul
call
dec
or
lods
mov
push
aad
call
fwait
cmp
stc
lods
jnp
lock
ret
sbb
mov
sbb
movs
pop
push
es
aam
js
xor
fild
xor
pop
cmps
lods
mov
scas
in
mov
(bad)
push
cmp
mov
xchg
push
mov
inc
(bad)
frstor
ins
into
mov
adc
push
sub
mov
mov
xor
adc
leave
sub
xchg
mov
and
push
icebp
dec
push
sbb
and
(bad)
fisub
pop
inc
inc
movs
fwait
pop
das
call
or
and
sbb
add
lock
add
dec
inc
mov
mov
sbb
mov
push
ins
test
dec
push
test
mov
test
cmps
and
mov
(bad)
je
fs
and
into
es
pop
fadd
sub
xor
clc
add
push
cmp
fdivr
dec
inc
movs
push
mov
jg
test
lahf
and
dec
or
loopne
repz
popf
in
popf
lods
pop
add
(bad)
dec
popf
stc
mov
aad
dec
mov
mov
mov
sub
cmc
jmp
fdivr
repnz
or
push
cmp
mov
cmp
mov
add
xor
js
into
jge
bound
outs
popf
ficomp
out
cmp
adc
ins
cmp
pop
cmp
xchg
mov
push
mov
pcmpgtd
push
xchg
cmp
(bad)
in
xchg
(bad)
jle
or
iret
pop
aas
not
adc
mov
call
jo
imul
pop
jle
inc
lock
jns
aas
or
pop
out
das
sbb
repz
push
and
icebp
or
xchg
cmp
test
scas
popa
adc
sub
sbb
and
jmp
add
lods
(bad)
iret
mov
inc
hlt
xchg
or
or
pop
jmp
add
arpl
push
add
sub
loope
inc
hlt
out
int
(bad)
aaa
call
add
jo
(bad)
ins
in
inc
mov
clc
sub
fidivr
outs
xor
fild
scas
mov
bound
mov
cmps
ins
dec
adc
xchg
pop
sub
addr16
inc
adc
and
aad
data16
push
sar
dec
lods
sub
(bad)
pop
dec
and
pop
jns
sahf
out
rol
call
dec
(bad)
retf
push
pop
std
cmp
imul
push
mov
xchg
aas
mov
xchg
sbb
test
inc
and
cmp
sub
addr16
jb
jne
or
outs
popf
scas
or
adc
daa
sub
push
lods
cmps
into
xchg
(bad)
dec
into
daa
loop
sbb
adc
push
dec
inc
int
jl
pop
ret
xor
inc
ins
sub
or
clc
sub
fs
sar
stos
push
jmp
je
adc
and
fs
js
and
fimul
sub
xchg
sar
out
cmp
pop
movs
dec
inc
inc
pop
push
in
imul
pop
cmp
lahf
ror
jmp
mov
sbb
jl
pop
push
pushf
(bad)
in
cmp
aaa
mov
jl
xchg
mov
xor
cmp
(bad)
pop
ins
mov
add
ret
ins
xchg
sti
daa
xlat
jbe
ins
mov
loope
or
xor
enter
push
mov
mov
mov
mov
pop
inc
fild
inc
outs
xlat
cld
jne
mov
cmp
(bad)
scas
mov
cmp
dec
pop
cmc
or
adc
xor
add
xchg
ja
(bad)
fdiv
int3
ror
and
jg
or
or
je
sbb
add
fstp
push
jp
push
add
adc
jg
fimul
daa
fs
mov
inc
cmc
push
jmp
push
jne
mov
xchg
inc
sub
retf
lods
jge
add
retf
mov
xor
aad
dec
sar
aam
imul
into
cwde
cmp
mov
pop
retf
into
sub
mov
ins
stos
cmp
sbb
jmp
pop
in
xor
fwait
cdq
push
mov
jb
xor
adc
stos
cmp
leave
inc
ins
xchg
repz
dec
xchg
xor
into
adc
adc
sbb
repnz
idiv
mov
push
into
jle
dec
test
movs
in
sub
jg
mov
std
add
test
sbb
dec
movs
fst
mov
inc
in
add
cdq
jecxz
mov
sbb
call
add
outs
mov
(bad)
stc
loopne
push
jb
push
xor
cmp
cmps
in
ds
mov
cmp
jle
shr
and
shl
lock
dec
sbb
test
mov
rcr
dec
pop
(bad)
adc
pop
ret
and
mov
xchg
(bad)
outs
add
fisub
push
dec
enter
leave
pop
gs
ins
add
add
out
scas
cmp
aad
and
cmp
and
mov
jge
aas
repz
push
rcl
mov
mov
movs
fidivr
retf
sub
(bad)
in
jb
stos
shl
push
scas
shl
es
mov
sub
cmps
xchg
pushf
pop
daa
adc
int
(bad)
and
(bad)
in
loop
dec
sub
ins
fcom
into
pop
dec
stc
movs
popa
mov
and
xor
outs
fstp
add
lea
jmp
xchg
jae
and
or
nop
and
pop
rcr
dec
sbb
and
mov
popf
dec
jb
test
stos
inc
lods
call
into
aam
pop
jge
gs
push
push
mov
hlt
bound
(bad)
push
cmp
out
jge
sub
mov
mov
add
nop
mov
pop
dec
pop
jle
pushf
sub
cli
dec
inc
xchg
cmp
pop
jmp
dec
test
and
sbb
inc
(bad)
cmp
jl
jmp
stc
call
push
or
fmul
aas
mov
dec
xchg
int
gs
gs
rcl
and
cli
retf
mov
leave
mov
inc
fldcw
push
ins
rcl
pop
fbld
xor
adc
fmul
mov
pop
xor
mov
mov
dec
outs
lods
jne
lock
dec
in
(bad)
fdiv
clc
pop
adc
mov
and
enter
retf
cld
ret
mov
dec
push
repz
ins
jne
loop
cmc
ins
pop
ds
outs
jno
mov
gs
adc
pop
cli
and
(bad)
lock
cmp
fs
mov
sahf
dec
adc
cs
dec
outs
mov
xchg
xor
dec
push
(bad)
neg
inc
add
cld
push
add
bound
mov
lods
and
daa
push
inc
sbb
and
mov
stos
inc
or
in
pop
xor
sbb
cwde
mov
adc
fdivr
mov
xchg
push
pusha
ja
pusha
inc
add
adc
scas
and
(bad)
lods
loop
xor
cdq
mov
cmp
aam
cld
bound
lock
clc
mov
dec
and
push
or
pop
sub
sbb
or
sub
xor
test
popf
ret
xchg
das
(bad)
loopne
sti
rol
pop
push
mov
xchg
fucom
dec
call
push
sbb
or
xchg
fwait
std
sub
sub
lock
jno
ficom
rcl
jecxz
gs
mov
or
out
dec
dec
pop
hlt
mov
repz
sbb
add
cmp
mov
jns
mov
pop
mov
add
sbb
call
mov
cmp
xor
fcmove
cdq
nop
int3
xchg
hlt
hlt
shr
popf
sbb
jns
fadd
dec
and
mov
mov
popa
push
fucom
into
jno
cmp
jg
enter
inc
push
fdiv
and
adc
cmp
inc
or
mov
lods
cmps
test
and
push
lds
jg
loopne
dec
ins
mov
imul
sar
hlt
mov
inc
into
fld
and
outs
test
push
(bad)
out
ror
iret
cs
mov
je
jae
dec
std
xchg
cmp
stos
and
jno
icebp
cmc
sub
stc
mov
cmp
sub
pop
jnp
jnp
aaa
cmps
xchg
cmp
xchg
cmp
pop
push
lock
movs
mov
sub
or
pop
or
pushf
ins
dec
jbe
xchg
push
xor
fcomp
mov
xlat
push
lea
fdivr
mov
pop
cdq
addr16
and
xchg
fisub
jl
dec
sar
loope
data16
jnp
loop
jne
xchg
retf
pop
fwait
add
fcmovnbe
mov
push
adc
inc
test
add
cmps
add
xlat
mov
cmp
add
push
mov
xlat
pop
cwde
gs
mov
inc
cmc
sbb
add
arpl
cmps
sub
sub
sub
jecxz
xor
push
sbb
mov
xchg
(bad)
cmc
imul
scas
mov
icebp
fwait
std
jnp
pop
ja
jnp
(bad)
je
and
or
inc
pop
enter
dec
sbb
push
adc
adc
fcmovu
xchg
mov
jns
icebp
mov
mov
aad
jbe
je
mov
shl
and
fidiv
pop
mov
mov
test
xchg
dec
jmp
scas
lods
stc
cli
cmp
or
jo
outs
das
push
call
scas
fbld
adc
js
cmp
jo
in
xchg
push
aaa
or
retf
cmp
jns
pop
dec
inc
sub
sub
push
or
sbb
adc
daa
adc
and
or
or
outs
nop
jne
mov
sub
out
mov
test
xor
retf
loop
dec
scas
lea
call
repnz
push
sub
shl
inc
mov
fiadd
hlt
sub
movs
(bad)
mov
jmp
and
mov
pop
xlat
scas
sbb
or
push
add
mov
sbb
movs
push
retf
lock
xor
or
loop
sbb
loop
out
inc
fstp
or
cmp
xchg
and
cmp
dec
mov
outs
xor
fisub
xchg
inc
aaa
pop
nop
mov
adc
pop
sub
fdivr
mov
push
xchg
stos
pop
inc
lods
ret
mov
scas
outs
sub
mov
out
and
adc
inc
pop
repz
ins
mov
in
add
inc
jmp
and
cmps
add
jb
push
sbb
sbb
out
mov
cmp
mov
stc
sbb
movs
fild
hlt
test
fs
stos
add
cmp
mov
test
cmp
sbb
mov
xor
inc
mov
jp
cs
xchg
cmp
gs
jo
and
(bad)
mov
ja
jns
out
sti
movs
push
mov
push
aam
jp
es
push
push
(bad)
cmps
inc
dec
mov
fnstcw
icebp
test
fmulp
xchg
aas
add
hlt
int3
shl
lods
mov
enter
adc
mov
adc
dec
sbb
mov
or
test
xchg
jg
adc
movs
gs
movs
aas
out
sub
adc
mov
xor
dec
rcr
push
pop
mov
dec
mov
xchg
mov
aam
pop
popa
mov
dec
jg
xchg
aaa
rol
dec
fild
add
nop
cdq
cmp
pop
push
cmp
push
inc
sbb
addr16
shl
inc
inc
dec
cmp
mov
jp
call
cmp
jno
and
mov
mov
xchg
inc
pop
ins
and
dec
push
push
mov
adc
push
fidivr
cmp
mov
xor
(bad)
(bad)
retf
xor
ror
jmp
jne
mov
xor
inc
lods
pop
lods
and
cmps
inc
and
pop
pop
or
pop
xor
imul
xchg
cdq
mov
push
mov
pop
add
movs
xor
inc
int
movs
sub
repnz
and
cmp
inc
scas
push
pop
repz
addr16
xchg
pop
dec
or
sbb
test
xchg
xor
cmp
popf
inc
stos
idiv
mov
pop
outs
adc
adc
dec
mov
adc
mov
mov
jo
leave
or
adc
push
cli
xchg
sbb
pandn
dec
mov
pop
mov
in
inc
call
inc
fmul
dec
ror
retf
sub
(bad)
adc
shr
lock
test
fdiv
jmp
ficom
xchg
gs
pop
jae
pusha
popa
bound
inc
xchg
fld
xchg
js
test
stos
xchg
imul
inc
push
sbb
inc
mov
imul
jne
cld
sbb
dec
mov
sbb
push
pop
pop
jne
mov
jmp
jp
scas
mov
pop
les
xlat
xor
add
daa
pushf
push
shl
loope
or
adc
jg
adc
sbb
dec
arpl
inc
popa
repz
sbb
ror
data16
call
je
pop
pop
push
mov
inc
or
jae
cdq
sub
inc
add
(bad)
mov
psubb
mov
mov
repz
(bad)
repnz
gs
mov
ror
call
popf
das
inc
ins
cld
int3
inc
shl
gs
fwait
inc
mov
paddsb
pop
in
sub
ins
fwait
push
imul
xor
jl
icebp
(bad)
sar
ret
sbb
mov
cli
popa
jns
enter
mov
repz
xchg
cld
sub
fcom
ss
jne
ja
hlt
push
int3
fnclex
jp
movs
xor
add
push
add
cmp
mov
xchg
cld
jge
xchg
gs
and
popf
bound
xor
mov
adc
push
shl
mov
bound
cmps
pop
das
jge
adc
or
sahf
push
enter
or
sbb
push
out
call
ret
stos
or
push
mov
xlat
fs
cmp
mov
jmp
idiv
stos
test
jno
sbb
bound
push
fxch
(bad)
cdq
fs
js
mov
pop
or
outs
inc
repz
cmovns
and
and
fild
out
cld
adc
(bad)
fdivr
fisubr
bound
inc
dec
inc
push
sar
jb
jl
pop
fwait
dec
in
push
or
cwde
test
out
jecxz
mov
jecxz
xor
cmp
dec
stos
scas
enter
aad
pop
mov
inc
outs
adc
enter
vmread
mov
jnp
adc
fiadd
in
jmp
sbb
pop
ret
mov
pop
pop
xchg
sbb
adc
mov
or
add
fst
or
fidivr
or
test
add
or
imul
arpl
xor
lea
cmc
xor
adc
jns
rol
pop
pop
cmp
cs
div
ja
loop
(bad)
in
ret
stos
fild
imul
aad
in
mov
test
pop
xchg
test
cmp
jbe
out
xchg
ja
lods
xchg
or
idiv
ja
fidiv
lods
adc
out
sub
lea
ja
inc
push
mov
loop
ficomp
mov
popfw
mov
fprem1
shl
in
dec
and
loope
xchg
xchg
pop
add
xchg
cli
cmp
shl
sbb
into
mov
in
mov
cmp
sub
push
mov
inc
cs
sub
data16
out
sqrtps
push
xlat
into
mov
pop
xor
jo
ins
sub
addr16
aam
or
icebp
hlt
cmp
push
mov
xor
mov
sbb
test
ins
push
xchg
das
adc
mov
aaa
sbb
dec
add
addr16
push
ja
fstp
or
push
into
loope
inc
inc
in
push
and
pop
icebp
adc
stc
sub
aad
inc
sti
dec
push
rol
push
lds
mov
push
cmp
ret
adc
sub
inc
mov
push
pop
gs
test
in
lods
and
lods
ret
mov
sub
adc
jge
cmp
in
pushf
and
adc
mov
or
pop
xor
jne
sbb
mov
xchg
jmp
sti
int
or
jb
mov
int3
dec
fucomi
push
into
ja
sub
repz
dec
inc
imul
fidiv
test
out
mov
dec
lods
xor
daa
mov
mov
push
add
xor
xchg
sub
shr
rcl
movs
fnstsw
enter
sbb
icebp
cmp
jb
dec
fldenv
sub
dec
rcl
retf
pusha
pop
mov
jecxz
popf
adc
retf
mov
pop
int3
inc
adc
xor
sbb
leave
popf
mov
fidivr
mov
mov
mov
xor
pop
sub
int3
ins
adc
xchg
lods
push
mov
mov
out
jnp
loope
lds
sbb
xchg
out
dec
jb
inc
pop
xchg
cmc
out
jge
sbb
cmp
fsubr
retf
pusha
sbb
in
test
fs
mov
pop
ret
mov
sub
iret
sub
pusha
(bad)
shl
adc
movs
sub
pusha
push
jnp
in
sar
into
es
adc
scas
loopne
and
xor
jle
and
(bad)
fdiv
jl
aaa
retf
jno
clc
sub
sub
pop
aaa
shl
(bad)
idiv
test
or
xchg
das
ss
test
sahf
pop
test
push
fimul
cmp
hlt
aad
mov
dec
mov
add
push
jecxz
call
icebp
xchg
ins
lods
mov
adc
sbb
inc
scas
jp
and
js
out
imul
sbb
push
pusha
shl
and
ins
add
jnp
push
iret
rcr
adc
repnz
movs
imul
xor
fisub
hlt
or
adc
or
loopne
xor
jecxz
push
adc
mov
inc
rcr
cmp
push
jne
xchg
data16
cmp
(bad)
mov
aad
xor
sahf
mov
cmc
jo
call
popf
imul
add
sub
in
inc
pop
mov
stos
das
push
sbb
jecxz
cmps
fbld
inc
cmc
out
pop
leave
cs
(bad)
je
adc
and
dec
xor
sbb
jmp
sbb
jno
sub
dec
add
mov
popa
ins
add
stos
mov
pop
xor
sahf
mov
(bad)
jp
cmp
xlat
out
sbb
loope
xchg
and
loop
sub
jmp
je
ret
nop
xchg
ret
inc
jl
inc
pop
and
rcl
inc
sbb
and
hlt
push
push
aam
add
pop
pusha
pop
stos
in
mov
jl
scas
cmp
shl
js
xchg
cdq
pop
mov
psllq
fnstenv
adc
push
or
cs
dec
dec
mov
call
cmp
xlat
cmp
lahf
cdq
div
add
(bad)
mov
push
pop
mov
fwait
adc
std
pop
dec
mov
cs
test
dec
lods
sub
lods
mov
pop
fidivr
pop
sbb
int3
daa
cmp
fisttp
and
add
adc
int
mov
(bad)
jmp
adc
dec
or
fmul
mov
outs
mov
test
inc
gs
loope
imul
mov
fwait
dec
adc
(bad)
aaa
daa
and
es
sub
sub
das
lods
inc
pop
bound
pop
dec
les
std
xchg
loope
movs
stos
out
retf
inc
mov
ins
(bad)
push
mov
cwde
out
aad
test
imul
dec
inc
stc
mov
push
loope
int
sub
adc
into
jae
ins
call
loopne
(bad)
out
jb
push
ja
cmp
imul
cmp
pop
push
imul
push
addr16
ss
add
xchg
xor
dec
and
cs
adc
mov
or
shr
inc
div
adc
lds
and
lock
inc
ret
rol
inc
and
call
fdiv
push
(bad)
out
mov
add
div
in
in
int3
jb
ins
pop
pop
sbb
push
(bad)
mov
or
mov
sti
ja
cmp
push
jnp
jg
dec
data16
loopne
dec
dec
ds
xlat
inc
sti
xchg
sbb
icebp
mov
ror
inc
test
(bad)
push
add
mov
in
std
adc
outs
jmp
and
sub
dec
cdq
iret
cs
jge
cmc
loope
shr
jmp
in
inc
sub
fsub
xor
mov
cs
lds
fstp
push
out
popaw
imul
mov
push
das
xchg
sbb
rcr
inc
ret
jecxz
mov
cmp
mov
movs
mov
pop
jo
ins
aam
rcl
cdq
ret
pop
icebp
loop
sbb
jl
dec
or
cmp
adc
xor
cmp
cdq
xor
mov
cmps
pop
sar
pop
cld
shr
sub
mov
mov
xor
lods
ror
out
cdq
out
pop
inc
(bad)
stc
call
xor
push
and
mov
cs
cmp
outs
cmp
jle
mov
out
or
aad
push
sahf
cmc
mov
dec
or
gs
jmp
fild
dec
(bad)
ins
jbe
cmp
fist
ret
adc
or
cmp
shr
push
js
(bad)
icebp
pusha
mov
stos
push
cwde
int3
dec
jecxz
cmp
cmp
popf
sbb
adc
mov
xchg
leave
or
push
fsub
aam
out
jmp
pop
mov
mov
push
pop
push
mov
jp
sub
vmovsldup
(bad)
mov
pop
and
or
mov
pop
out
fldl2e
mov
jo
repz
xchg
dec
cdq
call
inc
xchg
ret
enter
mov
mov
clc
sbb
inc
inc
pop
jmp
jl
stos
adc
dec
jmp
mov
push
rcr
fistp
mov
les
and
jno
clc
mov
cdq
enter
adc
repz
dec
add
shl
stc
pmaxub
inc
jae
fmul
xchg
jp
sar
ror
add
fs
sbb
sbb
sbb
jecxz
fdiv
sar
add
fwait
xor
hlt
(bad)
addr16
cmc
iret
fdivr
mov
shl
cmps
aad
jbe
cmp
xor
test
fldcw
xor
dec
mov
outs
cmc
and
inc
movs
jnp
and
fsub
cmp
mov
je
xor
cmc
cmp
cmp
rol
pop
and
inc
add
popf
shl
mov
imul
cmp
popa
test
adc
popf
inc
add
mov
stc
stc
or
ret
and
dec
push
and
cdq
add
scas
mov
adc
jmp
loop
fs
xchg
cli
out
call
rcr
(bad)
dec
inc
inc
mov
gs
jns
pop
dec
loop
sbb
test
leave
cdq
rol
pop
xchg
dec
cmp
mov
jo
(bad)
jne
imul
push
out
out
arpl
xchg
xlat
and
mov
mov
cmp
jg
je
jns
push
div
je
lods
imul
add
cmp
or
dec
lock
int
push
dec
movs
fidivr
loopne
call
or
mov
out
nop
and
into
fist
mov
mov
push
ins
xor
data16
popf
jbe
and
rol
cdq
adc
adc
push
pushf
mov
(bad)
xchg
mov
es
fdiv
fisub
ins
mov
popf
or
test
sub
mov
push
pusha
adc
mov
into
mov
out
scas
add
xchg
add
dec
fidiv
mov
adc
or
sub
xchg
mov
jmp
mov
fcmovb
add
(bad)
call
xchg
mov
popf
cmp
mov
xchg
mov
sub
push
jl
sbb
jmp
push
rcr
jnp
fisub
push
fadd
sbb
fs
xor
jmp
cmp
lods
inc
mov
ds
xchg
in
out
icebp
fld
sbb
and
stos
push
idiv
mov
push
cmp
sub
pop
fcomi
jle
adc
call
lods
das
(bad)
repz
stc
cwde
add
xor
xchg
add
addr16
jl
sbb
movs
fiadd
or
je
cmp
int
stc
mov
mov
test
lahf
icebp
and
dec
fcmovnbe
lock
or
sti
xor
retf
cmp
ins
fsubr
movs
sbb
(bad)
sub
sub
mov
ret
sub
inc
push
cmp
push
cli
in
(bad)
jo
xor
daa
sub
xchg
mov
dec
jo
repz
mov
pop
int
or
xor
imul
cmp
fist
mov
mov
popa
pop
jl
enter
pop
or
sti
cmp
jnp
mov
add
cmp
sbb
lods
jns
xor
push
sub
test
or
pop
xchg
test
adc
add
sbb
(bad)
movs
xchg
cdq
push
jmp
fld
sti
xor
ja
ja
retf
cwde
jo
cmp
retf
loop
xchg
mov
and
xchg
dec
push
std
or
mov
inc
(bad)
xor
loopne
in
outs
ins
loopne
push
int
xor
cmp
push
out
cwde
and
xchg
fnstcw
fnstsw
out
repz
pop
push
daa
and
xchg
leave
shl
dec
rol
dec
and
add
xor
cdq
dec
lea
pop
mov
and
xlat
cmp
fdiv
push
test
(bad)
ds
jl
push
xchg
cld
repz
ins
cmp
jne
mov
in
push
mov
ins
mov
mov
adc
int
inc
pop
scas
nop
mov
dec
push
and
in
xchg
push
ins
in
leave
push
add
cmp
or
and
cdq
repnz
test
mov
nop
out
xchg
sub
and
mov
xor
xchg
add
pop
pushf
ret
cdq
push
dec
inc
adc
in
rcl
outs
sbb
popa
adc
mov
jge
and
ss
inc
adc
outs
lock
pop
cli
mov
cmc
sbb
das
rcr
mov
fnstenv
or
mov
push
shr
dec
cdq
aas
ins
push
cmps
xor
rol
mov
leave
imul
sete
pushf
loopne
mov
pusha
or
stos
push
sub
push
xor
add
lahf
inc
push
pusha
sbb
repz
pop
cdq
repnz
inc
mov
enter
icebp
fmul
mov
mov
outs
mov
fisubr
xchg
push
pop
push
js
fnstcw
(bad)
out
xor
xlat
lock
out
aaa
fmul
push
adc
ds
pop
pop
xchg
inc
push
fs
pop
nop
mov
xchg
xor
out
imul
fsub
mov
or
inc
fwait
sti
xor
aam
aam
push
cmc
xchg
sbb
shr
jmp
xor
lods
mov
loope
hlt
hlt
inc
fwait
stc
sbb
xchg
lahf
mov
mov
mov
push
jmp
mov
out
dec
xor
imul
sbb
and
dec
cmp
popa
dec
mov
mov
stc
arpl
push
push
sub
gs
es
test
pop
jnp
xchg
outs
pop
sbb
lea
cmp
ss
jp
outs
out
add
sbb
je
std
xchg
push
xor
daa
and
pop
push
jmp
out
mov
je
test
push
repz
jp
mov
xlat
jg
loopne
and
jae
pop
push
cmps
jmp
jne
and
mov
jg
xchg
pusha
push
les
ds
arpl
push
lea
les
push
stc
push
jmp
xlat
xchg
pop
cli
push
dec
mov
jle
or
retf
pop
pop
ja
jne
push
jmp
jnp
mov
ret
mov
test
in
mov
mov
or
sahf
jle
mov
in
dec
inc
cmp
or
sbb
(bad)
xchg
ss
cmp
adc
jg
xor
imul
sbb
inc
cmp
loop
pop
pop
dec
cmp
aaa
fld
xor
aas
mov
push
mov
js
adc
and
pop
cld
push
(bad)
(bad)
enter
pushf
mov
mov
daa
xchg
test
in
pop
mov
outs
mov
inc
outs
call
ja
sub
jbe
or
pop
es
pop
daa
loopne
or
pop
clc
mov
add
push
mov
mov
fimul
std
adc
test
cmp
jecxz
adc
mov
and
lea
test
ins
xor
stos
(bad)
pop
test
xchg
mov
ficom
mov
outs
fisub
cli
enter
(bad)
iret
jno
movs
scas
(bad)
idiv
pop
mov
push
mov
dec
pop
add
arpl
outs
sub
mov
and
sub
stos
adc
xor
dec
fsubp
loopne
sub
clc
jecxz
push
aaa
xchg
xchg
inc
das
retf
xor
jl
call
lods
hlt
add
aaa
xchg
repz
push
adc
xor
push
adc
xor
cmps
and
sub
arpl
xor
jle
or
call
je
mov
push
xor
sub
shl
adc
sub
xchg
pop
sbb
test
test
fidiv
jb
jl
pusha
dec
aad
mov
imul
sbb
cdq
sub
loope
and
(bad)
cmps
cmp
cmc
stos
test
frstor
movs
pop
mov
iret
(bad)
inc
cdq
imul
inc
sbb
jno
or
xchg
xor
je
sbb
fcmovb
fisubr
and
in
push
out
pop
dec
mov
ss
in
iret
jb
cmp
and
ja
lds
les
sub
jmp
jae
pop
fild
rol
retf
outs
mov
xor
mov
fcom
mov
jmp
push
cmp
sahf
cmp
sbb
mov
sbb
shl
jecxz
cmp
cmp
cmp
xchg
xchg
loopne
and
imul
lock
mov
ret
add
and
and
and
call
cli
mov
sub
pusha
jmp
(bad)
cmp
or
xchg
sbb
movs
mov
mov
int
into
lea
cmp
xchg
sahf
sub
punpcklwd
ficomp
jns
jp
or
sub
xor
inc
stos
inc
repnz
fbstp
maskmovq
neg
adc
xor
in
adc
out
inc
data16
aaa
and
cmp
sbb
cs
jae
loopne
sub
sbb
fstp
dec
outs
fwait
loope
pop
in
fnsave
loopne
scas
outs
das
jmp
loopne
std
(bad)
push
imul
sbb
mov
jb
push
ja
in
cmc
jae
mov
data16
jnp
cmp
js
cmc
xchg
push
xor
sbb
pushf
mul
(bad)
sbb
add
push
popf
inc
dec
lods
ret
xchg
(bad)
mov
adc
mov
cmc
stos
arpl
add
fwait
pop
(bad)
movs
cmp
cmp
mov
sbb
and
aas
dec
loopne
add
mov
push
mov
lea
call
push
mov
ds
clc
les
out
ins
movzx
cmp
lea
iret
mov
push
add
(bad)
mov
jp
sti
dec
repnz
jno
cli
in
push
outs
fisubr
pop
xor
hlt
cmp
cmp
ins
ins
popa
add
je
bound
sub
aad
rcr
or
not
push
push
dec
fbld
movs
xchg
cdq
repz
ins
shr
(bad)
cli
xor
and
js
mov
sub
outs
mov
mov
sub
sbb
push
inc
jbe
iret
repz
or
mov
fwait
dec
jae
pop
dec
jmp
mov
xor
call
retf
adc
sbb
or
rcl
int3
xchg
mov
mov
addr16
out
arpl
cmp
(bad)
fbld
mov
jge
sub
cmp
jg
pop
xor
jns
ror
lods
mov
shl
lods
shl
xor
nop
icebp
inc
jae
sub
jbe
es
xchg
adc
add
loop
(bad)
push
xlat
lock
inc
jae
ds
dec
ds
push
xor
mov
jp
pop
(bad)
dec
sbb
test
sbb
(bad)
or
das
inc
sar
xchg
cld
or
fistp
jmp
pop
xor
shl
push
pop
push
div
stc
in
adc
mov
inc
mov
add
sar
in
jo
cmp
mov
hlt
add
test
movs
push
ja
aas
xchg
jo
or
xchg
sub
and
pusha
mov
(bad)
scas
mov
hlt
xchg
ficomp
xor
mov
adc
xor
and
stos
test
out
mov
sub
je
dec
inc
repz
sbb
aam
adc
adc
outs
repnz
jg
xor
sbb
pop
mov
fdiv
pop
and
push
xchg
xchg
adc
inc
pop
xchg
adc
aam
ret
mov
pop
outs
stc
inc
mov
stos
push
or
popf
xor
in
fsubrp
int
push
add
sti
(bad)
inc
dec
rol
cmp
cmp
and
ins
addr16
mov
and
dec
fsub
and
jne
rcl
test
out
cmps
xchg
out
pop
call
or
pusha
inc
cmp
scas
fwait
inc
rol
inc
inc
cmp
lds
out
jno
jp
cld
ret
push
xlat
cmp
adc
xchg
(bad)
(bad)
cs
mul
push
push
jle
sahf
pusha
sub
or
jne
in
push
adc
sub
push
cmp
sub
sbb
cli
jecxz
and
lea
outs
xchg
addr16
ret
mov
fcomp
aad
pop
and
adc
add
test
mov
and
mov
mov
add
cmp
pop
inc
push
test
outs
sar
sub
mov
push
ret
sub
imul
cwde
les
ins
adc
sbb
mov
shl
shl
sbb
ss
fisubr
mov
test
lods
into
pop
add
fcom
div
movs
test
or
xchg
repnz
pop
test
cdq
push
sahf
and
(bad)
sbb
pop
mov
dec
xchg
pushf
and
test
test
fcomp
les
sub
out
dec
daa
sbb
xchg
(bad)
test
repnz
add
or
pushf
xchg
scas
lock
push
retf
inc
fmul
movs
jmp
jb
leave
outs
mov
popa
popa
stc
in
add
xchg
or
sbb
mov
sbb
movs
xchg
inc
sbb
push
fnstsw
inc
dec
cdq
or
xchg
pop
inc
loopne
pop
ins
inc
add
out
sbb
sbb
push
add
jno
add
loopne
fimul
sub
loope
sbb
aas
xchg
sar
das
mov
jno
jp
lods
loope
pop
hlt
in
ins
mov
push
and
or
jae
xchg
dec
stc
add
lahf
mov
sub
or
or
jmp
loop
adc
add
ss
outs
(bad)
add
inc
push
sbb
xchg
xor
sbb
aas
repnz
rcr
mov
dec
enter
xlat
pop
mov
pusha
ss
out
outs
jmp
ins
jp
scas
fild
bnd
push
sbb
jl
pop
mov
es
(bad)
enter
xchg
pop
int
aas
lods
push
cwde
pop
outs
jmp
sub
int3
aad
jbe
push
fwait
jg
dec
lahf
mov
pop
jp
add
test
and
mov
or
adc
add
add
daa
jbe
out
cwde
mov
dec
jmp
mov
add
pop
inc
cmps
in
pop
rcl
lods
in
sti
adc
repnz
jmp
cmp
cmp
cmp
dec
inc
mov
loope
pop
inc
arpl
jne
call
mov
test
sub
push
fadd
xchg
xchg
mov
in
ds
push
cmp
dec
sti
hlt
movs
mov
mov
push
mov
fldenv
xor
ins
aad
jl
inc
mov
dec
stos
xor
inc
push
test
mov
nop
outs
cmp
ret
sbb
test
mov
call
pop
(bad)
sti
pop
push
pop
clc
pop
mov
jno
inc
popf
sbb
stos
and
icebp
push
shl
mov
dec
or
pop
stos
pop
cmps
mov
mov
jle
mov
mov
outs
mov
out
mov
dec
fdivrp
sub
test
mov
mov
aas
test
jge
jo
sub
cwde
in
pop
adc
mov
stc
pop
or
mov
loop
cs
dec
or
xchg
cdq
sbb
daa
ins
sbb
push
loopne
xor
xchg
jno
out
sahf
mov
js
out
out
mov
addr16
(bad)
out
cwde
jmp
stos
mov
stos
xor
inc
push
mov
mov
mov
xchg
adc
loope
xor
mov
xor
inc
cmp
stos
cld
std
scas
push
xchg
fcmovb
fs
fsubp
sub
cmp
push
lds
pop
jbe
jmp
sub
std
dec
inc
jnp
jp
clc
adc
imul
stos
(bad)
mov
imul
in
pop
pushf
xor
sbb
push
scas
mov
pop
pop
retf
hlt
push
enter
push
pop
jno
cmp
jp
mov
fist
fcomp
add
iret
push
call
fsubr
sbb
add
push
ficom
(bad)
push
mov
loope
pop
call
(bad)
rcr
and
pop
retf
mov
jno
in
addr16
push
adc
inc
pop
pop
lea
add
dec
sbb
ds
inc
and
lea
mov
out
cmp
mov
mov
jmp
setb
sbb
add
jmp
outs
fmulp
dec
mov
mov
loop
jge
cli
cmp
ret
jp
push
sbb
mov
fcmove
cmp
sub
nop
and
mov
rcr
xchg
jecxz
movs
movs
daa
push
inc
inc
cwde
loope
lods
push
cdq
xor
push
movs
mov
pop
mov
or
dec
mov
bound
jno
ins
inc
push
hlt
out
ss
mov
dec
push
xor
aad
pushf
out
mov
push
stc
and
fsubr
daa
ds
aam
mov
fsubr
mov
(bad)
jbe
jg
repnz
or
jmp
mov
arpl
xor
or
jmp
adc
fs
dec
sbb
mov
and
xchg
cmps
lds
mov
adc
cmp
out
cmps
outs
mov
xchg
out
movs
jmp
mov
mov
dec
(bad)
fldenv
leave
add
mov
dec
mov
fisttp
mov
das
xor
mov
rol
and
push
push
dec
daa
jne
fcomi
jecxz
out
sub
jge
fnstenv
leave
jle
movs
(bad)
cmps
into
jecxz
jle
xchg
dec
jb
xor
dec
call
push
adc
inc
into
stc
jnp
sub
jecxz
mov
imul
stc
pop
jo
(bad)
pop
push
test
sbb
loop
cmp
add
or
cmp
jne
xchg
mov
out
inc
lods
jge
fst
mov
adc
inc
pop
mov
movs
into
popa
fdivr
test
xor
sub
jle
and
pushf
adc
push
hlt
xor
data16
scas
xchg
or
inc
inc
add
ja
retf
movs
add
rcl
sahf
xchg
or
inc
lods
mov
xchg
xchg
xchg
in
xor
pop
adc
cmps
cmps
sbb
ins
js
sub
pop
in
fs
aaa
xchg
dec
or
cli
jae
cmp
retf
inc
imul
mov
jno
sub
push
and
in
test
inc
enter
int3
dec
sbb
stc
push
fistp
test
rcl
and
sbb
in
lock
imul
bound
fcmovbe
lahf
add
nop
xor
shl
pop
sub
jp
out
in
pop
pop
movs
mov
and
call
(bad)
popa
xchg
fild
or
movs
outs
jge
cmps
adc
and
inc
mov
inc
mov
pop
jnp
not
bound
outs
and
pop
cwde
jbe
inc
jo
add
popfw
cmps
clc
sub
or
inc
hlt
sub
pop
mov
cmp
push
cwde
cwde
xor
fbld
mov
push
es
sahf
repnz
mov
out
into
ja
(bad)
in
call
aad
imul
cmp
mov
shl
push
or
outs
jmp
aas
sub
xchg
push
sti
mov
xchg
mov
or
xchg
call
sub
cwde
ins
jmp
outs
dec
out
aam
xlat
adc
adc
sub
or
add
daa
mov
mov
xchg
jnp
sti
push
sub
in
stos
sti
or
push
ja
fs
add
inc
mov
in
call
dec
imul
out
mov
add
bound
inc
nop
ror
pop
or
sub
inc
add
setg
sahf
test
rcr
push
retf
pusha
mov
repnz
dec
fcom
test
stos
adc
stos
push
dec
adc
pop
std
push
iret
cmp
ja
xor
ror
dec
pushf
cmp
pop
push
cmp
mov
ds
push
or
xchg
dec
cmps
add
pop
mov
int3
cmp
sub
(bad)
ds
fwait
call
scas
and
xchg
movs
xchg
inc
jne
and
in
je
sub
(bad)
in
cmp
xlat
jmp
mov
inc
cmp
cmp
into
(bad)
(bad)
cmp
cld
data16
sbb
xchg
push
leave
sti
add
test
pop
sub
dec
loop
mov
scas
and
shr
repnz
xchg
and
and
dec
cli
cmp
or
test
or
sub
push
shl
enter
lahf
ret
cwde
rcl
sub
pop
iret
pusha
es
add
xchg
inc
ss
repz
dec
mov
mov
add
pusha
retf
(bad)
sbb
lock
or
mov
(bad)
(bad)
scas
mov
push
lahf
xchg
push
daa
(bad)
push
xchg
pop
iret
mov
test
add
mov
pop
hlt
add
sbb
pop
popf
sub
jae
dec
xor
inc
scas
fnsave
pop
mov
popf
(bad)
pop
mov
cmp
cmp
add
push
sbb
and
rcl
mov
repz
js
cmp
push
(bad)
xchg
pop
icebp
mov
cwde
ret
fcmovnb
pop
dec
xor
cdq
push
arpl
dec
adc
xor
mov
adc
sbb
push
shl
pop
sub
popf
jp
adc
push
sub
mov
test
cli
imul
addr16
fcomp
sub
jp
iret
sbb
inc
jnp
out
stos
(bad)
test
push
ret
pop
push
movs
xchg
mov
sar
mov
scas
fistp
addr16
mov
add
stos
xchg
pushf
(bad)
sbb
pop
or
pop
gs
in
mov
lods
cmps
inc
cmp
shl
je
mov
pushf
and
test
test
(bad)
rcl
pop
div
aam
stos
fmul
mov
loope
cmps
or
mov
out
aaa
jmp
add
inc
add
add
mov
pusha
ret
add
sahf
sub
pop
xor
jmp
cmp
fadd
sbb
and
and
jg
lds
push
js
stc
push
daa
sub
fs
fstp
mov
push
das
stos
stos
mov
je
imul
fisttp
push
dec
or
add
push
lock
pop
pop
iret
out
add
iret
mov
test
in
(bad)
push
mov
cwde
cli
lods
movs
pop
call
shr
ror
dec
std
mov
cmc
sub
pop
dec
fmulp
xchg
jl
xchg
xchg
out
into
inc
sub
push
mov
push
cmps
mov
mov
push
jae
out
scas
sbb
ins
sub
into
add
and
stos
(bad)
(bad)
stc
sub
add
not
repnz
in
loopne
cmp
pop
shl
sbb
inc
div
sbb
out
xchg
js
cdq
xchg
or
pushf
cdq
dec
in
lock
inc
inc
ins
jp
push
je
es
out
pop
pop
push
sbb
mov
test
stos
jp
inc
mov
addr16
pusha
inc
fisttp
jnp
je
sub
xchg
fucom
call
in
cmp
adc
jnp
and
loop
(bad)
fsubr
dec
xchg
xor
sub
in
sbb
adc
push
not
sub
stos
xchg
push
popf
and
sahf
iret
mov
lock
int
loope
cmps
fstp
gs
imul
fwait
add
aad
sbb
push
aas
jnp
stos
inc
sub
lock
movs
push
dec
mov
out
xor
mov
jno
adc
or
sahf
inc
ret
ja
test
pop
test
js
pop
sub
inc
test
(bad)
adc
cmps
xor
arpl
jmp
imul
mov
xchg
cmp
sbb
retf
fidiv
jo
aad
and
pop
call
sbb
lods
repnz
sbb
cmp
push
sbb
jns
mov
sbb
mul
js
jmp
xor
mov
push
sub
pop
test
mov
pop
mov
mov
jecxz
(bad)
loope
mov
fwait
mov
mov
(bad)
cmc
call
and
fmul
test
sbb
jnp
pop
pop
sti
pushf
pop
xchg
scas
adc
cmp
mov
ja
adc
jne
loop
rcl
dec
dec
int
dec
ror
adc
mov
lods
add
in
stos
mov
int3
dec
mov
inc
xor
fwait
aas
cmp
aaa
not
adc
(bad)
rcl
jmp
(bad)
mov
and
shr
jp
stos
push
ror
pop
sub
or
fstp
xchg
jp
and
lea
fs
sub
xchg
jb
rol
jl
cmps
icebp
shr
lock
in
out
in
cmps
jmp
jle
out
das
adc
mov
jbe
dec
sub
cdq
cmc
mov
js
xchg
stos
cdq
jle
out
in
cdq
loope
jo
xchg
int
inc
in
push
test
test
jecxz
mov
call
or
cli
add
(bad)
and
(bad)
bnd
clc
cmps
push
sub
cmp
or
test
lods
bswap
les
xchg
scas
inc
repz
pop
adc
fcomp
mov
and
popa
ror
push
push
mov
(bad)
push
inc
lea
gs
push
push
pushf
test
les
jae
inc
fcmove
pop
cmp
rcr
out
jge
jns
or
mov
aaa
popa
sar
xor
and
and
sub
push
push
mov
mov
or
mov
cwde
push
mov
out
sub
mul
ficom
iret
in
sbb
push
xchg
cli
cdq
jge
cmp
push
fcomip
lock
ins
xchg
mov
mov
stc
out
es
test
je
ss
arpl
stos
pop
xchg
sub
push
inc
shl
cmc
movs
hlt
sbb
clc
push
and
push
js
es
fwait
lods
test
pop
sbb
adc
outs
push
cmp
mov
fisub
mov
xchg
pop
xchg
pop
into
jbe
adc
inc
nop
shl
popa
sub
add
push
inc
cmps
jmp
bound
xor
sbb
xchg
loop
xor
mov
or
inc
xchg
clc
sub
xchg
cmps
ja
mov
mov
adc
inc
pop
or
icebp
pop
pop
push
xor
pop
(bad)
rcl
(bad)
gs
jecxz
pop
lock
dec
inc
sbb
xlat
ins
ret
cld
clc
sub
pusha
ror
push
repz
sahf
sub
push
test
sub
sbb
fbstp
mov
imul
or
inc
push
pop
into
scas
(bad)
call
add
jae
fisttp
sbb
sub
in
jg
sub
pop
imul
movs
shl
sbb
adc
fistp
ret
mov
mov
sbb
inc
cmc
push
lds
aad
jb
shr
push
mov
xchg
sbb
xchg
js
jge
hlt
xchg
pop
xchg
dec
jbe
out
push
in
dec
sar
sar
and
loop
jns
aad
inc
hlt
ret
(bad)
arpl
sub
push
sbb
sub
pop
mov
or
mov
or
imul
lahf
pop
cs
or
pop
jp
adc
lock
leave
dec
add
sub
sub
int3
xor
add
int
mov
push
and
in
fs
and
add
xor
aad
push
pop
cmps
dec
(bad)
arpl
xor
les
lahf
mov
ins
jbe
inc
nop
mov
pop
dec
and
lock
push
retf
lods
jo
mov
test
jo
popf
mov
xchg
cmp
and
popf
sbb
cmp
adc
fidiv
or
inc
(bad)
leave
clc
popf
sbb
mov
push
outs
mov
jg
adc
(bad)
xor
popf
fs
(bad)
retf
sar
mov
pop
pop
out
dec
inc
mov
push
fild
repz
or
daa
xor
push
jo
jae
push
sub
ror
lds
nop
movs
dec
push
repnz
xchg
mov
ja
jp
das
ficomp
neg
rcr
jge
jbe
sub
fcom
sar
cmp
aam
xor
push
inc
mov
jae
pop
xchg
push
dec
pop
repnz
inc
mov
push
repnz
icebp
out
sbb
jmp
push
cmp
mov
scas
adc
push
pop
xchg
pop
enter
pop
adc
sbb
push
mov
es
mov
xor
shl
mov
dec
loop
in
dec
cmps
cmp
repnz
jl
add
and
sbb
pop
add
pop
into
fistp
scas
imul
movs
pop
adc
push
ss
jae
xchg
sbb
in
out
push
repz
js
adc
sbb
pusha
sub
pop
in
jge
neg
imul
push
sti
mov
mov
cmc
out
test
je
ret
inc
push
pop
rcl
adc
jmp
mov
jo
cdq
retf
ins
cmp
sub
loop
inc
jae
mov
cmc
fisttp
jle
mov
fstp
cmp
je
stc
jne
and
xchg
stc
mov
add
mov
retf
sti
mov
test
mov
ja
pushf
add
das
xor
push
adc
add
mov
test
push
push
retf
int3
aas
mov
add
mov
leave
stos
into
rol
push
xlat
or
mov
mov
sahf
sbb
cmc
xchg
inc
mov
aam
sbb
or
mov
inc
addr16
hlt
packsswb
adc
pop
aam
enter
xor
dec
popa
xchg
outs
mov
scas
mov
mov
cmp
mov
fwait
sti
cmp
cwde
sbb
arpl
lock
mov
dec
fbld
cmc
mov
mov
xor
sbb
push
sub
pop
sub
in
sbb
test
les
rcl
test
jl
xor
mov
test
push
xchg
jecxz
cdq
sbb
std
push
pop
imul
stos
cdq
xchg
pushf
pop
mov
jle
out
test
adc
test
cwde
pusha
inc
pusha
push
not
adc
jp
xlat
push
fs
retf
or
movs
mov
and
inc
cmp
inc
cmp
rol
vcvtsi2sd
or
loop
jl
gs
push
xor
clc
inc
mov
jo
push
dec
test
mov
dec
pusha
mov
xchg
paddw
call
xchg
pop
or
inc
je
scas
rcl
mov
cmp
inc
or
and
jmp
popa
ffree
leave
adc
push
cmp
push
test
dec
jl
(bad)
icebp
jmp
mov
add
push
out
jne
imul
clc
fdivr
push
cmp
xlat
pop
xor
xchg
cmp
mov
stc
xor
and
xor
leave
in
dec
ret
frstor
sar
ins
add
scas
dec
dec
xor
pop
push
mov
(bad)
pop
pop
ret
add
daa
dec
pop
pop
test
dec
sti
push
and
or
and
shl
ud0
mov
loop
fwait
cdq
outs
or
fcmovbe
ja
sahf
or
aaa
sbb
add
dec
retf
push
fmul
lea
pushf
dec
sti
into
cmp
sbb
call
jecxz
mov
(bad)
pop
test
fcmovnbe
aam
pusha
inc
cmp
out
in
jno
and
mov
les
pop
adc
mov
pushf
jge
sbb
in
cmp
adc
jg
and
mov
test
(bad)
push
scas
xchg
xor
jns
scas
(bad)
push
nop
(bad)
in
ja
mov
mov
mov
or
cmp
push
or
add
adc
xchg
inc
or
inc
ins
xor
jecxz
xor
ds
cli
mov
jns
jbe
leave
xor
xchg
jle
sub
push
cmp
adc
ja
pop
add
imul
dec
or
movs
and
cwde
xor
jge
or
sbb
repnz
push
jg
jecxz
dec
jnp
sub
jl
sub
popa
call
xchg
icebp
into
adc
jae
into
popf
adc
retf
mov
pushf
outs
les
or
fild
out
jbe
and
pop
stos
inc
in
ret
fist
movs
sub
out
lods
push
fcmovnbe
lock
sbb
and
in
pop
(bad)
pop
dec
cs
jne
xchg
nop
mov
xor
out
push
inc
das
enter
movs
retf
xchg
loope
es
pop
in
aad
jg
pop
fld
int3
sub
retf
dec
sbb
das
fild
and
ds
dec
out
mov
leave
ror
and
enter
xchg
fstp
jecxz
inc
inc
test
or
sbb
adc
inc
sbb
scas
add
or
(bad)
lock
int
not
clc
pop
sbb
pop
out
and
addr16
test
jmp
cmc
(bad)
sbb
hlt
or
sub
sub
pop
mov
cmp
loopne
jmp
jg
and
push
inc
adc
mov
ret
mov
cmp
fldenv
add
xchg
xchg
sbb
retf
hlt
int
jb
int
dec
rol
and
cmp
jb
jbe
push
cmc
or
aam
pop
(bad)
sub
xchg
xor
inc
retf
imul
shr
fmul
pop
scas
nop
pop
jnp
add
mov
lahf
mov
jmp
rol
or
mov
sar
or
bnd
cmp
jg
std
dec
push
xchg
seta
repnz
add
push
push
adc
jg
xchg
jmp
xor
mov
out
dec
push
inc
or
into
fbstp
xlat
pop
and
adc
jns
js
push
stos
mov
ror
shr
cmp
imul
mov
inc
in
xor
sub
dec
inc
(bad)
cmc
imul
ins
jb
int3
daa
sub
mov
xor
cmp
mov
addr16
shl
scas
sub
test
imul
xchg
sbb
movs
shl
in
aam
int3
push
mov
addr16
popf
idiv
adc
(bad)
inc
fsubp
push
xchg
sub
retf
cmp
mov
repz
mov
(bad)
rcr
lock
stos
mov
mov
jb
enter
call
jge
in
push
movs
imul
jp
lods
call
out
pusha
mov
adc
in
xor
cmc
dec
stos
pop
adc
pop
pusha
lds
inc
outs
dec
mov
ss
add
mov
bound
daa
pop
lods
xor
popf
mov
adc
xchg
repz
sub
and
mov
push
fidiv
(bad)
lods
sbb
jns
addr16
push
int3
out
push
sub
push
(bad)
std
adc
cmc
fiadd
jl
out
sbb
or
ror
pop
jo
or
adc
and
sbb
mov
sar
and
int
sub
sub
shl
fcmovnu
and
push
mov
ja
clc
or
xor
jae
clc
(bad)
popf
dec
pushf
rcl
dec
jne
push
loop
retf
or
call
pop
retf
sar
int3
pop
int3
or
mov
mov
and
sub
or
dec
ins
aas
arpl
into
adc
sub
push
sbb
jo
mov
aam
hlt
std
sar
jb
mov
repz
loopne
lds
test
(bad)
mov
(bad)
jno
mov
test
or
sahf
(bad)
jecxz
popa
rcl
jge
jb
xor
hlt
mov
jne
and
aam
pop
mov
adc
cli
push
shr
or
push
push
fisubr
lock
inc
rcl
mov
in
fst
scas
mov
pop
repnz
div
sbb
mov
data16
xor
mov
xchg
arpl
out
xor
pop
popa
out
fbstp
pop
cld
dec
test
lahf
movs
mov
data16
mov
out
das
in
lock
jo
jmp
icebp
jl
and
or
hlt
div
das
jb
or
push
fldenv
(bad)
dec
outs
adc
pop
cdq
sbb
arpl
mov
sbb
mov
repz
lds
imul
data16
xchg
pop
dec
xor
mov
(bad)
shl
popf
std
pop
imul
leave
inc
test
sub
jmp
aam
pop
fcmovb
cmps
sub
jne
cmc
and
shl
xchg
mov
xchg
stc
jne
xchg
ins
sub
cli
fisubr
sub
(bad)
xchg
push
pop
adc
in
fild
sub
(bad)
dec
loop
clc
out
rcl
fisttp
mov
cwde
aaa
repz
pop
in
cmp
outs
lods
(bad)
data16
xor
frstor
sbb
jo
call
jbe
xor
xchg
dec
mov
mov
in
icebp
mov
(bad)
lds
sti
jno
cmp
scas
pop
pushf
mov
test
int3
test
and
mov
push
pop
sti
xchg
repnz
adc
dec
sbb
ss
aad
aam
fstp
and
scas
(bad)
in
imul
mov
xor
dec
cli
scas
pop
lods
dec
xor
push
push
mov
fmul
and
mov
inc
pop
jmp
int
(bad)
push
mov
jmp
push
or
popf
jo
out
movs
out
addr16
mov
(bad)
mov
push
pusha
loope
dec
xor
dec
ret
inc
dec
test
mov
dec
mov
clc
fnstcw
test
push
rcr
xstore-rng
cmps
(bad)
or
dec
jae
js
cld
cmp
or
shl
xchg
xor
jbe
cs
mov
outs
aad
int
test
mov
cmp
mov
pop
xchg
jmp
(bad)
mov
enter
call
lods
out
jg
mov
imul
pop
or
retf
pop
int3
retf
pop
jb
sub
repz
cmps
mov
push
cli
fldcw
push
push
mov
sbb
lea
jmp
das
popf
enter
call
mov
sbb
add
mov
xlat
fiadd
mov
cdq
shr
lea
(bad)
pop
cmc
iret
pop
pop
ins
push
push
(bad)
rol
test
sahf
dec
call
xchg
and
inc
sahf
nop
aam
mov
je
fisub
test
push
add
ja
mov
pop
pushf
cmp
inc
push
stc
cld
outs
fs
xchg
mov
call
(bad)
mov
pop
out
test
push
jb
es
sbb
sub
loopne
push
inc
jne
mov
and
mov
popa
in
rcl
leave
add
lahf
cwde
dec
popaw
fwait
mov
and
ds
inc
retf
mov
pop
hlt
mov
xor
movs
mov
iret
sti
jle
inc
or
cmp
xor
dec
je
jle
int
cmp
add
pop
(bad)
stc
retf
or
aaa
fcmovb
cmp
or
sub
jo
sub
fist
icebp
gs
bnd
stos
xchg
jge
xlat
jmp
jns
cmps
popa
(bad)
xchg
dec
add
stos
test
mov
sbb
or
add
xchg
leave
jle
pop
adc
out
call
stc
cmp
(bad)
mov
lock
fcmovne
in
ja
das
sbb
pop
mov
inc
sub
add
(bad)
rcr
pop
and
frstor
cmc
pop
jns
pop
cmps
mov
test
in
dec
addr16
or
lea
stos
push
outs
je
jl
icebp
cmp
xlat
fs
popa
inc
popf
push
xchg
scas
add
pop
les
daa
inc
(bad)
pusha
push
out
adc
xchg
mov
aas
fmulp
pop
sub
test
dec
repnz
xchg
push
(bad)
movs
xor
xchg
in
or
fs
daa
scas
adc
mov
int
inc
out
mov
movs
js
jno
xor
jecxz
adc
mov
add
pop
ins
sub
leave
or
xor
xchg
ins
cmp
out
jno
mov
(bad)
out
or
mov
gs
sar
push
mov
xchg
imul
retf
test
jmp
inc
out
ja
test
and
inc
jne
mov
fsubr
add
dec
mov
dec
imul
lds
push
mov
shr
mov
or
push
call
add
jl
pop
cmp
fistp
popf
test
scas
out
mov
xor
push
adc
js
xchg
popf
inc
stos
dec
mov
sbb
xchg
inc
scas
pop
mov
mov
add
or
jb
ret
jmp
out
dec
scas
mov
ficom
ficomp
and
inc
xchg
mov
add
daa
xchg
mov
pushf
lahf
jae
(bad)
adc
xchg
cmp
sbb
sti
cmp
mov
hlt
mov
js
add
sub
jo
imul
and
sub
mov
stc
mov
sub
and
adc
sub
bndstx
arpl
fmul
mov
loop
mov
arpl
push
xchg
fs
inc
xchg
popa
jge
lods
inc
mov
stos
jp
mov
retf
adc
cdq
call
repz
retf
movs
xor
jns
fcomp
daa
mov
not
push
dec
sub
mov
jmp
add
ja
(bad)
sar
push
sub
inc
mov
sbb
mov
dec
loope
mov
mov
in
push
dec
hlt
jne
cwde
in
xchg
les
cmp
xor
lahf
imul
(bad)
xor
jne
imul
icebp
pop
jge
outs
out
fs
mov
push
add
test
cmp
imul
add
and
push
paddq
xor
retf
aaa
xor
push
pop
inc
scas
(bad)
inc
dec
cmps
dec
jno
cmp
cdq
dec
mov
ins
and
xor
xor
inc
mov
push
push
shr
inc
dec
mov
out
jge
or
cld
sti
leave
pushf
les
cmp
test
rcl
xor
pop
sub
adc
out
in
push
dec
popa
stos
retf
jmp
xor
adc
xor
push
ss
add
lock
dec
mov
das
or
inc
(bad)
xor
fldenv
add
test
mov
dec
cdq
in
push
pop
mov
inc
outs
movs
jns
sbb
mov
push
mov
retf
inc
cli
jg
pop
adc
lahf
and
mov
push
or
push
repnz
or
jmp
stos
dec
bound
imul
out
jmp
sbb
adc
fisub
adc
cdq
and
mov
out
sbb
cli
mov
mov
les
(bad)
sub
std
(bad)
mov
xchg
xor
cmc
jmp
add
pop
xlat
pop
enter
pop
stc
adc
xchg
jae
stos
popa
add
jecxz
pop
and
or
hlt
cwde
aas
or
ss
(bad)
in
(bad)
int3
repnz
add
or
sub
shl
call
ret
push
retf
xor
dec
pop
rol
sub
pop
cmps
fnsave
and
mov
test
fbstp
je
cs
outs
addr16
push
das
rcr
jmp
and
xor
adc
(bad)
xchg
in
cmp
and
fisttp
inc
idiv
jmp
enter
test
and
repz
test
inc
pop
sub
fsub
in
or
popf
or
nop
stc
inc
pop
fisubr
shr
jp
repz
test
add
or
aad
das
jle
popa
push
mov
loopne
(bad)
out
loop
in
jbe
out
mov
inc
mov
pop
xchg
cli
cmp
jbe
sub
stc
inc
push
jmp
jle
mov
adc
mov
add
ret
das
ss
int
pop
retf
cdq
mov
test
add
pop
cld
adc
cmc
pop
sbb
pusha
jg
loopne
sub
pop
jmp
mov
hlt
ja
jb
lods
movs
shl
scas
loope
mov
ins
fisttp
pop
mov
fimul
lahf
aas
and
lock
gs
stos
jbe
adc
pop
fisttp
mov
fcomp
movs
xchg
inc
pop
and
cwde
rcr
adc
scas
dec
push
push
retf
push
pop
xchg
push
test
pop
jmp
push
test
dec
call
jg
ror
dec
xchg
push
(bad)
dec
cld
(bad)
push
xchg
mov
ds
pop
(bad)
retf
xlat
add
xchg
xchg
adc
cld
mov
sbb
and
sbb
out
sbb
addr16
pop
dec
sub
jae
lea
(bad)
(bad)
inc
clc
lahf
stos
pop
repnz
mov
enter
sahf
pop
pop
in
cmp
mov
std
scas
mov
(bad)
repz
dec
add
cmps
call
pop
jmp
aad
dec
dec
imul
lds
xor
hlt
jl
std
inc
mov
das
(bad)
(bad)
loope
adc
stc
push
hlt
mov
nop
(bad)
jb
xchg
adc
test
fdivr
punpckldq
(bad)
inc
mov
test
int
mov
mov
jle
addr16
mov
jl
out
outs
adc
stos
arpl
xor
cmps
in
scas
mov
mov
sbb
push
lea
lahf
adc
push
jl
nop
jb
rcr
push
push
and
cdq
xor
pshufw
test
mov
or
adc
push
mov
jb
add
fisttp
xchg
xlat
pop
mov
dec
push
jo
jns
test
int
dec
loopne
out
sbb
dec
ds
jmp
and
rol
test
inc
inc
sahf
out
jnp
sbb
out
mov
jae
inc
or
repz
fild
arpl
shr
jae
push
jno
es
and
sti
xor
dec
inc
push
ss
cmc
cmps
mov
es
add
push
cmc
pop
cmp
pop
rcr
pop
or
jne
jmp
fadd
adc
nop
push
jo
cmp
inc
pop
or
cmc
xlat
adc
inc
push
xchg
or
push
fwait
sbb
movs
and
(bad)
out
idiv
jmp
in
xor
cmps
cmp
and
pop
outs
pop
addr16
jae
adc
mov
ficom
mov
xor
mov
inc
lods
movs
pop
cwde
fld
pusha
sub
out
xor
inc
ret
dec
push
test
inc
jbe
mov
(bad)
inc
pop
pop
mov
arpl
cli
xchg
leave
fiadd
pop
cmps
das
out
pop
fist
add
aad
push
pop
and
pop
shr
or
pop
bound
cdq
and
fdiv
scas
and
xchg
jne
adc
scas
push
mov
pop
mov
pusha
out
xor
movs
ret
out
jmp
jno
outs
shl
shl
call
jb
push
jecxz
xchg
ret
xlat
addr16
adc
cmc
stos
mov
cmps
retf
push
xor
xchg
xchg
xchg
pop
lds
mov
pop
loope
js
xor
out
mov
dec
cld
aas
in
pop
mov
mov
test
les
iret
es
pop
mov
out
push
xor
xchg
ds
adc
in
mov
add
sub
out
mov
fbstp
mov
xor
stos
jmp
int
fcom
loopne
sar
stc
mov
test
outs
pushf
adc
xor
pop
adc
ds
jmp
sbb
fstp
and
jge
mov
push
xchg
push
imul
leave
inc
or
fiadd
lahf
jmp
xor
inc
xlat
or
jmp
cwde
jb
aaa
push
std
fst
fwait
push
xchg
inc
cmp
lahf
add
inc
shr
pop
sti
push
div
xchg
loopne
cmc
imul
sahf
sub
xor
cmp
(bad)
or
ins
or
psubsb
hlt
aad
sti
int3
adc
ficom
(bad)
fmul
pop
bound
sub
and
mov
inc
mov
fisubr
or
hlt
ins
scas
inc
popa
adc
(bad)
sti
jge
arpl
ins
pusha
inc
retf
xchg
jae
add
fwait
(bad)
popf
jl
js
out
les
xchg
fld
cmp
push
xchg
ins
arpl
sub
add
xrelease
lock
mov
mov
cli
fimul
fisub
cmp
repnz
mov
xchg
inc
pop
jmp
outs
mov
popf
sub
icebp
dec
mov
mov
aaa
sub
or
jge
das
jmp
les
aaa
pushf
call
and
push
push
movs
cmp
fwait
rol
inc
inc
cmp
clc
add
pop
int
int
je
adc
and
and
sub
or
imul
mov
ss
mov
bound
xchg
fidivr
out
out
jnp
push
aas
call
(bad)
in
test
in
pop
pop
sub
dec
aaa
cmp
sub
in
das
mov
ss
mov
lds
cmp
dec
imul
and
pop
jl
stos
cmp
pushf
or
aaa
cmp
imul
mov
sub
scas
imul
pop
in
push
das
cmp
je
sbb
pop
ret
push
and
es
je
fst
xor
adc
inc
jge
in
into
shl
push
shl
mov
push
jb
xchg
mov
pop
and
mov
xchg
(bad)
pushf
push
cmp
imul
popa
jle
sbb
xchg
loope
push
add
lea
out
or
add
mov
xchg
push
sar
dec
push
movs
jb
push
cmps
popa
lahf
int3
addr16
push
push
shl
out
test
xor
and
xor
js
ret
dec
les
push
add
sbb
call
jae
or
(bad)
and
push
jmp
xchg
ss
mov
inc
test
jmp
mov
sti
sub
les
jne
sahf
stos
add
stc
jle
mov
sub
dec
sahf
add
ror
mov
fwait
mov
push
inc
mov
ss
gs
adc
mov
fs
inc
in
dec
aad
jle
pop
outs
sbb
xchg
std
jae
cdq
fcmove
jb
dec
fdivr
imul
inc
xchg
jmp
ins
lds
movs
xchg
adc
(bad)
sbb
sub
cwde
inc
inc
or
xlat
(bad)
enter
mov
repz
add
xchg
dec
jmp
stc
cmp
mov
ins
out
sub
sbb
in
or
loopne
jbe
cmp
sti
test
ins
je
loop
mov
xor
jg
or
jae
inc
test
and
inc
xor
cmp
lea
add
mov
cdq
loopne
sbb
int3
adc
jge
and
daa
cld
cwde
mov
pop
les
add
scas
add
xor
fiadd
test
hlt
mov
xchg
pushf
or
shl
dec
add
inc
xchg
scas
ds
and
mov
pusha
es
pushf
dec
sub
pop
imul
or
cmp
stos
int3
imul
stos
rcl
test
jmp
loope
xor
fist
cdq
mov
hlt
pop
pop
arpl
add
add
xor
std
mov
pop
jmp
aam
mov
shl
pop
test
inc
les
and
mul
jmp
inc
mov
jae
retf
mov
adc
pop
fldcw
cmp
loope
push
out
mov
stos
test
rcl
pushf
das
movs
(bad)
pop
cmp
cld
and
ret
ins
push
cld
lods
ret
cwde
rep
push
mov
xor
(bad)
repz
cmc
and
pop
aam
or
push
dec
jmp
push
add
popf
(bad)
in
test
daa
pop
call
ss
addr16
popa
jns
(bad)
sbb
rcr
test
loop
call
aam
jbe
cmc
mov
mov
popa
pop
xor
xchg
pusha
jecxz
xchg
jnp
nop
pop
add
push
fcom
cs
adc
call
popa
ins
pop
jmp
pop
and
and
(bad)
dec
rcl
out
and
fwait
mov
out
cmc
jo
mov
(bad)
pop
pop
or
adc
xchg
stos
out
cld
push
sbb
inc
and
dec
or
and
jecxz
and
iret
hlt
(bad)
xlat
icebp
cmp
dec
mov
aad
clc
data16
in
xor
mov
xor
hlt
or
shl
jl
jmp
retf
jmp
arpl
loop
sbb
mov
jmp
mov
pop
call
retf
in
nop
out
sub
imul
loop
ret
ja
mov
cli
ds
dec
xor
mov
inc
pop
and
mov
jb
fwait
int
adc
smsw
ins
adc
jbe
jmp
stos
lea
cdq
(bad)
fiadd
in
push
(bad)
sbb
fidivr
or
(bad)
repnz
inc
push
xchg
cmp
loopne
retf
rol
jne
xor
outs
xchg
push
int
mov
(bad)
(bad)
and
arpl
add
mov
fdiv
inc
xchg
xor
clc
jmp
pavgw
xor
pushf
mov
out
aam
popa
iret
(bad)
xchg
sub
xchg
scas
xor
fucomip
inc
loopne
inc
jg
fistp
and
movs
loope
mov
jne
mov
sbb
stos
pop
arpl
jmp
xchg
mov
mov
shl
pop
test
ret
xchg
lods
jnp
(bad)
mov
mov
mov
repz
in
cdq
jecxz
and
div
jnp
arpl
jns
mov
aas
movs
js
and
iret
mov
push
in
and
daa
sub
cwde
mov
test
jl
cmp
dec
mov
pop
cdq
mov
adc
and
mov
and
fist
ja
or
enter
push
inc
(bad)
(bad)
inc
mov
dec
inc
jns
mov
ds
int3
in
mov
xchg
inc
push
mov
loopne
add
adc
les
ins
mov
push
scas
shl
lahf
in
cld
or
or
cmp
fiadd
xchg
outs
aam
and
test
push
fs
sbb
jle
dec
cmp
inc
xlat
ret
pusha
out
mov
pop
dec
fnsave
cld
fdivp
daa
(bad)
(bad)
into
jmp
xor
jmp
add
call
dec
aam
cli
cmc
les
push
fdivr
dec
xchg
leave
fstp
imul
gs
push
mov
xor
inc
imul
popa
dec
add
xchg
out
fs
icebp
retf
ret
sbb
fistp
sub
sar
outs
out
cmp
lods
xchg
jns
inc
lahf
adc
stc
icebp
sub
shl
xor
lahf
mov
add
xchg
xchg
arpl
sub
adc
movs
outs
mov
pop
cmp
daa
popa
adc
dec
mov
movs
xchg
mov
test
ret
dec
or
pusha
ror
enter
mov
lds
je
pop
pop
xchg
dec
and
ja
lock
sti
ret
jne
pop
add
shl
add
mov
cwde
mov
jl
fidivr
test
push
ss
scas
mov
fldcw
fcmovb
pop
sti
sbb
sub
sbb
xchg
mov
push
test
jmp
push
stos
ret
mov
add
loope
sbb
cmps
ficom
iret
cmps
sbb
mov
xchg
mov
ror
and
pop
dec
scas
(bad)
sbb
or
add
aas
sub
pop
je
xor
test
jno
cmp
sti
aas
cwde
bound
cdq
sub
mov
leave
imul
and
dec
push
(bad)
sub
mov
repnz
dec
mov
int
loopne
je
sbb
imul
mov
or
ins
pop
inc
adc
push
mov
mov
xor
ror
f2xm1
xchg
and
inc
outs
std
in
fstp
sbb
jg
js
ficom
imul
xchg
retf
cmps
pop
jmp
out
cmp
ins
mul
aad
in
sbb
xor
cmps
xchg
inc
and
inc
cmp
movs
inc
in
paddsw
pop
mov
xchg
pop
mov
push
cmp
lahf
pop
inc
aaa
repnz
and
jmp
xchg
cdq
leave
jnp
sbb
in
mov
inc
inc
pop
das
aam
repz
or
popf
call
mov
repz
outs
ja
gs
enter
cmp
outs
pop
add
test
jnp
ins
mov
inc
je
rcl
jecxz
dec
dec
lock
push
mov
ins
ds
leave
out
adc
fdiv
mov
cmp
pop
ss
lock
pusha
retf
gs
inc
loopne
pop
in
mov
frstor
push
out
dec
inc
xchg
pop
mov
inc
fdiv
or
sti
add
retf
retf
clc
xchg
mov
int
xor
cmp
clc
mov
pop
fsubr
mov
mov
sbb
lods
div
push
mov
pop
or
aaa
push
adc
movs
inc
and
xchg
into
push
loopne
sahf
movs
mov
or
sub
cmp
xor
xchg
push
test
push
loope
stc
outs
xchg
adc
xor
rcl
fistp
dec
fscale
adc
dec
movs
ins
sbb
pop
mov
mov
sbb
and
adc
pop
stos
fst
rcl
add
and
iret
fldcw
jo
ds
cmp
mov
cli
xor
hlt
dec
repz
jp
jb
(bad)
push
xchg
or
xchg
stos
mov
cmp
mov
cmps
into
inc
cmp
or
enter
push
jmp
popf
sub
or
mov
and
sbb
cmp
dec
ror
loope
fmulp
inc
or
pop
dec
mov
arpl
(bad)
das
test
cmp
and
mov
fcmovb
xchg
push
lods
sbb
(bad)
cwde
push
das
add
test
add
push
jmp
sbb
mov
fild
jb
or
mov
rcr
movs
push
test
pop
xor
push
or
push
mov
imul
or
fdiv
inc
stos
fisubr
in
shr
mov
in
xor
mov
pop
push
pusha
jno
pop
and
ins
xor
push
push
mov
std
ret
pop
add
mov
mov
popf
bound
cmp
ret
adc
dec
dec
dec
and
ret
shr
xor
add
jbe
xor
test
bound
cwde
pushf
inc
add
inc
xor
das
jnp
sub
sti
pushf
xchg
cmp
add
and
bound
aaa
lock
mov
hlt
cmp
sub
push
add
inc
add
adc
out
sbb
or
out
cmp
xlat
jbe
xchg
dec
mov
or
into
jmp
ja
inc
adc
dec
inc
mov
xchg
aas
mov
mov
mov
jns
test
icebp
dec
(bad)
lock
jno
ret
jne
mov
loopne
repnz
cwde
push
dec
test
ret
pop
ins
cdq
pop
les
repz
aad
imul
pop
fild
inc
add
sub
mov
clc
cmp
push
dec
enter
pushf
sahf
mov
and
pushf
fs
cmp
sub
in
adc
sti
mov
js
loopne
pop
cmp
and
stc
adc
cmp
xor
xchg
lods
lea
push
lods
sub
repnz
add
jnp
mov
hlt
jmp
sti
gs
out
rcl
add
aam
dec
mov
pop
inc
movs
ret
hlt
xchg
rcl
ret
shl
out
aas
mov
jmp
data16
test
daa
and
xor
adc
inc
ins
dec
fidiv
mov
repnz
xchg
xchg
popa
js
(bad)
repnz
fnsave
xchg
data16
loopne
lock
push
jmp
pop
push
movs
xchg
push
fistp
xchg
stos
push
mov
sub
ret
retf
inc
sbb
mov
adc
mov
mov
inc
xor
push
mov
dec
jno
sbb
sbb
lock
xchg
push
adc
cli
mov
and
pop
jg
pop
jo
out
iret
into
int
aaa
retf
pop
pop
adc
xchg
dec
xchg
mov
ja
call
fdiv
cmp
inc
xor
sbb
jmp
push
rcr
mov
jae
add
clc
outs
in
lods
cmp
add
setb
stos
jmp
sub
retf
xor
out
loope
add
shl
or
call
or
jmp
retf
push
sub
cmp
push
in
inc
popf
das
dec
push
stos
sub
dec
xor
push
arpl
push
adc
shl
cmp
mov
pop
mov
jmp
add
xchg
pop
rcr
adc
xchg
test
fcom
dec
xor
inc
jl
dec
sbb
or
retf
xor
push
push
jb
stos
imul
test
les
inc
pop
pop
mov
cmps
ss
jmp
fwait
shr
adc
call
pop
rcr
fcomp
(bad)
mov
int
xchg
out
jmp
cmp
pop
cwde
jmp
(bad)
mov
retf
sub
dec
push
push
adc
rcl
xlat
jbe
mov
iret
hlt
xchg
out
lods
pushf
je
mov
(bad)
(bad)
mov
(bad)
in
test
(bad)
out
xchg
jge
cmps
inc
adc
hlt
mov
xchg
lods
pop
xlat
retf
pop
cmc
aaa
lods
and
imul
sbb
push
ret
sbb
(bad)
fsubr
inc
sub
jl
not
lock
dec
xchg
shl
mov
jp
daa
test
sbb
hlt
mov
and
mov
je
mov
es
or
fs
adc
adc
int3
ds
sbb
xchg
push
mov
sub
inc
in
mov
or
xor
push
pop
mov
mov
mov
pop
mov
cdq
out
push
and
leave
inc
fsub
neg
cmp
cmp
fistp
gs
dec
jg
hlt
int3
pop
fsub
xor
pop
jb
cmp
pop
dec
cwde
ret
les
mov
nop
xchg
xchg
xchg
pop
inc
xchg
enter
inc
aas
and
mov
push
retf
aam
and
popf
ficom
inc
sub
sbb
outs
int3
or
inc
jg
retf
pop
cs
mov
ins
retf
mov
and
call
ins
jle
dec
int3
xor
mov
sbb
int3
(bad)
fidiv
sub
(bad)
fdiv
add
fdivp
inc
pop
and
ds
mov
loope
outs
pop
and
jns
leave
dec
shr
inc
jp
adc
sbb
mov
mov
aas
cmp
iret
xchg
shr
(bad)
loopne
or
ror
mov
in
cmps
ins
jmp
sar
(bad)
(bad)
xchg
jb
jge
arpl
aam
movs
mov
aaa
aam
xchg
out
xchg
add
mov
test
call
mov
fldenv
stos
imul
mov
ins
dec
add
nop
pop
mov
into
sub
mov
ins
shl
sub
fist
push
pop
loop
daa
push
sbb
mov
sahf
dec
and
das
cmp
mov
dec
mov
dec
cs
xchg
xor
jmp
pause
test
add
icebp
stos
fiadd
popf
jge
rcl
cmp
pop
in
popf
push
inc
xlat
pushf
arpl
cwde
mov
xchg
jmp
xchg
and
jne
xor
adc
jle
into
mov
and
fcom
loope
cli
or
std
lods
adc
fimul
into
in
jnp
sub
aas
imul
xlat
fs
(bad)
pop
stos
xor
xchg
and
fnstenv
push
sbb
jae
je
aad
mov
xchg
popf
xchg
arpl
fs
sti
and
lahf
adc
xchg
fs
outs
pop
out
push
mov
retf
push
sub
or
pop
(bad)
lahf
imul
jnp
out
clc
xchg
pop
loop
jmp
mov
loop
sub
xchg
sbb
jl
xchg
or
mov
sahf
add
mov
imul
lock
ds
aaa
jg
adc
aad
xchg
dec
fsub
xchg
in
mov
lahf
nop
(bad)
jbe
cmp
dec
jge
fstp
stos
xchg
sub
sar
mov
add
pushf
mov
repnz
xor
push
es
in
(bad)
test
mov
lahf
rcr
out
cmp
movs
stos
mov
aaa
xchg
mov
push
jg
sub
xchg
aam
xlat
adc
inc
cmp
pusha
mov
xchg
sub
or
hlt
push
lahf
cmps
mov
sti
rcl
mov
mov
shr
ss
in
cld
push
mov
push
mov
jmp
pushaw
(bad)
into
add
fdiv
arpl
add
(bad)
daa
pop
mov
rcl
xchg
fisubr
das
ror
shl
in
inc
lods
ja
jae
movs
xchg
push
xchg
ins
sbb
cli
stos
push
in
adc
ins
push
repz
fwait
xchg
sbb
and
push
xlat
pusha
(bad)
pop
fisub
mov
(bad)
pop
push
fs
xchg
(bad)
and
shr
cmps
fist
and
outs
popf
gs
jnp
dec
hlt
push
lahf
add
sahf
int3
add
adc
shl
mov
mov
js
int
sub
sub
cwde
jle
fild
or
jmp
jb
inc
test
jns
dec
ficomp
lods
enter
aam
mov
or
mov
jb
aad
mov
shr
jnp
push
test
push
fwait
(bad)
jmp
mov
imul
pop
mul
xor
push
data16
dec
xchg
push
and
les
add
jb
xchg
push
mov
pop
out
in
cmps
gs
(bad)
ja
and
shl
adc
push
cld
arpl
adc
mov
retf
ret
mov
shl
call
nop
mov
lahf
dec
fadd
adc
test
mov
dec
xchg
adc
add
xchg
pop
sub
add
retf
inc
or
sub
fsubr
and
mov
jae
and
mov
mov
inc
push
jno
imul
jmp
fs
gs
(bad)
sti
xchg
inc
je
mov
hlt
ret
ror
sbb
jne
add
or
mov
or
or
jp
inc
mov
sbb
lock
inc
push
imul
into
add
scas
xchg
or
rcl
aas
mov
add
add
cmp
cwde
aaa
mov
xchg
ficom
pop
cmp
loopne
bound
in
loopne
pop
mov
add
pop
ss
and
mov
imul
jo
addr16
add
leave
jmp
mov
ins
ins
clc
dec
cdq
fs
push
ficom
(bad)
repnz
je
outs
adc
movs
ins
jo
(bad)
shl
pop
leave
stc
mov
jle
mov
jmp
mov
aas
xchg
pop
xchg
repnz
pop
pop
adc
ss
aas
pop
mov
inc
xor
mov
pop
out
ror
mov
add
mov
push
enter
add
push
repnz
mov
inc
sub
push
enter
inc
aam
mov
xor
test
pop
add
or
xor
jb
stc
jp
adc
push
push
adc
fwait
lds
mov
push
and
xor
mov
test
das
jmp
icebp
dec
jmp
or
(bad)
dec
xchg
dec
leave
mov
mov
or
in
out
ficomp
stos
rol
pop
cmp
stos
jnp
cmps
punpcklbw
lods
or
aas
mov
mov
cmc
dec
inc
scas
das
ins
inc
inc
xchg
lds
mov
test
mov
add
xor
mov
dec
mov
inc
mov
dec
xchg
popa
call
dec
pop
xchg
lahf
xor
inc
fs
inc
pop
dec
lds
inc
iret
dec
sub
inc
outs
add
out
xor
sbb
push
movs
push
sbb
xchg
sbb
dec
dec
adc
xchg
aaa
push
cld
aas
xor
(bad)
in
in
or
lahf
sbb
mov
fwait
push
ficomp
adc
das
je
or
pop
jle
cmps
loop
ja
mov
add
(bad)
je
test
sub
or
out
jp
rol
and
pop
and
dec
pop
pop
(bad)
dec
xor
xor
dec
pop
(bad)
jmp
dec
scas
sub
aad
int
loope
cld
js
fadd
adc
repnz
mov
push
pop
mov
(bad)
ins
out
and
in
pop
cs
test
clc
jg
(bad)
fidivr
push
pop
dec
imul
mov
push
ins
add
adc
or
or
mov
jecxz
mov
inc
(bad)
sub
repnz
inc
mov
in
sbb
sub
or
xor
rol
imul
fisubr
imul
mov
xchg
sahf
(bad)
jbe
pop
inc
sbb
mov
(bad)
mov
cmp
ja
and
mov
xor
data16
jnp
add
shl
sbb
pusha
in
xchg
adc
pop
or
mov
call
push
cli
loop
data16
mov
jae
lds
add
or
shr
scas
or
or
pop
add
add
mov
gs
mov
jg
or
inc
jb
(bad)
xchg
or
(bad)
shl
cmc
dec
mov
dec
mov
clc
pop
stos
jnp
mov
sahf
push
test
outs
cmp
sbb
aad
retf
js
mov
inc
daa
mov
fistp
cmc
mov
int3
icebp
jecxz
cmp
loop
sbb
and
pop
adc
popf
cli
jnp
xor
pop
and
pop
inc
out
xor
div
and
adc
sub
push
nop
and
push
adc
and
mov
sbb
inc
jno
xor
idiv
cmps
shl
cmps
ds
dec
mul
loopne
push
mov
ds
or
fwait
out
inc
clc
je
mov
sub
cmc
sub
imul
aam
fcomp
cmp
aam
mov
scas
mov
jmp
jp
mov
stc
daa
shl
inc
std
push
iret
sbb
ins
xor
mov
lods
jg
dec
je
mov
lock
xchg
mov
ja
es
mov
nop
adc
mov
and
sbb
jle
pop
lods
cmp
jno
mov
rcr
bound
and
add
sbb
push
jecxz
mov
pop
add
xor
cmp
movs
fiadd
inc
dec
and
mov
arpl
cmp
scas
sub
movs
repz
scas
jb
fisttp
ret
cmp
mov
mov
cmp
xchg
ds
retf
sbb
sar
pop
or
in
jns
jmp
cwde
xchg
xchg
fst
sbb
lods
pop
mov
mov
call
xchg
dec
adc
dec
mov
rol
jno
and
mov
nop
xor
sbb
jns
push
xor
fiadd
std
mov
mov
adc
mov
mov
mov
adc
sti
add
push
push
sub
sub
mov
add
cmp
stc
repz
mul
lahf
sub
jo
pop
cmp
or
inc
cmp
pop
push
add
call
ds
into
fwait
and
fst
mov
jle
shl
cmp
aad
hlt
pusha
mov
ret
cmp
lds
inc
dec
pushf
fild
and
xchg
mov
pop
outs
jg
aam
lock
inc
and
add
and
hlt
mov
cmps
push
xor
shl
xchg
jmp
or
(bad)
into
add
jecxz
mov
ss
inc
or
pop
es
sar
imul
push
add
sbb
movs
push
aam
adc
xor
jmp
and
aaa
and
jecxz
test
add
add
pop
push
inc
dec
mov
out
dec
sar
or
mov
into
outs
shl
inc
sti
aas
lock
sub
and
pop
fild
lock
lea
xor
ins
mov
xchg
cmp
cmp
int
mov
jecxz
mov
sub
not
fisttp
sbb
neg
sub
cmp
sub
ret
hlt
mov
sub
sbb
pop
xchg
dec
and
enter
push
and
lahf
and
sbb
jle
(bad)
shl
(bad)
jb
push
xchg
cmp
fistp
mov
mov
stos
jle
push
sub
js
dec
pop
cmp
into
pop
gs
mov
mov
pop
fcmovne
stos
call
mov
mov
(bad)
popa
test
imul
les
inc
dec
fwait
rcr
in
out
cmp
pop
stos
or
pop
movs
stos
cmc
push
leave
jnp
adc
ja
sbb
or
je
inc
leave
sbb
lahf
adc
hlt
pop
mov
and
ja
sub
sbb
or
movs
rcl
adc
jl
sbb
stos
ret
stc
cmp
fisub
movs
sbb
in
sbb
mov
push
jbe
inc
or
mov
out
(bad)
cmp
loope
push
daa
cmp
cmps
pusha
inc
xchg
dec
es
repz
inc
stc
xchg
adc
int3
xchg
ins
xchg
jae
push
or
out
lds
iret
or
mov
xchg
(bad)
loopne
adc
push
lods
and
push
mov
aaa
clc
lock
ja
sbb
jecxz
adc
mov
aaa
or
xor
mov
jne
mov
out
sbb
and
ss
jge
or
cs
cmp
dec
js
mov
mov
test
in
call
(bad)
or
aaa
sbb
add
mov
sub
fcmovnb
nop
xchg
jecxz
lea
add
mov
(bad)
mov
loope
sub
inc
ins
cdq
push
xor
out
bound
mov
dec
pop
jae
mov
ja
push
(bad)
xchg
sub
aas
cmc
fistp
mov
inc
(bad)
fisttp
sbb
mov
pop
int
adc
stos
outs
gs
test
imul
and
mov
pusha
fs
xlat
jmp
ficomp
adc
call
jns
sub
icebp
sub
out
pop
push
jno
xchg
mov
xchg
xchg
xchg
push
jns
xchg
mov
cmc
xlat
mov
mov
leave
sbb
push
cmps
inc
mov
and
xor
jbe
hlt
fs
enter
int3
bnd
(bad)
sbb
sub
popa
cmp
aam
dec
call
stos
inc
movs
mov
loopne
les
sbb
pop
add
mov
jmp
push
pop
pop
ins
dec
or
push
aad
jecxz
adc
or
or
cmps
ja
call
repnz
cli
je
stos
pushf
lock
call
add
sub
jl
push
lea
jecxz
mov
mov
jno
jnp
cld
push
pushf
xor
pop
and
icebp
iret
inc
daa
fmul
add
cli
jmp
repnz
movs
adc
and
cmp
mov
(bad)
stc
and
(bad)
push
popf
cmp
lock
jne
(bad)
outs
or
cwde
icebp
adc
adc
rcr
add
add
cmp
dec
(bad)
xlat
mov
and
add
shl
pop
mov
movs
cmp
mov
shl
mov
push
in
mov
stos
bound
int
xor
xchg
sub
mov
pop
pop
and
and
sti
sbb
push
in
shl
xor
jo
loopne
and
mov
daa
lds
pop
ret
mov
adc
mov
jae
(bad)
in
or
dec
cmovs
inc
lods
or
int3
xor
xchg
out
pop
cmp
dec
int3
bound
movs
lock
int
rcl
xchg
(bad)
push
mov
stc
dec
out
scas
sar
bound
scas
add
and
jo
arpl
stc
adc
pop
push
std
xchg
cwde
sbb
pop
inc
jg
lea
mov
loopne
pop
and
mov
dec
movs
push
pop
jns
ins
mov
sub
pop
push
add
lds
inc
addr16
and
xchg
clc
cwde
jp
movs
sbb
mov
xchg
mov
lahf
jno
(bad)
push
inc
push
dec
rcr
pop
daa
cmc
xchg
iret
xchg
mov
inc
push
movs
push
dec
cmp
sub
cld
mov
movs
inc
fcom
jb
scas
xchg
jge
jge
push
pop
loop
fld
push
rol
lods
iret
lahf
nop
dec
(bad)
and
add
xor
sahf
repz
das
cmp
call
mov
(bad)
lock
xchg
addr16
cmp
out
aam
in
ret
aas
cmp
pusha
cs
loop
pmulhw
push
sbb
xor
ins
fdivr
adc
call
mov
js
test
pop
or
dec
dec
ds
adc
push
mov
sbb
repnz
cmps
mov
mov
fcmovu
xor
mov
mov
push
(bad)
sub
(bad)
mov
leave
inc
push
cmp
jb
push
mov
pop
lea
mov
push
sbb
jmp
lods
fucomip
shr
addr16
call
out
not
dec
ret
sub
into
lahf
xchg
js
es
loopne
cs
retf
cmp
loopne
xchg
bound
nop
aad
inc
ins
scas
pop
ins
mov
fidivr
into
nop
push
mov
rcl
xchg
jecxz
mov
mov
pop
iret
jmp
pop
cmc
mov
xchg
clc
dec
sbb
shr
sbb
into
test
inc
iret
add
popa
or
je
jle
mov
jecxz
sbb
mov
sbb
or
lods
jl
aad
pop
push
mov
movs
loopne
add
push
pusha
inc
sbb
shl
jge
mov
jbe
mov
pop
fstp
repz
cli
dec
adc
sbb
rcl
out
adc
or
mov
and
inc
pop
cmps
cmps
inc
out
aaa
aas
jg
add
mov
inc
rol
je
dec
jbe
pop
xchg
mov
mov
inc
in
out
push
mov
fild
jmp
mov
push
xchg
xacquire
loope
retf
(bad)
addr16
xor
out
xchg
sub
aad
xor
add
stos
cwde
gs
(bad)
and
pop
xor
pop
pop
and
cmp
aaa
(bad)
std
mov
push
mov
xlat
xchg
lahf
in
(bad)
popa
cmp
stos
bswap
dec
jnp
or
call
mov
adc
xor
test
adc
inc
test
pop
xlat
int3
jmp
sbb
aam
test
aaa
mov
push
je
mov
push
jbe
adc
sbb
clc
pop
mov
fild
std
in
mov
mov
mov
pop
inc
icebp
jge
jmp
pusha
xor
aad
aam
outs
js
fiadd
ja
loope
mov
and
pop
into
je
lea
mov
mul
arpl
shl
(bad)
jl
inc
inc
jne
mov
inc
mov
sbb
push
ds
pop
ins
(bad)
mov
enter
or
addr16
enter
dec
fsubr
rol
aaa
popa
mov
fdivr
push
test
arpl
jmp
jge
es
mov
call
inc
mov
push
test
push
out
aas
adc
inc
inc
mov
push
movs
xchg
pop
sub
pop
(bad)
repz
mov
stos
mov
mov
outs
aam
mov
mov
gs
mov
and
lods
je
cmp
mov
outs
lods
inc
sar
outs
pop
call
xchg
mov
cmps
lds
jle
cmp
jle
idiv
sbb
add
imul
mov
repnz
dec
rol
test
sub
mov
push
fsub
clc
sub
shr
sub
mov
add
(bad)
mov
shr
popa
push
jl
outs
cdq
popa
adc
ret
ins
xchg
pmuludq
dec
add
std
and
mov
or
push
daa
inc
lods
pop
dec
cmps
xchg
in
imul
pop
mov
mov
xchg
and
jo
and
aas
fist
cmp
cmp
movs
js
add
repz
out
push
cmp
pop
or
mov
mov
call
xchg
stos
sub
mov
mov
das
sahf
cwde
ror
xlat
not
sti
ret
mov
jg
cmpxchg
and
xchg
mov
and
popa
push
adc
out
mov
mov
aam
ror
ret
outs
in
inc
jnp
cdq
fsub
out
and
retf
lahf
jg
fwait
inc
jno
in
loopne
pushf
in
cmp
pusha
pushf
adc
loop
add
xchg
xlat
jmp
or
in
add
pop
sub
lds
not
sbb
and
xor
inc
add
inc
test
test
sbb
hlt
push
repnz
lea
cli
imul
mov
stos
jg
xchg
mov
dec
test
jmp
mov
adc
inc
jns
mov
push
cmps
xchg
adc
loop
addr16
cmc
jo
ret
and
clc
mov
add
sbb
fiadd
jg
adc
inc
push
cmp
int
cmps
call
and
push
rol
cmps
neg
je
(bad)
mov
lahf
jo
jbe
cwde
movs
mov
inc
sbb
push
in
hlt
call
push
lock
lahf
xchg
mov
inc
push
popf
sub
loopne
sbb
adc
sub
xor
fisubr
arpl
xor
and
(bad)
xor
repnz
ret
leave
scas
arpl
ss
cmp
mov
je
nop
dec
enter
scas
lahf
stc
jmp
cmps
frstor
scas
mov
pusha
bound
sub
imul
adc
lods
pop
or
(bad)
sbb
mov
sub
or
loop
mov
and
xor
or
ret
data16
mov
sbb
push
jl
int
or
mov
cld
mov
xchg
xor
psubw
jno
ret
jmp
cli
or
mov
add
push
mov
stc
xchg
push
loope
or
(bad)
mov
mov
push
or
mov
js
adc
lahf
push
sahf
sbb
fs
ins
sti
mov
mov
pop
dec
pop
mov
jnp
cmp
test
icebp
jmp
aad
cmps
leave
and
fndisi(8087
push
int3
stc
dec
add
out
scas
retf
xchg
pop
jmp
retf
xchg
push
xchg
popf
in
jmp
mov
(bad)
out
stos
lea
xor
sbb
vmovq
mov
data16
xchg
icebp
add
ss
inc
or
jge
xchg
jo
icebp
xchg
push
jle
xchg
push
pusha
jg
sbb
lds
shl
push
aas
xchg
xchg
into
cmp
lea
jmp
cmp
ss
repz
fcmovnbe
pop
pop
jbe
adc
rol
aad
out
xchg
inc
sbb
jne
fimul
add
in
mov
mov
inc
out
push
iret
pop
xchg
cmp
mov
push
ins
add
jg
mov
rcl
dec
test
xchg
imul
cwde
scas
dec
dec
imul
mov
jp
sahf
push
fnstenv
adc
adc
adc
jbe
mov
cmp
or
sbb
add
arpl
mov
adc
jno
add
pop
repnz
push
mov
dec
mov
pop
sub
mov
jb
pop
or
xchg
out
in
addr16
call
(bad)
in
mov
ss
(bad)
pop
inc
adc
dec
js
outs
and
mov
xor
fcomip
mov
xchg
scas
cwde
or
cmp
call
xchg
rcl
ss
gs
inc
or
test
inc
aad
fcmovnbe
pop
jmp
test
inc
cmp
inc
pushf
cmc
loope
sbb
gs
js
sbb
and
mov
mov
cdq
jmp
outs
cdq
sahf
dec
mov
pusha
xchg
sub
lea
or
(bad)
fsub
push
test
mov
xor
push
push
xor
cs
imul
test
loop
xchg
or
pop
movq
in
mov
jno
test
jmp
test
xor
aas
out
xor
cli
mov
mov
xor
adc
sbb
mov
sbb
adc
lock
(bad)
dec
ss
cdq
ret
push
inc
sbb
fst
xor
pop
cdq
das
jo
repz
adc
sub
inc
mov
loope
pop
js
pop
fst
icebp
cmc
sbb
pop
mov
inc
mov
jl
sbb
pusha
or
pushf
js
cmp
popf
shl
jecxz
adc
mov
in
jns
test
mov
stos
ret
mov
clc
mov
inc
stc
xchg
(bad)
mov
loop
push
mov
mov
in
call
mov
fdiv
mov
jecxz
retf
aas
sub
or
movs
repz
(bad)
add
xor
cmp
jp
movs
sub
cmc
enter
scas
dec
xor
aad
outs
and
add
xchg
shl
(bad)
test
dec
push
retf
adc
add
inc
cmp
pop
stos
add
cmp
out
test
mov
stos
and
out
jmp
cmp
aam
(bad)
stos
and
or
pop
mov
push
imul
xchg
xor
pusha
mov
pop
inc
or
outs
rcl
sbb
imul
xor
inc
add
test
mov
repnz
xchg
pushf
add
and
inc
outs
movs
icebp
sub
daa
sub
test
add
push
dec
mov
sub
imul
pop
sbb
xor
adc
std
pop
fdiv
and
sbb
pop
push
xchg
clc
adc
shl
lock
das
fistp
sbb
mov
in
pop
ja
push
shl
into
stc
adc
ret
pusha
fisub
inc
call
pop
xchg
push
sbb
xchg
cmps
push
stc
shl
pop
push
pop
xchg
fnstcw
cdq
aas
or
xor
jle
sbb
jno
cmc
enter
pushf
out
mov
and
idiv
cmp
sbb
lods
popf
test
xchg
mov
in
sub
xchg
leave
push
imul
sahf
mov
jne
cmc
lods
push
jle
ins
add
lds
loopne
fild
dec
inc
fild
popf
aam
enter
pop
mov
lea
push
push
adc
fcomp
sub
lock
(bad)
mov
xchg
xor
add
(bad)
rol
mov
push
lea
sahf
xchg
push
pusha
add
lods
les
mov
mov
pop
popf
and
cdq
fstp
faddp
loope
adc
test
aad
or
mov
mov
or
mov
fadd
jo
iret
pop
lahf
jae
fmul
dec
jae
push
push
popf
movs
jo
push
icebp
jnp
retf
jmp
loop
mov
sahf
fistp
loop
stos
mov
pop
ja
inc
stc
lds
xchg
pop
push
pop
sbb
cmp
add
bound
jb
pushf
adc
add
cmp
sbb
int
vprotb
dec
ffree
jle
adc
mov
popa
sbb
data16
repz
shl
dec
aad
ins
add
pop
xchg
jmp
fwait
add
mov
popf
add
inc
mov
jmp
sbb
cld
out
xor
rcr
out
scas
jmp
ja
dec
sbb
out
and
lahf
mov
movs
inc
mov
pop
xchg
jno
(bad)
ds
fistp
movs
push
adc
xor
(bad)
jno
test
shl
in
jg
sub
ret
ret
je
jecxz
pop
movs
mov
data16
cmp
repnz
call
shl
sbb
loop
(bad)
and
jl
mov
add
pop
mov
in
mov
jo
imul
hlt
repnz
daa
imul
movs
cdq
mov
stos
or
and
push
into
push
lods
push
adc
int3
pusha
enter
out
and
stc
and
inc
mov
add
sti
mov
pop
push
arpl
mov
data16
sub
jne
adc
pxor
mov
or
ins
(bad)
loope
test
adc
mov
retf
jle
jb
jecxz
push
(bad)
(bad)
push
dec
add
call
mov
jb
sub
pop
stc
pusha
or
enter
cmp
and
jae
push
mov
mov
scas
push
addps
(bad)
xlat
int3
das
mov
adc
les
ss
(bad)
jg
ret
pop
jmp
cmps
push
jbe
in
repnz
test
push
pop
jmp
es
movs
data16
(bad)
mov
adc
fisub
loop
sbb
xchg
fstp
jg
test
dec
lea
push
add
lods
bound
adc
call
ja
cdq
and
push
gs
dec
xchg
test
add
imul
pop
inc
or
pop
retf
and
pop
or
pop
fcmovbe
movs
enter
mov
pop
push
mov
lea
jp
adc
pop
push
pop
add
test
sbb
fnstenv
fdiv
pop
std
push
inc
test
rol
cs
test
mov
das
xchg
mov
pop
pop
pop
adc
outs
das
add
mov
push
int3
push
ss
imul
leave
push
pop
add
and
out
ins
dec
adc
mov
sahf
cmp
sbb
cmp
outs
add
int3
mov
lods
stc
jle
mov
stos
sub
cmp
mov
mov
or
jmp
mov
aas
cmp
pop
xchg
or
ror
ffree
inc
pop
push
loopne
add
imul
daa
lock
mov
mov
fsub
leave
fistp
mov
cmp
popa
inc
or
cs
loopne
and
scas
call
enter
cmps
call
inc
pop
mov
xchg
sub
enter
aas
and
dec
test
xor
sub
mov
xor
test
inc
xor
icebp
inc
test
cdq
arpl
pop
cmp
cmp
cmp
sbb
in
fmul
ds
push
movs
jne
(bad)
push
cmp
fcmovnb
fnsave
jae
jmp
and
ficomp
jmp
mov
aaa
movs
aad
addr16
cwde
inc
dec
inc
mov
pushf
push
sbb
push
inc
jecxz
xchg
or
mov
mov
loop
dec
push
iret
jl
dec
and
adc
jp
in
mov
jge
pop
xchg
ret
int3
aam
jl
mov
inc
adc
in
ins
mov
add
push
aas
mov
adc
xor
std
mov
dec
call
jp
sbb
out
dec
(bad)
fcomp
push
and
clc
repnz
push
add
dec
inc
sahf
shl
cmp
push
cmps
mov
cmps
or
call
xchg
aam
and
xchg
stos
sub
push
(bad)
jo
out
jle
sbb
inc
retf
in
cmp
sub
sar
sub
inc
pop
xchg
sbb
stos
and
or
ins
dec
(bad)
mov
sub
retf
fisubr
ja
jl
dec
xor
adc
bound
arpl
cmp
jmp
ret
jnp
dec
mov
xchg
cmp
sub
inc
push
mov
dec
cld
and
call
ror
xor
mov
cli
dec
jg
fwait
pop
mov
mov
xor
ds
add
mov
xchg
enter
es
popf
aam
stos
aad
out
pop
hlt
push
lea
dec
ficomp
sbb
leave
scas
stos
test
fdiv
cmp
or
xchg
mov
jb
or
or
bnd
(bad)
jbe
xchg
(bad)
pop
lahf
sti
sbb
push
or
sub
xchg
rcl
jae
xchg
and
jp
rol
into
and
mov
pop
xchg
scas
inc
mov
js
in
sub
pop
jno
inc
push
cli
in
aaa
lods
leave
pop
(bad)
lock
sahf
pushf
and
sub
cmps
dec
add
in
cwde
dec
jecxz
aas
movs
shr
cmp
push
adc
xchg
icebp
(bad)
pop
push
out
pop
jl
add
and
cmp
rol
add
ss
mul
shl
ins
push
jmp
mov
mov
push
popa
cmp
or
rcl
aam
xlat
xor
idiv
pop
(bad)
in
aam
dec
pop
je
in
jns
xchg
aas
mov
pop
jno
cmp
add
mov
pop
cmps
aas
retf
loopne
not
xor
and
xlat
inc
iret
pop
jmp
scas
mov
test
in
mov
xor
test
loopne
icebp
sub
cmp
xor
fs
out
leave
jecxz
ins
or
mov
lds
push
adc
ins
test
loope
outs
lds
loop
retf
in
cmp
stos
dec
and
mov
mov
pop
or
dec
aam
add
mov
dec
pop
jge
aam
loop
enter
fcomp
test
clc
cmp
jnp
scas
lahf
pop
mov
leave
cwde
pop
jmp
mov
call
fdivr
pop
pop
sbb
inc
jb
jmp
sti
xor
push
xlat
adc
sahf
mov
jns
enter
jne
ror
pop
ja
or
jmp
push
ret
(bad)
stos
leave
ins
retf
inc
pop
push
std
sub
std
pop
or
mov
or
xor
retf
mov
add
sar
pop
sub
cmc
mov
js
mov
push
popf
dec
add
pop
lahf
or
es
xor
stos
add
sub
cld
add
fidiv
and
jne
cli
test
cmp
(bad)
ficomp
cmp
stc
pushf
jb
(bad)
fstp
cmp
mov
sahf
push
pop
mov
fsubr
in
repnz
jne
daa
mov
push
fistp
push
pop
data16
jno
sahf
bound
fist
es
lahf
daa
imul
in
stc
hlt
sar
or
cmp
cmp
jle
leave
sbb
inc
(bad)
ror
xor
jmp
mov
int
mov
push
popa
push
test
and
xchg
or
repz
stc
icebp
jnp
mov
cmp
mov
(bad)
in
mov
mov
sub
cld
test
mov
xchg
cmp
and
cs
push
popa
popf
ja
xchg
into
sub
imul
hlt
stos
paddsw
into
adc
fdivr
dec
mov
or
adc
dec
sti
scas
call
inc
lods
ja
cli
jmp
push
mov
or
out
push
xlat
or
adc
icebp
mov
push
sbb
test
or
sbb
push
dec
mov
mov
cmps
cmp
mov
dec
repz
fsub
ja
mov
mov
mov
and
inc
fnstcw
mov
inc
sub
lds
inc
gs
jae
jo
enter
cmps
(bad)
dec
stc
add
or
test
push
stc
xchg
in
stos
(bad)
sti
shl
out
popf
repnz
je
inc
push
stc
jnp
adc
adc
and
mov
imul
ret
jl
or
pop
jl
(bad)
mov
daa
ja
and
movs
and
test
xor
mov
js
jne
iret
jle
mov
adc
arpl
mov
stos
nop
(bad)
jne
jmp
mov
adc
pop
push
fsubr
push
or
xchg
rcr
jae
dec
test
std
rol
cmc
mov
push
jg
shr
sbb
xchg
sbb
rol
xchg
mov
add
jg
pop
xchg
add
mov
std
popf
retf
hlt
imul
sub
out
lahf
(bad)
mov
xor
stos
(bad)
shr
stos
jbe
sub
lds
dec
call
int
sbb
and
add
setb
mov
fld
jge
sbb
data16
or
div
shl
movs
xor
push
arpl
rol
(bad)
rcl
mov
add
fnstcw
cmp
dec
xor
and
mov
mov
test
repnz
rol
sub
sub
add
xor
pusha
pop
and
mov
data16
jnp
pop
dec
jmp
jno
test
stos
loop
mov
loopne
jbe
or
aas
aad
(bad)
shl
test
dec
dec
cs
cmc
sbb
fld
adc
int3
cwde
mov
clc
fwait
sti
test
(bad)
std
cld
inc
fmul
stos
jmp
repnz
loop
mov
xor
arpl
sbb
in
mov
movs
lahf
dec
repz
cmp
shr
sbb
cmp
icebp
pop
mov
loopne
xchg
dec
lods
inc
inc
and
rol
push
or
lock
stos
mov
dec
xchg
addr16
inc
js
aas
mov
sub
shl
mov
and
aad
and
in
inc
ss
enter
push
cs
pop
add
ins
jne
pushf
mov
or
imul
cmps
adc
jb
fwait
dec
inc
dec
repnz
xchg
fiadd
aam
cs
sub
jle
xor
cmps
mov
dec
or
add
push
jnp
loop
in
xchg
inc
pop
jb
jno
stos
inc
push
xlat
pop
daa
mov
ins
aam
or
or
repnz
fidiv
sub
jge
int3
mov
aas
mov
loop
pop
(bad)
repnz
push
pop
sub
shr
jb
call
stc
ds
dec
jns
pop
inc
cmp
scas
ins
cmp
in
test
ret
mov
inc
js
mov
icebp
shl
outs
out
inc
mov
push
sbb
idiv
add
cmp
or
push
neg
mov
xchg
das
mov
mov
(bad)
push
dec
clc
mov
mov
pop
jecxz
xor
dec
inc
push
das
inc
and
push
scas
sub
push
imul
sub
xor
movs
add
or
lods
call
mov
pop
or
aas
sbb
sub
sub
(bad)
adc
sahf
inc
cld
into
jmp
(bad)
and
add
lahf
mov
push
pop
mov
sub
push
cwde
les
or
mov
(bad)
jg
sbb
in
jle
sahf
sub
inc
xor
mov
push
imul
pushf
stos
push
or
adc
xor
sub
out
or
push
repz
aad
rcr
mov
mov
xchg
adc
mov
movs
sbb
mov
ror
rcr
xchg
shl
jns
xlat
(bad)
mov
mov
xor
push
lods
test
ret
jl
mov
push
stc
sbb
dec
test
jo
hlt
call
jmp
int
sbb
mov
call
dec
cli
mov
pusha
sbb
xlat
ror
pop
inc
xor
les
aas
jns
or
int
mov
iret
(bad)
mul
outs
pop
xor
retf
or
push
mov
repnz
or
mov
pop
cmp
arpl
ins
(bad)
pop
js
mov
ins
dec
cmc
pop
mov
sbb
push
shl
or
mov
mov
movs
lods
lods
lahf
add
xchg
jnp
dec
pop
out
rcl
pop
enter
fwait
ds
xchg
loop
sbb
into
mov
cmp
ret
ret
ficomp
(bad)
sbb
sbb
cmp
jg
and
ror
sub
mov
adc
in
add
sbb
cdq
push
popf
int3
les
scas
fisubr
ret
stc
xchg
ds
std
pop
push
(bad)
into
lods
add
cmc
cmp
push
push
out
push
lock
cli
push
pop
daa
repnz
and
mov
xlat
mov
add
xor
fsub
sub
mov
aas
stos
outs
xchg
dec
or
cmp
push
cwde
mov
pushf
cmp
je
and
sub
aaa
sar
(bad)
rol
mov
hlt
scas
loop
xchg
cmp
jg
outs
adc
frstor
pop
mov
nop
sbb
out
mov
pop
xchg
mov
fcom
cmp
dec
icebp
dec
xlat
and
mov
xchg
adc
imul
popf
clc
jl
jno
mov
and
sub
repz
mov
outs
sbb
mov
popf
dec
push
aaa
inc
mov
ror
xor
dec
addr16
je
int
dec
inc
and
xlat
jl
pop
lahf
shl
inc
mov
xchg
xchg
xor
or
loope
mov
sub
add
sbb
jnp
(bad)
or
into
lahf
outs
cmp
in
out
jne
(bad)
push
jno
rol
arpl
fnstenv
xchg
hlt
jns
mov
push
mov
or
retf
xchg
cmp
cld
push
in
fidiv
stos
mov
sub
ffree
sub
cmp
loope
cmp
cmp
test
mov
adc
add
jle
mov
scas
out
mov
xchg
or
push
or
repz
xchg
fldenv
mov
xor
mov
sbb
xchg
jecxz
jg
add
push
sub
lods
lods
sub
imul
stos
mov
sbb
test
mov
repz
push
pop
sbb
or
fcmovu
mov
adc
pushf
arpl
xchg
sbb
add
pop
inc
or
cmps
outs
xor
es
mov
jo
pop
xor
repnz
adc
bswap
ret
sti
push
inc
pusha
(bad)
jae
scas
out
leave
in
inc
fwait
lock
imul
repnz
popa
retf
jbe
ins
shr
pop
repnz
sub
fisttp
xor
xor
mov
repz
add
inc
imul
sub
mov
add
pushf
stos
xchg
je
sub
sub
loop
iret
pop
push
dec
mov
fdiv
(bad)
cmp
sbb
pop
out
cmc
dec
test
add
in
cwde
test
and
pop
adc
adc
sbb
mov
out
and
jne
push
xor
sub
jno
popa
mov
xchg
(bad)
adc
aad
pusha
mov
test
cld
daa
test
mov
(bad)
jo
test
push
fstp
mov
call
mov
add
push
shl
test
sub
loop
sbb
mov
pop
add
ins
jmp
xchg
arpl
add
in
sbb
cmp
fs
cmp
lods
(bad)
int3
adc
pop
xor
enter
pop
and
ret
xchg
cmp
aad
cld
dec
icebp
lahf
cmp
cmp
fmul
mov
out
ins
test
or
mul
aam
nop
ficom
outs
and
neg
cmp
push
push
pop
scas
cli
popf
sbb
repnz
stos
inc
jno
dec
sub
div
test
ja
xchg
in
in
ret
fdivr
mov
xor
dec
arpl
(bad)
js
pop
loope
jnp
into
div
dec
push
mov
loop
sbb
pop
push
xlat
mov
cld
sub
and
shl
out
mov
jle
in
shr
sub
and
push
test
xchg
or
adc
imul
mov
pop
das
xor
adc
jnp
push
mov
jb
push
pop
and
or
into
in
mov
pop
cmp
ds
mov
or
out
sti
bound
sub
lahf
and
adc
mov
out
repnz
mov
xchg
repz
inc
repnz
and
ret
jno
(bad)
fisub
xor
xor
test
movs
sbb
jmp
sub
xlat
cmp
pop
push
sub
fiadd
repz
pop
test
jge
les
aam
ret
jmp
jge
repnz
div
fcomp
call
xor
or
fdivrp
cwde
ror
or
shl
stos
fwait
xchg
mov
out
(bad)
pushf
lods
test
fwait
sbb
mov
(bad)
sbb
sbb
dec
adc
pushf
push
sbb
pusha
sbb
ds
xchg
xlat
dec
pushf
push
adc
jae
push
jb
jb
cdq
lods
sub
inc
ror
xor
ins
sub
xadd
cwde
test
sbb
idiv
pop
mov
and
sub
movs
adc
(bad)
enter
ja
imul
adc
pop
inc
inc
adc
js
test
pop
jmp
jo
inc
pop
mov
test
out
pop
add
xchg
mov
(bad)
(bad)
fst
xchg
aas
outs
imul
pusha
pmulhw
ds
out
push
mov
mov
mov
xor
inc
and
xlat
sbb
dec
imul
lahf
or
inc
push
outs
fadd
in
inc
cmp
inc
cmp
ror
jge
lods
xchg
add
xchg
mov
loopne
cmp
adc
daa
in
inc
idiv
mov
vmovdqu
mov
cmps
cmp
sub
aam
je
mov
mov
jg
xor
jge
popa
gs
jne
mov
cdq
xchg
in
scas
mov
lock
shl
mov
stos
jns
lds
repz
popf
fs
clc
sub
shl
xor
xchg
or
jno
imul
sbb
loop
stos
bound
jmp
outs
sahf
cmp
ja
or
or
test
imul
cmp
mov
les
lea
test
dec
fidiv
es
sbb
(bad)
fnsave
rcr
or
loope
push
out
fisttp
stc
js
jnp
push
popf
inc
data16
lods
jmp
pop
shl
and
dec
dec
das
icebp
sbb
mov
xchg
push
loop
cmp
xor
xor
cs
push
pop
mov
hlt
int
out
lea
and
xchg
sub
mov
lods
push
jecxz
pushfw
sti
adc
call
scas
inc
dec
(bad)
push
push
sahf
jl
leave
fisttp
movs
push
mov
xchg
pop
dec
cli
in
call
in
sbb
(bad)
cmps
int
inc
xor
mov
sub
dec
jecxz
add
dec
stc
push
sbb
repnz
iret
cld
fild
dec
add
ins
or
jle
push
test
stos
mov
in
adc
jbe
ret
clc
je
ins
daa
jbe
cwde
sbb
sub
sbb
inc
(bad)
jbe
repnz
and
jle
(bad)
jo
popf
add
sub
xchg
fdiv
lahf
sbb
and
xchg
xchg
pushf
inc
dec
mov
(bad)
sbb
adc
dec
jnp
inc
or
loop
dec
mov
mov
pop
pop
sbb
retf
mov
cmp
adc
xor
add
jmp
in
std
cmps
out
leave
sbb
mov
cmps
xor
jbe
das
inc
xchg
jge
popa
jg
mov
shl
jmp
in
sub
rol
out
mov
inc
retf
push
dec
sub
pop
jnp
pop
(bad)
sub
sahf
sub
mov
push
int
call
pusha
jnp
test
sub
push
mov
lahf
sub
add
(bad)
pop
push
sahf
dec
jge
mov
clc
mov
fwait
enter
fsubr
retf
push
mov
ds
sub
jl
dec
jge
loope
cmp
pop
cmp
movs
mov
inc
sub
scas
lea
jle
movs
call
repz
dec
data16
sbb
mov
push
lock
inc
push
mov
pop
dec
fild
out
adc
lods
cmps
fst
pop
xor
fnstsw
retf
(bad)
mov
or
fyl2x
push
dec
cmp
fcmovnu
jnp
cmp
mov
test
rcr
adc
(bad)
loopne
sub
cmp
inc
and
mov
or
mov
stc
call
pop
adc
rol
jb
loopne
push
pop
push
xchg
outs
stc
nop
scas
movs
aas
mov
ret
or
in
adc
mov
daa
dec
into
cmp
mov
pusha
push
push
aaa
mov
mov
scas
pop
aam
sub
nop
inc
sbb
in
scas
stc
adc
pushf
ins
xchg
push
jo
push
sub
inc
mov
dec
mov
or
cmp
jecxz
imul
gs
adc
iret
push
jge
jecxz
sbb
in
mov
enter
hlt
daa
mov
sub
enter
pushf
inc
dec
aas
xchg
mov
in
test
(bad)
sbb
mov
mov
jmp
xchg
das
in
loop
out
imul
fcmovnb
and
mov
loop
movs
std
pop
mov
scas
and
and
xchg
jecxz
sbb
hlt
jne
(bad)
jns
test
add
jl
ja
inc
sub
push
pop
iret
iret
outs
scas
aad
push
cmc
dec
pop
lods
fsubp
pop
or
fadd
mov
xor
lods
push
jmp
movs
jbe
loop
in
retf
jns
adc
cmp
jae
gs
(bad)
pop
jne
jecxz
inc
or
jmp
out
add
out
cmc
add
clc
mov
inc
nop
dec
stos
(bad)
daa
push
jns
sar
jno
mov
ins
pop
retf
out
add
jno
xor
mov
jmp
lea
(bad)
cld
stos
adc
pop
imul
xor
push
cmc
outs
popa
mov
stc
cmp
aad
hlt
jg
cmps
sub
jle
xchg
jbe
iret
jge
rcl
push
ret
pop
jge
mov
pop
push
pop
mov
stos
fwait
sub
lock
adc
push
dec
inc
sar
dec
int3
adc
loope
push
int
pop
les
(bad)
out
adc
jbe
lahf
push
sub
jle
mov
cmps
fs
addr16
push
(bad)
inc
sub
jg
jmp
adc
loopne
movs
daa
aas
jecxz
cmc
xor
aad
sub
add
inc
sub
mov
and
sar
sbb
dec
ret
int
shl
(bad)
mov
xor
fs
aad
das
xlat
cmp
pop
xor
cwde
push
(bad)
mov
std
jge
dec
xlat
jmp
xor
add
jge
sbb
outs
ret
test
mov
add
stc
cmps
dec
into
dec
cmp
mov
dec
xor
fdiv
push
pop
popa
jmp
imul
jb
xchg
mov
cs
or
xchg
call
adc
scas
jae
jmp
sbb
stos
sub
push
repz
dec
movs
nop
imul
int3
jnp
mov
loopne
pop
push
and
and
es
pop
push
dec
jg
sbb
stos
push
test
shld
xor
sbb
cmp
scas
dec
sub
ins
leave
mov
xor
ror
cld
xchg
xchg
dec
adc
pop
sub
not
mov
jl
jecxz
mov
loop
ret
mov
mov
adc
imul
jno
iret
out
lods
mov
or
push
sub
stos
shr
mov
ror
push
clc
loop
mov
sti
retf
ret
fdiv
inc
push
mov
stos
xchg
mov
loope
mov
pop
push
xor
cmp
sbb
daa
push
push
push
mov
dec
jb
cmps
add
repz
add
jg
scas
shl
mov
adc
ss
cmp
jmp
pop
xor
and
ja
push
fldcw
ds
scas
xchg
shr
(bad)
sub
cmp
mov
addr16
mov
cmp
std
sbb
call
inc
xchg
shl
or
aas
or
xor
fs
jge
mov
test
test
or
sub
es
sub
xor
scas
add
popa
pushf
imul
movs
sub
mov
push
jae
add
addr16
or
ret
mov
dec
pop
inc
out
fbld
fidivr
dec
jg
das
mov
sub
pop
fmul
inc
lods
xchg
pop
les
movs
div
or
xor
push
je
adc
lock
push
mov
stos
fcomp
inc
cmp
pop
jne
xchg
or
pop
loopne
pusha
ror
clc
push
push
pop
iret
test
loop
fidiv
das
mov
into
aad
dec
mov
rcr
or
jb
sub
outs
push
xchg
nop
cmp
icebp
cmp
jb
jno
das
jp
xchg
test
adc
mov
mov
xchg
ja
call
enter
in
aam
into
lods
or
jae
push
xchg
xor
or
push
sbb
dec
int
pop
xchg
rcl
xchg
test
push
sub
popa
arpl
clc
mov
inc
sti
jmp
adc
shr
push
mov
xor
fisubr
lock
jo
lahf
mov
stos
nop
sbb
sbb
sahf
leave
dec
mov
fdivr
push
sub
shl
push
shl
enter
adc
daa
xchg
xlat
addr16
and
pop
addr16
mov
sbb
test
stc
or
mov
pop
xchg
out
jne
mov
in
dec
sar
lods
cmp
in
stos
and
clc
ficomp
xlat
xchg
cmp
push
mov
inc
push
ficom
movs
dec
leave
cmp
fldenv
call
cmp
add
xor
lahf
mov
mov
in
inc
dec
fimul
test
out
mov
push
fs
cld
cmp
push
mov
lds
repz
add
jns
jae
push
in
jmp
push
pop
icebp
arpl
popa
pop
pop
into
dec
mov
ss
nop
pop
sub
cdq
cmp
(bad)
lods
mov
ret
in
ret
in
push
mov
push
inc
jp
outs
pop
(bad)
xor
pop
jne
aad
mov
and
movs
scas
ret
movs
icebp
lahf
call
push
add
(bad)
lock
xor
mov
in
mov
inc
jp
sbb
dec
dec
xchg
jne
sahf
gs
add
sub
sub
jne
retf
or
lods
push
or
xchg
fld1
mov
fadd
mov
mov
dec
xchg
ins
call
fmul
cmps
xchg
add
jle
(bad)
sub
in
sbb
xor
stos
mov
pop
ss
sti
aam
mov
mov
pop
jmp
sub
fsub
jbe
xchg
cdq
jnp
leave
jne
int3
outs
clc
dec
adc
and
sbb
ficomp
mov
pusha
aam
sti
pop
mov
jmp
movs
stos
dec
repz
enter
pop
dec
xchg
adc
movs
test
hlt
mov
pop
or
mov
mov
ret
xchg
xchg
mov
arpl
test
std
and
dec
sub
mov
arpl
fdiv
fadd
clc
sbb
mov
fwait
or
or
inc
pop
adc
sub
pop
mov
xor
sub
cdq
(bad)
mov
dec
adc
jl
cmp
mov
jmp
pop
scas
fwait
mov
xor
fidivr
lods
push
push
popf
faddp
mov
ret
mov
push
add
retf
pop
sbb
cmc
enter
sbb
sar
mov
xchg
dec
jmp
iret
sahf
pop
jl
xchg
lods
push
pop
push
icebp
adc
add
cwde
ss
push
add
repz
mov
cmc
cmp
inc
mov
inc
sbb
outs
(bad)
mov
stos
sbb
mov
(bad)
int3
xchg
in
call
dec
in
nop
mov
(bad)
retf
in
retf
shr
push
aam
sbb
fiadd
mov
mov
int3
call
jns
shr
xchg
lods
mov
inc
jge
inc
jg
pop
or
call
ja
adc
int
bswap
push
cwde
xor
fidivr
mov
loopne
movs
inc
cmp
pop
xchg
aas
mov
int3
cmp
ins
pop
dec
push
ss
or
mov
loopne
fld
sar
push
shl
aas
dec
inc
jnp
iret
(bad)
push
mov
je
movs
mov
ins
fld
xchg
icebp
adc
sahf
cmp
push
mov
and
mov
sahf
push
dec
iret
lahf
movs
lods
sub
cmp
mov
sub
dec
stos
fwait
xchg
neg
aas
cmp
repnz
retf
dec
or
or
in
test
lods
(bad)
jmp
clc
or
js
push
xchg
lods
sub
leave
fisttp
push
inc
xor
ss
(bad)
pop
push
es
shl
icebp
sub
dec
lods
push
xchg
test
ins
push
xchg
mov
dec
into
or
mov
icebp
mov
xor
sub
sbb
fsubr
sbb
xor
les
dec
xor
aam
mov
cwde
loopne
in
xchg
cmp
cs
ins
out
pop
rcl
xchg
repz
mov
xchg
cwde
or
popf
xor
and
sub
mov
push
mov
add
jnp
iret
loopne
lock
pop
jl
jmp
mov
cdq
imul
js
sub
fnstcw
and
cs
jo
mov
popf
mov
sbb
mov
add
xor
mov
mov
jne
test
cs
sahf
xchg
cmp
or
fdivr
and
fidiv
and
mov
mov
arpl
xchg
movs
dec
in
sub
jns
sbb
clc
dec
mov
xchg
jmp
bound
jae
lahf
out
jb
mov
es
retf
xor
out
in
sahf
jne
and
pop
dec
sub
or
mov
xor
out
aaa
dec
mov
sub
fisttp
pop
xchg
cmp
test
cmps
sbb
adc
adc
dec
add
inc
xchg
xchg
sbb
test
dec
pop
sbb
or
scas
and
repz
sti
pusha
sbb
std
or
stc
(bad)
mov
test
push
das
repz
scas
aaa
inc
fidivr
mov
pop
call
push
ja
cmp
pop
sbb
xchg
aad
sub
pop
in
push
or
cmp
pop
(bad)
push
loopne
cwde
daa
sub
int3
cdq
mov
pusha
mov
in
mov
call
les
jmp
dec
loope
out
(bad)
ffree
xchg
fdiv
cmp
cmp
push
mov
jmp
adc
leave
sti
jno
in
pop
xchg
sub
mov
xchg
lea
and
and
mov
push
(bad)
(bad)
pusha
enter
jo
stc
cmps
ror
and
mov
pop
out
test
dec
inc
jge
and
add
mov
mov
sub
ja
ja
mov
test
jno
leave
out
pop
xchg
retf
ins
pusha
mov
dec
inc
out
cmp
test
loopne
movs
inc
arpl
test
sar
xchg
or
movs
add
or
fsubrp
(bad)
bound
jb
mov
or
fnstcw
sbb
mov
imul
les
stc
and
stc
mov
pop
lea
lea
sbb
clc
mov
fnstcw
and
push
sbb
jns
jmp
sbb
inc
xor
daa
scas
push
into
jmp
cwde
inc
xchg
adc
xchg
stc
jbe
ror
pop
mov
ins
cdq
pop
sbb
sub
icebp
sub
push
ficom
sar
mov
xchg
pop
ror
addr16
mov
idiv
push
sti
push
dec
jmp
add
sub
loopne
loop
dec
les
and
das
pop
mov
call
adc
pop
cmp
mov
cmp
sti
mov
xor
enter
xor
xor
push
cdq
test
cmp
mov
mov
xor
stos
cmp
ret
movs
xchg
loop
pop
ret
xor
out
mov
sbb
shl
jge
pop
mov
retf
mov
(bad)
mov
cld
idiv
sbb
jae
mov
jle
add
dec
pop
ss
xchg
add
dec
pop
xor
sub
je
xlat
xor
xchg
push
mov
retf
inc
lods
xchg
push
xchg
sub
leave
add
loop
repz
cmc
xor
jge
out
adc
lock
pop
push
in
and
or
ror
inc
fldl2t
rol
or
add
mov
adc
push
jno
test
mov
mov
adc
cmc
cmc
imul
xor
cmp
retf
fidivr
and
inc
add
mov
stc
int3
pop
mov
sbb
adc
xchg
and
outs
test
mov
lods
stos
fprem1
daa
aad
mov
(bad)
fs
mov
mov
push
adc
push
and
push
add
je
mov
cmc
sbb
jp
sub
pop
mov
sbb
mov
ficomp
mov
jge
call
scas
jb
push
cmp
jo
cmp
int
(bad)
popf
adc
pusha
(bad)
out
push
xor
aad
arpl
rol
call
dec
xchg
js
fldcw
in
mov
jmp
jbe
inc
cmp
repz
enter
test
mov
or
mov
(bad)
mov
rol
leave
mov
and
in
ins
mov
rcl
out
arpl
xchg
sbb
push
mov
jae
in
dec
ret
cmp
icebp
test
dec
fxch
cmps
icebp
fs
test
push
mov
out
dec
pop
repnz
aas
ins
lock
mov
test
es
scas
pop
adc
das
cmp
sub
mov
dec
repz
pushf
enter
int
gs
add
pop
(bad)
sub
pusha
jae
retf
fld
shr
stos
xor
aad
nop
xchg
xchg
test
fisttp
sar
cmp
rcr
adc
sub
jb
stos
sub
lahf
ret
jg
jo
xchg
out
sbb
pop
enter
mov
cmp
retf
(bad)
test
xchg
int
push
jp
mov
pop
pop
mov
mov
in
pop
and
mov
or
mov
jno
push
mov
loopne
ret
inc
or
jg
into
int
sbb
rcr
ficom
cwde
imul
std
add
pop
adc
xor
sub
mov
popa
add
fmul
aam
ins
mov
inc
je
mov
inc
sbb
sub
sar
out
cmp
and
jnp
fwait
xor
dec
(bad)
retf
push
xor
loope
dec
mov
push
cwde
gs
cmp
movs
mov
dec
mov
enter
mov
pop
sub
test
test
and
rol
and
lds
cdq
sti
ins
ins
shr
push
sbb
push
das
mov
in
sub
and
sub
lods
ins
mov
sub
dec
fidivr
pushf
sbb
xchg
or
mov
sub
push
pop
mov
lahf
bound
sbb
retf
sub
and
cmps
and
addr16
push
xchg
clc
adc
pop
mov
push
lds
xor
pop
mov
ins
xchg
outs
or
xor
mov
arpl
imul
iret
loope
fcom
outs
loope
push
arpl
jg
jle
xor
mov
or
mov
fstp
mov
jmp
dec
dec
loope
sbb
xchg
xchg
ret
std
test
test
and
lock
(bad)
out
mov
lahf
mov
push
fild
adc
push
int3
cmp
lods
pop
cmp
(bad)
push
inc
xchg
fld
call
jns
cdq
pushf
jmp
pop
retf
iret
and
fsubr
mov
jmp
das
adc
scas
stc
sbb
push
nop
inc
and
loop
add
dec
(bad)
jbe
mov
shl
daa
cli
cli
adc
sbb
add
jmp
aaa
cmp
lods
or
cmp
pusha
mov
scas
jmp
retf
jmp
sbb
push
inc
dec
outs
push
mov
or
adc
pop
aas
mov
gs
sub
dec
and
(bad)
xchg
xor
movs
les
ja
xlat
les
out
mov
push
cld
pop
in
popa
dec
fdivr
dec
idiv
xlat
icebp
ror
add
and
mov
(bad)
jmp
push
jbe
cdq
je
mul
mov
adc
es
es
arpl
repnz
fs
dec
jns
mov
ret
repz
icebp
daa
ins
dec
outs
call
adc
inc
mov
sub
jg
shl
int3
jbe
jbe
stc
neg
or
jb
inc
or
add
cmp
out
retf
adc
leave
pop
les
xor
sbb
xchg
gs
pop
push
push
xchg
push
fimul
mov
pushf
cmp
inc
sub
mov
jge
add
out
push
add
and
push
inc
adc
adc
in
xor
xor
mov
inc
fnsave
dec
and
shl
daa
cmps
stos
add
inc
sbb
dec
div
push
(bad)
arpl
jns
enter
mov
mov
jle
das
xor
nop
xor
push
in
cmp
out
jo
pop
push
pop
dec
cmp
iret
or
call
mov
adc
add
aaa
dec
aaa
in
jecxz
push
dec
outs
fisttp
stc
and
test
nop
cld
mov
test
pop
lods
inc
inc
fstp
push
in
outs
fucomi
push
inc
dec
dec
inc
sbb
xchg
sbb
hlt
pop
(bad)
pop
not
and
(bad)
pushf
scas
push
jnp
adc
ss
sti
jge
inc
mov
js
mov
fdiv
dec
call
push
ret
xchg
sar
push
add
loopne
mov
adc
ror
sbb
and
lock
retf
inc
addr16
mov
stos
das
je
mov
repnz
lods
and
jle
arpl
les
mov
adc
ficomp
not
into
fild
cmc
dec
inc
push
mov
lea
js
push
test
pop
jecxz
add
mov
push
lea
sbb
adc
pusha
sub
xlat
jle
mov
stos
scas
mov
or
imul
adc
dec
cmp
add
cmp
mov
jae
dec
retf
loope
outs
mov
jg
lods
stc
fs
outs
or
ins
jne
push
add
push
jnp
test
sbb
mov
ins
jmp
fnsave
xchg
xchg
rol
sub
nop
test
xchg
push
push
into
call
fld
add
push
sub
jl
sub
sbb
pushf
mov
pop
mov
sar
mov
sbb
stos
inc
jp
xchg
pop
mov
jg
mov
fbld
out
daa
inc
je
(bad)
xchg
and
add
sub
sbb
pusha
mov
shl
pop
arpl
mov
lds
cmp
aam
ret
test
pusha
movs
fwait
jge
sti
cdq
jg
inc
xchg
add
and
or
mov
(bad)
adc
scas
mov
mov
jg
jge
stos
clc
aam
xchg
cmp
or
sbb
xor
retf
cmp
test
in
mov
test
dec
stos
stos
push
lods
cmc
dec
sar
rcl
lds
mov
clc
jl
mov
pop
push
mov
jbe
inc
mov
jns
mov
mov
and
push
cs
clc
sti
call
lahf
push
not
sbb
dec
mov
add
push
(bad)
(bad)
sbb
cs
push
repz
push
(bad)
enter
daa
fistp
ins
inc
aaa
xor
push
sub
movs
or
xor
into
jno
fisub
ins
adc
mov
fst
dec
cli
les
add
dec
shr
enter
push
add
or
cmps
aas
sub
mov
(bad)
ins
xor
daa
(bad)
or
loop
imul
add
sar
pop
pop
xchg
adc
pusha
fimul
cmps
call
sbb
cli
cmp
pop
iret
pushf
pop
nop
ret
push
std
and
loope
mov
bound
or
enter
mov
out
push
js
sbb
xor
pop
jo
inc
imul
scas
adc
es
in
dec
sahf
inc
shl
adc
xlat
sbb
xchg
jge
sub
mov
adc
ss
sti
mov
and
(bad)
cs
fs
sub
dec
xchg
clc
xchg
fdivr
and
dec
jo
fs
rcr
push
iret
dec
int3
ror
test
pop
(bad)
mov
dec
adc
pop
and
inc
mul
scas
sub
add
pop
imul
sub
inc
out
dec
out
ja
jne
mov
xchg
out
xchg
xor
jae
push
mov
ret
shr
adc
jno
sbb
mov
nop
stc
and
jb
xchg
(bad)
inc
adc
dec
and
in
int
add
hlt
jp
into
mov
sbb
push
push
sbb
xor
adc
pop
add
push
push
sbb
es
stos
sub
pushf
inc
dec
test
push
out
dec
mov
lahf
in
add
es
int
xchg
adc
imul
mov
sar
std
cli
popf
(bad)
sub
mov
and
lahf
jno
jge
xor
xchg
mov
outs
cld
jo
inc
pop
add
jp
ror
adc
popa
push
pop
dec
int3
inc
push
xor
add
pusha
loopne
mov
adc
jg
test
push
mov
adc
pop
jmp
jnp
pop
cmp
pop
and
add
sub
add
ins
rol
pop
mov
iret
(bad)
add
or
cmp
mov
test
loope
data16
cdq
in
mov
icebp
test
add
jnp
and
iret
jno
cmp
gs
mov
shl
fsubr
outs
call
inc
les
std
push
dec
movs
pop
mov
mov
cmp
sub
ja
movs
push
iret
mov
rcr
jno
ja
xor
sbb
mov
and
mov
and
pusha
dec
cmps
xor
adc
add
mov
or
aad
mov
std
repz
mov
scas
or
les
xchg
adc
fwait
xchg
nop
xor
push
cmp
in
xor
ret
xchg
shl
pop
mov
(bad)
inc
mov
inc
push
push
pop
jmp
mov
je
dec
sub
arpl
mov
and
ins
xchg
mov
es
out
inc
sub
shr
ret
or
cmp
loope
mov
mov
mov
mov
mul
xor
push
test
jmp
fst
and
xchg
add
dec
fst
jnp
je
out
cmc
aas
inc
scas
out
sub
push
outs
sbb
and
mov
cvtps2pi
ss
pop
packsswb
dec
mov
das
into
adc
xchg
adc
inc
ins
mov
push
out
inc
and
daa
push
mov
or
retf
xchg
(bad)
cmp
repnz
fist
rcl
aad
xchg
sub
add
outs
mov
push
mov
shl
jle
or
in
jge
adc
retf
ret
mov
push
cs
add
mov
sbb
push
add
fild
push
mov
outs
xchg
cmp
rep
neg
push
mov
or
xchg
push
pop
sbb
mov
in
aaa
(bad)
adc
pop
adc
and
cmc
ja
je
dec
or
push
cwde
sbb
pop
mov
cmp
and
out
pop
cmp
dec
pop
cs
sub
mov
adc
loop
retf
jl
add
(bad)
mov
call
mov
fcmovnu
inc
jbe
cmp
(bad)
mov
cmp
cmps
dec
sbb
sbb
add
cli
sub
sub
adc
pop
scas
or
jp
xchg
movs
mov
ss
lds
ja
jmp
mov
mov
pop
nop
ins
aam
jae
push
sbb
inc
adc
retf
mov
mov
jb
inc
pop
call
lds
repz
cmc
leave
mov
fwait
adc
and
xor
rcl
mov
lea
sub
inc
cmp
fdiv
add
mov
cmp
fst
cmp
xchg
fisttp
jle
fs
int
xchg
cmp
cmp
dec
call
xor
pop
imul
lds
pop
(bad)
mov
retf
test
out
rcl
xor
in
push
dec
jno
dec
xor
cmp
and
popf
cmp
(bad)
cdq
jmp
cmp
test
aaa
(bad)
xchg
outs
jle
pop
mov
add
inc
push
popa
add
jbe
test
or
clc
mov
mov
jl
mov
cmp
push
sbb
outs
movs
push
pmovmskb
push
pusha
pop
enter
js
cmp
push
shl
sbb
mov
outs
xchg
push
dec
clc
add
xchg
pop
mov
pushf
adc
lea
repnz
dec
mov
fst
scas
adc
pop
(bad)
rol
ja
lahf
retf
mov
push
sub
inc
out
clc
mov
mov
stos
cmp
dec
sbb
adc
cmp
sub
dec
xchg
mov
adc
jno
pop
fadd
stos
lea
gs
xchg
dec
call
ja
add
jecxz
pop
leave
xor
stos
xor
adc
popf
mov
push
movs
es
out
or
adc
ds
fdiv
jnp
pop
(bad)
je
adc
cmp
in
outs
push
adc
iret
popa
cmp
adc
(bad)
imul
pusha
nop
popf
addr16
mov
jae
dec
and
xchg
lea
loop
scas
popfw
test
mov
nop
push
int3
movlps
cs
cmps
inc
xor
inc
fwait
addr16
imul
mov
inc
lods
jmp
jne
pushf
fidivr
mov
mov
stos
in
push
ror
rol
cmp
jp
xchg
push
hlt
(bad)
pop
std
shr
div
mov
pop
dec
inc
xlat
jbe
rol
dec
dec
add
call
or
mov
jne
or
int
popa
dec
jns
in
pop
push
fwait
adc
xchg
and
push
xchg
push
push
xchg
ins
lods
loop
movs
push
and
icebp
adc
xchg
inc
imul
mov
js
xchg
mov
xchg
in
adc
jne
pop
xlat
sub
dec
cmp
jle
cdq
xchg
imul
in
arpl
or
sub
aad
xor
sbb
cdq
jle
push
sti
push
push
lahf
push
adc
pop
inc
push
cmp
ins
ss
push
aam
xor
dec
push
test
hlt
jl
sub
cmp
push
inc
clc
loopne
jbe
mov
pop
push
push
or
bound
xor
cmp
pop
push
in
mov
lods
mov
mov
inc
cmp
sub
push
mov
xor
xor
add
jo
sar
jnp
push
inc
outs
add
push
ret
mul
cmps
ror
out
sbb
cs
xchg
ins
sbb
pop
(bad)
push
das
popa
aam
push
ds
rol
mov
push
pop
jge
jne
nop
xchg
and
and
jge
mov
sbb
call
sbb
int3
sbb
cmps
sub
xchg
rcl
inc
push
push
inc
and
imul
or
aas
add
(bad)
xchg
je
test
jne
mov
ror
dec
xor
hlt
jno
pop
cs
push
pop
cmps
popa
xchg
and
xchg
ss
aam
popa
and
(bad)
ins
sbb
movs
and
mov
mov
pop
mov
ja
mov
ins
sbb
mov
adc
xlat
sti
sar
cmp
cmp
repz
cld
adc
mov
in
push
in
mov
stos
(bad)
loop
aam
xchg
stc
rol
arpl
repz
jbe
popa
imul
sub
gs
cmp
cld
(bad)
xor
dec
push
pop
xor
in
cmc
pop
gs
daa
movs
rol
clc
add
mov
jb
ss
inc
push
popa
rcr
or
fild
push
mov
xchg
cmp
mov
push
in
test
dec
fisubr
sti
pop
in
inc
lods
pop
mov
(bad)
jbe
(bad)
lods
xchg
inc
icebp
shl
and
dec
(bad)
adc
(bad)
xchg
je
sbb
loopne
jb
sahf
aaa
mov
inc
sbb
jecxz
adc
ret
xor
dec
mov
mov
mov
pop
nop
jge
cmps
and
cmp
syscall
mov
dec
(bad)
cmp
mov
aam
dec
mov
adc
std
mov
cdq
push
add
push
pop
cmp
xchg
xchg
test
or
mov
push
fadd
jns
cwde
xchg
neg
cmp
ret
test
loop
in
ret
pop
(bad)
pop
rcl
mov
scas
xchg
xchg
sub
xchg
mov
xchg
lahf
loope
and
dec
and
sahf
or
cwde
sub
imul
outs
pop
fst
xchg
popa
mov
sub
add
pusha
jo
xchg
lock
add
std
mul
mov
not
sar
inc
popa
adc
xor
mov
push
scas
ret
adc
xchg
inc
(bad)
push
icebp
and
sub
push
dec
mov
fwait
int
div
mov
adc
cmp
bound
xchg
scas
sub
(bad)
aas
sbb
gs
sub
fstp
imul
inc
movs
out
das
shl
enter
push
ss
inc
xlat
stc
cli
or
stc
sbb
or
mov
jmp
cmp
call
inc
xchg
imul
ror
addr16
mov
and
and
popf
add
lea
dec
fsub
mov
inc
add
pop
sbb
hlt
xchg
cmp
fldenv
loopne
sbb
gs
xchg
inc
xchg
imul
mov
push
cmp
jno
or
xchg
clc
add
div
mov
nop
mov
jl
in
out
or
fiadd
das
jg
sti
mov
cmc
je
fmulp
inc
pop
dec
aad
mov
or
pop
nop
jo
stos
or
dec
adc
mov
push
push
and
je
push
adc
mov
inc
aam
(bad)
jp
imul
jne
mov
inc
les
jnp
dec
mov
and
loope
leave
call
popf
jmp
mov
xchg
and
inc
jg
cmp
and
cmp
inc
enter
sbb
push
mov
or
xlat
mov
faddp
or
adc
dec
cmp
jmp
lods
ret
adc
stos
mov
mov
cmp
leave
lds
leave
pop
fisttp
lock
(bad)
xchg
lods
stos
sti
out
fsubr
mov
nop
xlat
jg
mov
imul
cmp
sbb
pop
(bad)
out
stos
dec
cld
pop
fs
leave
cdq
inc
sub
cmp
fcom
or
dec
int3
imul
(bad)
add
pop
inc
popa
push
popf
mov
dec
frstor
cli
data16
xchg
xchg
jb
in
sub
pop
xchg
enter
push
rol
or
inc
fidiv
mov
test
retf
test
sbb
add
mov
icebp
not
cs
push
call
(bad)
adc
push
out
push
cld
push
or
mov
mov
pop
xchg
jbe
or
adc
xor
sub
mov
xchg
int3
inc
xchg
or
addr16
push
push
(bad)
fild
push
mov
pop
push
loopne
and
aas
push
ret
cmps
xchg
mov
pop
scas
cmp
mov
stos
mov
imul
pop
jl
and
out
add
in
data16
pop
xchg
loope
(bad)
retf
rol
aaa
out
pop
mov
and
pop
inc
xor
cmc
sti
adc
pop
cld
mov
jp
mov
fwait
sbb
lock
in
mov
push
sub
sahf
cwde
ins
sbb
sub
add
sub
mov
cmps
enter
or
dec
sub
jo
dec
loop
mov
jle
push
sbb
out
sub
xor
add
lds
popf
imul
dec
std
(bad)
outs
enter
lock
mov
cmp
cmc
aad
loop
inc
loope
cmp
pop
adc
sahf
push
add
sar
xchg
jmp
data16
stos
daa
repz
movs
mov
mov
add
mov
int
mov
aam
push
fidiv
cmp
pop
icebp
call
jl
xor
sub
stos
and
xchg
jae
(bad)
adc
sub
sbb
and
aas
xchg
(bad)
dec
pop
icebp
aaa
rcl
xchg
mov
push
(bad)
cmps
lea
ins
inc
lahf
cmps
dec
into
aaa
add
cli
and
sub
sbb
jbe
sub
push
mov
push
mov
clc
ins
idiv
xor
jo
push
daa
mov
rcl
gs
jmp
cdq
stos
sbb
dec
lods
xchg
in
and
jns
gs
aam
call
add
rcl
and
aas
cmp
dec
or
mov
fld
pop
adc
mov
lods
fwait
pop
stos
ins
mov
jmp
shl
push
xor
(bad)
sbb
aaa
xchg
add
aas
push
and
xor
dec
scas
call
call
or
imul
fs
push
loope
pop
ds
xor
int
test
stos
arpl
fcom
push
movs
mul
rcl
inc
test
push
in
sbb
add
xchg
inc
dec
and
pop
fnstenv
cmp
imul
sbb
je
in
ret
jecxz
aaa
std
repnz
fbld
push
shr
add
cmps
js
aas
jl
loopne
adc
adc
mov
loopne
mov
jbe
aam
retf
faddp
push
dec
pop
out
and
sub
jmp
push
jg
test
push
mov
loope
repnz
xchg
jne
ret
bound
mov
leave
repz
retf
into
and
or
sub
sbb
ja
push
pop
aas
sbb
sub
jns
adc
jnp
or
or
push
sub
push
gs
in
push
(bad)
cwde
cmp
retf
sub
push
cli
cmp
pop
movs
sahf
cdq
push
(bad)
je
jp
(bad)
cmp
inc
in
xchg
and
xchg
jnp
dec
enter
sbb
sbb
icebp
int3
scas
lock
leave
add
mov
stos
jno
aaa
cmp
leave
out
(bad)
pushf
add
fdiv
mov
shl
rol
add
lock
(bad)
and
inc
imul
stos
pop
push
jge
imul
adc
sub
xor
mov
cmp
add
and
or
fisub
mul
retf
or
or
daa
(bad)
es
fsubp
pop
pop
and
call
push
das
test
mul
out
mov
pop
xlat
xor
mov
jle
(bad)
dec
sub
test
and
inc
lea
cwde
add
dec
movs
or
dec
(bad)
xor
test
dec
int
mov
sti
jae
push
push
fist
cli
stc
sbb
xor
clc
sub
inc
sbb
mul
pop
outs
movs
arpl
xchg
mov
pop
pusha
mov
cmp
xor
out
repz
jl
mov
inc
bound
bound
mov
cmp
push
cmp
or
iret
dec
aas
addr16
test
inc
jge
pop
adc
xor
and
jge
sti
jp
sub
fcom
xor
mov
(bad)
push
sub
hlt
dec
pop
cmp
sbb
std
sub
and
inc
test
push
sbb
xlat
arpl
sub
mov
mov
adc
add
and
in
mov
xchg
add
enter
mov
das
repnz
adc
jecxz
mov
mov
cdq
and
retf
sub
pop
add
add
dec
mov
cmps
es
or
xor
sub
xor
pushf
push
mov
bound
sub
movs
mov
inc
mov
jno
call
push
xchg
in
inc
mov
inc
or
sahf
movs
enter
pop
xor
xlat
hlt
outs
mov
(bad)
int3
fst
adc
(bad)
push
pop
jecxz
or
xor
int3
movs
and
iret
sub
repnz
cs
pop
or
pusha
fs
pop
mov
rcl
mov
pop
push
jo
cs
dec
pop
ds
push
mov
test
dec
ja
pusha
sub
mov
add
jg
gs
pop
adc
movs
jle
mov
adc
xor
leave
aad
cmps
(bad)
xor
xchg
fnstsw
add
bound
add
pop
and
push
in
(bad)
or
ficomp
loopne
jp
(bad)
in
xor
pusha
test
adc
mov
ret
fidiv
(bad)
mov
cmp
jmp
mov
inc
jbe
retf
iret
int
icebp
stos
sub
push
mov
add
jmp
stos
cmp
xchg
es
sbb
or
scas
clc
(bad)
mov
cmp
xchg
fmul
lods
inc
mov
rcl
sbb
cmp
loop
std
inc
push
jno
mov
test
aam
popf
inc
xor
mov
inc
push
int3
mov
sbb
mov
inc
out
ins
sti
mov
fmulp
mov
xchg
repnz
bound
jns
stos
retf
and
stos
call
fld
inc
add
xor
imul
mov
push
mov
mov
xchg
in
data16
mov
add
aam
lock
or
add
sub
xchg
fistp
and
clc
push
retf
movs
cmp
or
out
mov
mov
outs
xchg
mov
or
dec
jecxz
cmp
mov
mov
mov
jo
jecxz
push
outs
sbb
test
ja
xor
sbb
add
pusha
add
ja
dec
mov
(bad)
mov
fwait
leave
mul
sbb
mov
or
mov
mov
aam
ins
mov
pop
xor
sub
repnz
pop
lods
fs
popa
or
cmp
xchg
mov
rcr
ds
mov
mov
(bad)
std
cmc
jecxz
xlat
jb
xor
and
repz
ret
call
nop
xlat
mov
push
stos
push
data16
rcr
popf
push
inc
mov
dec
inc
stos
xchg
sbb
loop
rcl
add
ss
pop
xchg
iret
push
jno
inc
sub
aas
inc
rcr
fcomp
mov
bound
cmp
xchg
aad
stos
and
mov
adc
add
popf
xchg
div
xor
test
add
sub
mov
xchg
add
and
xchg
mov
loopne
xor
xchg
pop
bound
lods
sub
jae
push
xor
sar
pusha
mov
push
sub
mov
sub
jns
lock
cmp
lock
cmc
(bad)
(bad)
hlt
loope
pop
ret
and
fwait
out
sub
test
dec
pushf
inc
repz
addr16
adc
adc
(bad)
jae
or
movs
sbb
xor
daa
xor
dec
aam
lea
scas
push
dec
mov
jnp
dec
adc
test
mov
jo
pop
xchg
adc
or
adc
add
hlt
ror
mov
ror
jg
sub
mov
xchg
sbb
ret
ds
es
(bad)
ja
push
mov
jle
int3
inc
fst
sub
(bad)
xchg
or
lahf
inc
cmp
push
repz
add
jp
xor
jb
not
mov
pop
sti
mov
stos
lds
dec
xchg
xchg
int
mov
cs
mov
mov
retf
stc
adc
retf
popa
mov
add
xchg
jmp
push
leave
xchg
out
cmp
push
jmp
dec
jo
ja
jo
xchg
int3
add
fidivr
mov
rcr
or
sbb
adc
(bad)
fnsave
out
scas
popa
sar
les
movs
les
cmps
dec
inc
nop
sub
push
repz
cmps
add
nop
xchg
scas
pop
adc
adc
cmp
push
stos
jmp
fisub
sti
js
dec
push
dec
or
mov
push
add
mov
cmc
sbb
arpl
test
xor
cmc
pop
leave
mov
icebp
xchg
call
dec
fst
pop
imul
mov
mov
add
ja
aas
leave
adc
or
rcr
ficom
lock
repnz
push
mov
cmove
xor
ror
mov
push
adc
xor
jnp
icebp
imul
mov
inc
xchg
sub
outs
in
lods
adc
xchg
gs
mov
daa
je
dec
push
sbb
adc
adc
(bad)
jb
xchg
test
es
jnp
cwde
push
pop
adc
jo
movs
jae
jmp
push
push
das
cld
push
mov
dec
popa
je
out
ja
lods
jp
jecxz
and
xor
std
mov
aam
add
pop
pushf
jb
shl
jmp
push
call
xchg
aam
push
jl
push
retf
rcr
or
repz
inc
fmul
repz
push
mov
aad
and
loopne
pop
dec
int
push
jg
pusha
xchg
xchg
test
xchg
add
retf
das
leave
pop
jg
sbb
in
jle
fsubr
add
pop
mov
or
stc
inc
aad
pop
das
mov
int
icebp
jmp
or
push
test
push
lock
mov
jl
out
push
pop
fs
cmps
iret
sbb
add
push
pop
push
mov
pop
retf
pop
cmp
enter
pop
retf
pop
outs
(bad)
add
xchg
(bad)
and
cmp
adc
fst
aaa
sbb
aaa
mov
shl
push
xchg
sbb
fst
sub
(bad)
sub
push
push
test
adc
adc
mov
cmp
add
out
mov
inc
div
ds
lahf
mov
cmp
(bad)
add
lock
int3
lea
fld
add
dec
pop
add
cmp
(bad)
fnstsw
mov
adc
imul
adc
jge
test
retf
push
bound
mov
mov
mov
cmp
inc
test
sti
mov
mov
push
pop
bound
arpl
add
lahf
jne
lds
dec
xsavec
aas
and
je
add
fidiv
pop
jle
pusha
pop
fwait
add
mov
sbb
ret
xlat
adc
lahf
lock
push
inc
dec
lahf
sbb
call
inc
js
aam
(bad)
mov
mov
adc
mov
cmps
inc
xor
push
mov
push
jmp
xor
int3
mov
repz
int
xlat
inc
pop
jmp
jle
mov
ror
aam
xchg
add
not
repnz
aas
adc
fs
mov
cli
mov
jne
ja
mov
or
mov
push
outs
int
pushf
arpl
aad
leave
mov
cmp
jmp
mov
xor
xchg
das
pop
sub
test
and
xor
in
inc
cmp
mov
and
(bad)
in
sbb
lods
push
cmp
(bad)
cmc
jne
outs
lods
out
dec
push
repnz
lods
int3
sub
mov
pop
mov
(bad)
in
or
mov
sub
jmp
inc
inc
xor
pop
out
mov
dec
ds
ror
sti
jne
sbb
int
int3
int3
adc
setle
sub
inc
dec
call
sti
or
sahf
adc
hlt
add
xchg
jecxz
sub
popf
cld
out
ds
xchg
ficom
or
mov
in
rcl
xchg
sbb
stos
fs
retf
gs
je
xor
fadd
mov
cmps
sbb
sub
and
cmp
test
fmul
mov
or
repz
adc
lahf
jmp
pop
dec
lods
push
mov
pop
enter
push
and
mov
cmp
inc
js
mov
(bad)
pop
inc
inc
imul
dec
ins
adc
xlat
movs
xchg
out
mov
ficomp
test
fs
jmp
inc
and
sbb
adc
sti
les
icebp
pop
push
pop
and
pop
jle
movs
sahf
addr16
xor
cmp
mov
jb
outs
(bad)
in
push
dec
cmc
push
add
retf
dec
aam
jns
add
or
lahf
jmp
xor
pop
xor
jae
aaa
sub
push
(bad)
in
jbe
cmps
mov
mov
dec
jne
push
out
mov
test
scas
fsubr
je
mov
cmp
xor
retf
repz
adc
out
inc
addr16
(bad)
adc
add
mov
mov
push
retf
(bad)
jns
ja
xchg
ins
adc
sbb
out
or
nop
and
or
push
in
mov
repz
dec
aam
xor
retf
sbb
out
sbb
sbb
inc
and
push
xchg
xlat
outs
push
repnz
lahf
xchg
cdq
cwde
ins
push
add
xlat
out
or
imul
adc
aad
sub
mov
xor
mov
and
test
(bad)
pop
dec
xchg
div
mov
xchg
xor
jg
imul
push
rcl
adc
cld
xor
test
into
sub
jge
xchg
int
jb
xor
idiv
int
mov
mov
addr16
xchg
pop
mov
lds
pop
cmp
scas
(bad)
in
sub
cmp
out
sub
push
test
ret
ss
movs
ins
js
sub
dec
mov
icebp
sbb
mov
mul
ficom
sub
fsubr
repz
(bad)
sub
jmp
sub
cmp
outs
jb
xor
xor
mov
movs
mov
icebp
xchg
in
adc
cmp
lods
push
sub
pop
popa
pop
inc
mov
jp
push
scas
lahf
add
xor
bound
sbb
neg
jg
xchg
iret
daa
sub
(bad)
dec
(bad)
cmc
xchg
vmwrite
pop
sar
xor
imul
scas
pop
(bad)
gs
mov
jb
scas
inc
pop
jae
jo
inc
(bad)
xor
and
cdq
cmps
das
inc
pop
imul
fcom
xchg
pop
add
dec
mov
ja
cmc
mov
int
pop
pusha
lock
aam
pop
dec
loopne
(bad)
xor
aam
call
adc
xchg
jg
(bad)
jno
pop
adc
add
push
and
in
mov
push
jg
xor
rcl
sbb
int
cmp
fist
dec
(bad)
int3
inc
jns
jno
scas
xor
mov
pusha
out
(bad)
fwait
xchg
ja
pop
push
fnsave
gs
ja
enter
cmovp
das
leave
cmp
lods
stos
mov
mov
add
dec
pop
leave
jl
dec
mov
ja
or
pop
mov
dec
clc
add
cmps
or
dec
mov
adc
mov
and
rcl
out
push
push
jmp
add
push
mov
mov
(bad)
lds
push
or
fbstp
adc
scas
(bad)
loop
neg
ss
dec
enter
sub
cmps
repnz
cld
aad
push
push
push
test
dec
adc
dec
mov
stc
arpl
movs
(bad)
sub
pop
and
fisubr
sub
sbb
clc
fisub
sub
xor
add
dec
or
mov
inc
js
add
popf
mov
inc
xchg
jle
mov
imul
xor
test
mov
cs
sbb
push
pop
addr16
clc
mov
in
jb
mov
arpl
in
pop
mov
push
into
and
or
scas
iret
jne
test
jecxz
scas
cmc
pop
jo
jbe
dec
movs
and
(bad)
sub
nop
aad
and
sub
sub
retf
cmp
mov
add
sub
jge
cmp
and
add
call
mov
cmc
loope
cmp
jecxz
sbb
test
mov
jns
repnz
test
or
cwde
pop
push
xlat
stc
pop
lds
daa
data16
xchg
push
mov
push
dec
push
lods
rol
fwait
and
stc
stos
nop
jnp
fld
lods
xchg
div
mov
mov
arpl
mov
aas
jns
cld
es
jnp
push
mov
jno
lods
sbb
jmp
ja
push
(bad)
lods
pop
ds
or
dec
mov
jecxz
and
jbe
sub
retf
mov
aam
(bad)
(bad)
jecxz
ja
pop
nop
lods
xlat
aam
cld
lods
enter
ins
mov
and
or
cmp
jbe
or
loop
inc
movs
(bad)
loopne
inc
add
pop
(bad)
push
(bad)
inc
ins
wbinvd
in
mov
les
cmp
jge
call
xchg
fmul
out
pop
xor
xor
aaa
push
(bad)
sbb
sbb
pop
jnp
inc
add
(bad)
in
inc
cmp
mov
push
mov
mov
push
cmps
(bad)
adc
jle
dec
out
jmp
lea
mov
dec
inc
ds
fisttp
nop
inc
and
(bad)
rcl
mov
cwde
in
(bad)
icebp
ins
mov
xchg
mov
add
in
mov
mov
cmc
shr
mov
push
cmp
mov
sbb
mov
inc
add
scas
lds
movs
(bad)
not
add
mov
sub
xchg
imul
pushf
fdiv
cs
and
and
and
xlat
mov
das
pop
pop
or
cmps
bound
jmp
in
sbb
inc
xor
push
push
repnz
mov
sahf
push
dec
mov
fwait
popf
ds
mov
sbb
push
sbb
movs
mov
sahf
test
pop
add
ret
mov
and
(bad)
(bad)
cmp
js
cli
and
fdiv
or
(bad)
in
xlat
jnp
and
inc
jge
repz
ss
mov
sub
push
xchg
mov
ins
clc
ret
outs
push
cmc
(bad)
movs
gs
cdq
(bad)
mov
dec
jp
int3
push
ret
or
mov
jne
jmp
mov
adc
sar
sub
dec
std
mov
or
inc
shl
sti
jmp
jg
and
push
inc
adc
daa
das
cmp
in
dec
mov
dec
xchg
push
cmps
push
xchg
(bad)
ja
xor
adc
int
fisubr
cmp
mov
push
cli
out
fs
scas
ror
and
mov
and
xchg
sbb
cmc
cmp
fcom
add
inc
(bad)
cmp
adc
mov
mov
pop
or
aad
out
mov
push
jp
dec
nop
in
fidivr
pushf
loope
cdq
add
jge
xor
jp
push
daa
int3
push
adc
and
push
pushf
add
data16
fiadd
inc
call
inc
out
dec
cmp
fild
mov
or
xor
cmps
in
mov
dec
adc
xor
stos
lea
fbstp
lds
in
(bad)
mov
in
jne
pushf
mov
xlat
in
jp
and
push
jmp
test
mov
inc
or
ret
pop
or
push
ins
add
loopne
sub
inc
mov
fwait
sub
mov
or
nop
pop
lahf
mov
xchg
and
jae
mov
jg
xchg
mov
sbb
pop
sub
call
or
out
mov
sbb
cmp
jle
out
stos
mov
dec
sbb
and
aam
xor
mov
pop
pusha
fild
pusha
iret
das
(bad)
dec
pop
xchg
mov
add
lock
fisub
paddsw
sub
push
and
mov
cmp
int
or
sar
test
cmp
popa
(bad)
xor
fwait
push
cmp
mov
and
repnz
pop
lock
retf
xor
mov
mov
sub
adc
jp
mov
outs
cmp
loop
pop
add
loop
dec
outs
or
and
test
mov
movs
xchg
(bad)
ds
outs
scas
mov
call
inc
add
fucomi
cmp
(bad)
int3
mov
pusha
cmp
test
cld
(bad)
dec
dec
xor
lahf
adc
test
(bad)
bndldx
and
pushf
in
ins
push
in
(bad)
mov
dec
pop
sub
mov
pop
imul
(bad)
pop
fiadd
adc
movs
dec
jbe
inc
pusha
or
gs
mov
cmp
leave
(bad)
mov
retf
popf
jl
mov
test
fs
mov
rol
scas
mov
jecxz
mov
shl
pop
xchg
cmps
adc
ss
push
xchg
je
xchg
xor
imul
cmps
adc
push
outs
sbb
push
adc
jne
popa
ret
popf
xlat
imul
or
mov
add
xor
push
or
mov
xchg
inc
stos
xchg
rcl
retf
fnstsw
loopne
nop
les
jle
mov
test
lock
aas
and
jns
xchg
jne
cdq
nop
jmp
or
xchg
(bad)
imul
lods
test
mov
sbb
into
xor
adc
or
mov
jbe
mov
lahf
xchg
enter
(bad)
jmp
sbb
fs
push
clc
ins
xchg
pop
mov
cmp
adc
jmp
test
and
lock
sti
push
pop
pop
push
adc
push
aaa
xchg
push
mov
push
or
cmp
in
test
add
push
pop
cmc
pop
adc
push
fs
sub
or
test
xchg
mov
or
imul
gs
into
pop
mov
and
push
aam
int
sub
jo
sub
ins
cmp
shr
xchg
pop
push
xor
and
mov
hlt
adc
adc
jge
ficom
shr
xchg
(bad)
cmp
xchg
inc
dec
xchg
imul
cmc
int3
pop
cmp
sub
les
in
nop
adc
dec
mov
pop
ret
mov
sbb
sbb
stc
out
inc
or
sti
push
call
pop
call
mov
pop
and
je
sbb
xchg
fwait
out
ja
cmp
jns
cli
inc
outs
in
inc
push
push
pop
and
mov
ja
xor
fs
xor
cdq
dec
push
xchg
rol
xchg
cmp
jmp
ja
mov
das
addr16
sar
adc
mov
mov
ins
inc
mov
fidiv
push
push
and
cmp
jo
mov
jmp
cmc
adc
(bad)
xor
mov
popa
xor
cmc
call
cmp
aaa
pop
inc
fstp
pop
xor
add
call
mov
pop
adc
fmul
nop
jns
dec
jl
les
push
sub
xor
dec
cdq
pop
inc
adc
pop
ror
xchg
aas
adc
rol
xor
push
mov
jb
aas
les
les
stos
jo
sti
push
adc
jno
bound
bound
pop
inc
pushf
jmp
sub
test
aad
pop
sbb
or
xchg
pop
xchg
mov
sar
adc
fnsave
and
retf
push
dec
test
out
jl
sbb
into
xor
es
int3
jbe
jnp
out
add
mov
dec
ja
dec
iret
dec
and
out
fmul
sub
test
push
xchg
mov
sbb
stos
repnz
jmp
jnp
xchg
push
xor
stc
pop
mov
nop
cmps
inc
aam
pop
jmp
sub
and
add
pusha
not
cmp
sti
xor
pop
mov
inc
push
pusha
or
iret
leave
mov
je
xchg
dec
pop
enter
add
sti
adc
fcmovbe
xor
(bad)
loope
aas
adc
ja
mov
add
(bad)
jmp
jle
aam
fimul
std
and
jnp
js
not
loope
or
sub
addr16
aas
adc
imul
fadd
xchg
xlat
jb
mov
cs
arpl
xor
xlat
mov
push
in
ficomp
and
(bad)
cmp
mov
outs
jg
rcl
xlat
sub
cmp
push
xchg
mov
sub
leave
cmp
adc
and
aas
sahf
lea
stos
fs
nop
jge
dec
scas
test
xor
pusha
mov
sub
movs
xor
mov
jecxz
and
xchg
imul
lea
lods
jp
or
ins
pushf
or
outs
cli
ins
stos
jmp
mov
fadd
jo
mov
cmc
push
adc
jmp
dec
and
xor
xor
imul
iret
dec
movs
mov
xchg
sbb
mov
add
mov
xchg
adc
add
jae
sbb
inc
mov
out
lods
icebp
je
stos
addr16
dec
pop
(bad)
sub
lahf
or
stos
ret
cli
mov
or
(bad)
loopne
rol
xchg
inc
repz
das
pop
cmp
sahf
xor
xchg
sbb
ret
cmp
pop
aas
cmc
adc
retf
sub
mov
stos
fwait
cmp
sub
jno
sub
pop
je
xchg
aaa
or
fwait
sub
push
dec
ja
fcmovb
cmps
aad
imul
ror
adc
xchg
adc
(bad)
les
add
mov
jle
xchg
pop
mov
popa
fnstcw
mov
cmps
aam
lods
out
fist
jb
cmps
fwait
pop
push
repnz
loope
push
add
cmp
push
push
jge
push
adc
or
cmps
cmp
aaa
pop
mov
cmp
sahf
test
pop
mov
adc
pop
fdiv
xor
pop
lahf
das
sub
fisttp
out
data16
jg
and
cmp
pop
and
pusha
add
mov
scas
rcl
(bad)
daa
push
mov
sbb
popa
pop
outs
int3
aam
mov
xchg
jg
mov
xchg
sub
loop
mov
dec
push
ror
repnz
call
pushf
xchg
sbb
pop
rcr
jmp
dec
ret
push
fs
jb
inc
outs
or
add
and
adc
int
dec
and
dec
into
shl
cmp
test
dec
lods
pushf
movs
xchg
sub
mov
cmp
pop
cmp
or
xor
cmp
lds
call
rol
mov
and
sbb
ins
mov
mov
stc
loope
int
pusha
mov
add
test
imul
icebp
pop
ins
loopne
cmp
sbb
xchg
add
jp
pop
icebp
hlt
mov
jne
loop
faddp
stc
out
movs
mov
das
aad
mov
sbb
and
or
jns
inc
pop
jno
in
addr16
adc
add
xchg
inc
hlt
jne
cmp
sbb
jnp
mov
ja
imul
ret
inc
jmp
xchg
arpl
popa
dec
jbe
sti
sbb
fisttp
fistp
cmp
jge
dec
dec
pop
mov
add
test
push
inc
xchg
mov
and
aaa
dec
lds
fnsave
stos
in
mov
fdivr
jbe
ret
or
stos
mov
sbb
mov
fist
idiv
mov
mov
push
jo
jl
sbb
sub
jb
(bad)
inc
loope
lock
out
or
jno
mov
mov
pop
mov
repz
fnop
pinsrw
pop
mov
inc
hlt
push
cmp
mov
(bad)
or
js
xor
sub
ret
cmp
jecxz
or
pop
xchg
out
pop
loopne
sub
shl
sub
in
test
mov
out
sbb
(bad)
mov
gs
mov
push
fbld
push
gs
pop
push
push
retf
and
jb
mov
nop
dec
mov
push
xor
aam
sti
push
mov
mov
dec
das
dec
fnstsw
mov
xchg
sbb
lock
jb
push
aad
ss
fstp
sub
mov
sub
cdq
rcpps
or
aad
xchg
cmp
test
ins
loop
fld
mov
fucomp
mov
loop
inc
mov
loop
mov
dec
outs
and
mov
xchg
repz
(bad)
or
pop
fnstenv
push
mov
xor
sub
sub
pusha
or
xor
fstp
outs
sbb
pop
pop
shr
je
push
ret
xor
ret
cld
test
(bad)
in
push
xor
xor
call
jle
inc
js
sub
mov
push
pop
add
and
(bad)
pop
test
daa
dec
push
xchg
add
adc
loope
ds
ins
test
mov
sub
pop
mov
jecxz
mov
cmp
cwde
(bad)
and
and
pop
add
mov
gs
adc
cmp
jmp
add
test
push
call
pusha
clc
xchg
cmps
cld
ret
inc
sbb
add
or
sbb
loope
dec
or
push
sub
mov
pop
and
sub
adc
fcmovnb
xor
add
cmp
gs
(bad)
xor
pop
int3
xchg
cmps
jnp
jmp
sub
movs
clc
and
add
pop
push
daa
lods
pop
dec
dec
sbb
nop
push
and
mov
ja
inc
out
out
ins
ret
(bad)
adc
sub
pop
jno
pop
push
int3
push
mov
in
and
add
inc
or
enter
pop
push
and
lock
repnz
pop
imul
adc
push
fs
daa
xchg
dec
cmp
es
sub
mov
in
loop
sar
std
daa
and
jbe
mov
add
scas
jl
jns
xor
inc
loope
mov
ins
cmps
(bad)
xlat
push
and
inc
pop
cmp
stos
test
cmp
stc
xchg
pushf
dec
add
in
std
add
clc
jl
out
mov
and
jmp
adc
cdq
(bad)
mul
push
jns
cmps
and
sbb
pop
(bad)
stc
daa
xchg
in
add
xchg
sub
jns
iret
mov
cmp
cmps
add
int
call
jb
in
sti
mov
or
push
fcomp
sbb
popf
std
mov
adc
sbb
or
fld
sbb
xchg
jns
jae
cmp
xor
fdivr
(bad)
add
arpl
xchg
jne
xchg
jo
or
mov
xchg
mov
mov
imul
fimul
cwde
test
ret
mov
fcomp
sbb
arpl
add
nop
rol
xor
pop
sbb
pushf
adc
cmp
mov
inc
psubusb
shr
sub
jl
and
fidiv
sbb
ror
xor
das
sub
mov
stos
repnz
push
aam
adc
movs
cmp
repz
mov
push
xchg
fldl2t
mov
int3
cs
pop
lods
sti
cmp
hlt
jmp
or
movs
icebp
cwde
outs
repz
outs
push
loopne
pop
xchg
or
and
enter
scas
addr16
sbb
jbe
mov
jp
jg
sbb
jno
cmovp
aad
mov
test
mov
jp
push
jmp
xchg
shl
and
cmc
inc
inc
lea
fdivr
adc
les
pop
pop
cmp
ds
lock
aad
dec
sti
adc
sbb
adc
mov
mov
lock
sub
xlat
and
xchg
sbb
inc
out
inc
div
and
and
cmps
movs
xchg
jno
rcl
sbb
mov
push
les
cmp
inc
imul
mov
pop
dec
mov
push
cli
ins
int
nop
add
ret
push
cmc
test
xor
jnp
pop
stc
std
fld
mov
pop
dec
enter
jl
int
loopne
mov
fdiv
cmps
pop
loope
sub
je
add
aas
cmps
bound
xlat
xor
xor
jmp
jbe
xor
repnz
mov
inc
jae
jle
jmp
data16
mov
call
add
lds
push
ja
push
inc
(bad)
and
fwait
xchg
pop
mov
div
(bad)
inc
bswap
add
add
sbb
pop
adc
imul
sti
dec
xchg
mov
xchg
test
sti
jp
js
shl
mov
mov
ret
jg
add
inc
fldcw
xor
push
push
retf
pop
cld
call
aaa
ror
loope
ja
jb
lea
retf
push
dec
outs
mov
lea
bound
pop
add
jp
adc
dec
fdivr
daa
push
test
dec
push
(bad)
icebp
outs
je
aas
stos
mov
lds
out
sub
jmp
aas
aam
shl
adc
popf
outs
add
jmp
mov
jno
sti
jle
out
push
mov
pop
test
leave
push
xchg
mov
mov
outs
jno
add
popf
das
or
add
or
les
cmc
and
adc
xchg
or
mov
adc
cmp
fs
xchg
jg
xchg
bnd
xor
jecxz
jp
(bad)
xchg
jge
rcl
ret
mov
pop
retf
sub
push
fst
adc
call
or
cmps
popf
mov
loopne
aad
xchg
fs
and
add
test
stc
push
cmp
jbe
and
xlat
pop
adc
rcl
and
aad
push
dec
add
rol
ds
pop
and
in
cmp
(bad)
and
push
out
mov
sub
(bad)
stc
ret
fs
sbb
jno
jbe
fistp
mov
xor
mov
sar
cld
daa
jo
aad
int
jae
div
and
dec
cmp
cs
mov
xchg
in
jno
mov
mov
mov
mov
(bad)
repz
popa
(bad)
ds
repnz
mov
stos
fsubrp
ficomp
int
stos
shl
xchg
pop
cld
xchg
ret
or
push
inc
jb
aas
jmp
xchg
jo
jecxz
sar
retf
add
jge
cmc
cs
mov
dec
mov
aam
inc
outs
push
popf
xor
sbb
es
push
xchg
stos
gs
fild
iret
out
or
jbe
sbb
inc
btr
(bad)
fwait
push
mov
push
stos
jg
in
sbb
sbb
out
loopne
test
sti
mov
(bad)
inc
and
add
mov
movs
test
mov
mov
shl
cwde
mov
fistp
xor
test
or
push
xor
cmp
xor
les
mov
mov
push
(bad)
and
ret
loopne
arpl
adc
test
push
aam
dec
inc
xchg
ins
(bad)
icebp
jb
mov
ret
cld
push
pop
repnz
push
and
lea
add
add
(bad)
sti
cmp
aaa
cmp
(bad)
je
cdq
enter
xor
das
xor
mov
int3
fistp
mov
pop
int
cmp
ret
xor
push
loope
cmps
addr16
sti
ror
cmp
mov
cmps
mov
or
push
ds
cmp
rol
sbb
xlat
outs
adc
ds
xor
jle
shl
das
cld
out
xchg
push
in
xchg
ja
adc
sub
stos
cmp
xor
aad
or
sub
xchg
fadd
inc
call
xor
xor
and
pop
sbb
stos
repnz
push
rol
and
cmova
fldcw
ds
sbb
pushf
add
jnp
mov
and
adc
(bad)
adc
ret
seto
jne
push
fwait
dec
pop
cli
and
mov
hlt
or
inc
or
xchg
pop
arpl
push
(bad)
add
fild
outs
arpl
or
jmp
inc
fcomi
std
in
outs
iret
jo
(bad)
das
mov
and
mov
push
mov
push
ins
or
pop
pop
dec
inc
and
adc
maxps
(bad)
scas
imul
pop
movs
pushf
jge
xor
inc
(bad)
add
xchg
cmps
repz
data16
out
mov
mov
(bad)
clc
xchg
push
mov
icebp
xchg
xchg
xor
add
shl
sub
mov
and
or
jo
pop
imul
mov
inc
ficomp
dec
mov
sbb
je
mov
jns
push
stos
push
mov
xchg
out
movs
sbb
mov
adc
mov
out
call
in
sbb
pop
mov
dec
add
dec
mov
mov
push
fldcw
sti
bound
in
fmul
add
jp
mov
or
pop
mov
shl
mov
or
in
xor
fdiv
das
cdq
mov
sub
addr16
pusha
bswap
push
add
add
lods
mov
add
cmp
fwait
rol
out
add
mov
jecxz
out
test
xor
shl
sub
dec
(bad)
mov
mov
xchg
aam
mov
fwait
jmp
xor
shl
or
inc
mov
stos
es
scas
repz
mov
mov
push
xcrypt-cfb
cmps
and
popa
out
out
xlat
bound
mov
icebp
xchg
xchg
pop
psubb
mov
fisttp
das
nop
aaa
push
jnp
xor
or
cwde
and
mov
sub
repnz
ins
scas
jo
or
adc
xchg
nop
fs
sub
test
sub
sub
ret
aaa
jb
cld
sbb
out
xor
push
xor
add
xchg
xchg
adc
popa
jl
retf
outs
inc
mov
arpl
repnz
cmp
mov
inc
pop
and
int3
in
dec
popf
xchg
sbb
fdiv
xchg
mul
mov
movs
adc
test
sti
cmp
jge
stos
pop
imul
jmp
pop
ins
sub
ficom
push
inc
ds
mov
cmp
stc
popa
(bad)
xchg
lea
sbb
call
dec
pop
and
dec
jo
mov
add
int3
rol
mov
sbb
adc
mov
retf
dec
jg
shr
pop
mov
inc
nop
sbb
movs
daa
mov
(bad)
push
ror
js
dec
stos
xchg
dec
xor
jmp
dec
(bad)
(bad)
xchg
(bad)
adc
push
ficomp
cli
loopne
push
loopne
sub
rcr
mul
dec
lock
xlat
ins
dec
lahf
mov
and
out
add
mov
and
pop
js
aam
lods
sar
jmp
aaa
sahf
jg
pop
jle
jns
jae
call
sar
ret
mov
xchg
dec
push
xor
cmp
xchg
ja
pop
push
das
jb
xchg
mov
cmp
repz
add
cwde
pop
pop
test
iret
push
stos
outs
xchg
jno
jecxz
stos
repnz
enter
push
push
mov
sbb
push
push
pop
jmp
fidiv
daa
ins
add
shl
gs
in
ss
lock
setnp
mov
jmp
ror
fidiv
jb
movs
dec
xchg
cli
push
les
movs
daa
mov
jbe
not
stos
jmp
jb
pop
jno
mov
fisub
dec
xchg
ins
test
outs
fld
daa
ret
popa
loope
xor
daa
fcmovb
int
shl
jmp
and
cmp
sbb
adc
adc
lahf
cmp
fs
int
rcr
adc
push
iret
mov
mov
sub
adc
xchg
push
outs
into
and
or
loopne
pop
ss
ins
jnp
jmp
test
(bad)
out
inc
mov
in
cwde
out
dec
and
pop
sub
arpl
inc
pop
and
xor
or
je
xchg
mov
daa
jl
xor
mov
cmc
xchg
fmulp
sub
enter
lods
dec
retf
(bad)
mov
loopne
inc
retf
sub
out
retf
xchg
arpl
imul
push
mov
jge
mov
push
(bad)
pop
mov
scas
or
mov
mov
mov
dec
sub
aad
jg
mov
and
lock
aam
fisttp
outs
test
cmp
jb
pop
dec
out
rcl
(bad)
cmp
movs
mov
jp
push
hlt
sub
fimul
inc
inc
les
push
cmp
push
movs
retf
repnz
mov
dec
das
test
and
frstor
push
add
mov
jo
loopne
mov
in
or
iret
fimul
leave
ins
movs
aaa
lods
imul
nop
xchg
and
idiv
and
(bad)
int3
jg
mov
(bad)
jae
outs
mov
push
mov
adc
xor
pop
mov
adc
mov
xchg
dec
inc
dec
icebp
(bad)
push
cmp
bound
or
mov
jmp
scas
adc
jno
sbb
fiadd
inc
(bad)
jp
xchg
repnz
ss
xchg
jg
mov
pop
push
lods
fwait
emms
mov
pop
lods
stos
push
scas
mov
lea
lock
sub
psrad
inc
shl
inc
sub
pop
pop
cs
(bad)
sub
in
lods
jp
out
inc
movs
in
sub
pop
fisub
xchg
rcl
call
scas
jg
xchg
mov
lock
stc
jmp
mov
mov
pop
jmp
retf
dec
imul
test
sub
ror
shr
retf
and
inc
xor
sbb
xchg
das
xchg
and
int3
lods
dec
xor
dec
ds
push
call
or
nop
dec
in
pop
or
(bad)
in
push
push
jnp
stos
sbb
aas
lods
fsubr
inc
mov
xchg
lahf
xchg
or
ret
jl
aas
repz
add
rcr
movs
mov
xchg
xor
dec
xchg
movd
scas
and
sti
adc
mov
fcom
mov
repnz
pop
cmp
int3
stos
cmp
push
adc
lods
cmp
sbb
gs
pushf
add
inc
inc
cwde
std
push
lods
inc
neg
das
fs
xlat
jne
or
jne
neg
dec
xchg
pop
push
mov
or
xchg
dec
add
xor
jmp
or
push
fwait
lds
scas
mov
scas
inc
mov
sub
(bad)
xlat
fbld
push
cmp
mov
scas
loope
pop
and
int
adc
aas
mov
dec
adc
mov
mov
jbe
ja
xchg
and
mov
gs
lock
mov
jb
fsub
add
call
sub
xor
or
mov
and
add
mov
mov
lock
retf
xor
es
pop
xor
out
pop
in
push
es
jnp
stos
or
mov
xchg
jle
fild
adc
in
sub
repz
pop
in
sub
ret
sub
inc
mov
(bad)
lahf
mov
push
retf
fsubp
movs
stc
dec
dec
iret
adc
mov
push
mov
push
nop
ins
push
and
lods
or
ja
and
mov
cmp
cmc
cmps
add
push
(bad)
cdq
push
test
jg
fidivr
pop
jne
gs
jp
in
ja
mov
mov
fmul
dec
js
cmps
clc
mov
add
mov
and
cmp
(bad)
repz
lds
xor
sar
push
enter
ror
xchg
dec
xchg
xchg
les
stc
or
adc
mov
fst
mov
sub
mov
adc
or
mov
mov
push
scas
nop
repz
bound
pop
cmp
ja
jne
pop
sub
push
mov
jp
or
jno
loop
or
je
cmp
arpl
into
jne
inc
push
mov
dec
nop
cmp
lahf
icebp
sbb
aaa
fs
and
push
inc
and
xor
and
pop
outs
cmp
loopne
mov
cmps
mov
cmp
outs
inc
and
mov
out
retf
inc
pop
in
pop
sahf
retf
arpl
cmp
pop
cmp
lods
mov
mov
inc
cmp
std
adc
inc
mov
popf
cmp
jae
and
fadd
xchg
repz
pop
out
shl
inc
xchg
xchg
out
mov
pop
lock
jo
es
dec
dec
retf
fdivr
cmp
gs
xor
adc
or
xor
retf
or
(bad)
call
xchg
pop
inc
gs
jb
pop
in
inc
mov
cwde
push
lods
fsubr
adc
sub
and
dec
lds
push
sbb
dec
lahf
loop
pop
retf
popa
call
dec
ins
pushf
push
inc
or
mov
push
sub
mov
dec
loope
add
(bad)
aas
mov
pop
jg
cmc
push
and
and
mov
shl
outs
jmp
mov
lock
sub
icebp
mov
inc
clc
inc
(bad)
or
dec
pushf
leave
sub
mov
xor
popf
xchg
sti
xor
ror
pop
pusha
pop
in
(bad)
cmp
push
jl
cs
jmp
setb
stos
das
mov
(bad)
mov
lahf
bsf
push
jle
mov
das
or
loopne
sub
dec
rcr
lahf
pop
add
into
xor
outs
iret
sar
gs
imul
les
lock
xchg
ja
xor
xchg
jae
out
push
cmp
das
call
mov
ret
dec
retf
call
arpl
out
arpl
cli
sub
ins
aad
into
jno
xchg
mov
neg
adc
hlt
icebp
dec
push
sbb
fwait
sti
or
ins
mov
mov
sub
lds
scas
in
adc
lods
and
push
adc
jecxz
xor
mov
fist
sub
int3
pushf
mov
cmps
fldenv
stos
jo
cwde
outs
and
adc
xchg
or
nop
mov
sbb
sbb
xchg
inc
inc
cld
movs
mov
test
adc
mov
jne
push
cmc
mov
mov
fcmovb
xchg
gs
dec
pusha
mov
inc
sbb
fadd
punpckhwd
push
nop
push
push
dec
sbb
std
xchg
cmp
mov
xchg
jns
test
dec
call
add
cmp
ins
xchg
xor
js
aas
outs
jo
dec
cld
jne
test
push
mov
mov
xor
push
test
add
int
dec
adc
aam
es
int3
inc
imul
dec
dec
push
pop
psubsb
xor
inc
sbb
ror
mov
pop
in
pop
or
or
ret
imul
push
cs
ret
fcomp
out
jae
fimul
imul
lea
push
adc
dec
ret
jb
cmps
mov
pushf
lahf
mov
dec
ficom
pop
cmovp
xchg
fwait
pop
sti
das
push
ins
and
sub
jmp
push
pop
sahf
loop
inc
les
xor
or
xchg
cdq
jl
movs
fst
scas
inc
mov
je
outs
pop
fs
push
and
fdiv
(bad)
or
xchg
ins
push
mov
clc
or
outs
jno
add
xchg
js
lds
mov
xor
add
xchg
ja
xchg
pop
xor
jg
inc
mov
mov
outs
dec
mov
fcom
add
xchg
push
cmp
pop
add
pop
icebp
test
mov
fldenv
and
push
push
imul
sub
xchg
int
lods
mov
lahf
dec
in
mov
test
xchg
ins
mul
repnz
sub
ins
loopne
and
dec
stc
daa
out
aad
or
test
push
call
cld
fcomp
mov
cmp
xchg
inc
fs
or
cmc
add
sub
jae
lahf
jg
pop
xlat
cmps
call
dec
jne
pop
push
push
lods
iret
rcr
fldcw
ret
lds
fsubr
dec
and
js
test
or
pusha
pop
xchg
push
xchg
xor
ja
je
cmp
cmc
adc
pop
call
or
idiv
scas
jne
inc
ror
pop
loopne
je
and
outs
xlat
xor
adc
(bad)
adc
retf
push
clc
mov
mov
and
xor
cdq
repnz
mov
mov
push
je
stos
mov
stos
jle
outs
int
xchg
push
dec
fwait
iret
cdq
inc
mov
call
push
stos
retf
gs
int
jb
out
or
xchg
and
fadd
or
cs
sar
mov
and
or
ret
test
or
push
gs
loope
jecxz
int3
lea
sbb
(bad)
int
jno
jg
sub
inc
mov
shl
sbb
bound
jmp
jp
pop
cmp
and
mov
and
push
lods
fisubr
je
fsubr
cmp
std
sbb
or
in
mov
paddsb
retf
imul
or
mov
in
popf
lahf
arpl
xor
in
push
xchg
sub
dec
pop
xor
inc
mov
outs
mov
and
mov
mov
(bad)
push
cmps
dec
push
sbb
ins
push
mov
dec
pop
sub
push
xlat
pop
scas
mov
adc
daa
sahf
lods
imul
or
xchg
cmp
jnp
outs
stc
inc
arpl
mov
jmp
stos
jbe
xor
adc
rol
adc
lahf
std
sbb
pop
dec
pusha
or
pop
bts
jecxz
add
mov
(bad)
stos
jg
mov
je
cwde
mov
and
adc
push
mov
ins
test
inc
jmp
sub
pop
sub
repnz
pop
ja
pop
xor
sub
jg
or
mov
aas
aas
rcl
and
call
mov
ret
lods
push
push
popa
lea
mov
mov
adc
sahf
add
shl
push
dec
xchg
push
cmp
xchg
mov
xchg
stc
push
(bad)
in
nop
into
jnp
movs
ret
adc
mov
stos
jp
pusha
fidiv
mov
repz
or
test
push
lea
mov
arpl
leave
jg
ds
jecxz
div
(bad)
in
pop
push
ins
mov
lahf
mov
mov
jge
jmp
stc
test
pushf
push
ins
fiadd
jns
jb
out
pusha
xchg
mov
add
mov
dec
or
out
in
mov
scas
dec
ds
inc
xchg
adc
jo
mov
es
mov
dec
mov
sbb
mov
xor
mov
or
lock
xchg
add
(bad)
mov
inc
aas
sbb
jecxz
test
sub
out
ins
xor
repz
push
(bad)
sbb
cdq
clc
xchg
idiv
push
xlat
or
ret
push
frstor
ror
test
jnp
fs
xor
rsm
stos
test
sbb
inc
cmps
jge
aaa
aaa
cmp
cmp
push
daa
dec
dec
mov
xor
mov
jmp
rcl
loope
fadd
push
or
inc
mov
xor
adc
inc
push
push
cmps
dec
pop
mov
pop
xchg
add
retf
mul
int3
push
into
sbb
call
jecxz
sub
sbb
jne
xchg
jge
pop
jno
sbb
repnz
jmp
fcmove
mov
and
cmps
mov
icebp
and
shl
stc
push
int3
inc
cmp
sbb
das
inc
jp
mov
add
push
leave
mov
or
add
stos
xor
cmps
sbb
loop
cli
push
mov
cmps
mov
(bad)
or
fdivr
dec
adc
dec
outs
jae
std
and
and
in
mov
sub
mov
loopne
fidivr
icebp
adc
retf
xchg
cmp
cdq
xor
sti
inc
call
jmp
daa
inc
aam
mov
lahf
push
push
cmp
(bad)
iret
lods
ds
pop
scas
push
push
sbb
add
push
xchg
ins
and
ds
les
ss
cwde
jmp
mov
movs
lds
mov
mov
popf
out
cmp
movs
pop
ins
test
push
shr
lods
nop
cli
clc
imul
mov
idiv
ds
sbb
xchg
je
rol
cmp
sar
mov
pop
jmp
sbb
nop
scas
es
cmp
ins
in
cli
pusha
mov
shl
shl
imul
xor
pushf
jo
jnp
cld
inc
imul
push
inc
and
or
lea
add
fadd
pop
(bad)
les
jp
mov
sbb
ins
in
test
test
sbb
push
mov
neg
repnz
push
and
xchg
dec
fwait
or
xchg
adc
pop
jb
cmp
je
cs
mov
popf
shr
test
dec
jge
mov
in
rol
adc
xchg
adc
adc
push
xlat
movs
mov
sbb
les
fld
add
in
pop
(bad)
loopne
sub
jae
jo
push
mov
or
xor
jp
sti
test
clc
jns
in
scas
sbb
xchg
push
jmp
cwde
jbe
xor
lock
in
jns
push
jecxz
inc
scas
(bad)
std
mov
pop
mov
(bad)
push
xlat
or
sub
mov
inc
xor
push
xor
inc
in
jo
xor
xor
movs
leave
jo
xchg
xchg
sub
and
pop
lea
sub
gs
xor
sub
cmps
xchg
shl
js
inc
sub
out
outs
loop
stc
pop
cmp
xchg
mov
mov
shr
sub
sub
mov
sbb
les
iret
adc
add
loope
icebp
sbb
inc
leave
ror
addr16
or
fiadd
push
call
mov
or
repz
mov
xchg
jbe
xchg
adc
inc
cmp
hlt
out
adc
jmp
test
or
enter
dec
sub
out
ror
push
btc
xor
int3
out
rcl
cmp
mov
cli
popa
jmp
int
sub
add
add
arpl
sbb
jo
and
in
xor
cli
movs
add
xchg
int
xor
dec
and
test
fs
aas
xchg
sub
jecxz
xchg
mov
frstor
stc
adc
cmp
rcl
test
ret
jmp
pushf
mov
loopne
and
push
inc
xchg
lds
mov
mov
add
xlat
out
idiv
sub
sub
test
mov
mov
lods
mov
push
xor
xor
add
lahf
aas
mov
mov
and
pop
movs
jecxz
fld
add
enter
(bad)
test
mov
in
fisubr
(bad)
inc
xor
sbb
jne
pop
test
nop
ret
mov
(bad)
int3
test
add
and
hlt
str
(bad)
pop
xor
pop
cdq
scas
std
out
jl
dec
int
mov
push
cmp
adc
int
jnp
dec
pop
dec
xchg
jge
pop
mov
push
bound
mov
rol
cmps
xchg
bnd
imul
int
sbb
mov
add
int
shl
jmp
push
lods
dec
cwde
jmp
(bad)
xlat
jmp
aad
pop
add
jne
push
dec
and
test
mov
call
mov
jl
jo
adc
sbb
shl
lock
xchg
out
xchg
popa
adc
int3
cmps
adc
adc
into
jns
(bad)
dec
or
sbb
jae
mov
sub
push
ret
mov
sub
cmp
addr16
cmp
push
cmp
cmp
adc
add
or
aaa
fadd
inc
aaa
lods
adc
jno
imul
(bad)
jmp
sub
test
ret
mov
cmp
adc
pop
lods
ds
imul
cmp
nop
jmp
sbb
push
cmp
xchg
inc
ror
dec
push
dec
jmp
pop
mov
jp
mov
inc
push
test
movs
adc
imul
lods
mov
jno
or
jns
xchg
outs
xor
push
cmp
and
mov
imul
mov
mov
sbb
fdivr
inc
mov
cmps
mov
adc
mov
sub
or
inc
pop
repz
lea
rcr
inc
push
(bad)
neg
call
test
fiadd
mov
cmp
inc
sub
mov
out
add
mov
sbb
clc
jns
adc
movs
loope
sub
loopne
aas
mov
movs
xchg
mov
sbb
add
retf
addr16
test
push
mov
sar
push
dec
add
mov
cmp
inc
push
mov
and
sub
pop
jns
fs
out
ins
ret
inc
pop
mov
icebp
shr
adc
jmp
clc
addr16
sbb
das
push
mov
sbb
popf
daa
and
imul
mov
sti
mov
popa
fcomp
and
mov
shr
stc
push
push
sti
jae
mov
sub
(bad)
inc
popa
ret
and
sub
jb
les
mov
xchg
sbb
pop
pop
sar
jmp
in
pop
movs
and
adc
call
xchg
ja
xchg
les
add
and
bound
out
call
pusha
test
mov
xor
js
xchg
push
and
jnp
call
sub
adc
loop
fnsetpm(287
and
sub
(bad)
mov
call
mov
in
push
adc
bound
dec
inc
iret
fbld
out
push
test
aad
push
aaa
lahf
sbb
jmp
ds
push
aad
retf
hlt
and
cmp
xor
hlt
test
adc
inc
arpl
mov
cmc
out
movs
int
pop
test
jmp
cmc
push
fmul
cmps
in
push
mov
mov
push
xchg
or
enter
sbb
push
mov
push
imul
test
popa
pop
dec
lea
mov
inc
xor
shl
xor
dec
ins
sahf
rcr
xchg
jecxz
sti
loop
pushf
mov
movs
xor
pop
lods
dec
scas
pop
push
call
fiadd
and
xor
inc
mov
jmp
lods
inc
rcr
jecxz
out
and
pop
sahf
sub
xchg
pop
psrad
push
jecxz
nop
das
call
popf
loop
and
inc
nop
jecxz
fist
out
cs
out
jbe
inc
sbb
add
lods
dec
adc
cmp
fs
sub
in
pop
adc
mov
daa
push
fsubr
ss
jmp
pop
push
inc
pushw
jmp
inc
retf
or
aam
rol
jmp
popa
and
or
sbb
jge
add
jge
mov
mov
mov
adc
push
into
jno
outs
push
adc
arpl
mov
xchg
or
retf
test
shl
xor
lods
sahf
add
mov
pop
js
jb
inc
cmp
add
pusha
sbb
test
and
idiv
mov
fs
add
cmp
rcl
and
inc
dec
je
inc
cli
into
sub
mov
adc
scas
cdq
lods
mov
and
out
xchg
jl
data16
mov
in
xchg
outs
addr16
es
scas
sar
sti
mov
dec
les
repnz
mov
sbb
xor
pop
and
cmp
dec
movs
dec
add
icebp
pop
dec
xor
inc
mov
cmp
sar
xor
push
loopne
test
sahf
in
xchg
jae
aas
in
jmp
dec
rol
mov
les
mov
jne
jnp
cmps
pop
(bad)
idiv
cmp
cmc
fisubr
in
and
mov
inc
jnp
jmp
pusha
xor
out
out
repnz
cmp
(bad)
std
mov
and
sub
lea
mov
popa
cmc
jle
and
lods
and
sub
xchg
scas
pop
fisubr
popa
mov
jae
xchg
sub
push
and
cmp
fsub
sub
adc
xchg
push
jp
retf
jge
retf
push
pushf
inc
xlat
cmp
add
dec
sbb
jle
jl
imul
jecxz
cdq
out
or
sub
push
push
pop
mov
pop
or
arpl
and
jge
inc
into
mov
clc
fs
xchg
hlt
stos
mov
iret
cmp
pcmpgtd
cld
pop
sub
sbb
std
cli
mov
mov
mov
or
ret
test
and
jnp
ds
push
add
out
das
cmp
sub
pop
push
add
mov
loope
sbb
add
mov
sub
mov
dec
sti
aas
xchg
scas
dec
xchg
sbb
fdiv
inc
das
(bad)
shl
arpl
aad
mov
aad
pop
outs
mov
jg
push
jp
test
xchg
push
cmp
jmp
ss
dec
icebp
xchg
rcr
jmp
jo
mov
sahf
mov
sbb
aad
(bad)
sbb
je
cmp
inc
xor
mov
add
or
xlat
(bad)
mov
test
aad
jmp
test
xchg
(bad)
and
int
std
dec
mov
xchg
jecxz
and
les
shl
rcl
pusha
xor
stos
mov
dec
jg
sub
sub
fadd
out
sub
shl
push
sbb
cmp
data16
stc
sub
fwait
(bad)
pop
and
dec
dec
in
fdiv
mov
cmp
ret
bound
adc
sub
dec
test
sbb
lods
(bad)
and
les
push
iret
pop
inc
int3
inc
xchg
pop
int3
jbe
(bad)
aaa
test
test
outs
sub
xchg
in
lds
test
adc
fld
sahf
pop
push
mov
mov
adc
mov
call
inc
bound
stc
sbb
and
fdiv
inc
in
daa
ret
mov
mov
sahf
add
dec
or
xchg
sbb
imul
adc
repnz
out
loop
mov
sbb
jmp
sbb
dec
popf
mov
adc
call
xor
(bad)
push
mov
sub
adc
xchg
jmp
fwait
mov
std
and
rcl
in
pop
aaa
in
xchg
outs
in
inc
int
repnz
cmp
dec
jecxz
adc
ret
jecxz
shl
outs
push
mov
lds
xchg
xlat
retf
fs
(bad)
fadd
mov
movs
mov
push
jns
dec
mov
or
(bad)
dec
add
sub
ret
call
cmp
add
mov
pop
nop
mov
out
inc
sub
arpl
mov
outs
loopne
loop
xchg
sbb
nop
fsin
jecxz
pop
scas
popf
jmp
pusha
add
fsubr
stc
cmp
mov
in
inc
int3
ret
out
js
mov
inc
xlat
xor
das
jl
push
jne
js
mov
jmp
pop
ja
sti
or
pop
adc
xor
xchg
pop
xchg
dec
(bad)
lods
loope
and
sub
gs
test
bound
or
mov
lock
jp
movs
mov
icebp
xor
sahf
lds
and
and
dec
ds
movs
cmp
inc
mov
ins
aas
or
fabs
retf
add
cmp
jb
mov
xor
daa
mov
sub
push
sbb
xchg
loop
stc
sbb
in
xchg
add
cli
call
test
sbb
adc
arpl
jmp
mov
mov
xchg
sub
cmps
sbb
aad
push
or
jg
test
fsub
cmp
jl
cdq
jbe
xchg
fnstenv
and
mov
out
mov
sub
fsub
test
(bad)
sbb
enter
jmp
ins
cmc
jno
push
adc
sti
xchg
add
(bad)
in
sbb
push
(bad)
push
inc
test
js
cmps
call
cmps
cli
pop
jo
xor
ins
mov
jecxz
pop
fld
cwde
sub
jae
xor
test
xchg
jne
(bad)
retf
cmp
fldcw
outs
popa
or
xor
inc
mov
das
add
adc
mov
inc
and
fxch
in
je
pop
dec
ins
pop
xchg
cld
mov
xchg
loopne
mov
loop
add
sub
sbb
xchg
mov
in
pop
in
sahf
add
ins
jmp
cmp
in
push
pusha
rol
adc
sahf
adc
adc
fs
ficomp
jae
pushf
lods
pop
nop
pop
icebp
mov
lock
xchg
or
cmp
pop
pop
push
ret
jo
inc
mov
xor
pop
adc
xor
adc
add
xchg
test
retf
cmp
mov
iret
fsubr
das
and
lock
add
mov
nop
jmp
mov
sar
pusha
(bad)
into
out
imul
mov
or
xchg
neg
test
dec
daa
xchg
push
pop
outs
popf
mov
scas
cmp
inc
inc
inc
cmps
pop
cmp
nop
loope
lahf
ins
stc
mov
mov
out
cld
in
push
fwait
lods
fs
imul
add
push
inc
(bad)
fiadd
stc
pushf
xchg
mov
aam
adc
mov
mov
or
xchg
(bad)
(bad)
push
sbb
mov
mov
(bad)
mov
sbb
inc
out
cld
sub
aas
nop
jl
aaa
ja
(bad)
scas
into
loopne
ja
sbb
and
daa
push
sub
sbb
jne
push
mov
js
or
push
lods
xor
pop
in
aas
xchg
fisttp
or
(bad)
adc
imul
not
xchg
push
pop
jo
pop
test
in
add
inc
iret
in
xchg
js
jae
xchg
push
mov
out
out
and
xor
repz
sbb
(bad)
xor
xchg
add
(bad)
outs
cmps
and
push
sahf
call
jp
out
inc
clc
retf
mov
leave
loope
sub
imul
lock
bound
dec
sub
test
(bad)
lods
cmp
xchg
popf
cmp
inc
ret
xor
pop
pop
js
xchg
push
sbb
sbb
xchg
les
mov
ins
(bad)
in
pop
xchg
enter
movs
ja
test
dec
out
jmp
pop
mov
gs
xchg
jno
jo
sbb
jnp
bound
and
or
xor
int3
xor
jmp
push
adc
enter
enter
aam
(bad)
aas
ins
(bad)
ror
xor
loope
aas
adc
push
cmp
adc
xchg
movs
inc
or
test
mov
addr16
pop
sti
retf
movs
mov
dec
push
lock
ins
adc
xor
push
inc
mov
jno
push
call
enter
ins
ret
mov
sbb
sub
imul
push
(bad)
stos
inc
mov
mul
push
aas
sar
mov
fsub
repnz
push
sub
ds
ins
or
cmp
inc
push
xchg
xchg
mov
push
adc
loope
push
mov
es
ret
sahf
mov
adc
pop
cmps
xchg
and
push
repz
jg
or
out
add
cmp
dec
push
jns
jne
mov
test
fcmovu
push
cdq
aam
push
retf
push
test
iret
inc
lock
dec
cli
xor
push
mov
out
inc
addr16
loopne
(bad)
push
pop
pop
add
cmp
xor
push
les
jmp
(bad)
leave
inc
xchg
or
arpl
cdq
push
data16
push
sbb
mov
cmc
(bad)
arpl
cs
push
fcom
mov
adc
jle
pop
sbb
cwde
sub
cmp
push
js
or
rdpmc
mov
fucom
sub
mov
jbe
mov
mov
gs
push
fldcw
push
leave
fmul
sub
sub
or
xlat
stos
push
dec
in
jmp
or
repz
out
dec
jle
adc
adc
aad
mov
push
and
test
push
cs
ins
and
add
cmps
adc
jge
xor
es
dec
(bad)
shl
std
add
test
push
cdq
inc
in
inc
fsub
(bad)
fnstenv
mov
or
lods
sti
sub
bound
cmp
and
push
xor
inc
imul
jne
int3
cli
ins
lds
movs
sub
or
fsin
les
mov
neg
pop
push
push
sbb
jns
dec
outs
cmps
dec
int3
or
loop
xor
movs
add
xchg
adc
mov
pop
jmp
push
cmc
test
pop
pusha
cmps
arpl
mov
adc
mov
outs
mov
(bad)
cmp
jmp
das
test
push
popf
dec
cmp
add
es
push
sbb
xchg
loop
ja
mov
retf
dec
mov
icebp
or
add
jnp
and
stos
xchg
jae
jl
std
dec
mov
out
std
add
or
pusha
jmp
jo
mov
cmc
inc
scas
aas
inc
xchg
out
repnz
mov
dec
(bad)
add
sahf
jbe
sahf
jmp
adc
retf
adc
push
mov
xor
xchg
repnz
test
mov
push
cmps
ret
jecxz
push
push
adc
mov
mov
shr
iret
icebp
jne
cld
clc
add
int
and
sti
mov
adc
js
test
fcom
push
jae
push
in
dec
sbb
cmps
movs
call
jmp
popf
xor
add
shr
and
dec
retf
movs
pop
dec
cmp
sahf
fist
test
sub
sub
cld
xlat
repz
je
xchg
out
jo
stos
jmp
or
dec
xor
iret
clc
aas
(bad)
cmps
shl
out
icebp
inc
or
ss
or
cmps
inc
mov
jo
pushf
retf
dec
adc
mov
pop
and
fbld
cmp
andnps
leave
aam
xchg
cli
scas
repnz
cmps
(bad)
adc
jns
imul
cmp
push
jbe
pop
mov
jbe
scas
call
(bad)
xchg
imul
lea
mov
dec
sbb
imul
cmp
ins
mov
sti
aaa
das
cmp
int
cmp
xchg
lock
push
(bad)
out
jg
sbb
jmp
(bad)
fs
push
mov
jecxz
xor
pop
lods
out
ins
(bad)
push
or
mov
es
ja
data16
imul
daa
xlat
pop
inc
sbb
fcom
and
cmp
mov
mov
cmp
cmc
xor
dec
lahf
pop
xchg
repnz
and
jnp
xchg
adc
xor
xchg
enter
pop
aad
adc
inc
fcom
xchg
jb
adc
fcomip
retf
jecxz
pop
gs
or
sbb
and
mov
leave
(bad)
jnp
inc
pop
or
test
(bad)
adc
js
add
add
loop
xchg
push
aad
mov
(bad)
fmul
push
add
outs
out
int3
addr16
jl
scas
mov
add
js
pushf
out
mov
pop
add
movs
inc
icebp
xchg
mov
xchg
call
ret
std
add
fadd
pop
push
data16
or
mov
repz
add
(bad)
mov
int
cmc
mov
add
out
test
hlt
call
adc
jge
out
push
jmp
and
xchg
jmp
pop
adc
loop
test
mov
dec
mov
dec
sub
rcr
in
dec
pop
adc
enter
cmp
xchg
adc
sub
sahf
jae
fdiv
xor
cld
mov
add
lods
bound
sub
xchg
xchg
out
iret
jg
mov
bnd
movs
jge
or
mov
fs
cmps
jbe
mov
mov
inc
(bad)
push
cli
shr
pop
call
sbb
pop
dec
mov
ds
pop
cs
fisttp
out
push
retf
jno
mov
dec
cli
aaa
aad
repnz
das
sbb
cmps
mov
shrd
fst
mov
leave
pushf
xchg
xchg
loopne
and
mov
shl
sahf
mov
cld
dec
mov
jg
jl
add
dec
(bad)
movs
scas
(bad)
(bad)
cmp
sar
and
adc
scas
xor
mov
inc
xchg
jmp
xchg
or
lea
and
rol
loop
sbb
ret
dec
in
pop
push
mov
and
mov
dec
enter
(bad)
mov
and
sbb
fs
or
aam
movs
xor
fwait
jmp
sbb
or
fnstcw
mov
mov
rol
mov
xchg
les
cmp
imul
pusha
fs
or
pop
push
hlt
rol
dec
xchg
popf
push
push
enter
or
xchg
jmp
adc
adc
shr
call
adc
mov
sub
inc
stos
jmp
xchg
cmp
cmps
and
mov
sub
xchg
dec
xor
das
imul
jno
jbe
push
mov
repz
das
loop
ror
fsub
mov
ins
adc
rcr
xor
jle
push
movs
jne
sbb
cwde
jo
ds
arpl
xor
xor
outs
jp
pop
xchg
out
mov
fldcw
jns
inc
inc
and
into
sub
pop
jbe
xor
push
loope
fucom
mov
call
push
cmps
(bad)
dec
js
std
lds
ror
xchg
ja
jbe
adc
mov
ins
movs
call
iret
loopne
les
imul
sub
and
sahf
loope
and
inc
retf
(bad)
mov
inc
js
xchg
cs
retf
cmp
into
mov
or
(bad)
stc
(bad)
out
sub
aaa
pop
xor
loope
daa
les
sub
ds
test
push
int3
mov
mov
icebp
fnstenv
lock
idiv
out
adc
inc
cld
addr16
xchg
leave
inc
mov
ret
jno
push
pop
mov
out
mov
(bad)
cmc
jno
mov
mov
cli
add
jbe
sbb
mov
ret
jne
mov
shl
dec
aaa
ffree
movs
imul
mov
jl
dec
cmc
xchg
out
or
cld
mov
mov
inc
cmps
mov
jg
mov
add
adc
push
js
data16
mov
add
jno
jns
jb
dec
pop
cdq
arpl
cmp
sbb
das
mov
ficom
fwait
sub
sub
or
imul
cmp
and
(bad)
in
popf
sti
cmp
call
aam
ror
xor
cmp
mov
mov
outs
adc
mov
sbb
pop
std
push
leave
adc
sar
data16
fmul
nop
and
sbb
sub
xor
or
pushf
gs
and
loope
lods
fmulp
retf
add
adc
and
inc
mov
push
pop
cmp
xor
jno
mov
jns
ss
lods
js
cmc
mov
cmps
xchg
or
lds
ror
inc
sahf
adc
inc
or
test
sub
inc
and
inc
(bad)
js
(bad)
pop
and
jb
cmps
std
cwde
adc
xlat
rep
lods
cmps
or
aad
mov
je
int3
jb
dec
test
rcl
add
sbb
or
sbb
inc
loope
movs
cmp
add
mov
sbb
sub
int
in
or
add
inc
sti
out
movs
arpl
push
popf
(bad)
out
sbb
cmps
push
shl
sti
and
(bad)
mov
inc
and
(bad)
mov
cdq
ror
fadd
cdq
push
jle
idiv
push
bound
lds
cdq
pop
or
ror
sbb
push
mov
bnd
and
cdq
add
cmp
add
adc
in
pushf
cmp
mov
mov
mov
sahf
test
push
les
iret
jo
jns
adc
xor
xchg
test
mov
push
mov
lahf
mov
call
mov
jg
jb
sub
test
(bad)
(bad)
or
mov
inc
add
xor
test
fldl2e
xchg
mov
scas
not
(bad)
xchg
inc
sub
add
test
test
xor
movs
cli
icebp
xchg
jne
or
sbb
cmp
push
pusha
shl
std
sar
xchg
mov
rcr
gs
js
xchg
stc
popa
jg
xrelease
in
lahf
pop
dec
push
test
test
int
dec
pop
pop
xor
mov
in
cmp
push
xor
mov
stc
cmp
push
adc
fisubr
sbb
add
mov
xor
mov
in
push
pmuludq
dec
aas
jo
push
sub
xchg
popa
in
mov
jp
jnp
jbe
ins
jl
push
sub
nop
movs
scas
das
add
dec
mov
push
sbb
scas
mov
push
fst
int3
stc
nop
pop
les
inc
mov
inc
and
jl
test
dec
mov
(bad)
jle
imul
push
fs
clc
pop
mov
jmp
retf
adc
scas
out
cmp
push
xor
aaa
leave
adc
or
sbb
inc
sub
rcl
lds
xor
dec
in
jge
xchg
inc
mov
fadd
mov
adc
xor
mov
push
inc
ffreep
jmp
inc
sub
jecxz
push
xchg
sbb
gs
clc
mov
push
dec
jne
pop
aaa
loopne
test
push
repnz
std
mov
push
aad
test
cmp
pop
jge
test
push
cmp
ja
pop
xchg
(bad)
aam
mov
dec
mov
(bad)
mov
je
dec
fistp
pop
inc
mov
add
jb
test
rol
pop
sbb
xor
push
jle
gs
fdivr
aad
push
lods
jecxz
sti
aas
test
adc
pop
popa
push
es
dec
aam
loop
dec
adc
sub
sub
xchg
push
jns
jns
add
test
nop
add
out
jge
sub
cmp
retf
mov
loope
test
sbb
sar
lds
mov
adc
push
scas
sub
je
fcmovu
sbb
call
pop
xchg
jb
dec
xor
div
rcr
std
into
dec
push
in
dec
imul
sbb
xchg
mov
jmp
cmp
retf
icebp
pop
dec
mov
mov
call
xchg
loope
mov
sub
leave
mov
outs
sbb
xlat
or
(bad)
(bad)
dec
push
out
mov
rol
add
cs
movs
fist
sbb
inc
test
add
mov
or
shr
xchg
mov
add
jle
outs
mov
gs
in
xchg
pop
cmp
cli
xchg
jecxz
jns
mov
inc
inc
mov
jae
and
dec
test
xchg
rol
ins
sub
daa
jnp
sub
or
sub
push
mov
test
or
sub
and
dec
loope
cli
jecxz
sbb
outs
push
test
icebp
push
scas
sar
mov
mov
(bad)
(bad)
mov
js
xchg
rcl
dec
rcr
aad
ins
pop
jmp
lods
and
or
outs
adc
pop
jmp
mov
repnz
rcr
push
push
jmp
ds
cmp
test
dec
xchg
adc
ds
xor
xchg
lea
push
jg
jmp
(bad)
fstp
lods
rol
leave
aas
jg
jo
and
add
test
imul
mov
inc
sub
mov
dec
in
pop
sar
and
pop
out
lods
sub
jae
cld
xlat
push
dec
(bad)
and
xlat
cmp
cmp
or
cmp
(bad)
sti
inc
mov
and
pop
xchg
xchg
(bad)
std
icebp
aaa
adc
mov
xlat
jecxz
imul
inc
sbb
mov
mov
mov
ret
ins
out
dec
shl
mov
ins
jmp
dec
pop
jne
cld
fs
jns
inc
jnp
adc
jno
call
shl
add
dec
push
inc
sbb
add
mov
popa
cwde
inc
cmp
scas
mov
cmps
ror
jge
pop
fimul
adc
int
cmp
dec
xchg
call
arpl
adc
mov
and
inc
or
into
imul
repnz
mov
cwde
xchg
add
mov
neg
aas
outs
sub
outs
cmp
inc
push
jl
mov
cmc
test
ss
mov
pop
or
sub
ds
sub
movs
and
push
sbb
jp
mov
bound
retf
enter
clc
and
xchg
dec
jecxz
popf
inc
fsub
in
mov
jle
xchg
push
cwde
frstor
mov
int3
cmp
mov
cmps
fcom
rcl
ins
mov
sahf
cmp
ficom
cmps
pop
stos
fld
es
push
inc
and
jb
or
jns
test
fistp
jnp
inc
les
jmp
test
sbb
scas
enter
xchg
and
or
inc
inc
pop
xor
int
sar
xchg
jae
xor
inc
cmp
shl
xchg
jle
ror
out
xchg
pushf
stos
js
mov
fnstsw
ds
adc
add
push
fdiv
adc
test
and
inc
das
inc
pop
(bad)
fimul
xor
cmc
mov
mov
adc
retw
fbstp
dec
out
mov
dec
jle
rcr
pop
dec
aad
ret
xchg
jge
scas
imul
cmps
inc
gs
mov
shl
scas
jne
repz
mov
imul
in
movups
pop
mov
mov
inc
mov
hlt
add
or
and
inc
dec
xor
ret
imul
movq
ja
movs
jne
pop
(bad)
out
jecxz
inc
mov
xor
xchg
add
dec
test
push
mov
mov
or
sbb
std
repnz
rol
into
stos
add
iret
xor
adc
xchg
std
adc
cmp
dec
mov
lods
dec
pusha
mov
aas
jge
shl
fld
adc
fdiv
sub
add
xchg
in
jg
jb
lea
mov
and
dec
sbb
mov
pop
inc
mov
or
dec
int3
cld
dec
call
sbb
mov
push
lock
cdq
inc
mov
and
push
xchg
adc
jbe
fwait
mov
lea
stos
pop
dec
sub
sbb
dec
ins
call
popaw
add
sbb
pop
jo
outs
fidiv
xor
sub
jl
(bad)
mov
(bad)
pop
pop
pop
push
sub
push
adc
shl
pop
sbb
stos
cmp
jns
inc
inc
popa
xor
clc
cmovp
jbe
(bad)
mov
jmp
sbb
jno
imul
and
js
jmp
add
sub
std
xchg
xor
pusha
and
adc
jno
xchg
int
add
call
push
(bad)
and
ret
in
mov
leave
cmp
fild
cmpxchg
cmp
out
sar
sbb
in
jle
movs
dec
ret
xor
fsubr
jmp
xor
xor
sub
adc
sbb
jmp
inc
(bad)
xor
fild
xor
clc
lahf
pop
retf
mov
push
add
in
cli
lea
inc
out
(bad)
outs
xor
and
jge
adc
dec
xor
cmp
sbb
stc
add
inc
fs
jb
test
xchg
shl
pushf
daa
push
fs
jmp
xchg
idiv
mov
stos
inc
ret
sti
in
fcom
jb
test
clc
jg
jge
xchg
sti
fwait
xchg
mov
cld
arpl
in
arpl
gs
sti
pop
add
stos
mov
aad
mov
aad
dec
ret
outs
push
loope
adc
test
push
and
mov
inc
(bad)
cld
hlt
add
push
mov
add
fld
bound
cmp
push
loope
movs
mov
mov
pop
sbb
inc
jmp
cmp
in
sbb
adc
xchg
ja
add
xchg
loop
dec
outs
push
push
mov
add
das
adc
mov
and
xor
sub
jl
dec
pop
and
xor
shr
aam
and
mov
add
jo
lahf
fucomi
cwde
pop
call
ror
pop
mov
call
inc
scas
mov
pop
jmp
push
rcl
jb
ud1
mov
repz
in
adc
push
shl
mov
jnp
aam
stc
mov
mov
mov
(bad)
or
pop
ja
add
iret
rol
mov
imul
fbld
and
fbstp
sub
repz
mov
jb
xchg
pop
mov
jae
retf
rcr
dec
sub
imul
cmovl
movs
add
pop
push
loopne
mov
xchg
in
ins
push
in
jnp
cmp
aaa
pop
nop
dec
xlat
ja
push
cmps
pop
imul
repz
mov
jbe
test
xor
cdq
les
sub
mov
mov
mov
cwde
inc
fwait
pushf
push
sbb
pop
inc
test
and
icebp
call
jge
test
ror
cld
jo
push
shl
xchg
xor
dec
out
mov
jmp
sbb
shl
dec
addr16
xchg
int
xor
jge
add
xchg
mov
lock
addps
arpl
mov
fxam
and
test
sub
sub
out
mov
inc
push
push
sub
inc
push
push
jne
and
jge
(bad)
in
pop
ins
fnstcw
fdivr
jbe
or
scas
mov
ja
cdq
cmp
adc
cmp
push
ds
pop
outs
mov
or
cli
call
js
jne
outs
xchg
pop
pop
sbb
imul
xchg
mov
xchg
dec
es
loopne
add
push
xor
inc
add
adc
out
sbb
(bad)
push
jl
pop
pop
in
es
loope
js
lds
dec
sub
in
rcl
mov
or
pop
out
pop
jl
adc
dec
pop
stos
xchg
in
retf
mov
lahf
fsub
jb
out
aam
aaa
xchg
loope
inc
cmp
jg
push
xor
int
mov
scas
adc
mov
imul
inc
data16
scas
push
dec
(bad)
dec
add
leave
test
jmp
ins
(bad)
mov
(bad)
repz
mov
xlat
pop
ret
xchg
push
mov
mov
and
push
pop
mov
test
rol
and
pop
xlat
fld
jb
jae
popf
int3
cmp
add
ja
div
jno
mov
arpl
mov
adc
push
cmps
lahf
ja
add
cmp
jo
stc
jg
cmp
sti
cmp
dec
add
aad
into
adc
add
out
sub
int
loop
push
int3
add
jmp
loope
mov
call
ins
xlat
mov
js
rcl
inc
ror
cmp
and
mov
imul
fsubr
shl
pop
ja
ins
sbb
out
sbb
aam
xchg
repz
outs
in
mov
das
sub
paddd
xchg
out
pop
repz
add
xchg
sar
push
std
cmps
inc
add
ja
cli
sub
out
int
cmp
jg
stc
sbb
jmp
adc
rcr
mov
adc
mov
pusha
or
and
fisubr
aas
sub
jae
mov
aam
or
das
js
push
mov
in
mov
lahf
pop
fdiv
sbb
push
and
shl
arpl
dec
xchg
pop
sub
push
add
add
imul
inc
outs
pop
cmp
or
addr16
cdq
outs
jb
or
or
jg
loope
mov
les
cmps
push
lods
icebp
mov
or
mov
lea
mov
and
xor
jno
pop
ror
adc
mov
mov
loop
add
add
jge
mov
arpl
inc
cwde
es
adc
xchg
inc
retf
cmp
mov
jmp
mov
mov
xchg
das
ficom
retf
vpperm
adc
enter
mov
jecxz
xor
outs
add
or
adc
test
idiv
or
pop
movs
idiv
jle
mov
imul
xor
adc
fisub
aas
repz
xlat
xor
jp
ins
mov
add
data16
mov
mov
fisubr
sub
push
rcl
push
mov
ins
sbb
mov
ror
fistp
and
dec
shl
pop
cmp
xchg
call
ds
outs
mov
pushf
cld
or
(bad)
jecxz
jl
aam
ret
arpl
jae
ret
out
sub
std
fmul
daa
dec
stos
push
mov
test
loope
adc
je
sbb
imul
call
cdq
xlat
imul
jg
mov
xor
test
cs
jns
cmp
lods
mov
add
jl
xchg
hlt
adc
test
cmp
aad
das
test
(bad)
jo
pushf
fnop
xchg
nop
add
mov
xchg
rcr
les
mov
sub
and
adc
jle
test
mov
dec
out
jne
inc
push
or
cli
cli
mov
jecxz
pop
outs
pop
jno
and
popa
test
imul
xchg
xchg
jno
dec
std
pop
je
popa
push
mov
das
lea
push
fild
dec
mov
fnstsw
or
out
jp
lock
adc
aaa
lds
add
mov
cdq
mov
dec
sub
jns
pop
sbb
ret
sub
rcr
pop
ins
sti
jmp
cld
aaa
imul
lds
inc
aas
xchg
xchg
and
xor
mov
aas
(bad)
pop
add
mov
jbe
cmc
outs
fneni(8087
mov
pop
iret
dec
lods
and
ins
les
add
stos
movs
in
jmp
pop
push
push
pop
jecxz
sbb
loop
push
jnp
cmp
daa
sbb
addr16
repnz
sub
xor
(bad)
sbb
push
xor
or
sub
mov
pop
xor
or
xchg
dec
aad
into
daa
jbe
div
call
mov
rol
or
mov
cwde
jae
sub
inc
adc
js
or
push
mov
mov
fidivr
popa
inc
mov
add
mov
shl
pop
pop
(bad)
test
rcr
cmp
dec
lock
cmp
jb
push
push
shr
pop
and
jns
sbb
add
xor
mov
xchg
cmc
push
or
loopne
retf
movs
jl
nop
sub
pop
add
mul
mov
std
mov
fs
xchg
mov
and
mov
or
cwde
push
inc
add
sub
int3
hlt
pop
in
out
mov
jmp
jmp
sbb
aam
scas
leave
pushf
push
dec
je
pop
out
jno
std
lods
sub
ss
hlt
out
ficom
mov
push
clc
loope
pop
cmps
gs
popa
xchg
jnp
cmp
aaa
sub
(bad)
mov
sub
int3
cmp
push
jo
psubq
adc
bound
xchg
out
pop
stos
mov
outs
rcr
or
xor
mov
fadd
cmps
sti
jo
ret
pop
pop
xor
or
cmp
lods
jmp
fcmovnb
dec
pop
repnz
pop
ds
cmp
jle
inc
pop
(bad)
clc
mov
inc
cmps
sti
push
mov
add
nop
idiv
outs
das
sub
pop
scas
lods
and
xchg
loope
pusha
aad
inc
cwde
inc
cmp
pop
cmpxchg
add
push
dec
fst
jle
arpl
popf
js
or
jns
push
jge
dec
scas
sbb
push
jo
mov
shl
push
push
push
sub
mov
mov
and
cdq
add
mov
lea
inc
lahf
retf
(bad)
mov
add
jmp
mov
nop
jge
jmp
leave
mov
imul
jle
cmp
sbb
inc
fs
mov
mov
dec
push
es
inc
imul
xchg
mov
nop
not
push
sub
scas
xchg
pop
shl
mov
pushf
pusha
fldcw
sbb
sbb
sub
in
jnp
sbb
dec
ds
shl
je
in
inc
jne
popf
mov
ins
dec
xlat
retf
imul
jp
mov
cmp
call
rdmsr
mov
push
retf
xchg
retf
cld
or
or
lahf
dec
mov
or
lods
lods
pop
jmp
push
mov
and
mov
es
pop
test
mov
dec
sub
scas
xchg
sbb
add
or
pop
dec
mov
pop
popa
mov
cmp
mov
daa
fstp
clc
jb
test
add
jmp
xchg
pop
mov
add
in
add
cwde
and
cld
fs
into
in
pop
outs
in
sub
sub
nop
stc
hlt
mov
mov
sbb
add
jb
mov
jg
jle
mov
pusha
in
push
mov
push
and
loope
(bad)
push
(bad)
mov
sbb
sub
mov
icebp
pusha
test
cmp
and
xor
or
nop
std
xchg
mov
jmp
out
jmp
call
ficom
add
add
jo
mov
(bad)
push
push
das
push
fldcw
mov
mov
jmp
xor
inc
ret
sub
inc
mov
cwde
mov
sbb
scas
dec
push
(bad)
es
outs
lods
mov
cmp
mov
idiv
push
ficom
pop
fcom
jp
jnp
cmps
pop
int3
aaa
xor
cdq
add
push
mov
jae
lods
in
fnstenv
gs
outs
fs
inc
pop
or
sbb
mov
jns
mov
adc
add
and
or
repnz
dec
adc
fs
mov
test
pop
xor
push
shr
iret
cmp
aad
jne
in
fdivr
fisubr
or
sub
int3
inc
lea
mov
and
into
adc
push
jb
(bad)
push
int3
sahf
ror
lock
sub
pop
mov
xchg
and
fs
movs
push
jg
out
mov
leave
out
mov
fbld
xchg
fstp
lock
pop
gs
and
mov
sbb
psraw
shl
or
data16
jge
in
push
xchg
inc
mov
test
cmp
jp
mov
(bad)
and
retf
push
or
adc
cmp
mov
xchg
xchg
clc
out
sbb
or
dec
aaa
push
inc
sub
add
ja
cmps
cs
mov
rcr
push
div
mov
sbb
popf
sub
and
mov
lea
mov
jno
imul
sub
jmp
or
icebp
or
mov
enter
sub
or
in
xchg
jns
sbb
mov
sbb
xchg
inc
mov
inc
arpl
sub
push
xor
mov
arpl
mov
adc
shr
int
aam
cmp
mov
mov
arpl
cmp
inc
or
and
mov
test
js
push
mov
cmp
clc
adc
cmp
dec
mov
dec
inc
xchg
in
cmc
(bad)
cmps
(bad)
sub
test
mov
lahf
in
jbe
outs
or
psrld
mov
mov
es
popf
xor
mov
ins
fisub
cs
gs
add
in
fucompp
mov
loop
mov
in
mov
pop
lock
push
mov
xlat
dec
es
imul
cmp
dec
js
shrd
fistp
fisub
xor
sub
push
push
sub
cld
pusha
sbb
rol
mov
xchg
xor
loope
xlat
cmp
push
stos
xchg
pop
pop
cs
push
push
and
lods
outs
stos
imul
and
call
loop
movs
jl
mov
out
std
cmps
cmp
or
loopne
test
push
mov
add
adc
or
sub
movs
push
loop
test
pop
das
cmp
push
popa
jp
cs
mov
js
lods
xchg
fidivr
(bad)
push
aaa
cmps
cmps
ret
rcl
inc
mov
lods
call
test
xor
cmp
mov
cmp
(bad)
(bad)
out
(bad)
aam
dec
adc
mov
jmp
xor
rcl
loop
or
mov
pop
(bad)
mov
push
jns
sbb
cmp
or
inc
or
js
mov
outs
mov
clc
fnstsw
pop
aam
jmp
pop
shr
test
loope
mov
ins
fidivr
pushf
inc
out
and
fcom
shl
aaa
popf
pop
pop
mov
sub
lods
fnstcw
cmp
sub
scas
xchg
xchg
mov
sub
sar
lods
push
lods
dec
mov
pushf
sbb
inc
mov
dec
aaa
stos
out
sub
popa
dec
push
jb
mov
mov
scas
jg
or
pusha
mov
mov
ficom
dec
int3
(bad)
sahf
mov
ds
cmp
lock
popa
sbb
mov
and
xor
mov
test
in
aaa
fbstp
dec
int
clc
mov
adc
xor
lds
pop
pop
mov
aam
xchg
es
mov
mov
neg
jle
jge
rcr
aas
retf
out
dec
(bad)
pop
fsubr
imul
pop
jg
daa
or
outs
stos
adc
mov
push
cmps
push
mov
enter
mov
push
add
inc
or
cmc
outs
mov
das
inc
fwait
jo
dec
xchg
test
fwait
dec
push
fcomp
ret
(bad)
mov
fmul
push
(bad)
rol
sbb
mov
das
into
cwde
xchg
sub
jmp
retf
aam
jne
bound
or
sub
and
icebp
cdq
daa
sbb
push
mov
(bad)
(bad)
xor
aad
leave
out
mov
bound
sbb
in
cmp
(bad)
rcl
leave
dec
sub
or
dec
push
pop
out
mov
sar
cwde
and
add
movs
jne
mov
out
retf
out
add
and
mov
xor
jne
popf
inc
push
lock
dec
jmp
rcl
push
jmp
cmp
or
fidivr
mov
cmp
push
shr
(bad)
mov
cld
add
add
cmc
into
jmp
int3
pop
movs
popa
inc
mov
js
test
push
push
push
loop
fwait
push
icebp
cmp
mov
in
enter
mov
adc
xor
jno
mov
loopne
cli
mov
in
enter
cwde
mov
add
lods
test
inc
sub
out
cmc
mov
repz
cli
clc
xlat
test
push
loopne
out
sbb
ss
jmp
ss
push
xlat
mov
adc
add
pop
jp
clc
cdq
mov
pusha
push
cmps
sub
pop
lock
sub
cmps
push
das
cld
fwait
lds
loopne
mov
std
dec
push
daa
(bad)
cmps
idiv
ror
dec
mov
mov
(bad)
imul
jg
cmp
mov
movs
jle
inc
and
dec
pop
inc
jmp
lods
imul
call
add
shr
push
mov
push
xchg
xchg
xchg
pop
or
je
cmps
(bad)
fbld
sub
in
rcl
xchg
addr16
xchg
call
sbb
lock
cmp
pop
push
xchg
mov
push
imul
hlt
inc
xchg
and
loop
or
xlat
bound
mov
jle
cmc
test
push
leave
sub
nop
shr
jnp
dec
out
pop
ret
add
mov
adc
or
(bad)
imul
push
push
test
(bad)
(bad)
cmp
mov
adc
(bad)
loopne
lahf
pop
sbb
rol
into
mov
adc
(bad)
mov
test
das
pushf
jno
pushf
jmp
mov
jb
pop
(bad)
push
test
xor
inc
fadd
pop
and
sahf
adc
sti
pop
push
pop
pavgw
lahf
fprem
pusha
test
sub
fadd
jmp
push
imul
scas
in
inc
in
fadd
sub
and
mov
xor
repz
out
in
xchg
shl
call
xchg
ret
xor
imul
pushf
cmp
ss
xor
adc
(bad)
sbb
cmp
lahf
sti
mov
js
xchg
mov
xor
and
push
pop
and
pop
push
loop
mov
enter
int3
mov
mov
add
add
pop
cwde
cmp
jne
jne
add
cmp
inc
in
or
in
lods
jmp
cmp
dec
inc
or
mov
mov
aas
mov
add
inc
push
push
mov
jecxz
pop
sub
sub
std
in
add
outs
movs
jb
movs
xchg
push
dec
mov
cwde
sbb
mov
cs
scas
add
in
cmp
lods
mov
out
pop
xor
jo
adc
das
adc
mov
adc
adc
sbb
scas
or
push
(bad)
push
and
mov
push
jle
sbb
outs
sub
dec
and
scas
lea
mov
xor
ins
push
les
stos
mov
jno
dec
mov
nop
sbb
sbb
(bad)
push
or
sahf
cmps
dec
xor
gs
daa
or
ds
push
imul
sub
sbb
imul
push
in
loope
into
xor
mov
cli
push
mov
dec
xchg
or
xor
adc
addr16
cmp
push
in
pop
cs
(bad)
pop
in
push
popa
pusha
add
movs
push
mov
and
ficomp
mov
dec
daa
nop
test
or
mov
movs
ficom
int
movs
sbb
nop
stos
test
add
icebp
ds
int
in
dec
pusha
ins
pop
mov
xchg
or
movs
or
jbe
fwait
sbb
retf
pop
cwde
in
rcl
repnz
sti
cli
push
fwait
les
in
lea
mov
pop
aad
dec
cmp
sbb
pop
fs
xchg
push
hlt
nop
jne
xor
(bad)
imul
aaa
xchg
cdq
xchg
pop
inc
jae
das
loopne
pop
(bad)
sub
inc
mov
jmp
jmp
push
mov
inc
and
aad
test
xlat
and
sub
inc
mov
in
push
pop
pop
xor
out
add
mov
jne
rcl
ficomp
and
and
sub
in
retf
ret
leave
aad
sbb
add
in
mov
cmps
adc
rcl
push
cdq
or
jbe
add
push
fiadd
push
add
mov
dec
sbb
xchg
xchg
inc
sub
mov
imul
sti
lods
out
iret
cmp
xor
pop
add
push
xchg
dec
into
mov
dec
or
stos
inc
sub
and
cmp
xchg
fcom
pop
inc
xor
inc
sub
aam
fisttp
jle
jmp
iret
cld
jno
push
and
mov
imul
push
lock
ret
mov
stos
push
push
loopne
push
add
cli
movs
js
loop
fdiv
inc
inc
mov
rcl
inc
hlt
(bad)
scas
adc
and
push
pop
xchg
sahf
daa
push
sbb
push
jl
mov
mov
and
and
xlat
stos
cmp
in
pop
or
bound
fs
cmp
fimul
cmps
je
(bad)
outs
xchg
mov
les
imul
lahf
cs
sahf
out
mov
ins
mov
das
mov
inc
cmps
(bad)
and
lds
gs
inc
(bad)
inc
in
xor
mov
call
or
fld
jmp
and
loope
jne
add
cmp
(bad)
mov
xor
jle
(bad)
ins
mov
or
xchg
xor
mov
mov
or
mov
jmp
loop
lods
add
sub
mov
in
jle
xchg
sub
mov
loop
jg
ds
push
adc
out
mov
mov
imul
fucom
mov
mov
inc
xlat
and
das
xlat
inc
loop
mov
into
jb
xor
lods
retf
bndldx
mov
outs
cwde
cmp
push
xchg
add
lock
fcom
clc
fs
(bad)
push
and
(bad)
nop
test
push
out
push
lods
dec
out
test
add
in
out
call
cmp
xor
pop
sub
push
aad
xor
mov
dec
mov
les
inc
movs
(bad)
adc
call
je
fisttp
and
push
out
or
mov
fwait
scas
mov
xor
cmp
call
fdiv
movs
scas
(bad)
arpl
(bad)
into
sub
cmp
cmps
in
pop
push
pop
in
push
push
push
dec
addr16
sub
sbb
lods
mov
test
inc
sub
push
(bad)
xor
mov
daa
fimul
push
jp
sbb
loop
mov
add
mov
ret
in
jp
or
push
inc
mov
mov
dec
add
adc
cld
ror
mov
ret
fs
(bad)
and
or
pop
inc
div
jl
in
rcr
push
ret
sti
ins
sbb
jo
adc
jmp
bound
nop
xor
jno
aas
hlt
mov
lds
sbb
push
(bad)
pop
pop
pop
js
mov
and
aaa
cwde
imul
retf
jno
(bad)
cli
lods
retf
bound
cmps
mov
in
(bad)
adc
cmps
pop
xchg
dec
jge
pop
and
scas
xchg
sbb
cdq
clc
add
ja
cmp
mov
jb
test
fwait
test
cmp
cld
fwait
movs
push
(bad)
loope
adc
out
add
into
jno
xchg
cld
mov
push
cmps
mov
jbe
enter
jl
lods
dec
or
sbb
xlat
or
ja
mov
or
mov
adc
loope
test
retf
lods
sahf
dec
loopne
dec
test
nop
ins
xchg
pop
ret
jbe
push
dec
es
jne
stos
jno
cmp
mov
ss
inc
shl
arpl
dec
int3
add
push
fild
add
(bad)
fwait
mov
lea
inc
les
aaa
iret
mov
arpl
into
repnz
sar
imul
mov
cmps
jle
jns
sbb
sub
xchg
mov
sub
popf
test
setp
adc
lahf
sbb
dec
xor
cs
scas
and
mov
mov
cdq
xor
cld
fldcw
xor
mov
jne
pop
lock
dec
out
enter
hlt
repnz
div
mov
mov
adc
div
and
sub
push
lahf
ficomp
add
popa
ds
rcr
cmp
dec
push
or
sub
sbb
dec
ja
gs
cmps
cmp
xchg
test
loope
inc
jg
xor
je
mov
and
push
add
mov
mov
mov
mov
pop
push
call
push
cmp
cld
pop
in
mov
loope
enter
fstp
fild
mov
xchg
xor
or
loop
std
es
fsub
mov
in
jp
inc
xchg
mov
lods
rcl
aam
dec
xchg
into
and
mov
sub
inc
fadd
xchg
mov
pushf
(bad)
mov
das
popa
rcl
cmp
scas
lahf
add
dec
(bad)
pop
shl
xor
outs
cmp
pop
je
cmp
sar
icebp
mov
mov
jp
and
sub
jmp
(bad)
into
sahf
push
retf
test
mov
push
cmp
cld
push
pop
push
push
xchg
mov
mov
pusha
in
hlt
fsubr
aas
movs
imul
or
push
ffreep
iret
push
add
dec
or
test
or
in
cmp
enter
sbb
(bad)
push
leave
mov
(bad)
inc
push
aas
lods
jle
sub
icebp
ror
cmp
pop
and
mov
sar
push
sub
pop
(bad)
sti
sti
xor
dec
cmp
and
or
retf
adc
push
push
jmp
dec
and
imul
gs
mov
jp
movs
cmp
mov
mov
xor
enter
inc
ds
int3
jmp
xor
scas
(bad)
lds
pop
(bad)
out
into
into
ds
test
ret
(bad)
fld
repnz
les
fwait
adc
cld
sbb
movs
ja
test
mov
cmps
jo
std
dec
mov
jl
and
push
sub
dec
lahf
jno
xchg
cmp
and
es
es
retf
dec
mov
gs
popf
daa
push
adc
push
rcr
xchg
push
jnp
retf
jmp
jg
idiv
dec
dec
aaa
cmp
jg
ja
rcr
sub
sub
imul
das
mov
inc
mov
dec
sbb
add
inc
sti
aas
ror
mov
and
jno
sbb
and
enter
lea
jle
mov
(bad)
hlt
sbb
scas
adc
imul
xor
sbb
jge
sub
hlt
movs
mov
aad
xor
ffreep
aam
(bad)
std
push
(bad)
xchg
dec
cmp
jnp
or
mov
pop
je
dec
or
add
mov
adc
imul
repz
stc
es
mov
out
std
pop
mov
daa
out
xor
pop
sbb
xor
cmps
xlat
dec
jp
leave
sar
sbb
sti
sbb
cwde
call
xchg
mov
mov
jg
ss
and
dec
mov
out
pop
sbb
ds
ret
and
sub
mov
push
cmc
inc
ins
nop
push
jb
in
int3
cli
cmp
cmps
in
int3
adc
ret
xor
in
and
into
xchg
ret
dec
inc
push
shr
popf
cs
pop
ret
fwait
mov
mov
push
cmc
mov
pop
jns
sbb
nop
rol
sub
push
in
ins
(bad)
div
push
mov
fld
jb
movs
lock
fisttp
rcr
inc
xchg
(bad)
jmp
test
sbb
jmp
icebp
mov
or
fidiv
in
mov
dec
out
pop
mov
dec
retf
push
ficomp
mov
mov
arpl
gs
(bad)
test
jge
inc
leave
sub
mov
mov
dec
xchg
(bad)
sahf
fbstp
ins
cmc
sahf
push
push
xchg
cmps
outs
mov
fidiv
lea
push
adc
sar
sbb
push
dec
add
push
pop
mov
test
add
sahf
push
shl
data16
or
mov
pop
xor
(bad)
lods
sbb
pop
pop
xchg
lods
and
mov
dec
xor
or
dec
sub
lds
(bad)
mov
dec
or
mov
cli
push
lock
popf
sub
or
push
xchg
call
nop
inc
xor
call
push
shl
ds
call
mov
aam
push
ret
popf
inc
xchg
fwait
push
jmp
neg
cmp
loope
mov
xor
nop
jl
mov
pop
in
jne
test
out
inc
jb
xchg
xor
das
leave
cmp
fstp
ins
popa
mov
and
je
test
out
cmc
push
lea
aam
push
popa
out
adc
pop
imul
and
cmp
ret
cmp
in
pop
movs
xchg
cwde
xlat
dec
sub
push
mov
pop
cmp
hlt
or
in
push
(bad)
stc
and
and
sub
nop
or
xlat
sbb
clc
call
cs
or
fisubr
mov
lods
iret
or
clc
fs
pop
push
mov
dec
mov
mov
out
inc
addr16
sbb
in
fcomp
dec
das
lahf
lods
jno
ret
jno
pop
inc
cs
and
outs
push
sub
outs
inc
push
retf
jl
pop
xchg
push
cwde
xor
in
outs
jae
xchg
pop
xor
mov
jno
add
cmp
dec
push
jle
and
push
xchg
ins
movs
mov
cs
cmps
jbe
jae
shl
jl
fimul
mov
jle
es
pop
xchg
xchg
aaa
div
pushf
cdq
cmc
cli
jl
mov
xchg
pop
adc
nop
les
or
push
mov
adc
push
out
rol
(bad)
jbe
inc
cmps
dec
test
nop
shr
ret
push
mov
and
(bad)
outs
stos
adc
js
mov
call
xchg
iret
cli
into
sbb
div
lods
sub
mov
mov
es
movs
jae
mov
popa
movs
mov
lea
xlat
mov
(bad)
jmp
or
dec
loope
sub
adc
pop
imul
test
jmp
inc
mov
sub
out
xlat
xchg
mov
(bad)
ins
cmc
je
cwde
dec
test
lock
stos
es
enter
sub
daa
mov
cmp
das
in
sub
inc
jmp
xchg
mov
pop
xor
retf
mov
test
dec
or
sub
adc
pusha
dec
xchg
push
ins
inc
ror
cmovnp
mov
pop
sub
ret
mov
int
jne
repnz
pop
add
out
int3
addr16
lea
lahf
pop
ins
not
out
xchg
ja
mov
shr
and
fwait
lods
xchg
aad
ds
jnp
enter
dec
dec
mov
sbb
inc
or
(bad)
cmp
or
nop
and
push
and
test
or
std
pop
or
push
rcl
out
or
xchg
xchg
popa
data16
push
in
xchg
adc
or
jg
ss
neg
loopne
xor
mov
jle
test
mov
(bad)
jge
fadd
mov
xbegin
out
xor
das
rcr
movs
add
add
repz
jmp
xor
fld
pop
(bad)
fdiv
jb
into
xor
mov
movs
add
test
pop
enter
stos
pop
js
fist
mov
push
add
pop
stos
dec
popf
xchg
into
test
loope
adc
mov
ret
adc
add
cmp
xor
xchg
sbb
lock
repnz
and
push
dec
jmp
mov
icebp
aam
popa
push
test
fisub
icebp
jp
jmp
adc
adc
pop
jl
xchg
xchg
ror
add
mov
loopne
test
mov
add
out
cmp
fidiv
sahf
push
call
xor
mov
xor
xchg
push
popf
mov
jb
fistp
aam
mov
lods
pop
dec
cmps
sub
jge
iret
out
loop
xchg
jle
dec
inc
shr
sub
jle
jecxz
xor
add
fdiv
xorps
sub
scas
sub
test
fimul
stos
mov
aad
loopne
jb
mov
scas
movs
or
aaa
imul
sub
xchg
ins
(bad)
retf
add
adc
xchg
outs
ficomp
fdivr
ins
cdq
movs
add
fs
dec
popf
fist
out
out
call
lock
out
rcr
jl
sub
ret
xchg
data16
aaa
adc
push
scas
xchg
rcl
int
(bad)
sahf
or
mov
push
addr16
and
cs
mov
hlt
hlt
add
add
xchg
push
dec
cwde
enter
sahf
xchg
dec
fild
outs
mov
add
jo
lods
mov
or
aas
test
cmp
iret
mov
adc
cmp
adc
in
lds
and
mov
rcr
xor
xchg
fnstsw
pop
xor
add
inc
pusha
adc
jp
test
lods
movs
dec
out
sbb
loopne
retf
neg
push
test
retf
xor
mov
cmp
sbb
data16
jmp
addr16
xchg
cwde
gs
loop
retf
jbe
jns
push
jg
jb
rol
cdq
mov
jmp
mov
mov
xchg
adc
lods
pxor
shl
loop
(bad)
push
jbe
fcom
mov
ror
ds
cld
pop
dec
xchg
movs
mov
inc
ficomp
sub
jmp
outs
push
add
cdq
mov
loopne
or
pop
fisttp
ficomp
(bad)
xor
outs
lahf
test
imul
mov
aam
xor
xlat
adc
cwde
stc
leave
dec
mov
ret
rcr
mov
sbb
pop
jg
in
jo
jns
xor
adc
sbb
cmp
scas
adc
scas
pop
adc
jmp
nop
mov
jnp
push
cmp
pop
fcom
out
(bad)
outs
dec
push
mov
shl
imul
mov
ficom
imul
jl
dec
adc
or
dec
arpl
loop
(bad)
retf
mul
bound
fs
cmp
jp
scas
xor
aaa
pop
mov
xchg
ja
test
or
xor
or
mov
mov
push
pop
push
and
mov
mov
ss
mov
aas
and
inc
cmp
push
imul
(bad)
hlt
test
sub
cmp
dec
sub
mov
in
stos
and
dec
cmp
mov
jbe
sbb
push
out
jno
jbe
pop
cdq
mov
xchg
push
ds
push
mov
psllw
outs
mov
fsubp
mov
fdivr
inc
ss
in
mov
cmp
dec
adc
test
add
add
gs
out
lods
ret
or
adc
dec
hlt
shr
scas
lea
cdq
adc
scas
in
shl
popf
fistp
test
enter
xchg
or
push
loopne
lods
ds
mov
pop
adc
mov
mov
mov
ds
(bad)
loopne
cmp
fdivr
jl
and
adc
or
stos
arpl
pushf
daa
call
rcr
rcr
sbb
pop
and
fstp
rcr
shl
sub
shl
mov
fisub
sub
cmp
push
jge
xchg
add
out
and
aas
jo
test
movs
fwait
into
fdiv
add
xchg
fucomip
cmp
mov
xor
cmp
lods
jl
mov
data16
push
inc
(bad)
mov
jg
xchg
fdiv
imul
mov
adc
repz
call
add
or
movs
adc
jmp
mov
or
jbe
add
adc
mov
cmp
and
mov
dec
popa
ins
and
sbb
inc
arpl
lods
xchg
xchg
fisttp
repz
mov
jo
neg
inc
iret
ins
dec
add
mov
or
adc
cmps
stos
mov
arpl
sub
xchg
xor
(bad)
out
pop
mov
mov
mov
dec
mov
out
imul
xor
adc
jle
fsub
mov
sbb
loope
scas
out
retf
push
es
mov
fs
inc
sbb
xlat
mov
mov
push
sar
stc
mov
jno
inc
jae
mov
lds
adc
or
xchg
cli
fcmovb
cmps
in
jmp
push
addr16
rcr
adc
xor
gs
push
dec
mov
inc
stos
push
jl
les
mov
lahf
pop
jp
iret
aas
add
movs
mov
lock
fist
inc
ret
mov
jo
mov
shr
pop
enter
pop
xchg
adc
(bad)
sbb
push
sub
lea
dec
cdq
mov
xor
mov
imul
mov
imul
cmp
aaa
and
push
xor
pop
push
and
jae
ret
(bad)
or
inc
loope
retf
pusha
add
jle
mov
cli
push
es
adc
pop
push
(bad)
mov
dec
dec
mov
and
sbb
add
(bad)
stos
xor
adc
cmp
stos
movs
xchg
and
clc
loope
lahf
pop
cmp
xchg
add
daa
inc
xor
sbb
cmp
push
jmp
fwait
mov
pop
mov
addr16
dec
sub
arpl
sub
ret
loope
sub
(bad)
ficom
out
mov
retf
je
jbe
movs
mov
sub
sub
xchg
adc
int3
dec
push
mov
popf
jl
dec
out
gs
xchg
in
xchg
arpl
and
pop
jmp
nop
in
xlat
sbb
mov
cdq
gs
inc
inc
pop
mov
int3
push
sub
cs
outs
repz
mov
inc
mov
inc
push
sti
cli
inc
mov
in
enter
gs
push
push
pop
or
movs
jl
mov
dec
sub
push
clc
and
push
movs
sbb
movs
xchg
aam
retf
sar
loopne
sti
test
dec
add
inc
inc
push
jns
push
pop
outs
and
mov
ja
arpl
out
or
fstp
mul
int
out
std
mov
mov
mov
push
pop
shl
cld
retf
(bad)
cmp
pop
lock
sub
mov
(bad)
loopne
sbb
push
jmp
jge
gs
push
push
test
push
movs
js
sbb
fnsave
xor
mov
jmp
cli
fs
cmp
mul
cmps
mov
fsubr
adc
mov
pop
jge
fidivr
pop
xor
fs
jle
add
adc
test
stc
(bad)
mov
mov
lods
sub
xchg
xchg
in
mov
push
das
pop
bound
jecxz
pop
(bad)
mov
xchg
adc
addr16
in
adc
retf
or
inc
nop
sbb
jecxz
push
stos
daa
jbe
mov
pushf
push
arpl
xlat
outs
mov
or
iret
pop
loop
dec
lahf
scas
jmp
and
les
jbe
pushf
and
fcomip
jp
mov
not
sub
adc
mov
(bad)
fld
test
movs
cmp
psllw
pop
je
js
sahf
dec
pop
nop
mov
lahf
leave
xchg
sbb
fmulp
hlt
scas
cmp
cmp
pop
les
pop
imul
push
(bad)
outs
outs
ret
mov
or
mov
aam
sbb
out
mov
sti
lahf
pop
mov
jecxz
loop
add
jle
xor
not
cdq
sahf
adc
ret
dec
pop
sbb
ficomp
lods
mov
js
pop
loop
movs
ds
sbb
lahf
dec
stc
push
sar
and
mov
fwait
pop
pop
cmp
stc
and
loopne
push
cmps
sub
add
leave
test
add
sbb
fwait
hlt
or
cli
or
and
jae
jb
jp
mov
jmp
add
in
mov
add
int
daa
push
cmp
daa
test
aam
cmps
mov
or
and
push
inc
push
cmps
fsub
add
ins
ins
xchg
mov
sahf
sbb
ficomp
ins
pusha
mov
sbb
es
inc
pop
push
push
jg
jbe
adc
daa
aaa
cmp
cmps
inc
mov
scas
adc
pop
fdivr
data16
scas
movs
pop
mov
stos
and
das
test
aad
sub
enter
pop
mov
arpl
lea
repnz
add
xchg
pop
pop
popf
mov
mov
adc
dec
dec
mov
adc
push
sbb
neg
cmc
out
mov
inc
cmp
dec
or
sbb
or
xchg
pop
inc
enter
mov
(bad)
push
int3
xor
int
mov
(bad)
addr16
mov
cmc
mov
lahf
ret
loopne
jg
scas
mov
imul
(bad)
rcr
pusha
adc
push
add
mov
sahf
out
cmp
pop
lahf
jne
fwait
jno
in
cmps
ja
jp
(bad)
in
shl
push
sbb
cmp
popf
imul
aas
loop
jae
push
stos
sub
jae
push
add
cmp
fidivr
xlat
and
sub
loopne
push
push
xchg
mov
aas
mov
and
ins
scas
cmp
jp
and
xchg
inc
ret
cmps
aas
jo
and
xchg
div
push
je
pop
jmp
cwde
inc
dec
ja
mov
or
ficom
scas
or
ins
xchg
pop
sbb
(bad)
cmc
(bad)
loopne
adc
lods
jmp
mov
(bad)
in
rol
popf
add
ja
xor
jmp
cwde
inc
pop
ficomp
addr16
mov
push
mov
aad
xchg
sbb
in
xchg
pop
inc
inc
mov
inc
outs
push
dec
mov
es
pushf
ret
or
das
(bad)
xchg
sti
cmps
mov
test
mov
(bad)
addr16
aaa
xchg
pop
jmp
popa
inc
jae
jne
jne
sub
jmp
jle
scas
or
xsha1
cmps
mov
adc
sar
stc
into
daa
ja
mov
std
and
jmp
jmp
inc
imul
call
push
bound
ins
call
xchg
adc
mov
mov
in
jo
xchg
push
and
xchg
push
sbb
jnp
or
rol
outs
jno
(bad)
jmp
cs
xchg
pop
mov
ret
(bad)
xor
sbb
push
int3
test
in
mov
scas
dec
xchg
push
xchg
fwait
jb
lock
(bad)
enter
lds
sbb
or
pop
imul
jo
xor
xchg
mov
aaa
pop
retf
push
jecxz
dec
(bad)
mov
push
jae
or
movs
fcmovnbe
sahf
jns
mov
jns
inc
and
leave
rcl
out
popf
push
add
ret
stos
or
sbb
pop
fnstsw
adc
loop
dec
push
ret
mov
pop
sbb
out
mov
in
jle
adc
ret
das
mov
mov
pop
and
fsubr
add
test
imul
mov
imul
pop
fs
outs
fnsave
add
sbb
mov
or
js
fsubr
jno
lock
jo
gs
stc
(bad)
in
xchg
inc
test
div
das
rcr
shl
retf
dec
xchg
popa
nop
cmp
jg
iret
loopne
jae
mov
pop
inc
jecxz
dec
xchg
sti
ret
cmp
push
lods
xor
mov
mov
out
adc
sub
mov
jnp
loopne
and
in
push
imul
cs
cmp
jns
fadd
(bad)
rol
add
sub
xchg
pusha
cmp
outs
push
mov
mov
icebp
cmps
pop
(bad)
popa
cmp
xor
imul
js
inc
pop
mov
aam
cmps
and
ret
dec
ins
rcl
ja
std
lods
pop
sub
in
call
inc
mov
jb
popa
into
inc
push
adc
sub
loope
or
fdiv
add
(bad)
pop
xchg
sub
enter
sbb
add
inc
xchg
rol
jo
fisub
xor
inc
pop
inc
push
mov
jl
xchg
push
and
loop
jno
and
stos
fwait
add
cwde
push
loopne
in
adc
xlat
leave
imul
cmc
inc
cmp
adc
or
mov
cmc
inc
ins
cmp
sub
adc
push
push
xchg
add
cmp
adc
push
add
pushf
test
mov
xor
xchg
or
dec
(bad)
outs
cmp
cmc
jge
into
mov
inc
repnz
mov
(bad)
push
cmp
daa
mov
xor
or
bnd
jmp
inc
ins
stos
daa
adc
and
je
(bad)
addr16
jmp
push
sbb
lds
arpl
mov
iret
cmp
loopne
jecxz
cwde
(bad)
out
es
xor
imul
fstp
les
add
call
jmp
in
arpl
xchg
call
pop
data16
xor
jo
ins
fs
jae
mov
ins
push
fisttp
mov
inc
cdq
jl
adc
push
pop
(bad)
retf
add
or
leave
out
inc
push
jns
or
retf
xor
mov
fxch
inc
jbe
add
aad
cmc
test
(bad)
imul
cdq
and
cdq
or
xor
add
mov
push
(bad)
imul
(bad)
ficomp
mov
je
vmovdqa
fwait
lea
adc
inc
mov
div
dec
push
loop
xchg
loopne
fcom
(bad)
xchg
or
push
add
or
xor
inc
imul
movs
test
mov
xchg
(bad)
(bad)
es
dec
fs
out
int
(bad)
scas
sub
cli
stos
push
push
pusha
mov
inc
repz
scas
jecxz
(bad)
out
inc
mov
fimul
push
jp
lock
test
inc
iret
test
mov
lods
jb
xchg
ds
mov
jp
adc
and
popa
add
iret
enter
hlt
or
aam
pop
loop
xchg
ret
adc
ror
jp
add
inc
sbb
pop
cmp
cmp
daa
stc
std
aas
xchg
iret
(bad)
fsub
or
xor
or
xchg
cmp
nop
xchg
js
mov
mov
mov
jne
fist
fsubrp
cmps
out
push
enter
sbb
movs
shl
jmp
retf
gs
(bad)
out
and
xchg
push
loopne
or
int
inc
ror
mov
cdq
jg
test
lods
inc
cs
daa
cs
cs
adc
into
call
xor
repnz
fimul
in
or
jmp
jmp
mov
cmp
push
out
sub
cdq
es
and
sub
push
add
push
cmps
rcl
add
cmps
in
gs
inc
mov
in
std
scas
nop
ds
dec
gs
push
in
lock
(bad)
stos
xor
add
pop
out
jbe
dec
mov
jle
or
jge
je
cmps
xchg
loop
adc
pop
pop
loopne
hlt
inc
jns
xor
pop
or
mov
mov
lfs
adc
sahf
int
rcl
addr16
(bad)
shl
push
pop
xchg
inc
and
fs
popf
and
cmp
dec
push
add
xchg
jb
mov
lds
or
mov
push
dec
add
adc
fs
jge
pop
mov
pop
imul
outs
mov
movs
pop
sti
jnp
jg
add
adc
jns
dec
je
pushf
sbb
xchg
loopne
into
test
mov
(bad)
mov
into
pop
mov
jns
test
scas
cmps
pop
fs
movs
jge
pop
pop
int3
shr
xor
mov
push
jg
cli
loop
ins
mov
cmp
sbb
mov
fldcw
imul
nop
mov
ds
cmc
aad
xor
scas
repnz
or
push
into
ret
fnstenv
(bad)
and
pop
lock
shl
push
add
lods
adc
dec
push
hlt
and
nop
sti
out
mov
(bad)
ds
mov
and
mov
mov
push
enter
inc
push
push
cmc
push
mov
sbb
cmp
xchg
adc
adc
sub
dec
std
popf
mov
adc
ja
js
mov
test
idiv
rcl
popf
aam
test
adc
repnz
ins
out
test
scas
mov
adc
addr16
repz
nop
repz
sub
call
js
sbb
int3
test
and
addr16
fist
inc
mov
lods
cld
arpl
xchg
inc
adc
loope
leave
clc
cmps
add
inc
jmp
stos
popa
arpl
aam
into
test
arpl
imul
rcl
sar
dec
pop
aad
and
mov
or
retf
push
push
mov
pop
fisubr
retf
leave
xchg
sbb
stc
push
inc
hlt
fadd
adc
push
hlt
cmp
jg
xor
add
jl
jmp
cdq
mov
and
adc
test
in
mov
pop
push
scas
sub
xor
ss
pop
(bad)
out
std
je
xor
and
mov
mov
sub
dec
inc
xchg
cmp
int
lahf
push
cmp
dec
jl
mov
imul
cdq
(bad)
bound
ins
cs
mov
cwde
push
sahf
mov
test
xcrypt-ecb
cmps
push
xchg
aad
add
push
adc
sbb
movs
repz
xchg
inc
test
call
mov
ja
mov
xchg
xor
jmp
retfw
inc
sub
mov
dec
jns
and
clc
icebp
inc
dec
cmp
mov
retf
pushw
outs
pop
pop
std
adc
jne
das
or
push
rep
xlat
int3
dec
out
sahf
mov
out
push
in
pop
cs
sbb
xchg
xchg
xchg
in
xchg
scas
cmp
lds
stc
call
mov
push
mov
enter
adc
xchg
mov
test
mov
mov
sbb
call
leave
push
repz
cs
or
lods
bound
fadd
jmp
fcom
sbb
retf
dec
jl
add
cmp
jg
lods
push
adc
fisttp
aas
mov
pop
test
xor
not
adc
iret
xchg
cmp
add
cmc
mov
push
outs
fsub
or
div
js
aam
cli
sub
rol
sbb
cld
je
xor
adc
mov
and
jg
and
out
movs
imul
sbb
xor
sub
xchg
cmp
sub
jns
fsubr
xor
int
jnp
xchg
cmp
inc
cmp
imul
mov
lds
sub
test
out
pop
push
sbb
loopne
push
push
push
std
push
lods
in
sbb
inc
xor
in
mov
in
stos
ret
daa
pop
or
push
jle
cmp
mov
pop
vmwrite
adc
pop
xchg
rcl
loop
scas
dec
(bad)
out
les
mov
mov
cmp
jbe
add
mul
fdivr
or
icebp
add
adc
movs
outs
(bad)
dec
in
cs
test
add
mov
int3
adc
leave
mov
push
js
and
sti
mov
test
xchg
push
in
rep
sub
movs
rcr
sbb
(bad)
xor
mov
call
dec
popa
push
cli
(bad)
popf
bound
mov
xlat
jp
rcr
cld
sbb
mov
or
stc
xchg
push
outs
inc
loopne
lods
into
(bad)
pop
aam
repz
shl
int3
cmps
jg
add
dec
push
jb
adc
mov
jnp
out
xchg
add
and
and
push
lahf
xchg
or
dec
and
faddp
bound
push
mov
xor
add
fld
stos
test
add
idiv
mov
xchg
xlat
jmp
les
mov
gs
or
cmp
sahf
inc
(bad)
not
add
cmp
push
aas
jp
lea
xchg
push
int
scas
cmp
adc
sar
scas
shl
xor
movs
ds
and
jb
cwde
(bad)
stc
adc
mov
pushf
addr16
fiadd
mov
fcmove
adc
mov
xor
iret
outs
mov
adc
cmps
inc
addr16
lods
call
test
push
stos
das
mov
push
and
adc
xchg
js
jmp
pop
pop
push
aas
pop
ror
dec
nop
and
xchg
in
xor
movs
jb
fsub
popf
pusha
(bad)
mov
out
pop
or
mov
dec
sbb
in
inc
adc
add
mov
lock
scas
daa
xchg
dec
sub
cmp
push
bound
imul
inc
cli
cmp
in
cdq
pusha
stos
mov
sbb
aam
or
bound
jp
test
std
(bad)
pop
mov
sbb
pop
mov
das
adc
xor
icebp
mov
cmp
retf
test
inc
adc
stos
ret
(bad)
dec
fisttp
sbb
or
xlat
cmp
cmp
sub
push
dec
mov
push
sub
add
inc
or
dec
je
pushf
idiv
icebp
mov
stos
xlat
adc
mov
mov
ins
(bad)
pop
cdq
push
arpl
fldcw
les
sbb
mov
jmp
mul
pusha
mov
les
ins
adc
xchg
pop
jnp
pop
leave
dec
adc
fidivr
cmp
add
sbb
add
pop
sub
dec
int3
rcl
xor
adc
nop
push
pop
in
xchg
jae
rol
lds
pop
sbb
ficom
in
lds
pop
cmp
adc
mov
xor
add
sbb
xchg
and
arpl
xchg
mov
test
lock
icebp
call
jle
lods
add
jb
push
dec
mov
sub
lods
jle
es
inc
mov
iret
pop
cmp
sar
popa
(bad)
mov
add
inc
cmp
clc
(bad)
loopne
sub
pop
scas
scas
pushf
xchg
push
push
rol
and
push
sahf
dec
and
nop
fmul
ret
ss
(bad)
mov
mov
pushf
cmp
gs
sub
repnz
addr16
add
inc
cmp
push
clc
jo
jp
clc
enter
sbb
repz
xor
add
leave
shl
in
movs
in
rcl
clc
mov
adc
int
fcomip
sub
mov
rcr
lods
or
cmp
imul
retf
enter
ret
ins
fst
cdq
dec
cmc
jecxz
test
xchg
jne
push
retf
jmp
lds
adc
fiadd
sub
movs
jo
outs
and
and
sbb
xchg
popf
(bad)
jne
xrelease
imul
retf
xlat
adc
pop
and
mov
ds
test
in
pop
loop
push
pop
aam
pop
xor
jb
push
cs
push
jmp
sahf
adc
repnz
mov
jle
stos
das
jle
cmp
jmp
lds
sbb
call
mov
ins
popa
mov
fdiv
adc
sub
cmps
les
cmp
xor
mov
fwait
sbb
push
imul
and
inc
pop
jb
and
dec
mov
and
in
cli
mov
xor
movs
mov
icebp
cmps
fbstp
aam
pop
sub
clc
sub
lods
outs
lea
aam
out
cli
shr
push
mov
adc
call
outs
outs
shr
scas
shr
mov
clc
rcr
(bad)
pop
cld
ins
mov
pop
push
pop
mov
stc
push
add
jo
dec
add
in
xor
mov
test
push
iret
stos
mov
in
fnstsw
mov
inc
loope
sub
int
inc
push
loopne
push
pushf
popa
add
push
hlt
cld
js
xor
fucomp
jge
xchg
pop
in
jbe
jns
cmp
mov
pop
pop
es
sub
js
jmp
sahf
jo
sub
or
es
mov
jle
jmp
ror
sub
mov
cdq
movs
imul
inc
retf
shr
mov
cmps
jp
xor
cmp
out
shl
es
sbb
dec
jmp
ins
adc
mov
test
fstp
sti
loopne
stos
ret
or
aaa
sbb
aas
repnz
pusha
xchg
jns
mul
jbe
xchg
sar
mov
frstor
pop
into
sar
xor
lods
cmp
sbb
out
loop
xor
xor
push
push
sbb
mov
adc
lea
fild
push
lea
into
jmp
mov
mov
cmp
cmp
add
jge
dec
mov
mov
test
test
pop
into
das
in
push
outs
mov
cmp
inc
add
test
adc
in
push
(bad)
push
outs
pop
xchg
aam
mov
pop
clc
inc
mov
or
dec
or
jle
xchg
mov
sbb
repnz
inc
pop
in
loopne
int3
or
std
out
mov
cdq
mov
movs
popf
in
jns
mov
inc
daa
lahf
xchg
mov
outs
mov
lods
outs
mov
out
dec
dec
popf
xchg
push
cmp
(bad)
adc
mov
test
adc
lods
pop
icebp
loopne
mov
lea
dec
movs
pop
xchg
jl
or
std
jg
daa
mov
(bad)
cmp
ja
jae
ds
mov
pop
into
(bad)
push
sbb
mov
aad
mov
sti
pop
arpl
test
push
ins
jge
pop
fs
or
add
xlat
pusha
xor
clc
inc
cmp
adc
mov
cdq
inc
daa
loop
xchg
xlat
idiv
jge
je
fidivr
sar
mov
aad
or
sub
pop
inc
cmp
xor
jnp
call
sbb
inc
xor
ret
pop
mov
cmps
jp
retf
jge
jle
mov
in
je
arpl
mov
sub
push
nop
mov
inc
mov
cmps
xchg
mov
inc
mov
mov
stc
and
jl
mov
and
inc
test
sbb
fucomip
sub
xor
loopne
stos
int3
shr
std
sbb
xchg
dec
imul
hlt
scas
imul
dec
sub
push
int3
int
cmp
jno
cs
mov
pop
jb
dec
adc
scas
add
dec
jb
retf
shl
mov
jge
(bad)
dec
xor
inc
jno
fistp
cmp
pop
movs
push
iret
cmps
mov
pop
mov
fstp
bound
inc
int3
mov
aaa
idiv
loopne
push
cmps
in
es
adc
or
dec
jle
into
jnp
xor
in
dec
add
sub
(bad)
rcr
pop
call
out
sub
sub
inc
pcmpeqw
sub
ins
dec
mov
pop
(bad)
sbb
inc
adc
mov
cmp
pop
and
inc
push
lea
fs
movs
xor
and
jns
mov
jl
xchg
stc
(bad)
std
shl
imul
sahf
sbb
and
jge
popa
cdq
inc
adc
popa
clc
ror
add
mov
lahf
js
jg
mov
clc
div
adc
add
inc
mov
and
or
jne
dec
add
pop
jg
push
aam
cmp
les
repnz
add
lods
jns
imul
cdq
pop
cld
mov
sbb
cld
loop
mov
ror
pop
pop
mov
hlt
mov
add
cwde
jge
lahf
xchg
loopne
sbb
dec
mov
out
xchg
in
push
sub
pushf
in
inc
xor
jg
imul
sbb
mov
sbb
aas
ret
das
jbe
xchg
and
dec
push
and
xchg
dec
xlat
popf
adc
sbb
sub
js
repnz
in
pop
int
push
cmps
push
(bad)
push
dec
or
pop
adc
inc
xor
jnp
add
jbe
or
mov
add
out
xchg
push
mov
xchg
adc
jl
repz
pop
jno
and
into
dec
sub
xor
mov
jb
push
jg
mov
fldenv
inc
cmp
mov
clc
sbb
mov
mov
sbb
push
add
xchg
push
jbe
test
jbe
dec
pop
dec
(bad)
in
jb
jo
mov
leave
sub
movs
pop
fistp
dec
daa
aam
es
sbb
push
aad
jge
stc
mov
jo
adc
or
leave
out
jge
inc
in
dec
test
pusha
dec
xchg
pop
call
jno
add
sbb
lahf
add
daa
scas
shl
dec
in
pop
xchg
pop
and
clc
test
ficomp
sub
pop
in
jno
je
(bad)
(bad)
lods
data16
and
icebp
mov
xchg
jne
(bad)
pushf
jb
pop
jae
int
fld
in
adc
inc
addr16
arpl
sahf
out
cmpps
xor
popf
push
in
or
aas
xchg
aad
pop
xchg
adc
iret
stos
xor
scas
call
mov
and
adc
add
cmps
imul
neg
xchg
mov
test
xor
mov
add
mov
add
cmp
mov
addr16
push
add
cmp
inc
jmp
fwait
dec
or
(bad)
dec
ins
or
xchg
test
fstp
sbb
sbb
ins
add
push
pop
lods
or
mov
jmp
push
jge
pop
or
or
rcl
jle
inc
sbb
mov
push
icebp
pop
sbb
jecxz
call
movs
pop
mov
ret
inc
inc
add
jmp
or
pop
(bad)
or
dec
dec
push
sub
or
inc
mov
lods
sbb
adc
and
sti
dec
xchg
cmp
(bad)
int
aas
int
and
outs
in
leave
mov
cmc
and
adc
and
(bad)
inc
fwait
or
aaa
xor
ret
in
push
ins
jmp
ds
fst
mov
shl
xor
push
test
jns
xor
mov
mov
hlt
sub
pop
loopne
pop
inc
jge
repz
push
add
ror
scas
jns
and
cmp
sbb
mov
aas
mov
xor
shl
retf
and
rcl
adc
rol
lods
or
push
mov
add
aad
cmp
pop
fdiv
in
stc
and
inc
lods
jl
call
mov
sti
mov
or
and
test
push
ret
or
sub
hlt
outs
daa
jae
test
mov
imul
jae
call
and
or
push
adc
out
xchg
xchg
(bad)
jecxz
fxch
add
jne
(bad)
addr16
jl
(bad)
dec
sub
mov
pop
sub
sbb
mov
fdivp
jnp
inc
xchg
outs
imul
add
imul
inc
pop
test
adc
les
arpl
addr16
push
test
shl
das
inc
push
adc
mov
push
jno
dec
cmp
out
ficomp
lods
mov
pop
xchg
sbb
pop
aam
inc
sub
cdq
out
sbb
js
xlat
sbb
cmp
stc
push
xchg
imul
clc
test
xor
mov
ficomp
or
test
aaa
gs
cli
xlat
mov
xchg
sub
fcmovnb
test
xor
push
fdivrp
lods
repz
cmc
jecxz
mov
sbb
adc
and
neg
fwait
jno
sub
sub
sahf
add
bound
int3
loopne
(bad)
jne
push
and
cmp
xchg
jmp
test
dec
enter
cs
neg
push
movs
ja
dec
or
cmp
fisttp
mov
repz
(bad)
pop
or
cmps
cmp
mov
dec
xor
sbb
inc
idiv
jg
jno
xchg
inc
cmp
mov
mov
pop
jge
dec
out
rcl
or
or
mov
ds
stc
outs
and
loope
aam
jl
js
or
ror
cmp
stc
pop
mov
test
fimul
pop
rol
in
dec
jnp
jo
mov
enter
out
or
hlt
and
int3
push
cmps
stos
div
jnp
aad
je
fiadd
pushf
and
imul
mov
push
iret
imul
jecxz
call
pop
push
xor
movs
rcl
ficomp
in
int3
cmp
jecxz
leave
(bad)
and
arpl
fs
call
xchg
xor
cmp
test
fwait
jb
ja
sti
js
fs
rcl
shl
hlt
inc
mov
iret
dec
aad
retf
and
pop
bound
add
(bad)
shl
fldenv
pop
dec
in
gs
dec
leave
adc
push
aaa
sub
fcomip
jmp
pop
mov
sub
jmp
ins
aad
paddusw
clc
add
fnsave
aaa
adc
shl
aam
mov
fstp
pop
pop
mov
mov
hlt
add
push
out
leave
ja
popa
cmp
outs
ins
stc
dec
xchg
push
mov
inc
icebp
add
daa
adc
inc
push
test
leave
fadd
pusha
mov
mov
shl
fwait
mov
and
push
icebp
pop
sub
lock
sbb
fisub
pop
cmp
int
sar
or
mov
jns
jno
in
mov
or
sub
push
push
adc
js
push
mov
xor
mov
imul
or
ficomp
mov
in
fidiv
aaa
fist
xor
repz
inc
popf
iret
test
test
or
stos
iret
jle
mov
cmps
in
push
pop
mov
mov
setne
in
xchg
fcomip
movs
out
mov
cmp
xchg
lea
dec
ja
or
loope
mov
dec
shr
imul
adc
xor
retf
ss
and
rcl
fnstenv
stos
dec
jno
imul
(bad)
xchg
and
dec
or
sbb
push
sbb
adc
out
std
sbb
dec
or
lds
mov
push
mov
inc
aad
addr16
(bad)
add
retf
out
sub
jmp
sub
fiadd
sub
or
sub
cld
js
in
push
in
sbb
das
sbb
pop
xor
sub
cmp
xor
(bad)
mov
(bad)
push
test
fnsave
into
mov
inc
dec
xchg
leave
jo
sub
out
or
jb
adc
add
mov
jns
dec
cli
adc
retf
add
cli
xchg
test
inc
sbb
lods
and
cmp
dec
gs
inc
test
and
pop
aaa
add
mov
test
fstp
adc
jnp
not
mov
rol
xchg
hlt
cmps
sti
pop
mov
mov
data16
pop
loopne
or
inc
jmp
bound
imul
xor
mov
mov
(bad)
movs
cmc
pop
aas
pop
xchg
lds
js
(bad)
push
push
cdq
cmps
jmp
retf
dec
(bad)
jae
aad
sahf
mov
xlat
inc
pop
jge
xor
cmps
das
mov
ds
dec
sub
aad
xor
jp
fdivr
inc
shl
xlat
(bad)
and
or
inc
cmp
mov
out
xchg
jns
pop
jp
mov
mov
mov
movs
xor
sub
mov
fdiv
not
push
mul
aaa
pop
and
pop
in
sub
sub
stos
mov
mov
mov
movs
and
or
and
(bad)
ds
or
add
and
dec
ins
cmp
push
add
dec
add
mov
add
dec
aam
vmread
scas
dec
movs
dec
pushf
pusha
je
jecxz
cmp
mov
int3
inc
call
mov
outs
pop
in
shl
cmp
or
sub
ss
sub
mov
test
sbb
or
adc
add
cs
mov
push
jge
lea
arpl
mov
inc
cs
mov
xchg
cmp
adc
fcom
shl
mov
in
jl
inc
jg
mov
sub
popf
stc
push
arpl
sti
adc
xlat
aaa
push
pop
(bad)
or
mov
and
adc
push
retf
adc
dec
inc
out
cmps
push
sbb
push
adc
les
jmp
or
aam
stos
push
adc
mov
push
pop
push
fld
das
(bad)
pusha
test
cmps
and
adc
pop
sub
sbb
popa
sub
sbb
sbb
popf
push
xor
movs
ret
ficom
cli
pop
jmp
sub
cmp
bound
frstor
adc
xor
xchg
mov
daa
outs
xlat
fmul
jb
mov
gs
jno
mov
push
push
and
shr
les
pop
cld
sub
sub
outs
mov
sub
dec
fistp
xchg
jmp
or
and
pop
and
sub
xlat
outs
inc
aas
ss
push
fidivr
enter
jle
lahf
scas
jg
xchg
aas
jl
movs
loopne
mov
pop
ins
pop
xchg
es
adc
add
aad
cld
push
fnstsw
(bad)
or
or
retf
aam
icebp
and
aaa
cdq
mov
mov
cmc
pop
andps
push
or
dec
je
inc
pop
mov
adc
xor
pop
call
rcl
fwait
dec
xchg
movs
push
and
repz
mov
fadd
push
jbe
mov
pop
lods
leavew
retf
mov
cwde
push
lods
jae
mov
jmp
jecxz
push
sar
jbe
fstp
jle
ror
loop
push
or
es
and
pop
out
icebp
xchg
fmulp
gs
mov
mov
popw
pop
jmp
sahf
push
sbb
add
movs
stos
fnstcw
xlat
call
adc
or
retf
jb
scas
(bad)
daa
rcr
ins
loopne
div
inc
std
lods
cmp
mov
dec
mov
into
mov
and
adc
sti
dec
lods
mov
mov
mov
mov
fcmovne
jmp
test
cdq
jge
imul
pop
mov
cld
cs
or
add
xchg
mov
outs
popa
retf
mov
adc
jne
stos
iret
dec
ret
xchg
or
fsub
hlt
retf
jnp
mov
int3
out
(bad)
xlat
add
je
and
push
jle
shl
mul
push
dec
aaa
cwde
xor
rol
jl
loopne
adc
cmp
xchg
(bad)
sub
dec
gs
mov
jno
push
cmp
sub
xchg
push
out
ds
pop
popa
jmp
mov
mov
xchg
test
out
jne
pop
test
in
js
push
scas
inc
(bad)
sahf
test
cmp
adc
retf
leave
pop
popf
(bad)
sti
call
sub
mov
les
das
lea
popf
mov
daa
rcr
and
add
and
shl
sti
jge
jecxz
mov
and
fstp
and
int
sbb
dec
mov
and
cmp
xchg
or
ror
sbb
lds
jmp
jo
adc
lock
aaa
add
or
test
cmp
imul
stos
or
jae
loop
ins
clc
push
sahf
fisubr
or
lods
popf
pop
and
inc
es
mov
aaa
daa
call
mov
pop
in
sub
mov
xor
cli
clc
jmp
pop
in
movs
push
pop
jecxz
shl
push
push
push
and
xchg
cmp
push
icebp
clc
xchg
sub
pop
adc
iret
test
xchg
jmp
nop
imul
dec
pop
push
stc
frstor
fdivr
and
or
push
(bad)
cmc
dec
mov
add
out
cmp
pop
sub
inc
pop
jecxz
pop
into
(bad)
pop
pop
or
scas
xchg
pop
sbb
clc
mov
aad
cmp
xor
xchg
adc
xchg
dec
adc
xor
scas
lock
(bad)
lods
push
pop
das
fistp
jl
mov
mov
clc
imul
inc
push
xchg
mov
mov
mov
fwait
gs
dec
cmp
sub
call
test
jo
test
or
jmp
or
xchg
push
add
ss
outs
mov
leave
sbb
adc
stos
jp
pop
mov
fcom
jae
out
fptan
inc
sbb
aad
mov
mov
cmp
cmp
(bad)
pop
add
sub
iret
ror
loope
pop
addr16
inc
xor
ret
mov
dec
cwde
jns
and
jg
or
(bad)
sti
cdq
dec
push
and
ins
inc
sti
rcl
lds
(bad)
adc
and
or
movs
mov
scas
daa
stc
(bad)
das
ins
mov
push
mov
test
pop
es
inc
lfs
outs
mov
cmp
lods
call
fidiv
mov
leave
dec
mov
das
push
xchg
mov
cmp
dec
test
push
mov
push
jns
addr16
movs
xor
dec
clc
adc
pushf
das
lock
test
fisttp
es
fnstsw
daa
mov
es
test
and
imul
push
inc
jns
arpl
and
xor
mov
dec
cmp
xchg
daa
ins
ss
push
fstp
lock
retf
stos
inc
pop
cmps
je
daa
push
loopne
fwait
sub
int
ja
clc
movs
and
mov
les
movs
push
push
out
ror
pop
xor
gs
iret
mov
xor
dec
and
pop
mov
push
not
inc
retf
inc
pusha
push
jp
test
int3
in
pop
and
loopne
outs
inc
dec
ret
fwait
inc
movs
aam
leave
push
jbe
xchg
cwde
adc
cs
call
and
lock
fucom
jnp
and
dec
sub
cmp
mov
pop
mov
test
pop
test
xor
out
dec
out
test
fsubr
push
inc
sub
(bad)
and
ins
cmp
test
xor
fisttp
pop
les
icebp
jecxz
or
xor
xchg
mov
mov
dec
ds
cmp
shr
out
retf
xchg
and
or
fisttp
and
mov
repnz
cmp
or
dec
js
leave
fcmovbe
mov
arpl
nop
iret
push
ror
ffree
or
xchg
mov
pusha
jg
cwde
add
mov
sub
mov
pop
aad
push
adc
outs
mov
xor
ss
mov
mov
inc
push
pop
es
sub
pop
jae
pop
and
data16
sahf
push
lock
enter
std
stos
(bad)
loopne
mov
jge
scas
mov
or
jns
mov
or
or
aas
jmp
loope
pop
mov
sbb
inc
jae
mov
cwde
sub
inc
es
les
js
(bad)
aas
addr16
jle
aam
adc
out
imul
shl
stc
dec
lock
inc
push
sahf
gs
out
dec
cld
call
and
or
jg
neg
fidivr
mov
std
mov
outs
mov
mov
mov
fwait
sar
cld
pop
aaa
fdivr
xor
test
push
mov
les
arpl
outs
mov
test
and
jge
imul
sar
mov
dec
pushf
adc
push
or
leave
sub
sub
add
scas
mov
push
mov
pop
sub
je
mov
loop
jno
dec
add
and
sub
je
push
pop
sar
bound
hlt
xlat
out
out
mov
dec
sub
sbb
mov
rcr
in
dec
inc
int
pop
bound
jbe
dec
rol
push
test
aaa
or
cmc
push
add
xchg
xchg
nop
pop
and
push
ins
addr16
leave
sbb
test
mov
sub
test
iret
jle
stos
dec
xor
cmp
jecxz
leave
pusha
mov
fsub
push
repnz
push
mov
loopne
dec
scas
push
xchg
fist
and
nop
or
mov
rol
sbb
in
(bad)
mov
inc
retf
cdq
out
inc
shr
(bad)
lods
pop
sub
cmp
inc
xchg
es
nop
(bad)
xchg
cmp
pop
xor
mov
fistp
dec
cmc
lods
sbb
dec
xor
in
sbb
pop
ret
scas
add
jb
xor
call
mov
cmp
in
mov
jp
imul
sub
sub
repz
xor
std
mov
hlt
cli
(bad)
cli
and
mov
mov
cmp
jbe
mov
fst
test
das
aam
jmp
bound
mov
nop
add
inc
icebp
cld
stos
adc
adc
(bad)
(bad)
mov
sub
mov
arpl
stc
clc
inc
(bad)
mov
xchg
inc
add
icebp
data16
rcl
(bad)
shr
repnz
push
out
enter
cmps
jno
xor
dec
les
mov
loop
je
cmc
fisttp
mov
pop
neg
pop
ficom
fwait
mov
cmc
xchg
push
sahf
out
ins
xlat
jns
test
idiv
fadd
ins
pop
add
mov
adc
lock
jl
dec
push
mov
mov
daa
and
sahf
hlt
pop
lods
arpl
movs
add
jge
add
jnp
(bad)
addr16
mov
dec
out
mov
mov
retf
test
ja
adc
jbe
scas
out
lahf
and
xchg
stc
ror
test
pop
out
int
mov
jmp
in
or
fdiv
dec
sbb
xor
and
push
fwait
adc
jmp
cmp
xchg
mov
adc
pop
push
out
int
xchg
lahf
dec
xchg
adc
call
std
fsub
daa
stc
cmps
jmp
cmps
jb
mov
ret
and
int
inc
mov
call
dec
adc
inc
cmps
inc
push
add
cmp
pushf
sub
push
xor
(bad)
sbb
push
ror
rol
inc
or
mov
pop
dec
(bad)
rcl
inc
cmovno
sbb
cwde
fbld
jg
mov
add
test
ret
dec
loopne
fdiv
arpl
cmovge
sbb
bound
outs
(bad)
mov
xchg
xchg
mul
stc
stos
inc
sub
sar
mov
or
outs
mov
jge
pop
jb
stc
aaa
inc
jmp
adc
cli
out
mov
out
push
pop
fidivr
xchg
xchg
xchg
cmp
push
aam
test
xor
xor
(bad)
loop
movs
dec
sar
cmp
ds
js
jge
xlat
movq
hlt
leave
cmp
push
sar
stos
out
or
mov
pop
push
and
mov
or
mov
mov
ins
jno
pop
jg
ja
sbb
cmp
xor
mov
or
test
and
or
aad
cmc
cmp
push
jmp
retf
imul
cmps
adc
js
out
or
fwait
pop
adc
jmp
mov
dec
imul
inc
jg
inc
xchg
out
aaa
(bad)
out
mov
sbb
in
pop
ins
lock
popf
fcom
add
lds
jb
xchg
push
mov
ds
jne
(bad)
arpl
test
les
mov
mov
sbb
push
mov
mov
mov
sub
cmp
pop
mov
and
(bad)
jge
cmp
aas
icebp
out
or
daa
test
idiv
and
jmp
mov
inc
inc
pop
aad
repz
sub
and
xor
mov
jmp
clc
dec
addr16
dec
rol
popf
aas
pop
fiadd
xor
inc
(bad)
stc
cmp
imul
add
mov
add
or
fstp
aaa
cmps
in
or
in
dec
or
ins
in
add
outs
mov
or
sbb
nop
mov
add
push
pop
mov
cmp
jmp
js
out
cmp
repz
popa
mov
ins
add
jmp
mov
mov
mov
cmp
in
mov
fstp
add
ins
out
(bad)
mov
and
push
outs
mov
pop
aam
test
jae
push
push
in
push
jne
dec
mov
fdivr
jo
sub
cmps
inc
into
cdq
mov
call
movs
jbe
ror
out
cmp
cmp
scas
outs
fisubr
stos
push
in
jne
gs
(bad)
retf
pop
push
in
sbb
cmp
xor
add
cmp
pusha
mov
arpl
lods
dec
iret
test
pop
ja
loope
gs
mov
(bad)
jg
dec
repnz
cmp
cwde
out
sar
leave
test
xor
dec
jp
adc
hlt
stos
add
lahf
ins
jmp
inc
nop
in
sbb
dec
retf
inc
into
cli
xchg
inc
sub
iret
and
cmp
addr16
push
pop
mov
arpl
sub
mov
mov
adc
jbe
mov
inc
in
aam
cli
push
adc
js
jnp
pop
das
repz
xchg
pushf
jge
jnp
jg
dec
mov
ins
je
push
dec
aas
retf
jl
push
and
or
int3
mov
in
sti
xor
retf
jmp
pushf
cmp
dec
popf
cmp
sbb
dec
sbb
scas
pop
jae
xchg
inc
repz
mov
scas
xchg
and
mov
xchg
ds
sbb
or
mov
sbb
adc
mov
in
adc
int
lea
sar
jecxz
mov
test
add
jnp
xchg
lods
cmps
inc
scas
lock
dec
pop
jge
mov
dec
outs
sbb
pushf
cmp
xchg
ss
mov
pop
pop
lods
pmulhuw
(bad)
mov
inc
or
mov
push
jnp
out
mov
dec
mov
stos
mov
inc
cmp
sbb
jae
jns
scas
iret
sub
add
xchg
mov
clc
std
inc
push
(bad)
or
inc
pop
adc
std
add
es
cmps
fcom
and
fst
push
repnz
adc
mov
cwde
mov
retf
push
dec
add
and
xchg
iret
inc
cmp
sbb
sbb
jb
pop
out
dec
ins
movs
and
pop
(bad)
fsub
cmp
and
dec
scas
pop
fidivr
mov
movs
outs
icebp
xchg
pop
ins
push
data16
add
push
add
jp
(bad)
fsub
sbb
mov
mov
inc
addr16
pop
jae
retfw
push
xchg
mov
test
inc
int3
(bad)
jmp
and
shl
lahf
fadd
or
jne
lods
add
(bad)
movs
dec
adc
pop
arpl
retf
mov
dec
fsub
mov
mov
mov
inc
fistp
mov
adc
push
push
sbb
jecxz
test
inc
mov
pop
sti
lds
or
loope
cwde
xchg
or
push
xchg
ja
inc
push
push
inc
adc
sbb
jae
inc
test
mov
inc
sahf
nop
push
jmp
popa
inc
(bad)
jnp
or
rol
(bad)
fisttp
mov
std
sbb
pop
mov
mov
jp
xlat
sar
scas
mov
into
sbb
or
or
out
pop
pop
clc
je
pop
stos
repnz
addr16
(bad)
xchg
cmps
es
ret
loope
pushw
mul
(bad)
lock
inc
lea
shr
mov
mov
sar
adc
cmps
push
push
enter
aad
and
out
outs
jp
and
xchg
fwait
push
add
xchg
bswap
out
test
mov
adc
int
cdq
jecxz
inc
dec
xlat
mov
push
cs
sbb
iret
imul
cmp
jns
push
movs
jbe
push
mov
inc
movs
xchg
lea
push
ret
mov
cmc
mov
xor
sub
loope
lds
dec
or
imul
outs
mov
mov
stos
xchg
dec
clc
ja
(bad)
stos
cmps
ds
shr
cmps
das
pop
and
mov
push
ja
pop
xchg
imul
shl
pop
inc
aam
cmp
ins
jl
jmp
test
sub
and
add
cwde
(bad)
mov
and
mov
dec
into
(bad)
xchg
jp
mov
scas
nop
jmp
retf
scas
xor
repz
aaa
retf
(bad)
ret
ds
retf
loop
sub
fiadd
mov
inc
out
int3
fimul
mov
mov
jno
pop
sbb
cld
dec
arpl
mov
ds
mov
je
push
test
mov
(bad)
jmp
xor
shl
and
sbb
and
inc
arpl
rol
outs
dec
jmp
or
sti
jae
sub
test
lods
mov
cmp
add
and
mov
push
jle
dec
mov
hlt
mov
loopne
mov
mov
je
ins
clc
cli
jge
xchg
xchg
bound
and
imul
cmp
pop
ja
in
pop
cmp
stos
int
jnp
fnsave
neg
jp
int
cs
mov
jecxz
fst
pop
sub
(bad)
push
(bad)
jno
clc
pop
pop
loope
inc
fs
mov
push
sub
jl
adc
inc
sub
mov
push
cmp
test
jae
out
fstp
scas
inc
sub
dec
fiadd
adc
add
xchg
push
(bad)
shl
jbe
xchg
outs
sbb
daa
je
out
adc
js
mov
sbb
xlat
icebp
mov
adc
xchg
dec
neg
mov
mov
test
test
bound
daa
mov
(bad)
ins
enter
fadd
scas
mov
fild
inc
cdq
ret
dec
mov
shl
outs
add
mov
not
and
adc
adc
jne
rcr
stos
fbstp
pop
out
test
fimul
dec
inc
enter
pop
fild
scas
add
repz
pushf
mov
pop
outs
mov
clc
mov
xchg
mov
call
leave
bound
pop
out
xor
in
ja
lds
ja
bound
add
mov
fcmovbe
jp
pop
stc
mov
bound
mov
lock
aaa
les
add
rcl
test
mov
adc
test
mov
sbb
dec
in
inc
call
cmp
xlat
addr16
or
sbb
outs
inc
loope
cmp
fiadd
cmc
jb
or
test
inc
jp
sub
inc
mov
dec
push
addr16
xchg
mov
cdq
int3
mov
mov
pop
nop
mov
xchg
(bad)
pop
cmp
(bad)
out
push
(bad)
out
stc
xlat
cmp
leave
push
icebp
jle
inc
and
sahf
out
dec
call
jmp
and
fistp
add
dec
xor
push
xchg
out
cmp
mov
push
mov
fstp
and
fiadd
or
or
or
inc
out
rcl
clc
dec
in
stos
bound
push
sbb
dec
ja
fcomp
fidivr
nop
xor
movs
into
(bad)
div
test
mov
or
inc
ficomp
push
inc
cli
mov
neg
data16
xchg
clc
and
out
jmp
cmp
cmps
lods
mov
adc
cs
sub
jp
inc
add
add
sub
pop
movs
mov
vrcpps
pushf
sbb
push
jns
out
test
dec
ficom
mov
(bad)
mov
(bad)
sbb
xchg
dec
sbb
test
pop
shl
test
ret
sub
daa
into
movs
ins
mov
in
dec
jecxz
xchg
(bad)
ja
(bad)
bnd
mov
cwde
or
sbb
sub
jbe
aad
or
cld
mov
pop
inc
pop
in
inc
ins
in
mov
pop
jmp
mov
add
stc
xlat
cmp
mov
(bad)
xchg
add
jl
mov
push
hlt
push
ins
cwde
retf
jmp
sbb
stos
hlt
fwait
iret
(bad)
fstp
movs
retf
xchg
mov
(bad)
(bad)
call
cmp
sub
pop
in
add
arpl
jns
js
movs
shl
jo
jle
push
aam
cmps
push
mov
test
loop
xor
cmc
retf
lods
ror
js
jl
cmc
shl
clc
push
sti
pop
lock
call
sub
cs
cmp
mov
scas
inc
ret
jecxz
sbb
cmps
repnz
call
iret
and
jo
hlt
cmps
sub
push
addr16
loope
mov
arpl
jno
mov
mov
jle
or
shl
cmp
sub
sub
outs
test
cwde
sub
xor
aas
push
adc
call
mov
int3
into
push
xchg
jnp
(bad)
push
jae
daa
cdq
sbb
push
shl
inc
mul
pop
inc
sub
call
not
ds
add
test
adc
cmp
add
loopne
pushf
scas
mov
pushaw
xor
idiv
adc
(bad)
outs
cmp
add
or
sbb
sbb
scas
daa
inc
mov
cwde
xchg
fiadd
adc
sbb
pusha
mov
out
mov
loope
les
lea
(bad)
in
jecxz
fst
jecxz
loop
test
call
push
enter
repnz
dec
icebp
cmp
ror
push
mov
add
adc
fcomp
jne
sbb
loope
or
and
adc
fisub
push
jb
(bad)
push
xor
fistp
cmp
sub
iret
add
sbb
mov
lock
jmp
jl
test
sbb
test
cli
mov
ja
push
add
push
mov
sbb
sti
mov
mov
xor
retf
xor
sbb
xchg
(bad)
loop
sub
cmp
mov
fcos
sub
and
xor
loope
js
retf
cmp
jle
cmp
pop
in
adc
sub
cmovne
xor
or
and
adc
xchg
sbb
push
(bad)
shl
in
add
jnp
(bad)
into
push
ja
cmp
shl
dec
push
push
and
(bad)
data16
stc
in
ins
pop
mov
and
xchg
inc
int3
leave
sbb
or
pop
outs
pusha
icebp
imul
inc
xchg
cmp
xlat
js
inc
and
cs
adc
cld
pop
pusha
jo
fstp
sub
inc
(bad)
retf
cmp
rcl
aam
sbb
jmp
push
xlat
jmp
mov
sti
sub
adc
call
inc
jo
nop
cmp
aam
fbld
das
cmp
and
and
sti
jecxz
mov
adc
test
aas
shl
pop
xor
shr
stos
xchg
cmc
jns
in
stc
mov
aaa
pop
(bad)
mov
sub
push
dec
mov
pop
cmp
sub
push
jle
sbb
xchg
jmp
fmulp
rep
into
inc
sbb
fcomp
(bad)
sub
mov
call
dec
dec
push
push
adc
sbb
pusha
in
push
mov
fst
ret
jmp
test
fcmovnbe
jns
daa
addr16
push
sbb
gs
pushf
xchg
shr
sub
mov
jmp
push
push
inc
out
mov
jne
push
and
dec
lods
or
or
xor
mov
scas
loopne
adc
xor
ds
xlat
xchg
xchg
ret
cmp
push
scas
inc
scas
lods
xor
cmps
std
dec
popa
push
idiv
push
xchg
in
xor
lea
into
fist
push
jge
imul
lods
les
cmp
xchg
call
inc
out
xor
sbb
add
sub
push
rcl
cmp
dec
test
outs
sbb
lahf
xor
cmp
push
xchg
sub
jg
inc
test
mov
mov
les
pop
stos
cs
jae
xchg
loope
das
xor
test
xchg
or
(bad)
mov
sub
mov
inc
iret
mov
and
dec
sub
retf
scas
and
mov
ret
in
jb
sbb
sar
addr16
cmp
inc
popf
push
pusha
jge
mov
mov
push
xchg
data16
push
xchg
fs
dec
mov
ss
jb
push
cld
mov
rcl
outs
inc
pushf
sub
daa
inc
lahf
push
push
pop
outs
out
dec
and
mov
adc
fst
adc
cmp
in
pusha
cli
mov
ins
pop
sbb
cmp
(bad)
xchg
data16
lods
test
jg
adc
mov
xchg
mov
jmp
call
out
add
loope
inc
daa
add
adc
mov
inc
icebp
cmps
cmp
iret
test
call
int3
xchg
aam
inc
cmp
aam
imul
add
arpl
or
daa
adc
rcl
mov
adc
pop
mov
jae
fimul
add
(bad)
and
inc
xchg
ins
jb
aas
std
sbb
icebp
cmp
shr
push
(bad)
mov
push
mov
sbb
jmp
sahf
daa
clc
fcom
movs
adc
outs
aam
xchg
xchg
mov
movs
dec
test
dec
dec
pop
push
scas
cmps
in
and
adc
mov
lods
nop
cdq
imul
das
ret
and
xchg
and
sbb
fwait
mov
mov
ja
cmp
jmp
in
sub
dec
rcr
fstp
inc
data16
mov
rol
imul
jmp
stc
mov
adc
dec
or
aad
push
fldl2t
mov
movs
les
ja
cmp
push
mov
imul
fldz
jge
jg
jecxz
aam
jmp
sub
out
sbb
dec
(bad)
cmps
push
or
(bad)
lock
clc
sbb
jecxz
aam
push
pop
pop
out
popa
push
or
mov
data16
or
xchg
pop
mov
adc
xor
and
mov
cmp
fistp
outs
inc
hlt
add
in
rol
repz
ror
add
mov
mov
cmp
adc
cmp
int3
cs
ret
pop
or
or
xor
js
idiv
jl
mov
dec
jne
call
sub
lea
test
ins
inc
xor
in
int3
in
sahf
mov
aaa
ins
mov
jne
pop
jbe
popa
mov
or
jecxz
fwait
nop
pushf
add
loop
cmp
sbb
std
xor
sti
mov
pop
jl
xor
pop
add
xchg
call
mov
or
jl
enter
mov
inc
pusha
jne
js
xor
jmp
add
pusha
mov
xchg
out
icebp
retf
movs
stos
add
sbb
sub
out
push
shl
fistp
adc
sub
addr16
adc
push
fld
scas
pop
or
dec
adc
retf
pushf
idiv
in
pop
mov
stos
cwde
enter
iret
mov
scas
out
rcl
xlat
xor
sbb
aas
ror
add
pop
xchg
inc
scas
iret
mov
push
arpl
or
push
add
add
cmp
xchg
sub
xor
add
fild
and
xchg
xchg
cmps
mov
int
iret
bound
sti
scas
imul
int3
xchg
in
rcr
int3
icebp
dec
and
push
add
pop
lds
mov
sbb
pop
popa
in
jmp
fwait
xor
or
xchg
pop
and
rcr
adc
inc
outs
and
sbb
or
adc
outs
shr
std
std
ss
and
push
dec
cli
sbb
cmc
pusha
iret
sub
push
movs
pop
push
mov
aam
repz
sbb
mov
mov
cmp
pop
mov
lods
cmp
and
and
adc
adc
shr
lods
jg
xchg
sbb
cwde
push
xchg
push
mov
dec
mov
ret
push
hlt
mov
sbb
pop
fwait
and
call
in
pandn
push
sub
sub
out
out
and
sub
ins
sub
dec
pusha
ret
sbb
mov
add
xor
push
shl
mov
addr16
sub
cmp
cmps
mov
icebp
movs
jp
mov
xor
cmp
scas
fidiv
push
sbb
bound
mov
mov
mov
and
xchg
leave
pop
xlat
(bad)
sub
movs
sbb
push
and
pop
loope
sub
inc
pop
xor
test
cmp
cmps
jmp
cmps
mov
sbb
mov
rcl
cld
cld
dec
gs
(bad)
pop
xchg
push
ret
pusha
mov
or
mov
or
push
ja
loope
dec
outs
adc
push
cwde
pop
iret
pop
clc
jecxz
fldl2t
aam
lods
push
imul
das
jbe
xor
imul
test
add
pusha
add
mov
cmp
adc
sbb
jmp
lea
adc
ds
pop
push
lods
movs
addr16
cmps
imul
in
aad
shr
mov
sbb
loop
jecxz
or
call
xor
in
popa
mov
mov
imul
push
xchg
pop
mov
xchg
mov
mov
inc
mov
cmp
and
mov
jmp
pop
mov
sbb
jno
dec
adc
inc
jmp
cs
shl
adc
outs
push
or
pop
dec
aas
sub
aam
sbb
or
sbb
idiv
aaa
xor
push
fs
movs
imul
ret
jp
pop
outs
(bad)
push
scas
int
int3
jns
call
test
adc
idiv
(bad)
das
aaa
xchg
(bad)
sub
sbb
outs
xchg
mov
sub
xchg
xor
mov
mov
lods
cmp
or
mov
out
dec
xor
dec
sbb
push
adc
in
xor
or
xor
adc
stc
mov
or
data16
pop
ds
or
cmp
fs
cmp
aaa
cld
xchg
call
push
addr16
ja
fwait
push
sbb
test
addr16
(bad)
mov
ret
inc
sub
(bad)
and
lahf
sub
jae
xchg
xor
repnz
adc
std
stos
push
mov
xor
jmp
jo
sahf
mov
and
sub
(bad)
sbb
adc
lahf
ret
fcom
mov
xor
xchg
into
push
mov
cli
jne
jmp
scas
or
(bad)
pop
cmp
movs
mov
int
jno
and
push
daa
nop
xchg
mov
aam
inc
cmp
sar
rcl
xchg
arpl
ja
nop
addr16
dec
mov
adc
jl
jg
dec
iret
jbe
mov
cwde
inc
pop
js
sbb
cmp
in
dec
imul
mov
mov
call
xchg
jle
push
out
and
and
les
vmread
adc
add
pop
std
stos
and
push
mov
loopne
xor
inc
adc
xchg
fnstsw
xor
pcmpgtd
jle
cmp
sub
es
or
add
inc
mov
xchg
test
xchg
enter
mov
(bad)
aaa
cwde
arpl
push
in
out
mov
fwait
cmp
aas
push
xchg
dec
div
test
jmp
aam
push
bound
imul
sub
lods
cmp
push
dec
movs
in
mov
leave
pop
sub
test
cwde
xchg
sub
test
mov
pop
scas
leave
sahf
in
xchg
xchg
and
(bad)
loope
cmp
ficomp
sub
int3
jmp
adc
add
fadd
jle
push
pop
scas
fsubrp
mov
ret
cmp
mov
rol
rcr
cld
stos
cmp
xchg
movs
out
rcl
inc
and
add
loop
cmps
jbe
retf
add
int3
stos
dec
push
and
xchg
and
xchg
inc
pop
sub
jg
sbb
test
test
and
jne
sar
(bad)
fidiv
add
cmps
mov
shr
xchg
repnz
add
aaa
sub
add
ficom
push
and
inc
les
and
pop
xor
sub
cmps
push
mov
inc
lock
push
push
shl
lods
shl
dec
test
cmp
aaa
clc
scas
scas
jg
sbb
dec
and
jle
ror
cmp
and
mov
je
dec
xor
ret
idiv
mov
shr
dec
push
fisttp
cmps
loope
mov
jmp
push
dec
(bad)
out
enter
add
push
(bad)
cmp
mov
outs
test
jg
mov
jecxz
clc
jge
sar
retf
mov
sti
movups
pop
out
lods
ins
inc
mov
jbe
cld
xor
xor
icebp
scas
call
add
imul
lds
mov
adc
cmp
lods
jo
popf
mov
inc
out
ss
xchg
sub
(bad)
pop
mov
mov
xchg
or
hlt
inc
gs
pop
cmp
jl
xchg
cmp
out
xacquire
es
sahf
mov
out
cmp
aaa
into
mov
fiadd
les
or
mov
cmp
sub
in
loop
jo
mov
out
cdq
or
retf
xor
pop
sub
imul
jno
sbb
movs
xchg
mov
adc
pop
cmp
ja
mov
bnd
push
adc
push
dec
test
iret
push
js
scas
call
push
cdq
nop
push
call
push
pop
loop
mov
mov
cli
xchg
xchg
jg
sbb
or
ins
jnp
loope
sub
movs
jmp
aam
aas
cmp
adc
sar
inc
push
inc
xor
push
icebp
adc
fnstcw
les
sub
and
dec
cmps
dec
mov
jle
nop
cmc
push
xchg
das
icebp
repnz
jmp
stos
sub
push
or
mov
out
(bad)
jns
dec
call
inc
cwde
mov
jbe
dec
jb
push
arpl
test
cmps
retf
and
outs
xchg
and
cdq
or
inc
push
sub
inc
inc
and
mov
movs
mov
push
or
faddp
lods
pop
js
imul
repz
push
push
(bad)
fcmovnu
push
test
ret
shl
jb
int
mov
test
scas
movs
mov
gs
imul
push
push
push
xor
lds
add
jecxz
fild
cmp
test
push
inc
push
push
xchg
popf
xor
mov
aad
mov
std
jge
js
jbe
cmp
jecxz
not
sub
pop
nop
xchg
mov
fcomp
rol
mov
out
adc
xor
pusha
das
bound
xor
inc
loopne
mov
sbb
mov
inc
movs
inc
lods
and
sub
jno
mov
rcr
call
or
push
shr
(bad)
xor
(bad)
ins
ins
dec
movs
loope
inc
dec
lds
call
cmp
mov
shl
mov
cwde
push
cmp
sahf
out
mov
test
outs
inc
call
jp
lods
jge
xor
dec
and
ret
pop
xlat
fisttp
sub
(bad)
popa
cmp
fdivr
rcl
mov
push
push
xor
pop
mov
stc
in
pop
or
inc
mov
push
pusha
dec
retf
mov
movs
ss
xchg
pop
mov
gs
cs
pushw
adc
pop
sbb
cmps
sti
popa
add
sbb
addr16
xlat
mov
std
jno
out
sub
inc
push
add
fcmovne
(bad)
xchg
xlat
stos
dec
adc
or
push
mov
and
and
(bad)
stc
popa
or
pop
dec
mov
in
push
(bad)
movs
adc
icebp
call
stos
xchg
pop
hlt
pop
adc
or
jno
jnp
lea
pusha
sar
fmul
fwait
lods
mov
add
sub
xchg
dec
mov
scas
add
arpl
call
(bad)
cwde
lock
dec
adc
add
xchg
dec
stc
or
(bad)
cmp
ror
fidivr
movs
outs
jmp
mov
adc
mov
ins
and
pop
outs
in
(bad)
shl
dec
lods
fucomp
mov
retf
das
mov
pop
inc
lods
cmp
mov
jl
movs
aam
lea
inc
out
sbb
test
pusha
sbb
sbb
push
sar
scas
push
(bad)
push
xchg
mov
nop
cdq
mov
mov
leave
push
push
xor
dec
leave
mov
scas
shr
cmp
inc
icebp
loopne
mov
and
cli
mov
ins
repnz
test
shl
inc
cmp
dec
lds
repnz
imul
mov
jbe
or
adc
rol
leave
xor
dec
mov
mov
lds
mov
retf
push
and
aad
pop
sbb
cli
mov
xchg
popf
adc
mov
clc
dec
xchg
cmp
out
repz
and
xchg
fisttp
gs
scas
inc
pop
ret
bnd
adc
xchg
mov
xor
push
out
loopne
lods
lds
in
cmp
pop
push
xor
loop
xor
stos
pushf
jmp
mov
add
cmp
icebp
scas
inc
push
xor
mov
in
loopne
stos
cmp
push
push
sbb
lahf
or
std
mov
xor
xchg
(bad)
sub
rcl
repnz
rcr
shl
mov
push
cmp
mov
add
aas
popf
or
mov
ds
in
cmp
(bad)
enter
in
sti
aam
jge
hlt
pop
fnsave
push
mov
fsubr
xchg
fisub
dec
xlat
jbe
jecxz
inc
inc
out
and
popf
(bad)
in
js
jb
add
mov
mov
jmp
mov
call
inc
push
mov
sub
cmp
mov
cdq
icebp
dec
mov
xchg
or
fcomip
sbb
xchg
retf
pop
scas
mov
adc
xor
popa
jne
sub
xchg
mov
mul
pop
hlt
and
jecxz
cld
(bad)
sbb
cmp
push
xor
or
adc
or
mov
mov
ins
dec
adc
jnp
cmp
fs
movs
dec
ret
jnp
out
pushf
sbb
cs
sub
jne
sub
push
pop
cs
inc
int
cmp
and
popf
pop
and
push
adc
xchg
mov
and
pop
xor
or
dec
in
cmps
add
mov
pusha
jne
cdq
add
int
xchg
retf
add
xchg
inc
outs
dec
mov
(bad)
or
sbb
js
push
dec
sbb
cdq
cmps
pop
ja
retf
arpl
xchg
xor
arpl
lea
or
adc
add
cmp
sbb
popf
pop
cmp
out
daa
sbb
adc
hlt
push
out
jg
mov
cmps
push
outs
jp
push
sbb
ins
ins
fistp
inc
maxps
ins
pop
mov
jo
push
les
aad
or
mov
lock
mov
jmp
pop
cld
dec
add
cs
rol
mov
ret
daa
imul
scas
fimul
cld
movs
icebp
fisub
rol
and
push
mov
imul
(bad)
pop
cmp
push
sub
dec
jbe
adc
or
push
int3
mov
dec
int
addr16
neg
loope
add
je
sbb
sahf
(bad)
inc
or
add
retf
sbb
push
ja
(bad)
cmp
aaa
repnz
jge
cli
loop
aam
fdivr
push
stos
jmp
push
push
mov
jg
sub
pushf
mov
mov
js
push
jae
inc
(bad)
mov
add
test
scas
pop
jge
pop
jno
fisttp
lahf
pusha
jnp
iret
ror
mov
jbe
pop
call
ror
stc
and
mov
jae
jp
cmps
pop
stc
xor
dec
pop
outs
jle
sbb
ret
int
lods
push
xor
push
xor
push
mov
jecxz
mov
cmp
fidiv
jecxz
or
je
dec
or
lds
and
push
(bad)
nop
das
dec
xchg
test
jne
aaa
adc
not
ret
movs
sti
ins
dec
dec
aad
loop
mov
loopne
jge
stc
jle
jb
les
mov
jl
std
mov
push
rol
popa
mov
(bad)
pop
jmp
pop
xor
leave
push
mov
adc
ror
test
repz
cmp
sub
popa
push
push
dec
xor
shl
mov
xchg
and
mov
rcr
mov
adc
addr16
inc
cmp
int
adc
sub
push
dec
jb
test
jmp
pop
adc
xlat
jp
ds
sub
and
jp
cmps
mov
push
push
scas
jecxz
pop
or
enter
dec
mov
pop
adc
mov
inc
aas
inc
inc
mov
mov
adc
ins
pop
adc
movs
or
add
lods
das
and
sbb
retf
bound
xor
pop
sub
xchg
mov
dec
jo
mov
sbb
xor
mov
adc
(bad)
inc
(bad)
aad
dec
inc
rol
pushf
mov
mov
jmp
ss
popf
sahf
or
test
and
loop
(bad)
xchg
out
pop
mov
dec
inc
xchg
aam
mov
loopne
and
inc
fwait
cmp
xchg
jb
xchg
xor
test
push
push
cmp
sub
fdiv
adc
jne
pop
imul
push
idiv
(bad)
pop
push
call
dec
sub
sub
dec
and
mov
rcr
cmp
rcl
pop
mov
retf
mov
out
fmulp
push
in
add
ffree
cmp
xlat
pop
add
and
inc
xchg
int
movs
loop
inc
scas
shl
pop
pushf
mov
add
lock
or
repnz
and
dec
push
stos
mov
mov
cmps
sbb
sar
push
mov
(bad)
jae
push
aam
sbb
push
cmp
inc
test
mov
stos
mov
dec
xor
jo
dec
int3
cwde
sahf
retf
inc
stc
cmp
test
xor
mov
mov
dec
jbe
aaa
mov
inc
idiv
mov
and
cmp
test
and
int3
jae
aas
iret
cmps
or
and
rcr
push
sub
dec
push
lock
add
push
xor
aam
cmp
shl
or
cmp
clc
add
mov
pop
mov
jp
out
inc
loopne
cmp
or
ror
dec
sbb
adc
aad
and
ficom
or
push
gs
in
(bad)
mov
into
ins
inc
loop
loope
stos
sub
in
fsubr
cdq
int
jns
data16
jmp
sar
jae
(bad)
fsubr
nop
(bad)
pop
mov
jo
sub
imul
pop
add
or
xor
mov
xlat
hlt
int3
inc
jb
push
sbb
pop
mov
sbb
pop
fdiv
or
pop
dec
or
sbb
lods
in
ficomp
cmp
or
ret
jmp
mov
pop
sbb
aad
inc
mov
pop
mov
pop
sub
push
pop
imul
and
jmp
stos
pop
ins
cli
ja
mov
test
adc
cli
mov
stc
push
xchg
ja
cs
dec
inc
sub
push
(bad)
dec
adc
push
inc
mul
lods
xor
aas
add
jl
in
jmp
test
adc
(bad)
pop
cmc
data16
test
cmp
sahf
and
add
ja
sub
es
push
sbb
inc
dec
xor
inc
push
ror
push
mov
cmp
out
dec
jmp
outs
test
dec
cmp
mov
xchg
adc
push
dec
dec
xor
push
inc
sbb
(bad)
fdivr
(bad)
popf
lahf
fistp
adc
lods
sub
jns
or
push
or
sub
(bad)
repnz
pop
cmp
push
leave
sub
add
push
push
daa
in
mov
mov
jle
popa
mov
std
movs
retf
icebp
gs
test
dec
cmc
cmp
scas
and
pop
dec
mov
sar
arpl
cmc
stos
jo
inc
mov
push
mov
pop
test
jb
lods
test
mov
gs
cmp
out
and
loop
es
ja
inc
pushf
test
out
les
fsub
arpl
and
addr16
mov
pop
in
mov
jmp
push
inc
cli
mov
dec
mov
cmp
mov
aam
push
push
adc
cmp
(bad)
fist
sub
mov
sub
ds
push
ins
int3
int
pop
and
add
sub
in
inc
mov
dec
inc
ss
pushf
call
or
pop
xor
jl
sbb
int3
add
aas
fbld
movs
out
ds
shl
repz
sbb
(bad)
mov
ds
jbe
das
add
push
and
jmp
scas
and
sbb
lds
dec
dec
rcl
jo
stc
outs
stos
mov
loopne
mov
repnz
jne
add
cmp
xlat
sbb
outs
push
(bad)
cmp
cld
retf
pushf
mov
adc
loop
push
mov
inc
out
fwait
pop
pop
ret
mov
push
stos
push
lods
and
invd
mov
call
or
imul
pop
xchg
repz
ins
pop
pop
loope
mov
mov
int3
sar
inc
xor
mov
jl
xchg
aas
cmps
mov
lods
dec
(bad)
pop
jl
cmps
adc
dec
arpl
inc
fld
mov
and
into
mov
jns
and
pop
jge
adc
mov
push
pop
xor
in
addr16
mov
in
in
fucomip
xchg
push
ja
sbb
or
add
inc
mov
inc
push
pop
sbb
xor
cmp
loop
mov
jp
stos
sub
add
out
int
adc
addr16
fiadd
aam
push
dec
pushf
ss
jmp
xchg
mov
gs
(bad)
adc
jl
sub
inc
xor
mov
xchg
sti
pop
or
loop
dec
inc
rcr
cli
sbb
xchg
pop
ret
add
mov
out
(bad)
cli
stos
xchg
sub
sbb
and
add
fcom
lods
mov
pop
jmp
test
xchg
push
add
cdq
sbb
(bad)
jno
fst
push
rcl
in
sbb
inc
mov
rcl
jle
fst
test
stos
push
or
mov
call
xchg
stos
cmp
mov
retf
cmp
sub
jo
sub
js
jl
inc
mov
or
ja
sub
push
cmps
xchg
repnz
add
jne
push
sar
sbb
push
add
sub
dec
inc
dec
icebp
cmps
rol
and
aaa
jmp
add
push
push
mov
sub
inc
retf
cwde
cmp
in
adc
dec
or
and
jle
jb
ss
jecxz
dec
push
cmps
pop
push
ror
ss
jo
mov
out
dec
int
sbb
adc
or
xor
popf
sti
or
and
cmps
cmp
dec
loopne
pushf
je
fidiv
fstp
pop
int
retf
mov
les
out
push
in
adc
inc
push
xchg
or
mov
test
dec
adc
mov
push
and
cmc
fcmovbe
sahf
pop
xchg
cmp
lds
xor
js
ror
or
mov
pop
add
and
sub
mov
dec
or
in
dec
xor
pop
stos
mov
out
pop
ds
iret
xor
in
scas
jb
movs
xor
and
nop
pop
arpl
sub
mov
ret
pop
fs
and
or
data16
jp
mov
mov
sar
icebp
dec
in
mov
adc
mov
pop
jno
cs
or
movs
add
popf
aam
lods
loopne
cmp
push
mov
pop
test
repnz
cmp
push
mov
cmp
mov
test
sub
adc
push
add
mov
jp
or
add
mov
pop
ss
int3
(bad)
in
xor
imul
loopne
call
fwait
rcl
push
push
(bad)
or
add
sub
sub
scas
test
(bad)
ja
pusha
icebp
inc
mov
imul
imul
cmp
and
ja
inc
cmps
jmp
sti
fist
jnp
mov
(bad)
mov
cwde
push
in
dec
and
sub
in
retf
xchg
aas
xor
adc
test
in
gs
add
cli
stos
sar
std
rcr
jno
cmc
mov
mov
test
mov
jo
outs
jbe
add
sahf
or
xchg
das
icebp
sbb
fidiv
sahf
enter
mov
mov
mov
outs
push
test
das
cmp
int
outs
push
or
mov
add
arpl
out
ss
pop
add
mov
(bad)
adc
outs
mov
push
ret
inc
pop
pop
movs
mov
push
outs
sbb
cmps
data16
fstp
pop
psrlq
cmp
aad
imul
pop
(bad)
popf
jle
pop
and
mov
mov
cld
jno
jp
sub
leave
push
cmps
(bad)
sbb
cmp
enter
jmp
fwait
add
rcr
push
xor
sbb
jne
jae
outs
pop
mov
bound
scas
(bad)
enter
aas
cmp
jns
scas
push
inc
jns
adc
test
sub
xor
mov
sub
std
or
cmps
repnz
xor
and
sub
dec
adc
mov
pop
pop
pop
std
sbb
mov
cmp
test
punpcklwd
ja
sbb
sbb
mov
dec
bound
mov
es
aam
jmp
sbb
shl
dec
outs
cmp
xor
push
rol
mov
jbe
aas
cmp
pop
jl
sar
jnp
jo
jmp
sub
jge
add
pop
in
jae
jnp
pop
jle
into
adc
pop
adc
xlat
pusha
lahf
xchg
ins
mov
cs
jo
jl
gs
mov
ja
push
jmp
jne
inc
inc
(bad)
and
sahf
xlat
dec
pushf
(bad)
in
xlat
cli
mov
(bad)
jecxz
jb
mov
popf
ja
outs
mov
fisubr
scas
cmp
fmul
jg
or
ret
sti
xchg
lods
push
dec
xor
sub
xchg
scas
sub
adc
and
sahf
and
or
dec
sub
sbb
scas
rcr
push
bnd
imul
std
inc
rol
and
cmp
fldpi
mov
outs
jae
rcr
stos
sbb
notrack
add
push
xor
jg
push
(bad)
xchg
arpl
and
sbb
sub
jle
int3
mov
je
std
(bad)
(bad)
shl
setg
add
push
and
into
push
mov
mov
retf
int3
movs
fcomi
lahf
inc
pop
jo
sub
inc
inc
ja
es
mov
test
addr16
lods
ret
and
or
pop
out
cmp
data16
add
das
jmp
or
pop
pop
pop
dec
jns
cs
mov
call
mov
dec
pop
xchg
mov
pop
sbb
jg
icebp
xchg
jno
push
inc
sbb
bnd
sub
xor
sbb
out
clc
cdq
mov
mov
add
wbinvd
cli
shl
movs
pop
fild
loop
ins
mov
clc
or
or
cmps
cmps
in
das
lock
je
aad
rcr
xchg
fwait
icebp
pop
mov
ja
sub
sub
mov
mov
js
mov
clc
mov
jg
out
fstp
push
jge
and
iret
clc
mov
mov
jnp
iret
das
inc
mov
inc
(bad)
or
mov
push
mov
xlat
les
loope
pop
(bad)
addr16
sub
push
loope
sbb
call
imul
sbb
shr
shl
push
out
leave
jge
mov
push
mov
mov
push
add
fcmovu
jae
jmp
not
xchg
sub
cdq
sbb
jb
mov
push
icebp
inc
fisubr
popf
mov
rol
jmp
xor
fdiv
enter
pusha
xchg
jb
and
rcr
ss
adc
scas
test
sub
xchg
aaa
inc
aam
inc
pop
push
push
mov
xor
adc
pop
xchg
shl
arpl
test
and
cwde
xchg
lods
icebp
(bad)
out
or
repnz
mov
sbb
popf
adc
mov
outs
aas
mov
fcom
imul
xchg
inc
xchg
retf
je
(bad)
(bad)
adc
mov
fmul
jns
psraw
pop
push
xchg
out
pop
fcomp
and
pop
ins
and
lahf
ja
mov
dec
xor
xchg
aaa
sbb
nop
push
test
popa
adc
cmp
lahf
jno
mov
ret
sub
test
xchg
sbb
dec
mov
lods
lods
lods
(bad)
mov
push
(bad)
cmp
dec
fndisi(8087
jae
dec
mov
push
popf
fbstp
pop
mov
(bad)
int
jmp
scas
and
sub
add
cmp
lods
nop
mov
dec
shr
sbb
push
xor
jns
(bad)
dec
sbb
mov
int
iret
fisub
xor
xchg
sar
pop
mov
mov
sar
sbb
or
jge
push
fcom
shr
test
mov
out
call
outs
shl
add
push
outs
cmc
nop
test
jmp
push
cmp
sbb
mov
sbb
test
(bad)
(bad)
in
sub
pop
push
dec
les
jns
fabs
jmp
push
js
dec
(bad)
movs
inc
ins
shr
mov
fstp
cli
leave
jmp
xor
sub
int
aad
cli
es
dec
xor
push
lods
pushf
stos
(bad)
into
or
add
jns
shl
cmp
cwde
xchg
sub
popf
rcl
mov
js
cmp
mov
mov
jmp
xchg
inc
loopne
xchg
fwait
jnp
neg
adc
sbb
ja
pop
fistp
sbb
push
push
cmp
mov
mov
loopne
sub
fwait
lock
out
imul
push
xchg
push
lock
jae
test
outs
sub
xor
leave
dec
aam
into
add
jle
loopne
daa
out
cmp
jnp
or
fstp
sbb
mov
scas
cmps
cs
hlt
xchg
and
dec
mov
mov
mov
xchg
ins
dec
inc
stos
inc
dec
sar
sub
mov
fs
mov
repz
or
neg
mov
xchg
mul
add
inc
add
ds
inc
iret
mov
out
pop
fbstp
fisubr
cmc
mov
sbb
sbb
or
jl
xor
bound
and
out
mov
or
ins
sbb
add
mov
repnz
dec
popa
sbb
shl
push
jmp
cmc
sbb
mov
std
jp
les
inc
clc
ror
xor
stos
pop
lahf
cdq
mov
push
je
or
into
inc
xor
cmps
cmp
add
pop
test
or
movs
add
ins
stc
in
cli
xor
sbb
icebp
movs
push
xchg
loope
push
popf
mov
mov
sti
adc
dec
push
cmp
ins
jnp
data16
daa
sub
aad
out
cmp
sub
add
mov
imul
into
push
icebp
repnz
cwde
sub
clc
test
cmp
loope
pop
cmp
jg
popa
fdivr
push
out
ja
and
dec
cwde
sbb
and
fadd
push
in
pop
outs
xor
mov
add
xchg
pop
pop
or
add
aas
xchg
sub
mov
outs
add
sahf
dec
add
sub
mov
mov
in
aaa
xor
pop
dec
outs
stos
pop
inc
cmp
jne
add
cmc
pushaw
mov
pop
test
fwait
jno
or
add
mov
lahf
fcmovbe
test
cld
shr
outs
and
mov
mov
mov
nop
adc
(bad)
adc
jno
dec
lods
sub
sbb
and
repz
pop
retf
sbb
xchg
outs
mov
push
daa
into
pop
sub
xor
mov
sbb
jp
xchg
and
rcl
jmp
enter
dec
test
inc
cmps
push
xor
into
pop
sub
or
jmp
adc
rcl
add
xor
mov
ins
xor
pop
jno
sub
iret
push
call
sub
lds
xchg
outs
(bad)
push
push
ds
mov
jecxz
mov
mov
jl
sbb
add
fwait
cmp
pop
inc
ret
jne
cmps
inc
sahf
lods
mov
mov
retf
cmp
mov
std
cmps
fst
fisub
sar
dec
mov
sbb
sbb
inc
push
xchg
call
fsub
cmps
dec
pop
pusha
mov
add
inc
cs
jnp
jnp
dec
retf
jo
lds
loope
dec
and
fisttp
ret
ficom
inc
or
dec
stos
sti
aaa
jo
(bad)
fcomi
jns
xor
dec
das
stos
xchg
jle
jae
xor
and
bound
xchg
clc
and
sub
xor
add
xchg
pop
xor
xor
jmp
push
fisub
in
aas
das
in
jbe
push
cli
(bad)
fisubr
fdivr
pop
adc
cmc
test
mov
xor
mov
jb
dec
sub
inc
loope
inc
(bad)
mov
sub
sub
ins
pop
push
es
dec
mov
fwait
or
cli
jmp
push
arpl
adc
pop
(bad)
std
fucom
lods
inc
mov
test
add
das
daa
jecxz
add
cli
iret
(bad)
mov
retf
lock
jb
adc
std
gs
jle
fs
nop
mov
fisubr
rol
inc
rcl
lahf
scas
mov
gs
fild
and
push
out
xlat
adc
sbb
(bad)
dec
mov
push
sub
adc
push
sbb
pop
cmp
inc
sub
mov
sub
sar
test
pop
repz
adc
push
mov
clc
mov
vcvttpd2dq
add
cmp
ja
ja
dec
pop
pop
mov
out
sub
popf
stos
int
arpl
icebp
sub
int
mov
daa
xchg
push
add
clc
stos
sub
mov
pop
arpl
test
cmp
repnz
nop
xchg
addr16
aad
clc
enter
or
push
enter
xchg
xchg
sub
fist
xchg
out
add
and
out
xor
ja
inc
mov
mov
mov
loope
repz
xchg
(bad)
ins
jbe
icebp
mov
add
sub
fcom
pusha
leave
add
out
mov
dec
pop
repnz
test
sbb
xchg
not
sbb
pop
shr
xchg
mov
or
out
push
arpl
loope
adc
adc
inc
add
sbb
xor
lods
imul
jge
jge
adc
retf
fsubr
mov
aad
(bad)
js
inc
lods
int
push
aam
inc
and
movs
adc
cld
jmp
push
pop
inc
jbe
enter
xor
push
retf
jmp
test
test
test
jmp
xor
lods
adc
jmp
dec
push
inc
das
in
inc
jg
(bad)
or
dec
push
ficomp
div
sub
mov
adc
sbb
pop
imul
xlat
or
aaa
ss
in
js
xor
sub
lea
das
dec
push
ror
xor
test
ins
fmul
sub
push
adc
cmp
push
iret
call
faddp
bts
or
mov
xchg
add
adc
stos
lock
mov
cli
lods
mov
inc
movs
nop
mov
mov
push
hlt
lahf
mov
push
mov
push
jo
add
sub
sub
push
fs
not
mov
imul
mov
sub
pcmpeqb
(bad)
ins
cmp
mov
ss
call
jl
sti
std
or
(bad)
mov
inc
dec
fstp
in
in
inc
mov
push
stc
popa
loopne
sub
add
sbb
ficomp
jge
addr16
loopne
jge
test
pusha
cs
fsubrp
pop
pop
adc
sar
aam
and
sbb
xor
push
inc
push
mov
push
mov
adc
xchg
push
into
mov
cmp
sbb
movs
jne
inc
bound
cli
add
dec
pusha
push
sbb
add
sbb
sbb
clc
sbb
jne
fldenv
rol
cmp
sub
out
(bad)
inc
sbb
or
ins
xchg
dec
ficom
mov
lods
test
cmps
out
mov
and
jl
pop
and
sbb
pop
stos
fwait
mov
and
mov
jnp
cmc
das
pop
dec
xor
icebp
in
sub
cwde
xchg
test
scas
xchg
int
jl
mov
shr
xor
xchg
test
stc
cmp
mov
test
cmps
xchg
into
push
jecxz
js
ret
arpl
ss
ret
and
cmp
hlt
das
cmp
shl
sub
mov
sub
ss
or
call
lods
in
js
in
mov
jmp
dec
aaa
cmp
cmp
aad
xor
retf
jo
cmp
add
mul
dec
test
mov
imul
(bad)
pushw
adc
imul
mov
mov
add
(bad)
sub
jmp
cs
ret
(bad)
or
jbe
push
pop
jle
push
imul
push
cmp
mov
or
push
cdq
pop
inc
pop
es
(bad)
dec
jne
lea
push
mov
cs
add
in
es
inc
push
std
push
pushf
or
(bad)
push
jae
sbb
ss
sub
in
mov
pop
stos
sbb
fmul
inc
and
mov
mov
or
mov
popa
lods
out
fs
aas
or
xchg
jl
call
imul
fild
lahf
stos
jne
pop
mov
push
sub
add
sbb
or
enter
cs
jp
xor
call
adc
adc
repnz
cmp
xor
mov
rol
push
call
mov
add
push
add
repnz
mov
scas
xchg
(bad)
xor
xchg
mov
mov
ja
inc
outs
call
cld
mov
cmp
pop
cmp
cmp
mov
xchg
(bad)
retf
push
inc
or
mov
and
loope
dec
jne
xchg
pop
add
rol
and
sbb
int3
aas
repz
loope
add
jno
addr16
inc
retf
and
or
sub
jo
retf
loopne
idiv
sbb
and
ins
jb
xchg
add
jmp
jmp
(bad)
fsub
jmp
fild
cmps
jnp
mov
repnz
cld
stc
mov
and
push
retf
add
jmp
test
inc
mov
pop
push
xor
pusha
lods
lds
push
push
out
aam
imul
xor
std
dec
rcr
outs
popf
out
and
sbb
mov
or
mov
push
mov
jle
(bad)
cmp
fucom
in
sbb
loopne
dec
test
or
push
stos
(bad)
lods
loopne
rcl
shl
bound
xchg
cld
call
je
inc
cmps
add
inc
push
dec
aam
xchg
and
ror
pop
or
aaa
jl
and
iret
shl
xchg
adc
jge
sub
push
test
push
mov
mov
jg
pop
stos
pop
stc
push
aaa
in
mov
dec
ror
pop
test
cmps
stc
fiadd
dec
fst
xchg
fld
imul
rcl
ds
repz
fcomi
mov
or
mov
pop
out
jl
mov
aas
fstp
adc
in
jnp
ins
mov
(bad)
cmp
mov
xor
ficomp
push
xchg
add
in
cmp
stos
inc
or
jno
mov
shr
and
jge
test
push
test
dec
not
xchg
jno
test
jae
popf
mov
popf
push
imul
int3
int3
fdivr
in
jne
mov
pop
and
loope
int3
jge
in
xchg
cmp
icebp
jne
sbb
jle
gs
movs
popf
pop
aas
pop
das
cmps
call
push
or
out
das
mov
call
xchg
mov
neg
stos
dec
sub
and
mov
fild
inc
cs
and
(bad)
jb
mov
jae
and
imul
scas
or
sub
aas
mov
mov
bound
gs
rcr
add
shl
or
das
push
(bad)
or
xor
lods
dec
and
adc
add
(bad)
mov
lds
ror
mov
cwde
xchg
lods
mov
sub
pusha
jg
pop
add
and
fs
xor
fnstsw
mov
rcr
jge
ins
mov
dec
push
cli
mov
or
pop
mov
adc
mov
addr16
add
(bad)
jg
pop
jb
push
fst
(bad)
mov
pop
in
(bad)
jp
adc
out
cli
sbb
aad
dec
xor
jae
inc
test
hlt
je
mov
in
int
lds
push
xchg
jl
fwait
push
jnp
(bad)
xchg
repz
test
popa
lds
cmps
push
std
ja
adc
push
outs
xchg
jp
mov
call
pop
inc
pop
(bad)
nop
xchg
pop
mov
inc
inc
ins
dec
cmps
xchg
cmovle
mov
std
cwde
cmp
xchg
cmc
inc
enter
mov
in
ret
push
pop
cmp
or
mov
or
mov
push
dec
xchg
push
pushf
sbb
or
jle
bound
cmps
push
nop
mov
movs
push
push
mul
push
std
push
mov
addr16
(bad)
push
push
mov
out
fistp
sar
push
cmp
inc
pushf
repz
adc
cwde
sub
bound
pop
jbe
retf
hlt
cdq
stc
test
bound
ret
adc
test
inc
ins
clc
out
rcl
or
fimul
and
retf
xchg
pop
scas
push
or
xor
cmc
dec
xchg
outs
pop
lahf
push
retf
mul
stos
shl
call
and
mov
fwait
imul
arpl
into
scas
and
ins
mov
jnp
cld
cmp
push
inc
mov
leave
mov
int
mov
sbb
xor
jmp
popf
xchg
mov
ins
inc
push
push
out
cmc
mov
fisubr
pop
sub
loop
xchg
outs
and
bswap
mov
lock
pushf
ret
cmp
sbb
mov
mov
jne
cmps
icebp
lahf
mov
inc
sti
aad
loope
(bad)
push
add
mov
and
hlt
mov
mov
in
call
or
test
shl
mov
sti
lods
scas
ins
ins
mov
ret
ficomp
aam
scas
push
in
cmp
in
dec
rol
imul
mov
inc
dec
lea
aad
pop
leave
aaa
lock
xor
jns
mov
pop
push
idiv
cmp
dec
stc
xchg
outs
cwde
jle
cmp
sub
add
and
mov
adc
loope
loopne
sar
pop
dec
mov
sti
adc
push
lock
jp
dec
xchg
sti
(bad)
mov
xchg
sbb
(bad)
lds
(bad)
sub
jnp
cli
push
mov
out
jge
(bad)
add
in
and
pop
popf
xchg
cli
movs
in
sbb
mov
(bad)
or
pop
in
test
ficom
mov
mov
xchg
xchg
pop
jbe
push
retf
shr
or
push
inc
or
inc
adc
into
mov
ret
and
dec
(bad)
jecxz
lock
into
jnp
mov
push
cs
mov
nop
push
jle
pusha
cld
(bad)
xchg
or
mov
adc
imul
test
repz
cs
and
fbstp
pop
lea
add
mov
mov
jnp
ja
leave
sbb
mov
inc
mov
xor
rol
pushf
ret
adc
xor
pop
out
jp
mul
and
or
mov
jo
push
mov
dec
cmp
loope
fstp
dec
pop
cwde
adc
fiadd
mov
adc
mov
nop
mov
pop
push
stos
push
mov
jp
bound
sub
inc
add
aam
lock
repz
das
inc
sub
and
aam
mov
retf
xchg
mov
xchg
mov
mov
into
fisttp
cwde
retf
adc
sub
retf
pushf
les
mov
imul
jb
retf
das
dec
mov
jno
and
mov
xchg
sti
and
shr
(bad)
enter
mov
(bad)
dec
retf
sbb
out
fwait
mov
sub
enter
cmp
xchg
mov
retf
mov
jbe
push
and
xor
ins
cmp
mov
arpl
pusha
es
test
or
add
sub
(bad)
scas
mov
bound
pop
cdq
mov
inc
xchg
push
inc
je
sbb
adc
pushf
call
add
inc
xor
dec
and
stos
sub
repz
xor
mov
test
scas
outs
sahf
lock
pop
mov
ja
in
hlt
outs
xchg
jo
mov
lock
or
int3
cld
pop
addr16
cmp
and
push
cmp
movs
movs
stos
xchg
sbb
out
xor
test
adc
xor
mov
or
rcr
pop
jle
jle
test
enter
mov
cwde
dec
out
push
adc
add
adc
shr
mov
jb
pop
shl
and
cld
sbb
or
ins
out
lds
mov
test
push
mov
adc
int3
sti
stos
lock
or
out
pop
xchg
xlat
sub
retf
ret
inc
pusha
retf
repnz
xchg
int3
lahf
and
jno
call
dec
fisub
mov
fidiv
retf
push
icebp
cmp
es
arpl
cmp
or
mul
cmps
and
jae
adc
out
xor
dec
push
and
xchg
and
xchg
cmp
jno
(bad)
fadd
cdq
fistp
jl
push
hlt
sub
test
inc
(bad)
mov
sar
cmc
sub
in
sub
scas
mov
sar
xor
icebp
loop
icebp
pop
pop
mov
loope
(bad)
and
dec
es
pushf
(bad)
(bad)
jp
pop
sbb
into
push
leave
dec
test
and
ret
xchg
es
sbb
lods
mov
pop
xor
and
push
arpl
jnp
pop
(bad)
sub
(bad)
fcom
dec
pop
lods
mov
in
cli
adc
sbb
imul
adc
jge
jge
lock
movups
xor
repnz
loope
pop
fisttp
pop
out
jp
xor
ret
les
dec
or
jp
or
sub
sub
cmp
and
loop
push
push
daa
rol
or
popfw
xlat
fisub
(bad)
movs
je
sub
mov
jb
sbb
and
dec
es
sub
lods
ror
sbb
adc
ss
inc
leave
(bad)
and
pushf
(bad)
mov
cmp
pop
adc
xchg
ss
or
psadbw
enter
add
adc
shl
dec
ja
xlat
mov
cmp
out
pop
mov
scas
ja
enter
mov
into
ins
pop
ja
lods
cdq
popa
jno
pop
cmp
xchg
mov
push
jge
sti
imul
xor
out
push
or
mov
mov
push
icebp
enter
int3
mov
and
test
les
repz
dec
push
sbb
jl
sbb
adc
adc
xor
(bad)
rol
in
jmp
int
pop
push
call
jno
aas
jo
and
scas
mov
xor
movs
scas
mov
fmul
cwde
lods
das
iret
outs
mov
int
(bad)
(bad)
sub
inc
in
pop
pop
rcr
gs
sub
sub
push
test
sbb
or
inc
pop
inc
repnz
xor
in
into
test
lods
and
imul
(bad)
jne
clc
pop
push
sub
cwde
add
inc
mov
test
sahf
xor
shr
add
movs
xor
mov
jmp
pushf
int3
in
inc
cwde
push
jg
es
ins
cmp
mov
pop
inc
(bad)
mov
imul
lds
inc
fdiv
pop
xchg
sub
mov
cmp
iret
stos
xor
mov
inc
mov
rcl
push
push
jl
lahf
mov
aas
aas
shl
jp
mov
ffreep
movs
jb
fsubrp
idiv
mov
xor
js
push
cmp
test
ja
mov
adc
pop
mov
daa
jecxz
adc
jge
loop
movs
mov
hlt
adc
jno
ja
adc
sahf
xchg
std
inc
mov
pushf
movs
adc
int
ret
aam
shl
out
imul
inc
int
sbb
sub
adc
lods
pop
jne
data16
popa
or
hlt
xchg
mov
in
mov
mov
cmc
pop
leave
int3
shr
push
push
test
xor
outs
aas
mov
inc
sub
push
mov
das
lods
or
jns
sbb
or
leave
xchg
or
and
mov
in
leave
sbb
push
sti
and
jae
es
shr
adc
sub
outs
lods
movs
lock
je
rcr
inc
jle
test
test
dec
push
push
inc
aas
fsub
psubw
jno
pusha
lds
cdq
fdiv
scas
sub
cs
add
test
mov
mov
(bad)
pop
aad
xchg
(bad)
fist
add
mov
sub
outs
mov
aaa
mov
cmc
cmp
gs
xchg
pop
mov
das
add
mov
rcl
xor
mov
movs
add
cmc
daa
sbb
or
loopne
sti
ret
pop
jnp
popa
ins
adc
mov
pop
cmc
ss
adc
inc
sbb
mov
xchg
iret
sbb
in
inc
(bad)
in
xchg
aas
pop
xor
mov
jmp
xor
hlt
add
sbb
push
call
ins
lods
jnp
mov
sti
data16
mov
or
adc
jmp
popf
mov
imul
mov
add
pop
xchg
xor
cmp
sbb
adc
pop
pop
clc
add
nop
(bad)
fwait
sub
frstor
call
mov
nop
clc
mov
inc
mov
pop
jl
ss
cmc
imul
mov
fistp
test
outs
adc
cmps
das
fs
xchg
fwait
out
add
mov
stos
stc
js
loopne
adc
dec
push
into
mov
pop
inc
aad
mov
mov
sbb
lahf
inc
es
mov
cmps
jl
jae
mov
pop
dec
dec
not
dec
mov
adc
sub
mov
ja
(bad)
xchg
push
shr
ss
dec
repz
fcom
mov
push
je
and
into
dec
jg
push
fidivr
cdq
jp
xlat
aad
ret
push
cmp
mov
mov
mov
mov
or
xchg
pop
daa
push
push
or
mov
nop
lds
ja
xor
lods
ins
lds
jbe
and
rcr
jo
(bad)
call
cwde
test
(bad)
mov
mov
repnz
ss
fwait
cmp
xchg
sbb
mov
push
mov
jne
inc
dec
jnp
mov
push
xchg
ins
push
and
mov
sbb
in
jbe
mov
ret
jbe
sub
mov
cmp
cmc
push
fs
adc
daa
cmps
vpackuswb
mov
jae
shl
fsubr
outs
adc
aas
adc
pop
shl
lea
and
inc
jle
inc
mov
mov
cmp
jno
(bad)
out
(bad)
and
or
push
jp
push
add
inc
loope
gs
pop
xor
cld
mov
push
nop
js
mov
repnz
xchg
(bad)
in
mov
jne
jecxz
cmp
call
dec
pop
ds
cmps
imul
cli
add
pop
mov
gs
cmp
and
fs
push
mul
add
pop
push
iret
retf
sbb
cwde
push
jmp
add
xor
mov
loop
fimul
xor
out
push
mov
cmp
push
lahf
or
add
(bad)
or
push
daa
das
or
aas
(bad)
das
xchg
sar
inc
push
sti
sar
mov
aaa
imul
mov
jnp
lock
dec
stc
call
dec
sbb
arpl
jg
push
movs
adc
jl
mov
jp
jb
or
ret
cmp
bound
and
(bad)
loop
jbe
mov
movs
loopne
xchg
lods
enter
inc
adc
push
mov
addr16
inc
mov
dec
and
in
xchg
aad
add
in
call
icebp
mov
ret
mov
pop
ins
adc
shr
pop
xchg
mov
out
stos
push
xor
iret
dec
dec
sti
stos
and
stos
cmp
cs
xrelease
fstp
xchg
xor
push
lods
aam
inc
(bad)
repz
shl
cmp
(bad)
sbb
aad
call
fild
pop
cld
mov
lock
cmp
test
jnp
in
cs
xchg
mov
loope
shr
call
gs
test
mov
loop
jb
fwait
inc
out
mov
loop
sub
imul
cmovo
mov
sub
sub
adc
lea
or
movs
push
imul
test
jecxz
cmp
sbb
or
sub
ins
add
or
pop
jp
sbb
and
inc
call
ret
cwde
xor
and
cdq
add
ret
cmp
fist
test
jns
mov
mov
ret
(bad)
jle
jb
daa
push
sub
pushf
inc
fiadd
and
mov
lea
cmp
bound
or
div
out
add
mov
leave
pop
pop
loope
dec
bound
jmp
mov
fdivr
mov
jmp
call
cmps
add
sbb
lock
jge
ins
add
jne
cdq
ror
repnz
xor
push
xchg
cdq
sbb
xor
stc
sbb
mov
(bad)
fstp
rcr
repnz
sub
sbb
dec
mov
or
dec
imul
jle
sub
outs
aas
loopne
out
(bad)
cwde
and
sbb
xchg
jle
pop
add
out
mov
(bad)
imul
jns
sub
xchg
in
clc
mov
pushf
add
jecxz
xchg
sub
jp
icebp
jl
out
mov
test
outs
jb
call
int
adc
jbe
es
xchg
xor
pop
mov
aam
cmps
ins
mov
mov
aaa
test
mov
and
test
jae
fisttp
in
xchg
sub
int3
test
push
jns
push
jp
adc
pop
pop
movs
push
pop
sbb
(bad)
sbb
jno
inc
es
or
sbb
cwde
mov
rep
aam
jb
cmp
dec
or
inc
fld
mov
pop
shl
ret
adc
fild
or
repnz
cs
je
int
or
lock
sar
push
cdq
fwait
out
imul
xor
div
movs
mov
stc
daa
xchg
stos
pop
ror
fadd
movs
dec
push
mov
cmp
adc
adc
test
fcomi
call
test
call
mov
fmul
outs
mov
jnp
jmp
jp
pop
call
mov
stc
(bad)
rcr
adc
cmps
push
dec
inc
inc
fist
call
icebp
aad
sbb
ins
call
cdq
jle
sar
jle
mov
sti
shl
mov
les
out
add
inc
int3
jmp
mov
sbb
mov
pop
jp
adc
mov
fidiv
xchg
stos
mov
test
in
imul
outs
hlt
dec
lods
arpl
mov
mov
cwde
stos
xchg
jbe
adc
mov
fstp
fbld
mov
or
sbb
(bad)
pop
push
leave
sbb
pushf
cmps
aad
push
add
xchg
push
cmp
jp
cwde
(bad)
icebp
stos
in
adc
daa
enter
es
call
and
ffree
gs
repz
(bad)
adc
xchg
popf
in
mov
inc
in
call
mov
test
or
or
push
mov
pop
in
sub
mov
pop
add
out
cli
scas
cdq
dec
out
out
mov
loopne
push
pushf
xchg
mov
lods
mov
out
inc
pop
xor
shl
mov
std
out
sub
popf
in
test
(bad)
or
cmp
fsubr
inc
std
fcom
mov
inc
lods
xchg
fwait
arpl
adc
popf
or
lea
cmp
dec
mov
aad
sti
js
js
mov
gs
fidivr
xchg
cmps
popa
push
lods
and
ss
fidiv
sbb
retf
pop
mov
mov
adc
jno
rol
sar
fild
test
pop
mov
cmp
arpl
pop
xlat
mov
mov
les
scas
ins
jle
push
pop
pop
pop
sbb
(bad)
mov
std
and
xchg
push
lods
ins
inc
and
movs
fdivr
in
jae
mov
and
repnz
xor
enter
fild
cld
sub
das
ja
enter
mov
test
(bad)
and
jne
push
das
mov
sbb
test
aam
jmp
mov
pop
outs
add
dec
pop
sub
scas
and
dec
xor
and
push
movs
jmp
add
xchg
in
adc
out
dec
mov
in
scas
jae
sbb
ds
sbb
push
in
add
add
and
mov
loopne
xchg
pop
pop
mov
and
cmp
int
xor
loopne
div
mov
push
cdq
jp
and
jns
outs
jns
stos
push
mov
fs
std
pushf
clc
xor
loop
push
pop
mov
push
push
out
(bad)
xlat
repnz
in
xchg
inc
in
rcr
rcl
mov
pop
inc
lock
out
aad
(bad)
cli
sbb
add
(bad)
movs
xor
cmpxchg
icebp
push
mov
adc
cdq
pop
imul
xchg
mov
xor
mov
data16
aad
ja
in
out
int
or
cmp
push
adc
dec
sti
push
cs
loope
mov
push
(bad)
icebp
stc
jb
mov
add
jle
sbb
aad
add
inc
mov
xor
add
jge
ss
xchg
ret
xor
xor
nop
int3
sti
mov
add
ret
cmp
js
pop
dec
sbb
ins
inc
and
sbb
fs
mov
loopne
xchg
aas
dec
cmps
jge
inc
cdq
loop
xlat
call
mov
lods
hlt
pop
imul
xchg
xchg
cmp
add
inc
inc
repnz
test
iret
mov
cmps
push
(bad)
mov
jmp
ja
nop
scas
(bad)
jle
fild
test
jb
mov
rcr
mov
push
aas
jno
mov
xchg
sbb
std
xchg
enter
xor
jecxz
lock
mov
adc
mov
mov
xchg
or
popf
mov
inc
rcl
dec
dec
std
enter
push
enter
adc
in
out
pushf
adc
jge
in
call
mov
in
push
cmp
or
sbb
into
or
push
mov
pop
in
stc
dec
cmp
rcr
xor
jmp
xchg
add
outs
mov
push
pop
and
jp
ret
jo
add
call
test
xchg
dec
pop
popa
push
xor
cli
mov
cmps
mov
scas
mov
std
jmp
sub
push
sti
leave
repz
or
movs
mov
mov
rol
xchg
mov
stos
fild
test
push
outs
and
xor
stc
xchg
mov
ficom
inc
xchg
xchg
adc
dec
test
mov
popf
(bad)
mov
add
leave
sbb
pushf
dec
daa
repz
and
xor
movs
dec
cmp
ins
inc
push
dec
mov
loop
leave
icebp
xchg
lock
es
lds
pusha
aas
adc
xlat
inc
sbb
or
and
pop
cmc
movs
das
sub
int3
es
push
and
in
retf
leave
or
fst
sbb
mov
xor
xor
ret
jns
xor
pushf
test
fs
in
scas
in
pop
into
inc
sbb
xchg
mov
jno
and
cmp
call
out
xor
jo
adc
stc
loop
pop
lds
inc
push
fisub
ins
and
jb
repz
stos
(bad)
out
(bad)
mov
aad
ficomp
sub
or
dec
xchg
jmp
dec
add
pop
mov
pop
enter
sub
mov
cmp
mov
add
bswap
out
jbe
jno
ja
dec
mov
in
mov
call
pop
xchg
push
call
in
fidiv
shl
adc
dec
call
call
(bad)
aad
scas
jmp
dec
add
dec
enter
punpckhdq
addr16
mov
push
out
pop
ss
fnstenv
into
ins
mov
push
(bad)
scas
shr
cmp
or
mov
call
ret
scas
and
mov
add
sti
cmp
enter
sbb
ins
xor
int3
xchg
mov
xchg
test
jecxz
sub
pop
aaa
sub
dec
fwait
sub
push
jo
stc
or
lds
int3
out
neg
jg
int
imul
adc
daa
xlat
adc
jo
jp
je
xchg
rol
mov
out
cmps
pushf
adc
mov
sub
jns
dec
out
inc
inc
inc
mov
push
(bad)
cmp
xor
xor
jnp
sbb
daa
adc
call
lds
(bad)
test
pop
adc
pushf
add
mov
pop
cwde
clc
mov
jns
fnstsw
push
call
cwde
dec
or
arpl
loope
je
stos
mov
mov
inc
mov
ds
xchg
imul
ret
pop
mov
sbb
loopne
jge
out
mov
mov
mov
loopne
pop
outs
sar
cli
ss
test
ret
adc
xchg
push
or
lods
dec
aad
in
or
push
scas
jo
mov
stos
(bad)
lds
push
xchg
pop
sbb
mov
jns
popa
cmp
mov
stos
out
ins
cmps
std
dec
sbb
jecxz
push
add
or
xor
rol
or
jno
inc
xor
push
inc
jne
xchg
fnsave
retf
rcr
imul
xchg
cmp
ja
pusha
mov
xchg
data16
scas
sbb
call
sub
daa
pop
pop
mov
das
daa
jmp
push
and
jne
inc
sbb
mov
ja
arpl
cmp
jge
push
inc
ror
mov
push
xor
leave
mov
ror
daa
mov
mov
cmp
repnz
pusha
fcomp
or
mov
in
loopne
cmp
mov
mov
mov
cmp
shr
loope
fld
imul
out
sub
retf
push
pop
mov
adc
out
shl
ds
ds
xor
or
push
cld
mov
ret
push
dec
and
das
jle
nop
aas
fnstcw
jmp
pop
js
xchg
pusha
push
adc
push
ds
mov
mov
div
pop
sub
scas
fs
(bad)
jns
mov
(bad)
ss
in
into
xchg
mov
out
cwde
cmps
mov
imul
lea
cmp
push
mov
imul
xlat
out
inc
leave
dec
or
lods
jge
sub
xchg
inc
mov
mov
cmc
push
(bad)
cld
ss
in
imul
push
push
cli
inc
push
jnp
xchg
jl
fiadd
jp
jecxz
inc
sbb
push
dec
je
mov
fmul
mov
cmp
aas
sub
test
fmul
fdiv
sbb
stos
sub
dec
stos
jg
clc
xlat
add
sbb
rcl
jno
int3
mov
adc
mov
loopne
and
imul
or
rcr
daa
das
or
(bad)
(bad)
loopne
adc
xchg
ss
das
sbb
retf
ja
jns
jno
ja
xor
lock
cli
xchg
aam
adc
retf
out
add
jmp
ins
leave
and
mov
fwait
lds
adc
push
mov
inc
mov
(bad)
bnd
mov
add
mov
call
sub
aam
xchg
dec
xchg
lea
(bad)
add
(bad)
xlat
shr
or
(bad)
loope
fwait
imul
mov
enter
ror
fwait
out
pop
pop
sar
sub
sbb
aaa
mov
aaa
and
jne
(bad)
mov
dec
and
mov
jbe
sub
jae
mov
daa
pushf
mov
mov
inc
or
stc
inc
jmp
push
mov
push
jae
cs
mov
jae
je
(bad)
sub
add
(bad)
sti
push
jns
psrad
sbb
frstor
pop
pop
cmc
ret
mov
dec
arpl
in
cli
cmp
icebp
mov
or
add
mov
push
mov
or
push
popf
lods
mov
mov
pop
dec
cmp
push
rcr
jl
add
fwait
nop
push
sti
xor
call
mov
mov
sub
stos
xor
mov
xchg
shl
dec
cli
pop
or
aad
add
mov
sub
mov
pop
xor
cwde
std
mov
sub
push
mov
(bad)
pop
pop
mov
sbb
fldenv
repz
vdivss
sub
fst
pop
pop
repnz
mov
and
loop
into
or
pop
sbb
call
(bad)
xor
mov
inc
sahf
sti
jl
fsubr
(bad)
xchg
cmc
rol
test
int
mov
fldenv
jle
mov
out
cmc
stc
mov
or
and
jmp
aaa
jb
pop
pop
outs
out
aaa
mov
push
mov
mov
pmovmskb
mov
inc
sbb
xchg
nop
fcomp
nop
test
cmp
cmp
cmp
rol
push
test
ret
xchg
icebp
js
mov
xlat
or
in
rol
inc
imul
mov
stos
cmp
add
mov
adc
xchg
das
setb
mov
pop
and
test
push
jo
ret
sbb
jmp
and
leave
icebp
jnp
pop
dec
imul
jns
xor
mov
pusha
add
mov
or
push
js
sub
xchg
popa
in
fsubr
adc
nop
inc
repz
(bad)
outs
call
movs
jmp
inc
push
movs
imul
xor
inc
inc
push
nop
hlt
jno
cmp
sbb
jl
test
mov
repnz
push
cmp
cmp
stos
jmp
scas
or
ins
xchg
in
add
lods
sub
and
ret
cmp
repz
push
adc
inc
enter
addr16
test
dec
push
mov
ds
hlt
push
scas
enter
cmp
dec
sub
imul
shl
popf
fiadd
mov
inc
mov
mov
out
dec
in
inc
sbb
or
sbb
mov
mov
fs
fnstenv
pop
aas
mov
cmp
dec
mov
pushf
add
stc
in
sub
inc
les
jmp
mov
mov
js
push
lods
push
std
inc
clc
dec
pop
js
fcomp
arpl
shl
mov
xor
jae
pop
in
mov
mov
mov
mov
mov
add
fst
jecxz
mov
fxch
fs
sub
shr
push
jge
in
jbe
fsub
je
test
rcr
mov
clc
cmp
cmp
lahf
cdq
call
aas
cli
or
daa
xchg
ficom
pushf
dec
or
daa
pusha
mov
adc
xlat
adc
pop
scas
dec
daa
shl
jne
test
cmps
mov
cmps
ds
ss
fdivr
rcr
inc
pop
xchg
enter
xor
js
cmp
adc
mov
sub
adc
int3
inc
or
jl
mov
lods
xchg
fldenv
pop
icebp
push
mov
loop
repz
enter
dec
cmp
push
(bad)
(bad)
mov
mov
jmp
jnp
add
ins
(bad)
loope
mov
jo
movs
dec
mov
add
dec
test
addr16
sbb
mov
neg
sub
aam
sub
call
stc
pop
mov
sub
sbb
xchg
rol
gs
fmul
test
dec
pop
mov
add
xchg
xor
push
dec
inc
mov
cmp
dec
in
pushf
ins
jnp
out
sbb
(bad)
cmc
popf
jns
popa
mov
jecxz
test
lods
add
inc
(bad)
cmp
pop
sbb
stos
lds
cmp
fdiv
shr
pushf
aas
add
stos
leave
add
add
jb
lea
cmp
les
ficom
xor
shl
jbe
sbb
jno
xchg
adc
lods
pop
jecxz
int
dec
jmp
mov
adc
imul
pop
and
mov
pop
sub
push
retf
and
push
lods
jecxz
or
or
and
loop
shr
xchg
test
(bad)
int
add
add
icebp
or
adc
in
gs
ins
into
cmp
test
cmps
pop
es
ret
pop
adc
xor
xchg
jns
mov
pop
cmp
out
add
jb
or
out
cmp
inc
add
mov
or
shl
pop
jae
jns
xor
xchg
movzx
jl
sti
jg
out
sub
fld
call
xchg
ds
popf
add
stos
call
hlt
call
inc
cld
inc
(bad)
jecxz
imul
aam
and
add
push
sbb
push
jl
inc
lods
mov
movs
std
outs
dec
and
xor
ret
cmp
inc
adc
retf
lea
pop
push
jmp
mov
fs
gs
(bad)
sub
cmp
ja
cld
jl
leavew
inc
sub
jmp
(bad)
jo
mov
adc
psubb
pop
push
pop
push
loope
into
pop
add
cmps
and
arpl
mov
mov
push
lahf
imul
inc
sub
push
lahf
xchg
cmp
sub
fwait
pop
mov
xor
pop
cmp
es
test
lods
xchg
xor
test
imul
jecxz
nop
jecxz
popf
add
jo
jbe
xchg
test
jmp
js
cmp
mov
push
pusha
jge
in
pop
test
(bad)
jbe
ffreep
retf
xchg
sahf
xchg
test
and
pop
loopne
push
cmp
call
test
les
inc
sub
inc
mov
fsubr
test
aaa
aad
ror
addr16
xor
lahf
or
xchg
aad
mov
dec
jl
loopne
pop
cwde
and
jecxz
jmp
cli
mov
cmp
or
adc
xchg
xor
or
xchg
adc
xchg
jl
xor
into
scas
out
adc
cmp
add
jge
adc
sbb
push
xchg
fstp
mov
dec
clc
int3
jecxz
pop
into
push
push
imul
cmp
add
add
mov
idiv
adc
(bad)
aad
push
call
push
mov
(bad)
jl
push
mov
cmp
nop
(bad)
jae
scas
in
loope
outs
mov
push
popa
cli
push
push
or
call
je
scas
in
or
jl
adc
aaa
sub
mov
mov
or
push
pop
les
jmp
ja
out
lds
or
repz
xchg
popa
sub
mov
pusha
inc
aam
push
xchg
call
cmp
bound
mov
shl
mov
xchg
int
jmp
(bad)
push
cwde
push
jne
scas
sar
pop
inc
call
xor
stc
sbb
xor
call
js
mov
dec
ins
iret
and
mov
cmp
in
scas
int
test
cmp
pop
test
xor
xor
add
or
jns
ja
aam
xchg
adc
bound
aas
adc
xor
jbe
jl
retf
push
sub
add
cmp
ficom
fmul
mov
stc
adc
(bad)
aaa
shufps
pop
xchg
xlat
sub
(bad)
mov
rcr
adc
daa
pop
and
jo
dec
inc
popa
sbb
xor
mov
cmp
out
xchg
add
sub
ret
ret
mov
outs
ja
mov
lods
leave
int3
shl
loopne
movs
jg
or
ins
inc
pop
call
cwde
gs
fld
js
and
jmp
gs
add
fld
mov
mov
adc
test
xchg
cwde
stos
lock
xor
retf
out
rol
nop
mov
and
and
xlat
(bad)
call
pop
adc
aaa
add
test
cs
int
fisttp
and
fistp
addr16
inc
push
sbb
add
push
add
jnp
dec
cmp
sbb
mov
mov
push
scas
call
cmp
outs
mov
ret
or
cmp
xchg
rol
test
mov
jmp
bound
das
mov
jmp
test
ins
nop
jno
push
aad
push
and
xchg
push
sbb
test
std
jg
retf
sub
and
add
xor
add
inc
rcl
or
mov
sub
add
push
dec
scas
jns
popf
push
mov
push
mov
inc
sub
outs
imul
add
(bad)
xor
arpl
jns
cmp
nop
or
pop
js
xchg
fisubr
push
dec
int
pushf
dec
mul
push
dec
mov
push
icebp
pop
mov
sar
xchg
mov
push
mov
retf
inc
jecxz
sub
popf
ret
fld
push
jbe
rcr
(bad)
scas
push
dec
enter
or
mov
push
mov
imul
imul
add
retf
out
sub
pop
fstp
mov
cmps
(bad)
mov
dec
inc
cmps
dec
mov
dec
xchg
cld
pop
sti
(bad)
loop
push
dec
mov
xor
mov
or
mov
xor
inc
sub
outs
(bad)
ret
and
loopne
jmp
inc
pushf
pop
push
xchg
enter
outs
ja
inc
stos
in
sti
jnp
cdq
sbb
mov
in
or
and
call
test
mov
push
dec
mov
push
call
popa
add
jmp
jo
arpl
sub
popa
lods
push
push
in
sbb
test
test
inc
jnp
cmp
movups
test
pusha
ss
sbb
pop
repz
(bad)
push
cli
xchg
fiadd
or
mov
je
ret
mov
mov
(bad)
mov
je
out
mov
sub
das
sub
cmc
dec
push
xchg
mov
lea
xor
nop
popf
dec
push
(bad)
add
mov
add
add
mov
pusha
or
test
sub
loope
pop
arpl
adc
inc
and
imul
inc
shr
ret
pop
xchg
cmp
push
(bad)
nop
dec
scas
movs
out
jl
mov
je
or
cmc
xor
sbb
ret
les
jbe
or
sub
mov
arpl
jg
xor
fild
sub
imul
add
lds
aam
dec
push
jae
(bad)
into
add
adc
aas
fs
gs
sar
fidivr
pop
push
hlt
xchg
sbb
sti
pop
or
pop
daa
sub
int3
in
addr16
cmp
push
mov
jl
jg
gs
add
popf
dec
mov
call
mov
sub
xor
mov
xor
inc
popa
push
adc
mov
ror
jns
or
inc
xor
cmp
push
shl
sub
push
adc
sbb
shl
mov
push
xor
inc
jmp
sub
and
xchg
cmp
gs
cmp
xor
mov
xchg
leave
shl
cdq
dec
xor
imul
push
scas
inc
and
adc
jne
lds
inc
mov
fs
lea
push
mov
sbb
inc
and
dec
xor
(bad)
jb
mov
mov
outs
or
mov
std
fistp
xchg
ds
adc
mov
jp
add
mov
cmp
mov
xchg
je
jo
fisttp
cmps
push
xchg
imul
inc
dec
mov
inc
hlt
pop
scas
cmps
sbb
mov
imul
cmp
cmps
ss
fmul
dec
lods
ret
(bad)
(bad)
cmp
repnz
jb
imul
enter
aaa
imul
jle
aam
lods
mov
jno
cmp
cmp
push
movs
mov
js
fnstsw
mov
add
ins
sbb
addr16
div
shl
pop
ret
fsubrp
mul
lds
pop
xchg
jmp
imul
(bad)
jne
nop
stos
hlt
sub
sbb
sub
push
aas
dec
in
xor
or
cmps
std
jl
cld
sbb
data16
leave
push
dec
mov
mov
or
(bad)
sbb
sbb
push
mov
or
add
push
mov
adc
mov
shl
ins
push
push
jo
call
ds
div
mov
mov
dec
or
es
dec
push
xor
add
inc
sbb
push
inc
pop
call
cmp
dec
imul
fdivr
cmp
adc
xchg
je
mov
jno
or
cmp
test
cmp
data16
sti
pusha
imul
adc
aad
jmp
mov
xchg
fs
jg
ins
in
(bad)
sbb
adc
test
jnp
or
xor
lahf
out
dec
and
ja
jno
lds
mov
jge
push
sub
or
sahf
inc
int3
cdq
sub
xor
pop
cwde
mov
fcmovnb
add
arpl
js
dec
adc
mov
push
or
rcl
pop
pushf
jmp
dec
jbe
imul
xchg
gs
jecxz
adc
mov
mov
es
pop
int3
mov
or
mov
pushf
rcr
dec
in
mov
ret
scas
loopne
retf
sbb
mov
jle
mov
or
arpl
mov
adc
sbb
cmp
mov
inc
or
mov
push
xchg
fbstp
add
(bad)
sbb
movlps
cmp
and
mov
jb
retf
cmp
jge
cmp
in
dec
int
adc
in
or
lock
(bad)
jp
xor
dec
fdivp
leave
or
sbb
clc
sub
ret
lods
or
in
sahf
les
fimul
in
sub
or
ja
xor
lea
fist
add
test
ja
ds
dec
vmread
mov
dec
scas
mov
or
jmp
xchg
push
and
inc
mov
loop
mov
xor
stos
or
sub
add
add
mov
cmp
add
inc
cmp
iret
pop
es
ror
sub
outs
loopne
sahf
inc
sbb
mov
int3
test
adc
pushf
cli
and
cmp
or
pop
imul
adc
je
xor
xor
and
ffree
or
dec
inc
repnz
xchg
mov
scas
and
sub
data16
ret
xlat
sahf
das
inc
or
sbb
stc
dec
cdq
mov
aas
mov
jmp
xchg
in
dec
(bad)
xchg
and
inc
test
jmp
pusha
repz
ror
jne
mov
popa
pop
fild
xchg
mov
data16
xchg
push
push
addr16
mov
out
ins
mov
repnz
adc
pop
movs
adc
(bad)
cmp
xor
sbb
das
dec
movs
mov
arpl
stos
xchg
leave
fst
(bad)
and
popf
pop
outs
lea
jmp
sbb
addr16
mov
pop
fdivr
out
mov
out
push
xor
or
(bad)
sti
(bad)
fist
loop
sub
adc
jle
mov
dec
sub
ret
push
mov
outs
popa
in
not
aam
in
fmul
xchg
pushf
push
or
fcompp
(bad)
jg
sti
xor
aam
cli
int
mov
dec
movs
xor
ret
cdq
daa
mov
fisttp
ror
fmul
icebp
int3
add
cmp
dec
xor
stos
sti
mov
xchg
sbb
movs
mov
jae
into
push
jno
hlt
(bad)
fs
pop
push
xchg
fwait
ret
gs
cmp
sbb
lea
inc
mov
mov
outs
lods
mov
inc
icebp
sti
and
adc
stc
stos
pop
ja
out
or
or
addr16
scas
sub
mov
xchg
aaa
cs
addr16
mov
inc
dec
dec
push
std
or
xchg
cmc
call
(bad)
addr16
push
in
sbb
mov
(bad)
sub
stos
and
pop
ja
test
les
mov
push
cmp
mov
adc
aaa
mov
or
mov
pop
mov
inc
xchg
dec
xchg
jp
sbb
lods
dec
sub
retf
inc
jp
pop
mov
jb
bound
push
jg
add
jge
xchg
inc
push
bound
mov
out
sbb
sbb
gs
mov
cld
aas
fstp
movs
ret
jae
in
(bad)
cli
mov
mov
fild
cmp
lahf
fidiv
push
sub
std
xchg
nop
mov
push
dec
jno
les
wbinvd
add
aaa
sub
pop
push
aaa
fiadd
pop
jmp
cmps
ret
mov
mov
bound
sub
test
sbb
inc
pop
gs
cli
icebp
loopne
or
sbb
jge
ins
push
mov
mov
rcr
or
push
xchg
xor
or
sub
inc
mov
rcl
xor
xchg
push
inc
dec
xor
xchg
inc
kmovb
sbb
mov
shl
xchg
sbb
pop
arpl
push
lds
movs
add
pushf
fdivr
out
sub
push
cmp
push
out
jbe
int3
xchg
sahf
add
int
fld
or
xor
xor
jno
stc
hlt
pop
mov
mov
aad
and
or
sbb
push
retf
xor
xor
push
xor
jmp
jmp
or
(bad)
mov
fsubr
scas
cli
add
pop
pop
cmp
cld
cmps
xor
push
lds
jno
sahf
inc
push
adc
pmuludq
and
pop
cdq
pop
(bad)
retf
xor
fs
je
add
dec
aas
push
and
std
fwait
ins
arpl
test
xchg
push
int
xchg
sub
sbb
rol
push
xor
stos
ds
into
in
pop
dec
mov
or
fisttp
(bad)
mul
sub
cmps
push
ins
pop
cdq
enter
push
mov
push
sub
jmp
stc
pop
xlat
push
mov
jmp
daa
pop
xchg
out
fldcw
mov
push
mov
loopne
pusha
fisubr
add
dec
push
test
push
mov
adc
sbb
sub
sar
(bad)
stos
(bad)
adc
ins
add
inc
out
cmps
fidiv
call
mov
imul
repnz
jmp
bound
(bad)
sub
js
stos
ror
scas
sbb
mov
ins
jmp
sahf
test
xor
inc
add
lods
cmps
addr16
add
jne
xor
lahf
(bad)
daa
iret
inc
inc
dec
in
mov
std
mov
mov
fbstp
and
fstp
std
mov
mov
xchg
mov
cmps
or
mov
stc
aaa
mov
sub
mov
(bad)
in
test
push
fdivr
push
dec
movs
fst
xchg
push
jp
inc
(bad)
push
and
sbb
pop
shl
add
xor
or
jno
sbb
fmul
dec
repnz
jmp
pop
mov
push
inc
jnp
mov
rcl
add
movs
sbb
xchg
aad
loopne
bound
dec
xlat
fiadd
dec
mov
sub
out
mov
cmp
or
add
jnp
sbb
rcr
int3
push
fsubr
and
loope
int3
mov
cmps
pop
inc
mov
and
not
push
popf
mov
fisub
test
sti
jle
ss
idiv
cmc
movs
imul
mov
icebp
inc
movs
in
ss
adc
movs
cmp
out
or
xlat
dec
or
ror
dec
mov
sbb
ret
mov
dec
jmp
push
movs
popa
sub
cmps
jl
pushf
mov
or
vrsqrtps
jo
push
aad
call
retf
xchg
gs
(bad)
cmp
add
outs
pop
not
test
mov
sub
in
outs
cwde
enter
jp
in
sbb
loopne
xor
nop
dec
in
test
mov
(bad)
loopne
hlt
fwait
daa
movs
fs
fmul
arpl
sbb
xchg
out
leave
and
(bad)
inc
xchg
dec
xlat
je
mov
mov
rcl
jle
fdivr
mov
jg
or
lea
xchg
inc
dec
xchg
sti
(bad)
cmp
cwde
test
lods
mov
pushf
ja
test
popf
nop
xchg
push
sbb
adc
xchg
add
in
xor
dec
leave
push
outs
sub
mov
lea
daa
out
and
mov
stos
inc
xchg
jmp
fs
push
retf
repz
mov
cmp
lahf
sbb
fwait
js
push
or
out
les
jmp
fstp
aas
jae
mov
adc
push
lods
dec
mov
mov
sub
in
jnp
mov
sub
out
mov
lods
pop
and
sub
test
ds
shl
ret
pusha
and
hlt
cmp
cmp
out
ja
loop
pop
out
inc
sbb
pop
rcl
lods
lea
jne
lods
into
daa
(bad)
or
pop
adc
jns
(bad)
xchg
inc
jp
scas
push
hlt
ror
fistp
ror
push
std
mov
pop
fsubr
movs
adc
dec
call
sbb
ja
fimul
sbb
add
stos
cmps
jge
xor
mov
cmp
adc
jecxz
or
pop
arpl
pop
mov
jmp
add
xchg
fild
xchg
xchg
iret
(bad)
movs
mov
in
jecxz
xchg
push
adc
clc
sbb
(bad)
call
dec
sbb
sub
shl
nop
movs
int3
push
daa
mov
inc
and
lods
jmp
push
xor
mov
cmc
pop
retf
jle
cli
mov
mov
in
pop
test
and
or
xor
test
xchg
scas
sahf
adc
mov
cld
stos
(bad)
or
jae
sub
shr
repnz
pushw
test
jle
push
shl
pusha
push
and
inc
cld
repz
fs
dec
repnz
out
fcmovbe
jp
js
ds
jle
jge
and
daa
inc
and
pop
inc
ret
lock
aas
out
(bad)
pushf
xchg
(bad)
neg
inc
and
int
ror
shr
mov
mov
xchg
pushf
inc
std
or
aaa
stos
jmp
cmp
jge
sahf
and
jg
ins
movs
mov
retf
out
add
in
je
pop
cs
adc
stos
js
stc
cmp
pushf
daa
sbb
xchg
(bad)
shl
mov
movs
cmp
stc
std
jno
repnz
inc
sbb
dec
mov
or
in
jb
add
cmp
sbb
push
adc
sub
mov
jg
std
cdq
sub
adc
imul
xor
pop
add
jmp
jge
cmp
jae
or
lods
ds
(bad)
xor
repnz
lahf
ds
out
cmp
std
aad
xchg
adc
pop
ret
pop
jbe
ret
xchg
test
repnz
lods
test
popf
pop
jmp
loop
mov
add
je
add
out
and
mov
or
(bad)
jg
xor
or
xor
sub
mov
push
jae
fild
ud1
stos
out
cmps
or
sti
push
jle
sbb
mov
push
dec
js
out
push
xchg
mov
jne
aas
dec
ret
sub
ins
jno
out
rol
(bad)
in
dec
xchg
addr16
loopne
cmps
xchg
jne
lds
aam
and
cmp
out
or
fwait
pop
mov
xor
hlt
retf
fdivp
or
leave
ficomp
and
jmp
in
cs
aad
mov
outs
stos
ror
inc
mov
aaa
ins
or
outs
pop
mov
retf
or
mov
cld
frstor
adc
mov
dec
xchg
out
addr16
nop
add
pop
mov
js
and
lea
iret
nop
mov
jl
repnz
das
pop
sub
adc
push
fbstp
jle
and
ret
dec
push
mov
scas
mov
out
gs
xchg
cmp
popa
and
mov
hlt
ret
enter
xor
idiv
loopne
call
add
int
add
mov
stc
xor
into
add
mov
arpl
in
loope
jbe
daa
test
leave
test
aaa
out
pop
in
pushf
mov
or
lods
sar
add
scas
jmp
(bad)
sub
xchg
mov
cwde
enter
out
xchg
xor
ja
call
xchg
outs
and
mov
fwait
mov
fist
int3
ja
adc
movs
fstp
or
and
adc
icebp
xor
mov
mov
mov
fwait
sbb
cmp
jo
mov
ins
imul
(bad)
xchg
data16
mov
jnp
mov
pop
(bad)
mov
pop
adc
mov
js
lea
aaa
dec
or
cmps
(bad)
xchg
es
inc
mov
adc
cdq
(bad)
push
or
test
mov
mov
and
pop
inc
lods
inc
and
push
pusha
imul
nop
rol
ret
add
xor
stos
push
fist
in
pop
adc
cli
cld
jbe
cmps
dec
jg
xchg
cwde
jae
ja
mov
xlat
push
movs
xchg
push
in
into
rol
dec
frstor
and
sbb
jne
or
stos
inc
or
fadd
fst
add
test
pop
xchg
rol
mov
cmp
xor
stos
jns
aad
jbe
int3
ins
or
push
push
inc
adc
movs
jo
and
bound
cli
dec
pop
and
and
outs
shr
add
push
and
adc
lea
mov
push
mov
cmp
mov
mov
mov
dec
cmc
aaa
mov
stos
cmps
shr
pop
sar
lods
fidivr
jle
pop
lahf
loope
push
fiadd
out
call
aas
stos
jmp
popf
mov
into
mov
ds
jns
test
push
sti
(bad)
movs
call
out
call
cwde
mov
sub
sbb
sub
imul
add
push
push
test
xchg
fiadd
movs
ins
mov
dec
std
mov
cmp
scas
xchg
sub
add
adc
mov
sbb
ret
das
ret
int
cwde
pop
fmul
in
bound
add
call
(bad)
push
push
aaa
jmp
dec
dec
(bad)
imul
xchg
pop
sbb
inc
and
xchg
sbb
pop
add
jl
mov
(bad)
adc
shl
aaa
inc
and
or
add
jecxz
pushf
fimul
fucomp
aas
xchg
mov
mov
and
jno
outs
jge
adc
mov
lds
jne
f2xm1
scas
out
mov
into
mov
cdq
xor
jae
push
out
cmps
neg
fwait
out
cmp
jo
mov
sbb
(bad)
sti
in
and
push
push
inc
cmp
cmp
pusha
imul
mov
xchg
ds
je
cmps
cwde
mov
push
push
cli
add
jle
jge
ins
add
es
jae
mov
push
and
sahf
push
getsec
fisub
and
shl
(bad)
retf
fisubr
xor
sub
call
ret
movs
pop
jb
fsubr
pushf
and
sub
push
out
int
cli
jno
cmps
ror
or
push
xor
cmps
or
imul
rol
mov
loop
cmp
inc
movs
push
cmps
fdiv
mov
dec
push
lock
in
pusha
in
es
lods
imul
das
push
fmul
push
imul
aas
iret
(bad)
fst
mov
lahf
loope
popa
mov
or
xor
sti
inc
shl
inc
sub
and
and
lods
xchg
fisubr
repz
jmp
push
mov
fsubr
scas
mov
icebp
fs
fldenv
cmp
cdq
and
idiv
into
dec
aad
or
or
imul
leave
mov
repnz
mov
or
xchg
mov
lock
lods
mov
jge
adc
xchg
loopne
pop
sar
xchg
test
dec
pop
lea
sub
or
rcr
in
or
add
sar
xor
jp
or
inc
ret
lea
cdq
ficomp
mov
cmp
jno
xor
pop
cs
dec
mov
cmp
inc
aad
cmps
xchg
add
in
aad
in
rcr
mov
lock
cwde
sub
adc
test
sti
push
pop
fistp
dec
(bad)
mov
stos
jae
cmps
cmp
test
out
mov
(bad)
std
stos
mov
or
fnstcw
jns
xchg
cli
jmp
scas
in
and
inc
jne
xchg
adc
rcr
(bad)
cs
cmp
loopne
cmc
int
or
test
mov
mov
push
xor
push
scas
scas
dec
ss
cdq
cmp
push
loop
jns
add
je
fstp
dec
fs
hlt
xor
lods
and
fwait
inc
test
push
jg
and
icebp
enter
pop
frstor
add
dec
call
add
xchg
mov
pop
loope
push
retf
ss
pop
movs
popa
stos
jg
sti
inc
jmp
cmp
cmc
popa
mov
mov
scas
clc
adc
lods
cmps
cmps
fwait
retf
xor
bound
jne
push
inc
or
out
je
pop
scas
test
push
pop
mov
into
and
xchg
movs
out
hlt
in
pop
hlt
or
mov
addr16
or
cmps
add
stos
mov
xchg
and
cwde
lods
aam
dec
js
mov
rcl
cmp
popa
fprem1
jmp
inc
sbb
xor
jb
dec
sub
or
ror
clc
loop
(bad)
scas
call
mov
dec
adc
or
jnp
daa
inc
ins
fs
pop
test
shl
add
mov
adc
or
fld
fldenv
out
cmp
push
jmp
jecxz
das
(bad)
in
mov
or
mov
(bad)
pop
mov
movs
sub
fwait
sub
stos
jle
sbb
repnz
push
test
cdq
aas
add
aas
stc
mov
xlat
imul
cmp
inc
dec
dec
data16
jb
sub
cmp
mov
lock
adc
sar
jnp
add
leave
push
nop
mov
push
jns
loop
fdiv
mov
or
cmc
loop
add
sub
jmp
push
iret
xchg
ret
pusha
and
mov
rcl
push
loop
icebp
ja
pop
push
cmps
in
js
fisubr
enter
daa
pusha
mov
into
shr
push
movs
add
stos
jb
add
xchg
adc
adc
das
dec
and
xchg
inc
cmp
out
mov
test
fmul
jbe
ret
shl
inc
sar
int
out
into
mov
(bad)
push
cmp
push
push
adc
jle
cmps
xchg
rcl
repnz
mov
or
adc
xchg
mov
(bad)
repnz
daa
pop
movs
or
les
push
rcr
cld
loop
xlat
or
dec
scas
xchg
outs
mov
pop
push
loop
out
cli
shl
test
inc
ret
cmps
mov
inc
push
les
neg
daa
sti
and
add
fcom
stos
push
sbb
fstp
jns
inc
xor
fld
sbb
mov
pop
mov
add
(bad)
mov
and
or
xor
jbe
cmps
mov
xor
pushf
and
add
jae
outs
mov
sub
icebp
std
cmp
in
and
pop
popf
nop
or
sub
mov
ds
cmps
retf
loopne
cmps
lods
cli
xchg
dec
in
adc
mov
bound
arpl
jg
sbb
xor
adc
ins
or
cmc
dec
(bad)
shr
jbe
sub
pop
or
(bad)
fisttp
jg
imul
push
jecxz
mov
ins
inc
pop
jbe
loope
sub
xor
sbb
add
(bad)
pop
aad
scas
mov
sbb
xor
mov
bound
and
cdq
clc
ins
aaa
leave
dec
jbe
jb
sub
(bad)
fstp
jmp
(bad)
cmc
dec
push
inc
cmps
stos
adc
pop
cmp
or
cld
jg
xchg
(bad)
loop
retf
jne
add
push
bound
or
sub
jae
pusha
in
jmp
xor
lods
pop
lea
loope
jp
mov
rol
lods
mov
(bad)
and
cdq
fs
mov
jmp
loop
inc
imul
imul
push
mov
adc
dec
scas
xchg
xchg
push
icebp
ss
jge
shl
sbb
fdivr
fistp
repnz
retf
arpl
sbb
retf
cmps
(bad)
fcom
mov
pop
cmp
lods
out
mov
push
push
arpl
imul
call
dec
dec
dec
push
movs
sbb
cmp
mov
rol
pop
mov
stos
push
or
repnz
xchg
cmp
std
cmps
cdq
(bad)
cmc
rcr
jle
pushf
inc
out
sub
pop
pop
inc
cmp
in
xor
les
dec
mov
sbb
cmp
mov
out
inc
fwait
test
test
xor
jne
stos
or
stos
cmp
add
adc
hlt
aad
xor
inc
out
int3
pop
jecxz
ja
and
cmp
push
dec
(bad)
les
and
and
imul
push
outs
inc
xchg
ins
lahf
outs
rcl
and
mov
mov
stos
cwde
es
or
xchg
add
bound
cli
or
mov
leave
push
xor
cmps
mov
popf
adc
mov
mov
xchg
cmp
hlt
and
jno
out
lock
fdiv
dec
in
jle
inc
dec
das
xor
in
push
push
add
aaa
mov
mov
pop
outs
sub
jne
shl
cmp
inc
stos
aad
out
add
outs
jge
inc
gs
push
add
adc
call
sbb
xchg
loopne
mov
mov
call
mov
cmp
in
movs
lods
mov
and
mov
adc
call
enter
sti
cmp
cmp
mov
mov
outs
stos
mov
aaa
adc
std
(bad)
jp
mul
jno
xchg
jl
aad
mov
jge
test
jnp
xchg
stc
cmps
cmps
cmp
and
adc
icebp
in
cmps
push
push
adc
push
inc
(bad)
fwait
(bad)
pop
arpl
mov
pop
stos
and
lds
rol
lods
cmps
rol
fnsave
in
xor
adc
sti
clc
in
mov
add
push
adc
dec
stos
sbb
rcl
rol
aaa
pop
cmp
shl
inc
mov
cli
mov
lock
iret
sbb
mov
pop
mov
jae
jno
stos
imul
cmp
xchg
dec
jmp
js
xor
pusha
frstor
or
movs
outs
clc
shl
add
loopne
push
adc
ror
in
stc
outs
add
and
mov
out
xor
lods
dec
les
push
inc
mov
xor
xlat
xor
inc
ror
push
xchg
call
fnstenv
ror
aaa
ss
pop
add
stos
in
sub
add
(bad)
(bad)
mov
arpl
data16
jl
mov
push
mov
movs
adc
(bad)
jmp
push
xchg
test
sub
lahf
imul
dec
icebp
aas
jg
sub
dec
jne
mov
and
or
aam
shl
jle
inc
sbb
mov
jecxz
mov
push
lock
call
fs
aaa
push
adc
mov
or
stos
sub
retf
mov
jbe
adc
addr16
add
stc
imul
inc
mov
adc
in
mov
(bad)
lods
dec
or
mov
and
push
sub
mov
movs
sub
mov
cmc
int3
push
push
dec
loopne
sub
fstp
into
mov
pop
repz
int
sub
std
test
popa
je
lods
jp
out
mov
mov
ss
lods
pop
ins
jo
nop
data16
pusha
dec
and
pop
icebp
dec
add
and
add
and
imul
aaa
pop
xor
jmp
sahf
jmp
shl
mov
mov
inc
shl
mov
sbb
or
mov
sub
jp
sub
jl
mov
and
jmp
stc
inc
aam
mov
xchg
std
leave
cwde
into
aad
icebp
mov
mov
mov
dec
xlat
pop
or
das
dec
adc
cmps
adc
inc
or
xor
adc
push
pop
push
les
inc
adc
mov
push
iret
(bad)
xor
retf
sar
jle
jne
mov
fbstp
and
scas
into
sbb
mov
mov
jo
ds
jae
add
mov
call
and
xor
mov
sar
mov
xor
inc
push
nop
rol
push
cmps
(bad)
jl
xchg
mov
pop
jo
fs
pop
push
mov
sbb
pop
sbb
adc
or
call
and
movs
outs
lods
pop
push
sbb
movs
dec
in
loop
jns
inc
push
clc
push
inc
jg
in
aam
xchg
or
lods
xchg
pop
sbb
out
shl
push
push
push
sub
les
inc
sahf
mov
jg
mov
enter
mov
jecxz
push
lods
leave
call
std
lahf
ret
mov
fld
(bad)
fld
mov
cmps
(bad)
dec
jnp
ret
xchg
retf
sbb
lods
mov
jne
ins
pop
dec
push
mov
dec
xchg
call
fisttp
popf
repz
pmaxub
xlat
hlt
lods
rcl
dec
sbb
cmp
xchg
or
jbe
call
icebp
pop
sti
cli
outs
(bad)
jae
iret
js
aam
retf
aaa
mov
or
dec
loope
mov
sbb
pop
inc
fcom
mov
pop
push
imul
add
push
cmp
mov
sahf
leave
pushf
mov
pop
add
test
and
shr
cli
arpl
retf
jp
sahf
call
mul
lock
dec
sub
sar
arpl
push
inc
arpl
mov
(bad)
mov
test
sub
mov
into
mov
gs
adc
popf
lea
push
jecxz
ja
loope
lds
xchg
dec
cs
add
icebp
push
inc
call
xchg
cmp
int3
sub
cli
mov
(bad)
sub
push
push
not
shl
out
dec
jecxz
and
es
mov
cmp
fdivr
jle
aam
sahf
xor
neg
pop
mov
lock
pop
jg
(bad)
mov
mov
xor
popa
sbb
fisub
aad
sahf
ins
jo
(bad)
and
cmp
xlat
push
pop
stos
and
push
(bad)
fimul
imul
aam
gs
sub
jmp
jmp
movs
fcmovbe
xor
and
test
jg
lds
lea
dec
test
test
fwait
cli
cmp
outs
out
jno
xlat
mov
cld
lahf
pop
sbb
pop
aad
imul
int
xchg
pop
push
xchg
lods
adc
leave
gs
dec
shl
movs
xor
xlat
cdq
mov
out
call
xor
int3
mov
jbe
cmps
hlt
test
xor
jp
mov
mul
jae
mov
mov
mov
ret
push
or
pop
mov
clc
loope
sbb
fimul
retf
xchg
rcl
dec
scas
cmps
dec
mov
fmul
clc
add
in
sbb
(bad)
into
nop
adc
in
lahf
mov
inc
fadd
ror
lods
fs
enter
out
xchg
je
lock
add
dec
jp
pop
cmps
aam
adc
mov
adc
adc
adc
mov
test
dec
cs
cli
cmps
dec
neg
fs
pusha
push
scas
mov
xchg
sbb
daa
jmp
mov
sub
icebp
mov
inc
sti
rcl
adc
cli
push
rol
loope
mov
add
iret
sar
sbb
mov
xchg
dec
jecxz
stos
xor
hlt
xchg
cmp
xor
mov
lea
stos
add
or
jecxz
ja
jge
js
aad
jno
fidiv
aad
and
call
test
adc
cmps
mov
mov
lds
popa
sar
in
adc
ret
stos
inc
dec
or
(bad)
popa
pop
fbld
pop
mov
cld
pop
(bad)
stos
dec
inc
mov
push
sahf
in
pusha
or
out
adc
sahf
pop
xchg
jno
pop
fld
xor
or
neg
call
sub
jge
sub
xor
push
sub
repnz
push
into
outs
jp
dec
imul
cwde
out
xor
jle
enter
adc
and
out
fcomi
push
sbb
push
int3
sub
popf
dec
shr
mov
jb
loope
xlat
hlt
mov
xchg
xor
ror
lea
pusha
ins
aaa
iret
fidivr
push
sbb
rol
jns
sbb
dec
lahf
pop
mov
test
or
shr
or
fnsave
sub
pop
mov
sar
lods
enter
pop
and
std
pop
adc
outs
sub
dec
mov
stos
cwde
cmps
push
imul
jle
xchg
jns
mov
adc
scas
and
das
adc
xchg
or
clc
rcl
shl
mov
pop
dec
(bad)
lock
xor
js
pop
sbb
outs
jg
inc
cmp
mov
jnp
pop
lods
or
into
cdq
int
mov
clc
sti
addr16
fimul
retf
in
pop
or
pop
push
shl
test
das
jnp
aad
push
pop
xchg
pop
dec
dec
sar
xchg
dec
sub
addr16
ss
inc
mov
ins
fcom
xor
addr16
xlat
xchg
push
mov
or
in
ja
pop
dec
loop
stos
mov
or
dec
adc
sub
mov
and
xchg
test
test
dec
addr16
pop
or
sahf
sub
jmp
mov
retf
push
fcomp
or
sub
repz
je
scas
cli
sbb
std
(bad)
jle
cdq
les
jecxz
dec
xchg
mov
inc
repz
mov
mov
cmovge
out
lds
ins
movs
popf
xor
ret
mov
lahf
pop
mov
cli
mov
dec
sub
jnp
adc
inc
not
retf
stos
repz
imul
dec
jno
nop
jg
fcmovnb
inc
pop
pusha
imul
in
xlat
dec
in
pop
mov
sar
addr16
add
or
cmp
(bad)
call
xchg
xor
popf
mov
push
icebp
not
xor
jo
rcl
mov
cmp
rcl
adc
iret
pushf
pop
or
pop
fiadd
jmp
dec
aaa
bound
movs
dec
cmp
das
imul
data16
mov
mov
push
cli
xor
imul
and
adc
stos
jmp
ret
out
ja
aad
xchg
imul
push
and
sub
les
fnstenv
rol
jle
xlat
mov
std
mov
lods
je
xor
shl
push
lea
jmp
icebp
push
pop
jl
pop
retf
sub
loopne
ror
rcr
push
les
movs
add
dec
call
ret
jmp
jbe
repz
test
mov
repnz
add
hlt
enter
push
loopne
(bad)
aad
je
shl
ins
push
or
xchg
mov
outs
mov
pop
retf
addr16
dec
push
pop
sbb
xor
jae
sbb
fs
mov
js
mov
mov
push
ins
out
jl
pop
pop
and
xchg
sub
fidivr
repnz
xchg
mov
loope
je
retf
hlt
fstp
add
mov
out
jb
add
sar
jbe
and
sub
mov
dec
push
out
imul
(bad)
je
jmp
in
fdivr
dec
or
and
aam
(bad)
mov
(bad)
jne
push
mov
loopne
out
push
and
sbb
stos
and
and
push
jp
fst
pop
push
add
jno
inc
jmp
rol
fsubr
fmul
call
ins
and
call
in
sbb
adc
shl
dec
lods
push
out
or
jmp
jge
mov
imul
imul
lea
or
xor
xchg
and
dec
jge
xchg
test
sahf
clc
stos
add
jle
es
les
lahf
cwde
add
mov
jg
and
jns
dec
or
cwde
das
mov
not
push
and
data16
cmp
xchg
jecxz
jno
iret
mov
adc
adc
(bad)
out
and
les
dec
jno
fadd
sub
push
in
mov
bnd
cmp
in
or
pop
scas
mov
mov
dec
dec
adc
add
outs
sbb
ds
pop
pop
push
mov
jp
ficomp
sti
mov
push
pop
jmp
imul
and
sar
push
test
lods
inc
sub
js
mov
sub
test
xchg
call
cld
aas
pop
vmovupd
bound
aas
out
mov
pop
or
leave
jne
mov
mov
out
mov
mov
imul
mov
mov
xchg
xchg
jne
pushf
cwde
add
add
stos
in
fimul
ret
aas
loop
jecxz
sbb
xchg
imul
jmp
push
into
mov
xor
inc
movs
lods
imul
std
test
push
pop
mov
lock
xchg
sbb
movs
cmp
fsubr
adc
mov
das
mov
shr
or
inc
es
mov
fcom
or
add
fild
mov
icebp
xchg
or
sub
loopne
inc
arpl
fiadd
test
jns
repz
mov
or
dec
or
mov
pushf
push
xor
mov
sahf
mov
pop
ins
int3
add
inc
imul
xor
mov
mov
lds
jmp
lea
xchg
les
js
adc
mov
push
ret
push
and
cmp
xchg
movs
push
fild
push
or
scas
cmc
lods
dec
cmp
xchg
test
xor
in
fmul
mov
inc
stos
mov
aas
pop
cmp
mov
sbb
sbb
jb
dec
shl
or
rcl
mov
and
fs
(bad)
movs
push
dec
test
les
push
les
xor
std
pop
test
push
push
cs
push
jle
fs
inc
mov
pop
inc
mov
lea
jg
dec
movs
(bad)
cmp
jle
stos
push
mov
add
pop
ds
sbb
mov
enter
jecxz
stos
mov
sbb
daa
pop
xchg
xlat
xor
pop
cmp
adc
sbb
dec
adc
in
adc
jo
nop
int
into
jp
mov
daa
cmp
jbe
pop
pop
add
pop
cs
pop
neg
jne
sub
les
adc
sub
dec
stc
pop
cmps
sub
add
pusha
arpl
add
fisubr
(bad)
test
shl
in
jno
push
sbb
aam
xor
add
ret
mov
pusha
mov
imul
pop
cmp
and
sbb
cli
adc
out
cwde
dec
pushf
dec
push
pop
lock
dec
sahf
fwait
cmp
sti
lods
hlt
mov
js
sub
in
mov
xchg
jle
daa
and
sub
(bad)
in
and
loopne
inc
nop
adc
(bad)
cmp
scas
nop
mov
mul
stos
jmp
sub
jg
sti
lahf
out
je
jno
push
or
cmp
cmovns
(bad)
icebp
in
adc
in
and
xor
mov
shl
adc
movs
sbb
mov
mov
aam
mul
sub
cmp
push
cmp
sbb
mov
mov
popa
cmps
fwait
cmp
ss
adc
push
mov
sbb
aad
push
inc
xlat
in
mov
mov
loope
xor
and
mov
aad
xor
mov
jecxz
push
mov
(bad)
jae
mov
loop
fild
push
jecxz
add
adc
retf
test
in
inc
jnp
push
data16
adc
xor
dec
test
and
inc
mov
sub
inc
add
push
(bad)
out
idiv
sub
mov
sub
adc
out
dec
mov
je
sbb
jge
mov
sub
dec
int3
arpl
or
inc
nop
mov
push
sbb
push
scas
inc
imul
cmp
adc
adc
popf
out
mov
jno
pop
mov
out
xor
jmp
and
in
fistp
mov
add
ins
mov
popf
stos
out
adc
vpsubusw
popf
test
mov
jg
imul
and
add
sti
daa
mov
sbb
mov
adc
sar
push
aam
xlat
sub
fst
test
fcom
ins
lods
fidiv
gs
fistp
dec
sbb
or
sub
jle
adc
xchg
retf
push
xchg
(bad)
test
xor
or
xor
dec
xor
repz
dec
nop
and
out
popa
iret
imul
nop
ret
or
addr16
add
pop
push
or
test
cdq
scas
lea
sub
in
xchg
inc
lea
xor
lods
mov
adc
push
mov
dec
movs
xchg
aas
add
ret
adc
out
cld
shl
or
push
add
mov
stc
shl
sub
int3
scas
mov
cdq
xor
lods
xor
pop
mov
pop
retf
or
inc
jbe
push
inc
das
lds
pop
push
dec
(bad)
jg
dec
cdq
sti
xor
jle
jnp
dec
xchg
arpl
enter
inc
pop
mov
ds
and
and
mov
in
enter
push
or
loop
jnp
jmp
mov
adc
pop
mov
jge
cwde
cmps
fadd
inc
jbe
adc
mov
retf
push
xor
mov
cli
adc
add
scas
pop
retf
jecxz
fisubr
inc
inc
iret
push
jp
fnstsw
test
dec
inc
inc
dec
ins
jne
or
rcl
pop
rcr
pushf
(bad)
js
mov
xchg
je
mov
test
loop
(bad)
push
fadd
xchg
data16
int3
retf
ret
xchg
dec
imul
out
mov
jnp
push
ficomp
sbb
inc
jle
sub
xchg
inc
in
sub
(bad)
loope
lahf
lds
into
mov
mov
test
(bad)
jle
mov
fst
addr16
retf
int
ins
and
and
xchg
scas
jl
fisttp
inc
mov
jnp
and
pop
outs
dec
inc
or
mov
push
adc
popa
(bad)
(bad)
ret
in
cli
dec
stc
inc
stc
shl
sbb
test
or
(bad)
data16
jne
fwait
push
jp
je
push
stos
in
jmp
xchg
inc
ins
rcl
jg
sbb
cmp
mov
adc
xchg
mov
mov
loop
ret
or
fwait
call
push
mov
lods
dec
push
(bad)
arpl
mov
mov
mov
xor
gs
pop
mov
(bad)
xchg
data16
arpl
pop
push
nop
add
xor
mov
(bad)
loope
mov
pop
outs
imul
test
xchg
nop
pop
push
add
mov
lods
std
std
js
adc
xchg
stos
frstor
scas
into
retf
outs
leavew
jbe
(bad)
cmps
pop
inc
ds
cmps
dec
retf
ror
cmp
xchg
outs
push
mov
fiadd
iret
dec
fidiv
xor
leave
jo
mov
das
mov
cwde
iret
pop
scas
sbb
ds
(bad)
dec
xchg
adc
(bad)
popf
pop
inc
mov
cmps
retf
mov
xor
sbb
push
cmp
mov
popa
inc
sbb
and
lods
(bad)
cmps
sub
mov
mov
repz
test
aaa
jns
ins
mov
and
adc
cmp
push
add
cmp
hlt
enterw
dec
sub
ret
inc
cmp
dec
cs
data16
dec
js
sbb
or
clc
push
ficomp
jge
xor
hlt
pop
adc
in
inc
fdivrp
inc
daa
imul
mov
xor
ffree
retf
in
pop
mov
jp
cmp
out
pop
in
scas
in
and
jno
or
popf
inc
jb
enter
cmp
lock
jmp
inc
pop
pop
loopne
retf
xor
repz
xor
xchg
fs
call
cmp
xchg
sar
xchg
dec
aas
jmp
push
lahf
mov
sub
add
pushf
inc
pop
dec
popf
jle
and
outs
add
das
dec
(bad)
pop
xor
int
cmp
mov
or
cmp
stos
call
add
div
or
and
out
push
sub
cld
mov
leave
cmp
mov
mov
mov
cs
fnsave
into
jg
mov
fcom
xlat
add
ins
cdq
add
fst
sbb
mov
add
enter
push
ins
cs
fidivr
pop
add
xchg
(bad)
fmul
fist
dec
cmps
aad
idiv
clc
repnz
jb
pushf
outs
jle
or
(bad)
(bad)
cld
ins
popf
push
sahf
ins
je
and
xchg
out
or
shr
cmp
cmps
lds
in
mov
mov
jne
pop
and
cmp
outs
sub
lock
dec
outs
xchg
xor
mov
in
inc
imul
dec
sub
sbb
mul
sub
mov
or
xchg
jns
clc
mov
mov
cdq
sub
shr
adc
mov
lea
pop
dec
retf
or
or
jb
push
cli
and
pop
fild
hlt
add
adc
div
pop
fcom
mov
cmp
mov
call
mov
dec
push
cli
push
pop
mov
cmc
xchg
mov
cmp
and
xchg
jno
(bad)
sbb
jmp
xor
ins
sub
jb
jge
jno
pop
les
push
jmp
push
test
fstp
and
push
add
idiv
xchg
repnz
sbb
je
in
daa
rcr
xchg
iret
call
lods
sub
pop
pop
pop
cmp
or
cwde
loope
shl
in
pop
jecxz
mov
sbb
mov
fs
xor
jp
push
call
mov
adc
icebp
call
hlt
mov
and
imul
test
or
fnstsw
in
mov
jbe
xor
int3
js
pop
std
add
jp
xchg
pop
mov
cmp
sub
adc
mov
mov
mov
sub
xchg
jle
and
pop
adc
scas
icebp
stos
mov
mov
sub
movs
xor
jmp
pop
or
dec
pop
dec
mov
mov
mov
(bad)
xchg
ret
in
loopne
mov
int3
fimul
jmp
adc
and
adc
sbb
fcomp
dec
sub
outs
xchg
sbb
xor
in
inc
repz
ret
mov
and
cmp
xor
pop
mov
jns
push
jnp
pusha
(bad)
nop
mov
aaa
push
(bad)
mov
test
or
jle
sahf
inc
push
push
mov
lock
or
call
jns
test
xor
ret
fwait
nop
cmp
pop
xchg
adc
sbb
adc
mov
mov
jns
ret
sub
lods
int
repz
loop
dec
fistp
pop
add
jbe
sbb
jbe
rcr
in
jmp
dec
(bad)
mov
jecxz
cwde
mov
sahf
xor
test
test
mov
das
stc
xor
iret
add
ins
sub
add
shl
sbb
push
cmp
shl
mov
dec
popa
xchg
xlat
adc
lods
sub
test
xor
mov
retf
xchg
scas
add
dec
call
jmp
retf
pop
mov
test
fwait
jmp
cmp
mov
push
jne
push
pop
fild
xor
nop
cmp
es
pop
mov
(bad)
jecxz
mov
or
mov
fld
out
jns
xor
fiadd
pop
dec
mov
pusha
dec
jecxz
test
shl
and
mov
inc
(bad)
and
xor
or
push
enter
cmp
add
sub
lods
sbb
sbb
add
or
pop
ret
add
jecxz
and
sbb
add
jmp
(bad)
cmp
mov
in
jge
mov
push
gs
jecxz
pop
or
or
mov
mov
lods
fdiv
je
rcr
and
mov
and
pushf
mov
and
hlt
in
and
fsub
inc
pop
mov
loop
fldenv
push
dec
mov
jo
cmp
add
mul
cmps
scas
call
sbb
imul
addr16
adc
lahf
jnp
hlt
or
in
cmp
dec
das
cdq
cmp
sbb
fs
cmp
pop
jb
(bad)
fldenv
push
lods
xor
and
cdq
mov
(bad)
outs
fmul
call
jecxz
fimul
push
pop
xor
in
cld
pop
adc
mov
and
sahf
sub
mov
sub
ficom
fld
enter
mov
cmp
mov
xchg
inc
scas
pop
or
dec
pop
and
stos
das
dec
(bad)
jnp
pushf
mov
cmps
retf
add
jns
jnp
push
add
loopne
pusha
icebp
mov
jno
inc
inc
int3
ins
push
aad
ret
dec
pushf
imul
loopne
mov
dec
mov
icebp
scas
sbb
sub
and
(bad)
xchg
inc
and
sbb
(bad)
shr
jb
cld
cmps
in
or
adc
or
push
dec
fisub
push
jmp
leave
xor
mov
rcl
xor
mov
push
jmp
mov
inc
push
out
cmp
ins
rcl
push
ficom
xchg
fyl2xp1
jns
adc
and
gs
jnp
sahf
add
xchg
xchg
sbb
pop
dec
scas
or
add
push
jl
mov
and
fisub
push
ins
pop
cmp
aas
mov
mov
je
jp
leave
mov
(bad)
repz
loope
adc
cmp
pop
pop
add
fdivr
sbb
in
adc
push
jnp
outs
loopne
outs
dec
or
lahf
jle
jae
xchg
(bad)
hlt
sbb
mov
lahf
pop
in
nop
jmp
rcr
xlat
fs
or
pop
dec
(bad)
fucom
mov
movs
retf
mov
sbb
sbb
cmp
pop
mov
ss
and
inc
sub
sub
test
in
mov
ret
pop
inc
test
sar
pop
arpl
enter
movs
ins
xlat
aad
push
cmp
lds
fcom
xor
sub
mov
mov
test
dec
nop
push
sub
or
push
mov
xchg
mov
push
mov
dec
pop
inc
mov
add
outs
fdiv
mov
sub
lods
(bad)
mov
cli
or
cmps
or
sub
adc
cld
and
push
js
popf
dec
cmc
mov
jo
mov
push
ret
mov
and
rcl
lock
dec
and
and
iret
push
mov
es
ret
pop
popf
mov
or
push
sbb
xor
xchg
or
mov
mov
inc
xor
es
jmp
sub
or
push
sub
jmp
cmp
sub
aad
out
xchg
dec
clc
fimul
es
ss
int
je
sti
jae
outs
mov
or
add
lods
mov
mov
scas
jge
push
mov
xchg
hlt
inc
aad
pusha
sbb
xor
ret
mov
xchg
mov
xlat
test
mov
inc
add
mov
inc
aaa
jae
inc
ror
outs
push
or
mov
pop
mov
push
loopne
lods
fiadd
shl
jno
pop
pop
int3
scas
je
dec
ins
xchg
dec
arpl
dec
push
(bad)
jp
and
and
adc
or
leave
add
or
xor
and
inc
add
mov
repnz
sbb
ja
imul
sub
aad
rcl
mov
sbb
enter
or
fld
dec
cmp
mul
daa
in
xor
sti
and
sbb
or
movs
pop
jmp
or
push
test
retf
sbb
mov
xor
mov
inc
add
pop
add
sbb
jb
push
(bad)
shl
jecxz
pop
or
pop
imul
push
addr16
(bad)
xchg
cmp
or
std
xchg
out
xchg
daa
mov
push
cdq
cmp
pop
xchg
mov
mov
cmps
push
bswap
cmp
dec
adc
rol
rcl
cmp
adc
xchg
cmp
jg
jmp
fild
push
dec
pop
sahf
add
popf
xchg
pop
call
iret
pop
pop
sub
popa
movs
outs
push
pop
div
outs
dec
aad
adc
add
jo
mov
movs
add
out
pop
arpl
adc
xor
xchg
push
push
outs
out
mov
dec
repnz
cli
nop
mov
sbb
mov
setge
mov
int3
push
loop
pop
call
jmp
out
in
push
(bad)
sti
or
outs
xchg
aad
dec
pop
ror
jno
xchg
scas
in
push
icebp
sbb
fsubr
push
(bad)
adc
dec
repz
or
scas
mov
jecxz
dec
popa
xor
fisttp
jge
sbb
scas
xchg
movs
push
or
push
mov
jmp
mov
icebp
aad
jo
mov
sub
sbb
mov
or
ret
movs
pop
aam
stos
in
out
push
push
loop
mov
sub
push
xchg
shl
(bad)
addr16
ins
out
inc
in
lahf
in
and
ins
jp
test
movs
lods
popa
(bad)
in
mov
xchg
std
add
adc
add
jmp
or
add
movs
aad
mov
adc
dec
cmp
(bad)
pop
sbb
jbe
mov
vminps
mov
inc
retf
cli
jo
fwait
jbe
jno
dec
call
mov
adc
inc
jmp
fsubr
ss
push
test
out
clc
hlt
rcr
sbb
sub
sahf
adc
pop
jns
loope
mov
dec
mov
and
pop
cmp
test
push
inc
mov
xor
pop
sub
jle
(bad)
lock
pushf
pop
out
fs
mov
jg
ja
ins
pop
or
push
or
mov
add
push
loop
mov
mov
inc
test
cmp
test
push
imul
jmp
data16
call
xchg
out
sub
lods
ja
sub
sub
jmp
push
aaa
adc
xchg
cs
mov
dec
lds
fdiv
mov
push
enter
dec
sar
xchg
sti
dec
xlat
(bad)
cld
and
sub
xchg
in
mov
in
jb
push
loopne
jo
ins
cmp
dec
mov
test
add
or
xchg
ins
lahf
sub
cli
in
sbb
outs
fisttp
dec
push
aam
sbb
push
inc
jnp
and
shr
std
pop
int3
rcl
mov
mov
dec
inc
adc
or
inc
repz
(bad)
inc
loop
xor
sub
ins
(bad)
repnz
dec
into
(bad)
popa
pusha
sahf
xor
pusha
xor
sbb
in
inc
arpl
ret
gs
test
es
and
aaa
inc
jnp
dec
retf
add
data16
sar
cmp
repz
call
mov
jnp
cmps
in
push
xchg
push
stc
pop
rol
aam
inc
bound
sbb
pop
jbe
jns
sub
das
lds
jo
hlt
and
test
xor
jmp
ins
mov
lock
retf
out
and
shl
ret
sbb
jmp
out
mov
lods
adc
(bad)
mov
cdq
jae
adc
scas
nop
or
xchg
jg
mov
sub
xchg
and
pusha
jno
mov
push
pop
ss
mov
test
mov
retf
push
mov
jmp
addr16
mov
es
out
mov
dec
jns
out
adc
and
je
aad
mov
push
aam
xchg
das
arpl
dec
pop
ds
mov
cmps
stos
test
or
lea
inc
jo
stos
mov
pop
mov
mov
mov
outs
adc
jb
imul
scas
aam
adc
int
ror
jnp
adc
inc
inc
fdivr
adc
jmp
pop
mov
mov
jae
in
adc
call
(bad)
call
(bad)
push
cwde
ins
je
stos
mov
and
fistp
push
test
jb
bound
daa
jo
or
clc
adc
in
dec
mov
jecxz
int
(bad)
(bad)
mov
sub
leave
repz
data16
xlat
fidiv
imul
loopne
loopne
stos
jle
in
sub
shr
fisttp
push
xchg
movs
cmp
test
push
int3
scas
aaa
sbb
sub
mov
push
daa
enter
sub
push
and
(bad)
jmp
cmp
aam
and
adc
sbb
and
mov
xor
or
rol
dec
pop
mov
add
inc
test
inc
push
xor
jnp
xor
aas
ret
pop
jl
push
das
dec
cmp
cs
jno
clc
out
mov
shl
arpl
inc
fdivr
cmp
pop
in
mov
add
sbb
dec
add
pop
out
shl
sbb
out
xor
cmp
or
jecxz
fild
inc
and
inc
cwde
lods
sbb
mov
lock
fstp
out
xchg
out
add
and
mov
pusha
cmps
mov
mov
xor
gs
gs
div
call
lock
mov
loop
push
jl
mov
ja
pop
data16
mov
addr16
sar
xchg
fisttp
mov
mov
rcl
lahf
xlat
jmp
out
mov
adc
div
out
ret
icebp
nop/reserved
push
cmp
pop
or
push
xor
ret
add
and
jae
out
mov
test
pop
sbb
test
lea
lahf
pop
and
dec
push
xchg
fiadd
mov
and
rcl
dec
mov
cmps
mov
shl
mov
js
addr16
cld
(bad)
mul
icebp
sub
lods
sub
lods
pop
xchg
xor
cwde
sbb
imul
xlat
outs
push
adc
cli
xor
inc
gs
bound
sub
idiv
test
sbb
jbe
mov
xor
jnp
mov
aaa
dec
addr16
xchg
push
xchg
ret
inc
jmp
cmps
int
loope
sub
imul
mov
js
ins
sbb
jg
fsub
sar
call
fcom
xchg
in
nop
adc
dec
movs
push
jnp
cmp
ja
aad
(bad)
test
jno
hlt
cmps
(bad)
push
pushf
fmul
xor
and
dec
jle
pop
sbb
loope
inc
scas
sub
dec
shl
inc
mov
js
test
adc
movs
test
jbe
inc
lods
pushf
repz
mov
call
shl
std
imul
sbb
inc
ss
ins
mov
hlt
jecxz
mov
cmps
inc
call
dec
fs
push
lds
or
push
nop
adc
and
call
cmp
data16
pop
cmp
ins
xor
mov
mov
lock
pusha
add
cmp
adc
cmp
in
inc
sub
dec
rol
cdq
mov
xchg
cs
outs
xor
jp
and
mov
imul
stos
push
cmp
(bad)
sti
sub
iret
test
loopne
pushf
lock
dec
push
xchg
pop
and
mov
inc
rcr
or
fwait
rcl
popa
xchg
in
pop
leave
push
test
outs
jp
pop
lock
jp
inc
and
xchg
mov
xchg
push
rol
popf
scas
loop
loopne
js
jp
jns
outs
into
in
mov
lds
ror
repz
xor
pop
retf
adc
mov
pop
cmp
stc
mov
loope
sub
xor
shl
fsubr
arpl
test
(bad)
mov
sbb
lock
sub
dec
sub
std
leave
sub
sbb
cmp
(bad)
mov
add
daa
dec
xchg
xchg
mov
or
mov
sub
pop
fld
nop
cmp
in
(bad)
pop
cmp
(bad)
ficom
cli
ds
cmps
cs
cs
cli
push
adc
jbe
popa
xchg
inc
arpl
or
jns
and
ds
jge
add
push
stos
cmc
add
jae
and
lods
fwait
mov
jo
popa
jl
mov
shr
pand
pop
mov
movs
sti
imul
les
xchg
pop
pop
fistp
rol
sar
inc
add
pop
mov
fnstsw
fst
sar
add
jb
stos
icebp
mov
jecxz
jecxz
xor
inc
nop
cmp
repz
mov
mov
ret
add
push
retf
sbb
inc
sbb
dec
jmp
int3
cmp
mov
inc
fidivr
arpl
push
pop
xor
dec
ret
div
enter
xlat
push
xor
jmp
mov
aas
(bad)
push
jp
jb
dec
in
cs
sub
sub
popf
int3
mov
ds
ja
imul
lods
or
jmp
aad
sbb
mov
sub
bound
retf
jle
inc
and
jns
sub
aad
and
test
fwait
scas
mov
xchg
addr16
sahf
imul
gs
(bad)
hlt
test
cld
int
cmc
dec
sbb
fnstcw
in
mov
or
mov
in
jmp
mov
js
xchg
fucomip
push
(bad)
hlt
imul
rcr
cs
jno
lods
fwait
jecxz
xchg
ret
xchg
rep
(bad)
stos
pop
sub
pop
fnstcw
cmp
fsub
sbb
sub
mov
cmp
loopne
cli
xor
fdivr
add
pop
loopne
dec
mov
dec
sub
ret
scas
lods
or
out
jb
cmp
aad
xchg
aam
sub
rcr
rcr
popa
and
(bad)
outs
sbb
ror
mov
sbb
bnd
cwde
mov
push
mov
loop
xor
sbb
cdq
fs
mov
mov
jl
ins
mov
push
jl
in
pop
mov
xor
add
dec
ja
stc
les
xchg
(bad)
shr
sbb
fcmovnb
cmp
sbb
call
mov
push
imul
mov
push
imul
sub
fwait
movs
mov
cmp
pop
mov
mov
xor
call
les
or
mov
cdq
loope
and
mov
inc
inc
inc
mov
dec
fimul
outs
pop
scas
xchg
popa
pop
rcr
imul
pop
call
mov
inc
jle
add
(bad)
xchg
adc
push
jp
leave
stc
push
add
int
dec
xor
add
scas
jo
push
aaa
mov
push
shl
cmps
rcr
xor
in
dec
loope
cmp
fnsave
add
or
xlat
jae
and
mov
jb
sub
lea
pop
jno
or
sbb
mov
push
jmp
mov
fst
and
push
imul
lea
jg
push
add
push
dec
icebp
leave
aam
das
or
or
mov
jmp
pop
mov
xchg
pop
sub
in
in
xchg
push
aam
add
sbb
lea
imul
enter
ret
mov
and
lahf
cmp
shl
(bad)
and
inc
mov
mov
cdq
inc
lods
hlt
loopne
xchg
cs
jnp
mov
sub
cwde
jl
hlt
loope
aas
test
adc
mov
xchg
outs
inc
adc
add
mov
fiadd
or
push
pop
jns
dec
nop
xor
aaa
(bad)
pop
test
test
and
cmps
lds
sub
push
ds
mov
iret
mov
add
sub
jo
mov
ficomp
or
pop
ins
inc
outs
cmp
add
out
int
jo
sbb
stos
(bad)
enter
push
pop
clc
loopne
loop
inc
inc
mov
jae
call
fcmovnu
mov
scas
ret
jecxz
dec
call
mul
sahf
int3
cmp
mov
nop
out
mov
add
cs
int
mov
dec
dec
das
jo
and
aam
sti
jne
repnz
js
and
loop
mov
and
jl
ins
inc
bound
inc
lea
jne
mov
sub
push
push
inc
or
stos
out
test
mov
and
not
pop
jp
and
dec
jl
dec
out
mov
push
dec
cmp
mov
fidiv
and
aad
sub
cmp
mov
test
pop
out
retf
push
cmp
shr
ret
leave
push
jmp
stos
cmp
pop
adc
arpl
pop
stc
push
xor
dec
and
push
mov
inc
rcl
into
rol
pop
in
xor
push
dec
idiv
pushf
std
arpl
call
ret
jle
fs
es
daa
mov
and
xor
mov
test
sub
daa
je
call
inc
je
pop
lods
mov
mov
ds
xor
cmps
retf
fcos
enter
fistp
test
sub
inc
sar
sahf
mov
inc
mov
mov
dec
jmp
mov
je
sbb
lds
in
aad
lds
mov
loop
test
push
fiadd
jno
push
push
cli
cld
fld
pop
rep
mov
in
shl
pop
aad
fsubp
int3
frstor
das
mov
ja
and
pop
inc
jle
(bad)
xchg
xor
jbe
push
and
mov
cmp
jbe
hlt
push
std
(bad)
fld
(bad)
jns
cmp
or
inc
inc
pop
mov
fld
out
and
rcl
hlt
sub
cmps
sub
jno
sbb
std
in
and
push
addr16
push
retf
and
popf
xor
scas
mov
lods
loop
stc
rcl
aas
cmp
mov
cmps
push
adc
jns
mov
repz
in
test
mov
shl
dec
enter
cmp
sbb
push
test
xchg
and
ret
xchg
(bad)
movs
sub
add
adc
data16
mov
cmp
sbb
mov
pop
xchg
dec
outs
int3
add
push
mov
fild
jne
aad
gs
dec
adc
repnz
ficom
out
xchg
dec
jge
sbb
rcl
ss
jp
dec
repz
pop
std
jle
fisub
loope
jge
xor
mov
adc
test
xor
mov
lods
cmp
mov
xchg
and
leave
cmps
stc
sbb
xchg
test
pop
pop
adc
nop
push
inc
shl
daa
sbb
das
jle
cmps
sub
xor
jecxz
inc
push
icebp
cmps
int
push
add
ja
mov
sub
xor
repnz
inc
adc
nop
mul
cmp
xchg
ds
pop
pop
jecxz
jg
mov
imul
push
dec
push
dec
call
xchg
xlat
outs
pop
nop
rcr
mov
outs
pop
pop
ret
fcomp
cmc
dec
mov
push
stos
pop
cwde
shl
test
and
call
test
in
retf
cwde
out
aad
in
lods
xchg
test
shl
xor
movntps
pop
xor
adc
pop
add
ss
xchg
loopne
inc
shl
cmp
div
ret
out
ror
jae
daa
movs
movs
mov
jecxz
es
(bad)
call
leave
sub
das
leave
and
cmps
inc
or
xchg
aam
or
fldenv
xchg
adc
xchg
and
sub
repnz
dec
xchg
jne
call
aam
push
shl
xor
dec
rcl
(bad)
cmc
push
push
cmp
mov
ret
pop
and
(bad)
jno
push
popf
rcl
sar
mov
jne
ficom
imul
icebp
xor
add
inc
idiv
int3
adc
imul
add
cmp
xchg
sub
xor
in
mov
adc
call
xchg
inc
ret
push
inc
test
jp
cmp
xor
mov
ds
pop
movs
adc
push
cmp
jae
jbe
fwait
sti
movs
popf
sbb
sub
stos
xchg
xchg
lahf
inc
jno
ja
push
mov
ins
fsubr
out
mov
lods
dec
sti
and
iret
outs
cli
xor
das
adc
(bad)
repnz
adc
fdivr
dec
sub
in
fs
test
leave
sbb
push
btr
shr
push
mov
mov
mov
test
movs
repz
cdq
push
and
inc
das
clc
fimul
cs
sti
xor
push
push
adc
bound
cmp
sar
inc
outs
pushf
cmp
sub
mov
push
call
jl
ins
jmp
lahf
dec
xchg
sub
inc
out
mov
rol
xlat
push
mov
repnz
add
sub
(bad)
(bad)
adc
push
ror
mov
push
hlt
pop
lahf
dec
shl
jge
(bad)
retf
mov
add
ret
dec
aam
sub
test
pop
loope
push
mov
adc
mov
jbe
inc
scas
jns
pop
sbb
add
jae
cmps
jbe
and
push
dec
(bad)
mov
xchg
xchg
mov
jecxz
nop
ret
inc
in
cwde
pop
mov
push
xchg
mov
add
push
cld
mov
frstor
jmp
std
or
jb
inc
int
jo
sub
loop
jno
jge
sbb
dec
ins
stc
mov
call
into
mov
cmp
mov
mov
cmp
dec
push
push
retf
stos
and
int
stc
fiadd
clc
out
xchg
scas
arpl
pop
xor
bound
scas
repz
or
mov
in
mov
test
or
lods
push
xchg
pop
das
out
mov
xchg
xchg
cld
xchg
jmp
inc
lds
pop
movs
sbb
loope
ins
xor
mov
in
ins
sub
dec
jmp
sbb
fld
xchg
repnz
add
pop
mov
cmp
and
out
inc
les
cld
xchg
cmp
fstp
adc
mov
daa
out
das
and
int
(bad)
push
sub
push
dec
arpl
xor
dec
jge
imul
int3
inc
sub
jae
mov
imul
xchg
(bad)
mov
jge
adc
xchg
mov
jns
jecxz
jne
sbb
ss
mov
std
jno
cmc
ins
movs
data16
push
out
test
jle
std
push
ins
mov
pop
(bad)
xchg
cs
sub
scas
ret
cdq
mul
push
jl
popf
mov
sub
inc
cmc
adc
xor
lods
sbb
and
jp
cmp
idiv
lea
sub
push
popf
movs
je
fwait
les
cli
es
(bad)
and
in
ret
push
mov
pop
xor
pop
push
push
stc
fstp
or
inc
jno
mov
pushf
jnp
or
inc
push
pushf
or
mov
mov
dec
fcmovnbe
sbb
in
test
jns
cdq
mov
daa
(bad)
test
add
push
adc
mov
loop
mov
(bad)
rcl
pop
sub
inc
push
sbb
mov
mov
mov
or
out
popa
pop
cmp
popa
pop
jbe
aaa
or
ficomp
test
je
push
enter
nop
cld
mov
sub
std
pop
test
aaa
repz
jbe
js
js
test
inc
sahf
loopne
ret
mov
adc
sub
gs
fld
sbb
jae
call
mov
mov
inc
pop
xor
pop
jnp
femms
cdq
pop
mov
sub
clc
xlat
sub
cmps
ffreep
fs
out
pop
ret
pop
adc
sbb
jle
into
lea
nop
fiadd
(bad)
icebp
jecxz
retf
sahf
stos
pop
and
stc
int3
mov
es
lock
and
adc
push
pop
aam
lods
mov
aad
dec
and
sub
fist
mov
inc
xor
fisttp
or
jl
out
or
retf
push
inc
xor
push
and
fwait
call
enter
mov
mov
fnsave
mov
jecxz
aad
lahf
xor
pop
(bad)
loopne
sbb
sub
fidiv
adc
sbb
or
dec
outs
cmp
das
cmp
pop
sub
gs
jae
dec
fsubr
mov
jg
push
dec
test
out
rol
jl
mov
je
jns
pop
dec
or
cmc
mov
nop
icebp
sbb
(bad)
mov
lds
test
cmc
cmp
test
(bad)
scas
icebp
sub
cmp
cmps
imul
movs
push
lods
push
mov
xchg
jno
cmp
xchg
or
cvtpi2ps
fistp
sbb
outs
std
dec
and
and
loopne
add
xchg
cmp
pop
mov
jne
daa
xor
push
xor
shr
add
inc
cmp
into
pop
inc
sub
pushf
xor
je
loopne
sbb
jp
hlt
mov
inc
retf
push
je
sub
dec
test
mov
(bad)
jb
adc
aad
mov
mov
scas
push
out
call
cmp
icebp
mov
movs
dec
add
jp
add
sahf
xlat
xor
mov
stos
dec
nop
jp
inc
ins
mov
call
sbb
rol
mov
repz
adc
cmps
mov
push
inc
mov
push
out
inc
pop
repz
and
retf
(bad)
jmp
je
mov
ds
adc
add
fst
mov
jne
scas
mov
(bad)
std
xlat
add
push
mov
loope
jl
sbb
and
loop
mov
(bad)
call
sbb
(bad)
jmp
inc
hlt
jno
(bad)
dec
mov
dec
ret
and
sahf
sub
fwait
lods
push
jb
ss
jle
popa
xchg
aaa
inc
mov
push
js
into
popa
inc
jne
fdiv
adc
xor
sub
jns
fdiv
ret
cld
clc
gs
push
fadd
add
(bad)
adc
out
jecxz
jae
cmp
xchg
dec
mov
mov
cli
(bad)
mov
or
sub
mov
xchg
jns
inc
add
dec
(bad)
call
mov
dec
imul
xchg
push
mov
or
out
adc
and
pop
ins
hlt
add
mov
sub
xchg
jo
lock
dec
mov
bnd
jmp
push
test
mov
or
or
repnz
or
jge
ss
std
int3
inc
pop
(bad)
cdq
popa
in
inc
cli
inc
sub
retf
fimul
stos
fwait
push
cmc
pop
ja
popf
pusha
aam
xchg
adc
jne
dec
lock
xor
or
std
cmp
test
xchg
sti
ja
jns
mov
(bad)
(bad)
mov
lock
sub
test
aas
cmp
pop
fnstsw
in
jle
fiadd
push
aad
mov
inc
lds
pop
test
pusha
xor
mov
movs
xor
mov
mov
ins
imul
retf
cmps
cdq
dec
ins
imul
retf
dec
stos
mov
lahf
jo
out
xchg
push
push
add
push
dec
shl
cmp
mov
out
addr16
lods
out
jnp
fwait
cmp
pushf
fstp
out
pop
xor
sar
push
fldenv
pop
jae
(bad)
jne
mov
add
xchg
pop
mov
fsubr
repz
mov
xor
xchg
or
xor
xchg
dec
icebp
mov
stc
lea
fild
jmp
nop
or
cmps
js
cwde
adc
xor
jmp
xchg
int
and
lahf
fcomip
mov
pop
lea
pushf
(bad)
icebp
pop
test
pop
add
dec
push
sub
sub
xchg
sub
(bad)
in
ret
cli
repnz
outs
pop
pushf
shl
arpl
adc
int3
dec
add
xchg
dec
add
fist
std
add
ja
mov
xchg
xor
sahf
mov
test
shr
pop
lahf
or
imul
jle
fimul
xor
or
jo
sbb
adc
out
mov
mov
mov
test
cmp
test
xchg
ins
mov
sub
mov
rcl
outs
jae
aaa
jecxz
outs
(bad)
ins
mov
enter
fsubr
cmps
dec
mov
xchg
inc
call
mov
mov
sbb
gs
cmp
test
imul
fstp
jno
retf
mov
add
dec
frstor
pusha
jecxz
idiv
mov
sub
js
sbb
xchg
imul
pop
xchg
ds
mov
popa
lock
jne
stc
sbb
push
add
inc
ss
loope
stos
lock
stos
pop
dec
cmps
xor
xchg
jmp
inc
(bad)
push
mov
jb
out
and
adc
(bad)
mov
int
stos
push
scas
sbb
sbb
inc
lock
push
and
add
outs
sub
retf
xchg
(bad)
cmp
movs
jmp
mov
inc
dec
gs
adc
aad
mov
retf
push
call
mov
mov
inc
or
mov
push
jp
inc
sub
inc
ins
cmp
neg
(bad)
fdivr
fsub
mov
sub
bswap
xchg
sub
scas
lds
les
sbb
dec
retf
push
or
mov
(bad)
jge
lods
(bad)
inc
and
dec
jae
adc
push
sub
xchg
fild
jge
cmp
mov
enter
inc
sbb
loope
sti
inc
mov
arpl
je
and
mov
addr16
cmp
test
(bad)
das
dec
test
sub
fdiv
test
sub
pop
ds
sbb
stos
jmp
shl
(bad)
retf
es
mov
cld
ins
in
and
mov
in
or
pushw
adc
cmp
push
in
unpcklps
or
inc
mov
dec
loop
cmp
sbb
jmp
sub
mov
in
cmps
lods
push
sub
icebp
jb
mov
push
sbb
popa
sbb
push
dec
repnz
sbb
dec
nop
dec
push
mov
out
dec
scas
fld
test
pop
dec
push
mov
pushf
dec
adc
lds
dec
mov
cs
xchg
pop
(bad)
das
imul
pusha
push
pop
mov
scas
pop
(bad)
push
jle
or
pop
js
jle
add
push
cs
xchg
sbb
shl
in
and
push
mov
jae
inc
aaa
fwait
jp
jo
hlt
push
enter
mov
pop
mov
add
das
test
fstp
and
dec
int3
and
sbb
dec
mov
and
xlat
mov
aaa
sub
adc
ins
shl
dec
ror
pop
(bad)
adc
in
xchg
outs
retf
js
or
add
push
ins
xchg
dec
xchg
in
ret
jg
or
retf
jg
mov
popa
sub
xor
push
pop
scas
add
cwde
add
lods
das
and
lock
mov
test
lock
in
pop
pop
arpl
dec
or
dec
mov
outs
ss
add
or
call
leave
repz
fcomp
imul
in
stc
dec
ret
iret
push
bound
pop
add
and
mov
mov
dec
add
push
jb
add
hlt
iret
popf
push
add
add
add
sar
call
dec
jmp
fstp
jno
mov
sub
sbb
icebp
repnz
xlat
xor
jl
hlt
ret
mov
jnp
ins
push
ret
hlt
add
jp
ret
into
inc
xor
pop
cmps
fst
xchg
push
outs
(bad)
cmc
fcom
jno
lea
pop
inc
pop
and
mov
push
dec
(bad)
pushf
inc
popf
cmovno
daa
scas
jo
movs
out
push
stos
add
dec
in
mov
ins
fild
(bad)
jp
sub
es
push
mov
mov
out
dec
imul
out
dec
xchg
cmps
lods
jmp
jmp
fisubr
cmp
fisubr
lahf
iret
xor
adc
sbb
jmp
jle
xchg
and
in
cmp
dec
sahf
push
mul
or
sbb
xchg
mov
pop
add
adc
ret
mov
jae
std
das
loope
xchg
lahf
add
ds
sbb
nop
in
or
cmp
inc
inc
clc
cmp
adc
(bad)
(bad)
xchg
ins
push
mov
in
gs
mov
inc
scas
jne
test
sub
cmps
inc
in
xor
mov
cmp
or
dec
(bad)
test
dec
pop
fnstenv
xchg
push
adc
lds
out
nop
leave
pop
repz
ja
sbb
cmps
mov
mov
iret
xor
nop
dec
mov
push
lods
push
and
inc
pop
push
pushf
stos
daa
movs
leave
ss
scas
retf
dec
and
jae
rcl
xchg
je
mov
lahf
push
push
add
pop
add
inc
xchg
jns
(bad)
mov
mov
loopne
inc
loope
sbb
add
loop
sub
cmp
mov
fdivr
xchg
inc
dec
js
mov
cmps
cmp
ja
mov
mov
enter
jmp
sahf
mov
add
sbb
mov
or
adc
mov
daa
cdq
cmp
xor
jo
mov
les
(bad)
fsubr
jp
ins
call
or
xor
sub
xor
add
xor
loopne
lock
and
adc
ins
dec
fsubr
popf
or
or
jg
mov
mov
in
push
fwait
cmp
xor
test
jns
pop
into
jns
retf
inc
int
popf
in
ror
lods
pusha
mov
add
ret
mov
ss
cdq
and
or
push
es
sub
(bad)
cmc
lahf
dec
repnz
jno
popa
leave
std
push
test
clc
push
mov
cmps
add
das
add
cmps
jnp
xchg
in
clc
jl
sub
push
sub
adc
or
jno
cmp
je
fidivr
adc
shr
dec
jbe
scas
jb
push
and
jne
xchg
dec
pop
icebp
into
mov
inc
mov
xchg
(bad)
call
daa
mov
hlt
repnz
jle
(bad)
stc
(bad)
and
das
cmp
push
and
jle
pop
push
lock
cmp
stos
iret
out
pop
test
aaa
inc
add
sub
mov
outs
mov
dec
mov
fs
nop
stc
sub
aaa
dec
lea
enter
xor
lods
xchg
mov
sub
clc
sar
xor
push
call
inc
adc
js
(bad)
lods
xor
pop
dec
push
outs
outs
push
gs
sbb
push
cli
stos
and
push
aam
jl
outs
sti
sar
shl
adc
and
out
jmp
pop
addr16
lock
push
sub
call
movs
shl
clc
dec
jg
add
scas
add
inc
mov
out
jno
jbe
xor
ds
call
fldenv
mov
adc
in
into
cld
movs
loope
repnz
inc
ja
sbb
xlat
mov
iret
out
hlt
cs
mov
cmp
xor
scas
aad
pop
shr
lods
xchg
xor
lahf
in
str
jae
popa
sbb
fisub
loop
sub
mov
xor
fimul
loop
popa
js
scas
aas
xor
cmp
lods
ins
sub
imul
int
out
sub
fnstcw
xlat
mov
in
push
repz
in
mov
sub
shl
ins
xchg
bound
xor
mov
pop
sub
mov
cwde
aam
pushf
pop
mov
stos
sbb
pop
or
xchg
fmul
popa
fsubr
int
(bad)
into
jnp
imul
arpl
aaa
mov
and
push
push
inc
imul
test
icebp
push
in
das
and
hlt
inc
imul
inc
inc
pop
repz
jp
clc
xchg
or
icebp
cmps
and
imul
sub
sbb
xchg
scas
dec
push
imul
je
out
jg
xchg
add
jmp
push
hlt
repz
jp
cmps
cmp
outs
rcl
cdq
or
adc
mov
test
mov
mov
add
data16
inc
outs
jne
jb
je
popf
ja
scas
aam
inc
inc
iret
add
mov
lock
nop
pop
mov
stos
call
cdq
call
jo
push
mov
loop
call
sub
pop
out
mov
pop
nop
stos
scas
(bad)
fidivr
jno
push
outs
scas
movs
sahf
loope
jmp
mov
pop
or
or
pop
jmp
lods
retf
xor
fnstcw
cli
test
fcmovb
add
lods
mov
int3
jo
pop
mov
enter
outs
into
mov
fbstp
int
aad
rcl
dec
ja
mov
imul
stc
cmp
mov
loop
int
loope
fcom
and
(bad)
cld
jecxz
sbb
addr16
lahf
loop
sub
push
dec
and
fstp
sbb
ds
push
lock
and
out
and
(bad)
pop
lods
inc
and
mov
mov
ja
outs
in
sbb
mov
sub
(bad)
mov
shr
xchg
fs
jae
mov
jge
pop
mov
xchg
push
or
test
arpl
ret
or
mov
std
sbb
cli
sbb
dec
and
(bad)
jg
inc
scas
bnd
jl
lock
ret
mov
and
pop
sub
xchg
add
aam
inc
mov
dec
or
call
sub
sub
sbb
cmp
pop
je
clc
lock
and
mov
lea
shr
jbe
stos
int3
dec
add
mov
mov
xor
movs
call
dec
aaa
jne
std
and
xchg
ret
and
add
dec
or
retf
pop
mov
mov
adc
pop
adc
xchg
movq
jo
adc
pop
add
sbb
lods
fcomp
dec
xchg
push
dec
(bad)
dec
fisttp
in
mov
shl
push
icebp
fild
in
sbb
dec
xlat
cmps
inc
ds
push
xor
pop
sbb
jnp
js
std
mov
sbb
and
push
imul
xor
and
cdq
data16
mov
call
mov
(bad)
xor
inc
loope
mov
aas
cmp
mov
push
cmp
mov
and
push
out
sub
mov
popf
xlat
lds
jae
movs
adc
in
in
jle
scas
loope
pop
lds
push
push
ror
sbb
sahf
jmp
repz
test
pop
lds
fwait
jl
jl
(bad)
mov
mov
push
cdq
mov
xchg
fst
ins
jae
ret
xchg
mov
lds
mov
out
xor
jbe
sub
ja
pop
add
int3
sub
in
int3
mov
pop
enter
push
cmp
adc
stos
scas
fiadd
adc
cmp
cmp
pop
rcl
pop
bound
enter
ret
pop
sub
jmp
or
jne
mov
or
das
into
(bad)
sbb
popa
mov
mov
jo
jne
ja
sub
jp
push
and
iret
fistp
fcomp
call
or
mov
(bad)
in
psrld
sub
gs
mov
rol
loopne
cdq
int
xchg
imul
retf
or
or
inc
pop
loope
out
xchg
test
dec
out
inc
inc
mov
add
dec
or
lds
mov
add
pop
xchg
push
ret
xor
xchg
jp
test
pop
(bad)
jo
jle
pop
mov
fsub
sbb
sub
cmc
mov
adc
and
sub
mov
xor
fadd
rcr
in
sub
cmps
jo
fiadd
daa
loope
jmp
push
mov
jle
ja
and
inc
fcomp
ror
cwde
sbb
xor
xchg
cmp
pop
push
fcmove
mov
add
fstp
adc
or
test
nop
push
je
sub
aam
test
push
mov
in
cmp
out
imul
arpl
add
mov
in
sub
and
jecxz
test
sar
rcr
dec
push
ds
jo
push
xor
icebp
and
in
pop
fwait
loop
inc
add
lds
test
dec
rep
aaa
outs
arpl
dec
data16
mov
mov
fs
inc
adc
mov
jbe
mov
push
sub
sbb
leave
stc
mov
or
clc
test
hlt
jns
aas
in
clc
fild
adc
xchg
adc
outs
xchg
nop
jno
cld
push
aaa
fisubr
call
jp
(bad)
scas
fwait
mov
out
pushf
pop
fldenv
sub
adc
dec
jno
pop
test
jbe
stc
mov
icebp
mov
xor
xlat
scas
sbb
lea
jg
call
push
and
fild
jmp
xchg
cmc
pop
in
scas
sub
or
and
jecxz
dec
shr
push
sub
jle
push
cmp
or
mov
lock
sti
xchg
aam
call
and
adc
sub
call
imul
cli
pop
retf
xchg
cmp
dec
ret
sbb
pushf
lea
cmps
popf
shl
shl
(bad)
cdq
out
call
cmp
test
addr16
jg
pop
pop
dec
xchg
loop
mov
cmp
mov
sub
cdq
fimul
add
ja
and
scas
enter
pop
bound
stos
ds
jo
test
sub
dec
shl
adc
(bad)
cmc
mov
mov
enter
scas
pop
jne
shl
enter
mov
fld
lods
outs
cmp
or
push
jns
lods
inc
push
push
cdq
(bad)
fimul
pop
fdivr
push
addr16
ins
(bad)
icebp
pop
stos
sti
xor
mov
sti
ja
sub
jno
movs
sub
mov
push
mov
fisub
jmp
cli
sbb
jmp
outs
outs
add
pop
pop
xchg
pop
cld
or
cmp
push
imul
(bad)
and
fwait
pop
scas
sbb
outs
jp
loopne
ins
xor
je
xlat
dec
cld
mov
mov
test
aas
daa
cld
jb
movs
or
fadd
push
cs
jp
add
cmp
inc
mov
cld
call
(bad)
(bad)
mov
in
mov
or
mov
lods
mov
out
jmp
push
or
jb
sub
jbe
mov
sbb
mov
cmp
jle
xor
and
pop
sub
rol
call
leave
sub
call
lds
xor
sub
xor
adc
std
inc
pop
sahf
sbb
int3
sbb
fbld
clc
mov
(bad)
fwait
leave
sbb
push
xor
mov
(bad)
jmp
jae
mov
cmp
fldenv
fs
retf
push
mov
cs
mov
fdivr
adc
idiv
pop
xchg
sbb
inc
mov
adc
add
hlt
mov
mov
and
mov
aaa
lea
jns
lock
pop
xlat
fimul
enter
lds
aas
sub
fdivr
pusha
popa
into
or
mov
in
repz
shr
add
and
loopne
adc
rcl
retf
adc
icebp
ds
loopne
mov
aam
jb
fild
int
clc
dec
sub
dec
jne
sahf
outs
lahf
aam
jmp
cmps
adc
sbb
inc
sub
xor
in
jl
mov
mov
(bad)
rcr
xchg
add
sub
cld
dec
ja
stos
xchg
pop
adc
jns
jp
pop
aas
jmp
add
jg
int3
shl
mov
mov
mov
or
sbb
cdq
pop
add
adc
mov
ins
mov
dec
xor
fwait
mov
jmp
test
rcr
adc
jecxz
ret
mov
movs
neg
push
jmp
jecxz
sub
dec
sbb
jb
mov
aam
mov
jmp
push
or
xor
sub
jg
inc
push
cli
mov
pop
xor
(bad)
pop
and
sbb
or
mov
das
jecxz
loope
fistp
sbb
es
aad
adc
sbb
iret
dec
adc
sbb
js
(bad)
data16
mov
cmc
test
or
push
call
jmp
jge
je
(bad)
mov
pusha
loope
repz
mov
pushf
into
aam
mov
pop
push
stos
iret
int3
add
out
ficom
jae
outs
inc
dec
ins
aam
sbb
stos
xchg
inc
xor
lahf
xor
add
cmps
or
push
mov
mov
xchg
lock
or
ret
pushf
(bad)
call
sub
xchg
xchg
arpl
mov
repz
inc
cmp
sub
test
jmp
retf
pushf
push
(bad)
(bad)
cli
aas
out
inc
push
pop
sbb
push
loopne
mov
(bad)
mov
pop
mov
cdq
jne
cmps
pop
add
cmps
popa
mov
mov
imul
fcom
cmps
lods
mov
in
repnz
lods
pop
repz
mov
(bad)
scas
lock
cmp
xchg
sbb
or
dec
push
sbb
pop
(bad)
ds
mov
mov
push
ins
mov
xchg
xor
test
fdivr
and
iret
inc
addr16
push
je
loopne
out
jp
sub
add
adc
lock
pop
fidiv
mov
clc
daa
push
je
sub
push
pop
call
test
lahf
mov
ret
add
push
enter
inc
fsubr
call
push
inc
test
loope
inc
jb
sbb
push
or
jle
sub
imul
pushf
pmuludq
lods
aam
fwait
pop
sub
push
sbb
outs
mov
mov
enter
data16
push
inc
mov
dec
sub
frstor
and
sub
arpl
mov
addr16
clc
pop
xlat
les
fsub
dec
xchg
sbb
test
loope
dec
movs
mov
dec
jmp
mov
leave
fsub
dec
jo
push
mov
push
adc
fxch
sub
push
mov
inc
out
pop
inc
inc
lock
and
outs
lods
mov
xor
inc
(bad)
dec
sbb
es
fisttp
(bad)
(bad)
pop
fwait
arpl
enter
cmc
call
pushf
(bad)
in
call
aas
call
cli
fwait
mov
in
xor
or
jmp
push
mov
out
mov
nop
movs
mov
icebp
movs
sbb
es
mov
jmp
jge
sub
sub
cmp
bound
aam
cli
pop
aad
ins
cmps
dec
cmp
mov
fistp
sub
int3
mul
push
repnz
out
pop
cmc
cmps
add
inc
cmps
push
leave
jecxz
sbb
mov
pop
and
iret
cwde
xchg
cdq
popf
push
jo
ins
shl
and
shl
aad
popa
nop
daa
leave
mov
mov
adc
fucomi
jnp
xchg
inc
inc
push
jmp
mov
jb
scas
cmps
jmp
aaa
movs
adc
iret
sub
mov
ds
pop
push
jnp
lods
inc
xor
adc
int
mov
pusha
retf
push
inc
int
loop
xor
adc
std
fucomp
in
(bad)
popa
out
iret
mov
cmp
call
call
jb
cmp
inc
or
mov
sub
cwde
dec
jae
inc
out
mov
hlt
test
sub
mov
push
in
mov
cmps
es
xor
push
push
xchg
scas
adc
mov
xor
test
enter
jg
in
pop
adc
imul
pusha
dec
cmps
mov
add
push
dec
aad
lods
sahf
adc
sar
or
cmp
xchg
test
and
pop
imul
push
fist
pop
shl
adc
xor
popf
ror
repz
les
out
into
mov
loopne
test
call
out
jmp
aas
ret
das
sub
out
repz
or
pop
hlt
xchg
and
and
out
sub
arpl
mov
jmp
test
aaa
inc
sbb
sub
int
out
inc
jo
pop
push
adc
adc
or
sbb
pop
dec
jnp
mov
test
fsubr
inc
or
lsl
aaa
pop
xchg
in
adc
shl
xchg
rcr
xchg
popf
pop
out
test
and
mov
dec
or
lock
mov
cmp
mov
mov
push
adc
jp
jmp
or
sbb
ins
gs
call
pop
mov
loop
push
rcr
mov
xchg
out
lea
stc
fidiv
push
outs
pop
dec
cmp
xlat
xor
push
dec
out
out
or
and
adc
sar
mov
inc
dec
mov
jmp
ins
push
outs
cmps
jl
test
loop
mov
cmp
fistp
cmp
inc
mov
xchg
dec
adc
or
pop
cmp
retf
sub
cmp
or
scas
(bad)
je
add
adc
cwde
cmps
lahf
mov
pop
cmps
loopne
lods
mov
ret
mov
test
mov
test
mov
push
out
xor
jmp
cmc
and
sbb
pop
in
mov
outs
(bad)
(bad)
jo
inc
hlt
dec
pop
cmp
dec
mov
popf
(bad)
test
mov
cmps
add
repnz
and
loopne
call
jge
repz
jnp
cmps
sbb
mov
sub
mov
xchg
clc
retf
adc
stos
loopne
or
adc
mov
mov
mov
retf
lods
jg
in
test
and
in
inc
sub
(bad)
scas
cmp
jae
clc
fisubr
xor
pusha
in
iret
sti
mov
sbb
add
sub
xor
vunpckhpd
and
out
fwait
mov
sbb
aam
shl
xor
or
cmp
dec
sub
mov
or
js
dec
or
mov
adc
add
call
stos
rcr
pop
int
mov
(bad)
jbe
mov
hlt
mov
retf
jne
or
cli
xlat
dec
(bad)
and
enter
and
xchg
mov
test
dec
adc
jo
rol
dec
fcom
push
mov
mov
xchg
ja
pop
loopne
arpl
lods
mov
inc
xlat
push
sub
stc
jmp
xlat
ins
mov
cmps
outs
int3
pop
push
cmp
shr
jg
mov
sub
(bad)
push
mov
cmps
mov
cli
or
cmps
cmp
arpl
dec
ins
(bad)
push
lahf
hlt
int3
cld
repnz
sbb
sub
scas
ss
sub
inc
mov
push
mov
dec
xchg
jecxz
ja
inc
sub
sub
scas
push
std
sbb
adc
mov
rcl
hlt
add
cmps
cmp
bound
(bad)
jle
and
inc
xor
xchg
pushf
das
sub
lea
add
mov
dec
leave
and
addr16
or
ins
mov
push
mov
mov
xor
xchg
or
aam
or
xor
daa
aam
(bad)
xor
(bad)
xor
xor
jmp
fisubr
imul
test
jecxz
rol
lds
sbb
sbb
mov
cmps
push
(bad)
mov
adc
mov
pop
dec
pop
cmps
das
imul
pop
push
xlat
aas
leave
add
ret
clc
sub
mov
fcom
iret
sbb
pop
inc
(bad)
cmp
push
outs
and
adc
out
sahf
(bad)
push
sub
jg
(bad)
(bad)
mov
cmc
sar
inc
xchg
hlt
pop
or
adc
stos
out
loope
lods
std
inc
push
jle
and
scas
leave
cmps
retf
arpl
cmps
push
sbb
add
add
movs
jne
retf
jno
mov
mov
sub
imul
lock
add
dec
in
add
inc
mov
jae
daa
adc
mov
out
mov
or
mov
out
outs
adc
rcl
sbb
jb
push
dec
mov
and
jno
push
inc
sbb
mov
jo
xor
fsubr
adc
and
inc
stos
xor
push
and
mov
hlt
and
cmp
dec
pop
jge
cs
mov
cmps
retf
jmp
sar
fisubr
test
or
sbb
and
scas
jns
push
loop
and
sbb
cwde
retf
dec
mov
sub
pop
scas
test
aam
add
inc
push
test
push
in
in
cmc
cmp
jnp
adc
mov
shl
in
movs
or
(bad)
es
adc
dec
xchg
xor
sub
scas
shl
ret
out
outs
ret
cmp
mov
(bad)
bound
push
cwde
jne
mov
pop
mov
lds
mov
popa
adc
dec
inc
cmp
sub
loopne
push
mov
rdtsc
inc
cmp
into
and
cmps
hlt
ror
sub
pop
in
aad
mov
mov
add
cld
cmps
gs
mov
sbb
jl
mov
jnp
mov
ins
scas
ins
adc
retf
pop
jp
lea
cmc
cmp
(bad)
jge
aaa
icebp
mov
push
mov
jp
mov
mov
pop
xchg
bound
retf
jle
add
neg
jg
and
xchg
test
movs
add
and
pop
inc
jmp
loope
push
je
loope
loope
(bad)
pop
popa
cmps
sbb
mov
shl
stc
bound
clc
aam
and
and
js
sahf
mov
mov
or
jbe
pop
xchg
inc
cmps
push
ds
inc
dec
fst
sbb
fnsave
add
xchg
jae
out
push
or
sbb
xchg
popa
shl
movs
(bad)
ja
push
cmp
dec
sbb
jp
push
jbe
jo
xchg
je
jnp
adc
loopne
icebp
xchg
or
mov
push
push
fs
call
nop
push
jmp
lods
adc
mov
dec
das
jmp
outs
(bad)
(bad)
out
sbb
dec
sbb
mov
push
adc
xlat
xchg
jg
push
test
inc
aad
js
and
xchg
cmp
js
popa
out
enter
mov
dec
push
stc
clc
lea
pop
call
push
ror
(bad)
test
cld
mov
inc
push
sar
mov
xchg
jl
rol
dec
shr
mov
sbb
lods
aam
cmp
sbb
fmul
int
push
xor
jno
out
into
jmp
cdq
or
sbb
adc
les
cmp
nop
jo
stos
jmp
adc
push
and
adc
fadd
adc
dec
in
stos
inc
out
call
xlat
inc
(bad)
lods
or
and
fstp
push
call
js
ds
std
cmps
test
ja
aaa
adc
xlat
lock
inc
repnz
pop
sti
add
or
push
and
fild
mov
ds
(bad)
jae
add
loope
pop
cmc
mov
sub
or
ret
mov
in
xchg
adc
pop
push
enter
inc
aaa
sub
jecxz
lods
sub
fbld
xchg
cmps
sbb
movs
and
mov
fucom
cmps
dec
in
mov
(bad)
stc
jecxz
shr
js
cmp
out
stos
(bad)
sub
pop
sbb
push
xchg
jecxz
dec
aas
(bad)
sbb
mov
mov
cwde
movs
fst
mov
aaa
pop
sub
push
dec
sub
push
movs
or
dec
outs
cmc
mov
or
sbb
aaa
cld
mov
dec
xlat
enter
clc
xchg
test
rcr
fwait
dec
inc
ret
cmps
mov
add
push
adc
xor
and
pushf
loop
lods
lea
mov
xacquire
pop
das
cmp
inc
mov
fsub
fucomip
xor
cs
mov
leave
fld
(bad)
mov
push
push
or
repnz
mov
sub
je
fnstcw
lea
push
jle
pop
movs
lock
jp
ret
lea
dec
lea
stos
dec
pop
into
cmp
sbb
push
mov
fimul
sub
call
mov
add
(bad)
outs
fdivr
js
nop
rcl
clc
loopne
mov
mov
pop
mov
test
xor
nop
(bad)
or
outs
xchg
imul
loope
mov
jne
xchg
jne
sub
(bad)
jae
ret
shr
mov
mov
add
dec
outs
addr16
rdtsc
inc
mov
sti
mov
xchg
sbb
mov
cmps
arpl
sar
and
sbb
stos
xchg
or
test
retf
cmp
test
pop
inc
cmp
popa
add
sti
and
adc
ds
ins
ffree
lahf
mov
jp
pop
xor
sub
iret
cmp
inc
or
and
mov
es
jg
sub
fistp
adc
or
mov
or
std
icebp
mov
push
into
jno
mov
rol
test
push
fdiv
fbld
inc
stos
push
stos
in
cmp
push
test
inc
dec
mov
push
fdiv
or
cmova
mov
adc
pop
les
pop
iret
mov
fcomp
dec
je
xor
and
in
mov
or
jg
mov
xchg
jl
push
sti
es
cmp
fbstp
data16
lock
lods
ja
scas
bnd
sub
or
mov
out
dec
call
sar
ja
ins
out
jp
mov
into
xor
pop
sti
pop
addr16
lods
mov
xchg
push
adc
lds
clc
hlt
dec
xchg
out
(bad)
jns
scas
mov
data16
add
test
gs
stc
adc
out
push
mov
in
dec
xchg
add
cmps
clc
mov
je
mov
test
xchg
add
mov
dec
sti
mov
push
cli
dec
mov
enter
aad
or
xchg
dec
(bad)
sub
cmps
ss
cld
sub
cmp
push
scas
in
pop
jno
test
dec
mov
pop
daa
dec
inc
in
dec
repz
mov
mov
aad
(bad)
jmp
pop
mov
rol
mov
cwde
jmp
daa
pop
and
jo
sbb
adc
inc
pop
test
sub
jge
xchg
in
iret
mov
xor
in
lahf
and
fmulp
add
fs
fcomi
adc
pop
test
loop
jmp
xor
dec
push
push
es
or
mov
push
jnp
mov
clc
xchg
addr16
mov
dec
rol
mov
imul
aam
fsubr
push
inc
scas
mov
(bad)
(bad)
pop
arpl
jbe
push
mov
loopne
loopne
(bad)
es
data16
jmp
mov
loopne
cmc
or
fadd
jge
test
sbb
push
jecxz
sbb
xor
cmp
xchg
sar
cmp
dec
cwde
mov
ins
loope
mov
mov
add
sbb
pop
test
xor
and
lock
out
and
lods
inc
mov
out
push
les
dec
and
mov
arpl
xor
mov
mov
shr
out
push
daa
and
mov
enter
out
int
mov
push
(bad)
call
rcr
and
or
ret
or
jne
loopne
inc
dec
adc
mov
or
movs
daa
les
push
(bad)
mov
xchg
inc
int
inc
mov
loop
rol
sub
je
jmp
(bad)
test
(bad)
pusha
bound
cmp
hlt
adc
push
push
shr
mov
loopne
or
sub
test
and
fsubr
pop
mov
push
mov
jg
push
dec
pop
inc
popf
pop
in
add
std
xchg
sbb
popf
dec
lock
push
sub
aad
outs
add
or
pop
call
subps
sahf
das
mov
sub
pop
stos
out
xchg
mov
cmp
lock
push
mov
pop
add
adc
aas
das
inc
adc
out
jns
or
imul
imul
sahf
test
jg
add
cmp
repnz
add
and
vpcmpeqd
mov
jae
pop
jb
sub
stc
lea
mov
sub
bound
aad
ins
into
into
mov
mov
add
std
in
cmps
iret
xchg
fwait
les
dec
js
int3
sbb
push
stos
adc
lock
mov
push
stos
adc
rol
test
jmp
sub
loopne
mov
jb
scas
daa
pusha
sbb
(bad)
stc
sbb
call
js
jne
and
out
aaa
ss
mov
cwde
xchg
or
or
dec
pop
fist
nop
popf
jg
adc
inc
stc
mov
add
rep
push
rcl
inc
pop
(bad)
jns
call
fisttp
inc
mov
fnstcw
test
shl
movs
jge
sbb
test
adc
repz
xlat
faddp
cmp
mov
xlat
mov
cli
adc
fisubr
(bad)
mov
mov
cmp
dec
push
and
add
fwait
sahf
retf
or
xchg
xchg
push
push
jmp
fisttp
(bad)
pushf
xchg
jge
pop
xlat
dec
mov
enter
jl
push
stos
sbb
retf
push
cmps
ja
aas
dec
and
xor
dec
jle
out
add
inc
test
cmp
inc
mov
dec
ins
ins
sbb
test
inc
mov
mov
rcr
cmp
in
mov
out
adc
in
jb
xor
or
es
mov
push
dec
mov
enter
out
imul
cmc
sub
loopne
retf
mov
jne
push
and
sub
call
mov
and
mov
pop
ud1
daa
(bad)
cmp
push
(bad)
jno
add
mov
and
push
pop
mov
dec
das
es
jno
dec
retf
mov
test
clc
mov
ja
test
test
scas
retf
mov
out
fbld
push
fcmovu
fnstsw
adc
xchg
mov
movs
jnp
and
lahf
sub
sub
ret
pop
mov
mov
or
cmc
dec
pop
jecxz
in
xor
or
mul
popf
mov
cdq
rol
mov
test
popf
ret
mov
imul
fimul
add
pop
int3
cmc
mov
ds
add
push
jmp
add
in
dec
xchg
xchg
scas
outs
pop
inc
rcl
clc
mov
sar
or
adc
or
or
mov
out
xchg
push
or
mov
push
add
and
test
clc
and
adc
push
ja
dec
loope
sar
add
inc
int
mov
sbb
pop
mov
loopne
ins
popf
mov
cdq
push
or
sub
(bad)
lea
mov
xlat
sbb
jg
push
add
neg
mov
aas
ret
std
iret
adc
leave
in
stc
test
popf
xor
inc
in
sbb
sbb
mov
mov
out
cmp
push
xchg
xchg
fbstp
sub
mov
fnsave
or
inc
les
sub
jg
cdq
lea
nop
std
rol
jae
in
pop
mov
jmp
adc
in
aam
(bad)
and
xchg
mov
test
adc
loope
sti
scas
and
push
js
enter
cmp
jo
mov
add
dec
inc
adc
cmp
fidiv
movs
enter
in
in
add
mov
js
repz
shl
daa
push
push
cmc
outs
rol
dec
push
lock
jle
adc
into
call
inc
mov
push
sti
fs
jno
pushf
mov
or
aas
stos
jmp
add
and
push
xchg
inc
dec
sub
test
mov
ficomp
cmc
ds
test
in
jns
push
fnstenv
cli
dec
pop
mov
sbb
mov
pop
ja
cmovl
icebp
mov
pop
add
push
ins
mov
stos
cmp
and
aad
or
aad
fadd
jns
lods
aas
add
mov
aam
stc
mov
push
jb
ret
and
sub
mov
push
sbb
aam
pop
add
mov
mov
(bad)
mov
mov
loopne
xor
mov
ret
jns
push
pop
adc
inc
mov
cmp
inc
popf
jno
adc
bound
push
in
push
adc
in
cmp
or
dec
inc
xor
jp
cmp
and
out
inc
sar
jmp
add
ds
fild
xchg
add
and
or
xor
les
pusha
lds
xchg
nop
rcr
jg
mov
xchg
push
push
jp
sar
fldcw
push
ficom
sub
lahf
aaa
in
dec
aas
inc
mov
mov
jns
not
jge
mov
cmc
(bad)
and
mov
xor
adc
dec
jnp
jae
scas
neg
data16
leave
mov
inc
mov
adc
cmp
call
or
dec
mov
cmc
cmp
pop
inc
imul
and
enter
and
sti
dec
inc
or
dec
into
jmp
or
inc
or
jo
cs
jbe
sbb
std
lock
sub
sti
mov
mov
aaa
inc
cmp
adc
mov
(bad)
push
mov
popf
gs
cmp
sub
(bad)
mov
rsm
ins
sub
int3
inc
xlat
inc
jecxz
dec
xor
aam
ds
(bad)
(bad)
ror
inc
cmp
pop
icebp
in
ds
out
sub
ins
xor
xor
pop
in
imul
jecxz
test
ror
jl
int3
stos
jno
scas
aas
shl
sti
dec
xchg
aas
or
fsubr
push
ja
mov
icebp
sub
push
xor
xchg
scas
xor
stos
shr
ds
js
xor
adc
lds
outs
cmc
sti
adc
mov
jns
lahf
sbb
jmp
imul
xchg
push
xlat
(bad)
adc
dec
xchg
jecxz
aas
out
lock
mov
push
xchg
pusha
sub
lock
inc
xor
cmp
imul
mov
dec
add
test
fnstcw
push
adc
inc
mov
std
sbb
je
sub
aam
dec
mov
(bad)
js
push
mov
lds
rol
lds
ret
jp
inc
std
repz
mov
jnp
into
outs
js
mov
iret
sub
mov
dec
jmp
mov
sbb
adc
xor
imul
sbb
popf
sub
cs
add
or
and
xchg
data16
mov
rcr
xor
pop
jns
sub
xlat
shr
idiv
xchg
cmp
push
inc
pop
push
sub
push
repnz
pushf
or
mov
and
adc
stc
test
frstor
pop
xor
inc
sahf
(bad)
(bad)
and
sub
adc
(bad)
push
cmp
mov
popf
mov
(bad)
jmp
call
xor
sub
fs
es
sub
adc
data16
jecxz
data16
lock
ja
in
in
mov
inc
jle
dec
sbb
xor
and
nop
test
sub
fwait
pop
mov
shl
adc
mov
loopne
or
aaa
call
stc
clc
jg
stos
shr
daa
adc
les
or
mov
inc
push
(bad)
loope
shr
jge
adc
xchg
adc
outs
pop
test
jmp
in
icebp
aas
mov
push
jae
lods
add
sbb
jecxz
jno
call
enter
js
int3
dec
stos
inc
ins
push
mov
pop
xchg
jmp
popa
xchg
dec
mov
mov
stos
popf
push
pop
sub
out
mov
retf
xor
inc
mov
fild
in
ret
ja
jns
inc
adc
mov
lods
mov
outs
aad
add
jge
fsub
add
loope
jmp
not
movs
cmovnp
outs
adc
xchg
push
jo
rol
inc
pop
pushf
mov
xchg
mov
xchg
and
jmp
clc
add
sub
jb
lods
cmp
scas
sub
mov
or
ins
pop
push
adc
out
xchg
arpl
mov
scas
cmp
scas
stos
dec
(bad)
adc
(bad)
mov
leave
stos
push
cmps
inc
aam
cmps
clc
inc
mov
jmp
sub
in
mov
adc
jl
hlt
dec
sub
outs
adc
xchg
dec
into
mov
(bad)
xchg
dec
mov
jae
enter
dec
push
xor
fbstp
jmp
sub
xor
les
cli
data16
rcl
mov
push
icebp
dec
loop
call
jp
and
ret
outs
ins
fidivr
imul
movs
lods
pop
pop
xor
call
fdiv
fidivr
pop
test
or
or
rol
xchg
mov
loope
mov
shr
pop
or
push
in
sub
or
adc
rol
imul
sbb
dec
in
xchg
ins
icebp
or
jmp
mov
scas
push
push
cmp
dec
stos
push
adc
iret
xor
sbb
pop
dec
in
rep
mov
aam
stos
dec
cmp
mov
(bad)
mov
(bad)
aam
ret
xchg
mov
iret
or
jne
or
or
(bad)
push
sub
mov
fisttp
cmp
xchg
aam
ffree
jo
cwde
and
dec
std
mov
dec
mov
mov
adc
fldln2
pop
and
jl
fsubr
cli
mov
xlat
(bad)
and
mov
mov
leave
(bad)
mov
pop
and
mov
pop
dec
adc
shr
sbb
pushf
sub
scas
sub
xor
mov
sbb
hlt
mov
xchg
(bad)
fisub
jno
fstp
pushf
jmp
enter
push
mov
pop
je
out
mov
push
xchg
push
dec
pop
bnd
data16
push
xor
add
std
(bad)
mov
ins
leave
xchg
fwait
lds
stos
add
lea
pushf
nop
in
xchg
aas
cmp
ins
adc
or
sbb
push
daa
push
int
inc
pop
jae
sbb
daa
aas
lahf
imul
fwait
loop
pop
jl
(bad)
cld
sbb
ret
imul
outs
daa
loop
mov
repz
fsubr
push
push
adc
popa
sbb
jmp
jmp
rcl
pop
sub
repnz
mov
rol
sub
lods
shl
and
adc
shr
pop
mov
push
cmp
xchg
sbb
inc
(bad)
mov
mov
int
int3
push
aas
daa
ins
fisub
mov
dec
test
fwait
js
adc
dec
fisttp
call
pusha
js
popf
outs
jp
mov
mov
shl
cs
idiv
sbb
inc
into
aas
dec
sbb
imul
lods
aaa
inc
sub
mov
jns
push
cmp
push
or
retf
sar
mov
aad
xchg
scas
aad
fcmovne
cmp
mov
nop
(bad)
aam
sbb
xchg
and
xor
ds
sbb
xchg
cmp
pop
popa
jno
lea
adc
int
loope
cdq
mov
ins
and
xchg
stos
lods
sub
fstp
inc
and
out
sti
xchg
xchg
pop
fcmovne
retf
or
cmps
shr
inc
add
pop
(bad)
adc
jbe
ret
jle
aad
mov
cmp
cmps
popf
imul
jno
nop
aaa
adc
push
enter
mov
nop
pop
pop
bound
jge
push
fs
pop
add
xlat
cs
cwde
in
popa
sbb
shl
add
sub
inc
jmp
data16
mov
pop
and
outs
and
inc
cmp
ins
test
jo
ds
(bad)
mov
jg
sub
adc
push
xchg
daa
push
sti
mov
aas
sbb
pop
or
xor
inc
ror
mov
cmps
xchg
add
and
out
stos
mov
sbb
fld
jmp
sbb
push
dec
jnp
jnp
in
mov
and
cmp
pushf
xor
and
mov
in
sbb
mov
popa
loop
cmp
es
aaa
push
jnp
mov
adc
test
xchg
daa
mov
xor
gs
sub
jb
aaa
stc
loopne
iret
in
call
push
cmp
mov
mov
xor
push
or
fisub
lods
cmp
push
dec
out
in
adc
cld
pop
mov
pusha
div
pushf
imul
(bad)
lods
stos
xchg
inc
popf
hlt
es
inc
xlat
mov
pop
push
xor
sahf
nop
or
dec
rol
loop
xchg
jb
xchg
add
cli
mov
xchg
add
imul
xor
push
jmp
in
push
xor
test
jmp
dec
and
xor
mov
idiv
enter
(bad)
mov
or
push
dec
fidivr
rcl
fsubr
xchg
call
test
aam
loop
cmp
lods
std
aad
dec
je
and
shr
jecxz
or
push
cdq
sub
sub
push
fs
call
pop
gs
out
cwde
mov
xor
push
iret
or
pop
(bad)
scas
daa
out
and
or
in
pop
push
or
cli
pop
pop
loopne
cmp
call
in
xchg
popa
pop
fistp
fistp
outs
lock
sbb
and
dec
push
stc
aad
mov
nop
clc
lea
or
mov
sbb
mov
inc
push
shl
adc
int
adc
lods
movs
mov
mov
rcl
sub
xor
ror
call
inc
lods
sub
jle
aam
push
adc
pop
inc
lods
mov
push
push
xchg
xor
cmp
jle
stos
push
cwde
push
clc
xchg
bound
lods
lods
and
cmp
jb
dec
(bad)
mov
call
daa
and
mov
call
inc
inc
inc
not
movs
bswap
fs
sbb
lock
sbb
movs
jo
push
leave
mov
xchg
out
test
fistp
jle
sbb
add
dec
ds
(bad)
push
push
jg
push
loopne
cmp
int
or
fstp
adc
and
pop
and
stos
jb
xchg
push
mov
cmp
pop
movs
adc
mov
xor
icebp
stos
mov
cmp
in
add
jl
dec
push
adc
add
pop
movs
loop
ret
jo
int
xor
dec
jmp
and
pop
inc
xor
pop
dec
loop
iret
inc
gs
ins
std
imul
pop
lock
out
(bad)
ret
aas
scas
xor
adc
mov
pop
imul
mov
sahf
mov
or
(bad)
fdiv
pop
popa
sbb
xor
ja
ret
jno
jb
dec
pop
push
mov
iret
and
jmp
or
jmp
pop
jnp
faddp
imul
mov
call
inc
mov
scas
lea
cdq
mov
sbb
sbb
(bad)
daa
or
xor
mov
sti
lds
xchg
dec
mov
in
sbb
dec
inc
fwait
jns
mov
(bad)
retf
ss
aad
mov
cmc
icebp
retf
setl
jne
dec
ss
sbb
jae
dec
fistp
fild
aam
js
fistp
fstp
cmp
ja
sbb
mov
inc
je
push
add
(bad)
iret
std
scas
adc
xchg
xor
pop
movs
test
jno
dec
adc
add
jbe
jbe
jle
mov
xchg
cmp
stos
mov
ds
iret
frstor
jg
dec
pop
scas
fld
shl
adc
jecxz
fnstcw
jl
cdq
movs
scas
sbb
sub
cmp
cmps
stc
outs
xchg
push
sub
fistp
or
jg
push
fcomip
jns
push
jmp
inc
(bad)
ret
push
push
xchg
cmps
adc
adc
les
cmp
mov
adc
mov
out
fs
jo
mov
or
(bad)
cmp
lods
jmp
or
sar
and
test
mov
mov
xor
dec
mov
cs
mov
push
add
mov
aaa
retf
jnp
mov
into
leave
lods
imul
mov
arpl
test
(bad)
jg
mov
adc
mov
shl
cld
pusha
std
movs
jbe
mov
in
sbb
cwde
xchg
dec
inc
mov
xor
fistp
lods
ins
dec
je
and
repnz
sbb
aam
(bad)
xchg
outs
sti
loop
xor
sbb
sar
punpckldq
(bad)
ins
push
jnp
cld
or
pop
dec
sub
dec
stos
cdq
(bad)
dec
fbstp
cdq
pop
jb
retfw
nop
mov
xchg
mov
sbb
aas
or
cmc
fiadd
push
jg
cdq
push
cwde
push
mov
inc
out
(bad)
pop
xor
or
jmp
cmp
stos
or
test
retf
push
outs
jge
test
add
or
(bad)
xchg
dec
jmp
push
out
leave
jge
jmp
pop
sbb
mov
xor
mov
sub
call
enter
inc
dec
fwait
mov
push
push
(bad)
in
in
pop
or
fmul
adc
rcl
dec
out
xchg
push
mov
add
inc
sbb
ror
ins
repz
xchg
or
jne
mov
push
dec
jp
iret
inc
(bad)
ins
mov
aam
fwait
mov
add
jecxz
jge
fisub
add
lar
push
xchg
mov
call
mov
jno
pop
push
in
rcl
mov
pusha
test
jb
xchg
mov
(bad)
mov
ins
iret
or
ins
es
mov
lea
icebp
dec
in
mov
in
aad
(bad)
push
cmp
dec
imul
aaa
sub
lods
jb
xchg
test
repz
mov
xchg
stos
and
lds
call
ret
pop
out
fldcw
stos
fild
stc
ret
jg
data16
ret
rcr
(bad)
sub
pop
mov
xchg
out
sbb
push
xchg
ins
ror
inc
xchg
mov
test
shl
(bad)
pusha
loope
fisubr
nop
mov
pop
mov
jl
jmp
or
mov
sbb
jmp
enter
nop
pop
jecxz
fsubr
in
fucomi
xchg
and
cmp
int
push
test
cmp
mov
pop
xchg
inc
pop
icebp
fild
push
inc
push
push
in
and
jge
jbe
dec
jecxz
xchg
dec
fcomp
xor
dec
xchg
sbb
inc
adc
out
addr16
mulps
sub
cmp
pop
lods
lock
popf
sahf
int3
mov
pop
xchg
cmps
sbb
popa
xchg
adc
mov
shl
push
inc
sbb
push
inc
inc
jge
mov
rcr
cwde
dec
xor
adc
(bad)
adc
test
mov
xchg
into
pop
imul
sahf
xchg
mul
cdq
cmp
and
int3
cli
outs
cmps
pushf
pop
cli
jae
mov
mov
and
ins
pop
inc
jp
ins
mov
lds
push
jmp
fwait
lods
ret
test
xchg
fadd
mov
daa
shl
aam
xchg
lods
push
loop
movs
dec
ret
ins
sbb
inc
cwde
test
movs
mov
dec
cmp
aas
sub
pop
fimul
and
add
push
mov
das
cld
jnp
rcl
jnp
mov
sbb
sub
adc
add
xor
sub
push
ja
fsub
jge
or
mov
cmp
dec
pop
loope
(bad)
inc
ins
mov
nop
dec
xor
and
mov
cmp
jmp
data16
jnp
cwde
push
mov
mov
sub
jae
arpl
aam
mov
lea
push
or
movs
in
mov
stos
dec
adc
aam
ret
iret
lea
pcmpeqd
sbb
xchg
shr
jl
enter
mov
pop
mov
in
fmul
test
sub
fcomp
cwde
xor
(bad)
jno
inc
out
mov
in
jg
cwde
jecxz
lahf
add
xchg
dec
repz
ret
pop
popa
jge
mov
ja
in
retf
ror
rol
mov
sahf
stc
pop
fld
loopne
sahf
cs
add
adc
repz
xor
in
rcr
addr16
xor
jg
mov
xor
inc
inc
shl
rcl
sbb
imul
dec
bound
push
add
shl
xor
loope
cld
(bad)
cmp
cmc
lea
mov
leave
sti
xchg
dec
add
add
in
stc
push
(bad)
and
enter
push
iret
gs
por
sub
es
jle
daa
inc
movs
icebp
dec
sub
lock
paddusw
pop
xchg
fimul
pushf
stc
scas
out
imul
movs
xor
adc
test
fnstsw
push
sysret
call
lods
daa
and
mov
inc
sbb
arpl
xchg
sub
mov
cmps
push
out
push
mov
outs
iret
push
mov
out
push
xchg
add
popf
(bad)
mov
adc
int
cld
lods
in
or
and
pushf
mov
inc
inc
mov
inc
in
jmp
stos
into
jp
sub
rcr
sbb
jmp
and
mov
rcr
jecxz
jmp
and
ins
mov
pop
xchg
mov
(bad)
jno
inc
jns
sahf
jns
adc
sbb
sub
add
std
xchg
scas
bound
pop
cwde
inc
cmp
push
(bad)
cdq
rol
mov
xchg
inc
fadd
in
jp
in
inc
pop
mov
add
cli
inc
add
icebp
mov
das
js
clc
shr
ror
lds
push
in
enter
and
sahf
xor
or
leave
mov
fimul
inc
lods
shr
pop
lods
sbb
outs
mov
call
into
push
ret
imul
pop
sti
pop
ret
adc
push
xchg
add
jns
bnd
fld
loope
or
ret
xor
repnz
cmp
and
sbb
sti
add
lods
mov
push
sar
outs
push
imul
mov
in
fsub
adc
pop
int
jae
xor
or
test
inc
repz
pushf
lds
xchg
sub
add
repz
mov
and
(bad)
mov
mov
popf
out
adc
test
mov
lock
std
dec
mov
cdq
fisttp
cmp
test
xor
push
scas
call
and
push
push
outs
cmp
xor
and
lods
out
adc
shr
adc
xchg
fsubr
push
adc
jl
jae
or
(bad)
jecxz
clc
push
daa
and
in
test
lahf
daa
repnz
fisttp
jmp
push
xchg
dec
aas
fiadd
xchg
jmp
ficom
movs
mov
das
fild
(bad)
out
pushf
daa
mov
mov
(bad)
arpl
js
sbb
test
jge
icebp
cmps
je
push
scas
inc
fisubr
and
xchg
mov
sbb
jno
fsub
popf
sbb
xor
das
test
sub
push
or
sahf
outs
pop
and
hlt
imul
jecxz
popa
loope
ret
xor
and
jl
mov
js
test
mul
shl
mov
cli
push
xor
sub
in
cdq
jae
sub
add
and
inc
mov
lds
icebp
in
inc
test
stos
xchg
das
mov
dec
sti
and
dec
test
repz
in
mov
(bad)
fisttp
sbb
mov
daa
imul
imul
call
call
jge
clc
mov
arpl
pop
(bad)
in
jmp
mov
xchg
push
fabs
fst
or
shr
xchg
push
mov
inc
out
push
and
inc
out
ins
cmp
mov
xor
inc
dec
fisttp
cmp
loopne
(bad)
lea
out
jb
and
hlt
pusha
push
daa
mov
sub
push
jmp
jecxz
mov
fsubr
xor
sbb
sub
(bad)
aas
xor
jle
out
in
daa
inc
xchg
cmp
pop
or
jb
mov
pop
xchg
cmp
sub
daa
xor
and
int3
pop
mov
jnp
in
popf
ins
addr16
push
shl
cmp
push
fiadd
outs
xchg
ja
popa
lods
pop
pop
lock
push
jbe
nop
test
mov
rcr
jb
out
mov
gs
je
xor
jne
xchg
cmp
xor
ss
ret
stos
stos
mov
popf
les
dec
repz
(bad)
rcl
adc
push
inc
ffreep
mov
nop
pop
cmc
scas
push
xor
mov
lods
mov
dec
test
inc
xor
jmp
xor
outs
movs
or
mov
dec
adc
lods
daa
or
call
movs
pop
jl
push
push
inc
cmp
jg
jno
xor
dec
shr
pop
sbb
pusha
cs
popa
icebp
cmp
lds
pop
mov
mov
int
jecxz
cmp
fwait
mov
jp
ds
or
scas
addr16
or
int3
lds
pop
loop
ret
adc
ja
jb
jnp
mov
jne
cmp
dec
sbb
fidiv
mov
xor
fist
xchg
mov
int
jb
mov
das
aas
test
jg
test
outs
pop
mov
mov
mov
or
fadd
mov
mov
dec
dec
sub
mov
fistp
push
addr16
push
inc
out
xchg
or
jle
jg
int3
cdq
cmps
fs
adc
push
jnp
rcr
push
adc
mov
fadd
(bad)
sbb
or
and
adc
xlat
cmp
repnz
xor
inc
add
or
fidivr
sub
sub
aad
sahf
cmp
out
rcr
lea
inc
fmul
scas
xchg
les
cld
ins
aaa
sbb
dec
push
das
dec
jmp
aas
xor
adc
div
cmps
clc
repz
add
ja
sbb
add
and
jb
pop
pusha
pop
add
std
cmp
push
fmul
inc
sub
movs
(bad)
addr16
aam
mov
cmp
jg
pusha
inc
popa
mov
ret
in
mov
jae
icebp
ret
(bad)
loop
inc
aaa
je
lods
push
ds
cmp
xor
jecxz
bound
mov
add
call
mov
dec
test
jmp
or
add
out
jbe
sbb
imul
fidivr
pop
scas
sbb
cmp
imul
popf
jae
mov
fcom
fild
adc
int
and
dec
outs
xor
ins
mov
shr
and
retf
fstp
mov
(bad)
ja
test
movs
cmp
test
iret
push
js
xor
sbb
stos
xchg
push
add
fwait
mov
cld
gs
cmp
in
mov
adc
add
enter
sbb
sbb
and
xchg
ins
adc
xor
adc
movs
xor
mov
mov
xchg
loopne
fwait
inc
popa
and
mov
repnz
mov
add
fnstcw
jp
fidivr
inc
cdq
mov
sbb
out
dec
cmp
inc
jno
adc
sti
mov
jmp
icebp
cmp
es
jecxz
and
stc
xchg
cmp
or
add
(bad)
cmp
popf
xor
syscall
sub
(bad)
out
push
clc
(bad)
sbb
dec
add
je
adc
inc
scas
fnstenv
xchg
cld
push
repnz
sbb
xchg
mov
sbb
lods
int
adc
sub
test
outs
test
mov
sbb
jno
jl
rol
adc
jo
jl
mov
cmp
inc
out
push
movs
sbb
or
inc
pop
sti
test
ret
mov
cwde
xchg
js
inc
adc
or
ja
and
dec
sub
sbb
retf
jns
jne
xchg
add
test
ins
cmc
sbb
fdivp
into
imul
xchg
scas
sbb
adc
mov
(bad)
mov
daa
sti
addr16
not
out
cmp
aas
jae
pop
inc
mov
adc
iret
pop
stos
fnstsw
mov
pop
loopne
mov
adc
dec
loope
dec
and
daa
ds
adc
jb
push
xor
jle
ins
push
push
push
popf
cmp
inc
fsub
inc
in
pop
push
inc
jmp
rol
dec
inc
xor
xchg
mov
or
call
ins
call
xor
and
(bad)
push
or
dec
gs
sar
mov
inc
cmp
scas
sahf
(bad)
jge
stc
in
adc
mov
aad
push
jp
in
push
jo
idiv
xchg
sub
inc
cmps
mov
movs
or
add
sti
cwde
push
push
loope
nop
mov
popa
es
and
xchg
jo
and
in
call
and
stc
dec
add
jge
jo
adc
add
xor
inc
adc
pop
mov
into
mov
sahf
pop
enter
jns
ja
jl
or
es
out
fwait
cmp
adc
pop
cs
sbb
fidivr
jge
daa
add
push
xchg
dec
in
retf
int
inc
mov
add
lods
imul
aaa
and
loop
mov
in
aas
mov
in
mov
pop
mov
std
pop
mov
or
int3
pop
cmps
lock
repnz
movs
call
jle
and
adc
adc
mov
and
out
cmp
mov
int3
or
dec
fs
pusha
push
jb
mov
loope
mov
ret
loop
adc
leave
inc
inc
clc
mov
inc
mov
dec
mov
add
rol
adc
movs
mov
in
xchg
movs
add
mov
lods
and
mov
sub
nop
xchg
push
aad
mov
ins
adc
pop
das
add
lds
ins
movs
sub
outs
sahf
jae
in
add
stos
and
mov
jne
leave
gs
mov
sub
ins
and
int3
out
xor
imul
inc
and
stos
hlt
xor
pusha
and
out
popf
jae
iret
inc
cmps
(bad)
retf
cld
jecxz
push
dec
xchg
push
sbb
dec
jge
arpl
fld
mov
(bad)
dec
pop
inc
movs
dec
xchg
(bad)
aas
mov
mov
stc
call
call
push
loopne
lds
fisubr
dec
add
adc
pop
mov
mov
lahf
fcmovnbe
sbb
lahf
stc
mov
outs
lods
pop
popa
dec
inc
hlt
pop
repz
xlat
cli
xchg
cmc
gs
adc
and
sbb
xchg
ror
out
xor
pop
xchg
test
les
sar
sti
mov
ret
movs
inc
mov
mov
pop
dec
int3
ror
sub
push
sub
in
nop
in
sbb
adc
out
sbb
mov
scas
ret
or
pop
pop
push
or
stc
jo
leave
inc
xor
xchg
js
cmps
cmps
(bad)
jno
ror
sbb
mov
vaddps
jbe
adc
xchg
mov
cmps
add
and
ins
and
inc
pusha
mov
cs
adc
mov
fild
dec
jbe
outs
inc
jl
sub
inc
mov
pop
xor
xor
lock
mov
out
(bad)
jne
int
mov
push
push
xor
pop
aam
aaa
lock
es
jmp
enter
out
push
ror
jbe
or
cmps
fst
jns
xchg
(bad)
jb
dec
xlat
ja
push
push
xchg
mov
add
xchg
mov
jg
cmp
in
xchg
push
add
ret
xchg
fisttp
pop
pop
inc
fist
pop
xor
add
leave
addr16
rcl
mov
leave
push
pop
scas
mov
test
out
(bad)
imul
retf
repz
jmp
pop
pop
sar
push
xchg
push
push
pop
scas
(bad)
loopne
jo
fisttp
add
cs
(bad)
cli
dec
mov
shl
xor
add
nop
and
push
lahf
mov
or
add
xlat
into
sbb
push
movs
loopne
cmp
inc
retw
inc
in
and
and
stos
push
(bad)
xor
(bad)
jo
mov
pop
ret
xor
adc
retf
das
or
popa
add
lods
(bad)
jnp
inc
ins
ror
jp
sbb
call
sub
or
popf
or
cmp
mov
jno
das
pop
ror
add
aad
mov
adc
ds
xchg
fldenv
mov
sbb
daa
fisub
int3
sahf
call
je
jp
inc
push
fisttp
dec
sbb
(bad)
sbb
dec
leave
ds
add
jo
push
int3
adc
mov
add
leave
out
(bad)
push
lods
out
jnp
loope
xchg
dec
test
xor
aad
or
js
dec
daa
xchg
dec
iret
mov
sub
add
in
test
fdivp
dec
aad
or
je
inc
nop
mov
data16
and
add
mov
mov
mov
and
mov
fiadd
push
add
and
out
and
lahf
mov
mov
pop
mov
sbb
pop
ret
mov
and
movs
inc
or
popf
add
pusha
or
imul
jbe
icebp
addr16
and
xor
and
adc
push
ret
fs
dec
inc
cmps
xchg
arpl
push
sbb
sahf
scas
out
jecxz
scas
cwde
sub
fcomp
fcomip
inc
pop
call
or
xchg
inc
fs
aaa
mov
cmp
cmp
push
scas
fdivrp
into
out
adc
shl
adc
and
push
sahf
pop
dec
daa
pop
sti
jmp
sbb
and
push
push
stos
sbb
pop
sbb
xchg
sub
add
mov
outs
pop
loope
scas
addr16
bound
mov
iret
data16
jns
loopne
cwde
sub
gs
jmp
stc
and
in
mov
inc
ror
sbb
movs
cmp
sbb
aam
mov
rcr
scas
loope
adc
xchg
int3
out
xchg
inc
dec
push
lock
lods
push
jle
inc
sub
bound
xor
mov
enter
repnz
iret
mov
iret
xchg
loop
cs
mov
cmps
push
cmp
jl
inc
push
pop
mov
cmps
add
icebp
mov
cmps
or
add
jle
pop
cmp
nop
or
loope
pop
mov
sub
std
inc
mov
stos
jae
jg
xor
mov
neg
cmp
dec
add
test
jle
nop
inc
cmps
sar
xor
jae
pop
dec
dec
clc
(bad)
shl
js
aam
xchg
mov
ret
push
jp
mov
aaa
xchg
outs
test
ja
add
push
xchg
add
push
xchg
test
int3
pop
leave
push
sub
clc
and
dec
lock
fstp
sbb
cmp
(bad)
stc
sub
xor
mov
(bad)
in
push
pop
sbb
jecxz
mov
aam
aad
mov
xlat
inc
ja
cmp
adc
ret
mov
rcl
(bad)
mov
mov
aas
xchg
inc
mov
scas
xchg
ins
imul
pushf
and
in
outs
aam
mov
add
mov
xlat
mov
adc
add
shl
shl
daa
add
pop
xchg
pop
ja
adc
sub
add
les
mov
inc
test
pop
and
mov
mov
dec
lahf
test
(bad)
cwde
test
add
mov
inc
cmp
ja
cld
aam
leave
adc
bound
aad
out
daa
je
sbb
xor
or
lods
daa
popa
pushf
mov
mov
lods
jle
jle
mov
mul
dec
cmp
ss
pop
and
arpl
mov
lds
push
pop
push
mov
(bad)
pop
adc
test
push
pop
mov
call
aam
mov
repz
ins
cmc
std
aas
mov
cdq
out
fidivr
fsubrp
fsub
xor
movs
cmc
movs
ins
mov
push
mov
pop
dec
jle
push
sbb
xlat
jle
scas
mov
lods
mov
loop
xor
cmps
loop
in
leave
sbb
dec
mov
jecxz
or
gs
mov
jnp
inc
data16
jbe
sbb
jo
mov
adc
out
movs
ret
mov
sbb
or
test
popf
mov
pop
cli
hlt
jmp
jne
test
test
jp
cmp
and
and
mov
test
cmp
mov
inc
stos
ret
loop
cmp
mov
jl
push
daa
adc
jmp
in
das
xchg
push
icebp
sti
cmc
and
mov
imul
pop
dec
push
add
lods
in
mov
pop
pop
jge
dec
adc
push
mov
sub
sub
xor
mov
mov
icebp
mov
cmps
adc
(bad)
mov
inc
test
scas
mov
mov
or
push
adc
push
jnp
lods
lea
or
inc
(bad)
jmp
mov
fwait
cmps
inc
adc
pop
xor
ret
xchg
cmp
ss
aad
jle
mov
sahf
push
jmp
call
add
into
add
outs
push
jp
cmp
cmp
lods
mov
adc
retf
data16
cwde
(bad)
or
stc
je
mov
push
mov
sbb
popf
int
scas
call
xchg
push
data16
and
xor
(bad)
lods
pushf
frndint
or
arpl
leave
dec
sbb
js
inc
gs
rcl
xchg
repz
jmp
mov
sbb
in
jge
jp
adc
pop
push
sbb
sub
lock
lock
cmp
sbb
xor
sbb
enter
rol
inc
push
push
aaa
movs
(bad)
leave
aam
pop
out
aas
cdq
shl
shl
jbe
xlat
cwde
call
add
or
xchg
nop
loop
pop
out
pop
out
sbb
dec
or
mov
or
adc
mov
mov
aaa
jmp
pcmpgtw
ret
jmp
imul
daa
mov
movs
stmxcsr
inc
jecxz
int
shl
ret
mov
movs
mov
rol
(bad)
adc
sbb
and
ja
pop
xchg
xor
adc
push
adc
xchg
pop
jnp
mov
mov
ret
xor
pop
popa
cwde
shl
push
xchg
test
in
adc
inc
popf
dec
xchg
or
xlat
jns
outs
bound
pop
enter
mov
pop
pop
push
adc
outs
inc
adc
test
add
jb
stc
lahf
xchg
or
sub
push
mov
cli
sub
mov
(bad)
mov
fwait
sub
enter
arpl
jmp
lods
and
sub
mov
js
cmps
icebp
inc
enter
xchg
add
or
imul
add
cmp
movs
xchg
adc
sahf
(bad)
xchg
or
aas
test
in
jmp
(bad)
mov
push
aad
push
push
mov
add
gs
ja
ins
fdivr
rol
xor
pop
sub
pop
addr16
dec
sahf
mov
jge
cmp
repz
push
adc
pop
arpl
fmul
pusha
dec
retf
adc
mov
inc
test
lods
or
mov
retf
xchg
or
mov
outs
or
jp
es
xor
mov
repnz
xchg
cmp
mov
(bad)
iret
(bad)
push
fldcw
mov
cmc
ja
rcr
pop
fmul
shr
or
cwde
and
std
ss
out
jl
sbb
fcom
jg
ror
inc
retf
neg
sahf
outs
test
sbb
xor
jnp
sti
pop
shl
push
push
or
jmp
test
fadd
push
jmp
packsswb
jbe
cmp
jmp
add
clc
mov
popa
psubq
sbb
mov
fiadd
mov
jmp
mov
clc
ror
mov
xor
mov
mov
(bad)
sbb
mov
fs
and
rcr
lods
bound
sub
repz
repz
xor
lods
jmp
aaa
stc
and
test
xor
mov
inc
and
bound
sbb
je
imul
ret
push
sbb
push
mov
fwait
cmps
jnp
push
lods
cwde
adc
mov
mov
out
dec
pushf
movs
mov
adc
sub
movs
cdq
mov
repz
inc
adc
inc
dec
mov
xchg
movs
jle
sbb
jbe
jns
jnp
popf
push
and
cmps
loopne
cmp
xor
sub
and
or
lea
add
int
sub
imul
cmp
dec
push
ins
mov
add
or
mov
push
cmp
sub
not
pop
cmp
loope
or
inc
pop
jle
mov
cmp
pop
scas
jno
jge
shl
addr16
cwde
popa
pop
dec
jmp
adc
frstor
mov
aaa
mov
lahf
mov
imul
aad
adc
inc
iret
(bad)
neg
stos
in
inc
pop
or
bound
inc
rcr
in
fsubr
sub
mov
mov
in
cld
dec
ror
mov
xchg
fwait
js
xor
test
test
xchg
mov
hlt
ret
adc
push
(bad)
xchg
ins
mov
int
push
jae
xchg
ins
ja
jecxz
mov
lods
sub
mov
sub
xor
jp
ins
and
xor
push
mov
add
mov
pop
das
mov
rcr
xchg
retf
add
imul
sbb
mov
xchg
mov
or
shr
dec
inc
out
faddp
pop
pop
pop
pop
xor
(bad)
mov
jmp
sbb
int
(bad)
dec
inc
fisttp
sub
adc
pop
cli
dec
mov
retf
shl
xchg
mov
pop
xchg
test
adc
mov
(bad)
cmc
pop
pop
mov
retf
adc
push
jp
pop
fisttp
(bad)
jl
cs
push
inc
or
cmp
cmp
mov
(bad)
sbb
jp
jmp
xor
sahf
pop
(bad)
out
call
add
xchg
dec
lock
jae
jmp
cmp
aas
sbb
push
cmp
les
js
push
add
jmp
adc
pop
sub
mov
pop
push
fisttp
ret
or
xchg
mov
or
push
push
scas
mov
sahf
jl
bnd
sar
dec
xchg
test
leave
test
mov
in
pop
cmps
mov
and
test
fiadd
jne
mov
cmps
inc
adc
cwde
pop
mov
or
cdq
sete
js
shr
cmp
pop
outs
das
xlat
mov
push
sbb
lds
xor
push
mov
jp
dec
and
dec
cmp
inc
pop
cld
cmp
add
js
sub
mov
add
jo
ja
mov
test
xchg
push
cwde
dec
in
jmp
add
ins
xlat
dec
test
jmp
pop
scas
data16
ss
cli
mov
stos
dec
pop
xor
or
adc
emms
scas
frstor
push
ins
dec
mov
hlt
icebp
inc
xchg
mov
pop
fidivr
xchg
pop
cli
or
outs
shl
mov
and
(bad)
fadd
push
repnz
sbb
daa
jnp
mov
xchg
mov
fsub
and
bound
cld
and
jge
pushf
in
inc
mov
ins
mov
add
xor
xor
adc
xchg
push
in
mov
addr16
retf
daa
add
mov
jnp
inc
push
xchg
or
adc
(bad)
push
in
xor
ja
mov
out
ret
xchg
test
and
js
ds
int
loope
test
push
sbb
pop
inc
jno
add
sahf
push
loope
or
mov
mov
call
mov
xchg
addr16
xor
dec
test
sti
jge
jecxz
add
repz
rcl
int
push
sub
adc
clc
xor
add
mov
neg
mov
sub
xlat
xor
fwait
loopne
add
xor
and
sub
fldl2t
shl
ret
pusha
ins
mov
pushf
nop
mov
or
test
mov
sbb
jo
fmul
sub
inc
loopne
xchg
or
jo
ins
mov
out
inc
dec
lea
adc
popf
pop
jbe
sub
or
adc
mov
jmp
jb
(bad)
mov
sti
aas
es
in
sub
push
(bad)
jmp
shl
jl
call
into
js
jle
aad
lods
or
jg
or
aad
iret
test
pusha
pop
jecxz
cli
mov
fpatan
pop
cmps
test
and
mov
pusha
push
cdq
sbb
cld
pop
xchg
pop
pop
jmp
ss
mov
loopne
jmp
stos
push
loop
pushf
mov
cmp
lock
pop
jae
mov
ins
(bad)
cmp
dec
xchg
push
loope
int
add
xchg
call
mov
sar
add
pop
enter
fldcw
or
mov
int
jmp
or
jb
cmp
lods
add
pop
test
movs
dec
pop
icebp
repz
mov
rep
movs
fbld
outs
pop
ins
cmp
mov
adc
inc
pop
pop
(bad)
pop
jno
xchg
sbb
out
xchg
fimul
test
pop
jmp
das
lea
push
dec
xchg
jns
xor
ror
dec
lods
xor
xor
push
mov
neg
mov
xor
dec
pop
jl
adc
or
gs
inc
iret
mov
or
sub
je
pop
add
ret
jp
fisubr
push
cdq
les
add
pop
adc
mov
xchg
add
fimul
and
test
xchg
(bad)
dec
xor
push
or
bound
int
rcl
add
cmp
cmp
pop
arpl
neg
jns
xchg
shr
fbstp
or
mov
je
mov
xor
mov
out
cdq
cmp
xlat
(bad)
mov
mov
enter
aad
lods
pop
adc
pop
xchg
xchg
pop
jg
pop
lea
push
lods
adc
mov
jne
fcmove
sub
cmps
movs
push
adc
adc
ja
imul
xchg
mov
push
out
cmp
(bad)
push
pop
dec
pop
push
clc
mov
sub
(bad)
aam
xchg
mov
xor
pop
(bad)
enter
aad
pusha
inc
add
mov
jmp
imul
and
sar
adc
pop
pop
jno
bound
loopne
and
push
mov
js
mov
test
repnz
pushf
adc
repnz
sbb
in
je
pop
mov
call
int3
xor
cmps
push
mov
lea
jnp
adc
mul
mov
mov
dec
mov
idiv
std
(bad)
jmp
mov
ror
into
mov
pop
in
int
xchg
int
cld
mov
stc
les
movs
pop
call
shl
adc
dec
mov
cmps
gs
cmc
adc
sub
push
push
(bad)
lods
pusha
cmps
sbb
mov
xor
out
rcl
mov
or
dec
mov
jmp
js
int
xor
mov
adc
add
shl
push
xchg
and
fadd
mov
jns
(bad)
cmc
cmps
mov
cli
and
addr16
arpl
sub
std
xchg
std
pop
cwde
mov
mov
loop
mov
add
test
leave
(bad)
pop
pusha
sbb
popf
and
add
test
xchg
(bad)
cmc
pop
ret
mov
and
adc
ss
fiadd
sub
shr
push
push
mov
jno
jge
add
mov
repz
ss
aad
push
call
cmp
(bad)
aad
sbb
push
push
pop
lods
mov
add
rcr
jg
out
pusha
jne
cmc
mov
rcr
push
dec
jns
repz
sub
ret
je
out
mov
call
mov
fldcw
inc
or
pusha
(bad)
call
mov
imul
mov
stos
jl
cmp
enter
call
in
adc
(bad)
test
loopne
ds
fidiv
mov
ins
dec
lock
ins
loope
adc
push
retf
mov
mov
push
in
test
mov
push
(bad)
movs
inc
mov
lods
mov
mov
mov
jp
adc
les
int
(bad)
jb
int3
xlat
push
push
movs
mov
sahf
jmp
(bad)
js
cmp
(bad)
push
adc
mov
xchg
xor
jbe
sbb
mov
adc
loope
ror
xchg
mov
rcl
sub
cmp
push
pop
mov
das
push
sbb
mov
pusha
scas
adc
xor
lea
mov
pop
dec
fwait
shr
sar
shl
daa
pop
push
jle
push
les
or
das
mov
(bad)
scas
or
out
repz
xor
adc
xor
imul
and
cmps
sahf
inc
retf
jmp
jmp
je
out
std
lock
mov
lock
movs
mov
inc
pop
sbb
(bad)
repz
gs
jle
pop
sbb
lds
add
(bad)
and
push
scas
or
mov
push
jl
nop
cmp
mov
xchg
pop
int3
shl
mov
dec
sbb
jo
in
lock
sub
in
adc
inc
sbb
(bad)
xlat
xor
out
push
lods
jno
addr16
dec
xlat
xor
dec
mov
pop
stc
(bad)
retf
cmp
hlt
pop
lods
pop
inc
bound
aaa
xchg
in
xchg
jecxz
add
jns
stc
outs
push
dec
test
arpl
xchg
xlat
lods
out
or
pop
and
out
rol
clc
hlt
add
sub
sbb
ret
aaa
dec
std
scas
(bad)
cmp
sbb
cmp
cmp
gs
js
jmp
pop
xchg
int
test
gs
out
mov
xor
xchg
xchg
xchg
sbb
xor
call
push
stc
lahf
icebp
aaa
mov
in
lock
or
adc
(bad)
loop
and
xchg
add
in
adc
mov
ror
dec
cmc
mov
imul
leave
adc
test
cmp
mov
rcr
in
pop
int
sub
add
cmc
jo
pushf
mov
rcr
jmp
sbb
call
mov
jge
lahf
cmp
out
lds
out
fdivr
call
outs
push
xchg
xchg
pop
xor
movs
data16
movs
rol
call
outs
fldl2t
jbe
test
mov
mov
adc
add
jmp
leave
ss
jae
xchg
jmp
call
stos
push
jp
shl
retf
sbb
push
daa
leave
dec
add
(bad)
mov
dec
in
and
sar
stos
lods
jbe
sbb
sbb
and
out
adc
and
pop
cli
cmc
out
cmp
pop
sbb
fs
mov
clc
inc
jns
push
into
add
add
sub
adc
cmps
(bad)
addr16
imul
ror
sbb
das
sub
lock
jmp
push
hlt
mov
or
sub
fucomi
cmc
and
test
inc
ret
and
adc
sbb
add
movs
int3
adc
mov
dec
mov
imul
test
push
or
inc
xor
ret
stos
add
mov
mov
pop
pop
jmp
ja
popf
jb
loop
les
and
scas
mov
rol
jno
inc
rcr
ins
cmp
adc
dec
je
shl
imul
add
popa
iret
or
call
movs
std
pop
addr16
cli
jb
push
mov
pop
out
add
cmp
sub
mov
and
iret
ins
div
ficom
xchg
dec
dec
cmp
or
xchg
scas
jo
xrelease
mov
rol
rcl
mov
sbb
fcom
and
sub
add
mov
push
jne
clc
ret
sub
enter
retf
mov
pop
ss
sub
or
test
xor
sub
inc
sahf
jl
add
js
jg
cwde
xchg
mov
pop
addr16
fcom
and
out
into
fstp
push
dec
sahf
jo
ss
pop
out
imul
je
in
mov
add
push
jne
mov
test
inc
js
push
adc
dec
xor
or
push
sub
dec
jbe
test
jp
jns
pop
add
cmps
(bad)
xlat
out
pop
test
pop
imul
and
dec
adc
xchg
push
sub
push
or
aas
dec
mov
push
iret
and
dec
cwde
icebp
pop
pop
paddb
outs
call
dec
dec
dec
std
pop
xchg
mov
xor
adc
cmp
mov
repnz
(bad)
pop
sbb
xor
out
push
or
js
clc
sti
cmp
mov
sub
dec
fnstcw
enter
loop
adc
scas
inc
cmp
pop
mov
jb
or
ja
mov
jo
mov
push
xor
ja
mov
jne
popa
(bad)
aas
jle
daa
or
ds
push
inc
lea
adc
mov
cmc
scas
or
arpl
(bad)
sub
sub
pop
adc
rcl
cdq
cmp
xchg
dec
push
cmp
mov
xchg
data16
inc
out
outs
adc
popa
xor
jp
push
fistp
ror
xchg
push
test
ss
mov
adc
sbb
xchg
rol
pop
xchg
in
aaa
and
dec
mov
jle
mov
xlat
cmp
mov
jge
fmul
les
xor
dec
ret
int
and
retf
dec
stos
mov
xor
fmulp
sbb
(bad)
rcr
xor
mov
pop
xor
cmps
push
stc
xor
das
xor
jmp
shl
add
scas
neg
cmp
or
ret
mov
cmp
lods
les
mov
ja
ds
retf
xlat
pushf
ss
pushf
inc
stos
clc
aad
xor
and
repnz
and
pop
out
dec
mov
push
repz
push
xchg
inc
push
in
push
test
and
xchg
into
sbb
outs
outs
pop
loope
push
add
push
data16
scas
mov
iret
mul
or
not
cs
and
fmul
mov
xor
cs
frstor
inc
pop
mov
pop
mov
add
sub
cmc
into
pop
push
push
xchg
mov
or
cdq
imul
sbb
js
xchg
imul
dec
fiadd
or
cmp
mov
cwde
ja
and
mov
adc
(bad)
mov
dec
addr16
fild
shl
inc
sbb
test
inc
pop
xchg
cmps
pop
aaa
mov
mov
sub
adc
cmps
sbb
imul
ja
out
retf
push
cmp
cmp
outs
xchg
rcl
sbb
xchg
xlat
pop
jne
aad
in
cli
xchg
push
enter
xor
imul
in
push
call
cmp
daa
hlt
icebp
movs
mov
add
mov
movs
std
daa
fnstcw
bound
(bad)
xchg
sbb
int3
xchg
push
cmps
jb
cmp
jne
aad
inc
mov
cmc
mul
ins
xchg
call
jae
or
xchg
adc
outs
cmp
push
inc
in
or
outs
fst
push
jno
or
or
fsubr
test
repnz
mov
es
or
ins
inc
sbb
icebp
fwait
clc
stc
cli
mov
push
loop
imul
call
je
inc
cs
mov
pushf
jg
mov
mov
call
add
mov
dec
sub
movs
stos
invd
pop
xchg
inc
xor
inc
aam
xchg
loopne
pop
mov
aad
pop
mov
jge
mov
fist
sub
retf
dec
push
sbb
retf
ds
dec
aad
nop
dec
sub
(bad)
and
inc
push
xlat
dec
enter
sti
jecxz
cs
pop
(bad)
loop
cmp
ret
rcr
(bad)
mov
cmp
sbb
jg
mov
jmp
mov
jmp
test
dec
cmp
addr16
adc
mov
mov
imul
shl
xor
aad
inc
cmps
loop
add
ret
pop
(bad)
mov
cmp
pop
int
lods
test
ror
popa
in
fsub
xor
or
mov
cmps
fst
aad
cmp
in
xchg
(bad)
jb
mov
push
pop
(bad)
inc
inc
les
(bad)
ins
stc
and
imul
mov
adc
cmps
mov
sub
jne
adc
sbb
xchg
(bad)
clc
loope
fld
mov
cmps
cwde
leave
mov
xchg
jp
(bad)
in
jae
pop
stos
hlt
enter
repnz
test
adc
jns
loopne
pop
out
nop
stos
dec
idiv
push
loopne
xchg
out
sbb
push
add
inc
xchg
mov
mov
add
ja
shl
lods
out
adc
pop
jo
jp
(bad)
jae
mov
mov
sbb
sbb
outs
adc
cld
cmps
inc
xchg
sub
neg
ret
pop
mov
dec
lods
iret
(bad)
inc
cmp
nop
adc
xor
test
jmp
xchg
add
adc
and
imul
mov
and
cmps
cmp
es
adc
cdq
mov
int3
loop
or
jg
and
mov
call
mov
pushf
ret
xor
xor
push
mov
add
adc
fist
fwait
ret
add
addr16
stos
cmp
leave
std
test
jle
test
inc
jecxz
pavgb
call
push
mov
jmp
push
loopne
jo
ins
sub
jmp
mov
push
pop
rcr
and
push
stos
mov
test
push
test
out
or
mov
inc
cmp
cmp
cmp
cld
ja
xchg
jo
pop
in
aad
cmp
jbe
in
adc
mov
and
push
pop
int3
call
xor
xor
lea
cmp
leave
test
mov
pop
out
jb
sbb
push
and
gs
fdiv
fucomip
cmp
cld
or
xor
pop
or
sti
xrelease
test
push
les
xor
popf
mov
and
pop
dec
lods
mov
loope
aas
add
mov
cmp
sbb
inc
push
push
(bad)
je
test
cmps
mov
cmp
cmp
repnz
es
mov
add
cmp
sbb
inc
adc
inc
inc
adc
xchg
jns
inc
mov
cmc
mov
sub
add
mov
popa
push
mov
dec
push
mov
mov
mov
pop
movs
iret
mov
mov
ror
jmp
in
jno
sti
arpl
(bad)
adc
inc
add
or
sub
mov
fs
into
add
outs
aad
mov
pop
cmp
lea
rcl
mov
push
cmp
aad
cmps
or
mov
(bad)
mov
fdivr
fsub
push
popa
lds
ins
mov
test
dec
mov
out
cs
sub
push
cmc
push
add
jae
fndisi(8087
mov
cdq
and
mov
int3
jg
pusha
cmp
gs
sbb
or
stc
ins
xor
xchg
sahf
cmp
sub
add
icebp
xor
pusha
leave
or
iret
into
imul
xor
test
jmp
xor
push
call
dec
fsub
xor
stos
ds
mov
push
mov
sbb
sub
aam
or
jg
mov
iret
popf
inc
pop
xchg
cmp
push
pop
sbb
cld
das
jmp
cmp
mov
adc
jne
and
or
call
and
fidiv
daa
bound
xlat
mov
ret
push
mov
pop
xlat
and
pop
mov
ins
push
mov
mov
or
arpl
and
ret
sbb
aaa
xor
or
sub
push
retf
popf
and
or
sub
movs
pop
iret
loop
mov
rol
dec
(bad)
sbb
(bad)
iret
fs
je
ss
out
inc
ja
aaa
cs
movs
pop
ins
fisttp
jne
pop
sbb
cmp
pop
and
popa
xchg
scas
mov
icebp
dec
and
iret
pop
sar
lahf
cld
sub
mov
dec
rcl
mov
push
sbb
nop
aaa
rol
arpl
and
or
loope
pushf
sbb
jl
cmp
pop
pop
xchg
cmc
add
cmps
push
mov
outs
inc
ja
mov
mov
ins
data16
jecxz
cmp
inc
mov
mov
add
sub
push
adc
mov
add
stos
lock
(bad)
clc
adc
sbb
call
cmp
clc
xchg
xchg
dec
sbb
jae
push
and
cmps
out
sti
cwde
pop
push
ror
mov
scas
pop
stos
cmc
cdq
lods
mov
inc
cdq
xor
cmps
jmp
popa
lods
shl
push
xor
clc
xchg
sti
or
bound
int
and
mov
jb
pop
lahf
add
mov
enter
out
or
jmp
(bad)
mov
fs
mov
shr
add
dec
add
or
je
les
aaa
pop
xchg
cwde
pop
das
dec
dec
and
sar
cmp
jg
int3
fcmove
mov
mov
inc
into
cdq
xchg
outs
sub
fsub
imul
stc
jbe
retf
add
adc
mov
dec
push
ret
cli
sub
daa
mov
mov
jno
add
adc
pop
imul
lds
mov
or
jg
mov
pop
pop
out
mov
clc
mov
sahf
push
pop
and
mov
fistp
mov
mov
pop
movs
js
adc
sub
inc
mov
sub
xchg
gs
adc
xchg
cs
add
je
dec
pop
inc
dec
mov
adc
retf
xchg
adc
(bad)
jo
(bad)
jmp
(bad)
sbb
push
and
xchg
iret
stos
sbb
popa
shl
mov
fadd
call
clc
sbb
mov
retf
into
push
(bad)
dec
mov
sbb
sub
ins
ror
push
sub
push
fmul
xor
pop
mov
inc
outs
jmp
mov
sbb
jecxz
adc
xchg
mov
push
inc
ins
sub
imul
fdiv
sti
push
jmp
es
jns
fst
jmp
pop
adc
add
xchg
mov
sub
push
in
pop
test
ins
pop
ret
pop
je
mov
ja
shr
push
adc
dec
xchg
ins
xor
dec
pop
adc
push
jg
xor
cdq
dec
xchg
xor
in
(bad)
int3
fidivr
mov
fcom
pop
(bad)
or
dec
xlat
(bad)
pushf
ror
ds
movs
jmp
imul
call
mov
es
jmp
push
out
cmp
mov
add
mov
xchg
shl
mov
xor
xchg
scas
aaa
and
sbb
sahf
stc
clc
cmp
xor
test
push
ins
enter
arpl
mov
mov
xchg
enter
sti
pop
ss
cmp
in
(bad)
mov
mov
gs
test
pop
cmp
push
les
addr16
mov
or
xchg
or
cmc
jmp
pop
mov
mov
ja
outs
inc
mov
xor
cmp
and
lahf
push
ss
(bad)
pop
retf
push
stos
pop
leave
jge
push
cmp
jge
xchg
pop
les
lock
and
inc
or
jg
hlt
sar
pop
out
mov
retf
ss
add
mov
es
fbld
mov
cmc
sti
and
movs
aad
jne
mov
or
xchg
sti
add
or
sbb
adc
int3
pop
mov
jns
in
cs
(bad)
mov
and
sub
push
mov
data16
pop
dec
fidiv
push
cwde
call
mov
pop
outs
outs
sub
or
mov
pop
cmps
out
adc
lds
scas
cld
repz
test
mov
mov
cmp
inc
addr16
jecxz
sbb
arpl
cmp
add
add
lds
je
mov
aam
loop
shl
dec
leave
sub
cli
cmp
push
in
aaa
cmps
mov
push
xor
mov
or
into
sub
scas
mov
aaa
and
lock
cmp
addr16
jno
push
cmp
mov
pusha
(bad)
mov
retf
cmp
mov
aam
and
ins
scas
xchg
std
mov
inc
fsubr
out
in
adc
fwait
repnz
mov
mov
ins
jle
pop
fistp
fmul
jne
sub
sbb
stos
mov
aaa
sahf
loope
scas
fimul
mov
xor
int3
popf
popf
ins
mov
sbb
jecxz
daa
loop
call
xchg
sbb
in
je
fcmove
ret
fwait
add
out
cs
retf
aas
lds
add
(bad)
adc
test
mov
cmp
xchg
cmp
iret
mul
add
inc
mov
jle
or
cld
xlat
ds
nop
adc
mov
adc
add
xor
and
add
pop
das
(bad)
inc
retf
xor
dec
fwait
mov
sti
std
adc
push
sti
loopne
sub
test
sub
iret
fild
pop
ror
int3
fcomp
xchg
mov
scas
std
inc
jnp
add
sub
mov
or
out
in
dec
mov
(bad)
(bad)
imul
pop
fidiv
std
fidivr
mov
sbb
pop
adc
cmps
stos
adc
rcl
ss
pop
mov
mov
ret
jno
add
mov
jl
cld
cdq
pop
or
pop
inc
mov
imul
retf
add
mul
dec
pop
cmp
xor
fadd
test
cmp
pop
mov
retf
sub
not
mov
mov
lock
xchg
pop
mov
xchg
push
or
sub
pop
fdivr
movs
shr
mov
mov
sbb
jbe
pop
fisttp
mov
ror
imul
rcl
repnz
xor
jo
inc
pop
jecxz
data16
add
hlt
aaa
loope
or
jbe
xchg
push
mov
xlat
cld
icebp
add
sbb
rdtsc
std
mov
dec
outs
sub
daa
arpl
hlt
pop
(bad)
pop
movs
pop
popf
enter
sub
jno
clc
popf
dec
fild
pop
mov
inc
data16
stos
dec
xchg
or
fwait
cdq
je
jne
mov
jl
push
lahf
inc
fwait
ja
js
or
inc
jns
enter
mov
int3
mov
sbb
mov
aas
mov
mov
adc
cmps
jbe
scas
and
imul
jmp
pop
movs
mov
push
pop
jmp
push
cli
lahf
pop
ror
jns
jmp
or
add
repz
jle
icebp
enter
sbb
pop
pop
mov
cld
cmc
add
sti
fstp
xchg
adc
add
out
mov
jmp
mov
jle
mov
stos
fs
mov
out
jns
prefetchwt1
pushf
out
mov
mov
fsubr
out
inc
or
stos
int3
dec
jbe
mov
jns
inc
cmp
out
jp
xchg
sbb
das
cmp
aas
and
(bad)
data16
es
sbb
fcmovne
jb
and
mov
ins
jae
js
ret
cmp
jg
fs
sbb
aas
(bad)
sub
xor
out
jmp
out
popf
pop
or
pop
and
int
xchg
sub
cli
jmp
mov
ret
es
scas
js
xor
push
arpl
jmp
cmp
inc
leave
xchg
fcomp
test
mov
xor
sahf
mov
(bad)
call
inc
mov
iret
nop
pop
(bad)
push
cmc
popa
dec
xor
push
and
inc
xor
xchg
cmps
xchg
call
sbb
aad
movs
int
rol
mov
cmp
add
jbe
and
cs
addr16
push
or
sbb
dec
xchg
test
jbe
add
mov
(bad)
cmc
ins
fstp
fwait
addr16
repnz
popa
repz
js
sub
fucomip
jge
fldenv
mov
sbb
sub
mov
test
push
iret
bound
inc
in
leave
mov
jno
mov
call
movs
cmp
fist
iret
dec
mov
(bad)
lods
fcmovnbe
cmp
mov
leave
aad
mov
iret
in
ret
xchg
inc
xchg
cmp
inc
(bad)
out
push
sbb
fdivr
mov
(bad)
movs
adc
dec
jnp
sar
xor
sub
xchg
sbb
pushf
call
mov
sahf
cmp
mov
jb
sub
mul
xor
iret
inc
jge
xchg
(bad)
je
aad
or
hlt
mov
loopne
and
test
push
sub
mov
(bad)
call
leave
(bad)
gs
xchg
ret
add
xor
mov
fistp
dec
push
repnz
push
retf
xor
mov
or
cmp
out
mov
addr16
or
pop
or
sub
jmp
scas
out
adc
cmp
jle
mov
hlt
xchg
add
push
dec
xchg
(bad)
mov
je
loopne
test
pop
mov
and
add
sbb
sbb
mov
loopne
xchg
out
adc
sub
sbb
dec
mov
test
loope
inc
or
sbb
retf
outs
ja
les
mov
fs
fsub
mov
xchg
iret
fwait
iret
jmp
cmps
pop
add
pushf
mov
inc
and
xchg
std
or
jge
out
aaa
dec
push
aad
retf
shl
adc
lods
cmp
sbb
repz
inc
push
je
inc
cli
cmp
out
mov
sub
(bad)
icebp
fistp
aaa
sub
sti
cmp
fild
or
(bad)
dec
sub
in
jg
mov
jle
movs
mov
or
fisttp
fbstp
push
ja
mov
sbb
dec
rep
add
pop
add
dec
test
(bad)
(bad)
aad
out
adc
inc
imul
leave
adc
cmp
dec
cwde
or
push
lods
dec
mov
imul
ss
pop
add
data16
es
loopne
jo
retf
(bad)
fnstsw
adc
imul
xor
mov
push
sub
(bad)
in
jmp
mul
jl
dec
jecxz
es
jl
(bad)
lock
cmp
dec
sub
fucom
into
mov
or
ret
jbe
cwde
sbb
jl
mov
cmc
push
adc
xlat
fwait
or
sub
cmp
sahf
adc
add
mov
shl
jne
das
add
movs
ja
aas
xchg
push
aaa
inc
and
adc
or
fnsave
test
adc
enter
xchg
pushf
(bad)
stc
push
je
in
icebp
jg
dec
jg
add
pop
pop
mov
out
xchg
xor
jmp
dec
sub
std
into
xor
sub
sbb
cmp
in
push
sbb
inc
enter
dec
rcr
popf
inc
das
dec
adc
xor
and
push
jo
ins
cmp
push
aam
pusha
pop
jp
pop
rol
or
movs
in
push
adc
mov
jmp
mov
pop
sbb
in
jg
out
mov
ja
jmp
or
cmp
mov
or
shr
sub
fadd
pop
lea
movs
(bad)
mov
out
mov
aam
or
add
fist
clc
shl
cli
scas
fdiv
bound
cmp
pop
jmp
or
test
xchg
test
jo
sub
call
rol
in
gs
add
test
icebp
das
fwait
push
imul
clc
test
or
test
jg
inc
ficom
xor
jle
fbld
fiadd
xchg
dec
push
daa
jae
popf
mov
cdq
xor
xor
pusha
mov
es
mov
mov
adc
movs
aam
mov
push
sbb
dec
ins
hlt
or
xor
lods
arpl
jbe
or
mov
pop
or
xchg
pmullw
jmp
mov
outs
sub
je
mov
lods
retf
push
cdq
ret
adc
jp
jne
mul
iret
push
outs
cwde
pop
je
jmp
add
inc
ins
mov
sbb
inc
push
lods
clc
cld
mov
jg
stos
jae
inc
test
fwait
add
adc
in
cmp
or
call
inc
repnz
mov
mov
jnp
or
mov
fimul
sub
ds
sub
jg
popf
stos
add
sbb
fisubr
mov
add
xchg
adc
adc
xchg
mov
mov
jg
jmp
and
cli
(bad)
aam
out
enter
xor
push
(bad)
sahf
leave
jno
jg
sub
repnz
lods
sbb
inc
ficom
(bad)
daa
jno
adc
outs
push
repz
add
popf
jl
inc
mov
jbe
sub
div
xchg
cmp
es
fst
loope
addr16
pop
xchg
mov
in
add
adc
or
nop
loop
mov
(bad)
mov
je
jne
retf
hlt
jae
mov
scas
shr
or
and
cmp
sub
push
mov
shl
add
stos
fwait
cmp
jmp
sub
stos
out
mov
mov
ficomp
and
imul
add
sbb
enter
jb
sbb
outs
daa
sbb
dec
adc
test
repnz
dec
leave
add
pop
and
mov
inc
dec
ficomp
jecxz
mov
push
stos
dec
jmp
(bad)
movs
cli
es
movs
or
mov
mov
xchg
leave
sbb
jge
shl
mov
mov
in
dec
jmp
(bad)
adc
iret
sub
bound
sub
out
pop
out
sar
cmp
lods
pusha
arpl
mov
in
dec
popf
cmps
enter
daa
arpl
enter
in
jnp
mov
add
out
call
mov
je
jmp
cmp
mov
mov
xchg
adc
push
adc
mov
cmp
pop
stc
and
adc
pop
pop
or
aad
fidivr
std
movs
adc
add
fdivr
addr16
mov
push
jae
adc
ins
xlat
(bad)
out
stc
pop
fadd
js
mov
adc
(bad)
sbb
xor
jno
fcmovnu
or
push
cwde
fwait
arpl
movs
pop
in
(bad)
mov
jae
fdivr
movs
test
dec
pop
mov
xchg
jmp
ss
push
xchg
mov
jge
fs
leave
cmps
inc
nop
aad
ins
cmp
dec
fisttp
je
jle
xor
out
into
xor
push
mov
das
xlat
jae
mov
(bad)
cmc
fcomp
movs
xchg
ins
push
scas
nop
adc
rol
ja
pushf
outs
push
pop
push
std
je
dec
add
push
les
or
or
xor
mov
add
arpl
lock
jl
cld
aaa
int3
shr
inc
aam
bound
jb
jge
sar
pop
push
mov
push
pop
jecxz
inc
out
rcr
addr16
xchg
cmp
scas
movzx
dec
or
(bad)
hlt
and
shr
or
inc
cld
mov
dec
in
inc
dec
js
(bad)
sub
adc
daa
cmp
dec
mov
xchg
mov
sub
mov
or
jg
in
test
ret
js
sub
out
push
(bad)
sub
fimul
lods
add
mov
test
hlt
sub
loopne
mov
cmc
fstp
nop
jmp
cdq
not
leave
mov
and
shr
scas
sub
in
imul
or
push
adc
cmps
and
test
lods
push
fcom
retf
out
call
aam
stc
inc
(bad)
push
cmps
loopne
jg
scas
xchg
lea
sahf
(bad)
cdq
in
jmp
out
add
cmp
outs
or
ret
jbe
les
mov
cld
dec
cdq
inc
push
inc
and
add
add
mov
aad
push
pop
fwait
int3
ret
sahf
or
int3
test
in
pop
bnd
sub
inc
jmp
add
mov
fdivp
dec
stos
arpl
inc
aam
add
nop
stos
pop
stos
push
inc
mov
xchg
push
cmp
cld
cmp
adc
dec
push
dec
int
cdq
pop
mov
lods
ror
(bad)
fadd
mov
mov
cmc
inc
mov
dec
out
inc
or
ins
(bad)
mov
les
lods
add
add
mov
adc
(bad)
and
aaa
lock
cs
sbb
mov
jp
in
jne
stc
cmp
pushf
push
pop
(bad)
int
jae
mov
mov
cmp
clc
mov
es
push
xchg
leave
jmp
xor
cwde
adc
pop
adc
push
mov
ret
mov
cmp
shl
inc
in
xchg
mov
add
fisubr
mov
mov
xor
(bad)
add
pop
mov
jb
lods
scas
sbb
cwde
lea
jne
add
add
xor
pop
call
leave
sti
ss
jmp
and
repz
movs
xor
or
or
out
scas
jp
dec
inc
and
cmps
mov
mov
vorps
or
or
mov
adc
dec
adc
pop
sar
cdq
out
loop
xor
dec
cmp
sbb
jmp
outs
idiv
add
xor
sub
or
inc
iret
std
xchg
sub
std
imul
dec
shr
mov
push
push
mov
jmp
mov
mov
outs
stos
test
mov
jne
xor
scas
xchg
pop
bound
retf
pop
popf
jle
or
repnz
jmp
cmp
cmp
mov
add
popf
test
imul
xchg
mov
dec
cmps
cmp
mov
shl
imul
sub
mov
xor
scas
retf
das
jl
inc
mov
mov
mov
jl
jmp
inc
aas
jg
mov
xor
pop
ret
xor
cwde
push
popa
xchg
aad
ja
mov
add
and
sbb
cwde
fld
xor
nop
out
pop
push
mov
out
jnp
aam
ss
jge
sbb
icebp
sbb
ins
out
rcl
into
add
dec
mov
mov
retf
mov
pop
sub
out
(bad)
in
push
ins
out
sbb
inc
pop
push
pop
imul
test
mov
int3
mov
push
mov
jp
aad
dec
cdq
inc
xchg
movs
cli
add
rcr
sub
pop
or
fstp
sti
aaa
or
stos
popf
pmulhw
or
and
sbb
lea
(bad)
test
xlat
push
dec
cmps
inc
xor
ret
cmp
in
ret
(bad)
sbb
mov
dec
mov
aas
or
push
push
pop
gs
or
std
cmp
sub
inc
adc
repnz
das
imul
dec
imul
sahf
adc
sti
fldcw
sub
stc
call
or
lods
jl
xchg
pushf
(bad)
push
jle
lea
pop
dec
mov
aaa
sbb
bound
and
lea
jecxz
mov
in
sub
xor
ss
add
adc
arpl
mov
cmp
jge
mov
jecxz
jmp
mov
(bad)
adc
cmp
stc
aaa
adc
adc
jg
xor
lods
imul
cmp
out
mov
xor
jp
jns
(bad)
sub
lods
and
cmp
in
addr16
lock
movs
in
popa
dec
arpl
xchg
int
ins
(bad)
pop
daa
retf
cmp
mov
out
cmp
push
pusha
arpl
mov
and
inc
ja
jmp
jmp
sbb
sar
enter
ins
in
inc
loope
retf
aaa
cmp
inc
add
or
inc
inc
adc
sbb
sahf
or
push
call
sahf
lods
movs
jecxz
jl
js
test
in
rcr
push
push
and
inc
call
jmp
push
and
mov
xor
call
sbb
mov
xor
(bad)
out
or
or
xor
retf
(bad)
arpl
loopne
icebp
mov
fwait
loop
sti
fs
pop
sub
mov
mov
mov
jmp
mov
mov
jecxz
aas
mov
and
mov
add
pop
fisttp
ss
lahf
mov
in
jecxz
(bad)
cmc
ins
mov
data16
ret
mov
xor
in
inc
pop
push
inc
outs
xor
out
retf
jne
dec
je
stc
pop
xor
loopne
les
inc
push
sahf
adc
and
xchg
add
or
not
or
shl
sti
(bad)
adc
inc
fstp
and
fwait
adc
push
cs
sbb
daa
cwde
dec
mov
or
push
movs
or
mov
mov
fidivr
cmp
xchg
jge
fiadd
mov
jo
(bad)
mov
loope
jmp
xchg
mov
ja
add
cs
add
and
push
pop
xor
mov
popa
shl
dec
neg
mov
loope
xlat
sbb
nop
outs
jle
jp
cli
jg
idiv
mov
mov
or
les
mov
cmp
xchg
test
xor
or
cmps
(bad)
lods
test
call
pop
dec
push
jl
cmp
in
retf
clc
mov
popf
jnp
ret
movs
or
cmp
or
sbb
mov
mov
mov
std
push
push
jnp
pop
imul
adc
jo
pusha
pushf
push
addr16
arpl
es
sysret
leave
xchg
push
fild
pop
inc
jl
bound
inc
inc
in
adc
test
outs
in
cmp
scas
pop
loop
inc
push
push
mov
fs
icebp
mov
int
mov
das
jb
push
pop
scas
fcom
retf
pop
mov
cmp
in
dec
xor
cmc
fist
push
push
push
cmp
adc
xor
popa
fistp
push
xchg
add
aad
mulps
cmp
test
jno
outs
fs
pop
std
test
mov
xlat
(bad)
mov
stos
jmp
cmp
jne
aam
xor
or
rcr
mov
repz
pop
xor
repnz
sub
or
into
stos
sub
or
loop
cmp
adc
add
movs
enter
stos
mov
sub
pop
mov
outs
out
mov
leave
cmp
or
cld
jg
int
repnz
pop
pop
sub
mov
sahf
mov
fld
push
or
(bad)
adc
out
adc
push
lock
repz
fdiv
push
imul
test
dec
lea
xchg
push
xor
dec
jne
dec
add
test
int3
mov
or
hlt
dec
xchg
xchg
jmp
add
xor
hlt
cmps
mov
mov
xor
inc
mov
push
mov
xor
int
retf
aaa
es
jp
rcr
out
pop
in
das
fld
mov
xor
add
mov
in
fnstenv
jno
sub
pop
jge
das
jecxz
test
jmp
cli
dec
jnp
xlat
mov
dec
push
xchg
add
mov
adc
or
gs
movs
jmp
and
push
sub
push
test
cmp
push
cmps
icebp
movs
adc
lea
mov
push
sbb
cdq
rol
mov
push
pop
sub
push
and
call
cmp
xchg
and
cmc
or
jge
dec
clc
inc
push
add
xchg
call
(bad)
(bad)
mov
mov
xor
add
jecxz
mov
xor
imul
ss
lahf
mov
in
dec
int3
lds
add
sbb
mov
lahf
inc
mov
scas
ja
sbb
mov
outs
mov
imul
xchg
loopne
movs
outs
jae
sub
or
sbb
call
aaa
or
cmp
and
pop
jg
jmp
mov
sub
repnz
jno
aas
mov
mov
std
xor
(bad)
jo
cmps
xor
sahf
lods
jnp
repz
adc
mov
pop
jp
ins
cmp
ret
add
jb
cmp
(bad)
loopne
jmp
pushf
mov
jecxz
add
or
jmp
jle
mov
rcl
fs
push
cmc
cld
pop
sbb
push
xchg
adc
sub
imul
mov
mov
mov
push
fnstcw
dec
int3
mov
rcr
sub
pop
pop
push
mov
jg
mov
mov
push
or
mov
enter
sti
push
in
pop
sbb
cli
es
add
adc
pop
psubusb
adc
xor
or
std
push
xchg
jge
sbb
cdq
jnp
jno
pusha
dec
test
(bad)
sbb
fild
enter
jmp
test
ret
cmps
hlt
jo
gs
pop
fild
or
jle
scas
mov
in
ds
aam
ss
(bad)
ret
push
mov
ret
(bad)
call
ss
stos
retf
pop
xor
retf
xchg
data16
push
adc
(bad)
sbb
test
cwde
jmp
shl
iret
xchg
neg
int
inc
and
test
dec
fnsave
ret
or
popa
pushf
xor
mov
outs
sbb
jnp
ins
icebp
cmp
push
into
mov
fcom
cmp
(bad)
ss
pop
movs
cmp
xlat
xor
mov
cs
clc
mov
mov
xor
out
ficom
iret
xor
adc
repz
xchg
adc
aad
rcl
sbb
mov
or
xchg
in
(bad)
pop
push
les
and
inc
aas
adc
fimul
neg
push
push
ror
mov
cmps
xor
dec
jae
xlat
mov
iret
out
and
push
fldenv
hlt
sub
adc
mov
sar
neg
pop
add
loope
sahf
mov
ins
add
jecxz
enter
jge
ret
test
and
sub
ins
inc
iret
stc
and
sar
sahf
outs
xchg
imul
(bad)
(bad)
mov
add
sbb
adc
out
pop
ficomp
out
cmp
add
scas
cmp
ss
pop
retf
cmp
call
into
add
je
gs
push
ins
push
sub
push
sbb
aam
sbb
or
pop
adc
nop
aad
adc
or
lea
lea
or
pop
sti
call
test
xchg
jp
xchg
dec
mov
pop
and
jmp
repnz
ror
xor
aad
into
mov
or
and
pop
mov
sub
sbb
sub
push
mov
int3
push
mov
out
fucompp
gs
and
xchg
xlat
popf
xor
mov
stc
xor
cmp
xlat
push
ret
das
ja
jl
fwait
mov
lahf
aaa
push
xor
sub
out
lahf
rcr
pop
xchg
sti
in
xchg
add
jae
xor
sub
cwde
dec
test
or
dec
jle
lea
(bad)
aas
scas
js
dec
or
sub
mul
mov
and
sub
cwde
jmp
repz
sub
(bad)
ror
jns
or
inc
sbb
or
mov
ins
mov
popf
xchg
jecxz
(bad)
jnp
mov
shr
imul
test
sub
inc
inc
fwait
cmc
push
dec
cmc
pusha
pusha
inc
neg
dec
jmp
and
mov
inc
sbb
push
mov
push
mov
cmps
cmp
or
mov
dec
mov
jp
xor
sbb
jl
add
jns
loope
pop
lea
cmp
mov
sahf
pop
loope
inc
imul
sar
mov
gs
pop
xor
stc
add
jmp
adc
adc
fcomp
cs
daa
cmp
aaa
in
mov
les
sub
int3
mov
out
sar
out
mov
push
pop
data16
sti
adc
das
(bad)
or
adc
(bad)
mov
or
jo
add
xchg
jle
jbe
mov
or
into
push
iret
jecxz
rcr
xor
movs
fist
lods
aam
push
push
xchg
and
jne
jle
cmp
xor
mov
bound
jno
test
fnstsw
cli
movs
data16
cdq
popa
sub
stos
cmp
not
mov
imul
or
cli
pop
ins
adc
xor
js
xor
jae
sbb
xor
jmp
add
fsub
mov
stc
xor
adc
or
in
adc
sbb
xor
popf
ss
fisub
cli
fwait
sbb
aas
das
fcomp
pop
add
inc
mov
and
bound
or
jl
fsubr
and
dec
push
lds
xchg
and
loopne
repz
push
aas
cwde
clc
or
xchg
jbe
jg
int3
int
mov
jp
gs
rol
jecxz
rol
fisubr
outs
mov
jg
aas
or
mov
jne
sbb
xchg
(bad)
clc
adc
dec
lds
(bad)
xor
mov
push
adc
cmp
dec
(bad)
sar
adc
sub
mov
dec
shr
movs
sahf
pop
call
ficom
inc
jne
mov
mov
xlat
mov
inc
jns
out
ds
jmp
and
add
sti
cmp
fadd
sar
adc
aaa
test
scas
pop
jno
test
inc
(bad)
mov
inc
and
pop
mov
shl
dec
push
outs
dec
or
mov
cmp
icebp
popa
icebp
enter
sahf
push
add
(bad)
mov
mov
aas
leave
(bad)
mov
nop
sbb
push
add
out
fwait
pop
movs
xchg
sbb
fisub
pusha
sar
in
data16
xor
aad
sbb
popa
inc
imul
sbb
push
bound
movs
xor
fsubr
test
add
stos
loope
or
push
dec
sub
icebp
cmp
adc
sub
pop
push
lods
das
mov
dec
call
push
in
xchg
xchg
das
ror
xchg
rcl
aas
scas
mov
sbb
cmc
rcr
xchg
outs
lds
test
add
jg
push
lock
jg
pushf
mov
ins
push
mov
sub
adc
add
adc
cmp
cdq
or
adc
mov
mov
inc
enter
test
mov
xchg
gs
out
fsub
lock
jne
ja
shl
pop
jae
inc
mov
adc
out
sub
jp
mov
das
add
sbb
push
push
fmul
sub
cmp
mov
sbb
(bad)
ret
xor
sbb
(bad)
cmp
sbb
enter
cmp
dec
fst
stc
and
xchg
aad
call
push
sbb
xor
fwait
xchg
rcl
cmp
sub
loopne
cs
dec
dec
js
inc
nop
inc
adc
push
mov
jb
aam
rcr
pop
ror
adc
dec
cmps
test
test
adc
sbb
bound
data16
ffreep
mov
lock
mov
xchg
cmps
jae
lods
mov
fstp
cmps
iret
stc
dec
ror
outs
leave
addr16
mov
jo
retf
cmps
pop
icebp
mov
sub
jg
gs
sbb
mov
mov
adc
aam
daa
add
jo
pop
sub
rcr
jge
inc
pop
shl
xchg
call
adc
add
xchg
pop
rol
repz
loop
xchg
add
and
xchg
push
push
inc
pop
mov
pop
jmp
out
push
outs
inc
mov
ret
int3
shl
xchg
push
daa
lahf
cmps
sub
imul
fwait
inc
mov
loop
sti
xlat
xchg
rcl
dec
add
pop
inc
mov
adc
sub
pop
repnz
imul
jb
fsub
xchg
je
and
enter
hlt
test
test
mov
fild
out
and
cmps
inc
ins
xchg
cli
mov
push
push
inc
cdq
dec
test
pop
mov
in
cdq
das
cmp
scas
push
lea
lods
retf
cmp
dec
cwde
mov
mov
aaa
sbb
pop
add
mov
push
xchg
jmp
fbld
mov
add
dec
push
sbb
mov
idiv
movq
sahf
outs
jne
sbb
ins
(bad)
cmps
xchg
ins
and
fs
int
adc
or
icebp
adc
xor
dec
enter
aad
rcr
add
pop
loopne
sub
(bad)
xchg
inc
jp
(bad)
test
movs
mov
cmp
fisubr
es
imul
icebp
mov
in
mov
and
aam
fisttp
push
push
pop
push
test
aas
mov
pop
rcl
sub
sahf
add
das
push
cwde
sbb
inc
add
pusha
repz
popa
daa
shl
(bad)
rcl
cs
mov
and
repz
mov
ror
fucomi
in
(bad)
retf
lds
cmp
add
pop
xchg
push
fld
call
and
add
sbb
dec
gs
sahf
das
jmp
cmp
(bad)
js
push
xchg
pop
and
pushf
aaa
ins
xchg
add
xlat
cwde
nop
add
mov
in
add
mov
sbb
pop
movs
dec
mov
in
fs
mov
adc
scas
cmp
in
mov
inc
cmps
xor
jns
sub
sub
in
jmp
pop
(bad)
in
push
cmp
push
in
loop
inc
aam
mov
shr
dec
mov
ret
sar
retf
mov
pop
push
and
lea
push
outs
ds
lods
push
inc
scas
aad
mov
retf
cmps
ins
ja
sub
or
dec
mov
adc
push
xchg
ds
xor
pusha
test
sbb
xor
jnp
add
cmp
bound
mov
(bad)
jb
mov
gs
(bad)
inc
stos
add
push
loope
or
stos
pusha
or
in
ss
mov
movs
sbb
fidivr
xor
(bad)
mov
cs
dec
pop
das
je
sub
add
mov
adc
lea
ins
cs
test
push
inc
mov
fs
out
pop
jge
mov
in
jg
mov
jo
shr
sbb
jbe
sbb
mov
xchg
mov
push
xor
(bad)
or
jge
push
les
push
adc
rol
popa
pusha
mov
add
jnp
iret
rol
add
(bad)
(bad)
mov
push
or
iret
inc
push
je
cld
mov
ins
dec
pop
call
add
(bad)
mul
ss
arpl
xor
aam
mov
js
mov
fild
sub
cmp
mov
out
sub
jmp
out
inc
fistp
popf
push
movs
cmps
and
scas
cmp
bound
sbb
repnz
cs
leave
and
mov
mov
pop
xchg
inc
rol
ins
loop
test
iret
ins
pop
mov
add
jmp
fwait
sub
les
out
inc
sub
iret
lahf
cmp
sbb
mov
pop
sbb
add
or
movs
sub
das
inc
in
dec
cwde
(bad)
fdiv
fs
js
mov
pop
aad
sbb
mov
test
pop
scas
xchg
cmp
push
ror
neg
jns
mov
pop
cmp
(bad)
(bad)
dec
imul
and
push
mov
sbb
pusha
inc
int3
sub
xchg
lods
xchg
leave
push
outs
mov
xchg
jle
sbb
or
inc
xor
icebp
jl
out
adc
xchg
sbb
mov
push
ss
rol
outs
ds
cld
or
int
jns
xor
cmp
mov
in
xchg
sub
movs
repz
cwde
inc
xchg
mov
inc
mov
jl
(bad)
les
or
dec
dec
jle
mov
cmps
aaa
sbb
jae
ficom
out
mov
mov
shl
xchg
nop
fdivr
xchg
fdivr
push
xchg
ror
sub
mov
push
cmp
jmp
add
cmp
in
fwait
and
call
cs
repnz
adc
cli
or
sub
retf
xchg
mov
mov
adc
or
push
iret
cmp
into
jno
imul
mov
iret
js
fs
mov
pop
inc
aam
std
fld
and
int
sbb
cdq
(bad)
mov
addr16
mov
adc
das
mov
movs
xlat
sbb
not
pop
lock
arpl
xchg
arpl
xor
es
test
sub
(bad)
in
pop
leave
js
sub
mov
add
mov
pop
add
mov
cwde
ins
mov
pop
mov
pop
daa
pop
mov
mov
add
mov
repz
push
aaa
mov
pushf
test
aas
push
call
int
push
movs
pop
mov
jge
push
xchg
mov
jmp
mov
jne
adc
(bad)
call
fwait
stos
retf
fbld
and
add
hlt
mov
jmp
in
cmps
shr
mov
movs
fxch
jnp
inc
idiv
mov
xor
repnz
into
push
out
arpl
daa
jnp
jg
aad
je
sbb
(bad)
in
es
add
cmc
or
ret
ret
(bad)
sub
push
fdivr
pop
xor
fdivr
std
jnp
lock
iret
xchg
xchg
inc
dec
pushw
ret
inc
popf
ret
inc
xor
or
pop
push
shr
push
adc
retf
mov
inc
int
mov
pushf
sub
jmp
jle
jne
repnz
es
fimul
inc
and
inc
dec
jbe
dec
xor
imul
xchg
and
mov
inc
(bad)
xor
or
loope
mov
sbb
mov
inc
inc
xor
cmps
enter
paddsw
jmp
adc
xchg
ins
dec
mov
adc
clc
mov
jg
stos
xor
call
call
xor
cli
fisttp
popa
push
mov
jne
pop
and
in
fwait
adc
push
push
loopne
and
fmul
test
retf
pushf
mov
push
das
mov
push
dec
ret
aaa
fwait
inc
mov
pushf
adc
loopne
rol
jp
sbb
xchg
bound
add
mov
js
fsub
or
outs
sub
int
or
xor
in
add
enter
shr
je
pop
sbb
jmp
and
or
adc
cmp
mov
in
das
mov
fucom
ins
mov
sub
ret
ret
mov
imul
mov
pop
shr
lods
add
xchg
inc
jno
scas
es
jmp
fcom
jnp
ret
fwait
outs
sti
(bad)
rol
dec
adc
fwait
ret
into
rcr
push
lods
or
inc
call
outs
(bad)
sahf
jecxz
jb
mov
int
data16
into
sub
aam
mov
movs
sub
ins
add
arpl
fwait
div
jmp
lods
xor
mov
add
push
inc
mov
outs
scas
test
outs
add
sbb
pop
retf
or
jnp
cmc
and
test
ror
pop
cmp
inc
retf
or
add
lock
sbb
cli
jecxz
in
push
out
arpl
fs
out
fsubr
jle
dec
data16
ficom
push
cwde
sub
inc
les
jg
in
clc
shl
(bad)
mov
xchg
rcl
jp
jno
das
ja
mov
test
ins
popa
xchg
xchg
push
mov
cmp
mov
pop
nop
push
push
jbe
sahf
cmp
cmp
(bad)
jmp
mov
or
test
mov
mov
push
jo
icebp
xor
in
add
or
xchg
xor
xchg
lock
imul
xor
sbb
(bad)
sbb
xor
inc
retf
scas
push
icebp
dec
or
mov
int
daa
data16
push
jl
push
call
(bad)
(bad)
not
jmp
inc
or
mov
add
aas
fisubr
pusha
stos
dec
adc
and
xchg
inc
mov
retf
call
sar
xchg
imul
mov
pop
lahf
dec
adc
add
addr16
or
dec
pusha
movs
pop
jle
push
dec
pop
(bad)
jle
pusha
sub
in
inc
push
stc
xor
jmp
popf
and
xor
xchg
dec
jmp
hlt
add
lock
das
cwde
and
xchg
push
mov
ret
xchg
adc
jecxz
xchg
xchg
inc
push
leave
push
out
mov
and
pop
ja
ins
fsubr
shl
(bad)
nop
cli
aaa
inc
push
pop
dec
call
push
inc
in
adc
or
mov
xchg
mov
mov
lods
jge
sub
mov
scas
iret
imul
(bad)
pop
dec
add
aas
pop
add
mov
fmul
mov
jnp
lods
and
int
bnd
and
xor
es
out
and
aam
pop
cld
sbb
cmp
loop
inc
sahf
in
movs
jmp
mov
jmp
sub
(bad)
mov
adc
dec
or
(bad)
out
aam
es
dec
(bad)
sub
jge
(bad)
cmps
adc
in
mov
xchg
das
push
std
int
and
mov
pop
jb
test
je
add
dec
jno
and
xor
cmp
jmp
push
cmp
xchg
test
lods
sti
pop
rcr
ret
retf
or
push
jo
xor
push
out
fstp
xor
sahf
xor
sbb
repz
mov
push
(bad)
jmp
xor
and
cld
jge
cmps
jmp
add
xor
sbb
das
mov
push
pop
xchg
pop
mov
sbb
(bad)
outs
(bad)
mov
std
repz
xor
add
loope
xor
outs
je
adc
shl
cmps
scas
ficom
fmul
nop
daa
call
icebp
cmp
add
popf
mov
test
jge
xchg
dec
pushf
cmps
je
bound
ret
adc
cmps
and
cmp
dec
jle
gs
mov
mov
push
mov
idiv
push
in
sub
pop
pushf
add
stos
or
and
mov
ret
cmps
or
xor
ffreep
dec
xchg
test
pop
mov
xor
pop
and
icebp
in
ret
dec
ja
xchg
push
lods
dec
mov
xlat
fcomip
in
in
int
clc
cld
xchg
out
addr16
dec
jp
(bad)
ins
add
imul
ret
and
pop
mov
shl
aam
and
dec
lock
call
call
ds
retf
pusha
addr16
ret
or
cdq
mov
adc
sbb
leave
dec
out
mov
add
repz
xlat
mov
rcl
xchg
adc
addr16
sub
lods
mov
add
xchg
and
xchg
clc
into
in
inc
dec
sbb
sub
jno
gs
neg
(bad)
(bad)
aas
into
inc
add
loop
test
mov
pop
mov
aad
ds
jmp
adc
gs
jno
repz
inc
sbb
xchg
ja
sub
mov
int
test
dec
jo
cmp
inc
jo
sahf
sub
test
pop
mov
jb
mov
gs
retf
pop
xor
imul
and
sub
stos
cld
or
(bad)
repz
pop
pop
jge
xor
mov
es
dec
or
xchg
jl
mov
movs
(bad)
or
repz
dec
std
fwait
jo
inc
ins
push
fbstp
jnp
ret
mov
push
fimul
mov
out
(bad)
(bad)
call
inc
xor
push
sar
inc
cmp
inc
leave
pop
cli
neg
xchg
and
jg
mov
(bad)
cdq
fincstp
adc
mov
iret
adc
repnz
fistp
ds
pop
sub
jae
pop
inc
call
xchg
dec
sbb
inc
test
mov
cmp
inc
fdiv
mov
ror
arpl
xor
push
(bad)
ins
sub
mov
jle
js
test
xor
enter
dec
and
arpl
in
mov
inc
push
cmp
mov
jle
(bad)
and
leave
pop
inc
xlat
jnp
loop
xchg
imul
call
dec
inc
(bad)
sbb
mov
xor
loope
addr16
ret
ins
jne
fbld
pop
mov
iret
sbb
out
sbb
out
or
in
out
cmps
pushf
jne
aad
xchg
sub
into
movs
push
dec
lds
xchg
(bad)
adc
in
xlat
pop
xchg
test
add
(bad)
ror
mov
sub
sti
cmp
dec
movs
mov
xchg
xor
aam
xlat
lods
fs
or
pop
add
cmp
add
aad
sub
mov
cmp
mov
push
fistp
sub
daa
pop
mov
in
cmp
jge
mov
lahf
mov
jo
ds
div
adc
sahf
addr16
fwait
inc
sbb
jge
test
enter
push
add
movs
pop
or
(bad)
cmp
inc
mov
push
ficom
or
jae
scas
cmp
rcr
cli
std
movs
inc
inc
mov
pop
pop
jno
xchg
call
imul
cmp
push
clc
cwde
mov
daa
pusha
sti
call
or
(bad)
sar
repz
arpl
cmc
cmp
pop
push
shl
add
sbb
mov
inc
lods
(bad)
movs
loope
stc
xor
mov
out
movs
push
cld
push
dec
add
int3
scas
movs
push
sub
repz
jmp
mov
mov
dec
adc
retf
inc
call
adc
retf
sbb
mov
and
jns
dec
daa
xchg
cli
or
cmp
popa
fistp
iret
mov
stc
add
imul
add
and
shr
outs
sub
mov
xchg
adc
push
push
cwde
inc
sbb
sahf
add
push
cmps
and
push
aam
popa
push
sub
cmp
fdivr
sub
retf
and
lods
ror
add
imul
push
add
lods
enter
arpl
mov
data16
mov
icebp
sub
loope
and
pop
cmp
pop
dec
out
jnp
mov
repnz
cmps
jl
jns
scas
or
mov
adc
(bad)
call
inc
add
mov
lods
xor
xlat
jmp
sti
fsubrp
sub
mov
aam
test
and
mov
add
mov
and
adc
imul
fstp
pop
pop
lea
sbb
sub
sahf
retf
call
stos
jnp
mov
jle
and
popa
fld
fsubr
int
stos
sbb
nop
(bad)
fwait
pushf
mov
inc
and
jno
push
mov
mov
adc
pop
xchg
jge
loope
addr16
mov
inc
test
pop
mov
mov
scas
push
in
sbb
and
mov
popa
pop
cmp
fdiv
pop
cmp
into
test
cmp
cmps
push
in
xor
les
aas
cdq
repnz
jmp
mov
lods
jge
pushf
xchg
loopne
into
xlat
and
cmps
mov
aas
fwait
and
xchg
(bad)
and
and
cli
xchg
dec
push
pop
sar
daa
mov
xor
jmp
fistp
pop
dec
pop
adc
mov
xchg
in
out
js
jnp
add
addr16
and
jo
push
and
pop
movs
jmp
icebp
(bad)
bnd
xor
mov
scas
push
jbe
xor
xchg
pop
sbb
adc
or
cmps
retf
push
and
xlat
ficomp
and
in
cmps
mov
mov
jmp
test
xor
cmp
loopne
push
out
mov
bound
sub
xor
scas
inc
xchg
int3
and
pusha
jle
scas
xor
dec
test
(bad)
loope
dec
dec
iret
cmp
xchg
fwait
outs
enter
inc
xor
out
loop
stos
and
jns
sbb
test
cmp
xor
popa
inc
pop
adc
repnz
cdq
sub
(bad)
sbb
call
data16
or
add
out
pop
loope
out
sub
xor
scas
pushf
sub
adc
shl
push
popf
adc
aaa
add
jae
into
sbb
push
dec
test
vcvtsd2ss
cli
sti
pop
mul
leave
fisubr
mov
repz
inc
dec
mov
pop
mov
cmps
cmp
dec
xchg
sbb
movs
mov
(bad)
fwait
mov
cmp
pop
mov
push
sbb
xchg
dec
cmp
push
cmp
cwde
shr
imul
sbb
popa
mov
xor
pop
sbb
retf
pmaddwd
cmp
scas
and
out
test
dec
in
and
xchg
inc
movs
mov
mov
dec
inc
xor
imul
sbb
cmp
jl
adc
(bad)
dec
addr16
pop
cwde
into
inc
int
push
enter
mov
and
pop
mov
pop
and
mov
(bad)
jle
loopne
xchg
xchg
imul
sub
cld
dec
test
add
mov
mov
adc
adc
nop
or
inc
jg
nop
xchg
lods
jbe
adc
cmp
pop
shl
adc
call
mov
cmp
call
or
inc
dec
sub
ss
pop
pop
adc
add
test
out
mov
shr
xchg
scas
scas
xor
aaa
dec
pushf
xchg
xor
adc
dec
pop
cmp
fs
xlat
nop
mov
fnstsw
ficomp
pushf
jmp
(bad)
adc
pop
mov
out
aam
ret
add
rcr
jecxz
mov
sub
pop
push
sbb
out
mov
mov
mov
fdivr
xchg
xor
pop
lock
add
xchg
in
push
push
daa
int
dec
sbb
pop
jl
aaa
dec
mov
out
cmc
int
cmp
mov
out
jns
pop
pop
outs
rcr
mov
mov
mov
add
ins
rcpps
xor
addr16
inc
jmp
add
mov
idiv
add
jle
sti
push
push
push
inc
jne
fimul
rcl
popf
sub
mov
sbb
inc
pop
sbb
ins
lds
repnz
add
mov
adc
or
adc
test
stc
int3
cmp
jne
idiv
cld
pop
cmp
xchg
add
int
dec
sbb
dec
icebp
mov
inc
jmp
jne
ret
sub
adc
shrd
mov
popa
call
mov
fiadd
mov
mov
push
xchg
sbb
and
neg
cmp
nop
mov
scas
xchg
and
lahf
out
mov
adc
jno
mov
(bad)
jno
xor
scas
or
mov
enter
lea
xchg
stos
cmp
pop
shl
out
pop
shr
fsub
jnp
add
and
jns
or
fcmovne
xchg
daa
fild
in
out
sub
dec
xchg
xor
ficomp
aaa
ins
and
cwde
mov
hlt
push
dec
cdq
push
hlt
inc
push
(bad)
lahf
shr
aam
cmc
hlt
push
out
jns
pop
(bad)
ss
mov
sub
movs
es
pop
or
pop
xchg
cmc
push
mov
mov
mov
imul
sub
lods
dec
call
add
enter
scas
std
bound
movs
aam
jno
ja
test
cli
in
pop
sti
sub
jae
push
or
std
test
sub
cmp
xchg
std
adc
rol
xchg
sbb
xchg
das
mov
scas
push
out
sub
jle
and
push
mov
outs
mov
and
push
sub
sub
repz
aaa
add
cmp
out
push
out
sbb
or
arpl
xor
arpl
mov
rol
stos
je
adc
sub
and
movs
push
in
and
out
arpl
sti
and
push
xlat
test
dec
and
inc
repnz
fwait
dec
adc
xor
cmp
outs
push
icebp
cli
add
dec
sub
retf
dec
lahf
mov
ds
mov
repnz
pop
dec
cmps
and
sbb
push
outs
leave
std
(bad)
stos
loopne
das
jl
neg
enter
dec
(bad)
loopne
dec
fistp
addr16
pushf
dec
or
fdiv
mov
rcl
je
ror
mov
mov
jmp
shl
sahf
push
(bad)
outs
js
addr16
int
loopne
aad
jnp
cli
mov
into
ss
rcr
fstp
loop
(bad)
cmps
xchg
dec
add
cmp
(bad)
loope
aam
dec
push
sub
in
mov
fwait
loope
in
mov
jge
outs
mov
or
pop
test
add
pop
mov
hlt
in
cdq
ins
jno
(bad)
push
adc
mov
jp
sbb
hlt
sbb
xchg
out
movs
imul
add
xchg
pop
dec
cmp
outs
jbe
test
mov
sti
(bad)
add
and
retf
mov
mov
inc
cmp
xlat
adc
fisubr
jge
adc
aad
cwde
(bad)
fstp
and
pop
lock
jne
cmc
popf
jno
mov
xor
ins
jmp
jl
ds
push
popf
repz
adc
dec
jae
adc
push
stos
mov
mov
test
jnp
adc
dec
shl
das
sbb
loope
adc
test
sbb
xchg
mov
mov
ror
sbb
bound
aad
in
push
movs
and
pop
mov
or
cmps
or
test
mov
mov
bound
mov
in
imul
xchg
push
movs
bound
imul
add
enter
mov
call
mov
cmp
stos
dec
xor
scas
cli
xor
pop
and
popf
cmc
adc
cmp
jns
pop
inc
jmp
pop
mov
(bad)
pop
out
outs
dec
rol
mov
jmp
sbb
repnz
cmp
aas
test
inc
sbb
push
(bad)
jno
xor
xor
scas
scas
pop
pop
fs
push
jns
jle
clc
pusha
aam
pop
xlat
call
loop
scas
aad
jbe
stos
movs
movs
lods
fst
xchg
cmc
push
ror
sub
mov
inc
retf
out
lods
bndldx
sub
push
or
push
leave
and
stc
cmp
sub
ja
xor
cmp
mov
adc
test
pop
mov
xchg
adc
mov
(bad)
sbb
ss
inc
loope
push
pop
ficom
sbb
test
shl
inc
xchg
mov
cdq
data16
pushf
or
call
outs
in
sbb
es
xchg
pop
enter
or
aad
retf
addr16
pop
scas
call
mov
or
xchg
leave
mov
popf
and
pop
xor
std
sub
xchg
inc
xchg
xor
inc
and
inc
popf
sahf
adc
cmp
push
js
imul
fiadd
lods
leave
repnz
(bad)
cmp
call
clc
into
mov
mov
mov
jne
popa
in
icebp
fsub
popa
loop
pop
cmp
adc
scas
hlt
mov
cmp
movs
add
sub
icebp
and
cmp
jle
nop
inc
repnz
xchg
movs
jbe
out
mov
movs
adc
inc
sahf
jbe
mov
sub
imul
int3
cmp
ret
ret
out
mov
push
push
daa
push
dec
fadd
or
test
stos
or
pop
dec
jp
and
dec
inc
or
rcl
inc
xor
(bad)
cmp
repnz
xor
dec
push
pop
fcom
inc
mov
add
mov
adc
inc
in
ret
rcr
mov
cs
push
dec
lods
popa
pop
shl
pop
sub
mov
pop
ds
bound
lea
cmps
stc
xor
mov
xchg
and
xor
lea
js
or
jecxz
xchg
stc
push
mov
xchg
movs
or
dec
rol
pop
xchg
std
sbb
cmovae
mov
and
imul
outs
xchg
adc
ins
sub
fiadd
jae
ja
adc
dec
dec
jge
cwde
xchg
stos
pop
addr16
jmp
(bad)
xchg
and
data16
and
dec
cmp
je
adc
or
jmp
enter
xchg
les
xchg
add
xlat
aam
(bad)
mov
jae
and
jl
pop
cmps
and
inc
xchg
dec
dec
mov
jbe
in
daa
pop
or
add
and
jb
mov
mov
sub
iret
popa
jle
iret
retf
inc
jns
jl
outs
gs
(bad)
dec
lea
sub
mov
cmp
out
mov
loopne
mov
push
out
cmps
inc
sahf
rol
cmp
xchg
xchg
jno
and
add
icebp
jne
pop
call
cmp
imul
xchg
jmp
cli
outs
(bad)
xchg
cmps
ds
ds
sub
ja
repz
not
cli
dec
nop
xchg
dec
push
add
outs
and
fisubr
lds
cmp
pop
bound
push
jmp
dec
adc
sbb
sbb
int3
and
pop
pop
nop
add
sar
cmp
xchg
ret
push
and
jns
fnstsw
fstp
test
js
xor
push
jle
sub
data16
cmp
mov
push
jmp
add
and
mov
pop
aam
cmp
sub
aaa
and
add
push
out
jns
aad
mov
imul
loop
js
lods
imul
push
test
xchg
mov
mov
push
push
lahf
jb
pusha
inc
arpl
(bad)
sub
fisubr
lea
repnz
push
inc
push
ror
mov
sbb
pop
scas
dec
xor
dec
pop
bound
jbe
sar
mov
xchg
or
je
add
scas
jecxz
test
daa
dec
or
imul
push
loop
sar
fwait
cmps
xor
dec
loop
sub
into
retf
cmp
je
lods
in
add
loop
cs
sar
cmps
cdq
aam
adc
rcr
fdiv
mov
and
push
mov
call
out
xchg
retf
fwait
pop
mov
pop
inc
adc
retf
outs
aaa
movs
pop
outs
cmp
jg
sub
xor
shr
(bad)
sub
mov
scas
cmc
xlat
test
js
adc
div
retf
sbb
pop
pop
movs
pop
push
sbb
test
scas
and
vmread
push
fwait
or
cmp
sbb
(bad)
out
push
adc
mov
and
push
jno
sub
or
imul
push
or
call
mov
inc
adc
xlat
pop
les
adc
cli
fdiv
mov
stos
cmps
ds
(bad)
cmc
imul
loop
stc
call
cmp
xchg
addr16
frstor
adc
stos
xor
or
xchg
mov
inc
pop
dec
inc
lods
cmp
ins
inc
cdq
pushf
or
loope
loop
push
repz
cs
and
icebp
out
aaa
scas
sub
jmp
out
dec
mov
add
mov
stc
scas
or
mov
sub
test
inc
sbb
cs
xchg
call
cdq
inc
fimul
cmps
cmp
push
into
cmps
popa
add
daa
call
nop
xchg
xor
hlt
std
jecxz
push
(bad)
fisub
inc
jge
dec
retf
xchg
inc
cld
xchg
cmp
out
shufps
or
rol
les
push
(bad)
call
in
lahf
push
dec
sub
push
call
rcr
inc
js
movs
push
add
aaa
cmp
and
or
imul
push
sbb
xor
jmp
add
and
push
sub
mov
call
and
or
addr16
pop
xchg
or
mov
fs
div
shl
les
mov
jae
jmp
sub
jne
lods
pop
or
inc
dec
retf
aas
test
data16
xor
cmp
int3
mov
dec
sbb
push
dec
xchg
mov
aas
sti
pop
fwait
or
jle
fnstcw
xlat
pop
cwde
inc
sbb
aas
popf
xlat
push
adc
and
retf
ds
fadd
mov
enter
mov
rcl
dec
out
fisubr
lock
mov
jle
cmp
cmp
retf
pushf
loop
add
retf
mov
pushf
scas
pop
hlt
shl
cdq
mov
add
mov
pop
ret
jmp
sbb
or
push
and
(bad)
jmp
mov
pop
lods
push
adc
push
dec
pop
or
xor
or
adc
sub
sub
or
mov
mov
dec
in
div
aam
js
mov
call
cmp
sub
xchg
in
pop
les
addr16
dec
adc
fistp
add
or
cmp
mov
or
shl
or
(bad)
mov
sbb
jmp
lods
cmp
mov
je
jmp
cmp
adc
jl
stos
(bad)
or
mov
rcr
sub
fstp
inc
inc
xor
ja
or
add
sti
neg
rcl
imul
(bad)
or
sbb
retf
imul
and
xor
sub
jno
and
and
or
sbb
inc
mov
jo
cmp
cmp
out
xlat
loop
or
test
retf
out
mov
into
xchg
in
pop
outs
mov
lods
es
cli
mov
in
pop
cmp
pushw
jge
aad
out
scas
cmp
test
and
das
dec
mov
push
dec
lods
int
mov
rcl
xchg
push
adc
xlat
or
sub
lar
bound
cmp
shl
fcomp
and
ret
mov
aam
call
xor
push
movs
ds
repnz
daa
cmps
es
out
pop
sbb
and
cmps
scas
test
and
cmp
aas
inc
int
mov
movs
test
lods
into
or
movs
pushf
cmp
xchg
pop
fcmovnu
mov
cmp
test
data16
rcr
and
imul
(bad)
rcr
push
arpl
sbb
shl
movs
xor
adc
dec
jae
loopne
mov
add
push
in
in
stc
lea
popf
ds
daa
fisubr
imul
pop
(bad)
or
popf
in
inc
sub
adc
scas
cld
es
lods
mov
ret
mov
(bad)
dec
xor
jnp
sar
jae
mov
mov
loope
stc
iret
pop
add
dec
(bad)
ja
pop
xor
in
sub
retf
push
inc
mov
loopne
cs
mov
mov
outs
mov
sub
mov
(bad)
es
cmp
mov
jle
inc
test
scas
mov
or
mov
call
call
add
adc
mov
rcl
in
mov
jbe
ins
pop
test
data16
mov
fisubr
and
test
push
and
push
cli
fld
inc
cdq
inc
mov
push
xor
pop
xor
aaa
and
or
ins
cmps
fist
xchg
cmp
or
mul
inc
int
imul
lahf
imul
push
mov
enter
scas
mov
mov
xchg
cmp
or
mov
in
js
jo
stc
mov
xor
fs
jmp
jle
loopne
pop
jbe
into
pop
in
(bad)
(bad)
movs
mov
stos
rol
cmps
jae
inc
or
cmp
(bad)
call
adc
iret
sbb
daa
xchg
mov
shl
jmp
scas
push
jo
jb
repnz
enter
inc
jge
add
cmp
pop
lods
push
loope
stos
daa
mov
gs
bound
int
clc
jg
leave
(bad)
sbb
(bad)
das
jecxz
out
lock
bound
pop
push
call
dec
inc
and
mov
adc
cmp
jmp
jns
mov
jnp
cmp
fbstp
mov
shr
pop
dec
cmp
push
es
add
ins
imul
pop
gs
fsub
xchg
lock
jae
adc
jnp
aaa
cdq
ror
and
inc
mov
mov
mov
jp
ret
add
test
mov
sti
int
add
clc
aaa
fsubr
push
ror
jp
outs
in
or
js
(bad)
xor
fcomp
popa
lods
sbb
mov
dec
jae
mov
sbb
mov
cmp
and
ins
clc
jne
scas
adc
fldcw
push
shr
movs
xchg
loope
mov
mov
push
mov
pop
psrld
sbb
jg
fstp
icebp
ret
push
xchg
xchg
pop
push
cmps
in
ja
ret
jg
fmul
mov
mov
or
xor
push
mov
popa
stos
cmps
in
xor
xor
out
jnp
xor
pop
push
test
lea
movs
data16
lea
inc
inc
jbe
xchg
cmc
xchg
jbe
add
xor
mov
call
pop
retf
outs
push
mov
ret
addr16
les
test
(bad)
and
mov
jecxz
cli
jmp
xchg
push
xor
xchg
xchg
dec
jecxz
lahf
(bad)
inc
and
fsub
sub
push
mov
das
loope
repz
lahf
xchg
inc
rcr
fst
ss
dec
stos
test
pandn
ss
repz
push
inc
aas
mov
push
xor
lea
shr
retf
ror
inc
and
stc
imul
in
cmps
(bad)
add
cs
inc
sub
(bad)
inc
fcomi
daa
les
jo
adc
fadd
enter
jmp
push
and
mov
ins
fbstp
icebp
sbb
adc
(bad)
sub
daa
lods
push
enter
jbe
or
fst
jbe
xor
xor
mov
leave
xchg
add
dec
cmp
push
adc
sbb
jbe
pop
in
add
sbb
dec
frstor
dec
xchg
arpl
call
jg
adc
popa
loope
(bad)
sbb
jg
cwde
mov
xchg
cmc
push
int
ror
aad
dec
jmp
adc
in
pop
mov
pop
int
mov
fs
pushf
push
(bad)
in
jae
js
pop
or
fwait
and
iret
test
xor
loop
lods
cmp
fidiv
xor
test
hlt
es
xchg
stos
xlat
inc
out
inc
int3
fistp
xchg
cmps
jns
test
adc
push
retf
js
in
xchg
xor
mov
inc
push
(bad)
xchg
loop
lds
add
cmp
mov
and
mov
cmc
fidivr
and
add
enter
pop
xchg
fimul
jl
stos
(bad)
dec
xor
mov
aad
imul
movs
lea
push
frstor
outs
mov
mov
fiadd
ret
nop
push
xchg
pop
out
sub
sub
scas
jns
xlat
or
retf
sub
jmp
xchg
pop
mov
ret
icebp
cmps
lods
xchg
retf
imul
movs
test
push
sbb
mov
adc
pop
movs
out
mov
mov
ds
sub
ja
cmp
jne
fld
mov
add
push
mov
(bad)
rcl
pushf
arpl
test
and
bound
rcl
add
ins
repnz
jbe
adc
shr
jns
outs
fimul
test
test
loopne
fimul
lock
xchg
es
fbstp
inc
adc
push
jmp
cmps
pop
daa
aaa
fimul
pushf
mov
(bad)
and
call
mov
lea
movs
inc
sbb
fstp
jbe
and
push
mov
sbb
cmp
sub
cmp
mov
xor
dec
sbb
or
in
shl
jp
stos
(bad)
loop
or
xor
add
and
dec
loope
shl
sbb
jp
push
xchg
pop
(bad)
nop
xchg
ficomp
in
push
xchg
push
popf
inc
adc
test
xchg
(bad)
mov
dec
jne
pop
into
add
push
dec
mov
stos
jns
aas
jns
imul
or
ret
ror
aas
out
sbb
fsubr
daa
and
mov
pop
jne
pop
sbb
push
add
cmp
xchg
adc
sti
pop
dec
(bad)
shr
and
das
stos
push
in
std
mov
jo
pop
xor
(bad)
icebp
jl
lea
fstp
mov
gs
adc
and
jae
(bad)
and
add
jmp
xchg
sar
push
and
mov
xchg
cld
mov
in
rcl
xchg
movs
dec
sbb
hlt
test
leave
imul
cmp
outs
mov
and
or
fiadd
inc
jb
stos
xchg
adc
mov
adc
sub
popa
fcom
and
cmp
mov
mov
pushf
push
push
jno
jp
push
add
stc
fwait
sbb
push
mov
inc
cmp
std
mov
pop
repnz
dec
sbb
sbb
jo
mov
retf
mov
pop
sbb
cwde
adc
sub
jae
mov
outs
add
xor
xchg
es
mov
adc
mov
int
jno
push
mov
inc
dec
pop
push
pop
adc
lahf
das
inc
mov
sbb
jnp
jmp
sbb
dec
lea
dec
int3
dec
pop
popf
xchg
std
adc
push
fcom
sub
xlat
pop
icebp
ins
cwde
scas
xor
lods
mov
pop
cmp
cmps
push
not
or
sbb
mov
sub
ficomp
adc
pop
test
(bad)
adc
xchg
lahf
jo
adc
jb
jecxz
xchg
dec
aad
std
mov
rcl
push
push
mov
jle
aad
push
inc
gs
adc
repnz
xor
enter
mov
lahf
jl
enter
or
outs
jne
movs
mov
(bad)
push
ret
dec
out
test
rcl
cmp
fdivr
mov
lods
popa
rcr
push
push
xor
jp
cmps
leave
lods
sub
sbb
cmp
repz
daa
mov
add
push
xor
push
cld
aaa
xchg
std
ins
xchg
and
(bad)
sbb
add
pop
les
and
test
xor
jb
clc
repnz
test
push
mov
or
or
push
and
push
(bad)
sub
iret
cmp
push
sbb
(bad)
adc
pop
sbb
lea
mov
xchg
int
sub
jle
rcr
push
in
push
(bad)
movs
mov
cmp
out
call
movs
push
push
mov
pop
sub
fidivr
or
ins
aad
ds
out
fs
sbb
add
std
enter
jge
xchg
push
gs
xchg
or
mov
dec
and
push
mov
outs
mov
jmp
push
lahf
imul
xlat
in
out
xchg
mov
sbb
jle
mov
jle
js
pusha
call
call
outs
lods
xchg
out
mov
push
pop
jecxz
imul
imul
emms
pop
lahf
jp
push
jae
sahf
add
mov
mov
dec
retf
inc
test
add
in
call
xor
retf
addr16
enter
jae
outs
cmp
inc
push
aaa
ds
jno
test
add
scas
mov
out
adc
in
clc
xchg
test
ficomp
inc
xor
jecxz
mov
pop
xor
push
rcr
test
cmps
and
test
jp
add
lock
adc
in
sbb
adc
pop
mov
mov
add
xor
popf
sbb
loop
dec
call
shl
jmp
lods
movs
daa
(bad)
cld
mov
sbb
or
or
mov
or
jmp
xor
rcl
mov
aas
cwde
push
scas
and
mov
and
daa
mov
xor
xor
cmp
adc
sbb
pop
mov
arpl
std
cmp
or
mov
aam
and
loop
add
jbe
imul
jle
inc
mov
aas
mov
psrlq
fild
mov
pop
dec
cld
cdq
jnp
dec
jecxz
mov
and
sbb
jne
sub
jbe
mov
ret
push
stos
loopne
or
sub
dec
test
das
es
xlat
jg
dec
jl
cmps
addr16
push
push
push
dec
mov
mov
sub
mov
(bad)
mov
nop
ins
test
jbe
fisubr
gs
inc
pop
cmp
push
repz
or
jno
mov
ja
or
sbb
inc
inc
mov
sub
jno
fld
inc
daa
stos
dec
xor
mov
dec
rcl
(bad)
repz
push
leave
test
and
(bad)
mov
push
stos
mov
popf
out
xchg
sar
mov
mov
jmp
sti
sub
in
les
xchg
adc
in
aam
sti
(bad)
popf
xor
jge
dec
add
push
jge
jg
sub
mov
fldcw
pop
adc
sub
inc
mov
add
repnz
sbb
inc
pop
and
xor
mov
push
pushf
cli
popf
push
push
test
popa
nop
adc
pop
mov
mov
ret
cli
call
inc
mov
mov
mov
pand
push
aaa
add
call
jnp
inc
xor
int3
aaa
xchg
jo
fs
mov
cmp
push
mov
mov
xor
aaa
inc
(bad)
movs
repnz
sbb
in
and
movups
mov
pop
out
(bad)
jo
mov
ss
cmp
pop
ds
outs
jns
xchg
loope
pop
pop
mov
jae
cmp
popfw
pop
add
sbb
sbb
add
dec
xor
je
icebp
inc
clc
add
and
dec
dec
pop
rcl
fld
inc
add
push
mov
jecxz
inc
ja
call
cli
enter
adc
test
loope
fild
mov
push
inc
mul
mov
mov
loop
sbb
ss
add
clc
neg
(bad)
pop
xchg
test
pop
sbb
mov
jne
adc
ret
jp
mov
loop
mov
jns
add
pop
(bad)
mov
cdq
mov
inc
and
and
pop
pushf
test
sub
test
dec
call
frstor
nop
pusha
mov
aas
xchg
cdq
(bad)
out
stos
adc
arpl
xlat
iret
icebp
jno
aad
pop
cmp
cli
sbb
pop
hlt
jge
(bad)
jp
aam
scas
loop
sbb
sub
in
mov
push
pop
add
mov
pop
jl
xor
pop
ins
mov
inc
sbb
ss
rol
mov
mov
cwde
das
inc
jmp
or
out
adc
mov
jp
cmp
inc
loop
call
push
xchg
ret
cmp
push
rcr
dec
or
popa
and
inc
jmp
stos
and
lea
push
jl
xchg
mov
jnp
out
retf
popf
push
xchg
xchg
sbb
push
dec
sar
and
into
in
adc
sbb
ins
add
push
adc
aam
jg
pushf
icebp
and
scas
stc
sub
sbb
adc
push
jbe
frstor
rol
enter
push
push
adc
mov
and
add
shl
(bad)
sbb
dec
mov
(bad)
ins
jp
rcr
stos
mov
jnp
scas
ins
int3
mov
sahf
(bad)
pop
out
push
pop
or
sbb
xchg
dec
or
or
aad
clc
dec
dec
xchg
and
mov
jecxz
add
or
jmp
jl
int3
jmp
pushf
mov
out
jg
addr16
(bad)
jmp
movs
mov
xor
dec
pusha
retf
leave
rol
inc
jge
int3
sbb
inc
in
mov
xor
bound
repnz
jne
xor
das
jle
sbb
lock
ins
and
inc
test
inc
adc
sub
cwde
in
daa
scas
inc
ret
push
out
mov
add
fucomip
sub
fwait
push
cmp
dec
dec
cmp
mov
sub
sbb
jge
call
pop
test
adc
imul
inc
int
js
lahf
ins
pop
ss
mov
imul
push
xchg
test
jp
arpl
lods
popa
sbb
rol
fcomip
aaa
xchg
add
mov
pop
push
jmp
scas
xchg
fdiv
mov
inc
mov
bound
lds
sub
shl
icebp
push
adc
fist
ret
mov
or
stos
popf
retf
je
jle
add
scas
fsub
lods
sbb
push
int3
fwait
(bad)
pop
movs
repz
aas
push
scas
push
lock
rcr
mov
inc
outs
inc
pusha
arpl
jo
sbb
ins
cmps
adc
mov
retf
pop
xchg
xlat
xchg
cmps
mov
cmp
(bad)
in
xchg
push
or
mov
popa
fmul
and
cmp
sub
mov
shl
fsub
movs
ret
mov
push
shl
out
jo
lods
mov
mov
pushf
or
int3
xchg
inc
movs
pop
dec
cmps
pop
movs
xchg
lahf
adc
les
dec
mov
pop
xchg
fwait
int3
add
push
xor
rcr
sar
shr
dec
push
inc
call
fbld
xlat
xchg
bound
mul
inc
sub
add
sbb
push
sbb
push
push
scas
mov
adc
inc
and
xchg
inc
jle
in
push
ins
sahf
mov
cld
test
push
xlat
or
lods
xor
aam
sti
sub
cmc
in
outs
out
cmp
fcom
in
push
xchg
int
pop
(bad)
scas
ins
xor
inc
mov
and
mov
pusha
push
mov
aaa
shr
enter
mov
cmp
dec
loopne
sub
jecxz
cmps
xor
xchg
nop
dec
push
(bad)
cmp
add
pushf
lea
or
add
pop
xor
xlat
push
push
je
mov
xlat
out
or
adc
(bad)
retf
jo
xchg
dec
jns
stos
xlat
mov
mov
push
sar
jge
xchg
scas
nop
adc
adc
inc
mov
aaa
and
mov
jno
fstp
pop
ins
pop
aad
pop
(bad)
out
mov
xor
sbb
retf
inc
mov
inc
fadd
fcmovnb
dec
xchg
jb
jmp
mul
test
cmp
pop
pusha
xchg
das
sub
mov
mov
int
nop
push
int3
mov
and
xlat
mov
out
out
pop
add
add
sub
push
ret
pop
(bad)
into
or
(bad)
lahf
cmp
nop
xor
retf
arpl
pop
dec
shl
outs
rcl
imul
lock
out
add
push
std
in
and
movs
ss
repz
adc
pop
mov
jl
scas
xchg
mov
cmp
sti
adc
addr16
jmp
mov
push
out
push
sub
cld
sar
add
sub
in
push
icebp
aam
xchg
not
xchg
or
daa
jmp
sbb
shl
fldlg2
cmp
xchg
cmp
stc
and
loope
push
jmp
daa
arpl
in
add
mov
cmps
into
mov
sbb
std
in
loopne
jmp
jmp
inc
mov
xchg
shr
mov
mov
pop
test
mov
xlat
int
test
and
xchg
jns
lea
cmp
loope
test
adc
test
dec
mov
pop
adc
jge
mov
stos
add
cwde
fimul
sub
fild
push
mov
cmp
jb
(bad)
jmp
mov
mov
jae
and
xchg
lock
test
xchg
loope
push
xchg
push
ret
call
retf
xor
mov
mov
out
retf
call
call
in
scas
ror
dec
lea
jg
jo
enter
pop
xchg
imul
fs
stc
mov
mov
fldln2
mov
test
mov
jae
jnp
and
fimul
jne
adc
aad
add
push
mov
movs
dec
pop
nop
fisub
sbb
and
enter
add
or
cs
xor
jo
jbe
xor
cwde
jecxz
adc
mov
movs
fistp
dec
inc
cmps
or
dec
aam
jns
sbb
retf
jp
xchg
scas
shr
sbb
sub
fist
cwde
(bad)
adc
pop
movs
xor
pop
fdivr
mov
jne
and
push
ret
ror
sbb
dec
das
jmp
aas
fs
sub
xchg
mov
(bad)
push
or
push
pop
lahf
xor
lods
add
outs
fisub
jae
or
stc
loope
ins
out
jno
ins
stos
and
push
out
or
mov
jp
mov
loopne
mov
inc
jne
jo
and
pop
add
jmp
fcomp
loopne
or
(bad)
clc
call
stos
cdq
and
and
outs
cmp
or
dec
cs
pop
cld
add
(bad)
mov
push
jle
fdiv
jo
outs
ret
lock
nop
rol
and
(bad)
aad
jmp
shr
jmp
jle
add
pop
arpl
popa
call
jne
inc
loopne
idiv
cmps
lods
cmc
push
push
mov
and
jno
push
into
inc
in
or
jl
push
jbe
ret
inc
push
or
pop
cmps
fld
shl
pop
int3
cli
test
or
ins
fwait
add
jnp
call
rcr
int
dec
push
daa
(bad)
sbb
mov
dec
xchg
jo
(bad)
cmp
add
pop
dec
add
pop
push
xchg
out
(bad)
adc
repnz
push
add
movs
pop
ja
jnp
xor
ja
mov
sbb
cmp
cmp
xor
adc
and
sbb
iret
mov
pop
mov
adc
mov
push
push
pop
movs
or
xchg
je
jge
mov
pop
int3
gs
retf
int
sbb
rcr
pusha
xchg
inc
stos
fwait
mov
mov
jb
cli
xor
mov
adc
int
xor
mov
adc
clc
cmp
sub
sub
inc
jno
cmc
cs
sub
ror
cmovs
scas
int3
popa
cdq
xchg
xor
jo
in
into
les
push
dec
dec
xor
sahf
fld
lock
jp
sahf
retf
pop
ds
pop
push
xchg
ret
sahf
imul
out
int3
adc
mov
or
push
sbb
and
dec
loopne
and
test
ret
push
mov
(bad)
mov
xor
repz
movs
add
mov
mov
sub
xor
cmps
inc
inc
jmp
ins
jg
int3
in
jl
in
push
inc
add
mov
xchg
jle
adc
ins
sti
adc
dec
out
mov
cmp
stos
stos
imul
or
sahf
pop
stos
bound
fsubr
add
loopne
call
fistp
add
(bad)
repnz
retf
cld
sub
add
xchg
aaa
push
mov
dec
mov
es
cmp
imul
sbb
test
int3
aaa
sar
push
lock
pusha
ja
shl
adc
xchg
mov
int
xchg
jnp
gs
loope
xor
xchg
mov
or
dec
mov
mov
ror
push
pop
mov
dec
(bad)
cmps
mov
add
sub
push
xor
into
sahf
inc
dec
dec
push
loope
push
xchg
cmp
popa
xchg
pop
pusha
(bad)
dec
fbstp
dec
xor
xchg
xchg
xchg
stos
mov
sbb
sub
out
cli
sar
repz
inc
mov
lods
and
cli
div
xchg
cli
ds
mov
sub
cmp
pop
loope
mov
pop
mov
mov
mov
(bad)
fsubr
enter
rcr
xor
mov
or
sub
mov
mov
mov
mov
add
adc
ret
and
mov
aas
xor
(bad)
adc
ins
pop
(bad)
sub
fistp
jno
jmp
dec
and
(bad)
sbb
jmp
retf
add
push
clc
mov
les
fidiv
outs
mov
shr
es
push
js
dec
pop
aad
retf
xchg
ret
lea
rol
lods
fcom
and
inc
jecxz
ror
mov
jb
xor
test
(bad)
adc
cmp
mov
push
mov
mov
adc
dec
aam
push
sbb
pop
jnp
push
cs
fxch
imul
jo
pop
mov
jae
jb
mov
xchg
and
cwde
add
or
(bad)
pop
mov
cwde
sbb
imul
fs
mov
jo
xor
push
enter
adc
out
fs
dec
add
sub
lods
mov
loop
mov
enter
call
sbb
mov
mov
fwait
mov
cmp
out
adc
push
mov
push
call
xchg
movs
xor
and
int3
sahf
pop
jp
pop
push
and
xlat
hlt
add
xor
xchg
popf
mov
ins
mov
imul
iret
cmp
and
dec
push
rcl
aad
xor
fs
stos
lea
inc
push
(bad)
in
and
lahf
shr
scas
xchg
pop
lods
repz
xor
sahf
jmp
cpuid
lahf
push
int3
out
aad
pop
or
cmp
idiv
dec
mov
stc
sbb
mov
xchg
repnz
mov
dec
lea
cmp
psubusw
xor
sub
jmp
jecxz
ds
xor
xor
mov
sub
cmps
rol
or
cmp
mov
sub
mov
in
jmp
(bad)
jmp
in
xor
sbb
pop
jge
call
sbb
call
lock
fistp
jmp
sbb
push
push
(bad)
push
jge
adc
jp
add
jecxz
or
sbb
cmps
arpl
(bad)
jg
jae
add
aad
pop
sub
aam
mov
call
sbb
add
inc
sub
mov
imul
movs
mov
jecxz
mov
jmp
mov
ret
cmp
jb
scas
sub
outs
sar
mov
mov
jns
add
pop
or
mov
arpl
movs
jg
dec
std
push
pop
outs
clc
aaa
or
pop
add
ja
fidiv
ds
or
or
aaa
ror
adc
(bad)
xchg
cmc
add
movs
mov
pop
mov
imul
icebp
iret
cli
lea
push
adc
jmp
xchg
mov
rcr
xchg
stc
stc
adc
je
or
push
mov
sti
and
jge
movs
cs
(bad)
loop
cmp
test
xchg
retf
inc
dec
xor
loop
std
pop
jmp
gs
out
pop
retf
stos
xchg
inc
out
loope
retf
stc
adc
push
xor
aam
arpl
push
ins
cdq
icebp
dec
xchg
fcomp
sub
pop
arpl
jbe
push
mov
sar
and
(bad)
das
inc
ins
pop
enter
mov
push
mov
push
sbb
mov
loopne
mov
and
mov
fs
imul
jns
retf
repz
(bad)
jae
mov
and
mov
jno
sbb
dec
call
jb
fdivr
sbb
pop
pop
inc
jl
inc
mov
xor
(bad)
in
mov
int3
aaa
fld
pop
out
and
(bad)
daa
ficomp
adc
add
pop
into
xor
adc
fimul
in
pusha
mov
loop
mov
cmp
cmp
and
cmp
por
dec
mov
jo
(bad)
(bad)
fsub
or
rcl
daa
outs
out
call
loopne
sub
push
mov
out
pop
cdq
cmp
mov
ret
push
sbb
pushf
jge
sub
mov
test
test
cmp
mov
jnp
into
or
fs
push
pop
imul
jne
std
enter
call
popf
inc
cld
(bad)
pop
mov
xchg
out
push
leave
add
cdq
faddp
dec
push
lods
mov
fsubr
ja
adc
jo
mov
jmp
or
aam
stc
xchg
xchg
test
sub
adc
cmp
in
inc
add
pop
sub
std
or
(bad)
loopne
cmp
les
(bad)
lea
add
test
ja
and
push
jne
push
cmp
mov
adc
movs
hlt
imul
dec
pop
std
xor
pop
movs
mov
repz
sub
fwait
ds
lea
shl
mov
gs
push
aad
jns
mov
mov
in
xor
push
mov
mov
dec
test
jns
rol
xchg
scas
or
or
in
adc
xchg
sbb
into
movs
test
movs
rcr
mov
cwde
add
pop
mov
sbb
jmp
clc
movs
sbb
daa
xchg
or
or
out
xchg
fstp
add
pop
or
mov
popa
mov
pusha
out
test
mov
push
xchg
leave
fnstsw
and
dec
push
aam
fs
and
mov
cmp
bound
dec
cmp
fwait
ret
fist
stos
add
mov
push
xor
fwait
adc
inc
push
adc
retf
out
jp
dec
inc
movs
dec
mov
sbb
xor
add
dec
push
shl
cmp
int
loope
mov
test
dec
pop
mov
pop
mov
mov
call
mov
js
mov
jg
dec
dec
xor
pop
inc
pop
(bad)
pop
and
call
jo
idiv
cmp
fwait
sub
xchg
call
loop
outs
sbb
mov
js
jbe
push
loopne
sbb
jle
(bad)
add
sbb
mov
test
cmp
daa
mov
xor
imul
popa
xchg
dec
(bad)
dec
mov
sbb
fistp
cmps
cmp
into
les
stos
adc
clc
js
ins
or
push
mov
loope
xor
call
jl
jbe
scas
and
sub
lods
mov
mov
xchg
fcomip
and
addr16
aam
and
mov
inc
pop
xchg
clc
out
scas
xchg
jle
fcom
push
xchg
jo
mov
loop
jmp
loopne
jnp
and
int3
sbb
(bad)
std
ins
pop
in
popa
cmp
add
ret
nop
ror
scas
out
pop
cmp
aaa
mov
dec
mov
xchg
pop
(bad)
dec
push
adc
mov
sbb
sub
ret
std
and
jmp
mov
ds
or
mov
retf
push
outs
sub
les
stc
cdq
ds
pop
sbb
dec
adc
mov
cmps
aas
cmp
pop
xchg
add
pop
popa
test
pusha
aaa
imul
jb
xchg
push
repz
cld
mov
aaa
mov
clc
sar
mov
fbstp
pop
mov
xor
xor
add
jns
in
jge
mov
add
aas
xchg
int3
scas
sbb
mov
std
fisubr
iret
rdpmc
push
sbb
inc
mov
int
bound
cmp
out
mov
es
out
xchg
sbb
jae
clc
int3
inc
bound
inc
popf
mov
xor
cmp
fadd
xchg
inc
dec
pushf
adc
cmp
xchg
or
cli
stos
scas
aam
cmp
neg
push
dec
repnz
iret
pop
pop
test
leave
add
je
lds
push
outs
mov
das
ins
xor
stc
sar
mov
mov
inc
sbb
lods
in
mov
jbe
rcl
popf
dec
aam
push
inc
pop
fisttp
inc
js
xor
(bad)
xchg
mov
nop
pop
xchg
test
das
lock
jae
jne
sbb
mov
push
ins
sub
inc
jb
mov
arpl
popa
enter
sub
in
imul
or
(bad)
push
loope
pop
outs
retf
ret
jg
push
xor
push
into
nop
adc
mov
nop
adc
fidiv
or
or
add
cmp
or
setae
and
cdq
idiv
mov
xor
movs
adc
sub
in
sub
js
add
inc
push
leave
jecxz
imul
out
in
xchg
(bad)
cs
or
cld
aas
jae
jno
in
mov
popf
mov
shl
dec
push
add
rcr
or
jmp
mov
lahf
dec
pusha
inc
and
mov
or
fldcw
out
cmc
addr16
stc
pop
xchg
dec
cdq
ret
mov
sub
fcomp
jb
(bad)
push
jg
lods
mov
fnstenv
in
and
jb
xchg
pop
arpl
fisttp
mov
call
push
(bad)
imul
adc
dec
adc
mov
push
ror
data16
fisub
sub
(bad)
adc
sub
mov
mov
adc
ja
dec
cmp
push
push
xchg
das
cmps
data16
fndisi(8087
jecxz
jnp
mov
push
mov
dec
dec
call
adc
fdivr
sub
out
mov
add
inc
repz
cmc
mov
aas
jle
mov
adc
arpl
add
or
cmp
jae
std
(bad)
jae
bound
mov
in
xor
pop
jno
pusha
in
adc
repnz
mov
pop
scas
xchg
gs
xlat
scas
jmp
stc
aas
dec
mov
out
push
jg
ret
xchg
push
and
xchg
dec
into
pop
pop
ret
push
jle
stos
xor
push
sub
fnstenv
xchg
pop
pop
ins
add
call
inc
cmp
cwde
ss
pop
pop
fxch
stos
rcl
sub
retf
pop
lea
popf
mov
mov
jl
inc
jne
cli
mov
and
bound
data16
call
pop
lods
sub
mov
or
cmp
push
push
inc
cmp
sbb
push
enter
pop
dec
frstor
sbb
inc
sub
pushf
test
xchg
xor
fmul
dec
jmp
stos
mov
xor
mov
jnp
repnz
adc
pop
pushf
stos
xchg
addr16
mov
add
xor
(bad)
sub
rcr
shl
and
sbb
outs
and
pop
lea
add
out
fsubr
retf
nop
cmp
ds
pop
fmulp
mov
adc
jno
cmp
xchg
(bad)
in
stos
movs
fsubr
add
mov
ffreep
scas
call
mov
jno
sub
xchg
add
mov
pop
fwait
cmps
sub
mov
cmp
adc
aaa
out
loop
dec
mov
imul
test
mov
call
iret
sub
aas
loop
sub
sub
xchg
out
out
out
xor
cld
adc
cs
cmps
jmp
cld
and
stos
mov
test
sti
in
push
and
xor
add
pop
push
dec
add
adc
and
fld
mov
out
(bad)
push
outs
out
retf
out
push
dec
or
mov
pop
push
movs
xchg
adc
xchg
pusha
icebp
sbb
sbb
rol
sahf
out
jecxz
and
enter
mov
in
test
movs
push
lds
loop
xchg
mov
mov
ins
dec
dec
mov
jg
mov
dec
test
add
mov
repz
mov
add
test
cmp
mov
mov
cwde
(bad)
jae
fstp
call
fwait
mov
xchg
and
bound
inc
mov
clc
or
cs
xor
xchg
fisttp
pop
outs
push
ins
add
push
cmp
xchg
xchg
jno
gs
pop
xor
inc
call
rol
retf
inc
adc
add
cs
pop
mov
fisub
jno
push
ret
cld
jl
cdq
or
inc
adc
push
ficom
pushf
xchg
xchg
pop
add
push
je
loope
add
daa
loop
add
aaa
int
push
ss
adc
jo
jl
xchg
dec
xchg
call
jle
pop
inc
in
out
loop
fwait
lods
inc
mov
push
cmps
rcl
xchg
xor
imul
jo
lods
pop
jno
sbb
sub
jbe
data16
sbb
ss
imul
hlt
cmp
adc
call
cld
sbb
adc
push
or
arpl
push
cmc
sbb
or
cld
imul
pushf
(bad)
in
push
cmp
sbb
lea
icebp
mov
test
scas
xor
dec
lods
cld
daa
dec
loopne
sahf
xchg
inc
sub
mov
mov
xchg
aam
pop
or
bound
or
(bad)
in
mov
scas
cmps
xchg
sbb
repnz
cmp
jl
inc
lea
iret
(bad)
jge
mov
jno
or
inc
xchg
cdq
daa
mov
lss
xchg
jno
xchg
mov
jne
imul
cli
rcr
jl
bound
mov
xchg
lods
out
or
push
leave
into
repnz
test
add
mov
rcl
jmp
push
push
sub
idiv
add
hlt
(bad)
push
loopne
jnp
adc
jecxz
or
mov
jns
xacquire
int
mov
loopne
in
sbb
push
cwde
ins
xchg
outs
add
mov
dec
out
add
cmps
push
test
jecxz
jb
lods
stos
fisub
cmp
call
in
push
mov
xor
clc
retf
scas
push
popa
cmp
es
test
dec
mov
xor
jne
aam
mov
ror
das
aad
test
aam
mov
mov
inc
xor
inc
fild
dec
mov
adc
pop
or
inc
add
mov
arpl
xlat
icebp
fmul
pop
outs
dec
or
lock
cmps
and
mov
jmp
dec
outs
xlat
repnz
xor
adc
int3
mov
daa
inc
pop
popf
int3
mov
inc
adc
fs
in
ror
add
(bad)
and
retf
leave
imul
in
inc
arpl
ret
pop
mov
pop
cmp
or
mov
add
or
outs
fdivp
mov
mov
mov
shl
pop
fst
cdq
cmp
jmp
sbb
sub
xchg
jl
pop
xchg
aam
icebp
(bad)
int
fcmovbe
pop
xchg
push
pop
mov
add
xchg
popf
push
xchg
call
pop
jecxz
stos
dec
or
cmp
pop
and
shl
sahf
mov
jns
popf
mov
cmp
retf
mov
xchg
(bad)
push
lock
mov
adc
aas
cmps
out
cmc
in
jnp
and
arpl
lea
popa
jp
xchg
das
imul
sbb
cld
test
mov
jb
(bad)
push
leave
sar
pop
in
pop
jmp
test
push
bound
imul
xchg
pop
xor
or
rol
sub
fs
mov
and
pop
pop
clc
test
xor
adc
xchg
rol
mov
cmp
fs
(bad)
dec
dec
cmp
mov
(bad)
push
les
push
push
or
inc
mov
fs
pop
cmc
fcmovbe
(bad)
mov
cld
(bad)
aaa
sbb
cmp
mov
jne
(bad)
dec
pop
imul
pop
mov
jmp
mov
cdq
mov
jmp
stos
movs
xchg
xor
jmp
fcomp
jmp
cmp
fs
dec
gs
lds
and
bound
xor
ins
rcr
pushf
psadbw
gs
and
sti
push
(bad)
cmc
and
sbb
xor
outs
das
mov
mov
mov
icebp
jno
lea
or
into
adc
sbb
or
call
stc
cmps
mov
jle
imul
call
inc
js
xor
ins
sar
or
and
scas
dec
std
fild
and
pusha
stos
mov
or
and
adc
fwait
repz
(bad)
adc
and
adc
adc
add
adc
call
dec
cmp
pop
fsubr
shl
sbb
lock
xor
nop
mov
mov
shrd
(bad)
push
fnstcw
ins
outs
cmps
jecxz
mov
jo
mov
and
mov
add
scas
add
ret
(bad)
fdivr
call
enter
popf
cld
retf
adc
adc
dec
cmp
(bad)
adc
call
pop
or
ins
add
mov
mov
mov
ficomp
mov
ds
(bad)
xor
dec
dec
sbb
call
test
mov
das
sub
sbb
mov
das
outs
mov
push
jmp
sub
add
cmp
xchg
mov
jno
and
or
adc
mov
popa
ja
loope
xchg
(bad)
fidiv
sub
lea
stc
ja
inc
imul
push
mov
or
cmps
fist
(bad)
retf
rcl
pop
ins
cmp
lods
jmp
mov
sbb
jmp
and
mov
dec
xchg
pushf
out
inc
lock
sbb
sbb
iret
mov
cmp
inc
xchg
mov
or
fcmovnb
scas
push
(bad)
sbb
push
dec
jp
ret
mov
(bad)
adc
sbb
sahf
test
imul
jns
jecxz
dec
push
xor
test
mov
test
dec
add
mov
(bad)
push
xchg
mov
cld
and
inc
pop
(bad)
fistp
lock
outs
test
lods
add
scas
pop
mov
and
push
cmp
push
mov
mov
cld
lea
pop
iret
sbb
mov
pushf
stc
pop
inc
cli
outs
outs
jl
dec
fist
adc
mov
cmps
into
sub
cmp
pusha
sub
xchg
pusha
add
sbb
inc
dec
cli
enter
mov
das
xlat
add
aad
pop
rcr
pushf
ss
xchg
dec
(bad)
pop
stos
pop
pop
push
movs
enter
imul
mov
(bad)
xchg
test
sbb
adc
dec
popf
cmp
adc
ret
add
mov
iret
or
cld
mov
out
sbb
sub
ss
lahf
pop
and
fnsave
jb
adc
xchg
inc
movs
cmc
mov
lods
sbb
pop
mul
invlpg
mov
or
sub
inc
rol
stc
adc
pop
lea
and
enter
dec
jmp
imul
mov
xlat
(bad)
jmp
mov
adc
pop
dec
inc
add
fs
mov
clc
adc
enter
mov
test
jb
fist
shl
imul
int3
nop
mov
sub
outs
jbe
dec
adc
mov
ja
pop
scas
push
inc
fwait
pushf
imul
jae
xlat
xchg
ja
test
push
retf
sub
mov
js
push
neg
mov
stos
inc
idiv
push
fdivr
xchg
rcl
les
sbb
jp
fcmove
and
mov
jecxz
outs
stos
sbb
mov
jbe
xor
sahf
les
jnp
test
inc
in
dec
jo
dec
mov
(bad)
arpl
mov
ja
mov
jge
clc
jle
add
into
jne
leave
std
cmps
add
ret
ds
inc
mov
mov
cmp
int3
and
or
hlt
adc
imul
mov
cmp
jno
mov
dec
push
es
scas
ret
inc
inc
and
mov
sbb
xor
(bad)
sub
mov
jae
jnp
(bad)
sub
daa
cdq
inc
adc
ds
retf
add
pop
and
jae
sbb
iret
sub
and
out
push
adc
mov
stc
cmps
repnz
adc
imul
sbb
mov
std
jmp
dec
mov
out
cmp
cmc
jg
cmps
out
mov
stos
sub
jmp
sbb
(bad)
rcr
mov
mov
dec
sub
inc
cmps
inc
sub
call
add
ins
or
mov
cmp
leave
xor
pop
jbe
cmp
div
xchg
sar
push
addr16
sub
jnp
leave
adc
mov
inc
sbb
ja
jmp
xchg
cmp
pop
mov
stc
add
loope
shl
scas
mov
mov
pop
ins
out
cs
pop
add
or
pop
scas
and
popf
adc
inc
(bad)
push
test
jnp
out
in
cmps
mov
cwde
xchg
add
js
imul
cmp
test
mov
inc
inc
(bad)
sub
cmc
fimul
daa
fyl2x
fsubr
push
clc
movs
sub
repnz
push
push
imul
fcom
xor
retf
cmps
loop
add
lods
cmp
add
fwait
and
leave
cmp
jns
stos
dec
daa
iret
lods
arpl
and
retf
fisubr
retf
add
add
lea
dec
and
xchg
inc
push
retf
or
sahf
mov
movs
aas
(bad)
and
sub
leave
test
xchg
or
mov
fbld
jg
inc
cmp
cs
stos
or
loop
fcom
shl
xor
xchg
pusha
mov
dec
mov
gs
aad
xchg
xchg
jecxz
pusha
loop
add
cmp
xchg
xchg
sub
push
loop
fsub
inc
mov
xor
rol
out
cmp
mov
aaa
bound
stc
mov
out
and
adc
mov
sbb
cmp
mov
mov
mov
push
xor
dec
inc
push
sub
mov
(bad)
push
shl
iret
lahf
fnstsw
jmp
in
jo
cmp
push
rcr
loopne
(bad)
in
or
push
jne
mov
jbe
xadd
jl
sub
mov
dec
and
les
add
jmp
push
mov
aam
jne
(bad)
xor
jbe
in
and
jne
loop
(bad)
repnz
icebp
push
in
sub
(bad)
cmp
mov
jg
dec
jns
out
(bad)
mov
cmp
sub
es
cmp
(bad)
nop
xor
cmps
call
(bad)
mov
sub
adc
push
pop
ret
mov
stc
ins
xchg
xchg
lods
adc
repz
push
sbb
adc
mov
push
inc
and
dec
fnsave
fdiv
sbb
inc
mov
call
xor
imul
jg
or
pop
loop
pop
shr
cmp
or
xchg
xor
add
(bad)
std
push
imul
xor
mov
xor
mov
xchg
push
nop
shr
shl
add
or
inc
mov
jmp
outs
pop
(bad)
aas
aas
test
dec
adc
fs
pop
repnz
enter
je
hlt
xchg
mov
push
xor
or
pusha
xchg
pusha
lea
(bad)
lds
rol
ds
mov
mov
call
pop
shr
iret
iret
fdivr
aad
or
inc
sbb
sub
imul
or
or
(bad)
lahf
jp
mov
xchg
push
adc
dec
stos
iret
pushf
sub
(bad)
jns
int
repnz
loop
mov
fld
stos
js
in
das
into
mov
in
scas
sub
retf
cdq
test
mov
in
or
mov
cmp
xchg
jae
mov
push
test
rol
out
adc
xchg
test
mov
js
and
xor
fcmovnbe
jle
dec
sbb
psubusb
pop
jg
call
sbb
and
idiv
ins
jns
pop
loope
xor
push
and
push
pusha
scas
pop
sar
rol
adc
repnz
sbb
std
mov
pop
movs
push
add
cmps
jle
dec
(bad)
pop
icebp
and
fnstcw
jecxz
mov
ja
popf
les
fidivr
pop
mov
xchg
stc
cmp
jbe
mov
jecxz
(bad)
ss
add
adc
leave
sar
nop
xchg
inc
out
mov
stos
call
sub
ss
dec
push
pop
gs
(bad)
nop
mov
mov
in
sbb
push
das
das
in
mov
jo
jg
shl
pop
sbb
ror
mov
stc
jb
sub
jecxz
jle
cmp
jge
adc
push
(bad)
out
adc
in
in
aam
sahf
lea
lods
fiadd
jg
sub
iret
push
cwde
repz
mov
call
lds
jns
icebp
call
xchg
rol
psubusb
addr16
test
mov
sbb
jne
fiadd
inc
cmp
pop
cmp
gs
dec
push
pop
and
jno
sbb
inc
addr16
xchg
popf
jb
fiadd
mov
xchg
cld
imul
cmp
adc
adc
inc
ins
push
outs
(bad)
clc
xchg
jp
fwait
mov
cmps
shl
pop
xchg
cmps
icebp
movs
pop
shl
icebp
es
pop
jl
adc
in
retf
sub
stc
push
mov
push
call
lock
enter
mov
add
pop
inc
jecxz
xchg
dec
in
or
mov
mov
in
pmaxsw
rcl
ret
inc
mov
sbb
dec
cdq
mov
xchg
adc
xchg
inc
xor
xchg
mov
jmp
in
mov
jmp
jno
jno
xchg
mov
inc
loop
cmps
and
jmp
addr16
xchg
ja
enter
xchg
(bad)
cmp
call
cmp
inc
out
mov
iret
add
mov
or
test
repz
(bad)
rol
data16
inc
add
test
call
out
inc
aad
push
xor
mov
pop
pop
ret
xor
leave
xor
outs
fwait
push
add
xor
or
add
mov
hlt
stc
adc
inc
or
cmps
xor
xor
adc
je
and
rcr
jo
icebp
repnz
jl
pop
call
jae
bound
jae
addr16
cs
loope
fistp
inc
inc
sub
fwait
pop
daa
loope
ror
shl
jns
push
adc
(bad)
jb
mov
adc
in
pop
mov
sub
sar
adc
rol
dec
jmp
test
inc
ins
xor
aad
mov
int
test
pushf
test
int
dec
daa
adc
mov
mov
xchg
xlat
int3
cmp
dec
aaa
dec
pop
popf
cmps
sbb
mov
and
fs
jg
enter
imul
std
jge
mov
repz
mov
ret
dec
es
data16
iret
les
or
or
mov
out
stos
(bad)
or
push
inc
stos
inc
cmps
pop
sub
mov
mov
lea
and
cld
mov
push
dec
xchg
in
add
repz
or
out
mov
mov
xchg
pop
xchg
loopne
jmp
test
mov
movs
gs
push
int
mov
jb
dec
repnz
inc
pop
xor
in
push
js
push
inc
ret
rcr
retf
mov
or
cwde
cmp
xchg
jmp
fst
fimul
jmp
cli
pop
push
mov
pop
jmp
popf
mov
pop
aaa
out
jae
push
shr
sub
jns
dec
aas
into
ja
aas
xchg
jo
mov
out
stos
fstp
mov
mov
sbb
jne
xor
in
lahf
push
imul
inc
popf
cmp
mov
xchg
(bad)
cwde
pop
retf
add
mov
adc
(bad)
dec
mov
adc
push
push
ins
pop
sub
jne
aaa
imul
je
inc
andnps
jl
jnp
push
int
rcl
cdq
push
push
and
aas
(bad)
call
aam
jle
and
sub
cli
stos
xchg
call
mov
jmp
cmp
mov
mov
pop
fdiv
scas
lea
cwde
std
sbb
movs
add
push
jb
push
les
inc
push
call
and
xchg
ja
jo
dec
inc
xchg
out
shl
ins
test
jg
pop
popa
outs
sub
mov
or
jle
cmp
inc
or
fsubrp
push
mov
cmps
mov
or
mov
dec
push
in
sub
and
(bad)
fild
push
ret
das
xor
and
push
mov
pop
pop
jp
dec
xlat
or
(bad)
and
mov
cmp
xchg
repz
mov
std
cwde
cmc
(bad)
aas
cld
dec
adc
cmp
lods
add
repnz
pushf
pop
fnstsw
or
js
jne
int
aam
push
sbb
mov
or
scas
cli
xchg
mov
cmp
and
adc
jg
sbb
(bad)
call
pop
icebp
xlat
push
mov
fdiv
xchg
xor
mov
adc
add
les
aaa
push
repz
pop
icebp
cmps
lods
inc
mov
mov
aam
mov
(bad)
xor
mov
jbe
mov
ja
lock
jae
xchg
loope
lods
mov
scas
or
enter
mov
cmp
mov
das
sub
sbb
xor
outs
repnz
fwait
mov
mov
cmp
inc
rol
es
cmp
jecxz
clc
and
jae
sub
(bad)
adc
xchg
lea
ins
lahf
jae
adc
(bad)
lods
sbb
(bad)
cmp
(bad)
rcr
lods
xchg
jb
imul
out
jl
int
push
jp
mov
cmc
in
pop
adc
xlat
inc
adc
clc
in
mov
iret
sahf
fcmove
lahf
js
pop
pop
and
xor
in
or
xor
dec
add
mov
int
(bad)
fild
fsubrp
mov
mov
outs
loop
nop
mov
push
fisub
pushf
push
ret
mov
adc
mov
or
stos
adc
xlat
push
sub
sbb
jns
mov
sub
ret
mov
mov
sub
inc
mov
enter
repz
and
sbb
mov
mov
xlat
imul
shr
mov
out
push
scas
gs
mov
jl
push
mov
jg
call
lds
dec
add
sbb
sbb
(bad)
cmc
jo
fs
call
xor
inc
jg
jge
mov
lea
fsubr
dec
cmp
aad
in
out
add
je
popa
pop
scas
pop
cs
xor
xchg
std
popf
lock
ret
sbb
jg
jge
shl
pop
pop
dec
out
inc
into
add
bound
cmps
ins
out
xchg
(bad)
aaa
pop
jae
out
(bad)
call
fild
mov
dec
ds
bound
push
loope
mov
ret
mov
mov
jns
ins
mov
xor
iret
or
pop
(bad)
inc
imul
(bad)
leave
mov
xchg
pusha
xchg
pushf
fldenv
or
adc
push
and
mov
push
fdivp
std
mov
push
mov
push
clc
xor
scas
xchg
(bad)
pop
sar
sar
xor
sub
cmp
and
std
jae
retf
adc
unpcklps
jmp
ins
adc
dec
nop
cmp
inc
push
jno
add
movs
int
cs
mov
jns
jb
ror
pusha
xor
jmp
mov
neg
push
inc
loope
and
sbb
popa
pop
jae
test
mov
mul
or
jge
imul
cmc
out
xchg
icebp
adc
pop
loope
iret
pop
adc
pop
aam
cwde
dec
test
cmp
push
fild
mov
(bad)
outs
mov
hlt
xor
mov
cmps
xor
inc
cmp
nop
xor
and
addr16
mov
fcmovb
shl
jns
outs
lahf
fisubr
xor
mov
jmp
ins
push
(bad)
xchg
inc
dec
push
jl
dec
ficomp
test
out
jae
or
pop
inc
inc
dec
sbb
pop
sbb
(bad)
stc
sbb
sub
pop
add
out
(bad)
movs
fmul
jmp
add
and
outs
fdiv
xchg
lahf
mov
and
mov
mov
push
dec
je
push
js
push
fnstsw
sbb
into
mov
or
inc
les
ss
fimul
lock
sbb
push
add
jl
cld
mov
(bad)
push
shl
jle
sub
mov
jl
or
fdivr
cmps
mov
dec
imul
call
xchg
dec
xchg
cmp
div
pop
int
out
mov
pushf
mov
ds
cmps
pusha
popf
pop
sti
retf
mov
(bad)
dec
in
dec
out
push
mov
js
xor
ja
in
sub
call
jnp
sbb
mov
jp
mov
aas
pop
xor
outs
adc
push
jb
jns
add
xor
adc
or
dec
clc
xchg
push
out
pop
push
cmp
cmc
aas
in
(bad)
pop
gs
in
jmp
push
adc
sbb
movs
dec
pop
cwde
mov
inc
iret
dec
mov
cmp
sbb
out
inc
enter
push
cmp
pop
fbld
or
movs
add
lods
icebp
push
sahf
adc
(bad)
push
loopne
cmp
mov
out
adc
and
outs
imul
loopne
adc
push
cmp
mov
cs
das
fist
mov
cwde
loopne
cmp
(bad)
and
push
int3
cmp
jbe
push
cli
rol
stc
aad
leave
je
jmp
imul
add
out
adc
pushf
stos
std
pop
fst
or
xor
data16
dec
pop
(bad)
pop
xchg
test
addr16
mov
xchg
fs
pusha
inc
inc
sahf
sti
shr
aaa
fstp
jg
cs
jp
adc
or
add
jbe
jbe
jae
inc
and
xchg
mov
repz
pop
jbe
mov
jmp
shl
sbb
mov
sbb
inc
adc
jne
push
fcomi
push
dec
add
test
ss
retf
enter
sbb
sahf
cli
inc
mov
shl
loope
scas
out
fwait
mov
adc
(bad)
fidivr
pop
fcomp
out
sti
ja
stos
add
adc
pop
push
xor
aad
push
aam
xchg
cmp
dec
xchg
cmps
in
or
repnz
or
cmp
mov
call
dec
sti
call
or
inc
into
rcl
stos
pusha
jnp
aaa
daa
fs
push
add
mov
xlat
icebp
jmp
retf
inc
es
push
aad
retf
arpl
xchg
mov
pushf
lods
into
xor
mov
out
aam
push
outs
mov
mov
jbe
or
add
js
in
addr16
inc
jecxz
test
push
xchg
mov
call
cdq
inc
pop
outs
push
cs
xlat
not
outs
mov
cdq
das
or
mov
inc
mov
std
adc
scas
xor
in
xchg
nop
and
imul
gs
and
xor
or
inc
xor
add
out
sub
push
and
and
xor
pop
mov
push
and
jne
fnstsw
ins
xor
into
jno
push
ror
(bad)
stos
sbb
test
outs
sub
mov
outs
pmulhw
fsubr
jnp
movs
adc
sbb
inc
mov
xchg
add
ins
movs
das
mov
repnz
frstor
jno
xor
xor
jg
mov
sbb
arpl
sub
das
mov
pushf
pop
aaa
mov
std
mov
sbb
in
mov
adc
sub
ins
jne
xchg
test
mov
push
cmp
mov
cdq
mov
mov
aaa
pop
add
mov
int
call
retf
jne
push
inc
mov
inc
cs
lods
fwait
jo
out
mul
xor
mov
aas
not
lock
fbld
imul
pop
in
push
inc
(bad)
ret
sub
cmps
int
inc
mov
das
xchg
ret
cmp
pop
jne
cmc
loop
inc
fs
(bad)
add
xchg
cmps
cmp
cli
jge
push
adc
mov
iret
pop
sbb
mov
mov
push
enter
and
lods
xchg
inc
pop
xor
push
cmp
sbb
aad
imul
or
jo
js
jle
(bad)
xchg
in
push
idiv
les
push
mov
or
mov
(bad)
pop
stc
mov
inc
call
mov
jmp
inc
div
push
jmp
adc
fstp
shl
cmp
pop
jae
mov
adc
test
repnz
loopne
xchg
jnp
int3
pop
jnp
ins
mov
bound
(bad)
paddb
mov
std
jne
fcomp
adc
stc
dec
enter
cld
mov
pop
dec
mov
ror
sub
and
jbe
xchg
xor
and
or
mov
bound
push
sub
jmp
cmps
outs
aaa
js
pop
pop
std
pushf
sbb
fs
pop
dec
test
aam
adc
inc
inc
nop
fisubr
sbb
mov
sti
jmp
sbb
adc
(bad)
arpl
mov
test
pusha
leave
rcl
retf
inc
pop
sbb
ret
movs
push
test
mov
mov
loope
sar
mov
mov
xchg
enter
cmp
or
jl
push
in
lahf
jnp
push
mov
add
sub
xor
inc
mov
or
dec
and
(bad)
and
inc
addr16
sub
pop
or
inc
ins
cld
adc
and
scas
or
mov
add
out
clc
scas
jle
repnz
out
jp
(bad)
pushf
push
sbb
iret
js
dec
inc
aaa
jmp
or
cdq
sub
cdq
or
mov
ret
and
cmps
adc
pop
and
xlat
inc
ss
xchg
inc
jmp
retf
and
xchg
call
fcomi
jbe
xor
je
in
add
pop
(bad)
aam
adc
mov
fmul
and
mov
adc
jge
pop
xchg
sub
shl
add
mov
imul
les
mov
retf
sbb
clc
pop
sub
jp
aaa
sahf
lods
pop
sub
ftst
ror
adc
(bad)
and
seta
imul
enter
sbb
mov
movs
clc
push
(bad)
sahf
mov
(bad)
xor
xchg
test
ss
shl
mov
leave
clc
pop
push
bound
repnz
jo
dec
mov
mov
int
outs
dec
ds
data16
movs
add
bound
jae
push
push
pusha
dec
cmp
sbb
test
in
lock
pop
paddsb
iret
call
data16
stc
adc
les
fdiv
stos
sbb
shl
scas
sub
sbb
push
fwait
imul
iret
test
mov
and
in
push
daa
or
neg
inc
sbb
jb
add
jmp
dec
out
mov
mov
out
or
xchg
jae
aam
inc
mov
lock
cmps
mov
cmp
pop
(bad)
fs
adc
xchg
push
mov
dec
mov
inc
pop
or
ins
or
xchg
out
out
lock
mov
push
jmp
or
in
xor
dec
add
push
icebp
or
mov
add
int3
xor
leave
mov
sub
out
push
inc
jmp
rcr
rcl
xchg
je
call
mov
retf
push
cmps
out
mov
adc
repnz
enter
and
(bad)
pop
pop
rol
or
sti
or
dec
xchg
mov
pop
cmc
add
xor
xchg
cmc
inc
mov
dec
and
mov
(bad)
mov
in
pop
dec
fimul
sti
out
mov
repnz
in
(bad)
fidiv
jmp
mov
mov
mov
adc
jnp
enter
stos
xor
ja
int
push
sub
(bad)
(bad)
dec
mov
fucomp
jp
xchg
adc
push
cwde
or
cmp
retf
push
not
mov
fldenv
mov
adc
push
push
jbe
inc
pushf
and
and
loopne
dec
add
jbe
mov
cmp
(bad)
cmp
fsub
shr
jg
mov
or
inc
mov
cmp
ins
call
fld
cmps
mov
ret
cmp
sub
cmps
or
out
stos
and
cdq
out
fstp
scas
rcr
mov
sbb
mov
dec
adc
test
fs
sbb
jo
aaa
test
dec
hlt
retf
shl
mov
sub
push
rcr
xchg
test
daa
mov
fstp
mov
fmul
stos
pop
idiv
jno
and
pop
pop
pop
inc
jnp
(bad)
in
(bad)
(bad)
cmp
push
xchg
add
call
jns
pop
jge
push
ror
mov
loope
cmp
dec
stos
sbb
call
bound
lahf
cmp
ret
sub
xchg
xchg
or
hlt
dec
or
mov
jo
lds
mov
test
scas
pop
xor
adc
mov
fisttp
lea
mov
test
inc
iret
(bad)
rcl
adc
push
cs
pop
push
es
inc
xchg
loopne
repnz
sbb
popf
lahf
sahf
xor
cld
xchg
movsx
in
fst
rcl
ins
sbb
mov
mov
jae
out
mov
sbb
cld
pop
dec
cwde
mov
out
push
mov
repz
aaa
push
ja
pop
call
retf
arpl
mov
or
shl
xchg
push
outs
jmp
das
xlat
lods
push
or
cmp
sub
cld
call
sub
and
dec
sar
retf
cli
mov
or
mov
mov
shl
lods
lea
mov
cmp
sbb
fcmovnbe
dec
outs
(bad)
cli
sbb
and
pop
xchg
push
cmp
ret
adc
xchg
inc
bnd
stos
ds
in
push
mov
shl
dec
jp
inc
in
sub
pop
push
(bad)
ret
mov
shl
(bad)
out
mov
push
dec
xchg
icebp
xchg
imul
nop
out
mov
(bad)
or
(bad)
xchg
(bad)
jmp
inc
(bad)
sbb
shr
js
imul
sbb
and
xor
sti
xchg
pop
sub
stos
fsubr
(bad)
loop
mov
xchg
inc
bound
addr16
and
sub
pusha
fs
inc
mov
(bad)
xor
scas
call
aas
mov
xchg
cmps
jne
jle
pop
retf
xor
add
loop
lods
js
and
adc
outs
mov
(bad)
(bad)
xchg
lds
iret
or
add
(bad)
jno
or
in
arpl
dec
sbb
and
or
xchg
iret
rcl
movs
push
in
cwde
js
fwait
stos
cdq
pop
jg
mov
mov
out
fwait
cmp
ret
retf
adc
cmp
aaa
cmps
push
scas
mov
add
mov
adc
push
inc
push
inc
pop
cmp
mov
jmp
lods
stos
vcvttsd2si
and
add
fld
dec
cmps
stos
sbb
lods
mov
scas
test
inc
adc
pop
pop
cld
dec
and
mov
xor
lods
or
fbstp
call
mov
dec
pop
or
xor
mov
jo
or
xchg
jnp
gs
mov
loopne
ret
inc
test
add
mov
push
pop
sbb
dec
data16
mov
sbb
jmp
sub
jmp
add
mov
outs
stos
sub
in
test
mov
pushf
ss
je
rcl
es
xor
les
dec
jne
mov
out
call
or
fstp
pop
imul
dec
mov
cmc
lds
lock
jo
add
mov
pop
mov
fsub
pusha
add
daa
xchg
ror
adc
add
into
mov
inc
ds
cmp
mov
push
mov
mov
lea
jae
mov
fild
(bad)
icebp
inc
stc
in
adc
add
xchg
sbb
and
into
and
(bad)
cmp
in
repz
(bad)
cmp
push
int3
xchg
sub
jg
mov
fidiv
int
and
xchg
mov
clc
repnz
(bad)
mov
sbb
cmc
sub
scas
sbb
adc
cmc
stc
xor
jnp
call
jo
sti
add
jno
xchg
pop
leave
pop
mov
aaa
clc
enter
adc
ja
stos
mov
jp
dec
mov
neg
int3
(bad)
sti
sbb
pop
mov
sbb
mov
mov
xor
push
les
call
mov
cmp
sub
cmp
rcr
stos
add
xchg
push
mov
leave
dec
pop
inc
jmp
mov
xor
or
or
xchg
leave
out
adc
pop
and
call
adc
xchg
ins
mov
test
jnp
sub
dec
mov
mov
mov
leave
mov
mov
out
xchg
les
mov
pop
pop
dec
dec
mov
call
jmp
pop
and
mov
dec
and
and
psubusw
iret
inc
adc
jb
clc
or
cdq
mov
movs
cmc
pop
ins
fdivr
jg
push
dec
sub
lds
sub
movs
sub
and
add
mov
and
sub
jb
out
xchg
push
jp
aas
in
leave
in
mov
rcr
sbb
xor
lods
push
mov
mov
fcom
cmp
cmp
mov
sbb
add
pop
and
hlt
out
mov
fimul
xor
test
add
pop
and
movs
lock
imul
(bad)
stos
jb
mov
loopne
dec
arpl
push
movs
hlt
mov
lahf
int
fdiv
mov
xor
sub
inc
imul
jmp
add
shr
shr
fdivr
les
jmp
xlat
adc
scas
nop
retf
call
pop
mov
sbb
mov
adc
mov
push
pusha
cmps
iret
pop
add
jmp
push
add
div
sbb
mov
cmps
mov
xchg
movs
shr
mov
aaa
push
mov
dec
shl
ins
lds
cmp
pop
idiv
mov
jg
ins
cmp
(bad)
imul
call
cs
lahf
retf
arpl
cmps
or
push
sub
dec
jns
loope
dec
cli
lods
sbb
xor
std
cmp
pop
enter
and
std
jmp
cdq
hlt
std
addr16
ret
fstp
stc
jns
mov
dec
push
bound
dec
inc
adc
popf
test
push
enter
aas
add
jle
mov
mov
pop
push
jns
loopne
das
arpl
data16
pop
dec
pop
shl
push
inc
adc
mov
dec
ficomp
lahf
mov
push
pop
out
jne
int
jne
jo
xchg
cmp
rcl
dec
test
repz
(bad)
sti
adc
xchg
shr
jmp
jo
pop
mov
jge
or
scas
sub
sahf
sub
mov
in
mov
ja
movs
(bad)
sbb
mov
push
out
cmp
fisubr
into
mov
pop
xchg
test
jecxz
lock
adc
dec
dec
pop
cmp
and
adc
into
mov
loopne
jne
xor
xchg
(bad)
cld
lods
mov
call
test
iret
add
fdivr
arpl
ret
mov
fdivp
mov
mov
cmps
pop
stos
mov
sbb
pop
es
push
fwait
and
inc
add
jge
loopne
stc
jmp
dec
cmps
inc
sahf
jnp
rcl
test
inc
inc
mov
add
xchg
shl
jae
inc
retf
mov
hlt
sub
pop
(bad)
lock
inc
sub
daa
mov
cs
cmps
fiadd
cs
loope
popf
push
pop
adc
inc
fild
imul
test
inc
lahf
call
sub
js
add
jns
das
add
jne
jecxz
cmp
lods
pop
dec
in
in
div
push
ins
ja
sbb
add
push
ret
mov
ss
arpl
loop
jg
xchg
sar
sbb
in
cdq
rcl
cmp
fcomp
inc
mov
aam
push
retf
stos
nop
push
adc
jb
clc
inc
rcr
fsubr
ss
hlt
loopne
fs
push
addr16
pop
sbb
mov
mov
adc
lods
cmp
inc
movs
fcom
mov
mov
xchg
repnz
rcl
int3
pop
dec
cmp
push
ret
sbb
push
jmp
ror
pop
sbb
popa
push
push
stos
pop
outs
dec
mov
jb
sbb
(bad)
in
push
add
inc
ret
sbb
aas
(bad)
jbe
mov
mov
into
or
daa
rcl
push
jbe
test
inc
inc
mov
not
shr
jl
pop
cmp
or
outs
inc
arpl
mov
hlt
int
lods
enter
or
in
lahf
push
cmp
xor
mov
push
enter
std
repz
in
add
sub
or
les
aam
fisub
(bad)
mov
rcl
fwait
mov
iret
ins
xor
xor
add
cli
dec
movs
out
inc
mul
repnz
ins
push
je
mov
fcom
xor
adc
jnp
or
aam
dec
mov
push
mov
ret
xchg
and
lahf
pop
sbb
mov
arpl
pop
outs
pusha
xor
movs
imul
fbstp
outs
fidivr
ret
(bad)
hlt
inc
clc
xor
out
es
into
das
xlat
dec
dec
add
or
pop
jo
jae
pop
movs
mov
mov
test
dec
fst
imul
jbe
xlat
inc
sub
aad
ret
mov
stc
cmp
rol
test
dec
mov
push
(bad)
repnz
jg
mov
push
aam
pusha
pop
dec
cmp
add
inc
leave
movups
sub
bound
jmp
mov
mov
test
data16
ror
and
pop
xor
not
sbb
mov
inc
or
sbb
xor
push
nop
add
mov
fsubr
sbb
jmp
cmp
push
movs
push
ret
and
(bad)
push
scas
call
cmp
xor
add
(bad)
dec
xchg
sub
mov
push
cmp
lea
cld
ret
rcl
push
or
and
xchg
cmp
or
cmp
mov
aaa
loope
pop
jnp
sub
(bad)
ds
sbb
mov
je
push
xchg
and
inc
test
sbb
retf
inc
xchg
ret
cld
arpl
sub
jg
pusha
pusha
push
mul
sub
adc
push
push
and
adc
xchg
pop
test
jnp
xchg
test
cdq
or
jl
loope
jns
sub
or
or
sbb
and
jnp
das
daa
dec
repz
js
push
in
inc
mov
int
xor
dec
aam
imul
leave
pop
cs
cmp
mov
jl
pop
fwait
icebp
test
xchg
stc
inc
mov
xor
xchg
(bad)
mov
jae
scas
dec
rcr
std
pop
loop
fwait
push
and
cmp
sbb
ins
sub
aad
sub
cmps
std
inc
cmp
push
xchg
out
loop
or
xchg
(bad)
mov
mov
xchg
and
or
jl
cmc
cmp
lods
fiadd
das
mov
ins
mov
cli
adc
push
add
pop
dec
mov
in
mov
xchg
(bad)
je
(bad)
or
mov
rcl
mov
add
xor
sbb
into
test
sbb
push
dec
sahf
icebp
dec
cmps
retf
mov
or
dec
mov
xchg
dec
pop
lea
out
jb
leave
mov
dec
pusha
rol
mov
inc
(bad)
inc
in
jnp
dec
xchg
dec
pop
jle
int
adc
cmp
sar
jno
xor
mov
mov
stc
retf
mov
inc
sub
mov
(bad)
aaa
ffree
mov
sbb
jp
pop
sbb
add
mov
das
pop
outs
inc
nop
or
push
ja
icebp
fldcw
push
cmp
xchg
ja
jno
push
pop
std
popf
jns
push
mov
jge
mov
out
jo
cmp
(bad)
rcl
jge
fwait
ror
out
xchg
inc
push
jo
cmp
pop
xor
call
sbb
enter
pop
dec
out
push
int
aad
add
sbb
sbb
mov
jns
lock
mov
stc
das
dec
adc
pop
adc
mov
cmps
jnp
mov
jo
add
xchg
adc
into
je
arpl
add
es
inc
aad
hlt
jg
es
rol
loope
and
xor
es
jmp
xor
dec
mov
les
fs
jbe
and
or
xchg
ins
jmp
push
out
inc
in
mov
js
icebp
or
sub
xor
dec
jno
or
sub
and
ret
ja
xchg
aam
and
push
jnp
int
cdq
leave
add
push
int3
cwde
pushw
fnstsw
xchg
inc
out
movs
ss
std
test
in
dec
adc
(bad)
jbe
cmp
xchg
fwait
cs
or
out
int3
jbe
fs
add
xchg
shl
jmp
into
clc
loop
sub
mov
bound
add
aad
mov
or
retf
cdq
inc
or
jo
arpl
loopne
imul
mov
mov
sub
sbb
pop
pop
sbb
hlt
cmp
cwde
lods
lods
and
jbe
cdq
pushf
push
fistp
loop
lock
cld
iret
sub
xor
pop
mov
shr
inc
push
dec
cmps
loope
scas
dec
add
push
pop
ins
push
mov
inc
pop
js
lock
xor
shl
and
in
mov
dec
or
jae
jmp
adc
sbb
ror
sbb
mov
imul
sbb
test
popa
push
(bad)
cwde
pop
xchg
cmc
cmp
xor
mov
push
push
pop
icebp
retf
push
push
adc
push
fistp
scas
mov
mov
dec
sti
out
mov
jne
inc
jno
jb
pop
jns
loope
(bad)
std
xor
aam
mov
ja
mov
sub
shl
idiv
and
sub
fs
jecxz
mov
pop
lahf
add
(bad)
aaa
cmps
popf
lods
test
push
cdq
sbb
test
ins
jle
fisubr
mov
dec
mov
sub
fmul
mov
(bad)
retf
stos
push
fisub
xchg
shl
aaa
mov
pop
fcmovnbe
call
xchg
fistp
repnz
sub
adc
dec
test
and
xor
icebp
out
pop
pusha
test
fst
sar
std
stc
cmp
int3
(bad)
xor
shr
xchg
pop
rol
sub
pop
push
pop
dec
daa
ror
shl
nop
push
jo
mov
and
in
mov
xlat
neg
add
outs
sbb
xchg
add
xchg
cmps
dec
and
push
rcl
and
ds
fsubr
dec
cmps
pop
mov
push
adc
push
retf
xchg
(bad)
cmps
std
leave
pop
out
push
xchg
scas
out
push
in
pop
xor
inc
push
inc
sub
jbe
outs
or
add
ds
adc
(bad)
pop
push
arpl
jg
sbb
jbe
sbb
xchg
xchg
add
mov
jae
add
int
fsubp
fcom
pop
jecxz
jp
fcomip
repnz
aad
jl
data16
fstp
jl
or
je
mov
ss
pop
inc
sbb
mov
out
(bad)
call
push
inc
cli
adc
(bad)
stc
test
pop
add
ins
add
push
jne
mov
retf
icebp
xor
daa
rcr
xor
xchg
fldenv
push
mov
add
xlat
pop
std
hlt
mov
pop
out
add
jne
xor
adc
adc
inc
sahf
xchg
mov
(bad)
dec
sbb
jno
mov
call
cmc
idiv
repnz
aaa
mov
cmp
call
pop
aam
stos
ins
pop
test
jg
ret
in
or
xchg
mov
xchg
mov
dec
fidivr
add
test
mov
dec
jp
jnp
out
mov
(bad)
mov
daa
in
add
aad
fs
mov
aam
mov
inc
push
and
add
pop
sbb
mov
dec
xor
adc
push
scas
push
add
adc
push
mov
sbb
pop
(bad)
fdivr
mov
add
xchg
adc
sbb
cmps
ficomp
or
hlt
xor
mov
jo
enter
(bad)
sub
mov
scas
(bad)
push
nop
jne
enter
cs
aaa
push
in
sub
mov
add
adc
push
mov
add
push
xchg
retf
je
push
xchg
add
pop
das
or
fbld
mov
(bad)
mov
mov
xchg
(bad)
int3
dec
in
sub
adc
sbb
mov
xor
popa
sub
and
xchg
add
ret
ror
or
loopne
xor
push
or
jnp
movs
fyl2x
push
jb
aam
mov
cli
and
or
mov
movq
icebp
sysenter
pushf
jnp
dec
imul
jecxz
loop
stos
sahf
or
test
add
adc
pusha
mov
pop
and
in
scas
into
or
inc
inc
or
pop
test
ja
jbe
in
pop
adc
or
in
fst
xor
push
fisub
sub
fsub
(bad)
sbb
xchg
loopne
push
inc
inc
int3
jp
cmp
cmp
pop
adc
inc
jecxz
jmp
repz
aaa
mov
cmp
dec
mov
mov
inc
inc
aam
add
mov
cmp
pop
cwde
pop
mov
push
frstor
mov
ss
jno
(bad)
aas
sbb
cli
push
fild
xchg
(bad)
adc
pusha
dec
fld
lds
and
xchg
push
xor
shl
dec
repz
mov
jns
enter
xor
xor
test
rcr
test
movs
xchg
and
bound
xchg
in
sub
retf
bound
and
scas
loopne
js
mov
into
xchg
dec
dec
fyl2x
mov
sar
inc
loope
and
inc
ins
test
mov
enter
cli
adc
mov
hlt
jl
xchg
cmp
int3
push
add
mov
(bad)
arpl
sbb
fisub
sub
das
xchg
inc
xlat
in
or
sub
jmp
leave
std
pop
ret
call
cmps
jg
dec
fxch
inc
mov
mov
(bad)
fwait
mov
addr16
xlat
iret
mul
inc
pop
push
inc
gs
cmp
int3
(bad)
imul
int
pop
adc
inc
popa
jns
getsec
jb
mov
test
cld
push
mov
mov
mov
dec
mov
add
sahf
xor
inc
cmps
aaa
add
cmp
push
pop
mov
cmp
push
cmp
or
add
pop
lea
inc
(bad)
jmp
das
mov
push
xor
int3
cli
xor
(bad)
out
pop
in
inc
sar
fyl2x
add
arpl
cs
inc
ret
lea
push
mov
jae
adc
(bad)
adc
mov
icebp
or
xor
cs
sahf
dec
stos
fisub
dec
push
shr
ret
(bad)
fsubr
push
je
adc
push
mov
imul
clc
push
test
lock
xchg
stos
cmp
xchg
and
jb
test
daa
push
push
repnz
pusha
xchg
fwait
ret
idiv
xchg
iret
mov
das
lds
out
mov
into
cmp
jnp
shl
cwde
cmc
sub
gs
xchg
push
cmp
cld
xor
adc
xchg
cdq
inc
adc
outs
arpl
cld
cmp
leave
push
pop
cwde
push
push
aad
lock
sti
xchg
lea
pop
adc
scas
mov
ins
jmp
test
sub
jae
mov
inc
repz
jno
sub
(bad)
xor
jne
inc
push
sub
mov
xchg
dec
xor
mov
repz
push
(bad)
and
add
ret
push
(bad)
jp
repz
sub
add
xor
lock
jg
jp
cmp
mov
pop
test
xchg
jge
imul
les
mov
jb
or
mov
shr
sub
sub
ret
and
dec
mov
in
aam
xchg
mov
dec
cmp
stc
jo
fs
pop
pusha
js
mov
push
out
lock
je
ffree
loopne
mov
in
jmp
ds
adc
(bad)
sub
pavgb
push
xchg
loop
jge
movs
mov
or
lea
pop
retf
mov
dec
in
imul
in
mov
mov
ins
retf
dec
adc
mov
shl
mov
push
mov
cdq
dec
loope
dec
and
pop
mov
leave
test
push
sti
fldenv
mov
ja
inc
hlt
mov
cmp
cdq
sbb
imul
inc
popf
or
sahf
or
adc
add
stos
push
lods
mov
fcmovb
imul
ins
lahf
push
mov
bound
scas
jge
jmp
mov
dec
scas
inc
popf
int
fwait
adc
in
scas
ins
jge
outs
sbb
lock
mov
stos
xchg
dec
pop
push
test
sahf
stc
xchg
pop
sub
popf
adc
fmul
pop
dec
stos
adc
mov
jno
enter
imul
test
sti
jmp
dec
loope
mov
xchg
pop
pop
sub
cmp
add
add
inc
push
stos
mov
xchg
pop
sub
adc
sbb
retf
cmp
add
sbb
push
jbe
stc
imul
mov
mov
sti
repz
push
add
and
loop
jl
xor
jns
enter
rcl
xchg
and
retf
stos
sbb
mov
xor
lds
(bad)
iret
movs
sbb
mov
push
xchg
out
xchg
scas
pop
mov
jne
cs
stos
std
xor
inc
loopne
jae
push
inc
cmc
cld
bound
mov
xor
loope
add
or
mov
inc
adc
jno
add
mov
loop
or
lds
push
fidiv
push
lock
fnstcw
fidiv
js
(bad)
es
ss
pop
jge
int3
or
cmps
(bad)
mov
rcr
xor
sbb
stos
imul
sbb
mov
jecxz
aaa
sub
cld
sub
adc
jmp
jl
pop
jmp
inc
inc
imul
cmp
adc
mov
pop
shr
stc
inc
hlt
xchg
sbb
jg
mov
int3
fs
imul
sar
jb
sbb
inc
fs
jg
mov
mov
xchg
and
mov
add
push
mov
add
out
inc
in
jo
jne
shl
jge
lds
xchg
test
les
ret
in
pushf
les
xor
ret
lea
inc
push
aad
lea
xchg
inc
mov
lock
packuswb
mov
mov
loope
mov
imul
mov
call
cmp
xor
dec
sti
pop
test
imul
or
int
test
mov
ret
lahf
nop
retf
inc
pop
ins
inc
outs
stos
dec
loope
out
ret
stos
add
add
fsub
punpcklwd
xchg
jae
mov
sbb
lods
stos
ret
jp
adc
inc
arpl
cmp
pop
movs
sbb
popf
push
mov
mov
mov
pop
into
jp
lds
and
ja
adc
mov
loopne
mov
sbb
enter
ins
pushf
clc
movs
push
cmp
out
fild
jl
push
adc
bound
mov
fst
lds
mov
lea
jns
(bad)
cmps
not
dec
mov
je
aaa
mov
pop
je
(bad)
loopne
push
xor
push
mov
mov
add
inc
dec
retf
es
repnz
pop
icebp
cmpps
je
sbb
jo
(bad)
pop
pop
int3
xchg
test
and
jns
outs
lea
not
ror
out
repz
(bad)
ins
cmp
push
mov
(bad)
mov
push
dec
inc
lahf
jno
pop
call
adc
add
rcl
arpl
or
push
adc
lock
lods
jl
jmp
test
cmp
dec
xor
fwait
out
data16
inc
mov
inc
sahf
sbb
outs
sub
leave
or
repz
inc
push
mov
outs
sub
xor
clc
add
inc
stos
icebp
cmps
push
ret
aam
cmp
jne
loopne
cmc
lock
je
movs
xchg
stos
imul
xor
push
mov
(bad)
mov
push
cmps
add
outs
dec
in
dec
dec
sub
push
mov
or
faddp
mov
loop
outs
call
(bad)
aad
pop
ficomp
jbe
lds
xchg
imul
cmps
shl
xor
dec
pushf
stos
and
fst
loope
lods
dec
sub
mov
gs
ins
inc
hlt
push
xchg
cmp
sbb
fwait
inc
cwde
jp
or
jle
mov
jl
hlt
arpl
cmps
ret
cli
push
push
bound
ret
in
cli
fxch
pop
pushf
pop
sub
jl
mov
inc
push
push
mov
push
pushf
push
pop
fwait
test
xchg
xor
movs
test
mov
fisubr
enter
cld
in
(bad)
jb
xor
mov
mov
stos
xor
cli
ins
mov
jg
sbb
mov
or
jno
adc
inc
sub
popa
in
push
out
imul
out
pop
lock
mov
pop
jge
lock
in
or
add
out
ja
pusha
popf
dec
ror
popa
push
mov
xor
ret
xchg
sbb
pop
mov
daa
rcr
bound
scas
jmp
xor
mov
jp
repnz
addr16
stc
or
sbb
jl
adc
movs
scas
fld
movs
scas
sub
hlt
stos
mov
pop
inc
push
pop
push
sbb
adc
xchg
outs
loop
(bad)
or
adc
xchg
mov
es
pushf
(bad)
push
cwde
ins
push
jb
dec
aas
dec
pop
xchg
inc
popf
movs
lock
test
or
cmp
scas
lahf
call
sbb
repnz
ins
iret
push
mov
fucomip
cmp
jmp
shr
ins
dec
jae
mov
cmp
das
dec
push
sub
(bad)
mov
fnsave
cmp
loope
jae
lock
pop
add
in
jae
or
fwait
xor
cwde
imul
out
mov
mov
lock
cmc
repnz
int3
popf
fs
pop
repnz
push
mov
sar
xor
pop
pushf
inc
sbb
mov
xchg
jmp
sbb
jecxz
dec
or
mov
push
jp
pop
cmc
fldenv
dec
sub
test
out
mov
pop
in
popf
(bad)
clc
sub
lods
mov
mov
mov
dec
jns
fistp
frstor
sbb
jmp
mov
stos
or
scas
in
push
cdq
mov
pop
sbb
add
out
xchg
inc
mov
aaa
dec
xor
mov
sbb
add
xchg
in
(bad)
xor
pop
mov
out
pop
mov
xchg
adc
retf
arpl
mov
popf
retf
mov
sahf
adc
lds
das
jecxz
pop
ror
ret
in
mov
inc
das
mov
call
pop
and
test
jae
dec
sub
jge
cmp
dec
adc
pop
inc
daa
jl
popf
xor
je
out
stos
js
inc
xor
ret
retf
xchg
xchg
or
xor
iret
enter
mov
jnp
test
neg
mul
mov
arpl
pop
mov
(bad)
outs
jle
mov
sbb
int3
bound
jecxz
mov
(bad)
ror
jp
cmps
cwde
call
fadd
sbb
or
and
(bad)
xchg
psrlw
mov
cld
xor
xor
dec
pop
stos
sar
ret
push
and
pop
push
pop
cs
movs
nop
bound
dec
icebp
cli
outs
addr16
cmp
enter
sbb
ret
pusha
fnstsw
inc
(bad)
inc
xchg
fidiv
xor
mov
jecxz
or
inc
sbb
inc
mov
mov
mov
add
jmp
jnp
(bad)
add
imul
mov
retf
mov
(bad)
lock
mov
cld
adc
jbe
in
outs
pushf
jmp
add
jns
inc
dec
mov
add
(bad)
ja
loopne
popf
mov
shl
mov
add
stc
add
cmp
push
push
stos
jle
jmp
test
int
call
pop
test
popa
jo
adc
adc
(bad)
xor
inc
inc
xlat
daa
rcr
or
div
mov
push
cmps
cwde
call
sti
das
cmp
ficom
mov
arpl
call
push
repnz
push
dec
push
push
cmp
cwde
mov
sub
jns
xor
pop
pusha
loope
inc
pop
lods
call
ret
outs
sbb
into
jno
std
xor
and
mov
cs
pop
mov
mov
mov
pop
lock
shl
fs
xor
enter
jns
push
adc
jg
in
into
aam
xchg
out
mov
adc
mov
call
data16
push
push
fs
ja
loope
out
xchg
push
cmps
mov
jecxz
es
and
lods
mov
mov
dec
clc
test
dec
cmp
ja
pop
cmp
xchg
cmp
rcl
push
loopne
xlat
movs
rcl
test
mov
(bad)
cmp
sbb
in
push
lock
dec
imul
inc
jecxz
scas
aaa
nop
mov
pop
lea
ins
std
call
cmp
data16
xor
cmp
stc
std
cld
mov
dec
push
ror
xchg
mov
inc
aas
sub
call
mov
pop
jnp
loope
pop
jne
jmp
jle
push
or
dec
imul
(bad)
jle
dec
jmp
cmc
call
add
add
xor
fist
lods
add
jne
jle
stos
inc
push
lods
mov
div
push
inc
xchg
sub
push
mov
cmp
and
call
add
xor
(bad)
xchg
jg
ret
xor
jmp
ret
out
and
mov
mov
mov
push
leave
dec
cmp
imul
push
cld
or
xchg
mov
or
adc
imul
cmp
sub
js
adc
cdq
pusha
sub
jbe
fsub
xchg
add
pushf
xchg
mov
jnp
sub
pop
sbb
pop
aaa
xchg
fs
or
dec
in
mov
cmps
das
jmp
fs
sar
ins
stos
dec
dec
in
xchg
jmp
or
xchg
les
bound
sbb
push
add
into
ss
pusha
sbb
pop
jae
jge
push
repz
into
test
cmp
pop
jnp
pop
fucomp
std
lock
loopne
(bad)
xlat
gs
dec
int3
adc
cdq
cmps
repz
sbb
mov
push
jnp
jns
or
mov
mov
mov
jb
mov
test
cli
sbb
nop
aad
mov
inc
push
scas
shl
cmc
jle
shr
das
mov
mov
jle
add
inc
std
adc
pop
sub
shr
push
out
push
call
fidiv
call
sub
iret
outs
adc
setne
or
push
loopne
mov
and
adc
mov
add
adc
out
push
aaa
sbb
and
jl
sbb
xchg
sahf
call
cmp
push
xlat
push
xchg
dec
rcl
stc
imul
dec
cmp
cmp
jl
test
mov
pop
xor
shr
sub
movs
cmps
movs
call
mov
push
movs
rcl
ror
test
xor
push
push
mov
sbb
xchg
xor
jno
mov
lods
nop
sar
sub
imul
xor
sub
gs
stos
dec
jne
mov
cmp
xchg
cmp
xchg
aaa
mov
(bad)
repz
push
pushf
hlt
call
cmp
jecxz
je
push
ffreep
repnz
inc
mov
aad
xlat
dec
divps
ror
arpl
and
mov
mov
jne
mov
jns
jle
loop
mov
scas
or
fidivr
fist
mov
sahf
rcl
xor
or
cmc
inc
dec
push
fiadd
mov
loopne
test
mov
sbb
dec
dec
push
or
inc
mov
cvtps2pd
pop
xchg
(bad)
iret
mov
rcr
mov
test
mov
hlt
sub
inc
movs
adc
daa
shl
jae
fld
out
popa
xor
es
out
add
(bad)
mov
inc
or
push
sahf
mov
lahf
fld
outs
or
test
bound
xchg
mov
push
dec
xchg
mov
sbb
mov
or
pop
in
or
call
add
adc
push
mov
cs
mov
mov
pop
in
adc
jecxz
mov
adc
pop
jb
cmp
jae
mov
aam
xchg
add
in
push
pop
xor
inc
adc
push
sbb
jmp
in
outs
aaa
adc
cli
mov
lods
nop
dec
sti
xor
inc
ins
and
sub
lahf
pop
jbe
mov
mov
movs
cmp
cmps
push
js
jmp
xor
dec
fcmove
popf
scas
or
mov
jl
es
cmp
mov
push
fiadd
jne
outs
lahf
push
gs
and
into
les
sahf
cmps
lea
mov
jb
pop
bound
xchg
or
mov
lock
aaa
hlt
fisub
call
rcl
inc
lods
push
sbb
or
out
jle
mov
jecxz
popa
inc
sub
cmps
mov
retf
js
int3
or
ds
jle
or
out
xchg
test
movs
bound
fst
mov
push
pop
je
das
cs
mov
pop
int
add
enter
out
lahf
jmp
mov
xor
mov
cs
sbb
inc
mov
icebp
cwde
pop
ss
ds
mov
ins
add
cmp
jne
jge
dec
add
aam
cmp
lea
test
pusha
aas
add
dec
and
outs
sbb
xor
aam
js
sbb
cmc
je
scas
dec
iret
pop
arpl
jecxz
repz
lea
rcr
cmps
mul
dec
into
test
fimul
cmp
inc
mov
(bad)
scas
fst
dec
rol
int
inc
push
les
aam
dec
xchg
(bad)
sub
dec
std
vsqrtsd
iret
adc
test
adc
rcr
mov
int3
xor
std
xchg
mov
jae
fwait
add
or
repz
data16
mov
and
sub
movs
add
pop
push
xchg
rol
jbe
mov
push
dec
lods
(bad)
dec
xchg
mov
and
fs
inc
js
fwait
movs
nop
mov
push
retf
fistp
add
dec
inc
iret
call
push
jmp
and
mov
and
mov
adc
fs
test
push
xchg
jge
sub
adc
cmp
shr
mov
sti
push
iret
or
mov
popf
and
jbe
mov
mov
scas
adc
lock
movs
dec
dec
outs
jne
sub
jmp
fmul
push
fild
jnp
arpl
pop
dec
cld
jnp
push
xor
adc
out
sbb
popa
cmp
sbb
inc
pop
js
inc
imul
inc
lods
mov
pushf
pusha
jge
push
cmp
sub
call
ret
sbb
jle
sahf
ja
in
push
leave
in
gs
xchg
std
mov
xchg
retf
or
dec
movs
(bad)
aam
mov
popf
aam
aaa
adc
sar
stc
push
adc
cmp
cmps
test
out
ja
xlat
dec
(bad)
fisub
add
(bad)
or
repz
push
ss
std
cld
mov
mov
sti
pop
sub
pusha
sub
pop
push
push
repz
push
and
iret
imul
mov
xor
das
mov
retf
mov
fld
add
cs
je
fwait
pusha
xchg
cmp
lock
add
out
dec
lea
repz
jle
sub
jno
movs
icebp
mov
imul
enter
in
xchg
inc
sub
pop
or
lods
fwait
push
xor
js
mov
mov
mov
pop
mov
movs
fnstcw
adc
jl
cs
mov
or
sbb
bound
xchg
jge
shl
add
cwde
and
jecxz
sub
ja
popa
xor
cmp
or
or
sbb
(bad)
mov
jl
adc
lds
jae
mov
(bad)
fsub
jg
fs
outs
out
mov
xchg
inc
mov
sub
and
(bad)
in
ins
lods
ja
ja
ret
sub
gs
sbb
cs
cld
ret
pop
shl
inc
mov
(bad)
cmp
or
sub
cmp
mov
jnp
(bad)
nop
mov
inc
pop
pusha
mov
fmul
and
pop
cmp
sbb
sbb
jg
sub
outs
dec
and
sbb
mov
mov
outs
mov
xor
jg
cmp
fsubr
fmul
xlat
add
jmp
add
pop
xchg
adc
pop
pop
mov
pushf
jnp
out
fbstp
repz
mov
ins
fcomp
pop
(bad)
xchg
dec
mov
cmc
movs
mov
and
fmul
fimul
xor
jg
mov
ror
jecxz
ja
cwde
add
loop
ds
loopne
mov
sbb
out
xchg
and
pusha
(bad)
mov
cwde
cmc
adc
add
popa
cmp
loop
push
mov
loope
push
or
aad
mov
jno
std
xor
mov
sbb
bnd
push
fwait
xor
inc
jb
push
push
xchg
sub
mov
aad
mov
push
mov
mov
and
int
cmp
stos
ds
sub
movs
and
sbb
retf
dec
sub
ins
mov
mov
xor
xchg
in
sar
aam
stc
imul
cmps
pop
daa
dec
mov
call
mov
push
daa
nop
inc
dec
aad
cmps
push
(bad)
rcr
arpl
fbld
or
xor
mov
in
addr16
cmp
(bad)
ds
add
test
fcomp
xlat
test
cmp
mov
outs
jnp
stos
ds
dec
popa
mov
cmp
ret
cmp
mov
adc
stos
add
sub
xchg
out
and
test
or
pop
push
(bad)
rol
shl
inc
fcmovne
mov
arpl
movs
pushf
clc
hlt
(bad)
aas
fstp
test
inc
sub
imul
xor
or
out
in
rcr
cmc
xor
int
imul
jnp
into
push
addr16
int3
(bad)
or
mov
cdq
jne
push
test
or
dec
rcl
dec
sub
scas
dec
rol
sub
xor
sar
cdq
jecxz
adc
sbb
sbb
push
cmp
sar
ret
stos
mov
loop
xchg
mov
fild
jp
fimul
xor
xor
mov
mov
xor
xor
jae
mov
mov
mov
jmp
out
mov
cwde
push
stc
stc
test
sub
pop
pop
das
aaa
push
in
jecxz
pop
xchg
cmps
or
mov
cs
int
mov
repnz
adc
out
sub
aad
or
ja
out
test
lea
mov
jge
out
(bad)
popf
push
in
lahf
clc
loopne
int3
or
push
not
cmp
shl
mov
scas
hlt
int
sbb
sub
cli
and
cli
xchg
sar
push
mov
(bad)
mov
or
ins
xor
xchg
sub
push
cmp
cmp
sar
push
mov
sbb
movs
test
movs
dec
cdq
retf
xchg
mov
add
mov
or
mov
popa
outs
cmp
bound
pop
xor
clc
fcmovb
out
aam
cmp
adc
js
dec
mov
loope
into
(bad)
out
fisttp
out
mov
xchg
jmp
cmps
xor
es
mov
iret
inc
stc
cmp
scas
add
adc
enter
add
push
dec
mov
mov
push
out
push
(bad)
out
sti
call
push
call
fnstcw
sbb
cmp
bound
push
icebp
mov
cmps
xor
add
fstp
and
inc
in
leave
mov
add
out
test
xchg
imul
mov
stc
outs
adc
sbb
or
adc
test
fwait
mov
xchg
pop
int3
call
pushf
popa
stos
shr
fwait
pop
rcr
sar
ds
aas
xchg
add
test
pusha
fdivr
mov
adc
js
add
data16
dec
popf
push
adc
mov
mov
ins
in
sub
loope
loope
icebp
mov
enter
inc
ja
ror
dec
mov
or
shl
lahf
movs
adc
sub
mov
mov
push
push
popf
mov
repz
or
dec
mov
dec
and
bound
aam
fimul
push
push
gs
sub
dec
in
sub
ret
sbb
mov
xor
gs
cli
push
mov
ror
xchg
push
cwde
inc
call
lds
popa
dec
cwde
retf
into
cmp
clc
pusha
add
retf
inc
xor
sub
push
push
cmps
cld
movs
mov
stos
cmps
jecxz
xchg
clc
and
movs
adc
leave
pop
and
jecxz
and
pop
rol
int
cmp
xor
call
jae
push
repz
lahf
mov
test
test
adc
shr
clc
clc
mov
scas
hlt
scas
sub
add
adc
rol
test
(bad)
in
cmp
mov
addr16
outs
mov
sub
ds
cmp
cmp
sub
dec
nop
dec
inc
stos
jo
pop
test
inc
adc
iret
int
inc
call
dec
mov
and
fadd
sub
fld
in
out
fbld
cdq
jae
(bad)
sbb
dec
test
icebp
rcr
sub
push
mov
push
mov
push
mov
shr
adc
enter
stc
into
(bad)
div
(bad)
dec
pop
sub
xchg
loope
dec
cmp
dec
pop
in
mov
pop
(bad)
js
jbe
mov
push
pushf
jecxz
test
xor
cmp
out
sub
dec
and
dec
dec
adc
stc
or
sbb
adc
scas
bound
imul
fld
aad
fidiv
pop
aaa
(bad)
pop
iret
iret
mov
in
sbb
mov
mov
push
(bad)
std
scas
dec
in
mov
stos
leave
inc
xchg
fiadd
test
gs
xor
mov
push
add
(bad)
fidiv
cmc
jle
shl
rcl
inc
xlat
aaa
cmps
aad
jbe
mov
loopne
dec
pop
push
or
adc
inc
push
jmp
or
pop
mov
inc
fsubr
scas
mov
push
sub
sub
fcomp
xor
mov
inc
fnstsw
shr
lahf
ja
add
adc
mov
sub
dec
inc
push
sbb
data16
sar
jns
pop
or
mov
outs
sti
sbb
inc
pcmpeqb
sbb
fmul
jb
adc
jmp
mov
dec
in
js
push
mov
js
add
jp
outs
push
xchg
cdq
jmp
scas
shl
xchg
and
jo
mov
xrelease
mov
pop
cld
xchg
add
aad
xchg
push
ds
xchg
jecxz
fs
mov
xor
rol
mov
lds
sahf
inc
shl
(bad)
pop
add
rol
push
loopne
or
adc
add
ja
push
xchg
(bad)
cmp
sbb
jmp
(bad)
sar
inc
adc
pop
mov
push
jno
(bad)
mov
ret
das
fwait
aam
sar
push
inc
push
mov
lahf
dec
and
mov
aad
sub
push
push
jno
jns
jbe
lds
inc
pop
inc
mov
es
mov
sub
jecxz
aad
outs
or
(bad)
call
neg
jge
aas
pop
aaa
outs
scas
sub
sbb
xor
mov
cmps
outs
jae
shl
fiadd
inc
and
cmp
cmp
sbb
jmp
(bad)
lahf
xchg
jp
in
outs
loopne
(bad)
or
jp
sub
retf
stc
or
mov
adc
mov
call
aaa
add
xor
jo
sti
mov
out
movs
push
popa
or
and
es
mov
adc
adc
shr
adc
test
or
bound
add
jmp
idiv
fisub
ins
and
stc
mov
pop
sahf
xor
lods
sbb
std
push
ins
in
or
jb
inc
push
xchg
pop
xor
cs
xchg
sahf
idiv
add
or
inc
adc
or
aaa
dec
mov
dec
data16
cmp
sti
(bad)
mov
loop
(bad)
test
or
sbb
mov
(bad)
sub
pop
fdivr
aad
ds
pop
jmp
cmp
aas
scas
jg
cli
sub
cmp
push
pop
(bad)
not
out
sub
inc
call
mov
xchg
jl
dec
mov
jb
pop
vpmovmskb
cli
sub
mov
cmp
lock
adc
inc
pop
push
int3
or
enter
mov
pop
fdivp
(bad)
mov
push
fs
jb
call
test
and
ins
sub
cmc
mov
lock
or
aas
push
or
xor
retf
jecxz
push
pop
xchg
mov
ret
jmp
test
fisttp
pop
dec
lea
mov
in
sbb
mov
jg
aaa
mov
and
scas
cmp
mov
rcl
jmp
xchg
ficomp
sbb
mov
dec
pop
xor
ja
push
cdq
loope
test
ja
adc
add
fcom
ror
jno
cmp
xchg
js
imul
outs
ja
and
clc
jns
jp
pop
arpl
js
lods
scas
xor
dec
pop
fnstcw
pop
dec
xchg
xchg
add
xchg
push
mov
sub
enter
mov
pop
js
(bad)
push
sub
or
push
xlat
jne
repnz
test
es
sbb
in
xchg
shr
hlt
dec
mov
outs
xchg
pusha
mov
jle
jae
add
mov
dec
push
std
mov
push
mov
arpl
sub
xchg
jle
cmc
jmp
mov
sti
ins
mov
mov
cmps
leave
and
lock
xor
rcr
ret
lock
sbb
or
arpl
shl
and
retf
int
popf
retf
or
out
stc
pop
dec
into
into
mov
clc
das
jo
frstor
or
sbb
cmps
mov
sub
adc
or
mov
dec
cmp
adc
addr16
fbld
adc
ret
pop
loopne
std
pop
stos
daa
dec
mov
pop
push
jne
icebp
sbb
test
(bad)
push
xor
shr
ins
cmp
jae
pop
int3
fadd
dec
and
test
ret
lock
jg
std
jmp
cmp
(bad)
popf
pop
xchg
icebp
aad
dec
mov
add
in
push
jmp
inc
dec
test
aam
dec
in
inc
pop
xlat
jle
xor
adc
cmovo
pop
mov
popa
push
mov
int3
nop
push
push
jne
and
xor
imul
scas
sar
jo
xchg
stos
xchg
xchg
sbb
outs
lock
retf
mov
data16
xor
add
inc
adc
mov
pop
les
ins
ret
sub
sahf
loope
(bad)
je
test
push
xchg
or
popf
mov
scas
retf
icebp
xchg
cmp
mov
xchg
inc
xor
pop
ficomp
inc
fadd
or
mov
(bad)
inc
aas
rcl
sub
jno
popa
sar
icebp
fcom
xlat
jmp
test
aaa
icebp
pop
pop
cmps
add
fcmovnbe
and
jp
lock
cmc
or
int3
xor
mov
repz
adc
je
je
in
inc
cs
imul
push
lds
(bad)
cmc
mov
and
ret
pop
xor
add
loop
dec
dec
or
or
lods
arpl
retf
adc
or
call
dec
arpl
js
xchg
and
fwait
jno
inc
(bad)
mov
mov
xor
popa
mov
rol
and
lods
out
in
mov
int3
call
xchg
gs
jae
mov
outs
mov
outs
push
inc
loopne
ror
cmp
or
add
imul
ficom
(bad)
push
adc
mov
imul
scas
and
dec
jmp
and
mov
and
push
test
mov
add
adc
ins
inc
xor
retf
test
ret
std
cwde
inc
jle
loopne
dec
add
outs
call
dec
les
out
push
ja
sbb
lods
sub
pop
shl
or
and
adc
lea
les
push
fst
out
xor
pop
mov
ret
in
cmp
jnp
addr16
cdq
scas
je
add
aaa
ss
shr
mov
xchg
pop
(bad)
cmp
pushf
mov
cld
in
add
adc
repz
mov
mov
jae
xchg
and
xchg
jmp
js
pop
les
popf
iret
mov
fdivr
and
in
mov
pop
pop
or
add
mov
jae
(bad)
(bad)
sbb
sub
cmc
(bad)
xchg
or
out
das
xor
sub
xor
sub
sub
loope
inc
pusha
lahf
sub
jmp
jmp
mov
xchg
out
mov
mov
jno
pushf
ficom
popa
pushf
sub
cmp
inc
push
call
push
push
push
pop
pusha
lods
xchg
mov
cmp
mov
pop
aas
ja
cmp
loop
(bad)
cmp
xor
xor
aas
das
lahf
inc
xchg
push
inc
push
movs
mov
into
(bad)
adc
call
xor
inc
mov
sbb
or
dec
pop
dec
pop
adc
call
ds
push
adc
lahf
shl
shl
imul
cdq
xchg
inc
push
shr
rcr
(bad)
jmp
mov
mov
xor
mov
adc
xchg
pop
jmp
icebp
or
out
adc
jb
and
das
retf
or
ret
lods
jne
push
xor
mov
sub
aaa
clc
add
push
iret
mov
idiv
pop
popa
jmp
sar
fmul
gs
dec
fidiv
inc
jl
push
cli
dec
and
push
xlat
or
mov
icebp
xchg
jp
dec
rcl
leave
mov
mov
aad
xchg
std
mov
push
mov
aam
test
jnp
addr16
pop
dec
les
mov
push
sbb
and
jns
or
jo
cld
push
fmul
mov
sbb
mov
pop
(bad)
lock
and
jns
mov
jbe
(bad)
jno
or
mov
(bad)
loopne
inc
jbe
inc
dec
lahf
sub
(bad)
cmc
mov
pusha
aaa
mov
xchg
xchg
or
outs
cmp
xor
mov
pop
cmp
popa
ror
jno
adc
pop
int
pop
lahf
mov
gs
jbe
js
sbb
fs
add
jbe
dec
daa
lgdtd
cdq
or
cmc
ds
movs
jl
adc
xchg
push
es
clc
mov
mov
sub
lds
xor
jmp
xor
out
sub
mov
lods
inc
stos
push
mov
nop
int3
and
dec
dec
sti
mov
retf
aam
rol
pusha
ror
sbb
adc
(bad)
adc
xor
dec
mov
xchg
ret
xchg
and
loopne
stos
mov
dec
mov
xchg
xor
repnz
(bad)
jno
xor
cs
xor
sub
std
jnp
mov
xor
dec
pop
(bad)
pop
fs
ret
jmp
xchg
jl
pusha
out
iret
or
push
pop
loope
mov
lods
xchg
movs
ins
dec
je
out
in
sbb
push
inc
push
scas
or
xor
jnp
(bad)
jae
mov
iret
addr16
pop
and
mov
sbb
pusha
inc
test
daa
adc
mov
xor
cld
lods
jmp
jne
fisttp
inc
loopne
mov
ins
std
push
(bad)
sti
cmp
add
mov
stos
pop
jle
jmp
push
mov
lds
mov
sbb
and
in
stc
add
movs
fiadd
and
lea
mov
push
(bad)
push
fstp
aas
stos
call
push
pop
popa
inc
cmps
rcr
xor
mov
push
ret
mov
pop
push
adc
or
fnsave
cmp
mov
or
xchg
xchg
dec
ins
call
loopne
aaa
cs
lea
mov
cld
add
arpl
mov
daa
lea
not
cmp
adc
and
fstp
out
push
add
adc
mov
pop
test
sub
pop
mov
ins
jle
cmp
jg
mov
jnp
rcr
mov
lahf
sbb
cmps
push
xor
mov
pop
retf
or
fisubr
mov
and
sbb
pop
jmp
jbe
xor
pop
push
xor
jae
jbe
xor
leave
loopne
out
arpl
dec
fwait
xchg
mov
adc
aad
das
pop
aaa
repnz
push
test
stos
mov
and
jns
jmp
aaa
xor
movs
mov
(bad)
gs
and
dec
retf
dec
fild
std
xchg
jecxz
jle
jb
in
std
pusha
mov
sub
xor
out
cbw
push
xchg
sub
sbb
test
neg
jne
call
inc
outs
dec
cwde
(bad)
es
mov
and
js
add
leave
xor
popa
shl
sbb
out
(bad)
jbe
push
arpl
arpl
ret
cmp
retf
xor
add
xor
bound
add
inc
or
into
sar
retf
test
loopne
and
imul
inc
cmp
dec
fldcw
lods
dec
fld
xor
mov
fld
mov
or
pop
or
retf
ss
inc
and
add
push
xchg
sar
into
sbb
adc
cwde
fcom
push
fist
(bad)
js
jge
mov
add
test
mov
sub
and
dec
das
mov
sub
or
and
add
jb
adc
lods
das
sar
fist
cwde
std
push
xchg
dec
out
add
mov
fwait
xchg
(bad)
push
in
scas
sub
out
xlat
pop
test
dec
dec
xlat
mov
jecxz
push
stos
fsubp
add
and
xor
sub
pusha
imul
outs
xor
jp
ret
lds
cmp
ror
mov
std
sub
hlt
mov
fisub
vmwrite
retf
in
in
je
push
sahf
(bad)
mov
clc
sahf
jae
mov
xor
mov
inc
loopne
ret
and
mov
ficomp
dec
sub
mov
jp
or
sub
inc
fist
sub
pop
mov
bound
movs
add
cld
repnz
in
test
(bad)
ror
cdq
leave
and
sub
inc
inc
push
mov
stc
mov
rol
enter
leave
int
(bad)
test
inc
xor
sbb
cmc
mov
mov
ja
sbb
push
add
mov
int
mov
push
and
mov
inc
lods
jae
fst
lea
out
adc
jl
adc
call
push
sbb
fsubp
scas
in
sub
sub
mov
jnp
les
out
xchg
mov
mov
inc
popf
pop
leave
stos
push
mov
popa
push
gs
push
pop
mov
fcom
and
add
clc
fwait
lahf
fst
push
call
cmp
sub
mov
mov
inc
sub
idiv
lds
mov
mov
mov
add
push
push
xor
jmp
retf
int3
fcmovnu
sti
adc
aad
xlat
jl
and
mov
mov
push
lahf
xchg
pusha
sub
nop
int3
add
jle
xor
sub
nop
mov
les
pusha
ss
pop
add
ins
xor
pop
cmps
fld
or
sbb
stos
inc
cmp
sub
or
pop
push
xchg
or
mov
call
xchg
ret
add
or
xor
lahf
xchg
sub
std
loop
inc
adc
rcl
fs
mov
and
sub
jmp
inc
add
xor
push
loopne
add
mov
or
jp
lods
dec
es
inc
mov
outs
repnz
jae
int3
dec
addr16
push
or
or
fld
push
repnz
xchg
pop
sbb
add
adc
adc
jmp
movs
cmp
sub
cmp
xchg
mov
in
pop
cdq
fcom
outs
movs
int3
and
mov
aad
gs
ja
out
xchg
aam
adc
stos
sub
nop
fisttp
cmp
imul
pushf
ss
jmp
cmp
out
and
adc
or
imul
cmc
ins
mov
mov
shl
in
dec
movs
cmp
sar
std
cmp
les
fwait
aad
(bad)
js
adc
push
inc
or
push
mul
int
mov
adc
test
push
cs
test
scas
test
lock
nop
push
in
or
movd
pop
gs
or
hlt
push
aad
jae
jb
xor
cs
jl
cli
std
int3
push
fdivr
movs
dec
sub
repz
jo
scas
pop
jp
repnz
aaa
and
(bad)
push
inc
hlt
test
(bad)
call
jge
mov
or
inc
mov
scas
mov
fs
out
and
bnd
jb
fst
(bad)
out
popf
scas
bound
cs
scas
lahf
sub
lods
push
js
push
mov
jl
xchg
ror
pop
and
dec
repz
xor
jl
stos
fs
sub
shr
ror
popa
jp
push
cmp
lds
arpl
jl
ins
leave
cmps
daa
jne
dec
jmp
mov
movs
retf
sbb
jb
shr
js
(bad)
mov
xor
mov
or
loopne
and
or
inc
mov
mov
mov
ficom
dec
xor
mov
dec
and
mov
dec
inc
xchg
pop
adc
sub
inc
shl
push
add
xchg
jne
scas
sub
(bad)
ins
push
add
xchg
jae
jno
xor
cmp
jb
add
pop
mov
cmp
arpl
adc
(bad)
adc
loop
pop
pop
out
cmp
xor
stos
fwait
and
xor
movs
xor
sub
cld
jmp
dec
push
in
push
cdq
mov
fs
lock
mov
dec
mov
mov
ins
lods
push
jno
int3
mov
inc
jmp
jmp
test
and
loop
aam
(bad)
xor
adc
pop
jecxz
xchg
sbb
inc
imul
outs
or
inc
loopne
adc
lock
push
clc
xor
xor
ror
pop
jmp
call
push
push
sar
out
inc
adc
push
fwait
mov
lds
ret
adc
add
clc
xor
sbb
cmp
in
cli
push
xchg
pop
mov
sub
dec
mov
test
or
mov
shl
xlat
xor
in
ret
jecxz
mov
sbb
jae
fidivr
or
mov
pusha
jb
push
(bad)
mov
xor
mov
arpl
and
xor
les
int3
aas
adc
stc
sti
lods
or
push
mov
mov
mov
sahf
lods
add
xor
je
aad
push
pop
xlat
in
jp
pop
ss
popf
in
ds
sub
push
ins
jmp
pop
mov
sbb
jne
(bad)
out
mov
retf
pop
or
mov
sar
lahf
mov
mov
cld
xor
or
rcr
cmps
enter
mov
jo
xor
or
and
or
out
mov
xchg
sub
es
sub
and
sub
jbe
sbb
addr16
rol
mov
sbb
cmps
sbb
and
pushf
call
fldcw
jecxz
loopne
cmps
sahf
in
loopne
int
and
(bad)
shl
jmp
mov
sbb
lods
shr
das
movs
mov
jns
adc
cmp
pop
jmp
addr16
xchg
sbb
loopne
sbb
jmp
call
retf
push
fwait
scas
jl
cmp
sbb
xor
push
(bad)
fld
retf
test
inc
or
jno
ja
xor
pusha
movs
mov
in
popa
std
jns
repz
and
pop
and
jg
add
or
into
and
mov
std
movs
ror
(bad)
(bad)
xchg
pop
call
into
mov
or
xchg
jg
xlat
cmp
jne
nop
lock
jecxz
push
ss
call
test
inc
dec
add
or
mov
aam
dec
xchg
fsubr
mov
dec
inc
popf
xlat
push
mov
test
fnstcw
inc
mov
cmp
mul
sahf
(bad)
(bad)
mov
push
or
pop
jecxz
jecxz
cld
inc
and
jnp
sub
mov
nop
sub
mov
dec
jae
xor
xchg
adc
adc
dec
sar
jmp
fs
cmp
call
push
cli
adc
jo
mov
add
in
jp
mov
cdq
cmp
cmp
inc
(bad)
xor
push
jbe
mov
ret
and
outs
push
movs
repz
in
sbb
sahf
mov
xor
dec
or
mov
and
js
and
dec
mov
pop
and
sub
mov
pop
mov
xor
and
lea
adc
aam
jns
adc
addr16
ds
popaw
sbb
or
into
cdq
sub
sbb
in
jns
mov
in
fs
xchg
lahf
enter
xor
jbe
mov
dec
xor
mov
imul
jns
sub
xchg
dec
lds
mov
add
add
jmp
inc
int3
into
ins
cld
sub
test
mov
sub
sbb
push
popf
mov
sub
(bad)
push
pop
pop
or
cmps
inc
movs
ja
jno
xchg
lahf
ss
std
(bad)
stos
cmc
pop
hlt
ds
mov
ror
fisttp
sub
dec
and
outs
mov
es
inc
out
add
ins
add
or
pop
inc
nop
aam
inc
pushf
retf
js
pushf
mov
dec
jo
add
pop
fcomp
shl
fincstp
js
push
cdq
jne
mov
mov
sbb
pushf
lock
sahf
sub
add
mov
sti
xchg
dec
xchg
xor
rcl
mov
cs
push
sti
movs
loopne
sub
sbb
mov
loope
das
daa
test
inc
shl
xchg
fidiv
jge
or
push
clc
add
push
fxch
inc
aam
cwde
std
popa
push
push
loope
dec
dec
clc
nop
fs
je
xlat
daa
sub
jg
in
mov
out
dec
outs
in
shr
test
add
ds
in
scas
mov
les
ins
mov
mov
mov
mov
data16
into
mov
imul
aad
inc
sbb
int
and
fild
push
mov
lock
test
aad
jp
mov
mov
arpl
loop
adc
mov
inc
or
ret
js
mov
mov
pop
fmul
push
jmp
jl
add
cmp
ret
rol
sbb
jmp
jmp
mov
xlat
std
retf
in
sub
nop
cmp
sti
cmp
adc
rcl
sub
adc
adc
mov
add
sub
mov
pop
arpl
je
ja
jp
push
mov
push
mov
data16
test
fs
or
cs
aam
mov
hlt
inc
xchg
loop
pop
fpatan
mov
aam
dec
fs
lahf
jmp
jo
cmps
xor
sbb
fldenv
aas
add
popf
pop
arpl
inc
test
pop
fstp
mov
cmp
xor
popa
ret
jne
cmps
in
je
xchg
gs
mov
and
pop
jmp
dec
jge
sti
jbe
sub
or
push
out
popf
ds
xchg
jne
mov
inc
mov
pop
xlat
or
retf
cmp
dec
jnp
cli
mov
call
push
push
or
fimul
sbb
mov
mov
dec
add
pop
push
sbb
ds
leave
jmp
scas
xchg
inc
jnp
out
pop
movs
sub
fcmove
sar
push
movlhps
loop
cmp
out
jl
dec
(bad)
retf
lods
jge
loope
mov
iret
ins
mov
loope
xchg
push
sub
mov
data16
lahf
inc
int
stos
inc
je
cwde
scas
cmp
push
mov
in
sbb
inc
push
jle
into
or
les
cmps
add
int3
inc
in
in
test
ret
lahf
fiadd
rol
sbb
mov
xchg
fwait
(bad)
cmps
push
pop
cli
mov
pop
cmp
lea
call
jl
dec
mov
adc
out
lds
fstp
test
cmp
sub
inc
cmp
jae
push
jmp
or
popf
sub
rcr
jg
mov
hlt
neg
popa
mov
inc
or
push
sub
das
xchg
ret
add
pop
sbb
sub
mov
(bad)
and
pushf
loopne
enter
xchg
mov
adc
fistp
aas
movs
in
lods
jmp
pop
or
mov
xchg
into
shl
loope
cmp
or
icebp
rcr
jo
adc
pop
(bad)
mov
sub
mov
stc
ins
popa
adc
das
lock
push
in
call
dec
pop
punpcklwd
fcmovnbe
pop
ficomp
popf
xchg
in
mov
jae
xchg
mov
jne
adc
fistp
movs
push
mov
fisubr
movs
jmp
loope
loope
dec
and
add
aaa
movs
shl
je
mov
or
xor
lods
cmp
inc
ffree
popa
mov
push
xchg
ret
dec
clc
aas
pusha
xor
pop
jo
or
push
mov
pop
jle
xchg
cmps
push
inc
jecxz
xor
mov
test
js
cmp
mov
loop
and
sub
mov
jno
xor
inc
mov
xchg
add
test
sub
jecxz
test
dec
jns
pop
sbb
fst
(bad)
push
(bad)
xor
jle
mov
pop
inc
icebp
ds
rol
pop
(bad)
data16
add
adc
in
shr
push
out
xadd
test
adc
inc
cdq
in
or
dec
pop
cwde
ins
xor
pop
outs
jge
add
dec
call
aas
fistp
sub
out
and
mov
adc
mov
call
mov
sub
mov
movs
jmp
sti
enter
mov
cli
mov
repz
lds
xchg
xchg
repnz
cmps
pop
movs
jnp
out
add
lahf
call
sub
call
pop
jl
inc
mov
sbb
xlat
in
int
sbb
ror
add
inc
push
mov
outs
sahf
or
imul
pop
hlt
mov
mov
int
push
jmp
movs
stc
int3
xchg
outs
out
push
sbb
in
push
psubsb
loope
out
cmc
pushfw
aam
rcl
sub
imul
mov
jp
adc
lea
adc
pop
sbb
pop
xchg
std
mov
dec
popf
jmp
add
jge
adc
cmps
dec
and
adc
clc
lea
je
sbb
sbb
in
adc
mov
jae
ret
fs
lahf
or
mov
addr16
mov
bound
shr
addr16
push
pop
cmp
jmp
outs
mov
xchg
mov
ds
test
sti
and
popf
push
sub
fidiv
mov
(bad)
jns
pop
std
test
(bad)
jb
cwde
int
sub
jl
cmp
pop
fiadd
mov
inc
(bad)
dec
xor
ret
mov
mov
adc
dec
pop
jl
mov
fcomp
add
pusha
mov
xor
adc
lds
outs
(bad)
jae
or
(bad)
into
mov
dec
in
popf
loope
inc
xor
stos
in
sub
fwait
or
je
ret
das
cmovno
mov
dec
jg
les
push
(bad)
push
sub
aas
xchg
add
xor
pop
mov
ds
jmp
and
dec
ds
fsubr
out
adc
adc
test
dec
dec
dec
repz
fiadd
ss
and
test
les
or
cmovl
iret
pop
or
xchg
mov
push
xor
add
loop
xchg
outs
mov
dec
fucom
lahf
in
pushf
push
mov
pop
mov
enter
fdiv
sub
pop
mov
mov
(bad)
jno
fistp
das
jg
stos
retf
push
cwde
repnz
addr16
clc
shl
dec
add
jns
or
jne
pop
push
(bad)
jb
mov
or
ret
fidiv
sub
scas
cmp
xor
movs
scas
out
jmp
cmp
dec
clc
cmp
pop
xchg
xchg
in
jno
mov
mov
push
xchg
xchg
stos
xchg
push
add
cwde
jg
pop
xchg
add
push
mov
sti
mov
dec
imul
add
sub
xchg
lds
mov
cwde
or
in
inc
outs
out
ret
push
pop
push
mul
or
aaa
out
add
sbb
push
out
jb
inc
iret
out
jnp
nop
sub
sti
rcr
jg
cmp
sub
jns
adc
mov
daa
inc
dec
(bad)
mov
fsubr
sahf
adc
mov
(bad)
mov
mov
je
(bad)
jp
retf
xor
dec
imul
movs
jo
imul
and
sbb
mov
scas
lods
jb
mov
xchg
ds
mov
mov
mov
sti
sub
imul
mov
ret
jecxz
push
loop
pushf
(bad)
jnp
pop
mov
xlat
mov
push
lea
fwait
xor
fwait
sti
sub
idiv
mov
std
leave
sbb
(bad)
out
popa
cdq
lea
jmp
mov
lock
xchg
test
fcmovnu
retf
or
sub
in
push
cmps
loopne
fcmovnu
not
iret
enter
sub
mov
sbb
pop
psadbw
out
and
adc
movs
add
out
int3
mov
sbb
xor
nop
cmp
in
sbb
xor
es
dec
addr16
push
cmp
push
or
push
mov
mov
jl
rol
inc
xor
je
(bad)
fidivr
mov
jge
gs
sbb
mov
fwait
and
mov
add
add
and
movs
les
push
pushf
imul
add
dec
xchg
test
pop
iret
adc
ja
sti
iret
fiadd
leave
xor
mov
call
mov
or
xchg
mov
aad
mov
jmp
add
mov
sbb
outs
sbb
pusha
pusha
mov
in
mov
push
push
sbb
popf
fwait
adc
fadd
fwait
loopne
adc
cmps
popa
jnp
in
adc
sub
mov
cmps
add
mov
aaa
sbb
adc
mov
sbb
dec
push
pop
(bad)
fstp
aam
lea
cmp
and
cmp
sbb
xchg
fwait
out
out
xor
call
outs
inc
loopne
mov
xor
and
dec
xchg
pop
test
and
jnp
and
pop
pop
pop
xor
mov
and
scas
xchg
adc
daa
js
xor
test
cli
mov
add
test
adc
inc
cmp
xchg
jg
cs
dec
sbb
mov
outs
mov
das
and
mov
or
xchg
xchg
(bad)
in
(bad)
ja
xchg
outs
push
cwde
and
ins
inc
xchg
daa
dec
push
pop
xchg
pop
je
(bad)
lock
cmp
das
mov
not
ja
and
mov
mov
ins
not
js
bound
mov
(bad)
in
cmp
xor
mov
push
jb
push
pusha
and
push
cmpxchg
xor
retf
cwde
dec
inc
adc
jle
mov
test
adc
iret
mov
movs
push
jmp
cmp
icebp
pop
loope
mov
mov
jne
cmps
mov
ret
mov
jns
repz
pmuludq
mov
(bad)
ret
mov
sbb
ret
adc
cmp
dec
sub
sahf
push
es
loop
ror
push
jae
mov
daa
add
mov
pop
dec
pop
mov
jb
enter
mov
jle
adc
mov
repz
arpl
test
adc
mov
and
(bad)
mov
cmp
adc
out
sub
int
not
std
ret
cmp
jmp
das
add
(bad)
out
mov
sti
test
xor
push
in
sub
push
imul
shl
push
pop
loop
sysret
jbe
ss
rol
clc
icebp
fidiv
ja
pop
lahf
xchg
call
lahf
jo
mov
imul
xchg
mov
pop
dec
(bad)
test
out
jp
jmp
pop
xlat
dec
int3
addr16
outs
lds
or
pop
sbb
and
in
xchg
sbb
xor
in
bsr
pop
mov
sub
jmp
(bad)
dec
pop
and
or
pop
in
push
push
shl
fld
test
inc
mov
push
xor
mov
jne
mov
fadd
pop
(bad)
out
(bad)
push
pop
cmp
xor
mov
mov
(bad)
sti
mov
and
and
shl
and
repnz
mov
mov
mov
push
lock
mov
xchg
push
sbb
mov
imul
mov
mov
push
dec
cli
mov
daa
sbb
lods
shl
out
leave
jle
in
rcl
push
lods
sub
nop
jle
cmps
push
in
sbb
stc
shr
dec
sub
(bad)
std
dec
aas
xlat
and
jae
dec
xchg
cmps
xchg
mov
stc
pop
ins
jmp
dec
xor
push
aad
fucomip
mov
xchg
mov
sub
pop
or
div
dec
outs
mov
mov
in
(bad)
pop
fnsave
adc
cmp
jb
and
std
ins
xor
adc
retf
pop
ins
pop
mov
repnz
pop
pop
xor
and
imul
push
cmps
(bad)
jne
xor
addr16
les
dec
stc
mov
sub
pop
add
shl
fwait
js
xchg
test
outs
call
pop
ins
push
sub
mov
movs
hlt
into
(bad)
dec
mov
push
inc
mov
inc
(bad)
xchg
and
pop
ftst
loope
cmp
fstp
adc
dec
rol
pop
dec
mov
inc
clc
sbb
xchg
inc
adc
inc
fs
cld
nop
es
xchg
mov
jb
cs
xor
and
les
aaa
inc
pop
sbb
cmp
rcr
mov
je
fidiv
pop
mov
cmp
data16
int
cmp
or
mov
mov
lock
mov
dec
push
cdq
sbb
(bad)
int
sub
sub
xlat
lods
jecxz
inc
inc
imul
js
imul
dec
add
dec
dec
cdq
push
out
mov
outs
cmp
jle
std
hlt
push
lock
xor
jle
and
xchg
cmp
fbstp
inc
div
nop
out
xchg
lds
inc
mov
inc
outs
cmp
test
xchg
and
adc
dec
mov
xchg
iret
fst
push
dec
aad
push
xchg
xchg
or
sub
add
stos
jno
mov
arpl
ficomp
cwde
adc
sub
mov
adc
xchg
and
test
jecxz
in
sbb
and
add
aas
push
ret
mov
aas
push
das
fsubr
into
adc
add
add
leave
lds
cmp
push
adc
call
call
inc
add
dec
adc
daa
dec
adc
imul
push
cmp
and
and
jns
stc
test
int3
and
sahf
add
dec
mov
mov
imul
xor
mov
mov
test
and
test
add
movs
cmc
shr
xchg
push
inc
aas
scas
sahf
xchg
mov
fst
(bad)
test
and
pop
ret
rcr
mov
jb
rcl
xlat
out
js
jle
shl
rcl
mov
stc
push
fbstp
sub
cmp
repnz
inc
loopne
push
jb
adc
sahf
push
daa
(bad)
push
sbb
or
pop
inc
dec
in
stos
aam
adc
and
pop
imul
shl
gs
push
std
mov
daa
sub
mov
(bad)
cli
rcl
or
fild
rcr
mov
xchg
push
dec
popf
out
push
enter
push
inc
rol
out
mov
mov
add
sbb
in
xor
retf
(bad)
clc
and
iret
fwait
es
mov
sahf
push
dec
xchg
(bad)
int3
push
lock
dec
repz
inc
cli
mov
jbe
sub
add
cmp
(bad)
movs
mov
push
out
sub
inc
hlt
movs
cmc
js
fcomp
ss
ror
imul
outs
inc
and
mov
add
inc
outs
dec
add
and
out
sbb
rcr
mov
outs
and
popf
pop
shl
or
nop
pop
xchg
mov
sti
mov
imul
fdivr
adc
(bad)
dec
pop
loopne
mov
jp
xor
outs
test
sub
shr
in
add
and
adc
xchg
call
sbb
push
mov
push
xchg
push
and
cmp
in
scas
and
cld
sub
pop
sub
in
xor
mov
add
mov
push
mov
fwait
into
sbb
sub
idiv
push
popf
pop
adc
jg
shr
mov
add
lods
cmp
in
daa
mov
inc
pop
jnp
movs
mov
dec
jo
jne
mov
(bad)
lods
jmp
retf
data16
dec
mov
add
and
xchg
loope
sub
enter
test
mov
cmc
enter
xchg
cmp
xchg
cmp
call
pcmpgtb
and
xchg
sar
pop
jo
hlt
idiv
push
xor
pop
cmps
rcr
mov
xchg
mov
retf
mov
sbb
in
pusha
mov
sbb
sub
xor
ss
push
(bad)
sti
nop
mov
dec
int3
xchg
mov
repnz
mov
push
(bad)
test
xor
leave
outs
xlat
xlat
fisttp
add
shr
add
xor
rol
mov
adc
ss
mov
cli
jbe
outs
les
xor
jecxz
dec
inc
imul
not
call
jo
xlat
cli
idiv
sti
add
inc
sub
xlat
inc
addr16
push
movs
add
into
mov
or
inc
xchg
int
inc
outs
bound
dec
out
add
jge
lods
popa
mov
ret
in
pop
cmps
out
dec
xchg
and
test
jl
(bad)
lods
repnz
mov
or
clc
jg
sub
xchg
jo
dec
neg
or
clc
in
mov
cmp
call
push
pop
adc
xor
pop
addr16
jmp
or
mov
neg
inc
(bad)
fst
push
pop
fcom
sub
sbb
pop
inc
inc
loope
mov
sti
dec
inc
cmp
push
adc
pop
sbb
push
sub
dec
sbb
shl
sbb
mov
pop
or
clc
arpl
jbe
mov
retf
test
sub
or
mov
pop
mov
add
pop
dec
call
pop
add
mov
or
movs
add
cmp
mov
in
fistp
adc
pusha
ss
fiadd
icebp
(bad)
(bad)
(bad)
lods
shr
fild
cs
sub
stos
push
inc
(bad)
out
mov
cld
ja
push
xor
mov
sbb
adc
call
shl
mov
aas
(bad)
push
shl
push
mov
inc
sub
std
xor
ins
jl
das
pop
push
xchg
mov
daa
lods
mov
or
adc
fwait
(bad)
jl
scas
inc
fisub
lock
outs
retf
sbb
ret
xor
outs
push
add
push
icebp
call
mov
push
scas
mov
popa
imul
aad
jl
int
shr
mov
loope
xor
sbb
and
jbe
fnstenv
leave
jae
fcom
imul
xchg
ins
inc
fisubr
sub
jge
push
mov
in
arpl
pop
fld
test
loop
aam
add
inc
dec
xor
cmp
(bad)
movs
jp
neg
out
dec
cmps
xchg
push
test
sub
cdq
and
cmp
xchg
jbe
sar
shl
cmp
out
push
mov
dec
scas
jne
jecxz
push
shr
add
enter
pop
ja
xor
dec
or
ja
and
pop
mov
dec
dec
int
dec
add
(bad)
sar
inc
sub
inc
jge
sar
add
je
sub
or
movs
cli
and
cdq
push
aaa
out
cmp
test
xor
(bad)
imul
mov
jbe
gs
push
mov
mov
dec
mov
sbb
xor
js
mov
stc
and
gs
push
jmp
fwait
xor
push
aaa
add
mov
sub
xchg
pop
fdivr
ror
sahf
(bad)
int3
inc
inc
out
pop
out
gs
dec
cld
cmps
rcl
int3
idiv
ins
idiv
out
movs
cwde
scas
arpl
mov
enter
or
pxor
std
out
pop
div
inc
mov
fcomi
jg
push
hlt
jle
pushf
cmp
stos
ins
jno
dec
jne
dec
add
ret
add
pop
leave
add
lahf
mov
push
adc
xor
xchg
inc
cmp
adc
xor
stc
ja
or
test
or
pop
hlt
xor
ins
cld
sahf
xchg
pop
pop
jo
iret
pop
js
aas
jle
push
xchg
imul
das
inc
pop
push
stos
in
fld
push
mov
fwait
adc
cmp
jne
jp
nop
jno
push
pop
cmps
xlat
les
push
xor
pop
jge
enter
pop
push
adc
pop
pop
or
sbb
pextrw
(bad)
imul
(bad)
popa
(bad)
loop
in
push
inc
or
pop
adc
sub
cmp
pop
iret
test
xor
xlat
push
push
cs
fs
neg
ins
push
test
aad
inc
rcl
pextrw
dec
or
and
jns
shr
add
mov
cmps
adc
xchg
adc
push
cld
(bad)
xchg
pop
push
dec
movs
and
or
loope
mov
add
shl
add
mov
mov
mov
jmp
xlat
loopne
xchg
add
mov
push
mov
pusha
test
aam
inc
jno
dec
int
mov
mov
mov
sbb
push
movs
jbe
sub
stos
cmc
dec
xor
sti
sbb
retf
rcl
xchg
retf
std
test
dec
inc
add
xchg
xor
jne
neg
xor
ins
stos
inc
sub
mov
shr
outs
cmps
push
das
imul
jg
fnstenv
(bad)
push
cmp
add
(bad)
mov
in
or
add
sub
jb
loope
mov
ja
add
imul
(bad)
aam
push
sub
aas
mov
call
dec
test
icebp
and
je
pop
push
sub
aad
pop
jno
(bad)
fldl2e
sbb
pop
mov
fdivr
or
cdq
mov
cs
inc
pop
aaa
in
dec
jle
(bad)
sub
and
je
sbb
sub
and
sti
aas
lock
shl
popa
xchg
mov
pop
jg
cmp
cmp
dec
aam
lock
mov
dec
pop
inc
cmp
xchg
sub
xchg
fbld
(bad)
or
movs
add
in
sbb
in
push
cs
fist
mov
and
call
aad
shl
neg
mov
sbb
mov
mov
dec
test
int
push
into
push
mov
loopne
bound
push
mov
aad
sbb
retf
cmp
or
add
jb
aas
cmp
jmp
dec
push
pop
mov
add
sbb
hlt
jae
cmp
sub
retf
dec
lods
js
test
loop
mov
fisub
ds
outs
and
or
ins
fistp
int3
fs
inc
adc
jnp
dec
and
adc
xor
or
sub
shl
mov
add
pop
js
movs
in
jp
loop
pop
cmp
dec
mov
scas
xchg
rcr
xchg
lds
adc
loopne
js
pop
pop
sbb
and
loop
lds
dec
out
mov
fnstenv
or
ret
stc
scas
adc
pop
and
xchg
add
xor
pop
mov
cmp
in
neg
adc
xor
addr16
adc
xchg
jecxz
mov
mov
push
inc
cld
or
cld
xchg
(bad)
adc
xchg
mov
loope
movs
dec
fdivr
dec
out
shl
push
and
mov
es
mov
fdiv
addr16
mov
jbe
fcmovb
xor
mov
adc
movs
sbb
jmp
xchg
(bad)
sbb
xor
mov
inc
cwde
sbb
test
cmp
pop
sub
sbb
mov
ins
rol
clc
loop
fst
ins
stos
pop
add
mov
(bad)
frstor
xchg
rcl
xchg
jge
xchg
pusha
xchg
xchg
in
test
pusha
or
xchg
gs
(bad)
mov
and
sbb
int3
jns
cld
movs
into
cmp
adc
and
cmp
(bad)
fist
pop
inc
fcom
cmp
(bad)
fistp
add
sbb
fs
(bad)
pop
and
aas
loopne
scas
inc
mov
cmps
push
fcom
pop
xchg
add
loope
push
add
sub
mov
jmp
fs
mov
xor
dec
pop
and
leave
add
js
rol
mov
retf
push
xchg
dec
mov
inc
xor
pop
push
test
inc
sti
jg
mov
xlat
jno
cld
lea
into
test
jbe
mov
in
fwait
outs
mov
sbb
mov
stos
cmp
mov
jmp
add
pop
push
adc
outs
fimul
imul
addr16
fdivr
lahf
bound
in
(bad)
std
adc
cmp
stos
jmp
dec
je
and
pop
lods
jnp
aam
jbe
cmps
and
inc
and
lgdtd
repnz
pushf
inc
mov
inc
inc
add
xchg
sar
popa
rol
daa
call
mov
push
mov
je
cmp
pusha
dec
mov
shl
push
push
ret
mov
pop
lock
es
nop
sbb
es
jl
cs
add
or
pop
outs
in
outs
in
and
dec
sbb
cmp
add
outs
movs
test
lods
push
rcr
loope
ror
fimul
(bad)
xor
jle
mov
pop
and
push
std
test
sbb
mov
inc
dec
mov
adc
pop
xchg
fild
enter
inc
outs
jecxz
xchg
push
loopne
in
and
dec
cmp
in
inc
push
(bad)
or
jecxz
add
(bad)
mov
push
lock
and
clc
mov
and
(bad)
ins
push
jne
data16
mov
mov
cmps
in
in
and
cmp
(bad)
mov
loopne
add
outs
scas
inc
fldenv
jg
aas
mov
(bad)
scas
aam
mov
sti
xor
daa
inc
nop
sub
pop
cmps
inc
dec
cmp
pop
out
xchg
lock
ficom
div
add
outs
or
sub
repz
add
retf
rcl
cmp
pop
jbe
loopne
lfs
call
jnp
mov
bound
pop
dec
shl
int3
xchg
pop
push
jge
call
into
add
pop
inc
add
inc
pop
shl
mov
jmp
or
lea
push
(bad)
lods
push
mov
mov
shr
jo
xlat
rol
aad
inc
aaa
mov
sub
sbb
push
inc
fs
xor
mov
dec
into
call
pop
xchg
and
nop
sub
jmp
rep
xchg
stos
sbb
push
scas
dec
psubusw
sbb
and
xchg
pop
es
in
pop
pushf
bound
push
mov
mov
add
mov
inc
adc
ins
xchg
je
inc
jmp
fs
jl
adc
pop
(bad)
jae
adc
cpuid
sahf
mov
inc
pop
push
add
fwait
dec
out
mov
jne
xchg
rcl
lock
mov
pop
mov
lds
shl
and
inc
loopne
xchg
test
pusha
sbb
and
and
mov
fidivr
and
scas
mov
ins
mov
mov
cmc
mov
hlt
mov
sbb
or
sbb
push
mov
or
dec
inc
jb
cmps
inc
dec
sub
out
aaa
sub
loope
push
leave
jbe
movs
jnp
or
ja
jae
mov
sub
xchg
cmps
mov
push
ins
std
or
into
rcr
xor
ins
pop
imul
enter
shr
jge
ja
ja
lahf
adc
mov
int
inc
iret
and
pop
out
rol
aas
(bad)
jne
mov
call
std
cmp
dec
push
(bad)
jmp
mov
mov
aam
add
rol
lods
fnsave
(bad)
stos
adc
mov
stos
dec
sub
pop
popf
in
cmp
push
lds
imul
retf
mov
enter
sahf
inc
sbb
sub
jmp
sub
clc
lea
popf
and
call
fs
sbb
sub
sahf
push
dec
mov
(bad)
mov
xor
inc
ins
and
ficom
pmullw
adc
sub
mov
adc
jp
inc
xor
push
cmp
mov
mov
lds
nop
out
inc
push
frstor
push
sub
add
movs
dec
aam
(bad)
adc
jmp
and
xchg
cdq
rcr
push
outs
fmul
les
sti
loopne
jecxz
xchg
ins
inc
ret
sbb
adc
add
xor
dec
pusha
int
lods
jbe
mov
(bad)
test
mov
jmp
bound
push
data16
sar
xor
add
or
mov
popa
repnz
mov
cmp
inc
xchg
test
sub
xchg
or
loop
call
and
cdq
int3
adc
and
mov
sub
pushf
lahf
in
sub
ret
ins
stc
(bad)
stos
pushf
cmps
push
cmp
xchg
sbb
(bad)
in
push
mov
xchg
rcl
xchg
mov
std
(bad)
jl
dec
cmp
sub
test
xor
adc
and
xchg
sub
mov
mov
in
imul
jne
aam
jge
stos
clc
xchg
fadd
ret
mov
cmp
in
add
mov
xchg
lods
not
mov
imul
lock
dec
mov
xor
xor
retf
cwde
or
arpl
cs
dec
jnp
push
or
jg
(bad)
(bad)
ja
pop
dec
mov
or
fnstcw
sub
mov
out
xor
cli
and
ss
jns
fucom
mov
pop
jmp
sub
xor
movs
lods
mov
jno
repnz
adc
adc
stos
idiv
push
aad
lea
int3
sbb
aas
gs
jnp
neg
test
sbb
and
ja
movs
sub
push
movs
push
mov
ins
inc
sub
push
dec
hlt
xor
sbb
movs
arpl
pushf
not
ja
in
les
aam
loop
push
loop
dec
mov
jnp
leave
or
push
push
cwde
mov
push
add
movs
ret
push
push
jle
punpckhdq
ss
gs
dec
out
ins
mov
xchg
push
pop
mov
fwait
cmps
shl
cmc
movs
fcomp
pop
xchg
fdivp
add
call
cmp
cdq
cmps
add
imul
xchg
adc
inc
and
sbb
mov
push
loop
mov
jne
dec
cwde
aad
cs
push
hlt
call
out
das
sahf
sub
sub
ja
inc
in
push
enter
cmp
or
in
sbb
adc
jnp
in
sub
cmp
test
add
mov
adc
cli
ss
jp
ds
nop
mov
mov
pop
cmp
shr
fdivr
icebp
mov
dec
iret
mov
gs
lds
ror
aam
(bad)
mov
popf
cwde
push
and
lock
loope
clc
dec
div
ins
mov
cmp
ss
in
fsubr
inc
cmp
pop
sbb
mov
push
adc
mov
mov
imul
call
mov
(bad)
mov
or
fldenv
mov
sbb
cmps
jae
(bad)
(bad)
out
dec
ins
xor
sub
push
add
(bad)
mov
sbb
(bad)
sbb
mov
lea
xchg
cmp
push
pushf
fbstp
loope
mov
test
mov
addr16
pop
sbb
cld
push
aad
mov
std
push
fcomp
xor
inc
fs
imul
xor
in
adc
mov
pop
fstp
pop
sbb
jns
inc
div
jno
pop
mov
pop
addr16
jecxz
push
adc
movs
jecxz
xchg
aas
adc
mov
imul
pop
dec
icebp
stos
cld
scas
jmp
xchg
jecxz
in
aad
int3
xchg
dec
xchg
dec
sti
sbb
je
pop
idiv
std
push
ror
inc
pusha
cmps
sbb
and
pop
dec
cmp
fwait
ins
div
fld
sbb
sub
repz
adc
and
xchg
xor
mov
adc
out
imul
push
call
mov
inc
bound
mov
aas
push
sub
inc
mov
xor
pop
fnstsw
lea
mul
add
fiadd
(bad)
mov
gs
xchg
std
outs
adc
dec
push
mov
pop
in
dec
add
in
(bad)
rcr
aad
mov
mov
out
inc
test
xor
into
cdq
jle
add
pop
push
pop
mov
inc
xchg
adc
and
and
cli
nop
sbb
pop
std
test
pop
bound
in
push
ret
ret
fist
repz
cmp
ret
cmps
adc
and
add
jmp
pop
fs
push
mov
pop
test
mov
loope
inc
loope
imul
inc
jge
adc
retf
lock
cs
mov
xor
xchg
add
jecxz
mov
adc
mov
cmc
jae
sahf
ins
and
dec
cmp
cmps
and
dec
outs
fisttp
push
cmp
mov
shl
or
push
and
ret
mov
cdq
jmp
mov
pop
mov
test
idiv
push
xor
(bad)
jae
inc
mov
jb
ja
pop
iret
cmps
sub
push
fmul
mov
adc
punpckhdq
add
add
fwait
clc
dec
pop
dec
pop
or
sti
jbe
cmp
sub
cwde
jns
out
into
cwde
mov
mov
test
pop
adc
and
xchg
icebp
and
pop
ja
xor
outs
sbb
mul
xchg
xor
inc
inc
lods
jge
sti
int3
mov
adc
movs
jmp
xchg
in
pusha
js
inc
dec
xchg
or
addr16
sub
pop
shl
iret
iret
or
cs
sub
ins
lods
sbb
frstor
pop
sti
ror
repnz
sbb
sbb
adc
fsub
mov
add
sbb
imul
mov
setp
aaa
cmps
lea
add
pusha
mov
sbb
inc
loopne
cmp
push
jbe
adc
sbb
jbe
sub
jns
movs
add
fstp
shr
push
cwde
movs
lock
mov
ins
add
and
mov
imul
mov
(bad)
jne
mov
inc
sub
int3
ror
fnstsw
movd
lds
enter
mov
outs
or
push
mov
or
mov
xchg
(bad)
push
sbb
sbb
inc
mov
xor
jne
dec
cmp
sub
lods
adc
pusha
popa
jb
movs
neg
cmp
push
xchg
push
dec
jno
inc
aam
jnp
and
inc
push
or
dec
or
xchg
and
xchg
lahf
ror
add
mov
cs
mov
aaa
iret
push
xor
inc
jno
mov
(bad)
xor
xchg
adc
jae
sbb
push
retf
(bad)
xchg
(bad)
lahf
(bad)
dec
cld
mov
test
fsub
dec
mov
daa
fidiv
(bad)
add
dec
or
mov
cwde
push
in
sar
sub
mov
jo
pop
jns
xor
retf
inc
int
mov
daa
(bad)
rol
gs
fisubr
push
xchg
cld
imul
sahf
sbb
aad
add
ret
cmp
vcvtsi2ss
ficomp
inc
and
sub
pushf
pop
mov
push
test
mov
test
imul
cmps
cmp
cdq
jl
dec
push
jg
out
js
je
loopne
movs
je
frstor
repz
std
daa
rcl
sbb
test
fnstcw
out
cli
jo
push
and
enter
inc
sub
mov
mov
lods
jns
adc
jno
test
sbb
mov
popa
mov
out
pop
lods
and
cs
rcl
jle
popf
je
add
cmp
mov
shl
das
mov
sbb
xor
mov
retf
cli
pop
imul
xor
push
and
inc
out
mov
pop
arpl
frstor
sbb
sub
(bad)
pop
ins
int3
jnp
aaa
sub
xor
xor
add
sbb
mov
rcl
cmp
push
push
mov
sbb
mov
jb
mov
xchg
inc
push
or
mov
das
mov
sbb
inc
popa
push
cmp
lods
enter
mov
scas
popa
lahf
call
lds
sub
adc
push
hlt
or
mov
mov
mov
ror
(bad)
or
mov
dec
xor
xchg
pop
adc
xchg
call
push
mov
sar
inc
xor
lahf
shl
cmc
inc
push
out
xchg
sub
push
out
jmp
pop
loope
addr16
fdivp
imul
inc
popa
xor
sbb
jp
mov
outs
ss
mov
or
adc
cmps
adc
adc
xor
cmp
scas
pop
cmp
mov
sub
movs
inc
jae
retf
repnz
push
push
pusha
and
daa
shl
jle
fwait
xchg
adc
hlt
xor
and
jne
out
push
sbb
mov
movs
pop
push
push
cli
shr
js
sbb
push
enter
sub
ss
movs
cdq
in
lea
out
sar
pop
dec
outs
dec
stos
xadd
pop
pop
mov
fwait
dec
xchg
xchg
cmp
cmc
fwait
push
adc
outs
and
push
inc
dec
xor
pop
sbb
mov
enter
jmp
fsubr
jmp
nop
and
jbe
mov
mov
add
pop
push
stos
fmul
mov
mov
push
mov
pop
mov
jmp
in
sti
cmp
scas
sbb
call
xor
inc
(bad)
(bad)
mov
sub
push
fs
lock
daa
mov
inc
sbb
mov
cli
inc
or
cmp
xchg
mov
imul
push
or
inc
push
(bad)
rcl
out
or
dec
sbb
jmp
or
in
jmp
cmp
push
enter
xchg
je
sbb
in
loope
inc
icebp
sti
iret
shl
mov
xor
daa
add
pop
imul
cmp
(bad)
push
mov
in
or
mov
jmp
pop
add
xor
pop
xchg
xor
repz
pop
or
mov
ret
and
mov
stos
sbb
and
fld
nop
aad
pop
xor
pop
cli
ja
or
mov
sbb
popw
into
loope
and
ja
xor
cmp
dec
into
out
jl
jns
das
or
xchg
pushf
pop
iret
push
addr16
(bad)
push
test
adc
(bad)
jmp
add
push
jno
in
pop
sti
mov
cmp
mov
and
sbb
xchg
fild
shr
sbb
ins
jg
sbb
stos
mov
cmp
cmp
dec
rcl
cmc
add
and
xchg
ret
hlt
jp
add
imul
sub
jmp
push
jmp
daa
sbb
xchg
das
repnz
inc
dec
inc
icebp
dec
int3
test
jp
out
je
and
out
push
or
scas
call
pop
aaa
clc
cmp
pop
ins
pop
stos
retf
(bad)
pushf
xchg
jg
push
sbb
icebp
scas
add
sub
leave
or
sti
sbb
jae
mov
call
dec
hlt
sub
retf
(bad)
pop
jecxz
jae
int
ja
out
add
dec
out
push
mov
mov
sar
ficom
mov
xlat
lods
jb
lods
adc
imul
aas
cwde
int3
ror
icebp
xlat
pop
fiadd
pop
out
sub
mov
outs
push
jmp
fdiv
add
pushf
(bad)
mov
rcl
push
dec
out
test
pop
inc
loopne
test
test
mov
lahf
idiv
idiv
or
xchg
hlt
loope
mov
(bad)
(bad)
add
jbe
inc
ds
in
call
popa
push
enter
pop
dec
ss
ficom
jmp
repnz
pop
mov
movs
clc
arpl
mov
sbb
(bad)
test
push
fsubr
mov
and
and
sbb
in
mov
mov
pop
dec
repz
pop
out
or
and
sub
stc
inc
mov
inc
inc
mov
fisubr
sbb
mov
add
pop
ins
repnz
inc
pop
(bad)
mov
push
mov
xchg
mov
imul
cmp
xchg
int
adc
fstp
pop
cli
rcl
rcl
dec
scas
mov
and
out
xchg
dec
jl
dec
lds
push
scas
jae
rol
repz
jmp
dec
mov
shl
std
lock
(bad)
mov
test
loope
ins
outs
mov
add
or
jge
or
add
cli
outs
xchg
cli
mov
sbb
mov
push
(bad)
push
aam
stos
mov
cmp
fnsave
retf
es
clc
lahf
mov
test
out
cmps
pop
repnz
xor
xchg
sbb
pusha
dec
jecxz
pop
or
sbb
and
aam
(bad)
and
xchg
sti
cli
cmp
mov
frstor
outs
jmp
mov
cmp
inc
ins
ss
and
in
ins
popa
xchg
sub
outs
sub
addr16
in
jbe
sbb
jb
add
push
or
mov
dec
push
xor
and
nop
lea
mov
mov
rcl
les
jmp
mov
mov
or
loope
push
ds
or
cld
jmp
imul
popf
ret
out
fisub
mov
mov
jle
lods
sub
pop
stc
xchg
sub
add
cwde
outs
mov
sti
dec
arpl
push
leave
pushf
mov
mul
sub
mov
inc
(bad)
jmp
stos
push
into
add
dec
dec
not
inc
inc
mov
push
in
imul
movs
inc
mov
pop
ja
mov
or
addr16
out
dec
cmp
fmul
sub
pop
(bad)
fcom
mov
imul
cli
mov
fadd
xor
fisubr
pusha
jl
outs
cmp
ror
xchg
add
and
out
cmp
and
mov
xchg
stos
cli
in
das
in
jo
out
test
ficomp
jae
in
push
out
mov
fidivr
xor
push
lds
xchg
mov
mov
sbb
int3
sbb
or
push
call
mov
outs
pop
mov
mov
sub
push
loopne
xor
aas
sub
fnstenv
pushf
and
mov
bound
in
or
fsubr
(bad)
push
ret
or
pop
mov
and
mov
out
pop
call
pop
lahf
add
lahf
push
pop
adc
mov
aad
(bad)
pop
adc
shl
lahf
mov
inc
cmp
mov
add
pushf
pop
pop
clc
sub
rcl
scas
addr16
mov
xchg
pop
loope
add
xlat
loopne
or
(bad)
(bad)
push
inc
cmp
push
sub
sub
bound
mov
in
(bad)
push
mov
dec
mov
shr
cmp
sbb
dec
aam
loopne
daa
in
fistp
mov
loop
div
test
ja
jnp
(bad)
sar
je
aaa
pop
call
hlt
and
mov
cmc
sbb
mov
jp
dec
retf
inc
pushf
std
xor
in
iret
mov
jns
sbb
ret
div
mov
xchg
push
ret
jnp
dec
movs
inc
(bad)
into
loop
fcmovb
mov
bound
cli
cld
inc
into
out
mov
sbb
mov
sub
(bad)
mov
movs
enter
stos
scas
or
mov
ins
and
pop
rol
fwait
or
shr
mov
ins
jge
enter
or
sti
stos
in
cwde
dec
leave
push
jbe
dec
fsub
dec
xor
xlat
sbb
jmp
inc
js
xchg
(bad)
sub
ss
pop
fimul
add
mov
pop
jmp
mov
shl
push
nop
daa
loop
mov
cmps
lahf
pusha
imul
retf
call
and
xchg
aam
js
mov
push
(bad)
jbe
movs
push
dec
xchg
into
add
push
push
and
mov
sub
mov
sub
push
int3
nop
inc
jmp
in
retf
stc
call
stc
out
cs
ret
or
sub
push
ror
out
mov
push
out
cmps
aad
xchg
sti
mov
btr
jle
push
das
adc
add
xchg
sub
arpl
sbb
mov
mov
inc
pusha
sub
xor
cmp
movs
cwde
fwait
mov
sub
push
int
dec
test
and
shl
stos
scas
les
ss
mov
test
mov
or
xchg
sahf
push
test
xchg
iret
mov
inc
pusha
pop
fnstsw
jecxz
jge
mov
mov
dec
push
adc
(bad)
pop
xor
lahf
sbb
mov
std
or
outs
jmp
fisubr
int3
aad
inc
mov
or
shl
js
sbb
pop
mov
pop
push
cmp
xlat
jmp
dec
push
push
(bad)
shl
rcl
jp
jbe
jns
movs
push
and
std
outs
ret
xor
aam
cmp
sub
daa
mov
jne
iret
cmp
push
gs
pop
aas
sub
push
call
std
enter
shl
aas
lock
lock
enter
and
xchg
mov
mov
xchg
call
into
stos
adc
imul
sub
xchg
sub
mov
iret
leave
dec
mov
lods
or
loope
fstp
jmp
(bad)
and
mov
pop
cmp
sbb
add
mov
popf
popf
jg
call
shr
xor
xchg
xor
dec
push
push
retf
inc
mov
ret
push
fisubr
jbe
mov
jno
dec
add
mov
out
pop
inc
pop
repnz
push
ins
ins
cmp
je
ror
xchg
xchg
add
in
scas
jp
pop
loopne
jp
in
cmp
out
stc
aam
ret
enter
popf
sub
sub
jbe
sbb
loopne
add
out
call
mov
(bad)
mov
mov
test
jle
nop
dec
mov
xor
pusha
sub
push
inc
(bad)
fdivr
pop
jns
rcr
pop
cld
shl
or
sbb
mov
jmp
push
test
and
sub
jecxz
cmp
sbb
push
pop
pop
test
pushf
je
out
or
sub
add
pop
sbb
jnp
and
popf
adc
cmp
(bad)
jmp
js
mov
(bad)
and
pop
pop
movs
and
dec
mov
mov
pop
push
mov
mov
popf
(bad)
fdiv
fld
(bad)
pop
jnp
xor
xor
jl
fist
jle
adc
push
mov
out
add
jg
cld
mov
daa
leave
test
push
(bad)
cmp
rcl
icebp
cmp
pop
xchg
fld
push
jl
push
outs
fistp
test
add
mov
test
mov
sub
xchg
dec
sbb
or
cld
cmps
mov
and
std
sar
sbb
pop
mov
xor
dec
and
jbe
mov
icebp
ja
aaa
aaa
rcl
xchg
in
loope
mov
test
jbe
cld
jae
not
jo
fsub
rol
cmp
ud2
sbb
(bad)
repnz
adc
adc
pop
pop
std
ret
iret
jns
cdq
sub
js
aad
inc
out
inc
(bad)
mov
mov
and
stc
(bad)
adc
cmps
sbb
sbb
daa
stos
cmp
icebp
adc
aam
gs
cwde
lods
outs
pop
mov
mov
or
push
cmp
pop
mov
mov
xlat
sub
inc
retf
lahf
dec
mov
mov
cmp
dec
dec
sbb
ret
inc
push
arpl
iret
pop
or
ficom
cmp
cmps
(bad)
xlat
(bad)
mov
sub
fcom
mov
jg
pop
sti
dec
shr
imul
dec
cs
rol
dec
lods
int
(bad)
mov
or
(bad)
shr
cmp
mov
stos
leave
mov
mov
jae
adc
pop
sti
test
mov
or
out
pushf
mov
sub
mov
add
sub
adc
stos
mov
push
test
mov
mov
scas
(bad)
fiadd
pop
fist
sub
push
xchg
fs
sub
popa
test
in
pop
pop
ror
int
fild
mov
(bad)
loop
in
jae
jne
mov
not
xor
fild
int3
scas
xlat
(bad)
(bad)
hlt
add
push
pop
clc
inc
nop
mov
sub
(bad)
jmp
push
push
mov
div
xor
pop
into
sub
rol
pusha
xlat
inc
out
mov
xor
sbb
mov
gs
loop
dec
aaa
fnsetpm(287
(bad)
inc
neg
ja
xchg
mov
inc
bound
push
lahf
jnp
or
sbb
jns
push
mov
xor
shl
or
mov
sub
sub
outs
inc
xor
and
jnp
(bad)
ins
xchg
pop
rcl
push
dec
mov
add
or
or
ror
pop
xchg
cmp
call
push
jne
aam
cmp
or
mov
mov
cmps
push
(bad)
jp
jae
xor
mov
or
out
fs
xchg
and
out
sbb
mov
outs
dec
outs
and
mov
mov
es
out
mov
stos
push
test
mov
or
pop
or
ret
add
scas
push
out
jmp
pop
adc
fsub
cdq
sahf
dec
mov
pop
xlat
mov
cmps
dec
pop
mov
mov
data16
fadd
push
add
in
sub
inc
xchg
or
rol
icebp
out
test
or
cld
and
fwait
scas
mov
mov
push
xor
dec
pop
jecxz
cmp
js
or
retf
xchg
imul
(bad)
nop
sub
cdq
cmp
jns
push
mov
add
jb
push
scas
addr16
or
push
xchg
addr16
cmps
sbb
xchg
add
xchg
ins
sysenter
movs
lahf
adc
or
call
aaa
mov
in
fld
pavgb
test
popf
fild
sub
sub
and
cmp
dec
dec
in
dec
and
pop
lea
in
(bad)
out
aaa
push
xchg
cli
(bad)
sbb
jge
lea
lock
loope
jmp
aas
xchg
in
and
stc
xor
inc
add
bnd
jnp
shr
ins
xor
loopne
xchg
scas
into
pop
call
jo
cmp
pop
jnp
(bad)
in
dec
mov
out
dec
inc
xor
test
push
test
adc
dec
lahf
or
pop
pop
sbb
or
and
dec
lods
and
sbb
jne
xchg
dec
dec
outs
fcom
out
int
lahf
push
push
in
cs
adc
cld
ret
shl
xlat
xlat
mov
push
and
out
ins
pop
push
mov
bnd
fcom
mov
pop
xchg
stc
mov
cmp
ins
inc
(bad)
(bad)
in
(bad)
cmp
dec
sbb
add
ds
sbb
cmc
cld
imul
jp
out
mov
xor
cwde
xor
loop
(bad)
mov
retf
pop
xchg
std
dec
cmp
sbb
dec
rol
loop
in
fld
icebp
repz
cmps
movs
xor
mov
jo
mov
cld
mov
pop
lods
addr16
ror
xchg
movs
imul
cld
je
js
adc
arpl
mov
jmp
add
pushf
mov
push
dec
stc
cdq
hlt
adc
arpl
adc
xchg
test
mov
rdmsr
mov
stos
push
ins
jns
idiv
iret
jp
push
jae
pop
xlat
sbb
pop
push
inc
mov
scas
ins
test
fnstsw
in
loope
gs
cmp
sub
rcr
push
push
int
mov
and
push
lods
inc
jmp
(bad)
fsubr
lahf
in
clc
ja
pop
enter
add
jmp
int
jle
jbe
sbb
inc
adc
mov
inc
sub
pop
jge
mov
bound
inc
or
or
aas
fisubr
fild
repnz
jns
mov
xchg
xor
jno
lock
xchg
cs
fwait
mov
or
popf
or
daa
lods
pop
scas
push
dec
jge
or
xor
cmp
xchg
jnp
mov
in
cmp
push
add
loopne
cmc
and
and
shl
scas
add
push
int
nop
sti
cwde
jle
pop
add
sub
in
mov
loopne
push
cli
xor
adc
call
inc
pop
push
pop
in
bnd
aad
frstor
repz
ss
popf
mov
cmps
jge
sbb
sub
add
rcl
xchg
test
pop
pop
and
dec
and
sbb
push
and
(bad)
dec
test
fdivr
(bad)
int
sbb
call
xor
int3
push
mov
addr16
enter
sub
pop
jl
pop
dec
out
sub
xchg
imul
cmp
mov
cmp
sbb
sub
dec
or
mov
fild
and
sbb
fadd
push
push
push
pop
sub
aas
data16
sbb
ins
lods
data16
pop
lods
adc
push
sbb
mov
loopne
mov
in
repnz
cmps
pop
popf
push
inc
pop
or
sub
adc
add
call
sbb
fidiv
dec
inc
pop
mov
daa
aad
pop
rcr
stos
jl
mov
ins
sub
dec
in
inc
das
or
cmp
sbb
push
jecxz
loope
neg
inc
ds
test
fldenv
int
(bad)
out
jmp
cmp
frstor
cli
xor
pushf
in
retf
fs
mov
jp
jo
xor
cmp
pop
dec
add
iret
xor
retf
mov
stos
mov
aas
adc
mov
fnstenv
(bad)
call
pop
mov
dec
repz
inc
xor
mov
rcl
in
clc
pop
rol
dec
xrelease
ret
fs
ds
fs
cld
stos
sub
or
mov
test
outs
pop
ficom
adc
js
in
or
mov
nop
std
mov
jae
or
enter
int
lods
jecxz
shl
arpl
sub
mov
mov
lods
pusha
pop
lock
adc
out
fld
out
xchg
xchg
scas
sub
es
dec
mov
jae
or
fs
test
inc
cmc
cs
xchg
push
xchg
repz
mul
(bad)
jae
push
dec
aad
mov
arpl
add
and
and
std
pop
sti
jge
mov
xor
faddp
rol
fld
test
mov
xor
inc
mov
adc
xor
cmp
imul
call
cmps
push
jge
cld
jg
and
add
imul
lahf
movs
fisub
lahf
add
shl
inc
mov
jbe
pop
repz
cmp
mov
xchg
mov
shr
loope
adc
(bad)
enter
into
cmps
pushf
sub
sbb
cmps
mov
mov
xchg
jmp
fs
mov
scas
inc
and
inc
ds
mov
scas
mov
out
lea
add
dec
cmp
cdq
sub
and
sbb
sbb
mov
rcr
and
ficomp
and
sub
aaa
add
clc
xchg
and
add
cmovno
or
loope
stos
test
inc
and
mov
mov
cmc
sub
push
leave
inc
or
jecxz
shr
mov
fst
ds
push
es
mov
mov
xlat
movs
jl
ror
lahf
push
data16
(bad)
retf
daa
xor
dec
scas
fs
arpl
pop
ss
cdq
popf
sub
lahf
stos
cmp
jg
jne
int
mov
or
inc
pop
sub
xchg
mov
scas
push
mov
popa
inc
mov
out
mov
jns
retf
movs
leave
cmps
and
pop
adc
into
ins
call
and
jne
mov
jae
(bad)
in
aaa
shl
mov
sahf
data16
push
cmp
mul
retf
inc
test
sub
mov
test
add
retf
mov
sbb
in
push
pop
test
mov
cmps
push
sub
pop
xlat
fs
jmp
or
cmps
xchg
mov
pop
sub
inc
jmp
mov
push
dec
aaa
mov
jl
xchg
js
fmul
mov
fs
(bad)
div
cli
mov
jns
imul
xchg
shl
jecxz
leave
cmp
retf
mov
pop
test
push
inc
pop
sbb
adc
cli
sub
test
les
iret
pop
mov
jl
lock
push
pop
push
cmp
and
jno
cdq
lea
mov
or
pop
pop
mov
jmp
push
lahf
dec
jmp
aas
jp
shr
xor
out
cmp
mov
inc
js
pop
aad
inc
jbe
pop
push
cmp
rol
imul
repz
std
cmp
sub
push
movs
xor
pop
inc
stos
add
push
adc
(bad)
loope
loope
test
int
mov
xchg
in
dec
sub
aas
pop
hlt
gs
xor
add
lods
mov
xor
pushf
mov
fimul
xor
int
shl
or
loope
leave
and
fadd
inc
out
sbb
scas
push
jnp
mov
or
adc
mov
sub
std
xchg
lods
push
and
push
sbb
popf
jns
sub
sbb
jnp
dec
xchg
cmps
enter
es
sub
adc
cmc
push
jno
mov
xchg
leave
xchg
or
sub
cwde
mov
outs
(bad)
push
ret
enter
test
jge
retf
arpl
jbe
ret
or
push
jae
jb
fcomip
push
fdiv
movs
mov
adc
mov
cmp
gs
movs
add
add
aad
or
dec
mov
or
std
test
in
xchg
push
test
js
xor
add
cmp
ds
idiv
push
jl
dec
cwde
pop
lods
int3
hlt
pop
cli
pop
inc
cmp
cmp
imul
and
lahf
rcl
push
movs
pop
mov
xlat
pop
xor
jo
mov
or
cwde
fisub
out
gs
sbb
push
mov
dec
xor
xor
and
or
shl
cmps
call
push
dec
jns
dec
movs
es
mov
int
sub
sbb
push
cmps
push
and
inc
and
lahf
cmp
jne
add
ins
ror
push
inc
add
aam
jmp
mov
sahf
mov
neg
mov
pop
fst
mov
retf
sub
cld
sbb
cmc
adc
pop
lock
mov
dec
add
jmp
punpcklbw
mov
repz
movs
fdivr
inc
lds
leave
mov
add
out
pop
mov
or
(bad)
lods
jg
test
adc
sub
push
into
mov
(bad)
out
sub
pop
cmc
js
jb
push
(bad)
or
repz
rcl
pop
inc
inc
xchg
and
push
jae
push
adc
or
xchg
nop
sub
sub
pop
dec
es
in
ret
(bad)
lock
rol
(bad)
loope
sbb
mov
es
pusha
mov
adc
adc
enter
test
retf
stos
push
imul
rcr
push
xchg
ficomp
call
fisub
clc
xchg
js
xlat
idiv
in
cmp
add
mov
mov
adc
cmp
hlt
fcos
pop
sar
fimul
cmp
test
cwde
nop
xlat
jo
ret
pop
imul
int
fwait
push
inc
cmp
cmp
mov
inc
icebp
mov
inc
lahf
jge
xchg
fwait
jae
mov
xor
cmc
lock
imul
(bad)
xchg
xchg
inc
sbb
cmc
lods
and
js
into
int
add
push
repnz
in
pop
xor
adc
aaa
int
dec
and
mov
sar
and
push
jb
xor
daa
(bad)
xchg
sti
cmps
sub
push
data16
adc
(bad)
cli
mov
mov
loope
mov
pop
movs
mov
es
imul
xchg
mov
mov
idiv
hlt
nop
push
push
lods
lock
cld
(bad)
mov
pop
xor
and
jne
les
cmp
mov
mov
pop
pop
push
in
or
stos
out
das
sbb
ficomp
adc
bound
(bad)
mov
push
dec
lods
jg
sbb
xor
cli
and
xor
clc
and
movs
fld
movs
sbb
stc
mov
xor
add
mov
scas
mov
jle
popa
jns
add
mov
in
inc
mov
cmps
dec
and
and
xchg
jno
data16
int
mov
cwde
cld
jge
int
push
out
mov
pushf
and
xchg
(bad)
aaa
imul
mov
fnstenv
xor
mov
scas
dec
mov
aad
and
or
inc
cmp
daa
int
inc
inc
push
inc
stos
xchg
mov
not
ja
xlat
aaa
dec
push
movs
dec
push
fs
les
in
cmp
cmp
ret
loop
scas
adc
pop
jns
jmp
inc
call
das
fwait
inc
(bad)
outs
in
mov
mov
rcr
mov
scas
ret
fild
cmp
retf
pop
mov
mov
in
pop
adc
ret
xor
and
cwde
test
pop
std
cmp
je
inc
rol
mov
sub
(bad)
imul
inc
movs
add
leave
ret
jl
or
jo
sub
pop
les
cs
push
jns
fst
and
cmp
sti
and
add
jmp
mov
sbb
js
fnsave
and
rcl
fwait
lods
fstp
jle
xchg
aaa
repnz
adc
js
cli
fisub
inc
(bad)
jmp
mov
mov
dec
cmps
fdivr
inc
mov
pusha
lahf
hlt
es
dec
int
sub
lods
jge
aad
cmp
xchg
cmp
int
rcr
dec
fisubr
outs
push
and
xor
movs
inc
inc
ret
jnp
xchg
mov
jp
clc
xor
jle
(bad)
in
fs
dec
into
xchg
sbb
iret
and
add
or
push
push
xchg
arpl
adc
js
cs
shr
sbb
push
push
rcr
mov
(bad)
mov
mov
fist
mov
cwde
(bad)
not
jo
dec
push
std
inc
mov
jp
cmp
lahf
mov
imul
pop
mov
xor
mov
in
pushf
add
mov
hlt
hlt
adc
cli
jbe
out
outs
rol
jae
mov
or
imul
mov
xor
mov
push
mov
jle
xor
stos
das
jecxz
out
cvtdq2ps
sbb
loopne
nop
call
fmul
(bad)
and
jns
add
cdq
ds
lock
movs
retf
in
xchg
xchg
out
push
inc
es
pop
icebp
cmp
aam
xor
push
or
jle
mov
(bad)
dec
mov
add
push
sub
pop
push
test
(bad)
clc
aaa
out
cmp
arpl
cmp
clc
pop
sub
or
test
push
cmp
sbb
aam
(bad)
ja
pop
popf
leave
mov
data16
in
jmp
sbb
dec
sub
out
jp
leave
imul
ret
push
sar
out
xchg
ss
mov
mov
sti
aas
gs
sti
mov
bswap
mov
(bad)
mov
fisttp
mov
mov
scas
dec
add
fidivr
popf
ins
outs
xor
rcr
push
out
push
or
xor
dec
mov
retf
adc
inc
jg
adc
call
xor
leave
addr16
ss
sub
cwde
fs
and
fnsave
enter
movlps
iret
inc
xlat
(bad)
fldcw
popa
mov
mov
inc
fsub
jb
xor
fidivr
xor
pusha
push
call
adc
mov
push
push
dec
jmp
jae
movs
test
mov
push
mov
lahf
stos
add
test
push
push
cdq
in
push
fimul
mov
loop
mov
xchg
mov
mov
push
lahf
shl
fmul
cmp
xor
test
jl
enter
(bad)
adc
mov
and
sti
ins
sub
stc
shr
(bad)
xor
pop
fidiv
and
push
(bad)
int3
out
aas
add
fstp
add
arpl
push
dec
jl
jnp
repz
cmp
fisub
ins
push
leave
(bad)
das
bswap
out
test
pop
fld
cmp
xor
add
cmp
mov
in
xor
cmp
icebp
retf
xchg
or
popf
or
xor
out
mov
mov
sub
daa
mov
hlt
movs
add
in
mov
pop
jns
adc
pop
adc
sub
sub
fsubrp
jno
jns
mov
jl
jmp
arpl
mov
push
call
jge
arpl
sub
push
push
push
sbb
es
and
and
xchg
inc
stos
adc
push
call
jb
mov
(bad)
dec
adc
add
sbb
sub
mov
inc
pop
in
call
mov
xchg
or
jne
shr
mov
or
fcom
addr16
push
fucomi
push
mov
xor
(bad)
and
dec
popa
xchg
sbb
stos
pop
dec
aaa
fs
mov
xchg
pusha
sub
dec
sbb
(bad)
retf
repnz
cld
out
ds
lds
ds
mov
mov
lock
lea
je
mov
xchg
jg
test
cmps
shr
push
sti
push
xchg
test
outs
xchg
cmp
cmp
jns
stos
sbb
imul
imul
ret
jae
sahf
sbb
arpl
inc
outs
scas
(bad)
add
stc
push
pusha
jbe
jno
rcl
int
sub
out
repz
sbb
or
sahf
dec
(bad)
cdq
addr16
mov
adc
mov
jae
adc
ja
add
mov
or
inc
push
pop
lods
cmp
mov
ror
mov
jns
xchg
cmp
in
popa
dec
lds
and
and
cmp
in
inc
jg
push
xor
pop
mov
or
jmp
pusha
out
push
out
das
stos
outs
test
and
sub
push
in
jbe
loope
in
mov
gs
and
fist
ror
jp
push
ret
enter
mov
lods
xor
gs
adc
lahf
sahf
sbb
push
xlat
sub
shr
dec
test
mov
add
movs
mov
mov
pushf
jp
mov
ins
scas
push
in
das
fmul
adc
mov
ja
jne
test
test
pop
(bad)
and
dec
jo
mov
push
jmp
push
adc
sub
sub
xchg
push
push
inc
std
pop
repnz
pop
(bad)
fst
mov
shl
pop
int
xchg
inc
fisub
popf
in
xor
fistp
jnp
cli
(bad)
dec
std
lea
jle
push
imul
test
out
add
pop
mov
cmp
pushf
rcl
iret
sar
sti
out
cwde
stos
mov
add
sub
inc
sbb
pusha
dec
mov
in
xchg
scas
retf
add
out
ficom
outs
mov
pusha
clc
fucomp
call
sub
cmps
xchg
pop
call
jae
adc
push
outs
and
push
mov
rol
mov
push
sbb
mov
xchg
xor
cmps
pop
push
loopne
lahf
adc
call
mov
cmp
push
or
lock
nop
adc
and
cmc
add
push
shl
pop
mov
out
enter
inc
call
repnz
mov
mov
sub
adc
pushf
sub
call
inc
adc
sub
jae
out
repnz
int3
call
je
cld
sub
push
pop
xchg
mov
and
pop
das
jo
xchg
push
adc
pop
push
bound
adc
ret
xor
jl
das
pushf
xor
push
add
xchg
mov
lea
jnp
icebp
dec
jecxz
or
sub
pushf
jmp
inc
sar
fild
lock
lods
scas
in
sub
push
xchg
mov
pop
push
sbb
neg
mov
call
mov
mov
int
cmp
mov
sub
xor
mov
mov
out
push
mov
ins
sub
cmc
push
out
inc
call
jbe
push
repz
pop
xchg
mov
xor
mov
adc
lock
int3
jnp
sub
sub
and
shl
fmul
pop
cld
stos
dec
sbb
jle
test
fadd
out
fnsave
mov
jno
aad
fs
data16
push
jno
stos
mov
std
fidivr
inc
lods
mov
retf
adc
popf
mov
(bad)
mov
fst
mov
fcos
stos
ror
retf
test
xor
int3
fnsave
(bad)
pop
sbb
sub
xor
cdq
daa
xchg
int
idiv
arpl
push
(bad)
ja
cwde
pop
in
ja
jg
out
stc
pop
sbb
fsubr
xchg
and
pop
test
push
shl
lea
dec
pop
neg
(bad)
sbb
ret
xor
adc
xor
fwait
bound
test
dec
sbb
into
fcomp
adc
push
imul
mov
xchg
in
es
lods
jae
mov
fstp
jo
int
nop
stos
sbb
xor
jno
xor
ret
mov
dec
or
or
je
mov
xchg
inc
push
xchg
add
data16
jae
aas
rcl
jecxz
jae
bound
leave
fistp
pop
and
push
pop
add
fisttp
pushf
dec
mov
popa
outs
mov
adc
push
dec
mov
outs
out
loope
mov
xor
push
sub
sbb
imul
inc
cmp
std
aad
icebp
icebp
add
sub
cmps
mov
repnz
pop
sbb
xchg
sbb
dec
rsm
or
arpl
das
aas
fsubr
jmp
xor
jbe
dec
imul
push
arpl
imul
mov
not
stos
sub
sub
stc
shr
sub
aas
adc
sbb
fs
stc
or
pop
aaa
or
movs
into
mov
jmp
mov
scas
adc
mov
fdiv
xor
test
xchg
mov
cli
inc
loop
out
call
xor
aad
sub
jo
xchg
dec
inc
inc
add
jns
inc
leave
or
ret
add
add
div
sub
sbb
mov
xor
jge
imul
add
out
xor
xchg
mov
mov
sbb
popf
sub
push
and
and
int3
xchg
push
cmovg
add
sar
popa
mov
jns
push
add
inc
aam
sub
jno
push
jmp
mov
sub
fstp
sub
mov
faddp
cmps
adc
sbb
(bad)
dec
jge
call
outs
ss
mov
pop
mov
pop
add
pop
push
inc
ret
add
arpl
adc
pop
or
pusha
lea
fwait
add
(bad)
push
out
arpl
push
ret
jmp
inc
call
cmp
cwde
lock
in
xchg
and
xchg
mov
out
dec
fcomp
in
inc
push
(bad)
outs
hlt
retf
aaa
lds
(bad)
fisub
push
jp
mov
mov
sub
fcmovbe
test
js
movs
neg
inc
jno
stos
(bad)
cmc
ror
push
sbb
pop
leave
bound
sbb
outs
mov
add
ret
mov
sub
lahf
jl
pop
(bad)
popa
dec
inc
popa
dec
jmp
repz
add
into
rcr
pop
in
sub
mov
jnp
mov
mov
mov
dec
fldenv
test
jne
sbb
test
cmp
fbld
out
push
ins
cmp
mov
mov
scas
adc
in
clc
cmps
(bad)
scas
pop
aas
push
pop
ror
dec
cmp
pop
add
mov
jecxz
mov
pushf
sbb
sub
jb
mov
cmp
cmp
cmp
imul
mul
jl
in
scas
call
or
adc
jmp
scas
xchg
sub
std
sub
test
in
mov
fbstp
cmp
sub
cmps
mov
call
xchg
cs
arpl
mov
iret
pop
into
pop
jo
ds
jle
aad
cdq
xor
out
push
jae
ror
pop
in
mov
xor
daa
inc
xchg
and
out
mov
cmc
mul
xchg
or
in
ins
push
idiv
ror
sbb
aaa
cmc
stc
jbe
stc
cmp
retf
into
dec
mov
add
repz
push
pushf
add
arpl
in
push
imul
in
push
dec
mov
out
das
call
xchg
mov
mov
rcl
mov
push
test
in
in
cli
inc
xchg
adc
es
jg
push
fsub
sbb
sub
ins
jl
pushf
pop
shl
aas
in
dec
iret
cmps
xchg
jp
jns
inc
out
xlat
aad
dec
push
ficomp
addr16
xchg
outs
sbb
rol
repz
stc
imul
loop
fldcw
in
adc
retf
(bad)
cmp
and
mov
scas
push
fstp
out
sbb
sar
js
arpl
dec
xchg
mov
pushf
repz
lahf
push
mov
sub
int
mov
stos
xchg
sub
mov
pop
push
and
lods
pop
xchg
loop
lods
and
add
mov
adc
push
pop
add
das
cld
jae
jns
dec
not
cld
iret
mov
ins
repz
adc
xchg
sahf
mov
inc
loope
pop
je
xchg
xor
dec
inc
out
sbb
retf
in
cmp
jne
lds
bound
xor
pop
out
sti
jmp
fdiv
mov
cwde
xchg
inc
lock
out
mov
inc
sub
inc
jecxz
in
fbld
add
jne
mov
fwait
sub
push
mov
jb
cs
adc
inc
mov
push
sti
test
dec
jne
ja
xor
sbb
jecxz
(bad)
mov
mov
retf
xor
sub
jmp
lock
or
jmp
dec
push
sub
mov
jle
aam
repz
fild
scas
aad
or
mov
or
or
sub
retf
popa
sub
std
fimul
in
jno
dec
scas
mov
ficomp
xlat
jp
rcl
add
out
push
add
push
(bad)
fmul
dec
in
cwde
sahf
je
test
sbb
lock
add
and
mov
and
mov
ret
inc
mov
sbb
loopne
fadd
push
mov
or
sahf
rcl
dec
aam
jne
add
pushf
add
mov
adc
fmul
aam
scas
sbb
xchg
inc
lods
adc
cmp
push
adc
es
dec
and
test
pushf
mov
push
out
mov
bound
mul
ins
and
outs
jecxz
test
retf
les
add
mov
and
mov
icebp
push
mov
pop
and
sbb
xchg
jl
adc
xor
rol
xchg
mov
add
mov
icebp
xchg
add
push
pop
adc
fimul
jb
dec
inc
push
sub
inc
adc
es
test
or
lahf
sub
xchg
pop
repz
dec
mov
shr
or
mov
cmps
out
pop
(bad)
je
pop
ret
rcr
mul
add
cmp
out
mov
mov
cmc
adc
xchg
cmc
fdiv
sbb
add
push
iret
or
push
xchg
call
nop
ins
xchg
lea
imul
mov
mov
(bad)
xchg
cwde
rol
jp
loope
inc
icebp
sbb
xor
adc
sub
popf
sbb
mov
test
loop
mov
mov
scas
and
mov
mov
call
push
adc
repnz
add
fs
ins
icebp
push
mov
lods
mov
sbb
sub
popa
push
pushf
mov
mov
mov
dec
fisttp
cmp
cli
ret
out
pop
xor
jle
inc
ja
inc
sahf
fst
imul
dec
inc
mov
jge
fnsave
jecxz
call
dec
push
cli
xor
(bad)
inc
xchg
(bad)
pop
cmp
xchg
push
stos
inc
(bad)
out
mov
inc
retf
je
movs
fist
mov
fistp
push
xchg
fisttp
adc
mov
into
iret
ja
fwait
popf
sub
out
pop
cwde
in
dec
aaa
nop
mov
fidiv
out
adc
fcom
mov
mov
push
outs
ja
and
cmc
or
cli
pushf
repz
sub
adc
mov
ficomp
outs
aaa
mov
jbe
int3
sbb
jmp
or
mov
dec
enter
sbb
pop
dec
(bad)
sbb
jle
add
imul
cdq
lods
cmp
hlt
push
mov
out
xor
mov
ins
stos
rcr
cmp
lea
sbb
out
push
pop
in
xlat
push
mov
in
xor
xchg
lahf
mov
loopne
into
mov
xchg
inc
pop
push
inc
popa
and
or
dec
adc
shr
movs
bound
inc
sbb
mov
mov
aad
dec
addr16
pop
jmp
mov
int
mov
and
jnp
jb
(bad)
imul
mov
or
sub
rol
xor
(bad)
jo
enter
sbb
dec
or
cmc
stc
mov
xor
mov
sub
icebp
shl
jnp
and
dec
into
lahf
test
out
mov
push
mul
jnp
jbe
lods
xchg
test
cdq
xor
into
fiadd
aas
stos
call
inc
(bad)
aad
sahf
(bad)
shr
aam
(bad)
fimul
lock
push
nop
xchg
shl
jno
imul
hlt
push
pop
je
mov
mov
and
xchg
jecxz
fmul
cmp
push
je
sti
and
xchg
fcom
push
adc
je
sbb
mov
xor
xchg
push
and
mov
(bad)
aad
in
clc
inc
test
xchg
ret
xchg
push
and
mov
cmp
jns
in
jbe
mov
cli
mov
cmp
and
daa
cld
(bad)
in
mov
fincstp
dec
scas
xor
shl
push
pop
sbb
data16
push
adc
mov
jp
inc
jae
retf
xor
push
mov
xor
or
and
add
pushf
push
sar
adc
push
mov
ret
jno
inc
cmp
push
xchg
or
cmc
pop
int3
movs
ret
mov
jb
mov
ret
xchg
lods
mov
ja
mov
mov
and
or
mov
fwait
xlat
sbb
mov
test
movs
(bad)
lods
popf
xchg
and
or
cdq
in
sti
push
in
outs
hlt
xor
repz
(bad)
frstor
lods
pop
adc
mov
mov
(bad)
in
int3
or
cdq
pop
mov
loope
xchg
xor
xor
adc
mov
sbb
xchg
sar
jmp
lods
movs
adc
adc
cmp
push
call
push
dec
pop
add
std
fdiv
xchg
push
stos
inc
cmp
cmp
mov
repnz
(bad)
sub
mov
or
push
jne
push
sub
mov
fiadd
mov
xor
and
sbb
es
xor
shl
ss
fwait
jae
hlt
jno
jge
in
sub
pop
fnstsw
xor
es
js
and
loopne
pop
add
inc
inc
in
jns
dec
sbb
mov
(bad)
retf
cld
add
movs
out
imul
cdq
ret
loopne
std
loope
aas
push
mov
pop
out
mov
stc
and
mov
lods
mov
loop
push
xchg
daa
lods
stos
gs
mov
scas
xor
rcl
mov
out
dec
lods
mov
std
or
clc
(bad)
sub
mov
loopne
push
lahf
xlat
call
aaa
push
idiv
push
mov
lds
mov
or
mov
xor
inc
stc
mov
je
rcl
leave
mov
out
lock
outs
call
mov
pop
retf
sbb
loop
out
xchg
mov
xchg
test
shl
push
shl
jmp
jp
cdq
lahf
mov
je
call
stc
push
je
js
fucomp
pop
add
sub
push
stc
push
and
stos
and
fmul
xor
pop
cli
int3
fcom
dec
cmp
ins
mov
nop
add
arpl
cdq
mov
add
and
test
clc
jle
inc
test
in
mov
int3
aad
dec
sub
dec
cmp
pop
xor
(bad)
dec
mov
mov
jg
adc
xor
ret
adc
repz
sub
xor
aad
jbe
xchg
loopne
pushf
mov
sub
sahf
pop
sar
xchg
ss
or
push
inc
scas
sub
cmp
daa
mov
xor
fnstsw
pusha
aas
inc
lea
dec
mov
dec
out
out
xcrypt-ofb
cmps
sub
and
mov
dec
cmp
jae
ins
gs
mov
inc
push
xchg
adc
arpl
sahf
aad
ja
mov
mov
sahf
push
mov
retf
int
cld
ins
dec
inc
jmp
fadd
xchg
(bad)
out
scas
add
inc
sar
popa
mov
gs
(bad)
daa
pop
lea
rcl
fcomip
add
xchg
push
or
inc
in
test
stos
push
outs
aas
or
xor
std
sbb
and
jo
cmp
or
clc
sub
cvtpi2ps
ins
mov
mov
mov
(bad)
jno
inc
dec
and
sub
xor
mov
xchg
nop
push
push
icebp
sub
push
nop
cmp
cld
dec
push
and
sub
retf
inc
lods
cmc
inc
icebp
hlt
out
xor
stc
or
pop
or
sahf
stos
jne
sbb
pop
nop
xchg
or
stos
pop
out
mov
pop
jnp
adc
mov
je
ret
aam
imul
mov
sub
aaa
cdq
je
cmp
pop
xchg
mov
inc
mov
xchg
dec
shr
aam
sub
adc
pop
xor
and
shl
mov
(bad)
and
adc
js
mov
mov
enter
test
lock
mov
cld
inc
jb
sub
out
test
mov
popf
mov
xor
fld
fistp
fimul
push
jle
ret
lock
mov
xor
push
push
xchg
inc
inc
jae
jno
cmp
mov
loopne
loope
popf
cmc
sbb
outs
fadd
out
sub
out
adc
repnz
mov
jae
retf
ror
or
sahf
not
call
icebp
mov
imul
aad
mov
mov
cli
mov
ret
fsubr
jo
xchg
sub
inc
jmp
push
(bad)
neg
or
xchg
jecxz
cmp
sbb
cmps
mov
xchg
out
(bad)
sar
or
je
xchg
(bad)
cmc
into
shl
sahf
mov
fwait
(bad)
outs
dec
dec
test
lods
ds
push
out
jp
inc
ret
fld
les
bound
xor
jbe
inc
add
sub
xor
gs
add
(bad)
loope
inc
pop
pop
hlt
(bad)
pop
pop
dec
pushf
dec
mov
lods
in
or
shl
imul
and
mov
cld
add
add
(bad)
test
dec
jmp
cmp
xor
jle
fst
push
dec
nop
lock
outs
pushf
out
enter
xchg
popa
(bad)
fld
into
sbb
lea
push
ja
sub
hlt
and
xor
fld
add
sub
dec
out
cmp
or
faddp
adc
or
shr
inc
sbb
mov
and
push
jecxz
mov
jne
xor
aam
xchg
(bad)
inc
sbb
test
mov
cmp
popa
jg
js
lds
and
sub
in
(bad)
or
mov
dec
out
add
add
adc
mov
ja
mov
mov
dec
aas
add
leave
and
xchg
ror
iret
cmp
jp
and
mov
out
push
outs
pop
mov
pop
adc
xor
retf
inc
jge
mov
inc
sbb
or
adc
push
sbb
nop
jmp
jmp
sbb
cli
test
xchg
xor
fcom
sahf
pop
mov
test
and
imul
enter
lock
pop
mov
in
jne
inc
mov
xchg
js
or
cs
xchg
pushf
mov
dec
arpl
lds
cwde
popa
shr
xchg
lock
(bad)
pop
lods
dec
inc
inc
(bad)
jmp
sbb
cmp
jne
mov
cwde
jecxz
daa
std
aas
push
mov
or
(bad)
cmp
jo
dec
xor
mov
push
fisub
cmps
add
cmp
jg
inc
or
mov
mov
aam
adc
push
mov
cdq
inc
jb
sub
dec
add
lahf
mov
add
test
cmps
lds
xor
dec
ja
bnd
jbe
sbb
mov
adc
icebp
retf
sbb
adc
mov
jbe
push
mov
xor
mov
rcr
ss
ds
jns
iret
pop
cli
in
nop
imul
push
dec
repnz
es
pop
xchg
jbe
cmp
push
mov
and
push
add
xor
xchg
int3
mov
ja
mov
xor
lods
imul
cmp
mov
and
loopne
lds
xchg
mov
add
sub
loop
xor
mov
cmc
inc
or
mov
in
cmp
popa
mov
dec
fimul
imul
bound
sbb
sub
pop
fs
mov
jns
inc
jne
jg
or
in
test
movs
leave
in
jle
ins
cmp
test
lods
popf
aas
push
test
push
in
(bad)
push
fwait
test
xchg
inc
mov
movs
(bad)
fnstenv
sti
add
fsub
in
(bad)
aas
adc
scas
xor
mov
push
sbb
inc
push
push
or
mov
inc
inc
std
sub
mov
ja
dec
retf
inc
pop
call
push
aam
dec
pushf
and
mov
fwait
aaa
cwde
aam
cld
mov
jne
mov
ss
inc
rcr
cmc
stos
mov
popf
int
into
enter
fnstsw
sub
outs
mov
aas
adc
xchg
add
outs
push
jg
mov
cmp
inc
cmps
ffreep
pop
pop
mov
sbb
sub
xchg
outs
es
sbb
in
lods
add
out
iret
fist
aas
cld
mov
sub
or
mov
add
repnz
outs
jecxz
and
(bad)
adc
fs
in
test
and
cmp
hlt
cs
and
outs
sbb
mov
fcom
jbe
dec
int
mov
sub
movs
imul
xchg
mov
cmp
jp
repnz
out
pop
fnsave
jns
out
xchg
pop
adc
les
sub
xlat
or
scas
lods
mov
stc
pop
std
dec
arpl
repz
pop
jno
jmp
or
mov
push
push
or
scas
jg
mov
push
hlt
sub
(bad)
cs
(bad)
jge
loop
xor
sbb
fild
cmp
sub
cmp
jp
and
sti
lods
cmp
and
ds
fmul
dec
pop
les
mov
push
test
push
dec
jns
fs
mov
sar
je
sbb
fcom
xchg
imul
test
lods
div
pop
xchg
call
mov
xchg
xchg
inc
sub
sub
cmp
fcomp
sub
jno
shl
add
pop
test
movs
(bad)
mov
pop
lods
je
sahf
(bad)
mov
push
imul
inc
push
into
int3
cmp
mov
push
mov
dec
inc
jmp
push
or
xor
or
xchg
ror
out
js
test
mov
mov
imul
stos
neg
das
ds
inc
jae
cdq
lods
repz
std
mov
sub
js
cmp
cld
adc
dec
cwde
add
cmc
loopne
jb
and
loopne
not
xchg
ins
ficomp
arpl
test
arpl
inc
cmps
cmp
fcom
xchg
mov
sub
mov
sub
xchg
and
xlat
push
ret
sti
mov
xchg
cdq
imul
pushf
xchg
int3
rcl
cmps
daa
pop
fisttp
sbb
push
or
test
xor
movs
ja
and
retf
pop
jne
in
add
xchg
cmp
mov
(bad)
aam
jg
jns
lds
stos
jns
push
das
addr16
mov
fiadd
mov
jno
or
push
jno
jle
sub
jp
aaa
pop
mov
aas
fisub
cmp
mov
es
sbb
(bad)
push
sub
icebp
push
inc
adc
and
sub
shl
pop
lds
jmp
push
add
movs
outs
push
xor
push
mov
leave
cmp
das
ins
sbb
xchg
xor
ret
in
mov
pop
cmp
mov
arpl
cdq
adc
mov
(bad)
adc
jb
push
bound
sbb
adc
into
dec
inc
movs
and
aam
sbb
test
ret
int3
jg
loope
xor
pop
jmp
pop
imul
test
out
loope
outs
dec
(bad)
inc
retf
iret
imul
jae
and
push
mov
jns
fst
jmp
dec
jb
lods
xor
xor
gs
inc
inc
ret
mov
(bad)
stc
add
inc
in
fstp
mov
and
mov
cli
add
jns
cmps
jb
or
fstsw
and
mov
out
mov
xor
mov
xchg
loopne
in
mov
pop
jecxz
(bad)
push
xchg
das
mov
mov
adc
(bad)
push
inc
loop
test
pusha
inc
out
int
push
adc
or
fistp
jge
xchg
cmc
sahf
jmp
cdq
js
pop
push
jb
in
jp
fcmovu
pusha
mov
test
mov
popf
adc
or
movs
stos
and
sbb
ss
ret
adc
or
inc
jno
cld
test
aam
lods
jno
and
mov
repnz
adc
ss
jne
inc
das
jg
adc
fcom
rcl
xor
(bad)
arpl
retf
pop
and
mov
mov
aad
nop
into
jb
bswap
dec
nop
inc
pop
bound
aaa
mov
outs
clc
aas
mov
sti
dec
jge
outs
sub
lock
loope
pop
add
pop
add
ret
inc
leave
rol
jns
clc
inc
jmp
xlat
outs
push
fcomp
stc
ret
outs
xor
aad
mov
ret
inc
pop
fwait
shl
cmp
sub
mov
je
jecxz
enter
dec
sbb
ja
jle
xor
sub
retf
(bad)
pop
cmc
pop
cmp
dec
sub
fild
mov
mov
or
iret
test
jmp
stos
lds
inc
mov
sbb
rcl
pop
sbb
imul
out
sahf
das
push
jo
scas
inc
iret
pop
cmps
popa
inc
das
inc
pop
clc
cli
jmp
int
lahf
cmps
aaa
fisub
cmp
ja
fcomip
(bad)
rcl
xor
push
ja
dec
popf
sub
call
or
(bad)
call
rcl
shl
cmp
enter
or
mov
cmp
cld
and
sahf
(bad)
leave
mov
rol
fcomi
sbb
cmps
inc
mov
loope
into
ins
clc
js
mov
push
cs
jg
adc
mov
add
cmc
in
or
in
adc
dec
push
dec
ror
xor
ins
cld
jg
or
iret
mov
imul
jmp
sar
movs
ja
jae
in
push
and
mov
cmp
test
add
and
cmp
xor
sub
daa
aad
out
bound
popf
pop
xchg
mov
mov
ret
mov
outs
int
sub
inc
jo
in
xor
mov
pop
cwde
jp
or
pushf
mov
sub
push
gs
mov
sbb
je
out
sub
cld
jbe
mov
inc
daa
stos
idiv
inc
inc
jg
ss
out
inc
and
(bad)
loop
rcr
pop
bound
pop
push
loopne
cmps
cmps
xchg
inc
xlat
and
mov
pushf
inc
jb
add
popf
xor
in
dec
sbb
sbb
(bad)
jecxz
xor
lods
mov
sbb
ins
enter
mov
mov
(bad)
or
stos
pop
inc
nop
leave
rol
inc
scas
inc
jl
ja
push
xchg
std
out
mov
cli
loop
add
lock
inc
enter
dec
nop
xchg
repz
je
and
shl
aad
(bad)
mov
movzx
fcomp
iret
movs
sub
ins
in
jmp
jmp
inc
into
add
xor
or
pop
pop
mov
dec
mov
sub
sub
sbb
(bad)
sbb
adc
inc
push
repz
or
div
pop
add
inc
mov
fsub
dec
xor
mov
and
(bad)
sbb
inc
mov
push
xchg
fidiv
repz
mov
adc
sbb
add
pop
in
adc
adc
push
int
and
popf
push
xor
dec
sar
xor
xor
jne
icebp
(bad)
lahf
les
js
das
mov
stos
in
cdq
ror
mov
and
mov
movs
lds
jg
xchg
adc
int
xor
jmp
sti
jp
ins
dec
rol
sub
adc
lods
and
lds
bound
mov
ret
ret
sbb
cwde
std
mov
sbb
jmp
dec
pop
hlt
mov
add
mov
cwde
xchg
adc
mov
sahf
push
fldenv
mov
fdivp
cmps
out
mov
jo
or
adc
hlt
xor
jnp
dec
sbb
ins
and
aas
add
xor
inc
add
inc
pop
lods
xchg
es
cdq
iret
xchg
add
and
out
dec
shl
mov
js
ds
cli
inc
push
pop
not
xchg
movs
push
mov
cdq
dec
shl
and
mov
mov
jnp
daa
je
xor
in
mov
add
dec
cmp
leave
cmp
xchg
aas
leave
mov
and
gs
xchg
lods
imul
mov
outs
add
pop
jmp
and
in
push
jge
call
clc
std
stos
in
mov
data16
gs
and
(bad)
nop
mov
cmp
push
pop
and
xor
scas
inc
setns
imul
or
pop
icebp
jle
out
sar
(bad)
jp
mov
je
sbb
add
add
sub
mov
push
dec
add
inc
lods
pop
push
cdq
into
scas
fisttp
out
movs
pop
mov
loop
push
inc
mov
jb
arpl
adc
lock
leave
inc
loop
sub
mov
imul
xchg
popf
push
bound
aaa
cmp
and
aas
mov
inc
mov
push
push
push
in
inc
das
aaa
pop
lods
add
mov
jae
inc
or
pushf
js
mov
jecxz
das
call
dec
inc
xchg
cli
cld
aad
pop
push
retf
fwait
inc
jb
and
jne
push
fs
jno
and
in
cmp
push
movs
inc
test
jecxz
or
lea
dec
pusha
add
inc
(bad)
pop
mov
push
fs
cs
cmp
enter
popa
rcr
and
std
push
xchg
shr
sbb
(bad)
sbb
dec
xchg
cmp
ret
and
sbb
popa
lods
inc
inc
xchg
add
shr
fwait
cmps
lods
leave
movs
xchg
jle
fdivr
xor
jp
je
pusha
aaa
fist
fistp
add
xchg
in
(bad)
pop
call
or
pusha
push
cmp
jmp
xchg
pop
pminsw
imul
fst
test
pop
push
xchg
sbb
pushf
sub
push
adc
xor
pushf
mov
or
ret
xchg
inc
fidivr
jb
adc
sbb
jo
fdiv
xor
and
scas
mov
out
sbb
inc
(bad)
pop
push
jb
dec
movs
xor
(bad)
loopne
and
jg
mov
int3
scas
adc
ins
pop
nop
xor
sbb
inc
cmp
xchg
and
mov
pop
(bad)
repz
mov
test
or
call
add
lea
scas
ds
jecxz
js
shl
ret
cld
mov
fiadd
xor
test
jp
push
mov
mov
aam
rcr
rol
lds
push
inc
inc
push
nop
mov
xor
jbe
frstor
fsubr
pop
dec
mov
pusha
ja
jecxz
pop
idiv
fucomip
clc
repnz
sbb
xchg
jno
stc
or
ret
popa
sub
push
mov
iret
(bad)
loop
dec
add
inc
xchg
dec
add
movs
pop
and
jp
cli
adc
shr
dec
mov
ins
xor
movs
clc
mul
jmp
adc
fs
cli
nop
mov
add
jmp
js
push
imul
mov
shl
js
xor
add
fwait
jae
es
cmp
push
enter
pusha
sub
jno
icebp
shr
jno
xchg
(bad)
mov
sar
xchg
gs
outs
retf
mov
add
add
outs
push
sahf
xor
xchg
and
pushf
jmp
test
pop
(bad)
inc
pop
push
out
lock
imul
in
mov
je
add
pop
mov
xchg
(bad)
ror
imul
dec
retf
out
popa
push
iret
pushf
jns
and
ds
rcl
jecxz
dec
push
sbb
neg
pusha
rol
xchg
mov
loop
push
dec
cs
sub
dec
js
aad
pop
jecxz
retf
dec
aam
and
(bad)
jo
sub
shr
or
fld
dec
mov
cli
sub
jecxz
mov
(bad)
push
(bad)
repnz
push
push
ins
pop
jge
add
test
push
mov
ret
daa
push
jp
addr16
push
rcl
mov
xor
retf
mov
dec
push
fnstsw
scas
jge
adc
(bad)
jmp
adc
scas
inc
int3
ds
xchg
fistp
lods
adc
push
outs
into
xchg
mov
aad
popa
test
cdq
jl
or
mov
movs
and
leave
movs
fmul
mov
add
jmp
jmp
add
shr
cli
cld
scas
cmp
int3
pop
mov
mov
xchg
push
mov
xchg
popf
iret
pop
mov
outs
dec
inc
pop
add
dec
les
hlt
fmul
rcl
gs
mul
pop
and
mov
fwait
cmp
sbb
cmps
imul
cs
cmps
xchg
jnp
(bad)
out
sub
cli
xor
jno
lds
jno
pop
push
and
jmp
out
ret
jb
dec
push
popa
ja
ja
and
fwait
mov
movs
outs
cmc
and
adc
neg
xor
xor
push
cwde
jbe
push
mov
jp
mov
mov
mov
popa
imul
lahf
cmp
pop
cmp
repz
add
lahf
jo
sbb
lds
xchg
and
mov
es
leave
mov
outs
out
lahf
rol
mov
xlat
and
cmp
adc
dec
inc
inc
xchg
sbb
sub
sub
pop
rol
(bad)
(bad)
jmp
mov
ins
cmp
cmps
dec
and
imul
popf
int3
lea
pop
cmp
sub
std
push
sbb
cwde
adc
adc
sub
test
cdq
push
add
out
mov
inc
push
retf
jne
cmps
push
add
mov
(bad)
pop
rcr
adc
and
and
add
outs
popa
jg
mov
test
inc
or
inc
icebp
out
cld
fidiv
pop
mov
and
adc
push
sti
lahf
iret
jmp
jbe
and
mov
push
retf
pop
sbb
movs
fs
inc
mov
icebp
rol
mov
or
push
movs
and
or
jmp
jl
jns
popa
mov
test
sub
sbb
jne
dec
imul
fistp
mov
sbb
(bad)
rcl
inc
(bad)
clc
ss
xlat
jnp
sub
fst
xor
jl
jp
mov
lods
out
dec
out
retf
mov
std
mov
int3
push
mov
push
inc
inc
mov
fild
mov
mov
or
and
loope
xor
or
ins
add
or
(bad)
adc
fs
pusha
cmp
jb
fdiv
sub
iret
sbb
pusha
retf
sbb
jbe
pop
jbe
cmp
lahf
jno
inc
jg
stos
push
sbb
xchg
imul
adc
div
(bad)
fisub
jmp
retf
and
ss
cmp
push
mov
clc
push
mov
call
outs
ja
push
cmp
ins
fcom
inc
mov
das
jle
cmps
dec
shr
adc
xchg
xchg
lock
lock
out
cdq
cmp
lock
arpl
cmp
(bad)
mov
mov
mov
ins
jbe
xchg
int3
mov
ds
outs
pop
out
sub
lods
xor
retf
enter
ja
test
cmp
(bad)
dec
aaa
mov
(bad)
test
gs
icebp
(bad)
xchg
dec
jp
test
dec
dec
jg
sahf
lahf
cli
sbb
mov
adc
xchg
or
dec
sub
fs
mov
aam
add
jg
sbb
mov
cmp
ret
mov
fcomp
pop
ds
inc
ins
xor
inc
push
sub
dec
adc
shl
fs
xchg
xor
or
push
fistp
dec
(bad)
pop
jmp
push
push
cmp
sahf
inc
call
int
or
mov
fwait
push
lods
cwde
test
ja
shl
cmps
js
fstp
clc
fdiv
call
jecxz
mov
js
(bad)
xchg
mov
xchg
imul
pop
(bad)
lock
es
pop
xor
mov
fcom
dec
cld
cs
push
push
or
out
loopne
or
push
mov
inc
es
in
or
iret
mov
rol
cmps
test
retf
movs
cmp
mov
inc
jmp
inc
loope
dec
dec
(bad)
xchg
(bad)
in
push
movs
jo
(bad)
mov
pop
mov
xchg
(bad)
scas
push
clc
imul
sahf
push
mov
shl
or
push
or
mov
fld
mov
enter
cmc
(bad)
jecxz
push
and
and
or
ficomp
xor
jae
iret
fucomip
loopne
or
jg
mov
sbb
mov
jb
xchg
xchg
fistp
ficomp
outs
push
jno
out
not
sub
dec
jnp
loope
test
inc
xor
loop
lods
mov
jo
adc
jns
and
ds
ins
dec
imul
aam
lds
cmp
enter
rcr
scas
daa
inc
and
mov
out
inc
pop
mov
inc
pop
rcl
and
add
pusha
and
sub
scas
xor
mov
je
push
and
cdq
je
jae
jmp
outs
adc
fistp
in
aas
xor
xor
or
pop
mov
ret
ins
sbb
repz
push
add
push
movs
rcr
ds
dec
jbe
lods
xchg
shl
mov
xor
dec
sub
mov
mov
xor
sub
lea
loope
fsub
mov
(bad)
and
in
sahf
adc
movs
imul
push
or
mov
jnp
out
cmps
aam
mov
and
adc
call
xchg
ss
std
or
aaa
inc
call
sub
mov
ret
ret
sbb
add
jp
jmp
mov
das
test
scas
dec
rcl
das
ret
cmp
arpl
loop
out
or
sar
xor
or
push
adc
mov
cmp
in
sbb
cld
ret
mov
outs
push
xlat
lods
jno
loopne
pop
in
sbb
cmp
push
sbb
movs
lea
sbb
lods
ret
movs
lods
pop
mov
mov
jb
into
movs
sub
bound
stc
adc
mov
je
arpl
leave
arpl
lea
cmp
repnz
xchg
cld
and
push
scas
pop
rcr
stc
bound
je
movlps
xor
xchg
pop
ret
mov
popf
add
fcmovbe
int
popa
jmp
inc
shr
inc
jmp
adc
mov
test
outs
arpl
test
cmc
icebp
xchg
sbb
mov
jecxz
cmp
inc
mov
pop
or
retf
stos
cld
stos
cld
adc
imul
sbb
int3
inc
ret
repz
inc
sar
add
or
add
clc
sti
fs
int
xchg
xchg
xor
mov
stos
push
mov
jae
push
scas
cdq
loope
dec
sub
dec
mov
pop
xchg
inc
pop
adc
jnp
lahf
cli
cmps
push
adc
xor
fs
imul
outs
gs
test
gs
mov
xor
or
int3
loop
jl
fsubr
sti
push
adc
shl
or
adc
pop
mov
es
inc
test
pop
push
cmc
xchg
out
call
(bad)
and
(bad)
jmp
mov
leave
in
mov
jmp
pop
stc
push
out
xchg
push
push
sbb
cmps
iret
jo
(bad)
jae
adc
adc
mov
ins
aad
ror
mov
test
dec
and
dec
in
jp
sahf
mov
stos
cmp
jge
sbb
into
ins
sub
or
dec
push
leave
inc
cmp
lods
test
iret
sti
push
xchg
imul
sub
inc
ds
iret
gs
lods
push
cli
and
sbb
fxtract
es
mov
cmp
and
int3
repnz
jmp
jne
das
call
mov
mov
mov
shr
repz
inc
lahf
jb
and
pop
sbb
data16
(bad)
leave
scas
mov
ins
cli
stc
je
push
jge
xor
mov
adc
jo
push
retf
cli
mov
add
pop
test
xchg
or
and
inc
dec
or
pop
push
fs
repz
daa
fsub
jg
sub
and
loope
aam
sub
es
aaa
dec
xchg
lock
push
test
inc
std
jne
mov
stos
or
in
into
test
mov
scas
mov
dec
sbb
bound
je
adc
stc
aas
lods
stos
fimul
mov
mov
fsubrp
es
sahf
dec
add
repnz
fidivr
inc
xchg
xor
arpl
cli
mov
data16
fwait
cwde
mov
fs
jge
jns
pop
sub
or
fwait
(bad)
mov
test
adc
stos
push
pop
stos
daa
in
pop
push
dec
xor
mov
arpl
xchg
imul
repnz
out
(bad)
rol
neg
jo
jo
sub
out
fs
jns
sbb
xchg
sub
std
je
lea
mov
in
cli
inc
add
enter
or
adc
push
or
mov
nop
repz
nop
fisub
xor
mov
jecxz
mul
daa
in
adc
pop
lea
cli
mov
out
scas
and
push
jmp
mov
cmps
je
cmp
fld
lods
cld
daa
jmp
jmp
daa
retf
inc
xor
jae
ret
xchg
das
iret
push
xlat
shl
sti
sar
xchg
sti
or
jns
push
xchg
fchs
(bad)
cmp
add
nop
mov
test
sbb
jnp
loope
and
xor
out
inc
(bad)
sub
add
adc
push
test
mov
mov
stos
fdivr
jmp
or
or
xor
sub
and
pop
mov
push
(bad)
xchg
mov
movs
imul
push
cdq
outs
push
dec
mov
add
(bad)
jmp
mov
pop
add
xchg
jle
and
movs
sbb
mov
pusha
nop
pushf
jns
mov
repnz
inc
inc
test
dec
js
inc
test
mov
dec
pop
test
aad
xor
lock
and
mov
dec
jne
loope
stos
push
jns
xor
xor
dec
pop
leave
out
cbw
(bad)
adc
test
push
ret
xchg
cmc
fwait
arpl
sbb
or
xchg
mov
mov
and
stos
jl
and
or
not
xlat
adc
mov
mov
sbb
mov
adc
or
sbb
(bad)
jbe
push
dec
test
ret
dec
(bad)
and
sbb
mov
fcmovnu
enter
or
cld
fimul
jae
sub
or
push
mov
outs
out
js
add
mov
xchg
sub
out
xchg
(bad)
cdq
(bad)
ds
dec
addr16
add
sti
std
je
out
(bad)
mov
cmp
xchg
test
mov
jge
jnp
adc
xor
and
sub
jbe
addr16
test
xor
sbb
fmulp
and
jle
ror
mov
shr
xor
mov
mov
fcmovbe
xchg
xor
leave
mov
jmp
jmp
cmp
mov
push
cmp
jno
or
jb
fild
or
cmp
mov
sub
adc
aaa
mov
movs
push
repz
shr
add
ret
test
mov
xor
das
xchg
jbe
cmp
out
shl
and
aas
xor
cmp
mov
mov
add
xlat
and
lea
out
dec
inc
icebp
int
adc
icebp
xchg
mov
imul
in
cmps
sbb
cmp
loope
xchg
cs
sbb
or
push
inc
dec
or
sub
inc
push
cmp
adc
add
out
stos
cmp
and
stos
cmp
addr16
or
jo
cs
fwait
sbb
jge
ss
cs
ss
sub
pop
ss
dec
sbb
pusha
call
int
ins
sub
mov
pop
fs
ficomp
sub
stc
inc
retf
xor
pop
cmp
adc
mov
sub
push
mov
or
mov
cmp
mov
gs
out
jnp
stc
fst
call
fist
and
enter
and
ins
ficomp
ja
push
scas
bound
scas
dec
fnstenv
call
cmp
stos
retf
mov
das
push
cld
repnz
clc
mov
xor
mov
stc
push
(bad)
xor
sub
movs
push
sub
jo
inc
push
xor
jmp
mov
pop
hlt
push
mov
jg
jnp
daa
mov
inc
stc
out
pop
bound
mov
cmp
cmp
fs
add
mov
add
scas
addr16
mov
dec
push
jmp
enter
fs
or
scas
adc
cs
mov
and
pushf
mov
push
or
xor
loop
mov
dec
inc
jne
jb
mov
pop
imul
push
lods
mov
test
mov
jg
push
nop
dec
pusha
jae
adc
or
iret
push
loopne
int3
adc
lock
(bad)
out
loopne
(bad)
mov
(bad)
jmp
and
push
(bad)
(bad)
xor
push
jmp
push
das
and
mov
aad
cli
jbe
aaa
xchg
(bad)
cmps
stos
jbe
mov
mov
sbb
mov
mov
sub
pop
mov
mov
xor
lds
dec
add
inc
xchg
rol
xchg
frstor
push
sub
adc
inc
out
lods
inc
clc
jle
dec
inc
dec
jae
mov
enter
ins
xor
repnz
lds
out
sub
cmp
cs
outs
inc
int
fyl2xp1
inc
jle
mov
pop
push
ins
addr16
inc
test
jbe
out
push
xchg
pop
pop
or
mov
out
lea
jns
jge
fistp
and
shr
cmc
or
lods
mov
inc
mov
xchg
push
adc
cmps
les
pop
stos
adc
imul
sub
cmp
mov
retf
adc
stos
or
scas
xchg
mov
shl
dec
mov
std
push
jne
in
imul
mov
je
mov
jmp
icebp
out
sub
movs
push
add
call
(bad)
lds
imul
shl
not
or
fdivrp
add
in
xchg
mul
sbb
mov
sbb
mov
addr16
add
add
mov
xchg
test
dec
ins
popf
je
(bad)
sub
xchg
hlt
rcr
stos
in
jmp
lock
add
inc
rcr
mov
sbb
adc
jg
inc
push
rcr
fisub
push
inc
or
std
add
loope
pop
mov
imul
fild
and
lds
ins
int3
lods
rcr
cld
pop
pop
js
xchg
add
push
jp
imul
mul
mov
aaa
jmp
ds
stos
xlat
jecxz
dec
shl
adc
rcr
jmp
jmp
mov
xchg
add
jmp
inc
iret
mov
inc
fcom
jno
mov
std
add
mov
data16
dec
ror
scas
dec
pop
or
mov
arpl
xor
lahf
ja
xchg
int
mov
cmp
adc
outs
cmp
adc
cmp
bsf
setno
xchg
xor
fwait
(bad)
call
push
repz
add
or
outs
adc
and
jne
inc
sub
in
mov
movs
cdq
stos
imul
cmp
adc
adc
ret
xor
out
adc
nop
jmp
xchg
pushf
sbb
jb
(bad)
pushf
sub
pop
fidiv
sub
sbb
icebp
sbb
jo
iret
mov
rol
sti
xchg
es
out
fld
push
push
mov
imul
(bad)
push
sahf
adc
ret
push
lds
jmp
fs
dec
aaa
add
in
inc
mov
mov
test
out
stc
dec
dec
cmc
stos
popf
nop
call
aam
mov
add
scas
loope
in
out
std
mov
fidiv
neg
cli
xor
xchg
jns
mov
mov
sub
push
pop
pop
outs
ds
jmp
sti
pop
lods
cmp
test
jge
pushf
sbb
outs
test
pushf
mov
scas
add
pop
stos
fs
test
ins
(bad)
mov
cs
mov
pop
(bad)
cdq
mov
mov
inc
xor
ja
arpl
xchg
ret
push
or
repnz
inc
aaa
mov
push
cmc
shr
mov
ds
cld
shl
std
push
jecxz
jmp
int3
sbb
sub
push
xchg
aam
jbe
dec
mov
pop
mov
jmp
and
cwde
aad
pusha
(bad)
cmp
mov
jge
and
sbb
into
pop
cmp
loopne
inc
jno
loope
loopne
or
cmp
xor
dec
mov
jmp
test
das
ss
and
mov
(bad)
pop
push
sub
into
(bad)
mov
arpl
aaa
in
xor
or
movs
and
fld
sbb
xchg
mov
ret
sbb
dec
pop
mov
in
(bad)
jmp
mov
add
ja
in
pop
int3
and
xor
cmc
mov
fisub
mov
or
jge
pop
or
mov
lahf
jbe
inc
jnp
xchg
enter
or
sti
mov
fbld
xchg
imul
pop
stc
mov
ja
movs
jns
cmps
aam
(bad)
rol
fmul
pop
retf
cdq
and
enter
push
mov
sub
rol
push
pop
or
and
xor
les
pop
repnz
jl
xor
ins
push
pop
jb
pop
adc
aad
mov
add
cmp
movs
retf
fsubr
cmp
test
sbb
std
fs
loope
gs
dec
jg
nop
fs
xlat
pcmpeqd
lds
mov
push
cmps
cdq
sahf
dec
sbb
ret
retf
adc
addr16
mov
jmp
or
gs
leave
mov
daa
jno
loopne
push
adc
scas
inc
and
push
mov
pop
adc
and
test
ror
adc
sub
dec
popa
inc
gs
lods
push
into
jg
dec
jecxz
sub
jmp
dec
bound
movs
fwait
xor
mov
jbe
lea
test
arpl
mov
ja
into
pavgb
into
xor
push
dec
out
iret
mov
test
ss
imul
mov
std
movs
fwait
jp
fidiv
jmp
fdivr
lods
xchg
sbb
sar
xchg
mov
std
or
dec
mov
cmp
xchg
dec
add
retf
add
cld
cmp
and
jne
repz
adc
push
mov
jmp
test
and
test
adc
mov
in
and
cmp
jno
adc
ss
push
inc
push
sbb
xchg
retf
jmp
rcl
mov
add
popf
and
js
ins
shl
mov
jge
scas
jge
shr
std
sbb
xchg
pop
mov
sahf
jecxz
arpl
xor
push
mov
stos
mov
mov
adc
mov
adc
cld
aad
jnp
pop
arpl
arpl
fwait
iret
adc
in
mov
mov
icebp
test
sub
xchg
cmp
jge
push
rol
dec
pop
sbb
out
jecxz
push
(bad)
mov
xchg
dec
ret
jmp
sub
rcr
int
mov
enter
add
repz
lds
cmp
(bad)
push
dec
(bad)
int3
out
in
xchg
into
pop
and
scas
cmp
cmp
jb
jno
jb
mov
adc
addr16
(bad)
adc
cld
mov
sub
icebp
sbb
xchg
iret
or
or
or
std
call
test
imul
xor
mov
scas
icebp
(bad)
ins
xor
scas
mov
(bad)
mov
scas
jmp
push
mov
mov
int3
pop
das
xor
xchg
test
xchg
not
jo
aam
jl
dec
mov
adc
fld
mov
movs
mov
stos
sbb
xchg
or
xor
cmps
nop
loopne
repz
xchg
iret
outs
ret
(bad)
adc
out
dec
iret
pop
loope
data16
xor
ss
(bad)
jecxz
inc
ja
or
push
xchg
xlat
mov
dec
push
lahf
xchg
push
jg
arpl
ret
push
pop
add
std
test
iret
inc
cmovs
xchg
inc
and
add
dec
lods
push
sbb
in
sub
xor
sar
and
scas
xchg
in
and
(bad)
cld
jmp
cmp
in
jae
popa
cmc
xchg
and
or
out
leavew
mov
adc
lahf
jmp
jb
or
xchg
add
mov
ins
lods
addr16
push
and
cmc
dec
pop
mov
out
sbb
lahf
fs
mov
xor
xor
cld
ja
out
fld
jno
inc
es
daa
or
loop
mov
shr
jno
and
shr
jge
data16
xor
jno
ins
sub
sbb
inc
sub
les
mov
and
push
mov
pop
mov
and
cli
cmps
jmp
jmp
inc
mov
adc
jge
aas
mov
aam
dec
ror
scas
xchg
adc
leave
loopne
sub
outs
dec
aad
fnstenv
bound
adc
test
jg
call
arpl
mov
bound
shl
cmc
idiv
push
mov
sub
fwait
adc
pop
in
dec
cld
pop
or
movs
or
xchg
push
mov
add
cmp
add
inc
js
sub
pop
in
inc
movs
cmp
(bad)
add
ss
in
stos
mov
and
loopne
dec
(bad)
loope
aas
adc
cmps
jae
bound
call
fdivr
dec
mov
fnsave
aam
outs
cmp
scas
aad
add
and
adc
and
in
ins
mov
pop
scas
jmp
push
add
pop
or
addr16
jg
ret
mov
push
stc
aas
mov
hlt
sbb
adc
call
xor
cmp
in
xor
jecxz
push
fistp
in
push
nop
fisub
dec
mov
sub
int
fsubr
(bad)
fcomp
mov
nop
(bad)
push
mov
inc
je
jl
(bad)
jp
push
mov
pop
xchg
shr
rol
mov
push
xchg
test
and
(bad)
mov
js
hlt
outs
jge
xor
(bad)
faddp
add
xchg
pop
ja
xor
pushf
and
fs
sub
inc
xor
and
loopne
imul
in
jecxz
ret
jbe
imul
adc
mov
es
(bad)
sti
cwde
sub
es
cmps
or
sub
xchg
xchg
pop
mov
dec
(bad)
cs
xor
repnz
adc
jp
cmp
dec
cmp
lahf
std
popa
jb
in
test
pushf
cld
or
mov
jg
sub
jns
add
mul
pop
gs
pop
fdiv
out
in
or
lds
outs
outs
jmp
cmc
sbb
mov
adc
pusha
scas
sti
scas
push
and
in
mov
test
pop
fdiv
add
mov
cdq
push
ja
ror
rcr
sbb
sub
xor
dec
das
std
lahf
xchg
jle
leave
neg
inc
dec
fadd
stc
test
scas
cld
pop
jp
int3
es
adc
or
pop
ss
sub
jmp
mov
fst
inc
dec
mov
dec
sub
mov
stos
xchg
adc
or
push
leave
cmps
or
shr
pop
and
ret
aad
ds
push
test
cmp
mov
jnp
inc
or
aad
xor
jb
pusha
movs
sbb
cmp
cmps
std
jae
(bad)
mov
jp
jle
jo
es
cwde
add
adc
fisubr
mov
inc
jae
shl
xor
(bad)
mov
setae
sub
xor
dec
(bad)
xlat
dec
icebp
push
jmp
xchg
inc
rcl
test
or
into
arpl
push
lock
xor
cld
out
sub
stos
iret
int
xor
adc
out
pop
mov
adc
mov
sub
add
ret
or
or
mov
push
mov
jmp
mov
fst
es
push
test
sub
or
(bad)
ret
fdivr
mov
adc
cmp
push
xor
mov
mov
xchg
shr
mov
xlat
xor
sahf
(bad)
je
or
sti
mov
aad
mov
xor
test
movs
sbb
jmp
xor
mov
xor
pop
in
aaa
jnp
pusha
jle
cmc
push
add
push
mov
stos
test
adc
push
push
ss
push
pop
cdq
dec
add
in
sub
shl
test
test
(bad)
pop
fbstp
int3
add
and
cmp
mov
mov
and
ins
fldcw
fdivr
inc
mov
imul
movs
xchg
in
aad
mov
scas
mov
mov
jle
sbb
cmp
out
call
stos
loope
inc
xor
xor
or
inc
and
shr
fwait
mov
sbb
mov
pop
cmc
mov
pop
jo
and
fcom
test
scas
pop
inc
mov
push
pusha
fwait
pop
or
xchg
fwait
imul
add
sbb
loope
mov
sti
in
or
les
gs
fld
cwde
pop
mov
mov
jno
push
stc
dec
mov
sub
movs
cmp
fistp
bound
in
mov
stos
xlat
jg
leave
out
cli
in
rcl
jmp
pop
jmp
pop
or
outs
ja
xchg
mov
mov
stc
xor
cdq
or
stc
jl
dec
xor
xor
push
xchg
sbb
sbb
jnp
fs
(bad)
push
jg
arpl
clc
call
adc
cmps
ret
push
push
mov
popa
or
add
(bad)
push
sub
mov
sar
xlat
pushf
pop
add
jge
test
jns
adc
out
adc
std
stos
and
scas
jo
or
ret
int
cmp
cmp
mov
fdiv
dec
xor
jl
cmp
loop
mov
inc
xor
dec
leave
cs
xor
push
or
pop
and
xchg
mov
in
xor
sbb
ins
dec
daa
or
and
dec
xchg
data16
inc
hlt
bswap
mov
inc
(bad)
or
addr16
movs
hlt
push
jmp
cdq
add
sbb
add
test
push
int
mov
xchg
loop
sbb
mov
xor
add
jl
enter
sbb
loopne
(bad)
lods
add
icebp
es
stos
mov
fcomi
es
pop
mov
mov
push
xor
jo
in
jbe
push
dec
or
adc
(bad)
inc
sbb
lods
add
push
cmp
loopne
xlat
icebp
in
sbb
in
add
cmp
out
js
xor
xor
pop
call
xchg
or
xchg
test
es
fwait
mov
push
pop
into
stos
mov
jl
int
mov
mov
mov
bswap
rol
mov
outs
fwait
arpl
pop
rcl
adc
imul
xor
ror
js
mov
lods
repnz
cmp
adc
call
push
jno
(bad)
sti
loope
fwait
fs
mov
test
add
lods
add
mov
aaa
mov
adc
sbb
push
mov
jbe
xlat
inc
xchg
cmc
pop
hlt
xor
mov
mov
adc
xor
mov
mov
pushf
out
(bad)
mov
cld
cdq
ret
xor
pop
cwde
aas
push
cmp
jle
jns
cwde
mov
dec
sub
push
mov
add
cld
pushf
neg
fdiv
es
shr
inc
pop
clc
or
fist
jecxz
fidiv
in
sbb
push
in
aad
xlat
retf
inc
sbb
stos
cmp
or
pop
js
lds
push
out
cwde
call
jle
loop
push
mov
jmp
mov
mov
pusha
movs
jo
nop
fiadd
sub
jo
mov
out
xchg
pop
mov
add
test
xor
popf
mov
adc
xor
cvtps2pd
and
mov
push
jg
push
jle
addr16
xchg
test
int3
push
mov
push
sub
add
dec
gs
push
mov
jl
or
jns
adc
inc
cmp
mov
repnz
pop
xor
sbb
loopne
sub
jge
cmp
dec
stos
add
push
dec
push
xor
retf
mov
jl
lahf
push
(bad)
jnp
xor
(bad)
cmp
fisub
repnz
sti
cdq
repz
cs
cmps
xchg
fucomp
jp
call
jo
cmp
jo
dec
push
adc
dec
data16
std
xor
lods
jnp
ss
xor
cdq
push
dec
jl
shr
ins
test
push
stc
es
dec
(bad)
cmp
int
out
sub
inc
aam
popa
dec
mov
in
push
ficom
xchg
mov
sub
ja
aaa
jbe
retf
cmp
jmp
push
xor
push
add
push
sbb
cmc
scas
mov
std
xor
add
(bad)
cmp
scas
or
pop
pop
adc
push
(bad)
mov
mov
pop
pop
cld
jmp
pop
push
and
dec
or
push
xor
add
pop
push
add
dec
bound
push
push
(bad)
pop
les
xor
pop
pop
aaa
jbe
int
movs
leave
int
xor
inc
xchg
jp
cmps
push
adc
out
cmps
cdq
ror
adc
sbb
in
xchg
mov
mov
fdivr
or
lods
mov
dec
mov
rcr
leave
call
(bad)
or
push
pop
(bad)
mov
sbb
mov
add
inc
jmp
push
mov
addr16
popa
in
cmc
call
arpl
adc
pushf
mov
lds
mov
stos
out
out
hlt
adc
jnp
adc
sbb
mov
xchg
sub
xchg
retf
iret
(bad)
sub
cmc
pop
or
es
nop
loope
adc
fisttp
xor
jl
jecxz
inc
mov
jnp
jne
push
fs
inc
push
cmps
daa
jmp
repz
adc
mov
pop
xchg
jns
gs
sub
(bad)
inc
sub
ja
ins
nop
sti
aam
mov
jmp
mov
xchg
lods
push
ins
cmp
or
call
push
xchg
push
add
inc
into
xchg
push
pop
pop
ret
pop
sub
xor
push
mov
and
cmp
push
movs
loope
jle
pop
test
jle
clc
jp
aad
sbb
(bad)
sbb
mov
cwde
adc
or
push
cmp
push
data16
lea
pop
cwde
dec
sbb
loop
mov
or
xchg
popf
mov
push
bnd
mov
sbb
push
xor
jb
mov
gs
cli
leave
mov
cmp
cmps
cmp
loop
sbb
adc
or
push
jge
and
test
push
mov
jne
cmp
fldcw
or
hlt
mov
mov
mov
cmp
jae
inc
sub
pusha
loope
add
test
xor
mov
lahf
jmp
mov
mov
mov
cdq
shl
jmp
mov
aas
leave
jecxz
sbb
addr16
mov
xchg
xor
fnstenv
push
test
mov
jg
adc
cmp
sbb
(bad)
dec
sub
pop
jge
jl
push
inc
call
jo
sub
push
xchg
xor
loope
(bad)
neg
and
sbb
and
mov
xor
adc
ds
and
dec
retf
hlt
enter
sub
cmp
je
sub
fstp
dec
test
call
inc
inc
sbb
sub
mov
xchg
and
sub
xchg
sbb
enter
xor
repz
idiv
loopne
rcl
fistp
bound
sahf
push
push
add
ret
rol
inc
jne
icebp
imul
movs
sub
call
repz
js
dec
jecxz
xor
mov
add
jno
adc
pop
cmp
scas
dec
ins
cs
jg
es
adc
or
push
inc
jne
test
loop
add
xor
and
sbb
push
dec
fdiv
mov
pop
pop
test
arpl
mov
sub
rcr
and
in
mov
pop
mov
and
inc
mov
xor
pop
xchg
into
sbb
fwait
rcl
in
(bad)
adc
push
sbb
mov
mov
fild
jecxz
sbb
jmp
lods
jp
fld
mov
mov
mov
repnz
fcom
pop
push
cmps
dec
mov
push
mov
and
adc
sbb
not
fisub
ret
or
jne
retf
jae
push
pop
pop
es
out
(bad)
pushf
xchg
out
ret
dec
sub
lds
adc
sbb
in
mov
mov
call
lods
jmp
popa
adc
mov
mov
test
out
sub
cwde
xor
jbe
imul
aad
xchg
jp
push
loop
movs
and
lods
xchg
shl
or
or
sub
aad
ss
pop
mov
gs
push
sub
test
rcl
enter
and
inc
and
mov
data16
nop
xor
cli
dec
jl
push
jb
pushf
dec
inc
inc
xor
scas
push
xchg
call
cmp
mov
adc
shl
iret
pop
sbb
aad
jl
mov
fldcw
out
mov
fdivr
or
sub
icebp
rcl
jns
fisttp
sub
dec
mov
ins
jae
out
sar
retf
clc
sti
call
mul
jo
or
das
pop
ja
inc
sbb
cwde
in
mov
add
ret
shr
add
test
mov
mov
xor
cmp
bnd
add
jno
bound
in
push
xchg
pop
test
cmp
in
sahf
std
push
jmp
mov
movups
(bad)
clc
pop
cmp
adc
stos
pop
bound
(bad)
or
add
fadd
pop
leave
dec
mov
adc
mov
dec
fsub
pop
repz
iret
dec
test
add
test
cmps
fwait
movs
inc
adc
or
pusha
into
aas
ja
popa
sbb
pop
or
fiadd
or
jg
dec
push
cmp
pop
in
push
jmp
pop
pop
loop
mov
mov
pusha
enter
inc
sbb
hlt
sub
cmp
add
mov
pop
jns
mov
cmc
mov
scas
sbb
iret
stc
lea
jmp
clc
lea
in
mov
inc
push
add
cdq
pop
fisubr
arpl
or
mov
test
(bad)
mov
lods
into
add
outs
outs
fidivr
push
push
and
shl
sub
popa
stos
aad
test
or
aas
xchg
out
pop
retf
shl
cmp
mov
or
push
aaa
xor
and
jmp
sub
clc
push
movs
stos
xchg
inc
xor
pop
in
add
cmp
xor
sub
push
repz
xchg
dec
pop
pop
in
jnp
scas
lahf
lea
ffree
rcl
test
shl
(bad)
jo
iret
gs
sbb
inc
xchg
test
stos
xor
xor
pop
xlat
and
jg
cmp
in
imul
in
jae
sub
push
into
adc
add
std
ror
cdq
or
push
inc
xor
call
cmp
imul
inc
clc
dec
mov
in
push
add
(bad)
das
in
jmp
jge
inc
mov
rol
sub
or
neg
fcom
xchg
ret
movs
cwde
fnstsw
inc
sbb
add
mov
mov
sbb
arpl
addr16
aaa
and
add
push
adc
retf
ds
cs
dec
test
dec
fisttp
sbb
and
sar
pop
lods
xor
sub
retf
mov
cmp
retf
adc
push
pop
xchg
sbb
jmp
dec
dec
pop
imul
outs
or
or
xor
fisttp
js
hlt
jmp
in
test
test
lds
and
add
rol
inc
repnz
aad
xor
std
jne
loop
addr16
xchg
push
push
jb
out
push
pop
pop
mov
dec
pusha
shl
popf
or
lds
dec
movs
mov
int3
dec
dec
sbb
bound
inc
repnz
lea
jecxz
daa
scas
lods
cli
cmp
dec
cmp
inc
pop
mov
scas
jne
nop
dec
mov
mov
leave
xchg
and
pop
pop
pop
mov
ror
fiadd
add
jo
(bad)
mov
iret
in
lods
mov
cmp
xor
popa
jb
adc
fs
xchg
xchg
inc
out
sbb
or
sub
leave
in
fimul
and
sub
enter
xor
aad
sub
test
cmp
pop
pop
or
xor
stc
cwde
ss
adc
out
jl
or
lds
pop
cli
mov
nop
ja
ret
daa
xchg
add
loopne
jle
pushf
mov
mov
pop
jnp
xchg
clc
cmp
xchg
leave
adc
or
call
rcr
push
lods
push
xchg
sahf
lahf
ret
es
xchg
xchg
fst
fdivr
jle
(bad)
pop
xor
or
daa
jns
sub
adc
gs
fs
lea
pop
ret
(bad)
arpl
cmp
pop
push
popf
shr
addr16
jae
mov
lahf
fs
out
sub
pop
pop
or
xor
test
dec
jb
mov
ret
hlt
sub
xor
lods
and
jbe
outs
mov
dec
sbb
push
call
or
pop
pop
cmps
outs
dec
xchg
mov
sti
sbb
mov
or
jmp
sub
int3
ins
jne
jl
xor
cmp
mov
ret
jp
(bad)
in
mov
int
test
test
fcomp
jne
jbe
mov
lds
aam
pushf
in
imul
add
dec
rol
sub
pop
fldpi
imul
inc
mov
xlat
lea
das
and
dec
rcl
push
pop
jmp
sub
inc
xchg
outs
jge
or
out
ss
pop
aas
xchg
mov
jbe
repz
stos
mov
dec
sub
cli
inc
sub
nop
and
stc
mov
mov
pop
pop
andnps
retf
push
enter
sbb
sbb
(bad)
inc
mov
sub
stos
jb
clc
test
cmp
aas
and
xchg
test
je
sbb
loope
ins
cmp
sbb
mov
sub
lods
or
mov
mov
jecxz
into
scas
and
add
ins
fnsave
pop
mov
add
nop
repnz
jecxz
dec
sub
xor
jmp
aaa
pusha
fld
or
add
mov
xchg
cs
sub
jno
xor
sbb
ss
lds
push
add
xchg
stc
mov
out
or
mov
jnp
test
call
inc
xor
lea
es
outs
pop
pop
cmp
xchg
pop
sub
fimul
pop
(bad)
int
cdq
xchg
shr
daa
inc
imul
hlt
and
cmp
scas
jo
sahf
into
cmp
pusha
(bad)
jnp
push
sbb
adc
push
mov
bound
das
into
cld
in
jge
sbb
lea
xor
xchg
loope
sbb
stc
(bad)
gs
jle
int
cmps
and
and
cld
dec
into
and
mov
hlt
sub
loope
xadd
out
fst
jmp
xchg
xchg
jge
mov
cmp
cmp
das
or
sar
(bad)
fisub
outs
fcmovu
sub
pop
inc
sbb
cmp
mov
mov
adc
pop
xchg
adc
fiadd
xchg
rcr
dec
or
mov
out
cmps
mov
sbb
out
fcomp
popw
mov
ret
es
adc
cmp
sbb
cmp
in
xlat
int
add
retf
push
dec
lods
test
pop
mov
fwait
push
out
lea
(bad)
in
retf
jo
xchg
test
cli
jno
arpl
lea
aaa
fwait
or
push
lods
out
and
mov
sub
and
arpl
xor
jns
add
adc
pop
jb
ss
(bad)
ja
outs
or
pop
add
push
jb
sub
addr16
in
add
loopne
call
mov
std
mov
(bad)
mov
call
shl
push
xor
mov
ins
movs
add
(bad)
jle
retf
retf
add
add
xchg
pop
push
inc
add
xchg
icebp
xor
lods
dec
ja
xor
add
push
repnz
jae
xor
shl
mov
sbb
adc
loop
fsubr
sbb
retf
pusha
dec
out
inc
ds
iret
test
lds
pushf
inc
sbb
add
aaa
(bad)
sub
rcr
test
cwde
test
outs
sbb
inc
in
jmp
les
out
jp
mov
jp
mov
dec
sbb
sti
lods
push
sbb
aam
fsubr
(bad)
std
xor
xor
mov
push
fidiv
dec
in
mov
lea
das
cmc
jne
or
inc
retf
sar
sbb
and
jo
(bad)
ja
das
lds
jmp
or
fcmovne
mov
sub
mov
in
dec
int3
push
sti
in
stos
pop
out
pop
daa
(bad)
imul
popf
pop
and
jno
shl
outs
cmp
test
arpl
jge
inc
sbb
jmp
cmps
and
add
dec
mov
xchg
and
repz
inc
stc
jp
data16
mov
aam
dec
xor
sub
lock
test
jmp
fcomi
pusha
loopne
and
xchg
add
jmp
clc
sbb
ffreep
cmps
sbb
shl
in
fs
sbb
adc
dec
lds
add
loope
clc
sbb
xchg
das
and
sub
pop
cmps
rcr
stc
rcl
mov
or
sub
inc
mov
aam
sub
lods
and
loope
mov
call
and
arpl
mov
popf
mov
cmps
stos
mov
loopne
rcl
ss
lahf
repnz
push
rcr
xchg
adc
mul
and
enter
jecxz
sub
scas
add
movs
add
sub
sbb
pop
(bad)
stos
inc
and
mov
or
ss
into
push
inc
call
ds
retf
(bad)
mov
(bad)
movs
adc
sbb
jo
sub
inc
xor
pop
gs
dec
shl
dec
aad
fwait
or
test
cmp
iret
xchg
bswap
jmp
icebp
retf
xchg
and
cmp
in
or
pop
(bad)
add
(bad)
jb
pop
into
push
or
dec
mov
and
sbb
or
dec
(bad)
pop
rcr
jbe
mov
aam
loope
in
sbb
cmp
(bad)
cmp
addr16
je
cmps
stos
xor
xchg
xchg
dec
ds
std
rcl
outs
retf
or
xor
int
pop
or
mov
sub
inc
and
mov
out
hlt
int3
inc
dec
gs
pop
mov
pop
dec
ret
pushf
stos
dec
push
pop
sbb
in
rol
retf
inc
cmp
fist
xchg
sub
cs
sti
sub
leave
push
jne
std
mov
gs
scas
movs
loop
rcr
mov
sbb
fsub
test
cli
movs
test
iret
(bad)
sub
imul
xor
std
mov
mov
pop
push
in
push
scas
test
hlt
sar
mov
cwde
in
mov
outs
loop
pop
push
popf
push
imul
cli
push
sub
les
icebp
xchg
or
jge
shl
xor
in
and
ds
mov
ret
mov
jmp
icebp
scas
loopne
mov
into
jmp
nop
pop
xchg
jo
ins
retf
sub
das
jns
jno
fisub
ret
ret
sbb
cdq
xchg
pusha
cmps
pop
and
rcr
add
(bad)
not
adc
and
fdiv
lods
popa
adc
(bad)
sub
sub
std
mov
stos
in
sub
sub
mov
mov
js
arpl
(bad)
loope
xchg
push
aam
loope
stos
mov
pop
xchg
cmp
inc
jmp
fidivr
div
add
or
dec
rcr
out
out
cld
push
jmpw
push
lods
mov
xchg
nop
mov
fwait
ror
iret
push
push
dec
dec
add
push
sub
fisttp
cmps
into
mov
mov
or
inc
ss
js
push
push
push
repz
sti
jmp
mov
imul
xchg
jmp
test
stc
fcom
xor
out
(bad)
sbb
and
mov
lock
in
fdiv
aas
iret
retf
(bad)
(bad)
fstp
movs
lahf
jp
enter
inc
or
xor
cmp
stos
pop
pop
xor
jae
lahf
sbb
dec
jmp
aaa
scas
movups
enter
push
mov
imul
in
add
shl
or
leave
push
enter
push
sar
popa
ror
jl
or
pop
push
add
test
mov
sbb
loop
xchg
xchg
cli
mov
mov
lds
imul
fcomp
xchg
jp
cmp
shl
stos
xor
into
rol
sbb
stos
add
cwde
mov
cmp
push
or
repz
mov
jno
scas
cdq
mov
jl
jmp
push
pop
push
stos
(bad)
dec
inc
xchg
inc
push
xlat
lods
sub
repz
retf
fimul
call
jp
cmp
sbb
(bad)
sbb
adc
bound
popf
jecxz
out
mov
inc
inc
inc
inc
sti
repnz
cmp
neg
push
add
xchg
sub
and
mov
pusha
sub
mov
sbb
push
aam
(bad)
out
dec
test
add
jg
sbb
cmp
bound
adc
jb
lea
mov
cld
les
xchg
bnd
push
xor
push
or
push
call
sub
push
fst
adc
ds
add
cdq
pop
call
aas
(bad)
jmp
int3
push
(bad)
or
int
push
or
call
pop
lahf
inc
cwde
jo
dec
fwait
inc
or
nop
scas
ret
dec
neg
or
sahf
cmps
shl
jns
sub
sub
ja
adc
xchg
push
cdq
inc
jcxz
je
lea
mov
xchg
retf
inc
gs
das
mov
xchg
adc
jmp
push
stos
loope
xchg
sub
stos
and
push
and
popf
cmp
add
jmp
outs
int3
test
pop
dec
jg
ror
xchg
jns
mov
dec
ror
and
push
sahf
test
arpl
add
sbb
out
mov
mov
xlat
lods
inc
push
add
mov
loope
lock
adc
push
xchg
loop
popa
mov
dec
repnz
sbb
pushf
(bad)
stc
lds
ja
sti
aas
push
pop
mov
xchg
mov
adc
push
mov
mov
in
mov
stc
cdq
ds
in
fucomp
add
jp
loopne
rol
jnp
aam
jle
cmp
mov
add
cmp
sbb
fdivr
mov
pop
in
test
inc
pop
pop
inc
cmps
vpcomd
pop
neg
(bad)
retf
jbe
jbe
push
and
pop
jns
fistp
cmp
mov
mov
cmp
cmp
mov
cmps
mov
cmc
into
pop
je
pusha
pop
fld
clc
or
cli
daa
push
xor
jns
push
rcl
out
sbb
or
ss
hlt
sbb
aaa
push
and
sub
imul
xchg
jmp
ss
adc
hlt
mov
daa
pop
mov
jecxz
dec
jge
loopne
xchg
and
inc
mov
mov
sub
retf
ins
outs
hlt
hlt
cmp
bound
pop
adc
pop
in
mov
fst
xlat
adc
sbb
push
pop
aas
sbb
and
dec
add
lods
adc
mov
push
add
in
pavgw
repz
out
and
test
jmp
push
in
stos
test
or
ret
mov
adc
jp
popa
dec
fdiv
add
and
sub
mov
cmps
arpl
fcomp
cmps
fdiv
(bad)
cmps
inc
dec
push
out
push
mul
pushf
pop
in
out
mov
pop
mov
or
rcr
fs
sbb
aad
iret
dec
(bad)
xor
js
cmps
adc
add
cmps
mov
adc
xchg
mov
xchg
and
aaa
rcl
mov
test
sbb
dec
ins
fcom
add
retf
std
aad
lds
ja
data16
lds
cld
jns
mov
mov
test
ins
inc
shl
ins
inc
(bad)
repz
jne
adc
leave
stos
jmp
fist
out
pop
inc
movs
daa
dec
dec
aaa
inc
jge
arpl
aas
outs
jecxz
ds
push
in
dec
in
xor
inc
push
or
fwait
jle
mov
(bad)
out
mov
lds
sub
adc
sub
iret
mov
retf
pop
and
loope
xor
jmp
sub
jl
mov
xor
addr16
inc
fnsave
jge
mov
pop
retf
aad
jmp
sbb
and
jbe
test
sbb
mov
das
(bad)
in
stos
(bad)
in
and
in
jbe
cmp
sub
cwde
push
ret
movnti
icebp
mov
(bad)
shl
adc
std
aam
aam
xchg
sbb
movs
or
fmul
jmp
ret
jmp
adc
push
cmp
xchg
repz
push
push
sub
sti
aad
push
sbb
scas
lods
mov
repz
(bad)
xor
enter
dec
jg
fidiv
out
call
stos
xchg
imul
das
loope
out
pop
dec
xchg
popf
jg
ficomp
mov
fcmovne
push
dec
or
dec
mov
or
or
(bad)
xor
mov
adc
repz
push
jbe
jmp
and
and
mov
fist
into
dec
retf
mov
or
and
mov
cs
mov
(bad)
and
cdq
xchg
cli
loopne
jb
or
fmul
cli
dec
cmp
gs
lock
sahf
out
lock
pop
lods
ss
cmps
(bad)
jae
dec
xor
adc
imul
test
mov
or
(bad)
loopne
push
loope
jle
xlat
ss
mov
fidivr
data16
mov
pushf
fsubp
arpl
call
in
lea
sub
fiadd
mov
xor
and
jp
(bad)
push
(bad)
xchg
das
sub
sub
sub
or
popf
dec
pop
jge
sbb
mov
sahf
std
in
clc
xor
outs
or
pop
ret
mov
retf
push
and
push
or
pusha
jmp
jo
fst
add
pop
dec
mov
sbb
jno
inc
sbb
xchg
xchg
add
lock
add
sub
call
ret
scas
shr
adc
xchg
test
iret
jmp
cmp
test
jb
sar
xchg
enter
call
xchg
cmp
cmp
sbb
mov
scas
jmp
inc
push
test
shl
arpl
or
imul
adc
(bad)
sti
js
(bad)
mov
xchg
push
ret
lea
cmps
jg
sbb
sbb
lds
test
test
xor
add
mov
out
mov
xor
scas
push
(bad)
and
jle
dec
mov
dec
int
(bad)
add
xchg
nop
cdq
add
xchg
icebp
cmp
xor
jge
sti
test
dec
mov
mov
add
cmps
jecxz
daa
sbb
cmp
add
out
mov
jno
dec
sub
pushf
sub
dec
xlat
sar
mov
test
pop
adc
movs
rcr
test
push
aad
cmp
add
jmp
dec
sbb
push
adc
es
mov
mov
data16
out
cmp
inc
pop
repnz
fcomp
or
dec
or
lahf
out
inc
add
inc
cmp
mov
lock
fist
retf
in
jno
xchg
mov
aam
hlt
nop
add
sti
mov
sbb
ins
xchg
sub
inc
ins
mov
push
cmp
shl
ficom
call
mov
(bad)
js
xor
pop
xchg
cwde
mov
aad
jmp
sar
imul
fidivr
ins
fcomp
mov
or
adc
aaa
inc
imul
cmp
or
push
push
fcom
mov
jmp
sbb
sbb
clc
(bad)
cmps
or
fwait
pop
push
dec
sub
stc
(bad)
popf
mov
add
gs
pop
clc
dec
test
mov
(bad)
xor
mov
cmp
push
mov
pop
pop
movs
inc
mov
jo
in
pop
shl
xchg
or
leave
jle
mov
or
aam
mov
or
cs
leave
adc
push
outs
ins
mov
test
and
aas
loopne
icebp
stos
(bad)
and
ins
int3
cdq
mov
and
aam
jo
jge
or
push
xlat
test
stos
xor
dec
mov
dec
mov
jo
clc
test
cmp
mov
add
ret
xchg
ficomp
int
mov
jge
mov
cmp
push
test
cmp
push
adc
push
loop
xchg
pop
shl
lock
adc
lods
daa
test
ss
clc
lods
push
repnz
stos
push
inc
push
outs
xchg
xor
punpckhdq
and
dec
shl
inc
ds
ja
jns
daa
mov
dec
pop
mov
mov
sbb
adc
std
ficomp
inc
aam
into
aaa
jns
popf
sahf
cmps
push
ins
pop
and
xchg
xchg
mov
aam
int3
cmp
cmp
cmp
je
hlt
lahf
sub
adc
mov
push
adc
mov
pop
xor
(bad)
sbb
jmp
cmc
inc
stos
je
mov
(bad)
addr16
jp
pop
loopne
add
push
fisub
mov
jnp
jg
nop
fsubr
add
or
mov
(bad)
push
push
dec
pop
mov
xchg
aam
mov
pop
mov
out
imul
cmp
retf
pop
mov
add
xchg
ins
pop
and
and
ins
cmp
mov
sbb
pop
sbb
cmp
outs
mov
sbb
dec
xor
pop
sbb
pop
mov
or
scas
sub
pushf
cmp
fimul
sbb
jnp
xor
loope
adc
sbb
jg
dec
dec
xor
jno
sbb
mov
shl
out
xchg
std
sbb
into
aas
jnp
lea
ins
mov
mov
sbb
(bad)
rcl
mov
push
mov
hlt
cmps
ss
call
jbe
cmpps
je
cli
cmp
in
push
push
das
call
repnz
sahf
pop
test
sbb
dec
test
daa
add
aam
xchg
mov
inc
xchg
fwait
mov
jne
cs
sti
mov
jmp
xor
stos
dec
add
cdq
movs
out
pop
mov
push
(bad)
(bad)
pop
cmp
fwait
jge
pop
fsubr
xchg
dec
pop
xchg
push
mov
mov
push
mov
std
ret
popf
aaa
bound
loope
jmp
xor
mov
jo
push
fisubr
xchg
xchg
outs
imul
dec
cmps
mov
mov
xchg
clc
out
sbb
mov
leave
add
and
in
shl
mov
std
mov
js
neg
add
add
call
imul
jne
sbb
sbb
push
movs
inc
adc
fsubr
test
mov
pop
rcl
or
arpl
lea
retf
cs
xchg
clc
xor
les
xchg
scas
out
push
clc
and
push
jg
pop
adc
jecxz
dec
jl
mov
lock
loop
sub
inc
jmp
test
jmp
stos
dec
xchg
xchg
nop
jmp
push
push
and
outs
xchg
jne
dec
push
daa
push
lods
push
outs
out
fsubr
xor
push
imul
cwde
mov
adc
imul
jle
or
arpl
adc
jge
push
jb
fs
in
sbb
xor
outs
mov
repz
int3
out
adc
mov
xor
call
js
add
je
sbb
jmp
neg
inc
inc
sub
jno
push
inc
pop
lds
ins
fucomi
inc
aam
sbb
aaa
dec
ret
sub
sbb
mov
popf
sbb
or
outs
lahf
outs
outs
inc
mov
in
daa
jne
fwait
sahf
push
xchg
mov
sbb
hlt
or
ficomp
cmp
lods
movs
fisubr
int
dec
hlt
js
xchg
sub
out
push
and
xlat
je
movs
rcr
push
lahf
xchg
xor
xchg
jbe
loope
shl
pop
punpckhbw
fs
stos
xchg
cmp
out
pop
cmps
xor
cmps
push
mov
lea
mov
cmp
mov
dec
push
mov
pusha
xor
add
dec
mov
add
mov
pop
mov
mov
fdiv
fnsave
push
addr16
xchg
pop
mov
clc
inc
inc
es
addr16
dec
push
scas
xor
stc
or
xor
mov
or
jmp
shl
sub
in
in
pop
shl
(bad)
(bad)
fcomip
inc
xor
pop
js
stos
stos
mov
retf
xor
std
xchg
movs
and
out
add
adc
dec
cmps
sub
jae
mov
pop
xchg
add
stos
push
cmp
(bad)
xchg
mov
repz
fsubrp
out
pop
mov
or
sub
inc
cli
rcr
push
lahf
xor
fwait
xor
xchg
loope
outs
stos
int3
jecxz
es
sub
mov
popf
scas
addr16
sub
loope
sbb
mov
in
jo
(bad)
inc
jo
loope
xchg
out
stos
jl
rcl
sub
es
add
xchg
mov
outs
push
test
sub
repz
ds
and
lea
(bad)
pusha
sbb
nop
lfs
inc
outs
bnd
mov
(bad)
push
loop
sub
adc
test
scas
push
jp
scas
ret
mov
cmp
mov
mov
mov
(bad)
push
jmp
xchg
add
jnp
add
(bad)
push
cld
cmps
fild
dec
movs
inc
xor
retf
popa
mov
add
mov
mov
loope
sub
in
adc
mov
fistp
push
ror
out
dec
push
sbb
xor
inc
cs
xchg
sub
loop
xchg
test
popa
cmps
cli
cmp
out
adc
cs
jle
fistp
out
cmp
jbe
in
(bad)
retf
and
sub
(bad)
scas
ret
das
xlat
(bad)
(bad)
push
pop
xor
sub
mov
in
pop
dec
stc
push
jae
xor
fwait
test
lods
add
sub
pusha
repz
jb
idiv
js
mov
push
icebp
mov
add
or
repnz
dec
mov
movs
cmp
fisubr
loop
test
fs
in
mov
dec
loope
fidivr
shl
pusha
or
out
add
das
das
stos
inc
adc
jbe
xchg
mov
aas
call
jnp
in
fild
mov
stos
push
cmp
or
ins
and
mov
mov
sbb
fdivr
(bad)
(bad)
pusha
push
(bad)
mov
mov
mov
or
add
cld
mov
dec
cmp
sbb
cmp
(bad)
mov
push
mov
sub
push
out
xor
std
xlat
jg
adc
jb
pop
ss
shr
rcr
mov
and
or
jl
and
ds
mov
pop
and
jnp
adc
pop
xchg
xchg
xchg
(bad)
ins
sbb
int
add
rcl
je
sti
leave
jne
jne
aas
enter
mov
scas
add
inc
sub
jo
and
out
mov
loopne
inc
mov
out
mov
sub
mov
push
mov
(bad)
scas
enter
pushf
lock
outs
push
push
cmps
mov
jl
ret
leave
dec
idiv
mov
mov
xor
sbb
push
cdq
addr16
loopne
push
xor
pop
xor
stos
xor
loopne
mov
cmps
neg
and
inc
add
xor
inc
pop
and
call
repnz
mov
cmp
shl
(bad)
jecxz
push
jmp
inc
pop
jno
xor
ins
push
mov
into
shr
mov
cdq
into
sub
sub
adc
inc
jno
cmp
daa
jnp
loop
das
and
lods
(bad)
mov
lods
enter
mul
aas
sbb
je
inc
xor
jecxz
mov
jae
ins
cmp
sub
scas
mov
call
mov
arpl
retf
lds
or
mov
pop
push
div
lea
mov
repnz
lea
pushf
sub
xchg
cmp
repz
cmp
pop
ja
push
mov
in
data16
add
test
outs
mov
jbe
inc
cmp
cmp
and
ret
jecxz
or
sub
pop
jge
cwde
mov
hlt
mov
adc
adc
leave
lds
xchg
dec
addr16
ss
scas
sub
aas
movs
push
xor
jmp
stos
dec
int3
dec
xor
fstp
shl
xlat
aaa
or
inc
(bad)
sub
lods
push
mov
sbb
jmp
jle
jecxz
test
jno
mov
out
xchg
fstp
cld
div
xor
mov
rcl
mov
push
add
test
out
pop
jne
int3
dec
push
stos
movs
retf
pop
mov
dec
fidiv
ret
mov
and
mov
fidiv
push
ins
xor
xor
popf
repz
add
jg
dec
icebp
ror
push
stc
ins
lea
mov
cld
lods
ja
dec
daa
stos
aaa
jmp
xchg
push
sbb
cmp
xchg
cdq
in
sar
push
out
cmc
xchg
inc
imul
push
ins
daa
jb
xor
call
sbb
ror
fistp
mov
cli
(bad)
(bad)
jg
sbb
dec
sub
push
arpl
xchg
mov
popa
inc
xchg
pop
nop
mov
rcl
lahf
jmp
popf
xor
xchg
dec
jo
push
inc
call
ins
xor
jbe
aad
push
in
adc
int
jbe
adc
sub
sahf
sahf
enter
push
cmp
adc
xchg
sub
ins
dec
outs
or
or
sbb
inc
movs
push
pusha
push
push
clc
push
mov
ror
add
cld
outs
mov
in
xchg
adc
les
pop
jge
arpl
mov
sub
(bad)
in
add
out
cmp
aas
jg
aam
sbb
mov
int3
xor
xchg
mov
sbb
loop
loop
cmc
leave
stc
jmp
xchg
call
mov
stos
dec
icebp
mov
mov
enter
mul
mov
cmps
(bad)
je
test
push
ja
sub
add
lds
sbb
fadd
movs
cmp
xor
cmp
fcom
pop
shl
cld
in
mov
mov
pop
lea
push
inc
loopne
daa
mov
loop
shl
call
jbe
rol
jmp
cmp
or
push
jae
push
je
stos
fmul
int3
dec
and
inc
sub
add
sub
test
push
inc
test
pop
ss
bound
mov
shl
mov
imul
push
push
sub
mov
cmp
repnz
ret
cmp
jge
adc
and
jns
ret
aaa
jp
and
(bad)
cli
xchg
mov
dec
sbb
sbb
jp
rcl
cdq
test
jne
xlat
jl
iret
ret
mov
enter
mov
es
dec
dec
or
jo
out
popf
popa
popf
jle
xchg
int3
outs
test
cs
jae
cmp
pop
sbb
stc
das
ret
cmp
push
and
hlt
ja
push
icebp
sub
sbb
jns
xor
(bad)
stos
dec
or
xor
xchg
xchg
into
mov
pop
mov
or
push
sub
mov
jmp
dec
movs
fld
fcmovne
pusha
mov
or
cmc
mov
jmp
test
daa
shl
aas
mov
out
mov
or
push
xlat
loop
push
popa
cmp
daa
out
outs
push
int3
jle
fisttp
dec
pop
inc
sub
xor
fmul
xor
stos
sub
cmps
scas
jns
mov
(bad)
push
cmp
popa
inc
cwde
jle
imul
xlat
fwait
out
jnp
stos
add
and
popa
xchg
lods
and
imul
std
xlat
outs
enter
inc
jbe
ret
fnstsw
das
or
dec
outs
lods
dec
adc
(bad)
mov
pushf
mov
hlt
pop
mov
inc
hlt
xchg
mov
dec
cs
outs
mov
sti
test
in
stos
xchg
int3
hlt
push
int
mov
cs
fbstp
imul
addr16
cmps
cmc
sub
cwde
jbe
hlt
jo
xor
pop
mov
pop
in
ds
cmp
cmc
cwde
ror
test
adc
scas
fidivr
into
stc
add
rcl
sbb
dec
js
jecxz
sub
add
out
enter
fldenv
int3
xor
and
enter
mov
jp
je
xor
xor
jge
js
imul
out
int
repnz
push
jmp
ror
pop
jae
lods
pusha
(bad)
jecxz
call
in
or
mov
ds
pop
inc
hlt
mov
jl
addr16
test
add
fist
cmp
sub
ins
int3
test
cmp
xor
sbb
lea
push
adc
stos
fld
and
div
ins
fist
pop
ins
sub
adc
(bad)
aam
out
pop
aaa
scas
sahf
pop
daa
pop
pop
cli
mov
mov
pop
xchg
xor
inc
adc
adc
test
xor
jbe
pop
push
lock
and
inc
xor
out
popf
add
jns
adc
cld
jb
in
jae
inc
(bad)
mov
sub
xlat
stos
stc
nop
(bad)
jns
sub
sbb
cmp
inc
jmp
xchg
retf
mov
xchg
mov
dec
jne
sbb
(bad)
ds
loop
addr16
xchg
add
stos
ret
movs
icebp
data16
inc
mov
and
inc
(bad)
(bad)
sti
cmp
cmp
ss
sbb
add
xlat
sbb
in
jb
bound
add
or
jl
ins
nop
xor
sar
or
movs
leave
push
pop
xchg
ins
lea
div
inc
push
loope
out
shl
mov
jp
dec
outs
in
or
rcl
jg
adc
jb
and
or
scas
retf
fadd
pushf
jecxz
adc
cmp
jge
fld
sbb
push
fcmovbe
jae
add
dec
ss
outs
jecxz
daa
test
shl
sub
call
das
xlat
sbb
adc
dec
pushf
popf
pusha
aam
mov
jmp
cmc
xor
nop
mov
lea
push
out
mov
or
mov
sub
dec
ror
adc
inc
xlat
cmp
iret
aaa
fiadd
lods
js
xor
clc
bound
push
(bad)
mov
mov
out
test
push
jb
mov
sub
or
push
mov
aaa
xchg
push
scas
lods
push
arpl
push
rol
pusha
jae
pop
mov
pop
scas
push
adc
sub
sub
push
mov
inc
rcl
outs
jge
hlt
lds
push
push
repnz
fmul
fistp
fimul
repz
stos
xchg
jge
jb
dec
mov
pushf
pop
repz
outs
xor
cdq
aas
cmp
xchg
(bad)
fnsave
and
adc
add
imul
dec
dec
scas
in
fnstcw
and
xchg
ins
ss
fcom
inc
jnp
out
sub
push
pop
lods
push
mov
dec
mov
xlat
loopne
aas
in
xor
adc
xor
dec
fdivr
cmp
outs
(bad)
outs
cld
sahf
mov
cwde
mov
mov
and
mov
je
mov
in
push
push
mov
fs
bound
push
inc
xchg
cdq
jo
out
div
enter
push
adc
out
push
jmp
or
in
inc
xchg
mov
nop
inc
pushf
and
stc
sub
inc
mov
bound
int3
mov
fs
addr16
pushf
or
ja
jno
xchg
inc
fs
sub
pop
jno
mov
jo
push
fs
in
and
xor
pop
xchg
pushf
sbb
and
outs
inc
and
pushf
sub
in
sti
fs
outs
leave
pop
pop
in
add
(bad)
push
push
pop
test
fisub
sbb
push
push
pop
neg
or
or
scas
pop
outs
or
inc
mov
std
or
sbb
xchg
push
stc
pop
dec
ins
xchg
ret
sbb
xchg
or
adc
mov
imul
jns
daa
ins
and
cmps
pop
imul
test
or
dec
dec
add
fisttp
add
push
sub
sub
sbb
lea
push
jl
add
adc
pop
xlat
and
das
inc
add
sub
pop
in
jne
cdq
rcl
ret
scas
lock
sahf
fsub
mov
xor
mov
cdq
push
arpl
clc
pop
lods
retf
imul
shl
pusha
retf
sub
push
mov
popa
inc
xchg
pop
ret
mov
addr16
ins
in
in
adc
xchg
or
aam
jnp
cmp
shr
mov
xchg
test
ficomp
xor
adc
loope
mov
clc
xchg
fnsave
dec
jnp
cmp
pop
stos
jecxz
sbb
stos
pop
dec
cmp
loope
pop
outs
cmp
push
or
loopne
sti
adc
sbb
test
inc
mov
mov
pop
fidiv
mov
add
mov
jae
dec
sub
add
cmps
add
fdiv
push
pop
arpl
aas
gs
or
adc
test
mov
jne
and
nop
repnz
pop
js
ficom
sub
ss
or
dec
fisubr
adc
xor
nop
popf
pop
iret
mov
sub
mov
icebp
push
ss
sti
sbb
xor
push
xor
cmp
mov
repnz
cld
xchg
(bad)
arpl
pop
dec
or
fisub
test
dec
or
bound
scas
mov
popa
neg
add
xchg
xor
imul
mov
sub
xchg
js
push
clc
jne
(bad)
add
stc
xchg
xor
out
mov
sbb
aam
jmp
or
aad
adc
test
adc
cmps
sub
bound
into
in
sub
dec
xchg
mov
int3
mov
add
add
xchg
or
push
daa
es
cmps
add
jnp
mov
ret
(bad)
or
fimul
add
cmp
dec
mov
sbb
sbb
dec
push
call
aaa
int
xor
dec
mov
jns
cwde
cs
jb
lock
loop
adc
sahf
cli
sbb
add
jle
jmp
adc
cmp
inc
movs
xchg
enter
or
mov
adc
add
xchg
xchg
mov
aad
bound
cmp
dec
pop
adc
inc
outs
out
movs
jae
xor
pop
xchg
(bad)
cli
cmps
or
add
xor
mov
stos
clc
fcomp
repz
mov
setbe
cwde
scas
mov
outs
out
xor
mov
cwde
into
popf
icebp
jecxz
fnstsw
mov
retf
cmps
call
loope
ror
xor
jmp
mov
sub
loop
jmp
and
data16
xor
fs
movs
push
cmp
xchg
in
xchg
das
mov
dec
fdivr
inc
cdq
pop
repnz
and
(bad)
xchg
ror
aad
push
mov
cmp
stos
cmp
mov
and
lods
cmp
call
jmp
dec
outs
nop
xor
inc
jo
mov
pop
cmps
rcl
out
(bad)
out
mov
(bad)
call
and
mov
push
enter
mov
ror
jl
cdq
inc
test
xchg
in
push
repz
in
mov
(bad)
das
aam
jbe
lods
xchg
sbb
sbb
out
not
mov
jbe
test
movs
push
mov
xchg
sahf
sbb
jno
pop
fist
nop
jl
popa
jmp
out
or
mov
add
push
cmp
icebp
add
out
iret
jge
xchg
xchg
cli
sub
lock
jl
stos
out
sub
pop
and
sbb
fist
(bad)
xor
cmps
push
dec
(bad)
push
jb
lds
fidivr
inc
scas
jp
xor
mov
xor
add
xor
sub
pop
out
and
push
cmps
pop
sahf
jle
nop
fld
std
inc
dec
sub
cmc
int
mov
fmul
jae
mov
pusha
mov
in
sub
jle
fcomip
lds
aas
pop
inc
pop
xor
retf
cmp
(bad)
std
pop
fild
aas
pop
in
test
sar
popa
push
stos
inc
push
(bad)
fst
ror
adc
movs
lea
pop
(bad)
xor
ss
pushf
and
clc
adc
lea
pop
xor
adc
pop
ins
ret
ret
shr
pop
mov
cmp
out
test
stos
xchg
in
shr
aam
jb
cli
xchg
adc
jne
mov
or
dec
mov
(bad)
fisub
call
and
out
test
cmc
xor
pop
mov
and
jg
movs
daa
in
out
cmp
aas
jno
push
lods
inc
jnp
(bad)
aad
sbb
call
out
mov
(bad)
or
ja
jo
pop
xchg
stos
adc
xchg
add
gs
dec
push
sar
cmp
test
adc
cmps
dec
mov
dec
jp
ins
js
scas
stos
(bad)
cli
xor
jmp
dec
inc
aad
xchg
pop
lock
mov
pushf
aam
and
pop
dec
daa
and
push
pop
pop
or
xchg
cmp
push
shl
sbb
or
sub
dec
es
or
std
mov
and
out
and
mov
mov
jns
lds
sub
dec
mov
jmp
loope
adc
jge
xchg
hlt
stc
frstor
in
aam
xchg
repnz
call
loope
ja
and
int3
xlat
call
sar
push
or
fcomp
popa
push
mov
adc
jbe
call
movs
dec
sbb
jg
loope
je
mov
mov
mov
add
jbe
add
out
js
and
sub
mov
js
and
push
gs
xor
add
ss
sti
push
(bad)
hlt
gs
or
mov
rcl
mov
xor
inc
mov
fabs
jmp
and
mov
inc
push
push
(bad)
add
scas
ror
ret
fisttp
and
lds
movs
sub
out
and
mov
sar
mov
rol
sbb
scas
sbb
in
iret
in
pop
push
out
mov
fld
push
pop
fcomp
outs
div
(bad)
jl
push
adc
aad
(bad)
jo
adc
imul
rol
jbe
xor
pop
inc
jns
fsubr
xor
call
mov
dec
and
popf
sbb
fld
xchg
jg
sub
hlt
test
inc
(bad)
xchg
jb
mov
ins
xchg
int3
mov
stos
push
mov
lods
adc
shr
mov
jg
or
mov
or
jae
cmp
inc
sbb
out
sti
and
test
push
or
mov
(bad)
jnp
mov
out
sbb
not
aad
ficom
pop
add
ss
cmps
pop
push
popa
xlat
ret
xchg
mov
in
mov
sbb
jae
cmp
hlt
adc
sub
dec
inc
xchg
(bad)
jmp
or
retf
mov
inc
xchg
(bad)
test
mov
rol
hlt
push
ret
push
xor
mov
aaa
sub
fcomp
push
cmp
jbe
shl
ds
push
(bad)
daa
push
movs
aad
jb
cld
in
jmp
mov
pop
ror
push
addr16
retf
cld
sub
push
adc
(bad)
call
push
inc
jne
popa
lods
sub
fisttp
enter
mov
popf
lahf
push
fs
imul
ret
ss
jbe
push
fwait
rcl
push
dec
jo
mov
lock
mov
mov
xchg
lods
jp
sbb
aad
call
jns
xchg
aaa
stos
fnstenv
mov
add
or
pop
call
sub
retf
sti
sbb
dec
cmps
inc
das
call
fbld
xchg
sbb
xchg
loope
sbb
or
ins
nop
mov
repz
push
mov
adc
into
adc
ret
or
outs
sbb
imul
sub
xor
adc
jge
mov
aam
(bad)
and
xchg
or
xor
out
add
dec
imul
jnp
dec
fs
pusha
adc
loope
loope
imul
pop
mov
cmps
mov
and
mov
pushf
pop
jnp
mov
xchg
or
loop
jmp
in
cld
test
pop
aaa
mov
loopne
dec
cmp
lods
rol
ins
jne
inc
rcl
mov
bound
jne
aaa
jle
inc
xor
les
cmps
test
sbb
aad
vpshuflw
ins
ins
and
pop
mov
push
jg
pop
xchg
jo
call
sar
add
xor
inc
xor
add
popa
cmp
mov
aas
scas
mov
sub
add
mov
dec
(bad)
push
push
mov
sub
mov
or
popaw
sahf
jno
or
push
in
adc
sub
or
loop
ret
jle
and
or
adc
popa
inc
mov
cld
fwait
push
jae
or
cmp
ss
sub
stos
mov
jecxz
jmp
cmp
and
scas
retf
pop
imul
push
fcomp
push
sub
inc
out
inc
mov
imul
cmp
jmp
popf
in
mov
add
pop
fscale
aas
daa
movs
fs
cmp
inc
push
iret
dec
pop
pop
xor
div
rol
int
(bad)
dec
push
inc
push
jns
xor
shl
ret
dec
in
or
cmp
mov
xchg
cli
cmp
int3
loop
loop
(bad)
outs
inc
sub
repz
or
push
ins
mov
(bad)
mov
inc
ror
add
sti
fidivr
pop
loop
pusha
push
int3
js
adc
stos
xchg
not
sub
aaa
inc
test
mov
add
stos
je
clc
xchg
icebp
fiadd
mov
cli
cmp
outs
jge
retf
mov
jp
add
mov
addr16
jne
fmul
int
inc
xchg
les
cli
call
(bad)
xlat
dec
loope
pop
mov
shl
jmp
dec
lea
dec
inc
mov
stos
hlt
inc
xchg
push
xchg
popa
cmc
retf
ss
ret
pop
test
xchg
lods
push
(bad)
inc
xor
shr
fidiv
push
pop
sub
sbb
jmp
ins
adc
and
loop
pusha
in
add
push
mov
pop
dec
std
push
push
(bad)
aam
mov
mov
in
je
(bad)
push
mov
sub
cmp
xchg
pusha
fwait
idiv
xchg
jae
daa
dec
xor
inc
or
mov
int
jge
inc
xlat
out
push
push
or
hlt
test
or
sbb
lahf
xchg
cmp
sbb
popa
fst
leave
adc
adc
pop
inc
call
ins
pop
cs
cli
scas
dec
mov
ret
pop
inc
xchg
adc
je
or
cmps
jg
fild
(bad)
xor
aaa
push
and
cmps
and
iret
outs
sbb
outs
cmps
not
cmp
add
sub
pop
lds
aaa
jbe
aas
xchg
lods
add
movs
mov
pand
test
push
jae
not
cmp
movs
fist
cmps
es
xchg
enter
push
lahf
std
sub
cmp
sbb
das
(bad)
mov
in
rol
mov
popf
pop
int3
xor
ins
xchg
mov
pop
and
test
pop
cs
and
icebp
arpl
ja
adc
mov
pop
mov
test
jns
mov
in
pop
iret
ret
sahf
add
push
outs
xchg
call
inc
(bad)
fwait
jae
sti
push
and
push
lods
popa
fadd
hlt
add
movs
pusha
pop
sbb
sbb
scas
mov
push
adc
xor
shr
push
sbb
fisubr
inc
pop
loope
(bad)
fcomp
mov
and
pushf
mov
fld
sub
imul
add
adc
adc
adc
(bad)
or
push
test
jle
(bad)
jge
sar
mov
je
mov
jns
sbb
nop
ins
sar
inc
aad
cmps
bound
push
jbe
ds
fst
fild
mov
push
mov
sbb
sti
cmps
sub
scas
sbb
mov
cmp
stc
stos
lods
fsub
fstp
xchg
iret
aam
inc
imul
addr16
push
lods
test
(bad)
jmp
xor
mov
cmc
loope
fwait
inc
cmp
out
cmp
(bad)
lods
daa
lahf
aas
pop
inc
jl
inc
mov
pop
aad
ret
arpl
(bad)
or
cld
inc
and
xchg
dec
push
push
mov
movs
inc
add
shl
mov
iret
mov
sahf
xor
mov
add
sbb
or
das
stc
out
test
cmps
mov
mov
lods
mov
xor
shl
ror
mov
mov
adc
inc
mov
out
jbe
pop
xlat
inc
or
lods
ss
es
inc
arpl
mov
push
mov
in
add
adc
pop
setne
repz
dec
and
sub
pop
out
or
xor
jns
out
xchg
add
push
xchg
push
inc
(bad)
jge
mov
cmp
fwait
imul
movs
or
mov
mov
jp
cmps
pusha
sub
nop
dec
test
xor
mov
stos
sahf
lahf
pop
outs
jnp
setl
movs
jb
inc
loope
jae
add
shl
aaa
nop
popf
and
pop
push
cmp
sub
inc
stos
into
neg
and
adc
dec
cmps
ret
leave
jmp
mul
out
movs
mov
pusha
mov
mov
inc
push
in
mov
call
in
icebp
int3
out
in
mov
ret
pop
mov
popf
and
push
mov
scas
out
cmp
or
in
pop
ss
or
inc
cmp
outs
or
xor
bound
add
mov
ins
dec
call
adc
test
out
xor
jmp
push
ins
stos
push
lds
mov
mov
xchg
arpl
jecxz
repnz
xor
(bad)
out
movs
xor
enter
(bad)
es
loop
shr
add
fisub
sbb
and
inc
ds
test
mov
mov
inc
stos
dec
jmp
sbb
add
loope
lods
push
mov
je
or
sbb
sbb
pop
xchg
add
jecxz
lock
mov
and
repnz
or
push
mov
xor
xchg
add
jnp
not
dec
and
add
jmp
iret
xchg
sub
adc
cmp
lods
cld
stos
sub
test
fiadd
daa
push
outs
push
stos
mov
xchg
dec
or
adc
and
cmp
test
dec
xor
mov
cwde
add
xchg
mov
sub
jle
inc
sbb
fsubr
mov
mov
call
dec
shl
in
mov
bound
sbb
fcom
pop
mov
test
sbb
mov
test
add
xor
push
jbe
jb
sbb
lahf
les
sbb
cmp
mov
test
sub
push
test
push
enter
push
pop
push
inc
jmp
push
cmp
int
retf
imul
adc
scas
jge
test
xor
xchg
or
lock
movs
push
jo
and
ja
jbe
and
mov
fst
jmp
lock
retf
es
movs
ret
and
shl
(bad)
dec
call
pop
dec
je
cmps
repz
(bad)
out
inc
cmp
bound
sbb
cmp
mov
mov
inc
les
test
push
jle
push
(bad)
frndint
push
jge
mov
mov
add
mov
xchg
sbb
sbb
int3
mul
les
repz
cmc
in
cmp
dec
pop
rol
mov
dec
add
lods
call
dec
add
lods
repz
push
fsubr
mov
sbb
pop
mov
(bad)
in
mov
out
in
mov
cmp
pop
push
mov
mov
or
push
(bad)
mov
(bad)
mov
aas
std
imul
jg
xor
sar
cmp
pop
inc
adc
in
jb
xchg
jb
imul
adc
ins
cmp
mov
(bad)
dec
jns
jno
in
push
les
div
fsub
add
repz
rcl
out
rep
push
jnp
jge
and
inc
bt
test
inc
addr16
adc
pop
jle
(bad)
xlat
cli
cs
shl
aam
pop
cmp
mov
test
pop
xchg
cmp
jl
test
(bad)
lock
and
idiv
fisub
outs
push
pop
cmp
or
pop
pop
dec
jmp
and
aaa
mov
jne
cli
add
aaa
les
cdq
push
push
jbe
test
adc
pop
push
jl
test
cdq
cmp
xchg
dec
cli
or
pusha
and
fs
sbb
jne
mov
movs
jnp
push
lahf
sub
out
and
mov
pop
pop
cmp
icebp
jecxz
data16
xlat
add
sbb
(bad)
xchg
mov
jno
(bad)
ds
or
into
mov
mov
ins
sbb
add
jecxz
sbb
gs
lahf
xchg
mov
jle
loop
arpl
out
iret
repz
in
sti
out
jle
pop
inc
in
jg
test
xor
push
rcl
mov
popa
ds
jl
hlt
add
cmps
mov
in
xchg
sub
mov
mov
jmp
sbb
hlt
cmps
lods
push
ins
cld
jb
fiadd
in
out
and
loop
(bad)
and
jle
ins
sahf
in
mov
ins
clc
(bad)
jns
jnp
cmps
sbb
adc
mov
lock
pop
mov
movs
inc
lods
push
push
mov
in
(bad)
jecxz
aas
(bad)
(bad)
js
push
jle
push
aaa
fmul
pop
fs
push
test
or
push
aad
cmps
pop
jle
dec
dec
sbb
push
fs
pop
sub
cdq
and
push
popa
iret
arpl
sub
loop
xchg
ret
(bad)
push
into
push
test
xor
adc
nop
cmp
(bad)
dec
icebp
in
aaa
test
mov
sar
mov
jb
mov
mov
pop
pop
and
(bad)
or
sbb
inc
lds
adc
in
fwait
jp
jge
cmp
xor
add
addr16
jl
mov
sbb
std
retf
je
add
cld
jo
dec
js
in
pop
mov
jl
(bad)
sbb
sbb
into
pop
mov
mov
cmp
inc
jnp
jp
cmp
outs
hlt
pop
es
dec
cmp
xlat
add
mov
push
rcl
retf
aaa
int3
stc
mul
mov
(bad)
shl
popa
push
xor
cmps
sub
test
mov
stos
jmp
popa
sbb
iret
loope
xor
push
cmp
inc
fwait
xor
imul
mov
xchg
inc
mov
lds
dec
pop
sub
test
lea
dec
xchg
adc
sub
lea
mov
loop
retf
aaa
add
sub
xor
iret
in
test
cwde
add
cmp
cld
daa
pushf
xor
out
shl
dec
mov
inc
jmp
inc
repnz
mov
add
jbe
xchg
xor
jmp
xor
xor
stc
enter
mov
(bad)
mov
xchg
mov
sub
cs
(bad)
imul
sar
jbe
jne
xlat
jae
or
sahf
adc
pusha
push
add
out
sbb
push
int3
inc
outs
dec
gs
mov
adc
retf
cli
mov
xor
(bad)
cmp
popf
mov
pop
push
sub
inc
push
pop
jns
mov
add
add
out
pop
adc
mov
mov
mov
pop
jns
jl
pop
push
fdivr
mul
std
mov
mov
faddp
nop
adc
leave
arpl
test
lea
xor
inc
mov
data16
loop
or
or
sub
outs
jo
and
dec
mov
ret
icebp
pop
imul
sar
scas
sub
and
lods
lahf
add
ror
lds
pop
add
mov
aaa
sbb
inc
out
ins
push
stos
and
push
imul
jge
das
fstp
fdivr
in
arpl
mov
call
iret
add
dec
enter
push
or
jno
popa
push
jbe
jmp
ss
dec
movlps
stos
sbb
xchg
push
sub
daa
pop
daa
xchg
rol
in
push
pop
sub
fwait
add
jbe
sub
cmp
aam
out
in
shl
gs
push
mov
inc
dec
pop
inc
icebp
xchg
and
pushf
xchg
push
sbb
adc
rcr
jle
(bad)
outs
loop
dec
pop
mov
jle
pop
adc
test
test
push
xchg
pop
setns
enter
jae
add
dec
add
xchg
je
sbb
gs
push
pop
or
xchg
mov
(bad)
enter
push
xchg
fnstsw
jmp
ins
dec
neg
(bad)
ror
clc
ins
xor
inc
jnp
es
rcl
xchg
mov
and
sub
push
mov
arpl
push
push
fidiv
(bad)
push
mov
movs
out
repnz
mov
xchg
pusha
mov
movs
loopne
into
cmp
jbe
mov
scas
dec
(bad)
adc
mov
(bad)
(bad)
cld
(bad)
lock
ror
loopne
rcl
or
push
add
pop
lea
pop
repnz
adc
rcr
(bad)
xor
leave
sub
xor
mov
out
sti
jmp
mov
clc
xchg
fwait
enter
mov
push
(bad)
sbb
dec
cmp
adc
add
movs
inc
ficom
cmps
dec
ret
or
dec
pop
loop
je
xchg
mov
loope
dec
mov
pushf
mov
test
out
ret
or
addr16
hlt
dec
movs
xchg
outs
enter
movs
sbb
pop
jge
mov
loopne
repz
mov
in
and
xor
mov
daa
jno
jmp
dec
stos
mov
ret
lods
pop
(bad)
pusha
add
jge
push
retf
mov
mov
aaa
bound
dec
xor
push
pop
or
jecxz
xchg
dec
daa
cmp
cmp
xor
pop
sub
pop
jp
jmp
inc
jg
clc
repz
ja
cld
test
dec
xor
hlt
mov
(bad)
out
fcomp
jl
add
into
mov
cmp
jb
xor
pop
push
js
jo
jo
push
lahf
cmp
pop
adc
sub
jb
fst
push
(bad)
(bad)
aam
scas
pushf
cmp
mov
loop
mov
xor
cmps
or
addr16
sub
mov
sub
mov
add
ret
fwait
sbb
iret
sbb
fld
adc
jmp
xchg
popa
jae
jo
(bad)
xchg
cmps
aam
mov
mov
mov
pop
cmp
xor
(bad)
fisttp
push
mov
loopne
sti
(bad)
in
xor
sbb
xlat
dec
nop
mov
ror
ret
cmp
dec
cdq
adc
mov
add
xor
repnz
repz
cdq
outs
xlat
pop
test
xor
fwait
pop
sub
inc
cmp
stos
or
add
sbb
shl
add
add
adc
imul
mov
icebp
sub
or
std
(bad)
hlt
cdq
(bad)
mov
push
xor
xor
jge
jl
mov
movs
and
loope
mov
imul
movs
cmp
mov
aas
push
jo
push
shr
test
inc
mov
inc
xchg
and
adc
pop
dec
repnz
push
ret
push
mov
or
push
xor
xor
fwait
mov
jle
and
pop
mov
ds
mov
mov
cdq
fisttp
jmp
shr
fwait
mov
mov
ds
cmp
and
xor
test
and
in
or
mov
mov
pop
sbb
in
ss
movs
(bad)
push
outs
mov
push
jbe
jo
and
cld
inc
xchg
es
and
pop
icebp
int3
mov
test
push
iret
sub
xor
sar
les
mov
fnsave
popf
xor
inc
dec
adc
add
(bad)
adc
cmp
mov
leave
pop
scas
sbb
iret
inc
xor
cli
inc
into
jo
mov
adc
and
mov
clc
mov
pushf
mov
scas
pop
mov
push
ins
pusha
inc
daa
mov
das
sbb
fsubr
mov
mov
cmp
jns
adc
adc
xor
push
push
(bad)
dec
xchg
rcl
mov
jbe
adc
sbb
(bad)
xor
pop
mov
push
jmp
in
sub
xchg
mov
loopne
inc
cmp
clc
shl
jne
mov
or
sub
sub
add
fbld
xor
add
stc
or
movs
mov
mov
pop
mov
mov
add
(bad)
stos
or
cld
in
pop
fist
sti
dec
inc
inc
and
retf
(bad)
jg
ror
mov
push
inc
cld
imul
jae
mov
lahf
shl
pop
push
stos
and
repnz
mov
and
outs
lods
mov
imul
xchg
cmp
mov
cmps
outs
pusha
cmp
push
adc
cmps
pop
xor
add
mov
(bad)
popw
jle
mov
sti
jmp
mov
fwait
outs
nop
push
xchg
sub
mov
in
and
adc
jmp
js
dec
jl
ds
popa
jle
inc
mov
fild
push
cmp
out
into
(bad)
out
sbb
dec
(bad)
push
mov
(bad)
clc
sbb
cmps
dec
fnstenv
fst
jmp
fld
jle
mov
lods
inc
inc
leave
ins
hlt
sbb
bound
(bad)
fild
sti
adc
pop
or
int3
or
pop
mov
dec
inc
push
ins
or
pushf
aam
jne
ror
rcr
lods
outs
mov
dec
or
pop
dec
(bad)
jno
out
cwde
imul
out
div
push
and
xor
sbb
rcl
xchg
loopne
stos
inc
mov
xchg
into
xchg
in
or
adc
fistp
mov
cwde
addr16
fild
adc
jne
push
jmp
cmps
dec
dec
adc
test
and
push
call
addr16
call
inc
cli
ss
xchg
cmp
add
(bad)
ror
lods
scas
xchg
xor
aam
xchg
mov
fcos
mov
xchg
das
sbb
add
jmp
in
pop
xchg
sbb
dec
movs
sub
mov
ja
xchg
mov
retf
fs
push
repnz
mov
xor
inc
jg
mov
data16
add
adc
add
inc
xchg
mov
mov
std
and
xchg
fisubr
call
pop
sar
push
jmp
mov
xor
outs
movs
scas
xchg
je
mov
push
loopne
or
mov
push
xchg
inc
dec
aas
jl
inc
sub
sub
xor
ins
(bad)
jg
sysexit
or
ins
pop
ret
into
mov
mov
mov
cmp
fdivr
and
jg
fild
pop
aas
inc
sbb
retf
sub
jge
out
retf
stos
sbb
ret
push
mov
outs
adc
div
add
iret
hlt
and
xchg
in
cmp
jge
fistp
icebp
shr
out
pusha
test
or
push
idiv
mov
or
jb
or
inc
cmps
or
xchg
sbb
aaa
ds
fisttp
jbe
cmp
addr16
pop
jns
jb
dec
fisttp
imul
mov
sub
bound
mov
add
pop
out
mov
add
mov
lea
xor
pop
out
fild
bound
std
sub
scas
mov
shl
push
int
mov
xchg
sar
cli
ds
call
daa
jns
xchg
repnz
sbb
sbb
ffree
sub
repz
mov
fcomp
shl
out
inc
inc
pusha
jne
xor
jb
pop
shr
push
push
jl
lods
pop
idiv
pop
pop
mov
pop
shl
xchg
repz
ds
rcr
inc
retf
adc
push
addr16
test
ja
dec
pop
jo
jp
and
pop
or
inc
nop
push
bound
or
push
outs
aam
adc
repnz
jl
cwde
cmps
pop
das
mov
inc
ret
fimul
mov
cwde
jno
es
push
push
dec
lods
mov
ds
dec
stc
popf
addr16
ds
xchg
inc
adc
cs
pop
sub
sar
mov
push
jp
xchg
xor
mov
push
cmp
(bad)
mov
pop
xchg
jno
nop
mov
mov
nop
test
in
aaa
icebp
add
call
sub
or
and
pop
test
mov
xor
mov
or
aam
data16
sub
mov
pop
jmp
addr16
sub
(bad)
cdq
and
pop
push
xor
mov
rol
fstp
fsubr
sub
pop
xchg
int3
cmp
xchg
or
out
outs
fisubr
pop
imul
retf
cwde
enter
into
sub
cmp
(bad)
aaa
movs
xor
mov
xlat
lds
xchg
xor
mov
push
inc
div
ds
out
je
add
jg
lods
jg
fchs
loope
and
mov
clc
rcl
jbe
xor
std
hlt
movs
inc
mov
mov
inc
and
test
sub
dec
loop
aam
ret
ja
inc
mov
pop
sub
inc
and
pushf
push
xchg
push
jl
mov
push
fdivr
cld
sbb
lods
repz
push
aas
xchg
icebp
xor
pop
fwait
into
add
or
sbb
dec
jmp
cli
jmp
iret
int3
jo
cmps
(bad)
sub
cmp
mov
jb
mov
mov
pop
sub
das
adc
mov
les
lea
add
es
cdq
popa
adc
ds
push
or
mov
jmp
mov
jno
hlt
in
add
icebp
fist
cmp
mov
fucomi
push
lahf
out
aas
push
mov
xchg
popa
fstp
pop
outs
xor
adc
xadd
push
inc
out
cmc
push
es
mov
rcr
or
pop
mov
and
and
xor
pop
inc
icebp
(bad)
sbb
test
dec
jle
iret
mov
and
push
jmp
dec
test
jb
test
(bad)
jae
(bad)
mov
and
loop
es
into
movs
mov
adc
push
mov
jne
fld
out
mov
fldcw
jns
mov
sbb
sbb
push
adc
in
pop
loope
xchg
inc
shr
pop
in
imul
pop
imul
mov
pop
mov
pusha
pop
fmul
and
(bad)
cmp
cmp
aaa
mov
inc
adc
mov
popa
rcl
loope
fwait
or
push
push
pop
loop
test
jmp
mov
dec
xor
mov
inc
inc
call
mov
mov
push
mov
das
imul
out
mov
(bad)
pop
popa
mov
or
mov
mov
cmpps
sar
std
js
push
mov
(bad)
daa
lea
mov
pop
jmp
jmp
mov
lock
xchg
ss
adc
xlat
mov
fdivr
fsub
cmp
out
sbb
xchg
sbb
dec
out
inc
cli
cmp
into
sbb
je
(bad)
mov
pop
jb
les
mov
in
xlat
xchg
movs
repz
pop
in
dec
je
inc
adc
dec
mov
cmp
adc
adc
xchg
mov
or
lahf
fs
bound
rcr
mov
ror
(bad)
repnz
cs
pop
adc
aad
inc
sti
xchg
mov
shl
add
out
dec
out
ins
push
std
in
pop
dec
icebp
fdivp
cmp
scas
iret
movs
xor
or
or
fsub
sbb
jmp
or
jl
js
mov
fwait
mov
loopne
pop
push
cmps
imul
in
xor
mov
dec
xchg
nop
data16
repnz
ret
adc
test
daa
repz
or
pop
inc
sub
cs
pop
hlt
ficomp
xchg
out
mov
enter
vsubsd
and
stos
out
push
mov
sub
xor
enter
cld
and
int3
lods
arpl
fwait
ds
cmp
xor
outs
push
xor
xchg
jae
cmp
mov
push
or
div
enter
retf
sbb
out
push
loopne
jno
aaa
xor
cdq
ins
ret
aam
sub
lods
dec
cwde
mov
repnz
push
mov
mov
or
mov
mov
or
add
pop
xor
imul
mov
leave
gs
cs
jo
cmps
sub
aaa
inc
sbb
addr16
mov
gs
scas
pop
dec
add
mov
mov
push
das
push
mov
sbb
mov
pop
sub
cmp
cmp
push
cli
jae
add
scas
xor
mov
cmps
icebp
mov
ret
add
loopne
and
dec
pop
sbb
adc
sbb
out
jle
loop
inc
ret
lea
pop
mov
dec
or
jns
xchg
mov
and
xor
sbb
cdq
scas
adc
jmp
sbb
daa
out
mov
mov
sbb
fs
fdivrp
add
aas
(bad)
push
cmp
mov
xchg
xchg
es
push
sub
pop
pop
test
into
adc
mov
add
pop
retf
adc
mov
fild
movs
lock
in
jmp
xor
push
adc
pop
push
sub
adc
add
xor
mov
sbb
xor
sahf
int
outs
mov
mov
mov
dec
mov
sbb
dec
jnp
jmp
pop
xchg
mov
mov
push
mov
hlt
inc
xchg
mov
jmp
fiadd
enter
imul
push
ja
add
(bad)
cli
xchg
add
pop
aad
add
sub
psubq
jno
inc
mov
ror
loop
das
xor
sahf
idiv
mov
rcl
aad
cwde
cmp
or
dec
cmp
repz
cwde
mov
and
lods
mov
sbb
jmp
int
mov
aam
stos
or
not
jns
sub
dec
les
jl
fist
push
icebp
stc
fcomp
(bad)
(bad)
sti
popf
test
mov
iret
out
test
mov
jnp
push
mov
dec
xor
cwde
aas
ja
mov
outs
xchg
repnz
in
lock
es
fmulp
imul
and
les
leave
ins
push
xor
add
or
test
popf
adc
pop
fisttp
mov
xchg
data16
pop
xchg
mov
sti
je
adc
adc
cld
pop
mov
mov
xor
stos
es
mov
stos
cdq
cwde
aad
loope
outs
xor
push
dec
jp
iret
sahf
jae
or
in
jbe
and
mov
dec
pushf
push
repz
lds
jmp
xchg
rcl
xchg
xchg
pop
dec
js
dec
mov
test
mov
pop
lahf
jge
mov
mov
popf
mov
inc
pop
ins
add
sbb
and
push
lahf
or
outs
push
or
test
mov
sub
js
jae
cwde
sti
sti
cli
mov
add
cdq
test
lock
jge
in
je
jge
push
sbb
fbld
inc
sbb
jbe
mov
xor
mov
aaa
(bad)
mov
mov
or
aam
push
sbb
cmps
int3
scas
mov
ror
sub
cli
xchg
pop
loopne
push
xchg
(bad)
mov
pop
add
push
push
cmp
mov
popa
mov
cli
mov
ret
add
retf
inc
pop
fs
add
cmps
pop
push
cmp
(bad)
jnp
popa
pop
sub
cmps
shl
xor
pop
push
inc
adc
xchg
hlt
adc
dec
cdq
mov
stc
call
in
mov
push
js
cmc
push
std
pop
jmp
aas
mov
je
je
cs
scas
aaa
mov
fadd
stc
in
movs
mov
xchg
mov
sub
mov
les
sub
scas
mov
push
inc
jns
mov
pusha
mov
sbb
push
mov
leave
addr16
jae
rcl
or
(bad)
retf
cld
arpl
jle
leave
mov
pop
lods
push
out
push
xor
mov
les
or
test
xor
or
and
inc
inc
mov
dec
inc
arpl
ficom
inc
nop
jb
ror
jmp
cmp
imul
(bad)
mov
pop
dec
dec
jne
cs
je
inc
in
cmp
sbb
sahf
nop
movs
js
test
cmp
js
or
jl
movs
and
mov
mov
mov
xchg
fcom
push
xchg
in
push
(bad)
iret
inc
loopne
cmp
or
pop
cmp
adc
mov
xchg
sbb
jecxz
shl
out
cwde
fistp
push
xor
test
fstp
dec
push
or
iret
addr16
add
pop
sub
fwait
xchg
mov
cmp
pop
retf
aad
dec
(bad)
fisubr
push
mov
add
xchg
fmul
push
xor
jle
loopne
scas
es
adc
jnp
adc
outs
ds
inc
outs
fs
sar
in
sti
out
dec
dec
call
pop
bound
adc
enter
cmps
loopne
sub
xchg
push
add
adc
fwait
jnp
mov
std
movs
repnz
sbb
jl
les
jg
adc
fidivr
xchg
retf
push
loope
in
(bad)
adc
ja
mov
iret
retf
sbb
lock
cmp
mov
push
rcl
jnp
(bad)
lahf
mov
rcl
sub
(bad)
rcr
cli
frstor
in
fbstp
sbb
cmp
icebp
cmp
retf
sti
pop
cdq
call
fdiv
jmp
mov
xchg
jge
add
mov
in
jno
inc
xchg
pop
int
ja
mov
and
adc
(bad)
inc
(bad)
std
sbb
xchg
mov
sti
pop
and
clc
icebp
lods
or
lds
pop
or
setb
inc
inc
fwait
inc
sahf
je
sub
pop
mov
movs
mov
adc
leave
xchg
(bad)
call
sbb
xor
shl
xchg
repnz
add
aad
repnz
cs
rcl
sbb
xchg
adc
ret
jbe
out
inc
add
cmc
leave
sbb
nop
leave
cmp
mov
or
pop
pop
push
not
add
addr16
add
xor
icebp
sti
pop
std
pop
sub
or
sbb
(bad)
fld
fwait
mov
cld
outs
cmps
repnz
sbb
mov
ret
stos
jnp
inc
xor
popa
cld
push
je
xor
idiv
sub
ds
stos
rcr
add
stos
nop
enter
adc
clc
fidiv
xchg
scas
lds
in
repz
addr16
pop
ja
outs
pop
jl
movs
or
call
adc
dec
cmc
push
or
cmp
stos
sub
dec
xchg
sbb
cmp
icebp
fyl2x
sbb
xor
sahf
mov
dec
adc
or
pop
movs
add
movs
jle
vunpcklps
and
cwde
mov
add
cld
(bad)
(bad)
xor
mov
xor
add
fs
pop
mov
xchg
or
retf
mov
outs
or
fldcw
popf
je
jno
icebp
bound
jle
retf
shl
fdiv
lea
mov
and
popf
mov
test
jle
ret
ja
sbb
jnp
fild
xchg
fs
mov
mov
sub
mov
loop
movs
sbb
inc
(bad)
mov
pop
ret
into
xchg
pop
and
mov
lahf
sbb
lahf
xor
dec
adc
pop
call
stos
and
dec
adc
jmp
(bad)
push
ret
mov
sub
out
add
fistp
scas
xchg
shl
jns
ret
mov
in
push
xor
ror
imul
lods
adc
pop
sbb
cmc
out
pop
sbb
shl
inc
inc
xchg
mov
adc
xchg
fld
enter
sbb
sbb
push
mov
inc
cmp
pop
mov
in
fnsave
fsubp
mov
dec
mov
sub
mov
inc
add
stos
sub
sbb
sub
popa
call
add
fsubr
(bad)
pop
pop
inc
mov
iret
pop
mov
call
inc
push
retf
and
(bad)
(bad)
fild
in
adc
retf
and
clc
jecxz
pusha
mov
mov
xchg
mov
ds
push
cli
ins
int
std
pop
outs
mov
or
adc
xchg
xlat
sbb
add
pop
out
inc
bound
jns
ds
addr16
test
aas
test
dec
mov
cmp
clc
ins
push
dec
jo
dec
cmps
cdq
fsub
out
mov
jge
jnp
fmul
sbb
gs
stc
loope
dec
les
ja
inc
(bad)
in
les
mov
mov
ror
pop
ins
cld
mov
fidivr
jmp
cli
scas
xchg
repnz
movs
add
movs
test
imul
cdq
(bad)
push
pop
pop
ja
sbb
hlt
shl
call
les
fwait
add
mov
push
xlat
fnstenv
(bad)
into
add
(bad)
mov
shr
or
ja
cmps
xchg
cwde
xor
xor
test
out
xchg
inc
mov
mov
pop
das
xchg
out
dec
sbb
es
xchg
mov
jno
imul
pop
xlat
pop
xlat
push
adc
or
adc
inc
sar
fucomi
gs
inc
cli
bound
or
out
dec
xor
scas
test
cwde
inc
sub
inc
ja
fst
xor
push
daa
mov
mov
sbb
cmc
or
xor
and
mov
in
xor
cmp
movs
xchg
mov
enter
inc
stos
jo
inc
retf
ds
test
add
pushf
mov
dec
popf
push
ret
inc
xchg
mov
scas
sub
das
pop
adc
pusha
mov
and
push
and
test
or
add
pop
retf
dec
xchg
dec
jae
xchg
stc
jg
sbb
jno
mov
(bad)
xchg
imul
add
adc
ror
pop
jecxz
inc
ror
out
cmp
repz
pop
jp
nop
repnz
mov
hlt
fwait
jle
les
dec
mov
mov
mov
push
pop
mov
and
std
cmp
xchg
in
imul
std
out
adc
inc
dec
mov
loope
out
std
jmp
icebp
scas
push
push
cmp
dec
mov
div
out
pop
lds
retf
pop
jmp
(bad)
jecxz
mov
nop
ja
ins
add
xchg
xchg
jno
outs
loop
push
sub
mov
in
les
fdiv
std
out
cs
cmc
dec
and
rol
ins
int3
mov
cdq
mov
add
mov
stos
popa
mov
(bad)
idiv
stos
aam
into
pop
inc
aaa
mov
jmp
pop
rcl
retf
push
movs
adc
mov
sub
and
(bad)
or
pop
daa
cwde
xlat
outs
outs
pop
sbb
mov
xor
dec
and
(bad)
shl
adc
dec
cmc
lds
push
mov
popa
dec
mov
cs
sbb
mov
inc
imul
mov
sbb
mov
jne
ds
xor
mov
xor
addr16
in
push
repz
and
js
sub
stos
sbb
and
jp
xchg
xor
or
sbb
pop
nop
sub
sahf
jne
inc
push
leave
xchg
xchg
lea
popa
jbe
jge
add
aas
sbb
int
jmp
inc
jl
les
adc
ror
add
mov
jle
popa
imul
push
mov
mov
ds
lahf
cmp
repnz
hlt
in
test
sbb
outs
mov
idiv
push
jp
pop
(bad)
jbe
or
retf
loopne
or
out
clc
jmp
arpl
(bad)
mov
hlt
shl
mov
pop
sub
jle
mov
xor
mov
cmp
mov
shl
cmp
retf
mul
jo
jns
shl
mov
repnz
stos
pop
ins
mov
cmp
inc
into
add
mov
stc
add
and
pop
cmps
dec
retf
cmp
push
inc
push
in
std
pusha
or
and
or
dec
mov
lock
or
or
movs
(bad)
ja
adc
sub
dec
mov
and
mov
mov
aas
ficomp
sbb
mov
rcl
jae
and
pop
push
mov
mov
mov
sub
sar
mov
jns
mov
sbb
push
cmps
mov
push
pushf
add
rcl
push
leave
(bad)
sub
fwait
test
dec
stos
inc
mov
shr
adc
hlt
xchg
xchg
sahf
mov
cmc
xor
push
test
stos
xor
or
test
and
mul
and
push
daa
or
push
inc
push
lock
test
sar
stc
pusha
in
jne
es
sub
pop
int3
dec
jg
jo
and
sub
xor
retf
leave
mov
xchg
call
sti
ja
stos
sub
je
stc
jns
std
lea
xchg
dec
fwait
cmp
xor
mov
xchg
ret
add
pusha
add
xor
and
enter
push
rcr
pushf
enter
out
pusha
pop
test
ror
aam
sub
sti
test
pop
shr
adc
mov
xchg
out
mov
jne
ins
push
xor
out
ficom
loope
das
sti
adc
aad
mov
jns
push
fs
lock
lods
xchg
das
out
inc
cwde
mov
scas
cmps
outs
cmp
out
fisubr
add
jne
jae
mov
stos
aad
js
mov
cmps
sub
xor
es
mov
(bad)
and
dec
loope
jp
iret
icebp
mov
xchg
ficom
sub
loop
mov
loop
inc
add
push
clc
(bad)
inc
dec
sti
xchg
adc
call
mov
cmp
add
dec
sbb
lods
cmp
stc
jg
mov
mov
mov
imul
push
ins
dec
loopne
jae
or
push
aaa
sub
inc
fcmove
push
mov
lods
xor
sbb
ficomp
mov
mov
aad
aam
xlat
adc
mov
fild
jb
into
lea
outs
daa
pop
loop
mov
fs
or
loop
adc
loopne
popa
add
cmp
push
arpl
shl
out
xor
xchg
test
mov
cdq
or
pop
popa
in
scas
mul
cmp
inc
test
sbb
or
idiv
stos
jbe
and
outs
jmp
sub
xchg
or
xchg
(bad)
and
out
retf
sbb
jbe
fsubr
and
adc
fucomi
out
rcr
xchg
daa
jg
mov
test
adc
les
xlat
in
sahf
hlt
ret
or
ja
pop
jae
cwde
frstpm(287
pop
cmp
lock
fs
adc
dec
jno
mov
dec
js
and
mov
icebp
stos
(bad)
fwait
push
ficom
orps
out
dec
rol
das
add
pop
adc
movlps
cmp
push
lock
fwait
test
or
pop
jo
out
and
xchg
inc
mov
push
xchg
fbstp
mov
ret
(bad)
mov
jge
and
cmp
mov
rol
out
sti
icebp
inc
arpl
dec
add
cmc
xlat
aaa
in
das
mov
and
xlat
push
or
cdq
movs
jecxz
fisubr
daa
or
jle
xchg
and
(bad)
in
fwait
mov
dec
sub
dec
mov
and
inc
out
push
sub
inc
adc
cmp
mov
and
cmps
cmp
xlat
lds
push
xchg
xchg
sahf
mov
push
ret
mov
adc
out
mov
add
pop
mov
sbb
mov
push
sar
repz
int3
and
add
xchg
mov
dec
pop
mov
push
arpl
aad
frstor
(bad)
or
fisubr
pop
mov
aaa
mov
pop
mov
retf
imul
fcom
lds
add
xlat
iret
adc
mov
push
pushf
sbb
jmp
(bad)
sub
mov
xchg
pop
pop
fmul
or
stos
cmp
cmp
push
jg
psrad
arpl
movs
and
les
aad
xor
push
jle
inc
(bad)
in
out
lods
and
cmp
cmp
inc
sar
pop
movs
lahf
dec
dec
es
mov
pop
push
lods
(bad)
mov
ret
pop
test
xor
push
pop
push
stos
into
xchg
jg
jle
aaa
cwde
lock
push
adc
jb
pop
test
mov
mov
lock
js
add
aam
jg
or
mov
out
mov
mul
int3
mov
push
push
push
cmp
fnstcw
jo
leave
lods
jmp
inc
pop
jmp
ror
or
add
pop
and
out
out
fbld
call
and
mov
in
pop
shl
fsubr
clc
out
push
cmps
pop
inc
bound
mov
pop
dec
ror
push
jns
dec
xchg
sbb
fwait
scas
cdq
jo
arpl
iret
bnd
pop
lea
dec
inc
cmp
add
ins
out
jns
imul
ds
js
add
jb
mov
gs
lds
lahf
sbb
adc
test
mov
push
jl
mov
xchg
pop
xchg
nop
cmps
jae
out
push
mov
ins
cmp
dec
daa
ss
gs
cmp
xchg
les
popf
add
nop
movs
mov
mov
scas
add
push
stc
shr
sub
stc
jmp
popf
mov
xor
imul
pop
inc
data16
xchg
mov
das
popa
repnz
repz
cmp
stc
in
out
or
(bad)
jmp
fiadd
lods
ror
out
mov
push
sbb
dec
xlat
mov
mov
push
in
mov
mov
nop
lods
div
mov
xor
push
xlat
in
(bad)
rol
imul
pop
pop
mov
cmp
cmp
or
inc
mul
popa
call
pop
lock
shr
and
in
sbb
pop
in
rol
pop
cwde
add
mov
movs
popa
mov
test
xchg
xchg
mov
or
dec
in
mov
cwde
xchg
push
std
ins
and
loope
stc
cmps
jl
sub
push
mov
and
stc
dec
xchg
pop
mov
or
jg
in
jbe
dec
out
add
clc
dec
pop
call
pop
nop
mov
fwait
inc
xchg
bound
pushf
popa
push
scas
xchg
mov
jae
mov
mov
jb
imul
mov
jl
fld
fidiv
lods
imul
and
shr
mov
mov
pop
ret
sub
enter
push
out
lea
into
call
xor
sbb
mov
jmp
pop
js
jmp
or
je
xchg
(bad)
cdq
push
mov
xor
repnz
addr16
or
je
mov
adc
scas
sbb
jmp
hlt
mov
xor
add
xor
inc
fstp
dec
inc
nop
lods
ins
out
jns
loope
(bad)
jmp
lds
sbb
inc
cmp
push
enter
cli
push
xchg
xchg
sub
rcl
pop
mov
icebp
(bad)
ds
and
lods
jmp
cmp
sbb
into
adc
retf
outs
xchg
sar
es
mov
gs
repz
idiv
not
cmp
and
inc
movs
push
in
xor
popa
dec
jl
and
lea
ss
std
mov
(bad)
adc
push
mov
xchg
xchg
xor
jbe
jne
inc
pop
ficomp
aad
leave
test
aad
fstp
pop
mov
push
dec
jns
int
imul
xor
xchg
ins
jecxz
xor
jno
xor
(bad)
shr
fwait
jo
pop
sbb
xchg
mov
or
and
or
aaa
(bad)
jbe
repnz
lahf
lods
lods
scas
and
jb
xchg
sub
xor
jo
mov
int
xor
or
jg
mov
jecxz
(bad)
mov
mov
cmp
adc
leave
pushf
fiadd
mov
pop
pop
xchg
lahf
pusha
push
push
sbb
rcr
xchg
lock
or
jnp
mov
jge
jecxz
cmp
jmp
sub
inc
fmul
cmp
jo
inc
push
outs
sar
jp
mov
jg
sbb
jecxz
sub
pusha
xchg
sub
in
test
bound
out
test
enter
call
mov
push
iret
jp
cwde
add
aam
inc
in
lods
jns
mov
or
push
jo
jmp
aad
mov
in
retf
add
cwde
scas
imul
sub
inc
add
es
rcr
ja
mov
cmp
repnz
dec
arpl
sar
lea
enter
imul
out
bound
pop
or
sbb
fisub
mov
les
and
out
jo
fcmovnu
xchg
and
les
cmp
inc
jmp
mov
cdq
das
and
pop
mov
es
std
sbb
sbb
xor
imul
into
aam
cmc
inc
je
mov
jp
sar
repz
sbb
jecxz
pop
popf
daa
test
je
cwde
nop
sbb
in
movs
mov
mov
aam
inc
jb
pusha
shl
jg
int
sub
mov
(bad)
cdq
vunpckhps
inc
out
out
int
mov
lds
push
cmps
movs
and
ror
or
retf
arpl
mov
jno
cmp
cmp
sub
int3
je
in
push
aas
into
add
xor
loopne
cmps
sub
or
leave
adc
(bad)
mov
cmps
enter
xchg
aaa
and
cli
fcmovu
je
je
xchg
movs
mov
mov
hlt
sbb
mov
aam
clc
and
cmp
sbb
out
inc
sti
or
push
sbb
mov
push
call
jp
add
(bad)
cwde
aas
dec
dec
popf
sub
in
pop
retf
setne
test
nop
pop
repz
jns
inc
jmp
fnstcw
sbb
pop
scas
adc
les
fimul
push
das
inc
mov
imul
shl
mov
mov
push
loope
push
adc
clc
and
push
loop
cwde
imul
xchg
cmps
dec
mov
cmc
sub
and
adc
neg
add
xchg
ret
mov
push
in
fsub
sbb
fstp
cmc
jecxz
and
stos
stos
mov
and
outs
mov
addr16
fs
mov
push
ret
jmp
(bad)
ficomp
cmp
mov
(bad)
or
cmp
mov
out
lods
mov
pop
(bad)
xchg
out
cmps
outs
adc
cmp
pop
ret
fbstp
shl
jnp
retf
into
push
add
jo
pop
ins
dec
das
in
popf
cmps
xor
mov
cwde
pop
jmpw
inc
mov
adc
out
xor
cmp
mov
jmp
icebp
sar
add
mov
xor
jae
cmc
ja
scas
in
push
adc
cwde
xor
(bad)
sub
fisub
nop
test
dec
push
adc
pop
push
mov
int3
and
cmp
mul
cmp
or
pop
enter
iret
cmps
fimul
cmp
aad
mov
dec
inc
sti
push
pop
lea
cmc
and
sub
xchg
out
je
cs
icebp
popa
cmp
into
call
sar
add
push
fild
aaa
mov
cdq
mov
and
mov
cmps
cmc
sbb
rcr
jecxz
test
(bad)
cmp
popa
out
add
mov
(bad)
leave
mov
jecxz
(bad)
sbb
fild
mov
in
inc
loopne
arpl
lods
mov
or
xchg
js
dec
adc
dec
ja
adc
push
jl
mov
je
aam
jns
lds
test
(bad)
fdiv
int3
daa
out
pop
fs
repz
pop
aaa
pop
popf
pushf
lods
ds
arpl
enter
or
xor
cmp
loop
cmc
movs
push
push
dec
lea
adc
dec
xchg
js
xor
das
cmp
mov
push
push
and
retf
pop
dec
stos
repnz
mov
call
sbb
xor
inc
pop
adc
mov
mov
mov
mov
cmp
and
xor
fdiv
aaa
hlt
xchg
in
push
mov
push
clc
or
es
retf
pushf
adc
jg
mov
int
push
inc
or
stc
jle
xlat
int3
push
mov
icebp
add
cmp
sbb
add
sbb
inc
jnp
dec
mov
xor
movs
add
jl
stc
xchg
mov
adc
aam
sbb
movs
ror
je
xchg
push
pusha
popf
cmp
xchg
leave
add
mov
adc
sub
imul
pop
sar
inc
push
and
std
jecxz
daa
sub
repz
or
js
jnp
lock
bound
inc
push
aaa
shl
movs
retf
xchg
pop
mov
xor
dec
fisub
sbb
mov
pop
addr16
mov
imul
cwde
cli
popa
(bad)
into
outs
jb
ins
bt
jecxz
(bad)
loope
mov
mov
(bad)
(bad)
(bad)
jmp
ins
adc
mov
ja
rcr
push
sti
dec
pusha
and
push
jg
xchg
(bad)
mov
mov
xor
enter
call
ffree
sub
mov
daa
jo
out
add
inc
in
cs
pop
les
or
lods
push
sbb
lahf
sbb
bound
push
lahf
mov
mov
and
rcl
daa
fwait
ins
xor
fiadd
scas
and
fnsave
adc
push
mov
push
cmps
lods
and
out
jl
sbb
xlat
sbb
call
movs
pop
mov
test
inc
adc
sub
jno
sub
lods
leave
out
add
inc
adc
imul
(bad)
std
loope
cld
out
icebp
sbb
loopne
or
push
mov
push
add
clc
fdiv
dec
or
mov
xor
mov
retf
xor
jne
mov
ds
or
or
mov
mov
outs
dec
scas
inc
cmp
arpl
cmc
bnd
add
jl
xchg
cmp
sbb
mov
clc
cmp
dec
xor
push
mov
ins
ficom
ins
xchg
test
inc
mov
jecxz
scas
aad
(bad)
test
cmc
add
push
test
inc
popw
add
pop
imul
adc
call
or
rol
push
cmps
fisttp
and
sub
or
movs
loope
out
je
sahf
xchg
adc
jae
cmp
cli
fld
es
test
pop
clc
ins
lahf
add
sahf
adc
(bad)
mov
fadd
popa
loopne
xchg
xor
icebp
lahf
pop
rol
mov
xchg
mov
push
mov
in
xchg
jno
dec
movs
dec
popf
adc
hlt
jl
sti
nop
xor
sahf
(bad)
out
popa
cmc
inc
inc
pop
repz
sbb
or
out
dec
push
ja
push
fmulp
mov
inc
mov
jge
rep
push
mov
idiv
gs
jmp
sbb
dec
dec
jg
es
iret
ss
cmp
lds
cmp
jae
mov
fwait
cwde
lock
mov
inc
or
ds
add
daa
cmps
mov
aad
cdq
sub
dec
inc
sti
xchg
scas
cmp
inc
outs
sbb
pop
ja
in
fcmove
or
imul
(bad)
pusha
nop
mov
mov
sub
push
xor
jns
dec
and
dec
fcomip
int3
dec
daa
mov
aaa
mov
mov
pop
inc
bound
xor
cld
push
call
in
cmps
mov
xor
retf
outs
xor
iret
movs
fld
and
fmul
and
mov
push
xor
sub
mov
xor
ss
push
cwde
and
lds
push
lahf
push
mov
xchg
and
out
shl
stos
ret
icebp
xchg
sbb
mov
mov
pop
add
sbb
dec
xchg
std
jae
in
add
int3
cmp
sahf
test
xchg
xchg
ja
stos
add
call
call
xor
(bad)
and
loopne
jnp
pop
cmp
inc
jl
(bad)
retf
mov
int
jne
jl
mov
xor
jnp
or
mov
mov
xchg
pop
nop
int3
lds
repz
xlat
xchg
dec
aaa
ja
or
jne
adc
cmp
pop
loop
mov
mov
jecxz
(bad)
push
frstor
not
(bad)
xor
fld
inc
pop
mov
in
call
cs
es
and
sbb
add
loop
inc
popa
cmps
das
add
ret
jmp
mov
push
outs
xchg
(bad)
test
stos
nop
mov
push
in
adc
cdq
push
xchg
jo
add
(bad)
outs
add
and
stos
sbb
sbb
and
push
movs
or
xchg
add
sub
int3
push
sub
outs
movs
cli
test
test
xchg
arpl
call
sar
stos
sar
dec
jnp
call
mov
cmp
lods
mov
mov
mov
push
jg
movs
sbb
lahf
popf
inc
mov
jns
ins
jl
push
fisubr
fcmovne
sub
ja
mov
mov
dec
lods
sbb
pop
sbb
addr16
repz
into
lahf
mov
clc
and
dec
scas
adc
inc
div
test
mov
add
pushf
and
or
inc
add
ret
stos
xchg
xor
shl
icebp
sbb
xor
cmp
xor
jo
std
inc
stc
and
sbb
push
fidiv
xlat
add
mov
movs
mov
jg
sbb
fwait
mov
hlt
iret
mov
push
sbb
mov
mov
add
lds
ficomp
fist
push
ss
stos
adc
inc
repz
scas
jmp
add
or
inc
xchg
mov
aad
mov
jle
(bad)
jp
scas
test
rcl
inc
mov
pop
ror
adc
aaa
jno
mov
jne
pop
cmp
clc
icebp
jo
fs
rdpmc
data16
daa
sar
ins
cmp
xor
pop
and
ins
jecxz
mov
sub
mov
loope
dec
jns
daa
mov
and
jecxz
pushf
iret
stc
adc
inc
adc
repnz
pop
les
scas
aam
out
mov
in
pop
or
add
sub
call
adc
or
(bad)
jle
or
pop
dec
jecxz
push
xchg
dec
ror
or
xchg
scas
out
cli
mov
adc
sbb
call
scas
hlt
sub
jno
adc
mov
mov
dec
mov
sbb
adc
sahf
mov
push
xor
call
sbb
sub
ret
shl
lods
retf
sbb
dec
int
xor
into
fucomp
test
and
jae
mov
ss
pop
mov
add
jo
cmp
mov
dec
push
push
lahf
cmp
pop
pusha
cmp
jae
in
push
xchg
xor
xchg
xchg
dec
xchg
pop
add
(bad)
repz
repz
or
sbb
rcr
ror
fnstcw
mov
test
shl
ins
scas
add
pop
(bad)
pushf
fwait
sub
inc
xchg
hlt
in
retf
jmp
sub
mov
jecxz
pop
imul
repz
stc
xchg
aad
es
mov
mov
es
arpl
sbb
jns
jne
add
cmp
mov
addr16
fstp
movs
adc
cld
push
out
das
cmp
dec
out
int
mov
pop
sbb
mov
push
ret
arpl
and
(bad)
adc
outs
xchg
dec
(bad)
mov
xchg
dec
dec
push
xchg
dec
dec
and
mov
mov
push
test
jg
sbb
sbb
sbb
mov
dec
sbb
icebp
lea
outs
adc
stos
jnp
fs
mov
jecxz
cmp
pop
xor
(bad)
push
sub
cmp
dec
ins
cmp
stos
sub
xlat
sar
test
daa
dec
mov
jge
mov
inc
dec
xchg
outs
mov
or
mov
xlat
push
out
dec
mov
fisubr
xchg
and
out
je
and
fst
lock
imul
popa
nop
sub
add
popa
add
in
out
pop
into
iret
les
push
push
(bad)
sahf
sbb
jne
pushf
addr16
loop
xchg
jl
dec
mov
in
mov
lods
lea
mov
lods
and
push
or
inc
and
mov
jmp
(bad)
cmp
xchg
or
mov
ret
shl
loopne
shr
pop
cmc
pop
cli
jecxz
iretw
cmp
adc
jle
jle
xchg
xchg
test
and
jae
mov
repz
retf
xor
popw
ret
daa
std
(bad)
jmp
js
cwde
aaa
or
in
jg
jp
jo
cmp
jne
(bad)
sub
sub
repz
and
dec
sub
popf
dec
hlt
inc
lds
mov
add
dec
and
push
jo
sbb
pop
add
mov
movs
xchg
es
jae
movs
pop
jl
mul
push
cld
push
ins
mov
cmc
cdq
ret
sbb
adc
push
hlt
mov
add
push
in
and
adc
sub
mov
das
int
cld
nop
test
dec
add
stos
pop
call
mov
dec
imul
sbb
je
dec
imul
ror
push
ja
adc
inc
popa
jecxz
lea
ror
mov
repnz
push
pop
mov
cld
jo
loop
xor
xlat
mov
loop
cli
icebp
mov
xchg
retf
nop
out
cmp
add
pop
fbstp
call
cmc
inc
jnp
bound
dec
std
push
cmp
jmp
pop
lds
push
loop
inc
xchg
cmps
mov
mov
and
push
jnp
neg
or
dec
movs
mov
call
jmp
lahf
mov
and
fwait
or
mov
out
jmp
inc
mov
push
sahf
push
icebp
fdivrp
cmp
ret
inc
jle
mov
push
pop
or
bswap
adc
retf
push
ins
xor
mov
and
mov
cwde
out
ss
mov
and
das
add
adc
dec
xchg
dec
les
mov
jge
push
(bad)
jge
pushf
aas
mov
xor
stc
loope
or
xor
stos
bound
bound
clts
mov
push
jmp
dec
mov
adc
fiadd
mov
mul
(bad)
data16
cmps
mov
jl
sbb
xor
mov
xchg
mov
xchg
sub
mov
in
aam
sub
fild
mov
mov
jbe
cdq
push
pushf
push
(bad)
fstp
push
movs
xchg
add
push
or
jg
data16
or
outs
push
cmp
push
enter
jle
retf
pushf
push
enter
inc
fcomp
and
pop
imul
call
inc
xor
sbb
add
das
ret
in
dec
mov
pop
add
or
sub
add
adc
stos
inc
pop
(bad)
aad
cmp
in
jle
addr16
ins
cwde
and
fsub
pop
(bad)
xor
ret
ss
js
(bad)
add
sub
jmp
out
ret
dec
inc
(bad)
push
adc
or
push
xchg
scas
add
mov
imul
inc
xchg
pop
add
jmp
jae
repnz
shl
out
rcl
jo
cmp
ds
loopne
xchg
pop
je
sahf
(bad)
fsub
jg
imul
mov
(bad)
dec
ficom
add
out
and
aam
mov
sbb
in
test
sub
cmps
pop
adc
pop
shl
cmp
add
inc
(bad)
push
les
or
inc
test
pop
pop
in
pop
dec
bound
sbb
mov
or
dec
mov
int3
ret
sbb
ret
adc
into
xor
shr
ret
xor
dec
sub
sbb
int3
ror
outs
and
aaa
sub
int
shr
adc
cli
(bad)
repz
out
mov
cmp
fimul
adc
mov
(bad)
pushf
push
loopne
clc
add
pop
in
imul
clc
xchg
rcr
mov
aam
out
enter
(bad)
jp
rol
stc
adc
dec
leave
jae
sti
stos
cdq
and
sahf
jg
and
popa
or
adc
xor
cli
ret
mov
dec
int3
jmp
sbb
das
or
jbe
in
adc
shr
push
cli
ss
mov
push
fld
jno
cld
out
push
hlt
lods
popa
mov
inc
(bad)
aas
xor
add
mov
fist
and
aaa
xchg
adc
mov
out
inc
aam
sbb
xor
xor
dec
jnp
and
inc
cmp
adc
xor
sbb
out
(bad)
sub
pop
mul
dec
jb
(bad)
sub
lods
idiv
retf
retf
sub
ds
jmp
imul
and
or
pop
pop
in
shl
shr
pop
mov
pop
and
into
pop
or
inc
push
mov
movs
cli
push
rcl
mov
mov
pop
mov
cmc
or
cmps
ss
and
xor
call
aas
ror
xor
outs
xor
aam
into
ss
fst
mov
test
call
fcmovne
aam
in
fstp
pop
into
fwait
loope
or
or
xchg
jle
jmp
mov
xor
mov
mov
or
mov
fnstsw
dec
es
jp
dec
push
dec
pushf
sub
mov
mov
push
test
out
scas
out
sbb
or
cwde
inc
mov
loop
mov
bswap
mov
push
movs
es
lock
add
mov
rol
test
cdq
repnz
lea
push
cmp
mov
pop
sbb
mov
jp
or
retf
pop
arpl
(bad)
cdq
outs
fnstsw
test
cmp
repz
adc
or
je
test
bound
and
pop
add
cwde
je
mov
sub
pop
sahf
xor
retf
cmp
cmp
popa
mov
in
scas
fwait
push
cmp
lods
cdq
ds
icebp
lods
inc
cmps
data16
rdtsc
dec
inc
push
jecxz
sahf
sub
std
push
xor
fld
stos
and
dec
ss
mov
sahf
test
inc
mov
mov
jmp
pop
push
sbb
or
mov
lahf
outs
daa
inc
imul
mov
sbb
sti
cmps
sti
into
pop
stc
popf
mov
push
add
ss
das
int
test
mov
or
jecxz
jno
cmp
jno
jno
pusha
mov
pop
xchg
xchg
repz
(bad)
cmovbe
ret
rcr
stos
mov
ins
div
lahf
call
enter
and
ss
pushf
sbb
xlat
dec
repz
neg
jae
pop
fwait
movs
adc
and
loopne
int3
sub
in
xor
mov
sub
sub
nop
mov
loop
iret
add
inc
(bad)
cmps
out
into
aaa
ret
repnz
ret
adc
xchg
stos
mov
xchg
push
sub
xchg
and
xchg
add
or
jmp
clc
mov
(bad)
xchg
adc
dec
sub
fs
bound
lea
pop
sbb
pop
jmp
push
pandn
ja
jae
push
pop
div
and
add
dec
pop
pop
push
(bad)
movlhps
dec
mov
adc
xchg
aad
aaa
or
and
pushf
loopne
mov
sbb
daa
jae
div
mov
push
sub
loopne
dec
aam
jb
mov
push
mov
loope
push
enter
aad
in
jp
lock
repz
adc
sar
cmp
test
xor
nop
js
stos
sbb
jns
mov
outs
push
or
movs
and
rcr
inc
loopne
jle
lock
dec
xchg
mov
stos
pop
push
and
sub
adc
call
ins
es
mov
fld
movs
call
(bad)
or
jmp
out
mov
jp
lods
mov
and
add
sbb
inc
out
test
xchg
aas
jo
and
cmp
inc
dec
push
sbb
jne
or
xor
cmc
(bad)
rep
cmp
lahf
xor
test
stos
cmp
or
mov
pop
jnp
arpl
inc
bound
add
fcom
out
ret
imul
pop
and
cli
shl
jnp
inc
add
mov
mov
push
ins
adc
out
dec
in
test
int3
fwait
inc
and
xor
cmp
(bad)
adc
iret
aaa
sub
and
sub
mov
xor
push
cmps
inc
sbb
inc
xchg
xor
pop
push
adc
test
mov
int
cmp
xor
jmp
fmul
cdq
sbb
mov
and
btc
add
add
in
ss
rol
add
aas
sbb
sbb
fwait
cmps
xor
pop
cli
sub
pop
cs
jo
fimul
push
sbb
mov
in
aas
inc
mov
jo
fs
xchg
and
iret
in
(bad)
(bad)
pop
mov
dec
pop
cmps
jl
arpl
int3
movs
mov
test
int
mov
mov
shr
aad
push
cld
ret
int3
cwde
and
hlt
xchg
cmp
in
push
addr16
mov
mov
jmp
pop
in
and
scas
xchg
pop
ficomp
or
sti
lock
add
sbb
shl
fldcw
mov
cmp
test
out
pop
sahf
mov
rcl
je
add
rol
adc
xor
aam
fistp
ror
inc
cmp
jne
inc
xchg
dec
adc
jp
fild
out
call
cmc
inc
xchg
push
or
cmp
cmp
pop
dec
push
cmps
call
mov
movs
dec
bound
adc
add
xchg
sahf
push
push
or
fcom
push
mov
sar
(bad)
retf
gs
add
cmc
frstor
and
mov
mov
leave
mov
mov
scas
dec
push
aad
or
pop
shl
mov
pop
jae
jle
ret
iret
popa
ins
mov
xor
sar
leave
add
jmp
loop
push
(bad)
fucomip
ret
inc
mov
stc
clc
mov
ins
fs
xor
jl
aam
mov
test
sub
sbb
dec
mov
push
adc
sub
push
fidivr
or
pop
movs
sbb
out
lea
push
xor
les
sub
pop
mov
push
inc
out
or
hlt
jno
iret
aam
jmp
stc
stc
cmp
pop
jp
jo
jno
mov
pop
mov
(bad)
adc
pop
scas
or
cmp
sahf
retf
outs
loop
jmp
dec
cmp
mov
and
or
lods
and
mov
and
rol
leave
xchg
adc
(bad)
into
ret
inc
or
mov
mov
add
retf
xor
pushf
dec
sbb
lods
xchg
je
inc
je
fwait
mov
out
jmp
fs
or
stos
adc
sub
push
popf
bound
ds
es
push
push
iret
adc
call
fld
jmp
cli
mov
in
(bad)
adc
clc
jle
xor
dec
pusha
mov
mov
and
pop
ret
in
adc
(bad)
loope
jae
add
retf
and
fsub
inc
(bad)
sbb
mov
dec
mov
inc
dec
cdq
mov
jg
adc
or
aaa
sub
mov
xor
stc
adc
cmc
push
add
mov
outs
fsubr
or
fimul
xor
stos
pushf
ins
lds
(bad)
cld
dec
movs
rcl
psadbw
imul
aas
clc
mov
fsub
mov
mov
int3
adc
lods
jmp
mov
cmp
add
or
add
test
push
into
mov
cmp
dec
adc
clc
gs
imul
push
sahf
es
mov
call
outs
mov
add
out
xchg
loop
mov
imul
stc
adc
dec
push
clc
aad
inc
loope
movs
jl
xchg
jo
pop
in
in
and
xor
leave
sub
ja
popa
out
jl
icebp
lea
inc
add
push
adc
je
mov
(bad)
fsubr
pop
pop
sbb
popf
cld
das
and
xor
ror
pushf
cmp
mov
jl
sub
test
xchg
aaa
xor
dec
shl
push
xchg
fs
pop
cmp
hlt
dec
sbb
sbb
xchg
sahf
test
(bad)
sbb
pop
cmps
xchg
aas
lods
and
stos
in
cld
pop
inc
and
into
push
jmp
les
fs
sbb
and
in
inc
mov
sub
mov
push
iret
push
mov
pop
cmp
rcr
and
push
mov
inc
inc
rcr
data16
adc
jl
cmps
mov
inc
and
mov
lods
or
dec
xchg
pushf
sbb
retf
aad
dec
nop
repnz
mov
repnz
add
xchg
pop
sbb
or
cwde
std
scas
cmp
cmps
add
xchg
in
xchg
cld
popa
pop
lahf
pop
pop
iret
call
imul
shl
sbb
inc
mov
dec
dec
or
movs
and
push
loopne
aad
lahf
cmp
ins
shr
jno
mov
xor
gs
pop
sub
mov
mov
xchg
nop
mov
mov
inc
mov
cmps
enter
jle
pop
and
mov
inc
clc
and
adc
test
out
or
call
sahf
bound
je
jle
dec
aam
out
mov
mov
sub
mov
sbb
pop
inc
(bad)
std
and
cbw
jmp
(bad)
cmc
imul
or
push
pop
cmps
jge
and
push
mov
dec
sbb
mov
xchg
leave
ret
push
dec
adc
adc
clc
das
mov
or
imul
sbb
leave
push
add
jb
inc
or
or
or
stos
push
mov
and
mov
jge
repnz
movs
jbe
hlt
push
adc
mov
adc
pop
repnz
and
icebp
stos
push
sbb
cmps
fcomp
xor
dec
xor
loop
add
pushf
iret
aas
adc
shl
cli
xchg
xor
mov
fidiv
ss
sti
fs
pushf
les
push
jecxz
inc
mov
sbb
fucom
outs
fcomp
movs
lea
imul
out
cdq
aas
jne
jmp
mov
push
lds
mov
dec
fild
mov
mov
(bad)
(bad)
jmp
imul
fwait
std
out
mov
dec
in
arpl
movs
or
xor
sbb
cmp
shl
mov
sub
mov
inc
pop
gs
and
push
clc
mov
mov
pushf
int
test
out
(bad)
cmp
or
xchg
jmp
(bad)
retf
pop
inc
sbb
in
push
pop
push
mov
jp
loope
aad
repnz
add
cmp
mov
xchg
test
inc
push
fs
call
out
push
lds
inc
adc
inc
sbb
push
add
sub
xor
ja
mov
jno
push
test
gs
ror
sbb
sub
mov
pop
push
pop
scas
pop
add
jb
pop
cld
stc
les
test
pop
push
push
inc
adc
out
jmp
xor
test
pop
das
lods
and
out
fiadd
xacquire
test
mov
stos
retf
sub
mov
fcmovbe
dec
out
adc
int3
lock
cmps
fnstcw
xchg
pop
ret
inc
add
lock
push
xlat
xor
push
jns
or
or
sub
mov
aam
fisttp
jns
mov
mov
cdq
mov
mov
adc
or
test
mov
inc
mov
fidivr
clc
daa
cwde
rcl
mov
jge
inc
icebp
mov
sub
test
or
out
stos
test
test
xor
mov
inc
mov
mov
add
pop
cli
sbb
mov
out
lods
and
mov
icebp
sub
pusha
mov
push
sti
mov
xchg
ficom
lds
mov
cmp
push
inc
test
int
js
mov
inc
xchg
sahf
lds
cmp
cmp
adc
fwait
mov
rol
jge
iret
or
ins
dec
clc
and
push
pop
mov
out
sub
push
enter
lods
(bad)
mov
mov
test
xor
cmps
ds
inc
sub
cmp
dec
push
lea
jp
lahf
mov
es
in
or
mov
cmp
bound
je
repz
dec
in
mov
hlt
je
lods
inc
dec
cmp
mov
inc
clc
add
(bad)
push
sub
in
adc
cmp
fadd
push
cmp
add
mov
mov
pop
clc
jbe
push
stos
iret
mov
adc
dec
std
adc
add
or
sbb
cmp
das
push
mov
out
xchg
enter
adc
jle
and
mov
aad
out
fisubr
push
and
fistp
mov
sar
xor
addr16
sbb
fnstsw
icebp
stos
mov
dec
pushf
mov
ins
or
mov
cwde
lods
out
mov
push
cdq
push
cmp
fwait
inc
das
stos
lods
pop
or
mov
inc
scas
es
pusha
inc
fucomp
leave
sbb
jge
xchg
mov
pop
jge
inc
cmp
dec
push
pop
mov
sub
cmp
scas
push
lea
in
push
xchg
nop
pop
or
scas
mov
cmps
call
cmp
das
ja
test
leave
aas
fsubr
xor
(bad)
cmp
in
shr
ds
cdq
cmp
add
push
mov
dec
lods
and
ja
jns
test
mov
push
idiv
das
jmp
pop
jae
jg
movlhps
xor
cmp
popf
in
retf
inc
(bad)
ficom
lods
adc
sbb
or
shl
in
(bad)
pop
rcl
js
lea
loope
push
enter
push
mov
push
aas
movs
mov
cmp
xlat
aam
(bad)
enter
iret
outs
push
mov
cmps
xor
shr
cs
ds
xor
push
in
jmp
movs
js
adc
les
pop
xor
xor
movs
call
push
imul
add
mov
cmp
jmp
cmp
lods
cmp
stos
adc
xlat
(bad)
repnz
stc
or
sub
addr16
cmps
inc
xor
icebp
fistp
test
(bad)
fwait
sti
xchg
xchg
pop
pushf
popa
sub
cld
test
ja
shl
sub
test
sbb
jl
mov
ins
sbb
imul
push
dec
adc
mov
adc
stos
test
xchg
xchg
jmp
call
mov
jecxz
pop
xor
int
int
(bad)
mov
aas
push
mov
out
inc
call
retf
jle
repz
adc
imul
cmp
out
dec
xchg
sub
aas
mov
stos
cmp
(bad)
mov
pop
xchg
mov
push
rcr
sbb
push
mov
cmps
xor
xlat
add
or
rcr
cwde
push
das
xchg
add
sub
dec
sbb
lahf
(bad)
iret
cmp
outs
ret
pop
cmp
fld
mov
das
lds
in
mov
es
popa
ficom
mov
aam
in
mov
arpl
das
cmp
es
(bad)
icebp
ds
jge
call
mov
popf
cwde
adc
lods
fsubr
pop
push
sar
outs
scas
mov
icebp
push
dec
xchg
or
repnz
push
repz
or
dec
repnz
imul
inc
out
movs
inc
jle
jb
js
js
dec
mov
cmp
inc
adc
dec
shl
sub
popf
add
inc
in
movs
push
sbb
les
jmp
and
clc
cdq
out
push
jnp
sub
sahf
ret
push
and
dec
ins
and
ret
jmp
mov
aad
pop
push
adc
popf
inc
and
cli
sub
cmp
xor
scas
(bad)
and
int3
popf
inc
xchg
mov
cdq
repnz
push
and
xlat
ds
retf
add
jb
cmps
inc
dec
push
dec
xor
xor
pusha
(bad)
retf
pushf
push
out
dec
sub
mov
dec
add
adc
ret
add
mov
les
and
xor
(bad)
sub
pop
sahf
cmp
jbe
out
data16
pop
add
pusha
sbb
cdq
hlt
push
jmp
pushf
retf
xor
call
push
das
jle
pop
out
xor
inc
sub
pop
sub
sub
sub
xchg
cmp
cmp
mov
pop
sbb
imul
(bad)
xor
pop
outs
(bad)
aas
imul
add
add
and
repnz
cmp
pop
loope
popa
scas
cld
scas
aam
rcl
or
inc
hlt
scas
and
or
retf
movs
mov
(bad)
les
loop
jp
or
pop
repz
jmp
cdq
rol
jns
inc
adc
push
jp
sbb
sub
dec
xor
mov
sub
inc
push
inc
sbb
enter
enter
out
sbb
nop
(bad)
cmp
mul
push
sub
les
pop
mov
xor
cmp
xor
mov
push
inc
inc
icebp
(bad)
je
and
leave
xchg
into
pop
sub
sar
dec
cld
ret
jl
jg
(bad)
lods
adc
mov
xchg
mov
jmp
mov
jnp
mov
scas
adc
xchg
mov
xchg
mov
pusha
jmp
mov
enter
cmp
fild
movs
int
pusha
mov
xor
jbe
pop
push
addr16
inc
cmp
adc
outs
movs
enter
repz
ins
xor
(bad)
adc
pop
pushf
retw
push
(bad)
cmps
mov
sbb
test
jbe
inc
cmp
or
sbb
sub
cmc
push
sahf
pop
popa
dec
cmp
mov
mov
xchg
pop
mov
adc
jge
sub
lds
jge
pop
cmp
std
fs
jp
nop
aas
inc
inc
enter
and
mov
fxtract
ret
add
jnp
cs
dec
cmp
jne
scas
sti
dec
ret
in
jmp
push
jnp
into
add
lds
or
popf
arpl
fs
test
and
out
ds
sbb
ins
(bad)
xchg
mov
std
dec
jge
mov
enter
data16
lahf
(bad)
push
or
adc
push
push
(bad)
rol
jge
dec
jge
jb
ins
aas
dec
inc
cdq
shl
repz
leave
call
sub
ds
push
jmp
call
fisubr
inc
mov
push
sbb
aam
int3
mov
add
repz
(bad)
jmp
into
xor
movs
ins
rcl
not
cmp
(bad)
mov
fidiv
loop
outs
or
(bad)
(bad)
clc
addr16
mov
inc
sub
movs
cs
sbb
(bad)
out
or
call
out
in
mov
mov
shr
test
xchg
xor
pop
adc
sbb
inc
ret
push
mov
fwait
rcr
xchg
xchg
fcomp
xchg
iret
inc
neg
jl
adc
pop
pop
ins
sbb
fdivr
popf
outs
push
cmps
xlat
jns
inc
(bad)
fmul
cmps
std
aas
in
pushf
adc
xchg
cmps
(bad)
loopne
or
js
pop
repz
mov
scas
push
mov
pushf
push
mov
jnp
mov
sbb
stos
dec
and
inc
sbb
push
mov
jg
inc
sub
jns
iret
xor
mov
xchg
je
loopne
int
outs
xchg
cmp
mov
daa
xchg
cmp
pop
and
sub
mov
jg
sbb
repnz
scas
jbe
int3
imul
inc
daa
xor
push
icebp
rcpps
cmp
aas
and
and
sbb
xor
(bad)
dec
mov
ffree
adc
aad
hlt
jp
cmp
mov
fistp
je
mov
(bad)
push
lahf
mov
movs
mov
xor
retf
and
repz
push
mov
and
or
mov
jmp
add
mov
imul
out
jbe
inc
mov
outs
or
dec
or
and
loope
js
xor
push
mov
mov
mov
xchg
movs
(bad)
pop
pusha
ins
add
dec
pop
cli
xchg
loope
enter
jp
xchg
adc
arpl
daa
sbb
ret
jp
or
daa
sub
movs
loop
xor
xchg
(bad)
adc
add
movs
mov
adc
hlt
pop
jo
dec
pop
(bad)
scas
add
sbb
jnp
add
mov
repnz
mov
(bad)
scas
adc
(bad)
imul
or
jmp
jg
lea
jbe
and
dec
stos
mov
dec
and
mov
or
xor
jp
cmps
fimul
dec
fsub
push
(bad)
jp
(bad)
dec
dec
pop
pop
jecxz
mov
dec
mov
dec
pushf
pop
cmp
mov
stc
dec
push
aas
sbb
call
pop
adc
push
and
scas
and
or
dec
mov
or
repz
sbb
sti
(bad)
icebp
and
mov
mov
bound
mov
sti
stc
mov
mov
dec
xchg
lea
pop
fmul
call
xlat
xlat
mov
in
push
fstp
inc
or
mov
add
rol
bound
daa
cmp
lock
pusha
sub
ins
and
jns
int3
adc
fadd
leave
test
popa
push
pushf
clc
cld
adc
ins
call
adc
call
test
and
pop
xor
sbb
dec
popf
sub
cwde
cmp
(bad)
fbstp
imul
ss
mov
jno
(bad)
loope
jmp
xor
mov
mov
gs
lahf
mov
stos
sub
js
stc
outs
hlt
push
test
cmp
mov
ins
fidivr
mov
push
fimul
and
lock
shl
aam
dec
iret
push
pop
(bad)
pop
mul
or
retf
add
adc
mov
adc
imul
pop
mov
xchg
addr16
sbb
test
mov
pop
and
or
xchg
ret
jo
inc
pushf
gs
add
or
sar
cmps
icebp
ret
jl
push
retf
fdiv
sahf
fiadd
sbb
fist
fwait
xor
add
mov
jno
pop
inc
pop
je
sbb
inc
popa
loopne
jb
int3
repz
sbb
and
inc
ret
sub
and
aas
or
adc
out
cmp
add
es
and
rol
(bad)
jecxz
jmp
inc
lds
xor
out
ja
ror
sti
pushf
sub
data16
cmp
scas
cmp
test
sbb
add
lods
in
das
add
fsubp
das
sub
add
jg
retf
cmp
sbb
mov
and
or
inc
cmps
rcr
test
je
cli
loope
sbb
xor
cli
mov
sbb
dec
lahf
lea
mov
and
mov
mov
sbb
(bad)
sti
fcomp
lahf
dec
dec
mov
ins
lock
add
sahf
(bad)
ins
pop
add
shr
call
mov
add
rol
loopne
mov
pop
in
mov
inc
lds
or
or
aad
jo
jns
sbb
aaa
nop
jge
pop
cmp
call
je
fwait
movs
sub
pop
mov
and
push
xor
sub
ins
push
nop
lods
mov
std
aad
retf
fidiv
(bad)
jns
js
jo
loope
mov
lds
scas
popf
call
inc
mov
or
cmp
shl
xchg
rcl
or
push
arpl
inc
add
jnp
add
fdivr
ins
and
cmps
pusha
test
daa
sub
adc
jb
mov
test
push
int3
and
xchg
fnstsw
aas
push
(bad)
xchg
mov
dec
dec
sub
push
inc
pop
push
pop
inc
mov
arpl
enter
call
add
(bad)
dec
lock
enter
pop
std
mov
pop
xor
sub
inc
test
outs
and
int
mov
dec
push
dec
and
sbb
xchg
fwait
pop
pop
jno
popf
fld
sbb
mov
fs
aaa
pop
adc
xor
adc
stos
inc
pop
push
out
sbb
or
pop
xor
pop
xchg
bswap
ror
adc
mov
jecxz
fisub
(bad)
retf
or
call
popf
rcl
mov
fs
or
jmp
sbb
repz
inc
inc
imul
lods
push
adc
ja
jb
in
xor
iret
out
mov
mov
xchg
es
movs
xchg
mov
pushf
(bad)
xor
in
sub
inc
std
push
bound
push
daa
and
or
out
and
sub
cmp
outs
mov
(bad)
xchg
fdivr
cmp
repz
xchg
into
xor
sahf
ret
aad
les
add
mov
aam
ja
aad
fmul
cld
(bad)
push
push
jns
jle
out
pop
jns
mov
or
shl
adc
leave
mov
std
add
mov
fiadd
int
bound
(bad)
adc
or
push
in
lock
pop
pop
cmp
ret
mov
out
mov
popf
xchg
cmp
ja
cs
push
dec
cmps
in
add
add
pop
fimul
jmp
sub
clc
xor
jl
call
iret
push
xor
cwde
inc
pop
call
test
cld
sti
mov
test
out
sub
xchg
dec
aam
popa
out
pop
test
push
sbb
dec
jne
aam
mov
cmp
push
jo
mov
enter
enter
in
lods
pusha
das
mov
xor
inc
push
push
retf
adc
adc
dec
in
cs
adc
sub
imul
mov
lahf
mov
jno
push
cld
sub
retf
cmp
inc
xchg
in
mov
push
movs
mov
test
test
dec
or
sbb
pop
xchg
xchg
rcl
enter
push
into
pop
nop
fwait
rol
jecxz
fld
scas
(bad)
mov
lahf
and
into
mov
sbb
jae
xchg
add
push
dec
xor
pop
fsub
lods
or
jns
push
xlat
neg
cmp
and
in
cmp
sbb
addr16
enter
aad
mov
push
ss
dec
and
scas
xchg
jno
(bad)
outs
sahf
hlt
mov
push
sti
push
mov
rol
int3
xchg
sbb
leave
adc
xchg
test
fsubr
adc
inc
mov
mov
pop
cmp
shr
adc
imul
pop
lock
or
jb
mov
mov
out
xor
in
or
and
pop
out
or
enter
int3
inc
sub
pop
add
nop
dec
xor
cmp
test
add
lods
and
retf
pop
loop
mov
movs
xchg
adc
pop
pop
adc
aaa
xchg
cmp
arpl
aad
loope
hlt
call
mov
ins
and
xchg
es
and
inc
in
mov
fdiv
mov
ds
jnp
sar
das
sub
push
or
lea
cmp
pop
addr16
shr
fcomp
iret
retf
call
stc
cwde
mov
pop
mov
outs
fs
ins
int
push
cmps
cmp
push
xchg
push
ret
ja
adc
inc
movs
lds
call
jg
sub
test
outs
xchg
ss
xchg
in
mov
pop
loope
jle
sub
adc
test
shl
frstor
stos
in
test
ret
ins
push
fadd
aad
sub
mov
mov
dec
stos
sahf
mov
nop
mov
out
cmp
jns
inc
mov
xchg
adc
mov
jb
in
cmp
mov
movs
inc
pop
push
cmp
sbb
fstp
jno
adc
mov
dec
out
(bad)
aad
mov
scas
in
shl
repz
dec
jmp
(bad)
mov
sub
sbb
mov
push
or
inc
ins
icebp
mov
jns
out
mov
pop
xor
es
push
mov
adc
jbe
sub
cmps
pop
mov
cli
cmps
fwait
(bad)
das
mov
movs
(bad)
cld
leave
inc
mov
cmp
pop
aas
in
cmp
sahf
and
in
or
dec
mov
xchg
cmp
cmp
mov
aad
cmp
inc
and
shl
iret
(bad)
cmp
aam
out
mov
out
mov
xor
xchg
sbb
(bad)
xor
sbb
daa
ffree
out
neg
mov
fnstsw
test
bound
mul
mov
sub
jne
mov
enter
or
test
das
pop
xchg
push
loopne
xor
cmp
data16
adc
jmp
and
pushf
rcr
fild
pop
or
std
rcl
fild
fld
or
lods
test
add
cmps
addr16
xchg
lahf
(bad)
or
cmp
imul
stos
icebp
push
je
fcmove
jno
add
adc
bound
add
push
add
mov
mov
inc
popa
cwde
adc
pop
add
addr16
fcmovnu
sub
sahf
mov
push
xor
test
lods
call
daa
shr
test
clc
jp
iret
iret
pusha
sub
aad
lods
mov
enter
sub
hlt
imul
pop
test
or
mov
adc
sub
mov
inc
adc
aaa
retf
mov
sbb
ret
sbb
jle
ja
scas
sahf
mov
xor
xlat
loope
dec
sti
mov
mov
loopne
mov
dec
icebp
push
hlt
out
clc
in
lock
or
mov
daa
test
sar
add
push
jecxz
pop
je
(bad)
xor
leave
mov
cmp
(bad)
stc
ins
enter
es
jg
mov
inc
push
sub
lea
push
lds
push
dec
pop
aad
inc
inc
idiv
xchg
cld
cmp
and
dec
leave
ret
xchg
test
adc
and
jb
shl
jecxz
(bad)
sbb
mov
inc
and
div
data16
cmc
sub
push
out
ficomp
jg
nop
fs
pop
pop
or
js
imul
loopne
dec
push
pop
jne
inc
ds
je
fmul
xchg
mov
or
adc
push
xor
call
xchg
adc
lods
dec
pushf
inc
mov
xchg
push
loope
dec
cmp
out
fisttp
call
pop
movs
(bad)
outs
stc
mov
(bad)
fcomp
pusha
mov
sbb
(bad)
mov
pop
rcl
xchg
jg
mov
mov
push
mov
xchg
jg
mov
ja
cvtpi2ps
(bad)
mov
ret
jo
ins
gs
mov
daa
mov
jns
push
adc
push
nop
int3
repz
fistp
mov
push
and
and
cmps
jae
sub
out
les
test
movs
rep
dec
fadd
fcom
outs
push
push
inc
rcl
push
addr16
stos
mov
mov
push
or
sbb
jge
jmp
test
out
mov
mov
push
daa
jnp
aam
in
sub
(bad)
enter
fst
mov
cwde
sbb
cs
imul
data16
xor
lods
les
xlat
lods
jecxz
rcr
das
pop
je
push
rcr
cmp
mov
aam
(bad)
and
mul
jae
sar
cmps
shl
push
or
sahf
inc
popa
movs
cmps
inc
pop
add
ret
jg
xchg
jne
hlt
mov
out
movs
leave
mov
fcom
scas
cdq
sub
iret
add
xlat
sahf
lahf
out
jmp
cmp
mov
inc
neg
jg
nop
inc
mov
mov
(bad)
pop
bound
outs
cmps
xor
cmp
sbb
shl
xor
cmp
test
inc
pop
movs
cli
sahf
add
out
inc
(bad)
fwait
inc
inc
jge
cmp
aaa
scas
lahf
int
inc
imul
sbb
outs
and
mov
shl
xchg
adc
inc
jge
mov
jnp
test
and
fwait
and
lea
dec
inc
rol
push
and
xlat
popa
or
pop
frstor
mov
adc
sbb
dec
add
loope
fadd
add
xor
out
jno
xor
and
nop
inc
xor
out
xchg
hlt
cmp
or
or
dec
mov
add
and
mov
jge
jo
xor
ret
dec
dec
fcomip
mov
xor
or
fld
movs
inc
out
sub
ret
mov
mov
adc
push
loopne
xor
mov
hlt
jl
(bad)
xchg
adc
inc
clc
movs
pop
div
outs
jg
adc
jg
jno
jp
sub
push
cli
std
pop
adc
es
mov
xor
fstp
push
repz
jmp
shl
rcr
sbb
sti
push
jecxz
xchg
aam
(bad)
stc
lods
fstp
mov
addr16
outs
sub
mov
xlat
and
pop
xor
not
mov
mov
cmps
mov
jae
sub
push
push
push
(bad)
adc
or
inc
xor
sbb
mov
and
shr
push
imul
inc
sbb
popa
loopne
inc
pop
sbb
xchg
repz
stc
fcmovbe
aam
imul
fneni(8087
add
cmps
sbb
dec
jle
xchg
cs
test
push
int
inc
out
pop
lods
in
(bad)
outs
adc
xchg
mov
cmps
les
(bad)
adc
or
add
fisubr
mov
call
mov
nop
(bad)
xchg
adc
out
adc
add
or
out
xchg
test
test
push
inc
ret
movs
fiadd
add
lods
push
xor
ins
nop
movs
ret
push
mov
repz
ror
(bad)
rol
ja
pop
sub
xor
mov
or
sbb
jmp
sub
lods
sub
push
rcl
fild
or
pop
cmp
imul
push
jg
aam
dec
mov
lea
pop
cli
inc
int
leave
loop
cmp
xchg
and
mov
dec
lods
push
sub
inc
adc
(bad)
fsubrp
dec
jno
lds
enter
das
sbb
and
lea
retf
xchg
das
xchg
inc
dec
xchg
mul
sbb
adc
mov
pushf
sub
sbb
jmp
jns
cmc
lea
and
jno
add
jo
arpl
js
enter
pusha
or
jmp
inc
push
(bad)
out
call
out
sbb
fcmovne
xchg
rcl
outs
out
loop
xchg
aam
mov
mov
dec
retf
dec
lea
jbe
pop
jae
sbb
sbb
mov
sub
push
or
out
std
xor
push
adc
pop
sbb
jle
sbb
popf
xchg
mov
das
mov
(bad)
pop
or
ror
xor
push
call
push
cmps
mov
dec
call
dec
xchg
mov
or
int3
aad
pop
dec
sahf
cmp
aaa
xor
adc
xchg
mov
fmul
inc
loopne
jp
mov
std
xor
pop
leave
sbb
lods
fwait
jns
shl
mov
(bad)
(bad)
retf
push
idiv
sub
pop
add
pushf
stc
dec
sub
xchg
arpl
dec
(bad)
std
dec
and
mov
jmp
inc
stc
les
jmp
out
add
push
mov
dec
cmps
neg
in
inc
push
icebp
in
jecxz
push
or
jmp
outs
and
cmp
sub
and
mov
xor
scas
in
mov
and
jns
inc
pop
lods
add
sahf
fs
inc
leave
and
ss
aaa
(bad)
cmp
inc
fistp
pop
fcomp
jge
jmp
mov
(bad)
(bad)
mov
sbb
inc
or
mov
test
mov
sub
pop
into
xor
xchg
cmp
sbb
sbb
mov
push
in
push
dec
clc
cmp
or
adc
mov
in
jno
arpl
mov
fisub
movs
stos
ror
push
repnz
add
rcr
inc
xchg
inc
loopne
(bad)
push
rol
inc
icebp
jp
inc
sahf
int3
lock
popa
repz
pop
sub
scas
cmps
cmp
rcl
xchg
sbb
lds
mov
loopne
inc
outs
xor
out
cdq
inc
add
and
cmp
mov
lods
push
mov
mov
adc
das
stos
fisub
loop
ret
in
(bad)
mov
std
sbb
comiss
sub
test
aad
jp
cwde
lea
or
and
push
inc
add
or
cmc
mov
iret
ds
aam
in
and
push
cmp
mov
in
les
loope
xor
xchg
rcr
test
sbb
mov
test
xor
retf
fimul
sub
lods
paddsb
pop
aas
(bad)
jno
arpl
jle
in
call
(bad)
and
rcl
imul
hlt
push
clc
neg
or
call
loopne
movs
xchg
mov
push
setnp
cmps
fidiv
or
fcomp
and
dec
les
push
pop
xchg
call
ret
and
mov
xor
add
lock
mov
aad
and
out
lods
in
psubw
mov
aas
aad
jae
push
mov
push
pusha
mov
lods
mov
adc
or
jg
lods
dec
pop
icebp
stos
mov
sub
fdivr
xor
es
jnp
shl
sub
shl
loopne
push
mov
push
imul
mov
fidiv
inc
daa
inc
(bad)
jmp
push
sub
inc
es
ret
push
mov
outs
push
retf
sbb
mov
dec
stos
jns
pop
aam
inc
(bad)
out
sub
(bad)
scas
or
jnp
jg
repz
clc
sbb
movs
bound
in
xchg
push
dec
cmps
add
jnp
jg
push
js
jns
pop
imul
(bad)
fdiv
push
inc
sub
(bad)
pop
loope
jo
pop
fstp
cli
mov
(bad)
sbb
shr
add
sub
push
mov
test
test
(bad)
(bad)
ss
and
mov
xor
mov
mov
sub
push
push
fnclex
dec
mov
das
or
mov
push
hlt
cmc
push
mov
ret
push
cmp
inc
mov
jmp
jp
mov
sub
mov
xchg
or
lahf
mov
cmp
adc
push
xor
mov
dec
jge
jo
cmp
fs
sbb
(bad)
sbb
clc
and
xor
sbb
jo
(bad)
push
fistp
cvttps2pi
push
jle
stos
imul
mov
sbb
sub
in
mov
push
(bad)
aaa
shl
stc
arpl
ret
mov
ss
pop
inc
std
lods
cwde
push
xlat
sti
push
clc
lds
inc
outs
mov
loop
test
enter
push
bound
push
push
dec
je
popa
xor
cmc
hlt
cmp
adc
pop
mov
nop
scas
lods
sbb
jns
ins
xchg
pop
cli
push
int3
push
push
movs
je
repnz
cmp
sub
int
xor
cmps
test
mov
mov
cli
movs
jmp
repz
icebp
jmp
adc
xchg
mov
icebp
inc
or
adc
push
xlat
pop
jne
jns
cmps
adc
pop
adc
sub
test
gs
aaa
and
movs
push
not
pop
(bad)
ins
add
aam
dec
mov
fcom
xor
jl
mov
push
push
inc
or
add
dec
aam
les
cdq
nop
(bad)
cs
sbb
and
fidivr
sbb
cdq
cmp
cmp
(bad)
or
mov
ret
fisttp
loopne
sar
and
aad
or
(bad)
mov
(bad)
and
out
and
call
xchg
push
mov
mov
and
hlt
sub
sub
jno
mov
lea
push
xor
mov
mov
jle
call
xsaves
sbb
xchg
repz
mov
call
jb
out
or
test
ins
adc
jne
pop
loopne
stos
xor
xchg
mov
cmp
inc
jge
daa
loop
cmp
pop
scas
mov
lods
xlat
mov
stos
mov
enter
xchg
std
xchg
mov
mov
int
add
fisttp
sti
movs
push
jge
movs
add
mov
add
mov
fcmovb
(bad)
in
(bad)
mul
mov
mov
cmp
xchg
shl
retf
inc
out
hlt
(bad)
dec
push
sar
cmp
pop
adc
psubq
xor
push
stos
push
xchg
out
jg
sbb
in
xor
leave
or
ror
cdq
gs
add
lods
cmp
mov
bound
mov
fs
mov
in
inc
or
addr16
(bad)
pop
pop
js
test
push
mov
fist
mov
pop
sub
adc
cmps
sub
or
push
push
arpl
icebp
jl
nop
mov
mov
(bad)
pop
dec
into
mov
pusha
call
dec
mov
xchg
clc
jecxz
add
stc
cmp
loop
les
and
fwait
aas
xchg
mov
cmp
(bad)
xchg
lahf
dec
fidiv
mov
fcmovu
cs
mov
jmp
inc
das
shl
clc
mov
adc
add
lock
cmp
scas
mov
xchg
outs
xchg
scas
les
cwde
out
add
shr
mov
fstp
ret
pop
pop
ficom
call
out
mov
jmp
leave
dec
fld
std
push
cwde
inc
imul
add
mov
or
pushf
dec
inc
leave
push
sub
sub
imul
mov
xchg
sub
mov
pop
dec
mov
(bad)
retf
inc
stc
mov
imul
test
rol
lock
dec
xchg
shl
dec
test
stos
lods
fsubr
sbb
cmp
js
mov
shl
cmp
jbe
push
cmp
mov
fnstsw
mov
loop
loopne
int
cs
xchg
pusha
(bad)
and
arpl
data16
and
out
mov
lahf
aaa
add
leave
xchg
test
mov
sub
dec
jbe
dec
mov
mov
retf
mov
out
cmp
out
loope
jns
jp
jl
pop
hlt
mov
f2xm1
outs
sub
xor
xor
in
fisttp
loope
int3
pop
mov
mov
cmp
cmp
fcomp
sub
mov
and
cdq
dec
sub
sti
aad
movs
pop
or
push
test
es
clc
ret
cmp
aam
call
ins
sub
cmps
xchg
add
xchg
mov
icebp
je
sub
push
jno
mov
icebp
push
inc
and
mov
and
mov
inc
enter
dec
xchg
cmp
movs
or
inc
jno
pop
add
mov
gs
xchg
or
or
mov
xchg
pop
lea
dec
mov
(bad)
bound
or
push
cld
jb
fadd
and
(bad)
push
pop
mov
loopne
ja
add
or
out
push
inc
xchg
jmp
mov
inc
push
aam
ret
and
adc
aaa
cmps
mov
jns
adc
sub
xchg
jmp
nop
mov
stc
fcom
or
rol
inc
retf
push
add
inc
or
enter
add
adc
or
lock
das
mov
push
and
add
sub
jb
jl
sahf
push
scas
and
sbb
and
xor
cmp
stos
pop
push
jle
test
sahf
cmps
bswap
arpl
test
mov
pop
imul
fmul
aam
mov
pop
les
xchg
push
pop
jae
and
repz
mov
daa
jg
fwait
aam
imul
xor
and
pop
sub
cmp
adc
dec
in
outs
jmp
js
movs
stc
lods
xor
push
sub
jl
rol
and
jecxz
mov
pusha
fld
in
mov
pop
jp
xor
xchg
scas
stc
out
add
movs
jns
cmps
cwde
inc
mov
adc
xchg
retf
out
mov
(bad)
xor
inc
pop
xchg
push
ret
dec
jg
mov
adc
fstp
or
out
dec
push
or
mov
fxch
xchg
mov
adc
add
add
data16
addr16
mov
out
cmp
scas
sar
idiv
and
sub
pop
pop
and
cmp
in
add
retf
mov
bound
repnz
mov
mov
sbb
pop
sbb
in
jnp
push
cmp
sbb
jg
ret
push
aam
pushfw
js
shl
stc
inc
pop
adc
or
mov
add
cdq
dec
call
sar
scas
repz
jecxz
mov
fst
dec
cdq
pop
es
or
lods
shr
mov
lock
or
cs
leave
call
fsub
aas
shl
jns
and
in
dec
sbb
and
mov
pop
(bad)
jecxz
ds
cs
cmc
add
call
jg
outs
out
sub
xor
enter
xchg
and
mov
or
jo
in
inc
xor
mov
clc
fstp
pop
into
fcom
lahf
push
retf
gs
loop
dec
pop
pop
es
xchg
repz
rcl
adc
mov
scas
lock
jnp
pop
fisttp
(bad)
inc
ret
mov
cmp
repnz
mov
jl
lods
int
lock
in
rcl
repnz
inc
sbb
mov
les
hlt
in
xchg
imul
jne
lods
div
and
push
les
dec
jle
stos
sbb
popa
mov
ret
outs
push
cdq
or
aam
(bad)
div
and
cmp
stos
iret
pop
inc
add
sbb
mov
in
pushf
sub
(bad)
fmul
fsub
jle
into
out
push
cmp
in
loope
dec
outs
adc
jbe
outs
or
inc
icebp
or
ss
jl
into
pop
adc
cmp
xchg
mov
stos
adc
push
loope
inc
inc
mov
jns
mov
js
xlat
or
dec
add
stos
push
(bad)
repnz
pop
sti
in
sbb
fs
test
mov
outs
pushf
xchg
int3
jl
sub
cmp
outs
jmp
inc
lock
mov
cmps
xchg
aam
mov
pop
mov
movnti
cs
mov
fcomip
scas
xor
ins
scas
popa
add
adc
call
sub
fst
cld
aaa
or
idiv
mov
cwde
fmul
pop
shl
repnz
cmp
into
add
jmp
imul
jle
(bad)
xchg
nop
xchg
es
mov
jle
push
cmp
in
das
cmp
cmps
out
fistp
mov
mov
loopne
sbb
sahf
or
and
push
sti
shl
in
imul
mov
mov
idiv
cmc
clc
add
or
sub
pushf
aas
jl
inc
into
out
movs
push
and
or
cmps
les
mov
push
out
add
or
jo
into
add
sar
mov
xlat
ret
xchg
les
iret
fwait
sbb
adc
or
jmp
jnp
test
sti
sub
pop
pop
out
data16
out
add
mov
movs
iret
pop
jmp
inc
(bad)
hlt
test
outs
(bad)
mov
lea
out
mov
pop
and
(bad)
into
jmp
mov
(bad)
loop
jl
push
mov
dec
pop
mov
or
cmp
les
in
cwde
mov
push
retf
scas
xchg
mov
scas
gs
jmp
test
mov
xor
repnz
push
inc
clc
hlt
fisttp
add
mov
out
call
div
popf
aad
imul
mov
enter
push
push
sub
addr16
data16
dec
aam
xor
pop
imul
mov
sub
jo
gs
mov
dec
fist
or
div
popf
jne
fld
jo
inc
jno
sub
cmps
fcom
icebp
dec
test
test
aam
jle
in
push
jp
std
mov
mov
(bad)
push
js
cwde
cmp
call
(bad)
scas
cmps
add
adc
sahf
dec
imul
aaa
jg
xor
jge
loope
loope
jae
add
mov
jle
and
inc
push
xlat
(bad)
(bad)
jmp
mov
mov
dec
(bad)
cs
clc
cmp
inc
dec
rol
push
(bad)
pop
fs
out
cwde
lods
lahf
in
loope
push
movs
push
imul
stc
add
mov
jmp
cmps
xchg
jl
jl
cs
sbb
pop
not
push
into
aam
mov
pop
movs
(bad)
xor
and
and
loopne
sbb
jae
inc
lock
pop
adc
popa
fadd
cmp
cmp
adc
push
mov
movlps
and
adc
mov
dec
aaa
xor
xor
dec
repz
int
ss
push
add
cmps
cmps
xchg
sahf
cmp
pop
xchg
fisttp
push
es
xor
(bad)
je
jae
mov
mov
cmp
jmp
xor
dec
in
sub
call
push
mov
shl
xlat
jge
stc
dec
aaa
add
movs
push
push
inc
sbb
mov
mov
sub
call
(bad)
mov
adc
in
dec
sbb
push
push
xchg
jge
or
lea
fadd
pop
add
mov
dec
jnp
(bad)
push
sub
mov
jae
push
jo
scas
test
jmp
into
pop
adc
(bad)
cwde
mov
scas
mov
jns
loopne
cmp
fcmovnbe
cmc
dec
xor
pushf
int
into
xchg
inc
outs
jl
pop
(bad)
ss
push
std
icebp
sub
(bad)
popa
jecxz
dec
jne
into
jb
xchg
int
mov
lods
inc
add
adc
test
jmp
xchg
lods
inc
(bad)
jl
stos
and
sti
xor
cmp
ror
mov
pop
lods
repnz
outs
mov
jno
mov
and
daa
ins
inc
shr
xchg
inc
pop
and
sbb
call
mov
pop
rcr
mov
sub
inc
mov
mov
adc
rcr
mov
push
icebp
dec
mov
(bad)
stc
mov
sar
mov
addr16
rol
or
mov
pop
or
js
cdq
sbb
movs
es
je
jae
addr16
push
mov
test
inc
sub
xchg
mov
in
and
lahf
or
xchg
cld
lds
and
push
fbstp
sbb
(bad)
jns
std
and
mov
sbb
inc
sub
mov
sub
cmc
mov
jl
add
(bad)
ret
sbb
mov
scas
movs
test
mov
lods
bound
mov
stc
inc
dec
test
xor
aaa
xchg
jg
cmps
(bad)
mov
mov
sar
mov
push
push
xchg
aas
shl
pop
(bad)
imul
loop
inc
fdiv
in
mov
aas
test
cli
pop
ja
aaa
ret
aaa
mov
pop
or
mov
addr16
xor
ins
loopne
mov
call
mov
xchg
nop
mov
and
das
add
xchg
xchg
inc
dec
(bad)
dec
jge
test
xchg
daa
mov
cld
clc
inc
xor
inc
pushf
and
and
cdq
push
inc
mov
xlat
mov
mov
sbb
std
xor
pusha
pop
shl
mov
inc
xor
fdivr
mov
aam
and
adc
in
pusha
pop
dec
mov
add
and
push
adc
aam
iret
int3
mov
push
mov
rol
icebp
cmp
imul
call
iret
test
sbb
add
adc
ss
adc
pop
cmp
inc
sub
inc
dec
sub
lock
mov
jbe
lods
sti
and
sub
mov
push
mul
inc
sbb
sbb
cmps
or
jo
leave
mov
inc
push
xlat
or
test
sar
mov
call
lock
dec
sub
retf
ret
arpl
sbb
nop
mov
sbb
sub
jecxz
popf
mov
in
xor
push
and
(bad)
sub
jne
inc
stos
call
sti
sbb
leave
cmp
(bad)
cld
mov
cmp
loope
jne
clc
pop
sub
repz
add
mov
call
repnz
aam
mov
out
mov
in
sub
mov
or
lds
js
pop
cmp
loopne
cmp
mov
(bad)
cld
retf
aad
shl
mov
add
jg
pop
and
les
mov
jp
push
push
ins
mov
add
fwait
mov
inc
cmp
pusha
adc
out
pop
test
les
jnp
js
jecxz
pop
outs
pop
test
cli
adc
dec
inc
test
sbb
pop
push
div
sahf
nop
sub
pop
mov
icebp
or
pop
ud0
add
outs
adc
adc
lds
ja
cmp
cmp
pushf
aaa
mov
out
jbe
dec
dec
mov
stc
fld
shl
jnp
cmp
xchg
imul
loope
aam
je
cwde
sub
cwde
sub
or
adc
jnp
pop
clc
arpl
mov
shr
movs
pop
int3
pop
or
push
adc
adc
loopne
or
pop
mov
xor
lods
repz
gs
test
mov
in
fbld
xrelease
inc
js
pop
sbb
pop
ret
or
push
cld
pop
test
out
sbb
mov
xor
neg
lock
and
inc
cdq
es
test
dec
xchg
out
(bad)
in
mov
sbb
in
or
pop
xchg
xor
xor
jae
mov
cmp
sub
les
stos
mov
fldl2t
jmp
(bad)
imul
ret
or
sbb
adc
push
js
mov
sbb
mov
fmul
cli
or
fsubr
daa
add
mov
popf
inc
and
fsincos
mov
xor
clc
sbb
lods
fdivr
push
jp
test
fwait
outs
jp
div
nop
out
cmc
inc
imul
push
lock
inc
imul
and
out
repz
inc
sub
cmp
jmp
mov
push
pop
inc
fmul
or
inc
arpl
jbe
stc
mov
movs
mov
mov
psadbw
mov
out
adc
pushf
enter
inc
mul
ficom
fadd
ret
and
and
(bad)
mov
in
aad
inc
push
jno
adc
xchg
sub
ja
or
mov
xchg
cmp
xchg
mov
adc
stc
or
nop
add
in
mov
mov
cwde
in
mov
mov
cwde
push
pop
test
gs
add
mov
(bad)
xor
sbb
outs
sub
mov
sub
shl
(bad)
sbb
pop
lock
mov
mov
enter
in
push
test
fidiv
inc
xchg
pushw
jge
outs
sub
dec
sahf
pop
inc
je
mov
pop
(bad)
sbb
push
or
in
xor
aaa
mov
bound
jbe
xchg
jo
dec
fwait
pushf
xchg
cmp
or
inc
mov
xor
bound
push
xor
xor
or
mov
sub
lods
push
mov
jle
sub
out
iret
mov
enter
stc
and
adc
repnz
pop
call
inc
jae
pushf
out
xchg
(bad)
jmp
jle
sbb
mov
jl
aad
pop
ds
loopne
cmp
shl
jmp
in
push
push
aad
jmp
cmp
mov
jae
or
dec
xlat
cmp
loope
fsubr
(bad)
cs
jns
jne
xchg
ret
pop
mov
lds
ja
loop
inc
rcr
leave
test
push
das
fwait
sub
mov
pop
in
xchg
fmul
mov
jl
mov
call
cmp
mov
and
or
std
and
xchg
mov
loop
xchg
lahf
pop
mov
call
outs
jae
xchg
int
jp
imul
int
les
les
dec
xor
xor
cmp
pop
imul
mov
cld
int3
gs
inc
retf
jnp
sub
(bad)
jno
jbe
imul
and
std
inc
pop
xchg
adc
sti
imul
loope
(bad)
dec
ret
xor
push
mov
outs
push
sbb
or
pop
fnop
test
xchg
cwde
pop
loope
cmp
repz
cmp
stc
scas
push
mov
fnsave
imul
pop
push
xchg
add
stos
cmp
in
pop
inc
loop
cmp
dec
cwde
ret
mov
inc
stos
jl
(bad)
cmp
and
repnz
psllw
adc
test
stos
mov
js
dec
popf
movs
cmp
in
fdiv
scas
push
gs
scas
xchg
ret
push
mov
dec
ins
inc
nop
sub
push
inc
clc
and
sbb
or
mov
inc
mov
adc
cwde
mov
daa
test
cmp
jecxz
push
mov
shr
scas
scas
jmp
ja
add
xchg
sub
pop
adc
popa
xchg
add
(bad)
std
int3
out
push
fs
ror
sub
jg
leave
inc
loope
sbb
or
adc
inc
shr
jge
push
fs
gs
xchg
in
mov
mov
ins
xchg
pushf
xor
ret
sti
jae
mov
push
popf
sub
addr16
(bad)
test
(bad)
lods
add
pop
push
xor
lock
arpl
ja
push
inc
cmp
inc
ret
or
and
push
xlat
push
je
cmp
sbb
xchg
lds
add
hlt
cmp
pop
adc
in
add
sbb
sbb
jg
push
ins
sti
pop
js
retf
inc
inc
aad
rcl
cmp
sub
cmp
adc
ret
movs
xor
popa
pop
movs
scas
adc
xor
test
dec
pushf
jae
(bad)
xor
xor
jb
test
add
(bad)
aaa
clc
pop
outs
(bad)
out
sub
imul
add
cld
or
cli
iret
xchg
cmp
sar
fiadd
or
repnz
mov
inc
lock
lds
ja
out
in
jl
ret
sub
push
cmp
lea
hlt
aas
cwde
es
bnd
xor
xlat
pop
sub
nop
frstor
pop
pop
mul
sub
push
stos
pop
mov
imul
jg
or
jp
push
jl
push
dec
lea
jg
push
test
enter
ror
popf
mul
inc
xor
xchg
rcr
and
aas
ret
std
call
and
sub
in
inc
aad
push
inc
inc
lea
mov
ja
add
xchg
adc
jno
rol
lods
fimul
sti
or
xchg
lahf
mov
pop
outs
ret
push
shl
xchg
popa
sbb
loope
cmp
cmp
sbb
xlat
cmp
add
mov
les
(bad)
pop
pop
xchg
or
mov
cmp
dec
push
fisttp
popf
stc
les
jb
mov
neg
shl
mov
sbb
mov
and
cmc
(bad)
dec
call
mov
add
sbb
jno
inc
pop
out
shr
retf
enter
sar
movs
cwde
jl
cmp
pop
lea
mov
stos
xchg
cwde
push
adc
dec
push
ins
and
cmps
cmp
push
pop
pop
jecxz
movs
pop
rcl
mov
in
into
adc
popa
mov
add
jae
or
sub
dec
mov
sub
js
xchg
adc
jl
fdiv
xor
call
push
icebp
adc
inc
jae
(bad)
dec
out
adc
stos
mov
ret
or
jle
jge
nop
clc
add
xchg
jbe
mov
in
sub
xchg
les
imul
xchg
dec
mov
into
lahf
lahf
loope
jne
push
and
js
jns
dec
outs
sti
aad
sbb
push
push
pop
sbb
push
push
xchg
mov
lods
stos
mov
pop
adc
xchg
(bad)
xor
popf
and
and
stos
mov
xchg
inc
clc
cmps
inc
push
add
pop
cmp
in
out
pop
lds
dec
adc
push
mov
xchg
arpl
ins
movs
cs
mov
loop
popf
fld
add
xchg
mov
xor
outs
push
and
jecxz
xchg
push
test
enter
mov
mov
pop
lods
and
xchg
mov
nop
sub
mov
or
call
lea
inc
outs
hlt
inc
lds
dec
daa
je
jae
push
ja
movs
pop
mov
call
adc
iret
push
clc
pusha
test
cld
(bad)
(bad)
in
xchg
fcmovnbe
mov
adc
ins
inc
or
cmps
xlat
je
mov
inc
out
mov
inc
jbe
push
imul
ror
addr16
les
jo
(bad)
movs
jge
pop
inc
sub
leave
fwait
jecxz
mov
cmps
push
inc
out
test
repz
cmps
sbb
repz
jmp
sbb
(bad)
mov
in
sahf
(bad)
jl
jg
(bad)
in
call
cs
adc
mov
ret
and
inc
fisubr
shl
leave
cwde
aad
ja
dec
jb
xor
(bad)
ss
in
sahf
pushf
das
outs
mov
mov
or
cmp
mov
cld
nop
inc
adc
sub
std
fmulp
stc
rol
push
dec
jo
aaa
xchg
xor
xchg
shl
neg
mov
xor
xor
sub
jp
sbb
jo
push
lock
ret
pop
fistp
popf
lods
cdq
loop
push
jbe
add
lahf
ret
jecxz
fdiv
leave
out
mov
pop
inc
cmp
mov
(bad)
mov
cmp
push
inc
(bad)
push
lods
sar
mov
fnstsw
push
ficomp
sbb
ja
dec
(bad)
mul
arpl
cld
and
inc
ins
aam
fwait
jge
mov
cli
call
inc
cdq
ficom
nop
add
movs
cwde
cmps
inc
adc
(bad)
pop
jno
mov
retf
(bad)
repnz
pop
jb
cmp
out
sti
mov
mov
mov
retf
loopne
xor
cli
imul
int
jbe
jg
(bad)
hlt
xchg
push
fsubr
sbb
mov
mov
push
(bad)
sub
cmps
ins
cld
sbb
mov
cmp
stos
xor
mov
out
(bad)
(bad)
cmp
and
gs
dec
pop
or
jle
dec
cmp
popa
dec
jl
movs
sbb
in
adc
add
retf
mov
lds
push
mov
sub
out
test
stos
test
xchg
mov
sbb
xor
lahf
or
mov
fs
iret
inc
or
sbb
loop
mov
xchg
jg
and
arpl
ror
and
xor
sub
xchg
mov
(bad)
pusha
inc
fwait
xor
ins
mov
test
(bad)
fisubr
xchg
test
adc
sbb
pop
inc
and
cmc
sti
dec
pushf
scas
mov
xchg
jge
test
rep
mov
mov
mov
push
jo
push
add
add
jp
std
call
pop
push
imul
dec
lahf
or
repz
adc
imul
xlat
movs
jge
and
aad
cmp
pop
mov
jne
and
xchg
ja
sub
stos
aaa
or
push
enter
sub
rcr
push
lock
popa
not
fsubrp
(bad)
test
cs
lds
and
std
cmp
or
jecxz
mov
xor
addr16
mov
xlat
in
aas
cld
ins
aas
arpl
popf
pop
jmp
cmps
jge
fisubr
imul
xchg
pop
loope
nop
pop
xor
dec
xchg
ins
jnp
int
in
add
cdq
jmp
jmp
pop
jno
xchg
les
pop
movs
aad
mov
adc
inc
push
mov
or
sub
in
add
jne
jmp
xor
std
or
or
adc
or
(bad)
sbb
cs
idiv
or
mov
int
(bad)
xor
lods
(bad)
frstor
mov
sbb
sti
inc
in
fcom
sahf
repnz
fs
cli
test
outs
cld
push
add
fsubr
add
inc
repz
xchg
sti
psrld
fmul
loop
jg
adc
mov
or
icebp
or
outs
pop
popa
mov
and
js
fstp
sub
lahf
pop
xchg
hlt
inc
mov
jle
lahf
and
loope
xchg
shl
inc
jmp
pop
dec
xor
sar
cli
cs
inc
repnz
mov
ins
imul
lahf
bound
mov
xor
sub
out
jno
test
call
or
mov
inc
xor
push
jmp
xor
aaa
aam
icebp
add
push
cmovo
inc
pop
shl
sbb
mov
sub
xlat
inc
dec
loopne
(bad)
sub
jno
imul
inc
or
push
test
adc
cmps
sbb
or
popf
pop
rcr
jns
add
push
sbb
or
imul
out
out
loope
iret
addr16
loope
pop
push
out
xor
and
push
jb
mov
fiadd
stos
mov
in
mov
add
cmc
inc
(bad)
rcr
mov
in
test
(bad)
in
add
mov
inc
xor
cwde
push
mov
pop
aaa
push
test
js
out
mov
xor
dec
pop
inc
out
sbb
pop
add
xchg
call
aaa
ret
cdq
or
mov
mov
lods
and
ins
sub
sar
sub
ret
ja
ja
jb
mov
cs
or
outs
pop
push
adc
jb
fwait
dec
add
aad
lock
enter
push
gs
cmps
jmp
repz
data16
sub
test
pushf
jmp
jns
cmp
imul
or
retf
xor
add
cmps
enter
clc
xor
in
push
mov
xchg
jo
cmp
inc
pop
mov
jmp
dec
cmp
ror
div
push
or
pop
addr16
pop
jl
adc
sbb
in
adc
cmp
test
pop
xor
cwde
add
push
daa
mov
push
xor
and
or
dec
jae
jne
ret
das
xor
xor
leave
dec
adc
js
ins
jae
inc
pusha
test
mov
idiv
mov
mov
movs
push
cdq
pop
stc
lea
push
aas
fxch
jle
arpl
repz
dec
loopne
cmp
xor
pop
adc
hlt
test
jb
mov
push
sbb
stc
dec
into
mov
mov
adc
mov
lods
cmc
inc
stos
out
jb
fucom
lahf
ins
gs
das
(bad)
test
dec
mov
mov
data16
jge
shl
mov
sub
adc
dec
jl
xchg
sbb
mov
int3
and
fstp
out
xor
enter
in
or
push
inc
shl
imul
ret
sub
push
jp
sbb
sub
leave
bound
xchg
out
dec
jmp
call
out
mov
jecxz
scas
ret
mov
call
pushf
sbb
aam
fbstp
xor
jno
ficomp
mov
or
ins
fstp
out
mov
idiv
push
dec
push
jmp
ret
xchg
adc
gs
push
cld
cmp
jae
xchg
(bad)
cmp
pop
and
sbb
mov
mov
fild
ins
mov
jae
leave
int
inc
pop
jnp
sub
fld
es
xlat
lods
imul
lods
inc
scas
dec
xchg
loop
mov
push
cli
stos
fs
adc
jbe
push
out
push
jmp
jmp
sbb
push
xchg
arpl
cmp
xor
mov
add
cmp
push
push
jo
hlt
xlat
(bad)
lds
das
pop
sti
or
lea
lahf
ret
sbb
push
fst
xchg
and
cmp
xor
jns
or
fucomip
in
loopne
mov
jmp
retf
xchg
out
push
adc
rcl
stos
and
stos
xor
mov
lock
rol
sti
jl
dec
loop
xchg
push
mov
jl
imul
das
add
cmp
out
movs
icebp
sub
fwait
test
and
hlt
into
test
je
rol
cmp
jle
add
or
xchg
mov
mov
mov
and
xchg
xor
stos
(bad)
jmp
repnz
cmc
movs
outs
inc
ds
sbb
std
out
xchg
mov
loope
add
leave
dec
fnstsw
(bad)
rol
ss
in
and
ror
inc
or
dec
mul
push
xchg
fidiv
sub
in
or
inc
cdq
adc
fstp
mov
icebp
xchg
inc
inc
dec
std
mov
sub
lea
push
jnp
jl
pop
jb
inc
jnp
fisttp
mov
(bad)
and
sub
ss
ja
retf
add
lds
xchg
js
sbb
lea
in
add
ss
pop
adc
jne
aas
hlt
fbstp
mov
push
jmp
mov
push
mov
lods
or
ret
inc
mov
cmps
sahf
mov
xchg
inc
push
adc
mov
lds
lods
xchg
scas
and
shl
inc
push
jmp
or
test
mov
int
dec
push
adc
inc
inc
inc
pop
mov
in
cmp
popa
outs
in
test
adc
pop
xor
sbb
int3
mov
adc
mov
xchg
cmp
xor
call
mov
xchg
loopne
push
dec
dec
dec
dec
dec
inc
jecxz
sti
inc
lods
fs
aam
std
add
loopne
fwait
lea
repz
fwait
adc
pop
into
jns
sbb
nop
mov
iret
xor
add
xchg
or
call
and
xor
add
push
and
and
dec
pop
dec
pcmpeqw
bound
jo
out
and
inc
icebp
mov
fs
add
mov
mov
sub
into
adc
sub
mov
jp
jge
imul
sub
xor
and
adc
in
icebp
pop
pushf
into
dec
jecxz
(bad)
adc
(bad)
sti
cwde
xchg
pop
inc
mov
aam
(bad)
stos
fild
aad
xlat
test
das
inc
xchg
mov
arpl
inc
dec
call
mov
sbb
cdq
xor
dec
mov
and
out
popf
adc
lock
loope
sbb
cmp
jle
dec
movs
mov
js
xchg
gs
sahf
push
imul
mov
test
fcmovu
mov
inc
add
xor
or
push
mov
inc
xchg
jle
ret
ins
fld
aam
out
js
jg
cmc
test
fs
fbld
pop
mov
inc
movs
mov
gs
xchg
pop
push
sti
pop
xchg
aad
push
and
icebp
loope
mov
inc
shl
popa
push
ins
shr
add
push
cmp
scas
lea
fstp
movs
sub
xor
clc
(bad)
retf
dec
add
adc
(bad)
aad
(bad)
xchg
lds
mov
loopne
inc
fnstsw
mov
jns
dec
cmc
mov
ficomp
jo
inc
repz
out
add
leave
push
mov
iret
fdiv
push
mov
aaa
sub
test
and
push
lods
dec
inc
test
addr16
test
push
jne
(bad)
pop
sbb
xor
pop
mov
inc
es
xchg
sub
loop
mov
out
mov
repz
icebp
sub
pop
pop
and
adc
pop
shr
cmps
in
xchg
adc
jno
adc
aaa
fild
arpl
idiv
call
clc
xor
addr16
fwait
imul
lds
mov
das
inc
add
aad
into
js
dec
test
mov
lods
fwait
jne
icebp
and
or
fwait
add
adc
imul
imul
mov
sbb
pop
and
lods
dec
push
test
gs
pop
cmp
add
pop
lahf
scas
dec
setns
loope
pop
data16
mov
jno
inc
cmp
jb
or
sti
nop
pop
fucomip
fisttp
add
and
xor
jge
push
mov
dec
pop
pop
arpl
mov
pushf
cld
out
arpl
aaa
aad
sub
fadd
or
dec
or
mov
lea
cmp
rcr
imul
and
xchg
imul
add
cmp
mov
dec
xor
repz
pop
jae
aad
sahf
push
fldcw
sbb
je
jmp
mov
inc
pop
xchg
mov
pop
xchg
sub
outs
ret
jmp
lea
mov
inc
int3
mov
mov
lds
inc
(bad)
in
dec
cli
(bad)
xor
sar
and
jmp
push
sbb
ds
dec
lods
movs
test
xlat
dec
neg
sbb
jmp
inc
dec
sub
dec
xor
clc
clc
xor
mov
imul
loopne
fdivr
ds
cmc
mov
imul
jmp
inc
test
and
xchg
and
cmp
sub
xchg
dec
clc
test
sbb
retf
mov
lods
repnz
ficom
inc
and
mov
data16
jbe
mov
or
jo
in
sar
push
ins
call
jmp
ret
push
xor
mov
sub
dec
and
push
js
gs
inc
xchg
push
stc
test
js
out
sbb
stos
psubsw
mov
push
or
ret
cdq
mov
jp
loopne
popa
retf
(bad)
(bad)
ja
add
addr16
or
pop
addr16
into
or
in
shl
inc
jae
das
into
mov
adc
cmps
stos
mov
xchg
sbb
and
or
sar
dec
retf
jne
popa
mov
out
test
mov
scas
cmp
sahf
cmc
xchg
btc
clc
ret
mov
sar
retf
fimul
ror
jge
sub
jae
aaa
pop
jmp
mov
mov
mov
sbb
shl
int3
adc
xchg
jae
pop
test
sub
xor
popa
or
(bad)
loop
mov
push
daa
stc
dec
bound
adc
push
and
fwait
adc
ins
dec
call
mov
mov
aam
nop
mov
xchg
adc
push
jmp
mov
jmp
stos
addr16
aaa
mov
push
or
imul
addr16
inc
jmp
scas
iret
xlat
js
jmp
mov
(bad)
dec
sbb
sbb
mov
jp
dec
cmp
sbb
jbe
push
sub
repnz
inc
push
push
adc
jmp
fisttp
mov
mov
xchg
inc
xchg
mov
mov
pop
mov
mov
daa
mov
and
jb
cli
lds
test
adc
call
dec
pushf
and
jns
mov
in
icebp
fiadd
jmp
lock
and
(bad)
js
adc
xlat
(bad)
cmp
jl
xor
pop
inc
mov
sub
or
pop
push
inc
adc
sbb
dec
dec
cs
test
lahf
data16
es
cwde
dec
jl
rcl
inc
sbb
out
cs
inc
cmp
jne
push
scas
mov
xor
pop
rcr
pushf
lock
mov
push
es
jns
dec
dec
das
mov
push
adc
outs
adc
or
mov
lods
xchg
and
popa
ret
sbb
lods
loop
adc
fdiv
xchg
scas
jmp
sub
sar
fnstsw
xor
dec
mov
mov
aad
sahf
fldenv
adc
cmp
dec
mov
add
xchg
mov
cmp
clc
inc
(bad)
sahf
fstp
dec
dec
jge
cmps
test
inc
jmp
pushf
fs
loop
(bad)
pop
sub
ja
jo
push
sub
in
call
xchg
push
jnp
(bad)
and
sub
int
dec
or
or
xlat
push
push
fisttp
lock
and
mov
xchg
xor
sub
xor
cdq
push
jne
pop
mov
(bad)
outs
xor
add
gs
(bad)
out
retf
cmp
dec
xchg
push
pop
nop
test
push
cmp
(bad)
jmp
mov
inc
es
add
in
lds
or
idiv
xchg
rol
cli
stc
call
pop
inc
mov
data16
adc
dec
lods
cld
and
add
neg
jge
push
dec
jae
xor
sbb
mov
or
add
(bad)
dec
das
cmps
je
jbe
mov
gs
pop
adc
jo
and
add
dec
cmps
and
hlt
adc
add
fadd
pop
mov
iret
into
adc
pop
adc
jecxz
xchg
cld
fld
xor
icebp
add
dec
lds
jnp
je
stos
push
xlat
xchg
out
popa
lods
inc
sub
shr
and
movs
sbb
push
xchg
fs
jmp
mov
add
push
retf
cmp
push
popf
loope
sbb
fwait
call
mov
jo
add
xor
jno
clc
sub
call
(bad)
sub
pop
cli
lea
xor
xor
dec
ins
stos
xlat
stos
mov
add
mov
pop
call
xor
jmp
je
(bad)
into
dec
call
imul
xor
mov
push
push
pop
and
mov
icebp
add
push
shr
call
push
jb
adc
sub
and
out
sbb
pop
mov
sti
lods
inc
in
js
xchg
mov
dec
and
xchg
mov
cs
push
fdivrp
mov
mov
mov
in
out
pop
add
jg
fsubr
sbb
leave
lahf
inc
(bad)
fidiv
pop
lods
mov
jmp
(bad)
in
mov
mov
inc
in
adc
dec
enter
aaa
and
sbb
or
jnp
dec
jle
bsr
adc
push
sbb
cmp
lds
and
aaa
xlat
daa
and
mov
enter
ficomp
out
out
iret
xor
(bad)
stos
in
adc
mov
cmp
ins
xor
push
pusha
sahf
adc
dec
xor
mov
retf
pop
mov
into
dec
js
mov
add
push
mov
jne
gs
imul
push
pop
(bad)
loopne
test
stos
cmp
xor
push
jae
enter
pop
in
and
test
scas
gs
das
xor
ror
jmp
xchg
push
in
jg
loope
sbb
cli
lods
push
mov
aaa
pop
ins
and
out
or
(bad)
ss
leave
push
dec
cmps
sbb
inc
xor
pop
sbb
test
int
jp
mov
cwde
xor
outs
mov
sub
mov
mov
add
dec
gs
and
dec
add
push
xor
inc
inc
test
xor
popa
mov
cmp
sub
or
adc
cs
inc
jo
mov
cld
inc
int3
test
hlt
sbb
das
and
retf
fwait
ret
adc
mov
sbb
jg
(bad)
jg
sub
and
and
(bad)
pop
bound
bts
in
in
jg
fldcw
pushf
adc
push
jnp
daa
adc
mov
and
jge
jmp
add
push
mov
(bad)
mov
mov
nop
sar
test
inc
mov
mov
pop
sbb
stos
adc
jle
ja
cmps
div
ins
hlt
add
js
test
and
ins
pusha
fs
mov
sbb
nop
movs
std
popf
aad
fwait
repz
xchg
out
and
inc
sbb
mov
jmp
stc
add
(bad)
add
cmp
jmp
mov
pop
mov
or
popa
sub
mov
inc
ret
jo
push
cmp
push
dec
push
out
dec
jno
jne
aam
xchg
or
jecxz
rol
xor
mov
cmp
dec
adc
ret
dec
je
cmp
fwait
out
push
call
cmps
(bad)
sbb
out
or
adc
sbb
mov
movs
ret
popf
pop
sbb
popa
pop
aam
add
adc
sbb
ins
and
adc
dec
sub
pop
push
movs
lds
int
in
jns
mov
in
jne
cwde
jmp
aaa
aaa
test
add
lods
mov
test
add
dec
out
(bad)
popf
pop
xor
pop
into
imul
in
aad
and
outs
mov
into
outs
mov
arpl
push
add
loopne
adc
pop
neg
popf
pop
addr16
dec
xor
cmp
pop
pusha
mov
jne
mov
mov
(bad)
and
pop
test
mov
and
mul
outs
mov
push
adc
mov
mov
fucomip
in
pop
jo
pop
adc
aad
loope
test
sbb
mov
bound
dec
stos
jb
nop
dec
jne
fcomi
mov
mov
jo
mov
out
dec
lods
int
outs
dec
adc
push
dec
clc
cmc
hlt
pop
xchg
lds
and
ficom
int
rol
dec
sar
enter
jb
out
enter
or
push
fnstenv
(bad)
out
fsubr
jmp
loopne
ret
cdq
dec
adc
les
inc
movs
call
pop
dec
call
push
mov
mov
je
loope
stos
inc
shl
mov
fdivr
mov
test
arpl
frstor
mov
cmps
js
xchg
es
ret
dec
out
pop
movs
call
push
mov
jle
inc
mov
add
or
push
cmps
shl
repz
mov
leave
fs
es
addr16
sbb
mov
mov
mov
jge
ja
sbb
mul
cmps
aad
or
fisubr
or
sub
out
inc
xchg
dec
lods
lods
enter
or
push
pop
ss
jecxz
int3
ret
fwait
sti
or
pusha
adc
push
adc
retf
retf
sahf
add
pop
or
loop
jns
jo
xchg
mov
add
jne
inc
adc
fs
mov
aam
and
pusha
dec
inc
push
mov
push
ret
mov
sbb
mov
in
fidiv
popf
xlat
pop
xlat
xor
out
xor
mov
mov
push
retf
mov
dec
aaa
jnp
repnz
loop
lds
xor
or
push
cmp
mov
mov
enter
dec
jnp
jge
daa
repz
xchg
cmp
repnz
or
ss
push
dec
test
fwait
sub
sti
mov
bound
fisubr
fcomi
sub
cmp
mov
ret
ss
(bad)
cdq
inc
or
mov
or
(bad)
push
pop
retf
lock
retf
xor
adc
jl
jns
std
xchg
jnp
test
retf
xchg
repnz
sub
cmps
jecxz
sbb
(bad)
add
sahf
jge
add
pop
(bad)
popa
add
inc
add
mov
adc
out
sbb
sti
xor
adc
jno
jno
jmp
mov
inc
add
rcr
mov
and
xchg
push
mov
mov
lahf
shl
jo
xchg
dec
aas
dec
jbe
mov
imul
imul
fstp
jmp
xor
stc
push
sub
mov
and
sub
dec
lea
cmp
icebp
push
pop
push
sub
clc
popf
push
dec
leave
and
lock
xor
cmps
int3
cmp
inc
in
xchg
out
test
push
or
nop
adc
rcr
pop
fstp
ins
int3
mov
mov
adc
xchg
xor
or
adc
push
and
(bad)
and
loope
mov
jecxz
jle
dec
aaa
test
(bad)
add
fistp
ja
repnz
lahf
clc
cmp
sti
(bad)
clc
(bad)
imul
jae
cs
xchg
dec
(bad)
cmp
cmps
shr
mov
cld
pushf
sbb
lahf
push
add
jg
repz
mul
fst
mov
and
aam
lahf
pop
dec
addr16
test
jne
retf
dec
dec
xchg
sub
mov
sub
shl
push
push
ins
jno
xlat
add
mov
icebp
sahf
rcr
or
xchg
cmp
ja
mov
inc
addr16
imul
sbb
ror
aas
rcl
xchg
jnp
sbb
into
icebp
mov
mov
and
popa
test
xor
mov
cmc
aad
or
in
cld
pusha
ficomp
lods
xor
mov
xor
loopne
sub
lods
xchg
xor
cmp
dec
inc
dec
cwde
adc
jae
pop
push
xor
xor
fs
fsub
mov
and
ficomp
clc
and
enter
jno
fcmovb
push
sbb
mul
push
add
ins
mov
(bad)
mov
xchg
ja
xor
inc
or
repnz
outs
out
dec
cld
xchg
pop
fwait
mov
or
xchg
sahf
mov
aaa
adc
cmp
lds
hlt
je
mov
cmp
pop
or
lods
push
push
loope
(bad)
adc
jge
fcom
jecxz
jmp
jg
leave
sub
shl
dec
dec
jle
push
mov
sbb
dec
aad
mov
mov
xchg
inc
(bad)
sub
push
pushf
xchg
dec
jecxz
movs
shl
sar
mov
adc
adc
jmp
push
cmps
repz
bound
pop
pop
in
mov
mov
jae
rcr
xor
fisubr
push
cmc
xor
xor
adc
sbb
enter
pusha
call
in
pop
pop
mov
xchg
add
sbb
jl
(bad)
push
mov
push
pop
mov
mov
ins
mov
adc
nop
sbb
and
sahf
int3
ss
mov
lods
inc
mov
add
ret
retf
repnz
dec
sbb
xor
adc
mov
jp
cmc
jbe
jno
or
mov
and
jne
test
retf
mov
inc
(bad)
or
or
dec
clc
rol
dec
mov
jge
mov
lea
sub
pop
(bad)
inc
and
jnp
lods
int3
push
xor
mov
mul
or
mov
(bad)
test
ds
lods
fld
adc
scas
sub
push
je
mov
jmpw
cmp
pushf
or
outs
(bad)
pop
or
mov
ins
aas
outs
call
pop
dec
or
movs
mov
inc
call
xchg
inc
cld
inc
mov
mul
ror
xor
rep
out
ins
xor
ret
ffreep
fild
shr
inc
repnz
sub
dec
out
push
mov
rcl
je
test
imul
je
mov
in
aad
cmp
(bad)
push
shr
mov
rcr
cmp
push
cmp
test
ss
mov
cmp
mov
inc
stos
fsub
mov
sub
mov
ins
in
outs
stos
outs
fstp
sub
adc
mov
loopne
push
mov
xor
icebp
ficomp
daa
mov
sbb
add
jne
cmps
sub
or
adc
mov
(bad)
fcomp
aad
mov
mov
cmp
pop
aas
fmul
fcmovnu
sar
push
dec
int3
xor
sti
xchg
sub
int3
add
pop
(bad)
pusha
ins
jbe
xchg
sti
dec
push
cli
loopne
pop
(bad)
arpl
into
out
adc
les
jno
stc
pop
inc
addr16
imul
mov
cmp
mov
aam
cs
lods
and
rcl
mov
jb
push
call
push
mov
cmps
out
dec
fsubr
loopne
mov
adc
or
or
xchg
repz
adc
push
mov
in
lahf
pusha
fcmovnb
xor
mov
outs
scas
cs
jns
stc
test
and
inc
mov
dec
push
loopne
cs
mov
pop
fnstcw
shr
xchg
inc
cld
loop
mov
jg
shl
popa
mov
rol
in
and
cmp
popa
dec
les
das
addr16
in
and
or
mov
jbe
mov
cwde
dec
in
outs
cs
and
cli
jnp
and
out
in
sbb
xchg
sub
int
mov
push
push
sbb
or
fwait
sbb
sti
jp
or
enter
sbb
xor
xchg
sbb
lods
shl
ja
jae
aas
test
in
dec
fxch
dec
test
sar
ret
add
out
stos
jns
das
call
push
cmp
or
aam
fbstp
inc
push
fidivr
push
test
(bad)
repnz
xchg
rcl
nop
in
int3
lods
sbb
popa
out
jge
cld
data16
aad
mov
stc
mov
mov
sti
mov
and
fcmovnbe
ins
jmp
int
and
out
lods
jmp
xor
jmp
or
popa
cmp
(bad)
lock
fnstenv
inc
arpl
cmc
lahf
dec
xchg
sub
cmp
test
mov
mov
add
adc
cmp
out
lods
pop
mov
mov
or
enter
ret
out
cwde
std
adc
lea
icebp
xchg
mov
xchg
fidiv
punpckhdq
push
push
sti
std
stos
(bad)
fcmovu
add
add
dec
popf
mov
and
outs
retf
lods
jns
arpl
daa
(bad)
pop
push
mov
push
add
inc
sub
xor
jecxz
loope
ins
cli
ror
sub
jno
adc
cld
shl
in
inc
adc
call
mov
add
mov
mov
mov
ss
fdiv
mov
inc
mov
dec
call
outs
lock
push
adc
div
lea
enter
sub
int
gs
jmp
dec
ja
iret
sbb
adc
mov
add
mov
mov
in
cli
pop
mov
into
push
xchg
aad
pop
imul
adc
add
mov
mov
inc
les
xchg
or
repnz
ret
hlt
fcomp
repnz
inc
ret
jecxz
sti
mov
popf
in
sbb
fwait
outs
inc
adc
popa
dec
jno
(bad)
jp
add
push
sub
lods
es
int3
cmp
jb
or
dec
movs
shr
xchg
outs
sahf
lds
aas
mov
xor
mul
adc
nop
xor
stos
jmp
nop
pop
or
xchg
sub
mov
mov
pop
and
mov
sahf
retf
pop
shl
adc
fiadd
jle
jle
cmp
xchg
and
and
(bad)
inc
retf
jno
es
iret
dec
mov
sub
or
aad
jge
jmp
das
pop
mov
loopne
data16
stos
dec
(bad)
mov
jge
mov
cld
inc
outs
mov
push
lock
jge
neg
or
xor
jle
js
pop
mov
jo
jg
mov
mov
inc
push
fidiv
inc
jbe
xor
xchg
and
outs
shl
adc
inc
mov
fisttp
iret
sbb
add
ins
popa
test
cs
fidivr
push
mov
dec
pop
push
out
cmp
pop
push
mov
frstor
inc
test
xchg
inc
mov
outs
xlat
sti
sbb
loopne
dec
inc
sub
push
in
inc
mov
pop
mov
xchg
aam
push
adc
jmp
xchg
pop
outs
loope
jnp
and
ret
inc
fwait
jmp
pop
lea
pop
in
shl
adc
clc
ret
mov
sub
xor
outs
jmp
int
cmp
popf
int
gs
test
retf
push
lea
and
pop
xor
loopne
enter
gs
xor
fcmovnbe
and
dec
pop
dec
loopne
xchg
or
lock
jne
inc
fidiv
mov
push
les
(bad)
stc
pushf
int3
dec
xor
mov
adc
push
imul
ins
xor
cmp
push
dec
aad
aam
add
mov
mov
mov
xchg
inc
loope
or
repnz
xor
jmp
out
mov
stos
inc
xchg
fild
cmp
bnd
sahf
clc
mov
sbb
pop
imul
jg
sbb
xor
xchg
ins
repz
jo
jnp
inc
sbb
call
mov
neg
in
lods
xor
inc
lods
out
pop
xchg
or
sub
(bad)
jp
rcl
loope
les
in
jmp
sub
adc
or
sub
cmp
fdivr
pop
loop
nop
mov
jb
push
jecxz
push
arpl
movs
mov
cs
iret
mov
adc
or
test
mov
(bad)
ret
ja
cmp
push
jg
xchg
sub
push
loop
and
push
das
jmp
test
out
push
inc
cmp
faddp
pusha
mov
cs
jg
jns
mov
inc
push
(bad)
out
std
fidiv
shr
and
(bad)
xchg
add
dec
cs
(bad)
xchg
or
bound
dec
cli
(bad)
arpl
pop
fsubr
inc
inc
cmp
dec
mul
mov
ret
or
popa
dec
dec
and
lock
mov
(bad)
fwait
ins
adc
jnp
inc
cmps
daa
sbb
sub
icebp
pop
mov
out
popa
outs
pop
cdq
push
cmps
jmp
addr16
retf
(bad)
jecxz
and
dec
ins
mov
div
fistp
add
bound
push
sub
push
pop
cmps
inc
out
xchg
inc
xor
in
movs
cmp
repz
push
call
aas
arpl
std
addr16
repz
dec
sahf
cmp
shl
push
sbb
(bad)
pusha
pop
push
aam
mov
movs
call
adc
movs
sbb
push
and
loopne
sub
scas
ss
cmp
loopne
sub
adc
sbb
mov
push
cmp
adc
outs
cmps
mov
push
ins
or
jmp
jae
push
pushf
push
jmp
fstp
or
aam
xchg
bound
sahf
mov
fwait
stos
dec
sub
push
jmp
jb
icebp
lea
adc
mov
inc
sahf
xchg
retf
xor
loopne
dec
and
xchg
fadd
pop
into
std
sahf
xor
pop
push
jge
lea
in
cld
dec
xor
mov
mov
add
sbb
jl
mov
test
mov
(bad)
movs
mov
rol
dec
(bad)
in
test
cld
rcr
fistp
jb
(bad)
adc
lods
test
ret
repnz
in
mov
(bad)
ror
imul
(bad)
xor
mov
nop
retf
push
dec
inc
mov
jp
xchg
adc
rcl
(bad)
int
push
mov
xor
jns
dec
xchg
jl
ins
jp
fisubr
and
(bad)
push
cmc
scas
js
in
int3
lahf
jecxz
xchg
mov
loopne
stos
aam
jbe
test
stos
fwait
imul
sbb
aad
dec
nop
sar
popf
jmp
pop
sar
mov
iret
inc
js
add
(bad)
(bad)
out
xor
cmp
(bad)
mov
cmp
mov
enter
and
scas
mov
push
dec
jg
mov
sub
mov
daa
(bad)
nop
ret
or
xchg
pop
cmp
fdiv
int
loopne
pop
dec
dec
sti
idiv
scas
mov
aad
sbb
(bad)
mov
xor
popf
sub
add
pop
xchg
push
mov
fwait
sub
sahf
jmp
xor
sbb
stc
adc
repz
lods
inc
jne
cmc
xchg
xchg
push
fstp
sti
test
std
outs
push
add
not
mov
mov
xchg
xchg
sub
add
sub
adc
jb
frstor
sub
jp
jge
adc
out
mov
xor
mov
repnz
push
out
jecxz
ret
imul
and
iret
ins
pop
push
mov
mov
gs
ret
std
das
fnsave
sbb
or
push
popf
mov
icebp
daa
(bad)
sti
das
shl
and
add
(bad)
or
call
mov
sub
cmps
cmp
fsub
add
adc
les
sbb
dec
ret
xchg
push
jns
std
aad
jb
dec
inc
xlat
aad
mov
inc
xchg
xor
adc
mov
test
sub
test
repz
adc
scas
jno
mov
pop
mov
pop
add
mov
dec
call
or
mov
xchg
add
dec
stos
and
loope
lods
dec
xor
and
and
or
pop
cld
aad
or
xlat
sub
fucomp
test
pop
sbb
fmulp
cmps
retf
mov
and
ja
and
out
inc
out
loope
pusha
iret
sbb
xchg
jle
mov
les
and
sbb
mov
out
into
xchg
or
aaa
pop
out
daa
xor
jne
stos
inc
outs
jecxz
jae
dec
jne
hlt
adc
in
pop
ds
sub
dec
stos
mov
pop
scas
loop
adc
(bad)
jmp
es
int3
pop
aaa
out
pop
fcom
leave
cmc
test
dec
dec
icebp
sbb
jg
iret
popa
mov
pop
mov
sbb
mov
xor
loope
test
outs
fisttp
cmp
mov
push
shl
pop
loopne
cmc
je
fs
push
sbb
inc
call
ror
leave
sti
pop
mov
cs
out
sub
adc
or
repnz
pushf
aad
and
ret
mov
ret
iret
test
mov
sub
mov
inc
int3
push
ret
pop
xstore-rng
cmps
ret
jge
dec
cwde
push
inc
push
sbb
xlat
std
pop
pushf
mov
mov
in
mov
out
rcl
inc
push
pop
repz
sbb
mov
pop
xchg
fidiv
sbb
in
stos
pop
inc
sbb
in
xor
fidiv
cmc
xor
push
rol
and
xor
cmp
call
fs
inc
loopne
and
in
rol
fcom
movs
out
pusha
inc
scas
int3
addps
inc
icebp
int3
pop
sbb
xchg
mov
ret
dec
mov
and
mov
pop
add
int
cmp
push
gs
sub
mov
xor
cwde
cmp
lahf
sbb
jg
leave
pop
pop
xchg
cmp
std
jbe
test
push
sar
bound
mov
push
stc
xchg
fwait
jp
and
clc
xchg
in
sub
loop
ins
mov
pop
outs
out
ja
outs
aaa
mov
popa
sub
scas
call
adc
xchg
inc
mov
adc
ror
or
mov
adc
cmc
inc
fimul
xchg
cmp
imul
cmp
icebp
(bad)
adc
dec
dec
and
scas
bound
call
adc
adc
add
sbb
or
or
push
(bad)
ss
popf
ret
xlat
enter
cmps
add
push
out
pcmpgtw
push
sbb
daa
fld
ret
call
fcmovu
or
dec
xor
in
popf
xor
scas
inc
enter
add
mov
aad
fcom
ret
mov
movs
enter
mov
sbb
pop
fadd
xchg
stos
and
or
out
pop
adc
mov
jo
xchg
clc
xchg
scas
ins
rcl
int3
sub
ret
in
jbe
inc
popa
std
mov
cs
or
pushf
lds
sar
jmp
enter
and
in
pop
inc
call
std
push
js
aam
rol
sahf
add
sar
hlt
(bad)
push
fcmovnu
xchg
test
scas
addr16
push
lea
adc
adc
add
sub
jp
or
das
sub
sbb
cmp
inc
fbld
sbb
pop
rol
sti
inc
das
cmp
mov
sub
push
inc
cwde
add
fld
dec
jne
stc
or
mov
adc
aaa
sbb
mov
jecxz
retf
xchg
dec
retf
mov
repnz
inc
sub
shl
aaa
add
mov
pop
mov
aad
sub
jp
adc
cmp
adc
punpcklwd
outs
cmps
cmp
mov
pop
fwait
xor
cwde
sub
dec
pop
push
inc
mov
xchg
jnp
sbb
fs
jns
fdiv
data16
aaa
mov
push
sub
int3
jmp
bound
call
adc
inc
retf
push
sub
cld
rcr
in
and
(bad)
mov
popf
cmp
push
(bad)
jae
jbe
(bad)
retf
stos
test
(bad)
loope
test
push
imul
enter
jo
arpl
mov
test
and
xor
int3
in
pop
retf
cs
dec
icebp
in
mov
xchg
push
and
sub
mov
lds
out
lea
mov
bound
push
movs
mov
cmp
jb
fsubr
out
fdiv
fsub
sbb
jecxz
loopne
mov
loope
add
add
and
mov
add
dec
sbb
in
rol
sub
or
and
das
jmp
outs
scas
bound
mov
movs
paddusb
icebp
pop
push
or
add
in
sbb
in
cmps
rol
mov
xchg
jmp
mov
retf
mov
fcmovnu
sub
push
push
jecxz
outs
cwde
xchg
ret
jle
je
sbb
xor
sbb
aas
inc
aas
mov
test
add
pop
leave
pop
scas
cli
jp
retf
xor
dec
std
in
je
adc
push
xor
cmp
mov
cmp
jo
push
cmp
jl
daa
scas
xchg
push
fadd
add
dec
fisub
(bad)
es
and
push
mov
loop
lds
jno
aas
mov
jbe
or
xor
and
(bad)
mov
sub
pop
push
dec
add
rcr
mov
mov
popa
xchg
fdiv
lahf
jns
aad
mov
push
das
jnp
cld
js
nop
xlat
add
and
sub
addr16
es
cmp
stos
dec
repz
jmp
jmp
sbb
push
xor
mov
fucomi
imul
push
mov
popa
pop
shl
mov
dec
sbb
cmp
mov
lock
mov
movs
retf
(bad)
jmp
dec
sub
sub
retf
sti
push
in
js
fild
xor
xor
imul
cdq
cmp
mov
ins
push
aad
cmp
jae
jns
mov
lods
adc
adc
jb
sbb
cmp
jb
in
inc
pop
mov
mov
and
jno
ret
push
xchg
or
add
or
xchg
jne
clc
inc
js
in
mov
stc
leave
dec
jg
adc
aam
sub
jmp
ins
cmps
add
in
call
fwait
cmps
dec
out
mov
lods
nop
(bad)
lods
jbe
xchg
mov
jnp
mov
sbb
ror
cmp
push
adc
cs
fwait
mov
in
(bad)
(bad)
rcl
data16
loope
les
push
mov
xchg
pop
scas
jbe
mov
mov
mov
mov
push
push
inc
cmp
mov
outs
xchg
ror
ja
sbb
push
bound
inc
lock
fdivr
cmc
into
mov
xchg
rol
fs
movs
push
or
mov
les
out
in
jl
ret
jmp
mov
mov
daa
scas
outs
xchg
in
dec
cmp
lods
lds
adc
adc
pop
xchg
xchg
fisub
mov
xor
cmps
fisttp
dec
ror
daa
je
sub
and
(bad)
test
jo
bound
mov
repnz
adc
or
(bad)
loop
(bad)
dec
test
inc
or
sub
mov
inc
movs
ds
fnstenv
push
jae
outs
shld
addr16
push
push
mov
dec
imul
push
jmp
xor
ss
sbb
scas
pop
pop
lds
test
push
stc
in
rcl
jno
inc
mov
scas
cli
pusha
rcl
jmp
mov
inc
inc
xchg
push
mov
jne
or
movs
rcl
sub
jl
sbb
outs
cmps
add
aas
or
cmp
xor
inc
sbb
fs
into
pushf
push
popa
inc
adc
push
adc
stc
push
pop
sbb
scas
add
jecxz
test
ja
psllw
add
jbe
cmp
ins
dec
fisttp
inc
fwait
outs
mov
add
sbb
ror
pop
gs
cmp
pop
pop
xchg
retf
lock
push
add
aad
sub
les
aas
test
ds
fnstenv
addr16
xor
xchg
cli
lds
pop
in
jo
retf
iret
push
cmp
aam
pop
fyl2x
inc
sub
(bad)
push
lods
sahf
pusha
popa
adc
les
shr
addr16
jno
xchg
xchg
vmaxps
inc
adc
fiadd
adc
lods
loop
sub
sub
xor
in
mov
cmp
outs
sbb
mov
stos
inc
adc
pop
push
cwde
mov
cmp
out
(bad)
xchg
shl
fwait
clc
pop
mov
lock
inc
out
fs
mov
(bad)
bound
inc
mov
xchg
ds
push
xchg
pop
imul
adc
jmp
xchg
or
lds
dec
(bad)
and
inc
js
imul
xchg
hlt
pop
mov
je
mov
int
test
mov
ret
xor
das
cmp
sub
or
jns
outs
inc
fdivr
push
pop
mov
loopne
jno
movs
mov
ror
sbb
mov
test
test
test
mov
or
retf
addr16
aam
xor
je
cmp
jp
xlat
idiv
inc
sar
dec
jecxz
cmp
cmp
sbb
cs
adc
pushf
outs
sub
xchg
hlt
stos
je
mov
cmp
dec
ss
shl
xor
or
data16
and
and
inc
nop
ror
jne
adc
xor
inc
mov
cmova
adc
pushf
xor
mov
and
ret
out
jg
fwait
sar
mov
test
push
in
mov
add
xchg
sub
pop
enter
mov
xor
sbb
mov
mov
(bad)
pop
pusha
adc
inc
inc
fwait
xchg
push
sti
(bad)
dec
jmp
xor
jnp
(bad)
xlat
jp
mov
pop
xchg
lods
leave
sbb
cwde
fstp
fmul
inc
out
daa
es
jmp
fnstcw
dec
ds
push
cld
adc
dec
push
(bad)
and
not
mov
pusha
xor
xor
jo
test
int3
add
mov
aas
mov
sbb
jge
dec
(bad)
pop
out
mov
(bad)
daa
cmp
mov
pop
retf
mov
jp
adc
xchg
xor
scas
pushf
cmp
pop
or
push
add
cmp
imul
push
sub
add
hlt
add
pop
ficomp
scas
rcl
and
xchg
cli
repz
int3
sub
stos
aaa
mov
lods
mov
push
lock
xchg
test
inc
hlt
push
sbb
sub
in
stos
jo
mov
xchg
add
xor
adc
loopne
lea
mov
aaa
pop
and
inc
or
mov
imul
xchg
jp
mov
outs
jmp
jb
and
pusha
mov
push
cmp
cwde
mov
push
pop
icebp
and
call
xlat
ins
mov
pop
bound
fwait
cmp
xchg
xchg
inc
lds
xchg
mul
dec
mov
cmp
cli
hlt
push
sbb
cs
dec
cdq
push
mov
lock
dec
xchg
xor
pop
adc
pushf
and
mov
adc
pusha
outs
sbb
lods
xlat
cmp
mov
pop
inc
sysexit
cmp
adc
ins
fwait
adc
inc
loopne
adc
cmp
mov
popf
push
pop
jns
mov
pop
ss
or
and
push
pusha
and
in
(bad)
pop
xchg
add
sbb
pop
mov
jg
cmp
mov
repnz
lods
ins
xor
inc
imul
xchg
pop
jmp
cwde
mov
shr
sbb
daa
outs
adc
inc
inc
aam
push
imul
mov
adc
dec
sar
(bad)
sbb
jbe
adc
jno
cmp
popf
mov
inc
mov
xor
xlat
mov
or
fsubr
bswap
push
and
pop
pusha
dec
push
jno
rcr
jne
pop
xchg
std
lods
outs
in
sbb
push
pushf
ss
xchg
rcl
(bad)
je
test
mov
popf
enter
mov
gs
fidivr
mov
jmp
mov
test
adc
or
mov
xchg
push
fidiv
mov
xchg
adc
inc
pop
sbb
xor
xor
and
out
mov
lods
fnsave
movs
inc
xchg
mov
mov
mov
sbb
mov
jmp
and
mov
pop
pusha
enter
lahf
test
and
cs
lds
jae
aad
retf
popf
mov
add
and
outs
dec
cmp
cmc
(bad)
mov
mov
in
loope
mov
xchg
pop
in
lea
stos
jae
daa
cld
mov
sub
sub
cld
or
pop
cmc
cmp
push
mov
mov
scas
call
addr16
cmp
adc
test
aaa
call
or
inc
mov
int3
jp
cmps
(bad)
jge
pop
or
outs
dec
mov
pushf
ins
nop
mov
daa
int3
sbb
popa
dec
or
jecxz
call
js
sar
(bad)
mov
dec
lods
dec
cmp
adc
mov
pop
mov
xchg
not
out
jbe
jno
mov
dec
and
pop
call
dec
xor
mov
inc
or
scas
or
cmp
ds
xor
(bad)
shl
or
scas
in
mov
and
movs
or
fldcw
or
xlat
loopne
mov
out
xor
dec
stos
xchg
sub
call
dec
sub
ror
ror
xor
mov
popf
mov
and
fisubr
shr
xor
ss
mov
mov
cmp
cmp
dec
xor
in
loope
mov
sub
loopne
aad
pop
cdq
push
movs
sub
popf
and
(bad)
stc
leave
jne
sahf
inc
sub
mov
adc
adc
in
mov
add
mov
mov
or
xchg
repnz
mov
and
or
lock
adc
(bad)
movs
jb
out
lds
sahf
xor
repz
jl
jns
mov
dec
and
adc
mov
sbb
lock
outs
mov
inc
cmpxchg
popf
sysenter
jae
inc
scas
push
jg
lds
icebp
aam
and
nop
test
fwait
add
test
outs
jne
xchg
bound
dec
mov
jns
jo
ret
popa
jle
xor
mov
repnz
scas
loope
mov
stos
enter
or
mov
push
fcmovbe
sbb
mov
xor
lods
add
or
lahf
sbb
mov
jbe
add
mov
mov
and
inc
jo
mov
pushf
mov
xor
or
lahf
jo
ins
fs
xor
call
arpl
sub
inc
sub
xchg
(bad)
retf
cmc
aas
(bad)
ds
sar
das
mov
or
xchg
popf
je
fld
add
test
jb
inc
push
sub
or
jmp
jnp
aas
dec
dec
(bad)
inc
jo
push
repnz
jle
cmp
dec
push
xchg
test
dec
push
mov
into
mov
jle
mov
sar
jae
fadd
(bad)
ret
cmp
jp
push
adc
aaa
in
dec
cmp
adc
adc
aas
lds
pop
add
dec
cwde
pop
ins
jp
sbb
sbb
ds
and
push
inc
mov
mov
push
lock
adc
cld
push
pop
sti
pop
test
or
inc
cmp
out
adc
xor
rol
add
pusha
mov
fstp
fdivr
test
mov
adc
add
int3
lds
or
cs
jge
scas
imul
push
cmp
mov
push
dec
cmc
push
dec
mov
or
pop
dec
mov
or
inc
xchg
cmp
movs
xor
adc
call
icebp
xchg
lds
rcl
sbb
out
jnp
mov
aaa
lods
push
jbe
lahf
jno
push
xor
jns
push
mov
mov
fbstp
adc
sub
pop
shl
xchg
sub
adc
or
arpl
nop
xchg
mov
xchg
fst
mov
fs
rep
mov
push
cmp
ins
je
mov
fdiv
mov
cmp
mov
shl
push
push
sbb
out
sub
lock
pop
jns
and
mov
push
xchg
cmp
push
fs
mov
jg
sub
fnsave
mov
sbb
dec
dec
in
repnz
xchg
repz
jnp
mov
jb
inc
and
add
cmp
pop
cli
aad
push
outs
jae
bound
cmp
call
fild
or
add
fld1
data16
pop
icebp
mov
lds
mov
stc
clc
or
xor
push
enter
push
out
lea
pop
scas
adc
jecxz
jmp
iret
jmp
sub
mov
div
jnp
popf
push
fldlg2
fdiv
mov
std
push
lea
mov
ds
jmp
das
movs
fnstenv
xchg
mov
pop
arpl
dec
push
arpl
sub
mov
and
fwait
daa
das
inc
lds
cmps
scas
xor
ror
jno
push
pop
bound
mov
das
retf
inc
lea
gs
outs
mov
mov
lock
mov
out
popf
mov
jl
repz
leave
cli
nop
sub
movs
outs
imul
fisub
xchg
push
clc
xchg
or
pop
in
cmp
jb
xchg
jg
mov
es
aad
fisttp
sub
mov
test
cmps
ja
xor
inc
adc
out
cmp
lods
jae
or
es
nop
cs
cmps
jle
adc
mov
xchg
mov
inc
popa
retf
jae
mov
mov
push
push
mov
xchg
push
add
bound
push
pop
int
add
aaa
add
jne
mov
inc
sbb
jmp
clc
jecxz
adc
out
jmp
push
mov
push
fldenv
push
les
iret
movs
mov
mov
pop
mov
ss
repz
mov
std
iret
aas
rcl
stos
rcl
scas
test
jae
add
or
enter
push
gs
or
inc
cmp
cs
cmc
dec
xchg
push
xchg
xchg
and
into
retf
jnp
shl
pop
fs
mov
jae
(bad)
out
sbb
aas
pusha
sbb
fdiv
sub
add
retf
push
cmc
pop
movs
sub
in
mov
cwde
jns
(bad)
ret
fbld
sbb
mov
shl
test
cmp
imul
pop
neg
(bad)
mov
ja
mov
call
adc
aad
stos
shl
add
out
mov
adc
xor
clc
shl
xor
in
push
fidiv
loopne
sahf
iret
sub
arpl
(bad)
sbb
dec
dec
les
gs
push
mov
fs
sub
fdiv
jg
xor
mov
sub
lods
retf
adc
xor
or
jae
push
lods
add
xchg
retf
hlt
in
rcr
dec
lods
and
ja
add
mov
cmps
fwait
and
dec
dec
or
xchg
fldcw
add
into
lock
inc
gs
ins
mov
xchg
bound
mov
inc
inc
xor
xchg
int3
dec
mov
scas
mov
mov
sbb
(bad)
xor
call
xchg
jne
sub
add
dec
loop
out
out
jmp
jl
int3
dec
sbb
mov
add
mov
lock
inc
xchg
or
push
(bad)
data16
adc
xor
sbb
daa
es
push
test
loopne
pop
dec
sub
push
test
inc
add
inc
mov
test
frstor
mov
nop
or
mov
jne
jae
xchg
jae
(bad)
mov
mov
outs
mov
pop
push
mov
adc
movs
push
(bad)
inc
jmp
sbb
fs
and
sbb
xchg
add
pop
and
(bad)
pop
xchg
outs
dec
push
sbb
outs
(bad)
fistp
fnsave
cwde
mov
cld
loop
in
(bad)
push
int3
rol
jne
stc
pushf
retf
not
push
xchg
sub
adc
ds
fwait
cwde
xor
pop
cmp
sar
push
scas
lds
movs
pop
xchg
data16
or
add
and
call
sbb
out
mov
adc
ja
retf
fdivr
push
shl
clc
xor
cli
hlt
dec
mov
int
btc
nop
shl
icebp
mov
xor
dec
or
ja
(bad)
pop
mov
inc
mov
je
stos
outs
cmps
cld
test
inc
jne
jl
adc
jno
loop
sar
jmp
cmp
aas
cmp
popa
and
das
push
movs
or
sub
inc
push
fidivr
cmp
nop
inc
sub
pop
jbe
outs
adc
push
jno
(bad)
xor
das
out
pushf
sbb
out
pop
add
pop
xchg
ss
sub
sub
add
mov
popa
js
(bad)
fldenv
xchg
in
stos
sub
nop
mov
loopne
cmp
lds
and
pop
mov
add
(bad)
pop
aad
ss
aaa
test
sahf
out
jbe
cmc
push
ror
add
xchg
mov
mov
lods
xchg
dec
push
xor
shl
adc
stos
aaa
jbe
push
adc
jno
ins
jge
ins
repnz
stos
mov
fadd
mov
dec
cmc
add
add
imul
sbb
push
sbb
imul
mov
adc
dec
call
cmp
mov
or
popf
jg
mov
mov
test
xchg
push
sbb
jg
shl
dec
rep
rcr
xor
outs
inc
lods
movs
sbb
fistp
daa
test
push
out
int3
fild
movs
and
sub
mov
pop
xchg
or
pushf
(bad)
imul
mov
cmp
scas
sub
ret
aam
jmp
(bad)
inc
loop
fistp
stos
pop
mov
mov
(bad)
neg
add
inc
adc
ret
pop
idiv
add
js
inc
push
xor
sub
fiadd
mov
sbb
xchg
xchg
push
mov
ret
xor
test
mov
mov
jle
out
movs
adc
mov
and
call
and
mov
into
mov
sub
add
cs
(bad)
aam
bound
stc
scas
ins
inc
lea
cdq
cmp
pop
mov
or
sub
push
popf
xchg
add
xchg
push
mov
lods
and
xor
dec
and
div
add
in
ret
js
pop
jnp
sub
xchg
push
push
xchg
sub
mov
inc
loop
mov
push
aaa
shl
mov
test
std
sbb
adc
hlt
or
xchg
repnz
jecxz
sar
add
out
dec
or
loope
fild
add
xchg
ja
xchg
stos
ret
sti
mov
and
(bad)
stc
in
test
out
movs
int
scas
mov
jnp
jmp
mov
mov
jg
std
loop
inc
popa
repz
ja
jns
lock
mov
cdq
pop
mov
ficomp
lds
xchg
loope
inc
sub
jl
jmp
push
and
inc
jle
dec
inc
jg
inc
pop
and
fsubrp
aad
mov
mov
cwde
push
into
mov
adc
mov
gs
(bad)
xchg
push
dec
or
ficom
jmp
pop
mov
test
jg
dec
je
(bad)
pop
rcr
push
dec
cmp
loop
add
inc
xor
jb
mov
ret
xchg
push
push
xor
jb
push
dec
(bad)
repnz
cmp
fucomi
jmp
in
test
add
pusha
and
and
mov
and
pop
imul
stos
jae
movs
cmp
dec
int3
mov
and
mov
rol
sti
inc
inc
test
jmp
xchg
jbe
mov
hlt
mov
inc
push
call
xchg
xor
loope
(bad)
cli
pop
sahf
pop
mov
push
rol
inc
enter
or
dec
or
sti
fcmovb
movs
cmps
call
fwait
jmp
inc
mov
xor
idiv
or
shl
je
and
cmp
pop
cmps
jecxz
shl
mov
sbb
sub
push
imul
rcl
daa
out
loopne
pop
xchg
and
pop
jb
mov
sbb
(bad)
and
(bad)
test
dec
fs
js
sbb
inc
shl
cmp
fidiv
in
dec
xor
ja
jge
dec
jge
push
shr
pop
xchg
push
jae
add
pop
jb
ja
adc
test
mov
inc
and
addr16
push
in
mov
sbb
retf
jle
mov
fild
mov
mov
dec
mov
inc
shl
lds
(bad)
retf
fcmovnu
mov
xchg
pop
enter
popa
sbb
lock
in
test
retf
rcr
mov
sbb
fadd
lods
sub
cwde
js
add
(bad)
js
inc
shl
cdq
dec
ins
jl
pop
mov
sub
or
sbb
push
add
loope
push
pop
adc
cmp
stos
js
dec
dec
and
mov
fiadd
push
fcom
dec
mov
ss
inc
cmps
xor
lea
xchg
cmp
imul
xchg
mov
jns
sub
jno
fidiv
in
lods
lock
xchg
ins
and
imul
jp
cli
add
push
pop
mov
in
xor
(bad)
rcl
nop
pop
xchg
test
and
data16
jo
inc
add
rcr
mov
push
cmps
pop
aaa
inc
nop
or
jl
pusha
out
mov
shl
outs
jge
cmps
repz
jecxz
and
xor
stos
mov
ret
or
jp
test
sub
in
mov
xor
rol
inc
mov
test
sbb
sbb
test
pop
sahf
out
imul
lock
fst
and
stos
loop
or
or
or
dec
sti
xor
popf
in
aas
int
movs
cdq
jns
cmp
out
jmp
int3
lahf
(bad)
in
push
ror
adc
movs
or
push
xchg
push
nop
sbb
adc
and
sbb
fs
mul
cmp
outs
jnp
xchg
xchg
repz
sbb
cmps
mov
xchg
add
adc
mov
ds
(bad)
push
pusha
sbb
ss
xor
mov
sub
cmp
icebp
pop
adc
xchg
call
movs
stos
dec
shr
inc
xchg
retf
mov
cmp
add
clc
jge
jnp
or
xchg
and
mov
std
test
stc
test
push
pop
int
pop
fidiv
xor
ins
nop
mov
ins
cmp
sbb
into
mov
xor
jg
les
xor
mov
push
mov
sbb
pop
mov
jge
clc
sbb
into
ins
lea
pusha
out
push
xor
je
xchg
mov
sbb
(bad)
and
(bad)
int
or
jl
dec
xor
push
mov
repnz
test
call
xchg
nop
je
xchg
aas
hlt
adc
out
sub
fs
or
mov
test
cmps
mov
(bad)
in
clc
aam
pusha
pop
pushf
inc
test
sbb
idiv
cmp
or
pop
lahf
mov
mov
idiv
or
cmp
into
test
loop
cmp
xor
rcl
lods
add
dec
push
mov
cdq
dec
pop
std
popf
lahf
dec
or
fcomp
add
dec
rcl
jl
iret
arpl
pop
andnps
(bad)
dec
dec
push
add
dec
dec
pop
mov
iret
mov
cmps
inc
aad
pusha
add
jb
(bad)
aaa
test
and
lock
add
and
jae
dec
pusha
ins
pop
std
xor
xor
jae
aas
out
popa
out
inc
mov
pusha
(bad)
and
mov
(bad)
aam
inc
fisub
or
in
jnp
clc
jbe
pmuludq
dec
push
mov
(bad)
adc
fdivrp
xchg
setge
shr
or
in
(bad)
jp
sti
rcr
pop
sbb
sub
cmp
push
push
inc
popf
fcom
push
pop
(bad)
fadd
jno
mov
ret
out
aaa
das
lds
push
ss
inc
mov
fmul
int3
cmp
and
es
cmps
loopne
xor
mov
enter
inc
xchg
fldl2e
mov
repnz
stc
mov
xchg
pop
inc
add
add
neg
mov
les
dec
inc
cmp
mov
jmp
jecxz
inc
cmp
loope
inc
pop
xor
sbb
jmp
mov
je
fldenv
popa
mov
xchg
fldcw
cmps
push
mov
addr16
ret
sub
mov
test
cmp
pop
(bad)
push
mov
inc
(bad)
(bad)
xor
add
repnz
jbe
aas
dec
jp
and
ficom
add
xchg
lahf
mov
pop
jae
push
xchg
sub
mov
and
mov
fiadd
cmp
and
cmps
cwde
mov
adc
in
add
cmp
xlat
jae
or
jae
iret
add
inc
cmps
jge
jge
pop
pop
test
lds
fwait
mov
cmp
xor
into
push
jmp
nop
repz
push
mov
ret
jle
cwde
fcmovnbe
push
mov
imul
lahf
xlat
lea
addr16
fwait
(bad)
test
mov
leave
mov
out
shl
xchg
adc
xlat
mov
call
adc
jmp
not
jnp
fs
lods
(bad)
xchg
(bad)
sub
scas
shr
xchg
push
(bad)
dec
jnp
sti
(bad)
mov
into
ret
or
dec
or
cmp
mov
dec
call
rol
clc
xor
sbb
out
aaa
ins
push
ins
xor
movs
rcr
fdivr
push
xchg
arpl
cmc
aas
mov
mov
hlt
mov
inc
add
and
jb
(bad)
jmp
fisub
mov
add
shr
dec
call
mov
jno
imul
aaa
xchg
rol
mov
pop
sbb
pusha
lock
jnp
cs
in
mov
test
dec
test
jg
push
mov
inc
jp
fsub
retf
cli
jnp
clc
mov
mov
in
jae
cs
add
(bad)
ror
xchg
out
xor
fist
test
test
xor
lock
push
sbb
xchg
iret
pop
rcr
sahf
daa
adc
(bad)
adc
test
ds
cdq
out
or
xor
out
into
jb
lahf
pop
xor
dec
mov
or
sub
inc
mov
push
fld
push
mov
rol
jb
aam
retf
ins
js
(bad)
fiadd
call
rol
stos
mov
sub
outs
je
push
out
daa
dec
ds
jl
push
pop
xor
lods
repnz
clc
jp
push
call
add
(bad)
fdivr
adc
ror
mov
lods
repz
cmps
inc
jle
adc
repz
sbb
shl
or
add
je
nop
adc
push
fnstenv
test
into
sbb
in
ja
sbb
ret
adc
pop
sub
push
adc
sub
into
dec
add
pusha
fimul
pop
fsubrp
cmp
lds
cs
adc
in
sub
adc
mov
cmc
and
cmc
sbb
jg
fs
or
inc
push
lock
add
push
dec
fistp
inc
mov
sub
out
out
adc
inc
xchg
and
aam
sbb
lods
ss
shl
dec
sbb
fdivr
fisttp
shl
ja
fisubr
or
mov
add
ja
and
arpl
aad
sti
out
cli
cwde
clc
das
ins
xor
xchg
retf
stos
repnz
xchg
cmp
sbb
cmp
popa
dec
fmul
adc
fwait
imul
adc
mov
loop
xchg
xchg
or
shl
cmps
mov
push
push
test
popa
jae
dec
cmc
and
daa
scas
fwait
dec
les
xor
out
aas
add
retf
mov
sti
mov
dec
imul
ins
outs
fs
dec
xor
and
aaa
push
outs
iret
mov
fadd
sub
sbb
push
jge
mov
mov
cmps
or
call
sar
mov
mov
lods
icebp
jbe
add
jne
mov
push
jnp
push
test
stos
(bad)
not
rcr
(bad)
mov
cmp
push
fiadd
inc
cdq
add
xor
stos
sub
cld
sub
out
mov
add
fistp
test
and
mov
add
sar
cld
mov
cdq
push
and
ds
dec
push
sbb
dec
inc
call
cld
inc
lea
sub
jnp
sahf
or
push
jge
or
add
shl
adc
sbb
int
or
inc
xor
inc
popf
jno
sbb
jmp
dec
call
jmp
mov
xor
and
push
test
test
mov
inc
aad
or
jp
movs
push
adc
pop
in
into
jno
sbb
(bad)
test
arpl
cmp
push
hlt
mov
int
fwait
sbb
out
shr
jle
rcr
ret
enter
fdivr
pop
stc
mov
add
cmp
(bad)
scas
lea
mov
add
mov
faddp
cmp
lds
or
jbe
ins
in
shl
jp
xchg
movs
push
sub
ins
and
mov
rol
call
test
jo
(bad)
pop
sbb
xchg
add
mov
(bad)
lahf
mov
test
xor
mov
stos
xchg
cld
stos
jecxz
xchg
outs
xor
sti
add
enter
pop
sub
call
mov
sbb
jno
dec
cmps
mov
scas
fisttp
and
xor
fisub
mov
loop
repnz
test
inc
aaa
aas
sub
test
(bad)
scas
pop
xchg
aam
pop
pop
sar
add
jae
into
ret
mov
xchg
pop
gs
add
sub
lods
xchg
daa
mov
sbb
retf
inc
popa
sbb
cmp
push
push
test
fdivr
rol
cs
mov
jge
mov
xchg
arpl
push
mov
pusha
jl
jb
jno
rol
add
dec
stc
imul
imul
adc
test
mov
imul
call
sahf
mov
sbb
cmp
lods
or
js
(bad)
repnz
cmp
mov
mov
out
or
xchg
pop
cmp
cld
jmp
xlat
mov
call
push
push
fisub
icebp
popf
(bad)
aam
std
mov
pop
pop
test
jne
mov
shl
and
xor
out
mov
sub
push
fldcw
dec
stc
repnz
scas
inc
rcr
adc
repnz
jecxz
cmp
cli
jp
not
(bad)
fidivr
iret
pop
fld
mov
jnp
pusha
and
jo
fistp
loope
dec
test
jl
push
rol
jo
mov
ret
push
sbb
xchg
jmp
jl
aam
pop
mov
or
mov
adc
leave
ja
(bad)
sahf
push
(bad)
cmp
pop
xchg
popf
ficom
or
sub
or
mov
(bad)
fistp
adc
minps
adc
xchg
dec
cmc
sub
test
pusha
and
add
popa
and
sahf
push
imul
dec
pop
add
movs
scas
test
mov
fiadd
adc
cmp
mov
pop
in
adc
ins
inc
cmp
pop
je
sbb
popa
ins
or
sti
dec
push
hlt
push
(bad)
into
adc
mov
inc
mov
shr
(bad)
xor
in
mov
and
pop
arpl
ret
adc
xchg
fst
push
(bad)
loopne
nop
scas
xchg
hlt
cmp
les
sbb
in
sub
ror
arpl
jns
(bad)
jmp
sub
stos
aad
mov
add
outs
mov
mov
pop
and
xlat
dec
test
std
cmps
add
movs
out
movs
push
add
jmp
sub
imul
inc
cld
pop
pop
inc
push
rcl
fs
xor
push
mov
scas
jo
sub
nop
cs
sbb
add
and
sbb
fwait
jmp
pop
test
cmc
mov
adc
sub
push
and
add
jmp
pop
call
jnp
popa
mov
push
shl
xchg
push
int
or
sbb
add
push
mov
mov
fninit
mov
mov
enter
mov
jbe
pop
es
adc
loop
fdiv
inc
out
rol
sbb
repnz
fwait
jae
fwait
js
pop
out
cmp
ret
or
and
int
ja
(bad)
mov
jo
mov
sti
(bad)
jmp
fisttp
mov
add
je
push
popf
(bad)
push
mov
push
hlt
or
stos
jns
cmp
sub
add
jge
add
and
mov
arpl
and
mov
jae
repnz
js
jl
pop
mov
sar
dec
fs
push
xor
inc
mov
dec
jnp
and
mov
sub
test
pusha
jmp
leave
imul
fsub
cs
scas
sbb
repz
mov
cs
or
stos
shl
adc
push
fs
(bad)
neg
dec
xor
add
and
stos
mov
cmps
fsub
inc
mulps
xchg
jno
pushf
or
in
fwait
mov
mov
cmp
movs
dec
dec
aaa
mov
pop
cwde
fistp
adc
call
push
fwait
and
jle
xor
repnz
sub
mov
sbb
jno
fidiv
jmp
movs
mov
sub
adc
cmc
adc
xlat
int3
(bad)
ins
push
lds
hlt
adc
push
test
dec
xchg
les
push
test
imul
inc
imul
lock
loope
pop
pop
popf
loop
shl
or
test
xchg
es
xchg
mov
xor
out
ret
mov
cmp
jmp
mov
cmc
scas
xchg
into
xchg
inc
xor
and
push
cli
jp
mov
(bad)
jge
lock
ins
push
add
cmp
int3
mov
sbb
leave
cmp
sub
popf
ret
add
jae
mov
xchg
pop
in
pop
mov
xchg
fadd
inc
and
outs
xlat
and
sbb
or
popf
(bad)
stos
daa
call
inc
dec
push
in
jae
mov
test
cli
fild
jge
sbb
loop
xchg
bound
dec
dec
movs
xor
cmp
sbb
mov
scas
jge
rcl
adc
repnz
mov
mov
leave
popa
repnz
pop
and
outs
ja
mul
mov
aaa
dec
sbb
loopne
xchg
jmp
cmp
jmp
push
(bad)
jmp
mov
mov
push
ret
dec
bnd
pop
mov
sub
inc
sub
stos
ret
fwait
daa
or
and
into
mov
sbb
cmc
dec
cld
jle
into
fabs
imul
dec
xor
das
sbb
stc
cli
not
jno
pop
out
addr16
xor
jae
ror
fst
popf
icebp
xor
mov
daa
test
sub
sub
rcr
imul
xchg
mov
xchg
repz
lahf
std
pop
mov
push
inc
dec
inc
mov
sub
sub
test
enter
imul
xchg
push
in
and
repz
sub
xor
mov
rcr
ffree
aas
push
xor
and
sbb
dec
mov
icebp
jl
repz
push
xor
push
outs
jecxz
or
aam
test
lods
jne
push
inc
cwde
dec
mov
out
or
add
cmp
fcomip
adc
mov
(bad)
fiadd
fbld
hlt
dec
retf
push
jns
adc
mov
pop
push
xor
nop
aad
add
sbb
icebp
cdq
inc
stos
fwait
cmps
fistp
jmp
and
je
mov
pop
popf
int3
and
xchg
sub
lahf
or
mov
and
data16
cmps
iret
sub
adc
arpl
mov
add
out
adc
cmp
jne
jl
popf
inc
adc
dec
or
stos
add
sub
rcr
iret
push
cli
ins
add
mov
sub
ds
and
fld
repz
mov
push
cmps
popa
out
in
retf
cmp
inc
repz
outs
scas
cmp
in
xlat
leave
sbb
and
cli
mov
lods
xchg
cmps
xchg
push
sub
clc
mov
push
push
shr
mov
xor
out
cmp
pop
js
fadd
push
push
fst
mov
sub
push
in
adc
ret
and
pop
lea
das
cs
(bad)
test
popa
sub
in
sub
pop
sti
mov
fsub
and
inc
dec
in
jo
sub
out
ror
data16
inc
test
dec
push
(bad)
inc
mov
outs
das
sti
push
pop
je
stos
pushf
mov
xchg
stos
sbb
push
das
dec
dec
rcr
dec
xlat
fistp
popa
addr16
inc
xor
mov
cmp
in
mov
cmp
pop
pop
aas
(bad)
mov
pop
jmp
mov
mov
in
sub
sbb
sbb
mov
es
mov
mov
pop
movs
repz
mov
int3
gs
pop
sti
mov
rcr
and
xchg
mov
and
sti
jmp
in
scas
lds
out
(bad)
pop
outs
add
out
outs
ins
pop
mov
outs
js
adc
mov
aas
fstp
jge
xchg
call
sub
and
and
out
call
(bad)
in
aas
push
clc
mov
stc
adc
cs
inc
jecxz
pop
mov
push
jns
cmp
test
ror
dec
xor
outs
push
int3
(bad)
sub
ror
pop
or
retf
push
mov
add
adc
jo
add
rcr
and
adc
xchg
mov
stos
adc
pop
sbb
daa
sbb
loope
add
int
lods
mov
ret
std
jne
cmp
fwait
cld
es
add
ja
sbb
sbb
lods
push
out
pop
or
or
push
dec
push
xor
fidivr
scas
xchg
shl
(bad)
data16
push
jge
dec
add
pop
stos
mov
imul
mov
sahf
push
(bad)
out
test
xor
retf
and
xor
xchg
mov
sub
inc
sbb
out
mov
clc
into
mov
aaa
push
call
ds
cmps
ja
out
data16
cmp
out
xchg
ror
stos
in
test
mov
mov
fbstp
xchg
sbb
bound
jge
arpl
mov
mov
or
lock
ficomp
dec
iret
in
jge
add
add
pop
icebp
add
push
stos
and
pop
xor
adc
and
hlt
cdq
cmp
lahf
adc
not
ret
mov
bound
push
inc
push
(bad)
rcl
cmp
jbe
ret
jne
lea
out
xchg
fcom
sbb
or
jle
and
push
scas
icebp
scas
es
imul
xchg
adc
mov
and
mov
les
ss
push
repz
lea
enter
dec
hlt
sbb
mov
fmul
into
push
mov
(bad)
jg
inc
enter
mov
pop
ret
popf
imul
sub
mov
icebp
data16
retf
mov
sub
mov
arpl
cmc
sub
add
ins
inc
retf
ss
jmp
pop
xlat
add
sbb
das
and
mov
repnz
pop
cdq
pop
out
lahf
add
iret
xor
cmp
rcr
pop
(bad)
and
sub
(bad)
int
hlt
inc
jmp
mov
faddp
(bad)
sbb
push
sbb
mov
push
pop
pop
jnp
mov
sti
cli
ror
addr16
add
mov
sar
retf
outs
fstp
mov
add
jnp
iret
push
nop
pop
jns
stos
sbb
cdq
mov
dec
aad
jbe
mov
mov
popf
cmc
test
inc
sbb
inc
cmps
and
inc
mov
ss
div
xor
fistp
xchg
in
push
cld
mov
sub
sahf
out
cs
pop
mov
stos
adc
mov
daa
mov
mov
pop
scas
push
inc
xchg
push
shl
inc
in
stos
mov
hlt
fidiv
cmp
loop
loop
cmp
call
fwait
test
stos
cmps
cmp
jns
xor
fistp
shr
or
dec
push
cmps
sub
and
cmp
enter
fs
lods
xchg
ins
cmp
mov
in
add
mov
xchg
(bad)
int
test
arpl
xchg
movs
inc
mov
ds
and
fstp
lock
call
pop
dec
push
lds
push
sbb
mov
pop
fild
cmps
mov
jmp
(bad)
add
adc
mov
push
shl
out
mov
jno
cwde
add
cmp
cld
sahf
mov
ins
in
into
mov
mov
pop
fisttp
fwait
mov
push
or
xchg
jo
rcr
shl
adc
test
fistp
icebp
in
pop
leave
icebp
lods
push
pop
jl
xchg
sub
cmp
sbb
or
jg
in
sti
in
adc
test
popf
nop
or
fcmovbe
push
or
xchg
mov
adc
aad
daa
cmp
rol
mov
and
lahf
pop
addr16
xor
fnstcw
add
sub
adc
loopne
shl
(bad)
iret
aam
mov
in
test
mov
or
mov
mov
or
inc
aas
loop
xchg
jae
jecxz
lea
push
push
aam
scas
arpl
xor
arpl
(bad)
mov
dec
jmp
adc
cli
jle
aad
pusha
loop
mov
into
mov
lea
movs
pop
cmp
imul
das
in
adc
and
lea
cmc
jmp
dec
sbb
not
mov
movs
xor
test
sbb
mov
or
mov
jmp
stos
inc
and
push
into
ds
or
dec
retf
(bad)
lds
jno
retf
ins
les
(bad)
fucomp
aaa
sub
call
jecxz
xchg
dec
and
in
mov
mov
aaa
add
sar
test
or
sub
std
adc
cmp
(bad)
push
jecxz
fistp
inc
cwde
(bad)
dec
test
ds
call
cmp
jne
xchg
icebp
cli
sub
push
movs
lods
fs
push
sbb
dec
xchg
sbb
div
int3
les
pop
mov
cmc
lods
jmp
mov
and
pop
int
jle
inc
push
fs
mov
push
jp
push
lahf
sbb
clc
sbb
jne
jp
pop
mov
mov
sub
in
jmp
outs
daa
jle
jmp
mov
xor
stos
inc
pop
ins
jmp
xchg
push
push
inc
push
lock
je
cwde
pop
sbb
rcl
xor
push
ss
popf
jecxz
popf
lock
dec
cmc
mov
adc
out
imul
popf
clc
dec
retf
pop
fadd
les
mov
mov
aam
sub
rcl
(bad)
es
push
xchg
in
out
nop
sub
aam
aas
mov
mov
retf
sub
push
ficom
add
or
dec
xchg
je
add
cmp
or
push
xchg
mov
in
mov
sahf
fnsave
and
ss
and
std
in
mov
or
inc
dec
xor
push
dec
lea
je
jecxz
nop
loop
cmp
or
aad
pop
lock
test
push
pop
xor
push
dec
stos
mov
add
sti
xchg
fisubr
mov
add
int3
or
mov
es
iret
sub
push
xchg
data16
scas
push
scas
das
sahf
mul
pop
jp
imul
inc
lock
cmps
mov
aaa
mov
sti
cmp
aas
jmp
mov
test
je
mov
xor
loopne
sahf
push
jmp
out
aaa
call
inc
lahf
vmread
and
inc
push
inc
fild
std
fwait
mov
shr
jb
dec
mov
lea
lds
push
(bad)
gs
xor
js
ss
aad
push
xor
(bad)
outs
xchg
fldl2t
js
xchg
jb
cs
mov
retf
jecxz
sub
cmp
jecxz
inc
adc
stos
mov
mov
and
pop
cwde
pop
out
xchg
inc
add
lods
xchg
or
rcr
cmps
or
bound
fwait
push
call
jg
adc
add
xchg
movs
ins
movs
xchg
jmp
mov
or
adc
mov
pop
fbld
rcr
dec
mov
dec
(bad)
jle
(bad)
ins
call
push
fcom
xchg
pushf
ins
xchg
and
shr
mov
inc
cmp
pop
pop
in
popa
movs
rcr
retf
dec
dec
cmps
(bad)
ficomp
mov
fstp
and
lock
out
movs
enter
sbb
pop
mov
or
cmp
ror
rol
sub
xor
sbb
xchg
in
jmp
jnp
ficomp
test
ss
call
outs
fldpi
repz
leave
mov
xor
iret
add
test
push
mov
jg
mov
mov
(bad)
xchg
lahf
dec
or
jns
retf
repnz
sbb
sbb
fcmovnb
test
sbb
sar
mov
xor
inc
bound
pop
adc
jl
sbb
mov
cmp
icebp
imul
sub
mov
dec
fmul
inc
push
pop
ss
mov
add
add
sti
or
sbb
or
stos
mov
movs
or
aam
sahf
xchg
pop
ins
and
pushf
mov
mov
scas
push
enter
push
lea
sbb
std
jns
repz
jmp
dec
and
adc
pushf
iret
nop
jnp
push
jb
lock
jno
fwait
cmps
in
inc
xor
adc
sbb
ds
and
fdivr
jne
dec
mov
mov
popa
js
adc
mul
call
aad
mov
inc
mov
(bad)
int
pushf
in
mov
xchg
mov
xchg
retf
and
outs
adc
repz
(bad)
cmps
cmp
mov
cld
mov
mov
outs
inc
inc
cmp
popa
enter
or
jo
pop
pop
jle
push
cmp
adc
ja
add
mov
add
sub
jae
jecxz
inc
pop
cli
push
mov
out
push
push
mov
sub
ss
cmp
cmp
repnz
jo
std
inc
adc
xchg
mov
movs
retf
mov
adc
mov
cmp
sub
or
cmps
pop
pop
call
push
pop
push
cmc
shl
xchg
sbb
popf
jo
inc
(bad)
push
sub
and
aad
jg
ffree
aad
stos
mov
aaa
idiv
popa
(bad)
imul
sub
test
popa
inc
lahf
or
repz
jne
jbe
clc
push
ins
aam
shl
mov
add
test
cmp
inc
xchg
jae
add
nop
imul
xor
retf
ja
jno
pop
mov
jle
mov
mov
out
xor
jmp
test
mov
in
scas
add
arpl
add
rep
xor
xchg
mov
pop
mov
jb
and
sub
loope
and
add
sub
jnp
xor
pop
call
cmps
xchg
mov
xor
mov
push
jnp
xchg
in
add
xchg
sbb
add
or
push
mov
jne
mul
pusha
aaa
jg
and
jl
pop
jo
iret
shr
jle
push
cmp
jecxz
(bad)
lods
mov
adc
sub
mov
pop
jge
iret
sub
push
push
bound
mov
inc
jb
leave
cmc
sub
test
div
bnd
sbb
outs
xor
retf
out
call
mov
imul
mov
push
call
xor
xor
arpl
xchg
mov
imul
jl
fwait
cld
jp
hlt
xchg
xor
ss
es
lods
mov
xor
sub
test
dec
rol
ror
jnp
je
cmc
or
pop
sti
aam
mov
push
adc
cmc
jle
ins
test
sahf
inc
sbb
dec
leave
dec
inc
xor
inc
lahf
sbb
mov
aam
into
xor
pusha
pushf
push
sub
fadd
neg
dec
and
jb
push
bound
or
add
(bad)
mov
jp
test
les
jo
inc
mov
mov
sub
xchg
test
and
pushf
lods
ins
push
shl
into
jg
sbb
push
lods
loope
test
mov
retf
jg
mov
stos
fimul
mov
cmps
out
mov
stos
in
mov
in
inc
test
push
push
aaa
adc
into
sahf
test
stos
jae
test
pop
xchg
push
popa
dec
in
or
pop
shl
push
ror
dec
cmp
mov
push
test
and
push
mov
test
sbb
inc
mov
sar
das
jmp
and
pop
mov
je
fs
in
cmps
aas
outs
daa
sar
or
and
scas
mov
mov
xor
scas
sub
daa
xor
fst
xchg
xor
cmp
cmps
add
test
push
pop
retf
mov
mov
loop
xchg
ins
jb
sub
adc
repnz
bound
mov
fsub
mov
jmp
lahf
scas
dec
pop
hlt
push
cmps
fistp
pop
ins
push
inc
lock
nop
pop
sub
nop
frstor
jmp
(bad)
repnz
sahf
fs
in
pop
iret
sub
into
sbb
inc
int3
movs
xlat
jno
pop
jbe
(bad)
iret
in
adc
test
push
mov
jmp
cwde
sahf
xor
sub
fiadd
ins
stc
xor
mov
movs
jbe
cmps
aam
call
in
mov
xor
shr
mov
xchg
push
scas
push
je
sub
jno
inc
bound
add
ja
push
dec
je
mov
cmp
test
pusha
xchg
vpsubw
int3
cdq
outs
mov
mov
push
or
int
pusha
push
(bad)
js
outs
sub
xor
cmp
cmp
mov
jnp
inc
outs
leave
jbe
lock
jno
mov
mov
lock
icebp
dec
nop
jnp
(bad)
add
shr
mov
mov
sbb
not
mov
sti
push
xchg
mov
jns
mov
cmp
fldcw
dec
neg
ja
push
mov
adc
in
in
aaa
aas
jge
xchg
jecxz
call
xchg
push
push
xor
and
mov
retf
jecxz
pop
sub
dec
mov
inc
pop
cmp
xchg
mov
xchg
popf
popa
push
loopne
in
sbb
push
add
sub
xchg
call
and
mov
fdiv
sbb
out
add
popa
aaa
test
cs
test
lock
int3
xchg
adc
ja
shl
test
rcr
add
sahf
dec
scas
push
adc
pop
sub
mov
pop
lods
lahf
lds
fidiv
xchg
dec
popf
mov
inc
out
mov
stos
fsub
repz
out
adc
imul
mov
ret
int3
inc
jle
sbb
stos
push
and
adc
das
sbb
or
sub
push
shl
inc
shl
jo
pop
adc
jl
cmps
sub
loope
imul
add
rcr
in
out
fmul
sub
hlt
in
mov
sub
mov
adc
and
add
test
js
adc
mov
repz
adc
jbe
xchg
xchg
xor
ret
push
mov
sbb
and
sub
jmp
ret
pop
popf
retf
je
out
jns
(bad)
nop
mov
inc
outs
pop
call
sub
add
pop
bound
cmp
fadd
fucom
fisttp
es
cld
push
(bad)
push
adc
fld1
jno
retf
mov
mov
rcr
(bad)
in
adc
xchg
push
xchg
ror
xor
adc
(bad)
pop
cmp
out
ss
jns
or
hlt
mov
jp
dec
cmc
nop
and
test
inc
xchg
mov
(bad)
dec
mov
xor
icebp
out
push
mov
pop
push
pop
es
pop
cmps
cmps
fnstcw
mov
pop
and
jo
(bad)
scas
or
iret
loop
mov
scas
stos
pop
sub
sub
ss
(bad)
das
outs
dec
xchg
and
cmp
jl
popf
(bad)
adc
mov
lea
mov
fwait
adc
jae
dec
sbb
jecxz
sbb
and
pop
inc
cdq
sbb
fucom
jl
clc
je
add
fcomip
push
xor
in
(bad)
addr16
jne
popa
arpl
sub
push
and
fisttp
push
in
loopne
sar
in
pop
mov
rcr
sti
movs
xchg
fdivr
add
dec
into
leave
in
pop
pop
xor
jle
xchg
push
jle
int
mov
adc
fidiv
lahf
ins
sub
movs
and
retf
sub
mov
or
fcom
js
mov
jb
fimul
sahf
sbb
jg
pop
lahf
cwde
(bad)
xlat
add
jle
mov
popf
ror
mov
out
push
cmps
inc
lahf
dec
add
mov
and
jmp
es
out
jecxz
cmp
push
xchg
add
cmp
(bad)
jmp
ret
fwait
xor
in
fwait
sub
ret
mov
xor
not
scas
xor
into
jle
scas
les
adc
and
mov
stos
sbb
sti
inc
mov
gs
(bad)
inc
rcl
adc
call
inc
ins
test
xor
stos
jae
outs
ror
es
mov
fst
inc
fstp
xchg
pop
inc
dec
dec
push
jecxz
adc
pop
out
shl
ins
add
adc
(bad)
pop
pop
pop
inc
adc
aam
out
jl
mov
ror
repz
xlat
loop
push
icebp
cmp
or
(bad)
nop
ins
adc
add
lahf
dec
pop
out
inc
or
pop
popf
out
inc
xchg
aaa
ret
dec
sbb
icebp
xor
(bad)
mov
cmp
sub
push
imul
pop
shl
jns
cmps
push
and
cmps
movs
inc
and
scas
fmul
jb
pop
aaa
cmp
pusha
std
sbb
mov
xor
cmp
aas
fnsave
or
xor
push
push
loopne
adc
adc
ror
ja
dec
shr
push
add
push
popf
inc
nop
scas
mov
mov
lds
sbb
cmc
push
imul
inc
jg
ins
xchg
fadd
sbb
mov
xchg
push
mov
add
imul
movs
or
lock
je
call
rcr
and
and
repz
dec
ja
mov
jecxz
dec
jns
jl
jne
dec
(bad)
inc
mov
push
jg
dec
add
push
and
add
pop
lds
jle
imul
loopne
mov
sub
lods
pop
test
outs
and
push
push
jl
cmp
mov
ds
push
cmp
imul
std
mov
inc
or
xchg
sar
mov
(bad)
fld
ror
xor
jb
xor
ret
mov
cmps
arpl
out
leave
test
rcl
jp
or
xor
test
jo
enter
outs
jno
call
loope
fld
add
dec
inc
jns
xor
push
nop
cmc
ins
popf
ret
inc
and
jl
cmp
and
xchg
test
lods
push
or
pop
test
xchg
xchg
jmp
jle
jl
fstp
xchg
mov
pop
jbe
mov
mov
pushf
retf
push
hlt
mov
fcom
xor
mov
mov
xchg
sar
pop
loop
pop
jae
ins
imul
add
repz
gs
inc
sbb
push
cwde
mov
call
add
pop
push
adc
cwde
test
jo
in
push
or
lahf
bnd
movs
add
repz
rcr
loope
dec
call
(bad)
sbb
xchg
jl
test
xchg
fcom
and
xlat
dec
jo
inc
or
lea
test
mov
cli
mov
jb
fild
jg
fst
jecxz
mov
movs
jmp
aad
cmps
adc
mov
int
jne
mov
mov
mov
xchg
clc
das
iret
iret
out
lea
movs
aam
pop
movs
or
pop
push
inc
lods
adc
xor
(bad)
add
or
mov
push
jbe
popf
loope
popf
loope
retf
enter
inc
xchg
dec
add
mov
nop
inc
adc
or
dec
hlt
mov
jnp
jno
mov
(bad)
cld
xchg
xchg
les
mov
sahf
(bad)
out
in
je
(bad)
call
ss
inc
mov
aam
sub
mov
jno
push
adc
cmp
nop
ja
ja
and
jmp
hlt
mov
(bad)
pop
mov
arpl
add
lds
iret
jmp
in
push
adc
dec
mov
cli
test
arpl
dec
adc
sbb
mov
pop
mov
scas
loop
and
nop
jb
sahf
xchg
scas
mov
mov
cmp
sar
mov
xchg
adc
aam
test
cwde
pusha
push
(bad)
xchg
ja
rcr
pop
outs
stc
scas
push
into
in
fild
gs
test
mov
in
enter
stos
retf
sbb
lods
mov
jbe
outs
fimul
sbb
daa
lahf
or
neg
in
push
push
inc
and
adc
xchg
lahf
and
mov
test
push
pop
cdq
scas
movs
ror
jp
push
sub
bound
and
das
ss
xchg
in
loopne
xor
mov
outs
add
sbb
mov
in
push
aas
clc
ss
mov
ffreep
cmp
in
ret
mov
ret
out
xchg
enter
pop
dec
mov
sti
xor
xchg
sar
popa
div
loope
mov
mov
inc
jo
outs
rcr
adc
mov
or
enter
sbb
xchg
cdq
popa
sbb
arpl
inc
sbb
adc
xchg
fidivr
sbb
mov
or
xchg
pop
and
mov
mov
add
icebp
hlt
test
scas
sbb
scas
fadd
cmp
imul
xor
in
mov
fwait
sbb
cmp
sub
pop
push
push
mov
les
jge
jg
outs
fwait
or
jg
sbb
and
push
sti
fldcw
cli
out
loope
fs
ret
test
adc
nop
je
sar
test
adc
pop
adc
test
lahf
sbb
sbb
dec
push
dec
fsub
push
or
enter
mov
and
popf
mov
add
sbb
pushf
stc
fdivr
dec
ret
xor
xchg
sub
cmc
dec
sub
dec
jnp
xor
sub
std
loop
arpl
(bad)
add
dec
das
cld
mov
jge
(bad)
outs
add
push
add
xchg
mov
loope
dec
aas
push
imul
pop
mov
mov
retf
jbe
mov
out
ret
popf
mov
sub
repz
jne
aad
sbb
out
push
pop
jns
pusha
adc
inc
push
shl
sbb
or
sbb
xor
cmp
mov
pop
(bad)
pop
xchg
xor
mov
(bad)
movs
ja
dec
clc
mov
out
pop
cmps
or
js
sbb
push
ret
(bad)
scas
mov
icebp
push
stos
push
pusha
cwde
int
aas
mov
cdq
dec
stos
inc
push
push
or
xchg
ins
adc
mov
fcom
dec
addr16
fstp
lds
mov
mov
rcr
cmps
xchg
cs
in
sub
ss
cli
mov
xor
and
push
mov
in
xchg
aaa
add
in
push
das
push
lea
mov
adc
in
xchg
or
loop
in
mov
xchg
ficom
shr
enter
mov
mov
call
ret
dec
xor
imul
aad
push
stc
mov
fbld
adc
out
xchg
lds
jnp
je
mov
icebp
fwait
or
dec
add
cvtdq2ps
jno
pop
jecxz
and
lods
(bad)
(bad)
fnstenv
add
daa
pop
push
cmp
mov
xor
push
cmc
jb
jmp
inc
push
mov
lahf
loopne
adc
je
jg
add
pop
popf
ins
xor
ds
sbb
sbb
push
iret
add
push
mov
mov
fild
and
adc
adc
push
loop
(bad)
div
cmp
sub
adc
retf
inc
pusha
aad
xchg
mov
and
add
ds
lds
ret
mov
fs
mov
sbb
imul
addr16
into
xor
(bad)
mov
mov
and
aas
fwait
sbb
add
stos
ss
imul
mov
mov
jno
int3
mov
lock
sbb
out
mov
sbb
sbb
shl
xor
test
test
or
mov
in
repnz
sub
dec
sub
push
cwde
mov
test
push
icebp
sub
and
scas
nop
aad
cmp
add
scas
push
into
jb
iret
jne
popf
(bad)
jecxz
in
mov
mov
xor
scas
enter
xchg
push
and
push
jae
mov
rcl
(bad)
fsubr
jmp
cmp
and
xchg
and
jnp
mov
xchg
es
xchg
inc
pop
or
retf
retf
(bad)
sbb
dec
je
add
lds
xchg
arpl
(bad)
dec
add
outs
data16
imul
lds
sbb
xchg
pop
aam
push
inc
and
push
icebp
test
fstp
cmp
mov
jmp
jb
push
and
xchg
adc
int3
xchg
daa
jp
into
jecxz
xchg
popf
fisttp
push
pushf
pop
dec
pop
push
mov
cmp
cmp
pop
js
(bad)
movs
or
sbb
jae
fs
mov
test
cwde
iret
adc
sub
cmp
fidiv
adc
nop
and
cdq
xor
sub
cmp
les
push
or
xchg
pop
mov
(bad)
jnp
ss
jnp
out
mov
sub
jecxz
and
test
lds
mov
out
mov
outs
stos
leave
mov
ss
div
lfs
mov
call
data16
pop
pop
popf
mov
and
retf
not
mov
pop
pop
cmp
pop
imul
mov
push
shr
and
popf
sahf
leave
loope
es
or
ins
jns
xchg
and
push
mov
add
popa
sub
xor
lods
add
ret
pop
xor
into
and
int
imul
aam
lea
dec
sub
jmp
mov
shl
loope
sbb
or
sbb
jno
(bad)
in
xchg
lods
mov
mov
mov
gs
stos
jl
jns
mov
cmps
and
test
mov
mov
fld
xchg
popa
xlat
(bad)
push
mov
loop
retf
cmps
or
xchg
int
call
mov
cmp
jg
cld
outs
push
or
loop
or
gs
aas
idiv
loopne
in
rcr
mov
mov
outs
xchg
mov
fdivr
shl
mov
int
mov
and
fsubr
cld
add
leave
sbb
call
cmp
cmc
inc
jg
into
retf
inc
jge
pop
cmp
xlat
in
cmp
fst
mov
imul
inc
data16
jae
fwait
pop
call
fnsave
jo
pop
stc
jmp
enterw
mov
jp
jae
aad
jno
xor
xor
dec
inc
jns
fadd
popf
aaa
mov
push
arpl
xor
outs
cdq
clc
or
rcl
not
out
push
scas
shl
pop
test
add
inc
or
in
loope
pop
push
test
lods
adc
and
inc
sub
cmp
mov
xor
mov
into
add
fidiv
sub
(bad)
arpl
dec
sbb
dec
or
adc
js
dec
sbb
or
jmp
es
fisttp
jo
clc
and
mov
js
fsub
scas
into
dec
ret
popf
not
mov
stc
in
sub
xchg
ror
push
out
xor
rol
pop
pop
out
gs
push
and
sub
or
mov
in
loope
shl
and
jecxz
or
cmc
jnp
ins
and
int
push
push
and
lahf
sub
out
out
stos
bound
sub
mov
lods
sbb
pop
mov
sar
xor
xchg
(bad)
je
loop
pusha
pop
imul
mov
ja
inc
frstor
push
push
cmp
mov
dec
adc
adc
inc
out
mov
xchg
dec
sti
stos
test
cmp
xor
and
cld
pop
dec
mov
call
rcl
movs
mov
pop
es
enter
iret
fisub
dec
scas
cs
sbb
pop
aaa
mov
fnsave
pop
cdq
mov
mov
push
and
pop
in
sbb
inc
dec
jmp
fisub
mov
fwait
adc
or
daa
outs
cdq
jno
repz
cmc
out
out
sub
mov
xlat
xor
sbb
cmp
scas
fwait
mov
stc
aad
fld
dec
fwait
addr16
pop
cmp
sub
and
ret
test
xchg
jo
xchg
and
popa
(bad)
jge
mov
dec
popa
scas
mov
(bad)
or
icebp
call
cmc
stos
mov
out
js
jl
sbb
jnp
or
xchg
mov
inc
or
or
push
in
mov
pop
push
dec
mov
xchg
mov
cs
or
in
jne
repz
lods
fstp
int
mov
jecxz
xchg
enter
sahf
sub
mov
push
retf
jge
jae
push
mov
pop
push
jns
mov
push
das
adc
icebp
jmp
ins
sub
jb
(bad)
mov
xchg
pop
jo
test
or
inc
nop
xchg
leave
cs
ret
adc
std
jno
jg
outs
sti
pop
add
xor
outs
xor
std
pop
daa
ffreep
(bad)
mov
xor
call
and
int
inc
(bad)
iret
xchg
das
(bad)
ds
adc
mov
mov
mov
mov
lock
stc
mov
fld
pop
mov
mov
sub
fnsave
lea
mov
fsubr
jbe
ja
xor
movs
lahf
ins
add
xchg
loop
push
out
pop
ja
stc
popf
cs
jle
xchg
fwait
xor
es
or
jo
adc
xchg
push
sbb
xor
inc
iret
sub
jmp
xchg
sub
or
mov
add
and
icebp
add
lahf
jl
rep
call
mov
icebp
inc
adc
mov
outs
mov
or
sbb
in
int3
ret
movs
fcomp
jne
pusha
add
js
ja
xchg
xor
or
arpl
xor
pop
shl
jo
int
mov
mov
jo
(bad)
inc
mov
pop
dec
or
fisttp
cmp
int
pop
sar
sbb
not
lock
js
inc
ja
arpl
cmc
out
mov
pop
mov
js
inc
push
enter
pop
xchg
iret
(bad)
lock
cmp
les
dec
cmps
rcl
ins
sti
jmp
mov
(bad)
in
dec
mov
repnz
test
daa
fisttp
pop
sub
shl
xchg
xchg
inc
fwait
out
pop
jne
movs
mov
inc
dec
or
pop
out
xlat
and
int3
mov
mov
(bad)
push
mov
data16
jp
xchg
mov
jae
dec
and
aaa
std
(bad)
jno
mov
xchg
mov
rcl
lds
cmp
cmp
sub
dec
jmp
in
sub
out
out
aas
aas
call
pop
arpl
push
sub
dec
mov
out
inc
inc
mov
mov
pop
aad
and
pop
jmp
(bad)
sbb
adc
retf
test
outs
adc
rcr
mov
mov
push
jo
(bad)
push
add
cmp
out
mov
sub
daa
dec
lea
repnz
fwait
and
int3
push
or
(bad)
mov
imul
xchg
test
push
pop
cmp
jl
jmp
mov
jnp
cmps
sub
scas
fwait
stos
pop
push
push
add
cli
xor
pop
fidiv
jb
inc
pusha
clc
pop
popf
push
mov
push
daa
data16
sub
mov
fnstenv
pop
fs
push
loopne
and
(bad)
call
mov
cmp
retf
ins
cmps
inc
mov
inc
xor
push
xchg
(bad)
fwait
rcl
cmp
cmps
sub
cmp
(bad)
mov
scas
aam
inc
addr16
out
xor
icebp
push
add
push
push
and
sub
pop
fwait
sbb
pop
mov
cmp
add
xor
dec
add
daa
push
ror
fwait
retf
dec
sub
shr
(bad)
push
dec
push
(bad)
or
push
jae
pusha
retf
add
push
cmp
mov
xchg
mov
(bad)
sbb
push
jne
fisttp
mov
aam
cmps
xchg
addr16
mov
(bad)
test
dec
movnti
test
in
sub
mov
xor
mov
out
pop
cmp
out
and
fbstp
popf
xchg
in
lds
icebp
pop
xor
pop
xchg
hlt
and
cmp
enter
aas
sbb
jne
std
mov
or
mov
imul
test
cmps
rcl
push
and
push
stc
xchg
jo
lods
cmp
loope
and
xor
pop
fisubr
loopne
not
push
sub
jae
mov
stos
cmc
(bad)
std
adc
cwde
retf
in
lahf
sub
stos
lods
data16
pop
cmp
dec
pop
ds
push
push
test
mov
and
mov
xor
xor
sbb
cmps
xchg
test
rcl
out
loop
std
(bad)
mov
(bad)
sbb
leave
es
aas
pop
es
mov
loopne
pop
xchg
aad
repnz
retf
test
cmps
or
fstp
fdivr
sub
inc
cmp
cs
dec
mov
loop
jo
neg
out
outs
hlt
pop
ret
jbe
jecxz
and
inc
mov
add
push
mov
push
mov
(bad)
xchg
inc
mov
adc
fisttp
mov
push
dec
jmp
fisub
aam
icebp
addr16
out
mov
lock
dec
jg
pop
shl
jbe
arpl
loop
or
lods
push
pop
mov
xchg
retf
xlat
aas
fidivr
add
sub
mov
dec
add
mov
test
cs
mov
fidiv
cld
in
xor
aaa
sbb
cld
sbb
stc
xchg
sar
fidivr
sahf
and
jbe
movs
pusha
aas
and
or
gs
mov
xchg
cdq
enter
bound
push
imul
adc
mov
mov
and
push
and
xor
jge
pop
test
sbb
mov
adc
push
lods
shl
xor
call
iret
inc
push
mov
jmp
out
pushf
js
pop
pusha
mov
(bad)
leave
(bad)
shr
data16
frstor
lahf
sahf
xor
shl
hlt
jnp
mov
sub
bound
xchg
mov
sahf
imul
lahf
inc
mov
mov
ja
daa
movs
or
xchg
mov
cli
dec
movs
mov
shr
mov
std
dec
sub
xor
inc
or
xabort
imul
dec
fcmovb
mov
mov
(bad)
jmp
xor
and
cwde
icebp
adc
ret
ss
jo
pushf
fist
jl
push
push
mov
jmp
mov
stos
in
mov
shl
out
xor
sbb
leave
dec
inc
xor
pop
mov
xlat
mov
push
into
push
dec
rol
lahf
xchg
sub
scas
mov
shl
mov
add
test
xchg
xchg
es
mov
test
rcl
mov
aas
into
adc
sub
sahf
xchg
push
mov
cwde
stc
pusha
or
dec
jmp
adc
inc
ja
gs
test
cmc
(bad)
jo
inc
cmp
xchg
pop
scas
mov
mov
add
add
test
in
loope
fisttp
arpl
mov
daa
pop
inc
aas
cmp
adc
inc
push
inc
add
pop
leave
or
mov
outs
loopne
aad
xchg
ret
cmp
jmp
sbb
std
ins
xchg
lea
mov
test
cs
faddp
popa
rcr
jnp
and
inc
movs
fiadd
inc
mov
xchg
aad
sub
cmp
stos
pusha
imul
daa
mov
add
rcl
(bad)
and
xchg
add
aaa
add
xor
cmps
iret
add
add
sbb
ror
and
ins
out
jae
test
push
movs
mov
sbb
repnz
lods
sbb
cmps
je
push
stos
mov
push
imul
dec
gs
aad
fdivr
aas
push
int
ds
push
fs
ins
and
clc
enter
jb
add
pop
and
sbb
xchg
lods
lods
enter
mov
out
ficom
mov
pushf
cmp
int3
popf
lods
into
mov
dec
add
adc
mov
mov
jg
aaa
jbe
(bad)
mov
in
xor
aam
xchg
sub
cmp
shr
stos
gs
out
je
imul
mov
ror
xor
inc
iret
inc
scas
sahf
cmp
sbb
sub
mov
jae
xchg
inc
in
mov
dec
sub
mov
repnz
imul
mov
adc
sbb
in
cmp
rcl
mov
mov
(bad)
xchg
mov
mov
lods
lea
xlat
jae
(bad)
sti
shr
cmp
loopne
sti
jb
stos
push
mov
xlat
sbb
enter
adc
push
sub
in
push
div
xor
adc
sar
outs
pop
jmp
fs
stc
dec
mov
mov
cmps
xor
push
sub
test
add
cwde
mov
movs
cwde
xor
int3
call
dec
add
push
cmc
sub
call
cmp
retf
(bad)
sub
inc
and
or
add
push
jmp
int
pop
fs
mov
dec
les
iret
fwait
bswap
cmp
dec
jb
add
lahf
mov
sub
psubw
call
cdq
sbb
xchg
leave
dec
xchg
mov
jnp
stos
mov
xchg
or
jle
jae
out
shr
fcom
jl
out
fbld
mov
(bad)
into
sbb
push
xlat
sub
xchg
stos
sbb
aad
ins
mov
nop
ins
dec
cmc
mov
test
mov
xor
in
fstp
in
sahf
sahf
js
out
push
push
cs
sub
daa
sub
jbe
shr
and
sahf
pushf
mov
daa
(bad)
mov
pop
aad
jb
sbb
cmp
inc
imul
pushf
mov
dec
adc
mov
nop
ins
or
into
jns
xchg
push
cmp
inc
pop
jle
xchg
dec
xor
out
lea
xor
das
outs
sbb
outs
push
and
xor
fisttp
and
addr16
ret
int
repz
push
cmp
leave
sub
test
fcomip
(bad)
xchg
dec
sub
or
test
inc
fwait
jo
imul
int
pop
out
test
enter
sub
in
mov
shr
repnz
pusha
in
jge
cmp
push
mov
sahf
pop
gs
sub
pusha
daa
jmp
je
sub
fwait
sbb
xchg
xor
jo
or
loop
sar
cmp
sbb
and
fnstsw
jnp
outs
xor
push
jns
sub
pop
mov
adc
push
mov
jne
sub
mov
sub
xchg
stc
pop
dec
mov
(bad)
jb
cwde
scas
xor
add
pop
ret
call
inc
and
xor
adc
ror
daa
push
sub
dec
and
xchg
sub
mov
push
dec
ins
pop
test
cmp
cs
pop
cmp
cmp
pusha
es
out
imul
xchg
and
fst
pusha
mov
sti
jne
std
jo
iret
ins
retf
mov
sbb
xor
cwde
sbb
retf
imul
aam
cmp
jmp
ficom
jmp
pusha
call
test
mov
pop
fucomp
cmp
mov
loop
cmp
out
or
cs
and
mov
aad
jecxz
sbb
push
mov
sub
xor
(bad)
sub
movs
adc
jo
push
cmp
rcl
loopne
lahf
out
sub
retf
dec
adc
mov
lods
cmp
add
push
cld
mov
adc
push
stc
dec
sub
ret
mov
cmp
test
ins
shl
iret
clc
inc
mov
lods
xor
mov
mov
(bad)
fdivr
or
xor
int3
mov
out
dec
movs
out
dec
dec
inc
aas
and
or
mov
jne
pushf
push
aas
jae
add
mov
jmp
stos
das
repz
lods
xor
dec
and
and
pop
mov
sti
inc
mov
inc
stos
loop
ss
shl
sub
xchg
scas
cmp
sbb
mov
rcl
and
test
push
fiadd
push
pop
cmps
add
mov
stc
sbb
(bad)
arpl
mov
or
int3
pusha
call
or
mov
jmp
and
fprem1
mov
xchg
dec
mov
ja
dec
pop
cmp
sub
addr16
rol
loop
popf
pop
push
jl
(bad)
mov
bound
sbb
shr
mov
cli
icebp
and
adc
add
sbb
cmp
rol
test
pop
(bad)
loop
dec
xor
push
popa
cld
sub
add
fcomp
and
jmp
push
and
mov
sub
pop
dec
adc
(bad)
(bad)
repz
pusha
cmp
inc
jmp
cmp
push
cdq
cmp
pop
lods
in
mov
push
mov
imul
mov
call
push
xchg
pop
xlat
(bad)
push
mov
xchg
popf
movs
hlt
and
adc
jl
lods
pop
scas
lods
push
xchg
out
mov
mov
xchg
push
movs
sbb
xor
xchg
les
xor
int
daa
jne
neg
jne
mov
mov
cmp
sbb
clc
ss
int3
push
into
push
mov
sbb
jg
and
inc
inc
out
sbb
(bad)
mov
jns
out
sbb
jb
inc
cmp
sub
cmp
sahf
push
fmul
dec
pop
bound
pop
sbb
cmp
out
(bad)
and
mov
push
jnp
inc
mov
fisubr
enter
jmp
adc
mov
xlat
call
aad
cmp
adc
xor
sub
inc
xor
rep
adc
call
leave
lds
and
out
xlat
inc
jmp
sbb
loop
push
jp
pop
inc
nop
movs
call
push
jge
ror
cmp
jns
nop
(bad)
aam
cli
or
jnp
cmc
sub
add
push
xchg
fbld
cs
inc
(bad)
mov
push
sub
icebp
xor
or
inc
mov
(bad)
and
adc
mov
movs
cmp
cdq
jno
vpshufd
in
leave
int3
rol
fbld
cwde
or
inc
fld1
in
addr16
sub
(bad)
jmp
sub
add
das
stos
test
jb
lahf
ds
cmp
push
and
es
mov
jmp
sbb
nop
call
inc
leave
and
lea
mov
popa
sbb
bound
add
sti
test
mov
dec
sti
pop
aad
ins
jmp
mov
pcmpeqb
test
jb
xlat
lods
sbb
aad
stc
inc
retf
mov
fiadd
adc
stc
push
mov
repz
mov
adc
mov
add
out
sbb
lods
je
dec
or
pop
dec
and
sbb
add
mov
in
mov
ror
add
lahf
adc
xor
imul
sub
neg
pop
and
fsub
les
imul
or
cmps
mov
sbb
fnstsw
mov
and
xor
cmp
jmp
inc
test
adc
dec
push
mov
or
mov
cmp
pop
(bad)
stc
shl
xchg
xor
aam
push
mov
xchg
das
cdq
mov
jecxz
xor
shr
xchg
xchg
call
sbb
rol
lods
xchg
jmp
pop
or
sar
retf
out
test
sbb
rol
loop
cmp
in
out
out
ja
test
dec
lods
ins
push
pop
std
mov
dec
aam
jg
cmc
lea
push
clc
enter
jo
ins
sub
pop
jne
xchg
test
sub
fldenv
ja
repnz
test
jge
rcr
pop
or
mov
in
dec
in
mov
sub
pop
xchg
(bad)
cli
retf
imul
ds
mov
ja
mov
test
arpl
jmp
jecxz
push
ins
test
dec
aad
add
les
adc
mov
inc
mov
mov
jmp
sbb
add
jmp
les
xchg
loop
mov
shl
aam
pop
jle
dec
cmps
ficomp
push
push
fcmovne
sbb
loope
mov
mov
sub
fadd
sub
aas
cld
push
data16
mov
mov
push
jbe
stos
pop
cmp
mov
(bad)
or
fcompp
mov
(bad)
div
xor
(bad)
retf
out
sbb
stos
fdivp
movs
lock
cmp
dec
cmp
xchg
in
xor
dec
push
pop
push
sub
pushf
ins
movs
xchg
shl
pushf
pop
out
mov
inc
jns
sub
mov
mov
push
outs
mov
push
test
inc
dec
or
daa
or
and
(bad)
mov
inc
enter
int
aas
arpl
loopne
mov
stos
out
and
xchg
stos
jne
cld
out
dec
inc
int
pushw
sahf
test
pop
(bad)
aas
jbe
fnstcw
jb
or
(bad)
aas
popa
push
jmp
push
mov
pop
or
dec
les
pop
jbe
fild
ss
cld
fcom
cmp
mov
sbb
out
mov
push
cmc
js
and
call
or
ss
push
adc
movs
xchg
loop
mov
fdivr
lock
js
fmul
mov
xor
mov
inc
adc
lods
repz
xchg
and
int
sub
push
sub
fist
pop
test
je
pop
hlt
aas
lds
jmp
sub
ss
aam
mov
ins
sub
mov
nop
ins
dec
cmp
gs
inc
or
adc
movs
mov
jp
push
inc
fcmovb
jne
out
fcomp
(bad)
jl
sbb
(bad)
sar
(bad)
inc
call
cs
test
add
sar
sbb
(bad)
jmp
xchg
or
xlat
popf
xchg
pusha
xor
xchg
or
fidiv
pop
and
xchg
call
add
popf
in
lock
popa
fnstenv
mov
pop
adc
cwde
pop
sbb
push
stc
fwait
jns
sbb
push
cmp
imul
mov
bound
imul
xor
mov
jae
je
aam
cwde
out
(bad)
pop
scas
mov
adc
dec
mov
and
jo
cmovno
int
movs
fnstsw
inc
lea
ret
clc
jl
out
cmps
jbe
mov
repz
retf
pop
fcmovb
aad
in
aaa
add
mov
xchg
or
and
mov
mov
repz
clc
jp
xchg
and
xor
cmp
out
mov
jl
sar
enter
retf
pop
lods
jns
fcom
ret
mov
push
mov
out
icebp
pop
push
jg
mov
or
clc
loop
add
dec
add
in
xor
dec
xor
test
adc
outs
shl
jne
(bad)
fnsave
(bad)
xchg
inc
in
dec
clc
retf
xchg
pop
xchg
std
stos
add
stos
lds
sub
mov
mov
enter
retf
daa
or
mov
std
jmp
mov
lea
dec
sub
xor
push
pop
sbb
jmp
jmp
loop
test
and
jge
mov
in
mov
xabort
scas
das
cmp
xor
dec
(bad)
pop
in
into
adc
(bad)
rcr
(bad)
pushf
sbb
pusha
shl
retf
add
in
push
cmc
in
js
cmp
psraw
sub
rcl
rcl
cmp
loopne
ss
loopne
mov
sub
add
(bad)
popa
rdmsr
cmps
sub
popf
in
loop
(bad)
mov
jo
aaa
xchg
jp
ss
fwait
bound
adc
cwde
inc
sahf
jmp
movs
dec
xor
loop
xor
xor
xchg
(bad)
not
mov
sbb
jp
mov
hlt
xchg
sub
shl
ret
popf
test
hlt
pcmpgtd
jp
push
adc
imul
fadd
inc
and
clc
into
test
imul
(bad)
test
popa
push
pop
mov
sbb
(bad)
sub
mov
or
outs
inc
add
mov
or
inc
sub
push
jecxz
mov
dec
loopne
daa
aaa
or
cwde
shl
adc
into
lds
test
sub
or
popf
cmp
mov
pop
cs
in
push
add
mov
cmps
(bad)
fnstcw
xchg
add
ret
es
mov
mov
push
and
es
ficomp
movs
sbb
add
mov
or
call
inc
mov
ret
test
pop
pop
das
jp
push
fmul
mov
jo
sub
ins
xchg
cmp
outs
sti
xchg
call
mov
and
shl
fcmovnu
dec
lds
sub
jmp
add
push
(bad)
out
shl
push
call
mov
rol
mov
and
outs
mov
mov
cmps
cmp
push
inc
cld
and
cmp
jo
cmp
aaa
push
in
movs
adc
daa
lods
mov
loopne
dec
inc
hlt
xor
mov
sbb
and
cli
cmc
fwait
cmp
mov
test
sti
rol
inc
jbe
lahf
xchg
jns
stos
sub
push
add
jns
ret
pop
adc
push
retf
mov
mov
pop
out
push
loopne
sub
mov
inc
fnstsw
xor
cmps
data16
gs
pop
cmc
and
sub
mov
and
cwde
xor
imul
push
xchg
pop
retf
enter
sbb
jne
mov
mov
pop
xchg
or
addr16
pop
bswap
lahf
push
imul
dec
ret
imul
mov
and
(bad)
pop
push
dec
adc
out
iret
leave
loop
push
sbb
jbe
hlt
pop
cmp
jbe
repnz
jecxz
pop
movs
mov
aam
pop
mov
adc
fwait
es
aad
or
push
es
adc
out
call
shl
mov
dec
fisttp
pop
loop
imul
fstp
inc
adc
ins
ret
and
push
sub
mov
dec
xor
loopne
xchg
pop
lahf
loopne
cmps
gs
adc
pop
jle
fcos
xor
sbb
les
and
stc
pop
inc
jnp
scas
cmps
push
mov
adc
add
sbb
(bad)
mov
and
or
add
jecxz
mov
in
cdq
movs
cmps
mov
mov
shl
test
(bad)
aad
hlt
loope
and
jmp
in
in
xchg
mov
xchg
outs
xor
lahf
adc
idiv
fwait
mov
arpl
loopne
test
xor
mov
mov
push
cmp
mov
push
std
add
dec
mov
cli
inc
xor
xchg
gs
xor
mov
icebp
jae
pop
pop
call
fwait
mov
mov
ficom
lea
cmp
mov
lock
or
mov
mov
or
cmp
stc
sbb
push
xor
push
mov
add
(bad)
cli
sub
enter
mov
and
or
outs
push
loope
mov
mov
aad
test
and
retf
xor
sub
push
aaa
sbb
adc
pusha
das
jnp
xchg
push
xor
or
and
jae
inc
push
aaa
shr
or
and
mov
xchg
fdivr
mov
cmp
mov
add
cmp
xlat
(bad)
xor
mov
lods
mov
es
lods
pop
stc
adc
add
retf
pop
sbb
sar
push
mov
sbb
in
pop
ret
mov
scas
sbb
push
pop
popf
in
fstp
dec
fcmovbe
imul
ins
test
push
js
jo
fdiv
aas
lock
pop
arpl
dec
popf
in
shl
popf
sbb
test
pop
inc
ficomp
add
in
add
adc
cmc
push
cmps
sub
pop
les
inc
add
and
pop
scas
fs
push
int3
cmp
add
test
mov
movs
xchg
pushf
lahf
pop
xchg
mov
jge
or
mov
mov
lea
push
repnz
pop
data16
loopne
popf
jmp
dec
push
pusha
xchg
(bad)
into
js
inc
xlat
mov
dec
imul
test
dec
ss
out
and
mov
or
scas
aas
jnp
(bad)
call
test
mov
cmps
out
push
or
jecxz
inc
std
ja
and
add
ja
je
jge
int
repnz
xor
sub
and
sbb
shl
(bad)
out
cmp
enter
sbb
dec
add
mov
(bad)
movd
sbb
sub
dec
jmp
mov
pop
sub
imul
(bad)
idiv
ss
xlat
sti
xor
jns
clc
adc
in
mov
aas
sbb
jl
inc
adc
mov
or
adc
retf
mov
xchg
daa
pop
test
cmp
cmc
pop
dec
mov
mov
jae
call
loop
cmc
leave
mov
add
pop
sub
jbe
clc
push
cmp
mov
push
int
test
push
push
mov
push
push
scas
xor
leave
mov
ins
rol
dec
xor
jle
xchg
mov
push
nop
adc
jmp
fs
mov
aam
xlat
mov
dec
repnz
popf
shl
call
in
test
push
inc
shr
push
lock
mov
pop
xchg
pop
adc
xor
cmps
cmp
retf
pop
sti
inc
mov
push
cmp
test
outs
push
ins
ins
adc
cmps
mov
dec
push
add
push
(bad)
cmp
rcl
stc
and
cpuid
in
out
pop
push
add
das
and
mov
jp
mov
lods
jmp
mov
mov
sub
ja
sub
inc
test
xor
inc
in
mov
jg
das
aam
pop
xchg
jo
idiv
sbb
loopne
out
mov
xchg
(bad)
(bad)
fadd
xor
shr
push
jae
fisttp
xchg
not
outs
pushf
mov
cmp
iret
push
xchg
pusha
mov
pop
ins
fild
sub
retf
cdq
test
sub
out
jmp
xchg
in
popa
fisttp
lahf
lods
pushf
retf
mov
stc
stc
xlat
sub
push
push
mov
jl
bound
dec
add
jecxz
sar
push
std
xchg
lods
inc
sahf
lods
ret
(bad)
nop
inc
shr
repz
push
nop
leave
sub
fnsave
movs
jmp
inc
mov
and
jecxz
(bad)
into
rcr
repnz
(bad)
retf
aam
sbb
adc
icebp
retf
cmps
adc
popa
adc
pop
sbb
and
add
push
push
int
call
add
and
sbb
test
push
sub
cmp
xchg
aas
adc
aad
pop
sbb
cmps
lahf
jmp
fld
in
sub
shl
cs
or
rol
(bad)
jmp
outs
sub
loope
pusha
jl
adc
sti
xor
mov
or
mov
cwde
mov
(bad)
mov
sbb
pusha
cmps
mov
fidiv
in
(bad)
pop
inc
sbb
push
cmp
das
je
rcl
mov
mov
mov
sub
mov
shl
pop
adc
(bad)
inc
inc
stc
mov
cmp
out
add
pop
fcmovnbe
sbb
lds
sub
fdivp
nop
cld
fdiv
repz
je
inc
xor
scas
jp
sub
push
iret
imul
dec
push
pop
mov
fidivr
mov
inc
rcr
cld
mov
push
rcl
mov
shr
push
mov
sub
out
ins
(bad)
fcmovu
jnp
push
arpl
arpl
jne
add
test
(bad)
mul
mov
inc
jae
push
and
into
xchg
add
pop
ins
loop
inc
mov
cdq
jo
cmps
into
loop
jmp
mov
adc
inc
sbb
test
sahf
xor
icebp
fdiv
nop
pop
dec
iret
or
rcl
dec
fldcw
add
(bad)
jb
(bad)
push
test
mov
addr16
ins
cdq
push
pop
add
ja
pop
leave
pop
push
iret
mov
cmp
cmp
out
mov
dec
(bad)
or
mov
test
mov
or
or
ins
inc
arpl
jne
movs
nop
les
int3
pop
jmp
push
int
push
xchg
jbe
sahf
mov
inc
cmps
pop
cli
push
mov
inc
fdiv
sbb
aas
shr
adc
cmp
data16
add
hlt
xchg
hlt
cdq
imul
shr
scas
les
out
sub
sbb
icebp
ins
jl
retf
pop
dec
ds
mov
push
loope
or
jne
(bad)
dec
jmp
cmps
js
not
(bad)
xchg
mov
sub
jecxz
(bad)
xchg
aam
cmp
and
shl
aaa
inc
cmps
inc
push
mov
or
and
pop
cmp
leave
mov
repnz
adc
pop
sbb
mov
sub
jge
inc
xchg
and
mov
(bad)
and
sbb
mov
repz
jbe
xchg
or
imul
stc
gs
ret
addr16
repz
cmps
not
inc
add
test
std
(bad)
push
inc
jne
mov
ins
cmp
or
(bad)
push
dec
popa
add
shl
out
add
xor
mov
iret
or
and
add
sub
ds
add
das
lods
cli
inc
shl
bnd
mov
add
(bad)
shr
jecxz
add
dec
aam
pop
sub
add
adc
shl
imul
push
cs
hlt
ret
push
pop
call
adc
pop
push
dec
call
gs
mov
mov
fmul
sbb
cwde
(bad)
xchg
jns
out
ja
lahf
xchg
(bad)
call
cmp
arpl
aad
call
leave
das
ror
sbb
outs
jmp
lock
mov
out
dec
cli
shl
inc
loop
je
pop
push
mov
fisub
or
sbb
inc
pushf
pop
mov
lods
es
leave
stos
fimul
lods
pusha
push
shr
mov
ror
(bad)
into
cmps
mov
hlt
inc
cmp
mov
push
stos
mov
and
or
dec
or
loopne
leave
retf
inc
lds
cdq
imul
sar
fdiv
bound
push
sbb
push
cmp
adc
add
xor
movs
popa
pop
mov
(bad)
fisttp
pop
ins
clc
push
push
popa
imul
adc
mov
push
inc
xchg
pusha
jne
out
dec
lods
lea
push
fcmovb
mov
adc
fild
add
push
sub
lds
bound
test
or
mov
jb
cwde
or
push
pop
cli
push
inc
or
leave
push
add
ins
ret
aam
sti
out
arpl
push
ja
cli
push
add
(bad)
ins
xor
jmp
sub
inc
xlat
or
out
jns
inc
and
adc
pop
add
jmp
leave
push
es
push
inc
dec
mov
mov
mov
mov
mov
inc
or
or
loopne
inc
ficomp
jl
pop
inc
je
push
cmc
sar
fcmovnu
(bad)
xor
mov
inc
pushf
int
push
adc
dec
jae
test
mov
sub
shl
pop
inc
add
scas
sub
shl
mov
fcomp
or
or
cmps
das
or
sti
add
xor
es
cmp
adc
cli
jecxz
xchg
cdq
push
shr
pop
int
js
int
or
push
inc
pop
sub
dec
ins
(bad)
mov
mov
scas
cmp
add
add
mov
out
mov
icebp
sbb
(bad)
sbb
rol
ror
jb
xchg
ror
sub
cmp
mov
dec
daa
fcmovu
mov
in
push
scas
in
push
mov
idiv
mov
sbb
pop
push
std
push
adc
add
adc
add
sub
or
ud0
gs
int3
xchg
das
mov
jecxz
pop
adc
xor
(bad)
pop
push
mov
lea
inc
lahf
les
or
js
mov
cmps
loop
fdivr
bound
enter
mov
cs
mov
mov
xchg
push
mov
test
(bad)
cld
and
jno
dec
gs
fadd
into
imul
into
adc
pop
push
in
inc
cwde
or
int
(bad)
(bad)
leave
mov
sbb
mov
mov
and
adc
out
movs
xchg
sar
sbb
and
push
mov
push
or
xor
jno
shl
(bad)
mov
gs
or
jne
repnz
icebp
mov
les
jmp
push
daa
pop
add
sbb
jae
pop
aas
cli
rcl
outs
mov
ja
sub
xchg
dec
xchg
push
inc
sub
pop
pop
int3
lock
sti
pop
inc
or
icebp
in
pop
test
or
icebp
xor
aad
fwait
ret
enter
cmp
sar
sub
in
int3
sti
js
xchg
daa
sbb
mov
mov
pop
(bad)
stos
push
stos
nop
retf
push
(bad)
mov
inc
call
cwde
cmps
xor
(bad)
xchg
lahf
push
iret
cmp
mov
jae
aam
arpl
jne
adc
mov
mov
and
push
and
lock
pop
jp
retf
cmps
test
out
aas
add
dec
mov
mov
nop
mov
xchg
push
repz
push
xchg
jne
xor
xchg
out
pop
xor
in
enter
icebp
scas
call
sti
cmp
pop
ja
icebp
xchg
pop
retf
call
xchg
lahf
popa
clc
inc
lods
(bad)
idiv
pop
or
cwde
xchg
lock
and
sub
fisttp
popf
fst
arpl
pop
jg
enter
or
mov
lods
pusha
mov
cld
sti
cdq
dec
or
xchg
sahf
dec
pusha
outs
mov
lods
and
and
inc
(bad)
sti
rcr
mov
and
out
jne
das
sbb
dec
ret
fmul
mov
sbb
push
xchg
pop
shr
pop
add
in
xor
cmp
push
pop
paddusw
in
mov
inc
pop
lea
test
ret
aas
sti
xchg
mov
xchg
aas
inc
push
mov
enter
push
rcr
jmp
test
rol
sbb
pop
inc
ret
fmul
or
mov
dec
adc
xchg
xchg
mov
sub
push
(bad)
ss
or
call
retf
mov
(bad)
push
inc
inc
ins
mov
and
es
mov
jb
or
and
scas
sahf
retf
mov
les
sbb
ins
add
cmps
mov
mov
and
jmp
pop
adc
jno
imul
cli
jle
push
cmc
fwait
or
nop
repnz
(bad)
adc
or
push
(bad)
push
mov
cmp
ret
xor
sub
and
adc
jle
fadd
cs
je
js
scas
call
jecxz
in
outs
aad
inc
inc
aas
xadd
setge
xor
aas
in
dec
mov
sbb
mov
push
loope
scas
jbe
mov
dec
push
xor
ret
lods
into
push
cdq
inc
mov
mov
mov
movs
xchg
call
inc
pusha
inc
shl
fbstp
clc
push
mov
fsub
jmp
icebp
xchg
xchg
lods
enter
inc
scas
cmp
or
pop
xchg
mov
test
pop
loope
or
aaa
pop
xchg
fisttp
fmul
xor
inc
imul
pop
jmp
ins
push
sahf
dec
sub
test
jne
fcomp
loope
std
aad
xchg
xor
cmp
xlat
jl
cmp
pop
xchg
jp
ficom
leave
jecxz
lds
jno
imul
push
cmp
jg
sub
jb
jg
movs
lock
and
aas
(bad)
pop
imul
adc
mov
sbb
mov
mov
fs
push
std
sbb
clc
xor
lock
aad
mov
(bad)
jo
iret
add
mov
icebp
in
out
daa
dec
add
mov
out
loopne
arpl
xchg
mov
sub
iret
add
sbb
fisubr
push
fsub
xor
outs
jle
push
sub
inc
loopne
fld
(bad)
imul
(bad)
in
dec
dec
xchg
pop
mov
mov
rcl
jno
push
mov
sbb
xchg
lods
inc
and
jne
cli
adc
or
stc
or
pop
lods
lods
nop
add
inc
xchg
mov
add
test
push
dec
cwde
cmp
inc
add
ins
mov
ret
int
mov
repnz
mov
sub
dec
cmp
stos
stc
xlat
dec
scas
gs
add
enter
clc
inc
repnz
mov
test
sbb
mov
inc
pop
pop
and
sbb
mov
ins
into
push
and
add
dec
sub
or
popf
mov
outs
fisub
(bad)
push
dec
xchg
push
imul
push
push
test
cmp
mov
add
les
(bad)
or
sbb
aad
sbb
cmp
fisttp
dec
cmp
cmp
push
sar
mov
pop
jecxz
pop
xorps
repnz
fstp
xor
stc
sahf
out
ret
(bad)
fist
aaa
mov
fidivr
jmp
jb
sahf
mov
and
outs
jmp
retf
mov
and
popa
sti
or
pop
mov
jle
xchg
rcl
sbb
push
add
mov
jns
cmps
jmp
in
jnp
into
adc
dec
popa
(bad)
mov
ja
mov
fistp
push
add
lds
add
imul
push
dec
xchg
jnp
nop
daa
unpcklps
mov
dec
and
stc
adc
xor
xor
je
(bad)
popa
std
out
in
and
sub
pop
inc
pop
add
not
push
or
aam
and
pop
daa
enter
into
pusha
pop
and
mov
cmp
inc
push
mov
movs
add
add
jno
xchg
mov
adc
dec
mov
popa
jle
pop
cmc
aaa
popf
sbb
jae
dec
ja
rcr
adc
pop
push
pop
cli
sbb
push
add
iret
fld
jbe
xor
outs
pop
push
ins
fld
xor
test
push
mov
add
mov
sbb
stos
and
sbb
repnz
imul
pop
fwait
push
mov
push
sub
jne
and
jno
shl
cmps
fdiv
pop
jae
push
data16
ret
inc
add
dec
sar
and
jb
adc
mov
or
sar
rcl
popf
aad
fimul
outs
pop
mov
setg
jnp
pop
xchg
push
push
pushf
mov
xchg
mov
fstp
(bad)
loop
push
and
xor
jl
sub
movs
add
mov
sbb
sbb
movlps
dec
mov
hlt
mul
(bad)
loopne
or
idiv
push
jns
fdivr
and
push
dec
icebp
or
push
xchg
call
scas
fmul
xchg
adc
sub
in
and
sbb
popf
fsubr
inc
jmp
scas
jbe
into
stos
pop
cdq
ret
fwait
sub
push
push
xchg
xchg
sar
adc
div
addr16
mov
pop
(bad)
mov
mov
in
imul
jno
and
add
mov
inc
xor
call
mov
gs
std
jle
pop
int3
inc
ror
jnp
sbb
mov
add
aaa
pop
in
mov
repnz
pop
lock
std
push
outs
mov
repz
push
call
nop
hlt
and
mov
pop
mov
aas
shl
arpl
mov
mov
and
push
and
pusha
add
int
add
inc
push
or
push
jno
mov
mov
cmps
shl
dec
stos
mov
pop
xchg
rcl
rcl
mov
jne
pop
ret
outs
fadd
in
add
and
xchg
or
dec
xor
push
cmp
loop
cmp
inc
mov
sbb
test
(bad)
test
mov
pop
js
ins
jne
inc
or
pop
xor
mov
(bad)
dec
sub
rcr
(bad)
xchg
jb
test
lock
out
(bad)
daa
cmp
mov
xchg
jecxz
fild
stos
mov
push
call
and
ss
ins
shl
and
sbb
add
cmps
or
les
cmp
or
iret
dec
mov
mov
mov
les
mov
pop
sbb
inc
sbb
in
jg
int
mov
pop
cmp
sbb
in
sub
sub
ins
sub
xchg
jae
cwde
and
push
repnz
int
mov
das
mov
push
pop
pop
out
data16
and
push
fnstcw
aas
inc
clc
leave
mov
push
jmp
rcr
sub
and
and
arpl
push
in
cmp
xchg
retf
jns
fs
shl
jmp
stos
xor
(bad)
fnstsw
inc
mov
push
fimul
fistp
js
jbe
mov
jo
movs
jnp
or
repnz
das
pop
pusha
mov
or
fwait
push
dec
and
sub
and
mov
jno
inc
clc
add
and
jb
(bad)
mov
jne
xor
jmp
jg
or
fxch
and
movs
and
mov
out
pop
xchg
sub
mov
push
dec
neg
int
jns
dec
mov
cmp
(bad)
dec
xchg
xchg
pop
sbb
xor
call
adc
cmp
pop
mov
sbb
fcomip
mov
mov
mov
iret
and
adc
jecxz
xchg
inc
xor
pushf
sub
imul
sbb
add
add
dec
xchg
push
jns
mov
retf
fcmovb
mov
ja
cdq
lock
add
in
push
rcr
jb
bound
dec
mov
in
mov
push
xor
mov
jns
out
lock
mov
or
xor
jns
pop
test
pop
pop
mov
xchg
sbb
loope
xchg
xor
inc
out
adc
les
test
jecxz
add
xchg
test
xchg
call
(bad)
add
retf
mov
add
ret
adc
pxor
int
xchg
push
lods
lahf
scas
push
adc
xchg
loop
retf
sbb
add
leave
push
cwde
mov
movs
mov
ja
out
cmc
cmp
fmul
mov
mov
out
pop
jnp
(bad)
xor
cli
inc
out
jb
or
push
push
outs
jecxz
cmps
xchg
in
xchg
clc
adc
xchg
retf
pop
aas
mov
mov
je
popa
pop
mov
xchg
dec
aas
jmp
jle
fcmovu
repz
or
adc
inc
sub
push
push
rol
in
iret
fs
mov
int
xchg
popf
mov
stos
sbb
loop
jecxz
mov
(bad)
iret
jb
pop
mov
fcmovne
or
inc
into
dec
mov
imul
js
scas
pop
icebp
fsub
in
pusha
push
inc
in
dec
xlat
push
sbb
or
adc
pop
xor
or
and
shl
retf
pop
loopne
cmp
fistp
xor
imul
jns
mov
sub
push
inc
xchg
push
jb
stos
dec
(bad)
pop
fild
push
add
bts
ds
jmp
out
push
mov
movs
sbb
(bad)
adc
je
mov
cld
mov
jne
mov
loop
xchg
lock
mov
adc
mov
fs
push
mov
mov
jmp
jae
jg
js
les
test
push
sub
int
ja
loope
mov
and
out
adc
in
push
and
repnz
fisub
pop
bound
loop
mov
push
movs
setp
fld
and
loopne
shl
cmps
mov
(bad)
mov
dec
dec
daa
mov
adc
mov
pop
popf
and
fdivp
test
push
and
pushf
test
mov
sahf
or
(bad)
(bad)
jno
neg
cld
(bad)
(bad)
push
test
sbb
sub
pushf
iret
mov
(bad)
pop
popa
shr
lods
jl
dec
jmp
jo
or
jp
inc
imul
rcr
rcl
mov
add
es
push
add
pop
call
sub
loope
out
sbb
stos
in
out
(bad)
inc
cmp
mov
sub
or
sub
in
int
test
cmc
dec
es
lods
mov
push
inc
jns
in
adc
mov
in
dec
inc
jge
aas
mov
push
inc
pop
and
hlt
push
jmp
dec
mov
scas
rol
sar
sbb
sub
sahf
xor
dec
pop
popa
fild
dec
(bad)
rol
mov
sub
sub
or
int
cmps
out
push
retf
or
fldl2e
fdiv
outs
xor
xchg
sub
mov
int
pop
mov
xor
mov
sub
jp
stos
frstor
cwde
xchg
jmp
repz
or
add
test
pop
fldcw
cld
mov
mov
fstp
jg
sahf
sahf
xchg
leave
dec
jge
xchg
loop
cmp
sbb
inc
outs
xor
fdiv
sub
sub
fdivr
mov
sbb
rcr
sub
adc
ret
jbe
mov
add
call
pop
mov
fsub
xlat
test
xor
imul
dec
nop
or
sub
(bad)
fist
mov
sbb
xor
fwait
mov
xor
nop
test
outs
mov
cld
jl
jecxz
(bad)
pusha
setbe
jmp
in
rcr
mov
jle
and
sub
es
fisttp
pop
jno
mov
sub
inc
nop
cmps
inc
push
and
adc
or
and
aad
imul
daa
cmp
pop
sbb
xor
inc
add
ja
aam
pop
loop
int3
mov
bndstx
adc
jb
arpl
js
lock
stc
fs
stos
(bad)
mov
arpl
neg
xchg
or
dec
cmp
mov
aaa
pop
push
inc
mov
aaa
inc
clc
and
push
sbb
inc
xchg
xor
js
inc
add
push
cmp
adc
shl
mov
pop
aam
nop
call
movs
int3
or
neg
and
xor
pop
mov
jle
inc
and
nop
push
(bad)
addr16
shr
popa
adc
inc
ins
dec
nop
retf
clc
shl
into
pop
xor
pop
les
push
cmps
cmp
cdq
js
call
fmul
dec
cmc
pop
out
push
(bad)
mov
cmps
fbstp
push
mov
jecxz
and
into
pop
adc
push
xor
hlt
icebp
daa
and
xchg
xchg
fistp
pop
sub
ins
mov
stc
pop
sub
xchg
cmp
aas
in
dec
sub
ret
je
inc
xchg
call
pop
(bad)
push
pushf
imul
fs
push
leave
das
out
jnp
jbe
dec
popa
addr16
inc
(bad)
mov
cld
mov
mov
xor
scas
fnstenv
cli
cli
cmc
in
mul
outs
mov
ret
mov
xor
out
or
pushf
xchg
and
fidiv
lods
pop
sbb
dec
ss
push
cmp
popa
sahf
iret
xchg
inc
mov
cmps
outs
or
push
fwait
cmp
add
dec
and
lds
pop
lds
out
stos
adc
lock
fist
and
repz
fsub
cs
adc
out
(bad)
pop
pop
jecxz
cmps
jg
(bad)
rcr
lock
pop
imul
add
mov
int
popa
aas
addr16
cdq
idiv
sbb
cmc
jbe
adc
mov
push
or
mov
cmp
or
stc
movs
xor
imul
ror
out
mov
out
lahf
(bad)
sbb
gs
inc
cmp
and
ins
mov
sbb
in
call
test
inc
ss
outs
lahf
dec
push
inc
xor
push
fmul
test
test
cmp
(bad)
js
mov
pop
jno
pop
dec
dec
jo
in
and
add
jns
adc
push
mov
rol
ret
std
jne
cmp
cmps
push
gs
fild
fmul
iret
sbb
xor
js
pop
mov
dec
jg
add
(bad)
scas
cli
fwait
push
jbe
mov
daa
in
jnp
hlt
pop
test
stc
arpl
popf
inc
into
fiadd
push
stos
jecxz
retf
mov
xor
add
sbb
mov
xor
mov
inc
push
outs
frstor
pop
push
push
popf
mov
mov
cmp
jnp
call
ror
sbb
in
fimul
cmc
lods
test
and
inc
sub
inc
rcr
push
cmp
icebp
add
mov
lods
add
popf
fwait
repnz
jns
pop
cld
jae
dec
lds
(bad)
fbld
pusha
popf
mov
sbb
add
outs
sti
adc
or
or
fwait
sub
in
imul
retf
adc
in
(bad)
and
sub
sti
or
dec
test
cld
cmp
jge
pop
inc
scas
jmp
sbb
(bad)
and
call
jb
and
xor
lea
retf
jmp
cmp
lds
inc
jb
loopne
jmp
popa
mov
rcl
loope
add
icebp
mov
outs
mov
jle
xchg
jle
rol
gs
mov
sbb
xor
(bad)
jmp
pop
movs
sub
(bad)
leave
inc
arpl
cmps
in
lods
lahf
inc
shr
fistp
or
or
inc
jne
inc
cli
xchg
mov
lds
jb
sbb
add
jb
nop
outs
mov
inc
daa
dec
mov
(bad)
stos
lds
cdq
mov
ret
outs
add
pop
xchg
(bad)
cmp
sbb
adc
mov
pop
jl
or
mov
inc
or
push
add
push
push
sub
es
xor
or
lock
mov
fcomp
cdq
cmp
xlat
dec
scas
cwde
and
mov
call
scas
xor
in
mov
popa
call
shl
adc
mov
fild
and
mov
int
jns
cwde
into
and
jae
pop
pop
(bad)
dec
mov
mov
es
xchg
(bad)
push
loopne
pop
je
jmp
arpl
mov
xchg
dec
mov
faddp
and
pop
mov
clc
ss
scas
jecxz
inc
loopne
jle
mov
stos
and
inc
popf
or
or
jns
mov
jno
in
outs
or
sub
leave
sbb
sub
loopne
mov
imul
inc
jbe
scas
or
xor
icebp
xchg
loopne
cmp
sub
jl
adc
xlat
(bad)
adc
mov
inc
and
cmp
sbb
pop
dec
mov
xor
mov
js
mov
lock
rol
push
dec
lahf
in
push
push
cld
js
jno
pop
inc
cmps
mov
jecxz
mov
in
shl
(bad)
xor
scas
out
inc
push
retf
add
pop
xchg
je
rcl
movs
sbb
push
loope
cmp
int
sbb
lds
mov
sub
test
xor
mov
loope
pushf
lods
stc
xchg
or
es
ret
push
push
movs
sti
stos
xchg
mov
xchg
imul
inc
jno
inc
popf
inc
push
repnz
pop
fild
cmp
mov
loopne
push
sar
sub
repz
aam
je
aas
sbb
fadd
lods
pushf
dec
add
call
fisttp
adc
jb
pop
sysenter
shr
pop
jp
jmp
mov
loope
(bad)
pop
rol
mov
loopne
mul
cmp
je
es
mov
pusha
pusha
push
and
inc
retf
or
(bad)
mov
inc
mov
dec
dec
inc
aam
push
jp
imul
jl
rep
sbb
stc
jle
cmps
and
push
xchg
movs
xchg
xchg
xchg
ins
je
movs
push
into
pop
mov
sub
je
(bad)
leave
jecxz
dec
and
retf
jno
push
jb
pop
xor
xchg
push
cmps
ret
adc
dec
stc
gs
cli
xchg
rcl
ja
mov
push
pop
push
das
ret
pusha
sahf
(bad)
and
ror
lea
data16
xchg
inc
aad
jge
push
push
nop
out
lods
aam
jne
and
inc
sbb
inc
xchg
ret
push
(bad)
fwait
mov
das
fstp
clc
push
or
inc
xchg
aas
inc
icebp
xor
and
inc
dec
xchg
fdivr
dec
int3
dec
dec
cwde
aas
les
loop
cmp
push
ds
push
jno
or
cdq
imul
iret
daa
sbb
cld
adc
lock
jmp
add
push
enter
jb
ss
inc
push
inc
inc
mov
xchg
movs
(bad)
pop
je
sub
dec
push
push
(bad)
aaa
add
lods
ret
xchg
adc
mov
fsubp
icebp
in
pop
stc
cs
mov
ja
aas
add
movs
dec
pop
pop
or
xchg
sub
cmp
outs
xor
call
sub
sbb
mov
or
adc
cmp
stos
mov
jns
cmps
and
xor
stc
icebp
cmp
int
adc
push
adc
mov
and
xchg
xchg
sbb
adc
xor
and
sbb
gs
dec
cli
pop
popf
or
adc
popf
lea
push
mov
test
loope
sbb
cmp
arpl
mov
into
xchg
test
lods
and
cmp
xchg
scas
cdq
repz
call
lahf
lea
mov
out
dec
sbb
popf
inc
std
push
cmp
mov
cdq
push
imul
dec
sbb
movsx
sti
test
aas
pop
faddp
lods
movs
inc
out
xchg
mov
mov
push
mov
dec
inc
rcl
cwde
sbb
xor
jae
mov
xchg
mov
dec
sub
add
push
jns
adc
jnp
shr
adc
scas
pop
stos
rcl
mov
stos
fstp
push
xor
mov
pop
out
iret
add
pop
and
push
adc
(bad)
adc
fldcw
mov
sbb
cmp
cmp
call
xchg
sar
xchg
jmp
xchg
xor
shr
ds
leave
repz
cmp
or
cmps
sub
mov
fsub
inc
add
jecxz
aam
fwait
neg
dec
push
call
in
sbb
jno
in
rol
pusha
out
xor
adc
cmp
je
mov
cmp
clc
push
mov
adc
pop
jne
inc
mov
pop
rdtsc
(bad)
sbb
xor
les
sub
lea
lahf
jecxz
push
mov
rol
mov
push
test
js
cmp
push
outs
add
leave
inc
inc
xchg
jg
push
(bad)
test
ins
inc
cmp
aaa
jle
sub
sub
xchg
mov
bound
sahf
pop
repnz
mov
das
lds
mov
pop
rol
mov
out
and
cwde
das
jmp
icebp
call
aad
sub
and
xlat
or
mov
ds
pop
add
dec
out
neg
xchg
adc
fs
arpl
popa
add
inc
mov
scas
mov
push
das
aad
xchg
clc
mov
mov
(bad)
mov
shr
sti
test
push
pop
jmp
lods
retf
and
push
fs
push
rcr
push
movs
lods
xchg
shl
xor
or
and
test
mov
into
or
cmc
out
mov
inc
mov
fcomp
sbb
out
mov
ret
popf
dec
outs
jb
inc
fwait
sub
sahf
inc
(bad)
std
cmp
fstp
inc
movs
int3
(bad)
cmps
fstp
push
add
mov
inc
shl
cdq
push
jno
das
outs
xchg
mov
cmp
mov
int3
movs
fwait
xchg
pop
xlat
sub
lahf
imul
iret
out
test
mov
mov
(bad)
ror
mov
mov
or
fiadd
push
test
pop
cmp
and
push
iret
popf
or
jne
jo
fistp
adc
jecxz
mov
lods
push
sub
cmp
pop
std
test
retf
sbb
loope
sub
and
in
jo
ja
jo
add
bound
push
pop
sub
leave
(bad)
xchg
in
fsubr
push
cmps
push
cs
popa
push
cmps
mov
push
rcl
adc
int
push
mov
jnp
sbb
(bad)
(bad)
in
das
fadd
adc
jo
xor
ss
cdq
sub
(bad)
mov
loop
jo
lods
(bad)
lahf
call
dec
not
cmp
fs
mov
sub
cli
ror
xchg
xor
mov
mov
adc
or
data16
pop
sbb
hlt
nop
sbb
and
retf
mov
inc
cdq
push
fcomp
fadd
or
fcmovb
cdq
jmp
inc
not
push
sar
cmp
out
mov
adc
mov
ins
aaa
jns
push
jns
jno
(bad)
enter
and
das
xor
mov
xchg
push
movs
dec
shl
mov
adc
xchg
jmp
mov
mov
rcr
(bad)
dec
sbb
ret
mov
xchg
ins
jmp
fisub
iret
jge
js
movs
or
pop
test
mov
addr16
pop
adc
lods
push
fistp
adc
inc
in
fs
aad
std
xchg
(bad)
mov
jmp
mov
sub
sub
jl
lock
mov
jo
das
cmp
scas
add
pop
adc
inc
int
pop
ficom
inc
mov
inc
sub
pop
adc
loope
shl
iret
(bad)
mov
push
xor
cmps
les
movs
(bad)
js
jge
add
xor
lahf
sbb
push
test
shr
pop
mov
mov
movs
ror
adc
cwde
jp
popa
rcl
pop
pusha
cmc
pop
rol
mov
aam
xchg
mov
mov
pop
mov
mov
test
test
stos
dec
dec
lods
adc
push
jg
xchg
push
jmp
jae
data16
pop
mov
int
movs
or
mov
add
repz
(bad)
inc
sbb
test
pop
mov
enter
adc
add
pop
mov
mov
and
sub
addr16
jmp
arpl
into
and
push
bound
popf
adc
sbb
xchg
ret
jae
pop
sub
mov
retf
adc
sub
inc
add
mov
jmp
jne
and
and
pop
mov
sbb
imul
mov
out
mov
inc
mov
and
(bad)
pop
in
jne
pop
mov
aam
inc
sub
xchg
fs
mov
xchg
xor
je
das
inc
std
out
inc
pop
fs
arpl
xor
xchg
arpl
mov
repnz
xchg
bound
test
aam
aam
fadd
(bad)
iret
popa
sbb
daa
adc
inc
push
int3
sub
add
mov
jecxz
mov
daa
sar
and
in
rcl
ins
dec
sub
mov
scas
ret
push
and
ret
repnz
div
sar
mov
fidiv
ins
pop
ins
sbb
sahf
(bad)
loopne
mov
loop
out
data16
mov
push
out
xor
mov
rcl
stos
loop
js
mov
in
shl
out
cmp
jne
dec
out
mov
adc
sub
xchg
xor
mov
xor
je
shr
or
fstp
mov
dec
add
xor
sub
loop
cld
xlat
leave
bound
dec
(bad)
(bad)
adc
or
clc
hlt
mov
push
mov
les
inc
adc
or
or
xchg
test
add
xor
add
repz
dec
cli
icebp
nop
loopne
(bad)
data16
xlat
ja
sbb
jo
push
mov
sbb
scas
push
ror
(bad)
movs
loop
aam
jno
mov
jb
add
mov
adc
pop
stos
jns
(bad)
cs
add
pop
out
or
(bad)
mov
cmp
in
cmc
dec
shl
cmc
aad
jle
pop
cmp
test
or
mov
test
repz
mov
inc
or
push
fld
aad
dec
fadd
sub
and
xchg
sbb
imul
aas
sub
mov
sub
inc
repnz
stos
xor
sar
mov
push
sbb
jno
fdivr
mov
mov
xor
pushf
and
sahf
mov
dec
jae
jl
ror
sub
sbb
sahf
in
cmc
test
mov
fwait
inc
mul
fcomp
jae
rol
xchg
xor
out
xchg
mov
dec
sbb
ret
sbb
jl
xor
mov
out
xchg
dec
ds
add
push
lods
sbb
sub
pop
fldcw
pop
icebp
pop
adc
jmp
pop
push
popa
imul
cld
or
cld
fild
fld
dec
int
jge
xor
inc
add
mov
sar
movs
mov
fisub
cmp
cmps
shl
add
mov
or
pop
lahf
stos
xor
cmp
(bad)
push
xor
push
push
popa
out
imul
xchg
data16
mov
and
cwde
clc
arpl
call
imul
cmc
enter
fucomp
addr16
repnz
add
jmp
gs
sbb
jbe
cdq
daa
(bad)
mov
push
sbb
cmps
int
push
cwde
mov
ffree
xchg
xor
stos
add
adc
shl
or
cmp
adc
cmc
or
adc
(bad)
clc
mov
cli
fimul
adc
inc
dec
cmps
jae
push
out
xchg
mov
adc
mov
xor
adc
in
add
pop
imul
push
dec
ds
(bad)
rcr
out
mov
lahf
scas
push
mov
aas
outs
pop
icebp
inc
mov
test
sub
in
scas
cmc
hlt
mov
mov
push
jno
mov
jo
dec
call
xchg
cmps
xchg
das
(bad)
mov
cs
jb
out
or
xor
sbb
mov
addr16
push
test
and
cmps
lds
clc
cdq
xchg
or
mov
je
es
ds
push
mov
iret
call
inc
add
das
rol
mov
mov
(bad)
mov
lea
in
loop
push
push
or
jg
iret
nop
mov
push
mov
inc
test
mov
and
adc
cmp
mov
cdq
sbb
xchg
aam
xor
fpatan
jne
das
sub
inc
int3
mov
jno
lock
ret
repnz
mov
cmc
fidiv
out
cmp
addr16
pop
retf
push
mov
lods
mov
ds
and
xchg
lock
mov
stc
xchg
shl
or
aam
sub
mov
and
add
int3
mov
mov
(bad)
stos
ds
cli
xchg
popf
mov
mov
and
jmp
pusha
pop
sbb
imul
popf
sub
lods
or
test
imul
repnz
out
mov
jecxz
and
push
pushf
add
dec
movs
xchg
int
mov
push
adc
ret
inc
out
dec
fisttp
dec
ins
stos
mov
or
mov
mov
xchg
repz
or
div
fs
mov
jge
sub
sbb
hlt
add
and
jmp
mov
xor
(bad)
sub
mov
fisub
mov
out
rcl
or
ss
mov
movs
inc
dec
mov
pop
cmp
mov
jl
aam
cli
adc
pop
add
jl
jno
adc
popf
es
push
or
cmp
stos
mov
mov
jl
loope
add
cmp
jbe
jne
lods
xchg
mov
call
jmp
xchg
mov
popa
repz
xchg
(bad)
xchg
cwde
xor
inc
outs
aaa
fsubr
and
es
mov
mov
fist
adc
ja
or
mov
mov
outs
lods
or
xchg
pop
loopne
leave
xchg
je
add
es
push
rep
or
call
pop
xor
loope
add
or
fwait
retf
in
loope
jo
lock
xchg
sbb
cmp
fiadd
push
imul
leave
adc
icebp
cmp
iret
pop
or
adc
jecxz
sbb
sbb
jne
jbe
push
cs
stos
xchg
or
cmps
add
jmp
in
repnz
(bad)
ja
iret
mov
retf
pusha
adc
sub
pop
ret
push
sti
in
mov
xchg
fsubr
ror
enter
in
push
mov
mov
mov
pop
inc
cmps
sar
call
lea
cmp
push
lahf
shl
add
std
daa
and
stos
and
dec
adc
cmps
fsub
fimul
push
push
(bad)
rcl
cli
cld
mov
mov
das
adc
add
dec
scas
fadd
pop
cmp
mov
cmps
cmp
jae
mov
or
add
add
and
ss
xor
sar
jle
add
sbb
push
pop
push
inc
rcl
mov
movs
or
inc
add
bound
addr16
sub
mul
jl
fcom
loop
dec
pop
shl
mov
fidivr
adc
xchg
add
dec
popa
std
jbe
fs
adc
rcl
push
daa
pop
mov
xor
and
sub
mov
or
stos
sub
and
inc
call
push
shl
shl
(bad)
fs
mov
xor
mov
mov
and
xchg
dec
repz
ins
jmp
cmps
jbe
pop
in
mov
test
fsub
push
cmp
push
outs
lods
dec
hlt
cmp
aad
jmp
add
rcl
jge
xchg
fcomp
mov
xor
mov
iret
pop
pop
repz
mov
jle
outs
test
data16
fwait
cmps
add
out
jbe
pop
push
or
pop
jno
push
out
pop
inc
mov
rcl
in
xlat
sbb
xor
ret
scas
xlat
lods
mov
leave
cmc
ins
aaa
xchg
out
div
mov
push
cmp
addr16
ficom
sbb
fsubr
out
repnz
sbb
lahf
mov
lods
or
push
cmps
aaa
mov
adc
or
and
ds
push
ret
adc
daa
movs
movs
cmc
dec
ret
push
adc
mov
loopne
ror
test
mov
xchg
ins
push
ins
in
fs
mov
jmp
cmp
(bad)
in
cmps
ss
jge
aad
or
sub
dec
scas
hlt
out
mov
and
stc
pop
xchg
jb
dec
pop
push
jp
mov
jmp
in
or
retf
inc
xchg
out
aad
jo
add
sub
mov
fadd
popa
mov
leave
push
dec
fsubr
mov
jb
pop
mov
test
mov
sub
outs
repnz
mov
nop
inc
imul
cmp
in
scas
out
pop
pop
push
lahf
(bad)
jbe
scas
and
fadd
push
or
or
shl
out
jo
xchg
xlat
xor
or
pop
out
adc
mov
dec
inc
jne
mov
into
stos
add
pop
adc
fadd
cmps
add
inc
cli
int
aaa
nop
out
cmps
jmp
or
cmp
xlat
fwait
retf
jbe
aad
xor
push
pop
jp
lahf
mov
xchg
add
sub
mul
add
push
xchg
lds
adc
dec
dec
cmp
push
cmp
lea
adc
sahf
call
rcl
fs
xor
shr
test
inc
dec
dec
cli
mov
cld
or
add
cmp
das
xlat
movs
fisttp
rcr
mov
xor
mov
xchg
enter
out
pop
loope
arpl
popf
fwait
leave
aaa
in
jecxz
repz
std
adc
cwde
cmp
sub
mov
mov
je
mov
jb
idiv
mov
arpl
cmp
stos
push
mov
inc
xchg
adc
inc
and
fcomi
sub
push
aad
into
out
cwde
in
xor
jg
(bad)
mov
std
icebp
pusha
dec
sub
jb
jnp
push
sbb
cld
ror
add
(bad)
pop
cmps
fisttp
sub
inc
mov
jge
imul
push
loope
inc
test
dec
push
addr16
cdq
inc
(bad)
icebp
cmps
adc
lea
add
jnp
and
jae
push
xor
jge
push
xor
es
fiadd
out
cmp
mov
jne
std
retf
xchg
pop
fst
adc
scas
mov
add
pusha
ret
inc
mov
jae
adc
fwait
sbb
mov
and
retf
dec
out
mov
sub
les
adc
lea
xchg
sub
mov
into
shl
cmp
(bad)
sbb
in
cmp
jmp
sbb
jmp
xor
mov
jg
je
addr16
inc
retf
fbstp
sub
repz
sub
or
ret
pop
sbb
inc
xor
jmp
dec
sbb
outs
mov
out
jne
mov
neg
ret
call
xor
adc
pusha
jb
test
das
popa
jno
mov
test
ins
adc
sbb
mov
fcmovb
repnz
cmp
out
dec
push
fstp
mov
mov
pop
inc
xchg
retf
scas
and
push
mov
sahf
and
sub
out
arpl
xor
outs
mov
adc
test
pushf
sbb
and
and
icebp
sub
cld
push
stc
sub
sub
pop
(bad)
xor
fist
and
inc
push
xchg
and
aas
cmc
mov
sub
or
sub
mov
adc
hlt
popf
add
adc
inc
int
cmp
popa
jp
mov
add
pop
cmp
mov
adc
push
inc
nop
hlt
push
stc
les
inc
pop
mov
aaa
aas
and
(bad)
pop
aad
pop
sbb
mov
mov
in
sbb
gs
call
jbe
mov
lahf
cs
xlat
movs
aad
lds
jne
mov
es
jg
icebp
stos
jns
(bad)
add
and
mov
add
fs
sbb
rcl
xchg
sbb
movs
mov
jl
fimul
popa
popf
outs
stos
xchg
inc
das
ror
xchg
sub
stos
jae
push
push
mov
jmp
jmp
jmp
jge
push
jle
cwde
imul
retf
frndint
fs
in
xor
pushf
add
cmc
adc
idiv
lds
push
rol
dec
cdq
imul
push
and
mov
lea
mov
cli
std
lods
aam
inc
imul
pop
add
in
dec
sbb
mov
out
out
dec
add
iret
xchg
rcl
test
das
enter
or
(bad)
fcmove
(bad)
sub
push
add
mov
and
test
nop
call
pop
mov
mov
(bad)
xor
fidiv
and
or
xor
adc
sbb
dec
mov
xor
mov
stos
std
test
jo
push
dec
adc
lahf
pop
xor
stc
mov
mov
push
pop
pop
cmp
test
dec
cli
jmp
fs
test
mov
js
inc
push
pop
retf
fistp
xchg
cli
xor
push
xor
push
push
fcomp
outs
pusha
jnp
icebp
push
push
inc
mov
mov
retfw
mov
dec
cmc
aam
(bad)
(bad)
das
loop
out
test
int
icebp
js
mov
std
stc
mov
lea
fcomp
outs
push
(bad)
stos
jo
(bad)
hlt
inc
fbstp
mov
push
sbb
xchg
lods
fld
cmp
mov
inc
bound
shr
jo
jg
and
xor
push
aas
jnp
in
movs
mov
imul
add
add
mov
into
mov
pop
and
and
lods
mov
add
jne
jp
adc
mov
inc
ret
pop
enter
dec
sbb
sub
mov
sub
movs
jnp
or
(bad)
cmp
jg
sub
call
xor
jge
fnstsw
pop
add
inc
xchg
mov
(bad)
push
shl
mov
fcom
lock
or
pop
je
lea
sbb
fisttp
outs
shl
gs
mov
mov
and
fsubp
xchg
adc
les
test
scas
arpl
call
mov
js
repnz
cmps
mov
int3
int3
dec
mov
jg
xor
mov
out
jl
adc
lahf
and
loopne
mov
cmps
push
popf
xchg
out
xchg
out
push
adc
mov
cmps
rcl
xor
test
std
inc
stos
jg
in
hlt
and
push
nop
sbb
lahf
std
fdivr
sbb
mov
cmps
mov
and
in
mov
ins
enter
mov
dec
xchg
sbb
lock
jle
adc
add
mov
nop
jno
stos
enter
mov
mov
jns
popa
jmp
popf
and
and
mov
sub
push
aad
cmps
repz
and
add
neg
mov
mov
sub
push
pop
or
in
mov
cdq
sbb
scas
arpl
dec
out
mov
sbb
jl
xor
je
retf
imul
or
jecxz
aas
jns
in
push
xchg
addr16
cwde
daa
jge
or
push
imul
lods
pop
push
jmp
popf
cmp
jno
arpl
sbb
jno
aad
sub
fs
xchg
cmp
scas
jnp
adc
gs
push
push
mov
stc
mov
and
mov
adc
pop
fmul
lods
xchg
mov
sbb
imul
xchg
push
add
scas
adc
jbe
mul
mov
lods
sbb
mov
adc
cmp
jg
movs
inc
outs
add
pop
imul
stos
out
xchg
dec
imul
aad
sahf
movs
adc
ret
in
sub
leave
lock
and
data16
mov
adc
cmp
mov
and
iret
retf
mov
fdivrp
xor
pop
mov
adc
arpl
jg
hlt
sbb
(bad)
mov
cmp
pusha
in
stc
push
cmp
icebp
mov
fisub
aam
neg
inc
xlat
pusha
sub
fldenv
mov
aam
movs
and
test
movs
mov
int
loopne
sub
jbe
push
add
loope
cmp
dec
fild
mov
ror
adc
lahf
adc
cdq
lods
mov
inc
int
mov
out
and
out
mov
xor
pop
ret
cmps
jns
jae
push
adc
cwde
test
pop
es
cmp
outs
pop
and
or
mov
add
movs
mov
mov
call
movs
pop
fnsave
repnz
fstp
stos
inc
cli
xchg
test
add
(bad)
and
test
test
cdq
jg
mov
stc
enter
das
xchg
sub
pushf
ret
jno
adc
gs
pop
movs
mov
ins
cmp
ins
sbb
mov
push
fnstenv
out
sahf
pop
fistp
jmp
arpl
cmp
call
cmps
movs
inc
lock
(bad)
in
(bad)
adc
xchg
lea
mov
loopne
fs
push
mov
mov
retf
imul
push
cmp
mov
pop
mov
ret
jecxz
add
xchg
loop
popa
push
mov
xrelease
push
out
mov
push
push
(bad)
fsub
(bad)
sub
pop
popf
xchg
xor
aam
fnstcw
push
into
fs
mov
outs
stc
in
push
ins
data16
loope
clc
xor
mov
mov
loope
into
addr16
lds
inc
sahf
cmp
pop
enter
mov
je
or
sub
jmp
ror
dec
lods
and
adc
in
jns
leave
stos
movs
dec
mov
jmp
mov
push
mov
mov
adc
add
sbb
ins
xchg
or
xor
movs
push
and
inc
(bad)
hlt
inc
(bad)
and
cld
ds
and
adc
mov
dec
pushf
sar
(bad)
stos
push
sub
xor
pop
cmp
scas
repz
jo
bound
not
int
sub
mov
push
adc
movs
or
cmp
(bad)
call
ins
lock
pusha
cmps
test
repnz
ins
pop
sbb
scas
dec
push
push
or
xlat
imul
loopne
push
jle
mov
sub
mov
dec
inc
mov
push
jge
ja
aam
mov
in
pop
in
xchg
sbb
int3
mov
push
mov
add
jns
rcr
pop
sbb
pop
outs
xchg
mov
loopne
and
mov
and
enter
std
loop
dec
imul
mov
jno
pop
mov
mov
push
jg
jno
out
jge
xchg
jmp
out
out
sbb
add
sub
pop
(bad)
test
xlat
sbb
std
or
sub
aas
fwait
pop
mov
pop
mov
dec
push
mov
adc
pop
fs
sbb
ror
sbb
mov
and
ds
xchg
scas
call
sbb
add
and
movs
cmp
adc
add
gs
xor
fdivr
test
push
or
lods
lock
inc
jo
cmp
ret
popf
ds
add
pop
cwde
xor
adc
mov
iret
dec
shl
dec
fcmovne
mov
frstor
pop
mov
popf
ror
mov
mov
dec
adc
int
jne
shl
fiadd
push
fild
lods
xor
and
inc
iret
or
(bad)
stc
ret
inc
cmp
leave
xchg
inc
jno
inc
jbe
push
lock
mov
xor
cmp
and
add
js
sub
cmc
into
repnz
mov
hlt
cmps
lods
js
push
sahf
cs
push
call
call
pop
add
mov
sbb
pushf
in
sub
test
pop
push
aaa
add
and
mov
ins
jp
das
sahf
push
mov
scas
int
cwde
and
out
sbb
fmul
(bad)
std
mov
and
aad
in
push
mov
(bad)
mov
scas
mov
rcl
sahf
xchg
adc
jno
popa
pop
dec
xor
(bad)
rcr
sub
iret
nop
push
add
mov
mov
fiadd
sar
sar
sbb
xchg
inc
icebp
in
push
call
mov
push
sar
adc
es
gs
(bad)
stos
mov
mov
ds
adc
add
sbb
ins
cmp
test
outs
cmps
pop
in
pop
pop
test
xchg
in
bnd
push
jmp
push
jne
jle
push
clc
mov
hlt
icebp
iret
cmp
fdivr
adc
pop
in
jo
push
aaa
nop
pop
adc
shl
mov
add
sti
out
dec
not
push
cmp
and
cmp
add
xchg
fs
fs
mov
mov
popa
jecxz
mov
adc
xor
aad
jb
push
mov
iret
sbb
mov
push
push
arpl
shl
nop
xlat
in
fdiv
mov
mov
xchg
out
pusha
xor
jge
push
jmp
stos
mov
sbb
and
push
pop
mov
xchg
pop
les
and
retf
shr
stos
out
xor
adc
pop
rol
(bad)
sub
adc
inc
mov
xchg
rcl
push
(bad)
mov
sbb
xchg
out
pushf
xchg
xchg
data16
push
repz
out
cmp
jmp
mov
mov
ins
jmp
dec
inc
in
dec
add
int
add
pop
adc
xchg
dec
push
cmp
hlt
retf
mov
add
or
xchg
inc
push
cmp
in
test
cli
pop
sbb
lahf
jb
push
fdiv
out
sub
push
xchg
sbb
mov
retf
jnp
lahf
jnp
iret
adc
mov
shr
mov
sahf
mov
inc
and
xchg
and
cmp
jp
clc
mov
add
adc
or
cdq
not
cli
movs
inc
or
mov
enter
in
icebp
sub
push
and
push
inc
push
or
test
sub
mov
pop
ds
retf
repz
stos
jp
mov
dec
sbb
add
sub
mov
add
push
inc
inc
dec
cmps
mov
mov
cdq
jecxz
dec
xchg
jecxz
ret
mov
or
loope
int
xchg
loope
ret
push
dec
aaa
test
fs
jmp
out
icebp
xchg
rcl
xchg
adc
and
push
xor
test
cs
xchg
and
pop
neg
xchg
(bad)
addr16
sub
xchg
mov
sar
nop
inc
inc
dec
pop
ficom
push
lds
xchg
push
sub
jns
movs
retf
inc
fldenv
or
fcomp
into
or
cmp
inc
dec
stos
dec
enter
adc
jb
cmp
mov
xlat
fidivr
gs
xlat
jnp
and
cmp
call
inc
dec
dec
adc
mov
push
cs
dec
jae
outs
retf
(bad)
out
loopne
push
retf
lds
sbb
sub
imul
inc
sbb
js
or
push
sub
adc
ret
push
lods
jmp
fwait
cmp
scas
popf
ret
or
cld
xchg
bound
sahf
test
lahf
fdivr
ss
nop
xor
mov
pusha
mov
mov
cmp
xchg
ja
into
push
xchg
lods
mov
jmp
inc
out
cmp
dec
lahf
retf
jae
push
sahf
or
movs
pop
xor
push
jne
and
mov
add
cdq
movs
imul
stos
mov
xor
jb
cmp
test
jmp
mov
mov
sahf
aaa
je
mov
in
cld
in
dec
ror
or
lds
aas
aam
fidivr
adc
jp
and
clc
js
call
inc
cli
fisttp
jle
mov
jge
test
sub
mov
je
sub
fwait
jle
add
xchg
ret
dec
in
mov
add
mov
jmp
(bad)
aad
cmp
mov
ss
ins
fwait
cmp
or
xor
mov
or
pop
mov
jmp
fldenv
stc
sar
and
nop
outs
or
(bad)
mov
fwait
test
das
int3
sub
call
out
pop
lods
cs
sub
lahf
xchg
push
gs
or
mov
dec
in
ficom
inc
add
add
imul
int
mov
push
adc
push
adc
loop
and
or
pop
repz
adc
jmp
dec
inc
sub
xor
movs
aas
lock
jb
mov
pop
lods
int
pop
mov
shr
shl
popa
fild
cmp
retf
pop
call
loopne
in
xchg
stos
ins
hlt
adc
fdivr
test
cmc
fmul
je
lea
iret
mov
retf
mov
jg
shl
outs
scas
(bad)
int3
leave
(bad)
xchg
jbe
call
iret
sahf
in
scas
mov
sahf
into
test
xchg
imul
mov
or
cmp
push
ja
std
imul
dec
mov
sbb
or
loop
pop
ds
(bad)
pop
jbe
test
inc
add
xor
sahf
sbb
jmp
(bad)
pop
pop
cmps
xor
adc
fisubr
xor
jle
mov
(bad)
mov
call
arpl
dec
(bad)
mov
mov
cmp
xor
stos
shr
sbb
cmp
aam
push
in
mov
push
sbb
push
pop
pop
inc
outs
(bad)
fnsave
xchg
add
scas
jne
dec
ret
in
stc
push
xchg
sbb
mov
mov
mov
lds
lods
les
icebp
dec
dec
test
and
rcr
(bad)
das
and
ja
mov
cld
sti
fldcw
mov
cmp
out
movs
cmps
mov
jno
add
test
add
dec
(bad)
pop
leavew
(bad)
adc
adc
pop
inc
xor
or
scas
xchg
(bad)
leave
leave
sub
push
sbb
adc
(bad)
or
scas
aam
push
cmp
rcl
fadd
add
sbb
mov
xchg
inc
add
(bad)
jns
sbb
jno
scas
not
ss
mov
dec
or
add
lods
loopne
cmps
loopne
sbb
fcmovnu
fsub
mov
enter
outs
mov
(bad)
jns
jp
add
xchg
dec
push
xor
repnz
je
push
ja
mov
dec
test
cmps
push
cmp
mov
fbstp
add
mov
and
(bad)
repz
jp
xor
adc
jge
cmp
in
xor
cmp
int3
imul
mov
fwait
pop
pushf
xchg
push
inc
clc
inc
sti
dec
aad
mov
jb
dec
cld
xchg
mov
nop
dec
push
mov
xchg
sub
cmps
cwde
jg
mov
jle
add
push
repz
cmc
cdq
mov
(bad)
jl
push
push
(bad)
iret
xor
(bad)
mov
dec
mov
adc
inc
aad
mov
inc
cmps
in
nop
das
sti
xor
or
scas
std
push
ins
scas
and
out
js
xchg
jbe
sbb
(bad)
and
inc
jbe
leave
test
and
outs
pop
inc
mov
jne
(bad)
and
fcomip
cmp
sbb
mov
push
fucomip
(bad)
out
sbb
icebp
pop
xor
cwde
cmp
cld
mov
aam
xchg
enter
lahf
mov
inc
push
test
xchg
sbb
cmps
movs
cli
mov
ds
ins
pop
mov
sub
jns
mov
retf
in
jp
mov
pshufw
out
or
scas
call
xchg
jbe
(bad)
lds
xor
fdivr
inc
adc
xchg
pop
sar
xor
stc
fld
cmp
retf
cdq
(bad)
fmul
and
inc
and
sbb
inc
fs
outs
push
push
dec
movs
mov
push
or
imul
mov
loope
mov
cwde
mov
push
pushf
shl
fidivr
mov
imul
aas
sti
cmp
adc
xchg
and
cmps
(bad)
in
mov
mov
je
fs
adc
dec
mov
or
sub
repz
ja
ins
fs
popa
add
dec
xor
sub
retf
and
fcmovu
xchg
sti
and
ficomp
out
(bad)
out
cmps
sub
pop
adc
(bad)
jp
or
adc
jns
sub
imul
fcom
add
frstor
push
lock
out
adc
ret
jns
sbb
shl
sbb
fs
mov
xchg
inc
adc
call
inc
and
cmp
fld
adc
mov
sub
aaa
loope
icebp
pushf
sbb
in
imul
movs
pop
cmp
icebp
sahf
jmp
ja
nop
call
dec
aam
cmc
nop
mov
jl
jbe
ins
cmc
sub
mov
jo
leave
and
loope
jle
retf
mov
push
xor
xchg
or
pop
sbb
(bad)
sbb
ret
pop
sub
dec
adc
out
jecxz
scas
sahf
xchg
in
cmp
aas
jmp
iret
loop
std
dec
sbb
loop
xchg
add
or
jg
and
in
mov
mov
xchg
int
pop
xchg
xchg
sbb
mov
or
(bad)
icebp
nop
inc
fwait
pop
or
pushf
fwait
loope
and
imul
pop
sub
adc
mov
into
xchg
inc
ins
xor
test
test
cmps
mov
xor
add
jo
out
(bad)
in
ret
fiadd
adc
pop
inc
aam
ret
cmps
push
sub
aaa
fdiv
xchg
mov
or
imul
test
clc
pushf
jnp
mov
out
pop
int3
add
loope
dec
mov
in
adc
pop
push
push
loop
cmp
pop
das
cmp
xor
dec
and
adc
pop
xchg
inc
mov
inc
xchg
(bad)
cmp
test
adc
iret
xor
out
std
leave
lahf
push
inc
push
inc
cwde
sbb
push
xchg
sub
cmp
push
lods
fs
push
pop
xchg
rol
std
pop
cmp
add
pop
hlt
pop
jnp
and
jae
rcl
fsubrp
inc
and
(bad)
push
cld
xor
xor
xor
daa
out
cmp
arpl
jnp
cld
jmp
cmc
dec
out
aas
jns
mov
or
test
pop
mov
rol
cmp
inc
pop
xor
pop
mov
repnz
xchg
test
fdivr
xchg
call
or
mov
cli
xor
inc
loope
and
stos
daa
imul
ja
or
fst
push
sub
mov
or
cmp
pop
fstp
mov
repnz
cmp
jne
maxps
jb
sbb
and
adc
mov
dec
das
nop
lods
mov
inc
jl
sbb
in
fwait
ret
ins
or
cmp
push
cmps
outs
mov
jp
xchg
aad
sar
sahf
(bad)
in
je
ficom
(bad)
aas
xchg
mov
ins
fldcw
pop
dec
fdivr
sbb
push
dec
repnz
jmp
dec
adc
mov
ds
jecxz
arpl
mov
(bad)
cmp
cld
loop
fwait
in
sbb
imul
and
imul
dec
pop
sti
je
mov
xchg
sbb
cmps
push
iret
dec
pop
out
cli
mov
outs
sub
fcmovne
xchg
xchg
xor
mov
jmp
in
aas
add
push
fadd
call
sbb
xor
jns
jmp
aas
iret
loope
jmp
loopne
sti
and
dec
test
and
or
mov
sub
lahf
or
aas
std
ins
mov
loope
clc
jmp
dec
pop
std
je
mov
rcr
cld
inc
(bad)
push
fdiv
xchg
cdq
je
xchg
jne
jae
sbb
fcmove
(bad)
jp
cli
mov
imul
gs
adc
mov
test
scas
out
mov
fwait
jle
jmp
loope
aaa
or
loope
add
(bad)
mov
and
inc
pop
fistp
sar
mov
fimul
mov
ds
in
xchg
add
out
pop
mul
movs
sti
leave
aad
mov
test
pop
test
sbb
mov
aaa
jmp
mov
cli
dec
jae
and
scas
add
jle
jae
push
ficom
(bad)
sahf
mov
stos
sbb
lods
(bad)
cli
retf
cmps
fsubr
pslld
daa
and
loop
mov
sbb
mov
mov
jecxz
sub
inc
add
mov
sahf
add
aas
loop
or
in
pop
cld
add
mov
jg
repnz
movs
mov
push
cli
imul
xor
sbb
jmp
mov
nop
dec
clc
es
cmps
imul
ret
(bad)
test
outs
aad
cmp
popa
jge
ins
jne
cs
mov
dec
test
or
cmps
jg
stos
inc
cmps
push
scas
jne
repz
mov
and
push
pushf
pop
and
pop
shl
dec
fidivr
test
mov
lahf
call
jp
mov
mov
sbb
jns
rcr
mov
jle
loope
cmp
mov
xchg
jo
pop
fdiv
jbe
ret
sbb
and
int
ss
mov
xchg
leave
or
loopne
or
stos
and
cli
stos
das
es
fwait
xor
inc
(bad)
adc
pop
pop
sbb
push
dec
imul
mov
outs
(bad)
rcl
ds
jecxz
in
push
xchg
add
jmp
dec
call
inc
mov
sar
inc
(bad)
push
les
outs
fld
jnp
mov
iret
shl
and
add
lods
push
mov
jb
push
loope
jns
rol
inc
mov
jle
jb
ja
xor
iret
adc
neg
sti
xor
ds
cli
pop
inc
mov
sbb
and
xlat
fistp
ficom
dec
test
outs
jecxz
call
stos
jmp
add
out
ja
cmp
outs
xor
repnz
pop
scas
lahf
ret
push
fisttp
fisttp
ins
cwde
and
inc
mov
int
data16
call
retf
cli
pusha
add
dec
mov
adc
sbb
es
movs
dec
xor
jle
and
mov
cli
jle
pusha
push
and
xor
std
imul
pop
or
mov
and
xor
jb
inc
lods
sbb
xchg
mov
hlt
cmp
push
pop
push
fwait
push
jg
gs
xchg
mov
jge
fdecstp
sar
ror
retf
cmp
add
loop
int
jns
data16
mov
mov
fidiv
push
imul
inc
xor
fadd
std
jne
nop
mov
shl
shl
sub
cmp
sub
push
movs
ret
mov
sub
aas
jmp
xchg
outs
push
sub
sub
leave
add
loop
jnp
inc
and
xor
cs
out
fisttp
sbb
sub
fwait
lea
add
mov
inc
push
pop
(bad)
test
in
ret
in
lds
xor
fmul
fs
mov
fwait
lock
enter
cs
ds
inc
test
cld
mov
icebp
cmp
out
enter
movs
mov
push
scas
sbb
pop
xchg
in
jno
loope
(bad)
jmp
add
jg
movs
xor
les
arpl
inc
and
lea
add
cli
add
adc
mov
std
stc
addr16
ss
or
pop
clc
sbb
data16
pop
std
fs
mov
and
add
cmps
cli
lds
iret
or
inc
imul
int3
mov
cmovbe
push
pop
push
pop
mov
fcom
sbb
(bad)
mov
rol
and
and
push
(bad)
lock
jg
(bad)
or
out
call
fdivr
add
bound
in
outs
mov
sbb
les
inc
lods
ror
idiv
push
adc
fwait
and
and
pop
mov
push
xchg
mov
pop
aad
jl
(bad)
adc
pop
jge
sub
scas
jns
jmp
rcl
dec
jne
ja
mov
adc
ja
test
fdiv
inc
mov
(bad)
mov
jmp
(bad)
retf
stos
lea
add
loop
or
mov
scas
mov
dec
cli
sub
push
push
movs
hlt
mov
jbe
fiadd
loopne
mov
cmp
cmp
aaa
xor
adc
(bad)
(bad)
lock
adc
(bad)
mov
mov
jae
popf
mov
pusha
jg
xchg
fisub
or
bound
inc
cmp
ja
jg
mov
(bad)
xor
and
pop
push
pop
or
xor
sahf
out
jecxz
sbb
ja
xchg
arpl
icebp
mov
jl
xchg
mov
sbb
fsub
jge
les
xchg
mov
sti
cmps
ins
jo
ss
call
ins
sub
pop
popf
xchg
push
add
push
fcmovu
push
or
cwde
xchg
int
rcr
ficomp
popa
mov
retf
aam
mov
cmps
cmp
or
mov
or
aaa
sub
push
idiv
or
pop
cli
sbb
retf
push
sub
ret
jmpw
mov
push
into
inc
test
jns
jmp
mov
sub
out
cdq
mov
das
or
test
mov
mov
gs
jbe
test
ja
in
dec
pop
shr
jecxz
and
inc
stos
inc
jbe
xchg
jmp
icebp
xor
or
cdq
call
jl
or
cmp
les
add
push
sub
mov
sbb
xlat
jb
adc
sub
add
loop
jmp
sti
mov
cmp
loopne
cld
mov
gs
jg
fst
aas
(bad)
shl
sbb
dec
mov
inc
das
push
dec
xchg
in
shl
and
sbb
cmp
xor
icebp
pop
cmps
push
lock
and
add
mov
test
push
pop
mov
or
inc
jle
inc
repnz
enter
sar
shl
or
fwait
addr16
outs
test
in
mov
sti
inc
mov
xchg
sbb
ja
inc
xchg
sub
out
push
add
iret
imul
bound
pop
xchg
(bad)
std
das
das
mov
jae
jmp
inc
or
cmc
pop
test
fild
mov
jb
sbb
and
lahf
xor
jae
xchg
or
dec
add
iret
or
cld
in
mov
xchg
lea
add
mov
mov
dec
in
jno
icebp
mov
push
xchg
mov
jge
push
es
movs
fst
std
retf
aas
test
mov
sub
mul
add
adc
repnz
pop
(bad)
hlt
movs
movs
adc
cld
in
popa
fwait
dec
cmp
jo
sar
idiv
and
fild
inc
mov
in
iret
ret
pop
lea
test
enter
dec
sbb
push
cmp
(bad)
bound
test
(bad)
adc
dec
and
mov
sub
out
in
cmps
outs
fisubr
sub
pop
sahf
icebp
xchg
xchg
sahf
js
and
mov
in
adc
mov
test
or
or
sbb
push
cmps
xchg
jmp
xchg
push
push
jb
or
lea
jmp
imul
xor
and
push
in
add
pop
sbb
mov
dec
cld
enter
lods
(bad)
jg
dec
loopne
bound
cmp
jo
mov
mov
hlt
mov
mov
mov
int
loope
(bad)
lods
xchg
retf
out
nop
cmps
mov
or
and
sysexit
mov
sub
push
mov
les
daa
sahf
cs
mov
ret
aam
movs
xchg
sbb
sub
sub
(bad)
mov
imul
imul
xchg
ja
adc
mov
jmp
out
jb
xchg
ins
lea
and
fwait
sub
pop
or
or
lods
add
out
es
mov
rcl
popf
xor
leave
cmp
int
imul
adc
rcr
in
inc
pop
pop
mov
out
mov
mov
sbb
scas
pop
arpl
retf
mov
pop
xlat
and
adc
pop
dec
fisubr
les
idiv
jmp
neg
fisubr
add
mov
pop
dec
or
xchg
fld
mov
xchg
sahf
add
stc
data16
retf
jb
push
(bad)
adc
fisub
cmp
iret
mov
aad
jmp
div
mov
or
das
adc
push
lods
xchg
push
dec
outs
mov
mov
stos
(bad)
xchg
add
pop
das
or
cmp
push
mov
stos
in
cld
mov
push
test
xlat
fwait
jno
test
scas
xadd
xchg
pop
daa
or
(bad)
repz
mov
jg
xor
int3
pop
push
push
sbb
fdivr
jge
mov
aaa
retf
aas
mov
xor
fwait
stos
xor
stos
jp
add
pop
enter
xchg
push
sahf
pop
outs
sti
jo
dec
inc
mov
dec
aas
js
movs
div
adc
pop
rol
mov
lock
hlt
(bad)
mov
ror
out
(bad)
jge
sub
fsubr
inc
xchg
cmp
int
into
cmp
cmp
outs
shl
mov
test
ds
je
pop
cli
pop
loop
xor
ret
inc
movs
push
inc
push
in
inc
xor
stos
bsr
ins
xor
push
cs
cli
hlt
push
and
xor
jle
(bad)
ins
aad
pop
jbe
popa
and
push
xchg
add
adc
fmul
imul
retf
push
ret
retf
push
out
repnz
or
xor
push
retf
rcr
xchg
cs
inc
cmp
imul
adc
cmp
rcr
fld
pop
xchg
test
mov
inc
or
shl
shl
movs
push
sar
sahf
mov
jo
xor
jb
cmp
pop
(bad)
leave
adc
jb
sbb
ficomp
mov
ss
pop
aaa
xor
es
retf
inc
lock
sub
and
mov
mov
add
push
(bad)
inc
mov
xchg
mov
(bad)
dec
pop
and
out
(bad)
xchg
cmp
mov
inc
(bad)
mov
or
repnz
shl
fsubr
popa
jno
jae
sbb
xor
cdq
cmp
cli
es
inc
pusha
xabort
lock
mov
fimul
lahf
adc
loope
in
inc
inc
xchg
and
call
push
aaa
add
pop
in
out
mov
push
loop
mov
mov
mov
mov
mov
push
mov
out
rcl
or
addr16
jle
xor
ret
mov
and
xchg
sti
mov
stc
xchg
ret
retf
lock
sub
(bad)
(bad)
adc
lahf
mov
adc
cmp
mov
push
icebp
lds
push
sbb
pop
inc
cmps
jns
or
cmp
pushf
inc
scas
add
xor
adc
cmc
jl
and
es
lods
dec
jo
sub
xchg
mov
mov
cmps
dec
pop
(bad)
in
js
clc
xchg
mov
out
sbb
pop
repz
das
ins
pusha
and
xchg
fst
test
xchg
fiadd
pop
sub
loop
jge
sub
cmp
pop
in
lods
inc
or
stos
xchg
test
popf
jo
mov
xchg
pop
and
xor
in
enter
mov
mov
inc
outs
mov
pop
sbb
jmp
or
cmps
inc
sub
(bad)
stos
xor
inc
mov
xor
sbb
sbb
inc
pusha
adc
fucomip
mov
aas
cmc
fistp
sti
hlt
loopne
push
jecxz
loope
xor
mov
aaa
pop
sbb
out
add
pop
lock
mov
(bad)
loope
popf
jnp
jg
mov
sbb
aaa
and
sbb
retf
and
pop
mov
add
xor
into
cwde
pop
loop
dec
and
xchg
cmp
jbe
and
push
or
fcom
mov
adc
cld
add
(bad)
push
push
outs
aad
in
(bad)
icebp
in
cli
cmps
pop
fs
movs
test
stos
xor
sub
scas
movs
pop
lods
fcom
popa
sti
bound
js
dec
xor
push
push
mov
daa
add
idiv
xor
leave
push
je
pop
cdq
call
sbb
int3
jb
movs
retf
shl
les
mul
sub
sar
sbb
pop
jg
movs
xchg
in
sub
push
dec
es
loope
stc
cmp
xchg
int
jns
pop
(bad)
jae
rcr
fnsave
setle
cld
outs
mov
push
stos
jnp
(bad)
in
jnp
aas
mov
repz
jle
xlat
rol
adc
fcom
int3
sbb
ins
mov
leave
test
xchg
and
xchg
inc
dec
in
and
enter
inc
loop
nop
inc
pop
mov
adc
icebp
mov
cmp
repnz
and
inc
stos
hlt
pop
xchg
xchg
out
shl
pop
outs
(bad)
sub
les
sbb
call
pop
stc
ror
inc
xchg
mov
mov
shl
imul
aam
mov
sbb
cmp
cdq
jle
jg
fwait
call
pop
or
movs
mov
sbb
push
adc
mov
mov
cmp
repz
dec
dec
inc
ficom
ds
(bad)
out
ret
loopne
xor
jae
sub
(bad)
stc
jle
cli
cs
std
adc
adc
repz
xor
or
and
sub
mov
adc
js
push
mov
rol
aam
dec
loop
cmp
xbegin
pop
xchg
xor
fwait
retf
fs
bound
push
inc
mov
dec
dec
add
scas
scas
fwait
jno
sar
shl
add
repnz
arpl
fdivr
aad
cmps
cdq
jecxz
int3
mov
pop
mov
cmp
out
imul
xchg
ins
dec
mov
xor
inc
inc
into
arpl
xor
call
inc
cmp
repnz
inc
scas
cdq
retf
xchg
les
inc
or
add
(bad)
dec
icebp
ins
(bad)
push
xchg
inc
inc
push
sub
enter
rcl
mov
mov
push
cmp
shr
mov
xchg
adc
mov
push
jp
jmp
mov
mov
xchg
and
jp
jo
sbb
jno
popa
les
sub
push
repz
mov
shr
cmp
fist
xchg
sbb
ret
add
mov
inc
(bad)
fstp
jg
ins
mov
add
cmps
aad
das
add
mov
gs
clts
ret
jle
or
sbb
adc
xor
xchg
lds
out
call
xchg
(bad)
cwde
or
pop
aad
pop
cdq
mov
mov
adc
pxor
popa
ss
bound
push
ins
pop
mov
sbb
inc
cmp
push
fnsetpm(287
in
and
mov
jmp
dec
ins
mov
mov
in
or
jle
loop
ins
sub
pmuludq
dec
sub
mov
aaa
mov
test
push
mov
pop
scas
jg
div
mov
test
nop
jns
pop
mov
or
sbb
sbb
movs
ret
imul
pop
popa
pop
push
and
mov
rcl
cwde
pop
push
mov
cmc
loope
cmp
lods
pop
test
jecxz
aam
imul
pop
mov
and
icebp
pop
inc
std
rcl
in
xchg
pop
mov
sub
and
mov
popf
lahf
or
pop
pusha
fisub
adc
les
into
fstp
add
nop
imul
adc
shl
dec
retf
dec
sub
fsubr
int
gs
adc
or
pop
adc
adc
adc
test
or
cmps
cmp
out
cmp
aaa
lods
jmp
aaa
test
mov
loop
pop
popa
mov
jmp
ins
jae
imul
(bad)
sbb
ror
shl
xchg
in
pop
out
(bad)
loop
cld
stc
mov
jmp
sub
mov
dec
test
and
or
cld
shl
imul
aam
jmp
in
loop
xor
out
daa
cmps
pop
test
fstp
add
jle
test
pop
out
mov
mov
popf
jo
add
rcl
xor
jge
push
movs
fsubr
ds
push
ins
jl
fnstenv
sub
test
pusha
in
cmps
(bad)
adc
cmc
push
and
inc
mov
ret
fidiv
add
aas
sub
cdq
jle
inc
mov
or
xchg
dec
adc
sbb
pusha
loopne
lods
ret
and
movs
sahf
jecxz
(bad)
sub
retf
inc
dec
fisubr
leave
xor
mov
dec
fs
aad
loop
out
dec
push
stos
ss
sbb
add
dec
pop
add
mov
pop
mov
inc
pop
fnop
inc
in
aad
pop
outs
cmps
scas
clc
jmp
pop
xor
retf
push
aam
imul
iret
ins
lods
imul
ror
pusha
jnp
sub
pop
push
rcl
ja
in
pop
pop
test
sti
and
dec
sbb
hlt
mov
retf
jl
shl
mov
and
pusha
cmp
rcr
lock
jmp
pop
push
cmp
stos
xchg
aas
jb
mov
imul
out
leave
je
mov
mov
clc
pop
mov
dec
pop
jae
mov
pop
or
aam
out
or
pop
outs
mov
fild
cdq
inc
adc
xchg
inc
and
xchg
rcl
repz
dec
jnp
daa
sahf
dec
mov
lahf
pop
ins
and
cmp
inc
mov
dec
(bad)
test
inc
or
mov
fnsave
push
xor
loope
cmps
or
sti
mov
(bad)
retf
jno
mov
fmul
xchg
push
pop
push
mov
mov
daa
sar
rcl
js
sub
mov
imul
mov
push
bound
ds
dec
popa
mov
clc
popf
inc
jmp
mov
adc
dec
fbld
pop
fild
mov
(bad)
outs
sti
lds
test
xor
sbb
and
mov
sbb
sbb
jbe
ror
int
bound
addr16
jl
push
dec
jmp
int
push
aaa
aas
inc
mov
inc
add
or
loopne
(bad)
jns
cli
push
ror
cwde
jno
push
xor
iret
nop
push
xchg
arpl
cmp
inc
nop
stos
test
in
out
dec
std
(bad)
pop
dec
sar
push
sbb
and
call
jle
push
test
or
xor
xchg
push
push
xchg
sbb
push
cwde
inc
scas
iret
ja
jg
pop
push
sar
xchg
retf
mov
enter
adc
inc
xlat
pop
xor
cmp
ror
cmp
lahf
out
push
(bad)
hlt
in
pusha
fsubr
mov
add
not
movs
je
mov
mov
mov
dec
movs
xor
and
mov
das
sbb
jp
test
and
addr16
mov
shl
push
(bad)
xchg
test
push
jne
mov
ss
neg
mov
pop
retf
push
and
imul
xchg
push
aaa
ja
add
je
push
xor
or
sbb
imul
push
lock
(bad)
shr
ds
adc
or
pop
in
nop
adc
adc
sub
sbb
cmps
ret
pop
xor
ja
mov
cwde
xchg
push
call
jae
repnz
push
pop
xchg
push
or
push
mov
clc
scas
mov
stc
dec
lods
clc
ret
cmp
imul
jno
or
cmp
cmp
jp
loop
or
adc
cmp
sbb
jg
int3
pop
pop
mov
je
add
mov
mov
outs
and
or
aas
dec
mov
enter
int
pop
xor
mov
scas
pop
dec
test
and
stc
sub
adc
in
xchg
cmp
sub
lock
xchg
add
pop
(bad)
out
cld
jb
popf
(bad)
stc
cmp
aaa
(bad)
dec
in
sbb
sbb
pop
inc
xor
cs
xchg
pop
xor
pop
sbb
aas
sar
imul
nop
(bad)
mov
in
in
hlt
outs
and
shl
push
push
sub
sub
mov
icebp
call
mov
out
adc
push
pop
cld
lock
fdiv
fsubr
lds
(bad)
and
enter
or
add
jecxz
(bad)
adc
sar
add
xor
pusha
daa
adc
xchg
add
adc
mov
xor
cmp
jne
imul
pop
inc
xor
ins
push
cmp
ds
pushf
add
fcomp
xchg
mov
mov
mov
jecxz
fadd
stos
enter
push
dec
cwde
lea
dec
mov
movs
push
in
xchg
jl
mov
add
push
jb
popf
lods
xor
ret
or
jmp
mov
adc
stc
push
mov
test
ror
bound
pop
push
xchg
arpl
adc
ins
adc
push
loop
xchg
mov
jns
pushf
jge
push
or
mov
arpl
sbb
out
sar
jns
fwait
or
test
mov
xor
iret
mov
add
mov
sar
lea
pop
imul
stos
add
into
cmp
jl
mov
inc
bound
ja
loop
repnz
mov
add
int3
std
int
mov
and
xor
fmul
out
adc
and
das
fild
jmp
je
out
pop
or
int3
push
ret
fldz
mov
add
ja
and
cmc
mov
inc
mov
mov
cs
inc
hlt
enter
mov
rcr
mov
mov
cmp
idiv
call
sbb
dec
fidiv
ins
into
fmulp
mov
stos
add
dec
out
push
jle
dec
int3
stc
ins
call
jg
(bad)
jmp
test
stos
mov
arpl
repz
movs
pop
cmp
xchg
push
cmp
xchg
aam
cmp
push
mov
retf
xor
(bad)
jne
idiv
add
mov
sub
daa
scas
xchg
int3
loop
retf
add
cmp
ss
mov
fstp
adc
stc
test
rcl
lods
rol
icebp
xor
lods
not
jno
in
inc
inc
stc
mov
cmps
xor
jne
pop
add
lds
mov
adc
xor
mov
cwde
dec
mov
fbld
aaa
ret
push
sbb
pop
jl
lds
lods
retf
push
sub
call
push
pop
xchg
dec
test
add
mov
sahf
rcr
stos
gs
jae
mov
mov
mov
adc
push
outs
mov
dec
xor
mov
dec
mov
(bad)
cmp
into
les
pop
in
pop
mov
sbb
or
xchg
outs
or
imul
jnp
push
or
cmps
inc
shl
sar
int
dec
sbb
retf
cmps
mov
(bad)
std
sub
push
mov
stc
retf
movs
push
sar
test
outs
aaa
add
out
cdq
mov
and
rol
push
fcmovnbe
cmp
(bad)
mov
or
dec
mov
cmps
mov
retf
inc
xlat
outs
jle
mov
mov
or
cmp
or
sbb
out
push
arpl
rol
or
outs
shl
or
fisub
out
sbb
mov
loop
push
loope
mov
and
add
sahf
test
and
xor
pop
adc
inc
and
mov
clc
lahf
cs
xor
test
xchg
cmp
or
stc
leave
adc
push
test
xor
mov
imul
push
pop
(bad)
scas
inc
jle
mov
xor
pop
pusha
mov
push
or
mov
jno
jbe
(bad)
fs
retf
add
jae
adc
popf
mov
sbb
inc
jae
mov
cli
rcr
cmp
inc
sbb
lods
(bad)
outs
fld
inc
mov
adc
jecxz
mov
cld
dec
imul
hlt
daa
(bad)
shr
stos
fnstsw
enter
xchg
mov
out
add
retf
jmp
not
test
push
jmp
or
dec
mov
movs
pop
cmps
push
dec
in
sbb
in
jmp
push
mov
jae
ss
cmps
jecxz
sub
out
jecxz
jle
dec
push
test
and
xchg
ins
cmc
push
push
add
ret
cmp
fldcw
das
lahf
rol
stos
push
imul
cwde
add
out
js
cmovne
sbb
inc
in
movs
jge
sbb
pop
icebp
xor
adc
jns
sti
mov
dec
(bad)
sar
or
dec
and
dec
icebp
lock
dec
mov
push
jl
arpl
shr
(bad)
pop
mov
xchg
or
push
aas
sti
leave
pop
add
inc
pop
pop
push
mov
pop
mov
mov
add
sbb
xor
xor
imul
fs
aad
mov
stc
stos
pop
out
call
push
cmc
je
stos
retf
les
fdiv
ror
pop
ins
cmp
mov
out
cmps
xor
and
mov
cmp
nop
or
data16
mov
ret
dec
rol
mov
dec
(bad)
ins
and
test
shl
pop
mov
inc
adc
mov
test
(bad)
cmp
les
mov
std
and
dec
mov
and
loopne
inc
push
out
and
pop
pop
add
jecxz
sub
xor
xchg
pushf
fild
inc
mov
in
pushaw
call
sub
adc
clc
add
int
mov
xor
inc
(bad)
lahf
sub
stc
push
ror
adc
mov
pop
mov
je
sbb
or
es
stos
loop
jle
pop
push
add
loop
push
inc
out
jmp
dec
pop
sub
out
push
jmp
pop
push
inc
sar
push
mov
push
jmp
dec
push
in
add
jp
sub
int
fst
call
sbb
shl
mov
push
dec
js
cs
jmp
lods
fild
call
add
add
cwde
mov
paddq
dec
jmp
aam
aad
std
pushf
jmp
pop
push
sbb
add
sahf
add
pop
sbb
ss
push
cmp
cmp
push
rcr
mov
in
outs
jb
xor
inc
sbb
mov
inc
pop
je
out
mov
sub
loope
pusha
js
push
bound
mov
jno
adc
inc
jle
das
mov
clc
cwde
xor
and
data16
add
aaa
sgdtd
bswap
add
push
enter
cdq
xor
sub
jnp
inc
cld
and
add
and
or
and
gs
add
pop
popf
and
and
push
gs
lds
mov
mov
ds
mov
clc
popf
test
aam
int3
(bad)
jb
and
mov
cdq
in
pop
les
xchg
jecxz
ja
or
xor
and
sar
jne
dec
in
xchg
push
xchg
aad
aas
aad
test
push
pushf
hlt
rol
loop
pop
mov
mov
adc
xchg
push
push
mov
mov
mov
fnstenv
jbe
xchg
shl
in
adc
push
stc
dec
repz
adc
outs
aad
pop
xchg
lea
leave
mov
mov
xor
stos
push
add
pop
xlat
ret
ins
ds
call
fld
inc
xor
jne
clc
out
in
ret
inc
aam
pusha
pop
out
add
pop
sub
test
push
inc
cmp
dec
mov
mov
sub
fld
and
push
sub
outs
test
or
aaa
es
xor
jnp
shl
or
cmc
shr
icebp
or
cs
retf
jbe
ja
mov
mov
dec
sbb
in
push
and
clc
mov
int
push
aas
add
test
add
ja
fwait
and
lods
or
sub
fisubr
mov
push
push
out
and
ss
or
jge
ror
mov
fdivr
sahf
inc
xor
jg
jns
jnp
(bad)
int3
mov
pop
mov
in
dec
sub
sub
adc
push
loop
out
vcvttsd2si
loope
mov
or
push
pusha
xchg
fild
jo
mov
test
hlt
sub
je
les
or
cs
dec
add
jmp
int3
jae
mov
pop
cli
imul
mov
out
fbld
out
push
mov
mov
mov
call
das
mov
mov
sti
jl
push
mov
hlt
pop
adc
ds
pop
mov
sbb
movs
add
aaa
and
cs
je
ins
fsubr
mov
xor
xchg
fs
scas
mov
push
cdq
pop
adc
push
push
inc
pop
pop
(bad)
mov
aad
mov
sub
sbb
add
popa
ret
cmp
cmp
mov
inc
jle
daa
lods
jbe
hlt
inc
mov
shl
mov
nop
in
or
fild
or
sub
lea
aas
movs
mov
(bad)
test
into
ret
pop
mov
arpl
call
sub
and
add
cdq
mov
call
aam
inc
nop
fdiv
aas
test
sub
xor
pop
fdiv
dec
jg
xchg
fwait
popf
sub
adc
push
cmps
mov
fcom
mov
mov
in
(bad)
adc
dec
mov
ds
jne
pusha
dec
pop
cmp
mov
das
add
xchg
loopne
(bad)
push
adc
jne
jl
lods
mov
retf
mov
xor
mov
call
mov
movs
ret
dec
inc
add
jmp
shl
push
push
outs
(bad)
call
sub
hlt
int3
push
and
stos
lods
mov
(bad)
sar
ret
or
adc
jno
mov
adc
inc
scas
(bad)
rol
sbb
xchg
(bad)
retf
(bad)
daa
ja
adc
pop
pop
pop
shl
mov
push
ins
dec
clc
jne
jmp
cli
(bad)
ret
(bad)
pop
xor
mov
ds
popf
shl
jnp
loop
inc
out
div
mov
xchg
mov
mov
sbb
pop
sahf
push
inc
pop
lahf
test
pop
mov
(bad)
repnz
jbe
xlat
jle
sbb
sub
sbb
pop
jo
aad
pushf
jmp
sahf
jmp
fcomip
jle
mov
cmc
push
fs
fldenv
mov
add
and
outs
push
dec
mov
dec
addr16
nop
das
push
loope
mov
iret
sar
(bad)
cs
fsubrp
scas
call
mov
mov
inc
adc
mov
xor
movs
or
std
xor
or
add
sbb
iret
bound
pop
xor
pusha
enter
mov
pop
mov
and
jne
arpl
rcl
and
nop
sbb
aad
jecxz
xchg
int
mov
(bad)
mov
mov
repz
scas
(bad)
add
lahf
pop
or
iret
adc
push
adc
call
xor
push
sbb
add
lahf
(bad)
leave
nop
clc
pop
mov
jecxz
add
dec
test
out
jbe
cwde
pop
push
xor
xchg
pop
sub
aam
lods
mov
inc
sbb
into
sbb
fwait
inc
or
pop
in
int
inc
dec
mov
retf
dec
push
sbb
pop
mov
idiv
xchg
sbb
mov
imul
sub
aaa
ror
pop
shl
pop
(bad)
adc
test
stos
pop
inc
mov
xchg
(bad)
into
lods
pop
and
and
ds
inc
xchg
pop
mov
mov
and
fistp
inc
popf
daa
push
rcr
sbb
hlt
iret
in
sti
sub
and
in
cmps
push
ret
imul
in
fld
test
or
pop
les
stos
pop
jl
cmps
sahf
adc
or
outs
cmp
add
push
scas
cdq
(bad)
xlat
adc
(bad)
(bad)
mov
fld
add
scas
je
mov
jmp
inc
push
inc
repz
jg
shl
inc
hlt
xchg
shl
jns
mov
and
jno
aam
int3
push
frstor
jbe
in
xchg
int
xor
lods
movs
fwait
test
fisubr
mov
sub
dec
ret
fimul
push
or
and
out
enter
ins
jge
fnstenv
jge
into
and
mov
mov
fs
pop
imul
repnz
outs
sti
popf
push
je
jmp
fldcw
add
je
xchg
and
popf
sbb
fcmove
pop
xor
mov
ss
jno
xlat
icebp
and
dec
repnz
out
test
mov
push
mov
dec
push
jns
cmp
cmps
jg
call
jge
xchg
or
hlt
call
outs
jo
mov
jbe
imul
popf
ret
cli
stc
xor
pop
mov
jnp
mov
inc
sahf
adc
push
or
push
xchg
and
and
jmp
adc
pop
pop
movs
inc
adc
(bad)
cs
xchg
dec
pop
xchg
sbb
fimul
adc
iret
lods
add
(bad)
mov
jmp
inc
js
dec
or
stos
lods
or
add
dec
ret
test
adc
push
(bad)
(bad)
xor
into
ss
push
jge
sub
or
dec
daa
test
cmp
call
cmp
jge
push
dec
mov
repz
jge
dec
xchg
test
lahf
shl
sti
cld
out
call
iret
sti
fst
call
mov
lds
adc
jmp
sub
mov
nop
(bad)
pop
(bad)
or
jg
out
sbb
adc
in
(bad)
scas
or
out
inc
movs
retf
mov
jg
xchg
sub
xchg
in
dec
cli
pop
dec
mov
ins
pop
call
outs
mov
cmp
rol
pop
jns
dec
cmps
adc
aad
mov
inc
inc
test
fcom
sub
sbb
mov
jmp
xor
jmp
cmp
push
repnz
arpl
adc
retf
iret
jbe
and
or
aad
sbb
sbb
les
xor
pushf
jle
frstor
arpl
xchg
ins
xor
cmp
and
enter
pop
or
sub
dec
mov
lock
cmp
mov
aaa
jecxz
out
mov
outs
dec
ficom
adc
dec
push
repnz
add
(bad)
cmp
mov
sub
dec
lea
imul
mov
icebp
je
mov
in
jp
shl
clc
pop
dec
xchg
shl
jle
cmps
push
fmulp
retf
daa
aas
neg
cmp
scas
pop
jnp
push
xor
cwde
mov
xor
jo
std
test
daa
repnz
and
or
in
push
outs
idiv
jmp
mov
sbb
and
adc
(bad)
xlat
int
mov
xor
(bad)
adc
inc
in
jnp
cld
xchg
and
jb
xchg
gs
iret
sub
cmp
push
fidiv
lock
inc
int3
jnp
sub
pop
nop
mov
hlt
test
mov
lods
push
xor
aas
sub
and
cmps
mov
(bad)
cmp
das
inc
int3
jmp
out
or
add
jg
call
in
pop
fisttp
call
pop
jnp
xchg
movs
fsubr
jo
rol
jg
pshufw
push
pushf
data16
pop
xchg
jb
aam
rol
jae
xchg
ss
xlat
leave
fsubr
fwait
scas
pop
arpl
push
jne
adc
xor
cmp
retf
leave
mov
gs
mov
mov
fist
xchg
retf
xor
xor
push
jge
outs
mov
xor
fadd
sub
sahf
xor
shl
pop
jle
sub
and
mov
sub
or
and
out
test
push
add
xor
mov
outs
lea
or
pop
mov
pusha
adc
mov
mov
ins
adc
mov
mov
and
mov
push
sub
xchg
and
mov
add
inc
jmp
sub
adc
jmp
jbe
in
and
outs
mov
or
and
test
minps
or
jmp
cli
jne
cwde
add
inc
jmp
pop
add
dec
popa
push
fwait
leave
jle
movs
jmp
mov
push
xlat
jb
sub
push
xchg
inc
and
ret
ret
cmps
adc
xor
lds
sti
xchg
sub
call
add
or
aam
sub
sub
ret
(bad)
xchg
jnp
fs
out
push
xchg
and
ror
jo
cmc
aas
cld
sub
cwde
push
and
push
ss
leave
mov
(bad)
push
in
jg
xchg
(bad)
sub
jo
or
nop
mov
cmp
int
push
add
pop
pop
mov
jge
and
out
clc
add
test
push
ds
jb
pop
adc
daa
adc
retf
in
loopne
je
jmp
sub
adc
icebp
and
pop
lods
pop
cmps
jl
std
or
sbb
out
adc
into
into
mov
push
inc
cmp
data16
sbb
or
shr
push
bound
fs
out
ins
stos
aam
pop
test
mov
pop
xchg
mov
aam
(bad)
jno
jnp
inc
idiv
xchg
adc
popf
ret
xor
xchg
dec
or
xchg
jle
mov
mov
ins
xor
mov
add
mov
jae
stc
ja
shl
sub
adc
pusha
arpl
popa
push
bound
adc
not
(bad)
icebp
imul
inc
arpl
nop
dec
sbb
cli
nop
repz
addr16
mov
xor
mov
scas
mov
and
jbe
add
or
call
mov
xchg
push
jl
loopne
pop
xchg
mov
add
iret
loopne
push
add
in
dec
pop
ficom
je
les
pop
pop
fistp
cmp
retf
int
xsha1
cmps
lea
test
data16
leave
cmps
repnz
into
fmul
int3
fmul
or
mov
loopne
inc
push
add
or
xchg
sar
aad
pushf
idiv
mov
or
add
outs
dec
push
mov
cmp
mov
arpl
test
fdiv
outs
in
std
xor
mov
stc
dec
out
(bad)
mov
(bad)
sub
sbb
push
adc
push
cmp
(bad)
rol
dec
and
lea
(bad)
cmp
imul
shr
or
arpl
add
jno
add
pop
xchg
mov
mov
mov
or
into
cli
or
ja
cmp
add
fidiv
xor
pusha
pop
pushf
xor
and
jae
nop
jl
sub
mov
xchg
lds
call
xchg
out
mov
inc
push
xchg
and
jle
fcmovnu
data16
cli
ret
fcomp
push
mov
and
jg
ret
push
pop
add
call
push
or
jne
sub
in
mov
fnstcw
fcmovnu
es
stc
sub
sbb
(bad)
data16
xchg
mov
clc
add
clc
xchg
mov
add
jmp
xchg
pusha
sub
in
pop
lea
in
add
cdq
sbb
add
push
nop
gs
add
fld
xchg
xlat
sbb
pop
stos
mov
sti
jb
and
jne
push
les
xor
push
or
inc
pusha
loope
imul
lea
inc
add
xchg
mov
jae
in
fstp
and
(bad)
rep
push
mov
mov
mov
pop
(bad)
push
lods
xlat
adc
sub
int
mov
add
fmul
xchg
sbb
mov
mov
jns
add
sub
xor
adc
shl
ja
and
out
loop
fwait
mov
sahf
mov
push
pop
inc
mov
mov
clc
shl
fdivr
sbb
cwde
loop
loop
xor
setns
pop
adc
sbb
jae
popa
sbb
cmp
ja
pop
test
(bad)
and
fwait
mov
xchg
sbb
inc
sbb
outs
aas
lock
sbb
xchg
inc
cmp
loop
cmps
ins
lods
sub
jne
add
call
mov
pop
(bad)
mov
call
das
mov
mov
in
mov
add
repz
push
cli
fisubr
sub
cmp
adc
pop
ror
and
lods
js
add
daa
rcr
and
bound
inc
(bad)
inc
je
loopne
pushf
xchg
imul
jp
shl
test
pop
mov
or
push
mov
in
add
sub
dec
(bad)
loopne
clc
and
out
add
sti
int3
in
cmp
inc
movs
outs
test
xchg
ins
cmp
mov
scas
jns
iret
hlt
shl
or
js
cwde
or
sti
push
jne
rcl
mov
(bad)
pop
jg
pop
xor
lock
pop
jne
mov
push
jae
cmps
adc
(bad)
dec
(bad)
jns
rol
xchg
mov
dec
mov
add
das
cmp
mov
sub
sbb
cmp
xchg
inc
aas
push
daa
enter
add
sub
xchg
fisubr
push
out
in
dec
jecxz
or
fcomp
pop
call
dec
mov
push
loop
jno
xor
inc
xchg
add
hlt
outs
push
add
cmps
stc
or
sub
xchg
sbb
fimul
pop
dec
loopne
pop
bound
stc
or
out
movs
imul
ret
loopne
cli
movs
xor
pop
loopne
xor
das
loop
ffree
xchg
fld
jl
jp
aas
pusha
mov
fldcw
loop
loopne
mov
cld
in
lods
popf
fnstsw
inc
outs
jle
nop
mov
sti
pop
mov
sub
in
stc
mov
cmps
(bad)
mov
sbb
shl
dec
lea
pop
dec
dec
xchg
add
retf
and
arpl
test
rcl
xchg
fiadd
add
mov
repnz
xor
fimul
outs
xchg
scas
adc
aas
in
pop
adc
sbb
ror
fadd
mov
push
push
test
adc
adc
cmps
xchg
cwde
dec
lahf
xchg
rcl
mov
addr16
cs
out
dec
imul
add
push
jmp
fistp
mov
retf
ins
es
fwait
ror
jle
psrlq
inc
lods
mov
in
xor
sub
sub
popa
in
shr
pop
mov
call
cld
or
scas
pop
pop
mov
pop
shl
test
loope
sub
jae
jge
sbb
mov
add
lods
test
aam
shl
xchg
jbe
jmp
dec
ins
or
mov
sbb
or
int
js
add
imul
xchg
iret
add
dec
fcomp
mov
into
mov
or
push
aad
les
dec
mov
dec
(bad)
mov
sahf
inc
pop
sahf
pop
ss
dec
lods
push
pop
(bad)
call
mov
sbb
jae
sahf
fiadd
xlat
jmp
xchg
fstp
(bad)
mov
mov
push
retf
icebp
inc
loopne
cmp
shl
fisttp
pop
pusha
and
test
out
add
test
test
mov
pop
jp
(bad)
leave
pusha
dec
arpl
mov
dec
pop
mov
int3
stos
pop
cmp
popa
outs
sbb
ins
ja
lock
jp
int
xchg
pop
rcl
sbb
iret
cmp
loopne
xor
dec
loope
dec
ret
retf
inc
(bad)
out
xchg
pop
pop
pusha
call
call
sar
outs
imul
push
xchg
je
imul
test
sub
xor
adc
dec
dec
jmp
(bad)
out
ss
retf
stos
lea
test
pop
mov
mov
push
sub
push
mov
repz
call
fmul
pop
mov
aam
sub
xchg
pop
pop
push
scas
lods
pushf
or
es
scas
icebp
dec
xor
mov
pop
push
push
adc
hlt
stos
mov
jbe
ds
and
jge
jp
xchg
mov
fcomp
pushf
shl
sbb
hlt
sbb
adc
or
ficom
movs
shl
arpl
mov
pop
xchg
addr16
jnp
xor
mov
inc
ret
or
dec
mov
test
adc
les
mov
push
cmp
sub
cmps
push
repnz
sbb
mov
cmps
es
jmp
xchg
outs
adc
cmp
lock
or
into
enter
hlt
addr16
mov
cmps
push
fnsave
push
ret
add
cwde
loopne
xor
pop
sbb
push
dec
push
push
jp
sub
or
(bad)
fs
and
add
inc
fwait
int
js
cli
jmp
ss
(bad)
std
(bad)
cmp
jp
mov
fld
mov
and
in
push
cmp
add
outs
sbb
ret
sti
in
mov
jb
dec
fcomp
inc
jmp
jae
leave
popf
aam
push
dec
ficomp
das
xor
jmp
push
add
adc
in
jns
psubd
pop
xchg
push
mov
scas
sbb
outs
fs
adc
test
and
imul
jg
mov
mov
cmps
out
in
ja
loope
xor
push
fistp
xchg
js
addr16
call
inc
pop
mov
push
test
mov
aas
mov
je
adc
pop
loope
pusha
push
lods
ret
push
xlat
push
fisttp
nop
data16
clc
or
stos
dec
enter
mov
movs
nop
int3
xor
mov
add
adc
popf
add
call
shl
dec
mov
clc
or
cmp
xchg
fnsave
sahf
in
cmp
push
jmp
or
daa
outs
lea
xor
fmul
mov
imul
sbb
inc
or
ds
push
push
movs
pop
js
fidivr
and
mov
xor
add
scas
jl
pop
cli
push
xchg
xchg
inc
dec
int3
dec
dec
in
jbe
(bad)
(bad)
ins
aaa
imul
push
push
rcl
mov
xchg
lahf
movs
gs
cmp
test
int
xchg
push
cli
mov
in
and
sbb
xchg
jg
inc
push
dec
jecxz
xor
bound
cmp
jp
lods
xor
xor
or
out
mov
xchg
outs
ror
(bad)
jecxz
mov
inc
sub
mov
xor
jge
mov
aam
jmp
sbb
cmp
push
test
fcmovne
mul
pop
jp
sub
aaa
out
cmp
sbb
inc
pop
mov
jp
sahf
(bad)
mov
mov
es
dec
adc
test
and
fldcw
(bad)
retf
scas
xchg
nop
or
dec
out
jle
gs
es
lods
jo
fadd
mov
mov
jno
push
pop
in
adc
test
inc
cwde
mov
add
test
dec
inc
mov
clc
or
inc
ins
je
sti
xor
sbb
dec
cmp
cmc
mov
stos
cmp
wbinvd
inc
sub
mov
mov
imul
cmp
cmp
mov
fsub
mov
and
mov
cdq
retf
stos
jmp
pop
stos
sahf
gs
sbb
add
sub
or
movs
(bad)
aaa
or
add
xchg
add
sbb
sub
xchg
shl
enter
test
int
push
rol
fsub
pop
or
dec
sar
jns
mov
fcmove
xchg
adc
sbb
push
sub
xchg
jae
adc
ror
out
test
dec
cmp
in
xor
cmc
push
mov
mov
retf
les
into
cmps
cmp
outs
and
and
popa
pop
js
add
mov
xchg
enter
test
int
jp
js
push
aam
or
test
inc
mov
pop
test
daa
into
inc
push
jne
sub
cwde
jg
aam
call
jle
xchg
inc
stos
enter
mov
mov
push
sbb
(bad)
sbb
repnz
and
out
dec
mov
sahf
adc
leave
cmps
mov
fwait
add
add
movs
or
mov
xchg
lock
xor
fwait
lds
jne
adc
rcl
dec
call
pop
iret
jne
xchg
test
mov
js
mov
ins
out
or
xchg
adc
jb
add
pop
mov
mov
cmps
pop
mov
push
or
test
dec
xchg
mov
xor
sbb
mov
inc
push
cmp
add
jae
call
repnz
and
retf
pusha
mov
cmp
rol
sub
call
sbb
pop
outs
clc
imul
dec
jecxz
scas
movs
xchg
inc
mov
(bad)
mov
sbb
mov
hlt
mov
mov
and
stos
cmp
xchg
jl
dec
cmp
jo
loopne
das
inc
xor
jae
cmp
(bad)
jp
hlt
outs
imul
ror
xchg
ficom
dec
aas
xchg
into
sub
loopne
pusha
cli
fist
fidivr
retf
in
or
xchg
retf
je
lock
adc
mov
xor
cmc
xchg
cmp
mov
cmp
lahf
push
ds
jae
sbb
sub
mov
test
push
fidiv
(bad)
jnp
pop
adc
mov
fist
je
pop
(bad)
enter
ret
mov
call
enter
rol
hlt
or
inc
pop
inc
ins
adc
pop
mov
out
push
nop
or
sbb
pop
ret
xor
shl
(bad)
push
out
lea
and
ret
pop
and
inc
setns
idiv
movd
pop
cdq
div
cdq
data16
cmp
jge
mov
sub
ret
dec
sbb
jmp
int3
inc
cmp
adc
sub
pop
push
aad
pop
inc
and
mov
(bad)
lods
adc
sbb
fadd
xchg
inc
jmp
rcr
into
inc
mov
mov
push
push
add
arpl
in
inc
fild
mov
out
jp
je
pop
loope
shl
push
sahf
xchg
adc
cs
repnz
adc
in
aam
ret
es
add
dec
outs
cmps
imul
inc
xchg
jnp
cmp
adc
cmp
fsubr
aas
inc
and
sahf
out
fstp
dec
add
and
sub
or
clc
add
jmp
dec
dec
xlat
pop
imul
push
jle
adc
mov
jo
push
cs
jmp
cmps
repz
stc
cmps
mov
test
sub
jo
mov
adc
inc
ret
fbld
lahf
cmps
add
sub
addr16
jo
cmps
add
jg
push
push
or
dec
loope
sbb
(bad)
mov
icebp
sbb
clc
xchg
sbb
inc
or
mov
mov
(bad)
movs
fist
sub
movs
xchg
sbb
jae
sub
ret
or
add
xlat
gs
xor
fdivr
int
sub
mov
call
fwait
ds
imul
retf
mov
lahf
call
movs
dec
(bad)
mov
adc
xor
cmp
das
push
pop
idiv
mov
sub
push
xor
push
idiv
cs
out
add
sub
movs
cld
cmps
or
in
sahf
(bad)
fwait
cmp
jb
cmp
and
call
retf
pop
push
popf
or
arpl
sub
push
int
push
stc
xor
mov
arpl
in
in
mov
cli
iret
adc
or
arpl
push
xchg
mov
stc
xor
or
jno
dec
dec
jmp
scas
call
lock
inc
adc
ret
sbb
(bad)
jp
push
and
push
out
push
int3
adc
mov
sub
sahf
or
leave
popf
sub
xor
ins
lea
out
adc
and
push
arpl
cld
push
mov
shr
jns
sbb
pop
out
std
xchg
xor
push
jmp
sbb
cmp
mov
sahf
cdq
test
mov
mov
mov
xchg
xor
aas
jl
xor
outs
fidivr
inc
xor
stc
xor
jmp
pop
scas
or
jne
push
push
fwait
mov
xchg
cwde
push
cmps
cmps
jmp
inc
adc
push
mov
add
cmc
test
pop
test
pop
xchg
inc
inc
push
push
cmp
lods
das
popf
hlt
jnp
mov
out
xchg
inc
call
dec
bound
pusha
ret
icebp
mov
call
jae
and
and
or
mov
pshufw
inc
gs
ds
or
test
push
pop
addr16
xchg
inc
or
out
sahf
(bad)
retf
les
imul
and
xor
inc
mov
aaa
les
(bad)
rol
pop
inc
jo
inc
aad
mov
push
scas
gs
fist
test
xlat
movs
and
ja
lods
or
imul
mov
add
ror
pop
sbb
sub
call
cmp
loop
jmp
sub
jb
sahf
das
sub
xlat
mov
jno
xlat
jg
dec
imul
mov
sub
xor
icebp
adc
bound
test
repz
out
fisubr
adc
xor
cmc
cmp
push
cmp
int
jbe
dec
add
sbb
icebp
icebp
add
xchg
xchg
dec
jge
das
mul
and
mov
retf
test
sbb
push
rol
fnstenv
adc
loope
das
xchg
ins
sbb
jp
(bad)
outs
stos
movs
cmp
js
cmp
dec
lods
sub
in
fmulp
les
mov
adc
js
dec
test
add
arpl
(bad)
bound
pop
push
scas
das
add
push
sahf
jno
bswap
aad
sub
dec
ret
or
add
and
pop
dec
cmp
js
sbb
ds
scas
popf
cmps
in
ror
test
gs
dec
and
pop
cmc
sti
sub
js
mov
loop
xor
jbe
fsub
sbb
neg
js
cmp
cmp
mov
stc
jnp
sahf
rcl
dec
cdq
repnz
lea
add
mov
inc
add
mov
cld
aaa
jnp
mov
adc
sub
aam
aas
int
loope
gs
mov
jae
sbb
jecxz
add
pop
je
loope
or
add
idiv
ins
cmps
add
das
ss
xchg
fld
and
mov
int
inc
mov
out
stos
ins
xchg
(bad)
xchg
xor
out
pop
push
cs
mov
shr
aas
mov
sbb
mov
mov
add
pop
inc
pop
mov
sub
cmp
push
psllq
rol
imul
out
pop
in
sbb
sbb
pop
retf
mov
adc
mov
loopne
push
jnp
add
mov
and
imul
fcomi
int3
and
loopne
mov
xchg
cmp
pusha
es
mov
mov
or
add
jp
sbb
lods
inc
movs
push
pop
fst
add
jb
fisub
in
sbb
fisttp
sbb
push
mov
out
sahf
pop
lds
dec
test
mov
in
xchg
ins
arpl
sbb
std
cmp
add
js
pop
test
sti
mov
cmp
rol
enter
je
inc
ret
pop
dec
mov
popa
add
adc
dec
neg
xlat
enter
rol
inc
(bad)
jmp
lea
sbb
dec
xchg
scas
push
fcom
jle
jmp
int3
stos
push
push
ss
mov
dec
cmps
stc
xchg
mov
mov
(bad)
in
loop
out
pop
xor
jns
dec
mov
or
xor
xor
pop
je
mov
daa
sub
mov
mov
sub
adc
pop
adc
sar
or
mov
mov
jo
in
or
sub
push
cld
in
cmp
dec
imul
movs
pop
push
add
cmp
add
dec
outs
test
out
add
mov
sub
and
mov
repnz
mov
imul
es
aad
fsubr
pop
scas
dec
in
fs
mov
pop
stc
inc
sbb
fsub
cmovbe
mov
outs
loopne
ret
add
mov
xor
mov
mov
push
mov
les
adc
imul
dec
mov
into
daa
(bad)
jl
push
lods
push
adc
test
ins
inc
arpl
int3
retf
lods
lock
or
dec
add
mov
dec
xchg
rcl
jmp
and
xchg
scas
shl
jmp
xor
sbb
shl
inc
adc
fld
cmps
cmp
cmp
out
xchg
shr
fmul
pushf
pop
jo
cmp
cmp
jg
pusha
adc
imul
cli
das
test
push
fs
pop
inc
popa
not
xchg
sub
in
push
cmp
and
ja
cmp
nop
or
xchg
xchg
mov
and
test
ret
sbb
in
mov
gs
push
mov
test
jne
cmp
aas
out
lahf
add
jmp
sub
add
fisub
add
sub
adc
jmp
out
mov
scas
inc
xchg
and
add
mov
sahf
mov
int3
push
(bad)
in
adc
test
addr16
push
or
cmps
rcl
mov
(bad)
addr16
(bad)
jmp
js
ja
sbb
adc
lahf
fcom
clc
jne
xchg
mov
jg
jno
sbb
lahf
jo
pop
inc
cs
aas
mov
or
inc
mov
inc
bound
sbb
xor
or
jno
ret
scas
jmp
jmp
mov
add
xchg
adc
jl
mov
jnp
and
jno
and
mov
in
push
and
cmp
test
test
in
shl
std
fnstsw
iret
cmc
mov
fmul
loop
mov
mov
or
cli
fmul
and
sbb
sub
call
add
push
cli
ja
xchg
fisub
dec
gs
inc
mov
dec
mov
lock
xchg
pusha
add
pop
xchg
leave
jp
adc
mov
mov
and
aaa
lock
in
jbe
shl
jns
cmp
xchg
mov
fcomp
imul
mov
test
mov
adc
adc
inc
pop
inc
adc
in
adc
ret
out
and
push
mov
sbb
(bad)
push
xor
sub
les
cs
aas
push
fdivr
icebp
add
popf
js
sbb
cwde
push
leave
dec
pop
push
sub
aaa
je
stos
repnz
out
mov
mov
sub
clc
or
pop
cs
loop
mov
cmp
adc
movs
adc
push
sbb
and
loope
in
sub
mov
add
enter
inc
fiadd
push
fisubr
sub
les
and
cmps
sti
scas
(bad)
das
test
jne
mov
clc
mov
xchg
cmp
or
movs
stos
mov
cmc
inc
popf
ins
push
push
daa
outs
jmp
into
or
and
push
cdq
or
sub
and
cwde
pop
mov
cmps
and
and
mov
inc
(bad)
shl
mov
or
sti
cmp
xchg
sbb
xor
jl
mov
jmp
call
mov
add
imul
stos
jno
jmp
cli
std
and
out
inc
loopne
lods
sbb
jne
xchg
xchg
jmp
movs
out
push
push
jp
mov
and
dec
outs
pop
cvtps2pi
mov
(bad)
mul
loope
es
or
push
and
sbb
sub
aas
std
pop
sar
ins
mov
sbb
call
aam
jne
and
ja
clc
scas
dec
mov
ror
out
jns
xor
and
outs
jns
mov
es
std
push
and
xchg
(bad)
mov
adc
out
add
in
les
pushf
or
xor
inc
add
jmp
mov
push
shl
(bad)
popf
dec
pop
or
inc
mov
sub
imul
sbb
dec
or
and
dec
xor
dec
cmp
aas
cmp
mov
call
sbb
push
jne
icebp
push
xlat
ret
inc
dec
(bad)
cmps
adc
arpl
lahf
stc
std
cmps
movs
mov
ins
jnp
ror
mov
stc
push
pop
sbb
add
jle
fsub
jo
ins
push
xchg
inc
loop
sub
rol
push
mov
cmp
mov
cmps
push
adc
sbb
lds
mov
sbb
and
xor
or
(bad)
and
je
or
mov
stos
dec
nop
mov
and
sbb
xor
push
lods
out
and
and
xchg
scas
pop
jmp
cmp
icebp
je
inc
jecxz
es
add
(bad)
not
out
popf
popf
test
(bad)
inc
mov
adc
and
and
and
sbb
(bad)
sbb
xchg
and
cmc
xchg
fisttp
fld
inc
not
stos
xchg
bound
jle
inc
adc
mov
adc
inc
fneni(8087
icebp
loop
ret
int
hlt
test
jae
and
rcl
xchg
mov
push
sbb
nop
xor
and
daa
int
dec
mov
fucomp
mov
dec
in
jne
stos
jl
imul
pop
cmp
and
mov
mov
(bad)
dec
cmps
mov
or
ja
lds
push
adc
lods
xor
mov
xchg
mov
adc
shl
xor
and
xor
sbb
cmp
cmps
and
mov
cmp
les
sti
addr16
call
add
xchg
lahf
inc
jmp
aaa
cmc
pop
ins
ins
inc
ds
rcr
push
fild
xlat
cdq
(bad)
aam
push
jge
mov
xchg
rol
mov
xchg
adc
sbb
adc
jg
aas
shr
jle
mov
adc
dec
xor
or
shr
push
lahf
mov
pop
loop
xchg
or
add
stos
aas
push
pushf
push
fst
push
cmc
jmp
add
push
mov
pusha
mov
ror
pop
or
push
popf
cmc
fadd
bound
jmp
mov
cwde
inc
ins
pop
pop
pop
and
mov
int
into
jnp
repz
mov
inc
pop
mov
inc
movs
cmp
icebp
cs
and
in
jae
adc
sbb
add
gs
pop
adc
cmp
jmp
push
add
retf
mov
enter
test
sbb
into
xor
jmp
(bad)
adc
sub
fdiv
push
jbe
shl
fnstsw
and
ss
mov
push
std
and
dec
int
retf
call
shl
pop
jbe
add
bound
aaa
scas
xchg
aam
xor
test
das
xchg
sub
push
push
loopne
sbb
imul
cmps
mov
inc
add
fmul
push
adc
sar
repz
pop
inc
das
ror
xlat
das
mov
std
and
or
sub
inc
jmp
out
dec
and
in
(bad)
add
jp
xor
in
aam
popf
pop
cmps
inc
mov
push
jmp
adc
jo
adc
mov
dec
push
inc
fcomp
mov
(bad)
pop
loope
(bad)
adc
mov
inc
lock
cmps
clc
test
add
xchg
ins
mov
rol
mov
xchg
sub
inc
dec
ja
xchg
push
out
inc
xor
xchg
mov
push
test
stos
add
xchg
loope
aas
retf
test
popw
jecxz
inc
cli
ins
inc
jno
test
loope
ins
or
test
loopne
ins
cmp
cmc
jle
cmp
lods
ins
fdivr
push
sbb
jecxz
xchg
lods
mov
pop
push
sub
jl
clc
push
mov
fs
jo
add
xor
push
xor
fs
and
push
movs
fcom
sbb
xor
ficom
arpl
(bad)
lods
jmp
push
pop
jl
xchg
jne
and
xor
(bad)
stc
inc
int3
cmp
or
or
dec
sar
mov
hlt
push
xchg
test
add
clc
jp
add
into
and
pop
push
fisttp
pop
(bad)
sbb
mov
ret
mov
lods
dec
mov
loop
inc
bound
hlt
sub
adc
fmul
fstp
xchg
push
xor
xchg
jmp
push
nop
in
shr
and
inc
aaa
push
mov
mov
movs
sub
out
cld
dec
popf
add
xchg
popa
imul
mov
pop
in
pushf
enter
inc
fs
or
xchg
jl
mov
mov
pop
cmps
or
stc
pop
sbb
inc
fistp
xchg
loopne
inc
push
push
pop
test
dec
xchg
in
sub
xchg
pop
lods
popa
dec
cmp
xchg
pop
adc
lock
sub
add
retf
mov
call
pushf
or
inc
pop
test
jbe
gs
lds
aad
(bad)
retf
aam
mov
nop
stos
pop
out
sti
push
adc
pop
push
pop
sbb
jge
sbb
repnz
rol
mov
and
test
cmp
or
call
dec
push
mov
fild
test
jmp
sbb
dec
scas
cdq
pop
nop
cwde
clc
adc
or
cmps
dec
out
or
xchg
call
xchg
pop
xor
add
hlt
mov
test
pop
cmc
int3
bound
sbb
and
jns
mov
adc
adc
cwde
jns
xlat
sub
pop
jmp
fnstsw
pop
outs
jl
pop
scas
test
cmps
rcl
xchg
xchg
(bad)
pop
push
dec
stos
inc
pop
stos
rol
or
ficom
jne
test
(bad)
movs
arpl
pop
mov
jne
or
pop
xor
stc
adc
(bad)
fisub
outs
dec
enter
repnz
xor
push
sahf
sti
lock
mov
mov
(bad)
int3
jo
jl
aad
cmp
lods
adc
inc
sub
outs
jl
pop
sti
or
ins
mov
adc
inc
xchg
pushf
inc
inc
mov
sub
dec
push
mov
push
cwde
xchg
mov
push
outs
imul
sbb
in
ins
jge
mov
ins
pop
mov
mov
arpl
add
cli
cmp
scas
int3
push
adc
ja
pop
je
inc
sub
jbe
dec
aam
mov
push
fsub
mov
fwait
dec
pop
call
imul
xchg
xchg
mov
nop
push
xchg
and
xchg
mov
movs
idiv
push
dec
(bad)
sahf
mov
pop
(bad)
mov
xor
inc
retf
adc
lds
aam
dec
popa
adc
add
jbe
add
and
dec
mov
dec
and
xchg
bound
bound
lods
outs
mov
js
(bad)
repnz
xchg
loopne
xchg
jns
push
cmp
push
add
and
add
sbb
loopne
ss
mov
pop
cmp
(bad)
movs
adc
sbb
adc
mov
mov
jge
or
leave
out
adc
enter
cmc
pushf
or
dec
cmp
xor
mov
movs
dec
mov
jno
pop
fdivr
cmp
mov
outs
mov
pop
add
test
stos
pop
inc
(bad)
call
jae
push
icebp
xlat
mov
shr
(bad)
fisttp
push
adc
mov
xchg
push
in
inc
mov
and
(bad)
sbb
hlt
shl
ret
cdq
and
jo
aas
lock
outs
(bad)
shl
es
(bad)
mov
lock
jae
inc
jp
test
movs
icebp
jae
adc
lahf
rol
fist
js
pushf
lock
mov
mov
dec
stc
jae
sbb
add
sub
add
jne
push
mov
add
or
std
stos
xchg
test
cmc
or
daa
adc
into
out
iret
loope
jmp
pop
inc
xor
(bad)
cwde
aad
shl
and
adc
mov
lods
leave
or
inc
movs
(bad)
fucomip
sbb
movs
fmul
mov
aad
sbb
js
add
cmp
test
jmp
cmp
in
pop
mov
and
retf
add
inc
or
leave
lods
push
in
jg
inc
inc
outs
scas
es
mov
cmps
cdq
icebp
mov
push
das
iret
lods
ror
jo
dec
ret
mov
outs
pop
xor
outs
add
cmp
imul
mov
ret
mov
jmp
xchg
(bad)
lods
movs
mov
sbb
stos
leave
pusha
dec
or
xor
push
in
ins
jno
imul
push
(bad)
clc
or
clc
and
xor
pop
call
movs
into
ins
cmps
lea
(bad)
fist
jle
sub
inc
jae
cmp
(bad)
out
adc
fwait
loopne
mov
jmp
call
pop
xor
lods
pop
dec
aam
pop
lock
shl
ins
inc
xchg
push
int
ror
stc
sub
dec
inc
add
mov
xor
xchg
fwait
inc
daa
and
mov
outs
or
sub
bound
stc
sar
aad
mov
and
xor
cli
loopne
dec
call
lahf
clc
adc
cmp
xor
(bad)
adc
mov
mov
push
pop
aam
repnz
sub
popa
test
(bad)
loopne
lahf
movs
mov
mov
push
fwait
jbe
and
sahf
ins
fs
push
mov
mov
popa
cmc
mov
in
icebp
stc
xchg
cmp
push
mov
movs
loopne
mov
int
mov
mov
xor
(bad)
scas
adc
pop
sub
pop
push
fcmovu
add
movs
push
sti
movs
ret
cwde
sub
cdq
xor
pop
outs
inc
mov
les
add
ret
retf
push
cwde
cmp
retf
or
repz
jle
pusha
add
xor
sub
ins
iret
adc
cmp
mov
push
mov
aas
inc
(bad)
mov
pop
pop
stos
dec
in
aam
inc
mov
sbb
daa
sub
loop
mov
je
adc
jae
pop
ret
inc
call
imul
sbb
(bad)
cld
xchg
adc
ret
in
inc
shr
dec
jnp
add
jae
dec
enter
retf
pop
popa
retf
xor
test
(bad)
into
loop
xchg
popa
push
shl
dec
sbb
dec
jbe
cmp
dec
rcl
mov
fwait
ret
cld
mov
add
enter
fcomi
jne
mov
push
adc
sub
enter
pop
or
cmp
cmp
dec
bound
std
cmp
pop
jbe
cs
pop
mov
push
or
cmps
outs
cld
sbb
and
mov
inc
icebp
inc
in
jge
inc
jbe
adc
outs
add
sbb
inc
cwde
jp
cmp
xor
(bad)
mov
inc
iret
inc
(bad)
and
xchg
xchg
pop
sub
test
push
xchg
shr
enter
xor
push
jmp
jp
lock
retf
sbb
sti
aaa
mov
dec
loope
stos
add
test
pop
dec
jmp
jmp
(bad)
cmp
adc
test
sbb
xchg
call
aas
sub
push
(bad)
fdiv
rol
std
std
test
mov
cmp
pop
adc
mov
in
adc
cwde
ficom
inc
outs
add
mov
lahf
out
xor
(bad)
cmp
call
push
pop
sub
test
in
mov
or
sub
in
mov
sub
repnz
scas
rol
cmps
sbb
jnp
shl
mov
mov
sbb
movs
shr
jo
(bad)
outs
sbb
out
mov
push
lods
sbb
adc
popa
cmp
add
jns
out
push
pop
sub
mov
jle
sub
push
imul
dec
mov
(bad)
rol
fst
in
aaa
inc
sub
adc
(bad)
nop
and
pushf
lea
popa
push
cmp
mov
retf
repnz
sub
add
ret
or
sbb
lahf
inc
cmc
lahf
mov
loope
adc
and
sbb
xor
out
mov
or
fist
sahf
add
daa
xor
int
outs
js
mov
mov
das
clc
jbe
sub
push
or
cmc
pushf
out
shr
jne
loope
ret
ins
(bad)
jge
scas
push
mov
or
(bad)
call
cmps
mov
xor
lods
pop
xchg
js
jnp
aam
push
pop
dec
push
or
stos
and
mov
xor
cmovge
in
mov
jbe
or
(bad)
cdq
or
xchg
and
xor
add
scas
mov
add
int3
mov
mov
cli
sub
clc
daa
mov
imul
mov
xor
push
sub
pushf
jnp
mov
sub
into
retf
repz
popf
add
mov
rcl
das
movs
xor
push
or
je
jmp
les
xchg
sub
(bad)
iret
fnstsw
xor
sahf
sar
outs
pop
mov
add
cmp
pop
(bad)
push
cmp
pop
dec
out
pop
shl
mov
out
ss
pop
inc
sbb
outs
pop
xor
jb
imul
mov
dec
adc
cs
push
std
fs
stc
popa
xchg
and
jp
cmps
inc
ds
(bad)
push
adc
sub
adc
add
adc
imul
dec
jmp
mov
and
mov
es
sar
mov
imul
pusha
push
mov
sub
popa
sahf
mov
clc
pop
pop
pop
stos
inc
jo
jae
lods
jmp
pop
or
push
lds
push
add
loopne
out
(bad)
movs
das
xchg
dec
jg
fidiv
add
cmp
stc
sbb
lods
push
lock
inc
lods
fist
loope
jno
jbe
ss
retf
cmps
call
clc
dec
pop
dec
movs
outs
mov
sub
adc
cli
mov
cmp
inc
cmp
cmps
out
pop
mov
loop
jmp
mov
gs
(bad)
mov
xchg
adc
mov
adc
cmp
push
mov
mov
or
cmp
push
aad
out
sbb
aad
and
icebp
fimul
dec
rol
mov
(bad)
iret
inc
lods
and
int
fidiv
push
in
aam
loop
sbb
dec
stos
pop
pop
mov
xchg
pop
lea
xor
or
icebp
sub
jns
iret
(bad)
test
and
cmp
shl
test
mov
retf
sub
push
out
iret
out
push
scas
shl
dec
mov
test
sbb
xor
inc
mov
leave
bnd
test
lods
xchg
sub
int3
xchg
mov
jl
cmp
push
add
inc
out
lods
ret
fsub
or
in
movs
xor
mov
ds
js
adc
mov
cwde
jecxz
cmps
into
sub
cmp
push
imul
das
(bad)
mov
lds
jo
fs
(bad)
das
inc
jle
out
dec
jl
push
xchg
add
movs
fldcw
nop
ffree
cdq
mov
movs
sub
jne
inc
lahf
aas
test
sub
aaa
fwait
nop
lahf
clc
xchg
and
retf
fistp
mov
les
or
cmps
shl
push
add
inc
inc
loope
test
pop
stos
push
dec
add
lods
or
pop
jle
cli
jmp
je
(bad)
pusha
or
cmp
pop
dec
adc
pop
jecxz
ss
fcmovb
sub
xchg
or
push
sbb
xchg
test
push
test
pushf
int3
or
jmp
cmp
sbb
mov
stos
je
pop
jle
mov
icebp
out
mov
mov
inc
jbe
test
and
xor
cmp
xchg
jne
jecxz
ror
cmp
cmp
ja
outs
shl
int3
nop
cmp
fcmovbe
cwde
scas
inc
test
bnd
push
outs
in
sub
ret
jae
shl
repnz
pop
mov
or
bound
cld
sbb
pop
shl
cmp
jae
cld
hlt
jp
xor
mov
xchg
lock
push
(bad)
hlt
pop
test
adc
(bad)
call
cmps
mov
pop
xchg
and
push
loopne
jle
or
int3
sbb
shr
jnp
movs
and
dec
or
dec
xchg
dec
into
dec
mov
jg
push
in
sub
aas
movs
cmps
popa
adc
sub
test
dec
(bad)
mov
push
loopne
pop
cmp
cld
shl
sbb
dec
cmp
cmp
dec
push
adc
clc
(bad)
stos
lock
adc
and
xchg
xlat
(bad)
mov
ins
in
aas
cmps
push
push
pushf
jmp
dec
test
pop
add
imul
xchg
inc
cwde
xchg
jae
(bad)
int3
dec
cmp
pop
or
jo
out
nop
jp
call
sti
mov
(bad)
call
sub
dec
inc
jne
push
ror
sub
es
scas
push
scas
cdq
popa
and
stos
ds
popa
dec
pusha
xchg
inc
xor
sar
lods
xor
mov
or
mov
ror
mov
stos
pop
jne
xor
sbb
fs
cli
rol
mov
adc
pop
mov
push
repz
cmp
stc
pop
push
push
jo
and
and
or
xchg
mov
adc
jno
test
lock
ficomp
mov
pop
adc
adc
inc
retf
mov
(bad)
and
cli
aaa
push
ds
mov
push
sub
adc
push
or
fdiv
push
rcl
inc
push
jmp
mov
loopne
(bad)
test
sub
cmp
sbb
lods
add
lods
xchg
pop
mov
cmp
sub
mov
cmp
sub
test
sahf
cs
pop
aad
adc
push
jl
pop
xchg
aas
push
aam
jnp
and
push
aas
shl
imul
add
jno
inc
std
mov
xor
dec
sub
sub
push
punpckhbw
sub
call
int3
rcl
loop
jge
jne
pop
in
cmps
popa
sbb
mov
inc
leave
lds
ficom
sbb
sub
or
imul
ror
jbe
stos
and
aas
mov
and
sub
xchg
loope
xor
inc
ret
repnz
jae
lds
lods
ja
xchg
mov
pop
sbb
sub
cmp
clc
or
int
mov
jne
stos
(bad)
xor
int
in
clc
pop
xor
cmp
out
or
test
cmp
mov
pop
test
leave
je
mov
jne
and
mov
fmul
lods
mov
dec
rol
lahf
stc
inc
fidiv
scas
xor
dec
jbe
call
fcmovnb
loope
xchg
shr
aam
pop
add
lea
adc
add
xchg
dec
inc
jo
hlt
div
or
movs
mov
jae
mov
push
out
push
mov
icebp
sub
fistp
mov
jo
and
sub
mov
pop
and
xchg
jmp
imul
xchg
outs
test
jecxz
xor
ins
loope
dec
int3
push
retf
imul
fcom
push
rcl
mov
mov
jp
push
cmps
or
cs
sahf
mov
aas
das
jmp
daa
adc
mov
leave
inc
(bad)
jmp
or
aad
sbb
adc
cmp
xchg
add
out
adc
push
fwait
adc
sbb
mov
fistp
jp
ss
pop
shl
fstp
movs
xor
gs
inc
xchg
cmp
mov
ror
inc
mov
dec
outs
loopne
ret
ins
out
bound
inc
adc
pop
cli
mov
push
pop
bnd
jo
shr
or
pop
jle
(bad)
popa
sub
test
out
lock
jo
out
mov
ins
fsub
out
jmp
in
cmp
scas
imul
stc
out
lahf
adc
or
out
sbb
das
sub
into
mov
and
call
dec
loop
add
push
shl
in
iret
daa
dec
or
xchg
sbb
pop
adc
movs
mov
push
xchg
sbb
mov
lds
mov
mov
loop
jno
aas
mov
sbb
(bad)
out
fsubr
aaa
je
retf
in
jns
inc
std
fcomp
xchg
ret
cdq
or
nop
and
retf
(bad)
lock
pop
in
test
sub
adc
push
sti
std
(bad)
cmp
fnsave
repnz
rcl
jae
push
jge
call
(bad)
shl
shl
mov
pop
and
mov
mov
sbb
outs
inc
dec
xchg
test
das
jg
icebp
loopne
repnz
popa
mov
sub
pop
push
ret
icebp
dec
or
test
pop
fucomi
(bad)
es
sbb
mov
mov
addr16
xor
cld
call
xchg
push
adc
std
(bad)
push
push
test
mov
dec
daa
mov
dec
ss
pop
pop
pop
sbb
and
and
mov
push
xchg
and
mov
cs
xor
sbb
sbb
(bad)
xor
or
sbb
xchg
add
outs
call
lods
mul
call
cmps
fnstcw
inc
int
push
iret
inc
xor
bound
mov
jne
add
jmp
cmc
jnp
gs
enter
xchg
adc
sub
jl
dec
push
push
adc
sar
and
jnp
ja
xlat
aad
outs
sar
or
ffree
fistp
sbb
mov
test
mov
or
sbb
stos
jbe
sub
adc
mov
retf
gs
xchg
(bad)
pop
xor
mov
jl
mov
movlps
pushf
je
test
jge
cdq
out
add
outs
mov
(bad)
fnsave
inc
jmp
fwait
inc
in
fldenv
out
ins
stc
arpl
mov
jns
arpl
sbb
mov
add
and
mov
push
dec
movs
dec
sbb
test
aad
jmp
jmp
dec
lahf
je
imul
xlat
arpl
out
repnz
cmps
mov
call
gs
pusha
cmp
xor
inc
test
xchg
xchg
into
cmp
xchg
jns
xchg
cli
movs
mov
call
mov
and
test
mov
sbb
jno
mov
sbb
es
mov
cwde
or
pushf
(bad)
and
jge
fwait
push
adc
jnp
cmp
and
cmc
push
push
mov
push
mov
push
out
arpl
mov
add
push
sub
ret
push
scas
popf
mov
rol
sub
fdiv
mov
sub
scas
jp
pushf
xchg
push
jno
cmps
ins
dec
(bad)
pop
shr
push
inc
push
rcr
add
and
push
cld
aaa
fstp
mov
ds
or
les
jae
push
pushf
dec
xchg
test
xor
sbb
iret
mov
push
and
(bad)
fst
(bad)
cmp
es
cld
fcmovbe
pop
cmp
sub
mov
test
dec
sub
aas
cld
xchg
xor
push
(bad)
cmps
ror
mov
inc
mov
test
xor
push
jge
sbb
adc
inc
xchg
retf
movs
cmps
jl
push
push
outs
(bad)
or
mov
add
(bad)
ds
cmp
push
out
icebp
inc
cmp
ins
jb
mov
int
stc
in
jmp
les
push
sahf
dec
in
pop
bound
loope
lea
sub
lea
dec
or
and
push
fadd
cmp
iret
rcl
test
cdq
(bad)
and
bound
nop
sbb
fisttp
adc
cmp
(bad)
es
aaa
popf
stos
add
mov
push
repnz
leave
outs
js
dec
jmp
das
and
shr
lods
inc
pusha
push
pop
push
pop
adc
test
jbe
inc
sub
dec
retf
leave
pop
sub
push
mov
adc
cmp
or
adc
scas
shr
push
push
mov
add
push
out
jo
ins
in
mov
jnp
repz
loopne
adc
stc
pop
arpl
cld
dec
in
xor
clc
loop
loope
mov
(bad)
ss
addr16
pandn
aam
xchg
mov
jae
push
dec
or
pop
loopne
pop
std
sbb
in
inc
mov
inc
jb
xor
push
inc
ja
stc
mov
ret
sub
jno
in
loopne
jmp
out
xor
push
outs
and
dec
mov
inc
bound
std
movs
(bad)
repz
popf
pop
popf
mul
adc
pop
xlat
out
mov
fwait
and
push
xchg
cwde
and
or
and
mov
mov
lahf
add
jne
aad
jge
loopne
mov
cmp
retf
mov
mov
inc
call
jp
xchg
inc
lds
loopne
mul
push
je
aam
popa
and
es
test
ficom
fldenv
sbb
mov
lods
fsqrt
out
pushf
dec
adc
inc
mov
shr
leave
push
test
xchg
out
adc
sbb
or
adc
fucomi
popf
aad
call
pop
dec
in
clc
lock
shl
push
xor
lods
in
es
or
xchg
jne
fist
add
and
and
repnz
fst
push
xor
push
cmp
scas
cmp
sbb
inc
or
into
in
pop
cld
or
and
inc
int3
aas
arpl
and
arpl
sub
sbb
pop
cmp
xor
ins
mov
ja
or
retf
imul
jae
adc
sbb
dec
iret
inc
sbb
pop
neg
loop
mov
pop
into
and
addr16
mov
lock
mov
mov
imul
(bad)
out
mov
push
out
adc
ja
pop
and
ins
mov
adc
mov
mov
inc
mov
ret
adc
sar
call
popw
ret
add
int3
sbb
pop
inc
pop
fldenv
cmps
rol
mov
sbb
loope
add
imul
enter
cwde
fwait
lods
in
push
pop
jmp
ss
jns
add
addr16
sub
and
(bad)
pop
sbb
lea
(bad)
loope
push
inc
xchg
lds
lods
or
mov
lds
and
cwde
jno
into
fld
scas
repnz
lods
push
outs
in
sub
pop
mov
dec
xchg
pop
mov
xor
gs
xchg
fisubr
ror
into
out
int
sub
lea
and
pusha
das
add
js
scas
cwde
pop
ret
(bad)
push
cmp
cmp
icebp
pop
call
shr
xchg
mov
xchg
movs
jmp
push
push
adc
lds
add
bound
retf
jecxz
arpl
mov
push
sub
sub
(bad)
sbb
jg
inc
fs
rcr
into
jge
sbb
mov
std
retf
mov
outs
jae
sbb
sub
dec
stc
add
scas
ins
imul
shl
jae
loop
xchg
jge
and
mov
push
stc
imul
jb
xor
(bad)
xlat
lds
jl
rcl
fsub
xchg
imul
dec
repnz
xchg
int
cmp
(bad)
icebp
sbb
(bad)
jg
fsub
int3
or
dec
mov
pop
inc
adc
xor
push
push
push
out
ffree
cli
fisubr
das
(bad)
cmp
std
cmps
je
jae
cmp
aam
adc
lds
push
scas
pusha
lds
sub
out
mov
js
pop
es
inc
dec
mov
xor
mov
fwait
dec
rcr
imul
or
jl
jb
sbb
mov
jle
push
aad
ret
fld
inc
inc
mov
ret
xor
push
dec
sub
bound
dec
je
xchg
add
dec
(bad)
mov
sar
rcl
call
mov
sub
arpl
sub
pop
js
xlat
leave
fcomp
out
in
movs
or
addr16
fmul
call
push
xchg
icebp
addr16
cmc
mov
test
cmp
repnz
adc
mov
es
cmp
stos
cmps
mov
mov
out
xchg
das
sar
xchg
repnz
iret
aas
cmp
fidivr
pop
push
scas
mov
scas
ret
out
ffree
popf
shl
xchg
cmp
pop
scas
fisub
cmp
out
scas
daa
xor
mov
xor
retf
jbe
mov
mov
add
dec
aad
(bad)
sti
adc
(bad)
loopne
movs
sub
xchg
call
sbb
enter
mov
pop
sub
iret
and
(bad)
lds
xchg
les
jbe
aaa
clc
std
push
shr
xchg
add
cwde
movs
and
ret
dec
mov
cmp
push
jmp
lahf
sub
das
ds
mov
pop
xor
jbe
ins
retf
dec
test
mov
push
add
jmp
stc
aad
xchg
mov
cmps
adc
lahf
cmp
(bad)
fadd
in
and
inc
enter
movs
or
inc
sub
or
int
dec
les
mov
add
push
pop
fisub
test
xor
in
mov
xchg
(bad)
fnstenv
call
arpl
inc
movs
les
jbe
mov
call
repnz
cmc
inc
mov
addr16
test
pop
mov
jmp
icebp
and
dec
jecxz
adc
dec
pop
mov
scas
std
cmp
popa
lods
xchg
(bad)
dec
sbb
adc
push
or
js
retf
js
arpl
test
out
cwde
sbb
arpl
xchg
dec
inc
fsub
js
repnz
outs
ss
jmp
dec
inc
in
push
mov
fild
imul
jecxz
in
out
cmc
sbb
pop
sahf
ret
in
test
mul
imul
push
adc
leave
mov
xchg
leave
popa
sub
call
sbb
call
not
(bad)
fptan
cmp
jne
aam
cmp
stos
dec
sub
out
outs
push
imul
push
push
scas
add
pop
xor
fs
push
jae
jb
lock
outs
ror
addr16
inc
xchg
in
mov
dec
mov
adc
je
push
repnz
mov
(bad)
popf
pushf
or
mov
cmc
jno
sbb
mov
pop
jg
dec
pop
add
adc
xchg
inc
popf
add
dec
adc
mov
sub
jle
push
test
outs
or
les
stc
mov
movs
lock
test
jnp
push
jp
xlat
lahf
(bad)
daa
mov
scas
mov
(bad)
pop
dec
sub
in
out
je
or
mov
fstp
mov
icebp
rcl
inc
lahf
xor
scas
and
ficom
packsswb
push
mov
popa
scas
add
movs
add
push
movs
mov
out
fs
ret
aas
test
cwde
sbb
jecxz
push
dec
mov
push
pop
push
repnz
ret
outs
xor
mov
or
retf
aaa
xchg
call
js
retf
sbb
outs
cmp
leave
pop
jae
mov
sbb
aad
jnp
cmp
sub
jle
and
xor
int
stos
test
jp
add
mov
mov
addr16
test
push
out
jl
push
imul
repnz
mov
popa
fimul
mov
cmc
mov
jle
xchg
aas
adc
jne
rcl
inc
mov
lahf
dec
pop
inc
mov
or
mov
and
shr
xor
int
jo
jae
adc
pushf
sub
sbb
je
rcl
push
fs
and
jle
add
ret
inc
jge
add
jo
or
mov
jns
push
mov
repz
pop
jle
inc
adc
inc
repz
adc
sti
xchg
(bad)
ja
sbb
and
stos
mov
push
inc
cmps
sbb
or
nop
push
pusha
gs
(bad)
sub
cmc
jmp
xchg
add
or
push
add
sub
dec
push
fsubr
push
sub
idiv
push
jnp
or
lods
adc
in
repnz
ret
jmp
xor
jl
push
imul
add
ins
dec
push
cmp
sbb
cmp
or
sub
fdivr
scas
xchg
xchg
imul
cs
outs
sub
iret
outs
mul
stos
pop
aas
lock
inc
mov
dec
es
mov
test
cld
sub
xor
out
mov
lock
popa
leave
jns
mov
or
pand
jns
(bad)
mov
mov
xchg
or
push
shl
rol
push
pop
mov
or
sub
add
cmps
pusha
imul
dec
cmp
inc
mov
push
push
(bad)
lock
cmps
test
inc
jge
xor
mov
int3
jl
inc
inc
loop
sub
ficom
adc
and
mov
outs
push
and
xchg
sub
(bad)
ja
sbb
adc
inc
js
push
dec
add
cwde
inc
mov
das
scas
cmps
(bad)
adc
xacquire
xor
or
xchg
xchg
aas
and
mov
xchg
push
jle
fld
scas
test
imul
int3
push
cmp
xor
xchg
mov
shr
lods
xchg
aas
addr16
push
xchg
mov
sbb
icebp
test
in
cmp
mov
(bad)
cmc
pusha
pushf
sub
test
push
adc
inc
call
fwait
lods
pop
pushf
outs
mov
test
cmp
repnz
(bad)
popf
shr
leave
js
sub
pop
mov
xor
cmps
and
push
cs
mov
cli
cwde
cmc
shr
into
cmc
dec
pop
iret
fistp
jecxz
and
mov
out
add
cmp
and
daa
icebp
fld
aaa
rol
bound
dec
mov
mov
aad
pop
not
jg
xchg
test
les
pop
in
std
jge
cdq
fist
in
mov
sbb
movs
lds
sbb
out
push
data16
dec
lock
loope
adc
sub
pushf
mov
mov
inc
pusha
pop
loop
inc
and
lahf
pusha
push
dec
sti
outs
daa
jns
sub
dec
nop
or
push
loop
pop
es
jb
sbb
bnd
xor
vpcomub
(bad)
aaa
dec
lahf
push
(bad)
cmp
inc
movs
mul
lock
ret
xlat
adc
mov
pop
(bad)
or
mov
jne
movs
sahf
fimul
xlat
mov
jg
add
jno
std
and
int
fs
jmp
xor
(bad)
imul
sub
hlt
pop
pop
sub
movs
hlt
and
stos
lds
xchg
adc
imul
xchg
lds
dec
jecxz
add
fs
push
pushf
xchg
dec
in
retf
inc
xchg
hlt
arpl
dec
or
jae
mov
and
scas
pop
mov
ins
inc
hlt
mov
inc
jmp
sbb
aam
lea
mov
pop
in
pop
sti
js
and
xchg
dec
or
jns
jb
pop
cmp
in
pop
inc
pop
cli
outs
jo
(bad)
enter
fwait
enter
push
cmp
sub
(bad)
xor
sub
enter
cmp
push
int3
pop
mov
ss
popa
add
jl
es
or
in
fwait
jp
add
arpl
test
imul
cli
mov
add
pop
mov
mov
xor
sub
jmp
push
div
in
pop
and
mov
in
jecxz
jne
(bad)
inc
in
add
push
cmps
add
push
ss
push
ret
pop
xchg
dec
inc
inc
hlt
sbb
xchg
dec
dec
mov
jnp
xlat
dec
gs
xor
retf
mov
call
stos
sub
push
jne
lea
enter
jbe
icebp
mov
and
cmp
push
jb
(bad)
cmc
test
int3
mov
add
call
nop
imul
out
xchg
adc
ss
sbb
mov
mov
sub
(bad)
and
jne
rcl
jbe
ss
mov
mov
arpl
mov
icebp
sub
push
sahf
sbb
mov
or
outs
cmps
xchg
arpl
in
mov
test
mov
mov
mov
xor
push
out
outs
push
test
jl
or
xlat
or
inc
inc
nop
xchg
sub
fist
mov
int
jmp
xor
and
dec
ja
mov
pop
dec
out
rcr
dec
(bad)
imul
jne
call
out
shl
and
cli
sub
pop
or
jmp
in
(bad)
ins
push
jne
ror
pop
jg
fwait
push
call
sti
in
push
in
dec
sub
clc
fild
xchg
jecxz
cmps
loop
ret
jl
dec
pusha
add
test
gs
cmps
sub
stc
dec
retf
xchg
inc
mov
fdiv
add
push
call
lods
xor
sbb
in
mov
shl
add
mov
(bad)
cld
mov
dec
loopne
or
cdq
popa
mov
lea
test
xchg
outs
das
pusha
out
stos
rcr
(bad)
jmp
xchg
and
daa
fsub
scas
cmp
into
inc
pushf
cli
pop
mov
std
sub
xchg
inc
repnz
(bad)
outs
pop
mov
popf
hlt
mov
ja
mov
nop
out
ins
push
xor
loopne
adc
bound
imul
inc
push
adc
shl
int
mov
inc
mov
lds
sub
cmp
push
inc
and
xchg
xchg
cdq
lods
sbb
push
dec
and
in
jno
iret
mov
(bad)
and
retf
rcl
outs
dec
pop
not
loop
shl
das
dec
xchg
leave
ins
inc
data16
stc
xchg
mov
(bad)
aam
mov
sub
(bad)
jg
mov
std
adc
mov
sar
jb
loope
arpl
outs
popa
or
jb
sti
sti
jmp
sbb
inc
cmc
cmps
xchg
stos
out
push
sti
loopne
mov
mov
push
xor
cmp
cmp
jno
jge
pushf
icebp
int3
(bad)
and
fmul
dec
and
cli
dec
js
shl
sub
maxps
xlat
mov
push
inc
mov
push
movs
mov
sahf
and
(bad)
sahf
call
add
mov
js
int3
std
in
rol
dec
push
in
or
add
pop
mov
xchg
push
hlt
enter
mov
movs
arpl
push
lods
hlt
stc
rol
stos
sub
jo
sub
sub
xchg
adc
mov
sub
push
pop
inc
add
cmps
lea
or
lahf
cdq
push
ficomp
rcr
fst
aaa
push
into
jle
mov
ret
fnsave
inc
sub
mov
dec
scas
push
das
daa
imul
and
jns
add
repnz
inc
hlt
push
arpl
adc
cmps
pop
enter
inc
dec
add
in
(bad)
out
clc
ins
scas
jno
inc
xor
outs
and
adc
xor
mov
push
(bad)
dec
push
jle
out
xchg
push
test
sub
mov
iret
cmp
add
call
out
inc
int
push
xor
mov
push
into
adc
sbb
ds
push
jnp
cmp
outs
les
cdq
lods
push
int3
jge
adc
xchg
icebp
and
adc
jno
push
xchg
aaa
fst
cmps
push
enter
lgs
dec
jb
xchg
push
cmp
and
jnp
shr
cmp
pop
pop
xchg
inc
adc
(bad)
mov
hlt
aad
pop
jecxz
mov
(bad)
and
(bad)
fs
xchg
aaa
mov
pop
inc
in
add
sub
xor
pop
arpl
stos
popf
jb
dec
inc
retf
inc
je
add
xchg
data16
cs
sbb
inc
ins
or
xchg
bswap
outs
and
mov
imul
jle
xor
sbb
mov
loopne
sbb
outs
retf
jmp
retf
xor
call
arpl
mov
pop
into
cmp
xor
sub
cmps
pusha
lods
js
int3
xchg
leave
cmp
jmp
mov
inc
xlat
mov
mov
or
pop
out
or
mov
mov
dec
add
xlat
movs
mov
xor
daa
dec
mov
pop
test
fucom
xchg
(bad)
mov
cli
shl
lods
jno
je
jge
ins
loopne
push
in
sbb
pop
test
in
int
pop
add
das
mov
sbb
rcr
out
mov
xchg
adc
and
fiadd
lahf
repz
or
mov
jnp
in
ret
jl
mov
test
mov
popf
(bad)
adc
mov
and
and
mov
mov
xchg
cwde
jge
mov
ret
cs
test
popa
pop
or
(bad)
movs
mov
vmwrite
mov
sub
jo
call
mov
shr
movq
sti
sbb
push
push
xor
inc
fcom
imul
adc
inc
sbb
aad
out
loop
mov
mov
lea
push
push
push
inc
popf
mov
dec
fwait
call
add
mov
pop
addr16
sbb
(bad)
ins
pop
int3
fdiv
int3
test
add
shr
sbb
pop
shr
repnz
shr
push
dec
pop
repnz
jne
cld
loopne
adc
add
dec
dec
std
int
dec
xchg
sar
cmp
stc
ret
mov
mov
adc
push
sub
aam
cmp
les
inc
mov
sub
and
cmc
and
dec
adc
inc
lds
adc
push
jmp
jmp
div
jne
js
mov
shl
inc
pushf
push
mov
inc
popf
sbb
aaa
adc
and
xor
and
fistp
mov
fcmovnbe
add
mov
lahf
(bad)
xor
movs
mov
fwait
aas
dec
mov
xchg
mov
in
push
or
mov
dec
lods
lea
call
mov
mov
add
adc
fwait
xchg
cmp
mov
call
xor
cld
jge
out
aam
adc
push
fs
mov
push
data16
dec
and
add
scas
popf
push
cmps
sti
aam
mov
jg
add
push
xor
data16
inc
sub
fidiv
into
enter
or
shr
jb
mov
dec
inc
xor
popa
cwde
js
jmp
jmp
sti
enter
sbb
cmp
popa
out
jo
push
repz
push
adc
sti
and
and
mov
pushf
mov
aad
inc
loope
jbe
dec
jg
or
(bad)
push
dec
pushf
ror
fild
jmp
pop
and
dec
xchg
jo
dec
and
mov
add
adc
cmp
or
mov
push
retf
movs
retf
mov
sub
inc
cmp
mov
xor
fwait
xchg
pusha
inc
iret
outs
mov
adc
add
repz
retf
clc
and
hlt
inc
push
pop
cmp
test
outs
mov
adc
sbb
xor
bound
inc
loope
fdivr
stos
or
call
or
fsubr
or
out
ficomp
adc
adc
jg
xchg
push
add
add
scas
push
shr
stc
not
daa
test
mov
mov
cmp
and
stos
xlat
repnz
jo
popf
mov
call
cmp
loope
out
mov
push
lods
test
test
test
mov
dec
mov
adc
push
ins
stc
repz
pop
int3
mov
in
cmp
mov
retf
xor
aam
(bad)
and
jne
js
out
and
dec
gs
or
mov
lods
and
sahf
and
inc
or
(bad)
outs
inc
mov
retf
jmp
pop
adc
jne
and
fcmovb
gs
scas
xor
lahf
or
(bad)
push
xchg
mov
call
mov
sti
pop
sahf
sbb
mov
outs
and
es
bound
cli
dec
inc
sub
ja
ret
popa
mov
test
ja
dec
stos
into
xlat
adc
jae
or
aam
mov
les
adc
and
push
cmp
mov
adc
mov
cmps
push
aad
popf
pop
jae
xchg
loope
xchg
push
cmp
inc
std
cmp
ins
jecxz
and
mov
sbb
les
and
push
xchg
cmp
pusha
lahf
retf
punpckhwd
scas
push
hlt
ja
int
cmp
or
adc
call
mul
adc
mov
fmul
call
loope
cmps
out
push
ror
movs
xor
(bad)
aas
inc
pop
sub
jns
icebp
mov
dec
test
push
mov
lods
fcmovu
mov
call
jae
xor
je
mov
xchg
(bad)
dec
xlat
int
stc
ss
ficom
movs
and
outs
xor
adc
and
or
das
inc
mov
sub
push
fucomi
test
dec
fstp
mov
dec
cld
outs
cld
xchg
push
shl
fnsave
daa
or
mov
mov
fsub
enter
sub
jecxz
adc
jnp
dec
les
icebp
movs
mov
sub
icebp
mov
loop
xor
mov
aas
cmp
unpckhps
fisubr
dec
mov
xor
repz
popa
or
and
pop
cdq
repz
(bad)
test
inc
pop
pusha
sar
clc
scas
movs
sbb
pop
pusha
fst
lods
int3
(bad)
sbb
pop
lea
pop
inc
push
adc
sbb
sub
ret
sub
imul
cmp
mov
iret
das
lods
out
xchg
xor
lahf
push
sar
sbb
hlt
sahf
pop
jecxz
cwde
or
push
mov
jecxz
mov
repnz
push
pop
add
xor
sub
retf
xlat
test
mov
movs
aaa
enter
pushf
lods
jne
shr
xchg
ffree
push
ficom
mov
cs
mov
mov
cmp
sub
mov
(bad)
iret
shr
repz
movs
pop
and
pop
into
movs
outs
and
pop
cwde
push
hlt
mov
add
jbe
outs
fisttp
arpl
xchg
pop
(bad)
mov
dec
rol
retf
xor
adc
jmp
hlt
push
xchg
std
cmp
shl
pushf
xor
sub
aad
sbb
and
or
mov
fcom
xchg
out
mov
fidivr
mov
mov
sahf
dec
pop
pop
(bad)
mov
iret
shl
sbb
cmp
mov
mov
rol
jle
into
iret
sub
jl
fwait
push
loope
mov
and
ss
loopne
mov
stos
retf
lahf
add
hlt
sahf
outs
movs
cmc
add
jae
push
aaa
sbb
xchg
(bad)
cmps
jmp
pop
cmc
mov
push
push
cmp
out
test
xor
je
jo
out
leave
int
jno
inc
pop
jnp
dec
daa
add
push
pop
popa
ins
sub
push
mov
mov
clc
cdq
mov
in
or
stos
xor
stos
out
ficomp
or
stc
mov
and
push
pop
fwait
mov
and
sbb
xor
jmp
adc
or
add
es
cmp
add
cmps
add
test
fiadd
(bad)
fdiv
jne
mov
sbb
cld
push
retf
lahf
pop
imul
dec
push
fcomi
jmp
xchg
outs
mov
fcmovne
xor
int
cmp
jmp
mov
jae
cli
xchg
dec
sub
mul
pop
hlt
unpcklps
fiadd
cwde
xor
and
and
test
or
and
dec
mov
xchg
cmps
movs
sub
or
mov
cwde
push
mov
or
jae
and
and
data16
stos
mov
sub
push
lock
xchg
dec
je
adc
dec
movs
push
and
sbb
hlt
push
lahf
xchg
xchg
sbb
ret
call
jno
fwait
out
jg
mov
pop
sub
inc
mov
xchg
rcl
retf
add
push
fcomi
xor
sbb
ss
lahf
fdivr
retf
sti
push
inc
mov
(bad)
neg
mov
and
add
xchg
gs
loopne
mov
mov
call
sbb
xor
stc
fstp
ja
sbb
retf
sar
cmp
in
xchg
jbe
cmp
aaa
std
call
jg
pop
jge
arpl
add
imul
loop
stos
hlt
or
dec
push
sub
inc
mov
lods
hlt
retf
sbb
mov
add
rol
sahf
push
xchg
ins
cli
mov
inc
jno
int3
lds
cld
xchg
(bad)
jnp
cmp
daa
les
jmp
mov
or
jmp
in
mov
lods
aad
dec
and
stos
mov
cmc
(bad)
cmc
pushf
mov
cmpxchg
cmp
mov
(bad)
pop
add
mov
or
push
push
out
cmp
add
xor
cli
mov
pop
imul
aad
and
test
loope
or
rol
bound
dec
(bad)
bound
sbb
push
je
clc
adc
nop
jle
je
scas
fs
mov
push
pusha
mov
push
loop
xlat
(bad)
cmps
sub
jb
mov
test
cmc
mov
aam
lds
call
dec
cld
retf
sbb
ins
jg
out
dec
icebp
xchg
dec
in
mov
sub
cld
mul
cmps
pop
push
loope
lahf
inc
fist
add
jecxz
data16
adc
mov
push
lea
aad
xor
cmp
test
cmp
out
mov
scas
test
jns
mov
mov
imul
pusha
add
jmp
xor
xchg
aam
nop
pop
and
pop
mov
lods
mov
ja
xor
mov
mov
push
push
pop
mov
dec
jmp
stos
pop
xchg
pop
lds
popf
lods
cmp
test
out
push
lds
in
enter
mov
pusha
push
js
(bad)
sub
stos
call
lahf
or
jns
inc
cmp
fnstcw
(bad)
and
jb
les
sti
retf
xchg
xchg
mov
cmp
push
hlt
call
shl
test
pop
popf
(bad)
or
out
mov
jg
in
in
mov
xchg
je
lea
xor
jge
sub
inc
popf
cmps
xor
push
cld
mov
scas
lods
xlat
sbb
jbe
pusha
popa
data16
xchg
mov
loopne
mov
sti
jno
inc
lods
mov
shr
push
les
mov
mov
icebp
movs
xlat
mov
jb
dec
(bad)
lods
bound
pop
scas
not
aaa
lea
jmp
and
and
shl
push
ret
xchg
out
push
mov
icebp
adc
(bad)
adc
retf
or
in
es
xchg
mov
retf
jecxz
pop
or
repz
push
ins
lahf
sbb
xchg
inc
mov
sti
dec
(bad)
pop
repz
mov
push
add
(bad)
outs
pop
mov
add
cwde
mul
js
jmp
sbb
mov
call
dec
or
fldenv
pop
ret
fwait
and
push
ret
clc
jmp
arpl
addr16
movs
rcr
scas
ret
push
inc
and
pop
rol
xchg
popf
add
in
inc
and
fs
inc
mov
or
dec
mov
stos
pushf
xor
call
pop
inc
bound
sub
mov
mov
sbb
fs
ret
mov
(bad)
jle
dec
js
sahf
xchg
ror
(bad)
fdivr
int
fnsave
idiv
push
in
jecxz
in
push
mov
mov
addr16
out
int3
hlt
inc
adc
xchg
push
mov
cmp
mov
rcr
mov
jmp
stos
jmp
stc
push
sbb
mov
push
fstp
sbb
sub
push
rcl
outs
inc
push
jmp
sbb
push
into
ja
lock
xchg
pop
sub
js
ins
cmp
pusha
fcmovne
gs
sbb
loope
cld
int3
jne
xchg
lods
aad
xchg
or
test
dec
fcomp
daa
nop
xchg
pop
pop
mov
cmp
jecxz
inc
push
ret
cmp
test
js
inc
add
ret
call
mov
call
mov
sbb
inc
jb
or
std
adc
ds
jge
cli
jns
jp
int3
test
movs
mov
out
dec
test
mov
push
pop
inc
stos
(bad)
dec
cdq
dec
in
int
movs
inc
icebp
std
(bad)
or
jo
sub
cld
test
lods
(bad)
(bad)
adc
std
retf
add
sub
imul
stos
into
pop
and
mov
inc
clc
cmp
leave
xlat
ins
add
mov
inc
adc
pop
stos
mov
push
or
push
inc
mov
push
xchg
jae
inc
or
cmp
add
xchg
pop
jl
push
jmp
jp
pavgw
pop
cmp
iret
mov
rcr
ss
ja
adc
add
sar
mov
imul
push
sbb
cmovle
pop
jbe
ss
inc
sbb
leave
sub
loop
and
mov
dec
div
sub
mov
jo
pop
mov
add
or
and
test
lods
xor
scas
cmps
(bad)
movs
inc
loop
ret
pop
ds
aad
xor
psubb
mov
dec
sbb
push
arpl
cld
inc
mov
lds
dec
cmp
shl
ins
pop
xchg
sub
cmps
xor
jnp
push
jno
mov
scas
loop
mov
sbb
aas
std
push
cmp
int
sar
and
scas
and
push
jae
sub
jp
mov
mul
popa
shl
fucom
sub
add
nop
ret
push
test
xchg
xor
in
es
popf
pop
rol
mov
outs
pop
nop
xor
ins
and
xor
pop
movs
and
inc
pop
mov
cmp
cmp
inc
cwde
xor
stos
adc
fild
arpl
stos
bound
adc
ins
mov
ffreep
fyl2xp1
dec
rcl
add
repz
rcl
adc
mov
add
lea
nop
push
push
lock
jmp
cmp
(bad)
cmp
iret
aaa
sub
nop
xor
dec
loop
or
inc
add
ins
jb
(bad)
pop
scas
or
cmp
push
cmp
adc
aaa
mov
sbb
push
jmp
enter
lods
pop
stos
sub
cld
lahf
(bad)
div
dec
mov
mov
and
mov
inc
imul
hlt
sbb
mov
push
stos
sbb
mov
loop
(bad)
mov
xchg
sti
push
sbb
shl
mov
lods
movs
mov
mov
push
into
mov
int3
mov
std
sbb
out
adc
jmp
dec
cli
sub
mov
push
dec
inc
movs
movs
cmps
psllw
and
mov
push
rcl
gs
fdiv
sub
mov
mov
mov
xchg
inc
cli
lods
mov
shl
pop
mov
lea
in
dec
in
mov
and
fsin
aad
pop
push
sub
mov
adc
xor
and
mov
int3
out
and
mov
xor
out
rol
(bad)
cmp
movs
dec
ss
pop
xchg
xchg
gs
pop
dec
xchg
mov
iret
inc
pop
pop
stc
pop
test
xchg
jmp
pop
cli
push
mov
retf
leave
and
add
test
rol
push
enter
xor
lods
cmps
ret
mov
aaa
aaa
xor
mov
aaa
stos
ret
ins
pop
jnp
sub
push
add
mov
lods
push
test
sbb
aam
mov
mov
aaa
mov
jnp
pop
add
xchg
dec
jmp
adc
cld
sbb
push
cmp
mul
and
dec
ja
pop
adc
ds
dec
cmps
and
cwde
jg
jne
lods
xchg
xor
jle
cmc
push
pop
nop
mov
jge
mov
jns
inc
(bad)
loop
movs
push
xchg
dec
dec
loope
dec
inc
adc
jl
pop
adc
mov
or
push
cmc
jg
out
dec
sar
std
icebp
stc
pop
leave
push
aaa
pop
iret
int3
mov
fst
aad
adc
(bad)
stos
icebp
cmps
xchg
les
mov
cmps
arpl
jl
movs
data16
jl
adc
push
mov
sti
dec
inc
js
outs
retf
popf
push
and
outs
xchg
and
or
lock
test
shr
xlat
xchg
lock
gs
xor
add
fmul
int
retf
loopne
jnp
add
cmps
bound
(bad)
call
and
pop
clc
xchg
dec
pop
dec
out
call
sbb
fwait
mov
mov
and
mov
jo
mov
iret
xchg
jno
(bad)
outs
nop
add
mov
mov
into
nop
dec
or
mov
pusha
dec
ss
push
imul
int3
mov
sub
sbb
xchg
push
retf
int
mov
push
dec
jmp
jmp
mov
loop
jl
iret
pop
adc
mov
imul
arpl
xor
stos
pop
mov
scas
dec
shl
push
add
es
jl
fwait
or
test
cmps
movs
addr16
sar
mov
popf
add
das
arpl
ret
inc
repnz
or
mov
cmp
cmpxchg
scas
sub
ins
lock
movs
or
pop
xchg
dec
(bad)
rol
retf
mov
pop
push
mov
adc
sti
mov
push
mov
(bad)
mov
into
mov
call
rol
std
fdiv
dec
mov
ins
push
adc
div
mov
sahf
mov
xor
mov
daa
imul
cmp
or
and
imul
in
xchg
adc
adc
xor
dec
in
lea
jbe
dec
cmp
pop
ja
loope
ss
in
cli
(bad)
sub
test
sti
(bad)
hlt
cdq
and
out
push
call
dec
fldenv
ss
pop
push
jo
cs
or
mov
dec
aad
pop
add
mov
int3
mov
adc
into
aaa
xor
mov
dec
jp
aad
add
(bad)
retf
adc
mov
xchg
lea
push
add
mov
mov
or
enter
inc
dec
pop
(bad)
pop
mov
inc
ret
dec
into
scas
aad
pop
imul
outs
mov
mov
push
aad
popf
aad
imul
clc
out
shl
outs
dec
adc
shl
mov
(bad)
(bad)
(bad)
lea
cs
mov
repnz
call
(bad)
repnz
repz
ins
mov
adc
push
add
sub
scas
loopne
xchg
out
adc
xchg
inc
mov
pop
cli
jmp
jno
inc
and
imul
pusha
pop
cmp
sub
sbb
cmp
sub
in
into
scas
std
sti
je
bts
cmp
pop
push
adc
add
adc
push
pop
jle
test
or
jge
sbb
sar
push
mov
mov
push
xor
(bad)
jge
push
pop
mov
fcomp
cmp
sbb
push
rcl
ror
pusha
mov
neg
xchg
jecxz
pop
and
mov
daa
and
or
cmp
mov
rol
jp
mov
push
fisttp
inc
mov
mov
punpcklwd
push
retf
sbb
push
sub
test
in
lods
dec
ror
cli
xchg
mov
add
sbb
aad
enter
push
cdq
mov
mov
xor
push
push
int3
inc
add
shl
cwde
js
jae
dec
fldenv
sbb
or
mov
cdq
mov
dec
mov
mov
xor
add
and
inc
arpl
cld
sub
or
aaa
dec
clc
pop
mov
fidiv
retf
cld
cwde
push
cld
idiv
xchg
push
or
leave
adc
dec
add
rol
inc
push
jmp
add
xchg
jge
jno
loope
cs
or
(bad)
mov
outs
retf
jnp
mov
aas
push
adc
xchg
inc
stos
pop
dec
clc
js
out
fisttp
lods
inc
in
adc
ret
sbb
rcr
pop
add
add
test
mov
mov
sbb
and
pop
cmps
imul
add
pop
stos
sbb
movs
mov
daa
mov
jge
les
push
pop
popf
mov
enter
jnp
sbb
imul
sbb
fwait
rcl
jae
jle
pusha
inc
mov
inc
retf
and
mov
xorps
rcr
dec
js
imul
es
cld
arpl
mov
push
sub
and
out
and
inc
mov
inc
or
into
int3
jp
mov
mov
shl
(bad)
stc
mov
sbb
shr
lahf
idiv
(bad)
sahf
test
stos
test
or
stos
sub
xor
or
imul
pop
pushf
fst
fst
inc
test
push
add
push
dec
push
pop
fldcw
dec
ret
in
int
(bad)
cmp
mov
repnz
inc
test
(bad)
les
imul
aaa
in
or
ficomp
test
je
and
dec
pop
sub
or
cmp
stos
pop
retf
fwait
add
aad
stc
scas
lea
imul
jbe
(bad)
and
ss
sbb
mov
jnp
icebp
push
adc
xchg
mov
push
xchg
mov
(bad)
lock
push
jecxz
ret
pop
(bad)
mov
mov
(bad)
test
imul
pop
das
xchg
lods
gs
mov
mov
mov
in
cmp
jnp
push
ret
and
ja
push
inc
jbe
and
mov
aas
scas
into
cmps
jecxz
mov
xlat
into
nop
loopne
xchg
cmp
add
mov
movs
dec
jne
fistp
sub
test
adc
data16
dec
shr
idiv
jecxz
(bad)
shl
aam
repnz
mov
sub
and
das
nop
jbe
xor
jb
cmp
test
sbb
pop
jns
inc
mov
xchg
inc
loop
ret
xor
dec
mov
or
add
test
mov
pop
jg
xchg
scas
out
icebp
lea
jne
ja
mov
sahf
into
fidiv
rcr
push
and
data16
popf
mov
sub
fistp
rcl
cmp
cld
imul
push
mov
(bad)
scas
fdiv
or
mov
call
aas
add
sbb
cmc
cmp
inc
les
das
xor
sub
jmp
adc
js
(bad)
ret
in
add
pop
sbb
mov
and
or
retf
ja
in
in
cmc
jmp
mov
or
ds
not
jb
ja
and
into
or
es
movs
xor
adc
sub
leave
mov
push
mov
xchg
add
daa
jne
sub
sbb
mov
sbb
sahf
out
mov
jne
cmc
mov
push
fs
and
mov
jmp
hlt
cmp
sbb
mov
xchg
lahf
loopne
pusha
out
in
push
pusha
or
sbb
sti
xor
xor
mov
inc
xchg
push
mov
push
test
fwait
cld
inc
clc
out
mov
or
lock
mov
scas
mov
xchg
add
fwait
xor
cwde
sbb
out
mov
push
test
fstp
call
inc
fnstcw
pop
cwde
mov
mov
jae
jo
gs
dec
pusha
arpl
xor
cmp
jbe
adc
pop
sbb
mov
jae
mov
out
frstpm(287
jmp
(bad)
outs
adc
test
ds
sub
aad
pop
add
movs
scas
idiv
mov
and
(bad)
adc
mov
adc
or
xlat
jmp
and
ret
add
repz
std
add
xor
arpl
shr
gs
and
sub
scas
mov
push
call
cmp
outs
xor
and
pop
and
push
and
pop
xchg
add
ret
mov
mov
imul
mov
sbb
loop
pushf
not
(bad)
push
ds
adc
push
xchg
popf
adc
or
js
push
outs
cmps
dec
and
jp
jle
push
adc
pop
sub
push
ins
retf
push
popa
jb
sbb
stos
cmp
and
enter
mov
lahf
(bad)
out
jnp
popf
pop
shr
bound
ds
xlat
ss
or
pop
jg
sbb
sub
sub
popa
(bad)
adc
lods
aaa
inc
cwde
repz
mov
retf
cmp
xlat
inc
ja
loopne
add
add
cmp
push
pop
push
imul
mov
inc
movs
aad
sub
sub
rcr
pop
ror
pop
ret
imul
repnz
cld
jne
inc
lods
dec
pop
add
fisttp
lods
sbb
movs
imul
and
fcmovne
push
aaa
inc
jmp
es
inc
call
mov
jne
fdivp
jle
sub
leave
dec
lods
popa
xor
jle
adc
cmps
cld
retf
jo
cmp
cmps
xchg
jne
xor
jle
pop
out
test
sub
addr16
(bad)
and
or
sbb
jb
jbe
test
int
and
pop
jns
shl
(bad)
pop
(bad)
sub
outs
enter
leave
test
add
sar
adc
jle
mov
outs
fst
jp
rcl
shl
loope
bnd
sub
nop
dec
ss
jecxz
imul
xchg
jbe
cmp
sub
push
mov
add
ds
sahf
push
test
jge
inc
sub
scas
jns
mov
pop
and
aas
jae
retf
jmp
stc
enter
mov
(bad)
shr
or
into
fdivr
cmp
loope
jno
dec
jb
and
(bad)
cdq
ficomp
test
jl
addr16
iret
in
and
mov
int
sbb
and
clc
xchg
jne
mul
add
or
sub
jle
lods
cmp
scas
sub
mov
and
retf
packsswb
add
mov
adc
pop
sbb
stc
ins
jecxz
or
test
bnd
sub
pop
fistp
sti
out
fisttp
sub
cmps
cld
pop
push
test
cmp
sbb
xchg
mov
and
xchg
lods
aad
xchg
(bad)
movs
bound
jecxz
cmovae
xor
hlt
or
imul
push
push
test
push
inc
in
sbb
stos
mov
movs
fidiv
xlat
jp
mov
xlat
rcl
in
xor
ja
cdq
mov
jmp
jae
loope
jl
ret
or
xchg
sbb
adc
sbb
inc
push
(bad)
push
neg
or
pop
cwde
mov
xchg
adc
jge
mov
daa
cmps
mov
in
cmp
push
les
and
fbstp
mov
lds
imul
or
push
les
mov
cmp
mov
call
jae
dec
imul
xor
daa
mov
retf
mov
outs
pop
sub
ret
test
mov
clc
mov
mov
mov
xchg
adc
les
inc
push
pop
data16
lds
ja
jmp
mov
test
retf
dec
out
imul
scas
daa
and
inc
cmps
aad
xchg
dec
mov
xor
in
inc
mov
int
dec
or
mov
rol
lods
cmps
mov
fld
(bad)
aas
div
cmp
fadd
xor
adc
push
iret
imul
push
inc
fldenv
(bad)
push
push
xchg
dec
xchg
in
xor
cli
cmovns
ret
loop
and
rcr
mov
js
xchg
(bad)
fadd
mov
xor
(bad)
mov
pop
cdq
mov
xchg
call
lock
push
imul
(bad)
cmp
scas
dec
shl
stos
add
adc
add
sbb
mov
cli
mov
aas
sub
sahf
and
icebp
cmp
pop
jbe
lock
push
(bad)
repnz
mov
add
scas
icebp
mov
arpl
mul
ror
lods
pop
mov
addr16
aaa
data16
sub
scas
cmp
dec
jno
jae
aaa
dec
inc
lock
imul
clc
push
jmp
stos
aad
ffree
jmp
test
and
dec
hlt
sub
les
mov
adc
(bad)
sbb
scas
in
data16
inc
dec
add
fiadd
rcr
in
mov
lahf
cmp
stos
(bad)
es
adc
push
pop
iret
std
bound
mov
dec
jno
and
call
pop
xor
(bad)
icebp
mov
push
and
mov
out
in
xchg
push
sbb
mov
cld
call
iret
mov
lsl
sub
cmp
cmp
or
outs
or
jnp
cmp
aaa
dec
leave
xchg
push
arpl
jecxz
cdq
inc
xor
mov
out
inc
jno
cmp
add
push
dec
cmps
xor
fist
data16
js
xor
idiv
pop
mov
push
ss
push
ret
int
nop
dec
and
cmp
add
xchg
cmp
ss
cmps
xor
jb
jg
jmp
lahf
(bad)
xor
(bad)
pop
mov
push
out
cmp
dec
pop
and
cmps
jp
rcr
int3
shr
dec
inc
fisttp
adc
cmp
xlat
inc
aaa
cmps
adc
scas
push
and
enter
push
jmp
in
dec
inc
lahf
dec
mov
fsubp
call
loop
aam
repz
in
mov
pop
(bad)
xchg
jnp
mov
je
test
mov
dec
push
aam
pusha
retf
jbe
jp
mov
out
jmp
and
nop
not
or
addr16
lods
xchg
icebp
add
fst
mov
int3
ins
outs
mov
retf
in
test
jecxz
js
call
push
movs
cs
enter
mov
mov
and
push
dec
arpl
cmp
fisttp
or
loopne
xor
stos
gs
(bad)
inc
lds
(bad)
(bad)
sti
push
mov
jbe
mov
sub
adc
lods
xor
dec
(bad)
jmp
add
xchg
jns
mov
bound
xchg
or
cli
je
fiadd
minps
xchg
push
cmp
jg
nop
rcr
sbb
cwde
sti
push
leave
iret
add
push
cld
lds
inc
fninit
xchg
push
inc
cmps
xor
push
xchg
arpl
clc
imul
mov
ins
ins
push
ins
sti
test
ins
xor
adc
loopne
cmc
push
mov
and
push
xchg
(bad)
andps
stc
sbb
push
xchg
push
sar
push
mov
cmp
dec
mov
xor
sti
mov
retf
sub
and
data16
fld
cmps
mov
inc
ror
add
out
stos
ss
sbb
(bad)
ja
outs
imul
cmp
fcomp
and
cs
gs
(bad)
xor
dec
xor
jmp
jb
(bad)
loopne
shl
add
scas
mov
pusha
or
push
push
fnsave
mov
aam
cmps
addr16
pop
ficom
jno
dec
adc
aas
(bad)
aad
adc
sub
adc
jecxz
sbb
dec
pop
push
jo
inc
mov
outs
cli
cmp
ret
je
stos
cmp
(bad)
cmc
xchg
xchg
xchg
arpl
inc
ret
sahf
movs
cli
repnz
push
dec
cdq
nop
rep
jecxz
test
xchg
xchg
pop
stos
mov
mov
pushf
imul
sub
mov
sbb
cmp
jecxz
sub
inc
fwait
stos
repz
(bad)
jae
cmp
fisub
xchg
jbe
add
daa
sahf
or
inc
cmp
add
mov
xlat
cdq
xchg
xchg
jbe
inc
iret
les
push
xchg
dec
bnd
dec
cmp
test
out
mov
inc
rcr
(bad)
loop
imul
cli
mov
pop
lods
(bad)
scas
imul
scas
das
loopne
xor
mov
aas
imul
popa
or
push
add
mov
ss
out
pop
aaa
fist
and
inc
pusha
mov
xchg
xor
fstp
mov
ins
or
fistp
int
push
cmp
pusha
xchg
aad
push
data16
pop
mov
and
jns
call
cmps
push
add
mov
pop
test
jne
jb
mov
dec
inc
sbb
fld
test
cmp
xchg
xor
in
adc
aas
jne
xor
jecxz
add
mov
test
cmp
mov
xchg
inc
adc
xor
(bad)
scas
stc
fs
cmc
ins
jl
loop
xor
xchg
ficom
rol
jmp
bound
(bad)
pop
fucomp
pop
sub
xor
je
imul
mov
outs
sbb
push
aam
and
push
pop
jg
mov
lock
pop
in
enter
test
sub
std
ret
cmp
psrld
mov
(bad)
adc
cmps
rcr
scas
sti
xor
or
fucomi
fwait
imul
mov
adc
sub
jl
or
add
je
arpl
fst
mov
pop
lea
test
lods
mov
ins
jae
outs
jmp
std
icebp
daa
in
pop
add
pop
push
mov
add
test
lods
jl
or
repz
add
cmp
mov
lods
je
les
out
test
inc
push
loopne
imul
test
inc
jns
into
push
js
xchg
and
test
pop
mov
ficom
je
movs
inc
jmp
sbb
cmp
xor
mov
xor
pop
cmps
in
pop
xchg
add
shr
or
xlat
or
and
dec
out
add
dec
mov
sub
hlt
sbb
jle
je
push
imul
test
push
xor
imul
jae
out
jl
fld
mov
aaa
xchg
sbb
in
es
ds
pop
push
push
xchg
lds
mov
pusha
aam
jg
out
aad
and
pushf
and
sbb
out
in
push
jmp
inc
push
mov
into
xchg
mov
cli
sahf
xor
xchg
adc
pop
lods
inc
test
dec
mov
jb
adc
outs
xchg
xchg
repz
or
pop
xor
sbb
sub
mov
add
mov
fidivr
xchg
push
mov
pop
or
stos
test
pop
shr
aad
xchg
js
fwait
jecxz
xor
sub
aam
xchg
cmp
fwait
popf
cmp
loopne
pop
not
ds
mov
add
aam
sahf
cmp
ss
dec
push
bound
xchg
push
add
cmp
mov
sub
imul
inc
adc
and
jp
stos
add
enter
pop
mov
ret
out
xchg
push
pop
xchg
ins
into
jge
pop
outs
test
xlat
mov
push
test
cmp
rcr
scas
out
int
mov
(bad)
sbb
xchg
das
pop
mov
mov
push
adc
(bad)
lahf
mov
cld
mov
jge
or
inc
xor
push
gs
push
jle
inc
mov
arpl
sub
jecxz
(bad)
and
fwait
jp
sub
adc
nop
scas
mov
icebp
pop
data16
sbb
lahf
fstp
mov
pushf
cmp
aam
fucomi
push
mov
pop
jl
xchg
pusha
movs
and
inc
mov
out
out
imul
mov
lods
pop
xor
add
data16
neg
sub
mov
add
or
test
or
fwait
aaa
dec
pop
pop
dec
aad
ret
in
int
pop
outs
push
outs
dec
pop
mov
out
test
iret
mov
out
test
xor
and
add
cmps
lahf
sbb
ds
(bad)
int
dec
jmp
mov
mov
mov
ret
fdivr
cwde
jmp
nop
fiadd
add
arpl
pop
xor
xchg
add
adc
and
addr16
pop
inc
mov
push
(bad)
pop
dec
cmp
cmps
cmc
mov
addr16
jno
loop
jae
loop
popf
pop
loopne
cmp
mov
(bad)
and
lahf
fwait
sahf
ins
stos
mov
lahf
sub
vpminub
cmp
jge
mov
cmp
sub
lods
test
fdiv
fistp
icebp
shl
sbb
sbb
in
popf
pop
test
jecxz
cmp
rcr
retf
mov
adc
mov
ret
cdq
xchg
daa
mov
xor
and
dec
inc
out
mov
icebp
push
lea
mov
add
cmps
pop
pop
pushf
push
mov
in
imul
xchg
(bad)
adc
xchg
mov
nop
mov
mov
or
mov
cmp
push
cmc
xchg
and
push
(bad)
popf
xor
loop
les
or
bndstx
cmp
arpl
inc
mov
cmp
test
cmp
jne
and
idiv
jecxz
mov
fcomp
adc
pop
lock
xchg
sar
mov
je
shr
mov
ret
add
dec
inc
pop
adc
test
idiv
movs
mov
and
and
mov
fs
imul
fwait
cmp
in
or
sbb
xchg
setge
push
and
or
imul
adc
cmp
cdq
push
dec
outs
inc
push
shr
jae
ins
inc
inc
test
out
push
mov
push
ret
xlat
mov
test
xchg
gs
mov
adc
fs
mov
sub
pushf
and
dec
js
xchg
bound
sahf
sar
aaa
jae
mov
repz
cdq
sub
fwait
mov
mov
sti
icebp
and
xchg
inc
jmp
push
mov
fwait
push
push
sbb
mov
sub
test
and
mov
hlt
xor
sbb
out
pop
cli
int3
imul
pop
mul
cmp
rcl
lea
mov
mov
or
adc
xor
mov
mov
sub
int3
test
(bad)
fdiv
ret
cmps
dec
jg
rol
sbb
shl
popa
xor
shl
or
xor
cmp
xchg
fs
cmp
aam
dec
or
or
cmp
jl
adc
xchg
add
or
fs
loope
dec
test
inc
fwait
sbb
mov
fdiv
inc
repz
enter
adc
xor
push
sub
aaa
(bad)
out
cmp
adc
(bad)
dec
pop
adc
and
rcr
add
loope
scas
push
push
mov
fld
adc
jno
test
adc
sbb
mov
cli
aas
or
mov
or
mov
push
fiadd
pop
cmp
cmp
mov
imul
pop
ja
(bad)
stos
or
mov
xchg
mov
xchg
bound
jg
jp
and
leave
addr16
xlat
out
les
int3
fnstsw
mov
lods
test
sub
sti
test
mov
imul
push
jnp
or
sub
cld
xchg
cli
sub
movs
sub
jle
lods
mov
sti
push
jns
shl
mov
fisubr
jecxz
inc
xchg
or
mov
repz
jae
scas
jecxz
inc
jle
mov
dec
inc
ror
dec
cmp
out
(bad)
adc
lea
cwde
dec
lea
push
or
outs
xchg
out
xor
xor
push
inc
sbb
pop
ss
imul
mov
call
mov
jl
adc
inc
iret
pop
cmp
ror
fistp
stc
add
jmp
or
sti
mov
sub
sub
ja
mov
adc
loopne
js
adc
push
loopne
hlt
into
imul
push
loopne
adc
gs
sti
movs
inc
mov
jnp
and
push
add
leave
into
(bad)
rcr
and
inc
out
inc
jl
repnz
mov
data16
fsub
push
dec
mov
inc
test
push
pop
mov
push
mov
retf
test
mov
imul
dec
sub
xchg
imul
movs
mov
cmc
jmp
mov
xchg
arpl
and
in
jl
dec
sbb
repnz
jae
ds
push
sbb
out
xchg
push
cld
rcr
add
stos
adc
sbb
adc
test
lock
imul
test
xchg
push
jle
adc
pusha
xchg
sub
cld
pop
sti
inc
hlt
stos
mov
xor
call
(bad)
pop
aad
bound
cmp
fsub
not
data16
pop
ins
loop
mov
add
jno
lock
jae
adc
mov
loopne
mov
push
fisttp
push
or
adc
in
pop
jns
ins
mov
stc
in
push
das
imul
or
and
xchg
adc
mov
sbb
into
push
mov
aam
mov
push
sub
stos
cwde
inc
out
sbb
ss
mov
int3
sbb
enter
adc
and
mov
xchg
lahf
mov
icebp
lods
pop
loope
loope
retf
inc
add
add
sub
pop
sbb
mov
mov
int3
jmp
jecxz
push
and
and
nop
add
jp
inc
pop
daa
push
cmp
btc
fadd
push
cmp
nop
pushf
mov
push
add
mov
fadd
or
outs
pop
lock
cmp
sub
retf
(bad)
call
ret
dec
and
aaa
jp
sub
repnz
mov
ja
sub
and
pusha
shl
pushf
addr16
add
inc
add
or
loope
aad
out
push
out
int
test
inc
xchg
add
jecxz
push
rcr
push
sbb
and
hlt
inc
not
dec
shl
jg
bound
(bad)
outs
test
pop
push
mov
ins
pop
jnp
jne
into
adc
cmp
call
test
int3
loopne
cdq
xchg
in
inc
icebp
inc
and
dec
xchg
in
bnd
inc
cmps
cwde
repz
inc
sbb
mov
cmp
pop
leave
add
inc
mov
js
push
fidivr
lods
popa
daa
sar
in
icebp
lods
xor
cmp
or
and
fisttp
pusha
and
dec
(bad)
pop
inc
dec
and
jg
sub
dec
xchg
sub
nop
mov
mov
lods
sub
adc
fistp
test
push
sub
pop
pop
and
(bad)
adc
jecxz
fxch
retf
test
loop
sbb
jo
pop
shr
jp
lea
test
(bad)
fild
xor
cmp
jae
mov
imul
scas
js
jbe
addr16
das
rcr
data16
pop
adc
shl
(bad)
les
mov
cli
add
jae
add
fstp
mov
xlat
jne
xchg
popa
ret
outs
in
dec
and
mov
xor
add
shl
jecxz
fwait
hlt
push
ins
movs
aam
push
sub
loop
leave
sbb
je
mov
inc
fcom
push
jno
mov
jmp
adc
ins
sti
sar
xchg
scas
out
jg
lahf
and
retf
push
stos
sub
mov
adc
sbb
lods
jbe
dec
mov
adc
mov
mov
cs
sbb
xchg
ins
push
stos
aam
dec
push
and
mov
cmp
cmc
push
mov
daa
jb
ds
out
popa
mov
mov
fsub
(bad)
fnstenv
lods
jp
retf
fimul
dec
ja
ja
xor
movzx
ficomp
out
jg
jmp
dec
xchg
inc
or
inc
dec
repnz
adc
mov
xlat
call
jns
jg
adc
jl
add
into
in
xlat
bound
xchg
mov
xchg
mov
cdq
mov
les
push
lock
arpl
(bad)
inc
lock
jg
or
pop
xor
shl
cmp
cld
(bad)
cmp
ins
xor
mov
jp
or
mov
je
cwde
adc
fiadd
add
ds
sbb
lods
pusha
push
cmps
int
jle
test
lahf
add
aaa
jmp
xchg
jmp
in
sub
mov
pop
sete
push
push
cmps
idiv
pushf
add
aad
je
jmp
int
(bad)
aad
push
and
xchg
sub
cmp
shr
xchg
les
repz
or
mov
jb
cmp
cmp
(bad)
fmul
sub
xchg
push
adc
sub
pop
jle
leave
rol
xchg
ja
rcl
mov
inc
push
outs
dec
xchg
mov
(bad)
es
neg
push
xchg
fwait
sbb
(bad)
in
fs
sbb
fistp
loopne
cmp
mov
test
mov
or
jmp
adc
out
or
jle
adc
adc
mul
stc
push
xor
dec
and
cmp
xchg
push
jmp
nop
mov
push
xchg
sbb
mov
pop
outs
mov
(bad)
addr16
mov
dec
imul
outs
dec
sub
rcr
mov
adc
dec
daa
and
cdq
jnp
fcomp
scas
inc
cmp
jae
pop
dec
pop
fistp
and
or
dec
sub
mov
jg
fidiv
sti
cdq
mov
dec
stos
jno
into
retf
out
sub
stc
mov
lahf
js
adc
mov
xchg
mov
mov
(bad)
fild
inc
nop
fsub
js
aaa
loope
in
lods
(bad)
pop
sti
ja
cmp
dec
(bad)
call
add
mov
sub
push
sbb
cmp
movs
pop
or
sar
outs
fidivr
into
mov
cmc
pop
sub
push
scas
push
movs
test
aas
sbb
push
imul
cmp
aam
jmp
and
fsub
or
xor
scas
xchg
(bad)
xchg
cs
or
mov
and
ss
call
add
test
popf
pop
out
xchg
sbb
cli
sbb
pop
mov
mov
xchg
ret
fisubr
(bad)
shl
sbb
(bad)
sbb
add
and
jecxz
call
(bad)
fdivr
stc
xchg
jl
popa
test
push
add
mov
mov
outs
jge
ret
jecxz
push
sbb
pop
jp
fst
push
add
sub
out
in
or
retf
adc
test
mov
rol
cdq
push
movs
dec
add
out
sar
dec
test
jo
shl
xlat
lods
jmp
xor
nop
pop
push
sti
or
popf
lock
mov
fwait
retf
movs
mov
jo
cmp
mov
and
fisubr
jmp
push
or
pop
mov
add
jecxz
xor
xchg
push
and
or
cmc
aas
push
leave
mov
or
test
stos
mov
jl
lods
out
mul
aaa
lds
inc
adc
lock
fcom
jo
cdq
mov
cmp
jb
cmp
xchg
mov
adc
jp
jns
adc
fs
out
mov
fimul
adc
mov
sub
pusha
push
imul
int3
add
stos
sub
adc
int3
xchg
and
pop
push
xchg
adc
push
cmc
mov
pusha
cmps
ret
idiv
aam
mov
fdiv
fdivr
stos
pop
sbb
mov
neg
outs
xchg
pop
pop
popa
fldlg2
cdq
aam
adc
call
in
cmp
sub
imul
into
push
addr16
jecxz
mov
and
cs
loopne
ror
hlt
xchg
retf
push
(bad)
push
nop
sbb
adc
fs
jle
xor
les
rcl
xchg
dec
enter
add
std
add
inc
mov
lahf
popf
adc
nop
push
inc
ret
jecxz
in
fnstcw
in
inc
push
jnp
mov
hlt
inc
scas
jg
dec
jns
mov
sti
retf
ins
call
mov
pop
mov
iret
cmc
mov
pop
sbb
push
or
or
data16
dec
lock
sbb
jmp
scas
stos
shl
push
xlat
(bad)
imul
cwde
mov
fist
pop
xor
hlt
rcr
fidiv
leave
inc
inc
inc
jg
push
scas
add
(bad)
mov
sbb
stc
mov
imul
je
adc
out
mov
inc
jne
retf
jge
mov
adc
pop
add
mov
sbb
sbb
or
inc
dec
fdiv
repz
int
add
in
xor
(bad)
lea
js
or
sti
pop
jp
xlat
sub
cld
fs
pop
sub
jo
jp
inc
mov
sahf
dec
mov
outs
(bad)
or
dec
push
or
push
push
jl
or
xchg
add
test
out
xor
enter
leave
out
and
mov
cmps
sub
bound
mov
lds
dec
or
in
psrad
or
cmps
sub
jmp
gs
mov
cmp
cmp
(bad)
icebp
ss
pop
xchg
mov
out
pop
fsubr
(bad)
add
mov
fadd
xchg
adc
inc
iret
cdq
mov
push
out
arpl
xor
sub
dec
cmp
sbb
(bad)
mov
lahf
inc
cmc
bnd
mov
test
dec
cs
xor
push
in
mov
js
and
std
out
mov
cmp
frstor
icebp
adc
stos
icebp
mov
sbb
stos
adc
adc
test
cmp
fistp
ss
dec
pop
fiadd
pusha
repnz
jl
fist
sbb
std
into
jno
push
out
mov
pushf
out
int
sub
mov
jge
mov
cmc
pop
lods
maskmovq
mul
xor
mov
stos
jle
xor
dec
push
dec
adc
cld
popf
xchg
push
mov
push
push
or
ret
dec
cmc
pop
arpl
mov
jb
mov
clc
add
dec
mov
pop
in
into
lods
mov
jne
lds
imul
into
dec
(bad)
cmc
cli
dec
and
inc
cmc
sbb
mov
in
mov
xor
clc
mov
push
push
movs
push
xacquire
push
lds
push
pop
dec
movs
shr
ins
adc
mov
loopne
jmp
xor
sub
pop
pushf
cmp
mov
adc
jge
inc
fisubr
or
fadd
mov
sti
adc
shr
ficom
lea
mov
(bad)
mov
lods
jne
add
lock
shl
inc
add
inc
clc
xchg
xchg
bound
adc
or
in
dec
scas
aad
or
mov
push
inc
inc
push
daa
sahf
in
xchg
(bad)
jns
outs
xchg
mov
shl
mov
lock
dec
outs
rcl
mov
in
test
sub
idiv
jb
mov
in
scas
lds
sub
xor
cmp
popf
sub
jnp
loope
xor
jno
repnz
sub
inc
sti
xchg
xor
lea
mov
push
xchg
dec
jecxz
dec
nop
or
(bad)
push
sub
dec
mov
(bad)
das
into
mov
cmp
stos
into
shr
cmp
inc
cld
jp
cmc
and
push
adc
std
das
jp
add
retf
lods
pop
cmc
out
mov
ins
inc
cmps
imul
cmp
sub
aas
push
sahf
fstp
xor
cmp
mov
pusha
xor
mov
jp
lods
pop
inc
inc
pop
cmps
mov
out
das
jnp
pop
xchg
and
repnz
or
sbb
xlat
xor
imul
iret
lds
xchg
xchg
out
add
pop
call
pop
movs
mov
sub
fcomip
hlt
dec
fdiv
inc
xor
cwde
add
or
xchg
mov
in
pop
mov
add
(bad)
in
retf
imul
aas
sar
in
push
sub
dec
cmp
aam
mov
nop
or
pop
loopne
xor
jmp
mov
ins
jbe
fcmovbe
and
mov
ror
mov
hlt
or
mov
add
add
cmps
add
push
mov
cmp
or
dec
and
out
call
(bad)
mov
sub
push
loopne
adc
xor
mov
lea
cmps
mov
sub
fdiv
lods
outs
push
dec
test
outs
jmp
inc
inc
sub
adc
mov
adc
fwait
inc
out
dec
popf
out
mov
mov
and
mov
sbb
in
push
push
dec
hlt
or
push
xor
ins
shr
mov
repz
fiadd
es
sbb
push
pop
icebp
das
mov
int
loope
sub
clc
and
std
cmp
xchg
imul
inc
test
fild
in
dec
dec
ja
xor
call
cwde
(bad)
lods
mov
xor
inc
cmps
into
das
dec
xchg
xor
bound
push
add
ins
mov
fsubr
or
sbb
popa
iret
sahf
jo
mov
cwde
and
or
movzx
out
dec
xchg
sbb
lock
cmps
push
push
xchg
jnp
or
push
in
adc
sbb
add
xchg
and
aam
mov
setns
push
push
mov
fwait
and
or
loope
add
loopne
jne
mov
sar
and
shr
(bad)
push
sub
xchg
xor
out
aaa
shr
imul
retf
fs
mov
push
loopne
int3
cmp
jbe
ror
aam
aad
enter
sar
or
sub
pusha
pushf
cmp
bound
pop
dec
addr16
inc
inc
push
enter
sub
cmp
ja
ja
jecxz
test
mov
inc
cs
les
xchg
jp
jle
and
cmp
sub
xor
jge
lea
dec
mov
stos
shl
out
mov
and
pop
movs
mov
(bad)
movs
jne
xor
mov
cmp
jnp
leave
push
(bad)
lahf
out
icebp
popf
and
push
addr16
push
retf
sub
mov
cmp
in
aam
mov
not
stc
lods
inc
std
push
pop
stc
dec
test
cwde
retf
mov
xchg
clc
sbb
mov
and
jg
test
cmp
sbb
or
pop
sub
pop
lds
pop
adc
inc
pop
jbe
adc
push
cs
imul
ds
mov
icebp
test
dec
ss
cmp
dec
movs
xlat
ins
icebp
jns
xchg
sub
in
sbb
cli
inc
inc
repz
sbb
or
jp
jns
repz
arpl
mov
cld
das
out
mov
adc
push
mov
es
cdq
jl
ss
addr16
out
sbb
jecxz
lods
stos
xor
enter
cmp
movs
mov
test
loop
imul
neg
and
mov
jae
mov
mov
xlat
jae
cmp
cmp
push
imul
mov
mov
rcl
lods
dec
adc
cmp
pop
pop
and
push
cld
mov
jns
cmp
push
jmp
call
cdq
popa
cmp
stc
aas
daa
aaa
call
fwait
loope
sub
fsubr
int3
add
sahf
stos
cs
add
xor
(bad)
stc
loope
call
mov
cmp
xchg
sub
inc
jmp
jb
in
adc
dec
js
(bad)
adc
out
inc
call
sahf
pop
lds
push
pop
jecxz
aas
add
jecxz
clc
leave
pop
in
sub
and
lods
pop
shl
mov
mov
pop
in
mov
jb
not
push
repz
push
shl
sub
mov
movs
and
mov
sti
sbb
push
(bad)
retf
mov
imul
adc
xchg
xchg
add
push
fstp
and
outs
lds
(bad)
jecxz
mov
fadd
aaa
cmp
fstp
xor
stos
(bad)
call
sti
jns
std
jecxz
aas
jnp
(bad)
pop
or
movs
loope
push
arpl
mov
in
pop
lahf
push
sub
mov
lods
lods
xchg
mov
and
adc
shl
add
push
das
pop
mov
pop
shl
je
js
scas
lods
lods
jmp
sub
lds
or
adc
mov
dec
mov
xor
or
lock
pop
cmps
xchg
pop
xor
imul
out
xor
in
je
div
push
add
fisttp
mov
dec
push
jmp
stos
inc
or
in
iret
fld
repnz
gs
lds
sbb
pop
data16
mov
xchg
in
xchg
js
cld
xchg
rcl
in
inc
sar
jle
out
int3
stc
out
cmc
adc
cmp
mov
fist
sbb
icebp
jmp
test
and
push
xchg
xor
mov
mov
xchg
cmp
pop
sub
ins
scas
jne
mov
add
add
push
inc
test
mov
fwait
(bad)
pop
lods
loopne
fiadd
mov
push
retf
adc
jmp
dec
or
mov
stos
push
jno
mov
mov
dec
dec
xor
xor
ret
lahf
inc
inc
pusha
jle
rcr
enter
out
inc
in
arpl
pop
sbb
enter
in
retf
daa
(bad)
jns
mov
jmp
fistp
sub
adc
outs
cmps
aad
test
cmp
cmp
mov
arpl
scas
jns
leave
idiv
push
(bad)
inc
(bad)
jle
sub
pop
mov
mov
cmps
cmps
cmp
lods
add
push
jb
fwait
cmps
fldenv
push
mov
inc
pop
call
cmp
imul
gs
dec
stc
jne
clc
or
jle
or
xchg
push
retf
cmps
stos
cmp
mov
xlat
ds
jp
inc
or
out
jmp
push
ficomp
sub
sbb
mov
ins
or
jae
and
nop
and
and
ds
lahf
test
adc
xor
imul
adc
je
xchg
imul
inc
aas
xchg
jae
mov
pop
xchg
scas
stc
repz
or
neg
push
popf
(bad)
push
mov
sub
addr16
cmc
jmp
movs
repnz
(bad)
cmp
push
jnp
jl
push
lods
int3
push
sub
jns
sub
sub
sub
cs
pop
and
jge
pusha
mov
jne
push
mov
out
mov
push
dec
xchg
cmp
js
mov
xchg
cmp
sbb
fnstsw
xchg
and
dec
in
mov
scas
pop
pushf
aas
dec
out
fimul
push
test
push
pop
lods
inc
popa
mov
fstp
sub
jmp
push
xchg
push
imul
adc
jg
or
loop
leave
xchg
loopne
mov
push
mov
mov
xchg
pop
cld
and
dec
cmp
out
stos
enter
shl
dec
movs
fs
mov
retf
sub
mov
fs
gs
out
sahf
mov
adc
ins
fcmovb
mov
into
rcr
call
js
out
ret
outs
mov
test
lds
test
cdq
ret
pop
(bad)
int
fidiv
stc
pop
cmc
xor
je
cmc
jns
push
cmc
mov
mov
arpl
ret
shl
or
dec
jp
loope
sbb
jnp
enter
xor
adc
xor
sbb
xchg
inc
adc
scas
(bad)
mov
outs
not
xchg
xchg
fmul
adc
cmp
repz
sub
xor
mov
hlt
enter
add
cmp
lea
imul
(bad)
mov
inc
push
jo
pop
stos
xor
pushf
inc
out
adc
pusha
jmp
loopne
inc
push
pop
or
std
lea
inc
in
mov
(bad)
pop
xchg
cmp
mov
out
cmp
nop
mov
int
xchg
nop
shl
mov
lods
inc
imul
(bad)
xor
cld
or
xchg
ret
cmp
push
cmps
aad
mov
inc
pusha
pop
cmp
dec
pushf
mov
mov
mov
sahf
xor
sbb
inc
daa
jne
bound
stos
xrelease
xchg
lock
int
dec
dec
adc
push
ins
movs
jb
(bad)
ja
loopne
dec
into
mov
jmp
mov
sbb
out
push
mov
cmp
jae
fidivr
push
inc
fwait
mov
ins
cmp
pop
pop
sub
imul
adc
dec
push
adc
outs
pop
shl
fdivr
out
test
mov
in
lock
adc
movs
scas
sbb
test
or
xchg
(bad)
loopne
cmp
xor
dec
jae
(bad)
push
lahf
mov
out
dec
bound
adc
jg
fadd
inc
stc
out
sub
retf
mov
dec
ret
dec
sub
test
push
in
add
fs
ins
xor
add
adc
lock
push
test
jmp
pop
scas
inc
out
sbb
add
push
popf
jl
adc
mov
sbb
pop
xor
xor
cwde
adc
loope
cmp
cmps
push
pop
popf
loope
sub
sbb
jne
mov
stos
adc
inc
mov
cmp
inc
jmp
(bad)
mov
cs
mov
push
push
adc
je
fs
push
push
mov
jmp
sub
jnp
repnz
pop
inc
iret
pcmpgtw
ffreep
xchg
mov
xor
or
push
sub
cmps
cmp
daa
cmps
xor
jae
lea
jmp
aas
std
stos
in
dec
xlat
mov
in
xchg
ins
imul
popf
pop
jo
loopne
mov
xchg
(bad)
jbe
cmp
mov
dec
ins
push
jns
out
fiadd
in
jmp
mov
push
retf
out
mov
xchg
mov
sub
or
push
aaa
(bad)
ja
enter
pop
shl
xchg
cdq
cmps
(bad)
sbb
mov
push
push
adc
xchg
frstor
mov
jo
ss
clc
pop
fcomip
jle
stc
and
cmps
jns
pop
mov
push
push
jl
mov
dec
dec
jmp
mov
aas
sar
adc
jge
(bad)
cli
sbb
pop
dec
js
sbb
lds
mov
outs
ja
bound
out
out
mov
xor
rep
lock
imul
ins
shl
in
outs
lahf
push
(bad)
push
dec
push
and
jl
lock
ret
fucom
mov
(bad)
popf
dec
cmps
or
cmp
mov
das
shl
addr16
les
inc
jmp
fist
mov
call
xlat
rol
push
(bad)
xchg
es
pop
in
dec
push
or
jae
mov
sahf
iret
mov
nop
jl
xor
div
mov
movs
inc
jnp
sub
xor
mov
in
mov
push
std
pop
mov
jns
lods
or
mov
push
cmps
or
imul
dec
scas
mov
in
push
jns
popa
mov
sbb
dec
in
jmp
das
daa
ja
or
mov
(bad)
cmp
pop
gs
lahf
or
les
jmp
(bad)
retf
daa
mov
sub
out
mov
and
test
arpl
sbb
mov
fist
in
mov
sar
xchg
jns
fadd
stos
xor
bound
retf
lock
sbb
mov
loopne
aam
stos
or
in
xor
scas
fcom
mov
mov
mov
aas
es
cmp
les
mov
push
imul
movs
and
mov
cmp
add
test
push
cmp
xor
mov
imul
gs
iret
mov
mov
clc
and
and
les
dec
xor
in
xlat
sub
stc
scas
bound
or
xor
inc
and
sub
test
test
int3
enter
push
das
adc
loop
out
hlt
push
stos
pusha
outs
nop
cs
int3
xchg
jo
mov
sahf
out
shr
pop
xor
retf
hlt
ss
pop
sbb
das
stc
les
pusha
ret
arpl
sub
xchg
in
test
dec
call
int
dec
popf
scas
retf
pop
mov
jl
inc
cmc
neg
adc
mov
sub
xor
movs
retf
add
in
add
clc
addr16
sbb
mov
imul
mov
cli
lods
pop
add
je
push
sub
mov
and
adc
adc
int
lds
inc
or
outs
pushf
sub
push
jns
(bad)
popa
jg
adc
pop
add
pop
mov
mov
in
test
xchg
pop
repz
leave
jmp
sub
pop
in
mov
outs
icebp
xor
jmp
ja
sub
dec
iret
jb
fidiv
sahf
in
rcr
fnstenv
stos
les
mov
mov
repz
push
mov
movs
push
sbb
daa
and
dec
sub
jns
pop
xchg
mov
movs
push
cwde
mov
ins
mov
leave
jns
cdq
jno
xor
test
inc
fcmovnb
(bad)
xor
jmp
int
jno
pop
imul
ds
sbb
clc
movs
and
mov
push
push
scas
xchg
push
test
movs
retf
jno
dec
ins
add
aas
or
int3
inc
mov
adc
jge
jg
cmps
test
(bad)
push
mov
push
push
xchg
dec
xchg
cmc
xchg
jne
aam
ficomp
jne
mov
dec
dec
cmp
(bad)
mov
sti
test
xchg
ror
scas
cmp
dec
scas
ins
add
(bad)
xor
push
cmc
pop
cmps
or
ins
ret
rcr
cmp
xchg
jge
fwait
pop
fldenv
mov
push
mov
leave
xchg
and
in
sub
dec
test
sahf
cmp
test
cmp
clc
ficom
hlt
add
sub
xor
xchg
cmp
inc
push
xor
dec
or
cmc
dec
add
mov
int3
sbb
test
mov
mov
push
in
add
fidiv
adc
push
jg
cmp
cmp
cmp
jge
pop
dec
sub
and
(bad)
sbb
mov
add
sti
(bad)
fst
mov
enter
and
xor
(bad)
aad
inc
shl
inc
mov
in
or
imul
inc
clc
es
and
daa
pop
lahf
sub
mov
add
repnz
mov
mov
push
loop
int3
pop
or
in
xor
call
fsincos
push
out
xchg
arpl
aaa
sub
in
leave
dec
cmps
adc
push
mov
cmc
jge
push
js
dec
mov
push
pusha
retf
(bad)
jmp
scas
(bad)
xchg
movs
sub
out
(bad)
ss
sbb
jo
jo
add
into
mov
fstp
(bad)
mov
icebp
jb
js
lahf
push
ds
ret
jo
pop
aas
lds
push
cwde
fwait
out
lahf
push
sub
out
xor
jmp
repnz
jne
inc
jb
push
sbb
xor
push
jmp
pop
clc
mov
or
not
retf
lock
adc
dec
in
call
xchg
pop
cwde
push
lds
int
inc
jmp
inc
mov
pusha
add
pusha
dec
sbb
inc
pop
imul
mov
sbb
mov
sbb
and
inc
cmp
pop
and
dec
stc
xchg
jns
loope
nop
jno
xchg
inc
inc
pop
sar
call
imul
sbb
nop
adc
add
xchg
inc
mov
and
imul
sahf
lods
lods
repnz
wrmsr
cmc
mov
dec
push
fwait
mov
in
ss
lahf
xchg
not
pop
mov
adc
or
or
test
loope
dec
(bad)
out
pop
push
add
jo
or
call
je
jae
jle
addr16
in
das
pop
xchg
cli
aas
jp
loop
aam
push
cmp
mov
fisub
mov
inc
outs
sub
int3
in
lock
inc
pushf
mov
cdq
pop
pop
stc
sub
bswap
aas
adc
add
xor
jl
fcom
cmp
push
cmps
dec
jo
cmp
cmp
push
or
mov
dec
out
lock
cmp
popa
scas
je
enter
retf
jge
mov
inc
push
(bad)
nop
adc
ss
imul
call
int
leave
xor
ror
js
push
sbb
aas
in
sbb
sahf
and
jmp
leave
shl
push
inc
pop
sbb
mov
fnstsw
xchg
mov
pop
repnz
cdq
add
imul
cdq
mov
cmp
push
and
cmp
retf
sar
js
scas
iret
inc
in
xchg
inc
dec
in
or
mov
imul
lahf
mov
mov
inc
mov
adc
xchg
aaa
imul
int
repz
imul
dec
aad
outs
sbb
mov
inc
loop
cmovp
and
mov
hlt
popa
or
mov
jmp
test
fs
call
pusha
out
nop
add
add
jae
xchg
aad
xor
jno
imul
mov
push
jnp
xchg
rcr
mul
inc
or
mov
mov
inc
xor
shl
jae
cmc
lahf
sbb
loop
test
mov
fstp
jmp
fwait
dec
cwde
mov
inc
rcl
mov
push
popf
pop
mov
inc
lds
rol
retf
and
jg
lods
lods
xchg
stos
xor
mov
arpl
(bad)
jbe
in
sbb
test
and
push
test
stos
movs
jge
fcom
mov
(bad)
add
sbb
popa
push
mov
out
inc
call
rcr
xor
pop
mov
push
push
loope
jbe
(bad)
(bad)
dec
mov
mov
imul
sahf
inc
mov
pop
jmp
nop
and
sbb
or
xchg
add
pop
loope
cmp
dec
int
jbe
gs
add
and
pop
jmp
adc
imul
mov
das
dec
push
mov
call
(bad)
jbe
xor
in
es
cmp
and
push
mov
(bad)
push
lods
pusha
int3
cmp
mov
pop
push
dec
aam
(bad)
inc
stos
inc
daa
mov
test
adc
sbb
inc
xor
xor
(bad)
aam
sub
adc
jns
xlat
mov
pop
lds
inc
jnp
movs
fistp
js
popa
cmp
mov
nop
push
push
jmp
lea
sbb
movs
cmp
and
(bad)
sub
push
ret
das
aad
pop
adc
xor
add
(bad)
cmps
add
push
fdiv
lea
pop
pop
xchg
rcl
imul
gs
hlt
leave
or
cmc
sub
das
mov
inc
sub
push
sbb
addr16
retf
cld
xchg
cmps
in
fld
loope
jg
sbb
les
imul
lea
jno
xchg
ret
mov
mov
stos
mov
xor
mov
push
rcl
pop
ret
inc
fmul
pop
push
fild
xlat
pop
leave
mov
aam
push
scas
inc
adc
dec
pop
cs
sbb
push
addr16
inc
push
div
js
inc
aam
inc
inc
rol
fisttp
fs
(bad)
pop
loope
mov
jmp
push
or
repnz
mov
push
xchg
and
jecxz
loope
ins
adc
mov
xor
loopne
mov
jnp
pop
push
jne
cmp
mov
cwde
sub
jmp
adc
inc
mov
shl
jmp
or
mov
mov
cmc
or
clc
and
mov
addr16
xchg
sub
mov
push
mov
add
mov
and
repz
or
fwait
sbb
nop
call
imul
and
and
sti
mov
ja
jo
xor
xor
aaa
clc
enter
xlat
dec
sub
aad
leave
xor
les
fs
add
and
push
fnstsw
mov
mov
pop
xor
ror
test
dec
ret
sbb
cmp
and
dec
icebp
dec
dec
push
pop
jl
sub
pop
and
inc
rcr
xor
mov
(bad)
movs
sub
push
(bad)
or
add
sbb
push
enter
jae
mov
jecxz
xchg
add
sbb
repz
shr
aam
jle
xchg
sub
dec
cmp
retf
sti
jns
xor
push
dec
stc
movs
leave
xchg
jns
sub
mov
mov
xor
mov
addr16
pushf
js
lods
sti
cmps
cmps
dec
ds
add
jb
xor
icebp
mov
out
shr
dec
jns
push
pop
push
add
daa
ror
jb
jmp
loope
jp
lods
mov
xor
dec
dec
stos
in
mov
xor
mov
jmp
inc
jae
jae
mov
and
sar
inc
xor
je
push
out
pop
lods
jno
sub
icebp
inc
sub
jmp
es
jl
in
push
outs
sub
mov
scas
jnp
fwait
int3
(bad)
fisubr
retf
scas
stos
fsubr
add
clc
push
jae
test
cdq
das
fst
sub
(bad)
imul
hlt
fdivr
sbb
dec
mov
jnp
inc
fld
and
cmp
dec
scas
lea
int
xadd
push
loop
shr
or
sub
push
dec
push
xor
dec
inc
fxch
pop
mov
mov
(bad)
pusha
mov
ss
ret
push
dec
xchg
aas
loope
fdivrp
push
es
enter
(bad)
jb
xor
cs
add
outs
not
push
cmp
call
pop
aaa
(bad)
mov
mov
push
jecxz
cmp
jbe
and
out
ins
fwait
and
cld
xlat
mov
bound
daa
clc
xchg
jno
arpl
imul
jg
add
jno
aas
push
mov
std
xor
bound
inc
mov
je
pop
fiadd
fidiv
pop
(bad)
push
or
fld
cmp
std
mov
fisubr
int3
adc
gs
out
lea
and
mov
push
imul
pop
jb
rol
in
data16
bound
hlt
fadd
jae
std
aam
and
add
sub
pop
xchg
repz
mov
mov
xchg
inc
mov
jns
(bad)
jo
pop
outs
fidiv
jb
jecxz
xor
cli
mul
mov
jnp
outs
shr
pop
and
ins
in
pop
aas
dec
retf
test
or
or
in
mov
or
scas
sub
pop
enter
pop
sbb
mov
mov
adc
stos
sti
ficomp
movs
mov
push
sub
mov
jge
(bad)
push
rol
cmp
aam
mov
arpl
bound
hlt
and
scas
cmc
mov
mov
ja
arpl
faddp
jno
push
loop
or
cmp
adc
mov
dec
or
(bad)
fsubr
out
dec
cmp
gs
push
and
pop
adc
sbb
aaa
cmp
sahf
inc
bound
data16
xor
and
test
fdiv
inc
neg
aam
mul
in
ja
sub
mov
fwait
mov
mov
pop
test
hlt
mov
adc
imul
pop
or
jbe
or
lods
das
jg
push
ret
add
mov
loop
cwde
in
sub
test
outs
mov
jp
adc
inc
iret
dec
fmul
dec
lods
out
cmp
retf
(bad)
ins
add
sub
mov
dec
mov
data16
add
mov
lods
movs
js
jg
xchg
(bad)
ins
shl
loop
push
fwait
mov
ret
mov
jns
adc
ss
xor
inc
sub
inc
fadd
cli
(bad)
or
cmps
les
ftst
cli
or
loope
popa
aad
ins
fisub
jns
adc
jmp
fst
shr
mov
std
xchg
and
xchg
movs
dec
ss
cmp
push
cmc
fwait
or
mov
(bad)
shl
dec
lahf
ins
xchg
cmc
(bad)
pop
das
lea
loop
push
cld
xor
movs
xchg
mov
ret
jno
pop
pop
pop
xchg
push
push
pop
push
fdiv
fld
not
aas
out
imul
popa
mov
pop
jecxz
jb
icebp
pushf
cmp
iret
xor
enter
mov
or
ret
call
add
outs
rcl
mov
ins
xchg
out
sub
ret
cmp
lahf
fbld
pop
outs
retf
adc
in
ret
mov
sub
add
push
loope
and
push
cmp
lea
sub
fcmovbe
call
fnstenv
mov
stos
xchg
lahf
mov
push
mov
pop
lds
imul
cli
cmp
push
mov
push
pop
cmc
scas
push
mov
jle
stc
ror
(bad)
fld
cmps
sub
stos
clc
call
fistp
outs
xchg
and
inc
aas
sub
inc
sbb
adc
inc
(bad)
jno
push
icebp
out
in
push
pop
ds
sbb
adc
jmp
(bad)
idiv
cmp
das
push
jne
aas
sbb
int
or
jge
push
jns
call
idiv
or
movs
cs
sbb
shr
sub
js
int3
push
rol
(bad)
fwait
ret
cmp
mov
jge
pop
leave
mov
add
inc
das
aad
inc
push
mov
pop
mov
pop
push
leave
xlat
jmp
mov
xlat
lahf
mov
test
push
lods
call
mov
cmp
mov
nop
xchg
and
xchg
jl
out
(bad)
xor
aaa
out
ins
(bad)
cmp
(bad)
xchg
ds
pop
and
gs
std
clc
pop
icebp
xchg
inc
sahf
jno
repnz
push
sti
sbb
retf
mov
mov
mov
sbb
inc
add
push
push
in
fnstsw
lods
ds
push
mov
mov
idiv
sbb
push
push
leave
in
cmp
pusha
popa
in
lds
out
icebp
and
push
inc
xchg
das
cmps
lods
das
jns
out
ret
fldcw
dec
jae
add
cmc
mov
lods
out
sti
or
hlt
sar
stc
pushf
jle
jmp
imul
fbld
int
jb
cld
fs
xor
cmp
mov
sahf
repnz
inc
ror
xchg
mov
mov
cmps
(bad)
inc
test
mov
fwait
std
cmc
pushf
cdq
mov
pop
xor
pop
cmps
dec
nop
push
cmp
dec
ficom
mov
mov
push
mov
xlat
adc
and
(bad)
lods
outs
or
or
ficomp
fxch
je
mov
mov
pop
dec
outs
fs
nop
repnz
pusha
ins
xor
sub
sub
outs
daa
(bad)
mov
mov
push
or
xchg
test
jmp
pusha
call
adc
jl
hlt
cli
sbb
and
inc
ret
leave
cmps
xor
scas
xchg
inc
xor
movs
jae
push
shl
dec
push
cmp
inc
pop
lds
push
xor
mov
aad
imul
cmp
push
(bad)
neg
out
push
out
push
test
xor
in
xor
push
push
lea
cmps
jno
call
push
out
ss
(bad)
or
xor
iret
ficom
test
pop
xchg
imul
cli
dec
and
inc
stos
sbb
cmc
out
dec
and
outs
inc
push
int
cmp
in
out
push
jmp
and
movs
stc
or
or
cmp
sbb
inc
(bad)
repnz
mov
pushf
pop
retf
cwde
(bad)
pop
je
pop
sub
xor
call
dec
sbb
nop
(bad)
test
cld
cmp
add
adc
push
jmp
mov
cmps
(bad)
imul
fisub
out
or
jle
add
xchg
shl
aas
ins
mov
and
sub
out
je
repnz
cmp
mov
es
movs
add
das
jl
ret
sar
jb
xchg
call
sub
jnp
or
and
jmp
pop
daa
and
imul
popa
aad
sub
add
retf
and
mov
scas
fmul
sbb
ret
mov
xchg
xor
sbb
outs
data16
iret
pop
aam
or
jbe
sar
inc
imul
cdq
jb
je
jg
cdq
xor
(bad)
cs
add
ss
ja
and
inc
inc
daa
jo
mov
mov
add
xchg
inc
push
shl
sti
jns
lahf
cmp
mov
cmp
mov
jne
sbb
push
cmp
sti
mov
dec
dec
adc
jnp
sub
jne
mov
push
out
cmps
and
jp
mov
push
rol
dec
shl
movs
lock
stos
adc
cmc
std
arpl
scas
add
sub
cmp
and
(bad)
dec
cmovs
and
inc
push
shr
(bad)
cmc
mov
mov
popf
push
sub
xchg
mov
cmp
jne
or
retf
sbb
pushf
fs
mov
add
shl
mov
ins
cmps
cli
scas
dec
jae
sahf
dec
popa
mov
inc
fisttp
icebp
pop
int
fadd
jg
xchg
cmp
aas
jo
inc
cmps
mov
int3
inc
push
cmc
test
xchg
stos
ins
movs
rcl
mov
aaa
pop
shr
pop
rcr
add
(bad)
jmp
mov
add
out
jnp
(bad)
pop
rcl
mov
add
pushf
fimul
push
std
sbb
add
dec
js
lahf
ret
pop
addr16
clc
aas
xor
lods
aam
inc
test
cdq
cmp
clc
mul
dec
or
ret
les
or
repnz
dec
push
hlt
scas
pop
dec
jg
cmps
pop
jecxz
mov
mov
popa
push
add
xor
add
(bad)
dec
ins
pop
scas
pop
push
xchg
test
mov
(bad)
inc
imul
lock
outs
mov
jle
repz
stos
ss
sahf
dec
ss
mov
cmp
xor
loop
es
jl
inc
xor
test
sub
sbb
dec
push
in
add
mov
jmp
xlat
and
leave
sub
retf
push
mov
(bad)
dec
sub
inc
cmovle
jbe
or
ins
push
pushf
mov
shl
fcmovbe
xchg
xor
adc
xchg
out
xchg
and
adc
pop
inc
or
aas
test
rol
xor
in
push
not
mov
mov
or
ins
sub
xchg
fist
clc
pop
and
mov
call
add
div
(bad)
(bad)
jo
dec
add
call
fist
mov
jb
fwait
jp
cmc
(bad)
sbb
repz
and
div
mov
push
ds
sbb
xor
fwait
or
add
sub
(bad)
mov
adc
xchg
cld
(bad)
jg
icebp
inc
cmp
int
nop
clc
fsubr
mov
add
push
mov
xchg
aaa
dec
js
add
dec
pushf
or
mov
jp
mov
pop
stos
mov
fsubp
call
xor
test
push
repz
repnz
pushf
xor
mov
pop
dec
xor
lods
cli
jg
sbb
sbb
mov
sahf
imul
scas
sbb
pop
and
dec
ja
fisub
(bad)
jg
push
test
inc
and
jge
clc
popa
xchg
sub
add
dec
call
push
fld
dec
movs
xchg
pop
adc
les
jns
mov
xchg
push
or
stos
in
or
or
sbb
or
cmp
movs
mov
xor
aas
sbb
outs
and
sahf
(bad)
push
jne
add
mov
std
sub
sti
cwde
mov
xlat
pusha
scas
and
pop
dec
and
(bad)
ins
lods
das
jmp
ins
stos
jno
(bad)
clc
mov
cmp
lods
fprem
or
sub
sub
xchg
cld
jne
imul
push
pop
mov
retf
repnz
inc
adc
mov
movs
push
stos
fdivr
inc
ins
ret
lds
(bad)
and
lahf
push
push
outs
sub
push
repnz
pop
push
pusha
int3
or
div
inc
inc
sbb
xor
leave
xchg
test
shl
mov
jmp
xor
add
iret
push
sbb
or
mov
fdiv
mov
adc
or
fs
add
cmp
jbe
int
cmp
mov
push
cmp
or
outs
xchg
xchg
sbb
out
lea
pop
sbb
pop
aad
aas
das
jnp
inc
pop
(bad)
jmp
xor
and
push
(bad)
fnop
out
loopne
repnz
mov
push
es
inc
in
add
arpl
pop
pusha
rcr
imul
jg
ds
xor
std
(bad)
js
cld
push
popa
xchg
dec
xchg
shl
add
mov
call
sahf
cmc
mov
clc
sbb
icebp
movs
dec
or
sub
add
rcr
jb
aam
das
shr
add
sub
mov
mul
inc
mov
cmps
(bad)
cmp
bound
xlat
rol
adc
dec
mov
dec
ss
cmps
mov
jge
ror
loope
popa
aas
push
out
mov
imul
mov
das
pop
mov
dec
dec
pushf
fs
hlt
mov
sub
cs
xchg
xlat
outs
sub
inc
jnp
or
push
test
or
jbe
or
es
repz
xadd
aas
fld
push
je
adc
or
rcr
xchg
std
out
xchg
lds
xchg
pop
inc
adc
xor
add
pushf
ret
xor
fcmovnu
adc
pop
mov
enter
cs
sub
cli
push
xchg
inc
jl
test
retf
cmp
cld
imul
mov
xor
dec
bound
loope
mov
cmp
mov
test
das
inc
dec
cmps
add
je
retf
sub
dec
and
xor
mov
mov
ror
mov
dec
fwait
(bad)
dec
sub
mov
jp
in
cwde
ins
or
stos
pop
mov
adc
sbb
sbb
jne
in
sub
fiadd
fld
xor
dec
fimul
add
enter
mov
(bad)
popf
add
pop
sub
add
std
sub
add
xchg
pop
add
shl
jmp
repz
shl
push
mov
mov
fisubr
mov
dec
imul
mov
shl
cmp
rcl
test
test
add
(bad)
jl
int3
fmul
mov
add
mov
(bad)
mul
sbb
sti
imul
retf
sbb
shl
imul
or
fwait
arpl
in
out
mov
or
sti
rcr
mov
mov
iret
hlt
or
sub
out
popa
xor
mov
sub
icebp
stos
or
inc
push
sti
les
add
add
out
cmp
lods
out
inc
push
dec
pop
inc
ja
outs
leave
adc
adc
xchg
sub
loope
out
inc
fbstp
lods
pop
enter
mov
shl
stc
or
jo
gs
loop
push
call
das
pushf
int
dec
dec
gs
in
mov
pop
pop
ss
in
push
std
jmp
mov
pop
cmps
outs
jl
or
fist
ret
bswap
jmp
adc
das
sahf
or
jae
mov
stos
bnd
sbb
scas
scas
leave
or
jle
or
pop
pop
fwait
sub
sbb
add
push
jge
jns
inc
xchg
or
dec
push
sub
sbb
outs
or
inc
inc
pop
xlat
and
lds
loope
cmp
fstp
imul
push
fcmovbe
add
pop
xchg
fdivrp
cdq
je
push
call
dec
imul
mov
movs
cmps
pop
shl
es
and
push
shl
mov
out
loop
bound
sbb
jb
sbb
aad
test
mov
fwait
inc
pop
ss
sub
call
mov
or
or
loope
(bad)
mov
push
mov
add
sub
fucomp
xor
pop
mov
xor
shl
xlat
jl
retf
fcom
and
inc
push
or
mov
jmp
mov
pop
into
das
or
(bad)
cmp
cmps
inc
sbb
cs
scas
sub
mov
imul
mov
fnstenv
xor
cmc
jo
ins
popf
lahf
add
and
dec
shl
call
lods
add
adc
ins
add
ins
mov
xor
aaa
in
cmp
xchg
and
or
loopne
add
es
sahf
push
fbld
movs
jle
cmp
xchg
stos
or
sbb
std
sub
scas
rcr
imul
cmps
rcr
call
xchg
cld
sti
xchg
jns
push
mov
ja
sub
push
clc
sbb
jno
push
sbb
ins
mov
popf
jmp
mov
clc
or
das
jmp
mov
jne
ss
inc
outs
retf
pop
cmc
mov
test
in
test
xchg
mov
pop
sub
ss
icebp
or
jge
inc
inc
jae
je
inc
push
popa
and
dec
inc
into
xor
retf
pop
add
addr16
jge
sub
xchg
sub
jmp
popf
xchg
dec
int3
or
mov
sbb
and
cmp
cmp
in
clc
xor
test
pushf
or
mov
push
dec
sub
mov
std
add
inc
push
imul
retf
lock
mov
sub
inc
ficomp
(bad)
js
mov
arpl
mov
push
xor
fstp
and
jecxz
call
mul
rcr
push
(bad)
scas
inc
push
xchg
pop
pop
jnp
sahf
inc
repnz
shl
sub
xor
shl
ins
xchg
or
mov
inc
rcr
adc
mov
int3
jo
mov
cmp
call
mov
dec
ins
das
pop
lds
sub
sub
lds
push
lock
cmp
fbstp
lahf
inc
xchg
pop
and
mov
outs
imul
xchg
jbe
and
cmp
mov
sbb
add
(bad)
sub
mov
imul
test
mov
icebp
lea
mov
pop
je
adc
jl
jmp
cmps
mov
int
mov
dec
or
mov
xchg
mov
sar
fs
out
dec
xor
rcl
pop
in
inc
mov
pop
jnp
call
xor
push
sbb
fnstcw
shl
sub
jae
mov
js
icebp
pop
neg
inc
daa
les
in
mov
in
fiadd
inc
mov
mov
stos
data16
scas
outs
sti
ficomp
sub
pop
mov
inc
cli
mov
test
repz
sti
imul
adc
pop
sbb
and
dec
pop
cmps
pop
icebp
or
push
inc
sub
or
ror
std
ins
cmp
jl
xchg
jne
and
pop
mov
popf
sub
icebp
cmps
inc
out
or
jge
jae
out
aad
add
adc
sub
sub
or
inc
ret
rol
sbb
and
adc
mov
ds
retf
hlt
(bad)
pop
sub
sub
xchg
scas
dec
in
outs
stos
cmp
mov
imul
mov
mov
gs
lahf
push
xor
dec
retf
jne
jmp
pop
mov
sti
cmp
std
pop
add
pop
addr16
and
loopne
das
mov
cli
std
push
xor
aas
jbe
push
add
dec
sbb
test
fucom
xchg
stos
lds
icebp
shr
jecxz
lahf
repnz
sub
mov
sbb
cwde
push
gs
sbb
sub
daa
ficom
mov
popf
mov
(bad)
cmp
pop
inc
verr
mov
retf
outs
cld
in
and
(bad)
dec
vmovlpd
mov
dec
jnp
dec
jmp
xor
(bad)
je
jg
pop
jbe
jmp
xor
ins
jns
loopne
push
ja
mov
jmp
rcr
sbb
adc
cmp
xor
idiv
loope
jno
xchg
push
leave
jge
push
jg
inc
aas
cli
out
ins
pop
push
jl
cwde
shl
push
das
push
cmp
mov
outs
mov
or
cmp
(bad)
das
xor
sbb
call
push
ss
adc
loope
xor
sub
shl
inc
jl
pusha
cmps
call
arpl
adc
js
outs
shl
xchg
jle
imul
and
xor
push
mov
dec
dec
jbe
(bad)
mov
imul
dec
jmp
mul
xchg
dec
cld
push
les
sbb
daa
repz
ror
fbstp
sti
cmp
or
cmps
or
stos
sub
mov
pop
mov
add
aad
mov
sbb
cmp
aas
adc
std
cwde
and
pop
xor
mov
ins
mov
out
icebp
xor
sub
or
sti
inc
fisub
sub
aas
sbb
dec
fsubr
jg
push
ret
lock
inc
ds
call
sbb
xchg
das
pop
mov
and
stos
scas
add
mov
cmp
cwde
div
addr16
cmps
je
jns
or
shl
or
dec
test
inc
sar
inc
dec
xor
stc
clc
cld
adc
inc
test
sub
lods
xchg
xor
les
xor
jmp
lods
pop
pop
arpl
cmps
pop
loopne
retf
adc
loop
data16
in
mov
(bad)
jmp
push
inc
pushf
adc
jmp
addr16
dec
ret
inc
mov
sub
and
repz
mov
sbb
leave
sub
sbb
daa
sub
xor
loope
add
cmp
sbb
lock
aad
data16
lods
jecxz
mul
iret
mov
test
pusha
cmps
mov
movs
enter
jle
or
adc
mov
mov
mov
pop
jg
retf
mov
jmp
or
cmps
leave
cmp
popa
stc
or
div
rcl
pop
inc
dec
cmc
js
lock
pop
fsubr
mov
pop
popf
cmp
push
retf
push
and
pop
xchg
jp
cmp
ins
dec
mov
div
inc
push
and
inc
daa
or
repnz
add
sub
add
xchg
(bad)
leave
pop
cs
sbb
ffreep
(bad)
addr16
ss
test
in
loop
mov
mov
dec
pushf
fimul
push
jb
retf
cs
bound
in
cwde
stos
push
cmp
jle
cmps
jp
adc
xchg
(bad)
push
sbb
xor
and
pop
adc
xchg
inc
xchg
pop
leave
lea
std
call
or
xchg
lds
clc
neg
xor
xor
ror
cmc
jno
xchg
sar
out
cmp
aad
lods
push
and
sub
push
mov
ret
adc
mov
or
cmp
pop
add
dec
mul
outs
ds
inc
mov
mov
(bad)
lods
sbb
call
inc
bound
jo
int3
xor
xlat
dec
mov
adc
int3
enter
sbb
jne
mov
inc
jp
repnz
je
loop
xor
rcr
dec
lods
aad
js
(bad)
ror
mov
add
popa
dec
push
pop
in
xor
jnp
add
in
pop
push
enter
xor
(bad)
das
aaa
mov
adc
jecxz
sbb
xchg
and
sub
mov
push
mov
mov
cmps
gs
das
cmp
push
je
popf
cmc
pop
or
mov
mov
add
repnz
xlat
jae
cmc
popa
ret
fnstenv
sar
ret
inc
dec
and
mov
out
xchg
mov
cmc
pop
add
sub
fidiv
adc
ret
imul
sub
pop
stos
mov
mov
or
daa
es
add
mov
call
push
dec
sahf
jecxz
sar
arpl
dec
xchg
in
and
cmp
cwde
clc
and
push
cmp
pop
add
jns
xchg
pinsrw
mov
sbb
fcom
jae
in
cli
and
movs
and
push
lock
pop
mov
mov
ins
dec
and
adc
jl
data16
mov
stc
ss
and
jmp
stc
pop
aad
mov
cmp
mov
inc
push
push
push
xchg
inc
mov
adc
das
call
adc
daa
sbb
mov
out
inc
dec
sbb
pop
fistp
jnp
loope
imul
repnz
mov
pop
xor
mov
shl
xchg
ins
push
retf
pop
mov
mov
cmp
mov
push
dec
retf
xor
or
lahf
sbb
loope
pop
inc
out
jnp
jmp
mov
cmp
sti
test
(bad)
ss
jae
movs
dec
(bad)
retf
int
loope
jecxz
pop
pop
or
adc
in
push
pop
jbe
leave
addr16
icebp
lods
jg
inc
xchg
xor
loop
inc
mov
inc
mov
mov
aas
repz
pop
mov
je
popa
fcom
sub
fs
sbb
sbb
jbe
inc
imul
(bad)
outs
dec
ins
inc
jo
movs
into
out
movs
retf
mov
loopne
inc
repz
lea
into
bound
rol
ret
ss
cmp
and
push
aas
movs
cdq
test
xchg
push
pusha
jp
inc
sbb
jecxz
cmp
sbb
shl
dec
or
pop
sahf
sbb
leave
das
xchg
push
sub
daa
add
inc
mov
test
je
sti
imul
or
fnsave
xchg
inc
mov
or
fstp
(bad)
fisttp
jg
lods
cmc
xchg
mov
call
mov
iret
xchg
push
jbe
inc
retf
dec
adc
and
js
jno
jl
mov
gs
sbb
std
fild
ret
xchg
imul
or
lods
lahf
int3
adc
push
push
arpl
int3
mov
int
mov
pop
repnz
ror
outs
nop
stos
xlat
test
mov
mov
retf
or
push
ffree
arpl
ret
call
jle
push
xchg
pop
call
adc
inc
out
int3
enter
dec
stos
xchg
sbb
jnp
add
mov
mov
adc
(bad)
ins
and
sbb
jp
cdq
int
push
mov
dec
mov
dec
push
lods
add
push
neg
sub
pop
bound
mov
into
aaa
imul
xor
pushf
leave
clc
enter
cmp
pop
test
aam
call
aam
jns
repnz
pop
jge
cld
outs
shr
push
lock
mov
add
or
push
cmps
hlt
lea
push
outs
icebp
(bad)
lds
loopne
push
es
or
sub
sbb
aaa
push
ss
out
mov
push
inc
inc
and
gs
dec
test
mov
cmp
xchg
sbb
and
mov
test
jg
ret
shl
inc
cli
sbb
adc
xlat
inc
cmp
adc
(bad)
jmp
in
mov
bound
in
push
add
add
stos
cs
or
ficomp
sti
gs
dec
sahf
mov
cli
xchg
sub
lock
outs
cmps
mov
movs
cs
sbb
call
fdivr
cmp
adc
jns
jbe
xchg
pop
ss
xor
iret
jb
rcr
push
inc
out
(bad)
fisub
push
jae
jecxz
test
mov
rcl
mov
add
inc
pop
inc
retf
xchg
imul
call
fldcw
sbb
jnp
rcr
mov
out
sub
sahf
aad
fidivr
cmp
sub
pusha
clc
repz
or
iret
pop
inc
xor
push
dec
ret
sub
iret
(bad)
cmc
add
ins
inc
out
adc
lods
enter
sbb
jbe
jnp
cmc
repz
dec
xchg
add
mov
test
cld
fiadd
icebp
adc
fdiv
(bad)
in
mov
hlt
dec
xchg
iret
push
or
jbe
sbb
inc
push
fs
mov
or
cli
hlt
(bad)
movs
mov
cmp
fstp
inc
jns
mov
ja
sub
popa
addr16
or
mov
test
stos
cmp
jecxz
(bad)
repnz
add
stos
sbb
or
xchg
pusha
(bad)
push
daa
or
dec
mov
sub
sbb
add
movs
mov
in
out
sbb
dec
xor
stos
cmp
call
mov
push
loopne
push
loopne
outs
dec
das
or
test
inc
xlat
mov
dec
lods
pop
pusha
dec
in
sbb
cmp
stos
out
pop
push
inc
or
in
pop
(bad)
out
mov
mov
jmp
sbb
enter
adc
(bad)
sub
inc
pop
rol
stos
in
jg
add
jnp
repnz
jmp
pop
xor
dec
inc
sbb
dec
sti
outs
fisub
jmp
sub
inc
in
sub
inc
jne
push
pop
aam
enter
ds
call
sub
(bad)
movs
call
xchg
add
arpl
cmp
stc
imul
nop
retf
scas
sbb
or
sub
pop
xchg
cmc
cdq
cmp
and
test
add
mov
push
sti
or
cmp
mov
and
ret
repnz
repz
mov
in
fdivr
mov
pop
pop
(bad)
js
xchg
sub
sbb
mov
ror
out
sbb
fld
shl
push
shl
jbe
pop
mov
mov
popf
test
mov
call
pop
sub
xchg
jnp
mov
xchg
mov
fwait
rol
in
jmp
xor
xor
mov
je
loope
jns
rcr
stos
ror
xchg
movs
sbb
outs
in
retf
adc
(bad)
imul
xchg
mov
test
cmp
pop
ror
test
jmp
jbe
(bad)
rcl
lahf
cmc
cmp
push
sbb
mov
imul
jecxz
add
xor
mov
jecxz
add
jle
mov
inc
ret
xchg
stos
xchg
jnp
dec
rcl
outs
pop
mov
cs
(bad)
xor
mov
dec
and
xor
xchg
imul
fisub
call
loop
test
into
push
add
pop
retf
add
mov
out
out
push
mov
xlat
lea
fiadd
cld
cmp
jl
jp
aaa
and
pop
sbb
out
inc
sti
test
add
dec
rol
cli
or
clc
xchg
adc
mov
scas
jmp
mov
mov
mov
sub
add
adc
jmp
add
xchg
and
jge
test
(bad)
js
mov
jl
mov
ret
pop
arpl
push
sub
mov
ins
fisub
repnz
sahf
lock
test
or
pop
retf
dec
add
cs
loop
mov
pop
daa
fisubr
or
push
xor
mov
stos
int3
data16
pop
sti
jle
fcomp
push
inc
inc
and
dec
fimul
imul
cmp
and
std
inc
jnp
sub
fcomp
out
jne
fmul
in
(bad)
lods
or
jae
xor
cmps
xor
leave
mov
pop
push
push
ret
bound
jns
repnz
or
out
and
or
loopne
in
add
xchg
gs
in
jg
pop
adc
iret
sar
inc
add
fdivr
repnz
ja
xchg
push
adc
push
paddsw
cmp
xor
adc
out
lds
and
fisttp
jle
jecxz
xchg
arpl
push
fdiv
(bad)
mov
inc
push
pop
jg
sar
add
outs
leave
sti
pop
out
mov
psubw
mov
sub
test
cmps
test
pop
pop
or
xor
(bad)
iret
xchg
pop
in
jns
iret
movs
out
xor
push
xchg
je
jl
sti
or
push
in
into
xchg
test
daa
int3
inc
mov
out
out
div
mov
and
xchg
outs
sbb
stos
lods
push
(bad)
lahf
sbb
pushf
dec
jno
repz
pop
fs
jo
cli
cld
xchg
push
pop
push
(bad)
rcl
cmp
stc
outs
pop
xor
in
xchg
sub
push
mov
invd
ret
mov
aam
inc
or
push
add
push
outs
repnz
ror
or
inc
xchg
jo
dec
inc
inc
jle
das
out
pop
mov
add
push
cmp
fwait
cs
push
rcr
jecxz
ds
popa
jl
call
test
repnz
lds
std
scas
xchg
push
sub
dec
js
pop
js
inc
cmc
retf
jmp
ds
popa
fsub
cwde
inc
(bad)
les
push
add
pusha
cdq
or
or
int
retf
jmp
aam
dec
adc
fbstp
mov
in
xlat
pop
js
jmp
test
dec
lods
sbb
mov
push
and
mov
inc
mov
mov
shl
scas
aas
leave
xchg
sub
add
cmc
in
or
enter
call
mov
sbb
add
mov
and
cld
ret
push
lahf
das
jno
mov
shr
xchg
pop
cmp
out
xchg
xchg
mov
lods
mov
repnz
cmp
add
pop
dec
xor
stc
cdq
add
test
adc
(bad)
sbb
or
sub
pop
les
(bad)
dec
aas
fs
test
or
mov
adc
test
loop
js
lods
mov
jns
and
pop
leave
sbb
or
jmp
loopne
cmps
mov
dec
adc
cmp
or
retf
push
out
popa
pop
adc
push
ja
adc
adc
mov
mov
mov
in
add
in
rcr
movs
inc
nop
push
pop
sub
inc
ins
movs
push
jg
or
mov
cli
sbb
loopne
nop
xchg
mov
mov
es
adc
or
lahf
adc
or
aam
xchg
mov
mov
loope
cmp
add
xor
or
pop
ror
lods
and
or
sbb
out
pop
jo
cmp
mov
xchg
add
dec
icebp
ins
cmp
sbb
add
sahf
xchg
cmp
xchg
mov
cmp
dec
je
lods
fst
mov
fimul
or
in
pop
inc
jno
std
repz
pop
in
sbb
or
ret
xchg
mov
call
pop
xor
cs
es
or
sub
cld
mov
xchg
mov
pop
mov
test
(bad)
sti
jl
add
and
sbb
xor
sub
addr16
ins
das
leave
push
xchg
sbb
ss
push
push
addr16
into
adc
es
loope
inc
loopne
pop
in
jo
xor
div
xor
test
sbb
ins
inc
fimul
xchg
push
repz
xchg
inc
xchg
arpl
or
jbe
adc
out
sbb
inc
fcomp
or
cmp
dec
idiv
int
lahf
xor
imul
popa
dec
fisub
jl
cmp
xchg
push
or
and
push
sar
stos
sub
pop
js
test
add
inc
jge
out
pop
repz
cmp
add
cld
cmp
jb
cmp
call
cwde
ret
mov
lahf
xchg
xor
inc
movs
mov
cli
add
xchg
cmp
pop
loopne
add
int
or
or
push
or
cmc
jl
shl
mov
ret
jne
int
and
test
std
int3
mov
sbb
mov
and
fidivr
fld
push
outs
es
aaa
mov
aaa
cmps
adc
jge
sbb
out
jne
es
(bad)
mov
std
imul
inc
or
(bad)
push
cs
(bad)
loop
test
in
movsx
cmp
xor
mov
adc
mov
mov
outs
and
cld
jo
cmc
outs
nop
inc
sar
mov
rcl
ja
rol
loope
aas
outs
mov
stc
ja
push
sti
(bad)
fnstcw
sub
adc
mov
xlat
fsubr
sbb
mov
das
rcl
inc
pop
es
xor
call
les
mov
jae
out
pop
pushw
retf
ud1
mov
ret
jns
adc
xor
xor
push
and
add
cdq
jmp
sub
popf
mov
inc
stos
shl
pusha
call
jge
aas
cs
pop
or
mov
sbb
pop
adc
out
lahf
adc
jecxz
mov
inc
dec
ret
cld
adc
cmp
movs
gs
addr16
lahf
cmp
inc
mov
outs
iret
pop
add
mov
inc
ror
loop
pop
test
out
cmps
push
push
mov
pop
mov
sar
ds
fldenv
or
or
mov
add
xchg
mov
cdq
adc
add
mov
fs
push
aaa
xlat
fwait
sub
cmp
gs
sub
sbb
loopne
test
dec
mov
and
push
or
mov
cmp
sbb
push
jae
cmp
nop
out
stos
mov
aad
test
or
mov
sub
(bad)
sub
mov
mov
(bad)
or
xchg
outs
sub
daa
sbb
and
loope
inc
mov
mov
dec
jnp
cs
scas
mov
js
adc
dec
aaa
stos
lods
push
daa
(bad)
js
mov
popa
fisttp
push
dec
add
mov
cmp
add
mov
cmp
adc
mov
jl
cmp
sub
fisub
or
pop
and
mov
mov
pop
ret
(bad)
sub
jle
xor
mov
sar
sti
call
pop
mov
xor
push
aaa
dec
fs
mov
into
test
mov
pop
int
into
xor
ret
push
fsubr
cmps
or
sbb
mov
add
jmp
mov
sub
push
rcr
icebp
std
xor
mov
neg
pop
dec
(bad)
mov
mov
mov
xor
sub
cmp
clc
lea
dec
or
neg
daa
mov
imul
mov
mov
std
dec
stc
jbe
sbb
jmp
scas
jbe
leave
lock
mov
or
mov
sub
std
int
jecxz
and
sub
adc
(bad)
adc
push
mov
mov
pushf
dec
mov
pop
into
cmp
mov
hlt
jl
ja
sti
lods
jle
xor
pop
inc
fsub
leave
or
pop
retf
pushw
xor
and
sub
push
cmp
inc
int
cmps
bswap
fwait
add
jo
fwait
and
adc
and
jnp
sbb
dec
aaa
icebp
xchg
sbb
and
mov
sub
adc
into
or
mov
or
fsub
pushf
and
mov
ja
dec
stc
mov
aam
hlt
outs
cmp
mov
mov
mov
mov
out
mov
loop
xor
in
movs
sub
push
push
das
shl
mov
pushf
aad
(bad)
out
jo
and
jg
jns
and
fcmovnu
pop
jl
iret
sub
sbb
sbb
dec
sub
jp
ja
clc
bound
retf
sti
jnp
adc
push
in
stos
add
nop
sahf
mov
shl
arpl
push
popf
sub
lods
mov
push
popa
push
lea
mov
fs
lods
sbb
push
cs
push
cmp
pop
pcmpeqd
mov
neg
add
and
(bad)
xchg
sbb
mov
es
xchg
pop
xchg
mov
or
jnp
call
cld
mov
mov
jno
pop
push
sbb
int3
sbb
shr
and
jne
icebp
jmp
mov
inc
mov
cmp
mov
pop
mov
and
test
adc
lahf
push
sbb
loope
and
shl
push
in
enter
adc
(bad)
fcomip
addr16
ret
popf
inc
leave
sub
mov
jge
or
jnp
mov
cmps
sub
dec
fist
add
outs
add
dec
movd
xchg
pop
(bad)
test
shr
jbe
je
jge
into
push
inc
pop
cmp
repnz
or
jmp
dec
inc
(bad)
faddp
lahf
shufps
int3
cmp
pop
(bad)
jmp
lds
xchg
jb
xor
sub
and
xchg
jns
pusha
cld
popa
xor
ins
lahf
or
push
fdiv
jns
call
addr16
jp
cli
push
mov
scas
js
mov
jmp
ja
or
movs
scas
mov
aam
out
push
add
jmp
jp
sub
fwait
xchg
fs
dec
mov
sar
out
mov
cmc
mov
sbb
push
cdq
fsub
test
das
sub
jmp
aas
addr16
and
sar
lods
aas
fsubrp
mov
int
ja
sub
sbb
inc
imul
popa
jno
mov
push
jbe
pop
mov
adc
addps
sar
cmp
idiv
fsubr
add
out
jp
imul
(bad)
lahf
cmp
lea
inc
jb
dec
xor
jecxz
xchg
(bad)
std
dec
arpl
mov
out
mov
not
imul
out
cld
mov
pop
cmp
mov
and
fcmovu
ins
mov
cs
inc
xor
in
fld
inc
jb
jge
js
ja
call
dec
in
js
jl
mov
lock
mov
pushf
in
adc
jnp
stos
pushf
movs
xor
sub
imul
aam
pop
fistp
or
sti
xchg
sub
fwait
jae
fnstcw
mov
je
adc
(bad)
cmp
jne
cmp
ins
pop
cmps
es
add
mov
mov
sbb
movs
in
ror
jmp
stos
scas
sub
adc
cmp
ret
(bad)
push
fbld
sahf
mov
mov
mov
pop
pop
add
scas
inc
in
cld
std
mov
and
cmp
cld
jns
and
pusha
push
cmps
lahf
inc
cmp
push
mov
mov
and
cmp
pop
xchg
mov
cmps
pop
dec
call
xchg
sbb
add
scas
cmps
icebp
sub
retf
call
xchg
rcr
jecxz
pop
inc
les
(bad)
push
inc
add
mov
out
repz
jb
pop
es
jmp
add
loop
mov
dec
inc
loop
pop
cld
je
(bad)
mov
adc
mov
mov
or
data16
add
das
in
lods
push
dec
cwde
stos
das
or
mov
jmp
or
mov
sar
push
xchg
ror
cmp
ins
cmp
loop
jecxz
and
mov
popa
mov
jmp
add
pop
sub
push
sbb
mov
ins
xchg
sbb
ss
call
div
sbb
imul
jmp
or
xor
dec
lods
dec
inc
xchg
jno
nop
retf
out
fadd
gs
pop
fadd
cmp
add
dec
retf
mov
rcr
mov
mov
dec
cli
sub
or
sub
retf
in
fst
cmc
scas
or
shr
pop
imul
lods
les
xor
sbb
sbb
outs
in
ins
jae
adc
fs
movs
cld
rol
mov
je
sub
ror
lds
pop
jg
or
cmp
test
sbb
fwait
add
std
pop
outs
aad
pop
push
frstor
outs
sub
xor
(bad)
fild
int3
add
icebp
nop
(bad)
stc
fst
dec
scas
(bad)
mov
shl
jno
pop
cdq
sahf
cmp
rcl
jnp
cmps
arpl
dec
xchg
fst
aaa
or
fdivr
jo
or
pop
fistp
inc
or
dec
push
mov
mov
retf
ds
pop
mov
pop
mov
mov
scas
dec
aaa
and
movs
add
(bad)
mov
repnz
dec
jo
and
xor
out
push
and
xchg
sub
sub
and
stc
xor
(bad)
stc
mov
mov
add
mov
arpl
jmp
sub
dec
aaa
nop
stos
stc
jge
movs
xchg
and
mov
(bad)
cs
jg
push
adc
mov
or
cdq
push
cmc
cmps
ins
cs
ret
ss
sbb
shl
popa
imul
daa
daa
shr
mov
xchg
xor
enter
mov
jbe
fldcw
(bad)
jle
icebp
jns
jno
mov
xchg
mov
fistp
inc
and
shl
in
push
mov
lods
cld
xchg
in
inc
sbb
jns
les
mov
cwde
mov
gs
test
xor
push
adc
fstp
adc
hlt
adc
rcr
xchg
nop
xor
xchg
pop
enter
mov
jo
cmp
jmp
les
jnp
das
adc
mov
inc
mov
ss
cmp
mov
inc
mov
or
std
std
rol
(bad)
dec
jp
mov
imul
test
cwde
sub
xor
xchg
fsubr
out
ss
test
xchg
es
sti
mov
ja
dec
js
mov
or
inc
mov
xor
clc
jno
pop
xor
retf
sbb
lods
or
inc
jo
mov
adc
mov
cmp
pop
pop
push
and
fadd
ds
fldcw
jmp
push
(bad)
sbb
aad
mov
mov
sub
sahf
mov
mov
dec
aaa
mov
jbe
xlat
aaa
push
mov
xor
xchg
out
jle
in
daa
outs
call
mov
add
push
push
mov
in
cmp
cmp
push
sahf
daa
retf
inc
inc
dec
add
test
add
mov
ins
aaa
inc
inc
add
add
dec
jb
fs
and
push
jnp
cmps
stos
(bad)
iret
sub
js
fild
not
mov
movs
ficom
mov
pop
rcr
dec
and
xor
loopne
sti
sub
cmp
push
dec
cmp
pop
int
es
ds
inc
call
sbb
sub
adc
stc
jo
in
clts
shl
push
push
cmp
sub
xchg
mov
inc
stos
xchg
test
je
mov
mov
sahf
mov
mov
xchg
xchg
cmp
fcmovu
push
je
test
mov
mov
shr
jmp
iret
adc
jne
jecxz
fsubp
pop
sub
daa
push
fwait
call
mov
xchg
sub
clc
dec
adc
jne
mov
jb
pop
xor
xchg
cs
push
cmp
pop
pop
data16
mov
sbb
add
pop
adc
add
jmp
fstp
retf
mov
repz
pop
lea
mov
leave
(bad)
movs
inc
loopne
cmp
out
xchg
scas
in
je
add
enter
pop
bound
js
xchg
cld
and
cmp
call
dec
int3
mov
cdq
and
in
jne
xchg
pop
call
fs
loope
sub
mov
sti
pop
cmc
or
dec
xchg
iret
xor
mov
mov
call
sbb
mov
ds
imul
pop
out
pop
xchg
adc
adc
setnp
cmp
fnsave
push
mov
int3
dec
push
mov
test
inc
mov
mov
outs
(bad)
sti
push
mov
(bad)
js
cld
pop
out
inc
pop
(bad)
push
shl
dec
into
cmp
aaa
jl
ja
lea
mov
mov
add
iret
in
mov
(bad)
mov
pop
es
fcompp
addr16
mov
pslld
int
cmp
mov
or
inc
cld
aaa
ret
rcl
int
inc
mov
rol
sar
icebp
(bad)
sbb
adc
mov
sahf
out
jecxz
arpl
repnz
loop
(bad)
cmc
int
pop
push
aaa
mov
jg
outs
sbb
pushf
retf
shl
or
push
scas
inc
xor
adc
lea
ins
sar
pop
and
aaa
ss
addr16
dec
lods
leave
js
movs
sbb
sbb
mov
inc
cmp
js
call
iret
push
sub
inc
xor
popf
test
xchg
iret
dec
jo
bound
movs
rcr
clc
add
push
call
aas
loope
(bad)
xor
cmovp
daa
cs
mov
leave
mov
loop
outs
in
out
sahf
sub
into
push
pop
popf
xlat
cmp
mov
test
fst
and
enter
loopne
ja
mov
jo
push
adc
cmp
pop
in
adc
jne
pop
fld
pop
mov
fcmovbe
jecxz
mov
xor
xor
xchg
cmp
aad
fdivr
xchg
or
into
sub
adc
inc
adc
cmp
sub
adc
add
add
sbb
fidiv
jl
rol
cwde
push
jecxz
pop
or
sub
or
sbb
lahf
or
xor
pusha
inc
mov
fist
cwde
lock
(bad)
iret
ins
out
test
in
(bad)
push
sar
stos
fldcw
jo
mov
add
xlat
bound
retf
mov
pusha
pop
xor
cmp
mov
leave
push
cmove
in
or
inc
mov
cmp
cmp
das
(bad)
or
jmp
repz
pop
not
sbb
js
inc
dec
pop
xor
dec
(bad)
cmp
in
ins
fisub
sub
or
pop
and
loope
(bad)
ror
mov
jae
cmp
lock
jo
lds
fs
(bad)
or
lods
inc
mov
loop
jns
jns
ja
sti
or
ss
jl
adc
pop
pop
adc
loope
push
aam
mov
je
dec
fs
mov
mov
xor
test
(bad)
shl
inc
mov
push
mov
les
push
pop
mov
(bad)
sbb
xor
enter
push
adc
push
dec
jae
push
in
movs
xor
mov
pop
or
xchg
and
add
cmp
adc
(bad)
dec
jbe
push
mov
pop
xchg
jmp
and
jmp
pop
aad
test
push
setnp
xchg
pop
add
cmp
pop
xchg
mov
and
xor
mov
add
lea
push
sbb
xchg
jmp
retf
pop
pop
data16
ds
fld
add
mov
icebp
je
mov
shl
xor
fwait
xor
(bad)
ss
daa
repnz
leave
mov
int3
xchg
jmp
mov
push
mov
sbb
inc
das
fld
mov
lock
mov
lock
push
shl
hlt
cmp
retf
adc
addr16
mov
dec
(bad)
fadd
push
xchg
pusha
sbb
mov
hlt
adc
mov
sbb
pop
fimul
sub
movs
(bad)
pop
pop
scas
xlat
out
cmp
std
jg
movs
push
stc
add
ins
pop
and
out
(bad)
pop
mov
mov
mov
pop
lods
(bad)
xor
cdq
int3
mov
sbb
jno
dec
in
fnstenv
lahf
(bad)
pop
adc
sahf
xor
std
inc
(bad)
pop
xlat
mov
out
fsub
lahf
movs
aad
xchg
cmp
outs
xchg
stos
rol
in
mov
fcom
imul
into
mov
xchg
adc
loopne
adc
push
inc
pop
mov
mov
call
loop
nop
js
add
add
and
mov
mov
je
fdivr
mov
sbb
(bad)
jg
push
push
or
jo
add
sub
imul
jo
xchg
es
add
call
out
fsub
sbb
cmp
push
arpl
jbe
dec
(bad)
cld
shl
push
mov
pusha
(bad)
jns
mov
adc
out
js
jbe
fld
movs
cmps
enter
adc
out
cmc
sahf
xor
dec
mov
cmc
mov
cmps
dec
mov
test
sub
xor
push
mov
sub
gs
stc
stos
call
xchg
inc
mov
mov
sbb
jo
cld
imul
xor
push
into
(bad)
jo
mov
out
or
sub
out
or
xor
loope
or
cmp
retf
lods
rcr
div
loop
aam
fwait
stc
int
add
leave
data16
dec
cmp
push
mov
std
and
jmp
cmp
(bad)
push
cmp
test
jo
dec
fisttp
mov
fadd
int
mov
enter
push
in
int3
xchg
push
pop
out
les
mov
sub
(bad)
mov
sub
std
add
jo
sbb
fucomi
mov
push
mov
mov
test
imul
sbb
jne
outs
dec
ss
sub
xchg
push
mov
outs
push
and
or
in
mov
(bad)
xor
cwde
movs
xchg
mov
xlat
cdq
jb
xor
mov
enter
retf
outs
jnp
jne
aam
fsub
mov
call
ss
jnp
jne
xchg
or
scas
into
push
jbe
je
cmp
mov
in
into
pop
push
adc
xor
mov
iret
jecxz
in
adc
int3
jl
inc
pop
mov
in
jae
dec
push
sahf
dec
adc
aad
jb
mov
sub
mov
push
out
dec
cmps
xor
jecxz
xor
or
ss
add
pushf
in
loope
and
jmp
jp
(bad)
std
daa
es
and
in
cmp
fs
jmp
int
adc
loopne
cwde
(bad)
dec
cmps
adc
lahf
das
xchg
out
(bad)
nop
(bad)
sub
out
cmp
mov
mov
sub
add
mov
daa
jae
sbb
pop
inc
fbld
jl
in
sub
cmp
pop
jae
inc
iret
xchg
cmp
inc
jmp
sbb
jecxz
ins
push
sub
or
test
or
sub
push
mov
mov
cmc
fs
xor
sub
adc
jmp
inc
or
outs
fsub
cmc
bound
loopne
(bad)
sbb
repz
nop
aaa
xor
fild
and
cmp
add
cmp
jg
xchg
and
ja
mov
aad
lahf
adc
arpl
imul
icebp
sbb
mov
cmc
mov
push
scas
or
sbb
jmp
hlt
push
dec
add
ins
cmp
in
neg
inc
push
dec
jns
jge
pop
push
and
xor
push
sbb
in
xor
mov
mov
xlat
outs
mov
mov
mov
and
test
or
shl
mov
xor
pushf
adc
jb
data16
xor
js
sbb
xor
call
std
pop
repnz
dec
jp
fs
je
xor
int
je
add
xchg
add
mov
jp
ins
clc
dec
xchg
cmc
cmp
out
dec
ja
fcomp
cli
cld
retf
or
pop
jnp
cmps
jnp
sbb
adc
pop
cmp
dec
in
push
jp
inc
std
push
repz
adc
cmp
in
rcl
cmp
iret
and
(bad)
repz
jecxz
imul
mov
adc
outs
test
loopne
hlt
jno
fnsave
ins
add
into
inc
mov
cli
aaa
mov
fstp
gs
fwait
cmp
dec
(bad)
cmp
not
jg
scas
sar
ja
repz
cmc
lods
loopne
imul
stc
std
jmp
lahf
mul
inc
out
lahf
push
jl
cld
out
dec
in
mov
xchg
jecxz
cmp
jb
xchg
adc
add
imul
jl
ss
repz
shl
jbe
ins
xchg
xchg
retf
jb
mov
and
leave
adc
cmp
sahf
imul
popf
mov
mov
push
jmp
pusha
xor
int
sbb
into
retf
push
sub
sar
and
cmp
lock
push
retf
into
cmps
ret
xchg
gs
push
mov
es
in
dec
or
push
mov
repz
jns
add
add
dec
cmp
add
jmp
outs
mov
int3
sbb
xor
lods
and
pop
dec
cwde
xchg
jl
add
push
or
jmp
add
xor
mov
dec
push
sbb
es
mov
jge
jne
or
or
cli
sahf
fwait
stc
mov
imul
aaa
mov
out
xchg
xchg
(bad)
or
jp
jge
movs
int
scas
jns
pop
in
or
mov
das
neg
test
out
cmps
popf
xchg
stos
(bad)
push
sbb
jmp
jl
sub
pop
mov
rcl
sti
mov
push
popf
outs
sbb
add
and
fst
and
sbb
jbe
and
test
int
test
or
mov
or
cmc
in
mov
inc
(bad)
xor
jns
fidiv
fsubr
jl
cdq
add
imul
mov
cdq
push
or
shr
or
fdiv
into
jb
sbb
cmp
call
fiadd
ficom
imul
into
retf
inc
sbb
fsubr
mov
push
inc
pop
rcl
cmp
das
stos
lods
jae
lock
sbb
cs
and
xchg
push
in
mov
test
inc
dec
or
lods
add
or
out
loop
lods
adc
enter
mov
or
in
mul
inc
ja
nop
inc
or
mov
sbb
gs
sti
(bad)
out
push
xor
inc
arpl
push
jge
inc
add
test
inc
dec
fild
pop
xchg
and
xor
ins
and
xor
dec
inc
mov
adc
repz
neg
je
in
xor
out
mov
popa
xlat
mov
cmp
sub
xor
(bad)
push
pop
cwde
(bad)
(bad)
xchg
xchg
lods
in
or
clc
push
cmp
cmp
pop
lods
pop
add
mov
scas
mov
xor
call
movs
mov
adc
mov
mov
retf
fcom
mov
pop
xor
fs
sbb
movs
add
sbb
mov
jns
bound
cmc
popf
iret
mov
dec
adc
xchg
mov
sti
mov
push
ja
inc
cmps
repz
(bad)
mov
jnp
xchg
daa
and
test
das
ror
pop
rcl
sti
jae
data16
ret
int3
inc
inc
pop
mov
imul
js
pop
jae
lods
pop
inc
bsr
popa
and
adc
jmp
fnstsw
leave
data16
and
pushf
dec
xchg
sub
cmp
jno
sbb
and
xlat
outs
dec
inc
or
outs
xchg
(bad)
mov
test
scas
getsec
jp
pop
jle
jae
push
in
ret
dec
sbb
sub
int3
push
xor
xchg
xchg
jae
loop
ffreep
pushf
cli
inc
jmp
and
test
mov
push
or
movs
jne
test
jmp
lods
jl
popa
jnp
push
sar
mov
or
pop
imul
mov
push
sbb
adc
inc
adc
add
nop
pop
scas
pop
inc
fbld
retf
sub
mov
mov
ins
fstp
jb
jl
es
xor
xchg
sahf
adc
in
mov
mov
pop
mov
add
sbb
mov
in
push
sub
cmp
push
arpl
cmc
add
movs
stos
or
test
(bad)
xchg
xor
bound
ins
lahf
xor
enter
xchg
inc
(bad)
daa
fs
jo
or
call
xor
ja
jo
in
xor
mov
pop
mov
ficom
inc
sti
mov
inc
and
mov
sub
pop
sub
mov
je
pop
dec
popa
adc
data16
sub
mov
xchg
cs
rol
or
or
int
jmp
(bad)
jne
jno
xchg
inc
xchg
adc
jbe
stos
jbe
sar
scas
inc
call
aas
inc
mov
stc
pop
mov
cmp
mov
xchg
aam
out
movs
in
sbb
cmp
add
push
mov
inc
(bad)
jge
std
mov
ret
ds
push
loop
aad
movs
loopne
mov
into
push
pop
mov
test
int3
and
xchg
xabort
xchg
cs
inc
stos
sub
mov
add
and
dec
call
(bad)
inc
daa
inc
fmul
mov
sbb
push
mov
shl
fdiv
loopne
jb
push
loope
jge
pop
js
mov
mov
cdq
gs
and
mov
sub
add
cmp
xor
ret
and
out
shl
cmps
sbb
pop
sbb
mov
sub
and
mov
pop
sbb
movs
and
mov
or
jmp
inc
movs
es
dec
cwde
rcl
fisub
push
clc
test
jno
cmp
(bad)
xchg
dec
or
fisttp
repz
mov
leave
add
popf
loope
jno
xchg
outs
jnp
jg
outs
scas
pop
inc
inc
cmc
pop
fild
in
loope
stc
in
dec
and
leave
sbb
and
jmp
xor
movs
cmps
dec
mov
dec
call
mov
cdq
xor
jae
jae
sub
in
mov
mov
xchg
bnd
or
dec
mov
jb
push
or
lds
pop
sbb
les
ss
mov
pmuludq
wrmsr
in
stos
xchg
jae
stos
xchg
mov
cmp
push
out
xlat
in
push
mov
adc
mov
sub
cdq
pop
pop
xchg
ds
push
adc
pop
div
ret
enter
jnp
call
pop
jo
ret
adc
out
nop
je
fwait
inc
shr
movs
mov
pushf
iret
and
dec
sbb
inc
mov
aam
ror
add
call
and
mov
je
out
xchg
mov
mov
lds
and
fcomip
pop
aas
lods
movs
clc
xor
shl
pop
fst
jl
mov
mov
mov
vpunpckhwd
lods
(bad)
aam
or
inc
pop
and
lahf
mov
push
mov
jl
outs
pop
hlt
clc
ja
out
cmp
shl
pop
xchg
mov
cmp
xchg
push
inc
pushf
out
xor
pushf
mov
pop
adc
pop
stc
jb
sbb
loope
mov
in
sbb
mov
xchg
jmp
rcr
cmp
pop
fild
rcl
stos
jns
les
nop
dec
test
sbb
repz
(bad)
mov
push
ror
and
dec
or
or
adc
dec
or
xchg
jns
popf
sbb
add
retf
leave
push
cwde
cmp
or
lods
das
rcl
sbb
(bad)
(bad)
movs
fcomp
push
adc
push
sbb
sbb
ret
push
ds
or
fld
jne
clc
jbe
pusha
push
in
cmp
xor
neg
imul
jl
sar
addr16
(bad)
and
sub
mov
out
xchg
ror
stos
sub
aas
jmp
xor
mov
and
lock
outs
out
out
jl
sub
mov
movs
jnp
cwde
enter
sbb
loope
xchg
lea
mov
pop
xchg
and
push
les
ja
loop
dec
sub
add
dec
adc
das
mov
ja
sahf
push
and
add
loopne
cmp
jmp
add
cld
or
or
push
ds
lods
or
add
push
dec
dec
test
cld
xchg
out
js
out
mov
dec
pushf
dec
and
inc
xor
mov
call
lea
out
clc
sti
inc
into
adc
fldenv
ins
cmps
hlt
ins
inc
jnp
add
sbb
not
sbb
cmp
fld
or
sbb
icebp
enter
mov
movs
cld
push
sub
lods
movs
xlat
and
pop
in
mov
jns
mov
test
dec
outs
jmp
mov
dec
cld
adc
adc
in
dec
xchg
pop
cld
in
cwde
mov
sbb
jg
arpl
mov
jmp
mov
ret
push
or
sub
out
push
add
xchg
cmp
out
imul
(bad)
sub
into
inc
sub
mov
push
ror
cdq
sahf
pushf
jg
push
lds
stos
add
enter
xor
adc
pop
xor
mov
in
les
sbb
push
imul
cmp
sub
arpl
cdq
dec
or
sbb
das
lea
jmp
mov
xchg
loop
mov
or
adc
fwait
vmovd
addr16
or
je
mov
inc
rol
dec
lods
mov
mov
xor
and
sub
push
jg
inc
cdq
or
imul
dec
ins
rcr
add
clc
inc
push
pop
(bad)
scas
xor
popa
lea
fsub
int
je
sbb
dec
jle
push
aam
stos
pop
cs
adc
adc
adc
in
push
jae
sahf
scas
inc
xchg
aad
fmul
stc
mov
test
ficom
jns
and
pop
xor
jp
inc
adc
cmp
sbb
out
pop
or
shr
mov
or
inc
enter
or
mov
dec
loopne
(bad)
xchg
jg
pop
dec
jb
scas
shr
or
les
in
add
cmp
push
pop
aaa
mov
mov
or
mov
movs
je
inc
retf
mov
or
lahf
add
dec
xor
mov
push
sub
cli
sbb
test
lods
das
loope
and
loope
add
pop
dec
imul
xchg
xor
arpl
and
push
fisubr
inc
sub
mov
sti
test
jae
ja
cmp
mov
mov
hlt
lds
mov
add
outs
or
cli
jae
je
arpl
xchg
cmp
fsubr
pop
imul
std
xor
mov
or
ffreep
pop
mov
enter
xor
push
dec
dec
xor
inc
adc
push
xor
ss
dec
push
int3
lahf
sub
daa
xchg
div
fidiv
mov
lock
clc
pop
data16
dec
xchg
inc
mov
push
shl
sbb
test
adc
mov
push
in
add
lahf
add
pop
ja
ret
nop
mov
pop
adc
ret
pop
push
cmc
cmc
stos
iret
mov
cmp
dec
mov
cmps
or
lahf
sbb
fwait
jmp
dec
cdq
add
jg
dec
xchg
push
jbe
pop
idiv
out
cmp
clc
icebp
gs
xchg
push
sar
fadd
enter
cld
mov
ret
mov
add
jmp
and
outs
or
(bad)
mov
addr16
mov
std
imul
dec
mov
fld
cld
pop
femms
xor
mov
in
retf
call
adc
and
test
js
cmp
ret
fild
mov
xor
add
std
test
cmp
xor
cld
scas
push
pop
pop
out
adc
ss
dec
clc
add
dec
xchg
adc
ss
bound
(bad)
mov
push
and
jb
pop
ins
xor
int
mov
ror
lods
cmp
mov
add
mov
push
clc
test
mov
inc
add
sbb
push
pop
data16
into
jmp
js
out
add
pop
cdq
mov
cmc
ret
dec
ror
or
mov
or
push
cld
sub
movs
or
dec
stos
mov
sub
push
jo
mov
ror
pop
test
xchg
sbb
pop
je
jo
xchg
xchg
dec
dec
icebp
push
jns
aam
mov
sti
xor
cmp
or
cmp
inc
nop
jmp
xor
xor
mov
sar
imul
xor
jae
or
aaa
mov
dec
mov
icebp
pop
cmp
xchg
inc
rcl
fidiv
lods
pop
sbb
(bad)
jnp
inc
mov
mov
pop
loopne
inc
sub
cdq
(bad)
push
cmp
int3
pop
push
outs
mov
pop
push
sub
xor
clc
inc
mov
pusha
mov
(bad)
pop
sub
retf
push
cmp
call
cdq
cmp
cld
sub
dec
sbb
adc
and
xchg
pop
pusha
dec
xor
aam
and
mov
sbb
in
js
imul
daa
(bad)
jo
mov
sub
push
jge
(bad)
outs
push
jno
push
out
xor
sub
imul
pop
push
jnp
rcl
into
inc
pushf
cmp
add
das
sahf
fcmovnb
push
xor
dec
and
jb
sub
mov
and
adc
mov
or
xchg
mov
fwait
and
cs
push
jle
pop
lds
mov
mov
xchg
leave
mov
ror
ins
push
cmp
in
cli
mov
inc
cmps
xchg
sub
and
xor
lods
adc
shr
popf
out
jl
mov
xchg
loope
aaa
xchg
cmc
data16
xchg
and
jae
jmp
lock
sub
fisttp
popf
mov
xlat
hlt
fs
fidivr
xor
ret
add
lock
add
shl
xchg
adc
aas
push
scas
mov
xchg
push
or
sbb
lods
in
xor
and
cmc
in
push
pushf
stos
(bad)
fdiv
mov
ins
xchg
sahf
sbb
lock
test
pop
(bad)
data16
mov
enter
xchg
loope
xor
jns
pop
jp
jno
jns
les
rol
push
sbb
mov
adc
push
xlat
pop
xchg
es
pusha
mov
cmc
xor
jno
mov
(bad)
gs
mov
mov
push
sbb
inc
ins
sub
(bad)
ret
pushf
std
pusha
vmread
stos
shl
mov
or
adc
cmp
xchg
movs
movs
sbb
mov
lods
cmp
jne
cmc
(bad)
clc
jecxz
iret
lods
add
leave
mov
sub
mov
push
jae
push
push
jl
cmp
cmp
ficomp
stos
fist
adc
ficomp
xor
push
sub
ins
lahf
mov
shr
pusha
inc
fstp
sub
(bad)
inc
aam
push
inc
jge
lea
dec
fidiv
mov
data16
jns
dec
cmp
inc
lods
push
dec
or
outs
pop
sub
mov
dec
jae
icebp
or
aam
test
mov
dec
sub
mov
std
scas
cmp
jae
sbb
in
int3
sub
jmp
sbb
je
ret
cmp
cmp
daa
pop
rcl
and
fcmovbe
fcmovne
dec
add
jge
out
sbb
fwait
adc
xor
cmp
es
cwde
lods
cmps
and
mov
xor
mov
xor
icebp
fwait
out
sahf
xchg
lock
mov
xor
aas
push
lds
daa
push
repz
cld
ds
lahf
aam
outs
add
cmp
and
add
cmp
clc
repnz
dec
idiv
jge
int3
test
push
mov
mov
mov
or
and
mov
sbb
adc
cmp
les
leave
sti
lea
push
inc
mov
imul
rcl
or
jle
pop
mov
inc
stc
sub
xchg
rol
int3
adc
xlat
std
xchg
dec
cmc
pop
imul
sub
or
mov
mov
and
in
test
int
or
retf
gs
jae
fmul
dec
push
repz
push
shl
pop
mov
data16
cmc
and
jmp
pusha
jmp
fmul
jmp
neg
enter
and
jle
imul
in
mov
out
repz
sbb
sbb
xchg
loope
mov
pop
ins
mov
cmc
add
dec
jg
adc
push
mov
dec
push
mov
repnz
(bad)
loope
sub
cmp
xor
shl
mov
and
pop
out
mov
int
ret
sbb
pop
mov
ret
cmps
arpl
rcr
cmp
cmps
test
push
inc
sbb
ret
jg
inc
jle
or
jecxz
push
jl
call
inc
cmps
jp
lock
pop
xor
xchg
aam
ss
and
xor
pushf
inc
adc
ja
ins
sbb
stc
mov
rol
jecxz
push
inc
and
fidiv
cld
sbb
xor
mov
cmp
inc
pop
sti
jb
mov
jle
jmp
cmp
jp
sbb
add
(bad)
fnstenv
gs
mov
adc
or
leave
int3
add
xor
fwait
nop
pop
sub
push
mov
cld
ficomp
pop
jno
aaa
mov
mov
mov
and
dec
or
cmp
xchg
js
mov
pop
or
rol
repz
cmp
aaa
aas
mov
xchg
call
jle
stc
mov
scas
scas
inc
loopne
jge
ss
add
rcr
sbb
and
xlat
cwde
icebp
xor
loop
mov
loope
push
cmp
add
mov
xor
pop
sbb
jg
and
(bad)
mov
test
popa
pop
test
jno
and
dec
xchg
js
cmps
jmp
fs
push
arpl
mov
(bad)
xlat
fild
test
inc
and
dec
jl
push
pop
xor
add
aaa
mov
ja
mov
lock
outs
call
mov
push
fwait
movs
repnz
sub
in
lock
ret
xchg
mov
dec
outs
mov
mov
popa
jmp
dec
push
inc
lahf
js
dec
dec
call
in
sub
xchg
inc
test
dec
mov
dec
mov
jmp
xchg
bound
pop
movs
retf
dec
je
adc
stos
inc
xchg
in
scas
sbb
sbb
je
repnz
cdq
test
mov
in
sub
scas
mov
ins
cmp
repnz
xchg
test
in
fdiv
(bad)
fst
add
jg
ret
movs
into
jb
bound
shl
add
cli
scas
sub
pop
mov
call
mov
call
daa
shl
scas
and
inc
push
add
(bad)
stos
test
mov
jmp
stos
mov
add
mov
ror
and
outs
sbb
dec
cmp
int
div
sbb
fadd
xor
sbb
jno
scas
sbb
ror
jmp
stos
dec
inc
xchg
ror
or
xchg
push
dec
rcl
xchg
stc
inc
js
aad
push
inc
test
in
cmp
push
stos
dec
movs
adc
jno
dec
retf
adc
not
and
or
sub
mov
xchg
cmps
(bad)
adc
jmp
jae
push
jmp
ret
adc
adc
push
adc
jmp
push
stos
mov
ja
popf
sbb
xchg
adc
or
test
stos
test
push
test
daa
inc
xor
xchg
jmp
push
pop
add
mov
sub
sub
xchg
fwait
jmp
loope
mov
push
pop
or
mov
nop
icebp
js
jo
sahf
pop
ins
mov
retf
sar
ins
neg
pop
test
xchg
jg
adc
jmp
mov
adc
popf
lods
imul
jmp
dec
or
leave
xchg
mov
xor
loopne
push
lea
dec
cdq
mov
fs
xchg
dec
adc
gs
stos
cmps
inc
test
cdq
retf
mov
and
cmps
cwde
fld
inc
lods
scas
add
dec
jp
adc
out
add
mov
mov
add
(bad)
in
adc
cmp
push
ret
mov
rol
loopne
ficom
cmp
push
jmp
aad
sub
cmp
xchg
hlt
bnd
push
jae
push
add
in
xor
pop
es
mov
mov
ins
sub
cmp
inc
test
jecxz
dec
rcr
dec
mov
mov
mov
cmp
and
stc
out
xchg
sbb
sub
cmp
shl
addr16
pushf
pop
mov
cld
fdecstp
cmp
mov
mul
push
dec
fisttp
cmc
adc
aas
push
(bad)
movs
push
xchg
retf
test
push
test
scas
and
push
jg
scas
retf
adc
push
push
cld
fbld
call
or
call
sbb
mov
inc
iret
sub
(bad)
arpl
ret
add
mov
jge
mov
cmp
xor
rcr
lock
mov
dec
jns
int
pusha
or
add
xor
mov
mov
pop
jne
and
icebp
push
xor
mov
dec
jge
adc
pop
inc
adc
adc
xchg
aad
mov
jb
cwde
addr16
sbb
jmp
call
mov
mov
pop
and
jnp
cmps
sbb
mov
add
sbb
add
adc
cmps
jg
mov
or
jb
or
and
jge
retf
mov
push
(bad)
aam
jl
mov
stos
mov
jg
stos
scas
push
mov
cs
lea
repnz
jbe
pop
xor
hlt
dec
aaa
jp
inc
aam
sub
and
mov
pop
push
and
mov
aam
es
movs
sbb
push
inc
sub
mov
xchg
push
div
nop
fmul
xor
mov
push
aaa
mov
fsub
ds
jnp
or
fsub
sbb
(bad)
jl
test
adc
cmc
data16
jge
pop
adc
aam
shl
mov
push
adc
(bad)
mov
sahf
sub
push
mov
and
sbb
lds
les
pop
mov
in
sub
dec
aam
pop
or
pop
cmp
js
jmp
stos
in
pop
mov
xor
inc
jge
sub
js
dec
jo
cli
fidivr
pop
xchg
test
push
shl
fnstsw
out
shl
push
lea
out
sub
es
(bad)
hlt
std
pop
retf
adc
repnz
clc
fild
or
out
data16
stos
add
mov
pop
mov
mov
clc
sbb
je
lock
fld
outs
and
(bad)
sub
repnz
je
dec
mov
xchg
mov
popa
stc
pushf
scas
jbe
mov
dec
sub
mov
mov
push
mov
sbb
xchg
shl
movs
adc
out
xor
pop
in
mov
clc
pop
xchg
mov
adc
pop
push
sahf
fisub
(bad)
arpl
shl
pop
mov
dec
imul
retf
xor
pop
fdiv
inc
shl
shr
jecxz
iret
into
mov
push
jb
(bad)
jns
iret
test
jp
or
daa
aad
or
xchg
fcmovu
call
pop
leave
das
mov
mov
and
(bad)
fist
and
or
pop
mov
jl
jnp
stos
cmp
pop
xchg
adc
push
jb
retf
cs
dec
mov
push
fistp
movs
or
xlat
sbb
mov
jbe
gs
and
mov
loope
aaa
mov
retf
int
pop
mov
(bad)
cmovs
or
mov
adc
cmp
cmp
push
xchg
outs
ret
or
sbb
sub
jmp
inc
pushf
cld
ds
cmp
jnp
rol
inc
(bad)
push
retf
test
cdq
push
fistp
push
jno
pop
adc
pop
add
pop
push
shr
aad
stos
mov
xlat
jle
jne
inc
push
sbb
out
mov
fst
mov
sbb
push
xor
jle
sub
xchg
xchg
or
mov
stos
cmp
mov
test
jno
outs
add
fwait
sub
lahf
jl
leave
mul
fwait
push
clc
bound
addr16
pop
mov
xchg
cmp
or
jle
test
push
push
retf
mov
or
fcomip
push
lods
add
addr16
xchg
jo
adc
imul
sub
pop
mov
mov
xor
and
test
push
shl
jbe
jge
stos
jge
imul
jg
sub
nop
loopne
shl
or
or
shr
fld
not
in
lock
sbb
imul
jle
adc
aaa
nop
mov
sub
mov
mov
aaa
xor
jp
addr16
aad
je
jmp
add
or
sub
imul
jne
shl
jp
(bad)
int
cli
ret
stos
sbb
neg
push
sub
jmp
es
jae
ja
or
adc
popf
lea
mov
inc
lea
mov
lods
and
sbb
push
dec
mov
ror
dec
adc
xor
mov
ret
pop
bound
inc
or
scas
jb
or
aad
aam
mov
cmp
int
mov
cli
lods
pop
push
sti
pop
pop
xlat
sub
mov
xchg
dec
pop
and
cmc
and
fcmovnb
inc
mov
fwait
xlat
adc
test
lahf
cmps
mov
fs
loop
loop
jecxz
sub
aam
pop
(bad)
adc
fld
pop
scas
mov
int
in
mov
fs
ja
add
xchg
cli
inc
jnp
jb
or
xchg
push
les
clc
jb
cwde
test
imul
or
dec
pop
jg
sbb
repz
lahf
xchg
sub
(bad)
in
xchg
mov
outs
int
(bad)
lahf
test
push
test
outs
out
stos
aam
dec
stc
hlt
inc
and
int3
int3
push
out
shr
and
push
out
fcomp
cli
not
nop
into
xlat
das
pop
cmps
int
or
(bad)
add
adc
arpl
sub
dec
jmp
pop
pop
(bad)
in
jle
xchg
sbb
popa
or
in
daa
lahf
lea
xchg
jg
mov
ins
aam
mov
dec
jg
mov
or
push
fdiv
and
imul
cdq
cmp
punpckhdq
adc
mov
retf
mov
mov
lods
fs
xlat
outs
(bad)
(bad)
add
xchg
pop
cmp
add
jmp
lahf
push
(bad)
repnz
ret
lock
push
fs
test
aas
adc
sub
popf
fist
pop
xor
fs
sub
jmp
cmp
sbb
movs
mov
dec
push
xchg
xchg
sbb
add
cdq
popa
shl
lock
imul
fiadd
rcr
int3
inc
cmp
stc
ins
fs
leave
in
mov
pop
mov
jecxz
movs
test
jns
test
ins
into
mov
fwait
jg
shl
test
ror
call
int3
not
gs
push
shl
add
or
out
mov
add
xchg
std
jns
out
enter
int3
fs
add
stc
jecxz
cmps
ins
movs
xor
push
add
out
jbe
cmp
in
mov
ret
inc
loopne
inc
cmc
pop
mov
cmc
fimul
cdq
xchg
xor
imul
out
loope
lea
xor
xor
(bad)
xor
dec
lods
fsubr
cmps
shl
and
sbb
mov
inc
xchg
aaa
icebp
gs
or
int
test
jae
inc
jne
popf
std
xchg
mov
sbb
push
xchg
stc
mov
push
sbb
push
adc
aam
out
sub
xlat
pop
xchg
fwait
dec
jmp
xor
ins
adc
aad
ins
dec
push
xor
jecxz
and
jnp
cs
mov
cmp
sub
xor
mov
jge
repz
shl
sbb
loop
retf
test
cmps
pop
sbb
cmp
cdq
shr
bnd
and
cmps
or
outs
std
inc
pop
jmp
lods
push
jnp
inc
aas
mov
jnp
or
test
fucomip
jb
and
inc
xchg
hlt
rcl
int3
sbb
push
inc
fimul
das
mov
sti
xchg
in
fst
in
jb
(bad)
or
lods
mov
leave
into
mov
inc
pop
or
mov
add
es
inc
inc
nop
loop
in
ja
icebp
sub
cli
aam
pop
sub
mov
add
mov
aam
inc
fstp
and
pusha
mov
in
mov
sbb
daa
pop
or
fst
mov
fiadd
bnd
push
mov
mov
shl
sbb
pop
rcl
push
jno
test
fbstp
push
sar
imul
pushf
icebp
push
mov
fcmovnu
sbb
mov
xchg
cwde
out
fsubr
xchg
mov
out
sub
stos
xor
icebp
pop
inc
adc
in
cmp
cmc
sti
sbb
fwait
in
arpl
push
lahf
cmp
jg
jb
repz
outs
es
xchg
xor
xchg
jne
xor
sub
fistp
test
int
mov
ffreep
lds
add
push
sbb
call
inc
cmp
add
cmps
xchg
xchg
test
out
or
mov
sub
xor
adc
jno
xor
scas
jl
xchg
nop
scas
pusha
sbb
cmp
repnz
add
movs
mov
pushf
mov
and
inc
ds
dec
(bad)
sub
push
lock
lahf
dec
inc
out
xor
push
inc
and
fcmovbe
out
and
repnz
dec
call
fs
mov
call
outs
xchg
imul
or
mov
xchg
neg
add
mov
or
push
mov
jp
movs
jns
xchg
dec
leave
clc
mov
inc
dec
out
ds
sbb
adc
mov
inc
movs
mov
xor
cmp
loop
pop
rol
ins
add
pop
aad
pushf
xlat
pop
jl
scas
lea
push
addr16
shl
mov
add
cmp
mov
call
fs
pop
cs
shl
in
pusha
inc
inc
repnz
stos
scas
cwde
cld
pop
lods
mov
div
jmp
cli
mov
scas
inc
in
pop
test
push
or
int3
xor
jmp
inc
sub
hlt
ret
cwde
(bad)
and
std
jns
out
or
cmovb
stos
imul
xor
dec
jns
add
jo
sbb
or
inc
cld
div
sbb
js
sbb
call
rol
in
in
or
push
in
fstp
call
aam
outs
or
es
adc
sti
xlat
cmp
out
mov
push
mov
shr
pusha
test
nop
and
es
mov
jbe
push
add
in
ins
es
nop
or
push
fs
gs
adc
add
mov
mov
aaa
aam
adc
jae
and
mov
(bad)
adc
jnp
test
(bad)
cmc
outs
enter
cld
clc
sub
inc
repz
mul
ret
sbb
ror
sbb
inc
test
push
fbstp
add
imul
inc
retf
cmps
inc
clc
test
dec
(bad)
iret
jge
add
mov
xor
dec
ret
cmp
push
push
ret
out
cmps
std
dec
cli
jne
pop
(bad)
mov
sti
out
nop
lea
in
aam
adc
inc
icebp
lds
js
jmp
(bad)
adc
ins
int
(bad)
mov
jae
js
(bad)
retf
dec
sub
or
mov
dec
and
inc
pop
repz
mov
test
push
xlat
movs
retf
cmp
(bad)
fbld
jmp
xchg
loopne
imul
push
xchg
shr
pop
push
daa
ss
adc
sub
movs
jg
jbe
and
or
dec
add
daa
mov
dec
push
mov
add
mov
mov
scas
xchg
push
xor
push
out
xor
js
aaa
nop
mov
imul
cmp
aas
pop
imul
out
sahf
adc
mov
retf
outs
out
dec
fidiv
pop
scas
dec
sub
sub
in
test
ds
sub
hlt
lds
or
mov
push
jb
cs
cwde
jb
movs
dec
sbb
imul
xor
aaa
push
mov
test
jno
outs
lahf
sahf
pop
rcr
lods
cmp
or
and
clc
mov
dec
adc
or
movs
loopne
ins
sti
adc
popa
add
or
pop
arpl
bound
bound
adc
push
jns
mov
adc
mov
or
or
repz
test
leave
ror
fdivr
mov
or
jmp
dec
sub
fimul
mov
dec
adc
fisubr
test
cmovnp
popa
or
cwde
mov
add
xchg
or
dec
into
inc
fiadd
in
int3
inc
mov
bound
fs
cmp
pop
mov
inc
add
mov
addr16
in
(bad)
fwait
aaa
sar
jae
icebp
ret
xchg
imul
jp
movs
adc
xor
push
or
ss
cmp
fadd
test
cli
sbb
stc
ret
in
jecxz
mov
out
mov
jecxz
pop
jle
pop
dec
cdq
jmp
and
imul
in
mov
xchg
inc
and
(bad)
cmps
cmp
mov
push
(bad)
jmp
mov
sub
adc
jns
and
xchg
repnz
xor
in
std
sbb
inc
sub
add
fmul
loop
loop
out
loop
or
cmp
sbb
rcr
push
out
xor
and
aad
and
mov
and
xchg
jo
sbb
arpl
xchg
rol
rol
imul
xchg
mov
fld
in
mov
sub
in
cwde
retf
mov
hlt
out
(bad)
outs
mov
out
arpl
fidiv
std
aas
mov
lock
ss
and
adc
addr16
dec
sub
xor
xchg
hlt
or
clc
dec
cdq
xor
mov
sti
pop
data16
cmc
fwait
stos
jne
je
ror
faddp
sbb
popa
xor
loopne
and
xchg
(bad)
inc
arpl
movs
cmp
loopne
es
add
pop
mov
dec
mov
pusha
xor
cmove
add
dec
sti
cwde
aad
cmps
cmp
in
pusha
jge
stos
push
sub
xor
stos
mov
push
shl
rcr
ja
ret
jnp
loopne
ror
or
mov
inc
data16
in
scas
mov
outs
in
ficomp
ficomp
lock
pop
sub
mov
cmp
es
sub
retf
ret
mov
xchg
js
repnz
les
push
inc
in
dec
je
jmp
daa
int
adc
sub
call
sub
movs
outs
bound
and
xchg
pop
vcvtsd2ss
(bad)
out
jno
inc
pop
test
dec
movs
fbld
inc
das
pop
push
inc
jae
or
add
jne
sbb
sbb
xchg
fadd
gs
or
push
cmp
(bad)
fstp
aad
mov
pop
jns
(bad)
fs
or
and
mov
push
push
outs
pop
push
fisttp
mov
push
add
or
repnz
inc
call
fsub
pop
mov
imul
mov
cld
test
sbb
test
stos
or
cli
mov
imul
jne
ss
arpl
xor
mov
retf
aam
or
pop
scas
push
in
dec
cmc
icebp
or
mov
inc
(bad)
pop
mov
in
push
ror
jl
xor
jl
sbb
mov
std
mov
jmp
push
sbb
and
aas
mov
dec
in
push
mov
jg
mov
leave
imul
mov
cmp
sub
adc
out
inc
(bad)
rcr
pop
mov
or
xlat
imul
push
jns
in
mov
push
fmul
ss
(bad)
(bad)
in
dec
test
sub
or
ret
and
cmp
std
jo
and
inc
adc
rcr
mov
jp
out
ja
fidivr
(bad)
xchg
cs
retf
jmp
xor
enter
sub
hlt
push
iret
lods
mov
imul
nop
(bad)
cli
add
in
add
xor
retf
inc
lods
movs
retf
ret
mov
bound
xor
(bad)
jle
int
add
in
stos
jecxz
add
ret
inc
rcr
xlat
cdq
sub
mov
inc
inc
int3
iret
cmp
and
ror
adc
mov
popf
mov
push
(bad)
in
adc
mov
or
stc
ins
inc
push
or
in
mov
lock
adc
rol
(bad)
aad
and
xchg
add
mov
sbb
sub
adc
cmps
and
dec
or
pusha
leave
repnz
popf
mov
jle
pop
or
xor
imul
repnz
push
inc
mov
dec
dec
pop
ins
xchg
daa
xchg
cmp
or
sbb
adc
out
(bad)
arpl
adc
adc
into
cmp
je
push
int
add
lahf
ss
retf
out
push
mov
jle
push
mov
std
lock
jp
inc
mov
and
inc
jb
in
les
jmp
mov
aaa
lahf
call
cmp
or
ins
mov
imul
nop
outs
fimul
push
sub
push
mov
or
enter
fs
arpl
pop
cmp
out
dec
push
cdq
cmp
pop
sub
and
pop
and
fisub
xlat
(bad)
push
imul
sub
into
addr16
adc
int
inc
adc
inc
mov
sbb
aaa
xchg
aam
dec
xor
mov
sbb
add
and
ins
dec
stos
sub
pop
pop
pop
pusha
or
push
je
enter
jo
push
pop
mov
mov
popf
adc
or
clc
mov
sar
push
cmp
dec
jbe
ret
cmp
cvtpi2ps
retf
loop
aas
pusha
jecxz
mov
cwde
fistp
or
dec
aam
or
test
pushf
jp
cli
cmps
jne
sbb
pop
stos
fnstcw
mov
and
push
xor
ret
popa
mov
jp
aad
adc
stc
lea
pop
fsub
retf
scas
or
cmc
inc
mov
cmps
ror
jns
test
dec
mov
pop
adc
jno
in
jp
xlat
jmp
xchg
shl
jmp
outs
jp
mov
dec
sub
mov
mov
jb
mov
sahf
scas
movsx
mov
cmps
cmps
aad
adc
jae
(bad)
xor
sbb
js
sub
fisub
mov
cmps
adc
sbb
imul
or
xor
inc
mov
add
and
mov
sahf
add
jnp
in
gs
jmp
push
(bad)
push
cmp
inc
add
jae
push
sbb
pop
test
pop
rcr
dec
call
xchg
rcl
push
ins
mov
add
lods
idiv
xchg
popf
pop
and
add
cmp
inc
adc
push
stc
dec
xor
scas
push
push
inc
pop
or
xchg
jmp
cmc
jnp
lods
jmp
or
pushf
scas
ja
pop
dec
adc
sub
out
addr16
mov
stos
cmp
pop
push
jns
ficomp
ds
lods
daa
cmp
test
mov
push
call
not
mov
jge
adc
addr16
fadd
sbb
iret
sbb
cld
jb
xchg
jecxz
cmps
jle
or
and
ins
test
lods
sbb
lahf
call
ins
inc
outs
movs
push
or
ins
sbb
cmps
les
mul
push
lahf
call
push
in
adc
aas
xlat
push
dec
or
neg
std
xchg
xchg
xlat
cdq
ins
push
popf
mov
add
mov
fild
push
es
dec
sti
call
pop
mov
rcr
pusha
pop
outs
jge
jno
ins
scas
push
mov
nop
and
rcr
sti
rol
test
add
xor
or
pop
jne
test
mov
out
xlat
add
dec
fldcw
fisttp
(bad)
mov
mov
xchg
push
out
cli
push
cmp
std
fsub
std
or
sub
fnstsw
inc
xor
pop
jg
sub
shl
push
mov
push
inc
jg
jge
push
fucomip
lods
dec
sbb
aam
push
jmp
int
into
rol
pop
jl
hlt
jb
jb
lahf
(bad)
stc
sbb
in
lock
retf
pop
xchg
js
jnp
mov
xchg
es
sbb
mov
repnz
inc
jo
adc
push
fbstp
aas
mov
outs
jmp
pop
inc
inc
js
sub
and
and
mov
xchg
lea
(bad)
test
xor
sub
pop
sub
(bad)
cli
sub
or
mov
repz
retf
or
shl
and
in
iret
sti
stos
lahf
rep
bound
int
(bad)
popf
add
inc
fadd
xor
mov
pop
pop
les
sahf
sub
push
xor
sbb
dec
fist
scas
or
loopne
aaa
mov
icebp
loopne
adc
es
mov
bound
xor
add
jbe
jbe
movs
adc
das
pop
stos
or
jbe
imul
or
(bad)
adc
sbb
jno
push
fwait
out
daa
lods
test
add
pop
mov
mov
add
call
fidiv
aas
sbb
ja
test
mov
sub
or
(bad)
in
scas
dec
push
arpl
mov
xchg
inc
sbb
mov
jne
jmp
dec
cmp
shr
retf
sti
div
jmp
jmp
xchg
jecxz
mov
adc
sub
or
push
cmc
fdiv
loope
pop
push
mov
pop
jmp
mov
sbb
push
and
dec
adc
adc
xchg
(bad)
cld
daa
ffreep
sahf
mov
pop
idiv
mov
call
adc
mov
sbb
push
jp
sbb
xchg
mov
jnp
add
mov
sub
add
in
mov
pop
pop
jl
jge
iret
int3
push
test
(bad)
cmp
sub
popf
sbb
cmps
lock
jmp
in
jmp
lods
dec
and
mov
outs
ins
icebp
fdivr
dec
call
out
add
dec
lahf
nop
pop
mov
mov
jge
fwait
or
(bad)
out
or
call
sub
gs
or
popf
sbb
iret
pop
call
and
or
scas
push
retf
mov
jp
sub
lock
lods
cmp
(bad)
mov
imul
retf
icebp
push
xchg
sub
pop
mov
mov
inc
sub
iret
inc
cmpps
xchg
push
les
out
mov
ret
pop
in
ins
xor
cld
repz
xor
mov
int3
sbb
loop
pop
out
lock
xchg
out
mov
test
(bad)
and
xor
sub
pushf
cli
rol
int3
cmp
sub
push
adc
mov
inc
mov
or
invd
sahf
bound
cdq
mov
inc
jne
imul
push
pop
daa
(bad)
push
lahf
xchg
pop
jl
in
ja
inc
jbe
imul
sti
and
xchg
mov
mov
pop
pop
retf
xchg
int3
push
lea
neg
test
mov
je
ins
cli
icebp
test
jnp
inc
pop
or
(bad)
aaa
xor
(bad)
jp
sar
sub
jge
push
sti
and
xor
dec
push
aad
and
and
fst
stos
ror
sub
jae
shl
mov
into
mov
pop
repz
aas
add
sbb
mov
push
pop
pop
inc
dec
sbb
add
stos
inc
imul
jo
jle
inc
inc
out
repz
sub
dec
xchg
outs
adc
sti
pusha
xchg
jmp
push
addr16
popa
jecxz
enter
xchg
mov
ficomp
ffreep
sbb
cmp
add
sbb
test
pop
inc
pop
fbld
push
loopne
adc
popf
and
mov
pop
mov
inc
and
cmps
out
push
xchg
movlps
lds
das
jmp
in
retf
mov
add
test
das
into
stc
popa
pop
cwde
enter
and
add
rcl
and
jmp
or
sub
jnp
and
xchg
mov
inc
pop
lods
imul
lock
clc
add
(bad)
cmp
es
cmp
pop
mov
push
js
movs
inc
or
retf
mov
push
inc
pop
jmp
fiadd
add
or
xor
dec
mov
aas
sbb
push
pop
jnp
ins
inc
xchg
repnz
pop
mov
and
sbb
jge
outs
mov
sti
ins
mov
mov
cmp
je
neg
mov
imul
fisubr
ja
jbe
inc
icebp
xchg
into
jg
out
(bad)
xor
push
fidivr
xor
mov
inc
sub
jbe
cmp
loope
push
adc
les
push
or
int3
pcmpgtw
xor
loop
dec
icebp
sbb
dec
icebp
ret
jns
push
or
pop
push
adc
mov
call
push
pop
fbstp
enter
xchg
add
xor
xchg
fbstp
pop
pop
mov
rcr
cmc
adc
mov
cmp
shl
mov
dec
mov
addr16
add
add
por
inc
xchg
mov
adc
(bad)
jbe
imul
(bad)
pop
in
adc
fadd
div
outs
inc
aas
movs
mov
add
sbb
(bad)
push
add
dec
jmp
pop
out
out
sbb
enter
movs
mov
bswap
int3
pop
das
leave
ja
es
mov
ins
rol
shr
(bad)
jle
jnp
add
loop
jmp
(bad)
or
xor
xchg
mov
cmp
jae
cmp
jle
adc
fist
dec
jae
imul
pop
aas
xchg
inc
(bad)
mov
cmp
cmc
movs
pop
out
mov
retf
dec
pop
fdiv
fbstp
pop
scas
retf
adc
or
push
xor
jmp
repnz
shl
pop
dec
and
movs
xchg
inc
daa
call
adc
(bad)
jp
dec
aas
popa
push
add
mov
sub
xor
mov
xor
not
lahf
mov
jne
scas
das
or
cs
ss
loopne
pop
xchg
test
daa
jns
gs
in
aam
test
jbe
ins
lods
std
outs
mov
xchg
sbb
out
loopne
pop
ret
sub
call
or
cld
(bad)
push
mov
push
mov
(bad)
push
xchg
mov
xchg
retf
jne
mov
mov
scas
inc
rol
mov
movs
jl
bound
xor
in
in
je
imul
inc
mov
retf
push
leave
adc
je
(bad)
outs
je
jmp
push
and
mov
jl
fld
mov
sub
pop
pop
call
jecxz
push
retf
clc
pop
aam
icebp
cli
pop
sbb
(bad)
jbe
ja
bnd
lea
lahf
cmp
mov
bound
data16
mov
xchg
into
fsub
adc
sbb
rcr
pop
enter
add
jmp
mov
sbb
cdq
sub
pop
sbb
pop
loop
call
mov
inc
mov
stos
arpl
movs
aaa
mov
push
(bad)
lods
int3
out
sbb
ins
xlat
add
pop
fbstp
ret
sub
(bad)
fld
(bad)
std
xchg
pop
lock
xchg
jecxz
les
ret
mov
repz
xchg
mov
leave
daa
in
pop
fldcw
xchg
or
call
adc
or
push
ds
call
mov
mov
and
jle
data16
es
mov
mov
shl
retf
jl
mov
dec
push
adc
popf
out
pop
add
retf
fwait
push
mov
cmp
xchg
xor
cmp
test
sub
jno
imul
jb
out
pop
inc
xchg
mov
and
(bad)
sub
jno
fisub
(bad)
arpl
movs
adc
sub
adc
dec
cmp
in
cli
test
enter
shl
and
(bad)
out
aam
xlat
jns
or
in
dec
inc
jne
movs
mov
retf
inc
rcr
push
cld
ins
adc
and
stos
mov
int
inc
xchg
out
movs
jae
add
adc
pop
lods
pop
and
jns
outs
fdiv
push
test
sbb
lea
jmp
jmp
mov
add
jns
pop
adc
imul
and
jno
jnp
and
out
(bad)
pop
fistp
or
mov
int
aam
mov
pushw
scas
popa
add
jne
mov
inc
lods
pop
mov
adc
stos
xor
out
aas
ja
loopne
adc
add
fild
inc
or
sbb
add
aam
out
in
push
lods
inc
outs
js
pop
ds
cmp
sub
addr16
mov
jp
push
jmp
mov
jmp
sbb
out
and
adc
push
pop
or
sbb
pop
jp
xchg
cmp
sbb
out
(bad)
arpl
cmp
dec
add
arpl
out
aas
dec
js
repnz
mov
adc
and
push
pop
and
cwde
mov
inc
popa
call
retf
fld
add
mov
sbb
rcl
es
jge
push
adc
inc
xor
fbld
sahf
push
mov
inc
jne
inc
push
aam
in
dec
push
fadd
or
ds
xchg
push
or
dec
fcomp
push
mov
lods
jnp
inc
xor
aas
mov
mov
push
in
mov
sub
mov
inc
xor
mov
das
mov
dec
or
inc
repz
pop
scas
adc
and
das
test
popa
lahf
pop
call
cdq
popa
lods
mov
fs
dec
dec
adc
xchg
sub
int3
adc
sbb
push
push
sbb
push
jge
jg
add
sub
cmp
mov
sub
jl
cmp
call
push
outs
(bad)
test
fdivr
inc
jns
or
mov
pop
push
stos
pusha
icebp
mov
mov
xchg
mov
and
push
inc
frstor
cmp
call
call
jns
push
cmp
cs
popa
ins
pop
adc
push
sbb
ror
and
adc
test
outs
mov
in
sub
jl
lods
daa
mov
mov
mov
and
mov
add
outs
ins
jae
retf
jnp
sbb
cmps
mov
mov
aam
(bad)
frstor
push
imul
call
mov
jle
movs
mov
leave
cld
mov
fild
sub
mov
inc
cwde
retf
mov
adc
pop
into
pop
mov
rcl
dec
or
inc
xchg
div
add
stc
mov
adc
push
mov
ret
imul
movs
and
push
jno
nop
mov
mov
pop
cmps
test
or
xlat
mov
ds
fwait
arpl
fmul
cmc
adc
sub
out
push
sbb
aad
jmp
push
fisttp
lods
stos
pop
and
imul
and
mov
adc
push
(bad)
sti
fidivr
pushf
ja
and
jg
pop
sub
cwde
cmp
jmp
inc
fs
inc
mov
push
pop
in
add
push
or
xchg
dec
add
push
sahf
aad
pop
mov
dec
or
lods
daa
push
lods
(bad)
loope
mov
push
test
cmove
jg
jne
mov
mov
pusha
dec
aas
mov
push
xchg
cmps
jne
jmp
cdq
popa
and
or
mov
leave
popf
or
inc
mov
jno
and
lahf
in
test
scas
(bad)
mov
mov
fst
xor
(bad)
mov
out
out
adc
movs
fdivr
std
jg
loopne
xchg
mov
mov
popa
out
fwait
or
cmp
mov
cmp
sub
mov
fisub
jmp
adc
pop
push
mov
or
ss
out
je
enter
outs
xchg
jl
dec
adc
push
js
or
in
loop
cld
ret
push
and
or
aas
retf
sbb
mov
outs
inc
leave
xchg
and
jbe
and
into
lds
mov
xchg
inc
pop
je
lea
and
xchg
inc
dec
push
out
jecxz
push
inc
inc
mov
mov
retf
dec
adc
jnp
sub
xlat
out
in
push
clc
movs
inc
xlat
(bad)
pop
lock
addr16
fsubr
fidiv
mov
ret
dec
xchg
dec
adc
vfmsubadd132ps
and
hlt
and
jnp
xchg
adc
loopne
fstp
in
ficom
and
sbb
call
test
fbld
sbb
shl
xor
ins
fadd
sbb
or
sub
mov
jb
call
xchg
lods
mov
outs
xchg
adc
aad
pop
xor
mul
jns
inc
pop
xchg
aaa
fldenv
sbb
jmp
mov
pop
adc
ror
leave
loope
fdivrp
xchg
stos
rcl
addr16
nop
jge
push
adc
data16
mov
inc
ret
lahf
or
xchg
or
fild
scas
lds
sar
and
cs
inc
dec
repz
mov
xor
jl
sti
adc
pop
sub
sbb
ins
jmp
shl
out
ins
push
dec
mov
jns
cmp
movs
aaa
sbb
psubsb
outs
pop
sbb
cmp
add
mov
in
sub
rol
js
in
mov
or
pop
fmulp
nop
adc
inc
popf
add
jp
in
mov
rcl
mov
mov
int
xor
aas
ja
or
sub
fidiv
inc
push
mov
repnz
push
inc
mov
aaa
lds
pop
es
mov
lock
mov
jecxz
(bad)
pop
inc
and
push
pop
xor
inc
fimul
and
movs
shl
iret
ja
test
in
xor
sub
outs
mov
les
xor
mov
in
xor
dec
lds
cld
push
or
or
jle
sub
int3
mov
(bad)
mov
xor
data16
or
out
mov
mov
xchg
retf
push
xchg
icebp
out
mov
xchg
fnstcw
cdq
push
xchg
cmp
stos
push
lock
ja
cld
mov
stos
xchg
(bad)
in
mov
sbb
push
adc
repz
neg
test
adc
jns
mov
je
hlt
mov
add
lds
add
fs
aam
scas
lock
jl
(bad)
popa
or
popa
aad
xor
jb
movs
mov
mov
clc
sub
push
cli
(bad)
mov
ss
or
push
aas
fs
out
mov
(bad)
pop
push
movzx
inc
dec
mov
pop
mov
add
test
retf
sbb
lahf
(bad)
stc
out
sbb
cli
loopne
popf
aam
push
inc
cmp
(bad)
sti
aas
cmc
jne
mov
pop
add
xchg
cmp
lahf
ror
cmp
push
mov
pop
fcmovnb
fld
xor
fimul
out
ins
push
mov
cdq
xchg
aad
ficomp
sub
cmp
push
ins
sbb
add
ficom
(bad)
dec
inc
xor
cmps
hlt
out
sbb
clc
mov
xor
mov
(bad)
adc
xchg
fadd
fisub
inc
xor
pop
push
arpl
out
sbb
add
inc
repz
mov
xchg
out
imul
in
ins
mov
rol
jecxz
(bad)
sti
fdiv
jp
pop
adc
fmul
sub
push
lods
xlat
in
jmp
nop
std
or
addr16
inc
jae
xchg
sub
shr
int3
dec
push
mov
shl
das
test
sbb
fnsave
loope
and
movs
js
or
psllq
loopne
ins
out
cmps
jae
cmovg
cs
cmp
cmp
mov
dec
mov
addr16
loope
aad
pop
test
fld
stc
push
xchg
loopne
loopne
inc
ins
ret
dec
test
inc
imul
adc
cmp
and
dec
push
dec
mov
mov
xchg
js
add
imul
inc
sbb
into
sub
adc
jmp
dec
mul
std
rol
iret
mov
xchg
or
cmp
mov
mov
xor
(bad)
fisub
ror
fdiv
jno
fwait
out
inc
or
cmc
jp
adc
inc
mov
ins
daa
push
fwait
cmps
xchg
sub
leave
fucom
mov
and
dec
rcr
or
xor
pop
mov
lods
xor
cli
mov
mov
call
out
sbb
sbb
sub
mov
jmp
loopne
jne
retf
pop
mov
sbb
out
mov
xor
cld
test
popf
xor
add
movs
mov
dec
cmp
nop
shr
repnz
ret
sahf
mov
cmp
imul
xlat
fcom
fcom
pop
scas
frstor
and
cmp
retf
jae
cmp
adc
pop
or
retf
(bad)
cmp
mov
mov
xor
loopne
cmp
ss
add
fld
call
or
ror
ins
sbb
mov
movs
(bad)
in
clc
adc
movs
sbb
rcl
lods
sbb
inc
test
xchg
jle
je
add
test
lods
ret
inc
ror
mov
xchg
adc
adc
stos
rcr
sub
and
ror
dec
pop
jp
les
xor
inc
jmp
fmul
aad
sahf
and
shr
pop
stos
call
mov
and
mov
in
imul
fdiv
or
out
data16
aaa
std
fucomip
(bad)
stos
out
mov
add
cmc
pop
test
popa
sbb
ds
mov
adc
sbb
mov
pop
sbb
sbb
sbb
sub
jg
add
shl
loope
and
imul
pop
xchg
or
inc
popa
popf
cmp
mov
cmp
cmp
ror
mov
lahf
gs
arpl
faddp
jg
xlat
dec
not
(bad)
sbb
mov
pop
enter
cmc
lahf
jmp
mov
out
xor
aaa
outs
fwait
clc
lea
call
iret
fisttp
fadd
jle
arpl
push
cmc
sti
mov
pop
mov
imul
mov
dec
inc
xchg
jo
and
xchg
and
mov
clc
dec
sbb
mov
sub
call
(bad)
clc
movs
cmc
popa
jnp
ret
sub
inc
adc
push
mov
xchg
cmp
inc
inc
in
mov
pop
xchg
inc
sbb
pop
push
cmp
sbb
retf
dec
jmp
daa
test
es
or
fsubr
cld
fisubr
sahf
pop
xor
pop
jno
pop
or
push
sbb
inc
loopne
xor
push
adc
in
inc
das
imul
out
rcl
repnz
pop
fild
jns
push
pop
gs
outs
mov
mov
pop
and
jmp
lock
shl
fs
movs
push
retf
ins
adc
mov
cmp
sub
cld
mov
push
mov
and
ins
stc
sbb
lahf
push
jae
mov
lock
inc
xlat
and
xor
xchg
inc
mov
jmp
int3
xor
cmps
jl
mov
push
ror
daa
jmp
inc
sub
mov
push
das
mov
mov
add
cmps
cwde
loope
add
outs
lock
fcom
xchg
lea
or
jecxz
in
fisubr
jge
xchg
sbb
dec
add
or
shl
cwde
push
jb
pop
lea
pushf
cli
test
pop
out
sbb
in
call
inc
cmp
je
mov
fisttp
xor
test
fstp
mov
jmp
add
mov
cmps
rcl
cmps
pushf
push
xlat
mov
pop
jb
and
inc
inc
sbb
pop
and
jl
inc
inc
(bad)
adc
fdivrp
std
ds
ins
outs
bound
and
cmp
and
sub
jno
sub
jl
addr16
ja
push
cmps
leave
repz
imul
push
or
xchg
daa
mov
sub
mov
jmp
mov
aas
pop
jmp
into
xor
loop
lods
fwait
mov
adc
aaa
in
adc
xchg
jmp
pop
mov
mov
mov
hlt
adc
dec
out
sbb
sbb
sub
imul
clc
jbe
cld
pop
loop
push
adc
or
cdq
(bad)
cmp
jmp
xor
scas
movs
dec
call
sbb
stos
(bad)
mov
adc
push
neg
ror
sbb
dec
mov
xchg
rcl
inc
and
cmp
jo
ss
dec
(bad)
pop
dec
test
mov
inc
cwde
mov
fs
fcomp
cwde
push
sub
fisubr
jno
jl
gs
jae
ja
inc
inc
ins
lods
adc
call
pop
mov
pop
lock
out
lahf
ss
ins
push
int3
fs
push
loop
aaa
jg
dec
mov
mov
stc
fistp
jmp
fwait
and
and
inc
je
jmp
jns
aam
rol
inc
and
fdiv
stos
outs
pop
xor
leave
and
shl
jl
xchg
inc
ss
inc
mov
cmp
mov
movs
jge
rcr
mov
sub
pusha
lods
imul
xor
jl
jmp
jo
das
fld
xchg
les
xchg
sub
xchg
pop
xor
imul
xchg
aaa
cmps
mov
xor
dec
in
pop
or
out
rol
adc
sbb
retf
add
push
or
dec
mov
and
adc
mov
aam
xor
jbe
mov
pop
sahf
sub
mov
shl
xor
push
ins
cdq
cwde
les
mov
ret
sti
mov
jp
xchg
outs
push
movs
jns
std
add
inc
arpl
popf
aam
mov
jo
adc
out
jns
adc
bound
sbb
xor
jp
punpcklbw
gs
stos
xor
stc
fwait
enter
jp
xchg
imul
xchg
xchg
repz
xor
popf
lods
cmps
mov
cmp
push
leave
push
and
ins
stos
data16
shl
jmp
(bad)
pop
mov
mov
mov
dec
xlat
inc
fistp
mov
add
sub
in
repnz
nop
call
mov
cdq
(bad)
pop
jge
fimul
imul
fstp
jmp
mov
hlt
xor
mov
ds
inc
xchg
push
add
push
(bad)
not
fidivr
ja
daa
sub
xchg
add
rol
maxps
mov
or
call
xor
pop
shr
dec
lock
shr
push
xchg
arpl
pop
mov
and
sub
adc
ffree
sub
fisttp
pop
pop
xchg
adc
pop
push
lods
call
dec
fwait
mov
jns
std
jns
rcr
adc
nop
and
outs
adc
fld
cmp
pop
mov
out
lea
iret
ins
cmp
fwait
ss
push
jg
push
mov
stc
stos
dec
sub
push
(bad)
out
adc
push
nop
in
ret
imul
test
and
xor
push
jnp
js
test
inc
mov
xchg
imul
je
xor
and
pusha
outs
cmc
push
rol
dec
rcr
popf
(bad)
cdq
retf
push
sub
lods
test
loopne
xchg
cmp
adc
cmps
enter
sbb
xchg
dec
outs
popa
inc
jb
xchg
pop
aaa
inc
jge
out
lock
data16
fs
out
mov
xchg
pop
nop
aaa
mov
adc
in
mov
xor
sbb
and
xchg
out
ret
hlt
mov
fiadd
pusha
leave
(bad)
add
outs
inc
push
std
or
adc
test
outs
rcl
and
push
jle
mov
push
mov
fs
(bad)
ja
movs
lock
jp
sbb
hlt
fisub
push
jae
jp
inc
add
movs
and
pop
xlat
and
rcr
cmc
(bad)
stos
nop
clc
xchg
cmc
ret
out
xchg
or
(bad)
sbb
ret
xor
out
mov
mov
sub
xchg
outs
inc
mov
sub
shl
rcr
popa
push
inc
bound
fiadd
pop
fnsave
jns
mov
pusha
inc
and
imul
mov
adc
ds
lds
cmp
mov
movs
aad
aad
inc
(bad)
popa
xchg
in
push
not
loopne
das
or
add
jno
or
xor
pop
test
cmp
ret
adc
sahf
ror
stc
inc
cmp
mov
into
cmps
jae
ins
ret
sub
pop
sub
xor
fmul
out
retf
stc
mov
ds
aam
jo
inc
cmp
cli
inc
movs
jmp
push
and
fs
(bad)
test
lahf
mov
mov
mov
dec
jb
pop
jle
xchg
jbe
hlt
jnp
pop
jmp
js
mov
into
mov
sbb
and
jmp
sti
fdiv
adc
or
or
scas
cld
mov
push
outs
das
mov
out
and
mov
jae
xor
call
mov
push
xchg
iret
les
jmp
stc
dec
dec
mov
mov
(bad)
sbb
xor
push
imul
dec
pop
cmp
pop
das
xchg
jle
scas
cwde
lds
add
clc
sub
out
pop
stos
es
or
dec
imul
sbb
push
ret
or
dec
es
inc
inc
imul
rcr
xor
fild
sar
dec
test
sub
out
inc
jp
dec
mov
and
lods
cmps
das
mov
mov
mov
fstp
outs
ror
sub
adc
std
pop
xchg
dec
(bad)
mov
jle
enter
leave
inc
sub
add
outs
fistp
dec
mov
and
hlt
les
xchg
or
mov
inc
push
push
adc
sbb
bound
fnsave
push
xlat
dec
lds
push
adc
sub
and
cmp
enter
stc
add
xor
out
sub
adc
or
pop
hlt
popa
in
sbb
rcr
inc
call
(bad)
push
jbe
shl
adc
cmp
scas
mov
inc
addr16
aas
xor
mov
xor
xchg
popf
xchg
sbb
dec
and
fucom
loop
imul
shl
and
mov
push
iret
mov
out
ror
pop
push
sahf
xchg
xlat
fsub
in
mov
mov
stc
sub
mov
(bad)
sbb
pop
cmps
mov
and
push
xor
sub
imul
mov
retf
popa
mov
jb
cs
test
mov
retf
mov
movs
pop
(bad)
outs
les
ret
nop
add
fld
add
ja
mov
sub
jle
jp
xor
dec
inc
lock
fcom
sbb
nop
adc
push
fdiv
adc
fiadd
inc
fbstp
fmul
fst
hlt
cmp
push
pop
aad
push
mov
mov
or
pop
test
sub
jne
iret
mov
(bad)
movs
(bad)
fnstcw
mov
sub
out
shr
test
and
adc
sub
jns
fld
jo
xchg
adc
mov
or
sub
mov
xchg
sub
into
mov
bound
jae
rol
mov
in
retf
jbe
mov
std
pop
jmp
rcr
xchg
repz
xlat
mov
adc
iret
clc
adc
je
cmp
fmul
inc
xor
sub
add
adc
hlt
test
(bad)
fisttp
fisttp
imul
push
pop
xchg
pop
xor
iret
mov
or
std
movs
imul
shl
clc
repz
jecxz
cli
adc
dec
dec
jno
cmp
jno
ret
pop
aad
in
xor
inc
retf
jmp
cmps
in
(bad)
fwait
(bad)
dec
inc
jo
mov
mov
lock
ss
das
xchg
and
push
hlt
mov
(bad)
(bad)
aam
sub
xchg
or
sbb
or
dec
not
push
scas
loope
stos
mov
cli
xor
pushf
(bad)
mov
and
cmp
pusha
pop
(bad)
or
xchg
sub
xchg
dec
pop
jecxz
jno
daa
out
adc
sub
dec
gs
stos
xor
dec
arpl
xchg
jecxz
jnp
mov
sar
ss
rol
add
aam
mov
ds
jp
rcr
xor
push
sub
or
(bad)
aam
pop
adc
jmp
aaa
outs
in
shl
cs
das
jo
fcom
pop
push
(bad)
mov
js
xor
xlat
retf
dec
out
cmps
xor
jle
mov
add
in
sbb
in
retf
in
or
or
iret
sub
cmp
mov
xchg
test
ret
ret
fdiv
(bad)
fcmovnb
pop
push
mov
aas
pop
inc
int
pop
sub
loop
(bad)
hlt
sub
or
cwde
aam
jb
aas
pop
add
add
mov
sbb
fisub
xor
push
fmul
ins
pusha
loopne
push
mov
sbb
and
mov
repnz
rcr
jnp
outs
(bad)
add
mov
mov
imul
sbb
sbb
popa
enter
pushf
mov
pop
mov
iret
mov
mov
fnstsw
xor
xor
add
add
repnz
pop
lock
jne
pop
mov
cwde
mov
jmp
rol
jge
pop
jne
cmc
xor
cmps
pop
push
(bad)
sub
fsub
push
sti
pop
imul
push
test
out
push
fwait
dec
push
shl
cmp
scas
xchg
int
fcomp
pop
push
dec
not
dec
nop
cli
cs
push
mov
(bad)
int
imul
fst
pop
ret
fisub
mov
mov
aad
xor
stc
sahf
cld
fdivr
jmp
loopne
nop
push
push
inc
sub
fstp
jbe
ja
lock
gs
sar
aad
cdq
sub
fsub
mov
aad
inc
out
adc
pop
out
sti
fcomp
psubsb
add
fwait
xor
mov
and
add
jb
pop
sub
lea
jno
cmp
sbb
enter
enter
js
pop
test
push
pop
and
mov
retf
push
(bad)
push
imul
push
in
outs
outs
dec
inc
xor
leave
cmps
dec
mov
fwait
pushf
mov
pop
inc
adc
and
fdivr
fstp
aaa
ins
out
push
in
in
imul
fs
pop
xor
stos
inc
dec
dec
jbe
mov
ss
lods
and
in
inc
addr16
aas
ds
push
das
mov
mov
test
and
nop
push
mov
ja
sbb
mov
xor
out
outs
rcr
aaa
pop
fwait
aaa
aam
mov
add
sbb
push
jp
pop
scas
xor
jg
or
cdq
and
aam
pop
inc
jecxz
and
jmp
dec
sub
mov
dec
lea
dec
jnp
fild
dec
into
ret
add
(bad)
cmp
lods
xor
or
jne
fcomp
pop
scas
xor
movs
mov
and
fld
mov
or
sbb
rcr
icebp
addr16
shl
dec
inc
mov
xchg
enter
adc
pop
shl
pop
sbb
mov
mov
add
popf
and
xchg
fstp
mov
xchg
pop
xlat
jbe
leave
jb
fimul
fst
mov
xor
mov
jo
(bad)
icebp
jns
push
xor
push
pop
pop
mov
jge
fs
dec
rol
imul
inc
adc
xor
out
mov
push
movs
(bad)
mov
mov
cmps
bound
mov
imul
pop
and
fsub
int3
cli
sub
mov
sub
stos
add
push
or
xor
in
add
loop
test
push
ja
xor
push
enter
or
pushf
mov
je
in
fisub
push
(bad)
movs
jne
jnp
es
inc
mov
cmp
das
add
and
in
xor
push
sbb
es
repz
mov
inc
sar
imul
jl
jae
cs
xchg
push
jg
or
out
or
into
sbb
inc
pop
rcl
(bad)
mov
inc
(bad)
loopne
add
add
in
or
jle
mov
sub
es
ss
pop
(bad)
jle
xchg
or
and
fs
enter
jge
and
aad
add
(bad)
jle
movs
push
loop
ins
lock
cmp
or
aam
or
and
sbb
push
jno
inc
xor
outs
lea
mov
sbb
outs
or
mov
jo
mov
xchg
or
adc
jb
scas
rol
leave
lods
xchg
aas
mov
sti
(bad)
cld
dec
jp
out
call
cmp
push
in
pop
jo
popf
xor
adc
ret
aas
or
mov
repz
push
push
sbb
push
push
xchg
scas
stos
or
ss
cmp
(bad)
imul
clc
mov
int
imul
test
movs
cli
retf
lahf
pop
mov
ds
jle
fst
nop
stos
add
imul
inc
mov
dec
test
push
das
pop
mov
push
jns
or
jno
or
cmp
mov
ret
fimul
xor
ins
push
cmp
fsubr
test
jb
bound
adc
stos
xchg
dec
mov
jo
mov
out
lds
sub
xor
scas
sub
out
push
fptan
jmp
sub
(bad)
mov
add
ror
fs
daa
push
mov
push
xchg
lods
mov
push
inc
and
in
(bad)
ins
dec
add
retf
cmp
mov
retf
jg
popf
push
mov
mov
jns
cdq
test
cvtps2pi
push
aad
or
add
lods
and
(bad)
dec
lods
or
lods
clc
xlat
push
stos
and
fdivr
mov
jmp
ds
xchg
mov
mov
pop
arpl
push
xor
pop
out
sbb
sub
aad
fucomp
fld
mov
xor
lods
dec
push
lahf
popf
inc
popf
xchg
clc
cmp
clc
cmp
mov
nop
xlat
push
pop
les
clc
pop
add
(bad)
into
and
dec
call
in
das
lahf
jae
test
add
sbb
icebp
and
fld1
scas
pop
add
shl
sub
cmps
xor
out
daa
test
repz
sete
in
fbstp
scas
xchg
cmps
xor
or
mov
mov
shl
mov
dec
loop
sbb
je
stos
push
in
pop
ja
loop
mov
mov
adc
fst
js
or
push
jae
pop
hlt
test
inc
mov
xor
leave
pop
adc
dec
or
test
es
sub
inc
and
or
and
inc
xchg
dec
push
call
iretw
pop
pop
sub
jl
retf
xchg
sub
xor
sbb
add
cmps
out
sub
dec
xchg
push
mov
and
jnp
ret
mov
cli
pop
jl
sbb
imul
xor
dec
sbb
mov
outs
mov
inc
stos
or
mov
int3
popf
gs
mov
out
fcmovb
fist
test
jl
jne
popf
jecxz
dec
jbe
cmp
shr
clc
frstor
in
pop
jb
idiv
int3
call
sbb
mov
rol
lahf
mov
lahf
neg
pop
shr
pop
and
movs
stos
js
mov
sub
xlat
repz
mov
fmul
pop
dec
pop
(bad)
pop
test
cdq
das
or
add
ret
hlt
in
mov
adc
aas
mov
mov
cwde
xchg
aad
xchg
int
jno
mov
scas
addr16
pop
sbb
es
call
mov
and
cld
or
jmp
(bad)
fstp
clc
popf
sub
jnp
sub
pop
sub
ins
leave
shr
pushf
cmps
jmp
jnp
pushf
sub
mov
add
ret
stos
pop
(bad)
retf
or
jno
out
mov
jb
xchg
mov
jbe
mov
push
dec
sub
sub
ins
loopne
neg
mov
shl
call
mov
pop
sub
mov
ret
es
mov
inc
lock
inc
test
add
inc
jae
mov
mov
xor
adc
adc
adc
jb
fcmovu
xchg
push
xor
jecxz
lahf
(bad)
mov
fistp
(bad)
das
add
scas
sbb
in
mov
neg
mov
xchg
inc
jle
sbb
lock
jmp
sbb
push
or
sbb
scas
cmps
outs
movs
inc
dec
jae
mov
or
cli
cmp
cmc
dec
add
sub
js
imul
cmp
inc
retf
rcr
out
mov
or
xor
icebp
pushf
push
push
cdq
xchg
jo
push
inc
(bad)
cwde
scas
mov
pushf
out
add
das
fxch
cmp
mov
rol
mov
xchg
fisubr
push
jns
adc
popf
jecxz
xchg
cmps
inc
xor
in
sbb
imul
dec
jmp
addr16
adc
je
pop
mov
xor
add
xchg
mov
mov
fcmovb
popa
stos
cmp
aam
mov
lahf
out
enter
jmp
xchg
loop
and
ins
data16
jb
pop
add
cmps
sub
lods
and
daa
cdq
fcom
(bad)
mov
clc
sbb
or
imul
jno
sub
sbb
xchg
sub
jbe
in
cmps
mov
jno
ficomp
or
lds
or
ins
and
dec
inc
icebp
stos
jnp
mov
fbstp
sub
loope
ror
fisub
cmp
je
xor
sbb
cmp
cmp
xchg
xor
lock
jbe
push
adc
adc
pop
jge
push
lods
outs
lods
rcl
xor
add
dec
push
push
xchg
inc
inc
fwait
fwait
arpl
(bad)
or
push
sub
sub
dec
dec
pop
sar
in
stos
clc
ins
outs
mov
jecxz
pop
jb
mov
pop
pusha
fwait
jo
retf
mov
and
mov
inc
jbe
imul
mov
in
mov
test
jmp
jmp
jmp
cmps
or
lock
cmc
mul
add
jo
jg
addr16
adc
sbb
cmps
or
movs
in
jle
adc
push
cwde
stc
push
loop
cli
ret
clc
(bad)
jb
jne
sub
dec
les
cmp
sti
xchg
dec
inc
repz
dec
pop
iret
popaw
fcomp
mov
test
xor
or
mov
push
mov
in
inc
sbb
xor
jmp
sub
sub
adc
and
in
cwde
fcom
jmp
jge
xchg
ret
xor
test
loopne
mov
pop
xor
movs
movs
lea
adc
pop
push
mov
mov
mov
sub
into
jbe
dec
pop
dec
test
push
adc
popa
in
lods
mov
pop
cwde
pop
outs
movs
in
in
jno
push
in
scas
dec
adc
aaa
or
jnp
sbb
imul
mov
test
outs
pop
cli
mov
fs
xor
mov
fimul
dec
or
sub
jle
das
call
xor
push
fwait
lods
cmps
pop
gs
xor
pop
push
popf
sbb
sub
push
pop
pop
mov
xchg
das
ss
push
push
sbb
inc
xor
scas
xchg
test
jmp
les
pop
sti
shl
and
sub
jl
sti
mov
xlat
gs
adc
sbb
mov
push
push
sub
cwde
addr16
jnp
mov
call
and
ss
mov
adc
jne
movs
dec
les
pop
adc
icebp
cld
cmc
and
cdq
jnp
add
lods
sub
stc
(bad)
jge
mov
add
popf
push
arpl
mov
jmp
jp
mov
mov
stc
jbe
(bad)
pop
add
fs
add
push
in
lods
daa
je
sbb
aas
sub
pop
lahf
inc
or
sub
in
(bad)
jb
sahf
shl
xchg
mov
xor
les
out
fidivr
cmps
je
aas
dec
aam
mov
clc
je
mov
cmc
inc
add
fstp
inc
xor
pop
mov
pushf
bound
dec
cmps
div
daa
cmp
xchg
daa
sub
lahf
fwait
pop
jbe
dec
das
xchg
lds
xchg
arpl
xor
dec
mul
retf
jmp
cwde
(bad)
jnp
stc
add
mov
or
es
sbb
mov
pop
ja
or
inc
xor
sahf
mov
push
push
push
mov
aaa
sbb
repz
repz
nop
mov
lds
xchg
retf
jns
jbe
data16
cld
sbb
mov
or
xchg
jne
inc
lds
pushf
jae
inc
(bad)
mov
ins
retf
sub
pop
mov
fist
bound
pop
retf
push
adc
sub
loop
scas
xlat
sar
push
test
iret
sbb
sub
idiv
into
sub
xlat
mov
stos
dec
mov
(bad)
dec
addr16
mov
test
jp
mov
test
stos
ss
jo
aad
push
int
fucomi
add
push
mov
pop
jecxz
rcl
cmc
jae
fcom
or
mov
xchg
add
imul
loop
mov
adc
inc
jecxz
das
in
xchg
iret
jmp
add
jmp
imul
xlat
jno
sub
mov
into
daa
cmp
xor
or
ror
das
mov
cmp
push
outs
sbb
cld
pop
dec
aas
inc
adc
dec
call
jno
ror
clc
mov
xchg
ja
xchg
das
adc
test
retf
cmps
sbb
addr16
and
ss
adc
les
jle
push
call
xchg
mov
sbb
push
aam
adc
repnz
xchg
mov
and
sub
ds
jecxz
dec
jmp
cmp
jae
(bad)
sar
data16
mov
inc
xor
jb
sub
push
stos
mov
mov
mov
in
xchg
inc
movs
and
mul
(bad)
xor
sbb
out
or
loopne
sahf
mov
push
inc
jecxz
add
test
call
das
mov
sti
cs
push
push
mov
test
scas
shl
or
popf
jno
bound
sbb
push
push
sbb
push
sar
in
es
push
push
cmps
mov
shr
or
push
jmp
bnd
xor
jl
outs
xchg
loopne
mov
(bad)
mov
leave
xor
test
jns
pop
cmp
jl
icebp
mov
inc
pop
inc
mov
popf
push
mov
daa
cdq
mov
mov
stos
jb
xlat
mov
call
and
pusha
cmp
sbb
das
xor
aam
and
jmp
ret
mov
rol
push
sar
mov
cld
jbe
outs
jg
inc
ss
test
in
or
mov
aaa
mov
hlt
sub
cmps
scas
xor
aam
pop
mov
xlat
aaa
dec
imul
adc
sbb
pushaw
mov
xor
out
repnz
mov
pusha
adc
test
cmp
pop
mov
ins
push
xor
push
ins
fist
push
stos
rol
es
mov
sbb
push
cli
push
sub
shr
lds
mov
mov
pop
xlat
cmp
push
jo
std
jp
push
mov
pushf
ror
cld
jbe
sbb
packssdw
and
daa
add
stos
lea
push
sbb
rcr
push
mov
(bad)
rcr
fs
cmp
or
fisub
ins
jg
movs
inc
adc
icebp
ds
adc
jge
loopne
(bad)
mov
xchg
sbb
xchg
(bad)
movs
lea
sub
mov
int
mov
inc
xchg
fcomp
fimul
test
dec
fld
daa
add
push
call
push
push
clc
dec
push
sahf
add
neg
xchg
or
aad
pop
xchg
xchg
rcr
mov
outs
in
(bad)
aaa
gs
cwde
mov
ins
outs
xchg
xchg
retf
imul
mov
test
sbb
xchg
ficom
pushf
xchg
repz
push
inc
jl
ret
sbb
and
sar
fwait
or
inc
mov
jp
sti
push
mov
clc
aad
aas
inc
ja
jnp
int
xchg
mov
sub
dec
mov
cmc
cmp
push
pop
add
cmc
jae
cmp
fcomp
movs
movs
xchg
(bad)
fcomp
dec
xchg
popf
add
cmp
inc
outs
inc
and
bnd
das
cmp
push
in
push
add
and
fsubr
adc
mov
push
cwde
mov
jmp
fdiv
das
mov
dec
cmp
mov
dec
mov
les
stc
sub
mov
jg
xchg
add
or
hlt
pop
sub
jbe
pusha
push
cmps
add
aam
shr
xchg
loopne
out
add
call
adc
mov
pop
mov
ficom
cmp
cwde
dec
not
retf
(bad)
hlt
add
dec
jmp
and
out
cmp
cwde
jge
lods
cli
push
sub
in
rcl
xor
(bad)
xor
adc
test
test
adc
fs
ss
xchg
pop
add
mov
outs
mov
xchg
xchg
test
mov
out
dec
stos
lock
inc
aam
cmp
xchg
enter
pop
mov
aaa
push
cld
cmp
leave
mov
adc
sbb
and
fidivr
add
into
outs
pop
lods
or
mov
aaa
xor
dec
pop
pusha
mov
cld
sbb
lods
iret
out
inc
mov
xchg
stos
cs
add
fs
push
cmc
inc
jecxz
xchg
jb
push
cmp
(bad)
sbb
or
pop
add
daa
aaa
push
cmp
add
loop
test
cli
inc
xchg
clc
jge
daa
and
mov
hlt
aam
iret
add
jp
outs
adc
(bad)
(bad)
mov
dec
test
pop
adc
sbb
push
sbb
ret
sbb
jle
jae
and
xchg
int
pop
loopne
in
(bad)
enter
lea
jl
outs
pop
cmp
das
mov
out
push
pop
cmp
push
test
mov
lea
out
jg
fwait
loop
dec
(bad)
jge
ds
iret
mov
mov
cdq
sahf
lods
cmps
retf
and
arpl
and
cmp
cmp
fbstp
push
call
(bad)
call
aam
adc
dec
push
push
in
push
sub
rol
cmc
popf
sti
mov
(bad)
and
(bad)
lods
arpl
scas
mov
add
retf
inc
jp
xchg
push
cld
adc
cmp
dec
loopne
mov
lea
pop
(bad)
cmps
push
cmps
add
mov
test
xchg
mov
test
sub
xchg
rol
mov
js
adc
stos
jb
cmp
outs
inc
aas
xchg
int3
mov
scas
jns
scas
xlat
or
scas
(bad)
pop
call
cld
jl
div
ror
push
add
shl
inc
div
inc
xchg
push
jbe
add
inc
sub
test
imul
(bad)
dec
scas
mov
sub
adc
adc
xor
add
xchg
push
outs
xor
xlat
mov
fistp
jb
retf
jb
xlat
in
add
jno
(bad)
test
mov
rcr
shr
mov
jmp
sti
jecxz
xlat
les
(bad)
mov
jbe
xor
pop
dec
xchg
in
ins
out
popa
push
add
mov
das
rol
cmovae
gs
adc
and
imul
and
cmp
sahf
xor
repz
cmps
add
pop
pop
cdq
lods
pop
test
int3
shr
nop
sbb
aas
xchg
lahf
jmp
int
xchg
rol
(bad)
test
popf
xchg
jmp
ins
int3
mov
out
bound
(bad)
jno
fdivr
sub
mov
or
xor
or
(bad)
repnz
jnp
cmps
(bad)
pop
sbb
cdq
retf
popa
shr
mov
fisttp
jge
sbb
cmps
and
cmp
cmps
mov
mov
pop
ss
dec
pushf
ret
add
and
push
jmp
jle
xlat
rcr
call
add
jmp
add
add
in
jne
hlt
pusha
dec
ins
fcom
cmp
in
mov
stos
cli
movs
out
sbb
mul
or
sub
jbe
mov
das
js
nop
mov
ds
or
or
cli
mov
mov
xor
fistp
mov
dec
fwait
arpl
push
cmp
loopne
pop
imul
or
dec
jb
mov
pop
call
enter
movs
call
(bad)
aas
xchg
enter
cdq
arpl
ss
or
call
sub
je
(bad)
call
cmps
cmp
call
xchg
ficom
mov
ss
inc
jmp
sub
lock
mov
arpl
mov
out
lods
pop
cmp
imul
mov
add
mov
cmp
dec
pop
mov
fist
pop
(bad)
into
std
mov
inc
inc
jae
mov
loop
push
sub
leave
inc
ficom
sub
mov
lahf
push
repz
jno
fcomp
cmps
imul
mov
dec
inc
loop
adc
mov
and
lods
cmp
inc
loop
and
and
test
mov
xchg
loop
pusha
retf
test
cmp
jg
add
mov
jecxz
mov
and
fadd
push
ret
mov
hlt
iret
popf
and
and
cwde
scas
cmp
pop
xlat
adc
scas
into
lds
xor
jg
mov
in
adc
cmp
test
rcl
shl
push
cs
adc
add
mov
mov
jb
nop
ss
ins
shr
xor
mov
out
inc
or
adc
and
or
mov
mov
sar
out
ins
xor
paddq
cwde
leave
and
in
dec
sub
jb
and
dec
dec
sbb
xlat
in
or
pop
retf
xchg
inc
cdq
dec
pop
sti
jl
mov
fld
cmp
adc
fisttp
loope
sti
and
and
pushf
mov
fst
(bad)
and
sub
xchg
shl
and
push
cmc
xchg
out
pushf
jge
in
inc
adc
mov
sub
int
ret
or
jmp
pop
dec
icebp
pop
sbb
xchg
(bad)
adc
sti
imul
sub
jmp
call
ja
outs
pop
push
xor
push
push
mov
fld
push
aaa
xchg
fst
jbe
stos
cmps
fwait
push
xchg
sub
ins
int3
outs
sbb
out
xchg
dec
mov
jno
sti
mov
ins
cmps
mov
pop
iret
cmps
mov
movs
and
push
inc
in
out
ds
test
push
adc
popa
aam
jle
mov
ins
test
cmp
cmps
dec
cmc
outs
mov
cwde
in
adc
clc
out
retf
ret
sbb
iret
adc
sar
push
mov
pop
adc
cmp
xlat
sub
mov
cmps
psubb
les
aas
cld
sbb
popa
jbe
dec
out
outs
mov
lods
pop
mov
pop
stc
dec
lock
bound
cs
mov
mov
pusha
int3
(bad)
shr
sbb
dec
sub
add
in
aaa
or
mov
scas
push
sub
sbb
xchg
pop
into
aas
push
push
dec
lahf
sahf
add
shl
sbb
dec
aaa
xchg
aad
test
aaa
jl
daa
js
mov
arpl
sbb
xor
or
mov
dec
shl
aam
jne
es
addr16
push
test
jmp
jecxz
(bad)
jg
xchg
jl
or
addr16
xchg
xchg
pushf
pop
daa
fst
xor
mov
shr
fimul
sbb
in
loop
sbb
int3
fxch
fisttp
out
lods
ret
cmps
sbb
dec
xor
pop
in
inc
mov
adc
xchg
les
lds
mov
inc
push
call
push
shl
xchg
mov
imul
out
cmps
(bad)
jb
mov
mov
jmp
pop
sub
pop
cld
rol
outs
add
daa
out
adc
push
pop
inc
push
adc
(bad)
adc
cmc
mov
xchg
xchg
(bad)
or
cmp
cmp
add
push
lods
or
sub
mov
cmp
lds
test
je
in
scas
push
inc
das
add
cmp
rol
sar
out
dec
or
jae
cmc
jne
push
loope
lea
add
mov
pushf
repnz
cmc
lods
test
(bad)
sbb
adc
mov
retf
dec
mov
mov
ja
int
pop
aas
inc
jb
in
pop
ffreep
cmp
dec
cld
adc
ja
xor
adc
adc
daa
xor
inc
scas
and
dec
cmp
add
popf
retf
pop
imul
mov
fadd
jg
sub
push
out
leave
jge
dec
push
sbb
push
mov
xchg
mov
or
imul
inc
lods
xor
xor
stos
inc
xor
sbb
(bad)
icebp
nop
movs
sub
pop
in
add
popf
arpl
(bad)
out
ja
push
sahf
pop
movs
push
sub
out
enter
sbb
and
scas
cmp
mov
and
mov
sub
xor
add
ins
xor
movs
js
loope
sbb
sub
xor
dec
cmp
mov
and
sbb
cmps
daa
push
adc
movs
xlat
dec
stc
movs
cmp
in
xchg
ds
jle
pop
xor
add
and
add
pop
sbb
jecxz
dec
retf
test
call
jmp
fisub
dec
xchg
mov
into
cmc
cmp
out
popa
es
jbe
in
mov
retf
(bad)
stc
fnsave
xchg
push
mov
xor
push
jae
in
or
dec
(bad)
into
jo
xor
ins
rol
rol
push
clc
lods
xlat
pop
pop
shl
add
clc
out
push
sbb
jge
test
ja
aas
cld
xor
mov
cmp
cmp
sbb
es
mov
cli
std
out
dec
sub
ret
sbb
outs
rcr
or
scas
mov
retf
fcmovne
or
mov
out
fst
pop
sub
sbb
ret
pop
xchg
test
js
scas
cli
leave
nop
icebp
movs
test
mov
dec
sahf
(bad)
adc
adc
movs
and
int3
fstp
les
imul
sbb
or
pop
mov
pop
mov
adc
daa
das
pop
sub
test
inc
adc
ins
loop
or
lock
(bad)
jns
or
cmp
imul
sub
sahf
jae
sub
cmp
or
fmul
xor
mov
push
pop
ror
sbb
dec
pop
popa
js
loop
outs
cmps
cmp
pushf
xchg
add
pop
ror
mov
mov
add
jge
mov
(bad)
xor
or
or
jbe
int
ret
inc
enter
enter
xchg
int3
loope
mov
xchg
(bad)
test
dec
sbb
in
js
push
(bad)
sti
push
xchg
sti
add
test
jecxz
push
pop
mov
and
int
add
xor
push
xchg
xchg
inc
es
ret
adc
aam
mov
adc
imul
daa
jae
rol
push
bound
cli
pop
enter
por
push
loop
(bad)
adc
push
pop
test
xor
aas
ins
xchg
dec
xlat
jg
or
sbb
add
xor
ins
cdq
mov
jle
sub
xchg
in
(bad)
adc
and
std
mov
scas
and
hlt
pop
dec
fisttp
jl
mov
rol
test
dec
pop
or
sbb
clc
(bad)
adc
pop
pop
stos
lahf
inc
lahf
in
mov
sbb
push
out
jnp
cs
jne
or
push
mov
sbb
xor
mov
fdivr
cmp
icebp
add
pop
and
in
dec
dec
pop
cmp
leave
mov
ficom
lahf
add
lahf
mov
xchg
jg
fistp
ror
mov
dec
inc
jle
test
mov
sbb
xchg
aaa
or
mov
sahf
test
sbb
out
push
(bad)
sub
push
sar
loope
pop
xchg
adc
mov
fwait
mov
push
push
jecxz
pop
fcom
daa
repnz
push
fdiv
aaa
enter
or
(bad)
retf
inc
inc
mov
adc
or
into
mov
out
push
xchg
jmp
mov
fidiv
and
retf
(bad)
in
neg
push
jp
jns
test
add
cdq
pusha
pop
enter
addr16
dec
repz
test
retf
xor
ins
call
repz
add
mov
add
call
fmul
inc
(bad)
sbb
pushf
rcr
ds
sbb
out
call
iret
ja
call
in
cwde
pop
adc
ret
adc
out
daa
(bad)
sub
cwde
inc
hlt
iret
xchg
bound
das
xchg
sbb
sub
in
les
fsubr
jl
inc
or
es
sbb
jmp
mov
jmp
or
cmp
out
cld
(bad)
add
cmp
jo
jecxz
mov
jp
enter
repnz
cmp
inc
inc
dec
pop
push
por
gs
cld
sub
lods
dec
sbb
lods
and
cmc
mov
cmp
mov
std
jns
push
mov
add
fadd
mov
jns
and
dec
movs
pop
in
and
enter
sbb
(bad)
mov
push
iret
fsubr
fnstcw
mov
sti
cwde
pop
xchg
repnz
call
in
mov
jno
mov
pop
pushf
mov
adc
loope
popa
cmps
test
js
pop
inc
cmp
jae
push
adc
pop
arpl
sbb
xor
cmp
cld
xor
int3
pop
enter
sub
pop
enter
jecxz
imul
loop
fnstcw
add
add
cmp
or
das
add
lods
clc
in
pushf
adc
xor
ret
ins
mov
out
and
push
push
sti
jmp
cdq
mov
std
icebp
push
in
loopne
fdivp
aaa
pop
retf
shl
rcr
stc
fcom
xor
cmp
aam
push
mov
enter
mov
xor
xor
jecxz
and
jecxz
out
enterw
enter
mov
into
xchg
pop
and
jle
imul
ss
push
push
iret
scas
shl
dec
inc
xchg
addr16
xchg
mov
lds
in
popf
sbb
dec
call
pop
retf
jno
retf
xchg
cmp
push
push
xchg
cmc
ds
pop
ins
outs
adc
jle
ins
(bad)
jb
lock
sbb
fnstenv
jno
or
inc
shr
enter
sbb
lods
aas
loope
push
nop
mov
xor
mov
inc
pusha
mov
cli
lahf
jne
add
mov
mov
adc
adc
xor
test
mov
xchg
add
out
mov
dec
mov
pop
push
jo
mov
mov
push
lea
stos
daa
test
test
pop
call
push
inc
and
or
(bad)
and
fisttp
imul
ret
sub
and
ret
movzx
cs
adc
or
cli
and
adc
test
cld
ror
aad
mov
mov
mov
ds
scas
sar
fs
sbb
adc
dec
aaa
dec
vandnps
sbb
ret
inc
or
lods
mov
push
loope
adc
test
jmp
popf
in
cs
xchg
dec
aam
inc
add
in
pushf
and
add
sbb
or
xchg
sbb
xor
inc
xor
cmp
mov
mov
rcl
push
outs
out
ja
xchg
fistp
xchg
mov
ds
repnz
(bad)
call
(bad)
jnp
sub
mov
push
jp
and
lods
nop
push
rcl
in
(bad)
mov
jb
cmp
adc
sub
xchg
mov
mov
cld
adc
mov
cdq
add
into
(bad)
outs
push
popf
sbb
or
jo
adc
xor
fiadd
pop
mov
push
or
aas
xchg
call
sbb
cmp
inc
mov
ja
std
aaa
sbb
test
addr16
aas
and
mov
or
clc
repz
push
mov
jns
or
mov
test
xchg
xchg
sub
cwde
mov
or
or
fcom
ficom
enter
icebp
and
je
pop
mov
addr16
push
adc
xor
jecxz
push
call
leave
(bad)
cmp
stos
aad
jp
(bad)
loop
loope
(bad)
inc
jb
jnp
jno
xchg
fcom
movs
push
mov
cmc
mov
push
dec
inc
es
shr
scas
fisttp
dec
adc
xchg
push
retf
mov
loop
add
bound
jmp
call
xchg
sub
retf
movs
mov
ja
mov
xchg
ins
scas
popa
jecxz
xchg
xor
dec
movs
aaa
mul
(bad)
repz
xor
dec
cmp
xchg
leave
ins
push
ins
xor
lods
stc
or
ins
mov
xor
hlt
lahf
pop
scas
push
test
in
(bad)
sub
fbstp
cdq
dec
mov
cmp
push
mov
cmp
sbb
ror
cmp
or
ins
sub
xchg
or
(bad)
je
addr16
add
pusha
push
cmp
sub
shl
lea
out
or
mov
cmp
mov
aaa
stc
xlat
cmps
imul
lds
ss
jnp
mov
jno
ffreep
lods
lock
aas
shr
xchg
ror
int
ins
and
stos
ja
sub
loope
mov
sub
mov
lods
rcr
push
enter
adc
test
jg
pop
inc
call
jae
mov
scas
idiv
mov
cmp
pop
or
jp
sub
shl
add
inc
hlt
mov
cmp
loop
inc
inc
dec
xchg
mov
fst
pop
jnp
cli
loop
popa
(bad)
xor
pusha
out
adc
sub
xor
jg
pusha
push
test
pushf
xor
inc
sub
mov
stos
rcr
jnp
dec
dec
mov
and
loope
add
cwde
or
push
out
push
test
add
cmp
jno
inc
dec
popf
jmp
rcl
and
dec
xor
inc
pop
adc
call
sub
in
adc
push
push
pop
(bad)
popa
pop
test
mov
xchg
es
xor
push
cmp
stos
inc
lahf
mov
xor
xor
call
push
add
daa
mov
(bad)
mov
call
leave
jmp
mov
mov
sbb
aam
fs
xor
rcl
push
jb
inc
xchg
jecxz
loop
dec
xor
cmp
mov
cs
scas
sar
sub
pop
inc
push
sub
mov
fiadd
push
iret
sbb
in
lds
pop
xor
sahf
les
std
push
repnz
jle
sbb
add
iret
aaa
cmp
adc
adc
xchg
sub
mov
fst
add
aad
ret
cmp
jg
ins
inc
sbb
or
mov
push
wbinvd
inc
adc
add
xchg
bound
push
pop
addr16
jl
fcomip
(bad)
cld
mov
icebp
sbb
dec
xor
jmp
mov
push
aas
(bad)
fcmovnu
faddp
into
push
mov
push
imul
movs
mov
out
ss
or
loop
mov
clc
jno
pop
mov
sub
cmp
mov
outs
and
cmps
push
and
nop
cmp
cmc
daa
mov
sub
adc
mov
inc
int3
loope
call
adc
clc
ret
dec
add
cdq
mov
in
daa
cmc
fbstp
sub
push
sub
scas
fnstcw
std
iret
sub
cmp
add
repz
jle
aad
cmp
xchg
les
xchg
retf
pop
jnp
neg
or
fs
xchg
repnz
retf
dec
xor
xchg
sub
test
shl
jbe
movs
out
push
test
rcl
data16
jnp
xor
inc
(bad)
cmp
inc
and
outs
mov
pop
cs
mov
ret
xchg
and
jle
xchg
pop
fwait
xchg
xchg
dec
arpl
addr16
shr
loop
out
and
sahf
leave
mov
out
pop
or
aad
pop
ss
inc
cmp
cmp
test
and
test
and
and
rol
jnp
push
and
adc
pop
sub
mov
cdq
add
arpl
mov
popf
dec
data16
dec
jnp
cmp
jg
mov
out
rol
mov
lahf
hlt
jbe
mov
jne
mov
loope
adc
gs
ss
xor
adc
push
cmps
xor
jmp
push
sub
pusha
sbb
daa
sbb
in
nop
sbb
mov
cmp
and
pop
test
xchg
out
dec
rcr
loopne
movs
or
pcmpgtd
fldcw
cwde
push
jmp
dec
daa
jne
test
mov
mov
or
inc
call
inc
ins
sti
movs
scas
out
mov
add
xchg
push
mov
in
test
push
(bad)
cmp
dec
xor
mov
dec
xor
push
mov
lds
hlt
xor
pop
cli
out
fwait
or
outs
fldenv
leave
pop
or
dec
fwait
cli
call
test
dec
fdivr
out
inc
aas
cmps
or
not
out
cmp
lock
ret
out
adc
aas
imul
jg
sbb
mov
xchg
mov
add
jns
push
js
jns
xor
in
sub
push
outs
ror
push
mov
sub
jo
jl
jnp
and
repz
inc
xchg
push
mov
out
or
mov
repnz
ret
(bad)
adc
retf
fmul
sub
jge
(bad)
and
xchg
iret
outs
inc
mov
push
jle
je
in
mov
arpl
je
into
dec
cmp
push
pop
std
test
or
push
stos
jmp
pushf
lea
popa
sub
mov
into
mov
fs
ret
xlat
test
daa
fisttp
lods
sar
ret
clc
xchg
or
mov
lds
enter
cmp
in
dec
cwde
jmp
mov
mov
dec
in
inc
cmp
shl
punpcklwd
int
adc
out
lods
enter
xchg
hlt
pop
mov
jmp
ja
(bad)
fs
rcr
std
or
dec
sti
scas
cmp
out
mov
call
daa
mov
adc
or
push
loopne
aaa
xor
sbb
mov
push
adc
dec
iret
fwait
out
mov
stc
ret
lock
pop
int
fucomp
pop
adc
jmp
into
aaa
fadd
jbe
mov
nop
lods
jmp
sahf
cmp
cmps
xor
scas
aam
mov
sub
in
xchg
test
iret
aam
add
jmp
push
cmc
addr16
outs
inc
xchg
jp
xor
push
sti
pop
cmp
dec
jecxz
mov
jg
popf
inc
pop
push
and
div
out
rol
mov
sbb
cmp
fld
and
clc
inc
and
xor
sub
and
sbb
xchg
retf
jns
sbb
dec
sub
retf
ja
mov
(bad)
xor
pushf
add
jns
mov
lds
ins
sub
in
scas
mov
repnz
or
sub
loopne
test
sbb
inc
xlat
mov
jle
xor
push
jmp
call
add
mov
lods
mov
and
cmp
into
sbb
retf
or
fimul
ins
into
ins
pop
push
jp
jp
dec
sahf
jg
aas
cmp
(bad)
fcomp
fstp
out
adc
daa
mov
shl
sub
inc
out
fdivp
xchg
push
shl
inc
dec
ins
and
enter
push
jmp
mov
jge
adc
dec
mov
lods
xchg
lea
das
lock
iret
dec
stc
(bad)
fsub
ins
and
mov
cs
or
or
cmp
into
movs
addr16
imul
xchg
jle
adc
sbb
xor
mov
or
stc
adc
sbb
ror
adc
and
xchg
mov
adc
or
mov
lods
fistp
xor
pop
push
mov
ror
pop
xchg
(bad)
jmp
outs
sbb
mov
sti
push
test
dec
ret
pop
fs
test
add
fldenv
cmp
aaa
hlt
es
push
jne
sbb
or
push
sub
jnp
jp
(bad)
pushf
push
ins
ret
int3
mov
jbe
inc
add
(bad)
mov
test
mov
ret
mov
loope
test
jge
imul
adc
jo
adc
adc
jp
hlt
je
ins
cs
push
in
lea
sub
jno
int3
test
outs
out
pushf
xor
fwait
add
and
adc
pop
cmp
ror
stos
std
push
adc
daa
int3
movs
das
imul
mov
fwait
adc
ret
ss
cmps
shl
jmp
fld
std
imul
push
push
sar
clc
mov
cmps
pop
out
stos
xchg
push
pop
sbb
xor
fwait
cs
dec
mov
mov
stc
fidivr
jae
lods
push
add
adc
adc
sti
push
out
dec
in
jnp
cli
imul
pop
int
call
pop
je
seta
aaa
cmp
and
imul
jmp
rol
in
out
cli
test
inc
add
repz
int3
and
frstor
lds
aas
xchg
cwde
ret
call
loop
in
xchg
push
retf
or
les
or
dec
mov
rol
mov
pop
pop
lock
ror
jnp
popa
data16
add
adc
jo
je
xchg
leave
std
push
cs
push
fwait
imul
lods
xor
inc
pop
imul
lods
push
aaa
jl
gs
cwde
ds
dec
inc
xor
xor
adc
mov
mov
cmp
addr16
xor
xchg
bound
cmp
aad
into
into
(bad)
mov
xor
das
pop
add
iret
mov
jg
mov
jbe
leave
aas
xor
sbb
pop
ins
lods
mov
jo
mov
adc
ret
movs
push
dec
test
clc
stc
(bad)
gs
ins
push
push
ss
xor
test
js
mov
jle
aad
cmps
cmps
add
fwait
mov
xor
push
ins
inc
push
push
stos
jb
(bad)
xchg
in
fdivr
repnz
adc
ds
lods
xchg
mov
xchg
inc
fwait
jbe
mov
mov
or
xchg
mov
icebp
hlt
popf
leave
out
je
rol
(bad)
dec
loop
jmp
push
ss
ds
mov
std
mov
xchg
cmp
sar
xor
imul
(bad)
push
fdiv
adc
cmps
sbb
cmp
lods
ja
out
rcr
pusha
jg
cmc
mov
repnz
xchg
icebp
mov
outs
clc
(bad)
lds
mov
ins
ret
jg
jno
mov
imul
sar
sub
ins
mov
sbb
lods
dec
gs
mov
pop
or
push
push
add
inc
ret
pop
repz
pop
mov
jb
(bad)
xor
dec
dec
xor
cmp
sbb
ins
xchg
pop
ret
int3
les
xchg
sbb
outs
mov
inc
push
xchg
mov
sbb
mov
jns
ins
(bad)
dec
loopne
dec
mov
push
push
ss
and
test
dec
cmps
ds
xor
adc
pop
xchg
imul
cmp
lahf
push
lods
or
fistp
sbb
dec
popa
jno
js
xor
add
mov
jo
daa
ret
sbb
and
and
rcl
ret
outs
inc
cmovp
add
inc
neg
mov
(bad)
dec
sar
push
dec
adc
ret
mov
jo
test
enter
(bad)
test
and
push
stos
repnz
dec
sub
jg
bound
imul
movs
fistp
push
xor
arpl
mov
or
push
sbb
mov
inc
adc
mov
sub
fs
fwait
inc
mov
sahf
and
adc
dec
xor
lahf
mov
ret
pop
sbb
push
stc
xchg
rol
test
and
cwde
adc
(bad)
div
fwait
dec
stc
mov
jmp
mov
pop
in
lock
rol
xchg
push
dec
xchg
adc
lahf
mov
in
pusha
outs
sahf
stos
repnz
mov
inc
xor
aam
and
jecxz
adc
retf
add
(bad)
mov
mov
mov
(bad)
mov
jecxz
test
fistp
jle
cmp
and
xor
popf
lock
inc
mov
sbb
ficomp
mov
popf
in
shl
or
sub
outs
retf
int3
inc
push
imul
pop
adc
jbe
movs
sbb
test
loopne
retf
push
fxch
imul
and
and
sbb
out
mov
lds
pop
loope
in
or
mov
in
mov
pop
push
test
and
add
mov
mov
adc
(bad)
(bad)
loopne
adc
mov
pop
mov
test
inc
std
inc
or
rol
scas
out
push
ret
xor
jge
fs
mov
out
sub
cmp
xor
cmp
scas
inc
lea
pop
xor
jnp
add
pusha
adc
sbb
mov
dec
cmps
sbb
popf
in
lock
(bad)
jo
pop
js
cmc
push
xchg
mov
loop
jecxz
xchg
dec
xor
xchg
xchg
inc
mov
push
(bad)
stos
out
mov
rcr
mov
repnz
movs
or
cmps
das
mov
push
mov
add
adc
sbb
icebp
outs
into
cmc
add
jmp
dec
aaa
mov
pop
call
mov
sbb
imul
popf
xor
or
test
mov
lea
and
jle
jno
cmp
mov
or
(bad)
scas
idiv
(bad)
jmp
mov
jl
gs
das
inc
jo
bound
(bad)
stc
test
adc
dec
push
pop
add
mov
add
pop
nop
in
sub
sub
add
mov
test
add
f2xm1
outs
in
mov
sub
lods
mov
aaa
xchg
pop
les
inc
movs
add
je
jle
adc
loopne
sbb
jmp
shl
xor
or
sub
sub
daa
jb
stc
xchg
dec
and
jge
movs
and
pop
sub
scas
mov
inc
jl
clc
lock
or
push
push
dec
jb
sub
sub
adc
arpl
fnsave
lahf
mov
sbb
bound
pop
add
(bad)
cmc
and
shl
mov
xchg
inc
cli
mov
pop
loope
xor
xor
xor
xchg
imul
aad
outs
imul
dec
cdq
cmp
adc
push
aaa
rol
sbb
in
or
(bad)
loopne
in
jle
mov
(bad)
cmc
scas
js
mov
or
data16
xor
mov
dec
mov
imul
and
loope
popa
dec
dec
dec
je
mov
cmp
push
jge
and
dec
shl
pop
mov
(bad)
mov
retf
xor
leave
retf
cmp
sar
push
mov
inc
sbb
pop
test
fcomp
cmp
fwait
mov
sbb
push
scas
int
xor
and
stos
xchg
pop
lock
lahf
push
aaa
retf
fdiv
cmp
cs
daa
xor
jns
popa
cmps
sbb
mov
cli
cli
ja
xor
ror
adc
repnz
gs
xchg
fld
leave
xchg
call
cmps
js
pushf
push
movs
stc
repnz
cdq
push
(bad)
into
les
mov
xchg
shl
mov
pop
aad
scas
cmp
sub
jo
mov
pop
les
pop
mov
rol
pop
scas
(bad)
dec
into
retf
leave
cmp
jmp
leave
adc
xlat
scas
or
inc
cwde
mov
push
or
outs
test
inc
cdq
lods
mov
sbb
loopne
(bad)
pop
and
inc
push
xchg
jg
or
push
add
les
in
xchg
xor
test
pusha
lea
pop
(bad)
jne
and
xchg
add
mov
test
lods
aad
(bad)
(bad)
jl
nop
movs
call
fistp
fimul
ret
cmp
and
sub
dec
loop
cmp
rcr
xchg
sbb
std
jbe
xlat
in
add
not
xchg
add
ror
aad
mov
popf
mov
test
outs
xchg
iret
cmps
cmp
cmp
add
mov
sbb
fdiv
pop
ss
enter
sub
cld
leave
add
sbb
stos
out
jno
dec
inc
mov
adc
sub
push
in
jmp
jl
(bad)
sub
das
xchg
pop
(bad)
dec
mov
imul
sti
pop
(bad)
ret
pop
sbb
mov
das
js
dec
mov
loop
es
fstp
cmp
test
xor
sbb
mov
push
aas
adc
int
pop
fmul
in
fdivr
out
idiv
push
scas
add
outs
jbe
jg
loope
mov
xor
mov
lahf
(bad)
sub
add
arpl
outs
ret
mov
repz
lock
inc
mov
xchg
arpl
mov
call
mov
lds
adc
mov
mov
test
nop
bound
cdq
mov
enter
je
adc
dec
mov
push
mov
mov
jle
ja
add
push
mov
inc
or
mov
push
and
fld
xor
popa
xchg
stos
inc
sbb
adc
pusha
aam
jb
and
aad
loopne
shl
mov
push
inc
leave
in
fdivrp
ja
lds
arpl
sbb
jp
pusha
shr
hlt
xchg
lods
fmul
sbb
aaa
imul
xchg
pop
mov
dec
shl
adc
xor
iret
inc
adc
add
dec
mov
(bad)
sti
xlat
retw
(bad)
mov
cmp
int3
mov
das
and
add
jg
in
ins
mov
fucomi
ds
call
adc
(bad)
pop
ror
cmp
cmp
pextrw
push
jmp
jmp
popa
fwait
pushf
pop
dec
test
scas
pop
jmp
stos
and
stos
fisub
fistp
xor
repz
or
add
retf
push
mov
inc
jmp
lods
mov
inc
jmp
xchg
nop
and
call
xchg
jge
test
inc
les
dec
ss
cmp
popa
jo
cmps
xor
sub
mov
add
out
aaa
je
nop
fwait
(bad)
scas
out
jb
add
mov
pushf
mov
mov
lock
stos
cmps
xchg
adc
loopne
sbb
jmp
das
cmps
xchg
xor
aam
dec
sub
aad
mov
xchg
push
gs
inc
lea
ror
inc
push
xchg
mov
sub
sub
pop
imul
js
push
inc
xchg
mov
sbb
ja
popf
(bad)
hlt
fstp
pop
cmp
pop
push
sub
pop
and
(bad)
ins
mov
and
icebp
mov
jmp
(bad)
cmc
and
imul
icebp
scas
add
mov
jae
sub
xchg
repz
mov
sbb
mov
dec
sub
arpl
and
mov
mov
cmc
dec
add
inc
cmp
xchg
sub
arpl
inc
dec
out
scas
das
mov
lods
arpl
cmps
push
aam
pusha
mov
or
(bad)
or
jle
outs
dec
fstp
dec
mov
xchg
sbb
je
mov
sub
stos
popf
enter
std
call
pop
xchg
clc
dec
dec
add
and
test
in
and
aas
mov
sbb
je
mov
xlat
(bad)
dec
sar
jae
sub
xchg
jae
mov
test
push
mov
jle
out
retf
xchg
call
les
stos
lods
jmp
mov
(bad)
adc
stos
call
adc
mov
dec
fs
push
js
xor
retf
and
add
lds
ds
aas
aaa
push
das
cs
imul
mov
jge
sahf
gs
out
and
test
mov
add
mov
mov
jg
cmp
fbstp
test
dec
xor
pop
jbe
inc
lods
adc
jmp
sub
test
out
in
xor
ins
fwait
ins
add
(bad)
jl
adc
push
std
xlat
mov
ja
add
imul
dec
mov
jo
sbb
or
dec
icebp
jb
jb
xchg
in
and
push
add
adc
movs
pushf
push
cmp
pop
xchg
dec
dec
or
jnp
mov
mov
xor
nop
jno
rol
call
retf
dec
(bad)
pop
fldenv
push
cmp
sbb
lds
cmps
adc
add
sar
stc
sub
sub
repnz
shl
loope
movs
inc
jecxz
pop
call
push
push
not
mov
outs
lds
adc
out
xchg
mov
xlat
adc
and
ret
(bad)
sbb
sbb
or
mov
and
cmps
aas
int3
(bad)
shl
jmp
clc
sub
fmul
scas
mov
add
repz
inc
dec
mov
jo
shl
xor
retf
mov
xchg
push
rol
movs
push
sub
mov
add
into
adc
aam
imul
leave
stos
mov
or
cmp
xchg
jbe
adc
into
mov
cs
or
(bad)
aam
pop
loope
sub
push
clc
and
hlt
cmp
dec
mov
sub
outs
sbb
push
scas
jge
dec
retf
and
xchg
push
xchg
imul
xchg
sbb
mov
push
dec
sub
inc
out
add
aad
dec
jle
sar
out
xchg
push
push
dec
pop
jb
pusha
add
mov
repz
pop
dec
dec
or
or
and
pushf
push
repz
repnz
mov
mov
daa
stos
fxch
cwde
xchg
std
add
(bad)
(bad)
ja
lea
data16
adc
aaa
lods
mov
mov
cld
sbb
and
adc
test
jmp
jae
or
repnz
and
mov
das
sbb
mov
popf
les
repz
jo
jp
inc
push
cdq
mov
mov
sub
outs
in
mov
add
adc
add
inc
out
mov
div
pusha
xchg
sahf
mov
push
or
enter
addr16
dec
lods
mov
nop
ds
pop
mov
xchg
jnp
or
pop
hlt
std
in
aam
std
rcr
iret
outs
pop
inc
rcl
sub
mov
xor
fstp
xor
sub
in
mov
mov
ret
sub
mov
push
stc
in
iret
out
mov
and
iret
mov
and
cmp
sub
mov
aaa
(bad)
fild
push
mov
cmc
std
cmps
sbb
push
jmp
addr16
mov
(bad)
mov
std
hlt
aas
or
scas
rol
jp
ffreep
ret
jns
rol
xchg
jl
mov
adc
mov
inc
jle
fs
enter
mov
lds
push
pop
arpl
gs
lea
dec
dec
adc
sbb
inc
scas
scas
sbb
enter
xor
test
fstp
mov
push
inc
xor
inc
pop
cld
jle
and
inc
test
int3
fnstsw
inc
push
stos
leave
mov
mov
push
(bad)
in
rcl
rcl
call
lds
push
loop
xlat
mov
xchg
adc
mov
or
clc
jne
add
int
mov
add
(bad)
mul
ret
aam
std
(bad)
add
cmp
cwde
stos
stos
lea
sub
(bad)
fidiv
ins
add
adc
xor
pop
arpl
ret
sbb
call
add
verr
fsubr
dec
shr
hlt
or
mov
ja
call
pop
jg
mov
jnp
str
shl
cld
xchg
call
and
leave
cmp
inc
mov
cwde
fs
push
fild
xor
mov
inc
pop
xor
adc
das
pusha
pop
js
scas
dec
jge
xchg
sbb
xor
fs
call
dec
add
add
jo
mov
xor
ss
jg
sub
lods
aas
dec
loope
ins
inc
mov
iret
dec
push
out
leave
xor
and
jge
pop
addr16
daa
push
cmp
movs
loope
fcomi
loop
pop
sub
jle
adc
call
imul
adc
adc
(bad)
in
add
sub
xchg
outs
xchg
jl
cmp
stos
adc
rcr
loop
pop
test
aad
pusha
mov
or
out
adc
push
adc
pop
mov
xor
pop
mov
or
pop
sbb
fnstenv
mov
aam
movs
push
scas
mov
mov
mov
test
in
shr
push
push
fist
sbb
ins
lahf
mov
call
jo
cmp
dec
stos
xchg
xchg
mov
dec
cmp
fwait
cli
adc
mov
dec
sub
std
pop
out
dec
fidiv
sahf
sbb
cli
daa
push
mov
clc
xchg
jnp
ss
mov
enter
mov
push
add
jne
rcl
jp
lahf
push
rcl
add
bound
cmp
rol
cmp
pop
and
push
push
retf
nop
scas
mov
and
mov
jmp
hlt
xchg
mov
add
jmp
pop
test
xchg
mov
stos
or
mov
jae
ds
xor
test
stos
dec
mov
xchg
mov
mov
adc
adc
(bad)
jl
mov
jns
lods
pop
arpl
pop
xor
out
loope
dec
jge
adc
sub
dec
inc
ss
call
xor
repnz
jae
jl
arpl
loopne
lahf
mov
and
xor
jecxz
stos
fcmovbe
push
mov
jbe
sbb
add
jp
rcr
or
imul
out
or
adc
aad
popa
aaa
cmp
aas
jmp
xchg
mov
adc
mov
mov
arpl
xor
pop
dec
(bad)
pushf
ret
xor
jbe
xchg
mov
nop
push
int
pop
mov
jb
icebp
sar
sub
pushf
lods
xchg
xor
adc
cdq
xchg
xchg
rol
in
adc
jno
mov
test
adc
into
xchg
outs
adc
xchg
scas
cwde
xlat
cmp
push
rcl
daa
test
xor
adc
sub
pop
adc
mov
jbe
and
dec
push
cmp
rcl
repz
(bad)
push
xor
outs
pop
adc
sar
push
fcomp
enter
fdiv
(bad)
and
sbb
pop
pop
movs
sub
and
mov
pop
icebp
stc
aad
or
imul
lock
sbb
mov
repz
gs
retf
outs
pop
inc
dec
call
loop
xchg
pusha
dec
aad
xlat
cmp
call
dec
imul
cld
arpl
sub
iret
stos
ret
outs
jmp
push
shl
xchg
arpl
xchg
push
les
enter
mov
idiv
sbb
lock
shl
out
lock
inc
fwait
aam
call
cmps
imul
and
sbb
ffreep
rol
call
stos
adc
jp
nop
xor
jb
jle
fistp
mov
ins
xor
loope
ds
or
push
jp
pop
or
xchg
xchg
mov
push
pop
push
jle
xchg
jb
imul
jns
das
sbb
mov
cmps
xchg
outs
dec
inc
cmp
push
std
das
push
cmp
or
jge
xchg
push
adc
aad
sahf
adc
rcr
fdivrp
in
idiv
xor
push
sub
ins
push
stos
xchg
outs
cmc
pop
cmps
mov
adc
call
mov
dec
fwait
add
or
test
jne
sbb
mov
add
dec
test
mov
push
mov
lea
hlt
fwait
mov
sub
nop
jns
out
push
cmp
cmps
jae
cmp
xchg
adc
shl
repnz
mov
push
jle
stos
push
sbb
sub
mov
das
enter
fnstenv
push
pusha
jbe
or
cmp
cmp
inc
add
jle
pop
cdq
cmp
out
pop
imul
sub
dec
mov
or
pushf
aas
sub
popf
xchg
retf
mov
push
push
or
xor
mov
xor
adc
xor
sub
jbe
mov
mov
test
ins
sti
inc
dec
xor
ins
xchg
aad
mov
fstp
or
shr
pusha
into
fisttp
jecxz
in
jmp
in
pop
in
ins
jl
retf
mov
in
or
lock
pop
fld
std
push
inc
mov
fild
lods
pop
adc
imul
lds
push
inc
rol
or
(bad)
pop
add
cld
xchg
push
and
xchg
ss
dec
(bad)
jmp
adc
pop
call
test
push
arpl
push
push
jb
or
stos
mov
or
cmp
shl
inc
ins
mov
mov
cs
mov
js
xor
int3
jae
cmps
cld
sahf
in
inc
mov
test
data16
cld
ja
bound
loope
cmps
push
js
les
mov
popf
xor
xchg
cld
pushf
cmps
push
inc
push
ss
inc
inc
outs
sti
(bad)
int
stc
push
cmps
out
push
mov
cdq
jo
jecxz
jg
sbb
loope
je
jge
aam
push
sub
inc
jo
sahf
xchg
pop
push
repnz
jns
push
ficomp
into
not
jne
jge
cmps
in
jns
cmps
aam
leave
out
out
pop
mov
xlat
jecxz
sbb
mov
loope
push
push
xchg
adc
in
inc
push
sbb
out
and
movs
cli
dec
jecxz
and
pop
fiadd
sub
add
imul
cmp
pop
inc
xchg
or
out
dec
jle
pop
test
inc
inc
fld
pop
mov
mov
in
stos
mov
pop
cmps
mov
sub
sahf
out
and
inc
mov
ja
sub
mov
ror
add
aaa
bound
mov
imul
cmp
sub
(bad)
sub
aam
mov
xor
dec
fdivrp
test
call
xchg
test
cmps
(bad)
mov
fucomip
pop
popf
sub
sub
jo
ja
jb
cs
scas
sbb
inc
inc
add
je
movs
mov
int
(bad)
sti
movs
sti
or
cli
adc
movs
inc
jl
sar
mov
sar
ja
dec
and
fst
pop
pop
idiv
jg
mov
int3
xor
lds
and
mov
and
adc
mov
movs
jnp
jmp
and
xchg
lds
add
(bad)
xlat
add
add
sub
fst
arpl
out
les
dec
push
push
stos
sti
cwde
std
sbb
pushf
ins
mov
xchg
or
mov
shl
movs
repz
call
pop
or
test
out
xor
add
rol
adc
pop
gs
pop
retf
xchg
xor
sbb
stos
test
aaa
ins
mov
xchg
loopne
sub
mov
jp
scas
scas
adc
into
je
je
mov
inc
aad
cmps
jb
loop
sub
out
push
mov
rcr
outs
jmp
popf
loop
dec
jae
int3
pop
je
jecxz
mov
pusha
popa
bound
retf
mov
adc
mov
pop
popa
inc
xchg
aaa
pop
jmp
inc
and
sub
push
cmp
int
imul
push
mov
push
gs
sti
jb
daa
fistp
leave
cmp
mov
ss
mov
mov
or
jne
jp
fisttp
adc
xchg
mov
cs
stc
retf
pop
mov
xchg
or
shl
mov
es
push
(bad)
sub
add
ret
lock
add
adc
aad
xchg
dec
jmp
add
mov
mov
psadbw
inc
sub
outs
loop
ficomp
aaa
mov
cmp
pop
jno
xchg
mov
lock
lahf
mov
nop
cdq
fs
shl
test
mov
mov
mov
ret
xchg
adc
jo
sub
stc
pminub
xchg
test
sahf
outs
or
add
pop
push
mov
sub
push
inc
xor
jmp
lahf
retf
jns
xchg
xor
jae
jmp
ss
repnz
add
or
sub
movs
adc
pop
jne
cmp
pop
mov
mov
sbb
shr
cmc
addr16
dec
cmc
mov
pop
mov
sub
push
jb
adc
call
sbb
push
int
cs
xor
or
or
sar
lods
data16
cmc
stos
rol
out
push
push
shl
mov
stos
out
mov
sti
repz
cli
imul
inc
push
push
inc
pop
mov
or
sub
pop
test
fs
(bad)
jg
inc
pusha
pop
mov
daa
leave
sbb
push
popa
movs
mov
scas
adc
(bad)
fnstcw
jle
int3
bnd
mov
leave
mov
cli
adc
mov
shl
shl
lods
xor
add
sub
ror
mov
sbb
cld
jp
dec
xor
nop
and
pop
jg
mov
sbb
scas
push
or
mov
or
jbe
shr
xchg
fsubr
mov
mul
push
in
or
rcl
sbb
sbb
bound
repz
mov
lds
mov
or
std
into
pop
scas
repz
ja
sub
cmps
mov
arpl
cli
leave
ret
sti
and
inc
mov
out
fs
sub
mov
fistp
ins
dec
mov
popf
jo
xor
(bad)
or
retf
xchg
mov
inc
mov
adc
jnp
scas
scas
push
pop
bound
pop
fs
push
sbb
mov
inc
pop
cmp
cmp
mov
dec
adc
pop
pop
ret
xchg
inc
enter
jmp
(bad)
in
leave
icebp
sbb
std
cld
mov
or
shr
or
(bad)
adc
mov
fsub
xchg
add
data16
stc
and
sub
push
or
adc
movs
mov
jo
sar
(bad)
cwde
fs
fidiv
or
xor
dec
pop
daa
shr
loope
push
mov
xor
jns
cld
xchg
jo
mov
stos
jle
popf
inc
jecxz
mov
cmp
cmp
fs
movs
jecxz
loopne
call
int3
push
inc
(bad)
sahf
(bad)
sbb
jb
adc
imul
test
push
rcl
and
cmp
mov
mov
add
into
jl
xlat
xchg
loop
dec
cmps
push
xchg
dec
into
enter
out
sub
jae
mov
dec
ins
cmps
inc
movs
sbb
stos
cwde
(bad)
mov
pop
scas
cli
mov
gs
push
in
fs
cli
ins
ss
mul
sbb
jmp
(bad)
pop
push
or
push
sti
pop
mov
shr
ins
xchg
mov
outs
mov
mov
movs
and
pop
jecxz
sbb
int
sbb
sbb
and
mov
fbld
sbb
ficomp
int3
ins
in
mov
mov
push
sbb
inc
data16
inc
sbb
out
pop
push
mov
mov
pop
test
addr16
call
arpl
out
mov
iret
mov
jge
jbe
mov
mov
movs
aaa
push
repnz
pushf
jl
pop
es
cmps
inc
xchg
add
in
(bad)
adc
retf
(bad)
pusha
sbb
(bad)
repz
xor
cmp
outs
adc
dec
enter
loope
mov
pushf
ds
inc
push
xchg
mov
push
cli
pop
adc
jg
pop
push
adc
retf
int
cmps
ja
xor
cmp
shl
mov
icebp
sub
mov
mov
popa
(bad)
dec
jp
lods
xchg
lds
sub
(bad)
jbe
pop
mov
das
repz
and
bound
scas
pop
stos
lea
and
and
pop
pop
sbb
fisub
loopne
mov
cmp
dec
add
movs
jno
cmp
je
arpl
lds
stc
ret
ins
sahf
lods
test
test
adc
inc
sub
(bad)
mov
ret
ror
xor
cwde
xchg
mul
cli
in
inc
sub
scas
add
sub
mov
je
out
jmp
jecxz
arpl
sbb
imul
bound
in
cld
stos
scas
or
push
fisubr
cmp
push
pop
and
fsubr
cmp
dec
and
jmp
xor
(bad)
mov
in
mul
(bad)
cmp
test
cmp
sub
mov
outs
sbb
adc
outs
mov
arpl
xchg
(bad)
pop
ficomp
mov
cli
dec
mov
ret
mov
test
mov
xor
pop
push
stos
lods
push
xor
jle
loop
mov
mov
cs
lock
fimul
pop
test
xchg
sub
inc
sahf
or
xchg
and
pop
(bad)
sub
int3
dec
fistp
test
mov
sbb
add
cmp
sub
inc
enter
xor
arpl
dec
sub
out
fst
es
pusha
dec
mov
adc
mov
test
sahf
ret
(bad)
ret
add
inc
dec
push
push
push
in
mov
int
int
fwait
retf
(bad)
push
sub
je
retf
pop
popa
retf
popf
fimul
adc
fldcw
data16
lock
pusha
dec
sar
pop
push
push
push
into
arpl
retf
outs
sub
sar
fcom
adc
pop
fcom
adc
je
mov
(bad)
pop
pop
xor
pop
clc
ret
pop
xchg
jno
js
ins
mov
xchg
jno
pop
fwait
in
add
mul
ins
stc
enter
xchg
dec
dec
ficom
out
mov
pop
icebp
movs
dec
nop
mov
xchg
mul
sub
(bad)
mov
out
cdq
xor
or
cmp
pop
jmp
in
xlat
sub
mov
int3
retf
add
mov
pop
sbb
aam
mov
add
cmp
sar
jo
sub
jl
xchg
movs
mov
push
sub
xor
sbb
imul
inc
clc
pop
adc
or
push
push
ins
mov
add
add
or
mov
ja
pop
lock
and
push
push
xchg
into
xor
mov
outs
and
xchg
sbb
dec
fistp
dec
(bad)
add
mov
repnz
sub
push
xor
push
loope
mov
xchg
or
out
or
pop
adc
mov
push
or
jmp
retf
cld
xchg
mov
sbb
out
repz
xchg
push
add
sbb
aas
pop
retf
add
jns
jle
movs
aam
sar
push
bound
popa
rcl
lds
fbld
cli
in
mov
or
push
bound
iret
dec
prefetchw
sar
cdq
or
xor
add
rcl
jecxz
loopne
jb
aam
push
call
push
mov
push
inc
and
pop
add
(bad)
sub
adc
push
movs
in
mov
ficomp
mov
and
sbb
xor
add
mov
jmp
xchg
mov
sub
pushf
xor
dec
mov
inc
(bad)
or
cdq
mov
sbb
jae
inc
ficomp
stos
test
jl
sbb
cmc
mov
add
lds
mov
sbb
movs
(bad)
hlt
in
aaa
inc
adc
repz
push
popa
fisubr
mov
test
das
pop
xor
clc
lods
adc
add
test
or
enter
(bad)
inc
adc
dec
push
sbb
(bad)
dec
mov
movs
ja
mov
cmps
sub
rcr
lea
adc
adc
sub
sbb
mov
sub
xlat
push
ficomp
pop
mov
sub
cmp
xor
pop
jo
jne
in
aas
sub
enter
ret
dec
push
mov
push
lahf
ss
xor
rcl
jmp
int
in
loop
or
and
jo
xor
retf
call
ja
dec
xor
dec
cmps
mov
bound
add
mov
and
sub
cdq
ds
ins
mov
rcr
iret
out
pop
or
pop
cmp
cmp
dec
imul
fnstcw
cld
xor
adc
scas
xlat
idiv
mov
mov
fsubr
aam
sbb
jg
jge
pop
ins
dec
inc
arpl
push
test
sub
push
pop
icebp
in
sahf
dec
movs
call
cli
dec
call
inc
or
mov
lods
jl
mov
push
jle
fild
mov
cmp
mov
add
popa
shl
jnp
rcr
mov
push
dec
test
jmp
icebp
(bad)
cmp
ret
cmc
jmp
test
aad
sub
fwait
call
cmp
fs
cmp
jae
sahf
sub
in
out
fimul
sti
mov
jl
mov
fadd
xor
shl
(bad)
xchg
ds
add
fdiv
retf
sub
iret
push
jmp
xchg
jo
adc
sbb
aas
in
adc
(bad)
loopne
jge
add
jecxz
ficomp
add
mov
xor
aas
cmp
out
and
mov
mov
cmp
fst
lods
test
push
inc
fist
cli
dec
dec
mov
push
int3
aad
bound
pusha
repz
mov
ja
adc
dec
pop
cmp
sbb
call
mov
xor
sbb
mov
in
pushf
lods
lods
dec
(bad)
push
add
adc
pushf
bnd
sub
sub
or
sar
das
fnstenv
retf
jecxz
sahf
xchg
mov
lods
mov
imul
mov
int
mov
cmp
pop
xchg
and
out
add
xor
adc
xor
or
inc
mov
test
push
lds
xchg
mov
fcmovnb
add
xlat
sti
clc
pop
hlt
dec
mov
xchg
add
dec
outs
out
ficom
xor
sub
mov
cmps
je
ins
pop
add
int
xor
and
aam
xchg
pusha
mov
sbb
sar
mov
sbb
vsubss
mov
inc
scas
imul
mov
or
test
mov
bts
lds
jb
addr16
loop
daa
push
xor
xchg
mov
adc
nop
stos
enter
lahf
imul
lds
repnz
mov
cmp
and
xchg
and
jae
ss
mov
shl
sbb
push
fcmovnu
scas
xchg
push
inc
jp
ret
pop
das
les
push
(bad)
adc
inc
in
adc
out
inc
xor
rol
push
fs
mov
ret
push
xor
dec
pop
xlat
jmp
popf
stos
cwde
jecxz
and
mov
xchg
ins
mov
pop
pop
stc
test
adc
pop
mov
mov
test
(bad)
or
(bad)
adc
daa
dec
(bad)
lods
fs
mov
enter
lods
cmps
(bad)
aam
sub
cmc
aad
or
inc
(bad)
lock
add
loop
inc
mov
cmp
sub
xchg
div
or
nop
mov
fmul
add
repz
push
mov
jp
xor
jnp
out
pushf
push
das
xor
(bad)
or
iret
mov
aam
les
mov
sub
ins
inc
mov
jecxz
mov
sub
pushf
clc
loopne
(bad)
push
push
nop
mov
sti
sub
adc
and
sar
mov
cmc
mov
unpckhps
dec
aaa
jbe
adc
iret
fcom
es
push
cmps
xor
pop
or
fimul
out
or
int
lds
sahf
(bad)
pop
cmp
jmp
mov
xchg
mov
sub
add
clc
pop
bound
in
cmc
mov
mov
fmul
ret
mov
pop
retf
dec
scas
imul
ins
pop
out
cmc
mov
outs
xchg
xor
mov
jmp
mov
sub
je
bound
das
xor
xchg
movs
jmp
jno
repz
mov
in
call
add
pusha
fist
mov
xchg
mov
mov
bound
leave
xchg
inc
out
or
popf
outs
daa
cmp
retf
and
sbb
out
retf
enter
or
div
out
push
mov
jp
loopne
push
pop
pop
aas
je
push
pop
sub
mov
aad
mov
sete
jbe
xor
pop
push
test
add
and
cwde
outs
loope
or
jge
ins
jo
mov
cs
sbb
stos
adc
test
dec
mov
lods
repnz
repnz
pop
sbb
and
test
inc
xor
jmp
rcl
cld
pop
push
add
add
sub
and
mov
ins
sbb
popf
in
inc
repnz
call
and
or
hlt
retf
das
sbb
or
dec
ret
sar
repz
addr16
mov
cmp
jl
inc
lds
cs
mov
xor
jmp
out
in
mov
dec
out
add
or
inc
jo
and
or
test
rol
mov
mov
es
shl
cdq
mov
lea
cmp
xchg
sbb
xor
cld
aas
xor
mov
add
jae
ja
pop
out
aas
jnp
cwde
mul
test
mov
dec
ret
aas
cld
rcl
cmps
mov
movs
or
mov
push
stos
inc
jge
push
or
outs
inc
jbe
sti
les
daa
lahf
in
repnz
adc
nop
mov
bound
inc
daa
mov
inc
ja
shl
xor
lea
jno
shl
mov
movs
cmp
jbe
add
retf
dec
dec
xlat
sub
xchg
and
fwait
mov
jle
xchg
sub
push
in
and
mov
ja
movs
popa
xor
dec
xchg
xchg
fld
mov
inc
inc
sub
jge
dec
fwait
imul
xchg
ins
test
jne
push
fbld
imul
lahf
xor
(bad)
sbb
xchg
sar
mov
push
fist
push
(bad)
imul
push
cmps
fisttp
shr
mov
js
in
fstp
imul
push
xor
stc
cwde
cmp
or
xor
or
sub
dec
dec
and
mov
(bad)
ret
out
sub
sar
cmp
jno
mov
add
arpl
jmp
sub
pusha
dec
lahf
cmp
push
cmps
mov
xchg
aad
sbb
ss
inc
inc
rcr
out
sbb
mov
or
das
lahf
push
jecxz
cmp
enter
(bad)
daa
leave
cmc
call
push
or
push
dec
test
jecxz
popa
mov
jae
mov
leave
(bad)
shr
or
stos
call
outs
dec
ror
and
mov
js
lds
in
jns
pop
shr
out
ficomp
pop
sbb
bound
cli
inc
shl
pop
sub
outs
sbb
pop
jge
(bad)
cmp
add
mov
push
loope
adc
push
xchg
into
test
scas
xchg
jo
inc
add
add
cmc
loopne
jecxz
mov
xor
mov
inc
in
inc
mov
arpl
dec
xchg
and
ins
in
sub
and
mov
adc
dec
stos
ret
aaa
mov
sub
mov
mov
(bad)
repnz
icebp
mov
es
bound
iret
popa
cmp
stos
(bad)
fdiv
ja
add
leave
shl
imul
hlt
fsubr
sbb
loopne
jg
and
inc
stc
jo
mov
cs
push
xor
inc
movs
cmps
cli
jmp
inc
call
mov
loope
pop
push
push
int
es
popf
xlat
sbb
bswap
jno
out
mov
pop
add
pushf
shr
push
xchg
shr
sbb
pop
aas
ins
into
xchg
xchg
push
retf
inc
mov
sbb
es
into
xor
mov
xchg
jae
mov
push
stos
aaa
popa
inc
sahf
outs
cmp
jnp
push
lea
lods
add
cmp
adc
or
aad
pop
cmp
mov
imul
xchg
cmps
fstp
adc
(bad)
mul
je
ss
push
leave
dec
cmp
cmps
pop
dec
fldln2
stc
daa
(bad)
inc
pop
ret
loop
sub
xchg
bound
dec
sar
daa
xchg
pop
shl
sahf
pop
inc
js
cmp
cmp
or
cli
push
cdq
into
inc
xchg
sub
jmp
add
rol
adc
mov
mov
outs
ret
push
mov
mov
jo
mov
jl
mov
pop
fbld
fimul
je
aam
imul
enter
rcl
into
lahf
mov
jno
out
enter
outs
out
ss
fwait
sar
cs
enter
sbb
mov
pop
xor
sbb
xor
jo
aad
adc
or
xchg
mov
in
push
retf
in
adc
pop
rcr
aas
scas
mov
cmps
cdq
xchg
daa
scas
ds
jns
(bad)
xchg
jmp
dec
jge
(bad)
movs
pop
fsub
fiadd
mov
dec
cdq
lods
cwde
test
sub
hlt
cmp
xchg
pop
dec
test
mov
mov
pusha
cmp
or
dec
add
mov
jo
jno
shl
and
cmp
outs
int
stos
jbe
out
imul
(bad)
push
inc
dec
retf
ds
ror
add
ins
nop
gs
test
es
mov
inc
xor
mov
fadd
cmp
mov
cmp
mov
call
test
addr16
aaa
cld
push
scas
fidivr
retf
fild
shr
mov
mov
or
mov
je
in
jg
ds
or
sub
loop
mov
sub
and
call
loopne
mov
(bad)
adc
or
mov
mov
and
xchg
push
jmp
bound
sub
pop
in
(bad)
mov
neg
adc
(bad)
imul
sbb
ffreep
nop
sub
and
and
xchg
sub
push
out
or
jnp
test
mov
lods
imul
scas
push
hlt
inc
mov
pop
rol
or
ja
pop
inc
inc
mov
xchg
xor
rcr
or
test
pop
inc
ins
retf
cwde
sbb
mov
mul
bound
xor
cdq
in
push
cs
rol
mov
cli
dec
loop
pop
mov
cwde
imul
scas
xor
and
cld
mov
or
call
xchg
imul
pop
imul
fidiv
add
sahf
fistp
popa
jns
mov
aad
pushf
dec
add
dec
loop
mov
cli
pop
mov
push
add
inc
add
push
xlat
push
or
dec
scas
sub
mov
shl
addr16
dec
and
add
out
std
imul
out
(bad)
loope
aam
cmc
addr16
mov
jge
cld
add
jle
and
pusha
call
aaa
les
push
div
xchg
inc
sub
hlt
fdiv
sbb
shr
cmp
sub
call
mov
rcr
sbb
iret
ins
clc
lahf
jne
into
(bad)
fcom
mov
sbb
ja
mov
ds
xchg
sbb
sub
xchg
xchg
add
dec
pop
clc
mov
sub
test
and
mov
push
adc
jp
xor
or
lock
movs
push
mov
push
retf
les
test
arpl
mov
push
sbb
(bad)
pop
sub
jl
jo
or
in
nop
dec
test
out
in
pop
sub
mov
in
pop
movs
mov
jl
xchg
movs
(bad)
fiadd
mov
add
cmp
retf
fcmovnb
push
add
repz
je
xor
jmp
cmps
test
mov
mov
loop
mov
ins
inc
imul
(bad)
cmps
push
xor
jo
cs
sbb
or
mov
das
loope
pusha
jecxz
jnp
mov
jg
mov
and
pusha
ficomp
rcr
mov
int3
(bad)
icebp
fild
sub
rcl
sub
push
push
jne
pop
add
lods
repnz
or
(bad)
ret
sub
(bad)
std
xlat
ss
xchg
xchg
stos
test
cwde
ja
shl
daa
mov
mov
xor
daa
cmp
(bad)
and
xchg
ficomp
ss
(bad)
daa
sbb
mov
cmp
xor
mov
sub
out
mov
sbb
cld
mov
hlt
cmp
adc
out
std
push
stc
mov
imul
sahf
out
and
test
jmp
cli
push
dec
and
fcom
clc
mov
add
mov
cwde
xchg
or
jecxz
and
jecxz
jecxz
loop
inc
ror
enter
mov
push
retf
int3
imul
xor
(bad)
sub
loope
js
jae
inc
fnstenv
or
mov
mov
outs
int3
fnstcw
add
cmps
sbb
pop
lahf
jnp
imul
xor
add
xchg
call
fidiv
inc
mov
sti
push
xor
sbb
(bad)
cmp
hlt
mov
movs
mov
jno
lahf
test
ss
lock
cmps
aad
xor
ror
dec
push
fdiv
retf
cli
div
sar
(bad)
sbb
pop
jae
aam
call
xchg
jl
adc
sbb
cmp
pop
inc
push
mov
xor
push
mov
xor
xor
in
mov
mov
pop
out
aam
add
lock
mov
shl
pop
out
mov
cdq
inc
and
inc
push
inc
mov
mov
or
inc
dec
int
sub
cmp
add
icebp
das
pop
(bad)
mov
mov
or
loopne
aad
pop
mov
jp
cwde
mov
call
imul
and
or
into
ds
addr16
pop
cmp
add
fstp
sbb
in
pop
ins
std
outs
pop
(bad)
dec
pop
pop
inc
retf
hlt
dec
xor
jmp
and
inc
call
rol
sbb
fldcw
iret
dec
push
in
inc
push
dec
xor
pop
ret
dec
jmp
inc
int
test
push
mov
mov
jle
push
cmps
cmp
mov
xor
inc
pop
cmp
int3
push
jp
add
dec
mov
loopne
xor
jb
add
mov
lods
sbb
addr16
daa
repz
dec
jp
iret
jle
loop
cmp
pop
pop
js
adc
repnz
xor
pop
imul
sbb
adc
(bad)
call
mov
sbb
adc
lea
mov
pop
pop
cmps
retf
xchg
loopne
pusha
outs
test
xor
jmp
adc
rcl
jne
fimul
and
mov
inc
fstp
dec
or
lahf
xor
xchg
jbe
jg
call
xchg
jecxz
sub
sbb
sbb
add
call
imul
(bad)
movs
aas
(bad)
pop
xchg
rcr
push
outs
dec
pop
mov
call
test
and
ds
jne
lods
mov
ds
aad
in
inc
xchg
pop
call
ficom
cli
test
xchg
mov
mov
mov
xchg
in
xor
cld
or
push
(bad)
jp
push
push
int3
in
or
movs
and
lock
arpl
daa
les
mov
in
mov
push
mov
fdiv
and
lock
ja
movs
and
jno
xchg
mov
mov
mov
push
cwde
arpl
push
mov
jmp
xchg
cmp
outs
push
fnstenv
sbb
mov
jb
sub
fnsave
out
lock
test
sub
add
aaa
int3
cmp
in
mov
inc
dec
inc
sub
mov
push
(bad)
jae
xor
pop
leave
jbe
dec
jb
test
sub
sub
pop
and
stc
lahf
loop
or
int
in
(bad)
xchg
sub
out
push
in
xor
mov
shr
jecxz
test
inc
jo
jnp
push
inc
loop
mov
sub
cli
and
mov
imul
repnz
daa
sbb
and
mov
or
xchg
fnstenv
lea
in
outs
aas
(bad)
out
mov
pop
pop
scas
imul
dec
xchg
cld
ds
in
xchg
fdivr
test
loope
xchg
iret
or
in
inc
mov
pushf
mov
cmp
gs
ds
add
dec
into
mov
(bad)
les
rcl
retf
ret
xchg
test
jecxz
fcomip
popa
push
or
mov
inc
sub
popa
ins
out
add
ja
mov
cmp
movs
mov
add
addr16
mov
ja
aas
bound
lds
mov
sbb
fwait
data16
lock
mov
loope
sub
std
mov
repz
pop
pop
pop
lea
lds
repz
xor
pop
push
iret
and
out
(bad)
jge
stc
and
lock
jge
push
pop
cmc
jae
mov
cmps
xchg
test
arpl
loope
push
nop
out
lahf
in
je
rcr
retf
retf
out
fld
push
sbb
call
pop
adc
mov
xchg
jmp
xor
push
add
inc
rol
mov
shr
popf
jns
push
std
mov
neg
pop
aas
push
out
jp
mov
clc
das
inc
adc
ja
inc
push
loope
mov
scas
sbb
in
jmp
xor
test
mov
rcr
mov
neg
adc
jnp
mov
or
mov
ss
xchg
hlt
mov
mov
mov
mov
shl
xor
cmc
pop
pop
or
jnp
xchg
xor
test
pop
aam
das
mov
and
jg
jmp
xor
outs
sbb
stos
(bad)
push
retf
div
pop
sub
xor
sbb
(bad)
adc
xor
fsub
mov
out
nop
shl
test
js
imul
jns
push
pop
in
neg
nop
mov
lds
xchg
sub
mov
outs
pop
add
pop
mov
sub
outs
cli
sub
cmp
cmp
jae
jbe
xchg
add
sti
hlt
jp
push
push
pop
xor
gs
xor
and
fsub
ret
es
icebp
jge
push
adc
push
fist
fs
cld
push
lods
ins
pop
add
inc
and
ror
and
popf
and
call
and
outs
test
jne
mov
rol
push
pop
inc
cmps
inc
or
shr
fsub
icebp
add
(bad)
(bad)
mov
push
add
or
imul
rcl
imul
(bad)
xchg
lods
dec
(bad)
std
inc
jo
test
mov
sahf
popf
inc
shl
sbb
add
pushf
fcom
sub
subps
cdq
jl
stos
pop
imul
shr
dec
pop
aas
rol
xchg
(bad)
push
pop
push
pop
push
outs
into
mov
adc
xchg
mov
icebp
and
les
movs
icebp
cs
fistp
jns
or
xlat
cmp
xor
fs
adc
xor
out
out
mov
mov
and
lods
lahf
add
sar
mov
mov
adc
aad
mov
jle
cmps
dec
ins
stc
shl
je
jns
mov
xchg
and
push
dec
cmp
shl
inc
je
push
push
or
inc
shr
fmul
das
in
cmc
aad
lahf
jmp
leave
sub
popa
shr
xchg
adc
pop
(bad)
test
inc
(bad)
sub
mov
pop
mov
pop
shr
add
sbb
fcomp
sub
jmp
adc
imul
sbb
cs
(bad)
adc
aam
(bad)
call
retf
xor
test
xchg
cmp
push
jo
mov
out
ret
jno
sub
sub
dec
cmps
add
lahf
push
inc
idiv
push
pop
test
adc
jl
push
and
push
das
daa
cmp
xchg
fidiv
xor
and
fist
mov
sbb
sahf
gs
or
cwde
cmc
inc
xchg
mov
lea
fdivr
mov
push
int3
jle
cdq
pop
scas
pop
loope
test
xchg
test
lods
mov
gs
push
mov
jbe
mov
scas
movs
jp
add
stos
mov
mov
ret
mov
movs
outs
xchg
xchg
xchg
and
mov
cld
cmc
fimul
pop
cmc
scas
cwde
outs
cli
mov
inc
inc
lea
cmovno
jmp
xchg
dec
push
(bad)
and
dec
icebp
cwde
adc
cld
dec
(bad)
je
inc
xchg
mov
ficomp
loope
or
bound
add
clc
mov
aas
pop
popa
in
out
idiv
cld
jmp
push
ins
inc
js
xlat
leave
out
test
popa
clc
adc
stc
xchg
retf
sub
jne
mov
dec
int
xchg
and
and
xor
nop
ss
adc
inc
iret
(bad)
shl
rcl
mov
gs
xchg
cdq
arpl
aaa
dec
push
xchg
sub
or
movs
out
and
push
rcr
daa
xchg
repnz
bound
adc
jno
add
lahf
aad
jl
ins
mov
mov
inc
jmp
mov
ret
in
push
icebp
adc
mov
cmc
iret
xchg
(bad)
ja
push
xor
das
rcr
aaa
cld
out
push
inc
inc
sub
fistp
loope
out
ds
out
jmp
iret
fisubr
inc
imul
add
mov
mov
stos
add
addr16
test
inc
pop
aad
sub
test
or
mov
(bad)
push
push
and
out
nop
aam
adc
(bad)
les
neg
cmc
inc
inc
outs
mov
push
mov
jl
and
ja
cmp
cmps
dec
leave
jo
jl
lods
arpl
cdq
pop
into
fdivr
sub
or
mov
js
and
cwde
stos
xchg
jmp
int
imul
sub
outs
adc
ret
mov
mov
add
adc
fisttp
shr
push
add
icebp
cmp
push
dec
sub
ret
shl
pop
xor
push
iret
jmp
jl
mov
retf
ret
int
push
dec
je
maxps
leave
rcr
sub
lock
mov
and
out
inc
dec
sub
lock
and
test
sbb
loope
mov
mov
inc
gs
jbe
mov
mov
inc
sahf
icebp
and
sbb
imul
xchg
xor
es
adc
add
idiv
add
adc
imul
sti
jecxz
test
push
in
and
popf
inc
fidivr
enter
shl
repz
push
std
jo
jae
adc
dec
xor
lock
ins
dec
into
jecxz
or
push
xchg
shl
call
(bad)
push
dec
sbb
push
das
lea
(bad)
mov
call
push
in
arpl
icebp
sbb
leave
pop
mov
sub
je
add
push
(bad)
or
sbb
push
sbb
xchg
sbb
mov
aaa
(bad)
std
imul
sar
add
sbb
iret
jbe
ds
xchg
push
mul
(bad)
inc
sub
mov
add
mov
jp
clc
xchg
stc
icebp
inc
in
fdiv
sbb
call
hlt
dec
mov
out
cmp
cmc
sbb
aaa
jmp
loop
sahf
pop
das
xor
or
call
arpl
sub
push
inc
mov
cli
xor
mov
pop
or
and
retf
imul
mov
mov
cmps
imul
push
dec
jmp
in
xchg
push
mov
add
cmps
cmp
mov
pop
(bad)
out
mov
jmp
add
jmp
cmc
jmp
cmp
ror
add
dec
jp
sbb
xor
push
stos
aam
scas
shl
cmp
push
push
jns
mov
mov
xor
cmc
pusha
sub
jmp
cmp
test
jp
in
and
add
outs
inc
cmp
movs
(bad)
and
imul
pop
mov
dec
dec
lods
retf
inc
jmp
dec
xchg
add
xchg
jnp
push
inc
and
dec
sbb
sbb
push
aad
or
inc
cmc
iret
sub
cmp
push
mov
test
repz
mov
jmp
add
sar
xchg
sar
enter
or
pop
pop
out
stos
fstp
and
ins
sub
stc
or
jle
les
mov
arpl
mov
jg
add
jg
cmp
cs
sub
ja
mov
test
lods
cs
add
pop
lahf
mov
push
jne
xor
mov
push
jg
mov
or
(bad)
pop
mov
add
fild
sar
push
push
push
cld
mov
dec
jmp
adc
mov
jns
cmps
pop
xor
push
dec
push
cwde
enter
sbb
push
xchg
mov
pop
daa
jne
(bad)
jmp
dec
jbe
jbe
mov
mov
test
test
or
int
loop
and
mov
retf
jae
fwait
cmp
je
call
xor
sti
call
sahf
jae
mov
or
div
or
mov
cli
sub
movs
fcomip
or
cmp
xchg
jb
retf
(bad)
adc
sbb
add
jp
movs
or
mov
ret
stos
dec
mov
xchg
int
inc
in
leave
inc
rol
test
pop
cmp
mov
jns
stc
xchg
rcr
dec
fnsave
dec
out
(bad)
and
mov
mov
lods
ror
jo
cdq
movs
mov
pusha
ins
push
and
mov
push
pop
sub
std
lds
xchg
gs
leave
inc
cld
and
mov
repz
pop
stos
fisttp
data16
shr
or
lahf
out
test
test
loope
push
jo
pop
daa
inc
imul
mov
es
xor
add
lahf
xor
data16
xlat
rcl
xor
jmp
and
jmp
xchg
stc
rcr
xchg
rcr
mov
mov
in
scas
arpl
xor
jmp
dec
retf
and
ds
mov
in
sbb
xor
cdq
fisubr
cld
(bad)
not
cmps
loop
les
xlat
and
sub
stos
fs
xlat
aad
xchg
push
leave
outs
ror
dec
jecxz
mov
cmps
jno
mov
or
popf
inc
mov
lahf
xlat
sbb
jmp
adc
dec
out
and
dec
in
or
mov
ins
mov
cmc
mov
ins
popa
jae
or
sti
sbb
(bad)
xor
repnz
scas
das
loope
or
jge
out
add
add
fld
out
adc
pop
ret
icebp
xchg
outs
fistp
mov
dec
jl
xchg
ds
shl
or
in
mov
mov
add
mov
xchg
add
and
sbb
mov
cli
ror
test
stos
rcr
adc
pop
sbb
call
pop
xchg
add
aad
loop
pandn
cmps
test
or
jl
retf
and
es
popf
dec
inc
dec
scas
(bad)
cmp
sub
pushf
retf
test
sbb
movs
js
jbe
jl
ins
lds
push
sub
mov
mul
inc
ss
(bad)
push
cwde
push
adc
dec
sbb
xlat
fisub
cmp
aad
gs
or
int
lds
mov
jo
pusha
push
shl
repnz
xchg
and
mov
dec
pop
(bad)
out
clc
movs
dec
aad
xor
das
jmp
push
sbb
sub
xor
jp
adc
pop
test
(bad)
adc
inc
add
push
loope
popa
inc
mov
mov
xor
pop
mov
dec
shr
ret
sbb
mov
test
jl
cmps
test
sub
add
jmp
repnz
inc
js
retf
call
sub
pushf
or
sub
pop
into
(bad)
in
sbb
sbb
or
adc
push
test
jne
adc
mov
push
in
jmp
mov
add
or
jecxz
(bad)
lock
sar
stc
test
mov
cmp
outs
(bad)
jo
loop
fsub
jns
ficomp
push
xor
push
fbld
loopne
add
jl
xchg
sbb
mov
imul
dec
(bad)
cmps
enter
pushf
dec
cmp
jne
cmp
jmp
adc
bound
shr
lods
repnz
out
xchg
push
jp
and
jg
xchg
fidivr
out
in
inc
pop
shl
cmps
int
jp
ret
lea
and
shr
jb
hlt
call
push
mov
dec
add
push
cdq
lahf
dec
not
sar
mov
push
repz
add
jae
mov
retf
cmps
xor
mov
jo
pop
jo
dec
loopne
pop
test
stc
cmps
and
js
or
xor
push
cmp
jge
inc
cs
mov
fisttp
inc
stos
xlat
adc
mov
mov
scas
sub
jb
test
retf
cdq
sbb
cmp
pop
scas
mov
dec
fs
or
add
xor
jnp
push
rcl
inc
mov
push
popa
dec
pop
sub
xchg
push
lahf
push
mov
mov
outs
arpl
xchg
sbb
stos
shr
mov
inc
push
sub
out
gs
(bad)
xor
fadd
adc
jnp
bound
add
in
and
cmp
push
das
aas
xor
sahf
cmp
fist
lods
les
sub
inc
cdq
jg
xor
mov
xor
pop
test
or
cld
jle
dec
push
mov
xchg
and
(bad)
jl
sbb
arpl
dec
pop
pop
std
xor
add
and
int3
daa
clc
stos
sbb
jp
pop
int
or
jbe
invd
repnz
and
or
adc
mov
xchg
push
push
ficomp
outs
and
leave
xchg
xor
ret
test
sub
(bad)
cmp
es
mov
inc
push
sub
std
clc
jge
imul
adc
imul
jns
jns
cmp
js
or
cmp
pop
xchg
test
scas
movs
inc
je
inc
add
jbe
loopne
sbb
jb
ret
retf
loope
stos
cmp
repnz
outs
push
aas
mov
sub
cmps
pop
push
push
lods
sti
mov
push
and
jmp
and
lods
fst
or
xchg
or
xchg
inc
and
js
nop
or
call
mov
jge
repz
fucomip
mov
jmp
push
xor
enter
fst
mov
jne
aam
mov
popa
jmp
dec
cmp
(bad)
xchg
mov
cs
cld
shl
sub
push
(bad)
sub
jbe
xlat
loop
dec
arpl
sub
pop
add
test
test
fstp
cmp
push
or
adc
push
pop
sub
push
sub
aam
repnz
add
adc
shl
pusha
cmp
cmp
shl
iret
test
fdiv
sbb
xchg
and
sub
and
mov
sti
out
push
pop
push
pop
loopne
dec
dec
push
(bad)
icebp
scas
mov
lea
ret
in
jge
icebp
mov
in
(bad)
fstp
push
inc
pop
call
adc
xor
dec
pop
(bad)
(bad)
repz
cwde
mov
addr16
cdq
dec
push
fimul
dec
(bad)
and
rcr
jbe
push
cmp
aas
stos
int3
aad
dec
sub
xchg
push
jmp
push
mov
mov
test
pop
int
into
stc
jno
mov
mov
push
add
into
push
pop
mov
push
inc
rol
mov
pop
movs
and
xor
out
outs
mov
or
mov
ins
and
rol
pop
fwait
mov
or
jb
mov
push
sbb
inc
loope
lock
and
lds
cwde
sbb
popf
xor
stos
in
cmp
xor
(bad)
push
movs
add
stc
sbb
lods
sub
aas
pop
xchg
jb
xor
mov
or
cmp
int
jge
cwde
mov
(bad)
push
outs
das
fimul
jp
cmp
cdq
add
lock
jmp
dec
mov
xor
sbb
mov
dec
bound
mov
fild
pop
test
pop
(bad)
jns
inc
cmps
(bad)
aad
sbb
int
je
sub
cmc
ss
ja
push
add
add
sbb
pop
pop
or
movs
dec
data16
outs
dec
leave
mov
or
sahf
dec
clc
mov
push
xchg
push
pop
(bad)
xchg
icebp
xchg
mov
or
les
adc
or
lds
cmp
int3
push
fstp
sar
lods
loope
inc
jp
fdivr
shl
jmp
jg
add
test
mov
or
mov
push
pop
packuswb
nop
ja
jp
mov
and
adc
dec
inc
jp
mov
jmp
dec
sub
inc
movs
into
fistp
retf
cmps
and
dec
fild
pop
fdivr
mov
xchg
push
addr16
ins
inc
jecxz
jnp
xor
shl
pop
lea
rcr
clc
xchg
or
mov
xchg
lock
sub
(bad)
jmp
jo
mov
or
or
fbld
aam
or
cmp
adc
sub
imul
hlt
ins
cmp
push
or
ins
mov
cmps
adc
ret
mov
sbb
pop
icebp
inc
mov
sbb
stos
mov
push
jp
outs
inc
enter
jle
dec
push
jb
test
scas
rol
out
mov
jle
jne
jno
xchg
mov
inc
push
sub
inc
pusha
pop
je
sbb
aam
or
pop
(bad)
xlat
mov
pop
push
cdq
xchg
adc
(bad)
mov
pusha
lods
fsubr
test
adc
push
retf
add
mov
call
xchg
push
hlt
push
ins
cld
push
jl
jo
fstp
sbb
mov
mov
mov
jns
adc
and
pop
jnp
add
sub
cwde
test
into
clc
inc
pop
jp
jnp
into
test
les
sub
push
pop
in
sbb
inc
popa
jns
out
icebp
test
and
inc
cdq
mov
adc
mov
test
movs
addr16
out
and
cmp
jne
push
xchg
sub
test
inc
or
dec
inc
gs
cmp
mov
mov
mov
pmaxsw
mov
cli
dec
into
sub
fimul
icebp
xchg
jmp
add
ret
and
fcomi
and
inc
cmp
int
adc
ss
fimul
xor
(bad)
leave
or
push
out
cmps
retf
jb
mov
and
sbb
inc
cmp
jns
sbb
or
jb
jns
pushf
jbe
and
jnp
test
inc
test
popa
outs
pop
sub
dec
xor
pop
add
inc
sbb
inc
(bad)
bound
std
pushf
std
sub
and
jne
loop
push
aam
jle
mov
adc
popa
ins
pop
stc
jle
into
or
scas
mov
imul
push
or
mov
and
out
inc
push
in
aaa
adc
out
aad
cmp
mov
fwait
jne
dec
sub
xchg
or
mov
lea
pop
addr16
pop
dec
fstp
sbb
xlat
daa
fs
push
ror
dec
mov
mov
cmps
xchg
cmp
cmps
retf
lea
add
xor
or
push
pop
xlat
adc
imul
mov
cwde
scas
mov
xor
jns
jns
stos
rcl
and
xchg
shl
inc
popf
dec
lods
xor
dec
mov
inc
xchg
and
iret
repnz
add
and
pop
adc
adc
sbb
push
adc
shr
pop
xlat
sub
mov
mov
dec
sbb
xchg
mov
pop
lods
ins
gs
mov
rol
fsub
(bad)
sbb
je
(bad)
leave
jecxz
sbb
gs
(bad)
pop
inc
(bad)
popf
xchg
cli
sahf
or
add
pop
ja
dec
rcr
mov
dec
jg
adc
and
xor
inc
pop
jns
inc
mov
mov
dec
add
dec
mov
aad
add
xor
in
call
lock
test
cmp
dec
stc
xor
xchg
fnstsw
aas
dec
je
xor
into
int3
sbb
jne
mov
es
lods
fs
mov
cmp
retf
jo
aam
inc
mov
(bad)
(bad)
in
push
call
retf
jo
aaa
push
adc
xchg
pop
enter
sbb
movs
pop
ret
icebp
sbb
aad
inc
mov
mov
mov
ror
stos
js
fsub
enter
lahf
add
xchg
int
cld
xor
xchg
fwait
scas
rcl
cmps
mov
(bad)
les
sbb
leave
sbb
xchg
cdq
in
mov
push
inc
arpl
sbb
mov
pop
xchg
scas
lods
jo
fs
push
in
in
cdq
(bad)
mov
dec
cmp
retf
xchg
aas
mov
stc
inc
inc
dec
ja
test
iret
nop
sahf
jne
test
xchg
(bad)
fadd
xchg
icebp
add
cmp
call
mov
outs
cwde
push
repz
dec
mov
scas
sub
xor
int3
mov
mov
add
mov
fwait
loopne
cmp
mov
stos
cmc
pop
mov
loopne
daa
xor
dec
cli
out
push
les
icebp
fst
pop
push
ror
out
xchg
fisub
xchg
addr16
cli
sub
sub
push
cmc
inc
rcl
out
fcom
cmp
call
pop
xchg
add
mul
test
aas
sub
aas
pop
adc
cmp
pop
mov
push
push
xchg
(bad)
sub
push
test
ja
mov
retf
or
lods
call
rol
push
push
mov
fcomp
cmps
shr
je
sub
sub
ins
daa
pop
dec
mov
mov
addr16
push
gs
cmp
adc
fcom
in
xchg
push
scas
jno
sub
addr16
xor
fcom
sub
jle
loopne
mov
add
and
test
xlat
push
pop
sub
test
pop
or
xor
stos
iret
jl
sub
push
and
(bad)
mov
inc
mov
push
ret
cmps
inc
sbb
in
jno
push
mov
gs
cmp
ret
push
sub
inc
dec
push
jmp
dec
movs
out
call
add
mov
cwde
nop
ins
loopne
mov
out
push
adc
add
js
mov
xchg
(bad)
sbb
sbb
es
and
stos
and
or
mov
lock
out
test
pop
xchg
inc
jge
ss
dec
loopne
inc
(bad)
sti
sti
jns
mov
xchg
sbb
(bad)
push
gs
iret
lock
outs
pop
mov
dec
ficom
ret
mov
ins
stos
mov
push
(bad)
fnstsw
addr16
stc
push
mov
iret
out
push
ret
ret
(bad)
jp
lea
stos
sar
js
aaa
stc
pop
push
(bad)
xchg
cwde
pushf
loope
cs
enter
and
aaa
sbb
div
add
dec
xor
xchg
sub
or
scas
das
cld
jno
rol
popf
in
fild
xlat
or
sahf
and
push
jns
test
shr
lods
out
pop
lds
iret
leave
pop
inc
loope
mov
idiv
cmp
movs
cld
popf
inc
aas
lods
bound
xchg
(bad)
movs
dec
clc
xchg
jo
mov
mov
(bad)
das
scas
shl
jecxz
add
adc
cld
jg
mov
repz
cmps
and
ins
cmp
mov
mov
mov
jmp
pop
ja
push
dec
dec
in
gs
dec
push
es
fldenv
mov
mov
ja
mov
fwait
ins
fcom
popa
sahf
pop
push
stc
in
and
mov
and
loope
mov
or
std
popa
jno
daa
in
mov
stos
mov
ret
dec
repnz
test
pop
sahf
stos
xchg
out
mov
ds
movlps
dec
rol
sahf
mov
push
sub
imul
aam
sbb
call
pop
dec
dec
call
mov
dec
and
xchg
mov
rcl
dec
ret
dec
xlat
ins
into
mov
jb
and
pusha
cli
jns
sub
sbb
sbb
cmp
mov
(bad)
push
fs
rcl
ins
cs
sbb
icebp
jno
or
push
clc
mov
ficomp
sub
in
imul
fimul
leave
jmp
xchg
mov
push
add
xor
lahf
sub
dec
shl
sub
sub
jle
mov
pop
pop
lods
in
push
out
not
or
lods
or
push
inc
sub
add
or
xchg
jmp
adc
pop
pop
fldenv
fsubp
cmp
push
pop
and
sbb
and
xlat
arpl
cmp
div
aaa
and
inc
loop
fisub
mov
xor
sbb
dec
fwait
mov
mov
sbb
jb
adc
add
xchg
push
imul
in
cmps
adc
pusha
xchg
mov
xchg
add
dec
mov
icebp
adc
jl
hlt
adc
sub
call
mov
daa
and
push
or
fidiv
rol
cs
inc
js
mov
arpl
fbld
adc
cmpxchg
aaa
lock
addr16
out
lahf
aas
lods
nop
out
aad
xor
sbb
dec
mov
mov
scas
loope
push
jae
cmp
aad
jmp
mov
jno
jl
push
jb
inc
and
jno
mov
mov
movs
push
test
(bad)
inc
or
jb
xchg
sbb
ret
pop
inc
jge
sbb
sbb
mov
jl
add
inc
mov
pop
(bad)
adc
cmp
jmp
mov
push
dec
(bad)
int
mov
pop
lods
fbld
mov
sub
retf
arpl
fdivr
and
and
jmp
adc
xor
das
or
lods
test
and
js
mov
test
mov
aas
mov
in
dec
pop
sub
js
jno
ins
fwait
jae
movs
lods
sar
pop
dec
hlt
mov
push
add
xchg
js
fsubr
xor
dec
imul
xchg
xchg
pop
icebp
sti
jne
sbb
int3
mov
add
cmp
push
retf
xchg
adc
jno
xchg
out
cmp
cmp
enter
mov
fidiv
fwait
data16
test
inc
sar
inc
dec
popf
mov
sbb
push
or
sahf
and
cmc
or
jg
inc
out
bound
div
xor
cmp
mov
or
jl
pop
data16
gs
inc
das
(bad)
cmp
push
add
or
retf
jp
inc
push
inc
ret
adc
or
dec
cmp
push
pop
mov
or
inc
lds
(bad)
sti
movs
cmp
mov
push
in
push
test
repz
test
cmp
test
sahf
(bad)
pop
lss
cmp
mov
jmp
iret
lods
mov
push
mov
push
aam
idiv
ror
jle
out
iret
retf
adc
mov
pop
jg
fldenv
(bad)
push
jge
es
dec
or
popa
mov
and
xor
cmps
(bad)
xor
inc
lds
mov
icebp
jnp
pop
ja
jno
mov
addr16
push
sub
hlt
std
mov
hlt
mov
in
cmp
sahf
jae
cld
out
add
mov
neg
dec
test
mov
mov
push
lock
push
sub
fst
addr16
xchg
ins
add
fwait
inc
pop
(bad)
mov
xchg
jge
adc
pushf
mov
add
mov
mov
lahf
cld
xchg
and
sbb
loop
inc
test
dec
adc
hlt
std
repz
jmp
or
pusha
or
fcomi
fiadd
sub
gs
sbb
xor
inc
jnp
loop
mov
sub
pop
xlat
fadd
repz
xor
sbb
inc
dec
out
clc
mov
mov
dec
push
and
inc
sub
sub
xchg
pop
sbb
pop
pop
push
mov
cmp
bound
sbb
fstp
dec
xchg
cwde
cmp
sub
dec
cmp
(bad)
mov
mov
mov
cli
sub
into
jbe
inc
daa
xchg
dec
sar
or
imul
adc
mov
push
inc
(bad)
idiv
jg
push
sbb
retf
nop
pop
not
or
inc
or
sub
adc
jne
pop
adc
inc
dec
cmps
push
jo
and
int
jb
jge
jg
test
xchg
scas
sub
ret
test
cmps
aas
es
add
mov
sub
push
outs
xchg
fwait
cmp
mov
sbb
jo
popf
add
adc
xor
xor
add
lods
jg
cli
out
cld
add
jns
call
lods
stos
cmps
dec
mov
xor
push
(bad)
fstp
mov
aas
call
and
outs
jl
jecxz
in
sub
sar
out
mov
mov
mov
add
push
cli
add
dec
and
inc
push
mov
add
add
cmp
cmp
les
pop
loopne
jne
sti
push
pop
xor
imul
mov
scas
dec
cmp
jns
push
jp
inc
in
ds
test
mov
daa
push
inc
rcr
xchg
pusha
push
mov
cmps
in
bound
scas
cwde
ins
xchg
fistp
gs
das
push
imul
inc
push
adc
push
je
pop
sbb
mov
push
gs
pop
jmp
(bad)
jg
cmps
push
inc
ins
xchg
fwait
xlat
out
clc
imul
lock
sbb
call
xchg
(bad)
dec
lods
mov
aaa
add
fnstsw
sub
ds
mov
idiv
retf
(bad)
xchg
cmps
adc
xor
or
mov
mov
cs
je
mov
mov
mov
mov
stos
nop
sbb
cmp
int3
sbb
cmp
fild
fisttp
mov
scas
outs
pop
icebp
dec
jae
and
add
lds
movs
iret
add
jnp
xchg
pusha
adc
(bad)
lock
loopne
dec
stos
out
jne
or
addr16
or
pushf
clc
jmp
and
and
or
hlt
dec
add
iret
inc
jnp
xchg
jb
add
jns
ficom
push
shl
pop
imul
sub
cmp
or
sub
jg
aas
cmp
mov
inc
jo
push
sti
push
adc
mov
pop
dec
das
lea
mov
in
cwde
inc
pop
push
dec
fisub
fmul
sbb
mov
imul
mov
leave
jge
dec
rcl
mov
dec
into
xchg
adc
into
scas
mov
cmc
sbb
pusha
daa
pop
jg
cmp
rol
iret
mul
test
pop
aam
jecxz
mov
ins
jge
mov
inc
js
loopne
dec
fistp
in
lods
int
iret
js
movs
shr
arpl
or
and
dec
and
fistp
cwde
div
pop
fldcw
mov
pop
ret
adc
jmp
mov
add
ds
mov
mov
lds
inc
sub
movs
in
push
repnz
shr
adc
inc
ins
call
push
es
mov
sub
and
sbb
sti
sbb
shr
sub
idiv
movs
and
inc
arpl
ins
adc
(bad)
dec
or
ja
push
retf
and
clc
or
cld
add
push
cmp
lods
sbb
inc
mov
fs
xchg
mov
loop
call
jno
test
xchg
pop
fcom
cmp
cld
dec
jo
xchg
pusha
lea
xor
dec
in
pop
shl
push
iret
pop
jecxz
mov
(bad)
fs
test
repnz
movs
inc
cmps
inc
mov
mov
in
jecxz
or
inc
clc
push
xor
aam
sbb
and
inc
clc
into
retf
xchg
xchg
arpl
movs
cmp
mov
imul
dec
add
mov
inc
jp
and
test
jmp
jns
mov
xchg
lods
pushf
in
movs
push
jne
jo
jb
sbb
(bad)
cmp
pop
cmp
inc
or
int3
jmp
cmp
add
lock
xchg
mov
inc
les
add
jmp
loopne
push
fidiv
pandn
daa
xor
mov
addr16
int
ins
out
or
repnz
test
or
mov
fldenv
hlt
xor
xor
ror
cmp
cld
dec
imul
movs
lods
fs
fwait
dec
clc
jge
das
dec
shl
mov
push
push
call
or
inc
and
aas
jnp
pushf
add
push
xor
mov
sbb
movs
push
cmp
scas
test
test
inc
mov
leave
adc
push
mov
(bad)
movs
mov
dec
mov
mov
call
jno
lock
mov
inc
mov
addr16
add
retf
jbe
pop
psubb
and
add
xor
pop
and
or
inc
sbb
shr
push
and
mov
cmp
or
jmp
jne
mov
movs
xor
add
pop
sbb
in
test
test
gs
jg
push
xor
int
jnp
push
dec
mov
lods
xrelease
inc
in
mov
es
inc
mov
sahf
movs
inc
adc
push
lods
and
icebp
addr16
add
fisub
stc
cmps
out
inc
jl
lds
popf
sbb
shr
in
dec
out
daa
inc
pop
imul
jg
icebp
nop
cmp
bound
rol
into
es
xor
mov
adc
aas
add
js
imul
xor
push
pop
loop
cmp
jle
pop
(bad)
push
dec
mov
std
mov
or
adc
fisub
pop
pop
cmp
push
ret
mov
jp
cmps
mov
add
or
cmps
sub
sbb
sbb
xchg
pop
or
ret
add
cmp
xchg
adc
in
xchg
pusha
or
and
pop
dec
or
popa
xchg
ficomp
cmp
mov
xlat
jmp
cli
ror
pushf
ficomp
xlat
repnz
data16
jp
mov
and
int3
push
mov
xchg
les
int
aam
hlt
fwait
mov
(bad)
scas
mov
inc
cli
fmul
pop
call
test
shr
and
loop
mov
call
jge
(bad)
jmp
addr16
(bad)
push
pushf
cmps
std
push
sub
pop
mov
mov
je
jecxz
imul
pop
addr16
add
fs
push
cld
jns
test
lods
and
shr
push
and
cmps
imul
jnp
dec
cmps
xchg
pop
movs
jbe
inc
sub
out
dec
in
mov
sub
mov
std
test
nop
dec
adc
mov
mov
out
jmp
repz
jb
mov
add
lock
jb
test
test
pop
cdq
mov
dec
pop
inc
ror
cmp
push
js
call
(bad)
pushf
inc
push
out
jnp
jmp
sub
pushf
scas
push
fdiv
out
popa
imul
repz
test
dec
xchg
pop
or
(bad)
adc
(bad)
sub
pop
jne
add
in
(bad)
fisttp
dec
mov
push
outs
pop
jb
pop
pop
lahf
mov
and
stos
jno
push
inc
xchg
sbb
and
mov
xor
test
xchg
cmp
pop
push
call
mov
rol
or
inc
popa
add
push
push
mov
fucomi
mov
xor
push
mov
std
xchg
mov
xchg
fld
push
cmp
outs
cdq
retf
mov
pop
xchg
jne
retf
cmps
mov
inc
stc
lods
cli
mov
lods
arpl
xor
push
or
ja
cmp
out
ds
retf
hlt
add
mov
aaa
(bad)
ficomp
push
ins
pushf
pop
sbb
out
xchg
mov
loop
fdiv
push
fbld
jne
xchg
dec
push
xchg
and
std
shl
mov
mov
inc
and
rol
cmp
sub
jecxz
cmp
sbb
(bad)
in
jb
call
pop
das
inc
sbb
out
mov
or
pop
jp
mov
fist
rcr
adc
ficom
sbb
js
pop
sbb
push
jb
adc
popf
out
ret
sahf
mul
stc
inc
sub
push
dec
xchg
stc
jo
in
push
mov
and
data16
dec
and
mov
cmp
adc
xchg
sub
pop
stc
or
xchg
arpl
jl
jbe
jmp
fisub
mov
test
fnstcw
sar
imul
movs
push
shl
jecxz
jo
ret
lahf
(bad)
push
std
sub
sbb
or
push
shl
add
cs
ret
sub
xor
jmp
fbld
jmp
xchg
xchg
mov
shl
jl
call
cmp
into
pop
dec
and
sub
jb
cmp
mul
ins
fs
add
fcmovnu
xchg
adc
cmp
lahf
lahf
mov
dec
loop
push
stos
mov
fild
push
popf
dec
sti
xchg
imul
and
(bad)
sub
inc
or
cmp
cwde
push
xor
mov
aad
cmp
xor
inc
adc
dec
ret
or
popa
jmp
test
popf
and
test
test
xchg
xchg
push
sub
or
sbb
ss
xchg
jmp
ret
inc
ds
xchg
js
mov
sub
ins
pop
(bad)
stc
(bad)
xor
or
mov
out
xor
fs
mov
push
inc
movs
dec
cmps
push
repnz
jmp
fs
cmp
mov
sbb
cmp
mov
inc
xor
test
adc
and
into
push
cli
mov
lahf
push
fldenv
fldenv
xchg
jge
std
(bad)
pop
mov
xor
mov
cs
xchg
out
mov
arpl
repz
inc
les
and
cdq
fwait
jne
jbe
sbb
(bad)
lock
cmp
scas
fnstsw
aaa
into
(bad)
mov
add
xchg
aas
inc
mov
xor
mov
ins
dec
dec
pushf
imul
mov
pop
addr16
test
or
out
or
xchg
mov
fdiv
mov
jl
fidivr
or
gs
fdivr
pop
and
mov
add
int3
in
fild
adc
shr
lods
add
xchg
push
and
lea
outs
push
sar
sbb
sbb
imul
cmc
xlat
lds
push
mov
icebp
pop
(bad)
pop
jmp
jno
outs
int3
add
xchg
jge
jge
iret
stos
jle
inc
cmps
mov
and
shl
jge
in
jo
inc
push
mov
mov
or
jns
scas
(bad)
retf
push
push
sub
pop
je
cmc
adc
int3
les
lods
pop
adc
leave
rol
test
sub
stos
jmp
push
imul
into
ud1
call
push
pop
dec
xchg
cmp
mov
pusha
add
push
pop
or
mov
repnz
fwait
add
mov
pop
sub
outs
fnstenv
jmp
xchg
hlt
popf
mov
dec
xchg
lea
push
test
mov
in
adc
fs
into
in
jno
mov
and
loop
dec
push
movs
push
inc
cld
idiv
sub
xchg
cmp
or
popa
mov
cmp
loope
div
mov
pop
pop
out
add
cwde
ret
xor
cmp
mov
adc
int3
mov
xchg
inc
mov
ins
or
hlt
and
sub
sbb
pop
mov
inc
xor
or
or
push
pop
es
pop
fiadd
dec
in
mov
add
inc
vpcmpeqw
shl
or
adc
das
adc
inc
xchg
xchg
or
add
mov
fstp
or
rcr
add
xlat
jle
sub
cmc
out
mov
(bad)
pop
pop
cdq
jp
scas
rcl
push
jbe
add
dec
cmp
or
call
mov
jb
xchg
fadd
cmp
or
or
je
fwait
cmp
movs
mov
ds
cdq
(bad)
into
xor
sbb
repz
mov
add
ins
push
push
sub
jmp
popf
ja
or
imul
and
add
sub
xchg
pop
cmp
xor
cmp
aas
ja
push
sbb
mov
mov
jg
dec
enter
pop
data16
sbb
jmp
pushf
pusha
xchg
and
imul
cmc
mov
pop
bound
mov
inc
cmp
jno
in
es
jae
inc
mov
jnp
test
cmps
movs
xor
and
stos
jge
cld
aam
ss
inc
test
je
in
(bad)
xor
or
bswap
mov
sub
ret
mov
shr
loope
sub
cmp
xchg
add
scas
and
les
ins
inc
(bad)
dec
mov
sbb
pop
cmc
in
icebp
imul
push
add
add
mov
int3
mov
pop
out
cmc
fwait
outs
es
inc
jp
rol
mov
cmc
fwait
fwait
inc
sub
or
jae
jmp
stos
dec
enter
pop
hlt
inc
rcr
mov
push
mov
fstp
movs
in
dec
jmp
cmp
mov
shl
pop
fwait
inc
fadd
test
mov
rol
fild
mov
popa
xor
(bad)
push
in
cmp
fdiv
mov
add
mov
or
sub
adc
mov
jb
and
jnp
adc
scas
mov
cmp
ins
sbb
cmp
sbb
push
in
fisubr
nop
test
pop
or
push
dec
inc
clc
jp
adc
xchg
lds
mov
(bad)
clc
out
mov
xchg
add
sbb
mov
std
sbb
sub
movq
sub
mov
pop
xchg
inc
enter
sub
and
inc
iret
xor
inc
sbb
or
bound
in
xor
js
dec
imul
fwait
in
mov
push
inc
retf
ds
push
sti
mov
mov
pop
mov
sub
push
adc
dec
rcr
adc
fbld
jmp
jmp
shl
popf
and
shl
repz
iret
inc
lds
adc
or
push
add
sbb
sbb
mov
push
jle
mov
cdq
xor
mov
in
in
push
push
and
sbb
xor
pop
repz
pop
adc
sub
add
retf
add
push
popa
mov
ins
pop
stos
ja
int
cmp
dec
xchg
icebp
jno
stc
sar
(bad)
cld
cmp
inc
xlat
retf
cmp
jecxz
cmp
push
into
add
lea
mov
jne
ret
enter
outs
cmps
and
sub
daa
lds
pop
add
clc
test
(bad)
enter
sub
push
scas
cmp
mov
mov
inc
xchg
jno
mov
xor
mov
repz
mov
mov
call
adc
mov
cmps
pop
dec
push
popa
mov
lea
or
mov
and
or
mov
push
pop
mov
movs
inc
in
(bad)
or
add
cmp
into
sbb
repnz
aaa
and
dec
out
repz
xchg
std
and
dec
push
push
mov
in
push
outs
mov
sub
mov
shr
push
pushf
jno
add
call
mov
mov
imul
test
fsub
hlt
xchg
sbb
push
mov
inc
fnsave
mov
push
inc
jns
lods
lds
sbb
cmp
test
imul
pop
pop
xchg
js
stos
inc
mov
or
nop
neg
dec
aaa
aam
jae
xor
xchg
(bad)
push
addr16
mov
inc
pop
mov
loope
and
jae
movs
stos
scas
xchg
dec
fwait
or
shr
mov
addr16
lahf
mov
daa
(bad)
hlt
dec
inc
jno
shr
imul
inc
adc
test
imul
mov
aas
xchg
imul
sbb
mov
xchg
lea
mov
fadd
push
jae
dec
out
ja
xor
imul
and
ins
mov
jp
jp
leave
iret
inc
push
movs
bound
mov
sahf
cmps
test
aas
addr16
jp
mov
mov
xchg
fld
pop
adc
lods
mov
fcomp
ds
xor
(bad)
cli
hlt
pop
retf
jae
add
adc
jae
ins
loope
iret
js
test
dec
ds
cmp
inc
hlt
repnz
jb
call
mov
xchg
mov
(bad)
sar
xlat
or
cmp
mov
mov
pop
mov
and
jns
jnp
out
pop
mov
mov
les
cmp
mov
or
iret
sub
loope
push
into
rol
inc
jne
shl
mov
jmp
push
fcmovnb
inc
push
lock
and
push
push
sahf
mov
mov
enter
dec
sub
mov
mov
jecxz
pop
add
inc
mov
push
int3
ficom
ins
xchg
out
ins
sub
repz
xchg
in
dec
inc
xchg
ficom
push
cmc
push
rcl
sub
out
jns
movs
add
mov
add
ret
div
adc
adc
jns
xchg
cmp
(bad)
(bad)
jmp
fs
sub
fadd
sub
js
ror
jl
hlt
movs
add
or
aam
cmc
sar
mov
imul
cmp
in
fidivr
inc
cld
fdiv
push
pop
jns
push
and
cwde
mov
jp
sbb
out
(bad)
xlat
bound
lods
ins
and
lods
cmps
cmp
daa
fdiv
inc
xor
scas
shl
or
add
cs
mov
sub
(bad)
jmp
stos
adc
rcr
pushf
or
fnstcw
lods
sub
sub
adc
rcr
sbb
sub
std
push
or
sbb
(bad)
jecxz
ficomp
aam
mov
movs
in
push
sub
inc
sub
les
retf
jecxz
xchg
add
sahf
mov
jns
fistp
and
mov
xor
rcr
mov
cld
xchg
xor
xor
push
js
scas
sbb
adc
nop
int
data16
imul
sbb
retf
cli
pop
or
inc
add
push
fnstcw
xor
jp
add
nop
xor
adc
div
adc
push
or
mov
xchg
ret
jne
rcr
jge
xchg
mov
mov
jl
sbb
rcr
push
retf
cmp
mov
clc
push
or
push
inc
outs
fisub
mov
(bad)
les
add
jo
add
xlat
add
ret
cmp
push
test
outs
sub
inc
xchg
fbld
aad
cmp
cmp
inc
xchg
addr16
cmc
xchg
std
sub
pop
sbb
jmp
xor
jmp
sbb
jp
sub
es
dec
idiv
scas
add
xor
adc
mov
jns
jg
and
mov
dec
scas
iret
clc
dec
aaa
fwait
jns
pop
mov
sbb
gs
fldcw
mov
mov
imul
sub
inc
in
add
iret
inc
imul
test
xor
sahf
es
mov
jns
aas
adc
clc
cmp
mov
test
and
out
movs
scas
addr16
aas
repnz
cmps
or
or
mov
(bad)
fcom
mov
or
das
sub
loop
ret
fsub
push
std
ret
xor
es
in
jle
fwait
cmc
jmp
stos
pop
clc
jp
loopne
bound
xchg
mov
adc
cmp
adc
cmp
cmp
pop
jl
adc
iret
xchg
rol
arpl
sbb
out
dec
into
movs
int
scas
test
imul
mov
mov
and
push
arpl
movs
ret
ins
xchg
scas
dec
cmp
sbb
push
leave
cmp
mov
addr16
jle
sub
sbb
xor
dec
in
lock
push
rsqrtps
mov
loopne
ins
aad
(bad)
and
ja
mov
inc
(bad)
mov
mov
fild
mov
jmp
jp
jno
mov
xchg
cdq
cmp
sbb
push
pushf
clc
in
mov
cs
and
test
je
xchg
push
stos
out
cli
inc
and
je
loope
pop
nop
mov
daa
pop
jl
xchg
xchg
pop
push
btr
dec
mov
pop
stc
xor
jge
inc
and
adc
inc
mov
fild
jmp
ror
pop
jmp
mov
lods
mov
(bad)
lock
xor
lods
(bad)
or
fucomip
inc
mov
loop
mov
retf
lds
aad
stos
shr
pop
outs
iret
loope
(bad)
jecxz
adc
push
xor
xchg
call
int3
mov
fist
imul
push
aam
mov
pop
adc
jbe
inc
js
ret
add
pushf
xor
sub
cmps
xor
sbb
sub
cmp
in
and
(bad)
push
sub
pop
ret
jmp
xchg
mov
scas
mov
loop
aad
or
sub
xchg
pop
pop
mov
adc
cmps
mov
cdq
adc
cmp
test
je
mov
fwait
push
bound
xor
mov
inc
push
inc
lods
xchg
lahf
aad
jg
movs
retf
cmps
or
inc
push
and
push
lds
stos
jg
nop
adc
fmul
out
pusha
and
mov
sbb
mov
add
movs
imul
jle
pop
lds
fs
mov
inc
ss
jns
push
shl
mov
sbb
xlat
xor
dec
leave
push
mov
jae
lock
rol
cwde
int3
dec
mov
cmp
mov
and
inc
sbb
adc
fiadd
sub
out
setb
push
mov
and
pushf
push
adc
mov
mov
out
cmc
dec
int3
pop
jns
js
rol
push
test
sbb
mov
push
adc
fmul
mov
pop
or
repz
(bad)
xor
add
jl
jge
mov
pop
push
adc
dec
or
sbb
or
popf
pusha
pusha
rol
fs
xor
and
cmp
inc
and
mov
std
xor
aas
outs
ret
movs
mov
gs
mov
je
mov
es
mov
xchg
call
add
mov
adc
retf
out
mov
pop
inc
pop
add
or
repz
fcom
pushf
and
xchg
enter
inc
push
pop
imul
jecxz
sti
mov
fidiv
add
sub
ds
dec
stc
and
mov
push
lock
xchg
retf
sbb
add
(bad)
mov
sbb
xor
jmp
sahf
mov
jo
in
jmp
stos
fs
inc
stos
dec
sub
cmp
test
retf
iret
push
xchg
add
jl
scas
inc
shr
sub
out
leave
jo
xchg
in
pop
mov
mov
or
and
imul
or
or
and
fwait
mov
stos
dec
mov
mov
push
popa
out
icebp
lds
dec
mov
test
int3
mov
ds
test
mov
into
(bad)
jp
mov
pop
xchg
or
inc
push
sub
mov
sub
leave
fnstcw
and
lds
jae
icebp
mov
sbb
mov
pop
fidivr
push
sbb
mov
adc
ins
(bad)
or
xor
stos
imul
jecxz
add
out
cmps
cmp
stos
fdiv
sbb
call
pop
xchg
push
sub
or
xor
sbb
inc
in
test
pop
jae
lods
or
cmp
jl
inc
fld
clc
fs
dec
xor
bound
das
dec
push
ja
jns
dec
jecxz
call
push
sar
test
fmul
enter
mov
sub
iret
neg
mov
cwde
adc
or
jns
cmp
sahf
shr
add
jae
or
repz
outs
pusha
dec
dec
movs
fs
jbe
adc
rol
in
xlat
repz
ins
fimul
cmp
jmp
cmps
mov
ins
das
push
sbb
jg
jo
(bad)
loop
pop
sbb
fnstcw
pusha
or
and
pop
xor
scas
cmps
sahf
mov
sar
nop
lods
mov
cmc
push
inc
test
push
ja
and
ins
adc
mov
mov
popa
mov
loopne
out
mov
(bad)
rcl
aaa
inc
in
pushf
(bad)
outs
outs
cmc
and
movs
mov
leave
in
push
loopne
cmc
xor
inc
xor
pop
mov
in
adc
nop
jno
mov
mov
xor
jmp
stos
cmps
jne
retf
in
push
cmp
adc
mov
adc
shl
lds
leave
sub
fnstenv
in
ja
dec
add
mov
js
xchg
aas
pop
js
push
cmp
mov
sbb
push
es
outs
aad
and
and
mov
push
les
sub
and
dec
shl
add
add
and
and
in
xchg
test
pusha
jg
sub
call
pop
add
(bad)
adc
sbb
repz
outs
mov
loope
jnp
cmc
jns
jp
ret
iret
dec
mov
push
popa
adc
or
ret
int
add
and
xchg
jns
clc
shl
lock
repz
xor
mov
shl
push
mov
inc
mov
fld
stos
xor
sub
push
outs
lods
ss
ret
sbb
jecxz
sub
and
xchg
cmp
inc
sub
mov
pop
mov
add
push
retf
add
xchg
push
mov
push
mov
out
add
popf
fmul
outs
mov
int
cmc
dec
jne
inc
adc
call
jle
jmp
sbb
jmp
mov
sub
outs
jbe
pop
loopne
test
jle
or
mov
xchg
inc
inc
outs
push
popf
pop
mov
push
mov
repz
lahf
inc
mov
pop
loopne
int
mov
iret
shl
fmul
cdq
jmp
xchg
lahf
neg
cmc
aad
pop
repz
sbb
pop
repnz
aaa
lahf
or
ror
cmc
fist
stos
scas
add
or
and
into
ss
mov
xchg
iret
xlat
mov
scas
pop
adc
leave
inc
std
(bad)
and
cld
mov
loop
icebp
(bad)
cdq
out
sub
aam
jle
inc
mov
ror
jne
pop
xchg
add
push
outs
lock
movs
in
clc
aad
out
sub
out
mov
retf
xchg
jb
ror
sbb
loope
dec
out
push
mov
fwait
aas
and
lds
push
jnp
fwait
scas
or
adc
repnz
push
sub
mov
add
test
adc
dec
gs
arpl
ror
pop
and
cmps
icebp
add
out
jp
arpl
and
test
mul
sahf
mov
adc
lea
rol
adc
jbe
sbb
adc
ror
fisttp
fwait
cmps
push
int3
sbb
cmp
push
stos
(bad)
or
mov
stc
push
mov
div
addr16
sub
cmps
xor
jle
lahf
pop
lar
cs
mov
or
jne
test
or
xchg
push
push
pop
sub
ror
ja
mov
pusha
push
jmp
fbld
gs
inc
jbe
movs
mov
iret
jl
pop
mov
cmp
pop
cmc
lock
sub
iret
xor
jno
inc
xchg
sbb
pop
pop
ins
xchg
xchg
jmp
xchg
nop
test
and
pop
pop
repnz
mov
push
jp
daa
bound
mov
fs
pop
and
fidiv
dec
repnz
jle
sub
or
jmp
test
jbe
test
cmp
mov
pop
push
shr
inc
jecxz
add
jbe
dec
aas
mov
inc
das
call
cmovne
cli
js
cmp
scas
xchg
sar
pop
outs
ins
mov
pop
movs
jo
fisttp
jae
arpl
dec
push
lods
or
imul
daa
jnp
xor
sub
push
sbb
idiv
mov
dec
push
cmc
sub
add
jecxz
nop
ss
dec
aaa
mov
fst
mov
cmps
scas
add
fist
jmp
fidiv
mov
ins
xor
push
aas
xchg
jecxz
pushf
push
popf
test
das
push
and
mov
ja
nop
loopne
push
mov
cmp
std
lahf
stos
(bad)
push
jnp
xor
jne
xlat
cmp
sub
das
jae
sbb
lea
outs
gs
adc
mov
test
test
mul
or
cld
mov
mov
loop
test
mov
cs
xor
icebp
adc
adc
ret
fmul
jg
lods
sub
in
pop
in
jae
in
push
and
xchg
les
aas
shl
pop
inc
and
into
add
mov
cmp
mov
scas
sbb
sar
lds
scas
adc
out
(bad)
adc
retf
sub
xchg
or
mov
cmp
sbb
cld
and
push
rol
cmp
dec
inc
stos
stc
mov
pusha
mov
pop
imul
lock
ins
sbb
push
cmps
jge
mov
and
ret
xchg
mov
mov
jp
mov
sub
add
and
frstor
(bad)
and
mov
leave
xchg
sub
movs
fdiv
shl
mov
push
out
neg
push
add
mov
xor
shl
xchg
push
test
push
fisub
retf
adc
fcomp
leave
adc
adc
push
mov
call
(bad)
cdq
xchg
jmp
(bad)
push
ins
or
sub
pop
dec
push
mov
pop
push
sub
sbb
sub
ins
into
and
mov
jne
test
test
lock
sbb
ins
sub
add
jb
je
dec
sbb
mov
cmp
test
or
(bad)
mov
xor
adc
sub
jecxz
mov
pop
sbb
test
xchg
fadd
in
inc
sub
sbb
fadd
mov
loop
adc
nop
xor
retf
ret
fistp
fld
stc
dec
popa
jmp
jle
scas
inc
iret
pushf
push
cmc
(bad)
fist
lods
pop
inc
sahf
xchg
push
jno
mov
fmul
les
sbb
test
fdiv
daa
cmp
jecxz
mov
fist
out
xchg
xchg
mov
inc
gs
les
pop
lods
je
repnz
out
xchg
icebp
lds
sbb
xchg
int
sub
lock
cld
mov
cwde
retf
mov
jo
mov
cmps
rcl
cmp
dec
add
test
clc
(bad)
dec
inc
pop
push
adc
cmp
jge
add
lock
mov
adc
jg
cwde
dec
cmp
test
xor
aaa
lea
sbb
sub
loop
or
dec
dec
lock
shl
or
cmp
shrd
hlt
sti
inc
inc
mov
mov
lahf
add
cmps
ficomp
pop
cmp
out
dec
sub
pop
enter
scas
pop
repz
aas
retf
or
fs
push
add
adc
arpl
sbb
lock
push
scas
adc
dec
jbe
cmp
mov
stos
fnstsw
loopne
imul
sub
inc
(bad)
js
mov
test
ret
xor
xchg
pop
call
cs
mov
cmp
fidivr
xlat
mov
cmc
or
push
out
xor
mov
jmp
push
ins
mov
jns
push
jl
mov
je
pop
into
pop
movs
and
mov
call
mov
sbb
hlt
in
xor
test
xchg
cmps
mov
mov
inc
mov
mov
shr
shrd
cmpps
lea
inc
sbb
out
es
push
fsubr
std
mov
xchg
pop
repz
idiv
cwde
adc
sti
inc
sub
and
sbb
push
xor
push
push
ins
jmp
inc
(bad)
cmp
imul
or
add
sub
push
out
test
and
push
and
add
cmp
dec
mov
ret
push
stos
repnz
fdiv
add
xor
cmp
shl
stc
pop
xchg
ss
mov
aad
rcl
out
mov
and
(bad)
(bad)
pop
inc
out
mov
fsubrp
cwde
dec
add
jg
(bad)
mov
inc
in
fistp
test
adc
and
jo
xchg
cmpxchg
repnz
icebp
dec
and
dec
and
pop
mov
fcmovne
mov
inc
sbb
mov
sti
dec
dec
xchg
adc
push
mov
add
cmc
xor
xchg
add
clc
mov
int3
jp
imul
dec
and
ds
jno
pop
retf
fs
scas
sahf
dec
dec
pop
test
push
mov
and
jne
sub
stc
adc
lock
mov
sbb
dec
test
mov
push
inc
mov
or
mov
inc
enter
mov
ror
push
(bad)
dec
mov
shl
xor
fidivr
adc
fadd
clc
into
sbb
std
cld
jmp
fsub
in
imul
mov
pusha
cwde
mov
ret
xchg
test
mov
repnz
dec
stos
push
unpcklps
cmps
add
fld
mov
mov
xchg
cmps
shl
(bad)
in
mov
cld
jmp
call
sbb
enter
cs
fidiv
inc
xor
xor
fnstsw
(bad)
xchg
call
cmps
pop
adc
ss
dec
jns
xor
test
pop
out
adc
sub
cmp
dec
dec
add
jo
stc
test
inc
not
loopne
fld
cli
mov
int3
aam
push
dec
jns
push
outs
je
mov
ins
shl
and
out
push
arpl
(bad)
cmps
in
es
xor
sbb
ja
adc
addr16
leave
jmp
jne
ss
adc
pop
je
retf
pop
sbb
lds
mov
mov
inc
inc
push
data16
sub
bound
and
sbb
aam
mov
cmp
test
xchg
push
sbb
xchg
jno
pop
lock
or
hlt
lock
jmp
pop
scas
(bad)
cmp
fimul
movs
repz
xchg
mov
scas
push
mov
test
and
loope
(bad)
iret
aad
or
fisttp
test
sti
es
push
jne
mov
iret
retf
cmp
mov
push
cmp
movs
or
push
imul
cmp
inc
(bad)
lds
into
inc
mov
out
mov
nop
pop
cmp
lock
stos
repnz
sub
jb
sub
outs
jle
push
retf
inc
out
adc
sub
lds
add
sub
mov
inc
pop
and
cld
push
dec
rcl
xchg
pusha
retf
idiv
sti
add
sahf
cmp
int3
in
pop
cmc
cmp
cs
sti
cmp
stos
pusha
mov
lahf
in
push
icebp
lods
pop
push
adc
fisubr
jmp
and
add
xchg
enter
stos
and
daa
push
dec
mov
inc
sub
lock
inc
push
dec
out
cmps
and
dec
xor
addr16
mov
jb
inc
add
push
fidivr
jbe
mov
test
sbb
sbb
push
movs
retf
mov
push
pop
jge
sub
jmp
cmps
not
sbb
cmp
jne
fwait
imul
shr
mov
inc
arpl
repnz
outs
jne
jle
or
sar
sub
xor
or
dec
xor
cmp
mov
xchg
fs
inc
out
in
push
and
jg
fcomi
push
dec
stc
scas
out
pop
cwde
sbb
xchg
rcl
and
aad
sub
push
pop
fnstcw
sahf
and
xchg
xlat
add
lods
or
push
dec
add
adc
int
loope
inc
scas
pop
sbb
not
(bad)
clc
sub
js
loopne
aaa
jbe
fisub
adc
mov
jge
add
mov
inc
enter
push
inc
les
icebp
and
sub
jmp
int3
dec
ja
mov
aam
mov
xchg
jle
lds
lahf
push
leave
(bad)
push
jmp
fild
pop
jo
xor
sub
xor
outs
mov
aad
mov
fld
xchg
push
mov
jmp
test
pop
jnp
jge
jmp
ret
mov
cmp
out
push
fcmovb
mov
call
in
add
push
retf
and
jne
jmp
mov
add
aam
inc
sbb
fst
(bad)
mov
mul
jge
leave
mov
sub
sub
xlat
(bad)
fidiv
dec
dec
push
inc
jge
call
dec
mov
call
pop
lahf
add
int3
gs
das
pop
rol
xor
nop
(bad)
or
or
jecxz
clc
pop
test
ror
inc
bound
jo
outs
inc
mov
push
in
push
or
push
test
xor
and
pop
test
sub
std
cdq
(bad)
arpl
push
pop
leave
sub
aas
aas
daa
jecxz
in
mov
xchg
adc
(bad)
or
test
adc
or
sbb
jge
sub
push
in
fsub
jle
xchg
scas
clc
push
imul
cmc
or
imul
jle
stos
push
pop
cmp
out
jle
je
lahf
and
xchg
mov
dec
adc
fscale
scas
xlat
pop
sbb
rcr
dec
pushf
and
cmps
mov
inc
movs
cmp
popa
xor
jp
adc
xor
ins
int3
dec
push
int
bound
mov
jnp
sbb
scas
nop
sub
mov
sahf
jns
outs
cs
add
adc
movs
test
dec
clc
pushf
jns
(bad)
jmp
jecxz
lock
xchg
add
lds
(bad)
loop
imul
mul
inc
sub
mov
into
push
xor
pop
iret
test
sbb
cmp
xchg
inc
mov
add
sar
mov
in
mov
dec
pop
lock
pop
dec
jne
sbb
adc
or
and
adc
stos
mov
mov
shr
mov
cmp
adc
stc
popa
mov
arpl
mov
into
imul
jge
aam
into
icebp
sub
mov
sbb
pusha
and
aas
or
not
ins
adc
ins
lss
div
jb
test
sbb
fdivp
les
lds
push
adc
cmps
xchg
push
ins
dec
xchg
dec
or
fld
call
aam
adc
pop
add
ds
aaa
loopne
jg
dec
and
inc
outs
dec
or
inc
cmc
rcr
in
inc
xchg
jb
mov
aad
inc
mov
sti
dec
repz
ins
xchg
fst
setge
dec
xchg
sbb
cdq
(bad)
in
fs
mov
pop
jbe
shr
xchg
sub
or
mov
bound
xchg
xor
push
cmp
sbb
jmp
fistp
or
pop
xchg
jns
(bad)
mov
dec
sbb
mov
outs
fwait
jbe
jo
ds
add
js
adc
and
ins
sub
push
pop
sub
and
(bad)
outs
stos
jmp
adc
or
ja
daa
pop
fs
es
aas
jb
push
cmc
mov
lods
sub
fisubr
fdivp
in
test
cdq
inc
aas
push
jp
leave
sbb
hlt
sbb
lea
sbb
cld
mov
test
cld
sbb
lahf
sub
cmp
sub
ror
xchg
(bad)
sub
sar
enter
add
es
or
jnp
inc
or
adc
push
xor
mov
in
mov
sub
mov
jnp
mov
lds
(bad)
dec
rcr
xchg
pop
xchg
xor
cmp
dec
cmp
stos
adc
dec
and
aas
dec
neg
inc
imul
xchg
aad
inc
mov
sub
ss
pop
fadd
(bad)
fisttp
(bad)
je
push
pusha
cmp
dec
rol
inc
fsub
into
inc
or
addr16
push
dec
mov
or
mov
test
daa
mov
dec
jmp
jmp
xor
jo
movs
test
popf
mov
mov
sbb
mov
sbb
lods
arpl
add
stos
lahf
stos
cmps
add
scas
cwde
ficom
inc
ja
repnz
fwait
xor
pushf
shl
movs
stos
mov
xchg
pop
sbb
push
lods
scas
inc
xor
(bad)
cwde
stos
sbb
mov
stc
sahf
les
pop
rcr
ss
jnp
pop
clc
push
test
js
sahf
stos
xchg
mov
imul
cmp
xor
push
lods
aad
mov
jnp
jmp
jns
or
cdq
push
cmps
imul
xchg
std
loopne
gs
pop
mov
repz
mov
aas
cmc
inc
mov
test
(bad)
jbe
fdivp
cld
pop
jmp
(bad)
fwait
movs
call
sahf
out
out
fnstenv
jmp
ret
push
jno
fsub
push
sub
push
inc
sub
mov
(bad)
cmp
add
shr
ins
cmp
xlat
repz
xchg
ret
xor
jo
mov
fwait
(bad)
add
mov
sbb
jge
mov
data16
iret
dec
into
mov
add
pop
xchg
sbb
pop
sub
mov
cli
mov
daa
sar
inc
sub
xchg
enter
xchg
popa
mov
mov
stos
lds
aas
mov
mov
xor
imul
xor
sbb
js
out
mov
mov
lods
mov
push
gs
add
test
movs
jl
repnz
mov
test
pop
jl
push
maskmovq
test
in
ret
rcl
xchg
test
cmps
mov
fst
(bad)
ins
clc
nop
pushf
xor
xchg
enter
aam
cmp
cmp
jnp
xchg
jno
into
sti
enter
sub
jge
outs
push
add
add
sar
ror
inc
xchg
dec
(bad)
xor
gs
sbb
push
lods
xor
lods
sar
jmp
das
mov
addr16
das
pop
xchg
loop
loope
xor
mov
inc
mov
add
cdq
inc
add
(bad)
jmp
mov
sbb
jg
jecxz
push
ss
jne
popa
xchg
or
pusha
jmp
fs
adc
ja
fidivr
cmp
movs
cmp
test
mov
mov
xchg
cli
ds
cmp
retf
ret
ds
ins
add
xchg
je
bound
popf
out
lahf
cmc
add
mov
and
in
and
out
outs
pop
mov
loopne
(bad)
test
(bad)
ror
(bad)
sar
mov
cwde
pushf
add
xor
pop
jg
cdq
adc
jge
loop
inc
mov
xchg
lods
daa
push
inc
pushf
popf
es
adc
mov
xor
push
pop
mov
mov
nop
mov
sar
jns
ret
xchg
pop
mov
mov
inc
int3
add
daa
cmp
cli
push
(bad)
cwde
clc
push
xlat
test
call
sbb
mov
ss
pop
pop
lods
outs
jmp
or
mov
sub
int
jle
adc
jb
aas
or
cmp
je
push
movs
push
inc
push
lods
arpl
xchg
and
or
xor
repz
xor
mov
hlt
cmp
lock
into
cmc
out
ins
push
retf
jo
mul
mov
xor
hlt
dec
xchg
xlat
or
out
mov
mov
les
mov
(bad)
mov
or
xor
lods
or
cmp
push
inc
jp
fldlg2
jle
mov
mov
mov
mov
mov
adc
cmc
aad
icebp
std
xchg
jmp
mov
(bad)
stc
out
pop
daa
jmp
ficom
out
dec
cmp
ja
loopne
push
add
(bad)
stos
in
lods
ror
inc
int3
jg
mov
arpl
es
mov
xchg
fistp
pop
jnp
fimul
or
push
test
inc
ss
mov
fadd
and
lahf
shl
mov
outs
or
mov
mov
nop
pop
stc
call
dec
inc
add
lods
psrld
push
xor
push
fidiv
call
rcl
mov
pop
mov
std
mov
mov
mov
xor
pop
aas
or
out
je
jle
loope
lods
cmps
xor
jnp
sbb
push
mov
cdq
out
aaa
nop
and
cmc
or
enter
sbb
(bad)
and
cmp
mov
push
or
ss
ins
add
jbe
jbe
sbb
or
push
xor
mov
out
jno
ficom
xchg
les
or
mov
inc
adc
mov
into
aas
pop
sub
in
jmp
push
sbb
ss
adc
pop
xchg
xchg
jmp
pop
inc
pop
lods
mov
xchg
or
(bad)
dec
frstor
sub
test
xor
mov
shr
lock
push
popa
jmp
aas
in
push
push
inc
cli
movs
sub
std
mov
loopne
retf
xchg
sub
sub
std
aad
dec
mov
push
cmp
xor
mov
ja
pop
test
dec
push
mov
rcl
sbb
jb
jnp
das
dec
pop
mov
push
je
movs
ret
jne
mov
jge
js
inc
test
repz
sub
lock
les
push
scas
out
scas
cmp
imul
gs
jbe
into
sub
pop
fwait
ds
sub
scas
ret
sahf
loope
mov
dec
loope
add
mov
repz
and
mov
inc
push
xchg
or
xor
psrld
in
int3
sbb
rcr
dec
adc
fsincos
loopne
mov
sub
cmp
cmc
lds
pop
(bad)
loop
fs
xor
jp
pop
cmp
pop
jl
clc
and
int
push
je
fwait
test
sbb
dec
push
sbb
sar
mov
out
pop
jl
lock
push
xor
sbb
ins
(bad)
sub
xchg
stc
dec
dec
sbb
xor
mov
pop
sbb
pop
dec
loop
push
mov
pusha
xor
int
push
nop
xchg
jg
cmps
idiv
and
mov
push
fs
cmps
aaa
dec
cld
test
sbb
xchg
jge
xchg
test
sbb
cdq
in
rcl
pop
iret
mov
mov
dec
out
js
fidiv
add
inc
mul
mov
mov
dec
cmpxchg
dec
(bad)
sti
cmps
lea
bound
push
lods
lods
xchg
lods
cmp
jp
test
into
aas
popa
xor
inc
pop
fadd
jle
adc
xor
call
arpl
push
fstp
mov
and
jmp
inc
lock
mov
push
push
call
add
pop
jne
test
sub
xor
aam
push
mov
pop
xor
xor
mov
hlt
test
push
push
ja
push
mov
loope
or
push
popa
in
mov
ins
pop
(bad)
sub
mov
imul
cmpxchg
or
jmp
aam
xchg
xor
inc
jo
retf
xchg
push
mov
js
mov
and
sub
hlt
shl
sub
std
cmp
add
and
lock
outs
clc
cmp
sub
je
gs
adc
movs
inc
cmp
jmp
inc
push
and
dec
sbb
mov
and
shl
jnp
xor
(bad)
sub
pusha
jmp
jb
nop
push
gs
dec
ret
out
in
aam
scas
jge
call
mov
push
in
pop
xchg
xlat
sti
popf
cdq
sub
jmp
push
cli
mov
popf
xchg
(bad)
push
and
adc
mul
fisub
out
jae
aaa
stos
mov
xor
inc
imul
arpl
in
dec
je
fsub
(bad)
sbb
retf
movs
and
idiv
and
xchg
sub
ins
xlat
pop
arpl
cs
pusha
jb
sbb
fadd
cmp
pop
cdq
nop
adc
inc
inc
mov
mov
arpl
sub
and
mov
test
fisttp
xchg
fs
mov
into
outs
loop
ds
push
das
dec
push
sbb
jno
pop
or
jp
xchg
jmp
dec
sub
(bad)
dec
jg
fist
(bad)
push
xchg
xor
adc
in
fs
sub
(bad)
ds
test
je
ror
lock
or
neg
push
cmc
rcl
fs
inc
loop
sub
cwde
or
int
rcr
lea
call
sub
sub
pop
mov
fst
movs
mov
aam
sub
mov
aaa
mov
jmp
mov
add
jnp
add
(bad)
(bad)
jbe
dec
sub
add
into
test
iret
fimul
std
loope
cmp
aas
mov
cmc
(bad)
xor
lods
xchg
test
push
push
jns
fcomi
mov
and
daa
in
add
jbe
mov
cmp
push
pusha
dec
into
sar
mov
(bad)
js
f2xm1
and
push
das
scas
and
adc
adc
cwde
daa
jmp
fistp
add
mov
add
loope
mov
in
test
(bad)
add
inc
xor
test
loope
in
enter
sub
pop
ss
aas
sbb
mov
jge
aam
aaa
in
push
mov
ror
jb
test
popa
test
out
adc
aad
xor
clc
ror
call
inc
int
and
push
js
aaa
cmp
in
outs
pop
call
xlat
shl
push
cmp
(bad)
and
jns
pop
jnp
test
push
(bad)
call
fst
and
or
mov
div
or
icebp
mul
sub
dec
popf
add
add
addr16
std
cmp
push
push
mov
enter
addr16
jmp
pop
pop
stos
imul
push
jge
cmp
enter
sbb
push
ins
lds
aad
hlt
movs
add
mov
shl
mov
in
push
and
repnz
lock
mul
inc
mov
idiv
mov
sbb
loopne
add
dec
jmp
retf
(bad)
imul
dec
ss
push
pusha
mov
adc
in
sub
popa
ret
pusha
cmps
or
lods
xor
xor
imul
dec
test
ins
(bad)
sub
dec
fld
out
pusha
jae
ins
popf
mov
test
xchg
adc
(bad)
int3
into
sbb
fdivrp
cmp
dec
(bad)
hlt
cmp
inc
iret
xlat
mov
mov
fsubr
inc
dec
inc
push
aaa
jg
and
xor
add
and
int
dec
jo
xor
mov
cli
mov
ror
stc
jb
mov
mov
hlt
sbb
call
sbb
enter
cmp
shl
jne
out
cs
test
adc
push
sbb
add
lock
sub
add
mov
sbb
es
inc
jno
imul
push
popf
inc
ret
les
sub
push
xchg
outs
sahf
(bad)
or
push
xchg
es
and
pop
rol
push
retf
(bad)
adc
scas
stos
out
mov
and
and
xor
xchg
fisubr
push
cdq
out
retf
dec
(bad)
loopne
jge
adc
xor
inc
push
mov
loope
add
test
sub
test
je
dec
fisttp
xchg
inc
mov
pop
les
(bad)
(bad)
mov
or
cdq
dec
(bad)
mov
loopne
das
(bad)
inc
xchg
inc
adc
sti
(bad)
mov
int3
mov
inc
sub
fisub
bound
inc
inc
pop
rcl
clc
mov
dec
jmp
pop
jg
adc
das
int
iret
sub
repz
pushf
push
push
hlt
mov
jmp
mov
cmc
push
adc
shl
xchg
cld
cwde
xchg
hlt
mov
push
and
stos
sub
retf
shl
fcompp
cmps
pusha
inc
movs
data16
das
bound
mov
jmp
pop
pushf
sub
mov
xor
lea
lea
push
shr
retf
in
fldenv
enter
mov
mov
push
mov
mov
xchg
push
mov
bt
mov
jns
push
add
cli
mov
ja
sub
sar
pop
adc
xchg
ret
and
jg
inc
or
jmp
jb
(bad)
mov
mov
movs
loop
lock
adc
fnstsw
nop
es
dec
cmps
lods
cmps
push
sbb
and
xor
and
mov
sbb
fptan
cmp
push
jb
into
mov
sbb
call
movs
adc
cmp
jg
push
push
cdq
and
xor
cmps
push
pushf
mov
into
fucom
aaa
ins
rol
add
retf
add
xchg
leave
call
cli
test
pop
push
mov
cmps
scas
loopne
mov
(bad)
fadd
shr
(bad)
cmp
or
xor
xchg
sub
pop
retf
jmp
call
adc
jge
jp
imul
ins
add
pop
xchg
jmp
push
das
pop
cmp
call
imul
sub
pusha
push
call
xor
cmp
fnstcw
sbb
and
or
and
inc
xor
add
aas
xchg
pop
inc
mov
mov
jecxz
(bad)
sub
dec
pop
mov
(bad)
out
(bad)
pop
cmp
adc
data16
jmp
xchg
ins
(bad)
sahf
mov
adc
pop
dec
dec
add
inc
(bad)
fstp
daa
enter
adc
nop
sbb
push
out
or
add
neg
inc
rcl
ret
pop
ror
sbb
mov
sbb
shl
pop
xchg
fstp
(bad)
dec
daa
call
xor
sub
mov
pushf
repnz
jge
cmp
cmp
imul
jmp
in
mov
and
push
mov
aaa
test
cmps
pop
inc
rcr
or
out
test
imul
dec
inc
inc
and
dec
xchg
cmp
jge
xor
jp
cwde
rol
or
jl
loop
dec
mov
mov
push
les
mov
mov
xor
inc
xchg
icebp
pop
cld
inc
stos
pop
push
xlat
fcomp
iret
push
sub
jp
pop
xor
movs
test
mov
pop
shl
ret
test
cmp
aam
lock
mov
sub
outs
clc
add
jle
add
sbb
popf
pop
and
and
xchg
inc
dec
xchg
mov
mov
fs
fidiv
leave
jbe
or
dec
fwait
in
adc
mov
adc
xchg
adc
jl
hlt
les
fisubr
jg
dec
ret
(bad)
mov
call
fcmovne
add
cli
mov
call
fst
jmp
jg
aam
mov
gs
mov
sbb
jl
xchg
push
mov
push
fs
inc
mov
push
and
cdq
mov
and
loopne
or
iret
pop
shr
loop
add
inc
in
add
movs
jle
mov
aas
or
enter
mov
jne
es
lock
mov
lods
mov
ficomp
and
in
mov
sub
sbb
retf
jae
int3
stos
and
ss
hlt
(bad)
aas
pop
jae
dec
js
adc
rcr
mov
or
cmps
movs
dec
ret
lods
xchg
rol
pop
pop
into
pop
mov
xchg
mov
out
inc
cmp
mov
aad
fld
fwait
mov
into
call
out
cld
retf
jl
jge
sti
and
ror
js
mov
inc
push
dec
adc
sbb
pop
mov
jae
sub
mov
xchg
repz
and
and
sub
mov
or
fstp
cmc
dec
xchg
mov
les
iret
lahf
in
push
shr
(bad)
jns
sti
inc
movs
loopne
mov
cmp
jle
or
retf
cmp
repnz
out
pop
inc
aam
mov
mov
cmps
sti
mov
pop
retf
mov
inc
fwait
cmp
aas
pop
add
push
pushf
(bad)
jno
rol
mov
xchg
ja
fwait
out
push
out
or
lahf
clc
pop
sbb
mov
(bad)
fisttp
stc
pop
xchg
push
or
cmp
xor
jle
push
bound
mov
and
sub
in
mov
jne
sub
repz
movs
icebp
loopne
arpl
retf
out
cmp
push
cmps
add
sbb
outs
arpl
mov
int3
aam
shr
out
push
dec
mov
mov
xchg
inc
ficom
add
and
in
(bad)
fisttp
push
sub
inc
mov
push
push
scas
adc
mov
inc
cli
mov
daa
xchg
cmp
dec
lds
xlat
mov
ror
xlat
and
xor
cmp
stos
mov
stc
in
iret
out
cmc
push
jl
mov
repnz
ret
or
fidiv
pop
imul
or
loop
pushf
gs
cmc
(bad)
sub
dec
sub
push
jno
(bad)
popf
push
(bad)
js
retf
push
cmp
pop
pop
fidiv
push
jmp
lods
shr
or
mov
mov
jae
div
jle
lea
(bad)
dec
adc
loopne
xchg
mov
or
jae
mov
sbb
cmp
rcl
and
jge
cmp
scas
xchg
cli
stos
push
sub
stc
out
xlat
jmp
out
(bad)
int
stos
je
test
addr16
std
jae
inc
cld
aad
pop
test
fcomp
dec
add
push
call
shl
add
movs
ins
mov
inc
jb
jmp
cmp
(bad)
jae
sub
repnz
and
addr16
test
arpl
jmp
imul
xor
push
mov
fnstenv
mov
add
pop
xchg
jbe
pop
dec
cwde
dec
mov
and
jecxz
ror
mov
sub
movs
aas
cdq
sbb
ss
jnp
call
jmp
add
outs
aad
mov
cs
lock
mov
mov
ret
daa
adc
mov
jo
sub
mov
das
dec
xor
inc
and
lods
jecxz
mov
(bad)
call
in
das
mov
or
push
ret
mov
adc
and
push
cs
xor
push
lds
cmps
mov
addr16
jnp
data16
adc
push
mov
cmc
xchg
adc
icebp
out
fcomp
(bad)
mov
ins
mov
sbb
(bad)
jmp
gs
rcr
movs
jbe
mov
cmp
scas
mov
lahf
add
jmp
jmp
arpl
dec
jle
jmp
jmp
icebp
xchg
cmp
or
push
sub
std
ror
or
cmp
push
inc
add
and
(bad)
(bad)
xlat
and
push
loopne
mov
call
iret
std
ret
cmps
jmp
scas
add
and
stos
add
jns
in
and
fwait
je
(bad)
jo
js
aaa
sub
mov
dec
std
iret
add
inc
pop
sub
add
(bad)
retf
shl
pusha
lds
sbb
and
out
rcr
jp
les
dec
push
test
cmp
daa
xor
cld
outs
(bad)
clc
jge
and
fnstcw
out
or
xor
call
fwait
out
push
enter
cmp
out
mov
int3
adc
push
test
call
push
lahf
sbb
jecxz
out
call
neg
jl
imul
and
pop
pop
push
loope
xchg
loopne
popa
sbb
jb
fwait
sbb
stos
dec
ret
mov
and
xor
sbb
popa
mov
and
mov
cmps
(bad)
mov
sub
stos
int
adc
outs
xchg
repnz
jecxz
sub
adc
jecxz
sub
cmp
and
jnp
or
xchg
and
adc
into
mov
call
scas
sub
dec
mov
es
jge
out
or
sar
jb
cmc
cld
push
call
pop
sub
test
stos
imul
mov
gs
into
or
add
mov
or
jmp
mov
aad
cmp
shl
add
jne
(bad)
(bad)
rcr
shl
sbb
pop
pop
loope
jo
ds
adc
inc
pushf
clc
pop
das
jo
adc
sbb
js
push
dec
inc
fnstenv
sub
jnp
dec
fild
jl
adc
cmc
pop
in
add
dec
sub
and
shl
or
and
(bad)
cli
idiv
inc
mov
jmp
mov
add
rcr
adc
dec
clc
lahf
jmp
adc
pop
add
or
pop
and
inc
inc
test
cmp
mov
sub
ret
sub
add
xor
or
sti
aas
mov
ja
mov
test
rol
test
sahf
ja
call
into
out
jecxz
fisub
bnd
loop
ss
mov
(bad)
aam
enter
jecxz
enter
stc
(bad)
cld
(bad)
lea
pop
nop
jl
add
jns
les
sub
xor
adc
push
lds
call
pop
inc
or
mov
sahf
add
rcl
lahf
call
sbb
xor
push
dec
rep
clc
xor
or
enter
xchg
imul
mov
or
jmp
out
mov
hlt
adc
cmp
(bad)
mov
sbb
stos
call
fist
adc
lahf
fld
push
fld
xchg
sar
push
jns
sbb
pop
pop
push
inc
inc
jns
inc
call
adc
sahf
sahf
lods
jmp
dec
xchg
test
fs
in
aad
inc
shl
xor
aad
push
and
cmp
(bad)
lods
mov
push
icebp
push
mov
adc
es
rol
cmp
mov
pushf
cmc
into
dec
xchg
nop
ins
or
xor
wrmsr
arpl
cdq
cmp
sti
push
cmp
xlat
cmp
cvtdq2ps
jecxz
and
xchg
repnz
dec
ja
sub
mov
scas
mov
jl
aaa
pop
fcom
or
cmps
retf
rsm
and
cmp
rol
test
inc
aaa
shl
ror
(bad)
push
daa
jmp
xchg
dec
(bad)
push
xchg
dec
jnp
sbb
and
inc
xchg
sub
push
jge
adc
fldenv
sbb
jbe
div
pop
test
mov
cmp
jp
(bad)
(bad)
loopne
mov
movs
inc
imul
out
mov
or
fisubr
or
xor
dec
out
mov
iret
aaa
test
fst
mov
into
add
imul
mov
push
xchg
call
adc
mov
test
and
mov
cs
fiadd
jmp
ficomp
jecxz
pop
dec
jl
mov
lods
iret
imul
add
lock
sbb
and
(bad)
sub
into
popa
es
maskmovq
idiv
pop
mov
push
jge
push
loopne
test
or
cdq
mov
in
(bad)
dec
push
sbb
push
or
fs
call
out
out
mov
xchg
push
mov
aam
into
(bad)
iret
scas
ss
lea
adc
(bad)
call
pop
mov
(bad)
out
int3
mov
push
push
int
(bad)
pushf
clc
push
or
jns
mov
cs
inc
sbb
sub
push
mov
mov
ror
xor
pop
adc
mov
daa
es
shl
inc
pop
repz
fadd
cmp
ret
cmp
mov
jo
dec
int3
adc
(bad)
fsubr
and
sbb
std
inc
int
jmp
ror
or
rcl
stos
pop
test
fucomip
out
mov
aad
rol
shl
iret
adc
xor
or
inc
daa
pop
add
dec
cmp
or
pop
iret
dec
adc
mov
or
js
sub
out
inc
push
test
retf
sbb
(bad)
fdivr
mov
and
cld
leave
cmp
pop
das
xchg
mov
xor
inc
fcom
loop
cdq
(bad)
and
(bad)
cmc
test
(bad)
pushf
pop
lock
sbb
loope
adc
sbb
jns
push
mov
cli
ds
cmp
push
pop
aam
add
sub
fcom
test
xor
mov
cmc
pop
sbb
xchg
dec
out
addr16
les
mov
sti
mov
and
ror
addr16
xchg
or
inc
hlt
stos
inc
push
outs
into
sub
dec
pop
call
and
and
jnp
mov
mov
push
add
gs
adc
pop
and
aam
add
push
movlps
sbb
out
mov
gs
adc
inc
jae
mul
popf
sub
sbb
pop
push
fiadd
adc
aas
mov
xor
cmp
jns
loope
xchg
cmp
adc
mov
add
jne
add
cs
(bad)
jecxz
(bad)
cmp
gs
sub
mov
push
ds
adc
jne
sbb
iret
(bad)
les
add
fldcw
xor
mov
stos
dec
jmp
adc
pop
push
das
into
dec
adc
js
inc
std
jo
push
test
mov
mov
nop
mov
fsubr
imul
pop
in
pusha
mov
movaps
jp
out
sahf
mov
xchg
dec
repnz
shl
fdiv
jp
xor
inc
or
mov
sub
jmp
mov
loope
shr
rcr
sbb
mov
xchg
fistp
test
jmp
es
and
mov
and
xchg
outs
hlt
in
pop
(bad)
aam
lahf
add
fidivr
pop
push
jle
mov
sbb
rol
cmp
lods
inc
push
ds
inc
or
loope
mov
cmps
mov
shl
or
mov
cmp
retf
sbb
mov
out
inc
push
cmp
clc
sbb
sub
xor
lds
stc
push
into
pop
inc
scas
mov
cmc
icebp
rcl
push
retf
int
inc
pusha
sbb
(bad)
dec
xchg
mov
or
adc
xchg
popa
retf
dec
jp
lock
cmp
mov
jge
mov
mov
mov
add
push
sbb
xor
push
inc
mov
push
fisubr
aad
xchg
gs
mov
mov
cmp
inc
shr
inc
add
in
xor
push
adc
idiv
in
loop
mov
jb
xchg
push
hlt
in
push
mov
xchg
or
adc
push
jmp
xchg
adc
dec
outs
mov
inc
sti
cli
les
loopne
fldenv
and
pusha
nop
xor
push
jle
inc
inc
and
pop
inc
rcl
push
jnp
cmps
jnp
jmp
inc
imul
add
jecxz
not
es
hlt
mov
fldenv
add
xchg
int
lahf
adc
ins
xchg
pop
js
stos
es
es
adc
cmps
push
cli
jecxz
cli
out
daa
adc
test
pushf
pop
cwde
outs
jp
add
mov
cmp
cld
mov
add
jae
scas
ss
out
movs
push
ja
(bad)
out
cli
into
ret
mov
push
mov
mov
mov
es
mov
xor
push
fwait
push
xor
sub
cmp
dec
mov
sub
lds
lea
xor
mov
jb
dec
cs
push
pop
cmp
pop
out
xchg
pop
push
cld
pushf
fdiv
push
outs
and
jecxz
push
aaa
ror
mov
pushf
test
mov
push
shl
pusha
cwde
jmp
out
shr
sbb
cmp
inc
inc
cs
mov
call
(bad)
int3
rcl
movs
call
push
dec
pop
push
xchg
cwde
mov
adc
jecxz
in
push
cld
rcl
aam
aam
jne
xchg
jle
cmp
in
push
pop
ret
inc
test
xchg
hlt
add
stos
add
xchg
clc
popa
sbb
cmp
push
jmp
arpl
les
push
xor
hlt
dec
mov
adc
xor
(bad)
adc
push
add
xchg
sbb
fs
leave
jbe
and
cdq
jbe
mov
mov
pop
mov
mov
gs
inc
ret
mov
test
fcom
icebp
cmp
or
push
pop
inc
(bad)
bound
(bad)
in
stc
mov
rcr
inc
sbb
add
jbe
adc
(bad)
mov
neg
mov
test
(bad)
lods
push
bound
bound
mov
or
jae
outs
mov
inc
cmp
xchg
xchg
mov
mov
jge
jge
cmp
neg
mov
push
mov
mov
sub
in
std
fld
loop
sbb
mov
daa
jno
inc
out
inc
adc
jae
sub
mov
and
xor
(bad)
ja
push
jo
xchg
enter
out
dec
pop
jae
gs
or
leave
loopne
push
jns
dec
enter
bound
fistp
scas
push
out
test
jmp
xchg
cli
aas
rcr
xchg
int3
(bad)
enter
cmp
mov
adc
ret
(bad)
leave
or
cld
addr16
(bad)
ja
mov
fucomi
mov
ins
lea
jb
mov
loopne
push
ins
mov
fist
movs
loope
ins
inc
pop
mov
pop
adc
int
mov
gs
fdiv
int3
div
xchg
mov
push
add
inc
push
inc
out
jp
mov
jae
push
dec
jge
pop
clc
push
pusha
sbb
and
mov
xor
mov
shl
in
xchg
xchg
aam
dec
sub
scas
pusha
in
imul
xor
xchg
sub
out
in
xor
push
out
adc
add
lods
dec
movs
add
sar
cmps
mov
in
xchg
fwait
addr16
stc
sbb
jo
xchg
xchg
mov
sti
out
mov
and
pop
(bad)
sbb
das
fdiv
cmp
out
(bad)
push
dec
into
rcl
add
and
jo
mov
xchg
int3
movs
pop
push
mov
sbb
(bad)
(bad)
stc
out
loope
retf
shl
pop
mov
jmp
adc
or
sub
jb
sbb
je
jne
outs
xor
mov
movs
xor
push
repnz
inc
stc
mov
pushf
cmp
aam
(bad)
es
cmp
es
ret
in
inc
mov
fcomp
ds
cmp
mov
jbe
pop
push
dec
push
push
dec
add
mov
inc
jmp
mov
ins
ror
adc
fs
dec
mov
out
dec
rcr
mov
(bad)
aaa
mov
lds
jg
mov
cmp
sbb
iret
mov
aas
outs
mov
or
ds
movs
inc
imul
ret
je
leave
jb
xor
cmc
(bad)
sbb
mov
push
fbstp
rcr
pop
dec
aaa
or
(bad)
out
das
std
xchg
ins
xor
scas
jmp
xchg
data16
call
jmp
sub
or
pop
add
cmp
sub
sbb
leave
pop
fbld
cmc
pop
mov
jmp
mov
nop
jle
add
cmp
js
pop
mov
(bad)
jle
xor
sub
sbb
pop
retf
dec
push
dec
push
ficomp
cli
fwait
std
inc
mov
and
popa
adc
push
inc
imul
xor
mov
dec
xor
call
fistp
loop
out
or
cs
sbb
inc
aaa
xor
je
jae
pop
out
sub
(bad)
sahf
loopne
push
xor
push
rol
cld
les
(bad)
cli
(bad)
jge
xchg
movs
loope
mov
xchg
mov
(bad)
cld
stos
sbb
ror
in
push
mov
in
mov
das
inc
js
stc
cli
rcl
mov
out
dec
inc
mov
xor
jp
and
inc
ins
mov
push
pop
xchg
mov
scas
jbe
imul
push
icebp
fwait
sti
cmc
lock
enter
in
inc
adc
out
push
sar
rol
jl
nop
xlat
or
and
sbb
rol
hlt
dec
in
jno
aam
test
in
out
or
xlat
sti
sbb
mov
sbb
inc
enter
loopne
and
mov
scas
repnz
xor
bound
loop
shl
(bad)
pop
sbb
jo
js
jb
scas
sbb
nop
and
dec
jp
sbb
fnstcw
fsub
mul
adc
ja
icebp
and
out
leave
fimul
stos
data16
or
pusha
out
or
pop
xchg
inc
jmp
icebp
push
xor
or
sub
daa
int3
or
stos
dec
fcmovbe
mov
dec
inc
cdq
hlt
sbb
inc
jno
repnz
call
popa
pop
sub
dec
or
inc
xor
xchg
sub
loop
loopne
rcl
cld
retf
dec
cmc
push
mov
scas
sub
test
outs
pop
retf
sar
mov
and
sahf
jnp
mov
test
loopne
imul
mov
idiv
dec
jne
mov
frstor
pusha
mov
mov
(bad)
jo
push
push
inc
and
aam
loopne
outs
push
lods
aaa
and
inc
mov
jno
add
and
les
sbb
cs
jle
sbb
xchg
pop
aad
add
mov
lods
mov
dec
sbb
xchg
adc
(bad)
or
out
or
lahf
je
call
mov
and
test
jnp
movs
call
xchg
push
jne
and
mov
fcomip
dec
sar
dec
mov
cdq
dec
fstp
adc
scas
add
mov
jns
in
pusha
jae
mov
ds
int3
or
sub
les
xor
jae
rcr
pop
jbe
mov
xchg
out
sti
inc
std
mov
addr16
add
popa
jns
mov
add
popa
pop
ins
icebp
fnsave
(bad)
mov
cmp
loop
or
xchg
xlat
ss
sti
inc
pusha
fcmovnbe
(bad)
sub
cli
adc
fst
mov
xchg
dec
cdq
mov
gs
imul
fiadd
fidivr
sbb
pop
stc
data16
retf
adc
stos
pop
sbb
jno
call
inc
adc
pop
xchg
shl
and
loop
sub
mov
ds
dec
loop
mov
dec
sbb
mov
adc
cmp
xor
xchg
add
inc
std
xchg
aad
mov
int3
fidiv
sub
mov
test
sbb
cmp
imul
sbb
inc
nop
stos
and
call
inc
retf
retf
jle
and
dec
sbb
cmp
scas
cmp
loope
lods
cli
sub
in
sar
add
mov
pop
lods
rcr
movs
test
or
(bad)
cmp
xchg
out
mov
imul
stc
movs
shr
call
mov
shl
mov
in
lds
ds
pop
bound
clc
in
loope
nop
push
xchg
jns
push
and
push
mov
pop
sbb
loop
into
fs
int
mov
in
movs
sub
fld
push
mov
add
sbb
push
mov
mov
clc
loope
pop
mov
xchg
jbe
mov
dec
movs
call
das
pop
cwde
xor
mul
cdq
les
imul
xor
stos
in
movs
aam
mov
shr
je
ret
mov
xor
mov
xchg
pop
cmp
xor
inc
cs
shr
dec
rcr
scas
or
add
inc
loopne
ja
pop
pop
loop
push
cdq
bound
retf
inc
add
test
rol
jns
xlat
scas
and
int3
or
or
out
fiadd
pop
mov
add
mov
xor
mov
sar
ja
jbe
shl
retf
shr
iret
popf
(bad)
call
ficom
int
add
mov
mov
retf
xlat
cmp
call
ffree
loope
cld
cmp
ret
and
pop
icebp
inc
outs
mov
jo
data16
and
outs
sbb
loope
(bad)
xchg
push
dec
xchg
cmp
cwde
call
movs
inc
push
mov
cmp
push
jbe
and
mov
inc
ss
xor
movs
loopne
xor
pop
bound
cmp
push
retf
in
add
neg
cwde
push
mov
ss
sub
ss
in
fs
xor
cmp
(bad)
or
cmp
pop
mov
imul
fimul
mov
pop
push
(bad)
xlat
adc
pop
lea
in
xor
mov
out
and
out
cmp
(bad)
aad
call
std
inc
int3
sub
inc
into
shl
pop
pusha
movs
cmp
out
xchg
mov
push
push
xor
fist
push
dec
in
mov
rol
aaa
and
mov
pop
scas
fmul
bound
test
retf
lods
jnp
test
imul
sti
int
push
(bad)
int
test
mov
inc
xor
ss
inc
fucomi
cmps
push
test
pop
test
jno
mov
pushf
jle
sbb
fs
das
jns
imul
sub
call
dec
(bad)
jbe
push
adc
mov
cdq
fld
cmc
jmp
jo
loope
lods
mov
inc
add
xchg
mov
jmp
cmp
imul
bound
scas
and
push
xchg
in
sahf
cli
into
clc
mov
xor
adc
arpl
das
popf
scas
call
mov
aad
aas
repz
retf
xchg
pop
sbb
jae
pop
ds
(bad)
mov
jp
jl
mov
pop
push
inc
sbb
leave
jg
pop
or
scas
mov
fcomp
test
pop
inc
push
movs
pop
jg
in
and
add
cmp
adc
and
and
sub
and
rcl
repnz
jne
test
sub
das
mov
push
cmp
mov
repnz
retf
aaa
lods
pusha
ss
stc
lock
pop
pop
fisttp
mov
loop
js
rcl
inc
out
cmps
add
xchg
call
(bad)
nop
jne
lods
cli
inc
cmp
cmps
lods
scas
lahf
or
dec
cmps
mov
push
mov
sub
xchg
sbb
adc
leave
pop
shl
mov
lods
test
pop
pop
test
and
gs
in
and
(bad)
sti
and
pop
fldcw
cli
dec
sahf
xchg
cmp
pop
repz
jo
mov
mov
dec
out
xchg
jns
fwait
sahf
cdq
pushf
mov
test
mov
pop
xchg
jbe
inc
call
mov
out
adc
mov
repnz
mov
jge
mov
xor
mov
push
into
mov
mov
shr
imul
les
mov
out
into
sti
nop
in
or
jno
shl
jae
lea
push
(bad)
push
pushf
mov
and
shl
or
js
pop
lods
stos
xchg
xor
in
and
push
mov
(bad)
in
es
mov
scas
push
sar
gs
jecxz
pop
pop
dec
push
movs
jle
pop
sbb
ret
imul
(bad)
call
(bad)
jle
push
lods
fnstsw
xchg
dec
or
jp
ins
adc
jmp
jl
adc
inc
and
and
addr16
cmp
cmp
loope
jne
jecxz
or
movd
sbb
cmp
dec
dec
xor
inc
sbb
and
call
icebp
out
xlat
mov
loop
mov
cmp
pop
sbb
int3
and
mov
inc
xor
jge
adc
test
xor
div
xchg
ins
pop
sub
push
jle
dec
jmp
repnz
jb
jg
xor
xlat
aam
jbe
imul
mov
(bad)
dec
sub
mov
jne
lods
dec
mov
cmp
fcomp
xchg
pop
pusha
mov
xchg
xchg
xchg
jo
add
int
xchg
sahf
clc
int3
sbb
and
cmp
test
mov
fsub
push
sub
mov
fcmovb
sub
dec
shl
int3
movs
inc
mov
xchg
dec
or
add
aas
(bad)
lds
xor
aam
cmc
dec
push
jl
adc
inc
mov
in
int
ds
and
ss
and
dec
lea
jns
in
jle
pop
adc
ret
push
xor
dec
dec
loope
xor
jle
fild
stc
(bad)
sti
mov
xor
stc
jle
push
(bad)
popf
movs
sbb
int
aas
jbe
mov
or
bound
and
int3
(bad)
js
psrld
mov
pop
test
xchg
into
sbb
adc
outs
xlat
test
pusha
pop
mov
add
pop
add
jb
jle
pushf
mov
movs
dec
xchg
jmp
and
aad
and
adc
dec
cwde
pop
mov
jne
fidiv
cmc
mov
movs
inc
or
repz
or
out
lods
cmp
sub
test
shld
call
loope
es
test
mov
ret
minps
out
(bad)
or
iret
and
mov
data16
fs
mov
mov
stos
jp
and
and
cmps
cmp
clc
jg
sbb
fwait
in
jo
pop
hlt
xor
or
mov
and
mov
mov
arpl
ds
or
test
cdq
nop
cmp
sahf
mov
jmp
xchg
xlat
sbb
daa
inc
xchg
aaa
sbb
xchg
int3
dec
add
mov
fs
test
sbb
(bad)
ds
lock
and
cli
iret
je
mov
js
xchg
ret
fincstp
mov
enter
pop
fnsave
fdivr
or
shl
dec
mov
in
int
pusha
xchg
rcl
pop
adc
rcl
ret
imul
std
xor
cmc
mov
add
or
idiv
sub
sahf
jl
cdq
fstp
(bad)
jnp
(bad)
mov
addr16
jg
cli
sbb
(bad)
dec
push
jecxz
dec
cmc
pop
loopne
sbb
mov
adc
bound
(bad)
mov
les
mov
(bad)
fidiv
js
add
(bad)
and
int
mov
or
jge
in
dec
cmp
test
push
inc
hlt
and
xchg
ret
(bad)
clc
pusha
cmp
adc
js
leave
jae
lods
pop
inc
in
cmp
sub
xchg
xor
sub
daa
adc
cmp
aam
sbb
lea
repz
and
or
xchg
in
xchg
sti
hlt
sub
lea
loope
div
mov
das
xor
push
shl
(bad)
mov
mov
inc
(bad)
stc
mov
pop
popf
or
mov
rcl
or
sbb
shl
(bad)
mov
push
sub
adc
lahf
push
fdiv
mov
lock
out
ret
test
daa
push
jne
pop
or
add
hlt
inc
outs
fnstcw
adc
rep
mov
arpl
ja
cwde
adc
sar
mov
(bad)
call
sub
imul
xor
dec
pop
outs
iret
loope
rcr
test
lods
popa
cmp
int
inc
xchg
xchg
(bad)
test
fs
push
jmp
dec
sar
mov
push
out
loope
inc
lea
and
mov
xchg
xor
xchg
adc
test
(bad)
loope
shl
shl
rol
popf
push
and
sbb
sub
ins
(bad)
lock
pop
mov
or
cld
test
out
lds
mov
adc
dec
jae
mov
outs
inc
arpl
jae
rol
jbe
sbb
das
jecxz
inc
rcl
mov
movs
clc
inc
inc
repz
cmp
mov
enter
sbb
std
xor
imul
movs
sub
add
imul
(bad)
hlt
outs
pop
pop
fwait
xchg
test
adc
and
jae
jae
mov
lods
iret
icebp
and
and
repz
shl
mov
loop
mov
push
rol
mov
gs
xor
inc
icebp
jge
imul
out
mov
xchg
rcr
into
xchg
add
inc
cli
out
sbb
mov
xor
jne
test
fs
xchg
jmp
xchg
add
push
dec
or
mov
and
aad
sar
push
in
hlt
jle
sub
outs
jle
inc
mov
dec
fwait
outs
mov
jg
mov
mov
or
xor
sbb
sub
test
inc
cmp
icebp
or
xor
in
inc
mov
cmp
loope
push
mul
fdiv
int
and
(bad)
(bad)
pop
mov
ins
add
inc
xor
mov
jae
(bad)
out
int3
retf
(bad)
fucomi
call
rcr
cli
or
xor
leave
or
xlat
mov
or
mov
cmps
pop
cld
fstp
les
push
adc
inc
sub
adc
leave
pop
fs
call
sub
adc
test
arpl
std
adc
(bad)
cmp
cmp
xchg
inc
inc
nop
jbe
mov
mov
mov
ds
ins
fdiv
mov
div
call
jecxz
fldenv
mov
ret
sbb
lock
dec
xchg
bound
sbb
sbb
stc
jns
inc
mov
xchg
bound
loopne
call
scas
mov
nop
out
push
es
ds
cmp
push
cmp
clc
inc
mov
cmp
xchg
lods
js
fiadd
or
sub
cmp
sar
out
dec
add
mov
mov
jecxz
sbb
sbb
and
mov
scas
jne
inc
imul
mov
xor
dec
sahf
xchg
push
out
jmp
outs
iret
addr16
call
neg
dec
out
inc
jle
and
shl
shr
xlat
dec
dec
or
mov
inc
cs
push
or
cmps
xchg
ss
and
dec
arpl
loop
cs
outs
in
inc
xchg
jg
cwde
call
ins
mov
sbb
into
push
aam
sub
push
xchg
and
ret
cmps
imul
inc
sub
ja
icebp
stos
jmp
push
pop
cld
adc
and
rcl
test
add
fsubr
mov
xchg
aaa
daa
in
jge
int
scas
xchg
(bad)
retf
push
xchg
jae
push
lock
sub
push
int
fmul
mov
inc
loop
(bad)
fisttp
dec
jle
xor
or
jae
outs
pop
imul
(bad)
std
mov
xchg
sub
mov
and
les
push
(bad)
test
enter
das
mov
xchg
out
test
in
in
pop
xor
sub
xor
xchg
cmp
enter
out
sub
ss
add
popa
xchg
push
aam
dec
or
push
sub
in
lds
movs
cmp
mov
add
inc
call
rcl
aas
mov
out
xchg
xor
ins
lock
jne
and
sbb
stos
sbb
mov
sub
inc
cmps
int
mov
adc
fwait
sbb
pop
iret
sub
inc
out
neg
mul
outs
test
mov
mov
xchg
xchg
jle
(bad)
in
pop
mov
out
lock
dec
mov
xor
sbb
lds
aas
imul
fcomp
movs
sub
inc
push
inc
dec
rcr
imul
add
inc
lahf
sbb
push
ffree
jle
fwait
repz
mov
mov
shl
sub
call
sub
mov
mov
aas
sbb
adc
push
pop
sub
rol
push
add
cmps
adc
mov
shl
aaa
in
cwde
loopne
loop
std
daa
loope
mov
mov
cmps
mov
inc
add
out
pop
fidiv
mov
mov
sub
inc
fs
scas
in
test
ja
shl
inc
mov
mov
ret
push
cld
leave
cmc
imul
fld
(bad)
mov
cmp
(bad)
aam
jp
out
and
ins
call
stc
jno
cld
pop
push
or
jne
imul
inc
out
(bad)
(bad)
int3
inc
or
inc
push
and
imul
or
shl
shr
test
or
clc
fadd
cmc
mov
xchg
or
jns
enter
popa
(bad)
inc
cmc
ds
cmc
cmps
push
rcr
jmp
xor
js
push
mov
div
jbe
xchg
fnstenv
dec
addr16
xor
jmp
dec
loope
push
and
jno
mov
mov
das
mov
imul
or
mov
ficomp
data16
pop
jle
adc
inc
xchg
retf
out
xor
pop
(bad)
or
mov
push
pop
mov
scas
imul
aaa
fidivr
mov
jae
push
(bad)
ficom
mov
push
ror
sbb
mov
sub
repz
push
inc
mov
or
ret
xchg
and
ficomp
mov
(bad)
aad
imul
cmps
or
xor
adc
test
dec
call
add
in
mov
cmps
sbb
push
push
mov
sar
jp
addr16
cld
jne
inc
pop
push
cmps
adc
and
push
pusha
(bad)
jg
mov
xchg
add
sub
fidiv
and
mov
das
out
add
cld
sahf
aas
test
jle
imul
fistp
xlat
and
mov
jmp
sbb
and
das
ins
aas
stc
mov
lds
leave
in
inc
push
ret
in
or
push
es
loope
jmp
mul
inc
loope
adc
test
leave
(bad)
out
push
jb
sahf
cmp
aad
cmp
mov
out
mov
mov
inc
call
fcmovne
addr16
call
das
inc
leavew
ins
pop
rol
and
jmp
mov
psraw
xor
call
xor
fstp
mov
iret
sub
mov
jmp
sub
loop
loope
das
xchg
mov
ja
pop
push
pop
sub
and
sbb
call
fisub
(bad)
imul
int
int
cmps
mov
iret
jae
sbb
adc
shl
sub
aad
stos
xchg
and
(bad)
jmp
in
sar
and
ror
dec
dec
or
dec
sar
pop
scas
movs
adc
cmc
cmp
nop
fxch
adc
sbb
jmp
stc
and
push
adc
mov
jo
push
push
std
or
dec
out
add
daa
frstor
(bad)
std
xchg
stc
into
cmp
mov
test
adc
pop
cs
test
popa
sbb
cld
call
fdivp
sub
add
mul
and
outs
add
inc
ret
jecxz
leave
test
daa
sbb
sahf
adc
data16
arpl
sbb
and
and
mov
out
jno
xchg
add
pop
pusha
add
mov
retf
jmp
xor
scas
pop
pop
outs
adc
or
inc
push
mov
sbb
test
in
sub
retf
dec
fs
xor
retf
xor
add
or
rcl
mov
push
hlt
and
add
outs
xchg
sub
sub
shl
js
ret
repnz
inc
(bad)
xor
pop
xor
pusha
mov
lods
int
sub
jbe
pop
sub
icebp
shl
mov
and
inc
lds
cmp
(bad)
or
and
pop
xchg
movs
(bad)
(bad)
rcr
addr16
in
xor
bound
xchg
popa
or
into
and
iret
popa
or
dec
pushf
js
je
rol
cmps
ss
std
xor
(bad)
stc
(bad)
ins
call
es
pop
in
outs
sahf
(bad)
or
rcl
dec
test
popf
fsubr
or
sub
and
add
jmp
cmp
jmp
mov
(bad)
test
xor
popf
sbb
test
jmp
mov
ss
inc
jo
test
mov
dec
outs
icebp
mov
loope
(bad)
jbe
stc
stos
shl
mov
pop
daa
pop
mov
dec
adc
mov
shl
or
cmps
es
std
popa
fsub
gs
scas
inc
mov
sub
and
test
sub
rcr
test
aaa
call
cmps
les
mov
ja
dec
or
mov
pop
jmp
xor
xor
aam
imul
xchg
add
cdq
push
sbb
mov
push
lahf
je
pop
lock
cmp
fild
and
pop
lock
ss
jo
ss
movs
adc
(bad)
jno
and
xor
leave
push
lods
adc
cmp
pop
add
ret
push
bound
xchg
mov
nop
(bad)
icebp
cmove
stc
test
lea
add
mov
pusha
dec
dec
pop
fcmovne
jbe
jp
(bad)
repz
or
retf
sbb
jg
jmp
dec
or
scas
idiv
(bad)
mov
pop
sbb
fadd
adc
mov
cmc
dec
mov
dec
xchg
in
fadd
gs
frstor
call
pop
xchg
mov
sahf
js
ret
add
jp
lock
mov
out
rcr
add
inc
dec
mov
jmp
popa
pop
loopne
sub
mov
jl
adc
ret
in
jp
jbe
retf
ret
mov
mov
xor
sbb
out
sbb
imul
push
adc
imul
repz
mov
pop
jg
xor
test
rcl
jbe
outs
inc
pop
fld
jecxz
inc
mov
std
jl
and
loopne
sbb
adc
push
mov
cs
retf
jmp
xor
or
sub
out
stc
jo
xor
jnp
pop
adc
scas
shl
jge
sub
pushf
int3
nop
jb
xor
inc
mov
repz
xor
jo
mov
xlat
sar
or
faddp
mov
fcom
adc
mov
jle
sub
push
call
lea
int3
ja
repz
into
or
popf
mov
push
int3
in
inc
mov
test
cwde
jecxz
pushf
mov
popf
push
adc
cmp
mov
popa
xchg
ins
fadd
fld
jns
ror
rcr
dec
mov
jne
add
jnp
and
ins
pop
push
push
mov
xchg
mov
out
test
lahf
xor
retf
ja
xor
mov
or
cwde
cdq
out
push
cs
inc
jg
imul
mov
ss
call
xor
pop
cmp
inc
and
and
lea
stos
mov
xchg
jl
cmps
pusha
popf
mov
pop
mov
add
and
in
mov
mov
mov
shl
xor
(bad)
adc
fstp
or
mov
jg
or
sbb
or
or
xchg
daa
rcl
push
push
add
xor
shl
test
sub
add
ret
mov
adc
sbb
into
dec
das
ins
ret
mov
fisub
scas
stos
or
mov
bound
push
dec
les
pushf
shl
and
cmp
movs
test
push
and
mov
or
push
xchg
pop
imul
mov
and
pop
mov
xor
push
cmp
sbb
loop
int
popa
push
sbb
add
mov
inc
ds
pop
cld
loope
xor
sbb
addr16
dec
ret
mov
pop
xchg
mov
das
lods
sbb
scas
ror
sub
sub
fld
add
mov
jecxz
inc
mov
fstp
popf
fs
std
jo
ret
lahf
adc
pop
push
aad
sub
pop
imul
jg
and
inc
cmp
cmp
std
sub
lods
fs
dec
gs
(bad)
lods
pop
imul
mov
mov
jmp
mov
mov
and
push
cmps
adc
loopne
mov
clc
mov
ficomp
jo
adc
lock
or
mov
xchg
xchg
pusha
and
enter
add
scas
aas
movs
and
inc
and
cmps
das
mov
in
jmp
pop
(bad)
arpl
adc
mov
cmp
nop
fisubr
jecxz
add
bound
(bad)
pusha
sub
dec
mov
jns
and
cmc
or
or
mov
pop
in
jmp
dec
fdivrp
ret
je
sub
aam
mov
jne
or
push
xor
fwait
in
mov
and
rcl
(bad)
fwait
jmp
sub
fmul
fadd
mov
outs
and
fmul
mov
and
push
shl
jg
inc
mov
xor
test
xchg
add
sahf
ds
add
imul
pushf
push
lds
push
lahf
frstor
inc
loopne
hlt
and
sub
ds
call
adc
sar
or
sbb
shl
xchg
add
je
cli
and
inc
xor
pop
push
sub
aam
movsx
ja
and
lds
(bad)
cmp
adc
or
out
sahf
out
cmp
cmp
popa
inc
ror
xor
jmp
xor
or
adc
cmps
cmp
pop
retf
push
and
pop
pop
mov
xor
repz
mov
(bad)
and
(bad)
xor
inc
icebp
mov
ficomp
icebp
(bad)
(bad)
jb
call
call
dec
dec
jl
sbb
cwde
popa
jle
dec
mov
xor
xor
arpl
(bad)
sbb
iret
xchg
imul
push
xchg
or
in
inc
jecxz
adc
sub
stos
xor
inc
inc
rcr
lods
mov
xchg
jle
pop
test
ds
movs
sub
rcr
sub
sub
add
ret
shl
mov
inc
dec
mov
mov
in
mov
xchg
push
sbb
and
jp
or
push
cmps
jnp
jmp
cld
mov
je
mov
dec
push
lea
aad
adc
cmp
xor
stos
mov
(bad)
mov
xchg
stc
outs
fldenv
cmp
push
dec
jmp
pop
adc
es
dec
cwde
imul
jb
xor
je
xchg
fs
add
xchg
fwait
ss
xchg
or
mov
ins
lea
mov
mov
aaa
mov
out
lods
int
mov
pop
daa
push
and
sar
inc
inc
enter
jbe
imul
lds
or
aam
adc
outs
hlt
jecxz
xchg
fdivr
shl
jno
cld
dec
movs
jae
sbb
cmps
pop
jo
push
sub
xor
and
repz
jmp
cmp
jmp
ret
push
jg
mov
jbe
mov
call
clc
sti
sbb
inc
inc
in
cmps
fcomp
aaa
mov
xlat
int
inc
push
lea
xor
stos
pop
stos
xchg
pandn
fld
sub
mov
cmp
cmp
jmp
ja
xchg
push
loope
test
lock
adc
jl
and
sbb
jno
imul
dec
mov
in
repnz
ror
lock
dec
(bad)
outs
or
jp
sbb
xlat
repnz
jbe
pop
push
outs
iret
xor
sbb
ss
xchg
sub
enter
out
adc
retf
mov
lea
xchg
xor
shr
xchg
xor
push
jo
hlt
popa
sar
lock
into
mov
pop
les
iret
lahf
dec
dec
mov
ins
xor
jno
mov
jns
into
fisttp
mov
xor
ret
and
fsub
ins
movs
mov
lods
inc
retf
jno
fidivr
lock
inc
adc
call
pop
sub
cmp
push
sbb
out
repnz
out
jo
xchg
lods
(bad)
sti
loopne
lods
jecxz
repnz
leave
dec
lock
repz
jns
push
sub
push
pusha
(bad)
jnp
cld
popf
mov
mov
rcr
or
mov
mov
loope
out
pop
mov
dec
bound
push
add
dec
sar
cmc
test
stos
repnz
imul
ret
push
out
test
out
retf
cmp
fxch
push
adc
xor
fs
loope
add
or
clc
sbb
adc
mov
add
pop
sti
push
and
enter
jnp
dec
xlat
retf
jo
dec
dec
imul
xchg
mov
scas
inc
push
in
arpl
or
inc
fild
pop
xlat
jp
mov
rcr
inc
int3
dec
dec
outs
jo
ins
mov
jmp
inc
mov
in
cs
gs
push
and
cmp
adc
dec
pusha
loop
mov
or
push
stc
aas
test
mov
pop
push
jae
inc
adc
push
mov
sub
fwait
test
cmc
inc
jo
imul
pop
xchg
inc
or
out
mov
add
mov
rcl
cmp
xor
add
fadd
lea
push
pop
push
scas
test
outs
in
mov
pop
les
or
repz
sbb
or
cmp
inc
xlat
mov
in
jns
lods
dec
popf
dec
inc
dec
pop
jnp
pop
push
mov
fcmovb
xchg
mov
sub
out
ins
add
mov
arpl
pushf
das
sbb
loope
(bad)
loop
into
scas
daa
sahf
cli
pusha
js
mov
mov
push
inc
inc
retf
cdq
mov
cmps
repz
dec
cld
xor
fadd
fidiv
icebp
inc
jmp
movs
call
cdq
and
pop
std
and
jne
xchg
div
sub
mov
cmp
aad
mov
sbb
xor
adc
xlat
stos
mov
sbb
hlt
int3
ja
out
inc
jno
mov
loope
push
sbb
mov
mov
mov
or
out
sub
mov
fst
cli
(bad)
fld
into
cmp
inc
pop
popf
xor
jg
imul
mov
les
retf
mov
in
fnsave
mov
outs
mov
push
mov
test
mov
cmp
mov
jb
sub
ret
inc
ja
mov
jb
jle
mov
in
std
dec
mov
jl
sbb
pop
jnp
arpl
adc
int3
es
dec
jb
inc
dec
cmp
mov
test
jmp
ss
stos
xchg
retf
xchg
adc
mov
out
ret
cld
inc
int3
(bad)
xor
outs
ror
popf
je
mov
inc
pushf
mov
push
cmp
pop
popf
dec
mov
test
popa
xchg
and
lahf
sti
pop
xchg
jno
adc
cmp
dec
mov
and
push
fs
jo
sbb
push
inc
movs
mov
aam
outs
aas
out
xchg
inc
adc
repz
add
js
fcom
and
jae
and
rcr
push
cmp
enter
cdq
pop
fdivr
push
fmulp
or
sar
mov
inc
inc
inc
stc
cdq
js
out
je
test
mov
ins
dec
cli
mov
push
sahf
and
sbb
fcomp
sub
repnz
or
mov
dec
jp
dec
cmps
dec
adc
mov
xchg
mov
rcr
scas
stos
sahf
ins
lods
(bad)
mov
dec
push
fcomi
(bad)
(bad)
pusha
lock
or
sbb
(bad)
stc
push
and
les
aad
xor
or
pusha
jmp
imul
mov
adc
ins
(bad)
in
sbb
inc
mov
and
popf
adc
in
mov
pop
rcr
cmps
pop
sub
cmp
mov
push
add
ja
aas
mov
adc
leave
fwait
ins
jmp
retf
xchg
inc
cmp
pushf
or
jecxz
jb
jp
push
cmps
ficom
dec
movs
mov
pop
add
pop
mov
add
inc
repnz
adc
mov
cmp
xchg
stos
stos
jno
pusha
loop
lods
inc
into
out
or
adc
jge
xchg
inc
ret
sbb
(bad)
aaa
fwait
out
loopne
sahf
xchg
mov
mov
inc
cmp
adc
aad
(bad)
loopne
xchg
inc
pop
in
jecxz
fsubr
jecxz
(bad)
adc
ins
push
xchg
adc
lods
mov
cmp
mov
movs
sbb
push
retf
or
cwde
lds
adc
mov
pop
repnz
xchg
into
movs
fadd
lods
ret
sbb
push
cmp
movs
or
mov
retf
ins
test
aas
cdq
fdivr
pop
cwde
out
mov
jmp
jbe
lock
sahf
mov
lods
jb
mov
jg
mov
mov
pop
int
popa
mov
fs
adc
mov
or
mov
jg
ret
outs
repz
lods
xchg
xor
movs
mov
in
lods
call
xor
sub
loopne
iret
repnz
mov
data16
or
inc
mov
xchg
adc
push
(bad)
clc
or
sahf
pop
inc
push
adc
fsubrp
std
pop
mov
(bad)
push
aaa
dec
xor
test
cmp
cmp
imul
dec
jbe
mov
mov
inc
mov
stos
add
out
ins
sahf
mov
xchg
popf
mov
jnp
ins
mov
add
aas
inc
mov
mov
sub
adc
inc
pop
rcl
jne
xor
dec
sbb
pop
cmp
jne
ret
cmp
ss
test
add
std
push
sbb
mov
inc
pop
into
das
cmp
jl
mov
pop
jae
std
mov
xchg
rcr
(bad)
jg
(bad)
jo
(bad)
mov
dec
imul
inc
aam
jne
imul
add
in
js
push
les
cld
jmp
dec
inc
push
call
jmp
xor
jge
xor
adc
outs
idiv
xor
les
add
iret
out
dec
call
stc
or
mov
data16
push
std
xor
sub
and
(bad)
mov
xchg
dec
das
jbe
mov
loop
push
adc
xchg
push
cmps
pop
inc
loop
lock
xor
aam
sbb
scas
mov
mov
or
xor
dec
fild
add
(bad)
jb
jl
pop
rcl
mov
mov
pushf
mov
xchg
mov
in
imul
mov
dec
xchg
and
sbb
inc
popa
xchg
mov
rol
(bad)
adc
push
fisub
rol
push
inc
push
div
mov
xlat
adc
sahf
mov
xchg
cdq
push
(bad)
in
cli
add
cmp
xchg
adc
and
adc
xor
push
call
loope
or
xor
fimul
fwait
in
xor
aam
les
(bad)
ins
cmc
xlat
cmp
mov
sub
sbb
or
fsub
std
mov
movs
add
or
add
or
movs
(bad)
xor
repnz
or
mov
and
mov
scas
rol
xor
sbb
jnp
scas
cld
inc
xchg
pop
daa
cld
cmps
into
jb
jle
jbe
xor
pushf
int
in
and
mov
inc
cmps
outs
mov
or
in
gs
mov
out
icebp
dec
mov
scas
jmp
dec
(bad)
xchg
mov
in
add
sbb
mov
popf
sub
enter
lock
push
adc
aad
sbb
daa
mov
add
xchg
out
inc
xor
in
mov
cmp
xchg
pop
pop
pop
jae
mov
xor
dec
outs
test
out
jp
(bad)
xor
stc
pop
lds
scas
sub
mov
test
adc
dec
jns
rcr
test
ins
xchg
xor
add
or
ret
ins
inc
xchg
stc
push
sbb
call
xchg
bound
xor
pop
neg
jg
scas
mov
cmps
jmp
mov
sub
inc
scas
mov
mov
mov
icebp
test
or
ror
imul
call
mov
enter
sbb
mov
les
loop
mov
test
fnsave
xchg
bound
cmps
sahf
push
fstp
inc
test
or
out
arpl
xchg
rol
mov
dec
mov
daa
shl
loope
sahf
leave
cmp
in
je
mov
cmp
mov
ins
mov
jg
fsub
in
cmps
sti
ins
or
(bad)
aam
mov
sahf
out
in
daa
pop
scas
loopne
xchg
hlt
(bad)
mov
sbb
xchg
inc
repz
xlat
pop
sbb
data16
call
push
jge
dec
adc
movs
movs
push
enter
mov
add
jb
sub
xchg
add
movs
lock
das
sbb
mov
cwde
(bad)
out
xchg
in
in
enter
repnz
cs
adc
out
adc
aad
jbe
cmp
cmps
daa
push
sahf
into
mov
xchg
or
sub
aad
sbb
jle
mov
pop
sbb
push
mov
inc
inc
les
pop
inc
dec
push
jns
fsubr
mov
or
loop
jmp
push
adc
cwde
out
out
xor
ins
inc
push
pop
bndldx
stos
dec
sbb
xor
lock
adc
pop
mov
repnz
(bad)
out
shr
rcl
inc
or
fisubr
call
jge
lock
and
push
dec
mov
adc
cmps
out
add
das
mov
jmp
xchg
test
xchg
mov
into
dec
push
sub
js
and
dec
imul
clc
test
test
fcmovnu
jecxz
push
mov
sbb
mov
pop
cwde
sub
mov
test
jae
push
shl
jno
test
ret
inc
sahf
mov
mov
leave
pop
xchg
outs
add
add
sub
inc
into
rcr
sub
fistp
popf
ja
je
sar
cmp
addr16
jmp
fucom
mov
adc
pop
dec
jg
lock
mov
jns
les
xor
cld
fs
jnp
fstp
jp
sub
ret
cmp
cmps
add
ret
fucomp
jnp
push
lea
(bad)
push
inc
stos
call
and
pop
lds
pop
dec
or
pop
pop
sub
cmps
(bad)
adc
or
adc
outs
jb
cmp
add
mov
ss
jle
mov
push
cmp
pop
mov
sub
jbe
loop
leave
xchg
mov
fbstp
and
std
xchg
xor
pop
pop
nop
or
mov
and
loopne
push
push
hlt
fadd
sbb
pop
xor
xchg
cmp
sbb
and
and
aad
nop
shr
sub
addr16
cmp
(bad)
xor
loopne
xor
cmps
pop
fwait
(bad)
add
imul
sbb
jle
aam
sbb
leave
ficomp
mov
push
in
jno
xchg
jns
adc
mov
jae
outs
cld
test
daa
xor
ds
loop
add
push
bound
xor
sbb
in
mov
pop
xchg
int3
xchg
imul
cmps
out
inc
test
adc
or
push
dec
ficomp
enter
call
lock
and
pop
cli
addr16
or
xor
adc
mov
or
add
dec
sahf
cli
or
bound
xchg
test
shl
test
or
push
pusha
pop
ins
inc
popf
retf
xchg
inc
xchg
ficomp
jns
fimul
loopne
push
push
shl
repnz
inc
xchg
sbb
clc
or
dec
and
sub
cli
dec
out
dec
lds
movs
inc
loop
in
std
jbe
sub
dec
aaa
ins
lods
cli
loope
mov
sahf
rol
xor
clc
addr16
lods
int
iret
dec
and
mov
popa
das
xor
adc
mov
push
inc
jno
and
xor
sbb
and
jmp
movd
sub
jge
adc
fmul
fidiv
cmp
pop
std
mov
and
in
xchg
mov
call
fisub
jmp
pop
mov
mov
test
adc
adc
mov
mov
xlat
lods
out
mov
ss
sub
outs
(bad)
dec
push
jle
xor
movs
iret
loopne
sub
mov
mov
int3
aaa
inc
stc
shl
sbb
into
ja
cwde
mov
add
dec
push
inc
pushw
outs
sbb
cmp
sub
imul
cs
dec
pop
sub
lds
in
aas
fcom
out
mov
cwde
pushf
fdiv
adc
in
std
enter
sar
pop
dec
out
aam
mov
xchg
call
xchg
mov
popf
pop
push
jle
shl
or
sahf
mov
aam
pandn
mov
int3
mov
imul
inc
inc
mov
data16
dec
cli
les
sub
retf
xchg
inc
loope
stos
inc
(bad)
std
jns
jle
js
inc
imul
movs
adc
daa
jp
cld
xchg
mov
sbb
and
and
jecxz
loop
adc
xor
pop
neg
pop
mov
fst
int
es
ja
test
(bad)
inc
sar
mov
pop
adc
repnz
push
arpl
daa
jmp
xchg
pop
mov
shl
push
test
push
sti
(bad)
cld
(bad)
mov
in
push
cmp
stos
push
mov
mov
pusha
xor
neg
mov
sahf
jecxz
jae
bound
jns
sahf
dec
in
jns
mov
aam
scas
add
out
repz
jecxz
and
push
retf
cmps
add
jns
lods
daa
jp
loop
lock
push
mov
xchg
fldcw
xchg
mov
mov
xchg
jmp
mov
mov
jae
xchg
out
imul
sub
adc
outs
xor
sbb
ins
mov
aaa
into
sbb
and
or
inc
jb
inc
scas
cmc
addr16
pop
loopne
mov
pop
not
push
jl
pushf
nop
repz
xlat
xchg
mov
pop
fnstenv
lods
adc
test
dec
ss
test
out
jl
or
dec
test
cmp
mov
nop
push
cli
inc
sub
sbb
movs
pop
inc
xor
retf
cdq
call
sub
loopne
std
mov
mov
or
pusha
loopne
xchg
sub
xchg
xchg
xchg
sbb
xchg
aas
aas
and
retf
xchg
ins
sub
in
imul
imul
pop
movs
gs
lods
scas
mov
cmps
sbb
int3
fdivr
movs
enter
out
stc
xchg
mov
dec
mov
mov
jns
(bad)
ins
rcr
dec
push
rcr
xor
jmp
pop
cmps
and
jle
shl
sar
mov
xor
adc
aaa
sub
or
lahf
sti
or
test
rcr
inc
xchg
mov
xor
inc
jecxz
cmp
mov
maxps
push
hlt
fwait
mov
popa
scas
(bad)
push
gs
lods
aad
inc
cwde
cmp
idiv
std
mov
ror
pop
into
mov
inc
or
xchg
(bad)
xor
adc
call
aas
xchg
pop
imul
xchg
mov
stos
and
jmp
pop
ins
popa
inc
or
mov
jne
jp
xor
ds
(bad)
mov
shr
and
fstp
fistp
sbb
loopne
test
pop
xchg
inc
outs
cmp
xor
hlt
mov
xchg
scas
cmp
enter
push
stos
pop
xchg
mov
dec
jo
rcl
icebp
dec
adc
xchg
fwait
sbb
test
fadd
pop
sub
mov
test
leave
push
push
mov
lahf
pusha
adc
cmps
retf
fild
cmp
pop
mov
push
fimul
scas
xor
(bad)
pop
dec
adc
xchg
es
ds
mov
dec
mov
xchg
and
dec
inc
loopne
test
dec
pop
mov
movs
jns
pop
cmp
dec
dec
mov
push
int3
pusha
aas
das
add
push
cmp
xchg
stc
mov
jge
xor
cmc
inc
mov
jg
jp
sti
and
and
daa
jmp
sbb
mov
adc
stos
mov
std
xchg
outs
push
inc
ja
cmc
xlat
xchg
add
jne
push
pop
mov
jge
cwde
pop
lea
retf
sub
mov
cmc
cdq
sub
repz
mov
cdq
ret
out
pop
push
lods
retf
repnz
fs
adc
test
xlat
imul
cmc
lock
dec
lds
jp
movs
sub
std
movs
fsub
in
or
jb
mov
mov
fidiv
jle
mov
lods
xchg
ds
shr
js
stos
sub
or
mov
(bad)
pop
mov
push
out
mov
pop
(bad)
in
ds
repnz
into
mov
ret
ja
mov
adc
ret
inc
xchg
pusha
fidivr
cmp
push
lock
cmps
out
pop
aaa
mov
xor
addr16
js
push
dec
cmps
test
out
das
popa
sbb
aam
sub
xchg
ins
js
mov
mov
jne
xor
jns
not
test
sbb
outs
jge
xchg
xchg
test
mov
mov
and
or
push
lods
cmc
pop
jp
xor
retf
adc
stc
push
mov
hlt
jge
push
xor
mov
or
sub
and
in
add
mov
pushf
inc
push
test
jo
inc
std
adc
push
inc
mov
mov
int3
push
inc
inc
cli
dec
fwait
jns
mov
xchg
imul
test
int3
pop
popa
cmp
(bad)
fucom
mov
fwait
into
jno
mov
xchg
jns
jae
xchg
sub
sahf
xor
and
cmps
and
and
jb
mov
adc
out
int
xchg
into
sbb
mov
sbb
stos
mov
js
je
popf
sbb
out
les
pushf
ds
cmp
movs
fwait
lahf
lds
test
xchg
sbb
fnstcw
div
sbb
and
pop
dec
aaa
push
add
sub
jmp
inc
imul
ret
inc
(bad)
in
add
or
sbb
das
fimul
ja
mov
jo
jns
sub
pop
loopne
jmp
pop
arpl
jae
sbb
daa
hlt
loop
add
jge
pushf
xchg
ffree
in
retf
jmp
scas
mov
into
cdq
nop
dec
mov
mov
jp
or
js
loopne
sub
cwde
imul
out
lahf
arpl
les
sbb
dec
dec
shr
int
ja
adc
jno
pop
jno
fistp
jb
jle
loop
ret
movs
lods
cmp
ss
repz
sti
mov
pushf
mov
sbb
fist
lds
mov
lahf
push
xor
fwait
sbb
or
paddsb
and
sbb
jmp
xor
xchg
ss
inc
arpl
in
inc
and
jno
or
cmp
addr16
mov
fs
movs
(bad)
enter
and
mov
mov
adc
rcl
add
and
test
mov
mov
and
push
dec
sbb
or
pop
lock
(bad)
jo
sbb
mov
loope
bound
leave
pop
jne
mov
or
add
js
popf
xor
retf
js
jmp
mov
cmp
xchg
test
rol
xor
xchg
inc
adc
jno
rol
imul
repz
loopne
int3
rcr
in
mov
push
int3
test
inc
lods
es
stos
sub
ret
popa
cmp
les
test
pop
popa
mov
dec
loop
and
test
push
movs
and
shr
(bad)
push
pop
pop
xchg
cmp
adc
jp
iret
push
and
sub
jne
ins
and
mov
(bad)
scas
xor
cdq
enter
sahf
jne
jae
dec
mov
push
adc
sbb
fs
push
adc
shl
imul
test
dec
call
or
xchg
std
mov
inc
(bad)
repz
retf
pusha
mov
adc
outs
fs
pop
into
dec
popa
xchg
fst
dec
dec
ficomp
test
out
daa
(bad)
or
pop
add
sub
call
jbe
les
add
and
and
test
sub
stos
lods
cli
mov
push
sahf
cmps
sub
and
pop
ins
add
ds
xchg
push
(bad)
inc
mov
push
adc
xchg
lahf
addr16
ret
popa
repz
push
pop
hlt
mov
mov
jmp
sbb
rol
adc
inc
pop
loopne
jge
imul
and
pop
ins
shl
in
cwde
xor
mov
das
loop
stos
call
adc
fld
retf
push
cmp
lock
mov
mov
inc
push
and
pop
addr16
adc
jge
xchg
cmp
mov
cmp
push
repz
mov
test
and
xor
cmp
push
mov
shl
shl
inc
into
dec
clc
nop
mov
push
das
lahf
or
fstp
sbb
ins
loopne
pop
push
arpl
ja
mov
xor
in
loopne
icebp
inc
and
push
or
cdq
jle
cdq
arpl
rcl
adc
inc
stos
mov
mov
sbb
dec
call
mov
mov
ds
xchg
sti
sbb
or
ret
push
sub
pop
imul
fisub
data16
adc
mov
sahf
xor
imul
mov
push
jae
sti
pop
xchg
push
lock
dec
idiv
mov
es
push
arpl
retf
mov
push
jnp
shl
nop
pusha
dec
cmp
cmps
fs
ins
icebp
pop
pop
mov
call
or
mov
dec
adc
xor
mov
pop
cmovle
mov
push
fstp
test
xchg
movs
or
sub
cmp
inc
mov
sbb
pop
pop
(bad)
cli
call
lahf
test
or
mov
xor
mov
cs
inc
nop
lock
shl
jns
mov
mov
mov
xor
and
pop
pop
(bad)
pop
adc
cdq
js
mov
call
push
push
adc
sub
and
xchg
jge
imul
test
call
mov
fs
mov
das
or
sti
push
movs
add
mov
and
xchg
mov
cmp
sub
sub
push
loop
das
scas
in
jecxz
data16
(bad)
(bad)
fnsave
mov
xchg
lock
aaa
mov
popf
cdq
das
mov
cdq
lock
sti
sub
ret
adc
retf
inc
pop
(bad)
sbb
add
pop
nop
jns
imul
mov
fwait
cwde
jle
fmul
jnp
test
(bad)
scas
xor
push
lds
lds
pushf
adc
inc
mov
stos
jecxz
dec
fist
in
inc
push
sub
sbb
rcl
xor
(bad)
repnz
adc
jmp
lods
sub
aad
enter
inc
sbb
ret
das
das
(bad)
mov
mov
and
ss
faddp
cmp
push
xchg
pop
cwde
inc
pushf
lds
lods
mov
int
push
xchg
cwde
jecxz
fild
xchg
sub
ja
cld
jmp
dec
xchg
je
loop
scas
(bad)
scas
call
clc
jmp
push
call
xchg
ds
xchg
imul
dec
mov
test
stos
ror
mov
mov
push
sar
int3
push
retf
lahf
pop
loop
dec
out
sbb
fisttp
inc
mov
jmp
fdiv
or
mov
lods
or
dec
push
cmp
in
sbb
jno
or
or
cmp
clc
iret
call
mov
call
push
scas
sub
(bad)
add
vmovntps
out
xor
lods
jecxz
mov
scas
aaa
sbb
pop
mul
inc
sub
in
push
mov
xchg
fimul
jno
mov
add
retf
push
or
cmps
add
jno
outs
dec
in
mov
loop
or
push
push
dec
jbe
and
arpl
shl
add
cmp
cmp
es
ror
or
xor
inc
shl
jnp
push
and
repz
ss
dec
iret
ret
pop
dec
ret
or
mov
xchg
mov
aam
push
fsubr
pop
shl
outs
xchg
adc
pop
sbb
and
ficom
pop
sub
push
adc
adc
pop
push
dec
add
ins
bound
stc
icebp
pop
pop
sbb
imul
mov
xlat
daa
nop
pusha
fidivr
les
fdiv
in
sbb
mov
jp
mov
test
ins
mov
lods
in
cmps
sub
daa
inc
das
dec
int
dec
pop
ins
clc
sahf
(bad)
xor
inc
mov
sub
add
xchg
mov
mov
or
pusha
sbb
and
outs
shl
mov
hlt
ror
push
xchg
rcl
aaa
loopne
retf
mov
or
jl
es
mov
bound
gs
pusha
mov
jp
and
and
push
xchg
mov
fist
ret
push
push
call
call
fisub
jnp
xchg
mov
clc
adc
or
mov
stc
std
sbb
sbb
mov
nop
adc
call
cwde
adc
shl
jo
xor
inc
xchg
dec
push
jge
out
add
and
test
push
mov
sub
sub
pop
mov
ror
stc
jne
(bad)
std
xor
jo
xchg
enter
sub
test
mov
xor
fsub
and
mov
sbb
mov
push
jmp
jns
in
and
xor
inc
stc
bound
aam
or
ficom
pop
hlt
push
fwait
sbb
or
dec
test
jecxz
xor
(bad)
loope
push
add
es
cmp
les
pop
pop
mov
fst
push
imul
xchg
dec
inc
cmps
push
cmp
or
adc
dec
in
inc
pop
or
mov
dec
pusha
dec
movs
test
add
pop
and
xor
(bad)
ins
pop
fwait
int3
out
sub
jns
dec
mov
add
outs
mov
and
(bad)
pop
adc
cmps
cmp
or
push
sub
call
pop
outs
cdq
or
ds
xor
mov
pusha
stc
loopne
inc
in
pushf
icebp
push
add
mov
xchg
cdq
add
outs
(bad)
out
and
cdq
push
clc
sbb
sub
(bad)
dec
pop
mov
and
mov
xlat
mov
mov
xchg
jne
in
aad
sbb
jbe
iret
push
in
cmp
test
aad
adc
push
sti
sub
stc
or
repz
push
popa
add
push
pop
imul
sbb
mov
and
mov
push
xchg
loop
out
pop
aam
mov
pop
xchg
popa
mov
cmc
movs
in
mov
or
jecxz
xor
(bad)
out
or
add
packssdw
adc
dec
xor
sbb
sti
pop
mov
sbb
scas
mov
dec
mov
jb
push
js
adc
mov
gs
adc
xchg
sbb
mov
add
xor
sti
jmp
add
aad
jmp
adc
and
cmp
enter
jle
lds
ror
rcl
dec
inc
test
fild
mov
dec
fnsave
adc
in
adc
push
push
inc
pop
fiadd
sar
adc
loop
or
xor
push
mov
xchg
rcl
and
pushf
jmp
cmp
adc
popa
and
cmps
pop
adc
jmp
or
fstp
outs
jge
cwde
pop
aam
cmp
movs
pop
jae
scas
jp
push
ins
mov
lds
arpl
into
pop
sbb
mov
xchg
cmc
(bad)
popa
push
add
pop
fs
mov
sub
inc
div
inc
out
sub
adc
ja
mov
sbb
add
movs
mov
in
sbb
mov
call
mov
mov
pusha
std
xor
pop
repz
pop
sbb
arpl
leave
mov
dec
mov
movs
sti
pusha
cmp
mov
(bad)
fs
rcr
xchg
sahf
push
pushf
movs
xor
lds
(bad)
and
adc
les
fistp
cld
inc
movs
fcomp
mov
imul
jl
(bad)
sahf
sub
jg
addr16
push
outs
adc
clc
jp
jmp
repnz
sbb
lahf
adc
(bad)
addr16
popf
add
fs
test
aaa
cmc
outs
sbb
stc
mov
sub
and
daa
sub
mov
or
dec
mov
popf
scas
in
or
mov
sub
(bad)
sbb
push
sbb
sbb
fwait
and
mov
fcmovb
fwait
icebp
scas
sub
lds
jge
sti
mov
mov
mov
cwde
or
imul
xor
jns
imul
adc
sub
jge
and
cmps
xor
aaa
add
daa
adc
cmc
add
(bad)
xchg
pop
push
xor
mov
mov
cli
mov
push
imul
inc
test
xor
jbe
out
jno
lea
jmp
ins
(bad)
xchg
pop
adc
sub
pop
jns
sbb
sub
push
sbb
scas
fisub
and
mov
mul
and
mov
leave
pop
push
shl
sbb
test
jg
sub
ins
sub
push
out
pop
sti
ins
xor
jecxz
sub
scas
sbb
ds
and
mov
(bad)
xor
pop
xchg
mov
pusha
cmp
add
push
(bad)
jg
push
mov
mov
pusha
aam
fadd
cmp
fwait
test
and
call
add
fimul
and
dec
inc
mov
mov
or
jbe
pop
jge
aad
jecxz
push
(bad)
sahf
lock
mov
inc
out
jmp
mov
dec
int3
cmp
add
push
and
push
pop
int3
test
mov
mov
(bad)
xor
jp
das
out
retf
and
repz
icebp
push
push
es
push
popa
push
jmp
dec
dec
inc
fild
mov
and
lods
pop
add
jns
imul
lock
sbb
leave
(bad)
adc
inc
mov
add
dec
mov
and
mov
ret
lods
or
mov
fs
inc
add
cmp
push
fincstp
sub
iret
mov
cs
mov
cs
xchg
pop
das
call
add
push
sbb
cs
mov
cmc
jg
(bad)
loopne
fcomp
inc
mov
add
push
adc
mov
ds
jns
xor
jge
lahf
cli
dec
cs
xchg
cmp
jp
add
sub
fidiv
paddb
cwde
push
xchg
xchg
sbb
fwait
test
shl
loope
mov
outs
cmp
jl
out
jno
sbb
xchg
jl
fcomp
bound
xchg
mov
adc
lods
push
xchg
jns
ficomp
lods
jb
push
es
(bad)
push
cvtps2pd
inc
repz
in
xor
sar
out
mov
xor
gs
dec
sti
in
mov
test
mov
int
(bad)
xor
adc
dec
pop
jmp
scas
fsubr
or
fiadd
(bad)
push
inc
and
mov
xor
push
daa
lea
sahf
push
xor
inc
jnp
ja
pop
out
jp
dec
ins
hlt
or
jo
mul
mov
pop
sub
cmp
jg
cmp
test
jne
in
or
xor
cmps
pop
test
jge
pop
xor
jb
dec
pop
xchg
(bad)
mov
js
add
jno
(bad)
aam
(bad)
retf
pop
movs
retf
pop
js
push
aaa
lods
in
xchg
int3
xchg
cwde
jmp
hlt
int
std
inc
push
(bad)
aam
test
cmp
push
lds
ins
cmp
adc
push
push
add
das
(bad)
sub
pop
ret
shr
sbb
ss
cdq
mov
fwait
cmp
stos
test
xchg
jnp
mov
nop
or
out
sbb
mov
jmp
mov
or
fdiv
cmp
adc
and
in
pop
cli
stos
cmp
gs
stos
xor
das
xor
jo
lock
fcomip
movs
pop
outs
ficomp
imul
mov
jle
lea
outs
pop
add
push
xchg
mov
and
(bad)
push
mov
ret
movs
xchg
shl
push
mov
test
cdq
icebp
push
loopne
inc
stos
test
scas
cmp
(bad)
js
les
jbe
jo
adc
aam
aad
mov
loopne
inc
pop
jbe
sbb
in
push
mov
mov
aad
test
ret
out
mov
nop
sub
sbb
jmp
and
or
sbb
aas
sbb
int
push
push
add
mov
jle
jo
jnp
xor
es
sub
rcl
mov
test
daa
or
xchg
or
loopne
shr
test
add
pop
sbb
inc
mov
mov
pop
popa
jg
ss
scas
out
ins
ins
dec
jecxz
or
fimul
cmp
rcl
adc
sub
push
ret
dec
out
sbb
sub
dec
xchg
jmp
pop
sub
adc
xor
xchg
adc
jecxz
fadd
mul
add
(bad)
xor
lea
sub
jg
push
inc
adc
popf
inc
pop
mov
adc
int
pop
adc
lock
das
push
inc
sub
dec
pop
pusha
aaa
cwde
cmp
mov
adc
xlat
mov
nop
mov
sbb
popf
(bad)
bound
cmp
push
mov
std
push
in
inc
dec
push
mov
dec
add
mov
in
inc
arpl
jecxz
int
sub
out
dec
loopne
pop
sbb
out
inc
or
mov
test
stc
mov
or
xchg
jbe
cmp
xor
or
loop
push
mov
jae
jle
rcl
movs
inc
adc
lods
dec
jge
ret
push
inc
xchg
js
jnp
std
mov
pusha
and
sbb
popa
push
popf
pop
pop
push
pop
int3
adc
loop
dec
or
jne
and
test
movs
ds
or
and
mov
jmp
jmp
in
test
enter
pop
fwait
rcr
sbb
scas
lea
popf
adc
lahf
sar
cmc
cs
ins
sub
jae
fisttp
inc
or
test
or
repnz
(bad)
dec
lods
sbb
inc
ror
test
aaa
stos
ss
mov
jae
neg
pop
add
data16
jle
das
dec
scas
stc
fcomp
or
loop
stc
xchg
cmps
mov
fnstenv
or
cmp
imul
sub
arpl
and
mov
lea
sti
leave
mov
addr16
imul
sub
call
adc
cmp
jne
xor
das
cmp
scas
jae
test
int
not
movs
sbb
inc
adc
sub
push
shl
fcom
mov
xchg
nop
jp
mov
sti
add
stos
out
enter
jbe
(bad)
aaa
in
and
ins
(bad)
cmp
push
dec
push
outs
lahf
fldcw
out
lds
sahf
loopne
pop
daa
add
mov
pop
call
mov
(bad)
cmps
push
pusha
lds
mov
loope
dec
in
cmps
sbb
mov
sub
push
mov
stos
ins
aad
pushf
mov
pop
(bad)
mov
mov
or
pop
in
add
jl
xchg
mov
push
sar
in
push
rol
leave
mov
sti
ja
ss
stos
inc
fs
into
lds
(bad)
in
icebp
mov
dec
push
and
mov
cmp
enter
cmp
icebp
mov
adc
js
inc
daa
cmps
push
es
jb
fbstp
out
aas
mov
fcom
sbb
daa
(bad)
arpl
xor
mov
es
mov
jnp
inc
test
out
fwait
xor
(bad)
movs
jae
(bad)
or
sbb
aas
stc
in
or
out
sbb
lock
out
push
dec
loopne
xchg
and
jge
pusha
jmp
jle
(bad)
loopne
cmps
ins
inc
and
out
ja
aam
mov
(bad)
adc
pop
aad
cmps
push
or
pop
dec
pop
outs
mov
(bad)
or
movs
fsub
mov
mov
jns
dec
sub
cli
bound
jecxz
pop
mov
shl
enter
loopne
pop
xor
pop
push
cmp
cs
mov
sub
mov
and
xor
sti
push
imul
fisub
lea
loop
adc
xor
jecxz
(bad)
movs
and
dec
sub
shr
sub
std
xchg
les
cmc
test
xchg
push
ins
fisttp
mov
je
add
mov
and
pop
shr
or
add
cmp
xchg
cdq
rcl
jb
or
jg
xchg
dec
sub
add
and
push
sbb
retf
gs
inc
xor
sbb
in
(bad)
adc
cwde
js
icebp
rol
sahf
sbb
and
sub
fdivp
repz
daa
stc
out
dec
(bad)
js
or
xchg
mov
pop
jne
jae
pop
pop
lods
(bad)
(bad)
lea
mov
and
jl
add
xor
push
jo
es
mov
jne
mov
test
hlt
cli
stos
xchg
out
ret
cmp
mov
lea
inc
mov
xchg
ja
ins
inc
pop
in
sub
inc
daa
xchg
push
shl
stos
and
cmp
and
sub
add
adc
xchg
fnstcw
ss
xor
sub
out
mov
mov
mov
mov
pop
fdivr
lods
loop
call
fild
addr16
sub
and
fdiv
out
jne
out
pusha
push
and
sbb
adc
test
xchg
inc
jge
mov
xchg
jae
xor
(bad)
mov
mov
xchg
inc
jno
pop
or
cmp
dec
imul
scas
sbb
loop
das
cmc
cmp
stos
mov
aaa
les
xchg
imul
dec
idiv
xchg
or
fidivr
or
cmp
sub
gs
ror
jbe
xchg
stos
push
jns
mov
jmp
mov
inc
push
aad
popa
div
mov
pop
hlt
mov
ins
sub
sub
std
dec
mov
mov
aas
mov
jmp
es
mov
out
push
mov
dec
mov
adc
pop
movs
cmps
(bad)
sar
ss
ja
jle
sub
jae
xor
xchg
fs
add
sub
pushf
push
repz
test
outs
xor
cmp
pop
(bad)
fiadd
jo
cmps
out
call
inc
outs
ret
jbe
das
xor
inc
mov
in
add
cmp
stos
int3
mov
addr16
lds
inc
outs
push
daa
sub
popf
sub
xchg
ds
into
mov
jmp
loop
je
shl
adc
in
jmp
inc
inc
pusha
out
mov
stc
pop
sahf
or
popa
fs
mov
idiv
pop
xor
out
fwait
jo
add
inc
cmp
sbb
ins
das
lea
stos
cli
pop
scas
cmp
push
(bad)
sub
sub
test
repz
jl
cli
push
mov
xchg
or
add
sti
mov
add
xlat
mov
push
pop
xchg
pop
cs
adc
js
and
adc
push
shl
and
addr16
ja
out
retf
cdq
push
adc
jle
les
jmp
or
fldcw
xchg
mov
stc
clc
fcomp
sbb
fdiv
cli
leave
cli
stos
mov
sub
(bad)
inc
(bad)
clc
jecxz
sbb
pop
pop
(bad)
shr
dec
pop
jmp
cdq
loop
pop
(bad)
(bad)
out
fcmovbe
cmp
les
ds
jae
mov
adc
into
cld
sti
(bad)
pop
(bad)
inc
cmp
stos
or
sbb
call
mov
loope
lds
xor
jecxz
addr16
fld
add
ss
xor
or
mov
outs
add
sub
sbb
sbb
mov
retf
cwde
cmp
xchg
or
pop
inc
sti
fisubr
in
mov
inc
test
pop
push
stos
jae
fmul
inc
js
inc
leave
cmps
add
fsubr
cmp
fstp
(bad)
scas
ret
dec
in
push
inc
aam
mov
and
push
cmp
or
bound
add
aas
cmp
pop
(bad)
stos
push
jbe
pop
xchg
inc
jno
(bad)
aas
cmp
mov
xor
push
sbb
fldenv
or
or
pop
cmp
mov
add
icebp
mov
or
push
stos
js
or
loope
jle
add
and
div
dec
cmp
sbb
mov
mov
fsubp
inc
sti
(bad)
ffreep
or
sub
push
es
mov
sub
fist
repz
cmp
and
cmp
dec
and
mov
mov
mov
cmp
mov
test
jle
push
cli
xchg
add
add
fadd
jbe
aas
sti
xchg
push
pop
mov
sub
cli
pop
pop
mov
xchg
mov
cmp
mov
in
pop
jl
inc
test
ins
sub
dec
(bad)
(bad)
jmp
and
push
push
dec
pusha
pop
adc
push
dec
mov
fwait
push
adc
movs
cmp
sbb
add
retf
inc
call
mov
mov
sbb
xchg
test
jg
jge
jae
sar
and
dec
cmps
das
(bad)
ret
jle
sbb
and
cwde
xchg
aaa
imul
dec
mov
inc
es
inc
ins
mov
into
call
mov
push
outs
aam
push
(bad)
ins
or
int3
iret
jae
adc
jecxz
add
lods
mov
loope
fwait
jne
mov
mov
aam
cmc
ret
and
xchg
and
int
cmp
bound
xchg
imul
push
adc
(bad)
jmp
sbb
lods
sbb
sub
les
popa
adc
aaa
sbb
mov
or
sbb
clc
pop
push
stos
or
ins
mov
adc
jo
sub
loop
and
int3
mov
inc
aad
adc
adc
sbb
jp
fs
retf
arpl
cmc
dec
jae
push
mov
mov
fimul
test
icebp
mov
sbb
dec
inc
dec
cwde
adc
ficom
push
loopne
enter
inc
mov
or
xlat
enter
stos
ins
std
test
pop
push
jg
pusha
sbb
sbb
sbb
into
cmp
test
add
or
ficom
mov
jge
pop
or
dec
faddp
mov
and
loop
pop
fisttp
out
outs
mov
mov
mov
dec
jb
cmp
inc
pop
cmc
pusha
cmp
stos
lahf
loopne
pop
mov
xor
dec
mov
jecxz
fsub
pop
cli
mov
shl
pop
mov
shr
push
lds
inc
stos
shl
xchg
out
mov
movs
(bad)
rcr
and
adc
jmp
es
mov
movs
test
dec
dec
push
arpl
or
pop
jne
adc
xchg
mov
push
xchg
test
div
int
(bad)
mov
popa
mov
mov
xchg
lods
inc
int3
xchg
pop
(bad)
sub
shr
add
dec
sti
sbb
jns
out
and
not
cdq
push
call
xor
pop
push
cmp
test
inc
jmp
mov
mov
(bad)
shr
ficomp
adc
arpl
rcr
cmp
test
and
fidiv
dec
jmp
popa
or
xchg
aaa
mov
adc
cli
cmps
(bad)
loopne
cmp
ins
fsubrp
push
movs
add
mov
lahf
add
icebp
leave
jns
sbb
push
ds
push
popa
test
stc
xor
call
sub
imul
scas
shl
cmps
movs
xlat
and
mov
jmp
fiadd
inc
mov
adc
dec
mov
xor
jno
iret
neg
inc
or
fdiv
mov
jp
adc
cdq
mov
add
dec
test
sub
in
dec
or
or
xor
xlat
ret
stos
mov
ins
aad
inc
inc
lods
push
lds
fdiv
imul
fbstp
loopne
adc
and
or
mov
jg
call
popa
bound
(bad)
or
mov
sbb
mov
movs
xchg
ins
sbb
dec
jg
je
outs
jle
sbb
repz
mov
mov
mov
sti
cmp
out
lock
cmps
test
add
cs
cwde
fs
xor
push
inc
inc
xlat
iret
js
or
sbb
dec
or
iret
popf
sti
mov
push
aam
pop
and
mov
fist
adc
(bad)
mov
push
ins
dec
pop
aas
inc
sub
pushf
jg
(bad)
sahf
lds
in
and
or
mov
aas
shr
int
js
xchg
pop
idiv
jne
mov
int
retf
lods
inc
sub
in
cmps
adc
push
mov
jae
neg
pop
push
ret
mov
xor
in
stos
in
outs
iret
and
daa
call
das
test
into
stos
or
and
mov
je
rol
enter
mov
mov
add
push
test
rol
inc
je
cmp
pop
loopne
lods
rcr
push
movs
inc
mov
mov
out
rcl
or
test
push
mov
aad
mov
lahf
mov
iret
adc
popf
cmp
dec
inc
pushf
pop
push
push
outs
sbb
mov
dec
sbb
jecxz
lods
sbb
int
cmp
jge
mov
popa
jo
adc
imul
inc
test
aaa
out
pop
enter
das
loop
inc
lock
bound
mov
adc
out
adc
sub
(bad)
(bad)
leave
jmp
fs
sti
jmp
int
iret
xchg
stos
aas
jge
jecxz
movs
sub
cmp
xchg
vcmppd
cmps
das
int
xlat
adc
hlt
jnp
push
inc
cs
push
xchg
repz
sub
(bad)
leave
inc
cs
xor
push
mov
aad
std
push
xchg
aam
aaa
pop
outs
xchg
shr
inc
retf
mov
mov
in
fdiv
pop
sbb
adc
subps
fsubr
sbb
mov
bound
cmps
out
mov
pop
cmp
in
sbb
inc
cld
push
jbe
retf
loop
popa
jecxz
mov
cdq
call
sbb
sub
and
sti
dec
or
(bad)
call
jno
jg
jg
xor
cmp
stc
adc
jecxz
dec
loop
aaa
and
retf
jmp
push
aad
out
les
pushf
or
(bad)
gs
out
push
adc
int
shl
dec
pop
pop
cmps
add
dec
outs
or
in
lea
leave
jae
aas
jle
loope
icebp
ins
jno
ret
cmc
cmp
loope
ins
pushf
xor
cld
xchg
ins
outs
ins
jne
jbe
and
xor
adc
pusha
ret
xchg
sub
lods
mov
cmp
xor
cdq
cmp
cmp
call
fwait
sub
aaa
nop
adc
fadd
add
sbb
sahf
test
jo
or
inc
idiv
xor
xchg
push
test
adc
push
sbb
cs
or
xchg
rol
mov
mov
cmp
and
cli
popa
mov
add
das
xor
aad
xchg
sub
aam
or
dec
jle
aaa
jmp
lahf
repz
mov
(bad)
popf
dec
sar
imul
shr
cmp
cli
dec
dec
outs
add
jo
int3
xchg
ret
push
pop
nop
adc
sub
out
test
out
dec
push
pushf
aaa
sbb
or
sub
cwde
pop
loop
(bad)
cli
arpl
and
xchg
not
mov
addr16
adc
pop
mov
ins
scas
sbb
pop
cmp
sbb
inc
jp
mov
inc
mov
mov
xchg
xchg
jmp
add
ficomp
shl
sahf
aaa
loopne
imul
(bad)
ins
push
loope
mov
pop
mov
push
xchg
push
aas
add
ror
jmp
jg
jg
popa
dec
leave
inc
clc
push
stos
ret
and
or
aam
sbb
cli
adc
ds
hlt
mov
icebp
jmp
push
mov
mov
enter
dec
lds
lods
std
mov
dec
dec
sub
jmp
add
push
pop
xor
sbb
fiadd
cmp
or
call
mov
aam
mov
jno
nop
or
sub
fld
mov
repz
jmp
std
sbb
sar
stos
pop
imul
mov
imul
lds
or
sub
pop
retf
mov
imul
mov
jg
mov
mov
sbb
or
ret
mul
xor
test
xlat
push
pop
and
pop
fadd
xor
cmp
mov
mov
xchg
jno
jae
outs
sub
and
repnz
imul
mov
and
int3
bswap
sub
(bad)
sub
mov
xlat
mov
dec
mov
xchg
icebp
lods
cs
sub
test
adc
icebp
cmp
lahf
cdq
ret
and
dec
cmp
ss
fld
mov
daa
stos
ret
pop
and
mov
scas
pop
shl
rcl
jns
jp
inc
sub
lock
mov
lock
das
pop
fwait
jbe
cli
fcomp
test
inc
mov
xchg
gs
jne
retf
lea
cmp
mov
inc
add
inc
icebp
sub
(bad)
out
fcmovnbe
retf
mov
xor
dec
scas
and
inc
ins
leave
lock
add
ds
mov
pop
(bad)
imul
ss
or
sbb
nop
sub
or
sub
xadd
(bad)
jge
sbb
sub
(bad)
call
push
sbb
enter
fadd
aad
enter
pop
jmp
push
(bad)
imul
shl
or
fdivrp
rcl
in
xor
xor
fwait
add
cli
in
popf
xor
(bad)
push
jae
and
clc
pushf
dec
cmp
arpl
push
jecxz
mov
push
rcr
neg
sbb
cs
xor
inc
dec
fist
mov
mul
loope
aam
xchg
mov
dec
mov
cmps
push
movs
(bad)
(bad)
sub
adc
push
jnp
cmp
push
sbb
sbb
lods
idiv
movd
mov
xor
jle
add
movs
inc
fild
mov
mov
push
dec
scas
xchg
mov
xchg
or
repnz
loop
jg
xor
sub
cmp
mov
repz
xchg
cmp
aam
mov
adc
ficomp
int3
jmp
or
mov
sbb
mov
pop
call
pop
push
repz
ffree
and
mov
fld
cld
ret
sbb
jmp
push
add
ror
scas
jecxz
jne
push
imul
cmp
and
mov
sbb
mov
pop
ins
movs
pusha
rol
es
xchg
jnp
(bad)
in
icebp
shl
popa
int
sub
push
xchg
cmc
mov
mov
xchg
scas
mov
outs
sub
dec
lock
out
mov
das
imul
push
xor
lea
int
loopne
push
adc
mov
iret
xor
je
sbb
psrlw
push
dec
push
hlt
push
test
push
rol
rcr
mov
jo
cmps
ret
or
loope
dec
enter
jb
test
jg
call
mov
paddq
jae
mov
and
arpl
cmp
sar
ffree
pushf
mov
mov
(bad)
and
bswap
mov
or
ror
xchg
shl
jle
mov
mov
xor
push
jge
in
in
scas
jne
into
add
jns
aas
out
mov
mov
cmps
int3
(bad)
push
mov
mov
inc
pop
test
push
test
push
jmp
sti
mul
sbb
cmp
sub
and
aaa
sub
ror
(bad)
cmp
std
mov
xchg
cmp
sub
push
es
(bad)
test
in
mov
add
outs
push
and
cmps
cmp
xlat
daa
add
pop
sbb
repz
(bad)
ss
mov
push
addr16
sub
jns
mov
out
(bad)
addr16
sahf
or
dec
cmc
pop
out
(bad)
push
dec
lea
pop
ds
mov
lock
retf
fs
pop
mov
xor
fs
rol
sbb
and
mov
xchg
not
mov
pop
iret
imul
mov
cmp
xchg
xor
xor
mov
mov
jae
push
loope
ret
int
cmp
xor
xor
pop
push
jecxz
mov
or
movs
mov
ret
xchg
pop
or
js
sub
mov
mov
aas
inc
add
jl
xor
shl
cmp
not
test
in
push
in
stos
cmp
sub
pop
cld
inc
sti
stos
xchg
repz
jmp
mov
int3
dec
test
pusha
stos
ja
pop
jne
je
loope
mov
dec
retf
movs
xchg
pop
or
sub
aas
sbb
xor
dec
stc
xchg
jb
mov
(bad)
push
and
nop
nop
iret
xor
and
fsubrp
scas
xchg
(bad)
in
fcomp
in
pxor
push
adc
imul
cmp
lock
jle
and
movs
mov
dec
mov
sub
xchg
fs
addr16
rcl
xchg
scas
data16
xlat
cmp
push
aad
(bad)
jns
or
xchg
mov
and
mov
out
sbb
(bad)
scas
jmp
rcl
xchg
out
loop
nop
mov
idiv
nop
shr
mov
mov
inc
adc
clc
cmp
xchg
push
push
test
lock
fdiv
aad
loope
xor
xchg
and
lods
inc
mov
movs
fdiv
pop
vmwrite
pop
pushf
push
mov
adc
xchg
popa
pop
push
je
sti
loop
mov
mov
jmp
add
ins
sbb
loope
jmp
cld
mul
push
xchg
push
outs
jns
fwait
aad
or
xchg
leave
cmps
aaa
outs
test
adc
mov
cmp
jnp
fs
cmps
pusha
loope
jo
daa
mov
aaa
lods
test
mov
dec
dec
sub
out
in
add
clc
rcl
mov
mov
pop
fbstp
add
lock
retf
into
or
mov
out
(bad)
enter
add
xchg
dec
or
push
leave
out
arpl
pop
cld
mov
sub
ret
fdiv
aaa
jae
adc
scas
imul
jg
and
add
cmp
jle
sbb
lods
(bad)
icebp
xchg
or
jns
fistp
cmp
mov
ja
lea
or
add
fisub
lds
mov
sub
loope
daa
push
xor
(bad)
out
xchg
mov
jne
rol
test
call
movs
and
mov
or
lea
dec
je
or
mov
mov
or
add
push
mov
sar
in
pop
ins
movs
mov
lds
retf
loop
sar
data16
jae
enter
xchg
jmp
loopne
retf
popa
fild
dec
inc
and
inc
std
jmp
dec
xchg
into
xchg
in
mov
inc
imul
adc
jge
add
mov
test
or
pop
push
mov
push
pushf
push
or
loop
out
ja
cs
xchg
xchg
fisttp
sub
mov
sbb
fadd
dec
and
shl
outs
sbb
cmps
scas
sub
cli
inc
push
ja
mov
xor
rcl
enter
data16
movs
pushf
push
repz
pop
daa
mov
cmp
test
jecxz
push
push
ds
shl
call
retf
(bad)
faddp
mov
js
xor
getsec
push
xchg
cmc
mov
loopne
retf
xor
pushf
gs
inc
and
cld
rcl
dec
sbb
adc
xor
jns
std
jge
ret
mov
xor
cmc
mov
add
adc
arpl
push
and
adc
mov
addr16
xchg
xchg
jno
mov
jl
(bad)
mov
sub
pop
(bad)
push
sub
mov
clc
adc
adc
jg
fild
shr
scas
mov
fisttp
fild
jb
xlat
pop
cmp
out
and
sbb
nop
mov
sbb
dec
mov
pop
nop
and
sbb
dec
pop
push
retf
fcomp
push
push
pop
lahf
(bad)
xor
ss
fwait
mov
call
xor
push
imul
cmps
lock
mov
(bad)
cmp
cmp
or
(bad)
div
lahf
fiadd
and
adc
fisubr
pusha
fcmovnb
push
mov
sbb
add
jb
repnz
sub
or
jl
or
ins
rcl
cli
push
mov
adc
std
xor
adc
fnstcw
pop
in
pop
bnd
in
idiv
mov
jnp
jecxz
xchg
or
lods
pop
jg
mov
lahf
mov
xlat
xor
loope
std
xchg
daa
jbe
pop
test
cmp
jne
call
out
rcr
cmp
call
mov
and
movs
mov
mov
mov
adc
mov
adc
push
inc
call
loope
pop
push
data16
imul
mov
sbb
add
xchg
aad
mov
dec
pop
or
faddp
sub
cli
fiadd
sub
mov
mov
fnstcw
pop
sbb
or
ret
test
rol
push
jmp
idiv
cmps
je
sub
repz
cmc
aad
push
add
outs
ins
push
xor
cs
(bad)
call
(bad)
addr16
stc
div
fiadd
or
out
cmp
popf
push
loop
daa
rcl
je
outs
sbb
pop
mov
es
daa
mov
loopne
outs
jl
into
mov
push
or
je
pop
test
fcomp
je
jp
fmulp
add
mov
jns
pop
popa
pop
cwde
jb
movs
out
adc
mul
fld
pop
pop
in
jg
jo
fist
ror
dec
imul
sbb
xor
test
mov
add
pop
enter
(bad)
rol
call
jge
jle
and
mov
pop
mov
cmps
inc
dec
mov
xor
mov
nop
jne
mov
push
cmp
cdq
call
cmc
addr16
jp
mov
cmp
xchg
or
inc
xor
dec
jl
gs
test
test
pop
lods
mov
hlt
xor
fst
xor
pop
mov
add
pop
mov
shl
jmp
pop
dec
push
cli
call
test
and
popa
lahf
(bad)
std
ja
or
std
movs
sub
pushf
out
popa
ja
push
aas
push
int
dec
movs
pop
pop
adc
icebp
loopne
cld
leave
push
(bad)
fstp
cmp
pop
mov
hlt
mov
inc
add
out
sub
push
daa
xlat
je
push
aad
jae
inc
dec
and
or
push
mov
retf
add
xlat
pop
not
in
cmp
test
push
fidivr
and
push
das
test
lock
push
sub
mov
retf
mov
jecxz
icebp
in
sbb
sar
pop
mov
xchg
xchg
xor
inc
cmps
or
jg
dec
mov
mov
fsub
xor
mov
add
dec
pop
out
(bad)
or
mov
imul
sar
aas
add
dec
adc
push
aas
dec
inc
jae
jae
clc
int
push
retf
pop
retf
xor
fdivr
sub
add
jmp
adc
jle
mov
(bad)
fprem1
test
cmp
lea
pop
aaa
fsub
push
sub
or
dec
sahf
cmp
loop
lahf
mov
stc
fisttp
jp
pop
fcomp
ins
std
addr16
test
add
iret
addr16
js
jns
mov
mov
aas
retf
add
repnz
lods
ret
push
xor
fs
iret
fidiv
shl
push
stc
push
test
push
push
dec
jge
pop
cli
data16
shl
cli
xchg
les
jle
mul
cli
push
jmp
cdq
cmp
stos
ss
nop
stc
outs
ret
add
mov
mov
inc
es
icebp
push
mov
adc
stos
cmps
inc
bound
sbb
mov
sbb
add
mov
inc
push
dec
popa
lgdtd
mov
cdq
std
arpl
loopne
nop
and
shl
repz
fucomp
mov
mov
adc
inc
jg
cmps
or
call
mov
ins
ins
mov
xchg
xchg
pop
sahf
mov
mov
xchg
aaa
shr
mov
push
or
jp
cmp
cwde
inc
clc
sar
sub
push
or
sub
adc
inc
inc
jnp
and
inc
mov
dec
pusha
mov
out
inc
out
fucom
ds
dec
scas
movs
and
iret
add
ss
or
push
jp
daa
enter
pop
sbb
push
sbb
xlat
lods
pop
leave
ret
jmp
xor
and
inc
jge
sbb
add
jmp
popf
out
or
dec
xor
xchg
dec
xchg
leave
out
mov
ret
jg
sbb
sub
pop
pop
mov
out
add
sbb
jns
loope
leave
std
or
(bad)
jbe
sbb
retf
inc
or
mov
in
add
out
call
aad
jbe
inc
mov
mov
cmp
cmp
push
das
or
xor
dec
popa
cmp
mov
add
ins
or
in
push
jbe
adc
fucom
in
inc
leave
adc
adc
lea
test
or
mov
push
cdq
sbb
jle
test
and
and
daa
add
or
nop
inc
cmp
retw
or
mov
jmp
(bad)
mov
mov
sbb
or
in
(bad)
jmp
pop
cmc
int
dec
jle
inc
xor
jmp
mov
cli
mov
gs
xchg
dec
loopne
lahf
adc
fs
out
xor
scas
jg
sbb
loop
div
stos
adc
mov
inc
jmp
clc
scas
and
addr16
pop
aam
mov
push
ror
mov
pop
inc
scas
xchg
mov
aas
xor
ja
push
xchg
movs
sub
aam
xchg
pop
pop
pop
outs
popa
adc
ror
in
and
pushf
test
adc
pop
comiss
and
dec
push
push
aad
and
or
je
stos
jge
(bad)
clc
inc
lods
test
sbb
xor
mov
add
dec
cmps
mov
jbe
pop
mov
out
dec
mov
mov
mov
mov
sub
push
xor
aas
jmp
mov
ja
outs
mov
lods
sbb
pop
out
mov
fstp
lds
mov
pop
pop
push
es
jo
repz
xchg
pusha
ds
cmp
cmp
test
xor
popf
xor
cmp
push
lahf
mov
pop
or
sub
dec
inc
std
stc
xor
ss
jno
(bad)
xchg
sub
shl
arpl
icebp
int3
push
arpl
sbb
in
cli
sub
jne
pop
adc
and
lods
push
jmp
js
(bad)
xor
sub
mov
cs
or
add
xchg
aaa
popf
dec
leave
adc
dec
scas
scas
sub
pop
pop
adc
inc
xchg
cmps
(bad)
jbe
cwde
add
out
dec
idiv
ds
sub
mov
test
aas
cmp
imul
pusha
mov
ss
mov
das
xor
sbb
cmp
stos
daa
cmc
pop
in
lock
push
push
jb
imul
push
sbb
popf
sti
or
sbb
test
jmp
inc
icebp
pop
inc
mov
jmp
jle
jle
or
xor
pop
pop
push
js
adc
dec
clc
push
cmp
fsub
xchg
fldenv
or
data16
push
jo
sbb
js
popa
pop
adc
xor
ja
sbb
sub
repnz
push
sbb
add
jnp
movs
push
xchg
pop
test
cmp
push
int3
cmp
popa
out
sub
mov
cmp
cmps
sub
iret
and
ds
daa
mov
out
add
lahf
out
std
retf
mov
jecxz
cld
(bad)
std
mov
add
and
dec
hlt
mov
aad
push
std
jle
inc
(bad)
lods
add
xchg
(bad)
(bad)
xchg
imul
dec
dec
scas
into
sub
ror
(bad)
adc
mov
dec
inc
ins
xchg
in
out
or
cmp
ins
addr16
or
push
jb
sub
sbb
cmp
or
sub
jge
idiv
stos
inc
popa
sub
inc
int
outs
adc
adc
nop
xchg
sbb
cmps
je
int3
mov
imul
imul
mov
pop
push
ret
mov
aad
jmp
and
jle
mov
aaa
dec
rcl
int
call
dec
ret
jle
xchg
in
lock
jb
adc
in
cdq
mov
jnp
sbb
in
je
gs
push
lock
shufps
lock
pop
in
inc
pusha
sbb
lock
mov
sbb
push
sahf
out
pop
push
out
sbb
lock
mov
jns
mov
in
sbb
movs
pop
mov
(bad)
mov
dec
add
jae
std
add
xor
jl
add
out
cmc
int3
adc
mov
rcr
sar
mov
jb
ds
inc
mov
outs
fcom
pop
add
sbb
fwait
dec
ins
mov
push
xchg
ss
icebp
in
lods
sub
outs
pop
xchg
mov
dec
xchg
dec
add
fisub
cs
mov
and
nop
fcom
sbb
ret
lock
fwait
jns
lock
sbb
dec
mov
cmc
sub
pop
(bad)
aaa
ds
js
out
rcl
adc
retf
mov
push
dec
popf
sub
xor
into
outs
in
sbb
sbb
mov
hlt
pop
xchg
inc
push
adc
test
sbb
xchg
sub
xchg
pushf
push
mov
fwait
and
ret
ja
jbe
jmp
add
int
outs
add
and
daa
sub
pop
jl
sub
call
shr
or
push
xchg
retf
xlat
repnz
daa
xchg
pop
sub
js
shr
aas
xchg
mov
rcr
pop
repz
je
xor
cmp
dec
dec
fstp
out
adc
add
pushf
jle
inc
dec
xchg
push
inc
fist
jg
xor
xor
sbb
or
jmp
nop
scas
mov
not
fwait
in
fstp
mov
mov
test
dec
loop
jo
stos
xchg
repnz
add
sub
add
jle
lods
sub
push
cmc
popa
pop
cmp
pop
xchg
sbb
xor
mov
add
arpl
jne
imul
push
and
push
leave
mov
js
sub
imul
add
mov
fidivr
fs
inc
push
push
out
in
xchg
ds
xchg
repz
fcomip
icebp
push
and
jne
addr16
mov
cmc
xchg
shl
leave
or
fst
jns
pop
pop
jo
push
mov
fisubr
push
bound
(bad)
xchg
fwait
and
pop
inc
cld
and
sub
xlat
fnstsw
pop
hlt
mov
adc
and
outs
xor
and
mov
xor
std
imul
xor
push
xchg
and
fs
test
fisttp
and
shl
pop
cs
shr
es
ret
cmp
fcom
arpl
pop
mov
mov
cdq
push
sahf
mov
call
aaa
add
mov
aas
dec
out
out
or
aad
fimul
ins
and
bound
push
push
pop
or
nop
inc
pop
fsubr
jns
jmp
repnz
hlt
sbb
fwait
push
adc
jnp
push
cdq
cmp
inc
adc
gs
aaa
sbb
cmps
mov
(bad)
sub
test
sbb
and
jbe
push
fisub
sti
and
add
xchg
(bad)
jge
cld
not
sbb
inc
jl
sbb
add
jns
mov
or
js
mov
sbb
jl
and
addr16
push
jo
xchg
loop
dec
push
cmp
sbb
ins
adc
repz
fstp
and
popf
inc
jmp
push
sub
mov
loopne
out
lods
and
popa
sub
and
out
pusha
inc
lea
ret
or
push
mov
addr16
fwait
neg
imul
push
xchg
scas
jge
jmp
sub
xor
pop
jl
out
and
aaa
dec
jbe
xchg
or
xor
pop
mov
sbb
mov
test
gs
pop
jmp
clc
mov
or
push
cld
push
xor
inc
cmc
sub
mov
add
push
push
dec
out
mov
jge
lods
sti
mov
mov
or
(bad)
addr16
jmp
outs
or
aam
dec
mov
icebp
mov
das
xor
fst
jmp
mov
inc
rcl
pop
ins
retf
push
xchg
add
xor
mov
xchg
mov
push
mov
nop
jns
enter
cmp
data16
pop
sbb
inc
push
inc
loopne
std
fisttp
sar
push
stos
dec
cmps
xor
and
push
sbb
jno
pushf
xchg
mov
das
inc
push
test
adc
rcl
add
push
movs
mov
cld
movs
es
fdiv
(bad)
out
(bad)
sub
cld
adc
in
inc
add
pop
jb
rol
sub
and
xchg
mov
mov
dec
mov
loop
cs
(bad)
inc
les
out
add
inc
inc
sbb
in
arpl
cmp
movs
and
movs
sub
push
aam
jno
push
movs
cdq
imul
add
popa
mov
mov
jl
jp
and
pop
out
aas
add
add
ret
retf
cmps
jp
and
push
(bad)
xchg
or
mov
xchg
inc
mov
enter
push
adc
sti
mov
(bad)
retf
fmul
and
adc
ins
and
fcmovbe
push
es
add
aam
fbstp
inc
pushf
test
mov
movs
scas
pushf
jp
cmp
jle
mov
mov
inc
jecxz
mov
ss
push
mov
and
ins
cmp
mov
adc
mov
xchg
(bad)
push
(bad)
pop
fld
and
cmp
pushf
int
ins
je
ret
mov
inc
inc
add
int
shl
clc
daa
jae
(bad)
and
mov
js
or
and
push
out
ins
xchg
test
cmps
out
adc
es
jb
(bad)
push
jno
cmp
out
sbb
out
fs
and
add
mov
clc
out
jmp
pusha
je
sub
aad
or
(bad)
dec
cmp
scas
push
mov
sbb
rcr
xor
cmp
xor
stos
imul
inc
clc
jg
movs
jne
mov
call
pop
fild
cmp
push
fild
imul
cli
imul
sbb
sbb
xor
fwait
jns
call
add
add
adc
push
xchg
cmps
pop
cmps
inc
por
and
mov
or
mov
fcomp
test
outs
sar
rol
xor
stos
aaa
dec
sti
outs
push
popa
add
push
push
adc
add
sub
mov
xchg
rol
or
fstp
mov
xchg
int
or
lock
pop
rol
add
fwait
dec
xchg
push
dec
mov
jb
sbb
test
mov
outs
(bad)
(bad)
(bad)
xchg
int3
pop
(bad)
dec
stos
mov
jne
cli
xor
add
jb
mov
dec
test
out
mov
cld
and
data16
mov
xchg
rol
mov
mov
icebp
pop
pop
inc
test
mov
jo
push
sub
fst
in
fidiv
enter
mov
inc
cwde
out
nop
xor
fidiv
repnz
psubsw
loop
stos
pop
inc
cmp
ss
mov
mov
jl
scas
leave
ret
push
push
aaa
lahf
adc
ins
les
sub
xchg
lods
inc
push
je
icebp
movs
repz
ret
or
pusha
sbb
(bad)
les
cmp
push
aad
pop
dec
sub
push
retf
sbb
cmp
int
jnp
imul
(bad)
dec
mov
je
inc
inc
mov
xchg
clc
cmps
js
clc
mov
dec
in
(bad)
cld
scas
clc
scas
pop
call
pop
pusha
ret
stos
lods
imul
mov
mov
cmp
or
lea
sti
sbb
push
inc
inc
mov
mov
popf
cmp
not
push
stos
cmp
push
sub
dec
rcr
out
xchg
jae
fbld
iret
lock
adc
mov
pop
scas
fld
int
retf
lods
mov
inc
aam
retf
aam
movs
ins
int
shl
call
mov
data16
add
cdq
pop
mov
repz
int
pop
das
cmp
and
inc
pop
and
jmp
add
cmp
mov
mov
jmp
xchg
mov
dec
add
or
xchg
mov
inc
sahf
adc
xchg
(bad)
std
mov
out
pop
ficom
xchg
cmc
movs
xchg
or
(bad)
stos
(bad)
in
push
je
movs
fwait
movs
push
(bad)
into
sub
add
jg
cmps
pop
jecxz
jbe
scas
pop
cwde
mov
fild
mov
push
pushf
push
mov
sub
mov
jo
push
adc
push
and
push
xchg
call
lock
jns
pop
pop
(bad)
into
add
xlat
fdiv
in
aam
aam
mov
cmp
rcl
test
pop
cli
call
inc
xor
inc
out
or
push
and
js
push
pop
pop
(bad)
or
xchg
dec
cmp
mov
lods
neg
mov
aad
aas
pushf
ss
mov
lods
jne
sahf
mov
imul
das
push
outs
jl
hlt
jmp
clc
data16
and
pop
cmp
mov
push
mov
and
pop
std
or
cmp
fimul
movs
jns
ret
inc
jne
mov
test
jmp
pop
push
jae
sub
into
mov
fnstsw
fstp
int3
jecxz
or
adc
push
in
aas
lods
fnstsw
outs
icebp
pop
add
pop
(bad)
dec
mov
cmp
outs
call
inc
outs
stos
mov
dec
stos
mov
cmc
mov
cmp
sbb
lock
mov
jno
bnd
and
dec
and
jle
sub
sahf
mov
push
sub
int3
push
pop
mov
mov
lods
div
add
je
bound
xchg
adc
xchg
push
mov
cmps
cdq
sub
les
scas
jno
cld
ins
aad
stc
add
and
repz
mov
cs
(bad)
js
adc
push
mov
pop
mov
xchg
ficom
pop
cmp
fwait
sahf
or
arpl
aaa
ins
lds
mov
cmps
pop
or
xchg
popa
adc
sub
inc
call
jle
pushf
jp
jo
cdq
sti
or
clc
jae
fst
mov
xchg
fwait
lods
sbb
and
lock
mov
ss
xabort
pop
cmp
mov
ror
aaa
test
and
fiadd
aad
and
lwpval
inc
fwait
popa
fisub
nop
cli
inc
inc
movs
pop
jg
fadd
push
hlt
sbb
adc
popa
sbb
adc
pop
je
(bad)
rcl
out
inc
or
cwde
(bad)
jmp
and
imul
(bad)
enter
dec
bound
jo
xchg
cmp
add
das
lds
pop
enter
stos
pop
repz
xor
mov
je
repnz
and
das
pop
das
pop
(bad)
movs
jno
add
pop
jmp
aam
sbb
cmp
add
or
inc
mov
dec
arpl
and
xchg
sub
mov
jp
mov
rcr
cmp
ins
fistp
(bad)
push
push
or
gs
sbb
sub
sub
jp
js
add
loopne
pop
add
cmp
inc
or
and
in
lock
inc
push
cdq
adc
push
and
sub
sbb
xor
repnz
lea
ret
jecxz
or
jbe
and
stc
inc
sbb
jb
neg
call
mov
lea
das
push
and
pop
shl
push
ret
xchg
(bad)
push
ja
cmps
mov
push
xchg
loopne
pop
sub
into
push
(bad)
lock
fwait
scas
ds
popa
mov
mov
xchg
ins
rcl
(bad)
fldenv
in
movs
jae
mov
pop
mov
inc
pushf
xchg
mov
fwait
xchg
jb
mov
data16
int3
jae
dec
pop
inc
xchg
mov
shl
ss
cld
and
adc
cmp
cmc
test
mov
jp
fwait
lock
jmp
ins
out
push
jg
cld
add
gs
rcr
test
add
cmp
adc
pop
out
out
lahf
push
cmp
call
mov
lods
dec
scas
or
xchg
add
mov
mov
ret
pop
sub
xlat
ins
dec
xor
xchg
jl
adc
(bad)
popa
leave
aaa
add
ins
xor
sbb
jne
jb
or
repnz
cli
or
mov
aad
xchg
cwde
addr16
jne
nop
adc
mov
inc
loopne
push
sub
lods
sbb
push
fbstp
add
rcr
icebp
les
jle
and
adc
(bad)
jno
into
out
and
inc
cs
test
inc
repz
leave
(bad)
cmps
mov
rcl
xchg
mov
std
or
aad
(bad)
retf
add
mov
xchg
js
(bad)
xor
pop
lods
mov
bound
dec
inc
aam
sbb
pop
xchg
xchg
es
mov
xlat
out
test
mov
push
into
and
mov
cmps
inc
pusha
jmp
mov
out
mov
pushf
enter
cli
fld
cvtps2pd
scas
pusha
outs
fst
or
xchg
(bad)
jmp
sbb
sbb
inc
in
stos
call
and
lods
cli
xor
rcl
and
in
sahf
add
ss
jbe
jne
cmp
cmp
xchg
xor
xchg
sub
ins
js
mov
fist
enter
inc
test
bound
in
ss
rol
mov
js
and
fwait
rcr
in
xor
not
sar
mov
test
jp
add
loopne
ror
(bad)
sti
leave
call
adc
test
daa
mov
pop
jne
fild
rcr
pusha
rcl
push
adc
neg
or
mov
dec
or
jl
push
push
pop
mov
jbe
ja
cmp
mov
push
cwde
(bad)
and
pop
inc
cmp
adc
fcomp
fistp
jb
pop
pop
repnz
xchg
imul
hlt
adc
(bad)
xor
mov
test
(bad)
mov
sbb
push
in
test
xchg
aad
inc
pop
sbb
pop
inc
scas
add
sbb
mov
ret
pop
arpl
push
adc
sbb
pop
aaa
pusha
jg
jmp
adc
jb
movs
ins
fsubr
inc
xchg
in
cmp
mov
pop
push
adc
out
ja
mov
call
mov
push
dec
jle
adc
cs
xchg
pop
lods
(bad)
call
jnp
xor
movs
sub
pop
dec
ss
push
add
test
lds
data16
mov
dec
in
(bad)
sbb
int
clc
mov
sbb
push
pop
jecxz
ror
jle
mov
inc
mov
imul
int3
pop
or
data16
push
jp
xchg
inc
xchg
jl
fwait
inc
dec
and
lods
sub
adc
or
cld
test
jmp
out
mov
daa
gs
and
xchg
sub
cmovns
mov
xor
mov
inc
mov
pusha
jne
sub
mov
sti
pop
es
and
xchg
ret
add
sub
cld
sbb
sub
movs
xchg
shr
cdq
ret
fimul
sar
push
push
add
movs
(bad)
sub
add
cmp
repnz
xchg
add
dec
dec
push
and
loop
movs
stos
pop
and
fst
sbb
pop
cmp
mov
jne
fsubr
dec
or
in
xchg
inc
or
iret
lods
call
pusha
mov
xor
out
(bad)
scas
pop
sar
push
pop
inc
sbb
hlt
shr
sub
dec
push
inc
loope
mov
mov
mov
nop
aam
or
push
sub
in
cdq
cmp
in
pop
pop
sbb
pop
sbb
xchg
cmp
in
or
fistp
sbb
mov
jae
xchg
iret
adc
jle
enter
loopne
jmp
data16
jp
repz
mov
jge
fnstcw
repnz
xchg
pop
mov
and
sbb
scas
mov
fisubr
push
dec
test
in
rcr
sbb
mov
popa
xchg
and
mov
or
fcomp
outs
mov
inc
stc
dec
imul
mov
fisubr
push
mul
dec
sbb
add
inc
ss
jle
xchg
jbe
push
jl
mov
aam
sbb
push
push
icebp
mov
cld
fldenv
adc
call
repnz
mov
sbb
sub
packsswb
xchg
dec
sub
mov
cmps
mov
xchg
pop
sbb
cmps
out
out
lahf
outs
jmp
retf
pushf
(bad)
lods
out
icebp
sbb
pop
fdiv
inc
cmp
sbb
inc
jmp
push
xor
fcom
or
or
cs
and
adc
clc
aad
mov
mov
xchg
lods
inc
je
mov
daa
in
dec
pop
call
cmps
jae
inc
push
fistp
retf
loope
jns
and
inc
add
retf
jae
bound
out
test
mov
inc
mov
push
jmp
sti
or
and
adc
movs
pop
movs
lahf
mov
pop
mov
mov
inc
ret
inc
stos
xchg
(bad)
cdq
and
fisub
mov
icebp
mov
pop
sahf
bsf
stc
mov
sbb
test
scas
add
bound
stos
iret
out
cmp
sub
pusha
dec
push
je
inc
cmp
inc
sub
and
jb
xchg
(bad)
pop
rcl
push
stc
loope
xchg
xor
(bad)
daa
into
pop
push
pop
int
daa
enter
das
rol
and
jle
out
fwait
sub
je
jg
push
fcomip
adc
inc
push
imul
into
jg
shl
mov
dec
or
test
or
out
mov
xor
pop
fidiv
sbb
sub
pop
add
push
pop
fistp
fiadd
jne
cwde
je
mov
add
lods
test
adc
psubq
or
sbb
les
push
pop
push
xor
daa
adc
push
icebp
jae
xchg
imul
jg
fwait
mov
hlt
push
lods
pop
dec
fcom
imul
inc
jae
lahf
or
sub
pop
bound
into
cmc
add
jecxz
test
imul
jmp
push
addr16
inc
add
mov
adc
fidiv
xchg
adc
dec
mov
nop
jecxz
mov
xor
sub
out
dec
xchg
js
in
aam
jb
pop
sti
cli
nop
(bad)
rcl
sbb
(bad)
fidivr
stos
xor
jb
(bad)
shr
jne
mov
lods
sbb
popa
mov
int
fcomp
shl
mov
inc
or
add
push
jae
pop
sub
inc
and
dec
clc
mov
test
add
sbb
push
iret
jge
add
or
mov
addr16
sbb
inc
sub
sbb
inc
retf
cmps
cmps
jl
sub
inc
sbb
nop
mov
lds
mov
add
cmp
pop
cmp
pop
mov
hlt
nop
inc
dec
fdivr
popf
mul
call
hlt
xor
mov
loopne
inc
or
popf
push
inc
jle
dec
cmps
mov
repz
sbb
and
stos
jae
mov
add
push
dec
pop
cmp
xor
pop
imul
inc
clc
je
dec
xor
add
int3
mov
pop
mov
jmp
je
cli
sbb
popf
xor
xchg
xor
push
or
jmp
sbb
retf
and
xor
call
dec
in
push
sub
inc
or
cmc
dec
jg
ins
xchg
add
call
jmp
in
add
add
(bad)
adc
lock
jnp
repnz
sub
add
in
in
arpl
stos
cmc
inc
call
xchg
adc
movs
ss
and
ins
int
iret
add
mov
popf
addr16
adc
sub
sbb
cmp
es
pop
and
push
add
push
and
jne
xchg
xor
mov
ins
inc
sub
pop
jg
adc
test
cdq
jecxz
(bad)
sti
mov
mov
mov
dec
imul
cli
xchg
in
xor
mov
sbb
in
test
sub
mov
fisttp
xchg
pusha
sbb
or
je
mov
inc
dec
jg
fdiv
es
lahf
test
mov
inc
jle
lods
in
sbb
xor
xor
test
xchg
sub
cdq
pusha
inc
and
pop
inc
ret
(bad)
cdq
call
addr16
mov
sbb
rol
xchg
test
in
leave
mov
mov
dec
or
in
scas
push
push
fnstcw
ret
inc
jecxz
mov
jge
sbb
sti
fucom
xchg
(bad)
ffree
mov
adc
cmp
sbb
jmp
cmp
mov
(bad)
xor
xor
lock
push
pop
dec
or
jnp
or
out
imul
adc
and
lods
sub
aam
cs
add
(bad)
ficom
icebp
leave
and
sub
push
and
mov
cwde
(bad)
repz
mov
fsubrp
mov
fmul
cmp
je
js
leave
mov
and
lods
xchg
ror
push
jae
mov
mov
inc
dec
push
hlt
ins
dec
add
leave
push
pusha
sub
jge
aaa
xchg
cmps
sub
lods
sub
pop
adc
mov
ins
outs
cmp
mov
aad
xchg
push
and
cmps
mov
sub
stc
pop
enter
xor
mov
icebp
push
adc
out
inc
inc
mov
sub
xor
rcr
xchg
dec
movs
inc
or
fstp
(bad)
and
push
retf
dec
jae
(bad)
xor
sub
or
jno
inc
fiadd
fwait
outs
(bad)
mov
mov
xchg
xlat
mov
xor
das
xor
mov
arpl
rol
(bad)
iret
or
iret
sbb
ins
ins
sbb
push
jbe
hlt
(bad)
idiv
popa
aas
aaa
in
cli
push
mov
dec
mov
ds
push
sub
mov
cmps
clc
dec
push
xor
cmp
jl
jl
jmp
pop
out
arpl
pop
jmp
inc
dec
je
xor
jl
les
fst
aas
add
fstp
xchg
push
xor
out
mov
adc
(bad)
xchg
xchg
arpl
outs
(bad)
daa
jo
push
std
scas
mov
in
sbb
fstp
push
jp
in
xor
xor
pop
mov
repz
in
fldenv
xor
push
dec
movs
push
xor
dec
out
add
sbb
sub
jae
pop
mov
cmp
test
adc
das
jmp
mov
push
test
jp
fs
inc
jbe
in
and
mov
push
inc
aas
nop
loopne
mov
test
jmp
mov
arpl
(bad)
jmp
(bad)
popf
iret
inc
cld
pushf
mov
cmp
(bad)
rcl
mov
pop
cdq
dec
scas
inc
cmps
(bad)
cli
(bad)
repnz
mov
maxps
cmp
scas
cmc
cmp
dec
add
lods
cld
test
je
stos
mov
pop
cmps
pop
and
(bad)
(bad)
or
lock
xor
je
or
popa
dec
enter
inc
pop
ss
xlat
ins
xchg
(bad)
int3
mov
pop
rcl
fild
arpl
rcr
xchg
dec
cld
ds
cmp
pushf
rcl
inc
push
add
jmp
mov
cmc
adc
sub
les
mov
inc
lea
pop
push
add
lods
adc
sub
add
adc
shr
ret
sub
mov
je
mov
inc
daa
or
cmps
or
push
out
jne
dec
ja
jno
in
dec
loop
cmps
pop
dec
cwde
xchg
in
xchg
out
fs
jecxz
mov
iret
std
jo
sbb
jns
fs
mov
inc
and
push
inc
adc
mov
sub
mov
stc
retf
pop
into
jmp
call
fsub
mov
mov
and
sbb
jno
dec
cld
in
retf
push
(bad)
mov
stc
std
ror
dec
movs
mov
jnp
aaa
pop
xor
scas
loope
out
jl
call
adc
cmp
addr16
fwait
xchg
sti
fnstsw
int3
mov
fcom
lock
cld
cdq
xor
mov
dec
mov
mov
push
sahf
adc
lock
test
dec
and
sar
out
sbb
pop
jg
test
jp
mov
dec
mov
cld
sub
out
xchg
mov
jnp
sbb
xchg
(bad)
mov
cs
cmc
pop
sti
xlat
fdiv
aam
pop
cmp
jge
push
pand
ret
inc
push
into
mov
test
rcr
ret
add
mov
ficom
ror
pop
inc
std
movs
xchg
mov
(bad)
in
add
sbb
imul
mov
stos
rcr
(bad)
iret
sub
imul
push
sub
mov
xchg
imul
xor
fisub
int3
stc
mov
ficom
sbb
dec
pop
imul
xchg
iret
fld
leavew
ins
mov
adc
cmc
int3
sbb
stos
in
cmp
and
arpl
imul
push
mov
mov
sbb
sub
pop
adc
pop
call
out
add
dec
leave
mov
sbb
outs
mov
(bad)
jecxz
xor
gs
and
jmp
push
shr
dec
add
aam
mov
daa
into
into
cmp
dec
loope
lods
sahf
pop
les
popf
shl
test
(bad)
mov
int3
dec
sahf
mov
dec
dec
sub
aaa
mov
jp
rcr
aas
xchg
mov
in
xchg
retf
scas
jge
ins
xor
xchg
cmc
push
les
mov
sub
icebp
je
stc
iret
sbb
push
mov
out
mov
mov
inc
cwde
call
cs
ins
or
shl
mov
mov
ins
push
mov
sub
mov
or
jno
cld
fidiv
mov
(bad)
cmp
push
or
lods
leave
loopne
xchg
ins
and
iret
xlat
jl
das
aas
fiadd
fwait
stc
adc
ins
fld
lea
and
mov
popa
mov
lods
dec
sti
clc
sub
xchg
stc
int
pop
push
mov
in
aas
int
je
aas
mov
jg
fst
mov
imul
sahf
hlt
fwait
movs
and
or
nop
sbb
test
enter
lahf
arpl
mov
mov
fwait
mov
sub
sbb
and
out
clc
cmp
retf
jmp
pop
call
test
adc
or
sub
addr16
sub
add
or
dec
add
jp
cmp
dec
movs
xchg
or
add
xchg
adc
xchg
xchg
(bad)
cdq
mov
pusha
xor
push
aad
test
ds
inc
jmp
lea
hlt
jg
stos
jbe
pop
sub
cmc
add
xor
ror
loope
and
aas
xor
inc
inc
sub
pop
jmp
xor
(bad)
imul
sub
fs
lea
fcmovne
xor
sahf
ds
hlt
jle
(bad)
sbb
aam
jp
outs
cmp
movs
push
pusha
jne
test
shr
dec
rcl
mov
mov
(bad)
icebp
(bad)
(bad)
fdiv
xchg
cmp
dec
dec
xchg
sub
mov
mov
jg
mov
dec
cmps
mov
jb
daa
cmc
mov
and
mov
jle
js
mov
(bad)
pushf
in
out
push
aam
mov
adc
mov
retf
hlt
lods
push
(bad)
pusha
pop
fiadd
xor
out
jo
cvtps2pd
sub
repz
cs
or
xor
in
jmp
xchg
fmul
jg
mov
jle
mov
xor
jecxz
outs
add
repnz
pop
sbb
pop
lds
scas
popa
jns
(bad)
ins
lods
add
pop
mov
xchg
xor
div
jo
inc
mov
dec
dec
push
mov
jp
pop
jmp
add
ins
mov
adc
add
sti
loope
mov
dec
jne
or
cmps
xlat
mov
and
das
xchg
mov
adc
sbb
push
add
ins
cmp
jae
iret
or
or
shl
imul
and
sbb
add
push
leave
cli
dec
sub
sub
retf
loopne
or
dec
(bad)
jo
lock
inc
sar
rol
push
ins
or
in
jge
adc
pop
scas
nop
mov
outs
inc
hlt
ror
pop
xchg
ins
or
adc
jae
xchg
inc
jne
icebp
ds
int3
cmc
cld
xor
or
xor
push
sub
mov
aas
inc
and
push
and
add
cmp
int3
icebp
mov
leave
xchg
push
or
mov
adc
lea
fsub
in
test
xchg
test
inc
cmp
xchg
jmp
nop
mov
movs
xchg
cmps
push
pop
push
in
dec
retf
aaa
(bad)
add
mul
scas
xchg
sbb
adc
in
test
out
mov
sub
jg
arpl
daa
sbb
jnp
mov
xor
cli
seto
cdq
mov
sbb
repz
push
stc
sub
dec
adc
into
pop
stc
int
loope
out
xor
push
mov
inc
into
jle
dec
pop
mov
aas
adc
push
std
jbe
in
lods
js
sub
(bad)
out
pop
mov
ins
push
add
cli
ss
push
fnstenv
dec
rcr
sub
push
out
iret
cmps
or
jae
cmp
int
sbb
add
leave
fistp
popa
mov
mov
push
nop
ins
cmps
in
call
jl
jge
inc
repz
je
fadd
idiv
xor
fadd
popf
mov
cwde
xor
mov
mov
push
push
int
xor
and
sbb
(bad)
dec
or
jecxz
icebp
inc
dec
cmp
ss
or
ins
or
jg
cli
rol
les
or
jl
out
jo
or
test
pushf
js
sbb
mov
push
cmps
sub
fdivr
sti
lea
out
pop
in
js
in
popf
ins
dec
adc
ret
add
(bad)
dec
or
xchg
das
mov
sbb
pop
mov
les
xor
adc
sbb
sbb
sbb
in
dec
shr
dec
ins
add
dec
pusha
jns
pushf
mov
or
aas
pop
ret
push
push
jne
push
cmp
ret
ins
test
in
sub
lods
gs
push
popf
pop
fadd
popf
or
cmps
mov
hlt
out
into
jno
or
cld
add
cld
fbstp
pop
jge
pop
out
(bad)
adc
jp
jnp
push
mov
pop
mov
movs
sbb
push
xchg
test
test
fimul
xchg
scas
ins
scas
cs
mov
mov
pop
aas
hlt
out
xor
ja
and
xchg
not
ins
add
mov
(bad)
jmp
cmp
add
outs
push
(bad)
push
inc
mov
push
mov
cld
dec
pop
popf
ret
popf
fdivp
xchg
jnp
sub
sbb
sar
sub
sar
aam
add
mov
xor
test
shr
add
xor
je
cmps
mov
out
push
push
cdq
stos
sub
mov
js
les
sub
test
test
stos
popa
shr
aas
cmp
mov
pop
jle
mov
jns
ins
xchg
cld
ins
inc
cld
sub
jecxz
jns
(bad)
(bad)
cld
in
mov
push
mov
xor
sbb
pxor
mov
mov
stos
add
add
lock
popf
stos
dec
add
movs
(bad)
addr16
inc
jbe
outs
outs
scas
jecxz
push
ret
iret
(bad)
mov
mov
mov
mov
push
jl
(bad)
retf
jg
sbb
retf
call
scas
loop
stc
mov
fcomi
cdq
(bad)
push
mov
pop
repz
xchg
es
cmp
and
movs
xchg
addr16
pop
jae
pop
jae
je
sub
call
(bad)
xor
enter
push
adc
outs
sbb
jge
jnp
outs
out
or
mov
add
leave
xlat
lds
jl
lahf
ror
fsub
lea
mov
fdiv
es
mov
mov
into
mov
xchg
test
je
out
jno
add
fs
or
inc
cli
mov
inc
xchg
sbb
inc
retf
xchg
mov
jne
jecxz
adc
push
jg
pop
mov
cmp
int
stc
mov
dec
dec
mov
and
imul
adc
cwde
repnz
sub
mov
loop
add
mov
cli
aam
cs
inc
adc
es
dec
jb
fiadd
sbb
test
xchg
lods
clc
movs
mov
mov
xchg
push
in
out
mov
sbb
call
ja
push
ror
dec
js
pusha
aas
jmp
mov
icebp
mov
mov
scas
inc
mov
jl
mov
(bad)
adc
scas
out
xor
mov
dec
mov
pop
ret
push
lea
inc
js
adc
lods
sbb
cdq
sti
out
movs
out
(bad)
pushf
mov
movs
outs
cmc
cdq
xchg
outs
scas
jb
(bad)
push
sub
sbb
dec
sbb
jle
(bad)
jge
fst
fwait
test
lods
adc
jno
jne
std
lods
fild
stc
mov
mov
fmul
test
cli
repz
push
mov
or
push
cmps
add
aad
and
pop
cwde
out
push
adc
(bad)
neg
inc
mov
mov
nop
add
sbb
repz
(bad)
cdq
jg
dec
add
test
ds
inc
push
ins
sub
cmp
bound
sbb
dec
pop
loope
xchg
mov
xlat
dec
mov
pop
shr
sub
mov
xor
addr16
push
mov
sub
or
retf
fldcw
pop
lock
mov
popa
xchg
xchg
scas
addr16
and
sub
mov
mov
ins
inc
popf
jecxz
sbb
idiv
or
fcomp
pop
or
sbb
xor
call
xchg
das
lods
scas
or
daa
daa
fiadd
mov
xor
in
nop
dec
cli
mov
sbb
dec
mov
fucomi
out
movs
mul
repnz
repnz
mov
lods
mov
mov
sub
lock
and
sbb
pusha
mov
loop
sub
aad
push
push
outs
or
add
dec
add
imul
add
popf
call
bound
adc
ret
mov
in
cmc
jp
sti
xlat
pop
push
mov
sub
sbb
loop
mov
dec
or
or
rcl
mov
xchg
dec
push
lahf
add
xchg
icebp
stos
xlat
or
(bad)
int
jo
cwde
nop
jge
mov
repnz
test
int3
retf
cld
add
cvtps2pi
sbb
xor
sub
push
es
in
aam
push
imul
adc
call
and
lods
cmp
xor
jo
loopne
xchg
mov
dec
pop
lea
jno
mov
mov
or
out
(bad)
out
sti
retf
stc
cmp
call
fsubr
aaa
call
(bad)
adc
outs
(bad)
jmp
xor
mov
push
adc
push
ds
sar
sub
popa
mov
hlt
or
ds
dec
jae
outs
dec
cmp
aas
js
dec
xor
cmp
ja
out
cli
xor
cmc
out
sub
cmp
sbb
inc
sub
add
jae
jp
lahf
mov
popf
dec
in
cmps
into
shr
or
imul
xor
cmp
xor
mov
sub
dec
adc
or
mov
jae
xor
fcomp
and
xchg
mov
pop
push
loop
ins
ret
cmc
fld
dec
les
cmp
bound
or
jecxz
sbb
pop
mov
mov
pop
out
xchg
sub
and
scas
mov
or
mov
and
pop
and
(bad)
sbb
aam
ror
aas
sti
xchg
scas
sub
cmp
mov
test
call
imul
out
or
daa
iret
aad
hlt
iret
test
ds
dec
mov
sub
imul
mov
nop
retf
dec
or
inc
ror
jne
add
int
arpl
sbb
movs
aad
retf
out
push
fisub
inc
cmps
xor
sbb
adc
dec
lock
test
iret
popa
jp
cwde
clc
pop
ret
jp
jmp
xchg
stos
sahf
scas
test
in
pop
xor
icebp
mov
mov
sbb
retf
loope
je
jl
fbld
add
pop
mov
or
or
rcl
repz
jnp
and
mov
push
iret
in
adc
daa
cmps
jecxz
sub
popf
dec
push
and
std
mov
psubd
into
xor
cmp
mov
jmp
hlt
sub
add
sbb
rcl
mov
loopne
add
jae
mov
hlt
hlt
out
mov
jo
xchg
lods
xchg
mov
xlat
adc
mov
pop
xchg
sub
xchg
push
out
and
mov
popf
adc
sar
cmp
sub
pop
lds
clc
jo
jmp
inc
imul
mov
or
int3
(bad)
push
jnp
bound
adc
mov
pop
sub
mov
je
iret
mov
xchg
pop
cmc
hlt
jnp
in
ss
mov
or
add
mov
cmp
test
pop
add
xor
xchg
pop
cdq
jmp
sysexit
repnz
xor
mov
or
xchg
enter
sub
out
xor
(bad)
mov
sub
fwait
mov
fbstp
mov
xchg
call
adc
jecxz
imul
mov
cmc
lods
std
sub
test
jg
adc
dec
out
test
xor
cmps
je
and
movs
pop
mov
dec
in
leave
sahf
out
fld
push
sbb
(bad)
test
dec
sbb
inc
adc
ins
inc
mov
mov
cmc
mov
in
add
out
mov
lods
mov
sbb
std
mov
or
aaa
ror
and
xchg
stc
(bad)
repnz
aad
ins
jnp
rcl
call
daa
fild
out
cmp
sbb
stos
cdq
sbb
pop
out
(bad)
pop
mov
(bad)
out
jmp
or
out
vpsubusb
(bad)
cmp
aad
out
inc
cwde
test
xchg
push
mov
call
cs
jle
jno
test
rcr
dec
cmps
sbb
and
stos
sbb
inc
pop
enter
mov
bound
and
rcr
jp
repnz
call
jb
mov
cmp
fmul
xchg
repnz
jbe
push
add
jle
mov
das
adc
movs
test
dec
jp
ja
aaa
xchg
loopne
and
gs
das
inc
sahf
enter
inc
xor
retf
pop
ss
xor
dec
nop
fcomip
dec
mov
mov
cli
xor
jne
jecxz
(bad)
es
adc
aad
mov
or
out
sahf
int3
mov
sub
lock
and
inc
shl
jecxz
mov
adc
mov
mov
pop
retf
ins
cdq
stos
inc
int3
into
fwait
push
rcl
js
icebp
jle
mov
loope
scas
mov
jbe
mov
fnstcw
dec
arpl
add
out
iret
mov
test
dec
mov
mov
jecxz
xor
sar
push
sbb
jecxz
retf
mov
ins
in
pop
(bad)
sahf
ret
xchg
and
mov
jbe
push
jmp
and
xchg
push
fist
sar
retf
inc
fsub
add
and
shr
scas
popa
mov
loop
popa
ds
ja
out
xor
call
cdq
cmp
lods
(bad)
pop
fcomip
mov
in
dec
xchg
pop
xor
dec
int3
daa
enter
mov
and
scas
in
or
inc
or
mov
mov
and
inc
aam
mov
jg
bnd
jo
pop
xchg
aas
push
sub
sub
test
aam
mov
pop
push
inc
mov
mov
cwde
sbb
add
fwait
(bad)
mov
sub
std
outs
pop
pop
xor
call
hlt
adc
inc
adc
dec
push
movs
jge
xchg
jge
ror
repz
in
pop
mov
imul
dec
adc
repz
pop
pop
mov
scas
sub
enter
repz
cmp
ins
pop
sbb
popf
and
dec
dec
stc
sbb
repnz
sub
mov
push
xchg
dec
loop
ja
div
test
inc
mov
daa
retf
or
iret
or
pop
inc
sahf
add
(bad)
fist
push
cmp
dec
pop
push
fnstcw
inc
cmps
xor
add
aaa
repnz
dec
daa
pause
adc
aas
cmp
iret
daa
jmp
rcr
adc
js
jnp
ret
je
xor
xor
js
push
jge
dec
inc
and
popa
shr
push
es
in
ror
xlat
iret
fdiv
arpl
push
cmp
pop
mov
repz
and
mov
(bad)
movs
and
jmp
cmps
mov
ins
mov
ds
jns
addr16
dec
shl
cmc
dec
bound
add
pusha
mov
aas
lahf
and
pusha
addr16
retf
fs
fistp
imul
add
pop
add
xchg
stos
out
(bad)
jno
pusha
movs
fsub
inc
test
mov
jns
gs
pop
sbb
dec
xchg
mov
pop
lds
push
inc
sub
jae
push
inc
(bad)
iret
xchg
jmp
ja
push
dec
cmp
sub
jbe
test
fsubr
sti
adc
adc
imul
sbb
popw
push
pop
pusha
xor
ins
pop
xor
aas
sub
mov
clc
fimul
mov
cld
inc
aas
mov
pop
xor
cmp
sbb
add
mov
dec
mov
lods
or
ror
test
sub
or
and
or
and
movs
loop
mov
or
push
int
inc
scas
or
ins
pop
popa
sbb
ret
test
(bad)
out
push
es
push
fistp
(bad)
into
(bad)
push
sub
out
outs
mov
mov
arpl
in
adc
test
add
sbb
inc
or
(bad)
imul
push
mov
jg
mov
pusha
inc
cli
or
ins
cwde
or
sbb
scas
div
xor
pop
aam
jnp
add
sti
(bad)
jae
jp
add
stc
mov
push
ss
inc
out
push
sub
in
mov
add
cmp
pop
pop
sub
das
cmp
push
jl
int3
jl
xchg
movs
sub
scas
or
add
inc
push
mov
cmp
mov
pop
adc
cdq
test
cs
dec
pop
xor
or
lods
adc
jge
or
jmp
test
push
adc
add
adc
(bad)
xor
lock
inc
in
xchg
outs
mov
xchg
enter
mov
adc
sahf
xor
mov
push
gs
mov
mov
fist
pop
lahf
cli
imul
scas
sub
scas
jnp
and
xchg
daa
and
mov
and
cdq
xor
scas
dec
icebp
(bad)
fcom
clc
aaa
nop
das
es
and
(bad)
(bad)
jmp
fldcw
pop
jo
outs
movs
loope
pop
stos
jmp
int3
dec
push
jno
in
pop
aad
sahf
sub
or
(bad)
dec
sti
je
mov
into
inc
or
sub
(bad)
sbb
std
xlat
scas
fidivr
test
cmp
mov
pop
pop
xor
mov
repnz
test
mov
jb
into
cmp
sub
adc
int3
mov
sbb
add
push
pop
mov
and
mov
ret
cwde
sub
dec
inc
test
dec
cmps
xchg
sbb
fmul
ja
xor
xor
das
icebp
scas
in
or
push
addr16
sbb
call
shl
dec
jno
xchg
mul
cmp
jno
stos
fiadd
push
sbb
leave
pop
sub
(bad)
lahf
jl
mov
js
mov
or
call
adc
cmp
test
out
mov
mov
mov
push
rol
cwde
cmp
push
xchg
or
sub
cmps
adc
or
inc
call
and
sub
sbb
push
push
push
dec
mov
sub
(bad)
xlat
sbb
or
cld
cmp
add
dec
mov
cmp
not
adc
lock
pop
lods
enter
jbe
movs
jae
loop
or
sbb
or
mov
and
mov
dec
ds
out
sbb
add
outs
inc
sub
adc
repnz
jb
dec
adc
inc
jo
cli
pop
adc
(bad)
fnstenv
or
xchg
iret
sar
outs
test
test
repz
push
jae
outs
adc
sbb
nop
es
jp
les
(bad)
cld
or
arpl
jmp
jae
or
mov
cmc
mov
pop
xchg
pop
xor
clc
out
mov
pop
and
daa
dec
jecxz
mov
mov
fwait
jmp
push
add
cmp
push
imul
not
sub
xor
adc
mov
sbb
sbb
pusha
or
push
pop
sbb
cld
movs
push
lea
adc
mov
xor
mov
repz
jnp
iret
cmps
fmulp
pop
add
xchg
mov
in
out
pop
mov
inc
ss
out
push
pop
cmp
xchg
bound
stc
sbb
popa
je
push
xor
scas
sub
das
jno
xchg
cwde
inc
test
cmp
pop
arpl
dec
cmp
jno
test
mov
jmp
lock
pop
inc
jne
pop
push
mov
repz
(bad)
dec
loop
pop
mov
cli
adc
out
xchg
cld
push
inc
sti
inc
cmp
in
xchg
sar
pop
lds
xor
sub
(bad)
std
stos
ror
pop
xchg
int3
sbb
int3
(bad)
jp
fwait
jp
test
jp
cmp
(bad)
sub
and
fnop
inc
xchg
cli
pusha
push
pop
das
mov
call
pushf
sub
sub
cmp
ss
pop
imul
jle
and
pop
add
sub
daa
xor
fcmovnu
leave
repnz
icebp
push
(bad)
paddsb
push
jno
cli
mov
fsubr
out
mov
sahf
daa
call
jle
jle
mov
inc
imul
mov
xchg
dec
das
lea
sub
mov
stos
push
ror
retf
imul
(bad)
xchg
push
fld
in
arpl
fld
add
jmp
movs
lea
push
fmul
sub
jle
add
xchg
sbb
repnz
xchg
jnp
mov
and
and
push
and
mov
shr
mov
(bad)
fimul
(bad)
fsubr
dec
jp
pop
repnz
jnp
repz
test
fidiv
or
not
cmp
sar
mov
and
mov
xchg
pop
dec
lock
ret
repnz
push
popf
mov
nop
gs
cmps
sbb
dec
rcr
pushf
call
adc
sbb
mov
mov
cdq
imul
lea
(bad)
jns
mov
sti
jnp
aad
xchg
mov
mov
push
xchg
iret
pop
inc
mov
movs
jae
inc
jo
idiv
xchg
aad
xchg
fcmovne
icebp
(bad)
mov
pop
stos
push
mov
mov
call
out
lods
jno
inc
retf
jbe
mov
ins
into
and
jecxz
push
inc
adc
pop
call
fiadd
ins
push
pop
xlat
jmp
sbb
cmps
mov
sbb
xchg
lahf
repnz
cli
cmps
cmp
loopne
popa
xchg
into
push
mov
es
adc
push
and
xchg
inc
push
add
adc
adc
loopne
sub
cli
ret
cmp
lock
push
adc
xchg
jbe
sub
inc
shl
pop
push
add
retf
sbb
mov
cmp
into
cmp
sub
mov
inc
add
das
retf
call
ror
push
pop
push
hlt
adc
jmp
mov
ret
push
dec
nop
pop
mov
push
pop
les
retf
add
sbb
cld
loopne
rcl
ins
fsubr
pushf
dec
lahf
out
jle
xchg
popa
and
hlt
adc
inc
jmp
or
push
fidivr
fbstp
mov
std
and
js
mov
pop
fmul
retf
push
and
cmp
rol
jbe
mov
adc
imul
sahf
lea
adc
pop
mov
cmp
xchg
repnz
in
aad
cmp
(bad)
jmp
daa
imul
repnz
mov
cli
mov
pop
neg
and
sbb
sar
inc
fsubr
jae
pop
push
add
cmp
invd
out
icebp
cmps
popa
out
jnp
sub
xor
xchg
test
cdq
js
jp
push
in
sbb
jo
add
popa
call
mov
cdq
sbb
(bad)
xchg
out
mov
add
pop
es
xor
pop
sbb
or
jge
das
shl
push
add
shr
rcr
push
or
xchg
fistp
push
inc
add
inc
jnp
test
out
mov
inc
mov
or
sbb
and
cmp
mov
sbb
ds
(bad)
(bad)
cdq
pop
scas
sub
xor
popa
shr
jp
jns
in
mov
add
push
cli
aam
adc
inc
jmp
leave
loopne
mov
jl
mov
inc
jge
mov
push
into
int
adc
call
xor
push
lahf
adc
mov
aad
mov
adc
into
or
sub
sub
jns
xor
(bad)
xor
sub
cmps
adc
ret
xlat
lods
and
daa
inc
jmp
cmp
test
dec
mov
add
cmp
(bad)
inc
cld
imul
jbe
inc
mov
and
mov
repz
dec
cmp
add
push
scas
cmp
and
jns
or
mov
pusha
mul
out
inc
mov
ficom
xlat
xor
xchg
and
sub
adc
ficomp
xor
adc
xlat
(bad)
loopne
fistp
iret
call
loop
loope
sub
popf
into
clc
mov
sbb
cmp
inc
inc
rol
pop
in
bound
dec
sahf
aaa
fisub
mov
jb
pushf
pop
inc
mov
fcom
xchg
or
adc
xchg
mov
xor
rcr
jmp
and
arpl
mov
daa
(bad)
cmp
pusha
not
movs
jle
pop
mov
adc
in
or
mov
in
push
xlat
sbb
hlt
cli
xchg
ror
add
push
int3
fs
push
fs
hlt
iret
dec
paddd
int3
sti
out
(bad)
mov
inc
call
xor
jg
pop
adc
into
ret
lds
pop
inc
mov
enter
sub
mov
jae
cmp
cmps
sub
rcr
cmp
jmp
pop
das
sub
gs
mov
ret
inc
imul
loopne
vpshufhw
out
cmp
repz
push
xor
xor
jecxz
sub
or
enter
adc
jb
adc
xor
fcom
dec
xor
(bad)
jle
push
and
fimul
push
sar
test
inc
or
loope
nop
adc
out
xlat
ss
stc
icebp
add
cmp
or
(bad)
dec
sub
push
dec
jmp
inc
pushf
push
mov
mov
jo
js
in
xor
sahf
data16
jb
xchg
dec
sub
punpckhdq
into
sub
bound
clc
jo
lds
and
and
xor
(bad)
cli
loop
mov
int
fisttp
jb
mov
mov
and
cli
mov
jno
test
test
aad
sbb
popf
and
push
sub
outs
xchg
push
dec
je
xchg
inc
adc
fsubr
inc
dec
or
add
int
push
mov
cwde
mov
push
das
pop
(bad)
imul
ins
or
test
cmp
test
jb
in
mov
dec
mov
jbe
inc
fadd
push
cmc
(bad)
pop
pop
and
mov
inc
call
das
dec
dec
test
add
or
rcr
int
cmp
inc
out
bound
out
shl
ds
dec
leave
add
jae
mov
mov
mov
mov
cmp
dec
xor
xchg
les
cs
sahf
sub
or
ror
es
jmp
daa
mov
pop
pop
push
call
mov
xchg
push
stos
jmp
and
inc
mov
bound
mov
cmp
mov
mov
mov
cdq
dec
inc
int
pop
jno
mov
pop
mul
xchg
mov
or
push
xchg
fmulp
or
clc
cmp
jnp
or
dec
imul
xor
sbb
scas
push
in
fnstsw
imul
scas
aam
sbb
mov
test
clc
or
shr
inc
sub
ret
xor
xor
mov
jbe
jns
xchg
sbb
or
aam
push
addr16
sub
dec
dec
dec
repz
in
xor
jae
punpckhwd
sbb
add
sub
xor
sbb
and
shl
cmp
mov
clc
cmp
in
push
or
or
pop
jo
or
leave
cmp
retf
int3
xor
cmp
dec
jmp
mov
mov
dec
mov
les
es
mov
popf
lock
leave
mov
cmp
xor
outs
test
gs
push
jecxz
add
inc
inc
(bad)
sbb
dec
pop
repz
mov
sbb
ss
out
test
hlt
lahf
dec
ins
out
xchg
mov
mov
sub
sub
outs
loopne
jge
adc
ja
push
jp
push
(bad)
xchg
imul
call
das
adc
sbb
lods
sbb
xor
pop
adc
push
std
mov
pop
inc
mov
pop
inc
sar
lods
xchg
jbe
and
sbb
in
jp
mov
xchg
xchg
aad
test
aad
and
push
dec
mov
sbb
xchg
sahf
mov
mov
sub
xchg
hlt
dec
in
mov
add
xchg
cmp
fsub
and
das
or
sbb
mov
scas
arpl
xchg
(bad)
jnp
inc
xchg
outs
add
ficom
push
addr16
(bad)
shl
push
mov
jmp
inc
and
in
jne
sti
mov
push
cmp
je
lahf
pop
fcomp
fwait
data16
pop
xlat
ret
ficom
enter
out
sub
cmp
cmc
cdq
inc
jge
jmp
push
cli
push
and
scas
int
add
and
fidivr
out
mov
data16
jns
mov
xor
dec
paddsb
jmp
mov
lds
icebp
inc
pop
pop
cs
cmps
mov
pop
mov
out
dec
push
loope
(bad)
les
xchg
mov
and
dec
pop
push
adc
jb
jge
retf
scas
mov
inc
(bad)
and
xchg
cwde
fimul
leave
test
dec
add
jo
mov
and
mov
cmp
int
(bad)
rol
push
addr16
enter
dec
lds
adc
and
pop
fsub
fcom
cmp
jbe
cmp
js
inc
aas
push
push
xchg
sbb
xchg
enter
imul
mov
xchg
add
inc
add
mov
ss
mov
xor
xchg
call
push
push
xchg
fisttp
fst
fbstp
div
dec
add
push
mov
aaa
arpl
and
arpl
aas
or
test
sub
inc
scas
std
add
imul
arpl
movs
es
mov
mov
jl
mov
sbb
repnz
and
pop
(bad)
mov
cli
outs
(bad)
cmp
scas
gs
dec
jnp
int3
push
mov
(bad)
sub
add
(bad)
out
fdivr
push
arpl
xchg
data16
pop
sub
lods
cmp
hlt
jmp
xlat
mov
jnp
aas
jbe
jne
mov
mov
push
shr
scas
jb
pushf
adc
xchg
call
(bad)
mov
sub
clc
popa
adc
sbb
fisttp
movs
or
jg
lahf
mov
loopne
cld
mov
xlat
fistp
sbb
in
in
cmp
fist
mov
jne
dec
addr16
pop
inc
fcmove
xor
add
jo
cmp
leave
adc
std
cs
xlat
in
ins
mov
icebp
push
imul
add
shr
dec
or
dec
ds
pop
(bad)
dec
jmp
cmp
scas
xchg
xchg
and
sar
nop
(bad)
mov
mov
jo
mov
sbb
dec
lock
jle
cdq
dec
mov
imul
sub
jno
(bad)
and
cmp
cmp
cmp
adc
mov
adc
clc
lds
sbb
push
add
(bad)
shl
push
lods
jl
xchg
sbb
xchg
mov
add
push
repz
bnd
movs
cmp
mov
sub
cwde
pusha
xor
jge
push
pop
push
lock
jb
cdq
icebp
jnp
cld
mov
popf
push
test
cmps
aam
mov
test
pop
push
rol
jb
inc
sbb
cmc
fmul
sub
adc
xchg
in
add
xchg
sbb
fst
ds
ds
pop
mov
mov
addr16
(bad)
sbb
add
mov
das
sub
cmp
in
in
ins
sbb
xchg
sbb
xchg
xchg
mov
fcomip
rol
movs
outs
lods
xlat
adc
cmp
mov
out
int3
ins
dec
repnz
jmp
mov
dec
mov
cmp
gs
call
pop
jnp
xchg
ror
neg
lods
add
cmp
adc
ds
enter
jnp
sbb
fcmovu
lahf
jecxz
fs
push
adc
or
movs
pop
sbb
clc
mov
jbe
in
push
jb
xlat
pushf
jecxz
data16
sbb
push
loop
pop
pop
pop
add
or
out
imul
(bad)
adc
mov
mov
test
mov
lock
outs
add
fcom
(bad)
add
mov
sbb
inc
arpl
push
movs
call
sti
xchg
push
fs
hlt
rol
iret
cmp
in
lods
xor
fwait
aad
jbe
das
pop
cmp
rcl
xchg
pusha
loopne
cmp
lahf
je
lods
mov
imul
out
xchg
js
(bad)
stc
pop
push
test
int3
out
mov
xchg
out
(bad)
xchg
and
add
sahf
into
retf
retf
inc
stos
dec
mov
dec
xchg
mov
leave
mov
mov
in
je
test
cmp
cmc
xor
sub
scas
push
call
xlat
push
out
int
dec
inc
pop
add
lods
mov
fwait
or
jnp
mov
fisubr
rcl
pop
sbb
das
call
adc
sub
adc
lods
pop
sub
sbb
ret
mov
sub
mov
(bad)
js
repnz
fild
mov
(bad)
cmc
sbb
or
dec
icebp
lods
jae
ja
add
sahf
jb
fnsave
mov
ror
(bad)
fimul
inc
pop
mov
and
cmps
ficomp
jg
cwde
int
xchg
sbb
je
ret
out
ja
imul
xchg
push
mov
xor
jle
icebp
es
cmp
daa
inc
mov
pop
ja
dec
lods
pop
das
and
stos
int
out
pushf
add
aas
sub
loope
jl
scas
gs
test
nop
imul
fst
sub
shr
push
push
pop
inc
adc
pop
call
fisub
cmps
inc
js
sbb
inc
in
ds
movs
cmp
push
(bad)
out
sbb
int3
mov
out
popa
clc
and
fimul
in
(bad)
xor
xor
aaa
out
sbb
mov
test
or
ret
push
sub
jmp
pop
out
pop
in
dec
daa
ss
mov
call
pop
loop
xchg
repnz
std
jo
mov
add
mov
jp
sahf
test
sub
or
mov
pop
adc
(bad)
enter
sub
pop
and
jb
sti
mov
mov
sbb
xchg
pusha
xor
mov
stos
push
lock
and
sbb
lea
pop
scas
je
jmp
ins
jmp
fisttp
or
hlt
push
xchg
mov
jecxz
dec
gs
ror
imul
fldenv
test
in
pop
mov
mov
cmps
addr16
je
adc
repnz
sar
sub
int3
sub
fadd
leave
and
cli
test
push
loopne
mov
int
test
push
dec
or
(bad)
popa
sub
adc
sbb
out
scas
jae
mov
rcl
cmp
cmp
clc
pop
fnstenv
add
cmp
jae
cs
mov
mov
scas
call
push
lea
push
dec
rep
push
out
das
lea
jl
icebp
movs
popf
fdiv
mov
or
mov
retf
add
mov
nop
pop
ins
cld
jp
xor
mov
push
mov
cld
cld
and
mov
in
add
lea
cmp
stos
add
jmp
xchg
sbb
sub
jecxz
fdiv
ins
sbb
sub
lahf
sbb
imul
xor
push
sbb
pop
pop
aam
mov
lods
mov
sbb
jbe
ret
stos
daa
pop
stos
loopne
mov
or
movs
ds
pop
inc
outs
fwait
fs
jg
or
icebp
cwde
sahf
dec
mov
sbb
test
or
cmc
out
xor
mov
mov
or
daa
int
in
loopne
jno
sub
adc
push
mov
fadd
add
sub
adc
sub
(bad)
cwde
lock
mov
pop
cwde
fcmovnu
jge
mov
pop
xor
xchg
mov
adc
inc
sub
cdq
and
scas
mov
out
push
jbe
call
xchg
sbb
out
sub
jo
ror
ins
mov
pop
jb
xor
stos
and
es
cs
pusha
popf
cmp
push
adc
dec
adc
cs
sub
and
mov
out
fs
and
push
fild
mov
int
dec
xchg
icebp
jmp
sbb
fs
in
or
jno
lahf
icebp
fist
inc
and
push
pusha
pop
jbe
xchg
shr
scas
mov
xor
mov
dec
sbb
and
lods
xor
out
dec
jge
imul
cli
call
sub
mov
push
mov
sahf
sub
cmovg
ror
fdiv
imul
mov
cld
sbb
mov
push
sub
adc
(bad)
mov
dec
cdq
lds
inc
out
mov
mov
mov
mov
cmp
scas
pop
lock
ins
imul
cdq
popa
mov
mov
xchg
call
mov
fcmove
jmp
push
pusha
mov
movs
xor
int3
cmp
mov
adc
pop
hlt
jae
mov
xchg
retf
xchg
push
adc
movs
cmp
loop
adc
sbb
xor
dec
es
dec
or
(bad)
push
gs
fidiv
rcr
lds
mov
clc
push
xor
push
jne
inc
xchg
xchg
cmp
or
clc
adc
retf
clc
sbb
sahf
xchg
xchg
ins
aaa
retf
scas
sbb
ret
scas
and
dec
or
lods
add
ret
stos
stos
mov
outs
jae
pop
es
ja
sub
(bad)
lea
ss
add
lods
inc
dec
push
inc
push
and
pop
pop
pop
or
mov
jmp
xchg
push
mov
push
fstp
adc
cmc
iret
fld
test
sub
mov
push
or
aaa
dec
call
add
hlt
jecxz
shl
pushf
cld
mov
leave
mul
ror
fild
fwait
xchg
adc
xchg
int3
ret
aam
ret
lea
das
test
jbe
mov
jno
jg
mov
fwait
push
xor
aas
lea
ins
push
xchg
mov
cmp
repnz
adc
mov
imul
mov
xor
xchg
mov
jge
js
xchg
test
sub
dec
or
mov
pop
inc
scas
add
mov
push
sbb
jmp
pushf
mov
lock
add
rcl
inc
ins
enter
xor
mov
gs
dec
jnp
fwait
sbb
inc
push
test
or
test
test
sti
inc
pop
sub
test
push
push
dec
mov
adc
mov
loope
in
add
cmp
(bad)
pushf
mov
jmp
retf
push
fldenv
(bad)
push
jne
jmp
pop
push
jb
idiv
cmps
add
in
jmp
jmp
push
jmp
jne
cli
pop
shl
and
loopne
int
out
adc
movs
add
movs
sbb
lahf
call
fiadd
loop
(bad)
ror
out
ret
out
addr16
popf
add
cmp
call
enter
iret
push
mov
pop
mov
in
adc
inc
mov
inc
and
out
sysexit
xchg
out
popa
outs
popa
lds
icebp
adc
hlt
fistp
loop
mov
mov
ret
mov
cmp
daa
retf
mov
sub
xor
stc
sub
mul
enter
pushf
fcomp
cmps
dec
jge
mov
cs
cwde
or
call
jmp
inc
out
or
aaa
jle
std
pop
fimul
arpl
add
call
aaa
test
jp
jnp
xchg
popf
jns
sbb
sub
cmp
cmc
shl
mov
sub
test
test
jbe
mov
jno
mov
test
jne
in
sbb
add
mov
xor
xor
fnsave
fst
pop
jg
sar
push
xchg
(bad)
fldenv
sar
sub
imul
shl
sahf
test
fist
push
cli
mov
test
es
xchg
mov
pop
jbe
js
jmp
adc
sub
cmp
test
imul
and
jge
xchg
sub
mov
adc
dec
push
out
mov
inc
in
aam
pusha
mov
push
jb
jle
mov
and
xchg
xor
ss
fild
test
inc
jl
addr16
outs
add
push
pop
mov
sub
fwait
push
outs
cs
mov
enter
cmp
test
std
adc
mov
dec
or
(bad)
jb
cld
(bad)
jl
stos
retf
pop
(bad)
mov
(bad)
lock
lods
scas
or
lods
ss
cmps
mov
rcr
adc
aad
xchg
jmp
rcr
repz
adc
mov
jbe
fist
or
pop
shl
lea
mov
fmul
jl
jmp
movs
xchg
xlat
imul
sub
sbb
push
dec
inc
xchg
addr16
mov
pushf
cmp
fwait
(bad)
cmp
fs
jnp
aam
movs
push
icebp
bound
inc
repnz
xlat
sub
ja
repz
inc
xchg
push
add
cmp
and
push
cmps
sub
pop
sahf
inc
inc
sub
rcr
bound
sbb
ret
adc
test
int
cmp
inc
fidivr
repnz
cmp
sbb
xchg
sti
sbb
fcomp
fadd
dec
mov
test
fild
test
sub
or
add
xor
mov
int3
cwde
pop
push
pop
ss
xchg
sub
cmc
dec
push
loopne
mov
mov
mov
jne
mov
test
fmul
ret
xchg
sub
or
mov
test
push
adc
in
cmps
je
lods
std
push
mov
int
mov
xchg
rcl
ror
jg
and
xor
daa
ror
or
and
ds
mov
sub
dec
jo
dec
mov
aad
js
sub
leave
inc
sub
dec
(bad)
and
call
pop
sub
or
aaa
lea
pop
stc
movs
ss
sub
jecxz
mov
retf
(bad)
rcr
jbe
fwait
mov
add
cli
icebp
xor
fstp
jns
xchg
pop
xor
(bad)
adc
and
sub
cld
inc
or
and
jns
inc
jae
add
shl
int3
jno
out
loopne
xchg
lods
pop
jns
xlat
inc
pop
jmp
pop
sti
icebp
nop
push
jle
adc
adc
xchg
imul
imul
sub
movs
stos
mov
pusha
xchg
cwde
inc
(bad)
movs
jl
dec
jne
mov
jp
mov
xor
fld
sub
jno
mov
lahf
bound
push
fidiv
leave
ins
xor
call
pop
in
jb
bound
ds
icebp
cmp
in
es
mov
loope
out
jbe
mov
and
jae
inc
test
xchg
jg
scas
outs
ds
push
jl
in
adc
data16
(bad)
das
sbb
dec
adc
ja
test
(bad)
jg
mov
inc
lods
add
jnp
xchg
out
dec
sub
fnsave
pop
imul
and
or
dec
sbb
jb
mov
inc
sbb
mov
pop
mov
cmp
jge
jo
hlt
sbb
mov
push
jo
out
stos
xchg
mov
outs
dec
push
and
adc
sbb
jmp
loope
pop
mov
call
shl
adc
jg
or
psubb
adc
dec
adc
daa
cld
xchg
cwde
pxor
(bad)
sahf
and
ins
stos
add
and
leave
sub
retf
jp
(bad)
jb
push
xchg
imul
loopne
or
div
sbb
add
dec
imul
inc
mov
jg
jb
xchg
jb
sub
sbb
mov
mov
xchg
xor
retf
mov
test
popf
xchg
and
ins
mov
sbb
dec
pop
(bad)
sbb
pop
cmp
xor
std
aam
fwait
aam
sbb
xchg
mov
adc
pushf
sub
mov
xlat
dec
jne
lods
inc
mov
or
pusha
and
scas
push
mov
inc
lds
mov
scas
fwait
add
mov
cmp
loopne
inc
sbb
je
in
repnz
xchg
push
sub
add
pop
imul
sbb
lods
mov
add
clc
sbb
ins
pop
ins
mov
push
and
call
mov
cmp
(bad)
lods
retf
jno
outs
dec
fisub
test
outs
mov
mov
cmp
in
sbb
fild
call
jae
inc
mov
sbb
xor
dec
cwde
ret
cmp
sbb
mov
neg
push
arpl
and
imul
cmps
in
fsub
push
movs
pop
push
cmps
(bad)
or
int
mov
scas
inc
push
daa
mov
cmp
ins
fcmovb
or
(bad)
ror
clc
inc
cmp
call
mov
mov
pop
fbstp
or
sub
repnz
add
mov
add
(bad)
in
mov
xor
pop
add
mov
fadd
out
test
or
xchg
in
inc
mov
add
dec
sahf
mov
fmul
out
sahf
daa
rcr
mov
aam
ins
daa
pop
add
add
dec
xor
inc
cs
pop
jl
repnz
cmps
add
or
xor
retf
and
dec
mov
daa
fidivr
and
jae
cmps
adc
dec
imul
dec
sbb
push
mov
not
sbb
and
mov
inc
sahf
scas
test
jg
cdq
dec
and
dec
bound
or
out
sbb
push
call
out
sub
sub
adc
fbstp
out
int3
cmp
jnp
add
repz
mov
es
push
cdq
frstor
mov
lds
je
dec
cmp
pop
push
push
test
repnz
jecxz
add
sub
pop
jno
fcmovnu
or
sub
pop
mov
cmp
xor
cmp
sub
push
sbb
and
sub
jae
ja
or
xchg
pop
out
jp
add
push
mov
lock
dec
test
cwde
pop
push
sbb
mov
inc
les
pusha
lds
arpl
mov
out
sbb
xor
clc
pop
fsub
adc
or
jmp
in
retf
in
es
shl
push
imul
adc
add
(bad)
push
dec
shr
adc
scas
inc
cmp
ss
sub
idiv
aad
daa
nop
add
pushf
sub
repnz
mov
xchg
iret
ins
aas
es
mov
sub
into
ret
mov
push
leave
jl
(bad)
fisub
mov
push
movs
jmp
adc
cld
ror
mov
or
jb
rcr
cmp
data16
stc
addr16
mov
xor
xchg
je
mov
leave
mov
cli
leave
pop
sub
mov
xchg
add
dec
sub
ror
mov
cmps
scas
and
cmp
xor
cmp
lods
add
dec
pop
sbb
and
(bad)
fild
mov
mov
cmp
fcomp
fs
hlt
mov
fdivr
adc
(bad)
ss
addr16
and
pop
addr16
dec
jnp
sbb
xor
in
dec
fistp
mov
mul
sbb
dec
mov
inc
popa
in
leave
in
pop
cmp
push
das
jne
sub
xlat
add
ss
xor
gs
xor
pop
mov
in
jge
(bad)
test
sbb
sbb
cmp
cmps
xchg
fstp
mov
icebp
mov
inc
cmp
sub
cs
mov
push
mov
cmp
push
loop
cmc
jle
jle
and
dec
jmp
lahf
xchg
sub
(bad)
movs
jo
pop
mov
xor
and
aaa
adc
mov
shr
pop
or
add
mov
push
fsubr
sbb
xor
lea
mov
adc
sahf
cmc
inc
(bad)
mov
mov
fnstenv
cmc
xchg
movs
call
mov
xor
movs
and
jecxz
sub
popf
push
cld
std
sub
imul
xor
dec
mov
lods
push
ds
out
inc
pop
and
sub
cmp
dec
fst
pop
stc
shl
movs
xor
das
dec
dec
retf
sub
clc
mov
xor
xchg
(bad)
popa
push
mov
adc
jmp
stos
push
mov
sbb
sbb
xchg
mov
pop
shl
push
and
dec
out
(bad)
mov
enter
mov
or
out
mov
push
dec
pop
arpl
cmp
inc
push
pushf
dec
rcr
dec
cmc
xor
out
cmp
shl
mov
stc
mov
push
lock
sub
mov
jg
iret
fidiv
sub
xor
mov
sbb
pop
ret
enter
nop
jg
neg
pop
and
arpl
push
not
pop
jl
lahf
lds
dec
xor
js
mov
pop
cmp
leave
(bad)
out
jno
push
mov
hlt
push
iret
push
sub
sti
mov
xchg
clc
out
jge
repz
lds
pop
fwait
cmp
and
ins
push
sahf
loope
push
outs
jb
push
add
mov
out
ins
xchg
(bad)
jbe
in
or
lea
push
fistp
add
scas
sahf
gs
sub
mov
inc
aas
test
into
adc
mov
sar
pop
mov
lods
jno
jge
lods
pop
in
(bad)
or
rol
jno
test
sub
ins
and
int
jbe
fwait
and
sbb
sbb
or
xchg
je
pop
cmp
pop
mov
xchg
ja
jmp
dec
loopne
dec
mov
add
in
cmp
ins
outs
rcr
jg
(bad)
and
leave
xchg
les
or
sbb
mov
iret
or
outs
pop
cs
dec
repnz
retf
test
mov
retf
dec
sbb
cdq
popa
mov
jmp
inc
inc
imul
jmp
aad
dec
xor
add
pop
repnz
and
ficom
and
fadd
sub
jbe
mov
mov
ret
xor
hlt
pop
rcl
inc
rol
jns
outs
xchg
adc
mov
pop
mov
imul
push
add
(bad)
push
push
sti
mov
inc
mov
jae
clc
mov
push
mov
inc
in
fsubr
(bad)
fadd
cli
sub
loopne
cmp
jne
or
or
mov
mov
xchg
lods
cmp
es
xchg
mov
js
ins
push
(bad)
out
add
xchg
jae
push
mov
mov
push
mov
jp
ds
ret
clc
les
mov
add
fistp
sub
xor
xchg
and
movs
lods
out
in
pop
cmc
cdq
xor
push
in
mov
ins
or
and
out
inc
mov
test
jb
and
outs
sub
cmc
mov
mov
loop
mov
jb
xchg
xchg
(bad)
fild
push
jge
daa
cmp
xor
adc
iret
xlat
leave
mov
std
ret
cmp
je
sbb
inc
neg
mov
jns
or
or
sbb
mov
jp
cmps
shl
rcr
jo
sar
cmp
cmc
das
pop
cmc
mov
or
lock
inc
and
inc
sti
push
dec
cdq
rol
popa
adc
cdq
pop
stos
adc
mov
or
xchg
std
in
push
jmp
sahf
ja
fwait
dec
retf
add
mov
xlat
sub
xor
push
add
cmps
dec
add
cs
add
sub
add
xchg
addr16
or
cmp
retf
push
mov
sub
mov
call
mov
cli
mov
or
in
icebp
cmc
lahf
and
jle
jle
mov
add
lea
pop
sbb
fwait
pop
fxch
cmp
cmp
loope
dec
dec
shl
dec
jbe
dec
mov
mov
inc
pop
ins
adc
pop
mov
call
dec
mov
or
repz
bound
cmp
out
xor
push
and
cmp
or
xor
enter
call
sub
into
lea
inc
cli
jo
mov
lods
ds
je
test
xchg
sbb
inc
(bad)
adc
cmp
mov
lahf
adc
outs
push
cdq
inc
xchg
out
rol
inc
push
in
mov
mov
mov
fwait
sub
push
lods
or
hlt
call
in
adc
loopne
jecxz
sub
shl
test
xchg
neg
push
ss
fcmovnu
sbb
icebp
(bad)
lods
push
cmps
push
jl
xchg
pop
push
retf
popf
mov
mov
pop
rcr
pop
xchg
in
xor
push
xor
jecxz
ret
out
stos
rol
inc
sbb
mov
xor
and
push
test
cwde
out
loopne
and
mov
sti
xor
sbb
cmp
sub
inc
dec
ror
aad
and
aaa
cmp
and
jmp
aad
(bad)
sbb
data16
shl
add
mov
and
push
mov
stos
shr
mov
and
sub
into
sbb
out
pop
push
js
stc
dec
adc
outs
popa
leave
mov
rcl
leave
push
sub
xor
mov
int
push
or
aam
scas
jge
inc
pop
pop
dec
pop
and
cmps
dec
(bad)
je
mov
stc
imul
stos
mov
fnsave
les
jno
nop
mov
jo
cdq
jae
jb
das
push
aad
movs
inc
jno
push
clc
lods
jmp
lahf
sub
pop
loop
jl
pop
mov
dec
popf
pop
mov
test
stos
fs
jae
repnz
mov
or
out
push
pop
lods
retf
imul
sub
push
cwde
icebp
xchg
adc
es
push
jl
pusha
mov
retf
add
or
mov
call
and
fbld
pushf
add
mov
add
mov
inc
das
mov
fild
loope
rcr
sti
or
sbb
clc
mov
loope
xchg
push
sbb
cmp
stos
xchg
jl
push
scas
or
jno
(bad)
daa
and
pop
dec
pusha
push
add
leave
fimul
stos
retf
pop
mov
xor
inc
pop
lods
add
movs
ret
pop
or
mov
mov
pop
cmc
(bad)
fucom
or
ror
mov
mov
push
fwait
xchg
fsubp
fsubp
dec
cmc
sub
and
(bad)
xor
dec
and
sub
arpl
and
lods
inc
gs
test
aas
pop
jno
mov
add
es
sub
(bad)
mov
push
mov
jns
popa
inc
dec
pop
lods
pop
xor
cmp
push
add
jne
add
add
repnz
dec
arpl
xchg
sbb
mov
div
adc
or
jle
cmp
and
aam
scas
outs
jmp
xor
icebp
push
jmp
fcom
(bad)
xlat
retf
jle
nop
cmc
add
cmp
push
ds
int
es
imul
mov
outs
neg
adc
nop
das
enter
pop
jmp
sbb
out
test
sub
shl
xchg
sbb
(bad)
mov
inc
sub
loope
cmp
cwde
jecxz
daa
cli
cdq
mov
cs
addr16
jmp
sub
pop
in
scas
adc
adc
xchg
mov
mov
sub
or
outs
std
lock
xlat
mov
adc
jecxz
inc
sbb
xchg
mov
aaa
int
mov
outs
sub
and
jp
xchg
xchg
mov
lods
pop
xchg
mov
lods
cdq
fdiv
(bad)
mov
mov
fdivr
movs
xchg
fs
or
clc
jne
test
out
pusha
scas
mov
ins
mov
ins
dec
imul
fcomp
jmp
and
ss
mov
and
add
daa
jnp
and
bound
jmp
stos
xor
aaa
fwait
(bad)
out
int
into
mov
add
retf
aad
(bad)
lock
push
imul
push
jae
push
push
mov
jno
call
int
or
pop
ja
cmp
add
out
dec
pop
mov
jge
mov
shl
fsubr
xor
lods
jae
dec
add
xchg
scas
xchg
das
sub
enter
adc
in
xor
fmul
or
rol
push
loope
call
cmp
inc
call
sub
out
aas
inc
xor
adc
jle
dec
in
fstp
sbb
mov
jae
xchg
out
inc
mov
test
sti
lods
dec
stos
ror
adc
pop
scas
push
fs
dec
sbb
mov
sahf
mov
cmp
jmp
or
pop
pop
inc
cld
cmps
and
dec
icebp
inc
sbb
sub
(bad)
push
lods
fmulp
imul
dec
mov
retf
mov
loope
enter
push
add
fmul
mov
stos
push
das
dec
or
in
inc
pop
pop
aad
outs
dec
rcr
fmul
xchg
push
jle
xor
fsubr
js
xchg
aas
in
cmp
mov
scas
cs
pop
xlat
push
jl
vpcomw
jp
not
push
dec
adc
and
add
dec
or
cmc
push
cmp
fcomp
imul
leave
jne
mov
mov
push
popa
lods
test
xor
outs
jo
fldcw
scas
or
imul
cmp
xor
sub
scas
outs
arpl
or
lea
int3
push
cld
pop
cli
jno
shr
inc
sub
pop
scas
rcr
jp
loope
je
cmp
pop
pop
inc
push
ds
rcl
push
lods
add
pop
sbb
jne
cmp
(bad)
dec
jge
pushf
add
pop
adc
sub
push
adc
xchg
jmp
sub
cmp
pop
pop
adc
jnp
shl
mov
push
dec
jb
lds
dec
jnp
loopne
fidiv
xor
bound
pop
mov
es
clc
xor
sbb
inc
(bad)
movs
pop
mov
and
arpl
add
(bad)
sub
out
and
push
jae
pop
adc
xor
push
sbb
jnp
cmp
or
jns
xchg
mov
out
inc
adc
xchg
ret
ja
pop
ret
xor
mov
xchg
shl
mov
lods
inc
pop
pop
mov
bound
(bad)
cs
dec
inc
out
div
jo
mov
enter
inc
add
jmp
in
mov
xchg
xor
add
and
(bad)
xor
dec
ret
cmps
ja
or
ins
or
push
shl
out
outs
sbb
lea
js
stos
sub
div
mov
clc
sbb
movs
mov
ror
les
in
xchg
xchg
stc
mov
mov
ret
out
outs
popa
sbb
xor
cli
or
jae
ret
push
pop
and
cdq
xchg
or
ja
in
les
pusha
stc
cmp
mov
push
mov
loope
aas
lahf
lock
sub
popf
add
pop
or
and
xor
mov
in
cmp
inc
ja
out
sbb
cmps
cmp
pop
outs
leave
push
sub
inc
ffreep
out
mov
outs
inc
pop
push
cmps
bound
jmp
push
loope
push
nop
jle
das
adc
adc
rol
pop
mov
loopne
push
fwait
sbb
and
or
out
xchg
fsubr
pop
cs
mov
mov
pop
test
shr
push
sub
aas
xor
or
mov
shr
test
mov
push
mov
movs
jmp
pop
vcvtdq2pd
pop
sbb
xor
mov
jne
xor
mov
(bad)
int3
adc
and
(bad)
mov
aas
arpl
push
jb
adc
inc
pop
and
js
inc
dec
adc
mov
and
xor
mov
int3
xchg
pushf
xor
cmp
mov
(bad)
mov
adc
cmp
jbe
(bad)
(bad)
scas
jl
xor
fnstcw
dec
push
pop
mov
cdq
dec
adc
nop
ret
nop
ficom
mov
cmp
ds
jmp
jmp
and
cvttps2pi
push
jmp
(bad)
leave
cmps
xchg
xor
shr
les
cli
push
jb
push
cmc
jl
mov
sbb
aaa
aam
ret
xchg
xor
movs
stos
push
adc
ret
cmp
loop
dec
inc
add
lods
stos
ret
push
pop
aad
sbb
ret
fwait
inc
sub
adc
aaa
cmp
int
and
push
inc
or
jmp
in
(bad)
je
int3
mov
popf
add
sbb
mov
icebp
mov
ret
fimul
call
(bad)
retf
fbstp
inc
rcl
push
dec
fdivr
sbb
inc
cld
lahf
push
and
(bad)
cmp
(bad)
jl
bound
loopne
test
mov
xchg
add
xor
xchg
jo
test
push
ja
out
sahf
xlat
mov
test
call
jnp
or
(bad)
(bad)
mov
jo
dec
cld
xor
retf
lock
jnp
sbb
cld
pusha
js
leave
je
mov
scas
xlat
inc
shl
mov
sbb
add
pop
ret
jl
pusha
pop
xor
inc
pop
mov
es
cmp
outs
push
cmp
xchg
cmp
lea
call
pop
adc
icebp
xchg
int
sbb
ins
pop
je
pop
dec
clc
jns
cld
ds
cmc
adc
jnp
fld
add
icebp
pusha
cmp
inc
iret
pop
sbb
outs
adc
xchg
cvtps2pi
xlat
stc
bound
or
xchg
mov
mov
test
sbb
dec
add
mov
aam
adc
call
and
int3
cli
xchg
movs
popa
ret
ret
mov
sub
mov
je
mov
addr16
das
arpl
inc
fdivr
xchg
aad
call
repnz
(bad)
mov
or
cmps
ret
pop
push
lock
std
jo
or
push
mov
fild
push
aad
jb
xor
push
test
push
(bad)
shr
shr
dec
leave
fisub
(bad)
out
push
sti
sti
xor
mov
mov
push
call
test
jns
jb
mov
pop
enter
dec
dec
jg
fcomp
(bad)
xchg
std
div
or
hlt
dec
test
ds
lock
ja
mov
ret
mov
ss
xor
cmps
cmps
push
cmp
dec
test
or
out
retf
xchg
mov
mov
xlat
out
jl
mov
xor
mov
pop
imul
sbb
pop
pushf
(bad)
adc
cmp
repz
jb
add
ficom
dec
cs
add
jmp
jge
das
sub
and
out
fiadd
mov
jmp
cmps
mov
ds
outs
push
jmp
int
(bad)
jne
int3
into
sub
and
inc
ret
and
and
ja
mov
and
ror
lods
imul
adc
test
(bad)
imul
push
jge
sub
dec
fistp
sub
mov
sbb
adc
xchg
or
les
in
add
mov
pusha
mov
imul
ins
aas
jnp
int
jns
add
fmul
dec
nop
aam
das
and
mov
mov
inc
data16
dec
mov
ja
inc
loopne
mov
xchg
cmp
ffree
in
or
jno
aam
sub
jmp
xlat
fdivr
cmp
in
pop
sbb
pusha
adc
into
(bad)
sub
mov
cmps
cmp
je
sub
(bad)
aad
mov
dec
or
lds
pop
sub
mov
xchg
pusha
or
mov
into
leave
in
dec
or
sbb
shl
sbb
mov
jbe
sub
xor
in
in
ss
xor
cld
cdq
jmp
clc
(bad)
xor
push
es
sub
int
push
inc
fucomp
(bad)
push
scas
push
dec
movaps
push
add
pop
mov
ss
loope
cwde
loopne
ja
daa
repnz
and
xor
imul
pop
add
ret
int
push
mov
push
imul
daa
jmp
add
popf
jmp
call
or
inc
jbe
add
outs
(bad)
(bad)
hlt
mov
mov
inc
(bad)
push
inc
xor
imul
idiv
mov
test
sub
xor
rcr
or
add
lea
icebp
stos
push
pop
adc
jo
jp
cmps
or
pop
aam
test
sbb
adc
pop
push
pop
shl
addr16
mov
test
inc
sahf
daa
aas
cmp
aas
inc
(bad)
cwde
and
and
sub
jge
ja
inc
xchg
cwde
jle
icebp
push
jmp
cwde
lods
cld
sbb
jle
push
arpl
pop
jp
xchg
jo
test
jns
sti
icebp
mov
clc
cmp
mov
(bad)
in
in
inc
daa
mov
cmp
fstp
jge
scas
jb
sbb
enter
adc
test
push
ds
je
shr
cld
iret
fst
scas
jo
cs
test
fst
push
dec
stc
add
dec
aas
mov
mov
mov
and
(bad)
pushf
hlt
frstor
cwde
js
mov
ss
mov
mov
loop
mov
popa
or
xor
mul
mov
adc
lahf
aam
scas
xor
fnstsw
mov
xchg
inc
dec
pop
std
retf
out
pop
mov
retf
adc
add
aas
pop
lods
in
xchg
adc
add
pop
ss
cmp
sti
jmp
clc
dec
add
mov
mov
retf
je
rol
scas
adc
mov
adc
ret
dec
leave
xchg
mov
(bad)
clc
jecxz
pop
jno
div
or
out
scas
sbb
into
sub
mov
fs
cmp
cmp
scas
dec
xor
loope
outs
shr
repz
dec
mov
dec
out
inc
dec
xchg
sbb
mov
(bad)
mov
xor
mov
or
add
loopne
xchg
retf
push
mov
sbb
pop
movs
into
and
aad
outs
imul
ret
mov
popa
mov
data16
inc
inc
test
test
pop
sbb
mov
cmp
lods
bnd
inc
xor
aaa
sar
in
std
rol
xchg
adc
lods
popa
ins
stos
add
inc
xchg
jb
xchg
dec
push
(bad)
loopne
aas
ficomp
inc
ret
push
dec
imul
cmp
rcl
(bad)
jl
fwait
mov
outs
movs
sahf
enter
mov
or
mov
aam
cli
fldenv
vmaxpd
leave
and
shr
xchg
sub
adc
mov
stos
(bad)
push
enter
ins
xchg
sub
cmp
mov
fstp
sub
loope
adc
pop
enter
sbb
jo
in
jbe
or
jmp
add
push
mov
mov
pop
mov
adc
add
or
out
push
or
mov
xchg
sub
fdiv
ret
retf
fadd
sub
mov
mov
and
leave
add
pop
fdivr
jb
in
mov
(bad)
in
jo
xchg
fcmovnbe
mov
fisttp
call
xchg
mov
inc
lahf
add
jbe
xor
test
mov
mov
ins
mov
mov
ins
popa
push
dec
sar
jge
out
pop
scas
mov
fucomp
cwde
sbb
loop
and
repnz
dec
and
ja
pop
xchg
xor
call
xchg
sti
jecxz
iret
movs
dec
popa
arpl
je
mov
sub
icebp
aaa
sbb
neg
movs
mov
fcmovb
and
push
lods
fisttp
xchg
add
call
adc
aas
cmp
and
and
in
cwde
mov
and
xor
xchg
xchg
arpl
mul
push
pop
shl
lock
retf
mov
add
je
xchg
xchg
xchg
jb
xor
add
(bad)
pusha
dec
pusha
jnp
sub
repnz
data16
pop
push
or
mov
mov
mov
push
xchg
clc
mov
dec
and
push
pop
sbb
loope
cmps
in
mov
imul
aad
cmp
jl
sub
sbb
and
icebp
xchg
aaa
push
pop
xchg
push
aas
cmp
pop
stos
loope
test
adc
(bad)
xchg
ins
xor
push
and
xchg
jae
sar
push
xor
xchg
pop
pop
mov
(bad)
into
xor
inc
fsub
add
jbe
xchg
mov
or
inc
xor
push
sti
cmps
les
jns
adc
iret
sahf
xchg
mov
fdiv
xchg
xchg
dec
mov
xor
jo
xor
movs
call
cmp
cli
rcr
mov
in
add
or
cmc
jge
(bad)
sbb
fwait
sbb
xor
fnstcw
mov
mov
inc
mov
jmp
push
mov
test
cmp
or
adc
ja
xchg
loope
je
lea
adc
xchg
test
sub
add
xchg
nop
jno
or
jl
sub
lods
push
inc
outs
pop
in
pusha
or
or
in
(bad)
pusha
add
dec
mov
(bad)
jecxz
fisub
sub
sbb
pop
sar
mov
inc
add
mov
add
scas
cs
push
mov
jp
and
sub
sub
pop
mov
cld
std
jne
jno
and
pop
and
pop
push
pop
jmp
jns
push
hlt
shr
repnz
mov
rol
cmp
xor
mov
and
mov
inc
jecxz
add
mul
icebp
mov
mov
jno
outs
(bad)
adc
sbb
fadd
pop
add
ret
mov
dec
es
mov
rcr
adc
dec
push
lods
mov
repnz
xchg
jmp
push
dec
outs
ss
pop
and
adc
inc
sub
add
pushf
out
ror
cmp
into
imul
adc
div
push
ror
ins
ins
rol
sbb
out
aad
and
xchg
jne
and
imul
cmps
ret
popf
scas
sbb
sub
shl
clc
dec
movs
push
cmp
sub
cmp
mov
fwait
xchg
cli
jmp
imul
enter
mov
(bad)
shl
retf
dec
ins
lock
jmp
mov
and
and
jo
lock
ds
mov
mov
outs
je
in
xchg
les
mov
dec
loop
cwde
daa
clc
cmp
mov
stc
sbb
cmps
xchg
fadd
mov
push
imul
loope
cwde
ret
cmp
sub
pusha
mov
xchg
popf
jecxz
outs
iret
pop
cld
inc
inc
cdq
sbb
sbb
stos
mov
arpl
les
lds
pop
jmp
sub
dec
cmp
les
xchg
inc
mov
and
in
and
fnsetpm(287
add
cli
movs
in
mov
pop
cmp
ret
fsubr
int
cmp
add
adc
aas
sbb
inc
xor
popa
aad
ret
repnz
xor
push
ins
cmp
add
dec
int
xor
repnz
clc
pop
out
call
jmp
ret
sbb
inc
ret
imul
outs
mov
int
inc
aaa
mov
pop
xchg
or
and
out
in
scas
sbb
in
xor
mov
ficomp
fsub
iret
xchg
test
sbb
mov
popf
xchg
jnp
inc
push
pop
cli
les
(bad)
sub
jmp
xchg
mov
mov
jnp
inc
cdq
mov
imul
jne
into
retf
add
ja
mov
cmps
pop
(bad)
repnz
cmp
jg
add
cmps
shr
sbb
mov
fst
pop
fbstp
push
mov
mov
push
cmp
iret
clc
sub
mov
adc
pop
in
push
push
les
xchg
cmp
mov
repz
pop
xlat
mov
sub
add
sbb
add
mov
mov
pusha
cmp
sbb
jo
inc
sbb
dec
cmp
jne
xor
and
sub
mov
ins
add
sbb
mov
push
or
(bad)
pop
pop
xchg
(bad)
mov
aad
mov
cmps
bound
dec
push
mov
test
push
push
mov
arpl
mov
push
scas
xor
push
sub
popa
sbb
lea
sub
pop
or
iret
mov
out
out
cmps
mov
push
lods
xor
xor
add
je
pop
and
jp
lock
clc
icebp
push
cdq
or
arpl
mov
cmp
test
and
sub
jp
add
cmp
cmp
jmp
stc
inc
shr
outs
sti
adc
push
jns
adc
and
js
(bad)
lahf
mov
sub
and
popa
shr
push
xchg
hlt
repnz
imul
adc
and
(bad)
mov
inc
pop
mov
in
push
cmc
stos
pop
movs
out
cmp
ins
push
xor
aas
inc
fwait
xchg
push
jns
push
inc
cmp
fnstsw
xchg
out
dec
xchg
xor
cmp
sar
pop
adc
push
cmc
xor
sbb
lods
mov
jmp
dec
jae
ds
fist
mov
mov
inc
imul
mov
xchg
jle
mov
pop
sub
dec
clc
(bad)
hlt
mov
mov
mov
(bad)
aad
es
imul
lods
mov
xchg
sbb
call
hlt
inc
xchg
push
sar
and
out
(bad)
jecxz
ja
rol
cwde
dec
pop
pop
in
repnz
mov
ja
or
xor
cli
push
fdiv
(bad)
push
imul
daa
aam
mov
icebp
sahf
sahf
sar
cdq
test
rcr
xor
or
fwait
stos
pop
pop
sbb
jecxz
jnp
push
fdivr
jge
inc
out
mov
sti
clc
(bad)
out
ins
cdq
lods
mov
mov
add
xor
mov
fadd
cmps
xlat
lods
int
into
sbb
repz
test
mov
arpl
mov
inc
inc
daa
add
sbb
jmp
pop
xor
hlt
and
ds
fld
dec
inc
loope
or
call
das
push
sbb
jno
adc
lods
dec
mov
and
adc
mov
rcr
mov
clc
xchg
retf
(bad)
inc
or
ror
leave
add
scas
push
or
nop
xor
cs
cmp
imul
test
in
out
mov
mov
sub
mov
stc
push
adc
das
outs
or
push
lahf
push
popf
xchg
outs
bound
imul
inc
sub
cmp
mov
(bad)
(bad)
mov
stos
xchg
sbb
inc
fisubr
dec
ss
pop
pop
pop
int
jne
or
int
imul
sbb
inc
les
in
in
sub
test
xor
xchg
popf
cld
repnz
cmp
jecxz
xchg
mov
popa
in
and
and
sub
call
out
jb
cmp
call
add
add
push
aad
xor
icebp
mov
ror
mov
push
jp
lods
cwde
mov
jno
mov
add
aas
shl
add
adc
or
hlt
dec
(bad)
adc
push
push
sahf
gs
add
(bad)
fisttp
(bad)
faddp
push
mov
push
fcmove
gs
dec
gs
movs
sub
inc
adc
(bad)
mov
mov
xor
mov
or
push
sahf
jmp
mov
stc
or
cld
push
push
jmp
pop
jge
jns
inc
sbb
push
jb
arpl
loopne
add
jle
dec
mov
shl
cmps
add
push
add
retf
jmp
or
mov
lods
xor
cmp
ss
out
mov
inc
xchg
loope
inc
pop
pop
ins
pop
dec
(bad)
nop
test
jae
dec
shl
inc
xchg
inc
outs
fdiv
cmp
lahf
addr16
test
jae
shr
cmc
adc
je
sub
cmps
(bad)
jo
jg
fidivr
xchg
shl
mov
fmul
sub
test
inc
jl
nop
repnz
lahf
stos
push
mov
xor
mov
xor
xor
sub
nop
pop
fwait
adc
inc
pop
xor
inc
or
ds
push
xchg
xor
mov
shl
and
jl
cmp
mov
jne
jle
leave
dec
adc
inc
in
in
cld
test
loope
je
gs
call
jne
xchg
push
neg
loop
mov
sub
dec
sub
dec
xor
xchg
cmp
add
cmp
mov
daa
cmp
dec
popf
xor
push
(bad)
les
jmp
iret
fldl2e
bnd
fistp
outs
inc
pop
xor
arpl
mov
mov
shr
pop
mov
rcr
scas
mov
lds
push
xor
pop
test
pop
ret
into
dec
ins
in
sbb
cli
nop
inc
inc
dec
mov
lods
loopne
bound
sub
inc
dec
loop
sti
lods
or
jb
(bad)
push
xor
imul
sub
adc
jns
addr16
pop
inc
mov
inc
shl
test
mov
inc
inc
(bad)
repz
xchg
fs
add
stos
push
pop
cmp
pop
(bad)
adc
rcr
outs
mov
jne
fs
xchg
jmp
loop
or
and
mov
(bad)
shl
pusha
xchg
and
fdiv
test
push
cdq
fcmovnb
xchg
idiv
xor
daa
mov
movs
sbb
sahf
add
ins
xchg
mov
jp
icebp
sar
push
mov
mov
repz
mov
add
test
jmp
fcomp
dec
push
call
push
jge
and
mov
adc
ror
imul
in
inc
pop
arpl
jnp
cmp
xor
das
in
sbb
mov
cmp
jae
or
cmps
gs
push
add
clc
shl
movs
sbb
dec
mov
mov
pop
xor
jmp
or
xchg
out
dec
in
addr16
xor
shl
cwde
loopne
int3
and
retf
je
jae
xchg
test
sar
mov
call
mov
and
sub
jne
dec
xchg
mov
inc
(bad)
stos
xor
push
and
cmp
jl
fbld
xor
mov
jb
cmp
jns
cmp
jno
inc
repnz
adc
mov
dec
cmps
inc
rol
dec
mov
aad
sbb
or
out
sar
push
fistp
fs
je
and
xchg
fs
push
mov
stos
bsr
jmp
aad
jo
in
add
ss
cmp
jmp
add
imul
neg
cdq
and
fbld
inc
xchg
dec
pop
push
jb
shl
ret
pusha
and
jmp
inc
ror
adc
jmp
xchg
rcl
ins
push
jecxz
call
out
xchg
or
hlt
ja
xor
push
dec
into
shr
mov
cmp
push
retf
xchg
xchg
pop
fild
call
or
pop
cmp
es
mov
jae
pop
add
test
dec
js
retf
jmp
push
enter
idiv
into
ss
mov
cmp
out
nop
call
cmp
sbb
cs
mov
ins
mov
pop
dec
sub
in
daa
xor
ins
mov
call
call
mov
fwait
nop
retf
sbb
mov
das
(bad)
xlat
dec
pusha
aaa
jb
xchg
jmp
test
adc
add
and
cmps
fmul
rcl
adc
cmps
lods
sbb
push
aaa
aad
imul
jno
fsubr
push
xchg
inc
push
dec
inc
in
loop
sbb
jecxz
adc
dec
pop
mov
or
and
xor
cmp
push
loope
push
aas
scas
pop
lahf
test
inc
pop
fild
sti
int
hlt
in
mov
cmps
hlt
xchg
and
push
sub
(bad)
loop
jo
stc
and
push
sbb
mov
and
or
pop
ja
ds
dec
(bad)
push
call
test
xchg
xchg
fistp
test
int3
cmp
cmc
sub
inc
adc
xchg
fist
add
stc
jne
nop
test
out
sub
sub
jne
mov
and
cwde
mov
xchg
fstp
dec
push
xchg
jae
sbb
popf
outs
popf
jle
outs
das
sub
scas
push
mov
jecxz
jmp
dec
out
es
mov
mov
sbb
push
jge
xor
icebp
add
mov
icebp
fsubr
mov
ja
js
xchg
neg
sbb
out
pushf
xchg
push
pop
jl
or
lock
xchg
mov
loopne
lahf
cmps
cmp
ss
arpl
mov
push
mov
add
popf
sub
adc
popf
inc
les
sub
bound
call
repz
pop
add
movs
cs
pusha
xchg
cmp
push
pushf
jge
sub
out
jb
sub
push
xchg
ins
imul
dec
mov
test
add
fist
lods
add
mov
in
mov
sub
push
mov
and
and
outs
fistp
mov
xchg
pop
test
cmp
mov
adc
cmp
scas
cmp
div
inc
jae
into
mov
adc
les
ss
mov
pop
rcl
xchg
adc
aaa
ror
xor
lds
outs
(bad)
mov
cmp
cmp
mov
push
pop
sahf
cmps
xchg
sar
out
into
pop
add
mov
fadd
test
es
scas
pop
dec
shr
and
aam
cwde
cmp
in
(bad)
stos
adc
loop
or
or
cmps
rcr
loopne
mov
fcmovbe
pop
mov
inc
loope
add
xor
pop
mov
call
aad
addr16
and
mov
inc
xor
pop
push
rcr
inc
pop
mov
dec
shr
jb
push
(bad)
mov
pop
lahf
clc
pop
pop
or
cli
cli
pusha
or
in
cmp
enter
inc
mov
pushf
loope
dec
jb
sti
retf
(bad)
fcomp
mov
and
dec
retf
push
(bad)
popf
jle
in
cmp
jbe
icebp
push
aas
push
pop
jmp
nop
sbb
cmp
inc
stos
idiv
sbb
pusha
xchg
xlat
sub
scas
imul
push
out
not
cld
jle
lods
mov
jecxz
lds
sub
sub
and
mov
sub
jmp
inc
or
(bad)
push
nop
in
adc
mov
ret
fadd
(bad)
mov
sti
cmp
adc
scas
inc
adc
push
sbb
jo
jbe
movs
loope
fldenv
cli
das
adc
(bad)
jmp
ret
imul
push
scas
mov
mov
test
sbb
inc
sub
loopne
or
popa
pusha
aam
adc
(bad)
jae
sbb
mov
or
mov
(bad)
push
retf
cmps
arpl
leavew
test
daa
push
pop
mov
pusha
jo
loop
imul
inc
scas
aad
sbb
jp
lea
dec
int
nop
xlat
pop
(bad)
mov
sub
stc
sbb
dec
repnz
push
and
dec
jmp
push
into
shr
mov
sub
inc
xor
or
lods
fiadd
lea
push
pop
push
std
pusha
xor
mov
sub
sbb
test
and
js
xchg
sbb
cmps
add
sti
mov
xor
xchg
mov
xchg
je
inc
popf
int3
xchg
nop
sub
push
xchg
ja
cmp
xlat
add
stos
push
and
push
(bad)
(bad)
jne
mov
inc
mov
cmc
or
inc
dec
bound
cmp
fs
jmp
sbb
xor
xabort
imul
pop
lods
or
int3
sbb
xchg
push
in
jge
imul
daa
mov
xor
mov
xchg
jp
data16
loope
mov
shr
jns
inc
pop
dec
push
into
addr16
mov
(bad)
in
xchg
repnz
mov
cmc
push
add
cmp
(bad)
mov
push
mov
push
and
fidivr
mov
hlt
add
mov
shr
dec
push
outs
mov
pushf
pop
pop
cdq
(bad)
in
bnd
lea
std
sub
ins
sub
out
jne
jno
sub
cmp
xchg
sar
fld
push
cmp
xchg
add
repnz
dec
pop
out
imul
hlt
sar
clc
pusha
adc
add
test
dec
mov
dec
sbb
icebp
lock
arpl
mov
(bad)
and
mov
adc
jecxz
mov
je
jle
jne
jno
sar
jno
fisubr
(bad)
cdq
push
and
xchg
xchg
test
stos
inc
adc
cli
gs
ins
pop
jecxz
dec
adc
retf
sbb
pushf
add
pop
mov
push
test
add
jecxz
ror
mov
dec
cmp
fwait
push
and
adc
cli
sbb
sbb
popf
cld
pop
push
ins
dec
jecxz
push
jne
arpl
std
add
aaa
sub
sbb
jl
(bad)
sti
mov
dec
adc
cmps
jg
sub
rcl
in
cs
inc
enter
mov
push
adc
mov
cmp
mov
xlat
jle
cmp
xor
fdivr
inc
mov
imul
sbb
retf
ins
popa
inc
imul
mov
aam
jae
mov
cli
imul
std
xchg
cmps
adc
mov
or
or
jno
pop
jg
(bad)
(bad)
adc
(bad)
adc
hlt
(bad)
xchg
xchg
ins
pop
jmp
test
adc
(bad)
sti
jno
sbb
add
sbb
jbe
jl
out
mov
pop
add
frstor
out
les
loope
mov
sbb
das
or
mov
cmp
mov
xchg
xchg
fnstenv
mov
test
mov
repz
ins
ins
and
mov
mov
push
mov
pushf
sbb
pop
jecxz
retf
mov
jecxz
fs
movs
stc
sub
xchg
xor
xlat
and
out
xchg
ficom
ror
xchg
or
mov
push
xchg
xlat
sbb
sub
dec
dec
adc
adc
add
popa
inc
shr
(bad)
mov
sahf
outs
call
adc
mov
inc
adc
jnp
imul
rcl
(bad)
out
cmp
psubusb
dec
(bad)
xchg
push
in
div
xchg
movzx
pop
stos
mov
jmp
imul
clc
(bad)
pop
mov
loope
mov
loopne
test
push
mov
leave
cmp
ds
inc
cmp
imul
inc
movs
int3
push
das
popa
or
rcl
xor
and
mov
fisttp
lods
adc
lea
test
dec
in
lods
enter
(bad)
retf
push
loop
lock
gs
mov
scas
mov
pop
das
mov
repz
mov
xor
ins
sub
jmp
call
xchg
prefetch
or
fisub
add
fxch
sbb
sahf
mov
sbb
call
xor
fs
popf
hlt
stos
sub
pop
unpckhps
jae
dec
popf
jne
or
and
out
adc
sar
repz
sbb
cs
fldenv
movs
das
cdq
or
in
xchg
ror
inc
push
xchg
cdq
jns
call
loope
or
fcom
ds
fld
mov
movs
hlt
daa
add
dec
fdiv
popf
cmps
out
repnz
inc
das
jecxz
jge
movs
lahf
dec
xchg
stos
push
jno
jmp
jg
fadd
retf
loope
iret
stc
fbld
sub
sub
addr16
jno
xor
outs
xor
inc
jo
cdq
cmp
inc
sub
cmp
push
pop
out
dec
inc
pop
mov
inc
inc
out
jp
pop
push
lods
rcl
mov
jnp
add
mov
dec
inc
cmp
test
push
sbb
sbb
(bad)
adc
pop
pop
xchg
sub
mov
aaa
sahf
or
lock
(bad)
push
cmp
or
mov
mov
pop
dec
pop
mov
outs
dec
mov
lods
stos
sti
pop
loopne
retf
push
les
mov
jmp
test
adc
mov
inc
lds
cmps
jge
xor
mov
mov
dec
push
lock
daa
push
push
jae
sub
js
sub
pushf
div
out
stos
xlat
bound
mov
jb
add
fcom
mov
sub
dec
push
loop
fcomip
add
or
std
mov
out
sbb
cmc
dec
adc
jmp
enter
shl
sub
jecxz
or
movs
cmp
ret
fst
das
xchg
ror
jl
iret
jmp
(bad)
rol
js
es
fs
shl
stos
shl
stos
or
pop
or
lahf
cmps
or
dec
fsub
in
mov
pusha
test
out
aad
inc
sub
xchg
jmp
xchg
mov
sbb
push
aam
push
icebp
loope
out
out
mov
sbb
inc
stos
inc
xchg
popa
sub
popa
jge
jo
inc
sbb
or
out
mov
sbb
jno
ss
in
rcr
xchg
shl
add
scas
push
xchg
cmps
(bad)
clc
mov
mov
add
hlt
xchg
dec
ins
cmp
int3
repz
shr
mov
and
add
ret
cmp
or
jne
out
xchg
ins
test
stos
jg
stc
jno
outs
cli
pusha
cli
test
xor
lea
sbb
mov
inc
jne
or
cwde
pop
dec
sbb
adc
fnstenv
aaa
sbb
mov
mov
jl
and
and
cmc
fmul
shl
cmc
jl
jmp
fcomp
fstp
sub
mov
jae
inc
xchg
dec
and
mov
mov
xchg
add
pop
adc
mov
arpl
(bad)
mov
mov
outs
mov
mov
fcmovu
gs
mov
out
icebp
sbb
(bad)
or
push
pushf
loope
sub
push
lods
hlt
or
(bad)
rcr
sub
hlt
xor
xor
imul
fucomip
pop
mov
ror
pop
sbb
lds
sbb
mov
fiadd
inc
rdtsc
adc
mov
fs
add
cdq
fistp
ja
push
or
dec
retf
fild
inc
pop
cmps
inc
aaa
test
fsubr
and
sub
or
cli
pop
ss
and
(bad)
mov
repz
in
sub
jne
dec
push
push
mov
out
lods
lahf
mov
mov
(bad)
aas
das
sbb
mov
jmp
loope
(bad)
mov
xor
repz
retf
loop
sti
inc
call
(bad)
(bad)
je
aas
dec
sub
popf
outs
lods
retf
dec
and
inc
xchg
sahf
or
in
outs
inc
outs
xor
repz
addr16
sbb
jbe
(bad)
iret
test
ret
lea
mov
cdq
in
stos
push
mov
add
mov
sbb
lea
push
test
mov
xor
push
jmp
mov
add
dec
jp
jns
ins
cmp
stos
xchg
push
xchg
nop
sar
sar
sbb
cmp
push
mov
fs
jns
push
xchg
mov
push
hlt
push
pusha
repnz
movs
retf
ficomp
jae
mov
pop
or
pop
push
push
sub
xor
je
pop
xor
and
mov
int
mov
fcom
mov
loopne
aaa
mov
pop
inc
clc
add
pop
outs
sub
cmp
dec
retf
mov
jp
dec
mov
inc
fstp
(bad)
push
pop
stos
jbe
sbb
ret
xchg
bound
push
xchg
(bad)
scas
xchg
test
push
sar
pop
jo
xor
push
(bad)
sbb
dec
jecxz
and
mov
pop
mov
in
(bad)
dec
adc
addr16
push
bound
adc
dec
xchg
dec
or
jmp
test
fbstp
or
push
or
(bad)
adc
popf
or
mov
sbb
out
mov
dec
xchg
cmps
into
inc
jl
add
add
sbb
gs
jg
in
mov
idiv
cs
pop
push
dec
push
cmp
push
pop
aaa
push
jge
xchg
mov
(bad)
(bad)
or
pop
repz
xchg
stos
dec
jg
es
jae
inc
pop
icebp
push
inc
aaa
mov
movs
mov
cwde
popf
mov
jmp
mov
cmc
add
clc
lds
stos
push
pushf
xlat
cmps
xor
push
add
idiv
retf
dec
in
int
or
mov
daa
inc
in
mov
dec
push
jmp
sub
mov
rcl
lods
loop
xchg
xor
pusha
imul
cld
xchg
inc
mov
gs
in
shr
dec
push
mov
faddp
movs
pop
sbb
out
inc
(bad)
je
arpl
xchg
shl
jl
push
xchg
push
js
push
ins
ins
loope
mov
mov
cmp
inc
push
mov
pop
shl
aaa
stos
test
movs
gs
xchg
adc
gs
lahf
push
and
rcr
test
test
scas
push
jae
test
jge
pop
popa
fisub
mov
sub
jno
sahf
ret
xor
call
nop
mov
cmp
push
leave
dec
shl
lods
cmps
jb
rol
push
fimul
into
fst
dec
xor
(bad)
mov
sbb
and
xor
popf
stos
or
jg
ins
icebp
out
outs
fsub
sub
dec
mov
jg
or
imul
dec
(bad)
in
fdiv
inc
mov
dec
pop
std
mov
pop
dec
jge
push
cmps
sahf
mov
mov
movs
jl
xor
add
nop
cmc
enter
popa
hlt
popf
pop
xchg
and
adc
pop
(bad)
cmps
mov
cs
jae
shl
aam
es
stos
xchg
mov
inc
mov
and
jae
ror
int3
and
out
(bad)
or
jnp
push
inc
lods
sub
mov
in
mov
mov
cmp
jo
xchg
fimul
imul
imul
call
addr16
adc
cmp
retf
mov
outs
cmp
(bad)
mov
stos
js
or
test
rcl
or
adc
xor
std
jns
sbb
xchg
jge
pop
repz
xor
xor
scas
in
popa
inc
dec
iret
daa
mov
mov
shl
xor
lea
retf
adc
mov
or
loopne
push
lahf
mov
xchg
movs
pop
push
adc
jnp
xor
sub
push
xchg
mov
bound
push
xor
sbb
inc
adc
mov
test
rol
fld
or
or
shl
jp
jmp
pop
fwait
mov
leave
cmp
jb
mov
jle
dec
add
inc
xlat
jge
push
jmp
pop
mov
dec
or
arpl
(bad)
inc
or
mov
std
(bad)
dec
ds
jge
div
loopne
and
adc
idiv
pop
xchg
inc
test
fs
fistp
jg
mov
or
sub
retf
mov
xchg
sub
adc
in
push
cmp
pop
push
cwde
call
adc
mov
fdivr
pop
xor
mov
repnz
and
stos
ja
push
cmp
(bad)
fs
push
jb
push
sar
mov
loope
pop
outs
in
push
sub
call
fidivr
inc
xchg
lea
js
lods
fs
ss
jnp
xor
shl
dec
cmp
jle
push
adc
add
test
inc
ret
push
jae
cmp
test
out
(bad)
xlat
pop
xchg
retf
mov
(bad)
inc
mov
out
and
dec
or
neg
pop
ret
adc
das
popa
dec
jmp
sbb
loop
xchg
xchg
dec
retf
adc
jg
popa
push
push
cmp
mov
xor
mov
in
fcomi
gs
push
push
pushf
fwait
mov
push
dec
xlat
fneni(8087
arpl
shr
or
jp
xor
push
add
or
cmp
jae
cmp
xor
dec
aam
jle
mov
xchg
not
adc
ret
mov
inc
add
shl
shl
dec
(bad)
xchg
retf
dec
cld
nop
xchg
iret
push
jns
adc
cmps
pop
mov
sti
test
loope
inc
js
jp
mov
adc
adc
aam
int3
mov
rcl
dec
fs
sbb
mov
add
xor
fwait
or
test
push
or
xor
jl
inc
xor
mov
sbb
xchg
mov
es
xor
push
and
cdq
stos
jno
add
dec
adc
xchg
imul
shr
sub
xchg
mov
test
pop
and
xchg
add
sbb
loop
jg
pop
cmps
push
sbb
test
push
jle
sub
dec
jne
sub
jns
ficomp
or
and
fld
cmps
inc
jbe
mov
scas
push
inc
push
xchg
data16
loope
xor
sub
js
dec
cmp
inc
mov
xor
pop
or
loop
popa
fnstenv
enter
(bad)
ins
aad
sti
sbb
and
xor
inc
pop
push
hlt
xchg
sbb
sbb
jmp
add
xor
inc
pop
ds
in
pop
(bad)
std
add
pushf
mov
sti
mov
cwde
xchg
jecxz
xchg
(bad)
les
fwait
lock
lods
xor
into
pop
(bad)
cmp
jae
ja
les
cdq
dec
pop
sbb
inc
shl
movs
int
retf
xor
lds
rcl
fwait
call
call
cmp
inc
cwde
rcl
and
sub
out
shr
not
test
and
pop
es
das
cmp
call
test
aas
in
sub
jnp
lahf
ror
inc
xchg
add
retf
jge
inc
inc
jl
arpl
inc
sbb
(bad)
int
xor
cdq
sub
push
and
(bad)
loopne
sub
cld
aam
movs
in
pop
cli
adc
rcr
mov
sbb
pop
and
sub
data16
fcomp
mov
push
jno
ficom
mov
push
mov
cmp
aas
in
(bad)
js
jmp
fimul
and
add
mov
xchg
adc
mov
test
cmp
dec
cmp
ficom
xchg
mov
(bad)
jnp
cmp
mov
dec
ficomp
icebp
dec
add
mov
(bad)
and
mov
push
icebp
jno
mov
loope
imul
sub
and
inc
jge
ja
add
rcl
repz
lods
movs
dec
or
push
mov
dec
push
and
xor
retf
mov
fucomi
adc
rcl
and
arpl
lahf
dec
(bad)
es
push
mov
pop
push
mov
mov
call
jle
or
shl
push
test
stc
adc
cmp
jmp
mov
push
ss
jecxz
enter
inc
out
jmp
in
and
jle
sbb
xchg
fiadd
xor
pop
mov
push
mov
fiadd
lods
sbb
mov
xchg
add
sub
fistp
cmp
dec
sti
arpl
mov
jae
fld
shl
jecxz
or
xlat
cmc
(bad)
and
rol
mov
fdivr
xor
pusha
xchg
arpl
stc
fild
daa
(bad)
mov
das
test
and
pop
push
addr16
add
xor
mov
es
call
popa
adc
movs
call
icebp
push
ins
fild
aad
jmp
(bad)
nop
lods
jne
pop
test
movs
ds
mov
adc
pop
or
inc
jge
in
outs
push
sub
leave
jo
and
push
sbb
mov
mov
xor
repz
fisub
sub
push
(bad)
xor
xchg
jno
mov
inc
mov
xchg
popa
cmps
nop
imul
test
(bad)
clc
push
jne
jns
and
or
nop
dec
jne
ror
(bad)
jae
fs
ins
ret
aam
sub
cmps
out
mov
loop
repnz
pop
jp
or
lods
aaa
add
imul
inc
xchg
loope
mov
pop
mov
xchg
sub
es
fdivr
mov
mov
ins
rcr
xor
repz
add
or
pushw
mov
adc
jne
dec
push
inc
pop
in
push
cs
mov
out
jbe
(bad)
loop
and
or
loop
sar
xchg
sti
dec
pop
mov
jnp
jl
cld
fild
adc
scas
push
in
fwait
mov
dec
in
aas
call
test
add
rcl
mov
and
xchg
cmps
mov
test
pop
pop
inc
xchg
je
nop
mov
dec
pop
gs
idiv
xchg
sbb
ins
xchg
pushf
sbb
push
pop
mov
pop
and
jmp
ds
js
sub
push
pusha
fldenv
adc
mov
rcr
inc
xor
mov
lds
pop
push
stos
inc
rcl
(bad)
stos
jl
mov
enter
(bad)
mov
push
jbe
data16
dec
ret
mov
lods
xchg
inc
mov
jno
mov
xchg
outs
inc
or
pop
pop
and
(bad)
leave
mov
mov
xor
bound
aaa
les
es
push
ja
push
das
mov
clc
and
dec
in
adc
imul
repnz
add
test
je
xlat
(bad)
and
outs
loope
xchg
shl
mov
mov
inc
retf
adc
les
xchg
jae
inc
out
cmp
sub
or
and
mov
jg
add
in
dec
movs
push
aam
mov
jmp
iret
pop
dec
pop
add
or
cdq
mov
xor
shr
ss
popf
mov
dec
cld
cmps
out
push
cli
cmps
imul
mul
cmp
pop
add
mov
jb
xchg
mov
fst
inc
and
frstor
add
cmc
loop
mov
lods
dec
push
push
xchg
fmul
mov
and
in
popf
push
mov
add
sbb
push
adc
es
out
sub
in
jne
cdq
cmp
je
inc
fisubr
adc
scas
in
sub
fs
sti
or
sub
lea
sub
into
pusha
sbb
xchg
aaa
push
cwde
fiadd
pop
push
sti
data16
pop
mov
push
push
xchg
inc
sti
mov
mov
cli
data16
inc
fmul
stos
mov
sbb
inc
cmp
add
mov
clc
ss
push
pusha
fwait
cld
adc
fisttp
add
inc
rcr
xchg
cmp
lahf
xor
sub
xchg
sbb
mov
sbb
(bad)
mov
or
mov
imul
hlt
mov
out
shl
repnz
data16
inc
sar
sbb
inc
mov
push
scas
adc
xchg
scas
loope
sbb
mov
and
and
popa
mov
jge
cmp
cmp
cld
sub
push
mov
hlt
dec
cmps
imul
scas
(bad)
retf
(bad)
mov
ds
sbb
jmp
xchg
sbb
mov
or
and
pop
cmp
sub
loope
xor
inc
jmp
fisttp
je
test
fwait
ins
inc
mov
mov
mov
aas
loopne
in
int3
jnp
or
into
add
mov
lods
sbb
adc
out
in
add
std
push
add
and
xchg
mov
sub
stos
enter
mov
fbld
jmp
jae
adc
movs
in
inc
or
int3
nop
sub
pop
cmp
enter
jle
sbb
mov
xchg
test
add
sub
jl
cmp
stos
xor
sub
es
repz
pop
iret
sub
cmp
test
dec
hlt
pop
rol
xchg
retf
xchg
jp
loop
or
movs
sahf
loope
int
jecxz
jbe
mov
pop
mov
in
nop
je
mov
lock
lock
cmp
pop
test
or
sub
mov
sub
jno
adc
dec
cmp
and
xor
(bad)
jne
out
dec
outs
dec
idiv
and
cmp
ins
loop
in
sbb
mov
mov
in
scas
sbb
or
xor
leave
cmp
mov
mov
hlt
out
inc
int
pop
mov
jecxz
lods
in
neg
dec
adc
adc
xor
stos
or
adc
push
enter
dec
stc
pop
inc
xchg
neg
cs
and
push
xor
dec
jnp
jbe
stos
jg
mov
inc
loop
clc
sub
hlt
cmps
lods
(bad)
xchg
aaa
sub
loopne
es
(bad)
lock
dec
cmps
pusha
push
ds
push
je
or
pop
mov
in
xchg
cmps
fs
jbe
mov
or
push
add
ret
jb
loop
das
sub
add
(bad)
and
pop
frstor
mov
push
inc
loop
inc
jae
inc
sahf
pusha
mov
mov
stc
sub
push
add
out
pop
jb
test
rcr
jo
stos
pop
cmp
cmp
cmps
mov
xchg
jecxz
mov
inc
enter
sub
stos
dec
and
dec
jle
cdq
lods
inc
repnz
mov
pop
lock
mov
dec
(bad)
lahf
ss
test
xchg
fdiv
mov
push
lahf
cmps
call
push
jns
(bad)
into
arpl
fistp
fsub
and
mov
imul
hlt
mov
pushf
aaa
mov
push
add
stc
jae
mov
xchg
jp
fwait
mov
pop
sub
sbb
mov
cld
push
jae
lods
pushf
xchg
std
mov
pop
and
push
movs
popf
ins
repz
loope
inc
xchg
test
xchg
cwde
movs
and
jno
cmp
pushf
or
sbb
mov
xchg
fidivr
mov
loopne
aam
pop
mov
in
aaa
mov
iret
test
push
ins
mov
lods
push
cmp
enter
mov
out
pop
push
or
mov
mov
jge
popa
or
push
outs
gs
push
(bad)
jg
shl
dec
cmp
enter
popa
xchg
cmp
(bad)
ins
(bad)
sbb
dec
popf
inc
and
push
inc
push
mov
imul
push
push
test
lahf
fist
es
pop
mov
push
mov
shl
jl
lock
lods
inc
mov
or
mov
cmp
mov
jb
dec
cmps
loope
std
mov
sub
fcomp
pop
fs
xor
call
add
jbe
xchg
adc
push
repz
aam
outs
sbb
sub
pop
mov
(bad)
sbb
aas
sti
fisttp
sub
mov
sub
xor
inc
pop
add
add
outs
mov
mov
cs
movs
dec
aas
inc
out
mov
mov
repz
hlt
in
mov
pop
sahf
mov
mov
ror
lea
int3
fdivr
xchg
sbb
mov
cli
xchg
not
jns
sti
addr16
push
ins
push
aam
out
jne
xchg
retf
clc
lock
dec
dec
mov
sbb
push
stos
popa
lods
movs
stos
retf
push
(bad)
sub
pop
cmc
call
pop
cli
aam
jmp
mov
inc
and
(bad)
ds
outs
inc
add
add
mov
stos
sub
push
ins
shl
dec
pop
sub
mov
xor
cld
or
nop
dec
pop
outs
mov
jns
imul
out
push
xor
add
pop
lahf
out
mul
frstor
retf
mov
fwait
mov
cmp
fcmovne
clc
neg
mov
mov
mov
cwde
test
movs
add
push
cmp
sbb
clc
pusha
pop
sub
ret
sbb
or
mov
push
jo
cmp
mov
jle
sub
sbb
(bad)
cmp
jo
out
gs
mov
cmc
inc
mov
(bad)
ins
sbb
icebp
jbe
push
scas
jne
dec
adc
(bad)
sahf
inc
inc
fwait
cwde
imul
pop
int
add
mov
jecxz
jnp
cdq
adc
sbb
xor
cs
mov
adc
jp
ins
mov
loop
xchg
push
add
xor
mov
ror
aad
sbb
push
mov
mov
dec
sub
shl
dec
mov
ret
imul
sub
mov
addr16
pushf
add
jno
shr
push
xor
icebp
outs
cmp
and
jns
int3
and
repz
aas
lahf
ss
aam
adc
or
cld
(bad)
(bad)
test
adc
pop
fs
sub
push
rcl
popf
pop
inc
sbb
jmp
adc
(bad)
loopne
mov
sub
mov
(bad)
iret
scas
hlt
mov
mov
mov
inc
mov
rcr
sub
(bad)
dec
add
xchg
hlt
lea
or
dec
movs
cmp
add
fcomp
fwait
adc
mov
popf
lock
std
fisttp
sbb
xor
pop
addr16
push
push
add
mov
std
jg
xor
repnz
in
fiadd
cwde
adc
push
not
out
mov
movs
lahf
aam
mov
mov
cmc
mov
jbe
or
repnz
sub
cmps
pop
jae
sahf
push
retf
and
dec
arpl
mov
inc
ins
repz
popf
jae
mov
cmp
inc
fdivr
cmps
movs
mov
sub
ficom
jle
sar
mov
pop
jnp
mov
cmps
xchg
loop
out
cmp
inc
mov
int
sbb
adc
imul
or
lods
movs
int
or
ja
mov
jae
call
out
ret
sbb
mov
repz
xchg
jne
ret
neg
ds
pusha
jecxz
loop
mov
jp
push
push
pop
addr16
das
enter
inc
push
xchg
xor
aas
pop
iret
add
dec
and
js
adc
mov
and
xor
lds
popa
out
(bad)
fsubr
ds
cld
xlat
dec
neg
movups
(bad)
xchg
rcl
cwde
icebp
sbb
das
mov
mov
or
xlat
dec
rcl
or
xor
frstor
xchg
ret
pop
jns
pop
lods
arpl
pusha
and
retf
push
jge
gs
ficom
cmps
and
jno
mov
or
fstp
outs
pop
fwait
inc
push
cmp
xor
xchg
xchg
scas
xor
dec
mov
xchg
idiv
and
pop
dec
sub
jno
sbb
adc
scas
and
xor
(bad)
xor
mov
sub
xor
sub
dec
mov
inc
mov
adc
inc
mov
mov
cdq
lods
aaa
(bad)
jnp
xor
adc
sahf
push
jo
out
ja
adc
adc
mov
push
lods
pop
pop
out
sbb
push
int
or
or
cmp
dec
fcomp
inc
xchg
fbstp
stos
call
das
push
movs
into
cmp
or
inc
(bad)
push
rcl
stos
out
xor
retf
push
add
mov
imul
out
adc
jecxz
leave
mov
jg
(bad)
test
outs
out
dec
(bad)
jmp
retf
pusha
stc
(bad)
mov
je
not
pop
xor
imul
lods
out
clc
push
adc
mov
shr
inc
and
test
and
sub
call
dec
add
jge
add
adc
xor
add
add
sbb
pop
movs
pop
adc
(bad)
mov
enter
adc
pushf
not
punpckldq
test
cdq
push
add
loopne
mov
dec
jge
jg
and
adc
std
or
xor
lahf
fsubrp
(bad)
mov
push
fadd
lds
aad
sub
fld
add
or
push
rcr
inc
sti
add
stos
push
scas
ss
call
add
fimul
inc
ret
jne
fmul
xchg
arpl
out
(bad)
mul
test
lds
mov
ret
neg
and
(bad)
cmps
mov
(bad)
jmp
pop
xor
ror
mov
inc
push
shl
fiadd
imul
xor
call
jle
fnstsw
or
in
test
pop
pop
cli
mov
add
out
push
mov
or
ret
into
sbb
dec
data16
cmp
xchg
jmp
inc
lahf
or
pop
je
in
sahf
test
out
dec
lds
loop
(bad)
scas
dec
stos
nop
mov
inc
adc
xchg
adc
into
mov
cmove
gs
jns
(bad)
leave
mov
popa
sub
dec
mov
and
inc
int
mov
add
jns
neg
pop
add
hlt
sbb
push
je
retf
push
mov
sbb
or
adc
retf
push
push
mov
dec
mov
or
loope
jp
jmp
cmp
daa
ficom
mov
aam
cdq
sub
add
dec
adc
pop
ss
push
daa
int
pop
push
pop
add
stos
lods
das
in
lods
pop
adc
es
inc
and
pop
xor
dec
or
dec
inc
add
sbb
push
(bad)
dec
push
movs
push
xchg
fs
mov
(bad)
adc
scas
mov
mov
outs
outs
fwait
add
cmp
inc
fwait
pop
out
sub
mov
js
mov
cmps
xlat
mov
sti
aam
loopne
retf
sbb
aaa
push
lock
clc
and
leave
sbb
sbb
inc
ficom
xchg
outs
mov
sbb
dec
pop
fisttp
xor
sbb
adc
outs
lds
mov
mov
jae
and
aas
pop
sbb
pop
clc
adc
icebp
cmp
mov
xchg
or
pop
jge
in
jmp
push
into
mov
lahf
add
cmp
das
fiadd
xor
scas
jbe
inc
stos
stos
jo
add
(bad)
rcr
jl
inc
into
mov
sar
repz
(bad)
push
xor
jno
sub
sub
sbb
xor
jae
(bad)
aas
clc
or
iretw
cmp
stc
mov
cmp
imul
rcl
inc
inc
push
mov
adc
jge
mov
mov
imul
xchg
sar
xchg
dec
sub
push
jnp
jno
fs
stos
fld
and
pop
xor
cwde
out
sbb
xchg
xchg
push
loope
inc
adc
aad
adc
mov
icebp
push
push
movs
fwait
cld
sbb
outs
cdq
in
push
(bad)
mov
mov
int
iret
icebp
retf
jmp
cmp
sbb
bound
or
push
pop
pop
movs
out
arpl
aad
and
inc
data16
xor
data16
or
in
imul
test
pop
std
mov
les
retf
cmp
push
lock
xor
ffree
dec
add
jg
in
sub
mov
arpl
imul
test
(bad)
popf
mov
cmp
test
outs
inc
in
dec
popa
out
cmp
lods
shr
inc
inc
outs
lahf
cmps
jbe
mov
push
jae
mov
bound
(bad)
lahf
pop
out
and
dec
sbb
cmp
push
out
pop
imul
not
push
mov
or
fs
(bad)
mov
inc
div
add
cmp
pop
lods
mov
jns
push
setns
cmp
push
xlat
outs
push
mov
sbb
sbb
push
mov
idiv
push
add
adc
cmps
sub
out
mov
popa
das
mov
ss
std
test
mov
sbb
pop
(bad)
or
mov
test
jge
ret
sbb
rol
xchg
jne
ror
retf
imul
pop
shl
lods
jae
sbb
pop
cmp
push
pop
jb
inc
push
loope
mov
and
mov
cwde
(bad)
int3
ins
add
xor
shl
jecxz
fwait
or
mov
fldlg2
xchg
loopne
xchg
ins
xor
lods
add
rcl
in
fist
out
ja
in
mov
in
sbb
mov
(bad)
clc
cmps
or
fstp
push
imul
(bad)
aas
xchg
or
add
lods
mov
cmp
pusha
mov
fld
cmp
(bad)
sahf
nop
mov
pop
adc
and
ret
mov
jae
je
push
mov
popf
inc
pop
cmp
push
lds
shr
call
adc
push
hlt
retf
or
mov
mov
cdq
push
outs
retf
pop
jmp
jle
scas
idiv
(bad)
loop
shl
ret
enter
inc
adc
shl
pop
inc
clc
in
repz
cli
sar
xchg
dec
or
jl
mov
imul
jle
lock
pop
loop
(bad)
loope
push
retf
fdivr
adc
jp
lock
cmp
cmp
adc
jno
xchg
shl
in
in
or
jmp
pop
das
mul
sub
shr
js
int
or
mov
mov
mov
jns
dec
mov
retf
into
imul
call
ss
lea
xor
jb
xor
ss
pop
pop
dec
adc
mov
popa
mov
sub
push
and
xchg
jmp
xor
loopne
push
adc
js
mov
jmp
int3
adc
cs
push
jae
jmp
out
or
test
es
push
fwait
mov
cmp
loop
outs
jle
loope
adc
xor
dec
out
xchg
fnstcw
cmp
shl
icebp
dec
mov
int3
xchg
pushf
stc
fldenv
and
dec
inc
pusha
lds
retf
iret
aam
jnp
jecxz
xchg
pop
aam
xor
xor
or
(bad)
mov
test
mov
repz
sbb
hlt
dec
jle
jmp
sub
jae
push
call
ins
push
test
std
sahf
call
sti
addr16
(bad)
je
test
cmc
sbb
test
(bad)
fs
add
fisubr
jbe
lds
add
mov
xchg
jo
fild
shr
cwde
xchg
or
push
(bad)
mov
add
(bad)
push
jp
fst
sub
shl
iret
jmp
push
add
aaa
mov
inc
leave
call
cmps
mov
aad
pop
xchg
or
in
mov
sub
push
sub
fisttp
icebp
mov
pop
inc
aam
rcr
or
or
mov
sbb
xchg
mov
ins
shl
sbb
(bad)
loope
push
aas
fcom
mov
fiadd
xchg
out
jle
test
clc
leave
pop
rep
dec
sar
sub
sub
aam
mov
int
dec
stos
arpl
mov
add
outs
pop
sub
and
mov
stc
push
lods
push
mov
sub
sbb
cdq
imul
adc
outs
lea
cmps
in
jmp
movs
jecxz
add
mov
shl
leave
jp
fcomp
out
imul
popa
or
sub
cs
cs
jmp
fbstp
jae
mov
adc
and
mov
ins
pop
mov
outs
mov
cld
ja
ror
fnstenv
mov
outs
inc
pop
lahf
ds
mov
ret
dec
push
pop
dec
cld
bound
add
repz
dec
pop
mov
jne
jg
inc
jo
mov
ja
repnz
aaa
push
loop
sar
sub
pop
popf
pop
adc
sbb
rcr
or
retf
ret
clc
test
jmp
gs
sub
cmp
mov
mov
stc
jmp
inc
retf
sbb
dec
pop
pop
push
movs
push
gs
add
mov
repz
gs
icebp
xchg
and
das
mov
jle
push
es
retf
into
or
mov
lea
and
push
out
cli
xchg
jmp
and
retf
iret
(bad)
and
pushf
test
rcl
retf
out
mov
call
pop
lods
push
and
pop
pop
test
jecxz
sub
cli
jbe
mov
cmc
inc
mov
imul
sbb
idiv
jns
lock
pop
cli
cmp
mov
sbb
bound
adc
jne
fiadd
pushf
add
mov
cmp
mov
push
retf
ret
test
sbb
(bad)
sbb
inc
and
sub
(bad)
jl
test
xchg
fsubr
test
sbb
cmp
or
or
repz
dec
cmc
std
mov
cmp
mov
dec
sub
mov
mov
jle
stos
xor
out
mov
iret
scas
movs
mov
xor
repz
enter
mov
or
sub
mov
int3
or
test
imul
cmc
push
pop
cmc
lods
data16
in
dec
(bad)
mov
cmp
popa
repz
xchg
pop
clc
sbb
xchg
mov
icebp
out
cmc
cmp
add
pop
data16
dec
enter
dec
cmp
(bad)
mov
pop
push
fsub
dec
push
mov
pop
div
push
ret
sar
xchg
xor
dec
icebp
mov
ret
pop
pop
mov
or
fisttp
cmp
mov
daa
neg
sbb
mov
xor
pushf
pop
mov
test
stc
push
imul
jp
(bad)
cli
call
inc
(bad)
sbb
sub
pop
dec
loop
lahf
cld
mov
xchg
lea
push
cmps
dec
jp
and
xchg
test
sub
retf
pop
sub
or
adc
sub
jnp
inc
mov
jne
mov
cmp
or
add
dec
dec
xchg
(bad)
(bad)
int
and
mov
sub
iret
bound
loop
push
test
mov
or
(bad)
mov
xchg
rol
add
popa
add
xchg
xchg
jmp
pop
or
xchg
mov
jge
imul
or
mov
mov
push
inc
call
mov
push
ins
sub
jae
or
dec
or
xor
pop
aaa
sub
sub
pusha
aas
call
rcr
push
ret
(bad)
pusha
data16
es
inc
pop
ficomp
fdivr
mov
pop
jbe
rol
mov
xor
or
je
dec
(bad)
rol
fadd
addr16
(bad)
xchg
xor
jle
lahf
aas
outs
pop
arpl
cmp
jne
or
test
mov
test
fistp
(bad)
jne
aas
stc
popf
xchg
mov
aad
jmp
mov
imul
jecxz
cdq
neg
mov
adc
sub
leave
push
sub
ret
dec
or
sub
dec
pop
lds
out
sbb
les
cmp
mov
cdq
lahf
xchg
std
push
(bad)
shl
enter
jns
adc
ret
push
xchg
mov
mov
sub
lods
push
or
jmp
loope
fcom
sbb
cmp
push
sbb
add
pop
int
mov
cmps
mov
aas
pop
iret
into
adc
xchg
aad
fldcw
sti
push
js
scas
mov
das
add
xor
retf
adc
loopne
mov
pop
ja
or
sahf
mov
repnz
cs
mov
inc
cmp
aas
mov
inc
movs
xor
push
fdivr
bound
test
push
cmp
retf
pop
std
push
jbe
dec
push
sar
out
xchg
adc
pop
ret
rcr
outs
dec
push
fbld
or
ret
(bad)
cld
in
retf
imul
int3
xlat
stc
adc
fcomi
lea
dec
and
mov
pop
addr16
arpl
fidivr
xchg
out
adc
xchg
sbb
mov
mov
mov
sbb
popf
retf
ja
mov
push
pop
stos
call
cmp
int3
add
xlat
not
dec
(bad)
xor
jg
(bad)
out
div
pop
imul
pop
pusha
mov
or
bnd
fdivr
sub
mov
pop
cmps
or
inc
mov
into
ret
out
les
pop
sbb
lds
dec
push
inc
push
fist
ret
loope
dec
fldcw
push
push
adc
adc
icebp
dec
mov
cmp
mov
sub
loop
cmps
dec
shl
inc
sub
std
addr16
iret
pop
pushf
dec
imul
inc
push
in
dec
mov
cmp
clc
jno
das
cmp
cmp
test
inc
int
movs
adc
push
jg
js
add
mov
and
add
rol
dec
shr
adc
inc
es
test
dec
inc
lock
xchg
jmp
ins
pop
ror
sbb
mov
jmp
lods
inc
mov
add
aam
sbb
mov
mov
out
inc
ret
pop
xor
lods
push
adc
sbb
in
mov
sub
cmps
stos
iret
jg
int3
arpl
outs
in
jecxz
ins
adc
or
int3
clc
gs
mov
xchg
jmp
mov
test
clc
stos
dec
popf
ds
mov
or
and
add
ins
jno
arpl
cmp
ja
ins
shl
fldcw
pop
ds
cmps
int
or
loope
mov
push
jne
call
sub
mov
jne
mov
inc
xor
mov
dec
icebp
ds
adc
jmp
or
push
mov
pop
xchg
rcr
xor
cwde
push
(bad)
mov
xor
test
jmp
add
lds
fcom
jb
pop
ja
jecxz
fwait
js
xor
jp
fsubr
daa
push
test
sar
inc
sbb
icebp
jo
aas
movs
mov
mov
dec
sbb
bound
and
pop
adc
xor
mov
mov
mov
push
loope
dec
mov
sti
sbb
ins
mov
adc
gs
mov
pop
mov
mov
xchg
fnstcw
cmc
loope
add
mov
(bad)
std
jp
ds
hlt
enter
dec
icebp
lds
sub
mov
mov
or
mov
ret
lock
test
in
jl
xchg
add
cmp
mov
jmp
test
push
inc
dec
mov
mov
jnp
leave
sub
std
xchg
les
jmp
sti
push
(bad)
jo
push
popf
data16
inc
cmp
jmp
sbb
mov
sbb
fmulp
fdivr
jnp
lods
or
xor
fstp
loopne
pushf
inc
cmp
add
out
sbb
scas
mov
cmps
push
ret
push
cmp
lahf
add
push
mov
or
shr
(bad)
sbb
sbb
ret
mov
imul
xor
sub
mov
call
mov
(bad)
push
xlat
mov
js
fcmovb
or
es
imul
(bad)
xchg
sub
mov
pop
sbb
aas
mov
gs
cmp
ret
xchg
jns
pop
and
and
dec
aaa
xor
es
lods
mov
cwde
jnp
mov
cmp
xor
scas
cmp
mov
gs
dec
pop
inc
sub
dec
xchg
or
sbb
mov
in
fbld
inc
icebp
ja
sbb
ret
or
(bad)
xor
xchg
(bad)
retf
xor
sahf
inc
imul
out
push
mov
sbb
daa
mov
sub
(bad)
shl
arpl
adc
leave
bound
push
or
add
push
pop
sbb
sbb
cmp
fisubr
jnp
inc
loope
push
arpl
xchg
push
lock
(bad)
jo
mov
dec
(bad)
sahf
mov
mov
jmp
test
repnz
ds
dec
push
add
int3
sub
lds
push
jge
test
xchg
lahf
popa
and
mov
ins
in
dec
push
arpl
daa
pop
push
imul
or
mov
scas
mul
sbb
aas
inc
xchg
fmul
xor
inc
hlt
sbb
rcr
or
ret
clc
ds
stos
sbb
(bad)
ins
cdq
mul
pop
mov
loopne
mov
pop
jmp
inc
push
sub
xor
mov
ja
ror
xor
ret
clc
mov
jbe
xor
xor
clc
hlt
(bad)
push
bound
add
nop
call
movs
mov
aaa
inc
push
in
dec
inc
scas
jg
or
outs
xchg
xchg
sbb
lahf
cmp
(bad)
mov
ins
outs
xchg
cmps
xchg
call
mov
in
inc
js
data16
test
mov
cli
or
fsub
cmps
xchg
stos
lds
(bad)
jmp
pop
ins
cmp
sub
add
test
iret
aad
dec
lods
addr16
jne
sbb
ror
cmp
pop
call
mov
in
mov
mov
lods
and
rcl
push
(bad)
into
hlt
test
jmp
dec
clc
mul
shl
dec
popf
lahf
sahf
mov
pop
add
cs
inc
ror
adc
push
jmp
out
xor
jo
cmc
test
ja
pop
stos
inc
jge
pop
loopne
stc
inc
xor
cmp
xor
addr16
neg
pushf
sbb
sbb
aam
sub
push
mov
add
push
int3
cmp
pop
call
test
retf
fs
push
pop
push
jge
jno
adc
lods
xchg
stos
sbb
imul
dec
inc
in
adc
shl
adc
inc
cmp
adc
mov
xchg
lock
jmp
add
into
call
lods
cmp
mov
outs
int
inc
aaa
push
rol
popf
adc
jge
mov
dec
xchg
outs
cmp
cwde
dec
shr
add
addr16
cld
loop
add
loope
test
scas
xor
pushf
dec
mov
inc
jb
push
rcr
shr
jno
push
inc
dec
movs
pushf
adc
cdq
ins
jle
xor
data16
in
mov
imul
std
xor
call
fistp
aas
pop
xor
popf
cld
outs
cmc
clc
push
xor
push
sbb
test
push
cld
popf
repz
adc
add
mov
dec
aaa
cmps
dec
out
and
add
cdq
ret
test
and
pop
inc
addr16
sub
stos
test
cmc
and
shl
repnz
int3
sbb
inc
cli
mov
cmc
int3
cmp
sbb
cdq
cmp
inc
fidiv
sbb
mov
add
ds
fst
dec
mov
test
jnp
add
repnz
xchg
or
rol
cld
mov
iret
in
scas
inc
retf
add
pop
dec
fnsave
cwde
jns
fwait
imul
xor
lods
call
scas
jmp
out
vsqrtpd
loopne
push
cdq
sbb
sahf
fdivr
push
xor
sbb
jl
call
jns
rol
mov
mov
sub
nop
lods
dec
dec
xchg
jne
mov
out
or
test
and
(bad)
int
fnsave
push
cmp
(bad)
bound
arpl
scas
push
std
cmp
adc
xchg
mov
sbb
out
sub
xchg
(bad)
mov
pop
cmc
mov
in
xchg
sbb
aam
fiadd
cdq
sbb
aas
stos
sbb
sbb
xchg
dec
adc
sbb
push
mov
mov
in
out
leave
pop
xchg
xchg
data16
xor
adc
les
xchg
jge
jno
or
or
and
mov
stos
inc
int
and
call
fstp
(bad)
and
add
dec
cs
pop
jmp
mov
pop
xlat
lds
sbb
push
sbb
sahf
out
outs
pop
pop
rcl
(bad)
jb
inc
mov
mov
sbb
dec
sbb
mov
jbe
jg
aad
dec
sar
movs
(bad)
(bad)
(bad)
loopne
call
mov
repnz
pushf
mov
leave
call
rcr
xlat
mov
popf
shl
jmp
retf
mov
imul
xor
retf
aad
mul
pusha
fstp
xor
jmp
xor
pop
dec
and
jle
mov
adc
test
cmp
push
fwait
sub
out
sub
push
mov
pop
dec
adc
(bad)
jbe
hlt
or
dec
fcomp
pusha
sahf
(bad)
jmp
fst
hlt
in
cmps
mov
jge
and
sub
repz
jmp
push
push
movs
pop
add
mov
add
sbb
cmp
jge
scas
popf
(bad)
fs
nop
xchg
xchg
jle
dec
or
and
mov
popa
fidivr
cmp
push
adc
push
(bad)
or
popf
pop
imul
fld
scas
cmps
aad
loope
add
int3
pushf
ins
in
or
out
xchg
adc
stc
mov
push
fs
mov
outs
xor
sti
add
mov
pop
sbb
rcl
(bad)
lods
mov
or
addr16
or
mov
mov
pop
popa
dec
or
outs
xchg
sahf
shr
iret
(bad)
jo
out
data16
pusha
add
aam
test
pop
mul
(bad)
pop
(bad)
push
or
inc
into
in
test
clc
pusha
gs
(bad)
mov
pop
dec
jp
dec
(bad)
pusha
aam
in
sbb
mov
out
cmp
div
inc
lods
cli
call
sbb
jae
pushf
out
jle
add
pop
retf
mov
call
inc
repnz
adc
xor
fdivp
and
(bad)
popa
mov
mov
push
test
pop
xchg
lods
rcr
add
cli
jns
sub
fiadd
repnz
cmp
jnp
(bad)
push
mov
test
jno
add
jb
out
or
cmp
(bad)
sahf
mov
adc
push
stc
xor
test
add
and
mov
cld
jge
mov
mov
retf
fnstcw
(bad)
dec
in
jg
mov
repz
js
je
xchg
test
push
pop
lods
inc
xor
inc
nop
mov
imul
push
inc
mov
popf
ror
push
cs
icebp
call
cwde
jl
std
movs
push
in
mov
test
aas
push
shl
inc
cld
mov
test
daa
aas
mov
sbb
or
inc
add
sbb
jl
lahf
xchg
rcl
xchg
js
inc
ss
mov
and
mov
sub
inc
out
inc
add
ret
push
mov
jns
aam
scas
ret
loopne
out
push
sbb
push
jae
xor
int
icebp
jge
mov
inc
(bad)
sysenter
in
mov
or
movs
inc
inc
std
adc
jbe
xor
mov
add
inc
xchg
loop
les
pop
mov
cmp
lahf
scas
jl
or
and
add
shl
ficom
jp
pop
inc
pushf
pusha
dec
enter
retf
retf
ror
jae
js
lds
(bad)
add
sub
loopne
jae
(bad)
repz
pop
and
adc
lock
data16
stos
dec
xchg
scas
mov
retf
sub
bound
pushf
call
fcom
pop
in
or
sbb
and
mov
mov
push
cwde
xchg
push
outs
add
jb
pop
ficom
cmp
pusha
sbb
ds
dec
jne
adc
xlat
sbb
mov
lock
mov
pop
movs
cmp
and
scas
push
leave
adc
(bad)
fnstenv
int
outs
pop
nop
loopne
mov
imul
jnp
dec
cwde
adc
sub
popf
out
out
(bad)
mov
cs
mov
mov
loopne
xchg
jbe
mov
xchg
adc
fdiv
icebp
les
xor
add
pop
sbb
and
aam
xor
sub
or
idiv
add
das
(bad)
xchg
or
out
test
fcomp
sub
in
or
push
jne
pusha
sbb
and
lods
je
xor
js
adc
xchg
and
icebp
fisub
ss
psllq
call
int
mov
adc
sbb
cmc
out
add
and
out
inc
aas
repz
inc
movs
add
mul
cmp
cmp
dec
loop
into
ja
iret
jmp
repnz
mov
mov
jno
imul
mov
or
push
jecxz
call
(bad)
push
fild
cwde
xor
in
mov
leave
data16
sub
xor
push
imul
sub
jecxz
adc
add
out
cmc
mov
je
sar
outs
fnstsw
push
mov
arpl
and
add
test
outs
adc
lods
mov
out
fst
(bad)
push
sub
outs
ds
popf
mov
push
xor
enter
(bad)
rcr
mov
cmps
cmp
test
push
inc
push
push
out
mov
xchg
sbb
and
sbb
cmp
push
outs
rcr
jl
jp
add
jo
cmp
inc
ins
fmul
mov
pop
dec
mov
movs
cmp
and
mov
xchg
das
test
jecxz
sub
(bad)
int
cs
ret
dec
std
std
mov
mov
popf
mov
ins
test
das
sub
sbb
and
es
shr
lock
push
enter
pop
ss
pushf
push
sub
mov
lahf
(bad)
cmp
mov
sahf
and
rcl
sar
(bad)
adc
mov
and
stos
dec
sub
inc
inc
lods
sbb
inc
xchg
sti
jne
test
pop
aad
adc
push
jae
sub
je
fsub
lods
(bad)
not
dec
cwde
cmp
or
jle
mov
sub
xchg
or
jmp
push
aam
push
push
mov
push
cld
test
stc
in
mov
inc
cmp
inc
(bad)
dec
dec
(bad)
jb
mov
xchg
mov
mov
das
jmp
adc
test
jbe
sbb
out
pop
jmp
loopne
imul
xor
jecxz
hlt
sbb
sahf
in
add
fcom
xor
neg
es
pop
inc
sub
mov
addr16
mov
push
cli
retf
xchg
mov
sub
or
imul
stos
neg
or
repz
sbb
(bad)
jns
adc
inc
int3
xchg
clc
push
imul
jns
pop
aad
xchg
daa
dec
sbb
int3
xchg
out
out
das
sbb
xor
psubsw
pop
mov
int
jle
pop
cmp
mov
in
cmp
call
(bad)
rcl
lods
and
sub
outs
and
sub
movs
cmp
aam
push
adc
push
cli
pextrw
push
push
dec
inc
sub
cmp
mov
in
pushf
push
enter
sbb
pop
mov
popf
cmp
stos
cli
xor
lahf
call
sub
shl
cmp
dec
stos
sub
pop
add
mov
mov
ds
popf
mov
sbb
xor
int
jnp
push
sub
addr16
stos
popa
pop
addr16
pop
ds
repnz
add
outs
ins
ficom
hlt
fs
jg
jb
sub
xor
rcl
xchg
addr16
inc
jo
jmp
stc
stos
aad
inc
adc
xor
or
scas
mov
ret
xlat
lds
cmp
cwde
sub
test
loope
sti
fisubr
mov
test
mov
adc
mov
jmp
dec
mov
xchg
data16
lds
jmp
push
ds
fnstcw
cmps
lods
cmc
sahf
stos
xor
push
dec
or
fmul
add
mov
(bad)
xchg
test
xor
adc
cwde
aaa
and
jmp
and
jecxz
mov
xchg
mov
out
jp
xchg
pop
out
out
xchg
fprem
sbb
push
and
push
test
or
mov
int3
add
mov
jno
inc
xor
cmp
movs
sub
call
pop
and
jle
push
pop
push
ins
cwde
xchg
xor
jb
or
sahf
jbe
scas
fisttp
mov
sbb
ins
ret
add
fcom
adc
add
cmc
aaa
push
inc
bound
repz
pop
push
xor
dec
imul
fwait
icebp
xor
imul
xor
inc
sub
xchg
sbb
jo
adc
mov
or
push
fs
shl
scas
sub
leave
ins
je
sub
ror
cmp
sub
cmp
push
xchg
stc
mul
adc
sub
arpl
arpl
mov
dec
jbe
out
push
xor
je
shl
xor
arpl
(bad)
cmp
sbb
scas
and
pop
add
jne
neg
repz
mov
and
and
mov
or
dec
adc
test
or
pop
xchg
ds
mov
ret
add
add
mov
lods
mov
call
mov
and
adc
push
test
(bad)
cli
sbb
mov
ins
gs
inc
call
fstp
cmp
sub
push
dec
jmp
lods
rcl
ret
jecxz
mov
mov
hlt
push
xchg
sahf
sbb
inc
or
sti
popf
push
cmp
cmp
aad
(bad)
or
mov
pop
pop
mov
jbe
in
or
mov
cmp
jmp
mov
ret
xchg
xchg
les
push
adc
mov
push
sbb
jl
jbe
cmc
push
adc
in
adc
shr
sub
fmul
js
or
inc
inc
or
mov
out
in
sub
lock
es
cld
push
pop
pusha
dec
mov
stos
test
inc
sti
int
idiv
out
pop
xchg
das
mov
das
jne
arpl
movs
dec
call
loop
iret
retf
xor
add
push
popf
out
dec
loope
mov
push
jl
and
inc
test
imul
mov
adc
jmp
pop
fst
add
in
sar
mov
jns
jp
hlt
sub
jg
or
imul
dec
xchg
jb
lods
loopne
mov
push
pop
sbb
stos
mov
popf
aas
in
in
inc
push
xor
stos
cmp
xchg
cmps
push
sar
or
cmp
ficom
popf
arpl
cwde
pusha
out
jo
cmp
cli
sbb
int
pop
sbb
xchg
adc
add
inc
je
les
(bad)
cdq
mov
mov
adc
imul
mov
mov
dec
xor
imul
mul
xchg
jb
(bad)
cmp
pop
pop
xchg
test
cmp
adc
ficomp
sbb
lea
add
sar
movs
mov
scas
in
out
hlt
call
sub
lods
adc
inc
je
and
mov
scas
pop
lds
inc
mov
dec
mov
push
stos
sub
je
dec
push
sub
cmp
mov
push
pop
push
iret
jge
jp
jmp
mov
fsubr
pop
test
ficom
fld
bound
popa
jne
js
push
rol
cwde
or
stc
outs
test
fisubr
jne
pop
mov
movs
or
fild
mov
sbb
scas
(bad)
xor
sti
add
fwait
fs
movs
stos
xchg
rol
inc
mul
scas
jmp
pop
sub
xor
and
jl
add
pop
rol
mov
cmps
fdivr
scas
jo
jl
dec
push
fst
cld
inc
xchg
fild
adc
sub
sub
inc
iret
pushf
call
push
sub
fdivr
test
inc
stc
or
shl
push
mov
xchg
and
xor
aas
jne
mov
scas
add
pop
dec
call
and
loope
hlt
mov
cmps
lods
ror
imul
ror
sbb
ficom
pusha
xchg
cmps
mov
inc
mov
xchg
test
out
pop
cmp
push
inc
inc
mov
mov
stc
in
popf
jbe
cmps
and
mov
fadd
in
daa
xchg
inc
popf
pop
lea
sti
xchg
push
rcl
repnz
mov
and
push
cs
sahf
mov
or
in
inc
or
aas
mov
fisub
popa
das
stc
out
out
add
test
jno
test
push
lahf
sti
aas
rol
shr
adc
int3
jmp
adc
jecxz
xchg
retf
ja
mov
ins
sti
in
mov
mov
mov
es
dec
pop
jns
and
in
fcom
sub
push
adc
movs
sub
lahf
mov
call
or
jp
xchg
jecxz
add
dec
mov
pop
jecxz
in
cmps
xor
daa
xor
jae
fwait
test
or
dec
sbb
jmp
stc
mov
outs
repz
sbb
rol
mov
push
or
or
or
inc
pop
imul
mov
loop
xor
adc
xchg
shl
cwde
sbb
ja
jl
int3
and
jae
jp
jbe
cmp
lahf
mov
sar
sbb
out
sahf
aas
das
shl
scas
outs
pop
lock
loope
int
sub
test
(bad)
pop
xchg
out
aam
out
push
fstp
fs
cmc
cmp
mov
imul
xor
mov
mov
pusha
cld
ror
mov
test
in
sub
aam
not
bnd
or
popa
adc
mov
ficomp
jo
mov
stc
lods
mov
adc
pushf
mov
add
rol
or
or
or
and
iret
jae
mov
cmps
mov
(bad)
clc
sbb
jmp
mov
mov
pop
pop
sbb
aaa
rcr
mov
push
or
jp
jmp
push
out
sbb
std
fisub
in
sub
push
movs
and
mov
xor
inc
aad
and
cmc
pop
xor
xlat
inc
repnz
je
sahf
test
and
add
test
retf
mov
jbe
out
push
add
xor
dec
pushf
outs
xlat
xor
push
push
push
cld
aam
adc
jnp
inc
pop
fnstsw
cmps
in
jmp
mov
jp
and
mov
jle
shl
fistp
inc
and
dec
push
pop
call
aaa
loopne
inc
loop
aas
stc
or
mov
neg
mov
stos
pushf
push
jne
pop
int
push
xor
mov
mov
cmp
ss
adc
mov
pop
sub
aad
aas
sbb
mov
jo
jbe
aas
in
push
inc
jno
movs
outs
jne
jnp
ret
push
sbb
mov
stos
aaa
sub
push
adc
jl
ins
xchg
xchg
(bad)
push
jmp
mov
inc
ror
push
cmp
std
mov
ret
leave
pop
ins
addr16
retf
(bad)
fs
cmp
lds
mov
push
fwait
jl
jbe
jmp
mov
mov
lds
rcl
in
loope
loopne
icebp
add
push
mov
jne
jns
pop
adc
cmc
cmps
sub
call
push
jnp
sbb
ret
xor
test
xor
mov
clc
sub
or
loope
fisubr
cmp
loope
cld
outs
push
out
pop
fcmovnb
push
inc
mov
and
loope
jo
sub
loopne
or
mov
adc
adc
fwait
rol
inc
jge
jne
cmps
dec
push
shl
cmp
ret
out
sub
fs
dec
data16
movs
jmp
test
pop
pshufw
fadd
add
std
imul
pop
test
jne
xchg
inc
aam
mov
ret
ret
mov
outs
les
xchg
in
gs
jl
ins
not
cmc
mov
iret
mov
repz
pop
imul
es
mov
(bad)
rcr
test
repz
push
lds
neg
xor
jg
jae
ficomp
add
idiv
stc
dec
inc
jge
mov
fsubr
loop
pop
loopne
sbb
push
pop
sbb
aas
enter
jmp
in
test
dec
push
imul
loop
shl
sbb
pop
pushf
retf
dec
sub
xchg
and
loopne
mov
mov
or
arpl
jg
and
in
out
shr
sbb
xchg
or
addr16
xlat
mov
test
mov
popa
jne
lods
pop
jge
in
sub
sub
adc
mov
test
sbb
mov
xor
jnp
cmps
ror
into
sahf
(bad)
push
aam
pop
sti
cmps
out
int
lahf
cmps
sbb
jno
outs
nop
aaa
rol
cmp
mov
lahf
push
mov
add
push
fisub
or
or
sub
int
fst
into
data16
pop
push
xor
jno
ror
retf
xchg
(bad)
je
shr
push
out
xchg
jecxz
and
aad
or
mov
movs
into
xchg
and
test
push
(bad)
loop
push
outs
cmp
mov
pop
int3
mov
das
retf
xlat
daa
xchg
out
cmps
xor
push
xchg
inc
fimul
jmp
xor
lods
xor
xchg
mov
mov
ins
cli
jmp
push
aas
pop
ficom
shr
or
out
add
aas
jno
lds
inc
xchg
cdq
jmp
pop
not
aas
cmp
xadd
pop
mov
dec
xchg
adc
xchg
add
xor
gs
movs
pusha
sbb
sbb
pushf
jne
inc
scas
loope
jg
xchg
repnz
out
fs
out
dec
sub
out
ret
xchg
ins
ret
shl
sub
cmp
repnz
adc
ror
jle
stos
(bad)
mov
mov
stc
sahf
cdq
loopne
loope
(bad)
in
push
and
adc
pop
clc
sub
leave
sub
aam
mov
mov
push
mov
adc
call
int
dec
in
xchg
mov
xchg
cdq
into
in
jmp
test
pop
sti
aaa
xchg
dec
sar
popf
test
adc
clc
cli
jnp
push
out
cld
ret
xchg
sub
(bad)
arpl
push
xor
jb
pop
mov
dec
fcomp
test
in
and
inc
fidiv
pusha
mov
push
das
mov
push
jns
aam
aaa
aam
adc
adc
js
jmp
ret
call
cmc
xor
xchg
cli
dec
sub
iret
ins
adc
dec
jp
(bad)
sti
dec
into
std
xchg
pop
cmp
mov
xchg
lahf
xchg
mov
jmp
jecxz
(bad)
aam
pop
mov
test
and
push
stos
repz
ins
inc
mov
cmp
pop
shl
dec
int3
push
push
repnz
mov
lds
pusha
sahf
or
in
mov
test
xchg
out
push
adc
addr16
arpl
mov
adc
(bad)
(bad)
push
cmp
lea
push
test
mov
mov
or
mov
add
stos
xchg
shl
push
pop
xchg
int
movs
mov
jbe
xor
sbb
jae
int3
or
lock
(bad)
hlt
push
or
sub
imul
mov
lock
scas
ss
(bad)
cwde
sbb
lock
movs
inc
ss
and
jmp
adc
fsub
push
mov
jno
push
sbb
(bad)
jecxz
addr16
jmp
xor
dec
das
xor
push
movsx
xchg
and
pop
loopne
js
mov
or
imul
outs
xor
aam
loope
cmp
adc
jle
push
jnp
ret
mov
pop
push
add
outs
aas
adc
adc
sbb
popa
jle
retf
vmulss
jno
js
enter
and
pop
inc
test
mov
or
push
ror
lahf
push
ss
xlat
mov
mov
daa
sbb
inc
fistp
xchg
es
outs
mov
xchg
sbb
mov
cmp
inc
loope
daa
adc
scas
push
mov
inc
push
ret
dec
int
or
pxor
iret
push
in
and
hlt
out
dec
lahf
test
mov
pop
bound
pop
mov
pop
pop
hlt
ret
sub
lods
hlt
or
nop
stos
aas
mov
add
pop
mov
xchg
adc
jo
or
and
sbb
jp
shr
dec
leave
bound
sahf
fdivp
pop
movs
or
sahf
pop
aam
dec
mov
pavgw
(bad)
repz
pop
pop
sbb
xchg
ss
or
js
mov
movs
sbb
js
mov
mov
xchg
cmp
dec
ins
imul
ins
shr
xchg
mov
push
test
mul
push
dec
push
jecxz
inc
mov
lahf
mov
dec
test
das
outs
mov
mov
(bad)
jge
test
xlat
dec
neg
shr
repz
push
out
test
dec
cmp
(bad)
jg
mov
div
pop
push
xor
bound
sub
loop
jo
and
movs
cmp
inc
dec
bound
cmp
(bad)
int
je
leave
cmp
movs
cmp
xchg
or
jmp
cmp
xlat
fld
mov
adc
jns
mov
pop
mov
in
jno
imul
pop
retf
xor
pop
retf
adc
cmp
call
mov
sub
mov
in
pop
or
popa
xor
xor
arpl
xchg
xor
iret
dec
es
retf
pop
mov
dec
sub
or
dec
push
cmp
jl
push
sub
loop
cmc
mov
fnstenv
xor
out
inc
(bad)
mov
jbe
and
sub
test
shr
in
ret
into
arpl
push
bound
scas
sub
mov
loope
dec
and
loop
pop
in
cli
jo
xor
fwait
push
arpl
add
clc
cmp
cmp
jae
bound
je
add
(bad)
sar
test
imul
adc
mov
add
cmp
inc
cmp
inc
retf
stos
xchg
pop
sub
jo
cmp
lds
jnp
scas
inc
xchg
sahf
pop
mul
mov
sub
adc
pushf
jp
mov
fld
xor
push
int3
dec
and
xor
fwait
sbb
inc
jae
add
mov
xchg
cmp
xor
and
bound
cli
xor
lahf
adc
std
lock
fiadd
adc
jl
mov
xchg
mov
hlt
and
and
adc
or
mov
adc
jb
mov
scas
jns
jle
inc
ret
jne
out
in
or
cmp
mov
daa
or
mov
add
xor
xchg
mov
xchg
ja
daa
mov
mov
mov
arpl
push
movs
pop
stos
or
cmp
jmp
cmp
xor
dec
daa
lods
mov
add
scas
pop
pop
xchg
jnp
push
xor
dec
cld
sub
sar
jge
cmp
sahf
retf
jno
adc
int3
ins
jl
in
pop
adc
es
in
test
(bad)
mov
sub
in
jmp
cmp
push
je
or
sbb
imul
ret
ret
data16
xchg
call
sahf
xchg
pop
sbb
lods
movs
mov
mov
jb
push
sub
ret
js
add
mov
jb
xchg
stos
and
retf
cld
aas
ficomp
stc
pop
imul
or
lods
dec
pop
sbb
je
add
(bad)
dec
loopne
neg
lea
jnp
jns
rcr
outs
inc
stc
into
push
inc
sbb
inc
or
and
sbb
jmp
cmp
add
xor
sti
(bad)
jmp
inc
fld
(bad)
retf
mov
std
push
pop
rol
and
cdq
ficom
icebp
loopne
inc
in
sbb
dec
nop
or
inc
mov
clc
cmc
sub
push
repnz
xor
outs
fwait
jmp
retf
lods
sub
sbb
ds
push
int3
push
pop
ja
rcl
jg
ret
mov
cmp
pop
lods
cmp
xor
adc
mov
scas
fsub
mov
sbb
leave
xor
(bad)
pusha
ja
xchg
pop
xchg
pop
or
mov
cmp
test
cmc
sbb
outs
xor
rcl
inc
call
pop
scas
pop
mov
(bad)
add
pop
nop
jno
test
and
xchg
sub
out
and
pop
adc
mov
mov
sbb
jmp
sbb
xchg
dec
aas
imul
and
xor
shl
xchg
cdq
retf
and
push
(bad)
jmp
fst
int3
xchg
inc
jne
je
test
leave
(bad)
cmps
test
in
dec
sub
ss
inc
dec
in
xchg
and
cmps
es
ja
push
cwde
add
daa
or
mov
js
popa
mov
popa
imul
add
cmp
call
sbb
add
sbb
or
push
rcl
mov
rol
sub
lds
test
call
popa
pusha
lea
dec
adc
xor
jb
xlat
cli
push
sti
dec
push
inc
movs
jb
jbe
(bad)
ds
imul
fbld
mov
jmp
jge
pop
sbb
sbb
inc
mov
dec
add
imul
jge
adc
fcmovnbe
pop
xor
mov
add
jmp
or
mov
and
sub
adc
sub
call
jmp
inc
fdivr
cmc
or
cmp
mov
pop
mov
mov
mov
push
icebp
cdq
adc
loopne
xor
sbb
cld
xchg
jb
sub
push
mov
nop
sub
pop
nop
int
jecxz
popf
sti
jnp
push
cmps
sti
adc
mov
pop
dec
cmps
dec
sub
add
(bad)
ins
in
mov
in
(bad)
xor
add
stc
in
sar
and
aas
imul
mov
pop
mov
mov
push
pusha
scas
and
add
add
xchg
and
movs
push
sbb
js
out
pop
cmc
sbb
(bad)
push
push
jae
pop
push
scas
sbb
hlt
jg
xchg
inc
retf
cmp
xchg
mov
add
jmpw
cli
addr16
test
leave
movs
cmps
jg
aas
adc
inc
xchg
pushf
adc
test
out
push
xchg
jbe
pop
add
ror
adc
aad
not
push
jmp
imul
xchg
xchg
stc
jge
mov
idiv
shl
psubq
out
cmp
mov
or
jle
test
pop
ins
xor
sbb
std
jmp
jb
in
xor
xor
dec
jmp
pop
cmp
xor
sahf
push
ret
wbinvd
lock
cmc
push
int
xor
mov
mov
pop
inc
ins
fimul
repnz
jne
inc
addr16
xchg
xchg
sahf
fadd
cmps
in
out
sub
iret
pop
sub
mov
add
inc
cld
add
push
fisub
sbb
imul
and
xchg
xlat
fisub
test
lock
adc
xchg
lock
push
mov
dec
std
neg
movs
mov
lahf
in
dec
lock
inc
ins
rcr
xor
icebp
pusha
xchg
repnz
ds
mov
lods
(bad)
push
aad
test
or
out
dec
mov
leave
imul
repz
cdq
repnz
out
(bad)
dec
leave
mov
aam
data16
jb
add
das
movs
sub
mov
pop
adc
push
mov
aaa
mov
ret
daa
sti
call
das
je
mov
mov
movs
fld
mov
cmp
cmp
mov
jmp
jmp
jbe
dec
ficomp
test
cdq
mov
rol
aad
(bad)
stos
sbb
cmps
scas
pop
push
xor
jp
sub
out
popa
or
cmc
xchg
inc
aam
sbb
add
fucomp
inc
mov
xor
cdq
add
shr
ins
inc
and
dec
xchg
sbb
push
dec
std
inc
fs
push
clc
pop
dec
xor
dec
sub
inc
push
adc
ret
mov
cmp
sub
ror
push
push
cmp
(bad)
(bad)
in
adc
(bad)
(bad)
mov
inc
fistp
sbb
xchg
and
iret
outs
loop
leave
or
mov
inc
inc
inc
jns
mov
sub
fdiv
je
jb
aas
inc
add
sbb
mov
mov
xchg
fwait
loope
and
push
ss
sub
inc
xchg
mov
add
(bad)
fild
xor
mov
xchg
push
push
aas
stos
xchg
or
and
inc
sbb
dec
push
pop
in
mov
dec
push
mov
stos
fmul
mov
push
cli
test
push
ins
xor
pop
(bad)
loop
sbb
jp
cdq
pushf
xchg
adc
sbb
mov
jnp
(bad)
shl
fdivr
idiv
push
ins
mov
inc
test
mov
jnp
rcl
out
bound
out
shr
sub
inc
mov
cmps
pop
fstp
pop
cmp
mov
lods
push
jns
int3
popa
fiadd
adc
(bad)
jns
mov
sar
fisubr
fdiv
jmp
icebp
cmps
(bad)
sub
mov
inc
and
addr16
mov
aaa
push
cmp
fnstcw
cmp
dec
test
mov
inc
cmps
imul
cld
add
jmp
test
push
or
cwde
pop
mov
xor
mov
xchg
(bad)
bound
jp
in
dec
pop
(bad)
test
cmc
in
and
pushf
scas
js
es
loope
mov
or
xchg
mov
mov
(bad)
mov
sbb
pushf
xchg
xchg
stos
imul
and
mov
sub
ds
scas
ror
push
mov
jmp
push
xlat
leave
or
xchg
pop
dec
sub
mov
jbe
(bad)
aad
push
sub
lds
ja
jle
(bad)
xlat
pop
je
test
cmp
inc
sub
mov
retf
push
mov
sar
retf
nop
ja
or
fidiv
jno
pop
cmp
(bad)
icebp
push
fcom
std
cmp
icebp
jns
pushf
pop
pop
jmp
adc
(bad)
scas
or
(bad)
sti
int
(bad)
into
xchg
lods
adc
cwde
or
ins
aam
push
push
inc
clc
add
and
mov
dec
xchg
mov
sub
outs
movs
xor
sub
inc
dec
loope
jae
jno
xchg
fs
and
loopne
loopne
dec
lahf
scas
pusha
and
arpl
retf
mov
test
push
xchg
sbb
cmc
or
clc
pop
fs
cld
dec
arpl
and
fidivr
aaa
mov
hlt
ja
inc
jb
dec
imul
call
pop
or
clc
out
ds
inc
loope
mov
and
add
or
adc
sbb
and
dec
call
test
inc
or
inc
xlat
xchg
adc
cli
jne
das
sbb
adc
push
data16
out
mov
xchg
adc
jns
ds
inc
jg
mov
or
or
xor
jnp
fwait
xchg
xor
jl
sub
ror
mov
inc
out
test
rol
xlat
fiadd
movs
rcr
xor
outs
pushf
jmp
push
sbb
cmps
jmp
jg
sub
push
push
inc
mov
add
mov
lock
mov
push
sbb
dec
mov
and
cdq
loopne
aam
dec
lods
fiadd
shl
pop
cmp
xor
ret
repnz
mov
cwde
shl
fldcw
pop
inc
cmps
and
and
lock
mov
ss
(bad)
sub
and
xor
dec
(bad)
lahf
sbb
mov
push
leave
mov
(bad)
push
mov
mov
and
fwait
mov
(bad)
or
cmps
ror
sbb
jmp
cmps
or
dec
test
call
ficomp
or
not
push
test
addr16
dec
sub
fadd
xor
ds
add
jne
dec
(bad)
pop
out
push
in
ins
lods
mov
smsw
and
fs
adc
push
fstp
xchg
leave
jmp
mov
adc
cmc
pop
cli
adc
adc
out
js
pusha
ds
adc
dec
jp
ins
jl
push
xchg
inc
(bad)
and
pop
mov
arpl
emms
xor
out
fcomp
lods
rcl
loopne
xchg
xchg
mov
adc
cs
and
jns
ja
jno
int
stos
cli
or
(bad)
jo
aas
lods
mov
popf
fs
movs
es
sti
jg
pop
mov
retf
adc
sub
bnd
cmp
imul
sbb
js
cmp
sbb
icebp
push
lds
or
mov
enter
adc
(bad)
sbb
dec
ficomp
push
ret
or
leave
push
jno
inc
ds
push
pop
aaa
xor
not
pop
mov
jne
into
in
das
aas
xchg
cld
fisttp
and
repnz
rol
cdq
fisubr
mov
clc
jmp
icebp
inc
fbld
cmp
mov
mov
sar
xchg
les
stos
dec
dec
outs
push
imul
pop
(bad)
mov
cmps
dec
push
pop
int3
and
aam
mov
dec
loop
test
cmp
out
lods
cmp
or
xor
dec
mov
aaa
and
push
sub
mov
in
mov
lock
or
in
mov
aam
push
or
imul
and
pop
shr
or
add
mov
cmp
outs
mov
std
jbe
inc
outs
pop
test
pop
and
(bad)
adc
daa
inc
or
add
and
(bad)
push
xor
push
cmp
in
dec
repnz
movs
dec
ret
xchg
repz
sahf
stc
xor
pop
bound
mov
inc
aaa
int
mov
xchg
adc
fnstenv
inc
rcr
fcomp
jg
stos
call
xor
xor
fmul
sbb
(bad)
xchg
push
arpl
cmp
js
leave
in
jmp
mov
add
add
or
ins
lahf
xchg
push
rcl
dec
or
mov
sbb
push
mov
bound
inc
jbe
mov
mov
cmc
pop
fs
shl
test
jne
mov
mov
cmp
mov
xchg
or
adc
xlat
sahf
pop
ss
sbb
cmp
mov
pop
ins
sub
sar
add
or
ret
adc
rcl
and
stos
cmp
mov
lahf
adc
sub
push
std
and
mov
or
inc
jno
cld
hlt
call
cli
ror
movs
fwait
cmp
xchg
mov
out
jb
jmp
mov
push
push
jo
dec
push
push
ret
fidiv
pop
add
jp
lods
jecxz
es
enter
rcr
stos
lock
ja
mov
pushf
push
push
dec
pusha
sbb
xor
mov
push
dec
es
retf
jmp
fdivrp
fimul
ins
push
dec
add
out
lods
(bad)
cs
(bad)
shr
jg
jmp
jb
movs
aas
ret
loopne
jo
and
xor
xchg
mov
gs
es
aad
(bad)
sbb
cld
in
jmp
in
repz
xchg
out
mov
jge
call
movs
adc
cmp
ins
xchg
clc
nop
jne
popa
sbb
push
lods
stos
mov
mov
cmps
cmc
or
daa
xchg
push
lds
or
and
xchg
inc
test
stc
fnsave
jo
xor
push
mov
shr
dec
in
pusha
push
test
jns
sub
imul
gs
(bad)
and
into
fst
or
and
dec
aad
push
pop
mov
cli
pop
mov
hlt
popa
push
loopne
inc
xor
pop
jne
int3
or
lds
arpl
movs
pop
dec
push
mov
cmp
mov
jle
jae
cld
inc
(bad)
aaa
and
adc
or
arpl
jp
int
stos
push
jmp
pop
loope
and
clc
and
adc
shl
push
mov
and
pop
and
pop
(bad)
jnp
daa
inc
add
push
xor
and
test
mov
xchg
sbb
dec
xor
xor
jp
xchg
push
jmp
jg
cdq
inc
xchg
cwde
sub
icebp
mov
xchg
in
pop
mov
pop
(bad)
cld
test
xchg
(bad)
cmp
ins
jg
retf
div
dec
mov
lds
jbe
add
xchg
mov
dec
jns
mov
pop
inc
test
push
and
in
xchg
mov
repz
sti
mov
dec
pop
mov
js
rcl
adc
cdq
clc
mov
dec
fst
xchg
pop
xchg
xchg
icebp
jae
mov
and
rcl
cld
lock
mov
jmp
cmp
rcr
in
daa
mov
push
popa
scas
pop
cmp
add
adc
daa
enter
mov
mov
jae
jns
ret
mov
mov
aad
call
pop
fld
mov
loop
call
sbb
das
es
or
inc
add
das
lock
push
pop
je
lds
jg
cmp
nop
xor
mov
cmp
pop
cmp
retf
hlt
add
xor
and
mov
mov
arpl
cld
adc
push
sahf
pusha
(bad)
or
aaa
dec
mov
les
dec
xchg
sbb
lods
mov
lock
or
aam
cmp
pop
xor
lods
(bad)
dec
push
and
cmp
pushf
pusha
(bad)
shr
mov
xchg
popf
inc
push
and
and
mov
mov
mov
add
in
pop
outs
ins
enter
xor
retf
pop
pop
dec
out
and
scas
or
int3
fld
cmp
pmulhw
iret
shr
mov
mov
rcr
pop
in
mov
sub
inc
dec
inc
mov
(bad)
cmp
jb
mov
xchg
pop
stos
shl
pop
cdq
push
mov
jb
mov
sar
es
lods
fiadd
jp
jno
add
push
mov
jmp
ret
fidivr
mov
retf
cwde
mov
mov
sbb
pop
icebp
sbb
inc
or
sbb
mov
xor
push
or
xchg
sbb
inc
addr16
jp
je
cmp
cmc
sbb
shr
xchg
or
or
pop
scas
out
cmps
shl
sub
and
fisub
clc
movs
jno
and
dec
(bad)
in
dec
push
mov
lea
jb
push
movs
loope
cmp
add
sbb
test
dec
es
push
call
sahf
loopne
adc
mov
adc
ja
pop
jmp
pop
iret
imul
cdq
movs
inc
add
or
aad
push
ror
jp
retf
mov
dec
std
mov
sbb
adc
push
sbb
jne
mov
ret
outs
or
mov
ficom
fadd
sbb
cmp
stos
ins
jg
sub
loop
jb
not
pop
ins
sbb
sbb
push
inc
out
fisttp
neg
dec
mov
aam
pop
aas
push
stc
ss
jg
jmp
aas
(bad)
jne
(bad)
mov
(bad)
stos
cmps
fwait
dec
rcr
xchg
xor
mov
xor
mov
mov
leave
mov
(bad)
and
es
xchg
mov
push
lahf
fwait
xchg
call
pop
and
addr16
clc
test
aam
ins
je
cmp
dec
cmp
sbb
outs
aad
or
inc
pop
nop
mov
popa
std
popa
loop
push
or
xchg
outs
inc
scas
adc
mov
ins
mov
lea
in
(bad)
addr16
ret
test
and
jle
jno
pop
xchg
jge
xor
xchg
add
cmp
or
stc
and
adc
cmp
shl
mov
fwait
into
and
push
hlt
movs
dec
iret
or
test
mov
xlat
sbb
sub
add
sar
push
ficom
mov
(bad)
jecxz
dec
fld
sub
inc
cmp
movs
rcl
adc
je
sub
push
dec
mov
(bad)
movs
sub
lock
inc
dec
sub
jge
fwait
jno
je
lock
in
mov
jmp
(bad)
push
cli
and
gs
inc
sbb
xor
into
retf
outs
mov
aaa
xor
les
in
mov
retf
outs
pop
(bad)
out
call
loop
fcmovu
xchg
xlat
ds
sbb
aam
in
jmp
enter
imul
push
pop
mov
out
xchg
stc
pop
mov
mov
outs
cld
adc
dec
or
push
lds
xchg
add
jmp
xor
mov
jbe
rcr
cli
stos
sub
xchg
push
add
xchg
in
push
xor
cwde
pop
(bad)
fst
mov
movs
mov
dec
fst
mov
in
dec
aaa
icebp
inc
push
adc
mov
adc
xor
cmp
and
adc
add
(bad)
pop
outs
stc
popa
and
xchg
gs
jno
pop
pop
std
cwde
les
fwait
xor
data16
push
iret
add
test
mov
adc
cwde
in
inc
pop
out
test
jg
or
ins
adc
jecxz
mov
outs
mov
std
jns
push
push
mov
ins
push
mov
inc
cmps
rcl
push
push
fld
ss
in
aaa
inc
push
out
pop
mov
aaa
jmp
xor
addr16
add
fsubr
ret
cmps
js
sahf
adc
popa
sbb
xlat
lea
ins
jmp
ds
sbb
call
xor
fadd
cwde
popf
es
xchg
rol
fldenv
push
mov
fsubr
adc
mov
mov
mov
push
pop
repz
sbb
stc
pop
dec
ins
inc
xchg
xchg
cwde
call
xchg
mov
mov
bound
pop
push
and
test
hlt
loopne
es
aas
out
inc
push
mov
data16
ret
out
and
pop
sub
std
push
push
div
out
stos
cmp
jmp
pop
ret
mov
xchg
pop
mov
pop
mov
jne
jae
mov
cli
addr16
adc
std
gs
mov
sti
pop
jae
movs
sub
mov
mov
mov
inc
sub
scas
sub
jae
jl
mov
dec
in
test
sub
pop
or
cs
dec
aam
ins
mov
inc
push
sbb
lock
pusha
jecxz
enter
adc
call
or
fisttp
xor
mov
inc
mov
pusha
cmp
cmps
sub
dec
scas
dec
xor
xor
ret
dec
mov
sbb
adc
push
add
out
sub
fisub
bound
sbb
or
fisub
or
or
repz
out
xchg
jmp
shl
(bad)
mov
pop
adc
inc
dec
sar
jge
mov
sub
mov
idiv
stos
ret
movs
mov
and
out
enter
pushf
push
aaa
out
les
or
ror
and
ja
mov
sub
adc
fdivp
cli
cmp
fnsave
iret
pop
int
iret
mov
in
dec
mov
push
push
out
push
fld
sbb
cmp
stos
movs
cli
(bad)
dec
out
push
mov
pusha
xchg
fild
mov
dec
iret
lea
fdiv
out
movs
push
xor
stc
jmp
cmp
ins
adc
outs
push
cmp
mov
add
mov
mov
push
ja
(bad)
frstor
cmps
shld
adc
add
pusha
outs
cld
scas
mov
mov
mov
call
mov
pop
cli
jne
fcmovb
mov
cmps
iret
stc
jbe
lea
retf
jge
mov
inc
xchg
mov
jle
sub
ret
pop
xor
inc
sti
mov
xor
test
dec
ja
sub
dec
jmp
add
lahf
mov
cmc
pop
outs
dec
mul
mov
shr
jae
dec
push
jns
aas
stc
jp
jae
je
sub
add
sar
jecxz
cld
inc
sbb
pushf
push
scas
bound
mov
nop
hlt
enter
cs
push
cli
pop
push
push
pop
mov
inc
and
fdivr
or
ins
xor
inc
loope
pop
movs
xchg
pop
pop
mov
out
arpl
jo
xlat
jge
xor
pop
jne
xor
ds
call
scas
imul
cli
(bad)
sti
fdivr
mov
aam
mov
out
add
(bad)
in
scas
cmp
clc
call
(bad)
sbb
fsubr
stos
xor
sbb
iret
dec
test
test
or
push
sbb
sub
mov
daa
fucomp
ins
push
sbb
xchg
in
adc
ds
mov
mov
mov
loope
pop
cmp
jecxz
mov
cmc
mov
test
sub
sbb
popf
clc
aaa
pop
call
or
jmp
std
es
sub
ins
mov
pop
nop
rcr
fist
repnz
mov
(bad)
ss
test
jp
test
mov
pop
xor
add
retf
daa
push
fistp
es
dec
pop
or
cmp
and
outs
sub
cmc
sub
and
pop
es
pop
jno
mov
mov
fadd
fcmovnu
mul
and
fisttp
stc
mov
mov
das
fstp
mov
pop
mov
test
pop
test
add
sbb
jno
push
inc
push
shl
jle
div
mov
mov
xor
fsubrp
pop
(bad)
loopne
mov
cld
(bad)
ficomp
dec
xlat
cmps
sahf
and
test
mov
sahf
mov
mov
mov
pop
data16
xchg
mov
int3
or
gs
jae
ds
adc
lea
sti
inc
push
sbb
movs
std
dec
inc
lods
inc
xchg
adc
mov
stos
push
loopne
mov
jo
mov
enter
mov
push
mov
stos
movs
dec
push
rcl
test
shl
sub
outs
dec
mov
dec
in
jl
fxch
loopne
in
call
test
test
out
and
mov
ins
xor
inc
ficom
dec
sbb
inc
ficom
loopne
scas
test
pusha
fisubr
pop
outs
cwde
cmp
fbstp
es
out
dec
cmp
cmp
or
add
sti
mov
loope
xor
cmp
jecxz
mov
add
lods
xchg
in
sbb
fsub
dec
push
xchg
icebp
xchg
or
scas
sbb
inc
enter
ficomp
dec
jp
jnp
retf
jmp
jp
adc
pop
in
cmps
sub
and
call
lods
jae
dec
and
pop
mov
std
pop
dec
loopne
in
mov
mov
push
adc
das
rcr
test
cmp
xchg
iret
jns
stos
inc
lods
inc
in
jae
cmps
imul
cmp
mov
div
push
lock
and
pop
pusha
and
mov
cs
loopne
rcl
pusha
jmp
lock
add
ja
mov
js
mov
fcomp
ror
(bad)
aam
popf
cmp
icebp
mov
les
dec
cmp
sub
sub
ss
and
addr16
add
inc
sub
xor
test
and
push
inc
mov
push
(bad)
(bad)
push
adc
fisub
jmp
(bad)
adc
push
jb
shr
shr
cmps
clc
shl
mov
and
fsubr
jae
sbb
mov
push
imul
jecxz
xchg
sar
in
sbb
xchg
inc
adc
adc
inc
inc
retf
add
jmp
inc
shr
outs
jns
sub
shr
inc
add
movs
ror
scas
mov
xchg
fsubr
xor
sbb
jmp
sbb
dec
push
add
div
data16
ins
adc
mov
adc
adc
pop
pop
mov
repz
fdivr
cmp
push
repnz
retf
shl
iret
sar
mov
jl
cli
xor
mov
addr16
mov
xchg
jecxz
rcr
scas
inc
lock
dec
xchg
jecxz
cmps
mov
mov
push
out
sub
sbb
mov
pop
aad
out
addr16
pop
and
lds
cli
cmp
es
jg
jne
sub
icebp
pop
int
and
xchg
inc
cdq
sbb
retf
inc
femms
jmp
repnz
mov
lahf
xchg
cmp
js
sub
fild
aas
push
mov
out
cwde
push
out
mov
(bad)
inc
leave
adc
cs
dec
xchg
xlat
mov
xchg
sbb
push
stc
stc
movs
adc
xchg
test
and
stos
adc
cmp
pop
imul
mov
xor
pop
add
outs
pop
sub
jge
push
or
xchg
adc
in
(bad)
jne
fisubr
push
push
fcom
lods
stos
inc
mov
int
jb
fs
aad
and
xchg
pop
lods
arpl
repnz
ret
jle
mov
mov
aaa
(bad)
jmp
and
(bad)
loop
loope
je
mov
aaa
(bad)
adc
movs
(bad)
xchg
mov
xchg
loop
and
mov
xor
add
xchg
rcl
shr
xlat
xchg
rcr
xor
shl
push
lods
je
adc
or
pop
pop
js
mov
rcr
xchg
mov
enter
sbb
sbb
and
hlt
mov
into
jo
imul
aaa
std
xlat
(bad)
inc
add
pushf
popa
xor
rol
int
fisub
or
cmc
mov
push
stc
push
mov
cmps
(bad)
arpl
out
push
push
push
enter
dec
pushf
mov
out
ins
xor
gs
push
xlat
je
jno
add
sahf
push
fild
(bad)
outs
imul
or
call
mov
push
xor
sar
jno
adc
mov
aaa
rcr
dec
pop
das
popf
cs
loopne
js
adc
xchg
xchg
push
arpl
or
repnz
jecxz
or
sub
or
dec
jnp
dec
sbb
add
call
sbb
push
mov
mov
in
dec
scas
lahf
fnstcw
xchg
adc
imul
pop
sub
inc
pop
test
dec
or
adc
mov
pop
push
ds
xchg
jp
dec
mul
adc
icebp
cmp
(bad)
mov
mov
inc
sub
lea
and
jmp
pop
xlat
outs
aad
fidivr
xchg
fsub
fist
jo
push
leave
outs
inc
iret
jge
dec
loop
or
pop
sub
inc
mov
idiv
xchg
jmp
dec
stc
pop
cwde
in
mov
jp
test
and
inc
pop
push
mov
ret
aad
(bad)
es
jp
fwait
rol
add
ins
xor
fiadd
mov
and
scas
lea
imul
(bad)
cmps
mov
ds
(bad)
push
inc
ror
scas
ret
dec
fisttp
jg
mov
call
es
aam
sbb
sub
out
mov
call
cmp
dec
je
enter
cmp
dec
cdq
jecxz
inc
and
cmc
fisttp
xor
mov
dec
xchg
cmp
outs
or
mov
mov
pop
xchg
je
sbb
mov
int3
arpl
add
add
pop
dec
xchg
fild
cdq
mov
movs
leave
add
sub
jmp
cmps
pop
mov
fs
jmp
ins
sub
sahf
bnd
pop
sbb
daa
aas
repnz
pop
jp
cwde
mov
inc
out
mov
jle
std
adc
and
sub
inc
mov
or
dec
enter
dec
pop
jmp
jg
sub
and
(bad)
fsub
jg
mov
ret
out
jbe
fwait
mov
lods
mov
sub
jl
push
sbb
dec
and
in
retf
icebp
sbb
lock
lods
fiadd
fcomi
outs
dec
in
in
stc
dec
and
fsubrp
std
jmp
inc
push
dec
xchg
and
or
sub
jmp
or
cmp
mov
and
xor
icebp
fiadd
lahf
cmp
inc
inc
retf
push
mov
or
addr16
out
movs
xchg
xor
pop
add
sti
sahf
fcmovnu
test
push
inc
jmp
mov
xor
push
mov
pop
push
mov
inc
sbb
ret
mov
mov
arpl
add
bound
mov
pop
sbb
adc
adc
mov
push
lea
pop
stos
es
xor
out
in
mov
out
jmp
lods
xchg
add
outs
jbe
jmp
xchg
loope
into
or
ret
enter
popf
and
cld
shl
pop
ins
test
or
add
sti
add
pop
jae
sub
fmul
loopne
sbb
popa
call
pop
jl
or
cmp
mov
out
adc
sbb
inc
jmp
cmp
mov
test
jmp
pcmpgtw
pop
cli
ja
popa
imul
repz
jmp
xor
adc
xchg
jg
add
mov
adc
and
mov
movs
out
inc
(bad)
mov
rcr
sbb
addr16
outs
or
ins
into
adc
into
fld
retf
in
adc
aas
xchg
fisttp
popf
scas
jge
pop
sar
adc
push
aam
jb
out
inc
xor
push
imul
std
out
das
movs
pop
push
mov
mov
jecxz
dec
into
xor
mov
sbb
xchg
inc
shr
mov
shl
add
fldenv
fdivr
arpl
sbb
adc
ins
inc
pop
adc
mov
sub
stos
xor
(bad)
stos
adc
js
xchg
xor
add
sbb
cmp
das
fld
popf
nop
pop
repnz
mov
cmp
push
and
test
inc
adc
aad
mul
aad
or
hlt
jo
pop
movs
popa
mov
adc
pop
lds
inc
dec
jmp
dec
dec
jbe
ret
dec
js
in
sub
push
inc
pop
mov
jl
shl
paddb
repz
pop
addr16
loopne
popf
mov
xchg
push
rol
xchg
xchg
inc
dec
or
ret
fwait
push
xchg
cmc
pop
mov
mov
ss
pop
push
pop
cmps
jae
and
mov
pop
or
jg
push
jae
jns
push
fsubrp
pop
lds
sub
or
ss
in
ss
cmp
inc
ret
xchg
sbb
mov
sub
cmps
int3
jo
mov
mov
inc
enter
call
mov
sahf
das
loope
lock
les
adc
dec
clc
cmp
js
jns
jbe
jns
in
mov
in
push
pop
mov
inc
dec
dec
imul
shl
cdq
pushf
test
outs
int3
xor
jbe
retf
sub
pop
push
ret
and
push
(bad)
bound
sbb
adc
xchg
loop
cli
inc
xchg
mul
lods
std
push
mov
push
jge
and
std
inc
pop
outs
(bad)
xor
es
xchg
shl
pop
pop
fsub
xchg
pop
jecxz
pop
lods
arpl
push
add
ret
(bad)
xchg
push
in
inc
rcl
inc
adc
jns
sar
scas
stc
add
mov
mov
cmp
imul
icebp
cmp
inc
jo
repz
fldenv
and
push
or
scas
aam
std
in
and
dec
repnz
pop
sub
fdiv
or
xor
push
mov
sub
rol
pushf
loopne
(bad)
ror
hlt
or
push
jp
rcr
push
sti
pop
cdq
sti
aam
rol
leave
jmp
loope
pop
add
retf
(bad)
pop
mov
or
imul
jmp
or
rcl
mov
sbb
sar
xor
xchg
jge
ins
push
sub
jge
repnz
adc
inc
push
add
popf
ins
add
stos
pop
xchg
and
jle
ins
stc
sub
icebp
or
in
sub
jae
das
sbb
cmp
sbb
xor
into
inc
sti
cdq
aas
es
stos
or
stos
dec
jecxz
cmp
mov
in
ins
add
pop
xor
fstp
inc
push
popf
outs
lahf
xchg
cmp
fimul
mov
pop
sbb
and
outs
out
call
aas
xchg
mov
sub
lods
pushf
push
mov
xor
dec
dec
clc
sub
shl
xchg
sub
mov
shr
jmp
mov
out
add
(bad)
sahf
or
xchg
dec
dec
cmp
inc
add
loope
jp
imul
rol
cmp
retf
loop
mov
cmc
mov
xchg
mov
mov
push
ret
xchg
sub
push
pop
mov
adc
movzx
xchg
or
jnp
ja
dec
mov
add
push
jmp
cdq
add
scas
or
cdq
mov
(bad)
shl
aad
or
movs
sahf
mov
retf
mov
add
mov
cld
test
and
xchg
test
int
pop
(bad)
cmp
fwait
int
fistp
fldenv
js
ins
or
push
daa
iret
movs
fmul
idiv
pop
test
mov
xchg
mov
adc
jbe
das
retf
jno
fstp
outs
lock
sub
pop
or
push
lods
push
(bad)
sub
jmp
or
loop
push
in
movs
dec
lahf
mov
hlt
call
fs
inc
push
sub
adc
(bad)
or
add
mov
push
lea
cmp
xlat
or
jbe
and
jl
add
std
repz
sbb
xor
out
xor
pop
lods
clc
fist
mov
(bad)
jne
fwait
lods
inc
in
int3
add
jnp
push
mov
xchg
pop
sub
clc
dec
dec
adc
int
and
mov
enter
sub
mov
sbb
test
icebp
push
lea
not
or
repz
ss
shr
jp
imul
cli
ds
jae
fstp
jge
fisttp
adc
mov
sbb
enter
xchg
std
pop
arpl
mov
push
sub
xor
push
push
inc
cld
cmp
out
or
mov
or
aas
mov
neg
mov
and
or
pop
into
shl
push
shr
sub
cmc
pop
jmp
adc
imul
adc
test
jl
jp
aas
test
popf
cmp
adc
gs
sub
outs
jmp
test
pop
xchg
fdiv
xlat
mov
mov
jl
cmp
mov
repz
add
call
(bad)
fiadd
mov
adc
sar
add
xor
aad
push
dec
push
repnz
(bad)
aam
sub
add
adc
loope
pop
and
repz
jns
cmps
xchg
and
cld
or
xchg
push
cmp
mov
pop
sti
mov
mov
inc
(bad)
xchg
mov
jg
push
push
xchg
xor
push
outs
in
out
xchg
cwde
lods
push
mov
lea
push
fstp
fwait
or
pop
loop
ja
lods
jmp
jb
test
mov
call
enter
dec
loopne
or
pop
cmp
and
mov
iret
jae
outs
mov
out
dec
jp
pop
xor
ret
mov
jge
cs
retf
lahf
mov
fcom
add
xor
xor
call
add
sti
retf
jp
enter
and
cmps
and
jmp
fdiv
or
dec
call
adc
repz
jecxz
fld
cmp
addr16
rol
push
iret
dec
push
adc
mov
ret
push
or
cmc
or
add
ds
add
and
inc
and
mov
hlt
ins
prefetch
sbb
adc
pop
mov
and
jb
sub
xor
test
mov
mov
nop
icebp
and
mov
rcr
(bad)
xchg
lods
fstp
pop
js
clc
dec
mov
mul
mov
pop
les
push
inc
cmp
mov
push
xor
jae
cli
push
popa
call
mul
mov
mov
sub
sbb
inc
mov
(bad)
addr16
xor
in
rcr
retf
in
sar
es
sar
cmps
cmps
mov
add
or
(bad)
adc
js
push
scas
shl
shl
jne
pop
dec
cmps
ds
call
xchg
sbb
aaa
inc
xchg
sbb
mov
sub
test
push
lods
leave
mov
sbb
(bad)
sub
sub
out
xor
(bad)
neg
pop
test
sub
lea
or
xor
lock
pop
pop
dec
dec
pop
adc
not
mov
test
add
and
xchg
sbb
xlat
ret
rol
fcom
or
stc
ins
xor
adc
pop
in
nop
jbe
cli
ins
add
xor
sub
or
cmp
leave
scas
dec
test
push
icebp
jnp
jns
imul
loop
pop
jmp
loopne
add
int
jl
cdq
mov
(bad)
dec
cmp
jb
outs
sbb
rol
lea
mov
mov
or
or
add
repz
out
addr16
ins
mov
mov
call
adc
fs
or
xor
movs
add
arpl
repz
sti
pop
adc
mov
dec
sub
inc
or
jl
or
add
retf
je
cmps
push
push
gs
neg
push
mov
mov
adc
aaa
adc
arpl
enter
cmp
pop
enter
bnd
pop
dec
xchg
or
fistp
call
xor
(bad)
and
mov
xlat
xchg
std
je
stc
or
jo
in
or
sub
call
push
ror
xchg
mov
pusha
ficomp
push
ret
aas
gs
icebp
movq
sub
loop
xchg
xlat
sbb
lea
jecxz
call
add
lea
pop
push
dec
push
push
hlt
dec
cli
leave
jne
icebp
dec
loop
dec
es
(bad)
clc
mov
and
je
ds
mov
cmps
and
and
mov
cmp
test
adc
(bad)
jg
pop
(bad)
mov
ins
xchg
xor
pop
mov
sti
pop
jbe
dec
mov
mov
in
cli
jg
push
lahf
lds
pop
das
test
xor
aam
mov
retf
pop
in
jnp
or
sbb
xor
enter
adc
das
loope
or
gs
inc
dec
xchg
push
dec
pop
adc
mov
or
cdq
add
add
in
xchg
or
xchg
mov
push
lods
movs
imul
inc
adc
inc
add
rcr
dec
cdq
fmul
jbe
dec
stos
out
and
push
pushf
mov
xchg
jp
mov
dec
add
mul
test
pushf
sub
jg
push
cmps
jnp
in
mov
dec
nop
jmp
sub
out
pop
push
aad
jnp
push
push
test
xor
push
pushf
add
xchg
sar
jecxz
sub
pop
jl
mov
and
sbb
repnz
fimul
in
mov
adc
movs
dec
push
mov
inc
mul
adc
add
mov
in
mov
push
pop
jl
mov
into
push
repz
call
adc
xchg
pop
and
cmp
scas
mov
add
loopne
movs
jmp
cmps
sub
dec
les
shl
call
es
test
js
pop
cmp
xor
adc
pop
into
ja
lahf
sub
mov
rol
jne
pop
test
and
lods
xor
mov
mov
ror
fucomi
pop
out
xchg
jl
push
imul
pop
dec
rcr
jecxz
(bad)
into
(bad)
sbb
sbb
push
push
out
into
repnz
sub
out
jmp
mov
jg
vpmovsxbq
push
pop
cmps
add
cmp
jo
sub
cmp
cwde
xor
ss
test
mov
push
movs
push
(bad)
je
pop
imul
retf
sub
inc
stc
test
les
fld
repnz
or
sbb
push
clc
daa
and
fsubr
pushf
mov
jmp
lahf
xlat
scas
callw
jno
test
enter
test
das
daa
mov
cmc
push
cli
adc
or
imul
cld
and
and
jae
sar
into
loope
pop
loop
or
and
jmp
mov
mov
daa
push
das
fcom
js
add
nop
cs
sub
xchg
data16
push
push
icebp
(bad)
cmp
push
cmp
mov
iret
add
mov
into
adc
fwait
mov
fdivrp
and
adc
mov
aam
rcr
jae
aam
outs
mov
add
jns
sub
cmp
loop
mov
cmc
and
retf
xor
(bad)
imul
test
int3
test
aas
gs
out
mov
jae
loop
push
xor
inc
cwde
pop
dec
cmp
pop
mov
imul
call
fcmovne
dec
pop
scas
shl
and
mov
out
inc
cmp
call
cs
add
push
mov
sub
jecxz
ins
fmul
fnsave
fcom
mov
jmp
cmp
outs
and
out
(bad)
jbe
(bad)
mov
outs
(bad)
retf
and
or
cld
daa
mov
pop
ins
mov
mov
stos
dec
xor
mov
in
mov
div
pusha
cmp
push
sub
fidivr
jmp
pminsw
stc
fsub
dec
xor
mov
(bad)
cmps
mov
pop
in
retf
push
push
mov
dec
jg
dec
nop
scas
inc
ret
pop
mov
sub
je
adc
cli
sbb
shr
pop
jns
imul
mov
daa
lods
dec
jne
sub
sar
pusha
dec
jo
in
xchg
mov
clc
fdivr
retf
repnz
mov
enter
adc
or
xchg
jl
or
sub
xor
in
sub
aaa
push
call
add
(bad)
ja
(bad)
mov
xchg
or
and
(bad)
hlt
addr16
fcomi
dec
js
add
push
sbb
jp
mov
push
(bad)
les
push
out
or
inc
bound
mov
rcr
cmp
out
sbb
in
mov
adc
clc
fsubr
pop
push
in
dec
dec
test
mov
lods
mov
and
cmps
mov
push
pop
pop
popa
mov
push
sub
push
cmp
jmp
mov
cli
jle
stos
push
aas
mov
pop
mov
inc
mov
adc
push
imul
not
je
sub
js
scas
cwde
pop
sbb
dec
add
lock
outs
jge
mov
iret
in
adc
adc
push
popf
mov
pop
clc
and
das
outs
cmp
sti
lds
out
fidivr
push
mov
ins
dec
xor
pop
jp
push
dec
jp
xchg
jae
dec
ins
inc
fisub
sub
lds
in
repnz
aaa
into
mov
push
add
adc
adc
xchg
mov
outs
cmc
test
mov
cld
aaa
out
(bad)
frstor
inc
scas
mov
ret
sbb
xchg
push
nop
push
cmp
(bad)
fnstsw
push
test
push
inc
aas
or
inc
shl
ret
jne
shl
das
cmp
es
movs
leave
shl
xchg
mov
stc
scas
xor
fisub
sbb
inc
test
and
and
mov
dec
dec
dec
pop
pop
dec
aaa
push
aad
jle
dec
dec
(bad)
fstp
dec
outs
mov
ins
adc
mov
xlat
or
add
mov
xor
test
jne
sub
sbb
sbb
dec
mov
aaa
fstp
int3
mov
ror
sti
pop
scas
adc
jb
shl
or
xor
xchg
or
adc
int3
jge
add
push
icebp
(bad)
mov
pushf
pusha
jmp
mov
(bad)
loope
or
popf
or
mov
aad
aad
adc
jbe
mov
test
je
retf
mov
mov
fucomi
mov
sub
frstor
movs
mov
test
test
shl
sub
sub
xchg
mov
cmp
mov
sub
mov
cmp
(bad)
enter
mov
lods
repz
imul
loop
push
in
mov
and
sbb
xchg
in
lock
push
sub
fsubp
sub
pop
ins
mov
mov
sub
mov
cmp
in
mov
scas
pop
cdq
xlat
sbb
pop
(bad)
adc
(bad)
push
call
jg
add
jle
cmc
mov
enter
push
and
not
sub
jbe
push
cmp
add
and
xchg
dec
push
mov
pop
sar
adc
out
jecxz
cwde
ins
repnz
(bad)
addr16
pop
xchg
rdpmc
mov
push
xchg
ucomiss
xchg
mov
arpl
cmp
mov
jae
sub
loop
xchg
in
retf
push
leave
xchg
pop
(bad)
cmps
mov
out
hlt
adc
es
jg
mov
mov
inc
loope
loope
mov
movs
int
test
mov
xor
pop
rcr
test
mov
xchg
and
sub
jnp
cmp
popf
mov
loope
mov
mov
lock
push
shl
xchg
jne
lods
fdivr
das
icebp
pushf
cli
inc
popf
pusha
and
cmp
imul
int
pop
dec
inc
aaa
lods
or
paddb
jb
sub
jo
dec
sub
add
and
inc
mov
div
iret
dec
ds
xlat
call
data16
and
test
adc
stc
loopne
outs
loope
outs
(bad)
out
pop
mov
mov
xor
or
pop
cmp
push
cmp
and
dec
mov
and
cwde
xor
test
pop
not
clc
fidivr
test
lods
cmp
pop
aas
(bad)
ret
ror
out
mov
and
ds
fadd
mov
int3
add
rcl
push
popf
in
pop
jp
repz
out
inc
ror
imul
cli
cdq
jns
adc
xor
clc
cwde
fcomi
lock
ds
inc
pop
loopne
push
lahf
xor
adc
cmps
pop
cmp
test
fstp
popa
add
sbb
cld
sbb
stos
mov
mov
mov
in
hlt
scas
daa
dec
sub
in
push
pop
push
dec
mov
dec
in
std
mov
movs
lock
push
sub
dec
push
pop
xchg
pop
pop
pop
rcl
jge
mov
jnp
(bad)
push
push
and
pop
fisubr
sub
stc
xchg
jp
jmp
scas
inc
jg
and
test
dec
in
sbb
mov
adc
and
fistp
pop
out
adc
outs
mov
pop
jp
cld
rcl
icebp
enter
ja
dec
sbb
inc
in
dec
(bad)
mov
fst
jle
out
movs
inc
popf
add
mov
jno
scas
dec
inc
test
cmp
inc
jne
xchg
push
or
fild
adc
xchg
cmp
xchg
push
bound
mov
fisttp
mov
fidiv
sbb
cmp
test
(bad)
out
cli
dec
add
dec
leave
jo
scas
push
mov
outs
stc
hlt
lds
int
or
xlat
xchg
inc
inc
jle
clc
or
rcr
leave
aam
mov
imul
je
xchg
inc
inc
mov
inc
ret
aaa
ror
pop
mov
je
retf
ds
test
mov
je
or
sbb
loopne
das
mov
jecxz
mov
icebp
inc
hlt
lea
pop
mov
or
cld
nop
jg
lods
add
sahf
out
popf
mov
add
mov
sub
retf
push
les
push
sbb
shl
shl
in
mov
or
sar
test
sbb
cmp
add
push
jp
dec
shl
(bad)
loope
movs
or
mov
mov
sbb
adc
bound
inc
or
mov
mov
mov
bound
fcmovnb
sar
lods
mov
mov
mov
jno
hlt
retf
pop
out
shr
iret
xor
je
icebp
xchg
cld
and
mov
adc
add
int
lods
int3
jg
mov
cmp
das
sbb
ret
sahf
add
data16
mov
push
scas
lods
cld
mov
in
push
jae
dec
fs
data16
mov
(bad)
test
adc
pop
addr16
jo
cmps
mov
xchg
scas
sbb
inc
shl
dec
pop
add
repz
jnp
sahf
xchg
rcl
and
and
cmp
and
sub
scas
arpl
aam
loopne
xchg
retf
push
sub
or
cld
(bad)
leave
aas
ins
out
mov
sub
inc
js
mov
(bad)
fld
dec
lahf
stos
xchg
or
mov
mov
push
in
xchg
mov
adc
or
popa
push
sar
dec
imul
push
call
int
lods
call
popa
sub
push
inc
lea
clc
mov
fst
mov
jne
mov
adc
cld
sub
sbb
bnd
add
stos
adc
mov
sahf
fisubr
push
add
xchg
addr16
push
xchg
xchg
movs
aaa
jb
push
rol
hlt
test
and
xchg
rcl
sbb
mov
pushf
inc
pop
je
add
sbb
stc
xchg
(bad)
dec
lds
movs
mov
repz
xchg
mov
jne
inc
retf
shl
cld
mov
movs
loope
mov
retf
xchg
dec
xor
call
push
das
ja
cld
xchg
dec
cmps
(bad)
cmp
mov
je
inc
setp
inc
icebp
outs
icebp
jne
add
fistp
jp
int3
mov
fst
sbb
mov
xchg
mov
xchg
das
mov
call
fnstenv
scas
and
fidiv
jne
push
mov
sbb
inc
adc
scas
lock
movs
adc
inc
mov
(bad)
and
int3
and
jmp
outs
and
push
mov
xor
add
dec
inc
pop
test
(bad)
xor
inc
jmp
aam
outs
or
xchg
popf
leave
test
aam
jne
adc
fild
and
call
add
pop
inc
lds
(bad)
and
cmc
jge
pop
fidiv
fstp
pop
and
sub
ja
cmp
ins
aad
aas
lea
cmps
in
enter
sub
xor
lds
pop
inc
push
mov
xchg
jnp
adc
mov
jg
nop
leave
pop
jge
inc
pop
mov
mov
push
rol
add
stos
(bad)
lahf
ds
xor
cmp
mov
enter
add
out
or
mov
jb
loopne
loop
jl
lods
sbb
sbb
inc
cli
xlat
sbb
test
add
mov
jnp
mov
push
lea
and
fld
push
ins
push
scas
sar
loope
dec
rol
(bad)
adc
ins
add
shl
jge
(bad)
xor
std
hlt
ss
cld
retf
dec
clc
les
add
ds
xor
adc
mov
test
mov
clc
and
ret
jae
mov
fwait
sbb
mov
push
bound
leave
ret
sar
sbb
xlat
ins
popa
scas
sbb
jnp
imul
shr
test
jbe
je
sti
xchg
xchg
cmc
fst
pmaxub
pop
pop
lock
mov
xchg
adc
iret
retf
fdiv
xchg
inc
aam
pop
mov
lock
mov
sbb
sbb
bsf
pop
(bad)
xor
std
loop
and
out
sub
mov
xlat
push
add
xor
imul
fdivp
sub
and
mov
mov
sbb
pushf
xchg
aad
sub
mov
and
or
pop
xor
movs
inc
pop
call
sbb
and
mov
fadd
cs
push
icebp
cmp
ror
mov
scas
push
xchg
mov
fucomp
pop
and
sti
ror
aaa
xor
jnp
dec
arpl
jmp
sbb
xchg
clc
push
mov
fadd
push
call
les
mov
cmps
dec
add
mov
sbb
xchg
pushf
cwde
adc
dec
sahf
cmp
pushf
jno
cs
call
pop
sub
cmp
ret
xor
push
shr
inc
and
shl
retf
cmc
movs
adc
ror
adc
jg
(bad)
jmp
mov
xor
mov
retf
shl
pop
and
rep
xchg
cmp
jecxz
stos
(bad)
leave
loopne
sub
sub
(bad)
cli
ror
lahf
and
inc
fmul
loopne
adc
je
ret
add
xchg
sbb
and
pop
add
push
call
test
je
jp
cwde
mov
fisub
add
sti
outs
sub
mov
popf
add
sahf
ds
mov
sbb
scas
inc
mov
lods
push
std
retf
fild
cmp
inc
cdq
mov
loopne
jae
jl
aam
es
sub
mov
pop
ss
outs
je
jbe
xlat
push
sar
push
adc
jp
mov
inc
push
int3
les
xlat
push
das
pop
push
je
ret
inc
cld
pop
sbb
mov
call
mov
adc
js
inc
mov
xchg
dec
jae
cmp
cmps
dec
push
enter
fild
scas
loopne
jmp
xchg
daa
mov
lea
xchg
and
je
pop
popf
dec
mov
(bad)
push
mov
pop
xchg
cmp
(bad)
jmp
and
pop
jmp
cmp
or
into
(bad)
fsub
mov
dec
pop
neg
ror
xlat
ins
pop
sbb
jb
out
frstor
movs
fld
int3
sbb
push
push
mov
int3
mov
jo
jmp
into
add
inc
daa
out
mov
push
jo
jp
psrlw
mov
mov
dec
push
leave
xchg
clc
loope
dec
sub
xchg
or
rol
cmps
dec
mov
pop
test
xor
cmp
adc
into
push
pop
mov
mov
add
lods
data16
inc
ds
xchg
rcr
sbb
push
cmp
sti
retf
ret
and
cli
sub
scas
and
and
test
test
call
cdq
sub
(bad)
iret
push
push
inc
dec
xor
sbb
sbb
xor
add
mov
retf
mov
cmps
xlat
fnsave
les
pop
out
call
xor
jmp
aam
cmps
call
push
pushf
pop
cmps
fldcw
add
sub
rol
(bad)
mov
(bad)
mov
xor
xchg
dec
in
ds
xor
and
aam
cmp
neg
fsub
dec
adc
aas
xor
test
ficom
ror
mov
mov
cmp
aam
mov
ficomp
fwait
mov
repnz
outs
dec
iret
pushf
sbb
xor
out
int3
not
mov
bnd
aas
jmp
loop
rol
fldenv
ret
shld
xor
push
cld
loopne
adc
popf
lods
xchg
(bad)
leave
mov
pop
inc
call
sub
mov
ins
aam
mov
inc
pushf
jb
and
mov
push
in
inc
push
xor
icebp
push
mov
pusha
xor
cs
jno
pop
xor
pop
loope
and
nop
sub
sbb
retf
push
jns
stos
mov
cmp
aaa
imul
(bad)
pop
and
repnz
mov
lds
pusha
outs
int3
sbb
push
fstp
add
mov
pop
lock
mov
ret
add
leave
mov
sub
leave
inc
or
lock
mov
imul
mov
daa
test
adc
ret
lahf
fmul
mov
push
int3
inc
jo
repz
xchg
lods
je
xor
push
push
cmp
adc
dec
rcr
ss
in
sahf
sti
popa
mov
retf
out
fdivr
jb
xor
retf
out
ins
ret
or
jae
out
sub
bnd
jne
ins
fcmovnbe
ins
jl
jmp
push
push
fbld
pop
(bad)
fcmove
scas
cwde
(bad)
mov
into
xchg
xchg
stos
xor
xor
outs
sub
mov
retf
xchg
(bad)
cdq
not
pop
dec
mov
repnz
stc
test
pop
jge
jmp
ins
ror
xor
cmp
mov
sub
pshufw
pop
jns
push
scas
dec
dec
stos
hlt
or
js
ror
push
das
jg
mov
(bad)
add
not
dec
test
sub
jmp
jp
les
pop
std
dec
cmc
call
aaa
pop
mov
add
js
retf
sub
aas
gs
cmp
cli
adc
dec
out
mov
pop
int3
test
adc
stc
mov
pop
xchg
mov
fimul
fild
jg
cmp
jb
xor
inc
and
push
sti
scas
out
adc
and
les
xchg
pop
dec
mov
add
or
mov
gs
rcl
pop
inc
mov
cli
test
and
pusha
jns
movs
(bad)
arpl
push
sbb
mov
xchg
popf
lods
jae
add
aad
les
in
adc
ins
(bad)
(bad)
push
lea
xor
mov
(bad)
pop
dec
(bad)
sub
jnp
outs
add
nop
lods
dec
movs
mov
or
or
stc
jl
pminsw
push
out
test
call
jecxz
ins
es
rcr
sbb
or
cld
test
push
mov
xor
xor
in
popf
mov
popf
test
mov
mov
pop
xchg
adc
mov
pop
ror
mov
and
add
call
lods
call
jae
int3
imul
(bad)
sbb
mov
push
outs
xchg
cmp
or
pop
int3
(bad)
fcmovb
popf
aad
mov
jmp
mov
xlat
mov
test
cld
loopne
sti
inc
mov
pop
dec
psubsb
cs
xchg
sub
and
ss
xchg
pop
inc
retf
lods
pop
mov
add
shl
daa
rcl
dec
out
inc
test
and
arpl
(bad)
mov
xchg
int3
inc
mov
icebp
and
cmps
out
paddq
adc
xor
push
aam
fcmovne
fs
shl
push
mov
aam
in
sbb
or
cmps
movs
mov
fldln2
fcom
ds
sub
ins
pop
jne
call
popa
or
test
in
or
fmul
test
lahf
push
aam
stos
lods
cmp
mov
jmp
rol
adc
and
mov
(bad)
out
and
push
push
mov
xchg
dec
dec
jo
push
mov
cmp
mov
pop
daa
rcl
adc
cmp
(bad)
pop
sti
out
cmp
stos
inc
imul
xchg
(bad)
ja
out
ds
ins
stc
jae
in
mov
out
test
xchg
adc
cmp
(bad)
mov
cmp
mov
mov
inc
retf
or
jecxz
fisub
mov
cmp
xchg
mov
popa
shr
gs
xor
add
(bad)
cdq
dec
cmp
data16
out
dec
jne
mov
inc
sub
adc
ror
adc
lods
js
mov
push
aaa
sub
mov
mov
inc
and
mov
push
retf
and
or
outs
mov
bound
sbb
jmp
(bad)
mov
nop
pop
pop
ret
cmp
stc
mov
lods
aad
mov
sub
pusha
in
pop
jne
cmp
ja
mov
outs
add
or
push
pop
lea
out
(bad)
push
xor
into
add
pop
cmp
sub
jg
lock
adc
div
pusha
dec
shl
out
out
(bad)
fstp
icebp
aam
dec
sbb
es
jns
bound
sub
sbb
retf
into
sub
xchg
cmp
mov
mov
nop
cmps
jp
jo
dec
mov
fs
fmul
and
stos
inc
mov
xor
adc
jmp
pusha
sbb
lods
push
loopne
dec
inc
xor
scas
pusha
xchg
loop
add
movs
rcl
pop
push
mov
lds
jns
dec
mov
jo
aaa
jns
test
ret
jnp
stos
cmp
dec
push
pop
inc
ss
xchg
and
pusha
sub
mov
or
mov
jb
inc
fcom
stos
dec
loopne
icebp
pusha
xor
(bad)
pop
lahf
loopne
es
out
push
dec
xor
iret
jl
mov
rol
fucom
fwait
out
cwde
jo
and
std
push
pop
shl
jnp
and
pop
cmp
ret
mov
mov
inc
inc
dec
dec
fwait
push
sub
retf
or
sub
loope
shr
js
int3
mov
sbb
inc
nop
xchg
cdq
fsubr
idiv
aad
cwde
jmp
icebp
(bad)
icebp
cmps
mov
mov
jmp
inc
imul
sbb
mov
stos
xor
fldcw
arpl
push
(bad)
retf
xor
inc
daa
xlat
out
mov
imul
in
add
jae
dec
sar
and
mov
out
fild
cmp
loope
push
(bad)
js
xchg
push
(bad)
jecxz
mov
ss
mov
mov
stc
xchg
imul
mov
aaa
jp
cmp
dec
pop
call
add
adc
aaa
imul
in
int3
sysenter
mov
xor
test
or
out
mov
dec
xlat
jmp
fimul
push
xchg
(bad)
mov
ins
sbb
inc
xor
fnstsw
mov
in
pop
push
je
pushf
sub
jmp
das
(bad)
mov
mov
jecxz
out
mov
mov
loope
mov
out
xchg
adc
xchg
jne
pusha
fsubp
adc
cmp
(bad)
test
cmps
lahf
jo
lods
xor
rol
push
call
xor
lods
inc
ret
stos
repnz
in
cdq
mov
dec
and
mov
leave
mov
sub
cmp
mov
aam
clc
sub
dec
pop
in
pop
outs
not
idiv
fisubr
or
das
inc
je
xchg
and
inc
mov
xor
daa
sub
cmp
pop
cmps
fsub
cdq
sub
push
out
xor
jmp
popa
or
pusha
imul
leave
sub
adc
rcr
jmp
popf
and
xor
jo
loop
cmp
sub
dec
(bad)
lods
xchg
pop
enter
fcomip
test
jp
sbb
jg
jg
das
dec
pop
mov
adc
xor
les
das
fcom
ins
fs
ret
jnp
push
xor
int
call
cld
jmp
cdq
pop
cmp
aad
xor
cmp
das
fimul
xchg
std
push
movs
xor
pop
xchg
jnp
xchg
dec
cmp
rcr
adc
xor
div
ja
clc
out
movs
adc
xchg
push
inc
daa
(bad)
movs
dec
rol
call
lock
sbb
or
cmp
(bad)
mov
dec
mov
neg
or
or
mov
cmp
sbb
xchg
cmp
(bad)
fist
or
inc
adc
mov
sub
(bad)
retf
cmp
lock
jbe
movs
std
sub
aad
or
pop
add
xor
cmp
cmp
imul
(bad)
(bad)
mov
(bad)
jns
push
lods
dec
and
adc
div
sub
cld
pushf
test
stc
test
das
lea
je
fisttp
xor
inc
nop
jb
xchg
add
bound
(bad)
xchg
sti
stos
mov
push
and
sti
lock
dec
lods
retf
data16
push
ins
addr16
mov
leave
(bad)
(bad)
jl
mov
and
popf
pop
imul
pusha
outs
sbb
je
add
movs
call
test
fsubr
or
fsubr
or
stc
cli
stos
jne
sub
jg
mov
int
retf
mov
sar
xchg
fnsave
cwde
fcom
cmps
cld
in
cdq
dec
adc
push
mov
jle
xchg
daa
add
jge
loopne
stos
mov
stos
dec
nop
mov
xchg
add
jl
gs
mov
bound
inc
das
lods
sub
push
repz
aad
inc
fstp
dec
pop
xor
sbb
lods
add
dec
pop
jmp
sub
sbb
xchg
rcl
xchg
or
jle
xor
push
mov
ins
retf
into
fdiv
inc
daa
and
push
pop
xchg
sub
and
es
jl
repz
sbb
xchg
jae
ins
leave
pusha
call
mov
loope
idiv
(bad)
aam
jno
gs
repnz
xor
xor
scas
(bad)
sti
clc
mov
add
in
mov
scas
sub
scas
xlat
call
jnp
xchg
int
sub
push
push
mov
mov
pop
push
aad
cmp
fucomip
enter
push
dec
call
lods
mov
iret
neg
int
push
ja
add
xchg
jl
scas
push
into
inc
fiadd
xor
mov
push
cli
or
jecxz
loope
and
shl
lods
pop
out
ins
push
je
stos
jmp
sbb
pop
pop
mov
mov
mov
mov
icebp
xor
sub
fmul
xchg
add
xor
mov
inc
addr16
xchg
add
inc
leave
and
mov
mov
jl
push
loope
lods
pop
rol
add
add
mov
retf
or
dec
call
inc
xor
sub
cmp
and
pop
into
pop
jb
mov
stos
add
cwde
cli
or
(bad)
jbe
outs
push
lock
adc
ret
sbb
call
inc
adc
clc
mov
cmp
inc
data16
sub
jmp
addr16
adc
repz
push
iret
rol
sbb
push
mov
ds
push
(bad)
(bad)
cli
loopne
push
add
jp
sbb
cmps
pop
inc
sub
mov
fsub
ja
aas
inc
add
int
gs
jl
cdq
pop
push
jge
ficom
inc
jg
aam
retf
out
and
outs
xchg
cli
stos
dec
out
jg
add
adc
mov
jmp
shrd
mov
std
jecxz
mov
inc
push
mov
hlt
scas
loope
or
imul
mov
mov
push
mov
jne
fdivr
shl
mov
push
loopne
aaa
out
sub
jmp
add
ss
aam
cmp
sbb
mov
stc
pop
mov
pop
xor
lods
icebp
cmps
mov
mov
gs
cmp
jne
or
jge
in
shr
aad
(bad)
sbb
sub
leave
push
jmp
adc
mov
pop
(bad)
stc
add
call
lods
sbb
push
enter
jp
fdivr
adc
sbb
sbb
push
lds
gs
movs
aam
mov
sbb
push
in
cld
ss
pusha
stos
mov
sbb
nop
mov
retf
cmp
shl
scas
mov
daa
add
push
fmul
jl
gs
imul
xor
sar
mov
mov
js
(bad)
push
pop
test
sub
and
js
(bad)
ins
addr16
pop
mov
jmp
xor
lods
cmps
daa
cs
adc
sub
mov
das
call
jl
jnp
add
sti
loopne
clc
push
sbb
lods
(bad)
xor
add
sbb
addr16
push
daa
cwde
xchg
lea
mov
pop
or
pop
ss
pop
ja
inc
sub
sub
sbb
pop
xor
sar
xor
call
pop
movs
sbb
cli
(bad)
jo
inc
mov
out
out
movs
pusha
dec
pop
test
mov
sti
mov
inc
jns
cs
push
dec
pop
pop
ins
or
pop
in
push
test
iret
loope
add
test
int
push
or
ror
or
xchg
repz
adc
ret
leave
add
cmp
dec
adc
mul
push
adc
ja
push
cs
leave
cmp
sub
ret
enter
add
pop
mov
es
dec
jg
(bad)
mov
cli
fiadd
fisub
shl
cmp
push
in
push
dec
mov
jmp
(bad)
imul
in
push
mov
add
inc
outs
or
nop
(bad)
fmul
sub
movs
pop
pop
(bad)
ffreep
jno
dec
xor
jns
js
repz
lds
loopne
sbb
(bad)
and
jle
mov
push
mov
sti
fs
add
jge
aad
aam
dec
mov
ss
fwait
jg
push
lahf
jmp
xor
and
lds
sub
or
or
jo
jmp
adc
or
into
aad
repnz
push
mov
adc
in
pop
push
jmp
ins
clc
sbb
aas
mov
je
call
loopne
pop
test
mov
xor
ins
jns
out
mov
jmp
push
xor
mov
sub
mov
cmp
cmp
lea
popa
mov
add
mov
push
sbb
int
cs
cmp
test
mov
or
fsubr
bound
fcom
repz
push
leave
jb
das
jmp
xchg
xchg
xor
push
outs
mov
dec
pop
or
inc
int
xchg
mov
push
fisttp
dec
mov
(bad)
sar
cmc
fwait
loop
inc
aaa
in
xlat
pushf
or
push
adc
xchg
stos
iret
cli
data16
dec
xchg
dec
in
retf
dec
rol
popa
out
aaa
aaa
push
out
xor
test
das
adc
(bad)
movs
bound
xor
xchg
mov
pop
cmp
mov
or
ds
dec
inc
les
xchg
test
jnp
mov
out
shl
inc
(bad)
mov
jne
mov
mov
xchg
xor
dec
push
and
jge
sbb
(bad)
sti
aad
jp
int3
call
cmc
and
ficom
data16
and
out
aaa
movs
loope
and
retf
(bad)
jne
push
(bad)
ja
pop
loop
cmps
or
rcr
jae
in
fs
(bad)
rcl
mov
daa
push
push
lahf
fwait
jp
mov
dec
inc
ret
daa
movs
jecxz
popa
sbb
xchg
out
das
pop
(bad)
jnp
fld
and
cdq
pop
jb
mov
jbe
test
push
xor
not
mov
test
mov
xchg
ret
nop
pop
aaa
leave
call
and
retf
dec
and
push
(bad)
loope
and
fbstp
xchg
call
call
ds
xlat
ins
or
push
mov
xchg
mov
(bad)
xchg
mov
adc
pop
into
sahf
mov
lds
sbb
pop
or
es
ja
movs
inc
and
sub
cmp
(bad)
dec
scas
arpl
push
push
cli
dec
mov
shr
cmp
xlat
inc
jle
movs
push
into
pop
sbb
out
and
out
ror
pushf
sahf
or
sbb
aas
inc
jmp
pop
adc
imul
mov
das
fld
lods
push
inc
adc
jmp
pop
ret
lock
fist
jecxz
in
js
je
mov
sbb
xchg
xchg
pop
outs
mov
cwde
test
add
clc
push
retf
fiadd
xor
xchg
aaa
rol
daa
sub
or
popa
pusha
push
pop
or
sbb
(bad)
mov
dec
dec
jae
loopne
cwde
sar
les
es
pop
inc
outs
lock
scas
xchg
cld
jl
jl
inc
mov
dec
dec
mov
jle
mov
inc
jno
inc
stc
fs
cmp
out
sub
into
jae
pop
in
ss
rcl
jmp
mov
and
mov
or
cmp
aad
call
ss
or
rcl
fwait
je
fnsave
int3
rcl
test
std
and
movs
sbb
xchg
xor
stc
aas
in
sbb
or
pusha
inc
lods
cmp
and
imul
repz
cmp
gs
into
loopne
cld
loope
ins
adc
dec
fisttp
jp
test
sub
in
retf
xor
movs
sbb
cs
fidiv
mov
or
xchg
sub
cli
jg
and
stos
stos
retf
inc
sti
scas
inc
je
inc
cmp
mov
add
or
xchg
add
rcl
xor
sub
dec
push
xchg
or
stos
test
stc
mov
lds
loope
fcomp
inc
cmp
push
scas
or
data16
stos
(bad)
push
jp
mov
xchg
out
ret
xchg
loope
add
mov
jmp
inc
test
adc
call
add
into
arpl
mov
mov
stos
sbb
stc
repz
jnp
in
ds
lods
imul
arpl
rcr
(bad)
jp
pop
cmps
mov
mov
xchg
dec
nop
jmp
das
pop
repz
and
enter
cmp
pop
stos
sbb
or
repnz
in
loopne
inc
fisttp
xor
and
loope
jb
div
sti
jns
test
xchg
mov
mov
mov
movs
dec
xchg
(bad)
retf
aaa
jbe
jmp
jmp
out
dec
pop
movs
inc
jnp
int
out
sahf
xchg
jg
and
dec
outs
inc
cli
sub
in
and
mov
cmp
jno
mov
xor
jmp
movs
push
push
ret
call
cdq
mov
cdq
leave
pop
out
and
gs
(bad)
push
mov
rcr
arpl
xlat
fistp
sub
and
mov
add
dec
repz
popa
out
and
adc
jnp
mov
xchg
mov
fs
or
cmp
pop
pushf
repnz
pop
fmul
xor
mov
ror
and
mov
(bad)
test
jl
pop
fdivr
test
mov
xchg
jp
cmps
dec
test
pop
fiadd
add
in
push
push
xchg
popf
xor
xchg
or
inc
jnp
pop
mov
pop
sbb
mov
sbb
xlat
jbe
push
lahf
inc
push
mov
ret
bound
in
shr
pushf
xor
lock
mov
jnp
imul
inc
sub
gs
jo
and
in
lea
inc
(bad)
xor
movs
or
or
jg
cmps
test
dec
pop
mov
sub
fwait
jge
outs
(bad)
mov
in
jmp
xor
pop
inc
jmp
push
hlt
xrelease
cmp
or
shl
loopne
add
adc
xor
sbb
xor
scas
fist
push
push
hlt
(bad)
call
sub
jecxz
or
dec
pop
lods
popa
sub
sti
xor
sbb
mov
dec
and
je
sub
xchg
inc
sbb
sbb
and
xchg
das
xlat
sub
cwde
mov
sub
das
(bad)
mov
inc
pop
push
xchg
jp
jnp
dec
ins
push
cmc
push
pop
addr16
enter
add
dec
cwde
push
jb
cmps
dec
inc
push
aam
inc
mov
pop
xor
inc
xchg
and
mov
ins
ss
sbb
and
mov
dec
xor
push
das
mov
popf
mov
adc
pop
cs
pop
and
add
(bad)
xor
aaa
mov
cmp
push
cwde
(bad)
adc
mov
adc
jo
call
xchg
and
fist
pop
jecxz
push
xchg
pop
jle
jae
stos
sub
test
or
fisub
aas
fdivr
ja
(bad)
lahf
nop
leave
mov
xchg
lock
jge
popf
ficom
loopne
fcmovne
std
cmp
jmp
hlt
leave
dec
xchg
dec
mov
es
xlat
outs
pop
int3
ret
out
jmp
cwde
push
sbb
jmp
mov
(bad)
popa
adc
data16
xchg
js
mov
test
cmp
xor
cmps
clc
mov
std
xchg
dec
push
inc
pop
arpl
stos
mov
mov
cli
test
add
outs
sbb
cmc
cmps
cwde
loop
jl
nop
pusha
das
push
dec
add
mov
ds
sbb
in
es
rcl
out
dec
hlt
and
push
push
pop
ja
dec
sbb
sbb
adc
sbb
out
mov
adc
popf
adc
outs
and
neg
les
aaa
loope
test
mov
jmp
mov
mov
inc
and
mov
xor
jo
data16
stc
je
cmp
fwait
cmp
xchg
adc
jmp
or
loopne
shr
in
or
push
and
rol
pop
inc
adc
(bad)
cmps
hlt
sahf
loope
lds
push
and
int3
nop
out
sbb
inc
inc
adc
inc
mov
mov
repnz
inc
dec
out
icebp
ins
add
pop
movs
imul
int
movs
mul
popa
ja
and
jecxz
lock
(bad)
scas
inc
adc
jp
or
sbb
je
popf
(bad)
cmc
jge
mov
cs
out
mov
out
sbb
sub
push
add
ret
adc
(bad)
and
push
sub
int
leave
in
sbb
fwait
mov
mov
pop
adc
iret
movs
push
gs
mov
call
sbb
repnz
or
pop
pop
clc
ret
or
out
or
cmp
fst
pop
cmp
popa
xor
xlat
loopne
bound
xchg
xchg
mov
lods
mov
mov
out
add
retf
ins
pop
mov
mov
lea
pop
push
std
repnz
cmp
xchg
lahf
dec
in
sub
scas
ins
sar
stos
sbb
mov
repnz
lods
nop
push
mov
jecxz
outs
rcl
mov
push
sub
mov
icebp
dec
lahf
sbb
push
and
pop
mov
aad
sub
arpl
adc
adc
nop
push
mov
mov
call
imul
mov
enter
call
mov
sahf
ss
leave
dec
cdq
jns
(bad)
xor
test
imul
out
shl
mov
movs
movntq
out
(bad)
xchg
imul
ss
add
in
jmp
and
mov
sahf
call
arpl
push
dec
jb
stos
idiv
(bad)
fwait
cmp
jge
ins
xchg
sub
es
cld
sbb
shl
cmp
lea
cmp
ret
jnp
sub
int
jbe
fdiv
fld
retf
cli
push
push
xchg
call
inc
add
xor
and
pop
(bad)
test
inc
lahf
dec
ret
jne
outs
call
popa
mov
jnp
loop
jo
xlat
pop
aam
nop
or
xchg
cli
mov
stc
loopne
ins
jp
sub
push
cmps
xchg
mov
fnstsw
add
loop
out
xor
dec
mov
stos
int3
adc
lock
dec
out
mov
mov
addr16
(bad)
ins
dec
pop
xchg
or
jb
xchg
cmps
in
daa
in
jns
dec
sbb
dec
jecxz
lods
jmp
xor
stos
out
cmps
sbb
cmp
rcr
popf
or
adc
call
inc
add
adc
(bad)
aaa
shr
or
fld
or
lds
sbb
cmp
cwde
push
loope
pop
sbb
shl
ja
jp
das
mov
jecxz
call
mov
dec
sahf
inc
jno
shl
mov
or
push
lock
jge
dec
ins
cli
nop
call
test
and
xchg
imul
mov
retf
sub
pusha
out
pop
cdq
movs
mov
fs
scas
pop
data16
sbb
pushf
daa
lock
test
call
ins
fwait
das
enter
into
movs
sub
dec
lea
fcmovb
jl
retf
outs
jmp
inc
fld
(bad)
daa
mov
icebp
mov
jmp
add
(bad)
push
int
cmps
jae
jmp
sahf
stos
out
cwde
adc
enter
sub
inc
cmp
sbb
fidiv
sti
ret
push
cmp
mov
mov
xchg
popf
jmp
jb
mov
mov
jns
push
inc
imul
icebp
loope
mov
sbb
pop
aad
pop
clc
(bad)
(bad)
jae
pop
std
shl
enter
jno
or
dec
shl
lods
pop
sbb
mov
sbb
rcr
mov
inc
aam
shl
sti
mov
movs
pop
fwait
(bad)
or
fst
gs
mov
pop
lods
xchg
mov
jbe
clc
add
inc
cmc
(bad)
icebp
es
cmp
imul
inc
xor
loopne
mov
sub
popf
aam
cmps
ins
rol
lods
retf
jae
in
mov
das
mov
daa
or
loop
add
sbb
pop
cli
jns
jbe
xchg
push
fs
icebp
xor
mov
popf
cdq
lods
imul
xor
push
push
fs
jecxz
inc
fs
lock
(bad)
loop
jge
mov
mov
fs
rol
sbb
cmp
xor
or
into
sbb
push
sub
lea
cld
adc
fst
in
call
xchg
rol
mov
nop
clc
xchg
movs
imul
jle
xchg
and
mov
and
lods
int
adc
std
mov
out
push
push
enter
call
outs
movs
mov
mov
out
mov
sub
fst
mov
outs
jp
jp
(bad)
icebp
cmp
mov
dec
or
inc
cmp
adc
test
fist
test
xchg
or
lahf
push
fidiv
aaa
pusha
pop
daa
test
and
fdiv
add
xchg
jl
clc
jno
cmc
dec
imul
cmp
loopne
cmp
adc
sbb
mov
gs
mov
aaa
fldenv
pushf
mov
(bad)
cwde
xor
or
sbb
mov
sahf
mov
sti
loope
addr16
xchg
lea
inc
lea
shr
xchg
mov
sbb
mov
test
sbb
stos
movs
pop
cmp
in
jmp
in
xchg
jmp
mov
mov
cmp
xchg
sti
repz
(bad)
imul
test
ds
xchg
push
loope
jg
xchg
(bad)
outs
imul
mov
jecxz
or
test
fstp
daa
jmp
add
leave
das
jecxz
mov
push
inc
inc
jmp
cmp
xchg
aad
ds
ins
and
inc
lock
inc
iret
call
and
inc
push
ret
test
(bad)
shr
dec
push
push
jne
rcl
in
cmps
mov
pop
push
sub
and
or
in
into
and
or
mov
xchg
mov
ja
data16
scas
mov
mov
dec
push
xor
sahf
sbb
add
sbb
stc
loope
or
repnz
jmp
(bad)
jge
scas
dec
out
add
xor
xchg
dec
leave
arpl
cmc
pop
push
cmp
test
sbb
ss
scas
push
xor
push
mov
fld
jg
inc
mov
add
adc
sub
test
or
mov
mov
addr16
cmp
daa
mov
xor
test
adc
fs
call
jp
pop
ja
ins
loop
arpl
shl
mov
push
and
pop
mov
xor
cmc
call
out
fisttp
(bad)
iret
ret
push
(bad)
jnp
mov
dec
xchg
cwde
ret
lea
out
mov
xor
mov
iret
test
out
jbe
daa
mov
lock
pop
jge
fisub
adc
and
ret
loope
or
aaa
xor
inc
fwait
popf
xchg
pop
mov
test
jge
mov
or
iret
lods
pop
mov
rol
cmp
cdq
fnsave
sub
fsubr
and
dec
adc
fiadd
pop
aaa
in
pop
mov
push
or
sbb
push
in
shr
in
add
fwait
leave
jg
rcr
lods
ins
adc
mov
adc
mov
in
cdq
and
mov
mov
fstp
push
imul
pop
xor
mov
in
fidivr
xchg
mov
adc
dec
push
ret
jae
mov
jp
jo
loope
sbb
popa
mov
(bad)
dec
inc
neg
or
test
mov
leave
push
je
shl
iret
mov
inc
aas
jno
sub
push
xor
ins
push
in
das
call
jb
ds
jle
cmp
dec
in
jecxz
sbb
sbb
jbe
jge
rol
adc
xchg
push
cwde
mov
add
lock
xchg
imul
int3
mov
or
cmovs
push
(bad)
xor
ins
jmp
jl
(bad)
clc
(bad)
or
inc
cdq
mov
sub
mov
cmp
js
cmp
movs
adc
cmps
ins
push
xor
ffree
xor
dec
imul
and
sub
dec
shl
out
adc
retf
mov
rcr
imul
push
ja
in
push
aas
test
cld
inc
mov
retf
mov
hlt
sbb
test
pop
sbb
jle
scas
cmp
sar
cdq
mov
out
xor
add
rol
and
lods
dec
push
ins
stos
fnstsw
(bad)
dec
mov
mov
jno
sub
ret
add
sbb
sbb
cmp
pop
pop
push
dec
pop
ins
lock
pop
cmp
push
mov
stc
sbb
jns
fistp
and
lods
mov
call
ds
retf
ss
pop
lods
pop
fcmovnb
sahf
mov
arpl
rcr
sbb
mov
xchg
sub
mov
mov
(bad)
cdq
adc
rcl
call
mul
mov
std
or
and
imul
retf
fs
inc
push
mov
sub
lds
es
(bad)
popa
sti
call
pop
(bad)
jg
not
xchg
mov
jl
in
daa
pop
das
dec
xchg
fcom
daa
popf
pop
std
test
loopne
cmc
xchg
cwde
stos
mov
xchg
(bad)
xor
sbb
xchg
aaa
outs
div
call
mov
cwde
push
jecxz
pop
mov
(bad)
sub
and
popf
ins
fsubr
arpl
test
loop
test
inc
adc
jge
sbb
mov
lods
cmp
cmp
retf
mov
dec
and
push
in
mov
movs
lods
inc
repnz
fs
mov
push
xchg
test
dec
in
or
sub
jns
loope
lods
cdq
sub
ret
loop
jbe
push
xor
mov
sti
mov
push
xor
out
or
adc
scas
inc
stos
add
jne
push
jecxz
push
mov
mov
mov
(bad)
je
push
jecxz
(bad)
repz
inc
loopne
sbb
mov
add
dec
repnz
test
js
or
out
mov
(bad)
fstp
jg
xchg
movs
xor
mov
gs
sub
cs
xor
jmp
mov
jne
lea
and
pushf
xlat
jecxz
out
dec
mov
xchg
stos
add
jae
or
or
popa
add
push
fucomp
jl
inc
and
ins
(bad)
sahf
fcom
jb
inc
inc
ss
mov
into
pusha
pusha
iret
fcomp
or
pop
jb
and
lds
sbb
ss
add
xchg
je
adc
push
dec
jmp
mov
sbb
movs
outs
sahf
out
sar
outs
adc
xchg
scas
pushf
test
sub
push
xchg
iret
imul
push
push
mov
push
loope
xchg
inc
daa
push
sub
add
pop
loope
arpl
ins
mov
jns
int3
test
pusha
fcomip
inc
sbb
inc
jp
in
mov
rcr
mov
push
das
push
add
mov
icebp
and
mov
and
xchg
out
pop
dec
inc
retf
in
popa
add
mov
push
sbb
push
sti
(bad)
rol
or
mov
shl
push
ss
cmp
or
(bad)
aam
fcmovb
adc
sar
lock
enter
movs
clc
mov
jmp
inc
sub
pop
push
lea
push
mov
or
cmp
aam
xchg
jmp
test
sar
ins
bnd
mov
xor
test
ret
cmps
imul
add
scas
(bad)
xor
mov
sar
push
mov
add
sbb
jb
std
inc
aam
sub
and
xchg
(bad)
les
sahf
push
sti
loopne
mov
cmc
outs
aad
and
in
xchg
ror
dec
inc
jecxz
jno
pop
xor
in
sar
pop
dec
and
inc
imul
cmp
push
lods
sub
xor
ret
call
test
xchg
popf
sub
fist
cmp
mov
cmc
cmp
jns
add
xor
and
lahf
cmps
adc
xchg
and
mov
jl
sahf
std
dec
scas
sar
ret
or
add
push
enterw
pop
int3
call
mov
and
pushf
jp
leave
jmp
(bad)
ret
addr16
sbb
inc
mov
mov
fisttp
ins
mov
pop
add
movs
mov
xchg
outs
inc
sahf
rol
movs
xor
mov
(bad)
div
xchg
ret
aam
jg
jnp
stos
adc
movs
stos
dec
rcl
ret
push
outs
cmp
push
in
xchg
scas
iret
push
push
pop
scas
lods
mov
pop
int
retf
xor
les
mov
fisttp
jmp
sub
cmp
adc
mov
mov
mov
fisubr
pop
aas
test
and
sub
jns
pop
je
xchg
push
inc
pop
cli
mov
fistp
push
xor
addr16
cli
sbb
xchg
je
test
outs
rcr
cld
xor
jae
in
fucom
inc
sti
ds
adc
fisubr
test
lods
retf
pushf
push
sub
inc
pop
mov
repz
mov
pop
jmp
or
pop
or
loope
popa
std
push
mov
scas
fwait
cmp
ror
jmp
mov
jmp
hlt
dec
xchg
movs
movs
push
scas
pop
xchg
cmps
dec
mov
sub
cmc
mov
dec
xor
mov
das
cmps
and
in
(bad)
xlat
sti
das
ret
mov
movs
js
mov
adc
cmp
addr16
sahf
inc
mov
inc
call
pop
push
fldcw
sar
mov
mov
adc
aam
mov
adc
cmp
(bad)
mov
(bad)
bnd
jnp
push
mov
out
retf
sbb
outs
inc
or
data16
or
fucom
ror
stos
aam
fistp
es
jle
mov
add
(bad)
adc
dec
inc
sub
popf
mov
imul
bound
ja
sub
ja
ins
push
ds
mov
mov
out
mov
es
push
push
dec
je
sti
inc
jl
mov
xchg
fscale
push
pop
xlat
fidiv
test
mov
dec
mov
jg
mov
out
mov
cmp
bound
cli
out
cmp
in
mov
cld
cmc
fisttp
jp
imul
mov
dec
xor
addr16
icebp
add
rcr
ins
add
inc
xor
fwait
out
xor
cmc
fnstcw
sub
mov
jne
xchg
out
repz
sti
inc
push
popa
outs
xlat
inc
xchg
jnp
jmp
(bad)
std
add
mov
jnp
shl
call
mov
out
add
cmp
sub
mov
fsubr
jns
pop
arpl
xchg
dec
pop
(bad)
out
push
outs
scas
loopne
jb
stos
shr
push
xor
mov
fdivr
dec
movs
push
push
push
and
inc
scas
xor
xchg
sub
or
mov
out
repz
add
dec
mov
push
mov
fidiv
mov
jecxz
mov
lods
ja
pop
cmp
jnp
sahf
js
push
scas
rol
or
addr16
mov
pop
in
shl
fimul
pushf
stos
int3
repnz
cs
pop
mov
data16
xor
jmp
int
jle
inc
(bad)
das
inc
mov
push
inc
aas
inc
ds
mov
fsubr
push
mov
loop
mov
sbb
adc
sbb
test
jnp
ins
push
inc
arpl
call
jecxz
ja
loope
xor
mov
xlat
inc
scas
or
(bad)
pop
or
sub
xchg
aad
sti
retf
mov
sub
sub
and
jl
add
mov
dec
pop
retf
xor
dec
std
mov
mov
xor
jmp
pushf
inc
arpl
iret
rol
loop
hlt
out
mul
out
cmps
mov
int
imul
add
cmps
repz
and
lods
xchg
scas
mov
sub
xlat
or
retf
sub
clc
enter
push
out
sbb
xchg
mov
cmps
and
and
cmp
cmp
mov
xor
dec
out
das
dec
push
mov
movs
and
outs
lea
add
mov
ret
out
std
jmp
mov
ficom
pop
jg
mov
or
push
push
push
in
mov
adc
pop
aad
or
or
sbb
xchg
fist
fdivr
(bad)
jp
js
xchg
and
lea
movs
pop
cmp
mov
int3
mov
ret
mov
outs
sbb
test
arpl
ins
xchg
xchg
push
nop
data16
fild
cmovae
push
popf
pop
dec
or
push
push
(bad)
sti
fimul
mov
lods
test
les
stos
pop
loope
retf
inc
mov
jl
jb
es
out
xchg
mov
repnz
rcr
pop
ds
ret
mov
xchg
in
loopne
inc
imul
jb
sbb
mov
fist
test
add
fsub
retf
(bad)
xchg
outs
adc
jbe
jmp
out
cmp
adc
mov
enter
mov
dec
cli
pop
out
stc
(bad)
jo
loopne
dec
mov
push
lods
pop
scas
push
jne
cdq
add
mov
pop
push
inc
push
or
mov
and
faddp
add
adc
add
js
setnp
mov
icebp
addr16
and
mov
push
mov
mov
xlat
gs
push
rcl
dec
in
popa
ins
call
push
stos
in
and
sub
mov
xchg
aad
or
sbb
adc
dec
push
clc
cmps
mov
inc
sbb
retf
xor
or
out
imul
fxch
jae
and
pop
enter
inc
or
jb
jnp
sti
call
jns
add
or
popa
aas
dec
jbe
ficom
pop
jno
or
pop
xchg
mov
into
es
mov
(bad)
(bad)
push
out
dec
dec
setbe
jns
and
mov
cmp
push
xor
jo
or
mov
loopne
lock
xchg
ror
xlat
fdiv
dec
cmp
pop
lock
dec
jmp
pop
pushf
into
and
imul
inc
mov
inc
inc
jmp
pop
jno
xchg
pop
add
add
int
sahf
mov
cld
cmp
imul
pop
pop
sti
std
and
sub
mov
mov
push
hlt
test
mov
pop
push
sbb
in
into
js
adc
adc
or
mov
lahf
push
jno
pusha
jns
in
mov
pop
ret
push
add
les
mov
push
scas
sub
jne
xchg
push
and
std
inc
das
add
mov
xchg
adc
inc
fcmovu
gs
dec
hlt
loope
js
cld
out
scas
cmps
adc
fnsave
int3
lods
pop
cmps
pop
fild
int
inc
js
jmp
into
jl
cmp
adc
ss
mov
hlt
hlt
aad
icebp
ins
pop
mov
mov
sti
jnp
and
xchg
inc
repnz
mov
rcr
cld
jg
lods
icebp
idiv
cmc
mov
rcl
adc
movs
into
std
ds
mov
dec
popa
out
mov
fidiv
xor
loopne
push
aam
int
sub
mov
sahf
push
scas
xor
in
jnp
in
jle
div
push
icebp
loop
sub
jne
in
xchg
xchg
call
adc
inc
and
cmp
jns
sbb
sti
push
sbb
out
jecxz
les
or
cs
sbb
xchg
mov
ins
jnp
mov
outs
mov
jg
sbb
les
xchg
fcomp
lahf
xchg
rol
hlt
adc
iret
sub
mov
popf
add
sbb
dec
mov
aaa
adc
jns
dec
push
das
or
xlat
mov
mov
stos
pop
mov
sbb
dec
dec
popf
mov
mov
loope
mov
sub
bound
popf
inc
sub
inc
daa
jg
pusha
or
mov
inc
aam
mov
outs
ret
aaa
rcr
(bad)
stos
ror
loope
sahf
ret
mov
lods
push
lods
movs
cmp
jo
mov
pop
sub
inc
jg
gs
xchg
ficomp
pusha
dec
push
add
cli
fwait
cwde
xor
fdivr
ins
pop
repnz
sub
mov
sahf
test
neg
push
call
repz
xor
icebp
call
mov
dec
dec
mov
mov
imul
ins
stos
push
stc
bound
shr
mov
xor
jns
mov
add
ins
mov
retf
xor
xor
in
adc
fiadd
push
ds
xchg
cmc
nop
mov
retf
fistp
xor
sar
inc
out
mov
pop
lock
push
mov
out
push
or
xor
adc
call
and
dec
dec
mov
lods
hlt
sar
xchg
repz
or
push
pop
into
dec
jle
call
ret
pop
xchg
imul
inc
sbb
pusha
mov
nop
rcr
mov
jae
mov
sar
iret
push
popf
rcr
or
xor
pop
jl
xchg
aas
add
je
fild
into
sub
and
ror
push
stc
rcr
loope
pop
test
shr
inc
shr
inc
jmp
xchg
icebp
ds
add
inc
mov
jae
out
dec
out
pop
mov
imul
xchg
fs
ss
enter
cmp
pushf
mov
popa
(bad)
xchg
addr16
loop
mov
adc
or
push
cmp
pop
adc
cmp
rcr
mov
push
push
mov
cdq
push
dec
nop
pop
shl
or
push
in
jecxz
mov
adc
or
sub
sbb
rcl
inc
sbb
inc
xchg
sub
adc
mov
jl
jmp
pop
xor
jge
into
fs
fsubr
icebp
and
inc
cmp
shl
mov
in
fnstcw
loope
push
mov
shl
shl
mov
push
cmps
adc
mov
int3
or
mov
cld
and
xor
cmp
fldcw
ds
xor
sub
pop
pop
inc
mov
jg
movs
cmp
add
nop
jg
cmps
push
in
pop
call
dec
adc
and
dec
sahf
cmc
mov
mov
mov
cld
(bad)
imul
push
call
mov
pop
jne
xchg
loope
cmp
out
xchg
sub
rcr
ficom
jmp
mov
xchg
in
dec
test
mov
ret
aas
test
fs
aam
imul
movs
iret
xchg
out
dec
sub
enter
test
push
aad
inc
sbb
mov
loope
into
sub
add
cmc
mov
rol
jecxz
(bad)
aaa
push
addr16
push
or
aam
int3
rol
adc
sub
jle
aam
sub
push
jge
shl
lea
cmp
pop
test
dec
cmp
push
(bad)
fnstenv
dec
mov
loop
xchg
das
imul
cli
adc
adc
push
xchg
aaa
and
out
xor
js
(bad)
pop
pusha
aam
mov
xchg
scas
idiv
int
jb
test
pop
aam
push
pop
hlt
mov
sub
cs
aaa
enter
popf
test
push
mov
(bad)
lods
and
(bad)
sub
or
push
fwait
dec
(bad)
fdivr
(bad)
outs
movs
mov
xor
test
adc
ja
das
cli
pop
(bad)
add
push
das
cli
cmc
adc
out
mov
add
xor
sub
movs
jae
sub
and
sbb
out
adc
dec
jmp
jmp
sbb
ror
pop
test
repz
dec
push
mov
jge
and
jns
xor
jbe
adc
fsubrp
hlt
loopne
je
dec
leave
cmp
xor
or
push
ficomp
or
(bad)
movs
sub
sbb
test
clc
xchg
jb
mul
pop
sbb
xchg
pop
pop
xchg
loopne
mov
adc
push
sbb
(bad)
ret
shr
movs
(bad)
fistp
ror
daa
ss
adc
enter
xchg
cmps
aad
mov
mov
or
loopne
mov
into
pop
adc
sub
pop
icebp
outs
lock
inc
sub
and
retf
xchg
test
inc
pop
sub
pop
dec
stc
and
sub
sub
sub
gs
mov
sbb
jg
rep
movs
add
retf
pop
jns
ret
xchg
sub
sbb
in
adc
out
push
loop
lahf
aad
sbb
and
repz
test
dec
repz
int
pop
cld
mov
sbb
hlt
push
push
(bad)
retf
movs
sbb
cli
out
xor
xor
push
sbb
ins
icebp
test
pop
xor
push
ret
mov
out
jnp
inc
fs
mov
out
sbb
in
add
xor
pop
sbb
adc
add
push
ss
shr
push
fadd
xchg
stc
inc
scas
cmp
or
cmp
pop
loope
(bad)
aam
fnsave
gs
xchg
xor
cmps
jns
ins
sbb
mov
out
or
dec
ror
adc
ja
lods
jbe
jmp
cmps
pop
test
mov
adc
jmp
icebp
sub
cmp
push
pop
sbb
es
push
dec
dec
jbe
fcmovb
jle
icebp
sub
(bad)
cmps
test
sti
mov
mov
call
mov
jb
xchg
pop
mov
loopne
xor
loope
adc
inc
mov
adc
into
inc
xor
inc
inc
call
sbb
(bad)
mov
loop
stc
aam
in
mov
push
aas
arpl
out
sbb
inc
addr16
shr
gs
dec
add
xchg
(bad)
fld
mov
fidivr
test
lds
xor
daa
inc
enter
sbb
lahf
jp
push
cmp
and
mov
(bad)
fimul
push
loopne
call
call
jo
inc
out
ss
jnp
movs
lahf
push
push
jge
pop
scas
iret
pop
jmp
mov
mov
into
xchg
push
call
xor
mul
xchg
mov
fistp
pushf
jbe
outs
mul
cmp
(bad)
loope
sub
in
mov
add
mov
sub
adc
lahf
cwde
dec
leave
sbb
push
scas
mov
cmp
std
jnp
inc
call
cmp
push
add
mov
fmul
popf
cwde
cmps
adc
xchg
cmc
cmp
loopne
adc
xor
xchg
dec
jno
dec
jae
push
call
mov
pop
xor
mov
sti
dec
mov
push
adc
jmp
shr
in
xor
popa
cmp
cmp
fcom
sbb
lock
daa
sub
inc
fwait
fs
outs
clc
popa
mov
inc
mov
push
push
jle
popa
loopne
(bad)
add
shl
addr16
cmps
inc
and
push
jne
ja
xchg
int3
sbb
mov
add
sub
mov
dec
call
xchg
stos
cmp
repz
jnp
rol
lods
push
arpl
mov
mov
fsubr
popa
into
sub
fstp
idiv
mov
inc
add
cmp
out
lahf
add
repnz
mov
cmp
or
cld
mov
das
into
test
jne
pop
test
push
jae
mov
or
test
aaa
cmc
xchg
in
loop
xor
ins
mov
cmc
aam
fiadd
sahf
xchg
scas
mov
push
sub
dec
mov
jg
sub
pusha
imul
shl
dec
aam
dec
jno
out
aas
dec
ret
or
adc
jne
sub
adc
rcr
aas
arpl
xchg
xchg
cs
dec
sbb
mov
jmp
or
lock
push
jbe
xchg
ret
movs
sbb
cmps
dec
test
xchg
mov
and
or
adc
arpl
add
scas
out
jae
cmps
jmp
fidivr
jg
sub
stc
hlt
ja
movs
pop
jle
inc
dec
and
ins
dec
inc
pop
int
add
push
lods
outs
jmp
cli
(bad)
nop
or
ins
add
xor
xchg
jp
movs
ret
pop
nop
loope
pop
cli
sub
add
sbb
inc
mov
or
es
mov
fidiv
outs
fwait
lahf
and
push
xchg
int
fistp
test
js
pop
and
repnz
popf
jne
or
xchg
in
mov
(bad)
xchg
add
adc
cmp
cmp
(bad)
push
dec
push
(bad)
stos
int
adc
mov
scas
inc
pop
and
cmps
call
arpl
in
rol
fist
cmp
clc
add
mov
jmp
dec
cmp
add
jae
popa
add
adc
fistp
jno
sti
or
inc
mov
add
call
dec
retf
adc
ja
icebp
bt
fwait
adc
dec
out
retf
jnp
mov
push
add
popf
fdivp
add
outs
cmc
data16
test
jl
repz
pop
pop
xor
mov
test
sbb
mov
ja
sbb
mov
xchg
int
mov
fistp
sti
mov
mov
(bad)
mov
test
jne
cmp
fld
movs
push
pop
cmp
mov
std
or
jg
mov
cli
jbe
test
cmps
mov
arpl
test
push
add
shl
leave
pop
pop
bound
inc
arpl
scas
js
mov
js
xor
push
call
cmps
jle
mov
test
in
inc
inc
mov
shl
mov
jbe
cmc
mov
xchg
out
loop
iret
jbe
xchg
or
cmps
cdq
std
loope
sbb
xchg
lahf
gs
les
addr16
mov
xor
and
and
ror
push
pop
xchg
scas
ret
cli
fs
into
out
ins
sbb
sub
xor
aaa
retf
mov
into
jno
dec
and
and
mov
pop
xchg
mov
xor
sysenter
push
outs
jp
pop
pop
adc
or
sbb
call
xchg
cmp
jecxz
mov
mov
cmp
and
cld
mov
loopne
mov
call
imul
xor
jp
add
dec
popa
hlt
jo
pop
lods
scas
mov
icebp
xchg
call
xor
xchg
jg
add
mov
arpl
jbe
int
xor
js
test
cmp
repnz
add
jno
push
fwait
or
dec
cmp
dec
xchg
test
or
sub
iret
les
fadd
adc
leave
sbb
fisub
xchg
inc
pop
add
jo
jno
loop
in
div
mov
mov
push
mov
outs
ror
loop
(bad)
pop
adc
lock
push
test
aad
jmp
loope
inc
in
rcl
jle
adc
fdivr
pop
jl
or
pop
mov
pop
and
xchg
jns
or
dec
repz
cld
pop
nop
sar
sahf
js
jo
push
out
ins
jo
push
xor
mov
adc
inc
add
int3
stc
pop
dec
xchg
in
out
sbb
rol
lods
lahf
mov
imul
mov
in
stos
ficom
dec
xchg
pop
pop
jg
addr16
ja
jbe
pop
les
test
push
cmp
xchg
push
pushf
sbb
outs
and
loop
jge
mov
adc
std
rol
test
rcr
xchg
push
out
jl
mov
faddp
cmc
pop
jne
push
cmp
loop
add
xor
push
repnz
jbe
(bad)
cmp
sub
inc
pop
in
scas
mov
scas
pushf
mov
fidivr
mov
popa
cwde
jle
push
mov
sbb
jae
outs
jbe
add
mov
loop
xchg
push
add
pop
fsubp
adc
xchg
mov
dec
nop
inc
adc
xor
push
loopne
or
jnp
jl
pop
out
in
iret
xchg
jecxz
jp
mov
jle
inc
je
sbb
cwde
fcom
out
daa
push
retf
enter
mov
jmp
or
add
pop
mov
adc
(bad)
and
enter
xlat
(bad)
fiadd
ret
fs
fistp
mov
push
fwait
pop
loopne
js
outs
and
mov
(bad)
(bad)
aaa
pmaxsw
mov
rcl
scas
pop
pop
and
mov
cmc
enter
cmp
mov
stc
mov
test
adc
out
gs
cs
int
sti
rcl
outs
jbe
in
fucomp
add
retf
or
mov
and
(bad)
scas
neg
pop
push
ret
or
test
lea
(bad)
and
dec
loope
push
pop
push
lsl
dec
test
cmp
stc
repz
call
shr
inc
pop
popf
mov
pop
add
jmp
dec
push
pop
and
cmp
repz
xlat
repnz
xor
sbb
cld
xchg
test
xor
cs
daa
jg
or
ret
push
inc
xchg
enter
repnz
add
dec
outs
bound
push
pop
sbb
(bad)
fsub
or
inc
mov
cs
aaa
xor
lock
adc
imul
sbb
xchg
sub
lods
mov
call
and
icebp
pop
xor
and
mov
lds
js
or
stc
sti
inc
jbe
fs
mov
mov
jmp
adc
sbb
out
push
test
mov
in
ror
push
xor
mov
test
cmc
push
cs
add
dec
cmps
push
xlat
mov
or
in
es
jnp
adc
inc
stos
inc
mov
out
cmp
loope
mov
test
jl
mov
mov
ins
add
fisubr
sar
popf
xor
cmp
movs
and
dec
jae
adc
sub
xor
lods
bswap
iret
mov
leave
and
leave
mov
xchg
mov
aas
add
mov
retf
and
ds
retf
aaa
enter
mov
and
or
add
add
and
lahf
xchg
iret
loope
sbb
jo
mov
aas
lods
and
push
mov
sub
lods
jns
mul
icebp
icebp
int
cmc
push
inc
add
lock
cmp
movs
pop
jbe
mov
aam
fst
hlt
ins
sar
loop
fsqrt
popa
pop
fidiv
out
sbb
jg
xor
jl
popf
sbb
inc
mov
push
ror
scas
fs
repnz
xor
inc
xor
mov
loop
inc
inc
leave
shl
rcl
mov
push
adc
fwait
sub
cmp
dec
daa
dec
retf
jle
jmp
adc
stos
mov
inc
mov
fld
add
repz
pop
sbb
sar
sub
pop
sahf
sub
lahf
xor
(bad)
test
inc
div
adc
dec
mov
das
js
mov
cmps
daa
jp
pop
repnz
iret
jno
fild
loop
and
mov
mov
enter
xor
in
sahf
mov
mov
aad
or
(bad)
sahf
pop
into
into
add
xchg
mov
repz
shl
dec
and
lods
adc
mov
push
add
js
xlat
fimul
fwait
cwde
add
jmp
push
daa
mov
cmc
rol
mov
cmp
dec
out
nop
xchg
loopne
push
in
inc
nop
imul
adc
scas
cwde
andps
jecxz
test
or
xchg
dec
pop
sbb
add
hlt
neg
call
ficom
icebp
jo
mov
push
fwait
js
mov
mov
jmp
in
inc
sbb
sbb
jl
rol
sbb
sbb
sub
cs
jnp
mov
mov
mov
cmc
dec
sub
(bad)
fsubr
inc
inc
(bad)
fsubrp
or
daa
jg
dec
neg
lods
inc
add
mov
jb
test
push
cli
scas
in
sub
or
add
ss
pop
push
and
lods
mov
shl
mov
(bad)
(bad)
dec
test
pop
mov
arpl
push
imul
push
dec
(bad)
out
mov
inc
adc
(bad)
push
les
mov
dec
(bad)
jecxz
int3
lods
fs
and
dec
out
ja
mov
adc
mov
push
test
aaa
mov
jp
sub
adc
mov
inc
out
xlat
sub
popa
pop
jns
icebp
fnstenv
mov
aad
xchg
mov
cmp
or
lds
loope
xor
sub
add
scas
addr16
adc
sub
pop
add
mov
(bad)
mov
ret
lock
dec
pop
int
xchg
rol
ficomp
rcr
es
mov
out
repz
xor
push
pop
imul
ror
in
sbb
xor
xchg
add
nop
pop
cmps
sbb
leave
push
dec
pop
xchg
jb
xor
out
ins
sub
int
shl
ins
xchg
cmc
mov
aaa
test
or
xor
stos
popf
inc
sub
pop
mov
cli
push
data16
pop
cmp
ficom
pop
call
je
ds
or
(bad)
in
fs
stc
add
inc
jno
adc
gs
xchg
lods
enter
sbb
xor
fimul
mov
mov
loope
push
adc
and
or
les
mov
sbb
mov
pusha
sub
add
adc
jo
jg
cwde
cli
mov
scas
test
les
repnz
sbb
cmp
push
xor
adc
jns
add
jp
push
jl
mov
pushf
jae
cli
mov
mov
ins
call
or
xchg
gs
ss
bound
lock
add
ficomp
movs
mov
inc
mov
cwde
add
mov
fstp
jmp
int3
sub
jns
jnp
pop
iret
std
and
mov
add
icebp
aad
dec
jg
push
retf
nop
xor
ret
cmovae
arpl
push
cdq
lahf
test
adc
pop
pop
stc
add
jo
xor
xchg
pop
repnz
inc
aam
(bad)
adc
ror
call
push
mov
jecxz
push
and
ret
scas
xchg
push
xchg
xor
xchg
lea
mov
aaa
or
jne
gs
jmp
mov
sub
ret
ja
push
in
hlt
xor
out
in
rol
out
xchg
lds
cwde
rcl
or
(bad)
xchg
pop
adc
push
inc
adc
loop
pop
in
mov
int
jecxz
test
cmc
dec
cmp
adc
in
fcom
pop
movs
cmp
sbb
inc
out
test
sub
fsubp
outs
ror
jle
aad
div
adc
xor
sub
ficomp
icebp
cwde
adc
jno
retf
jle
call
mov
pushf
jmp
dec
jns
mov
pushf
std
inc
sbb
cmps
mov
sbb
cmp
dec
jle
jl
add
mov
xor
pop
jecxz
xor
add
push
jno
fld
out
inc
xchg
stc
pop
xor
mov
lds
cmps
fst
sbb
shr
push
pop
fstp
mov
rcr
xchg
inc
inc
outs
dec
out
in
mov
xor
inc
and
adc
daa
xor
cmps
jae
fdivr
adc
cmp
in
or
or
(bad)
mov
stos
mov
cwde
out
jle
mov
add
cmp
imul
sbb
jmp
fnstenv
sti
cwde
pop
(bad)
and
cdq
or
lahf
fst
sbb
or
mov
call
sub
add
sbb
mov
rcr
xor
xlat
sub
cmp
sbb
jecxz
fnstcw
rcl
pop
jne
iret
in
test
mov
fcomp
jbe
mov
movs
sbb
and
cmp
shr
sub
shl
pop
addr16
lods
pop
jns
cmovp
pusha
mov
(bad)
test
dec
rcr
movs
sub
sbb
xchg
neg
jo
call
das
xor
iret
ja
jmp
mov
ins
pop
xchg
stos
xchg
jmp
test
sahf
(bad)
jb
hlt
or
inc
cmps
iret
inc
inc
nop
xor
dec
clc
jge
xor
sbb
sbb
dec
dec
jbe
inc
push
add
inc
lods
out
in
dec
inc
sbb
into
fild
sbb
push
fs
ja
std
mov
mov
repnz
push
hlt
ud0
movs
adc
mov
push
sbb
outs
rol
imul
in
add
mov
push
adc
pop
hlt
leave
into
inc
xchg
sbb
ja
mov
pop
lods
jae
outs
mov
fsubr
lahf
test
retf
jae
adc
fmul
mov
sti
fisttp
scas
out
inc
movs
ror
les
adc
std
arpl
mov
test
and
bound
push
scas
repz
sbb
pusha
push
loopne
repnz
pop
adc
mov
jmp
cmp
mov
push
fs
mov
daa
add
mov
add
lock
push
dec
xchg
sub
pop
xor
sti
mov
jne
into
or
dec
pop
push
mov
mov
jo
jns
pop
fisubr
mov
xchg
pop
test
or
dec
and
ins
sti
sar
xlat
loop
dec
push
xchg
test
ds
aad
add
jae
push
xor
or
pop
sub
lods
dec
dec
jns
das
or
je
and
je
mov
aaa
push
dec
xchg
stc
xor
arpl
fs
and
gs
je
xchg
jb
fsubr
add
(bad)
adc
mov
fnstenv
sbb
loope
lods
out
call
dec
xchg
leave
adc
icebp
fstp
push
push
push
(bad)
popa
and
into
es
jp
mov
cmc
adc
shl
and
add
xchg
loopne
int
cmp
xchg
xlat
fisttp
push
inc
mov
mov
sub
gs
cdq
fs
xor
add
xchg
push
sub
jne
pop
and
pop
sub
(bad)
lea
fdivr
pop
mov
add
push
test
push
mov
xor
xchg
fsubr
imul
jb
xor
iret
xchg
in
sbb
loope
mov
inc
inc
push
ds
repz
jmp
test
mov
mov
aam
mov
ret
dec
sub
pop
pusha
mov
call
aad
adc
or
mov
and
dec
mov
or
mov
inc
pop
push
not
sub
xchg
mov
mov
mov
sahf
sbb
(bad)
stos
cmps
lods
inc
cmp
sub
jbe
cmps
hlt
fwait
test
aas
das
lds
es
mov
es
cmp
fdivr
dec
imul
movs
pop
mov
loop
psubusb
cmp
push
inc
inc
cmps
dec
dec
sub
rcr
push
xor
or
dec
inc
xor
xchg
or
ret
push
pop
ja
enter
push
pop
stos
aas
and
dec
dec
pop
sub
cs
push
xchg
cmp
lock
sbb
inc
cmps
sub
ror
dec
and
and
aaa
(bad)
jne
pop
mov
and
out
jecxz
mov
in
pop
cmp
cs
mov
mov
lds
and
xor
mov
test
stos
add
adc
iret
mov
popf
icebp
rcr
out
inc
out
push
adc
or
push
fistp
and
cmp
lds
iret
jb
push
clc
mov
push
cmc
pop
scas
data16
adc
and
xchg
and
mov
lahf
ret
inc
push
es
in
xchg
fwait
xchg
iret
ds
pop
imul
jl
mov
(bad)
jmp
dec
mov
push
cs
push
adc
jmp
adc
add
sub
out
std
out
in
push
ret
ins
pop
(bad)
repz
and
or
retf
(bad)
jg
jl
push
cli
daa
adc
bound
xchg
inc
les
outs
cmp
neg
jnp
jo
push
(bad)
(bad)
cmp
mov
and
mov
jge
(bad)
sbb
je
retf
fwait
repnz
ins
pop
in
pop
xor
lods
inc
sbb
mov
mov
push
xchg
cmps
dec
cld
xchg
mov
or
pop
cmp
call
xor
leave
jle
xchg
xor
mul
test
fdivrp
xor
fist
and
repz
add
fcom
dec
or
daa
jg
push
mov
ss
cmc
test
add
aam
jbe
or
shr
enter
es
ins
jmp
add
jp
jl
loope
jno
(bad)
xor
push
test
jge
pop
or
ror
inc
pop
sub
xchg
(bad)
cdq
cmp
sti
pop
inc
lea
xchg
dec
xchg
sub
add
push
scas
and
(bad)
sub
outs
push
test
mov
mov
fcmove
adc
jbe
dec
imul
push
adc
jmp
jns
jle
push
fmul
pop
xor
rcr
(bad)
jl
jo
dec
mov
das
test
or
xor
(bad)
rcr
or
call
jge
push
mov
cli
push
push
jo
js
fsub
add
mov
cwde
arpl
lock
ds
jno
xlat
sub
cld
je
arpl
pop
cmp
adc
test
xor
mov
dec
adc
fst
mov
add
push
mov
push
mov
es
cwde
mov
xchg
fistp
pop
clc
std
repnz
xor
fdiv
iret
pop
stos
and
gs
mov
mov
ss
jno
xchg
and
movs
cmp
enter
ds
and
adc
ja
int3
mov
into
retf
movs
or
push
cwde
cmp
xlat
shl
dec
jmp
push
dec
jbe
push
daa
mov
jge
mov
and
sbb
outs
push
add
rol
push
or
ins
(bad)
pop
and
jne
add
scas
movs
les
pusha
int
jno
mov
rcr
xchg
mov
add
add
adc
inc
aaa
inc
or
add
leave
sub
retf
push
and
fisub
jg
(bad)
shl
int3
pop
jge
dec
lahf
cmp
out
pop
rcr
shl
jb
lock
pop
cmps
mov
mov
xor
outs
test
or
pop
jl
pushf
test
sbb
das
xor
aad
loope
cmp
pop
xor
and
push
sbb
mov
inc
scas
mov
jmp
sbb
icebp
dec
add
fcmovu
loope
and
xchg
popf
out
fcmovnb
mov
je
retf
cwde
inc
jl
call
mov
mov
test
push
inc
mov
xor
adc
mov
repnz
mov
and
dec
loope
cli
jg
cmp
push
pop
jmpw
xor
mov
add
jmp
pop
xor
mov
stc
push
mov
push
mov
xor
aad
bound
adc
and
or
cmp
jl
popf
vmread
sub
(bad)
add
mov
neg
dec
loopne
test
push
fcomp
fld
add
jo
adc
ja
dec
ss
xchg
push
mov
and
sbb
jb
popf
push
cmp
retf
(bad)
and
sbb
fisttp
outs
xchg
push
dec
nop
movs
sbb
push
aam
cmp
jb
(bad)
addr16
repnz
push
or
les
in
out
test
repz
adc
js
xchg
xchg
adc
movs
push
shr
je
outs
inc
mov
pop
push
sub
nop
loopne
test
out
arpl
rcr
mov
arpl
or
mov
add
sti
jmp
popf
lods
sahf
mov
call
lds
push
jnp
xchg
push
jno
idiv
sub
inc
cmp
bound
mov
into
add
mov
jae
ret
push
inc
sbb
adc
(bad)
mov
stc
mov
or
fbstp
icebp
pop
push
push
mul
mov
xchg
cli
xchg
int3
fisttp
xor
(bad)
cmps
sbb
icebp
sahf
mov
repz
arpl
call
fist
add
ror
pop
pop
mov
mov
and
cdq
fistp
xor
dec
mov
mov
push
jns
aaa
loope
jne
jmp
lods
icebp
inc
test
add
sbb
mov
xchg
cmp
and
aam
push
cli
pushf
out
jp
sar
push
xlat
dec
or
jecxz
sub
mov
aas
inc
loopne
jp
push
sbb
push
adc
push
ret
jg
movs
mov
dec
imul
pop
ins
mov
push
cmps
sbb
inc
push
dec
push
mov
scas
xchg
dec
(bad)
adc
xchg
std
in
sub
mov
inc
sub
adc
(bad)
pop
ret
jne
je
sub
out
inc
and
ja
dec
repnz
mov
push
xchg
out
inc
js
cmp
and
dec
cs
icebp
jmp
inc
xor
call
sar
test
and
mov
pop
jns
int3
mov
int3
lods
dec
js
push
jb
sub
rcr
xchg
sar
xor
jl
mov
vprotb
(bad)
(bad)
loopne
(bad)
aas
push
and
add
mov
shl
lods
jecxz
pop
jae
add
cmp
retf
mov
mov
imul
test
stos
icebp
stos
add
push
adc
sbb
xor
sbb
dec
ds
rcr
lds
push
dec
shl
push
jmp
jnp
jp
jns
and
fstp
ins
jbe
cmp
push
sbb
push
add
(bad)
aaa
sbb
jl
pop
addr16
push
dec
pusha
test
pop
pop
mov
scas
(bad)
fisubr
inc
gs
call
loope
les
lods
in
fisttp
in
fwait
loope
out
cwde
sub
out
js
or
xchg
jmp
cmp
sub
rcr
push
stc
mov
out
jb
jl
mov
sti
repnz
cmp
cld
ror
(bad)
jge
sbb
test
stos
outs
or
fldcw
es
add
lahf
stc
or
adc
rol
add
inc
aas
push
mov
and
mov
add
jnp
jno
sbb
hlt
mov
inc
in
cmp
js
data16
lods
push
jmp
or
aaa
sahf
(bad)
mov
jle
pop
sti
shl
cmp
and
out
pop
sub
adc
mov
or
dec
mov
aaa
xchg
mov
mov
xor
sub
pusha
jmp
jmp
sub
mov
adc
out
out
add
fucomip
add
clc
sahf
lods
xchg
stos
imul
imul
jl
mov
retf
pop
cmp
jno
sti
add
add
or
dec
inc
pop
das
xor
or
push
adc
pop
cmp
cmp
sub
sub
jle
mov
mov
imul
mov
(bad)
into
cmp
test
sub
mov
mov
push
bound
sbb
arpl
and
ins
shl
cmp
sbb
int3
sub
mov
xchg
mov
fwait
aaa
loope
mov
sbb
movs
xchg
cmp
daa
lahf
in
je
sbb
pop
in
mov
fsub
or
push
dec
mov
repz
(bad)
int
push
in
out
stos
inc
xor
jno
xor
into
int
mov
lods
cmp
fstp
sbb
dec
adc
iret
cmp
pop
ret
mov
mov
inc
sar
test
pop
adc
ret
ss
das
inc
dec
xchg
xor
xchg
jae
or
mov
xchg
push
movs
sbb
cdq
movs
lds
pop
jbe
ja
adc
inc
jp
mov
sub
hlt
call
cmp
cli
mov
cld
mov
sbb
sbb
mov
ds
jmp
add
popf
sbb
pop
mov
shr
jns
jnp
test
cs
mov
(bad)
dec
call
push
jg
sti
aaa
sub
xchg
jns
add
xor
jmp
rcr
mov
rol
repnz
push
in
xor
ds
pop
jp
std
into
dec
jge
jb
adc
mov
mov
repz
fstp
stos
aam
mov
sbb
scas
pop
test
rcr
or
hlt
scas
aaa
cdq
push
push
jecxz
mov
data16
cmp
sub
push
fimul
push
call
lods
aas
dec
and
cmps
fstp
call
repnz
add
jmp
mov
add
(bad)
pop
push
(bad)
test
movs
cld
push
pop
cmp
mov
mov
and
dec
cmps
mov
cmps
cli
(bad)
js
shr
div
test
push
int
inc
clc
pop
(bad)
and
and
jmp
stos
test
popf
mov
test
add
mov
std
jb
jb
cld
add
jmp
(bad)
dec
test
pop
sbb
call
and
mov
sbb
retf
sahf
push
xchg
sbb
ja
mov
pop
push
sbb
(bad)
in
add
jle
loop
xor
mov
sahf
stos
repnz
das
inc
push
jl
mov
out
lods
mov
ror
add
sbb
jb
or
push
push
ret
xchg
cwde
cdq
bound
mov
cmc
je
test
inc
sub
inc
pcmpgtd
fimul
lahf
pushf
cdq
mov
and
jmp
mov
pop
test
xor
jmp
ret
cmp
adc
adc
cwde
pop
xchg
enter
dec
lea
inc
and
adc
test
sub
push
cmp
dec
jbe
call
(bad)
adc
test
outs
inc
or
pop
arpl
fbstp
fwait
in
fisubr
out
lahf
add
test
xor
xchg
xchg
in
lea
mov
mov
push
popa
push
xchg
div
pop
jo
dec
sbb
data16
adc
imul
dec
push
push
adc
lds
lea
inc
mov
ja
and
jb
cmp
test
gs
jle
jecxz
int3
scas
outs
(bad)
mov
ret
inc
jmp
fidiv
push
into
dec
gs
test
cmp
int3
adc
bnd
daa
cmp
cmp
sbb
mov
cwde
and
mov
js
hlt
ds
fiadd
and
cmps
not
sbb
ins
mov
mov
jbe
dec
ficom
pusha
cmps
stc
adc
(bad)
push
daa
push
in
leave
add
dec
js
jl
icebp
lds
jle
adc
cmp
sbb
mov
and
out
dec
idiv
and
pushf
(bad)
mov
jge
call
sub
ret
cmp
stc
or
mov
outs
repnz
test
aad
cmp
cmp
add
(bad)
push
cs
mov
jae
ss
xor
pop
dec
xchg
inc
cmps
or
cmp
ffreep
jge
adc
pop
pop
jg
adc
(bad)
jae
and
shr
sar
bound
mov
icebp
popf
mov
xor
sti
lea
cmp
xchg
sbb
cli
xlat
pushf
pop
pop
enter
call
bnd
rcl
jns
movs
or
add
xchg
(bad)
andps
push
bound
movhps
sbb
adc
icebp
mov
shr
sti
outs
inc
jns
test
fsub
cmp
or
les
pusha
rcl
ins
dec
ins
jge
movs
leave
mov
in
inc
cmp
popf
je
pop
cwde
rcr
mov
cmp
push
out
jg
movs
stos
ror
cmp
test
(bad)
sbb
adc
and
adc
jo
cmps
jecxz
in
push
scas
rcr
cmp
int
pop
jmp
mov
and
rdpmc
sub
popa
outs
into
xchg
(bad)
cmp
ret
jmp
sbb
jl
hlt
ret
fistp
xchg
jns
mov
test
add
push
js
push
stos
addr16
shl
in
jno
movs
out
dec
jb
data16
push
sub
stos
out
mov
icebp
aam
in
jnp
xor
add
sbb
aam
retf
xor
ror
adc
pop
push
mov
out
repnz
(bad)
in
cmp
retf
rcr
rcr
mov
je
test
sti
sub
add
nop
jnp
xor
dec
sbb
jno
jns
in
xor
push
sti
cmps
jmp
retf
jo
shr
out
rcl
iret
add
adc
and
stos
xor
call
add
mov
ja
sbb
ins
xchg
imul
sub
cmp
sub
leave
xor
fsubr
pop
or
adc
mov
jbe
out
lds
xchg
pop
mov
push
or
or
fdiv
mov
pop
fcmovu
in
push
(bad)
jle
sbb
fdiv
pop
pusha
sti
int
bound
inc
mov
js
enter
sub
xor
mov
jmp
sahf
nop
js
push
(bad)
out
xor
mov
mov
push
push
cmp
xor
mov
xchg
or
mov
push
xor
leave
sbb
xchg
loope
ja
jmp
jmp
in
clc
jno
mov
ins
(bad)
cld
nop
inc
push
in
mov
push
mov
rol
ins
fwait
pop
xchg
dec
pop
cmps
daa
cmps
mov
shl
outs
cld
mov
sub
jo
jg
out
lods
pop
arpl
jbe
mov
fcmovnbe
xchg
add
dec
fcom
sti
pop
ret
inc
xchg
lods
cdq
and
xor
cdq
pop
retf
pop
mov
js
jo
push
push
add
into
jno
mov
jae
push
pusha
cdq
addr16
pop
add
xchg
xor
adc
push
cmp
add
loop
ins
out
stc
int
daa
sbb
cld
test
std
stos
bound
jp
adc
jo
lahf
sbb
cmovle
and
xchg
mov
ins
cs
popf
sbb
cld
dec
dec
ins
sbb
adc
pop
xor
jl
xor
movs
xchg
jae
xor
loope
sti
sbb
je
jl
call
stos
(bad)
sub
data16
sbb
mov
cmp
dec
stos
outs
mov
rcl
lods
lock
(bad)
ins
pop
xlat
inc
push
ds
push
retf
sti
xor
add
mov
push
inc
push
(bad)
adc
mov
sahf
or
xor
out
add
ror
add
mov
rol
sbb
sbb
fstp
mov
sahf
jmp
jae
iret
adc
mov
xchg
pop
mov
das
(bad)
jmp
pop
sub
inc
(bad)
(bad)
push
xchg
sub
aaa
mov
imul
out
shl
scas
sti
adc
xor
rol
lahf
movs
fisub
int
xchg
mov
and
cwde
push
xchg
xchg
es
dec
mov
inc
cld
mov
dec
or
adc
daa
jo
and
lahf
ret
not
push
pop
fcmovu
mov
leave
mov
jmp
xor
jns
mov
mov
add
cmc
sub
pushf
or
cli
jmp
ds
imul
cmp
pop
imul
mov
dec
sbb
repz
sub
in
repz
push
cmp
ss
repnz
std
sbb
add
or
movs
and
clc
sahf
or
in
mov
(bad)
fnstsw
inc
mov
or
ins
out
stos
les
adc
(bad)
int3
and
sbb
adc
(bad)
cmp
xor
js
cwde
add
jecxz
push
jecxz
mov
aad
mov
int
adc
aam
enter
stos
inc
jbe
dec
mov
cmp
mov
(bad)
sti
ficom
adc
mov
xchg
(bad)
jmp
mov
std
or
jge
ds
or
cmp
data16
das
mov
(bad)
aaa
and
push
xchg
xor
sub
mov
inc
sti
test
add
inc
mov
das
xchg
and
jle
mov
popf
push
cmps
jns
jg
mov
stos
cmp
xor
dec
mov
popa
loope
mov
int3
and
adc
mov
adc
and
pop
loopne
lea
jns
sar
cmc
add
cmps
mov
in
popf
les
and
mov
dec
xlat
mov
aad
movs
pop
not
mov
scas
dec
mov
out
mov
retf
out
push
test
ss
xor
push
jmp
sar
(bad)
xchg
enter
dec
adc
sbb
cmp
push
push
push
cmp
pop
or
aas
pop
retf
mov
adc
out
std
retf
adc
mov
fbstp
(bad)
xor
ss
ret
iret
xor
mov
shl
mov
pop
dec
sub
loopne
jo
adc
and
add
out
jno
add
data16
adc
fisttp
mov
cmps
jl
(bad)
les
out
out
mov
iret
out
ins
rol
pop
loop
fldcw
call
fistp
in
in
xchg
jbe
out
das
or
mov
jg
cmc
data16
dec
cli
inc
pop
sbb
dec
jecxz
pop
jno
lock
jne
es
or
cwde
push
call
xor
in
mov
pop
xchg
and
pop
dec
dec
mov
mov
cmp
call
lods
bound
aam
nop
mov
jp
(bad)
cdq
ror
mov
fidiv
push
pushf
sub
stos
add
and
sub
xor
jmp
fild
call
mov
add
sahf
pop
pop
in
out
jmp
mov
cmps
arpl
cmp
mov
mov
jae
scas
punpckldq
dec
int
jge
das
pop
sub
and
icebp
xchg
pop
idiv
or
sub
mov
jne
(bad)
and
adc
pushf
retf
shr
icebp
jge
test
fwait
mov
std
into
imul
popf
stc
dec
sub
stc
arpl
stos
in
inc
cpuid
add
pop
jg
add
ss
pop
dec
aas
pusha
jnp
push
dec
push
cmps
les
and
dec
mov
sbb
das
mov
xchg
inc
xchg
mov
(bad)
adc
xchg
je
call
sub
xor
mov
shl
lea
sbb
in
in
pop
cmp
sbb
in
out
mov
sub
mov
mov
lock
jne
cmp
push
mov
jmp
sti
push
pushf
lds
push
dec
arpl
dec
xchg
lahf
movs
dec
cmps
pop
push
pusha
div
stc
inc
ins
cmp
mov
frstor
jmp
sub
lods
mov
jno
jo
mov
push
add
push
sbb
mov
test
stos
push
adc
pop
push
or
loopne
js
lods
rol
stc
in
sbb
xchg
enter
xchg
jne
lahf
loop
mov
scas
push
push
push
dec
rol
push
jecxz
cs
ins
cmp
ja
inc
cwde
das
pusha
push
movs
retf
push
call
shr
jne
cmp
or
fwait
sub
cmc
xor
call
dec
das
lods
mov
test
push
mov
fsub
dec
aam
mov
and
adc
movs
sub
mov
mov
clc
cmp
scas
(bad)
mov
and
das
or
retf
ret
aad
and
cdq
in
shl
rcl
mov
cmps
cli
dec
dec
enter
loopne
xor
stc
jo
pop
mov
(bad)
jg
test
mov
rol
pop
mov
stos
and
xor
sbb
mov
adc
outs
(bad)
daa
xor
mov
test
jecxz
and
mov
dec
lahf
shl
jle
pop
out
test
sub
mov
and
ret
test
and
fimul
or
in
cmp
fdivr
inc
loop
add
jb
sbb
add
mov
fstp
push
movs
popa
xor
push
hlt
out
pop
mov
iret
jmp
add
ret
cmps
inc
mov
mov
adc
and
lds
fstp
(bad)
pop
push
push
xor
mov
cli
out
retf
sahf
pop
out
push
cs
popf
jmp
js
pusha
sbb
mov
sub
add
xchg
mov
dec
push
jb
test
popf
sti
xchg
in
(bad)
mov
inc
mov
jb
mov
push
std
(bad)
fucomip
push
pop
push
stos
pop
jmp
std
cld
push
adc
mov
xor
mov
pop
retf
test
loopne
cs
jecxz
movs
fwait
test
add
mov
jge
pop
mov
fwait
pop
mov
js
lods
shr
jl
cmp
pop
and
shr
adc
inc
pop
pusha
movs
inc
adc
popf
loopne
adc
sahf
les
sbb
xor
cmp
jnp
inc
add
jle
xlat
jl
loope
sar
ror
push
mov
jecxz
cli
add
adc
hlt
lds
mov
ret
fmul
jb
adc
and
sti
pop
mov
or
jno
fincstp
xlat
xor
push
inc
aas
ret
xor
add
in
sub
push
push
mov
jnp
dec
fs
sbb
mov
loopne
jns
push
popf
in
adc
add
ja
xor
cmp
ret
push
push
enter
inc
xor
ins
xchg
les
sub
sahf
sub
sub
fild
das
sti
outs
sub
or
loop
sti
pop
jl
mov
lods
cmp
mov
mov
out
ja
lock
mov
(bad)
rol
inc
ficomp
mov
test
je
inc
mov
movs
mov
inc
je
sbb
fsubp
int3
int
call
inc
(bad)
dec
and
mov
jecxz
ja
retf
(bad)
fdivr
nop
fild
aaa
rcl
jae
sub
fcmove
(bad)
shr
xchg
jno
adc
lds
gs
loopne
inc
push
stc
imul
inc
ret
pop
pop
sbb
jecxz
ins
mov
imul
cmp
xchg
mov
push
push
push
jb
jl
mov
pop
out
aaa
scas
test
push
mov
mov
mov
ds
lea
sub
in
rol
out
call
jmp
leave
xor
and
daa
(bad)
int3
(bad)
mov
cmps
movs
data16
in
mov
imul
and
ss
adc
ret
in
xchg
in
lods
mov
cwde
mov
sar
xchg
sub
dec
out
cmp
aad
sbb
imul
cmp
xor
ja
mov
and
loop
fdivrp
arpl
inc
les
outs
int3
xchg
cmp
scas
pop
or
sti
or
mov
repz
stc
shl
mov
fiadd
cmps
pop
mov
shl
mul
adc
pop
inc
mov
push
mov
not
push
mov
sub
or
int
rcl
xor
cs
retf
hlt
mov
pop
cmp
sub
ins
push
mov
or
push
cdq
add
outs
sar
(bad)
pop
enter
and
outs
adc
inc
gs
icebp
test
xor
or
rcl
inc
fsub
cmp
icebp
mov
pushf
mov
xchg
adc
sub
ins
sub
pushf
xchg
cdq
je
ins
fs
sub
sahf
mov
jecxz
jo
pop
cmp
sub
mov
cs
out
icebp
xor
seto
add
and
sbb
ffreep
and
(bad)
fsubrp
jno
into
aas
lock
mov
(bad)
xchg
pop
xchg
mov
cld
pop
push
imul
inc
mov
inc
xlat
mov
out
scas
and
jmp
pop
cmp
loope
dec
addr16
popa
movs
adc
jp
sar
inc
shl
pop
jae
repz
movs
into
movs
sub
pusha
iret
stos
dec
xor
xchg
cs
lock
adc
cmp
nop
test
popa
pusha
in
jecxz
pop
sbb
sbb
fisttp
lahf
fadd
into
xchg
aad
sub
mov
sbb
lea
or
push
or
push
dec
sub
jecxz
(bad)
mov
push
loop
jne
loopne
sub
xchg
and
fmul
push
jge
(bad)
sub
xchg
daa
adc
sbb
repz
mov
rcr
repz
xchg
into
je
mov
(bad)
gs
ds
repnz
push
lods
fsub
jecxz
arpl
jnp
retf
mov
repz
outs
dec
push
cmc
push
sbb
popa
das
or
add
mov
push
popf
loope
dec
jp
cmp
(bad)
into
jae
add
pop
jmp
retf
ins
jmp
lods
in
mov
hlt
test
add
lea
jg
fsubp
es
imul
cmp
xchg
inc
js
fwait
xchg
ret
(bad)
cmp
das
jmp
arpl
adc
pop
pushf
or
inc
mov
xchg
ins
lods
xlat
or
cmps
xor
cld
iret
mov
pop
xchg
inc
mov
mov
adc
jns
out
rcr
pop
jnp
shl
loop
adc
movs
jb
xchg
pop
cmps
lock
xchg
xchg
inc
cdq
stos
xor
cmp
inc
or
movs
retf
cdq
lods
shl
shl
bound
fnstenv
out
(bad)
push
aam
xchg
and
push
pop
repnz
(bad)
xchg
push
mov
xchg
push
ret
loopne
mov
cli
cli
bound
cdq
jb
xchg
and
out
push
adc
das
jns
dec
shl
(bad)
sub
loope
and
dec
ficomp
and
retf
out
mov
(bad)
sub
mov
adc
cmp
inc
pop
ffree
je
mov
jp
ss
cdq
push
xor
stos
inc
fmul
inc
pop
rol
adc
push
inc
jecxz
leave
xor
in
adc
nop
retf
leave
pop
inc
and
fcmovu
push
pop
xchg
xor
out
sub
and
cwde
add
xor
sub
xchg
lds
iret
popa
into
xchg
icebp
xchg
pusha
add
sub
xlat
pop
xchg
lock
or
jmp
lahf
(bad)
xor
ins
lahf
(bad)
pusha
sub
inc
dec
int
mov
sti
cmps
jmp
xor
in
jl
icebp
adc
bound
sbb
pop
push
cdq
lods
data16
(bad)
lods
dec
push
gs
fcmovnbe
push
gs
stos
inc
aad
int
repnz
sbb
imul
xchg
or
fistp
je
cmp
xor
mov
mov
clc
hlt
mov
inc
(bad)
mov
iret
imul
xchg
jle
sbb
cmp
sub
xor
mov
out
push
jmp
mov
add
mov
sub
je
jmp
test
cwde
inc
mov
daa
dec
outs
fist
sub
loope
test
out
mov
mov
add
rcl
jle
add
(bad)
fadd
push
push
ss
inc
jecxz
sbb
dec
xor
scas
xor
pop
fnsave
pusha
int
push
pop
fsubr
and
mov
pop
outs
jecxz
push
add
jge
jmp
imul
mov
imul
dec
add
pop
mov
cs
mov
adc
repz
and
nop
adc
cmp
sub
dec
dec
arpl
retf
syscall
sub
call
xchg
ror
add
ret
dec
sbb
add
bound
mov
xchg
jecxz
cmp
enter
test
push
mov
dec
mov
nop
lahf
cmp
cmps
in
outs
popa
loop
sbb
repnz
loop
mov
jg
mov
pop
and
push
jno
movs
test
leave
cmp
mov
xor
jae
jae
mov
test
nop
mov
mov
cmp
inc
inc
mov
mov
pop
pop
push
aas
aas
iret
movs
js
fstp
daa
xor
sub
call
dec
dec
pop
adc
test
pop
aad
push
popf
pop
aad
les
rcr
and
inc
add
sbb
or
lock
sub
ret
push
cmps
out
clc
xchg
xlat
xchg
pop
pop
stc
ins
push
(bad)
jge
or
aam
test
cmc
add
dec
out
xor
xor
(bad)
loop
mov
push
xchg
enter
ret
test
lods
fstp
icebp
pop
and
pop
jp
add
dec
jp
adc
bound
cmps
pop
loopne
push
dec
push
mov
iret
pushf
cvttps2pi
cmp
popa
mov
mov
and
std
xchg
adc
int3
mov
or
mov
dec
(bad)
(bad)
out
jle
std
cwde
call
mov
gs
mov
mov
mov
lods
cs
ror
cmc
cmp
sbb
adc
inc
mov
sbb
dec
lds
les
loop
out
add
rol
aaa
xor
pop
repnz
je
pop
and
aad
in
or
fistp
cdq
(bad)
push
and
add
dec
cmc
xor
adc
mov
cmc
in
sbb
jo
cmp
or
mov
mov
cmp
mov
cs
loopne
pop
mov
add
bound
arpl
mov
mov
and
xor
jns
in
add
out
or
jmp
sbb
mov
cmps
cdq
dec
lds
mov
or
retf
push
dec
rcr
and
cmp
call
addr16
(bad)
(bad)
mov
jmp
addr16
push
mov
xor
xor
sahf
loop
pushf
jle
inc
ins
jg
sbb
fimul
jle
jae
add
xchg
loop
sbb
and
add
add
std
not
cmp
and
cld
mov
(bad)
pop
mov
cmp
cmc
push
pop
mov
push
repz
sbb
sub
mov
jmp
call
aam
adc
push
sbb
cmp
out
adc
pop
(bad)
cmc
xor
test
xor
sub
push
dec
(bad)
xor
pop
lods
dec
and
es
ja
test
jns
retf
popf
scas
inc
lods
test
jmp
out
hlt
adc
cmps
adc
sub
xchg
sub
inc
ins
jae
icebp
adc
arpl
sbb
(bad)
mov
xor
xor
pusha
ins
pop
mov
(bad)
retf
mov
mov
sbb
mov
mov
push
xor
cmp
push
dec
cmp
iret
jnp
mul
xchg
mov
in
add
(bad)
test
xrelease
imul
or
push
int3
shl
cmps
fnsave
fidivr
jle
test
sbb
sub
and
adc
push
adc
xchg
cmps
xchg
add
popf
xchg
retf
lods
ret
xor
mov
ins
pop
lock
cmp
pop
jne
xor
pop
in
sub
(bad)
enter
mov
shr
retf
call
rcr
test
rcl
add
jp
ret
xchg
je
sbb
and
jns
or
dec
aam
adc
cmp
mov
pushf
jecxz
(bad)
mov
cmp
xchg
xor
or
sbb
out
ja
cld
call
or
out
test
push
jp
mov
fldln2
jne
aaa
mov
cmc
int3
push
pusha
push
shr
clc
cmc
imul
sub
push
adc
fs
loopne
repz
xchg
adc
and
push
pusha
cmp
dec
shl
add
neg
mov
add
pop
daa
add
ret
dec
inc
inc
aam
dec
push
adc
inc
push
jmp
fs
ror
aaa
adc
adc
in
mov
dec
jp
dec
pxor
sti
shr
adc
pusha
push
inc
xor
sti
dec
outs
pop
das
hlt
cmp
ret
jbe
sub
xchg
sub
test
imul
enter
sbb
push
fcmovnu
pushf
cmp
inc
call
add
mov
add
sti
imul
iret
leave
cmp
nop
jno
jl
xchg
mov
cli
jge
(bad)
jmp
mov
adc
into
jge
movs
test
fsubr
iret
adc
push
movs
ins
gs
lods
dec
jl
in
clc
retf
jecxz
je
aas
xchg
sbb
pop
jne
inc
or
xchg
mov
div
mov
sub
and
dec
sahf
mov
stc
jo
ins
out
mov
mov
shr
mov
sub
mov
cmp
add
mov
call
xor
enter
jge
push
retf
loope
nop
pop
pushf
cmc
mov
aad
(bad)
mov
or
mov
pop
fsubr
fst
stc
shl
test
mov
sbb
xor
(bad)
(bad)
lods
call
addr16
dec
call
sti
pop
inc
pop
inc
mov
out
xchg
jo
or
fstp
in
xor
es
sbb
mov
je
into
mov
aas
and
pop
lahf
arpl
jno
sbb
stc
stc
pop
sub
imul
ja
jmp
shl
in
aas
adc
inc
xchg
(bad)
gs
push
xchg
adc
ror
dec
fild
data16
cld
mov
ret
sub
xchg
xchg
fisubr
pop
jns
gs
bound
sbb
cmps
jae
sub
pop
test
inc
push
ret
push
xor
and
xchg
cmp
pop
in
pushf
sub
add
scas
cmp
daa
sbb
xchg
fiadd
fnsave
add
push
stc
xor
leave
push
add
dec
xchg
cmps
xor
and
(bad)
les
lds
cmp
pop
(bad)
test
push
mov
jnp
ret
push
adc
and
xchg
sub
fld
outs
xchg
jns
movs
mov
sbb
test
xor
and
pop
dec
xchg
neg
mov
xor
lock
push
adc
fdiv
xchg
xchg
test
mov
aaa
add
dec
xchg
repz
sub
clc
or
mov
test
idiv
(bad)
pop
push
push
xor
cs
dec
dec
clc
test
in
sbb
addr16
mov
es
dec
mov
adc
sbb
pop
jecxz
push
aas
inc
jmp
lods
pop
popa
push
mov
ret
jb
call
xor
xor
adc
push
push
mov
scas
inc
fnstsw
and
sub
push
cwde
mov
imul
sbb
jb
add
dec
sbb
adc
pop
cmps
sar
pop
push
cmp
stos
outs
loop
mov
jo
movs
sub
sti
gs
push
dec
mov
sbb
pop
inc
mov
dec
or
mov
or
mov
and
dec
ficomp
je
shl
(bad)
xor
cmp
int
dec
outs
aas
adc
or
and
mov
retf
repz
mov
rol
and
div
cdq
arpl
dec
push
or
xchg
dec
push
mov
fadd
icebp
imul
and
add
je
test
bsf
ss
imul
stos
cmp
or
aad
sub
frstor
pop
or
mul
inc
push
mov
call
popa
enter
push
js
sub
mov
sub
movs
and
mov
shr
fld
push
and
imul
and
push
aaa
gs
cmp
les
in
adc
or
loop
hlt
add
fs
sbb
sub
mov
xchg
xchg
push
daa
ins
mov
mov
mov
out
push
pop
(bad)
mov
push
sbb
dec
je
push
inc
jne
cmp
inc
movs
fdiv
scas
dec
(bad)
fwait
jmp
xchg
cmp
inc
icebp
int
mov
adc
adc
js
nop
xlat
(bad)
mov
sbb
push
cdq
js
icebp
shr
inc
in
fucomp
xor
push
mov
stc
push
rcl
imul
dec
mov
mov
rcl
jecxz
pop
sar
sahf
mov
cmp
jl
cwde
iret
ss
leave
inc
push
test
sub
lock
jecxz
and
daa
out
out
mov
xchg
lock
cdq
mov
and
arpl
popa
es
inc
rol
mov
enter
in
scas
call
pop
test
aaa
jle
jb
enter
cs
mov
push
and
es
call
xlat
adc
mov
in
push
fidivr
pop
mov
pop
fldenv
sbb
in
cli
mov
push
jno
daa
lahf
inc
xor
and
jp
sub
mov
ss
dec
sbb
pusha
sti
ret
push
fstp
sbb
mov
mov
push
xor
push
cmc
fistp
in
push
mov
push
sbb
outs
mov
icebp
sbb
mov
aaa
mov
ins
jmp
xchg
inc
inc
mov
outs
mov
movs
iret
push
push
push
into
mov
mov
mov
repz
cdq
cmp
ror
inc
loope
fld
push
loope
pop
daa
jo
xor
mov
outs
inc
cmc
clc
scas
in
pop
adc
bound
cmp
(bad)
gs
aas
mov
mov
xlat
mov
push
out
(bad)
gs
xor
pop
mov
push
sti
mov
ror
inc
mov
arpl
xchg
add
std
add
(bad)
shr
jne
pop
mov
(bad)
dec
or
jmp
mov
cs
jns
xchg
or
or
jl
ds
jb
pop
stos
mov
xor
loop
or
push
and
pop
fwait
inc
xchg
movs
jl
inc
xor
(bad)
pop
inc
vcomisd
adc
cmp
div
in
dec
sub
dec
in
retf
iret
(bad)
fst
hlt
bnd
popf
lahf
imul
out
sbb
bound
jecxz
scas
push
xchg
out
and
xchg
call
mov
push
fdiv
shl
rol
push
mov
pop
pop
js
xor
add
mov
and
aaa
dec
mov
mov
scas
jl
pop
js
cld
mov
repnz
jmp
mov
inc
inc
ret
icebp
cmp
inc
jb
xor
sub
std
or
cmp
ret
push
loope
adc
test
pushf
cmps
cmp
adc
dec
pop
call
mov
xor
dec
mov
pop
ins
sahf
add
lahf
add
inc
and
das
cli
dec
mov
push
cmps
std
ret
fs
mov
push
pop
pop
in
jbe
xchg
pop
test
xor
lahf
loop
pop
xor
and
popa
aam
nop
mov
ss
mov
sahf
data16
dec
mov
loopne
popa
xchg
xchg
test
cs
push
test
(bad)
jo
iret
dec
gs
loop
ret
dec
jbe
pop
pop
adc
or
and
pop
xchg
movs
leave
add
mov
xchg
cmp
jbe
mov
sahf
daa
xchg
sub
call
lods
fist
and
in
ds
and
dec
stc
jb
cld
outs
sbb
popf
les
jmp
push
pop
xor
mov
xchg
and
jmp
lahf
inc
adc
cld
loope
pop
jnp
add
pusha
push
loop
push
jp
into
mov
shl
fbstp
int
mov
push
or
js
pop
pushf
std
push
in
sub
mov
outs
lahf
pop
push
sub
outs
scas
dec
pop
push
mov
in
(bad)
aam
pop
pop
fnsave
push
add
ret
sbb
mov
sub
dec
out
adc
mov
aas
sbb
inc
lock
jp
dec
cmp
mov
scas
push
cwde
fsub
hlt
push
aas
daa
jmp
xor
xor
es
in
jb
retf
out
leave
scas
inc
pop
fidivr
cmp
call
(bad)
arpl
ins
jae
mov
jp
fimul
pop
repnz
sbb
popf
inc
aam
jg
cmps
inc
fld
por
jno
shr
pop
shl
cmp
(bad)
fcmovnbe
fisubr
out
mov
jl
xchg
or
mov
rcr
fdiv
scas
pop
sbb
cmc
sahf
jge
xor
out
enter
sub
push
stos
sbb
sub
mov
cmps
sub
jle
inc
push
mov
(bad)
daa
xchg
(bad)
repz
jmp
mov
dec
cmp
cmp
repnz
pop
pshufw
push
and
or
xor
xor
das
fcmovu
stc
cmps
loope
sub
jmp
adc
mov
adc
ret
daa
or
retf
adc
std
add
movs
xchg
loopne
dec
xchg
push
and
and
(bad)
adc
sti
cmp
adc
xchg
test
mov
cmps
and
imul
pop
or
mov
cmp
repz
inc
pop
int3
inc
clc
add
or
or
fst
sbb
daa
retf
(bad)
call
jg
movs
(bad)
cli
push
xor
adc
adc
ror
xlat
and
shr
mov
mov
movs
cmp
pop
pop
ins
inc
daa
imul
or
adc
iret
and
mov
xor
adc
push
dec
cmp
push
cs
or
(bad)
hlt
cmp
push
sar
and
mov
in
pop
dec
mov
cmp
xor
pop
clc
mov
iret
in
adc
xchg
and
lahf
or
data16
(bad)
adc
dec
sbb
push
jbe
fwait
mov
call
fsubrp
leave
je
xor
mov
mov
(bad)
cmps
inc
test
sub
push
mov
pop
push
dec
sbb
test
push
pop
mov
xchg
bound
call
xchg
test
sub
pop
lods
mov
(bad)
(bad)
lock
(bad)
sbb
adc
call
xchg
and
dec
push
shl
xor
mov
rcr
pushf
mov
int
das
outs
jae
mov
scas
pop
xchg
cdq
add
jecxz
in
jp
mov
sbb
cmc
or
sbb
xor
xchg
mov
inc
std
(bad)
fdivp
mov
sahf
retf
cld
cmp
pop
push
jbe
and
lahf
pop
std
fcom
mov
into
mov
in
test
popa
ret
(bad)
cli
mov
inc
rcl
or
clc
cs
push
jg
and
and
mov
ja
scas
or
je
fisubr
xor
push
cmp
mov
mov
adc
shr
inc
test
neg
fild
mov
inc
sub
push
adc
retf
sbb
push
in
push
clc
stos
push
inc
add
mov
or
jmp
mov
inc
inc
xor
fadd
retf
outs
push
shl
call
add
xor
addr16
sub
fadd
xchg
or
xor
int3
dec
loope
ja
fs
scas
inc
mov
addr16
ret
xchg
cmp
or
aas
jp
repz
or
sub
pop
xor
push
push
sbb
popa
xor
popa
mov
lods
ins
cwde
mov
inc
xchg
(bad)
aas
in
fwait
add
jnp
addr16
and
sti
pushf
addr16
movs
out
cli
fisub
mov
adc
pusha
sbb
mov
aaa
jnp
mov
sti
fbld
out
push
push
xor
lods
mov
lock
mov
inc
pop
ins
xor
or
aaa
add
movs
and
and
pop
adc
adc
je
nop
loope
push
push
stos
jmp
loope
pop
hlt
ss
xor
pop
(bad)
pop
shr
push
and
ds
iret
call
fstp
test
mov
adc
mov
dec
jb
push
(bad)
ins
test
xchg
outs
test
push
inc
leave
ja
push
in
mov
sahf
jecxz
mov
push
sbb
inc
lds
sub
inc
aad
iret
in
and
or
mov
inc
cmp
(bad)
scas
cmp
dec
xor
add
jb
sbb
jl
dec
jle
dec
jo
add
ja
test
out
in
push
les
in
inc
jbe
popa
sub
xchg
inc
push
jb
das
sub
test
pop
out
sub
push
into
repnz
loop
repnz
mov
mov
xchg
push
(bad)
mov
push
mov
ret
push
jne
push
cmps
add
cmps
pop
fcom
ss
xchg
adc
mov
jbe
mov
push
in
mov
mov
lea
sti
mov
mov
cmp
adc
sbb
cmps
int3
fcomp
test
hlt
lds
int3
pop
xchg
scas
mov
sbb
inc
pop
jo
mov
inc
fdivp
leave
into
outs
xchg
mov
in
cmc
arpl
mov
pop
add
and
jnp
mov
in
sub
lea
mov
idiv
cmp
mov
adc
pop
cmc
mov
(bad)
adc
ffreep
add
call
and
inc
pop
scas
(bad)
fdiv
cmps
mov
test
mov
das
fisub
test
xchg
call
cmp
test
push
push
and
adc
mov
dec
mov
ins
jae
dec
js
cmp
sbb
hlt
fsubr
or
shl
pop
or
jne
and
cmp
sahf
xor
mov
mov
add
pop
or
xchg
or
ror
cmps
fcom
mov
xor
aaa
xchg
adc
add
lds
push
dec
rcl
mov
xchg
in
sbb
xor
inc
clc
icebp
jnp
adc
push
push
mov
fnstenv
aam
fisttp
xlat
push
ror
data16
add
adc
std
xchg
dec
arpl
int
mov
imul
fwait
daa
mov
mov
stos
sti
icebp
(bad)
push
(bad)
mov
mov
sub
and
stos
iret
sar
or
lea
inc
mov
mov
sub
and
jg
mov
mov
adc
test
mov
adc
xlat
aad
out
sub
movs
and
lods
jnp
lahf
push
fst
push
push
or
push
cs
inc
into
cmp
int3
inc
mov
ja
out
add
out
push
push
xchg
mov
adc
mov
aas
rcr
pop
(bad)
aad
int3
jae
(bad)
push
jo
mov
js
arpl
call
enter
cmp
out
mov
repz
not
or
outs
iret
outs
and
gs
dec
add
xchg
pop
cld
scas
je
ficom
pop
cmp
or
cwde
repnz
ror
cli
cmp
sub
adc
or
stc
repz
daa
or
loope
push
cmp
add
or
aam
jmp
xor
call
inc
lds
mov
mov
mov
(bad)
lahf
cdq
and
mov
xor
cs
fst
fs
(bad)
jmp
sub
jns
inc
pop
jge
sub
mov
jge
push
mov
mov
test
mov
and
in
add
sub
scas
inc
pop
cmps
aad
enter
bnd
rol
pop
movs
cmp
call
jae
popf
sub
daa
inc
test
cld
add
pop
mov
xor
ffreep
push
jmp
pop
mov
test
cld
fidiv
or
sbb
mov
out
test
sbb
cwde
jb
xchg
call
shr
adc
cmp
aaa
call
adc
out
ret
add
lods
daa
pop
call
mov
hlt
pusha
fidivr
mov
push
in
mov
xor
and
fcomp
mov
ffree
test
shl
gs
xchg
sbb
das
mov
gs
push
jmp
outs
gs
gs
xlat
shl
mov
inc
jns
aas
pop
mov
repz
sub
push
mov
add
shl
push
test
aad
or
mov
lods
jecxz
fs
xor
hlt
mov
pop
outs
jp
xchg
outs
push
outs
pop
fs
movs
les
push
pop
sar
jne
and
arpl
aaa
or
pop
dec
and
pushf
enter
cmp
(bad)
jae
int
enter
push
pop
xchg
sti
addr16
cmc
sbb
mov
pop
in
loope
add
stos
sbb
mov
pop
test
and
xor
and
bound
and
in
fwait
xor
int
aaa
mov
aas
sub
or
in
cmp
and
xor
or
xor
jne
shl
sti
sti
xor
push
inc
xchg
cmp
add
jo
mov
sbb
test
mov
mov
xchg
(bad)
into
aaa
shl
xchg
aam
jl
(bad)
or
imul
adc
xor
lods
in
mov
retf
pushf
mov
outs
shl
lods
jno
dec
mov
call
test
mov
mov
or
es
setnp
(bad)
xor
popa
shl
int3
sub
adc
xchg
fsub
dec
or
xchg
cmp
cs
adc
cmps
shl
ret
or
mov
fsubr
into
nop
clc
pop
in
rcl
pop
jg
(bad)
or
mov
test
add
je
cmp
out
test
push
test
call
loope
jle
fiadd
sbb
pusha
out
xchg
push
push
pop
call
dec
jmp
enter
mov
outs
movs
fs
shr
mov
sub
mov
call
push
xlat
jl
jmp
pop
out
cdq
adc
test
stc
jns
sbb
xlat
int3
jo
inc
lds
inc
xor
retf
xchg
pop
cmp
call
leave
jno
cmps
std
movs
and
pop
scas
xor
out
inc
jmp
(bad)
add
cmps
stos
bound
jb
je
pop
jmp
xchg
inc
cmp
stos
inc
ror
mov
add
stc
retf
cmp
push
(bad)
sbb
pop
jle
xlat
ror
jecxz
imul
mov
cdq
in
scas
jp
out
jp
adc
jmp
dec
adc
(bad)
test
leave
push
pop
(bad)
jmp
pop
add
mov
dec
cdq
not
cwde
outs
test
shl
pop
aaa
mov
imul
test
dec
je
repz
call
or
fucomip
leave
push
(bad)
pusha
sbb
test
jbe
xchg
sar
frstor
sbb
loop
popf
or
inc
inc
push
inc
aaa
das
lods
ret
nop
fisubr
push
shl
or
lods
cmps
sbb
dec
nop
adc
jae
popa
and
push
fld
cwde
sub
aaa
jecxz
sahf
inc
mov
dec
ret
lods
popf
add
or
nop
jae
xchg
jbe
fst
or
mov
cmp
icebp
jno
fst
int
push
cmps
mov
jo
jne
mov
mov
ret
sub
aad
inc
or
mov
inc
(bad)
lea
jmp
retf
jmp
out
pop
aaa
out
fcmovbe
push
and
sbb
xchg
test
fadd
in
js
inc
out
push
loopne
xchg
gs
push
or
mov
pop
pop
or
cmp
gs
jne
inc
and
(bad)
sti
inc
xlat
outs
add
jo
xchg
add
cld
fs
jb
mov
mov
mov
mov
adc
popa
sbb
jno
sub
daa
int
pop
call
out
sbb
les
push
movs
(bad)
pop
inc
xor
pop
iret
pusha
mov
adc
inc
paddsw
fistp
test
inc
sbb
sbb
mov
sub
lods
popf
inc
mov
icebp
out
loopne
mov
fnstenv
repz
out
stos
(bad)
pop
dec
and
loopne
js
(bad)
mov
shl
and
rol
mov
xor
rcl
cmp
mov
xchg
xor
add
inc
dec
(bad)
cmp
push
inc
pop
call
ret
or
or
sbb
je
push
xchg
je
adc
fs
mov
test
aam
pop
(bad)
dec
mov
int
imul
jmp
lods
fnstenv
ins
or
dec
lods
movs
pop
ins
cmps
(bad)
mov
lea
jb
push
inc
sahf
or
ss
mov
pop
add
or
adc
sub
mov
mov
nop
xchg
(bad)
retf
xchg
(bad)
jne
arpl
stc
dec
push
inc
lea
dec
scas
not
mov
stos
mov
adc
cmps
loop
les
jo
mov
int
in
mov
pop
or
jecxz
jmp
sbb
(bad)
test
mov
imul
into
out
test
push
sahf
or
sub
inc
mov
add
or
bound
cmp
in
pop
in
lea
inc
pop
fisttp
ins
out
icebp
push
jno
fistp
int3
mov
xchg
(bad)
cdq
xchg
dec
sbb
adc
test
fcomp
frstpm(287
fild
cmc
ret
fistp
pop
jmp
inc
xor
mov
inc
xchg
pop
in
inc
mov
mov
jmp
sbb
mov
dec
and
mov
popa
add
scas
mov
xchg
sti
shr
xor
adc
ror
jbe
and
inc
sub
add
pop
inc
fdivr
aaa
out
pop
(bad)
cmp
sub
mov
scas
loop
popf
adc
aas
jb
mov
(bad)
std
sub
push
cmp
into
pop
sub
xchg
sub
and
add
aad
loop
sub
dec
mov
lea
pop
xchg
(bad)
xor
pmullw
xchg
mov
jmp
inc
inc
test
jae
es
push
test
ja
ds
ret
mov
cmps
enter
inc
or
rcl
xchg
test
push
nop
jb
cmp
es
cmp
dec
iret
xlat
jge
fdivr
adc
and
enter
cmp
in
call
aaa
call
std
mov
cwde
jo
or
or
jle
repz
pushf
cmps
outs
stos
int3
and
call
fldcw
ss
cmps
iret
in
test
mov
adc
push
movs
push
pop
cmps
mov
push
add
stc
or
inc
pushf
das
cmp
sbb
mov
mov
cmp
sub
adc
mov
push
mov
faddp
xchg
fcom
fldenv
scas
or
int3
sub
jmp
mov
xor
fninit
push
movs
sar
add
sbb
add
mov
jne
or
repnz
shr
aaa
test
cwde
mov
sbb
push
std
outs
dec
adc
sbb
imul
mov
loop
in
in
rcr
inc
inc
and
push
ins
jmp
add
xchg
(bad)
cmp
popa
xor
or
(bad)
and
sub
sbb
daa
xchg
inc
adc
mov
lock
dec
pop
sub
aad
jnp
or
or
and
rcr
arpl
jb
sbb
dec
lahf
(bad)
scas
mov
xor
jge
sub
mov
jecxz
or
xchg
popa
jno
cmps
adc
mov
mov
icebp
xlat
mov
or
out
lods
imul
gs
repz
or
sbb
dec
pop
push
out
mov
pop
inc
dec
cmps
cmp
pusha
sbb
jb
stos
fist
push
xor
in
shl
lods
cvtdq2ps
aad
jge
and
inc
data16
mov
jo
in
out
ret
pop
xlat
sub
inc
sbb
bound
mov
in
gs
xchg
adc
push
or
sub
or
cmp
es
out
dec
mov
push
rcl
in
adc
aad
outs
xchg
loopne
mov
mov
pop
inc
lods
stos
dec
push
fnstcw
cld
mov
and
test
sub
loopne
inc
push
rcr
xor
cmp
pop
cwde
cli
les
nop
outs
mov
test
sbb
jg
ins
sbb
inc
inc
mov
cli
jl
jbe
fistp
aad
movs
in
xchg
retf
cmps
aam
and
push
test
(bad)
jmp
and
jb
xchg
test
push
je
shr
shr
mov
push
ja
imul
cmps
in
mov
fcomp
push
mov
loop
pop
popf
mov
ss
jg
push
adc
push
icebp
call
out
setg
or
adc
mov
das
ins
fdivr
movntps
and
xchg
(bad)
pop
js
or
imul
out
call
ss
cmp
jo
jmp
or
enter
lods
lods
in
popa
push
or
or
mov
cli
cwde
add
jnp
nop
es
loop
sbb
pop
std
mov
movs
cli
repz
jge
mov
mov
(bad)
fisttp
gs
bound
movs
and
(bad)
push
lock
sbb
jb
stos
(bad)
cdq
out
stos
mov
pop
div
jp
mov
mov
aad
bound
ins
mov
adc
push
enter
dec
into
xlat
jo
add
pop
adc
jle
mov
mov
pushf
mov
inc
lods
mov
or
fidivr
mov
mov
clc
ins
jmp
mov
sahf
dec
int3
or
mov
jbe
mov
pop
call
pop
mov
sbb
out
inc
out
mov
jbe
pop
sub
lock
mov
mov
sbb
or
cmps
call
iret
xlat
rcr
mov
pop
sahf
push
enter
ins
xchg
dec
into
jl
inc
dec
add
sbb
std
js
mov
push
mov
movs
call
add
stos
xor
pop
into
adc
loopne
stos
cwde
mov
outs
jbe
push
cmps
scas
jle
call
cwde
test
pop
sub
and
mov
shl
sub
sti
pushf
xchg
dec
retf
xor
mov
js
cmc
sbb
test
sub
xchg
or
mov
arpl
scas
pushf
xor
mov
mov
shr
sub
or
test
push
jns
jg
repnz
mov
std
mov
outs
mov
bound
adc
and
xchg
lea
sbb
and
clc
mov
pop
es
test
jno
test
mov
and
mov
inc
inc
imul
enter
(bad)
in
xchg
or
loope
(bad)
adc
inc
or
cdq
pop
adc
sahf
xchg
xchg
xchg
mov
sub
fld
mul
jae
or
add
fimul
popf
clc
mov
fcmovb
cli
inc
push
sub
sahf
jns
mov
sub
cmc
mov
mov
stos
sbb
add
inc
sti
jns
aaa
into
repz
out
(bad)
xchg
xchg
push
into
push
xor
adc
dec
mov
sbb
jo
std
mov
(bad)
cli
sbb
aaa
lods
jl
in
(bad)
cmp
xchg
aaa
fcomp
mov
ja
cli
or
xchg
test
sti
push
and
loope
push
(bad)
and
jo
shl
xor
lods
sahf
xor
in
cmp
das
mov
sbb
sbb
call
lea
jne
mov
stc
(bad)
mov
outs
cli
(bad)
and
inc
lahf
stc
pop
inc
push
add
outs
push
arpl
adc
push
or
adc
push
(bad)
int
mov
das
pavgb
mov
sbb
mov
mov
add
push
cmp
mov
imul
aaa
mov
and
or
dec
xlat
jb
inc
ds
mov
shr
stos
repz
mov
mov
loope
les
(bad)
icebp
mov
push
out
lods
test
ins
sub
div
lods
call
push
ins
lss
adc
mov
imul
mov
jp
push
mov
ffree
mov
sbb
push
jmp
js
jge
je
aad
call
fwait
jmp
sbb
sub
repz
jg
pusha
pop
jns
mov
ret
mov
ins
jp
pop
cwde
fwait
leave
lea
xor
(bad)
test
retf
dec
push
add
or
sbb
cwde
and
mov
cmps
mov
lahf
dec
add
push
repnz
pop
mov
je
sbb
rsqrtps
inc
push
add
adc
call
loop
inc
xor
leave
inc
adc
xor
je
jge
jmp
and
lds
mov
dec
out
mov
inc
mov
cmp
lock
je
aad
(bad)
push
mov
enter
jmp
dec
mov
push
dec
or
(bad)
inc
and
dec
xor
or
sub
pop
ret
cmp
push
and
mov
and
ja
or
lahf
jl
fidivr
xchg
xor
out
cmp
dec
mov
push
sub
(bad)
out
pop
stos
mov
cmp
sub
and
fmulp
add
add
mov
lahf
test
aam
out
xor
and
les
add
dec
xchg
mov
mov
jg
xchg
call
dec
push
fsubp
retf
mov
push
push
es
je
sbb
jmp
jae
stc
xchg
loope
stc
mov
inc
imul
mov
mov
mov
bound
xor
push
in
ins
mov
fs
push
cmp
xlat
sub
in
das
xchg
out
jge
mov
into
push
sbb
pop
add
fld
aas
jno
gs
nop
add
jg
jmp
dec
stos
xor
xor
dec
test
push
lahf
sub
(bad)
(bad)
pushf
dec
pop
sbb
fnsave
pop
cmp
clc
enter
sti
imul
ret
jmp
xor
sub
dec
ret
pop
mov
mov
aaa
push
jp
outs
xor
test
fidivr
into
sbb
adc
fs
xor
(bad)
fimul
dec
loop
ret
fwait
or
aaa
or
aam
jb
icebp
jl
call
fwait
call
mov
sub
jle
jo
fnstcw
push
stos
sbb
popa
scas
dec
jl
ret
jbe
aaa
mov
adc
es
pop
ret
jbe
inc
xchg
stc
inc
mov
dec
cwde
mov
mov
xchg
sbb
movs
jmp
aam
mov
cmp
in
sub
ins
dec
adc
call
pop
pop
xchg
sub
jge
jmp
fidivr
rol
sti
cdq
test
shl
xchg
cli
dec
repnz
retf
pop
out
inc
outs
hlt
or
rcr
push
jmp
stc
sub
jno
xor
mov
jg
cmp
jle
mov
cmps
jae
pop
hlt
out
jbe
cmc
hlt
push
ins
ss
mov
xor
ret
cdq
ins
shr
sub
push
sub
in
adc
stos
and
movs
loope
movs
jge
rcr
ja
data16
mov
das
sub
or
(bad)
gs
stos
sub
lods
and
inc
jge
mov
shl
mov
in
retf
call
out
mov
jecxz
imul
aaa
or
ror
xor
jno
mov
mov
pop
bound
aas
mov
mov
stos
or
psrld
pop
push
in
das
push
movs
xchg
adc
mov
jmp
mov
ja
out
dec
rcl
loopne
das
mov
and
es
xchg
add
lock
lahf
push
inc
mov
test
pop
sub
lds
test
lods
add
imul
enter
push
mov
cmp
js
sub
and
into
cmc
mov
jae
fsubr
jge
mov
pop
movs
push
sub
jbe
movs
bound
mov
lods
inc
xchg
std
jmp
fdiv
cmp
and
popa
mov
dec
or
js
jle
(bad)
es
and
dec
sub
test
fbld
xor
jmp
andps
movs
sahf
pop
sar
das
adc
xchg
jae
adc
leave
ja
xlat
or
rol
push
pop
jl
inc
sbb
fld
ret
jne
inc
inc
push
ds
mov
and
pop
outs
mov
(bad)
cmp
aad
arpl
or
or
cmps
out
std
cmp
and
add
mov
test
dec
sbb
xor
lock
xchg
push
stos
mov
fcmovnu
clc
(bad)
xlat
push
loope
test
int3
push
out
push
inc
popa
sbb
(bad)
gs
pusha
sub
inc
cmp
jl
test
retf
xor
rcr
out
retf
xchg
(bad)
mov
and
mov
out
pop
xchg
iret
test
mov
lods
imul
inc
ror
mov
lahf
mul
ins
add
mov
dec
iret
pop
cmp
dec
(bad)
xor
aas
and
scas
xchg
inc
bound
cmp
cwde
dec
xor
mov
test
xor
clc
push
dec
pop
mov
jo
sar
pop
push
and
jo
and
jmp
pop
pop
outs
das
push
xchg
mov
out
add
mov
retf
popa
inc
out
loop
imul
pop
icebp
mov
mov
out
imul
(bad)
mov
(bad)
ret
adc
repz
inc
aaa
adc
add
aam
mov
in
sbb
push
adc
pop
mov
or
sbb
add
xor
das
jbe
lds
lahf
sbb
mov
mov
jae
mov
or
mov
xchg
mov
push
push
adc
pop
stos
call
cmp
je
push
jne
adc
jns
leave
xchg
std
add
push
cs
xchg
inc
and
jl
jmp
inc
lahf
into
or
add
fdivr
scas
cmps
jge
imul
mov
xlat
jno
ins
or
aam
(bad)
xchg
hlt
ins
xchg
in
push
call
sub
push
cmc
mov
push
fisttp
xchg
mov
(bad)
fs
cmp
shr
clc
sti
call
inc
retf
imul
jp
add
nop
outs
or
jle
lods
cmc
add
jmp
sub
pushf
pop
sbb
rol
or
mov
sahf
add
in
ret
stos
dec
inc
and
xor
mov
sti
stc
int3
pop
cmp
pushf
daa
aad
or
jo
dec
jnp
push
mov
xchg
jmp
js
jns
enter
leave
mov
jae
ret
xchg
inc
test
mov
push
loope
mov
lahf
fiadd
int3
daa
pop
outs
mov
or
mov
mov
hlt
push
clc
pop
lahf
int3
adc
dec
adc
(bad)
push
jle
dec
jns
sub
pop
aas
inc
lods
pop
movs
sahf
lods
and
push
into
cmps
bound
mov
popf
or
outs
push
adc
dec
lods
inc
add
sub
pop
ror
in
add
pop
lock
add
pusha
jg
int3
dec
push
xchg
daa
mov
mov
mov
pop
adc
mov
fs
xchg
sbb
test
and
and
push
outs
fnstenv
pop
adc
jae
ja
das
mov
stos
sti
push
les
hlt
aad
inc
adc
popf
inc
jbe
ja
mov
push
les
dec
movs
jne
xchg
sub
loop
dec
js
nop
inc
push
mov
int
loop
test
jge
out
cld
clc
jl
xlat
(bad)
iret
data16
mov
ja
in
push
iret
call
iret
test
xchg
add
dec
mov
test
lea
mov
push
inc
(bad)
cld
jne
pushf
(bad)
ins
test
retf
iret
push
jg
xchg
xchg
push
add
cmp
xor
lods
fs
pop
loop
inc
push
dec
mov
sbb
shl
jnp
adc
and
bnd
jmp
stc
addr16
or
retf
inc
inc
mov
addr16
test
mov
(bad)
test
int3
add
cmps
es
cmp
fmul
jo
rol
pop
push
iret
shr
add
jb
(bad)
retf
pop
or
adc
adc
shl
and
mov
push
stos
pop
shr
or
xor
mov
sbb
adc
lods
push
addr16
lods
ja
or
or
adc
shl
cld
push
cmp
sti
mov
cmp
fsubr
jo
pop
and
mov
repnz
rcl
xchg
cli
cmp
mov
mov
dec
xchg
imul
xchg
sbb
inc
xchg
out
or
xchg
dec
sahf
es
test
call
stos
aaa
xchg
cmps
out
mov
push
inc
(bad)
mov
pushw
push
cmps
jbe
scas
lds
(bad)
mov
out
and
sub
mov
cmp
ror
popf
outs
jo
and
lock
push
add
inc
fmul
test
sbb
mov
or
loopne
std
imul
push
sbb
das
(bad)
(bad)
pop
or
data16
jb
sbb
cmp
jge
pusha
jmp
or
jge
jns
and
jmp
daa
add
imul
jo
adc
add
and
shl
stos
cdq
adc
out
repz
lods
or
add
adc
push
gs
jp
and
and
div
cmps
test
call
int3
pop
mov
adc
out
inc
mov
ret
and
add
pop
mov
fnstsw
cld
jb
in
jle
sbb
nop
test
jae
mov
xchg
repnz
sbb
scas
pop
jle
lods
dec
jnp
cmc
adc
aam
fwait
adc
cdq
dec
mov
mov
push
bound
xchg
call
(bad)
mov
cmps
sub
addr16
repz
sbb
push
dec
jo
xor
mov
ins
loopne
iret
sub
jno
xchg
cmps
pushf
rcl
int3
fnstcw
xchg
xchg
es
push
xor
inc
out
mov
dec
dec
imul
pop
jb
jne
sbb
cmps
add
push
cmp
loop
mov
jle
mov
sub
fidiv
test
fisub
mov
bound
and
fcmovb
stc
cmp
mov
inc
push
cmp
xor
jmp
stc
test
push
mov
jg
pop
mov
sbb
mov
pop
cmp
shl
movs
cmp
repz
sub
test
dec
cmp
imul
and
shr
add
add
jbe
sahf
aad
jbe
mov
jns
mov
aaa
rcr
(bad)
fcmovu
adc
pop
es
(bad)
aas
cld
sahf
xor
or
(bad)
jp
mov
jg
xor
addr16
push
rcl
loope
mov
leave
mov
leave
xchg
adc
shr
pop
jl
adc
iret
push
push
lahf
popa
iret
movs
stc
cmp
out
nop
(bad)
fisubr
push
dec
fsin
into
sar
stos
or
pop
pop
fadd
or
clc
inc
stos
xchg
jle
mov
inc
push
add
stos
ds
mov
adc
dec
mov
lds
dec
or
ret
cdq
(bad)
add
or
xchg
inc
inc
aas
and
or
cwde
scas
or
loopne
xchg
daa
push
xor
clc
stc
es
xor
mov
rol
loop
sbb
in
(bad)
inc
test
xchg
and
shl
retf
out
ret
mov
movs
push
outs
ret
in
jnp
cmps
or
push
repnz
out
scas
ins
in
stos
sbb
ins
and
loope
xchg
mov
sub
add
mov
xor
push
adc
dec
loopne
test
sti
xchg
inc
rol
sbb
popa
xchg
xchg
pop
retf
idiv
mov
call
add
xchg
pop
sub
in
(bad)
push
lea
fnstsw
int3
ffree
mov
inc
test
pushf
mov
jmp
aad
setle
ins
aas
dec
out
mov
pop
sbb
jp
pop
push
sub
add
inc
pop
inc
and
enter
aad
out
cdq
cwde
pop
mov
dec
dec
mov
movs
aaa
jg
pop
pop
sbb
data16
and
fsubr
xor
xchg
mov
mov
adc
test
fwait
loop
cwde
aaa
clc
add
into
shr
lods
loopne
fsub
loope
aad
cli
xchg
sbb
enter
inc
jecxz
test
cmc
call
int
mov
cmp
jbe
hlt
adc
hlt
pop
jmp
out
xchg
outs
out
push
inc
data16
push
out
push
mov
jl
adc
neg
pop
rol
repnz
dec
fstp
xor
(bad)
pop
je
mov
jbe
dec
mov
jo
std
call
cmps
mov
jnp
or
and
sub
pop
pop
jb
xchg
add
mov
call
scas
inc
out
int3
mov
hlt
enter
aaa
sar
xlat
popf
mov
aad
cmp
pushf
loopne
fist
cmp
mov
or
sub
jno
jecxz
push
sub
push
int
mov
mov
dec
imul
mov
enter
and
sbb
test
xchg
inc
pop
mov
sub
pop
mov
sahf
pop
fstp
hlt
mov
xchg
inc
sti
pop
jmp
and
loop
jmp
fwait
mov
int3
mov
inc
fwait
xchg
push
push
adc
(bad)
mov
push
add
jns
jmp
mov
pop
sbb
mov
rcr
adc
hlt
pop
xor
pop
add
xchg
xchg
cmps
or
push
jmp
loope
xor
mov
xor
mov
jmp
loope
(bad)
push
(bad)
mov
imul
fs
fidivr
push
adc
ss
mov
fldcw
imul
mov
stos
dec
mov
inc
pop
or
ja
sub
fistp
fwait
xchg
push
adc
lahf
xchg
cld
push
add
xor
jns
xchg
cmc
arpl
pop
jmp
mov
sub
lds
ds
xchg
or
add
out
cs
cmp
adc
push
stos
adc
xchg
mov
pop
sub
mov
aas
idiv
(bad)
jmp
add
sub
lahf
and
stos
dec
mov
jle
in
in
ja
imul
cs
mov
push
cmp
lahf
adc
xchg
ja
inc
out
repnz
push
sub
sar
aam
enter
arpl
push
out
sub
or
ds
or
jl
sbb
leave
mov
sbb
dec
add
in
leave
and
(bad)
fucomp
mov
sti
adc
sbb
mov
jge
sub
cli
jns
dec
and
in
xor
addr16
sbb
mov
dec
mov
xchg
sbb
jmp
xchg
sub
in
bound
cmp
mov
rol
popf
push
int3
pusha
mov
jmp
std
xor
stos
inc
mov
inc
mov
enter
lock
or
faddp
nop
out
sar
mov
and
adc
and
jo
popf
stos
movs
inc
mov
(bad)
pop
dec
mov
call
(bad)
imul
mov
dec
gs
in
sbb
mov
aam
mov
test
mov
push
sbb
push
adc
mov
retf
sbb
lods
fadd
mov
idiv
sbb
or
retf
jg
add
jecxz
adc
mov
(bad)
in
cmc
inc
pushf
or
mov
pop
xor
ins
mov
push
bswap
int3
jecxz
dec
mov
cmps
lds
push
sar
mov
and
add
jge
(bad)
jo
add
arpl
xor
cli
test
pusha
push
push
xor
pop
dec
and
es
shr
mov
jne
jmp
mov
imul
push
outs
(bad)
iret
mov
pop
inc
retf
add
pop
loope
int3
push
or
mov
fld
addr16
fwait
or
jmp
add
jge
popf
push
aaa
sbb
aam
adc
jno
ins
adc
sbb
imul
not
adc
arpl
adc
ja
test
jl
adc
adc
pushf
cmp
push
mov
add
in
inc
jne
dec
pusha
arpl
xchg
retf
pop
jo
push
arpl
adc
les
icebp
xor
dec
sub
sub
test
xchg
add
xchg
sub
out
in
dec
aam
mov
dec
outs
push
stos
push
add
push
jmp
mov
pop
dec
inc
aad
pop
xor
sub
mov
inc
pop
je
(bad)
arpl
aas
jle
and
mov
ds
pushf
call
inc
xor
cmp
cmp
cmp
imul
inc
push
cmp
lods
aam
into
dec
mov
sbb
cs
lods
fild
dec
adc
adc
and
or
adc
push
jnp
mov
pop
call
dec
bound
xor
mov
sub
ds
cmp
leave
repnz
je
sbb
jae
aam
inc
out
popa
mov
sbb
std
cmp
pop
fcomp
(bad)
xor
xchg
push
add
es
mov
mov
dec
push
mov
ins
xor
je
mov
retf
xor
es
xor
imul
ins
clc
push
bswap
mov
es
push
dec
jbe
add
xchg
or
scas
jne
dec
or
push
push
in
int3
shl
lea
(bad)
mov
outs
jp
cs
aam
ins
xor
pop
dec
push
shl
addr16
adc
or
push
push
jno
jl
fucomip
jp
sbb
push
aam
aad
out
scas
fstp
rcl
sub
jnp
lock
add
js
mov
call
sub
mov
push
xchg
mov
mov
hlt
push
jae
push
jne
mov
arpl
fistp
aam
pop
sub
inc
cld
pop
psraw
imul
xchg
xor
lods
sbb
fisubr
jmp
aaa
in
sahf
pop
outs
imul
push
mov
cs
stos
sar
xor
jb
sub
mov
cwde
mov
sbb
push
xchg
les
mov
shl
or
adc
pop
xchg
(bad)
test
cs
inc
push
lods
test
jbe
paddb
xchg
es
pop
dec
inc
in
jecxz
sub
(bad)
or
mov
xchg
gs
xchg
mov
jmp
or
inc
les
clc
scas
dec
lods
jne
leave
imul
cli
repz
jecxz
mov
push
sbb
jmp
std
pop
mov
icebp
add
pop
arpl
sub
ficomp
ffree
mov
addr16
outs
out
retf
movs
es
xor
or
fnstcw
ins
in
cs
mov
jmp
xor
addr16
dec
and
mov
cmp
test
jmp
cwde
jecxz
shl
(bad)
or
sub
lahf
js
fwait
add
aam
stc
jmp
sbb
data16
(bad)
addr16
cld
pop
data16
addr16
fdiv
or
cmc
push
sbb
not
mov
mov
inc
ficomp
pop
stos
cmp
and
or
mov
(bad)
bound
inc
add
mov
inc
rcl
in
std
call
push
add
lock
inc
mov
mov
in
and
out
add
jge
cmp
std
and
pop
dec
add
inc
push
(bad)
mov
push
jns
out
sbb
inc
scas
fistp
dec
cmp
cmp
adc
test
push
add
ret
or
mov
cwde
add
das
int3
sahf
or
inc
xchg
jg
push
adc
sub
cmp
fwait
or
lds
push
and
cmp
mov
sbb
div
mov
retf
xchg
mov
outs
fidivr
and
push
xchg
hlt
dec
or
xor
aas
or
loop
dec
inc
int
pop
cmp
fsubrp
add
das
test
or
adc
mov
or
mov
out
xchg
ret
cli
je
retf
pop
dec
mov
jbe
lds
cli
shr
aam
jne
imul
repnz
loope
out
or
mov
bound
mov
shl
int3
fstp
cs
imul
dec
mov
aas
out
push
int
dec
pop
dec
pop
call
call
jecxz
pop
test
std
add
sbb
mov
das
aaa
xlat
fiadd
les
and
and
mov
retf
sub
add
mov
in
push
jp
fdivr
(bad)
jnp
or
nop
adc
cmp
mov
and
(bad)
dec
(bad)
(bad)
sahf
out
mov
xchg
fsub
(bad)
dec
lock
cs
(bad)
fcom
fdivr
sahf
jmp
movs
stc
push
nop
popa
sub
mov
int3
ja
fwait
(bad)
push
adc
and
mov
inc
retf
jp
icebp
in
mov
pop
imul
stc
(bad)
shr
shl
jge
xchg
in
fcom
mov
jge
cmp
in
mov
jp
push
adc
mov
fs
std
push
iret
mov
dec
push
mov
stos
push
push
ins
jp
aaa
lds
jnp
jmp
mov
jecxz
mov
or
rcl
test
and
jecxz
(bad)
call
xlat
add
cmc
popa
mov
dec
outs
mov
sub
xor
enter
jno
cmp
adc
popa
xchg
rcr
data16
out
cmp
mov
xchg
dec
cmps
loope
and
add
in
int
daa
mov
jecxz
pop
lods
fild
xchg
repz
mov
adc
stos
lahf
imul
mov
ds
(bad)
jg
mov
adc
xor
push
xchg
dec
sbb
push
pop
hlt
sbb
call
or
mov
mov
lock
cmp
mov
lods
fisttp
xchg
scas
nop
test
cmp
(bad)
mov
xchg
sbb
pop
mov
mov
(bad)
outs
mov
out
add
shl
mov
jp
fisttp
dec
mul
bound
xor
pcmpgtd
jo
and
(bad)
ja
jmp
jp
mov
push
cmps
(bad)
retf
sbb
add
inc
(bad)
(bad)
std
pop
or
dec
xchg
mov
(bad)
ret
and
mov
fnsave
adc
rcr
add
hlt
jae
sbb
lds
inc
cmp
pusha
pusha
mov
jecxz
sub
sub
xor
mov
dec
ins
jb
xor
cmp
inc
cmp
jmp
sahf
cli
fcomi
xchg
test
xor
ret
inc
jbe
fisttp
cmp
test
inc
in
adc
jnp
jbe
mov
sub
out
adc
bound
iret
cld
push
mov
lock
imul
ficom
pop
stc
push
stos
cdq
repnz
inc
ror
(bad)
aaa
cmps
leave
pop
add
mov
mov
(bad)
mov
xlat
mov
int3
dec
fbld
mov
and
in
out
jns
push
or
icebp
pop
(bad)
jns
loopne
pop
aaa
jbe
test
dec
push
fiadd
(bad)
std
nop
pop
imul
js
repz
cmps
ret
sub
jbe
into
jb
lods
push
jbe
and
dec
nop
mov
cmp
mov
xchg
push
loop
push
and
push
jp
ss
scas
in
cs
cmps
not
mov
adc
in
test
mov
les
jb
out
xchg
adc
pop
inc
aam
inc
leave
and
cmps
in
and
je
jno
aaa
rol
jae
xchg
in
jns
pop
mov
sahf
mov
mov
or
aad
or
push
xor
adc
stc
inc
xor
inc
lock
lock
(bad)
popa
mov
or
pop
(bad)
xchg
inc
ja
mov
add
mov
mov
cmps
in
les
inc
push
or
or
iret
fdivr
or
dec
xor
push
(bad)
fiadd
jo
int3
or
sub
ret
dec
in
mov
mov
xor
repnz
cmps
jno
stos
hlt
cld
sub
out
jp
loopne
inc
inc
xor
and
lock
mov
xor
out
sub
pop
xor
ins
xchg
lahf
jne
adc
pop
out
lods
retf
push
sti
in
in
ins
jmp
mov
(bad)
jg
daa
aam
nop
sub
sub
loope
ret
sahf
lds
ror
xlat
sub
jl
cmp
fdecstp
mov
movs
js
out
mov
stos
ror
or
fld
pop
inc
jmp
mov
ss
pop
ss
push
(bad)
dec
cwde
scas
and
sbb
js
sub
inc
add
cli
fwait
cli
scas
(bad)
sub
(bad)
cs
ret
mov
push
cmps
sub
aas
push
sub
test
mov
adc
or
ror
(bad)
scas
adc
dec
in
adc
sbb
and
cmps
push
cs
std
retf
fisttp
sbb
dec
cmp
sub
popa
xchg
bnd
adc
jo
dec
xor
jle
xchg
popa
in
mov
mov
in
dec
arpl
imul
adc
sbb
add
push
mov
xor
inc
pop
jbe
or
and
cli
add
iret
xchg
lahf
inc
cwde
loop
aad
movs
add
hlt
mov
jb
(bad)
adc
test
pop
es
add
das
pop
je
add
lea
add
cld
fmulp
xlat
push
stos
inc
add
ins
xor
push
mov
leave
mov
mov
ds
(bad)
push
mov
popf
sbb
pop
pop
shl
pop
in
cmp
add
xor
sahf
sub
(bad)
sbb
aam
(bad)
cli
push
test
lds
shl
push
sbb
jbe
out
dec
jnp
push
aaa
js
jae
cmp
daa
pop
inc
pop
int3
jg
sbb
and
les
bound
retf
in
aas
mov
fiadd
push
cmp
repnz
mov
out
lods
fiadd
jnp
scas
adc
pop
(bad)
sub
or
retf
mov
fwait
mov
popf
popf
retf
push
ins
add
sti
mov
adc
ret
add
or
(bad)
ret
shl
je
mov
fdiv
idiv
push
call
or
xchg
sti
ja
push
adc
dec
sti
in
inc
dec
xor
mov
and
int
fwait
js
cli
int
pop
cld
pop
push
mov
shl
pop
sti
pop
lahf
in
jg
repz
mov
pop
dec
sti
push
enter
and
stc
fmul
mov
push
cwde
adc
cmp
addr16
(bad)
addr16
arpl
push
mov
xchg
xlat
mov
(bad)
cs
pop
out
out
test
call
cli
addr16
stos
pop
mov
jne
out
in
inc
imul
sub
adc
mov
je
jp
imul
cmp
pop
pop
call
pop
sbb
aam
pop
mov
pop
daa
das
icebp
leave
inc
mov
inc
loopne
shl
out
mov
mov
aaa
inc
jmp
mov
bound
pop
movs
add
jmp
ins
in
push
jno
lds
sub
pop
inc
jmp
xchg
jecxz
sub
arpl
push
push
int3
push
fs
jno
mov
adc
mov
xor
cli
jbe
and
rcr
xor
jg
fist
push
xchg
mov
xchg
xor
pushf
jns
test
xor
fistp
push
pop
jmp
push
cmps
and
mov
in
aam
scas
test
sub
inc
fisubr
jae
and
dec
pop
cdq
mov
cmp
push
mov
add
push
mov
leave
neg
fadd
(bad)
sub
fist
mov
dec
gs
push
adc
cmps
pop
jp
add
jmp
ds
lods
cdq
imul
add
sbb
or
stos
jg
ret
dec
push
mov
in
push
enter
xor
sbb
lea
ret
js
in
jmp
or
lods
cmp
sti
or
xor
inc
inc
mov
(bad)
mov
stos
xchg
js
inc
loopne
dec
loopne
aaa
and
mov
sar
ins
jns
inc
je
aad
push
lahf
mov
pop
pop
(bad)
in
imul
aad
(bad)
popf
fiadd
sbb
cmps
pop
inc
iret
mov
out
push
or
out
test
inc
les
dec
mov
mov
jl
aaa
leave
into
(bad)
mov
ror
jb
neg
(bad)
pop
and
jmp
fldenv
mov
jl
pop
and
ds
adc
int
scas
jp
pop
mov
daa
adc
aaa
int3
xchg
into
in
cli
loope
mov
out
addr16
shl
jno
test
and
or
imul
cmps
std
and
popf
in
fstp
lods
inc
jmp
std
mov
fadd
mov
or
pop
inc
mov
icebp
lods
mov
not
cmp
sbb
into
adc
(bad)
and
cwde
pop
imul
mov
sbb
mov
pop
daa
mov
sub
push
movs
sbb
aaa
pcmpeqw
push
sub
call
adc
fldenv
mov
mov
popf
out
inc
jno
mov
add
push
or
or
scas
xchg
in
inc
rcl
jmp
rcl
add
push
imul
jbe
int
sub
pop
inc
sar
add
mov
push
jmp
les
outs
nop
movs
pop
sub
xor
mov
dec
inc
dec
dec
dec
push
jge
or
sbb
mov
cmp
stos
lods
cmps
cmps
add
xchg
push
ins
outs
jnp
test
xor
cdq
dec
add
adc
cmp
jne
add
inc
sbb
lods
xchg
add
lea
mov
adc
inc
jno
add
jnp
outs
or
sbb
retf
cld
jle
icebp
outs
test
mov
aas
leave
mov
test
sub
push
jg
jmp
clc
(bad)
mov
aam
sahf
das
mov
sub
inc
mov
inc
es
mov
adc
(bad)
cmp
das
iret
xor
sbb
xor
out
sub
mov
xchg
dec
dec
cmc
out
addr16
mov
sub
adc
jmp
cmps
dec
jmp
in
push
cmc
jmp
jmp
and
inc
xlat
jecxz
pop
xor
addr16
out
nop
jecxz
mov
std
or
jmp
fwait
jb
aam
aad
(bad)
xchg
mov
push
(bad)
mov
cmp
gs
pushf
jp
mov
pop
rep
dec
aam
dec
call
fild
push
pop
jecxz
stos
es
mov
mov
movs
scas
fldenv
cmp
adc
or
or
xchg
lods
imul
push
test
mov
aad
js
scas
es
lea
ror
xchg
mov
sub
retf
arpl
mov
pop
shl
push
cmc
jae
adc
nop
sub
sbb
inc
mov
pop
out
loope
loopne
sbb
inc
cmp
cmp
or
and
or
or
push
inc
imul
je
shr
pushf
mov
shl
pop
jbe
mov
sub
add
scas
dec
adc
push
cld
push
(bad)
mov
cmp
and
mov
mov
(bad)
jne
mov
cmp
xchg
leave
mov
add
xor
in
adc
shr
movs
and
push
push
(bad)
and
or
aam
mov
push
jg
stos
(bad)
sbb
mov
lahf
out
jle
pop
data16
jle
popf
sbb
mov
dec
outs
gs
js
lahf
shl
adc
fucomip
retf
add
mov
mov
ret
jns
jbe
push
das
or
mov
dec
dec
jno
inc
ds
arpl
dec
mov
call
into
mov
or
mov
ins
push
imul
add
xchg
movs
mov
pusha
cwde
icebp
rcr
inc
add
test
cmp
frstor
test
mov
dec
and
cmc
add
or
mov
jge
(bad)
jge
jecxz
mov
lds
ret
xchg
retf
pop
test
fxch
loopne
inc
mov
fist
xchg
call
inc
xor
jns
add
ret
cli
lock
xor
outs
cdq
cmp
ins
test
fstp
or
test
imul
enter
or
neg
xchg
div
pushf
jge
xchg
je
add
cmc
pop
out
(bad)
rcr
xor
out
xor
(bad)
cmp
stos
mov
mov
jle
scas
call
stc
movs
bound
outs
sbb
fistp
dec
mov
movs
and
neg
pusha
add
adc
push
pop
pop
mov
xchg
lahf
xor
aas
mov
mov
xor
or
retf
out
sbb
(bad)
xor
sar
pop
das
ret
rcr
lods
mov
shr
rcl
call
mov
dec
fsubr
test
sahf
cmp
lods
fmul
xor
and
imul
jecxz
call
dec
sub
mov
mov
scas
xor
adc
inc
push
int3
imul
jno
xchg
in
idiv
add
stc
call
mov
jl
push
lea
pop
sbb
xchg
ret
inc
inc
cmp
xchg
dec
fisub
dec
retf
nop
addr16
ds
jae
stos
xor
shl
mov
loop
mov
sbb
xor
(bad)
add
pop
gs
shl
icebp
sbb
cld
add
inc
je
and
stc
stos
or
mov
mov
movs
xlat
add
jnp
pop
rcr
bnd
cdq
inc
fdiv
push
fstp
mov
lods
fcmovnb
and
rol
nop
lods
sub
fucomp
mov
clc
iret
fisttp
and
mov
leave
(bad)
addr16
dec
call
int
cmp
sbb
push
out
stc
not
xor
jp
mov
mov
sbb
or
push
fisub
xchg
ret
push
ret
out
in
and
push
dec
(bad)
jmp
(bad)
jmp
fwait
sub
loope
ins
xchg
pop
jle
jmp
or
dec
rcr
retf
(bad)
jmp
inc
mov
mov
int3
sub
push
fistp
cdq
xchg
jb
and
dec
dec
mov
scas
or
push
dec
jne
mov
dec
retf
adc
mov
cmp
int
mov
xor
ss
icebp
loop
mov
mov
xor
mov
pop
das
inc
ret
retf
jg
xchg
pushf
sub
sbb
outs
xor
cs
jmp
xor
sahf
(bad)
adc
test
movs
fadd
mov
arpl
movs
adc
in
aam
and
adc
ss
push
push
xor
int
inc
dec
mov
in
jae
clc
cmps
js
and
ins
mov
dec
jp
or
sbb
and
dec
test
xchg
cmp
sar
xchg
(bad)
int3
test
int
out
or
fbld
cdq
xchg
pop
pop
(bad)
sub
push
dec
rcl
sbb
mov
out
inc
xor
out
out
cmp
xor
adc
mov
repz
punpckhdq
and
mov
jge
push
cmp
adc
mov
icebp
mov
or
sub
push
loopne
retf
or
into
rol
fstp
xchg
and
push
sub
push
aad
gs
push
loop
les
in
and
ins
mov
ins
out
mov
mov
xor
and
sbb
push
dec
or
sbb
and
pop
jnp
xlat
dec
or
xchg
mov
mov
cmp
in
adc
mov
and
pop
cmp
push
(bad)
fstp
daa
cmp
sbb
fild
and
jle
add
ret
push
pop
pusha
and
jp
pop
movs
das
or
dec
cli
pop
pop
fadd
fs
jno
push
pop
and
fmul
mov
out
and
imul
ret
(bad)
mov
mov
mov
aas
ins
test
mov
int3
retf
leave
out
cmps
cdq
xchg
(bad)
(bad)
gs
mov
ss
xor
faddp
daa
add
int
mov
pop
movs
mov
pop
lea
jg
sti
(bad)
xor
cmp
js
arpl
inc
add
pop
and
bound
inc
ds
popf
and
jle
ins
sahf
nop
and
mov
daa
push
mov
ror
jno
xchg
jmp
stc
scas
sbb
(bad)
outs
ds
retf
mov
fidiv
pop
sar
inc
(bad)
or
inc
sub
nop
vpaddb
aam
int3
popa
int3
dec
mov
loop
ins
outs
jmp
iret
call
adc
xor
cwde
iret
scas
and
ficomp
iret
movs
mov
add
or
pop
iret
out
clc
inc
xor
clc
ja
lock
cdq
hlt
mov
or
inc
sub
add
sbb
mov
(bad)
out
pop
jp
jbe
adc
dec
mov
dec
mov
inc
add
neg
lahf
xchg
push
adc
out
xchg
sbb
and
add
sub
cmp
out
inc
and
cwde
inc
mov
popa
jbe
test
sub
fs
inc
and
pop
in
jmp
fbstp
mov
clc
ja
inc
push
inc
push
loopne
pop
loope
div
xor
test
repz
fmulp
mov
popf
or
mov
jle
sar
lods
xorps
jmp
mov
jbe
sbb
mov
imul
push
push
cmp
sub
int
arpl
and
cmp
iret
cmp
ds
push
sbb
(bad)
pop
adc
cmp
(bad)
mov
jne
cmps
(bad)
pop
push
cmovbe
mov
inc
dec
add
fisttp
rcr
es
mov
clc
sti
sahf
lds
mov
mov
sub
push
cld
jmp
fcmovne
xchg
and
(bad)
lods
mov
jne
xlat
call
nop
add
call
pop
jbe
stc
popf
rcr
dec
bound
or
cmp
adc
pop
(bad)
fcomi
cdq
adc
mov
(bad)
cmp
jecxz
pop
outs
lods
test
and
sbb
mov
out
pop
jle
imul
jns
js
(bad)
js
lods
sub
adc
icebp
or
gs
ss
xor
outs
add
fcos
fild
cmp
add
aaa
call
or
iret
inc
or
call
std
pop
xor
in
and
adc
cmp
pusha
jne
das
lds
xchg
js
(bad)
(bad)
jmp
xchg
test
jnp
test
lods
mov
dec
xor
push
test
dec
adc
cli
mov
or
jbe
or
jnp
repz
(bad)
and
retf
js
cdq
inc
mov
popa
aas
inc
mov
xor
or
dec
cmc
mov
sub
aad
and
fwait
jge
shr
imul
push
fisubr
push
(bad)
stc
inc
cmp
cmp
test
adc
dec
out
dec
stos
sbb
rcl
xchg
fsubr
adc
(bad)
ss
shr
in
push
fisubr
pop
inc
adc
push
out
add
mov
push
mov
jmp
pop
jmp
leave
repz
mov
inc
movs
repnz
mov
mov
or
dec
lock
data16
mov
leave
leave
push
mov
mul
mov
mov
dec
sbb
pop
xor
stos
jb
xchg
out
cld
mov
les
and
xchg
jmp
push
adc
cmps
fisttp
add
inc
adc
jmp
dec
mov
in
pop
fdivr
add
loop
ins
hlt
xor
sub
mov
push
cdq
fucomp
adc
or
sar
mov
push
push
push
aas
sbb
mov
fmul
mov
rol
push
data16
xchg
into
lds
xchg
jo
mov
fwait
lock
jo
mov
push
iret
jge
fmul
fwait
shl
repnz
out
mov
imul
mov
mov
adc
nop
int3
adc
mov
fwait
add
lods
loope
adc
stos
div
jl
push
mov
pop
imul
and
cld
hlt
idiv
bound
pop
mov
out
mov
dec
sub
mov
sbb
adc
out
out
cmp
or
fiadd
mov
pushw
mov
mov
push
sar
int3
jne
push
sub
xor
bt
scas
pushf
aas
xchg
pop
leave
pop
ror
xchg
mov
out
lods
push
pop
cmps
inc
adc
test
pop
or
es
int3
imul
stos
jmp
daa
(bad)
shr
out
js
in
sbb
inc
icebp
adc
mov
mov
retf
jne
dec
dec
jno
or
or
xor
test
xor
scas
cmp
lock
fdivr
pop
push
stc
sub
adc
push
div
stos
jmp
pop
ret
dec
jne
mov
adc
imul
lahf
pushf
add
inc
test
pop
es
push
fild
aad
pop
jno
push
dec
push
sbb
call
xor
or
daa
jg
dec
lock
jno
aas
mov
xchg
or
in
sti
sti
test
in
outs
inc
ficom
add
mov
mov
mov
pop
jmp
mov
xchg
scas
hlt
outs
hlt
add
mov
(bad)
add
mov
stc
mov
adc
dec
push
jmp
or
mov
and
or
enter
dec
icebp
iret
sub
adc
push
jge
lock
out
jo
xor
mov
jnp
xchg
add
test
call
or
into
pop
inc
je
sub
mov
popf
rol
lods
mov
outs
fwait
outs
push
fimul
call
lahf
sar
sub
fst
sub
push
rol
push
dec
sbb
ret
sbb
repnz
sahf
push
pop
out
aad
cmp
pop
loope
arpl
retf
das
out
pop
popf
xchg
rcr
dec
pop
cwde
cdq
jne
xchg
mov
in
data16
mov
sub
mov
ffree
pop
xchg
mov
push
neg
mov
jnp
inc
add
inc
cmp
sub
inc
in
xor
out
mov
out
nop
xor
dec
sub
push
ins
hlt
jbe
cmp
adc
mov
xor
jl
scas
add
ds
jae
and
jp
mov
mov
sub
cld
in
arpl
pop
pushf
das
es
dec
call
(bad)
rol
(bad)
fwait
mov
mov
shl
jnp
xor
cmc
(bad)
iret
ja
inc
lds
mov
(bad)
mov
jmp
cwde
cmp
push
jnp
mov
push
call
push
jle
jg
sub
aam
mov
or
xor
ins
daa
sti
pop
pushf
inc
adc
adc
fucomp
jg
out
lock
aaa
mov
retf
cli
aam
mov
stc
jno
vpaddq
clc
xor
jb
adc
pop
sbb
or
inc
lock
out
outs
sbb
inc
sub
push
pusha
repz
inc
fdivr
mov
xor
pop
mov
mov
addr16
scas
arpl
jl
sub
scas
mov
xor
and
mov
inc
cmps
dec
inc
xlat
mov
in
inc
loope
mov
jne
dec
gs
add
mov
movs
ins
enter
imul
fcmovbe
stos
rol
add
or
jmp
daa
fidiv
out
dec
adc
adc
jb
lahf
push
data16
sub
add
or
add
mov
scas
out
stc
gs
jns
inc
lods
jmp
fwait
es
hlt
sbb
lods
mov
pop
in
(bad)
retf
aas
iret
jo
mov
cmp
pushw
pusha
lods
cdq
mov
dec
fsub
push
movs
pop
rcl
imul
pop
and
les
pop
pop
(bad)
add
add
neg
mov
ins
and
mov
(bad)
lock
cmc
push
jecxz
sub
and
outs
inc
fnsave
push
jmp
add
jecxz
nop
not
dec
xlat
test
push
(bad)
sbb
jmp
mov
mov
xor
repz
rcl
mov
or
add
pusha
and
ins
cmp
imul
push
push
and
gs
das
std
icebp
imul
into
inc
and
sbb
mov
aam
sar
mov
(bad)
imul
add
or
clc
lock
ror
xor
jmp
pop
rcl
cld
sub
mov
lea
add
nop
je
jnp
dec
sub
xchg
adc
test
out
sahf
fwait
retf
xchg
ja
mov
mov
cmps
dec
push
lock
cs
xchg
sub
cmp
les
mov
pop
cli
std
mov
cwde
out
in
adc
sub
popf
and
or
mov
inc
mov
cmp
cmp
out
mov
mov
out
div
test
sbb
pop
test
jp
int3
pop
dec
mov
lahf
jbe
xor
inc
xlat
daa
pop
add
sbb
add
out
adc
xor
jno
mov
pop
fist
mov
aam
push
inc
pop
lahf
sbb
mov
and
jl
fdiv
adc
add
dec
jae
pop
aaa
fwait
pop
gs
icebp
mov
mov
jne
xor
inc
mov
in
icebp
and
sbb
cdq
inc
mov
mov
adc
jae
(bad)
rol
mov
in
mov
cs
arpl
cld
loop
imul
xchg
or
dec
add
out
cmp
fiadd
mov
in
lock
fiadd
outs
sbb
and
add
iret
fwait
shl
stos
cmp
adc
dec
lahf
cwde
pop
scas
dec
inc
or
pop
cmp
les
and
movs
or
mov
mov
(bad)
xchg
clc
daa
mov
aas
xchg
pop
xor
add
push
jns
test
dec
loop
addr16
test
ror
fsubr
xchg
xor
push
outs
add
mov
and
in
jmp
out
ins
mov
add
xor
outs
mov
shl
add
enter
es
nop
xor
jg
daa
addr16
sahf
xchg
xchg
in
ja
push
retf
enter
lods
retf
sbb
and
mov
cdq
das
dec
ins
jnp
cdq
movs
xchg
(bad)
adc
adc
ins
dec
ret
shr
pop
cmc
mov
repnz
inc
je
out
data16
mov
fdiv
cmp
push
ret
enter
add
xchg
std
gs
jbe
les
test
movs
mov
adc
call
and
les
push
test
push
xor
lds
shl
(bad)
pop
lmsw
test
lahf
cmp
cmc
and
lea
in
nop
in
push
mov
cmp
push
data16
add
(bad)
cmp
xchg
xor
mov
cmp
sub
mov
sbb
mov
int
inc
lea
inc
xchg
les
cmp
int3
or
in
iret
mov
nop
(bad)
call
imul
xchg
jle
mov
mov
sti
push
test
bnd
sub
in
ins
mov
cmp
xor
sbb
cmp
mov
and
retf
sub
call
ins
adc
jg
call
inc
pusha
mov
mov
pop
div
inc
or
mov
dec
test
das
out
fs
shl
xchg
mov
sub
pop
idiv
pop
ret
sbb
das
xor
(bad)
mov
push
in
fdiv
es
push
call
arpl
sub
or
les
push
test
(bad)
scas
dec
icebp
add
retf
xor
gs
adc
scas
add
mov
pop
cmps
mov
dec
jmp
dec
or
cmp
(bad)
and
inc
js
pop
push
jge
sbb
into
ret
xchg
retf
jno
adc
nop
lods
sub
push
loop
test
icebp
pop
jns
mov
xor
mov
adc
cmp
and
xchg
aas
mov
lahf
add
fs
push
xchg
mov
loopne
(bad)
fdiv
lock
clc
jae
pop
fs
enter
dec
mov
mov
push
or
pusha
je
or
hlt
cmps
jp
fist
rcr
clc
movs
sbb
mov
shr
push
xchg
inc
inc
aam
push
xlat
or
or
pop
call
sub
jo
mov
sub
das
add
jl
sub
mov
cmps
push
push
addr16
cmp
lods
pop
int3
in
dec
popa
mov
dec
jp
fcom
jg
mov
sbb
push
pop
jno
fild
xlat
je
sbb
loope
or
(bad)
into
cmp
fisttp
push
jns
dec
cmp
movs
mov
inc
stos
mov
pushf
outs
lahf
push
ds
loop
add
mov
pop
popf
xchg
retf
in
push
shr
jl
jecxz
push
(bad)
push
xchg
fbld
jns
daa
popa
add
movs
xor
jne
xor
lock
mov
push
outs
shr
out
push
sti
mov
jno
sahf
shr
push
aam
in
imul
jge
and
ret
out
dec
jecxz
dec
fdiv
mov
sbb
pop
dec
mov
in
and
cmp
add
stc
repnz
push
sbb
imul
cmps
scas
loope
bound
and
jle
and
test
inc
xor
test
ret
(bad)
out
inc
in
in
ret
adc
pusha
and
jb
enter
inc
aas
neg
add
out
add
cmp
jns
dec
jne
addr16
retf
adc
sahf
adc
mov
xchg
int3
mov
cld
mov
cmp
cmps
pop
aaa
xchg
hlt
xor
cmp
pop
retf
out
cld
adc
mov
outs
cmp
add
sbb
add
popf
jo
not
mov
lahf
div
imul
outs
or
jmp
idiv
scas
cmc
jo
ins
sbb
pusha
loope
mov
(bad)
cli
(bad)
jb
push
fldcw
cmp
scas
adc
mov
jns
icebp
mov
(bad)
mov
sub
adc
and
mov
add
sub
dec
fdivr
cdq
leave
cli
inc
adc
xchg
jmp
ins
xchg
mov
pop
shr
mov
jecxz
inc
inc
mov
rcr
dec
xchg
xchg
(bad)
sub
jg
sub
xchg
cli
adc
add
jp
int3
ins
mov
(bad)
fsub
push
cmp
aad
xchg
dec
arpl
call
pop
addr16
pusha
jbe
call
mov
and
pop
les
sar
and
xchg
stos
cdq
repnz
inc
in
or
shr
daa
das
adc
push
mov
xor
enter
pop
retf
hlt
aaa
test
cwde
in
push
cmp
or
cmps
mov
mov
test
and
cld
mov
mov
and
das
fucom
out
jae
imul
mov
push
sub
mov
scas
retf
aam
cwde
mov
jns
mov
repz
data16
add
jp
xchg
inc
cmp
push
xchg
cmp
push
in
sbb
mov
fnstcw
(bad)
dec
push
lahf
gs
add
xor
aam
adc
and
dec
push
les
mov
pop
adc
fsub
jecxz
and
ss
jge
(bad)
jmp
push
adc
int
data16
out
(bad)
out
mov
lahf
cmp
jmp
ss
fild
out
mov
retf
push
lds
aad
sbb
into
test
cmp
dec
ins
mov
dec
std
int
es
dec
mov
in
jno
push
rcl
(bad)
out
jle
idiv
pop
sub
cmp
cmp
test
inc
sub
sbb
jle
dec
inc
in
les
dec
das
out
xor
jecxz
cmps
xchg
stos
dec
adc
jl
scas
adc
push
push
loopne
push
xor
in
jne
inc
jmp
gs
daa
adc
pop
cs
inc
inc
hlt
repnz
push
sbb
pop
push
push
sbb
outs
add
pop
ss
scas
mov
jmp
mov
jle
cs
push
push
sti
xchg
adc
lds
mov
xchg
adc
fsub
arpl
aas
test
fdiv
inc
push
cld
add
dec
push
fcomp
je
(bad)
pop
dec
xchg
int
or
mov
les
popa
mov
lock
jg
ret
jle
jl
mov
mov
xchg
inc
mov
and
xor
les
push
fnstcw
sub
xchg
jnp
cmp
pop
(bad)
mov
(bad)
leave
cmp
aad
gs
xchg
xchg
fcomp
sub
in
xchg
(bad)
mov
push
add
cmp
div
movs
fsub
lods
jae
xchg
push
push
inc
out
popa
inc
aas
push
test
sub
call
push
int
or
ficom
aaa
or
xor
test
out
int
pop
lods
dec
mov
sub
mov
add
shl
stos
adc
jl
and
and
(bad)
retf
and
mov
add
adc
push
mov
push
dec
add
jo
daa
or
sub
adc
or
xchg
loop
aaa
fs
(bad)
sub
push
jae
dec
pushf
xchg
outs
push
jg
fistp
lods
loop
mov
popf
fstp
xchg
popa
mov
clc
jns
mov
pop
cmc
push
and
and
mov
add
aaa
jecxz
xchg
cmp
sbb
es
pop
int
adc
adc
dec
arpl
test
mov
int
repnz
mov
ss
xchg
cmps
bound
in
xor
inc
xor
aas
mov
ficomp
pop
scas
inc
mov
adc
or
fild
movs
jmp
adc
std
mov
xor
mov
sbb
gs
cs
fistp
jns
out
loope
stos
rcl
mov
in
dec
repnz
cmp
push
sbb
data16
test
dec
inc
lahf
push
and
int3
push
into
xor
mov
sbb
mov
adc
dec
mov
out
jno
call
mov
dec
jno
mov
sub
aam
sbb
push
or
inc
aaa
jg
stos
pop
repz
(bad)
dec
cmp
int
xchg
in
imul
std
in
data16
adc
out
sbb
or
(bad)
push
push
fincstp
enter
out
mov
popf
scas
inc
push
lods
jle
xchg
sub
jp
les
jns
jo
(bad)
pushf
jbe
cmp
add
std
pop
lea
pop
sub
dec
cmp
inc
push
(bad)
xor
jne
sub
pop
adc
add
push
push
pop
push
nop
mov
in
(bad)
sub
and
popf
sbb
icebp
jns
mov
in
int
hlt
sahf
leave
(bad)
cmp
loopne
and
xor
sbb
jp
jle
and
or
jae
outs
xor
lahf
dec
or
push
cwde
jns
inc
cmp
loop
in
rol
or
clc
movs
xor
cdq
mov
mul
adc
sub
sbb
adc
popf
cmp
or
xchg
sub
push
or
xchg
mov
cmp
loopne
in
test
sbb
xchg
out
mov
push
fldenv
sub
mov
pop
sbb
stc
lds
(bad)
jmp
lods
pop
(bad)
sahf
cmp
jmp
adc
push
ret
js
and
and
pop
sub
fs
into
mov
sbb
ret
xor
jns
cmps
push
es
dec
or
add
mov
inc
or
sar
pushf
(bad)
adc
and
xchg
mov
add
lods
xchg
stc
outs
fisubr
into
push
pop
push
xor
add
or
in
cmp
push
aaa
fadd
movs
shl
mov
push
popf
xor
push
test
cmp
dec
and
(bad)
sahf
xchg
cli
dec
mov
push
add
sbb
mov
jl
out
loop
nop
push
je
fst
mov
jbe
cmp
cdq
jg
cmps
clc
adc
fwait
push
in
mov
mov
imul
xchg
cdq
jno
xchg
lds
shr
mov
inc
jmp
cwde
ins
pop
sbb
adc
ss
out
jecxz
(bad)
sti
or
sbb
jno
mov
mov
(bad)
dec
sbb
retf
or
cld
cdq
sbb
mov
pusha
test
loopne
pop
rcl
pop
dec
div
lds
rol
cmc
dec
mov
pop
loope
pop
inc
pop
push
in
out
jnp
lods
adc
(bad)
or
addr16
dec
mov
add
out
arpl
(bad)
in
xchg
mov
or
in
inc
cmp
hlt
pop
pop
ins
shr
aas
rol
mov
stc
bound
pop
dec
jmp
int3
mov
dec
push
sub
(bad)
jmp
fist
xchg
jge
mov
rcr
mov
daa
jno
mov
inc
jl
inc
outs
jmp
push
repnz
imul
jns
(bad)
mov
mov
lahf
popf
mov
ds
or
lock
loop
out
std
and
outs
cmp
lods
cs
imul
rcl
in
or
rol
mov
je
xor
cdq
cli
xchg
fdiv
dec
inc
jae
imul
inc
adc
mov
test
sub
lock
sahf
ret
adc
stos
mov
cwde
mov
sbb
hlt
push
xchg
mov
push
push
mov
add
pop
pop
dec
xchg
ja
jno
(bad)
push
xchg
dec
jg
push
fild
push
mov
inc
and
jle
mov
aaa
sti
cmp
and
sbb
sub
xchg
ja
adc
jp
lea
and
popf
inc
in
and
pop
and
out
sub
mov
rol
or
jo
nop
jp
pop
fldenv
mov
xchg
and
mov
sub
push
or
mov
pop
push
imul
and
(bad)
push
test
add
movs
or
in
outs
or
jae
jae
jae
cli
out
xchg
cmp
inc
imul
and
cmps
mov
xchg
jge
or
and
call
movs
dec
idiv
loope
dec
pushf
loop
loop
sahf
push
mov
mov
mov
(bad)
ficomp
add
imul
dec
popf
in
mov
fwait
inc
or
sbb
in
stc
test
aaa
dec
push
sub
add
sbb
je
and
xor
jle
or
rol
ds
push
das
adc
out
jg
loope
xlat
loope
out
in
mov
sbb
inc
mov
inc
stos
sbb
int3
fld
adc
imul
test
(bad)
dec
cs
fwait
cmp
sbb
mov
retf
mov
and
pop
push
adc
and
data16
pop
mov
sahf
stos
stos
push
neg
jmp
out
sahf
adc
xor
dec
xor
aam
clc
cs
push
sbb
xchg
lahf
pop
lods
pop
shl
fsubr
cli
mov
xchg
(bad)
adc
sbb
aam
ja
or
loope
or
xchg
cld
(bad)
push
mov
loop
mov
scas
in
jb
pop
call
into
sub
push
push
sub
sahf
adc
sbb
scas
adc
inc
imul
pop
test
rcl
sbb
mov
jle
cmps
aas
push
pop
mov
cdq
xchg
fsubr
mov
adc
sub
sub
inc
xchg
scas
lods
jecxz
pop
jle
cmp
mov
stc
xor
inc
jns
cmp
(bad)
fs
ss
adc
jp
loop
ins
test
sbb
mov
xchg
pushf
add
jbe
cld
repz
cmps
mov
or
test
jae
fwait
adc
push
fwait
cmps
adc
fdiv
mov
mov
scas
mov
cdq
retf
fs
fcomp
mov
sub
aad
jnp
in
fs
xchg
fiadd
dec
inc
lods
and
jnp
sub
and
(bad)
pop
sbb
sub
add
pop
xchg
sbb
inc
scas
outs
ret
icebp
jne
xchg
(bad)
mov
mov
and
mov
sbb
cmc
sub
xor
ins
shl
(bad)
pop
loopne
in
ja
pop
add
add
jb
fistp
fcmove
add
push
mov
inc
rol
dec
loop
(bad)
lock
shl
outs
and
mov
dec
data16
mov
add
das
inc
lea
inc
adc
mov
inc
fild
pop
pop
stos
lods
mov
adc
lahf
and
fwait
sub
push
out
(bad)
rcl
mov
sahf
xchg
cmp
aam
loope
into
stos
and
lds
add
pop
jae
(bad)
cli
xchg
pop
(bad)
(bad)
enter
scas
pop
add
sub
enter
xchg
out
stc
mov
outs
xchg
or
cmp
cmp
mov
test
loopne
imul
cmc
xchg
cmc
ret
das
int3
into
add
int
mov
pop
in
push
mov
ja
xchg
sub
aad
movs
xor
popf
xor
xchg
sbb
pop
cdq
xchg
jo
jmp
sbb
xor
and
mov
sbb
sbb
cmps
sub
mov
cmps
adc
ins
fist
retf
jecxz
cs
xchg
mov
and
and
stc
scas
xchg
les
adc
jmp
gs
cs
or
pop
mov
jp
out
fidivr
popf
(bad)
and
clc
adc
push
pop
mov
test
xor
mov
push
test
xor
inc
inc
leave
jno
push
mov
bound
imul
enter
inc
icebp
scas
idiv
test
xchg
ret
mov
daa
(bad)
fdivr
mul
(bad)
div
ss
repz
cdq
jo
and
clc
mov
push
xchg
jmp
jl
fsub
test
(bad)
mov
cli
inc
add
jo
add
mov
mov
push
mov
pop
in
test
(bad)
pop
mov
ins
xor
cmp
dec
mov
xchg
shr
pop
rcr
subps
test
shr
add
mov
(bad)
jp
dec
rcr
cmp
movs
push
dec
mov
mov
xchg
sub
inc
test
icebp
xchg
dec
or
aaa
mov
sub
xor
cwde
and
mov
clc
popa
sbb
popa
jecxz
stos
ss
jmp
std
push
aam
(bad)
mov
xchg
bswap
test
in
and
xchg
ja
repnz
and
sahf
mov
loope
fiadd
retf
add
cmp
inc
(bad)
push
cmp
and
loopne
nop
jmp
out
call
int
fcomp
enter
jnp
sub
pusha
adc
(bad)
sahf
add
mov
push
jecxz
cld
shl
sar
lock
and
(bad)
fwait
pop
ja
test
retf
dec
mov
xchg
jb
mov
lods
out
lahf
adc
mov
sub
mov
je
cmp
mov
pop
stos
js
sbb
mov
lods
or
mov
jl
cmp
call
inc
jne
sub
leave
out
fdiv
xchg
movs
cmps
fsubr
movs
sub
inc
sub
shl
(bad)
cs
push
lea
or
push
push
sbb
ret
(bad)
mov
lods
inc
mov
fisubr
rcl
or
push
sub
mov
pop
test
nop
adc
(bad)
pop
data16
mov
and
add
movs
push
in
clc
out
pop
add
inc
popa
lahf
cmp
sub
outs
sbb
mov
fstp
es
pop
js
cld
pop
mov
test
or
xchg
jb
add
pop
sahf
pop
pop
sub
hlt
or
cmp
push
mov
data16
into
mov
mov
fst
jg
sub
mov
call
retf
outs
sub
or
jmp
stc
jmp
shr
out
popa
js
mov
cmps
jmp
add
mov
fld
iret
sbb
pop
fnstenv
sahf
out
aas
and
iret
in
shl
mov
sub
mov
sbb
mov
popf
cmp
pop
ins
jnp
lock
sub
hlt
int3
inc
push
clc
sbb
mov
cmp
jmp
pop
loop
mov
or
pop
inc
jae
or
dec
repnz
cwde
push
mov
and
push
repz
push
lock
pop
xchg
sub
ins
es
imul
movs
jb
sbb
call
les
and
cdq
inc
sbb
sar
push
jge
inc
jmpw
cmps
push
push
call
mov
fcomp
sbb
mov
movs
addr16
pop
jle
fistp
add
repnz
cmp
mov
add
fwait
sbb
shl
inc
sti
cs
mov
sbb
call
pop
(bad)
adc
adc
mov
nop
je
inc
retf
push
test
ja
imul
dec
out
clc
fiadd
fs
adc
and
sub
(bad)
mov
es
mov
xor
daa
(bad)
aas
mov
cmp
lea
mov
pushf
aaa
xor
or
add
inc
aaa
mov
mov
mov
push
mov
ss
pop
bound
fs
loopne
stos
cli
cdq
push
and
ret
mov
test
adc
xchg
call
cwde
and
cmp
dec
push
enter
jns
and
cmp
cdq
ret
add
sti
(bad)
in
loopne
jmp
jecxz
(bad)
jb
gs
xchg
mov
les
inc
aaa
jns
sbb
in
(bad)
test
scas
pop
jne
fimul
sbb
lahf
je
mov
aad
lods
mul
aaa
cmp
cdq
and
das
enter
enter
ror
mov
ins
out
mov
js
loopne
in
lods
mov
in
ret
cld
xor
mov
addr16
das
jmp
hlt
mov
push
push
in
or
dec
mov
je
xchg
mov
cdq
xlat
stos
xchg
fbstp
jg
retf
add
add
sub
lods
xchg
mul
shr
arpl
add
outs
push
lods
shr
lea
sti
push
adc
sahf
loope
inc
adc
lods
mov
pop
and
push
mov
mov
sub
cmp
shl
mov
stos
jno
std
xor
jae
and
xchg
clc
and
out
sbb
pop
sub
pop
mov
mov
(bad)
fbstp
adc
or
outs
aas
xor
push
out
adc
into
mov
out
aad
jmp
push
sbb
jg
mov
cld
scas
push
add
aam
call
daa
xchg
mov
out
sbb
dec
mov
mov
xchg
mov
(bad)
arpl
add
add
fcmovu
adc
jle
sub
cmps
popa
fstp
push
mov
xor
mov
sub
pop
mov
or
ror
dec
and
sub
dec
sbb
lods
mov
cdq
and
jecxz
out
fs
xchg
in
pop
shl
loope
aam
addr16
push
inc
aam
xchg
(bad)
mov
ja
call
jno
fs
popf
cs
xlat
retf
sbb
enter
push
cmc
fimul
mov
in
aaa
mov
clc
push
fisub
and
je
mov
cli
rcr
out
test
pop
xchg
jb
inc
push
call
loopne
psubusb
jo
mov
out
repnz
sub
jo
mov
mov
xor
daa
in
lahf
xchg
pop
mov
xchg
pop
sub
int3
in
push
dec
loop
lds
xlat
ds
mov
sbb
sub
movs
test
xchg
push
and
add
lods
jmp
lock
mov
bound
mov
pop
imul
xor
xchg
ins
add
adc
cwde
in
jp
lahf
icebp
cmp
xchg
and
xchg
sub
int
cmp
fs
mov
shr
adc
xor
loop
adc
mov
popfw
sub
dec
sbb
xchg
adc
jmp
daa
jae
jo
jle
xor
ins
dec
daa
sub
push
retf
iret
add
xlat
js
icebp
bound
cmp
ficomp
sbb
cmp
mov
sbb
xchg
xor
dec
pop
sub
scas
mov
dec
adc
sbb
mov
cli
pop
pop
jo
stos
cli
xchg
push
and
and
sar
push
fs
jb
scas
test
cli
dec
dec
dec
mov
and
out
cmp
and
jns
rcr
fwait
cmp
lods
xchg
int3
inc
mov
jo
inc
dec
fbld
loopne
and
push
or
push
mov
daa
cmps
mov
jle
lds
push
push
popf
pop
ret
push
mov
pusha
outs
push
ss
pop
clc
sub
lods
ins
pop
xchg
add
fcmovu
gs
dec
pop
push
lahf
pushf
inc
adc
jg
in
je
cmp
test
push
or
add
xchg
dec
jmp
xchg
mov
sub
daa
dec
push
rcr
inc
adc
fs
sbb
pop
sbb
xor
popf
out
mov
hlt
add
xchg
dec
push
xchg
(bad)
fcomp
push
or
jb
arpl
xchg
mov
jns
and
ret
add
aad
sub
scas
pop
sub
xchg
nop
push
cmp
xor
and
push
and
push
popf
daa
inc
ds
cmp
ret
ins
push
inc
mov
lea
fst
and
(bad)
dec
mov
aaa
mov
jbe
or
pop
and
xor
data16
sbb
repnz
and
lods
aam
stc
cmps
jg
xchg
mov
mov
fs
aam
add
in
sbb
movs
std
mov
repz
mov
dec
mov
cwde
in
push
xchg
nop
icebp
mov
ja
adc
mov
shl
mov
cld
mov
cmp
iret
and
jo
dec
cmc
dec
lock
jle
or
mov
xchg
lahf
push
xchg
cwde
jo
daa
or
xor
mov
inc
and
addr16
pop
push
push
ins
jg
ret
int
lods
xor
jle
inc
sbb
pusha
or
push
mov
out
jmp
dec
sbb
(bad)
imul
jp
test
sub
ficomp
or
or
sub
sahf
cmps
mov
daa
fwait
pop
push
out
lods
fadd
dec
test
inc
imul
dec
les
mov
dec
inc
sub
xchg
jle
jnp
xor
inc
mov
jp
or
cwde
loope
sub
push
out
xor
sub
fs
push
enter
lock
mov
dec
mov
div
jp
inc
js
adc
fchs
int3
mov
mov
test
push
jg
xchg
lods
out
ins
cmp
lods
(bad)
and
push
loopne
jo
mov
mov
enter
into
and
pop
fmul
dec
cmp
pop
icebp
push
jecxz
mov
enter
add
shl
mov
mov
nop
nop
call
xchg
pop
sub
and
out
daa
push
mov
add
mov
xchg
pop
movs
sbb
sub
ins
mov
jb
popa
test
or
sbb
aaa
std
rcl
sub
cmc
arpl
in
cmp
inc
(bad)
mov
or
dec
pop
ins
sbb
pop
les
popf
xchg
outs
inc
cli
bound
mov
jbe
iret
pop
int
push
mov
jns
jb
loopne
xor
ins
dec
adc
pop
aad
and
xchg
xchg
pop
fs
inc
cld
sahf
fist
inc
stos
scas
dec
jge
ret
add
into
xchg
stos
bound
cmp
popa
fabs
dec
in
popf
mov
sbb
cs
outs
xor
and
test
movs
push
xchg
jmp
(bad)
sub
push
add
add
mov
and
aas
(bad)
sbb
out
mov
mov
js
aad
into
xchg
mov
cmp
push
bswap
xchg
pop
xchg
icebp
out
cwde
mov
or
stos
mov
adc
adc
cmp
adc
pop
cmp
jg
in
rcr
pmulhuw
(bad)
dec
or
addr16
ds
cmc
pop
in
test
push
fs
push
mov
inc
sub
mov
(bad)
sbb
and
dec
mov
xlat
jmp
cmp
and
sub
sti
inc
ret
leave
and
add
mov
(bad)
outs
mov
(bad)
xor
dec
(bad)
je
sub
icebp
mov
scas
fld
cmps
add
std
mov
(bad)
mov
add
(bad)
sbb
add
adc
xchg
and
iret
adc
in
and
ret
sub
imul
jle
imul
pop
add
mov
jne
push
fs
mov
jae
adc
inc
jmp
mov
aam
loopne
sub
fwait
and
bound
pushf
add
xor
aam
call
sbb
mov
iret
stos
aaa
loop
int
int
push
sub
mov
push
ss
dec
mov
ffreep
mov
xchg
add
cmp
scas
jbe
pop
sbb
cvtdq2ps
xchg
mov
imul
cwd
mov
mov
cmp
ficom
inc
mov
test
in
aam
dec
xor
fwait
leave
je
sbb
sbb
jle
pusha
call
scas
jbe
push
and
cli
or
test
mov
icebp
arpl
repnz
adc
xchg
sbb
jbe
setns
and
aam
and
fs
bound
loop
xchg
inc
xchg
rol
push
sub
and
shl
dec
leave
repnz
outs
inc
ss
(bad)
jg
inc
fnstcw
xchg
inc
shl
stc
adc
bound
pop
fld
lds
jmp
adc
or
xchg
pop
leave
mov
push
add
pop
and
adc
call
or
or
lahf
retf
push
pop
or
inc
aaa
adc
cmp
dec
into
pop
pop
push
das
inc
or
and
loope
enter
(bad)
and
ret
push
mov
mov
fdiv
sub
(bad)
mov
mov
add
sub
adc
movs
cmps
mov
adc
mov
loopne
add
dec
fwait
test
sub
lods
(bad)
mov
xor
movs
jnp
(bad)
sar
mov
push
jecxz
neg
sahf
aad
test
outs
sbb
cli
dec
sub
inc
mov
js
xchg
xlat
and
inc
int3
fisub
pushf
push
fist
retf
dec
lock
jno
mov
(bad)
repnz
int3
rol
push
inc
fistp
xchg
or
xor
(bad)
jmp
mov
int3
adc
loop
mov
push
sub
sbb
xchg
mov
in
cmp
pop
sub
mov
inc
fdiv
hlt
pop
sar
push
ins
push
push
sbb
cmp
or
out
fisub
xor
adc
mov
mov
fwait
loope
or
add
and
xchg
shl
stc
pop
fmul
sahf
jnp
or
push
sbb
hlt
or
lock
xor
sti
inc
sub
outs
or
jmp
sub
and
adc
hlt
adc
mov
jmp
fidiv
test
out
cld
pushf
int3
add
inc
mov
fs
sub
lods
push
ret
adc
cmp
stos
add
xor
adc
inc
mov
inc
bound
pop
inc
call
shr
outs
sub
enter
and
dec
push
and
cmp
adc
outs
scas
inc
int3
mov
cwd
mov
adc
ins
cs
mov
and
jo
xchg
or
psraw
outs
cli
icebp
xor
mulps
clc
or
in
push
loopne
ins
repnz
jae
sahf
lahf
aas
in
leave
pop
or
push
sub
daa
pop
test
neg
stos
popf
xchg
out
js
in
cmp
arpl
inc
mov
cli
inc
out
jb
xchg
add
fnsave
(bad)
jnp
sub
hlt
mov
pop
push
pop
aad
ds
push
cmp
xchg
daa
push
popa
(bad)
jge
cmp
(bad)
lods
int3
jg
and
rcl
add
xchg
jmp
outs
(bad)
scas
mov
xor
xchg
out
sahf
gs
jo
add
iret
repz
add
dec
(bad)
out
mov
mov
std
ds
mov
movs
or
or
pop
mov
(bad)
dec
cmps
add
sbb
jecxz
xchg
xor
ins
push
loope
aam
das
mov
movs
scas
mov
jl
and
sahf
movs
and
cli
(bad)
cmc
ror
(bad)
jne
jne
jo
mov
bound
and
add
jnp
and
into
jno
sub
xchg
(bad)
mov
(bad)
icebp
xor
outs
push
pop
test
ds
add
push
jno
(bad)
sub
sbb
lahf
push
pop
retf
jl
adc
add
es
cmps
ins
fidivr
inc
and
or
int
pop
xchg
popf
int3
inc
mov
adc
movs
and
aad
cwde
add
lea
mov
test
xlat
and
sti
mov
cvtps2pd
jle
jecxz
nop
int3
push
xchg
add
add
cs
pop
pushf
push
sub
shl
outs
cwde
out
sub
and
push
and
or
shl
adc
jmp
or
stos
pop
pop
idiv
stos
adc
les
call
in
js
inc
aad
call
pop
and
xor
mov
push
xor
ret
(bad)
mov
fcmovbe
int
fs
dec
add
ficom
lds
cmc
rcr
mov
test
in
in
inc
jne
xchg
into
jo
sub
ins
jmp
iret
(bad)
ds
out
out
sbb
adc
adc
mov
rcpps
and
cmps
or
mov
nop
clc
inc
psllq
push
test
push
push
cdq
cmc
pop
call
cmps
leave
dec
(bad)
xor
mov
fnstsw
xor
sub
out
call
mov
sub
(bad)
mov
dec
sbb
call
rcl
mov
popf
xlat
jae
add
jns
pop
fadd
sub
(bad)
enter
lahf
jle
pop
pop
(bad)
imul
xchg
jns
and
xor
jae
mov
and
mov
pop
ja
movs
je
out
jae
out
popf
repnz
fs
xchg
addr16
fisub
je
stos
aad
outs
mul
pop
imul
aaa
shl
add
icebp
add
scas
or
(bad)
xchg
dec
xor
inc
fwait
mov
xchg
xchg
fs
xor
mov
shr
dec
sub
xor
mov
cmps
cli
or
jo
push
pop
mov
ins
aaa
stos
push
sbb
push
inc
loope
ficomp
pop
ja
cld
neg
aam
push
popf
jno
std
jle
int
gs
pop
(bad)
out
or
pusha
and
shl
test
test
(bad)
shl
aam
push
fist
cmc
sbb
call
in
mov
(bad)
fldcw
pop
test
test
div
repz
sbb
and
add
and
(bad)
lahf
sti
inc
inc
(bad)
neg
ds
jecxz
jns
out
mov
push
or
sbb
cmc
xchg
inc
mov
das
push
ins
mov
cmp
mov
test
daa
sbb
addr16
in
arpl
cmp
in
fneni(8087
cs
in
daa
je
mov
push
sbb
mov
pop
loop
add
cli
movs
test
mov
mov
push
xor
push
mov
jg
push
pop
jg
call
mov
jae
ja
mov
retf
sub
sbb
xchg
adc
repz
pushw
pop
lods
pop
fnsave
push
cmps
movs
nop
sahf
ficomp
ret
leave
movs
data16
div
push
pop
aas
ds
push
inc
xlat
dec
movs
repnz
bound
mov
js
(bad)
inc
add
shl
sub
cwde
xchg
pop
std
loop
sbb
ins
jle
ficom
cmp
add
fs
(bad)
mov
outs
sub
xor
dec
pop
jns
sti
mov
sahf
cmps
dec
js
fisttp
fiadd
cmp
das
and
mov
add
aaa
into
dec
cmps
sub
ret
div
nop
or
in
retf
retf
cmp
jb
inc
push
add
sbb
arpl
call
or
scas
push
int
movs
(bad)
pop
int
sub
xchg
inc
sti
not
pop
xlat
hlt
test
and
jle
stos
out
div
in
adc
sbb
sub
adc
mov
in
out
or
sbb
adc
mov
push
pop
imul
lock
arpl
imul
fist
or
clc
mov
into
inc
cmp
add
and
mov
xchg
nop
or
jnp
xor
mov
inc
cmp
push
add
dec
add
sbb
imul
and
sub
cmc
mov
lahf
rol
dec
sar
mov
(bad)
mov
add
sbb
pop
xchg
or
lods
fwait
xor
lods
sbb
(bad)
popf
pop
aaa
(bad)
aad
shl
idiv
repz
test
jae
addr16
clc
ins
jg
sbb
(bad)
mov
pop
addr16
cmc
pop
adc
or
jbe
mov
mov
mov
and
shl
fisttp
sbb
mov
xor
pop
and
lods
sub
or
adc
xor
push
or
(bad)
js
xchg
push
sub
clc
jg
push
sti
xor
in
xchg
popa
inc
jecxz
fst
clc
push
cli
in
dec
test
or
or
in
call
and
ficomp
dec
and
pop
inc
push
adc
jmp
mov
add
mov
leave
movs
sub
mov
outs
or
jmp
jnp
movs
sbb
stos
pop
retf
pop
jge
xchg
cs
adc
rol
pop
and
adc
ja
pop
(bad)
sub
scas
repnz
test
sbb
mov
pop
cmps
in
clc
push
(bad)
cmps
xchg
jae
inc
or
enter
cmp
or
jecxz
(bad)
jnp
movzx
mov
icebp
push
or
dec
fldpi
sub
mov
mov
fistp
test
and
xchg
mov
mov
pop
fwait
mulps
fbstp
jecxz
pusha
xchg
lea
sar
cdq
mov
xchg
add
cmps
div
popa
icebp
add
push
mov
push
enter
nop
lods
push
test
xchg
cmp
or
pop
sti
xor
loopne
loop
jmp
cmp
mov
shl
clc
sbb
leave
inc
popf
add
sbb
cmp
in
inc
mov
mov
retf
fist
lds
jnp
(bad)
inc
adc
cmp
jmp
add
pop
js
sub
and
mov
stos
cmp
aam
pop
sub
(bad)
push
cmp
and
icebp
and
jno
sbb
bound
sub
(bad)
pop
dec
mov
xchg
in
leave
mov
pop
cmp
ins
pop
shl
aad
inc
add
jge
adc
adc
cmc
lock
and
ffree
cmp
aam
xor
push
(bad)
xor
dec
fwait
inc
jmp
inc
mov
scas
neg
add
shl
or
pop
nop
mov
inc
inc
call
and
jmp
pop
repz
(bad)
movs
push
lods
or
and
arpl
adc
xchg
stos
inc
shl
jmp
cdq
mov
movs
pop
out
ds
mov
jle
mov
ins
movs
pop
data16
mov
mov
neg
call
mov
jnp
xor
addr16
imul
push
mov
jb
xchg
scas
dec
inc
jo
lock
aas
pop
(bad)
stc
sbb
sar
lahf
imul
jl
aad
xchg
dec
dec
imul
jg
add
ror
xor
xchg
pop
arpl
jle
(bad)
loop
inc
repnz
cmp
jecxz
push
jne
in
mov
sub
call
pop
push
les
inc
push
pusha
nop
(bad)
xchg
inc
add
cmps
dec
(bad)
and
test
std
in
ins
popa
sub
movs
pusha
push
rol
gs
mov
mov
retf
push
adc
leave
aam
xlat
ds
pop
stos
fs
or
push
stos
bound
int
cmp
std
dec
jo
out
popf
cmp
pop
jmp
movs
int
dec
add
pop
rcl
bound
loopne
adc
fmulp
mov
mov
mov
or
push
push
inc
outs
xor
popf
imul
pop
push
aam
lods
repnz
int3
idiv
(bad)
out
fild
jns
lods
add
(bad)
cmp
cmp
adc
cmp
mov
push
cdq
sti
inc
imul
shl
test
sub
pushf
int3
loop
xchg
les
stos
enter
fcom
(bad)
lods
adc
lock
arpl
mov
inc
jae
xchg
add
cdq
mov
je
in
ror
and
rol
or
pop
popf
(bad)
mov
xor
sub
scas
jbe
cli
sub
jmp
or
pusha
jmp
jmp
dec
adc
js
int3
jno
outs
leave
jp
repz
jle
iret
int
xor
xlat
rol
pop
push
call
imul
test
and
inc
or
sbb
adc
outs
jne
movs
mov
dec
addr16
add
pop
mov
jbe
mov
xor
pop
adc
enter
cli
mov
fcomp
jo
pusha
mov
mov
and
cli
pop
fidivr
add
push
in
adc
(bad)
xor
(bad)
retf
imul
shl
aad
cli
sub
cmp
push
xchg
adc
shl
clc
sbb
mov
jno
shr
xor
pusha
push
xor
inc
fistp
mov
mov
and
mov
les
pop
ja
call
dec
out
xchg
mov
add
mov
ins
scas
adc
ins
inc
jg
add
sub
adc
or
mov
movs
dec
push
pushf
xor
sub
pop
ins
mov
inc
jo
jecxz
(bad)
cwde
retf
rol
dec
jmp
ins
ret
mov
add
push
outs
adc
cmps
popw
or
dec
stc
xor
sbb
mov
fstp
jnp
or
imul
push
pop
repnz
cmp
fdiv
add
out
push
or
jmp
mov
mov
cld
jbe
aaa
call
mov
test
push
fs
jge
rcr
js
repnz
in
loop
ret
jge
inc
call
xor
sbb
pop
pop
add
push
push
mov
push
out
repnz
jnp
mov
inc
pop
sbb
add
aad
pop
pop
adc
sbb
ins
jb
int3
outs
inc
mov
cdq
mov
ins
test
leave
sar
lds
fiadd
mov
inc
les
inc
push
das
mov
push
leave
rcl
sub
call
push
mov
dec
daa
mov
sub
stc
vcvttss2si
(bad)
xor
icebp
pushf
lock
add
call
xchg
or
ins
push
repnz
(bad)
sub
nop
fbld
(bad)
test
push
xor
sahf
xlat
cwde
in
mov
push
pop
mov
add
mov
cwde
mov
xor
pop
mov
mov
loope
out
xchg
mov
mov
cld
sahf
ja
cmc
push
je
ja
retf
mov
inc
fwait
xor
push
jg
adc
pop
sbb
inc
imul
jmp
jnp
scas
test
hlt
dec
scas
sahf
mov
add
cmp
mov
ja
mov
fistp
xchg
icebp
xlat
dec
cmp
and
mov
xchg
dec
xor
sub
mov
mov
lock
in
push
loope
pop
fcom
pop
xor
adc
je
icebp
shl
push
jno
add
pusha
call
icebp
pop
xor
sub
push
adc
(bad)
rcr
or
jle
hlt
loop
and
sbb
nop
(bad)
fidiv
js
add
cmp
add
(bad)
mov
sbb
pop
and
cli
(bad)
pop
pop
arpl
push
mov
ins
loopne
sbb
fwait
mov
xchg
push
iret
(bad)
add
sbb
dec
jp
lahf
repnz
jnp
retf
sbb
popa
clc
dec
jmp
inc
fistp
mov
repnz
xlat
xchg
adc
call
xor
in
out
xchg
ret
cmps
js
sbb
xchg
cmc
arpl
inc
in
xchg
inc
xor
mov
test
xor
sub
ror
std
adc
hlt
jbe
sbb
pop
xor
push
lea
jb
int3
xlat
sub
add
ror
xor
mov
fcomp
mov
out
xchg
jge
out
jb
cdq
loope
add
lahf
push
pop
jmp
xchg
sub
push
sti
dec
movs
popf
cmp
fnstenv
jl
sbb
pop
(bad)
clc
in
inc
movs
adc
test
pop
fiadd
pop
mov
jmp
inc
in
imul
inc
cmps
scas
(bad)
fiadd
inc
lods
cwde
pop
mov
push
and
out
mov
pop
mov
sub
clc
cmp
inc
sahf
xchg
inc
add
out
arpl
mov
sysexit
in
loopne
mov
std
push
aam
add
ficom
or
(bad)
rcr
dec
sahf
pop
mov
(bad)
or
scas
and
pop
cwde
inc
jecxz
adc
lsl
xchg
jge
xor
xchg
push
sbb
dec
add
aas
or
or
sti
imul
adc
push
push
(bad)
sti
je
and
jae
outs
sbb
sub
ins
cwde
(bad)
push
jnp
scas
movs
aam
push
gs
pop
cmp
call
add
cmc
cmp
(bad)
cld
xchg
in
push
adc
or
mov
mov
cmp
jne
aaa
ins
rol
daa
pop
ds
les
jae
stos
sar
xchg
lds
daa
(bad)
cmp
pop
or
mov
leave
jmp
test
mov
fcom
out
or
loopne
mov
neg
mov
pop
adc
push
jp
fstp
pop
(bad)
jge
aas
shr
out
popa
fcom
dec
cli
(bad)
mov
push
outs
xchg
adc
lods
fstp
mov
inc
mov
enter
popa
add
or
or
clc
sub
mov
cmp
stc
fiadd
pusha
sbb
pop
leave
push
aad
dec
push
arpl
mov
out
in
mov
aad
cmp
pop
lods
xor
pop
dec
ror
cs
sbb
cmp
push
jne
inc
sar
mov
sbb
mov
stos
jo
stos
repnz
or
dec
and
push
push
outs
adc
(bad)
or
xchg
div
xchg
dec
adc
cmp
push
fsubr
and
xor
dec
fcom
and
mov
xor
adc
push
fwait
sbb
jmp
push
inc
adc
pop
mov
(bad)
(bad)
out
out
cmp
or
shl
add
adc
test
jmp
loop
push
ficom
cmp
push
je
xchg
xchg
pop
dec
sbb
(bad)
(bad)
rcl
test
in
imul
stos
jns
xchg
mov
push
aaa
and
sbb
dec
or
retf
(bad)
sti
mov
xchg
jmp
jmp
jne
adc
adc
dec
leave
das
or
jb
sbb
xor
ret
(bad)
push
dec
or
ret
popa
mov
pop
push
sbb
cmp
outs
clc
push
data16
push
jecxz
mov
into
mov
fistp
jno
push
jne
add
ret
mov
(bad)
push
lahf
xor
scas
fidivr
ss
movs
pop
xor
xlat
inc
sti
test
push
cmp
stos
dec
jl
es
and
popf
cmps
add
jg
in
inc
push
cwde
dec
js
jmp
pop
and
jnp
mov
pushf
push
fidivr
mov
push
aaa
sub
call
stos
push
add
mov
mov
push
fs
xchg
sbb
adc
call
pop
push
test
gs
push
xchg
xor
sbb
into
xor
imul
arpl
push
jae
xor
or
into
popf
sti
sub
add
mov
movs
stc
mov
inc
xchg
loop
into
or
mov
inc
jle
xchg
dec
sbb
cmp
mov
(bad)
sbb
std
inc
jg
cmc
cmp
clc
imul
push
jl
(bad)
adc
and
adc
pop
adc
jb
pop
nop
xchg
movs
push
pop
jl
shr
clc
xor
adc
enter
cwde
ret
stc
or
jnp
and
mov
pop
jno
pop
ror
cmp
call
jbe
mov
mov
or
test
mov
pop
mov
adc
mov
pop
ins
push
push
or
call
fwait
xor
mov
lock
pop
add
leave
lds
inc
ss
add
jae
pop
inc
cmp
and
push
xor
pop
data16
dec
xchg
mov
mov
(bad)
out
xor
sbb
jno
dec
adc
ret
int3
aad
js
pop
daa
mov
cmps
dec
push
sbb
cli
mov
or
cmp
movs
pop
inc
call
js
pop
in
or
jmp
jge
pusha
popf
mov
adc
mov
mov
mov
mov
gs
adc
cld
push
(bad)
and
movs
jo
and
scas
rcl
rcr
xor
adc
jmp
hlt
sub
mov
movs
aaa
inc
lea
mov
rcr
mov
ret
dec
xchg
or
add
in
hlt
div
xchg
fwait
test
sbb
pop
sub
push
dec
dec
sbb
push
pop
jnp
xchg
mov
pop
xchg
push
bound
adc
(bad)
es
lods
xchg
pop
or
cmp
nop
dec
inc
adc
lds
dec
xrelease
sbb
dec
xor
std
addr16
pop
sbb
loope
cmp
xor
fild
mov
mov
xor
pop
rcr
(bad)
adc
dec
xchg
inc
sub
sbb
and
ins
call
push
movs
pop
jne
les
test
imul
dec
inc
movs
fwait
popa
push
inc
aam
test
int
loopne
and
and
loopne
lods
cmp
vdivps
mov
ds
jmp
lods
cmp
or
pop
add
(bad)
jbe
sbb
sbb
(bad)
xchg
movs
sbb
loop
cmc
mov
mov
(bad)
jg
repz
fsub
mov
or
jmp
cmp
xor
in
lods
adc
les
outs
loop
mov
movs
test
cdq
xlat
out
xchg
psubsb
in
neg
xchg
inc
push
cdq
call
jns
test
les
dec
loope
push
pop
aaa
xor
repnz
xchg
xor
sub
jbe
sbb
xchg
inc
and
dec
clc
cmp
cmp
out
rcl
ds
mov
pop
sub
jmp
sahf
sbb
inc
add
cwde
shl
ja
sub
inc
outs
push
push
fs
not
push
dec
mov
pop
lods
pop
push
bound
ret
in
adc
mov
scas
repnz
adc
std
outs
pop
repnz
xchg
fucomip
push
push
loopne
push
mov
call
push
push
js
lods
push
jns
xchg
int
push
repz
lods
jnp
ror
fs
mov
les
adc
das
ja
jb
call
idiv
std
xor
inc
ret
lahf
add
pop
lods
ja
mov
cmp
xchg
retf
sub
or
call
push
das
mov
data16
xchg
ret
xor
xchg
std
outs
jnp
in
jp
sub
into
out
sub
add
sar
pop
adc
mov
std
shr
lds
sub
leave
das
in
jno
inc
(bad)
hlt
cld
adc
in
retf
pop
mov
std
xor
mov
stc
mul
sbb
cmp
mov
shl
(bad)
pop
imul
adc
mov
add
mov
xor
xor
mov
jp
shl
xchg
fnsave
sbb
(bad)
jno
adc
mov
cli
jg
pushf
cmp
mov
pop
fsubr
jp
mov
lock
int
push
popa
jl
ins
mov
aas
enter
cmp
pop
ficom
call
int
retf
or
lods
jp
sbb
je
dec
popa
cld
and
pop
ja
mov
jmp
sbb
jl
adc
or
mov
aad
push
hlt
xlat
xor
std
pop
inc
add
(bad)
scas
add
add
or
in
and
lock
es
jp
xchg
fadd
leave
add
and
jo
push
sbb
fwait
sub
and
and
imul
mov
(bad)
mov
mov
pop
mov
adc
xchg
inc
pop
dec
pop
xchg
mov
mov
pop
lds
cmc
(bad)
arpl
sbb
pop
ins
push
jp
fmul
jmp
or
jo
add
(bad)
(bad)
sub
xor
sbb
test
pop
mov
pop
pop
inc
cmp
push
add
or
out
ret
jbe
lahf
and
js
cmp
jmp
adc
xor
sub
push
jge
xor
pop
adc
add
popf
lods
sbb
cwde
test
push
xchg
mov
sar
ficom
not
and
sahf
mov
adc
mov
hlt
popa
imul
bnd
loopne
xchg
je
cmp
dec
xor
jge
out
dec
je
cdq
ja
jge
out
fild
sub
xchg
or
mov
lods
or
int
mov
cmc
push
push
cmp
dec
and
and
or
test
xchg
into
(bad)
mov
test
push
shl
jmp
mov
inc
pop
lea
loope
mov
inc
mov
mov
jae
and
imul
adc
lods
imul
int
gs
fs
iret
and
test
loopne
push
jmp
adc
or
xchg
jae
pop
pushf
sub
shl
mov
add
and
push
sub
and
add
mov
(bad)
leave
xor
mov
mov
mov
ror
sbb
push
into
adc
out
nop
xbegin
pop
jl
sbb
dec
jmp
test
test
inc
or
inc
adc
lock
jp
dec
(bad)
out
scas
jp
xchg
pop
or
pop
bound
call
aam
sub
pusha
inc
rol
(bad)
cli
xlat
jo
jne
leave
xchg
pushf
stos
inc
ss
add
dec
or
jge
fsubr
ins
adc
push
movs
(bad)
test
mov
aaa
sbb
mov
movs
aaa
and
es
xchg
loopne
push
fsubr
and
cmp
add
lahf
mov
cli
push
ss
dec
sbb
xchg
cmps
sub
sub
test
push
loop
pop
test
aas
repnz
jmp
inc
aaa
xchg
dec
fdiv
sbb
je
jne
inc
jp
cmp
(bad)
jp
xlat
shl
outs
xchg
push
ins
sbb
imul
add
mov
cmc
or
pop
js
loope
sbb
pop
in
add
fisub
mov
sbb
dec
pushf
je
jecxz
repz
data16
cmps
dec
scas
(bad)
shl
or
jmp
or
shl
es
sbb
cmp
xor
es
jl
jle
rcr
pop
out
mov
push
jg
pop
shr
adc
pop
outs
addr16
fs
ret
imul
or
data16
outs
pop
dec
jb
(bad)
cmps
or
test
mov
or
mov
fst
call
cmp
push
dec
inc
out
cdq
mov
dec
and
jno
adc
sub
(bad)
ss
xlat
in
shl
sbb
pop
push
loopne
push
jns
stos
arpl
sbb
in
cld
iret
jns
out
(bad)
ret
cmp
ss
in
loopne
push
adc
xchg
mov
in
or
enter
sub
and
sahf
out
fdivr
je
pop
popf
cmc
outs
jp
adc
cmp
adc
shr
in
adc
sub
xchg
outs
pusha
shr
fwait
test
addr16
or
cld
scas
mov
cmps
mov
ret
sbb
xchg
jg
mov
adc
aas
add
stos
sub
test
pop
jbe
(bad)
mov
mov
push
mov
adc
imul
js
push
sbb
inc
ss
sbb
mov
inc
push
test
inc
popa
and
cmp
jne
stc
gs
das
jecxz
mov
stos
bound
imul
sub
lods
cmp
xchg
jnp
cld
pop
stos
dec
push
mov
jp
adc
test
jbe
mov
mov
and
adc
cmp
adc
out
xor
repz
lock
mov
iret
pop
and
imul
adc
and
retf
dec
cwde
gs
int3
popf
outs
xchg
mov
fimul
and
ins
jp
or
bound
lods
fdivr
shl
fbld
mov
in
lea
inc
push
sar
test
jne
rcr
dec
loope
push
sub
push
mov
(bad)
(bad)
jns
shr
jge
fcomp
xchg
pop
jl
sub
inc
cmp
jo
pop
mov
add
aad
scas
imul
push
sti
in
sahf
xor
pop
cwde
xchg
std
jbe
add
dec
out
ins
bound
fsubr
and
inc
scas
aaa
test
mov
mov
push
mov
out
outs
shr
sub
sbb
xchg
test
dec
lock
ss
mov
adc
mov
cmc
cmc
mov
push
jecxz
inc
sbb
addr16
xor
push
pusha
ins
jg
mov
inc
adc
push
daa
push
adc
popf
push
pop
or
cmp
pop
xchg
int3
xchg
mov
lock
pop
test
mov
xor
fstp
pop
loop
(bad)
fcomi
adc
in
stos
jne
scas
out
pop
inc
(bad)
sti
jne
mov
int3
movs
and
jmp
(bad)
xchg
push
lahf
or
leave
mov
test
pop
out
(bad)
das
jg
push
cmp
mov
fucomip
sar
mov
add
and
fdivp
sub
cwde
xchg
adc
dec
aaa
push
dec
lahf
stos
xchg
sub
adc
shr
push
cmp
popa
jbe
fiadd
ja
sbb
mov
dec
cmp
movs
mov
sbb
pushf
shr
out
pop
mov
cmc
mov
cwde
fcom
jmp
jge
fisub
dec
pop
push
mov
sub
dec
pop
and
mov
es
and
or
mov
xchg
xchg
int3
fcmovne
les
dec
mov
sbb
fidiv
icebp
sbb
jno
mov
test
enter
inc
(bad)
retf
das
aas
cmp
rcl
fdivr
adc
les
cwde
dec
loop
mov
inc
sahf
dec
ins
jmp
fisub
sar
(bad)
mov
stc
xor
outs
and
fst
clc
xchg
cwde
pop
push
push
int3
xchg
mov
aam
jmp
jmp
add
dec
addr16
sub
jbe
mov
loop
xlat
movs
jle
cld
push
dec
ret
mov
in
xchg
int3
hlt
sub
mov
in
adc
and
mov
shl
xor
ja
sbb
cmp
fdivr
add
ds
mov
stos
push
dec
lods
xor
outs
cdq
test
xchg
mov
add
pop
add
pop
nop
in
scas
(bad)
fadd
retf
pusha
in
sbb
fs
or
into
test
xor
sbb
push
imul
sahf
movs
mov
inc
es
xchg
pop
movs
mov
sar
adc
push
cmp
and
cmp
push
or
bound
mov
jb
xchg
inc
in
lock
add
test
int
xchg
in
xchg
call
xchg
xchg
lods
mov
sti
cmp
test
popf
lods
outs
push
add
inc
stos
mov
mov
mov
cli
mov
pushf
pop
data16
(bad)
mov
inc
gs
xchg
daa
pop
fsub
dec
repz
pushf
aad
enter
jb
pop
imul
rcl
scas
lahf
sahf
ja
iret
mov
aam
repz
arpl
and
xor
jbe
clc
sbb
sbb
jne
inc
ds
pushf
pop
stos
xchg
das
inc
push
pop
jb
retf
push
dec
adc
jb
xor
rol
sbb
call
adc
leave
and
adc
add
jmp
mov
mov
mov
std
retf
jg
fwait
data16
add
sub
iret
pop
and
sub
sbb
inc
cmp
cmp
test
sbb
pop
cmp
mov
cmp
cmp
pop
(bad)
leave
xor
dec
push
cmp
pop
jg
mov
mov
mov
ds
ins
jmp
daa
mov
and
iret
fdivr
inc
jge
mov
inc
shr
adc
stc
xchg
cmp
lods
push
xchg
mov
sbb
(bad)
iret
xor
ret
lahf
xchg
scas
push
iret
mov
adc
mov
xchg
xlat
xor
push
int3
mov
xchg
inc
jns
ins
cmp
lock
mov
sub
sub
int
sub
pusha
pop
pusha
inc
retf
cmp
jnp
xchg
push
imul
and
in
lahf
fstp
add
aam
add
ja
pop
mov
jb
push
sbb
cmp
jb
imul
ds
ds
xchg
adc
jmp
movs
in
or
xchg
sub
addr16
imul
add
pop
push
push
inc
xor
ret
out
je
mov
outs
xor
shr
jne
jge
into
cli
add
jmp
inc
sbb
jo
inc
adc
out
data16
sahf
add
mov
into
cmps
pop
cs
scas
cmp
cmp
pop
sub
and
loop
stos
cmp
push
mov
mov
in
sbb
xchg
pop
cmp
mov
cld
mov
pop
call
popf
adc
pop
add
loope
cmp
add
sub
scas
dec
xlat
in
sub
cwde
push
not
aad
cwde
je
stc
jne
push
mov
retf
adc
hlt
xor
mov
xchg
pop
neg
hlt
mov
pop
pop
ret
dec
cwde
enter
daa
outs
int3
cmp
add
scas
lsl
adc
adc
loopne
add
not
push
and
sti
pop
js
xchg
or
jecxz
mov
test
mov
sbb
sbb
call
jg
sti
and
mov
inc
dec
repnz
int
dec
or
push
push
push
sbb
cmp
push
into
(bad)
cmp
cwde
sahf
std
sub
(bad)
cmps
mov
add
retf
sub
pop
shl
out
push
jb
repnz
out
mov
push
lods
add
push
xchg
into
cmp
ds
in
outs
pop
jne
(bad)
push
sbb
mov
addr16
cld
cmp
jge
out
push
cmc
dec
lds
xlat
mov
push
cmp
lahf
mov
in
cs
hlt
fwait
scas
add
jb
pop
popf
shl
imul
(bad)
aas
(bad)
rol
clc
mov
js
push
jmp
mov
cmp
call
jmp
mov
nop
enter
mov
adc
dec
fist
into
jo
xor
sub
fisttp
fst
iret
mov
not
iret
mul
pop
mov
fild
retf
pushf
lods
jp
push
into
fist
xchg
jmp
ret
and
sar
dec
pop
jecxz
xchg
xor
cdq
cmp
stos
mov
loopne
mov
add
fwait
pushf
mov
mov
out
repz
loop
movs
mov
movs
jecxz
test
std
(bad)
xchg
add
dec
(bad)
mov
jns
mov
les
sbb
inc
and
repz
adc
shl
in
lods
mov
gs
ds
cwde
mov
mov
mov
jae
in
add
jae
dec
xor
loop
sub
push
or
fadd
mov
jge
retf
arpl
lods
or
test
(bad)
fwait
pop
push
pop
bound
(bad)
inc
and
outs
mov
add
repnz
dec
retf
inc
call
cli
cmp
mov
xor
or
adc
mov
lds
mov
xor
aam
out
pop
mov
test
test
out
add
mov
aad
inc
out
mov
cmp
mov
mov
std
(bad)
pop
test
jo
or
cdq
and
sbb
lea
fstp
pusha
enter
scas
retf
in
movs
xor
int
mov
out
pushw
scas
sbb
ret
push
mov
(bad)
mov
push
int
pop
js
ret
(bad)
in
pcmpeqw
nop
jecxz
out
sahf
and
out
rol
inc
dec
mov
dec
mov
jp
mov
out
add
dec
or
mov
jmp
and
mov
test
shr
sub
cli
fwait
push
adc
frstor
cmp
xchg
fdiv
es
adc
ja
push
xchg
jl
test
ins
in
fwait
movs
jb
fstp
sete
mov
lods
ficom
mov
cmp
daa
ss
cmp
pop
add
out
push
pop
xor
bound
scas
dec
scas
pop
stos
stc
stos
(bad)
gs
lods
jb
aad
pop
mov
lock
xor
into
int3
ja
mov
jmp
ins
aad
out
cmp
jnp
push
call
lock
gs
pop
jmp
mov
(bad)
xchg
jge
inc
idiv
cmc
jae
pop
xor
sub
mov
dec
xor
add
mov
and
mov
adc
add
outs
mov
dec
(bad)
and
addr16
fidiv
pop
cmp
cwde
rcl
or
retf
adc
add
mov
icebp
or
xor
pop
inc
out
call
enter
test
(bad)
mov
nop
sbb
or
out
shr
imul
mov
outs
or
jbe
or
sub
pop
push
in
mov
mov
rcl
sahf
adc
lock
or
in
lahf
push
jmp
xchg
in
dec
mov
or
sahf
into
in
add
call
push
mov
retf
retf
in
dec
dec
pop
ror
ja
adc
mov
push
das
mov
mov
enter
scas
cld
std
fidiv
inc
push
fcmove
sbb
fisttp
icebp
jle
pop
int
enter
pop
movs
cdq
xchg
fdivr
aam
xchg
and
dec
or
add
out
imul
sti
fsubp
sub
push
enter
push
adc
cmp
into
jno
and
loope
or
xchg
and
shl
xchg
outs
jnp
add
sbb
sub
mov
das
cmp
xor
ins
test
sti
sahf
shr
push
push
adc
call
inc
out
sahf
out
cld
mov
adc
xor
lods
mov
adc
jnp
push
aaa
inc
sub
adc
inc
in
loope
dec
call
xchg
imul
jmp
je
and
gs
cmp
mov
jmp
adc
mov
dec
xor
scas
es
out
add
pop
sbb
das
xor
cmp
dec
sar
add
imul
sbb
(bad)
fstp
xor
xchg
out
and
in
pop
call
mov
sub
pop
cmps
dec
movs
loopne
or
or
shl
(bad)
mov
pop
mov
and
inc
push
add
clc
out
pusha
add
stc
aas
popf
(bad)
int3
fadd
mov
dec
or
mov
jg
jb
cmp
xchg
mov
scas
stc
loop
mov
jmp
pop
ins
mov
movs
imul
ins
pop
mov
dec
add
in
jp
gs
xor
pop
fcom
dec
sub
iret
in
inc
mov
and
jecxz
clc
sbb
xor
mov
sahf
mov
push
test
sbb
cmc
mov
jmp
jns
mov
dec
fstp
jge
cdq
add
jecxz
pop
fst
pop
or
movs
and
fwait
adc
shl
xchg
fmul
add
mov
int3
sbb
nop
movs
movs
push
pop
push
stos
mov
int3
and
aam
pusha
repnz
aaa
cmp
jge
test
loope
sub
retf
sub
(bad)
pop
sbb
mov
aaa
mov
xor
mov
loop
cmp
mov
data16
pop
inc
jl
xchg
(bad)
cwde
add
or
adc
(bad)
push
jns
ss
push
sub
lods
scas
inc
mov
outs
ds
(bad)
push
iret
mov
ret
popf
push
cmp
pop
leave
adc
lods
xor
add
cmc
pop
inc
xchg
and
pop
cmp
sbb
bound
rcr
sub
out
sbb
pop
addr16
stos
jge
add
cmp
sub
retf
pop
mov
xor
adc
out
leave
movs
bound
jle
mov
leave
mov
adc
cmp
inc
mov
gs
mov
xlat
jl
mov
mov
sbb
add
mov
dec
(bad)
adc
aaa
leave
mov
dec
pushf
mov
into
stos
adc
fwait
lods
cmp
test
mov
int
pop
jmp
fild
addr16
jge
aad
repz
jno
mov
int
or
jle
jbe
sub
push
dec
xchg
jg
cmp
inc
sar
test
sbb
lds
(bad)
pop
dec
sub
dec
jbe
(bad)
lea
push
sbb
inc
cmps
dec
cmps
cmp
pop
inc
repz
mov
dec
retf
xchg
in
fistp
iret
add
mov
out
mov
sbb
sbb
and
ss
fwait
push
sbb
jle
mov
mov
and
push
pop
ins
sbb
xchg
inc
sub
pushf
iret
pop
or
push
mov
push
adc
and
jne
sahf
out
add
(bad)
in
gs
xor
sbb
neg
sub
fisub
retf
adc
add
aaa
pop
sub
lea
cmp
xchg
sbb
or
cmp
xchg
jge
and
mov
mov
xor
ins
jle
adc
mov
sbb
push
xchg
or
loop
repnz
out
inc
cld
sbb
mov
dec
enter
pop
push
sbb
pop
mov
enter
jmp
xchg
lock
loope
sbb
mov
inc
fimul
retf
ss
mov
dec
fstp
mov
xor
and
pop
pop
jp
stos
jmp
xchg
xor
and
icebp
(bad)
std
inc
push
cmps
popf
ffreep
mov
icebp
rol
cwde
jne
cmp
pop
ror
and
mov
rcl
daa
cs
data16
out
jo
loope
jl
daa
mov
arpl
lock
(bad)
int3
push
mov
bound
inc
cmp
shl
mov
or
dec
mov
popf
sub
neg
add
push
retf
aam
sub
das
sbb
repz
mov
retf
pop
sahf
mov
and
retf
xchg
push
xor
popf
test
repz
cli
out
arpl
cmp
cmp
pop
pop
xor
jb
pushf
js
js
loop
adc
pop
inc
in
adc
xchg
scas
sbb
push
sub
popa
cmp
dec
cli
sbb
and
std
test
rcr
clc
push
push
imul
jg
sub
mov
and
jl
movs
push
jb
pop
adc
not
jle
ins
mov
popf
dec
and
fbld
dec
loopne
add
cmp
(bad)
mov
add
pop
adc
leave
int
ret
std
leave
push
repz
sbb
(bad)
ret
stos
in
rcl
jg
adc
xor
stos
jecxz
mov
ins
ret
push
add
lds
cmps
test
in
scas
mov
jg
cmp
test
nop
stc
adc
xchg
mov
mov
retf
ret
(bad)
test
in
(bad)
ins
test
int3
retf
and
(bad)
das
jmp
repnz
dec
push
adc
add
mov
loopne
cmp
add
stos
adc
sbb
out
mov
sbb
inc
pusha
sbb
adc
test
stc
sti
test
or
ret
cdq
clc
icebp
jl
xlat
add
mov
cmp
xchg
(bad)
stc
leave
cmps
jmp
popf
leave
jge
add
stc
retf
xor
shl
fs
jnp
mov
and
mov
aaa
lock
push
jae
push
in
push
mov
lds
outs
mov
jnp
sbb
(bad)
mov
dec
mov
aad
xor
mov
or
mov
fwait
lods
sbb
inc
pop
jecxz
mov
pop
mov
aam
fcomp
push
test
sub
test
jge
push
mov
sti
call
inc
scas
je
outs
and
outs
jns
repnz
bound
xchg
outs
jae
fdivr
dec
in
fnstsw
pop
jmp
cmc
aas
lea
jge
nop
mov
ret
jmp
mov
loopne
in
pop
imul
or
sbb
lds
repnz
addr16
cld
or
in
xchg
mov
push
ins
cmovb
or
push
pop
xchg
clc
or
adc
push
call
(bad)
loopne
int
pop
sub
pop
cmp
pop
shr
push
dec
in
fwait
in
sbb
dec
push
jp
fbstp
jl
inc
push
sar
leave
call
cld
out
jb
rcr
cmp
push
ins
adc
inc
mov
pop
inc
pop
push
dec
adc
dec
imul
(bad)
nop
push
call
mov
mov
inc
pop
fimul
lahf
in
xchg
mov
aaa
mov
std
cmp
mov
mov
mov
add
icebp
sub
xor
jmp
and
mov
neg
inc
pop
popa
loopne
pop
cli
jmp
sbb
movs
scas
scas
cmp
mov
ss
fsubr
dec
daa
cmp
stos
call
push
rol
or
cmp
xchg
lock
inc
mov
xor
lds
adc
push
sub
rep
icebp
xor
ss
(bad)
push
stos
jns
adc
aam
call
call
out
daa
add
xor
fldenv
jle
push
call
dec
sbb
and
sub
mov
xlat
test
xchg
push
out
or
inc
not
ins
xor
inc
mov
push
xchg
imul
inc
sbb
adc
mov
enter
adc
inc
ror
and
cmp
sub
push
fst
and
jg
iret
dec
add
lods
pop
and
adc
into
cmc
sub
(bad)
inc
pushf
js
fucomp
jmp
sbb
sbb
sub
cmp
dec
mov
pop
jnp
cmps
js
mov
gs
mov
or
or
std
mov
mov
neg
pop
cmps
lock
movs
push
scas
movs
xor
aaa
mov
jbe
paddusb
lock
lea
nop
sti
stos
push
bound
pop
(bad)
pusha
je
push
mov
lahf
mov
sbb
pop
push
cmp
fcos
out
cmps
dec
pop
stos
push
mov
leave
dec
in
pop
adc
push
and
(bad)
jnp
rcl
(bad)
jnp
ret
or
cwde
pop
inc
push
test
fisttp
shl
mov
mov
and
xchg
jbe
popf
clc
leave
cmp
repz
xchg
ds
mov
dec
inc
xor
xor
mov
loopne
xchg
and
pop
push
adc
rcr
push
push
cmp
ss
mov
adc
mov
dec
ret
pop
shr
imul
popa
xor
and
adc
retf
div
or
xchg
jg
pushf
mov
xchg
inc
mov
inc
movs
daa
jmp
cmp
(bad)
retf
fisttp
sbb
fisubr
or
arpl
mov
das
sbb
add
pop
mov
push
sbb
out
call
xor
xchg
add
mov
ret
sbb
shl
ins
mov
inc
cmp
imul
mul
enter
and
push
arpl
movs
mov
adc
ret
fild
stc
adc
cmp
sub
inc
pop
add
into
dec
push
stc
mov
mov
push
dec
cmp
(bad)
ret
inc
ds
sbb
iret
sar
adc
retf
lahf
es
into
mov
cmps
jb
dec
mul
push
add
sub
sti
aaa
call
fwait
aas
jb
xchg
add
dec
adc
loopne
(bad)
fisttp
popf
and
pop
lock
loopne
or
dec
push
pop
repz
loope
jmp
add
push
add
mov
cmp
dec
add
add
cmp
add
lea
mov
sbb
inc
xchg
shl
fisttp
jmp
ror
stos
or
in
inc
ja
sub
retf
aam
lods
addr16
add
dec
mov
cmp
xchg
scas
push
rol
pop
scas
jge
dec
xchg
aaa
ds
and
xchg
jne
cli
add
xor
cmc
pop
push
and
inc
and
and
(bad)
mov
jne
cmp
mov
inc
test
retf
sti
push
cmp
pop
fst
jnp
les
ficomp
je
and
(bad)
sbb
and
push
xor
xor
ja
dec
mov
mov
sub
push
and
gs
push
and
sub
ins
rcl
adc
adc
add
nop
dec
jle
xchg
xchg
fist
push
push
dec
xor
retf
push
jl
sbb
mov
mov
mov
sbb
fs
out
inc
shr
sub
ja
adc
mov
and
cmp
aas
pop
sbb
int
repnz
and
sub
test
jne
jb
enter
inc
popf
adc
jge
pusha
push
xchg
sub
movs
mov
bound
adc
repz
xor
ret
imul
mov
adc
mov
inc
(bad)
dec
bound
dec
rcr
cmc
enter
dec
mov
gs
add
(bad)
dec
dec
mov
pop
inc
imul
(bad)
add
push
in
dec
cs
dec
xor
pop
shl
loopne
pop
and
add
hlt
bound
dec
ficom
xchg
sub
test
addr16
arpl
jle
push
pop
cmp
or
shl
mov
jne
out
push
neg
dec
xchg
repnz
icebp
arpl
mov
push
lds
jmp
scas
add
inc
cmp
lea
and
cmp
jp
ins
daa
ss
loopne
xor
pop
and
mov
scas
lods
sbb
push
mov
mov
int
mov
aad
add
test
mov
icebp
mov
movs
je
ret
cmp
push
xor
xchg
sbb
ins
aad
aaa
adc
dec
add
cmp
rol
enter
maskmovq
div
rcl
push
xor
outs
or
shl
imul
js
inc
mov
(bad)
pop
je
sahf
cmp
in
(bad)
lea
cmp
pusha
adc
lahf
call
outs
adc
ins
pop
mov
cld
iret
popa
stos
inc
call
lods
call
nop
xor
push
jle
cli
pusha
inc
pop
aaa
inc
xchg
cmp
sub
push
fist
movzx
jne
cdq
sub
or
cmps
stos
out
bound
rcl
xor
loope
shl
cmps
jae
neg
lods
sub
cmp
cdq
test
push
or
jecxz
mov
neg
(bad)
adc
xor
sahf
xor
jns
jl
leave
cdq
jle
sbb
in
cmp
outs
ja
fwait
cld
dec
shl
mov
call
icebp
mov
sub
jl
cmp
push
mov
and
xchg
repz
fisubr
in
lea
das
fucom
pop
and
cdq
cmp
pop
ss
cmp
ret
push
lock
pop
dec
(bad)
mov
pop
mov
loopne
call
adc
sti
outs
fadd
out
test
sbb
(bad)
mov
and
cmps
add
repnz
fiadd
sbb
push
adc
mov
test
pop
pop
in
dec
push
nop
(bad)
fbstp
dec
mov
mov
pusha
test
call
cli
xor
leave
sbb
sub
sub
jp
ss
out
xor
call
fdivp
dec
aam
clc
test
dec
fidivr
jne
fst
mov
xor
push
add
xchg
add
xor
inc
stos
sub
sahf
sbb
aas
outs
call
sahf
mov
daa
lahf
cmp
xchg
inc
pop
retf
mov
pusha
adc
jbe
add
cmc
mov
(bad)
(bad)
mov
retf
(bad)
fdivp
xor
mov
pop
loop
adc
push
inc
div
mov
cmps
loope
jge
xor
div
inc
xchg
call
cs
int
push
nop
lds
loopne
jne
or
adc
sbb
jnp
sbb
mov
scas
fdiv
dec
sbb
enter
test
data16
call
test
call
movs
fidivr
mov
cmp
sti
mov
cmp
cli
mov
enter
mov
cmp
dec
adc
inc
fwait
(bad)
dec
and
xchg
repnz
mov
sub
in
pop
mov
repz
sbb
retf
fst
mov
mov
shr
test
push
add
mov
ror
sub
mov
sub
dec
xor
and
daa
fwait
test
sbb
stos
(bad)
mov
inc
movs
adc
into
sub
push
loope
inc
add
sbb
xor
sbb
icebp
shl
dec
mov
dec
test
scas
mov
lea
imul
rcr
hlt
je
pusha
cmp
push
rol
pop
movs
xchg
test
push
imul
lock
jne
mov
mov
adc
std
xchg
arpl
mov
js
and
imul
jnp
aad
dec
add
mov
pop
mov
fsub
fisub
addr16
jnp
mov
push
mov
retf
cmp
adc
add
scas
cdq
test
xor
je
fdiv
mov
adc
inc
xchg
shr
lea
sub
test
pop
add
adc
sti
and
mov
push
sbb
xchg
jmp
push
xchg
or
sub
out
cwde
cmp
and
inc
adc
nop
fsubr
test
xchg
or
arpl
add
ins
lock
lds
cmc
pusha
fnstcw
and
aaa
daa
ret
or
push
push
inc
stos
lock
je
push
pop
sbb
xchg
test
mov
xor
in
inc
je
shl
dec
lods
add
push
mov
fwait
xor
dec
xchg
(bad)
add
idiv
dec
lods
sub
into
inc
out
fdiv
aas
push
(bad)
sub
sbb
push
das
js
xor
adc
cmp
loopne
std
inc
pop
mov
xchg
leave
ror
dec
pop
fdivr
outs
dec
punpcklbw
or
fidivr
aas
das
lods
adc
rcl
or
mov
mov
adc
jecxz
sub
sub
mov
mov
rcr
les
fcmovnbe
mov
arpl
aas
jmp
js
sbb
xlat
push
pop
enterw
mov
mov
mov
dec
scas
add
das
daa
jne
add
jno
loope
add
mov
push
cld
out
cmp
sub
popa
lods
jbe
xchg
or
xchg
mov
xchg
pop
fistp
leave
xchg
movs
push
push
cmp
fistp
cmp
or
sti
and
push
es
mov
mov
fwait
hlt
pop
mov
fcom
call
iret
sbb
in
xor
cs
(bad)
jmp
pusha
outs
cmp
mov
out
mov
or
ja
adc
les
repnz
cmp
or
fild
or
push
sbb
js
sub
jge
out
mov
push
enter
cmps
aad
es
ds
popf
push
mov
inc
call
push
sub
push
lea
mov
or
icebp
push
inc
cmp
loop
or
jmp
js
fldenv
cmp
sahf
int
or
xchg
xchg
mov
xchg
sar
adc
ds
sbb
push
call
ins
stos
fs
fidiv
aas
rol
inc
arpl
mov
out
xor
jecxz
fdiv
pusha
mov
mul
inc
dec
xor
mov
repnz
(bad)
pop
(bad)
push
and
cmps
into
movs
adc
xchg
cmps
cmp
mov
lahf
sbb
cmp
xchg
inc
stc
stos
daa
ds
sbb
stos
ds
cmp
nop
dec
mov
pop
lds
ja
push
stc
lods
into
hlt
lods
mov
push
out
sub
data16
rcl
and
and
sub
ret
or
ins
into
std
cmps
jbe
sbb
lea
xchg
(bad)
adc
nop
mov
inc
retf
movs
ds
cmp
pop
push
movs
mov
xchg
add
cmps
pusha
ds
shl
mov
sbb
cmp
push
sub
push
ds
push
lahf
mov
xchg
(bad)
pop
jle
inc
movs
hlt
xor
jg
enter
inc
mov
sar
or
mov
and
mov
in
mov
pop
inc
or
xor
in
fadd
adc
push
les
imul
pop
popa
enter
(bad)
dec
es
int
mov
cli
pop
sub
fimul
jae
shl
out
shl
lock
mov
in
(bad)
push
xchg
or
dec
ret
sbb
push
dec
jae
int
in
stc
xchg
gs
fdiv
jnp
jmp
div
sub
pop
cdq
call
popf
pop
adc
pop
add
mov
and
popa
outs
xchg
out
stc
pop
cmps
int3
mov
repnz
adc
adc
inc
sbb
mov
dec
push
out
sbb
pop
sub
xchg
dec
(bad)
mov
inc
add
fst
lds
jno
inc
lods
fcom
push
fstp
push
fs
loope
nop
ds
leave
scas
fld
inc
push
gs
push
rcr
in
test
out
(bad)
push
repz
or
mov
push
push
call
dec
mov
fdiv
pop
mov
loope
cmp
jnp
int3
mov
xor
aas
jecxz
jnp
out
fcom
mov
mov
xchg
idiv
pop
and
aam
ins
add
inc
call
mov
adc
jb
mov
mov
pop
jns
ja
push
mov
dec
pop
mov
pop
fmul
inc
and
(bad)
or
dec
mov
pop
in
mov
mov
or
jmp
dec
sbb
int3
xchg
or
movs
ja
test
pusha
mov
mov
rol
sti
jnp
xor
jne
jmp
idiv
in
es
sahf
dec
test
or
(bad)
sub
push
dec
cmp
dec
call
ficomp
mov
mov
cmc
pop
shr
add
sbb
xor
adc
test
and
and
or
or
cmp
les
lods
and
pop
ds
mov
into
je
aam
popf
jno
jg
cmps
add
xchg
jle
xchg
or
ins
lea
mov
fcmovnu
jl
dec
cmp
push
mov
push
inc
vdivsd
inc
ret
pop
jmp
jmp
mov
(bad)
ins
out
test
dec
in
mov
jle
pop
mov
pusha
enter
or
movs
fnstcw
fs
xor
push
xor
aaa
sar
sub
adc
adc
dec
sub
jns
mov
enter
dec
xchg
fnstcw
push
mov
mov
push
retf
cmp
hlt
cmp
(bad)
push
enter
cwde
mov
jnp
jmp
and
enter
js
jnp
cmps
cmp
sbb
shl
inc
dec
xchg
and
imul
xlat
sar
mov
iret
jg
and
cmp
mov
adc
sbb
sub
mov
inc
sub
cmp
xor
lahf
xchg
loopne
pop
xor
sub
push
xor
sbb
cmc
or
inc
jmp
mov
lds
dec
cmp
pop
xchg
xor
sbb
test
or
jg
fst
pop
mov
add
dec
cmp
fisubr
mov
mov
test
jae
out
loope
pop
ds
add
cdq
mov
sbb
xchg
mov
js
push
pop
dec
test
xchg
push
daa
and
fwait
pop
inc
mov
hlt
dec
and
pop
mov
out
movs
rcl
imul
add
movs
mov
leave
daa
loope
shl
shl
pop
inc
movs
and
jg
mov
cwde
and
(bad)
shl
pop
inc
(bad)
dec
xchg
jecxz
pop
and
fadd
arpl
xor
outs
clc
outs
jmp
pop
inc
jmp
sub
pusha
stos
iret
ror
mov
mov
mov
sti
shl
mov
push
mov
in
icebp
mov
pop
call
xor
loop
sbb
std
into
cmc
pusha
ins
and
(bad)
jmp
(bad)
call
pop
neg
or
inc
push
ficom
das
adc
call
xchg
xor
push
clc
push
iret
sub
(bad)
push
jno
sub
or
rcr
pop
xchg
push
xor
xor
je
(bad)
xor
mov
pop
push
mov
sbb
inc
(bad)
mov
inc
imul
fstp
stos
xchg
or
retf
pop
stos
add
shr
in
lahf
xchg
jnp
mov
mov
shl
xor
inc
enter
jne
iret
test
and
movs
aad
lea
xchg
xor
shl
retf
loop
jo
cmp
fwait
aaa
mov
and
xor
xchg
adc
cmps
call
sbb
mov
lods
cmp
jecxz
cmp
fucomp
add
jmp
rcr
not
pop
push
dec
dec
jp
call
ja
mov
or
pop
lds
leave
cs
clc
into
sbb
std
ins
xor
jne
popa
mov
sub
(bad)
daa
aam
xchg
xchg
sbb
mov
pcmpgtw
dec
sub
jo
imul
cwde
hlt
jp
push
scas
shl
adc
adc
pushf
push
pushf
and
(bad)
(bad)
and
adc
mov
mov
or
bound
dec
jne
and
sahf
popa
xlat
sub
into
pop
push
jbe
adc
bound
fidiv
cld
sbb
cmp
xchg
cmp
test
mov
mov
ror
xchg
jg
call
adc
addr16
sbb
clc
loopne
test
jo
ret
ror
push
adc
dec
stos
fs
out
xchg
xor
inc
sub
xor
pusha
test
ret
jne
cmp
pop
cmp
add
daa
inc
mov
adc
leave
fstp
dec
mov
int3
push
pop
xor
int
(bad)
mov
push
iret
xor
pop
ja
mov
push
scas
cld
cs
out
xchg
inc
mov
xchg
fptan
sbb
movs
push
cwde
imul
imul
xchg
(bad)
std
in
add
rol
je
pop
aad
jge
cmp
jg
jg
cmp
inc
cwde
mov
or
jp
lahf
in
mov
dec
jg
adc
jne
xchg
mov
jnp
xchg
mov
fldcw
push
loop
cwde
pop
xchg
(bad)
js
xor
rol
adc
xchg
and
mov
adc
dec
or
inc
jge
rol
jp
or
ficomp
je
push
es
dec
fstp
dec
push
adc
push
movs
or
pop
and
or
pushf
sbb
dec
fcom
lock
scas
pop
add
sub
std
test
mov
lds
cmp
pop
ins
sahf
and
inc
pop
outs
int3
pop
ret
xor
add
mov
pop
mov
mov
cmp
adc
jno
or
or
jne
push
iret
jp
lods
and
or
adc
xor
adc
stc
jns
rol
pop
stos
pop
jo
add
imul
int
mov
ins
ins
or
std
repnz
mov
and
xchg
aas
dec
(bad)
fldcw
lea
call
aad
mov
push
adc
test
data16
jle
or
lar
cmp
jmp
inc
inc
(bad)
fsubrp
sar
int3
push
pop
imul
gs
and
push
sub
mov
int3
mov
xor
stos
aas
mov
sbb
arpl
add
lods
retf
sub
(bad)
jnp
enter
arpl
inc
cmp
popa
test
ds
fidiv
mov
std
scas
ins
pop
mov
push
lock
test
lds
imul
cld
push
int
push
add
clc
repnz
adc
jg
lsl
pop
xchg
or
retf
stos
pop
pop
shl
jae
jge
ret
rep
or
hlt
push
jno
and
fwait
out
cmp
(bad)
pop
or
pop
cmp
xchg
sub
fidivr
inc
mov
out
movhps
sahf
ret
outs
cmc
mov
daa
sub
and
xor
mov
cs
or
test
pop
jmp
sbb
xor
fst
imul
inc
pop
push
aad
xor
jno
push
ins
push
lods
in
mov
cmp
test
sub
cmps
and
out
cmp
das
dec
stc
fs
lods
icebp
xchg
loop
aam
mov
mov
mov
ins
(bad)
dec
sbb
aam
pop
lods
dec
push
xchg
inc
(bad)
rcr
xchg
sbb
mov
popa
out
out
mov
or
shl
mov
adc
loope
pop
jmp
rol
imul
addr16
pop
clc
scas
xchg
add
add
aad
xlat
pop
popf
(bad)
scas
aam
or
fwait
xchg
xor
and
out
jl
or
lods
adc
xor
mov
repnz
push
jno
test
mov
lock
jg
popf
or
sbb
inc
jmp
and
scas
xchg
mov
enter
or
in
pop
add
in
mov
mov
sub
sub
mov
jmp
shl
jmp
leave
xor
and
lods
push
or
mov
call
fcomp
push
rcl
inc
jp
push
neg
ret
xchg
pop
mov
lock
mov
jno
outs
aaa
mov
mov
xchg
cmp
aas
idiv
rol
nop
cli
mov
in
cmp
imul
sub
bound
repz
int
push
lods
bound
mov
xor
push
xchg
and
and
sbb
ss
or
xor
and
pop
shl
inc
sbb
pushf
ins
mov
neg
xchg
out
ret
push
sub
add
or
and
ja
pusha
cs
add
stc
arpl
mov
cmp
retf
lods
nop
fisttp
mov
mov
test
jb
lea
adc
in
pop
mov
add
aad
std
out
outs
push
scas
add
and
jp
sbb
popa
add
mov
add
lea
js
mov
arpl
adc
mov
adc
push
jecxz
cmc
xor
stos
cmc
lock
jae
iret
mov
retf
aas
inc
test
adc
cmp
ror
lods
push
mov
mov
retf
xchg
or
(bad)
mov
xor
imul
call
mov
cdq
mov
add
mov
jne
jmp
test
and
xchg
lahf
cmp
js
sub
xchg
in
stc
sub
sti
inc
cmp
dec
sub
or
pushf
xchg
dec
into
pop
push
mov
popf
(bad)
sub
mov
into
mov
loopne
or
mov
pop
ret
aas
xchg
and
dec
jns
adc
shr
popa
mov
pop
sub
xchg
push
sbb
nop
push
aas
or
movs
lds
fadd
sbb
xchg
(bad)
mov
xchg
sub
sub
stc
(bad)
lea
inc
cmps
pop
and
(bad)
scas
es
lea
xchg
push
loop
sbb
movs
cmc
lods
outs
cld
je
cmp
pop
mov
mov
fisttp
enter
(bad)
pop
bound
div
sbb
push
sbb
xchg
lahf
xor
jmp
inc
div
mov
xchg
retf
push
in
fstp
fldcw
je
sub
xchg
popf
and
int3
pop
out
mov
jg
dec
or
vdivsd
jb
out
push
adc
jg
js
(bad)
aas
shl
out
cwde
dec
cmp
loopne
or
mov
out
sub
ds
or
lock
and
into
sbb
and
and
imul
popf
push
add
inc
inc
sbb
call
mov
sbb
fsub
sbb
dec
shl
dec
sub
data16
or
dec
add
je
dec
or
call
cli
add
adc
fs
dec
ds
cmps
loop
pop
jp
inc
call
pusha
fistp
push
sub
or
sub
push
(bad)
push
mov
xor
data16
mov
and
xor
je
and
cmp
out
push
cdq
stos
scas
pop
shl
cmc
cmps
sub
mov
mov
push
push
jle
(bad)
mov
adc
adc
test
xor
mov
cmp
add
jp
aaa
sub
icebp
lahf
int3
inc
popa
daa
imul
dec
inc
fst
ror
add
sub
idiv
call
data16
add
jecxz
jle
loope
mov
movs
outs
inc
sbb
loopne
je
cmc
or
in
pop
xchg
inc
nop
dec
popf
ds
in
sbb
mov
pop
loope
std
sbb
mov
cmp
xor
pop
sbb
sbb
xor
add
add
jp
addr16
loopne
pushf
out
bswap
or
lds
jbe
push
add
jg
mov
mov
lahf
lods
jnp
addr16
aaa
repnz
dec
pcmpgtd
dec
hlt
(bad)
jmp
rcr
jmp
push
sbb
pop
cmc
mov
cs
cmps
and
adc
cmp
push
jbe
xchg
cwde
fnstsw
sub
xchg
ret
and
out
(bad)
xor
push
cli
hlt
mov
ror
cmp
je
xchg
adc
sub
pop
sub
mov
push
shl
jg
add
and
mov
leave
or
push
call
repz
in
mov
xchg
dec
out
mov
dec
sbb
mov
imul
mov
ficomp
inc
mov
lahf
mov
(bad)
cmps
push
push
jb
pop
(bad)
mov
xor
cmp
xor
aaa
mov
retf
sbb
and
pop
mov
pop
pop
mov
inc
ret
push
inc
xchg
out
leave
jle
ds
mov
xchg
(bad)
cli
cdq
movs
push
clc
fnclex
cmp
ss
jne
fs
and
jmp
jmp
loope
call
sbb
adc
push
mov
cwde
xor
std
sti
xchg
mov
stos
jmp
fldenv
and
repz
sub
push
xor
inc
fucomip
por
(bad)
pop
or
xchg
cld
(bad)
cli
jge
or
pop
inc
out
jp
retf
ror
xor
or
fcmove
cs
cwde
aaa
sub
cmps
lahf
js
fnstcw
loop
add
scas
lea
jae
rcl
fist
adc
add
popf
arpl
sbb
pop
xor
stos
js
jle
shl
out
pusha
ficom
ins
sahf
cmp
jb
push
ficomp
jnp
into
sub
pop
std
or
add
cmp
fst
pop
sbb
(bad)
xor
mov
dec
adc
sbb
jmp
mov
out
daa
jnp
js
nop
pop
cmp
idiv
mov
in
sub
cwde
call
adc
or
adc
scas
(bad)
mov
or
fmul
bound
and
lock
pop
(bad)
pop
stos
clc
jle
mov
mov
sub
pop
mov
jg
(bad)
stc
pushfw
inc
and
or
cli
add
xor
xor
imul
clc
dec
xchg
cmp
jnp
push
stos
hlt
int3
pop
repz
cmp
push
mov
sbb
iret
es
sbb
pop
mov
fild
push
rol
pop
sbb
cmps
mov
jae
shl
push
enter
push
sar
push
dec
dec
enter
cmp
add
add
inc
addr16
xor
cmp
imul
je
movs
push
cwde
push
sbb
xor
add
mov
in
in
pop
lock
mov
xor
loope
dec
call
lds
test
mov
pop
int3
jns
rol
sub
in
mov
jge
mov
push
add
aam
adc
fistp
or
iret
push
inc
or
aas
xor
inc
sar
out
fdivrp
call
jle
inc
cmc
mov
mov
jb
sbb
out
shl
aad
add
aas
pushf
icebp
or
movs
iret
fdiv
jne
mov
add
and
dec
dec
xchg
(bad)
icebp
test
mov
push
gs
scas
cld
jp
jns
dec
push
aas
or
inc
mov
jl
sub
add
data16
test
arpl
or
inc
mov
mov
xchg
xchg
dec
xchg
mov
movs
sub
loopne
pop
js
call
sar
add
jl
test
rol
add
je
xor
mov
scas
nop
xchg
mov
jge
ins
rol
fwait
xor
mov
cmp
or
pop
add
int
jl
js
loop
aam
nop
dec
xor
out
je
mov
mov
mov
mov
cld
and
cmps
(bad)
aaa
push
ret
inc
push
mov
cmp
ss
stos
pop
gs
clc
inc
into
movs
sub
cld
xor
push
mov
fist
sub
mov
rcr
push
in
or
shld
test
cmps
sahf
out
xchg
xchg
cmc
cmp
push
int
and
xor
push
(bad)
retf
in
push
push
test
xchg
std
sub
int
cmp
inc
push
sub
lahf
dec
data16
and
ret
xchg
movs
hlt
es
xchg
sub
rcl
daa
data16
jl
outs
adc
xor
and
dec
daa
sahf
data16
ret
and
jp
arpl
or
push
xor
sub
cwde
inc
sbb
rcr
dec
inc
enter
arpl
lods
inc
in
sub
gs
cmovne
cmc
jns
rcr
into
mov
mov
pop
mov
mov
push
dec
xchg
adc
xchg
imul
inc
movs
fcomp
(bad)
loope
push
and
pop
fdivr
ss
push
lahf
sti
mov
repnz
and
adc
pop
jl
lahf
add
iret
jp
pop
jge
cli
inc
dec
mov
dec
dec
in
sub
add
or
sbb
ds
mov
test
xchg
test
mov
xor
sbb
imul
inc
pop
bswap
push
mov
lods
cmp
pop
mov
dec
das
dec
rol
jo
or
retf
hlt
lock
adc
mov
dec
jl
add
mov
push
std
dec
dec
cmovb
test
cmps
inc
in
xor
(bad)
in
or
es
in
pop
push
mov
in
mov
push
xchg
mov
pop
push
jne
out
out
in
rcr
ja
stc
jns
aad
movs
dec
push
(bad)
or
cmp
fldenv
adc
mov
lahf
jbe
fsub
pop
mov
xchg
inc
es
mov
add
retf
stos
adc
arpl
fwait
aaa
jno
sub
and
cs
popa
cmp
jo
cdq
adc
mov
push
mov
mov
fs
pop
(bad)
pop
push
(bad)
test
pop
retf
or
fcom
adc
mov
push
ja
out
shl
out
pop
ret
pop
cmp
mov
dec
fdivr
dec
cwde
js
push
aas
adc
push
inc
xor
jo
xlat
dec
out
outs
psllq
cmp
aaa
push
jp
jb
sub
cmps
push
push
cmp
mov
push
mov
lods
xchg
cmp
idiv
call
ret
jg
vxorpd
jecxz
add
cmp
aad
ins
jno
test
sti
push
data16
mov
frstor
aas
pop
inc
vmovntps
push
div
cmp
(bad)
mov
push
mov
cmps
or
data16
(bad)
or
and
bnd
sar
ror
xor
inc
mov
pop
pop
cmp
daa
mov
inc
cmp
popa
out
xchg
daa
jae
loope
enter
jmp
cmps
shr
in
loop
mov
push
pop
pop
iret
adc
push
cmp
neg
notrack
or
cmp
mov
cld
hlt
fisub
ret
mov
iret
leave
xor
inc
retf
dec
push
retf
fsubr
cmp
or
pop
call
xchg
stos
jne
push
rcl
lods
and
inc
jbe
xchg
dec
and
mov
test
inc
out
or
push
das
jne
(bad)
cld
jae
xchg
push
cmc
rol
add
sbb
cmp
and
data16
jne
adc
jno
dec
in
test
push
outs
cld
aas
sbb
loop
dec
clc
sbb
sar
inc
lea
mov
xchg
retf
or
mov
or
fdivr
dec
out
xlat
fwait
or
mov
test
jle
and
das
sbb
daa
dec
call
mov
push
sub
iret
popf
in
xchg
out
adc
jmp
push
jmp
jmp
mov
pop
call
sub
movs
movs
ds
pop
mov
nop
push
cmp
out
pop
aam
mov
mov
jl
jae
push
cld
cmps
inc
fsub
mov
cli
jmp
idiv
xchg
jne
cmp
clc
fsubp
pop
xchg
(bad)
jne
adc
mov
xor
mov
retf
mov
and
mov
mov
mov
arpl
mov
mov
xchg
sbb
jmp
repnz
retf
and
mov
bound
xor
xchg
fcmovu
jp
sub
push
nop
popa
jp
and
hlt
cmp
sbb
jns
sub
add
neg
push
ret
cs
inc
adc
iret
mov
add
std
into
push
out
push
xchg
or
adc
in
jecxz
dec
xchg
pop
stc
push
or
shr
xchg
mov
mov
mov
and
dec
push
xchg
std
mov
mov
hlt
daa
cli
sbb
outs
inc
fadd
popf
jp
and
test
leave
int3
cli
jns
jl
add
mov
test
lods
push
add
inc
bound
fwait
push
das
xchg
pusha
xor
xchg
push
frstor
dec
mov
inc
sub
ret
add
cmp
aaa
adc
(bad)
sti
cmps
inc
shl
in
xchg
pop
stc
jb
ds
ds
xchg
mov
iret
push
retf
ds
push
add
cmpxchg
and
pop
mov
ror
mov
or
popa
aas
vminps
inc
scas
jnp
adc
lahf
add
ret
jp
push
mov
sbb
ret
jg
ins
dec
push
rcr
or
cmps
and
or
cmp
shl
mov
and
sub
cmps
wbinvd
or
jg
cld
je
imul
cmp
xchg
imul
shl
xlat
adc
jge
dec
pop
add
ror
frstor
test
cmp
shl
mov
pop
outs
dec
or
cmp
cdq
jnp
sub
adc
icebp
stc
loope
in
mov
push
mov
mov
lods
dec
sbb
sahf
and
call
popf
xchg
pop
xchg
cmp
mov
jmp
pop
fidivr
inc
or
mov
sbb
or
push
enter
ds
and
aas
and
sbb
xchg
dec
or
jne
xor
dec
mov
call
mov
add
gs
int3
in
rol
mov
sub
sbb
sub
inc
dec
inc
es
mov
fld
mov
sub
popf
daa
lods
popa
ret
pop
adc
movs
cmp
add
into
enter
mov
lahf
cmp
fmulp
pop
pushf
vmread
mov
mov
xor
push
xchg
xor
mov
ins
gs
xchg
jb
xor
mov
dec
aaa
fimul
jmp
sbb
mov
add
int
lahf
xor
cli
lahf
xor
ror
cmp
ret
xchg
sub
inc
out
leave
loopne
pusha
cmp
arpl
and
inc
xchg
inc
inc
jmp
cmp
data16
and
or
call
shl
(bad)
fisttp
ins
fist
push
stos
test
mov
lea
daa
les
push
push
fs
sub
pop
and
mov
dec
and
in
std
jmp
mov
add
(bad)
jno
cmps
dec
gs
popf
iret
and
mov
sub
xor
xchg
lods
call
mov
test
fdiv
neg
pushf
lds
mov
and
cmps
stc
cmps
jmp
inc
or
daa
test
sar
js
and
in
gs
in
adc
sbb
add
fdivr
lahf
ficom
xor
add
jno
rol
xchg
xor
jg
adc
mov
inc
mov
mov
in
and
xchg
jp
lahf
cmp
mov
loope
mul
imul
xor
push
xchg
dec
xor
stos
jo
xor
lock
cmp
add
inc
cmp
out
aaa
arpl
out
das
or
xchg
aad
push
mov
and
dec
mov
push
daa
test
push
rcl
sbb
inc
in
cmp
jp
or
es
add
push
cmp
jo
and
and
in
iret
std
(bad)
push
xchg
stos
sbb
lods
cmc
jne
jo
pop
addr16
and
das
les
adc
push
pop
mov
arpl
pop
push
mov
test
push
stc
(bad)
call
repz
movs
inc
push
pop
mov
std
pushf
popa
adc
mov
mov
inc
fdivr
sbb
add
xor
mov
scas
stos
mov
jae
fwait
popa
in
and
add
retf
mov
mov
cmp
cmp
fnsave
sbb
cmp
adc
in
fwait
mov
cli
lods
popf
mov
rcl
(bad)
das
pop
jge
dec
dec
and
loopne
push
test
and
cld
dec
cdq
test
sub
mov
dec
data16
sti
int3
mov
test
mov
sub
or
cmp
or
hlt
mov
shl
pop
adc
scas
and
push
mov
adc
fs
hlt
arpl
xchg
out
movs
mov
pop
iret
xor
mov
ins
jae
cdq
cdq
pop
sub
sbb
and
icebp
push
popa
or
sar
or
sbb
inc
push
stos
(bad)
mov
adc
pop
imul
or
push
cmp
pop
push
xchg
add
pop
fnstenv
scas
cmp
and
data16
or
xor
and
lods
cmp
rcl
lods
and
sbb
std
cmp
ret
arpl
mov
repz
pop
sbb
bound
pop
pop
(bad)
neg
rcl
movs
nop
pop
push
push
mov
jmp
jl
sbb
sub
inc
dec
cmps
xor
inc
aad
fs
xor
mov
pusha
and
cmps
dec
xor
sbb
inc
add
jecxz
adc
popf
mov
imul
mov
mov
push
movs
adc
clc
add
pushf
call
push
lahf
movs
repnz
and
mov
inc
xor
jne
xor
or
push
xchg
loopne
fwait
xchg
add
jns
inc
popa
and
xor
mov
lock
movs
mov
fwait
xor
rcr
fsubr
rcr
pop
retf
cwde
xlat
out
sbb
lds
add
in
lds
fwait
rcl
cmp
out
je
xchg
bound
int3
fidivr
ins
bound
dec
xchg
frstor
shr
pop
iret
mov
out
hlt
xchg
hlt
xchg
xor
jbe
push
repz
repnz
push
icebp
dec
inc
daa
lahf
clc
pop
mov
inc
and
push
stos
(bad)
jle
cdq
and
aad
jb
pop
mov
dec
xlat
je
sahf
xchg
(bad)
out
fcom
dec
and
inc
jmp
(bad)
mov
test
out
xchg
ret
cdq
push
dec
outs
sar
in
mov
xchg
mov
pop
mov
icebp
mov
mov
lock
and
rcr
lods
or
retf
jb
pop
dec
hlt
xor
cld
jbe
cld
js
mov
push
int3
mov
int3
int3
or
loope
dec
cld
add
sar
clc
or
or
jo
repnz
ins
fisub
popf
add
sbb
or
cmp
test
sub
ds
loope
pop
cmp
xor
outs
clc
ret
sub
mov
scas
ds
fidiv
dec
mov
addr16
pop
push
(bad)
retf
push
call
jge
ficom
xor
or
or
jbe
aaa
or
xchg
adc
xor
ins
(bad)
mov
inc
call
xchg
les
jns
push
cwde
loope
test
cmp
ret
aad
and
xor
stos
adc
(bad)
push
xchg
sub
aam
cmp
xchg
jecxz
push
or
jecxz
dec
sub
int
cmp
push
dec
jl
jne
dec
mov
sub
or
xchg
adc
and
jae
sbb
inc
adc
sub
adc
(bad)
call
cs
sub
out
push
les
fadd
push
mov
(bad)
movs
nop
jge
adc
push
ror
leave
mov
dec
push
mov
mov
dec
out
sub
lods
nop
push
mov
mov
xchg
mov
push
xor
sbb
jecxz
jle
ins
sub
add
dec
mov
jo
imul
sub
adc
movs
fisubr
jecxz
adc
jmp
fmulp
int3
inc
pusha
pop
push
adc
test
ret
(bad)
and
and
mov
add
jbe
(bad)
rcr
mov
inc
sbb
sbb
push
cli
sub
cmps
pusha
lea
clc
fmul
int
mov
add
daa
mov
sar
cdq
ins
xchg
out
test
inc
adc
adc
dec
fisttp
sbb
mov
inc
push
jecxz
jne
adc
mov
ins
push
jge
jb
jno
pushf
pusha
clc
jmp
fst
scas
xchg
mov
push
repz
jne
inc
adc
cmp
imul
ja
shr
lock
imul
xchg
(bad)
(bad)
ins
or
test
xchg
jp
bound
push
dec
scas
push
xchg
mov
retf
inc
sub
dec
push
lahf
stos
jnp
inc
mov
dec
hlt
mov
pop
dec
fmul
inc
adc
icebp
mov
jae
ss
shl
jecxz
sbb
cmp
pop
(bad)
and
leave
cmps
add
and
repnz
ins
pop
mov
xor
mov
nop
call
pop
nop
and
loope
cmp
ror
ret
mov
mov
and
daa
stos
or
sti
rcr
in
adc
sahf
(bad)
fbld
pop
inc
pushf
in
sbb
sbb
mov
stc
cld
fst
popa
pop
int
push
rcr
adc
fldenv
inc
in
sahf
fcmovnb
pushf
adc
sti
mov
and
aaa
hlt
aad
jbe
hlt
ins
into
push
sub
repnz
xor
clc
rcr
sar
stos
dec
outs
mov
adc
fs
popa
stos
cmps
lock
mov
pop
cmp
ds
mov
ret
leave
push
rol
cmp
sbb
ds
ror
adc
pop
adc
cli
mov
and
fisttp
pop
mov
cmp
sar
cmp
jg
scas
dec
mov
cmps
dec
in
stos
mov
sub
add
in
movs
jmp
sbb
sbb
mov
pushf
data16
xchg
jecxz
sar
inc
adc
idiv
in
(bad)
int
repz
daa
fs
fnstcw
fst
les
jmp
fisubr
pop
scas
mov
mov
pop
out
mov
pop
inc
and
pop
sbb
sub
jae
test
popa
cmp
mov
cld
ret
ret
mov
repz
mov
pop
cld
dec
int
and
sti
xchg
cmps
cmps
mov
loope
xchg
or
retf
loopne
clc
xchg
and
cmp
sbb
mov
ja
xor
cli
cmps
sti
outs
push
xor
pop
ficom
mov
aam
aam
mov
out
sub
jp
test
and
xchg
sbb
add
inc
push
sbb
mov
cmp
sbb
pop
mov
pushf
add
test
test
lahf
movs
mov
dec
inc
aam
jmp
mov
rdmsr
sti
fidiv
sub
mov
jo
pop
nop
cmp
lea
mov
mov
sbb
neg
push
add
pop
push
and
lahf
aaa
repnz
jg
dec
fisubr
enter
sbb
sar
jmp
sbb
lea
push
mov
ret
or
mov
and
in
sub
scas
(bad)
in
nop
cmp
push
adc
xchg
mov
test
lods
jl
movs
aaa
test
cmc
push
fs
and
mov
push
out
mov
jle
lock
mov
sub
mov
jbe
mov
jae
sbb
cmp
aam
adc
mul
sub
scas
and
sub
out
mov
xchg
pop
add
push
or
in
jb
jbe
dec
and
ret
retf
or
pop
sti
inc
cld
dec
popf
mov
(bad)
sbb
pop
mov
xchg
mov
inc
or
and
(bad)
xchg
sbb
shl
mov
mov
xor
pop
xor
mov
push
xchg
retf
fsubrp
neg
into
mov
jae
jns
retf
xchg
dec
jb
cmp
ror
in
leave
mov
and
fstp
dec
rcl
nop
add
fstp
ins
retf
ins
pop
leave
retf
push
mov
sub
xchg
xor
xchg
pop
clc
les
mov
jne
mov
xor
scas
lods
in
ret
inc
in
mov
pop
hlt
jle
dec
pop
xchg
dec
out
icebp
(bad)
test
push
inc
jo
lods
sub
sahf
into
(bad)
mov
mov
and
cmp
call
ins
call
imul
lds
ins
cld
das
xor
jmp
clc
cld
inc
(bad)
into
leave
push
dec
and
fwait
lock
pop
jmp
mov
clc
cwd
jne
pop
test
ds
pop
adc
mov
retf
mov
mov
bound
dec
iret
sahf
add
out
lods
mov
in
push
mov
cli
mov
out
jmp
jecxz
js
sbb
loopne
mov
leave
dec
adc
fwait
std
js
fs
aad
daa
or
repnz
push
cdq
retf
adc
repz
xchg
ret
pop
adc
jg
mov
data16
imul
movs
inc
jo
nop
mov
pop
inc
xor
in
fimul
add
ja
ret
push
mov
test
push
dec
push
mov
shr
or
les
mov
nop
and
pop
(bad)
dec
sahf
loopne
scas
movs
lea
mov
in
test
popa
or
mov
xchg
inc
push
add
and
sahf
fidiv
pop
call
xor
mov
or
cmps
ret
sbb
arpl
mov
adc
inc
jo
(bad)
fist
pop
shr
mov
in
loop
adc
push
daa
(bad)
jmp
test
lods
mov
sbb
lock
fdiv
fcmovne
add
jmp
aas
xor
fdivrp
cmp
in
popf
xchg
push
out
mov
mov
or
retf
fbld
adc
shl
fidivr
sbb
aad
sub
and
shl
clc
and
leave
outs
push
jbe
loop
dec
jb
push
dec
jne
inc
jno
fmul
ret
jmp
rcl
cmp
mov
sbb
scas
cmp
cmc
add
test
in
ins
clc
dec
mov
pop
in
call
sub
into
sub
cmp
xchg
jge
pop
jae
mov
xor
push
and
pushf
scas
rcl
and
nop
lods
dec
outs
mov
mov
ror
push
mov
xor
sub
cmps
sub
push
je
mov
lods
xchg
stos
or
cmp
add
leave
ret
(bad)
jno
repnz
mov
addr16
into
sub
xchg
(bad)
(bad)
neg
adc
test
mov
push
popa
bnd
inc
loopne
(bad)
mov
aaa
(bad)
mov
test
xor
xchg
mov
int
pop
ret
xchg
adc
push
cdq
hlt
shl
into
(bad)
cmp
cmp
jns
imul
mov
add
dec
dec
lods
mov
or
push
fs
mov
push
call
xor
ins
dec
and
adc
js
add
add
fdivr
cmp
popa
push
pop
enter
jnp
xchg
cmovle
fmulp
push
mov
pop
fnstenv
pop
std
sub
inc
pop
xor
mov
fnsave
xor
sahf
lahf
inc
outs
push
ins
jmp
(bad)
jg
push
fstp
dec
movs
dec
sbb
jle
icebp
lods
test
daa
xor
push
xchg
inc
(bad)
or
mov
and
mov
shl
and
push
lds
sub
mov
mov
mov
dec
jmp
stos
(bad)
repz
mov
fdiv
inc
and
adc
cli
add
xchg
ins
inc
retf
mov
dec
mov
ret
in
repnz
(bad)
outs
retf
adc
into
sub
cwde
test
mov
fadd
jno
popa
gs
inc
push
jl
add
leave
xor
adc
mov
fisub
nop
adc
pop
gs
sub
cmp
sti
dec
xor
stc
cmps
xchg
in
sbb
add
xchg
stos
fiadd
or
popa
lods
cmp
repz
mov
cmp
xchg
in
popf
mov
xchg
jge
sbb
xor
mov
jle
xor
pushf
adc
fdiv
mov
fcomp
push
imul
cmp
lods
xor
loopne
jnp
mov
int3
sbb
stc
call
movs
push
mov
pmovmskb
and
fild
xor
mov
into
xor
es
cs
and
mov
inc
ja
ds
sub
ja
cmp
xor
xor
jg
(bad)
adc
into
das
and
sbb
mov
mov
mov
aam
cmc
and
pop
adc
aad
in
jo
sub
jb
mov
cli
not
mov
(bad)
fiadd
pcmpeqd
mov
out
cmp
mov
and
cmp
cs
sub
lods
scas
cmp
retf
mov
(bad)
hlt
sbb
rcl
xor
pop
sbb
inc
mov
mov
jmp
mov
add
dec
jne
push
fld
inc
xchg
into
push
push
push
xchg
cmp
loope
push
inc
cmp
cli
mov
retf
int
pusha
sub
adc
xor
dec
dec
mov
push
das
cmp
pop
ins
fisttp
push
push
ret
pushf
pop
push
js
(bad)
shl
jnp
jp
pop
jmp
sbb
xchg
xchg
imul
ins
dec
repnz
sbb
cmp
aaa
xchg
test
or
scas
lock
scas
adc
pop
pop
pop
in
(bad)
repz
mov
add
xor
shl
xchg
xchg
pop
fsubr
cmps
pop
mov
shl
add
sahf
xor
sub
cld
xchg
icebp
mov
push
retf
xchg
cdq
fs
lahf
out
xor
fwait
push
pcmpgtw
test
pop
xor
xchg
sub
xor
int3
or
lahf
mov
jns
in
mov
pop
jns
mov
xor
xchg
(bad)
mov
sub
jp
ret
jb
repz
stos
jp
push
lock
pop
mov
test
mov
fidivr
xchg
imul
retf
jmp
out
mov
repnz
bound
adc
xchg
and
and
sbb
pushf
out
shl
mov
add
xlat
fwait
ret
neg
xor
dec
sbb
ins
loopne
f2xm1
gs
add
mov
cld
xchg
fdivr
in
dec
pop
sbb
jp
sti
and
(bad)
jno
jo
push
fwait
jnp
ret
jge
add
xor
inc
call
(bad)
and
into
ds
mov
xchg
mov
fiadd
inc
dec
(bad)
inc
mov
mov
sub
pop
mov
pop
rol
fsub
aas
cwde
(bad)
cwde
cmp
outs
lea
bound
je
jno
sbb
frstor
adc
into
outs
test
sub
push
and
push
dec
sahf
retw
(bad)
loop
hlt
pop
psubsw
(bad)
xor
mov
bound
xor
push
jmp
sub
pop
inc
jns
fadd
sbb
mov
jb
mov
xchg
ror
mov
dec
pusha
adc
pop
shl
inc
push
and
fild
or
stos
adc
and
add
int
mov
cld
sbb
icebp
mov
or
stos
jae
add
add
in
cs
sbb
jmp
retf
push
push
stos
icebp
mov
out
mov
jae
xchg
neg
enter
sahf
sti
pop
ror
fs
pop
add
lea
pop
stc
gs
xor
sahf
push
dec
cld
adc
dec
repz
xchg
fs
push
add
out
inc
add
inc
dec
repnz
push
sbb
xlat
xchg
adc
mov
int3
js
xchg
fdivr
jge
fcmovnu
xlat
mov
inc
sar
test
add
xor
ja
add
jmp
outs
jge
mov
inc
mov
sahf
xchg
push
xor
sub
add
dec
in
ficom
retf
cmps
push
pop
add
imul
fwait
scas
mov
hlt
cs
mov
and
jb
aad
aam
xor
mov
lods
pop
mov
call
enter
mov
in
dec
and
jl
mov
aad
sti
sti
mov
dec
or
mov
cmps
ret
push
fdivrp
aam
rcl
adc
push
test
inc
jmp
out
sbb
nop
jns
jno
je
cmp
sbb
out
nop
cmp
fstp
add
(bad)
xchg
mov
(bad)
stos
inc
shr
xchg
movs
dec
mov
sbb
aas
dec
cmp
adc
je
cmp
arpl
aam
xchg
clc
mov
or
push
push
mov
cmp
sbb
push
inc
popa
fsqrt
sahf
je
cs
and
test
out
jp
ins
popa
test
(bad)
retf
jle
pusha
shl
test
push
mov
std
(bad)
call
aam
nop
stc
sub
test
into
(bad)
aas
push
stc
mov
dec
es
movs
pop
inc
stos
jg
push
adc
es
cmp
je
mov
pop
mov
cmp
lahf
popf
ja
imul
add
mov
pop
aaa
dec
js
sub
adc
movs
fild
dec
loope
js
xor
or
and
xor
ror
and
(bad)
sub
faddp
dec
pushf
aam
std
ja
cmc
pushf
inc
leave
aad
adc
push
inc
and
test
lods
mov
sbb
test
dec
fisttp
mov
retf
movs
sbb
mov
ror
sbb
out
push
jmp
cs
daa
in
mov
dec
sbb
jb
leave
pop
lds
out
mov
les
mov
daa
scas
add
test
aad
pop
sub
mov
sar
movs
loopne
test
outs
xor
popf
icebp
pop
arpl
call
dec
and
ffree
(bad)
mov
repnz
arpl
mov
push
sbb
(bad)
div
jbe
adc
cmp
sub
or
test
addr16
clc
(bad)
jg
ss
dec
cmp
icebp
sub
jo
jge
xchg
mov
(bad)
ror
not
test
call
push
std
push
mov
cmc
shl
mov
lahf
jo
cmps
fsub
dec
mov
imul
cdq
mov
sub
in
bnd
std
cmp
jle
hlt
dec
enter
sbb
inc
mov
dec
mov
xor
int3
mov
popa
push
test
mov
or
push
sti
inc
dec
scas
test
push
sbb
inc
rcl
sti
jns
or
sub
mov
ret
adc
sbb
xchg
shr
mov
idiv
inc
cmps
ja
clc
mov
clc
push
dec
mov
and
nop
sbb
push
int
in
je
mov
cli
adc
out
loop
push
jle
jo
nop
lea
jne
push
push
adc
daa
xchg
nop
es
sub
mov
xor
(bad)
mov
mov
ret
sub
sub
adc
in
out
pop
dec
sbb
mov
dec
daa
add
pop
neg
loop
pop
sbb
lahf
or
pop
enter
push
push
mov
(bad)
sub
lds
loopne
mov
push
pop
and
xchg
sub
dec
fmulp
and
rcr
ret
sar
dec
stos
xor
stos
mov
daa
(bad)
jmp
push
adc
in
xchg
loop
mov
or
cwde
inc
retf
ret
and
js
daa
ja
jmp
scas
ror
xor
adc
scas
or
push
fstp
jno
rol
shl
add
ss
xchg
sbb
aam
add
xor
mov
xchg
jp
pop
in
repnz
cmp
fld
mov
jmp
xlat
xor
inc
sti
sub
cmp
mov
pusha
sbb
mov
jo
test
les
mov
mov
out
push
jle
sub
(bad)
pop
pop
or
xchg
mov
fwait
out
sti
outs
jnp
push
fwait
mov
jge
cld
add
cmp
push
pop
and
mov
imul
fcomp
lea
jo
stos
and
cmp
dec
push
cmp
push
xchg
(bad)
jmp
mov
ficom
mov
je
arpl
dec
mov
std
xor
adc
dec
sahf
andps
xlat
popf
(bad)
data16
repnz
jg
push
shl
sbb
push
adc
aas
pusha
mov
push
dec
cld
and
ret
pop
add
sub
xor
(bad)
into
in
les
xchg
mov
mov
psrlq
test
imul
push
stos
inc
int3
shl
cmps
adc
push
ds
pop
shr
pop
lds
shl
test
inc
adc
pop
mov
lds
mov
lock
push
add
imul
fs
xor
add
jbe
or
mov
test
mov
loopne
mov
in
int
xchg
cmc
sahf
jno
pop
sub
xor
jmp
mov
std
imul
fsub
pop
gs
push
inc
or
mov
fdivr
inc
mov
data16
push
(bad)
outs
push
push
inc
mov
test
xor
(bad)
pop
test
jne
mov
je
call
push
stos
leave
mov
movd
sbb
inc
add
mov
in
push
fnop
in
ins
stos
pop
lds
test
add
dec
mov
cmp
clc
pushf
icebp
pushf
jl
sub
fmul
cmc
jae
xor
dec
adc
xor
xchg
jge
(bad)
repnz
pop
lock
loope
fwait
mov
into
into
(bad)
test
adc
pop
mov
adc
xchg
or
push
or
nop
loope
iret
test
pop
lahf
cmc
fs
jmp
inc
cmps
addr16
and
xchg
adc
fisub
jae
xchg
add
sbb
adc
cwde
cli
clc
das
mov
adc
movs
fld
sub
lods
std
sbb
mov
push
sub
sahf
pop
dec
sahf
cld
lea
xor
sub
sbb
xor
out
jge
rol
sbb
mov
ss
movs
push
push
rcr
push
bsf
icebp
inc
push
xchg
dec
fiadd
jae
xchg
push
xchg
inc
cmp
add
xor
(bad)
pushf
ret
(bad)
jg
dec
cld
cdq
add
inc
movs
mov
pusha
cmc
xchg
add
ins
fiadd
stos
or
or
add
mov
popf
icebp
sbb
retf
cmc
neg
push
ds
sbb
mov
dec
test
xchg
lock
push
mov
in
mov
loope
hlt
mov
jecxz
mov
hlt
inc
repz
jne
daa
push
aas
nop
ja
stos
or
sub
jge
mov
enter
pushf
adc
push
sub
inc
and
fdivr
adc
scas
data16
retf
or
nop
xchg
pusha
or
xchg
rcl
push
mov
mov
push
adc
(bad)
cmps
aam
mov
cmps
and
int3
lock
xchg
dec
rcl
mov
inc
xor
dec
cmp
jecxz
rcr
cmc
dec
int3
xchg
gs
cld
sar
loop
xor
sub
mov
adc
dec
popf
rol
sbb
sub
mov
mov
test
jle
into
xchg
ins
inc
clc
clc
(bad)
add
mov
push
call
cmp
jge
aas
dec
jb
pop
neg
mov
add
shl
fdivrp
shr
mov
lea
pop
adc
hlt
int3
adc
mov
jl
pop
add
dec
add
adc
into
sub
cmp
outs
jno
push
jmp
adc
mov
push
icebp
call
movs
mov
mov
shl
xlat
imul
and
mov
inc
and
xchg
scas
cmp
pop
mov
mov
cmps
pop
jne
mov
ins
es
(bad)
out
call
adc
xor
mov
cmp
mov
(bad)
xchg
and
and
aad
in
xor
xor
mov
dec
test
mov
imul
adc
repz
pop
jg
js
(bad)
sbb
int3
lahf
cmp
sub
loopne
fld
pusha
je
sbb
or
(bad)
jle
fcmovnb
out
dec
scas
sbb
imul
xor
mov
push
aam
and
push
div
into
xchg
inc
adc
cld
data16
mov
lods
idiv
mov
stos
jno
cmp
or
mov
dec
rcl
in
ins
sbb
out
mov
popf
ja
sti
sub
inc
setle
fdivr
xchg
push
and
cmp
imul
test
lds
adc
inc
inc
data16
xor
rol
mov
cmps
jnp
shl
inc
cmp
add
das
test
and
cmps
xchg
sbb
dec
adc
mov
icebp
neg
or
xchg
sub
out
int
cmp
pusha
and
adc
test
push
imul
adc
dec
add
loopne
jmp
ja
inc
bound
iret
std
dec
adc
xor
scas
popf
popf
cmp
mov
add
xchg
rcr
inc
js
gs
adc
push
ins
push
je
mov
adc
pop
dec
mov
adc
fiadd
out
imul
ret
std
jbe
mul
inc
xchg
mov
xor
(bad)
stos
js
push
shl
adc
bound
mov
pop
jmp
inc
ss
in
mov
mov
adc
xor
(bad)
iret
test
fcomp
mov
push
mov
fstp
dec
into
ds
hlt
and
stos
cmps
xchg
cld
rcr
sbb
sub
leave
iret
call
out
clc
(bad)
(bad)
lahf
test
std
outs
push
xor
sbb
jae
pop
sub
pusha
daa
icebp
cld
outs
xchg
inc
ds
mov
push
adc
adc
fimul
jge
je
pop
fwait
and
dec
jmp
xchg
mov
cmp
inc
ins
xlat
hlt
test
mov
jp
mov
out
enter
scas
in
dec
sub
push
xchg
lods
scas
mov
hlt
sbb
sbb
adc
mov
adc
fidiv
sahf
in
mov
pop
stos
jg
xor
inc
mov
inc
mov
lods
push
ss
fisttp
ret
cmp
std
add
xchg
add
fisubr
ret
jnp
dec
jb
jecxz
and
pop
mov
dec
xchg
or
or
inc
(bad)
xchg
shl
cmc
lahf
retf
neg
jns
(bad)
sbb
mov
lds
stc
test
add
xchg
pop
pop
adc
dec
jns
jbe
movs
or
inc
push
push
es
inc
pop
into
cmps
pop
xchg
int3
dec
or
inc
mov
mov
push
enter
and
mov
push
mov
ss
out
sub
sahf
mov
cwde
add
nop
inc
fincstp
xchg
mov
xchg
or
(bad)
fidivr
repz
mov
push
dec
and
popf
cwde
dec
sbb
stc
or
sbb
lahf
int3
stc
je
clc
sbb
add
mov
test
cdq
jmp
stos
add
into
push
xor
inc
or
mov
add
inc
xor
jmp
nop
xchg
xchg
cmp
inc
cmp
and
inc
sub
push
mov
push
leave
jmp
enter
add
ficomp
ret
(bad)
push
mov
jmp
jb
jns
mov
push
cs
shl
mov
adc
cmp
cmp
hlt
inc
xchg
push
pop
shr
(bad)
jo
(bad)
aam
stos
fucomip
xchg
push
and
or
out
in
test
jo
data16
lods
mov
add
push
or
xchg
sbb
imul
test
sub
adc
adc
jo
ret
adc
sbb
xor
jbe
retf
cmp
dec
gs
out
mov
jmp
pop
push
popf
repz
pop
int
stos
sahf
mov
rcr
add
sub
and
pop
cmp
(bad)
mov
push
xor
jns
inc
out
aam
mov
scas
dec
mov
(bad)
and
lea
icebp
sar
sub
add
xchg
cdq
sbb
cmp
push
push
inc
and
push
pusha
sbb
shl
sti
jp
xor
xor
add
(bad)
cld
cmp
in
lock
sahf
push
stos
jp
xchg
push
mov
jne
fst
pop
clc
mov
xchg
and
loopne
std
xchg
mov
sbb
sar
push
add
dec
dec
xor
js
dec
dec
mov
fwait
adc
loop
test
clc
push
imul
xchg
dec
and
pop
dec
mov
and
push
(bad)
xchg
div
adc
cld
outs
aam
adc
xchg
mov
cs
cmove
mov
lods
pop
sub
and
shr
mov
shl
push
gs
mov
stc
and
(bad)
call
push
sub
xchg
mov
rcl
xor
pop
les
in
movs
and
sub
jmp
call
cmp
push
dec
ins
add
into
mov
sub
nop
movs
adc
xchg
retf
jmp
iret
aad
mov
sbb
and
int3
pop
div
mov
iret
mov
fcomp
xor
jecxz
push
mov
sbb
loop
inc
or
pusha
dec
sti
sahf
mov
fild
fist
or
adc
jl
sbb
fbstp
add
mov
sub
popf
retf
jge
pop
lds
and
push
addr16
mov
js
pusha
cmps
cmc
mov
xchg
xor
pop
inc
pusha
jp
call
mov
jmp
xchg
or
xchg
rcl
mov
pop
outs
inc
sbb
(bad)
call
xor
and
cmp
jge
ret
out
jle
sbb
aam
push
fs
aas
out
add
mov
sbb
out
dec
dec
dec
add
leave
sbb
dec
sub
xchg
test
push
sub
and
jae
sahf
mov
adc
push
int
bound
repz
repnz
(bad)
pop
into
mov
xor
inc
pusha
aam
pusha
call
fldenv
inc
fild
sub
dec
cmps
cld
stos
push
xor
sub
addr16
pop
and
cmp
scas
mov
mov
inc
or
mov
mov
add
outs
or
lds
sub
ret
add
fst
dec
push
mov
ja
mov
(bad)
rcl
push
out
aaa
and
xchg
or
stos
in
jecxz
cmp
and
mov
loopne
and
popf
js
jp
sbb
push
xor
cdq
dec
and
inc
mov
xor
pop
cmc
ror
(bad)
je
jmp
ds
fisttp
and
ficomp
add
cmps
aas
test
shl
mov
test
sbb
sbb
icebp
xlat
(bad)
jno
cmp
jp
out
test
test
js
pop
(bad)
jl
sub
outs
cmps
dec
xlat
mov
stos
std
xchg
test
(bad)
jns
add
inc
lea
sub
pop
xlat
retf
in
test
aas
loop
das
aaa
shl
mov
fs
adc
cmps
ss
movs
and
sti
xchg
push
push
add
bound
mov
call
xor
outs
xor
add
mov
fs
push
mov
test
dec
xor
inc
imul
gs
jl
xchg
inc
in
scas
mov
out
push
iret
sub
outs
stc
(bad)
xor
pop
jl
push
data16
lods
dec
test
out
mov
mov
out
fs
aaa
jg
dec
ins
(bad)
jecxz
in
or
scas
or
pop
mov
sbb
lds
add
inc
sbb
dec
mov
adc
inc
aas
and
(bad)
in
cmp
cmp
inc
lahf
jnp
mov
pop
jo
ins
mov
cdq
sbb
popa
es
adc
adc
or
enter
and
push
ss
add
hlt
mov
pop
lods
cmp
mov
xchg
imul
pop
scas
push
push
inc
mov
addr16
cmc
lahf
pop
ret
or
shl
add
fcmovbe
inc
scas
sti
lods
outs
xchg
test
push
jge
jmp
mov
and
call
ins
cmc
lods
das
jbe
call
in
dec
add
out
popa
mov
jge
out
shr
lods
mov
xlat
cmp
icebp
add
imul
add
xor
jb
js
cmp
not
clc
push
and
sub
mov
adc
call
mov
mov
inc
shl
mov
mov
imul
leave
ret
cld
cmp
pop
outs
out
add
push
cdq
aaa
ret
lea
add
jo
push
add
rol
jbe
ror
pop
iret
and
test
xor
jle
add
(bad)
fucomp
jo
cmp
cmp
imul
in
pop
cmp
out
inc
jbe
add
aam
hlt
aad
test
push
xchg
sbb
pop
mov
or
mov
dec
pop
xchg
enter
mov
mov
xchg
das
and
int3
or
(bad)
mul
rol
dec
stc
jne
jne
push
mov
popa
je
jae
js
push
pop
mul
jmp
jp
fisub
lods
nop
cmp
stos
mov
aaa
pop
into
ins
inc
mov
stos
mov
push
les
ror
sti
imul
or
test
add
xor
inc
ror
sbb
call
xchg
jecxz
push
jle
push
stc
clc
inc
(bad)
mov
lods
sahf
add
xor
test
mov
int3
mov
rol
push
or
addr16
cmc
push
xor
xchg
cmp
(bad)
mov
or
mov
ins
xchg
mov
pop
and
sbb
push
pop
adc
xchg
jno
cwde
dec
outs
(bad)
leave
cmp
mov
mov
pop
outs
xchg
shr
adc
mov
add
pop
cmp
in
lock
push
mov
sbb
popf
repz
xchg
ret
jecxz
and
xor
jg
cld
cdq
inc
pushf
push
xchg
and
(bad)
call
fist
jmp
adc
xlat
and
jmp
out
(bad)
inc
in
jge
scas
adc
sub
pusha
jg
dec
lock
mov
cmovbe
xlat
mov
inc
jmp
add
xchg
sbb
push
mov
sbb
movs
into
and
dec
jmp
fwait
aaa
adc
add
xor
push
in
outs
mov
cmp
movs
mov
pand
scas
sar
jecxz
jle
mov
shr
rcr
imul
aad
adc
sbb
test
cs
aam
pop
jmp
inc
and
push
imul
rcr
sub
mov
and
sub
sti
jae
xor
cwde
mov
adc
xchg
xor
pop
pop
add
pop
sbb
or
cmc
fwait
dec
data16
stos
xchg
lds
shl
cmps
mov
shr
mov
xor
lock
lods
mov
push
cs
test
out
bound
pop
sbb
mov
clc
ins
cmp
aas
push
stos
sub
inc
(bad)
(bad)
sti
int
xchg
or
jbe
inc
mov
(bad)
jns
dec
mov
push
pop
cdq
fwait
xor
adc
and
dec
mov
push
mov
stos
pop
out
adc
pop
jae
inc
in
out
jnp
sub
int3
stc
enter
jne
imul
das
xor
fcomip
lahf
adc
aaa
jp
sbb
add
int
mov
out
stos
xchg
pop
cmp
(bad)
lods
hlt
push
ins
aam
xor
arpl
adc
idiv
push
ds
cmp
lahf
movs
inc
push
in
stos
sbb
xchg
rcl
shl
cmps
push
add
rcl
dec
ror
fdivr
dec
in
sahf
aas
lahf
das
fsub
jmp
xor
cld
lds
mov
fisubr
stos
xchg
std
and
or
jp
cwde
xlat
jle
adc
fdiv
mov
sbb
lahf
push
sahf
(bad)
xor
sahf
jnp
retf
addr16
pop
jp
cwde
popf
push
iret
xor
sub
jmp
ror
and
cmps
fst
sbb
pop
cmp
pop
jbe
push
sbb
adc
push
mov
dec
mov
(bad)
sbb
pop
dec
or
pop
(bad)
push
mov
es
imul
push
es
stc
shl
xchg
cmp
into
mov
retf
in
push
add
xor
mov
sbb
(bad)
retf
gs
and
in
mov
leave
inc
enter
and
mov
(bad)
ins
cmp
je
push
int3
out
call
mov
inc
stos
jle
xchg
push
mov
cwde
fisttp
in
out
call
pop
dec
or
sbb
imul
int3
sub
push
lds
retf
jbe
stos
inc
aaa
sub
inc
fisubr
xchg
icebp
xchg
jp
push
sub
test
pop
(bad)
daa
jmp
repnz
push
sub
int
jecxz
dec
(bad)
outs
mov
and
push
mov
or
sbb
inc
adc
jp
mov
and
push
ja
inc
cdq
or
or
aam
mov
cmp
ret
cmp
retf
push
mov
sub
pop
jno
and
cmp
test
mov
ins
mov
ins
test
fwait
jbe
call
dec
(bad)
fist
int
sahf
push
aad
lods
(bad)
jbe
loope
ss
adc
leave
cmps
or
out
test
add
cmp
(bad)
call
movs
outs
mov
lds
sub
jmp
inc
add
stos
mov
imul
sub
imul
dec
(bad)
sub
or
jne
mov
loopne
mov
lods
mov
ret
inc
mov
xchg
push
xor
jl
mov
les
std
out
cmp
push
pop
in
bnd
mov
add
jecxz
fidiv
mov
cli
jle
push
call
imul
adc
sub
clc
jns
in
idiv
xlat
cwde
es
stos
sahf
test
xchg
aam
xchg
das
iret
les
xor
jle
add
dec
push
xor
dec
xor
test
pop
mov
loope
stos
push
popa
adc
in
xchg
(bad)
mov
xchg
retf
(bad)
xchg
dec
cs
fiadd
jnp
stc
ds
mov
cmps
call
mov
in
aaa
ins
pop
aas
dec
dec
xchg
in
cmp
cwde
add
xchg
hlt
push
pop
or
shl
cmp
ins
mov
pop
xor
inc
inc
fwait
ss
pushf
inc
pop
ss
push
sahf
test
inc
std
and
stc
pop
dec
hlt
(bad)
shr
jge
mov
or
(bad)
shr
dec
push
mov
sub
sti
in
xor
fwait
jmp
pop
cli
jmp
shl
fisubr
mov
xchg
jb
cmps
(bad)
dec
push
cs
enter
add
std
push
stos
jns
or
and
(bad)
dec
sbb
std
inc
lahf
xchg
fisttp
or
xchg
pop
cld
std
pop
ret
add
imul
mov
test
or
pop
cmp
fldcw
jl
lods
push
fsub
mov
inc
cdq
add
and
sbb
data16
ret
imul
leave
data16
fsub
add
mov
popf
lahf
mov
std
fadd
pusha
aam
jecxz
stos
mov
stc
jmp
jcxz
push
fs
nop
call
je
outs
mov
sbb
and
sub
and
out
stos
add
jne
data16
inc
jp
inc
mov
pushf
js
xlat
dec
outs
lock
push
sbb
pushf
dec
inc
pop
sahf
popf
ss
into
rol
cld
xor
mov
add
adc
dec
sbb
imul
mov
aam
loop
(bad)
ror
cli
push
out
jecxz
jp
sub
ja
out
cmps
adc
fstp
pop
(bad)
cmc
movs
ins
aam
inc
rol
call
sub
mov
addr16
fiadd
adc
inc
movs
repz
cli
adc
adc
jo
and
cmp
inc
mov
mov
or
inc
mov
xlat
dec
or
push
gs
daa
fldcw
stos
mul
mov
push
adc
ja
mov
adc
push
pushf
cmc
xchg
add
or
fsub
jmp
les
sub
in
sti
in
inc
out
outs
push
aad
sbb
push
pop
xor
fidiv
mov
mov
sub
adc
push
adc
mov
nop
pop
loop
add
push
jle
mov
or
xlat
push
dec
js
adc
push
loope
sar
mov
mov
test
jmp
and
test
inc
iret
in
jecxz
aas
shl
sub
mov
push
jae
jmp
inc
rcr
js
lods
mov
xchg
out
neg
or
mov
in
pop
std
mov
adc
dec
adc
add
out
dec
or
adc
(bad)
loopne
inc
shl
cmp
mov
shl
sub
and
jo
ja
mov
mov
xchg
dec
cmp
test
loopne
imul
push
jne
jbe
rcr
lea
outs
jle
enter
aad
adc
retf
cmp
pop
movs
lods
xor
in
add
fbstp
xchg
inc
dec
xor
jb
mov
mov
call
xor
xchg
pop
fnstsw
add
mov
xchg
inc
rcr
mov
loop
xlat
mov
test
icebp
jecxz
or
mov
iret
lea
dec
mov
xor
pop
enter
daa
loop
pandn
sbb
xchg
call
fdivp
dec
jo
test
sub
pop
mov
pop
jg
xchg
fs
sbb
inc
fsubr
ins
(bad)
imul
pushf
icebp
inc
cmps
repnz
cli
loope
scas
xor
sub
repz
sub
xchg
mov
or
inc
int
mov
scas
jmp
out
cwde
retf
movs
sar
dec
pop
cdq
jl
(bad)
jne
mov
pop
es
sub
mov
push
cmp
adc
fs
enter
xor
inc
aad
int
(bad)
jmp
mov
dec
push
mov
mov
ja
int
xor
scas
int3
inc
mov
out
imul
add
in
push
fs
ins
xchg
adc
out
xlat
cmp
sub
push
push
adc
or
outs
jge
fistp
jle
loop
dec
pop
in
int
pop
add
push
out
icebp
xor
sub
aam
xchg
das
pop
mov
clc
fdiv
cld
xchg
nop
and
xchg
in
inc
cmp
jmp
jb
outs
punpckldq
or
and
jns
aas
xchg
aas
cmp
clc
mov
pop
push
jl
cmp
call
xchg
fwait
imul
mov
pop
jge
les
popa
les
mov
popa
stos
dec
(bad)
rol
es
stos
mov
repz
mov
call
(bad)
push
mov
add
dec
push
sub
pushf
data16
inc
enter
push
pop
mov
into
pop
cmc
lea
ins
pop
call
mov
cld
xor
sub
cmps
daa
leave
ret
mov
cld
push
mov
mov
rcl
jns
jae
jmp
and
inc
stc
(bad)
out
sbb
mov
sub
xchg
test
outs
add
and
xor
jno
mov
pop
(bad)
out
stos
mov
inc
mov
iret
xor
mov
bound
loope
cmp
test
mov
imul
in
or
mov
(bad)
shr
dec
mov
les
cmp
mov
xor
xchg
test
add
int
ins
sbb
aas
(bad)
repz
les
loope
fcmovne
imul
outs
push
dec
into
or
pop
hlt
jecxz
daa
mov
jmp
adc
(bad)
leave
or
mov
movs
and
dec
bound
aad
cwde
jbe
(bad)
enter
xchg
add
movs
push
aaa
out
xchg
sub
ja
push
jmp
mov
dec
mov
adc
xchg
pop
and
icebp
sbb
xor
imul
iret
jl
dec
shr
jp
iret
nop
mov
imul
dec
push
xor
jo
lods
cmp
mov
dec
sbb
pop
sbb
imul
fnstsw
xchg
jl
mov
rcr
adc
sub
mov
adc
jge
add
or
mov
scas
sub
fistp
mov
add
push
push
in
clc
mov
xchg
adc
jns
push
push
test
push
xor
stos
mov
cmps
cmp
sar
rcl
jl
ins
dec
mov
popf
or
cmps
in
jo
sahf
pop
shr
(bad)
dec
sbb
mov
sti
jp
nop
aaa
popa
jl
pop
sbb
xchg
stos
shl
mov
xor
rep
div
push
cmp
sub
outs
test
xor
imul
dec
gs
outs
inc
mov
mov
dec
add
neg
sub
(bad)
and
push
ror
ret
icebp
imul
sub
rol
jno
pop
adc
fimul
test
xchg
cmc
add
mov
cli
dec
mov
push
stos
or
mov
inc
lds
sti
cwde
mov
jge
mov
push
cmp
mov
xor
dec
xchg
xor
push
pop
aam
cli
mov
test
cli
dec
cmp
dec
fs
pop
stos
add
inc
in
call
and
adc
xchg
add
std
ja
ret
mov
shl
arpl
xchg
xor
mov
bnd
jmp
bound
lods
cli
pop
aas
sub
jae
in
jne
and
push
loopne
mov
sar
mov
je
std
xchg
jb
xor
sbb
sub
inc
pusha
lock
retf
pushf
mov
arpl
jo
daa
jmp
inc
fistp
(bad)
mov
inc
dec
add
lea
pop
xchg
in
call
addr16
js
std
mov
or
or
movs
inc
mov
aad
push
enter
jne
cld
pop
pop
bound
(bad)
retf
mov
ja
xchg
inc
jo
cs
dec
mov
int3
inc
aam
shl
adc
pop
ds
mov
cmp
or
inc
pop
jg
ss
stos
add
js
nop
mov
cmps
sub
test
icebp
stos
xchg
or
or
out
xchg
and
sbb
adc
jnp
sub
push
not
iret
push
adc
xchg
les
and
pop
or
inc
mov
fidivr
and
pop
inc
sti
xchg
repnz
push
mov
xchg
push
stos
loop
add
in
shl
out
loopne
jne
jae
mov
mov
gs
int3
stc
or
xchg
les
mov
mov
(bad)
adc
(bad)
xor
ins
cmp
dec
bnd
es
in
iret
fdiv
xchg
mov
inc
inc
jno
mov
jae
pop
loope
add
retf
ins
je
arpl
fwait
inc
mov
shl
stos
stc
mov
dec
or
scas
sbb
mov
push
sti
je
mov
sbb
xchg
sub
dec
sbb
inc
in
xlat
jbe
ss
xchg
cmp
xor
(bad)
pop
bsf
cmp
popa
pop
aaa
cmp
cmp
ret
lock
dec
push
lock
(bad)
stc
out
mov
inc
mov
mov
out
daa
jmp
stos
retf
pushf
(bad)
push
mov
cmp
jmp
call
retf
push
outs
rcl
ret
jnp
xor
push
push
or
dec
push
sahf
jmp
jge
or
(bad)
sbb
call
mov
fs
rol
add
stos
sar
out
popf
xchg
jmp
adc
mov
psubb
dec
call
push
fnstcw
cdq
push
xor
xlat
adc
not
test
aas
sub
sahf
mov
mov
xchg
pop
sbb
imul
dec
adc
nop
xor
sbb
int3
or
out
aaa
aad
pop
cmp
cmp
aas
stos
es
inc
sbb
je
pop
inc
push
mov
lock
inc
fild
add
jno
stc
call
dec
xchg
in
jg
pop
shr
jp
inc
in
(bad)
movs
cli
std
test
push
hlt
fwait
push
adc
fninit
jmp
cmp
or
jbe
jg
lock
jnp
cs
and
es
push
inc
in
dec
test
or
aad
inc
dec
add
test
frndint
(bad)
scas
les
lea
jge
test
jle
gs
and
mov
pop
inc
mov
xor
mov
cli
lods
outs
sti
cmp
adc
jmp
mov
test
nop
push
aad
mov
adc
cmc
sub
inc
pop
xor
jo
mov
cmp
int
cwde
sti
mov
call
pop
jae
mov
rcr
or
xor
cmp
jae
cmps
pushf
jno
xchg
sbb
cwde
sub
icebp
pop
(bad)
inc
fmul
push
int
daa
xchg
test
pop
ss
jg
add
test
sbb
scas
popf
sti
ds
(bad)
or
sub
and
repz
cdq
mov
or
xchg
xlat
int
test
dec
pusha
or
sbb
mov
fadd
aam
rcr
jge
xor
pop
fwait
out
pop
jmp
jbe
mov
cmps
pop
push
xchg
aad
mov
shl
mov
xchg
cmp
cmc
cwde
call
jle
mov
fcmovbe
mov
fsubr
in
inc
mul
cmp
push
mov
ds
mov
add
mov
inc
pop
scas
dec
sub
mov
push
jo
ds
lods
int3
leave
scas
out
push
mov
out
fdivr
int3
(bad)
enter
shr
mov
cmp
add
sub
dec
jg
cmps
mov
or
push
or
mov
pop
add
mov
push
test
iret
(bad)
test
dec
sub
or
sbb
nop
(bad)
push
rcl
mov
repz
shr
xchg
aaa
push
jp
push
daa
retf
jp
ins
push
mov
loope
loopne
push
mov
nop
inc
inc
mov
in
test
mov
jmp
inc
rcr
xor
pmaxsw
mov
jmp
sub
lock
fcom
push
int
add
mov
xchg
xor
dec
xor
xor
(bad)
(bad)
xchg
xor
add
push
xchg
lock
cmp
adc
mov
jmp
add
jne
popa
xor
(bad)
stc
jle
lods
scas
adc
xor
jne
jo
cmps
lahf
jle
mov
push
jle
lods
int3
dec
xor
stos
dec
int
test
inc
mov
or
pop
push
xchg
jno
cmp
adc
mul
adc
aad
hlt
fstp
xchg
or
mov
mov
ffreep
push
fidiv
fdivrp
loope
aaa
push
pop
scas
push
into
adc
push
adc
push
push
or
xchg
add
inc
out
cmps
fsub
shl
pop
je
dec
cmp
js
outs
not
add
loope
xor
fcom
inc
cmps
into
scas
rol
push
stc
shr
dec
pop
push
rcr
repnz
ret
xchg
xor
xor
xchg
push
mov
aaa
inc
jmp
jl
arpl
test
jmp
inc
lea
push
and
imul
mov
push
fnstenv
mov
cmp
jp
push
neg
call
retf
popa
push
jns
cmp
xor
adc
fsubrp
dec
daa
pop
outs
jecxz
aas
inc
add
cmp
ret
sub
pop
adc
inc
push
aad
sti
addr16
movs
fwait
pop
gs
mov
sub
or
sar
push
cmps
mov
pop
pop
jp
jecxz
fisttp
lock
and
sub
push
int3
jle
test
dec
dec
and
xlat
repnz
pop
test
mov
inc
and
not
cmp
jo
mov
adc
push
test
push
out
pop
dec
pop
aam
(bad)
pusha
sub
mov
inc
mov
and
adc
adc
mov
mov
jbe
jg
neg
sub
popf
jns
ret
add
mov
dec
dec
test
stc
sahf
fwait
add
aam
addr16
xchg
icebp
rol
stos
int3
iret
or
cs
in
scas
jno
fistp
adc
ffreep
jne
lahf
retf
repz
push
ret
inc
inc
sub
jmp
cmp
nop
adc
jp
out
repnz
jmp
stos
push
xchg
jp
sub
lahf
es
ret
mov
mov
cld
pop
dec
jg
es
push
cld
jmp
pop
repnz
cmc
jo
jns
pusha
rcr
leave
add
inc
mov
retf
addr16
leave
sub
sbb
sbb
ins
out
cmp
fstp
lahf
es
mov
dec
push
cwde
mov
mov
(bad)
mov
add
inc
repnz
jecxz
retf
add
std
or
daa
lea
ficom
push
cwde
xor
xchg
cmp
stos
push
xlat
stos
ins
inc
xchg
cmp
xor
pop
outs
push
lods
or
or
pop
test
push
cs
dec
jmp
pop
push
pop
cwde
pop
sub
mov
and
pop
cmp
adc
adc
xlat
mov
mov
repz
or
ret
jbe
loope
test
mov
sbb
jnp
cmp
pop
adc
inc
call
and
sbb
aas
das
stos
mov
stos
jb
ins
dec
xor
(bad)
aad
push
cmp
sub
jmp
pop
and
mov
int3
addr16
loope
rcl
jecxz
cdq
inc
sahf
clc
leave
sub
retf
xor
adc
out
or
std
(bad)
(bad)
(bad)
fdivr
inc
mov
mov
sbb
stos
data16
inc
push
sbb
sar
sub
push
xor
fbstp
das
ret
cdq
fbld
shl
add
and
mov
inc
and
in
or
mov
sbb
cdq
stos
adc
or
mov
test
adc
xor
xchg
pop
stos
jle
lock
mov
cmp
(bad)
ds
cmp
mov
pop
xchg
in
scas
call
bnd
push
enter
adc
pop
jg
ins
and
push
cld
cmps
mov
jecxz
or
shl
mov
les
fs
mov
retf
xchg
mov
mov
daa
out
shr
mov
lea
inc
cmp
and
shl
adc
jle
add
sub
imul
fnsave
js
jle
push
scas
out
sub
and
and
xor
int
ins
jp
push
pop
mov
xchg
(bad)
dec
in
jnp
mov
xor
add
int3
cmp
inc
push
out
fchs
retf
xchg
std
pop
dec
xchg
sub
rcl
and
stos
ss
or
(bad)
(bad)
xlat
jo
ins
cmp
sti
adc
bound
mov
add
ficom
stos
rol
mov
or
cmps
dec
fidivr
fisttp
push
in
fst
and
sub
test
imul
movs
pop
jnp
pop
and
cs
or
xchg
popa
aam
sbb
xor
cdq
das
shr
ror
dec
inc
scas
sbb
sbb
ret
(bad)
mov
repnz
dec
sbb
jecxz
or
sub
inc
xor
push
dec
push
push
sti
movs
pushf
inc
pop
cmc
cmp
add
std
sti
or
sbb
jb
aaa
pop
cmp
stos
popa
mov
arpl
and
jbe
scas
jp
leave
or
fucomp
ins
imul
dec
in
je
jns
sbb
add
pop
push
jle
sbb
inc
pop
push
dec
scas
je
mov
cs
clc
cld
int
adc
add
mov
and
loopne
jecxz
cmp
fimul
xchg
pop
xchg
aaa
cld
cdq
fst
cmc
pop
hlt
jmp
scas
cmc
les
pop
leave
xchg
jmp
ja
clc
rcr
loopne
jne
mov
ds
les
ret
es
aas
jns
cmp
sub
and
dec
(bad)
loopne
xchg
shl
imul
fsubrp
cmp
add
push
pushf
mov
fld
fs
movs
pushf
mov
mov
pop
into
cmc
mov
mov
retf
push
mov
xor
js
call
jo
imul
dec
call
sub
shl
mov
pop
sub
sbb
jmp
sub
(bad)
pop
jp
cmp
jmp
stos
aas
pop
pop
(bad)
xor
mov
ud2
scas
out
or
inc
fs
dec
xchg
add
adc
enter
enter
mov
in
sub
sti
xchg
and
mov
inc
push
movs
cs
push
adc
(bad)
and
fadd
lea
jmp
jno
mov
mov
cmp
dec
imul
jbe
out
pop
xor
js
je
or
je
push
arpl
push
mov
loop
dec
repz
xor
lahf
xchg
jne
in
pop
xor
sahf
jo
xor
fdiv
add
pop
mov
stc
ss
xlat
or
mov
sbb
push
mov
(bad)
in
mov
rcl
and
imul
fstp
or
jge
ins
xchg
xchg
or
int3
and
in
test
loope
sbb
add
sbb
sub
ds
and
add
fwait
adc
outs
(bad)
into
sahf
push
enter
(bad)
sbb
mov
cld
or
pop
and
jmp
jnp
repnz
mov
repz
movs
outs
in
add
cli
pop
dec
xor
inc
pop
fcom
shl
xchg
cmp
pop
call
lods
jmp
pop
jg
pop
icebp
sub
lock
xor
ins
dec
fstp
test
mov
or
xor
xchg
arpl
jmp
ins
mov
nop
ret
fnstcw
sub
lods
cmp
jge
sti
xchg
ds
adc
jb
jmp
mov
retf
call
sbb
hlt
div
stc
movs
jp
pop
mov
push
das
nop
fcom
les
jmp
inc
push
adc
ret
inc
add
jmp
mov
sub
out
rcl
fwait
pop
dec
xlat
movs
add
jbe
mov
pop
xchg
adc
fcom
push
and
jbe
jge
sahf
inc
rcr
dec
ficom
add
outs
or
dec
scas
xchg
xchg
(bad)
xchg
fptan
sub
jmp
pop
mov
mov
ins
xchg
sahf
fs
imul
adc
shl
add
loopne
ror
cmp
nop
sahf
repz
add
out
int3
(bad)
cmp
inc
mov
xchg
ins
cmp
(bad)
sub
retf
repnz
pop
in
stc
sahf
ins
mov
(bad)
pusha
lahf
cmp
sub
mov
jmp
lods
and
push
mov
fwait
push
ret
jo
sub
pop
xchg
or
jle
sbb
and
sub
shr
and
hlt
sbb
in
mov
and
mov
shl
(bad)
js
shl
ins
push
mov
es
mov
jno
outs
mov
mov
xchg
sbb
and
push
and
out
cdq
jb
push
stos
ret
cwde
push
pop
mov
and
or
stos
jnp
add
movs
mov
pop
cmp
les
dec
scas
or
dec
mov
xchg
lds
push
or
xor
and
or
sub
xchg
xchg
movs
fistp
dec
nop
push
adc
push
inc
arpl
mov
add
or
out
ins
dec
and
cld
pop
into
js
cmp
cmp
lods
or
dec
add
pop
jbe
jmp
and
outs
push
cs
cmp
or
call
inc
mov
loope
test
cmp
mov
je
jle
add
pop
xor
pop
jne
dec
stc
lods
or
mov
cdq
mov
cmps
daa
mov
add
pop
into
xchg
shl
mov
pop
repnz
inc
cld
sti
and
sub
jo
and
into
mov
mov
lea
xor
jb
pop
dec
xchg
push
cvtdq2ps
sbb
inc
push
pop
mov
xchg
jmp
or
fdiv
cwde
mov
xchg
cmp
nop
mov
push
and
pop
popf
sub
mov
pop
ror
xor
sbb
cwde
popf
int3
jp
arpl
mov
cmps
mov
push
mov
or
(bad)
fistp
pop
and
jo
inc
pop
retf
push
and
mov
or
dec
xchg
mov
sub
mov
cmp
shr
ds
jecxz
xor
mov
test
fwait
or
test
imul
or
inc
(bad)
retf
repnz
pop
push
add
jb
cmps
fisttp
inc
jmp
test
xchg
xor
(bad)
jne
mov
mov
push
cmp
jae
into
mov
imul
fwait
xchg
shl
push
in
lods
cli
fdiv
rcr
dec
test
fwait
(bad)
jne
cmp
call
(bad)
js
push
iret
and
cmc
rol
arpl
dec
add
xchg
shl
aas
shl
xchg
jb
xchg
dec
sbb
mov
fs
push
xchg
cmps
xor
jge
sbb
pop
in
sub
add
inc
mov
xchg
sbb
xor
push
sbb
and
xchg
cmp
xor
push
xlat
mov
inc
mov
or
mov
xchg
jb
jnp
jg
enter
mov
xchg
dec
fwait
xchg
jne
addr16
cmp
test
pop
cmps
fldcw
(bad)
jne
sbb
(bad)
mov
loop
mov
add
pop
xor
jns
adc
cmp
dec
ror
inc
mov
xor
daa
mov
and
adc
in
pop
(bad)
sub
pop
fidiv
shl
xor
mov
inc
fcom
adc
sbb
mov
inc
ds
jb
out
push
mov
cdq
and
xchg
pop
mov
or
mov
pop
retf
xor
jnp
out
add
push
retf
aam
jne
mov
bound
cs
ds
or
(bad)
sbb
(bad)
cmp
jne
add
inc
cdq
sub
outs
ficom
scas
mov
test
aas
test
ja
pusha
movs
out
out
or
mov
rcr
hlt
jp
or
int
nop
clc
fisttp
adc
mov
push
(bad)
int3
inc
jmp
dec
xor
sbb
or
ror
inc
(bad)
imul
leave
sbb
outs
xchg
es
cmp
mov
push
xchg
dec
add
pop
pop
pop
movups
adc
pop
xchg
pop
push
adc
out
mov
retf
test
push
mov
cmps
cmc
neg
addr16
sub
test
cli
sbb
lods
ret
(bad)
cmc
into
loop
sbb
and
mov
jns
jge
xchg
outs
push
test
push
sbb
adc
mov
ja
(bad)
mov
das
loope
cmp
xchg
add
jmp
xor
push
icebp
ret
sub
call
cmp
pop
and
or
inc
pop
(bad)
shr
fmul
jmp
push
(bad)
cmp
add
popf
scas
add
push
xchg
sahf
push
jne
inc
or
div
lds
fidivr
xchg
cmps
xor
mov
push
int
iret
xchg
jb
xchg
jle
es
sub
inc
jnp
jle
nop
pop
test
ins
leave
cdq
outs
popf
xchg
fs
ins
xor
call
mov
and
sti
mov
jae
mov
mov
stos
fs
xchg
data16
pop
jmp
(bad)
pop
jbe
pusha
and
xchg
fmul
icebp
sub
mov
jecxz
mov
sbb
outs
inc
pop
mov
jg
sbb
bound
inc
adc
cli
cli
das
aas
mov
mov
fsub
getsec
jecxz
push
les
mov
ja
shl
ins
mov
add
popf
mov
add
mov
pushf
(bad)
mov
mov
mov
xchg
int3
dec
xchg
shl
mov
pop
mov
es
mov
mov
inc
fnstenv
jbe
bound
scas
fistp
dec
inc
push
push
and
sahf
mov
div
mov
sahf
add
fmul
addr16
push
mov
jmp
and
or
mov
pop
into
or
push
xchg
addr16
ss
ins
das
je
xor
retf
shr
sti
jns
enter
ins
das
call
xor
and
add
(bad)
adc
(bad)
and
sbb
or
cmps
mov
fisubr
retf
push
movs
fimul
cmp
popf
sub
stos
loope
fist
xchg
xor
ins
aam
sub
in
adc
pop
add
test
xchg
mov
sub
push
out
ss
(bad)
fdiv
push
sub
adc
sub
out
ja
pop
shl
adc
jecxz
mov
pop
mov
sub
js
xor
mov
push
jno
jbe
loop
mov
ds
loope
fstp
adc
js
call
cmp
xchg
push
test
mov
retf
push
adc
push
das
(bad)
jp
bound
mov
mov
sbb
push
xchg
push
nop
xchg
dec
push
arpl
dec
in
lahf
dec
int3
lods
lods
xor
mov
outs
pusha
push
jecxz
push
fwait
jmp
out
xchg
xor
xor
sti
sbb
mov
jne
mov
sub
cmp
or
cli
int
adc
cmp
mov
jle
fld
cs
push
popf
imul
(bad)
(bad)
aad
dec
mov
or
jbe
(bad)
into
adc
or
adc
dec
scas
fldenv
cdq
and
sbb
or
daa
js
(bad)
pop
aad
cmp
push
xor
mov
mul
xor
ret
gs
jno
inc
mov
mov
xor
je
sub
add
fwait
loope
mov
stos
int3
sbb
cmp
ror
out
(bad)
outs
cmc
and
sti
je
arpl
and
arpl
xchg
sub
into
cmp
inc
jecxz
adc
rep
xlat
cmp
jg
int
outs
mov
mov
jmp
jg
jne
cmc
rcl
push
dec
adc
jecxz
ficom
dec
jge
mov
test
fimul
jle
fisub
or
aas
adc
mov
mov
in
pop
dec
mov
test
jo
xchg
cli
test
dec
aas
outs
outs
fsubr
movs
push
mov
out
(bad)
lock
sub
jne
call
mov
pop
dec
retf
int3
int
movs
sahf
ror
shl
xor
cwde
push
inc
ret
mov
mov
aam
sbb
add
cli
jge
mov
jbe
inc
rol
adc
hlt
arpl
shl
mov
or
repz
aaa
popa
sbb
jle
adc
push
jbe
mov
js
jp
arpl
in
das
jmp
loopne
out
mov
jnp
jg
(bad)
push
les
adc
prefetchw
sub
sub
cmp
xchg
push
dec
jno
out
sar
xor
sub
lahf
repnz
in
xchg
dec
test
inc
sub
and
mov
rcl
add
mov
call
xchg
in
inc
jbe
ja
mov
fbld
jbe
ins
sub
or
cmp
pushf
div
leave
cmp
mov
mov
dec
inc
nop
or
and
mov
sbb
mov
xor
add
xchg
movs
sbb
ins
adc
gs
mov
dec
js
xor
imul
and
cmp
add
loopne
push
shl
push
dec
ss
mov
rep
(bad)
in
jns
and
fsub
imul
mov
sub
cmp
xchg
add
lds
pusha
ret
in
cmp
push
in
sbb
fbld
mov
int
call
lea
add
and
dec
cmps
jnp
repnz
test
push
xchg
jmp
imul
jns
and
push
lods
repnz
in
pop
xchg
(bad)
out
adc
pop
add
xor
cmps
ins
loope
idiv
sbb
mov
xchg
leave
jecxz
pop
ins
jns
(bad)
ds
scas
(bad)
cmp
or
push
xlat
(bad)
cmp
bound
aas
sub
xchg
leave
es
cmps
or
ret
imul
or
rol
cmp
cmp
aaa
dec
loop
outs
mov
bound
cmp
cmp
xchg
dec
fist
jns
(bad)
jo
aas
adc
sub
mov
xchg
dec
leave
mov
arpl
jns
fsubr
leave
mov
and
iret
cmps
or
lods
dec
sbb
add
inc
ret
sbb
out
outs
iret
rcl
std
cld
das
ds
sbb
imul
sti
cs
push
mov
test
out
mov
arpl
mov
jnp
cvtdq2ps
jecxz
xchg
dec
xchg
inc
cmc
cmp
outs
inc
ret
sar
jl
mov
jmp
sbb
cmp
jne
addr16
mov
test
add
sub
retf
pop
push
scas
pop
push
or
jmp
or
or
pop
cmovne
add
adc
push
dec
mov
int
aaa
mov
jg
sub
dec
cmp
dec
jecxz
int3
jmp
fcomp
popf
sahf
mov
jb
or
push
xor
inc
mov
sub
popf
into
inc
and
mul
jns
rcr
repz
jmp
shl
and
cmp
push
mov
sub
sub
and
test
pop
fs
pop
lahf
push
pusha
sub
std
mov
sub
pop
hlt
cmps
fadd
sub
jmp
add
pop
loopne
jecxz
sub
call
mov
mov
nop
std
jnp
js
(bad)
in
inc
push
mov
dec
scas
mov
addr16
push
ja
xchg
sbb
scas
out
int3
or
jbe
arpl
(bad)
mov
xor
cmp
mov
cmc
push
(bad)
xchg
push
adc
sar
call
xchg
dec
dec
(bad)
outs
sahf
jmp
nop
loopne
sbb
or
aaa
addr16
dec
popf
inc
jl
hlt
arpl
retf
add
js
mov
jg
mov
jecxz
push
mov
sub
daa
test
push
mov
fidiv
ret
(bad)
xchg
das
inc
mov
lahf
scas
push
enter
mov
int
mov
out
ins
adc
ficom
jns
dec
xchg
xor
mov
das
aaa
lock
outs
and
pop
pop
pop
fisubr
popa
pop
gs
sahf
mov
dec
cs
jne
aaa
cmp
hlt
push
out
ret
adc
inc
inc
pop
call
xchg
cli
int
ja
cmp
add
jns
push
call
movs
popf
xchg
sub
addr16
add
(bad)
fldenv
ret
dec
or
lods
mov
mov
jl
jmp
mov
(bad)
mov
add
mov
dec
hlt
mov
mov
pop
cmp
retf
and
push
pusha
dec
mov
imul
pop
iret
xor
push
jb
pop
fidiv
sub
push
hlt
mov
pop
mov
dec
test
loope
mov
sbb
ss
push
stc
add
mov
and
arpl
push
or
pop
inc
add
xor
xchg
xchg
inc
data16
fnstenv
mov
mov
into
test
pop
xchg
push
stos
push
push
pop
mov
jge
(bad)
sub
mov
mov
cdq
icebp
and
popa
fild
sbb
lods
pop
mov
fs
pop
out
inc
sub
fisubr
lea
fwait
and
ds
aad
xor
js
test
push
lea
pop
mov
loope
loopne
sbb
push
dec
pop
imul
dec
sbb
xchg
call
rol
inc
mov
xor
ins
add
cmp
stc
stc
and
in
add
inc
add
push
dec
ds
jg
inc
push
add
inc
jnp
add
mov
jl
jbe
jmp
sub
push
mov
rcr
dec
mov
or
dec
mov
pop
jmp
sbb
or
mov
push
imul
ss
lds
mov
es
push
(bad)
push
mov
out
jns
lds
popf
cmp
adc
sbb
push
add
xchg
(bad)
dec
jne
mov
mov
dec
pop
mov
cmps
mov
leave
mov
push
hlt
add
push
test
mov
mov
xchg
shl
push
jp
lods
or
adc
xor
lahf
or
out
js
add
mov
lds
outs
push
mov
retf
sar
jnp
leave
test
pop
add
mov
scas
scas
call
movs
cli
add
mov
sbb
mov
or
or
sub
push
fistp
pop
nop
pop
nop
inc
xchg
pop
jae
adc
and
std
push
shr
int3
jb
sti
sbb
push
xchg
mov
ja
daa
std
lods
adc
mov
add
pop
js
test
stos
or
mov
xor
xchg
inc
repz
mov
seto
clc
jbe
pushf
mov
in
inc
mov
jae
unpcklps
sbb
fbstp
jno
sub
mov
je
jno
jo
mov
mov
dec
push
lahf
pop
cmp
xlat
movs
add
enter
jns
sbb
push
ret
sub
out
inc
fimul
ins
add
pop
dec
fist
test
sub
jmp
pop
shl
sub
jg
jge
jecxz
jae
push
dec
fild
cld
jns
cmp
mov
iret
or
repz
jmp
cmp
sbb
dec
sbb
clc
inc
and
pusha
nop
dec
cld
lock
pop
xchg
clc
lea
push
outs
mov
sti
inc
in
test
cmp
aas
sub
mov
leavew
dec
stos
(bad)
sbb
ja
and
xchg
mov
test
into
inc
xchg
mov
dec
add
cmp
imul
and
mov
pop
pushf
push
jno
popa
(bad)
jmp
mov
jo
or
inc
mov
lea
mov
xchg
cmc
jecxz
xchg
jmp
jmp
mov
in
lds
add
loope
fincstp
jle
pop
out
outs
ins
call
dec
pop
mov
push
out
outs
push
mov
hlt
loope
aam
test
mov
push
dec
rcl
adc
cmp
mov
bound
dec
pop
jge
cmp
or
fdiv
sbb
inc
int
push
test
test
paddb
test
cmp
dec
dec
sub
xor
mov
in
test
in
aas
sbb
retf
in
or
icebp
add
jno
mov
dec
inc
popa
inc
les
js
push
and
inc
mov
xchg
gs
jo
test
call
mov
out
push
ds
pop
ret
pusha
scas
fcomp
xlat
push
in
pusha
retf
(bad)
and
inc
or
in
lea
xor
in
cmp
fadd
jg
pop
je
mov
or
xlat
jmp
xchg
mov
or
cs
ret
lods
repz
icebp
adc
test
inc
cmp
aas
dec
inc
or
mov
mov
jl
dec
(bad)
(bad)
mov
adc
iret
cmp
mov
or
loopne
inc
out
adc
mov
jns
push
mov
adc
daa
and
aad
ins
dec
movs
inc
ins
pcmpgtb
mov
and
out
mov
sbb
mov
add
lods
iret
retf
stc
inc
das
or
in
in
sbb
cli
repnz
lahf
leave
daa
pop
xor
xchg
shl
movs
mov
movzx
mov
mov
inc
leave
dec
jmp
jne
mov
pop
and
repnz
fidiv
es
jns
movs
xor
movs
xor
mov
dec
stos
addr16
test
sub
retf
ins
and
(bad)
dec
dec
int
movs
push
pop
clc
addr16
push
xor
addr16
data16
pop
fadd
(bad)
les
push
pushf
dec
mov
mov
int3
mov
mov
outs
dec
fmul
repz
nop
sbb
(bad)
std
push
cmp
div
ret
jne
je
inc
in
xor
mov
and
mov
scas
cmps
movs
popa
push
pushf
ja
int3
pushf
xor
loope
loopne
imul
mov
pop
aad
and
mov
pop
cld
leave
jecxz
cld
stos
fsubp
dec
out
lds
sbb
push
enter
jle
shl
cdq
mov
sar
movs
adc
fwait
jmp
sub
sar
mov
imul
je
dec
push
lods
out
mov
ins
adc
out
push
jmp
nop
mov
pop
push
xchg
and
sahf
jge
mov
fsub
adc
xor
shr
and
add
jmp
inc
into
sub
icebp
dec
stos
cmp
out
fsub
in
fdivr
out
sbb
mov
mov
inc
or
mov
cld
pop
or
les
sub
jmp
adc
mov
icebp
ret
pop
and
fdiv
(bad)
jmp
push
aas
dec
push
(bad)
dec
dec
aas
pop
xor
leave
faddp
push
inc
inc
fsubr
jg
enter
push
adc
enter
or
movs
or
push
pushf
sub
dec
lods
sbb
fsub
pop
jb
push
push
cmps
xchg
sub
stos
dec
push
push
inc
sti
xor
pushf
inc
jo
cmp
arpl
hlt
push
in
mov
cmps
shl
fnstcw
cmps
mov
ret
xchg
std
gs
sub
arpl
mov
mov
fimul
mov
lds
mov
xchg
mov
mov
scas
push
pop
retf
leave
loop
dec
cmp
jle
dec
mov
out
mov
xor
xchg
ins
sub
ret
inc
test
jb
sbb
pushf
xchg
arpl
fild
push
push
jle
pop
std
inc
and
inc
(bad)
out
rol
je
lods
mov
aad
dec
push
mov
fild
cld
pop
ret
jmp
outs
and
(bad)
movs
movs
cmp
inc
inc
test
inc
fiadd
aam
bound
pusha
cmp
scas
jne
imul
cmp
lds
cmps
push
push
xchg
les
dec
push
mov
jns
loope
mov
les
cmp
out
in
cmp
out
imul
fs
ret
push
icebp
jmp
cmp
rcr
ror
and
inc
pop
daa
scas
push
mov
add
test
mov
cli
push
icebp
jne
cli
lds
mov
push
mov
mov
retf
cmps
xor
mov
xchg
xor
xchg
dec
inc
loop
test
aas
sub
mov
cmp
mov
leave
repz
mov
dec
call
pusha
jg
fnstenv
pop
mov
js
add
push
pop
push
mov
inc
adc
adc
fdivr
ins
mov
inc
mov
fs
or
sahf
mov
or
or
ja
mov
mov
test
lods
pop
pop
inc
push
xor
mov
dec
cs
mov
dec
dec
push
adc
jmp
repz
fild
mov
inc
mov
ins
cmc
call
mov
je
mov
out
inc
adc
add
sub
push
pop
and
mov
sub
fiadd
sbb
or
outs
fwait
das
xchg
enter
aas
mov
inc
jl
outs
ret
mov
push
retf
mov
cmp
ror
addr16
sub
xor
mov
pop
sub
loopne
and
sahf
imul
pop
push
pop
pop
sub
aam
out
bound
imul
dec
jb
and
pop
mov
xchg
xchg
xchg
les
adc
in
dec
out
test
push
cld
ret
push
hlt
push
dec
or
sbb
ret
jecxz
mov
jns
pop
xchg
xchg
int
push
and
nop
and
(bad)
scas
lods
pusha
push
xor
and
mov
push
or
sub
icebp
push
int
jnp
or
jge
int3
or
sbb
out
outs
out
lea
imul
jnp
inc
cli
in
pop
nop
not
and
inc
or
mov
fisttp
enter
enter
std
xor
bound
sbb
jno
adc
aaa
rcl
stos
dec
push
clc
sbb
gs
popa
jns
arpl
mov
push
add
cwde
neg
ret
dec
pop
sahf
cwde
xchg
mov
cmp
add
out
movs
xchg
cwde
cmps
iret
repz
and
add
retf
xchg
or
or
daa
and
mov
jno
mov
adc
jb
and
inc
(bad)
retf
or
scas
add
cmp
sub
xlat
inc
adc
cwde
cmp
and
test
sub
imul
mov
aas
add
rcl
loopne
or
into
ss
dec
jmp
pop
popf
pop
scas
ret
jmp
sub
call
in
mov
ror
div
(bad)
pop
jmp
in
js
cmp
pop
and
lods
sub
stos
xor
push
fwait
lahf
jl
repnz
(bad)
pop
push
lods
dec
movs
aam
fdivr
jo
xor
shl
pop
fisttp
fstp
fst
or
jecxz
(bad)
and
and
cmp
scas
fdivrp
mov
and
(bad)
fadd
pop
cdq
cmp
pop
stos
shr
not
sub
mov
outs
popf
xor
outs
fnsetpm(287
in
or
sub
lock
cs
jns
call
or
leave
mov
mov
inc
sub
xchg
pop
dec
push
inc
(bad)
ret
fisttp
jno
or
retf
sub
(bad)
movs
ret
and
jns
retf
aam
imul
xchg
dec
dec
imul
push
mov
jl
cmp
push
icebp
popa
mov
adc
mov
out
or
adc
inc
retf
jns
xor
xor
jle
adc
and
xor
aaa
sbb
inc
loop
dec
ja
shr
nop
leave
sbb
sbb
inc
outs
jmp
imul
pop
cdq
or
xor
or
xor
push
stc
jmp
cmp
xlat
test
int3
add
sbb
aad
xor
mov
pop
fistp
cmp
mov
jbe
icebp
in
loop
pusha
xlat
(bad)
arpl
jno
(bad)
mov
nop
test
pop
repnz
inc
dec
xchg
pop
nop
jp
inc
mov
cmp
sub
jle
repz
push
test
mov
xchg
add
ss
sub
mov
(bad)
adc
ins
sub
movs
test
sub
out
cmp
jae
push
jno
xchg
fwait
(bad)
ins
pop
or
mov
or
xchg
test
movs
push
std
dec
movs
inc
cmp
sti
pop
ret
add
jp
or
mov
stos
ret
stos
push
push
inc
adc
(bad)
out
out
dec
dec
aas
aam
clc
cmps
or
adc
push
dec
fadd
test
cmp
es
push
or
int
xchg
sub
inc
dec
cmps
push
out
mov
jb
hlt
movs
jns
call
mov
sbb
sub
cmp
inc
add
inc
jge
sbb
pushf
and
adc
mov
outs
jo
aas
(bad)
dec
inc
test
aaa
add
jg
in
les
(bad)
das
lods
gs
ret
jl
sbb
cmps
or
jp
xchg
push
inc
mov
mov
mov
xor
test
push
sbb
mov
ins
in
xchg
aam
cmp
mov
xlat
jmp
es
in
pop
mov
nop
sti
sub
dec
jp
dec
pusha
outs
rcl
push
in
mov
mov
movs
shl
jne
fmul
mov
repz
jecxz
sub
sbb
dec
and
jp
and
pop
inc
xchg
movs
xor
adc
call
(bad)
loop
dec
xchg
or
inc
mov
repnz
mov
stos
mov
pop
outs
pop
sub
int
or
fisttp
inc
mov
mov
cld
mov
mov
sti
int3
loopne
pop
adc
mov
sbb
lods
js
out
fisttp
scas
test
sbb
and
fucomi
loope
add
out
hlt
adc
icebp
sbb
or
int3
imul
mov
sbb
sub
cmps
jge
shl
aad
fdiv
sbb
sub
movs
cwde
sbb
push
pop
jnp
shl
aaa
add
sub
jle
pop
scas
jb
ins
jmp
ins
cmp
mov
push
inc
push
xchg
stc
in
cmp
jae
and
and
mov
stos
adc
aam
adc
inc
ss
(bad)
in
enter
out
fidiv
inc
xlat
mov
add
test
ret
cdq
jbe
mov
iret
push
fidiv
and
sbb
retf
movs
sahf
pop
cmp
aam
rcl
adc
cs
mov
ins
mov
aaa
mov
popa
daa
into
sbb
push
imul
ins
fwait
mov
in
or
les
pop
leave
ins
in
sub
rcr
sbb
repz
adc
sbb
inc
push
dec
pop
pusha
call
loope
out
daa
retf
test
inc
out
inc
push
(bad)
pop
jae
push
fld
and
test
cdq
ds
int3
cwde
push
jb
jmp
sahf
sub
test
rcr
mul
popf
dec
std
adc
dec
not
or
iret
es
dec
jmp
xor
lods
xchg
loope
pand
adc
cmps
inc
lock
cmp
push
jg
dec
xor
or
mov
pop
nop
cmp
xor
(bad)
dec
sbb
dec
mov
inc
ins
mov
jmp
in
movs
dec
cmps
xor
lods
sbb
sti
inc
push
xor
stos
icebp
dec
rcl
ret
add
dec
inc
jge
dec
jl
mov
sbb
addr16
mov
pop
push
call
lods
mov
aas
inc
mov
push
inc
cli
adc
fnstsw
xor
jns
inc
adc
push
fs
pop
add
mov
bound
jb
dec
js
mov
fadd
ja
and
mov
(bad)
aad
fisubr
fbld
sbb
popa
pop
call
fistp
cmp
leave
inc
adc
or
xchg
shl
stos
daa
xor
xor
into
xchg
in
and
sar
sub
sbb
mov
or
test
pop
jle
mov
and
fwait
es
xlat
xor
lods
ret
lods
lods
(bad)
(bad)
sbb
jns
adc
pop
popa
out
pop
jmp
mov
cmp
popf
push
sub
inc
xor
jecxz
pop
xor
sar
inc
int3
jmp
and
outs
xor
test
sub
or
sub
fwait
(bad)
loopne
scas
mov
sub
or
ins
xor
jmp
scas
test
jae
ret
mov
mov
xor
cmp
mov
and
xor
inc
or
inc
mov
sub
gs
add
ins
nop
adc
ret
xchg
nop
sbb
sbb
arpl
pusha
xchg
xchg
fimul
sbb
mov
or
pop
mov
test
xchg
mov
xchg
ins
ret
jns
(bad)
retf
push
xor
stos
int
cmps
push
lock
or
xchg
pop
div
jecxz
(bad)
and
jae
inc
fdivr
loopne
out
dec
sbb
clc
or
mov
mov
and
in
mov
repz
cmp
cld
xchg
mov
movs
call
sub
fnsave
in
mov
pop
ins
and
dec
pushf
mov
call
cmp
and
xchg
(bad)
adc
pop
cmp
pop
outs
or
dec
iret
(bad)
xlat
adc
aaa
dec
mov
popf
clc
(bad)
cmc
cmc
xchg
jp
inc
pop
scas
xor
(bad)
jmp
loop
adc
shl
cmp
(bad)
sti
adc
addr16
nop
ds
lods
xor
mov
push
fwait
jp
movs
dec
rol
(bad)
push
mov
test
js
mov
or
xchg
inc
clc
adc
movs
icebp
rcr
xchg
std
enter
cmp
pushf
test
mov
cmp
cmc
push
hlt
clc
pusha
aas
out
ror
add
dec
and
mov
sbb
fiadd
xor
adc
scas
and
in
mov
cs
pop
xchg
sub
lods
add
cmc
add
sub
shl
(bad)
sbb
pop
(bad)
or
or
push
lods
push
sbb
cs
sar
ins
pop
jb
aad
pop
xchg
lahf
inc
js
pusha
and
ss
push
fstp
jne
cdq
cmc
les
or
int3
push
xor
std
jecxz
add
sub
test
int
mov
xor
iret
sbb
jl
movs
pop
push
mov
xchg
sbb
rcl
div
in
jge
dec
cmps
inc
push
xchg
std
inc
jo
out
or
sbb
sub
mov
(bad)
and
sbb
rol
mov
jecxz
movs
int
xor
mov
xchg
mov
inc
mov
retf
scas
clc
mov
cmp
iret
in
push
cmp
aam
inc
outs
cmp
(bad)
or
mov
out
xlat
jnp
push
jle
pushf
and
mov
cmp
or
dec
add
fst
inc
pop
lds
xor
loopne
mov
in
jle
mov
push
pushf
(bad)
fld
popa
lea
dec
pop
dec
call
xchg
mov
ret
push
jb
movs
popa
inc
or
mov
pop
ins
pop
sub
sbb
sbb
xchg
ret
popa
rcl
push
dec
(bad)
into
dec
mov
mov
in
adc
dec
sub
or
adc
cld
xchg
push
fnsetpm(287
es
ds
out
cmps
pop
and
cli
push
mov
jne
movq
adc
sbb
mov
dec
push
pop
out
das
push
daa
dec
aam
mov
lea
popa
mov
std
xchg
pop
jnp
sub
xchg
lds
test
pop
aad
sbb
xor
retf
jp
sub
scas
dec
out
loopne
dec
mov
js
add
mov
jb
addr16
stc
push
aas
push
sbb
adc
sbb
imul
sbb
int
pop
jae
xor
sti
cmp
add
cmp
in
jl
dec
je
inc
fstp
xchg
xlat
in
dec
fnstcw
sbb
dec
popa
gs
enter
rcl
nop
stos
inc
mov
adc
daa
sub
jo
push
xor
icebp
sub
pop
sbb
xchg
outs
or
push
imul
push
scas
xchg
lahf
pop
loope
test
sbb
jge
mov
scas
shr
out
or
dec
dec
sar
push
adc
lods
popf
retf
jne
or
repz
xchg
in
or
in
imul
das
sahf
stc
js
sub
int
sub
in
sub
jle
into
scas
push
pop
push
jne
push
ds
test
aaa
mov
inc
push
and
sbb
cmp
jle
inc
loopne
ja
jb
jmp
and
je
popf
jb
dec
add
hlt
dec
ja
mov
dec
scas
adc
shl
sub
cld
mov
bound
je
call
sub
jo
lea
xchg
jno
sub
(bad)
or
jle
mov
mov
sub
pop
aad
mov
loopne
add
ret
cli
jle
sbb
adc
ins
lock
xlat
imul
cmp
fcmovu
ret
repnz
sub
out
mov
mov
popf
and
or
mov
sub
js
xor
jae
or
add
test
shl
xchg
adc
(bad)
pop
and
jecxz
inc
add
cmp
aas
gs
pop
mov
fcmovne
mov
jno
sbb
mov
into
add
cmp
(bad)
push
clc
inc
xor
in
fwait
ret
not
sahf
or
sbb
stos
andnps
dec
mov
adc
mov
push
jae
(bad)
add
fimul
jnp
xchg
mov
cmp
cli
inc
dec
pop
ret
and
or
jnp
jbe
mov
fld
dec
in
nop
int3
dec
and
les
in
lds
pop
adc
dec
(bad)
imul
adc
inc
and
lods
xchg
out
imul
stc
into
xchg
retf
push
dec
imul
test
xchg
jl
int
lods
adc
inc
fidivr
mov
lock
dec
adc
in
ins
imul
pop
scas
imul
push
gs
cmp
rcr
dec
iret
fimul
in
dec
ja
jnp
jo
inc
mov
shl
mov
fcmovnb
mov
imul
(bad)
out
adc
into
test
cmp
in
mov
sbb
sub
pop
sub
ret
mov
or
dec
mov
dec
lock
iret
xchg
sar
adc
test
ins
shl
loopne
sti
cld
mov
test
push
sti
hlt
aaa
or
xor
cs
sub
mov
add
push
inc
xor
mov
mov
stc
das
aaa
mov
imul
aad
ror
out
ss
aas
pop
(bad)
cmp
sbb
inc
pop
ins
nop
mov
push
or
push
es
mov
jmp
icebp
cdq
outs
sbb
mov
jno
mov
pop
pop
icebp
adc
ror
imul
cld
push
and
retf
mov
jbe
es
mov
out
add
enter
pop
nop
lahf
cmp
gs
jmp
add
cld
(bad)
cli
xchg
in
cmps
push
into
jp
pushf
out
jmp
ja
mov
mov
(bad)
sahf
in
adc
fld
sub
pop
lock
aaa
in
push
mov
outs
xchg
dec
(bad)
fs
xor
adc
hlt
cmp
leave
mov
mov
movs
pop
push
mov
adc
sbb
adc
jp
pop
dec
push
jecxz
pop
icebp
jmp
fwait
bound
jecxz
(bad)
fnstcw
sar
mov
lods
cdq
xchg
cld
sbb
arpl
enter
in
push
xchg
mov
(bad)
fwait
push
and
cmp
pop
nop
jnp
sub
pop
popaw
mov
test
loope
cmp
loopne
bound
jg
das
outs
adc
mov
push
fwait
dec
popf
hlt
push
icebp
sub
jnp
stos
cmc
sbb
call
scas
add
cmps
out
push
cmps
mov
ror
loopne
mul
(bad)
sbb
sbb
outs
and
add
cmc
pop
addr16
std
inc
inc
aas
sbb
add
inc
arpl
retf
(bad)
ins
xor
and
jmp
cmc
dec
call
retf
stc
or
or
int3
mov
jmp
dec
sbb
lock
out
mov
and
enter
leave
xchg
jmp
xor
shr
jecxz
(bad)
add
inc
lock
ja
and
dec
scas
test
lock
cli
and
and
pop
xor
pop
aas
ds
add
push
(bad)
popa
(bad)
and
fmul
cdq
retf
jae
mov
(bad)
mov
inc
xchg
fwait
sbb
stos
inc
xor
xchg
ds
or
xlat
ss
and
pop
mov
xchg
push
mov
add
cmps
sub
mov
mov
mov
cmps
sbb
xor
je
jecxz
das
popa
lahf
sbb
scas
jo
or
push
fmul
stc
punpckhwd
int
jecxz
mov
aaa
test
in
stc
in
adc
xchg
mov
push
push
jns
int
stos
mov
cmp
loopne
fist
pop
mov
in
cmp
js
jnp
fist
add
sbb
enter
push
test
push
je
add
push
mov
inc
mov
mov
cmc
xor
cwde
lahf
inc
pop
jno
push
movs
mov
movs
jns
cld
jmp
stc
mov
mov
in
inc
pop
pop
inc
enter
lahf
push
loop
pop
in
ins
sub
jb
ds
xor
fimul
inc
fidiv
mov
(bad)
cld
loop
leave
in
rcl
fcmovnbe
or
mov
push
pop
xor
lods
fs
jle
lds
sub
sub
mov
mov
jle
xor
dec
call
scas
pop
push
adc
(bad)
sub
mov
(bad)
jl
and
add
out
frstor
std
dec
addr16
push
mov
mov
jbe
ja
fcomp
sbb
xor
sub
mov
adc
xor
jge
sbb
cmc
data16
mov
stos
mov
fs
aad
cli
jge
push
enter
imul
jbe
inc
pop
or
mov
in
mov
jnp
push
loop
out
int3
mov
fmul
dec
nop
pop
daa
(bad)
std
or
xor
mov
cmp
ds
retf
hlt
fimul
icebp
mov
pop
sbb
ds
pusha
test
sub
push
hlt
push
aas
mov
inc
mov
cmp
jge
dec
push
ds
xor
aaa
bound
out
or
outs
or
(bad)
ja
jae
jmp
mov
and
cmc
popf
aad
inc
push
leave
mov
imul
push
das
inc
ret
xchg
mov
inc
xchg
jmp
add
jmp
outs
lock
and
mov
or
test
call
dec
scas
aaa
out
scas
cwde
into
and
iret
xor
and
sbb
ret
mov
cmp
(bad)
pusha
ins
cmp
push
in
push
push
popa
xlat
inc
jbe
fs
leave
call
inc
xchg
pop
jl
xor
cli
pusha
into
inc
clc
je
pop
xor
sub
popf
adc
rep
cs
add
jne
xchg
mul
loope
dec
dec
hlt
pushf
cdq
xchg
out
push
ficomp
fwait
into
jne
jno
push
ret
movs
cld
sbb
jb
out
jle
sub
push
(bad)
adc
ror
sbb
and
retf
inc
ficomp
pushf
push
test
push
outs
mov
cmp
ins
in
hlt
mov
(bad)
xchg
xchg
movs
(bad)
xor
rol
cmps
xor
sub
add
int
mov
push
(bad)
fbstp
inc
lahf
cld
jae
gs
gs
mov
jge
jmp
mov
ror
and
cli
bound
loopne
inc
js
shl
xor
stos
pop
xchg
push
jo
and
dec
leave
repnz
test
sti
jnp
fsub
mov
in
imul
mov
cld
xor
es
jl
push
iret
mov
ss
cmps
push
xor
pop
add
push
mov
(bad)
mov
js
lock
pop
xchg
fsub
stc
(bad)
(bad)
or
xor
and
sub
xchg
aam
inc
dec
outs
test
psrlq
loop
cmp
pop
je
mov
pop
cmc
jb
mov
clc
(bad)
and
pop
in
ja
lods
pop
or
sub
jbe
inc
je
mov
les
and
out
push
(bad)
fwait
xchg
loopne
loop
push
mov
inc
out
mov
adc
mov
mov
das
xlat
retf
push
call
mov
pop
sbb
adc
or
pop
pop
fucomi
inc
mov
movs
dec
xor
(bad)
daa
jp
mov
pop
fst
(bad)
aas
rol
push
test
xchg
inc
sub
sahf
or
cwde
and
aad
xchg
xor
adc
xor
(bad)
std
shl
mov
xchg
int
dec
or
or
popa
xor
push
adc
cmps
dec
inc
loopne
fnstcw
rol
ret
sahf
rol
jle
or
hlt
pop
cmp
stc
or
push
push
out
mov
hlt
mov
inc
mov
push
mov
clc
dec
jo
in
xchg
dec
lds
pop
push
das
mov
nop
das
inc
retf
fsubr
(bad)
mov
stos
js
or
test
mov
sub
pop
ror
inc
adc
sbb
or
and
mov
xor
shl
fsub
push
aam
and
orps
mov
clc
pusha
adc
xchg
inc
xor
arpl
sbb
imul
sbb
call
xchg
inc
or
sbb
je
ja
dec
outs
mov
mov
fwait
movs
fld
iret
push
in
mov
in
pop
sub
(bad)
repz
push
(bad)
cld
xor
sbb
je
in
retf
jne
outs
cld
xchg
scas
call
xchg
sub
cmp
jo
test
popa
sub
cmp
rcl
outs
push
(bad)
cmps
fisubr
cmp
mov
sbb
adc
push
or
adc
fisub
dec
or
xchg
inc
adc
xor
in
icebp
sbb
and
(bad)
mov
add
jmp
xor
pop
and
fimul
inc
lea
adc
or
outs
mov
call
sar
push
iret
les
(bad)
fidiv
nop
dec
push
inc
add
xchg
nop
cmc
cwde
sbb
jge
inc
dec
in
imul
nop
push
movs
sub
pop
shr
ds
bound
gs
mov
in
sbb
fnsave
sub
and
sbb
popa
inc
xor
mov
addr16
mov
movs
in
jl
xchg
ja
loopne
adc
shl
daa
sbb
add
sbb
iret
out
pop
xchg
pop
xor
sub
in
xor
and
(bad)
adc
loopne
arpl
add
ds
mov
sbb
sub
aaa
bound
retf
outs
jbe
loope
pop
xabort
movs
sbb
in
and
and
mov
mov
mov
dec
ret
cmc
in
inc
shl
mov
out
test
addr16
popa
pop
ret
pop
loop
popa
jle
(bad)
popf
xchg
mov
pusha
xchg
das
idiv
fistp
sbb
stc
xchg
xchg
scas
push
in
ins
test
pop
out
push
mov
nop
inc
xor
out
sub
in
cmp
inc
scas
xchg
adc
es
call
imul
cdq
jle
sbb
sar
push
cmp
imul
(bad)
scas
cmp
or
xchg
call
outs
adc
daa
dec
mov
ror
daa
inc
out
dec
push
mov
sbb
popf
push
leave
or
jmp
mov
xor
cmps
pushf
jle
or
mov
in
pushf
fs
call
dec
addr16
push
adc
pop
into
int3
push
idiv
gs
(bad)
clc
(bad)
outs
dec
dec
mov
call
sub
xchg
mov
pop
sbb
xor
jno
(bad)
fsub
sub
cld
test
adc
into
cs
call
aas
test
es
in
mov
inc
movs
mov
test
mul
dec
xchg
cmc
push
xchg
cmc
inc
jg
or
cmp
adc
push
test
sub
(bad)
dec
pop
cmp
adc
es
js
mov
popf
sub
inc
pop
cmp
pushf
into
sbb
dec
jns
das
fadd
mov
adc
(bad)
retf
sub
mov
sbb
and
inc
mov
mov
sbb
and
xchg
sub
jl
aam
fld
ret
(bad)
mov
adc
pop
sbb
xor
mov
mov
pop
in
test
sahf
push
xor
call
jp
retf
xchg
aaa
dec
sbb
inc
pop
pop
loopne
cli
sbb
mov
cdq
or
mov
int3
mov
sbb
mov
pop
imul
aas
inc
jmp
jmp
jmp
stc
mov
push
fdivr
sub
xchg
pop
pop
scas
loope
mov
(bad)
mov
(bad)
xor
jns
cmps
push
cmp
mov
pop
push
sub
in
add
jge
mov
shl
xor
jg
sub
push
jle
inc
inc
loop
shl
xor
vphaddubq
bound
or
sub
fmul
or
repnz
mov
add
retf
push
sbb
cmp
loopne
aaa
fisttp
sub
push
jns
(bad)
loope
jae
mov
cmp
test
jg
dec
add
pusha
mov
int3
clc
idiv
pop
push
test
adc
xlat
jp
and
jae
nop
leave
xchg
xor
ds
jae
push
test
inc
dec
jmp
cmc
movsx
dec
scas
sti
pop
pop
push
and
dec
mov
xchg
inc
movs
push
jle
jb
repnz
xor
ficomp
mov
cmp
(bad)
xor
add
xor
pop
push
add
movs
cmp
out
lods
in
jmp
daa
inc
jb
xor
rol
aad
fadd
push
call
adc
mov
rcr
push
fldcw
mov
aaa
stos
and
push
cwde
cmps
inc
mov
call
jmp
mov
push
fcmovu
push
(bad)
adc
scas
aas
inc
add
popa
sub
fwait
sbb
jno
jmp
inc
inc
shl
sbb
or
imul
inc
mov
cmp
cmc
add
test
daa
pop
dec
jmp
inc
and
xor
xchg
loope
aas
out
mov
arpl
imul
mov
sub
in
xor
or
adc
loop
pop
mov
adc
jo
jle
es
(bad)
sahf
fst
addr16
test
nop
stos
rcr
lahf
loop
fwait
retf
cmp
cwde
and
push
shl
cwde
or
test
ret
jo
lods
mov
fwait
sub
sub
dec
rcr
jne
inc
inc
scas
adc
sbb
(bad)
jp
jmp
ret
push
and
into
mov
and
jmp
push
sti
sbb
add
retf
dec
(bad)
jmp
gs
jg
dec
neg
xchg
jbe
cmps
sub
mov
lock
cmp
xchg
pushf
mov
scas
sub
xor
dec
je
ja
pop
mov
shl
ja
lods
and
push
loope
cmc
rol
outs
adc
call
aam
add
ret
lds
or
daa
cmp
push
inc
daa
mov
sbb
call
jmp
push
xor
shl
xor
or
adc
rcl
ins
mov
sub
lods
addr16
div
mov
test
push
fisttp
cmc
lds
(bad)
or
cs
push
and
jge
xor
stos
cmp
stos
ss
sub
(bad)
sub
cmps
and
rol
icebp
shr
out
ds
or
xchg
dec
neg
jecxz
push
add
cmp
(bad)
push
xchg
call
popa
push
jmp
es
imul
mov
inc
pop
xor
es
and
cli
pop
jne
fs
push
xor
fsubr
push
pop
std
cdq
xchg
sub
mov
(bad)
mov
fldenv
and
jp
jns
icebp
cs
mov
cli
mov
icebp
jle
shr
dec
mov
pusha
into
dec
(bad)
call
push
pusha
fidiv
jb
aam
and
mov
sbb
and
adc
stos
sbb
jmp
xchg
fcomp
es
ins
mov
mov
push
and
mov
jo
jo
repnz
mov
sahf
(bad)
push
or
loope
mov
add
out
sahf
fild
sub
in
(bad)
push
mov
lods
mov
inc
in
sbb
cmp
in
in
ins
jno
gs
sar
mov
cmp
and
or
or
jmp
inc
push
push
std
or
xchg
sub
xor
cmp
in
out
add
xchg
call
lahf
xchg
jns
daa
lea
mov
adc
ficomp
(bad)
sar
int3
push
icebp
test
jecxz
repnz
(bad)
dec
sahf
xchg
addr16
jb
sub
adc
mov
clc
inc
pop
retf
jmp
adc
sbb
neg
xchg
pop
(bad)
jne
pushf
jg
in
lock
gs
imul
fiadd
mov
shl
xchg
das
jp
scas
sub
or
or
mov
div
repz
(bad)
inc
adc
sbb
add
call
xchg
pop
mov
mov
gs
mov
push
inc
loopne
ins
push
mov
sahf
inc
mov
and
push
xlat
sub
mov
adc
mov
push
sar
mov
jmp
pop
bound
mov
mov
jno
pop
sub
inc
pushf
jae
push
pushf
movs
push
std
(bad)
mov
xchg
lods
push
retf
dec
imul
xchg
xchg
add
xor
add
jae
je
sub
xchg
mov
popf
jmp
cld
cmp
mov
repz
jbe
inc
sbb
(bad)
adc
inc
sbb
sti
adc
inc
mov
gs
ret
aaa
inc
mov
xchg
and
push
ss
and
mov
jmp
loope
retf
aas
test
retf
sar
sub
cld
inc
dec
push
and
sub
aad
xor
xlat
sti
ret
cmp
push
sbb
jle
lods
call
and
xor
cwde
iret
enter
in
push
cmp
das
lea
clc
push
loope
and
fiadd
jno
pusha
stos
repnz
and
mov
pop
xchg
and
add
jbe
cld
dec
jle
dec
stc
xor
fs
push
cmp
fs
push
cmps
cdq
retf
je
outs
add
jecxz
sbb
cmps
pop
push
mov
les
xor
or
and
xor
pusha
(bad)
xor
out
rol
push
aam
sti
and
cmps
mov
xor
test
jne
xchg
mov
jcxz
pop
movs
cs
sbb
sbb
jmp
dec
adc
dec
stc
leave
push
fldcw
mov
sbb
unpcklps
dec
retf
movs
ds
mov
sbb
dec
adc
into
mov
enter
sahf
sti
mov
test
pop
xchg
jno
ja
mov
fst
ss
int3
repz
aaa
adc
push
imul
dec
adc
jle
cli
add
adc
xchg
shr
or
cmp
loope
sbb
or
hlt
repz
mov
adc
(bad)
retf
xlat
ror
add
iret
mov
lds
cmp
retf
out
adc
(bad)
(bad)
(bad)
es
repnz
cmp
and
or
jnp
sbb
je
sub
dec
cli
imul
pushf
mov
or
test
push
jmp
xor
outs
jne
add
sbb
xor
sbb
(bad)
adc
rep
add
aaa
enter
mov
(bad)
and
fcmove
imul
and
mov
loopne
imul
push
in
inc
xchg
cmps
jo
outs
cmp
push
sar
jmp
int3
sbb
repz
sbb
call
ret
push
inc
repnz
sub
fisub
test
fdivrp
add
cs
scas
push
inc
mov
shl
test
add
jb
stos
mov
adc
stos
addr16
cwde
pop
mov
retf
test
out
fcomp
fldcw
cmp
stc
sbb
xchg
lds
cld
bound
stc
mov
retf
mov
mov
mov
xchg
mov
mov
cwde
or
out
push
mov
iret
xor
test
cmps
xchg
scas
div
push
adc
jge
rol
dec
xor
das
adc
pop
pop
xor
push
push
cmp
shl
(bad)
icebp
shl
push
ret
dec
ret
adc
jnp
int
xor
test
xor
add
mov
inc
je
mov
pushf
or
add
dec
int3
mov
(bad)
jnp
push
mov
ins
addr16
shl
stos
cmp
mov
mov
push
js
cmp
mov
sub
sub
call
and
pop
mov
into
fild
mov
xor
rol
loopne
sti
and
daa
(bad)
test
jns
pop
imul
push
xchg
jo
(bad)
fild
adc
xor
or
je
add
in
cmp
rcl
es
jge
in
inc
dec
jbe
pop
or
hlt
mov
push
gs
sbb
jbe
or
mov
add
mov
dec
or
in
mov
shl
add
inc
pop
pushf
test
repz
jno
je
test
or
fld
sbb
arpl
dec
mov
add
fst
cwde
xchg
push
pushf
lds
setns
push
stos
sbb
sub
jle
add
pop
int
mov
shl
sub
add
test
fidivr
adc
ins
popa
mov
mov
inc
add
fmul
xchg
cwde
xor
xchg
xchg
ror
mov
enter
mov
int3
js
fadd
xchg
iret
inc
or
cli
xchg
out
sub
frstor
mov
xlat
and
mov
icebp
test
imul
scas
jo
add
hlt
imul
mov
in
push
add
push
daa
dec
jo
iretw
cmps
loopne
or
or
cmp
jo
xlat
cmp
push
mov
dec
out
cmp
aam
xchg
imul
pop
retf
or
jmp
sahf
out
mov
mov
rol
repz
xor
xor
ret
into
cmps
aam
lds
or
cs
inc
daa
js
loope
scas
adc
dec
mov
or
mov
rcl
xchg
mov
enter
lds
pop
int
sahf
mov
loope
jge
xor
sbb
hlt
inc
dec
mov
loop
mov
or
int3
inc
mov
div
clc
es
add
ss
scas
movs
scas
aam
or
and
test
add
(bad)
daa
popf
dec
out
or
jp
mov
and
jp
pop
aam
sar
pusha
(bad)
jp
rol
outs
sub
cmp
xchg
xlat
sub
push
cmps
sti
push
xor
sub
sbb
fstp
out
mov
pop
push
pop
fdiv
pushw
aas
aas
lds
add
(bad)
pop
cdq
cmp
adc
lods
mov
aam
pop
adc
mov
sbb
addr16
jle
daa
(bad)
(bad)
mov
jbe
and
or
pop
inc
jl
add
cwde
xor
js
das
inc
movs
test
push
mov
jmp
jmp
jl
push
mov
mov
int3
pop
cmp
jns
cld
pop
int3
jo
rcl
push
dec
push
cmps
inc
dec
ficom
pop
cmp
push
mov
(bad)
out
cmp
call
inc
in
mov
jp
pop
and
xchg
mov
or
stc
or
clc
arpl
xchg
dec
xchg
dec
vunpckhps
out
pusha
stos
jno
dec
inc
jle
mov
repz
clc
dec
jae
or
std
rol
jo
test
sub
mov
popf
push
push
and
inc
(bad)
sahf
inc
loop
push
inc
(bad)
mov
push
or
out
add
sub
(bad)
sub
popf
in
into
mov
pop
std
test
enter
jle
push
mov
sub
push
push
aaa
push
sar
dec
pop
loope
leave
sub
or
pop
mov
stos
sub
cmp
add
adc
xchg
jle
sub
dec
xchg
xor
dec
cmp
fimul
push
mov
jmp
jmp
push
mov
dec
aad
loopne
(bad)
cmp
(bad)
dec
and
mov
pop
jg
jge
push
push
jno
jle
mov
mov
inc
pop
xor
xor
pop
dec
cld
and
(bad)
repz
mov
enter
dec
aad
or
clc
sbb
add
inc
in
sbb
xchg
or
aad
neg
arpl
mov
push
sahf
pop
aas
lea
sub
and
addr16
ret
sub
shr
push
inc
mov
jae
jle
in
jecxz
sub
js
mov
cmp
or
cli
fdivp
ret
push
iret
jecxz
pop
xor
push
mov
or
repnz
clc
mov
movs
call
lods
imul
lock
mov
adc
pop
movs
outs
arpl
add
adc
fs
inc
rol
pop
mov
pop
inc
(bad)
dec
xchg
adc
xchg
hlt
inc
mov
pop
and
fnstenv
ret
pop
xchg
jmp
mov
fnstcw
call
cmp
mul
das
push
mov
data16
mov
leave
add
ss
in
sub
bound
fwait
in
jl
fimul
out
test
aaa
push
loope
fimul
pushf
dec
cmp
js
mov
lock
mov
arpl
movs
fistp
jae
jmp
cmps
mov
pop
div
push
dec
jns
inc
(bad)
test
popa
add
lea
pop
mov
jno
dec
xchg
dec
push
pop
push
mov
add
push
add
dec
xor
mov
in
cmp
pop
pop
out
inc
jge
movs
xor
nop
pop
adc
mov
jo
xor
xlat
mov
xor
ins
and
es
jae
outs
jae
dec
cmp
push
pop
add
(bad)
jecxz
repnz
push
or
aam
mov
sub
scas
push
dec
pop
enter
pop
pop
xchg
jno
lahf
and
loopne
(bad)
in
sub
inc
jmp
repnz
retf
add
jg
aad
js
movs
push
outs
pop
call
and
push
xor
jmp
retf
stos
into
mov
sti
imul
cmp
and
jne
mov
adc
mov
mov
push
test
and
retf
nop
mov
cdq
fistp
cmp
out
cmps
div
sub
lods
adc
pusha
or
jmp
shl
mov
call
pushf
shr
outs
in
(bad)
mov
test
outs
popf
stos
jge
inc
or
mov
add
rcr
lods
hlt
loope
into
out
xchg
inc
mov
rol
das
and
cli
dec
out
cld
pushf
dec
pop
mov
mov
fsub
int
movs
jno
retf
icebp
sub
push
jb
and
sub
mov
xchg
or
ins
inc
(bad)
adc
jo
lock
mov
mov
outs
mov
out
and
dec
(bad)
call
dec
push
jo
and
xchg
dec
sub
call
jbe
imul
jmp
mov
and
js
outs
aad
iret
fadd
push
sub
(bad)
jmp
push
pop
xor
mov
lods
pop
pop
push
fisubr
mov
push
inc
gs
add
gs
dec
jb
ficomp
mov
shl
or
xlat
mov
pop
mov
push
(bad)
xor
jle
and
mov
inc
cld
shr
jo
xchg
push
das
pusha
imul
pop
inc
fsubr
adc
mov
lahf
je
jno
daa
cli
mov
xchg
push
inc
xchg
jl
push
test
mov
shl
xacquire
xchg
push
fisubr
cli
dec
outs
or
test
sub
(bad)
hlt
mov
sub
lods
ds
jno
je
sahf
lock
call
inc
mov
leave
xlat
es
test
cld
nop
xchg
pop
or
jno
retf
and
aas
adc
mov
push
dec
popf
imul
sbb
fild
lea
stos
cmc
sahf
mov
sub
jae
and
mov
clc
or
push
xor
sub
cmp
cs
jo
popf
sub
lock
and
inc
retf
adc
and
(bad)
xor
sbb
cmp
ficomp
leave
and
xchg
div
cmp
add
test
data16
or
out
shl
scas
mov
stos
cld
out
push
iret
sahf
jns
inc
xor
lock
jo
sub
rol
or
fistp
jge
loope
out
jp
pop
push
mov
add
sbb
xor
pop
or
rol
xchg
xchg
add
movs
mov
aas
mov
inc
shl
cmc
call
(bad)
mov
jbe
push
fyl2xp1
dec
adc
and
pop
es
adc
inc
xor
(bad)
push
xor
cmps
xchg
jno
mov
aam
clc
mov
jle
loope
cmc
xchg
and
push
jle
xchg
mov
dec
rcl
xor
inc
pop
mov
add
lahf
dec
xor
popa
pusha
js
lods
and
out
sbb
jl
(bad)
in
inc
push
xchg
push
inc
add
mov
jmp
dec
sub
shl
and
or
(bad)
lahf
pop
cld
lock
into
nop
sar
push
and
aad
cmp
cmp
jae
dec
fadd
push
or
arpl
cmps
shl
jno
scas
jae
ins
(bad)
jae
retf
loope
mov
xchg
xchg
je
es
add
imul
aaa
in
pusha
add
std
ins
sbb
jnp
adc
ins
bound
dec
cmp
out
pop
(bad)
fst
retf
and
(bad)
jmp
(bad)
inc
jmp
imul
cmp
xor
dec
xor
and
in
je
push
lea
test
inc
ret
push
test
adc
test
test
fsub
lds
pop
adc
and
fmul
les
(bad)
jb
(bad)
sbb
mov
test
aad
inc
mov
xor
dec
jno
sti
jae
pop
es
xchg
xchg
bound
pop
add
xor
dec
dec
js
sbb
shl
sahf
ss
sti
stc
sub
or
mov
adc
dec
je
(bad)
mov
push
(bad)
adc
pop
ror
popf
push
(bad)
cmp
cmc
jnp
les
xchg
jmp
adc
icebp
xlat
xchg
fisttp
aam
push
inc
into
movs
rcl
add
sbb
std
jmp
mov
sti
mov
ja
ja
and
jg
jecxz
xchg
sub
into
fcom
ja
stos
aam
call
ffreep
ffree
pop
stos
fwait
fs
in
test
mov
mov
(bad)
enter
neg
out
push
leave
push
clc
in
leave
push
cmps
lar
pop
push
(bad)
div
sub
sub
stos
nop
das
pop
call
push
stos
sub
adc
or
jae
out
push
and
cmps
jo
sahf
push
add
or
cmps
jle
(bad)
add
addr16
fcomi
outs
jnp
sbb
je
adc
xchg
mov
pusha
and
inc
push
push
xor
push
jb
mov
dec
cmp
ret
fnstenv
xor
lods
cmp
mov
or
(bad)
in
movs
mov
outs
xchg
push
jmp
repz
test
mov
shl
pop
movs
or
mov
imul
in
sub
jp
and
inc
xor
add
dec
xor
xor
xchg
stos
ins
aad
mov
movs
cmp
mov
inc
xchg
or
mov
test
mov
push
or
cdq
add
mov
in
sub
pop
or
pop
fs
and
into
jnp
adc
push
or
pop
sbb
ins
and
int
movs
cld
leave
fwait
mov
push
hlt
jmp
cwde
(bad)
enter
retf
sbb
lds
push
xor
mov
pop
pop
in
lods
add
fdiv
js
adc
inc
aam
(bad)
add
inc
sar
jle
sbb
aam
imul
sub
pushf
ins
mov
push
xchg
sbb
iret
cmp
das
cmps
jo
xchg
ret
xchg
in
addr16
mov
push
jp
jmp
adc
sub
imul
add
xchg
(bad)
cld
push
jge
(bad)
dec
push
ret
push
movs
std
pushf
xchg
dec
fisttp
jns
mov
cmp
out
pop
push
push
(bad)
imul
je
sbb
rcr
fisttp
jmp
jmp
daa
cdq
iret
test
sbb
xchg
out
pop
stc
jns
rcr
or
(bad)
loopne
lods
test
in
cmp
fdiv
into
sahf
inc
push
cld
icebp
popf
or
ret
(bad)
cmp
(bad)
sub
xor
dec
xor
xchg
push
mov
mov
popf
push
bound
fbstp
outs
int
ins
ja
ins
add
lods
jbe
mov
int3
retf
mov
xlat
adc
std
xor
push
add
sti
lahf
push
(bad)
mov
xchg
adc
fwait
retf
movs
mov
adc
xor
cs
jmp
adc
xor
loopne
mov
mov
xor
push
dec
inc
add
and
scas
xchg
in
int
ret
and
jbe
cld
sub
test
xor
push
sub
in
xor
mov
stos
out
fidivr
sub
ja
pop
mov
loope
shl
sbb
mov
xchg
sbb
lods
lds
sbb
js
ret
int
pop
sub
hlt
stos
enter
dec
cli
cmc
imul
mov
gs
jmp
push
and
add
loope
stos
pop
out
fstp
out
push
lahf
lock
jo
js
aaa
clc
adc
jo
xor
push
fiadd
je
loope
fsub
jnp
mov
xlat
mov
aas
inc
cmp
xchg
hlt
xchg
push
dec
mov
test
enter
ror
(bad)
outs
mov
ret
fld
mov
sbb
pop
out
xchg
fwait
les
mov
bnd
sub
push
inc
dec
std
mov
ret
push
out
xchg
pop
shl
nop
push
adc
mov
mov
in
xor
arpl
inc
daa
pop
jb
test
cs
cld
movs
fwait
jbe
jns
xchg
pop
outs
ss
adc
inc
push
mov
sub
mov
outs
out
mov
push
lahf
dec
stc
mov
in
push
gs
sbb
xor
popf
push
push
loopne
sbb
or
inc
in
push
lock
stos
fwait
mov
xchg
or
and
test
inc
lods
xor
cwde
inc
xchg
push
retf
and
sub
dec
pop
(bad)
in
fbld
and
pop
cmc
je
cmp
or
mov
movs
shl
add
leave
xchg
call
cmp
lods
push
mov
mov
cmps
cmp
push
cld
test
xor
es
xor
add
adc
mov
mov
push
push
push
aas
cmp
sub
mov
shr
mov
lea
jno
xchg
(bad)
xor
cmp
adc
movs
or
pop
ret
push
cmp
enter
sbb
cmc
fcom
data16
and
mov
(bad)
mov
in
repnz
sub
pop
fstp
sub
push
mov
cmc
mov
lods
or
imul
ja
jle
(bad)
cmp
mov
and
adc
ins
mov
xchg
adc
(bad)
push
adc
add
std
mov
rcl
xor
js
mov
sbb
enter
mov
popf
out
xchg
aam
pop
mov
(bad)
loope
call
dec
push
push
iret
sub
sbb
sbb
sbb
xchg
fmul
and
xchg
dec
in
sbb
js
inc
ja
nop
aaa
and
add
jbe
ss
add
dec
ror
cmp
popa
inc
pusha
(bad)
out
imul
sbb
inc
sbb
xor
pop
addr16
aam
in
in
out
mov
jg
mov
test
dec
lods
stc
or
stc
je
(bad)
pop
ja
retf
sbb
into
or
loopne
mov
lahf
ret
inc
pop
jmp
mov
lods
in
dec
pop
mov
pop
sbb
jge
inc
jb
push
jl
and
xor
ret
call
(bad)
ds
or
adc
xchg
xor
daa
cmp
les
lods
cmp
or
jecxz
or
ret
enter
cdq
mov
xchg
mov
xchg
pop
lea
(bad)
xlat
call
push
dec
cmp
xor
push
pop
nop
ins
int3
cmp
jmp
test
je
push
loope
cmp
ins
dec
inc
jle
sar
cmp
and
in
call
sti
outs
(bad)
push
adc
(bad)
daa
les
mov
add
jmp
lahf
push
icebp
fmulp
mov
(bad)
push
lea
popf
or
sbb
xor
das
lock
xchg
gs
lahf
dec
pop
and
sti
mov
mov
jne
cdq
mov
cmps
mov
mov
loop
jmp
jle
stc
ret
inc
and
mov
cmp
daa
popf
push
add
cmc
stos
je
bound
push
add
jae
inc
ins
(bad)
pop
fdivr
lock
ins
push
mov
pusha
cdq
add
ja
xchg
jns
xor
sbb
lods
xchg
outs
add
inc
clc
pushf
push
jbe
jno
xchg
scas
mov
fwait
mov
dec
inc
pop
mov
adc
fdivr
jmp
je
pop
mov
jp
mov
xor
sbb
or
jo
cmc
ds
pop
hlt
movs
dec
push
add
fs
push
jecxz
xor
ss
loopne
sub
int3
cli
rcl
xchg
icebp
add
cmp
lods
mov
inc
xchg
(bad)
js
shl
clc
jp
aam
or
push
retf
loop
jmp
sub
std
js
cmp
jg
aam
outs
mov
sbb
adc
add
adc
jp
mov
jae
xchg
stos
mul
xchg
vpor
pop
sub
imul
xchg
pop
stc
jmp
xchg
rcl
(bad)
push
push
sbb
inc
ins
ss
pop
cmps
outs
sti
and
icebp
rcr
pop
cmps
jmp
stos
sub
addr16
in
push
mov
imul
inc
fwait
popa
sub
cmps
ja
or
add
out
push
cmps
xchg
or
(bad)
int3
mov
inc
xchg
retf
jmp
ret
mov
xlat
ins
gs
jge
inc
mov
call
in
push
sbb
mov
in
jge
lahf
pop
push
pop
jns
sub
add
add
pop
nop
cmp
jl
and
(bad)
pop
ret
push
and
sbb
inc
pop
out
cmp
or
and
(bad)
cli
pop
repnz
loop
mov
fsub
(bad)
mov
push
xor
jmp
jne
mov
inc
dec
pushf
sub
addr16
mov
lods
leave
pop
push
pop
sahf
aam
inc
fmul
jecxz
sbb
xor
test
adc
cmp
pop
repz
cmps
into
add
jns
dec
add
jbe
imul
hlt
inc
mov
push
adc
or
jmp
pop
xchg
inc
loop
call
inc
jp
add
cmp
pop
lds
pop
add
mov
mov
or
mov
ror
call
xchg
or
stos
fs
mov
fs
sbb
retf
ss
inc
dec
inc
shl
test
xchg
push
aad
sbb
jle
pushf
rcl
ss
add
mov
mov
adc
ins
iret
rcr
add
jmp
hlt
inc
xor
scas
xchg
cmc
fild
mov
sub
pop
gs
add
scas
inc
mov
pop
or
and
inc
out
xor
out
scas
stos
lea
(bad)
mov
pop
cld
dec
xchg
movs
xchg
shl
fs
inc
cli
adc
icebp
cld
je
or
test
mov
shl
ja
inc
shrd
inc
loope
lahf
pop
shl
outs
xor
push
mov
les
pop
mov
adc
iret
adc
mov
adc
dec
xchg
leave
add
cmp
sti
sub
daa
mov
pushf
adc
jge
mov
sbb
push
fistp
imul
pop
cmp
sub
es
rol
test
push
int3
add
or
mov
aam
(bad)
(bad)
fs
or
jge
mov
cmp
pop
add
(bad)
pusha
jo
je
mov
pop
dec
cdq
sub
popa
mov
jmp
js
in
mov
xchg
and
jmp
mov
sti
push
pop
jle
clc
mov
outs
mov
pop
or
test
shl
enter
pop
inc
cdq
ror
xor
push
test
icebp
dec
jp
push
and
dec
std
xchg
int3
xchg
in
ins
cmp
into
adc
iret
mov
pushf
add
js
or
clc
xlat
mov
retf
cmp
aam
jb
cld
pop
dec
sbb
pop
in
ja
fistp
dec
out
pop
xchg
mov
jmp
imul
push
lods
xor
adc
jo
outs
and
movs
loop
xlat
inc
jge
imul
mov
inc
or
pop
(bad)
jp
ins
adc
cmc
or
inc
ins
or
shl
ins
xchg
rcr
mov
or
fstp
sti
stos
cmp
or
adc
ror
daa
fdiv
(bad)
ja
mov
sub
push
mov
(bad)
add
cmp
xchg
in
mov
retfw
push
jo
pop
or
jl
call
(bad)
add
xor
clc
mov
shl
mov
mov
mul
cmp
cmps
out
xor
add
sahf
xor
or
stos
test
xor
jns
icebp
push
jmp
mov
lods
mov
ret
mov
fistp
scas
imul
and
data16
das
test
push
shl
adc
jnp
stos
gs
stos
das
pop
sbb
jne
test
neg
cmp
in
(bad)
mov
adc
mov
adc
and
xor
adc
add
pop
in
mov
(bad)
movs
(bad)
sbb
dec
mov
adc
inc
loope
jge
in
(bad)
xor
rcr
pop
mov
jp
xchg
pusha
cmp
sbb
inc
rol
add
mov
push
inc
repnz
mov
jmp
jp
les
adc
bound
cwde
imul
in
iret
pop
adc
inc
adc
(bad)
mov
xor
in
loopne
mov
int3
cli
push
mov
rcl
mov
push
inc
dec
xchg
jae
fnstenv
add
adc
inc
or
ret
xor
imul
add
add
(bad)
fisttp
sub
retf
dec
lods
push
jp
mov
bound
and
mov
xor
test
jge
lahf
mov
repnz
gs
imul
jno
xchg
ror
jo
les
in
leave
nop
test
mov
and
sub
cmp
mov
ja
mov
adc
xor
out
jbe
jne
cld
nop
mov
add
pop
gs
jecxz
pop
aas
ds
cmps
loope
sahf
dec
push
dec
mov
mov
cld
lds
fstp
mov
jmp
adc
cmp
push
retf
pop
(bad)
sar
xor
movs
jns
pop
out
mov
mov
cmp
sub
sub
popa
dec
push
and
cwde
pop
and
pop
retf
push
call
iret
jecxz
aas
test
dec
and
add
mov
and
shl
jmp
pop
mov
fwait
pop
xchg
test
fistp
nop
xchg
pop
dec
push
scas
imul
aaa
loop
cmp
fiadd
and
retf
push
pop
xor
das
in
xor
fistp
push
retf
xor
inc
jno
sub
jmp
adc
(bad)
adc
ss
pusha
cmp
cmc
jl
pop
icebp
pop
pop
mov
lods
add
(bad)
dec
jno
out
lahf
pusha
fdivr
mov
arpl
or
sub
xor
retf
sbb
xchg
cdq
pop
imul
inc
jne
sahf
mov
stc
imul
mov
rcl
pop
aaa
rcl
jno
and
movs
ret
(bad)
sahf
add
jmp
adc
jle
nop
repnz
push
mov
lds
cmp
nop
(bad)
es
pop
retf
(bad)
out
movs
fidivr
adc
(bad)
pop
xchg
retf
bound
fmul
outs
push
cmp
rol
or
pop
pop
push
enter
mov
pop
or
inc
mov
pushw
ficomp
mov
cmps
push
dec
lods
pop
paddb
dec
xor
adc
push
aas
and
(bad)
add
sbb
push
xor
fisub
mov
lods
add
cld
retf
sar
imul
ins
stc
mov
mov
fisub
cli
in
mov
xchg
fbstp
imul
gs
imul
cmp
mov
mov
xchg
sbb
jle
push
dec
(bad)
jno
jmp
(bad)
jmp
fisubr
rcr
movs
pop
xor
pop
outs
call
int
(bad)
mov
sub
jb
sbb
popf
retf
sbb
jmp
adc
stos
add
daa
mov
out
gs
mov
push
popf
add
fwait
xor
sqrtps
adc
fbld
call
cmc
out
shl
cli
int
xchg
ja
cmp
jb
setae
in
(bad)
scas
mov
test
mov
leave
lock
pop
or
xchg
test
or
ret
cwde
lock
mov
cwde
or
gs
fstp
daa
mov
sbb
mov
push
sbb
out
jecxz
das
push
popa
out
rcl
mov
cmp
data16
ror
add
pushf
dec
repnz
and
rcl
jbe
leave
adc
neg
and
xchg
sar
les
data16
sub
lds
jmp
or
add
and
shl
mov
jb
mov
out
sar
push
adc
nop
lea
repnz
lds
mov
bound
cmp
and
xchg
sub
add
movs
jae
adc
cmp
fstp
popf
add
mov
test
cmc
mov
stos
adc
leave
xlat
pop
rcl
in
dec
pop
rcl
mov
and
(bad)
jne
iret
mov
dec
ja
ret
mov
mov
mov
out
je
mov
lea
addr16
push
lock
sub
inc
lea
cmps
jno
(bad)
push
loopne
push
cmp
jo
mov
inc
das
fiadd
xor
ins
cmps
rcr
mov
and
add
fbstp
neg
add
jne
cmps
pop
(bad)
loopne
or
lods
adc
jge
rcr
push
cld
mov
cmp
pop
add
pusha
xchg
js
das
retf
loope
jns
xchg
je
or
movs
(bad)
hlt
mov
xchg
enter
ds
mov
je
mov
pop
mov
int3
jmp
and
cmps
inc
call
outs
stos
xchg
jg
push
jbe
test
movs
push
fs
and
push
das
mov
jl
(bad)
jmp
jmp
mov
pop
adc
xor
mov
(bad)
xor
fstp
cwde
jle
fistp
(bad)
in
stos
and
fs
fistp
out
cmc
sub
int3
imul
xchg
mov
and
icebp
sbb
push
cmp
loopne
push
sbb
cmp
xor
fidiv
push
lds
add
mov
js
mov
cwde
call
cmc
outs
jmp
mov
push
test
icebp
movs
popf
xchg
inc
add
lods
adc
or
out
mov
mov
dec
add
cmps
add
shl
icebp
add
jb
or
test
pop
stc
or
cmps
inc
jmp
mov
pop
(bad)
dec
or
cmps
aas
xor
in
ins
lods
mov
dec
call
(bad)
call
scas
leave
mov
cmp
fst
rcr
jb
or
dec
or
sbb
jp
mov
adc
mov
ret
ffreep
ror
out
ds
jmp
sti
xor
mov
loop
dec
lods
vmulpd
(bad)
daa
mov
nop
mov
add
and
movs
mov
mov
or
sub
jecxz
mov
inc
dec
xlat
fmul
pop
push
xor
inc
cmp
sub
jp
pusha
pop
dec
pop
fwait
xchg
jmp
sub
mov
xor
dec
es
xchg
jmp
ins
mov
or
mov
pop
push
adc
sbb
xchg
mov
inc
adc
mov
shl
fidiv
pop
mov
push
(bad)
mov
xlat
xchg
mov
retf
and
xchg
dec
cmp
xchg
sub
(bad)
loope
sti
fild
out
add
inc
mov
jmp
jae
loopne
loope
je
rcl
cmp
scas
bound
mov
scas
(bad)
cmp
sub
or
dec
add
and
inc
fs
imul
sbb
stc
(bad)
or
aaa
arpl
pop
mov
ds
dec
jp
adc
and
mov
ins
ins
mov
fs
mov
and
push
cmc
push
push
sub
fmul
or
mov
cmps
data16
into
fdiv
or
rcr
xchg
jns
push
push
enter
je
or
nop
pop
test
push
call
push
inc
test
(bad)
adc
jno
and
ret
in
push
imul
or
aas
pop
dec
push
pop
dec
test
mov
loope
mov
loope
mov
ss
cld
int
push
fidivr
retf
in
stos
push
fnstcw
out
lea
movs
push
push
xor
mov
mov
jl
jb
popf
inc
lds
retf
in
mov
clc
mov
xchg
mov
cmc
std
cmp
outs
ret
pop
clc
jno
nop
mov
lds
mov
stos
adc
(bad)
jp
mov
cmp
xchg
(bad)
aad
jecxz
sbb
inc
sahf
jmp
xchg
addr16
jno
pop
aaa
cs
jo
mov
in
adc
inc
jnp
ds
out
cmp
pop
outs
xchg
rcr
jge
ja
test
sbb
mov
mov
gs
ds
push
mov
sub
push
inc
aaa
mov
or
pop
ins
mov
add
push
fstp
fisttp
sub
cmc
xor
push
push
adc
mov
je
rol
pop
es
xchg
sub
cmp
jle
loope
push
pop
pop
jo
or
shr
int
arpl
aaa
out
xor
adc
mov
cld
cli
add
retf
xchg
or
jae
sbb
push
rcl
scas
lahf
mov
(bad)
(bad)
xor
jbe
aaa
test
sub
inc
mov
neg
adc
add
test
pushf
dec
mov
movs
push
jg
repz
mov
movs
ror
adc
xchg
xchg
fbstp
cs
pusha
(bad)
jmp
adc
sub
sub
ret
lds
pop
fs
mov
int
sub
pop
adc
test
add
rol
sbb
ins
cmp
enter
(bad)
retf
test
mov
xchg
sbb
jle
clc
jae
call
aaa
inc
jge
or
mov
popf
push
xor
sub
daa
add
sbb
outs
or
sub
retf
mov
and
or
or
pop
in
push
sbb
cmp
sub
lods
std
out
retf
aaa
(bad)
stos
movs
mov
movs
pop
or
and
pop
push
mov
into
ins
retf
inc
add
out
cmp
jp
outs
mov
repz
xchg
adc
call
xchg
mov
enter
or
sbb
jnp
test
or
push
dec
xor
in
shl
inc
ds
call
rol
inc
setl
enter
inc
je
(bad)
mov
jge
pop
mov
retf
jb
adc
cli
fidiv
xor
rcr
mov
mov
das
xchg
inc
loopne
mul
icebp
enter
das
repz
jecxz
jle
mov
xchg
push
loopne
xchg
pop
mov
gs
jl
repnz
xchg
sub
xlat
dec
shl
add
inc
or
cdq
fsub
(bad)
lods
push
inc
pop
ret
(bad)
inc
(bad)
xchg
cmp
frstor
ret
js
dec
mov
mov
je
mov
cwde
and
popa
xor
fwait
xor
mov
aad
or
out
mov
add
aam
scas
cmp
xchg
xchg
pop
test
fcomp
jae
sbb
add
mov
inc
arpl
inc
sub
cmps
pop
and
mov
mov
stos
sbb
add
shl
fidivr
add
mov
fcomp
data16
pop
jnp
mov
stos
mov
repz
mov
movs
loopne
sbb
outs
mov
jb
fsub
fstp
pop
mov
push
(bad)
movs
or
imul
(bad)
cs
mov
popa
aad
xor
mov
dec
test
call
iret
xchg
mov
push
scas
push
and
fmul
daa
pop
sbb
(bad)
(bad)
ds
mov
xchg
fiadd
imul
sub
or
pop
push
stos
mov
cmp
and
lea
xchg
xchg
push
bound
push
adc
scas
lahf
dec
sbb
fwait
dec
inc
sbb
push
mov
nop
push
daa
mov
leave
adc
or
repnz
cs
push
mov
das
in
sbb
cmp
jno
int3
inc
and
dec
aas
test
push
inc
jo
mov
pop
test
pushf
push
mov
ja
(bad)
jns
les
sub
jle
(bad)
hlt
aas
or
clc
outs
adc
mov
out
sub
adc
cdq
and
mov
adc
js
std
adc
inc
test
cli
(bad)
xlat
mov
jl
push
sbb
pop
pop
jb
push
loop
jmp
enter
call
stc
loop
sbb
add
mov
adc
cmp
nop
jmp
not
fdiv
mov
add
test
cmp
std
sti
xor
sbb
mov
add
xchg
outs
push
out
cmp
popa
into
es
adc
int
enter
aad
jbe
mov
lahf
push
icebp
inc
push
frstor
xchg
mov
push
aam
lock
mov
ins
into
adc
sbb
jmp
(bad)
mov
shl
or
jns
addr16
push
mov
mov
movs
in
pusha
adc
inc
mov
imul
jmp
inc
iret
aam
push
xchg
lods
jmp
dec
cmps
mov
and
fldcw
mov
ja
fadd
adc
jecxz
mov
aam
push
inc
mov
pop
adc
fs
and
stos
movaps
jo
aas
jmp
test
not
inc
fiadd
mov
add
adc
sub
xor
mov
add
fist
ret
jge
push
data16
sbb
mov
(bad)
pop
nop
ins
sub
mov
jb
cwde
jns
ret
and
push
jae
pop
add
add
pop
jns
(bad)
pop
xchg
pop
cmp
mov
mov
pop
je
fsub
and
dec
fwait
ins
add
or
xor
sbb
test
mov
dec
das
aaa
ins
neg
in
scas
xor
sub
jno
push
sub
sbb
aad
sbb
mov
xor
xor
pop
mov
aas
mul
jecxz
das
loope
fidiv
stos
cmps
pop
xor
ret
(bad)
outs
pop
imul
xor
xor
dec
repz
das
inc
xchg
dec
out
stos
aad
add
test
mov
cmp
or
repz
cmp
int3
and
sti
sub
jmp
out
(bad)
(bad)
lea
das
pop
fdiv
pop
leave
dec
push
call
hlt
test
imul
mov
adc
mov
pop
pop
or
cs
cmps
mov
push
xchg
jns
pop
mov
loopne
fcomp
inc
test
cmps
jo
pop
cmps
mov
movs
push
sbb
repz
xor
rcr
test
inc
dec
sbb
mov
jle
rcr
outs
lock
cdq
sar
pushf
sub
add
cmp
xchg
or
(bad)
jg
jl
stos
push
sbb
xor
in
jge
push
jbe
repnz
cli
or
fadd
pop
mov
aas
sub
dec
loope
jecxz
lea
hlt
inc
jnp
imul
imul
sti
sub
les
push
sub
or
pop
int
and
mov
pop
aaa
and
mov
pushf
dec
inc
inc
jb
or
sbb
xchg
mov
jnp
or
add
adc
jae
jbe
mov
mov
ins
in
mov
scas
ins
mov
jno
lea
mov
cmp
pop
mov
xor
hlt
neg
call
in
inc
adc
clc
scas
sbb
(bad)
fbld
dec
adc
dec
pushf
and
cmp
fwait
outs
clc
outs
mov
(bad)
jb
cmp
push
or
jbe
pop
aas
mov
fdiv
movs
retf
xor
xor
jmp
adc
imul
push
popa
lds
fcom
and
cmc
adc
add
cmp
mov
sbb
xchg
pushf
mov
sbb
les
mov
mov
shl
or
fisttp
in
mov
mov
imul
movs
adc
or
or
and
jmp
jge
push
mov
repnz
ret
or
push
mov
mov
inc
push
or
in
jle
push
jecxz
add
jmp
aad
loope
mov
and
inc
arpl
mov
push
lods
mov
jmp
inc
sub
lods
xchg
stos
test
xchg
sbb
push
jno
sbb
repz
mov
mov
and
ja
push
aam
pusha
xlat
int
mov
ins
cwde
sbb
push
into
fimul
scas
cdq
xchg
xor
(bad)
out
sbb
iret
movs
je
fdivp
mov
in
cwde
fld
mov
in
mov
jnp
adc
fld
test
pop
mov
sub
push
out
aad
pop
add
xchg
ins
(bad)
cmc
mov
or
out
jg
pop
hlt
jmp
into
xchg
mov
pop
dec
(bad)
adc
hlt
push
xor
sub
jecxz
cwde
retf
xchg
push
pop
popf
rep
cli
mov
mov
adc
pusha
in
add
sar
cmps
jecxz
push
mov
push
inc
mov
(bad)
xchg
mov
into
jecxz
mov
jbe
addps
in
call
test
push
adc
xchg
ror
enter
jbe
inc
pop
hlt
popaw
cs
ss
mov
cli
daa
pusha
adc
jne
or
inc
gs
pop
mov
sbb
(bad)
cmp
std
fsubr
sbb
xchg
(bad)
fld
xchg
cmp
jle
enter
dec
fwait
cmc
(bad)
sub
dec
lock
xor
test
pop
sbb
jmp
dec
dec
pop
addr16
cmp
dec
sub
mov
push
out
and
mov
cmp
out
test
ret
aad
mov
xchg
pop
jno
clc
iret
jo
daa
dec
addr16
inc
aam
sub
imul
mov
pop
push
jnp
adc
fcmovnb
(bad)
pop
push
aas
or
repnz
repz
xchg
or
mov
inc
je
dec
sbb
adc
mov
pop
into
lea
shr
lods
mov
sbb
out
int
out
xchg
xor
jb
outs
in
jns
stos
dec
addr16
pushf
bnd
stos
sub
and
xor
ja
jno
dec
inc
or
jmp
inc
and
mov
test
pop
mov
inc
inc
push
jmp
(bad)
js
jns
js
ins
or
jae
xlat
jb
sbb
xchg
sbb
xlat
inc
popa
psadbw
(bad)
xchg
mov
xchg
fstp
add
nop
std
ins
mov
cmp
xchg
inc
pusha
stc
jle
adc
mov
cmc
scas
(bad)
pushf
jp
sub
xor
ja
cmp
or
adc
and
aaa
(bad)
dec
mov
xchg
fisub
mov
or
in
jno
mov
gs
stos
jecxz
push
ror
fcmovnbe
inc
mov
movs
xor
pop
js
jno
rol
arpl
popa
mov
repnz
lods
loop
test
mov
mov
jns
retf
adc
cld
jb
fisubr
ret
and
cmp
jb
mov
imul
dec
inc
cdq
popa
into
mov
mov
shl
ret
mov
mov
sahf
ror
je
out
jae
imul
jp
imul
movs
xchg
push
test
(bad)
test
dec
loop
jg
xchg
(bad)
xor
cmc
stos
lods
fcomp
icebp
add
sub
mov
pop
jmp
cmp
dec
cmp
outs
mov
cmp
movs
jmp
and
dec
pop
js
ins
jmp
cmp
cdq
xchg
mov
es
aad
cli
leave
arpl
les
mov
mov
cs
cmps
mov
leave
dec
sub
pop
sub
mov
ror
xchg
scas
jb
aaa
mov
and
shl
adc
dec
int3
pop
lea
imul
aas
add
jl
mov
adc
mov
je
jne
sub
repnz
sahf
adc
xchg
xor
xor
dec
push
xor
cmp
pop
inc
cmp
or
cmc
lods
pop
jne
mov
adc
pop
shl
es
fisubr
dec
test
loop
or
inc
mov
or
fst
adc
clc
pop
sbb
sbb
ja
fist
inc
(bad)
and
sub
(bad)
je
xlat
pop
push
in
push
(bad)
push
pop
xchg
pop
adc
std
dec
or
inc
xchg
sbb
mov
fmul
fwait
mov
inc
cld
stos
mov
(bad)
sbb
pusha
jmp
das
sar
push
and
cli
dec
and
push
jmp
ss
data16
cdq
data16
xchg
xor
and
adc
(bad)
or
lods
loopne
and
popf
jnp
add
test
adc
pop
mov
xlat
jns
std
imul
cmp
mov
sub
sar
pop
push
es
retf
dec
pop
test
cmps
clc
or
out
adc
push
popf
cmp
pop
dec
std
repnz
inc
shr
out
or
retf
inc
push
dec
or
retf
shr
jg
cs
cwde
(bad)
push
pop
sbb
push
mov
jmp
sbb
xor
mov
loope
sbb
out
push
cmp
pusha
cmp
or
paddsw
inc
adc
sub
loopne
cmp
jmp
ja
bound
ja
jnp
jl
add
pop
mov
stc
ret
mov
add
fdivp
in
and
cmovb
sub
into
add
shl
aas
in
aad
loope
out
pop
cmc
add
inc
ror
popa
jns
push
test
mov
icebp
stos
mov
scas
jne
es
pop
pusha
xor
(bad)
xor
aaa
xchg
xchg
call
mov
arpl
cmps
pop
or
mov
lea
cmp
cmp
mov
mov
sub
xchg
gs
fwait
and
pop
sbb
sbb
mov
jne
mov
sub
enter
mov
in
jae
push
push
les
in
das
addr16
mov
jp
imul
jl
mov
pop
dec
or
cli
bound
mov
pop
out
iret
shl
push
mov
outs
(bad)
xor
outs
or
cmps
fiadd
addr16
mov
call
outs
xor
mov
outs
mov
mov
sub
xchg
sahf
dec
into
ficomp
cmp
das
mov
pop
xor
sub
push
bound
dec
ret
loope
out
loopne
addr16
sub
cmp
leave
push
xchg
(bad)
cmc
fs
test
jb
std
neg
lock
enter
sbb
jmp
mov
mov
sbb
nop
outs
fscale
ins
push
scas
imul
icebp
mov
xor
(bad)
jp
loope
and
or
int3
cs
mov
sub
jnp
pop
in
mov
rol
fcom
add
pop
in
fwait
sbb
dec
call
and
imul
mov
cli
xor
jns
fwait
imul
mov
loopne
or
inc
mov
ret
(bad)
(bad)
vpmacswd
inc
jmp
mov
dec
(bad)
push
loopne
ret
adc
mov
cli
cmp
jb
popf
pop
cmp
retf
jbe
jl
bnd
(bad)
adc
dec
call
pushf
add
lods
js
outs
inc
mov
fstp
mov
push
imul
cwde
ins
pop
dec
movs
sar
cmp
shl
inc
enter
ror
add
cvtpi2ps
push
stc
and
sahf
div
cmps
push
mov
cmp
out
lods
jecxz
mov
enter
addr16
pop
jge
int
adc
push
inc
dec
data16
xchg
in
out
nop
jmp
sub
jb
stc
push
fnstenv
test
cmps
xor
push
push
stc
or
mov
scas
mov
cmp
pop
inc
sbb
pop
xchg
sbb
mov
add
test
xchg
clc
sbb
test
loopne
daa
sub
loope
dec
dec
pop
fdiv
jmp
mov
movs
and
inc
inc
jmp
popf
sub
fld
cwde
hlt
repz
mov
xlat
jne
jl
sbb
adc
inc
in
push
out
add
pop
in
mov
mov
repz
add
sbb
or
cmp
sub
or
cld
pop
add
cmp
bound
dec
(bad)
call
mov
stc
mov
and
movs
push
xor
cmp
mov
scas
ret
int
adc
sub
add
fild
jl
imul
inc
jmp
scas
cmps
test
pop
xchg
rcr
fs
mov
shufps
and
adc
xchg
mov
jp
icebp
add
jge
dec
or
call
mov
(bad)
xor
inc
inc
xor
lahf
push
inc
pop
inc
ja
ret
xor
push
pop
jno
mov
scas
sub
inc
mov
shr
dec
idiv
mov
pop
sbb
ret
je
cmp
inc
fistp
imul
pop
cmp
jl
xor
scas
mov
add
mov
scas
sbb
jne
add
jae
into
cmc
data16
add
and
test
popa
in
push
fwait
retf
jmp
out
cmp
xor
out
ficom
je
cmp
movs
(bad)
sar
mov
xor
mov
push
cmp
loope
or
inc
repz
adc
retf
pop
pop
cli
cld
clc
aas
loop
mov
daa
add
jno
cs
aaa
jmp
dec
pop
daa
cmp
xor
lahf
mov
ins
rcl
adc
stos
sub
adc
mov
inc
cmp
fcom
push
rcl
cmps
sub
fisub
imul
int3
nop
cmp
push
shr
mov
ja
in
mov
or
pop
test
sbb
mov
cdq
retf
test
imul
aaa
outs
or
jl
fwait
js
rcr
dec
cli
adc
cmps
xor
inc
sbb
xchg
push
pusha
test
xlat
add
xor
mov
xchg
xor
ins
mov
pop
adc
lahf
hlt
loopne
popf
icebp
adc
adc
cmp
mov
jo
in
ins
or
(bad)
in
push
adc
mov
mov
mov
add
jle
(bad)
scas
loope
cwde
in
es
in
js
call
mov
add
inc
hlt
cmp
adc
adc
fadd
jmp
jbe
fs
test
(bad)
or
push
pusha
popa
dec
pusha
fs
jnp
mov
push
xor
xor
cmp
lods
inc
xor
(bad)
dec
cmp
inc
and
ja
cmp
stos
outs
pop
leave
outs
xlat
xchg
dec
inc
cmc
add
mov
cmp
mov
mov
fnsave
(bad)
pop
mov
jae
add
push
push
pop
pop
sti
or
test
nop
sbb
and
cmp
dec
inc
sbb
and
aam
jmp
scas
repz
fcomp
mov
xor
jp
dec
js
stos
idiv
and
push
mov
rol
fwait
sub
mov
mov
push
cmp
fsub
in
jno
cmc
lds
fimul
pop
jo
cmp
sbb
icebp
mov
nop
and
push
inc
arpl
cmp
ror
cmp
fs
addr16
mov
push
out
sbb
fucomip
dec
mov
jae
jp
add
xchg
cli
and
fs
pop
out
hlt
fs
push
cmp
jecxz
loop
push
dec
push
jne
jns
js
and
enter
out
inc
push
sub
retf
bound
mov
jb
xchg
(bad)
inc
sub
movs
aaa
jecxz
scas
aas
mov
cs
cmp
ret
add
dec
inc
jmp
add
arpl
xor
jmp
ds
sbb
mov
call
loopne
shl
or
xrelease
scas
neg
pop
xchg
cli
ss
pop
pop
pusha
nop
sbb
sub
in
mov
div
mov
hlt
pop
xlat
jnp
or
pop
mov
and
mov
in
jmp
push
test
mov
out
push
hlt
jle
fst
mov
cmp
cwde
cld
(bad)
or
daa
loope
sahf
add
ret
jae
fsubr
dec
jl
ret
pop
dec
push
sbb
imul
cmp
fs
pop
xor
dec
push
cli
ds
das
mov
cwde
push
das
mov
pop
je
pop
retf
adc
jmp
push
jl
adc
fs
test
adc
dec
push
ds
(bad)
xor
call
ss
lea
add
mov
sub
inc
lods
dec
imul
push
cmp
cli
push
xor
out
enter
push
push
fdiv
mov
mov
inc
ja
ret
adc
jecxz
je
and
push
pop
jmp
ror
cmp
hlt
push
mov
scas
call
sub
test
ret
push
or
aas
scas
popa
jns
iret
dec
jmp
push
dec
repnz
loope
popa
(bad)
div
and
jmp
clc
cmp
adc
inc
adc
sbb
lods
jnp
mov
dec
cld
and
outs
xchg
add
cmp
lds
push
push
sub
inc
cdq
pop
cmps
int
jnp
and
jp
ret
push
xchg
inc
mov
lods
lods
push
or
daa
adc
sti
cmp
cmp
push
jl
sbb
pushw
sti
xchg
addr16
jnp
(bad)
out
add
or
xchg
push
mov
repnz
add
cld
mov
ss
mov
lods
mov
arpl
pop
or
outs
jl
mov
lods
xchg
mov
rep
cld
stos
sbb
push
dec
and
fst
dec
add
and
nop
fnstenv
push
jae
mov
add
out
add
adc
xchg
(bad)
cmp
inc
loope
mov
add
scas
add
sub
xchg
sbb
sti
cmc
jne
pusha
or
cmp
mov
out
cdq
(bad)
cmp
xor
retf
pop
mov
xor
jb
jmp
retf
icebp
sahf
cmps
mov
popa
mov
js
cmp
inc
js
(bad)
lea
scas
sbb
dec
test
sbb
xor
push
enter
movs
add
push
mov
call
mov
mov
nop
inc
and
pop
push
cmp
fidiv
shr
bound
mov
cmps
mov
inc
cmp
pop
xor
xor
js
rcl
cdq
ror
lods
jns
xchg
pop
loop
fistp
inc
scas
outs
and
daa
adc
aam
jmp
ins
pushf
popf
fild
hlt
jo
push
movs
loopne
xor
mov
(bad)
dec
add
iret
dec
xor
adc
test
cld
jp
sub
sub
pop
cwde
test
aaa
aad
xor
xor
or
adc
in
fwait
adc
cmp
es
add
int
cmc
inc
mov
(bad)
mov
sbb
cli
and
loop
jne
inc
jle
inc
fld
cmc
std
cmp
sub
leave
test
stc
add
repz
jne
or
inc
inc
xchg
test
sub
stos
jp
btc
push
test
outs
mov
fild
mov
or
test
outs
jmp
adc
or
jb
sub
fwait
(bad)
int
inc
mov
adc
test
data16
in
inc
fsubr
push
jp
test
out
(bad)
test
popa
cmc
ficomp
adc
(bad)
or
clc
pop
cmp
push
xchg
cld
out
fsubr
adc
cwde
pop
add
lods
arpl
in
stc
dec
test
and
pop
add
xchg
scas
outs
add
mov
push
pop
adc
inc
add
xchg
adc
enter
dec
cld
mov
in
gs
popf
dec
jge
mov
jae
ins
push
xor
mov
mov
int
jle
cdq
xor
sbb
sbb
cmp
(bad)
rcr
add
test
mov
mov
jno
iret
out
add
cwde
adc
and
jns
xchg
push
mov
fnsave
adc
xchg
mov
data16
inc
adc
jmp
shl
retf
rcr
add
jge
retf
mov
test
push
(bad)
jns
jno
(bad)
ds
call
popf
rcl
leave
ds
dec
ss
inc
stos
lods
outs
or
push
cdq
jge
jnp
mov
in
add
inc
in
mov
push
mov
test
movs
cmp
sti
mov
fs
and
lahf
ss
dec
add
push
mov
test
xchg
iret
(bad)
pop
jnp
dec
test
data16
sahf
mul
iret
in
out
inc
les
xchg
ss
shl
shr
stos
nop
xchg
push
sub
push
inc
aad
fimul
add
repz
(bad)
ss
repz
pop
mov
or
scas
xor
aas
in
or
sub
pop
gs
adc
dec
pop
mov
add
sbb
xchg
pop
pop
in
mov
push
call
iret
jo
adc
mov
pop
sti
push
pop
mov
xchg
adc
mov
das
or
fist
inc
sub
mov
sar
push
dec
mov
pop
mov
sbb
dec
sbb
iret
pop
scas
jnp
in
fnstsw
stos
call
mov
sbb
add
adc
popa
inc
inc
push
retf
fldenv
push
aad
shr
inc
cmps
sbb
inc
dec
mov
fimul
push
cmp
jle
and
or
pushf
sbb
lea
lea
jbe
mov
pop
mov
xchg
arpl
push
inc
inc
fs
xlat
add
cs
mov
mov
add
stos
nop
adc
jge
pop
jge
mov
rcl
cwde
(bad)
xchg
(bad)
cmps
retf
fsub
xor
sbb
or
pusha
sub
aaa
jb
cmps
popf
mov
pop
pop
retf
jbe
inc
or
cmp
stos
shl
call
aas
shl
push
shl
jns
push
(bad)
movs
int
sbb
mov
(bad)
and
fnstcw
xchg
xchg
adc
mov
jo
jg
jae
pop
into
stos
cli
xor
jbe
addr16
pop
out
test
(bad)
ficom
or
adc
imul
cmp
(bad)
lock
bound
popa
js
jmp
push
xor
cmp
adc
dec
rcr
loope
mov
je
xor
stc
jge
cs
cmp
in
or
xlat
mov
jmp
pop
mov
inc
pop
call
outs
aam
fisubr
sub
dec
pop
test
mov
inc
mov
rcr
jmp
xchg
cmp
lahf
dec
and
rol
pop
mov
push
dec
bswap
retf
hlt
pop
lahf
fsubr
nop
ja
clc
mov
hlt
imul
xor
loopne
sub
scas
ja
and
sub
mov
loopne
mov
mov
cmp
push
mov
xchg
xor
rcr
cmp
mov
ds
cmps
cs
xchg
xlat
dec
stos
sub
(bad)
loopne
ins
pop
(bad)
sub
jecxz
in
or
sub
not
mov
mov
push
or
mov
mov
mov
sbb
sub
xchg
or
or
lods
dec
mov
and
jnp
icebp
clc
or
scas
xchg
inc
mov
push
mov
dec
xor
mov
adc
and
mov
or
xchg
mov
cmp
push
pop
dec
popa
std
push
xor
lea
ds
fwait
int3
jmp
std
loop
cmc
call
(bad)
jmp
sbb
push
dec
jno
and
int
test
ret
std
or
mov
jp
sub
xor
sub
xchg
cmp
fs
fcmovne
(bad)
mov
sub
clc
push
jno
sub
mov
add
das
js
dec
stos
jbe
mov
inc
aaa
mov
div
ret
movs
lock
mov
pop
imul
xchg
xor
cmp
add
adc
hlt
scas
cwde
add
jecxz
and
js
cmp
mov
ja
add
repz
fidiv
dec
(bad)
jg
jmp
inc
shl
fdiv
jb
stos
xchg
les
xchg
pop
push
mov
push
and
aad
push
mov
shl
sub
mov
mov
mov
pop
xchg
push
movs
sahf
out
rol
jl
in
xor
out
test
into
push
stos
adc
pop
bound
cdq
shrd
xor
in
jbe
ret
aad
fmul
into
jno
push
test
sbb
or
dec
jmp
hlt
mov
push
pop
(bad)
loope
stc
xchg
push
push
push
test
mov
sub
xor
pop
add
or
pop
fstp
mov
pop
mov
inc
cmp
push
stos
xchg
adc
stc
xchg
push
shr
xchg
shl
aaa
adc
pop
movs
mov
inc
stos
xchg
out
and
cmps
jb
adc
adc
call
dec
pop
aas
add
jg
pop
mov
inc
add
jb
das
fstp
cmps
icebp
clc
adc
fbld
fdivp
pop
jge
or
lahf
push
pushf
cdq
jno
jp
mov
and
inc
shl
push
retf
mov
shl
jbe
imul
dec
cs
pop
fstp
movs
push
or
shl
add
xchg
mov
mov
(bad)
fsubr
(bad)
fiadd
pop
jae
jne
cmp
fs
mov
adc
mov
in
in
sahf
dec
add
inc
or
retf
push
(bad)
cmps
mov
test
push
out
inc
pop
or
pop
shl
test
mov
pop
mov
sub
push
aad
sub
loop
test
les
mov
mov
bound
call
and
hlt
jnp
je
jp
jg
into
daa
inc
jne
gs
sub
and
mov
loop
xchg
mov
lea
mov
and
imul
fwait
les
mov
cmc
sbb
mov
push
enter
or
fimul
call
pushf
adc
dec
or
lea
mov
push
xchg
inc
imul
fild
pop
add
inc
xchg
push
frstor
dec
xchg
push
(bad)
pop
in
push
in
jg
adc
hlt
xchg
mov
test
jb
or
shl
xchg
ja
leave
inc
cmps
arpl
mov
add
fcomp
push
int3
jns
mov
mov
sub
push
xor
cmp
mov
sbb
or
sub
xor
jg
push
gs
repz
adc
sbb
pop
scas
stc
ret
mov
jno
in
int3
or
inc
stc
lahf
ds
push
lock
push
das
sub
aas
dec
mov
stc
add
mov
cmp
adc
mov
jne
ja
iret
call
loopne
or
popa
fnstenv
inc
jo
loopne
bound
adc
(bad)
cld
daa
nop
fs
in
xchg
adc
or
(bad)
(bad)
bnd
sbb
lahf
cwde
loopne
jecxz
test
fwait
imul
shr
cmp
pop
or
ret
mov
cmp
jl
xchg
sub
mov
loopne
xchg
test
pop
ret
iret
das
test
add
sti
mov
jp
mov
xchg
adc
out
cmp
ins
retf
cmp
(bad)
xor
sub
sbb
push
test
mov
mov
xchg
das
scas
inc
jmp
fld
mov
call
mov
ins
dec
xor
or
(bad)
ins
fisub
enter
xchg
pop
dec
mov
dec
repnz
xlat
gs
push
mov
sbb
sbb
push
outs
sbb
aas
mov
jno
cmp
jge
push
push
aas
cld
inc
(bad)
ja
int3
xor
sahf
(bad)
and
jb
sub
out
cs
rcl
push
stos
jp
rcl
arpl
in
xchg
loope
xlat
push
pop
adc
mov
mov
mov
adc
add
clc
ret
clc
out
arpl
push
loop
nop
sbb
cmps
das
fstp
or
cmps
jge
jbe
test
daa
cmp
in
push
cmp
lock
push
fs
out
call
push
jbe
mov
ds
fisttp
movs
mov
cld
pushf
sahf
mov
mov
fwait
sbb
pusha
xchg
dec
sub
rcl
mov
popf
jb
mov
or
enter
push
pushf
inc
icebp
scas
cdq
pop
sub
shl
jmp
scas
je
or
ds
pop
xor
inc
mov
(bad)
fcmovne
andnps
or
popa
enter
int
mov
or
mov
xchg
push
dec
nop
xor
(bad)
loop
push
and
jmp
jnp
xlat
int3
mov
add
pop
xlat
or
call
nop
jno
pushf
into
xchg
xchg
ficom
mov
fs
icebp
gs
push
and
out
test
cmp
in
ja
call
and
inc
bnd
retf
lahf
jmp
jmp
leave
jae
(bad)
push
inc
stc
cmps
cdq
imul
add
movs
inc
int
stc
inc
enter
outs
mov
outs
outs
jecxz
mov
xlat
jl
cwde
lock
es
out
pusha
mov
idiv
pop
pushw
jne
out
out
loop
push
or
cdq
dec
push
or
imul
mov
test
dec
rcr
scas
jg
xor
(bad)
sbb
mov
sbb
(bad)
mov
fwait
es
push
fmul
cli
xchg
or
push
das
arpl
jae
sub
mov
sub
in
or
icebp
mov
mov
pop
and
test
jg
sbb
lds
and
add
ins
jbe
es
int3
xchg
lock
ins
xor
daa
test
(bad)
adc
xlat
lea
test
mov
(bad)
bound
cwde
loopne
cmp
xchg
jnp
push
inc
scas
push
inc
pop
pop
idiv
pop
fucom
ds
int3
or
addr16
push
popf
mov
inc
cs
test
sbb
mov
add
mov
into
pushw
cmp
push
or
add
sub
pop
leave
in
pop
stos
adc
ret
(bad)
jmp
neg
(bad)
fabs
fmul
adc
or
pslld
test
(bad)
cld
fisttp
ror
aad
lea
(bad)
retf
cmp
pop
sahf
mov
jp
(bad)
fwait
(bad)
in
out
ss
xchg
inc
jmp
ret
cmp
popa
jle
ins
mov
mov
cmps
arpl
test
mov
(bad)
mov
out
xor
mov
(bad)
pop
imul
push
and
sub
xor
push
sbb
lods
mov
lea
mov
sbb
stos
aad
sti
mov
pop
inc
mov
xchg
inc
scas
ret
shr
pop
stos
imul
mov
fwait
mov
sub
jp
inc
adc
push
mov
std
idiv
lods
cmp
ja
push
stos
cmc
push
int3
es
mov
stos
ds
dec
arpl
mov
adc
xchg
ja
add
mov
aas
fisttp
fcom
sub
fisubr
out
inc
push
inc
frstor
xchg
cmp
mov
xchg
mov
fnstenv
jbe
dec
sbb
(bad)
lea
in
out
pop
pop
enter
iret
xor
push
mov
jns
mov
(bad)
pop
push
leave
and
out
and
or
xor
or
loope
sbb
clc
sub
push
xchg
add
lods
jo
adc
repnz
adc
and
xor
xchg
xor
pop
push
push
aaa
rol
mov
lock
loope
shl
stc
data16
mov
jns
jmp
aaa
loope
cmp
ja
cld
jbe
das
retf
clc
sbb
test
push
pop
jno
sub
outs
movs
or
test
into
mov
imul
dec
mov
js
es
test
lds
test
mov
retf
cmc
loope
arpl
fbld
mov
dec
push
and
movs
aas
xlat
add
jge
jnp
(bad)
fbld
add
gs
in
adc
rcr
(bad)
xchg
ins
call
push
pushf
fdiv
and
and
sti
adc
or
xchg
cmp
data16
cwde
shl
addr16
pop
dec
inc
and
or
or
sbb
(bad)
scas
cmp
push
and
xchg
mov
push
jb
and
stc
jne
and
and
adc
cli
xor
mov
pop
addr16
das
xchg
pop
mov
push
push
dec
and
pop
popf
mov
sbb
jno
imul
or
xchg
cs
dec
xor
sbb
xor
xchg
pop
retf
data16
add
outs
js
or
in
js
and
add
sbb
jbe
or
ins
inc
mov
mov
or
mov
sbb
push
xor
repz
mov
add
scas
xor
sti
test
jb
std
dec
fs
cmp
add
push
test
aas
jecxz
add
int3
jnp
es
pusha
xchg
mov
xor
push
aad
push
(bad)
out
lods
inc
into
es
jbe
mul
push
jl
call
jle
stos
mov
pop
cmp
in
clc
jg
xchg
dec
xchg
adc
out
sub
mov
xor
mov
stc
dec
fisubr
fwait
xchg
pop
mov
(bad)
sub
jle
add
inc
push
inc
sbb
sbb
shl
in
int3
in
aam
jno
push
xor
fldenv
loop
dec
xchg
xchg
xor
mov
mov
inc
pop
jmp
cmp
or
dec
or
mov
aad
ret
pop
jnp
fcmovu
push
je
push
add
inc
out
dec
fild
mov
jnp
sbb
inc
int3
lock
sahf
jmp
xor
sbb
dec
cli
outs
int3
xor
mov
das
gs
fidiv
mov
int
pusha
jmp
das
mov
sbb
rol
xchg
jne
ss
mov
nop
and
call
(bad)
(bad)
xor
mov
in
ror
mov
cwde
test
test
pusha
in
fst
stos
xor
add
and
movs
rol
out
dec
out
and
xchg
loopne
pop
pop
xor
xchg
mov
ds
std
sub
pop
mov
ret
mov
cs
mov
out
loopne
mov
cmps
sahf
inc
push
mov
cld
add
jg
std
daa
mov
dec
stc
sub
aaa
les
sbb
jp
mov
out
xchg
sti
cmp
pop
fist
test
cmp
mov
iret
sbb
adc
movs
out
sbb
pusha
in
pop
mov
or
fcmovnu
add
adc
adc
mov
lods
aaa
push
add
xchg
inc
dec
sbb
outs
and
xchg
xchg
test
add
call
sahf
adc
add
xchg
(bad)
cmp
and
cwde
mov
or
adc
in
nop
sub
shr
inc
movhps
adc
jns
loope
cmps
test
and
push
adc
sahf
add
push
sbb
outs
adc
fs
jle
jecxz
mov
cmp
sbb
int3
iret
fimul
rcl
add
mov
pusha
mov
jecxz
mov
and
and
xor
imul
push
sbb
das
popa
inc
sub
(bad)
lea
sbb
nop
add
pop
push
pop
add
imul
inc
push
lea
push
dec
repz
outs
mov
and
iret
cmps
mov
outs
push
fwait
cmp
aas
cmp
adc
xchg
aas
daa
cmp
mov
cld
aam
sbb
dec
lock
mov
ja
es
das
push
xchg
or
xchg
adc
or
inc
xchg
repz
xor
in
mov
aas
jl
push
fcomip
icebp
pop
aas
in
mov
js
cmps
fidivr
xchg
mov
loope
cdq
mov
push
jns
xchg
les
outs
(bad)
popf
test
cmp
and
inc
or
add
mov
(bad)
push
lods
adc
adc
mov
push
pop
cmp
icebp
scas
xchg
ja
sub
inc
jo
cmp
lock
xchg
dec
dec
loop
and
push
repnz
aam
push
push
mov
popa
mov
les
adc
push
pop
(bad)
jecxz
cmp
(bad)
std
add
sub
inc
test
loope
(bad)
lods
ret
push
int3
outs
inc
rol
aas
repnz
imul
(bad)
xchg
(bad)
sti
push
sbb
in
fild
adc
lods
cmps
std
sahf
adc
out
pop
(bad)
arpl
mov
jle
jecxz
mov
inc
daa
and
push
fld
sar
nop
pop
cld
retf
pop
add
clc
call
or
gs
xchg
lds
jbe
mov
scas
ins
jns
mov
xchg
lock
and
xor
mov
cld
add
jecxz
call
jg
dec
push
pusha
add
jmp
popa
imul
mov
aas
in
mov
mov
cmps
mov
mov
scas
push
and
or
adc
fsubrp
retf
mov
bound
add
sar
xor
fldenv
sbb
mov
pop
stos
add
popa
sub
pop
pop
shr
addr16
shr
jg
ins
inc
xor
mov
mov
adc
dec
jne
int3
jns
stos
gs
movs
jge
(bad)
mov
das
jecxz
xor
push
jl
push
sahf
jo
dec
sar
push
mov
(bad)
and
repnz
test
push
inc
sti
xchg
sbb
mov
stc
or
imul
mov
mov
sbb
retf
cmp
pop
out
std
inc
sub
out
push
movs
fsub
arpl
mov
outs
mov
nop
and
sbb
fisubr
xchg
adc
pop
sbb
ins
iret
jecxz
sbb
push
fist
stos
nop
cld
jmp
lds
jno
in
call
mov
js
cmp
div
xor
xchg
in
ds
das
(bad)
call
hlt
repz
jne
push
ret
mov
inc
ror
push
mov
dec
lea
or
leave
aas
mov
dec
xchg
fldenv
lock
clc
ret
dec
pop
aad
adc
push
inc
mov
aas
cmp
sub
fisubr
scas
out
arpl
cmp
aaa
es
pushf
adc
retf
xor
movs
inc
inc
in
rcl
rcl
and
pop
ror
inc
loopne
pop
xor
icebp
enter
out
call
arpl
data16
or
sbb
xchg
xlat
fwait
pop
popf
add
mov
inc
dec
add
jle
out
push
sbb
sbb
in
scas
jmp
je
cdq
sub
mov
nop
cmovs
scas
inc
inc
das
adc
add
dec
jp
dec
add
pop
jb
movs
rcl
fst
xchg
xor
dec
cmp
out
dec
push
xchg
je
inc
mov
push
mov
add
pop
mov
shl
or
stc
jg
jmp
mov
sub
out
or
dec
dec
and
fstp
loopne
fcmovnu
push
std
fstp
add
retf
aad
imul
xor
adc
xchg
jno
jge
sub
(bad)
adc
jae
inc
and
jmp
jo
xchg
cli
xchg
(bad)
mov
cmp
dec
add
jbe
aad
lods
push
repz
and
shl
fscale
imul
jno
pop
mov
(bad)
outs
dec
xchg
or
push
pop
sub
sbb
mov
loopne
adc
outs
inc
and
dec
out
das
sub
in
add
stos
jecxz
in
cmp
leave
mov
fwait
adc
mov
sub
jmp
out
sbb
xor
outs
mov
and
mov
das
inc
adc
xor
add
or
pop
mov
mov
mov
jbe
fs
in
enter
cmps
fs
adc
nop
adc
dec
xchg
mov
or
push
add
pop
push
cmps
mov
jae
jo
push
fiadd
add
adc
mov
popf
xchg
stc
jno
jmp
or
and
mov
pop
cdq
test
scas
repnz
rcr
push
loop
adc
adc
sbb
into
retf
cmp
inc
cmp
sub
pop
adc
popa
and
sbb
cmp
les
push
sbb
iret
enter
sar
jnp
and
or
pushf
popa
fcomp
and
in
lods
arpl
fucomp
fcomp
and
lds
mov
dec
inc
xchg
fisttp
inc
jle
add
inc
pop
fdiv
loope
inc
mov
adc
shl
mov
fsubr
inc
jecxz
in
cmp
ins
enter
ins
repz
inc
xchg
stos
pop
pop
pusha
es
cmp
and
repnz
in
xor
sub
xor
test
fsqrt
xor
dec
stos
cmp
cmp
test
imul
sub
test
(bad)
out
xor
gs
adc
mov
inc
mov
jmp
sub
ror
or
adc
push
dec
push
sub
mov
es
dec
sbb
(bad)
xor
inc
jle
push
sbb
xchg
stos
push
out
or
inc
or
inc
xchg
mov
cmp
loopne
pop
rcr
cmp
cli
mov
int
fs
in
mov
xor
pop
add
je
jno
cwde
loope
pop
mov
xor
push
bound
push
mov
jl
bound
mov
retf
pop
inc
jo
(bad)
loopne
add
out
das
test
(bad)
mov
arpl
sbb
pop
adc
push
shl
out
xor
mov
test
and
stos
or
mov
retf
into
sbb
push
jnp
test
sahf
or
xor
push
jnp
pop
xchg
out
ins
mov
xchg
movs
adc
dec
retf
push
idiv
inc
fs
mov
shr
lods
mov
jns
cmp
push
(bad)
dec
ret
push
mov
rcl
mov
fnstsw
adc
das
mov
test
loopne
cmp
cld
pop
adc
loop
push
mov
xchg
repz
hlt
and
jmp
sbb
mov
sub
push
arpl
in
add
or
into
call
xchg
addr16
and
ret
outs
into
pop
mov
das
mov
add
push
cmp
xor
mov
adc
add
push
pop
(bad)
js
lods
aaa
movs
cmp
test
mov
fbstp
ret
mov
add
dec
ret
and
inc
pop
jmp
out
and
cmc
ret
lahf
out
sbb
adc
inc
mov
ins
loope
dec
ins
stc
mov
add
sub
js
mov
xor
lea
jmp
(bad)
cs
lea
movs
inc
nop
test
cmps
ss
push
inc
ins
jmp
sbb
fild
ret
inc
in
in
mov
fisubr
loope
aaa
cmps
xchg
out
in
fistp
mov
xor
lahf
add
and
push
cmc
cmp
adc
mov
or
xchg
dec
cmp
add
mov
fisubr
push
adc
cmc
rol
in
inc
out
jbe
jl
xchg
loopne
mov
fisttp
mov
enter
loope
xchg
adc
add
js
pop
jmp
loopne
sub
cdq
sbb
mov
fucom
jae
ds
nop
popf
mov
lahf
jmp
and
test
leave
hlt
mov
js
(bad)
inc
mov
mov
cmp
push
fwait
ins
push
lock
mov
adc
cdq
test
mov
jmp
mov
dec
dec
pop
retf
icebp
das
(bad)
dec
mov
mov
jmp
adc
iret
popa
rcr
cmp
mov
mov
cdq
mov
sbb
mov
sar
push
inc
push
mov
out
pop
jmp
out
inc
repz
push
arpl
out
add
je
sub
cmp
pand
scas
sbb
nop
outs
add
jne
or
and
pop
arpl
add
cwde
adc
fdivr
jl
or
pop
movs
push
push
lock
fs
push
jmp
xchg
outs
mov
or
into
and
mov
xchg
lods
dec
sar
test
test
mov
scas
sub
popa
xor
lods
sub
push
icebp
cwde
push
or
clc
dec
mov
add
or
mov
mov
test
jne
mov
mov
repnz
adc
sbb
loop
scas
jns
test
or
das
cmp
add
cld
mov
repz
xchg
cmp
imul
cmp
sub
dec
adc
inc
cld
add
or
sbb
push
or
dec
lods
jae
lods
jbe
shr
lock
inc
push
push
outs
cmp
pop
xchg
jle
jmp
je
ffreep
dec
cmp
lods
dec
sahf
pop
mov
cld
std
mov
(bad)
mov
cmp
aam
pusha
sbb
pop
sar
add
sub
pop
add
add
and
shl
sbb
xor
xor
mov
(bad)
adc
or
or
test
add
cs
cmp
out
push
in
adc
mov
test
jno
test
sub
sub
lods
in
aad
add
lock
aas
mov
jl
ins
cmps
xor
fxch
pop
push
jmp
or
ins
aam
loop
or
daa
icebp
xchg
jge
loop
jl
push
test
mov
leave
or
inc
daa
loopne
movs
jmp
cmps
ret
mov
(bad)
js
push
jl
nop
dec
mov
lds
cli
aam
fstp
add
and
(bad)
sbb
cmp
fwait
or
dec
arpl
mov
adc
push
or
mov
push
sbb
callw
leave
movs
push
dec
ret
adc
enter
xor
dec
sbb
jbe
movs
xchg
and
mov
mov
dec
leave
sbb
mov
xor
mov
mov
(bad)
in
ins
stos
push
pop
sub
popa
icebp
adc
sub
call
leave
add
mov
xor
xchg
push
shl
sbb
jl
xor
xchg
xor
mov
dec
mov
js
sub
cmp
sbb
sub
(bad)
call
cmp
daa
jecxz
mov
leave
or
mov
push
sub
mov
mov
push
sbb
pop
or
mov
into
xchg
mov
mov
shl
mov
and
data16
call
dec
ret
movs
mov
iret
gs
hlt
int3
jno
test
xor
jp
add
mov
lock
ins
mov
arpl
out
cmp
ss
int
adc
out
in
jge
xlat
inc
ja
cmps
mov
xchg
cmp
mov
xchg
repz
lds
loop
add
out
int3
xor
rcl
jl
xchg
push
into
jge
push
cmp
cli
jp
ret
adc
dec
xor
xchg
ins
sahf
mov
pop
pop
popa
mov
sub
test
leave
outs
mov
cli
cmp
xor
nop
out
ds
push
mov
repz
inc
add
lods
jbe
ja
adc
sbb
jecxz
mov
cmp
inc
repnz
push
call
jbe
fs
ins
sahf
add
xor
pusha
in
(bad)
push
fcmovb
int3
paddsb
in
(bad)
xor
xchg
fld
fbld
icebp
outs
stc
nop
icebp
aaa
inc
mov
cwde
fisub
xchg
(bad)
push
add
inc
into
gs
mov
fisttp
mov
cwde
sub
(bad)
aaa
or
and
addr16
inc
sbb
sub
mov
lahf
cmp
jbe
sahf
(bad)
fdiv
nop
int3
jns
add
outs
xor
inc
repz
pop
mov
movs
mov
push
mov
mov
jg
lahf
bound
xchg
mov
lea
mov
lock
xchg
loopne
fiadd
movs
les
push
xchg
out
add
add
push
jl
xchg
ret
mov
push
cmp
call
dec
sbb
sbb
pop
pop
pop
jne
in
push
mov
mov
add
add
pop
fs
sbb
fldlg2
into
mov
out
sbb
xchg
pop
setbe
sbb
les
cmp
pop
ror
ins
cmp
rcl
(bad)
(bad)
inc
or
test
out
pushf
push
cmp
cmps
dec
fdivrp
push
and
hlt
ja
xor
inc
xor
mov
(bad)
sub
xor
add
cs
dec
ins
and
pushf
mov
shr
mov
scas
cmps
mov
jb
movs
dec
mov
jne
inc
and
mov
cmp
jg
pop
dec
xor
repz
mov
jp
(bad)
mov
or
cmps
push
push
movs
add
push
popa
sbb
lods
mov
outs
or
out
mov
jmp
repz
cmp
mov
test
xchg
in
mov
and
ss
jmp
jno
pop
jecxz
popa
adc
add
dec
or
loopne
aam
mov
add
jg
mov
js
mov
inc
mov
xchg
clc
dec
neg
jle
ret
fisub
addr16
or
sub
push
std
in
sar
mov
pop
(bad)
cli
aam
aaa
leave
or
and
(bad)
ds
mov
inc
scas
inc
xchg
cmp
xchg
in
(bad)
fadd
or
adc
fwait
pusha
mov
test
retf
idiv
push
retf
pop
ja
sbb
cmc
jp
repnz
xchg
cli
cdq
xor
mov
shl
lods
ins
dec
mov
rol
adc
stos
adc
cmps
les
cwde
in
sbb
dec
xchg
retf
(bad)
mov
and
push
aas
ins
xor
xchg
push
call
jl
dec
rcl
retf
push
cs
bound
push
jne
pusha
inc
aas
or
psrlw
mov
push
mov
xchg
and
arpl
and
mov
mov
fdiv
push
inc
imul
ss
js
pusha
pop
jl
xchg
xor
mov
loope
mov
fbld
pop
lods
cmp
xchg
popa
mov
inc
push
xchg
mov
pop
movs
mov
push
push
dec
push
test
push
loop
cmps
loop
mov
pushf
cwde
mov
inc
(bad)
mov
fwait
iret
inc
sti
loope
xor
xchg
xchg
xchg
fsub
sub
inc
jo
icebp
sub
adc
outs
push
fmul
jmp
push
out
adc
bound
push
and
push
jae
xor
mov
xor
ret
xor
adc
pop
jno
mov
aas
adc
and
xor
mov
inc
push
inc
and
rep
xor
xor
(bad)
ffree
js
call
repnz
mov
sti
ins
mov
stos
dec
inc
rol
push
test
iret
jnp
cmp
cmp
mov
sbb
push
stc
jne
mul
(bad)
push
sbb
pop
dec
xchg
and
int3
test
dec
pop
imul
inc
sbb
mov
mov
mov
inc
fisttp
cmp
(bad)
(bad)
mov
repz
adc
data16
xchg
mov
sub
not
lods
ja
xor
pop
sbb
imul
cmp
cmp
pusha
sbb
sbb
sti
scas
(bad)
push
and
and
pop
js
mov
pop
pushf
add
dec
push
jmp
mov
test
lahf
sbb
test
and
ret
int3
in
imul
popf
daa
sbb
xchg
pop
ins
cld
xor
xchg
dec
mov
inc
das
sub
int3
retf
mov
bound
push
push
push
sbb
pop
fldcw
scas
fwait
pushf
adc
add
inc
or
inc
pop
loopne
out
adc
retf
xchg
stc
enter
sub
push
test
cmp
mov
jo
xchg
dec
lahf
in
jbe
stos
jb
cs
pop
cmp
pop
nop
adc
in
call
jbe
rcr
adc
dec
fs
ins
stos
mov
outs
jge
aam
and
mov
popa
into
push
dec
int
mov
and
dec
or
and
push
inc
jbe
inc
ins
xlat
push
je
test
div
movs
rcl
xchg
xchg
push
and
repnz
scas
sbb
popa
hlt
sub
mov
mov
push
mov
inc
adc
inc
test
test
mov
cmps
push
sbb
aas
sub
sub
ss
jg
mov
push
fwait
not
dec
push
data16
xchg
mov
pop
pop
and
add
ret
jmp
(bad)
mov
mov
dec
xor
outs
xchg
out
ror
lods
jle
mov
mov
inc
xchg
jl
bound
in
mov
mov
mov
push
sti
jb
aaa
sub
test
movs
jg
xchg
mov
jmp
(bad)
into
fwait
inc
pop
and
pop
or
pop
adc
xlat
cmp
pop
xor
pop
or
scas
dec
jecxz
inc
push
mov
dec
out
fnsave
nop
std
mov
pop
sub
int3
pop
or
xchg
out
in
mov
aad
fsubr
add
sbb
ret
jo
xor
movs
push
stos
rcr
test
aaa
mov
rcr
test
ret
mov
push
lahf
cmp
iret
adc
fsubr
xchg
xchg
dec
push
(bad)
lahf
hlt
aad
push
push
ficomp
mov
ret
out
ds
inc
or
test
stos
xchg
int
test
or
loopne
sbb
(bad)
into
call
jmp
xchg
sbb
jns
inc
add
in
adc
mov
fiadd
repz
lds
ins
repz
or
dec
xchg
fwait
mov
cdq
inc
imul
fcomp
sbb
(bad)
cmps
mov
mov
adc
or
fdivr
push
je
fld
cwde
mov
push
sbb
mov
mov
call
mov
lock
xor
xchg
inc
adc
dec
test
push
jmp
xor
int3
mov
inc
dec
pusha
ja
shl
mov
mov
mov
fwait
gs
les
fwait
repz
push
nop
xchg
outs
mov
call
push
mov
and
cs
pop
addr16
mov
or
pop
(bad)
xchg
cmp
loopne
stos
idiv
pusha
test
mov
aam
fwait
cmc
aad
test
icebp
xor
sbb
dec
ret
mov
sub
int
dec
mov
imul
dec
and
mov
xchg
arpl
data16
js
lahf
cmp
adc
jmp
jae
outs
inc
xchg
sbb
cmp
xchg
int
add
loope
ds
jecxz
mov
ds
cmp
mov
call
jbe
(bad)
xchg
in
mov
add
es
clc
inc
out
dec
sub
(bad)
sti
pop
dec
mov
mov
fild
hlt
and
xor
cld
cs
fwait
xor
aas
and
iret
in
xchg
ja
das
mov
or
out
mov
into
push
lods
push
outs
movs
xchg
add
enter
daa
inc
loopne
push
pop
stos
stos
retf
mov
or
xchg
mov
fdivr
pop
(bad)
push
and
adc
jp
sbb
cli
fiadd
mov
push
xchg
scas
rcr
repz
push
out
add
call
xchg
fbld
sub
(bad)
cmps
mov
xchg
sub
ins
aam
add
mov
push
or
fild
mov
adc
clc
sbb
adc
pop
inc
loope
push
aam
mov
sub
loope
cdq
ret
add
sbb
aad
mov
test
movs
dec
das
pop
fwait
mov
push
bound
les
push
or
sub
xchg
xor
ds
pop
(bad)
mov
int
icebp
pop
inc
lea
fidiv
es
daa
jb
ror
mov
fcomi
jae
pop
sub
mov
push
cmp
push
xor
xchg
aam
or
jle
xor
sbb
test
pop
pop
fsubr
or
cmp
retf
push
ja
push
xor
sub
rol
cwde
inc
or
imul
pop
sbb
sub
cdq
pop
js
sbb
adc
add
aaa
xchg
inc
rcr
pusha
mov
pop
mov
inc
shr
jmp
and
push
cmp
push
pushf
into
dec
call
es
jmp
xor
call
and
adc
mov
mov
gs
cli
std
cs
and
out
ins
inc
rcr
dec
mov
pop
xchg
push
xor
jbe
addr16
jo
in
int
cli
jp
movs
mov
cmp
bound
stos
and
in
add
pop
or
ret
rcl
or
and
xchg
in
cmovae
scas
dec
mov
sub
dec
leave
rcl
scas
inc
int
add
aaa
in
test
xchg
jmp
cld
inc
es
or
in
inc
cmps
in
fistp
mov
cvttps2pi
sti
test
addr16
cwde
and
mov
pusha
cmp
pop
add
xchg
add
mov
xor
and
push
add
repz
outs
(bad)
inc
jnp
data16
jbe
xchg
jl
arpl
cmc
pusha
rcl
daa
adc
jo
leave
shl
jne
mul
retf
(bad)
fild
je
dec
jne
test
cmp
out
fisttp
call
and
out
sti
or
mov
int
push
push
out
pop
push
mov
hlt
inc
and
ja
pop
iret
push
into
xlat
in
fsubrp
fisttp
loope
mov
mov
pop
push
in
stos
loop
push
cmp
in
xchg
rcl
jmp
ss
ins
or
in
dec
fs
xchg
out
lds
fistp
mov
out
sbb
es
and
add
daa
push
add
add
(bad)
movlps
test
mov
aas
out
xor
sahf
xchg
adc
xchg
ds
cmp
adc
mov
cmp
repnz
out
cmp
or
push
cmps
xchg
leave
mov
mov
popa
neg
and
xor
dec
add
scas
movs
sahf
jbe
jg
xchg
mov
(bad)
ds
xor
and
sbb
lds
dec
or
inc
outs
dec
xchg
mov
stos
xchg
(bad)
into
xor
pop
fnstsw
clc
xchg
dec
inc
sub
gs
and
outs
mov
adc
and
xchg
dec
mov
out
pop
stc
outs
adc
loope
mov
popa
dec
(bad)
push
cmp
mov
das
adc
dec
inc
inc
sti
mov
ret
scas
sbb
fsub
cwde
ffreep
xchg
push
pop
sahf
enter
int
gs
popa
data16
bound
jmp
sub
pop
std
pop
pop
into
test
add
mov
test
xchg
cmp
mov
push
ffree
imul
in
ja
(bad)
fisubr
icebp
push
cli
add
mov
rol
sub
adc
mov
mov
leave
push
pop
mov
mov
aad
in
lahf
pop
popf
mov
ds
add
xchg
(bad)
jl
push
(bad)
push
push
enter
jle
ret
xchg
arpl
cmc
test
mov
shl
into
les
sbb
mov
ds
cmp
and
push
or
dec
getsec
push
dec
jge
jae
mov
mov
sbb
xchg
pop
xchg
mov
iret
add
in
jmp
scas
dec
das
adc
cmps
int3
and
adc
jl
cmp
mov
mov
test
and
sbb
mov
fcom
and
sub
fst
hlt
mov
vmwrite
or
or
pusha
jp
rcr
mov
out
sub
sub
js
(bad)
rol
jp
add
xlat
push
pop
mov
fsubr
aaa
or
adc
stos
repnz
inc
lea
call
cdq
adc
or
test
add
sbb
inc
mov
jp
sbb
adc
jns
sbb
daa
mov
popf
rcr
test
fwait
push
aaa
into
adc
mov
dec
jecxz
dec
cmp
(bad)
jnp
add
pop
scas
shl
clc
jle
xor
jle
cmp
cmp
hlt
or
xchg
loopne
iret
sbb
repnz
call
jg
mov
xchg
mov
push
movs
arpl
sbb
adc
ret
jl
jns
inc
aaa
movs
pop
sahf
jp
call
std
and
cmps
dec
stos
sub
in
repnz
dec
(bad)
outs
cmp
ins
mov
and
sbb
push
cmp
sbb
mov
out
cmps
test
idiv
iret
test
scas
out
mov
leave
sub
nop
xchg
add
dec
push
pop
fwait
jge
jnp
sbb
pop
adc
push
xchg
mov
(bad)
outs
add
inc
jge
inc
mov
arpl
popf
push
lahf
pop
xlat
mul
std
add
xor
aaa
movs
test
jno
mov
cs
test
daa
sbb
(bad)
cmps
imul
mov
adc
xor
jmp
aaa
mov
jbe
pop
addr16
mov
inc
(bad)
jmp
int3
jae
jno
push
xor
push
push
sbb
jp
xchg
and
int3
outs
adc
ret
jg
jbe
sahf
add
addr16
sahf
add
push
aad
mov
into
ja
lods
dec
xchg
int
mov
movs
aad
pop
xchg
inc
mov
inc
(bad)
out
add
ret
aam
xor
rcl
sub
mov
fnstsw
out
xor
call
imul
mov
and
dec
mov
jnp
das
push
pop
dec
aaa
adc
push
popf
pop
jle
jne
xor
pushf
push
mov
iret
mov
cmp
cmp
icebp
mul
call
xchg
js
push
xchg
dec
sbb
ins
sub
jne
pop
call
inc
mov
xor
xchg
cmc
cwde
loop
push
cmp
retf
loopne
loopne
jae
aaa
pop
jmp
popa
sti
std
and
mov
pop
loop
add
aas
add
sbb
push
out
mov
int
cmps
cdq
jns
ror
hlt
xor
jp
cmc
leave
mov
jae
lea
mov
mov
add
dec
or
es
pop
sbb
xchg
jle
add
in
nop
cld
test
cmp
pop
nop
dec
test
dec
fnstsw
mov
push
mov
out
inc
into
jge
movs
mov
xor
sub
mov
ds
int
adc
lods
mov
add
js
adc
add
add
test
xchg
test
in
push
sbb
push
mov
adc
mov
mov
iret
or
xlat
jge
inc
fadd
popf
imul
xor
cmps
lea
in
mov
or
loop
pop
(bad)
int
and
jg
dec
daa
push
push
add
mov
dec
in
jmp
mov
adc
or
jle
(bad)
fdiv
mov
rcl
push
push
and
xor
(bad)
scas
mov
jmp
int
(bad)
inc
sub
jne
lods
aas
fimul
push
repz
idiv
ins
mov
pop
std
push
(bad)
cmp
gs
push
div
out
jae
cmp
inc
lahf
sar
xchg
jno
push
mov
mov
clc
or
add
add
test
fs
rcl
sub
imul
pop
(bad)
fwait
ss
inc
fmul
leave
arpl
lock
(bad)
jne
mov
sbb
popa
arpl
add
rcl
shl
movs
cmp
fwait
(bad)
xchg
and
adc
test
jg
aaa
jge
dec
pop
aaa
cmp
mov
cdq
(bad)
sti
pushf
mov
outs
pop
ror
in
mov
scas
pop
xlat
movs
mov
fistp
out
fidiv
inc
out
aaa
cmp
ja
daa
test
push
jne
sub
shr
loop
and
jbe
jp
sub
fld
jmp
out
out
(bad)
stos
xor
cmc
and
scas
pop
dec
outs
or
int
and
sub
dec
push
or
jmp
sub
jge
mov
call
xor
mov
ss
mov
mov
xchg
or
pop
xchg
and
mov
dec
ret
mov
stos
mov
dec
sub
repnz
inc
xchg
dec
adc
aam
ins
(bad)
fld
and
push
stos
cmp
js
cmp
inc
outs
repz
sbb
cmp
cmp
movs
cwde
inc
push
es
sbb
out
xchg
cmp
or
fld
push
lea
pop
fldenv
xchg
pop
mov
mov
jmp
cmp
push
dec
or
add
push
cs
pop
mov
jbe
shr
cdq
(bad)
mov
lods
es
shl
and
jnp
stos
hlt
jbe
mov
add
add
stos
sbb
pop
inc
sub
push
ror
xor
mov
cdq
jns
(bad)
cmp
pop
scas
dec
fiadd
adc
push
mov
cmp
push
cmc
sbb
inc
cmp
popa
(bad)
int3
push
mov
fdivr
sbb
jb
add
and
pop
gs
push
mov
cmp
jecxz
cmp
sub
mov
mov
loop
js
push
push
jp
jp
scas
(bad)
jns
sub
sub
loop
in
mov
jmp
ficom
inc
cmc
xchg
fsub
inc
pushf
push
xor
sub
lahf
les
mov
loop
jg
jle
xchg
mov
mov
mov
xchg
mov
fnstsw
cwde
les
sti
dec
adc
cdq
shl
frstor
in
loope
loop
xor
jno
adc
bound
pop
pushf
inc
loop
ins
(bad)
mov
jge
adc
add
sbb
movs
repz
and
out
mov
cmp
add
pop
dec
cmps
fwait
nop
add
fisttp
sbb
sbb
and
test
sahf
in
mov
mov
push
ficom
pop
clc
inc
push
and
fidiv
xor
and
fild
imul
leave
xor
sub
inc
sar
(bad)
and
or
stos
das
xor
stos
dec
int
jp
sbb
jmp
adc
mov
add
jecxz
dec
js
or
or
in
dec
js
push
call
nop
adc
mov
xor
or
call
clc
xor
push
pop
inc
movs
push
and
inc
mov
push
xchg
push
outs
push
mov
or
mul
xchg
push
adc
out
xchg
ds
dec
mov
add
sbb
jmp
mov
ins
mov
push
cmp
or
ds
cld
aad
popf
jle
mov
xor
jle
dec
add
out
mov
lea
mov
pop
push
scas
test
xchg
arpl
mov
push
call
test
xor
arpl
jbe
ins
jmp
sub
mov
out
sbb
dec
mov
pop
mov
sti
xor
mov
xor
cmc
sbb
push
imul
arpl
call
mov
fsub
or
jae
xchg
div
push
sbb
leave
stos
imul
stos
mov
pop
jmp
mov
es
fucomi
repz
imul
mov
(bad)
js
sbb
ret
sahf
pop
push
dec
or
adc
push
jle
into
out
cld
xor
aaa
es
cld
lock
mov
(bad)
arpl
fcmovbe
shl
hlt
sbb
and
add
repnz
jmp
pusha
sbb
dec
xchg
or
les
jle
ret
jbe
mov
jmp
mov
mov
and
ret
scas
pop
xchg
mov
pop
and
pop
std
call
or
retf
add
dec
imul
push
push
lock
je
mov
fsub
mov
sub
or
push
outs
add
jo
pop
fwait
aas
shr
jmp
test
jbe
pusha
addr16
xor
fisttp
push
mov
lods
mov
xor
movs
aam
and
cmps
test
cmc
and
ret
or
or
or
fimul
ins
and
cmp
mov
cmp
xor
sub
retf
icebp
cwde
fdivr
ins
fdivr
fld
int
enter
scas
push
call
xchg
cmps
les
div
loopne
add
inc
and
ror
adc
ja
mov
inc
pop
jns
jno
dec
shr
test
inc
aam
daa
adc
pusha
call
int3
cmp
push
mov
into
pop
jmp
jnp
pop
mov
dec
addr16
xor
in
xor
shl
iret
mov
ret
mov
dec
mov
sub
retf
jmp
(bad)
stos
jp
inc
int3
adc
sbb
sub
adc
std
movs
jns
ds
rol
cmc
mov
push
test
xor
mov
(bad)
push
mov
xor
dec
test
int
sbb
pushf
ret
mov
cmp
sub
push
cmp
xchg
push
pop
popa
and
call
aad
push
xchg
into
and
dec
cmps
or
cmc
jecxz
mov
add
pusha
inc
push
lahf
sbb
jg
int
xchg
sbb
adc
mov
push
popf
in
pop
jle
jl
es
movs
out
cmp
(bad)
dec
popf
xor
and
in
xchg
fidivr
call
imul
(bad)
cmovnp
vpunpckhbw
cwde
pusha
or
div
dec
cli
pop
sub
mov
rcl
(bad)
jmp
fcmovbe
test
cmp
jns
(bad)
pushf
in
rol
pop
or
jbe
pop
imul
fbld
xchg
jnp
icebp
and
popa
push
nop
push
cmp
mov
xlat
xchg
or
(bad)
jno
iret
inc
leave
mov
adc
shr
jb
push
outs
adc
aam
in
jne
aas
icebp
sub
call
sbb
push
dec
push
daa
and
sbb
xchg
mov
stos
adc
or
add
xchg
push
rol
ret
in
sbb
lods
pop
mov
iret
push
jo
aam
xor
adc
push
adc
and
inc
bound
enter
mov
sbb
std
out
push
and
dec
stc
inc
pop
jecxz
xchg
and
dec
xchg
lea
or
adc
mov
fisttp
cmp
jecxz
xchg
push
push
icebp
movs
mov
ins
ds
into
call
xchg
in
fisttp
(bad)
push
pop
cmp
mov
imul
mov
mov
xor
mov
mov
or
sbb
lea
stos
jp
mov
shl
inc
ins
iret
sbb
sti
or
mov
mov
lock
arpl
jge
pop
(bad)
pop
outs
or
nop
lods
lahf
js
outs
es
loope
mov
aas
sbb
jb
ins
adc
out
pop
cli
mov
add
add
ins
or
push
jo
mov
call
pop
outs
jge
lods
and
mov
cmp
mov
push
pop
mov
in
lahf
lea
mov
(bad)
jmp
popf
dec
jl
or
pushf
inc
fs
dec
mov
push
adc
mov
xor
cs
inc
adc
jmp
sub
mov
call
jg
dec
sbb
mov
jp
pop
adc
jecxz
mov
push
ror
enter
into
popa
mov
push
jnp
push
fldenv
inc
pop
(bad)
jne
in
sbb
rol
inc
fadd
push
les
sbb
jge
sbb
jo
(bad)
int
cmps
gs
sar
mov
xor
fld
jb
xor
les
mov
jbe
pop
pushf
mov
xor
sbb
sub
cld
pop
es
nop
(bad)
fld
cmp
fisub
mov
pop
imul
xor
xlat
les
mov
mov
addr16
cli
jo
or
nop
(bad)
push
sti
ins
sbb
xor
movs
sbb
int3
mov
push
(bad)
jo
or
popf
jno
mov
cmps
js
addr16
mov
push
arpl
cmp
pop
xchg
mov
sub
push
xchg
retf
pop
out
movs
cdq
xchg
sub
data16
cs
jns
into
fsubr
aam
xor
dec
imul
pop
jb
sub
imul
retf
jns
jo
mov
movs
xchg
call
iret
pop
xchg
xchg
cmp
data16
mov
or
popa
or
int
or
push
aaa
add
dec
xchg
lds
into
sub
xchg
shr
jge
mov
or
repz
sahf
out
aam
dec
mov
adc
stos
lahf
pop
sub
shl
cdq
dec
clc
dec
add
lods
fsubr
daa
fisubr
(bad)
bound
mov
sbb
dec
addr16
inc
sub
inc
in
inc
pop
xor
pop
cmps
imul
into
in
adc
ds
ret
inc
mov
inc
pop
fld
dec
cs
and
mov
in
movzx
add
fiadd
jecxz
push
adc
and
add
not
mov
outs
pusha
ins
xor
adc
pop
add
fnstsw
sub
pop
mov
(bad)
or
in
(bad)
fidivr
cmp
fsub
fwait
retf
rcr
loope
imul
daa
cmp
add
aas
mov
outs
iret
xchg
jg
je
cmp
sbb
or
(bad)
repnz
es
or
inc
stos
imul
jae
add
(bad)
cmps
div
xor
rcr
je
test
ret
or
gs
or
mov
inc
mov
es
ja
cmp
sbb
les
test
mov
lea
or
cmp
add
int3
push
fstp
sub
sbb
sahf
daa
inc
or
fld
or
xchg
bound
mov
cmps
or
adc
push
(bad)
clc
mov
jecxz
and
rcr
cwde
adc
sub
xor
cmp
cmp
xchg
test
mov
pop
adc
out
retf
sub
ficom
lods
xor
lock
xchg
sti
int
cwde
cmp
cmp
inc
adc
fdivr
pop
push
enter
fcmovb
out
mov
lods
jmp
pusha
push
lock
xor
jne
int
jno
repz
iret
jo
fwait
xlat
sub
xchg
or
lahf
ror
ja
(bad)
xor
shl
jno
rol
adc
(bad)
in
cmp
mov
jbe
dec
movs
or
pop
pusha
out
sub
data16
xlat
fsubr
mov
ret
pop
shl
ins
push
push
stc
mov
call
retf
mov
dec
shl
(bad)
loope
adc
and
inc
data16
in
add
jb
mov
xor
mov
cmp
push
inc
loopne
mov
gs
cmp
pop
push
icebp
hlt
dec
adc
dec
push
jp
jge
movs
push
xchg
inc
retf
lods
and
push
or
stos
sahf
call
push
push
dec
mov
add
arpl
sbb
xchg
sub
popf
or
xchg
jno
dec
xor
cmc
jle
pop
push
outs
adc
rol
int3
push
add
xchg
sbb
pop
push
mov
and
iret
adc
ret
test
xchg
outs
mov
push
xchg
or
mov
and
(bad)
and
in
aam
inc
jno
neg
popa
pop
lds
scas
pop
leave
popf
jmp
fisubr
inc
movs
scas
cmps
test
pop
add
jae
aaa
iret
pop
imul
add
and
in
inc
js
push
inc
or
pop
(bad)
sub
pusha
pusha
xor
push
sbb
sahf
es
nop
stos
(bad)
dec
cmps
test
stos
cmp
sub
test
nop
imul
sbb
mov
mov
push
dec
pop
dec
stos
div
fcomp
out
enter
xlat
rol
sub
sbb
jmp
aas
imul
push
pop
or
sti
int
jnp
push
mov
fwait
mov
xor
pop
sbb
rcl
ss
or
enter
jl
movs
mov
retf
fnstenv
mov
movs
mov
dec
jg
dec
shr
pop
repz
xchg
sbb
push
mov
xchg
xor
inc
js
ja
add
mov
add
out
mov
nop
jo
sbb
and
call
pop
sub
jno
adc
int
push
adc
mov
sbb
push
mov
bound
in
dec
push
cs
jo
mov
add
mov
xchg
inc
fadd
inc
int3
leave
cmp
inc
mov
shr
cmp
mov
push
out
cmp
pop
(bad)
push
mov
addr16
and
aas
popa
pop
sub
inc
cmp
mov
push
std
lahf
jo
jnp
shr
and
cs
inc
aas
les
adc
cmp
das
stos
jbe
add
xor
lahf
mov
mov
dec
pushf
and
rcr
adc
movs
lds
mov
loopne
cmps
push
mov
mov
call
or
pop
mov
jle
jae
dec
mov
ror
mov
mov
mov
lds
arpl
dec
mov
xor
adc
adc
cmp
out
sar
pop
in
add
inc
cs
sub
aas
lock
test
sar
adc
daa
pop
pop
cmps
mov
ss
shl
movs
mov
imul
pusha
and
int
cdq
sar
adc
dec
inc
test
mov
push
xor
mov
lea
mov
mov
xor
adc
xor
fistp
dec
ret
add
aam
xor
aaa
in
mov
xchg
(bad)
dec
rol
push
add
add
pusha
and
jg
fs
popf
or
lds
dec
cmps
rol
cmps
mov
cmps
push
and
in
loopne
sbb
int
push
cdq
int3
repnz
dec
push
cdq
adc
fadd
nop
loopne
popf
xchg
mov
push
push
inc
jnp
inc
fdivr
fmul
and
inc
xchg
sbb
or
loopne
ins
adc
xchg
sbb
mov
jp
and
sar
fidiv
pop
mov
add
test
xchg
add
or
sbb
cmp
pop
retf
test
in
into
(bad)
in
or
xor
cmp
or
xchg
push
mov
pop
shl
sub
dec
xchg
pop
and
add
fsubr
inc
scas
cwde
lds
gs
push
mov
stos
pusha
inc
dec
fisttp
pop
inc
or
push
aad
ins
movs
sbb
pushf
imul
fcmovu
jmp
stos
outs
dec
push
mov
cmp
(bad)
cmp
ret
outs
movs
stos
adc
cmps
mov
fadd
(bad)
adc
push
ret
les
in
stos
sbb
dec
and
shl
call
sar
fdiv
pop
pop
imul
outs
jmp
sub
fs
and
adc
inc
jecxz
cmp
out
sub
test
mov
sar
sub
cmp
or
mov
mov
loope
in
enter
mov
push
call
fcom
inc
add
je
fisttp
addr16
das
mov
adc
pushf
push
cmc
les
iret
sub
inc
mov
sbb
fldenv
cdq
cmc
jno
or
mov
or
loopne
add
in
clc
cmp
scas
lods
loope
and
dec
call
test
cmp
jge
xor
xor
jp
cld
mov
inc
xor
mov
cmps
call
cmp
add
adc
pusha
inc
sub
aaa
in
mov
and
xor
mov
and
or
jnp
cli
lods
loope
mov
push
mov
test
cld
stc
retf
fwait
cmps
sub
pop
neg
jl
outs
or
xlat
pop
neg
ret
mov
pop
out
dec
in
nop
icebp
push
scas
dec
sbb
sti
aad
inc
clc
pop
lock
in
and
jb
push
mov
test
lock
pusha
inc
ficom
pop
stos
jbe
(bad)
xchg
cmps
adc
call
cmp
call
xchg
std
cmc
adc
dec
mov
cmps
and
in
cmp
jl
cs
call
push
pop
mov
adc
jbe
sahf
xor
clc
dec
cwde
std
sub
push
rcr
sbb
xchg
sbb
xchg
shl
jo
and
cmp
sahf
mov
adc
mov
pop
mov
ds
cwde
repnz
in
lods
mov
fwait
pop
mov
scas
aam
sub
adc
mov
rcl
and
retf
ss
ja
std
adc
pop
loope
hlt
out
or
pop
retf
ja
dec
aaa
(bad)
or
test
movs
sbb
ficom
aam
xchg
or
cdq
fwait
iret
xor
loop
dec
lea
jae
or
jns
fistp
xor
ret
xor
mov
rol
aad
push
leave
stos
jg
xor
xchg
dec
mov
jmp
aaa
repz
or
(bad)
jne
loop
inc
iret
or
adc
dec
add
cmp
xchg
push
ins
xor
mov
stos
fs
mov
in
dec
int3
jbe
or
movs
aam
cwde
add
cs
push
std
mov
in
mov
or
cmp
jb
push
and
idiv
mov
fabs
push
mov
pop
sub
xor
cwde
dec
mov
ret
out
sbb
inc
mov
jmp
dec
add
movs
mov
scas
icebp
ror
lds
(bad)
cmp
xlat
sub
or
fist
push
(bad)
mov
add
in
xlat
jbe
scas
mov
and
clc
mov
mov
jmp
call
add
jbe
rcr
enter
or
or
clc
cdq
sub
popa
das
test
jb
cmp
test
nop
sbb
pop
mov
in
pop
sbb
mov
cmc
ds
inc
test
jecxz
pop
jbe
sbb
(bad)
outs
in
xor
push
and
mov
loop
je
cmc
(bad)
pop
test
xor
mov
cmp
dec
cmp
sbb
mov
cmp
mov
push
sti
and
push
ds
mov
addr16
cmc
inc
cmps
fist
fsubr
push
xchg
(bad)
imul
fild
lods
out
dec
pop
push
xor
pop
out
fld
and
mov
or
arpl
mov
xor
hlt
retf
getsec
jo
mov
mov
fild
(bad)
cmp
dec
push
and
fcomp
out
and
adc
mov
sbb
imul
jmp
mov
fwait
sub
and
jp
mov
mov
repnz
pop
in
daa
mov
push
out
pop
mov
scas
lds
call
psrlq
push
fs
imul
jbe
xchg
cdq
sbb
int
pop
shr
icebp
mov
hlt
cmp
jns
sbb
and
push
in
ja
mov
neg
(bad)
lock
in
inc
imul
(bad)
popf
mov
sub
pop
in
and
pop
push
jp
call
jno
mov
xchg
lahf
std
clc
jmp
(bad)
not
in
jg
fsub
int3
mov
call
cmp
sar
out
cmp
stos
sub
dec
gs
lahf
pop
push
pusha
fisub
popf
aam
cwde
cmps
jns
loopne
mov
sbb
lods
and
inc
xchg
sub
push
inc
xchg
test
push
mov
loop
pop
adc
sbb
push
shr
jne
sub
outs
or
adc
cmp
jne
rol
dec
int
jmp
add
cs
jb
fdiv
je
test
xor
push
shl
mov
pop
cwde
mov
xor
mov
sbb
xchg
outs
mov
mov
mov
cdq
out
std
or
mov
jmp
sub
test
dec
xor
mov
xor
daa
dec
adc
(bad)
mov
pop
std
stc
enter
aad
dec
repnz
cld
retf
sti
lock
mov
repz
xor
inc
mov
xchg
pop
sbb
sbb
cwde
or
xchg
lods
and
mov
cmp
test
or
stc
xor
or
icebp
xchg
pop
push
nop
icebp
jecxz
xchg
lahf
out
into
dec
shl
inc
sar
aad
adc
imul
nop
or
aam
push
mov
fld
mov
xchg
inc
enter
mov
xor
cs
or
pushf
rcr
inc
scas
cmc
out
je
movs
fistp
(bad)
sbb
adc
inc
pop
hlt
jmp
repz
addr16
lds
mov
inc
cmp
add
or
scas
in
int3
jl
nop
adc
or
cmp
out
xchg
jl
sub
mov
repz
sbb
and
push
test
dec
jbe
jp
enter
test
jnp
in
sbb
mov
inc
jo
pop
and
movs
sub
or
mov
sbb
xlat
xchg
adc
adc
push
inc
loop
sti
ret
push
sub
jle
cmp
add
cli
and
int
ss
(bad)
hlt
add
xor
cmp
repnz
loope
ins
cmp
data16
out
call
dec
or
and
sub
(bad)
lods
push
push
dec
mov
aad
mov
jo
jbe
ss
xchg
scas
adc
mov
adc
mov
sahf
inc
das
(bad)
daa
movs
adc
adc
pop
jns
(bad)
das
adc
xchg
scas
mov
ins
cli
xchg
data16
imul
(bad)
pop
xchg
jg
aam
fdivr
inc
jp
push
sbb
mov
inc
pop
xchg
and
jbe
in
xor
out
sub
adc
mov
mov
cmp
mov
xchg
movs
cmp
bound
jae
xlat
jmp
cs
dec
shl
pop
xlat
dec
xor
xor
dec
iret
add
icebp
jmp
shr
or
outs
push
aam
int3
mov
mov
stos
std
pop
add
shl
adc
out
xor
(bad)
mov
ins
or
sub
dec
jb
mov
and
mov
push
je
loop
inc
pop
push
xchg
and
movs
mov
mov
push
pop
ret
mov
mov
(bad)
std
or
iret
pop
sbb
push
pop
xor
mov
out
movsx
push
cdq
add
ins
adc
sub
mov
xlat
cmp
retf
out
(bad)
out
jp
adc
inc
jns
and
loope
addr16
push
mov
sahf
mov
scas
xchg
dec
rol
jmp
gs
mov
mov
sti
fs
hlt
xchg
xchg
imul
test
push
std
push
inc
in
test
sahf
adc
iret
cmp
popf
out
cmp
push
xchg
or
inc
add
xchg
call
mov
mov
cli
pushf
mov
and
outs
jl
aam
iret
(bad)
dec
or
mov
xor
adc
inc
dec
lods
dec
popa
movs
sub
das
fwait
inc
ins
enter
das
mov
(bad)
retf
test
or
ret
mov
jns
push
rcl
fs
pop
retf
scas
push
pop
loopne
push
xor
jg
(bad)
jne
sbb
cs
dec
push
and
xchg
enter
movs
sbb
ror
(bad)
lods
out
xor
shr
fwait
bound
push
xchg
cdq
loop
push
mov
mov
dec
pop
inc
pop
cs
and
nop
inc
loop
daa
imul
xor
add
int3
lds
sahf
jl
jnp
pop
inc
in
sub
adc
pop
sub
fcom
movs
or
or
mov
jne
mov
rol
fcom
cli
cmps
xchg
mov
dec
out
fisttp
ds
jo
imul
aas
inc
mov
hlt
pop
mov
dec
add
in
in
iret
jns
xor
loopne
xor
inc
sbb
push
add
cdq
or
mov
cmc
mov
mov
dec
call
mov
mov
lods
sbb
mov
jbe
sti
pop
pusha
jecxz
retf
jg
push
stos
out
mov
popf
nop
mov
pop
outs
inc
cmp
sub
nop
arpl
or
xchg
mov
add
aaa
pushf
mov
push
fcomp
loopne
push
sub
in
outs
int3
je
and
imul
in
sti
int3
pop
sbb
outs
mov
ror
fs
mov
pusha
mov
jmp
jne
pop
adc
cs
lds
cli
sub
ret
stc
repnz
and
cmps
xchg
mov
sbb
popa
xchg
shl
adc
xchg
ins
mov
adc
mov
mov
inc
cmc
je
in
pushf
ins
movs
into
pop
lds
xchg
xor
add
xchg
cmp
adc
dec
(bad)
jne
test
cmp
sbb
repz
dec
pminsw
inc
mov
mov
fsub
cmp
xor
adc
mov
dec
pop
dec
call
jecxz
aas
or
adc
stos
mov
cmp
lds
pop
inc
cmp
add
push
loopne
imul
sahf
xor
addr16
scas
ret
mov
hlt
xchg
jg
mov
mov
push
out
inc
xchg
(bad)
pop
sub
test
aam
push
ins
fild
bound
stc
arpl
pop
push
popf
scas
shl
pop
sub
jp
jecxz
jg
ins
imul
dec
fcomp
and
test
add
test
jmp
adc
cmp
mov
fstp
nop
stc
push
out
mov
mov
aam
aas
dec
aad
rcr
sbb
(bad)
scas
and
mov
pop
iret
mov
jbe
mov
mov
dec
xor
ja
jg
mov
dec
jecxz
adc
mov
push
lods
addr16
and
retf
hlt
push
cmp
out
es
sbb
outs
fisttp
sbb
add
or
adc
popf
mov
scas
xchg
out
rol
pop
sub
adc
retf
pop
mov
and
mov
cmp
or
xchg
sbb
lahf
ja
jmp
test
lahf
push
dec
and
test
cwde
push
inc
mov
xor
popf
sbb
fmulp
pushf
fucomi
and
add
adc
xchg
adc
pop
in
test
add
pop
xor
inc
or
sbb
sbb
sub
pushf
push
add
sbb
cli
sar
push
pop
jns
sub
repz
mov
ins
(bad)
add
mov
mov
xchg
rol
mov
jmp
sub
fsub
(bad)
sbb
je
xchg
vpunpckhdq
sbb
add
ffree
xor
cmp
stos
pop
xor
clc
mov
call
adc
retf
std
xchg
jo
jl
es
dec
cmc
iret
in
cmovae
push
push
std
sahf
arpl
pushf
fnsave
xchg
add
inc
and
enter
cli
mov
(bad)
aas
retf
sbb
or
out
rol
push
movs
ds
mov
scas
push
aaa
adc
jmp
sbb
jecxz
push
fidiv
shr
std
and
mov
mov
cli
cmp
ror
xor
and
enter
mov
mov
(bad)
clc
push
int3
mov
gs
jae
fcmovnb
cmp
sub
rcl
ds
enter
inc
shl
ss
inc
sar
lahf
push
mov
leave
xor
and
(bad)
(bad)
ror
imul
dec
mov
pop
cmp
cmps
cmp
cs
(bad)
jae
mov
sahf
cs
xchg
shl
push
pop
xchg
ss
mov
xchg
adc
rcr
mov
or
cmp
enter
imul
mov
add
out
leave
jp
xchg
inc
retf
cmp
sti
in
(bad)
cmps
es
gs
mov
mov
scas
ins
fisttp
mov
sub
test
arpl
jmp
inc
bnd
cmp
ins
pop
xchg
cmp
jp
or
jb
popa
lds
iret
ja
mov
add
sub
cmp
add
xchg
sub
repz
push
cli
jo
es
dec
push
sbb
sahf
mov
or
fidivr
stos
pop
jo
dec
or
scas
movs
mov
pop
mov
push
mov
jmp
and
loop
clc
push
fsub
pop
rcr
adc
sub
into
inc
inc
push
aaa
push
or
fwait
ss
ins
std
cmp
aaa
jbe
jae
or
int
inc
retf
cdq
scas
(bad)
sub
sbb
stc
pop
add
xor
inc
adc
xchg
add
push
and
mov
fs
and
sub
inc
fwait
(bad)
mov
outs
les
sahf
outs
cmc
sbb
les
clc
sub
xor
(bad)
sub
hlt
in
test
cli
xchg
mov
jns
jp
and
lods
inc
ret
lahf
cs
les
inc
adc
jo
mov
hlt
pop
pop
fsubr
cs
push
test
sbb
cmp
jo
popf
mov
mov
enter
mov
push
fcom
adc
aam
push
and
nop
clc
imul
movs
pop
mov
mov
aas
sbb
pop
movs
jmp
add
or
pop
(bad)
je
mov
and
jae
je
in
fcom
mov
sbb
jmp
lds
test
rcl
xor
popf
sub
push
nop
sub
aaa
inc
ds
icebp
aaa
xchg
loopne
or
xor
jns
jl
fwait
enter
pop
mov
inc
daa
fld
jmp
pusha
and
ror
mov
or
in
push
outs
movs
in
frstor
mov
dec
lods
out
add
ficomp
jne
test
push
add
add
xor
push
xor
jne
cmp
nop
sub
setbe
mov
aad
hlt
test
test
push
xor
shr
ins
cwde
mov
imul
or
xchg
sbb
jmp
lods
xchg
sub
sub
addr16
cmps
jecxz
jecxz
xchg
fld
xor
xor
mov
sub
xchg
xor
inc
jmp
inc
mov
mov
sub
jns
sub
popa
cli
stc
mov
scas
test
jp
push
mov
cmps
je
or
or
and
std
sbb
aas
je
repnz
jge
cdq
cmc
jo
ds
or
xchg
inc
cmp
push
sahf
mul
mov
mov
imul
dec
dec
ret
sahf
add
das
adc
stc
loope
xchg
mov
pusha
shl
jae
(bad)
jnp
or
imul
fwait
push
cmp
cmps
repnz
xor
xor
pop
add
mov
xor
int
cmp
mov
inc
(bad)
sti
test
je
ror
jnp
pop
stos
je
es
or
push
pop
sub
fcmovnbe
adc
out
pop
in
add
pop
sahf
stc
cmp
js
cld
test
or
mov
pop
out
add
fild
mov
cmp
xchg
sbb
sbb
bound
out
pop
sbb
scas
test
mov
cmp
aam
out
sub
xor
or
xchg
pop
lods
or
int
stos
lods
mov
push
mov
xor
jno
adc
inc
sbb
ins
mov
fs
es
xchg
pusha
mov
dec
out
xlat
mov
sub
mov
(bad)
lock
inc
movs
ja
int3
shl
mov
mov
leave
and
mov
cwde
add
pusha
sub
or
jae
sbb
inc
or
xor
xchg
sub
pop
scas
bound
(bad)
fld
adc
lods
fsubr
fwait
mov
jg
pop
mov
iret
dec
jecxz
popa
scas
inc
mov
dec
push
les
or
mov
(bad)
cmps
pop
push
xchg
cmp
retf
cwde
xchg
fdiv
(bad)
cld
mov
jp
inc
mov
imul
or
cs
inc
push
sub
cmps
add
xor
outs
add
sbb
cmp
cmp
mov
jl
je
dec
xor
xlat
imul
cmp
mov
scas
int
sbb
lods
outs
jne
mul
jle
dec
or
aad
lods
ds
pop
adc
jecxz
jl
push
daa
fs
xchg
movs
push
test
sbb
sub
test
ins
adc
jge
jnp
dec
push
and
inc
xchg
mov
cmp
call
out
jbe
test
or
lds
movs
mov
pop
mov
outs
mov
dec
stos
or
cli
mov
lds
xchg
iret
dec
mov
add
push
mov
pop
inc
dec
cmps
aad
push
jnp
cmps
adc
mov
loope
mov
and
add
adc
shl
lahf
cmps
sub
xchg
sbb
fmul
mov
and
dec
cmp
in
mov
fdiv
mov
leave
xchg
call
mov
push
xor
mov
icebp
pop
mov
push
mov
mov
movs
out
shl
xchg
or
adc
scas
test
add
movs
jle
dec
and
imul
adc
js
push
ss
push
add
out
mov
repnz
aad
test
cmp
repnz
xor
sbb
add
push
push
lods
adc
mov
out
les
into
jmp
test
cmp
outs
and
test
inc
mov
or
leave
imul
cli
shr
pop
add
push
movs
inc
push
leave
mov
mov
sub
(bad)
ins
data16
mul
push
jbe
mov
sbb
mov
xor
inc
int3
push
and
ret
xchg
cmp
into
inc
cmp
(bad)
shl
cld
add
pop
dec
cs
add
mov
js
or
jo
das
add
mov
cmp
push
sub
sub
out
mov
and
mov
(bad)
jns
pop
clc
xchg
out
inc
out
xchg
iret
xchg
jmp
pop
lea
out
cwde
int
xchg
push
(bad)
stc
jns
add
out
int
jmp
(bad)
(bad)
mov
dec
stos
cmp
mov
aad
sub
jb
out
imul
ja
imul
inc
pushf
push
mov
in
fstp
jo
adc
push
outs
mov
pop
push
imul
adc
adc
cmp
xor
inc
fst
xor
adc
jmp
jle
shl
push
add
nop
pusha
jmp
rol
rol
pop
mov
adc
or
aaa
sub
rcr
sbb
pop
lock
mov
push
mov
(bad)
mov
push
into
fld
mov
cmp
retf
jg
mov
sbb
call
sub
stos
pop
inc
mov
(bad)
adc
push
jp
lahf
xchg
pop
xor
mov
test
in
and
int
xchg
and
sahf
(bad)
retf
sub
push
push
(bad)
mov
xchg
ja
das
mov
adc
jg
imul
jl
xchg
repnz
test
sub
ins
push
comiss
or
mov
cmc
cmp
mov
jle
push
xor
mov
push
in
push
shr
lea
mov
cld
retf
mov
cmp
(bad)
fimul
cli
mov
adc
cmps
and
pop
std
push
add
mov
fisub
xor
fsubrp
cmp
pushf
xor
add
add
daa
call
test
scas
cdq
(bad)
lahf
xor
dec
and
jnp
mov
ins
mov
and
sbb
cmp
dec
inc
cmp
mov
dec
push
jbe
test
jne
ja
pop
jo
push
jo
pop
inc
aam
sbb
sub
xor
icebp
adc
fimul
and
int3
cmp
arpl
in
sub
push
int3
inc
inc
add
xor
pop
sbb
aam
aas
mov
and
or
sub
pushf
into
out
inc
xor
movs
outs
test
faddp
jnp
in
push
mov
int
outs
jl
mov
pop
movs
movs
out
mov
imul
dec
out
mov
cmp
movs
hlt
mov
inc
xor
push
fst
inc
pop
mov
inc
not
popa
add
test
pusha
shr
popf
mov
or
add
test
mov
cmps
retf
jmp
or
inc
imul
mov
and
addr16
sbb
enter
fld
inc
mov
push
enter
daa
adc
pop
popa
and
into
repnz
xchg
js
xchg
mov
aas
mov
dec
aad
pop
repnz
sbb
jae
jb
mov
pusha
je
cmp
das
aad
mov
pop
inc
ror
sub
cwde
xchg
push
jmp
jge
(bad)
fcomp
adc
sub
ins
aaa
test
sub
xor
fisubr
xor
xchg
sar
aaa
mov
xor
pop
sub
mov
push
movs
inc
and
out
sbb
pop
or
mov
xchg
loopne
test
mov
jecxz
ss
fisub
aam
fwait
dec
sub
mov
cmp
cmc
stc
dec
dec
mov
mov
in
es
push
rcl
leave
into
jl
fst
arpl
xor
and
mov
repnz
xchg
jo
repz
xor
repz
or
inc
(bad)
xchg
sub
repz
daa
push
and
into
jg
out
cmps
stos
sbb
in
adc
adc
xchg
mov
mov
addr16
rcr
iret
mov
mov
fwait
stos
inc
adc
(bad)
pop
push
(bad)
and
sahf
(bad)
aam
mov
(bad)
and
dec
fwait
mov
shl
es
fmul
in
loop
xor
add
pop
fsubr
push
in
sub
outs
xchg
mov
and
and
cwde
push
inc
mov
push
push
fldcw
adc
fbstp
cmovb
mov
mov
cmp
inc
fst
mov
je
test
mov
inc
(bad)
in
cmp
mov
cmp
mov
out
push
xchg
fisttp
xchg
fstp
push
imul
jns
or
test
or
outs
scas
int3
into
dec
mov
movs
sbb
cld
(bad)
mov
fist
inc
aaa
pop
mov
mov
test
mov
cwde
lea
xchg
pop
adc
cld
fsubrp
mov
mov
mov
or
add
cmp
in
dec
test
sbb
retf
outs
bound
push
push
push
inc
inc
and
ja
jnp
(bad)
out
cmp
jne
add
mov
add
jae
pop
dec
lock
cmp
mov
mov
je
ret
push
inc
push
mov
les
mov
or
push
aas
jp
ja
xor
rcl
mov
loopne
stos
cs
in
xchg
push
sub
call
mov
adc
(bad)
mov
or
or
je
sahf
add
aaa
push
mov
(bad)
call
lods
mov
jmp
push
rcl
push
mov
into
shr
jne
(bad)
xchg
sbb
mov
ss
aad
cdq
iret
mov
lds
push
adc
std
or
push
pop
(bad)
inc
dec
sti
movhps
mov
mov
mov
mov
jecxz
dec
mov
and
mov
add
mov
call
add
xor
jecxz
jle
rcr
mov
add
and
mov
dec
je
ins
cmc
test
clc
dec
loopne
imul
jne
mov
cmp
adc
ins
int
add
in
dec
repz
push
(bad)
sti
cmp
arpl
dec
jp
test
sar
call
and
inc
and
(bad)
mov
pop
mov
xor
adc
sti
sbb
pop
mov
std
aad
adc
xchg
dec
les
inc
cld
mov
int3
aad
test
or
xor
push
test
jecxz
xchg
fcomip
ret
test
lods
pop
ret
push
fldenv
cs
cmc
cmp
fldenv
mov
ret
imul
(bad)
scas
cmp
js
leave
in
or
jo
test
stc
loope
dec
cmp
ds
jno
sbb
sub
jns
and
pop
dec
enter
out
ss
push
imul
bound
jmp
int3
es
shl
fs
test
dec
ror
mov
mov
ret
mov
lods
fst
sahf
push
repnz
jo
xor
mov
cmp
jecxz
fimul
in
sub
dec
js
jo
or
iret
cmp
dec
dec
add
movs
sub
and
pop
ret
stc
test
or
inc
xchg
dec
sbb
movs
call
rol
mov
pop
pop
mov
adc
popa
es
sbb
fst
jmp
addr16
rol
scas
adc
movs
ret
in
adc
sbb
dec
sub
out
das
jle
stos
lea
xchg
in
pop
dec
loopne
pop
push
sbb
in
or
mov
xchg
fisttp
mov
ins
or
jo
jo
cdq
sub
push
movs
ins
mov
cdq
jne
int
pop
mov
addr16
sbb
mov
and
mov
pop
test
mov
loopne
cmp
inc
fiadd
cmp
mov
mov
inc
mov
xor
push
or
sub
(bad)
cmps
xchg
bound
jo
fldenv
pop
xchg
xor
push
xor
outs
movs
ja
adc
stos
cmp
movs
dec
(bad)
push
jle
idiv
cmp
std
cli
jg
nop
nop
int3
rcr
ss
call
aaa
mov
int
test
cmc
popa
pop
call
mov
pop
add
add
mov
iret
(bad)
sub
xchg
dec
sub
enter
and
mov
imul
dec
sbb
mov
call
cld
mov
sub
add
push
mov
jle
inc
outs
jb
inc
sti
nop
shl
or
int
sbb
inc
dec
inc
jbe
sub
pop
jno
add
imul
mov
addr16
fnstsw
mov
mov
push
aaa
mov
pop
repz
dec
xchg
ror
or
test
(bad)
cmp
push
push
sub
sub
mov
imul
repz
(bad)
fisttp
pusha
jnp
sbb
sub
iret
push
out
add
loope
aam
arpl
jge
or
push
test
ret
xchg
in
inc
clc
pushf
shl
sbb
movs
inc
jmp
mov
add
retf
mov
daa
scas
mov
sub
aam
dec
pop
lods
imul
(bad)
or
dec
mov
je
stos
inc
push
fucomp
call
xchg
imul
loope
dec
icebp
retf
dec
add
add
cmp
jae
xchg
inc
push
mov
cwde
ror
push
neg
xor
fwait
xchg
xor
cmps
sbb
and
push
xchg
stc
movs
jae
and
test
dec
mov
cmps
imul
jbe
jmp
cmp
push
ins
or
pop
mov
mov
iret
push
(bad)
jmp
pushf
loop
cmc
pop
mov
dec
jbe
push
lods
mov
mov
lea
pop
pop
mov
jb
dec
cmp
cmc
loope
jp
cs
sub
add
sub
add
mov
jmp
cmps
cld
sbb
stc
jl
mov
repnz
or
jbe
aaa
sub
push
xor
cmp
adc
mov
xor
add
in
or
out
inc
mov
fstp
mov
xchg
cmp
jmp
sahf
addr16
pusha
xchg
dec
ret
iret
and
inc
aas
mov
ss
jmp
cmp
out
push
xor
cmp
out
(bad)
sti
and
or
sub
xor
shl
or
jne
jb
or
mov
xor
mov
fwait
xor
addr16
xor
sbb
adc
mov
jmp
cmp
test
jo
xchg
sub
mov
adc
aad
add
outs
addr16
mov
xor
lock
ins
call
ret
mov
jecxz
xchg
cmp
xor
mov
or
retf
pop
call
popf
(bad)
jle
mov
cs
xchg
pop
fiadd
les
sbb
fnstenv
jb
imul
push
inc
aas
push
dec
repnz
xor
pop
mov
xor
stos
jp
rcr
in
call
sti
xor
xor
xor
and
mov
stos
jl
fld
jo
fadd
push
pop
push
scas
inc
cwde
stos
into
push
lahf
gs
mov
shl
(bad)
leave
stos
call
or
les
stos
nop
mov
sub
pop
mov
jns
push
(bad)
push
sbb
test
xchg
ja
sub
lods
adc
mov
mov
mov
clc
ja
jb
test
mov
jb
sub
movs
mov
mov
push
test
xchg
mov
in
pushf
fadd
mov
iret
inc
shl
movs
sar
xor
scas
pop
js
ss
pop
inc
lahf
stc
and
cmp
mov
pop
sub
shr
mov
mov
sti
cmc
mov
push
or
pop
arpl
jnp
inc
aaa
shr
test
or
inc
push
adc
shl
outs
mov
fcomp
pushf
jno
pop
mov
imul
sub
mov
mov
fstp
or
into
mov
mov
sbb
or
scas
fiadd
fs
jecxz
inc
fisubr
and
std
call
add
in
push
clc
xchg
test
in
cmp
mov
push
mov
pop
cmp
scas
loope
out
mov
loopne
mov
pop
test
or
stos
cld
imul
pop
jns
dec
xor
cmp
xor
ror
xor
out
int
xchg
test
push
xchg
imul
xchg
pop
(bad)
clc
inc
push
adc
and
sub
out
test
jge
jmp
push
sbb
jno
shl
jo
pop
in
push
xchg
les
sbb
daa
dec
mov
adc
ins
lds
cmps
rcl
jle
mov
mov
cmp
popf
popa
shl
xlat
movs
dec
jmp
ins
cmp
stc
fsubr
push
cmp
mov
stc
pop
xor
jbe
fidiv
into
cs
inc
sub
or
sbb
into
popf
rol
(bad)
and
je
mov
xor
inc
sub
aaa
jae
sar
dec
cmp
bound
in
(bad)
mov
adc
pusha
shl
or
imul
cmp
sub
lods
addr16
adc
mov
or
rol
xchg
mov
mov
xchg
cmp
sub
add
pop
jle
add
xchg
rol
push
mov
push
mov
xor
call
enter
adc
cs
cmps
add
xchg
add
pop
out
push
sti
test
jg
mov
xor
xchg
dec
mov
inc
mov
clc
or
inc
xchg
and
imul
pop
shl
jne
mov
nop
jns
outs
mov
push
test
sbb
pop
adc
mov
out
lods
mov
mov
mov
aaa
scas
mov
lahf
daa
clc
ins
leave
enter
out
dec
sub
cmps
enter
push
or
daa
fcomp
call
sub
inc
mov
ja
out
mov
sbb
add
and
mov
rol
arpl
outs
shr
adc
sub
popa
dec
stc
cmc
xor
sub
rol
das
cmp
push
out
jno
test
call
loope
mul
xchg
test
jno
xchg
int
xor
rol
jl
cmps
push
movs
add
das
dec
mov
(bad)
dec
enter
nop
push
or
or
mov
or
leave
scas
movs
jmp
imul
fstp
int3
and
out
adc
inc
shl
inc
jmp
mov
aas
pop
cmp
or
mov
jno
movs
jns
and
int
out
jle
repz
jo
add
jbe
fldenv
dec
sbb
out
jmp
lds
test
mov
pop
in
dec
sub
retf
int
lea
lods
or
cmps
movs
mov
nop
or
add
mov
mov
mov
fs
sbb
or
and
push
mov
loopne
lods
adc
imul
inc
mov
aaa
sti
push
fscale
xor
xchg
or
in
xor
inc
sbb
or
loopne
xchg
jp
ins
cmp
cli
jae
ss
cwde
mov
repnz
mov
push
mov
icebp
icebp
js
sbb
adc
jo
add
mov
retf
test
sar
push
in
and
mov
fidiv
pop
push
lea
das
rol
and
daa
mov
in
test
test
inc
xor
(bad)
in
mov
shr
enter
(bad)
pop
mov
xor
jmp
inc
stos
xchg
ret
pop
adc
or
dec
daa
cmps
(bad)
neg
mov
mov
push
loopne
mov
das
mov
mov
adc
mov
and
and
add
in
je
xchg
jge
imul
and
mov
dec
(bad)
mov
data16
sbb
movups
fcom
dec
pop
sbb
movs
sub
push
mov
mov
ins
ins
dec
add
adc
or
push
nop
neg
jle
repnz
mov
inc
or
add
outs
test
mov
das
cmps
jl
push
lods
arpl
mov
push
dec
div
add
fcom
push
xor
(bad)
push
xchg
(bad)
jnp
loop
mov
push
dec
popf
mov
lds
movs
jb
sub
pop
and
push
fcom
pop
cmp
push
push
mov
add
js
xor
pop
mov
add
aam
and
or
inc
cmp
out
mov
fnstcw
bound
cmps
pop
add
inc
pop
stc
aas
cmps
nop
inc
push
rcl
ret
jp
inc
cmp
ss
jp
mov
inc
mov
(bad)
lods
push
arpl
jne
and
push
fwait
xchg
test
inc
aad
dec
mov
fs
lahf
jb
leave
es
fnstenv
inc
bound
call
add
imul
mov
push
dec
push
aam
mov
ds
xor
out
aam
dec
int3
in
pop
jmp
aaa
jns
cdq
adc
ins
data16
push
popa
cmp
jg
cdq
mov
push
fidivr
jge
sahf
jge
pop
fadd
fiadd
or
pop
push
add
lods
pop
frstpm(287
inc
test
pop
mov
test
in
cdq
lods
jno
popa
cdq
ret
loope
pushf
cmp
cmp
inc
mov
arpl
hlt
lahf
nop
jne
mov
rol
shl
call
shl
dec
mov
sbb
lock
out
mov
js
cmps
leave
mov
xor
xchg
add
pop
pushf
fs
ror
cmp
shl
ins
jae
test
lahf
arpl
lahf
and
repz
gs
std
xchg
sub
clc
push
pusha
int3
lock
imul
in
ins
movs
sub
push
dec
aad
int3
cmp
pop
fidiv
ins
or
dec
inc
mov
inc
or
lahf
add
out
stos
and
test
dec
es
xor
xchg
jmp
cmp
cmp
pop
or
ins
test
scas
push
inc
add
or
jae
mov
add
inc
adc
iret
and
mov
push
mov
push
lds
dec
bound
idiv
cmp
add
lock
xor
stos
mov
mov
pop
jle
add
jle
daa
mov
cmc
mov
ss
outs
cmp
in
push
fs
(bad)
stc
test
mov
rcr
in
ins
push
aad
popf
(bad)
int
int
cmp
pop
mov
(bad)
push
and
ret
push
jl
popa
cmp
neg
jbe
fwait
xor
add
lods
test
push
jmp
mov
int
sub
std
clc
std
sbb
movs
leave
or
mov
jmp
xchg
jle
fld
inc
inc
mov
jge
in
repnz
sbb
das
scas
mov
inc
movs
xor
push
ror
pop
mov
ss
gs
test
and
sbb
out
sbb
add
popa
inc
sub
mov
jbe
ja
adc
or
add
dec
xchg
jl
add
inc
or
adc
mov
mov
inc
pop
push
and
(bad)
call
or
mov
sbb
jge
mov
aaa
xchg
imul
mov
sar
jb
mov
jne
and
mov
sub
aas
(bad)
cdq
lahf
retf
pop
cdq
mov
sbb
dec
fstp
jg
imul
dec
ret
rdpmc
sub
mov
sub
xchg
inc
dec
push
outs
aaa
ins
push
mov
pop
xor
pop
das
push
pusha
sbb
ss
nop
mov
(bad)
cmp
icebp
sti
call
out
jg
int3
mov
stos
adc
mov
sub
ins
out
push
nop
xchg
(bad)
pop
xor
adc
cdq
and
jbe
mov
mov
out
cld
cld
sub
or
dec
imul
ins
cmp
pop
adc
dec
stc
ror
push
sar
mov
in
push
xchg
data16
test
lods
sbb
(bad)
mov
inc
(bad)
cmp
dec
add
push
sbb
jno
add
sub
jge
mov
add
fistp
cmp
sbb
sub
jge
dec
push
push
and
mov
fdivr
ja
test
sbb
popa
jbe
xchg
cmp
ret
dec
dec
fidivr
ret
or
cli
loope
adc
in
cwde
test
imul
hlt
jbe
sbb
jmp
xchg
xchg
ficomp
jno
jle
and
xor
int3
or
xor
hlt
aad
(bad)
daa
lods
jns
icebp
ss
sbb
scas
mov
mov
inc
xchg
in
cmp
xchg
lock
push
or
xchg
ins
out
cmc
push
jmp
fwait
cmp
rcl
and
push
fldcw
dec
and
sahf
daa
rcl
dec
pop
test
mov
stos
mov
dec
jge
cmp
dec
sub
in
hlt
add
push
add
out
mov
mov
xor
into
fiadd
lea
out
sbb
(bad)
rcr
js
(bad)
lds
lahf
aas
add
adc
jno
lods
call
push
lea
inc
xor
or
sbb
out
xchg
lock
rol
jle
adc
or
add
jb
ret
rcr
push
shl
jge
ins
sahf
cmp
leave
(bad)
call
nop
and
scas
push
retf
in
ror
(bad)
xchg
and
ds
or
push
ins
stc
sub
and
dec
ret
out
push
lods
push
(bad)
rol
mov
sub
add
mov
dec
xchg
aad
cmp
dec
iret
xchg
mov
sub
push
pop
jbe
adc
cmp
fild
imul
mov
inc
jno
inc
mov
pop
sti
lods
adc
ret
popa
jno
cld
sub
add
and
mov
daa
xchg
mov
pushf
push
in
or
xchg
xchg
sar
inc
mov
ins
xor
dec
mov
pop
jns
nop
push
popa
inc
mov
lods
inc
jnp
xchg
mov
cmp
ins
inc
int3
loop
push
iret
push
mov
rcr
frstor
mov
sub
inc
or
inc
outs
(bad)
out
pop
pushf
in
lock
inc
dec
pop
add
mov
sbb
(bad)
cwde
mov
in
popf
sub
xchg
or
xchg
mov
mov
shr
and
and
fs
shl
popa
in
cmp
pop
inc
mov
fs
adc
repnz
push
mov
cmp
lods
test
iret
fs
lods
sbb
mov
and
f2xm1
jle
test
or
test
push
scas
pop
adc
pop
pop
and
dec
xchg
and
mov
popa
in
pop
pop
fucomi
test
adc
dec
mov
aad
add
in
(bad)
retf
and
sub
loopne
add
mov
jge
inc
out
adc
fisub
dec
(bad)
ins
adc
dec
sbb
push
sbb
(bad)
cmps
scas
mov
pop
cmp
fldcw
add
cmp
fwait
jl
mov
sub
sbb
test
push
adc
inc
xchg
sub
test
and
adc
cmp
push
mov
pop
sbb
fistp
ret
pushf
ret
rcl
and
das
inc
retf
sbb
mov
push
pop
jp
sbb
push
ss
inc
push
shl
sbb
outs
sbb
sahf
lods
mov
pop
data16
push
pop
scas
or
cli
mov
or
and
mov
sub
cs
push
xchg
jne
sbb
push
pop
pop
add
shl
in
mov
push
daa
ja
mov
iret
jle
into
aaa
sbb
popw
int3
imul
mov
ret
inc
push
and
push
mov
mov
push
sub
pop
popa
shl
jge
pop
or
lock
and
xor
daa
mov
test
xchg
leave
cmp
sub
sahf
inc
imul
in
push
mov
add
movs
inc
push
cdq
push
jno
fs
add
mov
dec
jp
retf
pop
mov
cld
adc
pop
or
pop
sar
lock
mov
cmp
inc
leave
sub
lods
in
(bad)
pop
cwde
push
bound
in
mov
fstp
mov
retf
nop
push
(bad)
retf
leave
jns
(bad)
cli
aaa
shr
jecxz
loop
ret
xchg
mov
fadd
add
jle
out
(bad)
xor
loop
add
or
(bad)
add
sbb
retf
popa
or
inc
stc
push
mov
mov
je
hlt
pop
push
jge
xchg
pop
push
jmp
jnp
xor
loope
inc
cmps
cs
movs
(bad)
imul
in
lea
jecxz
repnz
or
or
inc
movs
sub
fwait
iret
ret
js
sbb
fs
mov
movs
dec
pop
repnz
out
jl
jge
cmc
and
cmp
cmp
in
mov
and
and
ins
or
sbb
cmps
repnz
mov
retf
cmp
xlat
or
repnz
(bad)
ds
push
xlat
xor
cdq
push
jo
mov
test
int3
fxch
fild
scas
jae
push
popa
sti
mov
add
das
mov
mov
push
jno
push
add
sbb
adc
jb
inc
mov
shr
movs
clc
aas
mov
xchg
jno
leave
mov
leave
jp
out
repnz
jg
xlat
push
call
shr
leave
hlt
aas
sub
push
jno
or
pusha
adc
dec
and
data16
aad
js
push
xlat
jno
or
and
cmp
add
es
add
pop
retf
mov
and
jb
outs
pop
data16
dec
mov
mov
imul
jb
sbb
push
cmovo
jb
or
test
cmps
fsub
das
int3
clc
retf
adc
stc
ret
jecxz
mov
dec
jne
cmp
aad
jmp
and
push
cmp
mov
mov
mov
cwde
cld
mov
sub
imul
int
lods
sbb
imul
scas
outs
cli
jb
lods
lea
rcl
or
dec
push
icebp
and
shl
loop
lods
xor
and
xor
in
sub
rol
jmp
cmp
repz
cmp
mov
xlat
jae
mov
ret
fistp
imul
jbe
test
retf
(bad)
test
fincstp
js
adc
(bad)
repz
add
mov
add
lds
inc
imul
mov
cli
sbb
jnp
pop
imul
jmp
aam
test
aaa
cli
arpl
popa
mov
fwait
or
test
test
js
mov
rcr
pop
mov
mov
ret
movs
in
mov
sbb
ins
cs
int3
mov
es
jo
in
sbb
lahf
jo
push
inc
sub
retf
ss
push
cmp
movs
push
leave
mov
stc
imul
loopne
(bad)
adc
and
dec
adc
scas
ds
dec
lods
pop
mov
push
popa
dec
into
pusha
les
jo
sbb
dec
jl
ret
aas
dec
jmp
add
pop
cmc
loop
dec
fisttp
xlat
outs
loopne
push
pop
aas
mov
dec
je
je
jbe
push
and
pop
add
adc
sub
sbb
pop
fmul
or
push
outs
lods
lahf
mov
or
mov
outs
cmp
push
xchg
add
jmp
mov
or
call
pop
pusha
add
fild
cdq
mov
outs
add
daa
(bad)
mov
cmp
mov
cmp
xor
jno
sahf
outs
and
sub
stos
gs
test
hlt
mov
call
sbb
or
daa
ins
sar
arpl
push
mov
mov
mov
adc
cmp
aaa
push
cld
lock
clc
add
ins
cdq
sbb
dec
mov
repz
push
push
sbb
push
retf
lea
xchg
add
mov
adc
xlat
or
add
repz
and
(bad)
shl
inc
push
mov
je
sub
xlat
iret
ror
sub
sar
imul
js
bound
sti
pop
adc
mov
sti
sbb
mov
mov
dec
jp
js
fld
dec
adc
retf
aad
mov
ins
pop
in
jge
and
mov
les
push
(bad)
push
sbb
dec
mov
jae
pop
adc
aas
xor
lods
fstp
shl
pop
not
cmps
das
dec
push
dec
xor
cmps
jmp
pop
mov
sbb
adc
inc
add
sar
(bad)
and
das
shl
dec
repnz
cmovnp
jecxz
or
jmp
ds
(bad)
adc
jno
push
fdivr
dec
popf
fadd
outs
jg
sub
mov
pop
push
dec
push
fisubr
inc
mov
call
cdq
cmp
sbb
into
nop
fmul
call
aaa
adc
mov
mov
pop
mov
push
sub
pop
adc
out
fsub
out
cwde
add
sahf
add
sbb
loop
fiadd
clc
sbb
fdivr
add
je
fnstsw
mov
fcomp
push
push
mov
data16
fnsave
xor
cmps
(bad)
call
leave
mov
sti
(bad)
lea
fadd
inc
popf
mov
stos
test
imul
out
fwait
or
adc
mov
dec
dec
jns
gs
jl
daa
retf
shr
shl
pop
sub
ror
pop
or
stc
into
or
das
mov
es
stos
movs
jle
repz
lea
out
lock
xlat
aas
push
mov
out
inc
dec
(bad)
cmp
xchg
cld
popa
xor
jmp
mov
cmp
rol
xchg
not
lea
mov
out
rol
add
mov
pushf
pop
push
movs
mov
lods
movs
retf
and
nop
nop
rcl
adc
cmp
loopne
jnp
push
mov
dec
mov
jne
sub
inc
fst
mov
sub
idiv
pop
cli
mov
pop
or
fild
xlat
push
push
jbe
xor
(bad)
push
sti
imul
repz
(bad)
add
sub
pop
pop
shl
and
xor
mov
inc
sar
pusha
cmp
pop
dec
popa
js
in
jnp
out
stos
jno
push
add
inc
inc
pop
out
mov
movs
mov
jae
jae
and
push
test
fmul
or
stos
mov
push
int3
add
and
adc
push
icebp
shl
in
leave
out
jae
push
stos
xlat
int
movs
lahf
jno
hlt
adc
mov
inc
icebp
out
or
mov
ficomp
stos
inc
mov
fisubr
les
and
repz
jle
push
pop
ins
pop
cmp
scas
xchg
imul
or
mov
sub
cmp
jae
lds
arpl
push
jnp
sub
mov
ret
aas
dec
dec
and
loopne
fs
push
out
stos
dec
pop
jge
and
int
jmp
jnp
push
sbb
into
stc
dec
mov
cmp
in
pop
lods
or
add
jl
arpl
ja
lock
xor
js
jb
(bad)
adc
lods
es
push
retf
adc
in
stos
shl
mov
sahf
xchg
les
cmp
stc
dec
lea
div
sub
push
cmc
lock
push
lods
sub
xor
push
jmp
or
jo
cmp
xchg
jbe
mov
sbb
add
xchg
sbb
mov
add
icebp
push
inc
xchg
sub
xchg
int3
les
xchg
add
movs
dec
adc
cmc
scas
scas
loope
sub
sub
inc
jge
mov
sahf
push
dec
(bad)
jmp
xor
pop
(bad)
ds
pop
out
sub
test
lea
or
pop
clc
out
or
out
repnz
ret
push
push
cwde
aam
xor
add
call
std
sub
inc
or
cwde
sbb
scas
(bad)
jb
cmp
cmp
xchg
sub
and
jbe
mov
inc
pop
test
neg
add
sub
imul
cmp
add
push
push
ja
int3
jg
rol
out
call
mov
jg
pop
adc
mov
sbb
popf
xor
push
fisttp
and
fwait
mov
mov
push
jge
fld
sub
jnp
mov
fsub
mov
mov
shl
in
(bad)
cld
cdq
mov
adc
repz
inc
mov
xor
aam
mov
hlt
mov
xchg
sbb
sti
xlat
cs
mov
mulps
cmp
fwait
pop
in
into
aaa
inc
xchg
fs
mov
add
mov
mov
mov
sub
cmp
scas
cmp
repnz
int3
and
pushf
sbb
pop
jmp
cmp
imul
scas
cmp
add
aaa
jp
and
mov
mov
push
adc
das
cmp
pop
adc
push
sbb
call
mov
fsub
xlat
jmp
hlt
fs
lea
cmp
cmp
push
dec
ins
nop
xchg
sub
xchg
xlat
inc
ret
jecxz
mov
ds
pop
scas
lock
jnp
in
std
push
pop
leave
popa
stc
lahf
loop
xchg
sbb
jp
jmp
mov
aad
pop
jnp
push
jmp
cmp
call
pop
(bad)
call
ins
(bad)
jae
arpl
inc
mov
and
cli
jge
fidiv
sbb
ficom
mov
and
jp
mov
sar
xchg
xchg
mov
mov
cdq
inc
mov
jle
mov
cmovne
into
inc
into
fnsavew
pop
inc
jle
jae
cmp
jno
inc
sub
mov
popa
or
jp
mov
rcr
daa
mov
cmc
dec
repnz
sbb
jl
or
rol
push
repz
test
add
call
or
pop
(bad)
or
mov
repz
xchg
or
adc
repnz
cli
pop
in
dec
and
mov
cli
retf
ds
retf
push
sub
aam
jmp
dec
neg
aam
ret
test
push
cdq
aad
ss
inc
push
scas
je
jl
mov
cld
xlat
lock
cwde
sub
retf
pop
push
in
fcmove
dec
loopne
pop
push
fwait
or
call
imul
mov
xchg
xchg
es
int3
dec
jne
lds
xor
jnp
mov
inc
bound
adc
push
stos
push
lahf
fwait
xchg
xor
mov
jmp
push
in
das
mov
dec
leave
mov
dec
jmp
and
sub
jle
imul
sbb
loope
mov
add
jns
pop
retf
sar
cmp
or
in
jns
shl
add
and
mov
sub
repnz
rcl
cmp
add
or
cdq
pusha
lock
in
dec
jns
inc
mov
mov
xlat
or
fidiv
xor
fyl2x
push
xor
mov
mov
add
mov
aad
lea
sub
adc
ret
mov
mov
pop
jnp
add
cdq
loopne
fwait
sbb
cmp
jge
cmc
in
adc
cmp
mov
add
test
push
or
pop
loope
in
push
cmp
sub
js
push
sub
sbb
mov
test
cmps
ja
nop
pop
or
adc
rol
or
xor
sub
sub
aas
inc
cmp
push
push
imul
jg
test
movlps
push
outs
cmp
xchg
jno
jno
dec
dec
std
jmp
repz
sub
pushf
mov
fldcw
cld
or
push
mov
mov
pushf
retf
mov
jb
and
scas
je
popf
push
jecxz
jb
mov
loopne
add
or
mov
fbld
inc
mov
sub
xor
dec
mov
cwde
pop
xor
pop
push
jno
leave
push
push
pusha
sub
and
jge
jne
pop
mov
xchg
cmp
idiv
aas
push
sub
sbb
push
pop
test
cmps
jmp
je
fldcw
push
jne
sub
frstor
cwde
pop
xor
add
mov
sub
ins
push
jns
lods
mov
or
icebp
out
aaa
xor
sub
jp
and
imul
mov
out
and
adc
inc
movs
out
add
jno
inc
add
mov
jno
call
mov
mov
ds
inc
mov
mov
shl
sub
xchg
or
cmp
jp
test
fisttp
xor
mov
inc
pop
lea
scas
cs
mov
out
mov
leave
push
das
sar
retf
dec
leave
gs
je
inc
js
out
adc
jbe
push
fist
bound
sbb
sub
xchg
dec
cs
test
mov
ret
xchg
dec
jb
xchg
cmps
add
mov
mov
dec
ficomp
cmp
pop
(bad)
imul
aas
or
(bad)
stos
push
jp
rcr
sahf
scas
sub
(bad)
jae
sub
sti
sbb
out
and
in
push
xor
and
push
out
imul
pop
add
push
jecxz
out
fbstp
in
cmp
or
rol
lock
int
ins
jge
inc
xchg
add
stos
fist
ins
ins
and
cwde
es
outs
pop
sbb
cmp
adc
xchg
adc
sub
add
mov
and
mov
popf
add
gs
stos
lods
cmp
loope
pop
ss
leave
xchg
mov
xchg
out
lds
movs
shl
pop
inc
les
jl
and
imul
iret
add
pop
les
data16
cli
cld
push
xor
xchg
std
add
mov
and
jecxz
addr16
loop
neg
or
jecxz
dec
(bad)
sub
int3
pop
sbb
push
sub
cmc
and
push
bound
push
out
cmps
inc
pop
iret
lods
push
xchg
jp
imul
dec
daa
mov
or
or
(bad)
dec
and
push
imul
mov
ret
loop
mov
lods
das
add
in
mov
mov
hlt
mov
adc
js
aaa
xchg
repnz
call
pop
push
fist
dec
jp
lea
test
sbb
scas
mov
mov
ins
popa
xchg
repz
xor
popf
scas
lds
or
xchg
mov
sbb
sub
xchg
jl
pop
xor
aad
call
add
in
lods
or
cmps
test
cld
loope
and
ficom
ins
mov
dec
les
cwde
xor
jns
ret
and
ret
xchg
mov
ror
mov
add
inc
ror
call
shl
and
imul
fwait
push
cmps
sbb
push
dec
push
ins
sub
shl
lock
sub
data16
lods
and
xchg
mov
cdq
retf
and
jp
sub
push
in
fadd
lds
cdq
adc
dec
jecxz
push
add
cmp
(bad)
jo
add
loop
in
stos
daa
pop
xchg
xchg
push
push
es
dec
mov
jno
sbb
pushf
(bad)
jbe
add
and
(bad)
aad
xchg
sbb
adc
jmp
daa
mov
nop
ror
cmps
fsubp
scas
pop
cs
sbb
aas
sbb
fld
add
sub
ds
jmp
ins
xor
clc
xchg
jmp
outs
jnp
inc
test
xchg
(bad)
inc
popf
imul
mov
lods
fsub
push
movs
out
xor
popa
push
jle
repz
sbb
movs
xchg
movs
pop
iret
cld
or
fs
fnsave
sub
dec
jg
mov
cmps
mov
shl
dec
sar
cmp
or
jbe
repnz
ror
cdq
pushf
dec
jecxz
fwait
xchg
or
inc
sub
or
ret
cmp
push
imul
or
retf
mov
fs
cmp
cmp
or
cmp
jbe
push
cmp
idiv
push
sub
stos
add
pusha
mov
xchg
push
test
mov
sbb
mov
fbstp
in
mov
xor
fdivr
lock
sti
lods
stos
mov
aas
mov
cmp
scas
mov
or
icebp
fcomp
(bad)
jns
mov
ins
ins
pop
dec
(bad)
cld
mov
or
and
push
xor
mov
in
call
not
scas
ins
test
clc
xchg
nop
mov
pop
je
cmp
rcl
repnz
jns
mov
fstp
and
mov
arpl
push
cld
mov
mov
adc
les
mov
sbb
nop
enter
mov
and
mov
or
lea
and
pop
fist
bswap
add
aad
adc
movs
and
cmps
jmp
daa
mov
cli
or
loope
add
add
movs
bound
lods
sar
sbb
jmp
push
push
mov
sbb
jne
shr
outs
xchg
test
mov
mov
lds
dec
jecxz
repnz
ins
dec
imul
out
(bad)
add
xchg
iret
xor
pop
xchg
dec
outs
into
inc
imul
mov
pop
mov
outs
pop
mov
pushf
dec
mov
inc
enter
or
adc
sbb
jmp
stos
cli
mov
pop
or
iret
and
nop
in
fidiv
pop
mov
pop
mov
not
pop
sbb
jne
arpl
in
imul
push
jnp
movs
xchg
add
popa
add
fs
push
test
nop
mov
pop
inc
pop
fsub
jmp
int3
inc
(bad)
mov
xor
mov
dec
imul
or
iret
scas
sbb
xor
pop
jmp
push
pop
cmp
call
loop
ja
pop
out
ds
shr
outs
dec
(bad)
xchg
hlt
push
push
or
inc
retf
push
stc
jge
inc
imul
retf
xor
push
rcr
mov
aaa
sub
mov
test
push
mov
and
inc
push
inc
mov
jl
push
cmp
xor
ds
or
push
dec
lahf
mov
outs
cmp
adc
inc
mov
jge
inc
add
dec
add
cmps
cld
cmp
iret
jns
lahf
adc
pop
push
mov
or
mov
gs
xor
sbb
jle
imul
add
aam
les
shl
xchg
(bad)
xchg
mov
out
xchg
inc
lods
sti
dec
lahf
out
mov
pop
push
sbb
sbb
xchg
dec
xor
push
arpl
cmp
xchg
push
push
ins
push
into
shr
mov
aaa
daa
xor
ficom
das
xor
fcom
sbb
test
dec
outs
adc
add
out
xchg
or
in
cmp
adc
sbb
xor
jmp
sbb
fnsave
or
adc
jae
cs
adc
xor
sub
test
ins
mov
sub
mov
gs
lods
cmps
dec
and
fcom
test
int
pushf
scas
fisttp
jge
cmc
cli
(bad)
jl
(bad)
xlat
mov
jae
int3
lock
int
sbb
xchg
push
mov
push
mov
mov
cmps
mov
mov
cmc
sbb
dec
gs
sub
sbb
lea
add
pop
cld
inc
loope
repz
inc
push
ror
ret
test
xor
ror
popa
daa
add
dec
dec
xor
cdq
(bad)
sub
(bad)
xchg
pop
sub
adc
ja
aaa
out
mov
test
leave
pop
lods
pop
clc
jne
jmp
pop
sub
out
retf
lds
adc
in
imul
mov
lods
push
dec
or
das
push
(bad)
xchg
aas
das
dec
fmul
cmp
fld
aaa
adc
mov
aad
pop
in
stc
out
jae
hlt
mov
das
xchg
mov
pop
cli
jo
in
mov
test
cwde
jle
(bad)
retf
jae
mov
pop
cmp
ss
daa
rcr
inc
sub
dec
mov
mov
psrlq
int3
pop
pop
jae
out
mov
or
mov
movs
xor
lods
mov
icebp
jmp
cmp
nop
in
inc
xchg
add
inc
ds
mov
ins
add
leave
adc
std
jnp
mov
rcl
adc
mov
int3
jle
or
les
mov
inc
push
cmp
gs
adc
mov
xchg
sbb
inc
dec
lds
in
repnz
cwde
push
out
adc
xor
cmp
xchg
sub
push
or
pusha
test
adc
add
jmp
push
sbb
std
inc
and
fcomp
sahf
clc
push
lds
les
push
in
sub
shl
xchg
in
leave
retf
inc
push
dec
mov
fild
push
mov
jmp
cdq
stos
dec
or
cdq
push
ja
pop
push
push
mov
inc
idiv
fwait
loope
cmp
mov
add
repnz
mov
sbb
push
(bad)
call
cmp
mov
bound
loope
push
jb
jne
sub
push
aad
clc
or
xchg
jecxz
add
jns
std
imul
push
cwde
push
and
pop
iret
mov
xchg
xor
add
inc
cmps
mov
pop
fbstp
cmp
mov
out
cld
fadd
mov
leave
mov
daa
sub
xchg
push
aaa
jmp
sar
repz
shl
xor
mov
outs
add
jge
push
pop
pop
pushf
stos
xchg
les
stc
mov
pop
mov
scas
fs
ror
cmps
mov
add
jmp
cmp
ret
fwait
cwde
push
stos
dec
xchg
test
push
cmps
bound
adc
mov
dec
xchg
and
or
add
add
pop
lea
jmp
fld
in
call
add
outs
fsub
inc
imul
sbb
mov
ret
dec
xor
out
div
add
sbb
enter
mov
mov
push
movs
lea
adc
pop
or
fst
ins
out
scas
xchg
add
sub
sar
div
sbb
jae
jno
mov
adc
mov
lds
fcmovu
gs
mov
cmps
inc
sub
jne
xchg
cmp
pop
push
ds
(bad)
sub
inc
and
adc
jno
xchg
fsubr
mov
rcr
retf
popf
mov
jo
iret
add
mov
nop
leave
mov
jne
or
dec
je
xchg
jne
inc
push
and
hlt
into
or
xor
test
int3
ins
and
ret
icebp
movs
lds
mov
mov
jnp
inc
rcr
aam
call
jg
mov
sub
cmc
fisub
xor
dec
and
lea
xchg
dec
ds
adc
into
pop
cli
leave
mov
clc
and
lahf
gs
xor
and
gs
retf
fisub
data16
mov
fidivr
and
lahf
iret
std
dec
pop
push
or
push
or
jbe
int3
mov
cwde
sbb
jge
push
test
push
cmp
stos
loop
test
mov
sbb
fs
push
ja
jno
dec
adc
or
mov
dec
mov
cli
sub
cmp
sub
dec
popf
xchg
sbb
test
push
fwait
je
sub
fcomp
rol
sbb
aam
vpandn
pop
fild
pop
and
adc
ins
and
cmp
lock
inc
jl
in
fcmovbe
out
jbe
or
jecxz
out
jns
push
out
rol
and
pop
addr16
(bad)
mov
pop
jnp
ret
out
push
and
ror
test
shl
stc
add
fnstcw
ret
dec
sub
imul
addr16
test
test
xor
leave
xchg
test
push
xchg
cmp
lea
push
sbb
sbb
fs
addr16
mov
cmp
mov
data16
inc
fsubr
cmp
push
daa
inc
add
movs
pushf
gs
xchg
into
mov
imul
and
mov
push
jecxz
mov
rol
lahf
cdq
dec
dec
arpl
xlat
xor
mov
ss
repz
adc
mov
pop
cdq
pop
fstp
mov
and
mov
xchg
hlt
inc
test
in
adc
cli
imul
lea
push
mov
arpl
pop
ins
mov
dec
fstp
mov
fcom
cwde
xor
mov
and
xchg
sbb
call
cmps
dec
sbb
xor
push
cmc
cwde
loop
cs
(bad)
pop
inc
enter
ror
movs
pop
and
mov
aad
lock
push
cmp
jne
es
sbb
cli
dec
das
and
lea
xlat
shr
repz
cwde
pushf
(bad)
pop
fstp
adc
jecxz
adc
cmp
cdq
push
cli
push
dec
xor
jmp
cli
cmp
lahf
out
dec
clc
(bad)
aam
inc
jne
out
inc
test
popf
mov
adc
jnp
out
lods
pop
adc
hlt
rcl
lea
out
dec
out
mov
cwde
dec
sahf
pop
mov
bswap
sbb
adc
test
ds
(bad)
lods
nop
adc
sbb
gs
aaa
sub
daa
cmp
loop
and
pop
push
cmp
pop
shr
add
popf
jmp
leave
mov
add
inc
or
jmp
jae
ret
dec
jge
imul
repz
lds
adc
movs
cmp
pop
fimul
mov
pop
leave
sub
inc
imul
adc
inc
adc
cwde
inc
je
inc
repz
in
jmp
add
dec
dec
xor
mov
sar
lea
movs
lods
pop
push
cdq
in
cmp
aam
jb
aaa
or
les
call
scas
mov
lahf
and
mov
es
pop
mov
jl
cmp
adc
test
xchg
or
pop
jecxz
or
cdq
stos
xor
jle
push
lds
or
adc
cdq
out
jle
popa
repz
mov
sti
push
add
in
shl
sahf
xchg
test
jmp
push
repz
push
mov
cmp
cwde
and
push
push
inc
mov
scas
or
(bad)
retf
(bad)
fdivp
inc
xchg
cld
retf
xchg
pop
mov
pop
call
bound
into
aad
popf
jo
test
sahf
mov
ja
mov
gs
pop
mov
pop
cmp
pop
in
push
ror
rol
mov
and
pop
ins
adc
call
and
jnp
inc
ins
lods
fs
jno
mov
xor
mov
stos
aam
clc
mov
pop
pop
arpl
nop
arpl
push
in
jge
mov
test
push
sbb
add
in
push
mov
add
outs
push
les
jo
jae
dec
jno
sbb
jno
adc
fsub
add
out
sbb
adc
icebp
jp
lahf
push
mov
and
inc
xor
inc
mov
jp
mov
pop
rcl
push
daa
xor
jo
cmc
in
inc
mov
add
or
jp
pop
repz
das
pop
dec
adc
xlat
pop
test
inc
push
cld
sbb
mov
sar
sbb
xchg
pop
pushf
dec
lahf
ins
xchg
cmp
and
push
cdq
mov
mov
js
hlt
inc
and
shl
lock
sub
rcr
lods
test
inc
dec
sar
lock
xchg
icebp
mov
popf
mov
in
or
out
scas
rol
test
adc
movs
faddp
jbe
cs
mov
dec
js
call
jmp
sahf
sub
jle
outs
and
dec
ret
aas
mov
sub
or
pop
mov
(bad)
jnp
cmps
pop
pop
xchg
cmps
cmp
add
ret
xchg
push
jnp
or
sub
mov
popf
mov
add
mov
pop
or
cmp
xchg
stc
pusha
das
cmp
icebp
fsubr
arpl
(bad)
test
adc
xor
pusha
dec
push
jb
in
mov
pop
xchg
jo
dec
mov
pop
(bad)
ror
sbb
mov
ror
fucomip
fmul
ficomp
das
mov
leave
and
out
out
aam
or
push
cmp
push
and
mov
dec
xchg
push
add
mov
inc
jmp
cwde
call
sbb
mov
loopne
inc
pop
pop
mov
movs
mov
cmc
pop
nop
ins
cmp
mov
xor
cli
mov
sub
xchg
stc
mov
cmp
push
sub
sbb
pushf
in
enter
xchg
fs
dec
stc
xlat
mov
rcl
sub
push
repnz
test
mov
aas
mov
pop
pusha
inc
jne
jmp
add
or
mov
push
enter
stos
sti
mov
adc
sar
outs
push
xor
mov
mov
js
into
psllq
out
shr
add
cmp
inc
adc
sbb
pop
add
stos
jmp
ret
pop
mov
adc
pop
frstor
repz
xchg
pop
out
icebp
scas
pop
adc
ficomp
ins
push
ins
or
pop
pop
je
or
mov
repz
inc
add
sub
jl
and
mov
and
nop
push
test
mov
dec
adc
jnp
out
sbb
or
retf
sti
xchg
sub
into
and
sub
pop
cdq
mov
fadd
mov
push
test
mov
inc
mov
xor
ds
int3
out
sub
and
mov
push
pop
xchg
mov
inc
jge
cwde
lods
sbb
shl
or
lods
adc
inc
test
mov
sbb
jae
or
push
xchg
test
xchg
fstp
mov
aaa
imul
sub
inc
add
pop
lds
sbb
mov
scas
(bad)
xchg
or
fadd
push
and
cwde
sub
iret
retf
out
add
lods
ins
sbb
jmp
push
mov
push
push
enter
retf
lahf
cli
mov
inc
call
addr16
shl
push
jo
hlt
jmp
arpl
dec
xchg
or
lea
jb
int3
xor
pop
inc
hlt
mov
inc
dec
add
test
icebp
into
rcr
add
cmps
sahf
sub
sbb
push
and
dec
jb
std
or
mov
repnz
sub
in
push
jmp
or
or
add
dec
loope
sbb
push
lods
cld
dec
out
sub
scas
jl
inc
jge
mov
jmp
stos
(bad)
cdq
jmp
jno
add
sub
jmp
ins
ret
mov
inc
(bad)
pop
pop
in
and
bound
sbb
iret
movs
ss
xchg
push
bound
dec
and
in
sub
mov
and
popf
pop
sub
jle
not
das
jecxz
cmps
test
retf
or
repnz
mov
xchg
pusha
ja
mov
shr
inc
lods
jb
mov
or
cmp
(bad)
and
std
movs
and
push
imul
ret
dec
mov
mov
xchg
lods
rol
rcl
js
xor
pop
or
xor
adc
test
mov
ret
fisub
jbe
mov
or
xor
fidiv
les
ficom
jmp
adc
in
ss
repnz
push
loop
inc
in
sar
jp
push
ret
cmp
outs
movs
into
push
(bad)
shl
push
pop
cli
or
into
stos
clc
jmp
add
adc
mov
sub
ss
jns
mov
inc
sti
push
ret
mov
add
pop
push
add
pop
gs
leave
and
cmp
sbb
vmptrst
fnsave
mov
push
xchg
or
push
and
mov
out
das
sub
adc
dec
mov
mov
mov
popa
push
push
stos
mov
movs
dec
ins
jns
in
mov
pop
ds
push
sub
jmp
push
das
cmp
jecxz
cmp
out
enter
add
push
call
icebp
ins
jae
(bad)
popf
mov
pop
fmul
or
aaa
and
ins
outs
push
cwde
std
and
not
mov
movs
sbb
jno
aas
lahf
in
pop
pop
sbb
adc
(bad)
int3
in
jge
mov
or
push
enter
int
out
into
jnp
js
pop
mov
pop
cmc
and
(bad)
dec
xchg
xor
shl
mov
fistp
lds
mov
ins
in
sbb
in
scas
mov
dec
(bad)
fstp
mov
cdq
push
add
fild
out
cmc
outs
inc
das
shl
cmps
ja
ja
inc
rcr
test
adc
or
fs
inc
pop
pushf
std
sahf
shl
xchg
sbb
aad
mov
fiadd
int
jl
adc
scas
imul
cmps
sub
jmp
and
mov
pop
pop
sbb
dec
mov
cmp
jno
push
rcr
mov
ins
cmp
inc
cmp
retf
adc
jl
push
ret
cs
fimul
movs
push
dec
and
push
mov
mov
in
sbb
mov
out
(bad)
mov
mov
push
lock
add
iret
retf
inc
loopne
or
mov
dec
xchg
nop
mov
ja
jmp
ins
push
cmp
inc
push
inc
movs
iret
sbb
pop
sar
xchg
mov
fimul
(bad)
retf
dec
or
out
jecxz
or
sar
cmp
inc
movs
inc
sbb
mov
mov
inc
daa
fisubr
popf
or
jmp
pop
mov
and
add
pushf
pop
sub
jnp
fs
push
pop
loope
fisub
(bad)
sbb
and
pop
push
shl
jmp
cmps
adc
or
mov
sub
inc
ret
leave
ror
cmc
xor
out
jno
(bad)
or
call
hlt
xchg
hlt
mov
addr16
out
mov
add
xchg
aad
mov
xchg
dec
jb
(bad)
mov
push
stc
repnz
(bad)
mov
shl
inc
push
test
xchg
sbb
imul
mov
xlat
js
xlat
jmp
repz
mov
push
test
sbb
jg
dec
sahf
(bad)
jnp
(bad)
sub
adc
fisttp
ds
test
sub
pop
push
adc
aaa
daa
lock
or
fidivr
cdq
push
inc
(bad)
out
inc
push
adc
xor
pop
into
cmp
enter
dec
test
(bad)
jp
adc
pop
mov
or
cwde
sbb
das
add
pushf
lods
pusha
add
push
imul
mov
(bad)
or
dec
(bad)
xchg
and
add
and
arpl
push
mov
adc
(bad)
jno
add
gs
jnp
sbb
sub
jg
sub
sub
sbb
icebp
mov
std
pop
sub
ret
or
lods
jbe
jge
push
retf
stos
push
stos
into
dec
mov
cmps
dec
into
or
xchg
inc
call
(bad)
out
popf
pop
mov
pop
cwde
xchg
int
sub
sub
arpl
pop
sbb
and
sbb
push
jge
dec
in
add
mov
test
mov
jne
cmovge
push
xor
rcl
mov
cmps
out
fistp
cmp
dec
or
inc
push
dec
rcr
mov
push
sbb
jle
cmp
popf
pop
and
push
xor
cwde
fisub
std
add
aas
inc
pop
mov
es
push
pop
add
pop
aad
or
push
mov
stos
es
sub
out
fst
ins
ror
cmp
dec
js
sbb
sub
retf
xor
jbe
imul
xor
xchg
jl
xchg
(bad)
jmp
cdq
int3
mov
mov
loope
pop
retf
adc
sub
dec
scas
xor
pop
add
(bad)
sbb
xor
inc
jp
adc
xchg
jge
cld
dec
into
es
xchg
arpl
loope
or
jnp
pusha
add
jmp
dec
(bad)
bound
ins
inc
or
mov
pop
adc
retf
mov
fwait
or
xchg
in
arpl
lea
jno
xchg
sub
dec
mov
ins
jo
or
xor
fwait
sbb
cmp
jb
dec
xchg
dec
ja
imul
movs
add
shl
cmp
mov
and
push
into
cli
inc
loop
cmps
cmc
jb
dec
mov
in
push
enter
aam
mov
adc
ins
stc
inc
xchg
out
push
mov
inc
jg
gs
xor
dec
lock
arpl
iret
fcom
pop
jnp
ins
push
push
sub
or
outs
outs
lds
add
cmp
sbb
xlat
push
mov
push
cmp
shr
jmp
cmp
retf
adc
xor
ss
pop
aaa
push
repnz
sbb
gs
out
sbb
std
enter
or
pop
and
xor
loopne
mov
sti
push
out
cdq
jp
(bad)
mov
jg
dec
push
mov
sbb
mov
inc
push
pop
jg
inc
bound
xchg
popf
push
pop
jb
ret
ins
or
data16
push
fcom
test
push
and
mov
daa
fild
push
mov
sub
cmp
add
je
add
mov
ja
mov
mov
aam
(bad)
lds
ss
dec
fbstp
js
xor
in
in
lea
clc
pop
out
pop
lea
pushf
adc
jp
scas
call
nop
mov
or
lods
cmp
mov
movs
push
mov
and
ret
push
cmp
js
sub
mov
push
ds
cmp
sub
mov
arpl
test
bound
push
sbb
inc
iret
popa
outs
mov
pop
jo
and
sbb
ja
fadd
aaa
rcl
add
in
loop
ins
ds
jmp
lds
in
icebp
or
cli
stos
(bad)
xor
outs
movs
mov
(bad)
pushf
xchg
push
not
add
jge
bound
enter
mov
cld
push
stos
mov
imul
test
push
push
out
fwait
sub
mov
sub
sbb
xchg
cmovb
ret
call
cmc
xchg
pop
sbb
xchg
scas
and
sbb
push
cmps
jl
and
imul
xor
jb
aam
sahf
jnp
nop
mov
ins
mov
ja
or
das
push
cmp
cmc
inc
pop
(bad)
sahf
adc
ret
adc
add
mov
cmp
mov
mov
xchg
cli
or
int
push
inc
shl
sbb
xchg
dec
push
bound
cmp
or
mov
enter
pushf
xchg
test
and
mov
jo
pop
sti
jecxz
push
mov
jmp
aam
jo
push
retf
push
clc
sbb
outs
(bad)
out
xor
jae
xor
lods
out
cwde
cmp
mov
imul
(bad)
leave
mov
inc
aaa
add
out
rol
mov
loopne
adc
test
loope
pop
sahf
(bad)
popa
adc
mov
in
jb
jnp
sub
dec
adc
retf
add
and
imul
fst
mov
push
and
jg
mov
jmp
pop
cmp
and
repnz
(bad)
nop
das
mov
cmp
(bad)
ins
adc
jp
pop
loopne
pop
daa
xchg
outs
icebp
jmp
cli
icebp
pop
lods
mov
xor
sub
mov
adc
xor
dec
rcr
xchg
imul
pop
fst
lahf
cmp
mov
mov
fdivr
mov
lods
das
lods
daa
inc
stc
les
push
mov
fcom
xor
jno
mov
shl
xchg
lods
mov
ss
gs
inc
outs
mov
and
dec
movs
inc
or
mov
xor
xor
pop
inc
rol
push
cmp
jb
add
cld
sub
inc
xchg
mov
jno
sub
sbb
add
push
inc
push
data16
enter
ret
cld
test
adc
mov
sar
out
mov
clc
xchg
or
mov
push
pushf
inc
cmp
mov
sahf
or
add
cmps
adc
mov
xchg
push
mov
(bad)
sbb
outs
cmps
addr16
inc
ret
jl
or
cmps
bound
push
fisttp
or
jbe
movq
(bad)
pusha
mov
std
jle
sub
adc
lea
stc
sub
sub
inc
fld
sti
fst
sub
aaa
inc
sahf
xchg
inc
ins
call
or
xor
mov
or
(bad)
bound
call
adc
jb
dec
push
lds
cmp
inc
push
pop
rol
mov
xor
call
sbb
scas
fidivr
retf
add
xor
jnp
push
mov
loope
cmp
mov
mov
sbb
js
pop
push
fcmove
hlt
sbb
stos
pop
mov
xor
ja
cli
inc
fidiv
das
test
and
ret
aam
xchg
pusha
add
or
clc
pop
(bad)
aam
add
jmp
loope
imul
loope
push
push
pop
imul
ficom
jo
call
mov
sub
out
dec
in
jmp
rcr
and
jb
push
jae
jns
mov
popf
and
mov
loop
cmp
cmps
mov
lds
mov
jp
mov
fisub
mov
dec
add
fs
(bad)
ja
gs
popa
fisttp
add
shl
inc
mov
adc
out
pop
lahf
out
es
lods
fisub
sti
test
test
jge
xchg
lea
xchg
retf
pop
pop
mov
mov
dec
sub
fcomp
xor
jg
pop
add
push
push
jne
push
pop
stos
test
mov
jns
mov
cli
pop
sbb
and
pop
(bad)
cmp
(bad)
pop
push
sahf
and
lods
cmc
scas
or
mov
cwde
cmps
dec
fnstsw
out
add
fwait
clc
and
adc
jl
jbe
pop
dec
pop
jne
inc
add
adc
push
inc
scas
out
mov
leave
jo
retf
cmp
inc
push
push
cmp
ins
xor
adc
push
loope
mov
in
sbb
ret
fimul
pop
dec
or
std
mov
push
jbe
data16
jnp
in
sub
push
sahf
test
mov
(bad)
out
pop
xchg
push
or
imul
scas
sub
and
jne
icebp
jb
(bad)
clc
je
add
repnz
popa
and
xchg
push
mov
mov
mov
sub
js
aad
jns
gs
jne
add
jb
sub
out
jge
push
push
(bad)
mov
in
cmp
and
(bad)
fnstsw
dec
jns
stos
imul
stos
movs
jnp
(bad)
xlat
or
movlps
ins
mov
out
jecxz
push
sbb
shr
bound
dec
sub
push
retf
dec
push
adc
pop
popa
mov
cdq
and
pop
mov
push
pop
mov
and
sbb
aas
mov
gs
cld
inc
test
dec
movs
dec
in
xor
mov
(bad)
loop
repnz
fbld
inc
xor
test
dec
rcl
es
or
push
les
dec
jbe
test
lock
loopne
sub
cmc
movs
jle
pop
push
scas
push
pop
pop
dec
push
mov
xchg
add
mov
popf
stos
cmps
and
(bad)
jo
movzx
js
in
sbb
nop
test
xchg
xor
(bad)
loopne
ret
in
movs
ja
mov
bound
or
test
neg
pop
pop
sub
lods
push
mov
hlt
xchg
jne
stos
iretw
and
call
inc
adc
int3
and
mov
or
mov
aad
dec
push
shr
mov
enter
xchg
fisttp
fs
jge
add
gs
sar
push
pushf
or
dec
cmp
lea
mov
mov
lea
inc
inc
xor
addr16
pop
and
mov
sbb
(bad)
neg
dec
or
imul
xchg
dec
or
sbb
jmp
jge
int3
jle
push
test
mov
xchg
arpl
idiv
mov
sbb
xor
daa
mov
mov
aas
push
pusha
push
dec
add
cmc
mov
inc
add
in
test
sbb
jno
push
dec
sbb
pop
adc
lds
add
push
loopne
or
jns
cmc
(bad)
cmp
addr16
cli
push
xchg
mov
pop
jle
rep
aad
sbb
adc
jmp
fstp
aam
push
aas
mov
cmp
dec
jo
sbb
pop
mov
fld
jo
jle
arpl
dec
frstor
fs
mov
push
mov
rcr
sub
mov
add
dec
jbe
aam
sub
push
push
xchg
rcr
xor
gs
or
jl
push
gs
cmp
xor
aas
stos
inc
inc
pop
movs
dec
sub
call
or
adc
scas
and
push
jmp
nop
add
(bad)
add
cdq
lock
imul
arpl
mov
pusha
and
mov
(bad)
fisub
ret
sbb
adc
push
sbb
shl
pop
fucomp
mov
aas
popf
das
fidiv
adc
mov
inc
fst
loope
test
out
mov
stc
dec
cdq
sbb
ins
ficomp
cmps
inc
or
mov
(bad)
cmp
ja
out
pop
test
inc
sar
sub
or
jne
es
push
inc
dec
or
std
add
hlt
jo
cwde
xchg
dec
scas
inc
(bad)
(bad)
adc
(bad)
push
(bad)
xchg
stc
xor
push
jle
(bad)
fistp
or
cmc
sti
lods
loop
adc
push
mov
(bad)
fcom
mov
ret
hlt
pusha
sub
pop
add
mov
xchg
pop
outs
mov
jns
hlt
mov
mov
jno
stos
into
mov
mov
(bad)
(bad)
push
dec
xlat
js
dec
inc
inc
mov
clc
jp
push
add
add
push
xchg
inc
inc
(bad)
jae
fisub
mov
fs
push
call
dec
jmp
popf
adc
sti
outs
jns
lds
out
cmp
lock
sbb
xor
and
jae
(bad)
out
dec
cmps
jae
and
jmp
mov
sar
dec
or
(bad)
(bad)
push
(bad)
xlat
call
push
inc
dec
mov
fst
adc
mov
adc
cmp
jne
loop
dec
jle
or
mov
cmp
lods
cld
and
mov
addr16
mov
xchg
push
sbb
sbb
ss
dec
test
push
and
outs
cli
test
outs
xchg
mov
fisubr
sub
sbb
xchg
jmp
jne
cmp
in
hlt
cmp
es
icebp
push
sub
jmp
mov
outs
cmc
jg
mov
mov
mov
mov
inc
jle
cmps
or
shl
push
inc
sub
sub
xchg
(bad)
xor
jmp
dec
cmp
xchg
or
ror
mov
xor
xchg
stc
psrld
aam
cmps
inc
push
mov
aaa
jge
daa
fisttp
(bad)
aad
ret
jecxz
clc
fs
cmp
fsubr
mov
(bad)
sahf
jmp
mov
add
cmp
mov
(bad)
hlt
pop
shl
repz
mov
or
pop
(bad)
je
and
stos
loope
daa
(bad)
or
sti
or
push
movs
out
fwait
cli
mov
ins
xchg
arpl
add
cmps
in
clc
sbb
jmp
loope
and
bnd
adc
dec
fsubp
dec
rol
mov
retf
push
mov
add
push
xlat
out
movs
inc
xor
sti
test
jns
bound
mov
pop
(bad)
out
shl
xchg
pop
cdq
shl
ins
lahf
lods
cwde
adc
les
test
xor
jp
push
dec
cwde
and
ins
stos
xchg
add
fstp
sbb
movs
stc
pop
push
xchg
fisttp
movs
pop
cmps
mov
dec
add
fdivr
pop
sbb
sub
jmp
pushf
add
test
xchg
(bad)
in
ret
mov
fistp
mov
xor
ds
in
shr
ror
stos
jg
retf
sbb
jl
pop
add
not
or
adc
not
fistp
cmp
neg
sub
clc
cmp
xchg
push
outs
xor
or
mov
mov
mov
test
int
rcr
sbb
mov
test
jno
lock
mov
xchg
fcmovbe
sbb
dec
repnz
mov
(bad)
mov
lahf
fdivp
leave
sbb
sub
ret
ds
xchg
mov
mov
js
shr
add
and
jp
xchg
jnp
inc
outs
add
movs
jp
or
(bad)
fdivr
ja
cmp
cmp
out
test
xor
frstor
sub
stc
(bad)
xor
dec
jne
popf
xor
xchg
imul
stos
in
aas
stos
ret
lock
xchg
movs
lea
scas
mov
xchg
sbb
mov
cmp
add
fwait
xchg
std
adc
cmps
add
lds
mov
jmp
cmp
gs
jp
or
add
call
inc
inc
jg
scas
mov
jb
sub
arpl
loop
popf
pop
push
jnp
mov
mov
mov
aas
and
in
fsubrp
aas
fs
xor
clc
imul
jecxz
fcomp
mov
lods
ins
icebp
es
or
mov
push
mov
int
fsub
stos
jnp
test
arpl
sbb
sub
xor
and
es
mov
scas
xchg
dec
stc
jl
out
push
aad
pop
push
xor
fild
pop
jge
lea
loop
(bad)
xchg
pop
jae
loope
lock
gs
test
mov
jb
jno
pop
xchg
mov
cmp
sbb
(bad)
ret
cmps
(bad)
mov
nop
pushf
mov
xchg
loope
pop
push
push
imul
or
and
dec
rcr
xor
ins
jecxz
stc
adc
in
dec
fstp
in
out
(bad)
jecxz
mov
stos
ins
test
out
xchg
adc
push
call
dec
imul
pop
scas
adc
test
push
sar
jno
mov
cdq
adc
iret
jecxz
pop
in
rol
(bad)
ja
out
outs
jl
mov
mov
loop
adc
aad
loop
add
ficom
sbb
sahf
in
pop
jg
lahf
jmp
(bad)
test
nop
mov
push
pop
xchg
inc
or
push
leave
sub
lahf
lahf
push
hlt
fs
adc
sub
xchg
(bad)
push
lock
inc
int3
fbstp
stos
mov
sbb
add
xchg
loope
dec
pop
ins
adc
(bad)
mov
outs
push
xchg
adc
shr
dec
pop
sub
lahf
pop
retf
out
xchg
mov
push
inc
cmp
dec
push
or
lods
je
(bad)
push
mov
sub
mov
ret
fimul
fadd
pop
add
mov
outs
and
inc
ficom
mov
lea
mov
pop
(bad)
loopne
pop
dec
adc
push
cdq
pushf
rcr
clc
(bad)
dec
jl
mov
scas
cs
mov
sar
jmp
add
fidivr
stos
(bad)
jno
(bad)
mov
pop
push
daa
sbb
enter
or
daa
dec
jge
leave
jae
inc
stos
rol
stc
adc
xor
(bad)
fwait
mov
adc
sub
inc
js
bound
push
inc
(bad)
and
(bad)
into
test
shl
jp
sar
pop
xor
inc
(bad)
in
dec
xchg
xlat
popa
call
clc
push
pop
je
and
daa
sbb
jp
repnz
imul
int3
xor
mov
cld
mov
xchg
mov
call
pusha
movs
or
out
sub
xchg
arpl
mov
(bad)
in
push
fst
stos
mov
sub
sbb
dec
jle
stc
jp
imul
addr16
inc
sub
mul
fdivr
repz
(bad)
xchg
add
inc
out
xlat
iret
adc
leave
inc
shl
dec
lods
cmc
loopne
cmp
pusha
pop
(bad)
and
daa
add
inc
dec
gs
repz
or
dec
pop
push
int
in
in
or
adc
ret
in
pushf
movs
ins
ins
pop
gs
ss
inc
and
shl
add
data16
cwde
mov
push
fisub
(bad)
sti
mov
sbb
add
xor
mov
(bad)
lock
adc
je
sub
mov
outs
jecxz
nop
les
pop
fbld
sbb
shr
shl
pop
neg
xor
xchg
retf
push
icebp
pop
arpl
pop
fsub
enter
or
pop
dec
lds
adc
imul
xlat
add
js
mov
dec
ret
cmp
jnp
popa
pop
mov
jp
jmp
inc
sub
(bad)
into
add
lods
daa
fcom
test
pop
addr16
jmp
lods
jo
dec
push
jmp
call
in
mov
adc
jle
xor
xchg
pop
stc
rol
push
test
jge
retf
cmovae
jle
pusha
push
sub
gs
std
js
sbb
push
repz
repz
aad
adc
adc
pop
lods
xor
mov
(bad)
push
sbb
pop
dec
push
mov
sub
icebp
jmp
xor
jnp
or
adc
(bad)
pop
test
ss
lods
ds
test
mov
in
pop
pop
icebp
mov
enter
push
mov
jg
daa
xor
xchg
cmp
jns
adc
xchg
cmp
mul
je
fild
sub
call
jmp
pop
mov
xor
lea
and
jp
mov
dec
xor
daa
push
mov
mov
pop
jecxz
ror
test
xchg
jnp
add
pop
dec
dec
int3
sbb
add
in
sub
lds
outs
fld
repz
push
pop
pop
inc
push
push
add
les
jno
nop
test
popa
lock
cmps
sbb
and
leave
lea
xchg
inc
push
pop
cmp
mov
push
repnz
je
push
repz
imul
mov
fild
rcr
(bad)
fisttp
shl
inc
adc
mov
xor
jb
cld
push
lods
adc
sbb
gs
in
xacquire
dec
xor
mov
fistp
ret
cs
xor
jne
adc
(bad)
xor
sahf
mov
(bad)
mov
add
push
int
retf
outs
pop
push
sbb
out
movs
pop
call
pop
lds
shl
ins
mov
mov
mov
es
js
inc
mov
test
ss
clc
cmp
push
mov
jmp
xlat
ret
daa
pop
jnp
scas
push
movs
mov
adc
cmp
pusha
inc
ffree
jecxz
jmp
add
xchg
imul
fimul
mov
xchg
jg
leave
mov
test
pop
imul
js
lods
js
ins
sti
sub
scas
inc
cs
outs
dec
fs
in
pop
std
sahf
test
add
jbe
inc
xchg
or
mov
mov
jg
cmps
mov
add
outs
aad
call
sbb
xchg
xor
hlt
push
mov
jmp
ja
sbb
call
leave
lock
fnstsw
mov
jno
dec
fstp
push
adc
adc
pusha
dec
jg
push
cld
push
jae
jg
loopne
push
lds
call
sub
add
fidivr
mov
iret
adc
(bad)
xchg
xor
out
cmp
loopne
add
add
dec
imul
add
jmp
mov
or
mov
mov
adc
mov
jle
addr16
fsubr
cmp
mov
xchg
mov
es
xchg
movs
mov
mov
xlat
out
jo
dec
repnz
fldcw
and
mov
xor
loopne
xchg
xchg
push
lock
pop
pop
movs
push
sub
jmp
in
pop
ins
dec
test
sbb
sub
jmp
retf
cmp
and
pop
movs
sub
push
push
sub
sti
mov
outs
push
imul
adc
cs
mov
mov
xor
pusha
mov
add
stc
neg
jbe
cli
mov
sbb
cmp
stos
lahf
les
mov
fdivr
jl
xchg
sub
loopne
int3
push
or
add
test
sar
aas
dec
rcl
imul
ror
fadd
sar
std
call
xchg
push
in
popf
call
pop
bound
jne
pop
inc
retf
sbb
adc
cmp
mov
jo
fldcw
or
xor
sti
mov
pushf
leave
int
xor
cmps
mov
daa
fcomp
jl
cwde
push
cmp
ins
inc
mov
aaa
cmp
int3
add
adc
push
outs
clc
mov
aam
neg
dec
mov
daa
pop
pusha
imul
arpl
inc
lock
xor
and
mov
mov
jns
mov
pusha
fnstcw
dec
sub
(bad)
loop
retf
enter
std
repz
sbb
cmc
jae
ret
mov
or
rcl
arpl
repnz
jecxz
sti
mov
mov
dec
xchg
inc
fwait
xchg
sar
sub
nop
dec
adc
jns
outs
xor
inc
push
fucomi
push
push
xor
add
dec
(bad)
fwait
mov
pop
adc
popa
loopne
sti
das
cmp
xor
ror
pop
xor
test
adc
or
ins
shr
sub
xchg
test
movs
mov
xchg
rcl
call
add
(bad)
in
push
mov
cmp
cwde
pop
nop
add
(bad)
icebp
adc
fiadd
pop
jmp
movs
mov
mov
dec
icebp
pop
mov
push
or
mov
ja
sub
adc
dec
scas
pusha
push
nop
in
sbb
int3
popa
cld
pusha
into
push
test
lods
test
cs
ret
movs
cmp
and
icebp
into
fdiv
xchg
das
dec
adc
movs
jecxz
jb
test
mov
(bad)
and
movs
lods
fistp
adc
xchg
and
cmps
xor
mov
add
es
outs
sub
data16
(bad)
pusha
add
cmps
je
retf
push
sbb
neg
jb
mov
leave
xchg
mov
cmp
ja
inc
push
(bad)
mov
stc
repnz
push
(bad)
xchg
or
aam
lods
ins
ins
(bad)
stos
mov
jl
add
mov
pop
imul
cmp
repz
nop
adc
lds
jne
pusha
aaa
(bad)
jg
jo
and
cmp
pop
jae
ret
inc
pop
mov
pslld
sahf
jp
mov
xchg
imul
inc
mov
lea
test
push
ret
cmp
in
div
imul
xor
imul
mov
jmp
ins
ror
jp
clc
imul
jp
pop
jnp
xchg
lods
sub
iret
sub
(bad)
ror
pop
js
add
call
ss
jns
call
sub
jne
push
add
fiadd
mov
repz
ins
ficom
mov
and
push
retf
mov
inc
outs
std
xchg
mov
xor
mov
sar
sbb
ret
mov
xlat
cmp
fsub
mov
add
push
pusha
adc
out
adc
or
push
xlat
cmp
mov
pop
mov
or
fsub
xor
fldenv
mov
mov
test
rcr
call
push
loopne
push
push
xchg
xchg
cli
(bad)
in
or
jbe
pop
test
popf
stc
and
das
xor
jnp
test
and
inc
imul
adc
cmp
icebp
pop
jmp
mov
xchg
retf
xchg
daa
jecxz
es
fs
jge
mov
dec
mov
dec
mov
(bad)
rcr
jbe
dec
cmp
in
imul
pop
into
mov
rol
pop
add
(bad)
cmc
scas
inc
ret
(bad)
jo
pop
inc
sub
push
sbb
dec
mov
test
jle
push
nop
xchg
ret
stc
xchg
xchg
cmps
test
sbb
stos
push
movs
(bad)
push
push
int3
mov
pop
pop
imul
nop
jmp
and
push
sar
dec
aam
enter
cmc
push
aaa
cmp
jo
sbb
pop
call
sub
sar
lods
pop
cmps
rcr
out
fwait
add
pop
mov
pop
test
inc
or
and
cmp
xchg
stos
test
and
dec
push
inc
add
lods
mov
sahf
sub
xchg
not
aad
shr
adc
ret
shl
out
sti
inc
fcomi
xor
push
inc
or
xchg
xchg
xchg
mov
mov
jae
rol
ret
cli
sbb
stos
xchg
rcl
cmps
jmp
pop
ds
(bad)
call
ss
and
dec
nop
dec
jb
lods
sub
cli
sub
adc
int3
xchg
lahf
xchg
les
push
iret
dec
xchg
mov
sub
xchg
je
and
seta
push
adc
sbb
ins
aam
dec
jno
cld
xlat
int
xlat
leave
mov
mov
fld
lea
fnsave
jb
dec
dec
mov
mov
jnp
dec
(bad)
xor
out
add
cmps
out
push
adc
int
(bad)
retf
ss
test
add
sar
ror
test
jmp
(bad)
jle
arpl
call
sbb
cmp
test
call
sbb
call
daa
mov
jecxz
pop
mov
ss
dec
dec
aad
mov
sti
xchg
mov
jb
add
xor
inc
mov
xchg
inc
cmps
iret
rol
sti
daa
cld
adc
xchg
mov
leave
xor
mov
add
lahf
xor
or
push
sub
repnz
mov
mov
inc
imul
retf
lods
pop
sub
shr
faddp
test
add
sbb
add
repnz
sub
fdiv
push
sub
mov
inc
or
movs
xor
mov
dec
push
pop
loopne
add
add
sub
add
xchg
sub
out
add
loop
or
push
mov
adc
pop
pop
push
test
pop
jg
pushf
in
cmp
add
inc
push
inc
mov
(bad)
fimul
push
sti
push
ret
test
mov
xor
dec
inc
mov
mov
jns
jecxz
lods
dec
xchg
sbb
mov
push
fisubr
aas
xor
gs
pusha
push
push
and
js
pop
mov
clc
gs
cmps
sub
cmc
xchg
jg
mov
adc
js
call
outs
sbb
sbb
adc
dec
sbb
xlat
js
mov
ins
movs
hlt
dec
or
jp
mov
cmp
loopne
(bad)
mov
(bad)
lea
xor
rcl
ret
outs
dec
mov
cmc
jae
shl
mov
out
shl
or
jmp
pop
cmp
stos
rol
cmp
out
pop
pop
shl
push
push
xor
lock
mov
call
dec
xor
add
mov
arpl
push
aam
mov
cmp
or
sbb
push
and
loopne
ins
mov
cmp
fsubr
mov
jo
sbb
mov
jns
rcl
cmp
pop
cmc
out
mov
(bad)
xchg
xor
dec
jmp
mov
push
mov
or
in
mov
pop
rcr
and
cmps
xor
call
fiadd
and
dec
mov
mov
push
out
mov
test
lods
sub
cmps
pop
sub
nop
stos
and
jb
sar
cmp
and
sahf
imul
das
aas
test
gs
stc
mov
jae
(bad)
jno
out
mov
dec
sbb
js
ficom
and
cmps
jl
lds
xchg
push
xchg
(bad)
sub
out
pop
les
mov
cli
push
in
sbb
sbb
sbb
push
dec
xchg
ss
jns
ret
cwde
mov
dec
ret
inc
jae
sbb
test
push
pop
movs
sub
mov
cmp
or
mov
push
mov
(bad)
jae
(bad)
movs
jbe
mov
retf
jo
xor
xor
sub
data16
mov
sub
sbb
cmps
div
arpl
push
mov
mov
pushf
hlt
inc
xchg
push
xor
cmp
cmps
sub
mov
lahf
mov
push
push
aad
loope
sub
add
push
cwde
cli
push
and
pushf
test
loopne
mov
add
cmp
imul
das
repz
lods
pop
mov
in
add
adc
jae
ror
loop
inc
loope
mov
push
enter
xchg
pop
outs
retf
ja
mov
rol
cmp
(bad)
cdq
daa
add
push
lahf
or
mov
fldpi
pusha
push
adc
dec
lods
(bad)
mov
inc
lahf
jl
push
push
loope
pop
push
xchg
and
fdiv
jp
and
jo
std
xchg
ret
ja
je
shl
jp
dec
movups
ins
lock
jns
ss
mov
and
in
jae
cmp
stc
xor
or
pushf
or
rcl
clc
mov
ins
out
push
fild
push
repnz
mov
das
cmp
xor
sbb
push
mov
xchg
pop
int
sub
push
push
cmp
fild
inc
push
ficomp
adc
mov
pop
int3
mov
movs
jnp
cwde
xchg
lahf
cdq
adc
pushf
nop
mov
jns
sbb
fild
inc
test
std
js
out
aam
in
cli
cmp
or
and
sub
pop
cmp
push
sbb
sbb
xchg
scas
shl
mov
mov
and
fsubr
push
sbb
adc
adc
push
sub
push
mov
push
into
pop
xchg
dec
int
mov
jo
or
lea
lods
mov
fimul
sti
push
sbb
dec
call
and
ss
cwde
xchg
jno
ret
enter
push
sub
jb
add
int
sbb
cmp
jb
imul
jmp
pushf
cmc
rol
nop
cmp
xchg
dec
repnz
sbb
mov
and
and
int3
jne
ret
push
sub
test
mov
cmp
and
test
or
imul
cmps
enter
and
mov
fucomip
mov
push
push
not
mov
inc
or
pusha
push
sbb
sub
lods
cld
xchg
and
loopne
icebp
movs
mov
or
out
pop
div
jp
dec
punpckldq
cmp
out
(bad)
mov
mov
jcxz
mov
or
mov
iret
add
mov
fnstcw
ins
pop
out
sub
stos
cmp
fimul
nop
add
leave
jno
sub
cmc
add
int
add
push
mov
adc
or
or
ror
scas
cmp
and
inc
call
adc
xchg
lods
xchg
imul
repnz
(bad)
repz
mov
xor
data16
sbb
test
dec
lock
mov
jmp
nop
inc
hlt
pop
test
(bad)
cmps
cmp
jnp
add
ins
out
dec
xchg
jp
mov
dec
pop
jecxz
and
add
loope
jmp
leave
stos
xchg
pop
enter
sbb
fwait
adc
test
add
shl
ret
adc
jno
lods
mov
mov
xlat
sbb
lds
stos
in
popa
pop
in
push
fld
jnp
inc
mov
jp
clc
movs
jo
dec
aaa
add
out
jns
cli
aas
sub
mov
xor
sub
fdiv
(bad)
mov
aas
or
popa
loopne
xchg
das
(bad)
fdivp
add
les
or
xor
enter
jle
push
jmp
lea
sar
mov
add
out
outs
inc
sbb
fst
mov
mov
aad
rol
daa
adc
add
jbe
mov
or
repnz
cmp
(bad)
sbb
and
cs
ins
cdq
mov
hlt
mov
(bad)
(bad)
or
mov
sbb
mov
aam
movs
mov
fstp
sub
loope
pop
(bad)
xor
push
clc
cmp
mov
jmp
adc
inc
scas
sahf
xlat
adc
out
xlat
dec
div
scas
or
pop
je
add
mov
or
out
in
ins
cmps
aam
pop
shl
adc
shl
sbb
out
test
push
int3
imul
addr16
mov
in
imul
sar
add
mov
mov
jno
jnp
pop
xor
(bad)
rcr
mov
lock
imul
popf
inc
mov
push
stos
inc
lods
xor
or
jmp
imul
pop
dec
xchg
pop
xchg
xchg
adc
popa
in
push
cmp
xor
scas
add
ret
icebp
popf
aad
jno
xor
dec
lods
pop
in
mov
scas
jp
inc
push
outs
nop
(bad)
adc
aaa
or
(bad)
mov
mov
sbb
mov
push
xor
sbb
fild
xor
pushf
inc
stc
push
iret
outs
shl
mov
xor
pop
mov
sbb
lds
push
adc
mov
cmp
shl
jae
jb
and
rol
inc
ins
sub
jae
and
cld
dec
xor
mov
aad
xlat
ret
xor
call
lea
xchg
fdivr
jge
mov
bound
call
sbb
adc
lods
and
cmps
aam
mov
loop
cmp
mov
mov
ret
cmps
mov
add
xchg
out
xchg
jne
xchg
dec
mov
movs
mov
xor
or
sub
push
int3
jne
cmps
stc
pop
fisttp
xchg
test
sar
enter
cs
imul
xchg
icebp
and
in
sbb
cmp
dec
ss
jecxz
fdiv
inc
scas
adc
cdq
mov
xor
outs
sbb
daa
sbb
inc
dec
lods
(bad)
mov
in
mov
dec
xor
out
std
(bad)
in
ror
adc
ret
fcmovne
sub
fsubr
outs
jnp
add
or
push
and
adc
push
mov
movs
iret
xor
sbb
cmp
push
aam
shr
mov
xchg
dec
xor
ret
xchg
pop
inc
rol
outs
fmul
pop
cmp
popa
pop
sbb
sbb
es
adc
push
inc
push
fmul
repz
popf
fisttp
pop
inc
bound
pop
inc
test
pop
jne
xor
jecxz
sub
fsubp
add
inc
and
popa
dec
das
shl
scas
jle
ud2
jmp
mov
sahf
bound
movs
sub
xchg
adc
bound
not
arpl
imul
or
pop
movs
out
sub
lods
sahf
dec
adc
inc
add
xchg
cdq
xor
mov
push
jg
mov
not
or
xchg
push
fcom
mov
xor
cmc
mov
aaa
or
jns
mov
loope
jo
mov
pop
in
cmps
push
dec
pop
gs
addr16
xchg
out
(bad)
es
mov
int
sub
movs
ja
sub
scas
dec
test
xchg
bound
mov
mov
add
lock
mov
outs
loopne
xor
sahf
xchg
adc
(bad)
arpl
cli
adc
push
cmps
and
and
xchg
pop
inc
lods
sbb
push
xchg
and
push
sbb
jmp
pusha
mov
dec
add
xor
sub
loop
dec
ror
mov
aad
mov
ret
or
(bad)
adc
and
call
push
or
push
int3
add
dec
imul
add
inc
in
jp
mov
pop
inc
sti
std
xor
data16
push
es
outs
cmp
pop
stos
jp
mov
mov
adc
xchg
dec
test
fcmove
push
push
sti
aaa
mov
mov
lods
les
(bad)
mov
test
cmp
add
inc
shl
icebp
aaa
lea
mul
cmp
mov
iret
add
test
iret
pop
adc
test
xchg
cs
sub
jge
and
stos
dec
mov
xor
cmp
cli
adc
mov
lock
sbb
xor
hlt
hlt
jge
imul
mov
(bad)
fdiv
adc
mov
jg
lock
xchg
je
pop
dec
and
sbb
je
xchg
sub
push
xchg
sar
xchg
sub
push
dec
shl
fdivr
pop
cld
aam
mov
jne
mov
jge
mov
das
fcom
sbb
ror
and
mov
push
fucomi
lahf
int
sub
call
cwde
(bad)
mov
xchg
ret
inc
inc
mov
add
mov
mov
jno
aad
fucomip
jmp
cli
ss
and
inc
cmp
dec
mov
clc
gs
imul
pop
mov
ret
repz
mov
xchg
push
inc
cmp
inc
or
ja
ret
push
sub
icebp
dec
lea
repnz
xor
sbb
pushf
scas
out
ror
sub
outs
dec
je
xor
mov
dec
push
push
fs
sbb
dec
ja
sahf
mov
xlat
into
mov
dec
mov
and
out
mov
cli
mov
push
or
xchg
xchg
repnz
call
test
lock
nop
add
xor
(bad)
cs
fisubr
out
and
aas
xchg
(bad)
mov
push
out
fcom
dec
cmp
repz
jbe
jg
sbb
cmovnp
cmp
jbe
out
in
jb
and
xchg
xlat
addr16
das
aam
not
lods
jp
daa
inc
in
adc
adc
fcmove
test
(bad)
pop
(bad)
sti
mov
and
mov
push
(bad)
imul
sbb
and
adc
(bad)
push
leave
cmp
hlt
mov
call
adc
dec
push
jmp
stos
ret
shl
shr
mov
sbb
add
cmps
xchg
rol
and
test
aad
push
in
sar
cmp
xchg
add
into
(bad)
out
js
nop
fcomp
shr
pop
push
mov
mov
push
xchg
jae
xchg
inc
push
xchg
mov
(bad)
cmc
add
dec
imul
adc
mov
in
xchg
jmp
popf
lahf
pop
not
or
push
jmp
test
into
in
pusha
dec
cli
push
dec
stc
pop
sbb
xchg
xor
sbb
jno
ins
jno
repz
jbe
les
cmps
mov
add
out
xor
enter
dec
and
mov
mov
or
out
test
shl
lea
or
hlt
xor
or
ins
sub
movs
inc
fdivr
dec
ins
adc
data16
jmp
push
dec
dec
add
ret
mov
jmp
out
cmp
outs
ret
es
sti
ss
pop
and
mov
sahf
mov
push
sub
retf
jmp
retf
adc
dec
loopne
retf
shl
test
mov
sub
pop
movs
sbb
std
fld
into
icebp
mov
imul
(bad)
scas
imul
into
and
out
imul
cmp
add
or
mov
cmp
call
xchg
push
clc
sub
jecxz
mov
add
not
rol
pop
mov
lods
retf
push
mov
push
xchg
xchg
popf
ret
add
dec
ins
mov
rcr
ss
movs
push
rcl
(bad)
push
inc
rol
or
dec
rcl
add
xchg
sti
(bad)
int
dec
data16
je
push
das
(bad)
test
repz
pop
mov
imul
pop
ds
enter
test
aaa
pop
imul
rcl
repz
test
sbb
pushf
mov
retf
pop
jge
mov
or
lock
fcomp
imul
mov
shl
push
mov
adc
push
ss
mov
ja
and
int3
adc
sub
stos
or
addr16
popf
leave
push
adc
out
cdq
sub
mov
add
sbb
inc
xchg
clc
lods
dec
add
outs
nop
jp
call
sub
push
push
rol
call
out
and
jbe
sub
jge
shl
pusha
or
ja
sbb
ret
fcom
mov
xor
xor
cmp
or
mov
xchg
ret
push
test
cdq
ins
add
ror
cld
test
xchg
idiv
pop
inc
fucomp
fistp
repz
pop
dec
fcmovb
mov
data16
pop
cmc
sbb
cmps
inc
shl
idiv
(bad)
popf
jns
push
dec
add
ret
ret
pop
mov
add
mov
fdivr
stc
jmp
fldenv
(bad)
pop
(bad)
das
fldcw
fimul
mov
movs
das
sub
xchg
adc
or
push
loop
pop
pop
xor
in
inc
nop
push
push
movs
fs
test
outs
adc
gs
push
int
std
popf
cli
ror
aaa
call
fstp
pop
gs
scas
rcl
fwait
xchg
pop
sar
retf
lahf
in
(bad)
rol
retf
push
mov
ror
push
rcr
aad
xor
mov
sub
jne
mov
jge
mov
aad
jmp
or
call
popf
xchg
add
das
or
in
sbb
scas
mov
aam
je
daa
in
test
sub
out
sbb
or
dec
mov
inc
fnstenv
into
std
ins
into
movs
push
test
hlt
jnp
mov
imul
mov
dec
rcr
lods
jle
jge
clc
jge
fdiv
push
sub
sub
sub
fdivr
ja
and
xor
ja
jle
jmp
stos
jmp
mov
mov
mov
and
bound
aam
push
xor
jmp
cld
push
jno
lock
sbb
aad
or
mov
mul
cwde
sahf
nop
dec
pop
leave
mov
popf
rcl
pop
test
mov
frstor
mov
push
jp
shr
and
cmp
dec
jge
mov
pop
enter
inc
add
mov
add
push
and
xchg
push
pop
xor
movs
ins
call
push
mov
(bad)
jl
fwait
jecxz
dec
dec
mov
fimul
cmp
icebp
inc
cmp
inc
jo
and
fadd
and
jp
and
sub
arpl
cmps
push
and
and
pusha
inc
loope
out
push
xchg
and
je
mov
(bad)
mov
ja
fs
sub
or
jne
and
push
cs
and
hlt
out
inc
mov
and
inc
fmul
mov
cmps
test
rcr
push
xor
cs
add
xlat
adc
aam
jmp
fnop
pop
lea
arpl
lahf
jbe
xor
jb
fwait
ja
push
sbb
sub
jl
sub
sub
push
js
test
pop
aam
adc
rcr
sbb
mov
push
popa
dec
adc
aaa
push
inc
rcl
enter
jb
lods
inc
dec
push
sub
jge
jmp
adc
dec
(bad)
dec
movs
pop
xor
push
jmp
jg
inc
inc
pmaxsw
lods
mov
fnsave
pop
(bad)
int
cmp
or
dec
xchg
and
scas
add
push
sub
xchg
bound
push
aaa
nop
imul
cmc
into
es
push
rcr
aaa
sbb
mov
adc
xor
add
push
adc
outs
and
pop
retf
pop
retf
lock
test
pop
pushf
retf
cs
cmc
push
mov
sub
pop
inc
jl
push
(bad)
cmp
push
adc
loopne
sti
mov
imul
outs
push
xlat
adc
dec
outs
fcom
mov
sub
add
and
cmp
adc
dec
lds
push
retf
xor
popf
fldenv
dec
add
cmp
sub
es
cld
mov
xchg
jmp
clc
pop
and
jno
mov
retf
or
pop
xor
aad
out
jmp
dec
test
in
daa
fild
xor
pop
add
push
arpl
sbb
pop
not
bound
arpl
add
pop
cdq
jmp
neg
inc
retf
cmp
(bad)
in
mov
mov
push
mov
mov
rol
pop
dec
shr
sbb
gs
jne
pop
ret
popa
shl
jmp
xor
iret
shl
call
push
stc
push
jo
movs
dec
jle
lds
lock
int3
adc
sub
lods
cmp
in
lds
imul
sbb
jne
lock
pushf
xchg
in
fisub
push
fcomip
pop
pusha
pop
in
aaa
imul
or
out
hlt
pop
adc
lds
retf
aaa
xchg
xchg
mov
aad
icebp
stos
pushf
push
stos
dec
or
in
inc
jle
push
pop
pop
fsub
jecxz
bound
(bad)
jp
sub
jecxz
bound
jne
hlt
or
jb
mov
and
add
mov
ja
add
ins
cmp
lods
dec
xor
mov
adc
adc
pop
push
push
popa
mov
fisub
push
gs
push
repnz
and
adc
xor
push
xchg
or
cmps
mov
(bad)
outs
and
mov
pushf
(bad)
cmp
pop
pop
jb
sbb
pop
mov
xchg
popa
jae
call
ret
jbe
ret
data16
imul
pop
shl
add
mov
outs
je
sub
call
lds
cmp
(bad)
mov
je
lods
popf
mov
fs
hlt
pusha
jnp
xchg
push
lods
jb
ret
fld
pop
lock
out
mov
xchg
xor
movs
aaa
scas
xlat
mov
jmp
inc
push
cmc
aas
add
stos
retf
lods
movs
(bad)
ja
fwait
leave
ltr
sbb
hlt
test
inc
mov
adc
out
lods
(bad)
lds
aas
dec
ficom
ss
xchg
pop
nop
push
jl
bnd
or
jns
add
aaa
inc
bound
push
xor
jmp
mov
cmc
mov
lea
cli
pop
sub
add
jp
xor
xchg
xor
cmps
stc
stos
sbb
mov
mov
xor
push
fsincos
add
fsub
aaa
iret
xor
aas
das
dec
xchg
push
in
pop
fbstp
stos
lods
mov
jb
mov
jecxz
sbb
lahf
dec
(bad)
mov
cli
and
repz
and
cmp
pop
pop
sysexit
pop
outs
mov
cld
xchg
das
retf
xchg
lods
add
push
jnp
and
idiv
lock
aaa
pop
sub
jne
jge
add
or
jo
or
cmp
rcr
cmps
hlt
add
add
cmp
pop
push
xor
in
(bad)
fwait
or
cmp
in
popf
mov
inc
inc
mov
fucomp
test
shl
sub
push
pop
mov
dec
fisttp
iret
movs
ret
cmp
jmp
lods
pop
sub
mov
aam
jns
aad
jno
jmp
jnp
push
jb
sub
mov
dec
add
(bad)
(bad)
pop
mov
pop
mov
cmp
jmp
pop
fnsave
fnstenv
cmp
mov
into
mov
stos
mov
imul
adc
repnz
jp
fwait
ret
dec
lods
fadd
jo
and
pop
pop
sar
es
sub
ror
mov
inc
sbb
pusha
bound
fdivrp
mov
pop
push
div
ins
xchg
inc
rol
pop
push
adc
outs
clc
and
(bad)
leave
dec
xchg
jge
daa
loope
fsub
push
mov
out
mov
push
add
xchg
sub
mov
int3
push
xor
cwde
cmp
sahf
lods
in
adc
sbb
mov
bound
loop
xor
and
shl
mov
and
aad
in
punpckldq
jge
stc
mov
fild
fdivr
pushf
or
ss
cmp
repz
jl
mov
loop
bswap
stos
pushf
loop
loop
lock
shl
push
sub
and
je
adc
cdq
jno
sbb
je
sub
adc
imul
outs
sbb
mov
scas
xchg
adc
xor
mov
push
pop
dec
cmps
iret
adc
mov
jge
loope
(bad)
out
pop
mov
mov
mov
(bad)
out
push
dec
or
sahf
stos
mov
addr16
mov
(bad)
push
xor
mov
mov
jl
nop
fs
in
mov
adc
xchg
and
popa
push
dec
add
mov
cdq
aam
aaa
aad
dec
jne
mov
repz
sub
dec
int3
and
cld
sbb
fild
add
adc
frstor
add
push
xchg
mov
pusha
cmc
pop
xchg
jbe
inc
push
cs
dec
popf
(bad)
js
test
loope
adc
or
fnstcw
out
cmc
sub
dec
cmp
(bad)
data16
push
ja
sbb
out
xlat
xchg
div
or
lahf
inc
out
push
mov
out
mov
loopne
rcl
adc
je
sub
sbb
in
int3
icebp
idiv
icebp
push
rol
pop
ret
fidivr
cs
mov
sub
lock
xchg
stos
ins
out
mov
cmps
pop
jae
scas
into
pop
lahf
mov
lahf
icebp
movs
in
(bad)
cmp
inc
inc
and
xor
aam
pop
mov
mov
pop
pop
(bad)
and
sbb
scas
and
data16
push
cmps
adc
cli
inc
or
pushf
sub
or
sbb
xchg
ins
xor
push
mov
icebp
jg
stc
fisubr
jnp
or
push
aaa
std
(bad)
mov
out
fxtract
mov
mov
je
popf
pop
or
cmp
js
cdq
sbb
or
mov
xchg
(bad)
les
mov
mov
cdq
inc
mov
scas
push
imul
in
daa
pop
cmc
xchg
aam
fcomp
das
sar
pop
out
ror
(bad)
aas
fcomp
sub
popa
imul
call
in
xor
adc
mov
stos
sti
jnp
sahf
(bad)
pushf
stc
idiv
(bad)
add
loopne
push
xor
jecxz
popf
or
pop
inc
ins
inc
sub
dec
addr16
icebp
and
mov
lods
xorps
(bad)
and
cld
and
(bad)
(bad)
jno
pushf
push
mov
popf
ss
mov
mov
mov
mov
mov
and
(bad)
xchg
sub
dec
mov
push
mov
xchg
cmp
je
(bad)
sbb
mov
int
push
sbb
(bad)
std
xchg
jmp
cmp
pushf
(bad)
cmp
idiv
jne
jae
jbe
sub
mov
test
inc
mov
aaa
or
cmps
shr
and
mov
add
movs
scas
cwde
lea
enter
sbb
lea
loopne
das
cmp
ds
adc
movs
pop
sub
mov
pop
les
add
jmp
mov
dec
(bad)
aam
fidivr
cld
daa
shl
cmp
sbb
pop
iret
push
sub
pop
(bad)
cmp
dec
sbb
outs
cs
repz
jno
out
popa
movs
retf
loop
aam
adc
push
add
pop
jmp
mov
inc
dec
xchg
nop
sub
mov
fst
loop
inc
jmp
(bad)
(bad)
pop
icebp
pop
xor
and
std
dec
bound
es
pusha
es
inc
loope
push
xchg
xchg
add
pop
stc
out
es
rcr
or
jns
pop
xor
push
int3
out
bound
mov
(bad)
adc
sbb
add
fdiv
xchg
enter
idiv
mov
(bad)
fldenv
sub
or
test
jnp
cmp
jns
in
inc
add
movs
pop
(bad)
out
xor
inc
mov
pop
imul
lods
xor
push
cmp
stc
mov
cmp
iret
sub
test
mov
cmp
cmps
scas
sub
jle
jl
push
test
imul
cmps
push
add
test
adc
xor
dec
test
mov
sub
jmp
mov
push
inc
ja
shr
mov
fwait
cmp
jl
shr
xor
imul
stos
jmp
aas
pop
mov
adc
xchg
cmps
rcr
sbb
inc
jmp
icebp
cs
pushf
lods
dec
pop
ficom
jecxz
popf
and
int
xlat
jecxz
xchg
test
adc
pop
fnstcw
mov
pop
outs
je
inc
mov
scas
sbb
push
jae
sar
ret
add
outs
push
mov
cli
dec
clc
jecxz
mov
mov
or
and
dec
adc
arpl
pop
sbb
cs
cmps
outs
inc
dec
out
cmp
sub
pop
imul
dec
popa
or
sbb
dec
ds
scas
popa
sbb
xchg
test
fnstcw
jnp
or
xchg
es
test
adc
mov
rcr
aad
and
adc
and
mov
lock
xor
ds
daa
out
cdq
outs
jge
sbb
int3
das
xor
hlt
jns
and
push
jns
mov
xchg
ja
mov
jmp
gs
movs
pop
pop
mov
mov
shl
inc
scas
sar
sub
fstp
loop
adc
mov
shl
mov
sti
leave
icebp
xor
xor
mov
aad
(bad)
ins
(bad)
inc
test
mov
xchg
enter
and
cwde
mov
inc
aaa
xchg
aas
out
sbb
sub
das
xor
cwde
or
adc
add
sbb
xor
daa
dec
rol
xchg
sub
shr
xor
rcr
call
dec
daa
sbb
mov
sub
or
inc
aam
bound
jb
pop
xchg
imul
cdq
xchg
mov
stc
push
call
fsub
rcl
xor
ins
test
adc
jg
push
jns
cmc
adc
add
push
daa
cld
fcmovnu
mov
outs
aas
shr
pop
in
adc
imul
adc
mov
xchg
mov
mov
fcmovbe
adc
cmp
add
jne
ficomp
scas
repz
movs
std
xchg
jle
lods
add
psrlw
fild
retf
jmp
in
sub
inc
jne
lahf
pusha
cmp
jl
push
les
icebp
loopne
push
xor
rcl
loopne
in
jne
cmp
lods
push
fimul
jne
fucomi
cmc
cmp
jno
leave
aas
mov
std
or
jmp
out
shr
test
loopne
xchg
in
arpl
inc
dec
loopne
mov
mov
lock
(bad)
adc
in
pop
ficomp
jb
clc
in
xor
xor
leave
sbb
stc
jo
repz
cmp
pop
(bad)
fwait
mov
fdiv
movs
ret
add
sbb
xchg
xor
jp
jg
cmp
cwde
cld
jnp
outs
sub
fisubr
add
fist
inc
add
iret
(bad)
(bad)
cmp
popa
sbb
sar
repnz
int3
push
mov
outs
xchg
rol
mov
(bad)
or
call
jnp
dec
jg
pop
stos
je
jp
xchg
repnz
fistp
push
sahf
mov
push
(bad)
adc
lds
add
jb
or
loope
int3
add
call
jno
mov
popf
sub
sub
out
sbb
mov
xor
loopne
clc
sub
mov
pop
pop
sbb
inc
push
movs
lods
(bad)
cdq
inc
test
dec
neg
and
cli
clc
push
or
movs
idiv
push
scas
(bad)
inc
push
mov
sub
cmp
mov
mov
in
xchg
cmp
pop
(bad)
mov
leave
and
add
ins
enter
ja
iret
out
enter
pop
add
cmc
pop
loopne
ins
aam
es
and
pop
popa
cmp
add
dec
cmp
mov
push
shr
adc
xchg
push
repnz
and
dec
in
repnz
call
sbb
cmp
and
outs
arpl
cmp
mov
xacquire
cmp
(bad)
xor
stos
or
sub
movs
xor
iret
dec
pusha
lods
add
mov
dec
(bad)
call
xchg
mov
loopne
movs
push
cmp
or
pusha
dec
add
mov
sub
push
pusha
jl
(bad)
mov
jno
cld
shl
cmc
mov
push
scas
pushf
jno
mov
ins
jmp
sbb
mov
xor
test
shl
adc
or
in
xchg
movs
call
fisttp
ja
idiv
(bad)
jl
cmps
pop
sub
mov
pusha
mov
arpl
push
icebp
and
stos
fild
jmp
(bad)
push
mov
mov
and
push
ret
and
sub
cmp
and
fldz
mov
into
cmp
pushf
leave
cmp
jo
imul
sti
sub
imul
push
jno
mov
(bad)
pushf
mov
mov
loop
jae
addr16
cmp
cmp
out
popa
mov
adc
dec
stc
cld
cmp
push
mov
sbb
scas
xchg
jp
jo
les
adc
ficom
sub
push
or
pop
cmp
ja
jne
(bad)
add
or
adc
(bad)
sbb
sub
iret
push
xchg
xlat
cmp
and
aas
mov
mov
test
mov
push
mov
adc
cmp
mov
das
xchg
mov
ins
cmp
push
xor
aad
sbb
pushf
ss
and
adc
add
stos
cmp
pop
in
add
mov
fidivr
into
imul
call
pop
das
shl
mov
bound
inc
imul
in
pop
sub
cmp
cmps
pop
xor
jae
push
mov
xor
and
lea
iret
int3
jle
sbb
inc
call
pop
mov
iret
pop
ins
dec
std
mov
push
adc
cwde
xchg
cmps
ret
popf
mov
repnz
shl
stos
push
test
dec
fimul
or
sbb
mov
aaa
lds
out
lock
cmps
cmp
adc
jns
mov
mov
(bad)
cmp
icebp
mov
into
sar
sbb
cdq
mov
jnp
test
pop
(bad)
pusha
pushf
cwde
mov
pusha
push
pop
adc
mov
shl
jge
rol
mov
scas
cmp
in
or
dec
or
rcl
scas
jb
lahf
sbb
mov
lahf
add
jno
jae
xchg
mov
push
outs
or
(bad)
icebp
mov
je
mov
adc
ja
push
lock
inc
add
mov
and
push
repnz
mov
xchg
and
pop
sti
mov
shl
pop
shr
cmp
adc
inc
outs
call
into
imul
sbb
std
push
adc
jp
out
(bad)
push
jb
test
push
enter
jnp
mov
push
imul
cmps
inc
pop
mov
xchg
mov
mov
or
mov
sti
hlt
xchg
sbb
bound
test
adc
stos
or
and
cld
jmp
pop
or
aaa
add
sbb
xchg
movs
xchg
retf
ds
or
dec
fs
mov
mov
xchg
pop
mov
or
sbb
push
(bad)
into
imul
ret
and
std
mov
push
jae
sbb
lods
cdq
enter
into
cmp
xchg
setbe
outs
adc
or
jle
mov
push
push
mov
fdivr
jmp
jb
dec
hlt
in
jl
jbe
and
fs
cmps
cmp
xor
cli
push
retf
neg
(bad)
add
jae
mov
pop
sahf
pop
scas
dec
outs
push
xor
sub
(bad)
popf
mov
and
inc
dec
push
retf
mov
stos
repnz
adc
ret
loope
int3
xchg
cmp
pop
fs
push
shr
fimul
stos
sub
mov
xor
es
jecxz
js
stos
inc
dec
cmp
xchg
pop
jne
(bad)
jle
xchg
xchg
jo
cmp
add
pop
xor
shr
cdq
fistp
scas
adc
pop
sub
stc
pushf
mov
lds
call
jnp
mov
popf
mov
repz
push
cmp
cdq
int
adc
jmp
fmul
and
aas
mov
aad
fldcw
fwait
and
repnz
popa
fisttp
iret
push
pop
movs
add
xchg
and
inc
js
fadd
mov
loopne
add
mov
outs
xchg
mov
mov
push
add
stos
out
pop
xor
cmp
int
jno
cmp
xchg
fs
and
or
inc
lods
(bad)
lds
jmp
dec
xchg
loope
fidiv
sbb
dec
jne
xchg
jecxz
adc
das
imul
add
imul
ds
pop
adc
and
icebp
js
mov
mov
dec
inc
push
xchg
mov
push
out
fadd
adc
test
fs
scas
rcl
int3
adc
cmps
in
and
and
imul
das
lods
and
(bad)
sbb
push
adc
add
cdq
or
cmp
(bad)
loopne
stos
and
sbb
ret
lock
in
outs
cmp
test
test
test
cld
arpl
stc
cdq
mov
(bad)
les
fld
jns
adc
mov
call
jl
push
out
mov
ret
xor
push
and
cs
dec
int
and
inc
out
pop
imul
in
nop
fld
call
xchg
or
das
pop
and
into
adc
call
jl
loope
push
mov
add
push
dec
ss
ss
pop
cdq
mov
dec
test
and
ds
mov
je
mov
imul
xchg
dec
lock
ror
(bad)
in
out
mov
ins
inc
iret
les
xor
inc
dec
cli
sbb
in
sbb
retf
mov
mov
adc
and
in
mov
arpl
test
add
cmps
por
pusha
stos
xor
push
rcr
addr16
xor
adc
lock
push
sub
cs
ret
mov
stos
scas
mov
clc
std
(bad)
out
and
xlat
cmp
cs
dec
inc
xor
xchg
and
ins
and
mov
outs
sbb
fs
and
xor
cli
sar
add
ins
cdq
dec
push
sub
xor
pop
pop
jmp
jmp
sub
bound
or
xor
inc
adc
addr16
cdq
or
les
inc
dec
jle
pop
cmp
and
sbb
(bad)
dec
inc
and
push
hlt
daa
lea
jne
jns
or
adc
jge
jp
jmp
sbb
lods
arpl
push
sbb
out
mov
hlt
dec
cli
and
and
jbe
cs
xchg
out
and
scas
cmp
in
gs
scas
pop
call
and
sbb
(bad)
cmps
je
xor
retf
popf
and
hlt
ret
adc
popa
inc
arpl
pop
inc
jno
shr
(bad)
sbb
arpl
retf
adc
xor
leave
mov
adc
cmc
sub
xchg
cmps
std
adc
jge
div
hlt
sub
mov
rol
fldcw
cmc
xchg
inc
jle
pushf
xor
and
fild
xor
sub
xchg
xchg
or
popa
aam
xchg
cmps
jl
jbe
or
inc
cmp
dec
mov
nop
add
jae
daa
fs
add
mov
fnstsw
adc
or
test
mov
ins
push
addr16
xchg
sbb
cld
mov
sbb
rol
fistp
mov
cmova
xchg
adc
stc
in
scas
lods
sub
clc
jmp
inc
cmp
scas
jmp
jl
cmps
scas
ret
or
dec
(bad)
pushw
add
idiv
adc
mov
out
retf
or
and
cs
push
jp
rcl
sar
inc
imul
cli
out
cs
mov
mov
rcl
in
aas
or
jge
pop
sub
(bad)
repz
pop
lahf
fsub
sub
daa
mul
test
sbb
scas
out
inc
cli
xchg
mov
push
and
push
sbb
pop
sub
jmp
sbb
fabs
aam
add
and
sbb
loopne
inc
mov
call
test
push
dec
jecxz
dec
fwait
cmp
not
adc
shl
xor
or
cmp
int3
pop
fidiv
test
rcl
rol
cmp
je
push
push
stos
in
sub
adc
mov
test
ret
outs
out
test
fist
jle
cmps
pop
pop
outs
sub
sbb
into
xchg
dec
jo
iret
les
and
cwde
xor
cmc
nop
mov
sub
xchg
stos
lods
mov
sti
push
fistp
(bad)
rcr
test
xabort
stos
daa
fs
cmp
adc
div
sbb
mov
mov
imul
inc
jnp
std
push
mov
jmp
and
iret
repz
lods
pop
pop
test
pusha
push
push
sar
movs
jl
(bad)
mov
cs
xchg
push
inc
push
pop
add
pop
in
jo
test
xor
mov
adc
sub
cmp
adc
sar
mov
or
or
gs
dec
pop
cmp
iret
mov
test
xchg
jle
rol
imul
xor
cmp
cmps
int3
xlat
dec
cmp
popa
cmp
pop
aam
ja
xor
lods
mov
mov
dec
jae
mov
int
add
sub
or
and
jo
adc
test
mov
inc
and
cmp
daa
ja
retf
cwde
inc
lds
les
dec
adc
jae
dec
push
mov
sub
push
pop
daa
mov
movs
das
jae
test
jae
pop
sub
frstpm(287
loope
or
das
mov
mov
cmc
fisttp
adc
in
pop
jl
adc
jle
mov
cwde
cmp
or
jecxz
cli
movs
(bad)
inc
ds
test
movs
ret
push
inc
into
mov
add
stc
push
dec
int
pushf
mov
xor
shl
imul
in
dec
cmp
sbb
xchg
mov
pusha
push
aas
jb
adc
xchg
fst
jns
scas
and
jo
mov
shl
retf
jno
lods
jne
hlt
fcmovnu
pop
mov
dec
sub
out
xchg
mov
fidivr
idiv
std
jp
jae
xchg
movs
lea
bound
mov
fdivrp
stos
xchg
pop
mov
dec
jns
or
or
out
inc
jp
in
test
xor
lahf
inc
sbb
xor
xchg
mov
push
cwde
sbb
frstor
sub
xchg
cmps
(bad)
cli
adc
loopne
dec
xor
fsub
jns
xor
sub
mov
sub
shl
sub
sub
clc
(bad)
in
ret
jg
pop
xor
dec
inc
xor
sbb
jg
jno
jbe
pop
cmc
scas
inc
sti
jno
fist
jl
out
popf
dec
sbb
xchg
push
mov
in
or
leave
popf
rcl
pop
xchg
out
mov
push
push
xchg
cmp
pop
in
or
adc
inc
stc
xor
push
inc
stc
cmp
sbb
ins
mov
xchg
cld
rcr
jnp
les
xchg
ficom
inc
sbb
stos
mov
retf
cdq
aad
mov
das
repz
scas
mov
and
mov
mov
pop
std
sbb
and
fdivr
pop
test
ror
test
cld
mov
mov
test
ins
inc
call
movs
dec
daa
out
mov
dec
movs
fcomi
and
sbb
fisub
ins
test
enter
pop
mov
in
sti
pop
rol
or
dec
pushf
mov
xor
or
and
adc
(bad)
jmp
aam
jg
icebp
(bad)
call
and
jne
ja
lock
adc
xchg
or
and
pop
loopne
cs
sub
icebp
push
je
sub
jo
inc
cmps
mov
mov
jg
ror
mov
in
stos
mov
push
pushf
cmps
pop
inc
jno
adc
out
adc
mov
jns
cdq
sub
cmps
ja
xchg
daa
cmp
(bad)
push
ror
not
or
shr
lea
jns
ffreep
inc
inc
jg
test
pop
push
lock
cdq
mov
mov
push
fwait
push
or
add
pop
inc
mov
mov
pop
std
js
into
inc
jb
push
shl
out
sub
xchg
pop
mov
jnp
(bad)
ds
ds
fwait
push
cld
mov
ss
jmp
push
arpl
icebp
loopne
adc
or
out
lds
out
and
fist
mov
push
mov
pop
adc
cs
imul
inc
push
(bad)
pop
jno
(bad)
lds
sub
js
loope
mov
call
adc
inc
mov
inc
pop
adc
jl
inc
imul
dec
xor
xor
sub
mov
add
inc
cwde
call
mov
jnp
ss
or
(bad)
inc
adc
cmp
inc
int
push
enter
mov
jmp
cmps
outs
gs
mov
es
mov
fcomp
mov
dec
cli
(bad)
cmp
inc
pop
mov
(bad)
lahf
push
mov
add
mov
adc
pop
mov
les
mov
je
add
movs
inc
jno
pop
sbb
xchg
jge
sahf
dec
retf
or
pop
fild
retf
out
std
cmp
icebp
jbe
pop
fadd
inc
add
retf
mov
pop
xchg
xor
test
inc
lods
sbb
(bad)
popa
(bad)
pop
loopne
sub
leave
mov
dec
and
sub
dec
pop
cmp
nop
clc
jnp
mov
sbb
je
pop
and
aaa
movs
mov
lahf
dec
inc
ins
or
inc
dec
xrelease
xchg
mov
ret
bound
sbb
out
mov
gs
call
shr
lea
fisubr
into
inc
pop
call
jl
push
jne
add
cmp
daa
aad
jbe
and
cmp
push
push
fidivr
cmp
sbb
mov
dec
shr
call
add
jmp
dec
fisttp
xchg
adc
or
or
xor
add
push
inc
cmp
inc
test
int3
mov
jnp
fldl2e
neg
adc
jp
out
fs
icebp
lock
imul
xchg
inc
in
sub
dec
xor
adc
(bad)
jg
fnstsw
cmp
std
mov
out
xchg
test
dec
inc
loop
inc
inc
add
xor
jbe
int3
aaa
rcl
sub
popf
pop
and
mov
retf
into
int3
add
mov
(bad)
or
(bad)
adc
mov
in
jp
pop
fld
jns
pop
sub
loope
lds
dec
xor
hlt
rol
pop
mov
and
fistp
push
mov
ja
in
xor
cmp
arpl
cwde
push
movs
mov
aaa
dec
jmp
push
mov
mov
cmp
and
inc
sahf
xchg
outs
(bad)
adc
dec
push
lods
js
adc
xchg
loopne
mov
(bad)
retf
dec
cdq
mov
inc
add
add
sub
scas
pop
bound
jae
int3
ins
js
enter
divps
xor
and
inc
sub
sbb
mov
sar
cli
lock
rcr
pop
and
leave
daa
pop
cmps
xchg
cli
jl
aam
dec
loop
loop
pushf
sub
inc
daa
inc
xchg
mov
cmps
cmp
xor
and
dec
pop
and
test
in
mov
enter
pushw
xchg
cmps
xor
or
js
ror
push
fwait
jecxz
mov
pop
sbb
mov
cmps
xor
mov
mov
jge
push
cmp
ret
stos
outs
push
adc
aas
or
sahf
stos
cmp
es
or
xchg
aaa
sub
add
mov
inc
cmp
inc
cmp
rcr
inc
mov
mov
mov
or
outs
jl
outs
jbe
dec
(bad)
(bad)
or
cmp
ror
mov
inc
into
aas
cmp
ins
inc
lea
loop
aaa
push
xor
mov
iret
aad
sub
lds
lea
rcl
mov
jne
and
mov
add
xchg
dec
hlt
pop
loop
je
(bad)
sysexit
xchg
leave
iret
std
test
test
fisub
mov
test
repnz
cmp
xor
inc
ins
adc
je
jge
in
pop
imul
adc
rcr
jbe
pop
iret
cmps
popa
push
dec
lahf
add
jp
pop
call
addr16
and
mov
adc
sub
loop
dec
xor
push
mov
add
and
icebp
sar
sbb
and
sahf
daa
ins
call
mov
imul
jg
ret
and
xchg
add
and
test
std
add
mov
daa
push
ins
xchg
mov
cmps
push
pop
sbb
mov
jg
and
pop
ss
xor
test
mov
cmps
ins
out
in
jb
retf
push
add
and
cwde
ins
out
stos
test
ins
int3
in
lods
mov
and
inc
and
mov
movs
fwait
jmp
loopne
cdq
outs
mov
sbb
popa
fwait
adc
loopne
inc
dec
sub
dec
test
cmp
test
fcomp
mov
ins
fdivr
(bad)
xor
ja
scas
or
cdq
inc
and
inc
aaa
enter
jb
cli
(bad)
shr
gs
cli
sbb
dec
jmp
inc
dec
int3
lds
pop
loope
dec
inc
jmp
les
mov
adc
xor
pushf
cli
mov
test
(bad)
lock
sti
push
jmp
adc
sub
shr
fs
cld
and
sub
or
adc
xchg
add
aas
mov
and
loopne
dec
sbb
test
inc
mov
dec
ud0
(bad)
sub
scas
jae
xchg
cmp
std
cmp
enter
pop
and
addr16
(bad)
cli
test
hlt
pop
cmp
rcl
cwde
sar
sbb
push
not
test
pop
ss
popf
and
pushf
mov
sbb
cmp
adc
sub
lods
fscale
enter
add
push
popf
mov
mov
or
hlt
add
xchg
add
adc
aas
and
xchg
pop
test
icebp
mov
movs
hlt
imul
pop
popf
jl
dec
or
add
or
mov
xchg
pop
mov
ffree
rcl
pusha
and
mov
stos
in
pop
in
sbb
jnp
add
xor
sbb
xchg
data16
mov
sub
pushf
adc
ret
add
lahf
lods
jecxz
xchg
in
enter
stos
jbe
pushf
sahf
(bad)
cli
xchg
outs
jmp
xchg
pop
mov
dec
aas
inc
push
or
and
lods
or
jecxz
pop
fs
jno
pop
and
push
or
or
or
mov
mov
sub
sub
loope
cmps
sti
pop
mov
lods
ss
out
loop
fwait
retf
(bad)
push
addr16
inc
inc
xor
movs
rol
stos
lods
movs
fwait
mov
mov
adc
sbb
pop
mov
lea
cmp
popf
aas
stos
and
lds
loope
loopne
or
sbb
xor
or
retf
pop
adc
fnop
jp
cmc
jo
div
mov
or
stos
imul
jp
retf
cmp
clc
sub
in
das
fld
fcom
inc
(bad)
and
(bad)
jbe
push
mov
fcom
aas
dec
sbb
mov
jns
pop
les
pop
push
adc
out
ret
mov
call
push
push
scas
jbe
or
push
sbb
in
loope
dec
fs
das
stos
dec
stos
dec
pop
mul
dec
outs
dec
and
shl
addr16
pop
push
scas
adc
pop
pop
cmps
jmp
(bad)
(bad)
js
mov
arpl
in
das
cmc
aas
pushf
in
dec
dec
cmp
dec
mov
shr
jle
int3
cld
sub
cmps
add
push
loope
jge
je
int
mov
nop
jle
and
sbb
ret
or
loope
adc
cmp
and
sbb
mov
mov
inc
jp
push
sbb
xchg
add
scas
fild
jb
pop
mov
push
fld
jp
sub
clc
stos
jle
jne
jae
mov
int3
adc
inc
pop
pop
(bad)
jo
pop
xchg
mov
out
push
jae
aas
scas
js
xor
in
and
jge
lahf
scas
and
push
jmp
xchg
lahf
jle
sbb
mov
mov
sub
inc
aad
loop
adc
idiv
xor
xchg
push
cmp
xchg
fwait
xor
dec
cmps
sar
sub
ins
sub
or
out
inc
retf
xlat
push
cmp
jl
fist
sub
or
in
es
pop
sub
jno
mov
xchg
pushf
jo
cli
loope
cmp
xchg
adc
(bad)
rcr
adc
inc
sbb
mov
mov
inc
movs
mov
imul
rcr
jmp
and
(bad)
push
inc
pop
imul
dec
sbb
pop
or
add
sbb
movs
aaa
sahf
mov
cmp
enter
lods
inc
rcl
scas
jmp
mov
jle
pop
pushf
push
call
xchg
cmp
dec
cld
std
sbb
fmul
std
mov
(bad)
push
and
pop
xor
cmc
mov
xchg
fiadd
inc
cmp
arpl
(bad)
and
ins
aam
jp
or
inc
push
call
fwait
les
push
mov
mov
add
adc
sbb
jecxz
clc
pusha
sar
frstor
pushf
cld
fs
mov
mov
daa
out
shl
pop
push
fwait
nop
add
pop
pop
mov
mov
imul
mov
mov
adc
test
and
nop
pop
mov
sub
push
les
sub
jmp
imul
adc
ss
mov
push
and
pop
dec
xor
pop
jl
hlt
loop
jb
mov
lea
rcl
and
leave
mov
push
es
mov
aaa
out
cmp
inc
imul
inc
std
mov
adc
div
ret
fwait
call
mov
adc
xchg
jp
in
xor
pop
stos
jb
es
test
js
in
mov
popf
out
jno
jno
inc
mov
pop
push
mov
fsub
dec
sbb
repz
outs
or
add
mov
sar
xchg
cmc
mov
sub
fidiv
or
dec
cmp
mov
mov
or
fdiv
xor
test
jns
push
mov
adc
jo
add
inc
(bad)
xor
neg
xchg
mov
sar
cmp
fld
mov
loope
xor
vpsrad
movs
rcl
add
shl
(bad)
data16
and
sbb
cmp
outs
imul
arpl
add
aad
rol
shl
loope
aas
cmp
int3
jns
in
jg
je
xor
stos
call
sbb
call
xor
(bad)
or
loopne
inc
jg
popf
xlat
jae
or
jb
loopne
in
push
mov
push
or
jle
rcr
std
lahf
sahf
les
imul
fwait
nop
pop
jp
adc
mov
mov
jl
pop
ins
(bad)
jl
mov
cmp
fld
rcr
rcr
sub
outs
xchg
int
fdiv
stos
jle
fwait
cmp
jae
fwait
mov
test
test
jb
lods
ret
add
adc
rol
call
adc
jns
retf
aas
repnz
fimul
ds
mov
shl
add
mov
loopne
fsub
test
fiadd
bound
mov
mov
add
adc
bound
ftst
les
inc
fcom
sub
cli
mov
sbb
test
cmp
or
xor
cmp
popa
sbb
add
jg
(bad)
fisttp
stos
sub
lock
add
clc
or
(bad)
push
es
bound
push
fdivrp
push
retf
fadd
stos
ficom
retf
cmp
add
loop
in
lahf
lahf
sbb
dec
push
push
sti
inc
add
lods
test
retf
cdq
fld
mov
ins
add
or
call
xchg
xor
sbb
xor
je
out
iret
inc
pop
ret
adc
jns
inc
mov
mov
stos
sub
mov
and
rol
inc
jmp
dec
rcr
xor
(bad)
in
aaa
add
inc
jp
lods
shl
add
stc
mov
or
outs
data16
cdq
addr16
pusha
dec
aam
push
(bad)
jl
(bad)
dec
pusha
stos
pop
jbe
and
test
push
int
dec
xchg
lock
shl
dec
mov
sahf
pop
lahf
jmp
clc
retf
into
in
cld
pusha
xchg
(bad)
pushf
sub
sbb
xchg
add
jae
mov
ins
test
mov
cmps
add
cmc
sbb
mov
leave
sub
into
inc
add
enter
dec
push
mov
jnp
das
xchg
dec
test
xchg
cmp
pop
and
data16
or
xor
std
imul
push
(bad)
jl
(bad)
(bad)
sbb
pop
mov
and
frstor
shl
sbb
mov
cmp
(bad)
jmp
loopne
jno
adc
icebp
movs
add
stos
xor
retf
ror
mov
fnstcw
movs
mov
sub
das
jno
push
ja
and
test
mov
pop
cmps
xor
mov
jo
movs
add
push
enter
mov
adc
out
in
shr
sub
mov
pop
shl
adc
test
imul
jg
jecxz
in
enter
xor
cmp
ror
inc
adc
(bad)
in
ins
(bad)
sahf
inc
iret
imul
cmp
sub
(bad)
lock
xchg
cmp
xor
addr16
sub
(bad)
fs
std
add
daa
cli
cmp
sub
pusha
sbb
jmp
cmp
and
sub
fld
dec
imul
mov
test
jecxz
std
mov
arpl
mov
loopne
and
mov
mov
mov
or
xchg
and
push
aam
shl
rol
outs
pop
pushf
out
mov
test
or
mov
inc
jmp
jae
jmp
push
cmp
stos
loopne
sub
in
fnstenv
addr16
xor
cmp
repz
(bad)
xchg
in
jne
imul
scas
xor
(bad)
mov
add
or
out
mov
pop
into
or
scas
test
pop
dec
mov
mov
xchg
lods
ficom
frstor
mov
push
jne
rol
int
fdivr
mov
das
lods
hlt
les
jno
repz
mov
cwde
out
ins
mov
dec
push
nop
or
pop
xchg
sbb
adc
xor
sbb
inc
and
mov
fild
mov
dec
push
dec
outs
jmp
adc
mov
ret
add
call
push
jbe
test
or
repnz
int3
add
test
dec
cmp
sti
jae
fst
dec
and
test
pop
mov
cld
sbb
aas
idiv
cmp
and
fadd
xchg
pop
cwde
dec
and
xchg
or
int3
or
push
out
push
loop
xchg
mov
iret
xchg
add
and
aam
rcl
jl
lods
outs
inc
(bad)
stos
bound
(bad)
and
out
lds
icebp
fcomp
lahf
jae
jg
pushf
and
repz
dec
cs
sub
clc
pop
jns
movs
stos
xchg
mov
jmp
neg
in
in
cmps
lods
push
out
mov
mov
pop
cmps
mov
ficom
push
jnp
sub
int3
dec
es
(bad)
(bad)
jnp
sub
and
popf
dec
aas
mov
in
popa
inc
out
mov
js
hlt
cmp
pop
fsubr
xchg
and
out
sbb
les
sahf
xlat
add
sub
mov
std
popf
je
pop
inc
lods
mov
(bad)
sti
das
out
dec
or
aam
jnp
cdq
cmp
outs
add
dec
add
call
and
das
or
movs
(bad)
aam
out
mov
mov
into
or
lods
jp
test
sbb
rcr
data16
ror
data16
loop
icebp
inc
xor
xchg
retf
jp
sbb
pop
repnz
push
pop
mov
adc
sub
jp
fcom
test
addr16
lahf
and
dec
jl
dec
jae
imul
or
aam
or
mov
into
test
add
outs
les
inc
aam
cmp
adc
les
repz
sub
xchg
retf
sbb
pop
fwait
mov
push
jb
push
jl
test
sub
data16
cmps
gs
push
mov
or
adc
js
sub
out
ds
mov
sar
call
popa
adc
cmpxchg
in
shl
sub
mov
and
mov
pop
int
xchg
imul
or
dec
ds
movs
imul
dec
push
(bad)
lods
pop
mov
push
hlt
and
dec
mov
movs
stos
dec
adc
mov
push
mov
rol
ret
sar
dec
cmp
test
sub
(bad)
ins
cmp
cdq
shr
sahf
and
mov
mov
cmps
add
xor
xor
and
inc
dec
test
mov
int
repnz
jle
push
stos
fadd
fsubr
retf
adc
xor
push
sahf
add
faddp
sti
sbb
inc
mov
pop
std
sub
icebp
sbb
push
fist
leave
push
pop
test
shl
clc
sbb
into
iret
(bad)
scas
int3
test
stos
cmp
int3
and
push
xchg
nop
xchg
sbb
push
mov
dec
cmp
push
adc
push
mov
enter
les
and
xor
adc
data16
mov
retf
dec
arpl
adc
scas
and
jecxz
cwde
or
dec
rcr
add
mov
call
and
and
dec
inc
jg
mov
pop
ss
cli
stos
lods
stos
je
sub
fisub
or
stos
push
test
cmp
or
push
sbb
retf
inc
xchg
or
cmc
mov
ret
call
shl
rcr
or
jl
adc
inc
out
fbstp
leave
retf
loop
pusha
push
add
and
sbb
push
and
jns
call
aas
mov
sbb
rcr
xor
mov
mov
mov
ds
xor
neg
xchg
loop
(bad)
and
jg
movs
test
mov
mov
mov
bound
jne
adc
call
push
movs
push
push
in
dec
sbb
lea
xor
push
mov
(bad)
sar
bound
jle
push
es
(bad)
dec
and
push
cld
adc
mov
iret
ins
push
(bad)
in
repz
adc
dec
pop
hlt
and
call
xor
ja
cmp
cmp
js
xchg
stos
push
adc
mov
hlt
int
push
dec
test
ja
das
jno
dec
mov
jl
sub
pop
jno
inc
add
add
adc
mov
(bad)
ins
int3
add
sahf
mov
pop
mov
sub
stos
in
push
into
jne
jmp
jne
popf
jl
std
jle
out
pop
xchg
jmp
clc
fcomp
sub
stos
lahf
or
mov
popa
std
sbb
mov
cmp
mov
push
scas
cmp
xchg
out
in
pmaddwd
cdq
jp
loopne
mov
jns
xlat
jmp
mov
jle
jb
pslld
fadd
gs
adc
js
aam
int3
inc
xchg
jp
out
or
cmps
add
loop
in
mov
cmc
xor
in
fimul
mov
ret
mov
add
or
mov
retf
iret
add
mov
je
add
movs
ins
out
push
pop
shl
out
adc
or
adc
cmp
aaa
je
repz
fcom
scas
stc
pop
mov
ror
mov
pop
imul
imul
pop
xchg
jne
scas
or
jne
push
stc
jmp
dec
add
cmp
sub
adc
test
nop
mov
in
sbb
xchg
jl
adc
loopne
jo
hlt
sahf
out
adc
add
ds
mov
call
aaa
scas
int3
dec
cmc
shr
(bad)
mov
neg
dec
sbb
in
(bad)
(bad)
sti
jmp
sbb
xchg
(bad)
outs
push
adc
sar
and
add
add
push
push
loope
xchg
mov
scas
xor
call
or
stos
pop
dec
loop
sub
adc
cld
nop
adc
movs
lahf
das
js
fisttp
in
fdivr
or
shr
dec
outs
pop
push
sub
sahf
ret
push
fbld
jb
in
xchg
aaa
jns
inc
or
ret
cmp
outs
div
cmp
mov
dec
inc
dec
movs
mov
mov
stos
mov
stc
shr
add
mov
push
mov
push
call
push
push
adc
mov
loope
jbe
sub
cli
push
and
movs
mov
xchg
mov
dec
sub
sub
sub
nop
ja
or
pop
jmp
dec
shr
cmp
stos
(bad)
stos
stc
(bad)
cmps
ret
addr16
push
pop
or
adc
xchg
xchg
sbb
add
lods
cmp
or
and
cli
aad
mov
pop
bnd
push
cmp
push
cmps
cmps
add
div
ins
cmps
mov
shr
jmp
sub
push
nop
sbb
test
sbb
pop
js
jmp
sahf
dec
pusha
enter
push
arpl
(bad)
lahf
ror
mov
jno
or
cmp
jmp
cmp
push
int
mov
push
addr16
sub
aas
rcl
lds
mov
ror
outs
call
sar
outs
xor
xchg
sub
sub
mov
pop
popa
xor
or
call
repnz
push
ins
adc
imul
scas
cli
enter
jmp
cwde
mov
gs
jae
adc
lods
in
push
push
xchg
(bad)
imul
inc
scas
ja
push
fild
sub
dec
xchg
lahf
popf
popa
bound
mov
and
or
fisttp
push
(bad)
sahf
cmps
push
cli
inc
dec
js
repnz
push
outs
stos
(bad)
hlt
pusha
add
fsub
(bad)
call
in
mov
mov
pop
xchg
sub
sbb
inc
xor
cmps
xchg
cmp
mov
push
imul
shr
mov
jp
mov
outs
cs
dec
(bad)
jl
out
xor
and
and
out
scas
mov
test
sub
je
xor
xchg
cmp
dec
into
push
push
out
pop
or
cdq
jmp
xchg
pop
pop
cmp
ds
out
sbb
jecxz
dec
mov
add
fs
jne
jp
dec
loope
adc
into
call
int
hlt
stos
js
loop
sbb
ficomp
stos
pushf
sti
mov
jne
or
daa
in
ud1
lods
cmps
out
mov
out
mov
xchg
fadd
sub
xor
(bad)
dec
cmps
cld
les
mov
je
lods
mov
fldcw
std
mov
(bad)
jl
cs
stos
xchg
cdq
sbb
push
dec
dec
cmp
add
js
cmp
push
fimul
movs
jmp
jae
add
aad
sbb
or
sbb
mov
xchg
sub
dec
lock
cld
cmp
xor
and
jmp
and
data16
cmp
push
cmp
xchg
out
stos
adc
xchg
or
xchg
dec
add
ins
sbb
out
mov
call
sub
cdq
cs
out
cwde
or
mov
push
aas
add
icebp
mov
mov
mov
cmps
dec
aam
fcmovnb
icebp
mov
test
sbb
inc
hlt
shr
jo
mov
das
fmul
dec
inc
and
mov
in
push
jo
mov
lahf
mov
or
xchg
xchg
xchg
cli
and
pop
add
imul
pop
test
sbb
out
fst
jmp
jmp
aam
int3
(bad)
stos
cmps
dec
xchg
xchg
cwde
adc
and
ret
sti
jle
test
shl
rol
or
mov
mov
sti
push
mov
std
scas
les
lods
aaa
sbb
sbb
test
jp
sbb
imul
mov
loop
add
(bad)
sar
or
mov
lea
test
xchg
jns
ror
jecxz
ror
push
xor
mov
lea
mov
mov
repnz
mov
loopne
sub
out
(bad)
mov
sub
mov
les
into
in
fs
clc
pop
push
ja
outs
mov
and
xchg
adc
inc
jno
stos
adc
push
push
es
mov
jmp
xchg
test
cmp
jno
xchg
inc
mov
push
xchg
push
sub
fcom
push
repz
(bad)
and
into
pop
pop
add
cmp
loopne
in
stos
mov
cs
or
out
retf
repnz
bound
pop
loop
inc
pop
jle
outs
cmp
cli
xchg
adc
mov
add
inc
xor
and
test
push
mov
jp
test
loopne
dec
adc
ins
push
xor
(bad)
jae
cld
push
(bad)
dec
lahf
stos
or
sub
pop
lock
inc
mov
xor
mov
mov
mov
mov
ja
add
pop
cmp
ret
mov
movs
loopne
sbb
mov
inc
inc
inc
pop
inc
out
daa
mov
outs
pop
inc
stos
in
cmp
jae
mov
jbe
test
and
and
and
fimul
loop
cld
test
js
pop
jge
push
sbb
sbb
in
test
stos
add
in
fwait
cmp
es
sbb
dec
mov
mov
jmp
aad
xchg
mov
cmp
jg
and
push
mov
in
adc
cmps
mov
arpl
sub
sub
cs
cmpxchg
xchg
add
aam
inc
sub
jb
rol
xlat
pusha
cmp
mov
inc
mov
mov
add
fs
test
xchg
adc
fwait
ret
pushf
addr16
inc
ins
test
ja
pop
jg
pop
pop
data16
(bad)
sbb
and
ins
les
shl
dec
jb
dec
mov
scas
mov
inc
lahf
jmp
lods
(bad)
stos
in
ror
out
push
cs
cmc
xor
or
lahf
test
jb
daa
inc
mov
mov
arpl
mov
fpatan
push
xchg
cmp
in
dec
cmps
and
inc
cs
and
jl
mov
ds
and
add
aad
ins
mov
xor
js
pop
mov
dec
movs
sub
and
bound
dec
cmps
mov
mov
cwde
and
pop
xor
xlat
cmps
xchg
mov
inc
lds
jge
cmp
retf
dec
jl
push
je
dec
fisub
add
mov
add
sbb
inc
mov
int
repnz
inc
xchg
mov
pop
pop
push
jg
mov
popf
dec
xor
pop
xchg
aam
stc
xor
neg
jo
jl
adc
movs
cmps
icebp
hlt
mov
sub
fistp
jmp
jmp
scas
sub
movs
adc
xor
sti
movs
jmp
inc
je
lds
in
mov
fwait
aas
stos
popf
or
lea
std
call
push
sub
das
jo
imul
cdq
repnz
xchg
xor
push
push
pop
mov
dec
ins
sub
cmp
lods
rcl
push
sbb
xor
mov
std
stc
lds
test
mov
xchg
inc
hlt
stos
add
inc
cmp
push
jmp
(bad)
pop
mov
std
cmp
dec
fadd
in
stos
inc
ds
mov
fidiv
or
icebp
xchg
xchg
pop
pop
fbld
scas
dec
pop
in
push
mov
gs
mov
leave
aad
cmp
pop
icebp
retf
sbb
inc
add
and
aad
imul
int
and
jl
dec
or
sbb
mov
ret
jne
arpl
pop
cmp
pop
xor
(bad)
popa
mov
jno
ins
test
fisub
dec
clc
push
xor
and
dec
fs
or
mov
inc
push
repz
pop
imul
(bad)
stc
retf
mov
dec
aaa
nop
push
mov
adc
and
jmp
push
and
sbb
popf
in
mov
es
cli
pop
repz
fldcw
mov
mov
pop
aaa
sbb
mov
cmps
pusha
push
out
out
outs
adc
in
icebp
daa
aam
add
sbb
jge
repnz
(bad)
jae
inc
dec
int3
imul
and
ficom
mov
out
sbb
push
sub
pop
mov
sbb
xor
push
cmp
repnz
std
pop
or
or
jne
call
out
leave
mov
xchg
(bad)
jmp
ins
out
adc
or
aas
test
push
mov
nop
adc
mov
xor
test
xchg
mov
pop
push
cmp
sub
fs
mov
push
ret
add
leave
movs
add
retfw
je
stc
mov
push
rcl
xchg
sti
(bad)
xor
rcl
jbe
pop
lds
lds
xchg
rcl
push
inc
fdiv
pop
mov
ins
cs
dec
mov
in
xor
push
inc
mov
das
dec
aas
pop
(bad)
out
scas
mov
xor
jle
push
adc
in
xchg
(bad)
jge
sbb
pop
mov
nop
cli
mov
mov
or
es
add
dec
lds
xchg
scas
push
repz
adc
cmps
xchg
rol
push
sub
loop
cld
(bad)
mov
mov
push
gs
sbb
rcr
retf
in
shr
mov
repz
or
sbb
mov
or
xlat
inc
outs
imul
mov
lahf
addr16
mov
cmp
mov
mov
mov
lahf
or
sahf
dec
loope
push
dec
imul
rep
inc
and
xchg
push
and
imul
sub
adc
xchg
in
push
dec
sti
es
outs
and
inc
xchg
test
and
mov
sahf
imul
inc
scas
into
cmp
dec
lods
test
imul
fdivr
lock
jns
sbb
xchg
scas
xor
sti
mov
xlat
xlat
push
push
adc
or
jns
add
ins
in
xchg
cmc
cmp
retf
mov
cdq
ins
ins
cmps
stos
retf
pop
dec
mov
das
jge
mov
aaa
loop
retf
int
test
push
xchg
jl
sub
adc
push
and
xchg
mov
cs
test
mov
(bad)
retf
lock
jp
(bad)
pop
outs
inc
push
neg
and
sbb
jae
ffree
test
sbb
test
daa
mov
stos
sub
cwde
xor
and
in
ss
icebp
stos
mov
cmps
dec
jb
pushf
xchg
out
dec
sbb
test
sub
add
stos
dec
ins
jb
out
xchg
xchg
cmp
or
shl
and
jnp
cmps
mov
cwde
shl
scas
shl
in
add
xor
pop
lds
fdivp
mov
sub
fldcw
and
cmp
sub
out
aam
pop
rcr
jge
aam
push
sbb
(bad)
sub
das
sub
push
xchg
ja
(bad)
mov
push
push
loope
stos
mul
pop
adc
ds
rol
mov
into
imul
adc
jl
inc
jnp
(bad)
cli
sbb
push
fnstcw
xor
mov
ret
push
stos
mov
adc
dec
stc
push
jne
jl
data16
and
xchg
fst
sub
xor
push
ret
in
xchg
out
push
or
inc
pcmpeqw
dec
mov
sbb
push
aad
pop
iret
inc
out
xchg
or
les
cmps
push
pop
sbb
push
gs
push
and
cmp
xchg
mov
xor
jl
xchg
je
mov
adc
adc
xor
mov
pop
mov
sbb
clc
jmp
adc
outs
aas
dec
pop
and
mov
daa
push
aad
mov
aam
mov
das
or
sub
test
sbb
inc
push
(bad)
adc
jg
and
cli
mov
lods
lds
jge
xchg
mov
out
test
clc
daa
pop
jle
sar
add
push
inc
and
ret
test
sub
push
xchg
xor
out
daa
jecxz
out
and
sub
cli
ss
sbb
div
fimul
add
(bad)
aas
fbstp
jne
fcom
(bad)
sahf
and
ret
mov
pop
xor
sbb
mov
lea
sub
adc
pop
jge
cmps
inc
(bad)
push
stc
inc
dec
in
cwde
mov
inc
xchg
push
xor
(bad)
call
pop
jae
add
dec
mov
cwde
bound
cmpps
and
jbe
call
ins
push
ficom
retf
outs
rcr
dec
dec
mov
pop
push
and
test
cli
pop
clc
lock
mov
mov
mov
adc
out
je
sbb
mov
loop
pop
xchg
ins
mov
mov
pushf
ins
vprotb
movs
add
xchg
or
push
jle
jno
mov
fist
xchg
mov
mov
dec
push
xchg
mov
int
lahf
mov
mov
sti
xchg
jo
in
out
or
mov
xchg
sbb
xchg
inc
mov
retf
repz
rcl
push
mov
imul
sub
mov
pop
push
dec
push
cmp
inc
nop
dec
jecxz
fs
call
aad
dec
cld
lods
cld
loope
std
mov
mov
lods
mov
pop
je
mov
mov
outs
enter
nop
pop
mov
fldenv
jmp
cli
inc
mov
mov
cmp
nop
repnz
and
pop
repz
xchg
mov
bound
push
dec
clc
mov
dec
mov
rcr
loop
mov
or
stos
jno
dec
fbstp
jae
aas
push
push
sti
(bad)
adc
call
jnp
pushf
sbb
rep
and
btr
hlt
dec
divps
dec
xor
lea
mov
push
and
js
mov
push
jmp
sahf
sbb
popf
fdiv
fld
(bad)
jecxz
jmp
push
icebp
sub
aad
and
xchg
fisubr
jnp
xor
push
sub
mov
dec
std
inc
adc
xchg
aam
mov
mov
add
sub
fcomp
cdq
idiv
fstp
sbb
das
(bad)
shl
cmp
repnz
xor
mov
cli
dec
mov
cmp
add
add
push
dec
or
sub
jg
or
mov
loop
lds
test
sub
mov
mov
mov
jmp
data16
xchg
jle
cli
xor
mov
hlt
jp
dec
jnp
dec
add
dec
jbe
(bad)
xor
inc
xor
retf
das
es
mov
xchg
std
dec
int
dec
(bad)
lods
add
push
in
int
and
cmps
push
ret
inc
mov
in
mov
push
outs
test
mov
lahf
sti
xchg
repnz
in
add
sub
jg
mov
xor
test
out
mov
loope
sub
xor
add
sbb
rol
pop
and
inc
inc
cmp
aad
(bad)
inc
mov
loopne
out
xor
int3
ret
sar
sbb
sub
sub
add
mov
add
(bad)
aas
lds
in
xchg
sub
sbb
dec
inc
std
loopne
inc
(bad)
out
(bad)
fldenv
or
mov
int3
fmul
or
pusha
ret
mov
and
shr
into
lods
repnz
ja
aad
mov
push
js
outs
fcomp
mov
jmp
mov
add
pop
mov
cwde
mov
jne
call
pop
xor
add
stos
repnz
int
popa
enter
jge
inc
out
out
movs
pusha
mov
jg
add
popa
popf
cmp
jae
fisubr
inc
sub
xor
and
or
add
daa
cwde
fs
fidivr
inc
mov
xor
or
push
mov
inc
pusha
test
xor
sbb
(bad)
out
pop
or
retf
ror
(bad)
setge
dec
push
stos
push
sub
xor
into
lds
mov
shr
rcr
out
sub
int3
call
or
mov
push
lods
sub
int3
iret
lock
imul
inc
pop
(bad)
(bad)
jnp
test
and
sar
and
(bad)
pusha
add
inc
mov
outs
neg
and
aam
es
outs
pop
xchg
ds
push
test
scas
cmp
mov
sti
ja
push
sbb
cmp
mov
xchg
stos
icebp
lods
jno
int
adc
out
jl
xor
dec
jmp
es
and
xchg
stc
imul
into
pop
push
mov
div
js
cmp
outs
push
or
cmp
movaps
rol
jp
inc
jl
fmul
and
js
pop
jmp
daa
sbb
(bad)
addr16
dec
jmp
mov
jge
(bad)
cwde
ds
call
mov
mov
das
pop
into
sub
add
xchg
xlat
inc
in
fsub
dec
(bad)
mov
(bad)
sbb
jbe
jle
mov
push
mov
mov
add
add
leave
push
out
pop
daa
lock
ja
fxch
in
sbb
mov
mov
test
(bad)
in
jge
aas
mov
xchg
xchg
mov
call
test
xor
xchg
stos
fs
push
dec
and
aad
mov
cmp
mov
sbb
lock
push
push
out
pop
cmp
pop
jg
mov
mov
inc
and
lds
add
cwde
jp
clc
xchg
push
and
(bad)
cli
adc
mov
call
jmp
enter
adc
mov
bswap
call
jnp
inc
icebp
leave
jmp
stos
aad
daa
mov
aam
imul
add
(bad)
addr16
cmps
xlat
popa
add
jae
jne
ror
jg
add
cwde
jmp
ja
fsubr
in
sub
test
movs
or
arpl
cs
inc
sub
into
jne
jne
(bad)
xlat
sbb
and
test
push
shl
push
xor
sahf
and
lods
int
mov
pusha
xor
jbe
test
aas
repnz
cmps
cmc
leave
into
xlat
pop
out
sbb
popf
jno
test
push
fs
sub
mov
paddd
mov
sbb
pop
pushf
or
rcl
cli
cs
inc
mov
fcmovnb
push
(bad)
outs
xchg
iret
addr16
cmp
xor
gs
ja
sbb
sub
sar
int
push
and
add
adc
imul
jmp
add
scas
shl
(bad)
pop
movs
jnp
cwde
and
arpl
or
pop
cmp
push
movs
add
xor
jae
push
int
(bad)
leave
pop
sbb
stc
add
sub
xchg
dec
push
xor
inc
sbb
mov
sub
push
(bad)
js
and
lahf
arpl
push
jg
ds
sbb
inc
faddp
stos
or
mov
rcl
data16
hlt
popa
cmp
sbb
cmp
(bad)
cli
cs
das
scas
xchg
fiadd
push
fprem1
out
xchg
sub
rcr
stos
push
or
mov
scas
push
fist
(bad)
pop
mov
or
pop
into
lods
dec
and
lock
inc
sbb
movs
lods
jo
shld
add
fsub
(bad)
test
ja
push
imul
mov
mov
push
add
cdq
lock
aad
stos
xor
(bad)
call
mov
cmc
cmps
sub
rol
xor
scas
push
popf
rcl
inc
pop
fcmovnb
out
push
je
in
(bad)
dec
ss
mov
jnp
or
sbb
jecxz
inc
fld
jno
jnp
int
mov
and
sbb
jl
or
jp
(bad)
fst
sbb
aad
aaa
(bad)
push
lahf
adc
call
push
sbb
loopne
pushf
out
mov
cmps
test
mov
push
sub
shl
int
fs
mov
xchg
cmc
dec
daa
pop
xchg
das
mov
jns
mov
inc
push
or
movs
sub
(bad)
mov
or
cmc
out
sub
sbb
setne
out
push
add
pop
rcr
retf
les
dec
or
pop
imul
fcomp
fst
dec
nop
call
popa
pop
sub
pop
push
out
xor
cmp
push
scas
mov
dec
pop
aas
mov
sahf
xor
and
das
jbe
xor
and
(bad)
jp
fdivp
inc
sbb
or
lock
(bad)
push
out
retf
and
enter
inc
leave
inc
jmp
mov
jb
sar
inc
push
div
inc
(bad)
cld
rcl
mov
sahf
rol
xchg
push
push
outs
inc
lea
and
ss
cmp
jmp
add
jo
or
imul
add
sbb
jp
inc
cdq
push
and
int
ficomp
inc
and
ins
push
call
fild
fdiv
inc
sbb
mov
xchg
sub
inc
repz
rcl
and
sub
pop
aam
jge
es
inc
pop
ret
push
sahf
and
xor
xchg
pop
mov
xchg
adc
cmp
and
sbb
or
cmp
test
mov
and
jmp
fdiv
lea
xor
nop
or
dec
out
por
pop
je
inc
out
adc
aas
pop
out
pop
loope
mov
jl
xor
mov
mov
test
push
mov
xchg
pop
stos
test
test
rcr
aad
lods
sti
out
shr
cmp
push
pusha
cwde
inc
(bad)
in
sbb
fistp
dec
ins
ret
inc
fiadd
je
call
xor
mov
lods
xchg
aad
push
jg
xchg
lods
jmp
pop
cdq
cmc
push
pop
shl
xchg
cmp
movhps
shr
lods
cmp
rcr
mov
jb
mov
addr16
push
out
es
or
mov
push
mov
cmp
jl
mov
lea
jge
nop
retf
ror
mov
xor
and
(bad)
cmps
lock
push
outs
(bad)
daa
popf
mov
popa
out
cmp
fidivr
mov
test
enter
cmp
mov
gs
xchg
call
ja
dec
call
neg
(bad)
out
rcl
sub
adc
cdq
push
mov
xchg
daa
lods
and
pop
or
cmps
add
aam
mov
imul
push
test
out
ss
or
xor
add
mov
or
cs
inc
push
shr
aad
mov
sbb
daa
das
popf
loope
xchg
cmp
stos
lahf
retf
xchg
or
mov
push
loopne
cmps
fisub
adc
pop
inc
outs
inc
pop
jmp
aas
jae
xor
popf
jmp
mov
and
imul
movs
push
std
ins
adc
in
out
ret
je
inc
je
add
mov
mov
sahf
cwde
call
rcl
xor
inc
push
pop
shl
je
sbb
jmp
sbb
inc
neg
(bad)
mov
jmp
fwait
push
ins
mov
sbb
cli
lahf
add
ja
dec
(bad)
fadd
push
sub
xor
xchg
jp
push
in
les
repz
test
sbb
nop
sbb
retf
xor
mov
or
call
inc
test
out
mov
push
xchg
mov
movs
mov
dec
pop
pop
ja
inc
mov
jbe
loop
jb
lock
lahf
outs
sbb
loopne
imul
pop
xor
arpl
sar
mov
sti
(bad)
stc
jns
out
cmp
ss
shl
(bad)
(bad)
int
stos
sahf
add
mov
mov
add
mov
or
push
lahf
cmp
pop
xor
or
or
cmp
shl
push
adc
test
jmp
sti
frstor
jb
in
and
sub
mov
xor
call
inc
movs
add
out
adc
shl
mov
mov
jge
loop
in
sti
pusha
xchg
fwait
sbb
push
iret
xchg
pop
inc
add
aad
mov
push
in
mov
ret
repz
or
cli
lea
sub
icebp
push
idiv
mov
add
jmp
dec
std
sub
movs
addr16
(bad)
xchg
pop
hlt
aas
(bad)
mov
imul
cmp
mul
arpl
push
pop
mov
sub
sbb
sub
sub
test
ror
sbb
rol
jmp
inc
xor
push
mov
jl
xor
adc
inc
out
aam
scas
pop
sbb
push
add
inc
and
push
stc
add
cmp
les
dec
mov
cwde
push
xor
cmp
call
cmp
adc
jno
push
and
sub
lock
cwde
xor
push
cdq
add
(bad)
mov
pushf
retf
out
psubw
ins
pop
les
leave
or
cmps
cmp
ja
jmp
sbb
rcl
pop
pop
ss
mov
inc
ins
cwde
cmp
cmps
xchg
sub
jns
inc
xchg
mov
leave
and
push
lods
dec
mov
dec
pushf
cmp
ins
push
and
push
scas
ins
loope
test
arpl
mov
rcr
iret
mov
cwde
(bad)
call
bound
pop
pop
xchg
dec
jae
xchg
aam
fwait
mov
jne
jno
jne
pop
xchg
movs
and
inc
call
js
repz
faddp
test
(bad)
mov
sti
outs
cld
adc
leave
in
iret
mov
inc
adc
cmp
mov
aad
outs
scas
and
and
add
mov
sahf
fadd
xchg
jnp
outs
mov
arpl
ror
adc
imul
ror
or
xchg
cld
ins
add
ret
(bad)
jl
nop
shl
adc
pop
dec
pusha
js
pop
pop
dec
lock
push
cmps
pop
xor
mov
lahf
jae
ror
aas
test
test
sti
push
or
add
mov
pop
mov
inc
push
data16
and
and
outs
stc
and
mov
lods
push
or
mov
or
inc
pop
pop
ret
add
xchg
pop
jns
outs
adc
rol
jge
mov
movs
and
push
sub
shl
cmp
mov
(bad)
jno
xchg
cld
and
bound
ror
pop
(bad)
aam
lods
pop
push
mov
xor
sub
push
shl
push
push
inc
xchg
test
out
add
sbb
test
hlt
iret
or
std
and
adc
adc
les
pop
hlt
push
inc
or
outs
sbb
push
cmp
xor
shl
cmc
inc
inc
sbb
in
push
enter
cwde
shl
and
xchg
adc
test
push
pop
push
icebp
mov
and
shl
loope
sub
push
jno
shl
imul
push
jecxz
or
mov
pushf
repnz
fnstcw
rcr
cmp
push
sbb
mov
sub
scas
cmc
int
jmp
icebp
int
stc
imul
bound
cs
repnz
mov
pop
scas
lea
les
xchg
cmps
rcr
in
test
out
jle
adc
stos
xchg
mov
jmp
fs
pop
sub
adc
out
ss
mov
ins
or
into
mov
mov
mov
pop
pop
xor
(bad)
xor
clc
bound
xlat
push
out
jmp
rcl
repnz
mov
xor
fistp
rcr
cmc
in
mov
push
cmp
paddsb
aas
pop
or
push
xor
fst
mov
sbb
hlt
in
ror
movs
mov
push
fnstsw
bsf
hlt
leave
imul
jbe
std
sbb
mov
int3
repz
in
inc
cmps
jnp
cmp
dec
sub
adc
mov
aad
aad
data16
cmps
leave
outs
mov
out
cmp
call
and
sub
call
push
repnz
cmps
inc
inc
neg
add
sbb
sbb
and
xor
inc
pusha
add
mov
(bad)
adc
add
(bad)
shr
bound
adc
ror
cmp
cmp
out
fwait
mov
es
shl
iret
loop
cli
out
xor
pop
jne
fisttp
sub
repnz
stos
pop
or
mov
ja
cmc
cmp
push
lds
gs
cmp
test
pop
pop
jmp
loope
ret
mov
mov
dec
sbb
pop
loop
jne
jno
loopne
mov
mov
mov
out
push
mov
mov
adc
loopne
adc
mov
mov
inc
int3
int
daa
push
jnp
cmp
inc
jmp
sbb
inc
cli
sahf
stos
fistp
xchg
mov
lock
push
adc
cmp
(bad)
(bad)
sbb
ins
push
fwait
push
mov
jmp
cmps
pop
jne
repz
mov
fimul
jo
ds
or
mov
rcl
xchg
pushf
adc
sahf
ss
and
movs
cs
or
mov
inc
retf
and
xchg
test
mov
xchg
push
iret
sbb
(bad)
fcmovnbe
or
mov
lahf
sbb
inc
inc
sahf
cmps
test
mov
loopne
dec
mov
add
pop
push
pop
aam
ins
mov
or
mov
sar
ins
and
xlat
pop
outs
push
cmp
push
jo
leave
dec
stc
dec
popf
stc
mov
mov
mov
xor
ja
mov
cwde
xchg
in
das
cli
das
inc
or
pop
add
jecxz
(bad)
lea
pop
pusha
sub
xchg
jo
mov
jp
clc
test
add
leave
xlat
cmc
ss
aad
shl
pop
or
xchg
and
mov
xlat
ret
push
mov
out
dec
iret
inc
jecxz
shr
xchg
push
and
loope
inc
inc
pop
dec
cmp
idiv
pop
scas
shl
mov
leave
ror
inc
mov
mov
adc
out
cmp
mov
frstor
add
arpl
xchg
jp
popa
loope
mov
push
adc
add
push
out
mov
repz
mov
(bad)
cs
and
sub
mov
mov
push
push
jge
jmp
mov
out
imul
xchg
adc
loope
pop
adc
mov
pop
ins
scas
cdq
inc
jb
push
packssdw
and
or
stos
push
hlt
jecxz
pop
pusha
adc
dec
adc
jmp
mov
adc
push
push
outs
ret
xchg
sbb
cmp
push
arpl
mov
dec
sub
stos
and
ss
pop
pop
es
ficomp
or
pop
sbb
and
and
scas
inc
sub
into
jle
sbb
(bad)
push
arpl
xor
pop
cmp
ret
mov
cmps
adc
sbb
inc
lods
pop
sub
and
mov
mov
es
(bad)
int3
and
fcom
aaa
jno
dec
mov
(bad)
out
sub
push
mov
add
pop
bound
xor
outs
ror
cmps
fs
pop
pop
inc
pop
bound
cmps
mov
bound
popf
jno
mov
fild
mov
dec
cmp
shr
mov
jp
jns
sahf
mov
pop
mov
adc
lods
jno
scas
push
sbb
cmp
out
sti
cwde
mov
mov
xchg
pop
daa
lahf
xchg
loopne
pop
mov
mov
push
arpl
pop
jmp
mov
mov
lods
bound
pop
add
ret
mov
loop
ret
mov
push
pop
(bad)
push
and
sbb
mov
iret
xor
retf
rcr
or
mov
sub
mov
stos
ds
(bad)
rcl
mov
xor
es
lahf
out
shl
xor
test
inc
xchg
test
pop
inc
arpl
jb
js
psrad
cmp
mov
adc
mov
bound
outs
stos
cmp
stos
push
pop
xchg
das
inc
pop
inc
xor
and
lea
sub
fs
adc
xchg
test
loop
push
repnz
ins
push
pop
icebp
ja
add
sti
dec
mov
mov
(bad)
adc
dec
inc
add
jmp
mov
jae
outs
adc
jb
movs
out
lea
scas
hlt
mov
pop
or
xrelease
aas
push
push
in
hlt
in
mov
inc
xlat
push
add
dec
clc
jl
cmp
mov
cmp
dec
stos
pop
mov
out
adc
xchg
jbe
cmps
sbb
scas
pop
jle
stc
pop
imul
(bad)
inc
sbb
xchg
dec
add
push
ret
ins
imul
dec
js
je
hlt
dec
and
cmp
jmp
pop
xchg
pop
ret
add
mov
and
or
xchg
pop
fwait
mov
jg
mov
out
jns
fnsave
pop
ret
dec
in
mov
aaa
jne
(bad)
movs
scas
pushf
mov
pop
jne
sub
cmc
cld
pop
sub
mov
(bad)
lds
jecxz
sbb
inc
push
inc
retf
xchg
or
fdivrp
jmp
mov
retf
pop
imul
and
dec
mov
pop
sbb
dec
or
cs
push
xchg
xor
jno
mov
arpl
iret
(bad)
ss
xchg
sahf
ret
arpl
retf
pop
jns
dec
lods
fdecstp
jecxz
loopne
push
fidiv
pushf
mov
mov
mov
popa
dec
xchg
lods
jl
inc
xlat
or
xor
xor
sbb
jle
add
sub
inc
add
or
clc
ins
push
jne
mov
jns
sub
je
mov
push
push
mov
lea
fmul
or
add
mov
xor
adc
inc
test
loop
inc
sub
sbb
sub
jmp
cs
inc
xchg
cmp
sub
jp
sub
les
lea
jecxz
nop
popa
rol
jp
inc
sub
xor
aam
je
adc
cmps
ret
call
pushf
adc
mov
sbb
jge
inc
retf
cld
jno
or
jge
out
add
call
iret
shl
xchg
stos
shl
and
pop
fild
mov
cmps
xor
inc
movs
movs
mov
jo
out
add
sti
loopne
cmp
cmp
mov
sti
pop
call
icebp
add
ret
adc
cmp
push
inc
daa
in
sub
cmp
xchg
cmp
idiv
shl
push
add
rcl
loopne
jle
loopne
cmp
push
mov
xor
push
sbb
test
retf
pushf
push
dec
dec
sbb
clc
mov
cmp
cmp
cld
es
(bad)
repnz
sbb
adc
inc
jl
popa
push
pop
push
pop
addr16
and
es
mov
mov
push
or
pop
xor
xor
fst
enter
pop
jle
lods
data16
in
(bad)
aaa
retf
sbb
pop
js
lods
sahf
sbb
jno
shr
fsub
add
jecxz
cmp
xchg
inc
mov
and
in
push
adc
in
out
xchg
rol
mov
(bad)
push
adc
lds
cdq
(bad)
inc
pop
jo
xchg
rcl
ret
sub
lahf
movs
(bad)
popf
xchg
loopne
(bad)
cdq
(bad)
daa
es
push
pusha
sbb
imul
iret
jmp
pop
mov
add
push
cs
xor
xor
mov
movs
sar
ds
lock
adc
std
mov
call
icebp
ror
ins
or
and
mov
mov
pop
outs
sbb
xchg
jns
popf
stos
sbb
xchg
jno
outs
jg
push
mov
cwde
ret
pop
test
mov
xchg
mov
pop
icebp
adc
in
call
jno
mov
bound
scas
jp
xchg
aam
jns
std
adc
ja
ret
or
sub
mov
sahf
mov
jmp
mov
fldenv
ret
bnd
fnstsw
adc
out
(bad)
pusha
ss
push
(bad)
mov
adc
pop
dec
mov
push
test
sar
jnp
daa
dec
xor
adc
lea
idiv
jmp
push
sbb
dec
inc
mov
push
pushf
push
adc
retf
fild
stos
outs
jnp
pop
adc
adc
loop
lock
inc
and
pop
jge
or
inc
push
fisttp
mov
pop
jecxz
bound
ja
imul
icebp
shl
mul
out
mov
xor
push
add
test
(bad)
cmp
popa
dec
out
sbb
and
out
mov
push
push
adc
or
sbb
push
nop
adc
pushf
aad
ins
or
cmps
sbb
mov
pop
mov
data16
mov
xchg
call
nop
xor
nop
jp
addr16
mov
popa
cmp
(bad)
lea
jmp
shr
scas
cmp
pop
out
pop
sahf
movs
mov
sbb
(bad)
clc
pop
cmp
or
inc
call
repnz
dec
adc
repnz
sub
push
pop
add
test
mov
sahf
(bad)
ror
mov
mov
mov
cmp
ss
mov
cmp
mov
cwde
dec
mov
int3
loop
aaa
dec
xor
neg
cmp
movs
inc
adc
or
data16
pusha
jp
xor
sub
and
stos
addr16
scas
icebp
cs
jge
aaa
dec
rol
cmc
xchg
pop
or
xchg
push
das
mov
enter
(bad)
fstp
and
push
sbb
xchg
dec
and
inc
test
adc
mov
arpl
sahf
inc
jb
fdiv
inc
pop
dec
pop
in
cli
and
push
and
and
stc
inc
xor
jmp
lods
js
ja
push
popa
cdq
xchg
mov
push
stos
(bad)
jbe
or
je
xor
lea
cmps
add
shr
inc
retf
cmps
push
and
ds
cmp
call
pushf
sub
inc
cmc
push
leave
inc
or
mov
xor
fwait
pop
sar
add
jg
mov
ds
jo
fldcw
xor
cmps
das
int
lods
int
mov
pop
nop
cdq
in
cdq
pop
and
mov
rcr
fdivr
dec
scas
sbb
mov
adc
call
mov
jb
jbe
fsubr
jg
ss
icebp
push
adc
jmp
sub
shl
test
push
test
int
xchg
out
xor
sahf
and
lds
dec
loopne
jne
loop
cmp
pop
out
add
jnp
lods
xchg
cdq
int
mov
test
mov
daa
cmps
fstp
cmp
out
shr
(bad)
stc
out
jg
mov
into
std
iret
fsubp
ror
lods
sbb
pop
jae
iret
hlt
or
xor
outs
and
ja
cmp
addr16
mov
adc
jecxz
adc
dec
mov
addr16
mov
mov
xchg
clc
lock
pop
mov
stos
ss
inc
xchg
add
fdivr
add
call
pop
out
adc
add
or
dec
cmp
test
mov
ins
jno
push
fdivr
hlt
adc
ret
sbb
shr
push
cld
jb
inc
sahf
sbb
inc
cld
mov
std
jge
mov
popf
xor
cmps
fild
fs
pop
push
push
ss
retf
aam
pop
ins
fsub
sub
inc
push
cmp
es
cmps
sbb
cmps
retf
push
adc
popf
inc
xor
mov
sub
pop
sbb
stos
jb
pop
mov
scas
jnp
jo
push
mov
in
ficomp
retf
lahf
ins
sbb
stos
jbe
std
pop
inc
int
or
and
dec
in
or
mov
adc
or
lahf
cmps
push
or
daa
pop
xchg
ss
out
fs
int
pop
mov
test
mov
sub
fistp
inc
pop
stos
or
sbb
not
inc
arpl
sub
mov
xchg
ficom
mov
dec
ds
in
jge
xchg
mov
xchg
mov
add
pop
jbe
mov
mov
sub
out
xor
je
jmp
cmps
adc
fcomp
ss
retf
mov
jno
xchg
mov
push
add
mov
test
push
adc
mov
sbb
mov
test
xchg
xchg
and
mov
xor
jne
movs
dec
push
dec
adc
dec
mov
sbb
and
mov
dec
mov
dec
outs
push
pop
inc
xchg
mov
push
jecxz
das
sub
retf
or
and
push
ins
and
lods
aaa
adc
leave
adc
xor
jg
cli
add
add
mov
inc
int
add
clc
jnp
bound
mov
sahf
out
pop
popa
dec
mov
mov
jnp
jae
pop
mov
xor
and
and
push
js
loopne
mov
dec
(bad)
cmp
int
xchg
arpl
imul
into
outs
out
push
mov
pop
fs
std
cli
jecxz
xchg
out
sti
jbe
fs
iret
dec
push
daa
mov
fdivrp
ja
int3
imul
shl
push
push
(bad)
ret
shl
xlat
aas
adc
add
mov
mov
jp
mov
sbb
(bad)
adc
(bad)
mov
out
jge
jmp
nop
sbb
movs
inc
ja
pop
aam
gs
in
test
xchg
add
xchg
xchg
js
mov
jmp
fiadd
or
and
add
xor
sub
sbb
ror
or
call
and
fsub
push
jg
mov
sub
xchg
lock
push
add
jmp
das
loopne
rcl
jns
jo
loope
xchg
cwde
pop
xchg
xlat
inc
loope
fmul
cld
js
xor
out
gs
aad
ret
mov
mov
leave
ret
add
xchg
xor
enter
inc
xchg
cs
cmp
sbb
jne
les
imul
cmps
leave
dec
sbb
pop
adc
leave
pop
mov
or
fnstenv
mov
aad
test
mov
popf
mov
out
in
cdq
push
adc
lods
add
or
push
out
dec
mov
in
xor
scas
shl
xor
push
mov
shl
and
xor
jb
out
cmp
jnp
cld
mov
push
adc
sub
scas
inc
pop
mov
test
es
pop
loope
mov
arpl
jnp
dec
ret
sub
jl
add
je
push
sbb
in
or
sti
fild
jnp
test
ficom
and
aam
loop
ins
or
inc
aam
rcr
xchg
mov
inc
out
xlat
or
add
cmps
fdiv
xchg
stos
sbb
pop
outs
jno
test
leave
cli
ins
push
enter
retf
push
sub
fnstsw
cmc
dec
sbb
push
pop
popa
shl
lock
dec
mov
fnsave
out
ins
mov
inc
push
mov
pop
add
mov
dec
dec
and
mov
sub
mov
mov
push
fucomip
jge
in
je
popa
das
aad
sbb
dec
ret
cmc
add
ret
xchg
cmps
sub
shr
cmp
sbb
pop
sub
push
xor
pop
pop
xor
shl
adc
add
loope
jo
mov
pop
mov
rcr
daa
lea
js
cmps
dec
jmp
retf
jmp
inc
pop
and
cmp
leave
jge
sbb
mov
jb
mov
mov
cli
test
stos
mov
cmps
rcl
mov
jmp
xchg
pop
sub
mov
dec
jecxz
dec
cmp
ss
or
shr
sbb
cld
mov
dec
inc
cmp
nop
das
iret
jp
daa
or
add
call
lods
cdq
in
sbb
adc
outs
and
stos
gs
cmp
inc
rcl
call
sub
pop
mov
clc
xor
sub
push
fnstenv
and
aad
adc
cld
xchg
sbb
daa
jnp
jp
mov
mov
ss
scas
pop
mov
jmp
inc
mov
xchg
dec
gs
dec
pop
lock
ds
push
mov
jmp
fcomip
pop
fcmovbe
cdq
jmp
enter
adc
xor
and
cmp
mov
into
pop
mov
adc
dec
fstp
xor
xchg
call
dec
sbb
movs
ret
(bad)
call
into
sub
ror
aam
call
ror
pop
(bad)
or
and
out
in
adc
cmc
pushf
mov
mov
push
or
push
jae
inc
push
add
test
in
sbb
xchg
jmp
mov
add
loope
or
ret
mov
jo
mov
dec
pop
fstp
bound
jle
push
jns
fwait
xchg
mov
adc
xchg
and
jnp
dec
push
dec
push
imul
es
mov
push
jb
stc
call
pushf
fs
iret
aad
jae
xchg
inc
push
add
les
fstp
dec
setl
in
jp
or
adc
adc
aas
arpl
cmp
cmp
arpl
or
mov
xchg
loopne
sub
sub
test
loopne
cmp
(bad)
movs
cmc
mov
xor
loop
pop
les
test
jle
mov
cmps
sub
xor
dec
cmp
(bad)
cmp
add
ins
mov
mov
and
test
mov
div
xchg
mov
and
aad
(bad)
pop
call
repnz
push
out
mov
mov
cs
repz
icebp
in
hlt
pop
or
cmps
lahf
sar
iret
sbb
dec
sbb
mov
jp
cmp
pusha
mov
cmps
mov
retf
xchg
mov
sbb
test
scas
add
fcom
and
(bad)
sbb
out
push
pushf
jg
iret
mov
rol
shl
cld
inc
cmp
and
lahf
xor
rcr
xchg
or
mov
push
mov
nop
jae
fbstp
daa
call
js
iret
sub
call
mov
stc
pop
dec
call
pop
or
jo
retf
nop
jo
mov
xor
iret
mov
and
test
mov
cwde
ss
imul
aas
mov
lea
outs
xchg
push
dec
xor
dec
push
cmp
aad
push
sbb
aam
(bad)
jne
add
ds
inc
cmp
popa
or
loop
(bad)
mov
xchg
pusha
or
popf
je
loop
cmp
jle
dec
mov
jmp
cs
sub
fnsave
mov
cmps
dec
add
pop
(bad)
hlt
mov
loop
cs
or
rcl
jnp
mov
or
inc
fs
cmp
movs
addr16
add
mov
sub
pusha
sub
mov
adc
xchg
dec
(bad)
arpl
not
sar
test
inc
sti
and
xor
xor
inc
into
adc
sub
inc
push
stos
ins
adc
push
jbe
sub
dec
ret
dec
dec
cdq
cmp
jge
nop
cmp
pop
xor
push
sbb
popa
push
retf
fimul
xor
dec
mov
loop
xchg
(bad)
sbb
mov
out
xor
sub
movs
jns
cmp
mov
in
adc
xor
xchg
jmp
cld
xchg
retf
jle
mov
add
pop
jg
bts
and
lods
scas
adc
imul
mov
adc
inc
pop
ficomp
adc
ret
adc
sub
sub
cmp
lods
xor
call
sbb
retf
jecxz
scas
int
(bad)
dec
pop
and
ins
xor
xchg
adc
stos
sar
out
aaa
add
sbb
leave
hlt
jmp
inc
mov
ficom
jp
cdq
jle
push
xchg
rol
iret
inc
adc
xchg
pop
fist
daa
into
and
es
jg
dec
add
iret
retf
out
imul
push
lahf
(bad)
retf
ds
push
sbb
adc
rcl
in
xor
mov
xchg
retf
shl
in
dec
cli
jecxz
out
cmp
aaa
push
and
jmp
aad
xor
or
mov
adc
or
lea
rol
js
das
sbb
and
or
inc
add
ja
fs
cmp
je
cmc
sub
mov
dec
mov
adc
cwde
cld
jp
sub
sbb
int
aas
adc
xchg
mov
adc
add
pop
fs
pop
test
add
das
cmps
mov
sbb
test
jmp
aad
xchg
imul
xchg
je
pop
mov
hlt
add
cmp
out
adc
lods
mov
test
aad
cld
push
(bad)
hlt
sti
maxps
int3
lock
cli
xor
or
test
mov
and
mov
mov
imul
icebp
data16
out
scas
push
loope
jge
cmp
adc
inc
into
mov
and
inc
dec
jae
test
sar
cmp
pop
mov
cdq
mov
call
pop
add
mov
out
add
inc
retf
movs
adc
call
pusha
out
jge
cmps
fistp
cmp
fisub
lds
inc
xor
pop
jb
cdq
fcomp
std
push
add
retf
jge
adc
or
sbb
imul
clc
xor
sbb
inc
sub
add
cmps
dec
adc
xchg
sbb
loope
cmp
jb
cmp
pusha
pop
shr
pop
test
test
jb
jmp
fimul
inc
icebp
aam
or
sub
sub
mov
mov
(bad)
fnsave
retf
or
dec
mov
push
xchg
ja
out
cmp
mov
mov
rol
dec
dec
hlt
pop
test
pop
sbb
push
and
daa
sar
(bad)
mov
shr
in
fst
bound
fmulp
or
jns
adc
sub
jnp
pop
mov
lock
aas
push
or
sbb
dec
out
ret
push
popf
rcr
clc
adc
shl
pop
add
stos
inc
xlat
jmp
xor
xchg
rol
sbb
push
inc
push
mov
mov
pop
sbb
call
push
call
push
pop
pop
popf
cmp
and
xor
mov
in
jecxz
sbb
mov
mov
or
shr
add
idiv
int
pop
test
inc
sub
fisub
ret
adc
lahf
cs
dec
dec
lahf
mov
cmps
pop
add
mov
call
fst
ins
adc
adc
mov
out
mov
imul
mov
sbb
mov
mov
ret
cmp
fisttp
cwde
sbb
or
mov
pop
fnsave
ret
(bad)
adc
dec
push
or
or
mov
push
sub
and
rcr
jl
xchg
mov
test
int3
pop
lock
in
sti
in
push
ja
ficomp
add
(bad)
xchg
push
rcr
dec
sbb
adc
pop
retf
sbb
(bad)
mov
pop
retf
iret
mov
(bad)
out
iret
sub
sub
xchg
and
sub
aaa
fucomp
add
gs
out
adc
popf
shl
(bad)
add
mov
inc
inc
enter
in
imul
adc
stc
ficomp
adc
push
push
xor
dec
xchg
xchg
push
push
ret
adc
(bad)
push
inc
and
dec
add
mov
sub
add
jo
aaa
stos
xlat
dec
frstor
jecxz
xor
outs
loopne
mov
mov
outs
mov
and
lods
xchg
(bad)
and
or
(bad)
shl
pop
pop
push
leave
popa
jae
cmp
lock
cmp
es
or
mov
shl
and
xchg
jo
inc
add
xor
cmc
pusha
aas
jbe
cmc
icebp
jns
or
movs
xchg
add
inc
push
repnz
and
outs
shl
sbb
call
xor
aas
sar
and
rcr
fist
aas
stc
or
gs
xchg
sbb
pop
sub
gs
fsubr
in
shl
inc
sbb
pop
push
or
xchg
es
das
jmp
cmps
js
mov
repz
ret
repnz
movs
mov
mov
fwait
iret
cwde
jns
sub
mov
inc
mov
inc
cmp
imul
fild
shr
ror
popa
mov
ins
cmc
mov
mov
mov
(bad)
scas
inc
push
inc
push
mov
jo
cmps
cdq
lds
enter
pop
stos
ja
push
outs
popa
xor
out
jb
out
mov
jmp
sti
in
mov
xlat
mov
out
lods
mov
push
cwde
out
cmp
pop
sti
push
sbb
push
rol
mov
xchg
mov
sub
push
bound
jne
loope
mov
ret
and
mov
or
cwde
lahf
repnz
or
sub
mov
sbb
popf
push
cmp
sbb
push
add
dec
dec
arpl
jecxz
in
and
popf
mov
(bad)
aad
adc
xchg
fs
lods
imul
shl
call
mov
or
loop
push
out
aad
mov
shl
pop
fistp
sub
lock
jbe
dec
jne
pop
jbe
inc
cmp
enter
adc
pop
out
std
sti
and
leave
mov
pop
call
adc
fs
mov
sar
sbb
(bad)
sub
std
push
les
push
mov
retf
mov
addr16
jmp
pop
(bad)
out
sbb
fs
leave
aam
(bad)
xchg
mov
jmp
cwde
sub
ret
fwait
imul
cdq
and
pop
pop
push
adc
mov
shl
and
sub
inc
mov
(bad)
movs
dec
push
adc
adc
arpl
arpl
rol
xor
adc
xor
jl
jb
sub
xor
pop
in
in
jecxz
pop
dec
in
xor
jl
icebp
push
adc
or
cld
jns
push
push
mov
cld
add
mov
hlt
sbb
cmps
push
(bad)
hlt
dec
mov
pop
ja
pop
mov
jmp
xlat
outs
test
sbb
xor
lods
in
fdivrp
stos
retf
xchg
jbe
lock
test
xor
push
dec
sub
mov
mov
dec
jle
pop
cld
inc
inc
sbb
cmc
or
cmp
pusha
cld
adc
jnp
adc
mov
into
lahf
aam
dec
dec
dec
xor
xor
aad
fisubr
jbe
mov
xchg
mov
push
in
cmp
jmp
mov
sub
jp
retf
and
js
jge
or
out
aas
popf
ins
push
rcl
scas
jg
cmp
adc
bound
adc
inc
mov
aad
ja
imul
xchg
scas
movs
mov
repz
adc
fwait
push
lds
jmp
mov
jno
(bad)
jmp
aas
lahf
outs
cli
mov
adc
dec
xor
std
mov
inc
or
or
test
xor
js
mov
outs
data16
not
sub
scas
out
pop
lods
stos
fstp
mov
push
pop
mov
lahf
push
pop
nop
mov
in
ror
and
mov
jmp
lock
fld
test
nop
bound
scas
adc
fdiv
(bad)
mov
sbb
aaa
or
mov
fidiv
jp
and
shr
loopne
pop
sub
mov
rcr
in
cmp
ins
jmp
inc
mov
inc
mov
test
mov
mov
add
popa
or
cwde
mov
mov
add
lahf
and
sub
hlt
clc
jo
pop
inc
mov
scas
scas
aad
sbb
in
loope
sahf
retf
dec
ins
bound
xor
test
sbb
hlt
inc
push
or
rep
inc
xchg
stos
out
int3
pop
and
loopne
push
jl
cld
and
outs
enter
inc
std
lahf
adc
les
ucomiss
inc
inc
loop
mov
ret
jne
cwde
inc
cmp
mov
outs
inc
add
mov
cmps
pop
outs
arpl
adc
cli
push
pop
xor
imul
retf
addr16
(bad)
xchg
sbb
xor
push
pop
out
pop
das
lods
mov
into
out
div
sbb
arpl
test
cmp
adc
(bad)
sub
icebp
mov
(bad)
dec
mov
jnp
adc
and
jecxz
add
vunpckhps
out
ds
aad
fsub
call
sti
mov
neg
or
xlat
mov
mov
mov
xor
cmp
adc
lods
xor
or
imul
push
dec
(bad)
clc
mov
mov
(bad)
cli
xchg
xchg
dec
mov
adc
cmp
cmc
retf
mov
int
stos
fisttp
add
mov
xor
movs
das
pop
jmp
inc
dec
out
clc
aam
movs
jle
dec
pop
adc
loopne
mov
and
adc
dec
mov
bound
ja
xchg
dec
call
xchg
fisttp
or
xor
es
jmp
das
test
cmp
scas
shr
pop
(bad)
mov
fisub
xor
inc
xor
gs
outs
push
pop
sub
arpl
(bad)
mov
xchg
movs
das
stc
dec
jns
aam
mov
call
sbb
xor
push
xor
out
jecxz
cmp
movs
push
inc
aad
pop
fidiv
cmp
inc
push
outs
xor
mov
fisubr
scas
daa
ins
xor
mov
call
movs
mov
arpl
inc
cmp
daa
inc
or
jns
cmp
cld
dec
sbb
stos
pop
dec
adc
push
cmps
test
and
xchg
icebp
add
es
push
outs
mov
cmps
cmp
push
or
jmp
bound
or
(bad)
pop
and
test
js
dec
scas
movs
add
shl
pushf
jbe
inc
dec
or
int3
sub
out
jge
dec
mov
xchg
stc
in
sbb
sbb
out
cdq
repz
dec
xor
(bad)
and
dec
clc
popf
fwait
jmp
leave
and
xchg
clc
ficom
fcomp
adc
mov
mov
loop
leave
sub
mov
sub
inc
mov
and
lods
jne
jmp
cmp
inc
dec
ret
bound
daa
mov
cli
in
sub
call
lods
inc
sub
xor
fdivr
ds
aaa
repz
mov
sbb
test
xchg
pop
sar
outs
cmp
shl
cmc
data16
dec
js
push
imul
pop
mov
push
and
rep
into
test
or
mov
sbb
mov
mov
repnz
cs
sbb
push
pop
gs
push
xor
scas
ret
(bad)
jecxz
lods
inc
mov
add
xchg
adc
shr
aam
ror
shl
push
pusha
mov
push
call
cwde
outs
arpl
repz
ret
sub
mov
movs
ret
loop
cmp
mov
cs
dec
stos
mov
repnz
test
or
jl
add
jnp
fxch
fiadd
pusha
out
jbe
bound
adc
dec
mov
cmc
ss
cli
ja
in
push
mov
movs
inc
inc
mov
scas
rcr
(bad)
pop
adc
lods
stos
pop
cmp
pop
push
hlt
dec
outs
pop
xchg
inc
retf
and
out
xchg
popf
sub
sahf
mov
adc
push
es
and
mov
xlat
or
in
dec
or
in
cli
push
or
inc
movs
out
jp
inc
mov
xor
xchg
inc
push
mov
or
dec
xchg
jmp
pop
cli
mov
fild
add
cs
cmp
sub
dec
dec
add
jbe
jp
xchg
mov
add
add
add
dec
xlat
sbb
repnz
and
call
rcl
add
das
dec
or
aam
arpl
or
(bad)
mov
out
fwait
lods
in
cli
bound
push
mov
mov
dec
test
and
lds
call
push
fcom
lahf
jns
xchg
or
inc
test
push
ror
jb
push
in
daa
test
jo
gs
repnz
and
(bad)
sub
and
adc
cwde
xchg
in
lahf
adc
mov
adc
inc
(bad)
(bad)
jo
out
fmul
in
clc
stc
lea
lahf
xchg
jns
push
xchg
sti
cmp
hlt
xor
(bad)
mov
cmp
fistp
(bad)
pop
sbb
push
push
dec
out
dec
jnp
aam
pop
mov
jecxz
test
into
pushf
push
jle
pusha
fbstp
jecxz
mov
sub
enter
or
jmp
js
jecxz
scas
loope
xor
xor
add
push
retf
adc
mov
xor
loope
push
jne
ja
push
cmp
jb
mov
pop
fwait
or
mov
mov
add
adc
pop
add
push
xchg
outs
sbb
jmp
mov
popf
cmps
mov
into
inc
inc
xchg
dec
and
adc
icebp
pop
mov
pop
jae
cmps
in
stos
mov
mov
pop
mov
cdq
mov
adc
std
std
out
and
pusha
in
cdq
mov
scas
cmps
jmp
pop
(bad)
daa
jno
inc
inc
mov
add
dec
in
mov
push
xchg
sbb
or
adc
mov
adc
and
push
push
xor
mov
stos
out
jne
or
clc
dec
xchg
bound
push
retf
xor
cmp
call
repnz
pop
xor
or
mov
xor
retf
push
ins
ins
push
cmp
test
or
cmp
and
ret
dec
int
xor
call
(bad)
pop
jge
das
mov
push
ins
lds
cld
dec
shl
push
pop
inc
mov
and
sbb
mov
dec
add
stos
mov
int3
pusha
adc
inc
cmp
inc
pop
out
or
mov
cmp
add
cmp
bswap
and
fwait
std
mov
jmp
daa
popa
call
mov
cmp
jnp
and
mov
mov
loop
mov
mov
ret
movs
push
sub
retf
push
mov
cld
sti
lahf
xchg
adc
mov
mul
test
(bad)
push
or
push
aam
(bad)
adc
fs
cmp
es
out
mov
ret
xor
cmps
cld
push
(bad)
test
sbb
add
neg
cmp
test
jbe
add
loop
inc
std
add
jmp
dec
sbb
jb
push
cmc
or
xor
jne
test
xchg
in
int3
pop
ds
xlat
repnz
into
popa
out
hlt
fiadd
mov
sbb
je
jne
pop
test
fisub
ins
ins
mov
jge
ds
jecxz
cmp
jo
rcl
jecxz
inc
mov
gs
pop
jg
lds
push
ins
inc
xchg
sti
nop
cmp
mov
adc
inc
sbb
cmp
jg
dec
mov
es
or
jl
jecxz
mov
or
adc
dec
out
lahf
xor
jg
in
jno
call
or
jg
out
jecxz
aam
sub
mov
loop
add
add
mov
in
aam
inc
cmp
aam
ss
add
inc
xchg
sbb
mov
jno
outs
and
push
pop
ins
xchg
stos
retf
mov
mov
jbe
push
pop
in
mov
sub
in
xchg
(bad)
and
test
in
test
jmp
add
ja
nop
and
pop
loope
cmp
loop
cdq
(bad)
retf
in
cdq
fld
shl
ins
mov
pop
iret
dec
sub
pop
push
in
or
loop
inc
xchg
and
sub
gs
and
test
not
sub
in
out
adc
sbb
cmps
sub
mov
jge
sub
out
push
inc
adc
dec
jmp
fstp
xor
add
inc
cli
mov
push
in
cmps
int3
retf
bound
nop
outs
fld
in
stos
(bad)
std
push
inc
je
mov
adc
push
out
mov
popf
daa
fsubr
mov
cmp
(bad)
popa
push
jb
cmc
bound
xor
jmp
call
pop
mov
lds
lea
push
dec
mov
lds
mov
mov
lock
or
push
mov
pop
sub
fldl2t
xchg
sub
jg
mov
div
(bad)
shl
cld
repnz
jl
sbb
cmps
jmp
mov
pop
or
mov
mov
inc
fimul
sub
mov
and
mov
cmp
jg
mov
stc
out
dec
pop
loopne
xchg
jae
outs
das
data16
out
repz
xor
and
in
cmp
add
jne
add
aaa
cmp
mov
fstp
xor
pop
test
in
xchg
test
int3
mov
pop
sub
fdivr
push
out
ret
pushf
sub
jle
es
stos
dec
enter
adc
pop
test
mov
mov
jmp
jmp
push
or
pop
push
add
das
mov
mov
shl
(bad)
out
cmp
jno
retf
popa
mov
add
inc
jmp
aad
ins
sti
fcmovnbe
mov
lea
or
sbb
clc
imul
xchg
mov
out
ret
inc
cli
inc
mov
xlat
cmps
leave
out
aad
sahf
push
push
lods
dec
test
mov
push
xchg
ficom
jbe
in
call
pop
xchg
stos
call
mov
jbe
ins
lock
mov
movs
cmp
scas
addr16
mov
mov
push
shr
inc
add
bound
ja
mov
fisub
test
inc
xor
sub
xchg
sbb
mov
out
fnstsw
retf
pop
and
cli
fdivr
mov
mov
xor
xor
dec
data16
or
test
dec
jns
inc
sub
sub
xlat
jle
fisttp
jns
add
hlt
cli
rol
mov
cli
stc
push
mov
loope
inc
ffreep
xor
ja
data16
test
pop
or
xchg
fwait
inc
xchg
pop
pop
or
popf
jnp
arpl
adc
add
cwde
stos
movs
or
aaa
inc
retf
mov
cmp
out
fwait
fwait
push
sbb
(bad)
jl
dec
(bad)
test
pop
xlat
inc
es
pushf
push
fisttp
je
adc
adc
rcr
rcr
jp
adc
cmps
lds
jle
popf
imul
call
mov
pop
sub
loopne
pop
aas
adc
(bad)
adc
in
xor
aaa
cmp
test
adc
xor
mov
imul
gs
fistp
mov
retf
xor
ins
ja
es
clc
out
jmp
arpl
mov
jnp
xchg
popa
aas
xor
inc
mov
fidiv
push
jns
(bad)
test
cmp
dec
and
leave
xor
add
add
mov
jp
jne
jge
jmp
mov
adc
imul
loop
stos
(bad)
sbb
nop
lock
popa
cdq
push
test
aam
xchg
stos
xchg
mov
push
push
addr16
xor
sbb
mov
or
repz
mov
and
jo
and
mov
das
mov
push
fistp
jp
rol
test
arpl
sub
out
push
imul
pop
and
adc
push
inc
lods
xchg
cld
mov
xchg
je
sar
aad
scas
sub
test
and
repz
inc
pop
aaa
mov
loope
test
bswap
aaa
out
dec
jmp
or
ja
aaa
shl
iret
cld
sbb
pop
inc
fs
mov
cmc
lds
clc
dec
in
adc
and
add
ror
mov
push
sbb
hlt
icebp
call
pop
rol
jmp
and
cmps
push
pop
lahf
neg
sub
fdivp
mov
push
mov
sbb
fwait
shl
mov
repnz
clc
xor
leave
adc
(bad)
out
inc
leave
mov
xchg
pop
(bad)
pop
mov
out
popa
push
js
add
out
in
icebp
dec
or
daa
adc
lea
shr
pop
push
lds
pop
sbb
je
sbb
data16
psubsb
pusha
dec
sbb
push
popa
movs
sub
stos
out
inc
and
ror
out
dec
jno
je
inc
cmp
cmps
cli
and
jne
fdiv
lods
scas
dec
pop
sub
scas
popa
idiv
or
push
in
mov
cmp
add
jle
in
inc
mov
or
(bad)
rcl
mov
aaa
add
stos
push
addr16
add
mov
sub
mov
(bad)
jecxz
test
mov
retf
in
loopne
inc
ds
dec
aaa
mov
jbe
and
test
adc
adc
push
aam
pop
add
xchg
out
mov
add
das
dec
imul
and
mov
shl
sbb
mov
call
or
fnsavew
mov
xlat
js
stos
lods
or
sbb
shrd
inc
dec
and
mov
call
xchg
stos
bnd
hlt
mov
pop
loopne
fstp
push
into
push
test
lahf
sub
sub
and
(bad)
in
mov
sub
xchg
pop
mov
ficomp
push
data16
loop
sub
std
pushf
lds
std
dec
sub
cmps
xchg
es
mov
sub
iret
aas
repnz
inc
fisttp
adc
(bad)
jecxz
imul
gs
dec
inc
outs
in
cdq
adc
(bad)
mov
lahf
pop
mov
add
xchg
jae
aas
adc
arpl
retf
icebp
inc
gs
jg
nop
enter
sbb
cmps
cld
fnstenv
mov
ins
out
lahf
daa
ss
xchg
ror
add
jp
call
dec
inc
ret
add
(bad)
ficomp
lahf
cmps
loopne
mov
enter
sahf
inc
adc
jnp
sbb
mov
add
shl
lods
in
imul
sub
add
cmp
je
dec
sti
dec
cwde
mov
sub
mov
addr16
and
sub
nop
rol
cmp
repz
mov
ret
arpl
jne
ins
pushf
sbb
test
(bad)
mov
xchg
sub
or
ins
or
add
outs
hlt
sub
adc
in
xchg
push
xchg
mov
xchg
jge
mov
cwde
ror
call
jecxz
mov
xchg
or
and
mov
xchg
jge
fwait
xchg
hlt
jmp
nop
repnz
mov
sbb
dec
aaa
dec
xchg
test
push
int
xchg
dec
jbe
cli
cdq
call
mov
outs
popf
jbe
xchg
cmp
mov
fucomip
pop
iret
inc
and
je
imul
push
(bad)
pop
pop
pop
sar
fcom
dec
or
pop
jp
cs
stc
fst
xchg
outs
jae
sti
test
cmp
jns
and
dec
pop
jecxz
out
out
xor
sub
xlat
les
jb
inc
xor
pop
mov
out
add
add
test
loop
or
ins
cli
fild
or
mov
inc
ins
fld
jl
push
shl
(bad)
shr
test
jo
popf
sub
and
je
jno
cmp
int3
std
imul
retf
jnp
xor
inc
pop
ret
mov
mov
call
imul
xor
neg
stc
and
stos
popa
cmp
push
jb
push
repnz
push
lods
sbb
jmp
or
in
(bad)
cmp
sbb
inc
xor
xchg
jmp
dec
pop
cmp
or
pop
mov
mov
xchg
jo
in
add
stos
sub
inc
xchg
test
sub
outs
mov
push
jne
in
lods
sbb
adc
mov
inc
mov
movs
xchg
lea
scas
mov
nop
hlt
xchg
sub
jecxz
movs
std
sub
fistp
mov
loop
or
push
aaa
and
jb
jns
push
add
add
jno
popa
fbstp
xchg
jmp
arpl
aaa
loop
dec
sub
mov
jge
(bad)
out
mov
adc
icebp
cld
daa
jae
ss
cli
jle
ins
xor
leave
test
mov
and
cmc
aad
fsubr
mov
in
sbb
sahf
out
cmp
neg
push
push
xor
scas
jg
and
push
(bad)
jnp
pop
cld
xchg
arpl
xor
jnp
cld
push
xchg
out
(bad)
mov
mov
mov
jmp
ds
inc
sbb
retf
xchg
(bad)
and
aaa
popf
into
cmp
pop
test
mov
je
sub
add
outs
mov
push
xor
icebp
imul
in
dec
xchg
sub
mov
and
addr16
jbe
cmp
add
(bad)
stos
lahf
int3
mov
sbb
cmp
mov
cwde
lods
neg
aaa
retf
stc
aaa
pop
or
hlt
xlat
mov
mov
adc
popa
mov
push
fstp
adc
xor
jmp
sub
les
sub
in
aam
clc
(bad)
out
jecxz
cld
rcr
xchg
outs
(bad)
jo
dec
into
cmps
in
xchg
mov
and
test
int3
mov
mov
stos
fdivr
jnp
pop
test
adc
push
pop
xor
pop
inc
scas
sbb
sbb
inc
mov
mov
xchg
dec
jb
or
mov
sbb
je
sub
jecxz
std
fwait
iret
dec
addr16
pop
fdivr
std
arpl
outs
mov
nop
push
mov
rol
ins
cmp
pop
pop
add
pusha
push
jp
sar
loop
dec
pop
mov
loop
pusha
mov
dec
sub
add
xor
pop
inc
mov
jo
xchg
jns
imul
pusha
mov
shl
and
iret
xor
push
xor
and
fisttp
daa
int
hlt
jp
xor
push
cld
xor
jno
mov
adc
sub
xor
or
pop
xchg
sub
dec
dec
fld
ret
dec
mov
xchg
add
jnp
fnstcw
add
jg
(bad)
mul
inc
mov
inc
int3
mov
fnstcw
cmp
pop
adc
jmp
cmps
jno
retf
dec
sbb
mov
mov
pop
mov
pop
xchg
push
test
sub
mov
xor
rol
mov
add
popf
cmc
push
lahf
div
test
xchg
and
add
stos
leave
jmp
int3
push
(bad)
xor
ret
ins
mov
pushf
dec
push
mov
call
dec
aad
(bad)
sbb
sbb
rcl
dec
ret
mov
cmps
(bad)
out
call
inc
push
in
jmp
sbb
fs
or
gs
(bad)
call
loope
loopne
dec
loope
cmps
mov
mov
push
lods
movs
sbb
hlt
std
mov
popf
loope
or
dec
lods
mov
sbb
mov
jbe
cwde
test
jno
pop
out
popa
sub
shl
inc
outs
fldenv
call
add
mov
sbb
pusha
into
les
data16
outs
popf
dec
mov
std
fisttp
adc
mov
ficomp
sub
shl
xor
jmp
xchg
add
or
ja
fidiv
sbb
mov
imul
hlt
push
inc
scas
out
imul
mov
out
data16
mov
mov
push
pushf
sbb
add
retf
dec
and
iret
fdivr
push
or
xchg
scas
xor
add
sbb
leave
loopne
fidiv
add
mov
mov
(bad)
daa
fs
addr16
sub
inc
imul
xchg
mov
xchg
cmps
fadd
push
ds
in
test
rcl
les
fst
test
jecxz
xchg
psrld
loop
stos
(bad)
sub
xor
test
popa
xchg
cmp
loope
aaa
xor
(bad)
jle
sub
ja
add
xor
repnz
jmp
mov
and
jecxz
jg
jbe
or
arpl
xchg
jecxz
in
jp
inc
mov
add
ror
out
mov
ret
je
cmp
outs
(bad)
lahf
mov
add
and
jnp
push
std
repz
mov
pop
scas
jecxz
std
clc
cdq
mov
sub
retf
ins
adc
call
popa
cmp
mov
xor
mov
mov
dec
mov
nop
adc
mov
dec
sub
sub
test
test
xor
xor
or
and
test
mov
in
in
xchg
pop
mov
mov
mov
iret
dec
jecxz
xchg
xor
out
(bad)
sbb
fs
aam
xchg
(bad)
cli
mov
sub
adc
je
pop
cmps
std
sub
in
das
movs
test
jo
repnz
stos
jns
(bad)
js
pop
into
pop
and
int
mov
sub
scas
outs
mov
js
test
push
mov
jo
pop
add
push
mov
sub
mov
repnz
fwait
jg
cmp
push
repnz
icebp
mov
xor
shr
xchg
in
dec
sbb
pop
sub
pop
(bad)
mov
not
imul
mov
sbb
cs
adc
jnp
jae
into
cmp
leave
add
lds
dec
cmp
loopne
cwde
add
sub
shl
push
add
sbb
sahf
fld
dec
or
jb
fst
rcl
icebp
dec
repnz
test
(bad)
cld
or
add
or
pop
fwait
pushf
add
push
sub
sub
loope
or
and
pop
ds
ret
cmps
mov
and
call
dec
mov
fistp
inc
(bad)
jae
test
inc
mov
jae
mov
lea
add
aas
fiadd
sbb
fisub
ret
sbb
pop
or
mov
mov
xor
ds
retf
cmps
and
fs
loopne
ficom
jmp
push
repnz
les
push
hlt
jg
sbb
ins
xchg
dec
xlat
out
jmp
or
aas
test
sub
lahf
jge
sahf
inc
loop
rcr
cmp
daa
adc
pushf
mov
adc
in
or
or
xchg
adc
sbb
cmp
push
loopne
mov
inc
fsub
xchg
in
pop
fdiv
mov
lods
jo
lods
push
cmp
aam
jmp
(bad)
out
sbb
mov
retf
stos
adc
add
setl
call
adc
mov
mov
arpl
ja
sahf
push
push
aam
inc
xchg
mov
aad
loope
mov
pop
sahf
pusha
sar
xor
test
mov
cmps
xchg
and
dec
pop
mov
out
fsubr
jle
or
out
je
ds
jnp
pop
cld
mov
xor
iret
sub
push
and
cli
adc
or
into
xchg
cmp
xchg
push
mov
push
loope
adc
sub
inc
outs
je
jle
mov
cwde
push
das
arpl
stc
int
sub
pop
cwde
jmp
jmp
int
jmp
dec
aam
movs
xchg
pop
jbe
aas
test
xlat
lock
stos
inc
cwde
jmp
sbb
loope
push
mov
daa
pop
loope
mov
cmp
cmp
xor
movs
fimul
mov
jne
nop
into
mov
inc
jne
ja
xor
dec
xchg
push
fistp
daa
lock
and
xchg
dec
sbb
gs
imul
sub
pop
mov
ds
gs
rol
xchg
adc
push
mov
fldl2e
sar
jbe
loop
inc
in
adc
jno
pusha
popf
rol
rcr
test
pop
call
jmp
test
or
sub
and
jle
pop
cli
outs
lahf
test
loop
xchg
nop
sbb
lods
and
and
mov
xchg
popf
int
sbb
pushw
cdq
or
jecxz
imul
mov
sub
pop
inc
dec
xchg
xor
rol
pushf
cmp
cli
add
sbb
clc
xchg
pop
mov
adc
in
out
int3
and
js
test
push
inc
pop
aad
iret
bound
in
mov
mov
push
add
rcr
call
sbb
lods
lods
sbb
cmps
cld
xchg
cmp
movs
scas
jb
jns
jnp
mov
loope
push
cli
xlat
cmp
push
jo
out
in
jnp
jns
fistp
jne
test
mov
add
loope
inc
not
ins
cmps
pop
sub
aas
outs
xchg
jmp
pop
sub
add
aas
mov
and
push
push
(bad)
stos
pop
cmp
mov
push
das
jno
ds
cmp
fld
mov
or
stos
dec
test
cmp
data16
cmp
pusha
or
mov
cs
aam
outs
adc
mov
(bad)
retf
(bad)
sub
aas
xchg
adc
ret
push
pop
fwait
inc
mov
ret
add
imul
sar
add
(bad)
pusha
ret
jge
into
push
sbb
pop
cdq
mov
ja
push
jg
dec
and
ret
add
lds
sub
sub
sbb
mov
adc
fcmovne
sbb
fsub
push
(bad)
mov
xchg
out
inc
mov
lods
dec
dec
push
ss
mov
stos
inc
inc
dec
xchg
fcomp
call
ja
adc
iret
mov
add
fisttp
and
xor
stos
out
adc
and
ror
and
mov
fild
fs
push
fwait
retf
repnz
cmc
add
outs
aaa
mov
repz
ret
sub
cmps
xchg
int
mov
shl
push
mov
inc
movs
push
mov
pusha
(bad)
adc
test
into
push
mov
jo
pop
ret
pop
inc
or
lods
mov
pop
and
cmp
retf
popf
mov
mov
mov
loopne
push
mov
jmp
add
sbb
sbb
cli
pop
pop
imul
jns
dec
mov
ror
rcr
(bad)
xchg
push
cs
adc
bnd
jbe
pop
shl
jmp
cmp
fucomip
sbb
mov
outs
mov
lods
lahf
mov
and
inc
lock
sar
sub
aam
mov
pop
mov
mov
stos
and
cmp
adc
(bad)
pop
sbb
sbb
hlt
in
push
inc
push
ret
mov
jnp
jge
pop
aad
pop
or
or
shl
call
add
popa
dec
or
mov
and
fdivr
lods
fdivp
push
pop
les
pop
int
pop
pop
jmp
ret
ins
in
mov
repz
cmp
push
ins
ja
les
inc
or
(bad)
xchg
fs
daa
(bad)
(bad)
adc
jne
push
sub
mov
adc
das
in
mov
or
xor
stc
xor
mov
mov
shl
xor
adc
xchg
dec
inc
das
jb
pushf
movs
sub
xlat
data16
xchg
fsubr
pop
mov
pop
jmp
push
push
fistp
pop
outs
dec
jo
xchg
popf
cwde
add
pusha
in
hlt
sbb
(bad)
int3
iret
ins
mov
jl
(bad)
mov
mov
int3
shr
xchg
ret
wrmsr
dec
push
daa
shl
mov
xchg
fwait
jae
les
in
push
add
scas
nop
in
sahf
mov
and
pop
or
inc
fild
sub
ror
ret
mov
lods
pop
pop
sbb
xchg
push
sub
stos
cmps
inc
mov
pop
inc
jge
mov
push
dec
imul
js
add
mov
inc
xchg
and
sbb
mov
repnz
xchg
xor
dec
icebp
and
daa
jp
je
or
and
idiv
outs
jmp
jbe
ja
sbb
mov
cmc
pop
dec
repz
inc
mov
mov
data16
test
loop
cmp
sub
ds
jae
aaa
mov
or
(bad)
fadd
aas
(bad)
call
pop
cmp
test
aam
jle
xor
fst
ins
int
dec
fldenv
mov
push
rcl
push
out
sbb
neg
inc
mov
dec
lahf
push
dec
push
mov
sub
mov
test
and
sbb
sub
mov
dec
into
add
sbb
push
mov
cmps
sbb
push
pusha
and
jmp
xchg
outs
or
mov
mov
or
pushf
inc
mov
popa
cmp
add
jb
movs
into
xchg
add
push
out
mov
push
pop
adc
leave
cli
movs
sahf
ss
call
mov
mov
pop
scas
neg
add
xchg
push
gs
xor
and
inc
adc
(bad)
imul
push
push
or
push
idiv
das
das
rcr
push
push
mov
mov
cdq
inc
stc
js
pop
loop
ja
dec
(bad)
sti
cmp
in
inc
jle
sbb
dec
xor
pop
fisttp
mov
mov
jge
or
(bad)
xchg
imul
inc
and
out
(bad)
(bad)
fld
push
repz
mov
jo
pop
push
dec
and
mov
aaa
push
out
popa
frstor
(bad)
push
inc
adc
ret
xchg
push
xchg
adc
mov
add
loop
ja
loopne
dec
push
aas
mov
cs
retf
outs
xor
pop
inc
adc
sahf
imul
stos
loope
aaa
movs
rcr
push
mov
mov
in
jecxz
addr16
lods
dec
mov
jl
mov
fs
cli
adc
xchg
leave
lock
sub
sahf
in
pop
pushf
ret
or
(bad)
push
jmp
loop
push
ja
cs
cmps
call
fild
sub
sahf
push
mov
in
mov
not
add
(bad)
in
inc
sbb
mov
cmp
jno
add
mov
inc
lahf
dec
or
or
inc
sbb
and
in
jmp
fmulp
addr16
fcomp
pop
jno
pop
shl
inc
mov
dec
jl
cmc
cmp
(bad)
lock
push
jne
push
arpl
xchg
pop
push
sub
push
add
repz
jne
rcl
sub
or
lods
loope
add
add
add
and
jl
arpl
(bad)
mov
inc
fsub
pop
imul
fsub
jbe
jmp
mov
fst
loopne
dec
es
aad
sti
int
rcr
pop
push
cmp
adc
rol
lahf
jnp
sub
nop
(bad)
adc
inc
and
mov
mov
jp
jmp
dec
das
xchg
test
cs
pop
cmc
or
mov
out
mov
sub
mov
xchg
jbe
inc
outs
loope
mov
jge
mov
add
cs
je
jae
cmp
pop
pop
cli
repnz
or
ins
aad
adc
test
mov
push
adc
xchg
scas
repnz
sbb
stos
push
sti
fsubr
movs
out
mov
add
stc
jbe
cmp
or
cmps
pop
mov
xchg
movs
inc
xor
ja
dec
adc
fbstp
retf
jb
in
or
pop
mov
mov
lock
mov
jbe
and
scas
and
outs
and
sar
lock
pop
fild
push
cli
push
ins
div
mov
in
xor
test
out
sub
pop
dec
test
mov
cmp
les
outs
addr16
cmps
fdiv
push
jae
scas
test
dec
jnp
loope
xor
pop
jmp
xor
leave
stc
outs
and
fisub
xor
dec
bound
fnstsw
or
mov
jns
dec
and
mov
lahf
movs
dec
or
inc
aaa
loope
enter
(bad)
das
or
sub
sub
icebp
stc
jle
in
daa
cs
jmp
inc
jno
cdq
dec
rol
ret
les
inc
jb
icebp
jge
dec
jo
out
adc
int
mov
dec
jne
cmp
lds
cld
cs
aad
fwait
xchg
lock
xchg
fstp
jns
lods
test
(bad)
push
and
outs
inc
das
es
jecxz
test
and
(bad)
outs
mov
fsub
push
(bad)
cmp
xchg
out
je
enter
inc
aaa
loope
call
jmp
out
mov
popf
or
arpl
stos
arpl
sbb
aam
lds
outs
mov
sbb
jl
daa
mov
(bad)
arpl
mov
inc
push
push
xor
rol
inc
xor
test
imul
(bad)
cmp
test
fwait
and
push
xchg
clc
cmp
cmp
xchg
or
push
mov
cmps
pop
in
mov
push
jb
in
(bad)
or
xor
scas
scas
sahf
push
fadd
mov
repnz
inc
rcl
mov
jl
jmp
or
pop
sahf
std
outs
sbb
mov
push
mov
mov
add
leave
sti
adc
test
bound
call
data16
cmps
lea
(bad)
jne
sub
lahf
push
and
push
xor
mov
pop
push
pop
push
inc
mov
jne
out
sbb
mov
adc
addr16
retf
push
jg
jns
in
mov
pop
jno
pusha
ror
jg
fisubr
rol
cmp
pop
xchg
fcom
(bad)
push
daa
lock
and
jne
mov
jmp
inc
xchg
dec
(bad)
adc
fidivr
and
push
sbb
std
mov
dec
or
sub
adc
mov
daa
mov
or
inc
add
inc
mov
das
pop
or
in
sbb
in
(bad)
push
xor
and
add
call
fwait
cli
add
sub
push
out
add
and
push
cmps
or
mov
test
cmps
xor
int
sbb
dec
aas
dec
jne
lea
sub
ins
dec
xchg
pusha
fisub
lock
xor
and
sbb
jae
jp
stos
loope
jae
fcmovnbe
fistp
movs
xchg
and
leave
adc
ins
hlt
dec
mov
das
push
inc
or
les
pop
shl
dec
sbb
mov
ficomp
push
fisttp
outs
and
in
scas
aad
mov
fidiv
pop
(bad)
sub
pop
popf
sbb
in
push
(bad)
fmul
pop
push
cld
sbb
add
inc
cmp
or
or
jo
lods
jno
stos
pop
mov
add
mov
in
popf
or
push
add
xchg
rol
xor
cs
fmul
sub
imul
int
add
xor
xor
push
sahf
adc
std
sbb
push
jmp
jg
mov
sbb
push
jb
sbb
je
fst
ja
dec
cmp
push
pop
jno
push
test
icebp
retf
es
mov
mov
cmp
dec
fisubr
xchg
icebp
fiadd
(bad)
cmp
lods
iret
outs
pop
ror
inc
mov
push
ja
pop
pusha
push
or
fs
pop
clc
xlat
loope
sbb
sub
(bad)
push
sbb
jmp
test
pop
pop
pop
xor
das
fisub
in
mov
sahf
and
mov
cwde
dec
xchg
cmps
fisttp
adc
or
push
jp
ret
aaa
ins
or
fisttp
aad
jmp
jge
mov
or
std
xchg
shl
div
mov
adc
pop
std
cli
mul
add
mov
repz
jge
xchg
pop
adc
(bad)
xor
cmps
sbb
div
mov
push
cmp
xchg
nop
inc
rcr
add
xor
or
dec
pop
mov
sub
rcl
or
push
nop
outs
loope
sbb
jg
inc
fwait
sbb
sti
jnp
sbb
xchg
imul
das
adc
xor
arpl
mov
dec
pop
sub
jle
dec
(bad)
in
icebp
xchg
popf
(bad)
sbb
shl
imul
cdq
adc
cmp
push
aas
push
sbb
outs
fnstsw
push
cli
push
rcl
xchg
retf
sub
adc
les
pusha
lds
cwde
xor
push
xor
fisubr
js
ins
dec
daa
ret
loopne
or
addr16
pop
mov
loop
cs
icebp
xor
icebp
sbb
ss
sbb
add
cmp
or
xor
mov
iret
nop
ror
mov
and
push
cmp
jnp
into
out
cli
sub
pop
dec
imul
in
or
sub
or
repnz
lahf
pop
mov
inc
xor
push
cmp
out
pop
faddp
xor
sbb
and
inc
scas
je
jmp
pop
xor
xchg
add
icebp
dec
inc
ret
lods
movs
sub
and
or
ror
xchg
aam
fst
ret
mov
sar
jae
mov
sar
mul
xor
dec
xor
pop
jg
pop
popa
mov
mov
lea
push
dec
add
and
cmp
shr
je
in
movs
fadd
movs
jge
xor
jge
sub
push
mov
(bad)
cmps
lahf
inc
dec
aaa
xchg
cmp
retf
jae
dec
jg
and
mov
test
js
pop
cmp
stc
jle
jmp
(bad)
mov
cmps
cmc
jnp
pop
je
shr
movs
xor
enter
loop
inc
call
into
adc
jnp
or
and
mov
inc
jb
xchg
pop
ins
out
(bad)
pop
scas
sub
cmp
and
jle
inc
fwait
loopne
dec
push
js
jecxz
cmp
lods
leave
xlat
ins
popf
pop
pop
sbb
mov
inc
sub
enter
sbb
in
mov
outs
lock
mov
mov
sbb
outs
jno
pop
out
pop
test
push
data16
hlt
loop
retf
fdivr
ja
out
sbb
sub
mov
fcomip
lods
pop
adc
mov
sbb
or
jle
mov
mul
mov
jecxz
ins
in
das
shl
test
mov
add
inc
or
push
gs
add
call
adc
adc
push
data16
cdq
or
mov
lahf
daa
mov
sub
mov
add
sub
jecxz
enter
ins
mov
push
push
lods
lea
ins
(bad)
sub
mov
and
jne
xor
test
xor
pop
stos
call
sub
xor
test
loop
jns
lldt
aam
sbb
ins
popf
sbb
pop
or
sub
sbb
add
xor
mov
xor
or
ds
adc
int
ss
cmps
pushf
les
push
pop
push
sahf
xor
mov
pop
lahf
fwait
adc
xchg
ficomp
xor
jnp
sahf
mov
push
out
(bad)
nop
div
push
out
inc
in
in
xchg
dec
test
add
mov
test
in
add
stos
dec
add
retf
inc
jno
push
xor
ins
sbb
jns
loop
push
push
xchg
icebp
or
(bad)
push
popf
xchg
outs
das
mov
sbb
mov
loop
shl
pushf
dec
pop
dec
push
or
lds
fdivr
and
icebp
nop
into
pop
lea
movs
push
(bad)
xchg
int
jns
pop
xchg
das
enter
dec
mov
pop
mov
fsubr
or
daa
xor
rol
mov
scas
mov
mov
mov
es
or
push
mov
pop
push
mov
sub
sbb
mov
outs
fisttp
dec
push
xor
mov
idiv
inc
dec
jl
(bad)
adc
jns
cld
sub
sahf
out
or
fcomp
jg
sub
shl
(bad)
fisubr
xchg
adc
das
scas
jge
repz
adc
cmp
inc
push
xlat
cld
scas
loop
xor
stos
mov
mov
dec
mov
pushf
inc
dec
imul
sub
int3
lods
std
out
jl
dec
sbb
stos
fiadd
jo
aam
jecxz
neg
adc
cmp
scas
mov
mov
pop
sar
mov
xor
shl
cdq
dec
ja
(bad)
lods
mov
cmp
call
dec
lods
pop
ds
fs
and
cmps
xor
adc
lock
dec
pushf
repz
(bad)
or
pushf
sbb
out
pop
or
mov
pusha
cmp
pop
inc
stc
mov
push
loope
(bad)
daa
aas
in
xchg
mov
push
ins
lods
cmc
inc
pop
sbb
mov
stos
sub
(bad)
jmp
cmp
jp
popa
push
fwait
and
mov
imul
xchg
or
jecxz
vpaddw
stos
jp
adc
fmul
scas
jmp
xchg
pop
pop
mov
mov
cwde
aaa
adc
mov
cmp
mov
pop
stc
xor
add
pop
xchg
pop
out
add
cmp
sub
xor
sub
test
mov
mov
push
int
mov
shl
test
jmp
adc
mov
add
cld
sub
shl
mov
hlt
test
xchg
xchg
mov
jbe
add
pusha
mov
mov
jle
sub
shr
or
xchg
cmp
loop
push
pop
cmp
sbb
in
(bad)
stos
arpl
pop
or
mov
xor
push
sub
ret
push
cmp
pop
pop
test
int
pop
call
neg
je
jne
xor
xchg
dec
push
lds
retf
xchg
jl
ret
movs
xchg
cdq
sbb
std
add
cmp
sbb
retf
push
cmc
jne
mov
outs
xchg
es
sub
dec
(bad)
jecxz
xchg
fs
in
dec
stos
pop
add
mov
aaa
out
outs
movs
in
mov
mov
leave
loop
push
fst
ss
lods
mov
cmp
sub
jmp
call
jne
pop
cmc
xor
(bad)
mov
cmp
mov
cwde
std
ret
push
mov
rcl
(bad)
out
cmp
inc
xor
mov
es
push
shr
mov
lods
jecxz
jl
daa
or
add
jbe
stos
dec
jne
outs
js
push
int3
movs
mov
js
fsub
(bad)
pop
sub
xchg
add
shl
sbb
sub
call
pop
sbb
push
mov
cdq
cmps
lods
sahf
movaps
sub
mov
and
fild
adc
cli
mov
jp
imul
push
mov
add
repnz
xchg
or
repnz
mov
and
xchg
sub
jae
enter
es
sbb
mul
gs
in
xchg
(bad)
jl
daa
(bad)
or
inc
and
loop
mov
lods
das
xor
jae
jecxz
(bad)
cs
ss
pop
mov
or
fbld
jp
cmp
pop
mov
pop
cmc
daa
pop
cmp
ror
pop
jnp
sbb
cmp
pop
(bad)
jbe
add
or
ds
sub
jmp
clc
pushf
add
stos
mov
inc
or
cmp
jb
scas
mov
les
xchg
push
hlt
mov
sti
outs
(bad)
push
inc
mov
in
inc
xlat
cmps
dec
clc
enter
mov
mov
dec
lds
jmp
pusha
sub
lods
test
mov
movs
rcl
xlat
out
in
inc
ss
or
mov
jbe
xchg
data16
into
mov
pop
loop
cmp
jge
sub
mov
push
dec
sbb
xlat
aaa
or
cmp
xchg
mov
xchg
outs
(bad)
lods
je
mov
mov
int3
aaa
lock
das
retf
or
leave
call
add
mov
mov
and
mov
adc
nop
es
stos
jno
sar
mov
add
sbb
dec
mov
enter
add
push
test
push
es
es
hlt
sbb
xchg
scas
dec
sub
out
or
retf
or
mov
jb
sub
fs
mov
mov
mov
leave
mov
xor
jge
dec
js
sti
adc
cs
cmp
jl
pop
stos
iret
or
mov
xor
popa
pop
lahf
mov
cdq
lods
add
ror
lahf
sbb
sbb
out
mov
aad
cld
rcr
pusha
mov
out
jnp
enter
and
xor
add
cmp
jo
mov
in
sti
repz
dec
loop
loope
adc
bound
inc
cmp
jbe
dec
jge
loop
(bad)
push
in
addr16
fdiv
addr16
pushf
push
sub
jmp
mov
add
das
movs
inc
inc
outs
inc
shr
outs
and
fsubr
jb
dec
dec
test
icebp
add
jo
dec
mov
mov
xchg
fcomp
stos
xor
jmp
adc
jmp
lods
push
out
pop
in
mov
loop
pop
into
test
sbb
loop
jmp
inc
ficomp
or
sbb
push
add
dec
sar
xlat
inc
out
lock
push
aad
arpl
out
sub
retf
dec
leave
pop
dec
popf
mov
out
call
mov
mov
pop
dec
push
add
test
iret
jae
fsubr
in
imul
jecxz
jg
fucomp
xchg
mov
lsl
ret
push
xchg
das
xor
pop
dec
test
jbe
lock
je
push
retf
mov
dec
dec
sub
cld
pop
xchg
mov
sub
gs
xchg
or
sub
sbb
popf
push
addr16
loop
jae
arpl
sub
xor
(bad)
and
out
mov
ins
leave
jecxz
aas
inc
jnp
cmp
gs
fdivp
cmc
sar
push
das
bound
outs
(bad)
pop
jno
mov
retf
mov
push
jne
cmc
mov
movs
out
cli
sub
addr16
mov
hlt
inc
xlat
adc
sbb
sbb
jnp
movs
cli
movs
jmp
scas
jbe
dec
push
rol
add
repnz
xchg
stos
pop
and
xchg
cs
shl
or
xor
aam
movs
push
mov
mov
aaa
pusha
mov
mov
mov
xchg
lods
int
adc
ja
and
pop
movs
lock
jae
dec
xor
shr
xchg
add
mov
repz
ds
pusha
sub
add
in
dec
lods
lds
jge
and
daa
pop
pop
jg
jmp
movs
xor
scas
sbb
imul
or
test
add
mov
scas
icebp
xchg
sti
fstp
push
repnz
inc
mov
sahf
jle
popf
outs
stos
or
rcl
and
pop
jp
inc
lock
stc
sbb
push
push
dec
shl
inc
lods
adc
and
out
sbb
repz
ins
sahf
mov
mov
dec
jmp
dec
inc
bound
repz
adc
mov
rcl
mov
test
mov
or
or
(bad)
and
and
push
mov
dec
cdq
push
repnz
dec
test
leave
xor
dec
call
jmp
cdq
daa
mov
ss
js
or
xor
in
imul
inc
jnp
retf
jb
add
mov
push
hlt
jmp
xchg
and
(bad)
rcl
pop
jl
std
ja
or
cmps
jne
pop
popa
arpl
test
psadbw
popf
sub
pop
inc
dec
mov
pusha
fimul
cdq
or
je
jo
ss
inc
data16
int
push
out
fisubr
inc
jg
jo
mov
adc
pop
xchg
(bad)
out
je
daa
syscall
popa
jl
mov
and
(bad)
mov
xchg
inc
sub
test
jle
jae
aas
(bad)
out
push
lea
outs
mov
add
mov
pop
sbb
mov
stc
push
pop
sub
pop
dec
mov
cmp
mov
xchg
add
out
adc
stos
daa
hlt
in
fimul
mov
jb
arpl
int3
dec
jecxz
sbb
mov
out
cvtps2pd
mov
xchg
jo
jbe
push
cmp
jno
lods
imul
add
psllw
stos
mov
sub
int
add
mov
pop
add
and
(bad)
into
inc
jbe
hlt
sub
loopne
daa
push
mov
push
dec
and
sub
movs
jle
push
xor
inc
pusha
or
shr
cmp
test
bound
in
je
cmp
inc
jecxz
fsubr
cld
lock
test
mov
cld
scas
jle
in
pop
pop
call
sar
jmp
shr
dec
cli
rol
mov
xor
jl
fdiv
shl
jb
jbe
cmp
rol
adc
and
out
movs
ins
std
jecxz
mov
data16
mov
ret
dec
in
fs
sti
mov
ins
out
xor
out
outs
xchg
push
lock
cmps
mov
data16
pop
(bad)
cli
arpl
retf
push
inc
ss
cmps
mov
call
shl
das
push
mov
pop
daa
scas
arpl
mov
sub
ins
xchg
in
in
push
imul
fidiv
hlt
mov
and
mov
push
frstor
movs
es
ja
cmc
dec
cmp
mov
jmp
ins
cwde
ja
std
add
push
inc
das
dec
call
pop
mov
(bad)
add
adc
dec
cli
push
cmp
adc
mov
mov
or
leave
pop
and
jo
mov
xchg
mov
jmp
cmps
aaa
pop
or
adc
or
pop
adc
sub
sbb
daa
mov
pop
dec
test
push
out
ins
or
cli
mov
dec
or
inc
or
loope
(bad)
icebp
push
mov
es
std
sbb
add
mov
ror
pop
pop
inc
stos
fbld
xor
movs
arpl
dec
xor
xchg
xor
in
mov
aas
jb
dec
cli
sub
xor
test
fcomp
(bad)
add
outs
arpl
jl
and
neg
leave
(bad)
xor
loope
mov
ins
xchg
mov
retf
fidivr
sub
loop
pop
movs
fist
dec
jecxz
fild
push
mov
daa
sahf
jns
adc
dec
je
das
sub
pushf
push
push
xchg
test
jns
and
test
adc
mov
sbb
inc
mov
test
pop
jne
adc
xchg
imul
cmp
xchg
sbb
mov
sbb
add
or
popf
xchg
call
je
push
xor
mov
(bad)
cmps
add
sub
sub
jns
xor
ja
fidiv
add
add
sub
dec
pop
in
aad
leave
(bad)
mul
mov
cmp
or
nop
lahf
int
add
mov
add
push
add
(bad)
sub
xchg
adc
dec
cdq
out
shr
nop
cmp
in
pop
test
xchg
test
jmp
xor
and
xchg
and
sub
mov
lods
or
mov
icebp
dec
cdq
aas
cmp
dec
inc
mov
mov
sub
ins
add
fwait
adc
add
lock
and
fisubr
arpl
int3
ret
xor
mov
les
ret
aaa
sub
pop
clc
mov
sub
xchg
ss
nop
pop
fwait
rcr
cdq
in
in
cmp
out
dec
cmc
les
pushf
adc
(bad)
es
fisttp
or
imul
xor
pop
hlt
dec
scas
xor
sbb
pop
xor
sub
fadd
pop
mov
pop
xor
jmp
loope
mov
imul
repz
in
push
cmp
xchg
(bad)
in
neg
stc
test
jmp
lods
(bad)
or
push
push
cmp
mov
jp
fild
dec
in
jo
std
push
cs
inc
mov
rol
in
push
loopne
fndisi(8087
mov
icebp
mov
mov
and
and
inc
gs
add
dec
bound
jmp
shl
in
xor
enter
adc
aam
js
cmps
stc
mov
arpl
movhps
or
and
cwde
or
pop
js
stc
call
or
mov
fsubrp
rcr
xor
mov
popa
xor
cmp
lock
test
out
pop
inc
mov
dec
(bad)
(bad)
jl
add
mov
shr
js
and
jle
xor
mov
movs
in
or
ja
loopne
add
push
push
and
cmp
retf
imul
sbb
pop
and
mov
mov
ret
(bad)
jle
jl
ss
adc
dec
pop
adc
loop
lock
mov
sub
push
test
ret
ss
call
or
pop
cwde
adc
(bad)
jns
into
pop
pop
popa
icebp
and
jge
push
xchg
cli
fwait
sbb
mov
addr16
xchg
ins
lahf
fwait
outs
inc
inc
or
mov
inc
mov
xor
push
out
fcom
xchg
fstp
pop
mov
cmp
jge
xor
jle
ret
pop
add
sti
push
je
sbb
lods
arpl
inc
or
mov
push
mov
(bad)
out
push
xchg
int3
rol
pop
cmp
mov
enter
shl
retf
mov
sahf
cmp
fld
(bad)
pop
pop
dec
test
add
(bad)
pop
loope
fiadd
es
pop
jecxz
cmp
loop
test
add
adc
imul
ror
and
out
es
mov
scas
repz
xor
xchg
dec
xor
popa
jle
test
loope
ss
fidivr
call
xor
stc
jnp
popa
and
sub
fyl2xp1
and
inc
daa
or
ins
push
dec
mov
add
and
xchg
rol
lahf
jmp
icebp
sub
fcom
rcl
das
sar
push
rcr
push
sbb
cwde
or
pop
pop
enter
rcl
(bad)
and
test
jle
pop
xor
cmp
mov
mov
(bad)
and
mov
lahf
hlt
xchg
add
mov
mov
sbb
xchg
mov
cmps
movs
sbb
add
jmp
rcr
jge
mov
retf
jle
sbb
mov
das
bound
or
mov
dec
jno
in
xor
test
push
push
cmps
fimul
jnp
pusha
mov
add
mov
jmp
inc
aas
inc
fstp
fst
or
rol
xchg
inc
jge
pop
cmp
cmp
adc
push
cs
cmc
jnp
cwde
fidivr
sub
cld
xchg
fwait
inc
out
xchg
pop
push
retf
iret
out
add
outs
jno
rcr
in
stos
cdq
imul
ror
jle
das
stc
push
xlat
mov
retf
push
sbb
out
cmp
dec
(bad)
jnp
bound
push
aam
loopne
pop
stos
cmp
mov
call
scas
dec
repz
arpl
test
xor
jbe
add
imul
fisttp
cld
inc
xchg
push
rcr
and
pop
enter
int
mov
ret
in
sbb
pop
call
dec
mov
dec
mov
movs
jl
adc
stos
jne
sbb
sub
das
call
pushf
lahf
dec
div
mov
into
pop
add
cmps
pop
jne
das
xor
push
aaa
cmp
or
pop
inc
jmp
gs
sbb
outs
rol
jge
add
arpl
xor
jae
pop
sbb
and
ret
adc
cs
aam
xchg
fistp
repz
adc
and
loope
cs
mov
sbb
std
mov
dec
bound
cmp
mov
push
lahf
pop
mov
in
sub
pop
xchg
in
inc
(bad)
mov
sub
lock
mov
scas
xor
cmp
out
mov
sub
pop
mov
jns
pop
test
in
and
xor
cmc
outs
fsub
fadd
cmps
test
cmp
out
dec
mov
xchg
mov
aaa
xchg
jmp
inc
sub
sbb
jne
inc
mov
fwait
xor
push
test
jmp
mov
(bad)
fdiv
outs
stc
popf
aas
ja
mov
push
xchg
ficom
jecxz
push
ficomp
xchg
push
ins
push
adc
or
jmp
fld
sbb
retf
push
int3
mov
pop
inc
add
mov
adc
mov
pop
popa
les
or
jmp
(bad)
jge
mov
aaa
scas
in
aas
inc
add
fs
imul
sub
mov
push
adc
mov
pop
(bad)
xchg
cmps
ficomp
out
mov
je
xchg
adc
sub
sbb
mov
(bad)
ins
and
fwait
mov
movs
xor
stos
add
pop
mov
inc
rol
dec
scas
aas
lods
jo
or
xchg
xor
push
sbb
or
pop
mov
sbb
fsubr
aad
sub
and
xchg
ret
leave
scas
movs
call
adc
(bad)
xchg
out
xor
mov
push
jnp
sbb
cdq
cwde
dec
mov
arpl
jo
mov
mov
cmc
(bad)
or
es
movs
in
cmp
mov
loope
sbb
mov
mov
fisub
pop
popa
loope
test
movs
in
dec
aas
cdq
dec
sbb
rcl
inc
seto
xchg
adc
fldcw
fsubr
sbb
nop
(bad)
pop
or
inc
mov
stos
sahf
sub
test
test
ja
aas
leave
call
fbld
sbb
ins
movs
outs
fs
sub
bnd
inc
mov
mov
cmp
or
add
retf
ins
pop
mov
arpl
sub
lock
sbb
or
nop
addr16
aaa
push
leave
dec
das
aaa
dec
mov
mov
jbe
xor
inc
or
pop
mov
(bad)
cs
stos
aaa
out
std
inc
push
in
inc
fimul
bswap
inc
cs
dec
popf
or
jb
dec
add
push
add
push
sbb
add
inc
push
pop
push
xchg
cmp
xor
pop
push
dec
mov
movs
push
movs
fsubr
sub
fidiv
(bad)
mov
dec
jle
jne
mov
jb
sbb
jo
mov
pop
fimul
(bad)
or
add
icebp
or
enter
iret
xchg
stos
sbb
push
mov
xor
push
add
sub
ds
nop
test
inc
outs
adc
xchg
mov
sahf
sub
arpl
adc
fwait
push
mov
mov
popa
test
adc
cmp
mov
xor
push
test
pop
rcl
inc
fiadd
movs
retf
mov
aam
add
leave
pop
and
pusha
in
repz
push
(bad)
jle
xor
retf
imul
push
mov
ja
mov
mov
rcr
sbb
in
jg
sbb
jnp
loopne
jmp
test
out
cmp
mov
jle
add
and
dec
movs
push
pop
in
outs
ror
xor
or
out
push
fist
ss
xchg
aaa
fcmove
sub
mov
pop
aad
sbb
pop
xchg
pop
es
pop
xchg
je
int
and
cli
or
or
and
daa
mov
clc
or
cmp
or
inc
sub
push
xchg
inc
in
add
push
mov
aad
aam
lea
cmp
xchg
mov
dec
jmp
push
jecxz
hlt
ins
mov
cmps
stc
pop
mov
mov
imul
hlt
xchg
scas
fdivr
mov
cmps
in
xchg
int
jno
xchg
mov
cmp
sbb
test
data16
pop
sub
xlat
loopne
fdiv
call
fnstcw
adc
ret
cmp
in
mul
(bad)
mov
jmp
enter
mov
cdq
cmp
lea
push
pop
pop
popa
inc
call
sub
pop
jecxz
int3
sbb
jmp
mov
jmp
in
icebp
out
call
cmp
mov
jno
repz
pop
es
sbb
in
aad
add
(bad)
nop
retf
jb
jno
or
sahf
or
sbb
inc
push
aas
push
jbe
imul
cmp
(bad)
les
in
jp
sbb
xor
movs
mov
mov
popa
aas
outs
jp
inc
adc
inc
or
cmp
in
and
daa
out
gs
in
outs
scas
inc
les
ja
stos
retf
cmp
adc
test
push
ss
fmul
add
lods
and
int3
int3
fwait
int
sub
xor
cmp
xor
mov
sub
mov
sub
test
cli
test
cmp
aam
jle
leave
xchg
xchg
cdq
fld
sbb
inc
movs
sub
popa
movs
arpl
loop
icebp
std
mov
push
push
stos
ins
xor
sti
out
mov
sbb
and
sub
sub
shr
fld
pop
aaa
out
pop
sbb
mov
js
xlat
xchg
push
popa
cs
push
xor
pushf
nop
les
popa
mov
push
xchg
jmp
ins
adc
in
push
mov
or
cmp
fwait
xor
mov
rol
addr16
xor
bound
das
sbb
cld
pop
mov
jb
jp
mov
fdivrp
dec
out
xor
fwait
push
jp
sbb
fpatan
es
daa
daa
sbb
data16
add
das
and
ds
and
aas
dec
xor
pop
pop
xor
enter
xchg
or
push
lahf
xor
or
ja
aad
and
xor
mov
mul
and
dec
mov
daa
xor
xor
sahf
sub
xor
and
ror
jne
or
xor
call
add
das
mov
jecxz
jecxz
fist
cmp
dec
sub
lods
out
cmp
push
dec
out
mov
push
cmp
loopne
and
adc
push
push
mov
fs
cmp
pop
dec
test
mov
pop
mov
mov
(bad)
aam
out
jp
outs
jmp
and
stos
shr
push
retf
ret
sub
cmp
dec
xchg
xchg
test
popa
or
adc
xor
out
stos
es
jns
push
lahf
cmp
and
test
cmp
mov
and
enter
xchg
lds
aaa
pop
icebp
xchg
sti
in
adc
cli
dec
test
icebp
outs
xor
lds
adc
imul
int
icebp
pop
mov
inc
mov
(bad)
xor
sbb
xor
repz
mov
sbb
add
cmp
adc
(bad)
movs
out
mov
mov
add
aas
sub
mov
cwde
not
push
scas
and
fiadd
adc
fadd
clc
cmp
clc
cmp
ins
aam
ins
jnp
xor
leave
(bad)
(bad)
hlt
sub
ja
push
jns
popa
mov
sub
sbb
jb
adc
jge
dec
retf
int
or
pop
mov
mov
fs
or
nop
mov
push
cli
push
inc
les
xor
lods
sti
movs
pop
inc
lods
jmp
push
(bad)
and
mov
ror
shl
movs
jno
dec
out
(bad)
ins
out
pop
lea
sbb
fld
push
lock
inc
mov
imul
mov
ret
mov
xchg
cdq
outs
scas
leave
sbb
inc
mov
sub
shl
movs
push
stos
cmps
jo
and
scas
aaa
ja
push
cmp
jne
stos
daa
jp
xchg
inc
arpl
shl
or
adc
cmp
add
in
stos
pushf
(bad)
mov
pop
xor
scas
jmp
dec
pushf
adc
(bad)
lock
push
sbb
mov
add
test
add
cmp
in
and
popf
sub
in
pop
adc
mov
sahf
and
add
or
cmp
lea
jns
dec
dec
mov
mov
mov
jns
pop
lea
fstp
call
outs
daa
pop
xor
push
fild
popf
ret
loopne
and
mov
dec
scas
dec
jmp
cs
xchg
xchg
into
push
bnd
mov
repz
sbb
adc
xchg
and
xchg
ins
stc
xchg
jge
sbb
fwait
xchg
push
and
lods
imul
xchg
pop
out
add
lods
cdq
pop
pop
inc
rcr
int
push
lock
dec
dec
int
data16
aaa
scas
xor
or
inc
imul
mov
test
dec
pop
or
jge
lahf
mov
jo
and
jmp
mov
pop
push
sahf
xor
jecxz
pop
loopne
push
inc
imul
idiv
and
xor
lods
push
mov
mov
push
cmps
add
daa
cld
adc
inc
xchg
out
push
push
les
or
aad
or
ss
out
mov
and
pop
das
sar
adc
add
pusha
mov
and
aad
(bad)
mov
jecxz
dec
cmps
outs
add
fdiv
ins
jle
(bad)
iret
test
add
inc
int3
jmp
mov
or
jo
aaa
pop
int3
rol
jg
jp
idiv
xchg
sbb
repz
and
scas
cs
or
dec
sbb
push
inc
or
pop
jnp
out
dec
sbb
scas
shl
in
pop
adc
iret
jb
aas
add
out
mov
jecxz
cmp
xchg
ins
jno
out
aam
iret
ins
pop
or
mov
push
icebp
scas
inc
mov
push
outs
movs
leave
xchg
ret
jmp
sbb
pop
repz
int3
outs
dec
sub
pop
clc
daa
pop
push
dec
inc
mov
js
xchg
xchg
xor
dec
sub
lahf
lahf
xor
push
push
sbb
mov
push
jmp
repz
inc
dec
xchg
jbe
jae
and
cmp
pop
mov
(bad)
jmp
add
pop
fistp
dec
push
out
pushf
rcl
jge
mov
mov
mov
addr16
repnz
xchg
push
and
adc
push
clc
add
mov
hlt
xchg
sbb
pop
and
inc
inc
(bad)
popf
test
mov
and
xor
xor
mov
(bad)
cli
jmp
(bad)
scas
jae
and
cmp
xchg
sbb
jmp
test
jmp
cmp
mov
arpl
jl
mov
pop
push
pop
xchg
jno
inc
jbe
mov
or
enter
jne
cmc
xchg
jbe
cmp
dec
mov
adc
out
shr
adc
rcl
(bad)
icebp
clc
outs
mov
jmp
xor
cmp
cmp
ds
push
jmp
cdq
xor
(bad)
data16
jb
shl
mov
sti
sbb
lods
arpl
or
push
inc
push
jg
xor
inc
add
sbb
cmp
popf
and
arpl
push
push
jge
fcmovnb
xchg
repz
movs
mov
jge
or
sub
shl
cmp
cmp
sbb
pop
xlat
(bad)
shl
test
mov
jle
sbb
int
into
pusha
ins
mov
cmps
je
or
out
jns
loope
mov
das
fbld
mov
leave
in
scas
cmp
cmc
mov
jbe
sbb
xor
cld
push
leave
sbb
jnp
inc
popf
loop
bound
xlat
and
push
mov
dec
cmp
jmp
pop
push
call
pxor
(bad)
jo
scas
mov
ja
and
cli
call
daa
sub
pop
xchg
xor
ret
push
jg
fmulp
es
bound
loopne
pop
ins
mov
sahf
jg
xchg
jnp
dec
jmp
sbb
cmp
in
adc
sub
cmp
(bad)
(bad)
outs
dec
mov
ret
repnz
fsubr
outs
inc
sar
mov
xchg
dec
jle
inc
repnz
or
cmp
cmp
add
add
mov
xchg
jp
xchg
cmp
dec
loopne
or
inc
fdiv
movs
fild
(bad)
push
mov
adc
mov
push
pop
cmp
inc
adc
push
cmp
cmp
lods
xor
fsub
xchg
hlt
inc
xchg
xchg
dec
adc
pop
pop
mov
pop
lock
push
bound
pusha
jmp
test
mov
cdq
xchg
(bad)
fdivr
xchg
inc
rcr
movs
shl
loop
dec
es
sbb
mov
cmp
xchg
outs
pop
in
ins
dec
adc
daa
mov
inc
cmps
imul
sub
cli
jmp
out
and
cmp
retf
(bad)
cmps
cli
repnz
and
js
mov
or
(bad)
mov
xchg
not
loope
aad
bound
sub
sbb
adc
or
ja
pop
inc
imul
dec
mov
clc
push
cmp
ror
repz
xchg
loopne
int3
and
in
dec
pusha
mov
mov
call
loope
enter
xor
mov
pop
push
loope
mov
pop
loopne
fsubr
repnz
ret
jnp
stc
sub
pop
shr
sub
mov
cmp
push
inc
jne
add
fbld
xor
dec
dec
mov
loopne
dec
(bad)
outs
xorps
leave
std
mov
and
push
fstp
cmp
jne
ja
pusha
push
mov
idiv
je
jae
push
lods
mov
mov
xor
jge
fcmovnb
xor
cmp
adc
jnp
jge
(bad)
fldenv
dec
add
loop
(bad)
cmp
fs
dec
out
(bad)
popa
enter
mov
mov
les
pop
and
aam
or
mov
fiadd
lea
in
jmp
repz
cdq
imul
xchg
sub
pop
adc
es
push
adc
scas
lds
xchg
pop
inc
dec
fiadd
repnz
mov
fs
jbe
xchg
test
rcr
add
adc
imul
mov
nop
pop
add
pop
pusha
sbb
jecxz
or
in
aaa
mov
cmp
mov
test
sub
dec
push
push
aaa
dec
xor
and
sbb
mov
fnstsw
mov
dec
lods
stos
sub
imul
mov
pop
ds
inc
gs
data16
(bad)
dec
inc
in
rcl
adc
fisubr
jo
dec
inc
into
and
clc
neg
ret
mov
int3
lods
outs
or
hlt
pop
dec
jg
xchg
std
pop
out
arpl
mov
mov
sbb
add
jmp
pop
std
retf
jb
dec
mov
lods
in
cmp
pop
push
ret
push
dec
mov
popf
jne
call
cdq
sub
call
dec
test
fcom
xchg
push
mov
add
out
jne
and
fwait
inc
stos
in
(bad)
mov
aad
inc
cmps
jne
cmp
ret
retf
xor
mov
add
call
stos
cs
jno
pop
mov
jae
sub
mov
popa
sub
adc
cwde
test
aad
cwde
cmp
sbb
xor
push
div
adc
xchg
gs
repz
inc
mov
shl
cmp
in
dec
inc
aad
lods
sub
(bad)
add
adc
idiv
fsubr
sbb
push
daa
inc
xor
dec
jg
ds
push
fs
add
push
ret
sbb
outs
adc
push
cmps
sahf
adc
jmp
xor
in
mov
pop
loope
adc
xor
mov
push
in
dec
(bad)
les
and
jl
mov
or
sar
dec
aam
loope
dec
pusha
and
mov
adc
ins
fwait
aaa
pop
jnp
stos
stc
cmps
out
pop
test
imul
mov
adc
repz
and
xchg
pop
(bad)
pop
add
inc
sbb
leave
add
adc
push
fs
mov
push
out
das
lods
cmp
sar
out
push
push
inc
mov
xchg
or
and
inc
in
cld
or
lahf
ds
mov
lahf
xchg
jne
shl
add
jmp
jmp
lea
mov
popf
cdq
test
ret
psubusw
fistp
sbb
push
ins
sub
aad
push
scas
cs
dec
xor
push
sub
jbe
jg
inc
ror
mul
out
in
cs
cmp
jbe
call
jbe
dec
xchg
mov
sub
pop
stc
inc
jae
xchg
mov
add
shl
push
loop
xor
scas
dec
fmul
lds
outs
test
and
(bad)
out
sbb
mov
leave
std
cmp
pop
pop
cmp
out
inc
shl
xchg
cwde
daa
aam
cmp
shl
xlat
jg
mov
sub
xchg
adc
out
ficom
sbb
add
add
js
jecxz
or
xor
xor
mov
xchg
sub
sahf
push
cmp
loopne
dec
sar
je
push
mov
out
jecxz
sub
lea
add
test
lods
cmp
ja
xor
xchg
push
int
popf
out
and
dec
cdq
jns
mov
mov
mov
add
xor
pop
cmc
mov
jmp
jecxz
add
xchg
dec
inc
jne
nop
push
lods
sbb
sahf
std
push
ja
sahf
cdq
(bad)
jmp
outs
inc
daa
xchg
test
and
sar
push
sbb
xor
push
call
ss
mov
inc
ret
stc
into
xor
ror
xchg
mov
(bad)
icebp
mov
fsub
fsub
pop
push
lock
adc
mov
jo
je
mov
es
jmp
jg
xor
add
mov
jge
add
pop
add
lea
fcom
push
cmps
or
adc
xchg
imul
pop
stos
fistp
push
add
inc
sbb
pushf
or
mov
dec
pop
ret
movs
imul
jno
pop
out
xchg
stos
cli
jb
daa
movs
jbe
cmps
in
aaa
call
out
ja
shl
and
sldt
sub
ret
in
cdq
lahf
jb
push
cmps
ds
mov
push
jl
pop
retf
pop
inc
pop
pop
xchg
xchg
daa
sbb
js
fwait
xor
inc
aaa
adc
cmps
stc
push
imul
lds
fdiv
pop
fdivr
and
test
inc
(bad)
pop
cmps
pop
fcmove
or
xchg
xlat
xchg
push
xor
xchg
les
retf
xor
rol
mov
addr16
xchg
dec
retf
dec
in
loopne
repz
pusha
pop
fcomp
mov
fcomp
in
push
bound
pop
mov
push
jb
jmp
sub
stc
icebp
fmul
jecxz
adc
and
mov
and
push
mov
mov
fild
iret
mov
adc
not
(bad)
mov
sub
push
mov
iret
sub
lock
das
pop
inc
(bad)
in
arpl
cmp
dec
and
jnp
cmps
out
dec
jnp
sbb
mov
sbb
jge
cmp
xchg
push
mov
inc
pop
mov
aam
movs
std
ds
lods
cdq
test
mov
imul
and
outs
cmc
shr
cmp
in
sub
daa
jg
and
dec
push
or
stos
fdivr
pop
mov
mov
pushf
cwde
xor
aam
in
cdq
in
push
in
ds
mov
dec
push
outs
ror
into
sub
jge
out
jns
sub
sar
int3
stos
fild
xchg
and
sub
cmp
sub
je
js
test
jns
jge
pop
test
outs
xchg
fdivr
sbb
push
inc
push
jb
sub
push
mov
sub
mov
sub
fistp
fst
and
clc
adc
add
mov
rcl
lds
sbb
mov
fist
pop
mov
xor
mov
stos
dec
pop
cmp
rcr
cmps
out
pop
gs
push
mov
pop
pop
daa
or
aas
dec
xor
arpl
xchg
push
jnp
cmp
ror
pop
addr16
mov
or
(bad)
and
inc
test
lea
sbb
or
dec
mov
out
sub
fs
or
sub
inc
lods
sub
xor
ins
xchg
enter
std
mov
pop
sub
pop
or
jmp
in
pop
(bad)
(bad)
rsqrtps
lods
das
and
cmp
sub
sar
mov
inc
mov
or
outs
pop
xchg
jle
(bad)
cdq
or
cli
mov
inc
adc
inc
pusha
clc
jae
and
or
pop
sbb
mov
adc
xor
fimul
cs
dec
inc
cmps
and
mov
cs
in
stc
cmp
push
daa
push
fisttp
jno
icebp
sti
inc
push
ja
xchg
lods
xor
jae
into
sub
cdq
dec
jp
mov
into
push
into
bswap
outs
fcomp
retf
mul
sub
adc
cmps
call
movs
and
mov
mov
leave
pop
mov
mov
(bad)
pop
mov
xor
out
and
sub
outs
add
into
xchg
xchg
sbb
(bad)
test
xlat
enter
jle
jecxz
or
mov
and
jmp
(bad)
mov
imul
dec
sub
scas
sub
or
out
adc
inc
mov
push
push
pop
retf
cmp
repz
add
sub
xchg
cmc
push
test
mov
inc
std
xchg
shl
and
lahf
and
sbb
adc
mov
das
inc
sahf
xchg
push
jmp
lds
dec
pop
in
loope
(bad)
cmp
sbb
mov
xchg
lods
xor
pop
sub
mov
inc
sub
push
lock
and
add
sbb
pushw
ja
xchg
loope
das
cwde
add
es
repnz
pusha
mov
add
mov
popf
push
jle
adc
ins
dec
int
xchg
mov
pop
jnp
add
inc
sbb
xor
int3
aam
xlat
dec
repnz
popa
mov
dec
fwait
xor
sbb
test
repz
mov
sti
into
gs
adc
cmps
cmc
les
xor
sbb
and
dec
daa
call
and
icebp
das
fidiv
mov
outs
lock
stos
xchg
or
test
cmps
pop
mov
shl
add
imul
cmp
cmc
xor
lods
sbb
fidivr
in
pop
jp
sbb
inc
add
adc
inc
mov
dec
push
iret
movs
mov
jne
xor
xor
jmp
sbb
imul
leave
mov
ds
inc
jmp
mov
sbb
dec
xlat
push
and
adc
push
daa
cwde
xor
and
clc
(bad)
fwait
pop
rcl
outs
pop
shl
fdiv
sub
stos
std
pushf
fsubr
add
push
fldcw
mov
cmp
mov
dec
xlat
add
iret
jg
xchg
nop
daa
movs
mov
dec
sub
imul
push
add
mov
movs
xchg
cmp
outs
iret
mov
adc
popf
mov
or
test
pop
add
add
xlat
jmp
jecxz
dec
jne
xchg
push
les
lahf
es
xor
push
ror
shr
add
cmc
ins
aas
(bad)
fwait
outs
add
pop
cmc
mov
(bad)
outs
hlt
pop
sub
popa
xlat
jns
jmp
out
jno
jb
shl
daa
pop
scas
mov
xor
inc
or
lods
icebp
dec
cmp
xchg
or
aam
adc
mov
rol
mov
push
into
loope
jb
(bad)
movs
daa
inc
lods
sar
out
aas
xlat
test
dec
bound
fimul
jp
pop
push
xor
sti
sbb
pop
jns
dec
or
or
scas
int
mov
jp
test
call
or
out
pop
jge
xor
popf
mov
add
add
daa
shr
cmps
and
outs
fst
nop
aas
mov
xlat
loopne
sub
gs
pop
shr
xlat
cmp
stos
mov
out
jae
dec
adc
aaa
inc
cdq
lock
call
cmp
fwait
ins
(bad)
fadd
aaa
xor
pmaxsw
xor
out
add
in
mov
or
adc
pushf
nop
fisubr
js
fs
mov
push
fild
xor
out
mov
aam
cs
pop
dec
xor
int3
iret
and
mov
cmp
(bad)
inc
div
jmp
inc
fild
mov
int
gs
and
dec
(bad)
stos
mov
popa
(bad)
(bad)
cs
mov
sub
fmul
pop
test
jecxz
out
nop
or
popf
mov
popa
inc
pop
inc
push
test
jl
lahf
jg
rcl
pop
jnp
or
shr
fmulp
call
xchg
rol
fisubr
add
retf
outs
fmul
xchg
retf
add
addr16
xchg
adc
add
in
xchg
pushf
scas
jg
jle
clc
mov
pop
and
push
imul
push
and
outs
in
and
inc
jno
mov
fpatan
and
enter
mov
jne
popa
(bad)
adc
jne
sub
pop
xor
jo
mov
push
add
or
adc
scas
movs
jp
shr
jns
rol
or
mov
mov
movs
mov
inc
sub
ret
lahf
mov
adc
aam
add
add
xor
cwde
loope
mov
rol
sbb
xchg
rcr
sbb
mov
pop
mov
mov
jno
je
inc
adc
outs
mov
lds
jle
dec
cwde
pop
push
and
mov
sub
mov
push
pop
sub
mov
(bad)
lods
jb
lahf
fcom
(bad)
adc
xor
and
xchg
shr
mov
dec
fwait
out
pop
adc
or
adc
xor
call
push
adc
jne
lea
mov
icebp
aaa
jge
fdiv
cmp
sbb
inc
adc
clc
adc
int3
mov
ins
pop
pop
cmp
sub
push
loopne
and
shl
or
sub
retf
and
sub
jle
push
sti
test
and
test
xor
mov
inc
jb
push
xor
repnz
pop
sub
in
(bad)
jmp
mov
sar
nop
xchg
mov
test
mov
sbb
lods
repz
aas
lods
dec
aad
in
in
shr
mov
jns
pop
iret
les
hlt
sub
adc
pop
js
lds
sahf
(bad)
rol
mov
mov
mov
push
test
fidivr
iret
inc
outs
mov
dec
mov
inc
mov
fadd
and
ins
sahf
add
xor
aaa
retf
loopne
jbe
ror
lods
cmp
jo
jp
cmc
(bad)
push
mov
(bad)
cmps
and
cmps
sbb
pop
mov
add
ins
cmps
cmps
bound
jno
or
push
stc
daa
call
loope
push
test
xor
hlt
bound
leave
adc
arpl
in
xor
lods
pop
imul
adc
out
es
adc
cmp
in
xchg
stos
ja
jno
mov
sub
mov
rol
repnz
les
cdq
int
dec
std
imul
imul
add
cmp
sti
xor
lods
push
jbe
push
repnz
data16
call
gs
ficom
retf
clc
test
cmp
pop
divps
ret
mov
inc
int
fisub
jmp
adc
cmp
jge
xor
push
mov
int3
js
hlt
in
push
ror
cmp
or
mov
(bad)
xor
jo
push
shl
pop
mov
mov
xchg
aam
test
push
cli
push
push
mov
pop
push
iret
fs
fisttp
lahf
jne
repz
sub
push
pop
or
sbb
add
std
fsub
outs
in
hlt
push
xchg
sbb
sti
push
(bad)
mov
ins
dec
mov
dec
arpl
int
out
cmc
sub
in
push
or
fwait
loopne
es
ins
mov
inc
jp
loope
mov
fwait
call
mov
add
jb
fdivrp
out
lea
ins
mov
jmp
sar
jecxz
(bad)
mov
sub
icebp
xchg
scas
dec
or
pop
cmp
jmp
pushf
mov
nop
cli
sub
inc
hlt
xchg
cwde
cs
or
outs
and
cmc
call
retf
adc
or
imul
mov
(bad)
into
inc
pminub
sbb
push
imul
push
jp
ror
pop
xor
mov
clc
inc
inc
push
(bad)
sbb
cmps
ror
pop
fbstp
or
jg
ror
aaa
repnz
mov
inc
and
sub
sti
adc
cdq
fmul
pop
cwde
test
mov
xchg
push
in
cmp
cli
les
jle
in
jle
cmps
(bad)
xlat
mov
cmps
fcmove
xlat
sbb
pop
jno
ins
jbe
ret
loop
pop
loope
movs
pusha
sbb
aam
jmp
sti
add
push
ds
pop
cmp
fnstsw
call
rol
outs
cmc
aas
movs
scas
xchg
mov
hlt
int
pop
lods
test
loopne
push
ins
rol
xor
pop
adc
pusha
retf
mov
and
jecxz
cmp
lds
push
sub
fisttp
pop
ficomp
into
cmp
sub
cmp
je
sub
(bad)
lods
or
test
sar
popa
mov
fdiv
xchg
out
outs
cmp
aam
add
or
retf
movs
inc
and
(bad)
cs
icebp
adc
fwait
mov
and
cmp
ds
cmp
ret
clc
jo
out
leave
jnp
jnp
add
push
jecxz
loopne
ds
int
jno
loop
cwde
(bad)
jnp
pop
loope
fcmovnbe
dec
fistp
mov
sbb
bound
and
jns
cmps
push
stc
inc
pop
ss
ret
rcl
adc
fs
xchg
fimul
ret
mov
test
xchg
vunpckhps
mov
fsub
aas
repz
sar
dec
xor
jmp
cdq
add
mov
inc
jae
push
les
neg
arpl
inc
mov
daa
and
mov
je
into
or
hlt
scas
inc
shl
mov
ja
xchg
jne
inc
jg
mov
repz
xchg
aam
addr16
repz
jge
push
xor
lock
(bad)
std
mov
and
jo
inc
mov
mov
ret
pop
std
add
das
jge
xchg
in
mov
pusha
repnz
(bad)
loop
test
jae
mov
cdq
xor
xlat
mov
xor
inc
out
inc
rcl
(bad)
push
ja
lock
mov
sbb
dec
adc
and
push
dec
pop
out
sub
cmp
cmp
adc
in
test
call
aas
outs
sub
out
adc
add
data16
push
loopne
xor
jb
int3
push
adc
ins
mov
or
ds
imul
jp
test
stos
xchg
jo
ins
pushf
add
xor
enter
add
shr
shl
mov
cmp
pop
icebp
das
in
call
gs
cmp
jo
inc
xchg
mov
sub
push
cld
popa
xor
xchg
ret
pop
aad
ins
jmp
inc
add
scas
aaa
add
push
ins
jge
rol
outs
or
jmp
cli
data16
stc
imul
add
pop
add
xchg
cs
jecxz
jne
jno
or
sar
mov
mov
and
fdivr
fisub
or
and
aam
mov
test
fbstp
jnp
push
lock
jbe
scas
retw
mov
xchg
xor
or
pop
cmp
xchg
push
sbb
pop
or
icebp
push
push
mov
adc
sub
and
aad
nop
mov
mov
adc
xchg
fidivr
aam
lahf
movs
aam
dec
out
push
dec
or
bound
fsubr
xor
push
in
and
mov
ret
in
test
adc
movs
mov
add
test
cmp
test
xor
lea
test
(bad)
cmovne
addr16
fdiv
pop
aaa
cmp
scas
mov
popf
add
dec
dec
push
popf
adc
inc
pop
(bad)
cmc
mov
dec
js
lds
outs
iret
loopne
and
outs
ins
jb
dec
jne
push
jnp
iret
js
(bad)
dec
push
int3
imul
xchg
and
faddp
adc
or
cmp
push
cmc
jge
retf
sub
outs
mov
retf
mov
sub
ror
jmp
aas
add
dec
retf
or
int3
fst
sti
stos
pop
aam
and
mov
dec
loop
adc
iret
jno
test
mov
(bad)
pusha
call
daa
stos
xor
dec
xlat
adc
sub
in
(bad)
fdivr
bound
add
sbb
xchg
mov
shl
xor
call
jg
addr16
jbe
(bad)
call
sub
sbb
ss
repz
or
mov
movs
ss
movs
sbb
inc
mov
xor
outs
rcr
cli
hlt
xor
dec
loope
addr16
je
jecxz
icebp
mul
scas
shr
iret
push
mov
and
cli
pushf
ja
jmp
xchg
test
add
leave
aad
sti
dec
es
add
mov
add
jecxz
ss
leave
dec
aad
xchg
sub
xor
(bad)
and
cmp
add
jp
dec
fild
fisubr
and
push
lods
call
fidivr
int3
leave
aam
pop
adc
push
cmp
daa
jne
mov
mov
lods
fst
pushf
jp
sbb
rol
movs
inc
sbb
pushf
sub
mov
icebp
sar
or
in
icebp
lea
push
and
jp
and
sbb
in
ins
sahf
repz
aad
js
pusha
das
cmc
inc
xchg
ins
pop
mov
fld
mov
scas
shl
jle
lods
ret
aaa
scas
jne
inc
cmp
(bad)
(bad)
(bad)
lods
ffreep
mov
inc
shr
pushf
addr16
fst
popa
sbb
loop
fsubr
bound
jbe
push
scas
xchg
gs
movs
sbb
push
add
xchg
xchg
or
test
or
mov
test
xor
fidiv
or
dec
js
mov
lahf
adc
mov
retf
sub
pop
inc
or
lods
pop
(bad)
pusha
sbb
mov
inc
jae
adc
dec
xchg
out
xchg
xor
inc
rcl
fwait
jecxz
xchg
out
rol
sbb
push
xchg
or
cmp
std
in
push
ficomp
fadd
jmp
(bad)
sub
outs
ror
cmp
sub
inc
stos
popf
or
mov
push
ins
cmc
dec
xor
mov
and
add
cld
movs
js
mov
in
sahf
sahf
push
inc
aas
jae
in
jo
loopne
dec
mov
clc
mov
jl
cmc
cmp
dec
popa
out
fld
or
add
ins
xchg
xchg
mov
mov
xor
scas
add
into
cmp
lahf
ror
sar
jmp
imul
(bad)
jnp
loopne
cmps
inc
adc
push
xor
fst
push
inc
icebp
jge
(bad)
repnz
pusha
mov
scas
(bad)
sti
sbb
cmp
out
stc
lods
loop
in
shl
in
fist
ins
mov
hlt
cmp
mov
cli
mov
outs
sub
stos
in
fcmovnu
adc
pop
sub
add
add
adc
xchg
gs
imul
sub
out
xchg
hlt
jg
dec
xchg
int
lock
ins
sbb
das
stos
sbb
mov
mov
mov
adc
call
xor
mov
(bad)
jae
push
cmp
mov
(bad)
pop
xchg
cdq
out
sbb
inc
push
mov
loopne
mov
int
xlat
bnd
test
pusha
mov
mov
add
mov
stos
das
add
mov
mov
std
and
test
mov
jno
mov
mov
jb
jle
sub
add
inc
pop
xchg
(bad)
cmp
imul
cmp
stos
pop
push
ret
fidiv
and
scas
adc
xor
in
adc
sbb
div
or
push
sub
mov
sahf
movs
push
imul
mov
out
mov
pop
out
loop
inc
jp
push
mov
out
nop
sub
xchg
adc
ss
pop
(bad)
push
mov
dec
mov
mov
retf
and
push
dec
repnz
xchg
lea
or
gs
jge
gs
add
mov
cmps
callw
retf
or
xor
mov
jo
adc
out
sbb
mov
inc
(bad)
sbb
push
pop
xchg
sbb
push
retf
inc
pop
lods
fld
int3
jl
cmps
xchg
or
enter
pop
dec
repz
fmul
jno
stc
sub
inc
xlat
fstp
mov
std
and
pop
sbb
call
add
mov
arpl
mov
pop
aam
adc
(bad)
out
fnstcw
or
outs
or
add
jp
leave
adc
retf
mov
popa
fimul
inc
out
retf
inc
adc
rcr
pop
outs
push
into
inc
sbb
in
jns
cmp
push
hlt
or
cmc
popa
out
std
jl
and
cmp
sbb
or
fild
push
and
push
fiadd
jo
aas
dec
idiv
mov
aas
fcomp
xor
mov
cmps
and
push
pop
dec
call
fcom
mul
std
sbb
sub
mov
out
and
cmp
fisubr
push
cld
cmp
stc
mov
fist
das
cmp
lea
fisubr
mov
mov
cdq
test
fidiv
xchg
jp
das
sub
mov
jecxz
xchg
fs
mov
repnz
jnp
icebp
and
sub
enter
adc
sub
fwait
test
pop
mov
xchg
aas
or
rcl
inc
lahf
in
jbe
xchg
movs
inc
jne
scas
scas
push
adc
ins
fsubr
rcl
cmp
sbb
xchg
aaa
mov
in
ins
pop
cmp
and
es
xchg
loope
and
mov
mov
mov
sbb
out
inc
fstp
pop
out
mov
rol
sahf
xor
dec
scas
push
cli
cmps
dec
push
jp
pop
xchg
adc
mov
repnz
mov
pop
mov
jecxz
xchg
sub
sbb
jmp
popa
int3
sub
aaa
xor
adc
mov
(bad)
inc
sub
call
stos
sbb
fidivr
or
or
jge
xlat
or
xchg
mov
push
mov
call
fwait
ror
ins
add
adc
mov
xor
push
xor
das
jae
cmp
and
mov
push
fsubrp
push
enter
sub
pop
je
js
xchg
in
test
lock
jnp
data16
lahf
imul
push
xchg
mov
retf
xchg
cdq
fld
jno
pop
xor
lds
call
arpl
rcr
(bad)
jp
shl
cmp
lahf
mov
ss
lea
mov
aam
stc
pushf
sbb
push
pop
popa
mov
inc
inc
lock
mov
adc
jmp
mov
mov
pop
ss
mov
or
repz
adc
loop
stos
out
add
xchg
sub
or
xchg
or
cwde
ret
sti
fucomi
jmp
inc
cmp
mov
cmc
and
rcr
cli
cmp
enter
movs
jle
mov
jle
jne
push
jnp
(bad)
pushf
cmp
mov
mov
jnp
jecxz
cmps
xor
jp
mov
aas
arpl
or
xchg
sub
outs
jnp
push
cli
imul
add
push
jge
call
push
push
jns
add
sahf
cmp
into
std
mov
jecxz
add
out
push
je
std
push
sbb
push
outs
pushf
daa
xchg
ss
movs
pop
arpl
(bad)
jmp
mov
(bad)
mov
nop
mov
jmp
loope
ins
mov
pop
rol
pop
data16
pop
scas
(bad)
call
call
das
xor
fstp
mov
xchg
xchg
das
adc
and
ja
rol
fs
jo
icebp
(bad)
mov
sbb
cmp
xchg
push
push
cld
test
push
inc
outs
imul
mov
inc
pop
retf
enter
dec
nop
push
adc
mov
stos
in
mov
push
int
inc
cmp
cmp
push
arpl
push
inc
xchg
add
sub
popf
mov
fsubr
inc
fadd
add
scas
lods
cmp
data16
test
test
xlat
and
in
xor
add
pop
mov
icebp
adc
gs
jecxz
xchg
les
les
imul
mov
int3
arpl
jmp
jmp
sbb
inc
fldpi
hlt
mov
xor
push
or
inc
sar
shl
arpl
fsubr
mov
pop
inc
fnstcw
in
mov
loopne
xor
and
inc
dec
add
jne
push
pop
fisubr
jo
jns
sub
call
je
pop
into
test
js
inc
lock
aam
jg
xchg
mov
dec
int3
fadd
loop
data16
aam
sub
sahf
retf
es
push
add
ja
push
cs
pop
pop
xor
ficomp
inc
sar
addr16
stos
push
mov
paddusb
jecxz
cli
dec
mov
or
in
(bad)
push
or
or
ror
sbb
cmp
cmp
push
fs
add
(bad)
mov
setg
data16
ret
fcomp
cmp
retf
push
outs
jmp
lea
bndstx
clc
test
ds
loopne
pop
push
jge
out
jecxz
pop
push
mov
push
ror
jmp
mov
int
call
test
or
mov
loop
jne
(bad)
mov
ret
dec
jmp
das
cdq
daa
fidivr
(bad)
(bad)
out
cmps
in
or
leave
mov
call
cmp
cmp
or
push
sub
xchg
ins
xchg
push
sub
xchg
adc
cld
jbe
shl
pop
mov
xor
pop
xchg
ja
cmps
jnp
pop
pop
mov
xor
xchg
ja
aad
std
aad
mov
imul
test
add
inc
mov
mov
imul
iret
push
sub
iret
dec
dec
fdivr
sbb
outs
sbb
jge
jle
mov
lods
adc
loop
and
and
imul
lods
push
(bad)
addr16
ds
sub
and
inc
add
jno
jnp
fadd
setp
dec
sub
ja
mov
mov
inc
fsubr
(bad)
mov
and
add
mov
aad
daa
in
mov
dec
and
js
inc
(bad)
sub
xchg
stc
jmp
(bad)
xor
mov
dec
pop
jge
call
jno
xchg
lahf
jge
mov
jecxz
std
push
or
sub
daa
rcr
mov
lock
mov
dec
bound
and
test
jno
or
push
push
cwde
mov
cli
in
inc
iret
mov
push
mov
fisubr
sbb
pusha
inc
out
mov
pop
retf
addr16
aad
push
mov
jp
dec
aam
push
add
aaa
inc
cmp
shr
cmps
outs
mov
iret
push
xchg
(bad)
jmp
lods
(bad)
adc
jp
and
jmp
pop
lods
cmp
inc
and
mov
outs
popa
sbb
inc
xchg
out
lods
vmread
inc
dec
adc
(bad)
inc
mov
test
jbe
inc
das
and
fld
jb
jle
jns
pushf
xchg
leave
(bad)
and
mov
pop
verw
(bad)
pop
popf
sub
fiadd
lods
mov
scas
shr
or
loopne
fisub
fs
gs
leave
test
mov
sub
mov
mov
lods
imul
add
mov
les
pushf
ror
sbb
fnstenv
cwde
ffree
je
mov
add
(bad)
stos
scas
mov
test
mov
mov
in
push
sub
mov
dec
imul
xlat
cdq
sub
je
fmul
push
pop
or
mov
add
or
int3
das
mov
xchg
clc
jmp
mov
mov
fdivr
push
je
nop
mov
add
stos
xchg
movups
ficomp
in
sub
loope
les
pusha
aad
in
mul
sub
xchg
jecxz
ins
in
xor
imul
mov
jb
sub
rcr
mov
fist
pop
jp
inc
icebp
sbb
add
sub
jnp
enter
mov
movs
rol
test
push
iret
jae
mov
mov
imul
xchg
mov
and
sbb
aas
push
dec
je
jmp
sub
sub
out
or
push
mov
(bad)
push
sub
mul
(bad)
cmp
pop
inc
xchg
(bad)
xchg
xor
aad
xchg
mov
push
(bad)
mov
xor
movs
mov
inc
mov
(bad)
pop
cmps
inc
mov
xchg
(bad)
mov
fwait
cmp
in
mov
push
mov
xor
push
xor
scas
push
mov
sbb
add
test
inc
pop
mov
jg
and
(bad)
in
rcl
test
jmp
cmc
jecxz
pop
sub
mov
push
je
shr
pusha
push
popa
jmp
fcom
in
jle
mov
imul
pop
loopne
ja
push
cmp
shr
test
inc
jl
call
test
dec
fcom
inc
mov
sub
repz
icebp
popa
dec
or
mov
inc
pop
mov
popa
mov
adc
push
(bad)
outs
sub
outs
aas
pop
xchg
and
mov
cmps
pop
cmp
int3
cmp
out
xor
popf
inc
popf
xchg
rol
popa
cmps
xchg
out
push
call
int3
sbb
adc
je
fst
fnstsw
and
cdq
popa
or
rol
leave
(bad)
scas
in
mov
mov
sub
ds
rcr
jmp
data16
test
ins
xor
pop
dec
ins
or
bound
push
ja
call
scas
stc
pop
(bad)
int3
xchg
into
pop
dec
arpl
call
imul
out
or
xchg
inc
inc
cmovns
pop
inc
cmp
ss
push
movs
mov
mov
mov
jo
cld
fisttp
push
jo
pop
mov
outs
dec
pop
scas
inc
sar
fistp
fnclex
fbstp
stos
push
pop
or
sahf
(bad)
pop
rcl
shr
sbb
jp
scas
mov
inc
dec
cmp
mov
outs
inc
fst
mov
cmps
push
(bad)
ror
sbb
and
outs
rol
div
dec
call
stos
loopne
sar
pop
jmp
and
xor
sti
in
ficom
xor
pushf
cmps
xor
lock
pop
out
fwait
add
sbb
jb
(bad)
sbb
push
retf
sbb
test
icebp
movs
lahf
cld
clc
daa
(bad)
mov
xor
retf
arpl
sub
jg
adc
ror
test
call
lds
mov
stos
inc
add
fiadd
in
mov
fldenv
bound
js
mov
addr16
retf
(bad)
xchg
loop
jge
loop
mov
mov
xchg
fild
enter
les
inc
(bad)
cli
add
mov
dec
ins
mov
sbb
sbb
adc
ja
ret
imul
mov
dec
mov
pop
pop
add
cmp
xchg
xchg
popa
push
sbb
push
call
cmp
ins
mov
ins
mov
push
outs
mov
test
inc
sub
inc
pop
js
mov
enter
ds
jno
mov
leave
or
sub
(bad)
pusha
imul
cmps
imul
adc
jmp
dec
jno
mov
mov
or
push
in
js
pop
enter
add
push
or
fs
lods
inc
dec
cs
into
push
cmp
(bad)
mov
or
push
jle
out
xor
les
pop
xor
nop
ror
test
pop
ins
jne
mov
mov
aad
div
xchg
(bad)
test
jnp
jae
mov
mov
leave
int
jmp
or
aad
inc
push
mov
pop
and
jg
add
sub
mov
sub
sub
xchg
arpl
mov
int
iret
pop
or
xchg
xor
fsub
mov
add
sahf
jp
jecxz
push
(bad)
in
lea
cmps
std
mov
gs
mov
arpl
or
in
(bad)
mov
test
cmps
mov
or
mov
fdiv
add
retf
cs
sub
shl
jb
loopne
jp
retf
dec
movs
xchg
int
sub
sub
test
repnz
int
or
pop
and
mov
aad
push
fs
push
xor
pop
ret
icebp
(bad)
bnd
mov
lahf
and
movs
sub
mov
pop
fadd
push
xchg
sub
dec
xchg
lahf
mov
jne
std
sub
test
cdq
cmp
jmp
jae
mov
bound
ror
clc
lock
mov
inc
or
cli
out
inc
push
push
inc
sbb
aam
xor
push
adc
imul
jmp
(bad)
cmp
sbb
rol
ror
cmc
adc
in
xor
popa
cmps
jne
jno
lods
jnp
ins
loop
stc
cwde
sub
enter
or
pop
ja
test
mov
imul
ins
repnz
retf
aas
push
jbe
dec
pop
cmp
inc
or
lahf
lock
push
or
mov
mov
fwait
add
inc
pop
mov
inc
sbb
mov
sti
mov
and
add
icebp
mov
mov
or
cmps
ss
inc
lock
clc
push
sub
xor
mov
rcr
mov
or
add
fadd
loop
je
xlat
push
jecxz
mov
jmp
xchg
into
cs
loopne
xchg
pop
fist
out
loope
jmp
push
pop
inc
inc
jo
pop
push
jbe
adc
pushf
mov
xchg
xchg
jno
xchg
pop
xchg
rol
in
(bad)
out
adc
pop
add
sub
mov
arpl
add
add
js
xor
inc
aam
jge
xchg
or
out
push
call
cmc
iret
call
xchg
jbe
call
push
xor
inc
gs
loope
cmps
mov
push
cwde
cmp
and
jmp
in
or
inc
fsubr
sahf
mov
mov
or
aaa
xchg
js
pop
popf
cmps
out
jnp
inc
stc
xchg
sar
(bad)
out
arpl
mov
rol
jns
xor
mov
xlat
adc
fmulp
or
cwde
push
in
mov
mov
mov
ficomp
movs
jnp
(bad)
and
or
adc
fist
imul
pusha
push
and
dec
push
xor
mov
dec
pop
repz
aas
cmp
fld
es
cmp
mov
add
ret
(bad)
mov
(bad)
mov
jbe
jne
xchg
fnstsw
aad
and
aam
pop
mov
push
add
lods
stos
xchg
xchg
push
test
pop
and
mov
in
repnz
in
sbb
sub
ret
jmp
jecxz
mov
retf
xor
ins
push
and
xor
(bad)
xor
(bad)
jge
fst
retf
popa
sbb
sbb
lds
dec
mov
lods
sub
jmp
imul
xlat
addr16
push
dec
dec
pop
xor
nop
xchg
lods
inc
push
jl
push
out
sar
xchg
mov
push
scas
xor
mov
ss
sub
mov
loopne
popf
call
cmp
in
mov
dec
arpl
xchg
mov
sub
sbb
hlt
ja
mov
int3
idiv
inc
(bad)
mov
xor
push
xchg
or
jmp
cmp
adc
inc
pop
scas
mov
jmp
lods
pop
inc
stc
fisubr
xchg
or
(bad)
in
fcomip
and
jecxz
jecxz
jge
in
and
adc
mov
leave
lods
inc
ins
(bad)
add
xchg
xchg
jbe
scas
inc
xor
mov
mov
fs
cmp
jmp
jae
cmp
fwait
(bad)
or
imul
mov
xor
jne
mov
fadd
repz
cmp
sahf
(bad)
mov
or
in
cmps
and
dec
jecxz
jmp
adc
out
js
loopne
push
xchg
push
xor
xlat
xchg
pusha
fisub
pushf
pop
je
cdq
cmps
aaa
jne
jp
gs
ret
jmp
mov
test
lock
mov
adc
add
fcom
adc
leave
imul
cmp
(bad)
xchg
aad
sbb
mov
pop
idiv
(bad)
test
(bad)
mul
fwait
int
cwde
dec
mov
add
jle
ret
call
mov
stos
dec
add
jae
pop
fistp
(bad)
xor
xchg
jmp
or
sub
xchg
pop
aam
mov
(bad)
out
lahf
loope
mov
paddusb
adc
pop
(bad)
in
rol
repz
enter
shr
xlat
mov
push
pop
mov
jmp
stos
cld
neg
sahf
xor
out
xor
(bad)
and
add
pop
sbb
add
retf
xlat
fs
sahf
out
mov
add
adc
out
movs
dec
lea
xchg
cmp
aas
je
cmp
fwait
stc
rol
lods
mov
inc
fwait
or
mov
jg
std
xor
mov
inc
fs
call
mov
sti
cmc
adc
xchg
aaa
pmulhuw
(bad)
ja
pop
ret
repz
sbb
xchg
sbb
mov
rcr
or
jmp
das
ficomp
popf
mov
mov
add
sub
mov
xchg
ficom
cmp
cmc
std
xor
shl
fistp
movs
loopne
xchg
call
repz
idiv
retf
mov
cwde
jge
mov
cmp
daa
dec
retf
shl
mov
gs
add
sti
adc
js
ins
jmp
mov
mov
dec
sbb
cmp
push
push
cmp
retf
and
sub
pusha
cld
and
stos
movs
lods
fcmovu
push
ins
ins
stos
adc
lods
cmps
rcl
(bad)
rol
(bad)
fidivr
shl
push
sbb
xor
rcl
xchg
inc
gs
(bad)
leave
ss
dec
stos
mov
ins
jle
std
add
cld
mov
dec
mov
or
shr
and
pop
popa
mov
nop
call
ret
dec
add
loop
push
inc
into
mov
xchg
inc
inc
in
mov
out
adc
outs
ror
mov
jg
push
sub
test
jb
mov
and
dec
dec
and
dec
imul
lds
jnp
and
(bad)
sbb
outs
outs
jo
sbb
ss
jmp
cmps
xchg
retf
gs
jecxz
or
cmps
jmp
iret
outs
js
ret
jno
mov
mov
js
(bad)
jmp
jnp
cli
ret
loope
inc
mov
cmp
into
mov
pushf
pop
push
push
pusha
mov
push
fld
sub
and
lock
addr16
push
pop
adc
imul
xor
out
lds
dec
add
test
dec
push
(bad)
dec
bound
xchg
lock
mov
(bad)
fsub
inc
sub
or
dec
mov
and
and
mov
mov
aad
test
pushf
jmp
xchg
add
pop
out
jp
cmp
in
and
(bad)
stc
cmc
dec
dec
in
dec
push
xchg
and
test
mov
push
loopne
mov
fadd
pop
std
push
dec
xchg
mov
loopne
add
mov
adc
jmp
div
mov
mov
sbb
add
adc
mul
sbb
imul
cmp
cs
test
fild
inc
inc
cmc
ror
sbb
(bad)
lods
hlt
mov
jmp
repz
call
pop
outs
iret
sbb
(bad)
arpl
gs
cmc
cmp
sub
ds
cdq
adc
push
mov
pop
jbe
jbe
add
(bad)
movs
mov
mov
out
mov
sbb
das
test
cmp
(bad)
iret
js
or
and
pop
adc
inc
push
(bad)
lea
mov
cmp
add
inc
cld
int
iret
cmps
mov
fs
mov
call
shr
mov
cmp
inc
cmp
xor
(bad)
fst
dec
ret
imul
hlt
ins
mov
std
push
int3
adc
sub
leave
imul
(bad)
sbb
mov
inc
fs
push
jecxz
jno
xor
es
push
cmp
sbb
cs
push
pop
mov
cmps
pop
(bad)
or
sbb
jge
and
push
jge
repz
daa
(bad)
dec
adc
in
pusha
mov
outs
fwait
sbb
aas
das
stc
loopne
sub
test
sub
das
sub
or
ins
aas
cld
mov
inc
xor
jecxz
div
test
enter
or
repz
jo
and
js
mov
push
dec
fs
cmp
inc
mov
and
test
enter
sub
sbb
sub
inc
(bad)
aam
in
(bad)
iret
adc
fs
xchg
(bad)
cmp
push
jl
xor
cmps
cmp
mov
icebp
aaa
push
loop
icebp
imul
adc
cli
mov
inc
pop
mov
pushw
inc
xchg
dec
leave
sub
inc
xchg
lahf
dec
aas
add
sbb
jns
into
lods
add
fwait
lahf
xor
shl
shl
inc
push
xchg
fs
jge
cs
push
test
lock
and
jo
jg
sub
jp
sub
mov
cmc
cmp
sub
dec
in
add
xchg
jl
shl
and
dec
cmp
(bad)
sub
ja
rcl
xchg
int
mov
jmp
dec
repz
jns
gs
jge
adc
sbb
xchg
jae
and
xchg
into
pop
mov
jbe
ret
and
in
jle
jo
repnz
das
push
pop
pop
inc
iret
sbb
sub
data16
inc
ds
enter
imul
sub
dec
sub
sub
dec
jnp
lods
or
jmp
add
(bad)
or
ja
loop
mov
popf
ins
in
push
jb
push
movs
std
ins
fdiv
or
sbb
adc
and
cmp
xchg
xchg
lahf
push
cdq
xchg
dec
jmp
loop
mov
push
das
mov
mov
mov
mov
shl
mov
push
pop
imul
xor
stos
sahf
(bad)
ss
sbb
mov
push
sbb
push
and
mov
sub
aad
int
iret
or
sbb
mov
mov
inc
cdq
rep
int
xchg
xchg
outs
nop
push
xchg
lea
std
inc
ror
jp
out
add
ret
sbb
mov
mov
or
or
lock
mov
loopne
mov
stos
aam
dec
lock
adc
mov
rcl
sahf
nop
mov
loope
dec
out
add
test
loop
xor
sub
cwde
add
sbb
mov
mov
dec
(bad)
stos
outs
mov
js
cmp
cmps
xchg
dec
int3
ins
ins
inc
fild
pop
mov
cmp
adc
xor
sub
jne
rcr
pop
rol
mov
(bad)
sar
xor
retf
add
push
mov
aam
sbb
xchg
out
cmc
gs
mov
xchg
or
out
mov
sbb
lea
bound
outs
pop
bound
movs
push
sahf
data16
push
pop
adc
jmp
jecxz
arpl
fstp
and
inc
jbe
pusha
cmp
rol
jmp
fisub
psrlq
lahf
xor
push
je
pop
hlt
test
push
inc
xlat
adc
mov
adc
jne
mov
sub
mov
daa
aaa
shl
mov
in
pop
xchg
and
daa
mov
sub
pusha
push
movs
push
mov
cmps
inc
jle
inc
adc
mov
test
popf
jge
xchg
imul
inc
hlt
cmp
and
ret
fwait
in
stc
mov
inc
sahf
jge
or
repnz
jp
out
lods
rcr
aas
fs
cmp
test
jge
sbb
shr
xor
sbb
add
cmp
std
pop
lds
call
imul
mov
lahf
ja
retf
jbe
mov
lea
movs
sub
adc
in
fs
add
xchg
aas
sbb
inc
(bad)
jl
bound
xor
out
add
jb
jl
mov
fistp
mov
rcl
push
aaa
push
out
jbe
cwde
pop
call
push
or
xor
aaa
shl
xor
push
nop
xchg
mov
movs
lds
and
dec
lds
iret
movs
fsub
and
jl
fiadd
hlt
not
mov
in
cwde
mov
ins
in
sbb
cmp
sbb
movs
int3
sbb
in
mov
push
mov
xchg
test
inc
mov
loopne
shr
sbb
jle
cmp
xlat
jae
daa
bound
cmps
jb
out
loope
loopne
daa
inc
call
in
popf
cmps
and
(bad)
test
popf
add
je
push
sub
les
mov
mov
icebp
fdivr
or
ss
(bad)
(bad)
call
or
or
movs
xor
mov
(bad)
pop
movs
stc
sahf
cmp
jae
jnp
push
stc
or
das
sub
ss
push
sbb
repz
xchg
dec
mov
cmps
int
mov
sub
sysexit
aam
jnp
mov
imul
dec
inc
pusha
lahf
push
sbb
clc
inc
outs
retf
std
jmp
jmp
pop
dec
adc
dec
fmul
repz
mov
ret
xor
cmps
pop
xchg
pop
lock
push
cli
xchg
dec
mov
mov
push
dec
cmp
dec
xor
aad
ins
mov
xchg
mov
jo
adc
pushf
jno
xor
pusha
adc
pusha
fisttp
enter
outs
hlt
dec
add
sub
and
push
xor
sbb
shl
push
mov
movs
jmp
push
ror
out
jp
push
inc
addr16
add
jg
repz
loopne
and
push
in
je
xchg
adc
hlt
inc
push
rcr
pop
adc
fsub
jne
pop
fisubr
jb
test
ror
sub
or
outs
into
stc
mov
(bad)
into
lods
retf
test
arpl
stc
stc
out
inc
cli
pop
mov
mov
adc
loope
fs
xchg
ss
add
retf
inc
mov
arpl
mov
jae
adc
arpl
bound
dec
cmp
out
in
cdq
dec
(bad)
outs
pushf
jbe
add
lods
loope
and
(bad)
mov
mov
shl
jmp
mov
enter
jg
mov
ins
test
pop
inc
fldcw
les
popf
cmp
fldcw
in
test
adc
mov
dec
rcr
adc
or
sub
(bad)
aad
aad
push
pushf
test
gs
or
add
mov
and
(bad)
ins
loopne
leave
stos
xchg
ja
or
mov
add
jns
dec
dec
stos
push
xchg
outs
mov
jle
enter
add
sbb
into
clc
xor
repz
cmps
sbb
pop
xchg
les
dec
jmp
and
push
jmp
lods
call
jb
fcom
ror
fs
sbb
(bad)
fwait
mov
(bad)
xor
sub
xchg
mov
ins
inc
dec
push
mov
jp
dec
cmp
cmp
xor
push
scas
push
out
scas
jp
lds
sahf
sub
daa
rcl
ret
gs
int3
jnp
test
pop
mov
repnz
or
mov
jecxz
mov
sbb
pop
stc
xchg
pop
mov
out
out
lods
pop
repz
fsub
ror
mov
mov
adc
aas
xor
xchg
mov
(bad)
jle
(bad)
mov
mov
mov
jge
mov
add
adc
pop
(bad)
mov
movntps
repnz
jmp
fidiv
out
in
jne
mov
paddusb
cwde
adc
int
xchg
push
xor
psubsw
push
inc
cmp
lods
xchg
sub
add
out
int
fs
outs
push
push
addr16
loopne
mov
popa
adc
sub
out
push
pop
in
mov
sbb
sbb
xchg
jnp
inc
add
rcr
pop
inc
test
outs
fwait
sbb
cwde
cmp
pop
adc
xchg
inc
cmps
push
rol
clc
sub
sbb
cmps
jbe
imul
aaa
adc
stos
daa
add
je
pop
outs
cdq
sbb
aas
or
dec
or
aas
mov
cmp
(bad)
loop
xchg
nop
cmps
adc
ja
mov
cmp
fcomi
add
cmp
arpl
jnp
fistp
sub
das
loop
push
cld
and
jnp
mov
pusha
cmp
jno
test
or
into
cs
into
(bad)
(bad)
idiv
out
adc
addr16
sub
mov
in
push
push
cmps
cmp
dec
sbb
inc
mov
ja
xchg
mov
in
pusha
pop
call
(bad)
xor
popa
dec
data16
call
int
mov
cld
in
sbb
pop
or
loope
imul
loopne
and
push
mov
test
sbb
call
xchg
jg
std
inc
and
push
ffree
push
repnz
scas
add
xchg
cmp
add
dec
adc
xor
lods
dec
xlat
adc
hlt
push
ja
je
fbld
(bad)
loopne
mov
adc
cmp
sbb
js
sub
loop
les
jne
sub
sub
xlat
cmp
imul
test
mov
dec
push
std
in
push
stos
retf
into
out
enter
and
mov
inc
cmps
call
xchg
das
xchg
jmp
add
inc
sbb
(bad)
in
mov
pushf
mov
ror
shl
xor
enter
fwait
sub
adc
mov
inc
in
popf
pop
fisubr
dec
movsx
mov
add
xchg
push
dec
xchg
popf
push
jmp
in
mov
lods
out
mov
sbb
adc
out
and
sbb
je
mov
push
ror
pop
inc
inc
xchg
and
out
pop
les
pop
inc
loope
dec
adc
jl
jmp
add
js
cmp
or
push
jno
call
sbb
sbb
xchg
fadd
in
lods
fcmovnb
mov
push
idiv
and
paddq
mov
adc
mov
mov
aam
mov
mov
xor
push
mov
push
or
call
dec
push
ret
inc
jae
mov
push
sti
loopne
jmp
fs
cdq
fwait
dec
ins
cmp
aas
popf
inc
clc
fadd
dec
pusha
add
jbe
jmp
movs
add
xchg
iret
pop
daa
outs
cmp
mov
adc
and
sbb
lock
(bad)
ss
lods
cld
test
ret
push
adc
pop
add
faddp
call
inc
cdq
add
or
sub
push
loope
shr
inc
cmp
push
aad
hlt
iret
ds
mov
xchg
jp
add
sub
in
arpl
push
das
cmp
sbb
mov
sub
jbe
mov
movs
pop
call
add
inc
push
or
xchg
jle
sbb
mov
dec
xor
and
mov
ret
inc
push
push
mov
mov
adc
pop
pop
ds
ret
(bad)
push
or
repnz
mov
mov
push
add
mov
and
and
pop
lods
and
jb
adc
or
(bad)
xor
pop
leave
or
ins
xor
pop
cmp
dec
push
push
shl
loop
es
(bad)
xchg
cmp
cdq
lea
xor
sbb
push
cdq
mov
inc
cs
xor
ret
es
mov
retf
mov
cmps
lods
ret
cmp
lods
popa
xor
inc
pop
repz
test
movs
dec
sbb
int3
jle
daa
inc
shr
hlt
imul
pop
jmp
xor
inc
loope
push
cmp
xor
sub
cmps
dec
xor
dec
mov
mov
mov
push
arpl
fcom
mov
xchg
or
dec
int3
int3
sar
test
sbb
xor
xchg
dec
mov
dec
mov
adc
sbb
add
nop
dec
adc
stos
jmp
mov
lahf
lahf
push
mov
ins
inc
nop
enter
aaa
clc
iret
jo
popf
(bad)
fistp
mov
fldcw
pop
scas
lock
ds
push
gs
mov
push
scas
cmp
pop
not
sbb
stos
loop
rol
pushf
xchg
push
je
push
add
sbb
sbb
add
mov
popa
adc
sub
push
shr
aaa
aaa
popf
std
dec
repz
rol
adc
mov
pop
sbb
stc
fisttp
xor
mov
push
rcl
dec
and
dec
sub
data16
pop
(bad)
sub
push
mov
lds
scas
rol
cli
adc
rcr
cmc
aas
test
gs
adc
fs
in
add
jb
or
pmaxsw
iret
(bad)
cmp
ins
ret
adc
dec
jge
push
pop
mov
shld
rol
jne
jmp
idiv
cmp
mov
or
add
mov
jae
sbb
dec
imul
shr
sub
retf
add
jbe
popf
aam
xchg
into
lea
xchg
outs
or
inc
inc
inc
jp
ret
push
(bad)
das
xchg
bound
repz
push
pop
xchg
add
pop
mov
arpl
ds
jle
and
and
adc
pusha
(bad)
out
and
jne
jmp
jb
xor
(bad)
es
leave
inc
and
pop
cmp
gs
rcl
ficom
shr
aad
jg
jbe
fwait
jp
loope
and
sbb
pop
xor
and
inc
sar
xor
jg
jp
jb
movs
cmp
daa
mov
push
mov
push
push
cmp
jb
dec
inc
cmp
jno
enter
stos
fcmovnb
mov
jmp
clc
mov
xor
rcr
sub
cmp
ja
and
fsubr
or
xor
cmp
and
xor
out
push
aaa
cmp
loop
arpl
jl
out
(bad)
jmp
mov
fnstsw
mov
lods
cmp
fst
mov
scas
cmp
push
popf
jne
int
adc
or
dec
call
sti
add
fst
and
or
pop
jmp
sbb
or
cmp
jecxz
nop
cmp
mov
push
pop
jne
addr16
ins
xor
test
jmp
loop
icebp
cmp
stc
sub
dec
in
dec
add
add
inc
jbe
mov
adc
mov
sbb
mov
outs
push
lock
jnp
retf
cs
aaa
mov
mov
ret
mov
xor
mov
ss
and
inc
or
cmp
repnz
cmp
cmps
pusha
mov
mov
ficom
or
adc
xchg
mov
aad
cmc
mov
call
cmps
push
in
fcomp
ds
mov
jns
mov
sub
xlat
jp
cdq
outs
inc
popf
cwde
add
mov
xor
std
adc
inc
mov
or
pop
pop
dec
mov
stos
sub
scas
sahf
push
mov
dec
sbb
jge
ins
adc
mov
sub
or
add
jmp
sbb
loopne
cld
loop
ret
sbb
mov
movs
ins
pop
cmp
daa
or
les
int3
dec
xchg
hlt
dec
or
enter
pop
adc
pop
pop
adc
mov
adc
xchg
mov
push
mov
shl
aam
mov
stos
push
jg
lods
data16
sub
inc
sub
dec
or
xchg
pop
loopne
or
and
cmps
cli
aam
jmp
xor
xchg
and
and
lahf
push
dec
ror
stos
pop
sbb
jne
(bad)
mov
adc
nop
imul
fidivr
fs
cmp
xchg
int
out
repz
mov
push
push
and
ss
inc
out
cmp
sbb
dec
les
or
ja
pop
xchg
mov
repnz
push
iret
inc
inc
jae
out
sub
mov
int3
jno
lock
in
stos
xchg
push
test
jmp
sahf
(bad)
scas
mov
jns
mov
retf
mov
push
jnp
push
loop
cmp
data16
adc
jmp
xlat
mov
lea
dec
sbb
sahf
adc
dec
dec
fstp
repz
mov
mov
call
xchg
dec
js
addr16
cmp
test
(bad)
push
pop
cmp
sbb
mov
and
sub
pop
xlat
popf
sbb
mov
add
dec
sub
xor
and
or
cmps
sbb
and
mov
out
scas
sub
in
lods
mov
lods
mov
sub
stos
imul
push
sub
dec
imul
mov
mov
int
mov
mov
sub
add
popf
fcmovbe
cmc
and
stc
push
nop
add
xchg
lea
arpl
pushf
daa
sbb
and
mov
mov
sub
pop
mov
jno
push
push
inc
fisubr
in
mov
call
cmc
dec
mov
sub
std
(bad)
and
loop
int
repnz
es
inc
in
call
mov
scas
pushf
adc
or
push
push
cmp
push
clc
repz
cvtps2pd
or
stos
mov
add
cmc
aaa
cmp
adc
jae
xchg
and
mov
and
sti
jmp
jno
fsubr
scas
pop
addr16
pop
repz
(bad)
fwait
lea
fcmovbe
inc
jge
inc
in
fsubr
jg
xor
ins
(bad)
call
adc
ret
jmp
repz
daa
mov
jae
mov
movs
mov
test
sqrtps
js
and
in
stc
add
rcl
(bad)
push
arpl
sti
stos
jo
or
dec
xor
mov
and
mov
pushf
(bad)
cmp
jmp
pop
pushf
jb
mov
fcom
adc
je
mov
mov
pop
scas
(bad)
fnstsw
push
jno
scas
in
les
(bad)
call
gs
retf
pop
or
push
dec
jge
push
dec
sbb
mov
jno
push
fs
sub
ins
inc
sub
jg
test
ficom
movs
int
mov
sar
mov
push
xchg
add
lock
cmp
(bad)
int
repnz
lds
lea
cmp
inc
aam
mov
adc
(bad)
js
sub
fnstsw
ds
outs
ss
mov
and
sub
cmp
inc
in
or
test
fadd
loopne
cmp
dec
sub
jbe
out
ds
xchg
in
(bad)
loop
rcl
cmc
repnz
adc
jns
cli
out
cld
mov
(bad)
into
mov
cld
pop
mov
in
aaa
retf
inc
cs
les
cmp
imul
jl
fistp
and
cmps
pop
out
jb
bt
sar
xor
xor
popf
adc
pop
stos
jl
pop
sub
imul
loope
(bad)
nop
push
and
inc
test
std
mov
scas
out
repz
mov
push
add
imul
pop
xchg
test
pop
out
mov
stos
pusha
dec
pop
outs
loope
ins
inc
(bad)
ror
xchg
jo
mov
stos
shr
js
aas
dec
out
jp
(bad)
loopne
sbb
and
jecxz
lds
jp
out
sbb
mov
adc
add
jb
push
add
mul
imul
dec
(bad)
aad
leave
sub
push
mov
xor
pop
fadd
imul
out
push
sbb
pop
fnstsw
sbb
fsubp
clc
dec
retf
sbb
in
popf
or
cmc
jne
sbb
pop
pop
retf
(bad)
xor
fiadd
retf
xchg
mov
add
cld
or
ja
scas
mov
out
adc
pop
fs
jp
pop
test
outs
cli
lahf
or
jle
adc
imul
or
push
cli
popa
lock
scas
inc
push
data16
adc
cld
cmp
pusha
ins
adc
in
mov
sti
test
lods
scas
mov
jns
adc
xchg
out
enter
sub
add
movs
test
in
dec
pop
fistp
push
hlt
lock
mov
js
push
pop
mov
ror
sub
add
inc
mov
cmp
pop
scas
shr
addr16
sub
ret
and
js
pop
sub
ins
mov
add
jmp
xor
push
jge
scas
or
push
imul
mov
mov
fst
(bad)
lock
iret
mov
pop
aas
jns
dec
push
lea
push
data16
xchg
in
mov
push
outs
lods
cld
sub
mov
or
sti
push
and
xlat
mov
out
jmp
mov
out
and
call
aaa
mov
sbb
pop
lds
push
adc
sti
(bad)
cmp
aaa
test
mov
jecxz
jge
cmp
movs
int
sahf
and
cs
dec
test
div
dec
in
les
jo
call
movs
adc
xor
int3
ds
outs
push
stos
jns
not
adc
repz
mov
jmp
xchg
jo
call
cmp
mov
arpl
xchg
or
mov
dec
jle
popa
xlat
cli
movd
jbe
outs
cmps
adc
jae
ss
pop
fucom
push
pushf
add
ficomp
mov
aaa
sbb
stc
mov
sti
lods
retf
ret
sub
idiv
xchg
iret
in
div
std
or
jle
ds
pop
push
rcl
jmp
xor
cmp
retf
enter
push
jp
out
dec
cmps
fimul
or
data16
ss
mov
repz
stos
hlt
and
arpl
js
jecxz
sub
dec
xor
dec
pop
pop
cmp
mov
sbb
neg
outs
or
mov
arpl
pushf
sbb
enter
ins
pusha
fsub
es
xchg
xor
mov
into
jne
imul
out
(bad)
and
cli
cs
inc
xchg
out
shl
loopne
iret
xlat
pop
int
mov
add
adc
xchg
cmps
push
push
mov
je
les
xchg
mov
fdivp
test
cmp
mov
pop
or
movs
sub
push
fs
retf
mov
dec
xchg
and
and
in
jo
sbb
jg
ins
xchg
push
dec
jmp
push
dec
cmp
cmps
fnstenv
jb
popf
jae
push
push
sbb
jo
in
out
sub
mov
xchg
mov
xchg
add
popf
aad
cli
mulps
mov
(bad)
sub
dec
je
iret
dec
fs
retf
pop
dec
mov
and
call
fs
dec
xor
mov
mov
dec
imul
ret
push
xor
sahf
and
xor
out
(bad)
cli
sar
xchg
or
mov
mov
jmp
out
scas
adc
adc
push
and
inc
xor
and
outs
mov
dec
sbb
jl
mov
push
and
test
mov
int3
cmps
xlat
ins
push
(bad)
adc
adc
in
sbb
add
mov
xor
rcr
dec
and
push
in
pop
xor
ja
les
in
cmp
(bad)
stos
mov
mov
mov
ret
or
jb
add
jns
mov
jg
repnz
daa
icebp
dec
and
mov
jle
lods
scas
stc
xchg
and
adc
mov
sub
mov
xor
pushf
loop
mov
jae
gs
dec
push
add
out
aam
(bad)
xchg
mov
imul
dec
pop
mov
ret
add
ret
movs
mov
or
or
sub
mov
out
je
jbe
retf
mov
idiv
enter
xor
xchg
sub
mov
add
fucomp
es
bound
add
movs
mov
repz
cs
mov
aad
in
xchg
imul
push
cmc
test
fbstp
inc
mov
mov
pop
or
sub
pusha
pop
sub
out
and
mov
cwde
ins
pop
seto
out
jnp
pop
adc
push
adc
mov
inc
cld
dec
inc
jb
jp
xchg
jbe
sub
jne
add
pushf
xor
jmp
clc
out
jmp
cmp
clc
fucomip
fdivr
lea
pop
(bad)
add
jge
adc
inc
ss
xor
in
push
jno
and
outs
outs
movs
mov
or
aad
pop
mov
outs
dec
outs
or
hlt
sbb
pop
add
push
sbb
lods
xor
inc
cdq
xor
mov
(bad)
call
push
add
ret
pop
sbb
fmul
mov
ss
dec
(bad)
cmp
sub
lahf
outs
sub
mov
ss
inc
sub
jp
arpl
addr16
neg
cli
sub
js
dec
int
mov
stos
repnz
stos
sbb
push
test
outs
mov
jmp
dec
pop
mov
stos
sbb
adc
sti
inc
(bad)
cli
pusha
jmp
aad
int
xchg
out
mov
dec
int3
jne
add
cld
xchg
and
adc
mov
pop
scas
add
icebp
popa
jg
add
icebp
scas
repnz
mov
outs
mov
jbe
mov
mov
into
or
jae
cmp
iret
push
mov
lock
and
sbb
jb
out
clc
(bad)
sub
xor
add
sub
fild
pop
(bad)
fs
mov
pusha
test
pop
rcr
cld
stc
loop
fcomp
ror
xlat
ins
and
(bad)
retf
ret
icebp
mov
xchg
cmp
sub
xchg
push
fcom
mov
ds
loope
test
inc
out
pusha
pop
cmps
ror
adc
sbb
mov
iret
ret
dec
adc
sar
fwait
arpl
jle
jb
sbb
nop
cmp
pop
mov
imul
jl
jp
mov
pop
dec
mov
repz
retf
pop
inc
(bad)
ds
dec
ror
jge
(bad)
sbb
push
add
out
movs
loop
icebp
add
lock
arpl
int
sar
mov
sbb
mov
outs
jbe
cmp
adc
dec
ror
les
cdq
mov
or
inc
xlat
push
or
adc
pusha
lods
and
mov
ins
ins
jle
inc
adc
inc
inc
jmp
or
outs
adc
mov
inc
xor
fwait
jbe
psubw
sbb
push
fimul
inc
repz
retf
fidiv
je
push
test
repnz
dec
add
out
add
test
cmc
cdq
data16
jnp
and
inc
aas
loope
out
fld
mov
(bad)
jae
std
adc
sahf
pop
and
cmp
shl
sbb
xchg
or
pop
inc
xor
aad
sar
sbb
mov
popa
cmp
push
outs
(bad)
cwde
cmps
nop
adc
push
and
mov
in
cmc
loope
das
xor
ss
lahf
jb
fmul
ret
jmp
aas
cli
and
ret
outs
addr16
mov
pop
fisttp
ret
inc
lock
xor
jnp
pop
fld
in
jb
ds
add
test
pop
clc
fdiv
(bad)
clc
jg
mov
fisttp
sbb
mov
or
call
pop
out
adc
sbb
loopne
mov
mov
inc
push
cdq
repz
jb
lahf
jae
pushf
jge
loopne
jns
leave
fcmove
fwait
and
push
outs
and
pop
sub
(bad)
push
fidivr
xor
dec
sbb
cwde
mov
aas
inc
int3
mov
add
gs
or
out
inc
lock
mov
in
xor
add
sar
push
push
jns
push
jg
sbb
push
push
cli
loope
mov
or
js
adc
int3
fsub
(bad)
loop
scas
in
mov
fs
ins
mov
icebp
sti
push
lods
adc
and
xchg
jge
push
push
push
mov
mov
and
mov
jbe
rcr
fild
imul
int
cld
push
outs
loop
inc
(bad)
mov
add
cmp
inc
out
and
iret
add
mov
push
mov
xchg
mov
aas
cmp
dec
loop
jg
jae
fs
mov
cmp
sbb
and
mov
xor
pop
mov
xchg
test
dec
push
mov
inc
fisttp
push
xchg
(bad)
mov
adc
das
hlt
iret
or
sbb
push
inc
jle
add
fsubr
in
and
and
in
hlt
das
pop
jns
and
pop
outs
js
out
gs
ror
mov
shl
xchg
ja
out
mov
push
add
mov
lahf
sar
mov
sbb
dec
cmp
in
lods
fisubr
aad
jmp
cdq
xor
movs
push
dec
ins
jl
in
imul
aas
cs
cmp
(bad)
fwait
ret
add
aad
lds
stc
or
mov
mov
push
int
iret
mov
outs
or
dec
mov
and
xchg
int3
and
jmp
sahf
xchg
sbb
daa
shr
jmp
xchg
(bad)
inc
or
add
jl
push
mov
mov
xor
(bad)
cmp
mov
add
mov
mov
xchg
gs
cmc
fimul
test
out
cli
test
gs
hlt
ss
fcom
ja
push
ins
adc
dec
cmps
mov
push
sbb
adc
sbb
push
out
loopne
xchg
mov
test
out
das
add
cmps
mov
jle
adc
fcomp
retf
in
das
mov
daa
jbe
and
popa
dec
inc
icebp
jge
pop
in
sub
in
add
mov
out
inc
enter
adc
adc
imul
test
jmp
lods
arpl
sub
aas
adc
dec
mov
shl
lahf
jne
fiadd
call
mov
in
jne
mov
enter
cmp
inc
xor
hlt
mov
fs
cmc
jmp
jge
dec
xor
out
mov
retw
loope
stos
mov
xchg
repz
jl
xlat
pop
std
loop
int
sbb
outs
xor
xor
addr16
sti
mov
add
test
mov
cmp
ins
or
imul
js
imul
cs
enter
int3
test
xchg
ins
pop
outs
stos
pop
cmp
xor
cmp
or
push
mov
xchg
arpl
push
cmp
sub
clc
iret
inc
jge
mov
je
jge
or
inc
jbe
aad
das
cmp
jmp
add
mov
cmp
mov
mov
jb
fdivr
aaa
mov
test
(bad)
xlat
imul
pop
js
sti
call
mov
lea
xor
fstp
adc
dec
loope
ja
jl
test
frstor
out
sbb
ret
addr16
push
push
mov
les
cvttps2pi
push
or
jmp
xchg
mov
inc
push
push
mov
pop
ror
cmps
jl
add
push
bnd
dec
ins
jmp
arpl
test
inc
inc
xchg
cdq
inc
xlat
inc
push
xor
sub
xor
fwait
cwde
out
mov
sbb
fimul
shl
push
mov
inc
pop
ja
dec
pop
xor
int
mov
push
xchg
or
cwde
iret
popa
sub
dec
scas
push
cwde
xchg
stc
add
fisttp
fldcw
imul
pop
repnz
mov
add
mov
and
or
cld
jae
test
das
popf
aas
dec
xchg
pop
cld
and
add
add
add
addr16
xor
sbb
xchg
inc
push
aad
add
daa
mov
js
lea
loopne
lods
arpl
lods
mov
dec
bound
enter
dec
scas
inc
test
pop
adc
int3
jl
xchg
pop
jp
adc
and
sbb
test
dec
sub
popf
ja
add
arpl
sbb
mov
faddp
cmp
sbb
dec
fnstcw
and
(bad)
in
cmp
and
xchg
das
xchg
xchg
sub
mov
cmp
lea
lock
and
pop
bound
sbb
sti
repz
or
das
jb
add
out
leave
push
call
mov
pop
fcom
mov
fimul
out
mov
fwait
inc
in
jecxz
or
out
aaa
(bad)
xor
jp
sub
jmp
sbb
scas
mov
pop
xchg
lock
and
sbb
std
mov
hlt
stc
lahf
arpl
rcr
and
pop
pop
add
shl
mov
sbb
jl
dec
dec
fs
xchg
mov
leave
mov
push
out
adc
jne
mov
mov
repnz
enter
inc
call
les
popa
lahf
cmc
cmp
ins
xchg
lods
dec
inc
ror
rcr
mov
jb
or
push
mov
(bad)
or
(bad)
jns
aas
and
mov
cmp
loopne
lock
pop
inc
cmps
mov
or
xor
pop
arpl
enter
loope
jns
jl
or
aad
mov
or
repz
push
das
pop
xchg
sbb
cmp
leave
repnz
pop
xchg
push
js
call
std
mov
sub
out
mov
shl
aad
and
(bad)
cdq
fstp
cmp
dec
mov
(bad)
xchg
stos
push
sub
daa
lods
lods
leave
jo
or
jl
adc
sahf
inc
ja
xor
mov
es
and
in
in
ror
mov
iret
outs
mov
pop
jge
outs
ins
mov
push
jo
and
jecxz
xor
movs
in
jb
sbb
mov
ins
repz
je
ret
add
repz
push
or
push
and
or
movs
fstp
loope
out
mov
or
bnd
jnp
push
mov
mov
jae
stos
or
stc
sti
mov
popa
es
pop
call
add
xor
mov
adc
mov
cmp
mov
xchg
cmps
adc
jo
in
fcmovb
vandps
cdq
jge
call
mov
mov
(bad)
clc
adc
hlt
(bad)
dec
xor
jno
xor
pop
(bad)
fisttp
push
sbb
ss
pop
inc
dec
retf
jg
adc
pop
fcomip
jno
pop
sub
dec
sub
xchg
sbb
or
pop
movs
jne
mov
inc
or
cdq
in
jb
xchg
push
xor
and
xor
popa
jmp
cmc
mov
xchg
outs
in
cli
add
sbb
dec
adc
or
or
mov
(bad)
push
mov
sbb
fisub
cmp
and
rcl
hlt
sahf
pushf
dec
fsubr
and
inc
dec
fnstsw
ja
lock
(bad)
fdivr
inc
cmp
dec
cmps
mov
jnp
xor
data16
aam
mov
or
and
cmps
push
or
(bad)
lods
mov
pushf
ins
inc
rol
and
ret
and
movups
mov
push
adc
push
cmc
dec
xchg
pop
loope
or
aad
dec
fucomi
pop
test
ins
push
mov
mov
fwait
inc
fs
not
hlt
icebp
retf
jecxz
dec
jo
mov
jne
xor
inc
push
mov
jnp
and
in
pop
into
mov
gs
push
cli
mov
movs
loop
push
mov
popf
enter
mov
or
ss
jbe
inc
fdivr
pushf
dec
jno
sti
popf
inc
cdq
adc
pop
and
xor
push
jmp
adc
repnz
xchg
dec
push
mov
and
sub
xchg
adc
es
fldenv
cld
call
dec
push
lods
pop
pop
pop
mov
inc
ret
pop
mov
jmp
push
lea
mov
repz
or
(bad)
add
scas
push
mov
stc
pop
std
jg
hlt
das
fdiv
xchg
loope
pop
push
push
retf
jg
xor
mov
int3
jmp
ret
push
xor
popa
mov
and
out
fstp
dec
xor
sbb
push
movs
and
cmp
int
sub
and
pop
test
mov
pushf
push
loop
out
push
ror
pop
ret
data16
mov
push
sbb
(bad)
leave
push
jge
inc
sbb
xchg
pop
ret
les
cli
inc
add
je
repnz
dec
sar
add
ret
jno
xchg
stos
jne
(bad)
leave
jp
test
sub
fld
int
dec
movzx
cmp
and
addr16
and
or
addr16
cmp
outs
sub
repnz
(bad)
add
mov
cwde
lahf
retf
push
add
xchg
or
add
out
add
ror
hlt
mov
cmp
sbb
or
lods
inc
xchg
(bad)
enter
sahf
lds
jecxz
mov
rol
loop
mov
std
test
les
sub
cmp
xlat
aam
pop
xlat
xor
xor
cmp
hlt
mov
add
and
das
mov
enter
pop
lds
adc
jecxz
aad
or
clc
xchg
iret
cld
daa
out
or
mov
stc
or
repz
mov
mov
retf
retf
out
lods
movs
shr
jne
lods
fmul
add
out
loop
jmp
(bad)
push
rcr
xchg
add
mov
mov
dec
sbb
aaa
and
jp
push
add
mov
mov
clc
inc
aaa
xor
in
xor
mov
mov
cwde
xchg
cmps
test
mov
push
maskmovq
pushf
jae
ins
mov
test
ret
sub
in
popf
xor
and
test
cmp
xchg
(bad)
pop
call
push
add
or
push
add
dec
jmp
mov
push
push
ror
fucomip
xchg
mov
aad
mov
dec
cmp
jbe
xchg
mov
inc
push
mov
movs
inc
or
int
mov
jnp
stos
push
add
fs
lock
pop
popa
scas
test
stos
push
mov
lock
cld
cld
retf
int3
in
jo
mov
adc
push
bnd
das
jae
pop
shl
adc
scas
add
pop
dec
mov
sbb
push
dec
pop
adc
enter
lds
sahf
adc
sub
mov
and
test
sub
repz
inc
fild
in
push
pop
xor
jbe
popa
add
(bad)
mov
mov
int
inc
ret
cld
dec
sbb
and
test
adc
cmp
into
xor
or
mov
aad
inc
jbe
ret
sub
jae
sub
add
sub
sub
retf
ins
push
sbb
cmp
inc
cmps
in
loopne
xor
jecxz
sti
jp
cmp
mov
pop
add
cs
sub
(bad)
stc
adc
sti
push
sar
inc
mov
xchg
push
xchg
enter
jno
jle
repnz
and
cmps
fisttp
xchg
pop
js
xchg
mov
fldenv
loope
outs
jecxz
call
(bad)
jo
das
mov
cmp
mov
fld
xchg
pushf
loopne
jecxz
adc
fs
leave
mov
add
pop
aam
(bad)
loopne
pop
movs
jg
jle
and
stos
xlat
test
es
outs
add
(bad)
push
mov
push
dec
cmp
pmaxsw
xor
lods
jo
jmp
mov
jl
stos
jg
add
movs
cdq
rcr
int3
fs
mov
(bad)
ins
(bad)
mov
mov
lock
lods
push
gs
test
aam
xlat
jle
cmps
inc
mov
mov
jbe
jno
(bad)
call
(bad)
and
add
cmp
in
das
and
inc
or
xchg
mov
jns
movs
call
(bad)
or
xlat
pop
push
inc
push
lds
lock
pop
mov
sbb
or
inc
leave
mov
push
mov
sbb
mov
mov
add
mov
repz
inc
enter
imul
xor
mov
mov
int3
(bad)
mov
xor
cmps
call
inc
sbb
mov
adc
ja
adc
repz
push
popf
ins
sar
mov
dec
sbb
or
sbb
inc
jp
add
les
aas
ja
out
mov
mov
stos
pusha
jmp
ss
sub
mov
(bad)
cmc
gs
sub
sar
pusha
cmp
ja
pop
push
ss
cmps
mov
inc
mov
mov
push
xor
movs
fisttp
ret
mov
inc
mov
in
xor
fnstcw
sbb
cmp
outs
std
loop
mov
aaa
xchg
lods
mov
dec
loopne
rcl
shr
rcl
pop
dec
in
(bad)
pop
push
idiv
and
pop
les
xor
loop
sub
and
jne
ds
jbe
daa
loopne
lods
pop
stos
pop
xor
xlat
and
mov
imul
imul
jnp
test
cmp
add
loop
inc
pushf
stos
mov
(bad)
(bad)
xlat
dec
inc
cdq
cmp
mov
jns
add
mov
jmp
push
push
pop
shr
add
cmp
daa
mov
out
and
push
scas
xchg
cmps
pusha
and
jb
push
(bad)
push
iret
pop
popf
cdq
ss
ins
les
push
js
fild
cmp
fwait
cwde
call
xchg
(bad)
add
sbb
xlat
mov
jnp
sbb
push
pop
mov
ror
mov
mov
pop
fstp
(bad)
enter
or
mov
dec
pusha
sti
inc
adc
icebp
inc
retf
lea
repz
sbb
(bad)
or
imul
ins
test
call
jae
xor
inc
sbb
pop
sub
mov
movs
sub
outs
push
int
movs
cli
out
sbb
push
xor
cmp
xchg
mov
mov
mov
loopne
mov
inc
cmp
pop
xchg
cmp
mov
fiadd
mov
scas
xchg
call
jecxz
mov
out
and
inc
les
cmp
out
add
rcr
pop
mov
and
int
pop
out
sbb
mov
jmp
xchg
hlt
jno
xor
fwait
movs
inc
(bad)
sub
xchg
rol
pop
cld
inc
outs
adc
xchg
jp
(bad)
sbb
jbe
mov
test
ins
pop
jo
jmp
xchg
into
mov
jp
jle
cs
rol
test
sar
leave
mov
add
test
xor
in
movs
inc
mov
and
mov
out
retf
dec
lahf
(bad)
push
jb
sbb
mov
in
mov
sub
lahf
push
test
ds
jg
xchg
add
inc
jno
add
loopne
inc
ret
int
cmp
jns
jno
daa
jmp
xor
push
into
icebp
sbb
mov
xlat
movs
sub
stos
pop
add
cwde
and
mov
and
mov
les
jns
mov
pusha
add
pop
call
ret
jg
js
and
sbb
or
mov
fdivr
jo
pop
pop
xchg
lods
cli
cmp
cld
loop
or
pop
push
sti
mov
daa
sub
sti
in
mov
mov
xor
ss
in
mov
mov
lds
aad
movs
sti
jp
xchg
rol
mov
lahf
jne
mov
jmp
or
mov
and
inc
cmp
out
lea
add
pushf
push
ins
push
pavgb
dec
and
(bad)
mov
cmp
addr16
aad
pop
and
sbb
outs
loop
pusha
jae
or
xchg
cwde
xor
or
mov
aaa
(bad)
mov
mov
cwde
sahf
data16
cmp
inc
mov
push
retf
pop
rol
sbb
add
cmp
adc
adc
ret
ret
gs
inc
cwde
or
popa
xor
add
out
mov
jnp
sti
daa
aad
scas
stos
fist
adc
iret
mov
lea
sbb
out
pop
cwde
inc
dec
stos
adc
mov
gs
lds
push
add
test
mov
adc
(bad)
xor
sbb
ins
cdq
jmp
mov
scas
push
test
jle
dec
push
mov
test
int3
xchg
cs
arpl
cli
sbb
ret
adc
not
xchg
xlat
mov
sbb
adc
add
add
mov
add
ins
in
pop
xor
outs
test
pop
push
(bad)
jmp
xor
arpl
dec
xor
or
scas
inc
fsub
inc
jmp
cmp
mov
jns
push
mov
mov
push
sbb
push
xor
and
std
hlt
or
outs
jno
leave
int3
mov
sahf
mov
pop
enter
xor
jne
pusha
(bad)
ror
pop
inc
iret
jecxz
add
test
ds
aam
pop
add
fist
push
xchg
js
jnp
ret
into
mov
fisttp
jne
fs
sti
push
aam
fwait
and
div
shr
in
push
pop
mov
cwde
add
xor
jb
aaa
push
push
ins
sbb
ds
repz
fdivr
addr16
jae
sub
xchg
mov
push
pop
mov
xchg
(bad)
push
mov
jecxz
call
push
gs
js
(bad)
ja
sub
jae
dec
int
push
inc
fbstp
retf
dec
mov
and
jge
jno
lock
jae
mov
mov
nop
(bad)
fisubr
out
ins
movs
xchg
(bad)
or
sub
iret
mov
(bad)
jo
mov
imul
sub
je
aad
popa
sbb
cwde
icebp
sub
adc
(bad)
mov
or
cmc
ins
add
int3
ret
mov
clc
call
outs
daa
sbb
cmp
lea
retf
xchg
add
sub
paddd
push
cmp
xchg
inc
cmp
test
shr
and
push
jg
mov
cmp
mov
inc
inc
pop
inc
inc
daa
xor
mov
lods
jmp
fcmovnb
dec
push
sbb
mov
clc
lds
loopne
xchg
imul
xor
mov
or
inc
sub
jnp
ins
movs
push
les
lea
dec
mov
or
and
jl
test
inc
push
ss
out
lods
pop
cmp
call
rcl
imul
ds
mov
(bad)
mov
mov
paddd
inc
in
sahf
retf
mov
cmc
sub
add
clc
or
fincstp
or
sbb
loop
int
rep
stos
nop
sub
xchg
in
xchg
outs
idiv
sub
jmp
addr16
clc
fs
or
jmp
bound
mov
aaa
pop
sbb
rcl
mov
imul
cmp
(bad)
jp
in
lahf
out
xchg
add
(bad)
(bad)
movs
cli
jg
cmp
adc
add
sbb
jecxz
push
and
test
nop
std
outs
setns
push
sub
leave
data16
sbb
jl
xor
and
and
mov
movs
loopne
sbb
sub
in
dec
jecxz
inc
gs
test
jo
push
xchg
or
lds
cli
inc
sub
out
out
pop
and
lea
inc
stc
inc
push
push
pop
jnp
dec
arpl
ds
lock
lods
jecxz
int
iret
cmp
cmp
mov
dec
inc
dec
bound
fild
in
mov
cdq
cmp
mov
ss
mov
enter
xchg
arpl
lds
or
lods
test
xchg
mov
cmp
or
(bad)
xor
movs
out
inc
bound
xor
arpl
jmp
xchg
lock
jns
in
or
int
xor
scas
cmp
pop
shl
pop
sbb
pusha
sub
mov
inc
fwait
mov
or
ja
pop
pop
mov
es
sub
mov
sub
imul
sbb
adc
bnd
jg
(bad)
ret
(bad)
shl
mov
es
or
mov
jge
mov
push
std
jnp
pusha
pop
in
cmc
or
jbe
jg
sbb
adc
sub
data16
mov
xchg
imul
inc
push
push
xchg
lahf
or
pop
cli
arpl
stc
pop
shl
mov
aad
fcomip
fwait
adc
inc
and
inc
call
cmp
int
test
shl
xchg
xchg
mov
pusha
add
(bad)
js
and
lods
jecxz
arpl
sbb
in
mov
ds
push
addr16
ja
hlt
jo
mov
das
mov
arpl
push
mov
test
pop
pop
xchg
loopne
fwait
nop
jbe
sbb
sti
push
cdq
adc
mov
scas
xor
dec
retf
je
ffree
(bad)
mov
cmp
aas
mov
mov
jno
dec
call
shr
repnz
push
push
push
pushf
int
inc
not
ret
mov
and
jl
fadd
stc
or
jb
ds
popa
retf
adc
cmps
pop
mov
lods
push
ja
call
arpl
test
add
repnz
mov
mov
fisubr
loope
sub
xor
das
pop
repnz
fs
sbb
add
and
mov
sub
mov
fnstsw
stos
mov
aam
push
int3
mov
cwde
out
(bad)
push
xchg
js
(bad)
aam
aas
inc
push
cmp
(bad)
adc
repz
inc
aad
mov
imul
mov
mov
mov
push
les
aam
cmp
xchg
add
xor
jae
jne
fidiv
mov
mov
or
mov
inc
(bad)
in
add
xor
ficomp
xor
mov
pop
mov
retf
jnp
dec
cmp
inc
das
ss
dec
sti
mov
xchg
ja
pop
cmp
daa
adc
clc
pop
in
cmp
arpl
mov
ret
scas
ja
mov
xchg
xor
dec
leave
xor
loope
repnz
ds
(bad)
imul
icebp
lock
out
out
mov
dec
and
mov
push
inc
fisub
adc
pusha
arpl
xchg
jp
mov
js
jge
das
xor
sahf
call
cmps
ret
mov
fcmovnb
inc
and
ja
rol
dec
lds
fadd
loope
or
test
and
sbb
push
sbb
cmp
or
fs
leave
pop
and
xchg
inc
mov
pop
es
cdq
jmp
mov
ss
xlat
cmp
cmc
cmc
sbb
mov
inc
pop
bound
jne
gs
aas
xchg
mov
fadd
daa
mov
iret
fwait
shl
ror
sub
mov
sub
jp
jo
push
bound
and
js
mov
dec
jge
jecxz
sub
sbb
data16
scas
jnp
cmp
pop
cmp
push
xor
sbb
repz
test
lea
fwait
(bad)
push
retf
outs
sar
mov
mov
outs
retf
in
ror
(bad)
lods
push
pop
jp
push
retf
xchg
call
sub
jno
xchg
(bad)
adc
cmp
push
jne
nop
push
add
fwait
stc
sbb
dec
loop
dec
mov
popf
outs
pop
mov
inc
call
and
test
dec
mov
adc
in
pop
jbe
pusha
mov
mov
adc
push
arpl
mov
into
es
and
push
mov
mov
adc
(bad)
(bad)
sub
out
sbb
xchg
ins
jecxz
pop
aam
jecxz
mov
add
xor
jp
xchg
cmps
mov
inc
ret
cdq
mov
mov
inc
add
(bad)
xor
sbb
mov
jp
jmp
repz
sub
ins
push
popw
addr16
jmp
cmp
xchg
mov
mov
ror
mov
ret
xchg
ret
jmp
or
xor
jle
cmc
dec
jmp
push
push
adc
gs
lods
jbe
in
cwde
imul
xor
mov
adc
das
ins
dec
xchg
pop
sub
test
stos
retf
scas
(bad)
dec
cmc
jg
lahf
pusha
push
add
retf
sar
loopne
popf
out
repz
and
jne
pushf
adc
cmp
aad
inc
mov
xor
jns
sub
push
push
sub
cmp
out
mov
outs
aad
mov
jo
idiv
stos
(bad)
xlat
push
sub
inc
xor
cmp
inc
jne
fucomp
leave
lods
jp
jae
aas
ins
pop
mov
sub
push
push
xchg
add
dec
outs
dec
rol
xor
sub
mov
mov
mov
sbb
and
les
jnp
rcr
lahf
mov
inc
inc
sahf
test
mov
shr
jl
dec
(bad)
aam
les
and
movs
aaa
push
cs
repz
mov
xor
test
add
mov
scas
imul
test
and
xchg
loope
rcl
movs
sub
mov
in
(bad)
cs
rcr
aam
jmp
shl
pop
mov
pusha
aam
out
imul
cs
ja
mov
xor
mov
jp
ins
cmps
push
mov
jno
ror
pop
call
in
xlat
call
ss
push
or
mov
pop
inc
push
rcr
ss
and
pop
xor
ror
pop
int3
out
leave
shl
xor
imul
mov
xchg
ror
in
push
add
div
int
out
ret
les
repnz
cmp
mov
mov
mov
adc
lds
mov
cmc
pop
sbb
mov
xlat
mov
jge
xor
mov
movs
sbb
pop
jmp
cld
mov
call
(bad)
ss
aad
dec
jge
movs
dec
mov
xlat
pop
jns
outs
gs
sub
xor
dec
inc
clc
out
mov
mov
sub
mov
sbb
icebp
aam
adc
sbb
(bad)
cmps
call
mov
aam
jno
cmp
ja
outs
mov
push
call
add
dec
enter
fdiv
add
(bad)
jae
dec
xor
dec
aas
mov
cmp
sub
add
xor
xchg
test
adc
mov
les
rcl
dec
dec
shl
popf
data16
sub
test
jnp
dec
push
loopne
jb
jo
cmps
(bad)
loopne
sub
sbb
mov
jecxz
ror
das
sar
mov
inc
and
stc
int
imul
sbb
mov
imul
xor
sbb
xor
xchg
mov
inc
xlat
cmp
adc
sbb
sbb
or
xchg
std
in
ror
adc
fwait
jp
ins
pop
retf
pop
dec
xchg
fcomp
int3
add
xor
cmp
dec
inc
jp
pop
aaa
in
loope
cld
cmp
out
or
std
jle
fistp
or
pop
jmp
gs
out
jmp
popa
std
mov
push
mov
cdq
sbb
jo
popa
fadd
out
inc
push
mov
inc
mov
call
sbb
lahf
repnz
xchg
sbb
(bad)
push
adc
and
sbb
fs
lea
add
arpl
fsubr
lds
push
aaa
rcl
and
xor
ins
dec
sub
or
mov
mov
or
dec
mov
sbb
mov
sbb
sbb
sub
or
mov
dec
fld
push
xor
es
cdq
sahf
je
push
dec
push
imul
pop
out
cmp
xlat
push
push
push
and
hlt
sub
out
dec
and
gs
jb
jle
push
bound
clc
dec
mov
(bad)
dec
(bad)
jg
or
or
jl
xor
popa
xchg
and
repnz
ds
adc
hlt
movs
adc
xchg
pop
mov
clc
sub
push
xlat
into
sbb
cmps
bound
loope
ficom
cmps
out
mov
sub
jge
add
jmp
dec
sti
sbb
nop
in
loop
loop
ficomp
data16
call
(bad)
in
test
out
xor
stc
movsx
xchg
jecxz
leave
jns
mov
les
xor
mov
shl
sbb
mov
xor
push
and
fucom
push
push
nop
ins
xchg
dec
or
in
or
(bad)
movs
mov
mov
je
fdivr
mov
(bad)
outs
and
repz
or
out
dec
rcr
xchg
enter
jg
cmp
xchg
movs
shl
js
jbe
xor
jg
fld
aaa
mov
jmp
aas
pop
sbb
push
pop
dec
aam
xchg
push
(bad)
xchg
pop
out
xor
add
sub
xor
dec
cld
cmps
pushf
jae
adc
fs
mov
nop
xchg
icebp
icebp
adc
movs
or
cwde
xchg
repz
adc
xor
xor
add
push
shl
sbb
adc
in
enter
stos
pop
mov
mov
(bad)
test
std
je
cmp
mov
sub
outs
mov
and
cld
pop
mov
dec
inc
ins
add
push
cmp
repz
push
cmps
ins
sar
mov
xchg
mov
(bad)
pop
lods
ss
stos
jbe
inc
mov
sbb
jmp
out
mov
cmc
push
rcr
inc
and
pop
test
enter
sbb
sub
stos
out
fs
ds
loop
loope
push
mov
je
loope
(bad)
enter
fcomp
sbb
push
loop
xor
outs
sbb
push
inc
jge
repnz
sub
stos
lahf
cmp
(bad)
jmp
retf
repz
(bad)
pusha
pop
into
daa
retf
das
es
inc
popf
sbb
dec
adc
ret
cmc
(bad)
pop
out
iret
test
jae
out
std
sub
push
movs
mov
lds
push
rcr
lock
jae
jge
aam
or
sub
fucompp
sub
iret
push
push
inc
or
xchg
ds
jp
in
adc
hlt
mov
and
push
and
repnz
xchg
add
imul
div
xor
push
int3
or
sbb
(bad)
xor
cmp
movs
sub
add
adc
xor
jg
out
inc
stos
outs
pop
sub
hlt
in
xchg
jae
inc
loop
iret
cld
shr
inc
fwait
add
and
mov
mov
xor
inc
sbb
or
xor
(bad)
loop
inc
push
cdq
push
dec
sar
add
gs
dec
(bad)
hlt
adc
imul
adc
lods
shl
mov
xor
inc
test
lock
pop
mov
ds
aaa
ds
std
scas
add
jmp
jmp
or
sbb
gs
std
test
xlat
xor
xor
hlt
sbb
fs
stc
repz
sub
jle
fcom
inc
inc
cli
fneni(8087
ds
std
adc
gs
mov
xor
sti
mov
jnp
push
(bad)
jns
xchg
push
push
dec
pop
popa
push
xchg
dec
jno
cmp
or
push
sub
jle
push
xchg
(bad)
(bad)
pop
sbb
xchg
xlat
outs
mov
out
jns
mov
dec
stc
sub
mov
es
fild
dec
xlat
pusha
push
test
test
dec
cwde
mov
jmp
jl
gs
inc
mov
popf
mov
das
xor
loope
les
xor
(bad)
add
sbb
call
push
jne
mov
movs
aas
mov
mov
rol
shr
int
sbb
xchg
add
inc
sbb
(bad)
ficomp
jno
pop
icebp
push
sbb
pop
fcmovnb
int3
inc
test
scas
xchg
add
sbb
lea
ss
jae
cwde
cmp
aad
enter
xchg
lds
shr
mov
push
rol
(bad)
mov
(bad)
fld
pop
dec
sub
mov
je
inc
add
mov
sbb
cmp
cmp
mov
clc
es
push
rcl
das
(bad)
stos
and
in
sbb
jnp
sub
aad
add
cld
retf
cmps
add
scas
pop
xor
and
idiv
push
pop
mov
add
or
out
sub
and
or
adc
mov
sbb
or
push
pop
(bad)
jbe
div
jge
adc
xchg
dec
mov
dec
xor
pop
xor
cmp
jo
outs
test
inc
jae
stos
adc
mov
inc
addr16
imul
jo
fcom
pop
push
lods
sub
push
cs
mov
stos
dec
mov
pushf
mov
mov
inc
iret
(bad)
shr
rol
cdq
jge
push
das
cwde
push
jne
adc
in
addr16
jecxz
int
xchg
jecxz
loop
(bad)
push
push
aam
mov
cmps
push
cdq
mov
stos
mov
push
pop
sahf
inc
int3
aaa
mov
ret
sahf
ins
add
inc
push
jnp
movs
loope
push
ins
mov
outs
imul
dec
call
or
or
js
enter
ins
ds
mov
xchg
leave
mov
ds
mov
xchg
stos
cld
aas
jb
pop
inc
loope
inc
xchg
fs
ret
pop
rcl
xor
jns
or
and
loopne
(bad)
jb
fsubr
jne
(bad)
and
and
ss
push
aas
test
mov
add
push
out
sub
adc
fdiv
call
jne
jae
rol
aas
fs
jnp
inc
push
leave
mov
add
ret
pop
fcom
outs
or
or
shl
pop
xchg
push
in
push
inc
sbb
(bad)
mov
push
dec
das
cwde
pop
popa
pop
add
or
push
out
inc
stos
xor
adc
daa
jle
loop
ins
call
sub
add
mov
jp
inc
call
bound
popa
ja
xor
cmp
push
pushf
mov
mov
push
fist
fdiv
or
jo
shl
jle
scas
xchg
iret
sub
es
js
xor
sar
in
inc
sbb
and
(bad)
fwait
push
and
int3
mov
ficom
movs
lea
xchg
mov
adc
out
mov
dec
xlat
test
test
and
imul
add
clc
mov
icebp
add
mov
bound
outs
loopne
xchg
mov
int3
loopne
sbb
(bad)
push
jle
xchg
pop
fbld
je
jne
mov
ja
or
cmp
popf
rol
jns
mov
cmp
inc
add
mov
cmovb
inc
jmp
cld
pusha
xor
dec
sub
xor
mov
xchg
and
xor
lahf
and
imul
das
call
ins
out
pop
ss
test
push
test
add
jmp
cli
mov
hlt
nop
movs
pop
ins
fadd
sub
stos
mov
(bad)
sub
pop
sahf
xor
ja
outs
pop
out
fst
inc
shl
or
enter
add
aad
mov
and
hlt
jp
adc
and
arpl
jae
dec
mov
jmp
jle
adc
aas
jnp
popa
in
push
xchg
mov
in
mov
retf
push
xchg
mov
data16
scas
adc
jno
xor
pop
outs
dec
jge
xlat
adc
add
pushf
test
xchg
push
and
shl
scas
aam
xor
bound
pop
jg
cmc
int3
loop
aad
mov
retf
ja
jg
mov
rol
mov
test
int
xor
add
rol
ds
ror
adc
xor
outs
js
or
adc
cmp
pop
int
xchg
mov
jl
lea
sub
data16
cmp
cmp
repnz
sbb
adc
sub
rol
sub
sub
and
fldcw
xchg
fwait
add
or
leave
jmp
add
inc
js
js
(bad)
js
jl
shr
sahf
jns
push
inc
mov
mov
in
pop
sub
push
sti
inc
(bad)
stc
sub
pop
sub
xor
sbb
mov
cmp
cmp
sbb
mov
jmp
add
ret
xchg
dec
sub
cs
dec
push
gs
clc
ins
je
xor
xor
mov
mov
lock
(bad)
fs
xchg
stos
and
pop
div
push
jns
cmp
movs
lods
mov
push
repnz
mov
loope
xchg
lds
sub
ds
jl
adc
rol
cmp
aaa
rcr
jnp
adc
data16
out
rol
addr16
aam
add
xchg
sahf
arpl
jl
dec
push
popf
pop
test
jb
in
fild
adc
add
pop
repz
imul
repz
scas
push
push
mov
(bad)
icebp
rol
cwde
rcr
pop
cmp
ss
loope
sbb
mov
es
gs
fstp
pop
fimul
jne
mov
arpl
es
and
(bad)
ret
xlat
push
in
(bad)
ins
sub
push
push
(bad)
out
movs
pop
out
imul
enter
lods
shl
fidiv
ins
mov
mov
xlat
cmp
call
into
pop
mov
stos
xchg
xchg
jp
mov
xor
cmp
xchg
cwde
mov
sub
inc
xchg
mov
clc
mov
xchg
mov
mov
in
fimul
in
jecxz
hlt
ficomp
shl
pop
xor
mov
cmp
mov
add
and
popa
and
inc
cdq
cli
adc
cmc
lods
jle
ret
dec
pop
mov
xchg
sbb
mov
or
aaa
sbb
mov
aad
cwde
call
cmps
enter
or
rcr
add
lock
pop
mov
or
shl
cmp
test
pop
inc
mov
mov
xlat
push
pop
jb
(bad)
js
loop
aaa
mov
shl
push
adc
js
data16
fsubr
pop
mov
jl
shl
imul
shl
sbb
sbb
mov
fnstcw
icebp
or
(bad)
mov
mov
lea
or
mov
lea
scas
loop
jns
xchg
sbb
adc
adc
out
xchg
neg
repz
gs
xchg
aas
xor
push
adc
adc
and
ds
cmp
ja
call
lock
(bad)
jmp
mov
push
or
inc
jmp
out
out
dec
test
xor
jno
out
add
push
loop
mov
jnp
add
fcomp
fisubr
mov
jae
pop
test
xchg
sbb
push
and
mov
pop
sbb
cld
xchg
push
push
(bad)
xor
sbb
shl
sub
or
jmp
in
mov
push
xchg
pusha
es
or
in
retf
test
addr16
ins
pop
iret
in
popf
in
pop
in
jo
mov
add
sub
iret
fistp
leave
es
les
lea
push
shl
pop
ds
imul
adc
call
rcr
ja
lods
jae
inc
and
or
je
popf
lods
repz
sahf
mov
jmp
call
xchg
dec
mov
bnd
dec
fadd
mov
not
fst
xchg
icebp
push
mov
xchg
cmc
lds
mov
aas
inc
movs
repz
cli
inc
jp
mov
outs
dec
loope
xchg
out
retf
sub
mov
ret
adc
int
sub
(bad)
aam
xor
and
jb
mov
push
cmp
ja
sbb
popf
cmp
inc
or
xor
inc
xor
jnp
pop
jecxz
jg
gs
retf
sbb
dec
ins
mov
inc
dec
lods
xor
lahf
iret
jle
ror
mov
clc
fs
dec
or
dec
inc
sbb
jae
rcr
or
dec
push
in
inc
stos
mov
inc
jle
arpl
mov
movs
les
pushf
loop
mov
(bad)
(bad)
icebp
or
cmp
mov
clc
adc
arpl
lahf
repnz
rcr
mov
retf
ins
test
add
ror
and
mov
sbb
fisub
mov
jle
mov
xor
lods
adc
pop
dec
mov
inc
fcomp
inc
scas
clc
push
jg
cmp
cmps
xchg
mov
cmps
and
and
or
add
mov
mov
scas
push
movs
out
push
sti
fwait
hlt
cwde
add
sti
jp
std
out
inc
enter
push
sbb
sub
xchg
repz
int3
inc
mov
ja
jp
(bad)
xor
inc
sahf
mov
add
mov
cmp
jns
inc
not
test
jge
cmps
add
cmp
or
xchg
cdq
add
jp
ja
(bad)
stos
sub
mov
push
stos
mov
sub
jecxz
dec
sub
in
cmp
sub
dec
setns
push
push
xchg
pop
push
or
mov
imul
sub
int3
into
sysret
int3
aaa
cli
jo
pop
out
and
lds
movs
je
sbb
(bad)
dec
pusha
out
rol
clc
fisubr
loop
cmp
das
loope
outs
mov
ss
mov
in
mov
and
out
mov
xchg
add
pop
mov
shr
pushf
in
lea
inc
inc
add
sub
push
repnz
sbb
data16
loope
test
sar
nop
inc
test
or
popa
fisubr
fldenv
sub
push
cmp
ret
dec
dec
and
and
or
xor
imul
leave
mov
xchg
push
jmp
fcomp
out
mov
pop
ret
push
repz
icebp
dec
sar
adc
xchg
push
fwait
sbb
xchg
push
jno
jecxz
inc
mov
and
imul
xchg
sub
or
cmc
xchg
mov
retf
sbb
ltr
test
pop
or
popf
adc
mov
rcl
icebp
jae
mov
mul
push
sbb
lods
call
mov
(bad)
cs
or
sar
retf
mov
push
dec
inc
pop
mov
inc
push
test
push
ror
mov
fist
push
push
mov
mov
inc
fdivr
or
repz
fbld
xchg
push
scas
cli
inc
or
cli
mov
sahf
test
xlat
lods
mov
push
mov
ds
enter
(bad)
lods
mul
inc
mov
or
dec
(bad)
mul
imul
outs
add
xlat
shl
repnz
test
retf
sub
iret
xchg
mov
mov
mov
leave
mov
dec
das
fcomip
jmp
ret
hlt
nop
or
dec
js
das
jae
cwde
xor
and
sub
xor
pop
xchg
xchg
xchg
xchg
inc
sbb
sub
aad
or
cmp
jl
inc
add
arpl
vmaxps
mov
pop
aaa
(bad)
stos
xlat
pop
loopne
mov
outs
aam
xor
push
rcl
mov
int
and
inc
push
je
mov
jg
jnp
mov
or
inc
adc
sbb
xlat
jnp
stos
adc
mov
xchg
imul
inc
(bad)
fmul
push
in
mov
jae
call
inc
call
cdq
dec
adc
es
popf
xchg
mov
pop
ret
clc
sub
loopne
outs
and
imul
xchg
fdiv
outs
out
nop
inc
push
push
mov
cmp
loopne
(bad)
hlt
mov
ins
aam
hlt
in
imul
jp
mov
adc
stc
or
dec
sub
inc
popf
or
mov
pop
movs
jb
imul
retf
jne
adc
call
(bad)
rol
push
cmp
push
and
into
shr
xor
and
sbb
mov
aaa
push
cmps
inc
xchg
rcl
xor
icebp
arpl
jl
mov
jge
push
push
sbb
pop
dec
mov
mov
push
loope
lahf
retf
cmp
adc
scas
inc
cli
mov
push
cwde
mov
mov
or
pop
ss
movs
stos
or
jmp
pushf
cwde
mov
imul
sub
test
sbb
enter
xor
inc
mov
pop
jo
lock
mov
aad
cmp
bound
push
sti
jp
sub
int
pop
xchg
or
or
mov
inc
push
fadd
or
sbb
bound
mov
xor
push
jge
sbb
mov
das
loopne
js
xchg
pop
sbb
dec
lods
sub
push
mov
fdiv
movs
shr
sar
aad
mov
pusha
and
mov
nop
xchg
fidivr
mov
(bad)
push
push
out
lods
aaa
xchg
(bad)
test
pop
pushw
mov
dec
pop
fnstcw
js
iret
out
push
cs
rol
scas
or
addr16
leave
icebp
loop
(bad)
push
pop
push
imul
cld
int3
pop
inc
sbb
sbb
sti
sub
fadd
add
cs
cs
adc
and
cmp
or
mov
jnp
xchg
cli
test
in
mov
mov
push
pop
adc
inc
pop
add
push
hlt
imul
xor
mov
inc
movs
in
jbe
dec
stc
mov
fadd
aad
int3
cmp
lods
push
cs
repz
and
sub
scas
adc
jnp
bound
and
jge
jl
or
gs
(bad)
div
gs
std
pushf
jnp
int
pop
sti
fsubr
jnp
cmc
xchg
xchg
clc
xlat
mov
out
inc
xchg
loope
sti
fld
out
xor
mov
fild
jmp
imul
mov
(bad)
cmc
mov
sbb
addr16
xchg
shr
imul
or
push
inc
test
and
push
ds
pop
inc
jbe
mov
daa
clc
loop
ins
sbb
cmc
leave
xor
pop
mov
ror
test
(bad)
stc
inc
ror
out
shr
pop
pop
pop
mov
inc
(bad)
std
ret
and
repz
mov
push
mov
add
(bad)
pop
mov
fldcw
push
jnp
cmp
sub
jp
sahf
add
clc
mov
lods
cmps
push
out
pop
cmp
mov
(bad)
xchg
jb
add
dec
gs
fist
aaa
sbb
xchg
jl
cmp
pusha
fidivr
dec
jmp
jmp
jecxz
and
(bad)
shl
or
mov
pop
mov
sar
fs
xor
xor
out
xor
ret
and
aad
outs
test
cmp
cmps
pop
or
mov
mov
sbb
ds
cmp
xor
fcomp
cdq
adc
and
fsub
leave
rcr
cdq
sti
fs
(bad)
cmp
adc
jmp
dec
or
sub
xchg
jecxz
test
or
pusha
fs
jg
fmul
mov
sub
adc
(bad)
sbb
xlat
(bad)
sbb
loop
outs
fmul
stos
xor
sub
dec
push
sbb
inc
lds
xor
and
fsub
shl
sub
mov
lock
fcmovnb
ret
mov
dec
pop
ins
aas
call
jae
sub
in
inc
cmps
add
inc
enter
call
ds
pusha
xor
mov
stc
mov
aam
mov
xchg
pop
push
daa
aad
push
cmp
or
inc
outs
or
addr16
xchg
cmp
call
jbe
int3
mov
adc
cmps
adc
and
jnp
mov
mov
jle
mov
and
into
inc
mov
(bad)
outs
aaa
stos
sbb
data16
cmc
mov
jecxz
cs
pop
test
fdivrp
push
cmp
inc
dec
loopne
pop
sbb
xor
ror
lahf
dec
aaa
push
sub
sub
cmp
cmp
push
mov
repz
lds
mov
stos
mov
test
jmp
cli
ins
or
ja
pop
mov
dec
mov
shr
aad
mov
lahf
push
ins
aad
mov
(bad)
pusha
jge
xchg
add
cmc
pop
mov
test
adc
xchg
xor
jns
xchg
pusha
sub
cmps
xchg
or
mov
scas
dec
xlat
or
gs
out
or
pop
cld
pusha
mov
sbb
cmp
stos
jmp
outs
add
test
movd
sbb
mov
sub
in
add
adc
jecxz
mov
mov
inc
xchg
dec
sub
dec
sahf
xchg
movs
mov
xchg
cwde
movs
stos
int3
push
sahf
add
ret
fbstp
xor
fdiv
(bad)
mov
push
(bad)
je
sbb
mov
leave
add
pop
cmp
sub
and
pop
adc
fmulp
clts
jmp
mov
test
dec
cmc
enter
xor
fistp
imul
push
nop
mov
adc
lds
mov
push
lds
jne
mov
mov
popa
xchg
push
(bad)
xchg
stos
cmp
addr16
sub
mov
pop
pusha
int3
pop
gs
sbb
jno
add
test
into
movs
mov
popa
pop
shl
pop
xchg
pusha
and
lods
and
jns
div
jg
loop
sti
lods
fwait
cmp
mov
adc
jns
out
dec
lea
mov
xchg
push
ss
dec
push
xchg
hlt
mov
mov
adc
repz
and
push
aaa
mov
sub
push
fimul
mov
pop
push
inc
dec
cmp
movs
and
xor
in
adc
stos
jl
and
sahf
pop
cmovne
mov
mov
aam
mov
cmp
dec
adc
movs
stos
aad
ret
arpl
nop
sti
ds
mov
repz
outs
or
xchg
dec
xchg
in
iret
call
scas
aaa
mov
repz
and
cmp
hlt
icebp
adc
ret
fsubr
mov
pop
loopne
or
or
ins
push
in
xchg
call
pop
int3
push
cmp
add
inc
imul
cwde
xchg
jle
not
push
push
xchg
inc
mov
mov
push
inc
js
mov
push
iret
(bad)
xor
int3
mov
(bad)
sub
inc
out
push
sti
dec
test
or
pop
stos
es
jmp
dec
loopne
xor
push
sbb
mov
and
je
addr16
sub
lea
mov
sub
lock
mov
ss
mov
imul
add
ins
xchg
pop
pop
(bad)
into
sub
imul
inc
add
xor
sub
push
ss
fsubr
or
pop
(bad)
mov
mov
push
callw
jb
jp
mov
jo
push
inc
iret
add
cld
mov
mov
and
dec
adc
jle
iret
add
mov
hlt
aam
fistp
fwait
jmp
sub
xor
(bad)
imul
or
mov
pop
ins
and
inc
mov
fistp
dec
int3
or
mov
mov
shl
ret
not
or
jge
jl
cdq
leave
and
ds
and
(bad)
mov
mov
push
push
fmul
mov
mov
fcom
xor
or
jg
in
adc
int
jae
or
adc
or
je
jo
xor
adc
out
jle
mov
out
(bad)
retf
imul
jge
pop
fldcw
data16
sbb
daa
sub
or
js
pop
hlt
xchg
inc
outs
xor
and
mov
ret
call
push
sub
add
jo
pop
test
push
in
repz
add
xchg
nop
in
hlt
xchg
pop
jne
ret
loop
jbe
idiv
sbb
(bad)
mov
inc
cdq
xlat
ja
mov
cli
jnp
shl
dec
addr16
xor
pusha
mov
in
mov
stc
ret
mov
xchg
idiv
and
retf
ficom
mov
mov
adc
out
cmp
shr
ins
dec
daa
shl
mov
and
inc
inc
je
je
pop
pop
cli
pop
adc
fucomi
ror
repnz
(bad)
fist
sub
dec
mov
push
ss
aas
iret
in
push
cmp
jmp
pop
jg
mov
aaa
rol
mov
gs
(bad)
imul
pop
sbb
stc
loopne
pop
mov
das
gs
pusha
bound
inc
add
sbb
out
fisttp
imul
retf
loopne
sbb
les
call
out
sub
scas
movs
sar
adc
inc
cmp
jg
jnp
aam
push
and
mov
rcr
loop
or
ret
adc
cmps
(bad)
(bad)
mov
xor
adc
add
out
dec
iret
data16
data16
inc
dec
xchg
popa
fimul
pop
xchg
mov
mov
mov
xor
push
addr16
jmp
mov
out
mov
in
add
imul
sbb
imul
call
fdivp
nop
test
outs
inc
jmp
scas
into
pop
adc
dec
and
push
in
dec
pop
mov
mov
inc
sbb
retf
sbb
xchg
repnz
jmp
jmp
mov
mov
test
je
jns
pop
mov
aad
icebp
xchg
dec
scas
mov
push
adc
sbb
nop
fs
sub
inc
push
(bad)
call
sub
add
(bad)
xlat
and
sbb
adc
pusha
in
jno
jmp
imul
add
or
jmp
push
iret
aad
cmps
pusha
movs
push
test
scas
mov
xor
scas
xor
fisubr
addr16
mov
ds
retf
dec
retf
test
push
movs
mov
retf
sub
mov
pop
mov
or
hlt
xchg
and
inc
dec
loop
lock
and
ds
add
or
in
and
(bad)
ins
cmp
push
lea
mov
es
test
jno
push
cmp
loop
push
mov
jns
rol
ins
cmp
mov
cdq
push
pop
loop
push
test
scas
adc
inc
stc
jb
sub
push
lods
lea
mov
ins
and
stos
jle
mov
sbb
mov
jno
stos
out
inc
jge
ins
sbb
inc
loopne
inc
xchg
sbb
shl
sbb
push
sbb
aam
lahf
inc
outs
or
xor
movs
aaa
xchg
adc
(bad)
into
pop
sub
in
push
jmp
lods
hlt
(bad)
ss
fwait
mov
in
jbe
pop
jns
add
mov
fmul
mov
repz
mov
pop
mov
test
shl
rcl
fistp
mov
stos
es
xchg
xchg
xor
xor
mov
fsub
inc
adc
lock
mov
sbb
addr16
test
mov
sbb
movs
push
add
adc
xor
xchg
inc
stc
add
xchg
mov
pop
jmp
fisubr
popf
add
inc
bound
fxam
ins
sbb
std
repz
mov
jnp
call
pop
scas
inc
sub
imul
jne
cwde
jne
sbb
in
jecxz
add
xor
mov
cwde
sbb
es
dec
xchg
ficom
xor
leave
lahf
jmp
pusha
sbb
dec
xchg
sub
(bad)
push
pop
inc
cmp
xor
ja
ins
jmp
or
aaa
mov
and
mov
in
push
sub
fwait
les
inc
bound
xor
ffreep
ins
dec
ja
and
fdiv
pop
fwait
lock
adc
repz
or
jnp
test
mov
mov
xlat
(bad)
jb
xchg
test
cmp
mov
mov
call
and
adc
jbe
fstp
std
in
xchg
and
jmp
mov
push
aaa
inc
sbb
sbb
mov
stos
call
dec
into
ffreep
loope
loop
popa
jge
push
sbb
or
xchg
mov
cmp
mov
cmp
xchg
outs
xchg
(bad)
cmp
(bad)
data16
push
add
dec
and
pop
js
and
(bad)
pushf
in
cmp
add
mov
or
cwde
std
out
push
xor
sbb
imul
mov
mov
and
sub
push
adc
jge
in
out
ss
mov
out
clc
cmp
scas
sub
mov
loop
push
arpl
mov
push
ds
push
sub
jmp
fdivr
icebp
add
and
mov
out
ins
mov
sbb
imul
rcr
push
fistp
mov
addr16
mov
mov
popf
xchg
add
add
add
ja
xor
cwde
icebp
(bad)
fmul
cmp
into
cmps
sbb
add
pushf
aas
enter
xchg
movs
push
in
lea
mov
sub
dec
mov
push
sub
add
cs
pmulhw
dec
xor
dec
dec
xchg
aaa
inc
mov
mov
and
rcl
add
inc
cmp
xor
(bad)
inc
xor
outs
rol
sar
mov
addr16
xchg
push
dec
pop
ret
cs
pop
push
inc
in
out
stc
xor
stos
jb
(bad)
cmp
jmp
(bad)
out
popf
rcr
inc
sbb
sub
mov
mov
hlt
pop
retf
sub
sbb
rol
mov
pop
cld
pusha
adc
das
jmp
int3
xchg
pusha
and
push
(bad)
fisubr
sbb
adc
mov
mov
in
(bad)
add
adc
test
inc
leave
jno
int3
fdiv
jle
or
mov
ins
sub
pusha
xchg
push
add
pop
out
dec
popf
pop
dec
inc
mov
sub
xlat
fild
jno
jg
xor
jns
jmp
xchg
pop
ds
and
test
xor
mov
out
add
mov
ins
mov
in
sbb
outs
xchg
outs
jne
movs
out
inc
shr
pop
dec
cmps
popf
inc
ror
addr16
rol
dec
add
fadd
clc
cli
push
mov
shr
cmps
mov
(bad)
sti
mov
pop
jno
jle
fdiv
test
test
or
mov
push
xor
aam
and
xor
ficomp
outs
cmp
outs
fsubr
mov
jle
bound
iret
popa
push
out
leave
push
add
mov
loop
loope
lods
push
push
sub
pushf
stc
mov
scas
and
cmp
mov
cmc
mov
(bad)
push
int3
mov
jno
mov
adc
dec
jecxz
les
xor
push
inc
push
sbb
in
add
mov
sbb
sub
pop
in
sbb
mov
jb
fdiv
jno
mov
xor
cmc
(bad)
xor
movs
sub
cmps
xor
cs
idiv
dec
inc
sub
sbb
hlt
jmp
lahf
(bad)
push
push
cmp
call
scas
mov
adc
push
mov
nop
(bad)
loopne
jg
jo
pop
retf
in
out
je
je
ror
shl
daa
inc
sub
cwde
dec
cmps
das
dec
mov
inc
xchg
add
call
or
add
call
jne
add
loop
in
test
add
mov
sahf
mov
adc
fadd
test
cmp
call
ret
adc
jbe
push
lahf
cmp
call
ins
jge
xor
data16
stc
pop
jle
out
int
(bad)
retf
xor
and
scas
imul
jmp
retf
lock
pop
sub
xor
in
adc
dec
pop
neg
(bad)
inc
push
pop
in
push
jge
pop
xchg
xchg
das
or
pop
fld
call
ins
jno
sub
dec
(bad)
jp
xchg
push
shl
dec
(bad)
popa
dec
xchg
shr
rcr
shl
cmps
sbb
and
test
inc
jecxz
jmp
loopne
loope
cmps
ins
sub
sti
and
jne
dec
es
adc
or
dec
mov
jb
jmp
int3
stos
sub
xor
push
or
mov
scas
xchg
inc
lds
rcr
inc
aaa
inc
js
cmp
cdq
mov
or
mov
int
inc
pushf
jle
sahf
dec
inc
in
push
and
aas
je
daa
mov
fild
shr
mov
in
sbb
xor
and
aas
mov
xchg
shr
or
jno
push
rcr
out
fmul
cli
xchg
(bad)
dec
ins
retf
mov
pusha
sub
clc
sub
(bad)
inc
fcom
clc
sti
jle
inc
nop
and
mov
mov
adc
xchg
dec
ror
inc
xchg
stos
bound
adc
ins
push
xchg
stos
xchg
cdq
sbb
mov
mov
mov
push
add
in
enter
icebp
inc
rcr
jp
cmp
or
xlat
les
sbb
fwait
ds
or
cmc
cmp
sub
(bad)
sar
leave
sub
out
fnstenv
xchg
cli
jo
xor
cmps
push
or
movs
stos
jmp
fcmovb
jbe
dec
jl
enter
imul
mov
in
lds
sub
(bad)
lahf
sbb
mov
cmps
pushf
jl
sbb
div
mov
jae
and
iret
mov
imul
fwait
aas
sbb
loopne
push
inc
push
nop
add
loop
retf
fnstsw
adc
sti
jge
mov
fist
inc
mov
iret
ret
pusha
rcr
ins
ja
push
loop
sub
pop
push
ds
iret
in
cwde
test
and
xor
jne
fs
and
xor
mov
jne
dec
lds
stos
test
rcl
adc
stos
or
aaa
jge
clc
sbb
call
dec
adc
imul
and
mov
jge
or
repnz
in
icebp
and
dec
xchg
xchg
sbb
jns
mov
das
pop
push
dec
lods
in
push
and
pop
gs
(bad)
mov
rol
out
jecxz
pop
and
adc
cwde
outs
add
dec
lock
inc
pop
sahf
adc
inc
cmp
inc
loopne
lods
xor
mov
dec
rol
jb
stc
add
sub
inc
xor
je
mov
jmp
fistp
ja
xchg
(bad)
fnstsw
test
inc
or
movs
xchg
mov
cdq
not
add
push
pop
scas
inc
in
out
add
lahf
out
jle
in
mov
dec
repnz
repz
mov
pop
add
xchg
stos
imul
inc
ret
icebp
shl
dec
not
jge
pop
sbb
cdq
sub
sub
sbb
fs
jmp
fistp
mov
cmp
jno
and
(bad)
movs
cmp
xchg
cmp
or
mov
sar
(bad)
cmp
lods
aaa
add
jb
add
push
pop
mov
jmp
sbb
mov
mov
rcl
in
test
not
and
ja
mov
jmp
push
loopne
retf
int
repnz
and
and
push
jmp
jg
lods
mov
and
adc
shl
lahf
xlat
dec
cmp
mov
mov
and
sbb
cs
and
xlat
mov
addr16
ret
cmp
(bad)
dec
ror
inc
aas
cmp
stos
mov
aad
jg
popf
jne
xor
sub
push
test
dec
jge
and
out
mov
jmp
sub
aas
in
xor
idiv
scas
loop
loopne
jge
mov
xchg
sub
sub
adc
push
lods
jo
xchg
push
push
push
push
sub
lods
in
jmp
push
push
sub
pushf
add
ror
sub
mov
xchg
pusha
and
xlat
or
jnp
outs
fidivr
in
mov
lods
sbb
mov
mov
push
fwait
lods
push
cmp
js
xor
pop
mov
mov
mov
mov
js
pop
mul
mov
jmp
push
push
hlt
scas
pop
int
sbb
cmp
push
mov
mov
mov
in
mov
nop
imul
push
push
mov
xchg
sbb
in
mov
lahf
cmp
pop
or
mov
jmp
lods
cmp
and
inc
test
add
sub
dec
add
icebp
loop
push
sbb
jl
js
(bad)
pop
lahf
push
and
outs
xlat
lods
xchg
mov
pop
push
pop
int
test
popf
inc
test
push
out
out
pusha
gs
test
fimul
sub
mov
pushw
test
sub
and
jb
and
test
sub
mov
shr
sbb
in
call
dec
xchg
call
adc
xchg
test
sub
mov
xchg
fucomi
es
gs
jb
xchg
and
sbb
add
das
(bad)
ficom
mov
dec
fs
jmp
xchg
inc
cmp
inc
stos
jo
(bad)
cmovp
xchg
fs
mov
enter
jb
in
int
or
ror
fimul
sub
sub
out
cmp
mov
push
ret
rol
cmps
out
mov
arpl
(bad)
adc
dec
xchg
and
mov
jge
push
(bad)
fdiv
pusha
xlat
in
mov
mov
mov
mov
sub
(bad)
and
and
ins
adc
push
push
sbb
inc
ins
out
push
cmp
pop
sub
inc
unpckhps
jne
pop
or
mov
push
mov
repnz
lock
test
cmp
ret
cmp
lock
xchg
lods
jne
in
popa
arpl
mov
mov
pop
xchg
mov
add
in
add
repnz
mov
dec
or
push
popa
retf
scas
xchg
retf
leave
js
out
push
xchg
mov
(bad)
sub
xor
scas
adc
(bad)
ins
es
push
fs
lock
cmp
in
mov
mov
leave
add
adc
js
cmp
repnz
test
jmp
inc
push
int
inc
out
and
jns
test
in
jl
fcmovb
push
hlt
push
out
jp
cmp
lds
jmp
jmp
dec
outs
sbb
sub
call
and
xchg
cli
mov
dec
sahf
lods
pop
fmul
cmp
ja
imul
push
rcr
add
call
mov
in
or
xor
mov
dec
xor
add
inc
mov
out
repz
jne
mov
mov
add
(bad)
imul
jo
and
or
loope
ins
pop
movs
jnp
stos
inc
call
movs
xchg
fld
jbe
push
adc
stc
lea
mov
mov
out
mov
cmp
mov
shr
into
in
mov
cld
pushf
xor
sub
jno
jp
push
jg
in
cmps
retf
lds
sub
cs
adc
inc
lea
pop
and
inc
pop
add
ror
fxch
mov
jbe
mov
xchg
scas
mov
mov
jno
lods
enter
sbb
loopne
out
mov
mov
cld
and
into
dec
loope
mov
(bad)
idiv
loopne
in
loope
mov
gs
popf
lods
in
jge
jge
ret
(bad)
int
xchg
shl
sbb
and
out
mov
mov
ret
cdq
dec
push
pop
cli
adc
and
xor
jecxz
xlat
sbb
and
and
imul
idiv
or
pop
mov
inc
add
dec
adc
das
mov
es
xor
jnp
shr
mov
mov
adc
cmp
mul
(bad)
jge
imul
mov
mov
xor
pusha
lea
push
leavew
outs
push
push
xchg
(bad)
lds
lahf
mov
jp
jno
mov
(bad)
pop
add
fld
pop
sub
clc
jp
mov
in
mov
ror
leave
add
cwde
loop
movs
outs
gs
xchg
xchg
xor
fst
cmp
popf
sahf
xor
out
jge
mov
js
jmp
xlat
jbe
cmp
mov
mov
mov
adc
inc
inc
test
imul
aad
cwde
sub
mov
stos
dec
jle
lock
fist
popa
(bad)
fsubr
jb
inc
push
iret
into
sbb
mov
int3
xchg
xchg
xor
push
cld
test
push
outs
cmps
call
jp
loope
fstp
jg
je
ret
icebp
imul
mov
mov
mov
loopne
mov
or
add
adc
add
and
call
ficom
adc
adc
mov
xchg
inc
movs
mov
in
(bad)
or
jmp
or
sbb
cdq
or
in
les
mov
test
add
add
push
dec
loope
mov
pop
push
mov
mov
out
add
xor
pop
mov
and
dec
stc
loopne
dec
and
pusha
pop
pop
sub
scas
imul
sub
lea
xor
addr16
mov
pop
add
test
and
mov
pop
cmp
retf
(bad)
push
arpl
cdq
idiv
je
push
fsub
dec
or
cmp
and
out
add
shl
adc
stos
push
cmp
and
jae
mov
ins
xchg
fdivp
dec
inc
xchg
or
dec
aas
repz
lods
mov
pusha
xchg
dec
pop
pop
data16
pop
xor
fwait
mov
jmp
or
int3
mov
jb
cld
jbe
sub
push
push
pop
or
xchg
adc
jle
xor
outs
mov
pusha
or
jo
adc
mov
fnstsw
dec
ss
cmp
mov
lods
das
retf
popf
loopne
outs
lea
scas
(bad)
xchg
mov
sbb
leave
and
cdq
xchg
adc
jle
mov
sbb
outs
retf
fwait
sub
aas
call
mov
cs
xor
pop
push
cmp
mov
enter
fnstenv
push
push
sub
mov
nop
xor
popa
(bad)
xchg
sub
cmc
xchg
pop
push
or
and
jecxz
ret
sbb
cmp
mov
aas
ss
and
push
jo
jne
dec
add
jbe
ror
mov
jo
pop
shl
iret
sbb
arpl
sub
xor
push
lods
jns
in
sub
sbb
scas
sub
loope
stc
push
ret
dec
scas
outs
jle
rcr
int
std
cld
jg
movs
pop
ftst
adc
mov
mov
leave
adc
repz
adc
repz
sub
(bad)
retf
fcom
mov
iret
ret
lea
outs
out
add
js
push
sub
cmp
mov
xchg
inc
or
div
mov
neg
stos
add
jae
dec
popa
push
in
ds
(bad)
in
cmp
xchg
add
pushf
inc
rol
fadd
test
mov
pop
mov
iret
and
mov
cs
sbb
sub
push
and
jmp
sbb
pop
and
sub
movs
mov
cdq
out
aaa
repnz
xor
sbb
jno
scas
stos
aam
ret
das
mov
sub
int3
cmp
sub
mov
dec
add
mov
nop
out
jbe
iret
and
cmps
pop
add
dec
mov
cwde
add
stos
adc
ds
fisttp
mov
aad
fidivr
into
pop
mov
dec
(bad)
aaa
xor
xchg
push
std
inc
cwde
call
pop
push
mov
or
int
(bad)
sbb
sbb
fnstcw
xor
mov
push
popf
dec
shl
rcr
mov
pushf
mov
xchg
test
add
cmp
stos
loope
sbb
ins
mov
adc
xchg
loope
fdiv
xchg
lods
dec
test
adc
mov
xor
push
and
mov
xchg
xchg
jmp
pop
pop
pop
out
test
movs
dec
outs
outs
xchg
adc
push
push
sbb
dec
jnp
or
repz
push
mov
sbb
push
mov
add
cdq
add
mov
sbb
pop
fdiv
xchg
(bad)
outs
mov
(bad)
pop
cmp
mov
dec
rcl
std
dec
xlat
clc
mov
sbb
rcr
and
push
sub
loop
mov
out
inc
iret
je
inc
iret
nop
rcr
mov
inc
dec
jge
arpl
daa
daa
xor
xor
jmp
lds
and
fstp
dec
pop
push
out
cmp
dec
pop
scas
sbb
xchg
inc
ficom
cmps
aaa
movs
cmc
cld
xchg
pop
imul
inc
(bad)
cmp
sbb
dec
cmp
xlat
inc
int
int3
aas
test
pushf
movs
mov
pop
outs
lods
ret
inc
push
mov
stc
dec
test
(bad)
jo
movs
mov
xlat
adc
pop
(bad)
aaa
scas
xchg
jns
outs
sub
fistp
jmp
mov
movs
test
in
xchg
add
inc
mov
jp
push
aas
scas
cs
pop
jmp
cmps
or
push
std
dec
pusha
mov
cmp
jae
sub
lahf
(bad)
out
loop
jns
or
in
rcl
(bad)
loopne
ss
pop
scas
das
dec
ror
mov
push
dec
popf
inc
inc
test
in
mov
cwde
inc
aas
dec
and
sbb
int
fs
fsubr
jmp
cmpxchg
jbe
sub
mov
xlat
mov
cmp
or
cmp
xor
mov
inc
dec
outs
cmc
push
ins
aas
ret
ror
lods
mov
sub
and
mov
scas
ja
adc
into
lahf
loope
call
imul
push
adc
mov
jmp
int3
repz
daa
and
sbb
push
movs
cmp
lods
add
mov
xchg
and
pop
or
daa
inc
repnz
sub
je
jp
data16
sbb
mov
sub
movs
add
push
int3
or
mov
dec
loop
jmp
repz
pop
push
mov
stc
leave
or
repnz
mov
and
aaa
add
dec
mov
fpatan
sub
dec
enter
test
sar
outs
dec
fldcw
fimul
pop
sub
(bad)
push
shl
pop
enter
pop
les
dec
fwait
cmps
sbb
repnz
ds
xchg
int
arpl
inc
(bad)
dec
ins
adc
bnd
scas
and
enter
cmp
loopne
push
inc
and
adc
frstor
out
push
mov
addr16
sar
adc
mov
mov
in
cwde
inc
repnz
aas
(bad)
jp
sbb
xchg
int3
mov
push
or
aam
mov
mov
add
xchg
leave
(bad)
mov
arpl
mov
cmp
inc
or
rol
outs
add
cs
push
vmovdqu
icebp
stos
clc
pop
das
jmp
or
pop
push
jge
outs
jg
adc
daa
(bad)
repnz
repnz
pop
push
mov
int
inc
xor
inc
mov
push
mov
out
mov
(bad)
jp
push
imul
test
jp
loope
push
mov
fsubp
aad
cmp
sub
(bad)
mov
leave
lock
xchg
xor
test
sahf
out
inc
fnstcw
pop
ins
cmp
sub
lea
mov
shl
pushf
inc
mov
gs
imul
test
mov
int
int3
call
push
fdivr
adc
das
push
mov
clc
cdq
out
dec
test
bound
push
scas
inc
retf
jge
xor
push
ja
dec
xor
nop
inc
in
gs
nop
sbb
popf
inc
movs
movs
push
mov
sahf
push
cmp
xchg
repnz
(bad)
push
jns
fnstenv
adc
out
and
mov
cdq
mov
sbb
mov
sar
mov
pop
nop
int3
in
add
rcr
arpl
mov
fcmovnu
pop
nop
pop
or
mov
dec
fbld
jae
popf
or
out
xchg
rcl
movs
sub
jg
adc
mov
sar
loop
xchg
es
outs
jg
push
cmp
inc
(bad)
xchg
sub
(bad)
enter
push
call
cs
nop
mov
jbe
les
int
xor
aad
pop
push
sbb
sahf
aas
mov
xchg
repz
mov
pop
lds
adc
stc
or
lahf
cmp
lds
sahf
xchg
scas
enter
pop
mov
imul
xchg
jecxz
icebp
mov
repz
push
jb
push
mov
imul
pushf
mov
jg
cmp
sub
test
lods
inc
pop
mov
mov
ins
pop
cli
cli
nop
loope
fadd
inc
inc
sbb
pop
add
mov
adc
inc
test
fcomp
inc
dec
pop
cmp
cmc
cs
xor
cmp
in
sbb
out
push
mov
pop
outs
(bad)
xor
iret
retf
push
adc
loop
xor
inc
js
dec
inc
add
push
arpl
repz
jns
push
cmp
mov
mov
xchg
mov
sahf
bound
dec
(bad)
sbb
sub
lock
retf
pop
jbe
push
push
xchg
xor
push
and
add
lods
(bad)
push
adc
bound
mov
pop
mov
xchg
icebp
test
and
jecxz
call
push
dec
fcmovu
xchg
inc
sub
repnz
inc
addr16
in
icebp
or
cmp
xchg
rol
push
cmp
pop
mov
call
sub
daa
and
jno
dec
cld
mov
xchg
mov
sub
jnp
xor
pusha
je
in
pop
lock
xor
and
lods
faddp
lea
ficomp
dec
mov
adc
fild
in
mov
fidiv
cmps
jmp
cdq
cwde
jmp
push
cmp
ins
adc
scas
pop
jl
cwde
jb
pusha
mov
mov
je
movs
clc
shl
xor
jmp
pusha
or
(bad)
aaa
arpl
lock
xor
inc
adc
(bad)
add
cdq
and
dec
xchg
jmp
push
xchg
out
mov
mov
shl
jmp
stc
sbb
sub
mov
out
mov
sbb
add
fld
aaa
fcmove
cmp
and
imul
add
inc
pop
or
sahf
icebp
pop
push
std
jno
int3
sub
mov
jl
mov
mov
dec
cmp
adc
adc
mov
into
mov
xor
jl
fs
mov
xchg
sbb
adc
mov
fcom
adc
sbb
mov
scas
inc
mov
scas
inc
outs
xchg
push
mov
data16
xchg
aas
pop
dec
into
movs
out
aad
xchg
fwait
(bad)
test
stos
int
ss
inc
jns
dec
cmp
bound
int
mov
popf
lods
gs
rcl
(bad)
dec
repnz
test
jle
psrld
xor
inc
call
adc
mov
je
jmp
addr16
jp
or
dec
popa
lds
sub
movs
std
rol
pop
imul
cmp
inc
test
cwde
adc
enter
pop
adc
mov
jmp
movs
adc
mov
test
push
mov
les
cwde
das
mov
inc
sbb
sbb
fidivr
in
sahf
bound
in
rol
mov
lea
push
in
cwde
jns
jb
adc
in
jns
jecxz
test
fcmovb
in
repz
cdq
fwait
jne
mov
es
jg
sub
rep
mov
add
cs
scas
(bad)
inc
cli
pop
nop
sbb
adc
adc
(bad)
jbe
push
sbb
in
scas
clc
mov
cdq
pop
push
mov
ds
inc
mov
rcl
push
call
adc
or
jno
add
sub
fwait
sub
in
adc
outs
lods
nop
fimul
rcl
leave
or
int3
pop
cmp
xor
or
jbe
push
(bad)
mov
ficomp
jo
cmp
outs
xor
cmp
cmp
dec
and
lds
and
sti
sbb
and
loopne
imul
and
ds
xchg
sub
into
jo
xchg
ror
dec
fidiv
jns
xor
enter
cdq
mov
inc
out
movs
stc
js
into
xchg
dec
push
mov
jns
push
pop
or
rcr
cmp
jnp
inc
inc
std
jmp
imul
mov
jmp
adc
add
into
in
fmul
jmp
jbe
rol
nop
mov
cdq
lods
push
push
cli
jb
mov
xlat
cmp
xchg
fs
jb
repz
dec
(bad)
xchg
jl
lds
fwait
adc
je
lock
(bad)
jp
imul
cmps
cld
sahf
jnp
xchg
out
in
mov
popa
xor
in
and
ret
adc
xchg
push
cmp
sub
sub
mov
mov
pop
(bad)
sbb
pop
repz
mov
lods
mov
push
sub
or
mov
mov
or
xchg
outs
lock
jmp
mov
mov
jp
fstp
cmp
nop
mov
popa
fist
outs
add
add
mov
mov
lods
mov
mov
sbb
(bad)
mov
or
lods
jne
pop
dec
test
aas
push
sti
test
movs
sbb
ja
xor
add
std
les
imul
jmp
inc
mov
outs
stc
ffreep
ins
sbb
dec
lods
pop
sub
sbb
mov
stc
js
mov
test
mov
cmps
mov
lock
ret
push
adc
out
out
stos
pop
addr16
inc
push
test
adc
lock
sbb
movs
xchg
test
dec
fwait
in
cmpps
jne
pop
mov
sahf
sub
push
or
xchg
ret
fimul
in
xor
xor
mov
or
out
stos
(bad)
fisub
pop
and
mov
pop
pushf
mov
sbb
movs
lods
out
setbe
push
jmp
hlt
pushf
(bad)
cmc
jmp
(bad)
push
aaa
ficom
dec
or
mov
cmp
xchg
pop
push
(bad)
test
imul
aas
add
xor
cmc
in
in
jp
(bad)
pushf
movs
xchg
xor
(bad)
fidiv
ja
mov
add
ret
fild
fcomp
ret
xchg
stc
push
jl
or
pop
ret
pop
sbb
mov
cmp
retf
fst
call
movs
or
add
add
mov
mov
repnz
into
dec
sar
aam
js
je
ds
hlt
fs
push
mov
push
dec
ss
icebp
(bad)
in
cmp
movaps
out
lds
fdivr
inc
leave
fs
pop
lds
aad
lahf
pop
and
xchg
cmp
stc
test
cmps
jbe
mov
frstor
daa
jo
adc
movs
push
mov
loope
jno
dec
and
sbb
ret
(bad)
lods
jg
xchg
(bad)
iret
mov
jecxz
pushf
in
sbb
mov
out
rcr
mov
or
push
pop
rcl
fcmovnb
cli
mov
aam
inc
popf
out
dec
adc
sub
push
fcmovb
push
mov
dec
sub
mov
and
in
pop
fidiv
fisubr
je
add
adc
(bad)
(bad)
sbb
lea
sub
je
lods
inc
xchg
shr
movs
sbb
dec
scas
jns
lock
bound
or
sbb
push
(bad)
sti
(bad)
pop
into
fldcw
inc
leave
lods
je
mov
mov
das
stos
and
push
dec
scas
ins
cmp
ret
xchg
push
mov
sbb
add
add
movs
xchg
add
xor
js
inc
jecxz
repz
adc
sub
imul
pop
add
xchg
(bad)
xchg
das
xchg
scas
dec
shr
pop
inc
pusha
pop
pushf
leave
ror
aaa
sbb
shl
add
loopne
or
cmc
fadd
push
jle
mov
or
mov
mov
jg
repnz
nop
or
daa
mov
push
or
inc
movs
add
inc
jnp
xchg
fsubr
xchg
leave
popa
fwait
sub
cmp
and
sbb
mov
stos
retf
mov
loopne
push
neg
push
scas
js
xchg
xlat
ret
lds
mov
mov
xchg
stc
push
out
or
mov
cli
fwait
add
jo
mov
adc
popa
call
daa
mov
and
bound
test
jge
scas
imul
mov
sub
jb
neg
stos
xor
mov
xchg
das
outs
jp
ficom
push
mov
adc
xchg
push
adc
mov
repnz
pop
les
sbb
call
loope
xchg
and
pusha
jg
stos
dec
out
data16
jno
xchg
sar
mov
ret
mov
frstor
ins
fdiv
outs
popa
popf
jecxz
rcr
jbe
dec
cld
fdiv
stos
add
clc
inc
in
mov
add
cwde
sbb
fidivr
mov
inc
pop
in
mov
xor
xchg
stos
loope
cmp
sub
mov
mov
out
and
mov
jne
in
aas
mov
(bad)
push
not
cmps
push
sbb
test
pop
js
div
jecxz
sar
xor
dec
das
mov
not
js
sbb
inc
sbb
sub
sub
push
lods
mov
ss
rol
sub
xor
imul
xor
js
pop
in
bndldx
imul
aas
fistp
pop
in
aam
mov
inc
scas
movs
xchg
adc
test
movs
mov
movs
scas
fisttp
aam
data16
adc
out
out
repz
xchg
jnp
in
aaa
ret
cdq
xlat
sbb
es
jo
inc
dec
in
mov
cdq
jno
shl
inc
mov
adc
cmp
adc
ss
pop
stc
loop
add
cli
not
and
iret
paddsb
sub
iret
pop
arpl
enter
adc
sub
sbb
call
cwde
in
stos
dec
imul
dec
jle
test
iret
xor
adc
jmp
push
cmps
outs
leave
xchg
rol
pop
clc
ja
ffree
les
inc
or
lods
popa
movs
dec
mov
int3
(bad)
sbb
xchg
lea
ins
sub
xchg
push
and
ja
add
or
shr
jae
xchg
mov
or
xchg
cdq
js
pushf
sbb
sub
les
and
dec
test
cmp
push
jno
adc
sbb
inc
mov
popf
jle
add
jmp
es
rol
or
std
imul
sar
jbe
dec
jno
mov
arpl
mov
data16
jle
outs
dec
repnz
jg
in
push
in
ins
aam
clc
or
lds
xor
cmp
mov
dec
and
in
push
pop
cmp
in
ret
stos
lods
popa
enter
mov
push
movs
push
call
retf
out
mov
ret
xor
sahf
xchg
das
scas
inc
je
sub
in
mov
lds
xor
jns
sbb
cmp
call
out
in
push
dec
mov
add
adc
inc
je
pop
(bad)
fidiv
test
in
repz
lea
pusha
inc
dec
scas
jmp
in
inc
imul
sub
xor
add
loopne
add
jnp
jbe
push
inc
mov
shl
sbb
ja
rcl
mov
sbb
ficomp
or
cmp
and
jle
jl
jb
mov
call
retf
sbb
ficom
push
mov
dec
pop
(bad)
and
call
or
test
or
mov
xor
add
dec
and
jae
cmp
xchg
cmps
push
outs
mov
addr16
xor
push
cmc
mov
mov
out
loopne
inc
sete
xchg
xchg
imul
sbb
mov
push
sub
dec
jne
xor
sbb
sbb
mov
ss
mov
pop
add
mov
pop
inc
push
gs
(bad)
pusha
add
lea
cdq
dec
and
cmp
mov
rep
cdq
or
mov
adc
neg
test
xchg
mov
jb
xchg
cmps
xchg
jg
add
push
adc
dec
push
pop
sub
int
and
xchg
popa
loopne
inc
ret
xchg
xchg
in
hlt
loope
jb
test
add
sti
mov
(bad)
scas
out
fstp
nop
sub
add
int
dec
cmps
mov
sub
sub
or
out
adc
and
imul
push
mov
xor
out
jbe
ds
adc
jmp
push
ds
add
mov
jns
dec
leave
outs
adc
xchg
es
mov
mov
add
jmp
mov
or
sbb
cs
movs
and
loope
test
xor
in
je
popf
or
jl
pop
in
inc
call
and
mov
scas
jno
pop
xor
test
xchg
push
mov
mov
jo
push
pushf
push
pop
ins
push
clc
jne
popf
fwait
xchg
in
inc
lods
sub
rol
mov
aaa
dec
mov
push
mov
inc
inc
bound
adc
adc
out
loop
xlat
pop
mov
xor
test
push
fstp
leave
in
(bad)
cs
or
mov
repz
ss
or
mov
pop
iret
mov
xchg
nop
test
or
cld
das
jo
cmp
add
loop
call
pop
jg
sub
cmp
push
loopne
repz
rol
adc
sub
mov
int3
fist
mov
xor
mov
lods
jae
push
sub
sbb
jle
jmp
loope
jmp
jecxz
lea
or
out
mov
fcom
dec
xor
repz
mov
jnp
cmp
jne
sbb
fs
mov
push
dec
and
push
and
xor
cdq
test
fcomp
mov
push
adc
mov
push
lds
je
sbb
gs
sub
lea
hlt
dec
retf
push
jno
retf
mov
test
(bad)
jns
(bad)
push
mov
sbb
or
jecxz
pusha
movs
js
fdivr
sub
sti
popa
aas
cmp
fldcw
icebp
inc
xor
xor
mov
ret
pop
ja
clc
xchg
cdq
shr
sbb
dec
or
cmp
push
nop
mov
xor
mov
sub
add
mov
int
or
mov
nop
add
aas
push
mov
xchg
sub
dec
adc
sub
xor
imul
icebp
cs
xchg
addr16
and
xchg
sub
mov
jno
mov
sar
jmp
and
lods
mov
ja
arpl
push
mov
gs
mov
pushf
stos
push
fstp
mov
mov
xor
mov
cmp
call
mov
add
mov
push
stc
and
inc
js
(bad)
ds
hlt
nop
and
dec
cmp
cs
lock
lods
mov
add
fadd
lods
lea
sub
add
sbb
sbb
mov
inc
cmp
inc
xor
sub
not
adc
mov
fidivr
jp
hlt
pop
sub
retf
fstp
mov
pop
push
and
inc
sbb
inc
sti
fwait
mov
ret
cmc
xchg
xlat
cmc
loopne
add
fsubr
nop
ds
cmp
push
je
cmp
mov
lds
aam
ret
into
jp
pop
cs
rcr
or
adc
pop
aas
and
mov
mov
adc
pop
mov
cmc
or
sbb
movs
call
cmc
shr
inc
out
jmp
and
imul
inc
aam
sbb
loopne
stos
adc
jl
pushf
pop
push
cmp
cmp
sti
in
jg
or
pushf
in
es
sbb
inc
loope
dec
fwait
push
push
sbb
adc
xchg
pop
mov
mov
and
push
xlat
xor
mov
or
jl
mov
sub
mov
pop
cmp
test
data16
push
add
lea
movs
mov
ror
ret
movs
mov
sbb
push
cdq
(bad)
jl
or
iret
xchg
adc
std
lds
inc
sbb
mul
pop
or
and
jne
cmp
scas
push
inc
add
cld
test
adc
data16
add
inc
cli
jno
std
sbb
out
mov
loopne
shl
ins
mov
out
adc
call
(bad)
mov
xor
dec
cmp
push
stc
fwait
adc
test
movs
cmp
das
fbstp
es
xchg
jg
xor
push
lods
cmps
inc
xchg
out
ret
cmps
popa
into
push
pop
mov
jae
les
mov
cmps
pop
adc
retf
out
mov
push
lea
and
push
xor
shl
out
xchg
pushf
lock
imul
ret
cwde
pop
xchg
scas
push
xor
das
push
(bad)
sub
mov
sbb
sbb
call
ins
out
pop
out
and
xchg
jo
pop
stc
sub
arpl
sti
or
mov
dec
call
and
inc
daa
stos
ins
and
or
jb
adc
inc
mov
in
gs
ss
mov
dec
sub
xchg
call
aam
das
pushf
dec
loopne
scas
aad
leave
out
sub
ins
loop
(bad)
cld
push
enter
pop
lds
cwde
push
mov
xchg
inc
dec
mov
sahf
mov
fwait
inc
stos
push
mov
and
sahf
int3
add
dec
in
and
cmp
out
test
outs
scas
lods
mov
movntq
xchg
xor
adc
stos
aas
aas
xor
sbb
clc
cmp
push
and
mov
xchg
lahf
adc
test
jo
std
dec
call
add
mov
adc
out
xor
dec
shl
xor
aas
jl
(bad)
jnp
xor
push
mov
int
fmul
xchg
std
cs
clc
aam
add
sbb
call
les
mov
stc
xor
jae
daa
test
adc
cmp
mov
sub
push
loopne
(bad)
xlat
nop
call
test
push
xchg
and
or
push
fcmovb
pop
mov
gs
pop
inc
stos
jmp
cmps
lds
aam
jno
sbb
pop
push
cli
pop
sub
sbb
jl
jle
int
pushf
xchg
dec
dec
ffree
mov
out
mov
hlt
cmc
and
fistp
mov
test
or
sub
mov
in
(bad)
fcom
pop
(bad)
cmp
sbb
fstp
movs
in
(bad)
sti
clc
add
scas
push
scas
add
std
fwait
out
aas
popa
popa
iret
fwait
and
pop
push
int3
jo
fisttp
pop
push
mov
and
bound
stc
pushf
(bad)
mov
inc
icebp
jge
push
test
jl
mov
jl
jle
aaa
mov
movs
adc
dec
lods
fwait
xor
loope
fs
jmp
stos
stc
sub
cs
not
jae
jbe
faddp
xchg
sub
jnp
jns
pop
(bad)
ficomp
push
mov
dec
(bad)
out
fidivr
sbb
out
sub
and
and
mov
les
aaa
jl
mov
movs
xor
fst
mov
aaa
mov
daa
push
lea
push
cs
cmp
cmp
lahf
sub
mov
pop
jmp
pop
(bad)
xlat
mov
rol
leave
ins
or
sub
test
retf
or
sub
fild
adc
adc
xchg
xor
sub
nop
jl
iret
nop
fild
xchg
repnz
xchg
inc
dec
ret
jecxz
sub
repnz
push
sahf
stos
int
sub
and
jmp
mov
fiadd
mov
stc
ins
scas
jno
add
(bad)
ss
pop
or
faddp
daa
adc
push
hlt
push
frstor
adc
mov
mov
lahf
lea
test
imul
sbb
sbb
add
bound
iret
inc
dec
out
mov
lods
aaa
fdiv
jno
ret
mov
(bad)
lea
es
mov
jb
out
inc
or
mov
lds
jp
mov
fs
nop
nop
loopne
dec
stos
imul
mov
mov
scas
cld
adc
push
mov
sbb
in
inc
imul
sub
jle
lea
shl
in
lods
push
mov
xor
dec
pop
lea
ret
cld
push
out
cmp
cmp
adc
push
pop
lods
inc
ds
jecxz
jmp
lods
fild
jmp
cmp
scas
jmp
adc
mov
push
mov
mov
fwait
pop
mov
ds
cmp
aad
pop
test
jno
or
arpl
pop
cld
jg
movs
jnp
retf
aad
jb
mov
xor
ret
sahf
add
adc
pslld
loope
add
xchg
adc
xchg
(bad)
adc
dec
stos
inc
add
in
adc
xchg
and
and
mov
test
arpl
mov
inc
adc
test
js
imul
push
fcomip
mov
stos
call
xlat
stc
xor
fistp
xchg
scas
fmul
cmp
sahf
xchg
or
xchg
mov
stos
sti
rcl
repz
scas
scas
call
push
add
mov
lahf
xchg
test
dec
inc
popw
dec
jo
sahf
call
cdq
add
cwde
sbb
ds
push
es
cmp
add
fdivr
es
mov
adc
push
loop
jl
and
add
popa
xor
lock
rcl
push
push
xchg
adc
(bad)
jbe
mov
xor
out
and
outs
in
daa
stc
xor
xor
scas
push
pop
test
jo
aaa
call
test
test
sbb
add
mov
sbb
fcmove
xor
adc
faddp
jge
mov
sar
je
xchg
repnz
mov
sbb
xor
sub
mov
shl
aam
dec
out
add
push
pop
in
inc
adc
dec
pop
dec
stos
enter
and
div
mov
pop
fist
pushf
xor
adc
out
loope
pop
test
int
sbb
mov
inc
jno
ror
in
nop
jbe
imul
jo
cwde
mov
mov
scas
movs
rcl
int3
add
mov
inc
call
lea
or
cs
mov
movs
sub
dec
inc
in
in
jne
mov
dec
aad
sub
push
mov
cmp
jae
stos
retf
dec
sar
fidivr
fld
lds
in
ds
test
or
outs
jns
adc
mov
sbb
pop
arpl
mov
push
jmp
mov
mov
sbb
sbb
sbb
add
cmps
out
sbb
neg
imul
ins
fldenv
push
push
mov
push
dec
aam
xchg
mov
pop
cmp
cmps
jbe
loop
mov
xchg
outs
scas
loope
fistp
in
loope
pop
mov
gs
lods
and
mov
or
lods
out
adc
hlt
jp
mov
jge
push
leave
ins
(bad)
adc
pushf
(bad)
gs
into
xchg
imul
ret
iret
shl
xchg
inc
sub
inc
xor
loope
cli
movd
out
ins
pusha
arpl
dec
neg
loop
sbb
jnp
test
push
es
jo
sub
adc
mov
clc
inc
(bad)
push
mov
popf
bound
in
(bad)
xchg
pop
pushf
stos
xlat
sbb
lea
adc
iret
mov
xor
sub
pop
out
add
mov
fdiv
push
fwait
push
sbb
arpl
lods
jae
add
push
adc
mov
frstor
mov
sub
stos
jnp
movs
sbb
rol
cmc
inc
cmp
rol
lock
push
test
cmp
cmp
ins
push
mov
ins
sbb
lods
dec
shr
push
fst
test
and
inc
jns
jae
add
lock
push
retf
iret
daa
inc
aaa
mov
int
cs
data16
mov
cdq
test
mov
jb
dec
inc
addr16
jg
sub
popa
repz
fisttp
rcr
xor
movs
sti
aaa
pop
(bad)
outs
sub
jmp
stc
push
adc
or
repnz
imul
cmp
scas
mov
add
das
(bad)
adc
out
es
jb
pop
iret
loope
sub
inc
mov
into
fdivr
cmp
pop
push
xor
push
fmul
out
mov
pop
iret
lahf
fist
cwde
push
(bad)
lods
pop
push
xchg
shl
mov
mov
stos
test
gs
cdq
mov
jp
das
jae
ja
int3
push
test
stos
jb
xlat
sub
sti
and
mov
loopne
stc
jmp
mov
pop
sbb
ficomp
cwde
or
pop
call
mov
push
add
enter
push
jmp
sub
sub
cwde
clc
xchg
mov
add
xchg
(bad)
mov
enter
ins
mov
sub
shl
mov
push
retf
cli
xchg
mov
mov
and
loope
jmp
or
out
mov
dec
loopne
or
daa
mov
(bad)
cwde
mov
ins
rcr
sti
add
inc
shr
lods
stos
jmp
mov
mov
inc
mov
adc
cmc
loope
xchg
test
dec
lea
add
jl
icebp
cdq
into
inc
es
sbb
icebp
xor
pop
jne
cmp
jnp
aad
(bad)
push
jmp
ja
mov
push
mov
addr16
push
fiadd
repz
leave
and
jge
fcom
ja
into
arpl
xchg
lods
lds
jnp
add
push
nop
pop
jae
aad
dec
retf
jg
pop
jae
pop
ds
pop
(bad)
jle
inc
add
rcr
jmp
push
jl
pop
mov
lods
mov
push
popf
cmp
or
jl
out
out
cmps
or
rol
scas
and
or
jae
inc
cs
xor
(bad)
or
repnz
pop
and
call
loopne
addr16
loopne
iret
loop
xor
dec
cli
mov
imul
pop
(bad)
jns
lea
or
sar
pusha
inc
loopne
xor
adc
sub
call
pop
inc
sbb
add
sar
into
(bad)
xor
aam
jne
mov
hlt
in
inc
xchg
jmp
ret
xor
mov
mov
test
adc
js
pop
xchg
cwde
mov
pop
repz
pusha
jae
shl
pop
das
cmp
(bad)
shr
outs
ins
jge
xchg
jmp
mov
loop
(bad)
jns
sbb
aam
xchg
or
cmc
mov
retf
add
daa
inc
hlt
adc
mov
push
jp
lea
jnp
mov
aas
(bad)
cmp
cmp
jp
out
sbb
mov
imul
aas
sub
aam
jecxz
aam
and
scas
arpl
nop
mov
out
retf
cwde
jae
retf
or
in
or
iret
sub
sbb
outs
test
test
cli
stc
mov
mov
add
fmul
lock
or
adc
int
inc
shl
cmp
mov
aam
cs
clc
into
ds
imul
inc
hlt
iret
pop
cmc
dec
cld
in
inc
int
sbb
pushf
jb
mov
jl
fs
cwde
lock
fisttp
stc
ret
inc
retf
jne
mov
test
lods
data16
test
mov
retf
test
xor
call
call
sbb
movs
adc
sbb
lock
inc
and
mov
sbb
cli
lock
sahf
fidivr
adc
stos
outs
out
or
cmp
pop
push
adc
mov
jl
in
adc
sar
movs
jo
mov
ins
leave
sub
pop
pusha
cmc
fcomp
push
add
xchg
pop
jne
cmp
outs
pop
sbb
sub
fisubr
mov
mov
push
pop
and
loop
sub
movs
retf
cmp
(bad)
out
fcom
jb
mov
adc
lods
mov
shl
pushf
add
(bad)
sbb
sub
dec
mov
fdivr
xchg
loop
or
fldenv
int
mov
adc
xor
cli
clc
pop
mov
and
rcr
mov
fwait
push
or
jo
xchg
mov
push
fisub
repnz
or
push
cmp
or
or
daa
neg
pusha
xchg
fisubr
xchg
cmp
fstp
out
mov
push
mov
add
int3
sbb
adc
pop
aam
fsub
jp
cmp
dec
mov
mov
int
and
sbb
pop
into
and
ja
xchg
mov
ins
(bad)
cs
mov
int3
daa
(bad)
mov
ds
mov
pusha
fwait
mov
aaa
mov
jl
pop
xor
test
push
pop
lods
retf
(bad)
jbe
xor
fild
sbb
jmp
test
jb
inc
pushf
int3
aad
xchg
xchg
lahf
aas
test
cmp
sbb
and
call
fstp
mov
pop
push
and
(bad)
repnz
stos
rol
pop
mov
mov
and
loope
pop
ins
mov
jmp
dec
clc
inc
int
in
xchg
push
mov
and
(bad)
cmp
and
outs
mov
hlt
pop
in
mov
pop
loop
mov
push
mov
dec
repnz
sbb
mov
jge
fwait
jmp
mov
push
popa
xchg
add
xchg
outs
push
push
xchg
adc
mov
je
repz
fwait
pop
mov
outs
test
mov
in
sub
out
sti
or
mov
xchg
pusha
pop
jle
pop
sahf
les
xor
call
add
pop
imul
std
adc
dec
out
popf
dec
out
or
cmps
and
jle
push
ins
arpl
adc
cmp
add
adc
sub
out
fist
dec
leave
adc
adc
stc
iret
call
or
inc
cs
mov
jbe
jp
xlat
add
push
jne
outs
adc
mov
and
and
pushf
push
imul
xor
mov
add
adc
test
mov
add
xor
xchg
pop
aas
out
cmp
or
pusha
ins
cli
(bad)
ins
or
fisttp
push
loopne
and
div
aad
xchg
inc
dec
xor
jp
cmp
out
push
xchg
sub
fst
mov
xchg
push
jp
pop
sbb
in
mov
mov
xor
mov
lock
repz
fcmovb
loopne
sub
repnz
jae
sar
cmp
dec
jl
popf
dec
and
das
ret
test
pop
push
fimul
and
stc
cmps
out
dec
jl
stc
add
cmp
movs
or
sbb
jl
stos
or
pop
and
retf
jns
pop
hlt
mov
push
bound
cmp
stos
mov
push
leave
push
out
test
loopne
mov
mov
and
dec
and
inc
mov
mov
sahf
out
dec
adc
xchg
jo
aam
int
std
or
data16
test
les
xchg
retf
repz
test
adc
fs
std
dec
(bad)
arpl
rcr
push
jno
push
cmp
add
and
into
bound
push
or
push
pushf
mov
stos
push
cmp
sub
test
mov
jecxz
adc
movs
addr16
aad
sbb
(bad)
cmps
xchg
jns
push
or
xor
into
add
loope
cmp
int
jnp
push
fwait
in
outs
leave
inc
push
push
jmp
xchg
sbb
inc
or
push
jns
mov
pop
sub
cmp
aas
jl
or
and
dec
ja
arpl
shl
mov
gs
test
movs
pushf
mov
pushf
jecxz
repz
inc
inc
das
ss
popf
sbb
sbb
call
dec
pop
aaa
fnclex
pop
movs
push
sti
cwde
ds
movs
push
retf
mov
repnz
rcr
cli
in
lods
or
pop
and
(bad)
aaa
and
cdq
out
lea
mov
inc
sahf
(bad)
jmp
xchg
adc
call
xlat
loopne
and
dec
xor
jb
scas
lock
nop
add
movs
cmp
xor
scas
lods
adc
shl
pop
call
inc
dec
nop
shl
mov
(bad)
test
and
leave
rol
aam
addr16
or
cmp
pop
mov
pusha
inc
or
movs
out
pop
shl
or
or
sub
push
js
mov
nop
retf
xchg
mov
dec
add
add
push
cmp
pusha
pushf
cmps
(bad)
cmp
pusha
cdq
scas
mov
outs
lock
pusha
stos
jp
cwde
and
stc
and
add
fstp
adc
sbb
mov
mov
js
stos
retf
pop
hlt
mov
sahf
xor
sbb
sub
leave
(bad)
push
ins
ins
imul
and
jp
popa
(bad)
imul
das
shl
pop
dec
lods
xchg
aam
rcr
in
retf
loopne
add
lock
adc
adc
inc
test
adc
jge
inc
lods
cwde
mov
push
popf
sti
fs
clc
mov
out
rcl
add
push
sar
adc
aam
mov
fisttp
push
je
pop
addr16
retf
nop
dec
cmp
xor
js
retf
cmps
(bad)
xor
or
cmp
jecxz
shl
mov
lea
push
pop
nop
and
pop
xchg
pop
es
icebp
or
mov
icebp
or
adc
(bad)
xchg
mov
icebp
pop
call
fbstp
fimul
xor
aad
jbe
sahf
sahf
in
test
fsub
nop
sbb
repz
dec
iret
scas
add
mov
mov
ins
retf
or
sbb
push
push
add
stos
adc
lock
sbb
pop
xchg
retf
xor
adc
popf
add
and
inc
rcr
jmp
(bad)
cwde
mov
cmp
push
fimul
inc
scas
std
adc
jge
(bad)
mov
mov
add
pop
jp
and
mov
lock
inc
jns
pop
sbb
adc
aad
mov
movd
pop
xchg
pop
adc
xchg
xlat
js
data16
clc
jge
mov
cmp
or
in
cmc
outs
imul
inc
repz
mov
add
or
iret
in
aas
sbb
lods
mov
inc
test
dec
ret
or
mov
push
mov
cmps
adc
into
mov
sub
cmp
in
(bad)
pop
out
imul
retf
sar
push
jp
scas
iret
cs
test
mov
sub
xor
clc
popa
xchg
dec
jns
sub
pop
xor
inc
js
movs
dec
icebp
push
mov
inc
inc
push
mov
mov
out
dec
fistp
xlat
mov
and
cmp
mov
sar
test
mov
sbb
out
sub
lods
icebp
lods
in
cmp
pop
xchg
dec
aas
xor
adc
mov
inc
xor
sbb
daa
stos
cmp
imul
cdq
mov
stc
push
imul
clc
or
pushf
inc
jo
and
mov
or
ins
dec
add
(bad)
gs
stc
push
or
jns
adc
scas
add
mov
addr16
jge
cmp
jmp
arpl
loopne
(bad)
(bad)
addr16
popf
int
jbe
retf
cmps
push
arpl
ja
adc
mov
adc
mov
jge
jbe
leave
cmp
inc
cs
xor
ins
arpl
pop
js
and
xchg
mov
mov
cmp
ja
clc
mov
or
test
xchg
xchg
dec
bound
xor
out
call
out
jb
fiadd
inc
add
pop
sbb
mov
clc
xor
clc
add
lods
repz
icebp
mov
pop
movs
jle
loop
loope
add
sub
or
clc
xor
rcl
dec
xchg
dec
neg
jecxz
sub
sbb
sahf
cmc
mov
ins
adc
call
mov
ss
ins
jmp
jmp
ret
pop
jle
loope
ret
or
(bad)
lea
pushf
xchg
outs
pushf
inc
pop
jne
add
ret
pushf
inc
push
mov
lods
cs
scas
and
mov
lds
arpl
xlat
(bad)
push
(bad)
cmp
pop
aam
push
jge
xor
aam
mov
xor
pop
popa
mov
mov
cmp
pop
das
test
sub
out
dec
dec
jp
cmps
mov
push
das
xor
dec
pop
pop
cmp
fld
and
stc
mov
cli
adc
gs
push
mov
lods
push
mov
movs
fwait
stos
pushf
bnd
clc
jnp
aaa
int
data16
mov
bound
out
xor
imul
cmp
in
fsub
sub
inc
add
add
rcl
(bad)
ror
test
mov
jo
jo
and
add
fdivp
or
sub
dec
sub
call
mov
mov
xchg
cmp
ss
(bad)
movs
dec
mov
jno
mov
xor
cmp
mov
push
mov
add
leave
imul
ins
sbb
(bad)
scas
mov
call
jno
adc
mov
clc
cmp
test
jle
push
cmp
iret
test
cmp
icebp
lea
push
sahf
mov
movs
ret
std
test
pop
jnp
call
add
mov
mov
mov
jle
loopne
jl
movs
loopne
rcr
jle
gs
fidivr
push
xchg
mov
daa
cli
(bad)
jl
mov
xchg
jno
dec
lods
hlt
inc
dec
ror
stos
lock
add
jb
(bad)
sub
movs
adc
or
outs
push
out
rcr
movs
nop
je
addr16
jge
bnd
sub
cmps
(bad)
sti
pop
and
sub
lods
mov
stos
and
cmc
in
mov
hlt
xor
imul
xchg
push
mov
imul
cmps
icebp
sbb
popa
push
lea
ins
aad
and
adc
iret
xchg
dec
cld
or
xchg
neg
cdq
push
mov
nop
jle
inc
call
aaa
lods
pusha
mov
or
dec
arpl
mov
xchg
xlat
in
ja
out
repnz
cwde
adc
sahf
mov
cmps
mov
sub
sub
xchg
adc
lods
sbb
lods
outs
shr
cmps
in
ins
mov
leave
fiadd
test
or
in
xchg
test
xlat
mov
xor
sub
inc
push
jle
jl
jle
retf
and
cmp
iret
stc
mov
push
les
sub
xchg
dec
pushf
(bad)
movs
dec
and
fdiv
jnp
out
push
cdq
xor
ins
pop
inc
enter
mov
outs
cmp
std
dec
mov
cmp
data16
out
popf
retf
cmp
cld
mov
add
sub
sbb
xchg
aad
mov
cs
test
icebp
dec
mov
es
and
pusha
les
iret
jecxz
hlt
xchg
xchg
dec
pop
int
adc
jns
xchg
jb
ja
je
jmp
xor
int
(bad)
jo
jbe
push
icebp
mov
addr16
popa
pop
aaa
inc
or
push
xchg
xlat
sub
inc
nop
lea
es
pop
popf
xchg
mov
es
xchg
cmp
shl
cmps
dec
fadd
inc
adc
jmp
mov
jg
add
in
pcmpeqw
and
mov
addr16
sub
shl
nop
loope
push
dec
adc
sub
jo
ds
pop
push
(bad)
(bad)
jmp
dec
fsub
push
xor
fsubr
sub
mov
sbb
dec
mov
pusha
(bad)
dec
std
sbb
rcr
xchg
or
push
in
inc
mov
clc
and
nop
out
add
cmp
jae
mov
ins
inc
lea
pop
adc
hlt
push
mov
mov
dec
xchg
push
adc
cmc
fwait
test
ss
jo
xchg
adc
and
mov
cs
cmps
scas
xchg
ficomp
in
mov
sti
xchg
xchg
clc
push
adc
fsubr
mov
iret
and
or
out
imul
cmc
arpl
lahf
xrelease
inc
adc
push
sbb
repz
pop
cmps
in
shl
xchg
mov
xlat
pop
call
out
jp
fwait
pushf
and
mov
cmp
inc
push
fistp
cmp
es
and
push
ret
repz
mov
imul
aam
pop
cwde
(bad)
pushf
push
xor
lods
xchg
scas
nop
jns
rcr
mov
ds
cmp
xor
mov
out
and
push
neg
cmp
sbb
or
fwait
add
xchg
pusha
sub
xchg
call
jecxz
mov
dec
iret
add
test
sub
lea
(bad)
inc
sub
cmp
cmp
dec
mov
mov
sub
jmp
call
inc
and
lods
or
pop
es
add
lea
sbb
cld
xor
int3
inc
cwde
(bad)
test
inc
movs
adc
push
lods
iret
ret
adc
aas
stos
pop
mov
std
add
out
dec
cmc
cwde
fs
gs
add
pop
in
push
jl
add
dec
rcr
pop
adc
dec
inc
jae
js
push
or
xchg
push
pop
cmp
or
gs
call
or
xchg
dec
xor
test
jo
xor
and
add
push
xchg
outs
sub
sbb
fist
and
mov
rol
stc
stos
adc
es
outs
int
cmc
scas
jmp
dec
enter
es
jb
sbb
(bad)
push
mov
rcl
adc
data16
pop
aas
push
sti
xchg
out
push
fnstsw
enter
xchg
icebp
mov
sub
shr
test
add
sub
lea
lods
(bad)
pop
ret
push
mov
cmc
jno
xlat
inc
loopne
xchg
sbb
jp
imul
jp
sub
push
sub
jg
xor
or
mov
xchg
add
jl
scas
or
jmp
pop
pop
lods
mov
mov
pop
pop
or
dec
cmps
xchg
xchg
cmps
jge
sub
mov
adc
mov
pmaxsw
xor
mov
jge
call
inc
push
(bad)
repnz
imul
push
push
sbb
outs
sub
stos
mov
add
sub
ret
inc
mov
std
jmp
add
stc
pop
int3
jecxz
mov
sbb
clc
xchg
sbb
jne
cmp
das
cmps
loope
push
mov
shl
dec
cmp
sbb
aas
dec
sbb
mov
jp
push
mov
stos
fstp
(bad)
sbb
add
push
call
cmp
adc
je
(bad)
sbb
dec
stos
xor
push
loop
xchg
add
stos
sbb
gs
mov
not
fnstcw
test
xlat
add
std
xor
xchg
jp
aam
(bad)
mov
inc
mov
ja
pop
or
pop
cs
scas
xor
adc
addr16
push
popf
adc
mov
xchg
xlat
add
(bad)
in
test
mov
cmc
inc
repnz
jge
xlat
out
or
xchg
stos
xor
jmp
push
pushf
popf
out
jns
(bad)
mov
dec
test
outs
cmps
aaa
xor
mov
test
(bad)
in
push
push
fst
cmps
js
and
mov
adc
fisub
sub
lods
fild
dec
dec
xchg
imul
sub
sar
jge
adc
mov
xchg
push
push
lds
mov
jne
mov
inc
pop
push
in
and
hlt
mov
push
pop
in
adc
das
data16
mov
dec
gs
cld
or
cli
cmp
xchg
xor
test
(bad)
nop
push
push
adc
popf
or
ror
std
jne
lock
mov
inc
stos
mov
mov
push
jae
add
lahf
cmps
lods
mov
out
in
jo
jmp
sub
(bad)
mov
inc
mov
movs
test
xor
mov
pop
ss
or
mov
sub
xor
sub
pop
push
cmps
jo
pop
repz
sbb
sub
fbld
add
add
jb
hlt
mov
mov
jp
mov
mov
fdiv
shr
ret
xchg
jle
lahf
fistp
mov
mov
push
out
pop
outs
mov
jo
ror
xchg
(bad)
cdq
out
mov
nop
fwait
jl
mov
bnd
or
(bad)
push
sbb
jae
mov
cwde
cmp
push
lods
out
aad
(bad)
cdq
or
dec
test
dec
push
das
icebp
mov
cld
loopne
mov
and
sbb
jmp
jle
shr
xchg
mov
cmp
rcr
das
mov
mov
mov
pop
icebp
sbb
fdivr
test
pop
pop
add
in
push
mov
sub
mov
sub
(bad)
out
add
dec
and
dec
pusha
cmp
pusha
mov
sar
sub
les
sbb
sbb
mov
lock
xchg
rcl
or
mov
push
push
mov
(bad)
mov
neg
dec
lods
nop
sar
mov
cmc
sub
out
add
xor
ret
cld
mov
add
jl
push
shr
clc
dec
scas
sub
inc
shl
jae
icebp
push
cmc
loope
movs
xlat
(bad)
mov
adc
in
xchg
and
mov
pusha
and
sub
jo
jo
push
stc
xchg
pop
ins
(bad)
int
movs
inc
push
rcl
fdiv
lods
test
icebp
sub
mov
out
mov
lods
mov
ret
xchg
fild
pop
(bad)
into
mov
sub
or
push
repz
popa
mov
add
or
nop
in
dec
mov
test
aam
dec
and
adc
test
test
lock
push
mov
scas
xchg
fdiv
mov
sti
mov
mov
cmp
movs
pop
movs
adc
xchg
sbb
int3
fs
sub
mov
xchg
add
fcmovnb
in
sbb
xchg
xor
cmp
inc
push
retf
xchg
imul
sub
push
add
pop
sbb
sub
cmp
repz
jbe
mov
stos
push
stc
push
xchg
jno
push
(bad)
into
shr
addr16
pop
xor
mov
jns
fwait
ins
bound
outs
jb
mov
pop
push
xor
inc
rcl
test
sub
mov
jno
mov
aad
push
(bad)
push
das
sub
test
sub
dec
adc
pop
dec
mov
push
cmps
loop
in
fstp
jmp
das
mov
repz
bound
adc
mov
jmp
jl
dec
xchg
pop
mov
mov
inc
jg
inc
mov
mov
and
xchg
mov
xchg
sub
cwde
adc
add
out
repz
outs
mov
or
bound
cmp
cmp
or
mov
(bad)
jns
pop
xchg
mov
inc
cmps
pop
daa
xor
loope
push
aam
lock
leave
xchg
inc
aad
fcomp
push
adc
out
push
adc
(bad)
lahf
mov
retf
cmp
push
(bad)
test
mov
or
or
mov
les
adc
inc
dec
pop
stos
and
movs
sub
inc
inc
icebp
dec
push
test
inc
gs
sbb
sbb
pop
push
inc
inc
cmps
stos
cs
in
jmp
mov
ret
mov
pushf
lahf
xchg
adc
mov
les
out
les
push
pop
test
or
or
mov
sub
(bad)
dec
or
cli
xorps
popf
movs
dec
cwde
jmp
mov
in
jge
clc
jne
sub
mov
aas
mov
outs
fs
jge
cmps
mov
in
and
inc
ja
sub
and
push
sbb
mov
push
pop
adc
xor
cmp
neg
pop
popa
cmp
int3
fbstp
push
adc
inc
in
ds
out
mov
adc
pop
jno
mov
mov
and
or
leave
push
push
cmps
repnz
cli
rol
cs
dec
push
mov
inc
fadd
pop
pusha
sbb
adc
push
out
out
xor
xor
icebp
jmp
sub
dec
xor
or
sbb
cmp
xor
cmp
sub
mov
(bad)
out
pop
int
dec
in
sbb
cli
mov
imul
xor
and
(bad)
mov
mov
repnz
les
mov
and
out
sub
stos
mov
inc
fstp
mov
loop
inc
(bad)
adc
ja
daa
cmp
or
fstp
dec
or
and
or
inc
dec
mov
fwait
pop
inc
mov
inc
movs
push
jne
stos
movs
imul
xchg
push
or
and
adc
scas
imul
xchg
dec
push
xor
loopne
(bad)
mov
(bad)
mov
and
cmp
or
inc
rcl
ss
pop
fst
test
jp
dec
arpl
shl
push
mov
mov
rcr
out
mov
mov
es
outs
adc
jns
daa
test
pop
ror
mov
mov
lahf
jmp
cmp
imul
cwde
push
ins
nop
(bad)
cli
add
les
mov
test
jne
(bad)
jbe
pushf
add
jbe
scas
jae
in
out
cmp
inc
test
call
fs
and
ficomp
lods
add
scas
movs
nop
xchg
xchg
es
mov
push
jmp
fwait
adc
in
jle
inc
inc
retf
jg
sbb
js
xor
repnz
lods
cld
dec
mov
scas
add
test
ficomp
out
sub
inc
and
ja
inc
inc
es
pop
jnp
pop
loopne
inc
test
lods
mov
xor
out
push
mov
mov
test
cmp
std
int3
jns
fsubrp
ds
cmp
jbe
mov
test
iret
pop
sbb
int3
aam
mov
ret
cmp
imul
mov
mov
mov
mov
lock
dec
push
pop
ror
dec
(bad)
mov
sbb
mov
xchg
adc
cs
cdq
ss
std
jmp
ret
adc
dec
fwait
dec
aas
pushf
nop
fbstp
mov
pop
int
leave
outs
mov
movs
js
aaa
ins
pop
sbb
int
sub
(bad)
mov
cmp
fs
loope
ds
fbld
push
cmps
xchg
out
sbb
icebp
call
and
jae
outs
ins
(bad)
pop
jle
and
(bad)
jg
push
and
xchg
inc
(bad)
and
aam
stos
sub
out
jmp
adc
adc
xchg
sub
sti
push
jb
cli
js
iret
mov
test
jmp
mov
call
gs
aad
add
push
cmp
adc
jp
icebp
dec
rol
sbb
sbb
hlt
(bad)
and
pop
xchg
pop
mov
lds
mov
or
xor
sbb
cmp
add
push
jecxz
test
push
aaa
and
pop
mov
xor
adc
ds
xor
cmps
mov
arpl
ins
rcr
pinsrw
xchg
std
dec
test
test
test
dec
int3
dec
mov
mov
fstp
jne
dec
xchg
arpl
jno
loop
mov
mov
adc
cmps
into
inc
dec
jnp
add
sahf
sub
mov
nop
mov
cli
jl
pop
ret
sbb
or
jmp
sbb
or
jp
dec
sbb
jecxz
pop
mov
inc
add
mov
hlt
leave
gs
fiadd
xor
or
imul
cmps
adc
ins
bndldx
shr
mov
push
mov
mov
xchg
outs
int
pop
nop
add
bound
(bad)
test
push
push
mov
push
out
sahf
int
xlat
iret
inc
mov
sbb
cmp
mov
pop
and
mov
push
push
push
pop
icebp
outs
outs
ss
outs
es
and
and
movs
adc
test
pop
das
dec
cli
aam
pop
mov
leave
mov
pop
adc
push
aaa
or
xchg
ret
stos
sub
std
push
mov
cld
into
push
movaps
add
std
sub
aas
shr
movs
stos
push
xor
pop
dec
fmul
or
jle
push
call
cli
pop
imul
mov
push
test
sbb
push
call
imul
addr16
mov
dec
iret
int
ins
inc
adc
and
shl
(bad)
cmp
xchg
or
fdiv
push
inc
cli
mov
mov
dec
les
retf
hlt
call
out
xlat
int3
movs
scas
sub
xchg
cdq
or
aad
push
daa
xchg
xchg
and
jecxz
retf
dec
cli
push
(bad)
popf
mov
jl
fstp
stos
mov
cmp
js
pop
imul
pop
jl
mov
movs
test
retf
mov
jae
mov
fstp
pushf
mov
mov
or
jmp
aaa
shl
ins
pop
inc
lods
aas
jl
test
xchg
pop
jg
fs
ret
jno
iret
cld
or
push
xchg
sbb
lods
into
(bad)
cmps
xchg
mov
mov
cmp
stc
adc
pinsrw
pop
pop
sbb
jns
dec
cmps
add
out
cmc
sbb
dec
sbb
adc
push
jbe
cdq
pop
xchg
push
mov
sbb
inc
leave
mov
sub
add
and
(bad)
dec
repnz
sti
mov
mov
call
cmp
sub
jp
xchg
cmp
jnp
sub
sub
xlat
cwde
pop
cmp
(bad)
aas
jo
jne
scas
int
and
nop
ins
lds
push
lahf
pop
icebp
mov
jl
(bad)
das
ficom
xchg
dec
nop
aas
inc
ficomp
popa
xor
and
push
push
test
xchg
pop
jnp
xchg
rol
repnz
jmp
leave
mov
jno
cmp
movs
xlat
push
pop
jecxz
jns
add
(bad)
(bad)
cmc
stos
xchg
stos
das
xchg
inc
gs
add
bound
std
jae
rcr
sbb
cmps
inc
outs
cmp
or
stos
in
jge
ins
adc
mov
stos
fcomp
pushf
xchg
shl
repz
out
or
add
push
dec
cmp
sbb
test
lods
das
shl
rol
xor
push
popf
cmps
jnp
mov
mov
or
mov
loop
dec
aam
cmp
push
jmp
iret
test
jmp
loopne
cmp
ds
adc
dec
cmp
imul
scas
les
imul
mov
call
ret
and
popa
mov
test
sbb
inc
dec
add
dec
sbb
dec
mov
sbb
stc
stos
icebp
(bad)
adc
jmp
leave
pop
mov
sub
sbb
dec
xchg
int
xor
jl
ins
adc
bound
fst
dec
pop
xor
xor
xchg
stos
lds
stos
mov
fwait
cwde
lods
push
or
movs
retf
mov
mov
shl
mov
rol
in
scas
pop
test
outs
push
sti
jae
popf
aad
jg
sub
jbe
jo
jo
pextrw
push
int
pop
ss
push
leave
xchg
xor
out
cwde
add
add
dec
adc
fmulp
sbb
or
neg
lods
mov
outs
lea
lods
push
call
mov
fcom
pop
mov
dec
(bad)
aaa
lods
sbb
rcr
test
mov
lea
stos
inc
imul
mov
mov
inc
jle
fwait
jp
mov
sbb
jecxz
psubw
or
or
sti
sbb
push
pop
jle
out
test
shl
cmps
add
int
jecxz
lods
inc
arpl
test
push
xor
les
arpl
mov
in
std
push
fs
icebp
xor
ja
jno
fisubr
inc
push
mov
div
push
or
cli
dec
add
mov
jb
sub
icebp
push
mov
out
test
mov
fcomp
inc
pop
fild
xor
jne
hlt
or
test
(bad)
shl
je
aas
mov
retf
xor
stos
shl
mov
jb
sub
mov
pop
pushf
(bad)
jg
sbb
push
push
sbb
mov
and
mov
pop
cwde
fwait
push
sahf
fstp
nop
pop
sahf
add
mov
dec
cmp
inc
push
push
xlat
cmps
xor
jns
sahf
rcr
push
fisttp
push
retf
es
lods
push
mov
pop
out
(bad)
fwait
adc
fwait
xchg
pop
pop
scas
out
call
bound
xchg
mov
sub
(bad)
fwait
jle
mov
and
sbb
xor
inc
adc
es
push
out
push
push
mov
(bad)
cmp
sahf
retf
pusha
jmp
cwde
fisttp
rol
(bad)
xlat
push
fs
cli
push
inc
scas
inc
sbb
(bad)
mov
mov
push
push
inc
cmp
and
stc
std
inc
cmp
xor
sub
dec
iret
cdq
aaa
mov
in
inc
pop
fs
xchg
jl
adc
mov
into
mov
in
data16
ds
and
loopne
call
sub
mov
aaa
scas
addr16
sub
inc
test
push
dec
addr16
push
or
sub
mov
lods
adc
cld
or
add
adc
mov
lds
pop
push
and
mov
hlt
pop
mov
int3
ret
lods
fdiv
xchg
jns
retf
cli
out
repz
add
aaa
inc
addr16
push
xchg
sahf
popf
mov
pop
stos
mov
jl
jp
pop
sbb
cmp
bound
imul
xor
inc
mov
imul
mov
push
hlt
xchg
push
add
imul
test
ins
ins
mov
mov
xlat
xor
aaa
in
or
mov
mov
leavew
cld
loope
loopne
ret
dec
xor
cmps
not
add
out
dec
and
mov
add
push
ins
lock
out
iret
sub
(bad)
adc
push
or
sub
jmp
ret
into
popa
xlat
dec
ja
les
dec
push
pop
rol
dec
add
pop
pop
pop
xchg
jns
mov
cmp
ss
daa
jbe
mov
inc
mov
(bad)
aad
js
es
or
xchg
addr16
push
cdq
popf
push
inc
mov
mov
sti
or
push
or
inc
jg
iret
pop
stc
clc
xor
and
mov
ret
add
sti
rol
cmp
in
loop
arpl
mov
movs
pop
js
fbld
in
inc
pop
dec
fisttp
aam
mov
mov
xchg
imul
push
jmp
push
arpl
xchg
xchg
call
pop
loope
adc
aas
mov
cli
add
je
iret
pop
sub
retf
pop
push
push
mov
adc
xor
into
or
loop
and
aaa
dec
xchg
mov
xor
rcpps
xor
shrd
neg
cmp
jbe
push
jecxz
retf
nop
pop
xchg
call
inc
aas
add
fnstcw
in
mul
push
jbe
or
movs
je
xor
stc
sti
std
inc
jns
xchg
repnz
mov
sbb
data16
pop
cmps
loop
mov
pause
or
fdivr
mov
mov
test
lea
xor
sub
stc
xchg
daa
and
js
repz
dec
push
pop
cmp
and
call
scas
test
fcom
out
or
mov
ja
or
push
mov
adc
sub
lea
cdq
mov
mov
shl
in
ret
mov
arpl
jge
fnsave
xor
stos
psllw
gs
mov
enter
push
inc
ret
sbb
lods
mov
cld
pop
inc
mov
dec
ja
ja
idiv
cs
call
xchg
adc
std
(bad)
xchg
pop
mov
ss
popf
fs
and
js
pop
cmp
adc
lea
in
pop
or
inc
push
inc
mov
mov
aad
jo
jbe
and
add
adc
fmul
mov
mov
mov
(bad)
int3
pop
inc
in
loopne
or
aad
mov
inc
popa
xchg
ror
or
xor
adc
retf
or
in
test
rcr
cdq
and
std
aam
out
or
fwait
inc
imul
mov
mov
lock
cmp
dec
jb
mov
mov
stc
xor
and
push
push
jge
(bad)
fldcw
or
test
sbb
fs
inc
scas
push
lahf
inc
shr
scas
std
sub
in
test
icebp
shr
adc
sbb
lods
add
push
push
loopne
xor
(bad)
dec
ins
mov
leave
pop
(bad)
test
call
ficomp
push
fst
and
cmp
mov
das
loope
mov
sti
lahf
aas
xor
bound
push
xlat
repz
inc
jb
gs
cmp
xchg
inc
push
in
sub
cld
cld
jg
dec
cli
lock
scas
(bad)
imul
das
call
nop
repz
lock
mov
mov
and
nop
lds
jbe
fist
ins
jge
cld
cmp
pushf
or
test
(bad)
jge
pop
xchg
push
push
sti
es
call
rdtsc
in
ds
stos
retf
out
pop
inc
push
jmp
dec
mov
aad
dec
aas
sub
push
xor
aaa
cwde
hlt
cld
(bad)
cwde
sbb
pop
inc
jb
out
fld
and
mov
imul
push
sbb
ins
cmps
or
mov
sbb
jge
dec
rcr
mov
push
sbb
call
dec
mov
pushf
in
pop
movs
stos
call
int3
mov
and
fnstsw
js
adc
inc
and
not
and
cmp
sub
and
mov
mov
hlt
sbb
jae
inc
(bad)
mov
ret
iret
push
shr
iret
dec
inc
inc
std
nop
dec
jns
aam
push
aaa
dec
mulps
in
jo
scas
push
sbb
(bad)
cmp
jecxz
push
pop
idiv
and
jg
sbb
mov
jmp
in
mov
xor
cmc
dec
xchg
jp
call
aam
sahf
mov
imul
ins
xchg
dec
or
jecxz
sub
arpl
cmp
or
xchg
dec
sub
pop
mov
and
into
pushf
add
loopne
mov
leave
in
ror
in
in
sbb
std
cmp
cmc
push
jg
sbb
lock
call
inc
push
mov
into
mov
xchg
int3
mov
dec
push
imul
and
or
cmp
arpl
pop
lea
sbb
xor
ds
inc
sub
clc
mov
sub
jmp
mov
adc
push
cmc
in
mov
in
sub
loopne
xchg
cld
int3
sahf
adc
mov
xchg
iret
push
push
cmp
inc
xlat
adc
add
int3
cmp
pushf
pop
cmps
xchg
xchg
ins
je
(bad)
idiv
hlt
shl
shl
sbb
pop
pop
pop
add
int3
mov
xchg
mov
sbb
int3
popa
int
sub
dec
push
outs
sti
jg
sahf
xor
sar
xor
and
inc
cmps
repz
sbb
mov
pop
jno
adc
cmp
out
addr16
out
cmp
and
leave
xchg
sub
ret
pop
fnstenv
loopne
sar
push
pushf
(bad)
test
ret
mov
inc
scas
(bad)
xor
adc
shl
jmp
inc
inc
jecxz
push
pop
into
xchg
fsubrp
stos
ret
xchg
ss
int
out
pop
test
add
test
mov
mov
pop
xor
jbe
movs
data16
inc
or
inc
fwait
add
sbb
and
jecxz
pop
iret
mov
sub
(bad)
mov
cli
xor
mov
mov
push
ds
add
mov
mov
fcomp
inc
mov
test
sbb
mov
dec
push
or
call
outs
jb
jbe
sar
imul
mov
(bad)
jmp
inc
data16
push
pop
test
lods
mov
xor
sub
mov
jmp
jg
cwde
rcr
lds
retf
ja
xor
or
fwait
sbb
pop
lods
call
adc
jb
lahf
push
or
inc
vmovd
xor
rcr
xchg
shl
mov
icebp
pop
xor
and
adc
ss
dec
aas
inc
pop
outs
out
jmp
pop
int3
rcl
(bad)
shl
lea
jle
jecxz
add
call
cli
popf
pop
shr
leave
jbe
out
(bad)
out
fisttp
psllw
cmc
add
adc
not
aaa
dec
psubb
sahf
mov
push
jo
in
shl
or
std
divps
cld
gs
call
mov
in
ss
add
jp
fild
xchg
ins
cdq
sub
xchg
aaa
test
and
adc
xor
leave
cwde
jnp
sbb
mov
ss
mov
stos
icebp
and
jo
pop
cmps
cmp
push
jmp
dec
and
push
int3
adc
ja
xchg
adc
jle
scas
pop
retf
(bad)
push
daa
add
cmp
push
fwait
test
scas
in
cmp
aas
push
mov
gs
cmc
add
push
mov
mul
or
or
popf
push
mov
sbb
lods
stc
xor
aam
and
push
cwde
push
popa
in
xor
clc
dec
and
push
sbb
xchg
cmp
pop
nop
dec
pop
aam
and
pop
jae
push
retf
inc
int3
xor
jb
xchg
std
gs
outs
cmps
ins
ficomp
pop
mov
cmps
sar
cdq
lds
sub
lock
xor
es
cmp
add
adc
inc
pop
(bad)
ins
rcr
aaa
pop
stos
seto
dec
out
in
pusha
lahf
in
icebp
xchg
push
jp
cld
xchg
cmps
pop
aad
mov
adc
mov
sti
and
sbb
and
adc
pop
adc
int
fadd
add
mov
jmp
popa
lods
mov
imul
in
push
push
xor
inc
lds
imul
scas
test
adc
lock
mov
mov
fist
aas
mov
lods
hlt
inc
test
push
sbb
push
outs
sbb
jge
xor
and
cdq
pop
xor
push
into
jmp
gs
je
xchg
lock
das
repnz
jmp
mov
je
je
or
pop
jae
pop
push
mov
outs
mov
aaa
add
ja
dec
sub
push
sbb
pop
xchg
pop
retf
sahf
je
shl
xor
outs
lds
(bad)
adc
test
nop
and
jg
pop
xchg
sbb
jno
fidivr
outs
pop
aas
cld
(bad)
nop
add
out
sub
cmp
in
je
repnz
cs
shl
add
inc
add
mov
pusha
cwde
sub
push
xor
in
mov
out
retf
mov
add
in
mov
pop
push
cmps
adc
imul
mov
aad
mov
jno
push
jae
ror
fcomp
push
sbb
sbb
stc
mov
push
test
push
ins
test
xor
xchg
jae
jne
ins
ds
push
mov
xor
sub
out
xchg
loope
push
sbb
pop
or
xchg
inc
fucom
push
dec
jge
mov
or
data16
and
iret
test
test
test
aas
movs
mov
in
mov
xor
dec
ficom
push
mov
adc
lods
cmp
jmp
not
ret
pop
mov
and
push
icebp
in
cwde
aaa
in
loop
imul
call
push
mov
loopne
cmp
xchg
dec
mov
scas
in
dec
jl
jae
call
fist
rcl
out
jp
ss
mov
or
js
mov
jp
xchg
lea
jg
xchg
pop
mov
xchg
cmp
ins
add
mov
or
repz
fimul
mov
jns
(bad)
sbb
mov
lock
sahf
sbb
les
jle
add
imul
rcr
iret
call
jae
or
jnp
out
sub
mov
adc
and
pop
pop
cmp
sbb
adc
test
jp
mov
and
xor
lahf
xchg
(bad)
jmp
sub
and
add
add
loop
xchg
popf
(bad)
shr
sbb
jae
xchg
sti
pop
test
cwde
jns
xchg
xchg
ins
jmp
test
imul
div
pop
pop
and
je
adc
(bad)
jmp
(bad)
sti
je
(bad)
or
xchg
mov
and
push
pop
mov
retf
(bad)
movs
shr
popf
cmp
mov
out
cmp
sbb
aas
test
adc
fwait
lods
push
fsubr
pop
mov
sub
popa
das
xchg
xor
nop
pop
sub
(bad)
xor
push
ror
cwde
cmps
pop
(bad)
xor
loop
clc
out
rol
js
jne
in
sub
aad
daa
stos
pop
inc
xor
add
(bad)
mov
mov
jo
sub
(bad)
icebp
arpl
dec
shl
dec
jmp
ret
add
push
mov
movs
ror
aam
aad
xchg
into
daa
inc
loopne
inc
sbb
dec
stc
ss
cmp
jge
retf
fisttp
outs
inc
sbb
fsubr
mul
mov
pop
fdivr
ss
(bad)
jne
out
cmp
mov
scas
test
adc
dec
test
or
add
xor
cs
imul
or
sbb
out
jg
and
movs
aaa
ins
and
neg
push
fs
std
inc
dec
and
ror
jge
fild
adc
mov
stc
xchg
xor
xor
push
add
sub
inc
or
pop
ficomp
rcl
mov
leave
test
imul
dec
repnz
daa
cld
cs
clc
jecxz
not
jno
xor
pop
mov
push
fcom
jmp
inc
inc
mov
imul
cmp
push
test
xor
push
out
into
sar
cmp
fisttp
cwde
pop
add
push
mov
mov
mov
push
mov
xor
sbb
ret
int3
push
mov
(bad)
pop
je
mov
imul
cwde
scas
inc
loopne
xor
mov
mov
or
xchg
dec
or
enter
sub
test
test
mov
mov
call
loopne
lods
xor
out
mov
or
int
xor
or
movs
leave
xchg
cmp
xor
pop
test
shr
mov
leave
or
inc
inc
mov
int3
dec
mov
inc
or
inc
mov
lea
pop
mov
fld
xchg
sbb
test
fwait
sbb
cld
in
push
imul
and
cwde
sbb
sub
sbb
mov
shl
lods
shl
shr
fist
ja
int
inc
sbb
movs
push
push
cmp
xchg
mov
fidivr
xchg
leave
bound
mov
mov
das
push
(bad)
cdq
test
test
sub
out
pop
cmp
int
jns
push
scas
xor
add
cmps
out
jmp
repz
inc
ss
scas
mov
hlt
jb
push
cmp
dec
xchg
pop
mov
cdq
in
test
jle
mov
clc
add
xchg
and
in
and
aam
int
stc
sbb
inc
cmp
sbb
hlt
jg
xor
shl
shl
push
and
cwde
mov
test
mov
xchg
pushf
or
lods
enter
lea
mov
fnstenv
jg
mov
cld
fwait
loop
inc
or
push
in
popa
sbb
sbb
out
ins
rol
mul
lock
cmps
mov
and
or
inc
mov
pop
(bad)
scas
sub
out
xchg
sbb
rcl
push
imul
sbb
jp
call
inc
sahf
mov
mov
mov
sbb
sub
cmp
ds
nop
jmp
lahf
xchg
ins
jmp
xchg
scas
fidiv
mov
pop
dec
xchg
cmp
mov
sub
sbb
inc
mov
test
jge
ss
arpl
mov
jb
pop
inc
xor
repz
add
in
add
mov
in
sbb
mul
fwait
dec
jmp
rol
mov
inc
lar
pop
xchg
sahf
ret
(bad)
add
push
movs
cmp
data16
lock
cs
jl
sub
bound
movs
xchg
push
dec
pop
lods
mov
lea
pop
popf
and
xchg
jno
stos
pop
add
push
lock
in
(bad)
xlat
popf
fiadd
jg
fisttp
js
sbb
pop
add
rcl
jne
enter
mov
outs
outs
imul
push
rcr
mov
xor
popa
ret
dec
call
out
mov
test
(bad)
out
arpl
jle
dec
or
add
xor
or
leave
mov
leave
aad
pop
movs
test
sbb
xor
dec
aas
outs
sub
push
arpl
or
xor
mov
mov
xchg
adc
xor
sub
cmps
and
mov
adc
dec
cmp
loope
(bad)
dec
or
and
jg
mov
out
pop
fistp
xchg
test
fldenv
adc
mov
fdiv
sar
pushf
test
dec
test
xchg
ret
(bad)
fidiv
jnp
icebp
push
jbe
iret
(bad)
xchg
dec
scas
and
adc
dec
cmp
ror
inc
stos
add
adc
sbb
adc
mov
addr16
dec
jo
das
jae
call
mov
push
mov
xchg
call
iret
sub
mov
adc
dec
push
add
int3
dec
fistp
aam
test
iret
fisub
sbb
add
mov
repnz
push
mov
dec
mov
push
push
ret
int
(bad)
pop
inc
sub
mov
mov
aam
shl
(bad)
call
mov
rcr
movs
jl
aaa
call
add
mov
fiadd
(bad)
out
jo
cdq
add
and
mov
jb
popf
push
call
addr16
cmp
jge
inc
push
push
cmps
(bad)
mov
adc
jl
add
add
ins
fs
nop
in
cmp
or
xor
arpl
push
in
jl
mov
ja
xchg
add
inc
add
xchg
adc
dec
or
fdiv
sbb
adc
inc
xchg
(bad)
jge
sti
pop
mov
push
shl
movs
test
(bad)
mov
lahf
xor
mov
sti
add
cld
mov
ss
inc
add
sub
lods
sbb
mov
push
dec
adc
jecxz
aaa
mov
dec
and
jge
shr
mov
aam
pop
mov
shl
aad
adc
add
ror
and
sub
sti
les
or
add
mov
aaa
inc
push
iret
mov
aaa
sbb
dec
push
dec
dec
sub
xchg
fiadd
ins
shr
movs
jle
jmp
mov
mov
sub
test
or
out
ss
sub
mov
js
push
sub
ret
add
lahf
sub
loopne
inc
mov
add
xor
jns
in
and
pop
mov
jp
mov
pop
xchg
jb
rcl
xor
inc
xor
xor
call
inc
mov
mov
mov
sub
sbb
add
fimul
dec
push
mov
mov
imul
clc
pop
and
int
mov
(bad)
outs
or
into
in
test
mov
mov
push
jbe
into
aam
mov
push
pop
cs
(bad)
repz
hlt
scas
and
push
in
or
test
push
ficomp
add
and
inc
pop
loop
cwde
push
pop
mov
fnstsw
jo
push
sub
or
mov
dec
call
cmp
lods
and
dec
lods
daa
sub
retf
jb
and
gs
test
out
pusha
jmp
sbb
jb
(bad)
jge
ror
pusha
add
lods
(bad)
fcmovu
xor
fcomp
sbb
imul
push
and
arpl
and
push
retf
cwde
inc
fs
ins
add
fimul
push
enter
fistp
and
hlt
test
adc
jmp
(bad)
sar
cmp
mov
cmps
sbb
les
pop
and
scas
cmp
mov
jb
in
clc
inc
adc
lahf
fsub
inc
mov
ret
fisttp
hlt
lock
repz
shl
out
clc
add
(bad)
mov
ins
inc
iretw
sub
rcr
imul
jnp
dec
sbb
mov
aas
push
pop
sub
or
fsub
mov
(bad)
add
fwait
(bad)
sub
push
push
push
cmps
xchg
shr
push
push
xchg
div
jecxz
mov
ja
cmp
cdq
mov
jmp
add
mov
sbb
xchg
fsub
fmul
jmp
scas
cmp
loop
mov
outs
rcl
push
or
test
and
sub
xchg
nop
jnp
xchg
mov
mov
dec
jmp
nop
test
xor
xchg
test
int
or
imul
jno
(bad)
push
cli
mov
retf
outs
or
arpl
xor
nop
sbb
sub
sub
mov
pop
mov
jge
mov
sti
jecxz
mov
and
xchg
imul
sti
mov
mov
mov
dec
ror
aaa
inc
pop
push
mov
retf
ds
cmp
ds
xchg
daa
inc
mov
loope
mov
or
stos
bound
mov
mov
inc
int
pop
in
std
mov
or
(bad)
in
(bad)
stc
stc
lods
xchg
adc
test
pusha
dec
dec
fcom
sar
push
in
inc
das
mov
add
mov
popa
sub
into
imul
pop
pop
jg
ja
pushf
mov
add
aas
xchg
mov
std
pop
in
and
sub
or
cld
adc
cmp
jp
dec
or
push
ins
pop
imul
sub
inc
fisttp
inc
cs
dec
cmp
test
loop
pop
out
test
in
lea
jl
sbb
or
xor
call
jmp
mov
push
(bad)
dec
add
int3
rol
repnz
cmp
retf
out
and
pop
mov
pop
xor
imul
std
cmp
push
jnp
inc
ds
(bad)
push
sub
dec
shl
mov
sub
pop
push
in
icebp
daa
pop
int
in
movs
inc
jmp
jmp
push
add
dec
test
cdq
mov
ins
mov
jno
xchg
int
enter
sbb
lods
and
push
jmp
fs
xor
js
call
bound
popf
movs
mov
jb
xchg
lods
popf
jnp
mov
lock
pop
shl
sub
jnp
movs
sbb
cmps
sti
push
or
lods
mov
ror
imul
lock
dec
cmps
stc
sub
scas
std
xchg
out
and
inc
ret
jns
cmp
push
fmulp
bound
jnp
(bad)
icebp
cmp
mov
xchg
push
ret
std
popa
and
add
push
cmp
movs
stos
ror
and
mov
call
mov
or
and
cmp
jmp
adc
inc
or
xchg
sub
in
addr16
cs
jae
sub
mov
stos
inc
mov
dec
imul
jl
jmp
and
xchg
pop
fstp
and
jnp
xor
inc
sbb
or
loope
bound
cmp
lock
imul
aaa
mov
or
adc
cmp
(bad)
lock
and
out
adc
cmps
dec
cmp
aaa
dec
sar
add
jno
mov
cmps
push
pop
cmps
arpl
gs
fild
jp
jg
and
inc
fs
mov
mov
push
add
(bad)
aad
pop
sub
push
xor
sbb
jle
das
nop
pop
jo
pop
push
or
popa
iret
inc
loopne
pop
xchg
fimul
scas
idiv
scas
xchg
or
popf
xchg
xchg
int
loopne
jo
test
cmp
in
inc
adc
pop
cdq
shr
cs
scas
stos
mov
lds
push
mov
xlat
sahf
jecxz
mov
push
dec
stos
xchg
sbb
cwde
sbb
or
ret
pop
mov
mov
pop
xchg
fst
dec
xchg
add
ja
scas
mov
push
jne
inc
shl
cmp
sub
dec
pop
icebp
xor
xor
mov
sub
push
xchg
mov
xor
in
in
dec
aaa
jl
mov
xchg
lds
mov
dec
fsub
jle
push
pop
into
ret
push
test
xchg
or
(bad)
rcr
xchg
pop
fstp
fdivr
js
(bad)
mov
test
jns
leave
int3
cs
repz
pushf
xchg
inc
neg
stc
retf
ins
xor
jo
push
push
xor
cdq
jbe
inc
daa
outs
ficom
mov
or
dec
xor
lahf
inc
fstp
push
ja
dec
mov
aam
js
repnz
sub
cmp
ror
mov
in
idiv
cmp
loopne
loopne
(bad)
addr16
iret
scas
mov
std
movs
sar
mov
xchg
arpl
mov
add
int
xchg
mov
imul
sub
cmp
pop
lea
pop
xchg
rcr
cmp
movs
add
inc
repz
jns
call
mov
inc
pop
sub
cdq
(bad)
push
lock
inc
sahf
cli
and
and
sbb
inc
xchg
int
dec
jmp
mov
xchg
scas
and
add
cdq
push
inc
loopne
mov
jge
(bad)
sbb
xor
push
cs
loop
push
xor
loopne
arpl
dec
scas
ret
aam
sub
(bad)
cmps
pop
dec
mov
add
mov
repz
pop
cmc
jecxz
add
mov
(bad)
jp
and
adc
call
loope
(bad)
mov
inc
cwde
or
ins
outs
jle
clc
pop
fidivr
fidiv
shl
popf
cs
imul
or
mov
ret
lods
mov
ins
mov
sbb
inc
cmp
(bad)
rcr
call
pop
jl
sbb
pop
xor
inc
sub
cmp
pop
jl
fwait
jmp
mov
and
pop
pop
dec
cmp
and
dec
mov
shl
cs
ret
xchg
ret
cmps
push
mov
add
rcl
xor
add
mov
or
sub
xchg
fidiv
scas
out
ror
cmps
sti
pop
rcl
jne
ror
out
push
sub
push
adc
out
(bad)
push
pop
lea
ja
push
mov
adc
sahf
adc
pop
push
fnstsw
aad
add
sub
(bad)
push
and
jl
sub
outs
rol
out
sub
gs
sub
sub
sub
sbb
dec
retf
repnz
mov
pop
add
iret
mov
jmp
jnp
xor
inc
xor
je
imul
mov
loopne
or
inc
push
and
xchg
adc
rol
or
jns
inc
popf
inc
dec
ins
xor
int3
call
nop
aaa
pop
int
scas
dec
repnz
shr
into
jg
mov
retf
outs
mov
jle
cmp
fdiv
clc
sub
cmp
adc
xchg
sbb
jp
sti
rcr
sub
das
xor
and
shl
cmps
push
cwde
sub
(bad)
mov
int3
sbb
imul
jo
jns
xchg
lods
or
stos
retf
fld
pop
mov
shl
sbb
pushf
dec
and
int3
push
stos
popa
or
add
cmp
leave
inc
mov
mov
in
rcr
or
mov
adc
lds
fist
jno
(bad)
lds
dec
mov
inc
stc
fwait
add
mov
(bad)
mov
aaa
aas
daa
sub
mov
test
es
rol
cmps
push
adc
and
imul
push
sbb
outs
retf
shl
leave
fild
repnz
test
pop
inc
(bad)
sbb
iret
repz
imul
fcmovnu
iret
push
stos
movs
fist
and
push
sti
popf
xor
cs
imul
push
and
mov
shl
pop
jb
das
push
jg
int3
xor
inc
jns
dec
dec
sbb
jg
cdq
scas
jno
sub
gs
test
pop
mov
mov
xchg
add
in
loope
fisubr
push
dec
add
adc
in
rol
add
cmp
fs
dec
popa
mov
mov
mov
adc
iret
mov
ja
arpl
movs
push
scas
(bad)
adc
mov
add
add
fcmovu
scas
pop
and
mul
pop
jbe
jb
in
adc
fwait
call
inc
in
pop
pop
sub
add
mov
sub
adc
adc
mov
and
shr
scas
add
xchg
dec
inc
and
mov
lock
cs
jno
in
std
outs
in
leave
iret
cmp
jo
sti
jecxz
inc
and
adc
scas
xor
inc
scas
cmp
inc
not
leave
pop
mov
call
mov
mov
fbld
test
push
and
pop
mov
lahf
or
xlat
xchg
jb
add
pop
add
out
in
xchg
out
lods
xchg
push
and
mov
pop
inc
ret
mov
clc
adc
jo
mov
mov
sahf
dec
mov
daa
loop
adc
(bad)
out
or
inc
ret
in
cli
sar
out
call
pop
stc
ja
fs
add
outs
xor
iret
mov
addr16
pushf
nop
icebp
je
inc
rcl
int
js
ret
lods
pop
inc
push
rcl
(bad)
mov
out
inc
arpl
xor
inc
div
and
inc
ins
pushf
mov
popa
cmps
mov
retf
push
jg
loope
and
(bad)
adc
shr
inc
out
daa
fild
mov
pop
mov
jmp
loop
push
push
loop
add
mov
mov
lods
ins
bound
mov
jne
test
jmp
jp
inc
stos
data16
icebp
arpl
jge
rol
or
inc
sahf
mov
jmp
sub
dec
lods
inc
aas
ret
lods
(bad)
cmp
cmp
mov
pushf
out
xchg
test
movs
mov
ret
scas
std
push
call
lods
mov
nop
pop
int
xchg
xor
iret
sub
mov
jmp
mov
vmwrite
mov
cmp
jg
mov
xor
mov
popa
jae
or
jmp
sub
call
in
test
cmps
(bad)
dec
mov
or
popa
lods
mov
out
push
scas
mov
popa
xlat
jmp
stos
cmp
addr16
or
inc
and
pusha
mov
retf
pop
repnz
dec
lahf
int3
cdq
inc
dec
sub
out
xchg
lock
aad
push
jmp
imul
mov
aad
pop
popa
jmp
cdq
mov
aaa
push
mov
mov
mov
(bad)
push
lods
push
jns
mov
inc
mov
and
mov
lock
(bad)
or
lea
(bad)
adc
sbb
sbb
jnp
mov
ret
fisttp
out
jmp
scas
fsubr
push
pop
jne
icebp
pop
lahf
(bad)
int
cmp
mov
es
(bad)
mov
loopne
cmc
sbb
imul
push
mov
adc
adc
mov
pop
cmp
dec
dec
adc
cmp
pmuludq
mov
jecxz
xor
add
cmps
rol
loope
mov
mov
push
fwait
xor
clc
mov
adc
mov
pushf
pop
fld
pop
jne
jmp
sbb
shl
pop
test
push
xchg
mov
in
imul
jae
mov
jmp
cmp
in
sub
xor
lahf
pop
ret
repz
popa
mov
cs
mov
imul
ss
inc
rcr
dec
sub
push
ins
fnclex
popf
and
in
add
adc
or
pop
cmps
(bad)
cmp
jne
mov
inc
add
fistp
setbe
outs
rol
call
arpl
movs
dec
cmp
fidivr
sbb
shl
adc
retf
cmps
ins
push
cdq
jp
mov
mov
inc
push
pop
pop
fcomp
ds
adc
(bad)
popa
scas
xor
cmc
mov
ds
jo
nop
mov
es
icebp
rol
(bad)
cmc
mov
add
popf
inc
idiv
cmp
dec
test
or
lods
jge
mov
mov
shl
pop
shl
cdq
sbb
mov
cmp
inc
xchg
outs
cs
pop
mov
bound
arpl
and
fcomp
std
out
add
inc
or
out
int3
rol
pop
icebp
call
mov
stc
sbb
mov
retf
adc
stos
loope
push
mov
sub
dec
lods
dec
xor
cmp
push
out
jg
sbb
pop
sub
cmp
sbb
(bad)
out
clc
or
inc
xor
or
lods
cs
jp
stc
xor
stc
or
cmp
cmp
jns
xchg
lea
push
cmp
test
add
(bad)
cmp
inc
xor
cmc
mov
test
ror
ret
pop
fcmovb
pop
xchg
mov
mov
dec
and
dec
repz
idiv
ret
jnp
mov
cmc
mov
fisttp
inc
mov
mov
out
cmc
mov
push
push
inc
mov
mov
cli
or
int
daa
add
daa
and
repz
mov
outs
mov
int
movs
adc
push
add
aad
test
dec
inc
push
ins
sbb
jp
cmp
(bad)
idiv
repz
in
inc
mov
add
inc
inc
je
lea
int3
shl
mov
cmp
pop
loop
ds
cmp
xchg
data16
daa
fbld
in
neg
pop
(bad)
lods
xor
lods
sub
fs
xor
or
jl
inc
xor
cmp
jle
sub
je
mov
dec
test
ins
lea
fnstenv
mov
xchg
jnp
test
mov
and
fist
xlat
fcmovnbe
sub
dec
ds
out
xchg
imul
add
pop
outs
jnp
adc
hlt
xor
add
jle
inc
push
rcr
and
(bad)
jmp
fisttp
(bad)
fld
jg
xor
rol
sbb
out
cwde
sbb
dec
xchg
test
mov
scas
retf
fs
test
add
aam
sbb
pop
ins
fnstsw
adc
in
iret
mov
jp
lods
scas
fdivr
cmp
pop
(bad)
or
imul
ffree
pop
mov
and
ja
shl
add
outs
xchg
push
cmp
js
inc
and
xlat
daa
xchg
out
pop
retf
lods
movs
jp
fdivp
mov
jle
int3
sar
cmps
or
sub
retf
ja
jbe
lods
sbb
dec
movs
les
aad
push
mov
les
fcom
iret
fiadd
jbe
pushf
push
hlt
cli
out
(bad)
xor
ins
out
test
push
lahf
jb
mov
ss
and
pop
mov
aaa
mov
xchg
rol
test
sub
sbb
js
adc
repz
or
outs
mov
out
(bad)
or
lock
push
in
mov
xor
rcr
sbb
mov
cmps
pop
daa
in
rcr
mov
leave
push
add
or
pop
out
rol
dec
sub
push
iret
mov
stos
out
stos
scas
dec
popa
fdivr
aad
call
pop
rcr
jnp
jmp
daa
push
ret
xchg
sub
xchg
scas
jp
jo
mov
mov
js
pushf
inc
movs
push
mov
out
mov
pop
fadd
jge
add
pop
xor
(bad)
pop
icebp
jne
mov
enter
test
mov
push
xchg
enter
push
adc
push
pop
sbb
push
stc
lock
push
inc
shr
push
std
popa
sub
inc
dec
stc
adc
cmps
mov
je
ss
sbb
push
(bad)
aam
stos
add
imul
push
add
jne
adc
pop
cmp
imul
nop
and
ds
fisttp
fdivrp
push
mov
sar
add
jne
outs
sbb
mov
mov
mov
lahf
dec
fmul
or
cmp
dec
inc
sbb
(bad)
pop
adc
jle
out
bound
fild
retf
mov
jmp
mov
push
sbb
int3
pop
aaa
jno
jge
jo
cli
aad
clc
das
sbb
jnp
clc
(bad)
mov
std
fstp
dec
(bad)
in
out
ins
call
pop
imul
cmp
jle
cmp
mov
scas
js
aas
(bad)
out
dec
jo
gs
movs
mov
sbb
dec
fist
mov
fcomip
or
jp
shl
xchg
sbb
ficomp
shl
and
cld
repnz
ret
and
lds
bnd
into
push
pop
cmp
jl
gs
xchg
ret
xor
or
addr16
stos
popa
cmp
movs
pop
cmp
add
clc
fistp
sbb
push
stc
sub
adc
data16
inc
mov
mov
dec
cmp
pop
mov
lods
out
pop
icebp
fwait
jge
aaa
in
or
push
movs
retf
aam
cmp
lods
enter
or
and
jl
mov
out
les
add
dec
fistp
sbb
lds
sbb
int3
sti
aaa
mov
push
fimul
fild
pop
in
jecxz
add
ror
test
lods
ret
rcr
jbe
jo
and
shl
in
adc
adc
inc
sub
xchg
push
xor
xor
add
fldenv
cli
or
jle
pop
cmp
test
pop
or
icebp
(bad)
out
jmp
imul
ret
xchg
and
fst
mov
aaa
mov
dec
test
or
jo
pop
add
mov
jne
xchg
in
jae
(bad)
pop
mov
sub
sti
mov
mov
hlt
xchg
dec
jnp
mov
push
cmps
mov
(bad)
(bad)
xchg
xchg
adc
pop
push
ds
and
fsub
jmp
xchg
adc
cli
xchg
mov
scas
pop
inc
(bad)
mov
push
scas
xor
sar
xor
inc
loope
div
out
cmp
jl
jg
xchg
out
lods
mov
inc
push
scas
out
xor
adc
scas
(bad)
fist
inc
and
(bad)
push
(bad)
fs
shr
mov
dec
scas
aaa
(bad)
pop
into
adc
xchg
ds
adc
mov
xchg
mov
sub
idiv
pop
xchg
sbb
jge
mov
scas
push
and
xlat
pop
adc
add
stc
stc
ins
(bad)
add
out
jg
mov
add
sbb
xchg
cmps
test
pusha
or
jle
push
enter
data16
mov
rcr
push
xor
cmp
xchg
stos
or
xor
push
fsub
jmp
mov
(bad)
fdiv
mov
lahf
ret
scas
hlt
(bad)
popa
mov
jnp
aad
adc
dec
or
push
not
lods
mov
push
sbb
aam
jbe
(bad)
fdivr
add
pushf
jge
mov
mov
fst
inc
ins
mov
inc
mov
jg
inc
push
imul
movs
pop
push
xchg
sbb
mov
mov
cs
movs
ret
aas
jb
inc
mov
push
mov
cmp
jle
add
scas
arpl
dec
retf
sysexit
repz
lea
mov
jp
sub
pop
adc
aaa
mov
sahf
repz
sbb
push
out
dec
data16
jle
sub
dec
jnp
push
retf
popa
dec
push
aas
and
push
pop
mov
nop
(bad)
in
stos
mov
and
jne
call
rcl
jle
and
xor
dec
dec
mov
xchg
rcl
sahf
pop
aas
cld
aas
fld
shr
loop
adc
jg
test
mov
scas
stc
mov
jno
lods
cmps
pop
out
in
pop
xchg
cmp
cmp
repnz
ins
adc
cld
mov
ret
mov
fimul
and
pop
call
cdq
pop
sub
les
cmp
dec
cdq
loop
ror
xchg
sub
dec
cmps
inc
iret
out
xor
xor
and
mov
mov
mov
aad
lock
adc
bound
xchg
or
jae
xor
inc
arpl
mov
cmp
shr
mov
lds
sbb
adc
es
int
loopne
xchg
add
call
pushf
hlt
push
adc
adc
fadd
fdivp
or
sbb
sbb
das
cmp
jp
ins
add
sti
dec
fdiv
inc
out
dec
push
push
movs
cmp
nop
mov
xor
iret
stc
sub
lods
adc
test
cwde
pop
add
sub
push
sbb
nop
mov
fst
fs
leave
xor
xchg
push
loope
or
xchg
or
lods
test
pop
inc
push
sub
push
es
dec
test
or
push
cld
cmp
out
cmp
loopne
mov
pop
xor
pop
scas
add
pop
cmps
push
movs
nop
push
ficom
jecxz
jbe
pop
pop
jecxz
pop
inc
sub
sbb
cs
stos
(bad)
dec
(bad)
pop
cwde
out
scas
ins
xor
dec
loopne
inc
mov
mov
ins
push
jl
je
mov
or
rcl
dec
in
int3
mov
popa
mov
(bad)
push
iret
jne
pop
sbb
inc
push
push
pop
adc
jl
adc
pop
fst
fbstp
xor
fmul
ficom
pop
cmp
fistp
push
push
xchg
mov
rcr
fnsave
and
pusha
arpl
int
cmp
sbb
cmp
in
jo
fcom
sti
sub
das
mov
jmp
xchg
mov
cmc
hlt
xor
daa
mov
push
adc
(bad)
sbb
je
inc
les
dec
lods
adc
outs
fwait
ror
rsqrtps
ret
aad
mov
lahf
jo
lods
pop
inc
push
retf
cmp
or
dec
fbstp
inc
push
push
enter
jo
mov
shl
stos
mov
cwd
movs
sbb
mov
adc
nop
mov
mov
daa
pop
or
cld
mov
(bad)
data16
inc
mov
(bad)
dec
idiv
sbb
mov
fprem
sub
pop
jne
(bad)
idiv
jecxz
lds
mov
or
push
in
sbb
test
pop
push
mov
jo
jo
mul
test
fs
out
push
dec
sbb
adc
inc
pop
nop
shl
jle
les
lock
bswap
inc
aas
or
cli
and
int
pop
or
pop
inc
repz
lods
iret
mov
ffreep
stos
enter
sbb
or
push
lock
add
cmp
pop
add
xchg
cmps
retf
push
xchg
dec
pop
xchg
invd
daa
mov
mov
test
ja
xor
retf
data16
(bad)
rcr
push
gs
fadd
adc
dec
sub
fucom
jb
pop
sub
aam
pop
jo
inc
xchg
xchg
push
loope
jbe
pop
xchg
std
les
xchg
xchg
fyl2x
mov
out
cmp
xor
pop
test
or
retf
xor
sub
shl
movs
pop
popa
clc
and
xchg
xor
scas
popf
out
xor
js
cmp
and
scas
lods
in
push
aad
dec
repnz
test
and
mov
dec
mov
xor
outs
cmps
sbb
(bad)
cli
cwde
bound
inc
push
retf
fstp
push
or
cwde
xor
add
ds
(bad)
imul
pop
mov
mov
xor
cmp
pop
and
out
dec
clc
mov
mov
std
and
test
cmp
es
mov
mov
out
sbb
shl
mov
xor
mov
and
adc
out
xchg
cmps
clc
retf
rcl
dec
sub
inc
fistp
and
not
mov
sar
test
sbb
mov
lahf
popa
daa
and
fnstsw
add
jo
jae
arpl
jecxz
int3
ins
jp
repz
out
jne
test
mov
imul
rcl
xor
and
hlt
add
xchg
inc
inc
dec
adc
loopne
mov
sub
xchg
pop
jo
je
inc
test
dec
aas
aaa
mov
sub
push
dec
jns
imul
sahf
fldcw
sbb
jmp
or
xchg
fsub
push
dec
pop
addr16
inc
inc
popf
retf
jno
arpl
mov
mov
cmc
pop
jno
shl
cli
jae
cmp
scas
jae
rcl
gs
cmp
icebp
pop
les
popf
fsubr
sub
push
add
in
inc
mov
add
rol
xchg
cs
fadd
(bad)
jecxz
xor
push
dec
and
int3
rcl
sub
cmp
cmp
mov
enter
(bad)
push
ret
dec
out
and
in
lahf
mov
pushf
push
push
or
adc
sbb
or
pop
pusha
dec
rcr
sbb
jo
inc
into
rcr
fidivr
icebp
(bad)
mov
adc
mov
dec
out
jl
xor
cmps
add
aaa
xor
mov
cmc
push
or
lock
rcl
xor
sub
dec
enter
gs
fwait
jge
adc
mov
les
mov
inc
or
pop
mov
xchg
fadd
push
push
fadd
sub
xor
jmp
push
out
push
popf
lahf
test
inc
aad
sti
jg
mov
push
daa
test
js
inc
(bad)
push
(bad)
lock
cld
push
mov
or
je
loopne
lea
pop
loopne
cmp
neg
scas
push
jg
dec
js
les
xchg
(bad)
inc
dec
cdq
pop
cmp
pushf
loop
xor
bound
adc
and
pop
and
xchg
mov
pushf
mov
leave
pop
fwait
mov
jbe
jo
ss
fild
into
pop
mov
push
test
add
fnsave
or
jecxz
fcmovnu
fdiv
daa
out
mov
cmc
jne
mov
inc
test
inc
test
dec
adc
mov
jle
into
loopne
popa
call
jecxz
cmps
mov
(bad)
adc
mov
pop
mov
inc
pop
fsubr
mov
xor
imul
(bad)
mov
inc
mov
gs
xchg
cmp
pop
movs
or
adc
adc
loope
mov
scas
call
jg
or
adc
pop
loopne
repnz
outs
push
mov
outs
pop
neg
inc
das
xchg
into
hlt
lea
xchg
aam
push
mov
ds
lods
dec
xor
jo
mov
jp
mov
out
mov
sti
stos
inc
jmp
jmp
or
pop
xchg
fldenv
outs
(bad)
sbb
sub
fisttp
xor
repz
mov
test
aad
ins
imul
ja
and
xchg
cmp
bound
dec
jl
test
aaa
adc
mov
mov
lds
fimul
dec
test
mov
jge
inc
imul
lea
pop
(bad)
jb
cmps
lds
and
and
out
mov
hlt
out
mov
stc
sub
push
outs
inc
retf
xor
shl
xor
add
adc
dec
scas
inc
daa
pushf
push
retf
xor
sub
inc
adc
push
lahf
pop
sub
ret
inc
pop
aas
mov
jle
jg
mov
xor
pop
popa
pop
nop
mov
sti
lds
xor
jno
and
in
mov
ss
jnp
popa
popa
loop
xchg
or
ret
xor
in
sti
jns
jecxz
or
out
ins
inc
outs
ja
or
mov
adc
addr16
addr16
cmp
imul
inc
push
pop
inc
xchg
dec
rcl
add
mov
pop
xor
cmc
movs
and
leave
pop
fld
std
inc
mov
test
or
jecxz
fwait
add
movs
dec
popa
retf
lahf
xchg
mov
lahf
movs
popf
inc
and
mov
push
sbb
inc
push
lgs
scas
and
test
xlat
mov
outs
mov
jo
iret
iret
pop
push
iret
inc
test
xchg
sub
sti
cmp
scas
(bad)
jmp
(bad)
daa
(bad)
in
sub
retf
in
mov
pop
xchg
jno
mov
ins
pushf
xchg
adc
mov
jmp
xor
xchg
sub
movs
lds
adc
or
test
repnz
movs
cmp
sub
mov
mov
mov
push
fwait
cli
lea
and
test
add
inc
cmps
int
rcr
or
cmp
gs
push
pop
ins
mov
dec
ins
in
mov
jl
pop
xchg
fisubr
fdivr
jle
adc
sbb
mov
icebp
lods
rol
movs
iret
mov
mov
es
xchg
cdq
sti
maskmovq
imul
shl
data16
jge
daa
add
call
push
ret
push
adc
out
leave
inc
popf
popf
sbb
pop
(bad)
push
out
hlt
pop
inc
out
mov
xchg
sbb
mov
push
not
adc
xchg
push
dec
fist
jb
mov
jno
mov
mov
enter
or
push
aad
pop
jnp
inc
cmp
dec
shl
aas
push
je
or
jecxz
push
mov
jno
inc
loopne
fcom
jnp
cmp
scas
ja
dec
jmp
jo
xchg
retf
data16
lods
inc
add
sbb
fdiv
ja
and
pop
sbb
mov
add
push
loop
push
inc
jo
dec
mov
add
push
retf
mov
cmp
in
out
and
mov
sub
cli
sub
adc
cmp
jbe
push
sbb
shr
mov
icebp
idiv
mov
rcr
or
icebp
fwait
or
add
shl
cmps
fistp
inc
lods
jge
fbstp
outs
cli
jecxz
rol
scas
cmp
add
dec
push
nop
lods
dec
cs
sub
dec
push
(bad)
push
sbb
mov
xchg
sbb
pop
pop
push
loope
mov
push
push
adc
push
test
je
jbe
mov
je
and
mov
mov
not
fs
out
dec
dec
(bad)
addr16
jbe
adc
les
(bad)
lds
jecxz
and
jmp
cdq
push
pop
inc
inc
in
adc
add
pop
(bad)
or
add
lods
adc
loope
push
aaa
dec
pop
mov
mov
idiv
out
or
pop
jmp
dec
imul
dec
lea
dec
inc
mov
outs
and
jecxz
ret
dec
or
add
aam
jmp
and
fwait
xchg
iret
sbb
out
push
retf
sub
mov
fbld
outs
and
cmp
(bad)
sub
mov
sbb
mov
sahf
push
adc
call
pop
adc
dec
pop
push
and
xor
adc
mov
cli
pop
movs
out
out
sub
fdivr
jns
fsub
mov
sub
jecxz
retf
mov
dec
arpl
fisubr
pop
jne
xchg
sub
mov
xchg
dec
mov
in
das
(bad)
sub
stc
cwde
push
sbb
mov
test
outs
ficom
call
sub
sahf
cmp
lods
cmp
or
out
jae
inc
mov
pop
bound
and
xor
xor
repz
lds
adc
imul
shl
xchg
sbb
mov
jns
(bad)
movs
dec
nop
ret
push
inc
nop
jno
add
push
nop
cmp
outs
sub
sbb
dec
xchg
pop
jb
ja
sahf
or
fld
push
sbb
call
rcl
int3
lods
movs
sbb
fimul
sbb
das
(bad)
test
mov
sub
and
loopne
fs
jae
sar
ret
or
or
and
adc
in
shl
fistp
inc
femms
or
lds
mov
mov
xlat
shl
pop
cdq
call
and
pop
pusha
mov
cmp
das
fscale
mov
xor
push
pop
das
cmp
call
adc
cmps
in
mov
add
in
ins
enter
icebp
pop
jne
sub
div
loop
sub
jnp
xor
push
xor
cli
cs
mov
cmp
mov
ins
dec
shr
out
popf
fwait
and
mov
sahf
in
add
ja
fisubr
aam
cmps
mov
imul
mov
sbb
cwde
outs
ins
or
fwait
data16
push
addr16
pusha
out
shl
sar
loope
push
jb
xchg
lock
aas
cvtps2pi
jbe
fiadd
mov
inc
sbb
fs
jmp
sbb
outs
jnp
adc
ror
ds
pop
pop
jno
dec
mov
mov
or
adc
ins
stos
push
cmc
scas
cmp
fbstp
cmc
pop
adc
mov
in
lods
sti
retf
movs
mov
pusha
xchg
stc
pushf
push
jb
inc
hlt
xchg
pop
dec
mov
call
loope
adc
cmp
aad
and
push
mov
inc
dec
lods
mov
mov
aam
ja
movs
inc
adc
adc
push
sub
(bad)
jge
dec
out
retf
jae
addr16
add
cmp
add
inc
movs
in
(bad)
jns
and
aad
retf
cs
mov
lods
push
in
sub
in
in
jp
and
mov
(bad)
(bad)
rcr
push
mov
jns
add
jb
dec
jb
iret
out
mov
test
sub
rol
cli
mov
push
shl
je
mov
add
cmp
ins
xchg
push
sub
popa
loopne
dec
js
add
in
mov
or
aad
sub
fs
xchg
popf
test
js
xor
int3
push
jecxz
jp
hlt
xchg
fld
mov
in
ret
int3
inc
dec
repz
push
call
test
xchg
adc
mov
mov
lods
mov
push
cwde
(bad)
mov
push
fiadd
lods
fnstcw
hlt
inc
es
jns
int3
push
xor
cmp
rcl
jp
repz
mov
pop
pushf
mov
inc
cmps
lods
ret
cmc
daa
adc
cwde
stos
xchg
hlt
lds
ja
pop
or
fimul
(bad)
cmp
aam
inc
cmc
and
and
test
stos
(bad)
call
xor
xchg
jo
push
sbb
retf
push
pop
std
int3
xor
fld
jmp
fs
mov
test
ss
adc
jo
mov
and
lds
pushw
mov
xchg
xor
mov
jg
loop
out
mov
push
xchg
ss
xchg
inc
pop
pop
in
stc
das
mov
loop
xor
inc
(bad)
and
xchg
pop
mov
cmp
cli
inc
add
loopne
retf
popf
push
in
cmps
pusha
xchg
jbe
neg
jne
out
outs
add
out
pushf
aam
jnp
in
jg
mov
outs
pop
cmc
mov
mov
in
in
in
popf
cmps
mov
inc
xor
mov
sub
or
pop
adc
pop
mov
and
mov
jb
mul
pop
add
and
data16
pop
mov
stos
inc
lods
or
or
jmp
data16
aas
test
fisttp
mov
ss
xlat
cmp
es
(bad)
xchg
loopne
aas
js
xor
sub
fld
pop
aas
cs
sbb
inc
nop
sub
push
gs
xor
mov
jnp
hlt
mov
pushf
cli
call
jl
aas
test
mov
stos
stc
out
loope
cmp
pop
mov
mov
jmp
repz
cmp
lea
xor
imul
sub
xor
mov
xor
jmp
mov
inc
jb
xor
cmp
mov
push
mov
mov
xor
shr
sub
dec
stos
rcr
retf
loopne
inc
jle
jle
sub
icebp
sub
jmp
enter
dec
and
pop
and
das
adc
rol
leave
mov
pusha
gs
push
add
add
cmc
je
out
adc
inc
loopne
lea
scas
dec
cmc
ret
sub
stc
mov
int3
retf
nop
inc
or
and
arpl
test
int
sti
and
fwait
adc
pushf
cmp
rcr
dec
fcom
ror
jle
or
(bad)
inc
outs
aam
inc
(bad)
ins
shl
lahf
in
mov
and
sahf
inc
mov
call
lock
adc
test
das
mov
mov
(bad)
jp
test
movs
jns
push
or
(bad)
mov
arpl
out
mov
sub
pop
add
imul
imul
mov
or
jnp
add
stos
aam
xchg
sbb
lds
es
sub
out
mov
mov
(bad)
xor
movs
pop
jge
daa
js
call
and
jnp
stos
push
xchg
cmp
or
jmp
lds
addr16
jbe
inc
fs
loopne
ds
inc
jbe
call
xchg
mov
fdiv
fisubr
imul
sbb
pushf
cdq
imul
push
jo
pop
and
xlat
ret
scas
out
addr16
retf
jb
xchg
pop
(bad)
sub
fwait
push
ss
out
test
xchg
enter
mov
leave
inc
and
js
pop
scas
cwde
ds
cmp
mov
fwait
ret
shl
jbe
mov
cmp
add
hlt
out
out
aaa
cmp
sub
adc
out
and
ins
xlat
sub
and
nop
and
jo
sbb
ss
push
and
or
std
inc
lds
vpmaxub
sub
xor
fist
xor
pop
sbb
mov
inc
popa
dec
test
mov
inc
fisub
and
inc
pop
xor
xchg
xchg
inc
pop
and
cld
dec
inc
inc
mov
dec
xchg
fdivr
dec
jle
xchg
or
lahf
pop
lods
push
jb
mov
js
mov
imul
sub
push
add
sub
std
das
icebp
push
dec
je
outs
call
sbb
frstor
add
aas
and
test
adc
imul
ret
sub
xchg
lock
stc
mov
aas
and
mov
sub
cmp
sub
add
in
hlt
push
xor
sar
sti
(bad)
adc
dec
and
push
mov
adc
push
aaa
mov
xchg
loop
fcomp
addr16
repnz
pop
push
cmps
loop
sub
pop
ficom
jb
inc
sub
iret
loop
arpl
das
call
sub
push
out
dec
or
mov
inc
hlt
imul
fdivp
pop
mov
xchg
add
add
jno
jle
shl
jecxz
mov
xor
cli
adc
jmp
scas
xor
cmp
(bad)
mov
sti
push
dec
cmp
dec
cmp
gs
jg
pushf
inc
sbb
out
call
cld
clc
cmp
cmp
std
ds
xlat
out
les
mov
repnz
inc
scas
int3
dec
fmul
fdivr
dec
ret
in
loop
(bad)
jae
sbb
pop
push
jne
add
push
push
int3
mov
sub
data16
sub
(bad)
out
add
retf
scas
ret
and
in
pushf
push
mov
xchg
and
nop
std
mov
test
repz
xchg
ret
ret
inc
dec
xchg
push
sub
lea
inc
(bad)
pop
(bad)
in
enter
in
xor
push
and
stc
frstor
ret
addr16
retf
inc
clc
mov
ror
pop
xor
add
sbb
xchg
retf
jecxz
mov
das
mov
shr
lock
mov
and
mov
and
cwde
(bad)
out
das
jge
mov
cs
pop
xchg
or
ret
jecxz
in
jp
fsub
and
dec
add
int3
or
sbb
out
addr16
iret
sahf
and
jns
mov
and
mov
push
inc
sbb
adc
lods
dec
ins
(bad)
repnz
jmp
pop
cmp
jg
iret
mov
pop
pop
(bad)
pop
xchg
mov
fwait
rcr
iret
retw
mov
add
out
cli
mov
dec
fldlg2
cmpxchg
outs
ja
repnz
sub
fmul
lock
aas
std
mov
dec
jne
sbb
jecxz
push
in
sbb
inc
(bad)
fist
jmp
out
rcr
mov
test
in
cwde
repz
jl
jmp
mov
cmp
es
mov
addr16
xor
and
sub
aam
dec
(bad)
jg
ins
jb
mov
xor
in
lods
dec
dec
sar
int
cld
mov
xor
xchg
jg
adc
jle
div
jae
into
inc
mov
adc
cli
movs
xchg
jmp
(bad)
jmp
les
push
sub
loop
sub
test
adc
sbb
lock
and
mov
(bad)
and
loop
jge
out
ins
call
lea
lea
inc
dec
mov
inc
in
movs
xlat
into
push
mov
in
out
mov
in
(bad)
stc
xchg
aaa
ins
aad
in
inc
leave
adc
xlat
ja
std
xchg
sub
cld
(bad)
mov
dec
push
jmp
jge
push
push
ror
test
push
mov
push
add
cmp
mov
ins
enter
pop
jmp
sbb
adc
pop
mov
xchg
cmp
ret
cdq
shr
not
push
xchg
mov
add
push
dec
bound
aad
mov
movs
sub
add
mov
lahf
paddb
ds
mov
sub
repz
inc
int3
arpl
pop
jnp
and
dec
test
out
and
sub
and
adc
push
int3
call
iret
loop
hlt
add
ja
shr
xchg
sbb
and
jae
push
shl
imul
sti
and
gs
ss
test
arpl
call
scas
mov
add
int
int
xchg
jmp
bound
sahf
dec
or
mov
xchg
push
out
je
mov
jg
add
int3
push
imul
mov
add
jae
add
les
fs
rcr
mov
rcl
dec
cmp
adc
lods
ret
int
fldenv
and
imul
mov
sub
fs
lods
xchg
imul
pop
mov
ja
fwait
xlat
jg
jno
mov
xor
mov
mov
add
popa
xor
fs
sbb
pop
inc
push
loopne
and
cmp
aas
sahf
sub
(bad)
push
sub
push
sub
sahf
xchg
cmc
sahf
lock
jb
arpl
int3
or
jl
and
push
mov
lock
ficomp
sbb
in
inc
cmp
sub
xchg
in
scas
jmp
jg
mov
push
sub
push
or
jle
test
call
mov
pop
inc
dec
rol
test
sti
sbb
sub
(bad)
in
mov
and
dec
and
xlat
ss
and
sub
push
sbb
test
sub
icebp
scas
inc
mov
std
sub
sub
pop
sbb
test
das
mov
inc
sub
mov
mov
test
xor
jne
jp
sub
rol
hlt
sbb
imul
fidiv
(bad)
xchg
cmp
stos
adc
shl
mov
stos
sub
ror
mov
retw
aas
push
les
push
lods
test
inc
mov
mov
jmp
(bad)
hlt
xchg
(bad)
sbb
and
mov
sar
add
or
adc
dec
xchg
jl
mov
movs
call
mov
xor
hlt
outs
mov
lfs
cmp
popa
aam
(bad)
out
xchg
mov
pop
scas
out
ret
mov
mov
add
inc
fwait
ins
jne
aas
outs
imul
ret
mov
cwde
lods
pop
mov
pop
push
adc
iret
jne
inc
jmp
in
pop
lods
inc
cdq
mov
ds
add
xchg
ja
fcom
adc
mov
xchg
sub
pop
rcl
mov
in
push
movs
sub
cld
inc
mov
or
or
xchg
call
es
and
add
dec
pop
jecxz
pop
cmps
xor
mov
xchg
dec
jmp
inc
xchg
std
lods
or
push
push
dec
xor
inc
popf
imul
neg
pushf
in
mov
movntps
test
push
mov
sbb
mov
adc
sbb
test
or
mov
jmp
add
sbb
hlt
pop
pusha
mov
daa
pop
dec
inc
push
pushf
xchg
cmc
aam
dec
pop
idiv
and
lods
lods
pop
call
push
xor
push
retf
and
lods
sub
push
pop
dec
xchg
sub
push
hlt
cmps
xor
les
add
pop
sub
sbb
adc
sub
cmps
jl
(bad)
jmp
dec
mov
mov
xor
in
xor
repz
push
retf
adc
sbb
inc
les
and
dec
iret
inc
sbb
cmp
xor
stos
ds
daa
adc
loope
inc
inc
adc
or
inc
ss
xchg
(bad)
cs
and
rcr
or
push
or
cs
mov
lock
(bad)
cli
nop
xchg
dec
(bad)
and
iret
ret
cwde
aas
rcl
hlt
sub
jl
xchg
mov
xor
aad
in
js
scas
fist
mov
int3
sub
or
in
pop
pop
adc
mov
iret
sub
cdq
sub
adc
sub
popf
mov
pop
enter
mov
add
jns
sub
call
cs
arpl
dec
ja
xchg
lods
pusha
fisub
(bad)
lods
push
out
pop
dec
bound
loop
(bad)
sbb
fcomp
ins
imul
dec
mov
adc
in
fdiv
xchg
ret
fild
daa
mov
mov
mov
cdq
pop
(bad)
pop
shl
cwde
xor
add
(bad)
aam
push
lock
push
cmp
repz
enter
mov
dec
xchg
cmp
out
adc
jo
mov
and
push
cvtpi2ps
jg
adc
stos
push
cmp
mov
ins
mov
test
in
jbe
xor
adc
sbb
bound
sahf
cs
adc
inc
jmp
or
push
xchg
arpl
jge
jno
push
(bad)
fcomp
push
(bad)
push
test
clc
xchg
inc
add
fist
shl
mov
jmp
das
(bad)
je
sub
and
pop
call
and
dec
cmp
sub
mov
lods
fwait
cmps
adc
jmp
mov
mov
adc
addr16
scas
xchg
mov
sbb
gs
cmp
sti
call
(bad)
cmp
test
push
int
sbb
jne
mov
mov
pushf
imul
mov
or
sub
stos
dec
and
sbb
jb
inc
out
je
mov
imul
(bad)
lahf
out
das
sub
pop
mov
adc
retf
cmp
and
sbb
cwde
inc
ins
or
mov
mov
mov
inc
cmp
mov
push
dec
adc
pop
lds
fadd
xchg
adc
jmp
test
jecxz
cmp
cmp
xchg
aam
sbb
xchg
or
mov
dec
xor
lods
xor
aas
sbb
xlat
and
mov
cld
adc
push
je
pop
neg
sub
pop
and
jg
sar
add
push
xor
popf
fadd
pusha
je
and
cwde
jp
or
outs
pop
xchg
les
push
mov
ficom
push
cmp
and
push
std
into
mov
xchg
ficomp
xchg
dec
mov
mov
mov
jmp
popf
in
and
mov
retf
cli
adc
add
lahf
sahf
cmp
and
pusha
lods
shl
aad
push
cwde
fdivr
or
pushf
mov
fwait
stos
or
or
cdq
les
test
cli
dec
xor
cmps
dec
dec
(bad)
popa
daa
pop
ins
mov
popa
ins
aam
sub
jg
and
nop
mov
mov
shl
enter
mov
xor
dec
mov
cmp
cmps
cmp
cwde
push
mov
mov
adc
fwait
sbb
sti
pop
jmp
nop
add
(bad)
mov
rcr
xor
enter
push
mov
jg
outs
shr
jae
aad
sub
mov
push
xchg
ficom
rcl
mov
push
jmp
adc
dec
jae
or
cmp
xor
gs
test
imul
cmp
icebp
imul
sbb
cmp
ret
addr16
sahf
rol
xor
add
push
push
push
outs
dec
add
cs
ins
pop
inc
pushf
add
cmp
and
sahf
test
test
cmp
out
jle
sub
xchg
call
mov
shl
repz
fisubr
xchg
inc
aam
push
mov
sub
jmp
and
(bad)
fild
das
sbb
int
pushf
scas
arpl
shl
es
adc
adc
shl
push
xchg
sbb
or
(bad)
mul
sar
push
aad
popa
push
leave
test
xchg
pop
jnp
xchg
jno
jmp
xchg
test
adc
pop
popa
loop
mov
ss
mov
lds
sub
out
xlat
lock
(bad)
ret
call
xchg
push
cli
pop
and
jp
jge
mov
push
ja
movs
mov
es
xlat
fmul
les
out
cmp
repz
(bad)
gs
cmp
icebp
inc
cdq
loop
cmp
jecxz
and
fbstp
(bad)
neg
mov
mov
cdq
bound
xchg
aas
pop
jl
ins
jecxz
ins
adc
or
pop
daa
jmp
retf
mov
jmp
popa
mov
jl
cmp
and
sbb
scas
xor
cmp
jmp
cld
lods
lods
aaa
daa
inc
out
jl
inc
cli
icebp
dec
push
(bad)
jns
sub
mov
cs
es
jns
mov
mov
fst
test
(bad)
jb
fwait
stos
out
rcl
cmc
sbb
repnz
aam
push
xor
inc
aad
fldcw
xchg
fcom
mov
gs
pushf
cdq
push
xlat
jmp
retf
outs
lods
(bad)
in
int
push
xchg
or
inc
or
repnz
aad
jbe
push
dec
fdiv
leave
fdiv
mov
adc
mov
ins
iret
mov
ja
(bad)
mov
push
popf
dec
and
fwait
xor
or
push
mov
mov
pop
shl
and
pop
cmp
bound
xchg
dec
mov
push
leave
in
ret
call
push
pushf
or
pusha
aad
push
cli
jmp
inc
cli
loope
out
and
sbb
sbb
stos
(bad)
iret
imul
and
mov
adc
call
aaa
adc
(bad)
aam
pop
mov
cmp
mov
and
mov
cwde
repz
fild
mov
test
fcom
pop
mov
repz
lds
cmp
lods
sbb
add
add
mov
xchg
fdivr
sub
fucom
neg
mov
xchg
inc
sti
sub
add
mov
add
test
fdivr
rcl
movs
push
ins
into
add
int3
retf
dec
fidivr
ss
and
fdiv
pop
aad
lahf
dec
push
(bad)
adc
push
mov
iret
ret
mov
int3
mov
mov
cmps
sub
xor
adc
and
addr16
push
sar
jnp
sub
xlat
leave
cmp
xor
daa
dec
adc
cmps
std
or
retf
sub
and
jge
ins
jmp
(bad)
fstp
ds
and
ret
add
fadd
rcl
mov
add
retf
mov
jns
mov
and
int
or
mov
ror
(bad)
retf
nop
xor
xchg
push
xor
aas
sti
jnp
push
dec
mov
pop
xchg
lea
pop
sub
je
es
push
dec
dec
xchg
mov
jmp
retf
out
xchg
mov
ins
adc
ins
aad
sar
shr
and
ins
mov
jo
jne
ror
xor
push
jge
aas
sahf
xlat
adc
add
scas
mov
push
xlat
out
or
cs
pop
scas
sbb
in
mov
lea
lds
in
int
fwait
mov
out
fdivr
fadd
xor
mov
scas
and
outs
push
icebp
adc
adc
imul
mov
jne
pop
fs
mov
xchg
div
xchg
test
push
int3
and
mov
aam
(bad)
and
and
fdivr
(bad)
add
adc
popf
int3
and
mov
aas
sbb
add
outs
and
pop
sbb
mov
leave
jp
sbb
jmp
jle
outs
(bad)
test
push
lahf
cmc
push
lods
ins
inc
jmp
mov
shr
xor
mov
mov
mov
cmp
pop
ficomp
leave
xor
fsub
aaa
retf
ja
icebp
xchg
movs
rol
stc
and
jbe
scas
pop
shr
mov
add
add
popf
xchg
cwde
scas
sbb
imul
sub
jl
test
shl
sbb
and
mov
xor
sbb
cmps
sub
inc
sbb
dec
sbb
pusha
test
call
xor
xor
mov
(bad)
mov
icebp
pop
(bad)
mov
jbe
in
push
push
adc
push
jae
xchg
push
in
cmc
inc
adc
inc
pop
inc
mov
repz
lea
pop
(bad)
jl
jno
adc
push
cmp
es
mov
leave
sub
mov
ret
inc
mov
sbb
lods
pop
retw
fsub
pushf
cmp
mov
mov
shl
retf
dec
shl
xor
inc
push
addr16
imul
sar
add
pop
sbb
sbb
ret
inc
jle
adc
dec
push
scas
loop
jp
pop
pop
push
mov
adc
enter
rcr
clc
add
mov
inc
xchg
mov
pop
push
ja
les
(bad)
adc
mov
stos
fstp
xchg
daa
jmp
add
movs
xor
ins
popa
loop
pop
sbb
shl
lock
dec
jmp
addr16
cmps
adc
nop
popa
pusha
or
adc
ror
iret
jecxz
sub
call
mov
ret
pop
out
dec
das
cmp
fisub
jl
dec
mov
inc
xchg
and
mov
fmul
stos
sar
aas
xor
jmp
push
inc
sar
sub
push
mov
pop
xor
(bad)
retf
add
aad
sbb
out
ins
mov
cli
mov
cdq
mov
mov
xlat
retf
arpl
mov
add
jno
mov
mov
jno
push
dec
sub
mov
push
hlt
inc
jmp
jbe
xlat
or
ficom
xchg
xchg
aaa
ret
je
(bad)
fld
jmp
ja
sbb
std
dec
jne
jmp
test
ins
mov
fdivr
(bad)
mov
adc
mov
push
leave
cmc
call
jg
xchg
cmp
loopne
mov
mov
push
ret
mov
push
mov
stos
ror
ret
pop
adc
fwait
daa
test
ss
mov
sti
lods
icebp
sub
retf
inc
mov
fisttp
sub
ins
es
movs
or
mov
dec
in
ficom
retw
(bad)
push
ret
ret
sub
jbe
adc
mov
cmps
or
test
sbb
add
outs
cwde
push
cs
fild
popf
dec
mov
rcr
cmc
ror
mov
jmp
pop
adc
mov
call
jmp
pop
fcomp
jmp
(bad)
jp
mov
es
ds
fwait
or
cmp
stos
ret
cmp
fsub
stos
outs
int
ins
xor
and
sbb
jge
pop
inc
xor
mov
xchg
adc
push
movs
pop
or
mov
pop
call
jno
cmp
leave
and
lahf
mov
in
ins
and
pop
pop
in
jno
pop
push
add
pop
mov
std
inc
xchg
mov
cmps
mov
mov
clc
scas
mov
add
out
int3
sahf
je
into
jne
fucom
addr16
jo
inc
loope
cs
in
pop
popa
mov
mov
xor
fs
imul
add
or
shl
sti
sub
add
mov
call
in
ret
mov
or
imul
or
or
aaa
cmp
push
repnz
sbb
cmc
and
pop
push
inc
(bad)
push
rol
adc
push
sti
cli
lods
xor
ret
push
es
fcom
mov
shr
xchg
aas
js
test
pop
ss
mov
movs
adc
ds
lahf
loop
and
clc
pop
test
loopne
and
sub
clc
mov
nop
daa
outs
loopne
addr16
jg
inc
mov
fist
push
test
inc
dec
popf
inc
out
icebp
mov
and
mov
in
les
pop
push
inc
xlat
popa
cmp
pop
mov
pop
push
or
push
mov
ficomp
mov
aaa
shr
ja
movs
in
fild
cmps
test
add
dec
or
cmp
sub
xor
and
rcl
loop
pop
mov
test
inc
aas
jo
mov
or
jbe
lahf
pop
fwait
or
pop
mov
dec
xchg
xchg
rcl
das
jno
add
mov
sar
sub
push
je
stos
mov
ins
stos
cmp
dec
scas
dec
ss
adc
ds
rol
imul
je
inc
jle
sti
jne
inc
jno
data16
imul
xchg
loope
es
inc
js
jb
inc
loope
push
and
sbb
mov
or
mov
mov
jo
cmp
jmp
mov
shl
mov
dec
sbb
jle
xor
and
mov
dec
dec
mov
push
and
imul
and
pop
push
jns
in
jmp
popf
icebp
inc
aaa
cmc
inc
test
test
outs
xchg
inc
inc
cli
jns
mov
pushf
cmp
inc
cmps
sub
push
hlt
dec
jne
or
pop
mov
jg
pop
sub
mov
cmp
adc
cmps
fwait
xchg
cmps
lods
inc
dec
push
mov
jbe
mov
loopne
cmps
xor
adc
pop
aaa
jge
aaa
pop
xchg
fcom
pop
jnp
jecxz
loop
arpl
dec
test
ret
mov
and
jo
jg
and
jb
cdq
jmp
jnp
movs
ins
call
jb
push
loopne
in
mov
out
add
xor
sbb
xchg
pushf
push
and
test
mov
sti
scas
or
and
or
mov
sub
imul
aam
(bad)
in
sbb
push
pop
div
repz
ss
jns
pop
mov
xchg
ret
mov
jmp
jmp
cmc
cs
(bad)
aad
fisttp
aas
mov
jg
in
mov
call
mov
gs
xchg
mov
sub
mov
mov
fcom
mov
mov
xor
sahf
and
loop
inc
dec
les
lds
pop
pop
add
push
lds
icebp
in
jecxz
mov
sub
mov
sbb
and
jno
imul
(bad)
ficomp
jbe
sub
addr16
pusha
and
xchg
mov
pop
xchg
fist
mov
jl
das
xlat
sub
mov
cmps
outs
push
add
lahf
fstp
lea
in
(bad)
fidivr
push
fild
movs
dec
push
lds
push
mov
ins
or
sub
data16
dec
cli
cmp
sub
daa
repz
or
xor
test
dec
int3
adc
out
inc
test
mov
push
js
sub
pop
mov
push
xor
inc
jb
cmp
push
retf
adc
or
lods
imul
xor
pop
shl
mov
xchg
sub
xor
popa
idiv
or
mov
xchg
and
pop
mov
jp
(bad)
popf
inc
pop
jae
data16
mov
mov
and
icebp
push
cs
mov
movs
jg
cmp
jle
add
or
fwait
out
in
adc
outs
mov
seto
adc
mov
ret
pop
jo
out
mov
xlat
xchg
cmc
pop
js
cmp
shr
ror
mov
repz
add
cld
lea
inc
inc
and
lods
fst
in
xchg
inc
lods
mov
rcl
das
cdq
ds
(bad)
push
jl
xor
addr16
ror
les
aas
out
and
xchg
sub
test
adc
mov
push
and
or
pop
jae
dec
dec
jmp
cdq
pusha
add
mov
clc
sub
(bad)
sbb
ins
stos
add
adc
lock
aad
pusha
addr16
sbb
sub
jae
adc
add
jne
int3
jb
jg
adc
fisttp
jno
int3
test
sub
repnz
loopne
mov
xor
daa
push
mov
mov
movs
xchg
dec
pop
cmp
shl
xchg
xchg
ds
cwde
lahf
in
ds
ror
push
sub
lds
cmp
(bad)
gs
aad
data16
and
in
cs
mov
xchg
pop
movs
shr
fwait
out
retf
stc
and
stos
sbb
sub
mov
or
jo
cld
or
cld
popf
or
sub
jp
xor
sub
neg
dec
inc
loope
jmp
xchg
mov
cmp
push
stos
in
fldenv
mov
nop
and
and
xchg
pop
dec
jmp
cmc
pushf
loop
test
mov
call
mov
sbb
retf
gs
pusha
and
or
dec
rol
stos
xchg
push
or
fst
xchg
xchg
jns
push
dec
mov
ds
xor
push
cmps
nop
leave
sub
cdq
bound
sar
pop
lea
or
aam
dec
adc
movs
and
gs
mov
inc
aam
lock
div
lds
mov
es
add
shl
push
sbb
mov
add
cwde
mov
pop
ret
rcl
push
les
push
cmp
adc
test
addr16
cs
jecxz
retf
enter
sub
push
pop
sbb
pop
sub
mov
sub
outs
xor
enter
aad
stos
lods
es
cs
sub
jno
cmps
push
lds
mov
sbb
jo
sbb
and
das
pop
jo
out
sbb
add
sbb
cs
mov
or
dec
test
and
jl
bound
ret
or
stc
fst
or
call
test
mov
and
imul
dec
push
mov
repz
push
(bad)
and
psrad
or
fs
jecxz
dec
sub
jb
adc
clc
das
dec
mov
(bad)
dec
fs
mov
dec
pop
adc
test
sub
jae
mov
sbb
daa
jmp
dec
pushf
mov
cmp
sahf
sbb
jnp
push
pop
pushf
pop
js
adc
test
fistp
and
or
aad
xor
xchg
cdq
jg
scas
cmp
xchg
jge
mov
xchg
adc
inc
popf
out
lods
jae
add
ds
cld
jg
loope
sahf
xor
pop
std
jbe
rcr
push
pextrw
adc
fsubrp
loope
sbb
(bad)
cs
lahf
(bad)
aam
push
and
pop
cmp
xchg
xchg
mov
ds
imul
mov
(bad)
xor
sbb
popf
and
dec
pop
xor
std
push
out
dec
push
sub
or
imul
int
mov
aam
aad
mov
cmps
xor
mov
ret
lods
cdq
ret
outs
xor
fcomp
loopne
pop
dec
jo
jb
dec
mov
jl
push
add
push
add
lea
stc
(bad)
loopne
pushf
jecxz
rcl
jp
or
jae
dec
mov
fs
imul
xor
out
fsub
push
sub
adc
(bad)
imul
dec
mov
sbb
in
adc
fsub
sti
mov
add
dec
cmp
fadd
(bad)
mov
mov
xchg
das
mov
mov
dec
pop
(bad)
push
lods
shl
xchg
movs
aad
ss
inc
pop
and
xor
daa
pop
leave
sbb
push
mov
stos
sbb
int3
jl
sgdtd
pop
ret
add
cld
pusha
fadd
js
mov
popf
cld
ins
pop
into
rcr
xor
cwde
inc
movs
pushf
jle
repz
loop
inc
xor
push
in
xchg
test
fiadd
or
movs
fnstsw
fidivr
xchg
ror
das
sub
sub
mov
dec
hlt
xor
pop
retf
push
in
sub
push
xor
sbb
sbb
sbb
test
push
ds
jo
push
dec
add
and
push
cmp
icebp
addr16
ficomp
cmp
out
scas
jne
ss
mov
jbe
xor
xchg
push
adc
mov
icebp
loop
int
aas
jle
ins
repz
inc
bound
je
jge
inc
add
dec
shl
fstp
mov
jp
ret
mov
jb
xchg
mov
lock
add
dec
push
imul
je
push
xchg
and
movs
jmp
and
shr
sbb
mov
xor
cdq
jnp
repnz
mov
movs
mov
mov
dec
dec
aad
push
inc
jae
fld
xor
mov
mov
push
stos
and
loope
pop
jae
mov
in
(bad)
rcr
inc
cmp
add
mov
jae
mov
jne
sub
fadd
mov
jmp
ror
mov
arpl
out
fwait
mov
stos
mov
inc
mov
xor
push
xchg
cmc
pusha
mov
adc
dec
sti
cwde
imul
call
inc
ret
xor
outs
std
sub
sahf
sbb
(bad)
aas
add
cmps
mov
sbb
es
aam
dec
pop
retf
push
sub
fwait
xchg
movs
iret
mov
xor
xor
call
sti
dec
dec
div
out
mov
mov
mov
fcomp
aas
test
mov
sub
sbb
and
in
dec
sub
fldcw
sbb
xor
cmp
movs
les
mov
add
inc
inc
(bad)
clc
xchg
sbb
mul
pop
add
fld
push
dec
int3
jnp
pop
mov
mov
sbb
outs
sub
push
bound
ins
test
inc
adc
call
and
arpl
outs
mov
pop
xchg
or
mov
cmp
push
or
cld
inc
jecxz
pop
xchg
jnp
pop
or
mov
call
mov
popa
cmp
movs
pop
add
jne
fimul
icebp
dec
push
std
xchg
jo
push
mov
dec
(bad)
cld
mov
clc
xor
test
mov
pop
jg
xchg
fist
mov
stc
fcmovbe
retfw
ja
xor
adc
mov
mov
out
es
sub
lock
push
xchg
add
bound
lock
call
aam
je
push
xchg
loopne
or
xlat
sub
leave
cli
js
and
push
mov
xchg
repz
retf
xor
jle
mov
jmp
retf
dec
or
dec
in
add
icebp
repz
jns
fwait
and
and
mov
std
cmp
pop
adc
ins
push
mov
aas
lea
stc
test
adc
lds
mov
mov
lods
lds
iret
xchg
adc
into
mov
sub
xchg
mov
push
ret
sbb
and
(bad)
lods
mov
pushf
pop
pop
xchg
dec
xor
pusha
dec
add
scas
pop
sub
pop
push
dec
and
and
cmp
pop
and
pop
cli
mov
pop
or
xchg
imul
mov
inc
dec
add
addr16
nop
mov
mov
out
cdq
mov
xchg
pop
and
popa
int3
pop
outs
push
xor
sar
data16
(bad)
fisubr
(bad)
aam
mov
les
aas
dec
sahf
inc
push
inc
sbb
xchg
cmps
mov
jne
std
xor
test
push
or
pop
mov
cmps
jbe
cmp
cdq
dec
neg
mov
int3
cmp
cmps
add
popa
mov
xor
xchg
adc
jmp
xchg
fdiv
mov
sub
retf
adc
pop
push
mov
call
pop
and
outs
fwait
sub
xchg
jle
xchg
push
dec
pop
fidivr
mov
outs
mov
xor
push
cs
fimul
call
mov
aaa
xchg
jbe
in
sbb
pushf
dec
push
cmp
push
dec
jl
xor
div
fsubr
jbe
popf
xchg
movs
les
cmp
and
fsub
outs
xchg
fld
mov
push
(bad)
scas
push
jge
cli
int
dec
mov
in
neg
xchg
fidiv
aad
pop
or
add
push
in
mov
mov
jno
or
push
mov
arpl
xchg
cs
inc
arpl
push
movs
enter
jo
std
iret
mov
mov
dec
std
and
adc
imul
cmp
stos
retf
push
fwait
add
xlat
mov
sbb
gs
xor
mov
mov
lock
pop
cmp
in
repz
ret
lds
call
ins
sbb
push
lahf
cmp
clc
repz
scas
push
or
clc
retf
clc
ins
js
pop
mov
in
pusha
dec
mov
xchg
add
movs
fiadd
mov
lock
fmul
mov
outs
push
xchg
in
enter
fs
jae
xchg
stos
sbb
dec
pop
popf
ins
clc
cli
add
rcr
xchg
(bad)
mov
mov
sbb
add
(bad)
lds
leave
jmp
out
jns
sub
xchg
mov
xchg
movs
sub
add
cmp
imul
mov
inc
xchg
inc
fnstsw
mov
div
add
faddp
daa
add
xchg
jne
sbb
jge
dec
(bad)
scas
mov
inc
and
jle
ins
and
repnz
sub
retf
clc
mov
clc
cmp
test
cmp
sti
dec
jmp
sub
fimul
leave
xor
pushf
in
ds
and
dec
push
sub
mov
fdiv
inc
mov
xchg
sub
mov
push
in
sar
fsubr
aaa
or
repz
out
mov
xor
adc
push
lahf
into
cmc
push
mov
bound
jo
repz
xchg
xchg
pop
jne
(bad)
mov
or
fcom
mov
fild
ds
jbe
data16
sbb
xchg
adc
stos
movs
push
jno
push
not
push
adc
pop
cs
js
xchg
and
pop
neg
inc
sbb
mov
xor
jecxz
sub
xchg
lods
not
loopne
add
dec
and
fs
sbb
ins
pop
xor
outs
xor
aas
mov
dec
aas
mov
icebp
arpl
and
aas
mov
cmp
fwait
cmps
movs
adc
inc
ficomp
adc
call
fldcw
cmp
xor
icebp
movs
out
add
sub
aaa
hlt
mov
jmp
jmp
es
dec
xchg
push
sahf
mov
mov
push
xchg
or
mov
mov
push
inc
ror
jnp
fxch
pop
int
xor
lods
sar
push
dec
inc
repnz
add
sbb
jo
(bad)
and
mov
enter
xor
push
mov
and
xor
inc
mov
dec
loop
std
jmp
push
dec
jge
lds
out
mov
mov
pop
jmp
mov
inc
jbe
mov
leave
xchg
cld
push
ret
scas
call
movs
inc
jnp
cwde
(bad)
jmp
sbb
jnp
out
mov
int
mov
int
movs
mov
repz
inc
imul
xor
xor
sub
out
out
cld
add
mov
mov
add
pop
jne
imul
stos
aas
in
xchg
std
pop
pop
stos
jo
sub
cmps
out
dec
sahf
push
fdivp
xchg
fwait
mov
mov
inc
xor
mov
in
jne
dec
jnp
sti
pop
adc
push
icebp
and
lahf
xchg
lods
lock
cmp
push
cli
movs
sbb
mov
dec
rol
mov
cmps
push
jl
sbb
xor
das
xor
lahf
xchg
pop
ret
data16
inc
(bad)
cmp
push
icebp
jge
mov
call
arpl
sub
and
adc
in
outs
ret
test
sar
iret
jae
sti
movs
adc
stos
sub
repnz
xchg
aas
push
loopne
cmp
pop
lahf
xor
es
test
xor
movs
ror
inc
adc
je
ss
cwde
jnp
mov
dec
stos
adc
movs
mov
pop
ret
cli
mov
mov
add
xlat
hlt
add
mov
out
inc
sahf
pop
inc
std
sub
enter
dec
push
mov
es
jo
mov
seto
pop
xchg
in
stos
call
out
or
sub
push
mov
iret
pop
inc
xchg
push
popa
rol
sbb
shr
int
data16
loope
jae
mov
add
cld
or
pop
xchg
cmp
mov
and
jnp
(bad)
lock
inc
or
jnp
test
xor
fiadd
loop
pop
arpl
add
aas
lock
mov
and
cld
mov
fmul
inc
fs
dec
push
cmp
bound
sbb
push
fist
fwait
js
xchg
push
test
jb
jne
addr16
add
loope
xor
mov
repnz
sbb
or
dec
mov
or
mov
dec
pop
lahf
(bad)
fwait
int
cmp
sbb
and
pushf
jge
shl
pop
dec
je
add
xchg
and
mov
imul
inc
test
and
in
jmp
(bad)
and
dec
adc
shr
cmp
dec
jle
lahf
mov
(bad)
pop
cdq
(bad)
sti
xchg
mov
cmp
lods
adc
popf
repnz
nop
mov
das
adc
mov
(bad)
in
(bad)
xchg
cmp
aad
adc
frstor
and
mov
arpl
adc
pop
int3
mov
test
cmps
add
cmp
(bad)
popa
dec
mov
pusha
sbb
mov
push
pop
stc
mov
inc
push
mov
icebp
and
jmp
call
mov
xor
fwait
mov
retf
or
ret
lds
cmp
jns
sbb
stos
mov
movs
adc
std
test
ret
jmp
not
fst
jmp
out
imul
mov
or
jmp
inc
in
jbe
cmps
adc
mov
popf
clc
dec
or
or
ret
push
sub
xchg
add
in
repnz
cmp
pushf
mov
frstor
and
(bad)
push
pop
adc
push
adc
mov
push
sbb
push
stos
out
(bad)
imul
fs
push
or
dec
jecxz
sbb
adc
push
mov
dec
imul
push
mov
std
cmp
(bad)
jg
nop
inc
adc
fwait
ins
sbb
jge
stos
rcl
lods
inc
mov
dec
mov
lea
leave
xchg
add
mov
mov
jae
stc
push
xchg
xchg
bound
dec
push
push
mov
jmp
adc
fidiv
sub
mov
adc
les
repnz
and
(bad)
ins
sbb
lahf
loopne
xchg
outs
jg
xor
lea
test
mov
mov
cmp
jb
xor
leave
mov
xchg
adc
in
or
clc
sub
add
cmps
loope
mov
and
mov
jae
retf
and
enter
mov
or
in
jo
push
and
aad
(bad)
mov
jne
or
lahf
jae
mov
add
neg
add
cmp
prefetch
or
push
mov
adc
mov
push
and
popf
mov
jmp
inc
sbb
pop
jb
(bad)
in
shl
sti
dec
je
xchg
mov
push
rcl
ss
xchg
push
adc
sahf
mov
adc
mov
xor
push
lahf
div
xchg
adc
imul
int3
leave
push
pop
xor
int3
xchg
es
xchg
or
outs
sub
loop
and
mov
add
inc
movs
jl
out
xchg
sub
rol
inc
addr16
mov
xchg
ficomp
(bad)
push
cmp
pushf
add
push
add
mov
jp
jg
xchg
cmps
or
push
sub
dec
movs
dec
int3
lods
dec
test
call
sbb
dec
cmps
jno
push
xchg
jge
repnz
xlat
pop
sub
cmc
dec
xlat
pop
test
das
inc
xchg
pop
mov
arpl
out
jp
inc
adc
sbb
or
and
in
(bad)
fs
stos
aaa
push
cmps
or
jne
test
es
lea
aas
push
jnp
stc
cmp
push
push
aam
cmp
fnstcw
stc
gs
add
iret
sbb
jp
retf
ins
sbb
loope
inc
arpl
jecxz
sar
(bad)
sub
lods
push
shl
fnstsw
adc
xchg
mov
adc
mov
push
push
out
or
push
(bad)
push
lahf
int
jmp
mov
and
popf
aaa
cmp
into
cmps
or
popf
pop
call
or
sbb
push
nop
jo
xchg
dec
or
or
dec
cli
pop
dec
out
arpl
pop
imul
mov
xchg
(bad)
int3
inc
sbb
lea
cdq
jne
or
es
ins
add
scas
in
xor
xchg
in
(bad)
xchg
push
jle
push
cmps
inc
push
inc
maxps
leave
or
jmp
ins
xchg
inc
fwait
fs
idiv
aam
jb
jmp
es
shl
sbb
pop
into
ins
scas
loop
sahf
xor
ja
and
mov
add
cmp
and
mov
js
or
add
aaa
scas
inc
into
out
and
dec
jno
lods
test
test
push
scas
je
pop
sub
retf
retf
jo
lods
test
jecxz
mov
scas
ins
mov
out
mov
adc
fcomi
ret
adc
movs
mov
icebp
fld
sub
dec
or
ret
loop
fnsave
in
pop
fs
dec
dec
int
ja
iret
xchg
adc
jecxz
jmp
loopne
mov
cmps
jecxz
fisttp
jg
xor
sbb
xor
and
adc
nop
(bad)
out
xchg
xor
loope
inc
mov
jge
imul
cmp
repz
outs
int
ret
sbb
mov
sbb
stos
add
or
repnz
dec
int
das
cwde
push
mov
int3
ret
in
call
push
xor
inc
and
cdq
cs
or
jns
xchg
ss
(bad)
aad
ds
ja
dec
mov
jp
dec
mov
mov
or
in
pop
inc
fbstp
sbb
(bad)
cmp
dec
pushf
out
jg
jb
or
add
test
dec
jecxz
pop
mov
aam
pushf
test
xlat
add
cmp
ds
outs
std
inc
rol
clc
test
mov
mov
test
stc
popa
inc
or
sub
and
sub
bound
hlt
sub
xchg
jp
pushw
pusha
sub
inc
sbb
push
je
les
jecxz
mov
inc
mov
xchg
movs
and
in
es
(bad)
cmp
sar
gs
sub
or
js
imul
push
inc
loop
cmp
ins
shrd
add
adc
sub
xchg
push
mov
sbb
retf
adc
scas
out
add
lods
addr16
cmc
adc
icebp
or
add
mov
xchg
mov
inc
cld
add
push
scas
jne
mov
xchg
lock
pop
jbe
test
adc
dec
sbb
and
xchg
ins
push
(bad)
std
or
cmp
int
jne
std
add
fsubr
fucomp
loopne
push
lahf
push
sbb
inc
xor
les
push
xchg
xchg
test
mov
sub
push
mov
dec
sar
movs
push
add
cmp
popa
scas
(bad)
js
outs
jl
adc
sbb
jmp
mov
cdq
not
pop
cdq
jmp
xchg
es
ds
lods
sub
push
hlt
dec
and
mov
stc
sti
mov
(bad)
ins
mov
sbb
(bad)
hlt
cmp
fiadd
add
(bad)
in
fs
fcom
in
dec
(bad)
cmp
test
repnz
popf
mov
arpl
call
jl
push
mov
lea
and
pop
add
fwait
mov
mov
cmc
sar
(bad)
popa
scas
mov
push
sbb
pop
xor
push
fisubr
cmp
clc
lea
stos
(bad)
repnz
bound
ss
add
jecxz
inc
or
push
sub
mov
sbb
or
jecxz
adc
jp
xor
popa
scas
ins
push
mov
xchg
jbe
xor
sub
into
xor
sbb
or
fwait
adc
cmps
int
or
sub
pop
aam
sbb
cmp
mov
jmp
in
sahf
xchg
(bad)
mov
idiv
xor
stos
sub
jl
test
mov
pop
sahf
mul
cld
push
ret
xor
mov
jns
or
push
dec
add
push
inc
movs
or
push
loopne
bswap
lods
and
dec
pushf
add
aam
loope
push
jg
push
add
mov
enter
sbb
dec
add
sub
gs
into
neg
iret
nop
push
scas
jp
xor
adc
push
(bad)
jmp
js
cmps
mov
sbb
call
and
xchg
push
xchg
xchg
push
lock
es
je
mov
xchg
push
rol
test
inc
(bad)
adc
xor
cmp
fwait
and
dec
lea
mov
cmp
in
int3
daa
push
jo
imul
inc
jmp
es
jne
out
in
ds
aaa
dec
mov
je
and
push
fs
xchg
lods
ins
shl
mov
mov
rcl
aad
cld
push
bound
push
pushf
xchg
and
inc
push
out
push
jnp
xor
out
das
ret
jle
xchg
fwait
retf
movs
xor
shl
ret
(bad)
imul
mov
loopne
in
mov
xor
sti
popf
or
adc
or
sti
leave
push
pop
push
ret
icebp
pusha
jb
jnp
pextrw
out
dec
cmp
out
int
neg
mov
mov
out
mov
mov
movs
push
xor
jb
push
lock
shl
mov
pop
push
xor
aaa
dec
imul
push
dec
(bad)
and
inc
ss
mul
outs
mov
jp
into
push
push
push
mov
jae
mov
dec
push
push
cdq
movs
xor
jl
add
push
clc
mov
rcl
rcr
cmps
lods
inc
repnz
js
data16
xor
mov
jp
mov
add
(bad)
jbe
add
fdiv
mov
ret
loop
pop
or
js
rcr
and
xchg
arpl
mul
test
pop
dec
(bad)
push
addr16
pop
iret
cmps
movs
mov
inc
inc
sub
xor
fisttp
dec
daa
sub
or
push
sar
adc
sbb
bound
and
loop
out
jecxz
mov
add
push
add
call
loope
sbb
test
int
nop
pop
sbb
shl
cmp
call
sbb
cmp
mov
xchg
or
ret
pop
push
sbb
push
push
pop
outs
rol
(bad)
mov
pop
gs
fnstenv
push
jmp
repz
test
and
iret
mov
sub
jo
dec
int3
daa
pop
test
mov
cld
(bad)
int3
and
sbb
dec
cli
adc
xchg
stos
int3
mov
test
add
daa
xor
out
dec
mov
retf
rol
jo
or
daa
stos
aam
int
test
repnz
enter
push
mov
sub
cmps
push
fwait
clc
in
jl
out
(bad)
push
mov
and
sub
adc
inc
xlat
mov
sub
movs
(bad)
push
adc
mov
loopne
jno
ja
xor
mov
shl
cdq
sti
pop
bnd
pushf
sub
dec
or
pop
fimul
push
cwde
lock
(bad)
fild
(bad)
or
dec
sub
add
cmc
mov
sbb
ins
xor
jmp
lahf
push
xor
cdq
pop
sahf
cmp
push
xchg
inc
pop
jmp
mov
sbb
in
and
cli
repnz
xchg
ins
das
aas
mov
mov
jae
test
scas
imul
pop
mov
xchg
rcl
into
les
jae
mov
(bad)
xchg
(bad)
mov
cs
mov
push
inc
repz
fs
and
in
pop
movs
retf
xor
pop
ror
int3
add
sub
mov
xor
call
mov
int3
dec
sub
inc
mov
js
mov
loop
push
in
cdq
inc
icebp
jne
push
retf
xor
lea
nop
enter
test
hlt
sahf
dec
pop
retf
movs
sub
movs
jbe
inc
sub
outs
jmp
or
loopne
mov
mov
pop
test
in
cs
popa
inc
jmp
sub
lock
cli
arpl
cdq
cmp
and
adc
mov
pop
sbb
out
or
ja
nop
add
(bad)
aas
ror
mov
xchg
pop
and
aad
loope
cwde
mov
xor
and
loopne
pop
ret
mov
push
mov
cmp
loopne
(bad)
loopne
repnz
jbe
in
jecxz
pop
push
lods
xchg
xor
data16
dec
aam
add
cld
sti
ficom
sbb
aam
dec
clc
lahf
jmp
xchg
ins
mov
leave
push
loope
xchg
pushf
icebp
push
push
fsub
mov
lock
ins
rol
sub
hlt
add
or
cmps
adc
xchg
inc
fbstp
das
cmps
(bad)
cmp
xchg
or
addr16
out
js
sti
inc
mov
mul
call
mov
jno
call
cmp
mov
int
sbb
adc
pop
push
pop
popa
cli
bound
cmp
cmps
cdq
rcr
test
xchg
push
stos
xchg
loopne
jo
jge
sbb
jnp
xchg
fld
dec
fild
js
shr
cwde
in
mov
enter
push
xor
push
cmps
outs
pop
out
mov
mov
aaa
sar
add
mov
cmp
xchg
xchg
inc
mov
mov
pop
and
and
sub
mov
mov
sub
mov
test
pop
arpl
das
jmp
jge
dec
inc
pop
add
adc
or
ins
xor
add
xchg
dec
lods
aaa
or
jg
jp
pop
imul
add
in
test
pop
push
es
xor
vmwrite
pop
(bad)
xchg
mov
push
dec
jmp
sbb
inc
icebp
push
mov
mov
sbb
clc
ret
mov
mov
mov
fisubr
pop
mov
inc
loope
das
cmp
mov
sub
push
xor
xchg
xchg
scas
inc
cmp
cs
es
xlat
fisubr
aad
ss
arpl
adc
mov
fxch
or
push
add
cmp
test
icebp
mov
jp
mov
xchg
adc
daa
popf
mov
icebp
outs
in
push
jp
int
push
shl
fcmovu
mov
ins
xor
cmc
jne
dec
inc
test
xor
out
mov
or
xchg
iret
inc
lea
dec
xchg
pop
push
repnz
and
jno
jp
add
inc
aas
inc
mov
pusha
lock
and
les
stos
add
sbb
daa
sbb
outs
jnp
ss
dec
paddsb
push
pop
(bad)
xor
lahf
pop
popf
and
and
mov
and
hlt
cwde
das
lea
imul
movs
pop
leave
jnp
dec
inc
add
pop
ret
xor
repz
call
push
out
push
inc
adc
mov
lods
bound
cmps
inc
inc
lea
stc
call
xor
lods
in
mov
in
mov
cmp
push
jo
mov
int
dec
pop
dec
sub
les
jo
sbb
inc
call
loop
cmp
inc
push
mov
xchg
hlt
neg
cdq
mov
sar
mov
and
(bad)
mov
popf
push
das
ret
std
ret
xchg
push
inc
fdivr
cmps
mov
sbb
pop
dec
adc
pcmpeqd
inc
and
push
iret
cmp
mov
pop
test
xor
adc
popf
out
adc
push
cs
add
fwait
jb
int
jno
sub
scas
ins
sub
(bad)
adc
adc
loopne
in
xor
das
push
xor
fnclex
(bad)
addr16
nop
into
mov
fist
add
inc
cmps
add
out
cdq
mov
aaa
cwde
dec
add
cmp
push
int
sbb
xchg
fwait
aam
outs
dec
add
or
adc
xchg
cmp
adc
pop
mov
lock
mov
mov
addr16
jno
es
fs
daa
mov
sub
mov
call
lock
xor
pop
sbb
in
cmp
ss
or
fcomp
sub
(bad)
cmps
sbb
jecxz
fiadd
inc
outs
lea
inc
pop
mov
int
outs
jo
popa
mov
stc
push
repnz
mov
mov
jbe
adc
add
xchg
mov
inc
mov
adc
lods
repz
adc
push
imul
cmps
inc
xor
xchg
into
sti
pusha
shl
nop
je
adc
les
or
add
ins
or
rcl
push
sub
fmul
sbb
push
mov
retf
iret
in
mov
xor
fwait
pushf
cld
enter
or
jg
outs
into
pop
mov
sub
jg
fcom
mov
aam
popf
out
push
or
sub
mov
(bad)
cs
jbe
and
int
sbb
sub
ss
sub
mov
ins
ins
aaa
mov
mov
add
in
push
dec
fnsave
cwde
rol
mov
jae
jp
movs
lds
rcl
sub
nop
jle
push
minps
pop
mov
inc
sahf
bound
jnp
jp
or
fs
dec
dec
sub
lods
cmc
les
mov
push
icebp
xor
jb
cmp
mov
into
pop
adc
xor
sbb
loope
adc
dec
scas
cmp
fadd
loopne
sub
icebp
loop
popa
xchg
cmps
sbb
mov
sbb
sbb
cli
mov
pop
and
or
jo
push
clc
sbb
fidivr
mov
pop
ret
das
aad
sbb
int
xor
jnp
imul
sub
scas
xchg
out
xlat
cmc
ins
sub
xchg
xlat
repz
sbb
outs
sahf
adc
not
data16
imul
stc
add
mov
pop
pop
hlt
nop
daa
outs
xor
dec
ds
aam
rcl
stos
pop
jae
call
jno
xor
xchg
aad
push
div
push
pop
or
ret
loope
movs
push
xor
pop
fs
lea
jbe
jge
sbb
sbb
das
jne
cmp
dec
retf
xor
out
nop
std
inc
xor
push
aaa
mov
scas
add
pop
dec
fld
aaa
jae
out
repnz
popf
test
cmp
jo
scas
out
push
pop
adc
sahf
sbb
in
push
pop
add
lods
adc
dec
movs
(bad)
jp
pop
das
out
call
pop
cmp
imul
jo
pop
add
inc
or
cmps
sti
int
mov
hlt
sbb
mov
xchg
and
in
mov
add
inc
loopne
cmp
adc
add
xor
fld
cmps
sbb
in
es
repz
mov
pop
jl
pop
adc
dec
mov
push
inc
sbb
push
ret
xlat
dec
mov
imul
enter
and
mov
cmp
icebp
in
mov
mov
aas
mov
dec
(bad)
outs
bound
imul
je
jmp
or
jae
or
adc
aas
fs
(bad)
jno
test
loop
mov
mov
daa
add
inc
sub
stc
sub
int
dec
stc
inc
lods
leave
(bad)
or
sub
sub
sub
inc
loope
and
nop
lahf
and
push
cwde
in
push
xchg
or
xchg
sbb
ret
ret
int3
cmps
icebp
pop
push
into
fs
test
inc
lods
adc
test
and
cmp
(bad)
inc
dec
xchg
dec
push
test
inc
(bad)
mov
aad
push
in
das
push
fadd
gs
repz
in
mov
pop
lahf
fstp
sub
add
adc
(bad)
(bad)
(bad)
sub
rcl
adc
test
cs
in
in
dec
lds
inc
repz
call
sar
push
push
cmp
inc
push
pop
out
cli
rcr
hlt
pop
pop
ds
push
out
mov
scas
sub
stos
pop
clc
hlt
loopne
pop
(bad)
and
outs
push
push
setge
ret
mov
xor
outs
sti
mov
mov
rcl
iret
inc
inc
mov
mov
mov
inc
shl
in
ds
or
(bad)
outs
mov
cli
rol
test
jo
adc
mov
das
dec
cmp
ja
pop
cld
fisttp
mov
jl
sub
inc
lods
mov
mov
inc
mov
push
xchg
int
cld
inc
cmp
cdq
ins
lods
mov
mov
sbb
cdq
pop
mov
mov
call
xchg
xchg
xchg
dec
imul
pop
ficomp
dec
mov
xchg
imul
(bad)
fmul
gs
dec
imul
lahf
or
bound
stos
jg
xor
adc
add
pop
and
push
push
inc
ins
iret
jo
outs
pop
sbb
scas
dec
and
push
inc
data16
or
dec
mov
fmul
mov
aam
les
loopne
xchg
add
ret
leave
mov
loop
jb
jb
push
icebp
test
push
or
in
xor
xor
jg
jmp
jne
dec
aaa
mov
xchg
jmp
int
sub
popa
aas
sub
ror
jp
popf
and
sbb
aam
test
or
fcomi
(bad)
jmp
mov
ror
test
and
dec
pop
and
lock
xchg
jmp
jae
in
(bad)
xchg
inc
in
inc
or
clc
cmp
mov
xchg
idiv
dec
(bad)
push
mov
jecxz
scas
jge
test
(bad)
sub
movs
punpckhbw
push
jnp
mov
je
xor
inc
outs
add
jb
sub
int
outs
mov
add
in
lods
add
scas
xchg
aam
pop
fdivr
or
cmp
push
inc
mov
repnz
mov
pop
enter
xchg
cs
call
fld
cmp
mov
ins
hlt
ss
pop
ss
sbb
jp
ss
jecxz
and
(bad)
sub
xchg
jae
add
xchg
sbb
mov
pop
xchg
call
js
cmps
mov
mov
enter
jp
in
mov
and
mov
mov
xchg
and
pop
cmps
bound
sub
pop
fstp
test
mov
imul
fidiv
into
rcpps
inc
pop
sbb
stos
sbb
mul
sti
call
leave
lock
mov
shr
pop
icebp
rcl
push
inc
imul
pusha
pop
js
pop
push
add
nop
fsubr
mov
push
loop
sub
mov
test
mov
pop
mov
outs
jge
mov
push
push
repz
xchg
test
add
and
xchg
inc
sbb
rcl
inc
jbe
repz
fsub
adc
sar
xchg
lods
inc
inc
outs
test
mov
inc
jecxz
push
les
jp
lea
mov
int3
jbe
(bad)
out
bound
enter
sub
addr16
icebp
inc
das
inc
xchg
mov
and
pop
push
fldcw
sti
daa
sbb
fnsave
adc
imul
test
iret
pop
je
inc
jge
xlat
aad
xchg
mov
push
enter
(bad)
jb
out
xchg
inc
inc
xchg
or
jecxz
add
xchg
pop
pop
xchg
dec
or
dec
add
mov
sqrtps
nop
cmp
jo
xor
sub
adc
or
fwait
call
ins
mov
xor
sti
xor
pop
stc
push
push
or
mov
movs
ss
data16
jb
gs
sar
push
(bad)
cmp
(bad)
sti
mov
arpl
push
into
hlt
jno
fimul
jmp
aam
or
jb
in
mov
fldcw
test
xchg
cmp
rol
rol
pop
(bad)
js
push
cmp
xlat
xor
inc
dec
out
jmp
jns
xor
ds
mov
adc
jg
call
idiv
fisub
xchg
idiv
xchg
pop
loop
into
call
popf
sbb
mov
mov
loope
aaa
adc
(bad)
dec
xchg
mov
xchg
hlt
sub
(bad)
inc
xor
movs
ins
leave
dec
pop
xchg
xchg
in
pushf
and
sub
xchg
or
ror
call
jmp
pop
jecxz
xchg
rcl
outs
mov
or
repnz
sbb
xor
outs
or
pop
in
clc
ror
push
push
adc
int3
cmp
sbb
cmp
mov
ins
cli
jp
arpl
mov
(bad)
js
sbb
fstp
imul
mov
adc
mov
popa
xor
enter
mov
cmc
jecxz
ins
pop
in
sub
imul
sub
mov
aad
cmp
test
jmp
out
stc
leave
xor
(bad)
xor
stos
aad
out
jno
mov
fidivr
jl
loop
repz
mov
push
sti
mov
cmp
daa
jmp
in
ins
mov
(bad)
pop
inc
test
mov
jmp
scas
mov
inc
sub
push
pop
mov
mov
sar
ret
push
xchg
in
sbb
fild
mov
cmp
cmp
sub
push
loop
xchg
(bad)
sysexit
dec
addr16
jmp
mov
sub
xacquire
in
ja
sub
leave
xor
mov
jecxz
jge
out
dec
fimul
inc
dec
cmp
fbstp
mov
loop
add
test
addr16
push
je
pusha
lahf
into
es
push
mov
adc
repz
and
sub
scas
add
dec
stc
cmp
rcr
xor
pop
pop
nop
sbb
dec
in
hlt
xor
rcl
mov
fwait
mov
xor
data16
sbb
(bad)
cli
mov
xlat
loope
inc
jo
fs
mov
cmp
into
pop
mov
test
test
out
jecxz
imul
cli
ja
aas
jb
sti
inc
int
adc
and
push
in
push
addr16
adc
sub
call
mov
je
sbb
jno
dec
sub
cs
test
outs
in
adc
jecxz
repnz
add
rol
or
mov
xchg
push
xor
push
repnz
xlat
jge
dec
pop
cmp
out
push
nop
sbb
mov
push
jp
inc
enter
fidivr
nop
mov
or
pop
inc
inc
sahf
xor
mov
test
lea
enter
adc
jle
mov
sti
sti
fadd
mov
add
stc
xor
push
xchg
or
xchg
pusha
popa
pop
xchg
inc
call
jg
xor
call
and
int
cmp
and
movs
repz
mov
sub
sbb
xchg
jmp
mov
mov
adc
ss
mov
(bad)
shl
inc
mov
sub
icebp
xchg
push
aas
test
(bad)
mov
jns
dec
sbb
je
cmc
pushf
xor
jp
push
arpl
mov
nop
cmp
mov
jp
mov
pop
add
sub
outs
jp
jmp
cli
bound
cwde
fdiv
xchg
aas
adc
scas
ffreep
ret
ins
jge
mov
fist
and
pop
data16
jg
mov
jae
adc
inc
mul
test
cmp
add
pop
adc
dec
cld
aam
stos
aam
stos
jo
ret
xchg
ja
sti
adc
aaa
push
sbb
fisub
cmp
retf
cmc
push
dec
lock
sti
push
mov
jmp
sub
push
sti
dec
and
mov
jbe
dec
adc
mov
jae
leave
push
das
imul
lods
stos
pop
fcom
bound
pop
or
stc
(bad)
fwait
pop
add
add
fld
and
xor
push
mov
or
jmp
or
fwait
cwde
rol
aas
jne
lahf
jp
inc
or
daa
in
mov
or
sub
jmp
fldcw
cli
push
sbb
idiv
xor
inc
cmp
aad
cmps
sub
retf
imul
xchg
xchg
inc
push
sub
mov
pop
jae
enter
pop
mov
dec
in
xchg
js
add
xchg
sar
bound
push
addr16
mov
push
push
sub
cmp
cmp
scas
mov
add
fwait
je
push
rol
mov
add
pop
or
lock
test
pop
fsubr
sti
xor
das
out
jnp
pop
pop
call
fwait
scas
dec
cmp
jl
ss
popf
test
outs
and
scas
pop
jl
dec
test
cs
xchg
jl
rcl
adc
push
ins
retf
xchg
add
mov
popf
mov
test
cmp
adc
or
je
sbb
cmp
add
scas
sub
int
sub
and
inc
into
js
bound
fs
or
pop
sar
leave
test
mov
inc
xor
pop
push
retf
gs
fs
rcl
dec
out
adc
sbb
cmp
je
aas
arpl
inc
lock
cmp
retf
arpl
into
bound
mov
loope
out
sub
mov
xor
movs
out
sti
mov
pop
add
inc
pop
div
cmps
inc
mov
push
sar
jg
pop
loope
mov
js
xor
and
std
cmp
sbb
fsubr
inc
or
cli
add
jp
pop
mov
jno
jecxz
jp
popa
mov
mov
jnp
mov
push
push
dec
out
movs
(bad)
outs
mov
sbb
ja
mov
daa
lds
cmp
std
stos
addr16
cmp
rcr
retf
pushf
jle
mov
inc
(bad)
dec
mov
add
cmc
mov
aad
dec
mov
repnz
ret
aaa
fcom
int
scas
int3
mov
sbb
fist
or
jge
pop
or
or
scas
rcr
mov
xor
adc
ret
sbb
adc
pop
dec
mov
aam
jnp
add
mov
lea
push
push
dec
test
(bad)
js
pop
lahf
xchg
(bad)
mov
in
popf
ins
shl
jg
sahf
cmp
fdiv
and
nop
(bad)
out
ds
icebp
in
out
xchg
dec
sub
mov
mov
jb
adc
inc
repz
outs
iret
jnp
rcr
(bad)
or
and
scas
jb
js
mov
loop
call
or
iret
and
in
fmul
lock
stos
lahf
repnz
push
pop
fprem1
dec
lds
ret
out
sbb
mov
jge
retf
mul
push
gs
out
pusha
and
mov
xlat
cmp
or
lock
imul
popa
inc
dec
(bad)
lods
js
inc
fsubr
mov
adc
fmulp
xchg
scas
mov
sub
pusha
imul
xor
mov
inc
shl
jae
mov
jmp
xchg
push
das
sub
pop
(bad)
imul
push
xor
mov
pushf
ret
movs
dec
test
test
xchg
shl
sub
scas
xor
fidiv
or
hlt
cdq
mov
jp
rcl
or
mov
cli
fwait
push
mov
(bad)
loopne
jno
mov
loopne
adc
in
arpl
mov
(bad)
cmp
push
mov
jmp
or
je
mov
jbe
xor
and
sbb
push
daa
mov
cmp
ins
rcl
sti
imul
ret
sub
shr
(bad)
mov
dec
adc
push
xchg
xchg
(bad)
adc
fisubr
push
dec
(bad)
push
fwait
lods
dec
mov
or
or
ins
lock
mov
pop
bound
mov
scas
loopne
daa
push
pusha
cmps
or
mov
test
sbb
test
lods
icebp
iret
retf
sub
hlt
sbb
pop
gs
mov
mov
and
rcr
ror
adc
push
scas
push
jg
add
and
shr
idiv
pop
push
cdq
adc
pop
out
mov
shl
xor
mov
daa
sub
sub
lahf
sahf
or
inc
xchg
mov
or
xchg
pop
outs
lods
test
jge
cmps
pop
ins
pop
jbe
les
popa
sub
out
mov
sbb
(bad)
xchg
inc
push
inc
fwait
bound
adc
adc
adc
dec
cdq
(bad)
enter
mov
aam
pop
add
test
outs
cmp
imul
out
lods
(bad)
adc
mov
mov
or
xchg
jl
inc
stos
dec
mov
dec
(bad)
sub
(bad)
movs
test
rol
retf
loop
leave
pop
repz
dec
pop
jmp
xchg
outs
add
add
mov
jmp
jecxz
fiadd
inc
add
aaa
ror
add
test
cmp
adc
pop
pop
push
sub
(bad)
in
or
adc
push
add
aam
scas
scas
aaa
inc
cmp
inc
mov
mov
hlt
sbb
lods
cmp
xchg
cmp
pop
(bad)
mov
fild
dec
or
dec
stos
stos
or
xlat
dec
mov
and
push
ss
inc
sub
ds
fwait
xor
dec
pushf
dec
inc
push
add
imul
fiadd
mov
sub
add
fwait
stc
cwde
pop
out
retf
pshufw
(bad)
or
daa
fldenv
shl
ins
(bad)
repz
loopne
or
rcr
inc
mov
ficomp
push
mov
inc
adc
rol
sbb
push
push
inc
pop
jge
(bad)
adc
jmp
repz
inc
add
mov
je
mov
push
adc
test
and
push
popf
mov
push
push
sbb
mov
jae
lods
cmp
cmp
mov
fsub
inc
cs
in
mov
mov
icebp
xchg
or
mov
mov
ret
iret
pop
cmp
mov
pop
test
add
sub
push
lock
call
dec
jne
or
xchg
hlt
cmp
(bad)
aas
popa
push
sar
es
add
push
jle
icebp
gs
test
out
jecxz
pushf
cs
ret
or
push
inc
xlat
push
iret
nop
push
adc
or
push
xor
ins
or
cmps
loop
cmc
ja
out
push
retf
rcl
xchg
mov
mov
pop
(bad)
cmc
add
mov
mov
dec
dec
sub
cld
xchg
jnp
or
mov
pop
cld
shr
retf
cmp
jo
adc
int
xchg
mov
shl
ja
test
js
lea
and
and
or
inc
xchg
jecxz
cmp
mov
pop
dec
inc
cwde
dec
test
inc
pop
dec
mov
inc
out
cmp
aaa
push
sbb
xor
cmp
fmul
inc
test
push
call
std
dec
sbb
add
hlt
ror
add
in
cmps
test
pop
pusha
add
xchg
xchg
jge
stos
add
push
fptan
dec
mov
loopne
das
or
sub
into
pop
test
pop
mov
or
test
or
inc
jp
pop
daa
jmp
outs
call
cld
mov
or
jno
scas
sub
jmp
addr16
ret
jle
sub
jl
inc
popf
(bad)
scas
dec
test
mov
add
mov
fcomp
in
popf
mov
cdq
and
shl
jmp
jge
mov
rcr
stos
cmp
cmp
sbb
mov
test
hlt
dec
mov
out
inc
ins
je
hlt
pop
dec
inc
repnz
push
add
mov
imul
push
ja
dec
mov
(bad)
lahf
sub
pop
ror
jae
mov
xor
cmps
push
xor
test
out
push
push
jne
js
(bad)
dec
ret
shl
sbb
ins
adc
xchg
mov
xor
mov
xor
rol
mov
in
gs
fnstcw
pushw
aam
push
sahf
adc
ins
shr
retf
add
shl
mov
cmps
(bad)
push
mov
add
cs
mov
pop
or
add
push
loopne
enter
jg
in
leave
retf
rol
jno
and
fcomp
fdivr
xor
xchg
and
jae
(bad)
repnz
push
mov
mov
sub
(bad)
sahf
ins
test
xor
or
and
popf
frstor
sar
ja
xor
mov
fcom
lds
sar
xor
sti
in
mov
xchg
js
cli
add
repz
enter
mov
cmp
add
retf
jo
lods
popa
je
leave
dec
or
add
cmp
loopne
popa
push
cli
bound
adc
cli
jnp
pop
mov
lahf
jno
adc
mov
jnp
outs
ins
xchg
sbb
cli
push
loopne
xchg
and
repz
push
or
fild
mov
movs
mov
push
sub
test
jmp
cdq
mov
pop
pop
jl
dec
dec
lods
out
or
adc
outs
movs
loopne
ja
push
xchg
push
pushf
pop
mov
jl
idiv
int3
inc
fs
fst
push
mov
out
int
hlt
pushf
jmp
mov
add
mov
cmp
out
xchg
pop
dec
dec
es
sub
inc
jge
jmp
fcomp
or
fs
xchg
test
mov
dec
(bad)
sbb
adc
imul
push
push
pop
out
daa
add
ds
int
(bad)
xchg
xor
adc
popa
lock
arpl
lea
pushf
xlat
sbb
es
in
dec
or
dec
in
data16
cmp
pop
leave
test
es
fist
xchg
movs
jmp
mov
popa
fwait
dec
dec
mov
cmp
sub
fwait
pop
fs
dec
call
cmp
dec
fisubr
imul
sbb
jnp
dec
add
xchg
mov
shl
ja
xchg
xor
cwde
add
fild
cwde
outs
jb
jge
es
xchg
adc
adc
sbb
mov
or
(bad)
bound
stos
cmp
ins
lock
cmc
xchg
or
ret
adc
popa
inc
jecxz
jl
jmp
mov
xor
lahf
sbb
mov
addr16
retf
mov
call
push
in
sbb
jne
push
and
data16
loop
data16
test
cld
or
(bad)
bound
jl
sbb
xor
(bad)
or
ins
enter
ins
mov
imul
arpl
adc
inc
sbb
int
lods
dec
popf
dec
and
cmp
jo
cmp
dec
xor
ret
mov
push
jmp
dec
cmp
jmp
rcr
jnp
mov
xchg
loopne
cld
ds
daa
mov
xchg
inc
mov
mov
clc
icebp
pop
mov
add
js
cli
dec
jbe
or
jns
rcr
fndisi(8087
ins
adc
cmps
dec
movs
mov
pop
mov
add
dec
std
xor
or
mov
mov
out
das
call
nop
ss
cmp
and
and
and
call
jl
clc
jo
fist
shr
push
mov
xchg
xchg
xor
sti
pop
inc
loop
iret
outs
(bad)
mov
das
dec
mov
cmc
sub
fidivr
xchg
xor
in
cwde
pop
jmp
and
stos
cli
repnz
mov
rol
xlat
xchg
add
jns
stos
push
out
sub
cmp
mov
inc
sub
jae
shr
into
in
ins
dec
add
dec
mov
and
mov
xor
sbb
mov
mov
or
in
xchg
aaa
jecxz
lea
xor
xchg
or
std
(bad)
push
pop
push
xor
(bad)
sti
outs
ja
add
dec
mov
dec
ret
xchg
mov
xor
(bad)
fadd
add
cs
out
int3
inc
mov
pop
aaa
in
pop
pop
shl
push
cmp
xchg
push
adc
sbb
xor
jne
stos
inc
jae
imul
shl
sbb
in
sbb
std
cs
push
daa
xlat
ja
or
je
inc
and
imul
dec
imul
pop
xchg
gs
mov
add
mov
xchg
into
inc
test
cmp
inc
sub
push
xchg
icebp
lods
test
or
sub
into
jbe
push
scas
pop
mov
mov
sbb
test
scas
pop
mov
push
pusha
inc
cmp
mov
outs
sub
xchg
pop
xor
pop
retf
jmp
test
sub
mov
fadd
bound
test
retf
stos
dec
or
rcr
pcmpeqw
clc
dec
in
jecxz
dec
xor
xchg
iret
je
sbb
push
aaa
pop
jne
(bad)
mov
mov
push
retf
mov
jmp
(bad)
mov
into
mov
xchg
fwait
or
sahf
mov
pop
daa
push
sti
and
jg
and
sbb
rol
inc
jmp
pop
bound
pop
es
in
daa
mov
js
or
xor
je
nop
sub
push
loop
in
(bad)
in
neg
jecxz
inc
(bad)
scas
mov
sbb
mov
pop
mov
dec
push
mov
sub
pop
inc
push
scas
call
cmp
mov
cmp
popf
loope
stos
cmp
inc
mov
mov
cmps
pushf
mov
sbb
push
add
cwde
jl
out
push
out
jne
mov
aas
xchg
(bad)
std
add
leave
in
ss
dec
and
add
mov
xchg
push
push
or
or
sbb
dec
mov
out
call
dec
sbb
(bad)
scas
sub
sub
push
xchg
out
les
push
jg
test
add
lahf
lock
fsubr
arpl
mov
enter
push
adc
sbb
cmps
xchg
xchg
ja
int
in
xor
xor
jns
add
jae
add
or
mov
iret
sub
stos
cmp
cs
jno
mov
sbb
retf
jne
add
mov
push
adc
(bad)
ret
xor
and
mov
daa
sub
sbb
bound
inc
jmp
dec
sub
(bad)
and
and
rol
fwait
nop
inc
outs
ins
xchg
popa
xlat
adc
dec
popf
sbb
daa
mov
mov
jg
jnp
cwde
jnp
add
inc
dec
and
push
lahf
int
in
cmp
cmp
pop
or
bound
fstp
sbb
test
or
add
test
jo
test
push
and
pop
rep
loopne
jns
mov
dec
mul
push
movmskps
ds
add
mov
dec
jecxz
mov
call
mov
xchg
pop
dec
shr
push
das
jne
push
das
fs
das
frstor
xor
pop
gs
ret
dec
or
scas
aad
sub
or
or
loope
stos
push
xchg
dec
mov
scas
jg
ds
sub
dec
sbb
adc
sbb
mov
test
out
xor
sub
adc
xchg
pusha
adc
int
cmps
mov
mov
xchg
shr
enter
xchg
scas
in
push
mov
add
mov
and
stos
dec
inc
in
out
fld
jb
jl
lahf
jp
jns
and
dec
fwait
hlt
hlt
js
push
cmps
xchg
or
and
mov
push
ss
adc
(bad)
pop
add
pop
and
jecxz
push
lds
in
loopne
repnz
lods
jb
cdq
dec
dec
rcl
and
retf
dec
push
and
test
and
adc
push
xchg
sti
push
xchg
out
int
mov
stos
lea
fimul
xchg
add
fistp
inc
or
(bad)
inc
movs
jmp
out
xor
fs
fisub
pop
pop
mov
fs
xchg
mov
pop
xchg
sbb
in
addr16
add
pop
push
cmps
push
test
inc
sahf
xor
scas
fs
or
int3
call
jns
adc
imul
sub
int3
scas
retf
dec
or
mov
(bad)
pop
cmp
mov
ins
push
or
mov
jle
int3
(bad)
and
jl
cmp
inc
xchg
or
scas
xor
cmp
movs
shr
and
sub
cld
das
add
add
inc
mov
xlat
adc
clc
push
sbb
pop
data16
xchg
mov
aas
and
lods
adc
dec
add
pop
xchg
jmp
movs
sub
fadd
lahf
add
shr
mov
mov
arpl
jl
movs
scas
adc
jbe
mov
enter
les
pop
retf
mov
fisttp
les
add
shl
call
xlat
fnstcw
jl
cdq
mov
fisttp
int
dec
(bad)
call
movs
lods
stos
mov
mov
ja
mov
test
dec
mov
das
pop
imul
mov
xchg
sti
sahf
jle
mov
fimul
push
jecxz
adc
loop
in
loope
or
mov
xchg
int
adc
call
repnz
clc
jns
test
dec
mov
iret
inc
vpand
not
mov
in
jecxz
in
or
mov
mov
mov
clc
sbb
aam
aad
add
inc
lea
fwait
adc
pop
movs
or
cwde
jb
jb
jecxz
mov
ja
or
push
xchg
pop
and
hlt
xchg
sub
mov
xchg
push
mov
push
mov
push
(bad)
in
ins
fsin
cwde
sbb
stos
cwde
xchg
xchg
iret
aas
pop
mov
mov
mov
scas
nop
push
fidivr
and
sub
loope
(bad)
cdq
mov
sar
xchg
and
aam
cmp
or
(bad)
lea
push
add
sub
cs
dec
push
rol
fs
outs
retf
in
or
jno
lahf
fisub
xchg
add
cmps
jmp
or
mov
test
dec
or
dec
sbb
(bad)
test
jbe
shr
mov
leave
fld
jge
dec
aam
cmp
jl
rcr
push
fwait
lds
push
add
clc
cs
bound
xchg
cmps
(bad)
mul
into
in
cmps
push
jl
(bad)
icebp
cwde
pop
scas
mov
rcl
dec
sub
aad
jo
jle
dec
jmp
and
cmps
aam
test
mov
fiadd
pop
mov
mov
xlat
sbb
jmp
in
add
outs
xchg
xlat
xor
adc
inc
or
mov
aam
in
(bad)
cld
add
xchg
iret
or
sub
fisub
jae
sub
sti
or
jmp
jmp
xchg
daa
inc
mov
out
in
(bad)
shl
aad
ror
xchg
or
sub
pop
xor
popa
ret
sub
outs
mov
ret
mov
nop
pop
fisttp
int3
inc
mov
pusha
popf
jb
push
xchg
movs
sar
pop
cmps
push
es
and
jns
daa
dec
rol
lods
mov
pusha
cli
sbb
jmp
bound
add
and
push
aas
add
sub
mov
jno
xor
test
arpl
cmp
call
lods
ds
inc
pop
push
dec
pop
jp
cli
and
xor
into
jne
loopne
inc
enter
add
inc
into
movs
lds
jmp
sti
xchg
push
pop
or
xchg
fst
stos
mov
cmp
jmp
mov
jmp
imul
out
and
mov
mov
iret
aad
sar
ja
xchg
lds
mov
test
dec
dec
shl
mov
movs
fbld
retf
in
stos
call
ins
mov
ja
jmp
outs
movs
mov
sahf
jmp
idiv
mov
fs
cmp
push
push
mov
in
(bad)
call
mov
push
cli
jo
mov
and
ss
adc
sub
rol
cmps
mov
push
inc
dec
cmc
sahf
mov
xor
push
neg
stos
popa
mov
pop
dec
fmul
xor
out
pop
lds
mov
test
loop
jb
cdq
loope
or
(bad)
sub
daa
pop
xor
cdq
push
pmaxub
adc
push
fdivr
xor
jb
cld
dec
ins
inc
jecxz
xor
jle
pop
adc
sub
adc
loopne
inc
(bad)
loop
sbb
adc
push
cmps
mov
lahf
pop
pop
sbb
and
data16
enter
inc
sub
cli
add
add
cld
imul
stos
retf
lds
fadd
mov
xlat
jp
imul
adc
aas
xchg
ror
adc
mov
push
xchg
jge
pop
inc
dec
repz
dec
mov
mov
or
pop
and
repnz
mov
test
stc
out
call
test
add
(bad)
scas
inc
cmps
(bad)
dec
mov
cmc
(bad)
or
xor
xchg
je
mov
and
push
rcr
loop
sub
sbb
das
iret
das
js
push
jmp
punpckhdq
jmp
loope
dec
outs
adc
sbb
inc
mov
popa
out
pop
(bad)
fxch
rol
adc
mov
(bad)
mov
and
mov
imul
xor
cld
cs
mov
ret
xchg
popf
int
sub
cmps
popa
fwait
cmp
lods
les
inc
adc
or
and
mov
xchg
mov
pop
fmul
ror
adc
(bad)
xchg
arpl
sbb
or
push
adc
cmp
sbb
sbb
inc
aad
xchg
leave
cdq
aaa
test
xor
pop
mov
out
icebp
stos
out
adc
lea
jo
pop
jno
xor
and
push
and
jecxz
mov
pop
shl
ret
inc
adc
dec
push
jg
stos
nop
popa
retf
push
xchg
add
mov
mov
sbb
aad
sbb
jge
mov
mov
out
jo
fcmovbe
jg
test
cmp
ins
push
cmp
pop
dec
xor
addr16
imul
retf
fwait
dec
add
push
iret
leave
cmp
xor
adc
sub
fwait
cwde
out
or
pop
jo
nop
lahf
out
mov
daa
and
arpl
and
mov
rcl
xor
aaa
iret
ins
add
ror
cmc
lea
outs
and
inc
cmc
pushf
std
test
xor
xchg
or
frstor
stos
add
mov
jle
bound
adc
mov
mov
loopne
sub
repnz
ss
into
dec
add
inc
jnp
into
cmc
int
and
stos
arpl
enter
jno
xor
xor
fdivr
idiv
adc
es
jp
pop
aam
movs
mov
mov
push
lock
push
mov
in
xchg
imul
jecxz
int
xchg
sbb
pushf
and
iret
jecxz
or
mov
jo
out
adc
mov
sbb
ins
ins
mov
fidivr
cmp
adc
xchg
pop
pusha
sub
scas
stc
push
mov
and
jne
scas
push
dec
xchg
imul
call
out
aad
rcl
sbb
das
jb
mov
clc
mov
lods
mov
jae
sub
cmps
inc
ds
pop
stc
push
in
test
cmps
dec
xchg
adc
mov
repnz
in
std
fcomp
mov
test
nop
sub
mov
(bad)
sbb
imul
out
aad
aas
sub
out
push
or
dec
inc
and
mov
lods
ror
mov
mov
mov
(bad)
push
add
outs
push
or
or
cmp
mov
test
(bad)
push
fild
jne
mov
out
adc
clc
retf
daa
cmp
adc
add
xor
and
pop
test
(bad)
pop
dec
out
adc
(bad)
leave
(bad)
(bad)
mov
shr
loop
test
jle
shl
fistp
std
sub
in
(bad)
aam
arpl
push
or
pop
lods
add
cmps
mov
and
and
sbb
xchg
dec
sbb
add
in
ret
lods
movs
mov
ja
fcom
shr
xor
(bad)
repnz
setp
jle
xchg
lahf
adc
and
adc
or
mov
add
xor
sbb
frstor
mov
fld
pop
ins
cdq
nop
test
repnz
jg
jnp
jnp
rcr
sub
mov
clc
mov
imul
mov
rol
add
enter
jle
jne
imul
stos
sar
cmps
lods
jns
mov
push
xor
movs
push
das
arpl
push
das
loope
cld
iret
sub
sbb
mov
inc
fild
inc
cdq
retf
xor
les
ja
inc
mov
cmc
dec
jno
xor
gs
push
shr
(bad)
xchg
push
add
pop
dec
cli
icebp
adc
dec
jb
dec
js
fstp
push
movs
xrelease
xor
jmp
lods
inc
adc
cmp
pop
xchg
popf
adc
in
jns
call
push
mov
push
(bad)
fidivr
mov
fcom
adc
sbb
loopne
mov
(bad)
xor
pop
mov
es
outs
fstp
imul
(bad)
outs
sbb
inc
pop
push
repnz
repnz
ins
scas
push
pop
mov
fiadd
mov
xor
pop
pop
jp
push
ins
adc
stos
std
in
jo
mov
xchg
or
inc
sub
lds
pop
inc
pop
ret
test
mov
jnp
and
out
imul
cmp
call
jnp
jmp
inc
xchg
mov
jge
lea
xor
and
push
mov
ins
fstp
push
jb
push
adc
pop
cld
out
ficomp
sbb
stc
push
test
test
setne
popa
fsub
mov
and
jb
ins
push
data16
movs
mov
sbb
add
or
sub
add
std
or
ins
adc
jg
jnp
rcl
sahf
sar
jno
loope
addr16
jp
cmp
jmp
mov
dec
pop
xlat
pop
icebp
cmc
xor
and
cmp
xchg
lds
into
mov
and
mov
cmps
jo
mov
dec
jae
or
shl
cmp
js
push
jmp
outs
mov
loop
push
mov
xor
dec
dec
sbb
xchg
outs
leave
mov
sbb
mov
out
pop
je
rep
fld
js
pop
pop
shr
(bad)
jg
repz
sub
mov
fild
loop
pusha
mov
inc
(bad)
cmp
inc
dec
mov
bound
push
shr
lds
mov
les
hlt
ss
ret
in
push
dec
jno
jne
js
out
pop
int
loope
or
dec
and
push
mov
jae
ror
mov
test
inc
call
sbb
or
(bad)
imul
rcr
add
dec
jg
pusha
dec
iret
or
ins
push
sbb
(bad)
mov
nop
int3
xlat
jge
and
mov
sti
and
jne
bound
int3
dec
aas
(bad)
in
cmp
(bad)
push
inc
jb
sbb
adc
mov
call
xchg
aam
sti
fs
sar
test
jg
jb
in
aam
pop
icebp
sbb
clc
mov
jns
inc
xchg
and
xchg
dec
ret
push
in
or
push
pop
ins
lea
int3
or
and
and
cli
sub
push
xlat
and
sbb
retf
arpl
hlt
retf
cmps
push
xor
dec
jle
jo
xlat
mov
jecxz
sub
sub
mov
inc
(bad)
mov
not
iret
add
outs
xor
ins
or
cdq
push
jmp
mov
or
and
shr
jmp
int3
push
pop
ds
(bad)
mov
pop
test
and
sbb
outs
and
pop
cmps
dec
push
add
js
arpl
loopne
pushf
pop
jns
sub
cld
jo
lahf
outs
in
pushf
mov
js
in
xchg
bound
cmp
and
push
pop
dec
pop
aam
imul
loop
(bad)
cmps
div
dec
movs
jp
into
fdiv
jl
hlt
mov
xchg
jmp
jno
xlat
cmps
in
shl
add
sahf
mov
xchg
call
idiv
int
add
inc
or
push
mov
and
mov
inc
xchg
jg
lock
mov
lods
and
push
adc
jb
retf
int3
in
pushf
jo
inc
sbb
repnz
mov
das
cmp
and
mov
stc
aas
jl
cli
push
outs
sub
mov
in
mov
nop
imul
mov
xor
cmp
lds
xor
dec
add
pop
call
in
dec
push
or
int3
jb
fs
mov
sbb
mov
les
pop
in
jg
rcl
xor
imul
xor
jmp
inc
in
jge
mov
jp
fisubr
int
pop
and
mov
cmp
dec
aad
push
bound
pusha
shl
shl
add
rcr
dec
test
adc
out
jp
retf
aam
jno
push
das
sbb
adc
inc
sti
mov
xlat
mov
adc
add
sub
pop
push
dec
push
nop
ins
mov
inc
sub
add
aad
out
push
mov
mov
xor
popf
sbb
pop
sub
push
lock
cmp
adc
into
sbb
(bad)
stc
es
dec
cs
push
inc
lds
mov
popa
mov
ret
xlat
jo
adc
sub
mov
xchg
sbb
(bad)
in
push
dec
mov
aaa
adc
sub
fcomi
jl
loopne
dec
addr16
cdq
hlt
adc
add
xchg
mov
out
pop
adc
stc
dec
dec
stos
and
xchg
xor
pop
jmp
inc
(bad)
mov
fdivr
sbb
push
jbe
clc
test
add
outs
int
je
mov
push
mov
into
mov
and
mov
push
mov
movs
push
sub
pop
mov
pop
div
hlt
jp
adc
or
mov
aam
mov
outs
pop
or
dec
outs
in
push
(bad)
fmulp
inc
push
pop
fidiv
push
out
xchg
pop
call
jb
cmps
addr16
ss
int3
jns
push
imul
sbb
or
test
jmp
jmp
repnz
push
and
aam
push
xlat
test
stos
xor
out
inc
inc
(bad)
mov
pop
jp
test
retf
outs
mov
outs
call
fidiv
push
mov
mov
int
movs
mov
hlt
sub
cmp
cmp
repnz
mov
cwde
sbb
jbe
inc
xor
xchg
mov
mov
inc
ins
push
inc
and
fs
call
adc
jmp
xchg
mov
cs
adc
dec
jmp
iret
xor
fwait
pop
xchg
imul
push
xchg
(bad)
push
and
xchg
les
ret
jb
xor
push
pop
adc
and
pop
fnstenv
xor
push
retf
mov
jo
and
jns
mov
ror
fsub
daa
mov
es
push
mov
push
cmc
imul
xor
retf
ds
adc
push
mov
inc
mov
and
mov
cld
mov
cmp
int
loopne
fimul
cmps
push
enter
inc
sub
pop
jae
fmulp
in
xchg
popa
int3
pop
add
fst
rol
cs
shl
cmps
das
call
mov
push
outs
dec
sub
jmp
mov
xchg
push
mov
pushf
pop
xchg
and
mov
pushf
test
sahf
out
icebp
je
pop
mov
imul
jg
lea
retf
sub
lea
add
icebp
pop
arpl
push
add
int3
and
in
xchg
fdiv
(bad)
pop
sbb
and
cld
lods
xor
and
outs
mov
not
mov
lods
jle
push
xchg
rcl
sbb
imul
dec
cwde
pop
ins
into
mov
(bad)
imul
lds
jge
push
inc
repnz
out
in
daa
push
mov
pop
sub
and
xor
(bad)
loope
lods
mov
lds
jecxz
push
test
dec
(bad)
cmp
(bad)
mov
pop
jnp
sti
xor
lsl
sbb
aaa
dec
(bad)
stc
push
retf
gs
mov
push
(bad)
sub
or
inc
hlt
stos
test
mov
ss
mov
adc
hlt
push
inc
out
pushf
enter
retf
pop
int3
or
into
out
pusha
rcr
push
loop
lock
outs
daa
jb
shr
push
loope
mov
sub
daa
dec
adc
test
push
and
int
out
lock
outs
retf
mov
sbb
inc
jno
cmp
push
lds
xor
imul
sub
or
cmps
push
cmp
dec
daa
mov
movs
idiv
inc
push
cmp
hlt
dec
aad
jecxz
add
mov
(bad)
(bad)
cld
mov
push
and
mov
(bad)
(bad)
stos
out
xchg
xor
(bad)
jg
imul
mov
jo
xchg
mov
push
adc
jns
inc
(bad)
imul
sbb
mov
mov
and
cmp
pop
sub
xchg
jnp
push
leave
mov
js
jmp
push
cmp
xor
dec
hlt
dec
xchg
repnz
adc
mov
mov
sub
or
or
pushf
mov
scas
mov
cmp
repz
cmp
lock
jl
jge
jo
inc
fdivr
xchg
int
inc
inc
fst
inc
cld
aam
daa
adc
push
stos
push
loopne
fcomp
mov
xor
jp
fmul
clc
test
test
mov
jne
pop
pop
daa
out
aas
rcl
dec
out
or
pop
nop
fcom
pop
out
push
mov
sar
push
pop
sti
cmp
out
fcom
or
pop
push
jbe
in
push
push
dec
fiadd
sti
xchg
pop
push
pushf
adc
adc
popa
jl
out
adc
add
daa
push
cmp
daa
ret
mov
xor
stos
int3
(bad)
mov
(bad)
adc
fidiv
fbstp
loope
ja
pop
jne
xchg
leave
gs
scas
xchg
pushf
outs
div
jno
call
xor
push
inc
push
adc
jecxz
mov
cmc
mov
je
jle
ins
cmps
inc
in
int3
shr
adc
popf
jmp
jno
dec
pushf
or
clc
dec
pop
xor
lea
lds
cdq
pusha
mov
ins
jns
mov
jns
cmc
sub
rcr
test
sbb
jmp
sbb
bound
ja
jecxz
adc
js
inc
aam
ja
push
imul
test
mov
mov
in
adc
pop
sbb
and
xchg
loop
mov
pop
das
loope
sbb
jle
movs
loope
mov
icebp
ret
into
cdq
xor
adc
sar
and
or
std
out
scas
cs
les
jae
rcr
or
or
loop
or
loopne
pusha
pop
mov
fwait
mov
clc
dec
cli
mov
scas
adc
jae
jae
xor
cmps
jne
inc
jno
repz
test
mov
jo
nop
stos
nop
bound
and
stos
fdivr
cmp
cmp
and
cli
jg
imul
imul
lahf
test
imul
test
pop
sahf
mov
rol
dec
pop
push
sbb
mov
les
scas
or
add
je
movs
adc
out
(bad)
jno
xlat
mov
push
rcr
dec
adc
cwde
out
cmc
xor
retf
(bad)
cdq
mov
or
nop
adc
fwait
js
push
push
push
loope
(bad)
dec
int3
test
cmc
test
mov
icebp
sub
sub
inc
repz
jecxz
pop
imul
dec
pop
aaa
add
jl
iret
and
rcr
sbb
loope
add
fmul
pop
movs
push
out
xor
jl
inc
mov
pop
mov
sbb
fcom
(bad)
pop
loope
outs
add
dec
mov
mov
enter
daa
js
cmp
jmp
pop
jno
div
cmp
lds
mov
sub
pusha
mov
mov
dec
in
cmp
neg
xchg
push
mov
push
clc
cld
lods
inc
rep
add
pop
(bad)
jne
xchg
mov
sar
cs
mov
mov
push
sbb
mov
ins
inc
das
pop
cmp
jmp
mov
pop
in
stos
mov
pop
int
pushf
clc
ss
push
inc
mov
sub
cmp
cmp
xchg
sub
or
lea
or
shl
(bad)
push
or
call
stc
mov
mov
out
push
lahf
ret
sbb
push
dec
cld
ret
pop
dec
mov
push
cmc
rcr
inc
pop
push
loopne
je
neg
sti
sti
or
add
jl
and
shl
(bad)
cld
nop
xor
pop
adc
jle
mov
retf
sbb
popa
adc
ror
retf
sbb
scas
lds
hlt
movs
xor
push
or
rcl
push
push
js
pushf
out
mov
adc
mov
imul
jmp
xchg
pop
ja
jecxz
lock
or
mov
inc
lahf
jb
xor
je
retf
inc
les
aad
add
mov
out
lods
pop
xor
push
data16
nop
inc
not
pop
movs
ins
adc
jo
pop
stos
or
(bad)
mov
xor
dec
sbb
sub
mov
jnp
movs
fsub
adc
neg
aaa
inc
and
xchg
sar
fadd
pop
inc
fcomp
pop
xchg
or
das
or
mov
jmp
neg
lds
lods
sahf
adc
dec
sbb
mov
sub
(bad)
ss
fucomip
cwde
ins
cs
or
cdq
mov
add
je
pop
cmc
dec
std
jmp
pop
(bad)
sbb
jg
cmp
inc
in
das
dec
imul
fs
fist
mov
lahf
movs
mov
sbb
inc
mov
or
or
imul
adc
mov
pusha
int3
or
xor
inc
repnz
popa
in
mov
push
popf
out
icebp
retf
xor
nop
adc
fucomip
fisubr
xor
push
push
inc
movs
(bad)
call
clc
fnstcw
daa
(bad)
mov
sbb
shl
inc
xlat
jle
or
or
jmp
cld
or
jl
and
imul
int3
jno
test
add
sbb
inc
lods
xor
pop
ins
in
and
lods
jmp
js
(bad)
push
mov
xchg
sti
(bad)
enter
fiadd
push
mov
fnstsw
mov
es
sbb
fwait
push
mov
push
xchg
loope
clc
xor
xor
sahf
mov
dec
nop
lar
fadd
xchg
jb
push
jnp
push
data16
pop
mov
ins
(bad)
in
add
mov
stos
mov
(bad)
mov
ins
repz
adc
inc
dec
xor
(bad)
int3
ins
mov
sub
inc
add
iret
cwde
stos
mov
inc
int
mov
inc
mov
stos
cmp
mov
fstp
shr
fdivr
in
mov
xchg
sub
jmp
mov
or
push
jb
cs
stos
or
(bad)
fsubr
xchg
dec
(bad)
sub
sbb
push
dec
pop
jae
iret
inc
dec
fdiv
out
xchg
popf
mul
adc
push
jge
movs
lods
jmp
jecxz
xor
and
push
imul
(bad)
sbb
lods
jmp
into
in
outs
mov
jb
popa
cmc
test
inc
sub
fs
push
and
sub
pop
ja
xor
(bad)
mul
mov
or
sub
push
inc
sbb
xor
enter
push
xor
xchg
das
and
jae
inc
sbb
jmp
and
ins
inc
leave
daa
cmp
stos
push
jns
or
repz
xchg
sub
jae
test
sahf
jge
out
scas
lea
adc
pop
hlt
inc
adc
jmp
push
movs
imul
push
dec
pop
dec
xchg
or
and
jl
pop
xchg
sbb
outs
ds
test
(bad)
mov
mov
add
fisub
sub
(bad)
push
retf
loope
icebp
pop
clc
mov
pop
jae
pusha
inc
pop
inc
inc
sub
std
mov
mov
adc
imul
jo
enter
test
or
(bad)
shl
repz
pusha
outs
jmp
and
sub
mov
cld
xor
movs
ss
repnz
xchg
jmp
aam
scas
mov
mov
fsub
pop
lds
out
fldcw
(bad)
repnz
div
sti
push
dec
pop
imul
cmps
fstp
cmps
je
and
cmps
ds
sbb
sbb
scas
adc
in
fcmove
jo
mov
movs
rcl
xor
xor
or
xor
jl
ret
and
pop
pop
nop
push
cmp
inc
dec
fnsave
mov
sahf
mov
ins
dec
(bad)
ror
jecxz
and
dec
push
mov
mov
sub
bound
dec
mov
mov
(bad)
mov
sbb
add
push
cmp
sbb
sub
mov
ret
mov
sbb
test
mov
push
mov
pop
jle
cli
addr16
push
repnz
xchg
push
jb
int
xor
add
xor
fstp
add
push
jne
mov
push
test
hlt
not
xchg
fs
retf
xchg
das
or
add
push
push
pop
std
fwait
jmp
mov
outs
xor
push
neg
sub
ror
ret
push
or
xor
jb
jne
ins
jbe
xchg
inc
or
xchg
stc
add
wbinvd
outs
cmp
ins
push
sub
fwait
jecxz
xchg
jge
clc
outs
mov
or
imul
mov
add
ret
cdq
sbb
pop
aam
jp
arpl
inc
xlat
xlat
adc
movs
in
jae
fcom
ret
mov
sub
fcmovnu
frstor
sub
push
jmp
mov
or
pop
add
ss
xchg
popa
and
inc
and
fsubr
xor
(bad)
push
ret
retf
pop
ins
jno
push
dec
and
aaa
(bad)
stos
lea
(bad)
dec
(bad)
mov
mov
xchg
test
pop
inc
or
xchg
sar
cli
xor
sahf
mov
mov
pop
pop
sub
cmps
add
lods
inc
fwait
mov
lock
cmc
loope
(bad)
xor
rol
pop
in
or
add
fiadd
mov
mov
pop
or
div
cmps
loop
mov
xor
xchg
(bad)
rcl
sub
cmc
in
mov
movs
clc
inc
shr
loope
repnz
push
dec
std
jno
and
ss
push
cmp
les
dec
popf
fmul
mov
mov
div
sbb
rcl
out
or
out
jg
cmp
shr
xchg
jp
ja
movs
add
jmp
pop
pcmpgtw
out
lahf
xchg
leave
pop
aam
sub
ret
test
aas
push
jge
jno
in
sbb
add
push
cmp
push
push
xor
icebp
fs
sub
jl
adc
aad
out
out
push
icebp
push
call
and
int3
jmp
mov
out
pop
or
hlt
push
add
mov
jg
je
xchg
push
jae
popf
inc
and
div
movs
(bad)
hlt
or
add
sahf
fdiv
or
in
push
push
adc
cmp
xchg
ds
retf
add
mov
out
jp
inc
xchg
jns
pusha
xchg
push
fst
jmp
mov
inc
push
cmp
cmps
ja
sub
and
jb
jno
outs
or
shl
xchg
int3
mov
jo
jge
pop
add
lock
test
dec
inc
test
in
mov
test
push
mov
mov
adc
pop
cs
retf
mov
dec
or
sub
inc
retf
nop
dec
pushf
mov
push
in
js
dec
jle
rcl
sub
in
push
jmp
addr16
test
adc
jae
jecxz
inc
xor
popf
sub
cmps
shr
loope
xchg
imul
mov
jp
or
das
pop
stos
pushf
jno
mov
pop
leave
push
retf
cmp
iret
cmp
cdq
mov
(bad)
call
jle
dec
loopne
inc
retf
fmul
cdq
and
xchg
jle
retf
lods
into
(bad)
jbe
inc
jno
jmp
jge
and
pop
cmp
and
xchg
dec
test
jbe
cli
stos
addr16
ror
lock
adc
bound
gs
xchg
cli
xchg
in
fldcw
pop
lea
add
jns
(bad)
push
knotw
jmp
pop
imul
icebp
jb
pop
retf
inc
stos
retf
xchg
jb
inc
lods
push
in
xor
leave
mov
jecxz
xchg
ins
pop
sbb
shr
push
(bad)
mov
daa
jecxz
arpl
adc
jne
push
sbb
repnz
aaa
cmps
retf
or
(bad)
push
inc
or
nop
outs
in
lods
mov
and
sar
mov
add
je
jl
mov
mov
addr16
jle
lods
stos
xor
enter
fstp
shr
cmp
and
es
pop
sub
and
cmc
int
mov
pop
xchg
stc
pop
add
jl
jno
cmp
and
scas
and
dec
(bad)
bswap
mov
cmp
dec
ins
and
cmps
mov
call
int3
ror
mov
fdivr
in
sub
push
stos
(bad)
xchg
out
push
push
sub
mov
loope
jns
adc
addr16
repz
push
lahf
fcomp
xchg
or
push
ins
mov
(bad)
das
dec
fimul
movs
mov
push
cwde
adc
push
jg
mov
mov
adc
pop
inc
push
aas
pushf
pop
loop
loope
addr16
jmp
cwde
xor
push
mov
add
cs
and
jp
sbb
sahf
xor
or
ins
xor
pop
(bad)
xchg
imul
push
inc
mov
lahf
jae
aad
pop
cmps
in
xchg
sbb
and
cld
enter
pop
dec
cmp
dec
sbb
fcmovne
je
xor
jns
jbe
mov
mov
mov
push
pop
es
jae
add
inc
xor
out
scas
inc
lea
les
pop
mov
ret
jp
adc
xchg
mov
cwde
pop
mov
pop
js
pop
xor
xor
jno
adc
and
xchg
pop
and
addr16
stos
leave
fsubr
fcom
sahf
es
inc
outs
lods
xor
pop
push
mov
loope
xchg
in
out
sahf
stc
cmp
pop
sbb
sub
cmc
adc
pop
inc
push
movs
rcr
outs
cmp
xlat
lea
mov
push
es
into
adc
dec
shr
ds
inc
cmc
rcl
inc
lahf
enter
pop
adc
(bad)
rol
xchg
outs
jecxz
inc
push
or
mov
int
pminub
ret
pop
sbb
mov
mov
movs
mov
xchg
ins
outs
outs
addr16
xchg
inc
or
fild
lahf
(bad)
loopne
imul
pop
fadd
add
xor
adc
jl
pop
and
dec
dec
ficom
dec
mov
ins
or
and
push
and
movs
call
ss
mov
pop
ds
add
mov
push
mov
mov
ror
(bad)
fnsave
lahf
test
lea
mov
mov
sbb
add
add
pop
shl
mov
pop
jns
xor
cmp
sbb
cmp
enter
div
out
ins
mov
(bad)
ficomp
ret
mov
xchg
ficomp
mov
and
sbb
jae
adc
pop
xchg
mov
sub
mov
js
inc
inc
ins
push
mov
dec
inc
adc
mov
pop
fst
mov
push
mov
pushf
or
jbe
pushf
jmp
lahf
mov
mov
sar
cs
repnz
(bad)
push
mov
pushf
(bad)
aas
hlt
fnstcw
xchg
dec
repnz
aam
pop
adc
mov
cmp
adc
pop
jle
pop
cwde
inc
bnd
mov
fld
aaa
pop
cli
sub
cmps
pusha
cmp
fwait
adc
stc
push
xchg
or
(bad)
retf
adc
out
popa
rcl
jp
(bad)
xchg
cmp
and
dec
sub
mov
cmc
sub
je
xchg
xor
retf
xlat
ss
outs
push
loopne
push
ror
xchg
cmps
ins
(bad)
adc
add
pop
or
and
loop
(bad)
dec
aas
aas
inc
mov
in
cmc
add
loopne
mov
stos
iret
add
stos
ds
stc
loop
js
mov
retf
pop
cmp
test
jecxz
ins
test
stos
repnz
int
and
mov
les
push
sahf
out
test
cmp
pusha
ret
test
pop
push
dec
pop
pop
pop
xchg
outs
loop
int
icebp
push
out
pop
fcomp
icebp
js
push
fiadd
out
inc
adc
jmp
cs
pop
jmp
in
popa
(bad)
icebp
arpl
out
adc
gs
jnp
fnsave
mov
(bad)
cwde
(bad)
dec
adc
leave
test
jo
out
fwait
jnp
mov
mov
in
push
out
xchg
pop
xlat
es
stos
xchg
out
loop
adc
jbe
test
stos
ror
cdq
into
icebp
pop
jg
sub
fwait
push
jne
clc
jle
sub
std
sbb
lods
popf
sub
cmp
xchg
add
loop
push
cs
push
bound
fldenv
or
es
shl
add
mov
and
xor
ret
cmp
sti
ret
cmp
push
sbb
out
jnp
inc
sahf
pusha
retf
cmp
push
movq
inc
push
pop
popa
push
hlt
cwde
fwait
lea
(bad)
inc
std
pop
pop
jmp
mov
push
and
push
aad
adc
add
xor
xchg
cmp
in
pop
dec
add
mov
nop
add
adc
mov
mov
xlat
sbb
adc
mov
repnz
arpl
jp
fldenv
test
pusha
cmc
pop
add
cmps
out
mov
and
test
leave
cld
xor
jno
(bad)
out
jns
ret
ja
sub
mov
push
or
push
std
cmp
jmp
add
lock
mov
shl
pusha
xor
retf
loop
in
mov
out
sub
or
clc
(bad)
jge
aaa
xchg
xchg
out
(bad)
mov
lods
mov
not
test
mov
retf
sahf
scas
jmp
mov
mov
(bad)
leave
aam
cmp
pop
pusha
aaa
xchg
inc
pusha
push
xchg
(bad)
mov
inc
aad
mov
stos
dec
addr16
cmp
repnz
push
inc
or
adc
sub
jl
jo
cmp
cs
lods
leave
test
jne
cmp
mov
mov
movs
mov
fcmove
mov
gs
pop
inc
rcr
mov
aaa
push
xchg
dec
sbb
(bad)
lods
mov
xor
jae
fld
popa
cmp
inc
jg
push
(bad)
mov
loop
in
adc
fisttp
xchg
adc
stos
or
sbb
clc
mov
repz
mov
dec
jnp
lahf
fs
dec
pusha
sbb
jmp
out
dec
test
(bad)
cmp
leave
hlt
inc
loopne
jo
(bad)
sbb
dec
pop
xor
aam
in
(bad)
fimul
push
sbb
scas
pop
add
dec
shr
and
and
jmp
repnz
push
xlat
cmps
(bad)
push
mov
xchg
and
inc
test
out
mov
adc
ror
stos
mov
test
xor
stc
xchg
inc
sar
add
idiv
jno
or
popa
ret
out
jno
test
push
pop
mov
mov
ret
pop
dec
xor
addr16
rcl
popa
pop
cmp
push
test
jmp
push
rcr
out
adc
xor
push
mov
ins
out
xor
dec
xor
add
pusha
(bad)
repnz
and
test
addr16
adc
aad
daa
cmp
in
out
retf
test
sbb
lahf
dec
fs
(bad)
dec
bound
scas
sub
and
dec
xor
repz
mov
call
in
cmps
pop
jecxz
fisttp
ret
fwait
inc
pusha
repnz
icebp
cmc
sub
stos
adc
mov
push
scas
(bad)
push
cmps
(bad)
call
ja
cmps
mov
jns
imul
xor
mov
add
leave
pop
loop
push
add
xchg
inc
test
outs
test
xor
jg
sar
in
(bad)
rol
xchg
je
mov
hlt
add
mov
inc
movs
and
push
hlt
add
arpl
and
or
and
shr
jp
rcl
pop
stc
(bad)
mov
xor
and
inc
jecxz
push
xchg
int3
popf
xor
sbb
push
jmp
pop
inc
jne
jmp
jmp
arpl
lock
in
mov
call
(bad)
xchg
mov
pushf
cmc
popa
xchg
rol
ja
fwait
push
(bad)
sbb
jmp
add
lock
ins
fsubr
ja
and
out
vpmulhw
push
sub
inc
mov
rol
mov
call
ja
dec
rcl
jecxz
pop
and
xor
les
idiv
cmp
jae
and
push
retf
mov
cmps
and
pusha
in
inc
or
add
push
dec
jbe
mov
pop
sub
out
dec
bound
and
in
xchg
inc
pop
aam
pop
xchg
in
pushf
sub
arpl
push
push
imul
jnp
clc
ins
das
sbb
adc
jl
stc
leave
sbb
aas
mov
fisttp
add
aaa
sbb
in
sub
leave
loopne
inc
cmp
mov
dec
enter
cwde
lods
loope
xor
add
ds
adc
clc
mov
es
sub
popf
xor
punpckhdq
sahf
iret
call
sub
(bad)
scas
dec
push
popf
and
stos
pop
ret
cs
adc
cmp
cmp
stos
mov
inc
add
push
mov
mov
lods
push
fstp
push
(bad)
dec
pop
mov
sbb
push
or
inc
call
(bad)
icebp
test
add
fist
repz
hlt
inc
pop
iret
(bad)
xchg
add
add
(bad)
repnz
jg
(bad)
in
pop
mov
adc
lahf
cmc
push
mov
add
jns
pop
imul
adc
mov
(bad)
and
and
mov
(bad)
cmp
lock
or
movs
iret
pop
pop
ds
sbb
mov
ins
mov
cmp
int3
jnp
rol
dec
data16
mov
sbb
shr
add
test
mov
rol
mov
enter
nop
dec
push
xlat
(bad)
mov
ja
jl
jmp
or
sub
add
fwait
xor
call
jg
inc
test
lock
pop
sub
adc
dec
mov
enter
sbb
(bad)
cld
pop
pusha
lock
call
sub
mov
pop
cmp
cmp
(bad)
xlat
pusha
in
mov
cmp
in
iret
inc
ins
lods
outs
mov
sbb
fucomip
inc
(bad)
push
scas
aas
stos
xchg
and
enter
in
cmc
push
xchg
int3
jb
(bad)
(bad)
cmps
imul
jns
pop
sbb
push
cwde
mov
loop
ja
arpl
or
dec
pop
or
mov
pop
push
inc
in
sbb
cmps
sbb
xchg
jmp
stc
stos
adc
cmp
push
mov
mov
imul
das
imul
cmp
fsubrp
add
cmps
fwait
cli
pop
fwait
xor
ins
lock
xor
mov
out
add
and
fs
inc
xchg
fstp
mov
pop
js
pop
or
push
outs
aam
push
or
xor
in
inc
pop
outs
stc
dec
pushf
mov
sub
xchg
mov
shl
sbb
out
lahf
or
(bad)
jmp
(bad)
fistp
paddusw
push
dec
mov
daa
clc
push
fcomip
and
data16
dec
ss
pop
xchg
fsub
mov
dec
sbb
jns
imul
cvtpi2ps
and
xchg
or
popf
xchg
leave
int
fisubr
lods
ror
xor
jb
jns
pop
pop
dec
pop
sub
xchg
cmp
xlat
xchg
sti
sub
int
dec
push
out
push
lahf
scas
adc
mov
retf
lods
mov
jge
push
add
cmp
sub
movs
lods
loopne
(bad)
sub
mov
fisttp
mov
push
les
data16
pop
(bad)
xor
lods
bound
ret
ins
fptan
sbb
fcomp
rol
and
les
js
xchg
movs
push
mov
mov
pop
(bad)
and
(bad)
jmp
call
cmps
add
push
std
inc
mov
cmc
popa
bnd
mov
sbb
mov
sbb
popa
adc
call
imul
dec
sbb
lea
mov
pop
jp
int
rol
jecxz
inc
adc
mov
nop
and
add
cmp
out
fbld
sub
jg
xchg
loop
sub
lds
sbb
retf
lds
xchg
mov
mov
shl
lock
dec
popa
out
or
pop
adc
fwait
out
adc
pop
lods
(bad)
std
loop
pushf
(bad)
stc
xchg
jg
cs
mov
cs
jp
movs
int
push
shl
or
out
push
imul
jo
and
call
bound
cmp
lock
lock
fiadd
adc
xchg
xchg
cmp
outs
adc
cld
or
push
cmp
sbb
mov
cmovg
mov
clc
retf
cdq
(bad)
(bad)
es
add
das
sbb
adc
cwde
js
xchg
in
push
shl
dec
push
scas
aam
sub
pop
ja
adc
outs
push
jp
js
stos
xor
or
sti
inc
lods
mov
xor
lock
sbb
bnd
or
push
pop
jl
xor
je
mov
pop
outs
scas
sbb
pop
push
jg
daa
inc
inc
push
rcl
cli
sti
mov
popa
jle
adc
in
pop
push
imul
in
xchg
pop
sub
sbb
call
dec
jmp
leave
mov
lods
or
xchg
hlt
pop
jecxz
cmp
mov
pop
jbe
push
sub
mov
(bad)
pop
jbe
pushf
pop
cli
sti
fucom
fild
pop
cwde
xchg
outs
and
mov
sbb
sub
shr
popf
jnp
jne
adc
adc
sub
inc
xchg
loopne
xor
add
aad
adc
pop
adc
dec
(bad)
mov
in
sbb
mov
in
or
jmp
jb
sbb
mov
retf
(bad)
xor
mov
mov
or
aam
mov
sub
adc
jno
nop
repz
xchg
ja
data16
mov
fcmovbe
dec
(bad)
imul
mov
sbb
xchg
cmovbe
ret
mov
(bad)
push
sbb
jg
sub
or
jle
aaa
int
ds
test
mov
pop
push
sar
test
outs
cmps
jne
pushf
(bad)
xlat
les
xchg
jmp
js
pop
cmp
jnp
mov
pop
cmp
mov
pop
int3
mov
or
out
(bad)
adc
jo
stc
dec
mov
or
xchg
iret
xchg
scas
sahf
out
xlat
mov
and
pop
das
mov
lods
dec
sbb
xchg
dec
sbb
fcom
pop
pushf
add
out
push
pop
retf
(bad)
fisttp
mov
pop
mov
es
add
cmp
sbb
mov
jmp
int
jge
clc
or
out
ja
push
arpl
retf
sub
lock
mov
adc
or
js
jg
mov
pushf
(bad)
cwde
mov
fldcw
mov
fmul
ins
inc
fdivr
clc
jmp
movs
xchg
sbb
mov
push
jne
mov
test
or
scas
jns
sbb
ror
lock
pop
jae
fimul
lock
ja
lods
or
mov
push
mov
or
inc
push
cmp
or
jnp
stos
aaa
xor
jle
mov
jnp
or
inc
mov
dec
test
cmp
(bad)
push
ja
adc
stos
js
aad
inc
call
lods
(bad)
xchg
inc
pop
(bad)
stos
pop
jle
pop
pop
dec
mov
jle
and
aaa
push
addr16
movs
jmp
and
mul
fsub
xchg
xor
call
ins
ret
inc
ss
mov
dec
mov
lea
add
push
jmp
mov
lahf
fmul
gs
fmul
sub
and
sbb
jns
xlat
mov
xor
pop
sbb
xchg
ins
hlt
repz
cmps
cmp
daa
popa
cmp
mov
add
dec
inc
pop
cmp
jmp
cld
xchg
pop
mov
jmp
and
push
sbb
xor
icebp
mov
je
adc
pop
(bad)
sar
ret
add
ja
jno
xchg
ret
jo
or
add
cdq
mov
xchg
frndint
mov
mov
fsubrp
int3
leave
ficom
sti
aam
dec
ror
rcr
out
inc
shl
les
shl
scas
jmp
jle
inc
std
cwde
pop
aad
or
push
sub
push
mov
shl
push
inc
xlat
ds
movs
jbe
add
test
(bad)
fcmovu
ja
cmp
and
xchg
dec
push
repnz
mov
nop
imul
jnp
stc
xor
icebp
cmp
clc
cmp
push
ins
mov
sbb
lods
sub
ins
cwde
shr
and
fistp
rol
iret
mov
or
fimul
push
and
rol
sub
xchg
dec
bound
rol
js
shl
int
jns
sub
je
pop
aaa
jb
ins
outs
fsub
sub
push
cld
ins
arpl
rep
mov
outs
mul
cmp
jno
push
int3
sub
js
add
inc
popa
aaa
cli
out
push
stos
loop
mov
mov
jecxz
mov
in
fbstp
lds
mov
(bad)
mov
cmps
enter
cs
jbe
adc
mov
mov
into
adc
sub
cmp
xor
mov
(bad)
scas
mov
adc
les
inc
cli
adc
sbb
push
mov
pop
mov
out
jmp
pop
cwde
retf
xchg
or
das
dec
sbb
add
and
adc
push
in
or
or
in
add
pop
inc
retf
fdiv
fild
bound
fmul
test
in
xor
shr
in
nop
cs
adc
popf
stc
push
sub
ds
jmp
imul
(bad)
std
test
fdivr
cld
xchg
test
and
jno
(bad)
lahf
push
aaa
jl
cwde
jecxz
cli
ja
inc
outs
adc
and
inc
and
in
in
shl
idiv
scas
es
inc
push
pop
je
adc
push
(bad)
sub
sub
cli
arpl
fsubr
mov
xor
pop
jp
popf
popf
xor
enter
(bad)
fnstenv
cmp
or
mov
gs
add
movs
fldcw
sub
mov
push
js
xchg
test
sbb
jg
mov
mov
mov
or
sub
sbb
push
aam
mov
adc
test
pop
xor
fidiv
push
mov
test
xor
and
jmp
jl
dec
stos
and
repnz
lock
add
hlt
cmp
inc
lea
scas
call
out
sti
push
inc
ja
stos
xchg
pop
adc
into
xor
pusha
imul
shl
add
mov
and
aas
pop
loop
daa
sbb
sbb
mov
stos
into
mov
fisub
out
xchg
test
data16
fwait
pop
lea
jbe
nop
and
mov
sbb
add
repz
xlat
adc
retf
(bad)
gs
mov
pop
inc
fisubr
shr
test
xchg
inc
enter
adc
test
shl
rcr
clc
push
out
pop
lahf
jns
add
add
adc
push
jmp
sbb
pop
aaa
push
in
pop
push
xlat
pushf
ja
pop
jns
push
pop
adc
cs
push
call
loop
enter
lea
sti
lea
sbb
cmc
es
jns
mov
int3
pop
mov
out
clc
adc
mov
enter
push
cli
dec
push
(bad)
(bad)
dec
data16
mov
stos
xchg
pop
inc
fist
lods
stos
and
ror
imul
retf
bound
call
cmps
les
jnp
push
mov
stc
jne
xor
jb
or
cmp
sub
std
aad
(bad)
sbb
pop
jl
fcomp
or
repnz
test
(bad)
rcl
sub
xor
push
add
loopne
push
or
inc
sbb
cli
pop
test
cmps
mov
stc
xor
push
sub
or
bound
dec
ss
xchg
pop
push
jmp
cld
xor
push
cld
outs
mov
(bad)
dec
scas
adc
imul
mov
dec
push
inc
and
ja
gs
aam
inc
enter
dec
in
push
mov
and
test
push
pop
out
lods
push
repz
jbe
call
shl
jnp
imul
loopne
jne
fdivr
or
sub
loope
mov
add
inc
call
ficomp
cmps
add
jae
mov
push
or
lods
shr
in
in
sub
lahf
fwait
sub
or
outs
sub
sub
(bad)
retf
cmp
call
sbb
nop
dec
cdq
sub
rcl
pop
addr16
loopne
jne
cs
out
(bad)
cli
sbb
out
out
or
loopne
pop
ja
inc
out
or
std
push
scas
int3
cdq
enter
or
add
ficomp
lahf
ror
inc
jmp
inc
push
pushw
pop
mov
test
pop
js
stos
cmp
mov
(bad)
mov
xor
cmp
loope
mov
inc
out
pop
pop
ja
jl
xor
dec
in
scas
cmp
mov
icebp
(bad)
ss
dec
(bad)
pop
ja
xor
lods
mov
jae
sbb
repnz
sub
lahf
mov
sub
mov
cmps
(bad)
jne
mov
js
and
xor
cmp
or
shr
sbb
shl
cmp
jle
inc
jmp
in
mov
shl
xchg
test
cmp
div
scas
fs
mov
push
pop
mov
in
adc
adc
test
push
cmc
(bad)
cmps
and
and
and
ss
add
jne
or
mov
push
sbb
sti
lds
adc
es
and
enter
jno
xor
mov
lahf
outs
jmp
add
cli
imul
adc
mov
sub
repnz
dec
adc
sub
jae
push
rcr
ins
out
enter
adc
push
push
fisubr
xor
mov
jae
popa
xchg
scas
dec
jp
xchg
popa
aad
jecxz
(bad)
mov
sub
add
or
movs
call
scas
push
push
pop
pushf
addr16
mov
jno
int
call
jecxz
cwde
sub
mov
mov
xor
sbb
test
inc
xor
int
pop
neg
xchg
in
sub
icebp
mov
mov
cld
and
out
mov
out
imul
xchg
xor
cmp
cmc
int3
xchg
and
ja
scas
cs
or
imul
sti
mov
out
add
mov
loop
popf
mov
mov
movs
dec
call
mov
test
push
pop
inc
lds
sbb
jno
xor
fbstp
daa
xchg
inc
hlt
or
ret
lods
jmp
mov
and
cmp
in
cmp
jecxz
inc
xchg
mov
sbb
aam
rcl
lock
dec
icebp
mov
dec
ret
push
jb
cld
jno
dec
repz
adc
push
mov
pop
out
rcl
(bad)
pusha
mov
loope
and
pop
jmp
adc
jno
sub
cmps
or
dec
(bad)
and
dec
cld
pusha
adc
loopne
jb
cmp
shr
xchg
mov
addr16
jg
jno
jg
test
popa
push
into
addr16
xchg
inc
retf
sbb
inc
js
dec
ins
(bad)
push
xchg
repnz
and
mov
test
adc
pop
cdq
xchg
movs
sbb
outs
fs
je
test
ins
je
pop
inc
mov
mov
cmp
in
jge
jno
sbb
icebp
jae
inc
lods
pop
movs
sub
iret
sbb
rcr
cdq
xchg
data16
or
imul
lds
lea
fild
cmp
inc
imul
sbb
and
inc
scas
mov
loope
push
push
mov
les
sub
ins
aaa
in
xor
call
stos
nop
sbb
aad
jno
sbb
add
test
fs
dec
fdivp
stos
fcomp
mov
jle
retf
inc
sub
push
inc
stos
inc
aaa
sbb
cmp
cld
ins
fiadd
push
xchg
cwde
mov
inc
add
lods
imul
and
les
pop
jmp
and
out
aaa
out
dec
adc
retf
test
pop
or
fstp
push
xor
push
mov
stos
outs
das
adc
daa
sti
stc
sbb
shl
and
int
ds
and
js
in
cmp
add
pop
sbb
cld
or
icebp
jns
(bad)
dec
mov
sbb
pop
ins
adc
xchg
xchg
rcr
xor
fcmovnu
inc
mov
ins
adc
aas
ja
mov
or
jo
sub
xchg
lahf
add
je
push
jnp
fidivr
dec
es
sub
lock
nop
jnp
dec
xor
shr
sti
hlt
xor
mov
ins
sbb
sbb
pop
push
paddusb
add
in
leave
lock
popf
jp
fdivr
pop
xor
imul
out
das
dec
jnp
cmp
adc
enter
pop
pop
ja
ret
sbb
mov
jg
sahf
(bad)
and
adc
fld
xor
sbb
out
test
les
mov
push
cli
push
mov
lea
ins
xchg
xchg
dec
or
out
jbe
retf
stos
mov
add
sub
push
loop
push
les
es
pop
xor
test
adc
sub
pusha
cdq
adc
dec
mov
push
mov
loop
mov
ja
xor
idiv
fadd
push
in
xchg
repz
xchg
aad
stos
inc
pop
cmp
pop
fild
out
int
test
sub
jnp
mov
jb
mov
mov
xchg
jae
sti
sahf
cmp
popf
mov
add
and
pop
int
or
add
shr
jae
or
cmps
pop
jmp
retf
retf
lock
(bad)
fistp
int
addr16
inc
jecxz
sahf
or
test
mov
retf
aad
imul
mov
dec
push
mov
jmp
add
iret
push
xor
cmp
std
dec
sahf
dec
cmps
xchg
pusha
jmpw
mov
cli
mov
inc
popa
cmps
fnstcw
add
push
fst
inc
push
js
and
cmp
mov
addr16
cmps
add
add
addr16
mov
mov
jg
jg
mov
mov
std
cmp
add
int
cs
adc
or
cli
add
(bad)
mov
pop
and
mov
jle
cs
push
xchg
test
std
cmps
inc
add
mov
xchg
sub
mov
ins
or
add
mov
jb
int
push
push
push
sbb
pop
out
and
sbb
adc
xor
popf
jae
cmp
adc
cmp
call
inc
mov
es
ret
arpl
xchg
mov
push
jmp
(bad)
fmul
test
dec
sub
add
rol
(bad)
je
inc
retf
mov
xlat
inc
adc
pop
push
xchg
mov
cdq
fmul
and
inc
mov
dec
inc
retw
cmps
mov
mov
mov
xchg
xchg
sbb
outs
sbb
adc
iret
dec
sbb
sbb
in
xor
gs
(bad)
aad
and
inc
es
xor
sbb
cli
sbb
sbb
icebp
jle
bound
data16
sbb
dec
imul
sub
pop
cmc
push
nop
call
pop
sbb
(bad)
sbb
dec
xchg
hlt
imul
mov
inc
mov
mov
jmp
scas
mov
xor
or
rcl
inc
(bad)
daa
loopne
arpl
mov
pop
mov
out
rcl
je
add
imul
addr16
and
mov
dec
pslld
call
push
and
sahf
lea
stc
les
xchg
cmc
adc
arpl
or
cmps
mov
cs
outs
cmps
out
inc
cwde
xchg
add
pop
pop
out
pushf
xchg
jns
iret
jb
push
sub
rol
mov
ja
leave
push
js
add
xor
popf
inc
mov
call
pop
dec
cmp
sbb
stos
xchg
mov
scas
mov
sbb
in
mov
xor
push
dec
fistp
inc
mov
or
mov
sbb
inc
xor
dec
xor
and
cld
add
xor
das
imul
cmp
fistp
mov
and
mov
mov
retf
jnp
ss
aas
push
aad
sbb
add
(bad)
call
pop
dec
lock
call
add
(bad)
jb
add
fbstp
jecxz
adc
jbe
jns
or
ins
test
sahf
adc
or
mov
arpl
sub
movs
cld
(bad)
outs
mov
ja
cmps
adc
stos
sub
push
inc
ret
inc
dec
cdq
mov
addr16
ds
stc
dec
xchg
push
je
shr
movs
es
ins
mov
sbb
div
adc
addr16
retf
mov
or
test
fmul
int3
jp
popa
setp
add
push
mov
push
fwait
jmp
cwde
and
mov
loopne
mov
or
cmp
inc
ins
pop
sar
pusha
ja
push
pushf
mov
push
idiv
jmp
fcomp
push
push
mov
loopne
in
enter
cmps
(bad)
fiadd
fisttp
mov
daa
test
out
mov
in
aas
mov
xchg
(bad)
hlt
xor
dec
mov
popf
icebp
in
mov
dec
nop
leave
out
js
mov
in
cmp
fs
pusha
mov
je
xchg
push
retf
dec
test
pushf
clc
and
sub
sbb
xor
rcr
adc
pop
mov
xlat
xchg
test
lds
mov
push
jnp
mov
jo
nop
int3
jo
pusha
rcr
push
pop
dec
mov
dec
mov
jb
jb
sub
ret
fadd
xlat
jge
pop
dec
mov
loopne
jle
cmp
test
sbb
call
retf
mov
sar
out
ins
es
out
in
xchg
push
pusha
std
pop
test
add
xor
jmp
out
loop
push
jl
jne
dec
mov
cwde
ficomp
lea
mov
mov
jbe
push
push
jae
jle
icebp
or
data16
pop
xchg
mov
mov
in
mov
cmp
sti
clc
mov
inc
adc
sbb
test
jle
pop
cld
cdq
push
xlat
call
fist
pop
popf
xchg
cwde
sub
std
mov
pop
repz
xor
mov
cmps
jb
dec
repz
rol
jns
or
retf
xlat
and
and
div
cmp
jle
jns
push
ret
sbb
pop
mov
add
imul
xor
shl
data16
ds
ficomp
inc
inc
or
xrelease
jne
mov
add
pop
xchg
je
ds
cmc
mov
push
ss
sub
lods
add
adc
push
sar
popf
or
xor
ficomp
in
add
mov
push
pushf
push
pop
jmp
jmp
push
jbe
dec
push
shl
movs
pop
inc
icebp
movs
push
push
inc
int
arpl
mov
xchg
clc
ins
cld
loope
xor
icebp
into
inc
lea
xor
fisubr
data16
call
clc
fldenv
es
xchg
xlat
cmp
and
repz
(bad)
cdq
push
sbb
pop
std
cmc
pop
cmp
dec
ins
test
gs
loop
cmc
xchg
pushf
mov
loopne
fisubr
lea
(bad)
cmp
into
adc
inc
fs
retf
cmp
xchg
cmp
fadd
inc
and
scas
dec
out
scas
aas
les
xchg
retf
mov
fs
aas
lds
es
xchg
jae
in
div
pop
jp
mov
std
stos
es
(bad)
and
xchg
lods
ds
pop
in
pop
or
imul
pop
arpl
scas
inc
add
adc
sub
(bad)
push
popf
cmc
ja
pop
and
pop
mov
js
mov
fwait
out
xchg
es
push
dec
dec
popa
mov
mov
add
inc
and
adc
inc
xor
(bad)
mov
add
adc
jmp
sbb
cmp
leave
in
mov
sbb
stos
scas
sbb
or
cmp
cwde
mov
xchg
pusha
jnp
pop
sbb
inc
jb
xor
add
inc
cdq
in
lock
add
movs
test
sbb
sbb
lds
or
shr
mov
dec
and
inc
int
sub
das
inc
xor
xor
adc
rcr
xchg
jns
push
jmp
leave
rcr
nop
adc
mov
sbb
dec
inc
int
cmp
mov
push
lock
lea
in
pop
test
pop
int3
fdivr
xor
mov
push
lods
loop
out
repz
push
adc
mov
xlat
outs
inc
jno
cwde
mov
aam
popf
jecxz
mov
shl
push
ins
mov
inc
xchg
push
shl
stos
repz
push
pop
lods
push
call
push
and
or
push
xchg
sbb
push
xor
mov
rcpps
pop
pushf
into
outs
js
sbb
fbstp
daa
cdq
(bad)
clc
mov
dec
push
push
push
mov
mov
mov
fistp
inc
out
mov
mov
mov
and
js
cmps
dec
mov
mov
scas
mov
inc
je
sub
ror
sbb
imul
add
add
icebp
sub
mov
vpcmpeqd
jmp
int
add
fwait
inc
dec
call
xchg
stc
sbb
sbb
and
out
mov
cdq
xor
sub
xor
mov
retf
fsubr
mov
dec
mov
ins
or
mov
popa
les
adc
jnp
ja
rcr
arpl
pop
(bad)
xor
dec
dec
mov
adc
push
pop
(bad)
fisub
xor
movs
mov
inc
arpl
ret
xor
scas
push
xchg
idiv
mov
arpl
aaa
dec
fld
fs
je
sbb
xchg
and
jmp
mov
dec
push
xchg
add
lds
mov
or
js
and
(bad)
xchg
or
imul
icebp
xor
push
xchg
out
inc
popa
cmp
mov
xchg
ins
out
jp
push
scas
fs
push
inc
aaa
das
stos
mov
inc
inc
xchg
push
fisttp
dec
push
test
xlat
lock
out
(bad)
push
sub
rcl
mov
das
jnp
ror
dec
scas
sub
dec
cmp
fadd
push
bndldx
sub
mov
mov
mul
inc
add
xor
fidivr
jo
pop
ret
jmp
sub
(bad)
out
mov
pop
loope
sbb
jns
ss
cmp
jmp
sub
test
aam
dec
ror
mov
mov
cmp
call
dec
mov
retf
and
imul
sbb
mov
addr16
adc
movs
fdivr
retf
mov
xchg
jmp
mov
xchg
fstp
mov
in
fdivr
das
inc
mov
mov
push
retf
aam
xor
or
je
not
int3
jns
out
push
pop
sbb
mov
add
cmp
outs
cdq
push
sti
inc
cli
adc
or
icebp
in
cmp
add
(bad)
outs
dec
fs
dec
push
outs
out
outs
inc
ss
jae
xchg
outs
sub
and
stos
mov
sahf
mov
inc
push
xchg
out
ffree
push
es
or
xor
mov
jno
stc
into
or
and
or
jmp
cdq
xor
xlat
jmp
std
int3
rol
stc
jo
dec
mov
cmc
lahf
push
xchg
jmp
dec
out
in
in
int3
rcr
mov
test
(bad)
test
mov
mov
mov
pop
out
cmps
push
lods
pop
cld
cdq
jns
repz
dec
fs
add
clc
dec
repz
xchg
pop
leave
pop
pusha
pop
pop
icebp
stc
mov
inc
push
ins
pop
shl
std
mov
movs
push
sbb
sbb
loopne
retf
sahf
dec
xchg
loop
sar
sbb
mov
sbb
retf
push
push
jnp
gs
mov
hlt
cs
mov
shl
(bad)
(bad)
adc
loope
xor
mov
mov
mov
loopne
mov
push
adc
add
int3
imul
xchg
in
bound
pop
mov
cmp
jns
ret
sar
jmp
mov
add
add
pop
inc
outs
inc
into
scas
mov
rol
pop
jge
xlat
(bad)
(bad)
fsubr
aam
push
xchg
push
aam
cli
xor
fistp
ds
loopne
into
dec
lods
mov
pop
jl
xchg
pusha
je
or
nop
jge
sub
cdq
sbb
daa
and
and
shl
out
addr16
or
(bad)
adc
mov
shl
jmp
call
(bad)
and
lahf
xor
into
inc
dec
pop
pop
(bad)
enter
pop
adc
push
push
xchg
imul
mov
xor
mov
int
test
mov
scas
inc
loop
inc
(bad)
clc
cmp
pop
jb
push
push
sbb
or
stc
mov
es
ret
add
aam
mov
inc
push
adc
mov
push
cmp
pop
dec
icebp
mov
nop
test
aam
pop
shr
stos
(bad)
adc
retf
sub
or
aad
mov
mov
ds
(bad)
daa
in
mov
cwde
adc
shr
jb
add
inc
sahf
(bad)
arpl
mov
mov
jl
imul
cwde
sbb
pop
push
in
push
push
je
or
pop
(bad)
aad
adc
cmp
sbb
mov
fwait
arpl
inc
push
and
outs
inc
cdq
imul
stos
mov
push
iret
imul
fsubr
mov
addr16
shl
or
push
mov
inc
sub
icebp
or
fnstcw
xlat
push
out
in
cmp
push
mov
cli
adc
mov
push
mov
cdq
sbb
(bad)
out
mov
ins
lods
fbstp
retf
dec
movlps
push
pop
loopne
data16
pop
push
pop
ret
jno
push
loop
rcl
call
mov
jle
sahf
fdiv
mov
xlat
fimul
cmp
and
dec
(bad)
(bad)
icebp
push
fld
imul
sbb
aas
(bad)
pop
scas
jl
call
push
jae
xor
cmc
mov
adc
aas
and
dec
out
and
adc
dec
les
inc
repz
repnz
in
cmp
fsqrt
outs
mov
mov
mov
xchg
mov
adc
les
movs
jbe
add
jbe
icebp
sub
in
adc
inc
add
sub
sbb
repnz
and
xor
mov
aas
outs
push
xor
sbb
fiadd
outs
or
ret
aad
lahf
sbb
test
inc
ins
push
adc
and
add
js
push
adc
cli
inc
je
jne
add
inc
aam
push
xor
aam
leave
or
scas
fcom
in
jge
cmp
adc
int
scas
data16
or
div
cmps
adc
add
inc
mov
xchg
cld
scas
pop
jecxz
add
mov
pminub
jmp
mov
test
and
popa
jmp
popf
popa
mov
adc
dec
mov
inc
fdiv
mov
imul
mov
imul
scas
icebp
pusha
rol
mov
jb
mov
xor
retf
sbb
sbb
xchg
inc
cmps
lods
(bad)
sbb
ins
push
dec
clc
movs
mov
nop
daa
pop
fisttp
neg
add
inc
and
cmp
jecxz
jmp
ins
jg
daa
push
repz
and
pop
out
jle
icebp
mov
cwde
lahf
retf
fist
jmp
cvtps2pd
add
repz
(bad)
inc
dec
mov
cmps
dec
jmp
pop
cmp
sub
xchg
fdiv
pop
push
push
(bad)
daa
cmps
sub
push
xchg
mov
dec
xor
sub
cmp
or
sbb
nop
mov
xchg
add
cmp
sbb
mov
dec
xchg
(bad)
shl
mov
jle
mov
sbb
popa
inc
mov
stos
adc
mov
mov
and
cmp
int
mov
ja
dec
aad
dec
int
jb
add
jns
xor
xor
or
cmp
push
(bad)
jb
test
mov
or
add
je
scas
test
push
xor
add
fwait
les
xor
xchg
push
mov
enter
hlt
retf
sbb
inc
cmp
mov
cmp
jno
fidiv
xchg
in
hlt
sub
add
pop
fs
mov
es
cmc
rol
add
cmp
inc
(bad)
cmp
sub
pop
dec
lahf
xchg
mov
inc
xchg
add
xchg
loope
inc
out
mov
jbe
pop
jl
repnz
sub
mov
imul
push
aas
sbb
cmp
pusha
popf
push
xchg
and
jo
sub
popf
dec
mov
ins
int
sub
std
sub
push
int
mov
mov
inc
dec
jge
sub
mov
and
hlt
and
and
iret
sub
dec
pop
test
jp
in
retf
fdiv
scas
out
nop
das
mov
movs
jne
nop
and
sbb
pop
test
mov
popf
cmp
bound
je
ror
ret
xchg
aam
fnstcw
mov
inc
clc
mov
ret
xchg
or
push
scas
and
lea
xor
mov
mov
das
sbb
xchg
leave
aas
sub
xchg
ins
push
mov
(bad)
jecxz
dec
cmc
mov
and
mov
out
pop
shl
scas
push
jecxz
inc
mov
dec
jg
cmp
(bad)
stos
orps
int3
lea
pop
clc
mov
sbb
mov
and
imul
es
cmps
pop
add
das
and
xchg
ja
out
jno
out
fcomip
rcl
scas
test
fadd
and
adc
and
jb
call
lock
mov
fsub
pop
ins
(bad)
pop
adc
fldcw
int
cmp
stos
xchg
sbb
jo
dec
inc
push
sbb
mov
call
adc
rcr
imul
xchg
test
sub
or
cwde
or
stos
aas
imul
mov
cmp
dec
sahf
lds
iret
sub
jmp
cmp
and
call
mov
aaa
outs
inc
add
cmps
and
cdq
xchg
fwait
or
mov
(bad)
test
aam
xor
fstp
std
movs
test
and
cmp
dec
lods
jo
nop
ja
pushf
inc
cli
test
or
push
dec
or
pop
aaa
sbb
int3
jle
lea
dec
sub
fwait
add
outs
xor
fbstp
fidiv
enter
or
mov
or
sub
out
movs
cmp
shr
cmps
ret
xor
jno
sbb
test
and
fnstsw
cmps
add
and
push
or
adc
sbb
in
es
sub
or
daa
jle
mov
mov
sbb
pop
jg
daa
cmps
xor
mov
stos
outs
out
call
ss
mov
in
iret
xchg
fxch
ret
push
pop
cmp
test
lods
dec
or
mov
inc
mov
in
cdq
in
xchg
dec
mov
add
imul
pop
je
mov
daa
pop
icebp
movs
mov
sub
xchg
inc
test
fild
fisub
fstp
(bad)
cld
call
lock
inc
add
jp
jbe
jnp
ror
inc
dec
addr16
xchg
psadbw
pushf
mov
add
sbb
(bad)
adc
mov
retf
dec
ror
aad
mov
bound
daa
sbb
push
jp
pop
xor
icebp
fiadd
int3
sub
lock
out
out
jb
add
lahf
out
test
pop
inc
jge
pushf
cmps
inc
pop
add
out
fidivr
dec
retf
jmp
and
xor
mov
call
inc
or
sub
fistp
adc
or
stc
xchg
nop
inc
outs
cmp
fild
sbb
enter
jnp
xor
jmp
call
test
in
xor
imul
ror
jno
add
leave
pop
dec
sti
retf
pushf
xor
mov
adc
sub
inc
mov
xor
mov
test
jnp
cdq
mov
mov
mov
pushf
mov
addr16
jb
loope
in
movs
and
adc
jge
mov
out
loope
ret
cdq
stc
jmp
ficomp
ins
lock
push
mov
mov
sbb
(bad)
sti
jecxz
cli
mov
retf
inc
push
leave
mov
repz
mov
sbb
cli
xor
adc
scas
cdq
stos
inc
jnp
jnp
imul
mov
mov
in
push
adc
fbstp
sub
pop
pop
lods
xchg
xchg
adc
jne
pop
jmp
or
sar
jle
push
aas
mov
pop
dec
cld
fadd
test
fcmove
aam
cs
jno
cs
jle
sub
loope
mov
bound
add
movs
fisub
push
out
pop
ss
or
dec
(bad)
jp
xchg
pop
cmp
fcomp
(bad)
fld
cwde
ret
rcl
add
arpl
leavew
mov
pop
(bad)
mov
cmps
jp
dec
retf
dec
xchg
mov
rcr
pop
mov
adc
inc
inc
mov
lock
adc
cmp
jp
fprem1
aad
or
js
xchg
mov
pop
loope
cmp
xchg
int
(bad)
jmp
sbb
pop
test
add
sbb
push
scas
pop
lods
xchg
fs
in
jne
cli
call
xor
ror
das
xor
push
pop
int
mov
push
jns
pop
mov
pop
jmp
mov
out
outs
pop
ret
xlat
inc
and
pop
xor
mov
cdq
sub
cmovle
cmp
imul
mov
pushf
adc
mov
pop
xchg
xor
push
aas
leave
sub
and
sbb
mov
lea
lods
int3
(bad)
xchg
adc
xor
sub
imul
jb
jmp
pop
cmp
push
ret
xor
test
frstor
mov
sbb
jnp
or
sbb
shr
or
cmp
xchg
loopne
mov
lea
add
xor
push
add
call
js
push
sti
addr16
mov
inc
shl
js
adc
xor
jg
fidiv
sub
and
mov
cmps
jmp
xchg
push
and
push
inc
sub
cmc
cmp
mov
iret
dec
(bad)
mul
cmp
jns
add
jmp
pop
popa
ret
mov
fstp
aas
pop
aad
dec
es
lods
xor
jnp
pushf
dec
cmp
(bad)
xchg
shl
mov
iret
jmp
leave
imul
mov
inc
or
mov
mov
lods
adc
push
fstp
pop
in
enter
outs
mov
mov
jle
cmc
push
les
out
mov
mov
add
inc
add
jl
(bad)
addr16
pop
mov
retf
(bad)
in
xchg
(bad)
sti
lods
outs
xchg
ins
xor
in
call
and
iret
xor
inc
jns
dec
push
ins
mov
call
fadd
fwait
cmps
(bad)
inc
stos
dec
xchg
xchg
imul
outs
dec
fld
mov
stc
jno
call
sbb
mov
les
les
mov
sar
sbb
mov
out
leave
stos
(bad)
daa
and
in
sbb
daa
cmp
mov
movs
test
mov
pop
fiadd
sahf
scas
mov
xchg
mov
pop
cmp
mov
daa
addr16
add
add
test
xor
loop
sbb
or
cmps
aaa
call
pushf
push
xor
xchg
push
cmp
ss
cmp
or
inc
retf
mov
shl
dec
xor
ret
(bad)
inc
jo
sub
icebp
in
into
pop
mul
es
fdivr
ror
movs
pop
mov
lds
(bad)
mov
js
inc
(bad)
cmp
mov
xchg
pop
mov
sub
mov
aam
scas
mov
cmps
icebp
mov
mov
cmp
xchg
xor
ret
xor
inc
shl
cs
mov
repz
push
or
jnp
cmps
pop
xchg
sbb
and
into
loopne
call
mov
js
bound
inc
mov
ret
xor
mov
pop
scas
lahf
jb
scas
jns
mov
sub
sub
pop
iret
loop
sti
xor
and
xchg
xchg
das
or
lock
or
outs
leave
daa
and
lds
pop
dec
test
fisttp
cmp
ror
pop
sbb
movs
popf
push
adc
ret
xchg
retf
sbb
mov
push
xchg
xor
fs
pop
cmp
outs
cli
add
lahf
(bad)
in
inc
in
push
mov
mov
arpl
lock
jne
mov
xor
popa
lods
sub
faddp
mov
(bad)
hlt
sbb
int3
cwde
test
ror
sub
cmps
or
cdq
test
dec
sbb
jg
inc
imul
pop
jecxz
int3
iret
stc
pop
inc
test
push
in
and
push
fsubr
stc
movs
add
add
sar
xchg
adc
mov
mul
in
arpl
mov
scas
add
mov
ret
and
push
test
push
add
cmc
push
les
and
adc
movs
and
cmps
movs
std
out
cmp
xlat
mov
fst
mov
xchg
push
ins
test
jecxz
mov
imul
and
mov
shl
movs
lds
lock
cld
pushf
hlt
ret
inc
das
and
mov
daa
clc
popf
or
in
fwait
dec
push
push
or
adc
or
out
mov
pop
cli
jne
push
xchg
dec
jmp
test
leave
fnsave
fsub
adc
aad
or
push
sub
xchg
std
pop
adc
push
jno
dec
jmp
fs
push
push
mov
sbb
and
inc
popf
and
test
inc
pop
sub
(bad)
xchg
sbb
(bad)
adc
or
and
xor
xlat
pop
sub
hlt
jae
mov
sub
adc
pop
lds
aad
ret
imul
inc
adc
mov
scas
aam
movs
lods
xchg
cmp
add
in
inc
pop
addr16
xchg
push
out
cwde
pop
mov
stos
fsub
pusha
xor
pop
xor
pop
sub
lahf
cdq
mov
sbb
into
int3
sahf
or
adc
pop
jns
add
cmp
jle
div
xchg
pop
push
mov
pop
fmul
in
cli
cmp
hlt
std
and
shl
mul
loop
mov
add
mov
xchg
lods
imul
add
inc
adc
sub
ret
pop
jnp
xor
adc
xchg
aam
cmp
mov
ins
mov
and
bound
data16
imul
retf
push
(bad)
sbb
add
sahf
cmp
or
mov
out
retf
enter
xchg
dec
out
cmp
and
mov
stos
in
sub
retf
mov
pop
and
sahf
cmp
xor
pop
les
sahf
jae
inc
cmp
loop
pusha
dec
inc
leave
mov
(bad)
fst
int
sub
ja
or
push
or
adc
mov
daa
cmp
(bad)
fcom
inc
mov
movs
in
popf
sbb
xchg
loopne
int
scas
loop
movs
aam
sub
inc
pop
xchg
lock
ins
mov
push
adc
aaa
imul
ins
addr16
push
cmp
scas
push
xchg
(bad)
aam
jmp
dec
jb
and
sti
adc
jmp
or
add
shl
sbb
jns
inc
cmps
rcr
shl
pop
lods
pop
push
pop
mov
and
test
hlt
gs
mov
sbb
jnp
or
push
aas
xchg
aas
cmc
xchg
call
lock
and
push
das
vcmppd
mov
rcr
sti
xor
mov
and
and
sub
aas
push
movs
movs
or
mov
cmc
fst
xchg
or
xor
inc
mov
stos
lods
add
add
shl
pushf
xchg
mov
ins
cmps
sbb
and
fcmovnb
lock
and
retf
or
push
or
push
pop
sti
fldcw
mov
jge
dec
ss
push
ss
push
pop
pop
pop
xor
sbb
push
cmps
mov
or
ins
push
inc
fs
sub
das
pusha
and
adc
mov
mov
(bad)
pandn
pop
pop
mov
pop
inc
mov
push
imul
popf
addr16
fistp
arpl
lds
(bad)
xchg
push
push
aam
dec
fs
fidiv
icebp
pop
ror
and
push
(bad)
rcl
push
loop
cdq
or
mov
push
inc
loope
movs
inc
idiv
xor
xchg
sub
add
dec
outs
and
or
(bad)
sub
arpl
and
call
or
pusha
push
aas
pop
cmc
fcom
dec
lock
iret
add
dec
cmp
mov
rcl
add
adc
jmp
pop
pop
xor
pop
add
inc
pop
add
dec
jmp
popf
repz
sub
jb
mov
jg
fwait
xchg
xchg
cs
and
sti
cld
aad
(bad)
loopne
or
cdq
adc
inc
jecxz
add
or
repz
popf
adc
add
repz
xchg
cmps
inc
movs
in
cmp
or
test
dec
fisub
loop
iret
out
push
(bad)
nop
xchg
mov
jmp
cmp
mov
sub
xchg
fnsetpm(287
and
jo
jns
mov
imul
jnp
xchg
mov
loop
jno
cmp
(bad)
cmps
icebp
inc
jge
push
dec
xor
pop
xor
cmc
push
dec
scas
(bad)
loope
jl
imul
out
pop
cwde
leave
pusha
mov
push
seta
aad
lods
shl
dec
or
mov
jbe
adc
scas
and
shl
add
jo
dec
pop
mov
daa
and
pop
mov
aam
adc
add
pop
(bad)
iret
fcomp
int
adc
inc
add
xor
adc
mov
xor
clc
add
inc
pop
fwait
retf
or
push
scas
cmc
lock
test
adc
xor
mov
mov
stc
pusha
fldenv
(bad)
push
imul
push
add
mov
cmp
or
mov
xchg
sar
adc
xchg
xchg
std
scas
sbb
mov
lahf
xchg
jno
loopne
sub
in
mov
fld
loope
inc
add
xchg
imul
mov
dec
ss
cmps
sub
adc
fist
pusha
scas
retf
jnp
gs
mov
outs
sbb
ds
inc
and
div
xor
lea
mov
push
add
(bad)
xchg
pop
add
loopne
idiv
jecxz
aas
inc
dec
cdq
adc
jns
out
sub
lea
xor
ror
pop
sub
ror
call
stos
call
mov
inc
leave
lds
sub
stos
cmps
std
ficom
mov
and
repz
std
xor
inc
popf
xchg
sbb
cmc
or
mov
add
cmp
push
add
outs
adc
std
lods
mov
mov
cmp
shr
stc
mov
into
arpl
dec
jge
mov
mov
sbb
sahf
xor
daa
cmp
adc
xor
les
push
sbb
rcl
jbe
and
or
sub
call
or
xor
in
mov
inc
loope
nop
test
jl
das
sbb
mov
push
xchg
call
in
cmp
pop
sbb
fcomip
add
dec
push
mov
push
add
or
jno
inc
leave
es
mov
mov
xchg
or
mov
adc
bound
movs
xchg
adc
adc
xchg
mov
jecxz
mov
xchg
sub
pop
sbb
in
sbb
(bad)
ds
scas
ss
fdiv
rol
popf
or
aam
xchg
es
push
ret
shr
movs
movs
pop
jb
fdivr
in
dec
mov
shl
repnz
jp
shl
shl
stos
(bad)
es
(bad)
mov
outs
cmps
clc
add
int3
sbb
in
mov
imul
mov
leave
imul
test
mov
jno
loop
in
cmc
pushf
cmp
mov
sbb
xchg
mov
imul
and
bts
shl
les
xchg
cdq
sbb
cmp
in
fwait
into
mov
lds
push
and
jp
mov
adc
fdivrp
xor
mov
enter
jle
imul
xor
dec
aam
cli
dec
jp
ds
push
ret
jge
push
dec
in
jge
pop
into
xor
data16
mov
mov
popf
cmp
pop
pop
out
movs
and
xchg
stos
adc
pop
xor
aam
push
cwde
add
mov
pop
inc
adc
jmp
jp
popf
push
std
inc
dec
pop
or
or
inc
lods
xchg
dec
aam
inc
test
pop
sar
shr
int
add
jge
xchg
aam
enter
add
add
(bad)
cmps
sbb
adc
push
shl
lahf
das
mov
js
xchg
scas
lahf
jbe
scas
jno
push
or
sub
imul
jge
sbb
and
outs
sbb
stos
ins
mov
lods
or
or
mov
jne
mov
dec
mov
add
or
iret
and
leave
test
bound
pop
(bad)
and
mov
cmp
xor
in
ins
in
test
call
push
push
xchg
iret
in
jbe
stos
leave
icebp
popf
mov
sahf
or
dec
sbb
fstp
cmps
in
dec
or
jo
nop
mov
add
scas
ss
xchg
test
mov
arpl
xor
push
add
and
jb
sbb
ss
leave
cwde
sbb
adc
and
rcr
jmp
ins
ds
imul
xchg
push
movs
jnp
cld
mov
push
xchg
cmp
icebp
pop
jecxz
and
fisttp
int
movs
cmp
dec
and
mov
cli
into
fsub
add
fmulp
arpl
add
sbb
aad
or
push
inc
into
sahf
jge
(bad)
cmp
jns
mov
repz
sub
sbb
test
imul
inc
add
or
pop
fidiv
scas
imul
inc
popa
dec
cmp
xor
push
aad
inc
retf
in
popf
shl
adc
push
xchg
(bad)
test
lea
hlt
mov
loop
pop
xchg
jmp
imul
mov
pop
jecxz
ficom
pop
(bad)
mov
jb
cmp
aad
push
or
sti
pop
mov
inc
inc
push
adc
jp
std
outs
mov
std
push
mov
mov
inc
inc
sar
mov
mov
inc
push
les
btr
or
or
mov
push
repz
push
mov
mov
sti
mov
pop
aad
xchg
fstp
movs
iret
cld
mov
and
sar
pop
aam
dec
adc
xor
sbb
mov
add
int
in
jb
sub
int3
sub
add
adc
jae
repnz
sub
jmp
sbb
xchg
dec
mov
push
not
adc
pop
(bad)
or
add
cmp
repz
fisubr
pop
(bad)
pusha
cmps
ja
cli
inc
mov
jg
aas
fbstp
xor
cmp
ret
cli
xchg
in
and
outs
add
sbb
push
movs
dec
cwde
or
sub
sbb
mov
(bad)
cs
xchg
inc
xor
retf
call
mov
enter
or
adc
jb
jo
aam
and
fadd
pop
movs
shl
retf
inc
lahf
test
(bad)
jmp
jge
cli
xlat
cli
xchg
xacquire
inc
in
(bad)
jp
mov
fcmovu
jl
cmp
dec
cwde
imul
cmp
vcmpps
aam
or
(bad)
push
jb
ret
loop
loopne
shl
rcr
cmp
je
addr16
jge
cmp
fidivr
fidivr
lds
xchg
adc
dec
lds
jno
mov
xor
jnp
repnz
mov
pop
mov
mov
shl
pop
ret
pop
adc
dec
mov
fsub
mov
addr16
es
retf
in
sub
repnz
pop
iret
enter
pop
lds
push
cmp
retf
sub
ds
(bad)
es
add
rcl
fmul
push
dec
ja
cmp
test
out
cdq
sbb
lods
jns
and
test
push
adc
mov
jns
jge
mov
pop
aas
rcr
xor
dec
mov
popf
push
cwde
scas
pop
and
inc
std
stos
js
call
ror
jp
dec
xor
nop
pop
cld
mov
sahf
out
btc
fld
mov
lea
aas
mov
aaa
adc
mov
(bad)
dec
out
pop
add
sbb
jecxz
shl
ss
cdq
(bad)
jl
add
jp
add
mov
pop
bnd
(bad)
call
ret
cdq
sti
push
jmp
popa
adc
pushf
pop
jmp
ret
mov
inc
(bad)
ins
leave
retf
and
(bad)
enter
stos
mov
xchg
lahf
stos
or
xor
sbb
sub
outs
in
push
loope
jecxz
mov
aas
mov
fsubr
sbb
xor
stos
mov
sbb
pop
inc
pop
ins
pop
sbb
mov
pop
push
lods
jg
neg
pop
lods
(bad)
sbb
mov
xchg
test
sub
sbb
std
aas
inc
sbb
cli
je
xor
or
push
popa
and
cmp
psubq
dec
add
inc
fistp
sub
sub
icebp
jb
mov
jne
cmp
inc
shl
mov
inc
ins
out
dec
pop
sbb
cmp
neg
jmp
mov
icebp
jno
mov
xor
(bad)
bound
outs
add
fidivr
push
in
jmp
enter
dec
out
aas
add
jne
aad
loope
ret
lock
push
mov
mov
into
or
sbb
bound
test
jmp
pushf
gs
in
dec
xchg
mov
inc
sbb
out
inc
jmp
lahf
sar
sub
pop
inc
frndint
mov
enter
(bad)
sahf
scas
cld
xor
mov
sub
sti
in
and
or
xchg
loop
mov
jnp
cli
mov
cmp
stos
sar
call
mov
mov
aam
jnp
or
not
test
mov
adc
call
or
push
mov
add
fcmovnbe
test
mov
nop
(bad)
fs
add
leave
pop
scas
enter
pcmpeqb
call
ja
icebp
mov
push
mov
dec
sub
dec
(bad)
repnz
(bad)
push
inc
or
push
sbb
cmp
mov
add
cmp
jb
(bad)
sbb
inc
pop
stos
adc
add
movs
test
test
je
mov
ins
sahf
cli
stc
imul
lods
adc
ja
mov
int
cmps
xor
dec
neg
call
rol
adc
fdivr
(bad)
sbb
adc
push
call
cmp
inc
cdq
in
sti
or
mov
hlt
cmp
stos
sub
mov
stos
adc
push
call
ror
mov
and
xchg
push
(bad)
shl
sbb
mov
mov
adc
lahf
and
fisub
xor
mov
add
and
lds
pop
add
cmp
and
sbb
mov
sbb
jne
sar
rcr
outs
lea
imul
jns
cmp
cmp
icebp
jg
cmp
inc
mov
and
mov
punpckhdq
add
or
dec
jns
retf
sbb
sbb
inc
dec
in
std
push
and
jno
mov
neg
ds
cli
and
adc
jno
or
test
clc
pop
mov
int3
sti
jo
jnp
mov
aam
sahf
pop
mov
repnz
int3
jmp
or
add
jbe
or
mov
mov
jmp
fiadd
retf
add
lods
popf
es
cmc
sysret
je
and
dec
xchg
cmp
inc
sbb
sbb
xchg
leave
push
ror
jmp
dec
cmp
jo
out
cli
or
pop
jl
inc
cmp
lods
daa
cmp
(bad)
ja
nop
xlat
popf
(bad)
neg
mov
and
inc
sub
mov
fnstenv
push
std
scas
iret
push
add
mov
add
pushf
mov
lods
jb
fsub
dec
jmp
xchg
mov
and
mov
scas
mov
mov
push
sbb
pop
fsubr
sbb
add
push
cmp
adc
mov
pop
xchg
mov
out
popa
cmp
f2xm1
xor
mov
pop
fidivr
scas
dec
sbb
sub
push
jb
mov
pusha
clc
add
sbb
and
push
imul
mov
inc
ja
mov
out
out
xchg
sub
add
fsubr
stos
pop
sbb
aaa
pop
push
fld
call
lods
jb
push
push
jp
cmp
cmps
push
mov
xor
xchg
mov
adc
cmp
mov
inc
mov
call
dec
xor
pop
fwait
out
cmp
adc
test
adc
sub
out
jbe
sahf
cli
inc
adc
nop
addr16
mov
cmp
add
retf
adc
inc
aam
stc
dec
aaa
aad
mov
cmp
inc
sub
and
add
out
or
adc
xchg
gs
fistp
xlat
sar
mov
xchg
cmc
out
stos
arpl
test
in
mov
jl
cmps
xchg
stos
jns
push
mov
or
xlat
hlt
mov
push
js
lock
mov
fiadd
cmps
sub
aas
adc
mov
adc
retf
dec
pop
aas
les
test
inc
push
lods
bound
sbb
mov
gs
push
jo
dec
(bad)
cmp
aas
rcr
stos
xchg
cmp
cmp
adc
push
ret
add
in
cwde
dec
cwde
fistp
xchg
sbb
add
sub
xchg
sub
(bad)
sbb
add
mov
mov
test
ins
test
adc
pop
repnz
sar
jg
xor
mov
pop
fs
dec
cmp
push
pusha
and
fimul
cmps
jb
jns
int3
or
dec
sub
shr
dec
cli
mov
imul
add
push
add
pushf
enter
or
jl
mov
push
push
cmp
stc
adc
ins
(bad)
push
hlt
sbb
mov
les
dec
lahf
shr
aam
lock
mov
pop
and
jo
out
cdq
mov
jae
int
es
enter
loop
sbb
jp
add
mov
or
push
inc
and
add
pop
jl
jnp
ins
gs
retf
push
lock
pop
std
loop
jg
pushaw
clc
jns
and
(bad)
cmp
push
sbb
push
xchg
lock
push
call
sbb
pop
xor
jle
pop
std
fcomp
in
cdq
inc
pop
leave
test
fadd
sbb
inc
call
sbb
les
cmps
into
adc
fwait
or
rcl
pop
sbb
push
push
test
adc
dec
ror
addr16
stos
mov
test
gs
or
add
ror
mov
and
call
or
mov
addr16
lea
dec
pop
mov
movs
xchg
sahf
mov
imul
ret
rcr
icebp
add
adc
and
popf
aaa
dec
jbe
mov
push
ror
jmp
jne
(bad)
jl
xor
adc
inc
leave
inc
js
xchg
idiv
dec
sar
sahf
mov
cmc
cmc
xor
aaa
clc
pop
ja
int3
shr
add
add
in
xor
cmp
stc
lock
or
add
jno
stos
xchg
in
fwait
sub
call
icebp
sbb
dec
mov
outs
inc
sub
test
mov
ins
push
repz
inc
fldenv
repnz
xchg
lds
lahf
test
nop
stos
jbe
jmp
and
push
test
shl
out
in
cwde
ja
out
pop
cmc
(bad)
mov
out
pushf
int
cmp
adc
out
mov
nop
sar
pop
xchg
idiv
in
test
cmp
call
out
repnz
xor
xchg
test
or
fisttp
sbb
call
ins
mov
stos
pusha
(bad)
leave
mov
xchg
adc
mov
sbb
xor
movs
arpl
and
mov
in
xor
pop
stos
cli
push
adc
sub
or
ret
mov
mov
arpl
xchg
cmp
(bad)
ds
xchg
les
test
out
call
arpl
push
enter
addr16
dec
inc
pop
hlt
aaa
ss
pop
pop
dec
rol
adc
push
dec
sub
push
sar
in
addr16
jnp
fwait
sub
jmp
push
ss
aad
xchg
popf
mov
add
xchg
jl
pop
nop
xchg
aad
jnp
or
xor
fcmovnbe
cs
stc
imul
push
mov
mov
ficom
outs
loop
stos
(bad)
loopne
sbb
sub
pop
aas
xchg
call
clc
jae
xchg
or
stc
retf
stos
adc
mov
jmp
push
jle
cld
iret
pusha
xor
jecxz
outs
and
mov
jns
fucomi
scas
aad
fiadd
jae
adc
or
in
sub
fmul
test
loope
xchg
lahf
and
int
imul
retf
sbb
cs
sbb
pop
int3
xchg
lods
push
lock
test
inc
hlt
adc
xchg
xor
inc
jno
adc
sub
fisub
adc
push
jne
pop
outs
(bad)
jmp
lods
xor
or
lahf
bound
not
frstor
mov
mov
jb
and
mov
cli
test
pop
pop
mov
jnp
in
clc
mov
fisubr
(bad)
mov
call
push
pop
sub
sbb
adc
push
jno
push
jmp
and
out
dec
add
or
jo
outs
mov
push
pop
into
stc
in
cli
repz
sub
into
jbe
sar
pop
test
sub
test
cdq
mov
mov
ss
cmps
pop
enter
jl
push
inc
jmp
ret
cmp
cld
sar
push
test
push
adc
mov
mov
jg
cmc
je
rol
ja
jno
jns
arpl
push
xchg
add
mov
mov
xor
dec
repnz
pop
pop
mov
xchg
mov
cld
out
lock
xor
popf
cmp
stc
cmp
mov
adc
mov
sahf
(bad)
jecxz
push
inc
sahf
imul
std
aaa
cmp
jp
push
movs
in
and
push
xor
jle
pop
enter
push
(bad)
movs
mov
les
enter
call
jno
pop
cld
cmps
hlt
xor
ss
sar
out
test
mov
inc
xchg
fstp
loop
lock
or
and
inc
mov
scas
mov
cdq
movs
sbb
out
cmc
pop
ss
mov
js
(bad)
push
add
popf
jbe
fcom
(bad)
adc
hlt
push
dec
push
bound
adc
add
xchg
jno
repnz
jmp
aad
sbb
outs
jl
jge
sti
inc
sbb
call
gs
dec
ds
fst
cmps
push
mov
jl
sahf
inc
adc
dec
shl
dec
and
sub
and
lods
outs
aad
bound
mov
stc
(bad)
enter
hlt
iret
pop
mov
or
add
lea
cld
sbb
and
iret
es
cmp
pop
sub
pusha
popf
ret
and
lods
inc
sbb
xor
xor
out
je
mov
mov
sbb
leave
cmps
or
xor
ret
cmp
fisub
xchg
(bad)
adc
add
cmp
xchg
xchg
cmp
lods
mov
adc
iret
and
add
fs
cmp
fidivr
or
push
pop
inc
jge
or
push
xlat
sbb
cmp
sub
mov
enterw
outs
inc
xchg
jno
mov
call
imul
mov
add
in
mov
push
test
add
pop
sbb
inc
add
repz
jmp
or
(bad)
xchg
mov
mov
push
movs
xor
(bad)
cld
pop
sbb
ds
jge
jg
pop
js
ja
add
sub
push
mov
outs
imul
adc
add
xchg
dec
lds
mov
and
nop
push
pop
mov
add
sub
popf
std
xor
fcom
jmp
dec
imul
xor
add
lahf
adc
test
xor
fnop
pop
sub
xor
ficom
scas
mov
xchg
loop
mov
aam
in
lods
in
dec
add
imul
pushf
dec
repz
out
adc
lods
or
clc
js
test
addr16
gs
pop
(bad)
in
dec
sar
push
sar
ja
pop
dec
or
jbe
pop
cmp
add
add
lahf
call
inc
scas
dec
push
or
xchg
inc
mov
mov
push
repnz
push
cli
or
ror
mov
push
retf
mov
and
sbb
push
sbb
mov
ret
rcr
mov
mov
ret
cmp
xchg
retfw
sub
xchg
jbe
out
inc
les
sbb
pop
and
in
or
and
lods
aaa
repnz
inc
fisttp
scas
ss
and
jp
dec
addr16
mov
sbb
jge
push
inc
ss
pop
clc
jmp
dec
in
push
xor
dec
cmp
inc
test
sbb
inc
in
xchg
aam
mov
fwait
add
sub
gs
cmps
push
push
add
sub
jmp
push
jmp
xor
test
imul
imul
pop
fsubr
add
push
clc
mov
jmp
test
inc
pop
jbe
shr
sub
into
pop
cld
scas
mov
pop
leave
cmp
shl
imul
mov
sbb
cmp
iret
pop
pushf
push
repnz
stos
push
sub
pop
aas
xchg
sti
dec
push
clc
add
xor
in
cli
test
dec
ja
push
mov
xchg
test
jo
pusha
inc
cmc
inc
mov
jle
ret
aaa
xchg
fdivr
or
xor
mov
fmul
gs
pop
scas
pop
mov
mov
mov
mul
in
or
out
dec
js
paddw
or
clc
ficomp
dec
popa
mov
fdivrp
jmp
pop
jp
mov
aad
sub
lods
jne
mov
pop
jno
fstp
rcr
mov
addr16
lds
out
fs
sub
(bad)
loop
sbb
shr
in
daa
xchg
mov
out
sub
jmp
xchg
mov
lea
scas
dec
mul
int3
jl
stc
iret
(bad)
mov
data16
cmp
push
cmp
es
mov
imul
jmp
push
and
xor
mov
in
sbb
xor
(bad)
retf
dec
adc
test
dec
and
cmp
or
sti
pop
pop
add
shl
add
fsubr
adc
sahf
iret
or
and
pushf
mov
mov
pop
cs
sbb
pop
test
ror
stos
xor
lea
out
out
daa
xor
dec
adc
cmps
cmc
mov
lods
cmp
cmp
ret
lods
mov
cli
movs
inc
push
btc
cvttps2pi
mov
inc
mov
xchg
outs
inc
xchg
add
push
les
(bad)
or
mov
xor
je
mov
mov
out
dec
mov
pop
lods
aad
call
aaa
jb
cmp
hlt
ret
mov
inc
repz
(bad)
in
fwait
jg
ss
and
sar
loope
popa
add
iret
pop
cmp
cmps
mov
cmp
pop
push
test
stos
cmp
addr16
rcl
xor
and
ins
xchg
out
jbe
loop
xor
ret
ja
pop
hlt
(bad)
xchg
in
stc
retf
sbb
xlat
ins
xchg
push
sub
xlat
inc
sbb
xchg
sbb
dec
push
outs
call
ret
inc
or
daa
iret
sub
add
jmp
idiv
movs
es
in
or
rcl
out
lea
sbb
gs
loope
add
push
imul
in
mov
shr
cli
jmp
mov
int
icebp
jg
dec
xor
xchg
xor
jp
aas
and
sub
sub
pop
pop
adc
sti
xor
push
sub
push
and
cmp
leave
out
sub
call
daa
in
add
cmps
jecxz
jne
adc
pop
xor
inc
je
cli
mov
fistp
rol
mov
or
sub
add
std
test
jmp
dec
xlat
enter
ds
push
push
jle
jl
pushf
cmp
xchg
xchg
mov
push
shl
ret
push
out
data16
cmp
mov
outs
dec
mov
enter
adc
cld
jns
sub
cli
aad
add
mov
fsubrp
xlat
icebp
dec
cmp
inc
adc
xchg
cli
test
lods
sub
rol
dec
push
shl
fiadd
push
retf
fs
cmp
mov
and
fimul
jg
mov
vpunpckhqdq
movs
sub
jb
shl
out
imul
ins
xchg
pop
pusha
mov
dec
sbb
outs
adc
not
push
mov
sub
aaa
jnp
pop
in
rcl
(bad)
dec
xchg
je
add
scas
in
sub
test
(bad)
ror
push
sub
lods
test
aad
mov
xchg
xlat
call
push
jge
aad
push
or
cmp
push
xchg
cmp
ja
cdq
sti
(bad)
nop
pop
xor
nop
(bad)
sbb
fisttp
sub
test
repz
push
call
xor
pop
ds
inc
or
lahf
data16
scas
cmc
mov
sar
mov
test
lods
in
dec
pop
sar
sbb
adc
push
(bad)
pop
and
inc
mov
pop
iret
pop
sti
ret
dec
cmp
jge
dec
dec
outs
mov
in
pop
and
mov
pusha
aas
out
stos
mov
or
push
imul
adc
out
or
dec
cmps
gs
fist
jo
addr16
jmp
(bad)
sti
jo
sub
outs
adc
ins
pop
outs
loope
xchg
rol
push
ds
dec
jecxz
nop
rcl
test
xor
test
fwait
lock
movs
cmp
mov
stc
cmps
dec
cmps
out
fst
clc
scas
adc
sbb
cmp
daa
pandn
and
and
pop
and
xchg
mov
sbb
jne
cli
push
iret
xor
iret
sbb
fwait
cmp
shl
arpl
aas
aas
test
hlt
cmps
jno
popa
cs
loope
adc
cmps
add
add
mov
push
ret
xor
nop
or
push
(bad)
pop
or
cmps
cmp
data16
pop
pushf
sar
xor
and
pop
stc
das
call
out
mov
mov
mov
inc
inc
cs
(bad)
xchg
mov
bound
(bad)
mov
sbb
pop
lahf
jne
jbe
fld
jl
(bad)
jmp
lock
push
push
in
loop
repnz
jge
inc
sbb
repz
mov
add
ins
imul
cmps
sbb
jbe
inc
xchg
xor
and
repnz
lea
xor
push
xlat
sub
sub
cmps
and
xchg
mov
aaa
fisttp
jo
aaa
cld
rol
push
addr16
lock
movs
or
adc
mov
pop
call
inc
dec
rcl
xor
fld
aaa
ss
rcr
repz
and
mov
add
dec
lea
cli
popa
pop
test
(bad)
adc
sbb
mov
add
gs
loop
and
mov
add
jmp
jecxz
sub
rep
clc
je
jge
push
scas
dec
cmp
and
sub
inc
int
iret
pop
ret
jp
xor
test
jne
ss
in
sub
leave
lods
in
stos
adc
sub
out
shl
cmc
out
aas
popa
int
jae
cs
mov
popf
add
cmp
dec
dec
xor
cli
mov
cld
sbb
xor
mov
cmps
xchg
jb
retf
das
dec
imul
fldlg2
push
aam
outs
push
jne
scas
sbb
ret
dec
add
push
out
adc
add
and
retf
ss
sbb
mov
sbb
or
jge
movs
in
sub
(bad)
jle
sbb
xchg
das
fs
jmp
(bad)
mov
mov
clc
dec
sar
xchg
pushf
jo
adc
je
or
sbb
out
xor
mov
into
dec
lods
in
jecxz
cmp
mov
popf
imul
retf
pop
cwde
mov
xor
jne
int3
and
cwde
test
push
dec
repnz
lock
cmp
mov
imul
inc
rep
int
outs
dec
jae
(bad)
mov
outs
push
mov
(bad)
(bad)
data16
(bad)
cmps
test
out
cmp
dec
push
gs
dec
xchg
out
or
ret
dec
mov
pop
and
loope
aaa
mov
aad
je
int
mov
adc
xchg
lods
cmp
jo
jmp
xor
push
push
(bad)
xchg
loopne
pushf
jge
sub
call
dec
out
(bad)
stos
adc
out
int
ins
int
ret
xor
stos
or
xor
pop
xchg
iret
mov
push
jmp
push
jge
sar
lods
into
(bad)
ficom
sub
dec
push
dec
sub
ja
(bad)
fmul
mov
mov
jno
mov
nop
xor
das
mov
arpl
adc
xor
xchg
jb
xor
mov
sub
sub
les
stc
dec
push
sub
ins
mov
inc
xor
int3
fnstenv
jg
pop
adc
mov
out
pop
mov
lods
xchg
(bad)
push
fisttp
and
mov
test
add
dec
into
fdiv
jle
or
xchg
fwait
sahf
add
fild
pop
add
leave
mov
mov
dec
push
movs
mov
retf
fnsave
inc
addr16
loope
rcl
inc
xchg
cmp
bound
xchg
sar
push
int3
sar
mov
jnp
adc
test
(bad)
mov
icebp
bound
dec
jle
retf
stos
clc
push
dec
outs
sub
push
push
retf
adc
pop
enter
test
adc
add
cwde
xchg
jmp
mul
shl
mov
pop
jmp
push
cdq
mov
adc
ror
push
adc
leave
mov
dec
neg
xchg
xor
and
xchg
repz
and
in
and
or
push
dec
(bad)
(bad)
inc
and
ins
cmps
imul
cli
pop
ret
mov
add
je
xor
imul
fwait
jne
cmps
sub
outs
jns
pop
int3
iret
cmp
movs
test
enter
int3
jae
repnz
or
mov
ret
xor
lods
and
loope
data16
cli
and
dec
retf
cmp
mov
inc
fnstcw
add
popf
test
shl
mov
fist
jle
pop
lds
cmc
bound
push
stos
pop
leave
or
lods
and
jbe
sub
xchg
push
leave
dec
outs
leave
mov
push
pop
rcr
call
mov
test
je
mov
jb
adc
cwde
fcmovnu
popa
jge
add
and
sahf
mov
push
imul
add
add
pushf
xor
or
xor
ror
in
or
dec
cmps
xchg
dec
pop
ret
(bad)
and
ds
clc
imul
aam
jno
sbb
jnp
sar
jge
xor
ret
test
push
push
push
call
mov
js
xor
xchg
jmp
out
sbb
dec
xlat
adc
data16
add
mov
xor
jo
js
inc
and
adc
repnz
jno
scas
cmp
mov
mov
lods
ret
int
push
xchg
lock
call
pop
test
mov
scas
hlt
in
into
dec
and
mov
stos
jbe
daa
outs
or
jecxz
ror
push
push
mov
loope
and
add
mov
jae
int3
pop
mov
push
mov
cld
mov
push
add
xor
scas
cmc
mov
mov
sbb
arpl
jmp
and
cmc
out
xor
dec
pop
sub
test
mov
xchg
mov
gs
cdq
xor
sar
in
dec
xor
sub
jle
stos
sbb
in
cs
icebp
stos
jp
mov
std
xchg
mov
jle
inc
adc
test
ret
(bad)
ins
cdq
daa
inc
pop
xor
pop
pushf
mov
lea
cld
call
into
mov
or
pop
(bad)
sti
mov
in
sbb
in
lods
adc
stos
(bad)
jecxz
mov
sub
outs
pop
stc
jne
int3
test
mov
and
mov
push
mov
sbb
mov
xor
push
mov
js
mov
in
cs
mov
aaa
into
dec
fimul
mov
retf
xchg
push
enter
sub
ins
lea
lods
xor
xlat
mov
pop
icebp
sbb
mov
jne
or
mov
into
nop
and
scas
mov
shl
shr
inc
jnp
jbe
aaa
xor
retf
add
jmp
mov
and
aas
xchg
or
aam
(bad)
call
jl
loop
in
test
ins
in
jmp
adc
or
pop
adc
adc
mov
sbb
imul
(bad)
pop
rcl
lahf
xchg
push
sbb
cmps
dec
iret
mov
pop
jge
pop
fcmovne
lahf
fadd
enter
add
dec
in
and
dec
lahf
sahf
call
jmp
mov
xchg
outs
push
scas
xor
inc
pop
inc
dec
cmp
dec
jae
xor
in
jne
call
and
mov
scas
jbe
jg
sub
out
inc
loope
fisttp
xor
xor
dec
nop
inc
or
mov
inc
in
inc
jl
mov
sbb
xor
(bad)
pop
push
test
cmp
sub
xor
ins
rcl
pop
cmp
aas
mov
ret
xchg
or
nop
cmp
xchg
push
clc
push
and
jecxz
rcr
fcom
inc
mov
mov
pusha
push
jb
jnp
data16
outs
shr
popa
loop
retf
in
jmp
mov
add
sub
jnp
outs
xchg
mov
mov
inc
test
std
nop
add
into
cmps
adc
cld
pusha
(bad)
imul
xchg
popa
aaa
or
cdq
add
pop
mov
jno
push
xchg
push
adc
fist
es
retf
jmp
mov
(bad)
fld
jecxz
dec
(bad)
mov
in
mov
push
imul
adc
pop
cmp
out
jmp
pop
arpl
ss
ds
aam
mov
int
ja
jnp
outs
ds
pushf
stos
(bad)
fs
cmc
pop
cmp
pop
(bad)
retf
in
cli
in
mov
mov
adc
bound
pop
cmp
add
mov
mov
inc
push
addr16
retf
les
jae
je
push
mov
pop
or
mov
int3
and
mov
push
test
rcl
add
out
xchg
mov
je
jmp
lahf
add
clc
ror
std
or
xchg
pop
pop
push
jl
pop
lea
popa
shl
inc
leave
enter
inc
push
shl
nop
addr16
jnp
call
push
ds
in
outs
into
and
or
xchg
sti
adc
sahf
nop
sbb
cmp
cmp
jbe
adc
jno
cmp
push
div
jecxz
(bad)
movs
pop
int
push
cli
xor
and
in
push
cmps
aam
cmc
mov
mov
lods
movs
test
out
cmps
sub
arpl
inc
neg
cli
sbb
add
cdq
out
fsubrp
mov
(bad)
jmp
movs
mov
xchg
pusha
call
repz
or
push
xor
aam
mov
scas
outs
inc
ja
adc
adc
rcl
mov
pop
cmp
and
ins
dec
in
rcl
(bad)
mov
jp
(bad)
enter
push
add
fadd
push
jno
cld
mov
cmp
cs
cmp
imul
push
fdivrp
add
ret
jecxz
mov
inc
mov
bound
pop
mov
addr16
(bad)
pop
ja
push
cmp
jno
retf
inc
shl
jbe
(bad)
in
movs
inc
lods
jne
pusha
inc
dec
cmp
or
js
aas
mov
mov
dec
push
sar
mov
jae
mov
and
push
imul
scas
xor
push
xchg
xor
mov
adc
ins
ja
test
or
call
in
js
out
xchg
sub
dec
ja
inc
das
and
bound
or
cmps
lods
jg
aad
mov
lock
push
xor
mov
inc
repnz
and
cld
lods
es
dec
mov
dec
sbb
mov
out
sbb
mov
lahf
xor
ja
or
in
jae
push
add
cmp
bound
xchg
das
pop
sub
dec
sub
xchg
movs
pop
outs
shr
movs
sbb
sub
stos
mov
popf
sbb
das
test
xchg
fsubr
xchg
shr
xchg
push
add
in
push
or
pushf
cli
addr16
inc
ret
jecxz
call
mov
sbb
inc
mov
call
in
add
cmp
jne
mov
sub
cmp
mov
and
(bad)
icebp
pop
xchg
cld
mov
adc
ret
lock
fisubr
inc
aas
scas
clc
jnp
fsubr
push
fwait
dec
pusha
mov
add
or
leave
shrd
stos
jbe
xchg
sub
(bad)
imul
inc
test
iret
dec
lds
ja
call
loop
inc
mov
int3
fnsetpm(287
push
cli
push
mov
outs
test
int
shl
mov
std
aas
scas
in
shl
outs
mov
add
push
or
adc
xchg
cmp
sti
jge
mov
addr16
mov
test
sub
stc
fs
mov
mov
adc
xor
push
imul
add
(bad)
in
adc
(bad)
mov
gs
push
pushf
out
inc
arpl
addr16
out
in
loop
sub
jo
cmps
cld
in
mov
inc
mov
cmp
mov
lds
fcom
es
xor
aas
or
retf
icebp
mov
jns
mov
mov
int3
sbb
sub
jnp
jo
xor
push
xor
rol
in
jb
shl
int3
sbb
sahf
jno
dec
pop
push
call
xchg
push
lahf
frstor
aad
je
jns
popa
xor
jp
mov
aad
call
ftst
sub
push
pop
pop
pop
mov
mov
or
pop
iret
sub
mov
or
pop
pop
ins
cmps
out
int3
mov
sahf
das
jmp
stos
xor
sti
les
scas
and
push
aaa
fild
or
mov
enter
sub
dec
mov
clc
mov
cmp
shl
clc
leave
jge
mov
inc
jle
cmp
pop
pop
fcom
fistp
pop
add
or
enter
int3
push
repnz
sub
jmp
mov
push
fist
pusha
js
mov
xchg
sub
sub
push
and
scas
push
xchg
add
call
lods
test
fld
jnp
rol
xchg
jle
pop
mov
sahf
lock
in
ror
mov
clc
sbb
xlat
jne
enter
fistp
mov
or
in
cmp
cmp
repnz
ret
cld
and
cmps
pop
and
stc
inc
fucomip
dec
add
sar
test
mov
xchg
cli
xor
(bad)
shl
outs
cmps
sbb
cmp
pop
xchg
adc
sub
mov
fwait
(bad)
call
add
imul
pop
jne
pop
fild
jne
arpl
jbe
ins
fstp
xlat
aaa
mov
mov
jge
mov
mov
mov
ret
jbe
imul
fld
cmps
adc
je
mov
shl
mov
in
icebp
test
sbb
add
aad
add
jnp
aas
lea
jp
mov
ins
xchg
push
pop
adc
push
in
sub
mov
mov
movs
cmps
inc
ins
lea
ja
(bad)
jo
cs
jb
add
rcl
test
cmp
popf
pop
fld
popf
mov
pop
jne
in
fwait
out
adc
pop
dec
je
pop
cs
loop
jbe
sub
out
les
aas
out
mov
imul
enter
pop
cmp
fadd
jle
jecxz
adc
nop
cwde
sar
or
stc
popa
stc
adc
int
bound
gs
sahf
push
call
mov
clc
xor
jne
sbb
aad
mov
out
inc
test
lds
mov
adc
cmps
pop
ins
pusha
jecxz
sar
mov
repz
push
mov
add
popa
or
out
jne
mov
cmp
test
pop
jmp
or
push
packsswb
in
lods
loopne
push
mov
cli
es
imul
out
cmps
fwait
popf
rcl
pop
out
hlt
pop
xchg
xchg
mov
fidiv
sub
ins
nop
jge
or
mov
mov
fidiv
push
inc
inc
dec
add
or
mov
lahf
imul
sahf
inc
int
adc
fidiv
mov
xchg
call
inc
sub
xchg
cmps
mov
scas
fwait
out
adc
sub
inc
mov
xchg
lea
mov
cmps
or
dec
test
cmps
not
gs
retf
xchg
mov
std
sbb
addr16
daa
lods
repnz
ret
imul
test
pop
dec
neg
mov
adc
(bad)
mov
shl
mov
push
mov
add
jo
xchg
sub
aam
fwait
movs
push
sub
xor
out
cs
mov
es
xchg
aam
call
cmps
adc
mov
pop
mov
sbb
fist
lock
push
cmp
call
lods
int
jbe
ins
jg
fs
scas
ret
and
stos
adc
cmps
int3
iret
adc
stc
inc
test
mov
sahf
inc
mov
jo
jne
cmc
sti
fidivr
lahf
pop
(bad)
retf
push
(bad)
add
imul
push
(bad)
jnp
add
lock
icebp
mov
inc
pushf
inc
adc
inc
sub
push
outs
nop
test
xchg
xlat
pop
ins
jo
sbb
jb
aas
push
aaa
mov
add
xchg
xor
data16
dec
in
iret
mov
pusha
cld
pop
cmp
cli
ss
out
and
frstor
int
pop
sbb
sbb
cmps
dec
inc
add
gs
push
jecxz
fstp
pop
pop
mov
popf
fdiv
cmp
nop
repz
fst
popf
push
inc
cmps
nop
gs
rol
push
lock
pop
xor
jbe
dec
imul
mov
(bad)
fimul
inc
inc
fwait
shl
inc
nop
xor
retf
fldcw
sbb
fdiv
sub
out
in
fld
shr
rcl
aas
ror
lods
inc
dec
adc
or
nop
ret
nop
shl
shl
push
loop
movs
jmp
pop
out
pop
shl
sub
xor
aaa
push
pop
push
xchg
test
retf
push
xchg
sbb
dec
or
sub
xchg
pusha
xchg
aam
xor
sub
iret
cmp
js
js
(bad)
out
push
xchg
call
mov
xchg
add
push
cmp
mov
ret
add
loope
or
adc
jmp
fs
xor
dec
add
lahf
mov
aaa
xchg
jae
imul
cli
aaa
bound
pop
hlt
fidiv
(bad)
mov
jb
or
mov
jo
ins
sbb
pushf
xchg
fnsave
or
aas
pop
inc
adc
(bad)
add
out
add
test
mov
repnz
mov
xchg
outs
fisub
sahf
pop
int
inc
nop
mov
bound
test
rcr
std
pushf
dec
mov
jns
cmp
xor
hlt
pushf
movs
inc
imul
push
dec
xor
xchg
jo
dec
mov
arpl
ss
sub
mov
scas
stc
xchg
outs
js
xlat
mov
mov
xchg
clc
dec
mov
cmp
mov
mov
jl
add
mov
sub
call
std
mov
mov
bnd
xchg
lea
inc
push
mov
ss
push
push
retf
call
ret
pop
and
mov
jle
add
push
sbb
das
mov
enter
adc
push
adc
outs
mov
test
mov
hlt
inc
inc
imul
mov
imul
ins
dec
mov
cmp
repz
pop
ja
cld
les
(bad)
jmp
fiadd
pop
sub
sub
jmp
push
mov
jae
xlat
into
pop
stos
jecxz
pop
sbb
ds
jne
mov
in
int3
pusha
pop
pop
ja
popa
test
int
inc
cmp
jmp
xchg
(bad)
loope
add
movs
imul
fist
cmp
dec
jge
pop
xchg
cmp
jnp
outs
mov
jne
or
stc
push
stos
sub
mov
pop
pop
(bad)
cmp
jmp
push
jmp
ret
xor
daa
or
outs
aam
aam
mov
xchg
dec
test
sbb
movs
outs
xchg
(bad)
fimul
fs
into
or
inc
push
adc
cld
sub
pusha
xchg
xor
push
adc
jne
cmp
fsub
scas
push
(bad)
es
jae
adc
xchg
xor
call
mov
sub
icebp
or
out
cdq
sar
xor
dec
cmps
mov
sub
or
cli
out
les
loopne
lods
push
fucomp
xor
dec
imul
jl
les
or
mov
les
call
pop
shl
test
ss
fsubr
and
push
mov
rdmsr
mov
movs
mov
lea
out
call
(bad)
jo
(bad)
xor
popf
jl
lea
not
fwait
outs
movs
add
jns
mov
pusha
das
test
mov
xor
add
and
pop
bound
cmp
jecxz
cmp
test
mov
push
pop
clc
mov
and
pushf
dec
pop
cld
jmp
mov
push
push
(bad)
movs
shr
fstp
mov
stc
aas
retf
add
test
push
mov
les
aaa
jecxz
js
(bad)
cld
pop
cs
ret
pop
lock
aad
or
or
stc
jns
lea
mov
ins
mov
call
mov
mov
icebp
sar
out
out
cli
ja
jnp
push
jecxz
mov
sbb
sbb
fdivr
sub
jle
jb
shr
jg
loope
mov
pop
(bad)
fs
daa
mov
sbb
or
sub
jmp
dec
test
stc
in
xchg
mov
or
add
lahf
mov
cmps
mov
(bad)
mov
lods
int3
rcl
ret
lods
jns
mov
inc
inc
xchg
add
call
pop
stc
ins
(bad)
call
inc
pop
cld
ss
or
dec
jmp
mov
push
stos
add
sub
addr16
sub
leave
push
cmp
lods
not
popa
mov
ret
pop
mov
sti
xor
and
sbb
xor
mov
loope
xchg
lods
xchg
adc
mov
je
out
push
xchg
fnstcw
pop
ja
or
push
daa
ror
pop
sbb
push
das
scas
inc
imul
(bad)
shl
cmp
mov
pusha
aaa
les
mov
add
mov
fmul
adc
out
sbb
xchg
mov
mov
mov
and
xor
adc
pop
jbe
repnz
ss
xchg
add
aas
cmp
int3
fwait
ds
pop
xor
rol
push
sub
cdq
and
xchg
iret
xor
inc
call
scas
lds
xor
push
icebp
push
cdq
enter
and
jmp
sbb
pop
retf
xor
push
push
push
cli
gs
xor
sti
je
jecxz
mov
push
(bad)
mov
mov
or
sbb
sahf
dec
push
js
fcom
or
mov
jnp
data16
inc
or
xor
fcomp
or
nop
(bad)
(bad)
jl
sbb
outs
bound
xor
mov
gs
cmps
je
in
mov
lods
ret
xor
test
jae
rol
es
ss
ss
jbe
std
jbe
retf
jg
sbb
xchg
(bad)
(bad)
or
(bad)
xor
sub
not
push
add
clc
and
clc
mov
cwde
add
sub
ds
cmps
test
mov
xchg
fild
mov
or
cmp
xor
les
ror
mov
pop
retf
inc
xlat
push
(bad)
push
push
xor
popa
ret
rcr
call
(bad)
aas
in
push
pusha
lea
mov
xor
pop
or
and
jae
ret
dec
fxam
xor
sub
fidiv
adc
out
mov
retf
push
inc
add
and
jns
mov
push
scas
jnp
bts
fadd
push
icebp
jns
lea
shl
loopne
xor
sti
jle
adc
out
outs
or
adc
popf
aad
mov
inc
mov
or
mov
les
(bad)
pop
lock
add
mov
mul
movs
sbb
jmp
loope
lahf
jmp
pop
hlt
mov
(bad)
add
jl
mov
cmp
jp
daa
aaa
and
dec
arpl
hlt
test
test
inc
hlt
cmps
push
push
enter
pop
lods
xchg
mov
outs
and
push
jg
dec
retf
mov
pop
pop
aaa
fadd
int3
addr16
stos
push
lock
jb
mov
mov
adc
inc
sbb
(bad)
jmp
je
jge
ret
call
ret
xlat
mov
stc
jp
or
push
sti
or
pop
movs
pop
fisttp
out
adc
or
mov
cmp
push
rcr
cmp
mov
scas
test
psllq
inc
mov
adc
jb
sti
ins
outs
jae
dec
vpmullw
add
inc
repnz
out
pop
or
pop
sub
or
nop
popf
jb
mov
inc
clc
mov
mov
in
cmc
test
adc
mov
mov
xchg
in
cmp
cvtps2pi
jl
pop
push
and
jae
test
mov
mov
icebp
icebp
sbb
mov
dec
ret
mov
jge
inc
dec
out
sbb
cmp
inc
or
pop
out
lahf
jle
mov
jno
inc
outs
push
push
arpl
ror
retf
cmp
fnstenv
imul
mov
inc
mov
(bad)
mov
push
mov
lods
push
add
movs
push
aaa
pop
mov
sahf
pop
ficom
pop
jmp
test
mov
sub
ds
mov
xlat
mov
or
add
cmc
les
inc
ret
loop
leave
and
dec
inc
mov
inc
scas
mov
int
stc
mov
sub
or
push
xchg
aam
inc
dec
inc
mov
add
jns
cmp
push
xlat
imul
div
xor
mov
cmp
dec
add
mov
mov
xchg
es
mov
xchg
lock
cmps
int
mov
pop
mov
scas
and
cs
push
cmps
inc
jne
repz
icebp
ds
fwait
shl
xchg
push
lods
rol
mov
popf
inc
loope
xchg
mov
sbb
xchg
sbb
out
mov
push
mov
add
(bad)
loop
arpl
cdq
mov
xlat
in
xchg
fnsave
sar
adc
push
jns
jg
test
mov
dec
jb
jmp
setle
add
adc
push
dec
lock
lock
scas
sub
inc
iret
add
adc
sub
mov
xor
neg
xchg
mov
std
sub
movs
repz
add
or
inc
ds
add
aas
sbb
ror
sbb
es
dec
arpl
pop
sub
addr16
cwde
hlt
pop
pop
or
cs
test
jg
or
xchg
push
xor
(bad)
sti
dec
pop
push
mov
xor
sbb
lds
inc
dec
repz
inc
dec
lds
stos
and
sbb
outs
xchg
(bad)
out
mov
fbld
test
sub
mov
mov
popf
pop
lods
popa
and
mov
mov
cs
popa
repz
push
test
dec
mov
(bad)
cmp
adc
into
adc
xchg
movs
daa
and
je
jge
retf
push
push
xchg
add
mov
sub
shl
mov
lods
inc
jns
xchg
adc
xchg
aas
add
sbb
or
jmp
outs
fisubr
ss
and
ss
cmp
adc
jecxz
mov
push
dec
mov
jno
dec
add
ficomp
jl
sbb
loop
add
push
in
mov
xor
iret
ds
cmp
jbe
cmps
scas
fidiv
ins
jo
mov
ret
pop
pop
and
pop
xchg
inc
mov
cli
and
aas
mov
ret
in
clc
imul
adc
(bad)
and
and
mov
pushf
inc
xor
fwait
jmp
out
mov
xchg
xlat
xor
cmp
rcr
out
imul
jae
loopne
xor
shr
sbb
mov
ret
jne
inc
ja
js
cmp
in
adc
mov
clc
push
cdq
or
add
jno
stos
add
cdq
jg
dec
sub
popa
or
xchg
mov
sub
push
xchg
loope
cmps
cmp
(bad)
lds
retf
dec
adc
jle
jae
into
cmps
sbb
je
jbe
sbb
and
mov
cmp
or
in
data16
mov
mov
jnp
in
ss
push
lds
push
inc
das
mov
out
sahf
xor
mov
movs
stc
cmp
adc
fstp
retf
adc
mov
lahf
inc
enter
jmp
out
mov
cdq
fsincos
aaa
push
jns
mov
jle
push
sbb
repz
mov
ret
jmp
inc
rol
stos
(bad)
adc
sub
stos
movntq
adc
push
mov
pop
test
push
pop
fcmovnbe
ins
mov
mov
ja
adc
xchg
lods
push
dec
in
fisub
int
psrad
sub
xchg
movs
jne
cmc
inc
inc
add
adc
imul
stc
dec
or
mov
xchg
int
add
or
cs
mov
jae
jl
jle
mov
loopne
jmp
mov
or
cdq
cdq
mov
push
retf
gs
out
(bad)
pop
cdq
es
(bad)
test
test
mov
xor
add
(bad)
mov
sub
movs
sar
push
into
adc
adc
adc
mov
mov
arpl
mov
in
pop
test
pop
cld
aaa
jne
ror
inc
xor
add
lods
mov
xor
jae
pop
cmp
cmp
cmps
jmp
jns
cli
repnz
add
sbb
(bad)
fdiv
jbe
inc
jbe
sti
sub
jne
sbb
cmps
into
add
jae
out
popf
hlt
dec
pop
retf
xor
xchg
xor
cmp
mov
shr
out
ret
imul
jge
loop
icebp
jmp
clc
and
sti
mov
or
imul
out
icebp
das
or
adc
js
movs
mov
je
mov
test
xchg
lock
add
inc
sbb
sub
sti
in
aad
shl
test
dec
add
lock
pop
dec
mov
push
out
push
add
jo
ss
adc
daa
pop
jae
cs
jmp
daa
movs
jecxz
xor
aas
pop
jmp
xlat
dec
xchg
inc
or
les
(bad)
movs
or
pop
int3
jo
push
leave
or
mov
push
lock
adc
push
in
push
jae
xchg
jb
mov
or
aas
push
push
mov
jns
inc
mov
jns
pop
cmp
stos
and
inc
es
pop
nop
add
jmp
cld
repnz
dec
int
and
pop
pusha
retf
push
bound
or
in
jmp
xor
or
ss
or
ror
shl
pop
in
mov
push
mov
adc
cmp
xchg
stc
mov
sub
pop
mov
inc
lea
cmp
mov
popa
sub
sub
jne
popa
test
xchg
cmp
ja
scas
jno
jmp
inc
and
mov
cmp
sub
iret
das
aas
cmc
dec
xlat
mov
enter
pop
call
movs
pop
(bad)
add
pop
pushf
dec
sbb
(bad)
fidivr
jmp
mov
ds
inc
movs
daa
sbb
gs
outs
arpl
pop
loope
jo
inc
push
push
pop
ds
in
int
add
loop
and
jge
jnp
in
std
fdiv
and
mov
fisub
mov
mov
fld
data16
pushf
pop
gs
repnz
sahf
push
mov
pop
or
sub
cmp
(bad)
xchg
mov
inc
icebp
test
or
pop
cwde
clc
cs
mov
xorps
loopne
out
mov
sub
and
dec
ins
imul
add
scas
or
retf
jbe
pop
dec
cmp
iret
push
mov
(bad)
leave
aaa
add
rcl
retf
outs
xor
adc
xchg
sti
xchg
sbb
inc
and
sbb
cmp
fld
mov
pop
mov
mov
and
push
out
xchg
leave
and
push
jne
pop
out
mov
adc
xor
mov
mov
mov
xchg
or
mov
pushf
call
ja
jno
mov
sub
in
dec
(bad)
pop
dec
xchg
cs
dec
push
es
fld
retf
int
inc
xor
leave
movs
pop
inc
pusha
fimul
jo
adc
aam
int3
and
les
inc
(bad)
aas
sbb
mov
jnp
xor
sbb
bound
call
push
sub
fadd
pusha
pusha
repnz
sar
dec
xchg
dec
gs
pop
call
mov
sar
mov
pop
in
add
in
push
pop
add
mov
sbb
daa
sbb
jg
test
cmp
jmp
sahf
push
mov
pop
mov
lds
in
dec
push
mov
cmp
gs
sbb
sub
test
sub
icebp
(bad)
daa
cwde
jns
out
or
mov
hlt
das
xchg
and
push
and
push
mov
mov
cmp
and
xor
adc
sbb
daa
jns
outs
shr
test
xchg
adc
retf
mov
imul
push
dec
test
jo
or
push
sahf
jmp
ss
lods
leave
rcr
mov
push
aaa
iret
lods
or
pushf
setp
or
ds
push
arpl
inc
push
cdq
imul
dec
into
pop
bound
mov
mov
add
dec
adc
cmps
jg
loope
stos
inc
or
lods
mov
jno
mov
pop
out
mov
add
inc
adc
xor
retf
dec
mov
imul
inc
and
or
and
cmp
(bad)
cmp
mov
mov
or
leave
sub
push
push
std
mov
mov
pop
std
cmp
xor
push
and
sti
jmp
or
jmp
aas
mov
push
cmps
sbb
mov
xlat
cmp
(bad)
jmp
fdivr
or
ret
rol
cmc
push
cs
stc
pusha
cs
ss
add
xchg
push
pop
aam
jo
xchg
(bad)
adc
xchg
movs
les
add
out
in
cmp
daa
sysenter
push
cmp
xchg
sbb
std
or
cmp
addr16
adc
movs
adc
leave
push
into
out
add
int3
fcomip
rol
loopne
shr
mov
loop
pop
int
or
xor
sbb
or
mov
jg
gs
cmps
adc
mov
repz
jmp
test
or
nop
xor
mov
push
mov
pop
mov
push
test
fadd
test
out
addr16
clc
fidivr
mov
cmp
dec
dec
call
mov
ret
pusha
mul
mov
(bad)
jmp
jp
lea
enter
idiv
repnz
push
fist
icebp
dec
adc
mov
or
ss
or
and
xor
xor
pop
push
xchg
mov
je
jno
push
dec
fs
cwde
xchg
imul
mov
das
leave
push
bound
cmps
out
xchg
jl
sub
or
test
pop
sub
mov
shl
mov
shr
jle
(bad)
retf
inc
ins
bound
push
adc
adc
dec
aaa
mov
aad
fiadd
cwde
push
clc
mov
neg
jge
imul
pushf
cmp
xchg
adc
xor
sub
(bad)
popf
out
jg
leave
push
pop
inc
sti
ja
inc
inc
cmp
addr16
ror
or
test
retf
(bad)
repz
jbe
sbb
fild
(bad)
cmp
mov
mov
and
and
sbb
shl
out
and
push
add
mov
push
sub
mov
cli
outs
mov
adc
dec
(bad)
mov
std
retf
jbe
ret
dec
cmp
pop
js
cmc
xor
iret
add
out
and
mov
xchg
out
push
int
cmp
pop
js
inc
mov
(bad)
das
and
(bad)
jae
fmul
fs
stos
clc
xchg
xchg
iret
mov
push
rcl
or
test
repnz
sub
stc
cwde
jne
sti
inc
xor
lfs
jnp
cmp
das
mov
inc
mov
or
and
fcom
xor
push
adc
imul
ins
push
dec
mov
cmp
movs
adc
and
jne
jmp
fucomi
ret
cvtps2pi
nop
jbe
test
mov
jno
stc
mov
jmp
popa
dec
mov
dec
push
jns
shl
lods
add
aaa
repz
pushf
cli
outs
and
test
jp
mov
xor
aam
inc
movs
(bad)
jb
jae
and
das
xchg
pop
dec
sub
loop
daa
mov
push
ds
mov
push
pop
sbb
dec
(bad)
xor
or
cmps
mov
sbb
in
xchg
lahf
inc
sub
cmp
rol
repnz
(bad)
or
fcmovu
ins
add
mov
es
dec
jo
call
push
mov
sub
push
push
xor
leave
adc
or
or
les
mov
movs
icebp
movs
or
scas
mov
fisub
inc
cmp
imul
push
push
mov
paddw
cld
arpl
xlat
cld
inc
xor
ins
jl
(bad)
mov
aas
inc
clc
aad
aaa
cmp
and
repz
inc
ja
dec
sbb
lock
(bad)
cmc
xor
jne
imul
out
out
cs
inc
cmc
in
sbb
jnp
and
push
icebp
imul
stc
mov
adc
jp
jecxz
sub
mov
movs
movs
daa
(bad)
jnp
stos
fisubr
dec
pop
xor
jns
dec
lods
mov
cli
mov
out
or
sbb
sbb
push
xchg
fimul
test
mul
fnstcw
or
sbb
pushf
sti
sub
imul
and
dec
(bad)
scas
add
pop
fwait
mov
or
leave
jne
or
icebp
lods
fs
push
cmp
ins
inc
movd
cld
adc
adc
pop
sbb
ins
out
inc
cdq
mov
inc
pop
xchg
mov
jl
std
push
ror
fcom
jle
add
fsub
ins
je
mov
inc
xor
fwait
or
shl
or
xchg
leave
cmp
loopne
imul
fwait
adc
mov
cmps
lea
out
push
xchg
out
and
mov
retf
or
les
xchg
mov
hlt
jge
xchg
jge
movs
pop
lahf
lea
out
int
sub
pop
jb
movs
das
hlt
sbb
loope
enter
sub
xchg
ja
lods
dec
lods
cwde
xchg
repnz
aaa
cmp
inc
sar
in
mov
test
(bad)
jl
das
push
cmp
movs
push
aam
mov
and
mov
mov
cwde
pop
pop
jge
sub
pop
or
jmp
push
push
clc
or
add
fisub
popa
mov
inc
pmuludq
dec
mov
in
addr16
dec
and
and
cld
test
add
sub
cdq
pop
sbb
sbb
sbb
int3
mov
(bad)
cmp
push
xlat
sub
or
cwde
or
push
push
mov
jb
pop
test
in
mov
mov
(bad)
fldcw
sub
fist
iret
push
lods
js
hlt
or
(bad)
jae
lds
aad
pushf
aad
adc
fnsave
push
jmp
sbb
xchg
jp
fistp
push
sbb
in
and
movs
adc
xchg
dec
cmp
loopne
test
ret
add
jb
lea
jne
(bad)
jb
push
test
and
sub
add
clc
sahf
jl
mov
jne
pop
inc
jle
sbb
out
mov
cmps
mov
mov
jo
ret
xchg
mov
pop
push
and
ds
xchg
les
ret
data16
scas
mov
icebp
jmp
ins
push
xchg
arpl
std
movs
cmp
sti
(bad)
push
push
ret
popf
pop
push
adc
sbb
xor
push
call
loopne
adc
pop
inc
adc
sub
inc
stos
stos
fistp
add
mov
cli
imul
loopne
sbb
jmp
stos
pop
ss
xor
mov
lock
mov
xor
pop
fnstenv
xchg
fst
mov
add
test
outs
add
loope
cs
mov
jo
fsubr
les
dec
repnz
xchg
jg
fwait
and
xchg
inc
test
fsubr
pop
ins
loopne
ds
fistp
inc
lahf
or
cmps
add
mov
hlt
xor
mov
loope
js
test
shl
mov
repz
mov
lods
and
js
repz
mov
stos
mov
mov
or
dec
push
mov
cmp
sub
(bad)
in
and
test
push
push
imul
in
xchg
push
xlat
mov
cmp
retf
adc
mov
psllw
pop
ja
mov
sbb
adc
add
aaa
add
push
jl
test
sbb
aaa
test
rcl
mov
rol
push
xchg
les
cmp
mov
add
jecxz
out
xor
mov
sub
js
adc
aad
(bad)
fidiv
mov
adc
fidivr
pop
ror
pop
in
mov
add
jo
mov
xor
sbb
jecxz
jp
test
sub
(bad)
pop
xor
xchg
jb
inc
push
dec
pop
call
or
fwait
into
pop
jl
(bad)
jne
stos
iret
(bad)
out
stc
jg
adc
inc
popa
sbb
xchg
ds
inc
mov
daa
jne
rol
add
lock
cmps
jmp
ins
scas
lds
add
arpl
std
scas
push
mov
push
and
inc
jge
add
or
ficom
repnz
mov
push
add
into
pop
pop
mov
inc
jmp
pop
ss
push
ror
jmp
shl
ficomp
icebp
mov
cli
test
mul
cld
ins
popf
mov
inc
dec
jnp
call
sti
sti
cmp
cwde
mov
dec
xor
adc
rcl
in
ss
iret
imul
and
sbb
xchg
dec
lahf
push
in
test
add
cmp
pop
push
fidiv
inc
push
cld
sbb
xchg
mov
or
jmp
adc
fadd
enter
fsubp
cmc
clc
sub
call
mov
push
mov
push
sub
lods
inc
mov
enter
mov
push
ror
dec
and
jne
shl
sbb
xchg
fild
xor
xchg
pop
cdq
jmp
push
xchg
scas
sub
(bad)
lahf
es
hlt
adc
add
icebp
or
rol
sbb
pop
sti
pusha
test
ss
adc
inc
mov
je
pop
pusha
sub
outs
(bad)
push
cmp
adc
sahf
pop
jns
push
(bad)
in
loopne
popa
jo
push
mov
iret
rcr
xor
jge
sbb
gs
sub
jno
pop
ins
jmp
dec
push
idiv
icebp
xchg
push
cmp
adc
dec
test
push
in
sbb
cld
cli
hlt
sbb
adc
mov
outs
cmp
pop
jbe
adc
jnp
xor
cmp
mov
adc
test
out
mov
mov
cli
out
daa
pop
lods
mov
inc
repnz
repnz
adc
outs
ins
imul
dec
push
out
fcomp
or
subps
inc
push
push
jnp
sub
mov
push
in
inc
(bad)
cmp
adc
add
fimul
pop
pop
setl
push
mov
arpl
or
lahf
and
scas
adc
mov
repz
lahf
push
inc
call
push
push
adc
ins
push
push
test
xor
jbe
leave
jbe
sbb
test
or
(bad)
xor
adc
nop
jp
ss
ffree
pop
push
imul
mov
hlt
retf
pusha
fldcw
leave
lea
fldenv
retf
outs
int
rcr
call
cmp
add
jle
and
test
fnstcw
call
jnp
jle
mov
mov
sbb
clc
add
or
popa
pop
inc
mov
sub
cmp
out
imul
pop
jns
xchg
(bad)
ins
inc
fbstp
test
das
mov
sbb
(bad)
cmps
mov
in
sbb
aad
adc
cdq
lods
xchg
mov
jp
nop
push
out
scas
sub
(bad)
push
sbb
pop
loop
xor
add
xor
aam
jg
cmps
mov
cmc
jns
push
xchg
mov
cli
push
shl
loop
(bad)
mov
aas
inc
jp
movs
shl
jo
js
xchg
stos
xor
ror
lock
mov
sub
lods
out
mov
pop
cmc
les
ja
out
lock
imul
not
or
int
push
xlat
fpatan
push
(bad)
shr
pop
dec
sub
sbb
jg
xchg
push
outs
ja
sub
or
mov
inc
xchg
scas
ror
ret
xor
mov
inc
push
and
lock
push
add
jl
cdq
and
ror
rcr
scas
sbb
and
jno
jnp
outs
jnp
sbb
mov
hlt
lea
mov
push
push
stc
into
aaa
scas
aaa
jge
or
data16
xor
movs
jle
dec
jmp
sti
rol
adc
sbb
retf
repnz
lock
push
xchg
cmp
js
dec
cmp
shl
popf
xor
fstp
or
inc
inc
mov
xor
addr16
add
sbb
mov
cmp
ins
not
aam
(bad)
out
cli
xchg
(bad)
sbb
mov
pop
mov
push
imul
pusha
fist
test
cmp
mov
mov
mov
jno
lock
popf
jecxz
dec
into
push
and
call
push
sbb
aaa
jmp
out
xor
or
mov
ficomp
and
jo
jnp
xchg
mov
int3
push
test
sar
adc
dec
pop
mov
inc
dec
xor
or
push
fcmovnu
push
pop
ins
imul
fs
popa
sub
push
repnz
xchg
jmp
xchg
pop
aad
xchg
inc
or
push
mov
ins
add
pop
aam
neg
cmps
ds
inc
push
loope
cmp
add
and
pusha
add
rcr
jbe
push
(bad)
jmp
lds
loope
rol
movs
xchg
dec
fdivr
pushf
gs
ret
or
jecxz
repz
xchg
cmp
pop
xor
pop
(bad)
mov
or
push
or
rcr
(bad)
and
mov
scas
in
ds
mov
psignw
bound
mov
ds
cmc
cmp
daa
gs
ret
dec
ficomp
jl
dec
repnz
sub
popa
push
push
jp
push
adc
mov
jns
pop
int3
push
call
xor
mov
pusha
inc
adc
out
iret
stos
fwait
cmp
push
(bad)
in
jbe
leave
clc
dec
outs
inc
retf
data16
sbb
lods
test
xor
movs
leave
fsub
out
enter
phsubd
nop
jmp
xchg
sbb
and
push
push
pop
clc
in
jns
dec
out
arpl
xorps
dec
loope
sub
xchg
push
xchg
test
pushf
dec
imul
mov
mov
xchg
fcom
fwait
push
mov
pop
dec
ds
sbb
xchg
pushf
mov
push
pop
fwait
popa
push
pushf
jb
mov
push
sub
push
mov
cli
mov
test
mov
out
nop
inc
ins
mov
xor
and
xor
mov
mov
sahf
inc
movs
push
dec
mov
mov
or
sub
addr16
xchg
inc
scas
jge
push
push
jo
fist
jae
(bad)
in
(bad)
xchg
mov
fs
jo
mov
push
outs
sbb
mov
push
add
or
dec
jg
mov
in
repnz
repnz
and
fstp
(bad)
lahf
xchg
xchg
mov
push
jl
mov
mov
xor
int
push
mov
sub
mov
or
jg
sbb
push
clc
dec
aad
in
sahf
addr16
lods
cmp
jo
mov
ins
les
push
gs
or
dec
(bad)
push
pusha
mov
jo
aaa
push
jmp
js
jp
xor
(bad)
lea
mul
mov
mov
icebp
ret
xchg
loopne
addr16
inc
mov
mov
sub
cdq
mov
nop
xchg
jne
aad
lahf
cwde
lods
cmp
push
xchg
jmp
and
pop
(bad)
lea
jae
adc
jns
pop
or
leave
enter
adc
dec
int
add
call
sti
push
call
and
mov
movs
cmp
add
in
cmp
xor
adc
fcomp
movs
jle
shl
stos
dec
(bad)
mov
lods
mov
adc
cmp
cmp
jnp
sbb
or
ret
arpl
hlt
pushf
dec
adc
outs
retf
sbb
and
loopne
shl
sub
int
cli
inc
(bad)
(bad)
scas
mov
mov
pop
loopne
mov
mov
or
mov
hlt
je
jb
cmp
jmp
adc
(bad)
leave
push
push
or
push
imul
adc
stos
in
mov
test
je
dec
sub
(bad)
mov
push
add
and
mov
popf
dec
jp
sbb
add
dec
mul
shl
and
cmp
rcr
retf
jp
mov
mov
adc
mov
(bad)
test
in
add
or
test
mov
dec
in
cmp
fdiv
inc
push
push
sbb
pop
jmp
sbb
cmp
outs
inc
fidivr
dec
cld
mov
ins
sub
call
pop
adc
mov
call
adc
out
dec
movs
je
add
and
mov
mov
sbb
push
mov
enter
jmp
pop
in
call
popa
pop
push
in
xor
shl
dec
icebp
aaa
push
cdq
data16
ja
into
fnstcw
sbb
xlat
add
addr16
sar
fsub
ds
je
fxch
cmp
inc
addr16
std
mov
add
aaa
push
hlt
push
add
mov
scas
jl
xor
mov
add
jl
or
neg
loop
and
lea
inc
fwait
adc
retf
dec
jl
jle
enter
arpl
jecxz
fld
cmp
js
mov
sar
inc
push
mov
scas
push
jg
mov
push
jbe
sub
lds
pushf
dec
test
pop
sbb
stc
sub
fs
test
shl
stos
call
in
pop
test
shl
dec
push
xor
jae
pop
(bad)
xchg
cmps
cwde
jo
sub
or
mov
sbb
add
sahf
xor
ret
fwait
adc
ins
jns
sbb
stc
pop
sub
jmp
ja
sbb
fdivr
rol
sbb
mov
nop
in
out
jae
cmp
pop
inc
fcmovne
jnp
repz
sub
mov
and
adc
pusha
call
movs
xor
sub
xor
sbb
dec
sti
mov
mov
dec
test
add
jns
pop
test
dec
mov
mov
dec
(bad)
mov
mov
(bad)
das
aaa
cmp
mov
dec
sub
push
jns
mov
cmps
sbb
xor
jle
adc
pop
mov
xchg
shl
pushf
arpl
clc
repz
out
or
sub
shl
sbb
push
leave
xlat
pop
xchg
inc
dec
push
push
outs
sub
in
movs
out
push
push
lods
lods
pop
push
jnp
fwait
xchg
jns
and
and
add
add
pop
xchg
ins
add
inc
sbb
fdivr
inc
fs
push
mov
push
mov
scas
add
mov
daa
mov
jae
es
inc
imul
and
cmc
sbb
iret
jo
ficomp
aad
int
and
pop
repnz
lock
mov
popa
or
mov
addr16
sbb
jnp
ins
cmp
mov
das
test
add
sub
arpl
test
dec
call
(bad)
sub
and
pusha
mov
xlat
mov
dec
lahf
adc
jmp
jo
lahf
mov
push
mov
adc
lahf
mov
sbb
mov
test
xchg
leave
sbb
mov
sub
mov
xchg
iret
add
and
pop
fwait
iret
ins
rcl
xchg
mov
stos
xchg
mov
cmp
xchg
cdq
movs
jl
adc
inc
pop
jb
mov
aaa
push
mov
and
add
adc
sbb
inc
xchg
stc
(bad)
dec
fistp
(bad)
or
jmp
cmps
ret
xchg
adc
xchg
loope
cmps
dec
push
cmps
stc
or
inc
push
pop
shl
leave
jnp
dec
and
xor
call
pop
or
repz
mov
adc
sub
popf
push
ffree
adc
and
ins
adc
in
inc
adc
not
inc
lods
jbe
mov
aam
mov
ret
add
call
adc
jl
dec
lahf
and
mov
push
(bad)
xchg
mov
cmps
fnstcw
rol
jmp
jg
lods
mov
inc
mov
mov
jge
cmps
mov
dec
leave
in
inc
sahf
outs
dec
lds
(bad)
jne
and
sub
xor
inc
and
dec
jl
pop
hlt
xchg
push
fiadd
pop
inc
(bad)
fist
fisub
retf
ss
aaa
and
dec
and
push
pop
and
lods
loop
jne
sbb
and
mov
icebp
push
add
mov
mov
dec
leave
or
(bad)
lods
mov
icebp
outs
pop
jb
fs
movs
retf
mov
add
inc
and
test
popa
out
inc
or
cmps
xor
cmp
or
pop
xchg
jge
das
adc
das
mov
scas
cmp
jle
lock
mov
sbb
add
outs
fstp
inc
mov
cmp
pop
xchg
dec
mov
out
pusha
adc
lfs
xchg
push
movs
xor
mov
sub
sti
sub
dec
or
dec
sbb
xor
jb
(bad)
and
jae
adc
xchg
stc
jg
cmp
adc
repnz
cmpxchg
cmp
addr16
sbb
out
shr
aad
dec
dec
push
push
push
aaa
clc
cdq
data16
push
pop
leave
add
cdq
fld
mov
or
sub
push
iret
ror
and
aam
push
pop
add
pop
sar
call
adc
mov
jl
das
sar
cmps
xchg
mov
push
inc
or
fadd
jg
(bad)
imul
mov
or
sahf
lods
aaa
out
ja
jg
pop
or
ss
mov
pop
arpl
ss
inc
popf
push
sub
fcmovnbe
xor
aam
and
cmps
std
scas
les
mov
mov
ins
cs
sub
pop
shr
mov
outs
push
enter
out
lods
ins
inc
cmps
mov
aam
(bad)
call
icebp
sbb
add
arpl
cli
js
inc
pop
sub
push
ja
fdivr
scas
add
out
ror
loop
scas
cmp
rol
(bad)
retf
or
dec
jecxz
sar
xor
popf
pop
jae
sub
lods
int3
mov
sub
rcl
pop
xchg
inc
out
lahf
pop
xchg
and
das
movs
(bad)
pushf
scas
xor
mov
mov
pop
jge
pop
fild
icebp
mov
retf
push
or
fldenv
push
mov
push
pusha
push
scas
(bad)
repnz
jno
out
rcr
leave
out
jne
les
(bad)
leave
repz
fld
cs
sub
xchg
lods
jmp
fild
call
out
lods
mov
cmp
xchg
popf
je
jb
(bad)
ds
icebp
add
mov
lods
addr16
xor
dec
xrelease
add
pop
movs
or
or
out
xor
add
pop
sahf
movs
test
mov
call
push
loope
dec
cli
and
mov
aas
pop
pop
ins
mov
or
push
mov
dec
mov
jne
jnp
and
mov
arpl
sbb
pushf
cmp
xor
cmp
sbb
cdq
aad
or
movs
inc
push
cmc
push
fadd
call
ret
pop
es
mov
stos
adc
adc
fwait
dec
ja
push
rcl
mov
stos
sbb
add
add
fs
mov
gs
je
dec
sub
imul
push
sub
mov
push
sub
push
std
jbe
rol
jne
dec
inc
push
or
daa
sub
pop
into
inc
ins
ja
clc
inc
push
jecxz
imul
adc
addr16
outs
ds
or
icebp
sbb
jno
dec
aas
xlat
(bad)
push
add
or
xchg
fnclex
icebp
xchg
jecxz
call
or
jmp
push
out
dec
push
(bad)
pusha
push
ins
sahf
and
popa
stos
or
mov
jg
outs
fsub
push
jb
xor
jmp
test
iret
mov
pop
xchg
adc
outs
cmp
cmps
pop
clc
xchg
sub
enter
dec
inc
in
lods
fcomp
daa
mov
addps
xchg
es
cmp
(bad)
movs
mov
ins
push
retf
and
push
or
repz
lock
nop
adc
(bad)
into
inc
je
sbb
jp
in
mov
push
or
adc
push
ja
enter
frstor
fisttp
pusha
cld
loope
push
and
repnz
out
lods
push
sbb
les
mov
adc
push
ror
js
push
loopne
aam
int3
mov
add
fidiv
inc
loopne
add
mov
rcl
out
into
or
in
scas
jg
inc
jecxz
inc
mov
int3
leave
movs
test
into
mov
mov
xchg
inc
lock
test
cli
mov
daa
jbe
sbb
call
cwde
jge
push
xor
sbb
and
adc
mov
push
pop
out
leave
movs
push
mov
push
dec
fs
mov
neg
ja
ja
lods
cdq
or
xor
test
xchg
inc
push
sub
in
mov
retf
dec
pop
shl
cs
cmp
fxam
inc
mov
xor
adc
fcompp
add
stos
popf
lods
adc
sbb
addr16
fild
mov
gs
pop
enter
ss
jp
mov
mov
pusha
pop
xor
sub
cmp
(bad)
cld
xchg
mov
enter
xor
icebp
jb
push
repz
mov
cmps
jle
out
jae
ds
ret
or
jno
push
repnz
leave
iret
movs
enter
mov
xchg
rcr
sbb
mov
ret
test
pop
sub
lahf
mov
pusha
fcmovb
and
push
fnstenv
loopne
mov
mov
pop
inc
add
cld
sub
ja
mov
xchg
sbb
inc
(bad)
mov
cdq
push
cmps
rol
into
jge
repz
sbb
dec
xor
leave
iret
les
out
jnp
cmp
inc
mov
test
pop
lods
fwait
push
(bad)
mov
or
and
xlat
mov
in
fnstsw
test
shr
scas
push
pop
dec
stos
div
add
shl
sub
sub
push
mov
dec
daa
add
pop
xchg
xor
int3
jge
dec
rcr
jmp
adc
stos
dec
mov
cmc
mov
call
mov
xor
xlat
push
(bad)
pop
fstp
cwde
add
sub
pop
xchg
icebp
or
push
je
fiadd
bound
push
jne
adc
stc
int
mov
in
fdiv
mov
xlat
ret
cli
sbb
xor
mov
sub
cmp
sbb
inc
mov
cs
in
rol
jb
xor
push
lds
dec
push
push
out
inc
cmp
or
jb
push
pop
cwde
cmp
addr16
hlt
(bad)
shl
mov
sbb
ss
(bad)
mov
fimul
mov
call
(bad)
mov
loopne
rol
je
fst
lods
hlt
div
push
gs
cmp
and
popf
test
fisubr
dec
xor
xor
jg
cwde
(bad)
stc
cwde
ss
or
xchg
cmp
(bad)
or
sar
adc
jmp
movs
lds
popf
repnz
(bad)
sbb
fdiv
xor
les
jo
pop
or
jecxz
test
out
xor
adc
call
lock
mov
dec
or
or
fstp
call
loop
push
sbb
mov
xor
mov
dec
adc
dec
jno
push
inc
sub
and
loopne
cdq
retf
adc
jb
test
push
sahf
test
xlat
or
ins
lahf
mov
mov
imul
mov
jns
sar
retf
call
int3
(bad)
push
push
dec
pop
psubb
sub
imul
daa
imul
stos
inc
retf
mov
cmp
xor
or
sub
loopne
test
and
pop
pop
pop
jmp
ins
push
and
pusha
ss
add
and
call
outs
sbb
cmc
sub
(bad)
cmp
js
or
jne
rol
or
inc
les
cwde
daa
aaa
jbe
cmp
stc
mov
or
arpl
aad
cmc
pop
pop
jno
jge
repnz
inc
imul
add
arpl
add
je
es
adc
push
xchg
pop
dec
cmp
jmp
add
push
add
sbb
sar
fidiv
cmp
cmp
not
push
lods
pushf
pop
cmp
and
xchg
int3
xchg
push
daa
jno
cmp
jno
xor
in
sahf
pop
je
fstp
es
retf
fnstsw
scas
sti
mov
mov
cmp
pop
out
pop
add
hlt
cmp
std
cli
push
(bad)
xchg
mov
sti
retf
sbb
xchg
sahf
xor
adc
into
pop
xchg
fcom
jmp
(bad)
dec
out
mov
xor
fs
sub
jge
mov
daa
and
cli
idiv
or
shl
pop
xchg
sub
lods
dec
or
ret
jae
inc
inc
leave
fisubr
jb
cmp
mov
bound
out
push
lahf
retf
pop
lds
add
cs
sub
bound
push
mov
ja
fisub
pop
aad
fs
cmp
rol
adc
mov
(bad)
jo
mov
or
test
push
es
lds
out
xchg
imul
and
jl
inc
mov
cwde
ins
test
pushf
stos
inc
add
clc
xchg
inc
xchg
rcl
sti
neg
mov
test
jo
lods
ds
dec
iret
or
icebp
and
cdq
mov
mov
icebp
scas
mov
pop
push
in
and
or
sbb
add
xchg
(bad)
ins
and
push
sar
mov
xchg
xor
mov
popf
ss
mov
or
xchg
mov
outs
xchg
lock
adc
add
shl
retf
nop
pop
leave
xchg
lea
test
add
mov
pop
push
addr16
scas
or
lahf
stos
pop
imul
(bad)
lods
rol
mov
daa
pushf
dec
push
pop
or
test
jnp
test
arpl
cmps
cmovp
jp
leave
retf
sbb
repnz
shr
dec
jno
imul
fdiv
sub
push
int3
mov
hlt
sbb
adc
cmp
push
hlt
aam
jmp
aam
es
push
in
ins
repz
daa
xchg
adc
jae
das
imul
ror
popf
push
dec
out
add
into
jg
mov
inc
jecxz
mov
and
mov
(bad)
test
dec
mov
jno
aaa
pusha
mov
aam
in
fs
pop
sbb
repnz
xchg
jle
pop
(bad)
movs
xchg
push
or
jmp
add
mov
fstp
in
dec
cdq
shl
aam
pop
mov
push
add
lea
imul
sbb
mov
movs
and
neg
adc
dec
ret
push
or
(bad)
in
lds
(bad)
xor
dec
inc
add
loopne
xchg
cld
cs
cli
cmp
ins
leave
sub
scas
cwde
cmps
sti
or
shl
mov
xor
mov
adc
daa
bound
ror
ret
push
adc
jns
add
cld
mov
shr
scas
shl
pusha
pop
mov
out
out
bt
in
xchg
inc
jns
inc
adc
ds
outs
bound
sub
or
ds
add
push
ret
ror
loope
dec
dec
cmp
sbb
retf
add
fistp
arpl
out
push
ss
sub
fnstcw
xchg
call
fdiv
cmps
stos
mov
adc
mov
shl
(bad)
mov
jle
jmp
aaa
jl
aaa
stos
mov
xlat
push
cmp
mov
mov
out
fisttp
das
or
pop
mul
imul
cmp
dec
xchg
aaa
popa
in
stc
in
fprem1
ret
(bad)
adc
lahf
pop
into
cmc
mov
sub
cmp
mov
xchg
jg
js
fidiv
fstp
mov
cld
push
mov
pop
sti
pop
inc
or
nop
(bad)
pop
push
ja
mov
push
inc
push
mov
out
mov
int
fidivr
inc
out
push
push
inc
int
push
into
xchg
sub
mov
(bad)
movs
lahf
clc
lock
and
daa
jnp
cmovo
jae
sub
or
pusha
xchg
imul
mov
popf
jl
and
retf
ret
xor
and
dec
add
or
push
imul
test
retf
sbb
fdiv
cmp
pop
movs
jmp
sahf
jnp
xchg
adc
sbb
ret
aad
shl
xor
and
sub
ret
push
xor
mov
aam
jecxz
cwde
rcl
fsubr
imul
sbb
inc
mov
lods
in
push
call
pop
inc
rol
pop
aam
cdq
aam
mov
(bad)
out
and
ins
and
jns
movs
adc
pop
jnp
cmp
cli
jbe
add
sub
ins
test
call
inc
and
push
test
movs
js
es
dec
icebp
je
adc
aad
pop
and
pop
inc
inc
push
adc
mov
stos
fsub
mov
inc
inc
and
push
mov
xor
shr
fs
ret
sbb
push
push
out
cmp
dec
pop
mov
sbb
pop
scas
inc
retf
test
imul
adc
xchg
out
mov
sub
inc
ficom
dec
test
hlt
lahf
mov
xor
iret
push
std
ret
jle
dec
call
cmp
popa
pop
mov
xchg
adc
int3
lea
inc
and
call
lds
loopne
movs
cmc
jae
(bad)
sbb
fst
fadd
mov
adc
test
push
lds
or
mov
hlt
scas
stos
call
dec
sbb
inc
cwde
out
adc
push
sti
aas
xchg
mov
cmp
rol
xor
outs
in
push
xor
push
and
outs
aaa
into
imul
test
mov
mov
into
nop
in
test
jo
mov
fcomi
sub
fistp
xchg
pop
jmp
sti
mov
inc
mov
cmps
enter
pop
sub
lods
pop
retf
mov
retf
in
mov
push
stc
push
cli
push
push
in
and
daa
mov
loopne
sbb
retf
(bad)
pop
sbb
repz
stos
sub
jne
aaa
pop
push
adc
fild
mov
test
shr
mov
lahf
sub
xor
sbb
xor
adc
jo
clc
fisttp
fcom
int3
mov
stos
or
add
and
fadd
pop
xchg
xchg
adc
mov
outs
or
inc
mov
push
mov
scas
movs
(bad)
imul
dec
xchg
push
fisubr
(bad)
std
pop
jge
je
scas
inc
sub
push
jp
bound
cwde
not
cmc
das
iret
mov
xchg
xor
adc
cwde
cdq
cld
adc
pop
mov
outs
add
mov
sbb
push
jne
dec
(bad)
jb
jbe
dec
push
and
push
aas
mov
push
lahf
aam
sub
mov
mov
cmps
popa
xchg
lock
lods
mov
lods
jnp
popf
dec
je
or
out
pop
hlt
aas
xor
add
ins
inc
push
cli
clc
jb
repnz
pop
pop
out
rcl
cmps
jae
(bad)
repz
jne
inc
xor
sub
push
icebp
inc
jg
add
cmp
lahf
sti
cmp
loopne
mov
out
and
fdiv
sbb
repz
push
cmp
sbb
nop
pop
pop
test
cs
loop
jae
sbb
or
test
or
adc
jae
xchg
add
xchg
shr
adc
jno
test
rcr
or
xor
icebp
cmp
fcom
inc
cmp
push
icebp
popf
enter
jo
jg
fmul
lods
xchg
mov
jmp
loope
jbe
mov
loopne
cmps
aam
clc
inc
outs
fwait
shrd
sbb
fnsave
cli
or
mov
xchg
or
or
retf
icebp
in
mov
inc
movs
sahf
and
lds
pop
xchg
mov
pop
fs
pop
push
push
push
out
mov
fiadd
(bad)
fadd
mov
add
(bad)
test
jae
cmps
adc
out
sub
icebp
inc
pop
dec
popa
push
enter
dec
aaa
sbb
mov
mov
mov
mov
popf
or
retf
sub
xor
mov
push
jecxz
std
push
dec
dec
dec
int
aaa
(bad)
in
mov
fs
retf
jmp
shl
aad
std
mov
xlat
push
push
and
sub
xchg
test
in
mov
and
or
push
(bad)
and
imul
loopne
inc
sbb
jmp
fdivr
shl
lds
sub
jno
xchg
sub
std
inc
repz
inc
imul
call
sub
add
add
sbb
push
std
mov
nop
call
mov
fwait
jle
bound
in
nop
xchg
xor
xlat
ror
ja
mov
dec
int3
pop
sub
sub
fist
adc
xlat
loopne
mov
jp
retf
jmp
mov
jmp
dec
sahf
and
in
test
inc
xor
dec
fisubr
inc
outs
xchg
or
mov
push
jge
add
rcr
mov
sub
ins
sbb
jmp
movs
jbe
inc
sti
xchg
and
(bad)
outs
dec
xchg
stc
push
rep
sahf
mov
add
fild
cmp
jbe
jae
cmps
sbb
jnp
and
lds
jb
pop
dec
push
outs
jg
mov
jnp
pusha
aaa
sub
gs
inc
fcom
ins
mov
push
jmp
pushf
mov
adc
aad
sbb
or
pushf
pop
pop
and
jle
mov
dec
into
js
outs
jnp
cmc
add
adc
test
adc
lods
adc
jge
mov
dec
lock
aas
nop
cmp
loope
dec
repz
fisubr
sbb
data16
rcl
mov
adc
adc
xor
test
lods
add
ret
mov
outs
inc
pop
or
aas
xlat
sub
retf
push
rol
ins
inc
mov
mov
push
pop
outs
imul
je
push
shr
mov
inc
movs
xlat
push
ja
imul
imul
and
inc
or
and
ret
aaa
jl
inc
(bad)
sbb
pop
jo
mov
sub
mov
push
inc
xchg
add
sub
int3
and
or
push
das
add
add
je
icebp
je
aas
cs
in
mov
mov
popw
xchg
jae
inc
or
cwde
not
pop
pop
mov
leave
mov
mov
aas
(bad)
jne
push
dec
xor
outs
mov
in
push
cdq
mov
push
xchg
cld
sub
idiv
mov
out
sbb
cmp
gs
mov
scas
outs
xor
and
jp
pop
mov
je
int
xchg
lahf
cmp
add
test
and
arpl
mov
rcl
xor
loopne
jae
mov
adc
xchg
xchg
fwait
xchg
gs
pop
ja
jo
sub
ins
add
pop
add
data16
xchg
push
gs
arpl
lahf
inc
or
jecxz
dec
mov
or
sbb
scas
in
lahf
dec
adc
mov
mov
mov
push
(bad)
dec
sub
jae
aaa
jnp
rcr
scas
inc
ss
arpl
xchg
fisttp
in
inc
mov
hlt
cli
retf
sub
xlat
sub
and
test
jnp
test
and
iret
jo
jno
dec
push
sbb
add
push
in
test
or
sub
outs
adc
jb
popf
ja
(bad)
mov
jno
fdiv
sbb
push
add
fcmovb
addr16
mov
daa
ins
xor
stc
jbe
sbb
inc
lods
outs
inc
inc
int3
fmul
lds
fdivr
ror
loope
inc
pop
inc
call
push
push
push
test
les
leave
out
bound
xlat
ja
aaa
push
pop
sub
fistp
xchg
sbb
inc
or
cdq
mul
inc
popa
rol
cwde
mov
popa
cld
inc
in
ret
jle
ror
pop
push
(bad)
shr
icebp
mov
fsub
shl
or
fidivr
sahf
stos
pop
xor
stos
sbb
rol
xor
loope
setbe
mov
sub
xlat
mov
and
cmc
or
or
loop
scas
movs
lock
sub
test
mov
xchg
inc
pop
sbb
bound
fcomp
aam
xor
push
jmp
and
jge
push
test
mov
pop
mov
jl
add
push
sub
pop
movs
push
out
xor
dec
xor
mov
xchg
fucom
mov
mov
inc
iret
rcr
and
call
push
mov
das
push
dec
push
or
ror
enter
pop
add
sub
fadd
retf
xor
or
pop
jg
xor
fnstcw
xor
and
sbb
cli
loop
xor
sub
lods
jmp
data16
pusha
std
enter
cmp
sub
and
cmp
test
push
push
int
mov
pop
mov
cmp
jb
mov
into
pxor
movs
dec
(bad)
sti
ss
mov
fadd
jno
pop
lahf
icebp
in
aam
push
out
imul
nop
pop
ins
jno
idiv
xor
pop
stos
(bad)
enter
std
(bad)
mov
fcom
jle
xor
bound
test
adc
out
mov
ss
in
pop
fwait
dec
jmp
jne
inc
out
rol
cmp
mov
mov
jb
ss
out
jl
enter
sbb
pop
jecxz
mov
stos
into
mov
inc
fld
das
fs
fimul
adc
lea
movs
xchg
sbb
lea
pop
sbb
pop
and
adc
mov
mov
pop
jmp
pop
(bad)
fwait
test
mov
out
xor
into
mov
repz
daa
add
inc
jns
cmp
and
cmp
inc
nop
enter
std
ffree
push
aas
sub
scas
add
push
adc
sbb
adc
jmp
jmp
clc
pop
add
jbe
sbb
jle
mov
or
xchg
cld
inc
mov
adc
stos
mov
and
mov
cmp
jge
inc
pop
sub
push
xchg
fld
adc
mov
sub
xchg
(bad)
pusha
inc
js
stos
jmp
push
xchg
adc
scas
inc
retf
sub
rcr
and
jl
mov
dec
push
xchg
lahf
retf
hlt
popf
jno
mov
dec
jnp
jmp
mov
pushf
dec
pop
das
aad
inc
push
jae
aas
fbld
cmp
dec
loopne
mov
out
cld
xchg
adc
sub
test
cld
pop
sbb
adc
xor
dec
test
mov
jae
xchg
aam
stc
jns
cmps
mov
stc
pushf
add
stos
jb
push
imul
or
int
or
xor
(bad)
int3
pop
push
xchg
inc
inc
das
jnp
dec
cs
jbe
dec
mov
mov
cld
inc
pop
add
(bad)
call
loopne
imul
div
lfs
adc
popa
repnz
int
or
mov
add
lahf
inc
aam
add
mov
mov
jns
sub
cwde
pop
jae
js
lahf
adc
pop
ret
(bad)
mov
add
outs
fs
(bad)
mov
imul
fidivr
xor
push
xchg
jo
xchg
mov
outs
push
mov
mov
adc
stos
mov
lahf
mov
xlat
(bad)
ja
ds
pop
in
mov
cmp
cmp
ret
dec
clc
(bad)
outs
inc
rcr
xor
mov
push
add
and
pusha
jmp
sahf
dec
push
jnp
ins
push
aam
xchg
and
bound
popa
repz
lock
daa
ss
movs
sub
adc
(bad)
and
push
dec
sahf
test
idiv
fistp
jns
pop
je
pop
jne
into
push
sbb
popf
daa
fild
mov
outs
inc
data16
xor
call
pop
popa
dec
push
sub
loopne
lods
add
xor
(bad)
push
push
movs
cmp
jl
and
xchg
fnstsw
or
mov
sbb
mov
pop
dec
inc
mov
test
adc
out
mov
lds
imul
jmp
add
or
xchg
mov
retf
test
dec
std
mov
jnp
lahf
jbe
mov
inc
pop
and
pop
add
adc
scas
pop
mov
dec
loopne
(bad)
sub
sub
cmp
mov
int
lock
adc
lods
sbb
or
mov
push
mov
ja
daa
test
pop
aaa
sub
xchg
(bad)
adc
dec
call
pop
pop
mov
dec
inc
sbb
ror
leave
and
jns
xchg
push
mov
and
push
inc
push
data16
inc
mov
(bad)
inc
xchg
and
adc
retf
sahf
enter
shl
sub
nop
jecxz
or
xchg
inc
cmp
xor
xchg
pop
(bad)
cmp
cmc
stos
sbb
je
js
pop
dec
ja
inc
dec
sbb
add
int3
sub
jae
aas
inc
cs
mov
push
gs
in
jo
pop
xor
mov
xor
arpl
das
fs
lds
mov
push
cmp
fld
lods
xchg
or
out
mov
mov
aaa
jnp
push
dec
push
aaa
mov
ror
mov
imul
es
jo
push
mov
pop
pop
adc
fwait
popa
sub
push
cmp
shr
(bad)
lds
dec
mov
dec
not
aam
mov
gs
or
push
repz
jg
sbb
jo
pop
addr16
es
inc
sbb
pusha
jno
hlt
pop
popa
rcr
fsub
adc
aas
push
mov
stos
js
mov
fadd
mov
mov
push
push
push
mov
xchg
cmp
enter
add
push
cmps
dec
loope
nop
jle
jmp
mov
fidiv
xchg
pop
push
test
push
aas
dec
repnz
fadd
adc
jo
std
jbe
popf
inc
mov
pop
mov
mov
mov
bound
mov
sbb
packuswb
xchg
scas
outs
dec
cmp
cmps
cmp
sub
cdq
push
loopne
bound
pusha
pop
data16
mov
mov
not
sar
sbb
sub
sub
data16
stc
dec
out
out
in
add
add
int3
dec
jne
movs
pop
arpl
or
inc
scas
aaa
cld
sub
mov
pop
sahf
cmp
pop
push
jmp
jmp
movs
sbb
stos
nop
lods
pop
mov
scas
cld
enter
pop
daa
pop
dec
mov
pop
mov
gs
(bad)
mov
push
and
fs
enter
aad
mov
shl
sub
scas
nop
clc
adc
xchg
jl
mov
mov
xor
inc
xor
inc
mul
jno
imul
into
popf
lock
in
pop
or
test
outs
loopne
push
not
movs
adc
jmp
jmp
fstp
cs
pop
fwait
pop
jl
cmps
inc
repz
sub
add
mov
fst
pop
jae
pusha
mov
adc
jge
hlt
imul
adc
sbb
lea
(bad)
jle
xchg
push
clc
lahf
mov
call
jno
sbb
sbb
xor
ret
(bad)
adc
sbb
int3
aad
test
xchg
or
out
bound
loope
adc
lods
int
out
adc
aaa
jne
sti
and
push
adc
adc
pop
hlt
pop
xor
daa
fidiv
aad
add
mov
int3
xchg
mov
dec
stc
inc
lds
xchg
or
xor
loop
inc
ds
jb
fstp
lds
mov
fdiv
cmp
ja
dec
xchg
pop
cmp
adc
retf
jecxz
dec
imul
jo
sub
repz
addr16
mov
cmps
and
popa
and
cmp
pop
cmp
inc
jmp
aad
lea
pusha
push
add
push
stc
inc
push
stos
test
(bad)
scas
xchg
mov
shl
xor
xlat
cmc
dec
mov
mov
mov
or
or
dec
mov
mov
jle
shl
mov
mov
aaa
fs
adc
sub
pop
dec
pop
add
mov
es
adc
je
jae
add
inc
jmp
outs
fwait
xor
ins
pop
push
and
repnz
ja
mov
inc
ds
push
inc
mov
outs
or
test
adc
inc
ficomp
jmp
cld
cli
fsubp
mov
mov
mov
jo
fld
imul
sbb
jmp
je
mov
fxch
add
mov
into
call
xchg
popa
sub
mov
dec
mov
sub
and
mov
lea
ret
sbb
sub
fs
bound
dec
and
xor
in
inc
into
aam
mov
xchg
aaa
inc
cdq
pop
nop
and
inc
or
mov
imul
fs
add
jbe
fstp
mov
cld
push
mul
mov
mov
jbe
int
push
pop
and
(bad)
push
aad
sub
adc
inc
cmp
and
loope
mov
jecxz
shl
xchg
rcr
jnp
repnz
mov
fild
jg
mov
pop
mov
pop
retf
retf
repz
and
call
sar
fs
cmp
mov
scas
fstp
fs
push
inc
mov
call
mov
nop
add
lahf
inc
ins
ds
inc
cwde
pop
sbb
fdivr
(bad)
icebp
or
les
mov
dec
inc
cmp
push
arpl
mov
mov
lock
repnz
adc
push
mov
mov
je
in
xor
unpcklps
add
into
dec
and
loopne
rcl
dec
mov
push
and
pop
jmp
mov
xor
dec
int3
add
call
pop
repnz
stc
adc
mov
mov
or
push
shl
les
push
pop
stos
ds
push
daa
xchg
jecxz
setle
xor
clc
ins
xchg
(bad)
mov
icebp
cmp
xor
les
loope
xchg
imul
popf
pusha
lock
pushf
cwde
hlt
icebp
mov
jae
ss
mov
loope
in
ins
adc
jp
xor
inc
neg
mul
add
jne
mov
jno
lea
aad
xor
mov
(bad)
xchg
mov
nop
or
imul
sahf
sbb
push
jl
adc
add
dec
pop
xor
cmp
lods
push
push
pop
jne
and
std
mov
inc
jb
call
add
fsubr
xchg
mov
stos
xor
imul
pop
clc
pop
out
sbb
dec
cmp
inc
xchg
push
cmp
inc
adc
call
jg
add
icebp
dec
or
sbb
jb
mov
aad
pop
call
out
sub
adc
adc
jle
cvttps2pi
lods
out
rol
or
fcmovne
inc
(bad)
fisttp
mov
mov
test
sbb
das
in
sub
stos
sub
les
aam
loop
mov
aad
dec
pop
dec
cmp
cmps
rcr
mov
test
sub
xchg
rcl
adc
mov
fadd
pop
ins
mov
dec
(bad)
sub
xchg
sbb
pusha
inc
fbld
arpl
push
adc
fwait
mov
xchg
stos
adc
ficom
int3
xor
push
lahf
add
cmp
ins
sbb
mov
int3
jbe
sbb
jne
(bad)
(bad)
stc
aad
cmp
xchg
fdiv
movs
sub
arpl
cs
adc
fcomip
jns
call
and
std
and
aam
cmp
aaa
mov
dec
or
(bad)
sub
fcmove
inc
call
jns
inc
ret
dec
iret
xchg
(bad)
ds
daa
icebp
mov
cmps
sbb
or
jge
fsub
aaa
imul
gs
fidivr
shr
mov
mov
jge
je
int3
cmp
pop
bound
outs
xchg
inc
mov
cmps
push
jns
inc
les
into
imul
into
and
jae
mov
loop
pushf
aas
or
xchg
mov
sub
jne
xor
cli
ins
adc
imul
cli
adc
or
inc
jb
sub
inc
(bad)
or
dec
inc
cmp
ret
jne
jnp
(bad)
cs
dec
and
mov
(bad)
xor
sbb
push
pop
pusha
dec
xor
icebp
push
sub
fadd
out
inc
sub
test
ss
ins
jl
repz
xor
dec
jmp
push
cmc
pop
add
or
mov
arpl
call
cmp
push
sub
jns
jns
int
not
lock
xor
cmc
inc
push
lods
enter
enter
inc
pop
icebp
iret
outs
ja
enter
add
arpl
push
(bad)
fucomp
int3
jge
push
xor
loop
fdivr
test
gs
movs
dec
sub
jp
enter
shl
(bad)
test
push
cwde
in
push
popa
inc
cdq
pop
pop
outs
lock
popf
fidiv
out
mov
push
hlt
xor
ja
outs
add
sbb
movs
or
add
xor
push
popf
mov
imul
xchg
ja
js
(bad)
in
sbb
pop
test
push
adc
cmp
ret
push
push
mov
scas
xchg
iret
add
lods
add
fsub
pop
pop
jg
jg
mov
jnp
pmullw
pop
jmp
ja
icebp
or
cmps
jg
mov
outs
pushf
or
(bad)
std
jl
dec
dec
inc
out
cli
mov
adc
sbb
cmps
ins
lds
arpl
adc
or
mov
nop
xchg
jp
retf
sbb
inc
in
sbb
pop
cdq
xchg
stos
out
mov
xchg
xlat
fiadd
inc
xchg
cwde
icebp
fs
jb
aam
lock
push
or
xchg
push
sub
and
(bad)
xlat
rcr
pop
sbb
push
mov
add
sahf
dec
mov
scas
adc
fsubr
nop
imul
mov
stos
je
dec
mov
arpl
bswap
ja
fcos
fiadd
fsubr
mov
(bad)
mov
pop
jge
cwde
xor
lods
stos
jl
add
aad
in
cwde
mov
fisubr
cmp
xchg
stos
jae
push
cld
xor
out
leave
xchg
push
daa
aas
loopne
adc
or
stos
outs
repnz
loope
arpl
xlat
and
xor
daa
pop
cmp
iret
fs
loopne
gs
arpl
retf
lods
stos
fsubrp
add
dec
test
push
test
fcomip
push
push
or
cmp
and
mov
add
mov
push
in
jp
add
int3
iret
pop
mov
mov
in
mov
(bad)
mov
mov
mov
sbb
lock
movs
(bad)
mov
jae
(bad)
stos
ror
push
and
enter
xchg
cmp
sub
jle
lds
outs
ret
dec
or
(bad)
clc
jb
sbb
or
add
mov
cmp
xor
jns
pop
mov
xchg
stc
leave
jecxz
je
sub
int3
(bad)
jl
test
adc
test
mov
pop
or
and
jg
xor
push
cmc
loop
cmp
call
out
sbb
es
popa
sub
out
add
or
test
or
cmp
stos
(bad)
fwait
in
mul
mov
mov
daa
xchg
(bad)
and
push
repz
in
dec
fisttp
adc
mov
xchg
bound
push
dec
test
mov
sub
adc
ss
shr
inc
mov
test
scas
in
mov
fisubr
out
dec
scas
sbb
dec
adc
fbld
jp
fadd
sub
xchg
or
fidivr
mov
sbb
jno
jne
out
mov
push
es
jecxz
pop
cmp
push
(bad)
push
xor
mov
sub
xchg
xchg
leave
nop
in
and
nop
adc
dec
sbb
or
pop
sub
lahf
jae
fwait
jo
add
sbb
ret
xchg
lock
xchg
jle
mov
fisub
inc
retf
(bad)
outs
int
addr16
ret
mov
popf
cmc
push
mov
(bad)
sahf
jl
lahf
mov
cmps
dec
stos
mov
ja
xor
jmp
out
adc
fstp
push
or
test
add
dec
sti
loope
jp
movs
arpl
ret
jo
icebp
dec
adc
xor
pusha
xchg
xchg
cmovs
movs
push
or
(bad)
jnp
pusha
and
test
add
rol
push
xor
jle
mov
lock
adc
dec
out
sbb
pusha
(bad)
int3
mov
(bad)
loop
inc
and
ins
inc
jnp
sub
add
or
sub
sbb
pop
xchg
inc
and
lds
arpl
inc
xchg
or
mov
or
out
push
sti
mov
xchg
repz
outs
jnp
dec
mov
das
xchg
aam
mov
popa
js
adc
jmp
sub
shr
xchg
push
ds
or
cmp
add
popf
inc
sub
outs
cmp
xchg
adc
push
int
push
and
sti
out
jbe
mov
stos
sub
fisub
or
mov
pop
add
loop
iret
mov
pop
and
cli
es
mov
daa
int
mov
push
inc
sbb
inc
pop
loop
outs
sbb
xchg
mov
inc
mov
cli
lahf
sbb
cld
lods
and
cmp
sub
loopne
movs
push
cs
leave
idiv
adc
push
(bad)
jecxz
sub
addr16
mov
xchg
dec
fst
add
adc
stos
inc
sbb
adc
test
sub
or
ins
inc
into
shl
iret
in
es
aam
mov
dec
arpl
mov
cmp
and
out
jg
adc
mov
out
adc
je
jg
(bad)
mov
mov
clc
cdq
rcr
aaa
pop
pop
cdq
jle
adc
popa
adc
sub
pop
mov
xchg
mov
cmp
dec
sbb
sbb
cmc
adc
push
test
xor
jle
cmp
std
xchg
test
cwde
dec
call
dec
xchg
inc
adc
inc
and
xchg
lock
inc
or
mov
js
dec
sbb
ret
out
pop
sub
lds
jae
ret
sub
dec
pop
jb
sbb
sbb
aam
mov
popf
xchg
stos
out
pushf
outs
fcom
movs
in
push
in
fdivrp
inc
jl
inc
cli
in
push
cmp
sub
push
ret
mov
mov
mov
pop
mov
mov
leave
sub
std
hlt
jmp
in
(bad)
cdq
ret
(bad)
push
in
add
or
sub
cmps
retf
pop
stos
sub
mov
mov
cwde
out
out
push
fldenv
sub
test
mov
call
jp
xchg
(bad)
fs
pop
xor
cmp
mov
in
push
scas
inc
xor
outs
adc
sub
jnp
dec
xchg
jns
ins
outs
dec
jmp
lea
push
outs
sub
pop
ss
ins
add
or
sub
add
cmc
and
in
add
icebp
jne
lock
sahf
daa
push
stc
push
cs
out
fcmovb
(bad)
aad
push
xchg
xor
enter
mov
movs
mov
inc
adc
jns
jecxz
arpl
xchg
stos
or
test
cmp
and
loopne
into
push
repnz
jb
retf
retf
mov
scas
rcl
and
loop
movs
pop
pop
arpl
test
mov
xchg
adc
fmul
mov
mov
xor
out
add
fnstsw
pushf
pusha
sbb
scas
cmp
mov
mov
mov
enter
dec
mov
fistp
lods
and
icebp
jo
cdq
and
inc
fsubr
adc
popa
cmp
movs
(bad)
aam
or
lahf
dec
bound
repnz
mov
je
loop
test
adc
ss
mov
jo
push
dec
push
xchg
std
inc
cli
in
int
js
xor
loopne
mov
ds
dec
outs
dec
test
jne
mov
shl
xchg
pop
into
xor
fisub
mov
std
shr
js
push
xchg
jmp
inc
cli
add
cmp
into
sti
pop
pop
pop
fistp
inc
and
and
sti
int3
retf
test
pop
jg
aad
jbe
xor
out
mov
arpl
cmp
scas
call
mov
repnz
or
adc
in
sbb
or
pop
sbb
out
fistp
add
clc
fstp
add
add
add
fld
mov
xlat
or
push
mov
sub
pop
(bad)
outs
xor
test
mov
inc
in
mov
sbb
movs
xor
inc
repz
push
sbb
mov
fld
loope
push
dec
fs
dec
fistp
leave
movs
push
dec
sti
sbb
popa
mov
mov
mov
div
aas
jns
in
mov
out
out
pop
jge
test
dec
add
pop
addr16
ret
add
xor
mov
call
push
stos
fs
inc
fmul
popa
daa
xchg
jg
imul
mov
lahf
ins
ins
and
inc
repz
sub
mov
sbb
sub
retf
pop
loopne
lods
mov
pop
mov
(bad)
cmps
out
xor
addr16
arpl
cs
mov
test
xchg
stos
out
cmps
sub
(bad)
pop
xchg
inc
xor
addr16
lods
ins
sbb
jle
into
sub
adc
mov
call
push
or
ret
cmc
and
sbb
mov
xlat
jbe
lods
cmp
mov
dec
(bad)
mov
xor
cmp
fcmovnu
out
js
js
repnz
lds
xchg
std
mov
xor
aas
(bad)
ret
leave
sbb
test
cmps
leave
sbb
sub
jb
cmp
stc
fsub
movs
jg
mov
rol
mov
imul
mov
mov
push
rcl
push
or
(bad)
call
or
xor
loope
stc
sub
scas
out
in
cmp
mov
sub
into
mov
jle
dec
shl
call
fnsave
mov
cld
loopne
add
aaa
cld
imul
lods
in
and
cmp
jb
and
add
adc
fdiv
adc
cmps
vcmpss
clc
pushf
push
mov
mov
and
lods
pushf
(bad)
jne
add
aaa
or
aas
hlt
jne
push
add
inc
xchg
sbb
cmp
adc
or
repnz
fild
out
ja
es
int
adc
shl
xor
sti
bound
(bad)
aas
frstor
jl
mov
iret
xlat
pop
pop
xor
pop
nop
push
popf
pop
mov
call
pop
jge
ror
test
mov
sbb
adc
dec
push
arpl
loopne
xchg
xor
cmp
div
fs
test
jns
aaa
outs
mov
mov
sahf
(bad)
mov
and
push
adc
(bad)
lea
mov
fiadd
aas
add
outs
out
scas
inc
and
mov
daa
sub
cmps
sahf
xchg
and
dec
frstor
sbb
inc
mov
in
xor
cmp
xlat
sahf
pop
adc
xchg
pop
shl
pop
aad
pop
fsubr
not
fnstenv
enter
(bad)
and
pop
mov
test
cmp
mov
xor
ror
or
inc
pop
or
inc
sahf
fidiv
sbb
dec
sbb
test
lahf
call
jmp
adc
adc
pop
popa
imul
or
mul
scas
scas
call
sbb
inc
dec
int
xchg
adc
aam
movs
and
push
movs
stos
add
push
sti
xor
retf
inc
sub
stos
mov
clc
les
fld
cli
neg
sar
xor
fsubr
dec
lods
push
xor
das
pop
pusha
lods
rcr
xchg
rep
mov
sti
or
lds
cmps
out
sub
lea
dec
mov
test
and
jecxz
out
push
jbe
cmp
jp
mov
pop
xchg
xor
mov
pop
cld
les
push
aad
xchg
inc
dec
cmp
sbb
sahf
pop
stc
retf
jle
fidivr
mov
sbb
cwde
add
dec
sub
ret
jno
mov
mov
jmp
leave
and
mov
bnd
mov
cmps
pop
cmc
dec
shl
jae
pop
sbb
and
inc
in
pop
and
add
int3
mov
xchg
pop
mov
int3
in
(bad)
lea
or
pop
xchg
mov
jmp
mov
gs
adc
or
ret
pop
dec
and
add
xchg
call
push
adc
push
mov
mov
jae
in
mov
pop
pusha
cmp
ret
movs
or
shr
repz
aam
ins
jmp
cmp
jp
or
jnp
sub
mov
or
mov
and
test
in
sub
jns
inc
jle
jp
push
add
js
pop
push
jecxz
mov
mov
and
adc
pop
cmc
cld
test
jnp
stc
(bad)
pop
xchg
mov
xor
dec
lea
add
lea
cmps
xchg
hlt
pusha
xor
mov
bnd
ss
lods
shl
rol
xchg
xchg
pop
and
xor
fdiv
xchg
jae
ins
call
sub
(bad)
xchg
retf
mov
rep
movs
jp
pop
outs
es
xor
jnp
fidiv
stc
sbb
imul
mov
ins
ja
out
sbb
(bad)
popf
mov
imul
stos
in
repz
std
imul
push
mov
mov
lahf
xchg
mov
rcl
out
sbb
rcr
loop
(bad)
cld
or
jp
pop
not
ficom
cmc
ror
cmps
mov
aaa
enter
pop
ret
sub
fsub
lock
mov
scas
pop
icebp
push
xchg
mov
jns
cmc
adc
jg
fbstp
cmp
rcl
dec
mov
cmc
inc
icebp
jg
es
arpl
les
jmp
and
mov
mov
inc
pop
cwde
push
stos
ins
sub
enter
xchg
imul
push
lahf
xchg
fs
out
or
pop
fisttp
js
xchg
mov
sub
cmc
rol
cs
add
inc
sub
lahf
outs
sub
lahf
outs
inc
mov
mov
cwde
arpl
xor
mov
sub
mov
nop
popa
dec
arpl
mov
xchg
(bad)
dec
push
sbb
jae
inc
xchg
sbb
jecxz
and
mov
enter
call
out
sub
retf
sahf
mov
js
jge
into
iret
stc
in
in
mov
fsubr
mov
arpl
inc
dec
jno
pop
xchg
inc
(bad)
pop
aaa
push
rol
(bad)
adc
icebp
je
and
pop
gs
call
or
mov
aas
fwait
adc
jnp
cmc
adc
xor
inc
js
sub
arpl
mov
stc
(bad)
repnz
shl
rcl
xrelease
mov
cmps
adc
mov
test
inc
aaa
mov
mov
add
sub
pop
(bad)
push
sbb
mov
repnz
gs
cmps
jns
xor
pop
ret
add
jne
mov
retf
std
pop
adc
mov
(bad)
stos
xor
fwait
rol
jo
sub
xor
pop
jle
sub
pop
and
dec
xchg
in
push
jmp
sar
stos
fwait
pop
push
test
shl
xor
fmul
xchg
dec
or
les
(bad)
data16
adc
pusha
in
push
sbb
jnp
lock
jae
push
pop
pop
add
mov
das
push
je
cmp
fadd
mov
mov
add
vpxor
sbb
mov
push
sbb
inc
loop
aam
sbb
xchg
push
movs
lds
into
sbb
mov
cmps
cmps
mov
xlat
sub
pop
pop
lahf
repnz
sub
xchg
pop
xor
push
sbb
jmp
and
mov
adc
and
popa
test
mov
es
out
lods
ins
sub
jns
push
out
jno
jmp
and
daa
or
cmps
cdq
mov
cmps
pop
cmp
stos
loop
cs
loopne
jb
push
xchg
adc
stos
sahf
jmp
mov
ret
inc
lock
div
xchg
jnp
stos
mov
es
xchg
sub
jg
rol
out
cmp
mov
pop
inc
sbb
xlat
push
add
aaa
mov
adc
mov
push
push
jle
out
sub
jbe
hlt
imul
dec
aaa
cmp
and
xlat
ds
jns
cmp
or
fnsave
test
dec
inc
std
popf
fnstcw
fstp
dec
ins
loop
xlat
sar
cli
retf
cmp
xlat
mov
add
arpl
mov
movs
pop
fbstp
or
push
or
sbb
sub
push
daa
stc
clc
rcr
mov
jae
add
fild
call
aaa
adc
push
clc
enter
xchg
loopne
and
rol
test
(bad)
repz
enter
cli
adc
sti
mov
jns
loope
add
in
int
enter
pop
pop
mov
aad
add
fcomp
outs
leave
and
int
mov
ds
dec
fistp
imul
ins
adc
and
enter
jb
pop
in
push
add
or
pop
xchg
popa
dec
sbb
add
sbb
loop
pusha
es
je
add
mov
ret
mov
lock
pushf
ror
pop
adc
or
mov
dec
xchg
int
rcr
das
sahf
cmp
pop
call
cmp
(bad)
fdiv
test
test
ror
pop
inc
mul
mov
xor
add
ror
cwde
int
xor
push
dec
dec
jp
xchg
movs
xor
daa
cli
repz
xchg
mov
popf
push
push
push
lock
xor
or
das
mov
fistp
lahf
arpl
lods
cdq
cmp
xlat
inc
call
loopne
push
scas
mov
xor
mov
mov
loope
dec
pop
test
cdq
jmp
fdiv
push
xor
adc
pop
adc
pop
xor
es
mov
mov
stc
or
jns
sbb
sub
fidiv
scas
jmp
mov
mov
lea
mov
fprem1
adc
cmp
sbb
clc
xchg
xor
adc
or
das
or
mov
ret
xchg
neg
lock
inc
cdq
jge
pop
out
es
fsub
xor
leave
inc
cmp
ins
push
data16
fistp
xchg
(bad)
leave
jb
movs
js
mov
xchg
data16
loop
daa
fidivr
sti
xrelease
cmps
adc
mov
rol
sbb
inc
push
pop
cmp
jns
inc
popf
ss
fnsave
and
add
sbb
or
mov
cmps
and
adc
jl
push
test
(bad)
cs
dec
or
cwde
(bad)
shl
out
cmp
or
jo
push
xchg
out
push
cli
inc
jnp
xchg
cmp
popw
cmps
dec
lods
ss
jge
in
mov
adc
pop
adc
bnd
arpl
not
cmp
mov
or
fwait
imul
pop
lea
adc
int
test
sbb
push
mov
addr16
cmp
mov
enter
sbb
pop
call
mov
xchg
out
out
das
lods
adc
mov
adc
std
retf
test
aas
mov
fistp
mov
mov
xchg
or
sbb
inc
push
test
fstp
adc
sti
aas
mov
xchg
sbb
xchg
movs
xchg
and
push
push
push
out
push
not
call
jmp
out
jecxz
add
in
mov
mov
cmp
enter
jle
popa
jmp
cmps
arpl
xchg
inc
fimul
aaa
or
jl
adc
ret
jmp
ficom
sbb
jb
mov
jbe
loope
mov
(bad)
cmp
sbb
shr
mov
outs
stc
push
mov
add
xor
dec
aad
sub
ins
retf
dec
and
cmps
mov
mov
arpl
cmp
ss
cmps
pop
scas
xchg
jecxz
pop
les
jl
cmps
(bad)
nop
xchg
ds
push
sbb
outs
ret
sub
in
adc
jb
std
adc
mov
out
cmp
into
neg
xor
sahf
out
jae
or
in
ret
cmp
dec
mov
out
jmp
adc
repnz
std
je
jl
adc
js
inc
cdq
imul
call
test
movs
dec
fisub
(bad)
jmp
mov
pop
loop
aaa
shl
push
inc
std
mov
xor
aaa
dec
adc
pop
push
jg
dec
jp
jns
imul
push
data16
loope
jg
pop
add
push
xchg
cwde
mov
inc
push
mov
mov
cdq
or
mov
sub
jg
test
ret
or
loopne
push
ret
mov
popa
sub
je
shr
or
sbb
push
jns
xchg
lds
ror
(bad)
rcl
pop
fucomip
imul
pop
scas
jmp
jbe
push
cmp
xchg
xor
idiv
fbstp
mov
call
inc
lods
or
push
ja
cmc
mov
pop
mov
cmps
loope
test
fs
retf
call
push
xchg
jl
xor
mov
das
push
or
dec
dec
jae
jne
add
push
cdq
xchg
mov
sub
cmp
fadd
repnz
div
adc
pop
das
test
pop
lods
je
ins
jne
xchg
out
(bad)
and
jb
sub
push
pusha
xchg
xchg
pop
sub
inc
adc
xchg
pop
push
rcl
jge
xchg
ins
addr16
adc
cld
pop
les
add
and
test
add
mov
dec
adc
(bad)
out
call
sbb
dec
int
movs
fimul
dec
mov
mov
cli
or
int
ds
ins
out
loope
stos
jecxz
pop
sub
daa
mov
je
jb
(bad)
pop
sbb
sub
push
pop
cmps
adc
cmps
push
sub
cwde
pop
adc
repnz
retf
mov
mov
daa
(bad)
adc
mov
aam
(bad)
or
aaa
scas
ins
cmps
or
aam
int3
sbb
call
push
ror
repz
inc
movs
test
sbb
and
mov
jns
test
jmp
ficom
scas
dec
loope
dec
enter
cmp
aam
pop
inc
cwde
out
dec
hlt
movs
cmp
fsubr
adc
xor
mov
scas
sbb
div
xchg
call
aam
push
dec
add
push
mov
pusha
popa
jp
je
mov
pushf
sahf
stos
sbb
aaa
add
cdq
add
adc
pop
pop
and
out
jne
mov
jb
outs
pop
or
or
inc
push
in
lods
jae
and
dec
(bad)
cmp
fidiv
pop
movs
or
mov
mov
(bad)
pushw
push
or
mov
mov
test
push
cmp
dec
pop
std
jle
xchg
jns
loopne
imul
int
mov
mov
mov
or
sub
fs
(bad)
jl
mul
push
push
lds
xchg
dec
mov
sub
into
xchg
popf
js
pusha
out
int3
movs
retf
ret
push
push
int
add
ins
mov
cmp
cmp
fistp
sbb
popa
sub
inc
push
fisttp
cmp
movs
mov
push
js
lea
outs
xchg
jl
leave
xor
gs
mov
mov
push
push
push
shl
pushf
ja
sbb
ins
dec
push
or
movhlps
and
nop
into
dec
pop
inc
jecxz
jle
test
aad
shl
jo
pop
mov
fsub
loope
jo
stos
sar
aaa
push
mov
mov
inc
cmc
ror
push
(bad)
xchg
clc
mov
sub
arpl
cmp
mov
ficomp
or
aam
cmp
shr
pop
sub
pop
jl
imul
sbb
xchg
mov
or
adc
sub
jle
push
movs
iret
rcr
out
xchg
fisttp
mov
or
out
xchg
stos
(bad)
stos
enter
pop
push
pop
add
push
and
mov
movs
(bad)
je
add
aaa
cmps
test
mov
jns
outs
add
sbb
(bad)
sub
movs
movs
bound
shl
test
or
push
outs
js
int3
jo
aam
div
fld
aam
cmp
mov
test
and
pushf
mov
dec
les
xor
or
adc
mov
nop
inc
push
les
sbb
and
pusha
nop
repz
jo
enter
or
xabort
and
push
mov
ss
in
cmp
shl
mov
enter
cmp
sub
xchg
pusha
cmp
xlat
arpl
mov
dec
cmp
mov
out
sub
pop
push
es
lock
push
push
movs
ins
cdq
lock
add
sbb
mov
push
jo
dec
hlt
xchg
sub
sub
adc
adc
out
add
xor
shr
jb
pop
andnps
cmc
and
repnz
(bad)
sbb
ins
test
hlt
sbb
jl
mov
fnstsw
xchg
std
cmp
(bad)
out
and
jnp
xor
xchg
or
push
test
pop
ss
sar
cmp
std
and
scas
call
adc
cmc
data16
xchg
jmp
lods
inc
cmc
aas
pop
sbb
sub
mov
mov
jne
mov
dec
hlt
mov
inc
dec
push
jmp
sar
jmp
and
xchg
push
and
mov
or
mov
ret
fdecstp
lods
mov
test
in
stc
cmp
fistp
mov
mov
js
push
jge
mov
pop
mov
shr
xchg
(bad)
js
push
pop
call
test
add
fwait
or
push
scas
call
fwait
lods
jne
fmul
(bad)
cmp
pop
in
out
jns
adc
imul
mov
sbb
push
nop
je
mov
lds
pop
shl
mov
xchg
pop
clc
and
mov
ss
movs
nop
jecxz
test
cwde
bnd
add
lods
(bad)
dec
clc
outs
jl
dec
int
cmp
shl
mov
dec
jle
push
fsubr
scas
xor
dec
pop
test
push
call
shr
bound
arpl
mov
inc
and
int3
retf
fisttp
fisub
in
sub
mov
and
imul
sbb
enter
or
inc
aad
jmp
(bad)
mov
imul
fdivr
rcr
mov
outs
push
jmp
mov
fstp
addr16
xchg
fsub
dec
hlt
jns
fidivr
push
cmp
out
sub
jo
iret
xchg
sbb
retf
iret
sub
loop
int
fidivr
push
(bad)
mov
scas
or
xchg
idiv
xor
mov
mov
inc
ins
aad
sub
sahf
jno
xor
fnstsw
repnz
gs
hlt
icebp
(bad)
sub
inc
jle
popf
xor
jecxz
jno
mov
push
popf
ins
or
mov
pop
or
and
add
in
jmp
loope
fisubr
rcr
test
out
shr
das
retf
jnp
mov
push
cli
and
js
rcl
and
fisttp
and
pop
sbb
and
ins
pop
imul
ror
xchg
xchg
movs
xor
jmp
cmp
mov
ins
fcmovb
pop
sub
or
pop
dec
(bad)
ret
aas
and
jo
mov
test
push
cmps
out
jle
pop
mov
mov
xchg
mov
sub
shl
mov
pop
ins
(bad)
mov
mov
cmc
js
jp
mov
dec
call
cmp
xchg
sub
div
cmp
mov
jbe
loopne
ins
or
inc
call
dec
repnz
add
movs
mov
mov
push
sahf
pop
int
sahf
(bad)
xor
lahf
popf
and
pop
mov
aaa
hlt
sbb
in
in
sub
into
lea
jecxz
and
xchg
int
repnz
push
loope
and
fwait
je
dec
mov
imul
ins
mov
cmp
cmp
mov
jnp
pop
mov
adc
in
cs
les
mov
jmp
mov
push
pop
enter
retf
enter
rcr
(bad)
or
mov
int3
inc
imul
mov
push
add
jp
ret
push
mov
push
ja
leave
mov
shr
mov
(bad)
int
pop
clflush
call
sbb
push
aad
sahf
pop
icebp
imul
mov
jae
jnp
mov
push
sub
imul
rol
shl
mov
mov
std
(bad)
aaa
into
cli
test
sub
mov
push
lods
std
sub
inc
add
frstor
cdq
out
or
jns
lock
cmp
fs
fcomp
cmp
fs
adc
push
push
fimul
dec
aad
jle
lds
dec
int3
es
dec
stc
repz
popf
xchg
ret
sbb
clc
mov
mov
cmp
jns
sub
adc
dec
and
or
push
mov
aaa
scas
adc
jle
sbb
xchg
push
pop
pop
add
nop
stos
jl
sub
out
pop
leave
jmp
lods
call
push
test
jmp
ins
mov
je
inc
add
mov
cld
fcom
cmc
int3
or
mov
jmp
lods
add
add
inc
in
(bad)
jl
xchg
enter
sbb
retf
sbb
std
ins
test
dec
into
jno
cld
and
ret
dec
jne
aam
movs
jns
xor
cld
or
jns
mov
mov
cmp
ins
aad
mov
fcom
cmp
clc
cmc
mov
ins
xor
dec
(bad)
dec
jbe
inc
mov
push
hlt
push
and
jp
lods
mov
sub
sub
xor
(bad)
cwde
xor
test
dec
mov
pop
xchg
push
loop
pop
jnp
std
les
out
rcr
xchg
xchg
ja
ja
jae
clc
dec
hlt
test
fdivr
jo
and
adc
or
repz
push
jae
imul
push
rol
scas
or
mov
mov
and
mov
fld
xchg
push
mov
retf
add
dec
or
outs
call
out
inc
mov
movs
or
cmps
out
and
mov
or
jb
pop
iret
jb
push
mov
jne
lods
adc
dec
inc
and
aam
call
xor
aam
leave
pop
imul
mov
and
ja
into
xchg
(bad)
jo
xchg
(bad)
jmp
(bad)
cmp
mov
cli
sbb
xor
push
je
aaa
ja
jns
popf
ins
adc
imul
jno
add
mov
jmp
les
repz
push
into
sub
cmp
and
xchg
repnz
inc
adc
aam
movs
sub
inc
fiadd
push
cmps
(bad)
aaa
and
es
(bad)
ins
mov
pusha
arpl
or
sar
enter
std
xchg
es
ja
push
sahf
sub
inc
dec
add
adc
test
push
cld
jl
xchg
gs
inc
cmps
rol
not
sbb
fstp
ins
inc
push
cmp
ja
aad
ds
sar
fnsave
jp
fwait
inc
test
shl
jmp
outs
xchg
loope
mov
fidiv
and
sti
cmp
rcr
mov
sub
sub
cmp
inc
push
jle
mov
add
jl
jp
xchg
dec
sar
scas
xchg
adc
out
dec
addr16
sbb
mov
or
jecxz
js
into
retf
loopne
fs
push
or
push
pop
ja
mov
mov
fcmovnbe
mov
and
adc
sbb
and
loopne
xchg
cld
iret
jp
popa
fwait
xor
push
push
cmps
cs
add
xchg
fwait
(bad)
pand
and
mov
add
push
mov
jg
movs
aam
lahf
cmc
or
std
pop
inc
shr
add
mov
outs
sub
loope
loop
sti
xor
test
pop
cmp
adc
cmp
xchg
or
call
lahf
fsubr
movs
add
loop
mov
sar
cmp
in
ret
jmp
mov
push
xor
fistp
cwde
rol
cld
fldcw
jge
jne
xchg
push
arpl
inc
fild
loopne
stos
icebp
mov
push
pop
into
add
les
out
or
xchg
adc
pop
stos
int3
movs
scas
out
jle
xor
imul
(bad)
or
lods
jecxz
cmps
add
xor
test
outs
pop
cmp
pusha
shr
and
popa
out
mov
xor
sub
loopne
mov
sub
jecxz
jno
xchg
push
xor
adc
dec
mov
inc
and
add
jl
cdq
(bad)
xor
jle
and
push
pusha
inc
push
or
lea
push
mov
jb
jl
push
add
push
cmp
mov
outs
or
adc
inc
je
push
push
pop
xchg
pop
stos
xsave
xlat
and
cmp
mov
jne
pop
pop
ss
sub
mov
dec
or
cs
mov
push
mov
fidivr
push
imul
mov
dec
imul
mov
mov
(bad)
adc
and
pushf
jbe
jp
inc
cmp
push
popa
mov
ficomp
int3
dec
inc
in
sub
enter
adc
fadd
dec
dec
call
shl
cmps
loop
cs
xor
(bad)
sti
or
addr16
fstp
fadd
stos
sbb
pcmpeqw
fcom
sbb
stc
lods
popf
mov
lods
sub
jb
stc
loopne
fld
push
out
js
arpl
jne
xor
adc
or
imul
arpl
and
aas
mov
sbb
arpl
mov
sbb
(bad)
mov
cmp
fisubr
iret
pop
rcpps
xor
into
dec
imul
push
push
test
mov
xchg
ret
pop
cli
push
repz
push
outs
leave
and
inc
ret
push
daa
and
jge
sar
mov
xchg
xor
dec
lods
out
sub
or
ret
int
cmps
and
push
scas
lds
add
jnp
dec
inc
inc
sbb
xchg
jge
mov
pop
shr
cmps
pop
mov
push
cmp
aaa
dec
and
out
es
sbb
cmp
je
popf
es
pushf
fcomp
out
icebp
nop
jne
xlat
mov
test
jo
stos
pop
mov
dec
(bad)
add
and
inc
call
scas
test
inc
xor
mov
xchg
fs
in
in
stc
cmps
data16
cli
lods
mov
popf
cmps
adc
sbb
cmc
adc
or
xlat
mov
jl
dec
xor
fwait
neg
xor
mov
push
jle
pop
inc
sub
sub
and
and
mov
add
mov
jo
sahf
fwait
inc
fcmovu
(bad)
fisubr
repnz
cwde
std
daa
push
in
dec
mov
dec
test
es
xor
sahf
sub
mov
sub
cs
add
sub
rcl
sub
jp
mov
das
(bad)
ins
jp
or
mov
xchg
fs
(bad)
mov
pop
sahf
cwde
out
pushf
loopne
call
adc
bound
xor
xchg
mov
dec
jmp
mov
or
fnsave
jecxz
stos
cmc
aad
sbb
out
fmul
sub
pusha
sbb
push
das
add
push
sbb
lar
xchg
rcl
lahf
daa
xor
jmp
out
mov
mov
push
push
jns
sub
sub
or
xor
xor
mov
adc
and
leave
cmp
xchg
sub
inc
fimul
pusha
stos
imul
adc
out
je
and
leave
inc
(bad)
in
lahf
dec
jecxz
and
sub
and
pop
cmps
mov
cwde
scas
ror
xor
aas
pop
pop
ss
movs
jecxz
call
jmp
adc
xchg
fsub
aaa
and
sub
jno
rcl
or
fisub
scas
daa
call
xor
ds
dec
sub
mov
ja
jp
lahf
adc
xchg
dec
sbb
push
xor
and
inc
shl
jl
jno
(bad)
sbb
jbe
dec
and
push
mul
push
add
(bad)
fbstp
inc
lea
out
call
cmp
pop
sub
dec
xor
ss
sub
stos
call
scas
call
loop
test
cmc
mov
jbe
imul
fbstp
pop
mov
and
jns
lds
ret
sti
or
repz
int
pop
(bad)
js
pushf
aaa
inc
add
stos
xor
jo
popf
pop
pop
movs
shr
inc
xlat
mov
mov
(bad)
clc
scas
stos
or
sahf
std
sbb
mov
or
mov
inc
out
in
mov
in
pop
mov
fstp
dec
mov
hlt
wbinvd
imul
retf
push
xchg
lods
jmp
(bad)
out
pop
pop
sbb
ins
lds
sahf
in
outs
outs
lds
pop
stc
pushf
push
jecxz
xchg
and
mov
ss
ficom
adc
mov
nop
pop
ja
leave
imul
pop
cmps
add
outs
repz
push
addr16
movs
mov
pop
pop
shr
xchg
push
jmp
cli
add
jno
sub
repnz
mov
push
inc
es
cld
pushf
mov
fs
push
mov
and
ins
add
and
es
sub
(bad)
les
jecxz
hlt
ret
loopne
in
lods
in
int
popa
mov
iret
outs
outs
outs
xor
or
mov
jns
jne
dec
sub
mov
and
or
push
mov
xor
(bad)
arpl
dec
lock
(bad)
cmp
pop
scas
sub
mov
jmp
sub
test
adc
cs
sub
adc
push
inc
pop
push
clc
inc
sbb
xor
adc
ds
jl
lea
nop
jg
dec
xor
jns
or
sub
fld
mov
xor
or
(bad)
clc
bound
ror
iret
ja
in
mov
clc
inc
add
add
push
or
mov
or
retf
ret
xchg
fisttp
je
not
pop
mov
sub
cdq
inc
aas
int
mov
xlat
pop
mov
mov
repnz
out
xchg
aad
mov
sub
fsubr
or
sbb
mov
movs
(bad)
xlat
mov
in
retf
int3
sti
push
ins
cmp
fild
mov
lahf
(bad)
jmp
mov
mov
xchg
xor
pop
dec
icebp
ss
scas
add
dec
out
pop
cs
mov
mov
es
cli
mov
or
or
xor
pop
xchg
pop
fst
pop
mov
fwait
bnd
cmp
out
pop
mov
aam
rcr
xchg
repz
imul
jle
in
jae
aas
fsub
push
sub
mov
push
mov
xor
jmp
inc
add
sbb
pusha
push
stc
sub
jge
cmps
add
fs
ins
and
ret
sub
xor
std
cs
jmp
shl
je
rcr
nop
fdivr
cmp
push
test
stos
jmp
cmp
inc
sar
shl
add
inc
xor
xchg
call
cmps
ins
ds
test
push
aad
in
push
add
and
xchg
js
enter
in
and
xor
imul
fwait
dec
ja
sti
js
out
mov
sbb
pushf
(bad)
push
rcl
pushf
xchg
je
mov
cmps
outs
push
push
mov
xor
mov
adc
lock
jmp
xchg
xchg
das
push
inc
fs
lock
add
inc
jmp
mov
inc
pop
sar
push
out
and
jmp
xor
cmp
cmp
call
loopne
or
imul
or
in
or
add
or
cdq
cld
pop
mov
sbb
push
mov
jecxz
fistp
xchg
(bad)
repz
repz
and
(bad)
jle
data16
add
js
in
nop
or
xor
retf
push
jge
adc
add
sub
adc
stc
jecxz
data16
imul
(bad)
ins
jae
js
xchg
(bad)
pop
adc
js
in
cdq
(bad)
and
mov
xor
rep
xchg
mov
ror
xor
mov
inc
jae
dec
adc
mov
adc
mov
dec
mov
outs
jns
div
scas
xchg
inc
dec
sub
pop
popf
fwait
hlt
sbb
mov
pop
dec
mov
imul
(bad)
cs
xchg
pop
fwait
or
jo
sub
mov
test
loope
sahf
jmp
sahf
cmp
jmp
xchg
nop
mov
jge
push
fst
stc
jo
fstp
shr
adc
repz
jle
(bad)
std
mov
sub
dec
ficomp
cmp
cmp
push
popf
fisttp
data16
inc
cmp
add
mov
retf
test
sub
mov
nop
hlt
xor
out
mov
test
pop
jno
aaa
ret
lea
mov
fwait
or
mov
sbb
push
cmp
inc
mov
ret
xchg
xor
aad
mov
inc
shr
jmp
imul
push
sbb
push
fwait
imul
jne
mov
cdq
rol
ret
push
or
ja
cmp
out
test
mov
pop
outs
adc
(bad)
adc
pop
xor
and
das
mov
mov
data16
cmp
inc
xchg
mov
sub
push
lahf
inc
mov
dec
pop
sub
stos
cmps
sbb
inc
jmp
rcr
cmp
int3
add
sbb
or
add
sti
fisub
test
fsubr
std
test
inc
inc
out
addr16
sbb
imul
mov
sahf
adc
sub
fadd
pop
mov
dec
adc
mov
and
shl
fisttp
xchg
pop
cmp
cvtdq2ps
cs
xchg
inc
aam
aam
mov
push
(bad)
sbb
mov
loope
cmp
mov
jno
xor
adc
das
clc
popa
inc
sbb
pop
in
es
xchg
fs
or
pop
mov
ret
sub
dec
cwde
pop
in
push
adc
out
sar
sbb
jmp
mov
inc
cdq
iret
loop
jae
cld
push
mov
xor
movs
pop
arpl
cmps
push
adc
mov
pop
das
mov
jge
xor
mov
out
pop
out
dec
sub
pop
pop
push
and
repz
xchg
out
push
movs
(bad)
(bad)
xor
out
pop
das
cli
inc
je
pop
xor
push
out
aam
and
lds
xor
mov
add
sub
test
jbe
dec
ficomp
loope
movs
stc
(bad)
lock
lock
lock
inc
outs
or
fnstsw
aad
ret
cdq
es
(bad)
and
jo
in
fs
scas
sbb
ffreep
xor
or
xchg
sub
or
and
out
ficomp
popf
mov
outs
sub
dec
shl
outs
mov
or
xor
xor
jmp
leave
sbb
mov
loopne
sahf
adc
les
pop
in
movs
outs
and
repz
adc
mov
in
bound
rol
mov
sub
sub
or
mov
leave
gs
mov
out
dec
popa
lea
pop
ins
add
mov
cmps
xchg
xor
or
leave
repz
pusha
dec
mov
adc
outs
stc
dec
(bad)
and
loope
in
and
cmp
xor
cmp
mov
jae
or
or
mov
ret
jbe
call
pushf
dec
sbb
mov
(bad)
lock
add
inc
dec
bound
push
movs
mov
stos
add
clc
adc
xor
cmp
js
inc
jge
push
or
jp
scas
dec
lods
int
js
loope
in
aad
ds
dec
mov
lock
mov
mov
bnd
add
fbld
fadd
inc
jo
mov
aam
fs
cmp
or
retf
ja
jp
popa
and
mov
add
xchg
sti
push
jg
les
sbb
xlat
movs
and
adc
jmp
dec
loop
and
xor
sbb
or
or
add
adc
jnp
pop
mov
scas
enter
scas
xchg
mov
or
cwde
pop
js
inc
jmp
sub
fs
push
es
xchg
sub
sahf
aad
xchg
lods
cmp
adc
cmp
xchg
fisttp
pop
leave
aas
cs
mov
imul
(bad)
cmps
test
int3
inc
cmp
fsub
out
fadd
sub
sub
fcom
sub
je
fcomip
test
out
inc
shl
adc
nop
cdq
aam
sbb
and
cmp
add
sahf
jmp
movs
fadd
loope
cmp
fwait
cmp
repz
or
inc
sbb
mov
dec
ret
fisttp
lods
les
add
psubsb
call
js
xor
dec
arpl
div
lea
cmp
cmp
sub
push
aas
loope
lock
push
mov
(bad)
scas
inc
add
test
mov
xchg
(bad)
mov
mov
clc
add
fsubp
jns
lds
dec
dec
imul
imul
stc
popf
mov
xchg
push
out
add
push
dec
cmp
add
out
jp
pop
adc
outs
mov
sbb
movs
push
sbb
lds
and
sub
inc
pop
fcom
adc
test
mov
lods
xchg
and
cs
pop
les
gs
mov
aaa
mov
es
jns
scas
mov
lock
adc
int
hlt
mov
lock
bound
shr
lahf
mov
call
pop
add
fs
adc
mov
icebp
call
xchg
jmp
scas
(bad)
pop
push
je
stos
cmc
je
cmp
adc
xor
adc
jl
fs
fst
dec
or
jbe
add
adc
sbb
and
scas
fs
out
sahf
scas
dec
retf
out
mov
mov
arpl
mov
xor
dec
scas
jmp
adc
push
jae
test
les
mov
test
cli
xor
dec
bound
cmp
pop
mov
sbb
mov
out
push
retf
retf
pop
pop
outs
and
cli
xchg
xchg
jbe
hlt
jle
push
sub
mov
xor
(bad)
mov
inc
fiadd
inc
rol
push
das
int3
cmp
push
push
cmp
mov
xchg
lock
clc
cli
add
idiv
lods
push
jge
aaa
iret
cs
enter
xchg
mov
dec
cli
inc
cdq
mov
mov
outs
fbld
mov
out
jecxz
mov
push
sub
sar
mov
or
int
fdiv
out
sub
mov
sbb
clc
sahf
dec
push
retf
sbb
and
fnstcw
cdq
jne
mov
xchg
jp
cmps
push
ss
push
add
das
pushf
out
call
inc
sub
fbld
and
retf
neg
sbb
lods
int3
and
(bad)
mov
call
call
lahf
push
jmp
sbb
stos
mov
loop
scas
or
stc
mov
push
push
test
(bad)
jne
push
cmps
xchg
sbb
inc
dec
jnp
sub
nop
popa
adc
into
int3
mov
cli
movs
fstp
pop
mov
inc
(bad)
mov
call
lock
dec
mov
dec
add
mov
adc
fxch
xchg
mov
fcmovne
mov
push
adc
and
sub
into
idiv
outs
mov
aaa
cmp
cmp
dec
mov
js
sbb
sub
pop
(bad)
inc
repz
jb
push
jae
ja
mov
and
scas
add
imul
cmps
shl
in
fsubr
mul
adc
movs
inc
fst
push
push
ins
sbb
in
int
mov
rcr
dec
addr16
xlat
pusha
xchg
lods
gs
arpl
int3
enter
fisttp
jno
xchg
inc
das
fwait
call
mov
movs
bound
aad
add
xchg
pop
mov
jmp
push
and
data16
xchg
leave
popf
gs
ret
lds
shr
in
push
scas
out
xchg
popf
(bad)
xchg
dec
mov
mov
repz
mov
add
and
sbb
inc
(bad)
(bad)
call
sbb
jno
inc
rol
cli
or
inc
test
jne
pushf
lods
or
(bad)
xor
xchg
shl
dec
sub
jo
std
popf
and
xchg
fwait
or
lods
add
cmp
sbb
xchg
repz
retf
mov
xchg
sbb
sahf
or
clc
dec
dec
popf
retf
add
mov
ret
ins
mov
add
lods
mov
lock
fild
lods
cmp
mov
out
ds
popa
jnp
jg
adc
in
and
and
pop
xor
cwde
adc
sahf
xor
fst
cmp
or
(bad)
mov
cmc
sub
and
pop
inc
inc
or
imul
jmp
lock
into
jmp
fistp
push
xor
sub
cwde
mul
jno
mov
jnp
scas
pusha
add
jmp
cmp
add
push
(bad)
outs
add
sub
(bad)
(bad)
jns
mov
inc
ja
in
mov
inc
mov
jmp
test
pop
sti
sub
inc
mov
fcomp
sub
mov
jne
je
in
adc
wrmsr
jnp
outs
xor
pop
and
xchg
scas
sbb
pop
jmp
cmps
push
rol
mov
adc
push
int3
icebp
add
retf
inc
jno
pusha
xor
popf
fild
push
(bad)
jge
lods
jl
loope
stos
fisttp
icebp
pop
mov
xchg
mov
inc
les
mov
and
jbe
ficom
(bad)
mov
pop
sar
sub
mov
sub
mov
mov
push
loope
pop
pop
scas
aas
dec
(bad)
pop
push
push
mov
sbb
pushf
cwde
lds
jp
jg
cmp
nop
push
jp
pop
clc
jae
fild
and
xchg
ds
mov
push
xchg
sub
sub
sti
push
jnp
fs
inc
add
push
mov
loopne
mov
push
jae
mov
push
loop
mov
xor
xchg
mov
ins
sub
jp
inc
adc
push
cwde
sub
dec
(bad)
cli
push
sub
aas
inc
push
rol
xchg
out
and
mov
test
add
out
fisub
and
in
adc
je
mov
call
or
sub
ficom
mov
or
jne
add
mov
arpl
loopne
aaa
stos
pop
fwait
push
frstor
add
inc
mov
jecxz
inc
data16
xchg
call
movs
jge
jae
dec
mov
push
das
mov
in
inc
loop
rcl
adc
in
sbb
pop
mov
mul
pop
test
or
add
xor
pushf
sub
lahf
lahf
das
xor
xchg
pop
cmp
in
push
xor
repz
sysret
xor
sub
pop
retf
fiadd
(bad)
cmp
mov
and
push
jne
ins
jp
pop
inc
fld
push
or
retf
retf
dec
lahf
jecxz
fidiv
jmp
inc
pop
push
imul
mov
xchg
cmp
and
xor
adc
sub
into
jb
mov
or
mov
out
loope
and
(bad)
data16
rol
inc
or
xor
dec
aam
ds
(bad)
pop
enter
dec
in
fild
in
retf
ficomp
jecxz
ins
push
aam
cmp
scas
mov
ret
jne
or
mov
jae
in
(bad)
movs
stos
adc
(bad)
ss
dec
retf
in
mov
rcl
fbstp
jb
pop
fucomi
adc
inc
stos
sbb
not
lods
add
and
inc
jmp
xor
sub
cmps
jno
sahf
cld
xchg
xchg
mov
cdq
jp
shr
enter
retf
xlat
neg
dec
sub
dec
stc
or
inc
outs
ins
mov
jmp
popf
mov
es
jecxz
inc
xlat
add
adc
sub
bound
push
cmps
mov
ins
jno
loope
inc
xchg
(bad)
aam
ins
ffreep
adc
lods
inc
and
adc
dec
dec
lea
and
sub
fcmovu
add
mov
(bad)
push
xchg
push
(bad)
lock
mov
push
fstp
nop
pusha
push
lock
aaa
call
inc
fwait
sbb
mov
sar
jmp
scas
xlat
push
push
repnz
fisub
pop
push
in
push
or
pushf
mov
mov
cli
(bad)
mov
xor
push
ror
mov
jbe
pusha
xor
mov
pop
(bad)
int
test
clc
(bad)
or
cwde
test
aas
or
ins
pop
adc
ret
adc
or
mov
and
test
movs
dec
push
sbb
jmp
clc
loop
rcl
lds
mov
xor
clc
mov
mov
loope
mov
inc
push
scas
sub
xchg
push
lods
xlat
mov
idiv
pusha
jmp
xor
adc
das
cmc
retf
sbb
ficomp
or
mov
xor
test
push
clc
and
xlat
mov
push
mov
adc
outs
cmp
xchg
stos
sbb
pop
inc
push
xchg
nop
popf
inc
add
xor
std
not
in
push
xchg
int
and
dec
or
mov
xchg
xor
jmp
cmp
push
xchg
mov
xchg
int3
or
sahf
sub
mov
ss
push
rcr
mov
jmp
pop
sbb
and
fcomp
mov
add
jmp
pop
das
fdiv
iret
out
mov
sbb
mov
pop
xor
ret
jbe
shl
rol
or
mov
(bad)
xor
scas
cld
or
(bad)
cwde
and
adc
dec
add
call
repz
and
test
dec
push
mov
dec
or
fsubrp
hlt
jg
lods
adc
in
jle
test
pop
dec
push
mov
cmps
sti
iret
fdiv
mov
loope
pop
jns
adc
in
dec
hlt
pop
mov
sub
push
mov
xchg
inc
add
sub
jge
scas
imul
xlat
aas
mov
jb
leave
loop
fs
mov
movs
mov
pop
inc
xchg
push
dec
mov
add
push
xchg
es
pop
sbb
fstp
push
cmp
push
mov
sub
ins
inc
cmps
prefetch
or
adc
jl
pop
into
aas
push
xor
mov
add
(bad)
adc
cmc
inc
adc
movs
xchg
adc
cmp
test
jmp
aam
out
out
nop
scas
pop
aam
(bad)
push
mov
mov
leave
pop
pusha
lahf
aad
cmp
mov
cmp
ficom
sbb
mov
and
movs
mov
xchg
pop
xlat
inc
(bad)
pop
lds
shr
popa
push
mov
out
dec
call
mov
fiadd
outs
cmp
push
es
push
std
xchg
jmp
pop
push
mov
mov
fs
repz
ja
aam
neg
mov
cmp
push
js
mov
mov
dec
sbb
sub
stos
xchg
lods
iret
loope
(bad)
mov
and
cli
inc
mov
xor
adc
sbb
add
jo
cmps
(bad)
cmp
popa
jae
mov
xchg
das
xchg
repz
mov
imul
fwait
inc
sar
xor
not
push
push
jmp
sub
fst
sub
pop
xchg
mov
mov
or
loope
pop
pop
test
sbb
stos
sub
fs
dec
not
iret
lods
repnz
test
push
imul
inc
adc
std
fucomip
jo
es
js
mov
movs
in
inc
xchg
add
push
cmp
cmp
aam
dec
fstp
adc
inc
mov
out
sub
or
jp
sbb
jnp
push
cmp
sbb
pusha
xor
int3
pop
and
(bad)
pop
aaa
and
add
fimul
enter
fistp
loopne
inc
rcr
repz
cld
cmps
ficom
clc
call
mov
out
jbe
in
sbb
(bad)
lods
sbb
xlat
dec
stos
loopne
repz
pop
dec
out
sti
sub
not
repz
in
jge
sbb
int3
or
lahf
sbb
bound
into
jo
ror
cmp
dec
sbb
mov
xchg
dec
(bad)
lods
(bad)
(bad)
test
mov
jo
inc
mov
mov
imul
dec
rcr
mov
ja
das
stc
jmp
push
clc
iret
shl
adc
and
inc
adc
gs
das
xchg
pop
add
inc
xlat
(bad)
stc
push
push
ror
test
xchg
pop
mov
scas
lods
lahf
dec
lahf
call
or
adc
enter
push
mov
inc
cmc
pop
pmaxub
adc
adc
fs
jl
xchg
fisub
jns
lock
dec
mov
les
jo
(bad)
mov
fsub
adc
cmps
push
jbe
mov
stos
cmp
nop
arpl
and
sub
xchg
pop
fwait
les
dec
packsswb
dec
xchg
cmp
fwait
or
in
push
rcr
add
in
add
dec
(bad)
addr16
add
adc
(bad)
in
neg
aaa
enter
call
das
lahf
mov
icebp
dec
mov
xor
dec
mov
xlat
dec
aaa
stos
sbb
neg
(bad)
lock
add
add
mov
mov
out
pop
add
stos
retf
movs
jecxz
jl
or
into
shl
lods
mov
cmps
ret
popa
fsub
fadd
sbb
cmps
enter
mov
mov
pop
lea
ror
ss
call
in
or
mov
les
(bad)
pop
retf
imul
leave
or
mov
jg
dec
popf
movs
sub
(bad)
jmp
pop
mov
mov
dec
mov
ds
add
mov
and
test
leave
int
adc
ja
sbb
movs
jmp
rcl
test
aad
popa
(bad)
cmp
or
push
sahf
rcr
ss
xlat
arpl
push
call
dec
test
mov
jno
jbe
pop
std
je
mov
dec
sub
imul
enter
cmp
sub
push
or
sub
xchg
xchg
adc
(bad)
ss
leave
retf
or
pop
push
sub
push
mov
mov
mov
cmp
cmp
pop
sbb
fisub
inc
and
scas
xchg
sub
jmp
sbb
xchg
and
mov
cmp
into
mov
dec
push
movs
neg
mov
std
dec
pop
push
dec
fcom
mov
aaa
arpl
out
scas
sub
daa
mov
lods
jae
or
out
cmps
or
and
retf
clc
dec
pop
stos
in
aad
bound
aas
je
out
inc
adc
add
lock
pop
ss
cdq
adc
mov
cwde
int3
xchg
mov
rcr
and
cmp
fidivr
mov
adc
aas
mov
dec
loopne
jge
test
inc
pop
xchg
shr
xchg
jnp
cdq
inc
inc
(bad)
xchg
and
(bad)
out
jmp
addr16
pop
mov
cmc
or
sub
lods
fsubr
pop
repnz
cmp
movs
iret
es
or
shr
add
mov
iret
loopne
xor
or
(bad)
out
and
cs
sbb
(bad)
pop
mov
xor
in
clc
(bad)
adc
sbb
jmp
fwait
repz
mov
popa
cmp
lock
xor
push
xchg
arpl
sar
xor
sub
fidiv
leave
idiv
xchg
adc
adc
ror
fistp
push
inc
mov
pop
stc
stc
mov
hlt
lea
dec
aam
jmp
popf
cs
retf
mov
mov
push
mov
clc
scas
mov
aad
jmp
fnstenv
addr16
in
fisttp
out
stos
mov
fidiv
mov
mov
pop
imul
ret
iret
js
sbb
fldenv
or
add
(bad)
data16
loop
add
and
sub
mov
mov
ret
ja
mov
xchg
xor
(bad)
popa
jns
push
cdq
pop
jbe
ja
mov
sbb
sbb
je
push
lds
jle
sbb
jae
nop
jne
rol
push
jns
and
and
movs
les
adc
dec
adc
add
inc
arpl
jge
mov
sub
(bad)
adc
push
push
push
in
pop
fadd
(bad)
imul
(bad)
add
and
mov
cdq
ret
xlat
push
sbb
js
outs
mov
lock
sar
dec
pop
div
push
mov
mov
sti
pop
inc
xor
mov
cmp
mov
push
jmp
dec
ja
and
ret
push
or
shr
call
mov
pushf
xor
jle
fs
adc
adc
inc
(bad)
pop
jge
dec
jo
mov
pop
xchg
loopne
int3
movs
jne
test
aaa
sbb
xlat
mov
xchg
cmp
repz
and
mov
mov
mov
push
add
mov
xchg
mov
mov
or
in
lods
cmp
aas
dec
push
aas
retf
xor
ficomp
or
inc
dec
sbb
scas
or
fst
xlat
xor
pushaw
aaa
rcr
pop
imul
xor
push
aaa
push
fdiv
cmp
push
fdiv
int
dec
stos
addr16
sbb
dec
mov
cmp
inc
sub
in
jbe
mov
pop
sbb
int3
push
mov
jne
mov
mov
fcomp
jns
sar
adc
std
cmps
hlt
jnp
clc
ins
retf
(bad)
mov
mov
test
icebp
ins
mov
pop
push
mov
mov
fstp
jecxz
mov
mov
add
fwait
stos
int
enter
jno
aad
pop
out
ins
jb
(bad)
fstp
pop
xor
dec
mov
inc
xlat
jb
add
push
mov
mov
lods
sub
shl
popf
mov
cmps
push
add
xchg
(bad)
in
inc
jg
pop
mov
(bad)
mov
ret
adc
loop
adc
call
mov
fimul
test
dec
sti
mov
fld
mov
push
mov
fwait
xor
bnd
shr
cwde
or
inc
add
cmp
movs
jne
and
pop
xor
jg
loopne
jmp
ror
jmp
inc
mov
sub
mul
push
mov
(bad)
je
ds
clc
pop
pop
inc
jns
(bad)
fisub
pop
repnz
xchg
aam
and
(bad)
fadd
gs
loop
xchg
(bad)
loopne
pop
mov
fdivr
jl
addr16
push
mov
mov
pop
jns
ret
nop
hlt
fsubr
sbb
(bad)
xor
and
jmp
test
leave
sub
pusha
or
out
out
xchg
or
in
adc
imul
add
ret
in
dec
pop
jb
iret
loopne
ja
arpl
arpl
(bad)
jecxz
int
pop
ficom
adc
mov
ret
sahf
(bad)
and
or
jp
jnp
dec
and
jne
mov
inc
or
pushf
mov
pushf
(bad)
fwait
icebp
test
or
loope
xchg
std
jmp
xor
loope
pop
push
push
hlt
test
out
shr
xor
cwde
fistp
xchg
jmp
mov
test
js
sar
imul
ins
push
js
sub
(bad)
pop
mov
hlt
push
hlt
cmp
pop
mov
into
xor
out
psubusw
xchg
xor
dec
push
jbe
pop
or
test
aas
retf
fcmovnb
jnp
sbb
mov
cli
jbe
loope
ret
push
adc
adc
imul
in
test
dec
sahf
ret
mov
not
add
call
jae
jne
push
in
fdivr
lea
cmp
or
aam
int3
mov
or
dec
pop
rol
adc
lods
and
and
cmp
jp
add
xor
cld
sbb
mov
and
js
pause
mov
test
loopne
imul
jae
cmps
xor
pop
nop
fistp
mov
neg
pop
sub
repz
aaa
mov
imul
shl
inc
lahf
push
mov
lock
repnz
mov
leave
fwait
mov
out
fs
aam
mov
sahf
ins
mov
in
scas
daa
pop
inc
sub
pop
shl
push
test
gs
loopne
inc
fs
xchg
adc
push
jo
das
or
cmp
fsubp
in
dec
dec
mov
inc
or
mov
or
xor
xchg
and
hlt
mov
inc
cdq
mov
test
cld
add
sar
out
push
or
ins
fmulp
adc
xchg
jmp
adc
mov
(bad)
div
iret
adc
mov
outs
push
fdiv
jmp
cli
arpl
xchg
ror
cmp
leave
cmp
call
(bad)
in
jb
and
movs
sbb
ds
stos
es
add
jl
xchg
cmp
or
inc
mov
cmc
fcmovb
cld
icebp
(bad)
popa
in
pop
stc
rcr
inc
push
sbb
inc
lock
push
push
fnstsw
jge
jbe
ins
mov
into
xor
in
stos
lea
dec
jg
pop
aas
outs
jae
mov
test
bound
mov
or
test
pop
into
mov
sbb
nop
push
ins
sar
xor
jecxz
adc
mov
cmps
pop
movs
pop
into
push
test
jns
les
leave
push
into
int3
and
add
xchg
icebp
fcmovne
jae
call
lods
add
jle
stos
adc
int3
frstor
lahf
out
or
pop
and
in
mov
jbe
dec
ja
(bad)
out
call
mov
test
mov
pop
fld
call
adc
shr
cmp
stos
xor
aas
es
lods
jge
in
mov
dec
pop
dec
imul
sbb
rcl
ss
xchg
mov
lock
fcmovnu
cdq
xor
cli
jmp
xchg
ja
cmp
push
add
sahf
pushf
mov
xor
div
popa
cmp
mov
jle
clc
cmp
mov
and
mov
ins
mov
outs
and
retf
mov
xchg
sbb
pop
xchg
(bad)
neg
cld
push
xchg
pusha
mov
out
test
aas
add
mov
mov
leave
mov
sti
daa
and
add
shl
xor
adc
xchg
(bad)
mov
test
xchg
pop
(bad)
in
or
inc
sti
outs
fs
inc
cmps
mov
das
ror
mov
mov
ss
jg
aaa
je
and
inc
or
or
movs
pushf
xchg
push
push
xor
push
inc
pop
adc
movs
sbb
es
sub
fwait
(bad)
dec
(bad)
dec
icebp
jb
shl
test
mov
cmp
fbld
outs
scas
ins
mov
or
sti
mov
(bad)
enter
cwde
mov
pop
inc
icebp
stc
jmp
call
add
fcom
cld
mov
inc
add
add
and
pusha
add
loop
retf
mov
int
fisubr
out
sahf
push
mov
sub
daa
(bad)
hlt
mov
(bad)
mov
cmp
dec
xor
fadd
xchg
jo
mov
cld
sbb
sbb
add
push
dec
dec
adc
mov
xor
aaa
out
xchg
xchg
mov
aad
pop
jl
pop
inc
xchg
cli
inc
sti
int3
cs
aaa
xchg
push
pop
jp
test
in
pop
cwde
mov
cs
adc
push
adc
retf
daa
push
sub
sar
pop
mov
es
adc
mov
push
hlt
push
std
cmc
lahf
pop
cdq
(bad)
into
out
movs
cli
js
loop
mov
js
sbb
add
jmp
(bad)
les
shr
mov
(bad)
out
fimul
xor
bound
mov
es
dec
pop
scas
in
push
retf
mov
xchg
iret
or
pop
lods
and
mov
cmp
push
add
mov
arpl
push
aas
mov
mov
pop
(bad)
iret
inc
fwait
pop
cdq
push
ret
mov
and
add
xchg
mov
fstp
test
out
call
jns
std
and
jae
push
mov
inc
mov
mov
sbb
cmp
imul
lods
aaa
sbb
jp
push
ss
push
dec
or
idiv
in
clc
idiv
fdivr
mov
adc
test
sub
and
sbb
popf
inc
fnsave
das
dec
push
(bad)
jp
or
cmps
fsubrp
adc
mov
clc
lahf
ja
sti
in
pushf
stos
jne
cdq
xlat
push
cmp
pusha
adc
lds
test
cmp
cmp
(bad)
mov
pop
cld
xchg
xor
into
mov
or
and
push
sbb
dec
add
dec
push
mov
rol
dec
sbb
sub
int3
ss
sbb
push
push
add
aad
mov
or
cli
push
ins
cmps
cld
add
or
sub
sub
icebp
fild
retf
mov
jle
jle
out
ss
sbb
sti
sar
in
daa
cmp
repz
pop
mov
mov
sbb
stos
clc
lock
jae
mov
mov
and
add
shr
cli
ja
cmp
mov
out
mov
retf
mov
les
mov
adc
inc
xlat
arpl
movs
rcl
mov
mov
imul
hlt
lods
mov
or
xor
aaa
push
and
jge
outs
aas
push
cmp
lods
aas
ret
cmp
or
mov
sub
icebp
dec
inc
loope
sar
adc
(bad)
mov
adc
scas
add
inc
mov
xchg
int
int3
ret
mov
jae
sub
stos
cmps
mov
dec
lock
jmp
es
mov
cld
fadd
aam
xchg
pushf
mov
adc
fs
push
and
dec
stos
xchg
cmp
pop
(bad)
jge
aad
pop
imul
test
push
jno
dec
pop
scas
dec
cmps
add
cdq
pop
in
add
lds
push
xor
sbb
repz
div
aam
push
pop
test
fdivr
out
sbb
cwde
xchg
inc
(bad)
jb
clc
jp
out
push
and
push
retf
ins
adc
ret
mov
popf
cwde
push
xchg
enter
push
call
and
jecxz
mov
mov
jge
out
stos
icebp
les
repnz
push
pop
add
repnz
cmps
inc
sbb
inc
imul
jae
repnz
fnstcw
cwde
vmaxss
cmp
pop
cmps
popa
xchg
sbb
push
fwait
fwait
icebp
int3
mov
mov
jl
inc
fwait
adc
(bad)
mov
mov
ret
cmc
popa
(bad)
mov
jbe
cmps
clc
mov
inc
pop
in
rcl
sub
mov
jbe
or
adc
outs
sahf
cmc
les
push
pop
dec
cmp
imul
ficomp
das
das
mov
loop
cmp
sub
retf
scas
pop
call
outs
cmp
xor
in
ds
xchg
lods
out
sbb
push
aas
jmp
sbb
mov
jo
mov
repnz
mov
loop
inc
(bad)
jge
pop
add
mov
bound
xor
jbe
int3
jb
enter
(bad)
iret
out
jmp
int
pop
or
add
mov
xor
xchg
and
mov
test
lock
ficomp
sahf
sub
mul
sub
jmp
jmp
sbb
fisttp
jp
aaa
(bad)
inc
hlt
mov
sub
pop
lods
mov
pop
sbb
adc
mov
sar
hlt
mov
jbe
lahf
mov
mov
push
(bad)
rol
push
dec
je
call
mov
adc
pop
xor
mov
jmp
sub
fsub
sub
(bad)
adc
(bad)
fdiv
adc
cmp
xor
ret
jmp
and
cwde
cs
dec
sub
add
pop
push
sahf
pop
popf
sbb
shl
enter
lods
inc
or
mov
scas
sub
outs
sbb
sahf
(bad)
mov
pop
adc
pusha
mov
push
mov
jo
out
fidiv
mov
adc
in
push
or
push
xchg
js
ins
stos
(bad)
push
jp
mov
mov
rcl
dec
dec
mul
fwait
mov
mov
xchg
xlat
inc
mov
in
fiadd
rcl
pop
xor
out
mov
xchg
repnz
sti
push
popa
lods
push
pop
stc
inc
ins
retf
scas
in
xor
xchg
push
scas
xchg
and
frstor
repnz
(bad)
repnz
cli
imul
add
popa
(bad)
fcomi
dec
jl
loope
jecxz
xor
popf
mov
sbb
dec
jo
jmp
push
add
xchg
loope
xchg
in
inc
and
fs
imul
pushf
add
pop
and
sub
repz
nop
movs
dec
cdq
imul
repz
shr
xchg
add
mov
jns
sahf
mov
dec
imul
jbe
aas
adc
lods
pop
adc
mov
xor
mov
div
or
dec
popa
dec
nop
mov
test
bound
sti
and
ja
aad
push
scas
shl
call
mov
(bad)
hlt
fistp
add
pop
sbb
sbb
retf
dec
sbb
mov
push
jmp
ret
fwait
push
test
push
movs
retf
ret
or
mov
xor
sbb
and
adc
fmul
cmp
add
jne
adc
test
gs
sbb
mov
mov
mov
shl
nop
outs
ins
and
adc
jnp
div
cmp
or
push
mov
jl
into
retf
pop
stos
jb
mov
shl
ja
out
cdq
sub
add
loopne
and
push
aad
add
pop
push
loop
cdq
movs
mov
mov
outs
sub
push
lahf
enter
sub
imul
inc
lds
into
xor
inc
popf
mov
jno
or
ficom
xchg
dec
stc
fld
mov
pop
xchg
test
gs
pop
sbb
or
cdq
out
enter
ficomp
call
mov
cdq
sahf
mov
xor
sub
or
cmp
pushf
jmp
mov
ror
inc
xor
mov
pop
fldcw
mov
call
aas
sbb
adc
push
cdq
mov
rcl
lock
mov
in
jo
mov
or
sti
xchg
popf
hlt
push
int
jge
jne
sar
mov
js
scas
sbb
movs
inc
fwait
sbb
and
bound
test
aas
(bad)
xchg
jno
push
mov
outs
rcr
xor
aas
sbb
push
sub
sar
pop
shr
int
pop
add
loopne
mov
ja
std
loope
fdiv
sub
aad
mov
xor
jl
jmp
add
ret
inc
jecxz
xchg
jno
mov
stc
retf
lods
xor
bound
dec
push
xchg
hlt
into
sub
push
pop
and
xor
ss
into
mov
stos
aam
mov
jne
or
and
xor
push
clc
adc
cs
sub
or
pop
mov
sub
enter
clc
inc
inc
fcomp
fsub
repnz
mov
cld
add
cdq
cmp
sti
popa
sub
lods
mov
lahf
das
(bad)
sbb
dec
inc
cli
xor
sub
mov
gs
cmp
cmps
push
mov
xor
sti
test
(bad)
movs
cmp
lods
pop
enter
fld
sub
(bad)
dec
dec
leave
sbb
rcl
cdq
ss
pop
lds
mov
pop
jle
cmps
mov
jnp
adc
in
in
rcr
popf
push
sub
gs
push
jg
push
cli
push
dec
xor
retf
loop
dec
inc
push
cmps
je
mov
cmps
das
inc
bound
or
(bad)
lods
xchg
ins
daa
mov
fcom
outs
inc
and
ja
(bad)
cmp
dec
dec
mov
nop
addr16
data16
lods
pusha
sbb
xchg
adc
push
arpl
in
gs
adc
cli
and
dec
scas
jp
sub
sbb
ds
jg
rcl
jno
dec
pop
xchg
(bad)
shl
mov
pop
mov
jnp
fisub
sub
movs
push
xor
lds
dec
push
shl
jmp
push
into
pusha
fbstp
mov
ja
lea
sub
(bad)
push
sahf
fld
pop
inc
lea
push
popf
por
jbe
or
hlt
and
xchg
add
jle
fldcw
pop
mov
cmps
imul
jo
dec
mov
je
repz
and
outs
out
mov
sub
fst
xor
push
dec
aad
in
push
fs
mov
aam
pop
pop
outs
outs
not
lock
inc
pushf
mov
int3
cmps
mov
adc
mov
int
lea
inc
sub
mov
or
add
pop
ins
ret
mov
test
idiv
ins
fwait
pop
sbb
xor
loope
adc
add
pop
fdiv
mov
pop
stos
mov
adc
xchg
xchg
test
push
leave
xor
xor
add
cmp
es
cmp
xor
popa
xchg
or
addr16
popa
jl
pop
fstp
les
loop
mov
and
mov
push
rcl
sbb
sub
pop
pop
lods
mov
int3
pop
cmc
sub
or
adc
retf
jb
and
cmp
jecxz
inc
daa
add
sub
dec
adc
sbb
dec
mov
rcl
pop
inc
add
dec
ins
mov
xchg
setno
mov
clc
and
or
shl
out
movs
out
push
in
xlat
and
push
popf
mov
js
bnd
jne
ja
in
sbb
jmp
stc
icebp
jmp
dec
dec
fcomip
neg
inc
and
lds
push
movs
and
or
repnz
(bad)
pop
sbb
shl
lock
bound
sbb
dec
cmp
in
pusha
jae
stos
sti
add
mov
mov
out
mov
or
icebp
inc
push
xor
mov
pusha
rcr
sub
in
cmps
out
mov
inc
push
dec
cmp
je
mov
pop
ins
xor
and
pop
cmovnp
mov
lods
xchg
cmps
or
cmp
pop
dec
out
hlt
(bad)
in
shr
je
adc
mov
sub
mov
retf
stos
inc
mov
ja
mov
mov
inc
scas
or
movs
sub
in
out
push
add
js
ds
inc
test
out
pop
xchg
inc
aad
sar
dec
clc
push
add
cmp
imul
pop
fsub
push
sub
out
xor
sbb
and
push
dec
pop
mov
push
jnp
cdq
pop
pop
sub
movs
movs
xlat
dec
fs
mov
push
iret
push
pop
(bad)
jbe
inc
xchg
int3
push
jo
mov
pop
test
xchg
dec
inc
mov
js
inc
outs
jne
ja
xor
pop
jle
adc
mov
scas
jle
inc
call
stos
daa
(bad)
out
call
push
int
aad
mov
leave
pop
rol
aad
out
and
repz
test
pop
bound
dec
loope
ret
xchg
fldcw
dec
fistp
jle
mov
jmp
adc
clc
dec
ret
sub
mov
movs
stos
in
ss
es
movs
call
enter
push
fstp
stos
pop
lea
cld
mov
aam
jbe
and
inc
sub
stos
jle
in
push
(bad)
out
cli
push
and
cld
adc
dec
inc
cmp
les
cdq
cmps
inc
stc
adc
repz
adc
dec
loope
in
aad
in
jp
mov
fs
jb
std
jo
imul
ds
in
cmp
iret
pusha
(bad)
mov
adc
inc
fstp
nop
iret
xchg
mov
pop
cmovo
movs
and
clc
stc
jp
fbstp
test
dec
loopne
in
es
mov
repz
in
mov
inc
mov
outs
pop
mov
inc
fucomp
push
xchg
inc
shr
jmp
aas
clc
add
mov
inc
adc
out
pop
fucomp
sbb
xchg
push
fimul
jnp
out
fstp
rol
leave
cmp
jp
outs
sub
int
add
mul
aaa
aad
dec
pop
cld
movs
push
cmp
dec
shr
out
push
in
sbb
mov
mov
cmp
loope
shr
sub
loope
imul
sbb
not
xlat
mov
stos
enter
push
stc
out
pop
loop
test
cwde
dec
call
in
movs
mov
sbb
bound
and
test
jbe
mov
mov
sub
ins
push
push
push
mov
fstp
mov
xchg
cmp
in
lods
in
mov
ret
nop
sar
mov
out
mov
(bad)
pop
and
in
hlt
mov
add
cmp
push
mov
ins
ror
lods
pop
mov
lahf
push
inc
pushf
aam
sar
sbb
xor
icebp
imul
fchs
mov
shr
cmc
jmp
add
sub
fwait
shl
cmps
xchg
add
jl
enter
sub
in
mov
inc
cs
mov
dec
add
adc
popa
add
mov
xchg
pop
add
and
(bad)
push
cmp
xchg
push
mov
cwde
or
or
sbb
push
adc
xchg
ror
aas
lock
lds
cmp
adc
test
push
adc
shl
ret
fld
xor
mov
push
jg
movs
cdq
clc
les
ficomp
imul
sub
cmps
mov
jbe
(bad)
ja
xchg
xchg
rcr
jno
dec
and
das
pop
pop
mov
stc
lahf
(bad)
mov
inc
xor
adc
mov
retf
mov
add
sub
dec
mov
arpl
stos
xor
adc
hlt
jnp
push
add
jp
inc
inc
pop
inc
call
mov
and
movs
add
mov
fstp
in
cmps
ss
jge
mov
shl
int
bnd
ja
xor
jb
dec
mov
(bad)
fidivr
icebp
cmp
cdq
icebp
in
leave
fimul
(bad)
cmp
cmp
sub
xchg
ins
cmp
adc
or
lds
rcl
adc
sub
clc
arpl
jle
or
ficom
mov
ds
xchg
or
repnz
inc
jp
push
add
and
push
or
daa
push
pop
inc
push
cdq
in
cs
pop
lods
mov
push
nop
push
jb
xor
icebp
mov
ret
push
aam
(bad)
out
sti
xchg
shl
ins
push
shr
add
xor
or
shr
xchg
jns
jl
cmp
cmps
push
icebp
lods
stos
xchg
mov
jnp
mov
in
jmp
test
xchg
jge
add
clc
xchg
ret
mov
shr
mov
sbb
int3
test
lods
test
rcl
out
or
adc
fisttp
inc
hlt
add
gs
xor
cmp
jge
pop
mov
out
loop
fisubr
add
jecxz
loopne
rcl
dec
lea
gs
cmps
pop
and
mov
xor
mov
mov
jg
ins
cmps
test
adc
and
sbb
test
call
aaa
inc
into
push
sbb
mov
lods
js
jae
(bad)
push
pop
leave
mov
sahf
adc
pop
inc
ret
imul
push
js
mov
mov
cdq
or
idiv
xor
sbb
stos
vxorps
imul
ret
mov
adc
sub
dec
test
les
call
fldcw
inc
push
push
cmp
dec
ins
test
adc
stos
mov
test
es
gs
mov
fld
jnp
sbb
stc
jl
cdq
push
int
mov
out
pushw
fdivr
or
retfw
or
sub
movs
xchg
dec
mov
mov
shr
fidiv
out
adc
pop
jns
loop
jg
mov
out
xchg
adc
or
in
loopne
add
call
sub
jmp
lea
cmp
cmp
xor
sti
and
cdq
call
mov
mov
and
lahf
mov
mov
call
pop
movs
inc
inc
cld
sbb
mov
ret
push
sbb
xchg
in
(bad)
int
rcl
leave
add
retf
pop
mov
sub
cdq
(bad)
clc
cmp
xchg
imul
sbb
mov
scas
pop
(bad)
rcr
add
sub
push
lahf
repz
cwde
int3
sbb
push
jnp
es
mov
or
nop
bound
fild
iret
pusha
retf
push
or
add
lods
add
push
div
ins
repz
ins
pushf
push
jmp
xlat
scas
xchg
rol
mov
fst
aam
inc
or
les
ficomp
jbe
cmp
sbb
xor
lock
dec
dec
xchg
pop
ret
mov
in
jmp
das
icebp
pop
ror
mov
and
push
(bad)
aam
shr
add
add
sti
dec
js
aas
js
mov
add
cmp
dec
mov
or
bound
stos
cmps
aad
pop
add
pop
xor
stos
ret
xlat
das
daa
div
or
push
hlt
jg
gs
into
push
mov
push
dec
mov
fwait
and
inc
jnp
mov
out
jmp
lahf
dec
adc
add
mov
push
jp
xor
jmp
fdiv
jno
daa
pusha
xor
push
pop
mov
add
mov
push
sbb
aas
xchg
das
outs
movs
xor
(bad)
dec
sbb
cli
mov
mov
xchg
dec
ins
jecxz
rol
test
sub
lahf
xor
enter
icebp
pop
mov
sbb
imul
mov
pop
mov
fstp
dec
adc
(bad)
jo
mov
or
fsubp
fs
or
jmp
test
xor
dec
jae
or
pop
rcl
add
not
jmp
dec
and
pop
xchg
stos
jge
adc
data16
xor
ss
and
dec
and
fist
push
(bad)
jmp
sub
dec
fcmovb
lods
or
lock
adc
add
jle
xchg
adc
test
push
dec
mov
loop
mov
pop
fadd
cli
mov
push
lods
fcomp
lods
jbe
ds
(bad)
sub
sahf
sub
mov
mov
cdq
pop
mov
jo
sbb
gs
ret
cmps
call
cwde
push
cli
or
dec
sub
dec
inc
(bad)
mov
std
jmp
outs
mov
je
jnp
loope
(bad)
jge
mov
push
and
xchg
hlt
mov
mov
sub
mov
test
xor
push
pop
in
pusha
adc
stc
ja
sub
js
mov
clc
lea
(bad)
sub
mov
jg
imul
xchg
jns
cs
cmp
cmp
imul
cli
adc
cmp
mov
sbb
xor
rcr
mov
cmc
push
popf
stos
and
lods
repnz
out
mov
and
test
add
mov
sub
add
add
dec
scas
ret
or
lea
mov
gs
std
jge
into
clc
movs
mov
jge
jle
jnp
xchg
leave
nop
mov
mov
cli
dec
adc
or
xchg
sbb
or
adc
std
mov
push
jg
fiadd
cwde
adc
xchg
imul
and
dec
icebp
xor
jge
imul
lods
in
xor
ror
into
scas
cmp
push
pop
adc
mov
nop
in
shr
jp
fs
imul
fimul
ins
jmp
and
sub
dec
mov
sbb
xor
or
dec
movs
lahf
test
and
je
or
repnz
dec
retf
sbb
jno
pop
pop
mov
mov
mov
arpl
mov
cmp
dec
das
rol
sbb
push
out
sub
push
shl
rcr
or
sbb
call
push
inc
pop
sti
xchg
aaa
pusha
inc
lods
mov
dec
bound
hlt
mov
push
cmps
cmp
jno
jmp
lea
push
in
pop
ds
xor
sub
lock
je
inc
and
xchg
adc
inc
adc
dec
in
out
push
cs
das
mov
mov
mov
and
jecxz
std
inc
xor
mov
jmp
shl
aad
mov
and
stos
push
stc
inc
jp
ret
cmp
or
xchg
das
call
loopne
push
ins
lods
adc
pop
sbb
das
repnz
popf
xor
sub
push
xchg
mul
call
mov
inc
std
leave
sub
gs
add
mov
int
inc
sub
test
iret
sub
jns
(bad)
fcom
stc
jno
loope
sub
arpl
shr
out
daa
ret
xor
es
jg
imul
ins
xchg
sbb
mov
add
push
mov
pop
jg
pop
mov
hlt
repz
jmp
addr16
pop
stos
xchg
ins
js
push
add
cmc
mov
xor
jbe
(bad)
out
js
outs
mov
popf
xor
inc
test
inc
inc
dec
sahf
mov
enter
(bad)
mov
arpl
fldenv
imul
aam
mov
and
mov
ins
mov
xchg
jp
dec
dec
outs
push
movs
dec
(bad)
sbb
jnp
cmp
adc
dec
ret
inc
fstp
icebp
and
jge
lahf
loopne
stc
push
push
dec
fwait
mov
(bad)
(bad)
xor
aaa
(bad)
fmul
push
mov
sbb
ja
inc
shl
mov
cwde
daa
scas
jecxz
sub
scas
or
out
test
jo
popf
loopne
inc
aaa
mov
jg
and
jl
sub
bound
test
pop
ret
stc
addr16
xor
arpl
dec
aam
fisttp
inc
mov
int3
inc
ds
mov
pop
mov
outs
add
stos
int
sar
int3
mov
retf
adc
sub
and
dec
jmp
ins
fistp
lahf
lods
xchg
fcomip
mov
sbb
call
test
inc
call
xchg
ds
stc
test
mov
sbb
aaa
(bad)
mov
fistp
jb
sub
sub
jno
icebp
test
loope
into
lds
std
cmps
or
jp
cmps
enter
clc
int3
lock
mov
nop
dec
add
inc
jbe
jecxz
inc
mov
jae
fucomip
cli
out
leave
mov
repz
loopne
xor
pusha
dec
adc
out
or
or
mov
xchg
xor
xchg
xor
sahf
cmc
push
and
popa
aas
test
add
cmp
fld
test
pop
in
movs
xchg
fwait
xchg
push
fistp
xchg
dec
cmp
lock
fst
dec
cmp
sub
loopne
adc
or
xchg
(bad)
outs
test
lahf
add
mov
dec
ds
and
gs
jns
jns
add
push
enter
test
mov
push
inc
icebp
push
fld
mov
pop
xor
jns
adc
mov
leave
std
dec
pop
adc
and
jg
add
jno
sub
sbb
cmp
lds
sti
popa
in
inc
sbb
cmp
push
test
jge
lahf
add
sbb
movs
push
js
inc
add
mov
fwait
out
js
cwde
xchg
(bad)
lock
mov
mov
and
pushf
cld
outs
cmp
adc
neg
pop
jae
add
popa
pusha
pop
cmps
js
test
dec
and
or
jmp
mov
mov
push
ror
dec
stos
cdq
or
jae
xor
std
movs
inc
mov
cwde
or
call
add
push
inc
pop
cs
dec
push
xchg
ret
faddp
pop
sbb
pop
test
sub
or
popf
pop
push
daa
cwde
loopne
dec
test
and
loopne
arpl
fisubr
scas
xor
xchg
pushf
sub
dec
test
cld
add
adc
dec
hlt
aad
sar
mov
fsubr
mov
sahf
or
xchg
fcmovbe
mov
push
jbe
push
in
arpl
pop
sbb
or
sub
pop
or
inc
nop
and
(bad)
out
cmp
push
or
(bad)
ja
sbb
mov
mov
mov
xchg
popf
or
and
mov
in
retf
jecxz
sbb
in
in
aaa
mov
ins
jo
sti
punpckhwd
rol
stos
dec
ret
dec
mov
out
jno
ret
mov
and
push
out
add
cmc
jle
stos
fdiv
push
cwde
xchg
cmc
and
mov
rol
movs
sub
sub
dec
xchg
leave
bnd
fsubr
lock
rcr
or
fsub
fstp
ja
(bad)
mov
and
outs
jmp
add
pop
popf
pushf
adc
arpl
dec
pop
pop
and
mov
sbb
popa
arpl
cmp
clc
dec
stos
mov
jbe
stos
cdq
push
int
mov
lds
and
loopne
sbb
mov
xchg
sahf
push
add
mov
retf
retf
mov
repz
push
cld
and
dec
ss
xchg
mov
rcl
ret
xchg
add
retf
xchg
in
dec
outs
mov
es
xchg
adc
int3
cmp
jne
cli
in
fnstenv
mov
jmp
xchg
int3
in
test
in
mov
add
fs
cmp
sahf
sbb
jg
and
jmp
and
cmp
shl
add
shl
test
addr16
jmp
test
loop
xor
and
aam
jbe
div
mov
retf
lock
inc
(bad)
hlt
out
int3
loop
dec
iret
ins
lock
jecxz
sbb
adc
or
and
retf
(bad)
mov
jnp
clc
add
inc
aaa
sbb
jp
(bad)
fdivr
test
cmp
pop
or
mov
test
je
xor
and
and
xor
xchg
push
lock
cmp
das
pusha
repnz
sub
aaa
push
jle
stos
pop
jo
addr16
mov
mov
iret
mov
jnp
lods
sbb
xor
sub
sbb
sbb
test
and
std
mov
dec
in
push
arpl
jne
in
xor
into
sbb
xchg
rcr
aad
jns
dec
je
ss
call
(bad)
not
or
xchg
cs
out
xchg
out
sar
push
adc
ret
sahf
fnstcw
lds
jmp
cld
fcomp
pop
pop
jl
dec
fdivr
cwde
push
add
and
retf
cmp
inc
pop
inc
rol
ss
xchg
cmps
(bad)
mov
popf
and
mov
cmc
mov
sub
test
les
sbb
add
pop
mov
xchg
dec
add
imul
xchg
test
ja
sbb
ds
xor
call
hlt
pop
sbb
push
add
xchg
cmp
clc
ret
fs
cmps
scas
aam
cs
leave
xchg
inc
prefetcht2
movs
shr
xor
pop
lahf
aaa
out
adc
(bad)
lea
xchg
and
cmp
cmc
fnstenv
pop
push
and
dec
push
dec
mov
es
add
fisubr
fwait
and
popa
fistp
and
push
pop
enter
inc
lock
or
xor
test
lds
sti
sub
neg
xchg
out
mov
(bad)
aam
push
daa
mov
dec
or
mov
mov
pop
repz
jmp
dec
mov
iret
mov
cmp
enter
pop
mov
sbb
ja
jmp
push
jecxz
pop
movs
add
(bad)
cwde
fcmovu
dec
sbb
call
mov
movs
outs
dec
icebp
cmp
inc
pop
ret
dec
adc
cmps
scas
sub
cmp
jno
mov
(bad)
push
jo
xchg
pop
fadd
out
cmp
adc
vhsubps
sbb
addr16
imul
push
push
sub
(bad)
in
sub
pop
cmps
(bad)
js
jae
ret
or
xchg
xor
daa
nop
jae
push
and
xchg
sbb
xor
fcomp
mov
inc
outs
and
in
fwait
mov
inc
xchg
stos
scas
xor
push
retf
ins
call
movs
inc
mov
out
dec
add
rcr
mov
push
push
fnstsw
mov
xor
and
js
push
sub
push
mov
ret
shr
xchg
inc
sub
and
pop
fwait
gs
mov
add
movs
jae
std
mov
and
mov
jg
into
pop
fwait
mov
mov
cmp
mov
scas
mov
rcr
jmp
inc
jecxz
lds
mov
or
sbb
loopne
mov
(bad)
jecxz
lods
pop
push
mov
das
dec
aas
push
xor
test
sar
outs
sub
push
inc
sbb
xlat
cli
add
clc
push
daa
(bad)
sbb
fstp
(bad)
cmc
sub
inc
(bad)
scas
lea
ins
cmp
imul
lahf
loop
cli
add
inc
sti
pop
std
jecxz
outs
mov
push
(bad)
ja
ja
mov
pop
imul
lahf
inc
and
pop
(bad)
loopne
enter
xor
mov
popf
dec
test
sbb
lods
in
inc
or
mov
in
pop
jmp
mov
data16
push
dec
inc
pushf
inc
sub
ins
mov
ins
inc
sbb
inc
rcr
ret
push
(bad)
inc
icebp
mov
sub
les
pop
xor
test
xchg
movs
inc
test
cwde
add
mov
mov
xlat
pop
cmp
add
dec
and
fldcw
test
xor
xor
int
call
fisub
inc
and
in
pop
push
fst
fs
mov
cmp
push
dec
and
ja
or
pop
std
scas
and
adc
pusha
adc
out
mov
jle
in
sub
int3
push
sbb
shr
cmp
xor
pop
addr16
sbb
dec
imul
imul
lods
mov
xor
jne
loop
push
jl
(bad)
int
cmp
push
cld
inc
repnz
in
cmp
lods
mov
sbb
daa
stos
fisttp
repnz
ja
xchg
idiv
ins
push
call
mov
iret
(bad)
mov
or
mov
jns
and
fadd
gs
dec
jae
jecxz
mov
jecxz
mov
mov
cmp
or
push
nop
aaa
mov
adc
dec
enter
leave
xor
mov
(bad)
cmps
mov
cmp
mov
adc
and
sub
mov
outs
retf
(bad)
pushf
in
xor
mov
fidivr
mov
add
sbb
inc
mov
cmp
xchg
jl
loopne
pop
cmps
jl
ret
dec
mov
in
fisttp
stos
enter
lock
rol
fldenv
mov
stos
cld
ja
cld
test
inc
jge
ja
hlt
popa
imul
push
(bad)
jl
enter
jmp
jns
jns
fbld
push
lods
iret
call
mov
das
lods
or
pop
jmp
cmp
jmp
pushf
or
sbb
jno
ins
ds
mov
ds
push
(bad)
lds
pop
jg
inc
xchg
ret
jns
outs
int3
loop
in
jmp
xchg
dec
sar
xchg
rcl
out
out
loop
retf
fwait
into
or
add
stos
lea
retf
push
data16
or
push
pop
call
jo
mov
shl
sub
retf
or
ror
or
sbb
sub
lds
cmp
xor
push
mov
push
mov
ret
mov
pop
js
test
loop
push
pop
jno
pop
push
sbb
ds
mov
lods
jo
div
jnp
add
push
lods
sub
lock
and
jmp
mov
cli
dec
fwait
aam
jne
leave
adc
scas
retf
into
and
int
in
mov
in
out
sbb
je
ins
in
movs
loopne
movs
sahf
pop
ja
xchg
or
jo
xchg
out
dec
add
imul
push
adc
adc
inc
aas
fisttp
add
in
in
fld
jle
mov
lock
dec
push
dec
mov
and
cmps
outs
jo
rol
and
in
pop
pop
inc
inc
pop
inc
cmp
push
mov
(bad)
out
mov
and
inc
leave
rcr
and
pusha
or
ficomp
adc
mov
jo
and
fcomp
cmc
(bad)
iret
inc
mov
mov
pop
repnz
or
sub
xchg
mov
inc
cli
in
sub
mov
push
retf
das
push
(bad)
test
lods
lea
adc
aam
jmp
pop
mov
pop
cld
test
cmps
mov
jno
push
mov
dec
mov
sbb
rcl
ret
repz
cs
aas
push
mov
arpl
push
jg
cmp
push
ja
sbb
int3
cwde
fs
cwde
out
sbb
(bad)
fimul
pop
cs
out
jno
jo
out
nop
dec
and
mov
sbb
lock
mov
loope
and
add
out
scas
mov
stos
sub
mov
gs
cmp
into
mov
leave
mov
jmp
xchg
ja
or
test
and
sar
mov
xor
imul
jmp
call
repnz
add
cmp
push
jno
aas
icebp
and
rol
sub
adc
loop
push
inc
jnp
inc
xchg
or
sbb
in
dec
ror
push
js
clc
lods
popa
rcr
pop
movs
scas
jne
fst
mov
xlat
iret
imul
push
xor
xor
enter
leave
fcom
cld
out
jno
jmp
mov
xchg
shl
aam
loop
repz
(bad)
aad
in
cmp
or
(bad)
xchg
mov
push
mov
cdq
inc
mov
out
(bad)
lods
and
cmp
cmp
(bad)
xchg
ja
add
or
in
add
add
cdq
cmps
loope
inc
xor
retf
adc
lock
jecxz
dec
push
sahf
pusha
add
pushf
ror
repz
and
out
(bad)
adc
cmp
inc
test
pop
stos
cli
aad
pop
or
push
sar
aad
push
mov
std
push
xchg
cwde
not
pop
(bad)
mov
and
icebp
inc
icebp
sbb
lahf
clc
xchg
xlat
and
call
push
sub
add
jge
cs
into
add
or
sbb
mov
ins
dec
imul
cmp
stos
jmp
rcl
shl
(bad)
jmp
stc
sub
sub
call
jmp
sub
lock
mov
sar
aaa
adc
push
jbe
mov
mov
call
xchg
ret
and
push
cs
xchg
mov
mov
pop
cdq
xor
outs
xlat
dec
jecxz
daa
inc
retf
pop
cmp
cmp
ss
mov
aam
in
test
jnp
sbb
add
jns
les
imul
pop
or
mov
sbb
or
call
scas
cmp
push
aas
mov
cmp
cdq
push
and
addr16
and
in
aad
jge
sahf
rcr
dec
push
mov
lods
aam
pop
xchg
scas
rol
sbb
jmp
ja
loope
cld
out
stos
aas
ret
or
sbb
inc
mov
sub
pop
jbe
out
int3
jb
and
dec
inc
enter
fdivr
into
scas
pusha
inc
mov
push
pop
mov
mov
cli
es
sar
movs
pop
fsubr
mov
mov
imul
test
sub
mov
push
in
(bad)
xchg
adc
jecxz
push
sbb
sti
xor
aam
inc
in
inc
gs
xor
push
(bad)
fdivr
hlt
loop
ins
ret
aad
fdivr
xchg
(bad)
cld
addr16
inc
popa
and
ret
mov
xor
push
xor
xor
stos
add
leave
test
pushf
lea
dec
jl
jbe
mov
sbb
test
inc
inc
outs
and
adc
loop
mov
jle
jecxz
lods
movs
ficomp
xchg
jg
or
outs
mov
sub
lods
test
in
das
xlat
jecxz
inc
jmp
outs
add
mov
xor
pop
jnp
arpl
pusha
imul
in
pop
mul
das
sbb
mov
cdq
dec
adc
add
cs
sbb
mov
daa
fs
pop
mov
xlat
stos
in
jge
out
add
jg
cmc
out
(bad)
shr
inc
sub
add
dec
cmp
movs
push
outs
fwait
or
stos
dec
push
jae
pop
iret
scas
sbb
jmp
inc
xor
jae
and
out
sbb
dec
or
adc
repnz
repnz
mov
pop
pop
retf
fstp
and
fdiv
dec
pop
and
dec
es
adc
out
inc
(bad)
and
(bad)
cli
je
outs
call
mov
xchg
popf
int3
in
jge
jg
gs
jge
mov
cwde
mov
sbb
fcomp
aad
mov
add
sbb
mov
xchg
adc
jmp
out
hlt
fst
xchg
and
lea
sub
push
fisub
in
sub
jno
cmp
xor
cwde
push
pop
fisttp
cs
inc
dec
neg
add
or
into
lahf
lea
inc
pusha
push
jnp
ror
enter
lea
movs
push
push
xchg
xchg
mov
int3
jo
push
das
xor
xor
retf
xor
xchg
neg
mov
retf
pop
add
outs
inc
pop
xor
jno
icebp
mov
call
pop
fidiv
inc
jae
pusha
cld
out
shl
cmp
shl
icebp
jmp
je
jb
retf
in
mov
xchg
aad
ins
jo
pop
xor
(bad)
adc
nop
mov
scas
fisttp
cmp
mov
loope
jae
adc
jmp
dec
xchg
pop
ins
and
inc
retf
or
mov
(bad)
in
(bad)
or
sbb
test
(bad)
ror
add
ins
cmp
movs
sub
outs
pop
(bad)
les
adc
fadd
sbb
add
(bad)
dec
sbb
fmul
cmp
rcr
daa
adc
xchg
adc
dec
out
sub
mov
mov
jmp
scas
mov
jbe
xchg
das
cli
ret
xor
aad
inc
ret
mov
cmps
xchg
mov
xchg
lahf
in
jecxz
add
mov
retf
xchg
cmp
sbb
call
xchg
mov
lods
cli
enter
sub
shl
jge
xor
pop
add
pop
mov
jp
ins
btc
fild
in
int
addr16
pop
rcr
je
jb
loopne
mov
push
arpl
mov
mov
xlat
(bad)
loopne
fsubp
sbb
and
jg
cmps
add
cs
xchg
push
jmp
jne
inc
ins
cmp
fidiv
sar
(bad)
dec
sub
jle
dec
inc
or
push
(bad)
mov
imul
jo
aad
gs
daa
jbe
(bad)
pop
ins
cmps
loop
pop
lahf
push
mov
fisttp
sahf
outs
adc
mov
out
xchg
and
int3
cmp
sbb
dec
xchg
push
test
push
lods
rcl
fs
jo
mov
test
sub
rcl
into
xchg
sub
jle
in
pop
push
aad
aas
loop
imul
push
or
push
cmc
nop
in
sub
int
sub
inc
jb
xchg
(bad)
out
les
mov
shl
sbb
push
mov
sub
clc
sub
cmp
jnp
bound
sbb
inc
js
js
lock
xor
push
xor
lods
mov
xor
jns
mov
inc
mov
fimul
(bad)
sbb
push
pop
cld
ret
or
cmp
rcl
cmp
lock
imul
pop
add
stos
dec
jg
push
sbb
mov
mov
xchg
xchg
xor
outs
inc
test
or
fmul
xchg
dec
fimul
sar
cmp
add
mov
sub
cmp
data16
sti
mov
je
push
mov
cmps
cs
and
mov
and
mov
aad
mov
lods
stos
icebp
neg
fs
out
jle
std
js
sbb
inc
push
cwde
xchg
fldcw
and
sbb
in
shr
mov
lea
pop
adc
push
pop
mov
retf
jns
aad
aaa
adc
adc
ins
push
fldcw
xor
add
xchg
or
sub
rcl
out
(bad)
jbe
outs
pop
sar
cmps
push
and
mov
cdq
adc
cmp
cmp
rcr
imul
cmp
sbb
lods
push
lods
in
daa
scas
add
sub
mov
in
push
test
ins
pop
neg
je
sbb
call
add
or
pop
lods
xchg
stos
popa
test
shl
sub
std
push
cmp
push
adc
and
jmp
mov
je
call
loop
mov
in
or
cmp
int3
inc
push
mov
fs
sahf
ret
mov
push
push
push
daa
jb
jae
lods
pop
cdq
fld
mov
aaa
outs
xchg
loopne
pusha
not
cli
push
mov
mov
xor
push
sar
adc
in
cmp
js
out
sub
sub
(bad)
aad
mov
xor
js
add
clc
sbb
jp
icebp
mov
sub
mov
xchg
and
adc
rol
mov
xchg
ins
loope
mov
out
fdivrp
sbb
sbb
enter
jg
cmp
mov
iret
dec
imul
sub
scas
and
pop
xchg
das
ret
iret
pop
inc
and
mov
aas
mov
and
sbb
or
lds
jo
adc
rol
mov
mov
out
add
mov
pop
push
jmp
movs
in
push
dec
or
shl
mov
lock
xchg
push
cmps
mov
mov
cdq
dec
outs
retf
(bad)
adc
xor
imul
lock
or
push
cmps
das
arpl
in
jbe
xchg
in
push
xlat
stos
retf
inc
mov
outs
push
mov
push
and
or
xlat
inc
fcomp
xchg
out
rcl
shr
int
les
lds
sub
bnd
int3
daa
xchg
sub
rcl
mov
cmp
adc
rol
lods
std
loopne
les
sbb
rcl
sub
rcl
aas
sbb
pop
jmp
mov
iret
mov
out
mov
in
adc
loopne
xchg
cmps
cmps
xchg
gs
int
sbb
inc
addr16
mov
mov
sahf
leave
cs
es
(bad)
cmp
movs
mov
or
pop
pop
cmp
xchg
in
outs
jmp
ins
sbb
xor
fnsave
cmp
mov
add
jae
mov
js
or
xchg
push
in
cs
mov
cwde
and
fld
scas
xor
fwait
nop
iret
mov
or
cmps
xchg
add
xchg
xor
imul
in
push
sub
sti
xor
movs
mov
or
push
or
in
pop
xchg
fadd
jle
retf
fidivr
fstp
ss
sub
sbb
cmp
push
(bad)
and
hlt
cmps
and
and
ins
mov
cld
mov
mov
ins
sar
in
dec
shr
neg
repz
fst
arpl
ret
add
das
shl
fstp
xor
push
scas
data16
or
xor
jno
int3
adc
push
repz
mov
dec
xchg
jmp
push
std
jmp
add
inc
sub
xlat
pop
cmp
dec
cmp
fldenv
adc
retf
mov
mov
lea
jg
lea
call
xchg
or
mov
(bad)
xor
sbb
addr16
sti
sti
movs
jmp
jg
xchg
stos
aas
cmp
mov
in
xor
inc
pop
mov
fld
xchg
adc
inc
mov
ins
scas
mov
and
add
pusha
movs
mov
mov
jmp
add
call
fnstsw
mov
call
push
jns
repz
jge
cmp
sbb
dec
inc
fisubr
add
pop
ret
hlt
aam
in
daa
iret
cld
inc
fld
and
push
les
adc
sbb
xchg
mov
mov
out
pop
cmps
(bad)
jb
mov
adc
jne
adc
fsub
inc
cmps
jno
int3
bound
div
pop
fidiv
push
push
inc
ins
xor
bound
mov
(bad)
lahf
daa
movs
leave
jg
inc
jecxz
mov
add
sti
cmp
push
outs
adc
cmp
sar
mov
out
mov
jmp
or
iret
cmp
push
jl
push
mov
mov
xlat
fidiv
or
loope
mov
mov
xchg
sti
fimul
int3
sbb
(bad)
icebp
les
scas
outs
ss
test
dec
stc
dec
ret
pop
das
enter
or
sbb
hlt
pop
pop
adc
push
or
rcr
push
push
gs
and
pop
push
push
js
sahf
sbb
stos
lods
ins
add
pop
icebp
ins
(bad)
dec
bound
aas
test
mov
pop
(bad)
in
shl
xor
cld
jle
das
out
je
mov
mov
push
fwait
add
arpl
jb
xor
cmc
mov
mov
mov
rcr
std
mov
sub
and
shl
lods
jne
cwde
daa
scas
and
jmp
mov
cmp
push
out
sub
arpl
ins
(bad)
jb
outs
jmp
popa
pop
xor
push
mov
shr
gs
cwde
outs
xor
sub
mov
mov
popa
sbb
push
popf
lock
sub
pushf
movs
add
enter
ins
or
loopne
cmps
ss
jmp
push
jmp
dec
adc
inc
push
frstor
mov
mul
gs
mov
push
mov
bound
in
popf
jns
jb
repnz
or
mov
mov
cmp
das
jl
dec
pusha
jmp
and
push
movs
push
add
xchg
or
sbb
cmp
ins
jns
sti
fdivr
imul
cmp
ror
jnp
dec
sysenter
xchg
data16
adc
int
aas
xor
cmp
nop
mov
pusha
mov
sub
mov
pushf
pop
dec
xor
inc
dec
pop
fidivr
ret
jg
xor
xchg
in
or
shl
call
test
mov
nop
fnstenv
test
cwde
adc
psraw
inc
loopne
mov
outs
push
pop
pop
popf
or
std
out
push
push
add
mov
cmp
test
int
dec
hlt
retf
fiadd
icebp
mov
mov
dec
xchg
div
jmp
jmp
popa
and
daa
or
jnp
cmp
inc
sbb
adc
dec
mov
retf
mov
ret
lods
push
(bad)
push
sub
loopne
not
icebp
cwde
fwait
inc
in
and
shl
loopne
inc
and
repnz
cld
shl
lods
add
or
inc
js
mov
sub
mov
jg
or
push
cmp
push
in
cmp
(bad)
sbb
xchg
add
cmps
mov
out
leave
push
stos
pop
inc
mov
loopne
mov
jge
inc
jb
xlat
xor
and
push
in
sbb
out
adc
adc
in
pop
mov
ins
xor
xchg
mov
add
stc
pop
fild
in
add
adc
mov
xchg
push
(bad)
outs
push
dec
mov
mov
daa
lods
test
dec
adc
ret
xlat
idiv
cld
(bad)
imul
dec
inc
mov
xor
cwde
ret
(bad)
mov
push
(bad)
lock
jno
adc
fnstcw
xor
push
in
inc
iret
jne
cmp
hlt
sbb
shr
pusha
ins
dec
sar
jbe
add
mov
pop
cwde
cmc
xchg
push
fs
push
imul
loop
jo
movs
push
in
lock
mov
push
push
fcmove
stos
jle
lods
add
adc
loopne
pop
push
mov
loop
pop
mov
inc
loop
rol
loope
sbb
inc
test
fmul
xor
loop
pop
push
psubusb
add
inc
stos
cmp
imul
fld
outs
push
jecxz
es
or
cs
mov
ds
scas
aas
popf
sub
repz
fstp
jae
retf
inc
out
xor
outs
mov
mov
outs
in
aaa
out
sbb
hlt
and
jp
rol
sti
arpl
jo
out
ret
cmp
out
xchg
cmp
fidivr
lds
mov
jl
shl
fistp
mov
jle
mov
hlt
ins
mov
into
xor
out
sub
int
repz
adc
adc
inc
add
pop
cld
jp
jbe
pop
mov
mov
mov
dec
inc
mov
in
or
(bad)
int
movs
std
es
jmp
pop
jne
in
pop
push
xor
stos
jmp
out
xchg
push
inc
xor
and
ret
scas
and
data16
rcl
mov
sub
mov
mov
jmp
mov
mov
cld
test
add
jbe
inc
fs
push
daa
adc
xor
xor
nop
cmc
sar
ja
cdq
lods
pop
mov
repnz
sti
push
(bad)
loope
sbb
jl
cmp
pop
sbb
addr16
sub
cld
xchg
adc
jge
cmp
popf
fldcw
jg
inc
adc
div
push
pop
loope
out
dec
and
jmp
mov
out
xchg
dec
mov
aam
xchg
shr
dec
cmps
and
std
daa
daa
mov
xchg
dec
std
(bad)
sbb
les
fcom
or
inc
mov
mov
loopne
push
fs
mov
sub
ins
inc
mov
fwait
xchg
push
fisttp
repnz
mov
cwde
sahf
sub
pushf
mov
loopne
popa
scas
aaa
xor
sub
mov
into
js
adc
mov
sbb
jb
inc
in
xor
in
jne
in
pop
pusha
and
movs
pushf
into
adc
daa
into
adc
add
inc
sahf
cmp
push
rcl
add
lahf
inc
mov
xlat
and
sub
mov
xchg
pop
mov
aam
aam
mov
ds
repz
xchg
sbb
push
push
into
and
mov
cli
inc
shl
sbb
loop
nop
cld
aad
cmps
xor
fidiv
inc
xchg
dec
outs
mov
repz
mov
fwait
test
xchg
ins
rcr
ret
es
aad
push
fistp
sbb
icebp
inc
or
xchg
inc
mov
mov
jmp
mov
in
mov
push
pop
aas
mov
add
out
rcr
and
sahf
fs
retf
and
xchg
repnz
aas
sahf
push
mov
ins
xchg
mov
loopne
shl
push
mov
mov
or
add
inc
jp
in
pop
call
pop
cmp
inc
jg
add
cmp
cmps
inc
dec
inc
addr16
aas
outs
jo
cli
aas
aad
mul
in
int
add
xchg
cmp
pop
push
and
cwde
das
mov
mov
js
movntps
imul
shr
sahf
xor
add
cmp
outs
mov
das
fiadd
int3
push
data16
sub
xchg
rol
outs
mov
mov
dec
popa
scas
loop
mov
ret
data16
fisttp
mov
xor
iret
mov
adc
cli
(bad)
out
jg
ret
int
lock
loop
inc
lods
cli
(bad)
in
push
imul
adc
adc
lods
ret
dec
xor
xor
popf
push
mov
out
shr
fwait
push
jp
stc
in
mov
out
xchg
xor
imul
jno
inc
std
inc
aas
lds
xchg
push
sbb
jne
fisttp
adc
leave
movs
dec
stc
movs
sbb
dec
push
and
add
nop
push
mov
sub
js
fwait
mov
push
adc
push
das
mov
es
jne
adc
or
fidivr
xor
shl
mov
jecxz
cmp
idiv
bound
jae
lock
ja
aad
adc
pop
sub
cmp
adc
and
push
xor
lea
dec
add
dec
ins
push
pop
daa
(bad)
(bad)
test
push
adc
nop
int3
mov
sub
xor
aad
(bad)
jo
gs
adc
scas
pop
adc
dec
movs
jl
push
test
jg
repz
(bad)
repnz
inc
fbstp
out
sub
push
and
test
(bad)
les
hlt
add
rcl
push
or
fld
sub
test
pop
push
mov
mul
out
ds
in
and
lahf
sub
dec
in
mov
dec
and
sub
std
sub
jo
cwde
xchg
imul
(bad)
pusha
push
pop
inc
xchg
movs
in
push
jmp
inc
inc
adc
inc
hlt
or
or
inc
(bad)
(bad)
mov
push
fwait
inc
jp
pop
sti
inc
cwde
mov
sahf
push
je
loope
dec
mov
ins
cmp
(bad)
dec
je
neg
and
xor
cld
xor
mov
and
pop
aaa
js
pop
pop
rcl
pop
adc
lock
jecxz
test
mov
aad
adc
xor
int
(bad)
mov
mul
add
pusha
adc
retf
pop
(bad)
cli
fst
xor
loope
(bad)
jo
adc
inc
bnd
cmps
stc
rcr
hlt
pop
or
jns
mov
and
and
cwde
fsubr
xor
fdivrp
sbb
jno
dec
mov
mov
pop
push
jno
retf
adc
mov
ret
xor
cmp
outs
xor
pop
or
jo
cmp
mov
lock
clc
mov
inc
adc
or
xchg
out
in
mov
cmp
lods
pushf
shl
mov
pop
push
cmp
push
pop
and
sahf
mov
mov
sbb
in
sub
ds
jp
pop
ror
sahf
sub
pusha
aas
fisub
sahf
jne
push
cmps
push
cmps
ins
xchg
mov
push
cmc
test
daa
mov
inc
ror
cmp
movs
loope
shl
cli
mov
pop
mov
mov
scas
push
cmp
cmp
mov
pop
sub
mov
stc
retf
nop
lea
aas
adc
shl
shl
(bad)
aas
xchg
neg
(bad)
jnp
mov
inc
add
ror
ror
mov
and
outs
imul
jge
mov
xor
pop
ss
bound
or
movs
mov
pavgb
lods
jns
add
daa
jno
jmp
xchg
sbb
inc
mov
daa
fmul
pop
cli
sub
cmps
sub
jp
inc
push
and
xchg
xchg
lahf
pop
jg
scas
imul
es
popa
cmp
cmps
sub
jnp
sahf
cmp
cmp
xor
xcrypt-ecb
cmps
dec
(bad)
xchg
jae
mov
and
sar
sbb
stos
inc
push
and
add
or
out
cwde
mov
ds
in
jnp
into
mov
sbb
or
jmp
push
add
add
retf
fcmovne
inc
inc
cmp
push
mov
sbb
retf
mov
sub
adc
mov
xchg
cwde
xlat
loopne
fwait
leave
xlat
xchg
xchg
ret
fsub
xor
enter
mov
add
push
pushfw
ds
stos
mov
scas
loop
test
dec
stos
rcr
ja
repnz
inc
cmps
aas
test
xor
sbb
mov
mov
adc
call
or
mov
jge
mov
cmp
mov
xchg
xchg
mov
ins
cmp
(bad)
xchg
aas
push
out
inc
pop
(bad)
push
std
dec
jbe
iret
scas
push
lods
push
and
es
lea
push
mov
cmc
mov
repnz
mov
or
push
xchg
xchg
adc
dec
push
int3
push
repz
loop
in
aas
fistp
in
mov
push
inc
hlt
mov
mov
cld
xor
lahf
sub
(bad)
xor
icebp
icebp
fs
sbb
push
gs
mov
mov
mov
dec
cmp
fiadd
adc
jle
pop
shl
sbb
fldenv
in
(bad)
jmp
loope
dec
mov
cli
mov
cmps
and
jae
arpl
shr
outs
leave
mul
sbb
pop
add
push
movs
push
in
pop
scas
in
mov
jmp
cwde
jl
aad
mov
mov
xchg
pushf
xor
xor
fstp
(bad)
jl
jl
or
sahf
fidiv
movs
ror
jecxz
xor
sbb
imul
xchg
and
shr
cmps
das
and
mov
or
mov
leave
rcl
adc
ud1
clc
(bad)
mov
test
ss
push
popa
jle
inc
xor
or
out
xchg
sub
mov
or
pop
add
inc
(bad)
popa
outs
or
adc
push
and
sub
add
mov
retf
mov
add
pop
mov
retf
dec
icebp
add
jne
arpl
bound
xlat
ins
mov
and
cmp
inc
pushf
or
push
shl
mov
push
inc
pop
test
cdq
hlt
sbb
jle
inc
mov
cli
call
pusha
xor
js
sub
add
ss
pop
push
sbb
and
inc
push
push
add
mov
dec
les
addr16
loope
shl
xor
retf
sbb
cdq
test
jl
rol
or
cmc
xor
push
pop
std
retf
xor
xor
sub
movs
cdq
sub
outs
dec
rol
cmp
and
imul
loope
jl
mov
or
(bad)
mov
sub
inc
jmp
xor
push
aas
iret
retf
loope
sti
or
gs
and
repnz
aaa
loope
int3
rcl
mov
adc
mov
jge
je
sar
shl
fwait
pop
xchg
fdivr
shl
xchg
dec
ret
and
jo
clc
jp
(bad)
xchg
pop
(bad)
(bad)
cmc
mov
out
mov
add
das
lock
ror
cs
mov
inc
lea
fcompp
push
sbb
pop
and
test
movs
cdq
test
(bad)
and
data16
jge
loope
dec
cmp
loopne
jmp
arpl
jmp
vpunpckhbw
(bad)
mov
out
cmp
pop
jno
fnstenv
enter
retf
daa
fwait
jmp
sbb
cdq
push
cli
lods
call
(bad)
outs
ret
dec
jbe
(bad)
xor
ret
mov
pop
xor
push
cmps
sub
retf
icebp
int3
arpl
sub
in
mov
pushf
ins
movs
arpl
push
int3
hlt
pop
sub
inc
add
dec
and
aad
mov
ja
hlt
jnp
(bad)
ins
xor
cli
mov
mov
lds
fld
ins
mov
pop
or
mov
cmps
jne
lods
ret
dec
ja
gs
xchg
lea
fmul
mov
sub
sbb
fld
adc
sub
mov
push
jno
mov
and
mov
jne
loopne
and
mov
xor
add
dec
push
jecxz
xor
adc
hlt
addr16
dec
mov
lods
inc
lea
aam
into
pop
adc
push
and
cli
xor
ins
mov
movs
and
movs
inc
imul
cmp
xor
sbb
(bad)
mov
dec
shr
dec
inc
fcomp
addr16
and
push
jl
mov
ret
jge
iret
test
js
ins
mov
push
sbb
cdq
(bad)
push
movs
jmp
aad
push
pop
sbb
xor
fbstp
or
xchg
outs
iret
cmc
imul
int3
push
aam
dec
out
jne
mov
fst
ins
adc
inc
loop
and
cwde
lods
add
push
cmp
mov
pop
stc
mov
inc
test
sbb
xchg
push
in
in
lea
and
and
add
dec
nop
ins
or
sti
push
cmps
imul
popf
rol
xor
js
mov
and
xor
push
xchg
xchg
retf
dec
jle
in
int3
sar
jl
mov
xor
and
stos
fdivr
scas
fwait
in
inc
fsub
stc
mov
outs
shr
mov
jb
ins
xor
loop
inc
sbb
scas
stc
or
cs
or
adc
mov
data16
sbb
loop
dec
inc
dec
icebp
or
std
mov
cld
fstp
xchg
loop
pop
outs
pop
push
mov
iret
mov
aad
sbb
inc
out
rol
aam
push
cmps
or
(bad)
jbe
xor
mov
or
jmp
ror
leave
pop
pop
loope
fst
stos
bound
repz
fidiv
out
repnz
cmp
add
iret
pop
jecxz
fnstsw
jnp
pusha
lahf
mov
lahf
mov
cmp
retf
xchg
mov
and
adc
sub
movs
jle
rol
dec
inc
lods
or
enter
mov
jne
xor
push
fsub
cmp
popf
ss
mov
dec
jg
cld
mov
test
stc
jl
inc
lods
adc
push
outs
push
in
adc
out
mov
cmp
jnp
shr
ja
push
js
js
(bad)
addr16
push
and
push
sbb
addr16
xchg
data16
pushf
cmp
arpl
cmp
xlat
xor
add
push
test
mov
das
mov
jne
leave
frstor
test
inc
test
or
das
fdivr
mov
inc
inc
int
mov
inc
push
aaa
les
fild
nop
loop
outs
xchg
mov
daa
sbb
scas
dec
cwde
pop
outs
or
cli
cmp
arpl
das
(bad)
inc
bound
cmp
imul
mov
mov
sbb
icebp
sti
(bad)
repnz
popa
mov
repnz
jg
push
dec
nop
push
push
pop
jns
sub
mov
push
jge
stos
mov
mov
test
icebp
dec
imul
gs
outs
mov
dec
sub
push
pop
stos
retf
jle
inc
jp
in
jbe
add
hlt
pop
xor
(bad)
js
stc
shr
mov
sub
push
shr
mov
jmp
aam
call
pusha
mov
pop
pop
je
sub
adc
xchg
je
sub
popf
aas
push
call
cmps
stc
stos
mov
call
(bad)
scas
fdiv
xor
nop
sbb
push
ins
test
jae
sub
mov
inc
xor
mov
out
(bad)
cwde
arpl
sub
(bad)
aad
inc
shl
inc
jo
sub
mov
pop
or
mov
fcomip
stc
aam
ret
mov
nop
xor
call
std
rcr
add
pusha
popf
into
xor
lahf
mov
lods
jo
fst
mov
xchg
sahf
jnp
cmp
scas
pusha
gs
int
pop
sub
inc
ret
test
adc
sub
cli
retf
out
jg
rcl
mov
pop
mov
outs
adc
cmp
ret
mov
sbb
mov
stos
leave
ja
es
imul
sub
mov
loope
dec
xlat
rcr
sub
xchg
in
sub
sbb
sbb
dec
mov
test
dec
sbb
jne
jecxz
sbb
add
and
shl
inc
lock
xlat
mov
and
rcl
sub
cs
xchg
retf
retf
movs
addr16
dec
stos
pop
icebp
in
push
jl
shl
stc
ja
adc
(bad)
popa
jg
xor
arpl
out
mov
in
mov
fcom
dec
dec
push
cmps
out
mov
bound
movs
pusha
push
xor
not
pop
nop
add
pushf
and
sbb
movs
std
cld
xchg
jne
dec
jns
stc
(bad)
icebp
jp
dec
xlat
jp
push
sub
pop
push
lods
loop
mov
xchg
and
retf
movs
jecxz
add
xor
push
lock
push
push
shr
mov
stos
cmp
mov
mov
xor
mov
xor
inc
adc
xor
sbb
dec
js
mov
das
cmp
jo
add
or
pop
rcl
dec
pop
in
jmp
test
xor
jns
sbb
cmp
or
not
aaa
fidivr
sub
xchg
rcl
pop
cwde
mov
fisubr
adc
cmps
mov
pop
pop
sbb
and
and
inc
inc
movs
and
push
repz
jno
nop
xlat
or
scas
pop
adc
inc
mov
inc
test
jmp
pushf
nop
and
dec
es
push
cmps
xchg
sbb
push
ss
call
sub
inc
push
std
call
mov
push
sub
stos
ins
addr16
ss
push
pusha
or
cmps
jecxz
or
adc
jecxz
dec
mov
pushf
mov
inc
(bad)
xchg
ins
and
jecxz
rcr
xchg
cmp
xor
loopne
mov
enter
inc
es
xchg
sbb
mov
pushf
popa
push
push
add
sub
push
push
scas
in
push
sbb
jge
sbb
call
xchg
jmp
lahf
push
stc
add
xor
arpl
mov
dec
add
out
fs
or
mov
sub
pop
aas
cld
cmps
repnz
enter
inc
aas
cmps
adc
xor
jle
and
rcr
jle
xor
xor
mov
jecxz
or
mov
arpl
call
mov
movs
inc
add
retf
clc
cmps
and
out
shr
push
push
jp
cmp
inc
shl
push
dec
push
sbb
jns
outs
ins
adc
iret
test
adc
sar
(bad)
fnstenv
cmp
lock
or
mov
mov
mov
jo
sub
imul
inc
shr
ins
cdq
sbb
xor
push
rol
sub
ret
and
pop
mov
jae
dec
cmp
cld
fcmovb
sub
inc
je
mov
in
pop
inc
mov
jl
rcl
sbb
xchg
inc
add
dec
xchg
mov
push
cmp
popa
in
inc
bound
stos
sub
iret
loope
test
mov
movs
add
pop
push
jecxz
cmp
jge
ret
pop
mov
xchg
mov
xor
data16
out
cmp
push
into
xor
pop
popf
jl
out
jl
test
push
pop
xor
xor
test
or
push
or
(bad)
xchg
scas
sbb
dec
pop
rcl
int
int
popa
je
dec
dec
mov
imul
and
push
stos
shr
cs
ret
in
mov
sub
es
jnp
(bad)
sbb
ror
in
xchg
addr16
popf
stos
mov
pop
inc
add
or
dec
lods
or
pop
aas
fidivr
repnz
imul
addr16
and
sub
cdq
and
add
pop
pop
repz
in
sbb
clc
pop
inc
mov
pop
retf
aaa
in
enter
mov
jge
mov
or
jg
test
in
dec
mov
dec
retf
mov
mov
cmp
aaa
xchg
and
push
sub
test
lods
mov
mov
mov
neg
ret
xchg
lock
loop
out
mov
mov
jno
stos
add
nop
pop
jae
rol
sbb
nop
xchg
aad
cmp
ret
hlt
fistp
loope
data16
sub
por
push
es
pop
add
scas
ins
jae
mov
dec
push
test
rol
icebp
adc
cmp
out
pusha
ret
pop
mov
and
in
cli
mov
mov
jmp
fild
pop
cwde
mov
mov
mov
sub
push
repnz
mov
int
xchg
dec
push
sbb
mov
inc
or
data16
mov
retf
aad
enter
add
arpl
ins
outs
call
(bad)
jno
xchg
cmps
lods
cmc
hlt
xor
jle
pushf
stos
clc
sub
sbb
sbb
data16
fidiv
jmp
ror
rcr
cwde
push
(bad)
or
adc
mov
aas
xlat
mov
dec
xor
dec
sub
imul
inc
(bad)
sub
jns
sub
bnd
fdiv
jecxz
sub
test
cmp
or
pop
and
cld
int
push
lar
addr16
call
dec
fisttp
jge
lods
cmp
jl
sub
loope
mov
(bad)
jns
loope
jg
xor
fwait
add
cmp
xchg
call
xchg
and
mov
jg
add
loop
jb
loop
adc
or
sub
or
pop
jecxz
into
rol
and
ja
push
(bad)
dec
test
jl
stos
(bad)
bound
cmp
mov
and
call
push
imul
pop
jns
mov
popa
or
ret
dec
outs
scas
jns
sub
stos
rcl
popf
repnz
scas
int3
loopne
(bad)
(bad)
xlat
mov
iret
inc
inc
outs
outs
repnz
cmp
adc
jb
and
rcr
rcl
cmp
xchg
jecxz
mov
das
daa
push
add
lds
dec
jmp
cmp
cmp
mov
icebp
push
pop
cmps
ss
and
test
mov
test
mov
ins
jno
push
cmps
cs
inc
mov
xor
pop
add
add
jns
xor
adc
daa
pop
or
add
ret
add
nop
inc
add
pop
or
aad
sti
aaa
adc
test
inc
clc
rcr
cmp
mov
sbb
xchg
adc
test
mov
xor
scas
add
pusha
adc
in
int3
and
ret
fwait
push
inc
xchg
(bad)
and
iret
ins
jns
pop
xchg
iret
inc
cmp
add
xchg
addr16
in
leavew
(bad)
mov
data16
sar
dec
sub
jl
mov
xchg
data16
mov
scas
add
sub
mov
xor
nop
pop
sti
ret
mov
test
retf
jne
mov
sbb
pop
or
mov
scas
daa
ds
call
cdq
cmp
mov
sub
bound
mov
loop
(bad)
pop
call
dec
ret
rcl
sub
cdq
jb
and
push
gs
xchg
xchg
cmp
inc
in
jo
mov
(bad)
cmp
sbb
dec
cdq
popa
cmps
imul
mov
push
ret
adc
mov
es
repnz
jnp
cs
leave
inc
dec
inc
enter
add
push
xchg
sbb
cli
neg
inc
popf
inc
or
aas
sbb
hlt
les
popa
aad
inc
cmp
and
pop
push
and
into
xchg
ins
mov
pop
sub
popa
movs
jl
in
out
rol
loopne
xchg
or
dec
test
add
and
add
pop
int3
push
push
faddp
adc
push
add
add
outs
mov
call
push
pop
inc
jo
popf
mov
sbb
push
mov
mov
loope
into
imul
and
add
and
mov
pop
hlt
fcom
test
sahf
adc
push
pop
cmp
lds
std
push
inc
dec
(bad)
and
lock
add
mov
lods
outs
xor
leave
out
out
ins
loopne
loop
retf
jge
in
cli
pop
mov
cmp
arpl
push
xchg
push
mov
xchg
retf
adc
jo
xchg
cmps
mov
pop
mov
inc
adc
push
inc
add
call
mov
xlat
call
pop
popa
push
dec
movs
jno
add
inc
mov
stos
inc
adc
fmul
ss
pop
rol
mov
cmp
push
sbb
pop
mov
arpl
out
mov
cmc
mov
and
cdq
in
sub
out
mov
push
xchg
adc
and
cwde
inc
push
(bad)
mov
outs
out
out
push
jne
lock
daa
lock
cmc
push
mov
rcr
jae
mov
jl
fbstp
mov
call
jg
repz
cld
fld
mov
out
or
iret
lods
push
into
ins
and
test
aam
mov
dec
add
cmp
push
outs
pop
arpl
iret
push
call
inc
in
sbb
adc
jae
jb
adc
push
ins
mov
add
and
mov
(bad)
adc
mov
sub
inc
fdiv
mov
mov
cwde
cli
add
cdq
call
sub
adc
xor
and
push
fdivr
cmps
mov
push
push
jo
xchg
and
ret
mov
pop
ja
mov
in
stc
push
jo
int3
iret
das
or
(bad)
std
push
clc
icebp
pusha
jp
sbb
int
aas
pop
push
gs
lock
jecxz
fidiv
or
cmps
sbb
cli
test
aaa
pop
sub
dec
jnp
test
pop
bnd
jns
(bad)
sbb
mov
in
ficomp
in
iret
cmps
sub
stos
shl
sbb
ins
add
fld
mov
pop
jmp
je
inc
push
xchg
inc
push
adc
xor
adc
jmp
jmp
je
sub
xchg
jmp
push
gs
sbb
xor
lods
add
call
jge
add
pop
xchg
push
test
addr16
mov
dec
dec
cli
into
dec
xchg
cwde
cmp
xor
cmp
sub
pusha
or
movs
pop
xchg
lea
loopne
jge
dec
inc
aas
push
out
gs
sbb
or
pop
aad
test
jbe
lods
lea
cwde
push
add
pop
mov
loopne
hlt
nop
xor
lahf
cmp
scas
(bad)
cwde
call
mov
add
jo
retf
jne
loopne
pop
inc
mov
xchg
pop
xlat
test
jl
out
sub
out
sub
aaa
mov
cld
or
xchg
out
push
mov
mul
nop
fidivr
test
sub
repnz
(bad)
jle
and
das
stos
sar
xchg
or
es
push
and
pop
push
push
xor
jmp
ror
ror
xchg
xchg
fisttp
out
xor
inc
dec
popa
lods
cmp
sar
(bad)
cli
out
fnstcw
mov
jns
scas
xor
pop
fiadd
lods
loop
jb
iret
es
movs
hlt
outs
pusha
mov
sahf
push
fs
sbb
lahf
in
rcr
mov
mov
popa
stos
ret
xor
fisub
cmc
call
push
pop
fs
xor
dec
retf
fldcw
imul
sar
neg
mov
sbb
or
fstp
out
inc
clc
pop
out
mov
jmp
jge
sub
aaa
or
or
add
sbb
mov
repnz
sbb
mov
sbb
jo
mov
xchg
dec
sti
je
idiv
fwait
test
aaa
jp
pop
jl
jmp
rdtsc
out
in
sub
clc
pushf
fiadd
pop
add
or
lods
cmc
push
sbb
mov
cld
dec
repnz
xchg
add
or
and
out
int3
aaa
push
loope
cmp
movs
bound
mov
add
repnz
xor
xor
mov
cmp
ret
sbb
add
sub
jge
es
mov
mov
arpl
iret
(bad)
jmp
or
cdq
sbb
call
fimul
push
adc
shl
rol
scas
mov
cmc
adc
mov
dec
mov
xor
xor
mov
into
movs
and
lea
jno
dec
inc
lock
out
aas
mov
jno
sti
ds
sub
jle
and
push
mov
mov
pop
lea
jne
inc
(bad)
in
xor
sub
mov
ja
aas
mov
sbb
mov
rcr
pop
out
push
retf
fsubp
mov
data16
scas
mov
xor
fnsave
ss
das
ds
sub
daa
add
in
xor
add
cmps
addr16
and
cmps
ja
inc
mov
popa
dec
pop
(bad)
pop
add
mov
mov
or
lock
or
cmp
inc
mov
(bad)
iret
out
mov
pop
test
test
xor
sub
sti
push
or
sbb
xchg
jns
pop
pop
pusha
loop
mov
push
pop
mov
mov
mov
test
loopne
cmp
add
jne
or
sbb
cmp
movs
cs
push
mov
test
lock
xchg
jle
jmp
test
repnz
ret
inc
jp
(bad)
aam
push
fwait
enter
jo
pop
lods
in
scas
inc
add
push
(bad)
sub
adc
leave
jns
sbb
mov
and
mov
loop
pop
stc
cmp
data16
popa
rcr
push
dec
mov
inc
std
xlat
adc
xlat
out
sub
retf
mov
and
cli
repz
jmp
push
les
cld
(bad)
hlt
clc
icebp
lods
lods
jno
js
push
ins
les
ins
retf
ins
lock
and
mov
fisubr
sbb
push
popa
adc
push
ins
(bad)
icebp
push
les
mov
in
mov
or
lods
mov
fld
cmp
sub
in
outs
test
clc
loop
std
popf
xchg
stos
xor
ror
inc
mul
mov
cmp
xchg
in
mov
and
push
or
popa
cld
jge
push
pop
outs
cld
adc
jmp
dec
(bad)
fcmovnu
les
pop
jnp
ins
sub
rcl
jecxz
push
push
mov
repz
mov
add
leave
popf
push
adc
mov
fld
pushf
or
(bad)
dec
sub
push
shr
std
and
or
jo
es
add
and
xchg
shl
dec
xchg
sbb
cwde
pop
xor
cs
popa
dec
sbb
add
push
call
mov
dec
aaa
shl
add
test
mov
in
cs
inc
clc
cmp
nop
xchg
imul
and
xor
leave
jl
mov
pop
jle
mov
aad
adc
mov
mov
(bad)
fmulp
dec
mov
pushf
jmp
mov
loop
out
dec
iret
dec
cmp
push
mov
aam
aam
or
dec
lock
(bad)
push
lahf
xchg
outs
popa
repz
aam
dec
aaa
mov
ror
push
sbb
(bad)
das
loopne
outs
inc
mov
cmp
ret
leave
ins
test
or
lock
adc
aaa
mov
mov
jle
sbb
outs
xchg
mov
mov
jb
jns
out
in
aad
lods
push
push
sub
imul
ret
les
nop
cmp
xchg
out
repnz
shr
aas
add
cmps
sti
leave
les
out
aas
mov
bound
adc
repnz
icebp
add
mov
aaa
pop
xchg
push
je
daa
retf
(bad)
xchg
adc
mov
push
(bad)
test
xchg
fsubr
movs
add
lods
cmp
out
or
int3
lahf
(bad)
aas
push
jl
mov
iret
xchg
scas
pop
dec
repz
test
mov
out
movs
mov
ja
xor
mov
pop
and
daa
jge
xlat
shl
push
imul
mov
mov
outs
cli
stos
add
mov
shl
loop
lds
add
pop
xor
adc
pop
test
int
mov
or
sub
push
jne
mov
int3
inc
mov
jnp
lds
(bad)
adc
dec
out
fcomp
jle
or
into
fldenv
dec
in
pop
mov
xor
std
jns
popa
int
loope
cld
push
adc
out
push
fs
loopne
dec
mov
lahf
fldenv
(bad)
xor
mov
push
add
or
or
aam
rcl
loopne
dec
pop
xor
xchg
js
fidivr
cmps
shr
ror
jp
mov
mov
scas
add
pop
mov
test
loope
pop
pusha
ss
cmp
sti
ins
fst
(bad)
jnp
jge
cmp
mov
retf
repnz
test
int3
cmp
clc
in
adc
jnp
lods
jmp
mov
adc
fcmovnbe
sbb
jle
dec
into
data16
dec
mov
imul
pushf
sbb
in
push
hlt
ins
jnp
imul
xchg
pop
pop
hlt
dec
movs
mov
inc
ficomp
shr
push
xchg
fistp
lea
mov
cmp
imul
jb
pop
leave
das
inc
comiss
sub
inc
pushf
jnp
and
cmp
and
xor
adc
(bad)
sbb
and
int3
(bad)
lahf
dec
mov
je
sub
pop
(bad)
je
lahf
ins
cmc
pop
jo
repz
sbb
fcomp
imul
aaa
mov
addr16
arpl
fistp
aad
push
mov
mov
cmp
(bad)
movs
inc
push
aad
xchg
data16
mov
or
push
dec
jmp
test
pop
test
dec
sub
pop
lock
cmps
fwait
add
mov
inc
jnp
and
jmp
xor
or
shr
mov
fld
adc
xor
ja
ror
xor
cwde
out
lods
adc
arpl
xchg
lods
hlt
sbb
mov
jo
lods
pop
and
ins
add
jmp
popa
xor
rol
inc
push
pop
pop
cdq
cmp
mov
gs
pop
jl
cmp
cld
mov
stc
mov
scas
scas
cmps
cdq
retf
or
fimul
into
jmp
push
pusha
clc
fsubr
jge
mov
in
fcomp
daa
sbb
int3
loop
daa
sti
mov
push
fnstsw
ficomp
xchg
and
add
adc
loopne
mov
inc
fsubrp
mov
test
div
sub
push
inc
push
test
enter
shr
xor
fnsetpm(287
lds
out
cmps
and
loope
out
(bad)
mov
dec
loop
adc
(bad)
push
lea
push
pop
hlt
outs
cmp
cmp
mov
fiadd
xor
sbb
fldcw
test
(bad)
mov
sub
or
fimul
mov
add
push
call
popa
cmp
xor
add
ror
jbe
iret
aad
pop
pop
lock
sbb
hlt
or
dec
out
xor
aas
sub
test
xchg
xchg
jl
add
dec
inc
push
mov
mov
ficomp
add
lea
cld
xchg
loopne
mov
xchg
push
shr
xor
cwde
jge
fnsave
arpl
retf
cmp
popa
push
sti
and
jno
sbb
sub
lea
es
shr
into
xchg
movs
mov
adc
cmp
sub
das
fistp
pop
out
std
bound
cmc
les
(bad)
lahf
xor
aam
push
xlat
lds
adc
fisubr
sub
mov
pushf
dec
ret
add
(bad)
pop
xor
push
(bad)
add
imul
ins
cmps
or
out
enter
loope
add
aas
cli
push
mov
repnz
xchg
push
shr
bound
es
cmc
test
xor
xor
enter
test
push
mov
sbb
loope
adc
mov
movs
pop
fbstp
cmp
cli
and
popa
outs
pop
into
mov
into
icebp
cmp
xor
push
data16
bound
inc
sub
in
add
cmp
lea
jbe
lds
cmp
adc
mov
add
jmp
mov
mov
out
aam
lds
repnz
data16
mov
mov
loop
add
aaa
popf
bound
in
mov
(bad)
cmps
xchg
call
out
inc
jb
xchg
pop
div
pusha
pop
inc
push
and
mov
int3
sti
jbe
scas
out
enter
jb
jge
sub
mov
int3
lock
jo
push
adc
cmp
je
es
shl
xchg
mov
scas
or
xor
mov
mov
test
xchg
mov
and
cmp
sub
pop
add
pushf
mov
call
jmp
pop
cmps
cmps
mov
ins
(bad)
mov
mov
pusha
jmp
mov
pop
dec
xchg
(bad)
shl
pop
dec
lahf
arpl
jbe
and
lods
dec
push
xchg
mov
arpl
in
arpl
sub
icebp
into
add
leave
retf
pop
xlat
xchg
aam
fs
daa
sub
lahf
ror
jmp
mov
cmp
sar
pop
push
fwait
test
sbb
inc
and
in
test
xlat
inc
inc
adc
imul
and
pushf
jns
loope
aam
pop
add
nop
sahf
mov
sub
jl
sub
call
dec
shr
mov
ret
jno
pop
scas
adc
test
data16
push
call
loopne
stos
jecxz
stos
sub
rcl
mov
adc
mov
inc
jp
cmps
aas
and
pusha
pop
pop
jno
jmp
mov
adc
std
retf
ins
inc
sbb
cmp
sti
xchg
xchg
leave
sbb
mov
dec
cdq
sti
push
je
inc
ds
call
mov
sbb
in
fs
inc
dec
and
jmp
addr16
and
push
jns
mov
push
std
mov
inc
sbb
out
mov
scas
inc
stos
pop
jnp
fcom
push
pushf
xor
in
and
dec
bswap
es
mov
mov
mov
in
mov
hlt
or
push
loopne
(bad)
(bad)
dec
push
ret
jnp
js
fld
mov
std
mov
add
in
repz
xchg
cmp
arpl
mov
retf
jmp
jbe
fwait
push
jbe
mov
sbb
movs
pop
jbe
jp
sub
call
adc
mov
xor
call
push
data16
inc
xor
sbb
pop
mov
or
out
add
les
push
and
xor
test
loop
imul
push
or
jbe
addr16
xchg
daa
arpl
jne
jns
mov
ret
cmp
lock
lods
sbb
ret
cmps
mov
ins
scas
or
mov
mov
cmp
cmp
pusha
push
mov
cmp
movs
xor
cmp
stos
mov
jle
lods
imul
dec
pop
(bad)
cmp
ins
cli
movs
rcr
pop
sbb
xor
lock
sbb
cld
mov
jo
enter
xor
dec
data16
inc
xchg
fdiv
sub
rol
xchg
pusha
dec
stos
pop
data16
je
int3
or
push
inc
scas
fnop
(bad)
loopne
push
or
mov
pop
pop
mov
test
fidivr
(bad)
xor
adc
mov
or
cmp
jne
call
add
pop
inc
jnp
mov
xchg
mov
adc
call
clc
sbb
sahf
inc
pusha
xor
cmp
xchg
stos
int3
ins
and
dec
mov
aaa
inc
or
(bad)
divps
jl
pop
add
mov
lock
not
xor
aad
mov
mov
in
and
mov
mov
lods
mov
xlat
add
mul
out
fdiv
add
movs
and
and
loop
and
mov
in
push
or
ret
arpl
ins
loope
sub
sub
add
lock
ror
stos
rol
and
pop
cmp
loop
jo
and
popf
and
or
test
test
jp
pop
xchg
call
sub
fmul
test
jmp
fld
out
popa
clc
in
jne
sub
iret
lock
inc
cmp
cmp
mov
or
jge
xor
sbb
fcmovbe
adc
jnp
dec
pop
push
clc
iret
inc
and
mov
js
mov
dec
movs
repz
aad
or
fisub
adc
or
pop
cmp
push
mov
les
das
loope
push
and
fnstcw
or
mov
dec
pop
adc
add
icebp
push
xchg
lock
push
pop
xor
mov
jnp
xor
or
jmp
stos
clc
cli
adc
dec
bound
std
loope
push
mov
cmp
out
(bad)
jge
pop
sar
(bad)
inc
pushf
mov
add
jmp
xchg
pop
push
aam
dec
adc
ss
jmp
mov
hlt
fwait
or
(bad)
jmp
mov
pushf
mov
rcl
mov
and
push
rol
or
cmps
test
cmp
or
out
test
imul
outs
pop
dec
fwait
lds
mov
not
cmc
cmp
scas
and
jb
pop
retf
addr16
sahf
xchg
cwde
in
pushf
jge
ss
leave
dec
int3
add
mov
pop
xor
jl
push
jno
jnp
dec
mov
into
data16
cmc
repz
xor
sbb
mov
cmp
pop
push
sub
push
and
and
out
repz
cdq
jbe
add
dec
mov
jb
mov
mov
inc
cmp
out
sbb
mov
idiv
popa
inc
cmp
mov
xor
addr16
push
sahf
dec
fst
xchg
jle
push
gs
mov
popa
mov
ja
push
jp
mov
cwde
pop
push
lahf
into
push
push
daa
jbe
fisubr
movs
cmp
pop
push
sbb
mov
cmp
arpl
test
call
dec
mov
popa
mov
sar
cmp
jmp
dec
sbb
dec
popa
mov
sub
dec
mov
ror
or
adc
iret
and
add
pop
pop
addr16
mov
fistp
retf
es
and
lahf
or
and
xor
push
jne
push
mov
into
sub
js
push
mov
mov
inc
adc
retf
jns
ss
ins
or
test
fwait
out
push
fcomp
push
push
leave
iret
pop
mov
neg
adc
xchg
scas
sub
mov
ins
nop
jo
rol
mov
dec
clc
cmp
inc
lods
and
xor
inc
sbb
sbb
cli
mov
mov
test
jo
test
cmp
ds
outs
ins
sbb
out
add
cld
and
fist
test
cmp
xor
mov
dec
add
adc
scas
jns
or
mov
cmp
push
adc
fild
pop
jg
inc
pop
ret
mov
imul
xchg
sub
outs
push
xor
dec
mov
adc
fisub
jns
or
push
sbb
and
shl
call
mov
loop
push
test
repnz
stc
cmp
mov
push
enter
cmc
sbb
add
ins
idiv
and
lea
push
mov
inc
scas
cld
xchg
shl
sar
jg
fcom
cmp
adc
adc
adc
pop
cmps
jle
scas
call
xor
jl
imul
add
aaa
adc
stos
inc
ins
xchg
jmp
add
and
push
mov
and
mov
int
loope
and
fnstcw
mov
inc
sahf
movs
lahf
sub
mov
and
lods
test
leave
sbb
jl
or
mov
mov
mov
mov
adc
push
and
cmp
aam
inc
out
mov
adc
mov
inc
adc
xchg
test
and
or
mov
fadd
rcr
ins
adc
sbb
jns
aaa
add
cmp
sahf
or
xchg
outs
jge
leave
ffreep
dec
adc
or
out
jo
(bad)
fdivr
cmp
xlat
mov
into
fsubr
loop
xchg
dec
jnp
mov
mov
test
bound
sbb
shl
jp
sub
ss
and
dec
cmps
jge
imul
fistp
jae
and
ret
inc
mov
popa
ss
repnz
inc
loope
push
jbe
sahf
xlat
icebp
pop
dec
jbe
ret
sbb
daa
(bad)
mov
xor
push
push
popa
call
leave
add
cs
mov
sahf
sar
call
mov
push
ds
out
jns
fist
call
cmc
adc
aas
(bad)
les
xchg
jle
sti
rcl
push
or
and
push
push
loopne
mov
and
jle
inc
daa
(bad)
xchg
das
dec
or
sub
jae
jno
lea
add
in
mov
adc
mov
call
xchg
xor
aam
fst
and
ins
or
or
ins
push
cmc
mov
pop
ins
sbb
add
(bad)
dec
loope
(bad)
xor
jle
test
iret
adc
mov
sub
shl
fidivr
fcmovbe
ds
xchg
shl
mov
hlt
(bad)
push
shl
lds
icebp
pop
pop
push
loopne
aaa
cwde
cmps
(bad)
clc
stos
test
or
pop
jo
cdq
jl
cmc
jmp
out
and
scas
or
dec
pusha
mov
mov
movs
ins
pop
arpl
ficomp
jp
or
jecxz
scas
cmp
xchg
lock
lahf
jns
mov
pop
dec
les
jmp
call
xchg
scas
dec
xchg
call
sub
jge
inc
nop
mov
ss
int
or
or
outs
call
dec
fdivr
std
xchg
pop
lods
xor
dec
and
in
mov
inc
es
clc
hlt
push
scas
add
je
xchg
adc
xlat
jle
push
pusha
into
pop
adc
add
dec
aaa
call
les
call
hlt
xchg
push
jns
dec
cmp
imul
and
jecxz
out
fst
xchg
or
inc
bound
sub
xchg
ret
imul
pop
sub
and
push
inc
mov
mov
ds
arpl
push
fdivr
push
pop
js
stos
outs
ret
and
jns
fs
mov
mov
xchg
and
jl
adc
xor
push
imul
mov
mov
cld
int
imul
repz
dec
xchg
fwait
push
in
jbe
or
pop
push
cmp
xor
adc
fsub
aad
cmp
outs
hlt
sbb
out
mov
lea
hlt
ret
sub
mov
mov
ins
sbb
sbb
out
mul
mov
in
(bad)
sbb
dec
clc
nop
icebp
or
adc
iret
jbe
or
inc
xchg
mov
jb
in
add
and
mov
lahf
inc
into
pop
push
mov
jns
shl
pop
hlt
ret
mov
rcr
stc
mov
fstp
cdq
aas
adc
inc
frstor
xor
sahf
pop
outs
ins
int3
jo
mov
fwait
pop
dec
push
sar
rcr
xor
or
dec
sbb
mov
(bad)
nop
push
sbb
cli
sub
or
nop
out
pop
arpl
dec
xor
and
fist
sub
adc
js
or
jo
or
jns
je
cmp
xchg
xchg
cdq
fdivr
(bad)
ds
cmp
movs
fcomp
iret
or
sub
sub
push
jecxz
(bad)
out
jmp
mov
add
cwde
xor
ror
dec
sub
inc
cmp
and
adc
pop
pop
inc
cli
fnstsw
ficomp
mov
mov
xchg
movs
test
retf
add
jmp
mov
in
add
pop
adc
aad
cdq
ins
xor
mov
std
mov
inc
icebp
(bad)
daa
out
dec
outs
mov
jo
push
sbb
cmp
adc
or
xchg
inc
mov
adc
mov
sti
dec
push
jo
lock
repz
ja
dec
dec
aas
leave
nop
xchg
fyl2x
push
jge
dec
adc
dec
daa
retf
mov
inc
sub
ja
or
aas
pop
pop
xor
ds
push
sub
cmp
adc
or
and
dec
adc
sbb
push
jbe
push
lahf
iret
inc
cmc
add
ins
(bad)
sti
rcl
adc
dec
das
fld
cmp
cmps
lea
mov
movs
out
xor
adc
bound
in
(bad)
in
shr
fmul
sbb
(bad)
xchg
stos
not
shr
inc
aaa
fwait
and
adc
push
push
jecxz
and
ins
add
and
mov
popa
(bad)
es
mov
push
mov
xor
inc
adc
test
movs
aam
(bad)
xlat
mov
cmc
dec
xchg
movs
jge
retf
adc
or
fdivr
push
das
(bad)
call
retf
mov
push
mov
push
inc
jmp
xchg
fwait
adc
cli
into
shl
xchg
fs
call
sbb
jmp
mov
loop
or
jmp
test
dec
lahf
cmp
call
mov
sbb
sbb
jns
xchg
mov
clc
xchg
sbb
mov
push
push
adc
jb
dec
call
add
mov
imul
xchg
inc
rol
outs
shl
sar
xor
lahf
and
popf
sbb
cli
sub
and
jp
push
xor
and
cmp
push
fwait
retf
mov
pop
or
adc
push
and
and
int
icebp
jnp
mov
aam
mov
je
fs
andps
ins
call
adc
outs
dec
clc
pop
dec
mov
repnz
stos
push
stos
sub
inc
adc
mov
inc
sbb
pop
mov
pop
imul
sbb
xchg
add
xchg
or
dec
dec
out
add
add
js
and
mov
lahf
rcr
pop
ss
daa
jp
mov
stc
(bad)
xor
push
daa
jle
add
(bad)
mov
lahf
into
pusha
xor
dec
xor
push
test
inc
lods
inc
mov
or
lods
push
imul
jge
fldcw
inc
das
adc
add
lahf
mov
dec
ret
ficomp
mov
stos
lds
loope
and
push
and
cs
add
test
mov
in
add
push
test
sub
mov
cmc
das
ret
aaa
mov
bound
call
cs
push
jbe
mov
cmps
mov
add
pop
sub
outs
mov
add
retf
mov
fsubr
into
in
jmp
fisubr
(bad)
(bad)
or
repz
jno
push
push
ret
fs
stc
ret
mov
(bad)
mov
add
bound
stos
push
(bad)
call
xchg
jnp
call
pop
push
pusha
cmp
xchg
pop
add
mov
nop
mov
stos
loope
and
pop
xchg
lods
cmps
call
sub
mov
retf
jg
jg
sbb
ret
aam
mov
bound
hlt
sar
inc
mov
test
jmp
stc
push
data16
mov
xor
cmc
push
push
ja
push
ins
out
stc
movs
pop
cmc
(bad)
sbb
jmp
mov
and
sub
dec
adc
jnp
pop
lods
je
rcl
or
into
pop
xor
aaa
push
jo
in
jmp
dec
push
sub
out
mov
xor
pop
sub
xchg
mov
sub
lods
scas
in
and
nop
daa
sbb
clc
icebp
fiadd
outs
mov
loopne
rol
(bad)
pop
nop
xor
xchg
idiv
(bad)
mov
xchg
test
mov
les
test
sahf
ins
dec
bound
fstp
not
inc
movs
adc
cmp
sub
sbb
das
aaa
call
lahf
pop
jo
dec
pop
in
xor
lahf
xchg
ja
cli
lods
div
add
not
sub
outs
fild
xchg
xchg
jg
xor
push
inc
retf
mov
out
cld
pop
push
cdq
cld
add
sbb
retf
repz
jae
iret
or
enter
pop
push
mov
sbb
(bad)
push
jg
jp
pop
ret
xchg
(bad)
dec
xlat
outs
jo
add
xlat
mov
inc
pop
jo
sbb
xchg
adc
push
lods
cmps
cmp
dec
inc
jl
retf
ins
js
stos
ss
fucomp
jge
add
loopne
xchg
add
sbb
out
xor
out
add
aam
xor
dec
mov
xchg
fcom
or
jne
xor
adc
jmp
in
jmp
jl
xor
fistp
xor
or
cmp
sbb
sti
adc
mov
ret
push
lods
mov
sub
fsub
rcr
lea
mov
pop
call
inc
or
fld
arpl
push
not
es
cli
aad
inc
punpckhwd
outs
ss
outs
xchg
mov
std
push
call
jbe
popa
sahf
sub
popf
mov
xchg
in
add
in
pop
retf
mov
mov
mov
aaa
or
and
or
clc
out
mov
out
fcomp
xor
jg
dec
test
sub
sbb
jnp
add
push
int
xchg
add
std
xchg
test
test
fbld
mov
cmps
inc
rcr
inc
mov
imul
aas
in
dec
(bad)
cmp
mov
mov
cmps
push
repz
adc
mov
or
cmp
loopne
cmp
mov
in
and
xor
and
push
cmp
rcl
xchg
rcr
mov
cs
shl
mov
popa
sbb
sbb
add
ins
add
cmp
mov
ret
sahf
xchg
xor
xchg
sub
fdiv
jle
retf
xor
daa
loop
movs
pop
adc
and
lods
into
rcr
push
pop
rcl
cmp
or
add
movs
mov
inc
and
cdq
mov
(bad)
ss
(bad)
cmp
and
fst
xchg
cmc
sbb
es
pop
pop
jp
mov
dec
and
xor
sbb
jp
in
inc
neg
mov
xchg
ss
jmp
xchg
stos
fwait
push
mov
cmp
mov
pop
and
xlat
(bad)
mov
ror
gs
out
sub
movs
xchg
sbb
ins
stc
mov
or
fwait
sbb
pop
mov
sub
dec
ror
es
jmp
(bad)
fbstp
sub
add
xor
sti
jge
ja
mov
jmp
pop
out
test
das
shl
inc
pop
push
dec
dec
xor
adc
jle
mov
push
dec
or
push
mov
dec
js
mov
rcl
fimul
jo
leave
add
jns
bound
in
retf
jae
pop
add
cmc
cmp
jmp
ja
pop
adc
xchg
pop
jne
pop
stos
ja
cli
bound
in
pop
xchg
push
xchg
test
cld
mov
sbb
lods
mov
cmp
lock
gs
hlt
xor
xchg
adc
imul
xor
adc
clc
fwait
pop
arpl
pop
push
pop
inc
mov
pop
les
xchg
sbb
fisub
dec
fsubr
bound
mov
dec
sub
jl
jl
mov
add
cmp
outs
xor
fimul
jo
jb
inc
das
fld
lods
bound
cmp
adc
aam
sti
xlat
add
pop
dec
out
cmp
nop
pop
pusha
dec
jecxz
mov
jge
add
int3
adc
ins
add
(bad)
push
lods
das
jmp
icebp
dec
pop
(bad)
xchg
out
je
pusha
and
js
sub
dec
xchg
jl
inc
mov
std
popa
fwait
scas
cdq
push
pop
shl
aam
imul
mov
repz
fdiv
jne
fimul
ins
jg
pop
xlat
cmp
jp
out
adc
inc
inc
sub
pop
cmp
test
pop
fdivp
rcl
cmps
cmp
sub
pusha
cmp
sar
dec
sub
xchg
sti
add
mov
popf
test
repnz
leave
cmp
pop
or
mov
push
push
adc
jb
fidivr
mov
inc
adc
jl
push
jg
push
sbb
mov
fsubr
lods
push
or
pop
pop
push
test
mov
push
push
push
mov
ins
int
repz
call
jno
mov
rol
mov
mov
inc
jmp
mov
int
icebp
push
fsubp
jl
cmp
je
aam
retf
loop
std
not
or
cmp
mov
in
test
or
adc
add
mov
xchg
inc
shr
jo
lock
inc
shl
not
xor
or
pop
pop
mov
sbb
movs
mov
popf
mov
mov
pop
and
or
retf
and
sbb
xor
sub
inc
inc
xchg
lods
sbb
dec
out
pop
push
push
hlt
push
sub
dec
out
psraw
jbe
mov
xlat
(bad)
cld
sti
nop
dec
dec
inc
push
ret
cmc
inc
std
sub
pop
jbe
call
xor
push
(bad)
and
push
jecxz
addr16
out
rcr
int
sti
or
adc
inc
pop
sub
sub
lds
loope
or
fstp
cmp
(bad)
clc
xchg
mov
adc
jecxz
(bad)
adc
cmp
inc
loopne
das
push
sbb
pop
daa
fldcw
pop
(bad)
(bad)
fstp
xor
mov
or
dec
xor
outs
push
test
ins
mov
leave
cmp
stos
jbe
inc
ror
cs
xor
(bad)
es
xor
xor
sub
dec
jge
scas
inc
movs
lods
(bad)
scas
sub
jae
pop
xchg
cs
call
cmps
mov
fcom
mov
loopne
mov
out
push
adc
imul
ins
retf
addr16
aam
pop
push
dec
mov
xchg
in
lss
adc
ret
add
call
outs
stos
sbb
add
out
or
(bad)
cs
lods
test
ror
jno
out
ds
and
loop
mov
aas
cmps
add
ja
adc
pop
movs
lods
pop
test
xlat
cmp
pop
test
cmp
sbb
pavgb
xor
fsub
jbe
or
add
in
adc
pop
xor
xor
pop
stos
mov
mov
or
adc
into
mov
mov
fs
mov
stos
stos
pop
iret
push
inc
mov
or
in
sbb
enter
pop
xchg
call
fsub
cmc
pop
or
dec
int3
pop
leave
test
add
mov
fdivr
loop
jmp
push
cmp
shl
xchg
cmc
xor
sti
xchg
test
cld
pop
dec
push
sahf
enter
dec
lods
sbb
int3
pop
push
cmps
dec
out
cmp
fnsave
dec
nop
inc
gs
rcr
jmp
movs
dec
lea
fs
cld
jne
sbb
stc
(bad)
and
out
lea
js
cmps
pop
rcl
fwait
pop
aam
pop
(bad)
and
sbb
dec
inc
das
in
push
push
mov
mov
mov
push
xor
xor
cs
pusha
jae
mov
or
(bad)
xchg
fwait
bound
aad
cmps
sbb
push
adc
call
call
lea
mov
(bad)
mov
fs
movs
dec
lea
addr16
sub
call
and
dec
mov
cdq
jge
sub
(bad)
mov
xor
mov
add
mov
mov
repnz
mov
stc
repz
movs
ins
push
cs
or
je
lds
fcomp
lods
pop
pusha
(bad)
je
test
cmovg
push
xor
mov
xor
dec
push
les
cdq
lods
xchg
jl
push
sub
out
mov
ror
aaa
pop
mov
xor
lock
std
xchg
stos
(bad)
sub
cmp
pop
lods
pop
das
or
test
dec
test
lock
mov
jno
inc
push
xor
loop
xor
in
sahf
push
aad
(bad)
ror
xchg
jl
pop
dec
pop
pop
imul
scas
adc
push
cmp
fstp
shr
jl
icebp
in
sub
inc
inc
sbb
repnz
mul
test
pop
fidiv
mov
inc
dec
jbe
ret
mov
scas
xor
mov
stc
or
loop
mov
shl
jo
mov
arpl
mov
daa
arpl
mov
out
sahf
in
(bad)
push
pop
pop
test
jl
xchg
enter
add
xor
and
mov
fidiv
xchg
or
scas
les
pop
adc
ss
out
pushf
out
fiadd
mov
xlat
movs
jl
sub
aam
inc
sahf
retf
mov
repnz
adc
mov
jecxz
inc
add
outs
xor
push
mul
mov
mov
xor
ss
mov
add
xchg
jne
jns
retf
or
into
lods
mov
ds
ja
cs
sbb
add
iret
ret
adc
mov
rcr
test
inc
or
xchg
mov
xchg
popf
mov
clc
cwde
into
les
dec
int
mov
jbe
pop
push
fst
imul
pop
jbe
dec
pop
cmp
or
mov
sbb
jbe
cli
jmp
inc
stc
neg
jns
fwait
ss
push
push
xlat
data16
sbb
push
mov
xchg
popf
unpckhps
icebp
sub
lds
mov
add
dec
adc
mov
and
xor
or
jbe
mov
sub
(bad)
loop
out
cmp
push
jnp
retf
aad
fistp
mov
outs
fsub
add
push
scas
inc
fsubr
xchg
scas
scas
dec
add
xchg
je
dec
sub
lock
gs
(bad)
xchg
les
inc
nop
sar
jge
hlt
in
jg
je
xchg
jbe
adc
rcr
outs
xchg
add
es
push
hlt
sbb
mov
int
mov
sub
xchg
adc
cs
out
xchg
dec
cmp
pop
sbb
iret
nop
add
js
rcr
es
mov
retf
push
das
xor
xchg
mov
or
or
mov
(bad)
je
pop
push
das
fs
hlt
jp
sub
pop
je
jmp
jb
nop
or
dec
jmp
ins
call
sahf
mov
jecxz
push
mov
and
jecxz
pop
push
cmps
pop
sti
jne
test
dec
out
lea
je
lods
test
scas
jbe
pop
mov
mov
jg
and
inc
dec
mov
cmp
data16
data16
mov
stc
ret
shr
jb
dec
sbb
arpl
cmp
jle
pusha
cdq
push
ja
xor
je
inc
xor
sahf
mov
aad
stos
mov
adc
and
vpunpcklqdq
dec
jmp
daa
dec
js
retf
mov
mov
mov
inc
xor
mov
cmps
push
les
inc
in
call
jns
nop
loopne
dec
inc
dec
cmp
cwde
xlat
ja
jl
in
or
xor
ins
shl
shr
fsub
ds
xlat
sti
test
and
mov
lods
loop
addr16
pop
sbb
outs
adc
je
imul
lds
mov
pop
inc
mov
cmp
(bad)
pop
and
cwde
push
xor
sbb
jp
sub
sar
cmc
es
call
adc
out
sbb
cs
cwde
lock
jmp
add
fldcw
xlat
adc
popa
and
lods
ja
xor
push
enter
inc
fbstp
add
push
jp
add
sub
mov
sbb
in
int3
int
mov
xor
scas
stos
pop
scas
fdiv
cmp
stos
ror
push
push
gs
adc
dec
xchg
xlat
ja
aaa
xlat
cmp
js
mov
call
xchg
loop
scas
(bad)
mov
adc
sbb
push
(bad)
xchg
fstp
(bad)
push
sub
inc
mov
sub
xchg
test
ds
inc
stos
shr
mov
cmps
dec
aad
mov
pop
cmps
lods
push
and
test
mov
adc
cs
in
mov
int
jne
aad
cmp
xchg
les
mov
mov
clc
pop
mov
dec
push
shr
xchg
outs
movs
lods
add
xchg
pop
add
jl
jmp
outs
push
(bad)
mov
sub
mov
stc
(bad)
ror
xchg
or
retf
stc
push
or
jmp
mov
test
mov
lock
movs
ss
sbb
out
pop
and
mov
adc
mov
loopne
mov
sub
repnz
cmc
push
dec
adc
mov
mov
mov
mov
mov
loopne
pop
cmps
adc
shr
std
nop
fadd
test
push
cdq
(bad)
mov
sahf
or
(bad)
int3
inc
add
mov
xchg
icebp
push
lahf
(bad)
sub
aad
aad
cwde
pusha
ins
call
je
and
jbe
dec
mov
xchg
and
xor
lods
jg
scas
dec
ins
dec
je
mov
and
cmc
add
pop
js
and
mov
loopne
xor
hlt
imul
jl
lahf
push
inc
push
ret
sub
xor
sbb
mov
jae
xchg
popa
icebp
(bad)
mov
mov
outs
jo
cdq
lock
sub
int3
data16
cmc
inc
rcr
mov
xchg
pop
stc
adc
retf
jl
pop
pop
popa
add
inc
loopne
pop
loopne
ret
and
inc
sub
loopne
stos
nop
daa
cmp
xchg
out
mul
jo
sbb
jg
cmps
div
movs
push
inc
mov
pop
js
rol
adc
xchg
jns
push
call
or
inc
cmp
dec
add
push
mov
repz
dec
aam
cld
ret
mov
fdivp
mov
push
aas
scas
jb
retf
mov
nop
(bad)
fiadd
xchg
daa
addr16
xchg
xchg
jb
mov
out
test
shr
pushf
pop
cld
ret
fwait
cwde
or
cmp
add
out
inc
daa
or
fs
popf
cdq
call
fdiv
pop
stos
stc
into
(bad)
push
dec
sub
jo
scas
adc
test
jmp
mov
call
xchg
ja
push
sub
lahf
sub
xor
pop
push
or
repnz
or
in
fiadd
mov
and
push
jnp
arpl
pop
fistp
pushf
xchg
cmp
xchg
pop
retf
mov
and
sub
cmp
mov
mov
xor
in
dec
push
lods
(bad)
jno
cdq
fstp
adc
mov
pop
leave
sbb
popf
add
dec
loope
inc
mov
jns
into
sub
in
inc
stc
jmp
aam
dec
push
mov
dec
in
sub
cld
cmp
pop
xchg
pop
std
repnz
outs
push
das
add
ret
xor
sub
mov
imul
push
inc
ins
dec
sub
ret
push
push
cld
or
jp
and
cs
push
std
aaa
pop
sbb
pop
aaa
add
nop
xor
leave
push
inc
or
and
push
add
mov
adc
fmul
pop
xchg
xlat
xchg
or
aaa
ror
mov
or
pusha
sub
shl
les
jg
in
lahf
dec
sbb
push
rol
xchg
cdq
and
sbb
pop
adc
mov
(bad)
ficom
ins
iret
dec
movs
fist
(bad)
popa
icebp
push
(bad)
adc
call
popf
xor
add
std
jmp
repz
fistp
jmp
push
jae
shl
ret
add
pop
sub
dec
jle
jle
clc
clc
sbb
in
xchg
ins
jmp
mov
cmp
sbb
dec
mov
inc
inc
popa
aad
mov
cdq
cdq
sub
xor
or
cmp
fwait
repnz
mov
inc
pop
mov
ss
rcr
mov
fidivr
inc
clc
xchg
xchg
dec
pop
sbb
aas
and
jb
lods
pop
mov
sub
addr16
xchg
mov
xor
push
jnp
outs
(bad)
outs
push
push
call
ficom
push
xor
cmps
adc
sub
ret
into
callw
sub
jg
bound
mov
xor
add
(bad)
cli
mov
jmp
sbb
movs
mov
push
movs
bound
out
cmp
je
stos
cli
hlt
or
fs
jo
push
in
jl
cmp
cmp
aam
and
aas
xchg
int
in
mov
out
mov
movs
idiv
mov
enter
xlat
add
xor
dec
rcr
cmps
jge
adc
ret
dec
mov
icebp
or
or
mov
mov
jbe
lea
lods
in
sub
loopne
aam
and
addr16
or
sar
and
mov
dec
call
and
cmps
mov
sub
sbb
cwde
js
lods
xchg
retf
std
add
fs
fisub
rol
push
inc
pop
push
push
nop
frstor
dec
xchg
xor
mov
ja
cli
dec
dec
test
xor
lea
mov
jp
(bad)
xchg
sbb
inc
repz
aas
push
sbb
pop
mov
in
dec
shld
sbb
and
hlt
dec
ss
mov
ror
jp
stos
rcr
mov
and
cmps
and
sub
test
call
mov
std
scas
lock
pop
call
push
call
cli
jmp
ret
pop
aad
mov
xchg
stc
pop
mov
push
mov
push
sbb
push
and
es
push
ror
xor
add
fcmove
inc
shr
leave
mov
pop
jns
dec
lahf
daa
or
mov
ins
pop
mov
movs
pop
adc
cld
pop
or
aam
xor
lods
lea
rol
popa
inc
push
cld
repnz
sub
mov
and
push
push
xor
push
pop
call
xchg
(bad)
pop
push
hlt
push
mov
into
push
mov
cs
dec
cld
pop
cmc
js
push
call
sub
pop
adc
pop
outs
loope
mov
dec
push
or
int
mov
ret
rcr
repz
jmp
push
fld
lock
cwde
lds
add
or
leave
int
in
rcl
jle
out
pop
retf
test
cmp
mov
push
fmul
xor
jnp
in
adc
imul
cdq
outs
sub
sbb
dec
ins
fcomip
nop
mov
out
jo
push
test
mov
fcomp
gs
push
xadd
movs
inc
push
xor
out
ret
in
sbb
(bad)
mov
mov
call
cmp
fstp
bound
pop
outs
jmp
repnz
pop
jbe
xchg
pusha
pop
test
daa
sub
pop
mov
arpl
push
push
ins
idiv
mov
aas
or
dec
pop
mov
adc
mov
call
int
sub
mov
and
add
shr
push
pop
out
xor
jb
adc
mov
fnsave
dec
push
jmp
outs
test
push
push
and
cli
outs
jb
ds
lahf
shr
test
sub
push
mov
fnstsw
xor
dec
dec
sbb
aaa
cdq
jb
inc
xlat
ins
popa
(bad)
push
mov
call
in
push
inc
(bad)
jle
(bad)
out
(bad)
xchg
inc
xchg
sbb
jl
fdiv
jbe
sub
xor
add
idiv
movs
push
or
inc
sbb
and
and
cmp
mov
adc
dec
movs
jnp
loope
out
cmp
les
push
adc
imul
xor
jno
push
mov
cmp
(bad)
jl
cs
mov
clc
mov
daa
iret
stos
lods
scas
jmp
push
mov
sbb
xchg
repnz
xchg
aaa
jecxz
mov
sub
cmp
imul
mov
inc
xchg
(bad)
mov
add
sub
out
test
xchg
fnstenv
mov
dec
mov
rol
jp
test
sub
adc
sbb
call
inc
jmp
stc
mov
dec
in
inc
test
icebp
jg
ja
sub
cmp
loope
mov
in
or
cmp
imul
mov
or
cmp
cdq
(bad)
scas
pop
fcom
std
aam
out
push
xchg
loop
fcom
es
imul
push
and
shl
dec
aam
rcl
push
push
retf
adc
dec
or
loope
pop
fnstenv
stos
pop
add
jle
cdq
aam
mov
xor
pop
jne
shl
dec
xchg
sbb
push
pop
xchg
js
push
cmp
jo
pop
popa
outs
repnz
es
dec
xlat
push
(bad)
mov
jmp
push
and
cmp
or
clc
stc
xor
cs
das
shr
push
pop
daa
or
lock
in
aam
mov
and
cdq
test
add
xchg
call
pop
jno
sub
cmp
dec
rcr
stos
mov
stos
pop
jns
jmp
mov
push
xchg
(bad)
rol
xchg
clc
inc
sub
shl
aaa
xor
(bad)
stos
stc
andps
scas
mov
dec
or
call
clc
push
in
pop
in
rcr
inc
add
push
jecxz
cmp
and
aad
push
outs
push
test
fsubr
mov
sahf
pushf
pop
ss
aaa
je
xor
sbb
pop
test
(bad)
mov
jmp
fld
sti
add
mov
sub
out
ds
shr
pop
loop
xchg
adc
lds
fsubr
fstp
mov
bound
mov
retf
call
daa
jns
inc
pop
loopne
(bad)
jmp
xor
mov
in
das
jnp
repnz
pand
and
pop
pushf
es
push
int
cdq
pop
push
adc
push
xchg
mov
dec
xchg
inc
pop
cmp
adc
jg
push
and
pop
xor
shr
pcmpeqd
cld
and
push
mov
stos
rcl
mov
sub
or
fwait
mov
nop
dec
push
xchg
pop
add
inc
in
or
es
or
pop
mov
pop
fwait
jns
jecxz
xchg
adc
mov
xor
inc
cs
pop
lods
call
jne
sbb
mov
cmc
fldcw
add
dec
mov
movs
mov
push
daa
fucomip
aaa
stos
jnp
mov
jp
ror
hlt
xchg
(bad)
imul
sti
aas
xchg
sahf
adc
dec
(bad)
out
pop
jl
sysexit
out
xchg
loope
fisttp
into
fisubr
sub
into
(bad)
enter
dec
gs
add
lea
xlat
out
sbb
xchg
addr16
dec
and
dec
cmp
jge
or
ss
xor
psadbw
ret
call
mov
pop
in
inc
adc
ins
pop
cmc
mov
mul
aam
xlat
pop
jl
out
inc
jle
cdq
cs
cld
arpl
(bad)
hlt
xchg
lds
in
dec
adc
mov
jne
or
lea
mov
into
lods
mov
aad
jmp
inc
ss
adc
inc
cs
jnp
imul
adc
fiadd
dec
cmp
add
imul
cdq
rcr
and
lods
mov
add
push
ins
scas
mov
sbb
adc
sub
inc
pop
(bad)
hlt
sub
aad
jl
mov
mov
(bad)
imul
and
mov
inc
sbb
ds
inc
mov
pop
mov
aaa
adc
movs
fistp
ret
and
ret
mov
mov
mov
sahf
or
mov
enter
in
sub
test
sbb
jl
xor
stos
popa
mov
dec
dec
out
not
pushf
add
ins
adc
jns
sbb
dec
xlat
jle
addr16
add
jae
sbb
mov
lods
push
fwait
cdq
int3
adc
mov
adc
jmp
add
and
sub
enter
push
ret
sbb
xchg
add
in
fcom
imul
xchg
mov
js
jge
in
sbb
mov
cmp
lods
leave
jl
out
cmc
imul
inc
pop
sti
ret
sahf
popa
inc
push
sbb
iret
xchg
cs
xchg
xor
js
push
movs
movs
mov
pop
pop
or
inc
jle
test
sub
mov
cdq
add
push
fwait
sub
stc
call
in
jmp
into
jo
pop
fisttp
adc
jge
out
dec
fidiv
mov
adc
push
xchg
or
es
mov
sub
cmps
add
es
fstp
mov
shl
mov
ins
sub
inc
cwde
mov
sbb
ins
xor
jnp
push
pop
ror
sbb
outs
mov
mov
stos
in
xchg
(bad)
movs
scas
sub
sbb
jmp
psraw
or
ss
rcr
aaa
stos
jo
push
(bad)
addr16
xchg
xor
dec
mov
mov
push
mov
inc
and
mov
xor
inc
pop
jo
push
sahf
cmps
mov
push
leave
inc
sub
sbb
dec
cmp
into
test
jo
xchg
mov
les
mov
sti
pop
sbb
(bad)
and
push
sub
mov
jne
and
adc
pushf
ins
clc
mov
(bad)
push
mov
imul
shl
int3
test
add
xor
pusha
in
mov
push
repnz
adc
push
mov
fisttp
stos
rol
jp
mov
sub
xlat
cmp
aaa
xchg
data16
mov
ds
mov
in
pop
mov
mov
dec
push
dec
test
xchg
ds
out
and
int
mov
sbb
out
sbb
push
inc
lds
push
daa
ret
push
mov
sbb
xchg
mov
adc
cwde
fmulp
sahf
retf
fld
pop
sbb
xor
push
jl
dec
or
cmps
mov
ja
cli
inc
call
or
out
mov
jecxz
(bad)
jno
jb
lods
fs
mov
pop
aaa
fild
jae
cmp
adc
dec
stos
fidivr
aaa
add
xchg
dec
fdivr
fiadd
pop
jnp
mov
push
icebp
das
ja
cmc
(bad)
mov
jns
into
dec
call
data16
fcmove
xlat
scas
mov
jg
pop
mov
movs
aaa
sbb
dec
push
mov
add
and
pop
in
call
movs
mov
in
loop
jmp
retf
adc
test
mov
jb
rol
inc
add
pop
jmp
sti
cdq
pop
add
stc
pop
mov
clc
cmps
dec
jecxz
dec
xlat
dec
addr16
fisttp
mov
or
jne
imul
ret
and
inc
fndisi(8087
adc
(bad)
jp
add
popf
mov
les
adc
(bad)
and
iret
xchg
jb
cmps
jno
out
and
or
pushf
mov
loope
push
adc
add
js
xchg
(bad)
fidivr
cmp
stc
retf
adc
push
cld
ret
in
iret
jae
retf
mov
push
sar
fwait
es
pushf
mov
sub
ss
cld
inc
shr
add
mov
dec
iret
or
dec
mov
retf
pop
int
inc
push
push
xchg
jb
mov
mov
sub
fstp
mov
out
inc
adc
mov
mov
cs
out
push
cmps
movs
inc
addr16
lea
test
push
gs
and
mov
xor
jle
and
outs
in
mov
test
aas
pop
int3
sahf
fist
inc
jnp
mov
jb
xor
mov
stos
cmc
pop
jge
mov
adc
cmp
je
lds
jne
mov
push
sub
xchg
add
icebp
addr16
(bad)
imul
xor
call
je
inc
jns
out
addr16
pop
or
cmps
sahf
retf
aas
sbb
or
pop
mov
inc
aad
in
inc
pop
popf
jp
pushf
mov
dec
dec
clc
clc
lahf
xor
(bad)
xlat
pop
jmp
fild
inc
cmp
ins
inc
repz
xchg
addr16
mov
jns
ret
push
xor
addr16
mov
popf
rcl
outs
push
or
mov
test
out
lds
movs
ja
mov
sub
pop
icebp
call
fidivr
mov
dec
dec
pop
loop
mov
or
stc
out
stos
cs
dec
es
adc
push
mov
clc
sbb
push
ror
pop
jno
(bad)
sub
test
daa
xchg
pop
mov
out
les
inc
inc
mov
sub
arpl
mov
in
mov
loop
mov
push
in
mov
pusha
add
and
and
or
and
out
stos
or
push
and
mov
fcomp
aas
inc
xchg
dec
cmps
cmp
xchg
mov
aaa
xor
push
fbld
in
inc
stos
hlt
(bad)
in
xchg
addr16
dec
and
retf
psubusw
imul
and
into
repnz
jge
add
int
sub
xor
mov
or
dec
arpl
test
in
leave
retf
iret
stc
jmp
in
aad
mov
cwde
adc
cmps
and
das
adc
jmp
std
popa
xor
mov
fwait
and
cmps
movs
cli
lea
das
xchg
mov
pop
scas
inc
push
(bad)
cmc
push
in
mov
xchg
inc
xor
cmp
xchg
mov
fs
sar
mov
sti
mov
je
fbld
test
adc
sub
ss
mov
inc
fimul
mov
mov
xchg
out
and
mov
and
lods
xchg
data16
mov
(bad)
push
xchg
sub
std
stc
(bad)
retf
nop
repz
pop
mov
js
popf
(bad)
push
xchg
nop
in
ud0
retf
and
inc
gs
call
xchg
jle
cmp
fld
adc
imul
in
cmp
mov
fdiv
sbb
jle
fldenv
adc
and
or
xor
or
push
ja
sub
out
mov
mov
and
cmp
cmp
xchg
je
cmc
icebp
dec
push
out
pop
mov
das
stc
es
stc
cmp
repnz
cmc
das
cwde
pusha
lahf
hlt
push
or
gs
xchg
lea
cmps
fidivr
daa
jnp
or
adc
retf
std
inc
cmp
cmp
cmp
sub
dec
and
mov
inc
mov
push
xchg
inc
pop
inc
ja
jge
fcmove
fidiv
shl
fiadd
add
and
mov
les
sahf
in
sbb
adc
lea
adc
je
scas
and
mov
test
cmps
idiv
shl
xlat
cmp
dec
pop
imul
fs
mov
push
mov
cmp
push
in
sub
mov
aas
sbb
inc
jnp
xlat
int3
xchg
push
add
call
out
mov
or
fist
fsub
jb
push
mov
out
xchg
or
pop
mov
jg
and
dec
clc
add
sub
(bad)
cmp
es
sahf
out
cld
es
sub
fdiv
or
pop
mov
out
stc
rol
push
ss
test
test
movs
cmp
test
cmc
idiv
or
push
pushf
in
pop
cmp
adc
dec
mov
lock
sub
fsub
vfrczpd
js
mov
mov
mov
movs
and
les
fist
outs
retf
push
inc
fisubr
(bad)
aam
dec
lea
(bad)
adc
mov
adc
jl
xor
pusha
movs
sar
outs
lods
je
inc
pop
xor
cmps
pusha
dec
mov
js
add
pop
jo
pop
pop
popf
pop
adc
cld
dec
push
xor
cwde
in
shl
inc
mov
push
pop
nop
idiv
push
and
icebp
int
push
sbb
ror
pusha
xchg
jl
mov
jge
adc
push
or
clc
mov
call
lods
nop
test
mov
mov
xchg
or
sbb
lock
retf
push
ins
(bad)
dec
mov
stos
sahf
jmp
aam
pop
add
jg
retf
pop
in
inc
push
add
ret
xchg
gs
pop
inc
push
xor
sbb
pop
dec
dec
js
enter
push
aaa
push
add
imul
or
mov
or
aam
dec
xchg
jmp
mov
(bad)
mov
outs
ret
and
ins
call
mov
lock
sub
jmp
fsubr
mov
mov
ja
retf
or
fwait
ja
iret
push
cmp
loope
mov
cmc
mov
push
add
inc
cld
loopne
test
pushf
sub
jnp
push
or
mov
sbb
test
retf
aaa
popf
xchg
or
call
cmp
scas
inc
or
xchg
jp
sbb
jmp
gs
(bad)
out
in
out
mov
std
popa
movs
cmp
je
pop
add
inc
dec
(bad)
sti
(bad)
adc
test
add
dec
ja
shl
ins
push
add
cmp
jmp
lods
mov
cmp
rol
xadd
int3
lahf
sub
push
pushf
jg
(bad)
adc
data16
sub
and
push
mov
add
sbb
mov
int
push
in
jle
bound
rcl
fstp
(bad)
jmp
inc
push
dec
sbb
mov
rol
leave
loop
lea
popa
or
sbb
imul
in
pop
lds
sbb
jmp
stos
jge
cmc
cmp
ins
sbb
pop
sbb
cli
(bad)
out
js
es
adc
add
mov
jmp
push
or
pop
rep
popf
dec
and
sub
push
jns
(bad)
sub
stos
std
enter
ss
cmp
pusha
xor
mov
vminss
pop
cwde
shr
push
push
sub
(bad)
sahf
sub
popfw
test
jae
or
xchg
mov
(bad)
adc
xchg
jbe
js
es
pop
bound
aas
fs
xchg
test
mov
loopne
mov
adc
inc
imul
jmp
test
test
cli
xchg
leave
rcr
xor
inc
leave
aas
cmc
in
ret
push
nop
mov
mov
dec
mov
pop
and
test
retf
push
leave
pop
cmp
ret
int3
leave
mov
stos
stos
pop
ss
icebp
je
out
jns
mov
scas
xlat
mov
pop
aas
retf
imul
adc
jl
mov
sbb
mov
int3
or
add
cmp
jge
push
in
push
outs
sahf
push
jge
mov
pop
push
sahf
mov
sti
xor
stc
ret
dec
pusha
pop
jno
sub
out
mov
mov
ffree
pop
mov
cmp
pusha
loopne
(bad)
std
push
push
ficom
data16
test
or
push
adc
mov
xchg
fidivr
imul
sti
aaa
mov
pushf
pushf
test
sbb
aaa
push
cs
add
and
dec
(bad)
or
shl
cdq
xchg
cmp
inc
mov
cmp
cmps
int
out
movs
push
scas
repz
mov
pmullw
ds
jmp
(bad)
jle
mov
inc
jmp
sti
fs
loop
das
icebp
push
fisubr
push
in
fiadd
push
pushf
fisub
and
ins
scas
(bad)
fdivr
fdivp
pop
loop
pushf
cld
mov
scas
mov
iret
aam
mov
jle
mov
cmps
arpl
cmp
repz
test
adc
movs
mov
ror
imul
das
(bad)
or
mov
add
stos
inc
pop
add
push
ins
imul
push
pusha
movs
push
retf
and
pushf
mov
mov
or
push
lods
mov
mov
cmps
mov
daa
adc
jg
cwde
cmp
test
xor
xchg
cmp
daa
pop
fnstenv
add
in
sbb
push
dec
and
xchg
pop
add
pop
cld
jg
cli
and
mov
push
ins
jg
add
lea
ja
repz
aam
fdivr
jmp
pop
inc
(bad)
retf
faddp
sub
dec
ds
or
mov
addr16
rcl
jne
and
nop
or
sub
retf
fisttp
arpl
pop
cld
int3
ret
test
mov
or
mov
dec
test
retf
cmps
stc
sbb
in
mov
and
mov
add
repnz
ins
ror
and
and
sti
xchg
ror
adc
jns
xor
or
dec
or
pop
mov
loop
shl
cdq
and
or
shr
inc
cs
push
stos
call
mov
dec
mov
dec
(bad)
sub
ins
xor
enter
stos
test
jns
push
inc
nop
xor
pop
rol
je
lds
mov
mov
mov
arpl
xchg
(bad)
lods
mov
mov
and
or
mov
add
repnz
imul
cli
xor
(bad)
sbb
cmp
aad
mov
not
xchg
stos
mov
push
mov
add
movs
outs
and
mov
or
push
sbb
pop
mov
shl
xchg
nop
and
int
pop
add
xor
mov
lods
mov
cmps
mov
lock
xchg
shl
mov
dec
pop
sub
jecxz
iret
and
mov
jno
out
inc
pop
(bad)
cwde
adc
or
popa
cmp
dec
aaa
sar
outs
aas
pop
pop
inc
push
in
ins
and
xor
fs
stos
mov
outs
ins
(bad)
xchg
outs
enter
pusha
pop
test
outs
inc
push
dec
jnp
cmp
inc
sub
sbb
(bad)
and
call
in
mov
push
inc
sub
fidiv
sbb
pop
cmp
lods
lea
inc
fs
xor
adc
lods
sti
outs
(bad)
sub
lock
mov
adc
cmp
jle
mov
retf
push
nop
push
retf
or
neg
jg
aad
xchg
mov
xchg
or
std
jecxz
and
out
and
loopne
cwde
sbb
adc
adc
mov
jecxz
js
loop
je
(bad)
jbe
fcom
ins
arpl
fsubr
inc
mov
iret
div
mov
xchg
retf
add
push
inc
sub
fild
fdiv
stc
fisubr
pop
into
shl
cmp
cmp
leave
and
stos
retf
adc
ror
ffree
sbb
mov
add
fwait
dec
sub
repnz
(bad)
push
dec
lods
retf
js
xor
adc
test
sahf
xchg
jns
or
push
shl
xor
mov
xchg
cwde
xor
into
cmp
std
cld
shr
pop
add
jbe
loop
dec
mov
mov
ret
addr16
mov
mov
mov
inc
in
fidiv
clc
xchg
movs
outs
hlt
out
and
cmp
inc
push
add
adc
ficomp
rol
shr
sbb
scas
nop
jo
test
push
leave
sub
mov
add
sbb
ret
cmp
pop
sub
cdq
aad
mov
(bad)
mov
inc
retf
cdq
sbb
dec
hlt
adc
xlat
ja
adc
inc
mov
jmp
push
xchg
mov
add
es
pop
icebp
fs
arpl
xchg
pop
pusha
gs
sbb
jo
pop
fist
xor
aam
pop
repz
mov
jb
or
dec
inc
or
gs
sbb
aas
repnz
dec
sar
xor
dec
out
out
mov
in
mov
push
int
pop
pop
and
xchg
sbb
adc
in
ins
dec
add
xchg
dec
or
es
gs
daa
stos
xchg
xor
jg
mov
sar
in
xchg
ja
xchg
or
mov
retf
adc
push
jg
retf
mov
(bad)
push
push
mov
call
sbb
push
sti
retf
mov
mov
clc
xor
fs
inc
or
icebp
and
sbb
pop
(bad)
ret
xor
xor
mov
adc
mov
lods
lods
add
(bad)
and
xchg
jg
jmp
addr16
outs
popf
push
mov
pop
jg
ja
gs
dec
lds
cmp
fwait
into
movs
push
loopne
cmp
je
pop
jmp
sahf
inc
jae
add
and
or
daa
push
adc
scas
add
popf
imul
retf
jb
jae
xor
stos
fs
sar
ror
enter
jmp
sar
shl
jno
das
mov
inc
push
mov
icebp
mov
and
sub
cmc
(bad)
and
sub
sar
test
pop
mov
dec
jno
xchg
mov
clc
retf
inc
std
ret
mov
sbb
imul
push
jecxz
mov
fdivr
sbb
aam
aad
(bad)
xchg
and
clc
cmp
sbb
outs
mov
mov
inc
xchg
jae
jle
pop
mov
cmc
mov
fsubr
or
cmp
aaa
stos
mov
fcmovnu
cmp
and
sub
scas
cli
sub
imul
retf
sbb
sub
mov
sbb
call
inc
jp
inc
movs
in
loope
fistp
jl
add
ins
sbb
add
xor
pusha
jecxz
inc
inc
int
cld
jb
ret
xchg
mov
jmp
mov
jmp
mov
xchg
outs
push
sbb
cmp
pop
cmp
retf
out
idiv
mov
loopne
call
pop
cmps
test
(bad)
mov
sub
sar
adc
push
push
popa
pop
inc
xchg
mov
add
inc
cmp
bound
adc
shl
shr
test
xor
in
inc
mov
adc
mov
or
popf
adc
push
imul
adc
adc
cmp
xchg
aaa
jp
loopne
sar
cmp
test
push
add
mov
inc
xchg
sub
cmp
ret
pop
jl
int
push
mov
shl
adc
jmp
icebp
jmp
jp
das
cwde
and
test
adc
hlt
inc
popa
mov
and
enter
push
lods
mov
mov
dec
pop
movs
push
test
jne
shr
sar
mov
ss
adc
test
and
pop
fst
add
inc
mov
push
ja
repz
js
mov
push
push
add
xchg
pop
into
lods
xor
fcomip
out
cmp
dec
loop
xor
sbb
cld
fisubr
sub
mov
(bad)
loopne
sbb
(bad)
push
or
jge
mov
test
repz
xor
imul
adc
push
sti
cld
add
adc
push
mov
push
arpl
xor
add
add
jns
or
in
add
xor
xchg
out
jbe
inc
push
inc
mov
in
popf
pop
mov
ins
rcr
sbb
test
sbb
jne
xchg
pop
xor
sbb
sub
ja
mov
jmp
xor
jae
retfw
sar
enter
(bad)
jo
frstor
lock
hlt
add
push
mov
cmp
sub
rcl
imul
mov
mov
sar
int3
mov
adc
ja
mov
or
sbb
sub
(bad)
pop
mov
mov
loop
mov
outs
(bad)
pusha
in
or
jecxz
(bad)
arpl
inc
aam
jne
mov
fmul
mov
cmps
inc
arpl
push
mov
sub
sbb
mov
aas
movs
in
mov
loop
fist
adc
or
fnstenv
pushf
repnz
fidivr
xchg
push
into
xchg
cdq
mov
jge
sbb
dec
xor
shl
call
retf
dec
aaa
or
stc
movs
push
sar
inc
adc
rcr
push
jg
es
jmp
mov
xchg
int
mov
movs
repnz
test
mov
xchg
jae
cs
mov
ds
retf
enter
mov
shl
ret
push
jg
cmps
add
mov
pop
out
movs
jne
(bad)
add
or
mov
inc
out
mov
pop
retf
pusha
test
push
outs
fisttp
or
fwait
ins
cmp
xchg
ficomp
push
mov
xchg
shl
out
rcl
and
cmp
pop
inc
mov
cmps
(bad)
mov
test
sbb
std
mov
jmp
cmps
fidivr
jle
mov
movs
ret
cmp
xchg
mov
mov
pop
sbb
retf
test
jp
add
sub
pushf
pop
mov
xchg
int
sbb
push
test
ins
cmp
cmp
jmp
lea
or
lea
(bad)
clc
(bad)
test
mov
xchg
pop
pop
into
push
and
fist
xchg
arpl
jl
mov
or
mov
mov
mov
or
shr
je
pushf
push
sbb
cmp
push
add
fcom
lea
jne
int3
pop
sub
pop
repz
fsubrp
pop
call
das
inc
(bad)
mov
and
jmp
nop
add
dec
pop
pop
call
test
fsub
jns
bnd
sub
inc
mov
adc
shl
ss
(bad)
aaa
jp
je
les
cld
in
inc
fist
(bad)
mov
test
retf
mov
dec
sub
inc
out
push
sub
cmp
and
mov
ja
jno
sahf
out
test
cmps
add
dec
sti
dec
ss
push
test
retf
stc
pop
lods
pop
into
dec
retf
mov
loopne
icebp
sar
sub
mov
pop
sbb
and
pop
jno
fsub
add
add
xor
mov
retf
inc
push
ficomp
fisttp
popa
adc
inc
push
cld
push
sub
std
push
std
mov
adc
sbb
rcr
lods
inc
sbb
jecxz
movs
fld
or
xor
stos
in
sahf
cwde
test
mul
mov
iret
pop
repz
cmp
add
dec
data16
inc
xor
test
out
jge
pop
mov
push
sbb
and
or
and
or
in
push
test
dec
popf
pushf
and
jno
push
out
sub
jno
jmp
push
sahf
xchg
xlat
inc
or
cwde
inc
or
mov
mov
push
dec
and
pop
jmp
inc
movs
popf
mov
inc
inc
(bad)
call
in
mov
xchg
imul
cs
jecxz
(bad)
xchg
mov
or
inc
push
outs
retf
and
fnsave
and
adc
mov
lds
loopne
clc
das
push
fs
js
sti
inc
cmp
movs
jmp
lods
mov
and
pop
jb
sub
cmp
(bad)
dec
cwde
neg
inc
daa
leave
or
pop
mov
clc
fcomp
js
and
mov
or
shl
shl
inc
mov
stc
lahf
mov
pop
add
push
fwait
add
push
fild
repnz
(bad)
or
cdq
and
jb
fdivr
xchg
retf
cmps
jns
lds
fmul
neg
jno
jg
adc
mov
jo
add
retf
pop
retf
cmc
jno
jmp
xor
cwde
and
fcom
push
stos
inc
xchg
mov
test
xor
lods
retf
add
icebp
xor
bound
push
aas
out
out
fwait
mov
pop
sbb
addr16
in
pushf
inc
call
pop
push
bound
div
fisttp
call
sub
xchg
fild
cmp
inc
push
ds
movs
int3
sar
(bad)
fmul
mov
sti
cdq
sub
enter
pushf
add
or
xchg
fwait
sub
nop
rcl
pop
or
(bad)
sbb
inc
arpl
fcom
fwait
mov
(bad)
data16
les
pop
mov
ds
(bad)
pop
loope
lea
lds
shl
jecxz
mov
jnp
or
or
mov
mov
add
enter
jg
out
movs
sbb
fistp
push
push
loop
sbb
mov
adc
mov
stos
(bad)
dec
in
imul
jns
push
loopne
sahf
jge
mov
lds
ret
jl
add
call
adc
sbb
(bad)
call
adc
clc
test
js
add
out
aam
pop
sbb
test
imul
jns
xchg
mov
cmp
mov
sub
sub
jl
repnz
mov
(bad)
jns
jl
pop
scas
sbb
and
cli
push
into
or
mov
int3
inc
loopne
call
jns
add
mov
sub
retf
imul
push
pop
push
cmp
pop
sti
data16
cli
int
repnz
sub
or
and
fcomp
lock
aas
in
inc
mov
inc
je
int3
mov
cmp
fistp
and
xchg
(bad)
out
in
sub
(bad)
xor
push
and
sar
dec
clc
or
addr16
call
out
push
sub
cmps
iret
addr16
xchg
test
sahf
inc
mov
sub
outs
clc
cmp
out
pusha
movs
cmp
mov
mov
aad
jecxz
int
in
pop
cmp
pop
pop
data16
js
cmp
add
aas
mov
cli
test
fimul
or
cmp
pop
(bad)
cmp
sbb
xchg
inc
xchg
inc
addr16
icebp
mov
ins
or
and
mov
inc
or
inc
inc
ror
in
arpl
call
add
(bad)
mov
lock
ror
mov
and
daa
xchg
test
cmp
mov
mov
outs
inc
mov
push
push
hlt
xchg
xor
pop
repz
enter
loop
sbb
dec
lds
je
adc
sub
mov
test
repnz
outs
ds
ins
adc
in
sahf
pop
sub
into
imul
dec
adc
mov
pop
fld
jns
cmp
inc
push
enter
push
add
lods
adc
jp
add
daa
lods
imul
dec
jmp
mov
adc
sbb
fdiv
dec
test
inc
adc
arpl
je
in
fcomp
rol
loope
cs
sti
pop
dec
repz
leave
dec
test
imul
adc
ds
ja
das
add
sbb
(bad)
fimul
mov
fbld
push
(bad)
mov
mov
pop
je
cmp
sbb
mul
xchg
ror
lahf
xchg
cmp
lods
xchg
cmps
(bad)
cmps
push
cwde
adc
(bad)
sbb
xchg
mov
fs
mov
jmp
sub
js
sar
dec
mov
adc
push
jbe
repnz
mov
fwait
jae
mov
jg
sbb
add
and
or
jbe
mov
sbb
cld
jmp
psllq
call
xchg
inc
push
dec
aad
mov
loopne
loop
push
out
(bad)
int
out
pop
mov
pop
test
addr16
lss
jl
mov
or
dec
imul
pushf
lahf
outs
and
loopne
stos
je
cmp
inc
idiv
ret
stos
repz
mov
dec
jnp
mov
mov
add
add
call
(bad)
xlat
sbb
jb
int3
cmps
fwait
mov
xchg
mov
sub
sar
adc
pop
dec
and
jmp
in
stos
out
into
in
add
sti
cmps
mov
add
xchg
out
inc
loop
or
sbb
pop
in
mov
test
pop
bound
pop
adc
aaa
fst
pop
xchg
cld
ret
mov
pop
lods
call
sub
cwde
ds
out
data16
dec
pop
(bad)
pop
cmp
sbb
inc
cs
popw
out
(bad)
mul
mov
adc
dec
cmp
xchg
aaa
pushf
jbe
mov
sub
and
cmp
add
aad
sub
clc
inc
mov
addr16
out
int
sub
and
mov
sahf
jae
pop
(bad)
outs
out
sbb
dec
or
jecxz
imul
ret
rcl
ret
in
xchg
push
jge
mov
int3
stc
scas
cs
adc
repz
nop
mov
(bad)
and
cwde
xchg
push
sub
mov
push
jnp
mov
fnsave
mov
aaa
adc
pop
xchg
(bad)
pop
fisttp
push
mov
sbb
dec
int
and
jns
mov
mov
in
sub
loope
inc
lea
dec
push
sub
mov
mov
fcmovb
ja
push
inc
enter
add
push
pop
sub
sahf
das
jl
jnp
aam
mov
out
and
fist
aad
daa
pop
dec
in
push
jg
das
push
cdq
mov
ret
in
movs
mov
arpl
icebp
or
mov
fs
das
push
outs
lahf
shr
icebp
pop
test
and
iret
xchg
xchg
add
je
cmps
cmp
xor
cmp
movs
mov
(bad)
jle
loopne
(bad)
fistp
mov
cmp
pop
and
test
push
xor
add
add
test
and
addr16
sub
adc
stc
jae
or
movs
dec
cmc
je
aam
(bad)
test
mov
dec
inc
arpl
int
jbe
int3
outs
jmp
add
leave
fadd
mov
cmps
sbb
lea
add
add
dec
sub
(bad)
mov
xchg
and
or
sub
lea
test
pop
xchg
mov
movs
arpl
std
mov
xor
hlt
imul
nop
sub
mov
mov
lock
jl
icebp
jge
jno
aas
test
and
jb
fist
mov
push
dec
add
jg
cdq
int
mov
or
bound
gs
(bad)
shl
ficomp
mov
push
ret
jl
push
or
movs
outs
fsub
or
mov
mov
mov
ror
and
js
push
or
neg
das
lea
pop
call
cli
pushf
cs
je
or
scas
pop
adc
xchg
ins
fst
mov
aam
lea
mov
inc
cmp
cdq
lods
add
iret
lahf
cmp
int
pop
mov
retf
jno
leave
mov
nop
cdq
mov
pop
addr16
add
sub
(bad)
stc
popa
fist
cdq
(bad)
or
mov
add
clc
sar
pop
jb
call
sbb
cld
mov
pop
pop
std
pop
and
sahf
mov
stos
jbe
scas
lahf
and
stc
xchg
adc
arpl
enter
cmp
mov
jbe
iret
call
pop
add
lods
fadd
outs
mov
mov
cmps
mov
xlat
mov
(bad)
sbb
and
push
pop
xchg
sub
int
or
mov
scas
retf
ins
in
(bad)
int3
popf
adc
mov
rcr
xchg
pop
pop
push
inc
or
cwde
cmp
pop
shl
inc
cli
lds
call
rcr
ret
jmp
es
or
or
adc
jnp
xchg
pop
or
sub
ins
and
rcl
cmp
(bad)
mov
popf
adc
and
iret
(bad)
mov
inc
arpl
pop
cmps
fnstsw
aam
(bad)
call
std
into
inc
cmps
in
aam
sbb
lds
jg
jb
sbb
dec
mov
retf
(bad)
mov
lods
iret
test
pop
repnz
aas
mov
jb
imul
test
ins
clc
jno
fidiv
clc
dec
push
sahf
mov
daa
and
retf
jg
inc
push
sub
js
daa
pop
outs
mov
test
mov
sbb
inc
jge
ss
cs
xor
(bad)
push
lahf
dec
repz
call
stc
xchg
ret
push
das
leave
jmp
jb
jo
xchg
cmp
add
scas
dec
mov
add
jg
clc
fiadd
adc
jnp
cmc
mov
push
loop
jae
fdivr
fild
push
cld
jne
xor
or
fisub
push
lock
mov
sub
test
stos
ret
scas
push
rol
and
test
shl
or
test
jo
mov
add
fbld
out
add
sbb
shl
inc
mov
mov
and
jno
enter
arpl
pop
leave
les
sub
lods
xchg
dec
mov
cmp
mov
adc
cmps
cmps
xor
add
es
icebp
mov
xor
and
daa
sbb
mov
jns
xchg
addr16
push
nop
xor
sub
and
addr16
push
cmp
jg
or
mov
xchg
not
loope
ss
ss
push
sbb
repz
outs
aam
in
in
and
pop
mov
(bad)
lods
es
frstor
jae
loop
sub
sbb
mov
shl
adc
fsubr
iret
adc
out
push
mov
jg
test
xchg
into
arpl
dec
xchg
or
jecxz
loope
xor
mov
call
stos
sti
(bad)
daa
(bad)
ds
or
enter
xchg
dec
xchg
std
lods
jmp
ja
push
pop
je
inc
add
mov
sti
xchg
clc
sbb
ds
inc
repnz
aas
add
inc
repz
mov
iret
jmp
adc
out
stc
sub
ret
push
rcr
sbb
adc
mov
dec
xchg
cmps
lods
mov
pop
movs
mov
call
int
test
aaa
pop
repnz
cmp
mov
imul
in
in
fcomp
add
stos
adc
loopne
add
movs
loop
shr
mov
xor
and
pop
or
adc
sub
add
test
push
in
icebp
jmp
push
std
imul
xchg
sbb
ins
or
es
jmp
fst
ss
test
and
sbb
sbb
enter
les
fs
stc
jns
bt
pop
aam
mov
mov
add
pushf
faddp
sbb
movs
jge
xor
cmps
add
into
aaa
jae
mov
(bad)
pop
mov
mov
je
retf
xchg
cmp
popa
inc
sub
shl
fsub
test
push
mov
inc
fld
rcr
out
and
add
dec
push
ss
or
(bad)
iret
mov
scas
cmp
inc
ins
add
and
popa
adc
retf
inc
adc
push
add
sbb
jge
inc
push
fmul
jmp
test
arpl
xchg
inc
imul
scas
jae
adc
shl
cs
mov
cwde
push
xor
jae
mov
ja
pushf
sub
sub
cmps
dec
adc
sbb
pop
(bad)
inc
jge
xchg
cli
sub
jg
xchg
shl
std
xchg
mov
and
(bad)
xor
repnz
test
xor
dec
dec
jae
mov
popf
(bad)
cld
xlat
push
xor
xor
lahf
xchg
dec
inc
mov
mov
or
aad
xchg
sub
mov
ja
adc
mov
lahf
push
or
in
js
xchg
fcomip
push
jo
mov
(bad)
pushf
lock
xchg
int
mov
scas
jle
jo
jg
ins
call
ror
mov
int
mov
add
xchg
mov
dec
enter
add
rcl
(bad)
retf
mov
push
fucom
sub
cld
js
mov
in
fs
jae
inc
(bad)
cmp
movs
fldcw
mov
in
jo
bound
xchg
pop
fisttp
scas
and
ja
and
imul
outs
fdivr
fistp
push
ss
aas
xchg
or
xor
and
push
scas
imul
jns
jae
push
adc
mov
test
fnstsw
cmp
std
das
push
xor
add
pop
into
fbstp
aas
or
aam
in
ja
test
mov
(bad)
je
mov
jno
mov
clc
dec
in
adc
add
fwait
repz
jle
fs
jge
xchg
add
std
stos
sub
into
fldcw
jp
or
cs
mov
xchg
fstp
pop
sar
repnz
push
mov
xor
sub
xchg
out
dec
inc
dec
call
leave
pusha
call
(bad)
pop
js
loop
mov
out
pop
inc
and
scas
jbe
adc
fnstenv
jbe
sub
cdq
fidivr
stos
or
mov
out
lods
shl
jp
mov
bswap
enter
aas
jo
(bad)
imul
in
in
movs
mov
jl
repz
mov
fild
sub
xor
bound
inc
pop
cmc
xchg
jmp
and
and
retf
stos
jle
xor
inc
cs
push
xor
push
adc
aaa
jmp
or
fwait
das
imul
jmp
and
dec
jp
or
cld
pushf
cmp
sar
sar
ins
sub
arpl
stos
cwde
cmp
inc
push
xchg
js
sti
inc
lahf
xor
push
dec
call
mov
pop
loop
cmp
movs
rol
xchg
popa
ror
iret
xchg
(bad)
mov
mov
sub
push
imul
xor
int3
fucomip
sub
call
jle
repz
test
cli
in
mov
xchg
or
popf
out
fucom
inc
and
fimul
pop
arpl
popf
push
or
push
lahf
lods
pop
ja
outs
imul
sub
adc
ds
mov
in
movs
fldcw
mov
loopne
enter
mov
sahf
and
lds
int3
popa
repz
aad
out
fisub
jecxz
adc
jns
cs
and
xchg
scas
push
in
dec
mov
repz
sub
mov
jp
sti
cmc
outs
jb
test
rcl
iret
enter
aas
sub
fbld
adc
test
clc
popf
ds
or
dec
inc
dec
xor
int3
mov
or
or
fdivr
push
mov
arpl
inc
dec
scas
es
fs
sbb
add
in
inc
dec
test
pop
cdq
jmp
jecxz
mov
cdq
ins
jmp
(bad)
clc
mov
mov
cmp
rol
adc
and
enter
xchg
mov
out
inc
jle
rcl
xchg
mov
and
sahf
mov
test
sbb
mov
xor
sbb
stos
mov
imul
pop
ret
ins
int3
sbb
sbb
dec
mov
mov
imul
inc
mov
push
xchg
sbb
rcl
or
and
dec
fdiv
(bad)
aad
adc
pop
sbb
mov
pusha
int3
leave
shr
cld
loopne
or
mov
fcomp
stos
adc
cmc
ja
jp
and
and
push
mov
mov
mov
inc
pop
inc
inc
inc
fldcw
pop
sti
mov
js
or
rcl
pop
(bad)
push
loope
dec
push
fs
rcl
(bad)
jecxz
movs
test
and
out
jae
pop
jo
leave
ins
cmc
jb
jnp
cmps
ret
mov
and
out
sbb
mov
test
(bad)
scas
js
sub
xlat
(bad)
das
fldcw
(bad)
outs
push
lock
sahf
pop
adc
push
sbb
or
fs
mov
pusha
mov
mov
dec
cmc
dec
enter
push
push
mov
bound
test
or
jl
stc
test
sha256rnds2
cmp
jmp
pusha
adc
arpl
inc
mov
outs
push
popa
sbb
fidiv
sub
(bad)
lods
pushf
lds
arpl
jecxz
xor
sub
push
mov
fld
test
jle
adc
dec
(bad)
les
shl
shl
cmp
fsub
mov
cmp
out
repnz
mov
jne
in
jae
add
dec
scas
jmp
or
fiadd
fidivr
xlat
sti
fimul
dec
ins
xchg
mov
call
cmps
cdq
addr16
(bad)
out
mov
sub
arpl
enter
stos
cld
jo
pushf
push
xchg
xchg
jmp
dec
cdq
mov
mov
call
outs
clc
mov
sti
xor
xor
xor
fisttp
push
jmp
sbb
in
sar
adc
test
shr
add
les
inc
xchg
add
addr16
fild
mov
adc
fcmovu
jne
scas
mov
(bad)
bound
shl
fwait
lea
dec
lods
imul
mov
xchg
mov
add
fdivrp
stc
add
xor
adc
mov
dec
int3
pop
rcr
sub
mov
fsubr
mov
or
and
je
dec
cld
sbb
and
dec
ds
sbb
pop
aaa
dec
fwait
jo
fidiv
mov
dec
jmp
cmp
xlat
mov
movs
mov
jle
loopne
adc
in
outs
mov
xchg
and
sahf
cmp
pop
arpl
sbb
fld
xchg
push
nop
or
lahf
dec
push
jecxz
xlat
dec
std
mov
push
ficom
sub
int3
push
dec
mov
dec
outs
gs
or
(bad)
xchg
xor
bnd
xor
jecxz
pop
stos
jo
into
aad
mov
and
xor
out
dec
xchg
or
push
add
ror
or
sbb
add
fwait
jbe
fnstenv
pushf
addr16
sub
cmp
les
pop
mov
ficom
and
pop
fnstenv
mov
adc
fisub
pusha
(bad)
gs
jge
mov
loop
scas
mov
xchg
ins
jle
sahf
jmp
je
clc
mov
adc
xor
mov
jge
dec
cmp
retf
or
jmp
cmps
inc
enter
jle
mov
mov
pop
mov
push
mov
pop
pop
mov
std
je
mov
push
ret
fnstcw
cwde
mov
mov
dec
jae
cmps
sahf
or
pop
imul
adc
(bad)
test
jmp
cmps
sbb
(bad)
clc
outs
sbb
mov
jecxz
mov
int
sub
mov
and
retf
pop
cmp
pop
popa
pop
lock
jns
xchg
lock
popa
inc
jbe
xchg
ins
push
pop
mov
ret
scas
adc
inc
retf
aam
repnz
pop
out
inc
mov
add
xchg
mov
stos
mov
jl
inc
cmc
int
aam
push
xchg
xchg
lahf
lods
jge
(bad)
cmp
add
mov
cmp
mov
mov
test
inc
fcmovu
ins
call
stos
scas
outs
adc
or
pop
pusha
xor
lea
retf
inc
push
ror
adc
ss
xchg
push
jecxz
mov
je
sub
adc
add
cmp
das
bound
iret
mov
shrd
sub
mov
inc
mov
dec
lds
inc
inc
cmps
cmp
fisttp
out
mov
sbb
ror
add
jg
std
nop
sub
xchg
and
jmp
jp
push
std
lods
pop
dec
fidivr
pop
(bad)
xchg
mov
push
dec
pushf
cmp
(bad)
out
mov
iret
cmps
fldcw
mov
xor
bound
das
addr16
call
push
popa
mov
lods
dec
dec
xchg
or
(bad)
cmp
jle
jne
jge
cmps
ins
mov
cs
sub
ret
or
inc
in
lea
in
fs
leave
out
mov
jb
pop
stc
(bad)
xchg
jg
out
xchg
xlat
cmp
push
ins
jmp
adc
out
and
int3
inc
push
mov
mov
mov
mov
loopne
imul
add
(bad)
sahf
mov
mov
ins
fnstcw
mov
adc
fld
xchg
out
push
std
cmp
cdq
and
or
pop
(bad)
js
rcl
mov
adc
icebp
xchg
leave
mov
add
inc
lock
jbe
push
push
cmp
ds
test
rol
fadd
adc
test
(bad)
hlt
jae
stc
add
arpl
cwde
and
or
in
cmc
ret
repz
nop
sub
cmp
mov
cmp
mov
mov
add
add
pop
aas
adc
push
dec
fstp
test
push
popa
mov
dec
ins
adc
push
xchg
shl
arpl
mov
xor
and
loope
rcl
mov
xchg
or
enter
mov
shr
cli
xor
cmps
fisub
push
daa
aas
cld
jl
shl
data16
mov
push
jge
push
lods
pushf
jbe
push
mov
in
scas
je
push
and
aad
imul
mov
pop
icebp
xchg
dec
pop
sub
xchg
(bad)
das
pop
mov
aaa
fstp
or
mov
mov
call
mov
mov
in
xchg
loopne
es
ret
or
imul
mov
outs
xor
mov
movs
loope
cmc
jge
je
pushf
mov
and
adc
push
pop
mov
pop
jl
sbb
xchg
cmp
(bad)
(bad)
mov
sub
cs
std
cli
pusha
repz
pushf
inc
ja
sub
out
push
mov
xchg
aad
pop
xchg
repnz
cdq
in
popf
xchg
fdivr
daa
dec
and
xor
ins
mov
xchg
mov
mov
cmp
add
xor
mov
jp
imul
ret
data16
ja
mov
push
push
ror
pop
inc
iret
mov
sar
mov
bound
xor
dec
mov
movs
mov
stos
push
ret
inc
jne
xor
jmp
imul
pushf
jae
fisttp
mov
(bad)
adc
inc
out
xchg
push
or
repz
mov
call
rcr
cmp
daa
dec
add
add
jo
je
je
das
addr16
dec
lahf
(bad)
mov
cmps
and
call
lods
int
(bad)
dec
sub
std
mov
sub
adc
jecxz
xchg
stos
push
popa
cmp
push
mov
and
xchg
jmp
adc
pop
or
enter
enter
sbb
sbb
fwait
pop
in
mov
pop
xchg
ret
test
into
mov
icebp
inc
xor
(bad)
in
(bad)
(bad)
jno
mov
sub
sub
add
(bad)
fdivr
into
or
pop
dec
loope
inc
mov
mov
pop
stos
stos
nop
ins
stos
sti
imul
pop
cmps
mov
mov
out
and
xchg
sbb
xchg
loopne
ficom
or
jmp
out
pop
xlat
and
jb
out
jle
outs
fwait
(bad)
iret
and
adc
sub
out
fsubr
fisttp
pop
pop
mov
dec
jae
mov
jge
je
sbb
ja
mov
or
aam
stc
fdiv
test
mov
inc
pop
adc
add
fs
push
pop
das
add
fnstsw
call
xchg
pop
test
mov
mov
cmps
out
adc
fwait
jg
bound
mov
in
fcomp
pop
sub
(bad)
pop
stos
test
outs
cs
jae
dec
pop
xor
adc
stc
push
rcl
sti
sahf
(bad)
push
imul
ins
les
mov
cs
movs
adc
movs
push
jb
push
ret
jmp
pop
xor
clc
sub
fwait
push
cwde
adc
xor
mov
xchg
out
pop
jae
xor
repnz
ins
cmps
xchg
mov
stc
dec
arpl
jecxz
(bad)
dec
jp
push
and
push
jg
xchg
inc
pushf
test
(bad)
xchg
xchg
ins
mov
push
add
rcl
pop
cld
dec
popf
pusha
popf
sub
dec
test
mov
popa
cmps
mov
fisttp
pop
add
add
dec
push
push
pop
ret
sub
cdq
mov
cmps
and
inc
js
cmp
fild
ss
dec
lahf
in
aad
arpl
fcom
stc
lds
inc
cmp
add
inc
in
xor
push
pop
cli
fadd
(bad)
mov
add
inc
mov
jge
sub
ja
(bad)
call
xor
lods
cmc
pop
pop
mov
cmp
les
xchg
repnz
jo
push
xor
scas
adc
cmp
fwait
push
jl
je
push
test
(bad)
leave
into
les
(bad)
xor
mov
mov
fcomip
jns
mov
and
hlt
or
pop
inc
cdq
jecxz
jns
std
into
jbe
fdiv
xor
or
fs
sub
int3
stc
inc
dec
jmp
mov
movs
jo
add
nop
ret
lahf
or
sub
ins
mov
cmp
retf
retf
cmps
mov
xchg
pop
mov
or
jecxz
add
inc
mov
inc
mov
cmp
sub
adc
xchg
cmp
cmp
pushf
xor
shl
inc
retf
cmp
cld
ins
add
pop
test
xchg
inc
jnp
mov
scas
xchg
mov
pusha
or
je
je
lods
or
std
xchg
cmc
cs
cmp
cli
push
adc
dec
inc
adc
das
jmp
mov
stos
cdq
(bad)
in
cmps
and
and
sub
adc
int
adc
pop
imul
add
adc
pop
pop
ins
sbb
lds
pusha
aam
and
mov
daa
and
xchg
ror
pop
icebp
xor
and
ret
movs
push
xchg
sbb
loop
cmp
test
aaa
loop
das
jns
inc
fistp
inc
push
dec
clc
in
icebp
push
cmp
pop
jmp
out
fcom
lock
xchg
mov
sbb
fwait
mov
xlat
and
mov
sbb
inc
xlat
scas
(bad)
div
pop
lahf
mov
fisttp
inc
xchg
xchg
dec
mov
push
in
nop
xor
dec
retf
imul
pop
xor
and
leave
hlt
arpl
in
sbb
and
cdq
inc
int3
mov
mov
ja
in
data16
(bad)
(bad)
hlt
push
pop
xchg
out
adc
inc
fst
adc
in
(bad)
sbb
and
inc
dec
and
fwait
jbe
sub
fidivr
pop
retf
xchg
sbb
xor
(bad)
fwait
and
dec
mov
mov
(bad)
xchg
sub
jo
sbb
lds
mov
inc
mov
add
enter
sti
cmp
sub
or
into
and
push
je
in
shr
clc
pop
add
pusha
sar
pop
daa
sbb
dec
jb
or
leave
sbb
lea
(bad)
xlat
push
fisub
int
adc
fcom
(bad)
and
mov
aam
dec
xchg
cmc
lods
mov
into
mov
jp
adc
das
adc
lods
or
push
fst
test
fstp
mov
mov
jae
push
pop
mov
sub
ss
xchg
cmc
arpl
mov
pop
mov
mov
cmc
mov
pop
js
or
or
leave
imul
push
repnz
rol
leave
inc
(bad)
cdq
ret
mov
mov
sub
imul
xchg
pop
mov
xchg
fs
xor
cli
imul
xor
icebp
sub
dec
sub
repz
push
xchg
mov
push
aas
(bad)
pop
mov
inc
push
or
dec
push
xchg
sub
pop
push
push
fadd
dec
aaa
lds
ds
mov
sub
jp
mov
jns
mov
adc
adc
and
out
dec
ja
add
push
inc
inc
mov
pop
into
aam
sub
inc
cmp
sbb
and
fnsave
sub
fisubr
js
cdq
jnp
jo
or
or
pop
add
inc
cmp
ins
xchg
and
in
fs
sbb
out
dec
dec
scas
test
(bad)
into
and
fyl2x
dec
mov
call
adc
inc
jb
jl
fucom
rol
loop
push
adc
push
and
mov
add
or
ret
js
popf
scas
adc
stc
xor
inc
(bad)
fcomip
jg
div
pop
pushf
fs
push
jl
stos
pushf
cmc
enter
add
test
mov
jmp
xchg
inc
int3
inc
mov
sub
jns
mov
push
sub
push
push
cmp
add
je
ins
cmp
push
mov
scas
fnstcw
rcr
outs
cmp
ja
repz
test
in
out
cli
fsub
push
data16
leave
mov
enter
std
repnz
mov
sub
pop
psubq
(bad)
dec
iret
mov
and
mov
sar
xchg
pop
mov
cdq
addr16
ficom
movs
push
imul
xchg
adc
ficom
scas
(bad)
push
sub
mov
outs
scas
xor
inc
adc
(bad)
pop
aad
sub
mov
cmp
sub
fisttp
neg
pop
adc
movs
pop
js
push
jge
mov
jae
mov
test
shl
cld
aaa
dec
test
lock
shr
xor
mov
push
jmp
pop
sub
into
or
ror
add
xor
(bad)
outs
scas
xor
jne
mov
icebp
inc
outs
and
inc
leave
dec
jno
in
call
sub
mov
dec
shl
jl
mov
xchg
jl
lahf
jbe
stos
fbld
mov
mov
ja
cmp
(bad)
pop
pop
push
dec
shl
add
scas
cmps
mov
enter
cdq
aaa
fsub
outs
dec
loope
pusha
adc
jecxz
pop
out
shl
pop
out
iret
hlt
test
neg
loop
cmp
sub
push
es
lds
mov
add
movs
inc
nop
or
imul
test
pop
or
push
(bad)
inc
jmp
daa
inc
push
xor
mov
and
pop
cmp
enter
stos
mov
push
(bad)
out
fbstp
push
inc
xor
outs
int3
xor
or
in
add
mov
jo
mov
iret
sbb
add
in
loopne
sbb
sbb
cmp
mov
mov
and
sub
pusha
xor
into
mov
out
mov
and
inc
dec
lods
lds
in
ja
or
retf
aam
dec
shl
mov
call
ss
fdivr
out
xor
hlt
mov
sbb
jbe
cmc
adc
repz
jg
bound
out
dec
add
jae
mov
mov
xchg
je
xchg
push
daa
shr
(bad)
or
mov
sbb
xor
mov
push
fmul
call
mov
jp
push
inc
and
xor
cld
into
fild
add
mov
push
push
sub
fdiv
adc
test
xchg
jnp
ds
xor
aam
jnp
xchg
add
movs
sub
push
inc
jmp
sub
fs
xchg
sbb
jbe
stos
jp
(bad)
not
hlt
dec
add
push
add
jecxz
bound
stc
xchg
inc
loop
mov
into
scas
retf
sti
inc
ficom
xor
leave
sub
adc
(bad)
xchg
(bad)
clc
mov
test
fisub
mov
ins
jmp
push
inc
sub
pop
adc
stos
sub
mov
pop
out
(bad)
ja
das
jns
push
loopne
or
ja
inc
loopne
jmp
dec
stos
and
pop
mov
inc
aad
pop
dec
cmps
adc
es
push
add
dec
hlt
lods
jb
es
pop
outs
add
mov
or
daa
adc
sar
fsub
xchg
sbb
daa
out
xchg
sbb
test
sbb
xor
imul
call
out
push
aas
mov
cmc
arpl
ss
mov
cmp
adc
mov
inc
push
ss
and
dec
push
loope
push
ret
push
mov
(bad)
das
sbb
sbb
xchg
push
xchg
xchg
or
sub
sbb
jbe
dec
pop
pushf
or
js
mov
jno
fidiv
scas
repz
cli
cld
sub
or
sub
add
and
mov
pop
add
int
retf
push
add
sub
jl
adc
push
dec
dec
cmp
pusha
pop
bound
add
push
loopne
scas
mov
jmp
xchg
and
xchg
das
xor
aam
pop
xchg
es
mov
pop
js
loopne
not
or
sub
movs
ins
xchg
(bad)
mov
dec
mov
repz
movs
addr16
jmp
mov
mov
mov
aad
cmps
xlat
repnz
mov
adc
or
mov
fistp
mov
mov
push
in
jb
cdq
cmp
imul
in
cld
das
js
hlt
xchg
mov
movs
sub
add
cmp
dec
xchg
sti
mov
scas
dec
ret
shl
stos
and
stos
test
mov
pop
add
daa
and
in
and
push
sbb
pop
pop
idiv
sub
jp
pop
ss
daa
sbb
cmc
test
(bad)
hlt
ror
add
xchg
aad
mov
ins
(bad)
retf
push
pushf
bound
fs
push
aas
imul
pushf
mov
and
mov
push
sti
nop
add
sub
pop
pop
sbb
je
out
push
xlat
pusha
dec
arpl
dec
sahf
inc
cwde
mov
pop
mov
call
sbb
cs
test
adc
(bad)
popf
mov
jno
aad
fwait
inc
js
retf
movs
xchg
int
sub
mov
sub
adc
push
adc
mov
addr16
inc
pop
cmps
jle
mov
aam
add
mov
push
or
ja
mov
inc
mov
jg
clc
push
aad
loope
xor
fidiv
aaa
xor
xor
cmp
fsubr
(bad)
pop
sbb
fsubrp
sbb
xor
or
cmps
pop
jmp
mov
or
pop
pop
or
(bad)
hlt
and
rcr
and
(bad)
adc
cmp
jno
jnp
push
repz
es
sub
sbb
fwait
cld
imul
sbb
and
jo
fcom
cmp
repz
std
lds
ffree
xchg
jne
fild
outs
xor
scas
jns
or
and
mov
cli
dec
push
test
mov
xchg
xlat
jns
mov
lea
mov
stos
and
iret
imul
sbb
xchg
outs
ins
test
pop
ret
fadd
cld
or
outs
xchg
inc
dec
add
dec
iret
or
lods
daa
ja
jo
mov
jge
mov
or
push
jo
inc
push
in
out
clc
or
lahf
xchg
not
adc
inc
jnp
mov
outs
inc
loope
sbb
shr
mov
dec
cmps
xchg
xchg
pushw
mov
lds
aas
aaa
outs
in
pushf
mov
mov
or
pop
push
xor
jle
cmp
jp
sbb
scas
int3
add
jmp
shl
mov
imul
add
cdq
dec
adc
and
inc
or
mov
lds
loope
outs
ficom
push
popa
les
mov
mov
sti
pusha
popf
mov
pop
push
xchg
sahf
scas
add
inc
sbb
fdivr
dec
mov
xchg
push
add
cli
movs
test
mov
test
loopne
cmp
xchg
in
xchg
mov
xchg
cli
into
pop
lock
push
and
adc
jo
outs
inc
jno
pop
(bad)
fisttp
xor
inc
test
gs
(bad)
adc
outs
mov
xchg
jecxz
push
loop
mov
mov
loope
xchg
daa
dec
mov
sbb
in
mov
push
pusha
stos
aaa
jp
stc
in
inc
es
pop
mov
lods
xor
leave
dec
lds
mov
push
xor
cmp
pusha
pop
(bad)
inc
mov
call
retf
push
fcomp
and
mov
jbe
(bad)
sbb
push
out
sub
(bad)
jmp
je
ins
push
push
sbb
xchg
lock
inc
out
lods
mov
xor
and
scas
jb
enter
sbb
inc
jns
cmp
ja
mov
retf
dec
mov
addr16
in
stc
shl
loopne
jne
pop
imul
mov
retf
mov
or
xchg
mov
jmp
mov
lock
popf
inc
lock
and
and
and
xchg
scas
ret
in
out
lock
xlat
repnz
ficomp
enter
mov
addr16
add
sti
inc
mov
mul
fdivr
ret
add
xor
jo
mov
push
(bad)
adc
ins
and
mov
movs
pop
loope
cmp
or
xor
dec
pushf
sub
fdiv
jmp
sbb
arpl
jmp
jmp
repnz
xchg
pop
shl
fisubr
in
ins
out
pop
dec
ret
sbb
ret
call
adc
stos
cmps
inc
sbb
mov
scas
ja
(bad)
cmp
dec
loope
jne
mov
jae
push
cs
cli
mov
cmps
loopne
clc
pop
popf
push
xchg
fmul
mov
ins
mov
and
aam
xchg
in
sub
test
mov
cli
pop
cmp
(bad)
mov
cmp
mov
jge
jmp
cmp
mov
push
push
loope
lea
and
hlt
fisttp
loope
mov
jge
mov
sbb
loop
xchg
pop
iret
sub
es
pop
xor
ds
jmp
int
inc
les
out
sbb
outs
stos
and
cmc
xor
dec
out
outs
dec
stos
adc
jle
ss
pop
das
movs
inc
adc
dec
mov
jl
xchg
add
jbe
dec
mov
shr
div
add
xchg
add
pusha
push
call
push
sbb
dec
sbb
mov
sbb
nop
xchg
inc
mov
ss
pop
push
and
inc
jg
jp
movs
aaa
cld
nop
(bad)
(bad)
sub
shr
int
std
mov
push
xchg
add
or
fimul
jl
push
ret
mov
out
stos
(bad)
jg
rol
push
clc
cmc
jmp
ss
inc
jmp
(bad)
mov
pop
push
xchg
mov
add
arpl
sub
pop
cmp
inc
add
jmp
or
call
(bad)
ror
jns
mov
aaa
xchg
dec
push
sbb
lods
or
ja
test
dec
sub
(bad)
sub
movs
dec
adc
cli
das
shl
inc
jne
out
pop
xchg
jg
in
data16
jg
ret
fisttp
push
inc
jnp
or
(bad)
out
(bad)
cmps
dec
pop
mov
out
mov
xchg
mov
fst
jb
popf
xchg
bound
xchg
aaa
pop
ret
sbb
xor
out
or
dec
push
pop
push
and
pop
jmp
imul
mov
test
sar
shl
mov
mov
mov
and
or
data16
sub
hlt
adc
mov
jl
retf
sub
dec
cmc
popf
xchg
add
scas
sub
arpl
mov
cmps
aas
mov
mov
ins
inc
shl
popa
adc
xchg
cmp
or
lds
inc
or
push
jo
sahf
in
push
(bad)
mov
mov
test
jg
shr
adc
clc
pushf
test
mov
inc
or
test
fadd
jge
push
mov
ins
mov
cli
and
loopne
and
xor
mov
mov
adc
push
es
cmp
cmps
cmps
and
mov
cmp
lahf
push
scas
and
in
mov
add
inc
add
ins
jo
in
mov
call
cld
pop
movups
push
pop
leave
ins
jle
adc
out
xchg
pop
int3
dec
adc
sti
or
out
das
add
je
loope
pop
stc
lds
ror
and
xor
and
and
pushf
sbb
loop
jne
fdivr
mov
and
mov
(bad)
lahf
fcmovbe
aaa
imul
xchg
jmp
push
fild
out
pop
jnp
je
jnp
xor
inc
xor
(bad)
shr
push
(bad)
out
movs
aad
int3
cwde
in
adc
outs
mov
bound
push
inc
add
inc
loope
les
pushf
gs
xchg
aas
push
ror
mov
cmp
test
popa
daa
adc
rol
add
(bad)
mov
fild
push
and
xchg
mov
leave
hlt
push
aad
ds
in
icebp
xchg
mov
pop
jae
popf
xor
das
nop
pushf
cmp
cmp
add
pop
xchg
mov
aaa
(bad)
shl
xor
les
jbe
dec
sub
push
add
stos
rol
hlt
push
pop
bound
(bad)
pcmpeqw
daa
cmc
jmp
inc
mov
adc
jmp
dec
push
loopne
and
retf
and
add
shr
ret
push
dec
std
ret
mov
cmp
or
ins
and
call
mov
stos
xchg
pop
push
jmp
sbb
sbb
bound
pop
popa
push
pop
js
xor
outs
cmp
push
call
or
add
xor
inc
ins
dec
cmp
adc
mov
repz
mov
scas
pop
outs
inc
or
sub
mov
pushf
cmp
and
mov
cmps
stos
xchg
mov
mov
leave
fisub
push
repz
call
push
or
test
mov
fisttp
sbb
sub
push
inc
xchg
sub
pop
lahf
test
lea
cld
repnz
or
sahf
push
test
mov
xchg
jl
(bad)
in
lods
mov
movs
js
add
iret
js
out
xchg
mov
aad
inc
in
lea
rol
mov
push
(bad)
and
cli
cmp
mov
sub
idiv
push
out
push
stc
icebp
push
test
stos
cdq
push
cmp
cmc
cmp
jmp
les
adc
and
jecxz
add
mov
loope
lea
cmp
and
(bad)
mov
mov
inc
cld
sub
sub
jmp
push
repz
fs
(bad)
mul
jle
jecxz
jmp
inc
sbb
xlat
jae
mov
sub
push
addr16
test
retf
cmp
sahf
div
mov
dec
pop
jge
dec
sahf
idiv
xor
inc
mov
jnp
test
pop
pop
fwait
push
rol
xchg
or
add
pop
mov
dec
mov
push
or
int3
fcmovbe
xchg
cmp
fstp
inc
add
xor
mov
or
(bad)
fadd
popf
jmp
mul
icebp
std
push
shl
cmp
rcr
push
stos
push
add
popf
xchg
mov
mov
mov
cmps
fwait
ss
lea
or
adc
dec
push
dec
inc
xor
popa
jmp
xchg
sbb
push
push
dec
cld
lea
cmp
into
retf
push
hlt
ficomp
mov
out
lods
pop
ret
pop
push
push
repz
add
add
cmp
ins
cld
jae
pop
pushf
mov
push
mov
sub
popa
stc
sbb
mov
fcom
ss
in
es
test
ss
push
nop
mov
sbb
mov
mov
fs
inc
pop
outs
mov
bound
pop
jle
add
movs
xlat
push
ds
imul
cmps
(bad)
jl
xchg
xor
mov
mov
rcl
mov
stos
pop
fs
push
repz
jae
in
mov
dec
jb
cmp
push
pop
jp
in
sti
sbb
pop
mov
xchg
nop
in
push
xor
adc
push
icebp
pop
jo
sub
out
jae
je
(bad)
and
jbe
clc
cmp
call
or
pop
movntps
cwde
or
loope
ret
xchg
push
(bad)
repz
xchg
test
mov
movs
out
xor
out
cmp
inc
movs
mov
pop
sbb
lods
outs
xor
cmp
pop
int3
pop
mov
fild
imul
in
push
outs
scas
jg
lock
add
inc
fsubr
jnp
and
in
rol
pop
or
pop
push
jecxz
adc
leave
je
adc
mov
call
adc
loopne
fsubr
and
pop
and
cmp
les
jmp
mov
fcomp
and
in
pop
inc
xchg
icebp
pop
cmp
leave
imul
(bad)
or
ds
mov
inc
hlt
push
lahf
(bad)
rol
sub
in
inc
xor
arpl
or
inc
fsubr
add
lahf
in
fist
sub
sar
xchg
mov
mov
sub
cmps
mov
mov
inc
fs
add
ret
or
jb
jae
and
mov
push
arpl
test
adc
and
push
not
jne
sbb
cmp
cmc
mov
test
push
or
call
jae
gs
scas
iret
jg
xor
test
mov
int3
jge
pop
std
and
and
sub
push
jnp
add
jp
pop
outs
push
xchg
fst
into
loopne
xchg
mov
sbb
div
dec
sbb
mov
aaa
pop
pop
int3
mov
clc
pop
jno
or
mov
cmps
iret
sub
fdivr
cmp
adc
xor
ja
jg
into
aaa
in
pop
scas
push
out
nop
scas
jmp
in
adc
jne
out
repz
push
dec
push
int3
loopne
adc
mov
mov
cwde
add
cmp
jbe
aad
adc
jns
ss
xor
xchg
cwde
scas
sbb
dec
popa
cmp
xchg
shl
fcomp
add
jns
cmp
or
adc
add
jnp
test
call
mov
loopne
push
out
mov
(bad)
pushf
cs
sub
xchg
jecxz
fistp
adc
dec
js
jne
scas
mov
lock
aas
mov
ficomp
push
push
add
lea
xchg
sub
mov
loop
pop
aad
cmp
jg
fld
sub
pop
sti
leave
mov
xchg
xchg
jae
pusha
cli
xor
(bad)
push
lods
adc
lods
rol
xadd
sub
mov
fistp
sbb
or
xor
xlat
pop
mov
shl
pop
and
mov
inc
inc
pop
pop
inc
shr
cdq
cli
sbb
sar
add
outs
cmp
jge
push
loope
bound
or
jmp
and
add
sub
dec
aas
add
or
mov
cmp
fadd
je
xchg
pop
imul
lahf
stos
cmp
add
(bad)
(bad)
push
popa
add
outs
js
mov
pop
inc
and
jge
sbb
adc
call
jnp
or
adc
rcl
pop
dec
cmp
jmp
sub
jmp
ins
push
test
push
adc
int
enter
inc
jae
fdivr
sub
adc
jle
iret
xchg
dec
loope
cmp
iret
arpl
call
clc
add
lahf
aam
push
pop
sbb
xchg
cmps
stc
outs
nop
mov
push
or
sbb
and
or
sti
dec
jb
loopne
cmp
fdivr
pop
repnz
xor
popa
hlt
test
enter
stc
shl
movs
push
bound
mov
push
jp
enter
dec
nop
les
xor
sub
fst
or
iret
sbb
daa
jecxz
fs
pop
movs
rcl
stos
mov
ret
jl
mov
jbe
dec
mov
movs
xchg
and
int3
ja
sbb
inc
dec
mov
jmp
clc
adc
hlt
pop
sbb
lods
div
xor
xchg
jo
jnp
jbe
rcl
js
cmc
mov
movs
sti
and
popa
lea
pusha
mov
dec
repz
mov
fist
call
ins
mov
dec
scas
or
mov
add
es
scas
test
jmp
sti
mov
repnz
movs
adc
rol
jne
inc
lock
mov
sub
adc
bound
enter
pop
out
adc
push
sbb
cmps
fdiv
mov
sbb
(bad)
shl
int
clc
pop
jmp
mov
or
mov
xchg
or
pushf
js
movs
pop
ret
iret
daa
pop
mov
lock
sub
lods
pop
mov
and
mov
pop
loop
mov
stc
pop
xchg
shr
sub
jns
icebp
jmp
pop
stos
xor
pop
(bad)
push
movs
iret
sbb
sub
ss
xlat
inc
nop
pop
mov
movs
or
call
add
jecxz
adc
mov
out
mov
or
cmp
mov
aad
je
scas
pop
mov
cmps
add
ins
mov
test
mov
loopne
ins
in
test
imul
inc
jnp
mov
inc
cmps
arpl
(bad)
lods
adc
xchg
cld
daa
bnd
cmp
int3
(bad)
xor
jge
inc
push
jb
test
pop
(bad)
inc
mov
xor
out
in
imul
into
mov
fcomp
jne
cs
cmp
jno
sbb
fnsave
add
sbb
jg
iret
pop
fst
cmp
fwait
clc
out
std
cmp
popa
xor
dec
mov
pop
sub
mov
or
sub
and
and
in
mov
sbb
mov
pop
pop
inc
in
dec
add
imul
jl
push
xor
ror
cmps
jp
out
mov
push
inc
mov
retf
jg
sahf
(bad)
jg
pop
jno
fwait
bound
ret
push
scas
stos
mov
or
outs
sub
and
cs
mov
dec
cmp
push
outs
ret
nop
xor
fidiv
push
imul
and
pop
retf
dec
mov
cmp
jae
stc
(bad)
fwait
lods
xor
pop
dec
nop
add
test
inc
inc
pop
sub
push
test
xchg
cli
(bad)
mov
pop
test
(bad)
pushf
call
cmp
and
jno
mov
inc
adc
mov
into
jne
arpl
mov
fwait
das
pop
sti
dec
cdq
ja
lea
loope
pop
add
or
int
lock
fst
dec
or
adc
push
or
stos
in
in
cs
das
dec
in
hlt
in
jns
lea
test
mov
sahf
(bad)
call
push
jmp
mov
add
cmp
repz
retf
jecxz
adc
out
inc
mov
lds
push
or
or
iret
fist
movs
mov
ds
imul
sbb
out
pushf
push
test
and
sbb
dec
xor
icebp
out
inc
repnz
addr16
rep
sar
imul
mov
retf
dec
ror
bound
lods
aam
int3
lods
or
cwde
xlat
and
das
push
jo
mov
stos
sub
dec
adc
push
add
push
fwait
out
ret
xor
mov
stos
sbb
scas
rol
std
jnp
cmp
dec
lds
lods
mov
cmp
jns
sub
xor
add
rol
push
daa
mov
dec
lahf
lods
jmp
imul
pop
push
mov
xor
pop
dec
xor
xchg
add
mov
push
adc
outs
dec
adc
in
cmp
inc
cwde
xor
jle
shl
adc
pop
lock
retf
das
jge
mov
div
adc
pop
add
cmp
std
movs
add
cmp
mov
mov
mov
fwait
sub
ret
das
or
sbb
fwait
jmp
int
dec
or
jno
jno
fadd
sbb
and
in
add
lods
out
in
into
adc
ss
ficom
xchg
inc
pop
xchg
(bad)
fnstenv
adc
mov
enter
dec
sub
cmc
jb
into
pop
sti
mov
jle
scas
push
ja
xchg
dec
sbb
gs
jno
test
cmp
inc
adc
xor
pop
test
mov
mov
scas
std
repnz
inc
sbb
stc
xchg
xchg
jno
dec
movs
clc
arpl
(bad)
xchg
xor
adc
scas
enter
jmp
dec
pop
jnp
jnp
dec
jnp
sti
mov
loopne
into
mov
ins
cld
sahf
clc
mov
xchg
dec
popa
mov
cmp
or
popa
pop
sbb
mov
movs
psadbw
push
jae
mov
mov
sub
(bad)
int
fwait
outs
cmp
mov
clc
aam
inc
or
(bad)
loopne
stos
pop
sti
lds
cmps
imul
test
jno
ficomp
sub
xchg
stos
mov
icebp
bound
les
xor
mul
pop
add
adc
mov
add
adc
cmps
xor
lahf
std
je
and
test
in
sbb
data16
jae
or
dec
sub
push
imul
fbstp
and
call
loope
mov
ja
fwait
int3
adc
(bad)
enter
scas
movs
in
loope
jmp
adc
sar
mov
mul
enter
aas
ret
(bad)
icebp
push
stc
cmp
or
iret
ret
cli
movs
push
xchg
push
in
xchg
sar
mov
mov
sbb
dec
xor
fistp
fnstsw
xor
mov
mov
mov
int
ss
xchg
test
int
in
int
mov
mov
lea
call
pop
movs
jl
push
sbb
sahf
stc
fmul
mov
fsub
mov
adc
cmps
mov
inc
adc
rcr
(bad)
pop
mov
fwait
pop
into
xchg
adc
sbb
movhps
into
push
fcmovu
lock
jmp
sahf
in
or
jecxz
add
sub
push
add
dec
xchg
fwait
or
push
xchg
cs
push
adc
mov
jmp
dec
pop
mov
xlat
push
pop
iret
stc
test
loop
push
inc
lods
pop
jnp
and
mov
fadd
dec
sbb
ret
mov
sbb
lea
sub
in
mov
adc
push
dec
jl
mov
arpl
or
aad
inc
xor
pushf
push
test
popf
push
lds
sbb
cmp
aaa
cld
scas
jno
clc
mov
inc
cdq
sub
sar
mov
lea
mov
scas
push
outs
xchg
mov
jp
jbe
loopne
(bad)
fistp
xchg
fadd
sub
or
fmul
sub
jae
test
stc
mov
xchg
adc
cmp
cmc
jmp
jl
adc
push
shl
ror
(bad)
jmp
or
enter
ret
in
daa
test
jb
jge
xchg
test
dec
pop
jmp
stos
jmp
movs
or
loope
fimul
pop
out
xchg
sub
jmp
mov
imul
call
repz
mov
cld
repz
mov
rol
imul
dec
pop
std
ins
or
sub
push
xchg
fxch
or
pop
mov
pusha
stos
xlat
inc
push
mov
add
ffree
hlt
cli
in
adc
aas
jg
lock
popf
mov
(bad)
mov
xchg
push
mov
ins
lds
fisttp
mov
mov
jl
in
or
inc
inc
ret
hlt
into
test
ret
or
add
std
cmp
ror
(bad)
out
cmp
and
mov
lea
push
cmp
enter
ret
mov
xor
inc
test
call
and
pop
arpl
in
mov
push
jo
jns
or
out
adc
inc
hlt
movs
(bad)
pop
(bad)
cmp
pop
jno
ja
aas
xchg
add
xor
aaa
jmp
xor
pop
cs
(bad)
jge
jmp
push
sub
jl
pop
js
call
and
or
aad
pop
xor
dec
jp
add
fcmovb
xchg
mov
dec
cmp
out
cmp
(bad)
cmps
push
cmp
xchg
xor
popf
inc
shl
pop
pop
cmp
push
(bad)
aas
inc
cmc
push
fst
pusha
push
pop
ja
adc
cmp
test
in
and
aaa
or
pop
repz
call
mov
data16
das
stos
cmp
(bad)
fcompp
mov
push
(bad)
mov
loopne
add
rcr
mov
mov
sbb
hlt
pop
inc
cli
aam
mov
jne
push
(bad)
rcr
dec
in
data16
or
retf
scas
or
xchg
mov
add
push
lds
pushf
and
adc
into
and
cmp
jl
(bad)
mov
call
loopne
dec
(bad)
nop
mov
mov
rcr
jecxz
push
sbb
sbb
call
mov
cmp
arpl
jbe
jl
dec
(bad)
fbld
mov
popa
xor
cmc
cmp
mov
mov
sti
aam
test
mov
jne
out
cwde
iret
(bad)
rol
retf
retf
push
nop
push
mov
lds
pop
shl
aas
repnz
(bad)
(bad)
imul
dec
lock
lods
dec
mov
pushf
movs
xor
(bad)
pop
mov
xadd
sub
sahf
and
jmp
add
(bad)
out
sti
xchg
and
sbb
cwde
adc
adc
add
in
add
push
sbb
outs
cdq
ror
iret
lds
push
mov
jecxz
movs
leave
mov
sar
dec
add
scas
jg
push
xchg
add
mov
inc
xor
scas
push
cwde
(bad)
test
sbb
or
ss
adc
das
fxch
inc
sbb
lds
stos
xor
inc
inc
push
cmp
mov
push
push
sub
arpl
mov
adc
jecxz
pop
stos
imul
jge
cwde
inc
in
sub
leave
adc
dec
arpl
xor
cmp
jbe
jl
pop
(bad)
scas
popf
(bad)
fs
mov
sahf
inc
pop
je
push
popf
sub
bswap
xor
xchg
daa
mov
stc
add
(bad)
fcmovnbe
adc
push
movs
(bad)
(bad)
jecxz
mov
retf
xchg
push
cmp
scas
sti
mov
into
rol
mov
push
and
mov
js
add
int3
xor
lahf
push
ins
je
push
into
aaa
xor
shl
outs
push
sub
fcmovnbe
inc
sbb
pop
mov
mov
in
and
lds
mov
int3
cmps
pop
inc
sub
leave
cmp
(bad)
dec
in
aaa
out
loopne
xor
mov
pop
push
leave
adc
adc
mov
pop
dec
cld
loop
pop
xchg
pop
outs
imul
cmc
jge
mov
mul
stos
ret
aam
pop
add
loope
mov
inc
adc
jecxz
jle
shl
jmp
push
nop
push
(bad)
out
fistp
ja
gs
pop
call
dec
sbb
xor
or
cmps
xchg
or
jns
mov
rol
icebp
bound
icebp
adc
movs
je
cmps
je
jb
jae
ret
sbb
hlt
mov
aad
jp
ficomp
test
xor
stos
les
push
mov
mov
adc
xchg
or
jo
imul
stos
ins
cmp
inc
or
sub
adc
pusha
mov
jo
mov
out
int
imul
jmp
sahf
dec
ds
add
and
mov
outs
pop
cmp
add
and
cmps
sub
imul
or
int3
mov
(bad)
xlat
out
(bad)
pop
sub
lds
xchg
cdq
div
xchg
mov
inc
out
jp
aas
xchg
out
lea
scas
and
gs
adc
iret
test
mov
pop
push
dec
aaa
push
mov
cli
mov
adc
mov
mov
dec
push
in
add
push
or
mov
xchg
ffreep
xchg
test
jl
push
sub
lods
popa
fs
aas
push
test
outs
pop
push
push
js
mov
lahf
fisubr
cwde
dec
movs
and
call
mov
dec
call
retf
mov
adc
out
jge
pop
(bad)
jbe
mov
or
adc
stos
push
js
aaa
push
mov
adc
out
add
sub
ja
fs
inc
in
cmps
mov
ins
and
inc
xor
and
(bad)
xor
test
xchg
(bad)
adc
sub
into
ret
pop
dec
ja
mov
push
fld
jp
pop
pop
test
dec
lahf
push
sub
mov
movs
jae
sub
add
jmp
and
outs
imul
ins
jl
stos
adc
fwait
clc
jecxz
test
push
outs
xchg
pushf
(bad)
aas
xchg
jmp
cdq
xchg
mov
push
fcmovnbe
das
inc
pop
mov
dec
xchg
sub
aas
ror
push
fcomp
imul
cmps
je
mov
pop
mov
or
lods
mov
push
bound
mov
fwait
xlat
adc
mov
xor
add
retf
jp
push
push
rcl
pop
pop
outs
cs
inc
ror
test
pop
test
hlt
or
add
mov
xchg
add
rcr
and
mov
icebp
xchg
call
call
jno
push
sbb
fimul
test
mov
fs
xchg
adc
jbe
xchg
or
mov
shl
push
rcl
or
leave
das
jns
cmp
sbb
and
mov
jae
sbb
dec
mov
and
xor
mov
rcl
dec
imul
xchg
jo
(bad)
or
and
test
cmp
cmp
mov
xor
imul
adc
add
xor
xor
fst
(bad)
jno
jg
dec
cwde
adc
sbb
push
shl
and
cmps
push
movs
jle
cmps
jne
or
outs
test
inc
repz
lahf
cmp
retf
pop
pop
and
push
inc
cmp
inc
adc
in
mov
rol
inc
cli
add
sub
xchg
sbb
pusha
mov
mov
js
inc
and
dec
jno
sub
xlat
sub
ds
mov
scas
xlat
mov
outs
add
mov
cmps
ins
stos
sbb
and
rcr
mov
sbb
push
push
(bad)
sbb
bound
mov
aam
sub
sub
xor
mov
mov
mov
sbb
and
out
pop
add
out
hlt
jp
popf
std
inc
call
loope
jmp
mov
jnp
es
jno
fs
xchg
sbb
mov
fcmove
sbb
(bad)
mov
shr
fs
or
or
xlat
je
aam
hlt
sub
or
test
push
xchg
sti
sbb
add
inc
out
mov
imul
cld
iret
xchg
or
movs
jb
cmc
aad
cdq
jge
push
fmul
dec
cmps
xchg
fmul
das
repnz
imul
mov
(bad)
cwde
push
daa
jg
inc
jecxz
sbb
je
lea
push
seta
pop
cmp
pop
fdiv
sar
lds
out
lock
outs
and
sti
push
call
xchg
jg
jl
jp
pop
push
push
stos
sub
scas
fcom
push
and
sbb
mov
mov
xor
scas
sub
(bad)
sbb
call
push
leave
mov
mov
ins
retf
loopne
(bad)
sub
xchg
and
pop
addr16
inc
(bad)
push
xor
push
jp
ss
pop
dec
jp
retf
jae
or
push
add
mov
add
clc
(bad)
mov
out
fdiv
pop
mov
push
push
pop
xor
fldcw
test
mov
into
shl
inc
jbe
cmp
dec
ins
fnsave
test
leave
popf
jle
test
dec
icebp
adc
in
mov
sub
repnz
lods
mov
fcomp
pop
xlat
loop
pop
push
xor
mov
sti
inc
mov
outs
mov
pop
bound
test
dec
in
and
sbb
push
out
test
cmp
sar
es
mov
cmp
inc
and
cmp
in
shl
push
and
sbb
(bad)
mov
mov
rcl
ficom
cwde
rcr
mov
pop
bound
and
rol
fild
push
xchg
test
movs
xchg
jo
push
int3
cmp
fs
or
repnz
adc
push
test
(bad)
lds
popa
mov
cli
add
cli
jmp
ret
cmp
jecxz
xchg
setae
sar
addr16
sbb
pop
xchg
xchg
js
and
mov
push
xor
cmp
sub
mov
ret
mov
xchg
fwait
add
ror
sub
inc
inc
test
movs
xor
push
jecxz
les
enter
je
repz
push
mov
pop
pop
xchg
mov
test
test
mov
mov
cmp
mov
not
neg
lods
int
add
xchg
into
das
push
add
add
jmp
jbe
ss
retf
or
inc
and
mov
fmul
and
lea
into
xlat
add
cmp
pop
push
xchg
test
sahf
in
inc
repnz
lahf
es
(bad)
es
xchg
sub
fisub
les
dec
and
test
gs
outs
repz
xor
mov
(bad)
mov
push
xchg
cmp
cmp
ror
iret
jbe
sbb
jecxz
aam
cs
push
dec
jmp
gs
xor
jecxz
mov
add
mov
std
gs
cmp
inc
dec
adc
clc
outs
mov
retf
je
icebp
movs
lods
push
fisub
xchg
sub
cmp
mov
addr16
fidivr
push
and
dec
(bad)
nop
mov
std
cmp
ins
dec
pop
retf
push
add
jae
mov
nop
jmp
or
loope
mov
(bad)
cwde
mov
dec
scas
js
ins
or
pop
or
icebp
std
out
jmp
test
loope
lock
or
popf
cmps
jmp
aad
cmp
cwde
test
fs
and
xchg
aas
adc
sub
pop
inc
int3
repz
sbb
loopne
rcr
or
fucom
popa
call
rol
mov
fdivp
js
and
cmp
mov
or
xchg
dec
jne
lahf
push
frstor
mov
loope
dec
je
outs
xchg
sub
out
stc
push
cld
add
pop
jo
cmp
ss
aam
inc
sub
push
sub
inc
jl
push
mov
xor
adc
addr16
inc
gs
add
(bad)
jmp
or
xor
cmp
and
fsubr
and
cmps
pop
(bad)
sbb
cmps
and
add
lahf
mov
sti
psrld
pop
inc
inc
dec
sti
or
ret
out
sbb
add
fist
outs
rcl
jmp
push
rol
in
pop
pop
(bad)
cmc
mov
sbb
adc
call
mov
sub
xchg
gs
inc
add
cmp
and
jmp
inc
icebp
jb
popf
in
mov
cmps
xor
lea
scas
(bad)
jmp
and
fisubr
(bad)
add
sbb
mov
popf
fs
fisub
fadd
repz
mov
pop
push
xchg
dec
mov
repz
lods
fdiv
sub
retf
(bad)
shl
jmp
and
addr16
js
das
sbb
je
add
lods
mov
outs
shr
pusha
cld
fwait
fwait
mov
add
test
jge
int3
mov
sbb
in
loopne
add
mov
sub
mov
pop
addr16
call
shl
sbb
sub
dec
jg
nop
or
call
aas
or
mov
mov
movs
in
int3
das
(bad)
out
jbe
mov
xchg
mov
xchg
pop
das
mov
jl
mov
(bad)
sub
or
repnz
adc
mov
push
jo
icebp
xchg
test
pop
inc
movs
mov
iret
pop
iret
cmps
loop
xor
dec
jb
out
jb
jnp
inc
lock
jnp
cmp
mov
out
inc
cmp
inc
add
mov
mov
cmps
sub
rcr
imul
add
dec
aad
ins
mov
loop
mov
cmp
in
mov
inc
add
xor
pop
push
fisubr
cld
mov
or
fist
add
mov
cmps
(bad)
sbb
pop
imul
mov
adc
call
addr16
jbe
retf
je
mov
test
jg
into
adc
out
mov
jmp
xchg
imul
dec
leave
test
pop
push
mov
dec
call
aaa
xor
out
jno
or
fidiv
sub
jge
into
outs
push
and
dec
out
dec
stos
mov
push
rol
(bad)
xor
out
outs
pop
cmp
mov
(bad)
mov
aas
imul
scas
test
add
or
test
ficom
push
sub
cmp
or
pop
fisub
pop
sbb
std
dec
or
mov
or
loopne
xor
add
cwde
addr16
add
hlt
mov
ins
fild
fcomi
mov
cmp
xor
fs
movs
jo
dec
mov
je
int3
leave
push
test
lods
mov
dec
or
pop
out
sbb
pushw
or
outs
and
leave
enter
push
push
je
enter
sbb
inc
sbb
std
pop
xchg
mov
test
retf
pop
push
out
inc
sahf
fsub
cmp
aas
sub
shl
je
pop
in
mov
xor
icebp
inc
imul
xchg
outs
push
lods
arpl
clc
and
repnz
lock
push
scas
jns
in
test
sbb
inc
mov
in
jns
adc
retf
sbb
fs
addr16
retf
mov
in
mov
lahf
bound
std
loopne
xchg
ficom
sub
dec
sbb
stos
mov
fadd
and
adc
pusha
lds
int3
fistp
arpl
push
nop
pop
sbb
xchg
xor
(bad)
pop
mov
clc
jg
add
fisub
outs
push
sub
pop
mov
je
and
and
lods
dec
xor
arpl
dec
pop
inc
mov
dec
fcomp
movs
pop
mov
sub
xchg
fistp
add
push
or
push
or
xchg
dec
fisub
pusha
sbb
inc
inc
and
pop
test
loope
out
sahf
std
shl
ror
pop
stc
jae
or
xchg
sub
sbb
cmp
sahf
adc
jecxz
inc
sbb
pop
jne
dec
dec
pop
movs
sub
pop
mov
sar
sbb
shl
(bad)
push
push
cmp
arpl
fnstcw
sbb
repnz
leave
cs
je
ficomp
fist
pop
sahf
sub
scas
fcomp
push
jmp
stc
cmp
xchg
leave
clc
aaa
stos
test
push
pusha
adc
xchg
es
xor
aaa
push
aad
mov
inc
retf
cmp
cld
push
cs
hlt
jecxz
dec
jb
scas
xor
int
or
pop
jo
xor
mov
sbb
aaa
xchg
adc
icebp
ins
jmp
adc
and
xor
cmc
jb
imul
jmp
test
into
pavgb
pusha
mov
inc
cmp
loope
lock
nop
xchg
dec
add
push
push
jno
cmp
sub
shl
lods
xor
mov
ins
movs
and
es
lea
imul
imul
mov
retf
test
std
mov
mov
and
shl
dec
or
arpl
cmp
(bad)
or
stos
outs
and
pusha
push
test
mov
xlat
sbb
mov
sbb
dec
cmp
in
es
fild
sub
shr
or
push
retf
pusha
(bad)
sub
xchg
mov
shr
dec
mov
fsub
movs
jp
inc
dec
in
aas
out
into
in
dec
enter
mov
or
in
jb
pop
push
mov
or
jne
lock
xchg
pop
add
sub
call
movs
clc
dec
cli
jle
call
mov
int
adc
xchg
(bad)
jnp
push
xor
aad
icebp
fimul
(bad)
adc
inc
in
out
mov
fsub
sahf
xchg
(bad)
jnp
sahf
xchg
xor
cmp
adc
dec
xor
enter
scas
cmp
add
shl
in
jg
jecxz
(bad)
les
stc
dec
adc
sub
xchg
mov
enter
fs
mov
not
or
and
xchg
hlt
scas
mov
jge
xor
(bad)
mov
enter
cmp
mov
push
sub
mov
push
(bad)
fs
in
adc
mov
inc
fisubr
fiadd
(bad)
fisttp
sbb
popf
cdq
mov
inc
mov
shr
sbb
(bad)
sub
push
mov
cli
retf
adc
xchg
std
jo
repz
sbb
retf
popf
repz
pop
cmp
jmp
dec
cmc
jo
inc
test
jae
rcr
add
fstp
xchg
test
retf
retf
jmp
mov
xor
shl
popa
fs
out
adc
lock
test
adc
cwde
push
sbb
pop
loopne
js
popf
sub
fisttp
or
fisubr
pop
dec
xor
dec
cmp
sub
lahf
mov
loopne
(bad)
fisttp
xor
mov
mov
mov
scas
add
ss
in
dec
in
inc
loope
adc
xchg
cmps
mov
loopne
pop
jmp
inc
xor
lock
jp
lds
jnp
pop
cmp
(bad)
fild
push
inc
adc
jmp
inc
popa
pop
movs
sbb
dec
push
ins
push
mov
icebp
xor
xor
loopne
sbb
je
aas
mov
test
mov
(bad)
loope
or
mov
rol
mov
push
mov
out
mov
mov
enter
and
(bad)
jl
mul
xchg
in
test
inc
pushf
(bad)
repnz
sbb
mov
mov
retf
mov
cld
cmp
sbb
inc
cmp
jbe
mov
ret
add
cs
popa
xchg
add
popf
push
fs
ficom
ja
cmc
mov
test
arpl
mov
sbb
int3
lods
cmp
add
mov
imul
cmps
ss
inc
js
fist
fidivr
mov
add
repz
movs
fnstsw
loopne
mov
inc
ins
inc
mov
and
jecxz
stos
rcr
mov
icebp
or
mov
jne
cmp
adc
ror
test
ja
ja
push
sub
into
loopne
mov
sbb
mov
in
clc
aaa
or
fbld
inc
movs
imul
mov
dec
sub
aas
inc
imul
(bad)
fst
jge
stos
jbe
jmp
add
inc
jno
inc
pop
xlat
std
cmp
or
test
inc
sub
stos
mov
pavgw
ja
jne
imul
jle
inc
pop
xchg
sar
mov
mov
arpl
dec
ss
mov
pusha
out
and
mov
add
addr16
push
std
neg
inc
jmp
xlat
mov
xlat
push
les
jns
leave
aad
sahf
push
jbe
arpl
and
int
push
cld
sub
lds
into
inc
jns
adc
pop
lahf
fiadd
inc
loope
pop
call
sub
mov
jg
mov
loopne
jne
adc
cmc
mov
shl
mov
ss
cdq
shl
jo
xor
aam
data16
dec
cmp
or
(bad)
xchg
lahf
push
pop
push
scas
sub
add
call
outs
mov
mov
push
aas
ins
push
xchg
xor
dec
xchg
mov
stc
daa
int3
in
mov
jle
push
and
and
and
mov
jmp
daa
sub
popf
mov
jl
std
dec
cld
cmc
lods
loope
xchg
scas
sbb
sub
cmps
sahf
and
test
jle
jmp
stos
mov
sbb
push
lahf
and
xor
add
sahf
sbb
nop
pushf
scas
ds
sar
mov
mov
out
mul
outs
sub
adc
cs
and
sub
mov
inc
inc
in
lods
fs
or
aaa
(bad)
add
je
mov
adc
or
adc
jmp
mov
add
iret
and
cmp
loop
mov
adc
jg
(bad)
mov
bound
fiadd
fist
mov
lahf
addr16
jo
pop
das
addr16
add
sbb
mov
stos
ror
popf
sub
push
aad
retf
or
jo
or
push
outs
push
inc
jp
mov
clc
or
sub
stos
fdivr
adc
xchg
jmp
fwait
jno
popf
leave
xchg
cmps
adc
enter
out
sbb
test
inc
mov
xor
jecxz
nop
lods
adc
cmp
dec
push
mov
push
dec
test
sahf
adc
repz
xor
outs
dec
(bad)
xchg
sbb
add
mov
test
loope
pop
shl
ja
jb
stc
enter
pop
stos
mov
arpl
ja
sbb
lahf
popf
mov
out
test
out
add
aas
fist
fsub
cmp
aas
fisub
xchg
loop
mov
sahf
xchg
imul
sti
sbb
jnp
or
cmp
in
dec
aas
fmul
mov
xchg
xchg
jg
pusha
jmp
retf
daa
aam
rol
lods
dec
call
outs
lahf
adc
xchg
pop
adc
push
fnstenv
mov
nop
jg
mov
xchg
dec
aad
mov
push
jns
push
adc
clc
clc
add
push
xor
pop
popf
aaa
mov
int
or
loop
enter
aas
push
test
retf
popa
sahf
jns
popf
fidiv
in
call
mov
mov
icebp
out
retf
xchg
mov
and
dec
jbe
add
call
add
xor
jnp
loope
pop
out
fs
or
or
cmp
cmp
popa
dec
xchg
retf
adc
addr16
dec
daa
adc
fcom
xor
mov
addr16
arpl
popa
shr
inc
dec
xor
jg
das
push
dec
or
pop
les
jp
push
jge
add
mov
add
xchg
add
sub
sbb
clc
mov
add
dec
(bad)
push
repnz
(bad)
fs
pop
add
ja
movs
mov
lods
pop
cmp
stos
pusha
or
aam
mov
jp
cmp
jns
jl
loope
or
test
and
dec
cdq
test
test
ins
push
pop
dec
out
outs
imul
retf
or
push
xchg
(bad)
xchg
(bad)
fidivr
cmp
push
push
xor
jmp
cli
lods
nop
test
xchg
push
cmc
pusha
clc
cmps
popf
jge
push
cli
repnz
test
loopne
ja
sub
cmp
jnp
cdq
xlat
pop
xchg
out
popa
movs
dec
cmp
loop
out
and
ins
jno
fwait
repnz
je
xlat
and
das
mov
ja
movs
sub
sbb
and
jmp
aas
sbb
adc
icebp
dec
inc
jmp
adc
scas
mov
nop
test
xchg
push
xor
xchg
pop
add
call
ins
xlat
call
or
cmps
ds
add
mul
leave
es
es
push
imul
mov
pop
js
sbb
mov
add
mov
dec
dec
sub
push
mov
rol
or
sub
das
cmc
lea
stos
cli
call
push
adc
pop
sub
jl
lock
pop
out
fsub
clc
arpl
sar
cdq
pop
loopne
fist
int
fisubr
lea
xchg
cmp
not
sbb
jns
aam
lds
add
push
mov
clc
and
pusha
mov
xor
in
retf
leave
das
in
test
jecxz
mov
out
std
imul
cmps
fdivr
(bad)
adc
int3
push
lea
jo
fdiv
popf
mov
clc
mov
adc
or
iret
pop
(bad)
in
mov
jmp
ss
xchg
fidivr
dec
sbb
jmp
nop
(bad)
mov
js
loope
jp
push
dec
stos
mov
adc
fnstcw
repnz
je
jp
jno
sbb
and
mov
addr16
aad
(bad)
ins
test
xlat
mov
(bad)
ror
dec
jns
arpl
out
sub
xchg
inc
inc
xchg
scas
mov
push
sbb
pushf
mov
cs
int3
pop
mov
neg
jne
ret
adc
in
retf
or
(bad)
icebp
dec
je
or
rcl
and
xchg
cmp
lds
(bad)
fwait
call
(bad)
(bad)
jnp
loope
xchg
adc
data16
das
bound
xor
stc
call
cmp
or
pop
or
arpl
mov
test
sbb
imul
dec
mov
lds
xor
stos
cmps
shl
iret
adc
ret
mov
pop
out
xchg
js
int
cmp
xor
and
jecxz
fdiv
jg
ret
sub
or
inc
in
(bad)
xor
push
mov
jne
imul
mov
mov
out
mov
int3
imul
out
jne
scas
test
(bad)
push
retf
mov
dec
push
mul
xchg
sbb
hlt
xor
cmc
cdq
in
(bad)
out
mov
xchg
inc
cmps
or
ss
mov
inc
cmps
sub
adc
adc
or
(bad)
or
and
mov
jl
sahf
shr
pop
cdq
das
dec
mov
xor
ret
mov
repz
out
ins
repz
clc
jge
mov
inc
imul
repz
adc
ret
jle
xor
jl
dec
pop
mov
daa
xchg
dec
clc
push
retf
repz
lods
fisub
mov
mov
sahf
pop
adc
and
adc
inc
gs
call
mov
test
jl
push
jge
(bad)
xor
inc
xchg
repz
lea
push
sbb
pop
rol
inc
stos
scas
add
icebp
fisttp
fs
push
inc
dec
sub
xchg
jo
jb
sub
sbb
pushf
fs
dec
test
mov
or
push
test
aad
xchg
adc
pop
sti
pop
in
shr
or
xchg
jno
hlt
pop
cs
je
int3
stos
lahf
xchg
out
cs
pop
mov
ret
add
dec
xchg
adc
mov
(bad)
repnz
adc
or
lock
xor
jmp
mov
scas
dec
je
into
dec
out
cld
cmp
nop
mov
mov
iret
test
mov
sub
aaa
out
dec
mov
fidiv
test
add
jl
dec
inc
mov
mov
add
mov
adc
lock
mov
jecxz
jb
push
bound
mov
pop
adc
out
push
fwait
in
inc
outs
inc
stc
addr16
jecxz
inc
inc
pusha
pusha
pop
fstp
aaa
push
and
test
and
sti
mov
fist
push
int3
outs
jp
sub
jb
pop
pop
dec
ror
aaa
je
fwait
mov
push
dec
int3
or
mov
and
out
cli
mov
and
jp
adc
ret
mov
xor
push
mov
loopne
xchg
int3
mov
call
std
popa
hlt
call
ret
js
dec
adc
xchg
xchg
in
cmp
pop
imul
dec
inc
and
add
out
adc
xlat
ins
test
add
xchg
mov
stos
mov
xlat
cmp
data16
out
test
adc
mov
or
dec
jg
(bad)
popf
std
jmp
jno
dec
and
loop
lock
repnz
push
arpl
repnz
pop
adc
xor
ror
mov
cmp
hlt
dec
push
jmp
out
cmp
push
sub
js
sbb
neg
mov
jge
mov
lahf
rol
popf
inc
dec
xchg
jecxz
div
inc
popa
ins
xor
dec
ret
ss
mov
dec
push
mov
not
mov
jle
mov
pop
pop
scas
test
scas
push
xchg
and
test
sar
sub
jns
push
mov
dec
sub
lods
js
aaa
shl
aad
dec
jnp
dec
test
pop
fnsave
jns
push
(bad)
push
add
xchg
xchg
nop
mov
inc
sub
push
outs
(bad)
cdq
jmp
jne
dec
neg
dec
mov
xchg
push
mov
inc
data16
fmulp
ret
mov
cs
bound
rcl
xor
jns
mov
imul
daa
(bad)
rcr
push
fwait
mov
scas
gs
mov
and
or
aam
(bad)
ret
movs
pop
dec
xor
mov
or
lds
dec
adc
and
call
and
ror
xchg
jne
inc
pop
cmp
sbb
sub
xchg
mov
stos
iret
sar
jp
mov
ss
cmp
sub
dec
mov
dec
push
in
repz
lahf
adc
fidiv
stos
(bad)
repnz
xchg
sahf
enter
xlat
retf
adc
inc
cwde
cmp
adc
pop
rcl
bound
stc
adc
sub
mov
add
call
(bad)
sbb
jmp
outs
jmp
push
cli
ins
xchg
stos
scas
(bad)
rcr
add
hlt
addr16
jp
and
popa
loopne
stos
sbb
das
daa
pop
bnd
fcmovne
imul
cwde
in
loop
add
fnstsw
dec
enter
fistp
push
and
jne
imul
cmp
jb
and
aad
sub
retf
stos
push
and
je
pop
int3
jo
inc
ds
mov
bound
sbb
add
pop
addr16
(bad)
push
push
inc
fs
adc
das
ficomp
cmc
into
inc
mov
sub
adc
shl
sbb
cs
mov
inc
sti
enter
cmc
inc
cwde
call
pushf
inc
test
outs
arpl
mov
or
cmp
std
sbb
pop
pop
push
mov
xlat
or
movs
cld
mov
xchg
sbb
shr
out
out
in
cmp
scas
pop
pop
fisubr
sti
or
mov
cwde
push
mov
push
lahf
push
ret
rcl
popa
mov
in
mov
add
lahf
pop
or
dec
int
sub
cmp
xor
enter
lahf
ja
fisubr
cmp
mul
mov
leave
add
arpl
mov
arpl
mov
sar
xchg
mov
call
loop
je
dec
xor
mov
pop
pop
add
iret
mov
lds
and
cmp
dec
sahf
fcomi
lods
xor
xor
iret
gs
mov
jmp
std
push
mov
call
(bad)
mov
adc
ss
push
rcr
aam
or
cmps
jbe
test
dec
call
jmp
rcl
inc
mov
retf
mov
dec
imul
pop
inc
lods
cmps
mov
push
add
and
xchg
jae
push
sbb
dec
test
fisub
das
outs
jmp
jns
adc
inc
das
dec
pop
jns
and
mov
mov
mov
pop
fld
xchg
jecxz
imul
or
inc
pop
pusha
ins
cli
dec
cld
lock
stc
and
adc
inc
int
in
scas
dec
pop
cld
lds
(bad)
jno
mov
(bad)
mov
push
or
xlat
es
cwde
out
push
sbb
push
or
xchg
fild
fsubr
hlt
dec
aad
xor
out
pop
inc
bnd
sub
imul
shl
mov
test
mov
mov
cs
call
loop
pop
jns
jns
sbb
mov
cli
cmp
out
cli
mov
mov
mov
aas
pop
add
loop
mov
mov
ret
iret
in
push
int
retf
push
sub
outs
aad
or
and
inc
jbe
pop
ins
and
fisubr
loopne
imul
or
out
adc
(bad)
out
dec
mov
xchg
xor
pop
cmps
and
and
mov
xor
in
push
pusha
in
jae
push
je
fld
or
sub
inc
imul
iret
lock
fdivrp
gs
repz
call
mov
pop
inc
shr
push
jg
fisubr
pop
cmc
jmp
adc
(bad)
dec
sub
fidiv
add
mov
dec
das
jg
add
push
dec
adc
add
sbb
call
add
(bad)
add
mov
inc
dec
mov
sbb
sar
mov
addr16
(bad)
dec
cmps
lea
dec
idiv
test
jp
mov
shl
pop
fnstcw
je
push
inc
or
fisttp
cmp
shl
in
jl
pop
stos
(bad)
jnp
jae
push
fmulp
xor
cmp
pop
call
je
lea
inc
ror
jbe
xchg
iret
cmp
push
call
fisttp
sbb
jne
jl
adc
fucomip
adc
cmp
jle
out
mov
mov
fmul
xor
cld
test
movs
pusha
movs
out
pushf
jnp
push
push
push
sahf
in
pop
(bad)
mov
clc
(bad)
dec
gs
sub
aam
std
jo
mov
xchg
sub
inc
inc
rol
jnp
aas
sub
data16
xlat
sub
dec
cs
aam
pop
jnp
imul
cmp
nop
js
mov
lea
jmp
jmp
stc
mov
mov
sub
stos
xchg
inc
mov
push
sti
sbb
in
cmp
test
jae
xchg
or
and
jo
mov
sbb
pusha
cmp
push
lods
cmps
mov
test
add
test
sub
or
ds
into
sbb
add
mov
xor
xor
cli
pop
pop
push
pusha
mov
dec
fstp
call
pop
movs
hlt
mov
imul
jg
shr
add
pop
out
xor
adc
jns
enter
xchg
shl
lock
cmc
xchg
movs
call
pop
call
pop
mov
or
mov
dec
or
mov
lock
jp
jns
xchg
push
jae
sbb
xchg
jae
and
dec
pop
gs
leave
or
sar
dec
mov
adc
popf
scas
sbb
call
in
and
ins
ret
xchg
pop
not
cmova
push
js
div
das
or
loope
and
sar
sahf
jns
sbb
in
xlat
fiadd
outs
mov
outs
inc
push
push
push
stc
idiv
aam
mov
(bad)
jg
mov
inc
push
push
(bad)
mov
xor
cmc
and
pop
xor
xchg
dec
xchg
(bad)
out
or
dec
ins
mov
and
(bad)
imul
std
mov
retf
mov
loop
jo
retf
ja
xor
imul
or
or
inc
out
jo
lock
and
mov
imul
cmc
arpl
sahf
jb
pop
popf
pop
inc
pusha
jp
and
(bad)
fisttp
and
fdivr
ins
inc
aam
jae
repz
adc
jb
pop
cmp
adc
push
in
mov
aaa
xor
(bad)
frstor
imul
mov
xchg
sbb
sbb
arpl
adc
inc
stos
inc
loope
loope
out
sub
test
loopne
mov
ror
fdivr
scas
dec
(bad)
jp
jmp
cli
jmp
outs
pushf
pushf
push
mov
cwde
cmps
push
lods
lea
fiadd
loope
cmp
mov
push
pop
jg
mov
pushf
pop
(bad)
cmp
sub
mov
pop
sub
dec
cmps
xchg
test
jg
fbld
xchg
call
stc
leave
pusha
imul
fdiv
movs
mov
mov
mov
and
inc
retf
retf
sahf
scas
ret
bound
push
sbb
mov
addr16
mov
sub
lods
sbb
cmp
push
aad
dec
bound
shl
adc
mov
cmp
loope
ficomp
cmp
scas
nop
sub
xor
and
mov
mov
pusha
out
icebp
pop
and
pop
retf
mov
adc
xor
pop
ret
mov
jns
popf
shl
out
fsub
retf
mov
imul
xchg
retf
rcl
mov
cmps
mov
xchg
je
mov
movs
es
ss
xchg
xchg
sub
push
inc
xor
in
mov
jmp
jg
ret
xor
pop
imul
outs
jecxz
xchg
jmp
loope
sbb
and
cmp
inc
in
fisttp
jo
mov
pop
cmp
mov
aaa
push
push
cld
add
daa
cmp
sbb
in
mov
inc
xor
mov
(bad)
clc
mov
cmp
aam
(bad)
adc
mov
push
mov
neg
jbe
mov
pop
icebp
movs
cwde
and
(bad)
test
adc
push
jo
ins
mov
push
repz
ss
add
push
sub
push
inc
push
and
mov
aam
xrelease
push
ret
sbb
(bad)
push
mov
mov
mov
stos
xor
jecxz
xlat
mov
fisub
or
mov
inc
push
jae
in
cmps
imul
cli
adc
aam
inc
js
pop
pop
cdq
or
mov
pop
dec
mov
jo
add
sbb
loope
fiadd
cmp
inc
push
mov
out
adc
hlt
(bad)
in
dec
sub
xor
pop
or
cmc
and
xlat
xchg
lods
dec
sub
ja
repnz
mov
arpl
int3
leave
jno
es
je
les
pushw
sub
sahf
add
shl
shr
pop
adc
cmps
pop
mov
mov
loope
jae
cli
mov
cmp
int3
xchg
data16
mov
stos
sbb
adc
les
(bad)
pop
inc
sub
jmp
push
inc
out
pop
fisttp
movs
mov
jo
fist
sub
scas
jo
(bad)
aad
sbb
mov
jbe
ins
imul
jmp
cwde
mov
sub
mov
movs
aaa
(bad)
iret
xchg
pop
inc
push
sub
adc
test
cwde
daa
cmp
xor
xor
adc
xor
sub
mov
inc
movs
sbb
je
test
mov
nop
add
pop
pop
dec
or
test
xchg
aas
add
ret
cmp
inc
cmps
mov
add
mov
xchg
lahf
fcomip
pop
es
pop
into
push
push
adc
pushf
sub
cmps
mov
es
and
rcr
gs
inc
jno
jo
sbb
sbb
inc
push
dec
xchg
mov
push
cmp
ja
int3
mov
lods
jecxz
je
rcl
xchg
ficomp
sub
dec
push
add
(bad)
(bad)
rcl
mov
in
imul
icebp
fs
mov
retf
imul
mov
adc
ins
add
in
mov
lods
mov
ficomp
jg
inc
mov
or
mov
xchg
and
aaa
leave
nop
mov
nop
or
out
mov
add
push
or
cmps
mov
call
(bad)
int
jp
fldenv
ret
popf
push
ss
scas
jnp
xchg
dec
dec
mov
or
jne
std
push
push
rcr
not
mov
mov
out
adc
mov
sub
xor
jp
add
dec
call
mov
mov
not
repz
mov
mov
cld
jg
mov
mov
imul
jmp
dec
adc
or
daa
push
rcr
add
xchg
(bad)
in
iret
repz
inc
test
add
inc
cdq
jmp
lea
rcl
sub
mul
mov
mov
ja
sbb
test
loope
add
daa
(bad)
in
mov
xor
imul
sar
shl
inc
repnz
test
and
movs
lds
jecxz
sbb
pushf
retf
ficom
sub
sti
push
dec
(bad)
mov
imul
je
cmp
(bad)
in
jl
vmovapd
push
retf
mov
jmp
jnp
sbb
sub
add
pop
(bad)
(bad)
mov
push
retf
xor
dec
into
jmp
and
(bad)
(bad)
sti
dec
pusha
cmp
mov
dec
jg
jne
push
xor
adc
cdq
arpl
mov
add
xchg
pop
daa
cmp
stos
jae
repnz
mov
or
mov
push
jno
pop
fisttp
sub
adc
cmp
sub
adc
adc
sub
paddw
adc
and
ret
jb
xor
xchg
rcl
mov
nop
mov
loopne
stc
test
push
cmps
pop
adc
out
sub
in
sub
cmps
popf
nop
sti
cmp
pop
mov
inc
dec
push
stos
(bad)
adc
dec
sbb
push
push
or
(bad)
pop
adc
retf
paddsw
in
push
repnz
mov
(bad)
adc
xchg
and
pop
xor
in
stos
sub
xor
xchg
(bad)
fstp
call
sbb
push
pop
push
push
into
xchg
fs
xchg
jns
into
fcomp
pusha
mov
mov
hlt
push
(bad)
mov
pop
pop
iret
sahf
lods
ins
cwde
xchg
push
clc
mov
fsubr
push
sbb
push
out
fisub
idiv
cwde
call
push
pop
cmp
mov
mov
shr
nop
shr
cmp
sahf
pop
clc
mov
xchg
inc
int3
in
sahf
lods
cmp
cmc
ror
push
stos
fistp
daa
jecxz
cmps
in
std
mov
aaa
aas
dec
aam
cmc
enter
mov
test
cmp
xchg
push
bsf
xchg
stos
and
out
or
cs
cdq
xchg
pop
daa
scas
cli
or
jbe
pop
mov
addr16
add
push
cmps
xor
or
test
cs
iret
mov
(bad)
lds
adc
test
jg
or
aam
pop
fyl2xp1
test
sub
cmp
mov
cmps
test
inc
inc
outs
retf
xor
sub
cmc
fistp
dec
and
in
mov
(bad)
(bad)
push
and
leave
or
inc
and
adc
ss
xor
cmp
cmp
aas
das
repnz
and
das
adc
iret
jnp
ret
inc
cmovge
mov
(bad)
repz
inc
xchg
mov
test
sub
push
xchg
int
jp
fs
cmp
aad
sbb
mov
bound
adc
sbb
out
stos
mov
mov
jg
fwait
leave
dec
sub
cmp
and
mov
stos
cmp
mov
mov
push
imul
aad
cmp
xchg
sub
jne
sub
pushf
jecxz
pop
clc
pop
test
(bad)
xchg
stc
inc
jne
scas
cmp
rcl
dec
dec
dec
test
mov
sub
jne
test
adc
inc
test
xchg
push
jge
push
or
jp
cli
mov
gs
sbb
push
call
dec
cli
or
das
cmc
mov
mov
int3
rcl
mov
sub
jb
mov
xchg
pop
(bad)
cli
into
sub
addr16
ftst
call
out
sbb
sbb
inc
pop
ja
loop
fwait
pop
movs
mov
jmp
outs
jns
xchg
ja
(bad)
ror
xchg
push
jle
sbb
rol
push
and
out
mov
add
mov
es
mov
lods
or
sub
pop
loop
ja
inc
mov
mov
adc
sar
movmskps
into
xor
call
mov
(bad)
gs
imul
in
sbb
out
sub
cmp
fcomi
pop
adc
popa
(bad)
loopne
(bad)
mul
movs
jle
lods
jb
(bad)
(bad)
pop
jbe
ss
inc
sub
lock
mov
(bad)
imul
mov
data16
ror
test
popa
mov
and
adc
ja
pop
push
mov
out
in
jae
cdq
mov
pop
mov
xor
ins
inc
push
jge
popa
xor
lods
push
xor
mov
sub
sub
sub
test
call
inc
inc
inc
hlt
sub
mov
ss
mov
mov
lods
movs
lock
jne
mov
cli
dec
mov
adc
cmp
cmp
rcl
jmp
fadd
arpl
inc
or
push
push
jmp
pushf
xchg
das
jo
aam
lahf
(bad)
or
out
push
pop
(bad)
lods
jbe
cmp
(bad)
in
icebp
or
add
ret
xchg
in
sub
mov
inc
xlat
out
hlt
dec
enter
inc
mov
icebp
jecxz
popf
data16
inc
adc
fistp
es
int
ins
outs
call
leave
fmul
test
add
in
pop
(bad)
lock
