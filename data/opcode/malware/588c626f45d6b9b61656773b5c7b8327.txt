pusha
fiadd
add
add
add
add
add
add
add
add
add
add
mov
add
(bad)
scas
add
sbb
add
pop
add
add
add
adc
sbb
add
or
add
outs
push
add
or
add
or
outs
adc
add
imul
push
mov
adc
add
fimul
or
or
add
or
push
sub
add
or
add
or
jb
add
jo
sub
push
add
or
sub
add
add
add
add
adc
or
add
add
xor
add
add
adc
add
add
sub
add
or
add
or
add
jo
sbb
add
or
sbb
sub
add
or
pop
jb
add
jo
add
add
or
outs
sbb
add
adc
lea
add
add
add
or
fimul
pop
sub
pop
outs
adc
add
(bad)
or
sub
push
outs
adc
add
(bad)
dec
or
add
adc
add
or
add
or
add
or
and
add
mov
outs
and
add
mov
and
add
mov
outs
and
add
mov
add
or
and
add
fiadd
sub
add
sub
add
add
add
inc
add
add
add
add
sbb
ss
add
pop
pop
add
add
add
add
add
scas
add
push
dec
add
add
add
add
or
jg
popa
enter
add
add
add
push
gs
gs
gs
or
and
add
add
add
sbb
bound
das
mov
adc
das
mov
adc
das
mov
jge
pushf
adc
idiv
int3
out
mov
rcr
retf
(bad)
(bad)
fs
sbb
out
add
sub
mov
jns
cmp
jmp
into
or
and
push
inc
dec
adc
add
mov
mov
sahf
popa
mov
mov
aad
cmc
fisubr
in
inc
mov
or
mov
not
mov
mov
mov
fninit
iret
sbb
xchg
icebp
out
jb
test
sbb
mov
and
jecxz
mov
cmp
int3
mov
xchg
xchg
adc
outs
or
mov
out
outs
ja
shr
neg
pop
sbb
lea
iret
fadd
dec
enter
jae
mov
hlt
dec
cs
lods
inc
mov
xor
in
xchg
add
fmulp
or
(bad)
test
test
sub
fsubr
pop
xchg
dec
movs
fistp
pop
jmp
loop
outs
xchg
dec
mov
pop
sbb
retf
inc
mov
addr16
xor
jae
adc
dec
aaa
and
cdq
ja
cmps
rcr
jecxz
sub
(bad)
iret
push
push
fimul
dec
in
xchg
sbb
hlt
fild
push
sub
push
retf
jmp
mov
das
pop
call
mov
loope
push
test
loop
dec
and
mul
or
push
pop
ret
push
mov
push
fnstsw
test
hlt
fs
inc
xor
imul
stos
push
arpl
shr
mov
pop
pop
dec
jl
cmp
sahf
das
mov
call
and
xchg
jle
mov
cs
nop
jle
inc
popf
hlt
dec
mov
in
adc
mov
or
push
mov
jl
sub
xchg
aaa
adc
mov
push
push
sbb
mov
pop
pop
rcl
pop
das
mov
jmp
je
mov
add
mov
mov
push
mov
cmp
call
(bad)
mov
scas
pop
scas
mov
pushf
and
js
adc
sti
xor
dec
stc
dec
shl
mov
pushf
pop
xchg
das
mov
cmp
repnz
in
mov
or
xor
int
lods
sub
aad
mov
mov
cmp
push
ficomp
mov
jmp
cmp
ffree
xchg
scas
jmp
into
xchg
inc
mov
push
pop
in
gs
sar
cmp
mov
pop
sub
xor
hlt
in
dec
cli
xchg
test
cmps
cwde
fdiv
jns
sub
jns
xor
push
(bad)
das
cmps
and
jae
xchg
cmps
cwde
cmp
push
scas
jb
xor
push
cmp
fwait
pop
inc
stos
push
xor
mov
loope
fstp
imul
xchg
xchg
(bad)
sbb
xor
cld
in
mov
adc
ds
dec
int
ror
adc
push
stos
adc
xchg
pop
adc
pop
dec
dec
cmp
fldcw
outs
ss
lods
mov
push
push
sub
push
aad
xchg
xchg
rol
cs
mov
rcr
dec
or
jae
jle
inc
shr
rcl
cmp
and
pop
stos
test
test
retf
(bad)
sbb
push
dec
aam
jae
rcr
dec
fs
dec
xchg
and
push
mov
mov
push
push
push
bound
stos
xor
clc
or
mov
cmp
pop
pop
inc
lea
dec
add
xchg
imul
cli
xchg
and
(bad)
adc
les
sub
sar
daa
inc
test
jne
sar
mov
xor
pusha
xor
into
dec
dec
dec
xchg
push
out
cmp
mov
or
dec
shl
sub
add
test
mov
sbb
movs
test
push
lds
icebp
mov
std
test
push
mov
pushf
in
push
sbb
sbb
ins
inc
retf
push
fistp
push
std
add
je
xchg
cmp
imul
mov
xchg
jb
mov
sbb
sub
mov
clc
push
test
push
mov
cmp
mov
sti
jnp
mov
stos
aas
cdq
sahf
push
xchg
mov
int
pop
loope
add
push
hlt
rcr
dec
jecxz
loope
arpl
ja
jne
lock
int3
std
and
cwde
pop
sbb
fcomp
jg
test
sbb
cld
push
and
dec
adc
sub
and
dec
retf
xor
mov
fmulp
stos
mov
lods
loop
sbb
jmp
xchg
jg
test
rcl
repnz
inc
lea
push
popa
call
jle
and
imul
lds
jno
jns
bound
pop
and
out
jb
inc
jle
mov
or
(bad)
mov
add
(bad)
jecxz
and
xor
inc
xchg
mov
push
jg
add
popa
out
xlat
pop
sbb
jmp
adc
mov
adc
mov
dec
adc
fsubr
shl
jno
cmp
dec
mov
cwde
mov
xchg
inc
mov
mov
sbb
ds
stc
cmp
inc
call
sub
mov
pop
sbb
in
mov
movs
in
push
mov
push
nop
push
mov
das
adc
ror
push
and
inc
push
cmp
jmp
mov
jnp
mov
xor
and
cmp
mov
push
jle
pusha
cmps
cmp
call
cs
or
rol
rcl
dec
jns
push
outs
scas
xchg
pop
imul
sbb
pop
push
scas
push
test
ins
sub
ja
pop
cmps
xchg
lahf
cwde
stc
add
pop
das
or
adc
pop
pop
sbb
(bad)
or
test
mov
outs
jae
add
push
stos
pop
pusha
(bad)
push
lods
rcl
sub
call
fstp
lahf
dec
mov
sbb
or
cmps
jns
mov
stc
stc
jne
dec
pop
xchg
nop
outs
adc
out
fimul
mov
push
in
repz
adc
ds
cld
add
mov
ret
mov
ja
fild
xor
jecxz
jb
ret
repz
xchg
dec
fbld
and
loope
inc
sub
sbb
cmps
ds
mov
in
inc
inc
dec
pop
fisub
int
sahf
mov
push
in
(bad)
and
outs
ss
fisubr
call
inc
inc
cmp
mov
sub
fistp
pop
cmp
jp
aaa
movs
test
dec
push
das
push
popa
cmp
bound
or
xchg
add
adc
imul
push
lods
retf
pop
cmp
iret
stos
das
outs
div
std
dec
jae
mov
in
ss
sbb
iret
in
aad
sbb
sahf
jb
(bad)
stc
mov
jecxz
sahf
lea
mov
jb
dec
jle
push
cli
scas
mov
ds
jnp
loopne
int3
sbb
adc
push
xor
sub
das
icebp
cli
outs
out
rcr
xchg
add
mov
cli
addr16
dec
mov
jle
mov
dec
sub
lods
test
jp
pop
and
xor
lds
mov
mov
test
cmp
or
imul
daa
jp
int
push
repnz
in
stc
dec
add
lahf
ror
push
pusha
or
shl
(bad)
dec
jle
out
in
push
cmps
pop
loopne
hlt
popa
dec
mov
add
outs
fwait
cmp
inc
(bad)
fsubr
pop
adc
add
std
lods
std
sbb
je
mov
inc
dec
shl
not
ret
xchg
mov
pop
sbb
push
(bad)
cld
push
std
or
popf
stos
mov
and
lea
ins
mov
xor
(bad)
cmp
out
std
inc
in
movs
xchg
xor
and
push
ret
(bad)
bound
enter
pop
fs
adc
imul
mov
enter
push
lds
jns
(bad)
mov
adc
cdq
shl
pop
xchg
(bad)
mov
rcl
repz
shl
xlat
mov
adc
(bad)
dec
inc
clc
mov
loop
dec
inc
in
js
or
sbb
aad
js
dec
leave
repnz
sbb
mov
loope
cmp
shr
mov
or
sub
lahf
retf
dec
ret
sbb
dec
pushf
daa
push
or
repz
dec
sbb
push
push
(bad)
xlat
pop
(bad)
xlat
sbb
mov
mov
or
in
fwait
cmc
fwait
mov
lods
call
mov
pusha
inc
outs
movs
sbb
xchg
(bad)
add
sbb
pop
mov
mov
sti
and
and
jb
push
lods
jns
mov
jge
mov
mov
stc
pop
mov
xor
inc
repnz
dec
xor
xchg
push
sbb
xchg
jb
push
push
aaa
out
push
cmp
xchg
xlat
adc
sbb
mov
(bad)
cdq
jle
xchg
xchg
stos
mov
sti
retf
aas
stos
xchg
pop
mov
stc
pop
jp
mov
inc
jb
inc
mov
and
out
lods
icebp
adc
adc
in
ins
and
dec
or
xor
or
and
sub
dec
cmps
push
ror
(bad)
inc
jnp
mov
repnz
mov
mov
shl
movs
jbe
mov
mov
inc
ret
mov
int3
xor
cmc
test
loop
inc
gs
cmps
xor
movs
cmps
inc
popa
shl
jmp
jle
pop
or
mov
fcom
jae
xchg
jmp
leave
ret
cmps
push
xor
mov
xchg
fldcw
push
(bad)
lods
dec
rcr
(bad)
jp
out
(bad)
fbld
jbe
jmp
sti
retf
push
lods
jbe
push
sub
test
sbb
sbb
shr
hlt
ret
inc
mov
dec
cmps
mov
test
call
or
xlat
ds
stos
fstp
(bad)
movs
cwde
icebp
jg
(bad)
ins
jmp
ja
movs
pop
(bad)
rcr
iret
lods
mov
lds
arpl
mov
pop
int3
jge
sbb
call
mov
cli
sub
loopne
add
dec
stos
mov
sar
push
cmps
pop
movs
ds
cmp
shr
or
into
repz
adc
mov
jp
sbb
adc
mov
add
mov
add
jle
xchg
(bad)
adc
jne
fiadd
jmp
jne
movs
pop
pop
mov
retf
pop
arpl
adc
sub
push
mov
push
fs
int
test
push
rcr
movs
imul
xchg
cmps
icebp
repz
jmp
clc
dec
leave
(bad)
or
in
(bad)
iret
cld
movs
les
cwde
nop
out
into
addr16
shl
leave
imul
pop
or
(bad)
sti
mov
sti
mov
add
mov
jbe
mov
mov
ja
data16
jge
stc
stc
retf
sub
fistp
aaa
repz
retf
jmp
out
mov
into
nop
rol
ja
data16
in
out
inc
sar
test
movs
mov
loopne
arpl
dec
cmp
imul
hlt
imul
ja
rol
shr
(bad)
scas
jmp
arpl
popf
fild
call
jns
mov
sbb
push
ja
pop
xchg
call
mov
(bad)
push
mov
dec
ja
add
mov
enter
mov
retf
jg
popf
sbb
dec
xchg
aam
in
sbb
xchg
inc
mov
mov
in
mov
jno
repz
iret
sub
mov
adc
jg
xchg
retf
test
adc
sub
fmul
lahf
pop
mov
loopne
xchg
jl
push
retf
pop
addr16
ds
sub
popa
test
cs
adc
outs
or
adc
xchg
test
repnz
inc
and
in
xor
jno
icebp
or
xor
mov
mov
adc
popa
mov
arpl
repz
test
mov
(bad)
test
add
sub
cmp
mov
push
(bad)
rol
stos
test
es
or
jbe
push
xchg
js
inc
scas
push
xchg
test
dec
add
and
arpl
out
aam
fstp
fstp
or
mov
je
fbstp
je
adc
sub
les
out
dec
stc
sub
push
add
pop
scas
and
lahf
into
add
outs
dec
jmp
lods
lods
test
push
sub
xor
ins
sbb
jge
adc
mov
mov
cdq
cmp
mov
stos
js
pop
nop
mov
xchg
jae
sub
lods
popa
lock
dec
pop
dec
pushf
and
rcl
sub
imul
jge
jno
push
mov
in
add
adc
mov
mov
cmp
or
mov
and
scas
pushf
jp
xor
(bad)
push
jp
lahf
out
push
sub
xchg
idiv
cmp
and
mov
ss
pop
fwait
mov
daa
jnp
test
xchg
stos
cmc
cmp
dec
iret
push
pop
ins
pop
pop
test
mov
ins
fs
cmp
iret
lock
and
leave
and
xchg
fist
fidivr
retf
fistp
adc
adc
clc
les
push
or
mov
addr16
call
cmp
retf
sahf
sbb
xchg
push
inc
cmp
or
push
mov
scas
adc
dec
or
popf
loopne
sub
inc
dec
dec
push
jbe
push
fcmovu
rcl
sbb
daa
gs
imul
or
and
bound
dec
xor
sbb
adc
inc
jle
fisttp
in
call
outs
jge
push
mov
mov
mov
mov
das
jmp
imul
(bad)
std
dec
jg
or
xchg
jl
inc
jmp
(bad)
and
ror
xor
lahf
leave
jo
stc
dec
in
retf
enter
sbb
mov
pop
retf
jmp
test
jae
pop
ret
into
mov
ror
(bad)
cld
jmp
loop
mov
dec
mov
jae
xor
popa
cmps
jno
xchg
dec
out
ror
cmp
fsub
sub
push
(bad)
mov
out
inc
inc
lea
test
(bad)
shl
enter
ss
ror
test
push
stc
and
data16
lea
or
adc
inc
cmp
jmp
inc
addr16
push
pop
sbb
push
shr
out
jbe
xor
in
icebp
shl
ror
push
sub
push
sub
jg
leave
pop
push
mov
xor
in
fdiv
pop
scas
into
xor
cdq
pop
hlt
lahf
mov
test
hlt
hlt
mov
sub
std
xchg
xor
clc
add
cmp
push
repz
push
inc
inc
cdq
sbb
fdivr
in
in
ss
sub
xchg
ja
mov
push
hlt
pop
jecxz
push
xor
stos
movs
adc
add
fdivr
popf
jb
movs
or
ss
rcl
rol
mov
(bad)
stc
or
outs
mov
test
push
sbb
sub
movs
rcr
hlt
icebp
push
stos
adc
mov
mov
(bad)
jnp
rol
psubsb
cmps
and
push
repz
cdq
add
dec
popf
jns
mov
jmp
dec
cmps
inc
iret
xchg
jl
sub
repnz
and
mov
in
dec
dec
leave
xchg
ret
rcr
xchg
cmps
xchg
mov
sub
xor
fmul
lds
pop
and
pop
or
add
ficomp
or
rcr
dec
pop
pop
mov
rcr
test
es
cmp
sub
out
loope
aad
push
jmp
jae
push
jbe
mov
bound
out
and
or
push
mov
dec
repz
rol
mov
push
das
les
cmp
test
fnstsw
xchg
scas
lods
jg
aas
pop
dec
cli
aaa
inc
icebp
push
sahf
mov
ffreep
(bad)
mov
xchg
pop
ror
adc
out
fcom
push
lods
cli
pop
or
mov
lock
dec
push
pop
shl
push
fadd
pop
imul
into
(bad)
(bad)
and
rcr
ins
mov
int
outs
and
add
ror
jge
and
call
(bad)
outs
fild
cld
sar
lahf
dec
mov
in
and
or
in
sbb
xor
ret
outs
pop
mov
(bad)
mov
jno
add
push
xchg
out
push
fwait
je
mov
mov
idiv
jae
sbb
pop
imul
push
(bad)
(bad)
cmp
jns
cmp
daa
out
cmps
sti
inc
or
inc
sub
in
bound
mov
ror
push
push
test
inc
out
dec
ror
test
pop
cmp
push
cs
sahf
ret
in
leave
fimul
jl
sub
test
pop
add
mov
pop
sar
adc
mov
inc
fisttp
lahf
lods
dec
bound
lock
xchg
cmp
mov
pop
loop
mov
pop
loope
add
push
mov
sbb
jmp
ss
inc
inc
dec
sub
xchg
sbb
test
out
test
jge
les
pushf
popf
and
pop
mov
jecxz
jbe
test
mov
shl
stc
push
jae
inc
pushf
dec
pop
pop
pusha
les
pop
mov
loop
xchg
sti
pop
push
fs
aam
data16
mov
std
outs
mov
and
or
inc
lods
cmp
mov
inc
test
push
cmp
enter
inc
xchg
and
cmps
adc
aad
mov
fst
lea
pop
pop
pop
stos
xchg
aaa
xor
arpl
hlt
ja
rcr
sahf
ins
out
jns
into
in
jae
sub
xor
mov
out
enter
jmp
inc
or
sahf
push
or
dec
jne
cmp
out
out
mov
xchg
push
popf
adc
sbb
shl
cld
mov
mov
bound
scas
(bad)
fiadd
mov
imul
and
sub
in
test
push
mov
mov
and
sub
or
xchg
sub
das
ja
bound
adc
mov
push
add
add
loope
je
cmps
movs
ins
push
mov
jbe
cmps
test
shl
jnp
jl
fld
(bad)
dec
push
pop
cli
ss
das
pop
inc
mov
cmp
fucomip
pop
sbb
fcmovnb
cs
and
push
pop
sub
stos
aaa
mov
xlat
add
pop
mov
jmp
mov
stos
xchg
call
retf
push
fld
mov
mov
leave
push
inc
sub
cmps
push
fmul
dec
enter
mov
xchg
data16
xor
push
nop
mov
dec
leave
pop
je
sub
sub
enter
clc
mov
xchg
(bad)
retf
aad
les
jno
fld
adc
div
out
movs
jnp
mov
or
adc
cmp
xchg
fcmovnb
mov
inc
js
and
mov
mov
pushf
cwde
ss
in
pop
pop
leave
dec
push
push
xor
mov
icebp
mov
and
cmp
data16
ja
add
dec
mov
ret
lds
xor
movs
or
push
hlt
das
cmc
popf
add
gs
inc
out
sti
loope
aam
sub
sub
in
ds
mov
lods
pushf
sbb
xchg
inc
and
ret
dec
ins
hlt
movs
xor
or
push
ss
and
fdivr
adc
lds
pop
pause
repz
sar
cmp
dec
in
addr16
popa
or
mov
clc
and
mov
mov
xchg
mov
pop
sub
retf
xchg
out
(bad)
hlt
data16
sub
pushf
aas
ret
leave
repz
push
jae
jo
fwait
dec
mov
stos
mov
xchg
(bad)
dec
imul
jns
std
add
out
lock
pusha
push
push
out
mov
sub
pop
pop
scas
cli
and
out
push
cmp
xchg
sub
pop
rcr
mov
or
add
in
mov
jle
daa
mov
jnp
ret
add
push
call
test
inc
mov
imul
jne
fimul
dec
cmps
sub
sub
xchg
push
adc
int
xchg
sub
fadd
xchg
add
mov
repnz
dec
inc
imul
sar
rcl
dec
mov
fbld
xor
mov
int3
pop
inc
(bad)
nop
outs
mov
xor
das
mov
repnz
or
out
jae
(bad)
stos
scas
shl
cs
repnz
mov
mov
jae
dec
jle
xchg
lahf
(bad)
in
dec
stc
popa
movs
movs
call
test
push
outs
xchg
inc
lock
cmp
push
xchg
mov
popa
repz
dec
mov
and
(bad)
fsub
mov
sub
inc
retf
mov
mov
xchg
rcl
and
xchg
mov
loopne
or
cmp
mov
aaa
xlat
call
xchg
fwait
push
mov
jae
inc
adc
jbe
lods
loope
sbb
vmovaps
iret
push
shl
xor
fisub
lds
in
les
xchg
pop
inc
cwde
mov
stos
or
xor
rol
mov
repz
xchg
push
push
and
pushf
push
retf
add
push
aas
add
(bad)
int3
mov
mov
and
pop
rcr
jbe
push
(bad)
push
adc
sahf
test
xor
or
add
call
mov
mov
(bad)
push
xchg
lods
jns
outs
mov
sti
imul
movs
pop
xchg
sbb
adc
inc
into
pop
inc
fild
loop
ffree
push
push
jge
scas
call
pushf
xchg
xchg
repz
repnz
sub
repz
or
jl
push
or
pop
cmc
add
jl
xor
ins
adc
sahf
sbb
xlat
pop
lds
jp
add
cmps
fldcw
pushf
mov
add
mov
and
fdivr
add
mov
jne
loop
mov
fwait
sub
call
cmovo
sub
stos
fdiv
mov
dec
fwait
or
imul
movs
add
int3
sub
cmp
push
out
outs
retf
int3
xchg
stos
fmul
sbb
pop
retf
cwde
aas
dec
add
mov
xlat
sar
push
jo
lds
xor
and
xchg
ds
out
scas
push
shl
xor
add
inc
pushf
or
shl
enter
inc
pop
fdivrp
xchg
mov
push
cs
push
jmp
dec
push
mov
es
inc
sub
js
push
jo
mov
lahf
push
div
mov
cwde
cli
jne
mov
cmp
adc
rol
lods
aaa
inc
sub
adc
and
out
dec
fld
(bad)
fidiv
jb
addr16
imul
lods
jp
sbb
(bad)
popf
sub
push
xor
mov
test
push
sbb
inc
mov
push
push
cmps
fimul
(bad)
out
mov
sbb
fwait
loope
in
adc
shl
jmp
mov
mov
jb
dec
jle
(bad)
(bad)
xor
mov
test
call
hlt
or
inc
test
inc
fdivr
ins
jo
movs
ret
shl
inc
xlat
xchg
ret
and
mov
cmc
ror
and
adc
ja
push
push
lock
(bad)
xchg
loope
les
ds
jbe
xor
fist
pop
int
arpl
jnp
pop
std
adc
pusha
push
outs
push
cwde
loop
pop
stc
and
scas
outs
mov
mov
or
cmps
xchg
jb
repz
neg
add
sub
sbb
test
retf
adc
or
or
scas
add
movs
pop
sbb
and
setg
mov
inc
pop
aas
(bad)
shl
out
ror
sub
dec
ret
inc
shr
dec
push
movs
retf
push
dec
test
jnp
pop
fild
or
imul
sbb
stos
aas
pop
nop
adc
popf
fidiv
pop
pushw
arpl
inc
inc
inc
pop
pop
out
shl
call
fcomp
push
mov
xchg
(bad)
cli
sbb
lock
nop
xchg
test
push
inc
and
sbb
push
outs
jp
lahf
mov
dec
dec
mov
xor
mov
cmp
pop
mov
push
mov
call
lods
(bad)
in
mov
ins
loop
scas
push
push
pop
lods
pusha
mov
or
dec
or
stc
cwde
hlt
and
(bad)
cmp
mov
neg
inc
adc
cmp
js
push
jle
push
in
add
push
push
add
bound
in
adc
scas
and
data16
fsub
bound
add
pushf
xchg
fadd
and
pop
inc
ss
adc
ds
sbb
shl
ss
lahf
out
pushw
jne
jge
dec
retf
fwait
test
jmp
daa
mov
retf
pop
hlt
sub
adc
sbb
jnp
add
add
and
and
push
sbb
bswap
fadd
cwde
sub
(bad)
jbe
pop
xor
add
mov
repnz
xor
sub
lods
jle
dec
fwait
inc
and
sub
imul
push
add
arpl
call
sub
cli
daa
es
mov
dec
sbb
jae
sub
mov
push
jecxz
mov
aad
sub
xor
aam
or
into
add
mov
imul
pusha
out
pop
pop
mov
ret
loop
sub
xor
sahf
push
jmp
pop
sub
js
imul
xchg
cmp
pop
pop
shl
shl
cwde
pop
push
repnz
data16
neg
push
cmove
loopne
push
ror
stos
(bad)
std
mov
retf
dec
mov
inc
mov
test
rol
clc
or
mov
mov
sub
stc
add
ins
shl
shl
mov
ror
push
and
push
push
xor
inc
mov
xchg
pusha
scas
xchg
test
retf
fsub
(bad)
aam
fcom
sub
mov
push
in
out
adc
push
cmp
je
xor
dec
not
push
fistp
mov
es
sub
arpl
push
jecxz
and
and
pminsw
or
and
popa
test
loopne
icebp
or
xchg
addr16
xchg
hlt
mov
mov
inc
sbb
jne
inc
iret
inc
shl
lods
mov
ds
cmp
xchg
push
gs
mov
call
stc
push
xchg
xor
leave
xor
push
shr
adc
lods
add
jmp
loopne
pop
imul
mov
cs
imul
sbb
stos
sub
pop
fist
inc
in
les
xchg
sub
ret
push
and
cmp
dec
cli
hlt
pop
push
into
daa
in
mov
into
push
pop
test
shr
bound
inc
inc
pop
cmc
sti
add
xor
int
pusha
sub
sbb
idiv
mov
lods
lahf
popf
stos
aas
inc
pushf
sbb
data16
idiv
arpl
sbb
int
mov
sbb
sub
pop
ret
rol
push
outs
test
adc
shl
femms
jmp
push
mov
push
adc
in
sub
test
push
cmps
iret
dec
cmp
call
xchg
cmp
inc
jnp
jp
das
ins
(bad)
push
out
mov
or
dec
pop
out
(bad)
icebp
mov
mov
das
pusha
in
pop
xor
sub
sub
mov
adc
push
jne
jg
fisub
pop
repz
(bad)
mov
inc
out
pusha
mov
push
cmps
cld
adc
ficom
cs
outs
(bad)
test
jbe
icebp
mov
fcomi
mov
bound
leave
sub
cmp
shr
cld
icebp
lahf
inc
jns
js
sahf
push
dec
push
sahf
mov
into
dec
push
outs
push
jecxz
sbb
xor
adc
movs
test
and
inc
jne
or
mov
dec
rcl
fcmovu
mov
xor
call
xor
sub
ds
add
loop
push
sub
repz
add
jae
adc
dec
xlat
cmp
pushf
loopne
in
pop
stos
xchg
add
xchg
out
push
fimul
pop
sbb
jle
scas
mov
lods
fsub
sbb
dec
cmp
ins
mov
out
shl
push
ret
jg
pusha
fild
jp
push
cmc
xchg
inc
ret
and
test
bnd
xchg
retf
cmps
sar
outs
xor
mov
pop
adc
ret
push
or
add
jne
add
push
test
dec
xor
gs
pop
sub
cld
in
(bad)
ins
scas
out
je
in
mov
and
pop
mov
jmp
push
imul
(bad)
(bad)
adc
push
mov
stos
sbb
mov
jae
cmps
jmp
jge
out
xor
jg
stos
xchg
cmc
sti
jg
sub
push
sub
adc
mov
jmp
mov
sub
or
ins
cwde
add
jmp
mov
push
dec
movs
out
push
push
jno
adc
and
xchg
adc
sub
jle
cmp
out
jne
adc
sub
fisubr
adc
jg
pop
and
ja
push
stos
or
cmps
xchg
(bad)
jl
mov
shr
stos
cli
xlat
push
cld
pop
sub
dec
xor
dec
push
std
test
push
(bad)
aas
mov
je
mov
sub
cmp
hlt
nop
cs
retf
sub
ins
cmp
cmp
mov
jae
rcr
outs
pop
jp
test
inc
inc
push
jnp
and
push
clc
sar
sbb
sbb
add
(bad)
push
pop
push
xor
cdq
(bad)
adc
inc
test
cld
mov
retf
cmp
out
sub
scas
fdivrp
addr16
and
dec
pop
stos
add
cdq
pop
cmp
lock
ret
(bad)
cmp
in
inc
in
push
repnz
sub
ins
mov
jne
xor
rcl
xchg
sub
xchg
dec
push
es
(bad)
es
sar
stc
rol
loope
fld
cmp
arpl
xlat
out
sub
fnstcw
ins
ins
aam
retf
xor
test
adc
addr16
fnsave
add
sbb
push
add
pop
bound
in
neg
jmp
dec
imul
inc
in
push
xchg
fidiv
jmp
or
bound
xor
push
mov
pop
in
gs
push
inc
sbb
add
add
cli
ins
sub
in
jmp
in
cmps
sub
lods
mov
test
jno
sar
sbb
mov
dec
add
mov
stc
dec
cmp
pop
cld
push
(bad)
call
and
mov
and
and
sub
std
inc
pop
sub
sub
jb
push
adc
dec
enter
rcr
jbe
push
fbld
inc
in
dec
stos
mov
mov
jp
sahf
dec
retf
mov
jns
push
dec
out
stos
inc
leave
adc
pop
add
shl
stc
ret
mov
push
push
mov
and
mov
call
aam
retf
in
movs
pop
sbb
stc
jmp
xor
sar
je
loopne
jmp
jecxz
mov
test
addr16
pop
in
inc
pop
aas
inc
stc
and
sbb
cvtdq2ps
jbe
retf
cmp
or
mov
adc
fadd
or
or
in
mov
adc
pop
mov
arpl
cmc
add
inc
xor
loopne
test
mov
in
mov
jecxz
mov
sub
xor
xor
push
dec
sbb
xor
jmp
jg
cmovbe
cmp
movs
mov
jae
xor
mov
dec
sub
pop
push
test
or
or
fsubp
lds
push
xchg
dec
mov
adc
mov
loope
lds
jle
out
(bad)
in
cmp
push
sbb
outs
pop
xchg
(bad)
push
mov
pop
js
mov
xor
dec
sbb
mov
das
or
shr
div
aad
xor
jb
dec
jle
scas
xchg
xchg
out
lock
cld
nop
es
pushf
scas
inc
std
or
sub
xchg
cmp
add
pop
lds
outs
mov
jae
pushf
shl
xor
daa
mov
inc
or
pop
sahf
mov
outs
movs
ins
mov
jbe
stos
pop
xadd
outs
push
pop
aad
fisub
pop
cmps
jbe
cmp
and
or
inc
fdivr
cmp
outs
jno
int3
out
arpl
xor
test
push
dec
push
pop
and
jno
mov
enter
mov
ret
hlt
cld
or
or
xor
nop
stc
(bad)
imul
add
out
sar
cmp
adc
test
fsub
inc
aad
xor
stos
pushf
std
mov
dec
or
das
and
and
or
pop
xchg
mov
sbb
fs
imul
and
dec
das
jae
xor
or
into
sub
push
cs
push
fimul
(bad)
xor
adc
inc
loopne
outs
push
or
add
ins
fisttp
stc
and
mov
push
xchg
push
stos
aad
lds
jnp
cmps
jmp
push
lock
or
inc
or
ret
xchg
enter
pop
and
add
stos
pop
test
push
in
pop
adc
sub
(bad)
ins
and
ror
fimul
cmps
test
les
jae
sub
push
sti
jns
stc
(bad)
push
in
jae
ja
cmp
xchg
adc
jae
cmp
int3
jns
push
pop
dec
dec
adc
mov
sar
push
jmp
out
je
sar
stc
sbb
xchg
cs
out
xor
xor
imul
dec
fstp
(bad)
aam
mov
jg
adc
outs
aaa
adc
dec
mov
add
inc
mov
jae
fcom
or
data16
int
push
and
mov
out
mov
stc
jbe
cs
xlat
cmps
vmovaps
mov
jno
dec
and
mov
xchg
(bad)
pop
mov
xlat
mov
xchg
xchg
test
(bad)
in
add
jmp
stos
les
in
int
call
jp
or
jae
push
aam
mov
icebp
mov
cdq
lea
arpl
dec
xor
(bad)
das
xchg
mov
mov
scas
pop
jbe
or
or
int
mul
ds
jns
or
adc
inc
xchg
jns
add
es
sub
cmp
sbb
mov
stos
dec
(bad)
sbb
hlt
xor
lea
inc
movs
int3
and
pop
xor
jge
dec
cmp
push
dec
jl
push
mov
ret
je
xor
shl
sub
xor
pop
push
scas
sbb
out
adc
mov
mov
js
xchg
pop
push
lods
xor
inc
cmps
cmp
pop
gs
mov
mov
clc
mov
mov
ins
movs
cmp
jae
xor
(bad)
pop
inc
mov
pop
(bad)
iret
dec
iret
push
movs
mov
add
inc
sub
sahf
rcr
jbe
mov
in
mov
mov
mov
mov
mov
adc
push
call
push
jg
and
mov
out
pushf
ins
sbb
push
arpl
xchg
adc
inc
(bad)
out
out
out
(bad)
ins
int
stos
xchg
js
cmc
lahf
outs
out
pop
and
mov
ss
shl
or
mov
arpl
out
pop
xor
in
inc
and
cmc
stos
fnsave
adc
imul
out
xor
mov
cmps
push
push
or
cmps
push
test
out
pop
cmps
sbb
sbb
sub
loop
inc
test
imul
push
shl
jns
mov
cld
cmp
stos
cld
ror
fcom
dec
pop
je
mov
adc
pop
pop
test
(bad)
je
popa
mov
mov
sahf
jmp
shl
push
scas
or
xchg
daa
sub
cmp
gs
cmp
xchg
pop
pop
shl
add
mov
sahf
addr16
adc
xchg
out
shl
push
sub
movs
mov
pop
adc
mov
jecxz
sbb
xchg
fwait
mov
xchg
(bad)
sbb
fidiv
sahf
addr16
enter
fnstcw
and
sub
jnp
inc
loope
sbb
dec
shl
call
fidiv
div
push
cmp
mov
cmp
dec
mov
sbb
enter
inc
add
push
add
cmp
mov
sahf
imul
retf
mov
fsubr
push
ins
jo
popf
sbb
js
jmp
push
pop
adc
mov
fidivr
push
inc
mov
pop
dec
sub
ficom
or
repnz
call
jo
sub
xchg
dec
cmp
mov
pop
ins
pop
dec
daa
fwait
test
or
lahf
lods
inc
repz
lods
out
in
cmp
mov
and
test
ins
mov
push
ins
(bad)
mov
repz
lds
(bad)
mov
sbb
cmc
xchg
(bad)
cmp
mov
or
sbb
mov
(bad)
rol
aam
mov
jnp
and
aam
test
mov
aaa
add
sar
into
push
rcl
push
pop
pusha
push
fwait
adc
xor
(bad)
sub
hlt
push
jne
mov
cwde
das
cmps
shl
push
sar
inc
test
push
outs
enter
gs
stc
xor
nop
loopne
xor
cdq
les
xchg
inc
adc
push
dec
sbb
jbe
inc
aam
out
push
pop
lock
sbb
or
out
mov
jne
push
in
stc
aas
inc
xlat
jmp
sbb
out
pushf
mov
cmp
aad
stc
jb
xor
test
jae
jne
movs
mov
inc
das
das
int3
loop
xchg
inc
cmp
int
pop
ret
push
jo
xor
adc
stos
scas
inc
cmc
rcr
xor
sub
(bad)
push
jmp
arpl
out
scas
hlt
inc
gs
out
int3
in
aam
mov
ret
out
sub
fidiv
jno
add
xor
loop
add
ret
pusha
and
jmp
mov
ja
ror
or
pushf
inc
imul
pop
xchg
outs
pop
out
fdiv
cmp
xchg
out
pop
push
xor
push
push
test
or
or
fnstcw
out
push
mov
(bad)
pop
jmp
or
(bad)
dec
out
push
bound
aam
test
into
jno
pop
cmp
shl
stos
out
outs
or
out
shr
(bad)
jnp
pop
push
add
xor
nop
(bad)
push
icebp
mov
mov
(bad)
cmps
imul
jb
xchg
mov
xchg
into
push
(bad)
into
push
push
push
rol
(bad)
pop
dec
out
das
cmps
sti
jmp
dec
ror
repz
sbb
hlt
push
ins
xchg
jne
fisttp
iret
push
or
les
dec
cmp
xor
pop
arpl
lods
sub
pop
cwde
fld
out
mov
popf
mov
rol
xor
and
test
(bad)
mov
jp
push
pop
jle
enter
inc
aam
mov
push
push
movs
cmp
das
sub
or
xor
push
gs
sahf
(bad)
sub
mov
adc
outs
sub
sub
sub
dec
imul
add
adc
inc
shl
or
push
jmp
enter
call
adc
fisttp
mov
add
and
and
jno
clc
movs
std
sub
rol
sbb
cs
sbb
inc
pop
pop
adc
push
dec
jo
xor
retf
push
ret
into
in
js
dec
and
add
sub
ins
aaa
mov
loop
mov
test
xor
xor
mov
xchg
daa
and
jbe
dec
daa
xor
es
add
scas
fisttp
or
mov
lods
popa
cs
idiv
jns
std
push
push
mov
cmp
popa
xchg
shl
fimul
out
xlat
fucomp
sub
test
fistp
repz
mov
xchg
movs
fcmove
sbb
mov
std
inc
fld
(bad)
adc
or
jp
jmp
sbb
fiadd
ins
stos
(bad)
inc
cld
mov
cmp
jg
std
inc
adc
mov
push
mov
inc
sti
mov
icebp
icebp
popf
cdq
pop
push
sub
or
sbb
jo
mov
mov
jbe
cmps
jmp
sbb
and
adc
sbb
inc
inc
jmp
sbb
and
cmp
adc
mov
out
pusha
rcl
fmul
or
sub
add
mov
out
adc
inc
sub
test
xlat
sbb
repz
or
jb
cmp
dec
pop
loop
mov
pop
aas
rol
ins
pop
fisttp
or
retf
out
mov
imul
aam
lods
sbb
add
sahf
inc
xlat
jns
pop
or
and
test
cmc
mov
sub
aam
into
ins
std
(bad)
test
mov
inc
jle
retf
test
ficomp
das
mov
das
xor
jp
call
dec
pop
mov
shr
xchg
not
add
scas
xor
add
xchg
mov
sub
lahf
fsubp
jae
mov
pop
or
xor
push
mov
mov
push
jl
mov
outs
xchg
push
dec
arpl
cmp
mov
push
cmp
xchg
mov
add
adc
lods
dec
push
inc
cwde
adc
xchg
jae
cmp
push
repnz
push
pop
mov
mov
pop
push
aad
mov
pop
outs
div
loopne
pop
out
(bad)
pop
jmp
jle
rcr
adc
push
fimul
es
add
popa
push
mov
push
dec
gs
xor
(bad)
clc
sbb
cmc
dec
sub
xchg
in
pop
jmp
xlat
dec
repz
dec
dec
dec
ror
fdivr
push
pop
inc
sbb
xchg
and
lds
add
cmps
push
pop
movs
xchg
and
and
rcr
push
sti
scas
lock
pop
add
(bad)
mov
fisubr
call
ret
out
(bad)
dec
adc
sahf
lea
sub
xchg
retf
mov
or
test
and
not
(bad)
setbe
and
lock
pushf
arpl
fsubr
lea
add
mov
fiadd
mov
xchg
inc
sbb
push
mov
or
adc
dec
dec
jae
iret
xchg
cld
xchg
fisubr
xchg
and
xor
xchg
dec
push
popa
mov
jnp
mov
cmp
or
cli
or
fldcw
sub
test
xchg
dec
mov
mov
xchg
jno
div
scas
jnp
das
cmps
mov
mov
pop
xor
lahf
call
pusha
loopne
mov
pop
jbe
push
and
loop
xchg
nop
xor
and
enter
adc
push
mov
imul
lock
add
jbe
jmp
inc
jns
cmp
or
push
ss
push
sub
and
not
sbb
or
ins
adc
js
test
icebp
inc
push
sub
repnz
ss
in
add
and
inc
or
out
push
mov
xor
xchg
pop
or
jbe
jmp
push
mov
pop
mov
out
retf
sbb
aaa
mov
stos
adc
pop
sub
jae
data16
jae
sub
in
adc
arpl
arpl
pop
cdq
dec
push
(bad)
cmp
sub
cdq
and
aam
inc
push
test
sub
push
xor
loopne
cwde
cmps
push
jecxz
sbb
and
cmp
jge
(bad)
mov
out
sbb
inc
inc
(bad)
call
dec
mov
fsubrp
lahf
xchg
sbb
xchg
and
hlt
xor
shr
or
mov
mov
adc
in
sbb
bound
mov
out
popa
sbb
hlt
dec
jbe
pop
in
mov
(bad)
push
cmps
jmp
mov
sub
mov
inc
ja
sub
bound
(bad)
xor
int3
adc
pop
retw
loopne
in
jp
nop
in
out
xor
cmp
in
cmp
pop
loope
push
or
in
cmp
push
mov
es
push
pushf
pusha
dec
enter
rcl
mov
jp
fisubr
sti
cmp
outs
int
jecxz
(bad)
mov
sbb
cmovbe
mov
mov
aas
das
test
pop
push
add
push
sub
mov
outs
mov
inc
in
imul
xchg
jbe
icebp
dec
int
out
dec
pop
or
outs
mov
arpl
jle
ds
sbb
(bad)
sahf
stos
(bad)
out
jmp
and
push
xchg
(bad)
shl
sbb
mov
clc
pop
dec
mov
call
iret
xchg
push
cld
ret
push
sbb
mov
xor
pop
call
mov
pop
xchg
xor
cmp
in
mov
(bad)
(bad)
adc
add
cli
imul
sub
cmp
iret
and
hlt
fadd
or
std
rcr
pop
pop
lods
xor
in
les
repz
and
nop
fwait
and
aas
dec
sbb
out
push
ins
mov
inc
in
nop
rol
lea
or
lods
inc
mov
das
pop
dec
jmp
jmp
sbb
mov
mov
(bad)
push
jb
fwait
ins
dec
ss
stc
xchg
mov
cmps
xor
sub
dec
sbb
inc
cmp
add
cmp
inc
adc
or
xchg
sub
cmp
mov
push
mov
outs
pop
mov
pop
fdiv
cmp
dec
(bad)
rcl
mov
xchg
hlt
cmp
imul
fst
repnz
mov
push
dec
dec
cld
push
inc
mov
xchg
mov
test
pop
idiv
mov
dec
arpl
aaa
fldenv
or
lods
xor
enter
push
int
adc
jp
xchg
loopne
repnz
cli
sbb
xchg
jecxz
push
test
adc
out
push
in
int3
and
std
(bad)
addr16
nop
dec
or
into
adc
jo
fild
pop
mov
sub
dec
mov
inc
aad
jae
imul
jmp
cmp
xchg
push
fdivr
mov
mov
mov
inc
push
(bad)
(bad)
(bad)
ds
imul
xor
inc
xor
inc
in
imul
jg
mov
mov
mov
jmp
mov
es
mov
bound
stc
(bad)
sbb
mov
mov
push
adc
dec
lods
dec
fdivr
adc
mov
mov
jmp
cs
adc
(bad)
push
(bad)
fs
popa
sbb
xlat
xchg
inc
cmc
mov
stc
inc
dec
cmps
jnp
jle
mov
or
mov
cmp
lods
inc
mov
ja
ss
mov
adc
dec
ds
retf
lock
push
neg
loop
daa
retf
enter
js
jmp
cli
cmp
inc
cmp
outs
shl
cmp
out
clc
into
(bad)
mov
mov
mov
mov
ss
xor
adc
arpl
lods
mov
pop
retf
sbb
(bad)
adc
xchg
cli
daa
hlt
das
fsubr
sub
imul
mov
pop
xchg
loope
pop
sub
mov
int
ret
xor
dec
outs
xchg
xchg
cmp
icebp
call
ins
hlt
icebp
adc
dec
adc
add
mov
push
lods
or
add
sbb
outs
ja
add
into
sbb
addr16
adc
xor
xor
out
(bad)
sub
cdq
call
stos
loopne
fs
pop
pop
fist
jmp
adc
iret
lods
iret
xor
cmp
sub
into
stc
xor
jbe
sbb
fdivr
adc
push
dec
mov
or
sub
jbe
jp
push
retf
mov
ins
adc
xchg
pusha
aas
outs
int3
icebp
cwde
stos
popf
sbb
adc
jg
jge
rcr
cmp
mov
int
mov
sub
sub
sub
mov
xor
sar
into
mov
in
mov
sbb
fmul
shr
xchg
lods
inc
jecxz
sbb
jmp
ss
sti
or
xor
in
popf
mov
dec
and
jg
jge
mov
fs
scas
mov
xor
frstor
mov
(bad)
sbb
aaa
or
shl
lods
and
imul
ror
das
mov
cld
push
in
dec
es
pop
outs
outs
xor
retf
mov
add
ins
push
dec
stos
adc
(bad)
jmp
mov
mov
sti
mov
mov
into
neg
movs
jmp
ret
ret
cld
adc
sti
js
dec
nop
mov
lods
xor
rcl
sahf
ret
or
loope
lods
lods
adc
or
mov
mov
imul
add
pop
stos
push
out
ficomp
xor
pop
lds
push
sbb
retf
fild
and
push
push
lea
test
adc
jmp
xor
outs
leave
icebp
int
inc
iret
mov
push
jae
dec
fsub
stos
in
(bad)
dec
mov
sub
mov
push
into
sub
(bad)
aad
push
inc
ds
push
sub
retf
xor
and
loopne
and
sub
shl
outs
mov
push
mov
imul
mov
adc
call
das
push
retf
pop
inc
test
pushf
adc
rol
dec
mov
(bad)
sub
xchg
xor
cli
fstp
cmp
xor
mov
or
ret
jmp
out
jl
jge
mov
loopne
mov
jp
jbe
sub
pusha
(bad)
(bad)
and
call
fild
stos
js
stos
cmp
(bad)
ins
or
daa
xlat
enter
push
sti
lahf
stos
fdiv
sub
cmp
cdq
jo
lock
out
daa
mov
adc
ret
bound
jle
test
push
out
inc
ficomp
retf
out
sub
loopne
jno
pop
retf
mov
cmp
aaa
outs
das
scas
push
inc
out
data16
push
lods
jb
jne
leave
(bad)
rcr
and
xchg
clc
mov
mov
inc
jge
jbe
aam
push
jo
inc
sub
int
cwde
daa
mov
fmul
iret
(bad)
cmc
xchg
jecxz
sub
call
ret
pop
(bad)
into
dec
xchg
retf
or
sti
pop
jmp
test
and
(bad)
out
je
retf
movs
div
push
mov
jge
cmps
std
sub
fdivr
push
sbb
push
popa
inc
adc
mov
stc
retf
inc
add
fistp
and
inc
jae
or
inc
je
push
pusha
(bad)
scas
pop
enter
arpl
jbe
push
dec
popf
pop
mov
push
fwait
dec
ds
xchg
jno
inc
and
jmp
inc
mov
jmp
out
rcl
hlt
cmp
fistp
lods
scas
sbb
add
fistp
or
clc
test
inc
arpl
mov
or
ins
xchg
ror
sahf
jge
xlat
dec
mov
xchg
dec
gs
out
enter
mov
push
aad
ins
aad
imul
loope
retf
loopne
stos
mov
pop
push
push
pop
sub
pop
mov
add
inc
xor
adc
dec
pusha
pop
mov
aam
xor
xlat
sbb
(bad)
cli
xchg
stc
xchg
push
mov
(bad)
push
xor
(bad)
push
inc
pop
movs
or
jecxz
imul
jns
and
push
outs
inc
or
xchg
pop
dec
mov
mov
lds
jae
or
int3
sub
(bad)
clc
mov
push
pop
stos
sbb
sete
push
jmp
shl
ret
dec
fimul
scas
cmp
inc
mov
movs
cld
mov
xchg
das
lock
(bad)
dec
adc
mov
add
xlat
fsubr
lahf
xor
add
fld
out
outs
rcr
mov
rcr
imul
push
inc
jnp
scas
xlat
aad
push
mov
aaa
pop
sar
dec
mov
mov
in
adc
in
or
sti
in
loop
dec
shr
xchg
repz
sbb
cwde
jl
es
mov
xchg
icebp
mov
pop
out
cli
or
adc
retf
pop
inc
inc
fidiv
and
inc
adc
inc
pushf
fidiv
adc
xor
or
push
aas
pushf
mov
cli
adc
movs
test
not
aaa
pop
or
ret
nop
jo
push
xchg
adc
sti
push
push
out
adc
sbb
add
icebp
jge
lahf
push
jno
pushf
sub
xchg
push
cwde
in
iret
jno
in
in
mov
mov
rcl
push
mov
sub
cmp
or
mov
or
dec
mov
cmp
outs
in
repz
fs
int3
jno
sbb
leave
lods
jbe
(bad)
out
pusha
imul
pop
or
add
enter
sbb
pop
jg
push
mov
pop
add
cmp
push
push
out
fidivr
mov
sub
imul
shl
mov
cmp
xchg
pop
iret
xchg
ret
fwait
cwde
out
popf
pop
je
pop
xor
adc
cwde
sub
es
sbb
mov
xlat
cdq
add
dec
imul
shl
cmps
ret
or
retf
mov
add
mov
push
std
dec
loopne
push
jmp
cwde
jecxz
add
xor
cmp
pop
in
mov
jno
adc
pop
mov
cmc
jns
test
ror
test
dec
shr
push
hlt
sar
cmp
stc
es
cmp
(bad)
clts
cmp
loopne
sub
jo
or
mov
cmc
add
gs
popa
add
add
xchg
lods
xor
lahf
sub
mov
pop
push
pop
cmp
mov
hlt
mov
pop
and
sbb
call
data16
sbb
mov
push
ror
mov
pop
test
aas
dec
pop
or
fcmovnu
imul
dec
ins
mov
shl
xor
or
ret
fmul
sbb
xchg
das
cmps
stos
pushf
scas
xor
in
sbb
js
inc
ret
das
shr
add
test
inc
xchg
dec
imul
fwait
sub
xchg
hlt
cmp
repnz
mov
add
hlt
sbb
sti
add
cs
mov
pop
mov
ds
addr16
movs
fbld
xor
fisttp
mov
xor
daa
mov
iret
sub
mov
mov
neg
out
dec
rol
add
cmc
loopne
or
test
add
mov
mov
adc
add
mov
cld
inc
xchg
push
mov
rcl
sbb
scas
repnz
es
ja
fsub
jg
dec
jg
mov
adc
icebp
loop
stc
mov
shl
mov
out
and
daa
stc
mov
sub
adc
pop
cmp
dec
fiadd
pop
int
mov
jb
mov
sbb
inc
aam
in
sub
loopne
test
and
push
dec
ficomp
and
jmp
mov
pop
test
popf
jp
movs
test
arpl
aam
ret
jp
inc
retf
or
dec
inc
call
loopne
addr16
imul
xchg
pop
test
cmp
pop
xchg
xchg
sub
push
jg
outs
xor
or
jge
mov
loop
int
sbb
mov
mov
xor
cwde
fcmove
lods
jb
cdq
popa
mov
pop
pop
(bad)
jecxz
popa
push
jmp
mov
aas
fdivr
and
or
push
les
out
fmul
test
or
inc
push
addr16
jmp
jno
ins
sar
cmp
(bad)
mov
push
stos
inc
pop
mov
add
fcmovb
out
adc
nop
fistp
mov
mov
add
aas
xor
push
cmp
xchg
btr
jmp
in
mov
gs
in
jno
cld
outs
sub
xchg
enter
jl
mov
cmp
cld
dec
jne
cs
inc
cmc
xor
xor
test
add
xchg
scas
fcom
stos
pop
mov
icebp
pop
hlt
jbe
mov
mov
pushf
stos
pop
xor
inc
repnz
mov
(bad)
mov
cmp
fstp
inc
jecxz
or
lods
jne
(bad)
sbb
repnz
frstpm(287
sub
lods
xchg
adc
outs
xchg
cmp
add
fmul
pop
test
in
fisttp
mov
pop
mov
or
(bad)
cmp
xchg
popf
ret
jle
adc
sbb
pop
xor
dec
arpl
or
imul
xchg
imul
xchg
pop
mov
push
and
jo
jecxz
mov
(bad)
arpl
loop
adc
mov
xchg
lahf
mov
sahf
push
xchg
adc
pop
popa
fst
adc
loopne
ret
repnz
nop
mov
scas
test
pop
push
pusha
test
addr16
sbb
and
js
dec
mov
pop
(bad)
out
test
fs
push
aad
cmps
xlat
repz
dec
lea
les
sub
cmp
and
xor
call
mov
test
addr16
imul
push
imul
ja
sti
jbe
clc
stos
(bad)
movs
(bad)
les
sub
fsub
imul
and
mov
(bad)
fist
retf
sbb
fcomp
or
jae
in
fcomip
daa
pop
push
pop
out
pop
cmp
in
outs
repz
pop
jns
scas
lods
push
sbb
loop
lods
cdq
adc
push
int
jmp
data16
lock
xor
into
sar
jg
push
frstor
clc
enter
data16
add
in
inc
jne
fmul
jae
jp
adc
add
pop
lock
push
sbb
adc
cmp
fstp
ret
push
call
lods
ror
push
mov
sbb
clc
cmp
sti
sti
(bad)
rol
cs
jecxz
mov
and
int3
pop
outs
lods
aaa
test
in
sub
push
jmp
mov
cmp
xor
rcl
in
ja
pop
rcr
pop
or
arpl
call
sahf
int
cmps
aas
inc
in
inc
sub
inc
xchg
cmp
(bad)
retf
xor
mov
fidivr
pop
sub
sbb
pop
mov
push
sbb
or
push
and
cdq
mov
cmp
lds
lods
or
das
into
or
lods
jnp
hlt
adc
movs
mov
not
adc
cmc
sub
(bad)
or
(bad)
mov
hlt
out
mov
retf
fdiv
fstp
mov
and
lds
xor
pop
int
clc
cmp
icebp
pusha
ds
dec
(bad)
ds
scas
mov
aad
iret
stos
push
pop
sub
sbb
ret
fldenv
mov
std
outs
(bad)
jbe
push
jg
sbb
xor
add
push
pushf
aad
pop
(bad)
xchg
imul
pop
pop
and
jg
js
jns
test
add
pop
shr
popf
inc
daa
sub
cdq
out
inc
mov
jae
cwde
(bad)
std
pop
sbb
jmp
fbld
repz
cli
jle
sub
or
scas
xchg
mov
cmps
not
adc
sahf
mov
call
daa
cli
fld
push
mov
pop
test
xor
mov
pushf
inc
jmp
dec
jns
cmps
mov
dec
fild
in
(bad)
not
jns
scas
xchg
out
das
mov
imul
jge
push
add
mov
and
xor
xchg
js
mov
fld
lahf
cmps
cmp
inc
push
sub
jno
popf
inc
cmc
je
repnz
mov
sub
push
retf
lahf
push
mov
jl
push
fwait
aas
movs
mov
mov
mov
xor
push
fisub
loop
dec
cmp
mov
mov
jmp
stos
jg
mov
inc
imul
push
(bad)
push
jns
ror
movs
xor
mov
sar
hlt
jle
push
ret
test
repnz
cld
inc
ins
fimul
or
div
add
fst
movs
add
les
sub
aad
inc
imul
jno
jmp
add
inc
cli
test
fnstcw
dec
cmc
add
lods
pop
mov
push
loopne
mov
xor
lock
jg
out
adc
mov
out
jge
or
jmp
jl
pop
sbb
pop
cmp
or
adc
mov
je
adc
mov
mov
inc
or
or
dec
jecxz
pop
js
repz
(bad)
dec
popf
les
in
es
jl
pop
pop
jle
mov
mov
inc
mov
mov
xchg
jl
or
push
loop
or
sbb
pop
loop
div
mov
nop
xlat
xchg
cwde
(bad)
repnz
jmp
adc
jecxz
jno
retf
or
cmp
js
pop
or
sar
or
sbb
aad
ds
(bad)
stc
push
sbb
es
cmp
stos
dec
movs
imul
sti
fsubr
mov
imul
retf
xchg
stc
in
aam
xchg
mov
test
add
imul
mov
jg
cmp
mov
loopne
sub
fs
(bad)
xchg
cmp
sbb
mov
jbe
push
inc
es
jp
jl
xlat
xchg
mov
lods
(bad)
iret
popa
sbb
(bad)
adc
push
mov
out
stos
fdiv
cmc
mov
dec
repnz
pop
test
aaa
in
out
mov
push
lahf
pop
xor
call
dec
icebp
sahf
pusha
mov
lods
lods
sbb
xchg
sti
clc
outs
xchg
and
sbb
pop
push
lock
ficom
mov
cmp
mov
sbb
jbe
xor
daa
add
cmp
bound
mov
sbb
(bad)
dec
pcmpgtb
add
lods
ficomp
mov
ret
and
adc
sub
inc
adc
mov
jnp
or
outs
retf
jmp
dec
jbe
push
ret
mov
push
daa
cmps
sbb
mov
jmp
xchg
(bad)
pop
jmp
push
adc
mov
mov
sub
and
pop
aad
imul
mov
cmp
in
mov
xor
inc
fs
mov
test
stc
(bad)
out
movs
xchg
jecxz
or
mov
pop
daa
cmp
xor
and
xchg
jmp
retf
test
dec
add
sbb
mov
mov
in
inc
popf
cmps
outs
push
mov
movs
inc
xor
aas
sub
aaa
fwait
in
jp
test
rol
jno
hlt
jne
mov
mov
(bad)
sbb
push
xor
sbb
adc
in
mov
les
in
mov
or
ins
repz
jo
dec
loope
jns
lock
sbb
mov
and
and
fstp
lds
xchg
sbb
fidiv
pop
sbb
cmp
add
xchg
mov
imul
or
rcl
retf
xor
in
mov
push
jnp
cmp
ins
test
adc
or
cmp
cmps
cmp
push
call
sub
dec
pop
mov
dec
outs
repnz
jmp
push
lods
outs
lahf
xor
gs
mov
jns
rcr
mov
and
sbb
mov
adc
test
ficom
sbb
(bad)
xchg
lods
mov
mov
cmps
sbb
cmps
push
int
inc
(bad)
mov
ret
je
(bad)
out
adc
jbe
dec
cmp
jne
int3
and
pop
xor
jb
xchg
pop
inc
xchg
cmp
aaa
and
daa
cmp
rcr
xor
inc
pop
adc
stos
mov
scas
jp
out
and
mov
push
stos
jne
out
fdivp
inc
cmps
pop
ins
fwait
int
pop
bound
push
sub
rol
pop
aas
pop
lds
cmps
cmp
mov
jnp
xchg
shl
push
fucomip
mov
fstp
sbb
mov
cmp
push
dec
ja
scas
bound
in
(bad)
outs
push
sub
aad
call
mov
in
cmc
and
(bad)
ror
(bad)
mov
(bad)
std
ret
inc
xor
add
data16
out
jmp
in
sub
stos
jno
mov
mov
in
les
xor
xor
mov
push
scas
in
cli
sbb
and
lahf
jp
stos
pushf
jbe
test
jo
jl
pop
jle
mov
daa
in
jbe
cli
out
inc
ja
call
nop
mov
cmps
mov
rcr
pop
adc
sbb
ret
cmp
cmc
push
push
adc
popa
push
jg
ss
fdiv
inc
jo
out
pop
jl
ss
push
fnstsw
lods
cmps
xor
cmps
xchg
stos
addr16
mov
jp
xor
sbb
hlt
aaa
mov
inc
push
stos
out
lahf
push
out
ss
push
mov
jge
ss
out
inc
pop
ins
pushf
ret
lea
push
dec
push
push
adc
fldcw
test
test
push
cmp
cmp
fucomp
mov
les
sahf
std
pop
arpl
in
xor
jmp
lods
jmp
ficom
mov
pop
adc
xor
enter
mov
sbb
xor
test
adc
ins
popf
(bad)
dec
mov
fisubr
jne
mov
pop
stc
lea
stc
das
sbb
loop
bound
test
enter
dec
push
ror
jbe
or
mul
scas
call
pop
popa
cmp
adc
jmp
shl
xor
and
enter
jns
jb
ret
cmp
imul
mov
outs
pusha
add
and
adc
mov
mov
adc
lock
pop
cdq
jnp
int
mov
mov
aas
lods
jle
mov
mov
push
xor
adc
ds
add
aad
aas
js
and
pop
test
pop
shl
lods
shl
mov
xchg
imul
fcom
jge
sub
pop
cli
ins
sahf
and
mov
call
cs
cdq
xchg
or
stos
dec
inc
test
mov
cwde
mov
mov
or
pextrw
cmp
scas
cli
fdiv
xlat
xor
(bad)
fwait
into
fidiv
iret
js
out
add
cld
retf
repnz
stos
xor
dec
outs
outs
pusha
sbb
jp
lahf
mov
les
pop
fmul
test
mov
mov
jge
mov
sar
ds
mov
movs
mov
inc
sbb
into
int
shr
jge
mov
adc
enter
sahf
jmp
sbb
call
xchg
out
lods
or
jbe
xchg
mov
sub
xor
sub
push
repz
add
fxch
inc
pop
jno
xchg
jne
mov
popf
lds
mov
movlps
pusha
jbe
daa
mov
add
adc
loope
test
xchg
push
loopne
mov
xor
cmp
aas
into
ja
test
fidiv
imul
jmp
dec
call
jmp
push
retf
aaa
retf
fist
sbb
mov
jmp
jb
aam
xlat
(bad)
outs
cmps
lods
mov
cmp
sahf
rol
inc
and
jecxz
mov
movs
in
pop
mov
inc
jmp
pop
and
fidiv
xchg
pop
pusha
and
(bad)
push
mov
cmp
jle
mov
mov
dec
loop
mov
mov
push
rol
push
test
add
std
in
sbb
aas
sub
push
inc
andnps
lock
inc
add
in
dec
mul
and
fdivrp
pop
sbb
mov
ja
cmp
popaw
pop
data16
not
loop
push
cwde
cmp
test
mov
(bad)
(bad)
daa
push
add
sbb
xchg
sti
test
call
adc
push
imul
xor
sbb
jmp
sbb
fdivr
imul
adc
mov
sbb
loopne
popf
popa
es
mov
adc
shl
sub
mov
pop
cmps
(bad)
(bad)
push
mov
xor
lea
dec
adc
jo
retf
jne
scas
ret
dec
sbb
jle
(bad)
sub
je
mov
leave
call
lds
je
add
dec
call
sub
iret
bound
or
xchg
arpl
(bad)
inc
mov
jbe
xchg
xlat
xor
mov
arpl
gs
and
push
add
xor
and
mov
xchg
sbb
je
push
dec
mov
push
sub
call
mov
daa
mov
cmc
imul
mov
add
jmp
xchg
ins
(bad)
mov
mov
dec
jg
fisttp
(bad)
and
cmc
cli
xor
adc
shl
movs
cmp
sti
xor
clc
movs
out
fwait
call
hlt
sbb
mov
sbb
neg
jp
cmp
push
mov
fistp
push
inc
fbstp
shl
jge
cmps
outs
lods
test
ja
cmp
sub
cld
xchg
out
ins
jmp
and
jae
inc
(bad)
cli
or
xchg
push
add
call
jmp
jmp
cs
ds
mov
js
int3
rcr
je
sahf
aad
or
dec
mov
stos
adc
pop
mov
inc
xor
jl
jb
adc
xchg
jns
xchg
adc
das
pop
mov
push
add
dec
mov
call
sub
and
pop
mov
mov
cmps
xor
dec
and
outs
push
jmp
iret
(bad)
test
xor
movs
dec
(bad)
jmp
pop
popa
pop
jne
jp
popf
adc
(bad)
push
or
ror
stc
or
in
das
pop
imul
inc
mov
adc
out
mov
jo
pop
jge
(bad)
push
mov
sub
cmps
lock
jecxz
mov
cld
cmp
std
and
enter
adc
pop
sbb
inc
int3
mov
inc
mov
mov
and
ss
inc
scas
test
dec
mov
mov
jecxz
push
popf
icebp
js
cs
or
adc
popf
jne
loope
lods
push
out
pop
mov
stc
(bad)
fisubr
lods
jg
aaa
xchg
popf
xor
add
bt
mov
dec
pusha
jp
xchg
xor
adc
into
aad
pushf
xchg
sbb
xchg
push
pop
(bad)
pop
lods
mov
push
xchg
xchg
push
lahf
out
int3
add
and
fsub
out
fldl2t
mov
inc
outs
shl
sub
mov
das
test
jmp
jne
cld
or
mov
or
add
out
fsub
push
(bad)
sub
xor
ins
cs
mov
cmp
mov
stc
enter
dec
fsub
cmp
test
fstp
push
jg
hlt
(bad)
ins
test
pushf
ret
inc
jne
ror
xchg
xor
xor
retf
cdq
in
or
adc
xor
sbb
sbb
xchg
fisubr
rcr
and
(bad)
dec
cdq
jo
jae
fisub
xor
mov
jbe
push
gs
inc
mov
mov
mov
lea
clc
sbb
or
shl
push
icebp
test
into
jns
sub
mov
dec
jmp
fist
sbb
xchg
cpuid
xor
(bad)
pop
(bad)
mov
in
inc
ins
cmp
repz
out
sti
popa
je
jle
mov
dec
je
and
into
test
cmps
cmp
inc
dec
push
cdq
iret
cld
sti
ss
lods
scas
(bad)
jbe
loope
sub
push
push
xor
inc
pop
inc
repnz
push
test
and
xor
rol
sub
jnp
pop
mov
jne
(bad)
fsub
jne
mov
ds
je
adc
cmp
sub
sar
call
popf
test
sub
outs
inc
push
jge
and
jmp
sub
(bad)
cmc
jo
clc
pushf
outs
push
les
dec
adc
inc
pop
xchg
or
sub
fcom
push
and
ret
popf
push
je
sahf
push
jno
sub
call
cmp
add
fnstenv
mov
adc
(bad)
stos
cmp
mov
aam
add
call
popf
lea
or
dec
fmul
push
jmp
adc
and
mov
cs
push
inc
movs
in
test
xchg
mov
fimul
jg
cmps
in
mov
fmulp
mov
arpl
pop
mov
push
jne
fisttp
mov
jno
pop
das
pop
pusha
mov
xchg
call
jns
(bad)
push
or
xchg
popf
(bad)
dec
ret
and
shl
xor
arpl
arpl
scas
cmp
mov
dec
mov
icebp
or
jo
aaa
and
mov
push
repnz
shl
push
mov
repz
adc
sbb
and
daa
lods
daa
sbb
or
mov
pop
into
in
ds
add
ss
bts
dec
aad
aam
int3
retf
jb
xchg
das
jecxz
rcl
je
mov
dec
xor
pop
sub
xchg
jmp
stos
sbb
sub
movs
and
lahf
shl
out
sub
xor
sti
fstp
mov
sub
pop
daa
push
pushf
adc
inc
xchg
inc
sub
fst
cmc
xor
fs
mov
jp
pmulhw
xor
mov
mov
or
test
adc
sub
ds
pop
xchg
inc
out
ficom
popa
xchg
inc
sub
mov
cld
push
adc
fidiv
(bad)
call
call
cld
jge
fild
fisubr
or
ret
mov
mov
push
inc
ja
repz
je
(bad)
imul
fisttp
jbe
mov
push
aaa
std
mov
cmp
cld
repz
lahf
dec
jns
push
sahf
leave
hlt
(bad)
imul
or
je
std
sahf
dec
xlat
and
mov
add
and
test
jne
(bad)
pop
dec
mov
sahf
cmp
mov
and
mov
push
mov
mov
rcl
movs
ja
pop
lods
mov
sbb
mov
and
repnz
jmp
mov
and
xor
rol
shl
sub
push
(bad)
jg
int3
or
inc
xchg
nop
imul
pop
add
outs
xchg
dec
inc
movs
pop
sub
sbb
fist
xchg
(bad)
mov
pusha
shl
push
add
or
fsub
sub
sbb
lods
cmp
(bad)
sub
imul
lods
dec
pop
and
dec
arpl
sbb
mov
outs
xchg
rcl
xchg
aad
push
adc
repz
sbb
pop
hlt
dec
icebp
test
lods
mov
fsub
inc
les
jp
int3
inc
jecxz
add
out
test
gs
sbb
fdivr
xchg
dec
(bad)
retf
pushf
lock
cmc
mov
movs
mov
div
jp
push
mov
jge
aam
pop
(bad)
mov
or
(bad)
push
pop
popf
pop
(bad)
xor
mov
pop
push
pop
in
neg
mov
push
loope
mov
(bad)
xor
js
mov
mov
frstor
clc
sbb
sbb
mov
and
cmp
adc
loope
ja
dec
idiv
add
add
cwde
pop
stos
stos
mov
cwde
mov
push
pop
aas
push
pop
stos
(bad)
cmp
es
push
imul
and
loope
lods
adc
xchg
mov
dec
xor
mov
jmp
shl
adc
std
sbb
pop
cmp
mov
test
ins
int3
rcr
adc
popa
gs
or
loop
and
mov
scas
lahf
les
stos
in
ins
xor
cli
mov
push
rcr
and
push
dec
mov
daa
mov
sbb
dec
sahf
ins
add
jo
ret
imul
jp
mov
cdq
dec
(bad)
leave
mov
addr16
pop
dec
outs
std
in
jmp
jns
cmp
fs
fsub
dec
sbb
call
call
jmp
pop
shl
cmp
lea
dec
imul
inc
push
sub
out
(bad)
aad
shl
stos
push
mov
inc
imul
adc
mov
jl
fcomp
xor
outs
sbb
mov
(bad)
xor
cmc
scas
jl
stos
sbb
sub
cwde
pop
mov
jnp
(bad)
out
daa
mov
call
mov
or
cmc
test
jbe
imul
xchg
cmp
outs
ret
xor
inc
add
dec
lods
ja
pop
js
pop
ds
jge
mov
push
jne
jne
dec
add
xor
sbb
shl
mov
jecxz
lds
lock
shr
mov
dec
stos
mov
sub
dec
outs
(bad)
scas
jbe
ror
sub
sbb
push
cmps
lock
sub
xchg
fs
sub
push
jge
jae
lahf
call
int3
clc
das
push
icebp
mov
clc
mov
popf
mov
(bad)
jmp
cwde
mov
xchg
lds
xchg
sbb
mov
hlt
inc
jmp
xchg
(bad)
idiv
and
dec
sub
mov
in
std
lods
std
cmp
mov
aaa
cmps
add
std
scas
movs
mov
jns
popa
xor
in
xor
daa
push
fcmovb
aaa
jno
imul
movs
sub
js
ds
cdq
cmp
iret
ins
shl
or
jnp
mov
rcl
cmp
adc
icebp
sbb
ja
idiv
jp
(bad)
push
cmps
pop
push
mov
and
mov
and
mov
aaa
sti
jecxz
xor
iret
inc
fidivr
and
mov
mov
rol
adc
fnstsw
mov
push
repnz
mov
fild
pop
clc
test
adc
or
sbb
xchg
data16
sar
dec
push
jle
mov
lock
into
inc
or
xchg
in
jne
stc
cmp
dec
les
add
out
sub
sub
outs
cmp
mov
in
push
loop
mov
mov
inc
das
mov
fs
and
pop
pusha
push
lods
add
and
or
sbb
into
xchg
mov
jbe
mov
mov
out
fmul
inc
vpshaq
xlat
gs
jmp
es
loop
lods
retf
les
in
jne
inc
(bad)
add
cs
fild
outs
cli
xor
xchg
aaa
mov
inc
xor
sbb
outs
aas
jg
fucomp
shr
mov
lods
mov
mov
mov
xor
mov
test
data16
and
xor
in
fstp
jne
sub
xor
pop
rcl
jle
jae
imul
sbb
mov
mov
js
pop
cli
and
std
fwait
pushf
push
mov
xor
sub
inc
out
cdq
les
int
arpl
cmps
jp
(bad)
in
inc
adc
xor
(bad)
ss
sbb
pushw
sbb
push
push
jnp
out
xor
in
rcl
and
movs
xchg
pop
ins
fs
je
mov
test
dec
mov
adc
dec
mov
and
dec
or
lods
(bad)
out
push
jmp
sbb
pop
inc
test
xchg
fwait
out
jp
lahf
xchg
mov
jmp
mov
icebp
mov
sub
in
sub
xchg
xchg
xchg
jl
mov
sbb
into
and
ret
scas
push
cmps
cmc
cdq
(bad)
jle
mul
cmps
dec
mov
mov
and
mov
and
sbb
push
bound
or
push
enter
dec
mov
ins
int
jp
adc
dec
stc
ins
pop
scas
adc
sub
mov
push
mov
jno
les
aad
mov
rcl
in
ffreep
out
xor
or
adc
cmps
cmp
ret
xor
mov
inc
push
out
iret
data16
pop
outs
repz
aam
clc
mov
xor
xor
jns
push
movs
lods
cli
dec
xor
xchg
jae
jnp
int
outs
cwde
jne
nop
mov
in
(bad)
in
cmps
lods
cmps
int
mov
and
jb
mov
hlt
fwait
ja
push
xor
mov
mov
stc
adc
test
in
retf
sti
jae
jns
iret
pop
iret
call
mov
in
fadd
sbb
cld
sub
das
adc
inc
lds
test
out
pusha
pop
dec
xor
mov
cli
push
(bad)
sar
loopne
jle
aaa
xor
stc
jmp
or
inc
xlat
mov
outs
sub
test
rcr
pushf
sar
das
movs
xor
cmps
out
cmp
ror
mov
inc
mov
push
jo
out
std
mov
mov
int3
jb
dec
stos
add
inc
sar
nop
jle
inc
add
fild
mov
cmp
fsubrp
jmp
repz
test
cmps
push
sub
sbb
std
sbb
arpl
cli
jne
cmp
cmp
pop
mov
mov
fwait
sti
stos
push
or
push
imul
fistp
imul
outs
push
add
ds
retf
cmp
in
mov
hlt
das
sahf
scas
inc
dec
lea
and
std
retf
xchg
sar
sbb
sar
fstp
movs
inc
jmp
lahf
sahf
das
mov
ret
shl
jbe
aad
mov
ret
ret
xor
jmp
retf
ret
mov
jmp
test
mov
movs
fbld
push
mov
dec
in
aad
mov
mov
add
stos
sbb
fimul
add
(bad)
push
(bad)
mov
push
dec
ret
or
sub
leave
pop
lods
xor
pop
pop
mov
sub
outs
cmp
fs
popf
push
stos
mov
and
mov
xchg
dec
push
sub
not
pop
movs
mov
sub
test
ret
adc
add
ss
cmp
(bad)
(bad)
sub
mov
pop
mov
sub
cmp
outs
adc
(bad)
pusha
pop
jo
or
xchg
jmp
fwait
cmp
fst
push
lahf
ss
movs
or
lods
fsubr
and
fmul
test
aad
mov
dec
sub
sub
ins
out
ja
or
jns
sub
mov
jge
mov
outs
out
test
fild
and
and
mov
inc
fdiv
inc
push
jmp
xchg
jmp
jmp
bound
and
test
xor
mov
inc
push
pop
adc
bound
rol
mov
stos
jmp
mov
sub
test
aas
in
mov
aas
lahf
dec
cwde
jns
fidivr
std
sahf
push
std
mov
or
add
adc
nop
(bad)
or
xor
mov
xor
ss
push
sar
sub
into
cmp
shl
arpl
loope
sub
lea
and
inc
mov
inc
dec
loopne
cmp
mov
repnz
jae
dec
mov
mov
dec
cmp
adc
dec
popf
pop
cmps
push
pop
enter
mov
shl
mov
pop
not
cmp
mov
push
cs
(bad)
sbb
adc
ds
popa
fwait
aam
dec
stos
int
push
in
xchg
dec
int
cmc
test
aad
mov
mov
lea
fucomi
push
shl
or
ss
pop
adc
pop
adc
test
xchg
cdq
push
aaa
shr
test
shl
loop
sbb
(bad)
fisttp
jp
fcomp
mov
add
(bad)
cmp
cli
cdq
cmp
push
and
jnp
or
cmp
js
sbb
or
xchg
cld
scas
cmp
adc
mov
out
push
mov
mov
push
xlat
imul
fdivp
and
push
shl
int
hlt
inc
in
mov
mov
inc
cmp
or
and
dec
popf
push
inc
stos
shr
outs
pop
mov
cli
jo
add
out
push
or
or
and
lock
in
enter
inc
pushf
cs
rcl
xchg
xor
lods
fwait
mov
punpckldq
sbb
in
xchg
mov
into
fmul
fsub
mov
icebp
or
or
or
popf
icebp
jmp
outs
loop
jg
sbb
mov
ss
mov
fild
es
inc
jnp
enter
data16
out
fcmovb
es
sbb
pusha
cs
cmp
pop
cmc
mov
shl
pop
rol
mov
int
pushf
loope
dec
aas
or
mov
inc
stc
and
es
mov
pop
je
ds
cmovg
adc
add
test
hlt
sbb
jae
adc
inc
mov
mov
mov
mov
cwde
jecxz
sub
or
jmp
aaa
mov
movs
popf
out
cmp
or
fidiv
ss
mov
je
test
mov
jle
popa
into
das
sbb
xchg
in
imul
mov
jle
fsub
data16
stc
scas
sbb
mov
mul
in
sbb
fnstcw
(bad)
push
cmp
outs
push
repz
adc
dec
call
fld
jne
push
cld
dec
loope
shr
mov
add
mov
inc
cld
xchg
push
xor
and
push
rol
push
xor
aaa
dec
int
sbb
push
or
xchg
mov
pop
popf
cmps
mov
arpl
ins
das
das
gs
sbb
call
inc
cwde
cmp
bound
je
cmp
xor
mov
xchg
stos
lods
repz
xor
and
cmc
pop
push
shl
pop
jg
in
lds
xor
push
movs
stos
cmp
adc
sar
in
xor
inc
mov
jl
sub
lock
push
mov
cmp
inc
cmp
ja
nop
xchg
in
ss
test
adc
sub
cli
push
ret
mov
stos
ja
(bad)
icebp
fimul
pusha
inc
jmp
cmp
inc
(bad)
pop
adc
dec
inc
mov
ja
jmp
test
fmul
dec
inc
shl
jmp
push
rcl
xchg
push
aas
es
sub
and
int
cmp
test
xor
or
outs
add
es
inc
xchg
and
lods
fwait
pop
sub
xchg
enter
dec
(bad)
adc
test
fadd
repnz
ficomp
cmps
mov
dec
out
(bad)
mov
mov
bound
cmp
xchg
sbb
xchg
dec
mov
mov
cmps
retf
(bad)
jae
mov
(bad)
add
adc
mov
push
ds
adc
and
sti
jae
or
sahf
push
add
movs
add
jae
ret
test
jb
cmp
cmps
nop
sub
xchg
aam
xchg
dec
cdq
icebp
and
fwait
sub
pop
or
or
sti
ror
nop
ficomp
xor
or
loop
inc
push
stos
imul
cdq
sbb
lods
leave
es
pop
sti
aad
xchg
xor
xor
into
pop
loope
add
adc
jmp
jge
and
shr
aad
push
jb
out
out
mov
in
scas
push
xchg
xchg
pop
aas
pop
xor
popa
or
addr16
ret
daa
adc
jbe
or
mov
mov
(bad)
sbb
pop
cmp
or
lea
mov
jnp
mov
(bad)
cmp
mov
stos
in
mov
ret
sub
leave
sub
sar
mov
inc
loop
and
and
in
mov
jp
aam
imul
sbb
scas
xchg
dec
adc
imul
or
xor
push
pop
pop
lock
fisttp
jb
test
push
mov
and
pop
cmp
jne
jnp
jae
add
jbe
add
mov
retf
mov
jb
fidiv
hlt
mov
fdivr
jp
fimul
mov
mov
outs
test
repnz
pop
jae
adc
lock
icebp
sub
out
mov
push
inc
pop
cmp
mov
or
xor
pop
sub
into
inc
addr16
xchg
repnz
fdivr
push
sbb
sbb
lea
mov
loop
aad
rol
mov
mov
retf
xchg
jmp
xchg
push
pop
add
and
pop
clc
ret
fs
arpl
mov
test
movs
inc
mov
test
lods
xor
push
(bad)
iret
pop
fistp
xchg
sub
mov
movs
ds
test
push
add
mov
xchg
cmp
mov
jl
(bad)
jg
jg
add
sbb
cmp
arpl
fdivr
iret
mov
pop
(bad)
jns
mov
out
xor
pop
out
or
push
bound
cmp
add
pushf
outs
mov
cmp
mov
jge
or
jl
xchg
jecxz
inc
and
mov
(bad)
and
pop
jno
push
fwait
xchg
fs
push
mov
fcomp
sbb
pop
mov
dec
in
push
cmp
ins
lods
push
mov
stc
mov
mov
jbe
dec
lahf
jno
dec
mov
mov
lea
cli
add
dec
clc
dec
imul
or
movs
mov
sub
repz
aas
jns
dec
sbb
sub
push
call
into
ret
cmc
xchg
xchg
fs
retf
cmp
or
pop
mov
fldcw
cld
ret
xchg
test
rol
or
test
inc
fwait
je
push
xchg
fwait
mov
adc
xor
scas
xor
js
stos
out
jp
lods
mov
fcmovbe
(bad)
xchg
fiadd
sub
ss
fist
clc
fwait
aad
push
lock
int3
add
jo
xor
(bad)
push
cmc
mov
mov
fdivr
adc
cwde
adc
adc
push
jb
or
lea
cli
mov
or
mov
jecxz
jbe
hlt
jns
retf
cmp
jo
mov
and
cmp
pop
sbb
inc
outs
pop
aas
aaa
adc
mov
xchg
js
movs
jl
jo
frstor
mov
enter
stos
addr16
and
mov
aad
sub
lods
sub
loop
cmp
(bad)
add
cmp
mov
ins
es
into
outs
imul
xchg
adc
popa
sub
jmp
aaa
shl
mov
push
adc
add
adc
mov
xor
pop
nop
or
icebp
xor
ss
ret
push
movs
dec
addr16
pop
mov
fs
lahf
and
sub
push
or
fisub
fcom
jp
add
sbb
xor
(bad)
cmp
push
lock
fwait
cmp
jmp
movs
loop
(bad)
out
and
pusha
cdq
fdivr
mov
popa
xchg
call
mov
push
jns
mov
aad
xchg
jne
push
sub
mov
add
dec
lods
pop
cmpxchg
mov
scas
mov
lahf
popa
jmp
ret
mov
pop
push
push
fmulp
jo
dec
sub
test
or
mov
into
fnstcw
sbb
aam
pop
jne
jae
dec
add
sub
ja
sbb
cmp
movs
mov
xor
aaa
jecxz
sbb
push
imul
sbb
push
xchg
call
mov
cmp
cmp
mov
mov
fwait
adc
jmp
popf
gs
add
push
mov
xor
mov
push
pop
icebp
mov
cmps
mov
dec
ror
mov
mov
jnp
out
gs
jecxz
popa
push
push
gs
mov
mov
jge
cmps
mov
inc
sbb
sub
and
in
call
call
push
fcom
ins
or
hlt
loope
sub
jl
lods
inc
rol
popa
pusha
int
xchg
in
sbb
js
xor
mov
push
mov
dec
shr
adc
pop
test
loope
mov
daa
or
imul
dec
push
jb
mov
or
xor
pop
mov
jp
in
pop
inc
ja
cmps
add
pop
in
pop
jg
sub
mov
pop
stc
jmp
outs
or
cmps
and
(bad)
rcl
inc
mov
inc
movs
sub
lds
mov
nop
hlt
retf
es
ins
dec
stos
cmp
adc
jmp
scas
jmp
push
pop
mov
jle
(bad)
mov
mov
cmps
std
cmp
movs
aas
pop
jno
add
(bad)
jb
repz
push
add
sti
retf
call
clc
pop
mov
call
js
iret
xchg
cmps
xchg
int
(bad)
cmp
mov
and
stos
dec
and
int
add
cmp
sub
lds
dec
das
and
ret
repnz
aam
adc
enter
lods
or
enter
cmp
scas
sbb
pop
and
loopne
mov
xor
push
inc
(bad)
jmp
mov
push
mov
mov
popa
push
retf
retf
cmp
add
dec
or
ja
add
ret
adc
push
add
je
inc
(bad)
int3
add
jmp
popa
adc
mov
sahf
xchg
jmp
bound
push
mov
(bad)
sbb
out
pushf
push
(bad)
xor
loope
mov
rol
ds
inc
stos
stc
cmp
punpcklwd
sbb
ret
adc
or
jg
jecxz
adc
repz
leave
int3
inc
ins
sbb
outs
loope
xor
and
out
popa
push
sar
mov
aam
loop
cwde
test
xchg
push
les
adc
pop
and
dec
mov
lock
shr
push
or
mov
push
in
inc
sbb
xchg
push
cmp
sbb
lods
jp
mov
dec
loop
cwde
sub
cmc
xchg
mov
call
lods
sahf
add
push
and
lods
dec
cmp
mov
pop
scas
pop
inc
(bad)
inc
push
fst
stos
test
test
test
pusha
sahf
push
mov
inc
sbb
sbb
sbb
mov
xor
and
call
pop
dec
loop
mov
popa
das
call
sbb
jg
cmps
mov
cmp
cmp
stc
push
adc
jbe
je
cdq
int
shr
mov
mov
js
ds
les
call
inc
cmp
int
mov
fisttp
aad
cmps
jo
mov
cmp
adc
xor
pop
jg
lea
aad
push
jns
pop
clc
lods
add
jg
xchg
or
aaa
fcom
(bad)
test
test
mov
scas
fistp
jns
scas
pop
ja
repnz
jp
ja
pusha
mov
popa
and
jmp
sub
ss
(bad)
dec
test
xchg
lock
aas
in
cmps
(bad)
repz
push
mov
popf
dec
fld
lods
aam
ss
fsubr
mov
cmp
sub
rol
stc
jbe
arpl
mov
std
xor
icebp
mov
retf
add
sub
not
sub
ror
or
hlt
bound
call
test
cld
fdivp
pop
push
pop
sub
pop
iret
jecxz
pop
jbe
or
xor
ror
or
imul
fmul
jge
mov
lods
cmps
in
pop
outs
cmp
mov
inc
and
sub
(bad)
jge
into
leave
shl
or
clc
inc
sahf
test
lock
or
in
sub
div
dec
es
inc
lock
sub
adc
pop
xor
xchg
jmp
sbb
cmc
mov
rcl
sub
fisubr
shl
xor
jns
fisubr
push
in
inc
sbb
call
mov
es
repz
jno
aas
cmp
jns
or
shl
or
jo
mov
ret
push
xlat
sbb
xor
daa
retf
ja
mov
or
sti
sbb
xchg
jae
(bad)
ins
mov
mov
pushf
mov
ins
pop
inc
adc
jno
push
xor
retf
jge
cmp
std
jbe
mov
imul
mov
xchg
jmp
mov
sub
xor
dec
add
xor
jo
sbb
enter
sub
adc
add
adc
adc
call
retf
hlt
adc
cmps
pop
fisttp
std
shr
sbb
shl
pop
jne
or
xchg
push
(bad)
das
hlt
xchg
jl
out
inc
jle
or
ins
push
mov
mov
lea
sbb
repnz
lods
jg
int
outs
jb
imul
add
or
and
dec
mov
pop
std
(bad)
pop
push
xor
sub
cmps
(bad)
les
div
mov
mov
push
or
daa
adc
jno
xchg
sbb
push
xor
int3
add
cmp
or
les
push
(bad)
pop
and
mov
or
mov
test
xor
fisub
xor
ss
mov
adc
sbb
add
and
adc
sub
out
fucomip
pop
jle
xchg
add
enter
mov
retf
xor
jne
cmp
addr16
mov
bswap
jmp
add
mov
cld
ret
jmp
mov
popa
adc
ins
mov
retf
mov
pop
xchg
das
push
mov
aaa
(bad)
sti
pop
outs
mov
cmc
call
adc
mov
jle
out
icebp
out
bound
fsub
pop
shl
mov
add
sbb
push
in
inc
vpmovsxdq
dec
mov
in
and
adc
add
xor
ret
test
dec
or
rol
popa
mov
and
push
js
sbb
and
inc
xchg
xchg
aam
mov
push
aas
rcr
rcl
imul
aaa
loopne
pop
aad
pop
mov
mov
std
in
adc
aam
test
daa
movs
sti
jo
ss
jo
pop
and
inc
xchg
loope
ror
mov
push
sub
je
es
bound
retf
lods
jae
call
repz
push
mov
out
out
add
sbb
int3
imul
shl
retf
push
mov
loop
int3
ja
pop
or
mov
and
test
xchg
adc
jg
pop
xchg
cmp
int
add
xor
mov
cmps
push
xchg
jmp
addr16
stc
push
sub
outs
xchg
cli
ja
(bad)
mov
mov
fucomp
and
xchg
adc
fdiv
les
icebp
pop
pop
jp
jl
cmp
and
sbb
and
into
pop
sbb
mov
xor
jne
sbb
mov
ins
les
push
cli
out
imul
lock
inc
call
aaa
rcl
cmps
addr16
cmp
popa
ins
mov
ror
lods
imul
arpl
mov
sub
jle
test
sub
xlat
adc
sbb
fdivr
add
(bad)
sub
jne
cld
das
int
lds
pop
ins
ret
mov
push
or
sbb
scas
aad
and
loope
ficom
ja
pmulhuw
cmp
xor
in
sahf
xor
xchg
mul
jl
js
jp
inc
or
vzeroupper
je
loope
test
inc
sub
outs
clc
fisub
mov
push
lock
sbb
pop
loope
(bad)
cli
int
cmp
(bad)
mov
std
fs
int3
xchg
jp
ins
jge
or
js
sub
inc
jb
xchg
cmp
outs
mov
pop
jl
dec
mov
les
ss
mov
pop
iret
mov
or
lds
xor
int
cli
xor
fidivr
xchg
or
mov
nop
sub
aaa
inc
int
cdq
or
adc
and
fimul
in
mov
fadd
and
xchg
in
out
sbb
xchg
inc
ds
stos
xor
dec
rcr
mov
mov
(bad)
aaa
js
(bad)
js
add
cs
mov
mov
pop
pop
cdq
mov
cmp
imul
imul
mov
pop
cmp
shr
outs
movs
push
daa
jge
adc
jl
dec
mov
dec
sub
loopne
mov
sub
ret
hlt
inc
(bad)
push
sbb
push
movs
add
test
pop
out
fsubr
mov
aas
mov
mov
cmps
push
test
sbb
sbb
mov
cmp
jno
fucomi
bound
push
(bad)
std
xor
xchg
mov
pop
mov
bound
test
or
push
push
loop
cwde
cmc
js
and
push
adc
lock
jnp
jge
sbb
xchg
shl
mov
daa
jo
and
inc
std
cmps
and
dec
iret
fdivr
jmp
cmp
outs
inc
xchg
fwait
jne
xor
sbb
dec
lahf
cmc
idiv
movs
xor
xchg
cmps
adc
jae
jnp
jge
mov
cmc
test
jle
fwait
xchg
pop
imul
ucomiss
push
cmp
sbb
pop
scas
adc
adc
dec
into
pop
pop
pop
dec
lods
dec
push
packuswb
test
fdivr
fdivr
iret
sbb
outs
xor
daa
xchg
pop
xchg
rol
mov
mov
mov
sbb
mov
add
sbb
sbb
lods
adc
push
add
rcr
mov
adc
sub
adc
sahf
aam
outs
push
(bad)
aad
and
sbb
pop
and
mov
lock
pop
sub
mov
outs
inc
fild
push
and
scas
jo
repnz
xor
inc
sub
mov
out
test
js
lea
or
push
iret
inc
stos
push
clc
mov
jge
add
xchg
mov
cmp
lods
shl
jne
std
xor
mov
(bad)
push
cmp
sti
loop
out
lock
push
cmp
test
inc
cmp
mov
dec
mov
mov
mov
cmp
(bad)
(bad)
fsubr
jnp
push
and
mov
cld
cmp
std
les
push
daa
(bad)
out
das
hlt
xchg
sbb
popf
stos
mov
sbb
scas
mov
mov
data16
pop
mov
imul
fiadd
ja
(bad)
adc
pop
push
out
push
mov
mov
sti
mov
mov
out
gs
push
push
xor
mov
cld
popa
push
sub
jb
or
ret
pop
in
sub
sbb
jb
or
(bad)
mov
cmps
inc
cmp
sbb
jmp
shl
and
jecxz
test
pop
mov
dec
jge
(bad)
sbb
xor
sar
dec
cli
shl
clc
ficom
jg
xchg
or
cmc
test
push
(bad)
int3
out
(bad)
push
rol
mov
shl
dec
aaa
cmp
or
cmps
fst
mov
outs
pop
les
pop
retf
inc
xchg
mov
inc
adc
mov
aaa
inc
scas
mov
push
sar
sub
cwde
aas
push
mov
(bad)
std
pop
mov
xor
sbb
add
(bad)
or
in
mov
sub
call
aad
fcmove
xchg
inc
mov
les
and
movs
sar
jo
dec
jl
lock
and
ds
retf
and
lock
es
adc
dec
mov
mov
aaa
mov
jle
jne
test
inc
out
out
jbe
dec
ret
dec
mov
mov
jp
dec
dec
dec
sub
and
addr16
push
pop
xor
lea
pushf
and
xchg
fs
push
into
aaa
pop
or
or
or
cwde
dec
jno
out
in
jo
jmp
inc
ins
icebp
das
lock
add
loope
div
cmp
push
pop
cmp
push
bound
cmps
pop
lea
push
sub
fsub
loope
out
dec
dec
mov
dec
dec
jmp
cmp
cmp
sbb
add
mov
mov
add
nop
int
cwde
popa
cmc
adc
mov
imul
and
mov
sbb
inc
xor
cmps
pop
xor
dec
adc
in
mov
fwait
add
or
push
mov
add
aad
add
cmp
rcr
out
ret
jb
and
add
inc
or
fucomp
loopne
ins
dec
test
mov
cmps
jbe
retf
sub
bound
and
sbb
add
xor
adc
popf
test
and
pop
pop
mov
mov
jmp
pop
sar
(bad)
adc
pop
cmp
cmp
inc
push
inc
mov
push
xlat
push
sar
lock
adc
adc
test
push
adc
cs
mov
mov
mov
repz
cli
adc
pop
out
and
out
out
jecxz
fwait
mov
jecxz
jo
xor
fst
jmp
mov
and
inc
loopne
dec
lods
jbe
lahf
test
iret
retf
mov
std
or
clc
mov
xchg
ret
ret
lock
jge
cld
pop
fs
jbe
mov
mov
sti
sbb
idiv
mov
das
arpl
js
(bad)
push
pop
or
sbb
loope
pop
cmc
mov
push
ret
iret
outs
lds
les
arpl
in
int3
mov
inc
fsubr
adc
imul
ret
push
pop
vmwrite
push
xor
loop
lahf
adc
aaa
pop
xor
jl
xor
popa
mov
mov
mov
pop
cmp
leave
sbb
jmp
and
ins
and
pop
clc
mov
ret
dec
loopne
push
pop
xor
mov
jmp
adc
mov
mov
cmp
call
daa
pushf
pop
or
das
call
lods
xor
stos
stos
int3
jecxz
jb
scas
mov
popa
jns
leave
jo
cmps
loope
push
addr16
push
dec
ret
sub
daa
es
int
imul
fiadd
cmp
adc
or
and
ret
test
xor
(bad)
ret
cld
cmps
sub
jg
lea
ins
out
push
fbstp
es
loopne
cmps
jmp
jmp
test
sub
xchg
mov
jae
imul
fdiv
cmp
mov
stos
inc
lods
and
cld
fdiv
xchg
movs
daa
repnz
test
sbb
xchg
fidivr
sub
and
movs
fst
adc
dec
in
fld
ja
inc
lock
cmc
lods
jo
xor
adc
jmp
pop
clc
nop
xlat
clc
imul
inc
out
xchg
xchg
out
mov
mov
sbb
mov
xor
aam
test
cmc
jmp
nop
xchg
aaa
arpl
push
dec
sub
cmp
add
or
loopne
ins
jl
xor
loop
cmp
sar
call
(bad)
popa
fwait
(bad)
lods
mov
mov
adc
rcl
ret
cmc
into
mov
(bad)
jbe
jmp
lahf
pop
jg
or
mov
fs
or
test
stos
fisubr
retf
fisub
xchg
and
xchg
xchg
test
cmps
cmc
xor
loopne
xchg
mov
rcr
sub
cld
retf
mov
(bad)
icebp
and
jecxz
enter
xor
push
mov
cmps
pop
dec
inc
jge
popa
push
mov
cmp
xchg
sahf
jp
aas
in
nop
jns
je
add
push
dec
cmp
and
cmps
adc
les
cmps
lods
std
cli
xor
xchg
cmc
jo
test
push
in
add
jns
mov
xchg
in
jp
iret
test
popa
xor
mov
out
outs
cmps
jl
sub
(bad)
mov
xchg
jge
mov
(bad)
and
mov
stos
xor
mov
sub
jne
push
cmp
into
mov
icebp
in
loope
mov
push
mov
dec
les
push
or
inc
out
or
out
pop
lea
lahf
sbb
int3
push
cmps
das
das
jae
fbstp
imul
into
dec
aas
dec
push
movq
cdq
into
push
mov
adc
cbw
repz
repz
int
adc
dec
inc
cwde
jge
popa
into
jg
sub
jmp
adc
sbb
in
or
(bad)
test
mov
cmp
mov
scas
loopne
repz
call
inc
fild
pop
or
cmps
mov
push
daa
push
dec
aaa
fcomp
jl
ins
jae
fs
addr16
sub
ins
jp
sbb
and
mov
cmc
stos
ins
in
cmp
xchg
aad
sbb
xor
push
out
jae
call
retf
cmps
or
mov
cmp
popa
call
into
inc
cwde
cld
inc
mov
xchg
mov
sti
retf
es
aam
fisttp
stc
ja
jmp
or
movs
xor
adc
fcmovne
mov
lea
jbe
clc
rcl
lods
pop
call
stos
aam
mov
cmp
sbb
fs
push
inc
pop
fdivr
push
shl
dec
jns
jmp
in
fst
xor
xor
xchg
add
js
jmp
out
or
cmp
aad
cmps
das
sub
mov
cmp
loop
data16
pushf
inc
std
push
(bad)
aam
sbb
mov
(bad)
mov
inc
arpl
sub
movs
adc
ret
dec
std
pushf
mov
mov
sub
cmp
mov
adc
loop
arpl
scas
pop
test
fxch
loope
and
or
jmp
cmp
inc
fnstcw
test
out
inc
gs
lods
or
dec
rcl
xor
mov
push
pop
das
(bad)
mov
ja
nop
sbb
(bad)
adc
rcl
call
lahf
aas
xchg
inc
std
jge
ror
push
inc
xor
lea
test
push
lods
in
pop
and
jb
fstp
inc
mov
push
inc
jae
(bad)
add
push
fld
lock
push
pop
js
or
int3
sbb
mov
leave
jnp
push
pop
and
cwde
inc
rol
jecxz
jmp
cmp
aas
lea
mov
std
push
and
sbb
in
jne
js
pop
and
push
cmp
cld
ret
xor
and
retf
sbb
inc
int
out
repz
pop
int
or
test
inc
sbb
dec
ror
repz
test
lods
mov
push
push
pusha
mov
aad
dec
clc
je
stc
xchg
sub
jecxz
dec
mov
or
push
icebp
cmp
xor
aaa
aam
fcmovu
lods
ss
aam
add
fdivrp
clc
push
mov
test
cmp
(bad)
xor
imul
les
jno
(bad)
push
(bad)
in
nop
cmp
cmp
data16
fsubr
xor
scas
pusha
xor
adc
cmp
out
mov
dec
lods
scas
adc
add
bound
inc
pop
mov
ja
in
popa
movs
jmp
pop
inc
xor
inc
and
test
lock
test
and
sub
inc
popa
cmp
push
mov
push
outs
mov
shr
adc
pusha
xor
pop
sbb
nop
xchg
mov
mov
mov
idiv
jecxz
pop
stos
scas
rcr
in
clc
mov
add
std
adc
xchg
adc
pop
add
out
mov
imul
sbb
leave
sub
dec
xor
ins
bound
cdq
mov
test
daa
ffreep
adc
and
fcom
inc
je
cli
lods
jmp
mov
loope
cmp
loop
jmp
scas
sbb
mov
shl
outs
arpl
in
dec
rcr
mov
jae
and
fcmovu
pusha
xor
inc
add
js
js
js
mov
leave
jp
sbb
cdq
jnp
cmps
loope
popa
dec
mov
xor
cdq
test
in
push
push
aaa
push
pop
xchg
ret
shl
shl
retf
arpl
popa
pop
jae
cdq
cmp
xchg
fdivr
mov
clc
retf
push
mov
sbb
dec
adc
push
pop
popf
mov
mov
mov
cwde
jl
retf
fidiv
lods
pop
inc
repz
jg
add
inc
or
cmp
dec
add
jns
imul
mov
outs
xor
popa
outs
sub
repnz
div
enter
repz
mov
out
jae
cld
stos
cmp
lock
push
bound
jb
add
cmps
into
sti
xchg
repnz
xor
cmps
ds
or
and
fild
pusha
repz
jne
and
add
(bad)
dec
dec
std
mov
sbb
inc
xchg
ret
jle
push
sbb
jg
cdq
out
mov
daa
xchg
stc
sub
in
xor
in
mov
jo
or
xor
retf
jno
test
dec
jge
xchg
mov
je
mov
int3
pop
ret
mul
mov
jge
sub
outs
std
pop
in
icebp
and
(bad)
mov
mov
pop
inc
lahf
or
mov
jae
(bad)
xchg
out
inc
enter
test
(bad)
xchg
or
jle
pop
ror
mov
aas
or
leave
jle
add
cmps
out
push
xlat
ret
xchg
dec
inc
mov
xor
retf
mov
(bad)
adc
daa
pop
ret
push
cmp
ret
cmps
cmps
test
cli
test
dec
inc
ins
or
sub
adc
repz
loop
shl
das
test
inc
(bad)
push
ds
ret
inc
inc
mov
dec
dec
ja
jbe
or
adc
std
and
xor
scas
out
adc
pop
jns
lds
xor
or
ficomp
mov
push
xchg
cmp
sbb
popf
lods
xchg
shr
and
dec
sbb
pop
jmp
rcr
ins
dec
jno
ret
push
lods
cmc
mov
sub
jmp
pop
mov
mov
jg
loope
sub
jno
int
dec
(bad)
enter
jl
push
push
outs
lods
mov
jecxz
ss
popa
cmp
push
xor
mov
mov
sub
and
js
mov
jmp
fwait
jl
jge
int3
mov
and
sub
dec
mov
test
add
test
add
loopne
jo
pop
rcr
test
sub
daa
sbb
xor
movs
add
mov
mov
in
dec
popf
daa
jns
pop
sub
inc
mov
push
les
push
mov
repz
(bad)
cwde
scas
push
fild
mov
jne
cwde
jp
call
repnz
daa
aam
cwde
and
lahf
(bad)
or
mov
ror
test
inc
push
cwde
jle
xchg
movs
mov
adc
xor
in
in
push
dec
or
inc
ja
int3
je
dec
imul
arpl
xlat
sbb
scas
jae
mov
(bad)
jno
ins
cld
pop
push
adc
jbe
pushf
ret
inc
cwde
test
dec
jmp
push
dec
add
ret
mov
dec
push
(bad)
sub
pop
int3
shr
loopne
mov
icebp
and
out
jae
pop
cmp
cmp
inc
pusha
ret
push
ficomp
mov
shl
push
jle
out
cmps
and
adc
out
pop
inc
lds
pop
shl
xchg
sti
sti
xchg
loop
mov
sar
jp
clc
repnz
bound
dec
inc
js
test
cdq
push
inc
imul
mov
test
loope
int3
mov
mov
and
xor
adc
pop
xchg
(bad)
mov
add
call
lea
fs
ret
in
adc
lahf
lahf
inc
mov
mov
jge
retf
mov
out
inc
push
jo
pop
mov
cmp
sti
mov
cmp
out
cwde
aad
xchg
push
sbb
xor
jge
out
adc
cmp
jg
and
sbb
int
jnp
mov
mov
retf
dec
(bad)
fnstenv
push
mov
daa
fild
retf
popa
xor
loope
pop
aad
(bad)
sbb
add
or
aad
int
mov
into
cmp
lock
sub
adc
jae
xchg
xchg
push
in
ss
pop
dec
push
xlat
push
pop
pop
and
xor
push
popf
mov
das
retf
inc
sbb
push
(bad)
neg
in
enter
cmp
dec
je
sub
inc
mov
in
test
inc
aam
adc
out
mov
cmp
loope
scas
xor
mov
in
pop
bound
push
loop
xor
popa
retf
gs
push
inc
dec
scas
outs
sbb
jbe
and
(bad)
loopne
pop
fs
call
fs
push
out
pop
mov
sub
popf
jp
stc
xchg
pop
cmp
adc
fdiv
cmp
add
inc
and
scas
cli
ja
ins
das
jns
push
cli
leave
pop
in
mov
sbb
mov
adc
sub
pop
jne
xchg
fimul
add
add
test
sub
dec
lods
pop
loope
adc
jg
add
adc
or
dec
sub
scas
test
or
push
add
sar
cmp
and
retf
ds
leave
dec
jmp
mov
mov
inc
pop
or
cli
jg
xchg
mov
out
ds
inc
cmc
pop
mov
repz
push
dec
mov
pop
pop
lods
mov
mov
mov
fld
sar
xor
mov
xor
lock
mov
ins
sbb
cmp
xchg
cmc
repnz
xchg
test
dec
ror
shr
jmp
sub
scas
cmc
xchg
jae
push
loop
movs
push
cmps
sti
fisttp
add
mov
stc
adc
xchg
(bad)
aam
jns
and
cmp
add
nop
rol
push
(bad)
jne
mov
into
fstp
into
imul
mov
sbb
xchg
lea
and
call
pop
push
and
cmp
xchg
in
ins
push
movs
adc
(bad)
out
loope
outs
mov
lock
or
xlat
adc
xchg
or
ret
bound
jl
lods
xchg
fst
jns
sbb
ffreep
stos
or
imul
add
js
sub
aam
rol
mov
xchg
add
cmp
test
dec
rcl
aas
and
inc
pop
jno
mov
push
retf
repz
sbb
(bad)
inc
pop
retf
es
dec
adc
and
into
retf
push
add
mov
sub
cwde
fld
sbb
leave
mov
int3
cmc
adc
or
call
jnp
lods
in
jno
mov
adc
push
adc
push
(bad)
pop
sub
and
push
dec
mov
inc
cmp
fs
inc
and
pop
retf
fstp
adc
cld
imul
xlat
fcmove
ficomp
mov
cmp
or
cld
mov
cmp
push
call
test
dec
rcl
ja
xchg
cmp
fisttp
push
or
pop
xchg
sbb
jmp
cmp
jno
test
dec
daa
inc
sub
push
test
jl
add
pop
or
int
add
add
inc
jne
cmc
imul
sbb
xchg
pop
xor
dec
fs
adc
xor
aas
icebp
push
inc
test
cmp
gs
lods
adc
sbb
sub
push
xchg
push
es
(bad)
or
mov
mov
(bad)
rcr
addr16
test
repnz
or
cmp
rcl
mov
les
lods
outs
(bad)
ret
enter
int3
cmp
pop
cld
or
jp
imul
add
aad
sbb
test
jp
lods
arpl
and
test
inc
test
lahf
or
inc
in
dec
inc
cmp
cmp
out
jecxz
jp
(bad)
and
pop
rol
in
xor
jne
cmps
jns
scas
ja
push
cli
test
adc
std
retf
xor
xlat
shl
outs
dec
loop
aaa
inc
in
sbb
xor
loop
mov
dec
sbb
loope
pop
pop
lock
adc
sub
hlt
(bad)
aad
xlat
cli
inc
dec
aad
in
dec
(bad)
xchg
push
push
xchg
popf
pusha
mov
mov
mov
rol
mov
push
imul
fild
shr
pop
mov
mov
sub
clc
inc
or
add
add
movs
clc
xor
jmp
out
lock
cmp
pop
outs
xchg
cld
cmc
xchg
iret
repz
aad
fsubr
jb
cmp
aam
dec
icebp
arpl
cmp
sub
xor
aam
pop
mov
(bad)
aaa
mov
adc
push
mov
xchg
push
xor
fldenv
cld
xchg
sub
mov
or
mov
mov
in
inc
cli
sbb
push
icebp
cmps
imul
jecxz
mov
pop
jmp
pmaddwd
loopne
iret
xchg
(bad)
in
jmp
dec
aad
fiadd
je
push
xor
ins
or
iret
into
dec
cmp
mov
sub
shl
outs
(bad)
mov
jnp
inc
scas
stc
sbb
(bad)
out
mov
dec
xor
mov
inc
mov
imul
push
repnz
test
fs
xchg
out
sbb
xchg
(bad)
mov
push
rcr
int3
(bad)
loope
jbe
dec
sub
fwait
pusha
out
les
cmp
rol
cmp
js
pop
xchg
ins
mov
lea
test
mov
stos
mov
jp
addr16
ins
pop
ret
pop
dec
shl
push
pop
aad
or
cmp
push
cmp
sti
imul
std
cmp
xor
xchg
sub
push
or
pop
jmp
jle
cmps
inc
rcr
ins
mov
jno
xchg
and
in
adc
xchg
movs
fist
push
aaa
retf
xchg
inc
gs
and
push
es
pop
xchg
(bad)
jmp
or
ror
shr
ret
imul
pop
cmp
mov
adc
fldcw
pop
xchg
cmp
jmp
push
xor
xchg
or
sbb
icebp
repnz
in
movs
mov
ror
aam
cmp
dec
stos
xchg
pop
sbb
add
and
aaa
in
ja
mov
data16
and
xchg
cmc
loope
inc
(bad)
enter
pop
es
cmps
sbb
retf
add
pop
jo
inc
in
lds
dec
xlat
add
jmp
jg
les
aaa
fist
xchg
mov
xchg
or
cmp
std
or
inc
sbb
or
fnstenv
loopne
fcmovnb
cdq
bound
or
or
jp
in
ds
inc
adc
mov
mov
xchg
cwde
das
xlat
and
jnp
test
call
push
(bad)
ret
push
pusha
push
cdq
rcr
xchg
bound
fld
sbb
pusha
fdivr
stc
or
sar
shl
imul
repz
data16
loop
jo
cwde
pop
adc
mov
(bad)
clc
les
fwait
mov
lahf
rol
pop
data16
inc
push
out
mov
cmp
repz
add
mov
pop
adc
jg
adc
push
xchg
fiadd
jae
mov
les
cmps
scas
shr
loope
pop
push
mov
outs
int
ins
test
std
jne
arpl
mov
pop
xchg
add
aas
dec
les
icebp
inc
mov
scas
push
fsub
jg
adc
ds
jae
aad
jmp
jnp
push
sbb
nop
aad
add
imul
mov
aas
mov
xchg
sub
dec
sti
add
push
je
add
jne
jns
int3
or
mov
dec
inc
ds
and
dec
jecxz
jecxz
sub
out
xor
icebp
pop
jbe
jne
repz
enter
mov
lea
fld
add
sbb
pop
or
xchg
mov
xchg
jmp
cli
inc
push
loop
(bad)
in
hlt
jnp
std
(bad)
(bad)
data16
sub
sbb
sbb
inc
sbb
jnp
xchg
dec
nop
add
dec
ret
hlt
jbe
bound
push
mov
mov
fnstenv
dec
or
inc
movs
push
lahf
rcl
inc
mov
imul
ja
pop
or
push
and
int3
cmp
pushfw
ret
cwde
sub
xchg
push
leave
mov
les
add
cmp
inc
cmp
nop
pop
and
and
aas
retf
xchg
imul
add
test
add
addr16
lock
and
cdq
lea
xor
xchg
les
repnz
pop
ins
sub
pop
sub
push
sti
sub
dec
popf
push
jns
push
mov
cmps
add
rol
jl
mov
mov
fs
dec
push
adc
fldenv
jmp
mov
push
dec
dec
std
cdq
fmul
ss
dec
mov
fisttp
mov
sub
aam
mov
test
fsubr
dec
fsubr
push
pushf
lock
xlat
outs
add
jl
test
inc
push
jno
ins
data16
out
rol
call
mov
add
inc
nop
cdq
dec
rcr
xor
cwde
mov
mov
stos
test
clc
dec
test
test
xchg
inc
jp
ficom
call
dec
cmp
mov
xchg
adc
call
aas
sbb
xchg
ret
dec
outs
and
mov
dec
or
out
jge
mov
fcmovb
loopne
xchg
(bad)
loope
into
(bad)
outs
sub
into
retf
push
push
ins
ins
and
mov
cmps
and
xor
inc
jmp
mov
bound
test
pop
in
inc
loop
sti
movs
push
jg
push
dec
shl
inc
jmp
dec
pop
and
pop
jnp
pop
mov
lods
enter
(bad)
jns
(bad)
adc
cmp
ficomp
and
aam
arpl
aam
(bad)
push
push
outs
cdq
popa
cmc
pop
mov
adc
mov
cmps
sahf
in
gs
jns
and
or
mov
jo
jg
stos
inc
loope
push
or
jmp
sub
xlat
inc
push
in
outs
xor
xor
(bad)
xor
lock
fsub
ret
mov
dec
clc
mov
aad
(bad)
jns
pop
das
xor
inc
test
mov
xchg
repz
cmp
mov
loope
mov
or
add
popa
fmul
inc
bound
add
(bad)
loopne
std
loopne
adc
scas
mov
xor
jecxz
loop
push
and
xchg
cmps
shr
out
adc
popf
outs
pop
jbe
pop
out
mov
sysexit
xchg
and
movs
(bad)
xchg
push
fwait
mov
mov
mov
(bad)
retf
push
push
popf
xchg
or
sbb
pushf
push
jmp
cmp
stos
sbb
sbb
mov
jno
push
test
into
adc
lock
cwde
lock
test
mov
dec
pmuludq
jne
mov
mov
pop
cld
and
mov
sub
dec
cmp
xor
nop
mov
push
push
sub
(bad)
and
mov
xchg
stos
lods
or
jmp
in
mul
pop
shr
mov
lock
jns
pop
sub
pop
(bad)
mov
pop
div
dec
in
jecxz
mov
xchg
mov
arpl
lods
lea
push
pushf
rcr
jp
mov
lds
or
in
or
or
sti
int
fdivp
mov
sbb
es
in
sbb
cmps
mov
jge
cmp
int
push
loope
cmp
sti
jae
sahf
mov
out
push
jnp
sbb
gs
mov
out
stos
in
adc
aam
inc
fimul
ins
call
neg
add
out
pusha
pop
out
push
popf
xor
xchg
sub
(bad)
daa
fild
jae
iret
and
mov
mov
push
in
scas
dec
mov
inc
lock
les
push
dec
int
out
aam
ins
cld
pusha
jecxz
mov
cmp
lahf
push
push
inc
adc
out
xchg
(bad)
mov
test
shr
or
aaa
aam
jle
int3
repnz
ficom
inc
xor
nop
shl
add
je
fwait
jp
nop
addr16
retf
inc
js
out
nop
jbe
loop
mov
mov
iret
jp
dec
imul
repz
xchg
fstp
movs
xchg
cld
jmp
add
icebp
mov
pop
push
dec
cs
fcomip
jecxz
push
push
cmp
jns
mov
and
je
push
arpl
sbb
mov
inc
rcr
fs
stos
(bad)
cmps
sub
sbb
add
es
push
mov
arpl
jnp
mov
add
sub
xchg
pop
sbb
xchg
dec
sbb
cmp
loopne
into
cmp
adc
ja
ficom
mov
cmp
inc
ins
rcr
cli
pop
(bad)
jecxz
and
mov
xchg
mov
or
pop
push
data16
jmp
imul
and
sub
pop
push
test
lea
std
mov
jmp
cld
mov
pusha
xor
sub
jmp
add
add
mov
push
add
push
fnsave
sbb
mov
aaa
in
les
in
mov
daa
test
adc
adc
idiv
and
jge
loope
add
cmp
mov
mov
ret
add
and
push
add
add
retf
ror
fs
bound
ins
popf
mov
xchg
inc
pop
mov
and
xchg
mov
fistp
inc
sub
outs
cwde
in
mov
sbb
sub
jg
iret
pop
pop
jmp
ja
inc
and
mov
jne
jmp
mov
xor
popf
pop
mov
add
xor
mov
(bad)
inc
ret
rol
cmps
test
jmp
(bad)
pusha
mov
aam
imul
add
jns
push
jmp
add
cmp
loopne
sbb
fsubr
cmp
dec
push
mov
shl
(bad)
push
cmp
lea
or
xchg
mov
pop
mov
setns
or
(bad)
xchg
movs
ficomp
dec
es
sub
(bad)
repnz
loop
sbb
pop
jo
jl
mov
hlt
adc
inc
jmp
(bad)
xcrypt-cbc
cmps
push
or
call
fist
mov
popa
mov
ficomp
adc
int3
lahf
sbb
push
mov
sub
das
mov
sbb
mov
pop
aad
call
out
popa
sub
push
xchg
sti
or
dec
lea
mov
sbb
sub
inc
mov
loop
mov
add
sub
lds
cmp
push
jae
cmp
sahf
int
mov
(bad)
jmp
jmp
sbb
scas
inc
stos
(bad)
mov
dec
stos
std
or
sbb
rcl
push
fsub
pop
outs
push
nop/reserved
imul
mov
in
shl
loopne
scas
mov
retf
jg
add
jnp
inc
cli
xchg
outs
imul
dec
jae
fwait
jp
out
movs
call
xchg
iret
jo
mov
cs
add
das
ret
mov
mov
out
hlt
test
pop
retf
dec
xor
out
mov
mov
(bad)
push
cmp
fstp
or
in
test
push
jbe
sub
push
sbb
ds
cs
les
cwde
cmovl
loope
xchg
jo
(bad)
outs
jecxz
popa
std
pop
mov
jp
retw
xchg
jmp
sub
jecxz
sub
nop
adc
sub
cwde
ds
stos
stos
jg
data16
(bad)
loope
data16
cmp
add
loop
jmp
cmps
stos
aas
sbb
adc
pop
xor
fsubr
inc
xor
scas
add
jle
mov
test
mov
push
pop
in
lods
and
pop
out
or
icebp
mov
mov
dec
jne
push
(bad)
loop
push
xor
es
push
into
and
leave
sbb
mov
scas
call
rcr
cmp
push
dec
sbb
pop
ss
movs
ret
sub
push
call
ins
test
hlt
aam
jne
ds
outs
jp
jmp
rcl
add
aad
fcomp
cli
loope
xor
xchg
aaa
jnp
popf
dec
pop
dec
loopne
sub
cmp
adc
push
jns
or
mov
stc
clc
in
(bad)
bound
(bad)
jne
outs
sub
dec
push
cmc
mul
loope
arpl
and
and
test
mov
inc
jb
jbe
test
pop
cmp
aas
pop
add
add
aas
or
aas
mov
jg
sti
pop
adc
ja
adc
ds
movs
or
dec
es
outs
pop
in
(bad)
(bad)
cmp
add
dec
inc
mov
cmp
vaddps
and
lods
mov
push
or
mov
mov
aad
arpl
out
pop
inc
scas
adc
enter
sub
adc
hlt
and
bound
pop
dec
mov
jl
ja
out
push
in
iret
loope
out
or
push
adc
cld
(bad)
mov
sar
or
jmp
aas
fcom
pop
les
or
push
(bad)
sbb
dec
cmp
push
push
xor
or
popa
daa
push
stc
xchg
inc
jl
jp
and
dec
pusha
inc
xchg
or
xor
leave
or
mov
push
pusha
dec
jmp
mov
(bad)
rcl
push
ja
cdq
loope
in
sbb
mov
loope
push
aad
scas
push
lods
sahf
xor
out
aad
or
imul
pop
jge
call
jle
pop
pop
mov
add
mov
arpl
or
in
add
jle
(bad)
jmp
pop
mov
jo
cmc
movs
jg
push
mov
stc
xrelease
ficom
ret
jnp
neg
xor
aaa
jne
test
test
jmp
repz
add
push
clc
pop
dec
rcr
pop
cmp
sub
cld
je
cmp
push
adc
adc
pop
mov
loope
dec
retf
imul
in
add
jle
icebp
inc
xor
(bad)
inc
mov
pushf
test
jg
rcl
xchg
data16
rol
cmc
push
pop
mov
xchg
sti
mov
lods
xsavec
popa
adc
movd
cmp
xchg
nop
or
sbb
push
fst
pop
mov
sub
xchg
lock
cmp
sahf
in
xchg
hlt
xor
xchg
stos
xchg
jnp
sub
out
cmps
ret
stc
fnstsw
jo
inc
shl
xor
cmps
aam
pushf
fiadd
sbb
sbb
pop
loope
popf
push
or
inc
push
(bad)
and
or
sahf
test
(bad)
cmp
add
jns
jnp
jno
mov
sahf
push
dec
retf
in
scas
ins
sub
stos
dec
aam
and
jg
inc
(bad)
stos
outs
bound
int3
sahf
bound
scas
xchg
add
xchg
or
push
jno
jmp
(bad)
jmp
shr
xchg
mov
enter
jo
sbb
mov
(bad)
rcr
into
std
mov
cld
ret
sub
push
(bad)
pop
jmp
bound
xlat
rcl
xchg
in
jle
pop
push
dec
out
jmp
mov
enter
addr16
mov
push
cmp
dec
(bad)
fsubr
mov
xchg
lods
dec
xor
out
jge
mov
pusha
jmp
pusha
shr
out
sbb
xchg
call
or
add
adc
(bad)
fld
push
xor
or
addr16
loop
rcr
(bad)
dec
call
dec
inc
rcl
mov
mov
jge
(bad)
pop
jne
sbb
call
push
xor
cdq
pushf
mov
or
out
sbb
js
inc
js
aad
cmp
xor
adc
lods
test
push
out
xchg
sbb
fs
push
add
mov
pop
ss
ror
or
in
call
jbe
popf
sub
arpl
and
loope
lea
inc
mov
jmp
dec
sar
fucomip
movs
xor
add
ins
popa
sub
mov
repz
aaa
mov
or
mov
inc
(bad)
dec
pop
jmp
sub
xchg
arpl
dec
dec
(bad)
jle
retf
repnz
cmp
cmps
sub
push
cmps
repnz
mov
inc
jp
push
mov
and
pop
push
xor
out
or
test
mov
cwde
imul
mov
cmp
les
inc
scas
pop
daa
mov
xor
xor
adc
cmp
shr
gs
inc
sbb
loop
sbb
aad
mov
or
pop
jae
lods
je
mov
jb
lods
loopne
test
nop
and
add
add
mov
fstp
xchg
dec
cli
push
loopne
pop
aad
ret
dec
jge
dec
fs
in
sahf
enter
cwde
je
popf
inc
sti
addr16
enter
inc
clc
cmp
mov
dec
pushf
out
gs
xchg
sbb
mov
xchg
push
mov
sub
or
and
pushf
pusha
mov
inc
or
aam
dec
mov
fmul
mov
retf
inc
mov
test
mov
sub
cmp
xor
out
xchg
jp
cld
add
(bad)
inc
pop
lock
xor
movs
cmc
das
and
je
pop
push
aas
sub
adc
xlat
pop
mov
push
in
(bad)
push
lods
imul
mov
cmp
stc
out
push
inc
arpl
test
popa
cdq
add
out
jmp
jo
stc
jbe
movs
inc
mov
leave
xchg
cdq
inc
dec
stos
and
and
out
or
popa
mov
xchg
cwde
mov
mov
sahf
add
push
outs
mov
adc
xchg
push
mov
mov
hlt
es
jmp
in
pop
sub
sbb
add
mov
leave
adc
das
sbb
add
aaa
adc
jle
adc
jne
leave
sub
jb
aaa
dec
call
(bad)
pop
pushf
in
jne
leave
pop
pop
in
cmps
cmc
jo
rol
jo
inc
mov
add
repnz
xchg
aam
dec
adc
cwde
inc
or
sub
mov
mov
or
jae
inc
lods
movs
push
jo
inc
push
aas
call
jbe
add
or
and
add
sahf
(bad)
call
cmp
and
dec
xchg
pushf
sbb
ret
jo
jl
std
sahf
shl
in
jl
movs
lock
jbe
daa
pop
fwait
movs
je
das
stc
xchg
adc
stc
adc
push
retf
jmp
(bad)
sub
sar
cmp
pop
jmp
sub
repz
icebp
xor
fimul
xchg
xor
mov
fimul
dec
inc
outs
leave
arpl
xor
icebp
and
cmp
arpl
push
data16
out
leave
cmps
mov
shl
jecxz
pushf
pop
and
adc
iret
(bad)
sub
push
(bad)
pop
mov
and
sub
retf
inc
mov
outs
xchg
jl
jnp
daa
push
sub
std
xchg
mov
jne
or
inc
mov
dec
inc
xor
or
(bad)
pop
cli
rol
or
mov
(bad)
out
adc
bound
xor
cdq
out
(bad)
rcr
cmp
movs
push
cdq
jmp
sub
push
add
or
ss
push
pop
pop
push
leave
cmp
sub
popf
enter
jmp
add
test
xchg
jmp
or
sub
adc
fiadd
mov
test
std
es
loopne
pop
ins
mov
dec
add
fist
(bad)
xor
jne
dec
dec
cmp
add
xor
adc
aaa
sub
das
push
sahf
into
and
jns
je
mov
push
sbb
xor
(bad)
or
fucomp
xor
ins
addr16
cmp
cmps
cmp
mov
sub
fistp
inc
jg
jne
call
fnsave
push
jbe
cmp
pop
dec
in
loop
jno
pop
in
sbb
jg
push
push
cmps
retf
xor
sub
retf
sub
dec
mov
dec
sub
lock
mov
leave
into
popa
jno
jmp
imul
hlt
outs
loope
mov
fnstcw
call
sti
bound
stc
xor
gs
bound
mov
scas
xor
shl
ss
movs
iret
cmp
sar
stos
jle
inc
push
and
mov
jbe
jmp
or
adc
mov
lahf
aam
jmp
pop
xchg
dec
xchg
mov
push
daa
mov
out
pop
jl
popa
push
popa
inc
cld
ja
pushf
pop
sub
xor
jl
xchg
sbb
push
sbb
mov
mov
jns
sbb
push
shl
dec
ins
stos
mov
cmp
in
fidivr
ret
dec
jae
bsf
jo
lods
pusha
inc
lds
sub
cmp
mov
repz
shl
(bad)
adc
and
inc
cmp
push
mov
pusha
or
pop
cs
pop
ret
ja
or
inc
push
sub
sub
jne
in
inc
stos
gs
gs
jmp
es
or
lods
es
mov
add
adc
pop
mov
stos
add
retf
xor
or
rcl
xor
rcr
mov
push
stos
sbb
and
sub
jb
(bad)
int3
icebp
jmp
jp
push
cdq
xor
sbb
mov
int3
pop
(bad)
repz
lods
adc
fwait
adc
push
je
push
fst
daa
ins
arpl
daa
jb
cmp
repz
(bad)
out
and
in
jno
not
jno
sub
push
div
enter
xlat
repz
call
outs
sub
pop
lods
daa
cmp
ficomp
xchg
rcr
idiv
jne
adc
mov
scas
ins
movs
cmp
cmp
sti
cmp
xchg
aam
lods
(bad)
out
mov
dec
je
sti
in
sahf
sub
shl
movs
out
sar
mov
dec
jno
pop
mov
hlt
out
mov
sar
jp
call
pop
push
ja
shr
pushf
dec
cmp
sub
stc
add
cmp
add
(bad)
cdq
dec
aam
pop
das
clc
js
jl
dec
ja
out
test
adc
pop
das
mov
into
xchg
sub
push
and
xchg
or
jecxz
div
jns
jecxz
jp
ins
mov
pop
and
sub
pop
mov
movs
cmp
push
or
cwde
add
sub
(bad)
out
adc
mov
outs
popa
dec
(bad)
js
jg
inc
jecxz
stc
mov
fimul
push
retf
inc
or
xchg
in
fs
arpl
jmp
jl
xchg
adc
(bad)
or
pop
and
push
int3
and
push
jmp
(bad)
stos
fs
xor
adc
sbb
loop
mov
and
repz
test
nop
add
jae
sub
pop
jnp
leave
pop
mov
dec
push
mov
xchg
add
adc
movs
cmp
mov
pusha
cmp
stos
sub
movs
cdq
ss
or
aaa
sub
clc
ins
cmp
fnstcw
or
scas
jb
jns
mov
not
aad
(bad)
mov
cmps
inc
cmp
idiv
mov
in
shr
out
ins
imul
in
push
aas
(bad)
jns
adc
or
mov
leave
pop
popf
shl
jle
jae
jle
push
out
std
ds
dec
bnd
fld
adc
loopne
xor
popa
inc
ja
xor
not
test
jle
mov
fld
sub
jmp
stos
push
cmp
sbb
sub
mov
mov
les
int3
popf
sbb
fcmovu
ins
call
movs
cmp
mov
sbb
push
sub
sbb
jnp
(bad)
lock
(bad)
push
mov
and
mov
ins
lea
xchg
je
sbb
movs
(bad)
and
adc
fcom
and
jno
shr
clc
inc
push
mov
mov
(bad)
add
cmps
and
push
clc
pop
push
imul
sub
nop
fld1
or
repz
nop
bound
jae
ficomp
in
lea
jae
enter
cld
or
jl
and
dec
cmps
cmp
jbe
mov
jle
mov
push
xor
xchg
xor
sub
test
cs
push
jl
mov
mov
pop
into
add
pusha
jae
fist
dec
jl
call
jns
in
mov
outs
jmp
stos
sub
push
cmp
in
fist
xchg
dec
adc
adc
out
fist
dec
push
adc
movs
fdiv
xchg
and
out
cmp
cmps
mov
or
adc
movs
cwde
arpl
jb
out
test
fwait
pcmpeqw
pusha
sti
enter
imul
jge
(bad)
aad
mov
jl
dec
mov
int
sbb
dec
mov
fld
fs
ror
mov
jmp
push
rcr
lds
jnp
inc
mov
in
add
stc
mov
cdq
mov
and
push
sar
and
mov
(bad)
mov
outs
popf
out
ds
aam
ret
fwait
gs
inc
inc
cmp
or
leave
scas
adc
push
mov
sub
fld
mov
in
(bad)
sbb
xchg
xchg
int
sub
jb
idiv
mov
or
xchg
or
ret
push
stos
sub
pushf
fisub
sbb
div
pusha
inc
dec
je
dec
xchg
gs
push
inc
cmp
cmps
jecxz
fcom
mov
fiadd
xor
leave
fild
out
sub
push
mov
fiadd
inc
xchg
cmps
pop
mov
shl
cmp
push
or
in
int
inc
dec
mov
and
ss
retf
into
xchg
outs
fwait
les
in
mov
movs
inc
fcomi
push
data16
out
iret
push
(bad)
inc
jg
mov
sbb
rol
jp
dec
pop
push
cmps
mov
hlt
leave
or
jnp
sub
xor
jne
and
jno
ss
xor
enter
adc
test
lds
int
or
ret
shl
fs
(bad)
rcr
scas
mov
and
and
les
mov
adc
cmps
or
xor
xchg
(bad)
in
ds
ret
adc
mov
sub
fisttp
stos
scas
nop
mov
push
mov
push
movs
or
ins
cmp
pop
mov
mov
test
inc
adc
pop
fist
push
repz
and
xchg
cmp
pop
or
cmps
dec
sub
or
adc
cmp
add
xchg
pop
adc
adc
ficomp
cld
inc
(bad)
cwde
push
pop
call
repz
mov
retf
xor
fcom
cmp
xchg
sti
cmp
inc
shl
rcl
pop
popa
(bad)
fwait
dec
push
shl
push
fnstcw
jo
shl
dec
mov
sub
jl
xchg
jmp
add
mov
inc
and
rcr
outs
fwait
pusha
pop
test
mov
les
mov
push
frstor
push
mov
cmc
mov
mov
or
and
or
fwait
gs
loope
mov
push
sbb
jb
push
stc
sub
pop
int
imul
fisubr
inc
sbb
les
mov
fs
mov
hlt
push
xchg
and
(bad)
leave
jp
cmp
gs
fimul
cmp
mov
add
push
js
call
mov
xor
xor
push
and
jae
push
sub
mov
xchg
cmp
and
xchg
push
or
leave
inc
inc
or
sbb
xchg
adc
sub
push
and
ficomp
sub
outs
adc
(bad)
cmp
sbb
and
xchg
adc
sub
and
dec
mov
ja
iret
sahf
loop
xchg
and
xchg
dec
(bad)
fnstsw
adc
mov
hlt
dec
es
dec
fild
pop
sub
rcr
int
pop
pop
adc
sbb
cs
popa
and
adc
adc
cdq
je
pop
jmp
test
dec
cdq
mov
jae
inc
retf
push
inc
xor
shl
add
loopne
add
sbb
xor
shr
lods
rol
lods
gs
scas
outs
movs
push
sahf
pop
imul
or
fcomip
inc
(bad)
idiv
mov
sub
mov
mov
mul
(bad)
ins
jge
test
ja
cwde
aam
or
scas
xchg
jmp
stc
ret
sti
dec
out
out
mov
jg
mov
jb
lea
xchg
gs
adc
sar
iret
dec
or
xor
shl
scas
adc
fldcw
test
fnstcw
sub
push
and
add
jbe
pop
(bad)
jmp
cmp
sbb
shl
daa
sahf
das
pop
shl
push
inc
test
out
or
jl
imul
jne
sbb
mov
jge
xchg
daa
inc
rcl
inc
adc
push
cmp
std
dec
cmps
je
int3
ret
sbb
xor
mov
pop
(bad)
repnz
jmp
cmp
pushf
fs
iret
push
out
push
outs
mov
xchg
xchg
and
or
pop
xchg
adc
js
retf
cmps
sub
dec
shr
hlt
xor
sbb
dec
mov
aad
retf
shl
xchg
adc
stc
pop
nop
jecxz
sbb
or
std
dec
pushf
cdq
popa
in
xchg
pop
cmc
cmp
mov
jnp
push
inc
outs
div
push
pop
or
xor
dec
xchg
outs
pop
xor
cmp
xlat
mov
(bad)
sub
push
(bad)
das
sub
in
cmp
in
loope
rcr
xchg
mov
rcl
arpl
clc
mov
ret
jae
xor
ins
int3
stos
or
sahf
in
mov
gs
push
loop
inc
ja
and
xchg
and
pop
rcl
inc
out
cmp
shl
xchg
outs
call
retf
cmp
or
dec
jno
enter
pop
lea
lahf
ret
dec
fdiv
pushf
les
lock
in
data16
add
xchg
push
add
adc
shl
mov
push
(bad)
lods
push
pop
mov
dec
outs
inc
push
adc
pop
sbb
sahf
test
inc
shl
pop
shl
inc
lahf
mov
sub
mov
out
in
sbb
test
cmps
in
outs
xor
pop
in
xchg
hlt
sti
mov
(bad)
in
cmp
ret
push
es
pop
mov
push
and
mov
stc
pop
xchg
add
fldcw
gs
mov
mov
cmps
push
inc
mov
sbb
call
xchg
sbb
mov
cmps
mov
add
lods
cmc
mov
test
fs
xor
pop
xor
adc
adc
call
clc
inc
(bad)
das
outs
sub
sbb
iret
push
sub
daa
enter
jb
and
mov
dec
xor
dec
std
adc
and
pop
dec
shl
nop
xchg
xchg
pop
mov
shl
jmp
popf
in
inc
inc
pop
inc
or
mov
and
jp
(bad)
cs
sub
pushf
gs
mov
jecxz
cs
pusha
pop
mov
sar
jp
mov
adc
adc
mov
out
jnp
cmp
rol
pop
es
cwde
cdq
add
out
pop
cmp
out
inc
call
sbb
dec
xchg
or
jp
dec
mov
adc
adc
or
das
shr
mov
cs
sti
repnz
adc
add
jmp
and
in
icebp
jmp
cli
ds
mov
imul
push
dec
in
faddp
cli
lea
adc
add
loop
test
sbb
jle
pop
cli
cmps
loopne
aaa
mov
pop
pop
sar
inc
fs
mov
cld
icebp
cmp
sub
mov
shl
aaa
jmp
stos
adc
sar
fsubr
mov
ror
mov
ins
xor
adc
sub
lea
fs
les
xchg
outs
in
imul
and
mov
pop
and
neg
(bad)
and
adc
jb
cmc
test
push
retf
fstp
outs
test
sub
gs
pop
loope
mov
or
jecxz
xchg
scas
je
xchg
push
ficomp
jb
push
jp
(bad)
sub
or
sti
mov
inc
xor
xchg
jmp
xor
sahf
shl
and
cmp
pop
push
das
jae
pop
mov
pushf
daa
push
mov
mov
inc
pop
out
sar
scas
xchg
dec
loop
or
xchg
add
test
ins
inc
push
std
fwait
add
cdq
(bad)
cmp
cmc
adc
mov
je
xor
fisttp
pushf
jmp
pop
lods
jnp
(bad)
iret
test
(bad)
loopne
outs
mov
ins
dec
(bad)
icebp
jmp
xchg
mov
inc
stc
icebp
and
pop
sub
push
dec
inc
mov
mov
cmp
pop
ss
sub
pop
ins
les
out
cmps
and
lds
aam
vandps
push
mov
es
rcr
cs
dec
sti
dec
mov
mov
icebp
xor
mov
in
fcmovbe
xchg
(bad)
rcr
add
clc
pop
ja
sbb
loope
sub
pushaw
ja
mov
and
or
jmp
test
cwde
gs
aas
rcl
(bad)
clc
mov
mov
mov
or
push
push
dec
in
stc
sbb
ss
inc
ja
sbb
repnz
mov
outs
fwait
inc
ja
test
jno
lds
mov
mov
cmp
adc
xchg
lahf
xchg
and
xchg
dec
push
sti
idiv
sbb
pop
xlat
xor
mov
push
dec
je
mov
xchg
mov
scas
mov
jne
xor
adc
pop
or
xchg
mov
xor
and
push
ins
gs
xor
mov
xor
int3
xor
les
sub
add
fld
mov
(bad)
retf
daa
mov
out
push
cmp
in
iret
repz
(bad)
test
mov
or
lahf
(bad)
repz
lods
dec
daa
fwait
ret
frstor
jbe
sub
movs
iret
and
dec
jb
fs
aad
mov
jmp
inc
xchg
imul
sahf
fbld
(bad)
xchg
retf
mov
xchg
jne
call
pop
mov
fwait
xchg
fs
std
inc
(bad)
shl
mov
and
mov
jmp
xor
inc
mov
mov
mov
and
xchg
arpl
retf
stos
pop
sub
mov
outs
sbb
mov
cmps
jmp
je
jmp
pop
push
push
cmp
clc
push
dec
(bad)
mov
push
push
and
dec
xor
dec
dec
mov
xchg
inc
call
dec
adc
push
cwde
sub
push
mov
loop
(bad)
mov
adc
lods
in
int
gs
or
mov
loope
xor
mov
out
adc
aam
sbb
(bad)
hlt
cmc
dec
sar
jp
test
call
sbb
or
push
pop
inc
and
mov
cld
cmp
aam
(bad)
push
jmp
das
lea
inc
les
(bad)
inc
xchg
(bad)
cwde
adc
stc
push
mov
repnz
ja
(bad)
mov
mov
dec
jno
out
jo
cmp
mov
xor
dec
ja
in
mov
inc
repz
cmps
cmp
rcl
sub
xor
pop
push
cmp
aam
xchg
push
or
xor
dec
push
nop
int
inc
mov
xor
sbb
jecxz
add
fcom
jmp
inc
imul
inc
fidivr
pop
out
es
pop
inc
(bad)
jns
sub
cli
xchg
sub
xlat
jl
js
movs
mov
inc
mov
xchg
nop
pop
clc
iret
les
or
test
mov
in
adc
mov
pop
cmp
outs
cmp
push
dec
push
jmp
ret
sub
stos
inc
xlat
sub
test
in
jns
and
lea
pop
xchg
push
xor
imul
inc
hlt
jb
xchg
xchg
imul
and
and
imul
cmp
mov
sbb
mov
inc
neg
in
test
inc
pop
lock
inc
xchg
pop
ficom
std
push
loope
add
mov
js
test
icebp
test
test
mov
sub
sub
adc
inc
pop
or
fdivr
mov
out
cmp
xchg
add
dec
in
mov
ins
lea
push
pop
int
outs
mov
(bad)
aas
in
add
gs
imul
cli
jp
sbb
movs
fwait
retf
mov
or
push
lock
xchg
mov
int
pop
push
ret
outs
push
inc
mov
int
xchg
mov
jne
mul
fucomp
push
ror
shl
xchg
or
shr
inc
in
adc
lahf
cmp
cmp
lods
inc
xchg
cwde
push
leave
lods
inc
ds
out
shl
jl
mov
call
mov
push
push
cdq
cmps
retf
and
aaa
mov
mov
loop
test
or
cmc
pop
fmul
pop
push
sbb
adc
sub
and
sar
xchg
ins
mov
jb
or
mov
jge
inc
cmp
cmc
mov
cs
scas
xor
pop
inc
xlat
xchg
or
hlt
xchg
sbb
push
mov
loop
push
and
in
cmp
repz
stc
sub
dec
mov
pop
cmp
cmp
es
mov
adc
out
mov
pusha
sub
dec
mov
or
fwait
fs
mov
nop
sub
cwde
dec
mov
js
and
or
neg
jbe
inc
out
mov
jmp
mov
in
mov
xor
jmp
out
inc
out
jmp
test
frstor
adc
xlat
lods
and
and
lock
cmp
add
cmp
jmp
ds
call
mov
mov
popf
lods
dec
and
div
xchg
mov
jno
aad
in
scas
mov
pop
cs
sar
(bad)
pop
cmp
mov
gs
bound
xchg
inc
inc
scas
std
and
pop
loopne
ret
add
std
jl
call
sbb
scas
clc
cmovle
jmp
cli
leave
addr16
das
lods
gs
movs
pusha
frstor
movs
dec
retf
push
fld
in
inc
cmps
lock
outs
pop
push
loope
dec
mov
sahf
arpl
xlat
pusha
push
in
inc
add
and
in
sub
jae
lahf
jbe
cmp
(bad)
xor
mov
and
jmp
outs
inc
xor
mov
xlat
cmp
(bad)
call
int
mov
pop
sbb
cmps
cs
dec
test
push
call
fldenv
in
sbb
js
dec
out
pop
call
loop
cli
sbb
std
mov
outs
(bad)
icebp
dec
cmc
bound
pop
push
popa
adc
pop
scas
popf
cs
sti
call
pop
and
xor
jnp
in
xor
leave
cwde
pop
and
mov
pusha
add
imul
lds
mov
pop
sub
loope
and
(bad)
pop
or
in
mov
mov
test
retf
test
dec
pop
out
or
xchg
xchg
ror
mov
dec
xchg
sub
repnz
inc
or
mov
cmc
ins
xchg
xor
jns
jae
inc
mov
and
shr
jbe
out
fadd
test
mov
mov
xchg
or
cmps
je
mov
sbb
ja
rcr
outs
pop
data16
or
mov
enter
fdiv
sbb
les
js
mov
jge
push
add
push
push
test
out
fnsave
xor
fiadd
jecxz
mov
ins
nop
outs
sub
and
fsub
or
iret
frstor
dec
jo
fst
fisttp
bound
or
dec
test
bound
stos
or
aad
inc
or
jne
bound
and
dec
mov
sti
test
mov
mov
jo
mov
sub
clc
leave
test
and
rcl
fimul
pop
lods
cmc
mov
xor
jbe
xchg
cmp
jmp
mov
neg
cmp
jbe
pop
add
mov
rcr
mov
adc
out
push
xchg
mov
xchg
ja
aas
pop
add
in
push
test
xor
leave
imul
es
cs
push
loop
add
stos
ins
push
out
out
jbe
and
jge
mov
add
loope
cdq
in
lods
lock
fmul
out
popa
push
add
test
stos
inc
and
(bad)
push
jmp
mov
adc
es
popf
cmp
fnsave
cs
stc
jb
adc
sub
cmps
hlt
test
jo
mov
ja
arpl
pop
mov
mov
sbb
icebp
push
loope
cmps
mov
jb
jmp
dec
stc
and
sbb
push
iret
nop
sub
out
mov
and
ds
adc
ja
cmps
mov
in
(bad)
cmc
push
push
div
xor
ss
iret
mov
jne
and
aam
mov
dec
(bad)
in
adc
jmp
dec
mov
lahf
daa
and
js
push
sbb
jecxz
jl
lds
or
retf
adc
push
gs
not
in
(bad)
iret
adc
scas
sbb
lods
sbb
push
xor
add
mov
push
sahf
mov
fisubr
push
lahf
push
mov
loopne
xchg
xchg
xlat
dec
ror
cld
cli
sub
out
jp
fdiv
rcl
sbb
fsubr
cmp
retf
icebp
(bad)
adc
jns
add
push
push
aad
stos
sahf
or
cli
inc
shl
or
jns
mov
push
retf
fnstenv
das
out
inc
leave
data16
push
cs
pop
or
stc
ficomp
cmp
cli
outs
mov
stc
inc
stc
fwait
and
test
xchg
jle
and
push
dec
test
xor
mov
lods
mov
sub
xchg
iret
jge
sbb
int3
jecxz
(bad)
dec
movs
cld
pop
adc
cmp
mov
pop
cmp
neg
cmp
fnstenv
push
out
pop
dec
adc
arpl
dec
adc
popa
mov
add
int3
add
mov
sub
loope
sub
xlat
inc
push
retf
xor
dec
mov
and
fwait
add
ret
mov
dec
jl
lahf
(bad)
jb
pop
mov
and
jb
fidiv
jmp
or
xchg
sub
dec
cmp
push
daa
cmp
jo
in
xor
adc
ds
inc
lock
int3
jmp
mov
stos
mov
mov
and
sub
mov
mov
sub
pop
retf
cmc
pop
mov
add
fistp
push
seto
shr
inc
pop
adc
add
lock
in
rcr
ins
shl
std
fidiv
push
mov
std
pusha
inc
aam
pop
jge
jb
pop
cmp
in
xor
aam
lock
out
mov
xchg
adc
or
mov
or
lods
jecxz
out
dec
lock
xor
pop
add
mov
stos
rcr
sbb
scas
bound
push
cmps
arpl
repnz
push
mov
mov
adc
jl
out
and
ds
je
sti
mov
inc
cmps
lds
fwait
xor
js
fistp
lea
jne
jg
div
pop
retf
mov
clc
adc
and
jnp
sbb
push
sahf
jp
dec
imul
xor
rcr
mov
lea
add
dec
xchg
outs
mov
test
cmps
ss
dec
xor
aaa
mov
pushf
cli
sbb
pop
adc
daa
sbb
push
psraw
inc
xor
icebp
aaa
fwait
sahf
inc
xlat
sar
jp
xor
sbb
cli
inc
js
push
and
(bad)
mov
inc
mov
pop
jg
daa
mov
jbe
jnp
dec
enter
daa
rcr
push
lock
jl
(bad)
cmp
int
jl
inc
retf
fldcw
repnz
pop
add
sbb
sub
push
icebp
sbb
xor
mov
mov
cmovbe
dec
adc
jmp
mov
push
sub
sub
cmp
shl
lods
sahf
xor
aam
jo
sar
rcr
jno
sub
cmp
sub
repz
mov
xchg
mov
call
jp
int3
ret
cmp
ret
stos
jecxz
pop
dec
adc
mov
pushf
mov
popa
jmp
mov
test
xchg
popa
(bad)
aam
mov
xor
push
adc
call
shl
shl
or
or
data16
stos
cmp
imul
pusha
lea
pop
bound
push
fs
pop
jb
inc
mov
push
retf
cmp
shr
mov
push
loope
xor
rcr
jl
inc
leave
cmps
pop
loope
and
sbb
mov
(bad)
cli
cmp
jge
sbb
jb
or
xor
inc
xchg
mov
inc
(bad)
jecxz
inc
xlat
mov
fmul
mov
test
nop
adc
in
pop
push
and
rcr
int3
ret
dec
rol
in
push
push
cli
and
enter
inc
jecxz
jne
xchg
or
jmp
call
cmp
adc
sub
cmp
cmp
xor
fsub
mov
pop
xchg
cmp
pushf
jle
mov
inc
outs
ret
sub
pop
mov
cwde
xchg
call
clc
jnp
sti
std
jg
scas
loope
jmp
test
retf
test
xchg
sub
retf
dec
sub
shl
sti
mov
arpl
sbb
sbb
pop
sub
mov
lock
mov
jmp
cmc
pop
sbb
mov
inc
jmp
(bad)
xchg
loope
push
lods
loop
addr16
jb
mov
in
cdq
imul
inc
cmps
mov
push
pop
outs
leave
mov
repz
mov
inc
ret
mov
jbe
sub
movs
jbe
(bad)
clc
xchg
sub
lock
fstp
xor
cmp
inc
pushf
and
mov
push
outs
mov
xor
addr16
mov
daa
fadd
int3
or
xchg
aas
dec
arpl
xchg
(bad)
xchg
mov
mov
stos
ja
jns
sbb
cs
and
jle
sti
(bad)
cld
mov
mov
mov
repz
(bad)
or
jmp
pusha
fucomi
je
aaa
shl
mov
push
push
ror
leave
lea
xchg
lock
mov
cmp
(bad)
and
or
loop
dec
in
movs
(bad)
push
ja
adc
cdq
or
dec
cmp
pop
lds
pop
fdivr
cmp
std
adc
sub
pop
ror
unpckhps
dec
sub
inc
and
mov
loope
adc
jns
xor
mov
sbb
stc
sub
fdiv
push
(bad)
jae
aas
punpckhdq
mov
adc
inc
inc
sub
ret
xlat
test
ins
jge
jno
outs
xchg
ss
shl
stc
shr
ret
aaa
jl
shl
sbb
pop
mov
cmp
inc
test
sar
mov
and
fwait
call
sbb
int
arpl
fidiv
(bad)
mov
fidivr
rcl
mov
push
cwde
fstp
dec
in
or
and
jle
sbb
aaa
out
enter
aaa
mov
adc
xchg
xor
retf
mov
mov
sbb
push
lods
inc
pop
jne
cld
push
jmp
pop
push
mov
jno
dec
(bad)
xor
or
cmps
movs
add
and
xchg
fiadd
dec
jnp
mov
aas
loope
and
in
and
mul
and
(bad)
mov
sbb
(bad)
mov
jmp
aad
mov
dec
popf
cli
dec
dec
std
cmp
push
ins
pop
idiv
mov
jbe
cmps
mov
or
sub
cmp
or
sbb
dec
call
shr
jo
in
mov
in
pop
and
js
dec
jge
pop
sbb
mov
inc
outs
sub
bound
or
push
xor
out
xchg
cmp
retf
dec
cmp
or
jno
ins
cmp
pop
test
pop
xchg
icebp
mov
dec
inc
daa
pop
xor
dec
pusha
and
jmp
out
popf
nop
mov
daa
add
mov
push
scas
xchg
imul
pop
mov
fs
mov
lea
fwait
in
push
retf
enter
dec
sbb
jno
lods
push
arpl
fmul
(bad)
lods
pop
cmp
xor
loopne
leave
xchg
(bad)
repnz
and
jnp
inc
inc
cmp
mov
loope
aad
mov
sti
test
jecxz
xor
stos
mov
arpl
inc
addr16
neg
es
xchg
imul
adc
(bad)
cmp
cwde
push
out
movs
aam
push
push
sar
or
test
inc
(bad)
mov
or
sub
or
or
shl
mov
sub
fisttp
push
jp
test
movs
cmp
out
aaa
shr
push
fst
inc
mov
arpl
cmp
lods
mov
pop
mov
sbb
(bad)
mov
into
or
dec
and
cmp
data16
ins
and
into
mov
arpl
test
cmps
sub
dec
inc
out
mov
mov
dec
imul
mov
lahf
mov
loop
and
mov
sub
push
mov
pop
ins
dec
push
pushf
dec
les
mov
(bad)
dec
sub
inc
xor
cmp
push
sbb
mov
xchg
in
mov
hlt
mov
jmp
fwait
(bad)
and
loope
pop
jb
pop
ret
inc
int
out
dec
(bad)
sbb
movs
or
sbb
movs
ds
psllq
pop
stos
loope
call
(bad)
sar
jb
dec
das
adc
ins
mov
ins
shl
and
or
cdq
dec
(bad)
fcomp
and
pusha
fwait
test
xor
call
jge
call
sub
addr16
dec
pop
std
add
cmps
pop
loopne
inc
or
push
pop
mov
cmp
add
push
jmp
imul
inc
loope
pop
mov
push
aaa
into
adc
mov
inc
loope
sar
div
shr
dec
xor
pop
push
(bad)
test
xor
jge
cwde
hlt
iret
pop
popa
mov
clc
mov
dec
addr16
pop
ins
data16
push
clc
jg
pop
pop
jl
aad
dec
inc
ret
push
fadd
mov
xor
mov
mov
sbb
ja
pusha
jnp
div
pop
lahf
mov
das
test
or
or
push
adc
lds
sub
or
mov
icebp
sti
test
popf
mov
jmp
sbb
xchg
ret
dec
jmp
push
pop
cmp
into
or
leave
jle
cmp
sub
mov
stc
(bad)
out
jmp
leave
mov
pop
mov
aas
xchg
dec
inc
jnp
jp
enter
sbb
adc
mov
jp
cwde
jle
imul
fs
pop
push
adc
pop
xor
sub
jl
inc
sbb
mov
and
lods
or
loop
ret
dec
lods
in
or
mov
ror
(bad)
imul
or
cdq
push
addr16
or
std
test
or
sbb
cli
inc
xor
jae
sub
es
mov
mov
adc
xor
mov
(bad)
push
loope
jle
stos
cmc
or
cmps
(bad)
and
sub
or
cli
mov
lods
mov
arpl
(bad)
pusha
lods
mov
xor
mov
ds
mov
jecxz
iret
inc
push
xor
dec
sbb
mov
sbb
ins
rol
in
fucomi
mov
movs
aas
lods
mov
pop
cmp
in
pop
stos
add
cmp
add
adc
aaa
xchg
pop
adc
daa
xchg
test
mov
inc
nop
test
add
xor
sub
add
retf
and
jg
mov
pusha
mov
dec
or
lds
sub
lock
pop
cdq
pop
lds
movs
fs
jnp
push
xchg
aas
jmp
ds
and
test
pop
shr
and
out
jnp
mov
cmp
mov
imul
aaa
imul
or
sbb
sub
fidiv
mov
js
aam
mov
out
(bad)
push
sub
push
push
fadd
pusha
movs
cmps
mov
jno
mov
mov
int
mov
fmul
out
jbe
fwait
inc
mov
mov
sahf
aaa
dec
shl
imul
leave
fmul
jae
sbb
push
inc
jbe
lea
ins
dec
push
neg
xlat
push
aam
push
sbb
dec
stos
repz
mov
xchg
xchg
ins
pop
xchg
cdq
xchg
div
xchg
aas
lock
js
push
(bad)
cmp
cli
shl
ret
add
test
rol
push
test
cmp
push
imul
dec
add
fisubr
not
repz
jno
in
jle
sbb
(bad)
adc
mov
mov
in
jne
ss
cmp
xor
jg
xor
push
pop
mov
dec
std
mov
bswap
test
inc
mov
or
fidivr
repz
(bad)
cld
push
jae
es
(bad)
sti
dec
fnstenv
jp
js
shl
and
sbb
(bad)
cmp
pop
(bad)
mov
xchg
out
mov
or
test
mov
cld
inc
jns
mov
test
out
add
fisttp
in
mov
cmp
dec
mov
pop
loope
lds
aas
and
jl
icebp
movs
xchg
nop
pop
mul
dec
bnd
out
pop
xor
fld
inc
jg
xor
xor
pop
xor
xor
pop
adc
imul
retf
test
xchg
push
cmp
sti
mov
jecxz
std
mov
(bad)
gs
repz
fwait
ret
xchg
sbb
pushf
push
pop
ins
push
imul
jg
cli
ins
popf
(bad)
pop
je
(bad)
mov
sub
fisubr
cmp
scas
sbb
and
dec
out
jae
out
push
clc
push
popa
call
pop
(bad)
outs
dec
imul
imul
push
jno
retf
pop
add
cmps
arpl
fistp
and
jecxz
push
frstor
aaa
mov
ja
je
sbb
cwde
fild
push
mov
aam
lods
fld
(bad)
test
ret
aam
xacquire
mov
rcr
call
pop
sar
test
sub
out
jb
pop
loope
popf
mov
rcr
pop
fcomi
push
std
or
test
or
out
outs
repnz
cdq
rcl
ret
ss
or
adc
sti
dec
mov
nop
xor
dec
(bad)
xor
adc
sub
mov
inc
imul
pushf
mov
es
jns
xchg
in
shl
outs
dec
jno
inc
pop
fsub
sub
leave
loopne
out
sub
cmp
jne
mov
or
xchg
scas
ss
ds
or
push
outs
repnz
mov
cld
pop
adc
stc
push
mov
adc
fsin
ins
mov
xor
add
ins
ja
lods
retf
in
shl
repnz
call
mov
xlat
popa
(bad)
and
popf
stos
and
adc
mov
push
cmp
sub
dec
jae
daa
sbb
sbb
xchg
(bad)
push
pop
test
adc
stc
movs
call
mov
retf
out
lods
cli
lods
lock
test
xchg
ret
push
js
sub
cmp
ret
jb
cmp
sub
mov
imul
adc
test
call
mov
es
or
mov
mov
repnz
inc
dec
jae
fwait
mov
and
add
xchg
pop
jbe
sub
mov
je
xchg
ja
ja
lods
jno
mov
mov
cld
call
loop
mov
movs
bound
mov
mov
lods
sbb
(bad)
icebp
pusha
ja
lods
or
(bad)
xchg
scas
repnz
or
cmp
das
mov
mov
mov
gs
mov
sbb
ins
xor
mov
jecxz
cmp
outs
jae
cdq
aas
xchg
arpl
push
and
shr
xor
adc
daa
and
out
loope
fistp
dec
sti
jp
jg
and
push
cmp
outs
sub
fadd
cli
xor
loopne
fst
cwde
adc
dec
add
inc
hlt
mov
push
mov
xchg
stc
and
test
loop
nop
fdiv
call
mov
pusha
clc
das
jmp
dec
(bad)
fld
std
and
cwde
xchg
jne
xchg
(bad)
cmp
scas
repz
inc
mov
in
mov
jl
les
into
jnp
sbb
ja
cld
cmps
int
ret
repz
jns
fnstenv
pushf
loopne
ins
or
and
enter
ss
xor
iret
cmps
gs
outs
xchg
ret
idiv
test
xchg
out
movs
and
not
fnstenv
pop
cmp
jmp
(bad)
mov
int3
in
retf
pop
in
inc
cld
dec
out
repnz
cmp
pop
jp
mov
mov
pop
xchg
or
(bad)
retf
sbb
rol
rcr
ins
mov
push
mov
inc
push
lahf
inc
or
loope
add
inc
cli
adc
sub
(bad)
jg
cmp
inc
dec
outs
and
or
mov
xchg
and
iret
and
dec
mov
ror
cmps
imul
inc
dec
dec
dec
dec
adc
xor
jecxz
ins
sub
cmps
repnz
mov
addr16
(bad)
mov
ins
mov
ss
sbb
jne
adc
lock
(bad)
movs
cmc
lods
imul
test
je
fxch
ret
clc
shr
jge
shl
imul
jp
test
cld
je
js
ror
and
sbb
cmp
add
pop
ins
dec
xor
push
aaa
jno
addr16
jp
int
vmovaps
scas
daa
jno
sbb
adc
mov
shl
mov
and
or
dec
xchg
inc
sbb
pop
leavew
adc
out
int3
mov
nop
pop
xchg
vfrczpd
jbe
mov
pushf
xchg
dec
lea
lds
inc
xchg
xchg
iret
jns
test
ds
mov
lods
popa
xor
inc
clc
and
jmp
and
lea
test
sbb
mov
adc
mov
mov
sbb
dec
mov
out
retf
and
pop
adc
xor
mov
xor
push
int
pushf
sbb
ret
in
das
inc
mov
or
push
mov
(bad)
and
call
icebp
mov
cmps
xchg
xor
fadd
dec
mov
out
mov
dec
cmp
jae
xchg
sti
adc
pop
pusha
arpl
xor
imul
aad
je
push
aam
sbb
cs
int3
or
fild
mov
pusha
setle
outs
lea
adc
aam
scas
mov
sub
stos
fs
dec
push
mov
pop
push
mov
test
jmp
dec
shl
stos
ss
jl
idiv
inc
movs
xchg
fist
cli
ins
pop
sub
jns
fcom
stos
jecxz
scas
push
ret
test
fldcw
retf
imul
das
repnz
or
or
lahf
xchg
add
pusha
push
das
es
pop
mov
xor
stos
out
sbb
test
addr16
dec
mov
cwde
push
call
push
add
out
test
fst
mov
aad
adc
dec
or
inc
xchg
std
and
adc
xor
sbb
mov
ins
xchg
mov
mov
imul
out
pop
jmp
xchg
or
ja
lods
cmp
dec
lods
xchg
in
(bad)
pop
xor
ror
mov
iret
mov
mov
sub
push
out
xchg
dec
cmps
leave
xchg
adc
and
jl
(bad)
fld
add
dec
repnz
cmps
mov
pop
enter
adc
hlt
stc
sahf
sub
out
ret
pop
test
mov
(bad)
mov
dec
and
into
mov
xor
mov
jns
mov
jae
pop
or
jns
in
int3
sti
in
xor
mov
and
fmul
mov
(bad)
jno
fs
and
outs
xchg
adc
xchg
add
not
and
adc
add
push
shl
sub
shl
adc
cli
push
ret
and
sub
add
in
sub
and
dec
rol
cmp
cmp
pushf
push
test
add
in
push
jb
das
neg
pop
aad
or
fdivr
mov
movs
push
or
test
push
sub
lea
push
out
sbb
std
jmp
js
mov
adc
inc
pop
add
sub
push
jns
push
cmc
xor
mov
js
xor
outs
lods
jnp
sar
(bad)
in
inc
push
test
aaa
repz
pop
or
not
int
addr16
(bad)
pushf
jns
mov
addr16
adc
sub
push
dec
or
mov
dec
cld
and
iret
jne
int3
adc
pop
loope
retf
and
xor
inc
scas
int
cmp
sbb
sub
(bad)
push
(bad)
cli
xor
stos
mov
sbb
and
sbb
sub
inc
test
sti
and
lock
xchg
rcr
lea
mov
jbe
xchg
xchg
scas
(bad)
hlt
out
jp
aad
test
(bad)
idiv
fcmovbe
shr
out
mov
stc
jp
mov
movs
jb
fs
mov
pushf
test
mov
dec
call
je
mov
retf
cwde
int
and
sbb
js
mov
mov
or
(bad)
jmp
cli
inc
shl
push
adc
cmp
and
in
call
test
cmp
cli
fisubr
gs
mov
xchg
mov
adc
ror
xchg
(bad)
jmp
pushw
cmp
push
loopne
and
add
or
jb
mov
sti
mov
jo
aas
fwait
cmps
lea
mov
(bad)
or
cmp
in
scas
mov
loope
cld
fsubr
popf
xor
loopne
cs
pop
sbb
dec
push
ins
push
movs
dec
scas
add
add
inc
or
outs
mov
xchg
ins
adc
imul
daa
in
sbb
xchg
arpl
pop
push
sti
add
test
and
xchg
mov
jmp
cs
clc
lahf
inc
sub
pop
mov
in
es
loope
sub
test
mov
test
call
ret
mov
jg
mov
fimul
pop
mov
jg
sahf
loope
push
mov
jo
mov
xchg
enter
mov
shl
ins
jl
adc
out
adc
test
test
aam
mov
add
xor
imul
stos
scas
gs
inc
ss
and
or
icebp
inc
push
mov
sar
mov
cdq
inc
mov
test
adc
js
arpl
mov
aad
pop
adc
mov
enter
imul
sub
retf
jmp
xchg
scas
ret
sar
dec
rep
mov
jp
dec
dec
cmp
mov
xor
xor
fdivr
je
test
in
xchg
and
jne
add
in
fs
inc
jno
pop
cmp
inc
test
fxam
or
inc
stos
push
sub
adc
push
mov
xchg
ret
je
repnz
mov
pop
addr16
js
aad
dec
div
cmp
inc
loope
lea
xor
push
sbb
bound
jnp
test
pop
adc
out
cmps
cmp
cmp
pop
jae
ja
or
mov
jns
sbb
adc
xor
xor
sbb
addr16
sbb
jp
addr16
push
adc
fdivr
je
xchg
adc
js
popf
inc
ficom
sbb
out
jb
out
cs
enter
pop
add
(bad)
mov
shr
daa
imul
mov
adc
out
add
(bad)
mov
scas
and
jbe
fs
xchg
shl
fild
(bad)
loope
mov
movs
(bad)
add
retf
mov
or
mov
loopne
mov
push
add
jno
out
shr
dec
lods
mov
xor
popa
add
lea
push
shr
je
mov
or
xchg
sahf
xor
mov
or
push
jns
pop
sti
lods
xor
xchg
aas
imul
jo
(bad)
pop
cs
mov
movs
cmp
fldcw
sete
jecxz
jle
adc
std
jbe
push
fsubr
and
test
inc
or
adc
push
out
(bad)
add
mov
std
inc
inc
sub
shl
add
jne
mov
(bad)
(bad)
cmps
cmp
xchg
or
pop
fucomip
adc
mov
jae
mov
and
adc
popa
push
rcr
(bad)
pusha
lds
sub
movs
(bad)
cmp
mov
mov
xchg
mov
cdq
xchg
into
fwait
lahf
sbb
push
pop
(bad)
or
imul
push
lods
fidiv
out
xchg
lds
lods
cmp
mov
cmp
mov
popf
mov
xor
adc
(bad)
rcl
popa
out
ret
imul
(bad)
push
shr
retf
sahf
jb
cdq
or
xchg
xor
push
or
adc
test
push
in
iret
mov
mov
push
mov
mov
enter
or
(bad)
mov
jns
sbb
xor
fst
std
jle
lds
dec
pop
jl
(bad)
jmp
hlt
push
mov
addr16
into
fst
fiadd
pop
(bad)
call
jle
aad
sti
mov
mov
dec
xlat
call
addr16
fisub
jl
rol
sub
sub
sbb
ficom
sahf
sahf
lds
ja
add
std
mov
inc
out
push
add
add
mov
push
icebp
xchg
repnz
jb
aaa
ja
cs
pushf
mov
mov
lahf
mov
mov
xor
sbb
stos
pop
jge
inc
xlat
sub
lods
sub
fisub
out
lds
pop
xchg
mov
shl
and
cmp
pop
outs
or
lods
adc
xchg
cmp
xchg
(bad)
push
in
jbe
jmp
jne
loope
shl
sbb
mov
cmp
hlt
inc
inc
ds
xor
pop
mov
xchg
imul
sti
sub
scas
ror
lods
shl
sahf
adc
(bad)
and
(bad)
jno
or
out
(bad)
dec
call
scas
push
mov
sbb
add
jns
add
outs
in
pop
stos
repz
test
std
lods
push
push
scas
mul
sbb
daa
cmc
pop
imul
outs
cmp
loop
add
mov
sbb
inc
adc
add
xchg
mov
dec
enter
ficomp
in
mov
push
aad
inc
sti
fstp
lds
fist
add
in
cmp
(bad)
aas
jno
into
sar
lock
push
mov
jge
sub
ret
xor
push
xor
movs
mov
std
aad
cli
dec
out
(bad)
cmc
hlt
inc
mov
push
cmp
cs
repnz
movs
jp
add
fdivr
cmp
mov
jle
loope
sub
popa
inc
add
push
and
xchg
aad
adc
cmp
jns
ja
push
mov
cli
pop
pushf
push
lahf
test
iret
rcr
cmp
fdiv
mov
mov
cs
sbb
ins
leave
cmps
sbb
clc
jno
enter
inc
psllq
es
leave
dec
out
mov
rcl
dec
and
push
jnp
loopne
mov
bound
out
mov
sbb
int3
mov
push
ins
(bad)
out
out
std
retf
loope
fimul
jae
call
lock
mov
xor
mov
and
pop
push
xchg
(bad)
jl
dec
push
fisub
xchg
in
mov
jbe
sbb
jb
or
jo
mov
arpl
xchg
xlat
vpmaxub
push
push
lds
bound
ins
dec
fistp
xor
inc
sbb
pop
sbb
leave
sbb
push
or
xor
icebp
lock
int3
xlat
xchg
das
sub
push
test
scas
jmp
(bad)
jb
arpl
imul
or
inc
fsubp
addr16
lods
xor
and
stos
xchg
fstp
sbb
pop
hlt
mov
idiv
sbb
push
sti
dec
lds
mov
jae
jle
movs
in
cmp
stc
fist
iret
jne
jo
add
sub
or
pop
retf
movs
add
lea
jmp
clc
fidiv
xchg
scas
in
loopne
push
aaa
dec
dec
loope
fwait
sub
mov
out
mov
ret
aad
jge
fnstsw
ins
sbb
jmp
aam
inc
addr16
sbb
adc
mov
pop
dec
in
jle
inc
pop
mov
std
cdq
arpl
mov
mov
mov
sub
(bad)
mov
sub
nop
and
xchg
sar
dec
pop
popa
lods
fild
sub
sbb
ds
ret
ret
loope
jbe
mov
push
popa
int
adc
jecxz
mov
retf
ror
or
inc
adc
mov
sti
aam
sub
fs
popf
sub
or
les
gs
lea
cs
aaa
jbe
popf
scas
push
jmp
dec
out
mov
ret
sbb
das
dec
repz
cdq
mov
inc
add
push
xor
int3
aad
outs
stos
int
ins
mov
cs
push
jne
jae
inc
leave
mov
stos
fimul
sbb
pop
mov
sub
or
xor
mov
mov
addr16
sbb
cmp
xlat
shl
(bad)
(bad)
cdq
ja
jl
pop
loop
ds
adc
jno
stos
retf
mov
lods
std
sub
xor
popf
mov
fidiv
retf
push
std
adc
xchg
mov
cdq
and
outs
ja
sub
pushf
pop
(bad)
or
cmp
sub
fiadd
or
sub
and
dec
js
sahf
cdq
sar
stos
jne
cmps
fbstp
nop
dec
sbb
jns
in
mov
adc
icebp
movs
loopne
setno
xchg
mov
out
push
lea
fadd
cmp
ins
out
dec
xchg
aad
xchg
es
cmp
push
add
fstp
sahf
dec
cli
jmp
clc
fiadd
lahf
lods
popf
xlat
arpl
(bad)
scas
gs
add
fsub
pop
test
test
xchg
sbb
mov
shr
imul
loop
pop
jecxz
or
xchg
bound
in
inc
mov
arpl
sbb
jo
add
scas
ror
enter
inc
sub
push
or
mov
repz
jns
sub
push
test
(bad)
sti
xchg
out
and
sbb
sbb
fbld
sbb
mov
enter
cwde
xchg
lds
inc
lods
jae
leave
push
(bad)
(bad)
stos
mov
shl
pusha
xlat
sub
inc
mov
(bad)
pushf
jp
mov
(bad)
sub
icebp
enter
inc
dec
call
jne
push
scas
retf
cwde
xor
aad
fstp
shl
adc
rcr
ficom
enter
sbb
dec
icebp
cmp
fistp
aad
mov
std
outs
inc
push
outs
loopne
cmps
sti
add
push
sbb
adc
aas
retf
pop
scas
mov
mov
(bad)
(bad)
std
inc
das
xor
sahf
test
push
(bad)
popa
mov
lock
mov
or
push
sub
mov
and
push
jns
nop
fmul
arpl
adc
push
jp
mov
mov
(bad)
inc
bound
mov
hlt
xor
mov
push
sub
test
add
(bad)
imul
pop
cmc
sbb
mov
xchg
scas
aad
loope
fwait
pop
cld
push
jne
cmp
push
rcl
jg
ja
xchg
and
and
(bad)
mov
aaa
pop
fidivr
cdq
adc
sbb
lock
psrlq
scas
loop
jmp
add
jg
pop
imul
retf
pop
(bad)
fisub
push
in
idiv
pop
(bad)
popa
dec
loope
imul
cli
push
mov
(bad)
mov
sub
jmp
xchg
adc
out
mov
imul
cmp
jns
ret
pushf
(bad)
in
out
pop
jmp
mov
mov
sbb
outs
inc
outs
cwde
sar
add
ins
mov
lods
pop
mov
(bad)
and
pushf
imul
or
push
dec
pop
je
cmps
mov
imul
sbb
pushf
or
mov
cmps
arpl
mov
mov
rcr
lds
inc
jl
mov
ins
add
pop
std
mov
jecxz
daa
stos
mov
movs
scas
jmp
cmc
fs
rcr
mov
aad
fcom
pop
xchg
push
cmp
and
adc
ins
inc
jo
pushf
clc
div
pushf
push
(bad)
fnstenv
out
mov
outs
stc
push
loopne
pop
push
pop
dec
inc
xchg
jp
std
aaa
push
loop
mov
iret
movs
loop
arpl
(bad)
dec
std
pop
cs
cmc
aas
fs
movs
and
ret
repz
jae
pop
dec
arpl
add
cmc
fcmove
jg
enter
pop
jecxz
xchg
jns
shl
bound
lods
pop
stc
jle
pop
mov
xor
push
pop
mov
test
(bad)
jnp
sub
out
mov
mov
mov
fimul
in
jnp
shr
dec
test
mov
sub
jne
cmp
push
ins
dec
ror
sub
dec
je
bound
js
pop
icebp
sbb
push
popf
movs
stos
ds
push
in
pop
mov
popf
xchg
fld
aas
mov
add
mov
test
shl
mov
pop
(bad)
in
adc
mov
sbb
cwde
popf
ret
xchg
xchg
mov
xchg
es
mov
out
cld
neg
sbb
popa
mov
push
outs
cmp
lds
test
pop
xchg
jae
js
mov
inc
cdq
nop
in
movs
in
jmp
scas
iret
mov
push
cli
out
in
das
shl
jo
cmc
adc
cs
push
hlt
mov
dec
repnz
mov
pop
movs
rep
cmp
cmc
mov
mov
fnstcw
popa
mov
adc
fs
imul
dec
or
es
cmp
dec
ins
es
dec
sti
jl
in
call
repnz
repz
mov
into
ins
pop
cmps
retf
cmp
and
fistp
jmp
cmp
scas
mov
inc
cmp
bound
sbb
mov
xchg
jl
movs
in
mov
dec
jo
std
aaa
adc
inc
inc
icebp
test
xchg
scas
push
sub
pop
add
lock
loop
or
test
mov
ja
ins
div
xchg
sub
adc
out
pop
aas
jno
test
aad
aas
cmp
push
push
imul
repz
shl
fs
loopne
xchg
mov
je
fs
imul
(bad)
out
inc
pop
mov
push
sbb
inc
jo
push
xor
aas
bnd
xchg
add
sbb
xlat
xor
jp
cmps
gs
xor
lea
jae
mov
rol
mov
mov
loope
out
mov
mov
addr16
xlat
adc
das
push
push
lahf
test
enter
stc
sbb
lods
ja
pop
dec
jno
es
jmp
adc
and
fistp
out
ins
lods
mov
pop
jmp
jl
lods
jno
int
cmp
movs
ret
sub
xor
mov
das
(bad)
arpl
mov
scas
push
scas
push
dec
mov
arpl
xchg
in
lahf
pop
xchg
sahf
xchg
push
push
cmps
popa
mov
out
cmp
ror
in
ret
cmps
mov
(bad)
jnp
pop
imul
in
mov
pop
cmp
mov
ret
popf
arpl
pop
mov
iret
inc
cmp
adc
ret
inc
or
push
mov
addr16
sub
mov
and
out
int
in
adc
lods
adc
pop
call
push
fst
aaa
mov
cld
int
inc
and
jns
lock
jnp
loopne
aas
mov
je
out
cs
daa
xor
jae
pop
repnz
aaa
pop
or
pop
sub
pop
dec
lock
mov
or
push
xchg
jne
scas
cmps
daa
cs
fstp
call
test
push
jg
stos
loopne
aam
push
into
jno
add
fwait
scas
stos
sbb
(bad)
jnp
mov
stos
or
data16
pop
test
mov
mov
fidiv
sub
add
push
dec
pop
pop
out
sub
movs
lods
imul
mov
xchg
mov
lahf
out
pop
cli
outs
or
cmps
jg
imul
movs
scas
mov
fcmovbe
push
cvtpi2ps
es
(bad)
sbb
out
iret
mov
repz
ret
retf
push
jne
or
hlt
sbb
sub
push
mov
mov
add
in
pop
rol
mov
(bad)
ins
mov
out
xchg
int
jb
push
and
jmp
sub
fs
lods
xchg
ret
dec
(bad)
sub
jmp
cmps
aas
dec
and
jmp
bound
dec
fistp
adc
dec
xor
fisubr
dec
xchg
test
rcl
dec
sub
movs
stos
scas
push
adc
mov
mov
sbb
in
cmps
imul
int
sbb
out
mov
lock
retf
(bad)
push
(bad)
jg
and
popf
loop
lods
ja
fiadd
mov
mov
out
pop
loop
mov
pop
imul
mov
in
hlt
jae
hlt
iret
inc
fmul
iret
(bad)
xchg
cmp
dec
inc
sbb
stos
and
dec
cmp
pop
std
scas
push
jb
pop
cmc
pop
mov
clc
stos
mov
sbb
or
cwde
not
js
aaa
sub
dec
mov
(bad)
and
mov
push
out
pop
dec
jle
or
out
daa
and
shl
jl
add
(bad)
jmp
mov
or
test
call
test
push
dec
pop
das
lds
(bad)
jns
mov
mov
or
shr
mov
jp
jecxz
in
ja
push
xchg
cmc
xchg
aas
push
lods
jmp
xor
std
dec
and
rol
inc
aas
ins
push
hlt
daa
fiadd
repz
bound
int3
fwait
mov
or
mov
retf
movs
popa
jp
jge
and
mov
xor
js
ss
lock
movs
xor
and
ret
mov
pushf
mov
stos
sbb
ds
inc
outs
dec
dec
arpl
and
scas
xor
loope
(bad)
push
mov
mov
retf
cmp
(bad)
cmp
pop
push
jne
jae
and
outs
sbb
push
sub
nop
std
stos
xchg
pop
mov
push
mov
mov
(bad)
cmp
ror
cmp
fwait
movs
dec
mov
cmp
cmps
js
je
pop
retf
xor
cmp
mov
(bad)
icebp
(bad)
jmp
xchg
jge
rcl
adc
mov
shl
call
jmp
dec
pop
dec
(bad)
cmc
jnp
mov
mov
popf
or
aad
es
lea
jo
xor
push
jns
hlt
idiv
out
inc
addr16
dec
mov
hlt
push
mov
sbb
xchg
add
sbb
pop
into
cmps
rcr
adc
into
sbb
pusha
jle
cmp
ds
daa
fbld
push
loop
add
push
cmp
xor
fs
pushf
cmc
loopne
popf
adc
addr16
movs
mov
or
aaa
cmp
sti
mov
xchg
inc
ins
xor
cwde
inc
repnz
bound
sbb
daa
jecxz
push
inc
adc
inc
es
mov
xor
sub
xor
adc
out
in
test
add
lods
and
retf
pop
jg
xchg
in
(bad)
push
cmps
add
sub
cmc
cs
dec
inc
(bad)
cmps
push
imul
mov
nop
loop
sbb
paddd
dec
sbb
xor
push
mov
pop
and
aam
rcl
arpl
jbe
mov
retf
popf
hlt
inc
clc
or
loope
aad
fcom
(bad)
retf
mov
jmp
cmp
sbb
rol
sub
or
jnp
or
xchg
and
add
mov
mov
(bad)
enter
cld
cmp
cmps
cld
mov
adc
sub
inc
outs
in
movs
pop
dec
push
rep
mov
mov
dec
jnp
push
call
aam
dec
ss
sbb
pop
jne
pop
add
out
mov
(bad)
adc
jg
out
(bad)
fidiv
call
iret
rcr
push
imul
aaa
(bad)
rol
or
(bad)
fnsetpm(287
mov
sub
mov
mov
sub
cmp
sbb
or
xchg
call
js
inc
fidiv
pop
fwait
mov
sbb
popf
sub
mov
loop
stc
inc
jnp
ja
push
loop
cli
mov
test
push
mov
jo
mov
(bad)
push
and
cmps
add
fcmovnbe
fmul
jmp
mov
dec
adc
in
dec
in
ins
jbe
xlat
gs
adc
(bad)
sub
or
inc
dec
jmp
jb
xchg
sub
jecxz
mov
lahf
or
jnp
xchg
add
call
xor
xchg
shl
stc
into
fisubr
inc
jae
enter
imul
bndldx
xchg
pop
inc
sbb
js
daa
mov
iret
stc
pop
push
neg
aad
imul
retf
dec
or
jne
xchg
jnp
cld
fsub
test
jmp
loopne
inc
mov
out
pushw
fnsave
fmulp
cwde
push
in
sar
add
test
inc
or
mov
dec
dec
pop
mov
pop
ficomp
imul
call
mov
mov
imul
dec
dec
xlat
enter
(bad)
js
add
loope
sub
cmps
pop
mov
outs
mov
xchg
sti
ret
or
xor
jnp
push
add
stos
paddusb
ds
cs
test
add
cmps
push
sbb
xchg
jge
(bad)
sub
fist
in
inc
arpl
out
stc
xchg
sti
jecxz
mov
sub
cmp
dec
jnp
(bad)
push
mov
push
mov
inc
cmc
xor
fld
mov
(bad)
sar
in
movs
pop
jmp
aad
mov
mov
and
mov
call
mov
stos
es
jbe
int
std
xor
loop
mov
adc
cli
mov
rcl
and
rcr
cdq
movs
out
jecxz
lahf
push
xchg
pop
repz
fcmovnb
jmp
lahf
fsubp
pop
scas
cmp
sbb
ins
cmp
cs
and
xchg
mov
inc
push
push
xor
mov
sbb
jae
int3
iret
lods
out
cmp
stos
idiv
rcr
sbb
shl
add
sub
inc
lea
loop
cmp
(bad)
dec
out
inc
mov
das
sbb
mov
test
inc
call
stos
push
das
fidiv
xor
xchg
sub
push
ret
das
out
jmp
fcmovnb
arpl
rcl
clc
sbb
jo
pop
or
push
pop
add
test
and
cmc
stos
mov
rcr
pop
jnp
push
ret
push
es
in
je
push
sbb
das
or
pop
jmp
mov
xchg
jo
or
adc
push
or
jno
inc
adc
in
fidiv
push
xchg
aam
shl
cmps
int3
add
stos
pusha
and
rol
adc
and
cld
xchg
or
or
test
xor
fldenv
xchg
call
(bad)
mov
ror
xor
cli
mov
loopne
or
(bad)
push
inc
cmps
and
pop
(bad)
call
inc
push
or
loope
sub
repz
sub
and
inc
pop
sub
repz
jno
sub
sbb
lock
call
les
in
mov
pushf
in
clc
in
or
out
call
mov
mov
sub
cmps
dec
jecxz
xchg
fs
push
sub
push
pop
jecxz
cmp
mov
cmp
sub
popf
sub
xchg
or
cmp
std
mov
mov
scas
adc
adc
adc
mov
stc
add
dec
loope
cdq
cmc
mov
and
jb
sbb
sbb
fwait
jo
cmps
inc
fstp
test
sahf
sbb
and
mov
fidiv
jle
jmp
test
repz
int
xor
sbb
movs
pusha
ss
xchg
or
into
and
jecxz
cmp
xor
int
fidivr
cmp
cmp
cmp
gs
mov
mov
fcmove
into
aas
out
aam
loopne
in
pop
ins
sbb
scas
ins
sbb
dec
fimul
int
push
f2xm1
cmp
dec
mov
mov
or
das
imul
call
inc
je
pop
aad
cmp
lds
into
fsubr
idiv
ja
fsubr
out
jmp
rcr
fwait
xor
iret
int
adc
aad
or
repnz
arpl
les
adc
adc
jg
jne
cmps
cmps
hlt
inc
sar
sbb
cmps
mov
scas
loopne
push
pop
cmp
lea
popf
push
cs
or
jg
test
jns
imul
adc
or
sub
sub
cmps
test
mov
jae
pop
add
sbb
cwde
lods
in
retf
cmp
pop
call
cmp
mov
out
iret
xor
mov
std
call
lods
or
ss
jl
jns
mov
dec
adc
daa
movs
int
sub
in
lods
nop
push
mov
jmp
stos
popa
icebp
or
or
test
mul
sub
push
int3
test
cmp
icebp
xor
cs
in
imul
push
es
test
sbb
push
imul
mov
popa
shr
inc
sub
aad
pushf
arpl
xchg
inc
mov
lods
lea
daa
xchg
and
sub
mov
mov
inc
xchg
mov
(bad)
cmc
sbb
xchg
mov
pop
cmp
cld
aaa
rcr
jg
push
fcmove
or
ins
xchg
pop
pop
xor
aas
in
add
in
or
add
mov
or
and
and
or
sub
dec
ins
or
in
add
stos
add
lds
push
add
push
or
or
sbb
pop
add
shr
pop
jle
or
imul
push
pop
and
pop
cmp
fadd
jmp
and
cld
jecxz
mov
shr
ja
lds
fs
adc
mov
adc
xlat
and
pushf
xchg
mov
sbb
cmp
sub
popf
push
(bad)
or
xor
push
adc
fs
retf
fld
out
fisub
mov
cmc
pusha
lahf
hlt
add
cdq
xor
xchg
jge
xchg
cmps
mov
cmps
xchg
retf
bound
loop
scas
mul
jp
test
add
lods
mov
lgs
or
pop
mov
daa
call
xor
stc
sub
arpl
cmp
inc
cli
aad
imul
and
ret
lahf
adc
mov
shl
jge
cli
fist
adc
cmp
shl
add
mov
test
inc
leave
inc
int
sar
fstp
push
and
into
in
dec
push
clc
out
stos
cs
aam
loope
cmp
dec
lods
mov
inc
les
xchg
jp
adc
sub
and
(bad)
in
push
inc
addr16
out
and
mov
lahf
dec
shr
fisub
fmul
push
test
fwait
out
mov
retf
movs
xchg
icebp
inc
sbb
ja
ror
mov
jb
in
setge
and
push
movs
and
mov
xchg
fisubr
pop
(bad)
and
pop
xor
sub
ds
sbb
jbe
in
fwait
xor
es
pop
xchg
mov
mov
sub
mov
stos
inc
iret
push
gs
hlt
mov
and
aas
dec
test
lods
call
leave
xor
ins
gs
dec
dec
mov
jno
or
add
lods
jg
mov
add
push
das
pushf
outs
sbb
out
loopne
sbb
inc
mov
aas
add
(bad)
sbb
and
sbb
xor
mov
cld
dec
test
push
sbb
inc
aad
test
add
pop
xchg
xor
mov
add
mov
into
add
sub
js
mov
stos
mov
add
adc
jnp
add
pop
xchg
mov
cmp
ret
inc
mov
aas
rol
lods
sub
lea
xchg
shl
mov
push
adc
mov
inc
test
cli
cmp
add
push
push
xchg
push
or
fidiv
mov
ja
mov
mov
cmp
and
out
sbb
pop
pop
or
adc
xor
jo
mov
push
sbb
popf
push
ins
sbb
bound
add
fcomi
cmp
or
xchg
and
mov
mov
dec
in
inc
jns
xlat
je
imul
(bad)
cmps
scas
dec
jno
mov
arpl
cs
sub
push
pop
rcl
sub
push
je
retf
push
cli
out
jb
push
leave
pop
pop
ins
fdivr
push
movs
les
pop
cli
pusha
lss
call
aam
xlat
shl
and
rol
sti
das
enter
mov
in
loopne
fld
adc
mov
aad
xchg
fmul
lahf
cs
lds
(bad)
adc
xchg
popa
(bad)
cld
lods
mov
add
or
mov
mul
pop
mov
and
outs
push
push
loop
adc
cwde
mov
add
stos
ins
sbb
and
or
mov
xchg
les
mov
fs
test
xor
mov
mov
loop
int3
and
(bad)
cmps
int
data16
dec
(bad)
sbb
les
test
cwde
sub
pop
mov
adc
pop
xor
cmp
sub
scas
mov
and
mov
aad
cmp
mov
arpl
jmp
mov
test
xor
and
push
or
inc
sub
xchg
mov
ins
call
push
into
or
add
rcr
inc
icebp
shl
inc
out
pusha
fwait
loop
dec
and
jno
sahf
inc
lock
jle
mov
mov
(bad)
jbe
xchg
dec
inc
xlat
repz
pop
jl
retf
fs
fxch
jge
mov
add
sub
xor
imul
xchg
(bad)
out
sbb
sbb
mov
jmp
lods
cwde
jecxz
cmps
popf
lock
call
push
scas
xchg
ins
test
popa
jns
pop
call
jle
movs
cmp
inc
xor
push
adc
(bad)
xor
sahf
xchg
cmp
sbb
xlat
cmp
jg
xor
pop
out
fwait
add
cld
add
js
ret
mov
movs
in
xchg
bnd
push
adc
add
hlt
jge
in
xchg
icebp
push
mov
sub
ja
leave
dec
cmc
lods
(bad)
and
sbb
cld
xchg
fwait
mov
xchg
xchg
or
mov
jmp
sbb
loope
ds
mov
pop
sti
push
ret
add
sbb
lock
(bad)
pop
jl
aas
nop
std
xor
push
mov
push
in
mov
lahf
jmp
arpl
aaa
inc
repz
or
jb
loope
sbb
pop
(bad)
cmps
loop
movs
jb
xchg
imul
inc
push
fcmovne
mov
pop
or
call
loope
adc
xchg
ror
fidiv
mov
ss
pop
repnz
push
retf
and
and
xchg
into
popa
(bad)
cmp
aas
fnstenv
cmp
sbb
xor
pop
inc
push
jae
pop
lea
ja
repz
jno
add
in
mov
pop
mov
cmp
(bad)
sub
(bad)
jp
xor
dec
mov
xchg
and
mov
jle
(bad)
loop
mov
pop
dec
mov
jle
adc
sbb
arpl
xchg
(bad)
push
(bad)
mov
mov
cld
and
je
(bad)
cwde
jbe
or
ins
mov
xchg
ud2
aad
xor
pop
lods
(bad)
xchg
jg
fisub
sbb
mov
stos
mov
push
test
jg
jbe
xchg
mov
test
fcomip
cmp
and
dec
arpl
push
adc
sub
jns
pop
jle
mov
nop
xchg
test
sub
ins
jno
sub
sub
rcl
jle
mov
pop
ins
inc
dec
pop
xchg
xor
jo
push
daa
leave
xchg
fisub
sar
pop
int3
lods
and
xchg
cmc
push
sub
ss
outs
lahf
repnz
mov
push
add
jne
mov
test
adc
adc
inc
jno
fwait
add
outs
ss
jb
retf
add
push
push
ret
out
pop
pop
fistp
pop
inc
stos
mov
mov
test
add
dec
rol
aas
jb
(bad)
aam
dec
retf
dec
(bad)
mov
jmp
arpl
mov
addr16
dec
push
test
cmp
cmp
rol
(bad)
jns
xchg
jns
clc
call
mov
add
xchg
loope
shl
test
mov
test
adc
repz
(bad)
sub
jecxz
jp
pop
jno
das
mov
mov
(bad)
aad
es
push
xchg
gs
(bad)
lock
push
jg
jp
xchg
ds
xor
xchg
pusha
push
xchg
pusha
(bad)
and
cmp
out
sbb
pop
(bad)
lds
sbb
mov
xchg
call
push
xor
inc
sbb
jmp
mov
pop
push
mov
jno
out
push
push
pop
mov
call
jge
iret
fcom
xor
jle
inc
xor
ins
dec
inc
mov
ret
pop
stc
mov
fdiv
pop
sahf
shl
shl
pop
add
push
sub
cmps
push
mov
retf
mov
loop
cmp
jbe
imul
mov
sbb
jb
(bad)
fwait
in
cmps
popa
xchg
jmp
(bad)
jle
mov
sbb
not
jmp
push
imul
dec
fld
push
xor
adc
push
or
loopne
out
dec
jg
add
cwde
pop
cld
push
pop
jmp
and
dec
outs
test
repnz
out
in
lock
fimul
sbb
(bad)
cmp
sbb
pop
cmps
int3
push
and
pushf
retf
mov
cmp
pop
ret
scas
ss
rol
ret
xor
xlat
test
add
(bad)
ror
shr
(bad)
imul
out
adc
(bad)
icebp
stc
mov
jbe
lds
ins
jnp
and
sub
popa
and
xchg
push
ins
js
jbe
xchg
pop
pop
pushf
idiv
pop
xor
xor
cmp
mov
and
mov
div
popf
out
pushf
mov
mov
aam
js
jmp
push
popa
mov
cld
xor
push
in
inc
out
xor
stos
adc
xor
adc
xlat
loopne
outs
jg
inc
rcr
and
rcl
jnp
popf
leave
fstp
sbb
and
push
xchg
mov
pop
push
aaa
int
jne
ret
sti
sbb
pop
popa
ror
fwait
scas
xchg
out
fst
or
sti
rcr
cld
out
mov
leave
jns
dec
mov
inc
jb
mov
arpl
push
sbb
mov
adc
ja
xor
in
leave
jmp
adc
adc
sub
cmp
dec
mov
gs
mov
sahf
mov
call
cld
adc
inc
and
jae
mov
push
(bad)
and
ret
std
cld
cwde
dec
fs
cld
dec
xchg
enter
movs
inc
cmp
jo
call
repz
xchg
jnp
je
xlat
jmp
sub
or
shl
xchg
fdiv
int3
fcom
shl
lds
xchg
stos
cmc
in
xor
stos
jne
sar
inc
mov
test
xchg
ror
mov
push
aas
adc
in
(bad)
adc
out
popf
xchg
sbb
pop
imul
jmp
test
mov
ins
xor
mov
les
ds
xchg
and
mov
into
or
mov
lods
mov
les
inc
stc
or
repnz
pusha
fnsave
hlt
stc
push
mov
dec
clc
dec
jmp
jge
and
inc
xor
fimul
and
fs
jmp
test
jnp
lock
and
sbb
mov
mov
outs
and
cdq
dec
sahf
ror
(bad)
jmp
mov
cmp
std
int
movs
xor
(bad)
push
int
push
pop
pop
xchg
adc
push
sbb
hlt
cwde
jg
cdq
lock
mov
fstp
adc
xchg
shl
mov
lea
call
pop
call
test
sbb
inc
cmp
nop
scas
mov
adc
loop
daa
push
or
adc
lds
test
popf
push
push
rol
dec
mov
sti
jbe
mov
cmc
push
mov
enter
sub
fild
jge
dec
lahf
movs
jns
jp
fcomp
jne
adc
out
xchg
outs
iret
push
pop
sti
jno
iret
inc
inc
ret
imul
clc
neg
(bad)
mov
ja
movs
inc
out
not
test
test
cmp
lock
bound
pop
ins
inc
jmp
mov
cwde
stc
xor
xchg
pop
(bad)
pop
outs
rcr
jle
jl
mov
test
idiv
dec
cdq
cdq
xor
sti
cmp
jmp
mov
mov
push
ret
std
popf
adc
lods
test
cmps
popf
(bad)
ds
or
(bad)
cmps
rcl
fwait
mov
fstp
lds
xchg
movs
sub
inc
lahf
pop
repnz
jae
jne
(bad)
cmps
mov
lea
repnz
add
std
dec
enter
aam
xchg
dec
movs
mov
add
out
pop
sbb
and
jle
popf
push
loopne
xlat
test
pop
inc
and
int
xor
mov
sbb
or
xchg
mov
neg
call
inc
xchg
movs
addr16
xor
push
je
rcr
(bad)
imul
inc
int
fsubr
add
out
push
cmp
mov
out
shr
arpl
adc
sub
das
clc
rol
or
in
lock
aam
sti
xchg
pop
adc
jb
pop
out
push
shl
xchg
sub
sbb
gs
add
jp
out
(bad)
(bad)
ss
xlat
mov
movs
mov
or
push
cwde
and
pop
add
cmp
sbb
jp
call
cmp
jecxz
loopne
jnp
or
ja
mov
fwait
hlt
cli
je
cmp
pop
repz
pop
jle
cmps
icebp
movs
enter
mov
lock
ins
mov
in
loope
movs
push
or
xchg
jp
out
adc
mov
jle
ficomp
add
js
pop
push
add
iret
enter
xchg
retf
mov
aaa
jmp
pop
pop
lods
nop
push
loope
aad
out
push
scas
arpl
sbb
or
daa
fsubr
pop
jnp
mov
mov
test
cmc
jmp
xchg
in
frstor
inc
bound
cmp
ds
jo
outs
leave
mov
fs
idiv
sbb
push
ror
out
fimul
or
sbb
je
(bad)
aad
cmp
pusha
push
mov
xchg
cmp
in
jns
jns
lahf
rcl
call
xchg
xor
jb
pop
in
push
stos
loope
mov
jns
jecxz
push
jae
arpl
cmc
(bad)
dec
dec
push
imul
add
daa
inc
fild
lods
dec
and
adc
fdiv
in
cdq
mov
addr16
pop
fwait
int3
jae
(bad)
call
cmp
fs
mul
leave
leave
mov
mov
inc
test
repnz
in
push
mov
push
test
push
out
inc
inc
je
mov
jl
inc
stos
lahf
mov
mov
out
out
sti
cmp
je
mov
cdq
in
out
push
scas
sbb
in
or
imul
push
sbb
ret
and
adc
(bad)
mov
(bad)
je
dec
mov
pop
int
jmp
(bad)
loop
movs
loopne
outs
movs
jp
imul
scas
retf
jmp
sub
inc
scas
pop
xor
ins
(bad)
xchg
add
idiv
in
repz
pop
imul
or
in
into
out
aad
movups
cdq
mov
cmp
add
push
fwait
push
and
mov
push
push
dec
outs
push
mov
mov
pop
and
fistp
or
mov
and
mov
cmc
xchg
loop
cmp
call
std
dec
xor
dec
xor
rol
std
dec
je
sar
in
dec
rcr
fstp
mov
sbb
mov
leave
cmp
adc
clc
in
aas
loope
or
push
push
in
sub
dec
add
lods
mov
cld
dec
xor
jmp
fsubr
lahf
inc
pop
pushf
inc
daa
repnz
pop
adc
adc
into
outs
adc
leave
clc
out
push
ins
fsub
jnp
gs
mov
or
and
ins
retf
es
adc
lods
sub
ins
call
dec
imul
jnp
push
push
pushf
fstp
pop
lds
jle
ds
outs
mov
test
(bad)
sbb
jns
sub
inc
jmp
lgs
inc
cmp
jno
movs
mov
call
fwait
mov
shl
xchg
and
pop
fdivp
push
jge
jmp
mov
cs
icebp
clc
cmps
cdq
xor
sbb
popf
test
jno
add
fild
outs
add
cmp
stos
cld
xchg
pop
push
mov
inc
mov
jmp
shr
sub
xchg
arpl
pop
mov
out
imul
int
ins
jp
jmp
push
loopne
cwde
add
ss
xor
dec
dec
push
adc
cmp
rcl
pop
sub
or
repz
mov
inc
push
sbb
imul
mov
repnz
xor
pushf
stc
inc
test
sbb
sbb
or
gs
cmp
mov
sub
int3
cmps
mov
fstp
call
cld
cmc
popf
mov
and
add
xchg
sbb
ret
pop
mov
push
sub
xchg
es
cli
cli
xor
ror
out
pop
scas
mov
out
aaa
adc
das
daa
push
loope
pcmpgtw
xchg
xchg
jae
mov
xor
mov
mov
fstp
clc
out
and
popa
and
push
xchg
fmul
push
rol
ja
jbe
mov
rol
xchg
sbb
sub
sti
inc
out
mov
aad
icebp
mov
xchg
imul
fcmovne
add
aad
xchg
inc
xchg
jbe
aas
mov
adc
jle
retf
retf
push
dec
or
ins
pop
sub
xchg
cli
and
pop
sahf
ss
jne
in
or
out
mov
cmps
sub
push
test
pop
cmps
push
push
inc
inc
sbb
test
adc
cli
test
adc
ss
dec
cmp
sbb
nop
cmp
sbb
int3
adc
xchg
movs
int
imul
neg
repz
sar
hlt
test
test
out
xor
fs
inc
pop
(bad)
jmp
(bad)
mov
gs
jmp
fs
mov
(bad)
jge
push
sub
test
xor
dec
test
dec
sub
ja
sbb
retf
jge
dec
test
and
lods
jns
push
into
cld
rcl
fsub
sbb
sub
inc
inc
xor
in
pushf
pop
jno
jg
pop
je
ret
sub
dec
gs
pop
xchg
add
mov
sahf
das
gs
adc
lods
xor
or
gs
fistp
(bad)
jmp
jae
fcomp
mov
cmp
inc
xlat
outs
sar
push
jle
add
pop
mov
test
cmc
outs
ins
sub
pusha
adc
xchg
xor
(bad)
stos
aaa
aas
xor
mov
fwait
das
mov
out
push
repz
push
loope
sbb
cmp
xchg
imul
push
adc
cdq
add
and
adc
and
iret
mov
outs
ins
sti
shl
sbb
adc
xchg
xchg
test
test
data16
out
jl
sahf
push
std
adc
mov
and
or
int3
jns
mov
les
pop
xor
push
sbb
add
sbb
dec
sub
sub
mov
clc
test
cmp
or
mov
inc
jbe
or
adc
xor
and
lods
aas
mov
gs
push
fcomp
jge
pop
rol
test
pop
out
popf
xor
lock
cmp
aas
sub
hlt
ret
jns
and
pop
inc
int
imul
cmp
fprem1
popf
out
push
jmp
in
stos
sub
pop
inc
inc
mov
mov
out
add
int
cmc
out
fistp
stc
xchg
movs
sahf
mov
gs
adc
in
xchg
mov
push
call
mov
je
or
or
dec
mov
cmp
out
data16
jecxz
pop
cs
jns
(bad)
gs
jmp
cmp
ja
and
mov
push
push
fs
hlt
jae
cld
cmp
sahf
ret
dec
out
cmp
push
movs
cmc
pop
push
xor
mov
je
rol
adc
out
add
ins
pop
or
pop
sti
sti
sub
sub
call
pop
out
xchg
adc
pop
ja
sar
and
stos
push
or
sub
or
mov
cmps
imul
cmc
mov
pop
mov
xor
fistp
dec
ret
inc
push
cmp
(bad)
cld
mov
lods
lahf
jle
popf
(bad)
hlt
rcr
scas
pusha
movs
test
sbb
fadd
js
in
push
and
jecxz
cmc
std
add
cld
outs
fidivr
cli
in
jge
lahf
rcpps
sub
xchg
push
xchg
shl
int3
test
jb
test
sub
jb
mov
mov
mov
mov
pop
gs
inc
call
sbb
or
cmp
sub
movs
xor
or
xor
mov
pop
fidivr
jae
cmp
test
or
out
sub
mov
rcr
xor
pop
push
add
rol
icebp
fsub
jo
and
mov
mov
nop
xor
stos
shl
movs
sub
inc
rol
sahf
sbb
pushf
mov
out
push
mov
pop
xchg
and
scas
mov
xchg
xchg
mov
adc
in
and
xchg
shl
pop
cmp
cmp
bound
add
shl
pop
dec
jecxz
mov
cmp
jnp
imul
push
int
xlat
adc
out
jge
out
sub
fst
push
mov
add
xchg
mov
scas
loope
scas
push
imul
adc
loopne
inc
cmp
pop
aam
mov
bound
cs
test
sahf
jecxz
ret
push
cli
jl
xchg
repnz
jbe
movs
push
jns
pusha
and
outs
retf
call
bnd
lds
popa
fisubr
aad
loopne
call
mov
dec
jb
ds
rcr
movs
pop
mov
mov
pop
shl
popa
cmp
xchg
(bad)
xchg
sti
hlt
jp
nop
ins
dec
stos
sbb
adc
inc
mov
or
sub
cdq
(bad)
xor
cmp
pop
out
xlat
cmp
and
cs
mov
dec
and
xchg
or
mov
icebp
(bad)
ret
add
push
xor
not
cli
ins
dec
in
jns
mov
cmp
data16
jnp
es
adc
sub
mov
test
pop
les
adc
clc
mov
fnstcw
sbb
hlt
popf
and
scas
xor
sbb
add
mov
adc
retf
push
(bad)
mov
out
jmp
xchg
dec
mov
(bad)
jnp
push
xchg
icebp
pop
xor
(bad)
inc
fdiv
xlat
lods
test
cwde
inc
jnp
add
sti
int3
jge
dec
push
outs
mov
mov
xchg
sub
ds
mov
pop
cld
loope
push
dec
pop
in
or
sbb
cwde
inc
push
mov
leave
fnstcw
into
pushf
movs
xchg
loope
ds
add
test
pop
in
push
cmps
sub
jno
jmp
enter
jno
xor
xchg
push
xchg
(bad)
les
or
inc
fidivr
xor
int3
out
sub
xchg
loope
sar
sub
jae
in
jae
cmp
out
(bad)
pop
popa
ret
fadd
sti
pop
in
or
xor
shl
sbb
cmps
or
mov
lods
push
push
(bad)
and
rcl
test
xor
mov
test
outs
push
push
or
and
(bad)
ins
or
push
jge
jbe
cmps
leave
retf
pop
cmps
jns
aaa
ins
shr
hlt
and
imul
fistp
aaa
push
ins
(bad)
sub
xor
cmp
jmp
pop
loopne
adc
cmp
push
mov
repz
(bad)
fdiv
lods
test
inc
xchg
pop
(bad)
clc
dec
cmps
fidiv
mov
je
jp
mov
imul
or
xlat
sub
add
mov
jae
pop
mov
(bad)
sbb
pusha
mov
das
out
jb
mov
push
into
pop
sub
push
pop
div
xor
pop
(bad)
cmc
mov
pop
fbstp
fisttp
mov
mov
(bad)
ror
xchg
retf
cmp
cmps
cmp
(bad)
mov
gs
stos
daa
(bad)
fistp
aaa
xor
pop
scas
shl
clc
stos
inc
jno
push
mov
outs
sub
pop
test
ja
retf
dec
mov
test
fld
xchg
sbb
pop
sbb
sub
mov
adc
jb
ds
popf
fld
repnz
rol
int
ins
in
popa
aas
data16
mov
jo
push
sti
movs
or
cmc
loop
std
rcr
mov
xchg
dec
lds
jp
lods
jmp
repnz
jmp
repz
in
fwait
call
test
loope
cwde
adc
jmp
dec
lods
cmps
stos
push
jge
nop
xor
add
inc
xor
push
mov
pop
dec
mov
out
arpl
test
mov
loopne
add
cmp
inc
gs
(bad)
mov
ds
imul
mov
test
addr16
(bad)
gs
(bad)
js
repz
mov
or
cmps
bound
mov
dec
stos
and
test
sub
sbb
stc
cmps
in
sub
test
pop
stos
clc
sbb
movs
mov
mov
and
mov
test
shr
inc
call
std
cmp
xlat
inc
cmp
shl
js
mov
xchg
pop
repz
test
adc
xor
outs
push
sub
imul
bound
outs
push
adc
ins
adc
mov
imul
dec
test
xor
movs
jbe
adc
mov
mov
cmps
pop
add
enter
add
mov
es
into
inc
clc
add
push
aad
icebp
push
lds
loopne
adc
loopne
loop
sub
cmp
or
jmp
jmp
mov
cmp
lock
repnz
cmc
adc
push
test
xchg
adc
popf
gs
inc
push
mov
loop
or
mov
jo
or
sbb
push
push
jg
sub
mul
dec
push
mov
xor
fcmovnbe
cli
inc
push
inc
repz
cmp
dec
scas
jmp
lahf
add
xchg
rcr
mov
fiadd
jge
or
xchg
popa
jmp
inc
outs
cmp
push
int3
sti
cwde
retf
into
lods
jbe
pop
out
pop
ins
pmaxsw
mov
out
(bad)
push
jge
(bad)
and
(bad)
sbb
push
cwde
add
scas
xchg
jle
sbb
cld
pop
daa
fcomp
and
pop
mov
jp
das
xor
jo
jnp
mov
idiv
dec
sub
mov
bnd
xor
or
jmp
imul
cmps
fsub
jbe
lea
or
mov
jb
loop
sti
in
fist
xor
xchg
sahf
out
and
add
idiv
add
sti
sti
jmp
daa
jb
fisub
(bad)
(bad)
out
ins
fwait
xor
mov
je
test
dec
jne
mov
pushf
je
sbb
xchg
retf
aam
add
jae
out
mov
jl
repnz
mov
test
or
inc
outs
pop
int3
mov
add
into
dec
mov
aas
shl
rcr
retf
cwde
and
fs
cmp
cmps
mov
outs
xchg
mov
sar
cmps
retf
cdq
jb
inc
dec
shl
sub
fimul
dec
and
js
lds
pop
pop
xchg
and
cdq
loope
pop
int
or
rcl
sahf
test
xor
cmps
sbb
in
sahf
addr16
std
pusha
jmp
lods
stos
cmc
ja
addr16
std
push
xor
cmps
jb
inc
adc
shl
dec
jmp
movs
lods
mov
ja
out
mov
imul
push
dec
xlat
push
cs
add
sbb
adc
clc
(bad)
es
xor
push
clc
push
loopne
ins
stos
mov
ret
sub
lods
inc
jecxz
mov
lods
sbb
mov
inc
imul
aas
repnz
jb
push
into
dec
mov
call
mov
xchg
fwait
or
mov
inc
out
cmp
imul
imul
mov
push
sbb
repnz
cmp
and
addr16
int3
bound
or
(bad)
xor
xchg
or
nop
mul
pop
pop
dec
arpl
cmp
(bad)
in
out
mov
test
mov
cmp
pop
loope
stos
adc
mov
cld
cwde
or
add
loope
adc
xchg
ss
mov
pop
movntq
pop
jmp
fld
push
cmp
xchg
jno
jmp
les
jge
inc
dec
adc
jecxz
push
mov
out
fimul
xor
or
push
or
addr16
leave
cmp
add
scas
cs
sbb
push
mov
push
cdq
sbb
stos
and
mov
(bad)
sar
jbe
std
das
ins
lds
adc
sbb
pop
lahf
push
rol
ins
lahf
stos
push
and
mov
jecxz
jne
ss
rcr
mov
inc
dec
mov
push
jae
ror
int3
fst
sub
adc
mov
retf
ins
xor
mov
fwait
int
popa
mov
mov
outs
mov
pop
sbb
adc
lods
mov
es
cs
test
cmp
cdq
outs
pop
imul
sahf
pop
movs
into
jge
sbb
enter
ror
movs
jns
not
inc
push
inc
inc
sbb
xchg
jle
das
(bad)
mov
or
and
bswap
adc
movs
mov
test
call
imul
dec
das
dec
add
or
mov
call
fcmovnu
push
xor
pop
repz
mov
btr
ficom
retf
pop
sub
les
and
movs
xlat
lods
dec
and
arpl
test
sbb
sbb
jmp
push
not
cs
jb
pop
pop
xor
mov
add
sub
ja
pop
arpl
mov
ret
xchg
pop
stos
les
and
sbb
jbe
outs
ins
repz
lahf
xor
cmp
dec
push
jmp
loop
jp
cmp
es
xchg
push
mov
fadd
inc
dec
mov
ds
out
jl
sub
rcr
pop
inc
adc
fstp
xchg
fadd
and
test
ds
push
stc
xor
jmp
jp
mov
mov
jne
mov
sbb
mov
ret
jb
jnp
dec
jl
int3
inc
loope
addr16
sub
mov
inc
sbb
fs
out
xor
dec
and
iret
js
xor
imul
sti
cmp
shl
mov
xchg
out
add
sub
or
(bad)
sbb
pop
push
dec
sub
jo
xor
xchg
(bad)
fdivr
xor
push
shr
les
fldcw
pop
sub
pop
mov
lahf
out
mov
imul
mov
ffreep
leave
lods
out
outs
stos
das
jmp
repnz
mov
pop
mov
xchg
pop
test
sti
push
sbb
imul
pop
add
stos
xchg
ror
retf
pop
lods
xchg
fild
pop
sub
pop
movs
xchg
adc
xchg
aaa
xlat
ret
inc
je
xor
int3
pop
cmp
xchg
fs
xor
sbb
repz
in
jns
xchg
call
mov
adc
and
icebp
das
and
cmp
outs
xor
aad
adc
jmp
retf
dec
pusha
adc
test
add
out
movs
jno
jns
cmp
movs
ins
daa
iret
sbb
(bad)
dec
jle
stos
or
fist
icebp
inc
mov
mov
cmps
sti
into
les
in
mov
mov
and
xchg
ins
sub
loopne
movs
jnp
fwait
test
mov
and
mov
mov
or
aam
shl
push
pop
call
lea
(bad)
xlat
xchg
repnz
pop
fwait
pop
retf
xchg
mov
sub
jg
(bad)
(bad)
and
in
shl
test
adc
xchg
retf
mov
push
jnp
ins
adc
jge
scas
fild
aaa
cmc
mov
xor
mov
dec
shl
mov
lods
push
cwde
cmp
or
test
push
inc
stos
pop
mov
add
movs
pusha
mov
sub
(bad)
int
nop
push
in
xchg
data16
test
xchg
es
retf
not
data16
sub
xchg
cmps
dec
mov
push
lods
pusha
sbb
not
jp
dec
mov
mov
out
cmp
into
dec
xor
aad
out
or
push
fsubr
cmps
xchg
cmps
dec
push
cmp
lahf
or
jge
les
dec
shl
shl
adc
stos
or
and
pop
cwde
mov
inc
(bad)
or
lahf
psrld
popf
sbb
(bad)
fimul
jo
sub
or
sub
push
jb
cmps
mov
(bad)
in
sbb
sub
pop
retf
fst
inc
mov
xchg
push
jo
(bad)
cmc
test
adc
mov
push
or
mov
mov
rcl
mov
xchg
fisubr
test
(bad)
popf
pop
and
loope
mov
mov
lds
cs
repz
xor
push
iret
push
cmp
xchg
sbb
dec
xchg
mov
arpl
fyl2x
cmp
je
cdq
dec
out
lds
jb
or
and
xchg
and
daa
rcl
repz
popa
sahf
push
pop
lea
push
imul
fs
push
outs
mov
push
add
arpl
or
mov
loope
push
dec
sti
xchg
iret
repnz
aas
inc
fsubr
xchg
ret
mov
das
fild
in
xchg
push
cmp
xchg
push
xor
xor
pop
out
je
std
lahf
in
pop
retf
inc
outs
movs
loop
cmps
mov
cs
sub
ins
jmp
pop
adc
xchg
and
sti
aas
aam
mov
movs
in
aaa
mov
mov
dec
jecxz
xor
mov
xchg
imul
arpl
or
outs
mov
iret
in
xor
cld
lods
(bad)
popf
nop
mov
pop
xor
inc
sahf
jo
fcomp
cs
push
mov
imul
scas
ds
test
inc
xor
adc
and
loopne
gs
xor
aaa
jae
mov
rcr
xchg
jae
das
and
inc
or
jbe
cmp
daa
pop
dec
sbb
shr
addr16
not
mov
cmp
push
ffreep
sahf
(bad)
xor
jecxz
adc
stos
mov
jno
adc
pop
mov
sar
fidivr
mov
stc
jp
repz
std
inc
jmp
jmp
sbb
fidiv
popa
dec
int3
jecxz
arpl
jge
ins
adc
sar
jl
add
mov
scas
scas
jb
stos
call
inc
jmp
popf
test
int
mov
mov
fcomp
adc
sbb
jp
inc
pushf
and
aam
pop
xchg
and
jb
xchg
sub
arpl
aam
sbb
outs
mov
fstp
cwde
(bad)
jmp
mov
ds
and
pop
hlt
fimul
push
add
xor
mov
fstp
(bad)
mov
cwde
cld
jmp
or
sti
or
aad
add
xor
cmp
aaa
shr
scas
xor
xchg
lahf
pop
shr
lds
sub
outs
sub
sub
add
and
neg
push
sti
enter
xchg
test
sub
pop
add
sub
lods
retf
addr16
in
int
enter
dec
jo
es
add
mov
xchg
adc
popf
pop
movs
jno
sbb
mov
lods
pop
jno
cmp
psubusb
xchg
call
(bad)
adc
retf
outs
jmp
xor
fs
pushf
test
int
ror
push
push
fadd
fidiv
mov
cmps
xchg
ja
fcmovbe
popf
cmp
or
jecxz
sub
lds
cld
cwde
push
jle
push
mov
bnd
mov
imul
and
shl
aam
xor
xchg
push
ins
nop
in
pop
in
movs
arpl
push
dec
push
lods
lock
adc
or
aas
push
jns
call
out
movs
fild
ins
jl
adc
aam
outs
cmp
push
cmp
xchg
xchg
xor
(bad)
iret
or
sbb
adc
xor
loopne
add
and
mov
mov
dec
sub
adc
jmp
out
pop
mov
jge
movs
adc
add
cwde
js
nop
cmps
jge
sbb
or
mov
call
rcr
adc
xor
outs
pmaddwd
adc
call
je
sub
ficom
rol
fwait
and
mov
sar
push
inc
fst
ins
mov
retf
sbb
adc
mov
or
mov
add
mov
mov
sbb
xchg
nop
aam
iret
nop
sub
xchg
(bad)
mov
or
js
jmp
jb
call
sbb
in
fidiv
cmp
add
ja
or
mov
sub
and
sub
stos
adc
imul
je
cs
lds
xchg
sub
and
and
call
je
repnz
mov
leave
add
sbb
xchg
std
mov
call
rcr
ins
or
fisubr
fidiv
sub
stos
out
enter
repz
and
rcl
or
bound
or
nop
not
shl
test
repz
inc
sbb
push
retf
sbb
inc
mov
xor
jae
stos
cmp
push
jo
dec
dec
xchg
in
(bad)
xor
iret
movs
cwde
mov
mov
xor
loop
pop
push
dec
inc
(bad)
cs
(bad)
cmp
push
cmp
stos
mov
mov
mov
push
lea
adc
out
xor
and
rcl
jb
dec
das
gs
movs
add
(bad)
jg
adc
mov
jp
and
mov
xchg
jecxz
mov
test
pop
sub
mov
movs
leave
in
cmp
and
pop
ret
sbb
loope
pop
inc
mov
popf
cmps
repnz
dec
add
repnz
ret
das
in
inc
mov
push
(bad)
into
call
mov
ror
push
cwde
loopne
mov
aad
(bad)
not
or
push
into
lds
mov
sub
cmps
repz
pop
cs
mov
or
cmps
jecxz
jp
scas
lahf
push
ss
(bad)
js
pop
stos
sub
add
lea
xor
aam
mov
arpl
cld
mov
mov
addr16
repz
pop
(bad)
and
and
les
mov
add
xor
mov
ins
or
out
call
mov
bound
fsub
jns
push
test
stc
sub
xchg
sar
scas
xchg
imul
jge
cmp
push
aam
adc
clc
lock
fwait
test
sti
inc
dec
sub
ss
jmp
xor
stos
out
(bad)
jne
(bad)
outs
fbld
fiadd
call
xor
cmps
sub
add
mov
mov
push
fdiv
inc
pop
sahf
clc
movs
in
add
dec
js
(bad)
sub
cmp
repnz
pop
and
or
loope
ja
xchg
(bad)
adc
jo
and
xor
call
jge
add
sbb
push
ret
sbb
mov
(bad)
bound
jo
push
pop
mov
(bad)
dec
fwait
jb
movs
jl
out
(bad)
stos
inc
xchg
retf
shld
dec
push
inc
mov
mov
cmp
cmp
and
adc
sbb
inc
mov
mov
jno
or
push
mov
daa
sub
push
mov
jb
sti
cwde
fcom
(bad)
fadd
imul
shl
aas
mov
ins
(bad)
test
dec
push
and
jg
sar
scas
xlat
push
rcr
inc
mov
bound
and
mov
xorps
pop
out
ret
out
inc
out
cmp
mov
call
(bad)
mov
xor
loope
adc
lea
outs
out
adc
dec
pop
int3
xchg
mov
jmp
(bad)
mov
arpl
jecxz
inc
bound
popf
xor
ror
or
fadd
jne
cmp
aam
cld
sub
and
add
call
outs
cdq
cmp
mov
outs
clc
sub
inc
rol
popa
sub
not
(bad)
pop
mov
cmc
aad
into
fst
push
sar
mov
cmp
cli
add
adc
mov
je
xchg
jmp
cmp
lahf
xchg
cmp
test
inc
cwde
adc
mov
xor
mov
(bad)
push
fnstsw
push
js
es
pop
sub
cmp
cs
setns
fstp
addr16
into
daa
repnz
sbb
popf
retf
scas
in
cld
add
pop
ins
mov
ss
mov
or
shl
sub
push
or
pop
pop
shr
aam
lds
fsubr
mov
test
aaa
es
adc
xchg
xor
xor
mov
inc
movsx
jns
fs
cdq
xchg
cdq
aad
sahf
fs
inc
xor
dec
jg
stos
lock
adc
push
lahf
test
sbb
lods
xlat
js
cld
push
fwait
inc
rcr
das
or
imul
loop
(bad)
push
shl
sub
shl
into
in
dec
mov
inc
add
cs
ja
push
jbe
les
xchg
mov
mov
sub
les
mov
dec
repnz
mov
sti
xor
push
sbb
mov
sub
pop
dec
out
aas
mov
clc
pop
push
jge
test
jo
mov
call
dec
xor
mov
sbb
mov
mov
push
cmp
inc
xor
mov
push
in
jno
mov
pusha
add
imul
adc
adc
arpl
loop
iret
jp
loopne
mov
jg
push
into
pop
cld
mov
(bad)
jnp
jl
and
sub
pop
cmps
jno
loope
sbb
xor
movs
int
data16
and
push
inc
(bad)
into
cdq
daa
sbb
xchg
jbe
je
adc
sbb
mov
cmc
mov
push
push
das
sub
mov
mov
int
mov
cli
xchg
xchg
jb
add
je
ja
sub
push
push
pop
stos
mov
and
xchg
popf
jmp
jmp
jmp
push
jo
loope
scas
neg
mov
jle
mov
add
ja
ja
dec
ds
jo
inc
add
xchg
or
cmp
dec
pop
loop
das
cmp
jne
dec
jnp
cdq
pop
les
loopne
icebp
xor
dec
(bad)
mov
or
dec
add
sub
mov
xchg
stos
cmp
pop
sti
fs
std
mov
pop
pop
jg
ss
(bad)
(bad)
sbb
pop
pop
push
int3
mov
xor
cmp
mov
rcl
pushf
mov
xchg
jl
push
pop
mov
sub
push
dec
call
push
js
shl
in
mov
mov
mov
std
sub
call
inc
outs
mov
call
or
add
push
add
pop
and
rcr
loopne
xchg
cld
cld
inc
movs
mov
dec
cmp
or
push
pushf
sbb
xchg
loope
mov
mov
retf
sub
push
xchg
jns
sub
mov
daa
fdivr
dec
xchg
or
mov
sar
xchg
data16
push
dec
inc
das
mov
push
in
sub
test
gs
sbb
les
cld
mov
xlat
and
js
dec
int
and
je
(bad)
xchg
ja
out
bound
outs
clc
jnp
ins
push
mov
imul
add
or
xchg
popf
mov
mov
sub
aaa
dec
jns
sar
stos
push
mov
sbb
(bad)
shl
add
sub
(bad)
retf
out
jmp
mov
cmp
inc
sub
sbb
not
sub
pop
call
retf
add
rep
pop
in
mov
ins
mov
pop
adc
jecxz
repz
stos
out
dec
fwait
jnp
in
imul
push
clc
aaa
fwait
in
in
fdivr
das
jg
or
fcom
mov
or
repnz
add
aas
bound
xor
xor
popa
xor
inc
(bad)
and
ss
mov
jp
mov
adc
mov
xor
add
outs
and
lea
ss
(bad)
into
(bad)
bswap
rcl
mov
(bad)
add
inc
out
inc
cmp
out
adc
jmp
jmp
imul
push
push
mov
xor
cld
push
jno
enter
addr16
xchg
sub
mov
sahf
push
in
push
inc
icebp
mov
imul
rcl
inc
add
popf
jns
dec
cwde
xlat
push
jae
inc
lods
sahf
push
repz
xchg
sbb
lea
inc
leave
out
popa
in
xchg
cmps
dec
sub
cld
imul
sub
push
jo
shl
mov
jmp
icebp
pop
neg
fwait
in
mov
(bad)
pop
xchg
hlt
imul
ret
fbld
ins
sbb
fbstp
pop
sbb
and
mov
in
vaddss
aas
sub
push
xor
rcr
pusha
pop
cmp
or
daa
bound
adc
sbb
cmp
add
loop
pusha
inc
test
popa
mov
cli
jp
pusha
addr16
fstp
or
out
xor
outs
push
rol
adc
xor
add
(bad)
inc
data16
sub
cmp
out
cmp
leave
pop
sub
mov
adc
mov
jecxz
out
cmp
jbe
mov
call
(bad)
fwait
pop
stos
adc
push
or
pop
shl
sub
push
(bad)
mov
fcomp
test
dec
and
mov
cmp
lahf
jns
pop
adc
adc
sub
inc
ss
xchg
pop
xchg
iret
in
lock
mov
shl
js
cmp
gs
fidivr
mov
adc
lods
sahf
fs
inc
out
push
lods
add
fwait
aas
jnp
xchg
cmp
call
xor
rol
and
add
mov
test
daa
scas
in
test
jecxz
imul
loopne
movs
sbb
call
pop
adc
mov
ins
rcl
mov
jo
sbb
jp
mov
add
into
push
cmp
outs
xchg
js
xor
loop
dec
in
inc
mov
cmps
loopne
mov
dec
push
or
dec
jecxz
(bad)
add
xchg
xor
jo
pop
fwait
mov
mov
in
cmps
ds
inc
inc
jo
mov
js
xor
mov
les
adc
xchg
pop
ror
mov
xchg
int
mov
fsubr
jp
sub
sub
and
sub
ss
push
(bad)
pop
in
jmp
arpl
ds
push
popa
inc
add
cmp
fadd
lahf
hlt
push
xchg
pop
dec
getsec
add
lods
mov
sub
or
cmp
shl
lea
lods
lahf
in
call
cdq
shl
sar
jecxz
add
outs
das
jno
jle
inc
lock
gs
and
enter
mov
jns
fdivrp
mov
jne
js
xchg
xchg
arpl
mov
movs
and
das
jbe
mov
aam
pop
outs
jne
xor
popa
mov
adc
test
add
xchg
sar
cmp
lea
sub
out
sub
rcr
mov
lds
fiadd
movs
mov
mov
cmp
repz
sub
in
cmp
add
xchg
lods
pop
mov
popf
int3
fwait
iret
imul
inc
ss
out
push
dec
pop
fnstsw
enter
mov
int3
cld
les
jecxz
mov
mov
push
gs
push
ins
cmp
sub
mov
adc
pop
and
dec
fdiv
lea
sub
ror
les
adc
retf
mov
sbb
sub
loopne
pop
pop
daa
sub
icebp
jnp
xchg
add
bt
lock
ds
popa
add
in
call
cmp
mov
dec
std
xchg
push
pop
into
push
loopne
mov
cmp
gs
pop
vmread
cmp
inc
addr16
dec
xchg
std
pop
arpl
test
mov
jne
int3
push
in
ss
mov
cmps
jne
imul
mov
adc
hlt
xor
gs
stos
lods
(bad)
xchg
adc
lds
fnstsw
mov
mov
fdivp
aaa
xchg
(bad)
mov
sub
faddp
add
jge
aas
mov
jb
cs
push
and
push
stc
xor
pushw
dec
push
adc
idiv
mov
add
sbb
in
jmp
cli
mov
lock
jmp
mov
jge
lock
shr
pop
push
jns
sub
shr
iret
or
int
(bad)
fcmovb
or
int
sti
add
sbb
stc
in
iret
add
scas
(bad)
push
mov
adc
ins
mov
jnp
loop
lahf
mov
nop
ins
stos
mov
out
jnp
add
fldlg2
in
sbb
pop
xchg
add
test
leave
mov
(bad)
inc
and
clc
lahf
fidivr
repnz
xchg
xor
adc
jge
sbb
daa
fwait
stos
jmp
ror
jnp
push
repz
cwde
daa
cwde
ret
or
sar
or
je
in
idiv
inc
and
mov
mov
ret
xchg
pop
fisubr
int
aaa
xor
xlat
pushf
add
aam
repz
mov
mov
jmp
xor
sar
push
and
xor
jns
fstp
rol
adc
pop
xchg
add
ja
test
test
sti
ss
std
push
aad
pop
ja
xor
dec
fwait
ret
outs
jo
sar
lea
mov
push
lea
adc
cmp
pop
push
and
js
nop
adc
mov
xchg
int
into
fwait
xchg
xchg
push
push
cmp
in
(bad)
jno
lds
imul
mul
inc
shr
je
mov
dec
sahf
sahf
cdq
sub
sub
jecxz
mov
out
(bad)
les
rcl
mov
add
mov
lods
mov
loopne
dec
call
repnz
xchg
pop
shl
mov
jecxz
arpl
sbb
fldcw
inc
into
inc
fistp
and
mov
push
or
mov
mov
sbb
mov
push
or
mov
retf
std
aad
pusha
retf
stos
mov
jmp
and
cmps
fcom
cmps
cmp
lds
shl
adc
std
ins
ss
xor
repnz
or
xor
enter
cmps
jne
int
stos
mov
call
dec
mov
cmp
inc
jnp
loope
pop
icebp
neg
mov
push
pusha
xor
push
sbb
inc
sbb
cmp
cwde
adc
push
pop
dec
push
scas
mov
pusha
pop
cmp
data16
ficom
(bad)
xor
pop
imul
xchg
adc
sbb
jbe
sbb
shr
fisttp
and
push
int
add
lods
(bad)
nop
xor
push
push
mov
xchg
popf
ret
jg
sub
add
mov
mov
sub
jno
mov
adc
jbe
jmp
push
sar
cmp
lock
adc
push
pop
pop
adc
dec
outs
adc
push
(bad)
inc
je
adc
pop
mov
mov
inc
js
mov
fnstsw
(bad)
lock
call
adc
stos
sbb
popa
xchg
jl
push
or
add
pop
std
cmp
inc
pop
iret
daa
or
movs
xchg
fsub
lock
jmp
xchg
mov
add
mov
repz
push
cmc
jp
aad
fisttp
add
movs
and
stos
xchg
aam
sub
or
pop
pop
fdivp
mov
push
jne
(bad)
xchg
stos
sahf
fcomp
pop
imul
mov
pop
pop
fcomp
push
ss
add
add
loopne
stos
test
mov
xlat
add
ins
mov
fcmovne
hlt
adc
jg
or
ins
push
inc
cs
mov
aad
in
lahf
test
(bad)
in
aad
test
dec
aas
mov
lock
cld
push
fild
jmp
adc
adc
mov
cli
imul
or
ja
test
lock
outs
aas
fsubp
imul
call
push
add
ds
sbb
adc
arpl
mov
pop
push
scas
fs
dec
(bad)
fwait
push
inc
cwde
ja
pop
inc
retf
pushf
sahf
in
ins
cmc
scas
xor
(bad)
push
add
mov
push
sub
movs
dec
mov
out
dec
inc
cdq
call
inc
das
adc
scas
lods
push
jmp
mov
out
dec
xchg
inc
push
call
movs
and
lods
cld
(bad)
push
imul
inc
nop
scas
mov
sbb
and
ins
inc
test
fcomp
and
mov
jle
mov
daa
jb
in
push
pop
outs
xchg
stos
jnp
outs
mov
(bad)
cdq
xchg
mov
inc
cmps
rcl
aam
lds
pop
cwde
dec
jne
dec
cli
retf
lods
loop
pushf
mov
inc
pop
mov
dec
test
adc
mov
pop
das
adc
push
xchg
dec
add
(bad)
mov
stos
outs
add
cmc
in
xor
xchg
sar
ficomp
(bad)
mov
shl
sub
or
inc
dec
cmp
cmp
push
nop
je
xlat
dec
retf
inc
mov
test
mov
test
and
shl
mov
sbb
mov
mov
add
and
cmps
les
push
or
lea
jle
lods
movs
mov
add
pusha
jb
and
sub
fisubr
jae
cmps
sbb
jnp
mov
add
add
or
xchg
std
out
(bad)
cdq
push
mov
pop
stc
(bad)
ins
or
cmp
xchg
out
imul
hlt
sbb
or
hlt
in
or
call
fdivrp
xor
outs
add
pop
rcl
pusha
lahf
push
sub
mov
sub
mov
fwait
cmp
or
sbb
jne
imul
std
add
xchg
(bad)
dec
mov
xor
mov
pop
jae
rol
dec
or
push
sub
ret
ins
leave
mov
push
mov
lock
adc
or
and
psrlw
pop
mov
dec
xlat
xchg
mov
daa
int3
mov
mov
mov
scas
ror
pop
ror
pop
mov
pop
and
mov
mov
sti
push
mov
sub
cdq
pushf
push
cmp
lods
sbb
jno
cmp
mov
imul
mov
ins
mov
xor
mul
ret
cs
lods
inc
ja
ins
gs
pop
out
push
repnz
jle
mov
inc
(bad)
mov
add
fwait
dec
mov
fcomp
mov
xchg
mov
push
test
inc
sbb
js
test
rol
pop
fs
xor
xor
test
dec
aad
xor
hlt
pop
pop
mov
not
call
mov
lods
loop
pop
sbb
out
(bad)
jmp
xor
mov
inc
mov
cwde
dec
ja
outs
push
add
jae
sub
xlat
pop
xchg
pop
movs
add
sbb
and
paddd
xchg
movs
(bad)
mov
cmc
mov
cmc
adc
enter
popf
fidivr
outs
pop
or
jns
imul
out
xchg
out
xlat
sar
popa
shl
stc
push
inc
cdq
mov
div
or
bound
adc
movs
arpl
push
fld
cmp
pop
lock
rcl
mov
mov
cdq
outs
dec
(bad)
int3
push
push
mov
clc
sahf
and
fcomip
cmp
mov
je
iret
mov
(bad)
lds
xor
add
mov
in
lock
lods
jnp
jb
rcr
retf
lahf
push
xor
not
aad
or
fiadd
dec
loopne
mov
cmps
out
rcl
lea
test
add
add
inc
sti
cld
div
loopne
and
in
push
in
jl
dec
add
pop
or
push
sbb
push
cmp
push
iret
xor
jno
mov
fnstcw
neg
out
popf
addr16
jns
mov
imul
and
cld
sbb
sub
fwait
gs
xchg
cmc
pop
lods
xor
pop
mov
lods
lea
out
gs
mov
dec
xchg
jne
fwait
and
sbb
xchg
inc
lahf
dec
push
jb
sti
pop
ja
or
ss
hlt
mov
pop
dec
popf
movs
cmp
(bad)
ret
or
ret
ret
xchg
jmp
movs
or
fnstsw
es
mov
or
dec
out
aaa
mov
mov
xchg
or
fs
pop
test
push
fcom
push
or
adc
jle
push
mov
sbb
ss
imul
push
inc
and
mov
sub
inc
fbld
pop
(bad)
add
lds
pop
sahf
clc
or
movs
sub
mov
pop
inc
pop
retf
in
test
iret
mov
or
dec
pop
adc
dec
adc
mov
nop
loope
add
xor
pop
je
push
fldcw
fs
push
int
shl
loope
cdq
xchg
push
pushf
shl
jbe
and
sub
mov
mov
popa
mov
lods
mov
(bad)
jns
add
and
daa
push
mov
test
stc
rol
push
mov
pop
sbb
pushf
inc
jae
jb
sbb
aas
dec
jb
xchg
fucom
cmp
mov
bound
push
shl
rcl
(bad)
stc
ins
and
cmp
pop
ret
xchg
mov
xor
inc
xchg
test
or
fcomp
xor
stos
stc
xchg
mov
add
xor
inc
cmp
cwde
shr
(bad)
push
loope
or
ins
es
sub
xchg
mov
mul
jae
loop
in
lock
in
jne
mov
or
movups
dec
in
lods
fdivr
inc
clc
mov
xchg
dec
sbb
xchg
inc
and
shl
dec
jo
sub
loope
loop
jmp
push
pop
mov
sbb
or
jns
(bad)
xchg
imul
cmp
aam
mov
ficomp
retf
loop
sbb
sub
test
into
(bad)
fld
out
pop
call
cmp
pop
pop
sti
pop
rcr
inc
mov
sbb
icebp
cli
aas
loope
enter
mov
mov
fs
push
xlat
push
lahf
sti
lds
sbb
mov
test
or
jo
imul
loop
xor
arpl
jo
aas
stos
movs
sub
es
mov
add
retf
jecxz
mov
mov
pop
fwait
inc
pop
add
(bad)
jne
and
jmp
sar
cmc
xchg
or
rcr
iret
dec
out
fist
hlt
clc
int3
xchg
dec
aam
dec
and
xchg
jmp
stc
sti
push
jmp
sbb
loop
sbb
lock
in
mov
mov
cdq
cwde
mov
es
int
sbb
mov
sbb
cwde
cwde
test
adc
fstp
and
push
mov
loope
popf
shl
push
addr16
jp
cmps
jp
repnz
shl
mov
fwait
mov
add
push
mov
jnp
dec
shl
or
fsub
adc
sbb
adc
mov
lods
xchg
push
inc
cmps
imul
inc
adc
gs
loop
xchg
sub
mov
loope
pop
pop
rcr
ror
psubw
or
push
in
jo
shl
aam
inc
hlt
push
daa
pop
lock
ret
jnp
(bad)
(bad)
dec
les
hlt
or
mov
add
jo
je
lods
xchg
push
dec
pop
repz
imul
scas
fdiv
in
jge
(bad)
mov
repz
ja
bswap
sub
and
scas
rcr
pop
push
call
popf
xchg
xchg
fs
dec
push
mov
jnp
nop
push
xor
or
xor
fs
mov
bswap
sahf
mov
aaa
icebp
push
dec
cmp
mov
int
aas
or
daa
cmc
(bad)
je
jg
repnz
jmp
adc
out
and
cmc
add
add
(bad)
int3
mov
cli
and
mov
jecxz
(bad)
jb
repz
xchg
gs
jge
adc
gs
popa
and
mov
imul
aas
jmp
mov
jnp
and
stc
jno
ss
mov
jo
jl
call
out
jae
mov
push
lahf
and
div
or
cmp
in
in
xor
xor
(bad)
mov
adc
and
in
lahf
mov
or
retf
xor
inc
lds
iret
mov
aad
xor
mov
jmp
mov
js
in
int
call
das
adc
pop
xchg
sahf
bound
push
(bad)
jecxz
dec
push
fcmovu
cs
xchg
mov
shl
pop
xor
or
sbb
pop
jne
xchg
int3
pushf
pop
fldenv
shl
repz
pop
lock
push
mov
push
dec
fld
clc
ins
popf
pop
out
and
lds
sbb
adc
cdq
jmp
or
sub
pop
imul
nop
xchg
iret
inc
inc
xor
(bad)
call
xchg
cs
(bad)
xor
pushf
pop
cwd
pop
repnz
and
inc
out
jno
xchg
dec
repnz
fild
ret
mov
frstor
mov
mov
clc
repz
cmps
xchg
xor
dec
jge
jnp
inc
es
es
(bad)
retf
or
(bad)
push
push
out
xor
push
jecxz
pop
push
fisttp
icebp
mov
ds
push
mov
mov
push
mov
cwde
mov
rcr
xchg
iret
aas
or
sbb
sbb
imul
jns
jge
xor
jl
dec
pop
adc
sbb
fadd
(bad)
mov
ret
dec
loop
hlt
cmp
ja
sar
shl
std
lea
xor
push
mov
push
fisttp
jb
in
mov
frstpm(287
pusha
icebp
clc
retf
cmp
jae
imul
repz
in
pop
mov
cmc
or
sbb
sbb
cmp
inc
ret
int
lds
mov
jae
push
cdq
mov
mov
push
mov
sbb
out
int
lock
lods
dec
stc
pop
mov
std
leave
cmp
jae
les
cwde
adc
dec
pop
push
int
push
stos
popa
mov
js
adc
shl
dec
cmp
sub
scas
sub
and
adc
dec
idiv
rcr
mov
gs
in
mov
mov
bound
(bad)
dec
sbb
mov
fisttp
and
mov
or
sbb
dec
popf
enter
aaa
mov
mov
movs
push
pop
and
push
cwde
push
cmp
vmwrite
cmp
inc
mov
daa
aad
(bad)
pop
icebp
mov
mov
lea
mov
or
lea
push
pop
in
dec
shl
imul
in
sbb
dec
mov
ja
pop
fsubr
add
dec
sbb
jno
cmp
pop
xchg
inc
sbb
xchg
adc
addr16
popa
fldcw
jge
dec
or
mov
cmc
mov
lods
cmp
(bad)
repz
in
fs
inc
ror
mov
cdq
dec
push
xor
cmc
loope
sbb
push
cmps
aas
jp
stos
cmp
jmp
mov
movs
mov
pop
ret
retf
mov
mov
push
pop
imul
and
push
cs
loop
shl
mov
mov
in
push
sub
test
(bad)
jnp
xchg
sub
scas
stc
inc
cmp
loope
stc
int
and
pop
push
in
and
inc
shl
pusha
daa
pop
out
fcomp
arpl
and
stc
das
add
stc
in
lock
pop
retf
int3
xchg
adc
pop
xchg
mov
ss
dec
or
clc
dec
pop
cld
movs
mov
add
xchg
add
sbb
int
cwde
push
(bad)
pop
test
(bad)
pop
xchg
or
arpl
push
pop
pop
mov
mov
clc
retf
and
inc
pop
sbb
ins
mov
into
pop
jl
mov
call
(bad)
jae
out
adc
pop
push
fs
std
ficomp
jnp
mov
(bad)
mov
es
loope
(bad)
add
jg
repnz
or
dec
int3
mov
and
retf
adc
dec
iret
dec
mov
enter
mov
dec
aad
mov
and
push
jbe
and
cmp
aam
mov
out
sti
xchg
in
retf
cmp
fs
or
jg
add
xor
cmp
neg
inc
xor
cmp
xchg
cmp
inc
retf
mov
inc
jno
cmp
sub
js
mov
mov
adc
or
jns
mov
add
sahf
mov
mov
gs
stos
dec
mov
and
shl
into
inc
xchg
pop
or
(bad)
les
mov
jecxz
pop
dec
jmp
aas
cwde
mov
inc
xlat
arpl
inc
daa
dec
xor
mov
imul
clc
mov
or
and
push
fwait
scas
xchg
mov
mov
xchg
xchg
outs
adc
cmp
popa
jo
push
(bad)
cmp
clc
cmp
cdq
cdq
jbe
movs
add
adc
mov
mov
fdivr
cmp
out
jae
push
pop
xor
push
pop
pop
and
mov
in
fldenv
dec
fldcw
and
fidiv
je
(bad)
cwde
jecxz
scas
std
mov
xchg
jcxz
fistp
rol
lock
xchg
push
cmp
sbb
imul
xor
and
cld
xchg
out
cmps
and
ficom
daa
aaa
sub
pop
stos
inc
nop
cli
cmp
xchg
(bad)
and
(bad)
dec
sbb
ror
test
push
retf
push
cwde
add
adc
cmc
or
arpl
jo
adc
cdq
jmp
(bad)
fnstcw
int3
push
cmp
movs
and
clc
mov
add
push
es
popf
cmps
cmc
jnp
fcmovbe
jno
rcr
sti
mov
pusha
stos
add
outs
in
push
jge
test
mov
pavgw
sar
mov
mov
inc
jp
(bad)
cdq
cmp
push
out
arpl
popa
gs
test
lahf
mov
push
(bad)
imul
inc
rcr
fwait
jmp
pop
jae
jno
ss
mov
add
fwait
add
push
(bad)
and
inc
rcl
or
mov
adc
stc
and
sub
mov
cmp
scas
out
pop
fistp
adc
clc
or
xchg
cs
push
ins
jb
cmps
mov
jnp
xchg
push
sbb
ror
xchg
enter
jb
fsub
ins
out
sbb
dec
fcomp
fs
cs
jle
leave
movs
test
js
jbe
dec
ret
ret
int
(bad)
mov
into
sahf
jbe
xchg
inc
jbe
scas
adc
bound
fsubr
call
sbb
sahf
cli
loope
xchg
and
out
ss
retf
jp
aam
adc
jmp
cwde
xlat
push
gs
mov
nop
pop
xchg
jns
pop
repz
call
inc
daa
cwde
and
ret
push
loop
fst
cmp
xor
xchg
jb
sbb
jle
adc
mov
inc
sahf
js
xchg
mov
xor
scas
inc
mov
ja
cmc
sahf
adc
les
sub
sub
inc
icebp
js
cwde
mov
and
push
popa
xchg
xchg
sbb
pop
scas
daa
fcomp
repz
jns
loope
rcl
add
mov
imul
push
scas
or
inc
xor
rcl
aam
ja
jle
xchg
daa
xlat
sub
repnz
cmp
and
mov
test
dec
imul
imul
inc
int3
and
int
sbb
sbb
retf
push
cmp
push
push
fisttp
sahf
shl
ror
add
dec
xor
sahf
or
stos
es
cmp
xlat
jle
sbb
into
f2xm1
cmpps
add
or
sub
push
push
(bad)
(bad)
div
ins
xchg
aaa
xor
mov
and
xchg
pop
loope
sbb
gs
xchg
mov
jb
sbb
xchg
adc
ins
aas
jns
lds
xchg
pop
popf
mov
fcmovu
dec
push
cwde
(bad)
outs
inc
mov
mov
push
jmp
jmp
in
cdq
and
cld
test
jp
pop
unpckhps
ins
push
mov
pop
fisubr
movs
fidiv
pop
xor
cmps
rol
jnp
mov
cld
lds
clc
adc
sbb
adc
cmp
test
test
xchg
cmp
jae
jmp
mov
xor
mov
movs
mov
xchg
jp
imul
sub
inc
imul
pop
sar
iret
push
xor
push
dec
dec
jb
or
fs
sub
dec
clc
xchg
fcom
clc
jp
ret
pushf
jg
das
pop
leave
into
(bad)
mov
inc
and
out
adc
cmp
cmp
adc
dec
sbb
sar
pop
outs
jns
scas
ret
xlat
jnp
je
or
mov
retf
js
sub
ror
jne
xor
jecxz
clc
mov
leave
call
sub
fisub
xchg
in
arpl
inc
mov
loop
(bad)
mov
sub
push
out
add
icebp
dec
js
xor
cmp
mov
stos
jl
int
push
popa
repz
test
mov
and
adc
cmc
idiv
and
pop
dec
add
ins
imul
xor
jl
jns
icebp
inc
sub
sbb
pop
das
or
es
outs
jo
outs
or
sub
and
inc
cmp
adc
cmp
in
pop
ror
fcom
rcl
sub
mov
retf
adc
mov
xor
push
(bad)
mov
cli
mov
data16
(bad)
mov
lds
clc
xchg
scas
xor
push
cmp
les
rcl
fisubr
imul
jns
xchg
(bad)
ins
push
jo
fild
outs
jo
jecxz
sub
rcr
sar
sbb
(bad)
jae
add
arpl
(bad)
pushf
sub
push
add
jmp
xchg
lods
loop
cmc
mov
in
into
cmp
xchg
xchg
cmps
xor
sub
movs
or
xchg
or
cli
cmps
ins
inc
gs
fmul
sub
pop
push
xchg
pop
frstor
leave
inc
es
xor
retf
rcl
sti
jge
fnsave
pusha
xor
aas
loope
cmp
fmul
or
cdq
xor
call
lahf
(bad)
(bad)
xchg
hlt
jb
cdq
mov
mov
mov
imul
mov
xchg
jg
jp
or
push
mov
xlat
and
dec
imul
es
push
shl
xchg
pop
idiv
pop
mov
(bad)
jg
and
add
popa
pop
mov
adc
pop
rol
mov
xor
sbb
fmul
jae
retf
fdiv
cmps
out
xchg
(bad)
inc
push
pop
fnstsw
push
call
repnz
pop
xchg
mov
pusha
adc
popf
sub
xchg
cmp
xchg
inc
sar
addr16
je
repnz
bound
xor
xor
and
shl
inc
push
cwde
push
sbb
fstp
aad
aad
repnz
jns
pop
jmp
xor
(bad)
sbb
pop
push
js
(bad)
dec
daa
jl
cwde
mov
dec
sbb
xchg
(bad)
stc
jmp
or
pop
cmp
ret
or
fidivr
jnp
pusha
mov
ss
int
popa
int3
in
into
dec
dec
adc
mov
push
mul
shl
and
jnp
mov
dec
div
add
and
test
(bad)
push
inc
rol
shl
cmp
xchg
or
and
cs
mov
movs
pop
(bad)
loop
mov
push
adc
or
scas
loope
test
pop
sti
aaa
sti
pusha
jns
sahf
test
xor
adc
outs
cwde
xor
add
cdq
in
push
push
push
adc
ret
int3
cmp
fld
(bad)
xor
movs
xchg
arpl
sbb
lods
repz
adc
imul
push
xchg
xchg
cld
fst
fld
int3
sub
inc
inc
aam
cmp
icebp
push
jle
xchg
jl
mov
js
sub
adc
addr16
std
enter
xor
jns
pop
repnz
xchg
fld
fs
sub
push
push
popa
ins
arpl
loope
sbb
pop
inc
xor
mov
stc
jl
push
jmp
mov
jmp
lds
retf
int3
retf
inc
fwait
loopne
jmp
stc
sub
dec
xchg
rcr
cmp
xor
scas
cmp
nop
push
mov
retf
inc
cmp
xor
pop
int3
out
repz
jge
mov
push
pop
cmps
adc
ins
out
bound
adc
pop
inc
cmp
cmps
imul
bound
(bad)
(bad)
or
(bad)
lock
out
ins
mov
fsubr
sub
in
mov
inc
fiadd
loope
pop
lahf
xor
fxch
dec
data16
xor
fsubp
xchg
pop
cmp
movs
mov
and
jno
and
ret
and
js
out
mov
popa
pushf
sub
mov
sbb
push
inc
xchg
inc
scas
or
pop
or
jge
add
dec
popa
mov
movs
retf
int
mov
mov
push
pushf
jns
mov
das
lods
mov
(bad)
fld
mov
into
aas
loop
outs
data16
imul
aaa
jmp
call
lods
sub
in
sub
mov
je
sub
fistp
adc
sahf
pop
xor
and
xchg
cmp
inc
xor
xchg
adc
xor
iret
sub
outs
mov
out
dec
scas
int3
aad
pop
stos
popa
sbb
pop
dec
adc
rcl
ret
lds
dec
mov
push
loop
(bad)
inc
mov
leave
out
bound
push
cdq
rcr
(bad)
imul
xchg
cmp
cmp
sahf
mov
out
dec
pop
pop
ins
and
rcr
mov
xchg
pop
mov
sbb
imul
xor
popa
pop
fidiv
addr16
or
cld
sub
or
jae
sub
adc
loope
push
movs
test
out
sub
pop
push
mov
lock
int
fstp
cmp
daa
or
inc
jb
lock
in
adc
push
pop
sub
test
loope
xchg
mov
imul
hlt
xchg
out
clc
movhps
sar
jb
mov
fdiv
movs
fs
popa
push
sahf
leave
in
movs
int
mov
gs
xlat
mov
lock
cmp
or
push
sbb
sub
lods
xchg
ss
sbb
rcl
push
lods
jmp
lgs
mov
js
xlat
icebp
pop
xor
cmp
fdiv
xchg
mov
sahf
icebp
push
adc
gs
inc
inc
mov
pushf
jbe
js
retf
fidiv
pop
xchg
jp
mov
out
adc
adc
mov
mov
mov
add
int3
popf
bound
jle
jb
sub
push
inc
mov
dec
jg
mov
fcom
and
ja
les
push
das
xor
dec
dec
dec
fs
push
xchg
push
cmp
inc
xor
int
sti
lea
fwait
retf
fdivp
mov
sar
in
stos
pop
mov
push
ror
lahf
jns
pop
repnz
mov
add
(bad)
pop
and
test
mov
mov
or
and
cli
xor
mov
dec
das
add
or
rcr
mov
(bad)
xchg
sub
mov
jmp
jg
add
pop
test
adc
fdivr
sbb
fild
xlat
jo
mov
lock
mov
inc
push
xchg
inc
call
jbe
mov
add
cmp
pop
imul
sub
cmp
movs
arpl
mov
icebp
jmp
inc
scas
push
cmp
inc
mov
ja
add
cmp
ret
add
mov
ja
adc
pop
in
jno
movs
or
pusha
imul
pop
(bad)
into
lods
mov
push
aas
stos
int
dec
mov
cs
push
inc
in
repz
fwait
add
stc
ror
cld
in
mov
fld
mov
(bad)
cmp
shl
shr
bsr
jmp
icebp
cmc
cmp
not
(bad)
sub
nop
sub
dec
xor
in
leave
scas
hlt
or
jnp
ds
push
(bad)
cld
in
jo
bound
icebp
pop
jb
xchg
movs
pop
and
xchg
data16
sbb
xor
pop
les
loope
jbe
dec
adc
xchg
mov
sub
inc
in
mov
sbb
xor
(bad)
push
xchg
sub
les
pop
or
dec
fdiv
jl
fsub
add
das
icebp
mov
in
test
pushf
lds
mov
outs
mov
jne
mov
push
int3
and
sbb
sbb
mov
js
icebp
mov
(bad)
mov
cmp
rcl
pop
dec
dec
and
(bad)
(bad)
push
sub
sbb
ins
adc
cdq
jae
sub
jecxz
das
mov
fs
jae
test
repz
cmp
aas
out
cmps
pop
rcr
mov
xchg
lods
fisubr
push
nop
je
xor
xor
outs
rcr
push
mov
movlps
dec
mov
xchg
stos
imul
push
enter
pusha
sbb
mov
pop
iret
ror
pop
aas
mov
movs
pushf
dec
in
xor
pop
or
dec
push
popa
adc
out
enter
adc
jge
jg
aad
cwde
fstp
or
iret
xchg
out
adc
xchg
lods
push
mov
retf
test
mov
and
adc
retf
xor
xor
jae
fs
xchg
rol
ins
shr
dec
cli
gs
es
sbb
int3
and
push
cmps
mov
sar
cmc
sbb
pushf
pop
mov
neg
pop
mov
fdivr
cs
xchg
jp
js
jbe
sbb
stos
mov
and
aaa
add
retf
sbb
imul
jle
in
rol
in
out
in
adc
loope
dec
sub
js
into
xor
(bad)
pop
mov
ins
sub
mov
loope
pushf
and
cli
push
mov
pop
test
mov
fsubr
sbb
movs
push
in
pop
inc
adc
in
fs
sub
aaa
fistp
dec
ret
daa
imul
hlt
inc
and
sti
jo
sub
adc
cmps
data16
push
adc
sbb
inc
mov
int
pop
test
(bad)
xor
loopne
data16
push
push
arpl
pop
jmp
sahf
dec
ins
add
mov
popf
shr
jo
and
rcr
shl
xchg
aaa
ja
(bad)
cdq
inc
sbb
mov
sbb
test
sub
pop
jno
adc
sub
call
pushf
out
sahf
mov
sbb
retf
and
adc
pop
lds
jmp
(bad)
sub
adc
adc
call
call
cmp
les
adc
cmp
inc
adc
mov
(bad)
shl
jp
jge
gs
xchg
aas
jns
xor
sbb
stc
push
or
movs
loopne
not
cmc
mov
in
fist
std
popf
mov
adc
mov
test
jb
cs
aam
test
imul
add
mov
jns
and
adc
cmc
in
es
ror
mov
add
rcr
or
(bad)
xchg
(bad)
out
inc
jmp
and
call
sbb
push
and
in
out
or
ss
in
push
rcr
add
nop
lds
imul
inc
push
jbe
xchg
es
xor
push
jb
outs
(bad)
lahf
stc
(bad)
jmp
stc
icebp
pop
xchg
lahf
dec
mov
rcl
sbb
dec
fldenv
ret
xor
sub
fsub
retf
in
sbb
sub
dec
inc
jg
retf
xchg
mov
lock
mov
add
data16
out
ins
dec
and
cwde
out
rol
cli
xor
ret
enter
arpl
mov
int
mov
shr
stos
stc
ins
lea
cli
fbld
test
mov
js
adc
add
test
ret
cmp
pushf
pop
aaa
and
xor
in
movs
out
addr16
add
sub
movs
es
sub
jle
mov
jecxz
and
test
je
push
push
mov
mov
cs
daa
and
dec
inc
out
jb
jmp
xchg
jne
scas
cmp
dec
(bad)
ss
xor
sbb
test
adc
push
pop
es
(bad)
lahf
stc
int3
int3
cmp
in
adc
add
sahf
cs
outs
jnp
cmps
pop
add
mov
inc
inc
sar
xor
call
data16
add
pop
adc
xlat
cwde
inc
packuswb
shl
shl
movs
stc
int3
aaa
ror
push
and
rol
xor
cmp
ds
fild
js
(bad)
stos
adc
mov
sti
in
les
mov
xchg
imul
cdq
dec
shl
in
daa
xchg
gs
frstpm(287
loope
dec
jle
mov
ror
lea
mov
clc
and
repz
imul
dec
mov
fidiv
dec
add
ror
popa
pop
push
test
sub
int
jns
push
sub
lock
pop
pop
out
pop
addr16
icebp
xor
adc
adc
retf
mov
lods
pop
add
push
adc
inc
out
xor
mov
les
test
call
mov
jp
neg
xor
or
shl
lock
ficomp
xchg
and
test
cmp
(bad)
(bad)
push
stos
cs
inc
adc
lods
dec
loop
pop
push
lock
mov
pop
addr16
sub
xchg
sub
lods
cli
inc
in
enter
and
ret
arpl
rcr
inc
out
mov
loopne
repnz
pop
movs
sbb
xor
and
in
sbb
sar
cmp
ficomp
cmp
popa
aaa
sbb
jns
retf
(bad)
rcr
aas
pushf
sub
sub
mov
mov
cmc
fmul
cli
ror
pop
xor
adc
out
lods
addr16
scas
test
dec
addr16
cmp
shl
je
jmp
leave
push
shl
cdq
xor
jnp
mov
int
jo
add
fistp
jecxz
push
(bad)
xlat
mov
cmp
cmp
(bad)
push
jnp
rep
mov
cmp
stc
ror
aas
jbe
pushf
dec
cmp
push
dec
loope
cwde
pop
add
icebp
sbb
(bad)
sahf
pushf
jp
or
fnsave
and
lahf
je
xchg
mov
std
mov
mov
call
les
mov
cmps
and
lds
and
icebp
push
repnz
pop
cmp
cmp
js
jb
ret
es
(bad)
xor
and
ret
aam
ficomp
inc
inc
and
mov
(bad)
(bad)
enter
(bad)
shr
iret
adc
pop
pop
clc
mov
dec
js
sub
test
jp
int3
aas
add
or
add
cmp
mov
or
push
cmc
sbb
test
ret
mov
mov
sahf
outs
cmp
or
cmp
gs
shr
adc
mov
xchg
add
lds
dec
clc
inc
xchg
pop
adc
xchg
cdq
ret
and
mov
or
xchg
adc
bound
out
mov
jno
xor
addr16
ret
or
sub
stos
push
iret
das
cld
stc
ror
xchg
repnz
dec
xchg
pop
ret
sti
lahf
xor
jnp
retf
or
xor
mov
js
loope
xor
sbb
xchg
jle
jg
cmp
or
ins
push
dec
ss
adc
cmp
ss
call
pop
sbb
and
adc
(bad)
jg
enter
rol
and
ins
and
call
mov
sub
popa
cmps
into
mov
cmp
in
and
mov
hlt
(bad)
shl
pop
jnp
adc
pop
mul
sar
(bad)
sbb
lea
pop
dec
fnsave
sbb
lods
pop
cld
cdq
push
pop
or
mov
repnz
mov
cdq
cli
les
jl
mov
mov
xor
inc
fldcw
ins
cmp
and
nop
mov
mov
inc
ja
jb
sub
mov
inc
lds
and
xchg
add
call
test
mov
push
mov
mov
pop
inc
mov
cmp
cld
inc
scas
icebp
dec
mov
fsubr
pusha
movs
dec
fstp
sub
das
data16
jecxz
cmp
mov
and
jmp
daa
xlat
dec
cmp
(bad)
into
(bad)
and
or
mov
mov
mov
ja
sub
loopne
(bad)
or
or
inc
add
jns
(bad)
clc
into
in
lahf
xchg
xor
adc
(bad)
inc
div
ds
pop
push
pop
int3
rcr
sbb
push
mov
mov
xor
enter
mov
push
test
sub
jns
or
sbb
cmp
gs
xor
hlt
add
inc
cmps
push
mov
bound
out
and
jmp
out
stc
movs
pop
sbb
push
sub
mov
sub
lea
and
push
sar
js
sbb
or
xor
mov
popf
ins
test
xchg
retf
add
pop
pop
shl
dec
daa
ins
sahf
xor
adc
test
ins
repz
cld
adc
push
bound
dec
adc
popa
loop
xchg
mov
adc
jns
xor
shl
(bad)
clc
jp
mov
sub
sti
add
mov
cwde
cmp
lea
mov
or
mov
into
pop
adc
mov
stos
jp
add
(bad)
jno
out
xchg
mov
(bad)
fisttp
mov
sub
adc
scas
cli
sti
mov
(bad)
jge
popf
(bad)
icebp
sbb
in
jl
pop
xchg
scas
xor
ja
cli
xor
ret
cmp
into
sub
jb
mov
xchg
fs
adc
or
mov
sbb
push
ss
add
retf
xchg
aas
mov
dec
mov
lock
pusha
or
inc
jne
push
cmps
xor
mov
out
jmp
mov
push
inc
clc
shl
lea
out
pop
repz
loope
mov
(bad)
pop
popa
cld
scas
adc
shl
adc
out
or
sbb
in
xchg
xchg
jl
mov
jg
sub
mov
jae
lods
xchg
sbb
xor
or
outs
aam
lods
out
cld
ins
push
pop
sub
push
or
inc
pop
inc
loope
pop
ja
xor
cmps
or
popa
xchg
popf
(bad)
into
pop
jg
push
or
xchg
xchg
int
mov
sub
enter
add
addr16
cmc
jno
dec
icebp
add
push
rol
jb
in
sbb
in
pop
mov
fld
in
xchg
xchg
jb
inc
out
lea
cmps
fwait
pop
fsubr
int3
jbe
sahf
xchg
xlat
mov
cmp
clc
out
add
cwde
dec
ins
push
mov
call
jp
and
and
mov
scas
dec
pop
or
cs
mov
sub
xchg
outs
(bad)
jle
les
ret
gs
mov
sbb
inc
cdq
sub
js
jb
cmp
cmc
push
je
mov
push
and
xchg
cmp
mov
jnp
cs
xlat
xchg
ret
shr
mov
mov
xchg
mov
pop
xchg
test
test
ss
mov
xor
nop
js
mov
std
xor
pop
xor
cmp
sub
pop
xchg
jle
or
or
xchg
sbb
cmp
popf
dec
pop
lods
cwde
pop
fwait
cmp
jmp
popa
retf
mov
test
mov
sar
fnsave
cwde
icebp
inc
pop
sahf
popf
jge
jns
ds
cs
arpl
sub
inc
mov
je
pop
lock
rcl
arpl
push
inc
push
sbb
je
sub
fwait
dec
mov
daa
push
push
stc
dec
fld
cmps
ss
jg
hlt
aad
inc
pop
sub
iret
add
add
sub
xchg
arpl
jae
sub
mov
mov
adc
leave
sbb
aas
fadd
pop
xor
sub
jmp
iret
xor
lds
xchg
xor
fwait
lods
mov
mov
ja
gs
dec
test
and
test
mov
jp
jb
inc
cmp
sbb
ficomp
cmp
int
sub
cld
mov
aam
stos
xchg
pop
ror
int3
or
or
push
sbb
add
xlat
retf
cmps
cmp
pop
cmps
cmp
std
or
or
scas
push
pop
or
fwait
jb
and
aaa
ret
inc
adc
or
call
cmp
xor
dec
arpl
pop
repz
addr16
adc
fiadd
sbb
loop
xchg
(bad)
xor
inc
aas
movs
fs
mov
fcmovb
mov
and
jb
clc
mov
daa
xchg
ret
enter
dec
sbb
xchg
cmp
icebp
test
cwde
cmp
or
gs
and
push
imul
cmp
or
push
mov
es
js
jmp
outs
jmp
mov
shr
cmp
xlat
cmp
inc
pop
mov
cmp
jmp
ins
fdivp
(bad)
mov
jecxz
xor
fstp
ja
cdq
xor
inc
jo
sub
adc
mov
ins
or
pop
(bad)
cld
adc
enter
dec
les
call
or
mov
push
jbe
mov
fisub
jge
push
mov
or
pop
retf
jne
xor
cmp
mov
dec
jne
shl
add
sbb
das
mov
call
mov
out
mov
ficom
pop
not
dec
ja
push
rol
xchg
sbb
push
and
or
add
and
add
cli
(bad)
pop
and
imul
xlat
lock
jmp
test
into
imul
out
add
aas
(bad)
mov
mov
jg
sub
push
mov
(bad)
and
and
xlat
nop
aas
mov
inc
outs
pop
outs
adc
std
call
dec
xor
in
dec
int
jnp
fs
cmp
dec
cmp
je
loopne
mov
mov
sbb
push
lock
shr
repz
mov
dec
(bad)
lea
mov
movs
xchg
out
sbb
pop
cmp
pop
retf
nop
enter
adc
ror
pop
daa
xchg
jg
loop
adc
(bad)
jl
dec
cmps
shl
fcom
pop
ficom
jno
aad
adc
adc
outs
jns
mov
and
(bad)
je
jmp
push
clc
pop
ret
xchg
loopne
jo
adc
pop
jle
cmc
xchg
dec
call
adc
mov
cmp
inc
gs
stos
mov
bound
dec
fs
arpl
fldenv
aas
inc
rcl
sub
rol
data16
mov
mov
inc
(bad)
jae
pop
jl
movs
aam
(bad)
loop
adc
sbb
scas
xchg
sub
out
jg
fbstp
pop
loop
mov
xor
inc
in
lods
dec
mov
add
xor
dec
stos
add
push
cmp
dec
sbb
pop
shl
popa
adc
cli
ins
pusha
xor
pop
xor
(bad)
cdq
and
jnp
into
leave
pusha
cmp
out
cmp
fs
xchg
sub
sub
vsqrtss
fidivr
out
(bad)
stc
adc
cld
or
scas
sbb
or
pusha
push
in
outs
inc
cld
call
leave
xchg
push
sub
gs
mov
aaa
and
xchg
(bad)
push
arpl
or
js
(bad)
sti
cmp
push
push
add
mov
cmp
xor
loope
das
pop
jmp
es
aas
jns
adc
mov
or
imul
adc
dec
cmp
imul
leave
es
add
rcr
cmp
push
and
push
xchg
dec
mov
jge
loope
lods
jo
xchg
daa
repz
mov
jmp
cs
(bad)
ja
in
inc
ds
daa
mov
iret
adc
rol
xor
cmp
lds
sub
fwait
jnp
bound
and
rcr
and
add
cwde
out
push
push
and
jno
cld
jl
in
shl
cmp
(bad)
push
int3
jno
dec
fbstp
mov
xor
outs
add
test
sub
jbe
ret
xchg
add
mov
aas
jbe
dec
fcmovnu
retf
push
sub
imul
mov
loopne
sbb
fcom
mov
stos
int3
std
sti
dec
rcr
xor
xchg
inc
push
inc
popa
dec
inc
fcom
repz
ins
cmp
adc
dec
lea
call
cmp
add
push
dec
ficomp
hlt
push
mov
dec
scas
sbb
stc
lds
push
sub
or
lock
mov
mov
and
test
stc
imul
addr16
popa
(bad)
popf
xor
jo
sub
mov
sub
jae
sub
add
call
lea
xchg
fisubr
retf
pop
jae
cmc
out
movs
mov
sub
pop
add
(bad)
neg
mov
daa
aas
(bad)
sub
arpl
pop
pop
push
xor
lock
push
scas
sub
or
es
mov
retf
hlt
stc
jnp
sbb
imul
dec
aas
inc
pop
mov
push
inc
mov
popa
stos
std
shl
sar
pop
push
iret
mov
sbb
xor
repz
pusha
push
push
pop
mov
jle
retf
mov
(bad)
adc
sub
and
jmp
(bad)
adc
fldcw
retf
stc
sub
outs
xor
pop
nop
sahf
inc
pop
in
sub
sbb
and
mov
in
call
test
adc
ror
daa
mov
push
or
rcr
(bad)
ins
inc
jae
fs
or
xlat
mov
jno
cdq
mov
adc
(bad)
add
fdivr
pop
pop
js
and
push
mov
xchg
cmc
mov
sbb
and
es
ja
popa
fld
fsub
cmp
mov
int3
push
mov
inc
sub
ss
xchg
cmp
cdq
jae
or
cwde
sbb
xchg
nop
mov
mov
jl
ds
xchg
nop
gs
jecxz
xor
sub
pop
fimul
inc
xor
xor
fidivr
icebp
lods
bound
adc
lods
xchg
inc
cmp
mov
movs
mov
inc
daa
inc
ror
add
mov
adc
sub
in
ins
mov
sar
ret
xor
popf
dec
repz
mov
sbb
int3
and
jns
cmp
push
loop
xchg
mov
pushf
cmp
mov
jmp
fcmovbe
iret
xlat
pop
pushf
jle
rcr
test
cmp
rcl
je
aam
jle
scas
je
xchg
jle
mov
cmp
les
xchg
aam
push
sti
mov
ins
pop
pop
mov
inc
out
shl
adc
sub
jge
sub
fwait
iret
lods
ins
shl
mov
jb
jbe
fucomip
jnp
jge
loop
ss
sbb
mov
lods
mov
pop
mov
sar
(bad)
test
xchg
mov
sub
fdiv
shr
jecxz
xchg
mov
je
xchg
xor
inc
pop
jg
in
test
lods
xor
(bad)
jne
mov
test
ret
cmp
imul
movs
cmc
in
mov
cmp
cmc
mov
and
shl
pushf
sub
jl
sti
mov
ror
jg
mov
popa
shl
cmp
lea
stos
loopne
pop
pop
sub
scas
cmp
ds
fs
test
(bad)
cmp
ret
arpl
mov
xlat
cld
xchg
das
mov
repz
dec
lods
std
stos
or
lods
jnp
mov
shr
call
xchg
mov
out
xor
pushf
ins
xchg
sbb
(bad)
clc
hlt
dec
xchg
fld
jb
sbb
imul
outs
xlat
iret
imul
and
inc
xchg
sbb
cmc
pop
out
sbb
dec
xchg
test
shl
in
mul
loopne
movs
and
jb
ins
sub
gs
cmc
fnstsw
push
in
loopne
(bad)
shl
push
fwait
imul
shl
(bad)
enter
mov
jne
repnz
xor
js
test
pop
mov
push
mov
test
div
cli
mov
push
(bad)
rcl
sub
pop
push
call
mov
lea
and
in
inc
out
cmp
jae
cmp
data16
lahf
mov
loopne
pop
sbb
inc
mov
mov
adc
loopne
outs
jl
mov
int
(bad)
sti
cmc
(bad)
fdiv
push
(bad)
pushf
(bad)
cmp
cli
fwait
pop
(bad)
idiv
mov
xchg
mov
xchg
sbb
call
icebp
xchg
(bad)
fwait
xchg
test
jp
jnp
xor
adc
test
cmps
or
pushf
imul
iret
clc
push
xchg
pop
mov
loopne
fld
fwait
in
in
fucom
int3
jmp
jl
(bad)
fsub
jg
sub
jecxz
xor
imul
call
loopne
icebp
jns
scas
das
pop
lock
mov
adc
lods
jmp
(bad)
jae
repz
out
jecxz
das
adc
push
cmp
push
mov
iret
lods
je
or
pushf
repz
inc
xchg
mov
push
ret
ja
scas
lea
sbb
fadd
or
jae
mov
mov
pop
sub
jmp
mov
inc
xchg
push
mov
shr
addr16
mov
imul
cmps
imul
cmp
out
jb
icebp
fsubr
(bad)
leave
and
das
cwde
bound
adc
data16
sbb
push
je
in
jmp
cmp
js
jmp
sub
aad
and
cmps
push
iret
and
mov
and
fcmovnbe
(bad)
gs
mov
sub
mov
scas
cs
mov
nop
(bad)
pandn
loopne
cmp
and
lahf
mov
jmp
call
daa
out
xor
out
jno
imul
xor
jno
scas
mov
jle
in
popf
cmp
ss
hlt
push
push
lahf
push
dec
xor
pushf
imul
add
pop
test
dec
in
pushf
daa
rcr
imul
retf
test
test
mov
xlat
xor
xor
scas
nop
cmps
mov
fnstsw
mov
enter
imul
mov
lea
sahf
je
xchg
push
dec
sbb
mov
in
lods
sti
xchg
(bad)
jnp
dec
lahf
push
mov
mov
mov
hlt
fisttp
cmps
jnp
pop
pop
das
shl
sub
ds
outs
xlat
dec
mov
jae
loop
test
aad
xlat
pusha
shr
imul
pop
test
jo
into
dec
sbb
jno
repz
push
in
mov
daa
lahf
hlt
stc
push
stos
lock
push
cmp
out
mov
or
dec
sbb
mov
(bad)
and
fst
add
out
mov
loop
test
push
out
pop
cld
mov
sbb
aas
push
inc
aaa
scas
mov
nop
jnp
pusha
jmp
nop
movs
xchg
and
sub
xor
(bad)
mov
pop
xchg
pop
inc
push
(bad)
xor
movs
lea
jmp
adc
push
rcr
sbb
sbb
cwde
movs
test
mov
push
loope
xor
or
jmp
dec
jae
dec
rcl
mov
stos
mov
dec
push
jae
push
and
(bad)
arpl
and
cli
inc
xchg
neg
movs
inc
pop
and
xor
ret
nop
movs
inc
ins
loopne
mov
(bad)
xchg
movs
add
mov
add
cmps
(bad)
cmp
jne
add
lods
and
cli
jo
or
xor
add
(bad)
int
and
mov
mov
popa
push
int3
es
fiadd
mov
xor
jmp
dec
out
cwde
push
sahf
sbb
or
push
push
mov
or
out
or
add
pop
xor
(bad)
or
dec
push
pop
mov
outs
ret
stos
subps
jecxz
sub
imul
or
jae
push
js
jb
mov
rol
xor
lods
add
mov
je
rol
gs
xchg
cmovo
add
or
(bad)
pop
and
mov
sbb
sbb
cmc
jns
mov
or
test
xchg
movntq
cmp
movs
inc
mov
popf
pop
inc
jmp
mov
push
mov
xor
mov
xor
push
and
sub
test
or
in
outs
push
xchg
jecxz
pop
dec
dec
add
sub
fdivrp
ss
fbld
pop
add
mov
sub
mov
xor
jmp
sub
mov
mov
mov
pop
push
xchg
movs
adc
sub
outs
add
enter
psubd
dec
fimul
idiv
jle
fimul
jmp
pop
push
test
mov
jge
ret
xor
ds
jno
inc
lahf
dec
push
fucomp
pop
dec
stos
or
out
add
mov
dec
shl
fist
pop
ja
jmp
retf
add
js
(bad)
push
dec
mov
xchg
je
jns
cwde
xor
je
adc
retf
dec
cwde
fstp
imul
gs
fstp
add
fwait
add
or
adc
cmps
xor
add
add
or
rol
clc
cmp
fsubp
adc
mov
mov
dec
pop
add
inc
popf
or
test
xchg
pop
mov
mov
jns
aam
mov
jne
or
or
pusha
(bad)
xor
push
pop
retf
and
(bad)
bnd
push
js
arpl
lock
jl
lahf
add
lock
retf
lock
fnstenv
(bad)
mov
std
ja
cli
mov
mov
jl
or
cmp
mov
inc
(bad)
mov
jge
inc
jge
lods
pop
ret
not
pop
jne
pop
or
int3
or
hlt
aam
cmps
aad
inc
cmp
xchg
and
ret
into
add
cli
sub
mov
lock
stos
ds
repz
inc
cmp
clc
mov
lock
push
push
xor
add
sbb
sbb
out
jl
fwait
cmp
cmp
test
add
add
aam
xchg
hlt
pop
aam
psubd
or
or
or
mov
mov
fadd
fidiv
aam
lock
or
xchg
stos
sub
scas
lahf
mov
in
add
and
es
xchg
movs
fadd
shufps
nop
inc
lea
jp
pop
add
mov
iret
push
fbstp
call
lea
jae
rcr
ds
xor
jge
fisttp
cld
lea
test
loope
repz
add
arpl
js
icebp
and
loope
inc
js
inc
nop
pop
push
cmp
sahf
pop
fisubr
cmps
add
mov
ret
loope
rcl
mov
test
pavgb
sbb
fst
adc
clts
ret
ja
sbb
cmps
ret
fld
or
test
mov
aaa
test
add
xor
cmp
adc
aam
rol
or
push
cmp
add
add
je
(bad)
aas
add
lods
aas
mov
add
sub
sbb
test
fidiv
add
lock
pop
loopne
cmp
sbb
ds
xchg
add
add
add
and
repnz
cmp
push
mov
adc
jge
outs
sbb
mov
sahf
stc
or
ficom
mov
jae
cmp
add
mov
fmul
in
inc
push
test
imul
xor
call
cmps
xchg
and
xor
out
aas
test
aas
jl
sti
mov
leave
stos
pop
pop
pop
or
add
mov
clc
inc
push
cdq
adc
pop
inc
push
cmp
movs
adc
outs
gs
inc
pop
inc
fsubp
sub
inc
pop
cli
shl
add
iret
outs
or
or
inc
fbstp
add
dec
add
pop
push
in
movs
lahf
add
daa
mov
mov
sar
adc
test
lock
mov
cmp
nop
jno
loopne
and
in
sub
stos
and
cmp
std
mov
fidiv
or
(bad)
lock
aam
mov
push
fild
nop
sbb
outs
add
push
sub
or
icebp
das
mov
mov
loopne
jae
inc
lods
test
ja
in
jo
js
(bad)
cmp
sbb
call
pop
ret
mov
push
jb
xor
jge
xchg
popf
(bad)
mov
fadd
test
fstp
dec
in
xor
popa
clc
mov
mov
sbb
xchg
dec
call
xchg
dec
pushf
repnz
lock
lock
mov
mov
adc
mov
mov
pop
ja
mov
retf
imul
clc
clc
stc
jecxz
(bad)
fistp
ins
xchg
mov
data16
(bad)
cwde
xchg
fwait
ret
ss
mov
sar
inc
iret
stos
cmp
inc
aas
xlat
jle
and
inc
jp
jbe
lea
cmc
call
mov
adc
dec
mov
shl
(bad)
jo
jg
pop
in
xchg
aad
(bad)
jge
lock
or
mov
clc
loop
mov
sub
in
dec
fdivr
pop
into
mov
mov
xor
scas
mov
jecxz
fdivrp
(bad)
in
mov
mov
mov
cmp
jle
test
popf
(bad)
les
dec
dec
pop
fwait
and
mov
(bad)
dec
and
call
jb
popf
mov
aad
shl
jl
and
bound
pushf
sbb
pop
dec
push
sub
and
rcl
jmp
cmps
out
and
dec
(bad)
adc
leave
adc
adc
mov
xchg
aam
test
aam
(bad)
std
sub
mov
xchg
sbb
jle
hlt
jp
aaa
arpl
jmp
push
jnp
test
movs
jmp
hlt
cld
addr16
imul
pop
jne
mov
push
jmp
leave
gs
inc
cdq
pop
xchg
sahf
add
and
xchg
adc
out
or
arpl
add
mov
js
retf
(bad)
mov
jg
mov
mov
sbb
in
mov
push
jbe
jmp
sub
jne
mov
fisub
push
rol
push
lds
inc
inc
lds
sbb
mov
repnz
retf
jmp
cmps
pop
or
jl
in
enter
push
add
scas
and
pop
aam
mov
mov
rol
sti
lock
pop
mov
stc
frstpm(287
aam
cmps
mov
out
push
jle
out
xlat
mov
out
or
jecxz
ret
add
add
int
aad
stos
pop
inc
cmps
in
das
idiv
lods
out
stos
fstp
loope
mov
inc
pop
aad
pop
stos
addr16
sahf
cli
pop
add
ins
mov
aad
push
out
(bad)
dec
cld
aaa
mov
loop
pop
xor
jb
retf
inc
(bad)
sti
cld
cmc
in
loopne
mov
and
pop
or
int3
aaa
out
xchg
stc
mov
aad
lock
jmp
xlat
jmp
push
inc
sbb
mov
daa
mov
mov
arpl
inc
mov
xchg
cmp
(bad)
lods
mov
sbb
sbb
mov
jb
mov
sub
leave
loope
xlat
daa
push
pushf
lahf
jg
xlat
cmc
out
push
ins
out
jns
sub
dec
into
jae
scas
aas
sahf
mov
jnp
and
cmps
sbb
jns
dec
into
in
ret
movaps
out
js
leave
cmp
loope
stos
or
inc
mov
push
adc
push
rcr
dec
aam
xchg
add
jl
ror
cld
iret
jne
(bad)
pop
pop
xchg
jg
iret
mov
cmp
mov
int3
xor
xor
xor
aas
div
add
xor
push
arpl
fcomp
inc
dec
push
stc
or
imul
jmp
mov
adc
sbb
scas
imul
lods
push
pusha
(bad)
fstp
(bad)
fcmovnu
stos
xchg
arpl
sbb
sub
lea
out
mov
and
aam
pop
imul
in
std
dec
stc
xchg
jb
in
ins
mov
sti
mov
aad
out
lahf
jbe
cli
imul
add
retf
pusha
stc
inc
in
push
mov
add
sbb
ins
stos
push
pop
fldenv
pop
repnz
lea
mov
retf
stos
push
scas
hlt
shr
xchg
sub
mov
inc
fnstsw
int3
pop
push
mov
in
cwde
repz
sub
test
imul
bound
mov
xlat
(bad)
sub
mov
int3
ret
scas
mov
iret
or
fucom
ja
(bad)
mov
fucom
jp
pop
mov
lahf
in
(bad)
ins
jmp
fidivr
fwait
jb
gs
cmps
lahf
sbb
pop
xchg
shl
in
fwait
imul
sahf
xor
in
jmp
pop
lods
jmp
xlat
push
scas
loopne
sub
pop
icebp
movs
arpl
mov
pop
stos
stos
pop
sub
sbb
test
cmc
(bad)
push
stos
out
fidivr
fimul
push
push
adc
loope
les
mov
cmp
pop
jmp
cmp
xlat
icebp
fadd
dec
int
sub
cmp
mov
loop
mov
imul
mov
sub
mov
(bad)
(bad)
jmp
ja
lods
(bad)
popf
jmp
dec
gs
iret
mov
cmp
(bad)
mov
out
sbb
out
xor
mov
jge
ss
fidivr
jns
or
repz
fyl2x
cmps
cmp
ds
jge
ret
pop
cmp
jl
stc
rcr
xor
sti
(bad)
out
das
and
je
repnz
retf
(bad)
cs
ss
in
stos
sub
loop
mov
imul
push
fdiv
dec
dec
shl
mov
aad
mov
xchg
mov
jno
loop
inc
in
xchg
push
pop
mov
movs
out
cmp
add
mov
ret
lods
daa
push
popf
loopne
hlt
inc
hlt
sar
gs
out
push
shl
sub
mov
js
pop
cmc
push
std
mov
fstp
jo
shl
jge
stc
icebp
cli
(bad)
movs
out
xchg
outs
movs
aaa
lods
fidivr
mov
hlt
dec
loop
mov
fstp
jnp
out
xchg
scas
inc
mov
(bad)
retf
pop
(bad)
cmps
(bad)
fbstp
mov
mov
(bad)
cmp
stc
mov
in
loop
pop
mov
call
es
dec
or
scas
je
(bad)
daa
(bad)
out
jl
jae
push
push
out
pop
jge
jne
mov
jnp
outs
loop
sbb
mov
adc
rcr
outs
out
sbb
sub
idiv
pand
sbb
jmp
int
shr
pop
cld
repnz
cmp
jle
jmp
push
cmc
test
cmp
rol
mov
push
sbb
imul
cmps
aam
aad
sub
cmc
pop
cmp
add
call
aaa
jae
inc
jo
loopne
stos
and
add
jne
mov
outs
jecxz
(bad)
mov
push
mov
cld
fsubr
jmp
aad
iret
repz
mov
jp
jae
aas
xor
jl
icebp
into
mov
into
mov
mov
out
in
dec
ja
out
jp
aad
mov
pop
loopne
fnstcw
sub
add
into
(bad)
in
hlt
xchg
hlt
xchg
jmp
lods
outs
mov
cdq
aaa
addr16
fbstp
jle
in
mov
jns
icebp
stc
xchg
out
mov
movs
test
fwait
jg
inc
stos
idiv
mov
cmovs
jbe
ret
cmc
icebp
push
not
add
lds
sahf
cmps
xchg
outs
je
retf
jecxz
inc
aaa
ds
ret
scas
mov
div
pop
dec
outs
int
xchg
jecxz
rcr
sbb
stc
fcmovnbe
ins
lahf
out
sahf
xlat
sti
pop
out
(bad)
cmc
jl
movs
jne
retf
fbstp
loope
iret
or
xchg
out
add
sbb
scas
jbe
jmp
cld
inc
mov
cmp
sub
(bad)
pop
fisttp
aas
popf
hlt
jo
scas
cmp
pop
jmp
imul
imul
mov
push
dec
pop
ficom
push
jl
repnz
(bad)
out
fwait
jle
sbb
leave
sti
es
fnstsw
dec
mov
imul
xchg
sbb
sub
stc
jle
fwait
push
sbb
stos
jl
enter
inc
(bad)
sbb
xchg
cmp
test
dec
out
cmp
xchg
outs
cmp
pop
cmps
mov
int
xor
cli
jge
pop
fwait
or
jp
iret
cmp
ret
shr
mov
cmp
int
xchg
push
aaa
out
pop
repz
xor
pop
ficom
sub
gs
push
add
(bad)
or
inc
int
adc
sti
iret
pop
out
mov
mov
mov
arpl
(bad)
cdq
pop
mov
mov
pop
inc
pop
push
mov
cmp
fsubp
stc
or
lds
push
jge
pop
mov
in
iret
ss
jae
popf
imul
jge
pop
(bad)
out
cmp
jle
call
out
leave
push
scas
push
loope
xchg
xchg
fmul
sub
sahf
aaa
push
scas
mov
jmp
pop
setne
push
xchg
(bad)
xlat
mov
lds
lods
jmp
jg
enter
stos
out
arpl
aam
mov
scas
rol
push
cmp
cmc
mov
jmp
aaa
cmp
dec
test
push
adc
adc
xor
jnp
jl
fstp
xchg
imul
jb
cmps
sbb
jmp
jbe
fdivr
in
ret
sbb
in
mov
ins
fcom
std
xor
jne
jno
into
ror
push
stos
inc
xchg
pop
imul
xchg
cmp
ins
push
pushf
push
lods
outs
mov
mov
fsubrp
fucomip
ret
mov
fdivr
icebp
add
adc
pop
out
mov
stc
(bad)
jmp
js
or
and
rcl
xchg
int3
std
mov
mov
pop
aam
jmp
into
xlat
pop
xchg
jl
mov
adc
int3
adc
mov
ficom
cmps
dec
push
pop
lock
retf
in
cmp
adc
movs
lods
cmc
jg
stos
fnstsw
rcr
jne
in
mov
cmp
jbe
xor
cmc
adc
dec
sbb
out
fcomi
in
retf
imul
cmp
idiv
scas
pop
fsubrp
xchg
lods
iret
cli
cmps
cmp
cli
dec
or
aaa
jl
movs
movs
scas
shr
leave
and
repnz
jne
cmp
js
scas
xor
xchg
sahf
mov
sub
pop
push
stos
into
icebp
mov
jp
mov
arpl
sub
push
rol
push
loope
sti
xchg
pop
(bad)
dec
push
cdq
arpl
gs
aad
sti
ins
addr16
cwde
xchg
mov
sub
sbb
arpl
or
retf
jmp
adc
dec
ss
scas
jne
mov
(bad)
mov
lods
out
imul
imul
mov
pop
xor
loope
sbb
les
fwait
mov
fdiv
push
pop
mov
inc
dec
jmp
push
push
jl
push
xchg
fild
outs
cmp
js
(bad)
stos
nop
das
stos
repz
dec
int3
adc
jb
inc
fistp
jnp
popf
mov
mov
sbb
mov
jmp
dec
iret
dec
outs
fstp
push
mov
sbb
adc
lahf
fdivr
lock
in
ja
mov
xor
fadd
pop
stos
push
sub
dec
pop
jno
(bad)
cmps
pop
xor
jb
add
xlat
retf
stos
pop
mov
mov
imul
pop
mov
test
pop
popa
sahf
cdq
stos
pop
iret
ficomp
jp
imul
(bad)
dec
mov
xor
xchg
pop
mov
jns
mov
in
adc
or
clc
pop
loop
push
sar
test
pop
popa
fwait
(bad)
jle
mov
mov
int
mov
adc
adc
imul
push
fcom
dec
pop
das
mov
mov
push
jecxz
jmp
mov
xor
inc
fld
dec
imul
fsubrp
aaa
fistp
sbb
in
xchg
retf
push
pop
sub
(bad)
es
xchg
popf
sbb
lock
int3
sbb
mov
lods
xchg
and
jmp
addr16
(bad)
leave
jmp
xchg
mov
xchg
cmp
sbb
sbb
mov
popa
sti
sahf
ins
jmp
jne
mov
stos
pop
dec
cmps
movs
jmp
cwde
or
popa
or
aas
pop
adc
push
ins
mov
push
fimul
inc
pop
movs
arpl
ins
xchg
fsubr
xchg
movs
push
dec
movs
aam
aad
push
pop
xor
mov
aad
(bad)
stc
jmp
aad
rcr
jne
mov
repz
sahf
arpl
imul
aas
lds
xor
cmp
xchg
lahf
push
pop
mov
mov
aad
pusha
cmp
push
int
fsubr
pop
sub
or
add
or
and
scas
jne
popa
(bad)
sub
into
push
shl
jnp
mov
xor
lahf
cmp
cmp
(bad)
popa
jmp
aad
pusha
cmp
imul
dec
sbb
fistp
loopne
cmp
xor
mov
sbb
out
test
mov
dec
gs
mov
xchg
cs
daa
xchg
je
jp
dec
js
or
fiadd
ret
push
cmp
sub
push
fnstcw
fs
test
add
outs
cdq
jno
mov
dec
or
cmp
sub
repz
test
(bad)
xor
push
imul
or
adc
data16
dec
inc
or
mov
jns
inc
xchg
pop
cli
int
adc
or
sub
sar
loop
pop
lock
push
test
and
nop
push
dec
test
push
xchg
and
inc
aad
adc
imul
retf
adc
popa
fild
adc
ins
sti
mov
pusha
mov
movs
enter
ins
cmp
adc
dec
fisub
mov
std
int3
retf
xchg
xchg
dec
ror
inc
pop
clc
sbb
xor
das
sub
jecxz
mov
test
sbb
dec
or
(bad)
loope
add
clc
pop
add
inc
out
test
dec
push
fimul
aam
mov
mov
mov
aaa
jnp
xchg
mov
out
ins
push
js
xchg
xchg
scas
xor
mov
loop
outs
call
jns
aaa
fcmovnbe
dec
jmp
push
mov
mov
setle
push
mov
rcl
push
out
imul
in
jbe
dec
retf
xchg
loopne
loop
inc
jns
movs
mov
pop
in
jbe
imul
adc
hlt
xor
dec
push
fiadd
cs
cmps
push
push
out
cmp
push
test
popf
lahf
push
mov
xchg
out
push
pop
movs
loop
jo
mov
jns
mov
mov
movs
cld
add
cmp
cmps
aam
mov
push
adc
lods
lds
jb
(bad)
test
jp
loopne
jb
jl
lods
es
sub
push
mov
cmps
jle
(bad)
push
stos
movs
cli
lods
cmp
ins
gs
dec
repnz
inc
sar
in
fsub
scas
cld
fdivr
pop
aaa
dec
popf
push
loopne
les
lea
int
les
ja
adc
lahf
shl
adc
inc
or
in
sbb
cmps
mov
jmp
jmp
cmp
cli
cmp
rcl
push
sbb
cs
es
xchg
jbe
pop
neg
push
push
push
retf
test
inc
test
leave
jecxz
cmp
aaa
dec
ins
dec
sub
dec
jmp
dec
int
fist
mov
pop
into
mov
das
loopne
and
xchg
cmps
xchg
xor
int
mov
test
adc
iret
leave
jmp
mov
pop
adc
dec
cmp
out
aam
pop
sub
or
mov
push
adc
fwait
or
(bad)
add
pop
mov
je
sbb
push
xchg
and
stc
xchg
sub
sub
sub
push
jecxz
fidiv
sub
dec
sbb
std
sub
xchg
push
xchg
repnz
mov
pop
cmp
iret
xchg
out
call
sub
test
dec
ins
cmp
scas
retf
scas
gs
ret
ror
push
cmp
cmp
push
sahf
push
xlat
hlt
popa
inc
std
and
pop
xor
pushf
jp
lahf
push
aam
mov
or
mov
cmp
push
fiadd
aam
sub
jb
dec
sbb
addr16
hlt
sbb
sar
cmps
mov
stos
leave
sub
cmp
rcr
test
mov
mov
out
add
jae
sub
cld
or
push
pop
mov
cli
or
xor
js
cmp
shl
add
movs
or
and
movs
adc
ret
cmp
inc
shr
loopne
iret
or
out
add
mov
dec
push
in
add
addr16
lds
dec
add
sbb
add
mov
push
push
out
outs
pushf
push
inc
cmp
sar
test
dec
push
mov
mov
outs
and
or
mov
ror
push
ins
cmp
inc
pop
daa
add
sub
mov
lahf
push
call
push
out
mov
imul
cmps
scas
cmp
sub
aad
out
add
in
rcr
and
mov
or
rcl
arpl
inc
xor
cmp
adc
push
test
xchg
mov
jne
call
sbb
loopne
icebp
adc
arpl
cdq
or
pushf
sub
dec
loopne
or
mov
mov
jns
sub
adc
fs
jge
dec
add
jge
cmps
mov
cmp
push
adc
(bad)
test
test
pushf
retf
pop
stos
in
and
push
add
data16
nop
das
enter
mov
retf
xor
mov
pop
loopne
push
movs
inc
mov
sbb
add
add
in
push
lods
push
fstp
cmc
sbb
dec
hlt
ret
aas
inc
cmc
pushf
das
fisubr
repnz
or
push
add
aad
add
inc
dec
aad
cdq
or
dec
jne
pop
or
lock
dec
mov
pop
into
add
pop
jl
enter
mov
sub
aam
xchg
push
inc
adc
xchg
out
inc
push
pop
and
dec
cmp
sub
add
fwait
ds
mov
xchg
bound
(bad)
mov
inc
jmp
pop
test
mov
jne
inc
add
sub
xchg
scas
pop
std
mov
test
sbb
mov
inc
jmp
adc
stos
mov
cmp
or
test
scas
xor
in
adc
mov
adc
and
mov
pushf
jmp
sub
arpl
repnz
sbb
mov
jns
test
dec
bound
aam
repz
fistp
jo
test
bound
es
and
or
push
mov
cmp
mov
dec
pop
cmp
and
ja
push
out
pop
or
pushf
push
aam
mov
stc
repz
aas
adc
xchg
sahf
adc
daa
cmp
add
stos
mov
lds
test
pushf
pop
retfw
cmc
jl
sub
xchg
inc
ins
jl
pushf
in
add
retf
mov
push
jnp
jae
xchg
imul
bound
rcl
pop
jnp
aad
pop
dec
lds
dec
jo
or
loopne
inc
inc
(bad)
loope
aas
jae
test
pop
mov
ja
lods
inc
(bad)
(bad)
push
mov
dec
pop
inc
jmp
in
addr16
call
xor
and
xchg
xchg
cld
adc
xchg
or
jg
shr
aaa
push
test
repnz
mov
jae
sar
push
cmp
sbb
pop
add
jmp
aam
movs
dec
mov
cmp
xor
sub
es
xor
dec
mov
retf
aam
out
cmp
iret
loop
les
fucomp
jns
es
not
pop
sbb
(bad)
stc
retf
add
pop
jecxz
inc
int
push
inc
fsub
push
int
leave
movs
and
mov
shl
mov
daa
or
in
mov
sub
fimul
inc
fsubr
lds
push
and
aam
xor
jge
cmp
xchg
sub
out
mov
jge
clc
mov
pop
sbb
(bad)
clc
add
cmp
jnp
scas
and
les
mov
pop
jne
xchg
or
test
push
addr16
aam
test
dec
outs
(bad)
test
out
jge
sar
xor
and
ds
xor
dec
xchg
and
ins
shl
xlat
ret
in
gs
ret
pop
pop
cs
mov
and
inc
mov
loope
ror
jb
jle
sub
mov
cmp
fcomp
fstp
into
mov
outs
add
cdq
mov
and
and
pop
add
mul
lea
lods
sar
call
lock
inc
lods
add
in
add
js
mov
push
es
or
pop
dec
rcr
add
xchg
mov
push
stos
xor
dec
test
xchg
das
clc
adc
sub
xlat
lods
mov
movs
sub
ret
and
cmp
call
mov
xchg
mov
jae
js
sub
jnp
mov
mov
mov
mov
cmps
js
dec
js
fnsave
dec
adc
das
enter
ins
or
adc
push
push
test
xchg
sbb
xchg
in
popa
jp
xor
jle
ins
pop
dec
mov
sbb
and
pop
loope
jno
mov
rcl
push
gs
sub
test
aaa
les
es
mov
out
mov
das
sahf
push
pop
test
pextrw
aaa
(bad)
or
ror
xor
icebp
inc
xor
das
push
addr16
mov
aaa
mov
aam
shl
dec
aas
sti
and
hlt
daa
push
iret
adc
mov
push
push
jb
mov
xadd
mov
pop
mov
push
xchg
sahf
xchg
pop
iret
sub
jmp
push
shr
push
pop
into
in
aam
imul
jp
jge
cmp
leave
in
movs
and
or
mov
mov
push
outs
cdq
popf
xor
adc
dec
clc
(bad)
fild
xchg
and
sbb
sbb
pop
add
ins
nop
arpl
xchg
jmp
addr16
js
cmp
ja
pop
push
xor
icebp
mov
mov
push
popf
push
dec
push
xchg
push
popf
push
xor
jo
sbb
fnsave
push
mov
mov
in
into
or
(bad)
inc
(bad)
and
popa
cmp
icebp
test
mov
pusha
mov
inc
jae
jno
cld
(bad)
es
mov
inc
repz
sbb
mov
or
pop
cmp
push
push
fdivr
dec
jle
dec
stos
xor
mov
push
push
pop
mov
imul
adc
mov
out
lods
popf
cmps
jmp
mov
cmp
push
mov
xchg
mov
xchg
fsubr
retf
ins
sti
mov
push
fisubr
aaa
cdq
(bad)
mov
(bad)
mov
push
mov
mov
scas
or
scas
dec
xlat
jl
stos
call
mov
jmp
ja
iret
sar
pop
jmp
leave
cli
and
and
(bad)
xchg
ss
pop
stos
aaa
jmp
xchg
sti
cmc
movs
je
movs
arpl
push
mov
scas
outs
lahf
and
sbb
pop
pusha
fwait
mov
xchg
rcl
lock
loope
int3
pop
(bad)
push
xchg
pop
mov
or
imul
enter
mov
stos
adc
inc
mov
and
xchg
mov
xchg
push
hlt
gs
mov
mov
jge
xlat
xchg
cli
xor
inc
repz
pop
mov
add
inc
sbb
movs
jo
xchg
adc
ror
rcr
inc
call
fwait
inc
fisubr
enter
daa
sbb
add
les
ret
(bad)
ins
xchg
xchg
mov
imul
pop
jp
cld
in
pop
(bad)
(bad)
cld
outs
mov
ret
pop
ja
ja
xchg
jo
jle
jae
adc
pushf
call
jne
in
dec
or
dec
test
or
add
pop
cmps
and
mov
inc
arpl
adc
lods
jno
ret
jbe
push
jns
jle
test
and
cmc
je
stos
fmul
lods
push
dec
jno
imul
jge
xchg
mov
shl
repz
lea
inc
addr16
out
leave
jmp
jnp
cmp
jo
es
pop
cmp
lea
test
mov
jo
lahf
repz
fmul
lods
dec
pop
out
int3
stc
adc
fnstcw
dec
(bad)
jle
lods
fsubr
cld
retf
mov
loop
repz
addr16
repnz
leave
and
inc
cmps
push
fdiv
out
mov
pop
cdq
or
inc
out
pop
xchg
in
jmp
sub
gs
xchg
push
cs
movs
push
adc
dec
clc
inc
push
adc
pop
push
mov
jl
cmp
sbb
jb
in
bound
sub
in
ins
icebp
fisubr
ror
xchg
je
adc
shl
cld
push
dec
ds
xor
int3
push
cmc
xchg
out
mov
jcxz
iret
pop
push
cwde
cmps
dec
pop
pop
push
fwait
ret
or
cwde
es
xlat
lea
xor
stos
cwde
xchg
mov
ins
push
rcl
mov
test
pop
icebp
scas
sub
sub
inc
jnp
in
push
cs
in
iret
push
lods
xor
mov
sbb
pop
xlat
inc
rcr
cmps
sub
mov
sbb
xchg
xor
sti
retf
pop
call
arpl
cmps
dec
cmp
sub
ds
cmp
stos
cmp
fld
mov
ins
sti
push
mov
and
adc
xchg
jle
(bad)
sbb
fild
ja
mov
fwait
in
dec
sar
outs
jmp
call
cmp
xchg
xchg
jnp
jo
inc
mov
push
fsub
fisttp
loope
frstor
adc
fst
bound
fistp
test
xor
ret
cmc
sub
push
push
pop
jne
imul
lods
xchg
es
mov
cmps
xchg
sub
or
rol
mov
dec
jne
mov
push
call
dec
mov
leave
rcl
movs
ins
jo
xor
sub
sub
push
stc
xchg
cld
dec
jbe
ss
mov
push
push
ds
jle
cmp
loop
fist
stos
sub
jmp
and
xor
pop
mov
jae
repz
mov
ror
imul
mov
pop
pop
mov
mov
fs
or
pop
xor
adc
ffreep
mov
cmp
in
push
sar
into
scas
pushf
xor
dec
lods
dec
or
dec
dec
dec
aas
dec
inc
xlat
cld
scas
mov
pop
mov
mov
pop
push
fldcw
jge
push
outs
stos
fnstsw
ja
pop
jae
loop
iret
jecxz
(bad)
(bad)
bsr
iret
pusha
iret
push
sahf
popf
cmp
jp
hlt
jl
sbb
push
les
and
out
mov
lds
jae
(bad)
jp
icebp
(bad)
in
jmp
fisub
push
ds
jge
sti
clc
stc
(bad)
hlt
(bad)
lock
repnz
jmp
pop
push
mov
cli
stc
int
dec
lock
push
aam
stos
jg
imul
sub
adc
adc
adc
mov
lods
repnz
call
sub
dec
mov
test
xchg
adc
popa
(bad)
push
pop
loope
movs
retf
fwait
movs
fild
jns
jno
and
pop
push
ret
jge
sub
js
pushf
retf
and
out
add
sar
push
sar
pop
xchg
xchg
pop
jmp
add
sub
je
push
xchg
sbb
addr16
aam
cwde
fs
lods
pusha
rcl
sbb
scas
retf
mov
jecxz
mov
push
mov
add
jmp
jbe
aas
pop
out
and
movs
int
sti
loope
fsubr
fdivr
mov
call
in
inc
sar
in
(bad)
push
stc
xor
data16
fucomp
clc
cmp
ds
xor
add
push
mov
jp
rcl
mov
iret
or
dec
xor
addr16
pop
sar
in
xchg
sar
sahf
scas
(bad)
cmps
sti
lods
cmps
jecxz
imul
call
and
jle
test
pushf
mul
jae
mov
mov
call
push
call
out
push
stc
jnp
jg
sti
inc
mov
inc
xlat
cmp
jecxz
imul
inc
idiv
mov
out
xchg
lods
movs
cmc
add
jbe
lods
loopne
dec
sub
sbb
cmps
sbb
fistp
or
cs
ds
xchg
ins
adc
and
adc
mov
jne
cmp
mov
les
add
add
imul
pushf
cmp
out
scas
or
jg
repz
mov
into
cdq
cdq
xor
jnp
sub
inc
mov
das
or
(bad)
push
cmp
arpl
jecxz
sbb
cmp
fwait
rcr
out
aas
inc
(bad)
addr16
jg
mov
sahf
movs
aas
xor
popa
clc
mov
fdiv
push
fs
sbb
jae
shl
pop
add
jo
rol
push
cld
(bad)
adc
das
xchg
(bad)
stc
xor
shl
dec
(bad)
jnp
mov
retf
add
or
push
add
push
lock
aas
sub
or
push
outs
adc
lods
ror
outs
mov
repz
mov
pop
jbe
cmp
call
pop
addr16
hlt
or
ret
lods
sbb
pop
(bad)
daa
cmc
ret
or
stos
lahf
fs
call
adc
fild
pop
ja
lock
clc
fld
jp
test
jecxz
leave
clc
pop
ret
sar
pop
adc
inc
add
pop
lock
test
sar
jle
(bad)
jg
call
mov
mov
mov
inc
add
test
out
inc
mov
jge
cli
pop
xchg
(bad)
push
ficomp
cld
call
aas
sub
cmp
lock
(bad)
mov
jecxz
mov
jge
cli
ror
dec
or
mov
jg
cli
jge
hlt
xor
(bad)
inc
sub
bound
pop
inc
mov
js
cmps
inc
out
out
(bad)
jno
in
in
pop
bound
cmc
aaa
sbb
mov
imul
mov
retf
mov
(bad)
sahf
das
data16
mov
popa
out
outs
in
dec
jbe
mov
imul
fwait
mov
int3
adc
dec
(bad)
addr16
pushf
jecxz
loopne
xchg
cmc
jae
jg
mov
cmp
imul
addr16
mov
imul
jmp
(bad)
pop
xor
jp
fld
bound
cmp
aas
pop
(bad)
das
adc
gs
dec
fs
mov
hlt
pop
ficomp
push
retf
rcr
and
jae
add
xchg
imul
xlat
sbb
int
maxps
sbb
mov
cwde
adc
addr16
push
aaa
or
cmp
stos
and
pop
movs
pop
xor
dec
sbb
mov
jle
xchg
std
outs
push
fisubr
std
mov
jg
sar
sar
ficomp
std
jmp
or
lock
out
mov
xor
mov
sub
pop
adc
mul
xchg
test
scas
aaa
inc
aad
out
sbb
rsm
mov
cmp
cmc
pop
std
mov
call
call
push
std
cmp
mov
xor
xlat
in
and
mov
push
fiadd
stos
das
test
jmp
inc
fild
jp
jo
cmp
mov
xor
jmp
ins
scas
xlat
std
out
mov
ret
xor
mov
hlt
fwait
mov
dec
mov
scas
outs
xor
xor
add
ja
(bad)
out
cmps
adc
dec
call
mov
or
cmp
out
sar
gs
inc
mov
jg
jg
cdq
imul
cmp
pop
adc
aaa
out
mov
inc
mov
cmc
inc
mov
popa
(bad)
mov
or
fadd
xor
jle
fistp
cdq
push
(bad)
jmp
add
xchg
adc
xor
lds
test
pop
aas
scas
ss
in
mov
mov
fcomp
xchg
shl
(bad)
mov
push
dec
jg
mov
jg
test
(bad)
stos
jo
jnp
stc
xor
outs
push
fwait
aad
jno
in
jle
mov
sbb
(bad)
stc
scas
jp
cld
or
js
(bad)
push
in
xchg
jp
in
int
and
cli
jbe
aaa
jmp
cmp
das
aas
inc
es
cmp
(bad)
iret
test
jp
mov
sbb
outs
call
mov
mov
out
jg
dec
(bad)
jg
imul
addr16
dec
xor
test
sbb
test
int3
loope
div
xchg
icebp
pop
call
outs
(bad)
mov
call
fwait
lds
ror
sbb
daa
fisub
outs
ds
pop
or
and
push
out
jns
xchg
ret
lahf
add
popa
ins
and
jl
idiv
inc
(bad)
jge
xchg
out
mov
movs
fsub
jno
jb
dec
pushf
jns
jp
imul
(bad)
jge
cmp
call
in
ds
fbld
cld
cmp
push
mov
cli
mov
fcomp
jge
in
or
ss
pushf
or
or
cmp
stc
out
mov
jg
out
xchg
pop
(bad)
pop
mov
pop
mov
pushf
das
inc
(bad)
dec
mov
test
ja
idiv
mov
jecxz
cli
jo
dec
std
mov
sub
cli
(bad)
mov
push
addr16
test
pop
call
sbb
data16
sar
movs
out
push
jno
nop
push
sahf
sbb
push
xchg
adc
sub
dec
stos
and
shl
push
addr16
loopne
mov
sbb
mov
push
in
jno
fwait
or
jmp
pop
lahf
xchg
dec
mov
mov
stos
stc
fdivr
mov
mov
jo
sbb
and
mov
pusha
in
add
push
pop
mov
push
sbb
stos
rol
ja
ficom
in
jo
idiv
iret
pop
mov
pop
mov
test
ret
fadd
cs
fisttp
mov
in
mov
sti
jo
pop
or
neg
mov
ror
out
or
mov
fmul
pop
mov
adc
jmp
jg
ins
or
hlt
addr16
es
jo
mov
fcomp
sar
(bad)
pop
stos
sahf
push
outs
inc
adc
mov
xchg
jecxz
push
pop
xor
mov
lock
fisubr
ficomp
pop
push
sbb
dec
lahf
pop
jecxz
or
jb
arpl
iret
add
pop
ror
push
pushf
sbb
stc
jp
loopne
in
aaa
mov
lds
fadd
aaa
add
ss
add
mov
mov
int3
mov
loope
(bad)
arpl
and
jnp
ficomp
mov
(bad)
inc
inc
aas
lock
inc
sti
and
xchg
out
inc
add
adc
or
in
xchg
mov
aas
(bad)
fdivr
jmp
call
sar
jg
in
(bad)
lock
lock
and
cmps
lock
imul
or
daa
push
cmp
push
arpl
iret
ror
(bad)
loop
mov
(bad)
arpl
sbb
jg
pushf
push
(bad)
ins
jmp
mov
mul
loopne
sar
out
add
ret
or
jg
jbe
xor
cmp
and
mov
or
sub
inc
sti
jg
jg
mov
xor
iret
jg
ds
fnstsw
cld
jl
jb
ds
std
sbb
jns
in
imul
sbb
cli
jnp
in
clc
pop
fstp
aam
sbb
inc
pushf
in
mov
cli
lahf
add
xor
div
cli
stc
xchg
jle
sbb
xchg
lock
sub
outs
sar
dec
call
jns
iret
mov
out
mov
jne
mul
and
jne
mov
or
jne
dec
jo
hlt
mov
jle
and
or
sub
cmps
out
xlat
mov
adc
add
sbb
test
jns
jo
add
into
ret
pushf
dec
sbb
aad
cli
push
pop
out
push
cmc
pop
mov
jmp
jne
sahf
scas
into
xchg
pop
(bad)
mov
(bad)
test
mov
out
(bad)
shl
add
jns
out
jg
outs
ror
adc
imul
jbe
add
retf
or
ins
mov
enter
movs
ret
scas
lea
out
xchg
xor
push
mov
push
jb
fwait
xor
xchg
ret
xlat
retf
push
adc
pop
hlt
mov
repnz
test
lahf
shl
and
cs
dec
xchg
and
stc
jecxz
xchg
das
adc
mov
ss
pop
push
inc
mov
sub
push
or
jmp
inc
outs
cmp
or
cmp
xchg
xor
jae
rcl
cli
xchg
retf
hlt
xchg
cdq
and
mov
iret
(bad)
fs
xor
fidiv
aad
mov
jle
xchg
mov
sub
cmp
jge
xchg
inc
push
in
add
sti
aad
inc
cmp
adc
xor
or
adc
sub
arpl
push
or
pop
jo
cmp
pop
cmp
mov
cmovne
mov
and
scas
adc
mov
xor
pop
(bad)
cmps
cmp
not
loop
sub
loope
lsl
int
adc
in
int
mov
sbb
pop
dec
test
jecxz
(bad)
push
js
inc
ss
retf
loope
xor
xor
cs
dec
inc
pop
sbb
out
inc
mov
mov
outs
mov
mov
retf
sti
aad
xor
je
(bad)
into
das
addr16
nop
aaa
mov
add
pop
push
in
or
cmp
jmp
pop
enter
sbb
cmp
mov
les
push
in
xchg
add
fcomi
(bad)
aam
add
retf
jmp
cmc
fcom
inc
jle
cmp
mov
and
cmc
shr
cs
adc
leave
push
push
(bad)
shl
hlt
sub
(bad)
fdiv
xchg
mov
or
mov
sub
mov
adc
mov
std
inc
aad
push
std
mov
jg
int
in
push
retf
or
in
mov
adc
mov
mov
mov
mov
sets
add
enter
shl
aas
in
ret
xor
cmp
add
mov
int3
push
jns
jg
push
push
es
std
or
and
adc
lahf
jmp
test
or
jl
add
sbb
jmp
cli
test
in
scas
mov
pop
pop
push
out
sbb
push
mov
adc
mov
cmps
std
stos
(bad)
jns
xlat
fs
gs
in
lods
call
mov
push
pop
sbb
pop
aad
inc
mov
pop
out
push
in
adc
jecxz
pop
arpl
mov
mov
aas
sbb
hlt
leave
movs
es
lods
push
and
bound
add
pusha
jge
pop
test
sbb
shl
mov
mov
cmp
pusha
jb
jg
cmp
pop
add
jecxz
adc
mov
mov
iret
xchg
fbstp
loop
mov
and
mov
adc
push
sbb
jbe
mov
loopne
dec
arpl
fmul
es
push
add
or
mov
xchg
loope
lahf
pop
and
aad
loop
jb
fidivr
xchg
add
retf
pop
cmc
out
sbb
push
retf
jle
lods
push
inc
push
enter
cdq
cmp
mov
leave
ret
cmp
dec
ds
fild
stc
mov
sti
loope
pushf
pop
lods
pmullw
and
mov
or
ret
mov
add
pop
adc
ja
cmp
jecxz
pusha
retf
dec
loope
or
scas
xchg
addr16
pop
cmc
out
push
fcomp
pop
pop
mov
shr
adc
adc
mov
ins
leave
sti
cdq
sub
jmp
push
shl
jno
(bad)
enter
pop
or
imul
sbb
pop
jmp
add
push
or
xor
out
loope
mov
test
ds
sbb
shl
push
or
shl
sub
adc
mov
aaa
cmovo
jecxz
mov
in
mov
jb
loop
shl
lea
mov
sub
repz
cmps
push
retf
sbb
jne
rcr
fcom
or
cmc
xchg
xchg
dec
pop
mov
inc
push
sub
inc
mov
mov
fisub
add
sbb
test
cwde
cli
retf
xchg
ja
repz
adc
cmp
and
fcomp
jle
pop
mov
fcmove
ins
sbb
iret
fdivr
imul
rcl
jbe
icebp
sahf
pop
icebp
mov
(bad)
imul
loope
test
inc
push
jns
sub
aad
push
scas
adc
mov
sbb
shl
sub
pop
ds
popa
out
sub
adc
js
pop
in
push
fiadd
(bad)
clc
(bad)
dec
mov
mov
jae
jbe
push
mov
rcl
push
fisubr
loop
ja
xchg
pop
xchg
mov
mov
mov
nop
cmp
sbb
dec
test
movs
cmp
aaa
mov
jp
pop
dec
or
les
sti
lods
mov
clc
out
push
xchg
in
dec
mov
test
shl
pusha
ins
cmp
sbb
push
enter
leave
out
and
cmp
push
mov
mov
jg
jae
sub
adc
shr
jb
sub
enter
add
mov
mov
fisttp
pop
mov
adc
fldenv
leave
and
xor
data16
movs
cmps
push
inc
data16
lods
dec
fs
call
(bad)
leave
call
(bad)
push
sub
push
push
or
mov
xchg
fst
fs
add
aaa
mov
aad
sbb
hlt
dec
mov
push
imul
test
and
and
call
mov
cmp
pop
pop
mov
mov
aad
pop
push
jno
xchg
or
out
and
cmps
push
cmps
in
call
clc
ret
arpl
inc
push
jno
or
push
das
test
mov
cmp
adc
inc
jp
inc
hlt
push
sbb
sbb
rol
retf
fild
mov
dec
enter
pop
adc
pop
mov
dec
push
aaa
xor
pop
imul
test
dec
int3
push
jbe
enter
in
pusha
adc
test
cmp
in
shr
(bad)
xchg
push
xchg
out
jae
sbb
sbb
fst
xchg
jns
xor
out
imul
mov
inc
inc
ss
fmul
push
or
push
fist
push
cmc
retf
cdq
nop
sbb
adc
xchg
pop
popa
xchg
fild
test
add
push
mov
xchg
int
mov
pop
jmp
addr16
add
cmp
out
jle
loope
dec
push
and
jmp
xchg
test
popa
les
adc
bound
inc
das
inc
imul
add
mov
mov
and
jbe
dec
pushf
mov
xchg
retf
push
mov
mov
pop
push
jae
bound
inc
into
pop
mov
inc
dec
fdiv
jne
pop
cmp
sti
add
lods
xor
outs
dec
mov
sub
mov
adc
mov
pop
or
(bad)
push
outs
cmp
(bad)
mov
cmp
xor
sub
scas
jno
mov
lock
pop
xchg
mov
sub
mov
adc
in
call
pushf
imul
adc
shl
mov
or
div
fisttp
out
push
sbb
out
mov
leave
dec
movs
pushf
gs
push
push
fsqrt
pusha
test
inc
scas
cmp
xchg
inc
in
movs
stos
mov
sub
xor
(bad)
imul
sbb
dec
and
mov
aas
dec
xchg
push
(bad)
sti
cdq
push
sbb
gs
dec
mov
mov
cdq
daa
sbb
pop
loop
(bad)
fidiv
je
cmp
loop
dec
adc
push
fsub
mov
xchg
retf
push
sbb
je
jge
inc
push
stc
push
push
mov
inc
sub
je
les
loope
jecxz
loope
jmp
cmp
push
(bad)
ss
mov
mov
mov
out
push
repz
inc
jmp
cmp
or
fbld
sti
mov
jle
push
dec
push
push
xor
pop
mov
stos
mov
dec
jmp
lods
mov
icebp
idiv
bnd
push
mov
stc
mov
jns
outs
jl
(bad)
cmp
(bad)
loopne
out
shl
inc
rol
movs
lods
lea
jecxz
out
xlat
add
inc
cmp
ins
add
xor
outs
mov
push
fwait
push
outs
repnz
shl
fidiv
imul
push
lods
adc
ror
in
mov
lods
sahf
xlat
movs
(bad)
(bad)
ins
dec
js
stos
cmp
xchg
xchg
jmp
mov
jmp
fisubr
lds
xchg
retf
call
and
mov
xchg
in
mov
mov
cwde
stos
adc
dec
popa
scas
out
dec
push
xchg
test
cmp
pop
xchg
sub
mov
in
ficom
inc
ret
fimul
scas
adc
or
scas
pop
xchg
xchg
dec
and
stos
or
in
call
push
dec
xchg
std
fcom
sbb
movs
fidiv
adc
dec
mov
dec
xor
out
fldenv
inc
adc
mov
rol
fwait
les
je
cbw
dec
ins
push
jmp
adc
mov
mov
daa
pop
movs
shl
test
mov
add
cmps
call
xor
scas
movs
xor
test
or
xor
movs
arpl
outs
inc
cmp
jle
lea
(bad)
aam
or
repz
mov
pop
arpl
call
and
push
mov
jno
xchg
cmp
pop
stos
mov
adc
cmps
sub
test
xchg
sti
je
push
mov
xchg
adc
std
or
jle
inc
pop
clc
icebp
cwde
dec
jp
mov
jns
loop
repz
int
call
iret
jg
xchg
xor
stc
leave
stc
dec
jecxz
(bad)
enter
jg
cmps
pusha
stos
mov
scas
sbb
test
dec
dec
ins
push
pop
mov
or
or
arpl
popf
xor
pop
rcr
cmc
push
test
leave
test
adc
xchg
sti
aam
inc
mov
xchg
push
cli
fisubr
mov
outs
stos
sub
mov
sti
iret
mov
xor
loopne
mov
arpl
push
sti
jae
(bad)
and
push
dec
icebp
mov
pop
scas
cmp
add
mov
aaa
mov
inc
xor
dec
or
es
jmp
ins
inc
xchg
and
sahf
out
jnp
cld
mov
xrelease
pop
cdq
iret
(bad)
xchg
xchg
mov
mov
scas
fs
pop
mov
jbe
shr
outs
es
pop
and
push
jmp
das
inc
dec
inc
push
out
xchg
out
xchg
mov
pop
adc
xchg
inc
mov
push
add
(bad)
shl
xchg
outs
dec
adc
adc
or
lahf
outs
ret
(bad)
cmp
or
ss
cmps
or
aad
jl
and
bound
pusha
adc
mov
(bad)
daa
add
adc
xchg
and
(bad)
mov
fchs
stos
xor
arpl
inc
lods
rol
daa
push
push
and
dec
mov
outs
inc
cs
mov
scas
ss
in
push
mov
sub
jp
outs
mov
rcr
jno
push
enter
mov
loop
arpl
inc
mov
fldl2e
xor
leave
mov
push
adc
cmp
cmp
pop
outs
repz
xchg
mov
ret
jnp
daa
out
sahf
mov
loop
arpl
repz
xchg
pushf
ret
adc
mov
sbb
xlat
mov
mov
push
leave
movs
lods
and
mov
cmp
stc
(bad)
mov
mov
leave
sahf
mov
jno
mov
jp
stos
mov
sbb
call
xor
push
xchg
inc
dec
sbb
pop
lea
(bad)
stc
sahf
xlat
inc
clc
loopne
mov
dec
pop
cmp
pop
stos
adc
aad
or
adc
xor
add
xor
ins
mov
(bad)
xor
cdq
dec
cmps
ror
mov
(bad)
int3
outs
inc
std
inc
in
jmp
retf
movs
call
mov
jnp
lock
pop
rcl
cmp
or
sbb
inc
mov
push
jns
pop
and
inc
jno
scas
xor
xchg
add
pop
xor
ss
or
cmc
push
jb
fs
or
out
and
jno
pop
jne
and
cmp
mov
push
jb
fnsave
and
lock
jbe
pop
ins
shl
popa
mov
fcmovnbe
jo
push
sbb
loopne
bound
xor
jmp
lock
jp
ds
jmp
test
jmp
sub
sub
repz
xor
imul
inc
scas
adc
sub
or
(bad)
bound
push
xor
dec
pop
adc
fst
sbb
xchg
icebp
sbb
ds
dec
push
dec
cmps
xor
ds
cmc
dec
sbb
faddp
enter
jbe
pop
call
les
xchg
inc
stos
sti
lods
cmp
mov
movs
fld
sbb
xchg
mov
jb
fld
ret
push
inc
rcl
fs
and
mov
jne
scas
scas
lods
adc
dec
scas
or
jp
inc
js
xchg
lock
push
popa
inc
xchg
sbb
add
push
movs
jp
jne
sbb
cmps
popf
je
ja
push
xor
adc
pusha
xchg
dec
xor
sub
rcl
(bad)
sbb
adc
shl
imul
leave
push
ret
rcl
outs
xchg
sbb
and
sub
push
outs
jge
cwde
fldl2e
js
mov
mov
and
dec
aam
cmps
mov
cmp
push
xchg
and
inc
test
das
pusha
retf
leave
or
ret
mov
jp
movs
into
stc
test
stos
call
daa
lods
cmps
lods
xor
aad
(bad)
jbe
pop
test
and
(bad)
icebp
mov
aad
retf
mov
dec
adc
popa
outs
pop
mov
mov
sub
pop
inc
dec
sub
lods
rcr
xor
inc
mov
shl
dec
xchg
ficom
or
aad
mov
cmps
adc
(bad)
icebp
mov
in
push
cmp
push
into
sbb
push
popa
xor
xor
jl
icebp
adc
inc
ror
imul
cmps
repnz
lods
cmovg
outs
(bad)
jnp
fwait
dec
test
xor
pop
dec
push
jecxz
cdq
pusha
jae
mov
push
scas
cmp
into
stos
xor
push
popa
adc
and
nop
outs
push
and
xlat
mov
je
xchg
(bad)
pushf
inc
imul
scas
jno
imul
dec
push
sub
adc
xchg
shl
adc
jnp
or
fsubr
test
mov
xor
rcl
push
mov
add
inc
add
call
sahf
fdiv
xchg
fadd
jecxz
add
pop
xor
fidivr
imul
push
inc
pop
cwde
sbb
lods
mov
xchg
int3
xor
pop
mov
sub
ss
jmp
push
fadd
sbb
les
pop
push
mov
push
pop
in
nop
jb
pop
xchg
ins
xchg
cmps
adc
test
fs
addr16
push
jno
dec
ds
mov
inc
or
pushf
push
ror
sbb
popa
ds
and
and
push
gs
(bad)
test
test
push
ret
out
sub
xor
sub
stos
add
push
sbb
in
int
sbb
mov
mov
out
test
jecxz
cmp
stos
stos
dec
jbe
sub
cmps
jns
pop
and
jno
jno
stos
retf
ins
cmp
daa
ins
xlat
dec
xchg
dec
cmp
inc
push
cmp
ds
dec
fs
sub
pop
imul
and
stos
sub
mov
test
imul
jmp
movs
and
shl
xor
daa
jne
push
mov
pop
inc
adc
scas
mov
mov
out
ret
sub
adc
stc
pop
dec
mov
(bad)
push
repnz
ficom
leave
inc
fld
xor
ficom
data16
add
mov
inc
dec
fistp
xor
test
pop
mov
dec
pushf
inc
jns
(bad)
dec
rol
inc
and
daa
call
mov
ins
push
or
je
lods
pop
dec
std
(bad)
jnp
arpl
xor
or
mov
gs
out
or
(bad)
mov
jbe
int
test
lock
imul
xchg
call
sbb
cmps
adc
loope
pusha
cwde
dec
sub
sahf
lods
xchg
mov
cwde
xor
clc
mov
mov
(bad)
xor
and
lds
fld
clc
sub
jecxz
mov
mov
mov
frstor
or
popa
pop
xor
push
cli
or
out
cmp
push
or
push
imul
imul
test
dec
fisttp
push
enter
and
pop
inc
mov
jo
out
in
jns
pop
cmp
sub
push
ficomp
cmp
adc
stc
ins
es
lods
test
ss
mov
sahf
retf
rep
icebp
adc
pop
sbb
nop
and
xchg
stos
lea
adc
outs
adc
inc
mov
pop
not
pop
jmp
ins
and
dec
jno
jno
mov
shrd
in
pop
sbb
movs
out
dec
dec
stos
adc
scas
call
push
test
loope
popa
retf
js
mov
in
ss
(bad)
retf
out
in
mov
cli
mov
pushf
push
xor
loope
ret
xrelease
sub
mov
cdq
sub
dec
cdq
inc
jp
aam
add
scas
push
pop
mov
int3
pushf
jmp
adc
pop
jge
inc
into
shr
jecxz
dec
push
mov
adc
psubusw
stos
sub
popf
inc
push
stos
sbb
test
mov
push
outs
and
in
fbld
sbb
cdq
ds
and
xchg
sbb
sub
push
inc
push
outs
or
sbb
push
test
sub
in
xchg
add
adc
test
mov
cmp
ficomp
xchg
push
sbb
aas
scas
cmp
fimul
mov
dec
stos
ss
fisttp
sbb
movq
pop
mov
and
stos
dec
cmp
xchg
stos
xor
push
stos
scas
data16
push
les
mov
test
stos
stos
stos
in
pop
pop
jne
lds
cli
ins
ficom
mov
je
fsub
pop
hlt
iret
or
jmp
into
call
mov
add
mov
aas
outs
sub
jecxz
or
call
(bad)
xchg
cmps
ins
in
jns
cli
dec
cmp
test
push
jp
push
scas
clc
mov
ins
pop
inc
push
pop
sar
rcr
jl
add
leave
add
jns
stc
stos
jecxz
cmc
fcomip
push
fild
shr
jecxz
test
icebp
mov
adc
(bad)
cmc
mov
mov
sbb
popf
fstp
cmp
add
jle
mov
or
rcr
push
loop
add
ja
xchg
jne
push
movs
into
dec
outs
imul
mov
jae
cwde
mov
in
rol
add
jle
xlat
mov
mov
xor
add
jbe
nop
jmp
stc
jb
cmp
(bad)
adc
jmp
ins
aas
xor
ins
test
jae
movs
push
cs
xchg
clc
sub
inc
into
mov
arpl
mov
mov
(bad)
or
sbb
mov
push
pop
fcomp
push
test
js
mov
enter
jge
cmps
pop
jmp
cmp
xor
gs
xlat
stc
fst
xchg
or
fwait
nop
cmc
test
pop
mov
adc
sub
sub
lods
jmp
in
in
pop
jae
push
push
leave
ret
push
jmp
aad
ret
dec
shl
call
mov
add
add
add
add
or
shl
xchg
add
add
add
pop
inc
outs
outs
je
outs
je
push
jns
gs
cs
ins
or
and
add
add
add
sbb
push
fnstenv
add
fnstenv
add
fnstenv
add
xor
inc
pop
mov
sahf
ins
loopne
adc
or
mov
sbb
inc
dec
mov
inc
mov
repz
sti
dec
ss
xchg
js
dec
mov
add
cmc
or
out
stos
and
sub
jo
dec
jbe
fldenv
jl
or
(bad)
ds
dec
mov
out
cwde
sbb
mov
jmp
outs
pop
retf
mov
push
data16
and
cld
jmp
(bad)
dec
add
sub
add
add
or
jg
popa
enter
add
add
add
add
push
gs
gs
gs
or
and
add
add
add
sbb
bound
das
mov
adc
das
mov
adc
das
mov
dec
add
sub
add
add
or
shl
xchg
add
add
add
add
adc
add
pop
inc
outs
outs
je
outs
je
push
jns
gs
cs
ins
or
and
add
add
add
sbb
push
fnstenv
add
fnstenv
add
fnstenv
add
add
add
add
add
add
add
scas
add
add
add
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
xor
cmp
add
add
add
add
add
jle
add
add
enter
and
jb
outs
addr16
add
add
pop
add
pop
add
add
push
push
add
add
and
dec
inc
add
add
add
and
outs
bound
add
add
add
add
add
inc
adc
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
or
add
add
add
push
add
add
add
add
xor
or
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
push
add
xor
push
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
and
push
add
and
push
add
and
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
push
add
and
adc
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
adc
add
int3
and
add
add
add
add
add
add
add
add
jl
add
add
jle
and
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
adc
(bad)
add
sbb
add
test
adc
adc
nop
add
add
add
add
mov
add
add
add
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
add
add
fiadd
inc
add
add
add
add
add
add
add
add
sbb
add
add
add
add
or
dec
add
add
add
add
add
and
add
add
add
add
add
mov
add
add
rol
add
add
cmp
outs
fs
gs
jb
gs
gs
add
push
add
arpl
ins
imul
gs
add
push
arpl
jns
je
ins
cs
gs
arpl
outs
add
jae
ins
bound
push
imul
popa
jae
add
jae
gs
cs
dec
cs
popa
arpl
imul
imul
add
popa
imul
popa
jb
jae
inc
jae
gs
bound
imul
imul
arpl
add
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
jne
je
jb
inc
je
jb
bound
add
jae
ins
bound
gs
imul
imul
jae
gs
bound
imul
outs
outs
inc
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jb
gs
push
jb
add
imul
popa
arpl
addr16
popa
jb
add
je
popa
jb
add
jae
gs
cs
dec
add
jb
popa
ins
add
je
je
gs
ins
add
je
dec
outs
addr16
add
je
add
popa
add
imul
ins
add
jo
jae
add
add
pop
inc
jno
popa
ins
imul
outs
add
outs
arpl
add
addr16
outs
je
js
gs
imul
push
push
inc
je
jb
bound
add
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
je
inc
jae
gs
bound
inc
gs
popa
outs
imul
jae
jne
arpl
je
gs
ins
add
ins
gs
outs
fs
ins
gs
arpl
jae
add
outs
add
je
outs
fs
outs
outs
add
je
inc
outs
je
jns
outs
imul
push
jae
add
jbe
imul
js
gs
imul
push
jns
add
ins
bound
dec
outs
outs
add
je
dec
popa
ins
add
jbe
jb
outs
ins
outs
je
addr16
dec
gs
imul
pop
dec
gs
popa
add
je
push
je
arpl
jb
arpl
push
jns
je
ins
cs
imul
inc
outs
jb
jae
dec
gs
popa
addr16
outs
js
inc
imul
jae
ins
je
push
push
cs
jo
add
add
push
add
popa
add
ins
add
and
je
outs
add
add
add
add
add
jae
jae
add
bound
ins
add
cmp
and
add
popa
add
add
imul
das
add
add
jbe
add
add
js
add
add
add
push
mov
adc
add
imul
mov
pop
push
sbb
mov
xor
dec
xor
or
or
add
add
add
add
or
and
add
and
add
adc
and
adc
inc
add
add
dec
add
add
pop
and
or
add
adc
sbb
add
or
or
push
or
add
add
adc
add
add
add
add
adc
imul
and
adc
or
add
or
adc
and
adc
and
sbb
sbb
adc
and
push
add
add
add
push
push
add
adc
add
adc
adc
push
add
add
add
push
push
pop
and
xor
xor
xor
cs
add
add
or
add
add
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
add
add
add
add
pusha
fiadd
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
