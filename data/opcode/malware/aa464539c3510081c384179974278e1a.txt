sar
or
add
add
dec
add
add
add
add
pop
add
or
add
add
add
fisubr
add
add
or
fdivrp
or
add
add
xor
add
add
add
add
rol
add
add
add
add
outs
add
add
jb
add
jo
add
add
or
outs
add
add
aam
add
add
or
pop
push
pop
mov
add
push
outs
push
add
or
sub
add
or
outs
or
add
or
adc
sub
or
or
outs
or
add
jb
add
jo
or
add
sub
or
add
or
or
adc
sub
or
or
outs
or
add
outs
or
xor
add
or
add
sub
adc
or
add
jo
push
add
or
adc
sldt
or
push
adc
pop
pop
adc
adc
adc
mov
mov
pop
pop
adc
adc
adc
mov
sbb
or
add
or
add
or
sub
add
or
push
adc
mov
xor
adc
mov
pop
lea
add
add
pop
adc
pop
adc
push
adc
mov
pop
sub
add
or
pop
adc
or
add
or
lea
add
add
or
or
adc
mov
add
or
sub
outs
adc
add
adc
lea
add
add
add
or
sub
add
add
add
add
inc
add
add
add
add
adc
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
pop
add
add
and
add
add
and
jb
outs
addr16
add
add
add
add
and
ins
inc
add
add
add
add
and
add
add
add
inc
ins
outs
jo
add
mov
add
and
dec
inc
add
add
add
add
inc
ins
outs
bound
add
add
add
add
add
inc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
sbb
push
add
push
add
add
push
add
add
sbb
push
add
sbb
push
add
add
add
fadd
sbb
push
add
add
add
add
push
add
add
push
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
xchg
fiadd
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sgdtd
add
add
add
add
add
or
add
add
add
adc
imul
sub
push
add
add
add
add
add
rol
cmp
or
fiadd
in
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
inc
add
add
add
add
add
add
pop
add
fs
ins
add
gs
push
arpl
jns
je
ins
add
arpl
ins
imul
push
outs
imul
ins
add
jae
gs
cs
dec
add
je
add
jae
ins
bound
push
jns
je
ins
cs
gs
arpl
outs
add
jae
ins
bound
popa
ins
add
add
jb
outs
add
je
xor
inc
gs
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
inc
jae
gs
bound
inc
gs
popa
outs
imul
jae
jne
arpl
je
gs
ins
add
je
dec
outs
addr16
add
je
xor
push
gs
add
outs
jae
add
add
je
gs
outs
arpl
inc
jae
gs
bound
jae
addr16
dec
popa
ins
add
pop
inc
jno
popa
ins
imul
gs
outs
add
je
jns
gs
addr16
inc
popa
jae
push
jns
add
je
inc
jne
ins
dec
popa
ins
add
je
jb
jo
jb
jns
push
jb
jo
jb
jns
outs
outs
add
je
popa
ins
jne
add
je
inc
outs
je
jns
outs
imul
push
outs
add
je
outs
fs
popa
jae
add
je
popa
jb
ins
gs
jb
add
jb
ins
gs
jb
outs
outs
add
jbe
jb
outs
ins
outs
je
inc
gs
outs
ins
ins
popa
outs
fs
imul
add
jb
jns
inc
outs
jo
add
jbe
imul
arpl
add
jne
addr16
bound
je
jb
bound
add
jae
gs
cs
imul
imul
jne
imul
jae
inc
outs
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
add
pop
add
sub
jb
add
add
je
popa
add
add
outs
add
jb
popa
add
add
outs
add
imul
xor
jae
je
add
add
imul
outs
add
jae
add
jo
jo
ins
add
arpl
popa
add
add
outs
add
and
add
outs
add
jb
arpl
add
jae
jae
add
bound
ins
add
add
add
add
dec
je
dec
adc
dec
sahf
mov
push
fstp
mov
and
add
xchg
add
add
add
add
and
add
inc
xor
add
add
add
add
jb
pop
adc
cmp
jecxz
in
inc
adc
stos
pusha
and
xchg
inc
xlat
mov
xor
jge
push
pop
push
pop
inc
in
sub
mov
xchg
aad
out
leave
mov
popf
push
pop
mov
push
push
push
push
inc
xchg
aam
mov
cs
js
pushf
das
or
cmps
cdq
xor
lock
retf
(bad)
inc
push
out
sub
mov
mov
xor
inc
pushf
js
xor
push
sub
and
into
or
xor
mov
add
add
sbb
adc
adc
adc
sbb
adc
add
adc
add
adc
or
or
and
or
and
add
add
adc
add
add
add
push
add
sbb
sbb
xor
add
sbb
adc
add
inc
add
add
add
dec
or
dec
or
push
and
sbb
sbb
add
add
add
add
push
or
add
add
add
add
add
or
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
(bad)
or
dec
pop
nop
add
add
add
add
(bad)
inc
add
add
add
add
add
add
pop
mov
int
mov
push
push
jb
addr16
ins
and
outs
outs
outs
je
bound
jb
outs
and
and
and
fs
add
add
add
push
inc
add
dec
add
aas
cmp
loopne
push
add
add
add
cmp
add
cwde
add
add
add
mov
add
and
add
pusha
or
add
inc
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
adc
add
add
add
add
sldt
add
or
dec
add
add
or
rcl
add
add
or
or
add
hlt
pop
or
sbb
add
add
add
or
add
or
add
dec
add
add
je
js
add
add
add
add
or
add
add
add
pusha
cs
popa
je
add
call
pusha
or
add
add
add
or
inc
add
shr
jae
arpl
add
rcl
or
add
add
add
jb
ins
outs
arpl
add
add
add
or
add
add
add
or
inc
add
inc
jo
or
add
add
dec
add
add
add
add
add
or
add
add
mov
add
pop
add
add
add
add
sub
add
sub
add
add
push
jae
add
or
add
add
add
or
add
add
inc
sbb
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
or
lock
pop
outs
adc
call
sub
add
or
sbb
add
sub
add
push
add
add
add
add
add
and
add
add
add
or
add
add
add
add
add
adc
adc
add
add
xor
add
add
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
sub
add
adc
add
sub
add
sbb
add
push
sub
adc
add
jecxz
add
add
add
sub
add
add
cmp
add
jae
add
or
cmp
add
add
dec
add
dec
add
add
add
add
add
add
add
cmp
add
jge
add
or
add
add
add
add
add
pop
cmp
(bad)
(bad)
jmp
jae
add
or
and
add
add
daa
add
push
cmp
jae
add
or
and
add
add
popf
(bad)
(bad)
push
add
or
and
add
add
daa
add
push
cmp
add
push
sub
add
push
sub
add
push
cmp
add
add
and
add
add
fs
(bad)
push
add
or
cmp
and
add
cmp
(bad)
inc
sub
adc
add
add
adc
adc
add
add
adc
adc
add
add
adc
adc
add
add
adc
adc
add
add
adc
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
add
adc
adc
add
add
add
add
or
add
adc
add
add
add
aas
rol
add
add
pop
add
add
adc
add
add
add
adc
add
sub
add
adc
add
add
pop
sub
xor
add
push
sub
xor
add
adc
adc
add
add
adc
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
add
add
add
pop
sub
add
adc
add
sub
add
and
adc
xor
add
sub
add
adc
add
add
add
add
adc
add
add
sub
add
xor
add
pop
sub
xor
add
push
sub
xor
add
adc
adc
add
add
adc
adc
add
add
adc
adc
add
add
add
adc
add
sub
add
adc
add
add
add
add
pop
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
and
adc
xor
add
sub
add
adc
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
sub
add
xor
add
adc
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
sbb
add
push
sub
adc
add
sub
add
add
or
add
adc
add
add
add
adc
xor
pop
add
add
add
or
add
add
add
add
add
adc
xor
add
add
xor
add
adc
add
add
add
adc
cmp
pop
add
add
add
or
add
add
add
add
add
adc
ss
add
add
add
adc
add
add
adc
adc
add
sub
add
adc
add
add
adc
adc
add
add
adc
adc
add
add
add
add
add
adc
add
add
add
add
add
adc
add
add
adc
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
add
add
add
adc
add
add
add
add
add
add
add
adc
add
add
add
adc
add
add
add
add
add
add
sub
add
add
add
add
add
xor
add
add
add
add
adc
add
add
add
add
add
adc
add
sub
add
adc
add
sub
add
sbb
add
push
sub
adc
add
add
adc
adc
add
add
adc
adc
add
sub
add
adc
add
add
adc
adc
add
add
adc
adc
add
sub
add
and
adc
xor
add
sub
add
adc
add
add
add
add
pop
sub
add
adc
add
sub
add
adc
add
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
sub
add
xor
add
add
adc
add
push
and
add
cmp
add
jae
add
or
xchg
add
adc
add
add
inc
add
add
test
add
push
sub
push
add
add
and
add
add
add
add
add
push
sub
or
add
or
add
sub
add
and
add
dec
add
dec
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
call
add
add
test
(bad)
jmp
and
add
add
cmp
(bad)
(bad)
jmp
add
add
adc
add
sub
add
adc
add
add
add
add
or
add
adc
add
add
add
sbb
mov
add
add
add
adc
add
sub
add
adc
add
add
add
add
adc
add
add
add
pop
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
add
add
add
pop
sub
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
adc
adc
add
add
add
add
pop
sub
add
adc
add
sub
add
sbb
add
push
sub
pop
sub
loopne
add
jae
add
or
add
add
xor
add
add
add
or
add
add
inc
sbb
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
adc
xchg
mov
add
adc
add
sub
xor
add
adc
adc
add
add
add
adc
add
add
adc
adc
add
sub
add
adc
add
add
adc
adc
add
add
add
adc
add
add
adc
adc
add
add
add
adc
add
add
adc
adc
add
add
add
adc
add
add
adc
adc
add
add
add
adc
add
add
adc
adc
add
add
add
adc
add
add
adc
adc
add
add
add
adc
add
add
adc
adc
add
add
add
adc
add
add
adc
adc
add
add
add
adc
add
add
adc
adc
add
add
add
adc
add
add
adc
adc
add
add
add
adc
add
add
adc
adc
add
add
add
adc
add
add
adc
adc
add
add
add
adc
add
add
adc
adc
add
add
add
adc
add
add
adc
adc
add
add
add
adc
add
add
adc
adc
add
add
add
adc
add
add
adc
adc
add
add
add
adc
add
add
adc
adc
add
add
add
adc
add
add
adc
adc
add
add
add
adc
add
add
adc
adc
add
add
add
adc
add
sub
xor
sub
xor
add
add
add
add
add
pop
add
add
add
or
data16
pop
add
add
adc
add
sub
xor
sub
xor
sub
xor
sub
xor
sub
xor
add
add
adc
add
add
pop
sub
xor
add
add
add
add
add
out
or
add
add
xor
sub
xor
sub
xor
sub
xor
sub
xor
sub
xor
add
add
add
add
add
pop
add
or
pop
add
add
adc
add
add
add
adc
add
add
adc
adc
add
sub
xor
sub
xor
sub
xor
sub
xor
sub
add
add
add
add
add
pop
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
add
add
add
adc
add
add
add
add
add
add
add
push
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
add
add
add
add
pop
sub
add
adc
add
add
add
add
adc
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
adc
add
add
add
pop
sub
add
adc
add
sub
add
adc
add
add
add
add
adc
add
add
add
push
sub
add
adc
add
sub
add
adc
add
add
add
add
adc
add
add
add
pop
sub
add
adc
add
sub
add
adc
add
add
add
add
push
sub
add
adc
add
sub
add
sbb
add
push
sub
adc
add
sub
add
add
add
add
push
sub
add
and
add
add
popa
add
push
sub
add
outs
add
or
arpl
add
sub
add
add
adc
add
add
add
add
push
sub
add
adc
add
add
add
add
adc
add
add
add
add
add
add
add
pop
sub
add
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
and
adc
xor
add
sub
add
adc
add
add
add
add
adc
add
add
sub
add
xor
add
add
add
add
push
add
add
adc
add
sub
add
push
sub
add
or
pop
inc
lea
add
and
add
mov
xor
xor
add
add
add
lea
add
xor
add
lea
add
add
add
lea
add
xor
add
lea
add
cmp
add
ja
add
cmp
add
ja
add
add
push
lea
add
add
push
lea
cmp
add
cmp
das
add
add
mov
sub
cmp
add
push
dec
add
add
add
add
xor
add
push
inc
add
add
add
add
cmp
add
xor
add
sub
add
ja
add
add
add
cmp
add
cmp
add
xor
add
add
add
sub
sub
push
call
xor
add
add
adc
or
rcr
call
lea
add
or
rol
add
mov
pop
and
add
add
adc
adc
and
add
add
add
add
pop
or
add
and
add
add
or
pop
outs
pop
push
push
ins
adc
push
push
adc
add
add
or
adc
cmp
add
add
adc
add
pop
xchg
pushf
adc
pop
pop
adc
adc
add
(bad)
inc
add
add
and
add
add
add
or
or
and
add
pop
adc
pop
aam
add
adc
pop
push
pop
pop
aas
pop
fs
add
add
rcr
or
or
cmp
pop
mov
pop
pop
and
add
inc
adc
and
or
(bad)
fdivr
jbe
xor
adc
adc
add
or
push
adc
cmp
add
add
adc
sbb
adc
adc
sbb
loopne
pop
sbb
adc
adc
sbb
loopne
pop
adc
pop
adc
adc
pop
pop
pop
loopne
push
bound
adc
adc
pop
loopne
pusha
sahf
adc
sbb
movups
pop
cmp
call
or
adc
or
adc
or
adc
or
adc
or
or
or
or
sbb
add
push
adc
or
or
or
pop
or
push
sub
push
adc
adc
or
or
pop
adc
push
sub
push
adc
adc
adc
or
pop
push
sbb
sub
push
adc
adc
adc
adc
sbb
add
push
adc
or
or
or
pop
or
push
sub
push
adc
adc
or
or
adc
add
adc
adc
adc
or
sub
push
adc
adc
adc
adc
sbb
ins
add
push
adc
or
or
or
or
or
or
sub
push
adc
adc
or
or
or
adc
or
sub
push
adc
adc
adc
or
or
push
pop
or
sub
push
adc
adc
adc
adc
or
pop
or
add
adc
or
or
or
or
push
sub
push
adc
adc
or
or
push
pop
adc
clts
sub
push
adc
adc
adc
or
nop
pop
adc
sub
push
adc
adc
adc
adc
sbb
adc
sub
add
adc
or
or
or
or
adc
sub
add
adc
adc
or
or
or
push
pop
adc
sub
add
adc
adc
adc
or
pop
adc
adc
sub
add
adc
adc
adc
adc
sbb
adc
add
adc
or
or
or
or
or
push
push
sub
add
adc
adc
or
or
nop
pop
pop
push
sub
add
adc
adc
adc
or
pop
adc
sbb
sub
add
adc
adc
adc
adc
or
pop
sbb
sub
add
adc
or
or
or
push
pop
or
sbb
sub
add
adc
adc
or
or
pop
push
pop
sbb
sub
add
adc
adc
adc
or
pop
adc
sbb
sub
add
adc
adc
adc
adc
or
sub
add
adc
or
or
or
pop
or
push
push
sub
add
adc
adc
or
or
push
sub
add
adc
adc
adc
or
or
adc
and
sub
add
adc
adc
adc
adc
sbb
and
sub
add
adc
or
or
or
pop
or
and
sub
add
adc
adc
or
or
or
adc
and
sub
add
adc
adc
adc
or
push
pop
pop
pop
and
sub
add
adc
adc
adc
adc
sbb
and
add
adc
or
or
or
pop
or
es
sub
add
adc
adc
or
or
push
sub
add
adc
adc
adc
or
or
pop
pop
sub
sub
add
adc
adc
adc
adc
or
sub
add
adc
or
or
or
pop
or
sub
sub
add
adc
adc
or
or
pop
adc
sub
sub
add
adc
adc
adc
or
pop
pop
sub
sub
add
adc
adc
adc
adc
or
pop
sub
add
adc
or
or
or
or
or
cs
sub
add
adc
adc
or
or
nop
pop
das
push
sub
add
adc
adc
adc
or
pop
pop
pop
xor
sub
add
adc
adc
adc
adc
sbb
xor
sub
add
adc
or
or
or
push
sub
add
adc
adc
or
or
push
pop
nop
push
sub
add
adc
adc
adc
or
pop
adc
outs
add
push
adc
adc
adc
adc
or
pop
xor
add
adc
or
or
or
pop
or
ss
sub
add
adc
adc
or
or
or
nop
push
sub
add
adc
adc
adc
or
pop
adc
outs
add
push
adc
adc
adc
adc
sbb
cmp
sub
add
adc
or
or
or
nop
pop
cmp
sub
add
adc
adc
or
or
nop
push
sub
add
adc
adc
adc
or
or
push
sub
add
adc
adc
adc
adc
sbb
cmp
add
adc
or
or
or
or
or
ds
sub
add
adc
adc
or
or
pop
nop
push
sub
add
adc
adc
adc
or
or
adc
outs
add
push
adc
adc
pop
adc
adc
adc
pop
adc
adc
adc
pop
adc
adc
adc
or
or
adc
inc
stos
cli
(bad)
call
adc
adc
or
mov
adc
sbb
mov
or
mov
adc
sbb
mov
or
mov
adc
sbb
mov
or
mov
adc
or
sub
adc
stos
add
add
add
add
pop
pusha
pop
push
pop
push
add
xchg
pop
jle
add
add
push
pop
pop
loopne
pop
push
add
push
pop
push
sub
stos
add
add
add
pop
pusha
pop
push
pop
push
add
xchg
pop
jle
add
add
push
pop
pop
loopne
pop
push
add
push
pop
push
sub
sahf
add
add
add
add
push
add
xchg
pop
jle
add
add
push
pop
pop
loopne
pop
push
add
push
pop
push
sub
add
add
push
pop
push
add
xchg
pop
jle
add
add
push
pop
pop
loopne
pop
push
add
push
pop
push
sub
add
jle
or
loope
cmp
push
call
and
pop
pop
pop
pop
add
pop
pop
pop
bound
cmps
sub
sub
mov
call
add
add
or
add
sub
add
pop
xor
add
inc
add
add
add
sbb
add
push
add
add
add
sub
sub
loope
dec
adc
call
sub
add
cmp
add
add
add
or
cmp
add
add
add
or
frstor
add
add
jb
add
jo
mov
rol
or
add
or
add
or
add
add
push
sub
add
adc
add
add
and
add
add
xor
add
add
add
add
sub
sub
cmp
push
call
add
or
fld
add
add
fld
add
add
add
add
add
push
add
sbb
add
scas
sub
sub
mov
call
add
push
cmp
add
jae
add
or
sub
add
or
add
imul
push
sub
xor
add
add
add
or
retf
bound
call
add
add
imul
jle
add
add
or
add
mov
or
add
or
push
outs
enter
push
push
leave
add
or
sub
add
or
push
outs
enter
outs
retf
add
or
int3
add
or
jae
add
push
sub
jae
add
push
sub
jle
add
add
int
add
outs
into
add
or
add
add
inc
add
add
add
imul
add
pop
adc
xchg
pushf
or
adc
xchg
pushf
or
adc
xchg
pushf
or
pushf
or
or
add
xchg
pushf
or
or
add
xchg
pushf
or
or
pushf
or
movups
add
push
adc
iret
add
or
add
add
or
push
jae
add
or
pop
adc
adc
pop
jae
add
or
or
or
push
pop
mov
rol
add
adc
outs
aam
add
adc
outs
aad
add
add
add
pop
outs
(bad)
add
or
or
add
or
outs
xlat
add
or
add
add
imul
jle
add
add
add
add
or
mov
add
xor
add
adc
sbb
adc
adc
push
jle
add
add
xchg
pushf
adc
pop
jle
add
add
pop
pop
xchg
pushf
adc
sbb
add
add
sbb
pushf
adc
sbb
add
add
sbb
pushf
adc
push
sub
add
or
or
push
add
add
fld
add
add
add
add
or
add
add
add
adc
fisttp
push
add
add
fld
add
add
sub
or
add
add
add
add
dec
call
add
mov
push
sbb
add
sbb
push
add
cmp
add
add
adc
or
or
call
add
add
test
add
and
add
add
inc
add
add
push
and
and
add
add
je
add
dec
add
adc
or
add
cmp
add
or
add
add
add
dec
add
dec
xor
cmp
aaa
sub
add
or
add
or
add
and
add
add
push
add
add
and
add
add
push
xor
cmp
movaps
add
adc
and
add
cmp
sub
add
sub
adc
lahf
pop
add
and
add
cmp
sub
add
sub
pushf
and
add
add
push
xor
cmp
add
cmp
sub
add
sub
add
and
add
pop
dec
daa
add
movs
add
add
mov
adc
add
push
xor
cmp
or
add
add
add
dec
add
cmp
sldt
add
jo
add
pop
dec
daa
add
int
add
dec
xor
cmp
add
cmp
pop
add
cmp
add
dec
add
sbb
add
dec
add
cmp
add
adc
adc
and
add
add
adc
and
add
cmp
or
add
or
add
dec
add
dec
xor
pop
cmp
add
dec
add
add
add
dec
add
cmp
sub
add
xor
add
and
add
pop
dec
daa
add
lahf
add
add
push
xor
push
cmp
daa
add
dec
add
push
add
add
or
add
cmp
daa
add
dec
add
or
add
dec
add
cmp
or
add
add
add
and
add
and
add
pop
pushf
and
add
add
mov
add
push
adc
and
add
dec
xor
cmp
add
cmp
add
cmp
and
add
sbb
and
inc
add
add
push
xor
cmp
add
dec
add
or
or
add
cmp
add
and
add
inc
add
add
push
daa
add
sub
add
dec
xor
pop
cmp
daa
add
dec
add
or
add
and
sldt
add
and
add
add
push
xor
push
cmp
mov
cmp
dec
daa
add
xchg
add
add
lock
adc
adc
mov
adc
pop
pop
xchg
pusha
adc
add
int
add
dec
add
add
add
dec
add
dec
xor
cmp
add
cmp
adc
add
stos
add
and
add
add
inc
add
add
push
and
and
push
xor
cmp
or
add
pop
add
add
or
add
cmp
add
and
add
add
push
add
add
push
daa
add
imul
add
push
xor
pop
cmp
add
jle
add
add
inc
add
jo
out
xor
add
hlt
xor
add
or
add
cmp
add
and
add
and
add
add
push
daa
add
imul
xor
cmp
add
dec
add
add
add
and
add
aaa
add
add
and
add
cmp
and
verr
add
add
dec
add
add
call
or
add
adc
add
dec
add
cmp
and
add
add
inc
add
add
push
daa
add
movs
add
add
push
xor
cmp
add
cmp
movs
and
verr
or
mov
xor
pushf
and
add
cmp
or
add
push
add
add
or
add
dec
xor
cmp
add
and
add
and
add
pop
dec
and
and
add
cmp
add
adc
mov
pop
xor
add
or
cmp
or
add
or
add
and
add
add
pop
pushf
and
add
dec
xor
cmp
and
sub
adc
adc
adc
xchg
adc
adc
xchg
popa
rcr
cmp
and
add
or
add
sbb
add
dec
add
cmp
and
add
or
add
add
add
and
cmp
pushf
and
add
cmp
and
add
mov
cmp
dec
adc
add
dec
xor
push
cmp
jns
add
and
add
pop
dec
daa
add
sub
add
dec
xor
cmp
add
cmp
add
dec
add
add
or
add
cmp
add
dec
add
sbb
add
dec
add
cmp
add
dec
add
or
add
dec
add
dec
xor
cmp
xor
add
cs
add
xchg
add
and
dec
adc
add
dec
xor
cmp
xor
add
pop
add
and
add
or
add
adc
add
dec
add
cmp
and
add
or
add
or
cmc
add
add
push
add
add
and
add
add
push
xor
cmp
(bad)
and
add
or
add
or
add
dec
add
add
push
xor
cmp
cmps
and
add
or
add
push
add
add
or
add
dec
xor
pop
cmp
or
add
push
add
add
or
add
cmp
add
dec
add
sbb
add
and
add
add
jo
add
pop
pushf
and
add
add
push
and
add
or
add
add
add
dec
add
add
and
add
or
add
sbb
add
and
add
and
add
pop
pushf
and
add
add
push
xor
cmp
and
add
or
add
or
or
add
cmp
and
add
dec
add
add
pop
add
add
push
daa
add
imul
add
push
xor
cmp
and
add
or
add
or
add
and
das
add
add
and
push
xor
push
cmp
mov
or
mov
add
dec
xor
cmp
dec
stc
(bad)
(bad)
cmp
or
add
add
add
and
and
add
pop
pushf
and
add
cmp
add
or
add
or
add
dec
add
cmp
add
or
add
adc
add
dec
add
dec
xor
pop
cmp
add
dec
add
or
add
and
add
add
and
add
pop
pushf
and
add
cmp
and
add
sbb
sbb
add
pop
and
add
or
add
or
add
and
add
add
jns
add
pop
pushf
and
push
xor
cmp
and
add
or
add
sbb
add
and
add
add
push
add
add
and
frstor
add
and
add
add
add
add
pop
dec
daa
add
lods
add
add
push
xor
cmp
verr
sldt
add
jge
add
and
add
add
and
add
cmp
or
add
or
add
and
add
and
add
pop
pushf
and
add
cmp
add
dec
add
or
add
and
cmp
add
pop
pushf
and
pop
and
add
pop
clc
(bad)
call
sub
ds
(bad)
jmp
sbb
add
cmp
add
or
add
push
add
add
push
add
add
xor
add
pop
pushf
and
add
cmp
or
add
or
add
dec
add
cmp
add
add
sub
add
pop
dec
and
and
add
dec
xor
pop
cmp
and
add
or
add
adc
add
dec
add
cmp
and
add
push
add
add
cmp
add
pop
dec
and
and
add
add
mov
or
add
or
add
and
add
add
pop
add
add
and
add
add
push
xor
cmp
dec
add
add
add
add
pop
dec
daa
add
test
add
dec
xor
cmp
jge
add
dec
add
add
add
dec
add
add
popa
and
add
or
add
add
add
and
add
add
ins
add
add
and
inc
and
add
or
add
sldt
add
or
add
cmp
and
add
sbb
bound
sbb
push
add
add
push
xor
pop
cmp
and
add
or
add
adc
add
and
add
and
add
add
and
(bad)
pop
add
dec
add
adc
add
dec
add
dec
xor
cmp
add
cmp
or
pop
add
and
add
add
and
add
pop
dec
daa
add
stc
add
add
push
xor
cmp
add
cmp
or
add
push
add
add
or
add
dec
xor
cmp
add
cmp
mov
add
and
dec
add
add
push
daa
add
sbb
ja
add
and
add
add
push
daa
add
lock
add
pop
pop
add
dec
add
sbb
add
dec
add
dec
xor
cmp
pop
add
dec
add
pop
add
add
or
add
dec
xor
cmp
pop
add
dec
add
or
add
dec
add
cmp
pop
add
and
add
add
push
daa
add
jmp
push
xor
pop
cmp
push
add
and
add
add
push
adc
add
cmp
push
add
and
add
add
sbb
xor
add
dec
xor
cmp
sub
adc
add
mov
add
dec
add
add
add
and
add
add
push
add
add
and
add
xchg
push
add
and
add
and
add
pop
dec
daa
add
ja
add
cmp
add
dec
add
adc
add
dec
add
cmp
add
adc
adc
sbb
xchg
pop
sbb
das
adc
sbb
xchg
pop
adc
adc
adc
pop
pop
loopne
push
bound
das
adc
loopne
pusha
adc
and
add
add
push
xor
pop
cmp
push
add
and
jno
add
pop
dec
adc
add
cmp
sub
adc
add
add
sti
sbb
verr
push
add
add
or
add
dec
xor
pop
cmp
sbb
verr
sldt
add
les
add
and
add
pop
pushf
and
add
add
mov
sbb
xor
dec
add
add
push
xor
cmp
adc
and
add
cmp
or
add
push
add
add
push
add
add
or
add
pop
pushf
and
add
cmp
add
adc
pop
pop
adc
and
add
cmp
add
dec
add
add
add
dec
add
dec
xor
push
cmp
add
dec
add
add
or
add
cmp
add
and
add
and
add
add
push
daa
add
js
add
dec
xor
pop
cmp
sbb
adc
pop
cmp
add
adc
add
push
xor
cmp
add
cmp
sbb
add
and
add
add
or
add
dec
xor
push
cmp
sbb
add
pop
or
add
push
adc
pop
adc
sbb
add
cmp
sbb
add
or
add
sbb
add
dec
add
cmp
or
add
or
add
and
add
and
add
add
and
add
add
push
xor
pop
cmp
or
add
cmp
add
dec
xor
cmp
sub
add
ja
add
adc
ds
hlt
(bad)
jmp
lahf
add
add
imul
add
and
add
pop
dec
daa
add
rol
add
push
xor
cmp
cdq
push
add
cmp
sbb
add
and
add
push
add
add
sub
add
or
add
or
or
add
cmp
sbb
add
aad
add
and
add
pop
dec
daa
add
mov
add
dec
xor
cmp
sbb
add
or
add
pop
add
add
xor
add
and
add
pop
pushf
and
add
cmp
sbb
add
or
add
or
add
and
pop
add
add
and
add
cmp
xor
add
and
add
cmp
or
add
add
push
add
add
das
add
add
and
add
add
push
xor
cmp
sub
add
push
adc
add
jl
add
pop
cmp
sub
add
cmp
add
dec
xor
cmp
add
dec
add
pop
add
add
rol
add
and
add
pop
pushf
and
add
cmp
add
dec
add
adc
add
dec
add
dec
xor
cmp
sub
add
sub
add
push
adc
and
push
xor
pop
cmp
sbb
add
sbb
pop
adc
and
add
cmp
sbb
add
je
add
and
add
pop
dec
daa
add
pushf
add
add
push
xor
push
cmp
sbb
add
sbb
add
adc
adc
and
add
fstp
add
dec
add
pop
add
add
or
add
cmp
or
add
add
add
dec
add
dec
xor
pop
cmp
or
add
add
add
dec
add
cmp
verr
add
add
dec
add
add
push
xor
push
cmp
add
and
add
add
inc
add
add
push
adc
add
cmp
add
adc
das
adc
cmp
sub
add
or
sub
add
cmp
sbb
add
sub
adc
mov
add
dec
xor
cmp
sub
add
and
add
dec
add
sbb
add
and
add
add
inc
add
add
and
add
add
push
xor
cmp
sbb
add
daa
add
add
push
add
pop
dec
daa
add
loopne
add
cmp
sbb
add
or
add
add
add
and
add
add
jnp
add
pop
pushf
and
add
add
push
xor
cmp
add
cmp
add
add
inc
add
add
push
daa
add
dec
add
add
lahf
sbb
add
adc
and
add
add
push
xor
cmp
add
cmp
or
add
add
add
dec
add
dec
xor
cmp
sub
add
mov
(bad)
(bad)
cmp
add
dec
add
sbb
add
and
add
add
inc
add
add
and
add
add
push
xor
cmp
sub
add
int
(bad)
(bad)
cmp
sbb
add
add
add
and
add
pop
dec
adc
add
dec
xor
cmp
sub
add
sbb
add
dec
add
adc
add
dec
add
cmp
add
dec
add
push
add
add
or
add
cmp
sbb
add
or
add
pop
add
add
or
add
cmp
sbb
add
or
add
or
add
dec
add
dec
xor
cmp
add
and
or
add
and
add
dec
xor
pop
cmp
or
add
add
add
and
add
and
add
pop
pushf
and
add
add
jbe
add
and
add
add
inc
add
add
push
and
and
push
xor
cmp
add
and
xor
add
pop
dec
daa
add
cdq
add
add
cmp
add
adc
cmp
sub
add
push
push
xor
cmp
sub
add
and
add
dec
add
sbb
add
dec
add
dec
xor
cmp
sbb
add
or
add
or
add
and
add
and
add
pop
pushf
and
push
xor
push
cmp
pop
add
dec
add
add
add
and
add
add
xor
add
pop
pushf
and
push
xor
pop
cmp
or
add
sbb
or
add
dec
xor
cmp
pop
add
and
add
and
add
add
push
and
and
add
add
adc
add
or
add
push
add
add
cwde
add
add
xor
add
pop
pushf
and
add
add
popa
pop
add
and
add
add
dec
add
add
push
daa
add
push
add
add
push
xor
cmp
add
dec
adc
add
ds
add
and
add
add
push
and
and
add
cmp
pop
add
dec
add
add
or
add
cmp
pop
add
and
add
cmp
add
pop
dec
daa
add
pop
add
cmp
push
add
dec
add
sub
jo
add
cmp
push
add
adc
cmp
add
and
add
dec
xor
push
cmp
push
add
dec
add
sbb
add
and
jb
add
pop
pushf
and
add
cmp
adc
ds
in
(bad)
jmp
rol
add
dec
xor
cmp
add
add
pop
add
add
push
daa
add
rol
add
cmp
add
and
add
add
or
add
cmp
add
or
add
push
add
add
je
add
and
add
pop
pushf
and
inc
push
add
adc
jmp
fiadd
add
dec
xor
pop
cmp
push
add
dec
add
or
add
and
add
and
add
pop
pushf
and
add
add
sbb
add
dec
add
sldt
add
dec
add
add
inc
add
add
and
push
xor
cmp
adc
add
and
add
add
movs
add
add
push
add
add
and
into
adc
push
pop
adc
and
adc
add
and
add
add
add
add
add
and
add
cmp
mov
xor
dec
daa
add
lds
add
cmp
or
add
or
add
and
xor
add
pop
pushf
and
outs
adc
add
and
add
add
mov
aas
add
add
and
add
dec
xor
cmp
add
and
add
and
add
pop
dec
daa
add
pop
add
add
push
xor
push
cmp
adc
add
and
add
add
or
add
dec
xor
cmp
adc
pop
or
pushf
and
add
add
push
xor
push
cmp
adc
add
or
add
pop
add
add
ret
add
inc
add
add
and
add
add
fist
add
or
add
or
add
dec
add
dec
xor
cmp
and
add
mov
add
adc
add
push
aam
add
and
xor
push
cmp
or
add
push
add
add
jecxz
add
and
add
pop
pushf
and
add
cmp
add
dec
add
add
add
dec
add
dec
xor
cmp
add
dec
add
push
add
add
and
add
and
add
pop
pushf
and
add
dec
xor
cmp
add
cmp
adc
add
int3
add
add
inc
add
add
push
adc
add
cmp
adc
add
adc
ds
(bad)
jmp
fild
add
cmp
adc
add
or
add
sldt
add
or
add
cmp
adc
add
jne
add
and
add
pop
dec
daa
add
xchg
add
cmp
adc
add
or
add
push
add
add
call
dec
add
add
and
add
cmp
sbb
add
and
add
pop
dec
and
and
add
add
cmps
adc
add
or
add
push
add
add
inc
add
add
aaa
add
add
and
add
add
push
xor
cmp
add
and
add
add
pusha
add
add
push
and
and
add
dec
xor
cmp
add
and
add
add
inc
add
add
push
daa
add
xchg
add
add
push
xor
cmp
add
dec
add
add
add
and
cmp
add
pop
pushf
and
add
dec
xor
cmp
add
cmp
or
add
sbb
add
and
add
add
and
add
add
adc
and
add
inc
and
add
dec
and
add
cs
cmp
add
cmp
(bad)
jmp
and
push
xor
cmp
add
cmp
adc
add
or
add
or
add
dec
add
cmp
das
mov
pop
adc
and
add
add
mov
or
add
push
add
add
and
add
add
and
add
add
push
xor
cmp
add
out
add
add
dec
add
add
push
adc
add
cmp
add
and
add
add
inc
add
add
push
daa
add
jnp
add
cmp
add
dec
add
add
and
add
and
pushf
and
push
xor
cmp
adc
add
or
add
add
add
and
add
and
add
add
and
adc
add
or
add
add
add
and
jns
add
pop
pushf
and
push
xor
cmp
adc
add
dec
add
add
push
add
add
push
daa
add
add
add
enter
and
add
add
dec
add
add
push
daa
add
sbb
add
dec
xor
pop
cmp
rol
add
and
add
pop
dec
adc
add
dec
xor
pop
cmp
sub
pop
adc
adc
pop
adc
pop
pop
pop
rcr
cmp
add
and
add
and
add
add
push
adc
add
cmp
add
and
add
add
inc
add
add
push
daa
add
push
add
add
inc
adc
add
or
add
adc
add
dec
add
cmp
add
dec
add
or
add
and
add
and
add
add
and
add
mov
pop
adc
rol
add
dec
xor
cmp
add
cmp
jmp
pop
add
add
xor
add
pop
dec
daa
add
enter
cmp
adc
add
or
add
sbb
add
and
add
add
inc
add
add
and
push
xor
push
cmp
add
add
bound
add
pop
dec
adc
add
dec
xor
cmp
xor
add
cmp
push
adc
aas
sahf
repz
jmp
xor
outs
adc
add
or
add
or
add
dec
add
add
pop
adc
add
or
add
or
add
and
add
add
dec
add
add
and
add
dec
xor
push
cmp
adc
add
fld
add
and
add
pop
dec
and
and
add
cmp
adc
add
icebp
add
add
push
add
add
push
and
and
add
cmp
adc
add
or
add
push
add
add
mov
aas
add
add
and
add
dec
xor
cmp
add
cmp
out
(bad)
cmp
sldt
and
add
and
add
pop
dec
adc
add
cmp
sldt
and
add
add
dec
add
add
push
daa
add
arpl
add
cmp
or
add
sbb
add
and
add
add
push
add
add
and
mov
add
and
cmp
dec
adc
add
cmp
add
dec
add
add
add
and
add
add
push
add
add
and
add
dec
xor
cmp
pop
add
cmp
jmp
(bad)
cmp
add
dec
add
or
add
and
add
and
add
pop
pushf
and
add
dec
xor
cmp
or
add
adc
add
dec
add
cmp
sldt
dec
add
add
add
dec
add
add
push
xor
pop
cmp
push
add
dec
add
or
add
dec
add
add
push
xor
pop
cmp
push
add
and
xor
add
pop
dec
daa
add
scas
add
add
push
xor
cmp
or
add
or
add
and
add
add
ins
add
add
and
push
xor
pop
cmp
add
icebp
out
jmp
push
add
add
push
xor
cmp
add
dec
add
or
add
dec
add
cmp
add
adc
bound
add
std
add
add
dec
push
add
dec
add
adc
add
dec
add
cmp
push
add
dec
add
add
add
and
add
and
add
pop
pushf
and
add
add
push
xor
push
cmp
push
add
and
add
add
dec
add
and
repnz
add
add
xor
dec
daa
add
mov
add
cmp
or
add
and
add
add
or
add
dec
xor
push
cmp
or
add
and
add
add
mov
add
and
pushf
and
add
add
push
xor
push
cmp
add
sub
push
xor
push
cmp
or
add
add
add
dec
add
dec
xor
cmp
push
add
cmp
(bad)
(bad)
cmp
add
cdq
add
add
xor
add
pop
dec
daa
add
cmp
add
dec
xor
cmp
sbb
out
(bad)
(bad)
cmp
or
add
add
add
dec
add
cmp
or
add
add
and
add
pop
dec
adc
add
cmp
or
add
and
add
add
or
add
dec
xor
cmp
or
add
or
add
sbb
or
add
dec
xor
cmp
or
add
or
add
or
or
add
cmp
out
add
and
add
push
daa
add
test
mov
sub
pop
adc
and
add
add
push
xor
cmp
add
test
add
adc
and
add
add
push
xor
cmp
add
cmp
add
dec
add
or
add
and
add
add
inc
add
add
and
add
add
push
xor
cmp
add
or
add
add
or
add
dec
xor
cmp
or
add
or
add
add
add
and
add
and
add
add
and
add
dec
xor
cmp
push
sbb
sub
add
add
push
xor
cmp
or
add
adc
add
lea
push
verr
pop
add
add
push
xor
cmp
fmul
add
dec
add
or
add
and
sub
add
pop
pushf
and
mov
add
adc
pop
pop
adc
and
add
dec
xor
cmp
mov
or
add
adc
add
dec
add
dec
xor
pop
cmp
or
add
pop
add
add
or
add
dec
xor
cmp
add
cmp
add
cmp
add
dec
add
add
or
add
cmp
add
dec
add
pop
add
add
or
add
cmp
or
add
or
add
add
add
and
add
add
sldt
add
and
add
add
adc
add
dec
add
sbb
add
dec
add
cmp
or
add
or
add
sbb
add
dec
add
cmp
or
add
or
add
adc
add
dec
add
dec
xor
cmp
or
add
repnz
add
push
add
add
push
daa
add
and
add
cmp
or
add
or
add
and
add
add
inc
add
add
and
push
xor
cmp
add
cmp
adc
add
jl
add
and
add
add
dec
add
add
push
daa
add
inc
add
add
push
xor
cmp
add
cmp
add
and
add
add
push
add
add
push
and
and
inc
or
add
mov
dec
add
add
sub
add
sub
add
and
or
add
pop
dec
daa
add
sbb
add
dec
xor
cmp
or
add
or
add
or
add
and
add
and
add
pop
pushf
and
add
add
hlt
or
add
or
add
adc
jnp
add
and
add
pop
pushf
and
push
xor
push
cmp
or
add
dec
add
add
das
add
add
push
and
and
add
cmp
or
add
add
add
and
cmp
add
pop
pushf
and
add
add
push
xor
cmp
pop
add
add
aaa
add
add
push
and
and
add
add
push
xor
cmp
add
and
add
add
push
daa
add
or
add
cmp
add
adc
adc
and
add
call
sbb
and
add
add
push
xor
cmp
or
add
or
add
pop
add
add
mov
add
and
add
pop
pushf
and
add
add
push
or
add
or
add
or
or
add
dec
xor
push
cmp
or
add
or
add
push
add
add
or
add
dec
xor
cmp
sbb
add
pop
out
(bad)
cmp
or
add
and
add
pop
add
add
push
xor
push
cmp
or
add
or
add
or
add
and
add
and
add
pop
pushf
and
cmps
or
add
or
cmp
add
add
mov
add
and
add
and
add
pop
dec
daa
add
add
add
jnp
add
dec
add
push
add
add
arpl
add
and
add
pop
pushf
and
add
cmp
add
adc
jmp
push
add
add
inc
or
add
mov
add
add
push
and
and
add
add
xor
add
dec
add
or
add
dec
add
cmp
or
add
or
add
add
add
and
add
and
add
add
and
repz
add
jle
add
add
imul
and
add
dec
xor
cmp
sbb
add
inc
adc
add
rol
add
dec
add
adc
add
dec
add
cmp
fwait
add
add
xor
dec
daa
add
add
add
push
xor
cmp
sbb
add
cdq
pop
add
dec
add
push
add
add
or
add
dec
xor
cmp
add
dec
add
or
add
and
add
add
pop
add
add
and
add
add
pop
pop
add
adc
pop
pop
adc
and
add
push
xor
cmp
add
and
add
and
add
pop
dec
daa
add
jb
add
cmp
or
add
sldt
add
ret
add
add
inc
add
add
and
add
cmp
pop
add
and
and
add
pop
dec
daa
add
bound
add
dec
xor
cmp
sbb
add
lock
add
dec
add
sldt
add
and
add
and
add
add
and
add
dec
xor
cmp
sbb
add
or
(bad)
(bad)
cmp
push
add
adc
pop
pop
adc
and
add
dec
xor
cmp
sub
not
add
xor
add
or
add
dec
xor
cmp
pop
add
cmp
pop
add
add
aaa
add
add
push
and
and
add
dec
xor
push
cmp
add
dec
add
sbb
add
and
add
and
add
add
and
add
add
dec
push
add
dec
add
adc
add
dec
add
cmp
push
add
and
cmp
add
pop
dec
daa
add
sub
push
xor
push
cmp
fwait
add
add
dec
add
add
push
and
and
add
add
dec
add
add
add
and
add
and
add
pop
pushf
and
add
cmp
add
add
add
sub
add
pop
dec
adc
add
dec
xor
pop
cmp
add
add
and
or
add
dec
xor
pop
cmp
or
add
or
add
dec
add
dec
xor
cmp
push
add
cmp
or
add
or
add
dec
add
cmp
add
adc
pop
or
add
add
add
dec
xor
cmp
add
adc
sbb
add
xchg
add
dec
xor
push
cmp
add
and
add
add
dec
add
add
push
adc
add
cmp
add
add
add
push
add
add
push
daa
add
jp
add
cmp
sub
add
and
add
add
push
daa
add
js
add
cmp
add
add
mov
add
and
add
add
push
and
and
push
xor
pop
cmp
add
add
or
add
add
lock
add
push
add
add
and
add
cmp
or
add
or
add
and
add
add
and
add
pop
pushf
and
add
cmp
jns
add
and
add
pop
dec
adc
add
dec
xor
cmp
add
dec
add
add
add
dec
add
dec
xor
cmp
adc
or
add
pop
add
add
or
add
adc
add
dec
add
cmp
or
add
pop
add
add
or
add
cmp
push
adc
pop
pop
inc
stos
fdivr
jmp
dec
add
add
push
xor
cmp
add
add
or
add
add
add
dec
add
add
cld
add
add
adc
add
add
push
xor
cmp
add
add
sub
adc
and
inc
add
rcr
cmp
add
add
sbb
pop
fadd
and
inc
mov
add
push
add
and
adc
add
cli
xor
and
and
push
pop
add
or
add
push
push
push
push
pop
dec
pop
add
or
add
stos
stos
stos
stos
pop
dec
adc
dec
add
dec
add
bound
or
add
push
pop
add
or
add
or
or
add
pop
fs
dec
and
dec
add
or
dec
add
adc
pusha
dec
add
push
add
dec
add
(bad)
(bad)
(bad)
maxps
push
push
add
or
add
lock
dec
add
dec
add
dec
add
bound
push
es
or
add
or
add
push
pop
add
or
add
or
and
pop
pop
bound
or
add
push
sbb
dec
add
inc
inc
pop
dec
or
dec
add
add
add
pop
dec
sbb
dec
add
dec
add
bound
push
and
dec
add
or
add
push
pop
add
or
add
or
add
sbb
dec
add
dec
add
or
add
push
add
dec
add
or
add
fs
dec
add
dec
add
or
add
push
add
dec
add
or
add
add
dec
add
or
add
push
add
dec
add
or
dec
add
or
add
or
add
push
add
dec
add
ins
pop
adc
add
add
add
adc
and
add
add
sbb
add
and
add
add
push
daa
add
pop
add
add
add
add
dec
add
or
add
and
das
add
add
and
add
add
jmp
or
add
add
add
dec
add
add
push
xor
cmp
adc
add
xor
(bad)
(bad)
cmp
sub
add
and
add
pop
dec
daa
add
jle
add
dec
xor
pop
cmp
or
add
add
add
and
add
and
pushf
and
push
xor
cmp
adc
add
jns
add
dec
add
add
add
and
add
add
and
push
add
add
push
add
add
adc
add
pop
dec
adc
add
cmp
add
and
or
add
pop
dec
daa
add
or
add
dec
xor
cmp
add
dec
add
push
add
add
or
add
cmp
add
add
add
add
mov
add
cmp
add
add
cmc
add
add
or
add
add
add
and
add
imul
and
add
cmp
add
add
cdq
add
add
xor
add
pop
dec
daa
add
jae
add
cmp
sbb
adc
jbe
add
and
add
cmp
or
add
pop
add
add
imul
add
add
and
add
add
mov
add
and
and
add
pop
dec
daa
add
fwait
add
add
jb
add
dec
add
add
fwait
add
add
xor
add
pop
pushf
and
add
add
push
add
add
icebp
add
add
push
add
add
push
daa
add
or
xor
add
and
add
and
add
pop
dec
daa
add
jbe
add
cmp
add
add
push
add
add
pop
add
add
push
daa
add
sbb
jmp
mov
add
dec
xor
dec
add
add
add
loopne
call
lock
dec
in
(bad)
jmp
fdivr
jmp
in
jmp
fdivrp
dec
loope
call
(bad)
inc
iret
(bad)
push
(bad)
jmp
(bad)
(bad)
jl
(bad)
push
(bad)
dec
out
jmp
(bad)
call
(bad)
push
(bad)
inc
add
add
aad
inc
(bad)
jmp
(bad)
dec
(bad)
jmp
(bad)
jmp
in
call
lock
(bad)
mov
sar
call
loop
jmp
fdivrp
push
repz
call
sar
call
out
(bad)
dec
loop
jmp
in
(bad)
inc
push
add
(bad)
(bad)
jmp
loopne
push
hlt
(bad)
(bad)
out
in
(bad)
(bad)
stc
fdivrp
call
repnz
(bad)
cmp
add
add
hlt
(bad)
jmp
(bad)
push
fcos
(bad)
cmp
(bad)
push
out
(bad)
dec
call
out
call
jmp
dec
(bad)
(bad)
mov
fdivr
(bad)
jp
(bad)
dec
(bad)
call
(bad)
dec
call
(bad)
(bad)
aas
clc
(bad)
dec
out
inc
jecxz
(bad)
in
push
add
mov
(bad)
(bad)
stc
aad
jmp
in
(bad)
dec
aam
inc
(bad)
dec
xlat
(bad)
call
fdivr
call
loopne
call
(bad)
inc
(bad)
jmp
call
(bad)
jmp
add
add
loop
jmp
loope
dec
dec
sar
push
lock
push
out
(bad)
(bad)
jnp
add
(bad)
call
(bad)
dec
(bad)
jmp
(bad)
dec
add
add
(bad)
(bad)
aas
in
(bad)
(bad)
fld1
(bad)
inc
fdivrp
(bad)
mov
(bad)
call
loopne
push
(bad)
jmp
(bad)
jmp
(bad)
call
sar
jmp
sar
call
add
(bad)
jmp
(bad)
inc
(bad)
call
(bad)
call
(bad)
(bad)
mov
clc
(bad)
call
call
(bad)
dec
(bad)
push
fcos
inc
(bad)
inc
add
mov
add
sbb
(bad)
push
push
loopne
push
(bad)
dec
in
jmp
(bad)
(bad)
mov
aad
jmp
sar
(bad)
fcmovne
(bad)
jmp
fdivr
push
sar
inc
(bad)
(bad)
fsubr
(bad)
call
push
add
fcomp
(bad)
call
idiv
jmp
out
jmp
(bad)
dec
icebp
(bad)
(bad)
cmp
hlt
(bad)
jmp
jmp
cmc
(bad)
jmp
out
(bad)
jmp
add
push
out
(bad)
inc
add
fsubr
(bad)
dec
(bad)
jmp
icebp
(bad)
call
clc
(bad)
push
hlt
(bad)
call
fdivr
(bad)
mov
jmp
add
jb
(bad)
call
sar
call
add
ret
inc
out
call
(bad)
inc
out
(bad)
jmp
repz
jmp
clc
(bad)
jmp
in
jmp
fcos
call
sar
jmp
(bad)
dec
(bad)
(bad)
cld
aam
dec
add
add
(bad)
(bad)
jmp
aam
call
add
add
add
adc
(bad)
call
inc
jmp
jecxz
(bad)
(bad)
js
(bad)
dec
push
add
je
(bad)
jmp
add
(bad)
dec
clc
(bad)
call
call
(bad)
(bad)
cmp
(bad)
push
out
jmp
aam
(bad)
in
xlat
(bad)
(bad)
cmp
add
(bad)
call
add
add
(bad)
(bad)
in
in
inc
jmp
(bad)
jns
add
shl
jmp
(bad)
jmp
jmp
(bad)
inc
fdivr
dec
loope
dec
out
(bad)
inc
repnz
dec
in
(bad)
call
(bad)
dec
out
(bad)
jmp
jmp
jmp
(bad)
dec
(bad)
jmp
add
add
add
(bad)
call
clc
(bad)
push
(bad)
(bad)
(bad)
(bad)
dec
sar
jmp
(bad)
jmp
jmp
jmp
add
stos
idiv
push
(bad)
push
(bad)
call
(bad)
jmp
fdivr
jmp
fdivr
push
jmp
push
out
(bad)
ds
(bad)
(bad)
cmp
(bad)
call
(bad)
dec
(bad)
dec
add
add
idiv
push
idiv
inc
add
add
(bad)
call
add
out
(bad)
jnp
(bad)
(bad)
jg
(bad)
jmp
jecxz
(bad)
mov
repnz
call
add
cmp
(bad)
push
add
add
add
(bad)
call
pop
add
out
(bad)
dec
fdivr
call
(bad)
inc
(bad)
jmp
add
into
push
add
xor
(bad)
call
in
(bad)
jmp
loop
dec
add
add
jmp
dec
pop
add
add
jecxz
(bad)
inc
loope
call
xlat
(bad)
call
jecxz
inc
(bad)
push
repz
(bad)
jmp
idiv
inc
sar
(bad)
mov
clc
(bad)
jmp
(bad)
dec
add
add
(bad)
call
(bad)
jmp
(bad)
(bad)
cmp
(bad)
(bad)
fld
add
mov
sar
call
add
sbb
loop
call
out
(bad)
inc
xlat
(bad)
dec
jmp
push
(bad)
jmp
(bad)
jmp
sar
push
jmp
fdivrp
call
jmp
mov
sar
push
(bad)
(bad)
cli
sar
jmp
add
add
sar
dec
hlt
(bad)
jmp
add
add
cmc
(bad)
jmp
(bad)
call
(bad)
inc
fdivr
inc
add
ins
add
add
jmp
(bad)
call
in
(bad)
call
in
(bad)
jmp
pop
add
jg
(bad)
jmp
pop
add
repz
inc
clc
(bad)
push
sar
dec
out
(bad)
call
(bad)
inc
(bad)
call
icebp
(bad)
jmp
loope
jmp
stc
(bad)
(bad)
mov
sar
push
iret
(bad)
call
(bad)
(bad)
stc
add
add
add
jo
(bad)
call
in
(bad)
(bad)
jnp
(bad)
dec
loop
call
(bad)
dec
fdivr
inc
repz
dec
add
add
(bad)
push
xlat
(bad)
jmp
(bad)
(bad)
dec
hlt
(bad)
jmp
(bad)
push
add
add
(bad)
jmp
add
and
add
add
inc
stc
(bad)
(bad)
dec
add
adc
inc
add
add
jbe
add
pop
pushf
and
stc
(bad)
call
sbb
sbb
add
push
xor
cmp
push
fdivr
(bad)
cmp
stc
(bad)
call
mov
pop
adc
and
add
add
push
xor
cmp
clc
(bad)
jmp
jmp
add
pop
dec
daa
add
push
add
add
push
xor
cmp
clc
(bad)
(bad)
dec
add
sbb
or
add
cmp
verr
or
add
dec
add
cmp
add
and
add
add
or
data16
add
and
add
test
(bad)
(bad)
dec
add
sbb
add
dec
add
dec
xor
cmp
pusha
clc
(bad)
(bad)
dec
add
push
add
add
or
add
dec
xor
cmp
or
add
aas
clc
(bad)
(bad)
cmp
sbb
mov
aaa
add
add
sub
(bad)
(bad)
dec
add
add
add
and
add
js
add
pop
pushf
and
add
add
push
xor
cmp
or
add
add
add
dec
add
dec
xor
cmp
jno
add
cmp
idiv
jmp
xlat
add
add
inc
add
add
push
daa
add
cld
add
add
push
xor
cmp
pminub
(bad)
cmp
or
add
add
add
dec
add
add
push
xor
pop
cmp
push
adc
pop
pop
inc
lods
fdivr
jmp
leave
add
add
push
xor
push
cmp
or
add
sbb
add
and
add
add
inc
add
add
and
add
cmp
(bad)
call
sbb
sub
(bad)
jmp
xchg
add
dec
xor
cmp
or
add
jno
(bad)
(bad)
cmp
idiv
jmp
add
add
sub
add
pop
dec
and
and
add
dec
xor
cmp
or
add
sbb
sub
or
add
pop
add
add
push
idiv
(bad)
dec
add
adc
add
and
xor
pushf
and
add
add
out
idiv
jmp
(bad)
add
add
inc
add
add
push
adc
add
cmp
idiv
call
sub
movups
inc
add
add
push
xor
push
cmp
or
add
adc
add
and
add
and
add
pop
pushf
and
add
add
push
xor
pop
cmp
or
add
adc
add
and
add
add
inc
add
add
and
add
add
push
xor
pop
cmp
(bad)
(bad)
dec
add
push
add
add
pop
add
add
daa
add
add
and
add
add
push
xor
cmp
or
add
dec
idiv
(bad)
dec
add
adc
add
dec
add
cmp
idiv
(bad)
dec
add
sldt
add
out
add
and
add
pop
pushf
and
add
push
xor
cmp
pop
add
cmp
sar
(bad)
cmp
or
add
or
repnz
add
jnp
add
pop
pushf
and
add
add
push
xor
cmp
pop
add
cmp
cmc
(bad)
jmp
add
add
push
add
add
push
daa
add
dec
add
add
push
xor
cmp
cmc
(bad)
(bad)
dec
add
sldt
add
dec
add
add
dec
add
add
and
add
add
push
xor
cmp
cwde
cmc
(bad)
jmp
repz
add
push
add
add
push
adc
add
cmp
(bad)
(bad)
dec
add
add
bound
add
and
pushf
and
push
xor
cmp
add
cmp
sar
(bad)
cmp
(bad)
(bad)
dec
add
pop
add
add
or
add
dec
xor
cmp
add
xor
(bad)
jmp
jl
add
and
add
add
push
daa
add
inc
add
add
push
xor
push
cmp
cmc
(bad)
jmp
dec
add
add
jp
add
pop
dec
daa
add
add
add
cmp
hlt
(bad)
(bad)
dec
add
sbb
add
dec
add
cmp
hlt
(bad)
(bad)
jle
add
add
cmp
push
add
adc
and
(bad)
hlt
(bad)
(bad)
dec
add
push
add
add
or
add
dec
xor
pop
cmp
sub
and
add
add
pushf
and
xchg
hlt
(bad)
jmp
inc
add
add
js
add
pop
dec
daa
add
pop
add
cmp
(bad)
(bad)
dec
add
push
add
add
dec
add
add
add
add
pop
pushf
and
add
add
pop
hlt
(bad)
jmp
inc
add
add
add
add
pop
dec
daa
add
inc
add
add
inc
hlt
(bad)
jmp
pop
add
add
inc
add
add
push
daa
add
test
add
push
xor
cmp
hlt
(bad)
(bad)
dec
add
sbb
add
and
sub
pushf
and
add
add
or
or
add
or
or
add
cmp
repz
(bad)
dec
add
or
add
dec
add
dec
xor
cmp
add
retf
(bad)
(bad)
cmp
repz
(bad)
dec
add
push
add
add
or
add
dec
xor
cmp
add
repz
(bad)
dec
add
or
add
dec
add
dec
xor
pop
cmp
mov
add
add
push
xor
cmp
add
repz
jmp
cmp
add
and
add
pop
dec
daa
add
or
add
cmp
(bad)
jmp
out
add
and
add
pop
dec
daa
add
or
add
cmp
push
add
add
push
add
add
push
daa
add
xchg
add
add
push
xor
push
cmp
repz
(bad)
dec
add
or
add
and
add
add
ins
add
add
and
add
add
add
(bad)
jmp
cmps
add
add
inc
add
add
push
daa
add
sub
add
cmp
repnz
call
adc
sbb
xchg
pop
sbb
adc
sbb
xchg
pop
adc
adc
adc
pop
pop
loopne
push
bound
adc
loopne
pusha
adc
test
add
cmp
or
add
or
add
dec
add
add
push
xor
cmp
or
add
push
add
add
or
add
dec
xor
push
cmp
(bad)
(bad)
dec
add
pop
add
add
mov
aas
add
add
and
add
add
pop
repnz
jmp
pop
add
add
add
add
push
daa
add
rol
add
dec
xor
cmp
cmp
(bad)
jmp
sub
add
and
add
push
daa
add
pop
add
add
daa
repnz
(bad)
dec
add
das
and
add
add
pop
repnz
(bad)
dec
add
add
add
and
aaa
add
add
and
add
cmp
icebp
(bad)
call
sub
add
scas
add
add
out
(bad)
(bad)
cmp
add
jle
add
add
sbb
or
sldt
add
push
add
add
sldt
add
loop
(bad)
jmp
test
out
(bad)
jmp
test
add
cmp
(bad)
(bad)
call
sbb
or
add
fld
add
add
add
jo
adc
sub
push
enter
stos
add
push
cmp
(bad)
jmp
stos
add
push
cmp
stos
add
push
cmp
enter
stos
add
push
cmp
leave
(bad)
jmp
stos
add
push
cmp
xchg
add
push
cmp
retf
(bad)
push
add
or
add
(bad)
jmp
stos
add
push
cmp
mov
out
retf
(bad)
jmp
stos
add
push
cmp
add
push
cmp
int3
(bad)
jmp
stos
add
push
cmp
int
jmp
stos
add
push
cmp
int
jmp
stos
add
push
cmp
(bad)
jmp
mov
cmp
stos
add
push
cmp
(bad)
jmp
stos
add
push
cmp
(bad)
jmp
stos
add
push
cmp
sar
jmp
stos
add
push
cmp
sar
jmp
stos
add
push
cmp
sar
jmp
stos
add
push
cmp
sar
push
add
or
fwait
sar
jmp
stos
add
push
cmp
pushf
add
push
cmp
aam
jmp
stos
add
push
cmp
aam
jmp
stos
add
push
cmp
(bad)
jmp
movs
add
push
cmp
(bad)
jmp
stos
add
push
cmp
aam
jmp
cdq
add
push
cmp
aam
jmp
stos
add
push
cmp
aad
jmp
mov
(bad)
(bad)
jmp
stos
add
push
cmp
(bad)
(bad)
jmp
stos
add
push
cmp
stos
add
push
cmp
stos
add
push
cmp
stos
add
push
cmp
(bad)
(bad)
jmp
stos
add
push
cmp
(bad)
(bad)
jmp
cmps
add
push
cmp
xlat
(bad)
jmp
stos
add
push
cmp
xlat
(bad)
jmp
stos
add
push
cmp
(bad)
jmp
stos
add
push
cmp
popf
add
push
cmp
fcos
jmp
stos
add
push
cmp
(bad)
jmp
xchg
add
push
cmp
cwde
add
push
cmp
(bad)
jmp
stos
add
push
cmp
stos
add
push
cmp
add
push
cmp
call
(bad)
jmp
fwait
add
push
cmp
stos
add
push
cmp
add
push
cmp
stos
add
push
cmp
stos
add
push
cmp
fdivrp
jmp
stos
add
push
cmp
stos
add
push
cmp
loopne
jmp
stos
add
push
cmp
loope
jmp
stos
add
push
cmp
loop
jmp
stos
add
push
cmp
(bad)
jmp
stos
add
push
cmp
stos
add
push
cmp
stos
add
push
cmp
(bad)
jmp
stos
add
push
cmp
(bad)
jmp
stos
add
push
cmp
stos
add
push
cmp
jmp
stos
add
push
cmp
stos
add
push
cmp
cmps
add
push
cmp
(bad)
jmp
mov
inc
out
jmp
stos
add
push
cmp
out
jmp
stos
add
push
cmp
out
jmp
stos
add
push
cmp
out
jmp
stos
add
push
cmp
out
jmp
movs
add
push
cmp
call
add
push
cmp
call
add
push
cmp
jmp
add
push
cmp
jmp
push
cmp
stos
add
push
cmp
in
(bad)
jmp
sahf
add
push
cmp
(bad)
jmp
lahf
add
push
cmp
(bad)
jmp
stos
add
push
cmp
(bad)
jmp
stos
add
push
cmp
cmc
(bad)
jmp
stos
add
push
cmp
idiv
jmp
stos
add
push
cmp
(bad)
jmp
stos
add
push
cmp
(bad)
jmp
stos
add
push
cmp
idiv
jmp
stos
add
push
cmp
idiv
jmp
stos
add
push
cmp
idiv
jmp
stos
add
push
cmp
idiv
jmp
stos
add
push
cmp
(bad)
jmp
stos
add
push
cmp
(bad)
jmp
stos
add
push
cmp
stos
add
push
cmp
cmps
add
push
cmp
clc
(bad)
jmp
stos
add
push
cmp
stc
(bad)
jmp
stos
add
push
cmp
cli
(bad)
push
add
or
xor
(bad)
jmp
stos
add
push
cmp
cli
(bad)
jmp
stos
add
push
cmp
(bad)
jmp
add
add
add
add
mov
push
sbb
add
adc
add
add
add
adc
or
in
push
dec
adc
call
add
jo
fld
add
add
fiadd
add
or
fild
add
push
push
push
mov
fadd
add
sub
xor
add
add
xor
add
add
jle
add
add
add
add
add
push
push
sub
add
or
inc
adc
add
push
sub
add
or
pop
sub
add
or
cmp
add
add
sub
add
or
pop
sub
add
or
jle
add
add
mov
add
outs
loopne
add
or
cmp
add
add
movs
sbb
add
or
add
add
imul
adc
add
add
add
adc
add
add
add
imul
adc
jnp
add
add
sub
add
adc
add
add
add
add
imul
add
add
imul
add
xchg
add
es
sub
sub
add
or
pop
adc
jecxz
add
push
sub
add
or
pop
adc
jnp
add
add
imul
push
adc
jmp
jle
add
add
sbb
add
jle
add
add
add
outs
and
add
adc
add
cmp
add
add
add
add
outs
and
add
sub
or
imul
adc
call
add
add
xor
add
add
add
add
add
or
fild
or
push
call
retf
or
push
add
add
fld
add
add
add
add
add
push
add
sbb
push
sbb
add
adc
push
add
add
add
adc
or
hlt
fadd
adc
call
add
add
das
add
push
sub
ret
jo
lea
add
add
push
push
and
add
das
add
push
sub
push
pop
and
add
add
das
add
push
sub
push
sub
add
or
lea
add
add
pop
push
add
pop
pop
add
add
je
add
add
sbb
or
jle
add
xor
add
and
add
add
push
jl
sub
add
push
cmp
or
add
jno
add
add
cmp
or
add
pop
add
add
or
add
dec
jl
push
cmp
pop
add
adc
adc
sbb
xchg
pushf
and
rol
add
adc
adc
sbb
jno
xchg
pushf
and
add
cmp
cmp
adc
add
push
aaa
add
or
add
cmp
ror
add
fs
add
push
adc
xor
add
cmp
jp
out
push
add
sub
out
push
add
adc
xchg
add
and
add
cmp
add
adc
adc
es
add
push
adc
and
push
jl
sub
add
push
cmp
dec
pop
add
dec
add
sbb
add
dec
add
dec
jl
pop
cmp
add
adc
adc
jno
xchg
pushf
and
adc
or
add
push
add
add
rol
add
and
add
pop
pushf
and
add
cmp
push
add
push
adc
push
icebp
push
add
dec
add
add
add
and
add
and
add
and
add
cmp
push
add
adc
cmp
add
pop
pop
inc
or
add
and
add
add
mov
or
add
sbb
or
add
cmp
push
add
adc
(bad)
add
push
and
mov
add
dec
add
adc
add
and
add
add
pop
add
add
and
push
jl
push
cmp
add
cmp
push
add
cmp
add
and
push
jl
sub
add
push
cmp
add
cmp
push
add
dec
add
or
add
dec
add
dec
jl
cmp
push
add
adc
adc
sbb
jno
xchg
pushf
cmp
fwait
push
add
adc
pop
adc
push
xchg
pushf
and
add
add
add
adc
pop
adc
imul
xchg
pusha
adc
cld
add
add
fld
dec
add
adc
lods
add
add
gs
add
pop
pushf
and
push
jl
sub
add
push
cmp
(bad)
(bad)
(bad)
cmp
add
add
(bad)
add
push
cmp
add
and
add
cmp
add
adc
push
sub
add
push
adc
push
sub
add
push
pop
push
cmp
push
add
and
ins
add
add
add
add
add
pop
dec
adc
and
jl
cmp
add
or
add
add
add
and
add
add
inc
add
add
and
add
add
cmp
dec
add
pop
add
add
or
add
cmp
add
add
push
sbb
cmp
add
add
or
add
dec
add
add
add
and
add
add
xor
add
pop
pushf
and
add
add
in
add
dec
add
sbb
add
dec
add
cmp
add
add
add
add
pop
add
add
push
adc
and
add
add
mov
add
and
add
add
add
add
pop
dec
aaa
add
in
add
dec
jl
sub
add
push
cmp
cmp
add
adc
sub
arpl
mov
add
dec
jl
push
cmp
add
dec
add
pop
add
add
or
add
cmp
add
adc
jnp
xor
add
and
add
cmp
add
adc
push
adc
xchg
add
add
push
jl
sub
add
push
cmp
add
cmp
push
adc
add
add
pop
push
rcr
cmp
jb
add
and
add
add
push
aaa
add
pop
add
add
push
jl
cmp
add
add
js
push
sub
sub
popa
add
add
push
jl
push
cmp
add
add
or
add
or
add
and
inc
add
add
and
add
cmp
adc
cmp
add
scas
add
add
or
add
and
add
add
sahf
add
add
inc
sbb
cmc
add
add
mov
add
adc
pop
adc
add
add
push
jl
cmp
add
adc
or
fs
and
push
or
add
or
add
and
das
add
add
cmp
push
add
cmp
add
sub
mov
cmp
push
add
and
add
add
add
dec
add
or
add
dec
add
cmp
add
add
push
adc
sbb
jno
xchg
pushf
and
add
dec
jl
pop
cmp
add
add
adc
add
cmp
push
add
dec
pop
add
pop
add
add
loope
add
and
add
add
dec
add
add
push
adc
and
add
dec
jl
cmp
add
add
add
pop
dec
pushf
and
add
dec
jl
cmp
pop
add
or
add
and
add
add
inc
add
add
and
add
dec
jl
cmp
clc
add
add
push
add
add
push
aaa
add
push
add
add
jl
add
dec
add
sbb
add
dec
add
cmp
add
sub
sbb
pop
sub
and
add
add
push
jl
sub
add
push
cmp
cmp
add
and
add
add
ins
add
add
push
aaa
add
adc
add
cmp
add
add
repz
add
push
add
add
push
aaa
add
dec
add
add
push
add
add
or
add
or
mov
add
cmp
push
add
pop
pushf
and
add
add
push
jl
sub
add
push
cmp
add
add
into
push
add
adc
adc
push
jl
cmp
add
add
push
adc
sbb
mov
xchg
pushf
and
add
cmp
mov
add
sbb
sbb
add
dec
jl
sub
add
push
cmp
or
add
add
or
add
cmp
add
jle
add
add
pop
adc
push
add
adc
cmp
in
add
and
add
dec
jl
cmp
add
xchg
cmp
add
dec
add
add
sbb
cs
xchg
pushf
and
cmp
add
push
adc
je
add
cmp
add
add
call
inc
sub
add
push
adc
pushf
add
add
aas
push
add
dec
add
pop
add
add
or
add
cmp
push
add
cmp
push
add
cmp
push
add
and
add
add
fiadd
add
dec
add
das
push
add
dec
add
cmp
add
add
add
push
push
push
int
add
cmp
push
add
dec
jl
cmp
xor
imul
dec
add
and
add
movs
add
add
add
add
push
aaa
add
mov
add
dec
jl
sub
add
push
cmp
add
adc
sub
add
push
and
add
cmp
add
or
add
adc
add
and
add
and
add
and
add
cmp
add
jle
add
add
out
add
add
add
jp
add
cmp
add
jle
add
or
call
add
cmp
or
add
cwde
push
add
dec
add
cmp
push
jl
dec
add
add
add
push
add
or
add
cmc
(bad)
jmp
add
arpl
add
pop
xor
add
add
and
add
add
adc
add
add
xchg
cmp
add
push
add
ss
(bad)
jmp
repnz
(bad)
jl
add
mov
or
add
das
add
shl
add
jge
add
scas
cmp
add
(bad)
(bad)
clc
inc
add
mov
sub
add
add
add
add
xchg
add
clc
sbb
add
cmp
add
daa
add
cmp
add
les
add
add
add
mov
das
add
or
add
xchg
sbb
add
pop
add
or
hlt
(bad)
inc
push
add
dec
sbb
add
cmp
add
add
add
add
(bad)
add
mov
add
xor
dec
pop
add
mov
add
iret
add
add
add
(bad)
cmp
add
cmp
add
add
and
add
adc
add
add
std
cmp
add
aaa
add
into
or
add
add
imul
add
and
xor
add
add
sub
add
pop
aaa
add
xor
add
leave
sub
add
add
stc
aaa
add
mov
adc
add
and
add
mov
and
add
lock
jmp
cmp
add
inc
add
adc
add
dec
or
add
xor
add
add
movs
and
add
and
add
add
pop
and
add
xchg
sub
add
add
mov
pop
add
adc
add
mov
add
lods
adc
add
jno
add
ins
sub
add
sub
add
lahf
sbb
add
add
aas
add
add
add
test
or
add
add
pop
cmp
add
add
push
add
or
add
jg
(bad)
(bad)
jns
add
rcr
add
add
mov
add
add
add
add
xor
add
dec
sldt
out
add
push
sub
add
add
adc
call
sub
add
cdq
sbb
add
sub
add
inc
add
pop
adc
add
and
add
xor
add
dec
sbb
add
inc
add
fistp
add
pop
add
les
add
stos
inc
add
arpl
add
and
add
add
add
adc
add
inc
add
fyl2x
(bad)
call
adc
add
xchg
add
test
add
mov
add
cs
add
inc
add
xchg
cmp
add
out
(bad)
(bad)
sti
repnz
(bad)
fisttp
add
sbb
add
mov
add
jecxz
add
cwde
repnz
jmp
cmp
add
and
add
repz
dec
sub
add
lock
dec
add
add
add
mov
repnz
jmp
add
mov
add
mov
add
hlt
xor
add
and
add
add
add
add
out
add
ret
add
sbb
add
pop
add
bound
add
xchg
xor
add
and
add
das
add
push
sldt
jnp
add
cmps
pop
add
into
out
(bad)
dec
out
(bad)
inc
or
add
and
add
aaa
repz
inc
inc
add
adc
add
add
add
xor
add
inc
add
inc
and
add
hlt
(bad)
dec
repz
jmp
add
or
add
sbb
add
fild
add
retf
add
or
add
add
add
add
add
adc
add
sub
add
add
mov
add
lock
add
icebp
(bad)
call
or
add
mov
add
jb
add
lahf
aaa
add
ret
add
cmp
add
push
add
push
sub
add
(bad)
call
or
add
(bad)
push
hlt
(bad)
inc
add
mov
add
add
or
add
add
jns
add
push
add
jmp
add
add
fisttp
(bad)
jmp
out
(bad)
jmp
aaa
add
jecxz
add
adc
add
cmp
adc
add
add
rol
scas
add
add
add
jp
add
arpl
add
sbb
add
add
inc
and
add
in
(bad)
inc
sub
add
add
cmp
add
add
sbb
add
push
add
add
inc
add
jns
add
fdiv
add
jmp
add
and
add
stos
xor
add
add
add
push
add
and
adc
add
add
out
(bad)
call
add
das
inc
add
icebp
sbb
add
and
inc
add
jno
add
pop
add
add
xlat
push
add
test
add
jmp
add
jmp
inc
add
fstp
add
mov
(bad)
call
cmp
add
push
add
sbb
add
and
add
add
push
push
add
rcr
add
and
add
add
sub
add
dec
out
(bad)
(bad)
mov
push
add
cmp
add
xor
add
push
add
jge
add
sub
add
sti
pop
add
dec
repz
jmp
add
add
and
add
add
add
inc
add
xchg
xor
add
daa
add
inc
out
(bad)
push
push
add
mov
and
add
sub
add
add
cmc
cmp
add
or
add
add
test
add
fdivp
(bad)
(bad)
mov
add
jle
add
add
add
lock
add
add
and
add
(bad)
call
or
add
sub
add
adc
add
and
dec
sbb
add
add
pushf
sbb
add
shr
add
add
enter
loope
(bad)
call
adc
add
sbb
add
and
add
div
(bad)
push
sub
add
add
idiv
add
cmp
add
(bad)
(bad)
cmp
add
(bad)
lock
call
push
add
sub
add
add
add
sub
add
push
inc
add
dec
add
add
add
xor
(bad)
cmp
add
movs
sub
add
pop
add
adc
add
(bad)
call
add
add
add
add
add
mov
icebp
(bad)
dec
and
add
repz
push
sub
add
repnz
call
and
add
add
add
out
(bad)
jmp
inc
add
sub
cmp
add
aaa
add
sbb
add
add
mov
inc
add
xchg
push
add
sub
add
loope
add
test
add
sub
add
aaa
add
add
or
add
add
add
sub
add
add
icebp
(bad)
dec
add
cmp
(bad)
inc
adc
add
push
add
mov
cmc
(bad)
jmp
add
push
add
js
add
jno
add
adc
add
xchg
daa
add
push
inc
add
xchg
or
add
push
add
xchg
xor
add
push
sub
add
pop
add
scas
add
add
add
ds
jmp
cmp
add
mov
add
sahf
adc
add
xor
add
out
(bad)
jmp
add
xchg
push
add
mov
add
mov
add
fsubr
(bad)
(bad)
fiadd
add
das
add
push
sub
add
and
add
sub
add
sbb
add
and
add
cmp
add
xor
add
inc
add
pop
or
add
daa
add
adc
add
mov
add
xor
add
sbb
add
cmp
add
add
xchg
and
add
adc
add
add
add
sbb
add
and
add
add
and
add
dec
cmp
add
jmp
add
and
add
movs
add
test
add
add
add
or
sub
add
adc
add
add
adc
add
(bad)
jmp
add
sbb
add
add
out
pop
add
dec
add
push
daa
add
enter
fdivr
add
xor
add
inc
pop
add
test
inc
add
stc
adc
add
or
add
add
jl
add
imul
pop
and
add
cmp
add
inc
add
pop
cmp
add
add
dec
cmp
add
add
cmp
add
sub
add
add
scas
push
add
sub
add
(bad)
jmp
repz
inc
adc
add
push
add
pop
add
add
xor
add
jp
(bad)
(bad)
mov
repz
call
sldt
or
add
fldenv
add
repz
add
add
movs
sub
add
mov
add
add
(bad)
jmp
add
xchg
and
(bad)
push
and
add
sbb
add
add
add
add
add
cmp
add
in
add
shr
(bad)
jmp
add
fadd
add
rcr
add
add
add
ret
cmp
add
push
add
and
add
movs
or
add
add
sbb
add
adc
add
add
add
sub
add
sbb
add
add
add
and
add
imul
add
out
(bad)
(bad)
jl
add
adc
or
add
adc
add
adc
add
add
add
test
add
pusha
pop
add
fs
add
add
mov
xor
add
add
or
add
adc
add
cmp
inc
add
adc
pop
cs
and
add
add
cdq
cmc
(bad)
call
inc
pop
or
ins
pushf
and
add
cmp
inc
add
dec
add
sub
add
pop
add
add
push
add
add
and
add
dec
jl
sub
add
push
cmp
(bad)
(bad)
cmp
(bad)
jmp
sbb
add
and
add
pop
dec
adc
and
add
add
cmc
inc
add
cmp
jo
xor
jne
add
cmp
cmc
(bad)
call
push
inc
add
pop
adc
adc
adc
pop
pop
rcr
cmp
cmc
(bad)
call
adc
jge
add
add
rol
add
cmp
hlt
(bad)
call
push
adc
pop
adc
sbb
add
dec
jl
sub
add
push
cmp
hlt
(bad)
jmp
cmp
add
and
add
add
push
aaa
add
fild
add
dec
jl
cmp
inc
and
push
jl
sub
add
push
cmp
sub
add
mov
or
add
or
add
dec
add
dec
jl
cmp
push
adc
pop
pop
adc
xchg
pushf
and
ins
hlt
(bad)
(bad)
dec
add
add
add
dec
add
dec
jl
pop
cmp
(bad)
jmp
add
add
addr16
add
add
push
jl
push
cmp
xchg
add
add
xor
add
pop
dec
adc
and
add
add
push
jl
push
cmp
hlt
(bad)
(bad)
dec
add
sbb
add
and
add
add
ins
add
add
and
add
add
cld
repz
(bad)
dec
add
add
retf
add
inc
add
add
and
push
jl
sub
add
push
cmp
shl
(bad)
(bad)
dec
add
cmps
inc
add
and
add
add
data16
add
and
push
jl
sub
add
push
cmp
cmps
repz
jmp
sub
add
and
add
add
push
aaa
add
dec
add
add
mov
(bad)
jmp
scas
add
add
cmp
add
pop
dec
adc
and
add
cmp
add
dec
add
sldt
add
or
add
cmp
(bad)
jmp
mov
cmp
add
and
add
add
inc
inc
add
adc
dec
sub
and
add
and
add
cmp
inc
add
cmp
out
(bad)
call
and
dec
add
add
sub
add
fadd
add
push
adc
pop
sub
add
or
sbb
add
cmp
inc
add
dec
add
or
add
dec
add
cmp
repnz
(bad)
dec
add
adc
add
and
xor
add
pop
pushf
and
add
add
push
jl
sub
add
push
cmp
repnz
(bad)
dec
add
pop
add
add
inc
add
add
sub
add
pop
pushf
and
sahf
repnz
call
dec
sub
dec
and
add
push
jl
sub
add
push
cmp
adc
add
xor
dec
add
or
add
and
add
add
pop
add
add
and
add
add
data16
jmp
iret
add
add
inc
add
add
push
adc
and
add
dec
jl
push
cmp
add
dec
add
or
add
and
dec
add
add
and
add
add
push
jl
push
cmp
repnz
(bad)
dec
add
push
add
add
inc
add
add
dec
add
add
and
add
push
cmp
inc
add
sbb
jno
xchg
pushf
and
add
add
push
jl
cmp
icebp
(bad)
jmp
cld
add
add
push
add
add
push
aaa
add
jnp
add
cmp
icebp
(bad)
jmp
je
add
and
add
pop
dec
aaa
add
fild
add
dec
jl
cmp
fiadd
add
jns
pop
adc
pop
xchg
pushf
and
add
add
push
jl
sub
add
push
cmp
adc
and
add
cmp
add
add
add
and
add
and
add
cmp
(bad)
(bad)
cmp
add
pop
push
cmp
rcl
add
inc
add
adc
stos
add
add
dec
icebp
(bad)
jmp
sub
jg
add
pop
dec
aaa
add
lahf
add
add
push
jl
cmp
add
pop
sub
jns
add
and
add
inc
add
adc
push
add
add
or
(bad)
(bad)
dec
add
adc
add
and
xor
add
pop
pushf
and
add
add
push
jl
sub
add
push
cmp
inc
add
cmp
lock
(bad)
dec
add
or
add
and
and
pushf
and
add
add
push
jl
cmp
or
add
add
add
dec
add
cmp
adc
sgdtd
add
push
jl
push
cmp
es
pushf
cmp
inc
add
dec
jl
cmp
(bad)
(bad)
dec
add
push
add
add
fadd
add
fld
add
and
add
add
push
jl
sub
add
push
cmp
inc
add
cmp
(bad)
(bad)
dec
add
sbb
or
add
cmp
(bad)
call
adc
add
or
push
add
add
out
add
sub
add
push
je
add
add
fisttp
add
adc
jae
add
or
push
add
add
out
add
sub
add
push
adc
add
out
add
adc
push
sub
add
push
je
add
add
fld
add
add
fld
add
add
add
add
jle
add
or
and
add
add
push
jl
pop
cmp
(bad)
adc
retf
xor
add
xchg
add
cmp
or
add
or
add
cmp
inc
add
and
add
add
and
add
add
adc
add
cmp
jae
add
or
push
push
mov
add
and
add
add
or
add
add
add
cmp
inc
add
and
add
add
and
add
add
clc
inc
add
dec
add
add
add
and
add
add
or
add
pop
pushf
and
add
dec
jl
pop
cmp
test
add
cmp
inc
add
push
ds
add
cmp
out
(bad)
call
imul
add
add
cmps
add
add
push
jl
push
cmp
out
(bad)
call
es
or
sbb
add
dec
jl
pop
cmp
enter
and
add
pop
dec
adc
and
push
jl
push
cmp
or
add
pop
add
add
or
add
cmp
or
add
add
add
and
add
and
add
add
cmp
add
cmp
sbb
inc
add
add
push
aaa
add
xchg
add
add
push
jl
cmp
(bad)
(bad)
cmp
add
sbb
mov
push
jl
cmp
(bad)
jmp
mov
inc
or
add
and
add
add
push
jl
cmp
out
(bad)
call
je
inc
popa
adc
and
and
(bad)
(bad)
cmp
inc
add
sub
add
push
push
call
imul
cmp
(bad)
jmp
lods
add
add
add
add
push
aaa
add
sahf
add
add
push
jl
cmp
in
(bad)
(bad)
dec
add
adc
mov
add
and
add
pop
pushf
and
add
add
enter
dec
add
push
add
add
or
add
cmp
mov
or
add
pop
dec
aaa
add
je
add
cmp
bound
pop
adc
pusha
add
add
xchg
(bad)
jmp
sub
add
and
dec
aaa
add
jmp
add
dec
jl
cmp
je
add
cmp
(bad)
dec
add
sldt
add
or
add
cmp
(bad)
call
or
pop
adc
and
add
dec
jl
sub
add
push
cmp
add
cmp
in
(bad)
(bad)
dec
add
add
add
dec
add
cmp
add
and
add
and
add
add
push
aaa
add
xchg
add
add
push
jl
cmp
in
(bad)
(bad)
dec
add
add
add
dec
add
cmp
in
(bad)
(bad)
dec
add
add
add
cmp
inc
add
and
add
pop
pushf
and
add
add
or
add
scas
add
add
cmp
add
pop
dec
aaa
add
jl
add
cmp
or
cmc
aas
add
adc
test
xchg
in
(bad)
jmp
add
add
cmp
add
pop
dec
aaa
add
mov
add
cmp
or
add
push
add
add
or
add
cmp
(bad)
jmp
mov
add
and
add
add
push
aaa
add
jne
add
dec
jl
push
cmp
(bad)
call
inc
sbb
imul
call
push
jle
add
add
sbb
pop
sub
add
or
or
add
dec
jl
push
cmp
add
and
add
add
sbb
add
pop
dec
aaa
add
imul
jmp
(bad)
dec
add
push
add
add
or
add
cmp
jmp
call
cmp
add
cmp
add
and
add
add
(bad)
jmp
(bad)
dec
add
add
add
dec
add
dec
jl
sub
add
push
cmp
lods
jmp
(bad)
cmp
aas
add
adc
pop
aas
add
and
add
add
pushf
cmp
aas
add
cmp
pop
push
add
adc
out
add
sub
add
push
adc
and
add
cmp
(bad)
(bad)
cmp
add
and
add
add
push
aaa
add
add
jl
cmp
(bad)
dec
add
push
add
add
rol
add
and
add
pop
pushf
and
add
add
push
jl
pop
cmp
jmp
call
inc
cmp
add
pop
ins
pushf
and
add
add
mov
adc
adc
cdq
add
add
push
jl
cmp
jmp
call
push
adc
pop
pop
adc
pop
xchg
pushf
and
add
cmp
jmp
pop
adc
xchg
add
cmp
loop
(bad)
jmp
rcl
add
add
out
add
outs
add
or
test
push
sub
add
push
mov
clc
add
push
jb
add
jo
xor
jmp
add
sub
add
push
outs
add
or
test
push
sub
add
push
mov
stc
add
push
adc
popa
jne
add
add
or
add
adc
inc
add
add
adc
jmp
add
outs
inc
add
or
add
jo
rol
push
cmp
add
adc
jmp
add
jb
add
jo
xor
jmp
stc
add
push
movs
inc
add
add
jae
add
or
add
add
mov
dec
add
add
sub
fadd
add
sub
inc
sbb
add
add
add
in
add
or
loop
add
push
sbb
fadd
add
cmp
add
add
add
add
add
jmp
cli
add
push
push
push
sub
add
push
adc
sub
dec
add
add
sub
fadd
add
adc
sub
dec
add
add
sub
fadd
add
adc
push
push
int
add
adc
sub
add
push
adc
add
fild
add
push
adc
adc
adc
xor
add
push
sub
add
push
cmp
add
add
and
add
add
sub
add
adc
imul
cmp
add
add
and
add
add
push
xor
add
add
loopne
pop
cmp
add
and
add
add
push
xor
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
dec
add
add
add
and
add
cmp
(bad)
(bad)
(bad)
cmp
js
(bad)
add
pop
and
push
xor
add
cmp
aaa
add
add
pop
shl
add
or
pop
shl
add
or
pop
shl
add
or
jge
jmp
add
or
pop
outs
and
add
fld
loopne
pop
(bad)
push
add
add
fld
add
add
push
cmp
add
sti
add
push
and
xchg
call
pop
add
sldt
add
or
add
dec
jl
push
cmp
(bad)
(bad)
dec
add
add
add
and
add
and
add
add
and
add
cmp
(bad)
(bad)
cmp
cmp
add
adc
pop
adc
sbb
add
cmp
add
adc
cmp
cmp
add
dec
jl
sub
add
push
cmp
call
cmp
add
inc
mov
(bad)
jmp
cmp
or
(bad)
(bad)
dec
add
add
add
dec
add
dec
jl
pop
cmp
out
call
push
cmp
cmp
add
pop
sbb
pop
sub
and
add
add
fsub
(bad)
call
jbe
sbb
cmp
jne
ret
add
push
jl
pop
cmp
mov
add
adc
popa
adc
ins
add
add
push
jl
pop
cmp
push
pop
ins
pushf
and
add
dec
jl
cmp
or
add
adc
add
and
add
add
imul
add
and
add
add
addr16
(bad)
dec
add
pop
add
add
fild
add
and
add
pop
pushf
and
add
add
push
out
(bad)
cmp
add
sub
add
push
push
call
imul
dec
jl
cmp
out
(bad)
dec
add
add
or
add
dec
jl
sub
add
push
cmp
out
call
adc
cmp
add
stc
out
jmp
mov
cmp
cmp
add
test
add
cmp
out
(bad)
jle
add
add
aaa
aaa
add
and
push
jl
push
cmp
out
call
cmp
add
add
add
mov
add
pop
gs
and
add
cmp
xchg
add
add
xor
add
pop
dec
aaa
add
into
add
add
xchg
out
(bad)
dec
add
adc
add
dec
add
cmp
(bad)
call
js
imul
and
push
jl
cmp
(bad)
(bad)
dec
add
or
stc
add
add
push
add
add
and
add
cmp
call
jb
imul
fadd
add
cmp
add
adc
add
sub
add
push
outs
add
or
icebp
add
push
adc
repnz
push
cmp
sti
(bad)
jmp
cmp
add
cmp
out
(bad)
dec
add
adc
add
dec
add
dec
jl
push
cmp
in
call
jp
out
add
sub
pop
cmp
xchg
add
and
push
jl
cmp
cmp
add
or
add
add
add
dec
add
dec
jl
cmp
push
adc
pop
adc
xchg
pushf
and
add
add
xchg
in
(bad)
dec
add
adc
add
and
add
add
dec
add
add
cmp
cmp
add
jne
(bad)
(bad)
dec
add
add
add
and
add
and
pushf
and
add
cmp
(bad)
call
cmp
bound
cmp
mov
add
cmp
(bad)
(bad)
dec
add
sbb
add
and
add
and
add
pop
pushf
and
das
in
(bad)
dec
add
add
add
add
sub
add
pop
pushf
and
add
add
or
(bad)
call
ss
adc
and
add
(bad)
in
(bad)
cmp
add
adc
adc
push
xchg
pushf
cmp
add
cmp
in
call
pop
sub
add
or
loop
add
cmp
cmp
add
or
add
dec
jl
cmp
in
(bad)
cmp
sub
and
add
push
sub
add
push
sbb
dec
sub
pop
add
add
cdq
in
call
xor
pop
adc
and
add
cmp
sbb
add
and
add
push
aaa
add
in
add
dec
jl
cmp
cmp
add
add
add
repz
push
sub
add
push
sub
add
push
and
dec
in
(bad)
dec
add
or
add
dec
add
dec
jl
sub
add
push
cmp
or
add
stos
cmp
add
or
add
or
add
and
add
add
dec
add
add
and
push
jl
push
cmp
in
(bad)
dec
add
adc
add
dec
add
cmp
jecxz
(bad)
dec
add
add
add
cmp
add
cmp
add
pop
pushf
and
add
add
push
jl
sub
add
push
cmp
jecxz
(bad)
dec
add
or
add
and
jno
add
pop
pushf
and
add
add
lods
jecxz
call
je
je
mov
add
and
inc
mov
add
push
cmp
and
adc
push
add
cli
xor
push
add
call
add
or
add
push
push
push
push
pop
dec
daa
add
or
add
stos
stos
stos
stos
pop
dec
pop
add
or
add
dec
add
bound
or
add
push
daa
add
or
add
or
or
add
pop
fs
dec
dec
add
or
add
or
dec
add
adc
pusha
dec
add
push
pusha
add
or
add
stos
aaa
add
pop
dec
inc
add
or
add
lock
dec
pusha
add
or
add
dec
add
bound
push
push
add
or
add
or
add
push
cmp
dec
add
or
push
add
pop
bound
or
add
push
gs
or
add
inc
inc
pop
dec
adc
dec
add
pop
dec
gs
or
add
dec
add
bound
push
push
add
or
add
or
add
push
and
dec
add
or
add
sbb
dec
cmp
dec
add
or
add
push
cmp
dec
add
or
add
fs
dec
cmp
dec
add
or
add
push
cmp
dec
add
or
add
cmp
dec
add
or
add
push
cmp
dec
add
or
dec
add
or
add
or
add
push
cmp
dec
add
ins
pop
adc
add
add
add
(bad)
call
add
pop
je
and
add
add
cld
loope
(bad)
cmp
jmp
dec
add
add
add
add
push
jl
cmp
loope
jmp
in
add
add
dec
add
add
push
aaa
add
rol
add
dec
jl
sub
add
push
cmp
or
add
add
add
and
add
and
add
pop
pushf
and
add
add
push
jl
cmp
or
add
or
add
and
xor
add
pop
pushf
and
add
dec
jl
cmp
add
cmp
(bad)
call
cmp
jae
add
or
sub
and
push
jl
cmp
add
adc
imul
adc
or
add
dec
jl
sub
add
push
cmp
cmc
(bad)
(bad)
cmp
loope
(bad)
dec
add
or
add
dec
add
dec
jl
pop
cmp
loope
(bad)
dec
add
fidiv
add
add
adc
add
pop
pushf
and
add
add
out
loopne
jmp
enter
and
add
pop
dec
aaa
add
and
add
cmp
loopne
call
push
adc
pop
adc
sbb
add
dec
jl
sub
add
push
cmp
icebp
(bad)
(bad)
cmp
add
add
sbb
add
pop
dec
aaa
add
out
add
add
push
jl
push
cmp
add
sub
inc
add
add
add
xchg
(bad)
call
cmp
jae
add
or
sub
and
add
cmp
(bad)
(bad)
cmp
push
rcl
xor
push
pop
pop
loopne
dec
cmp
xor
push
and
add
add
push
jl
push
cmp
(bad)
(bad)
dec
add
sub
add
add
and
add
pop
pushf
and
add
dec
jl
sub
add
push
cmp
loopne
call
add
xor
xor
add
add
(bad)
(bad)
call
adc
aas
add
add
push
jl
push
cmp
(bad)
(bad)
dec
add
or
add
and
cmp
add
pop
pushf
and
add
cmp
(bad)
(bad)
cmp
xor
add
push
add
add
push
aaa
add
sbb
add
dec
jl
cmp
pop
add
add
add
dec
add
dec
jl
pop
cmp
pop
add
add
sbb
add
pop
dec
aaa
add
push
add
add
jp
(bad)
(bad)
dec
add
cwde
xor
add
or
add
dec
jl
sub
add
push
cmp
(bad)
(bad)
dec
add
push
add
add
mov
add
and
add
add
cmp
add
cmp
(bad)
call
adc
add
add
sub
or
add
and
dec
adc
and
xor
add
jne
xor
cmp
add
mov
fadd
add
and
add
dec
jl
push
cmp
fdivrp
jmp
add
add
and
add
pop
dec
aaa
add
inc
add
add
push
jl
push
cmp
fdivrp
(bad)
dec
add
or
add
dec
add
cmp
adc
out
add
sub
add
push
adc
push
add
add
push
jl
cmp
adc
add
sub
add
push
outs
add
or
icebp
add
push
sub
add
push
mov
cmp
xor
add
xor
add
dec
jl
pop
cmp
(bad)
call
inc
push
bound
inc
and
add
add
push
jl
pop
cmp
or
add
pop
add
add
or
add
dec
jl
sub
add
push
cmp
fdivrp
call
push
add
add
push
jl
pop
cmp
fdivrp
call
adc
and
push
jl
sub
add
push
cmp
jae
add
and
add
and
add
add
push
adc
and
add
add
push
jl
sub
add
push
cmp
(bad)
jmp
mov
cmp
add
and
add
add
push
jl
cmp
(bad)
(bad)
dec
add
or
add
dec
add
dec
jl
sub
add
push
cmp
(bad)
(bad)
cmp
xor
add
adc
add
pop
dec
aaa
add
jbe
add
cmp
or
add
or
add
dec
add
dec
jl
push
cmp
(bad)
call
inc
sbb
jb
and
add
add
push
jl
pop
cmp
(bad)
jmp
rol
add
inc
add
add
push
aaa
add
fiadd
add
cmp
(bad)
dec
add
add
add
dec
add
dec
jl
cmp
add
push
adc
push
add
add
pop
(bad)
jmp
rol
add
inc
add
add
push
aaa
add
sahf
add
add
push
jl
sub
add
push
cmp
fdivr
call
ins
pop
pop
adc
add
add
push
jl
cmp
fdivr
jmp
cmp
add
and
add
push
adc
and
add
add
push
jl
cmp
fdivr
(bad)
dec
add
or
add
dec
add
dec
jl
cmp
sbb
push
and
add
add
cwde
fdivr
(bad)
dec
add
sbb
sbb
add
and
add
add
and
sbb
add
add
dec
add
add
push
aaa
add
sbb
add
cmp
(bad)
call
ja
pop
adc
sbb
add
cmp
xor
add
or
add
or
pop
add
add
inc
add
add
and
add
add
push
jl
cmp
fdivr
(bad)
dec
add
mov
add
dec
add
dec
jl
sub
add
push
cmp
fdivr
(bad)
dec
add
or
or
add
cmp
(bad)
(bad)
dec
add
adc
or
add
dec
jl
cmp
add
or
add
or
or
add
dec
jl
sub
add
push
cmp
pop
mov
pop
adc
or
add
dec
jl
push
cmp
add
dec
add
push
add
add
jnp
add
and
add
pop
pushf
and
add
add
push
jl
sub
add
push
cmp
jmp
jecxz
add
and
add
pop
dec
adc
and
add
cmp
(bad)
(bad)
cmp
xor
add
xor
add
pop
dec
adc
and
add
cmp
(bad)
jmp
mov
dec
add
add
push
aaa
add
out
add
dec
jl
cmp
xor
add
out
add
and
add
push
aaa
add
xor
add
dec
jl
cmp
(bad)
call
add
push
adc
add
add
sub
add
push
cmp
out
jmp
and
icebp
(bad)
jmp
mov
add
and
add
pop
dec
aaa
add
int3
add
add
fcomp
(bad)
jmp
xchg
add
add
xor
add
pop
dec
aaa
add
xor
add
push
jl
sub
add
push
cmp
(bad)
(bad)
dec
add
add
add
and
add
add
add
add
pop
pushf
and
add
add
mov
(bad)
call
imul
cmp
add
add
add
push
jl
cmp
(bad)
dec
add
sldt
add
xchg
add
and
add
pop
pushf
and
add
add
pop
(bad)
(bad)
dec
add
or
add
dec
add
dec
jl
sub
add
push
cmp
(bad)
(bad)
dec
add
add
add
dec
add
cmp
(bad)
(bad)
dec
add
out
add
dec
add
cmp
(bad)
call
adc
and
add
dec
jl
cmp
fcos
(bad)
cmp
das
add
push
jge
add
add
inc
add
add
loop
(bad)
(bad)
dec
add
add
add
and
add
add
pop
add
add
cmp
ret
fcos
call
inc
pop
pop
ins
pushf
and
push
jl
pop
cmp
or
add
sldt
add
add
add
add
and
add
add
xchg
(bad)
call
push
adc
add
inc
pop
pop
adc
and
add
add
push
jl
cmp
(bad)
(bad)
dec
add
push
add
add
mov
add
and
pushf
and
add
add
inc
fcos
(bad)
dec
add
add
or
add
cmp
fcos
(bad)
jle
add
add
sbb
add
push
call
imul
cmp
fcos
(bad)
dec
add
sbb
add
and
add
add
dec
add
add
and
repz
call
push
adc
sbb
adc
sbb
pushf
and
add
dec
jl
cmp
fdivr
jmp
dec
add
add
and
add
pop
dec
adc
and
add
add
push
jl
sub
add
push
cmp
mov
(bad)
call
es
movups
sbb
add
add
mov
or
add
or
add
dec
add
cmp
cmp
add
and
add
add
push
aaa
add
and
add
cmp
(bad)
call
cmp
jae
add
or
push
sub
mov
push
jl
cmp
add
adc
adc
pop
adc
sbb
add
dec
jl
push
cmp
(bad)
call
sub
add
add
cmp
fdivr
call
push
adc
sbb
daa
add
sbb
add
dec
jl
cmp
fdivr
(bad)
dec
add
sldt
add
or
add
dec
jl
cmp
xlat
(bad)
(bad)
dec
add
add
add
dec
add
cmp
xlat
(bad)
call
bound
push
aas
out
push
add
cmp
sub
jl
sub
add
push
cmp
(bad)
(bad)
cmp
add
add
push
fisubr
cmp
sub
add
push
and
add
add
cwde
xlat
(bad)
(bad)
dec
add
adc
or
add
cmp
mov
add
and
add
add
push
aaa
add
and
push
jl
cmp
(bad)
call
add
push
adc
and
add
add
pop
xlat
(bad)
(bad)
dec
add
push
add
add
cmp
push
add
add
and
add
add
xor
(bad)
(bad)
cmp
add
add
jmp
push
add
and
add
cmp
xlat
(bad)
jmp
add
add
jno
add
pop
dec
aaa
add
push
add
or
add
add
add
dec
add
cmp
(bad)
(bad)
(bad)
jle
add
add
rol
add
sub
add
push
adc
and
add
dec
jl
pop
cmp
(bad)
(bad)
(bad)
dec
add
add
add
and
xor
add
pop
pushf
and
add
add
push
jl
push
cmp
or
add
add
add
and
add
and
add
pop
pushf
and
add
add
push
jl
cmp
or
add
adc
add
dec
add
cmp
mov
add
and
add
add
push
adc
and
add
cmp
(bad)
call
add
push
adc
call
add
dec
add
add
add
dec
add
cmp
(bad)
(bad)
(bad)
dec
add
adc
or
add
dec
jl
push
cmp
(bad)
(bad)
call
jp
out
add
sub
add
push
push
adc
jbe
add
dec
jl
pop
cmp
aad
call
adc
outs
add
add
push
jl
sub
add
push
cmp
aad
call
inc
sbb
jb
and
add
dec
jl
cmp
aad
jmp
mov
add
add
push
aaa
add
jno
add
dec
jl
sub
add
push
cmp
sti
(bad)
(bad)
cmp
or
add
push
add
add
or
add
dec
jl
cmp
(bad)
call
add
push
push
push
int
add
and
add
add
push
jl
cmp
(bad)
call
push
adc
sbb
xchg
pushf
and
add
dec
jl
push
cmp
(bad)
(bad)
dec
add
adc
add
and
add
inc
add
add
and
push
jl
sub
add
push
cmp
aad
call
add
add
int3
add
push
sub
add
push
imul
adc
mov
add
cmp
aam
jmp
cmc
add
add
push
add
add
push
adc
and
add
dec
jl
sub
add
push
cmp
add
cmp
add
dec
add
or
add
dec
add
cmp
aam
call
jbe
fild
add
and
add
add
test
add
push
and
push
jl
push
cmp
adc
lods
add
add
adc
add
and
add
and
add
add
push
aaa
add
pop
add
add
jne
(bad)
(bad)
dec
add
sbb
add
dec
add
dec
jl
cmp
(bad)
call
aas
cmp
sar
jmp
pop
add
add
inc
aam
(bad)
cmp
add
adc
dec
pop
cmp
sub
add
fld
add
dec
jl
sub
add
push
cmp
(bad)
cmp
pop
mov
pop
adc
movs
add
add
push
jl
cmp
aam
(bad)
jle
add
or
inc
mov
add
add
pop
inc
sub
add
cmp
add
add
push
jl
push
cmp
sar
(bad)
dec
add
add
add
and
add
and
add
add
and
add
add
mov
or
add
add
add
dec
add
cmp
or
add
push
add
add
or
add
dec
jl
cmp
push
adc
adc
push
xchg
pushf
and
add
add
je
(bad)
(bad)
dec
add
jb
mov
add
cmp
jmp
scas
add
add
cmp
add
pop
dec
aaa
add
mov
add
dec
jl
cmp
(bad)
(bad)
cmp
sub
add
jmp
dec
aaa
add
imul
add
push
jl
cmp
sar
call
pop
sub
add
or
cli
add
push
adc
and
push
jl
cmp
sar
call
jbe
fiadd
add
adc
and
add
(bad)
call
adc
loope
add
cmp
sar
call
sub
add
push
add
cmp
sar
(bad)
dec
add
or
add
dec
add
cmp
sar
(bad)
dec
add
add
add
dec
add
cmp
add
adc
adc
push
push
xchg
pushf
and
add
cmp
add
adc
adc
sbb
sub
add
xchg
pushf
and
adc
call
push
adc
sbb
jno
xchg
pushf
and
add
add
push
jl
sub
add
push
cmp
add
adc
adc
sbb
sub
xchg
pushf
cmp
sub
add
push
jl
cmp
(bad)
call
adc
add
cmp
sub
add
add
or
(bad)
add
push
sub
add
push
push
ds
out
jmp
pop
add
add
push
jl
cmp
sar
jmp
xchg
add
add
daa
add
add
push
aaa
add
pop
add
add
jmp
add
dec
add
add
add
and
add
add
push
add
add
and
add
dec
jl
cmp
sub
add
je
adc
jecxz
add
cmp
sar
jmp
mov
cmp
dec
aaa
add
push
add
add
push
jl
cmp
push
adc
fld
add
dec
jl
cmp
mov
add
cmp
inc
push
cmp
cmp
xchg
(bad)
(bad)
dec
add
add
add
dec
add
cmp
(bad)
call
push
adc
adc
xchg
pushf
and
add
dec
jl
cmp
and
(bad)
(bad)
cmp
(bad)
(bad)
dec
add
or
add
and
add
add
dec
add
add
and
add
add
push
jl
push
cmp
push
adc
and
add
add
sbb
(bad)
jmp
xor
add
and
add
add
push
aaa
add
adc
add
cmp
sar
(bad)
cmp
sub
add
push
add
add
push
aaa
add
mov
push
jl
sub
add
push
cmp
sar
jmp
xchg
add
add
adc
add
pop
dec
aaa
add
scas
add
add
retf
call
pop
adc
jle
(bad)
jmp
jg
add
dec
jl
cmp
pop
sbb
jo
mov
add
dec
jl
sub
add
push
cmp
or
add
pop
add
add
xchg
add
and
add
pop
pushf
and
add
push
jl
cmp
(bad)
jmp
test
cmp
add
pop
dec
adc
and
add
dec
jl
sub
add
push
cmp
(bad)
jmp
inc
add
add
or
add
pop
dec
aaa
add
inc
add
dec
jl
sub
add
push
cmp
sar
jmp
mov
add
and
add
add
push
jl
push
cmp
sar
call
and
cmp
add
adc
xchg
add
es
add
add
dec
daa
add
adc
dec
daa
add
and
push
jl
cmp
iret
(bad)
jmp
movs
add
add
add
add
push
adc
and
ror
(bad)
(bad)
dec
add
add
add
dec
add
dec
jl
pop
cmp
or
add
add
add
dec
add
dec
jl
cmp
or
imul
add
and
add
add
push
jl
pop
cmp
inc
add
add
repz
push
cmp
add
sub
add
push
and
add
cmp
(bad)
(bad)
dec
add
push
add
add
or
add
cmp
adc
dec
add
add
or
add
dec
jl
push
cmp
fs
add
push
push
jp
add
add
and
or
add
nop
add
and
xor
add
pop
pushf
and
add
add
push
iret
(bad)
(bad)
dec
add
or
add
dec
add
dec
jl
push
cmp
into
(bad)
call
sub
add
push
sub
add
push
and
add
add
push
jl
pop
cmp
into
(bad)
(bad)
dec
add
sbb
add
and
add
add
jnp
add
pop
pushf
and
add
cmp
es
jle
add
or
jmp
add
and
add
cmp
push
push
test
add
and
add
add
jnp
(bad)
(bad)
dec
add
adc
add
dec
add
cmp
(bad)
jmp
arpl
add
and
add
pop
dec
adc
and
push
jl
sub
add
push
cmp
es
or
add
pushf
and
add
add
push
jl
cmp
push
into
(bad)
(bad)
dec
add
sbb
add
dec
add
dec
jl
cmp
or
add
add
add
dec
add
cmp
int
call
push
pop
sub
loope
add
sub
sub
iret
add
add
ror
(bad)
(bad)
dec
add
push
add
add
test
add
and
add
pop
pushf
and
push
jl
cmp
(bad)
and
add
or
add
add
xchg
int
(bad)
cmp
add
sbb
arpl
cmp
or
add
push
add
add
or
add
cmp
(bad)
(bad)
dec
add
pop
add
add
push
add
add
jno
add
pop
pushf
and
add
add
inc
int
(bad)
dec
add
or
add
and
add
add
dec
add
add
and
add
add
push
jl
sub
add
push
cmp
(bad)
(bad)
cmp
int
(bad)
cmp
and
add
ds
xlat
(bad)
jmp
sbb
add
cmp
int
(bad)
dec
add
mov
xchg
add
add
mov
pushf
and
mov
push
adc
sbb
xchg
pushf
and
push
jl
sub
add
push
cmp
int3
(bad)
jmp
sub
add
and
add
add
push
aaa
add
inc
add
add
push
jl
cmp
or
add
sbb
add
dec
add
dec
jl
push
cmp
inc
pop
pop
cmp
add
and
add
dec
jl
sub
add
push
cmp
(bad)
call
cmp
jae
add
or
jle
add
or
scas
add
push
and
add
cmp
(bad)
jmp
daa
add
add
js
add
pop
dec
adc
cmp
and
add
cmp
(bad)
call
cmp
and
add
clc
add
add
and
or
add
add
add
dec
add
cmp
and
add
mov
add
and
add
add
push
aaa
add
push
add
add
push
jl
sub
add
push
cmp
and
add
in
retf
(bad)
call
cmp
cmp
and
add
outs
add
add
xlat
retf
(bad)
call
outs
and
test
enter
outs
add
add
ror
jmp
movs
add
add
add
add
push
aaa
add
sub
add
dec
jl
pop
cmp
ja
add
adc
and
add
add
xchg
retf
(bad)
(bad)
jle
add
or
pop
and
retf
(bad)
call
imul
adc
cld
add
add
outs
retf
(bad)
(bad)
dec
add
pop
add
add
or
add
dec
jl
sub
add
push
cmp
(bad)
(bad)
cmp
call
push
adc
sub
xchg
pushf
and
add
dec
jl
sub
add
push
cmp
retf
(bad)
jmp
and
add
cmp
add
dec
dec
add
pop
add
cmp
(bad)
(bad)
dec
add
sldt
add
or
add
dec
jl
cmp
retf
sub
cmp
or
add
dec
jl
cmp
retf
jle
add
add
push
and
add
pop
cmp
and
add
push
jl
sub
add
push
cmp
push
adc
add
add
push
jl
sub
add
push
cmp
cs
cmp
and
add
add
and
add
cmp
ins
cmp
and
add
add
and
add
push
jl
cmp
and
add
add
add
jecxz
add
sub
add
push
cmp
(bad)
cmp
and
add
pop
retf
push
adc
pop
add
add
push
jl
push
cmp
(bad)
(bad)
dec
add
sbb
add
and
sub
add
pop
pushf
and
add
cmp
or
add
pop
add
add
movs
add
add
add
add
and
add
cmp
retf
dec
add
add
fwait
add
add
cmp
pushf
and
add
cmp
leave
(bad)
(bad)
dec
add
sbb
add
and
sub
pushf
and
add
add
ror
(bad)
(bad)
dec
add
sbb
add
and
add
and
add
pop
pushf
and
add
cmp
sub
and
sub
fadd
add
sub
add
push
sbb
dec
sub
adc
add
dec
jl
sub
add
push
cmp
(bad)
call
inc
sbb
je
and
add
add
(bad)
and
add
out
add
and
add
pop
dec
adc
and
push
leave
(bad)
call
add
add
or
add
inc
leave
(bad)
(bad)
dec
add
frstor
add
dec
add
dec
jl
push
cmp
and
add
jne
fld
add
and
push
jl
cmp
leave
(bad)
(bad)
dec
add
push
add
add
mov
add
and
add
add
and
add
cmp
enter
lea
add
cmp
mov
loopne
(bad)
call
and
pop
adc
and
push
jl
pop
cmp
enter
add
add
arpl
add
pop
dec
adc
and
ja
add
push
loopne
push
cmp
add
dec
jl
cmp
adc
sbb
adc
sbb
pushf
and
add
add
push
jl
cmp
pop
and
add
fadd
add
adc
and
add
dec
jl
sub
add
push
cmp
(bad)
cmp
add
and
add
add
push
adc
and
push
jl
cmp
(bad)
jmp
push
add
add
dec
add
add
push
aaa
add
test
add
dec
jl
cmp
enter
adc
add
pop
or
sbb
add
dec
jl
sub
add
push
cmp
enter
or
add
or
add
and
imul
add
and
add
dec
jl
sub
add
push
cmp
and
add
faddp
(bad)
jmp
icebp
add
add
push
add
add
push
aaa
add
adc
add
cmp
(bad)
(bad)
call
push
cmp
pop
adc
pop
xchg
pushf
and
(bad)
(bad)
(bad)
cmp
adc
and
xchg
(bad)
(bad)
jmp
jbe
add
and
add
add
push
aaa
add
popf
add
add
xchg
(bad)
(bad)
dec
add
jg
add
and
add
and
add
and
add
dec
jl
sub
add
push
cmp
add
cmp
(bad)
(bad)
dec
add
add
add
and
xor
add
pop
pushf
and
add
xor
(bad)
jmp
inc
add
add
add
add
push
aaa
add
add
add
push
jl
cmp
(bad)
(bad)
(bad)
cmp
add
sub
mov
add
jb
add
jo
or
jp
add
jle
add
or
mov
aas
and
add
cmp
(bad)
(bad)
(bad)
dec
add
push
add
add
or
add
cmp
(bad)
(bad)
(bad)
cmp
pop
add
and
add
add
push
aaa
add
ins
add
add
mov
or
add
adc
add
dec
add
dec
jl
cmp
add
cmp
pop
add
pushf
and
push
jl
cmp
dec
add
sbb
add
and
aas
add
add
and
add
add
push
jl
sub
add
push
cmp
push
(bad)
(bad)
call
push
push
pop
adc
js
add
cmp
(bad)
jmp
call
inc
cmp
add
adc
inc
add
add
sub
(bad)
(bad)
dec
add
push
add
add
xor
add
and
add
pop
pushf
and
add
add
push
jl
pop
cmp
(bad)
(bad)
call
or
sub
add
push
cmp
std
(bad)
adc
jo
pop
adc
add
add
pop
pop
sbb
cmp
pop
add
dec
jl
pop
cmp
(bad)
dec
add
add
add
and
add
and
add
pop
pushf
and
add
mov
(bad)
call
cmp
jae
add
or
sub
mov
mov
or
add
adc
add
dec
add
dec
jl
push
cmp
imul
jbe
(bad)
jmp
call
(bad)
(bad)
dec
add
or
add
and
add
add
add
add
pop
pushf
and
add
add
dec
(bad)
dec
add
adc
add
and
add
and
add
add
and
add
add
ss
adc
pop
push
and
es
and
add
add
inc
add
add
push
aaa
add
or
push
jl
cmp
or
add
or
add
and
add
and
add
pop
pushf
cmp
push
add
cmp
(bad)
(bad)
call
or
jns
add
add
push
jl
cmp
(bad)
(bad)
jmp
xor
add
and
add
pop
dec
aaa
add
push
add
cmp
or
add
push
add
add
imul
add
sub
add
pop
pushf
and
add
cmp
jp
out
add
adc
sub
add
push
cmp
sbb
(bad)
(bad)
call
add
push
sub
add
push
adc
push
sub
add
push
pop
push
cmp
adc
add
sti
add
add
push
jl
cmp
(bad)
call
cmp
cmp
sub
add
dec
jl
sub
add
push
cmp
ss
(bad)
(bad)
dec
add
sbb
add
dec
add
cmp
(bad)
(bad)
call
push
jp
xor
add
dec
jl
cmp
(bad)
jmp
fwait
add
add
xor
add
pop
dec
aaa
add
imul
imul
aaa
fdivr
jmp
xor
add
dec
jl
cmp
ret
(bad)
call
inc
sbb
push
sbb
xchg
add
cmp
ret
(bad)
call
jle
and
inc
add
add
push
jl
cmp
pop
add
add
add
dec
add
dec
jl
sub
add
push
cmp
or
add
adc
add
and
add
and
add
pop
pushf
and
add
cmp
(bad)
(bad)
dec
add
pop
add
add
lahf
add
add
dec
add
add
and
add
add
pop
ret
(bad)
call
add
push
pop
pop
jae
add
or
and
push
jl
push
cmp
or
add
add
or
add
cmp
ret
(bad)
(bad)
dec
add
pop
add
add
or
add
dec
jl
cmp
cli
ret
cmp
adc
adc
mov
mov
add
and
add
add
push
jl
pop
cmp
ret
and
add
and
add
add
push
adc
and
push
jl
cmp
or
add
or
add
dec
add
cmp
jae
mov
cmp
add
push
adc
add
add
adc
mov
xchg
add
add
xor
add
add
dec
inc
add
movs
add
add
xor
mov
dec
sub
add
push
cmp
add
add
add
add
add
adc
xor
mov
add
adc
imul
adc
sub
add
push
push
cmps
add
add
sldt
add
and
add
add
push
inc
add
push
add
add
adc
add
sub
add
push
outs
add
or
icebp
add
push
adc
repnz
push
cmp
add
push
add
add
push
inc
add
cmp
adc
xor
mov
add
adc
imul
aas
mov
add
add
add
add
dec
inc
add
or
add
add
add
(bad)
(bad)
call
push
call
push
add
add
sub
add
push
cmp
(bad)
jmp
and
add
cmp
(bad)
(bad)
(bad)
fnsave
arpl
leave
add
push
cmp
(bad)
(bad)
(bad)
fstp
add
add
arpl
add
add
outs
adc
pop
add
add
outs
sub
add
push
(bad)
push
add
add
fld
add
add
jae
mov
adc
mov
arpl
mov
arpl
mov
xchg
add
add
and
add
add
sub
add
push
cmp
add
and
add
add
inc
add
add
and
mov
add
adc
add
add
dec
push
add
cmp
add
push
adc
add
and
add
adc
jmp
inc
add
add
inc
add
add
sub
add
and
add
add
push
push
add
or
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
push
add
add
scas
(bad)
(bad)
jmp
and
add
cmp
(bad)
(bad)
(bad)
cmp
add
adc
leave
add
push
cmp
(bad)
(bad)
fstp
add
add
arpl
add
add
outs
adc
pop
add
add
outs
sub
add
push
(bad)
push
add
add
fld
add
add
inc
add
add
call
add
add
add
cmp
in
(bad)
(bad)
cmp
(bad)
jmp
dec
add
add
push
add
add
push
adc
and
add
dec
jl
cmp
sar
dec
add
or
or
add
cmp
sar
jb
add
jo
sub
sub
push
or
add
arpl
add
dec
jl
pop
cmp
mov
adc
lar
add
jmp
(bad)
call
jb
adc
imul
and
add
add
push
jl
push
cmp
mov
sbb
add
pop
add
add
out
add
sub
add
push
cmp
add
cmp
add
sbb
add
dec
jl
push
cmp
inc
push
cmp
add
dec
jl
cmp
jb
xor
pop
loopne
pop
sbb
jb
xor
pop
loopne
pop
adc
adc
sbb
add
pop
loopne
push
bound
and
add
adc
loopne
pusha
adc
add
push
jl
push
cmp
(bad)
jmp
jmp
add
and
add
pop
dec
aaa
add
aaa
add
add
xor
add
push
sub
and
add
add
push
jl
sub
add
push
cmp
sbb
add
or
sbb
add
push
and
push
jl
sub
add
push
cmp
mov
add
add
dec
add
add
push
adc
and
add
dec
jl
push
cmp
mov
push
sub
daa
add
add
fwait
sbb
add
adc
jns
sub
add
dec
jl
cmp
cdq
add
add
xor
add
pop
dec
aaa
add
in
add
add
push
jl
push
cmp
popa
add
add
inc
add
add
push
adc
cmp
add
cmp
add
adc
aas
stc
or
add
and
push
jl
cmp
(bad)
call
push
adc
sbb
adc
xchg
pushf
and
add
add
push
jl
cmp
add
dec
add
add
add
and
cmp
pushf
and
sub
(bad)
(bad)
dec
add
sbb
add
dec
add
cmp
sbb
add
or
add
adc
add
dec
add
dec
jl
pop
cmp
sbb
add
add
in
add
push
adc
add
add
fdivr
adc
out
add
add
push
jl
cmp
mov
dec
add
adc
add
dec
add
cmp
or
add
or
add
and
add
and
add
add
and
add
add
push
jl
sub
add
push
cmp
mov
pop
add
or
add
dec
add
cmp
(bad)
call
pop
cmp
lea
add
cmp
(bad)
cmp
sti
add
push
and
add
add
push
mov
push
adc
mov
rol
add
and
add
add
push
jl
cmp
mov
add
add
inc
add
add
push
aaa
add
sbb
add
cmp
aaa
add
add
sub
add
pop
dec
adc
cmp
add
cmp
inc
pop
add
and
add
cmp
or
add
add
add
dec
add
dec
jl
pop
cmp
mov
add
add
or
add
pop
dec
aaa
add
pop
add
add
mov
pop
adc
sbb
xchg
cmp
add
bound
pop
adc
sbb
xchg
pop
adc
adc
not
add
pop
pop
loopne
push
bound
pop
cmp
push
add
loopne
pusha
adc
inc
add
add
cmp
and
add
add
or
add
dec
jl
cmp
(bad)
call
adc
mov
push
jl
cmp
(bad)
jmp
xchg
add
add
xor
add
pop
dec
adc
and
add
add
cmp
fadd
add
adc
cmp
lea
add
cmp
mov
add
add
in
add
or
loop
add
cmp
add
movs
add
add
sti
mov
inc
and
push
jl
sub
add
push
cmp
add
dec
add
fs
add
and
or
add
pop
pushf
and
add
cmp
mov
add
add
pop
add
add
push
adc
and
add
dec
jl
cmp
push
add
cmp
jne
cmp
add
and
add
add
xchg
mov
dec
add
adc
add
and
add
add
dec
add
add
and
push
jl
cmp
push
add
cmp
(bad)
(bad)
dec
add
sbb
add
dec
add
dec
jl
push
cmp
(bad)
(bad)
dec
add
add
add
dec
add
dec
jl
sub
add
push
cmp
sub
(bad)
call
push
adc
pop
adc
sbb
add
cmp
mov
dec
add
add
add
dec
add
cmp
mov
pop
pop
adc
and
add
add
push
jl
cmp
or
add
add
add
dec
add
dec
jl
pop
cmp
mov
adc
pop
pop
cmp
add
pop
xchg
pushf
and
add
add
push
jl
cmp
or
add
or
add
dec
add
cmp
add
cmp
add
sar
jmp
ins
add
add
push
jl
sub
add
push
cmp
(bad)
cmp
(bad)
call
dec
sub
dec
and
add
dec
jl
sub
add
push
cmp
add
cmp
call
push
jl
add
jae
add
push
xor
add
and
add
dec
jl
push
cmp
(bad)
(bad)
dec
add
add
add
dec
add
dec
jl
pop
cmp
mov
add
add
fist
add
add
or
(bad)
add
push
cmp
adc
add
cmp
add
dec
jl
pop
cmp
adc
add
or
add
or
add
dec
add
cmp
mov
add
add
aas
add
add
push
aaa
add
scas
adc
add
push
jl
cmp
(bad)
(bad)
cmp
inc
sbb
cs
and
push
jl
sub
add
push
cmp
or
add
adc
add
and
add
and
add
and
add
dec
jl
sub
add
push
cmp
(bad)
(bad)
dec
add
adc
add
and
add
add
jp
add
pop
pushf
and
add
cmp
(bad)
cmp
jb
ins
adc
ins
xchg
adc
adc
rcr
cmp
(bad)
(bad)
cmp
adc
add
pop
outs
pushf
and
add
cmp
mov
dec
add
sbb
add
dec
add
cmp
mov
add
add
jae
add
pop
dec
aaa
add
cmps
add
add
call
or
(bad)
call
push
sub
add
or
bound
pop
push
jae
add
or
xlat
adc
add
fadd
add
sub
add
push
and
add
cmp
mov
pop
add
or
add
and
cmp
add
pop
pushf
and
add
add
cdq
mov
pop
pop
cmp
enter
dec
jl
pop
cmp
inc
add
adc
add
add
js
(bad)
call
sbb
adc
and
add
add
pop
mov
pop
add
push
add
add
or
add
dec
jl
push
cmp
(bad)
(bad)
dec
add
push
add
add
or
add
dec
jl
sub
add
push
cmp
(bad)
(bad)
cmp
mov
adc
add
pop
add
add
push
aaa
add
sbb
add
cmp
mov
add
add
sbb
dec
aaa
add
xchg
add
add
icebp
mov
(bad)
cmp
adc
add
push
add
add
push
adc
and
shl
pop
add
push
add
add
or
add
dec
jl
cmp
adc
cli
add
push
adc
in
add
dec
jl
cmp
inc
pop
pop
jae
and
add
cmp
or
add
adc
add
dec
add
dec
jl
sub
add
push
cmp
(bad)
(bad)
cmp
lods
add
add
inc
add
add
push
aaa
add
push
add
add
push
jl
pop
cmp
(bad)
(bad)
cmp
add
adc
mov
xchg
add
add
sub
add
add
sub
add
push
cmp
add
add
and
add
add
push
push
add
cmp
sub
mov
rol
push
jb
add
jo
rol
push
cmp
mov
and
push
add
add
adc
pop
sub
add
push
cmp
add
add
add
add
dec
push
add
add
add
cmp
add
add
add
add
or
add
dec
push
add
add
add
cmp
add
add
push
and
add
and
inc
add
jae
add
or
cmp
add
add
dec
push
add
or
add
add
add
(bad)
jmp
dec
(bad)
call
add
add
add
add
add
scas
(bad)
(bad)
push
inc
add
add
leave
(bad)
(bad)
call
adc
ds
add
push
cmp
add
and
add
add
test
sub
ret
push
sub
add
push
adc
sub
add
push
sub
add
push
adc
sub
add
push
sub
add
push
adc
sub
add
push
sub
add
push
jae
add
or
adc
push
add
add
jo
(bad)
call
push
and
add
and
add
add
or
pop
and
add
add
push
push
add
dec
(bad)
(bad)
(bad)
cmp
add
adc
leave
add
push
cmp
sbb
add
adc
add
add
outs
adc
pop
add
add
outs
sub
add
push
fdivr
jmp
add
retf
add
push
jae
add
or
add
add
push
jl
cmp
or
add
add
or
add
cmp
(bad)
call
push
adc
sbb
push
sbb
add
dec
jl
pop
cmp
(bad)
dec
add
sbb
add
dec
add
dec
jl
cmp
push
mov
(bad)
cmp
jmp
cli
add
push
adc
cmp
push
jl
push
cmp
mov
(bad)
dec
add
adc
add
dec
add
cmp
mov
jmp
ins
add
add
dec
add
add
push
aaa
add
scas
add
add
out
(bad)
jmp
in
add
add
dec
add
add
push
aaa
add
inc
add
add
int
(bad)
jmp
mov
add
add
push
aaa
add
add
mov
(bad)
jmp
adc
add
and
add
add
push
adc
cmp
adc
add
mov
or
add
push
add
add
add
add
and
add
pop
pushf
and
add
add
test
add
and
add
pop
dec
aaa
add
cmp
add
cmp
(bad)
(bad)
dec
add
or
add
cmp
sldt
and
add
add
and
add
dec
mov
jmp
das
add
add
sbb
add
pop
dec
aaa
add
rol
add
xor
add
test
mov
add
and
pushf
and
add
add
or
(bad)
call
cmp
push
and
add
add
push
mov
(bad)
dec
add
pop
add
add
or
add
dec
jl
cmp
add
cmp
add
cmp
add
and
add
and
add
add
push
aaa
add
add
add
mov
or
add
add
add
and
sub
add
pop
pushf
and
dec
sldt
and
add
add
sub
add
pop
dec
aaa
add
xchg
add
add
(bad)
mov
call
or
cmp
add
adc
jo
add
dec
jl
cmp
(bad)
cmp
lods
(bad)
call
adc
add
cmp
add
outs
add
or
aam
add
push
call
imul
dec
jl
pop
cmp
(bad)
jmp
xor
and
add
pop
dec
aaa
add
push
add
add
push
jl
sub
add
push
cmp
mov
jmp
jge
add
and
add
pop
dec
aaa
add
push
add
add
push
jl
cmp
(bad)
(bad)
dec
add
adc
add
dec
add
dec
jl
pop
cmp
mov
call
add
push
adc
and
add
push
jl
sub
add
push
cmp
mov
(bad)
cmp
xor
ds
jmp
out
add
cmp
or
add
sldt
add
or
add
cmp
adc
fiadd
add
cmp
push
adc
sbb
push
sbb
add
cmp
(bad)
(bad)
cmp
repz
call
sub
pop
adc
push
push
adc
pop
sub
add
or
add
add
push
jl
sub
add
push
cmp
push
add
and
add
add
dec
add
add
push
aaa
add
cmp
aaa
mov
call
cmp
push
add
and
add
add
push
jl
sub
add
push
cmp
(bad)
(bad)
cmp
push
adc
pop
adc
xchg
pushf
and
add
dec
jl
sub
add
push
cmp
retf
(bad)
(bad)
cmp
mov
call
push
cmp
dec
add
add
loopne
(bad)
jmp
mov
aas
add
add
push
adc
and
add
add
iret
mov
call
xor
and
pop
sar
jmp
int
add
cmp
sbb
adc
xchg
add
es
add
add
cmps
mov
(bad)
cmp
or
ins
pushf
and
add
add
xchg
mov
jmp
jmp
add
and
add
pop
dec
adc
and
add
dec
jl
push
cmp
(bad)
(bad)
dec
add
or
add
and
add
add
and
push
jl
cmp
or
icebp
(bad)
(bad)
cmp
(bad)
call
sbb
lea
add
cmp
or
push
pop
sub
add
sub
add
cmp
mov
(bad)
dec
add
or
add
dec
add
cmp
mov
call
push
adc
sbb
push
sbb
add
dec
jl
cmp
mov
call
pop
pop
pop
adc
das
add
add
fidiv
cmp
or
add
pop
inc
xchg
mov
add
add
ret
call
push
cmp
or
add
pop
adc
ror
sub
and
add
add
mov
or
add
adc
add
dec
add
dec
jl
sub
add
push
cmp
or
add
adc
add
and
add
and
add
add
and
add
add
push
jl
sub
add
push
cmp
add
and
cmp
add
pop
dec
aaa
add
stos
add
add
dec
mov
(bad)
dec
add
push
add
add
mov
add
and
add
add
cmp
add
cmp
add
or
add
or
add
dec
add
cmp
mov
jmp
mov
aas
add
add
push
adc
and
add
add
clc
scas
(bad)
(bad)
dec
add
and
add
and
xor
add
pop
pushf
and
push
jl
cmp
scas
(bad)
(bad)
cmp
or
add
adc
add
sub
and
mov
add
pop
addr16
and
add
add
stos
scas
(bad)
jmp
and
add
add
in
(bad)
push
add
or
or
cmp
test
call
ja
mov
cmp
test
add
add
pusha
test
scas
(bad)
(bad)
cmp
(bad)
jmp
cmp
add
cmp
push
scas
(bad)
(bad)
cmp
push
scas
(bad)
(bad)
cmp
int
add
cmp
mov
add
cmp
stos
(bad)
inc
stc
(bad)
(bad)
cmp
stos
(bad)
(bad)
cmp
(bad)
(bad)
cmp
stos
(bad)
dec
cmp
lods
(bad)
jmp
das
add
add
sbb
add
or
sub
cmp
cmp
(bad)
(bad)
cmp
scas
(bad)
(bad)
cmp
(bad)
dec
je
(bad)
dec
jno
(bad)
jmp
add
add
cmp
(bad)
(bad)
cmp
scas
(bad)
(bad)
cmp
les
lods
(bad)
jmp
fld
add
cmp
lods
(bad)
call
or
mov
or
add
cmp
lods
(bad)
jmp
jge
add
cmp
lods
(bad)
(bad)
cmp
icebp
lods
(bad)
call
dec
cmp
(bad)
(bad)
cmp
scas
(bad)
jmp
or
add
cmp
(bad)
jmp
cmp
add
cmp
(bad)
(bad)
cmp
(bad)
(bad)
cmp
push
scas
(bad)
(bad)
cmp
mov
add
add
into
mov
scas
(bad)
(bad)
cmp
mov
cmp
mov
scas
(bad)
(bad)
cmp
mov
(bad)
(bad)
cmp
jmp
or
add
cmp
(bad)
(bad)
cmp
scas
(bad)
(bad)
cmp
cmps
(bad)
(bad)
cmp
add
mov
(bad)
(bad)
cmp
lods
(bad)
(bad)
cmp
mov
cmp
mov
lods
(bad)
(bad)
cmp
mov
lods
(bad)
(bad)
cmp
jns
(bad)
mov
cmp
mov
add
add
pusha
mov
add
add
ja
(bad)
(bad)
cmp
cmp
add
jge
(bad)
jmp
aam
add
cmp
mov
add
add
push
mov
add
add
sbb
sar
cmp
add
add
fdivr
lods
(bad)
(bad)
cmp
mov
lods
(bad)
(bad)
cmp
mov
add
add
idiv
lods
(bad)
(bad)
cmp
mov
cmp
push
add
add
es
lods
(bad)
(bad)
cmp
jmp
cmp
add
cmp
(bad)
jmp
and
add
cmp
inc
cmp
xor
add
out
(bad)
jmp
aad
add
cmp
mov
add
add
cmc
mov
add
add
cmp
lods
(bad)
(bad)
cmp
jmp
add
add
cmp
(bad)
(bad)
cmp
(bad)
(bad)
cmp
ret
(bad)
cmp
popf
add
add
in
(bad)
(bad)
cmp
jmp
(bad)
dec
cmp
sar
cmp
add
add
add
scas
sar
adc
lods
sar
adc
fcmovb
(bad)
call
push
fcmovb
(bad)
jmp
movs
add
add
ffree
(bad)
jmp
mov
add
cmp
sar
pop
or
ss
cmp
(bad)
(bad)
cmp
sar
and
add
cmp
(bad)
(bad)
jle
add
add
mov
push
cmp
ret
(bad)
(bad)
cmp
lods
(bad)
(bad)
cmp
ret
(bad)
call
je
repz
(bad)
jmp
mov
add
(bad)
call
push
cmp
(bad)
(bad)
push
add
or
inc
(bad)
(bad)
(bad)
cmp
lods
(bad)
(bad)
cmp
(bad)
(bad)
cmp
sti
(bad)
(bad)
cmp
(bad)
(bad)
cmp
stos
(bad)
(bad)
cmp
(bad)
(bad)
jle
add
add
lahf
(bad)
(bad)
jmp
jnp
add
cmp
(bad)
(bad)
inc
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
(bad)
cmp
stos
(bad)
(bad)
cmp
pop
cmp
(bad)
cmp
(bad)
and
add
add
das
(bad)
(bad)
call
push
cmp
jb
add
cmp
sub
ret
jmp
cmp
add
cmp
(bad)
(bad)
(bad)
cmp
adc
(bad)
(bad)
cmp
(bad)
cmp
(bad)
jmp
xchg
add
add
mov
(bad)
jmp
xor
add
cmp
(bad)
(bad)
(bad)
(bad)
enter
imul
and
(bad)
jmp
add
add
cmp
leave
(bad)
(bad)
cmp
stos
(bad)
(bad)
cmp
leave
(bad)
dec
cmp
leave
(bad)
jmp
push
add
add
sbb
(bad)
(bad)
cmp
stos
(bad)
(bad)
cmp
(bad)
jmp
xchg
retf
and
add
add
leave
retf
sub
add
push
cmp
retf
adc
cmp
retf
and
add
add
sbb
(bad)
(bad)
cmp
stos
(bad)
(bad)
cmp
(bad)
jmp
add
pop
retf
(bad)
jmp
xor
add
cmp
shr
(bad)
call
xor
stos
retf
(bad)
inc
mov
int3
(bad)
(bad)
cmp
inc
int3
(bad)
(bad)
cmp
(bad)
cmp
(bad)
(bad)
cmp
or
inc
sar
(bad)
cmp
xchg
add
cmp
int3
(bad)
(bad)
cmp
(bad)
(bad)
cmp
into
(bad)
jmp
or
inc
into
(bad)
(bad)
cmp
(bad)
(bad)
cmp
pop
stos
(bad)
(bad)
cmp
push
add
add
in
into
(bad)
(bad)
cmp
(bad)
(bad)
cmp
iret
(bad)
jmp
ja
add
cmp
(bad)
jmp
in
add
or
movs
iret
(bad)
jmp
or
add
cmp
sar
call
sbb
sub
xor
dec
sar
jmp
aam
add
cmp
sar
(bad)
cmp
stos
(bad)
(bad)
cmp
sub
rcl
(bad)
jmp
leave
add
add
in
sar
jmp
sbb
add
cmp
sar
jmp
data16
add
pop
sar
dec
sbb
(bad)
dec
sbb
(bad)
jmp
call
mov
(bad)
call
dec
cmp
mov
(bad)
(bad)
cmp
sar
jmp
fild
add
cmp
(bad)
cmp
push
sar
jmp
add
js
(bad)
call
add
(bad)
cmp
(bad)
(bad)
cmp
test
aam
call
and
xor
(bad)
call
sbb
jne
(bad)
jmp
sub
add
cmp
(bad)
(bad)
jmp
data16
add
or
xlat
add
add
(bad)
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
cmp
cmp
(bad)
(bad)
call
sub
xchg
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
cmp
inc
add
add
mov
out
add
cmp
(bad)
(bad)
(bad)
cmp
test
(bad)
(bad)
(bad)
cmp
test
(bad)
cmp
xlat
(bad)
jmp
add
add
cmp
(bad)
(bad)
cmp
enter
inc
xlat
(bad)
call
arpl
inc
xlat
(bad)
jmp
test
xlat
(bad)
jmp
add
add
cmp
(bad)
jmp
std
add
add
mov
pop
cmp
test
(bad)
cmp
cmp
cmp
cld
add
push
cmp
fcos
(bad)
cmp
cmp
(bad)
jmp
sbb
add
cmp
(bad)
call
dec
cmp
fcos
call
outs
cmp
fcos
call
cmp
add
add
cmp
(bad)
(bad)
cmp
(bad)
(bad)
cmp
(bad)
push
add
or
test
inc
cmp
imul
(bad)
jmp
or
aaa
(bad)
jmp
add
add
aaa
(bad)
(bad)
cmp
test
(bad)
cmp
(bad)
call
inc
cmp
adc
add
cmp
(bad)
call
adc
(bad)
cmp
cmps
(bad)
(bad)
cmp
(bad)
(bad)
cmp
cmps
(bad)
(bad)
cmp
(bad)
(bad)
cmp
neg
(bad)
inc
jecxz
(bad)
cmp
(bad)
dec
cmp
mov
(bad)
fdivr
jmp
out
add
push
cmp
fdivr
jmp
arpl
add
cmp
fdivr
(bad)
cmp
jmp
cmp
(bad)
jmp
rol
add
cmp
fdivr
call
cmp
(bad)
(bad)
cmp
adc
(bad)
jmp
(bad)
add
push
cmp
(bad)
jmp
push
add
add
sbb
(bad)
call
add
(bad)
cmp
(bad)
(bad)
cmp
(bad)
jmp
fadd
add
cmp
fdivrp
jmp
sbb
sbb
(bad)
(bad)
cmp
(bad)
(bad)
cmp
fdivrp
call
add
pop
fdivrp
jmp
sbb
add
cmp
(bad)
(bad)
cmp
cmps
(bad)
(bad)
cmp
(bad)
jmp
in
add
cmp
(bad)
call
add
jmp
sub
mov
(bad)
call
es
fdivrp
(bad)
cmp
push
(bad)
call
jns
cmp
(bad)
jmp
or
add
cmp
(bad)
jmp
mov
add
cmp
(bad)
jmp
push
add
add
pop
loopne
jmp
fiadd
add
cmp
loopne
call
imul
sub
add
push
cmp
ins
add
add
mov
inc
add
add
int3
loopne
jmp
add
add
mov
aad
add
cmp
loop
inc
(bad)
(bad)
cmp
(bad)
jmp
mov
add
cmp
imul
cmp
(bad)
(bad)
cmp
(bad)
jmp
add
add
cmp
(bad)
call
push
cmp
(bad)
call
and
push
add
cmp
add
popf
out
call
ins
cmp
xor
shl
(bad)
call
jb
fsub
(bad)
(bad)
cmp
(bad)
cmp
(bad)
call
inc
cmp
out
(bad)
cmp
(bad)
(bad)
cmp
(bad)
jmp
inc
add
add
xchg
out
(bad)
cmp
cmps
(bad)
(bad)
cmp
add
out
(bad)
cmp
movs
(bad)
(bad)
cmp
out
(bad)
cmp
movs
(bad)
(bad)
cmp
out
(bad)
cmp
call
cmp
(bad)
jmp
add
imul
add
add
imul
add
add
mov
(bad)
call
inc
cmp
stos
movs
(bad)
(bad)
cmp
sbb
cmc
call
cmp
jmp
cmp
jmp
cmp
(bad)
call
push
cmp
(bad)
(bad)
cmp
xchg
jmp
add
add
xchg
jmp
add
push
cmp
fild
add
cmp
add
add
cmp
jmp
movs
(bad)
(bad)
cmp
(bad)
call
sub
sub
(bad)
cmp
(bad)
(bad)
cmp
cmp
out
add
cmp
jmp
(bad)
cmp
(bad)
(bad)
cmp
jmp
(bad)
cmp
movs
(bad)
(bad)
cmp
jg
add
cmp
(bad)
jmp
add
add
cmp
(bad)
call
inc
cmp
jmp
call
add
call
inc
cmp
(bad)
jmp
add
add
(bad)
in
(bad)
jmp
push
add
add
out
in
(bad)
jmp
sub
add
cmp
movs
(bad)
(bad)
cmp
(bad)
(bad)
jle
add
add
or
(bad)
(bad)
cmp
out
(bad)
(bad)
jg
add
add
outs
out
(bad)
jmp
jo
add
cmp
(bad)
jmp
mov
in
out
(bad)
jmp
jmp
(bad)
jmp
and
add
cmp
(bad)
jmp
or
add
cmp
(bad)
jmp
add
add
cmp
mov
lock
(bad)
cmp
(bad)
(bad)
cmp
(bad)
(bad)
cmp
(bad)
cmp
dec
add
add
mov
out
add
cmp
lock
(bad)
cmp
icebp
(bad)
(bad)
cmp
movs
(bad)
(bad)
cmp
icebp
(bad)
call
xor
out
icebp
(bad)
call
inc
cmp
(bad)
jmp
add
add
cmp
js
into
repnz
call
ja
es
call
push
cmp
repz
call
pop
cmp
repz
(bad)
cmp
mov
repz
(bad)
cmp
mov
repz
jmp
movs
add
add
cmps
repz
(bad)
cmp
mov
repz
jmp
or
shl
(bad)
(bad)
cmp
(bad)
(bad)
cmp
repz
call
sub
in
(bad)
jmp
add
inc
fadd
add
add
add
push
add
add
add
add
sbb
add
add
add
add
add
xchg
inc
add
push
add
add
add
test
add
add
leave
inc
add
push
add
add
add
add
add
add
inc
add
mov
inc
add
sbb
add
iret
inc
add
out
add
mov
add
push
add
add
add
add
add
add
sbb
add
sbb
add
add
add
add
add
add
add
pop
add
and
sbb
add
add
sbb
add
add
add
lahf
push
add
aam
add
jae
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
xor
pop
add
add
add
adc
or
mov
push
call
dec
add
add
add
or
sahf
add
or
adc
add
add
add
outs
lock
or
fst
add
add
push
add
add
fld
add
add
je
add
add
add
or
add
or
add
or
add
jo
mov
add
repnz
or
sahf
add
or
sub
add
add
add
outs
int
add
outs
icebp
add
or
add
or
add
jo
mov
add
repnz
or
(bad)
add
fld
add
add
fld
add
add
outs
jmp
add
jb
add
jo
repz
or
push
lea
add
add
add
or
add
or
sahf
add
or
daa
add
add
outs
jmp
add
jb
add
jo
repz
or
push
lea
add
add
add
or
add
or
fst
add
add
push
add
add
fld
add
add
add
jo
push
sub
add
add
add
push
add
cmp
push
sbb
add
add
aas
add
add
sbb
add
add
mov
push
sbb
add
sbb
add
add
add
sub
sub
cmp
xor
push
sub
pop
jae
add
or
push
or
outs
retf
add
or
adc
or
sbb
add
pop
push
or
add
test
or
add
or
add
add
add
cmp
fisttp
cmp
add
add
outs
dec
add
or
push
sub
add
adc
add
add
add
push
add
adc
add
add
or
fs
aaa
adc
call
add
or
sub
add
or
pop
and
and
add
mov
test
adc
and
add
mov
clc
add
or
pop
outs
stc
add
or
jae
add
or
add
add
add
or
add
or
outs
aad
add
or
adc
add
adc
add
add
adc
or
push
xor
call
adc
add
adc
add
aaa
add
adc
or
loope
jns
adc
call
adc
add
inc
add
add
add
adc
or
cmps
push
cmp
push
call
add
jo
push
outs
cli
add
or
adc
add
sbb
or
push
pop
pushf
pop
pop
sbb
add
add
push
pop
pushf
or
sbb
xor
inc
add
add
add
adc
or
jge
inc
pop
adc
call
add
jo
push
outs
cli
add
or
adc
add
sbb
or
push
pop
pushf
pop
pop
sbb
add
add
push
pop
pushf
or
sbb
xor
add
add
add
add
adc
add
adc
add
add
add
aaa
add
adc
add
adc
add
inc
add
add
add
adc
or
sbb
call
add
jo
push
outs
cli
add
or
adc
add
sbb
or
push
pop
pushf
pop
pop
sbb
add
add
push
pop
pushf
or
sbb
xor
inc
add
add
add
adc
or
jge
inc
imul
stc
jb
add
jo
push
outs
cli
add
or
adc
add
sbb
or
push
pop
pushf
pop
pop
sbb
add
add
push
pop
pushf
or
sbb
xor
inc
add
add
add
adc
or
movzx
adc
call
add
jo
push
outs
cli
add
or
adc
add
sbb
or
push
pop
pushf
pop
pop
sbb
add
add
push
pop
pushf
or
sbb
xor
inc
add
add
add
adc
or
rcr
sub
push
call
add
jo
push
outs
cli
add
or
adc
add
sbb
or
push
pop
pushf
pop
pop
sbb
add
add
push
pop
pushf
or
sbb
sub
sub
push
call
inc
add
or
add
jb
or
and
push
call
add
dec
add
outs
mov
or
add
add
or
outs
aaa
jge
adc
call
add
outs
enter
sub
add
jb
or
cmovbe
adc
call
add
dec
add
outs
leave
add
or
add
add
or
(bad)
inc
xor
call
or
add
retf
or
add
bound
or
dec
in
push
adc
call
add
outs
retf
add
or
add
add
or
cwde
fs
es
sub
add
or
add
add
or
add
add
or
pop
add
ss
call
add
outs
xlat
add
or
add
add
or
les
es
sub
add
sub
add
or
add
bound
or
mov
es
sub
add
add
or
add
add
or
outs
outs
inc
cmp
push
sub
add
add
or
add
add
or
cmps
push
or
adc
call
jb
add
sub
add
or
sbb
add
push
call
add
dec
add
outs
iret
add
or
add
add
push
xor
adc
call
add
dec
add
dec
add
outs
rol
add
sub
add
xchg
sub
sub
adc
call
add
dec
add
dec
add
dec
add
outs
rol
add
sub
add
bound
or
jle
pop
ds
call
add
outs
aam
add
sub
add
bound
or
xor
call
add
outs
aad
add
sub
add
bound
or
or
outs
adc
call
add
outs
(bad)
add
or
add
add
or
sub
push
adc
call
or
add
or
add
fadd
add
sub
add
or
adc
xor
push
call
fild
add
sub
add
stc
sub
adc
call
add
dec
add
dec
add
dec
add
outs
fadd
add
sub
add
inc
sub
sub
push
call
add
add
or
dec
xchg
pop
bound
call
add
add
add
or
add
or
add
cld
add
or
ds
or
add
or
add
fiadd
add
sub
add
or
add
or
add
fild
add
sub
dec
add
dec
add
dec
add
sub
add
or
dec
add
or
add
or
add
or
add
in
add
sub
dec
add
dec
add
dec
add
sub
add
or
cs
or
add
loope
add
sub
dec
add
dec
add
dec
add
dec
add
sub
add
or
push
add
jle
add
sub
add
inc
add
sub
dec
add
outs
inc
add
sub
sub
or
add
add
or
add
add
or
add
or
add
add
add
sub
add
fld
add
sub
add
or
add
or
add
add
add
sub
add
or
add
or
add
add
add
sub
dec
add
outs
add
add
sub
sub
or
add
add
or
add
dec
add
outs
push
add
or
add
dec
add
outs
pop
add
or
add
dec
add
outs
or
add
sub
ds
or
add
or
add
or
add
sub
dec
add
outs
or
add
sub
sub
or
add
add
or
add
dec
add
outs
or
add
sub
sub
or
add
add
or
add
dec
add
outs
push
add
or
add
add
or
add
or
add
sgdtd
or
ds
or
add
or
add
adc
add
sub
dec
add
outs
dec
add
or
add
dec
add
outs
dec
add
or
add
dec
add
dec
add
outs
mov
or
add
dec
add
outs
enter
sub
cmp
or
add
or
add
add
or
add
dec
add
outs
retf
add
or
add
dec
add
dec
add
outs
int3
add
or
add
add
or
add
sti
add
or
sub
or
add
add
or
add
dec
add
outs
into
add
or
add
dec
add
dec
add
dec
add
sub
add
or
sub
or
add
add
or
add
add
or
add
adc
add
sub
dec
add
outs
lock
or
add
dec
add
outs
cli
add
or
add
dec
add
outs
adc
add
sub
push
add
jb
add
sub
dec
add
dec
add
outs
iret
add
or
add
or
add
or
add
or
add
add
or
add
or
add
or
add
or
add
or
add
add
or
add
dec
add
outs
aam
add
sub
sub
or
add
add
or
add
dec
add
outs
(bad)
add
or
add
dec
add
outs
xlat
add
or
add
dec
add
outs
adc
add
add
or
add
push
add
or
sub
or
add
add
or
add
add
or
add
or
add
sbb
add
sub
or
add
or
add
or
add
add
or
add
add
or
add
xor
cs
or
add
sbb
add
sub
add
sbb
add
sub
dec
add
dec
add
outs
sbb
add
sub
ds
or
add
or
add
sbb
add
sub
add
or
add
or
add
jg
add
sub
dec
add
outs
daa
add
push
sub
cs
or
add
sbb
cs
or
add
push
add
or
cs
or
add
pop
add
or
sub
or
add
add
or
add
dec
add
outs
and
add
sub
ds
or
add
or
add
and
add
sub
dec
add
outs
and
add
sub
ds
or
add
or
add
mov
sub
or
add
add
or
add
dec
add
outs
mov
add
dec
add
outs
and
add
dec
add
sub
add
or
add
dec
add
dec
add
outs
add
or
add
add
or
add
daa
add
or
cs
or
add
sub
add
sub
dec
add
outs
sub
add
sub
cs
or
add
sub
add
sub
add
or
add
or
add
mov
ds
or
add
or
add
sub
add
sub
pop
sub
or
sub
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
sbb
add
push
sub
adc
add
sub
add
adc
add
sub
add
adc
add
sub
add
sbb
add
push
sub
add
add
add
add
adc
add
add
add
add
add
adc
add
sub
add
adc
add
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
pop
sub
add
adc
add
sub
add
adc
add
add
add
add
adc
add
add
add
add
add
add
add
adc
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
sub
add
sub
add
sub
add
sub
sub
pop
pop
push
adc
call
sub
sub
jae
adc
call
add
push
sub
add
sub
add
or
lods
xchg
pop
pop
adc
call
add
sub
add
sub
add
push
or
imul
es
sub
add
sub
add
or
add
or
xor
push
call
add
add
sub
add
or
add
or
fstp
call
xor
add
mov
or
cmp
call
add
add
add
push
outs
add
or
aaa
add
push
push
call
dec
add
add
inc
sub
sub
xchg
cmp
call
add
add
or
int
or
adc
call
add
add
or
cmp
push
call
add
sub
add
sub
add
sub
sub
xor
call
or
add
xor
add
bound
or
jo
cmp
push
call
add
outs
adc
add
sub
add
bound
or
jmp
push
call
add
outs
and
add
add
add
adc
add
add
add
sub
add
adc
add
add
add
add
pop
sub
add
adc
add
add
add
add
adc
add
add
add
pop
sub
add
adc
add
sub
add
sbb
add
push
sub
sbb
add
push
sub
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
xor
cmp
add
add
add
add
and
add
add
loopne
add
and
jb
outs
addr16
add
add
add
add
add
and
ins
inc
add
add
add
push
push
push
add
add
add
add
and
outs
jo
add
pop
mov
add
add
add
inc
push
dec
inc
add
add
add
in
adc
add
inc
ins
outs
bound
add
add
add
add
add
push
mov
cmp
add
add
mov
add
and
add
push
add
add
add
stc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
inc
add
add
add
add
add
add
dec
add
add
and
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
and
push
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
and
push
add
and
arpl
aad
add
pop
add
add
add
add
add
or
sub
inc
add
add
add
add
add
add
add
dec
add
add
add
add
dec
add
add
add
add
pop
loop
push
add
pop
dec
add
add
dec
add
add
or
or
add
icebp
add
add
add
add
push
add
aad
inc
add
add
pop
or
add
or
or
add
dec
add
add
add
ror
add
add
or
add
add
or
inc
or
popa
or
jp
push
or
dec
add
add
or
imul
ja
adc
add
add
add
adc
sbb
add
adc
add
adc
adc
adc
or
add
adc
push
add
adc
push
add
adc
adc
add
adc
add
sbb
push
add
adc
add
add
pop
adc
add
leave
adc
fist
sbb
mov
pop
push
or
dec
icebp
add
add
sbb
add
add
sbb
and
push
sbb
and
xor
and
and
cmp
and
push
add
sbb
push
add
dec
dec
add
add
add
sbb
sbb
add
sbb
sbb
add
sbb
sbb
sbb
add
sbb
push
add
add
sbb
add
add
add
sbb
add
icebp
add
add
icebp
add
add
and
add
add
dec
add
add
push
or
(bad)
sbb
add
es
sbb
add
sbb
add
(bad)
sbb
add
es
sbb
add
sub
or
mov
or
test
mov
push
add
and
push
add
add
add
add
sub
add
add
sub
add
add
sub
push
add
sub
push
add
add
dec
add
add
add
add
add
sub
add
add
sub
add
add
sub
add
add
push
sub
push
sub
push
sub
test
push
add
sub
push
cs
sub
push
sub
(bad)
sbb
add
push
sub
(bad)
sbb
add
push
sub
push
sub
and
push
add
das
push
sub
push
sub
dec
add
add
add
add
add
add
xor
push
add
xor
add
add
xor
add
add
xor
push
add
xor
add
add
and
push
add
(bad)
sbb
add
add
xor
sbb
add
cmp
add
sbb
push
add
cmp
add
add
add
inc
dec
dec
and
add
inc
sbb
push
add
sbb
push
add
dec
add
add
add
add
add
inc
jecxz
or
add
push
add
inc
dec
add
add
inc
mov
push
add
add
add
push
or
mov
xlat
add
add
add
add
add
add
inc
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
sbb
add
add
rol
in
add
add
add
add
add
pop
add
add
add
add
or
cmp
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
outs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
xchg
add
add
add
add
sub
push
add
add
add
add
push
add
add
sub
add
add
add
add
add
add
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
add
add
dec
add
add
push
add
add
add
add
das
push
add
test
dec
add
add
add
add
pop
push
add
add
add
add
add
add
das
add
push
cmps
push
add
cmp
add
add
mov
add
inc
add
add
add
push
add
add
adc
add
sbb
add
add
adc
add
cmp
add
add
adc
add
push
pop
add
add
adc
add
jae
add
add
adc
add
nop
pop
add
add
adc
add
lods
pop
add
add
adc
rol
mov
xor
cmp
add
jle
xor
push
or
or
or
or
add
add
add
leave
add
add
loope
and
mov
in
and
xchg
adc
add
push
add
add
adc
add
add
test
adc
lea
call
pop
mov
add
rcl
mov
pop
rol
add
pop
mov
add
sbb
push
add
adc
rol
add
sbb
push
add
sub
rol
add
rol
add
sbb
push
add
dec
sbb
push
add
push
sbb
push
add
pusha
sbb
push
add
imul
push
add
jbe
rol
add
add
xchg
sbb
push
add
mov
add
add
add
sbb
push
add
into
sbb
push
push
add
sbb
push
push
add
sbb
push
add
call
add
push
add
add
push
add
add
test
mov
adc
sub
sub
add
add
add
add
add
add
add
add
add
add
sub
sub
add
add
sub
add
add
sub
or
add
sub
or
add
sub
add
add
sub
push
adc
push
sub
add
add
sub
pop
adc
sub
push
add
add
sub
or
add
inc
pop
adc
dec
sub
push
adc
pop
sub
push
adc
arpl
or
add
or
add
mov
add
jp
fmul
test
mov
adc
mov
add
add
adc
pop
inc
add
adc
jno
or
adc
test
push
adc
cdq
inc
adc
adc
lods
inc
or
inc
pop
push
adc
aad
sbb
push
and
add
add
add
add
add
add
xchg
sbb
pop
lods
add
add
add
or
adc
retf
add
add
add
add
add
or
add
add
add
add
add
add
and
add
add
sbb
add
add
add
add
or
inc
add
add
add
or
xchg
add
add
add
or
xchg
add
or
and
add
add
add
add
add
or
xchg
add
or
add
add
add
or
xchg
add
or
add
add
add
or
xchg
add
or
add
add
add
or
xchg
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
xchg
add
add
xchg
add
or
add
pushf
and
add
add
sbb
add
add
add
xchg
add
or
and
add
add
add
add
xchg
add
or
and
add
add
add
add
and
add
add
add
add
and
add
add
sbb
pop
lods
add
add
adc
je
ret
add
add
and
add
add
or
add
and
add
add
or
add
and
add
add
or
cld
and
add
add
or
add
add
or
xchg
add
add
add
or
xchg
add
or
and
add
add
add
add
add
or
push
or
add
add
add
or
push
or
sub
and
add
add
add
cmp
add
jo
add
or
add
fmul
and
add
add
sbb
add
add
add
add
sbb
add
add
and
sbb
and
add
add
add
add
add
cmp
test
pop
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
add
or
xchg
add
push
push
add
add
add
or
xchg
add
push
cmp
and
add
add
add
add
add
or
inc
add
add
add
or
inc
add
sbb
and
add
add
add
add
add
add
cmp
test
or
fs
add
add
add
phaddsw
add
add
add
add
nop
add
add
push
sbb
add
add
add
xchg
add
cmp
and
add
add
add
add
xchg
add
movs
and
add
add
add
add
xchg
add
add
xchg
add
add
and
add
add
add
enter
or
xchg
add
(bad)
add
shl
add
add
add
fsub
add
add
add
loopne
add
add
xchg
sbb
pop
lods
add
call
add
or
int
or
clc
and
add
add
sbb
add
add
add
xchg
add
adc
and
xchg
add
adc
and
xchg
sbb
pop
lods
add
sbb
add
ds
add
and
push
or
loop
or
inc
and
push
or
adc
add
add
add
or
push
or
adc
add
add
add
or
add
add
or
adc
adc
mov
add
or
push
or
add
add
add
add
enter
or
push
add
xchg
add
add
and
push
add
add
and
push
add
add
and
push
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
adc
add
or
xchg
add
adc
add
or
xchg
add
adc
add
or
xchg
add
adc
add
or
xchg
add
add
add
or
xchg
add
push
sub
pop
add
add
xchg
sbb
pop
lods
add
add
add
or
add
ds
add
add
or
add
mov
add
add
or
add
mov
add
add
add
add
add
add
add
add
add
add
add
or
adc
push
add
add
or
inc
push
cs
add
or
adc
outs
adc
add
add
add
or
adc
js
dec
push
das
add
add
or
adc
adc
das
add
add
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
adc
add
add
add
or
xchg
add
adc
add
add
add
or
xchg
add
adc
add
add
add
or
xchg
add
add
add
or
xchg
add
adc
and
add
or
xchg
add
adc
sub
add
or
xchg
add
cmp
daa
add
add
xchg
sbb
pop
lods
add
add
add
or
adc
retf
add
add
daa
add
or
push
sbb
add
add
add
daa
add
or
adc
mov
mov
xor
cld
daa
add
or
push
or
adc
sbb
add
or
xchg
add
adc
and
add
or
xchg
add
push
cmp
sub
add
add
add
add
add
or
xchg
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
jae
xchg
push
xor
xchg
sub
add
add
add
add
xchg
add
movs
sub
add
add
add
add
xchg
sbb
pop
lods
add
add
adc
retf
add
add
sub
add
add
sbb
add
add
add
sub
add
add
add
sbb
add
add
sub
add
add
push
call
add
add
add
(bad)
add
cmp
add
or
inc
or
icebp
push
xor
dec
sub
add
add
pop
sbb
push
xor
pop
sub
add
add
jne
or
xor
add
add
sbb
pop
xor
add
add
mov
icebp
push
add
add
xchg
sbb
push
add
add
mov
add
add
lods
sbb
push
aaa
add
add
mov
icebp
push
cmp
shr
add
add
ret
push
cmp
shr
add
or
inc
or
sbb
push
cmp
loopne
add
sub
inc
or
sbb
push
cmp
lock
add
add
jecxz
icebp
push
cmp
add
add
sub
inc
or
sbb
push
cmp
adc
add
or
inc
or
sbb
push
cmp
and
add
sub
inc
or
std
push
cmp
xor
add
or
inc
or
sbb
push
cmp
inc
sub
add
add
sbb
std
push
cmp
push
sub
add
add
and
add
add
sub
inc
or
sbb
push
cmp
add
add
cmp
icebp
push
add
add
inc
sbb
push
add
add
push
sbb
push
aas
add
add
pop
sbb
push
aas
add
add
addr16
push
inc
add
sub
add
add
jb
std
push
inc
add
sub
add
add
jge
icebp
push
inc
add
sub
add
add
mov
std
push
inc
add
sub
add
add
xchg
sbb
push
inc
add
sub
add
add
sahf
sbb
push
inc
add
sub
add
add
test
add
sub
add
add
mov
std
push
inc
add
sub
add
add
mov
add
add
sub
inc
or
sbb
push
inc
add
add
or
inc
or
sbb
push
inc
add
add
sub
inc
or
sbb
push
inc
add
add
or
inc
or
sbb
push
inc
add
add
neg
std
push
inc
add
add
add
icebp
push
inc
add
add
or
std
push
inc
add
add
pop
sbb
push
dec
add
sub
add
add
and
std
push
dec
add
add
add
sbb
pop
dec
add
add
add
sbb
pop
dec
add
add
add
sbb
pop
push
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
add
or
add
cld
sbb
pop
add
add
or
add
push
sbb
pop
pop
add
add
or
add
adc
pop
pop
add
add
add
add
sbb
pop
pop
add
add
add
add
xor
pusha
add
add
add
add
sbb
pop
bound
jl
add
or
push
add
xchg
add
add
or
add
pop
sbb
pop
add
add
push
add
add
jb
xor
imul
or
add
jl
xor
imul
sub
add
add
add
add
sub
add
add
add
add
sub
add
push
add
add
add
mov
add
inc
or
sbb
pop
jae
cmp
add
or
add
out
xor
jae
dec
sub
add
repnz
pop
jne
pop
sub
add
std
sbb
pop
ja
ins
sub
add
or
jl
add
or
add
adc
mov
xchg
add
sbb
xchg
sub
xchg
add
sbb
pushf
sub
xchg
add
add
sub
xchg
add
les
jge
lods
sub
xchg
add
push
jge
mov
add
or
xchg
add
add
xchg
add
add
sub
xchg
add
sbb
int3
sub
xchg
add
sbb
aam
add
or
xchg
add
push
sbb
jge
fsubr
xchg
add
push
sbb
jge
in
add
or
xchg
add
push
and
jge
in
sub
xchg
add
sub
jge
hlt
sub
xchg
add
aaa
add
cld
sub
xchg
add
cmp
add
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
push
push
jge
sub
add
or
xchg
add
push
push
jge
xor
add
or
xchg
add
push
push
jge
cmp
add
or
xchg
add
pop
push
jge
inc
add
or
xchg
add
pop
push
jge
dec
add
or
xchg
add
pop
push
jge
push
add
or
xchg
add
push
jge
pop
add
or
xchg
add
push
jge
fs
or
xchg
add
push
jge
ins
add
or
xchg
add
add
add
add
add
jl
add
or
xchg
add
add
xchg
add
pop
push
jge
mov
add
or
xchg
add
pop
push
jge
xchg
add
or
xchg
add
pop
push
jge
pushf
add
or
xchg
add
pop
push
jge
movs
add
or
xchg
add
and
jge
lods
add
or
xchg
add
and
jge
mov
add
or
xchg
add
and
jge
mov
add
add
les
add
or
xchg
add
les
jge
int3
add
or
xchg
add
aam
add
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
and
jge
in
add
or
xchg
add
and
pop
jge
hlt
add
or
xchg
add
and
jge
cld
add
or
xchg
add
(bad)
pop
jge
add
add
or
xchg
add
aaa
add
or
add
or
xchg
add
push
jge
adc
add
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
and
das
add
or
xchg
add
and
das
add
or
xchg
add
and
das
add
or
xchg
add
and
das
add
or
xchg
add
and
das
add
or
xchg
add
and
das
add
or
xchg
add
and
das
add
or
xchg
add
cmp
das
add
or
xchg
add
cmp
das
add
or
xchg
add
cmp
das
add
or
xchg
add
add
xchg
add
add
xchg
add
add
xchg
add
and
das
add
or
xchg
add
and
das
add
or
xchg
add
and
pop
jge
lods
das
add
or
xchg
add
hlt
pop
jge
mov
add
or
xchg
add
(bad)
pop
jge
mov
add
add
les
add
or
xchg
add
add
das
add
or
xchg
add
and
jge
aam
add
or
xchg
add
and
pop
jge
fsubr
add
or
xchg
add
and
pop
jge
in
add
or
xchg
add
add
das
add
or
xchg
add
add
hlt
das
add
or
xchg
add
push
add
cld
das
add
or
xchg
add
add
add
or
xchg
add
and
add
or
add
or
xchg
add
and
add
adc
add
or
xchg
add
and
sbb
add
or
xchg
add
and
and
add
or
xchg
add
sbb
jge
sub
add
or
xchg
add
cmp
xor
add
add
or
cmp
add
or
xchg
add
add
add
add
add
dec
xor
add
add
add
add
or
xchg
add
and
pop
xor
add
add
add
xor
add
add
add
ins
xor
add
add
add
je
add
or
xchg
add
jl
add
or
xchg
add
add
xchg
add
es
or
mov
add
or
xchg
add
data16
xchg
xor
add
add
add
pushf
xor
add
add
add
movs
xor
add
add
add
lods
xor
add
add
add
mov
add
or
xchg
add
data16
mov
add
add
les
add
or
xchg
add
add
xor
add
add
add
aam
add
or
xchg
add
daa
cmp
xor
add
add
add
add
or
xchg
add
sub
jge
in
xor
add
add
add
hlt
xor
add
add
add
cld
xor
add
add
add
add
add
or
xchg
add
add
add
or
xchg
add
sub
add
adc
add
or
xchg
add
sub
xor
add
add
add
and
add
or
xchg
add
sub
add
sub
add
add
xchg
sbb
pop
lods
add
xor
add
or
xchg
add
pop
jge
inc
xor
add
add
add
dec
xor
add
add
add
js
add
or
xchg
add
add
add
add
mov
add
or
xchg
add
sub
xor
add
add
or
cwde
xor
add
add
add
add
or
xchg
add
add
xor
add
add
add
mov
add
or
xchg
add
lods
add
mov
add
add
shl
add
add
add
int3
xor
add
add
add
aam
add
or
xchg
add
sub
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
in
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
and
das
dec
or
add
das
push
or
add
xor
mov
add
add
add
and
xor
add
jns
add
add
or
add
add
or
add
add
or
xchg
add
add
add
or
xchg
add
loopne
add
or
nop
add
add
add
or
xchg
add
add
add
add
xor
or
add
add
add
xor
or
add
add
add
xor
or
add
add
add
xor
or
add
add
add
xor
or
add
add
add
xor
or
add
add
add
xor
or
add
xchg
add
xor
or
add
jecxz
add
add
or
add
add
or
add
add
fiadd
shl
add
add
or
add
in
add
add
or
add
add
or
add
fiadd
jo
add
or
add
fiadd
and
add
add
or
add
in
add
add
or
add
in
add
add
or
add
add
or
add
xor
in
add
add
add
add
in
add
add
add
add
or
xchg
add
xor
out
add
add
or
add
add
or
xchg
add
xor
add
add
add
or
xchg
add
xor
fiadd
ins
out
add
add
or
add
xchg
add
les
fiadd
test
add
or
xchg
add
add
add
out
add
add
add
add
out
add
add
add
add
out
add
add
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
xor
fiadd
and
add
add
add
add
xchg
add
xor
out
add
add
add
add
out
add
add
or
add
out
add
add
add
add
add
or
xchg
add
addr16
add
add
or
xchg
add
add
call
xchg
add
add
call
xchg
add
outs
or
add
add
add
or
add
add
add
or
add
xchg
add
add
add
or
add
xchg
add
xor
or
add
call
xchg
add
xor
aam
add
or
xchg
add
in
call
xchg
add
xor
hlt
call
xchg
add
xor
cld
call
xchg
add
cmp
jmp
xchg
add
add
add
or
xchg
add
and
add
or
xchg
add
xor
sub
add
or
xchg
add
xor
cmp
add
or
xchg
add
xor
dec
jmp
xchg
add
xor
pop
jmp
xchg
add
add
add
add
add
add
add
or
xchg
add
cmp
jmp
xchg
add
add
add
add
add
add
add
add
add
xchg
add
sbb
fiadd
mov
add
or
xchg
add
aaa
sbb
fiadd
mov
add
add
add
jmp
xchg
add
sbb
fiadd
aam
add
or
xchg
add
add
jmp
xchg
add
hlt
jmp
xchg
add
aaa
and
fiadd
add
add
or
xchg
add
aaa
les
fiadd
or
add
or
xchg
add
aaa
scas
add
add
or
xchg
add
cmp
jmp
pop
cmp
or
add
jmp
sub
inc
or
add
add
add
or
add
add
add
add
add
add
or
xchg
add
cmp
jmp
jbe
cmp
jmp
mov
sub
fiadd
mov
add
or
xchg
add
add
add
or
add
xchg
add
cmp
jmp
repz
add
add
xchg
add
cmp
add
add
jmp
sbb
data16
add
jmp
sub
push
or
add
jmp
aas
cmp
fiadd
hlt
jmp
push
cmp
fiadd
or
add
or
xchg
add
les
fiadd
sbb
add
or
xchg
add
cmp
jmp
add
add
add
add
jmp
add
add
add
add
add
or
xchg
add
add
add
or
xchg
add
cmp
or
add
add
add
or
add
add
or
xchg
add
cmp
or
add
add
or
xchg
add
cmp
jmp
add
add
add
add
add
or
add
xchg
add
data16
add
xchg
add
scas
add
add
or
xchg
add
or
add
jmp
add
add
or
add
or
xchg
add
loopne
add
or
xchg
add
add
jmp
add
add
or
add
or
xchg
add
cmp
in
add
or
xchg
add
cmp
add
add
in
add
or
xchg
add
cmp
in
add
or
xchg
add
mov
fadd
sub
add
or
xchg
add
cmp
in
add
or
xchg
add
add
add
or
xchg
add
add
add
add
add
add
add
or
xchg
add
cmp
add
or
xchg
add
cmp
or
add
or
xchg
add
cmp
add
add
or
xchg
add
cmp
or
add
or
xchg
add
les
fadd
mov
add
or
add
or
xchg
add
add
add
or
add
or
xchg
add
cmp
or
add
add
xchg
add
cmp
add
add
in
add
add
xchg
add
loopne
add
or
xchg
ds
add
add
in
add
or
xchg
add
cmp
lock
add
or
xchg
add
cmp
clc
in
add
add
xchg
sbb
pop
lods
add
add
in
add
or
xchg
ds
add
add
in
add
or
xchg
add
cmp
adc
add
or
xchg
add
add
in
add
add
xchg
sbb
pop
lods
add
add
in
add
or
xchg
add
lods
add
add
in
add
or
xchg
add
add
add
or
xchg
ds
add
add
add
or
xchg
add
add
add
or
xchg
add
add
add
or
xchg
add
cmp
pusha
in
add
or
xchg
add
cmp
push
add
add
add
add
or
xchg
add
lods
add
add
add
or
xchg
add
data16
add
add
add
add
or
xchg
add
or
add
or
xchg
add
cmp
in
add
or
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
in
add
or
xchg
add
les
fild
enter
or
xchg
add
ds
in
add
or
xchg
add
aas
lods
add
add
in
add
or
xchg
add
les
fild
loopne
add
add
xchg
sbb
pop
lods
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
lods
or
add
add
mov
sub
in
add
add
xchg
sbb
pop
lods
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
(bad)
or
add
add
mov
sub
or
add
add
xchg
sbb
pop
lods
add
add
in
add
or
xchg
add
add
out
add
or
xchg
ds
add
add
out
add
or
xchg
sbb
pop
lods
add
add
out
add
or
xchg
add
add
add
add
add
add
add
or
xchg
add
aas
call
out
add
or
xchg
ds
add
add
xchg
sbb
pop
lods
add
add
out
add
or
xchg
add
inc
add
out
add
or
xchg
add
add
out
add
or
xchg
add
les
clc
add
out
add
or
xchg
add
push
add
add
add
or
xchg
add
cmp
out
add
or
xchg
add
add
add
add
or
add
add
add
add
add
add
or
xchg
add
inc
push
add
add
add
or
xchg
add
inc
mov
cli
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
adc
add
sldt
add
adc
add
push
add
add
nop
adc
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
add
add
fwait
adc
add
add
add
add
adc
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
push
add
add
ret
add
add
add
add
sbb
add
add
add
add
sbb
add
add
add
add
sbb
add
add
add
add
sbb
add
add
add
add
sbb
add
add
add
add
sbb
add
add
add
add
sbb
add
add
add
add
sbb
add
add
add
add
sbb
add
add
add
add
sbb
add
add
add
add
sbb
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fisttp
add
add
in
sub
add
add
sub
add
add
sub
add
add
sub
add
add
sub
add
add
sub
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
add
add
inc
aas
add
add
inc
aas
add
add
dec
aas
add
add
add
add
add
add
cmp
add
add
inc
aas
add
add
inc
aas
add
add
dec
aas
add
add
add
add
add
pop
add
sub
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
sub
add
add
sub
add
add
push
add
add
fisttp
add
add
mov
add
add
fisttp
or
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
add
add
add
add
add
add
add
ds
add
add
or
add
ss
add
aas
or
add
add
add
add
dec
or
add
add
add
or
add
add
add
or
or
or
add
dec
or
add
ins
or
add
fwait
or
or
add
add
add
rol
push
or
or
or
or
rol
in
jo
fld
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
jle
int
and
jle
int
adc
jle
int
xor
jle
int
sub
jle
int
jns
add
or
add
add
cld
or
add
add
add
ds
add
dec
or
mov
imul
or
mov
add
add
add
or
ror
adc
add
add
add
add
add
sbb
push
test
inc
add
leave
add
adc
add
add
add
test
jmp
add
add
add
adc
add
sbb
dec
add
add
adc
add
add
add
add
add
add
adc
add
and
ins
add
add
add
add
adc
add
and
jg
add
xor
add
add
test
xchg
add
test
sbb
sbb
add
pushf
add
(bad)
add
or
or
add
or
add
add
adc
hlt
add
push
cmp
add
push
leave
add
add
add
jo
popa
add
add
add
add
push
mov
add
add
add
add
push
(bad)
add
sbb
les
rol
dec
pop
stos
push
xchg
add
add
add
add
add
push
mov
add
add
add
push
mov
add
add
add
loope
lock
add
add
stc
add
add
add
add
add
add
add
add
sbb
out
sbb
adc
add
(bad)
add
add
add
pop
mov
and
mov
mov
inc
and
pop
mov
pop
and
add
add
add
in
pop
sbb
dec
and
pop
jmp
pop
jmp
add
or
add
or
jmp
pop
jmp
pop
jmp
or
add
call
add
add
add
pop
add
add
cmp
cmp
and
leave
add
add
add
and
cmc
and
pop
cmp
dec
add
aas
or
outs
es
or
add
add
es
add
jmp
pop
or
add
add
add
add
es
add
add
arpl
icebp
add
add
daa
xchg
add
push
stc
add
sub
imul
mov
add
pushf
sub
es
add
sbb
pop
add
adc
sbb
sub
add
or
or
add
or
or
add
fisubr
fisttp
push
add
std
or
add
add
add
add
sub
or
add
sub
or
add
add
add
add
add
add
or
add
sub
fild
ds
add
add
or
jl
nop
or
add
add
xor
cs
or
add
add
or
fld
loop
mov
cmps
or
imul
lods
or
or
mov
stc
add
das
mov
stc
add
das
mov
add
add
ds
or
add
add
das
(bad)
add
arpl
mov
fld
ret
add
add
es
add
add
fisttp
sbb
mov
test
jns
xchg
das
cmp
add
add
adc
inc
xor
xor
xor
or
push
mov
xor
sub
or
or
or
or
or
add
add
add
xor
xor
xor
das
sbb
add
add
or
add
inc
add
xor
test
sbb
dec
xor
mov
xor
or
ds
or
add
push
or
add
dec
or
add
dec
or
add
das
sbb
sbb
loop
sbb
xor
mov
xor
or
add
xor
or
add
test
add
mov
add
xor
mov
cdq
or
add
add
add
ss
adc
adc
mov
add
add
add
lds
add
ss
or
add
ss
aaa
sbb
aaa
sbb
aaa
sbb
aaa
ror
add
aaa
ror
add
mov
in
mov
cmp
or
add
xor
cmp
sub
or
add
cmp
xor
or
add
das
dec
add
cmp
or
or
cdq
or
add
xor
or
or
push
or
sbb
cmp
xor
xchg
sbb
cmp
cmp
or
push
push
jmp
or
push
or
popa
or
addr16
jbe
stc
add
add
add
fnstcw
mov
lds
add
sub
or
sbb
test
or
out
or
test
push
or
adc
sbb
and
sub
xor
cmp
inc
add
dec
add
push
add
pop
add
popa
add
imul
mov
add
(bad)
add
add
or
add
add
add
add
add
add
add
add
add
arpl
add
sbb
add
jmp
add
add
add
add
add
add
add
add
add
add
jecxz
push
pusha
add
add
add
add
or
add
or
or
push
add
or
push
mov
jecxz
mov
mov
push
mov
add
add
add
add
push
test
push
rol
or
or
or
push
loopne
retf
or
or
pavgw
mov
add
or
or
or
push
add
imul
add
add
or
or
or
or
push
and
mov
lahf
add
add
or
or
or
or
push
inc
add
or
or
arpl
sti
or
or
or
or
or
imul
add
or
or
add
or
or
or
or
or
or
adc
add
or
or
mov
adc
add
or
ret
add
or
adc
add
or
jecxz
sbb
fst
add
adc
dec
adc
add
or
and
and
lahf
add
mov
add
add
or
add
or
add
mov
adc
add
add
or
mov
or
or
or
or
or
or
adc
mov
add
or
adc
add
adc
add
adc
add
or
adc
add
or
adc
add
and
inc
add
pusha
add
add
add
mov
push
rol
add
add
mov
push
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
adc
and
add
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
and
mov
lahf
add
mov
adc
adc
adc
adc
adc
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
adc
adc
adc
and
loopne
adc
and
and
adc
and
inc
xor
adc
adc
adc
and
inc
inc
adc
and
pusha
inc
adc
and
jnp
ins
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
adc
add
and
leave
add
enter
loop
in
add
add
add
add
cwde
add
add
add
add
add
add
add
add
add
add
add
sub
dec
push
pop
push
cwde
push
mov
into
push
test
cmp
inc
pop
popa
pop
jge
mov
xchg
pop
mov
or
or
or
jns
mov
or
or
or
or
or
or
or
push
add
add
add
add
add
add
or
or
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
add
add
mov
adc
add
xlat
add
js
add
jae
jle
add
imul
push
add
mov
add
mov
add
ficomp
or
add
add
add
add
add
add
add
add
or
add
and
add
add
add
add
add
add
sldt
add
adc
add
push
add
add
add
adc
add
pop
add
add
add
adc
add
add
add
pop
add
add
add
add
add
add
add
add
sbb
lahf
add
add
fiadd
inc
adc
add
add
inc
add
add
lea
pop
sbb
add
pop
ins
sbb
add
add
add
das
add
inc
add
add
das
add
add
cmc
add
xor
add
test
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
xor
add
add
add
pusha
or
dec
add
popa
or
dec
add
popa
or
push
add
or
push
add
or
push
add
or
push
add
add
popa
or
push
add
add
add
add
add
add
add
add
jbe
add
add
add
test
add
add
add
add
add
add
add
test
add
add
add
test
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
inc
add
test
add
add
add
test
add
add
add
movs
add
add
add
jmp
or
add
add
add
inc
add
gs
add
add
inc
add
sbb
add
add
add
xchg
lods
pop
add
add
add
add
dec
lods
pop
add
add
add
mov
add
test
add
push
add
add
add
add
add
add
add
add
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
adc
push
add
add
add
loop
add
adc
add
sldt
add
test
dec
orps
sub
pop
add
add
jb
ja
fld
cmps
add
add
cmps
add
add
add
jne
add
jne
add
add
outs
jae
jbe
inc
jae
gs
bound
outs
jo
jb
addr16
jb
bound
add
jae
gs
cs
gs
arpl
outs
add
arpl
ins
imul
jb
push
outs
imul
ins
add
jb
outs
add
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
outs
ins
jo
outs
jns
je
jb
bound
add
outs
ins
gs
outs
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jne
addr16
bound
je
jb
bound
add
jae
gs
cs
imul
imul
jne
imul
jae
inc
outs
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
je
xor
inc
jae
gs
bound
imul
imul
popa
jb
gs
jb
ins
gs
jb
inc
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
gs
imul
inc
jae
gs
bound
imul
outs
outs
inc
je
jb
bound
add
imul
jne
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
ins
push
imul
je
jb
bound
add
jo
jb
jae
dec
ins
fs
jae
inc
je
jb
bound
add
jae
ins
bound
gs
popa
ins
gs
je
jb
bound
add
jae
ins
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
gs
popa
jns
imul
imul
aaa
arpl
arpl
xor
sub
sub
sub
sub
bound
xor
data16
ja
outs
jae
jbe
gs
add
gs
dec
push
ins
inc
jno
xor
jne
cmp
dec
outs
inc
ss
aaa
aaa
jae
pop
pop
pop
push
dec
inc
dec
jne
data16
outs
bound
pop
push
je
cmp
add
arpl
jns
dec
dec
inc
cmp
inc
jo
popa
bound
dec
bound
arpl
push
arpl
jbe
inc
inc
push
jns
pop
inc
dec
ins
dec
add
js
je
jae
cmp
inc
jb
outs
aaa
dec
imul
outs
ja
inc
outs
jb
jae
jo
ins
imul
inc
popa
jae
add
arpl
jae
data16
push
imul
jae
arpl
inc
jo
ins
imul
push
gs
imul
arpl
jae
data16
push
imul
jae
arpl
outs
jb
xor
xor
push
imul
push
dec
push
push
xor
xor
outs
ins
jo
je
jb
dec
imul
je
push
imul
jae
arpl
inc
gs
arpl
add
jae
ss
dec
push
jbe
jns
dec
xor
dec
xor
imul
push
push
imul
push
jbe
dec
dec
ins
ins
add
jne
fs
jne
dec
dec
jae
outs
inc
add
dec
jb
pop
arpl
push
dec
outs
push
add
xor
inc
push
xor
push
xor
pop
pop
pop
pusha
xor
dec
outs
je
jb
popa
ins
pop
ins
ins
dec
gs
jo
jb
ja
outs
jae
jbe
dec
jns
push
gs
outs
jbe
dec
popa
ins
gs
popa
arpl
je
jb
bound
gs
ins
outs
jae
jb
add
dec
inc
pop
jne
inc
pop
pop
ss
pop
ja
ss
data16
push
xor
dec
push
dec
addr16
inc
xor
arpl
add
push
gs
imul
jo
imul
push
gs
imul
add
jae
gs
cs
outs
outs
imul
je
outs
outs
add
push
gs
imul
jo
jb
jns
outs
imul
addr16
inc
outs
jb
add
jae
gs
cs
imul
inc
outs
jb
jae
cmp
outs
fs
gs
inc
xor
cmp
cmp
sub
sub
sub
sub
inc
ss
inc
inc
inc
inc
jge
inc
xor
imul
jae
ja
popa
dec
fs
aaa
add
xor
ja
inc
jo
gs
ins
dec
dec
jno
push
inc
push
xor
bound
dec
jb
je
push
dec
outs
outs
data16
ins
je
arpl
je
gs
gs
je
add
inc
inc
xor
xor
data16
ja
add
imul
jne
xor
aaa
inc
dec
add
dec
popa
ins
jne
jbe
imul
outs
dec
add
je
imul
inc
inc
push
dec
dec
bound
cmp
dec
dec
push
gs
xor
gs
ja
inc
jae
dec
push
jns
xor
push
add
cmp
ins
dec
gs
popa
jae
data16
cmp
jp
popa
arpl
xor
inc
xor
xor
push
outs
dec
add
xor
inc
imul
dec
inc
xor
push
push
gs
add
ins
jne
push
jns
add
dec
gs
imul
dec
dec
imul
inc
outs
jne
add
jo
js
outs
ja
inc
inc
push
inc
ja
dec
jno
popa
inc
imul
cmp
jns
push
xor
dec
bound
ss
jno
dec
xor
push
inc
pop
pop
inc
pop
add
push
xor
bound
push
addr16
bound
arpl
add
push
gs
dec
push
js
jno
pop
cmp
dec
je
xor
xor
ss
ja
dec
push
jns
push
bound
cmp
jb
jbe
je
dec
ins
jo
gs
outs
je
je
outs
outs
inc
gs
imul
inc
cmp
cmp
aaa
aaa
inc
xor
sub
sub
cmp
inc
xor
xor
pop
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
pop
pop
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
pop
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
pop
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
pop
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
pop
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
pop
push
je
je
arpl
jb
jns
outs
imul
jp
cmp
arpl
outs
jb
imul
fs
dec
bound
dec
imul
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
push
gs
imul
gs
outs
arpl
inc
push
dec
pop
gs
inc
push
and
dec
outs
outs
imul
je
ins
cs
push
imul
gs
addr16
dec
je
ins
add
je
dec
je
ins
add
add
bound
pop
jne
aaa
add
je
push
jae
inc
outs
ins
jo
je
bound
gs
push
outs
fs
outs
add
jo
imul
add
je
outs
ins
jo
je
bound
gs
push
outs
fs
outs
addr16
gs
jne
je
push
jne
add
inc
jb
popa
je
dec
popa
imul
push
push
pop
addr16
dec
cmp
ins
push
js
inc
dec
dec
add
dec
push
imul
xor
cmp
xor
push
jbe
popa
push
pop
dec
jno
push
outs
dec
inc
push
push
dec
jbe
add
je
inc
outs
jne
je
ins
xor
cmp
push
dec
dec
push
dec
jne
dec
dec
ins
add
je
inc
popa
jo
arpl
jns
ja
dec
xor
outs
imul
xor
push
pop
dec
jae
ins
imul
ja
inc
fs
push
xor
dec
xor
jb
push
add
ins
outs
jbe
push
popa
outs
add
xor
xor
cmp
inc
dec
js
outs
dec
xor
add
je
inc
popa
jo
arpl
jns
push
inc
dec
inc
xor
pop
xor
ins
imul
pop
add
outs
je
ins
gs
gs
jo
jb
add
je
bound
arpl
ins
jne
add
jno
pop
fs
push
arpl
jne
pop
aaa
xor
add
imul
popa
outs
push
xor
push
dec
jb
push
ins
add
je
outs
je
arpl
imul
add
push
dec
dec
push
xor
dec
popa
js
push
jb
ja
jbe
dec
push
outs
outs
outs
ins
outs
popa
gs
jo
dec
add
je
dec
jae
imul
jae
popa
outs
arpl
dec
push
push
jo
fs
outs
gs
xor
pop
je
outs
xor
jae
je
inc
outs
popa
bound
imul
jns
gs
inc
pop
addr16
push
xor
js
jb
je
imul
push
popa
jbe
dec
jns
gs
imul
js
je
push
xor
ins
xor
xor
jo
push
add
jne
outs
ja
dec
outs
fs
je
push
push
ja
push
je
ins
add
xor
xor
popa
xor
ins
inc
xor
jo
add
inc
inc
ins
push
inc
push
xor
arpl
pop
dec
inc
ja
push
jbe
push
xor
xor
jne
inc
push
pop
add
je
dec
popa
imul
push
jne
imul
push
dec
inc
xor
inc
pop
dec
push
push
dec
push
push
outs
fs
dec
jb
gs
jno
jae
jbe
xor
xor
xor
gs
dec
js
jbe
push
dec
xor
push
inc
dec
outs
push
add
inc
inc
push
imul
inc
xor
bound
dec
inc
add
ins
xor
xor
gs
push
imul
imul
dec
dec
dec
xor
push
dec
add
gs
fs
js
inc
add
dec
inc
aaa
dec
imul
ins
dec
ss
inc
imul
inc
push
push
jns
xor
dec
ins
xor
inc
ins
add
dec
outs
dec
outs
cmp
add
dec
xor
arpl
inc
xor
push
addr16
push
push
jae
dec
jne
imul
push
push
imul
push
dec
inc
gs
cmp
imul
push
dec
add
imul
add
xor
xor
gs
inc
cmp
xor
inc
dec
xor
js
inc
jns
add
dec
xor
addr16
xor
dec
xor
inc
pop
jb
push
fs
inc
dec
dec
inc
outs
push
add
jae
je
bound
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
jae
xor
ss
je
add
dec
cmp
push
je
inc
jb
jne
outs
je
js
gs
imul
pop
jbe
xor
add
cmp
js
je
ss
jo
pop
dec
aaa
imul
gs
arpl
dec
data16
push
inc
jb
push
inc
dec
dec
ins
outs
add
addr16
outs
jbe
arpl
imul
jo
imul
je
outs
ins
add
je
dec
jae
imul
add
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
outs
je
imul
push
je
ins
jae
dec
imul
je
push
imul
jae
arpl
inc
outs
ins
jo
ins
gs
gs
imul
je
gs
jne
arpl
je
imul
popa
ins
imul
imul
jo
imul
imul
inc
jb
popa
je
dec
outs
jae
popa
outs
arpl
push
jb
push
arpl
je
add
je
jb
push
arpl
jb
jb
inc
js
gs
imul
pop
dec
outs
outs
gs
js
gs
imul
pop
dec
gs
popa
add
gs
jb
jb
push
arpl
jb
jb
push
gs
outs
jbe
add
popa
js
js
add
bound
dec
inc
je
push
ja
jns
aaa
bound
add
ins
jo
outs
outs
je
push
jns
je
ins
cs
outs
ins
jo
outs
outs
je
outs
fs
add
jo
jae
add
jne
ins
jae
inc
gs
popa
jae
inc
outs
fs
jno
inc
xor
push
outs
push
je
imul
dec
push
jno
gs
cmp
inc
push
je
jb
dec
dec
ins
inc
ins
pop
xor
pop
jo
imul
add
ins
data16
pop
dec
outs
xor
outs
aaa
addr16
jo
xor
dec
inc
xor
push
push
dec
imul
xor
outs
inc
xor
addr16
pop
jb
xor
dec
xor
inc
jns
add
jns
jns
jae
dec
jo
xor
xor
popa
add
inc
arpl
ins
bound
jne
pop
js
pop
inc
imul
dec
push
jno
jb
dec
push
push
inc
dec
pop
cmp
add
imul
push
jno
push
jae
ins
push
inc
je
push
push
outs
push
ss
add
je
pop
dec
dec
push
push
jns
je
pop
dec
inc
je
jo
push
cmp
inc
dec
inc
add
push
ins
arpl
ins
add
outs
jb
jns
pop
push
inc
imul
xor
dec
imul
xor
inc
jns
dec
jae
dec
add
aaa
push
cmp
jns
add
jbe
cmp
xor
dec
push
dec
ins
imul
push
js
xor
xor
ins
xor
push
bound
jo
add
fs
jo
inc
jae
push
outs
popa
inc
push
add
je
js
addr16
push
dec
je
jo
xor
add
inc
dec
outs
outs
push
ss
xor
push
aaa
arpl
dec
add
addr16
xor
xor
xor
imul
push
add
push
jne
xor
push
inc
dec
push
inc
add
outs
je
xor
imul
fs
pop
add
jb
outs
pop
inc
pop
outs
push
inc
jae
inc
dec
pop
push
outs
xor
inc
inc
push
dec
push
xor
dec
inc
dec
dec
inc
add
outs
jne
xor
push
aaa
jno
cmp
dec
push
inc
jno
pop
xor
push
jbe
push
xor
je
jns
dec
push
push
fs
imul
popa
jb
aaa
jb
xor
dec
push
inc
outs
imul
jo
inc
pop
inc
xor
aaa
imul
push
pop
dec
dec
dec
add
je
push
popa
ins
jne
add
outs
jne
gs
bound
xor
pop
inc
ins
gs
outs
je
push
jns
je
ins
cs
ins
ins
cs
imul
jb
add
outs
jne
gs
je
jb
xor
inc
gs
outs
jne
gs
je
jb
addr16
inc
jne
jb
outs
je
dec
inc
outs
jne
gs
je
jb
dec
outs
jbe
dec
gs
add
imul
ins
add
je
push
popa
ins
jne
add
ins
jne
add
je
inc
je
jb
bound
gs
popa
ins
jne
add
popa
ins
add
ins
add
je
jb
bound
add
pop
inc
js
ins
imul
je
inc
je
jb
bound
gs
popa
ins
jne
add
je
je
jb
bound
gs
popa
ins
jne
add
gs
je
inc
je
jb
bound
add
gs
je
dec
popa
ins
gs
popa
arpl
je
jb
bound
add
popa
ins
gs
popa
arpl
outs
jae
push
gs
outs
jbe
dec
popa
ins
gs
popa
arpl
je
jb
bound
gs
imul
push
jb
imul
imul
dec
jae
popa
je
jb
bound
gs
outs
bound
dec
inc
outs
jne
gs
bound
inc
jne
arpl
add
je
je
add
jne
gs
bound
push
jns
je
ins
cs
imul
je
ins
cs
outs
jb
add
ins
arpl
popa
jae
add
addr16
inc
imul
jb
bound
add
je
dec
gs
inc
je
jb
bound
add
je
dec
jae
popa
ins
gs
popa
arpl
arpl
popa
je
outs
outs
add
bound
arpl
outs
outs
outs
je
je
outs
outs
add
je
dec
popa
ins
add
je
dec
outs
arpl
dec
popa
ins
add
pop
inc
jno
popa
ins
imul
inc
jb
jo
outs
ins
push
push
jae
inc
jb
add
push
gs
imul
dec
inc
xor
push
dec
push
fs
inc
push
inc
ins
cmp
push
push
push
js
add
xor
jo
arpl
push
aaa
dec
arpl
push
dec
jae
jne
pop
pop
xor
ins
pop
dec
cmp
pop
cmp
jne
dec
inc
inc
dec
jbe
push
pop
jne
jb
dec
pop
jno
add
arpl
outs
inc
cmp
push
jno
ins
jo
outs
add
imul
ss
dec
cmp
inc
push
push
ins
jae
push
push
imul
jb
ins
imul
gs
dec
popa
ins
gs
popa
arpl
popa
ins
add
push
jno
dec
dec
push
pop
add
fs
outs
outs
outs
je
je
outs
outs
add
ins
jne
add
je
imul
ins
jne
add
imul
push
jb
imul
ins
pop
imul
dec
jae
ins
pop
popa
je
jb
bound
gs
push
jb
arpl
jae
inc
ins
gs
outs
je
gs
gs
add
outs
arpl
jae
bound
arpl
ja
ss
pop
inc
outs
ins
jb
push
outs
dec
xor
arpl
inc
push
push
xor
inc
inc
add
bound
jbe
imul
inc
xor
jb
add
xor
cmp
push
add
jae
jne
arpl
popa
outs
popa
addr16
push
jns
je
ins
cs
gs
jne
arpl
add
je
inc
jae
gs
bound
inc
jae
gs
bound
addr16
imul
je
jb
dec
outs
outs
add
jae
gs
cs
ins
outs
bound
imul
add
dec
xor
inc
push
dec
add
dec
dec
push
je
dec
inc
add
outs
ja
xor
inc
add
je
add
dec
pop
gs
dec
inc
jb
jae
pop
imul
dec
add
data16
outs
arpl
jno
popa
ins
jae
push
jne
push
xor
inc
push
jno
ss
ins
arpl
push
add
push
pop
push
jns
aaa
imul
push
inc
inc
jno
add
dec
ins
addr16
dec
pop
bound
outs
popa
jb
jo
inc
popa
add
outs
push
pop
inc
js
jb
xor
inc
push
add
inc
push
pop
outs
dec
dec
push
pop
inc
pop
fs
jne
dec
outs
dec
outs
cmp
pop
xor
jae
inc
xor
push
add
je
je
imul
xor
dec
dec
imul
push
add
je
bound
arpl
inc
arpl
ja
dec
fs
dec
fs
js
je
add
dec
dec
inc
popa
addr16
arpl
pop
push
ss
xor
fs
jne
je
outs
jae
popa
outs
arpl
popa
fs
popa
outs
fs
gs
popa
fs
popa
outs
fs
gs
outs
arpl
bound
arpl
jne
outs
push
popa
jbe
push
gs
imul
outs
fs
inc
jbe
outs
je
jb
jae
addr16
inc
gs
jne
je
push
push
ja
inc
jbe
outs
je
popa
outs
fs
gs
push
jne
push
inc
jne
dec
push
outs
jne
aaa
xor
jae
pop
inc
push
je
pushw
ins
dec
inc
push
js
xor
add
je
imul
add
outs
arpl
outs
outs
imul
xor
inc
pop
dec
js
popa
jns
dec
jns
xor
jbe
imul
jo
inc
pop
xor
je
dec
push
data16
inc
jo
cmp
jno
push
pop
jo
jns
push
arpl
inc
push
dec
outs
cmp
imul
push
js
pop
cmp
dec
inc
dec
push
inc
aaa
imul
inc
inc
js
jno
dec
xor
dec
dec
ss
push
add
je
push
popa
jbe
dec
jns
gs
imul
js
je
dec
push
push
ss
push
add
data16
xor
addr16
push
push
imul
popa
jbe
add
cmp
dec
inc
jns
push
popa
dec
dec
jae
ss
inc
add
push
arpl
outs
ja
outs
outs
je
outs
ins
add
arpl
outs
jb
jns
arpl
imul
popa
ins
jne
push
jns
add
dec
xor
dec
je
inc
dec
dec
inc
inc
xor
pop
fs
add
fs
push
push
ja
add
je
arpl
jno
je
dec
popa
dec
push
inc
inc
inc
add
popa
jne
je
addr16
push
gs
imul
push
jbe
ins
dec
push
dec
inc
je
dec
xor
jae
jb
dec
xor
push
inc
outs
dec
fs
dec
push
arpl
cmp
dec
imul
inc
push
dec
jne
dec
add
je
imul
push
pop
jno
ja
outs
add
ss
xor
imul
dec
inc
outs
outs
je
imul
xor
dec
ja
ja
add
gs
push
jo
pop
inc
push
add
gs
add
js
ins
xor
add
inc
pop
ss
dec
arpl
inc
imul
dec
dec
imul
imul
cmp
js
push
pop
inc
xor
push
add
popa
pop
push
bound
inc
jbe
ins
xor
pop
ins
ins
gs
arpl
inc
dec
pop
bound
inc
inc
arpl
push
bound
dec
outs
inc
popa
ins
push
jne
outs
pop
pop
bound
xor
add
jo
popa
ss
js
jns
push
dec
pop
pop
jo
outs
cmp
add
jbe
xor
jno
xor
push
addr16
dec
js
jne
pop
add
push
pop
dec
xor
xor
jns
dec
pop
inc
push
inc
ss
add
dec
pop
cmp
pop
xor
xor
push
inc
cmp
push
jo
push
xor
add
gs
jae
outs
xor
push
push
dec
xor
gs
push
imul
jbe
outs
je
popa
outs
fs
gs
pop
xor
jne
jo
push
push
add
jo
jae
outs
add
push
push
add
imul
je
ins
cs
jb
ja
outs
add
jp
add
jp
inc
add
outs
ins
add
outs
je
imul
imul
push
add
imul
imul
je
inc
jbe
outs
je
push
popa
ins
jne
add
xor
xor
popa
dec
inc
imul
xor
jae
imul
jns
xor
jb
dec
imul
cmp
add
xor
js
inc
jns
add
dec
imul
cmp
add
dec
imul
addr16
xor
imul
aaa
inc
ins
add
xor
dec
bound
dec
inc
add
imul
xor
outs
imul
push
dec
imul
dec
dec
imul
push
dec
add
push
imul
dec
add
imul
js
add
jno
jbe
xor
jae
xor
ss
je
add
imul
inc
push
push
je
push
inc
imul
inc
inc
pop
jb
push
fs
imul
inc
outs
push
add
push
imul
inc
dec
inc
add
imul
js
ins
add
aaa
imul
dec
jns
add
dec
imul
imul
ins
ss
imul
je
jno
add
jae
inc
push
jbe
push
xor
imul
jp
dec
imul
addr16
arpl
addr16
jo
dec
xor
ja
dec
imul
inc
push
dec
add
imul
push
xor
jae
dec
imul
cmp
add
dec
imul
inc
inc
dec
add
outs
imul
push
add
push
cmp
add
bound
jbe
imul
imul
bound
add
xor
push
jo
push
push
add
push
imul
inc
je
add
inc
imul
push
push
pop
add
je
js
inc
gs
add
inc
outs
outs
imul
add
outs
je
xor
push
outs
fs
gs
popa
add
gs
xor
fs
ins
add
je
pop
inc
gs
add
outs
fs
imul
add
gs
fs
imul
outs
fs
imul
gs
xor
add
ins
imul
gs
add
push
gs
dec
dec
cmp
push
inc
imul
push
imul
jns
dec
imul
je
push
imul
outs
popa
jb
push
jb
je
jb
push
jns
je
ins
cs
dec
add
jb
popa
ins
add
imul
jne
jb
outs
je
jae
jb
dec
bound
jae
push
add
push
cmp
add
fs
cmp
inc
pop
add
outs
push
push
push
push
bound
inc
xor
jne
xor
jns
dec
pop
pop
arpl
push
outs
pop
add
jb
popa
ins
push
jb
je
jb
dec
jae
jb
arpl
jae
jne
outs
imul
arpl
jae
inc
jno
inc
imul
jb
imul
jae
fs
add
push
inc
dec
xor
imul
push
add
jbe
jo
cmp
add
bound
inc
cmp
add
arpl
outs
jb
jo
popa
je
add
bound
imul
jae
gs
cs
gs
push
gs
pop
xor
inc
jne
add
je
inc
jb
popa
je
push
popa
jb
ins
jae
inc
jb
popa
je
push
popa
jb
ins
jae
je
inc
pop
pop
xor
jno
add
ss
dec
popa
pop
bound
add
inc
pop
imul
pop
push
add
ja
push
push
add
pop
pop
jb
arpl
push
push
jno
xor
ins
dec
outs
pop
inc
push
jno
pop
dec
ins
inc
xor
dec
dec
dec
push
cmp
dec
xor
jns
pop
xor
add
xor
dec
cmp
ja
outs
outs
dec
outs
push
dec
xor
push
outs
cmp
gs
push
dec
jbe
dec
push
xor
add
popa
push
dec
dec
xor
inc
outs
jns
jns
outs
xor
add
fs
dec
outs
popa
add
push
imul
jno
jns
pop
xor
imul
bound
push
xor
push
push
inc
inc
push
inc
ins
add
arpl
ins
inc
outs
ins
fs
inc
outs
jbe
jb
outs
ins
outs
je
inc
gs
outs
ins
fs
popa
je
add
dec
xor
cmp
pop
jb
push
jo
push
arpl
add
push
push
dec
push
dec
jae
push
data16
push
dec
push
fs
add
dec
outs
inc
push
dec
ins
outs
xor
xor
xor
bound
dec
dec
cmp
inc
dec
push
xor
aaa
xor
dec
je
add
jb
ins
xor
outs
cmp
xor
add
push
push
inc
jns
dec
jae
pop
inc
inc
push
jbe
push
push
popa
add
ins
popa
push
arpl
push
ss
xor
xor
inc
outs
inc
add
jno
ins
inc
dec
push
inc
xor
xor
ss
xor
inc
inc
arpl
ja
inc
dec
xor
push
inc
ja
add
outs
dec
push
jns
inc
outs
push
cmp
xor
xor
dec
push
gs
arpl
xor
dec
imul
xor
jb
jae
xor
inc
push
dec
add
dec
pop
xor
dec
push
dec
xor
inc
jae
inc
dec
gs
ja
outs
dec
inc
ja
js
push
imul
je
add
data16
imul
ins
inc
push
imul
add
xor
dec
dec
xor
imul
push
pop
add
xor
push
dec
jns
dec
push
ss
js
arpl
add
pop
xor
ss
xor
je
pop
push
imul
ins
jbe
xor
push
push
ins
dec
aaa
ins
inc
dec
push
jae
data16
xor
dec
dec
jb
ins
dec
push
push
push
jno
dec
jne
push
xor
xor
push
jo
arpl
jne
push
add
ja
addr16
inc
push
imul
jo
bound
bound
jae
dec
popa
push
pop
push
xor
push
arpl
pop
add
inc
dec
dec
jns
jbe
push
dec
push
xor
add
dec
fs
dec
dec
outs
imul
jb
jb
imul
imul
push
inc
dec
ss
fs
popa
push
imul
outs
add
dec
inc
jb
dec
imul
dec
push
ss
popa
inc
add
push
cmp
jp
push
pop
inc
popa
xor
arpl
add
xor
dec
pop
dec
xor
push
outs
ins
xor
add
dec
arpl
dec
addr16
push
arpl
inc
xor
add
ins
gs
xor
dec
dec
dec
jns
inc
outs
pop
addr16
push
add
inc
outs
dec
pop
pop
jne
jno
ja
gs
bound
inc
aaa
add
imul
pop
inc
inc
dec
js
jne
jns
inc
data16
push
jne
jo
outs
fs
popa
jns
jne
add
dec
push
dec
pop
cmp
gs
imul
dec
ins
addr16
aaa
push
ins
addr16
push
bound
pop
inc
push
add
je
dec
outs
je
jb
popa
ins
add
ss
push
imul
inc
gs
push
popa
dec
ins
jns
imul
inc
push
dec
outs
pop
pop
ss
ss
pop
push
xor
push
add
je
inc
jne
outs
push
imul
jns
je
imul
aaa
push
inc
push
cmp
jae
je
dec
outs
arpl
imul
outs
dec
arpl
dec
push
xor
dec
js
jae
je
dec
popa
ins
add
inc
inc
jo
pop
jo
jno
inc
outs
xor
push
add
je
push
imul
jne
pop
bound
inc
xor
ss
add
je
push
popa
bound
fs
push
je
addr16
fs
je
push
inc
add
je
push
gs
add
xor
pop
pop
push
inc
push
inc
inc
push
push
inc
pop
add
dec
js
pop
pop
js
push
jae
push
aaa
jo
dec
inc
dec
add
xor
pop
outs
push
push
outs
pop
push
jbe
push
inc
push
add
dec
push
inc
dec
arpl
dec
push
ins
inc
cmp
data16
jns
xor
xor
jbe
pop
add
ins
push
imul
dec
fs
imul
ja
push
popa
inc
inc
push
dec
pop
inc
xor
push
bound
dec
push
dec
ins
data16
dec
xor
inc
pop
inc
dec
push
inc
je
cmp
jo
jns
pop
inc
ins
xor
js
push
jbe
jbe
push
dec
dec
jo
dec
gs
pop
arpl
bound
jbe
push
data16
xor
xor
inc
dec
bound
ins
xor
jne
je
push
inc
pop
jb
xor
jns
dec
je
add
inc
cmp
pop
push
cmp
dec
cmp
add
jno
push
jbe
dec
inc
jns
data16
inc
inc
aaa
push
popa
add
xor
js
cmp
push
jb
jo
dec
jns
dec
add
push
push
inc
pop
gs
push
jne
arpl
inc
outs
ins
push
add
dec
xor
push
push
push
imul
popa
add
jno
inc
push
pop
xor
jb
push
push
dec
ins
pop
dec
add
ja
dec
inc
pop
dec
inc
inc
popa
inc
push
popa
bound
imul
popa
imul
je
outs
ins
add
je
inc
jne
outs
push
arpl
gs
imul
outs
jae
push
jno
push
dec
push
pop
push
jae
cmp
xor
dec
add
je
push
arpl
gs
outs
fs
je
inc
jne
outs
push
arpl
gs
outs
fs
dec
pop
push
gs
jb
dec
jo
gs
xor
jae
je
inc
ins
imul
add
jae
xor
pop
pop
inc
ss
inc
jns
push
add
je
inc
outs
outs
je
outs
ins
inc
outs
js
push
ss
imul
ins
ja
inc
ss
xor
je
dec
add
je
inc
outs
outs
je
outs
ins
jae
inc
outs
outs
je
outs
ins
inc
outs
ins
ins
arpl
outs
add
inc
cmp
pop
push
js
push
dec
gs
xor
add
push
ins
dec
xor
fs
gs
add
je
dec
popa
js
ins
jne
push
imul
cmp
dec
push
jns
xor
push
pop
inc
push
add
je
dec
imul
imul
pop
push
push
dec
ins
xor
xor
inc
outs
jne
ins
add
je
dec
jo
arpl
jns
gs
ins
aaa
push
imul
xor
popa
outs
add
je
push
push
outs
outs
add
push
gs
pop
ja
push
js
addr16
dec
outs
inc
jbe
jae
je
push
push
push
popa
jae
bound
add
jae
aaa
dec
pop
inc
xor
dec
xor
dec
xor
push
gs
ins
gs
popa
jns
jne
add
push
jno
pop
arpl
pushw
fs
pop
data16
push
gs
outs
jb
dec
popa
jns
jne
add
pop
xor
xor
inc
fs
ins
jns
push
jb
add
ins
outs
jbe
pop
push
imul
xor
push
jns
xor
addr16
dec
xor
popa
fs
push
imul
dec
cmp
xor
aaa
je
inc
pop
ja
jae
je
inc
outs
popa
bound
add
arpl
push
pop
push
popa
xor
cmp
dec
cmp
add
outs
jbe
jb
imul
dec
cmp
pop
xor
push
xor
xor
push
jb
push
push
dec
dec
xor
dec
push
bound
inc
dec
push
outs
push
jne
dec
gs
inc
dec
cmp
xor
inc
gs
inc
je
jno
addr16
add
je
push
jb
fs
je
popa
ins
add
push
ins
xor
pop
push
ins
popa
push
pop
push
push
inc
imul
je
inc
js
arpl
popa
bound
popa
je
add
xor
dec
dec
fs
push
xor
push
push
gs
popa
ins
jne
add
pop
inc
jne
pop
dec
imul
imul
imul
je
add
cmp
pop
inc
push
push
imul
xor
ins
inc
outs
add
arpl
jns
inc
jb
popa
je
inc
imul
jns
inc
imul
jns
outs
outs
add
dec
pop
ss
pop
popa
outs
imul
push
push
jbe
inc
jb
popa
je
add
ins
gs
je
gs
ins
add
cmp
pop
jbe
push
outs
dec
push
push
jae
inc
push
add
inc
inc
xor
gs
pop
dec
inc
inc
dec
ja
bound
add
imul
cmp
ss
inc
dec
imul
ss
inc
jno
add
outs
jae
add
dec
bound
pop
imul
pop
jbe
inc
xor
add
ins
gs
je
jb
bound
gs
push
gs
je
jb
bound
gs
push
ss
xor
inc
arpl
jae
jne
bound
inc
push
imul
jne
inc
arpl
ins
gs
xor
dec
gs
dec
jb
dec
js
xor
push
dec
inc
push
push
add
je
dec
gs
imul
dec
inc
inc
jne
pop
arpl
gs
push
ins
dec
inc
dec
inc
push
jne
bound
gs
pop
js
ja
dec
add
gs
jne
dec
ss
push
pop
xor
add
je
jb
arpl
jae
jae
jbe
push
cmp
pop
inc
jno
push
cmp
arpl
addr16
push
jb
arpl
jae
popa
ins
add
outs
xor
xor
arpl
imul
je
jb
jae
imul
pop
push
jne
inc
dec
inc
outs
push
xor
pop
cmp
popa
cmp
js
jne
inc
outs
ins
outs
dec
dec
ja
jns
add
popa
jb
add
cmp
inc
jne
push
push
jno
push
ins
cmp
push
xor
inc
outs
ja
ins
outs
popa
fs
je
imul
dec
push
jo
fs
xor
dec
addr16
add
gs
je
jb
add
ins
jo
jb
push
je
imul
inc
imul
dec
dec
inc
push
jns
inc
dec
data16
inc
outs
fs
jo
add
outs
aaa
push
jne
bound
dec
dec
ins
dec
ja
jno
add
dec
inc
jae
jne
xor
ins
fs
push
push
data16
jb
gs
outs
ins
jo
je
jb
addr16
dec
gs
outs
jb
add
je
outs
jb
add
xor
pop
dec
outs
outs
data16
dec
push
aaa
inc
add
je
dec
jae
jbe
imul
xor
jne
push
cmp
imul
xor
add
push
inc
inc
outs
jne
jb
jne
je
jno
dec
push
pop
add
xor
xor
aaa
outs
fs
fs
pop
ins
imul
gs
inc
ins
popa
jae
push
je
ins
add
inc
ins
xor
dec
push
push
xor
push
dec
dec
cmp
jae
je
inc
ins
popa
jae
push
je
ins
add
gs
xor
dec
inc
inc
pop
dec
pop
imul
xor
inc
dec
pop
pop
arpl
je
jo
ins
fs
inc
imul
outs
add
je
outs
fs
outs
outs
add
je
imul
push
dec
push
ja
jne
pop
push
dec
dec
inc
ins
aaa
inc
fs
inc
add
fs
add
jae
ins
jbe
push
jns
add
xor
xor
pop
arpl
push
jb
push
inc
dec
xor
bound
dec
outs
outs
add
je
dec
gs
fs
je
push
outs
imul
inc
jo
dec
push
inc
jne
xor
jo
imul
js
imul
gs
ins
jbe
dec
gs
outs
add
je
outs
fs
popa
jae
add
cmp
aaa
ss
push
pop
outs
je
dec
data16
inc
add
gs
je
add
gs
je
inc
gs
gs
je
add
bound
jb
jbe
jno
jbe
addr16
push
add
je
cmp
inc
xor
cmp
jae
popa
push
add
xor
jno
je
dec
xor
push
addr16
push
inc
inc
bound
pop
push
dec
jb
inc
inc
push
xor
add
dec
xor
dec
jne
js
ja
push
inc
xor
inc
dec
add
jns
push
arpl
jno
gs
push
data16
jb
popa
push
js
jne
xor
dec
imul
push
jb
pop
ins
je
xor
dec
push
ins
dec
push
dec
xor
dec
push
push
add
je
dec
popa
outs
imul
fs
add
push
arpl
gs
outs
add
jbe
imul
add
imul
add
jae
outs
arpl
jae
ins
je
inc
jae
outs
arpl
ins
ins
bound
imul
popa
ins
ins
bound
imul
outs
fs
outs
jbe
imul
gs
ins
je
dec
cmp
xor
add
pop
dec
dec
inc
xor
arpl
dec
addr16
push
push
push
push
outs
imul
dec
add
jbe
popa
push
xor
add
gs
dec
inc
inc
bound
jne
jbe
push
ins
xor
add
outs
dec
inc
dec
push
push
gs
dec
push
inc
addr16
add
pop
dec
pop
fs
push
jne
push
js
dec
jbe
cmp
jo
outs
push
inc
dec
xor
push
xor
jb
cmp
pop
jbe
xor
add
push
dec
inc
inc
dec
imul
add
push
dec
jo
xor
jbe
dec
xor
inc
xor
imul
dec
cmp
addr16
imul
dec
dec
push
dec
dec
je
outs
gs
dec
ja
push
xor
fs
inc
dec
pop
inc
bound
add
xor
xor
xor
add
dec
dec
push
aaa
dec
ja
push
add
ss
cmp
pop
js
inc
popa
dec
dec
inc
dec
pop
dec
add
imul
push
add
jns
xor
cmp
add
inc
dec
dec
dec
ja
ja
add
je
xor
jns
arpl
push
add
imul
inc
jb
popa
jns
inc
jb
popa
jns
push
jne
je
ins
gs
imul
fs
add
jb
gs
imul
pop
inc
dec
pop
dec
js
jne
xor
inc
xor
pop
push
dec
push
dec
push
add
outs
je
xor
inc
imul
je
jb
inc
gs
jns
gs
inc
outs
jo
add
push
ja
imul
xor
add
pop
dec
cmp
jne
dec
add
ja
cmp
dec
xor
add
pop
xor
jo
ins
add
bound
ja
bound
add
inc
pop
dec
inc
outs
jo
dec
add
pop
pop
jae
jb
dec
inc
add
ins
ins
gs
imul
imul
je
ins
cs
arpl
imul
je
addr16
jo
jns
inc
gs
jb
jo
outs
push
gs
imul
imul
outs
fs
gs
dec
popa
outs
popa
gs
push
arpl
outs
fs
add
jae
gs
cs
jne
je
ins
gs
gs
outs
je
outs
add
ja
popa
jo
outs
dec
push
ja
dec
jne
push
add
jns
je
inc
outs
outs
imul
je
inc
ins
ins
outs
ja
outs
ins
jns
imul
jb
je
ins
jae
gs
ins
pop
pop
inc
arpl
dec
add
xor
je
push
gs
imul
imul
push
jb
je
ins
add
ins
jo
je
dec
popa
jae
add
dec
pop
aaa
jae
inc
inc
dec
add
outs
popa
jb
push
gs
fs
dec
inc
jb
jo
outs
push
jb
outs
jae
outs
jb
add
ins
outs
jb
push
je
gs
ins
add
jns
je
push
je
gs
ins
add
je
popa
outs
imul
jae
jne
arpl
je
gs
ins
add
je
inc
popa
jae
push
je
gs
ins
add
je
push
outs
jae
je
outs
outs
add
inc
inc
jb
jo
outs
push
gs
imul
imul
pop
push
jae
dec
popa
arpl
outs
gs
gs
je
jb
add
je
dec
outs
addr16
add
popa
fs
jns
gs
inc
gs
popa
ins
add
jae
ins
bound
popa
ins
add
je
jne
ins
imul
imul
jae
je
dec
outs
fs
jo
gs
outs
fs
gs
je
inc
arpl
jo
outs
jb
inc
jb
jo
outs
push
je
gs
ins
dec
outs
fs
jne
push
ins
inc
ins
outs
arpl
push
outs
inc
jb
popa
jns
push
outs
dec
outs
je
xor
inc
xor
pop
push
jb
ja
pop
outs
inc
ins
jno
aaa
add
ins
add
outs
jbe
jb
add
outs
ins
inc
popa
jae
ss
je
imul
outs
imul
je
ins
cs
gs
add
je
push
outs
imul
dec
imul
bound
push
add
ins
pop
gs
dec
gs
outs
jb
add
jb
gs
xor
cs
ins
add
ins
pop
addr16
dec
ins
inc
aaa
add
jb
jne
ins
push
jb
je
arpl
dec
gs
gs
outs
jo
add
outs
fs
gs
jne
arpl
inc
jne
pop
imul
push
imul
ins
ins
outs
arpl
fs
dec
pop
je
push
xor
add
je
push
imul
jae
popa
ins
add
popa
fs
outs
je
xor
push
gs
fs
outs
je
xor
inc
ins
ins
outs
arpl
push
popa
jae
dec
gs
add
imul
jb
push
jb
je
dec
outs
je
xor
ins
pop
jno
xor
inc
add
pop
pop
dec
xor
jb
add
pop
pop
push
jb
ss
add
je
gs
outs
add
dec
pop
fs
outs
dec
inc
jb
push
gs
imul
arpl
jae
outs
fs
gs
outs
ins
ins
arpl
outs
add
outs
arpl
jae
outs
fs
add
outs
je
xor
dec
outs
fs
gs
popa
outs
fs
add
je
imul
outs
imul
jae
inc
gs
jns
add
xor
cmp
popa
add
je
dec
outs
arpl
imul
pop
inc
outs
fs
popa
jae
add
jo
popa
arpl
inc
gs
jb
jo
jb
jns
push
jb
jo
jb
jns
outs
outs
add
je
popa
ins
jne
add
dec
pop
inc
xor
add
fs
imul
dec
push
dec
ja
arpl
inc
gs
jb
arpl
fs
jae
add
inc
pop
inc
imul
jb
je
push
jb
arpl
jae
gs
outs
jb
add
push
pop
push
inc
dec
imul
add
popa
fs
jb
arpl
jae
gs
outs
jb
add
jne
jns
jns
inc
ins
add
ss
jp
xor
xor
dec
jo
outs
push
jb
arpl
jae
xor
dec
xor
jo
push
outs
jae
dec
popa
outs
fs
add
aaa
dec
pop
jae
inc
fs
add
ins
gs
outs
fs
ins
gs
arpl
jae
add
ins
gs
push
push
gs
add
dec
dec
dec
jbe
push
xor
jae
je
dec
gs
jae
je
dec
push
add
xor
ins
outs
jno
dec
add
imul
xor
dec
inc
xor
aaa
inc
ins
jbe
add
ja
jno
dec
inc
dec
inc
add
dec
dec
xor
xor
push
dec
push
outs
jne
aaa
aaa
add
ins
dec
inc
xor
push
jne
fs
dec
dec
ins
popa
push
inc
push
dec
add
dec
dec
ss
jbe
outs
jns
inc
outs
push
dec
outs
outs
dec
pop
gs
add
push
inc
popa
push
xor
jb
js
inc
inc
inc
jno
add
ins
push
cmp
jo
dec
xor
outs
arpl
add
push
dec
cmp
cmp
push
pop
push
add
outs
inc
je
xor
push
dec
imul
dec
push
cmp
dec
jbe
ins
push
jbe
add
push
ja
push
aaa
jno
ins
dec
jns
dec
cmp
pop
add
imul
ins
jns
popa
inc
push
ins
arpl
inc
cmp
xor
je
jae
xor
add
jbe
jb
add
inc
dec
pop
push
push
dec
xor
ins
ins
push
cmp
imul
cmp
arpl
cmp
xor
push
add
dec
je
pop
inc
jo
jo
dec
pop
dec
dec
jne
add
bound
xor
push
xor
inc
jno
js
push
xor
push
ins
outs
pop
push
data16
jae
outs
ins
push
add
push
push
push
dec
push
jno
outs
jae
push
pop
push
jae
xor
popa
gs
cmp
addr16
inc
jae
jne
pop
dec
push
add
js
js
jbe
dec
outs
push
inc
dec
inc
push
push
dec
cmp
pop
inc
inc
aaa
push
push
addr16
xor
push
inc
inc
outs
inc
add
dec
xor
dec
xor
pop
jno
popa
xor
gs
jo
push
jae
dec
xor
xor
js
imul
js
jbe
xor
dec
push
xor
cmp
outs
add
dec
ins
je
bound
xor
js
outs
cmp
add
push
ins
cmp
push
jns
dec
gs
outs
popa
dec
inc
add
xor
push
gs
inc
je
jo
pop
push
xor
push
gs
fs
outs
je
je
add
ins
bound
gs
cmp
cmp
jns
add
ins
inc
popa
dec
dec
push
push
dec
ja
dec
ins
inc
ins
push
jo
inc
xor
fs
inc
push
ss
imul
push
dec
ss
xor
xor
ins
xor
push
add
dec
dec
push
push
xor
bound
cmp
jb
data16
imul
add
ins
xor
push
inc
dec
dec
dec
push
xor
add
xor
fs
inc
cmp
gs
outs
pop
add
fs
pop
inc
xor
dec
js
dec
inc
dec
dec
outs
xor
push
xor
jo
gs
addr16
imul
imul
gs
jne
jb
outs
je
jb
arpl
jae
dec
xor
dec
bound
jne
push
inc
xor
add
je
dec
popa
imul
add
cmp
inc
addr16
pop
ins
xor
dec
outs
inc
add
je
inc
popa
jae
inc
fs
jae
add
cmp
xor
jb
xor
dec
push
inc
dec
dec
popa
js
outs
jo
dec
outs
gs
popa
ins
imul
je
je
jo
addr16
xor
dec
add
dec
dec
addr16
push
push
aaa
popa
xor
add
xor
popa
outs
inc
xor
xor
cmp
add
jae
inc
jno
fs
popa
push
dec
push
add
je
dec
outs
fs
gs
pop
inc
aaa
je
inc
jbe
inc
ins
js
dec
inc
push
dec
cmp
add
popa
fs
outs
ins
jns
outs
ins
ins
arpl
outs
inc
popa
jae
add
push
popa
ins
js
push
imul
inc
addr16
xor
inc
pop
push
xor
jno
addr16
dec
outs
fs
gs
popa
ins
add
xor
addr16
pop
push
dec
xor
js
je
add
outs
ja
jb
popaw
xor
xor
ins
inc
push
push
dec
push
add
dec
xor
inc
push
cmp
xor
ss
outs
inc
add
je
inc
imul
outs
outs
dec
outs
outs
add
ins
gs
gs
imul
add
xor
inc
dec
imul
outs
addr16
ja
add
je
push
jb
fs
je
popa
push
jb
popa
jb
add
inc
bound
pop
dec
push
outs
pop
jno
jb
dec
outs
outs
add
je
push
jb
fs
je
imul
je
push
pop
ja
push
cmp
jbe
jno
inc
push
addr16
push
jb
fs
je
jne
ins
fs
popa
jb
add
dec
je
inc
outs
inc
popaw
push
js
xor
add
je
push
jb
fs
je
jb
jbe
je
push
popa
jb
add
xor
ins
ins
jno
push
imul
imul
jno
outs
jo
inc
jb
popa
je
jb
push
inc
jno
popa
ins
add
ins
xor
push
ins
ins
inc
jbe
jne
bound
jbe
outs
jo
dec
gs
push
push
imul
ss
imul
jns
cmp
jo
push
addr16
push
inc
outs
inc
inc
inc
pop
imul
push
pop
data16
bound
jae
cmp
cmp
outs
add
imul
jne
inc
jb
push
je
ins
push
xor
add
bound
jbe
fs
dec
fs
dec
push
add
dec
cmp
xor
xor
push
jo
dec
bound
jo
push
xor
jae
inc
xor
ss
jne
push
outs
cmp
dec
jne
jne
dec
push
aaa
xor
dec
add
jae
inc
arpl
push
imul
dec
ja
add
dec
dec
bound
addr16
arpl
push
dec
jae
dec
arpl
dec
imul
gs
push
inc
push
gs
jb
push
inc
push
imul
aaa
ja
push
imul
je
outs
fs
gs
inc
inc
dec
push
dec
ss
pop
cmp
push
ins
imul
je
dec
dec
push
push
inc
dec
inc
inc
add
cmp
push
xor
dec
dec
push
xor
xor
add
push
inc
inc
jns
jae
ja
ins
dec
xor
push
add
arpl
dec
jne
push
inc
jne
bound
push
ja
dec
push
bound
jns
outs
xor
dec
inc
inc
jbe
add
jae
push
imul
jns
add
push
outs
dec
fs
push
push
inc
push
dec
xor
jb
inc
pop
add
push
ja
jae
dec
push
push
jno
jae
cmp
add
jbe
dec
js
pop
dec
xor
jo
pop
push
outs
add
dec
imul
imul
inc
jae
add
addr16
push
jbe
xor
addr16
xor
dec
inc
add
dec
dec
pop
bound
jae
dec
dec
ins
dec
cmp
je
je
ins
xor
push
cmp
dec
dec
push
jns
ja
inc
add
je
dec
add
push
push
imul
pop
xor
inc
popa
add
imul
inc
push
ins
popa
push
jns
jo
addr16
push
outs
jae
je
outs
outs
add
jbe
dec
ss
jae
imul
xor
inc
pop
jae
push
jns
xor
push
push
ins
dec
arpl
js
add
jns
jbe
xor
pop
arpl
imul
arpl
dec
push
xor
jno
aaa
push
pop
ss
xor
popa
ins
pop
add
cmp
aaa
popa
popa
xor
push
dec
bound
cmp
add
je
push
push
inc
cmp
pop
dec
push
jns
popa
ins
xor
ins
dec
push
push
inc
js
add
bound
push
popa
push
dec
push
pop
outs
outs
dec
pop
xor
imul
dec
dec
popa
inc
push
inc
dec
imul
xor
jno
xor
xor
inc
imul
imul
jae
xor
jae
xor
ss
arpl
inc
ins
dec
push
push
gs
push
pop
outs
pop
ja
popa
add
gs
arpl
inc
push
pop
imul
add
je
jne
arpl
outs
push
outs
imul
jb
gs
gs
je
add
outs
outs
arpl
dec
pop
arpl
jo
inc
inc
ja
dec
add
je
dec
outs
fs
gs
gs
outs
jb
push
imul
jbe
dec
popa
fs
push
dec
jno
imul
addr16
inc
outs
je
jns
outs
imul
xor
popa
xor
jo
jne
ja
outs
inc
xor
jo
dec
jbe
popa
popa
gs
xor
arpl
dec
imul
gs
dec
gs
outs
add
addr16
xor
bound
push
jae
je
fs
add
outs
dec
je
popa
addr16
jne
push
ins
dec
push
inc
push
dec
add
je
popa
jb
ins
gs
jb
add
jb
ins
gs
jb
outs
outs
add
inc
push
push
jb
push
jbe
xor
inc
push
jne
inc
inc
cmp
popa
je
outs
xor
push
push
inc
aaa
push
add
je
dec
outs
fs
gs
popa
outs
fs
add
inc
jo
popa
pop
push
jbe
push
inc
xor
add
dec
xor
jo
xor
data16
ss
add
imul
dec
bound
cmp
jne
inc
add
ins
jns
dec
popa
jbe
ins
aaa
bound
pop
ins
data16
push
jb
jo
jb
inc
gs
gs
je
add
push
inc
dec
push
ins
push
push
inc
dec
jns
ja
push
jne
je
ins
gs
gs
outs
fs
popa
outs
fs
add
je
dec
gs
outs
fs
popa
outs
fs
add
pop
popa
dec
cmp
outs
addr16
dec
imul
xor
add
gs
jb
dec
gs
outs
add
inc
ja
dec
popa
push
push
inc
jae
ins
inc
push
push
ss
js
push
ss
imul
cmp
jo
push
je
push
add
imul
xor
gs
fs
pop
dec
inc
imul
xor
push
arpl
jb
dec
jns
fs
fs
popa
ins
xor
jne
je
imul
outs
add
fs
push
ss
pop
imul
dec
ins
jb
je
jne
push
arpl
inc
fs
push
inc
pop
add
dec
push
inc
js
ins
data16
bound
arpl
add
je
push
dec
dec
outs
push
jns
inc
gs
pop
dec
js
add
xor
ins
data16
push
jb
push
cmp
data16
dec
bound
pop
imul
popa
push
add
jno
dec
aaa
jne
outs
jae
inc
dec
inc
xor
jbe
add
dec
pop
ins
ins
jne
push
pop
outs
bound
inc
push
xor
xor
push
jne
xor
push
jns
push
outs
inc
popa
jae
ss
je
imul
inc
jne
jne
inc
ins
imul
jae
push
jbe
add
push
xor
ins
jne
outs
pop
inc
ins
push
push
xor
inc
dec
add
jne
aaa
jb
push
push
dec
inc
jbe
addr16
je
fs
inc
addr16
cmp
arpl
push
ja
add
fs
jne
push
jns
dec
je
xor
push
dec
add
pop
xor
jne
imul
pop
inc
push
add
ins
dec
push
push
jne
imul
outs
dec
pop
addr16
push
add
ss
jae
jne
jo
jbe
outs
xor
inc
xor
push
dec
xor
ss
jne
ins
aaa
dec
xor
pop
cmp
add
outs
pop
dec
dec
jne
addr16
inc
inc
outs
arpl
arpl
outs
add
aaa
xor
jne
push
dec
xor
data16
popa
dec
data16
gs
je
inc
outs
arpl
jo
outs
jb
push
xor
je
jne
jo
xor
data16
outs
add
push
dec
xor
outs
push
data16
jns
jne
inc
push
dec
dec
arpl
jbe
ss
js
jbe
imul
push
fs
jne
push
jns
dec
jb
je
push
jbe
add
jno
ja
jne
dec
outs
pop
dec
imul
add
popa
jae
je
imul
add
outs
add
popa
addr16
outs
popa
je
jbe
inc
outs
je
jns
outs
popa
je
jbe
push
imul
fs
inc
dec
inc
jbe
push
push
add
ja
jne
ins
gs
add
ins
jne
pop
pop
add
push
dec
push
inc
add
jbe
inc
dec
pop
jp
xor
dec
jno
outs
popa
je
inc
dec
push
xor
dec
xor
pop
inc
add
pop
dec
outs
je
xor
jne
inc
dec
dec
push
jae
xor
add
je
jne
je
ins
gs
jns
gs
popa
outs
fs
gs
jb
ins
dec
gs
fs
je
push
outs
imul
push
xor
pop
inc
dec
dec
push
inc
jae
jns
add
je
jne
je
ins
gs
imul
fs
gs
jb
ins
dec
gs
fs
je
push
outs
imul
jp
jns
outs
inc
inc
cmp
push
bound
push
dec
jb
xor
cmp
inc
addr16
cmp
inc
aaa
outs
pop
dec
dec
jo
aaa
xor
inc
add
dec
push
xor
inc
dec
xor
aaa
xor
pop
jbe
inc
je
js
cmp
dec
pop
inc
pop
imul
pop
inc
dec
outs
push
ins
push
dec
xor
jb
pop
jb
inc
ss
arpl
fs
xor
xor
js
ins
add
pop
inc
dec
dec
inc
dec
ss
ss
add
jae
ins
bound
push
xor
xor
inc
dec
xor
inc
push
inc
add
push
jae
inc
inc
dec
dec
dec
pop
push
aaa
jns
cmp
data16
dec
imul
push
arpl
dec
data16
xor
je
dec
je
jae
outs
dec
push
xor
push
inc
add
inc
ins
fs
inc
inc
cmp
xor
inc
inc
push
outs
push
add
push
ins
push
push
inc
jo
dec
xor
cmp
add
inc
arpl
inc
bound
push
dec
push
cmp
dec
aaa
push
add
ins
gs
outs
xor
xor
xor
xor
sub
ins
gs
outs
xor
xor
xor
xor
sub
ins
gs
outs
xor
xor
xor
xor
sub
ins
gs
outs
xor
xor
xor
xor
xor
and
ins
gs
outs
xor
xor
xor
xor
xor
and
ins
gs
outs
xor
xor
xor
xor
sub
ins
gs
outs
xor
xor
xor
xor
and
ins
gs
outs
xor
xor
xor
aaa
popa
sub
push
dec
inc
addr16
dec
xor
dec
push
imul
xor
aaa
imul
inc
dec
inc
push
outs
xor
outs
jae
jbe
push
gs
jne
arpl
cs
jae
jne
arpl
add
outs
jae
jbe
outs
imul
addr16
jb
jae
jne
arpl
add
jae
push
dec
outs
dec
inc
inc
imul
pop
inc
xor
jo
push
bound
ins
push
jne
jo
xor
imul
ja
outs
jae
jbe
addr16
jae
jne
arpl
add
xor
data16
xor
dec
ins
imul
cs
jo
popa
jae
inc
outs
jb
cs
jae
jne
arpl
add
xor
data16
xor
dec
ins
imul
cs
push
addr16
jo
je
fs
push
arpl
jb
je
inc
fs
jae
jne
arpl
add
imul
jae
bound
je
jb
bound
add
imul
jae
bound
je
je
add
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
bound
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
jne
addr16
imul
jb
bound
add
inc
push
push
inc
je
jb
bound
add
jne
addr16
je
jo
push
push
imul
je
outs
fs
jb
dec
outs
fs
gs
je
jb
bound
add
fs
outs
fs
gs
popa
ins
gs
je
jb
bound
add
ins
jo
gs
outs
jb
inc
je
jb
bound
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
cs
gs
outs
add
inc
jb
jne
inc
outs
ins
ins
arpl
outs
inc
je
jb
bound
add
gs
fs
je
je
arpl
je
imul
outs
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
je
outs
jae
outs
outs
inc
je
jb
bound
add
imul
outs
gs
je
fs
je
jb
bound
add
arpl
jae
fs
push
push
gs
jns
je
jb
bound
add
ins
popa
outs
popa
addr16
jne
arpl
outs
push
outs
imul
je
imul
popa
ins
ins
imul
outs
je
outs
outs
add
popa
addr16
je
jb
bound
add
add
add
add
je
add
add
outs
add
add
and
push
add
jb
jae
imul
cmp
add
add
add
add
and
inc
add
ins
add
add
add
add
je
jb
popa
add
add
add
jne
bound
ins
add
arpl
dec
add
jns
push
add
imul
add
cmp
add
add
xor
add
add
add
add
add
add
add
add
add
imul
add
je
add
add
add
jne
jb
imul
add
jb
jns
jo
je
outs
add
jb
popa
add
push
add
add
inc
add
jns
jo
je
outs
add
add
jbe
imul
push
add
outs
add
imul
jb
add
jnp
xor
xor
xor
xor
xor
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
inc
add
push
push
dec
add
add
add
push
add
push
add
add
add
xor
dec
add
add
aaa
add
jne
inc
add
inc
add
inc
add
outs
add
add
xor
xor
xor
xor
xor
xor
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
je
inc
add
ins
add
add
je
add
outs
add
inc
add
outs
add
je
imul
push
add
imul
add
add
ins
add
jo
je
jb
add
push
add
jae
je
add
add
add
ins
add
arpl
je
imul
add
jne
outs
add
add
add
outs
add
add
add
(bad)
add
jo
inc
add
je
popa
add
add
add
add
jae
je
add
add
add
ins
add
arpl
je
imul
add
add
ins
add
arpl
je
imul
inc
add
outs
add
add
je
add
jb
push
imul
add
add
dec
push
pop
add
dec
add
dec
add
dec
add
inc
add
ins
add
imul
add
add
add
outs
add
bound
inc
add
ins
add
jne
push
add
push
xor
jo
js
imul
add
add
data16
ins
add
cmp
das
add
add
add
adc
add
popa
add
add
outs
add
xor
xor
xor
xor
xor
xor
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
jnp
xor
xor
xor
xor
xor
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
jnp
xor
xor
xor
xor
xor
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
jnp
xor
xor
xor
xor
xor
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
jnp
xor
xor
xor
xor
xor
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
jnp
xor
xor
xor
xor
xor
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
add
dec
mov
pop
test
add
add
add
xchg
add
add
add
add
and
add
inc
xor
add
add
add
add
jb
pop
adc
cmp
jecxz
in
inc
adc
stos
pusha
and
xchg
inc
xlat
mov
xor
jge
push
pop
push
pop
inc
in
sub
mov
xchg
aad
out
leave
mov
popf
push
pop
mov
push
push
push
push
inc
xchg
aam
mov
cs
js
pushf
das
or
cmps
cdq
xor
lock
retf
(bad)
inc
push
out
sub
mov
mov
xor
inc
pushf
js
xor
push
sub
and
into
add
add
mov
pop
push
sbb
mov
add
push
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
and
add
add
pop
add
add
add
sub
add
add
add
add
or
add
push
push
imul
dec
gs
outs
jb
and
jbe
jb
push
gs
imul
add
cs
inc
push
inc
jb
ins
gs
jb
sub
gs
imul
xor
add
inc
jb
ins
gs
jb
inc
imul
popa
ins
adc
dec
inc
push
and
popa
ins
gs
jb
and
add
pop
xor
xor
xor
xor
add
add
and
bound
xor
xor
xor
sub
sub
bound
xor
gs
add
add
add
add
add
add
mov
pop
jg
aad
cmp
add
add
push
adc
adc
or
add
add
pop
or
or
adc
adc
add
or
push
add
add
add
or
and
add
adc
add
add
sbb
and
add
add
push
add
add
add
add
add
push
add
add
add
add
sbb
and
or
add
sbb
and
add
add
add
or
or
or
add
pop
add
add
sub
sub
add
add
add
xor
xor
add
add
add
jne
push
adc
adc
push
adc
or
push
adc
xor
add
sbb
push
adc
sbb
adc
xor
adc
push
adc
or
adc
sbb
adc
sbb
add
adc
add
adc
add
add
add
or
pop
add
or
add
adc
adc
adc
add
add
sbb
add
sbb
pop
add
sbb
or
adc
add
add
or
or
adc
adc
add
add
sbb
push
sbb
push
adc
adc
add
add
cmp
add
cmp
cmp
add
or
adc
add
add
add
push
adc
add
add
add
add
adc
add
add
sbb
add
push
push
sbb
add
add
add
add
add
add
add
and
and
adc
push
pop
and
add
adc
add
adc
add
add
add
pop
add
add
leave
add
leave
add
add
add
sbb
add
adc
add
cmp
add
push
adc
add
add
adc
add
adc
add
add
add
add
push
adc
adc
push
adc
icebp
add
sub
or
adc
adc
adc
or
adc
add
adc
add
sub
adc
in
add
add
push
adc
adc
or
add
add
add
push
adc
add
adc
push
pop
and
add
cmp
or
add
adc
or
add
adc
push
or
add
add
pop
pop
add
add
add
add
add
add
adc
add
sbb
add
add
add
sbb
sub
or
adc
adc
lea
adc
push
pop
add
or
add
sub
or
adc
add
sbb
adc
add
push
add
push
add
push
add
add
or
adc
or
adc
adc
sbb
adc
sbb
add
add
push
add
sub
push
sbb
adc
add
sub
pop
adc
sub
add
add
adc
push
or
or
add
add
add
add
add
cmp
and
add
or
add
adc
or
adc
sbb
sbb
add
add
sbb
or
push
adc
adc
push
adc
adc
or
add
adc
add
sbb
adc
adc
add
and
add
add
add
add
sub
sub
pop
add
sub
and
sbb
or
add
sub
add
add
sbb
sbb
adc
add
adc
adc
adc
push
add
add
sbb
add
add
sbb
sbb
pop
and
push
push
adc
sbb
adc
adc
adc
xor
push
add
add
add
sub
adc
sbb
add
or
add
adc
push
and
add
xor
xor
add
xor
adc
add
add
push
adc
dec
adc
adc
adc
add
adc
add
add
inc
add
inc
push
and
add
add
dec
add
add
inc
add
inc
push
and
add
add
or
push
pop
add
sbb
push
push
add
add
or
and
add
sub
sbb
pop
pop
adc
adc
or
and
add
sub
adc
push
push
push
push
push
push
push
push
push
push
push
push
push
adc
add
push
add
cmp
add
pop
pop
add
sub
adc
add
or
adc
and
add
or
add
add
push
push
push
pop
add
add
or
or
adc
add
adc
adc
add
adc
adc
add
adc
add
adc
add
or
or
add
or
add
sbb
sbb
pop
and
adc
and
add
sbb
add
add
push
add
adc
add
sub
add
add
xor
push
add
sbb
add
adc
add
push
push
add
or
add
add
or
push
add
mov
add
adc
leave
adc
sbb
or
and
sbb
add
adc
and
adc
add
or
and
adc
add
or
or
add
adc
add
or
sbb
sbb
and
add
sbb
push
or
add
add
and
add
sbb
adc
or
or
or
or
or
or
or
or
or
sbb
sbb
add
or
and
or
adc
or
or
pop
or
pop
add
std
add
std
pop
add
adc
and
sbb
and
sbb
add
add
sbb
sbb
add
std
adc
adc
add
sub
sub
add
add
add
or
sub
add
adc
adc
add
adc
adc
add
add
or
xor
or
sbb
or
sbb
adc
or
sbb
or
or
or
push
or
or
or
or
adc
adc
or
add
or
add
sbb
pop
add
sbb
add
add
add
sbb
add
add
or
add
adc
or
adc
push
add
sbb
push
or
add
sbb
or
add
or
push
or
sbb
or
adc
or
push
sbb
sbb
pusha
sbb
add
add
add
or
or
add
or
add
sbb
push
add
add
or
push
add
add
or
or
add
adc
or
add
sbb
and
adc
or
and
sbb
sbb
jge
pop
adc
sbb
sbb
cmp
or
sbb
or
or
inc
adc
sbb
adc
or
or
adc
sbb
sbb
adc
add
adc
sbb
or
or
or
adc
add
or
add
add
sbb
or
or
add
or
add
sbb
or
sbb
adc
or
add
push
adc
add
jns
adc
or
or
add
and
adc
pop
pop
and
or
or
add
add
push
push
and
adc
add
push
add
push
or
add
add
add
sbb
or
or
add
sbb
or
add
add
sbb
pop
push
sbb
or
or
or
adc
adc
or
pop
add
and
cmp
add
sbb
add
or
pop
add
add
add
sbb
add
add
add
add
sbb
add
add
and
sbb
xor
add
sbb
or
add
or
add
sbb
or
add
or
add
add
or
pop
add
sbb
sbb
add
jns
and
adc
sbb
and
sbb
sbb
add
adc
add
adc
add
add
or
or
and
adc
adc
add
push
add
jno
add
add
or
dec
or
add
adc
and
sbb
add
sbb
or
add
add
or
add
or
add
sbb
or
add
or
push
add
sbb
adc
add
adc
push
and
sbb
add
adc
add
adc
add
or
add
add
add
or
add
add
adc
cmp
and
adc
add
cmp
add
sbb
sub
sbb
add
sbb
pop
pop
sbb
add
and
cmp
add
push
sbb
sbb
push
or
sbb
or
adc
adc
or
sbb
sbb
or
sbb
or
or
sbb
sbb
push
and
sbb
sbb
add
adc
adc
add
sub
adc
add
adc
add
adc
push
adc
adc
add
push
adc
adc
add
add
push
and
add
add
jns
gs
jo
popa
je
or
xor
xor
xor
xor
add
push
or
add
add
add
add
add
or
cs
outs
ins
jo
je
jb
add
add
push
dec
jns
inc
jo
ins
imul
add
or
add
dec
jns
push
jae
jb
add
jns
inc
outs
jb
jae
add
add
push
dec
jns
push
bound
jb
imul
add
sbb
jae
gs
cs
imul
inc
outs
jb
jae
inc
outs
jb
adc
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
jo
jae
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
cs
jns
jb
push
arpl
outs
jb
jae
add
and
push
push
push
push
popa
add
xor
jns
je
ins
cs
bound
push
gs
imul
outs
je
arpl
jae
push
outs
popa
jo
je
jo
ins
imul
je
arpl
adc
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
jo
jae
pop
pop
dec
outs
jae
popa
outs
arpl
pop
add
add
add
push
jns
je
ins
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
add
imul
je
push
imul
jne
imul
outs
jb
cs
gs
imul
imul
gs
imul
ins
gs
imul
popa
je
jb
xor
xor
xor
xor
add
add
or
cs
gs
imul
add
push
push
imul
or
add
dec
popa
bound
xor
add
add
push
push
imul
or
add
push
imul
or
add
push
imul
or
add
push
imul
or
add
push
imul
or
add
push
imul
or
add
push
imul
or
add
push
imul
or
add
push
imul
add
add
push
imul
add
add
push
imul
add
add
push
imul
add
add
push
imul
add
add
push
imul
add
add
push
imul
add
add
push
imul
add
add
push
imul
add
add
push
imul
add
add
push
imul
add
sub
ja
jb
push
jne
xor
aaa
inc
dec
cs
gs
inc
xor
xor
data16
ja
sub
dec
popa
ins
jne
jbe
imul
outs
dec
sub
inc
push
dec
dec
bound
cmp
dec
dec
push
gs
xor
push
jns
je
ins
cs
bound
arpl
ins
jae
outs
jb
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
pop
pop
add
or
add
add
add
add
and
add
add
add
push
add
sub
movs
pop
dec
mov
int
mov
cmp
ja
or
push
call
popa
jg
icebp
in
icebp
mov
loope
xchg
in
xor
sub
push
and
sub
loope
xchg
xor
jb
dec
mov
test
pop
pushf
jnp
in
cli
mov
pop
ret
cmp
mov
outs
cld
push
pusha
sbb
inc
jp
outs
sub
cs
in
dec
pushf
dec
cmp
xchg
stos
push
xchg
mov
fimul
sbb
dec
sahf
in
pop
mov
mov
cmp
mov
jno
lods
jge
cmp
pushf
fbstp
add
inc
scas
fld
cmps
in
int
xchg
xor
mov
pop
sbb
jge
inc
mov
inc
jl
frstor
jne
sub
stc
push
sbb
mov
add
pop
mov
cwde
stos
call
cmp
int
call
repnz
add
pop
rol
stos
adc
(bad)
mov
outs
or
adc
cmp
das
out
pop
fs
mov
imul
inc
push
stos
in
addr16
fbstp
inc
mov
scas
daa
ret
and
dec
add
lahf
jnp
inc
mov
and
outs
mov
pop
gs
ins
rcl
and
lock
out
sbb
pop
out
mov
dec
add
mov
push
clc
pushf
imul
mov
je
lock
lods
js
mov
push
mov
test
sub
imul
push
mov
fs
mov
outs
mov
fcomp
lods
(bad)
push
xchg
sub
out
adc
(bad)
nop
lods
dec
shl
push
adc
fistp
fldcw
add
mov
jnp
sbb
jno
fwait
jl
push
adc
xchg
enter
push
mov
inc
std
cmps
nop
test
daa
in
stos
icebp
xchg
cli
das
dec
popa
jmp
push
jmp
ins
test
jecxz
adc
lock
icebp
push
cdq
(bad)
xchg
mov
fstp
fild
lock
inc
mov
xor
dec
out
cmp
fst
mov
sbb
xor
dec
aad
jbe
ret
adc
sahf
(bad)
sbb
clc
mov
mov
outs
pushf
pushf
sub
scas
sahf
retf
dec
popa
jne
sbb
(bad)
int
or
stos
inc
call
sbb
fadd
mov
jnp
int3
add
pop
and
outs
inc
push
xor
test
mov
into
nop
xor
add
push
mov
pop
xchg
xchg
fstp
cmp
call
test
cmps
mov
jg
in
movs
fmul
jb
fdiv
shl
cdq
sti
mov
sub
mov
pop
fst
sbb
or
jmp
fcomip
outs
inc
scas
in
push
pop
jle
mov
loopne
sub
lds
retf
mov
and
(bad)
mov
jb
mov
push
sar
xchg
push
data16
test
cmp
jmp
dec
retf
and
mov
push
jns
mov
es
daa
loopne
xchg
cld
jmp
(bad)
out
icebp
adc
out
adc
pop
retf
sub
enter
aad
scas
cmps
in
cmps
cmp
and
push
sbb
adc
in
ss
test
dec
adc
xor
adc
push
loope
sub
jb
shr
or
mov
idiv
arpl
mov
mov
dec
das
xchg
mov
pop
scas
pop
dec
ss
mov
xchg
adc
call
adc
mov
sub
stos
inc
mov
(bad)
mov
sub
push
mov
push
or
scas
es
mov
pushf
mov
hlt
leave
mov
mov
sub
movs
mov
mov
pop
mov
movs
pop
jp
and
sbb
mov
pop
out
aam
mov
icebp
xlat
inc
push
out
scas
popf
arpl
stos
rcr
and
fidivr
dec
jns
mov
lahf
bound
iret
retf
xchg
mov
dec
in
movs
dec
push
dec
je
pop
cmp
mov
pop
mov
loop
xchg
inc
cmps
pop
ins
jmp
pop
and
xchg
ror
push
inc
cmp
jmp
jg
mov
xbegin
pop
mov
shr
jge
xor
jno
mov
jmp
mov
dec
out
sub
xor
push
cmps
adc
add
mov
mov
lahf
stos
rcr
push
in
and
std
mov
xor
jge
fdivr
dec
mov
push
shl
jge
scas
sub
ins
push
fnstenv
scas
pop
adc
xor
sub
ja
fmulp
in
xor
dec
outs
pusha
mov
nop
inc
add
pop
dec
pop
(bad)
clc
push
push
xchg
mov
fcmovne
jno
in
add
js
cmp
sbb
inc
aaa
test
xor
pusha
cmp
mov
(bad)
mov
pop
mov
loopne
xor
jge
data16
in
adc
cmps
fbstp
and
pop
hlt
cmc
jmp
test
xor
mov
xor
arpl
ins
cmp
xchg
or
mov
inc
adc
and
push
and
adc
ja
xchg
xchg
or
xchg
cmp
push
jne
dec
jnp
loope
xchg
adc
mov
lahf
xchg
aaa
adc
iret
xlat
ss
jmp
lds
xor
iret
into
mov
cmps
xchg
jnp
or
add
shl
xor
in
scas
xor
ret
jae
mov
aaa
and
xchg
imul
hlt
lods
mov
pop
mov
out
stc
push
(bad)
adc
aad
adc
shr
ds
pop
div
cmp
inc
aas
mov
outs
retf
cmp
sbb
pop
cs
gs
fimul
cmp
sar
in
scas
sub
inc
int
pop
es
fdiv
xchg
sub
push
xchg
dec
sbb
add
inc
je
jo
hlt
iret
mov
jmp
adc
aas
sbb
popa
(bad)
fdiv
mov
mov
sbb
in
push
lock
js
rcl
shr
lds
out
cmps
jnp
fs
jge
pop
fadd
outs
movs
xor
push
ret
pop
inc
pop
xchg
inc
dec
clc
xchg
xchg
sahf
dec
and
push
mov
daa
mul
xlat
mov
push
fld
lea
mov
cmp
adc
lea
push
mov
mov
dec
and
jp
out
shl
hlt
ins
sub
adc
out
cmp
inc
rcr
jne
xchg
mov
sbb
(bad)
data16
push
add
mov
xchg
scas
cmps
fld
fwait
dec
sar
lock
sub
ja
in
(bad)
sub
sub
push
enter
lahf
fwait
pop
jo
push
dec
cmp
into
sar
adc
dec
hlt
cs
pop
ret
xchg
call
out
je
popa
movs
sub
xor
test
sub
push
in
pushf
stos
inc
popf
adc
int
and
jp
pop
mov
or
and
into
fdivr
jae
push
loopne
lds
loop
pop
movs
xor
inc
pop
jne
cmp
js
popa
(bad)
in
fmul
int3
lock
adc
shr
jbe
adc
test
xchg
pop
add
(bad)
mov
ja
sub
leave
jl
aam
mov
daa
mov
or
cmps
sub
ret
pop
sbb
cmp
mov
daa
or
add
rol
outs
aas
pop
(bad)
sar
adc
or
pusha
movs
pop
mov
push
pop
sbb
repnz
add
push
mov
call
adc
aam
fistp
push
loopne
je
cmp
and
add
pop
jle
scas
mov
dec
mov
xchg
pop
jns
mov
(bad)
and
inc
push
je
jg
pop
arpl
call
cdq
sbb
add
inc
(bad)
dec
es
test
(bad)
jbe
scas
dec
sub
repnz
mov
cld
jb
dec
(bad)
xchg
xchg
stos
xor
mov
dec
out
cmp
adc
bound
leave
loopne
xchg
cmp
sbb
jmp
cmp
(bad)
jb
sbb
cs
jnp
hlt
sbb
test
jns
fwait
ins
fcom
rcl
jecxz
lock
mov
pop
push
shr
(bad)
imul
mov
push
in
arpl
nop
test
loopne
sahf
not
cmp
data16
sub
cld
mov
pop
inc
int3
push
push
pop
push
fs
adc
mov
dec
sti
and
cmp
es
sar
xor
inc
push
add
mov
imul
push
stos
pop
sti
xchg
lea
mov
cmp
adc
(bad)
mov
mov
fs
fnsave
jns
sbb
xchg
cmp
dec
nop
sbb
adc
retf
out
and
mov
sahf
and
es
ins
pop
xchg
stos
jmp
lods
sub
movs
out
movntq
mov
shr
cmp
stos
or
ret
inc
cmps
lods
xchg
jge
pop
mov
mov
jb
call
dec
adc
adc
cmps
push
daa
xor
lock
stc
xchg
scas
aad
inc
add
push
aaa
mov
dec
pop
adc
jge
push
into
sub
(bad)
std
ss
mov
sbb
jmp
dec
in
test
repnz
push
jge
mov
pop
(bad)
mov
sahf
sub
popa
aas
loop
les
push
test
sub
int3
xchg
or
mov
jg
mov
fmul
jo
fdiv
push
cmp
repnz
cmc
xchg
mov
std
pusha
int
scas
iret
mov
jnp
in
ror
and
and
mov
int3
call
rol
scas
adc
ret
inc
pop
fcmovne
cmp
repnz
xor
retf
sub
or
mov
inc
enter
lahf
iret
int3
fiadd
in
cs
mov
repz
add
mov
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
inc
push
inc
inc
push
pusha
test
stos
or
add
add
add
add
add
add
jne
jo
jae
add
add
add
or
arpl
je
jne
jo
add
add
dec
pop
nop
add
add
add
add
(bad)
inc
add
add
add
add
loopne
add
push
pop
mov
int
mov
push
push
jb
addr16
ins
and
outs
outs
outs
je
bound
jb
outs
and
and
and
fs
add
add
add
push
jno
jle
jno
jle
jno
jle
and
aas
jno
jle
mov
jle
jno
jle
jno
jle
jno
jle
and
sbb
jmp
jno
jle
and
sub
imul
shl
add
add
dec
add
je
add
add
add
add
add
add
add
add
add
cwde
add
add
add
das
int
add
adc
add
mov
add
add
add
add
add
add
add
add
add
add
add
mov
add
sti
cmp
add
add
add
adc
add
add
add
adc
add
add
add
add
adc
add
mov
add
push
add
add
pusha
add
xchg
xor
add
mov
add
add
mov
mov
add
add
cs
js
add
add
xchg
add
add
add
add
add
and
add
jb
popa
je
add
mov
add
add
add
add
add
add
fs
je
add
add
xor
add
and
add
push
add
add
add
inc
add
shr
jae
arpl
add
xchg
xor
add
pusha
add
add
add
and
add
add
add
add
push
add
xor
push
sbb
push
and
add
push
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
call
test
jle
and
or
push
call
int3
int3
int3
int3
int3
int3
mov
xor
inc
mov
push
lea
movzx
movzx
add
and
jns
dec
or
inc
movzx
movzx
add
and
jns
dec
or
inc
movzx
movzx
add
and
jns
dec
or
inc
movzx
movzx
add
and
jns
dec
or
inc
add
sub
jne
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
cmp
mov
jne
push
push
push
push
lea
xor
xor
mov
xor
mov
jmp
lea
mov
cmp
jg
movzx
mov
movzx
movzx
add
add
and
jns
dec
or
inc
dec
cmp
jge
inc
and
mov
jns
dec
or
inc
test
jl
movzx
lea
lea
cmp
jne
mov
mov
add
sub
jne
cmp
jne
inc
jmp
mov
movzx
mov
inc
add
cmp
mov
jl
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
push
xor
xor
mov
inc
and
jns
dec
or
inc
mov
movzx
lea
inc
mov
inc
and
jns
dec
or
inc
movzx
add
add
cdq
mov
idiv
mov
inc
cmp
jne
mov
xor
lea
lea
and
jns
dec
or
inc
shl
mov
mov
inc
add
cmp
jl
mov
inc
cmp
mov
jl
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
movzx
push
mov
push
mov
shl
lea
or
mov
mov
rep
mov
push
mov
call
push
mov
call
xor
mov
mov
mov
xor
mov
mov
movzx
add
shl
add
inc
add
cmp
mov
jl
inc
add
cmp
jl
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
mov
mov
mov
mov
mov
mov
push
push
mov
mov
sub
mov
mov
sub
mov
mov
sub
mov
mov
mov
sub
mov
mov
mov
push
mov
mov
mov
sub
sub
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
jmp
mov
add
mov
cdq
mov
idiv
lea
or
mov
movzx
cdq
idiv
movzx
imul
mov
and
shl
add
movzx
add
xor
and
jns
dec
or
inc
mov
mov
cdq
idiv
mov
add
or
mov
movzx
cdq
idiv
movzx
imul
lea
mov
and
shl
add
movzx
xor
and
jns
dec
or
inc
mov
mov
lea
mov
cdq
idiv
mov
add
or
and
shl
movzx
mov
cdq
idiv
mov
add
movzx
imul
movzx
lea
xor
and
jns
dec
or
inc
mov
mov
lea
mov
cdq
idiv
and
shl
movzx
mov
mov
lea
or
cdq
idiv
mov
add
movzx
imul
movzx
lea
xor
and
jns
dec
or
inc
mov
add
mov
add
lea
cmp
jl
lea
push
mov
call
push
mov
mov
call
pop
pop
pop
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmp
push
mov
jl
mov
push
mov
push
push
push
call
add
cmp
jne
movzx
movzx
add
shl
add
mov
mov
pop
pop
pop
ret
lea
xor
test
jle
push
jmp
lea
lea
movzx
movzx
add
shl
add
mov
mov
inc
cmp
jl
pop
movzx
movzx
xor
add
add
shl
mov
mov
mov
cmp
jl
jmp
lea
movzx
movzx
add
shl
add
mov
mov
dec
cmp
jge
movzx
movzx
add
shl
add
mov
mov
pop
pop
pop
ret
sub
push
mov
movzx
movzx
xor
xor
mov
movzx
mov
movzx
not
xor
mov
movzx
mov
movzx
xor
xor
mov
movzx
mov
movzx
xor
xor
mov
movzx
mov
movzx
xor
xor
mov
movzx
mov
movzx
xor
xor
mov
movzx
mov
movzx
xor
xor
mov
movzx
mov
movzx
xor
xor
mov
movzx
mov
movzx
xor
xor
mov
movzx
mov
movzx
xor
xor
mov
movzx
mov
movzx
xor
xor
mov
movzx
mov
movzx
xor
xor
mov
movzx
mov
movzx
xor
xor
mov
movzx
mov
movzx
mov
xor
xor
mov
movzx
mov
movzx
xor
xor
mov
movzx
mov
movzx
push
lea
push
xor
xor
push
mov
mov
mov
call
add
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
jne
push
call
mov
test
jge
push
call
push
mov
test
jne
push
call
mov
cmp
je
cmp
jle
push
push
push
call
add
test
jne
push
call
push
call
add
mov
cmp
jne
push
call
cmp
jle
push
push
call
add
mov
jmp
pop
pop
ret
push
push
push
push
mov
call
mov
add
test
je
mov
push
mov
mov
call
mov
test
jne
test
je
push
call
xor
mov
test
jne
push
call
pop
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
mov
test
je
mov
mov
push
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
push
mov
mov
test
jne
mov
pop
pop
ret
push
push
push
call
mov
push
lea
push
inc
push
push
call
mov
mov
add
push
push
push
push
push
push
call
mov
neg
sbb
add
je
call
cmp
jne
mov
push
push
push
push
push
push
call
mov
push
lea
push
push
push
call
mov
mov
add
push
push
push
push
push
push
call
mov
neg
sbb
inc
test
je
call
pop
pop
pop
pop
ret
int3
int3
int3
push
push
mov
mov
test
je
lea
push
call
test
jne
test
je
mov
test
je
push
call
mov
test
je
push
call
add
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
sub
push
push
push
push
xor
push
call
lea
push
lea
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
push
call
add
cmp
je
call
push
push
call
lea
mov
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
je
lea
push
lea
push
call
add
mov
lea
mov
cmp
jne
cmp
je
mov
cmp
jne
add
add
cmp
jne
xor
jmp
sbb
sbb
cmp
jne
push
call
xor
pop
pop
pop
pop
add
ret
lea
push
lea
push
call
add
mov
lea
mov
mov
cmp
jne
cmp
je
mov
cmp
jne
add
add
cmp
jne
xor
jmp
sbb
sbb
cmp
je
lea
push
push
call
test
je
nop
lea
push
lea
push
call
add
mov
lea
mov
mov
cmp
jne
cmp
je
mov
cmp
jne
add
add
cmp
jne
xor
jmp
sbb
sbb
cmp
je
lea
push
lea
push
call
add
mov
lea
jmp
lea
mov
cmp
jne
cmp
je
mov
cmp
jne
add
add
cmp
jne
xor
jmp
sbb
sbb
cmp
je
lea
push
push
call
test
jne
push
call
push
call
push
lea
push
lea
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
add
push
push
call
mov
push
push
mov
call
mov
push
call
push
push
mov
call
push
call
push
mov
call
add
mov
cmp
je
push
push
push
call
mov
add
mov
jmp
mov
mov
call
mov
push
push
call
mov
cdq
and
add
sar
cmp
jle
mov
mov
sub
mov
mov
mov
mov
mov
add
push
mov
push
push
call
add
sub
jne
mov
and
jns
dec
or
inc
cmp
jle
mov
sub
lea
push
push
mov
add
mov
push
call
mov
mov
push
push
push
call
add
push
call
mov
push
mov
call
mov
add
push
push
mov
call
mov
push
lea
push
lea
push
push
call
mov
push
push
push
call
lea
push
lea
push
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
add
push
call
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
add
push
push
call
cmp
setne
cmp
sete
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
push
call
test
jl
cmp
jne
mov
push
lea
push
lea
mov
call
mov
mov
lea
push
mov
push
push
push
mov
call
test
jl
mov
mov
lea
push
push
push
push
mov
call
test
jl
mov
mov
mov
push
call
test
jl
push
lea
mov
call
mov
lea
push
mov
call
push
lea
call
lea
push
call
mov
mov
lea
add
call
mov
push
mov
push
call
mov
cmp
jne
push
call
lea
call
mov
push
mov
push
push
call
lea
push
push
add
push
mov
mov
call
lea
mov
push
push
mov
call
mov
push
push
push
call
add
push
call
mov
cmp
jne
push
call
mov
lea
mov
add
call
mov
push
push
push
call
cmp
je
push
call
mov
cmp
jne
push
call
mov
mov
cmp
je
mov
jmp
xor
mov
lea
add
call
mov
push
push
push
call
push
push
push
call
mov
cmp
jne
push
call
mov
cmp
je
mov
jmp
xor
mov
mov
lea
push
push
sub
mov
mov
mov
push
mov
mov
push
mov
mov
push
push
mov
mov
call
mov
lea
push
call
lea
call
lea
push
call
mov
cmp
je
mov
mov
push
call
lea
call
mov
cmp
je
mov
mov
push
call
mov
lea
cmp
je
push
call
add
mov
cmp
je
mov
push
mov
call
mov
cmp
je
mov
mov
push
call
pop
pop
pop
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
mov
shr
and
cmp
jne
mov
movzx
add
cmp
jb
sub
add
cmp
jb
sub
mov
shl
pop
or
pop
ret
push
mov
test
jne
lea
pop
pop
pop
ret
cmp
jae
test
je
movzx
add
dec
inc
add
test
jne
cmp
jb
sub
mov
mul
shr
mov
shl
sub
add
pop
shl
pop
or
pop
ret
cmp
jb
mov
mul
push
mov
shr
jmp
lea
lea
sub
mov
jmp
lea
movzx
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
add
add
sub
jne
mov
mul
shr
imul
add
mov
mul
shr
imul
add
sub
jne
pop
test
je
cmp
jb
mov
shr
nop
movzx
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
sub
add
add
sub
jne
test
je
movzx
add
dec
inc
add
test
jne
mov
mul
shr
imul
add
mov
mul
shr
imul
add
mov
pop
shl
pop
or
pop
ret
int3
int3
mov
mov
mul
shr
imul
sub
push
mov
mov
movzx
push
push
mov
imul
push
mov
movzx
lea
mov
mul
shr
imul
shr
sub
shr
add
sub
lea
cmp
jbe
sub
cmp
jbe
sub
cmp
jbe
sub
cmp
jbe
sub
pop
shl
pop
or
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
push
mov
push
mov
mov
push
mov
mov
mov
push
lea
push
mov
mov
mov
mov
call
add
test
jne
push
lea
push
push
call
mov
add
cmp
je
lea
push
call
add
mov
test
je
mov
pop
pop
add
ret
mov
lea
push
mov
call
add
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
push
push
mov
push
push
push
call
add
ret
int3
mov
mov
mov
shr
shr
add
lea
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
not
test
je
lea
test
je
movzx
xor
and
shr
xor
inc
sub
jne
push
push
cmp
jb
mov
shr
xor
add
mov
shr
mov
shr
and
mov
and
xor
mov
shr
xor
and
xor
add
xor
add
mov
shr
mov
shr
and
mov
and
xor
mov
shr
xor
and
xor
add
xor
add
mov
shr
mov
and
mov
shr
and
xor
mov
shr
xor
and
xor
add
xor
mov
shr
mov
shr
and
mov
and
xor
mov
shr
xor
and
xor
xor
mov
shr
mov
and
mov
shr
and
xor
mov
shr
xor
and
xor
xor
mov
shr
and
mov
mov
shr
and
xor
mov
shr
xor
and
xor
add
xor
add
mov
mov
shr
shr
and
mov
and
xor
mov
shr
xor
and
xor
sub
xor
mov
shr
and
mov
mov
shr
and
xor
mov
shr
xor
and
xor
sub
jne
cmp
jb
mov
shr
xor
add
mov
shr
and
mov
mov
shr
and
xor
mov
shr
xor
and
xor
sub
sub
mov
jne
pop
pop
test
je
jmp
lea
nop
movzx
xor
and
shr
xor
inc
sub
jne
not
pop
ret
int3
push
mov
push
mov
and
mov
shl
add
mov
shl
shr
and
add
shr
add
not
test
je
mov
test
je
movzx
mov
shr
xor
shl
xor
inc
sub
jne
push
lea
cmp
jb
mov
shr
xor
add
mov
shr
mov
and
mov
shr
and
xor
mov
shr
xor
and
xor
add
xor
add
mov
shr
mov
shr
and
mov
and
xor
mov
shr
xor
and
xor
add
xor
add
mov
shr
mov
and
mov
shr
and
xor
mov
shr
xor
and
xor
add
xor
add
mov
shr
mov
and
mov
shr
and
xor
mov
shr
xor
and
xor
xor
mov
shr
mov
and
mov
shr
and
xor
mov
shr
xor
and
xor
xor
mov
shr
and
mov
mov
shr
and
xor
mov
shr
xor
and
xor
add
xor
sub
mov
mov
shr
shr
and
mov
and
xor
mov
shr
xor
and
xor
xor
mov
shr
and
mov
mov
shr
and
xor
mov
shr
xor
and
xor
sub
jne
cmp
jb
mov
shr
lea
xor
add
mov
shr
and
mov
mov
shr
and
xor
mov
shr
xor
and
xor
sub
sub
mov
jne
add
pop
test
je
movzx
mov
shr
xor
shl
xor
inc
sub
jne
not
mov
and
mov
shl
add
mov
shr
shl
and
add
shr
pop
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
test
je
test
je
xor
shr
add
test
jne
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
sub
mov
mov
mov
xor
mov
test
je
jmp
lea
test
je
xor
shr
add
test
jne
mov
add
sub
jne
pop
pop
pop
ret
int3
int3
int3
sub
cmp
jne
mov
add
ret
mov
mov
mov
lea
mov
inc
add
cmp
jl
push
push
push
lea
lea
call
lea
lea
call
mov
xor
jmp
lea
mov
xor
lea
test
je
mov
test
je
xor
shr
add
test
jne
mov
add
cmp
jl
mov
test
je
xor
lea
test
je
jmp
lea
test
je
xor
shr
add
test
jne
mov
sar
je
xor
jmp
lea
mov
xor
lea
test
je
test
je
xor
shr
add
test
jne
mov
add
cmp
jl
test
je
xor
lea
test
je
test
je
xor
shr
add
test
jne
mov
sar
mov
jne
xor
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
jne
xor
ret
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
test
je
mov
test
je
mov
test
je
mov
cmp
je
cmp
jne
cmp
jne
test
je
mov
push
push
push
call
mov
add
mov
cmp
jb
mov
add
cmp
jbe
mov
sub
add
mov
push
push
push
call
mov
mov
mov
mov
movzx
mov
shl
movzx
xor
and
add
xor
mov
add
nop
mov
mov
mov
movzx
mov
shl
mov
xor
and
mov
mov
mov
and
mov
mov
mov
mov
inc
cmp
jbe
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
mov
test
je
mov
test
je
cmp
jne
mov
mov
xor
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
cmp
je
mov
mov
mov
mov
mov
shl
dec
and
mov
xor
ret
mov
ret
int3
int3
int3
int3
int3
int3
mov
test
je
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
xor
ret
mov
ret
int3
int3
int3
mov
lea
shr
lea
shr
add
lea
mov
test
je
mov
test
je
cmp
jne
cmp
jne
push
call
add
ret
int3
int3
int3
int3
int3
push
mov
push
mov
mov
shr
mov
mov
mov
add
mov
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
push
mov
cmp
jbe
mov
test
je
mov
mov
push
push
push
call
mov
add
add
add
sub
mov
sub
mov
add
cmp
jne
mov
mov
pop
pop
ret
int3
push
push
mov
test
je
mov
test
je
mov
cmp
ja
cmp
je
cmp
jne
cmp
jne
mov
cmp
jne
cmp
jne
cmp
jne
mov
mov
pop
mov
pop
ret
mov
push
push
mov
mov
mov
mov
cmp
jne
mov
cmp
jne
push
push
push
call
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
add
test
jne
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
cmp
jne
lea
jmp
cmp
jge
cmp
jl
xor
jmp
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
neg
sbb
and
neg
sbb
and
add
mov
neg
sbb
and
add
mov
neg
sbb
and
add
cmp
mov
setne
add
mov
add
mov
mov
movzx
mov
mov
add
mov
movzx
mov
mov
mov
add
mov
movzx
mov
mov
mov
add
mov
movzx
mov
mov
mov
add
mov
mov
cmp
jne
mov
jmp
cmp
jge
cmp
jl
xor
jmp
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
cmp
mov
je
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
cmp
je
mov
push
mov
push
push
call
add
mov
mov
mov
jmp
mov
sub
shl
add
cmp
jge
mov
cmp
jl
cmp
jge
mov
jmp
xor
cmp
setne
add
jmp
xor
shl
or
cmp
je
or
mov
mul
sub
shr
add
shr
add
mov
shl
sub
mov
mov
call
cmp
je
movzx
call
movzx
call
push
push
push
call
add
mov
cmp
jne
mov
cmp
je
movzx
mov
cmp
jae
lea
mov
cmp
jne
mov
cmp
je
cmp
jbe
sub
push
mov
add
mov
push
push
call
add
mov
mov
call
mov
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
add
add
mov
movzx
cmp
jb
mov
cmp
je
mov
cmp
jbe
mov
sub
push
mov
add
push
push
call
add
mov
mov
mov
cmp
jne
mov
mov
cmp
mov
jne
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
je
cmp
jbe
mov
sub
push
mov
add
push
push
call
add
mov
mov
call
mov
mov
cmp
je
mov
mov
mov
movzx
inc
mov
mov
mov
add
test
jne
jmp
mov
mov
cmp
je
mov
cmp
jbe
mov
sub
push
add
mov
push
push
call
add
mov
test
jne
mov
mov
cmp
jne
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
je
cmp
jbe
mov
sub
push
mov
add
push
push
call
add
mov
mov
call
mov
mov
cmp
je
mov
mov
mov
movzx
inc
mov
mov
mov
add
test
jne
jmp
mov
mov
cmp
je
mov
cmp
jbe
mov
sub
push
add
mov
push
push
call
add
mov
test
jne
mov
cmp
jne
mov
cmp
je
mov
add
cmp
jbe
mov
call
mov
lea
cmp
ja
movzx
mov
mov
add
movzx
mov
mov
push
push
mov
add
push
call
add
mov
mov
cmp
je
mov
call
cmp
jne
mov
pop
pop
pop
xor
pop
ret
cmp
mov
jne
cmp
jg
cmp
je
mov
pop
pop
mov
pop
mov
pop
ret
mov
mov
cmp
jne
cmp
je
mov
pop
pop
mov
pop
mov
pop
ret
cmp
jne
cmp
jne
test
je
cmp
je
mov
lea
mov
push
push
call
add
cmp
je
cmp
jne
mov
test
je
cmp
je
cmp
jne
cmp
jne
push
call
add
jmp
push
push
push
push
call
add
cmp
jne
mov
mov
xor
mov
mov
lea
push
push
mov
push
call
add
mov
call
cmp
je
cmp
jne
mov
test
jg
mov
pop
pop
pop
pop
ret
cmp
jne
mov
mov
mov
mov
add
movzx
mov
mov
mov
add
movzx
mov
mov
mov
add
movzx
mov
mov
mov
add
movzx
mov
mov
mov
add
movzx
mov
mov
mov
add
movzx
mov
mov
mov
add
movzx
mov
mov
mov
add
jmp
movzx
mov
call
movzx
call
mov
call
mov
test
jle
neg
mov
pop
xor
cmp
pop
pop
sete
pop
ret
cmp
jne
pop
pop
pop
mov
xor
pop
ret
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
mov
test
je
push
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
pop
mov
pop
ret
mov
test
je
mov
push
mov
push
call
add
mov
mov
test
je
mov
push
mov
push
call
add
mov
mov
test
je
mov
push
mov
push
call
add
mov
mov
test
je
mov
push
mov
push
call
add
mov
mov
mov
push
push
call
add
xor
cmp
setne
pop
mov
pop
dec
and
ret
mov
pop
ret
push
push
push
mov
test
je
mov
test
je
mov
test
je
push
mov
mov
rep
mov
mov
push
push
push
call
mov
add
test
je
push
push
push
mov
call
mov
mov
mov
mov
push
push
push
call
mov
mov
mov
mov
push
push
push
call
mov
mov
mov
mov
push
push
push
call
mov
mov
mov
mov
push
push
push
call
mov
mov
add
mov
test
je
cmp
je
cmp
je
test
je
mov
mov
add
push
push
push
call
mov
mov
mov
add
push
push
push
call
mov
mov
mov
add
push
push
push
call
mov
mov
mov
push
push
push
call
mov
sub
mov
mov
add
mov
mov
lea
shr
add
add
lea
mov
mov
lea
lea
lea
pop
mov
mov
mov
pop
pop
xor
pop
ret
push
call
add
pop
pop
pop
mov
pop
ret
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
cmp
jbe
mov
test
jne
xor
pop
ret
sub
mov
mov
mov
cmp
jne
mov
mov
push
push
push
call
jmp
cmp
jne
mov
mov
push
push
push
call
mov
add
mov
mov
push
push
push
call
add
add
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
add
mov
xor
mov
mov
mov
push
lea
push
xor
push
push
call
mov
lea
add
movzx
add
mov
movzx
mov
movzx
mov
movzx
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
push
push
mov
push
mov
mov
mov
mov
mov
lea
add
cmp
jbe
sub
add
mov
jmp
mov
movzx
mov
movzx
lea
mov
cmp
jb
shr
mov
cmp
jbe
mov
mov
mov
add
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
inc
cmp
jne
add
inc
mov
inc
inc
cmp
jne
mov
inc
inc
cmp
jne
mov
inc
inc
cmp
jne
mov
inc
inc
cmp
jne
mov
inc
inc
cmp
jne
mov
inc
inc
cmp
jne
mov
inc
inc
cmp
jne
mov
inc
inc
cmp
jne
cmp
jb
mov
sub
add
cmp
lea
jle
cmp
mov
mov
jge
mov
mov
mov
mov
mov
and
mov
movzx
cmp
jbe
sub
jne
mov
cmp
ja
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
mov
mov
add
add
push
lea
cmp
jne
mov
cmp
jne
add
add
jmp
lea
mov
inc
inc
cmp
jne
mov
inc
inc
cmp
jne
mov
inc
inc
cmp
jne
mov
inc
inc
cmp
jne
mov
inc
inc
cmp
jne
mov
inc
inc
cmp
jne
mov
inc
inc
cmp
jne
mov
inc
inc
cmp
jne
cmp
jb
sub
add
cmp
jl
mov
mov
cmp
jbe
pop
mov
pop
ret
mov
pop
pop
ret
int3
sub
push
push
mov
push
lea
mov
sub
mov
mov
sub
lea
mov
cmp
jb
mov
push
lea
push
push
call
mov
mov
sub
sub
add
sub
lea
movzx
sub
cmp
jb
sub
jmp
xor
sub
mov
jne
mov
mov
lea
movzx
sub
cmp
jb
sub
jmp
xor
sub
mov
jne
add
mov
mov
cmp
je
mov
add
mov
add
mov
mov
mov
cmp
jbe
mov
test
je
mov
sub
mov
mov
cmp
jne
mov
mov
push
push
push
call
jmp
cmp
jne
mov
mov
push
push
push
call
mov
mov
add
mov
push
push
push
call
add
add
add
add
mov
cmp
jb
mov
mov
mov
add
movzx
mov
shl
movzx
xor
and
mov
cmp
jae
mov
cmp
jne
pop
pop
pop
add
ret
int3
int3
push
push
push
mov
mov
add
push
mov
cmp
jae
mov
mov
cmp
ja
call
mov
test
je
add
mov
mov
mov
mov
lea
je
cmp
jb
sub
mov
mov
test
jl
mov
add
jmp
xor
push
sub
push
push
push
call
mov
mov
mov
mov
mov
mov
add
cmp
jbe
mov
test
je
mov
mov
push
push
push
call
mov
add
add
add
sub
mov
sub
mov
add
cmp
jne
mov
mov
mov
cmp
je
mov
mov
mov
sub
sub
cmp
jb
test
jl
mov
add
jmp
xor
push
push
push
push
call
mov
mov
mov
mov
mov
mov
add
cmp
jbe
mov
test
je
mov
mov
push
push
push
call
mov
add
add
add
sub
mov
sub
mov
add
cmp
jne
mov
mov
mov
cmp
jne
pop
pop
xor
pop
pop
ret
mov
test
je
mov
test
jl
mov
add
jmp
xor
xor
cmp
sete
push
mov
sub
push
push
push
call
mov
mov
mov
add
call
mov
xor
cmp
jne
cmp
setne
pop
pop
pop
dec
and
pop
ret
cmp
sete
pop
pop
pop
lea
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
xor
lea
mov
cmp
jae
call
mov
mov
cmp
jae
test
je
test
je
cmp
jb
mov
mov
mov
mov
shl
mov
movzx
xor
and
mov
mov
mov
and
mov
mov
mov
and
mov
movzx
mov
mov
mov
mov
test
je
mov
mov
sub
sub
cmp
ja
mov
cmp
je
cmp
je
mov
mov
call
mov
mov
cmp
jb
mov
sub
mov
mov
movzx
mov
mov
mov
mov
sub
mov
add
movzx
movzx
add
lea
add
mov
cmp
jae
movzx
movzx
jmp
cmp
jne
mov
cmp
jne
push
call
add
mov
jmp
movzx
shr
movzx
add
mov
xor
sub
cmp
mov
sete
sub
mov
mov
cmp
ja
cmp
jb
dec
mov
add
mov
mov
mov
mov
movzx
shl
mov
xor
and
mov
and
mov
mov
mov
mov
mov
and
mov
movzx
mov
mov
mov
mov
add
jne
jmp
add
mov
mov
lea
mov
mov
movzx
mov
movzx
shl
xor
and
mov
jmp
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
add
movzx
add
lea
mov
xor
sub
cmp
sete
dec
mov
add
test
je
mov
test
jl
mov
add
jmp
xor
mov
push
sub
push
push
push
call
mov
mov
mov
mov
mov
mov
add
cmp
jbe
mov
test
je
mov
mov
push
push
push
call
mov
add
add
add
sub
mov
sub
mov
add
cmp
jne
mov
mov
mov
cmp
jne
pop
pop
pop
xor
pop
ret
mov
test
jl
mov
add
jmp
xor
xor
cmp
sete
push
mov
sub
push
push
push
call
mov
mov
mov
add
call
mov
xor
cmp
jne
cmp
setne
pop
pop
pop
pop
dec
and
ret
cmp
sete
pop
pop
pop
pop
lea
ret
int3
push
push
push
push
mov
push
mov
mov
mov
cmp
jae
call
mov
mov
cmp
jae
test
je
test
je
cmp
jb
mov
mov
mov
mov
shl
mov
movzx
xor
and
mov
mov
movzx
and
mov
mov
mov
and
mov
movzx
mov
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
test
je
mov
cmp
jae
mov
mov
sub
sub
cmp
ja
mov
cmp
je
cmp
je
mov
mov
call
jmp
cmp
jne
cmp
jne
push
call
add
mov
mov
cmp
ja
cmp
je
cmp
jne
mov
sub
cmp
jbe
mov
mov
cmp
jb
cmp
ja
mov
sub
mov
mov
mov
lea
mov
sub
movzx
mov
mov
mov
mov
sub
mov
add
movzx
movzx
add
lea
add
mov
cmp
jae
movzx
movzx
jmp
movzx
shr
movzx
add
mov
sub
xor
cmp
mov
sete
mov
sub
add
add
mov
add
mov
cmp
ja
mov
mov
mov
shl
mov
movzx
and
xor
and
mov
mov
movzx
mov
mov
and
mov
movzx
mov
mov
mov
movzx
mov
mov
add
jne
add
mov
mov
mov
test
je
mov
test
jl
mov
add
jmp
xor
push
sub
push
push
push
call
mov
mov
mov
mov
mov
mov
add
cmp
jbe
mov
test
je
mov
mov
push
push
push
call
mov
add
add
add
sub
mov
sub
mov
add
cmp
jne
mov
mov
mov
cmp
jne
pop
pop
pop
xor
pop
pop
ret
cmp
je
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
add
movzx
add
lea
mov
sub
cmp
jne
mov
test
jl
mov
add
jmp
xor
mov
push
sub
push
push
push
call
mov
mov
mov
mov
mov
mov
add
cmp
jbe
mov
test
je
mov
mov
push
push
push
call
mov
add
add
add
sub
mov
sub
mov
add
cmp
jne
mov
mov
mov
add
dec
cmp
jmp
add
dec
mov
jmp
cmp
je
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
add
movzx
add
lea
mov
mov
test
jl
mov
add
jmp
xor
xor
cmp
sete
push
mov
sub
push
push
push
call
mov
mov
mov
add
call
mov
xor
cmp
jne
cmp
setne
pop
pop
pop
pop
dec
and
pop
ret
cmp
sete
pop
pop
pop
pop
lea
pop
ret
int3
int3
int3
int3
push
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
cmp
je
mov
mov
mov
mov
mov
mov
mov
cmp
mov
jge
neg
mov
mov
mov
neg
sbb
and
push
add
push
mov
push
cmp
jne
call
jmp
call
add
mov
push
mov
call
add
call
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
int3
mov
xor
push
test
je
mov
test
je
push
mov
push
cmp
jne
lea
jmp
test
jl
cmp
jg
mov
cmp
ja
mov
push
lea
add
lea
mov
add
cmp
je
cmp
je
push
push
call
add
cmp
je
mov
movzx
mov
movzx
mov
movzx
mov
movzx
mov
pop
mov
pop
pop
pop
ret
pop
pop
mov
pop
ret
mov
pop
ret
int3
int3
mov
xor
push
mov
cmp
je
cmp
jne
cmp
jne
push
mov
cmp
jne
pop
lea
pop
ret
mov
cmp
jne
mov
mov
cmp
jne
mov
cmp
jne
mov
push
mov
cmp
jge
xor
neg
jmp
cmp
jle
mov
sub
mov
dec
cmp
ja
cmp
jne
lea
cmp
ja
cmp
ja
cmp
ja
cmp
jne
mov
mov
mov
push
push
push
push
call
mov
add
test
je
mov
mov
mov
mov
shl
mov
mov
mov
lea
mov
lea
shl
mov
add
mov
mov
dec
mov
mov
mul
shr
mov
mov
mov
mov
mov
push
push
push
call
mov
mov
mov
mov
push
push
push
call
mov
mov
mov
mov
push
push
push
call
mov
lea
mov
shl
push
mov
mov
mov
push
push
call
mov
add
cmp
lea
mov
mov
je
cmp
je
cmp
je
test
je
mov
shr
lea
lea
add
mov
mov
mov
push
mov
mov
mov
mov
call
add
pop
pop
pop
pop
ret
mov
mov
push
mov
call
add
pop
pop
pop
mov
pop
ret
pop
pop
mov
pop
ret
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
push
mov
push
push
push
push
push
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
cmp
jne
cmp
jne
mov
mov
push
push
push
push
mov
call
add
cmp
je
mov
mov
mov
mov
push
push
push
call
add
pop
ret
mov
pop
ret
cmp
jne
cmp
jne
call
mov
mov
mov
push
push
push
push
call
add
mov
test
jne
mov
push
mov
call
add
test
je
mov
or
ret
mov
mov
mov
dec
mov
inc
mov
movzx
ret
int3
int3
int3
int3
int3
int3
push
mov
push
mov
cmp
jae
test
je
mov
mov
mov
mov
call
mov
mov
mov
push
mov
mov
sar
add
push
push
push
call
mov
add
test
jne
mov
push
call
add
test
je
mov
add
mov
mov
mov
cmp
jae
pop
mov
pop
ret
mov
cmp
jne
cmp
jne
add
add
push
mov
call
mov
call
mov
cmp
jne
test
jne
mov
lea
call
sub
jne
test
je
call
mov
call
shl
add
mov
dec
test
je
call
cmp
jne
test
je
call
test
je
cmp
jne
test
je
lea
call
test
je
cmp
jne
test
je
mov
call
sub
jne
mov
neg
sbb
pop
and
pop
mov
pop
ret
pop
pop
mov
pop
ret
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
xor
test
jne
mov
pop
ret
mov
test
je
push
call
add
cmp
je
mov
cmp
jne
push
call
jmp
cmp
jne
push
call
mov
add
mov
test
je
push
call
add
test
je
call
cmp
je
or
mov
test
jge
mov
mov
test
je
push
call
add
mov
test
je
push
call
add
mov
test
je
push
call
add
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
or
test
je
cmp
jne
mov
cmp
je
cmp
jne
add
xor
cmp
mov
sete
mov
test
je
mov
mov
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
cmp
jne
push
mov
push
mov
mov
mov
test
je
lea
cmp
jne
mov
mov
push
push
push
push
mov
call
add
cmp
jne
mov
mov
mov
add
add
push
push
call
mov
mov
sub
sub
add
mov
test
jne
test
jne
jmp
mov
mov
push
push
push
call
add
mov
mov
sub
pop
pop
pop
ret
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
call
mov
lea
push
push
lea
push
push
mov
call
lea
add
cmp
ja
cmp
jne
push
mov
lea
push
push
call
add
add
ret
xor
add
ret
int3
mov
mov
push
lea
push
push
mov
call
add
cmp
jne
movzx
ret
or
ret
int3
int3
int3
int3
int3
mov
mov
push
lea
lea
mov
inc
test
jne
sub
push
mov
push
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
push
push
mov
xor
test
je
cmp
jne
mov
push
lea
mov
sub
je
mov
mov
push
push
push
push
call
add
cmp
jne
mov
mov
mov
test
jne
mov
mov
add
push
push
call
mov
sub
add
mov
test
jne
cmp
jne
mov
test
jne
cmp
je
xor
jmp
mov
mov
test
je
cmp
je
mov
mov
dec
neg
sbb
pop
and
pop
pop
ret
or
pop
mov
pop
pop
ret
pop
mov
pop
ret
int3
int3
int3
int3
mov
push
mov
push
mov
call
add
test
jne
mov
push
call
mov
mov
dec
add
neg
sbb
and
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
cmp
je
cmp
jne
mov
push
push
push
mov
mov
mov
mov
mov
call
add
mov
cmp
jne
push
call
add
mov
mov
push
push
push
mov
mov
call
add
pop
pop
ret
pop
or
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
cmp
jne
cmp
je
mov
ret
xor
cmp
sete
mov
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
mov
test
je
cmp
jne
mov
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
lea
mov
and
push
push
call
add
shr
sub
jne
pop
pop
ret
int3
int3
int3
int3
push
push
mov
call
mov
call
shl
add
call
shl
add
call
cmp
jne
mov
shl
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
jne
lea
pop
ret
cmp
jne
push
mov
call
add
test
jne
mov
push
mov
call
mov
mov
call
pop
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
jne
mov
mov
mov
pop
ret
mov
mov
mov
test
jne
mov
pop
ret
push
cmp
jne
call
mov
push
call
add
mov
jmp
mov
test
je
cmp
jne
mov
add
add
mov
sub
mov
mov
test
je
push
call
add
mov
lea
jmp
lea
mov
inc
test
jne
sub
mov
mov
push
lea
mov
inc
test
jne
sub
lea
push
call
add
mov
test
jne
mov
pop
pop
pop
ret
mov
mov
lea
mov
mov
inc
inc
test
jne
push
mov
dec
nop
mov
inc
test
jne
mov
mov
mov
mov
mov
inc
test
jne
mov
sub
mov
dec
mov
inc
test
jne
mov
shr
rep
mov
and
rep
mov
pop
pop
pop
pop
ret
mov
xor
cmp
je
cmp
je
mov
mov
mov
mov
jmp
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
xor
or
lea
push
mov
mov
mov
cmp
je
cmp
je
push
push
call
mov
add
cmp
je
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
add
mov
mov
lea
mov
inc
cmp
jne
sub
inc
push
call
add
mov
cmp
je
mov
mov
jmp
lea
mov
mov
inc
inc
cmp
jne
mov
mov
nop
cmp
jne
mov
mov
cmp
je
cmp
jne
mov
mov
cmp
jl
cmp
jg
movsx
sub
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
mov
mov
inc
mov
inc
cmp
je
lea
cmp
jne
mov
cmp
je
cmp
jne
mov
push
push
push
push
push
push
push
push
call
push
mov
call
add
mov
mov
cmp
jne
cmp
jne
call
pop
pop
pop
xor
pop
add
ret
push
call
push
push
push
push
mov
mov
call
add
test
jne
cmp
je
mov
call
mov
mov
cmp
lea
push
jge
mov
push
call
jmp
push
call
add
mov
cmp
je
cmp
jne
mov
mov
pop
pop
pop
pop
add
ret
mov
call
mov
push
call
add
sub
mov
mov
pop
pop
pop
pop
add
ret
pop
pop
xor
pop
add
ret
int3
mov
push
push
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
test
jge
xor
add
ret
push
lea
push
mov
call
add
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
mov
test
je
cmp
jne
mov
or
cmp
je
cmp
je
cmp
jne
pop
xor
pop
ret
push
push
mov
mov
mov
mov
test
je
cmp
je
mov
mov
add
lea
mov
add
add
cmp
mov
mov
je
pop
pop
pop
mov
pop
ret
cmp
je
lea
cmp
jne
cmp
jne
cmp
jne
call
mov
mov
mov
push
push
push
push
call
add
mov
test
jne
mov
push
mov
call
add
test
jne
mov
mov
mov
mov
add
add
push
push
call
mov
mov
sub
sub
add
mov
cmp
jne
mov
mov
sub
push
push
push
call
mov
mov
add
mov
call
cmp
jne
mov
call
mov
call
cmp
jne
push
call
push
push
push
call
add
mov
cmp
jne
cmp
jne
cmp
jne
jmp
mov
jmp
mov
mov
cmp
jbe
mov
test
jbe
mov
mov
push
push
push
call
add
sub
add
add
sub
mov
mov
test
jbe
mov
push
push
push
push
call
add
sub
sub
add
add
test
jne
mov
mov
pop
pop
pop
pop
ret
mov
mov
mov
sub
push
push
push
call
mov
add
mov
cmp
jne
mov
cmp
je
cmp
jne
pop
pop
pop
or
pop
ret
mov
pop
pop
pop
sub
pop
ret
pop
mov
pop
ret
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
lea
push
push
call
add
cmp
jne
movzx
pop
ret
or
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
test
je
mov
test
jle
push
mov
lea
dec
test
jle
push
push
push
call
add
cmp
jne
mov
inc
cmp
jne
mov
pop
cmp
jne
test
jg
pop
pop
mov
pop
ret
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
mov
cmp
je
mov
cmp
je
cmp
je
cmp
push
mov
jne
test
jne
sub
test
jl
cmp
jne
push
call
add
mov
test
je
push
push
push
call
add
test
jle
jmp
lea
mov
cmp
jge
mov
push
mov
push
push
call
add
test
je
sub
test
jg
mov
pop
pop
ret
cmp
jne
add
test
jl
cmp
je
mov
mov
push
push
push
mov
mov
mov
call
add
test
jl
mov
mov
mov
pop
pop
ret
mov
cmp
jl
sub
jmp
push
call
add
test
jl
test
je
cmp
jne
push
call
add
mov
test
je
cmp
je
inc
dec
cmp
mov
je
mov
test
jle
mov
cmp
jge
mov
push
mov
push
push
call
add
test
jle
sub
test
jg
mov
pop
pop
ret
pop
or
pop
ret
or
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
xor
cmp
je
cmp
jne
cmp
jne
push
push
mov
push
cmp
je
mov
cmp
je
mov
lea
cmp
ja
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
push
push
push
call
add
cmp
jne
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
pop
shl
pop
mov
mov
mov
pop
mov
mov
xor
pop
ret
pop
pop
pop
mov
pop
ret
mov
pop
ret
int3
int3
int3
int3
int3
mov
mov
mov
mov
ret
int3
int3
int3
mov
sub
push
xor
push
cmp
je
mov
cmp
je
mov
mov
mov
mov
mov
push
push
mov
cmp
je
mov
jmp
xor
mov
mov
mov
mov
sub
xor
mov
cmp
ja
mov
movzx
jmp
cmp
je
mov
and
shr
sub
mov
jmp
cmp
jae
lea
test
jne
mov
lea
push
push
call
mov
add
test
je
mov
movzx
mov
shl
inc
add
dec
add
mov
cmp
jb
mov
and
shr
mov
mov
and
dec
cmp
ja
jmp
shr
mov
sub
jmp
mov
call
shr
mov
sub
jmp
shr
mov
sub
jmp
mov
mov
mov
shr
sub
jmp
mov
and
sub
shr
cmp
jae
lea
test
jne
mov
lea
push
push
call
mov
add
test
je
mov
movzx
mov
shl
inc
add
dec
add
mov
cmp
jb
mov
mov
not
and
shr
cmp
je
mov
mov
mov
jmp
xor
xor
mov
test
je
mov
mov
test
jne
mov
lea
push
push
call
mov
add
test
je
cmp
jne
mov
mov
push
mov
mov
mov
push
push
mov
call
add
test
jne
mov
cmp
jbe
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
push
push
push
call
mov
add
sub
add
sub
add
sub
cmp
jne
mov
jmp
cmp
jae
test
jne
mov
lea
push
push
call
mov
add
test
je
mov
movzx
mov
shl
inc
add
dec
add
mov
cmp
jb
mov
shr
and
mov
shr
add
mov
mov
and
and
mov
add
add
shr
sub
cmp
mov
mov
ja
cmp
ja
mov
test
jbe
cmp
jae
test
jne
mov
lea
push
push
call
mov
add
test
je
mov
movzx
mov
shl
inc
add
dec
add
mov
cmp
jb
mov
movzx
mov
and
mov
mov
add
mov
shr
sub
cmp
jb
cmp
jae
mov
movzx
xor
mov
add
cmp
jb
lea
lea
mov
mov
lea
push
lea
push
push
mov
push
lea
push
push
call
add
test
je
mov
mov
mov
jmp
mov
add
mov
je
jmp
lea
mov
mov
mov
shl
dec
and
mov
mov
shr
movzx
mov
cmp
jbe
test
jne
mov
lea
push
push
call
mov
add
test
je
mov
movzx
inc
mov
mov
shl
mov
mov
shl
mov
add
add
dec
and
mov
mov
shr
movzx
dec
cmp
ja
mov
mov
shr
cmp
jae
mov
shr
movzx
cmp
jae
test
jne
mov
lea
push
push
call
mov
add
test
je
mov
movzx
mov
inc
shl
mov
movzx
add
dec
add
cmp
jb
mov
mov
movzx
shr
sub
mov
mov
inc
jmp
mov
cmp
jne
movzx
lea
mov
cmp
jae
mov
test
jne
mov
lea
push
push
call
mov
add
test
je
mov
movzx
inc
mov
shl
mov
mov
add
add
dec
add
cmp
jb
mov
mov
shr
sub
test
je
movzx
mov
mov
and
add
shr
sub
jmp
cmp
movzx
mov
jne
lea
cmp
jae
test
jne
mov
lea
push
push
call
mov
add
test
je
mov
movzx
inc
mov
shl
mov
mov
add
add
dec
add
cmp
jb
mov
shr
mov
mov
and
add
shr
jmp
lea
cmp
jae
test
jne
mov
lea
push
push
call
mov
add
test
je
mov
movzx
inc
mov
shl
mov
mov
add
add
dec
add
cmp
jb
mov
shr
mov
mov
and
add
shr
sub
add
mov
mov
mov
add
add
cmp
ja
test
je
mov
nop
mov
dec
mov
inc
test
jne
mov
add
cmp
jb
cmp
je
lea
lea
mov
mov
lea
push
lea
push
mov
mov
push
push
lea
push
push
call
add
test
je
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
lea
mov
lea
push
lea
push
push
mov
mov
mov
push
lea
push
push
call
add
test
jne
mov
cmp
jb
mov
cmp
jb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jae
mov
sub
mov
mov
push
push
call
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
jmp
mov
mov
shl
mov
dec
and
mov
mov
shr
movzx
cmp
jbe
test
jne
mov
lea
push
push
call
mov
add
test
je
mov
movzx
inc
mov
mov
shl
mov
mov
shl
mov
add
add
dec
and
mov
mov
shr
movzx
dec
cmp
ja
test
je
test
jne
mov
shr
movzx
mov
mov
movzx
add
mov
shl
mov
mov
shr
dec
and
shr
add
mov
mov
mov
shr
movzx
movzx
add
cmp
jbe
test
jne
mov
lea
push
push
call
mov
add
test
je
mov
movzx
inc
mov
mov
mov
shl
movzx
add
movzx
add
mov
shl
mov
add
dec
dec
and
shr
movzx
add
mov
mov
mov
shr
movzx
add
cmp
ja
movzx
shr
sub
mov
shr
movzx
shr
sub
mov
shr
mov
test
jne
cmp
jne
mov
mov
mov
push
push
push
mov
mov
mov
call
add
test
jne
mov
mov
mov
inc
dec
mov
mov
jmp
test
je
mov
jmp
test
jne
movzx
and
mov
je
cmp
jae
lea
test
jne
mov
lea
push
push
call
mov
add
test
je
mov
movzx
mov
shl
inc
add
dec
add
mov
cmp
jb
mov
mov
shl
dec
and
add
shr
sub
mov
mov
mov
shl
dec
and
mov
mov
shr
movzx
cmp
jbe
lea
test
jne
mov
lea
push
push
call
mov
add
test
je
mov
movzx
inc
mov
mov
shl
mov
mov
shl
mov
add
add
dec
and
mov
mov
shr
movzx
dec
cmp
ja
test
jne
mov
shr
movzx
mov
mov
movzx
add
mov
shl
mov
mov
shr
dec
and
shr
add
mov
mov
mov
shr
movzx
movzx
add
cmp
jbe
test
jne
mov
lea
push
push
call
mov
add
test
je
mov
movzx
inc
mov
mov
mov
shl
movzx
add
movzx
add
mov
shl
mov
add
dec
dec
and
shr
movzx
add
mov
mov
mov
shr
movzx
add
cmp
ja
movzx
shr
sub
mov
shr
movzx
shr
sub
test
je
mov
mov
mov
jmp
mov
movzx
shr
and
mov
mov
je
cmp
jae
test
jne
mov
lea
push
push
call
mov
add
test
je
mov
movzx
mov
shl
inc
add
dec
add
mov
cmp
jb
mov
mov
shl
dec
and
add
shr
sub
mov
cmp
sbb
and
sub
cmp
ja
cmp
jne
mov
mov
push
mov
mov
mov
push
push
mov
call
add
test
jne
mov
mov
mov
sub
cmp
jae
mov
add
sub
jmp
sub
mov
mov
mov
cmp
jbe
mov
sub
sub
mov
mov
mov
mov
mov
inc
mov
mov
inc
sub
mov
jne
cmp
jne
mov
sub
cmp
jbe
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
add
ret
mov
mov
jmp
mov
mov
cmp
jae
sub
mov
push
mov
push
push
call
add
test
je
mov
jmp
mov
jmp
pop
mov
pop
add
ret
lea
(bad)
pop
inc
add
pusha
inc
add
bound
mov
imul
ins
inc
add
push
add
add
push
add
push
push
push
push
push
push
add
lea
jbe
inc
add
pusha
inc
add
mov
test
je
mov
test
je
mov
test
je
push
mov
push
call
add
mov
xor
pop
ret
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
push
mov
mov
mov
mov
mov
dec
lea
mov
mov
mov
mov
sub
dec
add
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
mov
mov
mov
mov
shl
dec
mov
mov
dec
mov
cmp
jae
movzx
inc
mov
shl
inc
add
mov
add
movzx
shl
mov
add
add
mov
and
mov
mov
shr
movzx
movzx
shr
sub
test
je
test
jne
test
jne
mov
mov
mov
mov
shl
shr
dec
and
add
mov
mov
mov
shr
movzx
movzx
shr
sub
test
jne
inc
shr
mov
jmp
shr
and
mov
je
cmp
jae
movzx
inc
mov
shl
mov
add
add
mov
mov
shl
dec
and
add
shr
sub
cmp
jae
movzx
inc
movzx
mov
inc
shl
add
mov
shl
add
mov
add
add
mov
mov
and
mov
mov
shr
movzx
movzx
shr
sub
mov
test
jne
test
jne
mov
movzx
mov
shl
mov
dec
and
add
mov
mov
shr
movzx
movzx
shr
sub
mov
test
je
shr
and
mov
cmp
jae
movzx
inc
mov
shl
add
mov
add
cmp
jae
movzx
inc
mov
shl
mov
add
add
mov
mov
mov
shl
sub
dec
and
mov
mov
add
mov
mov
sub
shr
mov
cmp
jbe
mov
sub
cmp
ja
mov
mov
dec
mov
test
jne
mov
sub
add
cmp
jae
sub
mov
inc
inc
sub
mov
jne
jmp
cmp
jae
mov
sub
add
sub
add
cmp
jae
sub
lea
mov
inc
inc
sub
mov
jne
mov
cmp
jae
sub
mov
lea
mov
inc
inc
sub
mov
jne
mov
sub
jmp
sub
add
cmp
jae
sub
mov
inc
inc
sub
mov
jne
mov
sub
mov
cmp
jbe
lea
mov
mul
mov
shr
inc
lea
movzx
sub
inc
inc
mov
mov
inc
inc
mov
movzx
inc
inc
sub
mov
jne
mov
test
je
mov
inc
inc
mov
cmp
jbe
mov
inc
mov
mov
mov
cmp
jae
cmp
jae
mov
jmp
mov
sub
movzx
inc
mov
mov
inc
inc
inc
mov
movzx
inc
inc
mov
mov
sub
mov
cmp
ja
test
je
mov
inc
inc
mov
cmp
jbe
mov
inc
mov
jmp
mov
mov
mov
mov
mov
jmp
test
je
mov
mov
jmp
mov
mov
mov
mov
mov
mov
shr
sub
add
add
add
sub
mov
mov
shl
mov
sub
add
dec
and
lea
mov
lea
mov
mov
sub
add
mov
mov
mov
mov
pop
pop
pop
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
mov
xor
cmp
je
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
ret
mov
ret
int3
int3
int3
mov
test
je
mov
test
je
mov
cmp
push
jg
mov
lea
cmp
ja
push
mov
shl
mov
mov
dec
and
shl
add
pop
xor
pop
ret
mov
pop
ret
mov
ret
int3
int3
int3
mov
push
xor
cmp
je
cmp
jne
cmp
jne
push
mov
cmp
je
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
push
push
push
call
add
cmp
jne
pop
mov
pop
ret
mov
cmp
mov
jge
mov
neg
jmp
mov
sar
inc
cmp
mov
jge
and
lea
cmp
ja
push
mov
mov
call
add
pop
pop
ret
mov
push
mov
push
call
add
mov
pop
mov
pop
ret
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
push
push
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
ret
int3
int3
int3
push
push
mov
xor
push
mov
cmp
jne
mov
mov
mov
shl
mov
push
push
push
call
add
mov
cmp
jne
pop
pop
lea
pop
ret
cmp
jne
mov
mov
shl
mov
mov
mov
sub
mov
cmp
jb
mov
mov
push
sub
push
push
call
mov
add
pop
mov
mov
pop
xor
pop
ret
sub
mov
cmp
jbe
mov
mov
mov
add
push
sub
push
push
call
add
sub
je
mov
mov
push
sub
push
push
call
mov
add
mov
pop
mov
pop
xor
pop
ret
add
mov
mov
cmp
jne
mov
mov
cmp
jae
add
mov
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
test
je
mov
test
je
cmp
je
cmp
jne
cmp
jne
cmp
jne
mov
mov
mov
push
mov
push
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
cmp
ja
lea
jmp
cmp
jne
mov
jmp
cmp
jae
lea
test
je
movzx
mov
shl
dec
add
inc
add
mov
cmp
jb
test
je
cmp
jne
push
push
push
call
mov
push
lea
mov
mov
mov
push
push
call
mov
add
xor
mov
xor
mov
jmp
mov
mov
test
je
mov
test
je
movzx
shl
mov
shr
add
xor
mov
div
test
jne
mov
and
cmp
je
mov
mov
mov
jmp
shr
mov
and
add
sub
cmp
jbe
mov
jmp
mov
shl
push
push
push
mov
call
mov
mov
shr
not
and
or
mov
mov
mov
add
xor
xor
jmp
mov
mov
mov
jmp
cmp
jae
test
je
movzx
mov
shl
dec
add
inc
add
mov
cmp
jb
mov
cmp
jne
test
je
mov
mov
jmp
mov
test
je
mov
shr
and
mov
test
je
mov
shr
push
lea
mov
mov
push
push
call
mov
add
mov
xor
xor
mov
jmp
cmp
jae
jmp
lea
test
je
movzx
mov
shl
dec
add
inc
add
mov
cmp
jb
mov
test
je
mov
test
je
mov
mov
mov
shr
shr
shr
push
lea
mov
mov
mov
mov
push
push
call
mov
add
mov
xor
xor
mov
jmp
cmp
jae
jmp
lea
test
je
movzx
mov
shl
dec
add
inc
add
mov
cmp
jb
mov
test
je
mov
and
mov
mov
mov
shr
mov
test
je
mov
shr
push
lea
mov
mov
push
push
call
mov
add
mov
xor
xor
mov
test
je
cmp
jae
test
je
movzx
mov
shl
dec
add
inc
add
mov
cmp
jb
mov
mov
test
je
mov
test
je
mov
shr
push
lea
mov
mov
push
push
call
mov
add
mov
xor
xor
jmp
mov
test
je
mov
mov
test
je
mov
mov
cmp
jbe
mov
mov
test
je
mov
test
je
mov
mov
test
je
mov
mov
sub
mov
mov
mov
add
cmp
jbe
sub
mov
mov
push
mov
add
push
push
call
mov
mov
add
test
je
mov
mov
push
push
push
call
mov
mov
mov
add
sub
add
sub
mov
cmp
jne
mov
mov
test
je
test
je
xor
movzx
inc
mov
mov
mov
test
je
mov
mov
test
je
mov
cmp
jae
mov
mov
mov
inc
mov
cmp
je
mov
cmp
jb
test
je
mov
mov
push
push
push
call
mov
add
mov
mov
sub
add
cmp
mov
jne
jmp
mov
test
je
mov
mov
mov
test
je
test
je
xor
lea
movzx
inc
mov
mov
mov
test
je
mov
mov
test
je
mov
cmp
jae
mov
mov
mov
inc
mov
cmp
je
mov
cmp
jb
test
je
mov
mov
push
push
push
call
mov
add
mov
mov
sub
add
cmp
mov
jne
jmp
mov
test
je
mov
mov
test
je
cmp
jae
test
je
movzx
mov
shl
dec
add
inc
add
mov
cmp
jb
movzx
cmp
je
mov
mov
jmp
xor
xor
mov
test
je
mov
sar
and
mov
mov
mov
push
push
push
call
mov
mov
mov
mov
add
mov
jmp
cmp
jae
lea
test
je
movzx
mov
shl
dec
add
inc
add
mov
cmp
jb
mov
and
mov
shl
add
mov
shr
shl
and
add
shr
lea
mov
mov
mov
xor
xor
mov
cmp
je
push
push
push
call
mov
mov
mov
mov
add
mov
cmp
je
cmp
je
mov
and
shr
sub
mov
jmp
cmp
jae
mov
test
je
movzx
mov
shl
dec
add
inc
add
mov
cmp
jb
mov
shr
mov
and
and
dec
mov
cmp
ja
jmp
shr
mov
sub
jmp
mov
call
shr
mov
sub
jmp
shr
mov
sub
jmp
mov
mov
mov
shr
sub
jmp
mov
and
sub
shr
cmp
jae
test
je
movzx
mov
shl
dec
add
inc
add
mov
cmp
jb
mov
mov
not
and
shr
cmp
je
mov
mov
jmp
xor
mov
xor
mov
mov
mov
test
je
cmp
jbe
mov
mov
mov
cmp
jbe
mov
mov
test
je
mov
mov
push
push
push
call
mov
sub
sub
add
mov
add
add
sub
jmp
cmp
jae
test
je
movzx
mov
shl
dec
add
inc
add
mov
cmp
jb
mov
and
shr
add
mov
mov
shr
mov
and
and
inc
add
shr
sub
cmp
mov
mov
ja
cmp
ja
mov
mov
mov
cmp
jae
lea
cmp
jae
test
je
movzx
mov
shl
dec
add
inc
add
mov
cmp
jb
mov
movzx
mov
and
mov
inc
mov
shr
sub
cmp
jb
mov
cmp
jae
jmp
lea
mov
mov
movzx
xor
mov
inc
cmp
jb
lea
lea
mov
mov
lea
push
lea
push
push
mov
push
lea
push
push
call
mov
add
mov
test
jne
mov
mov
mov
add
cmp
jae
mov
mov
shl
mov
dec
and
mov
mov
shr
movzx
mov
cmp
jbe
test
je
movzx
mov
shl
mov
dec
add
add
mov
shl
mov
inc
mov
dec
and
mov
mov
shr
movzx
mov
cmp
ja
mov
shr
cmp
jae
mov
shr
movzx
cmp
jae
lea
test
je
movzx
mov
shl
dec
add
inc
add
mov
movzx
mov
cmp
jb
movzx
mov
shr
sub
mov
mov
inc
jmp
mov
cmp
jne
movzx
lea
mov
cmp
jae
jmp
lea
test
je
movzx
mov
shl
mov
dec
add
add
lea
inc
mov
cmp
jb
mov
shr
sub
test
je
movzx
mov
and
add
shr
mov
mov
sub
jmp
cmp
movzx
mov
jne
lea
cmp
jae
lea
test
je
movzx
mov
shl
mov
dec
add
add
lea
inc
mov
cmp
jb
shr
mov
and
add
mov
shr
mov
jmp
lea
cmp
jae
test
je
movzx
mov
shl
mov
dec
add
add
lea
inc
mov
cmp
jb
shr
mov
and
add
mov
shr
mov
sub
add
mov
mov
mov
add
mov
add
cmp
ja
cmp
je
mov
nop
mov
dec
mov
inc
cmp
jne
mov
add
cmp
jb
cmp
je
lea
lea
mov
lea
push
mov
lea
push
push
mov
push
lea
push
push
mov
call
add
mov
test
je
mov
mov
mov
jmp
mov
lea
mov
lea
push
lea
push
push
mov
mov
mov
push
lea
push
push
call
mov
add
mov
test
je
mov
mov
jmp
mov
cmp
jb
cmp
jb
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
jmp
mov
mov
shl
dec
and
mov
mov
mov
mov
shr
movzx
mov
cmp
jbe
lea
test
je
movzx
mov
shl
mov
dec
add
add
mov
shl
mov
inc
mov
dec
and
mov
mov
shr
movzx
mov
cmp
ja
test
je
test
jne
mov
shr
mov
movzx
mov
movzx
add
mov
mov
shl
mov
dec
and
shr
mov
shr
add
mov
mov
mov
movzx
mov
shr
movzx
add
cmp
jbe
nop
test
je
movzx
mov
shl
mov
dec
add
add
movzx
mov
movzx
add
mov
shl
mov
inc
mov
dec
and
shr
movzx
add
mov
mov
mov
shr
movzx
add
cmp
ja
movzx
mov
shr
sub
mov
shr
movzx
shr
sub
mov
mov
shr
mov
test
jne
mov
jmp
test
je
mov
jmp
test
je
mov
mov
jmp
movzx
and
mov
mov
mov
test
je
cmp
jae
jmp
lea
test
je
movzx
mov
shl
dec
add
inc
add
mov
cmp
jb
mov
mov
shl
dec
and
add
shr
sub
mov
mov
mov
shl
dec
and
mov
mov
mov
mov
shr
movzx
mov
cmp
jbe
nop
test
je
movzx
mov
shl
mov
dec
add
add
mov
shl
mov
inc
mov
dec
and
mov
mov
shr
movzx
mov
cmp
ja
test
jne
mov
shr
mov
movzx
mov
movzx
add
mov
mov
shl
mov
dec
and
shr
mov
shr
add
mov
mov
mov
movzx
mov
shr
movzx
add
cmp
jbe
test
je
movzx
mov
shl
mov
dec
add
add
movzx
mov
movzx
add
mov
shl
mov
inc
mov
dec
and
shr
movzx
add
mov
mov
mov
shr
movzx
add
cmp
ja
movzx
mov
shr
sub
mov
shr
movzx
shr
sub
mov
test
je
mov
mov
jmp
mov
movzx
shr
and
mov
mov
mov
mov
test
je
cmp
jae
test
je
movzx
mov
shl
dec
add
inc
add
mov
cmp
jb
mov
mov
shl
dec
and
add
shr
sub
mov
sub
add
cmp
jbe
mov
mov
jmp
mov
cmp
je
mov
sub
mov
cmp
jbe
sub
mov
mov
cmp
jbe
sub
mov
add
mov
sub
jmp
mov
sub
add
mov
mov
mov
mov
cmp
jbe
mov
jmp
mov
sub
mov
mov
mov
mov
mov
cmp
jbe
mov
mov
sub
mov
mov
sub
mov
mov
lea
mov
mov
inc
mov
inc
sub
jne
cmp
mov
jne
mov
jmp
cmp
je
mov
mov
mov
inc
dec
mov
mov
jmp
cmp
je
cmp
jae
test
je
movzx
mov
shl
dec
add
inc
add
mov
cmp
jb
mov
sub
mov
add
add
mov
test
je
mov
mov
push
sub
cmp
push
push
je
call
jmp
call
mov
mov
mov
add
mov
cmp
mov
mov
mov
jne
and
mov
shl
add
mov
shr
and
shl
add
mov
shr
add
cmp
je
mov
mov
jmp
xor
xor
mov
cmp
je
cmp
je
cmp
jae
test
je
movzx
mov
shl
dec
add
inc
add
mov
cmp
jb
cmp
je
mov
mov
mov
mov
cmp
jbe
mov
pop
pop
pop
pop
add
ret
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
pop
mov
pop
add
ret
xor
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
mov
jne
cmp
jge
mov
cmp
je
mov
mov
call
test
je
mov
pop
pop
pop
mov
pop
add
ret
mov
mov
sub
mov
sub
add
add
add
cmp
je
test
je
cmp
push
je
mov
mov
sub
push
push
call
jmp
mov
mov
sub
push
push
call
mov
add
mov
mov
neg
sbb
and
xor
cmp
setne
dec
and
add
add
mov
test
jne
test
je
cmp
jne
mov
test
jne
pop
pop
pop
mov
pop
add
ret
mov
pop
pop
pop
pop
add
ret
mov
pop
add
ret
lea
daa
je
add
inc
add
jbe
add
ja
add
js
add
js
add
jp
add
jp
add
jp
add
jnp
add
jl
add
jge
add
inc
add
inc
add
add
test
sbb
test
or
inc
add
xchg
add
inc
add
jnp
add
inc
add
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
mov
test
je
mov
test
je
mov
test
je
push
mov
push
call
add
mov
mov
mov
push
push
call
add
mov
xor
pop
ret
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
test
je
mov
test
je
cmp
push
mov
push
mov
je
cmp
je
pop
pop
pop
mov
pop
ret
cmp
jne
push
push
push
call
push
push
push
call
add
cmp
je
pop
pop
pop
mov
pop
ret
mov
call
test
je
pop
pop
mov
pop
mov
pop
ret
mov
cmp
jbe
sub
push
mov
add
push
push
call
mov
add
pop
pop
mov
mov
pop
xor
pop
ret
mov
push
sub
add
push
push
call
add
mov
pop
pop
mov
pop
xor
pop
ret
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
test
je
test
je
mov
mov
mov
xor
ret
mov
ret
int3
int3
int3
int3
mov
xor
cmp
jbe
push
push
lea
cmp
jae
mov
cmp
sbb
and
movzx
add
cmp
jne
inc
jmp
test
je
xor
jmp
mov
sub
mov
inc
cmp
jb
pop
pop
mov
ret
push
push
mov
test
je
mov
test
je
cmp
push
mov
jne
cmp
jae
lea
pop
pop
pop
ret
cmp
push
je
mov
mov
and
shl
sub
xor
mov
mov
cmp
jb
lea
mov
shr
add
mov
inc
cmp
jae
lea
push
lea
mov
call
add
mov
mov
lea
push
call
add
sub
add
mov
add
cmp
je
pop
pop
pop
mov
pop
ret
mov
push
call
add
mov
pop
mov
pop
pop
mov
xor
pop
ret
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
test
je
cmp
jne
cmp
jne
mov
ret
xor
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
test
je
mov
test
je
mov
test
je
mov
test
je
cmp
je
mov
push
push
push
push
call
mov
add
test
je
cmp
mov
je
mov
mov
mov
shl
mov
push
push
push
call
add
mov
test
jne
mov
mov
push
push
call
add
pop
pop
pop
mov
pop
pop
ret
push
push
mov
push
rep
call
mov
lea
add
cmp
jb
lea
cmp
ja
sub
sub
sar
lea
mov
mov
sub
sub
sar
lea
mov
mov
mov
sub
sub
sar
lea
mov
test
je
mov
mov
mov
shl
push
push
push
call
add
mov
mov
mov
pop
pop
pop
xor
pop
pop
ret
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
movzx
mov
shl
or
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
push
test
jbe
jmp
lea
nop
movzx
inc
lea
inc
cmp
jb
mov
mov
mov
mov
cmp
jne
dec
cmp
jae
mov
cmp
jbe
mov
test
jne
mov
xor
mov
mov
mov
mov
mov
mov
add
mov
mov
add
mov
pop
pop
xor
pop
add
ret
mov
cmp
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
add
cmp
jbe
jmp
inc
jmp
add
jmp
add
jmp
add
cmp
jae
mov
mov
mov
movzx
add
sub
js
inc
cmp
jbe
push
mov
test
jle
test
je
cmp
je
pop
pop
pop
or
pop
add
ret
pop
pop
or
pop
add
ret
xor
mov
mov
jmp
lea
mov
add
add
mov
cmp
jb
mov
xor
test
jbe
cmp
je
movzx
movzx
mov
mov
movzx
inc
lea
inc
cmp
jb
mov
sub
mov
je
sub
je
mov
mov
mov
jmp
mov
sub
mov
mov
sub
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
xor
xor
lea
mov
mov
mov
mov
cmp
jne
cmp
jae
mov
mov
mov
mov
movzx
mov
sub
mov
movzx
cmp
jge
mov
mov
jmp
jle
movzx
mov
add
mov
mov
mov
mov
mov
jmp
xor
mov
mov
mov
mov
sub
mov
shl
mov
mov
shr
mov
mov
lea
add
lea
mov
sub
sub
mov
test
jne
mov
lea
mov
shl
test
je
shr
test
jne
test
je
lea
and
add
mov
jmp
xor
add
mov
add
movzx
test
jne
cmp
je
mov
movzx
mov
movzx
mov
mov
cmp
jbe
mov
and
mov
cmp
je
test
jne
mov
mov
mov
lea
mov
mov
sub
mov
lea
shl
cmp
jae
lea
movzx
sub
test
jle
inc
inc
add
add
cmp
jb
mov
mov
shl
add
cmp
mov
jne
cmp
jae
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sar
mov
mov
jmp
mov
mov
sub
xor
mov
mov
mov
test
je
mov
test
je
mov
and
cmp
je
mov
mov
xor
mov
mov
mov
mov
mov
shr
mov
mov
lea
mov
shl
test
je
shr
test
jne
test
je
lea
and
add
mov
jne
mov
mov
lea
add
mov
pop
pop
pop
mov
xor
pop
add
ret
pop
pop
pop
mov
pop
add
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
mov
push
lea
xor
mov
add
sub
jne
lea
mov
xor
mov
add
sub
jne
lea
mov
xor
mov
add
sub
jne
mov
mov
xor
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
lea
cmp
mov
jg
push
jge
mov
mov
movzx
movzx
cmp
jb
jne
mov
cmp
ja
inc
mov
mov
movzx
movzx
cmp
jb
jne
mov
cmp
jbe
mov
mov
mov
mov
add
cmp
jle
mov
pop
pop
mov
pop
pop
ret
mov
pop
pop
mov
pop
pop
ret
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
movzx
mov
shl
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
inc
cmp
mov
mov
jge
mov
sub
lea
add
mov
mov
mov
jmp
mov
mov
mov
movzx
movzx
inc
cmp
jle
inc
mov
cmp
mov
jg
mov
inc
xor
cmp
jl
mov
sub
mov
mov
movzx
add
imul
add
test
je
movzx
add
imul
add
mov
add
sub
jne
mov
test
je
mov
lea
mov
lea
jmp
lea
mov
cmp
lea
jne
sub
dec
cmp
je
add
mov
add
mov
add
sub
test
jg
mov
test
je
mov
mov
movzx
mov
test
je
lea
mov
dec
sub
cmp
mov
jg
movzx
lea
cmp
je
movzx
mov
sub
imul
add
mov
mov
dec
mov
test
jne
mov
mov
dec
sub
mov
test
jne
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
push
movzx
xor
mov
mov
lea
lea
test
jne
mov
lea
mov
mov
test
jl
mov
add
inc
mov
mov
mov
nop
mov
mov
movzx
inc
cmp
jge
cmp
je
cmp
jge
add
jmp
test
je
cmp
je
inc
inc
jmp
cmp
jg
inc
jmp
inc
xor
mov
test
jne
mov
lea
jmp
cmp
jne
mov
lea
jmp
mov
lea
add
sub
jne
pop
pop
pop
pop
add
ret
int3
int3
sub
push
push
movzx
push
xor
push
mov
mov
mov
lea
lea
test
jne
mov
lea
test
jl
add
inc
mov
mov
mov
jmp
lea
nop
mov
movzx
mov
add
cmp
mov
mov
mov
jge
cmp
je
cmp
jge
lea
movzx
mov
mov
sub
cmp
jle
movzx
mov
shl
mov
or
movzx
mov
mov
add
mov
movzx
mov
mov
mov
add
mov
sub
shr
lea
mov
mov
mov
jmp
mov
shl
or
add
sub
mov
mov
jne
jmp
test
je
cmp
je
movzx
mov
mov
sub
cmp
mov
jle
movzx
mov
shl
mov
or
movzx
mov
mov
add
movzx
mov
mov
mov
mov
add
mov
sub
shr
mov
lea
mov
mov
jmp
mov
shl
or
mov
add
sub
mov
mov
movzx
mov
mov
sub
cmp
mov
jle
movzx
mov
shl
mov
or
movzx
mov
mov
add
movzx
mov
mov
mov
mov
add
mov
sub
shr
mov
lea
mov
mov
jmp
mov
shl
or
mov
add
add
cmp
mov
jle
mov
shl
mov
or
movzx
mov
mov
add
movzx
mov
mov
mov
mov
add
mov
sub
shr
add
mov
mov
jmp
shl
or
add
jmp
cmp
mov
mov
jg
movzx
sub
cmp
mov
jle
movzx
mov
shl
mov
or
movzx
mov
mov
add
movzx
mov
mov
mov
mov
add
mov
sub
shr
mov
lea
mov
mov
jmp
mov
shl
or
mov
add
add
cmp
mov
jle
mov
shl
mov
or
movzx
mov
mov
add
movzx
mov
mov
mov
mov
add
mov
sub
shr
add
mov
mov
jmp
shl
or
add
jmp
movzx
sub
cmp
mov
jle
movzx
mov
shl
mov
or
movzx
mov
mov
add
movzx
mov
mov
mov
mov
add
mov
sub
shr
mov
lea
mov
mov
jmp
mov
shl
or
mov
add
add
cmp
mov
jle
mov
shl
mov
or
movzx
mov
mov
add
movzx
mov
mov
mov
mov
add
mov
sub
shr
add
mov
mov
jmp
shl
or
add
mov
mov
xor
mov
test
jne
mov
lea
jmp
cmp
jne
mov
lea
jmp
mov
lea
add
sub
jne
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
push
mov
cmp
push
mov
push
push
push
mov
jle
mov
add
mov
shl
mov
or
movzx
mov
mov
add
movzx
mov
mov
mov
mov
add
mov
mov
sub
shr
add
mov
mov
jmp
mov
add
shl
or
add
mov
mov
cmp
jle
mov
dec
mov
shl
mov
mov
or
movzx
mov
mov
add
movzx
mov
mov
mov
mov
add
mov
mov
sub
shr
add
mov
mov
jmp
mov
dec
shl
or
add
mov
mov
cmp
jle
lea
mov
shl
mov
mov
or
movzx
mov
mov
add
movzx
mov
mov
mov
mov
add
mov
mov
sub
shr
add
mov
mov
jmp
lea
shl
or
add
mov
xor
test
jle
jmp
lea
mov
cmp
movzx
jle
movzx
mov
shl
mov
or
movzx
mov
mov
add
movzx
mov
mov
mov
mov
add
mov
mov
sub
shr
add
mov
mov
jmp
mov
shl
or
add
mov
add
cmp
jl
mov
dec
lea
call
mov
pop
pop
pop
dec
lea
pop
add
jmp
int3
int3
int3
int3
int3
int3
mov
mov
mov
push
mov
mov
mov
mov
push
mov
mov
mov
add
test
jne
add
jmp
add
movzx
add
lea
sub
cmp
jae
movzx
jmp
shr
movzx
add
mov
sub
xor
cmp
pop
sete
pop
mov
ret
int3
sub
push
mov
push
xor
push
push
cmp
je
lea
mov
movzx
mov
movzx
inc
mov
mov
test
jne
movzx
mov
sub
cmp
jle
movzx
mov
shl
mov
mov
or
movzx
mov
mov
inc
movzx
mov
mov
mov
mov
inc
mov
mov
sub
shr
lea
mov
jmp
mov
shl
or
add
jmp
movzx
movzx
mov
sub
cmp
mov
mov
mov
jle
movzx
mov
shl
mov
or
movzx
mov
mov
inc
mov
movzx
mov
mov
mov
inc
mov
sub
shr
mov
lea
mov
mov
mov
jmp
mov
shl
or
mov
add
mov
mov
mov
test
je
sub
mov
mov
sub
cmp
jle
mov
shl
mov
or
movzx
mov
mov
inc
movzx
mov
mov
mov
mov
inc
mov
mov
sub
shr
lea
mov
jmp
shl
or
add
mov
dec
cmp
jae
movzx
jmp
mov
shr
movzx
mov
movzx
mov
mov
sub
cmp
mov
jle
mov
movzx
mov
shl
mov
or
movzx
mov
mov
inc
movzx
mov
mov
mov
mov
inc
mov
mov
sub
shr
mov
lea
mov
mov
jmp
mov
mov
shl
or
add
mov
mov
test
je
mov
sub
mov
sub
cmp
jle
mov
shl
mov
mov
or
movzx
mov
mov
inc
movzx
mov
mov
mov
mov
inc
mov
mov
sub
shr
lea
mov
jmp
shl
or
add
mov
mov
cmp
jb
movzx
mov
mov
sub
cmp
jle
movzx
mov
shl
mov
mov
or
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
inc
mov
sub
shr
lea
pop
mov
mov
movzx
pop
pop
mov
pop
add
ret
mov
shl
or
add
pop
mov
movzx
pop
pop
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
lea
cmp
jne
inc
add
cmp
jl
cmp
jne
mov
lea
jmp
lea
cmp
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
add
add
cmp
jl
mov
xor
cmp
sete
mov
ret
mov
xor
inc
cmp
sete
mov
ret
mov
xor
add
cmp
sete
mov
ret
mov
xor
add
cmp
sete
mov
ret
mov
xor
add
cmp
sete
mov
ret
add
mov
xor
cmp
sete
mov
ret
int3
int3
int3
int3
int3
int3
int3
xor
push
mov
and
or
dec
shr
add
test
jg
shr
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
cmp
jne
movzx
mov
mov
mov
inc
movzx
mov
mov
mov
inc
xor
mov
mov
pop
ret
cmp
jl
mov
mov
mov
mov
movzx
inc
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
push
jle
movzx
mov
mov
mov
inc
mov
mov
movzx
jmp
test
jle
mov
mov
mov
mov
inc
xor
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
call
cmp
mov
mov
je
mov
mov
mov
add
mov
push
mov
mov
shr
mov
add
mov
mov
mov
not
mov
add
mov
mov
mov
not
shr
mov
add
pop
test
je
mov
mov
sub
mov
mov
mov
mov
add
add
test
jne
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
lea
lea
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
lea
xor
mov
sub
lea
mov
add
add
movzx
mov
inc
cmp
jle
xor
test
jl
push
movzx
test
je
movzx
movzx
inc
mov
xor
lea
mov
and
or
dec
shr
add
test
jg
shr
mov
inc
cmp
jle
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
push
push
push
mov
mov
mov
mov
xor
or
xor
cmp
mov
mov
mov
mov
jle
cmp
je
inc
mov
mov
mov
mov
mov
jmp
xor
mov
inc
cmp
jl
cmp
jge
cmp
jge
inc
mov
jmp
xor
inc
mov
mov
mov
mov
mov
dec
cmp
je
movzx
sub
cmp
jl
mov
mov
mov
mov
cdq
sub
mov
sar
cmp
jl
push
mov
call
dec
add
cmp
jge
mov
jmp
lea
mov
mov
mov
mov
dec
mov
push
mov
mov
call
mov
or
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
cmp
jb
movzx
jmp
movzx
inc
mov
movzx
mov
mov
mov
push
mov
inc
call
add
cmp
jge
dec
mov
mov
mov
mov
mov
call
mov
lea
call
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
lea
push
call
mov
lea
push
call
lea
push
call
add
mov
jmp
lea
movzx
cmp
jne
movzx
cmp
jne
movzx
cmp
jne
movzx
cmp
jne
sub
cmp
jge
lea
add
pop
ret
dec
lea
add
pop
ret
sub
lea
add
pop
ret
sub
lea
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
jle
push
push
mov
mov
shl
mov
or
movzx
mov
mov
movzx
inc
mov
mov
mov
mov
inc
mov
sub
shr
mov
add
mov
mov
mov
pop
pop
push
call
pop
ret
mov
shl
add
mov
mov
or
mov
push
call
pop
ret
int3
int3
int3
mov
mov
mov
shl
push
push
push
or
cmp
mov
jle
movzx
mov
mov
mov
add
movzx
mov
mov
mov
mov
add
mov
sub
mov
shr
add
mov
mov
jmp
add
mov
mov
xor
shl
or
cmp
jle
movzx
mov
mov
mov
add
movzx
mov
mov
mov
mov
add
mov
sub
xor
shr
add
mov
mov
jmp
add
mov
call
mov
mov
sub
add
cmp
jge
mov
shl
or
cmp
jle
movzx
mov
mov
mov
add
movzx
mov
mov
mov
mov
add
mov
sub
mov
shr
add
mov
mov
jmp
add
mov
mov
xor
shl
or
cmp
jle
movzx
mov
mov
mov
add
movzx
mov
mov
mov
mov
add
mov
sub
xor
shr
add
mov
mov
call
pop
pop
mov
pop
ret
add
mov
call
pop
pop
mov
pop
ret
int3
int3
int3
push
push
mov
push
mov
cmp
push
mov
jle
test
jbe
mov
cmp
jne
mov
call
lea
push
call
lea
push
call
add
mov
call
mov
mov
add
add
shr
shr
mov
cmp
ja
jmp
lea
mov
lea
cmp
ja
mov
test
je
mov
push
push
push
push
call
add
jmp
cmp
je
cmp
je
mov
cmp
mov
lea
jle
mov
shl
mov
or
movzx
mov
mov
inc
movzx
mov
mov
mov
mov
inc
mov
sub
shr
add
mov
mov
jmp
shl
or
add
mov
mov
mov
mov
inc
push
inc
push
inc
push
mov
call
lea
push
lea
push
mov
call
add
jmp
mov
cmp
mov
lea
jle
mov
shl
mov
or
movzx
mov
mov
inc
movzx
mov
mov
mov
mov
inc
mov
sub
shr
add
mov
mov
jmp
shl
or
add
mov
push
push
mov
call
add
mov
call
test
pop
je
mov
pop
pop
add
jmp
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
push
mov
push
mov
mov
mov
lea
push
push
mov
mov
mov
mov
call
add
test
jne
push
lea
push
push
call
mov
add
cmp
je
lea
push
call
add
cmp
je
cmp
jne
cmp
je
mov
pop
pop
add
ret
pop
mov
pop
add
ret
mov
lea
push
mov
call
add
pop
pop
add
ret
int3
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
lea
mov
sub
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
imul
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
pop
ret
jmp
jmp
jmp
int3
int3
mov
push
mov
mov
push
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
test
je
mov
mov
push
call
cmp
je
call
test
je
mov
push
push
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
mov
push
lea
push
mov
mov
mov
mov
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
test
je
mov
mov
push
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
mov
test
je
mov
mov
push
call
cmp
je
call
test
je
mov
push
push
push
call
test
je
push
call
add
mov
pop
pop
ret
mov
push
mov
pop
jmp
mov
push
mov
call
pop
ret
mov
push
mov
push
mov
call
test
je
push
call
pop
mov
pop
pop
ret
mov
push
push
push
mov
call
mov
mov
pop
ret
mov
jmp
mov
push
mov
push
mov
mov
call
test
je
push
call
pop
mov
pop
pop
ret
mov
push
mov
push
push
mov
call
mov
mov
pop
pop
ret
mov
push
mov
sub
jmp
push
call
pop
test
je
push
call
pop
test
je
leave
ret
test
mov
jne
or
mov
call
push
call
pop
push
lea
call
push
lea
push
call
int3
mov
push
mov
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmp
je
push
push
and
and
cmp
pop
pop
jne
pop
pop
pop
jmp
test
jne
shr
and
cmp
jb
rep
jmp
nop
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
js
inc
add
inc
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
dec
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
inc
(bad)
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
fs
add
add
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
add
inc
add
mov
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movs
mov
add
inc
add
inc
add
mov
add
mov
add
mov
add
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
inc
add
mov
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmp
je
push
push
and
and
cmp
pop
pop
jne
pop
pop
pop
jmp
test
jne
shr
and
cmp
jb
rep
jmp
nop
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
call
mov
add
mov
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
mov
mov
add
mov
add
mov
add
mov
add
inc
(bad)
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
aam
inc
add
mov
add
mov
add
mov
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
je
inc
add
mov
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
adc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
inc
add
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
jo
inc
add
inc
add
mov
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
push
call
mov
test
je
cmp
jne
push
call
pop
and
push
call
pop
mov
test
je
push
push
call
pop
pop
mov
call
cmp
jne
push
jmp
push
call
pop
ret
push
push
push
call
test
jne
call
mov
call
push
call
mov
pop
call
ret
mov
push
mov
push
and
push
lea
push
push
push
call
mov
add
test
jne
cmp
je
call
test
je
call
mov
mov
mov
pop
leave
ret
mov
push
mov
mov
push
xor
cmp
jbe
push
xor
pop
div
cmp
jae
call
push
push
push
push
push
mov
call
add
xor
jmp
imul
push
push
mov
cmp
je
push
call
pop
mov
push
push
call
mov
pop
pop
test
je
cmp
jae
sub
push
push
add
push
call
add
mov
pop
pop
pop
pop
ret
push
push
call
and
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
mov
call
mov
call
ret
push
call
pop
ret
mov
push
mov
push
mov
cmp
ja
push
push
mov
cmp
jne
call
push
call
push
call
pop
pop
mov
cmp
jne
test
je
mov
jmp
xor
inc
push
jmp
cmp
jne
push
call
pop
test
jne
test
jne
inc
add
and
push
push
push
call
mov
test
jne
push
pop
cmp
je
push
call
pop
test
je
mov
jmp
call
mov
call
mov
pop
mov
pop
jmp
push
call
pop
call
mov
xor
pop
pop
ret
mov
push
mov
cmp
push
mov
jne
xor
jmp
push
test
jne
cmp
je
call
test
jne
mov
test
je
cmp
je
push
call
pop
mov
jmp
push
call
pop
cmp
jbe
mov
cmp
jne
push
push
push
call
add
test
je
add
mov
test
jne
xor
pop
pop
pop
ret
mov
lea
jmp
push
push
call
xor
xor
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
xor
jmp
mov
push
push
call
pop
pop
cmp
sbb
neg
je
push
call
pop
mov
push
call
pop
mov
mov
call
mov
call
ret
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
test
jne
cmp
jb
cmp
je
jmp
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
mov
push
mov
sub
push
push
push
xor
cmp
je
cmp
je
mov
cmp
jne
call
push
push
push
push
push
mov
call
add
xor
pop
pop
pop
leave
ret
mov
cmp
je
or
xor
div
cmp
ja
mov
imul
test
mov
mov
mov
je
mov
mov
jmp
mov
test
je
mov
and
je
mov
test
je
jl
mov
cmp
jb
mov
push
push
push
call
sub
add
add
sub
add
jmp
cmp
jb
test
je
push
call
pop
test
jne
cmp
mov
je
xor
mov
div
sub
push
push
push
call
pop
push
call
add
cmp
je
mov
cmp
ja
mov
add
sub
cmp
jb
mov
jmp
mov
movsx
push
push
call
pop
pop
cmp
je
inc
mov
dec
mov
test
jg
mov
test
jne
mov
jmp
or
mov
sub
xor
div
jmp
or
mov
jmp
push
push
call
xor
cmp
je
cmp
je
xor
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
xor
call
ret
push
call
pop
mov
push
push
push
push
call
add
mov
mov
call
mov
jmp
push
call
pop
ret
mov
push
mov
mov
push
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
xor
jmp
mov
and
pop
pop
ret
mov
push
mov
sub
mov
push
mov
push
push
xor
mov
mov
cmp
je
cmp
je
cmp
jne
call
push
push
push
push
mov
push
call
add
xor
pop
pop
pop
leave
ret
mov
cmp
je
or
xor
div
cmp
jbe
cmp
je
push
push
push
call
add
cmp
je
or
xor
div
cmp
ja
mov
imul
test
mov
mov
je
mov
mov
jmp
mov
test
je
test
je
mov
test
je
jl
mov
cmp
jb
mov
cmp
ja
push
push
push
push
call
sub
add
add
sub
add
sub
mov
jmp
cmp
jb
cmp
je
mov
xor
cmp
jbe
mov
div
mov
jmp
mov
div
mov
sub
jmp
mov
cmp
ja
mov
cmp
ja
push
push
push
call
pop
push
call
add
test
je
cmp
je
add
sub
sub
jmp
push
call
pop
cmp
je
cmp
je
mov
inc
mov
mov
dec
dec
mov
test
jne
mov
jmp
xor
cmp
je
push
push
push
call
add
call
push
push
push
push
mov
push
jmp
cmp
je
push
push
push
call
add
call
mov
xor
push
push
push
push
push
jmp
or
mov
sub
xor
div
jmp
or
jmp
push
push
call
xor
mov
cmp
je
cmp
je
cmp
jne
cmp
je
push
push
push
call
add
call
mov
push
push
push
push
push
call
add
xor
call
ret
push
call
pop
mov
push
push
push
push
push
call
add
mov
mov
call
mov
jmp
push
call
pop
ret
mov
push
mov
push
push
push
push
push
call
add
pop
ret
mov
push
mov
mov
xor
cmp
je
inc
cmp
jb
lea
cmp
ja
push
pop
pop
ret
mov
pop
ret
add
push
pop
cmp
sbb
and
add
pop
ret
call
test
jne
mov
ret
add
ret
call
test
jne
mov
ret
add
ret
mov
push
mov
push
call
mov
push
mov
call
pop
mov
call
mov
pop
pop
ret
mov
push
mov
push
push
mov
push
xor
or
cmp
jne
call
push
push
push
push
push
mov
call
add
or
jmp
test
je
push
call
push
mov
call
push
call
push
call
add
test
jge
or
jmp
mov
cmp
je
push
call
pop
mov
mov
mov
pop
pop
pop
pop
ret
push
push
call
or
xor
mov
xor
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
test
je
mov
mov
call
ret
push
call
pop
mov
push
call
pop
mov
mov
call
jmp
mov
push
call
pop
ret
mov
push
mov
sub
push
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
or
jmp
mov
push
mov
cmp
je
cmp
jne
call
push
push
push
push
push
mov
call
add
or
jmp
mov
mov
cmp
ja
mov
push
push
lea
push
mov
push
mov
push
mov
call
add
mov
cmp
je
dec
js
mov
mov
jmp
lea
push
push
call
pop
pop
mov
pop
pop
pop
leave
ret
mov
push
mov
push
push
push
push
push
call
add
pop
ret
int3
int3
int3
push
lea
sub
sbb
not
and
mov
and
cmp
jb
mov
pop
xchg
mov
mov
ret
sub
test
jmp
mov
push
mov
push
push
mov
mov
mov
and
xor
cmp
jne
test
je
mov
push
mov
sub
test
jle
push
push
push
call
pop
push
call
add
cmp
jne
mov
test
jns
and
mov
jmp
or
or
pop
mov
and
mov
pop
mov
pop
pop
ret
mov
push
mov
push
mov
test
jne
push
call
pop
jmp
push
call
pop
test
je
or
jmp
test
je
push
call
push
call
pop
neg
pop
sbb
jmp
xor
pop
pop
ret
push
push
call
xor
mov
mov
push
call
pop
mov
xor
mov
cmp
jge
mov
lea
cmp
je
mov
test
je
push
push
call
pop
pop
xor
inc
mov
mov
mov
mov
test
je
cmp
jne
push
call
pop
cmp
je
inc
jmp
cmp
jne
test
je
push
call
pop
cmp
jne
or
mov
call
inc
jmp
xor
mov
mov
push
push
call
pop
pop
ret
mov
call
cmp
mov
je
mov
call
ret
push
call
pop
ret
push
push
call
xor
cmp
jne
push
call
pop
jmp
push
call
pop
mov
push
call
pop
mov
mov
call
mov
call
ret
push
call
pop
ret
push
call
pop
ret
mov
push
mov
push
mov
mov
test
jne
call
mov
or
jmp
and
cmp
mov
jne
push
call
add
and
pop
push
call
mov
pop
test
jns
and
mov
jmp
test
je
test
je
test
jne
mov
push
push
push
call
pop
push
call
xor
add
cmp
setne
dec
mov
pop
pop
ret
push
push
call
xor
xor
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
mov
cmp
je
cmp
je
cmp
jne
push
call
pop
mov
push
push
push
call
add
mov
mov
call
mov
call
ret
push
call
pop
ret
push
push
call
xor
mov
xor
mov
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
push
call
pop
mov
test
jne
push
call
pop
cmp
je
cmp
je
mov
sar
mov
and
shl
add
jmp
mov
test
jne
cmp
je
cmp
je
mov
sar
and
shl
add
jmp
mov
test
je
call
mov
push
push
push
push
push
call
add
or
cmp
jne
dec
js
mov
mov
mov
movzx
inc
jmp
push
push
call
pop
pop
mov
mov
call
mov
call
ret
mov
push
call
pop
ret
mov
push
mov
push
mov
test
jl
call
cmp
jl
call
mov
call
mov
pop
pop
ret
mov
push
mov
push
push
call
mov
xor
cmp
jne
mov
jmp
push
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
mov
jmp
push
mov
call
push
push
push
call
add
test
je
push
push
push
push
push
call
add
mov
pop
pop
pop
pop
ret
push
push
call
xor
mov
xor
cmp
setne
cmp
jne
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
push
call
pop
mov
and
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
shl
add
jmp
mov
movsx
and
mov
mov
call
xor
call
ret
mov
push
call
pop
ret
mov
push
mov
pop
jmp
mov
push
mov
sub
push
push
mov
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
or
jmp
push
call
cmp
pop
mov
jge
mov
push
push
push
call
add
cmp
mov
jl
mov
test
jne
sub
jmp
mov
mov
push
mov
sub
mov
test
je
mov
mov
sar
mov
and
shl
test
je
mov
cmp
jae
mov
cmp
jne
inc
xor
inc
cmp
jb
cmp
jne
mov
jmp
test
js
call
mov
jmp
test
je
mov
cmp
jne
mov
jmp
mov
mov
sub
add
sar
and
lea
mov
mov
shl
test
je
push
push
push
call
add
cmp
jne
mov
mov
add
jmp
cmp
jne
inc
inc
cmp
jb
test
jmp
push
push
push
call
add
test
jge
or
jmp
mov
cmp
ja
mov
test
je
test
je
mov
mov
mov
test
je
inc
mov
sub
mov
mov
add
pop
pop
pop
leave
ret
push
push
call
xor
xor
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
push
call
pop
mov
push
call
pop
mov
mov
call
mov
call
ret
push
call
pop
ret
push
push
call
xor
mov
xor
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
xor
jmp
mov
cmp
jne
call
mov
jmp
cmp
jl
cmp
jb
call
mov
jmp
mov
sar
and
shl
mov
movsx
xor
inc
and
je
jmp
inc
cmp
je
mov
cmp
je
cmp
je
cmp
jne
push
pop
xor
mov
or
jmp
mov
jmp
cmp
je
movsx
sub
je
sub
je
sub
je
dec
je
sub
je
sub
jne
cmp
jne
mov
jmp
cmp
jne
xor
inc
and
jmp
cmp
jne
xor
inc
or
jmp
test
jns
xor
jmp
and
or
inc
mov
test
jne
jmp
inc
cmp
je
xor
cmp
sete
cmp
je
call
mov
mov
cmp
jne
call
mov
jmp
mov
inc
mov
mov
mov
mov
call
mov
call
ret
mov
push
call
pop
ret
push
push
call
xor
mov
xor
mov
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
xor
jmp
xor
mov
cmp
setne
cmp
je
xor
cmp
setne
cmp
je
call
mov
cmp
jne
call
mov
jmp
mov
cmp
jne
call
mov
push
lea
push
push
call
add
jmp
push
push
push
push
call
add
mov
mov
call
mov
call
ret
push
call
pop
ret
mov
push
mov
push
push
push
call
add
pop
ret
mov
push
mov
cmp
je
call
push
call
push
call
pop
pop
pop
ret
push
push
call
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
cmp
jbe
xor
cmp
setne
mov
jmp
and
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
and
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
push
call
pop
test
je
push
call
pop
mov
mov
push
push
push
call
add
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
mov
cmp
jne
push
call
call
mov
mov
call
ret
call
jmp
mov
push
mov
sub
mov
push
push
push
pop
mov
lea
rep
mov
mov
pop
mov
pop
test
je
test
je
mov
lea
push
push
push
push
call
leave
ret
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
mov
push
mov
call
call
cmp
mov
je
call
fnclex
pop
ret
cmp
jne
repz
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
push
mov
push
mov
xor
push
mov
mov
mov
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
test
jne
mov
lea
mov
mov
mov
mov
cmp
je
lea
lea
mov
lea
mov
mov
mov
test
je
mov
call
mov
test
jl
jg
mov
mov
cmp
jne
cmp
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
mov
jmp
mov
cmp
jne
cmp
je
push
call
add
test
je
mov
push
push
call
add
mov
call
mov
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
mov
cmp
je
push
push
mov
call
jmp
int3
int3
int3
int3
push
lea
sub
and
add
sbb
or
pop
jmp
push
lea
sub
and
add
sbb
or
pop
jmp
push
push
call
push
call
pop
and
mov
mov
test
je
mov
mov
mov
test
je
cmp
jne
mov
mov
push
call
pop
push
call
pop
and
mov
call
call
ret
mov
jmp
push
call
pop
ret
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
mov
push
mov
mov
mov
mov
mov
and
mov
pop
ret
mov
push
mov
push
mov
push
mov
mov
mov
mov
test
mov
push
je
test
je
push
call
mov
inc
push
call
pop
pop
mov
test
je
push
push
push
call
add
jmp
and
jmp
mov
pop
mov
pop
pop
pop
ret
cmp
mov
je
push
call
pop
ret
mov
test
jne
mov
ret
mov
push
mov
push
mov
call
test
je
push
call
pop
mov
pop
pop
ret
mov
push
mov
push
push
push
push
push
call
push
mov
mov
call
mov
pop
pop
cmp
jb
mov
sub
lea
cmp
jb
push
call
mov
lea
pop
cmp
jae
mov
cmp
jae
mov
add
cmp
jb
push
push
call
pop
pop
test
jne
lea
cmp
jb
push
push
call
pop
pop
test
je
sar
push
lea
call
pop
mov
push
call
mov
add
push
call
pop
mov
mov
pop
jmp
xor
pop
pop
pop
leave
ret
mov
push
push
push
call
mov
push
call
add
mov
mov
test
jne
push
pop
pop
ret
and
xor
pop
ret
push
push
call
call
and
push
call
pop
mov
mov
call
mov
call
ret
call
ret
mov
push
mov
push
call
neg
sbb
neg
pop
dec
pop
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
push
call
pop
test
je
push
call
pop
test
je
xor
inc
pop
ret
xor
pop
ret
push
mov
sub
mov
mov
mov
mov
mov
shr
jmp
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
mov
mov
mov
pop
ret
push
mov
sub
mov
mov
mov
mov
mov
cdq
mov
mov
xor
sub
and
xor
sub
cdq
mov
xor
sub
and
xor
sub
mov
or
jne
mov
mov
and
mov
cmp
je
sub
push
push
push
call
add
mov
mov
test
je
mov
mov
add
sub
mov
add
sub
mov
mov
mov
mov
rep
mov
jmp
cmp
jne
neg
add
mov
mov
mov
mov
rep
mov
add
mov
add
mov
sub
push
push
push
call
add
mov
jmp
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
mov
mov
mov
pop
ret
push
push
call
and
movapd
mov
jmp
mov
mov
mov
cmp
je
cmp
je
xor
ret
xor
inc
ret
mov
and
mov
mov
call
ret
mov
push
mov
sub
xor
push
mov
mov
mov
push
pushf
pop
mov
xor
push
popf
pushf
pop
sub
je
push
popf
xor
cpuid
mov
mov
mov
mov
mov
cpuid
mov
mov
pop
test
je
call
test
je
xor
inc
jmp
xor
pop
leave
ret
call
mov
xor
ret
mov
push
mov
xor
cmp
push
sete
push
push
call
mov
test
jne
pop
ret
xor
inc
mov
pop
ret
mov
push
push
xor
mov
cmp
jne
lea
mov
push
push
add
call
pop
pop
test
je
inc
cmp
jl
xor
inc
pop
pop
ret
and
xor
jmp
mov
push
mov
push
mov
push
mov
test
je
cmp
je
push
call
push
call
and
pop
add
cmp
jl
mov
pop
mov
test
je
cmp
jne
push
call
add
cmp
jl
pop
pop
ret
mov
push
mov
mov
push
call
pop
ret
push
push
call
xor
inc
mov
xor
cmp
jne
call
push
call
push
call
pop
pop
mov
lea
cmp
je
mov
jmp
push
call
pop
mov
cmp
jne
call
mov
xor
jmp
push
call
pop
mov
cmp
jne
push
push
call
pop
pop
test
jne
push
call
pop
call
mov
mov
jmp
mov
jmp
push
call
pop
mov
call
mov
call
ret
push
call
pop
ret
mov
push
mov
mov
push
lea
cmp
jne
push
call
pop
test
jne
push
call
pop
push
call
pop
pop
ret
mov
push
mov
mov
mov
imul
add
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
pop
ret
mov
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
mov
test
jne
push
lea
mov
mov
mov
mov
mov
mov
test
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
dec
jne
mov
and
jmp
lea
shr
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
mov
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
not
and
dec
jne
mov
and
jmp
lea
shr
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmp
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
mov
cmp
jae
cmp
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmp
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
dec
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
and
mov
mov
dec
mov
mov
cmp
jne
and
mov
cmp
jne
push
push
push
call
mov
push
push
push
call
mov
mov
imul
mov
sub
lea
push
lea
push
push
call
mov
add
dec
cmp
jbe
sub
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
push
mov
push
xor
cmp
jne
add
imul
push
push
push
push
call
cmp
jne
xor
jmp
add
mov
mov
imul
add
push
push
push
call
mov
cmp
je
push
push
push
push
call
mov
cmp
jne
push
push
push
call
jmp
or
mov
mov
inc
mov
or
mov
pop
pop
ret
mov
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
add
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
mov
cmp
ja
mov
sub
shr
lea
inc
or
or
lea
mov
lea
mov
mov
mov
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
and
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
mov
cmp
jbe
push
pop
mov
mov
cmp
jne
mov
cmp
jae
shr
mov
lea
not
and
dec
jne
mov
and
jmp
add
shr
mov
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmp
jle
mov
mov
sar
dec
lea
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
mov
cmp
jae
cmp
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmp
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
mov
mov
cmp
jbe
push
pop
test
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
dec
jne
mov
and
jmp
lea
shr
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
mov
cmp
jae
cmp
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmp
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
mov
imul
add
add
and
mov
sar
push
dec
cmp
push
push
jge
or
shr
or
jmp
add
or
xor
shr
mov
mov
mov
jmp
mov
mov
and
and
or
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
mov
cmp
jb
cmp
jne
jmp
cmp
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmp
jne
add
mov
cmp
jb
cmp
jne
call
mov
mov
test
jne
xor
jmp
push
call
pop
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
je
mov
mov
and
and
or
jne
and
mov
lea
mov
and
and
or
jne
inc
mov
add
jmp
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
add
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
dec
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
dec
mov
jne
mov
mov
and
jmp
mov
cmp
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmp
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmp
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
lea
mov
test
jne
cmp
jne
mov
cmp
jne
and
mov
mov
lea
pop
pop
pop
leave
ret
int3
push
push
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
push
mov
mov
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
push
push
call
mov
xor
cmp
jbe
push
pop
xor
div
cmp
sbb
inc
jne
call
mov
push
push
push
push
push
call
add
xor
jmp
imul
mov
mov
cmp
jne
xor
inc
xor
mov
cmp
ja
cmp
jne
add
and
mov
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
mov
call
mov
cmp
je
push
push
push
call
add
cmp
jne
push
push
push
call
mov
cmp
jne
cmp
je
push
call
pop
test
jne
mov
cmp
je
mov
jmp
xor
mov
push
call
pop
ret
cmp
jne
mov
cmp
je
mov
mov
call
ret
push
push
call
mov
test
jne
push
call
pop
jmp
mov
test
jne
push
call
pop
jmp
cmp
jne
xor
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
cmp
jb
mov
push
push
push
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
push
call
mov
cmp
je
mov
dec
cmp
jb
mov
push
push
push
call
push
push
call
add
mov
call
cmp
jne
test
jne
inc
add
and
mov
push
push
push
push
call
mov
jmp
mov
mov
push
call
pop
ret
mov
test
jne
cmp
je
push
call
pop
test
jne
call
cmp
jne
mov
call
push
call
pop
mov
jmp
test
jne
call
cmp
je
mov
jmp
test
jne
inc
push
push
push
push
call
mov
test
jne
cmp
je
push
call
pop
test
je
cmp
jbe
push
call
pop
call
mov
xor
call
ret
call
jmp
test
jne
call
mov
call
push
call
mov
pop
mov
jmp
push
push
call
xor
mov
xor
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
cmp
jne
push
call
pop
mov
push
call
pop
mov
cmp
je
mov
sub
mov
jmp
mov
mov
call
cmp
jne
push
push
push
call
mov
mov
call
ret
xor
mov
mov
push
call
pop
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
and
push
push
lea
push
push
call
lea
mov
lea
add
mov
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
lea
push
call
test
jne
test
jne
push
call
pop
push
call
push
call
mov
xor
pop
call
leave
ret
mov
push
mov
push
call
pop
test
je
pop
jmp
push
call
pop
pop
jmp
mov
push
mov
push
mov
push
call
push
call
add
cmp
ja
test
je
pop
pop
ret
mov
push
mov
call
push
call
push
call
push
call
add
pop
ret
mov
push
mov
push
call
test
je
push
push
call
test
je
push
call
pop
ret
mov
push
mov
push
call
pop
push
call
int3
push
call
pop
ret
push
call
pop
ret
mov
push
mov
push
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
cmp
je
push
call
pop
test
je
push
call
pop
call
push
push
call
pop
pop
test
jne
push
call
mov
mov
call
cmp
pop
je
push
call
pop
test
je
push
push
push
call
xor
pop
ret
push
push
call
push
call
pop
and
xor
inc
cmp
je
mov
mov
mov
cmp
jne
push
call
pop
mov
mov
test
je
push
call
pop
mov
mov
mov
mov
sub
mov
cmp
jb
call
cmp
je
cmp
jb
push
call
mov
call
mov
call
push
call
mov
push
call
add
cmp
jne
cmp
je
mov
mov
mov
mov
mov
mov
jmp
push
mov
call
pop
push
mov
call
pop
mov
call
cmp
jne
mov
push
call
pop
push
call
xor
inc
cmp
je
push
call
pop
ret
call
ret
mov
push
mov
push
push
push
call
add
pop
ret
mov
push
mov
push
push
push
call
add
pop
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
mov
push
call
mov
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
mov
pop
ret
mov
push
mov
push
push
push
mov
push
push
xor
xor
mov
cmp
je
inc
mov
cmp
jb
cmp
jae
push
call
pop
cmp
je
push
call
pop
test
jne
cmp
je
cmp
je
push
mov
push
mov
push
call
add
test
je
push
push
push
push
push
call
add
push
mov
push
push
mov
call
test
jne
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
push
call
inc
pop
cmp
jbe
push
call
sub
add
push
mov
push
sub
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
jmp
xor
push
push
push
call
add
test
je
push
push
push
push
push
call
add
mov
push
push
push
call
add
test
je
push
push
push
push
push
call
add
push
push
push
call
add
jmp
push
call
mov
cmp
je
cmp
je
push
lea
push
lea
push
call
pop
push
push
push
call
pop
pop
pop
leave
ret
push
call
pop
cmp
je
push
call
pop
test
jne
cmp
jne
push
call
push
call
pop
pop
ret
mov
push
mov
mov
push
mov
mov
test
jne
call
mov
mov
mov
mov
mov
mov
cmp
je
mov
test
jne
call
mov
mov
cmp
je
mov
mov
test
jne
call
mov
mov
test
jne
or
mov
jmp
mov
mov
mov
mov
mov
pop
pop
ret
mov
push
mov
sub
push
push
lea
call
mov
xor
cmp
jne
cmp
je
mov
and
xor
jmp
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
cmp
je
push
mov
cmp
jbe
call
push
push
push
push
push
mov
call
add
jmp
mov
cmp
jne
push
push
push
push
call
add
jmp
push
push
push
push
push
push
push
lea
push
call
add
cmp
jne
cmp
je
mov
and
mov
jmp
add
cmp
je
mov
and
pop
pop
leave
ret
mov
push
mov
push
push
push
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
mov
push
mov
push
push
push
push
xor
push
mov
mov
mov
cmp
je
mov
push
push
push
push
push
push
push
push
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
push
call
test
je
lea
push
push
call
pop
pop
test
jge
cmp
je
push
call
pop
mov
add
mov
cmp
jne
xor
pop
pop
pop
leave
ret
or
jmp
push
call
pop
jmp
mov
push
mov
mov
push
xor
push
push
cmp
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
inc
inc
cmp
je
dec
jne
cmp
jne
mov
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
pop
ret
mov
push
mov
xor
cmp
jbe
mov
cmp
je
inc
inc
cmp
jb
pop
ret
push
mov
sub
mov
mov
mov
shr
pxor
jmp
lea
nop
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
dec
jne
mov
mov
pop
ret
push
mov
sub
mov
mov
cdq
mov
xor
sub
and
xor
sub
test
jne
mov
mov
and
mov
cmp
je
sub
push
push
call
add
mov
mov
test
je
add
sub
mov
xor
mov
mov
rep
mov
jmp
neg
add
mov
xor
mov
mov
rep
mov
mov
mov
add
sub
push
push
push
call
add
mov
mov
mov
pop
ret
mov
push
mov
push
push
mov
push
call
mov
mov
pop
test
jne
call
mov
or
or
jmp
test
je
call
mov
jmp
push
xor
test
je
mov
test
je
mov
and
mov
mov
mov
and
or
mov
mov
mov
test
jne
call
add
cmp
je
call
add
cmp
jne
push
call
pop
test
jne
push
call
pop
test
push
je
mov
mov
lea
mov
mov
sub
dec
cmp
mov
jle
push
push
push
call
add
mov
jmp
or
mov
or
jmp
mov
cmp
je
cmp
je
mov
and
mov
sar
shl
add
jmp
mov
test
je
push
push
push
push
call
and
add
cmp
je
mov
mov
mov
jmp
xor
inc
push
lea
push
push
call
add
mov
cmp
je
or
or
jmp
mov
and
pop
pop
pop
leave
ret
mov
push
mov
mov
call
mov
xor
mov
mov
push
xor
mov
mov
mov
cmp
jne
xor
jmp
cmp
jne
call
mov
call
push
push
push
push
push
mov
call
add
or
jmp
push
push
mov
mov
sar
lea
mov
and
shl
add
mov
add
sar
mov
mov
cmp
je
cmp
jne
mov
not
test
jne
call
xor
mov
call
push
push
push
push
push
mov
call
add
jmp
test
je
push
push
push
push
call
add
push
call
pop
test
je
mov
test
je
call
mov
xor
cmp
lea
sete
push
mov
push
mov
call
test
je
xor
cmp
je
test
je
call
mov
mov
xor
mov
cmp
jbe
mov
mov
test
jne
mov
mov
xor
cmp
sete
mov
mov
add
cmp
je
mov
mov
mov
and
push
lea
push
jmp
movsx
push
call
pop
test
je
mov
sub
add
xor
inc
cmp
jbe
push
lea
push
push
call
add
cmp
je
inc
inc
jmp
push
push
lea
push
call
add
cmp
je
xor
push
push
push
lea
push
push
lea
push
push
push
inc
inc
call
mov
test
je
push
lea
push
push
lea
push
mov
mov
push
call
test
je
mov
mov
add
cmp
mov
jl
cmp
je
push
lea
push
push
lea
push
mov
mov
mov
push
call
test
je
cmp
jl
inc
inc
jmp
cmp
je
cmp
jne
movzx
xor
cmp
sete
inc
inc
add
mov
mov
cmp
je
cmp
jne
push
call
pop
cmp
jne
add
cmp
je
push
pop
push
mov
call
pop
cmp
jne
inc
inc
mov
cmp
jb
jmp
mov
mov
inc
mov
mov
mov
jmp
xor
mov
add
test
je
mov
mov
test
jne
mov
cmp
jbe
jmp
mov
mov
and
sub
lea
cmp
jae
mov
inc
mov
inc
cmp
jne
inc
mov
inc
inc
mov
inc
inc
cmp
jb
mov
lea
sub
push
lea
push
push
lea
push
mov
push
call
test
je
mov
add
cmp
jl
mov
sub
cmp
jb
jmp
mov
cmp
jne
cmp
jbe
jmp
mov
mov
and
sub
lea
cmp
jae
mov
add
movzx
inc
inc
cmp
jne
add
push
pop
mov
inc
inc
add
add
mov
inc
inc
cmp
jb
mov
lea
sub
push
lea
push
push
lea
push
mov
push
call
test
je
mov
add
cmp
jl
mov
sub
cmp
jb
jmp
cmp
jbe
mov
and
sub
push
lea
pop
cmp
jae
mov
movzx
add
add
cmp
jne
push
pop
mov
add
add
add
mov
add
cmp
jb
xor
push
push
push
lea
push
lea
sub
cdq
sub
sar
push
mov
push
push
push
call
mov
cmp
je
push
lea
push
mov
sub
push
lea
push
mov
mov
push
call
test
je
add
cmp
jg
jmp
call
mov
cmp
jg
mov
sub
mov
cmp
jb
jmp
push
lea
push
push
push
push
call
test
je
mov
and
mov
jmp
call
mov
cmp
jne
cmp
je
push
pop
cmp
jne
call
mov
call
mov
jmp
push
call
pop
jmp
mov
mov
test
je
mov
cmp
jne
xor
jmp
call
mov
call
and
or
jmp
mov
sub
pop
pop
mov
xor
pop
call
leave
ret
push
push
call
mov
cmp
jne
call
and
call
mov
or
jmp
xor
cmp
jl
cmp
jb
call
mov
call
mov
push
push
push
push
push
call
add
jmp
mov
sar
lea
mov
and
shl
mov
movsx
and
je
push
call
pop
mov
mov
test
je
push
push
push
call
add
mov
jmp
call
mov
call
mov
or
mov
call
mov
call
ret
push
call
pop
ret
mov
push
mov
mov
push
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
or
jmp
mov
pop
pop
ret
mov
ret
mov
push
push
pop
test
jne
mov
jmp
cmp
jge
mov
mov
push
push
call
pop
pop
mov
test
jne
push
push
mov
call
pop
pop
mov
test
jne
push
pop
pop
ret
xor
mov
jmp
mov
mov
add
add
cmp
jl
push
pop
xor
mov
push
mov
sar
mov
mov
and
shl
mov
cmp
je
cmp
je
test
jne
mov
add
inc
cmp
jl
pop
xor
pop
ret
call
cmp
je
call
push
call
pop
ret
mov
push
mov
push
mov
mov
cmp
jb
cmp
ja
mov
sub
sar
add
push
call
or
pop
jmp
add
push
call
pop
pop
ret
mov
push
mov
mov
cmp
jge
add
push
call
mov
or
pop
pop
ret
mov
add
push
call
pop
ret
mov
push
mov
mov
mov
cmp
jb
cmp
ja
and
sub
sar
add
push
call
pop
pop
ret
add
push
call
pop
ret
mov
push
mov
mov
cmp
mov
jge
and
add
push
call
pop
pop
ret
add
push
call
pop
ret
mov
push
mov
push
mov
push
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
jmp
mov
test
je
test
jne
test
je
or
mov
jmp
or
mov
test
jne
push
call
pop
jmp
mov
mov
push
push
push
call
pop
push
call
add
mov
cmp
je
cmp
je
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
push
lea
call
and
pop
shl
add
pop
jmp
mov
mov
and
cmp
jne
or
cmp
jne
mov
test
je
test
jne
mov
mov
dec
movzx
inc
mov
jmp
neg
sbb
and
add
or
mov
or
pop
pop
pop
ret
mov
push
mov
sub
mov
push
mov
push
pop
mov
mov
cmp
jne
call
and
call
mov
or
jmp
push
xor
cmp
jl
cmp
jb
call
mov
call
push
push
push
push
push
mov
call
add
or
jmp
mov
sar
push
lea
mov
and
shl
add
mov
test
jne
call
mov
call
mov
jmp
cmp
ja
mov
cmp
je
test
jne
cmp
je
mov
add
sar
mov
movsx
dec
push
pop
je
dec
jne
mov
not
test
je
and
mov
mov
mov
jmp
mov
not
test
jne
call
mov
call
mov
push
push
push
push
push
call
add
jmp
mov
shr
mov
cmp
jb
mov
push
call
pop
mov
cmp
jne
call
mov
call
mov
or
jmp
push
push
push
push
call
mov
mov
mov
add
mov
mov
add
test
je
mov
cmp
je
cmp
je
mov
mov
inc
dec
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
mov
mov
inc
dec
cmp
mov
mov
jne
mov
mov
cmp
je
cmp
je
mov
mov
inc
dec
mov
mov
push
lea
push
push
push
mov
push
call
test
je
mov
cmp
jl
cmp
ja
mov
add
lea
test
je
cmp
je
cmp
je
mov
cmp
jne
or
jmp
and
mov
mov
add
mov
mov
cmp
jae
mov
mov
cmp
je
cmp
je
mov
inc
inc
mov
jmp
mov
dec
cmp
jae
lea
cmp
jne
inc
inc
mov
mov
jmp
mov
jmp
inc
push
lea
push
push
lea
push
mov
push
call
test
jne
call
test
jne
cmp
je
mov
test
je
cmp
je
mov
mov
mov
mov
jmp
cmp
jne
cmp
je
push
push
push
push
call
add
cmp
je
mov
inc
mov
cmp
jb
jmp
mov
lea
test
jne
or
jmp
mov
mov
inc
mov
sub
cmp
mov
jne
test
je
dec
mov
test
js
inc
jmp
xor
inc
movzx
jmp
cmp
jg
cmp
jb
dec
movzx
inc
cmp
je
mov
movzx
movsx
test
jne
call
mov
jmp
inc
cmp
jne
add
jmp
mov
add
test
je
inc
cmp
mov
jl
mov
mov
mov
inc
cmp
jne
mov
mov
mov
inc
sub
jmp
neg
cdq
push
push
push
push
call
add
mov
sub
shr
push
push
push
push
push
push
call
mov
test
jne
call
push
call
pop
or
mov
cmp
je
push
call
pop
mov
cmp
jne
mov
jmp
mov
mov
xor
cmp
setne
add
mov
mov
jmp
cmp
je
mov
cmp
jne
or
jmp
and
mov
mov
add
mov
mov
cmp
jae
mov
movzx
cmp
je
cmp
je
mov
inc
inc
inc
inc
mov
jmp
mov
add
cmp
jae
lea
cmp
jne
add
mov
push
jmp
mov
jmp
add
push
lea
push
push
lea
push
mov
push
call
test
jne
call
test
jne
cmp
je
mov
test
je
cmp
je
push
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jne
cmp
je
push
push
push
push
call
add
cmp
je
push
pop
mov
inc
inc
mov
cmp
jb
jmp
mov
lea
test
jne
or
jmp
mov
mov
inc
inc
sub
mov
jmp
call
push
pop
cmp
jne
call
mov
call
mov
jmp
cmp
jne
mov
jmp
xor
pop
pop
pop
leave
ret
push
push
call
mov
cmp
jne
call
and
call
mov
or
jmp
xor
cmp
jl
cmp
jb
call
mov
call
mov
push
push
push
push
push
call
add
jmp
mov
sar
lea
mov
and
shl
mov
movsx
and
je
mov
cmp
sbb
inc
jne
call
mov
call
mov
jmp
push
call
pop
mov
mov
test
je
push
push
push
call
add
mov
jmp
call
mov
call
mov
or
mov
call
mov
call
ret
push
call
pop
ret
mov
push
mov
push
mov
push
xor
cmp
jne
xor
jmp
cmp
jne
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
cmp
je
cmp
jb
push
push
push
call
add
jmp
push
push
push
call
add
cmp
je
cmp
jae
call
push
pop
mov
mov
jmp
push
pop
pop
pop
pop
ret
mov
push
mov
push
push
mov
call
test
je
mov
cmp
je
push
push
call
call
test
je
mov
jmp
mov
push
call
test
jne
push
call
pop
test
je
push
push
call
test
je
push
call
mov
mov
pop
pop
ret
push
call
pop
ret
mov
push
mov
push
push
mov
call
test
je
mov
cmp
je
push
push
call
call
test
je
mov
jmp
mov
push
call
test
jne
push
call
pop
test
je
push
push
call
test
je
push
call
mov
mov
pop
pop
ret
call
ret
mov
push
push
call
mov
test
jne
push
call
pop
mov
push
push
call
mov
pop
ret
mov
cmp
je
push
push
call
pop
call
or
mov
cmp
je
push
call
or
jmp
push
push
call
mov
push
call
test
jne
push
call
pop
mov
mov
mov
xor
inc
mov
test
je
push
push
mov
call
mov
push
push
call
mov
mov
mov
mov
mov
push
call
pop
and
push
call
mov
call
push
call
pop
mov
mov
mov
test
jne
mov
mov
push
call
pop
mov
call
call
ret
xor
inc
mov
push
call
pop
ret
push
call
pop
ret
mov
push
push
call
push
mov
call
call
mov
test
jne
push
push
call
mov
pop
pop
test
je
push
push
push
call
pop
call
test
je
push
push
call
pop
pop
call
or
mov
jmp
push
call
pop
xor
push
call
pop
mov
pop
ret
mov
push
call
mov
test
jne
push
call
pop
mov
pop
ret
push
push
call
mov
test
je
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
cmp
je
push
call
pop
push
call
pop
and
mov
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
call
push
call
pop
mov
mov
test
je
push
call
pop
cmp
je
cmp
je
cmp
jne
push
call
pop
mov
call
push
call
pop
call
ret
mov
push
call
pop
ret
mov
push
call
pop
ret
mov
push
push
mov
push
call
test
jne
push
call
pop
mov
test
je
mov
push
push
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
cmp
mov
mov
je
cmp
je
cmp
je
test
jne
mov
mov
mov
mov
mov
mov
call
mov
cmp
je
push
push
call
test
je
call
push
call
push
mov
call
push
mov
call
push
mov
call
add
mov
call
test
je
push
push
call
pop
call
mov
cmp
je
push
push
call
mov
pop
pop
test
je
push
push
push
call
pop
call
test
je
push
push
call
pop
pop
call
or
mov
xor
inc
jmp
call
xor
pop
pop
ret
mov
push
mov
push
mov
push
push
call
pop
cmp
je
mov
cmp
jne
test
jne
cmp
jne
test
je
push
call
push
mov
call
pop
pop
cmp
je
push
call
pop
push
call
test
jne
call
mov
jmp
xor
push
call
mov
sar
mov
and
shl
pop
mov
test
je
push
call
pop
or
jmp
xor
pop
pop
pop
ret
push
push
call
mov
cmp
jne
call
and
call
mov
or
jmp
xor
cmp
jl
cmp
jb
call
mov
call
mov
push
push
push
push
push
call
add
jmp
mov
sar
lea
mov
and
shl
mov
movsx
and
je
push
call
pop
mov
mov
test
je
push
call
pop
mov
jmp
call
mov
or
mov
call
mov
call
ret
push
call
pop
ret
mov
push
mov
push
mov
mov
test
je
test
je
push
call
and
xor
pop
mov
mov
mov
pop
pop
ret
test
je
cmp
je
dec
js
mov
mov
inc
movzx
jmp
movsx
push
push
call
pop
pop
cmp
jne
or
ret
inc
ret
mov
push
mov
push
mov
jmp
mov
mov
dec
call
cmp
je
cmp
jg
pop
pop
ret
mov
push
mov
test
push
push
mov
mov
je
cmp
jne
mov
add
jmp
mov
dec
mov
call
inc
cmp
jne
call
cmp
jne
mov
mov
call
cmp
jg
pop
pop
pop
ret
mov
push
mov
sub
mov
xor
mov
push
mov
push
mov
xor
push
mov
push
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
jne
call
mov
xor
push
push
push
push
push
call
add
cmp
je
mov
and
or
jmp
test
jne
push
call
pop
mov
cmp
je
cmp
je
mov
and
mov
sar
shl
add
jmp
mov
test
jne
cmp
je
cmp
je
mov
and
sar
shl
add
jmp
mov
test
jne
xor
cmp
je
mov
mov
mov
mov
mov
test
je
inc
cmp
mov
jl
mov
sub
cmp
ja
movsx
movsx
and
xor
jmp
xor
xor
movsx
push
sar
pop
mov
cmp
ja
jmp
or
mov
mov
mov
mov
mov
mov
jmp
movsx
sub
je
sub
je
sub
je
dec
dec
je
sub
jne
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
cmp
jne
add
mov
mov
cmp
mov
jge
or
neg
jmp
mov
imul
movsx
lea
mov
jmp
mov
jmp
cmp
jne
add
mov
mov
cmp
mov
jge
or
jmp
mov
imul
movsx
lea
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
jne
or
jmp
cmp
jne
inc
or
mov
jmp
or
jmp
or
jmp
mov
cmp
jne
cmp
jne
inc
inc
or
mov
jmp
cmp
jne
cmp
jne
inc
inc
and
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
lea
push
movzx
push
mov
call
pop
test
mov
pop
je
mov
lea
call
mov
inc
mov
test
je
mov
lea
call
jmp
movsx
cmp
jg
je
cmp
jg
je
sub
je
dec
dec
je
dec
dec
je
dec
dec
jne
add
mov
mov
or
cmp
lea
mov
mov
mov
jge
mov
jmp
test
jne
or
jmp
test
jne
or
mov
cmp
jne
mov
add
test
mov
mov
mov
je
cmp
jne
mov
mov
mov
mov
jmp
sub
je
dec
dec
je
sub
je
dec
dec
jne
add
test
mov
je
movzx
push
push
lea
push
lea
push
call
add
test
je
mov
jmp
mov
mov
mov
lea
mov
jmp
mov
add
mov
cmp
je
mov
cmp
je
test
movsx
mov
je
cdq
sub
sar
mov
jmp
mov
jmp
mov
mov
push
call
pop
jmp
cmp
jg
je
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
jne
test
mov
je
or
jmp
mov
add
mov
call
test
je
test
je
mov
mov
jmp
mov
mov
mov
jmp
or
mov
mov
test
je
mov
mov
add
jmp
jne
cmp
jne
mov
jmp
cmp
jle
mov
cmp
jle
mov
add
push
call
mov
pop
mov
test
je
mov
mov
mov
jmp
mov
xor
mov
add
mov
mov
mov
lea
push
push
movsx
push
mov
push
push
lea
push
push
push
call
pop
call
mov
add
and
je
cmp
jne
lea
push
push
push
call
pop
call
pop
pop
cmp
jne
cmp
jne
lea
push
push
push
call
pop
call
pop
pop
cmp
jne
or
inc
mov
push
jmp
mov
mov
jmp
sub
je
dec
dec
je
sub
jne
mov
test
mov
je
mov
add
mov
mov
mov
jmp
test
jne
add
test
je
mov
test
je
movsx
jmp
movzx
cdq
jmp
mov
test
je
cdq
jmp
xor
mov
test
je
cmp
jg
jl
cmp
jae
neg
adc
neg
or
test
mov
mov
jne
xor
cmp
jge
mov
jmp
and
mov
cmp
jle
mov
mov
or
jne
and
lea
mov
dec
test
jg
mov
or
je
mov
cdq
push
push
push
push
call
add
cmp
mov
mov
mov
jle
add
mov
dec
jmp
lea
sub
inc
test
mov
mov
je
test
je
mov
cmp
je
dec
mov
mov
inc
jmp
dec
cmp
je
inc
inc
cmp
jne
sub
sar
jmp
cmp
jne
mov
mov
mov
jmp
dec
cmp
je
inc
cmp
jne
sub
mov
cmp
jne
mov
test
je
test
je
mov
jmp
test
je
mov
jmp
test
je
mov
mov
mov
sub
sub
test
jne
push
lea
push
push
call
add
push
mov
lea
lea
call
test
pop
je
test
jne
push
push
push
lea
call
add
cmp
mov
je
test
jle
mov
mov
movzx
dec
push
push
lea
push
lea
inc
push
inc
call
add
test
jne
cmp
je
push
lea
lea
call
cmp
pop
jne
jmp
or
jmp
mov
push
lea
call
pop
cmp
jl
test
je
push
push
push
lea
call
add
cmp
je
push
call
and
pop
mov
mov
mov
test
je
mov
mov
mov
jmp
cmp
je
mov
and
mov
mov
pop
pop
xor
pop
call
leave
ret
nop
into
cmovno
iret
or
inc
add
inc
add
push
inc
add
push
inc
add
adc
push
push
call
mov
cmp
jne
call
mov
or
jmp
xor
cmp
jl
cmp
jb
call
mov
push
push
push
push
push
call
add
jmp
mov
sar
lea
mov
and
shl
mov
movsx
and
je
push
call
pop
mov
mov
test
je
push
call
pop
push
call
test
jne
call
mov
jmp
mov
cmp
je
call
mov
mov
call
mov
or
mov
call
mov
call
ret
push
call
pop
ret
mov
push
mov
push
mov
push
call
pop
cmp
jne
call
mov
or
jmp
push
push
push
push
push
call
mov
cmp
jne
call
jmp
xor
test
je
push
call
pop
or
jmp
mov
sar
mov
and
shl
lea
and
mov
pop
pop
pop
ret
push
push
call
mov
cmp
jne
call
and
call
mov
or
jmp
xor
cmp
jl
cmp
jb
call
mov
call
mov
push
push
push
push
push
call
add
jmp
mov
sar
lea
mov
and
shl
mov
movsx
and
je
push
call
pop
mov
mov
test
je
push
push
push
call
add
mov
jmp
call
mov
call
mov
or
mov
call
mov
call
ret
push
call
pop
ret
push
push
call
xor
mov
lea
push
call
mov
push
push
pop
push
call
pop
pop
cmp
je
mov
mov
lea
jmp
mov
or
mov
mov
mov
mov
mov
mov
mov
add
mov
add
cmp
jb
cmp
je
mov
cmp
je
mov
lea
lea
mov
mov
cmp
jl
mov
mov
jmp
push
push
call
pop
pop
test
je
mov
lea
mov
add
lea
jmp
mov
or
mov
and
and
mov
mov
and
mov
add
mov
add
cmp
jb
inc
cmp
jl
jmp
mov
and
test
jle
mov
mov
cmp
je
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
shl
add
mov
mov
mov
mov
mov
push
lea
push
call
pop
pop
test
je
inc
inc
inc
add
cmp
jl
xor
mov
shl
add
mov
cmp
je
cmp
je
or
jmp
mov
test
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
test
je
push
call
test
je
mov
and
cmp
jne
or
jmp
cmp
jne
or
push
lea
push
call
pop
pop
test
je
inc
jmp
or
mov
inc
cmp
jl
push
call
xor
jmp
xor
inc
ret
mov
mov
or
call
ret
mov
ret
mov
ret
mov
push
mov
push
push
xor
push
call
mov
pop
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
push
push
push
call
mov
add
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
push
push
call
mov
pop
pop
test
jne
cmp
je
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
push
push
push
call
mov
add
test
jne
cmp
je
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
mov
xor
push
cmp
jne
cmp
jne
cmp
jne
xor
pop
pop
pop
pop
ret
cmp
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
cmp
mov
jne
mov
mov
inc
inc
cmp
je
dec
jne
jmp
mov
mov
inc
inc
cmp
je
dec
je
dec
jne
cmp
jne
mov
cmp
jne
cmp
jne
mov
push
mov
pop
jmp
mov
call
push
pop
mov
mov
jmp
push
push
call
xor
xor
mov
push
call
pop
mov
xor
mov
cmp
jge
mov
lea
cmp
je
mov
mov
test
jne
test
jne
lea
cmp
ja
lea
push
call
pop
test
je
mov
push
push
call
pop
pop
mov
mov
test
je
push
push
call
pop
pop
inc
jmp
mov
mov
jmp
shl
push
call
pop
mov
mov
mov
add
cmp
je
push
mov
add
push
call
pop
pop
test
mov
jne
push
call
pop
mov
mov
jmp
mov
add
push
call
mov
mov
mov
mov
cmp
je
and
mov
mov
mov
mov
or
mov
call
mov
call
ret
mov
push
call
pop
ret
mov
push
mov
sub
mov
push
xor
push
mov
mov
mov
mov
mov
jmp
inc
cmp
je
mov
cmp
je
cmp
je
cmp
je
call
push
push
push
push
push
mov
call
add
xor
jmp
mov
jmp
or
mov
jmp
mov
or
xor
inc
inc
mov
push
cmp
je
lea
mov
cmp
je
movsx
cmp
jg
je
sub
je
sub
je
dec
je
sub
je
sub
je
sub
jne
cmp
jne
or
mov
jmp
or
jmp
test
jne
or
jmp
mov
jmp
test
jne
mov
and
or
mov
mov
and
or
mov
jmp
cmp
jne
or
mov
jmp
sub
je
sub
je
dec
je
sub
je
sub
jne
test
jne
or
jmp
cmp
jne
and
mov
jmp
cmp
jne
or
mov
jmp
test
jne
or
jmp
test
je
xor
jmp
or
inc
mov
cmp
jne
cmp
je
jmp
inc
cmp
je
push
push
push
call
add
test
jne
add
jmp
inc
cmp
je
cmp
jne
inc
cmp
je
push
push
push
call
add
test
jne
add
or
jmp
push
push
push
call
add
test
jne
add
or
jmp
push
push
push
call
add
test
jne
add
or
jmp
inc
cmp
je
cmp
je
call
push
push
push
push
push
mov
call
add
jmp
push
push
lea
push
push
push
call
add
test
je
xor
jmp
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
push
push
push
mov
mov
mov
push
push
push
push
push
push
push
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmp
jne
push
mov
call
mov
mov
call
jmp
pop
add
pop
pop
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
push
push
push
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
push
push
push
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
push
call
add
pop
ret
mov
push
mov
mov
mov
cmp
jne
cmp
jne
mov
cmp
je
cmp
je
cmp
je
cmp
jne
call
xor
pop
ret
push
call
xor
ret
mov
push
mov
push
push
push
call
mov
test
je
mov
mov
push
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
cmp
jae
cmp
jne
mov
jmp
xor
test
je
mov
mov
test
jne
xor
jmp
cmp
jne
and
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
add
cmp
jge
imul
mov
and
mov
mov
inc
add
add
cmp
jl
mov
mov
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
push
push
call
pop
mov
jmp
and
push
call
mov
pop
mov
or
pop
pop
pop
leave
ret
cmp
jne
call
push
mov
push
xor
test
jne
or
jmp
cmp
je
inc
push
call
pop
lea
mov
test
jne
push
inc
push
call
mov
pop
pop
mov
test
je
mov
push
jmp
push
call
mov
inc
cmp
pop
je
push
push
call
pop
pop
mov
test
je
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
add
add
cmp
jne
push
call
and
and
mov
xor
pop
pop
pop
pop
ret
push
call
and
or
jmp
mov
push
mov
push
mov
push
xor
push
mov
mov
mov
mov
cmp
je
mov
add
mov
mov
cmp
jne
xor
cmp
mov
sete
inc
mov
jmp
inc
test
je
mov
mov
inc
mov
mov
movzx
push
inc
call
pop
test
je
inc
cmp
je
mov
mov
inc
mov
inc
mov
mov
test
je
cmp
jne
cmp
je
cmp
jne
test
je
mov
and
cmp
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmp
je
cmp
je
mov
add
mov
inc
xor
inc
xor
jmp
inc
inc
cmp
je
cmp
jne
test
jne
cmp
je
lea
cmp
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
dec
test
je
mov
inc
inc
test
jne
mov
mov
test
je
cmp
jne
cmp
je
cmp
je
test
je
movsx
push
test
je
call
pop
test
je
mov
mov
inc
mov
inc
inc
mov
mov
inc
mov
jmp
call
pop
test
je
inc
inc
inc
mov
inc
jmp
test
je
mov
inc
mov
inc
mov
jmp
mov
pop
pop
test
je
and
inc
leave
ret
mov
push
mov
sub
push
xor
push
push
cmp
jne
call
push
mov
push
push
mov
call
mov
mov
cmp
je
mov
cmp
jne
mov
mov
lea
push
push
push
lea
call
mov
add
cmp
jae
mov
cmp
jae
mov
shl
lea
cmp
jb
push
call
mov
pop
cmp
je
mov
lea
push
add
push
push
lea
call
mov
add
dec
mov
mov
xor
jmp
or
pop
pop
pop
leave
ret
mov
push
mov
mov
sub
push
push
mov
push
xor
xor
cmp
jne
call
mov
cmp
je
mov
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
jne
xor
jmp
mov
cmp
je
inc
inc
cmp
jne
inc
inc
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
pop
mov
cmp
je
push
push
push
push
push
push
push
push
call
test
jne
push
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
jne
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
push
mov
call
mov
pop
cmp
jne
push
call
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
leave
ret
mov
push
mov
mov
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
mov
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
sub
mov
and
and
push
push
mov
mov
cmp
je
test
je
not
mov
jmp
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
cmp
jne
mov
jmp
test
jne
mov
shl
or
mov
not
mov
pop
pop
pop
leave
ret
mov
push
mov
sub
push
push
lea
call
mov
movsx
push
call
cmp
jmp
inc
movzx
push
call
test
pop
jne
movsx
push
call
pop
cmp
jne
inc
inc
mov
mov
mov
mov
mov
mov
inc
mov
mov
mov
mov
inc
test
jne
pop
cmp
je
mov
and
leave
ret
mov
push
mov
sub
push
push
lea
call
mov
mov
mov
test
je
mov
mov
mov
cmp
je
inc
mov
test
jne
mov
inc
test
je
jmp
cmp
je
cmp
je
inc
mov
test
jne
mov
dec
cmp
je
mov
mov
push
mov
cmp
pop
jne
dec
mov
inc
inc
mov
test
jne
cmp
pop
je
mov
and
leave
ret
mov
push
mov
fldz
mov
fcomp
fnstsw
test
jp
xor
inc
pop
ret
xor
pop
ret
mov
push
mov
push
push
cmp
push
push
je
lea
push
call
mov
mov
mov
mov
mov
jmp
lea
push
call
mov
mov
mov
add
leave
ret
mov
push
mov
push
push
push
push
call
add
pop
ret
mov
push
mov
test
je
push
call
inc
push
push
add
push
call
add
pop
ret
mov
push
mov
push
push
call
pop
pop
pop
ret
mov
push
mov
push
push
call
pop
pop
pop
ret
mov
push
mov
sub
push
push
push
push
lea
mov
call
xor
cmp
jne
call
push
pop
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
cmp
jbe
cmp
jle
mov
jmp
xor
add
cmp
ja
call
push
jmp
cmp
je
mov
xor
cmp
setg
xor
cmp
sete
mov
add
mov
call
mov
cmp
mov
jne
mov
lea
cmp
jle
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
sete
add
add
cmp
jne
or
jmp
sub
add
push
push
push
call
add
xor
test
je
push
push
push
push
push
call
add
lea
cmp
je
mov
mov
inc
cmp
je
mov
dec
jns
neg
mov
inc
cmp
jl
cdq
push
pop
idiv
add
mov
inc
cmp
jl
cdq
push
pop
idiv
add
mov
add
test
je
cmp
jne
push
lea
push
push
call
add
cmp
je
mov
and
xor
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
xor
mov
mov
push
push
push
mov
push
pop
push
lea
push
lea
push
push
push
call
xor
add
cmp
jne
call
push
push
push
push
push
mov
call
add
mov
jmp
mov
cmp
jbe
mov
cmp
jne
or
jmp
xor
cmp
sete
sub
xor
cmp
setg
sub
lea
push
lea
push
push
xor
cmp
sete
xor
cmp
setg
add
add
push
call
add
cmp
je
mov
jmp
push
lea
push
push
push
mov
push
push
call
add
mov
pop
pop
xor
pop
call
leave
ret
mov
push
mov
push
push
push
push
push
push
call
add
pop
ret
mov
push
mov
sub
push
push
push
lea
mov
xor
mov
call
cmp
jge
mov
mov
cmp
jne
call
push
pop
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
cmp
jbe
mov
add
mov
cmp
ja
call
push
jmp
mov
mov
mov
mov
mov
shr
mov
push
and
xor
cmp
jne
test
jne
mov
cmp
jne
or
jmp
add
push
push
lea
push
push
push
call
add
test
je
cmp
mov
je
mov
and
jmp
cmp
jne
mov
inc
mov
inc
cmp
push
sete
dec
and
add
mov
inc
push
call
pop
pop
test
je
cmp
sete
dec
and
add
mov
mov
jmp
and
xor
or
je
mov
inc
mov
mov
inc
test
sete
dec
and
add
mov
mov
inc
neg
sbb
and
and
xor
add
xor
or
jne
mov
mov
mov
and
inc
or
jne
mov
jmp
mov
jmp
mov
inc
mov
inc
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
and
mov
ja
cmp
jbe
mov
mov
cmp
jle
mov
and
mov
movsx
and
and
call
add
movzx
cmp
jbe
add
mov
sub
mov
mov
shrd
shr
inc
dec
cmp
mov
mov
jge
cmp
jl
mov
and
mov
movsx
and
and
call
cmp
jbe
lea
mov
cmp
je
cmp
jne
mov
dec
jmp
cmp
je
mov
cmp
jne
add
mov
jmp
inc
mov
jmp
inc
cmp
jle
push
push
push
call
add
add
mov
cmp
jne
mov
cmp
mov
sete
dec
and
add
mov
mov
mov
inc
call
xor
and
and
sub
push
pop
sbb
js
jg
cmp
jb
mov
inc
jmp
mov
inc
neg
adc
neg
cmp
mov
mov
jl
mov
jg
cmp
jb
push
push
push
push
call
add
mov
inc
mov
mov
mov
cmp
jne
test
jl
jg
cmp
jb
push
push
push
push
call
add
mov
mov
inc
mov
mov
cmp
jne
test
jl
jg
cmp
jb
push
push
push
push
call
add
mov
mov
inc
mov
mov
add
mov
mov
cmp
je
mov
and
xor
pop
pop
pop
leave
ret
mov
push
mov
sub
push
push
push
push
mov
mov
mov
lea
dec
call
test
jne
call
push
pop
mov
xor
push
push
push
push
push
call
add
cmp
je
mov
and
mov
jmp
cmp
jbe
cmp
je
cmp
jne
xor
cmp
sete
add
add
mov
mov
cmp
mov
jne
mov
lea
mov
xor
inc
test
jg
mov
call
mov
inc
jmp
add
cmp
jle
mov
call
mov
mov
mov
mov
mov
mov
inc
test
jge
neg
cmp
jne
cmp
jl
mov
mov
mov
call
push
push
push
call
add
cmp
je
mov
and
xor
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
xor
mov
mov
push
push
push
mov
push
pop
push
lea
push
lea
push
push
push
call
xor
add
cmp
jne
call
push
push
push
push
push
mov
call
add
mov
jmp
mov
cmp
jbe
cmp
jne
or
jmp
xor
cmp
sete
sub
mov
lea
push
mov
add
push
push
xor
cmp
sete
add
push
call
add
cmp
je
mov
jmp
push
lea
push
push
push
mov
call
add
mov
pop
pop
xor
pop
call
leave
ret
mov
push
mov
sub
mov
xor
mov
mov
push
push
mov
push
push
pop
push
lea
push
lea
push
push
push
call
xor
add
cmp
jne
call
push
push
push
push
push
mov
call
add
mov
jmp
mov
cmp
jbe
mov
dec
mov
xor
cmp
sete
lea
cmp
jne
or
jmp
sub
lea
push
push
push
push
call
add
cmp
je
mov
jmp
mov
dec
cmp
setl
cmp
jl
cmp
jge
cmp
je
mov
inc
test
jne
mov
push
lea
push
push
mov
push
call
add
jmp
push
lea
push
push
push
mov
push
push
call
add
mov
pop
pop
xor
pop
call
leave
ret
mov
push
mov
mov
cmp
je
cmp
je
cmp
jne
push
push
push
push
push
call
add
pop
ret
cmp
je
cmp
je
push
push
push
push
push
push
call
jmp
push
push
push
push
push
push
call
jmp
push
push
push
push
push
push
call
add
pop
ret
mov
push
mov
push
push
push
push
push
push
push
call
add
pop
ret
mov
push
push
xor
lea
push
call
add
pop
mov
cmp
jb
pop
pop
ret
mov
push
push
push
xor
push
call
add
test
je
push
push
push
push
push
call
add
pop
ret
mov
push
mov
sub
fld
fstp
fld
fstp
fld
fdiv
fmul
fsubr
fstp
fld1
fcomp
fnstsw
test
jp
xor
inc
leave
ret
xor
leave
ret
push
call
test
je
push
push
call
test
je
push
call
ret
jmp
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmp
jne
push
call
pop
push
call
push
call
leave
ret
int3
mov
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
cmp
jne
xor
mov
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
add
movzx
push
push
movzx
xor
push
lea
test
jbe
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
mov
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
mov
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
mov
xor
cmp
sete
mov
ret
mov
mov
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
push
mov
mov
mov
pop
ret
push
push
call
and
push
push
call
mov
jmp
mov
mov
mov
mov
xor
cmp
sete
mov
ret
mov
cmp
jne
push
call
and
mov
mov
call
ret
and
ret
push
push
call
call
mov
test
je
and
call
jmp
xor
inc
ret
mov
mov
call
call
ret
push
call
pop
mov
ret
mov
push
mov
mov
mov
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
pop
cmp
jae
cmp
je
xor
pop
ret
push
call
pop
ret
push
push
call
xor
mov
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
push
mov
call
mov
add
mov
jmp
mov
sub
je
sub
je
dec
je
call
mov
xor
push
push
push
push
push
call
add
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
push
call
mov
pop
xor
cmp
je
cmp
jne
push
call
cmp
je
push
call
pop
xor
mov
cmp
je
cmp
je
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
mov
add
cmp
jge
mov
imul
mov
mov
inc
jmp
call
mov
mov
call
cmp
jne
push
push
call
pop
jmp
mov
mov
cmp
je
push
call
pop
ret
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
sub
push
push
push
call
and
cmp
mov
jne
push
call
mov
test
je
mov
push
push
call
test
je
push
call
mov
push
mov
call
push
call
mov
push
mov
call
push
call
mov
push
mov
call
push
call
pop
mov
test
je
push
push
call
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
push
mov
call
pop
pop
mov
test
je
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
test
jne
or
jmp
mov
cmp
je
push
call
pop
test
je
call
mov
test
je
mov
cmp
je
push
call
pop
test
je
push
call
mov
push
call
pop
test
je
push
push
push
push
call
jmp
xor
pop
pop
pop
leave
ret
mov
push
mov
mov
push
xor
push
push
cmp
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
cmp
jne
mov
jmp
mov
cmp
je
inc
dec
jne
cmp
je
mov
mov
inc
inc
cmp
je
dec
jne
cmp
jne
mov
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
pop
ret
mov
push
mov
mov
push
xor
cmp
jl
cmp
jle
cmp
jne
mov
jmp
mov
mov
jmp
call
push
push
push
push
push
mov
call
add
or
pop
pop
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
push
push
mov
push
xor
lea
push
push
call
xor
movzx
mov
mov
mov
mov
shl
or
lea
stos
stos
stos
mov
add
lea
sub
mov
mov
mov
inc
dec
jne
lea
mov
mov
mov
inc
dec
jne
pop
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
lea
push
push
call
mov
test
je
xor
mov
inc
cmp
jb
mov
mov
test
je
lea
movzx
movzx
cmp
ja
sub
inc
push
lea
push
push
call
add
inc
mov
inc
test
jne
push
push
lea
push
push
push
lea
push
push
push
call
xor
push
push
lea
push
push
push
lea
push
push
push
push
call
add
push
push
lea
push
push
push
lea
push
push
push
push
call
add
xor
movzx
test
je
or
mov
jmp
test
je
or
mov
mov
jmp
mov
inc
cmp
jb
jmp
lea
mov
xor
sub
mov
lea
add
lea
cmp
ja
or
mov
add
jmp
cmp
ja
or
mov
sub
mov
jmp
mov
inc
cmp
jb
mov
pop
xor
pop
call
leave
ret
push
push
call
call
mov
mov
test
je
cmp
je
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
and
mov
mov
cmp
je
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
mov
mov
mov
push
call
mov
call
jmp
mov
push
call
pop
ret
mov
push
mov
sub
push
xor
push
lea
call
mov
cmp
jne
mov
call
cmp
je
mov
and
jmp
cmp
jne
mov
call
jmp
cmp
jne
mov
mov
mov
jmp
cmp
je
mov
and
mov
pop
leave
ret
mov
push
mov
sub
mov
xor
mov
push
mov
push
mov
push
call
mov
xor
mov
cmp
jne
mov
call
xor
jmp
mov
xor
cmp
je
inc
add
cmp
jb
cmp
je
cmp
je
movzx
push
call
test
je
lea
push
push
call
test
je
push
lea
push
push
call
xor
inc
add
mov
mov
cmp
jbe
cmp
je
lea
mov
test
je
movzx
movzx
jmp
push
lea
push
push
call
mov
add
imul
mov
lea
mov
jmp
mov
test
je
movzx
movzx
jmp
mov
mov
or
movzx
inc
cmp
jbe
mov
inc
inc
cmp
jne
mov
inc
add
cmp
mov
jb
mov
mov
mov
call
push
mov
lea
lea
pop
mov
inc
mov
inc
inc
inc
dec
jne
mov
call
jmp
or
inc
cmp
jbe
inc
inc
cmp
jne
lea
mov
or
inc
dec
jne
mov
call
mov
mov
jmp
mov
xor
movzx
mov
shl
or
lea
stos
stos
stos
jmp
cmp
jne
or
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
or
call
mov
mov
call
mov
mov
call
mov
cmp
je
push
call
pop
mov
test
je
mov
mov
mov
rep
and
push
push
call
pop
pop
mov
test
jne
mov
push
call
test
jne
mov
cmp
je
push
call
pop
mov
push
mov
call
test
jne
test
jne
push
call
pop
and
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
push
call
test
jne
mov
cmp
je
push
call
pop
mov
push
call
mov
call
jmp
push
call
pop
ret
jmp
cmp
jne
cmp
je
push
call
pop
call
mov
jmp
and
mov
call
ret
cmp
jne
push
call
pop
mov
xor
ret
mov
push
mov
push
push
mov
mov
xor
push
cmp
je
cmp
je
mov
cmp
je
cmp
jne
mov
cmp
je
cmp
jne
push
call
push
call
pop
pop
mov
cmp
je
cmp
jne
push
call
push
call
pop
pop
push
call
push
call
pop
pop
mov
cmp
je
cmp
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
push
call
add
lea
mov
cmp
je
cmp
jne
push
call
push
call
pop
pop
lea
mov
cmp
je
mov
cmp
je
cmp
jne
push
call
pop
cmp
je
mov
cmp
je
cmp
jne
push
call
pop
add
dec
jne
push
call
pop
pop
pop
pop
pop
ret
mov
push
mov
push
push
mov
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
mov
cmp
je
mov
test
je
push
call
cmp
je
mov
test
je
push
call
add
dec
jne
mov
add
push
call
pop
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
push
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
mov
cmp
je
mov
test
je
push
call
cmp
je
mov
test
je
push
call
add
dec
jne
mov
add
push
call
pop
pop
mov
pop
pop
ret
test
je
test
je
push
mov
cmp
je
push
mov
call
pop
test
je
push
call
cmp
pop
jne
cmp
je
push
call
pop
mov
pop
ret
xor
ret
push
push
call
call
mov
mov
test
je
cmp
je
call
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
and
lea
mov
call
mov
mov
call
jmp
push
call
pop
mov
ret
mov
push
mov
mov
test
je
sub
cmp
jne
push
call
pop
pop
ret
mov
push
mov
mov
jmp
dec
cmp
je
inc
test
jne
dec
mov
sub
dec
pop
ret
mov
push
mov
sub
mov
xor
mov
mov
push
push
push
xor
mov
mov
mov
mov
cmp
jne
push
mov
push
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
mov
cmp
jle
push
mov
call
pop
mov
mov
cmp
jle
mov
push
call
mov
pop
mov
jmp
cmp
jge
xor
jmp
cmp
jl
mov
cmp
je
cmp
je
xor
inc
cmp
jne
mov
cmp
jne
mov
mov
mov
cmp
je
cmp
jne
cmp
jne
push
pop
jmp
cmp
jg
cmp
jle
push
jmp
lea
push
push
call
test
je
cmp
jle
cmp
jb
cmp
lea
je
mov
test
je
mov
cmp
jb
cmp
jbe
inc
inc
cmp
jne
jmp
cmp
jle
cmp
jae
xor
inc
jmp
cmp
lea
je
mov
test
je
mov
mov
cmp
jb
cmp
jbe
inc
inc
cmp
jne
jmp
mov
push
push
push
push
push
push
call
mov
mov
cmp
je
mov
test
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
test
je
mov
jmp
push
call
pop
test
je
mov
add
mov
jmp
and
cmp
je
push
push
push
push
push
push
call
test
je
push
push
push
push
push
push
call
mov
test
je
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
test
je
mov
add
jmp
push
call
pop
test
je
mov
add
mov
jmp
xor
test
je
push
push
push
push
push
push
call
test
je
push
push
push
push
push
push
call
mov
push
call
pop
push
call
mov
pop
jmp
xor
xor
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
push
call
mov
pop
cmp
je
cmp
je
push
push
lea
push
push
push
push
call
mov
add
test
je
push
push
lea
push
push
push
push
call
mov
add
test
jne
push
call
pop
jmp
mov
mov
push
push
push
push
push
push
call
mov
test
je
push
call
push
call
pop
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
push
lea
call
push
mov
push
lea
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
mov
push
mov
sub
push
push
lea
call
mov
xor
cmp
jne
cmp
je
mov
and
xor
jmp
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
cmp
je
push
mov
cmp
jbe
call
push
push
push
push
push
mov
call
add
jmp
mov
mov
cmp
jne
lea
push
push
push
push
call
add
jmp
push
lea
push
push
push
push
push
push
push
call
add
cmp
jne
call
mov
cmp
je
mov
and
mov
jmp
add
cmp
je
mov
and
pop
pop
leave
ret
mov
push
mov
push
mov
jmp
push
push
push
call
add
test
jne
mov
mov
cmp
je
test
je
add
mov
test
jne
mov
sub
sar
neg
pop
pop
ret
mov
sub
sar
jmp
mov
push
mov
push
push
mov
xor
mov
test
je
cmp
je
add
inc
cmp
jne
push
inc
push
push
call
mov
pop
pop
mov
test
jne
push
call
jmp
push
call
mov
add
add
pop
mov
test
jne
and
mov
pop
pop
leave
ret
mov
push
mov
sub
mov
push
xor
mov
cmp
jne
call
push
push
push
push
push
mov
call
add
or
jmp
push
mov
push
mov
cmp
je
push
push
call
mov
pop
pop
mov
cmp
je
cmp
je
xor
cmp
sete
mov
mov
cmp
jne
call
mov
cmp
jne
cmp
je
cmp
je
call
test
je
call
mov
or
pop
pop
pop
leave
ret
cmp
jne
push
call
pop
mov
cmp
je
mov
cmp
jne
push
call
pop
mov
cmp
je
mov
mov
mov
cmp
je
sub
push
call
mov
cmp
pop
jl
cmp
je
lea
push
call
pop
cmp
jne
mov
mov
mov
mov
jmp
mov
mov
mov
inc
lea
cmp
jne
cmp
jae
push
push
push
call
add
cmp
je
jmp
cmp
jne
cmp
jge
neg
lea
cmp
jl
cmp
jae
push
push
push
call
add
cmp
je
mov
lea
mov
mov
mov
mov
mov
cmp
je
mov
push
push
call
inc
pop
inc
push
call
mov
pop
pop
cmp
je
push
push
call
inc
pop
inc
push
push
call
add
test
je
push
push
push
push
push
call
add
mov
mov
sub
add
mov
inc
neg
sbb
not
and
push
push
call
test
jne
or
call
mov
push
call
pop
cmp
je
push
call
mov
pop
mov
mov
jmp
push
call
mov
pop
mov
xor
jmp
mov
push
mov
push
push
mov
push
mov
mov
mov
push
push
mov
call
or
pop
cmp
jne
call
mov
mov
mov
jmp
push
lea
push
push
push
call
mov
cmp
jne
call
test
je
push
call
pop
jmp
mov
sar
mov
and
shl
lea
and
mov
mov
pop
pop
leave
ret
push
push
call
or
mov
mov
mov
cmp
jne
call
and
call
mov
mov
mov
jmp
xor
cmp
jl
cmp
jb
call
mov
call
mov
push
push
push
push
push
call
add
jmp
mov
sar
lea
mov
and
shl
mov
movsx
and
jne
call
mov
call
mov
push
push
push
push
push
call
add
or
mov
jmp
push
call
pop
mov
mov
test
je
push
push
push
push
call
add
mov
mov
jmp
call
mov
call
mov
or
or
mov
call
mov
mov
call
ret
push
call
pop
ret
mov
push
mov
inc
push
call
pop
mov
mov
test
je
or
mov
jmp
or
lea
mov
mov
mov
and
mov
pop
ret
mov
push
mov
mov
cmp
jne
call
mov
xor
pop
ret
push
xor
cmp
jl
cmp
jb
call
push
push
push
push
push
mov
call
add
xor
jmp
mov
and
sar
mov
shl
movsx
and
pop
pop
ret
mov
push
mov
sub
mov
xor
mov
push
xor
cmp
je
cmp
jne
call
mov
cmp
jne
mov
jmp
push
lea
push
push
lea
push
push
call
test
jne
cmp
jne
call
cmp
jne
mov
push
push
push
lea
push
push
lea
push
push
call
push
call
mov
cmp
je
push
lea
push
push
lea
push
push
call
test
je
mov
mov
xor
pop
call
leave
ret
mov
jmp
mov
push
mov
sub
push
push
mov
xor
cmp
je
cmp
je
cmp
jne
mov
cmp
je
xor
mov
xor
pop
pop
leave
ret
push
lea
call
mov
cmp
jne
mov
cmp
je
movzx
mov
cmp
je
mov
and
xor
inc
jmp
lea
push
movzx
push
call
pop
pop
test
je
mov
mov
cmp
jle
cmp
jl
xor
cmp
setne
push
push
push
push
push
push
call
test
mov
jne
mov
cmp
jb
cmp
je
mov
cmp
je
mov
and
jmp
call
mov
cmp
je
mov
and
or
jmp
xor
cmp
setne
push
push
mov
push
push
push
push
call
test
jne
jmp
mov
push
mov
push
push
push
push
call
add
pop
ret
mov
push
mov
sub
push
lea
call
movzx
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
mov
push
mov
push
push
call
pop
pop
pop
ret
mov
push
mov
mov
push
push
test
jl
cmp
jae
mov
sar
mov
and
lea
mov
shl
cmp
jne
cmp
push
mov
jne
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
mov
xor
pop
jmp
call
mov
call
and
or
pop
pop
pop
ret
mov
push
mov
mov
push
xor
cmp
push
push
jl
cmp
jae
mov
sar
mov
lea
mov
and
shl
add
test
je
cmp
je
cmp
jne
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
or
xor
jmp
call
mov
call
mov
or
pop
pop
pop
pop
ret
mov
push
mov
mov
cmp
jne
call
and
call
mov
or
pop
ret
push
xor
cmp
jl
cmp
jae
mov
and
sar
mov
shl
add
test
jne
call
mov
call
push
push
push
push
push
mov
call
add
or
jmp
mov
pop
pop
ret
push
push
call
mov
mov
sar
mov
and
shl
add
mov
xor
cmp
jne
push
call
pop
mov
cmp
jne
push
lea
push
call
pop
pop
test
jne
mov
inc
mov
call
cmp
je
mov
sar
and
shl
mov
lea
push
call
mov
call
ret
xor
mov
push
call
pop
ret
mov
push
mov
mov
mov
and
sar
mov
shl
lea
push
call
pop
ret
push
push
call
or
xor
mov
push
call
pop
test
jne
or
jmp
push
call
pop
mov
mov
cmp
jge
mov
test
je
mov
mov
add
cmp
jae
test
jne
cmp
jne
push
call
pop
xor
inc
mov
cmp
jne
push
lea
push
call
pop
pop
test
jne
mov
jmp
inc
and
call
cmp
jne
lea
push
call
test
je
push
call
add
jmp
mov
mov
push
call
pop
ret
cmp
jne
mov
or
sub
sar
mov
shl
add
mov
cmp
jne
inc
jmp
push
push
call
pop
pop
mov
test
je
lea
mov
add
mov
add
cmp
jae
mov
or
mov
and
add
mov
jmp
shl
mov
mov
sar
mov
and
shl
mov
mov
push
call
pop
test
jne
or
mov
call
mov
call
ret
push
call
pop
ret
push
push
call
xor
mov
push
call
pop
mov
push
pop
mov
cmp
jge
mov
shl
mov
add
cmp
je
mov
test
je
push
call
pop
cmp
je
inc
cmp
jl
mov
mov
add
push
call
mov
push
call
pop
mov
mov
inc
jmp
mov
call
mov
call
ret
push
call
pop
ret
mov
or
xor
cmp
sete
mov
ret
mov
push
mov
sub
push
push
mov
xor
push
mov
cmp
jne
cmp
jbe
mov
cmp
je
mov
xor
jmp
mov
cmp
je
or
cmp
jbe
call
push
pop
push
push
push
push
push
mov
call
add
mov
jmp
push
lea
call
mov
cmp
jne
mov
mov
cmp
jbe
cmp
je
cmp
jbe
push
push
push
call
add
call
mov
call
mov
cmp
je
mov
and
pop
pop
pop
leave
ret
cmp
je
cmp
ja
call
push
pop
push
push
push
push
push
mov
call
add
cmp
je
mov
and
jmp
mov
mov
cmp
je
mov
cmp
je
mov
and
jmp
lea
push
push
push
push
push
lea
push
push
mov
push
call
cmp
je
cmp
jne
mov
cmp
je
mov
jmp
call
cmp
jne
cmp
je
cmp
jbe
push
push
push
call
add
jmp
mov
push
mov
push
push
push
push
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mul
mov
mov
mul
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
mov
push
mov
sub
push
xor
test
push
push
mov
mov
mov
mov
mov
je
mov
mov
jmp
mov
mov
lea
push
call
pop
test
je
push
push
push
push
push
call
add
mov
mov
test
jne
test
jne
cmp
je
or
mov
and
sub
mov
mov
je
dec
je
dec
je
call
mov
or
call
push
pop
push
push
push
push
push
mov
call
add
jmp
mov
jmp
test
je
test
jne
mov
jmp
mov
mov
push
pop
sub
je
sub
je
sub
je
sub
je
sub
jne
cmp
sete
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
and
mov
cmp
mov
jg
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
jmp
mov
jmp
mov
jmp
cmp
je
cmp
je
cmp
jne
mov
mov
mov
test
je
mov
not
and
test
js
mov
test
je
or
or
or
test
je
or
test
je
or
jmp
mov
jmp
test
je
or
call
mov
cmp
jne
call
mov
or
call
mov
jmp
mov
mov
push
push
mov
push
lea
push
push
push
push
call
mov
cmp
jne
mov
mov
and
cmp
jne
test
je
and
push
push
lea
push
push
push
push
push
call
mov
cmp
jne
mov
mov
sar
mov
and
shl
lea
and
call
push
call
pop
call
mov
jmp
push
call
cmp
jne
mov
mov
sar
mov
and
shl
lea
and
call
mov
push
call
pop
push
call
cmp
jne
call
mov
jmp
cmp
jne
or
jmp
cmp
jne
or
push
push
call
mov
mov
and
sar
mov
pop
shl
pop
mov
or
mov
mov
mov
and
sar
mov
shl
lea
and
mov
and
mov
jne
test
je
test
je
push
or
push
push
call
add
mov
cmp
jne
call
cmp
je
push
call
jmp
push
lea
push
push
mov
call
add
test
jne
cmp
jne
mov
cdq
push
push
push
call
add
cmp
je
push
push
push
call
add
cmp
je
test
je
mov
mov
test
jne
mov
and
jne
or
jmp
or
mov
and
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
jmp
mov
mov
and
cmp
jne
mov
jmp
mov
test
je
test
mov
jne
mov
mov
and
cmp
je
cmp
je
cmp
jne
mov
cmp
jbe
cmp
jbe
cmp
jbe
cmp
jne
movsx
xor
dec
je
dec
jne
mov
mov
jmp
push
push
push
push
call
add
or
je
push
push
push
push
call
and
add
cmp
je
push
lea
push
push
call
add
cmp
je
cmp
je
cmp
jne
cmp
jne
mov
jmp
mov
cmp
jbe
cmp
jbe
cmp
ja
push
push
push
push
call
add
or
je
push
push
push
push
call
add
and
cmp
jne
jmp
mov
and
cmp
jne
push
call
pop
call
push
pop
mov
mov
jmp
cmp
jne
push
push
push
call
add
cmp
je
mov
jmp
push
push
push
call
add
jmp
mov
mov
mov
sub
push
lea
push
push
call
add
cmp
je
add
cmp
jg
mov
mov
sar
mov
and
shl
lea
mov
xor
and
xor
mov
mov
sar
mov
and
shl
lea
mov
mov
shr
shl
and
or
mov
cmp
jne
test
je
mov
mov
and
sar
mov
shl
lea
or
mov
mov
mov
and
cmp
jne
test
je
push
call
push
push
lea
push
push
push
and
push
push
call
cmp
jne
call
push
call
mov
mov
and
sar
mov
shl
lea
and
push
call
pop
jmp
mov
mov
sar
mov
and
shl
mov
mov
pop
pop
pop
leave
ret
push
push
call
xor
mov
xor
mov
cmp
setne
cmp
jne
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
or
xor
cmp
setne
cmp
je
cmp
je
mov
and
neg
sbb
inc
je
mov
push
push
push
push
lea
push
mov
call
add
mov
mov
call
mov
cmp
je
or
call
ret
xor
mov
cmp
je
cmp
je
mov
mov
sar
and
shl
mov
lea
and
push
call
pop
ret
mov
push
mov
push
push
push
push
push
push
call
add
pop
ret
mov
push
mov
sub
push
push
lea
call
xor
cmp
jne
cmp
je
mov
and
xor
jmp
mov
cmp
jne
push
push
push
call
add
cmp
je
mov
and
jmp
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
push
mov
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
push
mov
movzx
dec
inc
movzx
movzx
test
mov
je
cmp
jne
movzx
test
mov
jne
movzx
mov
jmp
mov
mov
cmp
jne
mov
jmp
shl
movzx
or
inc
movzx
mov
mov
cmp
jb
cmp
ja
add
jmp
cmp
jb
cmp
ja
add
jmp
movzx
lea
test
je
movzx
movzx
jmp
movzx
mov
mov
movzx
movzx
movzx
inc
test
mov
je
cmp
jne
mov
jmp
mov
dec
cmp
je
shl
movzx
or
movzx
inc
mov
cmp
jb
cmp
ja
add
jmp
cmp
jb
cmp
ja
add
jmp
movzx
lea
test
je
movzx
movzx
jmp
movzx
mov
mov
cmp
jne
cmp
je
cmp
jne
cmp
je
mov
and
xor
pop
pop
pop
leave
ret
sbb
and
dec
cmp
je
mov
and
jmp
mov
push
mov
push
push
push
push
call
add
pop
ret
mov
push
mov
sub
push
xor
cmp
jne
xor
jmp
push
push
lea
call
mov
cmp
jne
push
push
push
call
add
cmp
je
mov
and
jmp
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
push
mov
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
mov
movzx
dec
inc
movzx
movzx
test
je
cmp
jne
movzx
xor
test
je
cmp
je
mov
and
xor
pop
pop
pop
leave
ret
mov
mov
cmp
jne
xor
jmp
shl
movzx
or
inc
movzx
movzx
movzx
movzx
inc
test
je
cmp
jne
xor
jmp
mov
dec
cmp
je
movzx
shl
or
inc
movzx
cmp
jne
cmp
je
cmp
jne
jmp
sbb
and
dec
cmp
je
mov
and
jmp
mov
push
mov
push
push
push
push
call
add
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
push
call
pop
pop
pop
pop
mov
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
push
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmp
je
cmp
jbe
lea
mov
mov
mov
cmp
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
mov
push
mov
sub
push
lea
call
movzx
mov
mov
test
jne
cmp
je
mov
mov
movzx
and
jmp
xor
test
je
xor
inc
cmp
je
mov
and
leave
ret
mov
push
mov
push
push
push
push
call
add
pop
ret
int3
int3
push
mov
push
mov
xor
or
repnz
add
neg
sub
mov
std
repnz
add
cmp
je
xor
jmp
mov
cld
pop
leave
ret
mov
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
mov
push
mov
cmp
jne
mov
mov
movzx
and
pop
ret
push
push
call
pop
pop
pop
ret
mov
push
mov
sub
push
push
push
lea
call
mov
mov
cmp
jae
mov
cmp
jle
lea
push
push
push
call
mov
add
jmp
mov
movzx
and
test
je
mov
movzx
jmp
cmp
je
mov
and
mov
jmp
mov
cmp
jle
mov
sar
lea
push
mov
and
push
call
pop
pop
test
je
mov
push
mov
mov
mov
pop
jmp
call
mov
xor
mov
mov
inc
mov
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
test
je
cmp
movzx
je
movzx
shl
or
cmp
je
mov
and
pop
pop
leave
ret
mov
push
mov
cmp
jne
mov
lea
cmp
ja
add
pop
ret
push
push
call
pop
pop
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
mov
push
push
mov
lea
call
lea
push
xor
push
push
push
push
push
lea
push
lea
push
call
mov
lea
push
push
call
add
test
jne
cmp
jne
cmp
je
mov
and
push
pop
jmp
cmp
jne
cmp
je
mov
and
push
jmp
test
jne
test
jne
cmp
je
mov
and
xor
mov
pop
pop
xor
pop
call
leave
ret
mov
push
mov
sub
mov
xor
mov
push
push
mov
push
push
mov
lea
call
lea
push
xor
push
push
push
push
push
lea
push
lea
push
call
mov
lea
push
push
call
add
test
jne
cmp
jne
cmp
je
mov
and
push
pop
jmp
cmp
jne
cmp
je
mov
and
push
jmp
test
jne
test
jne
cmp
je
mov
and
xor
mov
pop
pop
xor
pop
call
leave
ret
mov
push
mov
mov
push
push
mov
xor
push
mov
cmp
jne
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
cmp
jbe
mov
cmp
mov
jle
mov
jmp
xor
inc
cmp
ja
call
push
pop
mov
mov
jmp
cmp
mov
lea
jle
mov
cmp
je
movsx
inc
jmp
push
pop
mov
inc
dec
cmp
jg
mov
cmp
mov
jl
cmp
jl
jmp
mov
dec
cmp
je
inc
cmp
jne
inc
jmp
lea
push
call
inc
push
push
push
call
add
xor
pop
pop
pop
pop
ret
mov
push
mov
push
mov
movzx
push
mov
push
push
shr
and
mov
and
mov
mov
mov
movzx
mov
and
mov
test
je
cmp
je
add
jmp
mov
jmp
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
add
mov
movzx
mov
shr
shl
or
or
mov
shl
mov
mov
test
jne
mov
mov
mov
add
shr
or
add
add
mov
mov
test
je
mov
or
pop
pop
mov
pop
leave
ret
mov
push
mov
sub
mov
xor
mov
mov
push
mov
push
mov
push
lea
push
lea
push
call
pop
pop
lea
push
push
push
sub
lea
mov
movs
movs
movs
call
mov
mov
movsx
mov
movsx
mov
lea
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
mov
pop
mov
pop
mov
xor
pop
call
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
push
push
xor
xor
mov
or
jge
inc
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mul
mov
mov
mul
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
dec
jns
neg
neg
sbb
mov
mov
mov
mov
mov
dec
jne
neg
neg
sbb
pop
pop
pop
ret
int3
cmp
jae
cmp
jae
shrd
shr
ret
mov
xor
and
shr
ret
xor
xor
ret
push
call
pop
ret
mov
push
mov
mov
mov
and
and
push
test
je
push
mov
xor
cmp
je
push
push
call
pop
pop
mov
call
push
pop
push
push
push
push
push
mov
call
add
mov
pop
jmp
mov
push
push
test
je
call
mov
jmp
call
pop
pop
xor
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mul
add
mov
mul
add
pop
ret
mov
push
mov
push
push
push
call
add
pop
ret
mov
push
mov
sub
mov
xor
mov
test
push
je
push
call
pop
call
test
je
push
call
pop
test
je
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
lea
mov
mov
mov
mov
push
mov
lea
push
push
call
lea
add
mov
lea
push
mov
mov
mov
call
lea
push
call
push
call
int3
mov
push
mov
sub
mov
xor
mov
push
push
xor
push
mov
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
mov
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
mov
sub
dec
cmp
jge
inc
mov
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
cmp
push
push
push
setne
push
lea
push
push
call
mov
cmp
je
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
mov
jmp
push
call
pop
cmp
je
mov
add
mov
jmp
mov
cmp
je
push
push
push
push
push
push
call
test
je
mov
push
push
push
push
push
push
call
mov
mov
cmp
je
test
je
cmp
je
cmp
jg
push
push
push
push
push
push
call
jmp
cmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
mov
add
jmp
push
call
pop
cmp
je
mov
add
mov
jmp
xor
cmp
je
push
push
push
push
push
push
call
test
je
push
push
cmp
jne
push
push
jmp
push
push
push
push
push
push
call
mov
push
call
pop
push
call
mov
pop
jmp
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
push
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
push
push
push
call
add
mov
cmp
je
mov
push
push
push
push
push
push
call
mov
cmp
jne
xor
jmp
jle
cmp
ja
add
cmp
ja
call
mov
cmp
je
mov
add
jmp
push
call
pop
cmp
je
mov
add
mov
jmp
xor
cmp
je
push
push
push
call
add
push
push
push
push
push
push
call
mov
cmp
jne
xor
jmp
push
lea
push
push
push
push
push
call
mov
mov
add
neg
sbb
and
push
call
pop
jmp
push
push
push
push
push
push
call
mov
cmp
je
push
call
pop
mov
cmp
je
cmp
je
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
mov
push
mov
push
push
mov
xor
mov
mov
push
push
xor
push
mov
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
cmp
push
push
push
setne
push
lea
push
push
call
mov
cmp
je
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
mov
jmp
push
call
pop
cmp
je
mov
add
mov
test
je
lea
push
push
push
call
add
push
push
push
push
push
push
call
test
je
push
push
push
push
call
mov
push
call
mov
pop
jmp
xor
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
push
push
push
call
mov
add
cmp
je
mov
push
push
push
push
push
call
mov
cmp
je
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
mov
push
mov
push
mov
test
je
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
mov
push
mov
push
and
push
mov
test
jne
xor
jmp
push
cmp
jb
lea
test
jbe
mov
mov
mov
add
add
test
je
cmp
jne
mov
test
je
cmp
jne
mov
test
je
cmp
jne
mov
test
je
cmp
jne
add
cmp
jb
jmp
movzx
movzx
jmp
movzx
movzx
jmp
movzx
movzx
jmp
movzx
movzx
jmp
mov
mov
jmp
mov
test
je
cmp
jne
inc
inc
inc
cmp
jb
xor
pop
pop
leave
ret
movzx
movzx
sub
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
mov
push
mov
sub
mov
xor
mov
push
lea
push
push
push
mov
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
mov
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
push
mov
mov
push
mov
mov
push
xor
mov
mov
mov
cmp
je
mov
lea
push
push
call
mov
test
je
cmp
jne
lea
push
push
call
test
je
cmp
jne
mov
mov
cmp
jne
push
call
mov
pop
inc
cmp
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
mov
jmp
push
push
push
push
push
push
call
mov
cmp
jne
xor
jmp
push
call
pop
cmp
je
mov
add
mov
jmp
mov
cmp
je
lea
push
push
push
call
add
push
push
push
push
push
push
call
test
je
mov
cmp
je
push
push
push
push
push
push
push
push
call
test
je
mov
jmp
mov
cmp
jne
push
push
push
push
push
push
push
push
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
push
call
cmp
jne
push
call
pop
mov
jmp
cmp
je
mov
mov
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
push
xor
push
push
cmp
je
push
lea
call
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
mov
cmp
je
mov
cmp
jbe
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
mov
cmp
jne
push
push
push
call
add
cmp
je
mov
and
jmp
mov
movzx
lea
push
push
call
inc
mov
movzx
lea
push
push
call
add
inc
dec
je
cmp
je
cmp
je
sub
mov
jmp
xor
pop
pop
pop
leave
ret
mov
push
mov
push
xor
cmp
jne
cmp
jne
call
push
push
push
push
push
mov
call
add
mov
jmp
cmp
je
cmp
ja
pop
pop
jmp
push
push
push
push
call
add
pop
pop
ret
mov
push
mov
push
xor
cmp
jne
xor
jmp
push
push
push
call
mov
inc
push
call
mov
pop
pop
cmp
je
push
push
push
call
add
test
je
push
push
push
push
push
call
add
mov
jmp
xor
pop
pop
pop
pop
ret
mov
push
mov
sub
push
push
lea
call
mov
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
xor
jmp
push
mov
cmp
jne
push
push
call
pop
pop
jmp
movzx
test
je
inc
mov
cmp
je
movzx
movzx
shl
or
cmp
jne
dec
jmp
movzx
cmp
je
inc
movzx
movzx
cmp
jne
movzx
cmp
jne
cmp
je
mov
and
jmp
cmp
je
mov
and
xor
pop
pop
leave
ret
mov
push
mov
push
push
push
call
add
pop
ret
xor
push
push
push
push
push
push
push
call
mov
ret
mov
push
mov
cmp
je
cmp
je
push
call
mov
cmp
je
cmp
je
push
call
pop
ret
mov
push
mov
sub
push
push
push
xor
push
push
push
push
mov
mov
call
mov
and
add
mov
cmp
je
push
push
push
push
call
mov
and
add
cmp
je
mov
mov
sub
sbb
js
jg
cmp
jbe
mov
push
push
call
push
call
mov
test
jne
call
mov
call
mov
pop
pop
pop
leave
ret
push
push
call
pop
pop
mov
test
jl
jg
cmp
jb
mov
jmp
mov
push
push
push
call
add
cmp
je
cdq
sub
sbb
js
jg
test
ja
mov
push
push
call
pop
pop
push
push
call
push
call
xor
jmp
call
cmp
jne
call
mov
or
mov
jmp
cmp
jg
jl
cmp
jae
push
push
push
push
call
and
add
cmp
je
push
call
pop
push
call
neg
sbb
neg
dec
cdq
mov
and
mov
cmp
jne
call
mov
call
mov
call
mov
mov
and
cmp
je
push
push
push
push
call
and
add
cmp
je
xor
jmp
mov
push
mov
push
mov
push
mov
mov
sar
lea
mov
and
shl
lea
mov
add
push
movzx
movsx
and
sar
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
or
mov
lea
mov
and
or
mov
jmp
or
mov
lea
mov
and
or
jmp
and
jmp
or
mov
lea
and
test
pop
pop
pop
jne
mov
pop
ret
neg
sbb
and
add
pop
ret
mov
push
mov
mov
push
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
push
pop
jmp
mov
mov
xor
pop
pop
ret
mov
push
mov
sub
push
push
lea
call
mov
lea
cmp
ja
mov
mov
movzx
jmp
mov
sar
lea
push
mov
and
push
call
pop
pop
test
je
mov
push
mov
mov
mov
pop
jmp
xor
mov
mov
inc
mov
push
push
push
lea
push
push
lea
push
lea
push
push
call
add
test
jne
cmp
je
mov
and
xor
jmp
movzx
and
cmp
je
mov
and
pop
leave
ret
mov
push
mov
sub
mov
movzx
push
mov
and
mov
mov
mov
mov
movzx
and
sub
shl
push
mov
mov
cmp
jne
xor
xor
cmp
jne
inc
cmp
jl
xor
jmp
xor
lea
stos
stos
push
stos
pop
jmp
and
push
lea
lea
movs
movs
movs
mov
dec
lea
mov
cdq
and
add
sar
mov
and
mov
mov
jns
dec
or
inc
lea
push
xor
pop
sub
inc
shl
mov
test
je
mov
or
shl
not
test
jmp
cmp
jne
inc
cmp
jl
jmp
mov
cdq
push
pop
and
add
sar
and
jns
dec
or
inc
and
sub
xor
inc
shl
lea
mov
add
mov
mov
cmp
jb
cmp
jmp
test
je
and
lea
mov
lea
mov
cmp
jb
cmp
jae
mov
dec
mov
mov
mov
jns
mov
mov
or
shl
and
mov
inc
cmp
jge
push
pop
lea
sub
xor
rep
cmp
je
inc
mov
mov
sub
cmp
jge
xor
lea
stos
stos
stos
jmp
cmp
jg
sub
lea
mov
lea
movs
cdq
and
add
movs
mov
sar
and
movs
jns
dec
or
inc
and
and
or
mov
shl
mov
sub
not
mov
lea
mov
mov
and
mov
mov
shr
mov
or
mov
mov
shl
inc
cmp
mov
jl
mov
push
shl
lea
pop
sub
cmp
jl
mov
mov
jmp
and
dec
sub
test
jge
mov
dec
lea
mov
cdq
and
add
sar
mov
and
mov
jns
dec
or
inc
push
pop
sub
xor
inc
shl
lea
mov
test
je
or
shl
not
test
jmp
cmp
jne
inc
cmp
jl
jmp
mov
cdq
push
pop
and
add
sar
and
jns
dec
or
inc
and
xor
sub
inc
shl
lea
mov
lea
cmp
jb
cmp
jae
mov
mov
mov
jmp
test
je
lea
mov
lea
xor
cmp
jb
cmp
jae
xor
inc
mov
mov
dec
jns
mov
or
shl
and
mov
inc
cmp
jge
push
pop
lea
sub
xor
rep
mov
inc
mov
cdq
and
add
mov
sar
and
jns
dec
or
inc
and
and
or
mov
shl
mov
sub
not
mov
lea
mov
mov
and
mov
mov
shr
mov
or
mov
mov
shl
inc
cmp
mov
jl
mov
push
shl
lea
pop
sub
cmp
jl
mov
mov
jmp
and
dec
sub
test
jge
push
xor
pop
jmp
cmp
mov
jl
xor
lea
stos
stos
stos
or
mov
cdq
and
add
mov
sar
and
jns
dec
or
inc
and
and
or
mov
shl
mov
sub
not
mov
lea
mov
mov
and
mov
mov
shr
mov
or
mov
mov
shl
inc
cmp
mov
jl
mov
push
shl
lea
pop
sub
cmp
jl
mov
mov
jmp
and
dec
sub
test
jge
mov
mov
lea
xor
inc
jmp
mov
and
add
mov
cdq
and
add
mov
sar
and
jns
dec
or
inc
and
and
or
mov
shl
mov
sub
not
mov
mov
mov
and
mov
mov
shr
mov
or
mov
mov
mov
shl
inc
cmp
mov
jl
mov
push
shl
lea
pop
sub
cmp
jl
mov
mov
jmp
and
dec
sub
test
jge
xor
pop
push
pop
sub
shl
mov
neg
sbb
and
or
mov
or
cmp
jne
mov
mov
mov
mov
jmp
cmp
jne
mov
mov
pop
pop
leave
ret
mov
push
mov
sub
mov
movzx
push
mov
and
mov
mov
mov
mov
movzx
and
sub
shl
push
mov
mov
cmp
jne
xor
xor
cmp
jne
inc
cmp
jl
xor
jmp
xor
lea
stos
stos
push
stos
pop
jmp
and
push
lea
lea
movs
movs
movs
mov
dec
lea
mov
cdq
and
add
sar
mov
and
mov
mov
jns
dec
or
inc
lea
push
xor
pop
sub
inc
shl
mov
test
je
mov
or
shl
not
test
jmp
cmp
jne
inc
cmp
jl
jmp
mov
cdq
push
pop
and
add
sar
and
jns
dec
or
inc
and
sub
xor
inc
shl
lea
mov
add
mov
mov
cmp
jb
cmp
jmp
test
je
and
lea
mov
lea
mov
cmp
jb
cmp
jae
mov
dec
mov
mov
mov
jns
mov
mov
or
shl
and
mov
inc
cmp
jge
push
pop
lea
sub
xor
rep
cmp
je
inc
mov
mov
sub
cmp
jge
xor
lea
stos
stos
stos
jmp
cmp
jg
sub
lea
mov
lea
movs
cdq
and
add
movs
mov
sar
and
movs
jns
dec
or
inc
and
and
or
mov
shl
mov
sub
not
mov
lea
mov
mov
and
mov
mov
shr
mov
or
mov
mov
shl
inc
cmp
mov
jl
mov
push
shl
lea
pop
sub
cmp
jl
mov
mov
jmp
and
dec
sub
test
jge
mov
dec
lea
mov
cdq
and
add
sar
mov
and
mov
jns
dec
or
inc
push
pop
sub
xor
inc
shl
lea
mov
test
je
or
shl
not
test
jmp
cmp
jne
inc
cmp
jl
jmp
mov
cdq
push
pop
and
add
sar
and
jns
dec
or
inc
and
xor
sub
inc
shl
lea
mov
lea
cmp
jb
cmp
jae
mov
mov
mov
jmp
test
je
lea
mov
lea
xor
cmp
jb
cmp
jae
xor
inc
mov
mov
dec
jns
mov
or
shl
and
mov
inc
cmp
jge
push
pop
lea
sub
xor
rep
mov
inc
mov
cdq
and
add
mov
sar
and
jns
dec
or
inc
and
and
or
mov
shl
mov
sub
not
mov
lea
mov
mov
and
mov
mov
shr
mov
or
mov
mov
shl
inc
cmp
mov
jl
mov
push
shl
lea
pop
sub
cmp
jl
mov
mov
jmp
and
dec
sub
test
jge
push
xor
pop
jmp
cmp
mov
jl
xor
lea
stos
stos
stos
or
mov
cdq
and
add
mov
sar
and
jns
dec
or
inc
and
and
or
mov
shl
mov
sub
not
mov
lea
mov
mov
and
mov
mov
shr
mov
or
mov
mov
shl
inc
cmp
mov
jl
mov
push
shl
lea
pop
sub
cmp
jl
mov
mov
jmp
and
dec
sub
test
jge
mov
mov
lea
xor
inc
jmp
mov
and
add
mov
cdq
and
add
mov
sar
and
jns
dec
or
inc
and
and
or
mov
shl
mov
sub
not
mov
mov
mov
and
mov
mov
shr
mov
or
mov
mov
mov
shl
inc
cmp
mov
jl
mov
push
shl
lea
pop
sub
cmp
jl
mov
mov
jmp
and
dec
sub
test
jge
xor
pop
push
pop
sub
shl
mov
neg
sbb
and
or
mov
or
cmp
jne
mov
mov
mov
mov
jmp
cmp
jne
mov
mov
pop
pop
leave
ret
mov
push
mov
sub
mov
xor
mov
mov
push
xor
push
xor
mov
mov
inc
xor
push
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
call
push
push
push
push
push
mov
call
add
xor
jmp
mov
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
inc
jmp
mov
mov
inc
cmp
ja
jmp
mov
sub
cmp
ja
push
pop
dec
jmp
mov
mov
mov
mov
cmp
jne
push
pop
jmp
movsx
sub
je
dec
dec
je
sub
jne
mov
jmp
push
pop
mov
jmp
and
push
pop
jmp
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
cmp
jne
push
jmp
cmp
je
cmp
je
cmp
je
cmp
jle
cmp
jle
cmp
jle
cmp
jg
push
jmp
dec
push
jmp
mov
sub
cmp
jbe
mov
mov
mov
mov
cmp
je
cmp
je
mov
jmp
mov
jmp
cmp
jg
cmp
jae
inc
sub
mov
inc
jmp
inc
mov
inc
cmp
jge
mov
mov
mov
mov
cmp
je
cmp
je
cmp
je
jmp
cmp
mov
mov
jne
jmp
dec
mov
inc
cmp
je
jmp
cmp
jg
cmp
jae
inc
sub
mov
inc
dec
mov
inc
cmp
jge
jmp
sub
mov
cmp
ja
push
jmp
lea
mov
mov
sub
cmp
ja
push
jmp
movsx
sub
je
dec
dec
je
sub
jne
push
jmp
or
push
pop
jmp
push
jmp
mov
jmp
mov
inc
cmp
je
sub
cmp
jbe
dec
jmp
mov
sub
cmp
jbe
cmp
jmp
cmp
je
movsx
sub
lea
mov
je
dec
dec
je
mov
cmp
mov
mov
je
push
pop
cmp
jbe
cmp
jl
inc
dec
inc
mov
cmp
jbe
jmp
push
pop
dec
cmp
jne
jmp
mov
xor
jmp
cmp
jg
imul
movsx
lea
cmp
jg
mov
inc
cmp
jge
jmp
mov
mov
jmp
cmp
jg
mov
inc
cmp
jge
jmp
dec
inc
dec
cmp
je
lea
push
push
lea
push
call
mov
xor
add
cmp
jge
neg
add
cmp
jne
add
cmp
jne
sub
cmp
jg
cmp
jl
mov
sub
mov
cmp
je
jge
neg
mov
mov
sub
cmp
jne
xor
mov
cmp
je
jmp
mov
xor
mov
sar
add
and
mov
cmp
je
imul
add
mov
mov
cmp
jb
mov
lea
movs
movs
movs
dec
lea
movzx
xor
mov
mov
mov
mov
mov
mov
mov
xor
and
and
and
mov
lea
mov
movzx
cmp
jae
cmp
jae
mov
cmp
ja
mov
cmp
ja
xor
mov
mov
jmp
xor
cmp
jne
inc
test
jne
cmp
jne
cmp
jne
xor
mov
jmp
cmp
jne
inc
test
jne
cmp
jne
cmp
jne
mov
mov
mov
jmp
mov
lea
mov
mov
mov
add
mov
test
jle
lea
mov
lea
mov
mov
mov
movzx
movzx
and
imul
mov
lea
cmp
jb
cmp
jae
mov
cmp
mov
je
inc
add
sub
dec
cmp
jg
inc
inc
inc
dec
cmp
jg
add
test
jle
mov
test
js
mov
mov
shl
shr
mov
add
or
shr
lea
or
add
mov
mov
test
jg
test
jg
add
test
jge
mov
neg
movzx
add
test
je
inc
mov
mov
mov
shr
shl
shr
or
mov
shl
shr
or
dec
mov
mov
jne
cmp
je
or
mov
mov
cmp
ja
mov
and
cmp
jne
cmp
jne
and
cmp
jne
and
mov
cmp
jne
mov
inc
jmp
inc
jmp
inc
jmp
inc
mov
cmp
jb
xor
xor
cmp
mov
sete
mov
dec
and
add
mov
jmp
mov
or
mov
mov
mov
mov
mov
mov
jmp
xor
test
sete
and
dec
and
add
and
mov
cmp
jne
mov
movzx
mov
mov
shr
jmp
mov
jmp
xor
mov
mov
xor
mov
jmp
mov
xor
xor
xor
xor
mov
or
mov
mov
mov
mov
mov
mov
pop
pop
xor
pop
call
leave
ret
nop
lea
mov
mov
inc
mov
mov
inc
add
mov
das
pop
sbb
inc
add
pop
mov
push
mov
sub
mov
xor
mov
push
mov
push
push
lea
lea
movs
movs
movs
mov
mov
mov
and
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
je
mov
jmp
mov
mov
mov
test
jne
test
jne
test
jne
xor
cmp
setne
dec
and
add
mov
mov
mov
mov
mov
xor
inc
jmp
mov
cmp
jne
xor
inc
mov
mov
cmp
jne
test
je
test
jne
push
jmp
test
je
cmp
jne
test
jne
push
jmp
cmp
jne
test
jne
push
lea
push
push
call
add
xor
test
je
push
push
push
push
push
call
add
mov
jmp
push
lea
push
push
call
add
xor
test
je
push
push
push
push
push
call
add
mov
xor
jmp
movzx
mov
imul
shr
mov
shr
lea
imul
lea
sar
movzx
xor
movsx
mov
mov
neg
sub
mov
mov
mov
mov
mov
test
je
jge
mov
neg
sub
mov
test
je
add
mov
and
sar
test
je
imul
add
mov
mov
mov
cmp
jb
mov
lea
movs
movs
lea
movs
dec
mov
movzx
xor
mov
mov
mov
mov
mov
mov
xor
and
mov
mov
and
and
lea
movzx
mov
cmp
jae
cmp
jae
mov
cmp
ja
mov
cmp
ja
xor
mov
mov
mov
jmp
xor
cmp
jne
inc
test
jne
cmp
jne
cmp
jne
xor
mov
jmp
cmp
jne
inc
test
jne
cmp
jne
cmp
je
and
lea
mov
mov
mov
add
mov
test
jle
lea
add
mov
mov
mov
movzx
mov
movzx
mov
imul
and
lea
cmp
jb
cmp
jae
mov
cmp
mov
je
inc
add
sub
dec
cmp
jg
mov
inc
inc
inc
dec
cmp
jg
add
test
jle
test
jne
mov
mov
shl
mov
add
shr
or
mov
mov
shr
add
or
add
mov
test
jg
test
jg
add
test
jge
mov
neg
movzx
add
test
je
inc
mov
mov
mov
shr
shl
shr
or
mov
shl
shr
or
dec
mov
mov
jne
cmp
je
or
mov
mov
cmp
ja
mov
and
cmp
jne
cmp
jne
and
cmp
jne
and
mov
cmp
jne
mov
inc
jmp
inc
jmp
inc
jmp
inc
mov
cmp
jb
xor
xor
cmp
mov
sete
mov
dec
and
add
mov
xor
cmp
jne
mov
shr
mov
mov
cmp
jb
inc
xor
mov
mov
mov
mov
mov
movzx
mov
xor
and
and
and
mov
lea
mov
movzx
cmp
jae
cmp
jae
mov
cmp
ja
mov
cmp
ja
xor
mov
mov
jmp
mov
or
mov
mov
mov
mov
mov
mov
jmp
xor
xor
cmp
sete
dec
and
add
mov
jmp
xor
cmp
jne
inc
test
jne
cmp
jne
cmp
jne
mov
jmp
cmp
jne
inc
test
jne
cmp
jne
cmp
je
mov
lea
mov
mov
mov
add
mov
test
jle
lea
mov
lea
mov
movzx
movzx
and
imul
mov
lea
cmp
jb
cmp
jae
mov
cmp
mov
je
inc
sub
inc
inc
dec
cmp
jg
inc
inc
inc
dec
cmp
jg
add
test
jle
mov
test
js
mov
mov
shl
mov
add
shr
or
mov
shr
lea
or
add
mov
test
jg
test
jg
add
test
jge
mov
neg
movzx
add
test
je
inc
mov
mov
mov
shr
shl
shr
or
mov
shl
shr
or
dec
mov
mov
jne
cmp
je
or
mov
mov
cmp
ja
mov
and
cmp
jne
cmp
jne
and
cmp
jne
and
mov
cmp
jne
mov
inc
jmp
inc
jmp
inc
jmp
inc
mov
cmp
jb
xor
xor
cmp
mov
sete
mov
dec
and
add
mov
jmp
mov
or
mov
mov
mov
mov
mov
mov
jmp
xor
test
sete
and
dec
and
add
and
mov
test
mov
mov
mov
mov
je
cwde
add
test
jg
xor
mov
mov
cmp
mov
setne
dec
and
add
mov
mov
mov
jmp
cmp
jle
push
pop
mov
shr
sub
xor
mov
mov
mov
mov
mov
shl
shr
add
or
mov
shr
add
or
dec
mov
mov
jne
test
jge
neg
and
jle
mov
mov
mov
shr
shl
shr
or
mov
shl
shr
or
dec
mov
mov
test
jg
lea
lea
mov
mov
test
jle
mov
mov
lea
lea
movs
movs
movs
shl
mov
shl
shr
lea
or
mov
mov
shr
add
or
mov
lea
shr
lea
mov
shr
or
mov
or
lea
cmp
jb
cmp
jae
lea
xor
cmp
jb
cmp
jae
xor
inc
mov
test
je
inc
mov
lea
mov
cmp
jb
cmp
jae
inc
add
shr
add
or
lea
mov
mov
mov
shr
add
add
mov
shr
or
mov
inc
dec
cmp
mov
mov
jg
dec
mov
dec
cmp
jge
mov
jmp
cmp
jne
mov
dec
cmp
jae
mov
cmp
jae
inc
inc
inc
sub
sub
movsx
mov
mov
mov
mov
pop
pop
xor
pop
call
leave
ret
cmp
jne
dec
cmp
jae
mov
cmp
jae
xor
mov
mov
cmp
mov
setne
dec
and
add
mov
mov
mov
jmp
xor
test
je
inc
test
je
or
test
je
or
test
je
or
test
je
or
test
je
or
mov
mov
and
push
mov
je
cmp
je
cmp
je
cmp
jne
or
jmp
or
jmp
or
mov
and
je
cmp
jne
or
jmp
or
pop
test
je
or
ret
xor
test
je
mov
push
push
push
mov
test
je
or
test
je
or
test
je
or
test
je
or
mov
test
je
or
mov
mov
and
je
cmp
je
cmp
je
cmp
jne
or
jmp
or
jmp
or
mov
pop
and
pop
pop
cmp
je
cmp
je
cmp
jne
or
ret
or
ret
or
ret
mov
push
mov
sub
push
push
push
fstcw
mov
xor
test
je
push
pop
test
je
or
test
je
or
test
je
or
test
je
or
test
je
or
movzx
mov
mov
and
mov
je
cmp
je
cmp
je
cmp
jne
or
jmp
or
jmp
or
and
je
cmp
jne
or
jmp
or
test
je
or
mov
mov
mov
not
and
and
or
mov
cmp
je
mov
call
movzx
mov
fldcw
fstcw
mov
xor
test
je
push
pop
test
je
or
test
je
or
test
je
or
test
je
or
test
je
or
movzx
mov
and
je
cmp
je
cmp
je
cmp
jne
or
jmp
or
jmp
or
and
je
cmp
jne
or
jmp
or
test
je
or
mov
mov
xor
cmp
je
and
mov
stmxcsr
mov
test
jns
push
pop
test
je
or
test
je
or
test
je
or
test
je
or
test
je
or
mov
mov
and
je
cmp
je
cmp
je
cmp
jne
or
jmp
or
jmp
or
mov
and
sub
je
sub
je
sub
jne
or
jmp
or
jmp
or
mov
mov
and
not
and
or
cmp
jne
mov
jmp
call
push
mov
call
pop
stmxcsr
mov
xor
test
jns
push
pop
test
je
or
test
je
or
test
je
or
test
je
or
mov
test
je
or
mov
and
je
cmp
je
cmp
je
cmp
jne
or
jmp
or
jmp
or
and
sub
je
sub
je
sub
jne
or
jmp
or
jmp
or
mov
mov
xor
or
test
je
or
pop
pop
pop
leave
ret
mov
push
mov
sub
push
push
push
lea
call
mov
mov
xor
cmp
je
mov
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
xor
jmp
cmp
je
cmp
jl
cmp
jg
mov
push
mov
mov
lea
cmp
jle
lea
push
movzx
push
push
call
mov
add
jmp
mov
movzx
movzx
and
test
je
mov
inc
jmp
cmp
jne
or
jmp
cmp
jne
mov
inc
mov
test
jl
cmp
je
cmp
jg
test
jne
cmp
je
mov
jmp
mov
cmp
je
cmp
je
mov
jmp
mov
jmp
cmp
jne
cmp
jne
mov
cmp
je
cmp
jne
inc
mov
inc
mov
mov
xor
div
movzx
movzx
test
je
movsx
sub
jmp
test
je
mov
sub
cmp
movsx
ja
sub
add
cmp
jae
or
cmp
jb
jne
cmp
jbe
or
cmp
jne
mov
dec
test
jne
cmp
je
mov
and
jmp
mov
imul
add
mov
mov
inc
jmp
mov
test
jne
test
jne
and
je
cmp
ja
test
jne
cmp
jbe
call
test
mov
je
or
jmp
test
push
pop
setne
add
mov
mov
test
je
mov
test
je
neg
cmp
je
mov
and
mov
jmp
mov
test
je
mov
cmp
je
mov
and
xor
pop
pop
pop
leave
ret
mov
push
mov
xor
push
push
push
push
cmp
jne
push
jmp
push
call
add
pop
ret
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
mov
push
mov
sub
mov
xor
mov
mov
push
push
xor
push
mov
mov
mov
mov
cmp
jbe
mov
mov
mov
lea
movs
movs
movs
mov
shr
lea
lea
or
mov
mov
shr
add
or
mov
mov
and
mov
shr
add
shr
or
mov
add
add
or
lea
mov
mov
mov
cmp
jb
cmp
jae
mov
xor
mov
cmp
je
lea
cmp
jb
cmp
jae
xor
inc
mov
test
je
inc
mov
mov
mov
lea
xor
cmp
jb
cmp
jae
xor
inc
mov
test
je
inc
mov
add
and
lea
mov
shr
lea
or
mov
mov
shr
lea
mov
or
mov
mov
mov
movsx
lea
mov
cmp
jb
cmp
jae
mov
cmp
mov
je
lea
xor
cmp
jb
cmp
jae
xor
inc
mov
test
je
inc
mov
dec
inc
cmp
ja
xor
jmp
mov
mov
shr
mov
mov
mov
shl
shr
or
shl
add
mov
mov
cmp
je
mov
test
jne
mov
mov
add
mov
add
shr
mov
lea
or
mov
mov
shr
add
or
mov
mov
test
je
mov
mov
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
xor
cmp
je
test
je
cmp
je
mov
ldmxcsr
jmp
mov
mov
mov
cmp
je
cmp
je
xor
ret
xor
inc
ret
mov
and
and
ldmxcsr
mov
jmp
and
ldmxcsr
call
ret
jmp
mov
mov
jmp
mov
add
call
add
pop
add
int3
pop
add
in
add
not
add
push
sbb
add
sbb
add
sbb
add
sbb
add
add
pop
sbb
add
add
add
sbb
add
sbb
add
sbb
add
add
dec
sbb
add
push
sbb
add
sbb
add
add
sbb
add
add
add
jb
add
mov
add
mov
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
push
sbb
add
add
ins
sbb
add
add
mov
add
sahf
sbb
add
add
(bad)
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
sub
add
cmp
add
push
sbb
add
add
js
add
mov
add
cwde
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
ss
add
add
pusha
sbb
add
sbb
add
sbb
add
add
loopne
add
cli
sbb
add
sbb
add
xor
add
add
add
sldt
adc
add
adc
add
or
add
push
add
add
add
ficomp
add
push
rol
daa
aad
add
inc
add
inc
add
and
mov
inc
add
sti
inc
add
push
add
add
add
add
add
add
call
gs
gs
add
dec
outs
push
gs
outs
jbe
add
add
inc
outs
jb
gs
gs
outs
jbe
add
ins
add
add
inc
add
add
add
push
add
add
addr16
retf
cmp
add
dec
mov
xor
mov
and
dec
test
xor
lea
adc
or
test
test
(bad)
sar
mov
mov
push
add
mov
add
inc
add
mov
add
mov
add
mov
add
mov
add
mov
add
xchg
test
mov
cmp
pop
add
add
pop
add
add
add
and
retf
cmp
add
dec
mov
xor
xor
xor
xor
add
xchg
xor
ja
popa
push
out
mov
les
(bad)
hlt
push
xor
xchg
fs
xor
fdivr
jmp
rcl
mov
sub
mov
sbb
dec
jno
repz
test
ficomp
jmp
(bad)
mov
hlt
mov
imul
std
in
leave
mov
add
ins
push
arpl
psubd
or
outs
cmp
imul
addr16
add
aam
dec
std
test
movs
cli
test
xor
(bad)
leave
mov
lods
jecxz
fdiv
jne
fild
or
shr
cmp
ficom
push
xlat
enter
mov
and
mov
cdq
xchg
mov
mov
or
or
and
or
adc
stos
sbb
data16
inc
fdiv
jno
add
aad
mov
mov
movs
in
lahf
xor
mov
js
stc
add
mov
push
loope
or
ins
or
pop
arpl
hlt
push
imul
ins
sbb
xor
dec
add
in
xchg
push
ins
jnp
add
shl
adc
cmc
(bad)
fnstenv
adc
mov
mov
bound
ficom
gs
aam
pop
popa
mov
into
push
mov
je
mov
aam
movs
fisttp
xchg
fdivr
sti
hlt
(bad)
shr
imul
mov
sar
add
in
add
pop
dec
or
cmp
add
daa
adc
or
and
test
or
mov
popa
into
push
stc
ficomp
leave
fldcw
and
xlat
(bad)
pop
cmp
mov
cmp
lods
ins
mov
in
mov
mov
add
inc
aad
scas
ja
popf
adc
push
fdiv
or
test
fs
ds
or
or
push
in
dec
xchg
daa
scas
add
mov
pop
jge
xchg
(bad)
shl
add
inc
push
imul
xor
sbb
push
imul
aam
loopne
ror
int3
dec
frstor
fistp
mov
mov
aad
mov
call
xchg
shl
push
repnz
addr16
cmps
fld
mov
dec
ss
fisubr
or
scas
test
pusha
jp
inc
ret
out
pusha
fist
addr16
mov
jns
imul
and
shr
ss
push
xchg
ja
int3
add
mov
das
es
lds
or
sub
mov
cmps
call
ret
shl
sbb
ret
es
pushf
mov
ins
add
ss
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
xchg
or
out
fdivr
fisttp
aam
rol
clc
mov
push
int
mov
mul
ja
outs
ja
mov
out
or
retf
pop
or
adc
sahf
gs
clc
sar
imul
ins
push
js
or
push
add
mov
cmp
cmps
not
pusha
ror
imul
push
scas
fcomp
fldenv
fild
cmp
aaa
push
scas
mov
fidivr
mov
jmp
repnz
retf
mov
cmps
mov
sar
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
inc
xor
sbb
push
sub
fs
hlt
ja
xchg
inc
dec
or
ret
call
hlt
jecxz
dec
mov
dec
jle
mov
sub
cwde
xchg
ret
and
push
shl
js
inc
out
popa
push
xlat
scas
cs
mov
xlat
mov
sbb
test
sbb
add
call
out
ins
ins
(bad)
fistp
inc
aam
push
pop
int
and
xchg
jecxz
lahf
mov
inc
mov
popa
ja
mov
out
repz
gs
fisubr
lahf
inc
inc
sub
imul
jo
scas
imul
out
pop
sub
sub
pop
or
sbb
repz
fbstp
push
jo
xor
hlt
div
sub
jne
sbb
xor
pop
nop
sti
mov
test
jns
test
cmp
jns
jae
dec
call
inc
cmp
ficomp
dec
jns
inc
jle
jmp
(bad)
sbb
fild
mov
lea
fnstcw
mov
dec
hlt
mov
or
xchg
lea
or
int3
pop
dec
xor
inc
mov
outs
retf
ja
pop
mov
mov
xchg
push
xchg
xchg
push
cwde
xlat
ficom
test
loope
xchg
retf
cli
cmc
pop
xlat
bound
out
imul
push
inc
lahf
test
pop
adc
push
sbb
adc
and
inc
and
out
out
and
cmp
dec
mov
lahf
mov
and
cmps
xor
mov
lods
out
sar
mov
adc
ins
mov
xchg
adc
jle
push
jns
das
mov
and
je
or
repnz
dec
push
jo
gs
out
jle
(bad)
repz
mov
xchg
rcl
cmp
mov
js
mov
test
cwde
cmp
test
mov
mov
scas
adc
out
pop
push
ins
hlt
inc
int
fldcw
push
ret
adc
add
inc
jmp
ja
inc
xlat
ss
push
out
mov
mov
movs
test
jno
mov
ja
(bad)
ins
pop
push
dec
sub
or
sub
add
adc
cwde
mov
nop
bound
xchg
push
(bad)
push
hlt
out
les
fdecstp
jmp
lea
imul
pushf
sub
sub
lods
dec
jo
outs
sbb
sub
loope
fisub
pop
lds
push
call
dec
in
mov
movs
ret
addr16
test
mov
(bad)
lahf
fdivrp
cmp
repz
jnp
call
cmp
mov
or
stos
mov
sbb
icebp
adc
sub
jae
xor
mov
jo
cmc
shr
add
mov
arpl
cli
retf
(bad)
loope
int3
mov
stc
lea
scas
or
lea
mov
test
and
pop
ins
cmp
les
adc
sub
dec
add
sar
push
or
cmp
popf
cmps
push
mov
xchg
adc
in
xor
cdq
bound
fcom
into
pop
dec
loope
push
jle
push
xchg
sub
int3
bound
mov
xor
call
mov
pop
lods
ret
outs
xchg
dec
ins
das
mov
adc
test
push
and
sub
adc
jns
xchg
movs
dec
mov
movs
daa
sub
repnz
fdivrp
shl
out
mov
shl
es
xchg
aas
mov
adc
out
jp
std
pop
mov
gs
pop
jle
aaa
or
jbe
dec
div
lahf
adc
jb
and
add
add
aaa
push
add
test
pop
mov
or
jmp
retf
push
mov
lea
push
adc
(bad)
cmp
(bad)
test
or
stc
sbb
push
xchg
fmul
or
pop
or
es
leave
in
push
ja
pop
sub
das
sbb
fild
sbb
repnz
adc
dec
jae
adc
cmp
and
(bad)
adc
mov
pop
loopne
dec
cmp
sub
cmp
clc
or
cmp
inc
aas
or
cmp
push
add
outs
jge
aaa
ss
fidiv
test
xchg
xor
imul
fld
adc
nop
in
and
(bad)
xor
daa
leave
pop
sub
and
mov
and
mov
sub
fidivr
sub
ds
sbb
sub
call
das
ror
jno
pop
push
jae
xor
jb
and
push
jbe
icebp
pop
je
fwait
aad
js
mov
mov
jg
or
jl
je
jns
push
inc
js
mov
(bad)
jnp
cs
ins
fdivrp
cmp
nop
cli
outs
ins
xchg
push
push
xor
cmp
imul
adc
sub
shr
aam
cmps
gs
fs
imul
dec
pop
mov
push
dec
jns
xchg
dec
cld
arpl
dec
retf
or
xchg
mov
dec
movs
fstp
inc
scas
lock
inc
test
shl
inc
xor
inc
jae
cmovo
out
inc
sbb
push
xor
mov
mov
mov
clc
push
mov
adc
push
aad
mov
pop
fist
pop
xchg
pop
mov
movs
pop
xor
jmp
add
sub
outs
pop
ins
das
lods
pop
sbb
loope
jno
loopne
iret
mov
fldenv
cmp
imul
out
addr16
in
dec
es
mov
out
push
sahf
mov
in
in
das
call
mov
stos
jmp
pop
imul
(bad)
rcl
cld
sahf
ins
xchg
(bad)
test
adc
cli
sbb
sti
inc
les
clc
dec
jmp
ret
cmp
inc
icebp
xchg
inc
or
mov
xchg
(bad)
test
pop
js
push
aaa
mov
fidivr
jecxz
fstp
mov
shl
cmc
fucom
dec
aaa
(bad)
or
xlat
out
test
fsubr
aam
mov
aad
movs
(bad)
shl
into
mov
rcr
and
adc
pop
lds
xchg
pushf
les
fcmovb
dec
inc
sbb
int3
push
push
ret
xchg
ret
mov
call
dec
retf
lahf
lds
enter
leave
je
inc
int3
inc
ins
xchg
sbb
ror
mov
scas
xchg
ja
ins
nop
cs
sub
pushf
cmps
xchg
stos
push
fs
repnz
clc
(bad)
mov
sahf
xchg
adc
pushf
mov
outs
mov
adc
xor
xor
dec
mov
or
(bad)
in
popf
or
dec
add
mov
(bad)
mov
push
pop
and
push
adc
fadd
arpl
pop
xchg
shl
test
into
add
stos
stc
outs
movs
stos
jl
jmp
dec
adc
scas
adc
lods
sbb
xor
inc
aas
mov
les
clc
mov
stos
std
jl
popf
xchg
mov
mov
sbb
mov
cmps
inc
mov
int
mov
fcmovne
mov
mov
mov
cmovns
push
dec
adc
mov
mov
fidivr
pop
pop
mov
add
add
gs
stos
out
scas
mov
push
xchg
bound
fcomp
and
out
sub
fs
outs
add
(bad)
dec
fstp
push
xor
loopne
adc
lahf
push
sbb
xor
cli
jno
lods
inc
enter
lods
cmps
(bad)
addr16
or
outs
into
int
jg
xchg
adc
mov
aas
sahf
rcr
xchg
call
jae
lods
and
mov
inc
jp
ds
xor
mov
cmp
rol
xchg
or
in
xchg
loop
pop
test
xchg
fstp
(bad)
iret
aas
sub
ja
adc
jmp
in
inc
push
clc
sub
les
and
push
sahf
loop
outs
dec
jg
or
(bad)
jge
inc
aad
sar
dec
rcr
(bad)
lds
xchg
lahf
mov
inc
std
mov
xchg
(bad)
hlt
adc
call
adc
pop
aas
test
mov
sbb
mov
jbe
push
retf
pop
jg
test
push
shl
pop
mov
sbb
pop
mov
adc
shl
cmp
das
retf
jnp
dec
ja
mov
push
add
dec
mov
outs
inc
nop
call
cld
jle
data16
sbb
ficom
daa
mov
mov
out
mov
mov
mov
cmp
shr
hlt
pop
outs
xchg
add
cmp
call
pop
xchg
sub
mov
pop
clc
or
test
push
mov
fist
inc
addr16
fwait
push
add
in
mov
das
dec
leave
xor
inc
arpl
adc
push
mov
aaa
pop
in
push
loope
inc
call
cwde
call
scas
push
out
aaa
push
clc
inc
add
jmp
cdq
scas
xlat
loopne
retf
xor
mov
in
pop
shl
push
mov
push
inc
aad
in
jmp
bound
inc
xchg
out
xor
or
sub
push
in
cmp
pop
cmp
outs
xor
or
xchg
movs
loope
mov
das
sub
dec
dec
cmc
scas
repz
xor
mov
xchg
and
hlt
js
scas
dec
rol
std
shl
pop
xchg
idiv
sub
xchg
lahf
pop
repnz
and
add
jle
cmc
mov
(bad)
out
mov
pop
push
mov
ret
mov
fld
push
jmp
xor
(bad)
and
push
mov
rol
outs
mov
push
or
adc
jmp
into
movs
adc
(bad)
bswap
fst
xchg
test
lods
sub
sbb
and
xor
fcom
add
(bad)
scas
iret
jb
leave
jae
and
movs
push
inc
xchg
sbb
test
pop
adc
out
dec
jbe
mov
into
lea
inc
fsubr
inc
clc
fs
jns
stc
xor
xchg
inc
fidiv
call
mov
lock
imul
ss
test
(bad)
cs
mov
call
mov
loope
into
cs
inc
out
add
add
pop
std
pop
jmp
icebp
and
sub
aam
into
mov
iret
test
jg
pop
es
outs
mov
jbe
(bad)
out
retf
(bad)
sbb
loope
push
adc
cmp
adc
mov
jle
cmp
pushf
in
adc
outs
push
sbb
cmps
push
data16
jno
ds
outs
sub
mov
add
xchg
out
mov
dec
or
sbb
rol
pop
outs
sti
ret
neg
jmp
pop
test
or
xchg
popa
mov
fiadd
add
add
xor
cdq
or
pop
ins
les
jo
hlt
(bad)
xor
push
fisttp
movs
loopne
jmp
mov
mov
sub
jl
out
sub
xchg
sbb
mov
repnz
inc
ficomp
fcmovbe
jge
fucom
jmp
aam
push
adc
(bad)
adc
imul
mov
in
adc
pop
dec
arpl
ins
fsqrt
(bad)
arpl
outs
and
dec
imul
in
addr16
cmp
in
dec
add
inc
ror
mov
xor
mov
ins
fstp
stc
inc
xor
ins
jecxz
fistp
(bad)
or
pop
fnstenv
lods
push
fiadd
cmp
xlat
push
cmp
hlt
mov
mov
and
mov
movs
movaps
mov
or
or
mov
or
and
outs
jl
pop
push
sbb
cmp
add
jno
cwde
shl
mov
jno
test
lahf
mov
aam
js
leave
mov
xchg
or
sbb
or
sub
out
pop
add
push
hlt
sbb
popa
bound
bound
dec
ins
push
xchg
in
sbb
movs
jnp
or
shl
les
mov
(bad)
adc
mov
jl
fstp
dec
mov
jl
sti
aam
gs
mov
pop
cmp
add
xor
dec
fbld
xlat
movs
rol
ins
rcl
hlt
sti
inc
imul
cld
lods
mov
pusha
mov
jae
add
pop
fisttp
jno
daa
add
mov
or
xchg
mov
and
mov
data16
into
popa
in
pop
fdivrp
push
sub
leave
cwde
mov
cwde
and
xlat
test
pop
mov
pop
cs
xor
mov
mov
add
rcr
popf
shl
add
es
jecxz
or
xchg
cmp
push
test
push
iret
or
add
mov
setae
mov
push
mul
pop
and
sbb
outs
imul
(bad)
aam
jbe
shr
loopne
fidivr
fisttp
stc
mov
out
stc
pop
mov
inc
pusha
mov
aad
(bad)
mov
jle
fadd
les
repnz
sar
push
addr16
mov
fisttp
ss
fmul
sbb
dec
test
pusha
fbld
ret
test
fist
outs
mov
inc
imul
sbb
push
ja
mov
add
mov
lds
or
sub
add
xlat
jmp
sub
sahf
mov
scas
sbb
in
arpl
es
mov
or
ss
jb
test
add
xchg
mov
jp
jnp
sub
xchg
ror
or
or
fbld
xchg
rcl
icebp
aam
inc
push
fiadd
int
mov
ja
sbb
pop
out
punpckhdq
push
cmp
adc
or
sahf
(bad)
clc
bound
rcl
ins
iret
inc
mov
or
adc
ret
es
shl
test
ja
scas
shr
(bad)
pop
fadd
or
fdivr
lock
mov
iret
jg
mov
jmp
retf
mov
xchg
xor
mov
add
push
ficom
and
addr16
les
mov
sub
xchg
mov
mov
mov
sub
add
add
sbb
inc
xor
bound
fs
lds
pop
cmps
xchg
xchg
(bad)
enter
rol
mov
mov
hlt
fxch
lods
mov
or
scas
jle
sahf
sub
dec
ret
push
fldenv
adc
jo
popa
out
inc
xchg
cs
xlat
push
aaa
mov
adc
cwde
mov
add
sbb
sbb
ss
call
ins
sbb
inc
aas
(bad)
pop
push
sahf
xchg
test
mov
inc
and
call
shl
ret
fiadd
gs
pop
scas
stos
inc
inc
lahf
jmp
imul
jbe
std
imul
sub
or
or
sbb
ins
fild
repz
pop
pop
mov
jo
jno
imul
sub
mul
sbb
jne
pop
mov
sti
push
test
jns
mov
cmp
jns
push
dec
mov
pop
fisubr
cmp
jns
add
ret
xchg
push
sbb
xchg
adc
mov
cmp
lds
or
xchg
into
pop
int3
add
inc
xlat
xor
cli
bound
mov
mov
aas
(bad)
xchg
xchg
push
xchg
(bad)
cwde
push
(bad)
int3
test
shl
cli
retf
xchg
jb
xlat
pop
imul
inc
push
mov
pop
dec
test
unpckhps
sbb
jo
cmp
std
imul
retf
or
add
lahf
loop
cmps
int3
and
mov
loope
mov
shr
lahf
adc
ins
leave
dec
and
rcl
jmp
ja
das
aas
jns
ss
mov
or
je
adc
xor
push
dec
lea
pusha
jle
xor
out
(bad)
(bad)
std
ret
rcl
cmp
call
js
cmps
cmp
sbb
or
retf
mov
pop
dec
inc
hlt
ins
push
ins
fnstcw
int
ret
repz
adc
inc
and
shr
ja
adc
out
movs
add
test
mov
push
ja
cwde
pop
ins
(bad)
adc
ss
daa
sbb
fnstsw
xor
mov
push
rcr
hlt
lds
(bad)
out
hlt
push
out
ret
neg
xchg
aad
pop
mov
test
xor
imul
jns
shl
lods
clc
pop
sbb
inc
sub
data16
loope
lds
mov
dec
repz
mov
in
test
xchg
sub
in
scas
mov
(bad)
repz
cmp
call
imul
or
stos
test
jg
sbb
mov
pop
adc
xor
xor
dec
jo
mov
imul
jp
xor
pop
mov
retf
cli
xlat
dec
shl
out
stc
int3
mov
loopne
test
mov
and
popf
mov
inc
mov
and
sbb
ins
pop
xor
push
test
cwde
inc
jle
test
ror
cmp
hlt
pop
mov
cmps
popf
stos
adc
add
cld
dec
xor
bound
into
jns
fmul
dec
pop
push
cli
jle
jnp
sub
aam
lea
push
pop
mov
fnop
pop
jle
in
inc
gs
dec
xchg
outs
jne
mov
call
or
push
aas
sub
mov
sbb
mov
daa
repnz
mov
mov
(bad)
out
and
loope
or
mov
jle
shl
imul
inc
cmp
ja
fsub
mov
jle
hlt
out
push
or
test
mov
adc
xor
add
add
ret
add
pop
pop
or
jmp
lea
dec
push
test
adc
psrlw
(bad)
or
push
out
loope
sbb
fs
xchg
push
or
inc
cmp
sbb
mov
sbb
lods
sbb
popa
fwait
sbb
mov
adc
cwde
call
mov
cmps
adc
xchg
adc
(bad)
xor
push
mov
in
cmp
loopne
(bad)
sub
cmp
xchg
mov
or
mov
xchg
cmp
pop
pop
pop
aaa
pushf
jge
xor
sbb
test
xchg
aad
xor
imul
adc
frstor
in
and
out
xor
es
dec
dec
and
cdq
and
and
adc
sub
pusha
inc
sub
or
jno
hlt
sub
jbe
cs
enter
mov
shl
div
pop
scas
jb
xor
jbe
dec
sub
jb
aad
inc
jle
fdivr
dec
mov
jge
or
jl
bound
jns
je
js
push
xchg
jp
mov
std
ins
mov
inc
xchg
cli
fisubr
nop
jmp
push
in
pop
push
repz
arpl
aas
popa
sub
push
cmps
xlat
aam
fs
mov
dec
xlat
retf
and
mov
dec
dec
xchg
jne
dec
fisub
dec
sbb
retf
dec
pop
mov
dec
cwde
frstor
inc
push
lock
inc
inc
dec
test
inc
int
inc
inc
addps
dec
out
inc
mov
push
xor
addr16
jne
ds
mov
or
ror
adc
push
mov
cmp
pop
and
pop
in
xchg
xchg
pop
sub
add
inc
pop
pop
lods
das
ins
loope
sbb
loop
iret
out
jecxz
movs
(bad)
cmp
pop
out
fldcw
mov
or
cmp
in
paddsb
hlt
popa
call
in
mov
jmp
ss
imul
rcl
(bad)
(bad)
xchg
ins
sahf
call
test
sti
fdivr
stc
sahf
les
pop
scas
jne
add
dec
bnd
lock
adc
or
cmc
retf
sub
test
fnstcw
pusha
fdivr
mov
fstp
jecxz
fidiv
mov
(bad)
and
fdiv
dec
in
imul
test
fdiv
shl
add
mov
jo
shl
pop
lds
adc
pushf
xchg
daa
(bad)
fisubr
jle
sbb
ret
int3
ret
xchg
cmp
rcl
mov
retf
dec
scas
test
pop
lahf
enter
leave
or
icebp
int3
inc
pop
je
xchg
iret
rcl
into
add
inc
nop
ins
cld
ja
sub
xchg
jmp
ds
xchg
fs
stos
xchg
and
repnz
loopne
lds
jle
iret
pushf
cmp
xchg
popf
cli
jns
cwde
mov
and
ja
adc
repz
mov
pop
mov
mov
sbb
mov
or
mov
push
mov
sbb
int3
push
test
arpl
aad
or
test
mov
into
stos
movs
outs
stc
scas
jmp
jl
sub
dec
lods
outs
lods
adc
sbb
movs
jne
jbe
mov
inc
mov
cmp
mov
mov
jae
mov
sbb
mov
cmps
mov
mov
fisttp
cmpxchg
mov
punpckldq
xlat
and
adc
test
xchg
pushf
xor
loopne
mov
cwde
xor
add
add
mov
or
mov
mov
out
(bad)
bound
xor
xlat
cmp
jge
dec
mov
loopne
xlat
add
mov
loopne
ja
pop
arpl
push
push
sbb
call
adc
jno
jnp
enter
lods
jne
or
into
outs
es
lods
jg
sub
movs
mov
xchg
rcr
mov
(bad)
and
xor
pop
or
addr16
xchg
shr
push
cmp
in
pop
or
pop
lock
in
xchg
xchg
fnstsw
loopne
iret
(bad)
dec
pop
ja
sub
jmp
jecxz
in
fmul
lock
mov
pop
and
sub
sahf
push
dec
jg
outs
test
or
ins
cld
rcr
lahf
ror
and
lds
sub
mov
inc
and
(bad)
xchg
test
call
cmp
xor
not
adc
iret
push
retf
mov
ret
pusha
test
jo
out
pop
mov
test
fistp
ret
imul
push
ret
ja
imul
cpuid
jae
push
sub
mov
cwde
cmc
cld
sar
nop
out
push
jle
fidiv
sbb
mov
inc
sub
mov
cmp
jg
sar
xchg
outs
pop
hlt
cmp
test
xchg
das
aas
mov
xchg
pop
in
mov
pusha
push
or
pop
xor
dec
test
cmps
icebp
iret
mov
inc
cs
addr16
daa
jo
jno
dec
mov
(bad)
xor
inc
out
imul
pushf
rol
push
jb
pop
aaa
retf
pop
loope
scas
dec
push
inc
call
mov
aaa
out
push
add
inc
clc
mov
jmp
js
mov
xlat
scas
xor
in
pop
mov
push
in
pop
inc
push
jle
(bad)
in
sbb
bound
and
inc
or
xor
out
mov
aam
push
stc
mov
in
pop
cmp
cmp
xor
or
cmp
movs
add
dec
sub
scas
cmc
dec
dec
xor
jbe
mov
mov
sbb
ror
sar
add
push
movs
not
cmp
lahf
xchg
xchg
in
icebp
repnz
imul
cmc
xlat
jle
out
ror
ret
push
jp
jmp
fnop
mov
xor
xor
(bad)
and
stc
popa
call
mov
lods
mov
ss
jb
call
xchg
(bad)
loope
xchg
adc
int
lods
mov
inc
and
jne
jp
adc
scas
dec
jae
fwait
push
movs
icebp
and
sbb
test
jbe
out
push
into
icebp
mov
inc
lea
call
inc
xchg
push
xor
es
jmp
(bad)
mov
or
mov
lock
bound
fwait
push
mov
xchg
xchg
cdq
xor
es
mov
cld
mov
adc
push
ja
ss
adc
out
mov
loopne
jbe
pop
not
dec
jmp
ds
ins
add
aam
popa
inc
(bad)
mov
stos
jle
test
cmp
es
jl
mov
pop
sbb
mov
repz
in
test
adc
ja
mov
ret
add
cmp
cdq
in
mov
push
outs
xchg
cmps
fidiv
sub
fisubr
sar
lock
out
mov
mov
push
inc
sar
dec
sti
outs
pop
sub
push
addr16
cmps
int3
mov
pop
je
into
jp
mov
push
icebp
mov
inc
add
add
or
add
nop
inc
inc
add
add
add
add
add
add
add
add
adc
adc
add
add
add
add
add
add
inc
inc
add
add
add
inc
inc
add
add
add
inc
inc
add
add
add
inc
inc
add
add
add
add
adc
inc
inc
add
xor
xor
add
pop
add
add
add
add
add
add
add
add
push
add
or
add
jae
adc
pop
add
or
add
xor
add
rol
pop
or
add
pusha
add
or
add
or
add
or
add
or
add
pop
push
add
or
add
sbb
add
nop
add
pop
cmp
add
js
add
cmp
add
rol
adc
adc
add
push
add
or
add
or
add
or
add
pop
add
add
push
add
or
adc
pop
sub
add
je
add
xor
add
enter
or
add
or
add
test
add
add
add
test
add
inc
add
or
add
pop
or
add
pop
add
or
add
cwde
add
push
add
or
or
add
fadd
adc
pop
add
or
or
add
mov
add
or
add
clc
add
pop
add
add
push
add
or
add
pop
and
add
jb
add
xor
add
les
adc
or
add
bound
add
and
add
movs
add
or
add
or
add
or
add
pop
pop
add
or
add
sbb
add
xchg
add
inc
add
or
add
cmp
add
aam
adc
adc
add
push
add
sub
add
mov
add
or
add
mov
add
dec
add
or
add
pop
add
add
or
add
add
adc
xor
add
jbe
add
add
or
add
pop
sldt
or
add
add
or
add
xchg
add
inc
add
or
add
pop
or
add
pop
add
or
add
or
add
jle
add
add
or
add
pop
sbb
add
outs
add
or
add
or
add
mov
add
dec
add
or
add
add
add
push
add
or
add
pop
pop
add
or
add
xor
add
ret
pop
or
add
popa
add
or
add
or
add
or
add
or
add
pop
push
add
or
add
sbb
add
xchg
add
pop
cmp
add
jns
add
cmp
add
rol
adc
adc
add
imul
add
mov
add
or
add
mov
add
dec
add
or
add
pop
add
add
push
add
or
add
pop
sub
add
jne
add
xor
add
pop
or
add
or
add
or
add
or
add
jmp
or
add
sbb
add
push
add
or
add
cmp
add
pop
pop
add
or
add
sub
add
or
add
or
add
cli
add
pop
add
add
push
add
or
add
pop
and
add
jae
add
xor
add
mov
pop
or
add
arpl
add
and
add
cmps
add
or
add
or
add
or
add
pop
pop
add
or
add
sbb
add
xchg
add
inc
add
or
add
cmp
add
(bad)
add
pop
adc
add
imul
or
add
or
add
or
add
or
add
pop
add
add
or
add
add
adc
xor
add
ja
add
aaa
add
or
add
pop
sldt
or
add
daa
add
or
add
or
add
or
add
pop
or
add
pop
add
or
add
or
add
or
add
aas
add
or
add
pop
sbb
add
outs
add
or
add
or
add
or
add
or
add
add
add
push
add
or
add
jae
adc
pop
add
or
add
xor
add
rol
pop
or
add
pusha
add
or
add
or
add
or
add
or
add
pop
push
add
or
add
sbb
add
xchg
add
pop
cmp
add
js
add
cmp
add
rol
adc
adc
add
push
add
or
add
or
add
or
add
pop
add
add
push
add
or
adc
pop
sub
add
je
add
xor
add
leave
add
pop
or
add
or
add
test
add
or
add
jmp
add
or
or
add
cdq
add
push
add
or
or
add
fld
adc
pop
add
or
or
add
mov
add
or
add
stc
add
pop
add
add
push
add
or
add
pop
and
add
jb
add
xor
add
lds
adc
or
add
bound
add
and
add
movs
add
or
add
or
add
or
add
pop
pop
add
or
add
sbb
add
xchg
add
inc
add
or
add
cmp
add
aad
adc
adc
add
push
add
sub
add
mov
add
or
add
mov
add
dec
add
or
add
pop
add
add
or
add
add
adc
xor
add
jbe
add
add
or
add
pop
sldt
or
add
add
or
add
or
add
or
add
pop
or
add
pop
add
or
add
or
add
or
add
add
or
add
pop
sbb
add
outs
add
or
add
or
add
or
add
or
add
add
add
push
add
or
add
pop
pop
add
or
add
xor
add
ret
add
pop
or
add
popa
add
or
add
or
add
or
add
or
add
pop
push
add
or
add
sbb
add
xchg
add
pop
cmp
add
jns
add
cmp
add
rol
adc
adc
add
imul
add
mov
add
or
add
mov
add
dec
add
or
add
pop
add
add
push
add
or
add
pop
sub
add
jne
add
xor
add
pop
or
add
or
add
or
add
or
add
jmp
adc
or
add
pop
add
or
add
push
add
or
add
cmp
add
pop
pop
add
or
add
sub
add
or
add
or
add
sti
add
pop
add
add
push
add
or
add
pop
and
add
jae
add
xor
add
mov
add
arpl
add
and
add
cmps
add
or
add
or
add
or
add
pop
pop
add
or
add
sbb
add
xchg
add
inc
add
or
add
cmp
add
xlat
add
pop
adc
add
imul
or
add
or
add
or
add
or
add
pop
add
add
or
add
add
adc
xor
add
ja
add
aaa
add
or
add
pop
sldt
or
add
daa
add
or
add
or
add
or
add
pop
or
add
pop
add
or
add
or
add
or
add
aas
add
or
add
pop
sbb
add
outs
add
or
add
or
add
or
add
or
add
add
add
adc
add
adc
add
add
add
sbb
and
sbb
add
adc
add
push
add
add
adc
add
sbb
pop
add
add
popa
add
add
add
adc
xor
sbb
add
adc
add
add
add
adc
adc
adc
add
or
pop
add
add
add
add
add
add
or
add
add
add
add
add
add
push
add
or
add
jae
adc
pop
add
or
add
xor
add
rol
pop
or
add
pusha
add
or
add
or
add
or
add
or
add
pop
push
add
or
add
sbb
add
nop
add
pop
cmp
add
js
add
cmp
add
rol
adc
adc
add
push
add
or
add
or
add
or
add
pop
add
add
push
add
or
adc
pop
sub
add
je
add
xor
add
enter
or
add
or
add
test
add
add
add
test
add
inc
add
or
add
pop
or
add
pop
add
or
add
cwde
add
push
add
or
or
add
fadd
adc
pop
add
or
or
add
mov
add
or
add
clc
add
pop
add
add
push
add
or
add
pop
and
add
jb
add
xor
add
les
adc
or
add
bound
add
and
add
movs
add
or
add
or
add
or
add
pop
pop
add
or
add
sbb
add
xchg
add
inc
add
or
add
cmp
add
aam
adc
adc
add
push
add
sub
add
mov
add
or
add
mov
add
dec
add
or
add
pop
add
add
or
add
add
adc
xor
add
jbe
add
add
or
add
pop
sldt
or
add
add
or
add
xchg
add
inc
add
or
add
pop
or
add
pop
add
or
add
or
add
jle
add
add
or
add
pop
sbb
add
outs
add
or
add
or
add
mov
add
dec
add
or
add
add
add
push
add
or
add
pop
pop
add
or
add
xor
add
ret
pop
or
add
popa
add
or
add
or
add
or
add
or
add
pop
push
add
or
add
sbb
add
xchg
add
pop
cmp
add
jns
add
cmp
add
rol
adc
adc
add
imul
add
mov
add
or
add
mov
add
dec
add
or
add
pop
add
add
push
add
or
add
pop
sub
add
jne
add
xor
add
pop
or
add
or
add
or
add
or
add
jmp
or
add
sbb
add
push
add
or
add
cmp
add
pop
pop
add
or
add
sub
add
or
add
or
add
cli
add
pop
add
add
push
add
or
add
pop
and
add
jae
add
xor
add
mov
pop
or
add
arpl
add
and
add
cmps
add
or
add
or
add
or
add
pop
pop
add
or
add
sbb
add
xchg
add
inc
add
or
add
cmp
add
(bad)
add
pop
adc
add
imul
or
add
or
add
or
add
or
add
pop
add
add
or
add
add
adc
xor
add
ja
add
aaa
add
or
add
pop
sldt
or
add
daa
add
or
add
or
add
or
add
pop
or
add
pop
add
or
add
or
add
or
add
aas
add
or
add
pop
sbb
add
outs
add
or
add
or
add
or
add
or
add
add
add
push
add
or
add
jae
adc
pop
add
or
add
xor
add
rol
pop
or
add
pusha
add
or
add
or
add
or
add
or
add
pop
push
add
or
add
sbb
add
xchg
add
pop
cmp
add
js
add
cmp
add
rol
adc
adc
add
push
add
or
add
or
add
or
add
pop
add
add
push
add
or
adc
pop
sub
add
je
add
xor
add
leave
add
pop
or
add
or
add
test
add
or
add
jmp
add
or
or
add
cdq
add
push
add
or
or
add
fld
adc
pop
add
or
or
add
mov
add
or
add
stc
add
pop
add
add
push
add
or
add
pop
and
add
jb
add
xor
add
lds
adc
or
add
bound
add
and
add
movs
add
or
add
or
add
or
add
pop
pop
add
or
add
sbb
add
xchg
add
inc
add
or
add
cmp
add
aad
adc
adc
add
push
add
sub
add
mov
add
or
add
mov
add
dec
add
or
add
pop
add
add
or
add
add
adc
xor
add
jbe
add
add
or
add
pop
sldt
or
add
add
or
add
or
add
or
add
pop
or
add
pop
add
or
add
or
add
or
add
add
or
add
pop
sbb
add
outs
add
or
add
or
add
or
add
or
add
add
add
push
add
or
add
pop
pop
add
or
add
xor
add
ret
add
pop
or
add
popa
add
or
add
or
add
or
add
or
add
pop
push
add
or
add
sbb
add
xchg
add
pop
cmp
add
jns
add
cmp
add
rol
adc
adc
add
imul
add
mov
add
or
add
mov
add
dec
add
or
add
pop
add
add
push
add
or
add
pop
sub
add
jne
add
xor
add
pop
or
add
or
add
or
add
or
add
jmp
adc
or
add
pop
add
or
add
push
add
or
add
cmp
add
pop
pop
add
or
add
sub
add
or
add
or
add
sti
add
pop
add
add
push
add
or
add
pop
and
add
jae
add
xor
add
mov
add
arpl
add
and
add
cmps
add
or
add
or
add
or
add
pop
pop
add
or
add
sbb
add
xchg
add
inc
add
or
add
cmp
add
xlat
add
pop
adc
add
imul
or
add
or
add
or
add
or
add
pop
add
add
or
add
add
adc
xor
add
ja
add
aaa
add
or
add
pop
sldt
or
add
daa
add
or
add
or
add
or
add
pop
or
add
pop
add
or
add
or
add
or
add
aas
add
or
add
pop
sbb
add
outs
add
or
add
or
add
or
add
or
add
add
add
adc
add
adc
add
add
add
sbb
and
sbb
add
adc
add
push
add
add
adc
add
sbb
pop
add
add
popa
add
add
add
adc
xor
sbb
add
adc
add
add
add
adc
adc
adc
add
or
pop
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
jae
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
push
add
add
adc
sbb
and
xor
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
sbb
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
pop
or
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
or
mov
or
dec
add
add
add
add
or
lods
add
add
add
add
add
or
pushf
add
add
add
add
add
or
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
lds
or
and
add
add
or
in
or
adc
add
add
or
aad
or
xor
add
add
or
cmc
add
add
add
add
or
int
or
sub
add
add
or
in
add
add
add
add
or
fld
or
cmp
add
add
or
std
add
add
add
add
add
add
add
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
or
jae
or
repz
add
add
add
add
add
add
add
add
add
or
dec
add
add
add
add
add
add
add
add
add
add
add
add
or
imul
add
add
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
add
add
add
add
add
add
add
add
or
jnp
or
sti
add
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
or
ja
or
test
or
str
add
add
add
add
add
or
dec
add
add
add
add
add
add
add
add
add
add
add
add
or
outs
add
add
add
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
add
add
add
add
add
add
add
add
or
jg
or
inc
or
inc
or
add
pop
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
pop
pop
pop
pop
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
sldt
adc
adc
adc
adc
adc
adc
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
or
or
or
or
or
or
push
push
push
(bad)
(bad)
(bad)
movups
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
push
push
push
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
sbb
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
add
add
add
pusha
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
rol
cmp
inc
add
rol
cmp
inc
add
rol
cmp
inc
add
rol
cmp
inc
add
rol
cmp
inc
add
inc
add
and
ins
outs
arpl
imul
inc
add
scas
inc
add
inc
add
inc
add
jae
popa
ins
and
sub
inc
push
push
cmp
dec
outs
je
outs
outs
jne
push
outs
jb
and
arpl
jo
gs
and
ins
ins
and
jae
jb
jb
outs
jb
add
ins
loopne
add
add
add
add
add
add
add
add
out
inc
add
int
add
inc
add
inc
add
inc
add
imul
outs
and
arpl
je
outs
outs
add
add
jb
js
je
jb
arpl
jae
add
jae
arpl
outs
add
add
add
add
add
outs
je
ins
and
jb
jb
add
or
dec
dec
push
push
and
jb
jb
or
add
push
dec
dec
inc
and
jb
jb
or
add
add
inc
dec
dec
and
jb
jb
or
add
xor
xor
or
and
jo
imul
and
jae
ins
popa
fs
and
je
ins
jo
and
ins
outs
popa
and
and
jb
outs
je
ins
and
jb
jb
and
arpl
jb
arpl
or
gs
jae
and
outs
je
arpl
push
jo
imul
daa
jae
jae
jo
outs
jb
and
ins
and
jb
ins
outs
jb
and
outs
jb
popa
je
outs
outs
cs
add
add
xor
xor
je
gs
jo
and
jne
and
dec
dec
and
fs
outs
ins
and
jae
popa
jae
gs
bound
fs
imul
imul
and
imul
je
outs
outs
or
jae
imul
gs
popa
and
and
and
jne
and
jo
imul
and
and
and
jae
and
gs
jns
je
and
jae
ins
je
outs
data16
ins
ins
imul
dec
push
dec
dec
sub
imul
ins
jb
and
outs
arpl
outs
and
outs
ins
and
outs
popa
je
jbe
and
outs
jae
jb
arpl
and
and
outs
ins
and
dec
popa
imul
push
xor
xor
outs
je
outs
outs
jne
push
arpl
outs
jb
ins
outs
arpl
and
outs
jb
popa
je
outs
outs
or
add
add
xor
xor
je
gs
jo
and
imul
imul
and
push
and
jb
and
outs
and
arpl
or
jae
imul
gs
popa
and
and
and
jne
and
jo
imul
cs
xor
xor
push
push
and
je
imul
imul
add
xor
cmp
outs
popa
bound
je
and
imul
and
popa
jo
or
add
add
xor
aaa
or
outs
je
outs
outs
jne
push
arpl
outs
jb
ins
outs
ja
outs
and
imul
je
outs
outs
or
add
xor
ss
outs
je
outs
outs
jne
push
arpl
outs
jb
jae
imul
imul
imul
add
push
xor
xor
jo
jb
and
jb
jne
ins
and
outs
arpl
outs
and
ins
ins
or
push
xor
xor
or
and
outs
jne
push
arpl
outs
jb
pop
outs
outs
gs
je
popa
je
js
je
je
bound
or
add
add
xor
cmp
outs
popa
bound
je
and
outs
and
outs
jae
ins
and
imul
add
push
xor
cmp
outs
gs
arpl
and
popa
jo
gs
outs
jb
or
add
add
xor
aaa
or
outs
gs
arpl
and
ins
je
je
jb
popa
and
imul
jb
outs
jb
or
add
add
xor
ss
outs
je
outs
outs
jne
push
arpl
outs
jb
je
jb
popa
and
popa
or
push
push
jo
ins
imul
and
jae
jb
jno
gs
gs
and
outs
je
ins
and
je
jb
imul
je
imul
outs
jne
jne
ins
and
jns
or
gs
jae
and
outs
je
arpl
push
jo
imul
daa
jae
jae
jo
outs
jb
and
ins
and
jb
ins
outs
jb
and
outs
jb
popa
je
outs
outs
cs
push
xor
cmp
outs
je
outs
outs
jne
push
arpl
outs
jb
outs
jbe
jb
outs
ins
outs
je
or
push
xor
cmp
outs
je
outs
outs
jne
push
arpl
outs
jb
popa
jb
jne
outs
je
or
push
xor
xor
ins
outs
popa
je
outs
and
imul
jo
jb
and
je
ins
outs
popa
fs
add
arpl
jae
data16
push
imul
sub
and
outs
je
ins
and
jb
jb
add
add
or
add
cs
jb
addr16
ins
and
ins
and
imul
outs
add
push
jne
je
ins
and
jb
jb
or
push
jb
addr16
ins
cmp
add
add
arpl
gs
outs
imul
add
inc
add
dec
add
dec
add
add
add
add
add
add
add
outs
fs
outs
imul
add
jae
jb
add
jae
gs
popa
ins
jne
add
jae
gs
popa
ins
jne
add
jae
ins
ins
outs
arpl
add
add
add
jne
ins
add
add
add
add
outs
jne
ins
sub
add
add
add
add
push
add
add
adc
add
add
add
add
inc
inc
add
xor
add
add
and
push
pop
pop
or
aaa
xor
push
push
pop
add
and
or
add
add
pusha
push
add
js
js
js
or
or
add
add
or
add
or
or
pop
or
add
dec
ins
ins
gs
ins
and
je
and
jno
outs
arpl
add
inc
imul
jns
outs
outs
je
gs
jo
jns
inc
jne
arpl
outs
and
je
imul
outs
je
add
add
dec
outs
and
imul
jbe
imul
inc
imul
je
outs
and
add
add
jae
jne
arpl
fs
fs
outs
arpl
popa
jbe
imul
gs
ins
je
je
outs
and
add
add
inc
outs
ins
popa
imul
jb
add
add
outs
imul
jo
jo
add
and
outs
jns
ins
imul
gs
fs
and
ins
and
jae
gs
add
add
jbe
ins
imul
add
add
and
popa
arpl
ins
gs
outs
outs
and
imul
and
and
add
dec
outs
popa
jo
jb
jo
imul
dec
and
outs
je
outs
ins
and
gs
je
outs
outs
add
and
outs
jns
outs
jo
outs
and
ins
gs
push
outs
outs
and
outs
jns
outs
jo
outs
and
ins
gs
imul
gs
add
add
jbe
ins
imul
outs
je
add
add
and
imul
jns
add
je
popa
and
arpl
jns
dec
outs
and
arpl
fs
arpl
add
jo
outs
jo
jb
ins
imul
imul
je
add
jae
jne
arpl
fs
arpl
push
outs
imul
outs
and
jb
jb
add
inc
popa
and
fs
jae
add
jb
imul
fs
imul
outs
je
outs
outs
jne
push
arpl
add
add
jae
jne
arpl
je
ins
jo
jb
jb
ins
jns
jne
popa
jbe
imul
add
dec
outs
and
imul
gs
gs
add
and
ins
and
arpl
jo
outs
jb
inc
js
arpl
outs
jb
popa
je
gs
outs
jb
add
inc
jb
and
je
je
outs
and
add
add
and
arpl
fs
arpl
outs
jb
popa
fs
jae
add
add
jo
je
outs
jne
jo
je
gs
outs
jb
add
je
jb
jne
je
and
outs
arpl
outs
and
ins
ins
add
add
and
arpl
jo
outs
arpl
jae
dec
outs
and
arpl
imul
and
arpl
jns
add
dec
jo
jb
je
outs
outs
and
je
jo
jb
imul
and
jb
jb
add
add
jae
push
push
inc
sub
push
push
inc
sub
add
add
push
dec
dec
inc
dec
inc
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
add
add
add
jle
push
inc
add
add
dec
jae
jb
arpl
jae
jb
gs
je
jb
push
jb
jae
outs
je
add
dec
inc
push
dec
inc
dec
xor
add
add
nop
cmp
call
inc
outs
ins
jo
gs
and
push
arpl
outs
arpl
outs
jb
add
add
inc
ins
popa
jae
and
gs
jb
push
jae
jb
jo
outs
jb
add
add
and
jae
and
popa
jae
and
jb
jns
add
and
jae
and
popa
jae
and
arpl
jo
outs
jb
popa
je
sub
and
and
arpl
jo
outs
jb
add
add
outs
arpl
and
popa
je
arpl
je
jb
popa
and
popa
jb
daa
add
popa
outs
popa
gs
arpl
and
jo
and
outs
jae
jb
arpl
and
gs
je
jb
add
pusha
jbe
arpl
and
popa
jae
and
jo
and
outs
jae
jb
arpl
and
gs
je
jb
add
add
pusha
jbe
arpl
and
jo
and
outs
jae
jb
arpl
and
gs
je
jb
add
pusha
fs
popa
ins
imul
imul
jne
je
jb
outs
jb
daa
add
add
pusha
fs
popa
ins
imul
imul
and
jb
daa
add
pusha
gs
je
jb
jbe
popa
jae
and
jo
and
outs
jae
jb
arpl
and
gs
je
jb
add
push
je
jb
arpl
jns
arpl
jae
jb
arpl
and
gs
je
jb
add
add
popa
outs
popa
gs
arpl
and
je
jne
je
jb
imul
daa
add
add
pusha
ins
popa
outs
popa
gs
arpl
and
outs
jae
jb
arpl
and
gs
je
jb
add
add
ins
popa
arpl
outs
je
fs
gs
pop
pop
and
outs
jae
jb
daa
add
add
pusha
jo
popa
arpl
outs
je
fs
gs
and
outs
jae
jb
daa
add
pusha
outs
ins
outs
imul
jae
addr16
add
and
gs
pop
pop
add
add
outs
gs
pop
add
pusha
ins
outs
arpl
and
je
bound
arpl
jae
jb
arpl
and
outs
jae
jb
daa
add
outs
arpl
and
je
bound
add
push
push
dec
add
add
dec
add
fs
jb
je
jb
imul
outs
jo
and
outs
jae
jb
arpl
and
outs
jae
jb
daa
add
pusha
gs
je
jb
jbe
popa
jae
and
outs
jae
jb
arpl
and
gs
je
jb
add
pusha
gs
je
jb
fs
jb
arpl
and
gs
je
jb
add
push
je
jb
arpl
jae
jb
arpl
and
gs
je
jb
add
add
pusha
jbe
jb
jne
ins
and
jo
popa
arpl
outs
je
ins
popa
jo
add
pusha
jbe
arpl
and
popa
jae
and
outs
jae
jb
arpl
and
gs
je
jb
add
arpl
and
je
jne
je
jb
imul
daa
add
add
pusha
jbe
arpl
and
outs
jae
jb
arpl
and
gs
je
jb
add
add
arpl
popa
jb
fs
gs
outs
and
jae
jb
arpl
daa
add
add
pusha
fs
jne
je
arpl
jae
jb
arpl
and
outs
jae
jb
daa
add
add
arpl
and
gs
outs
and
jae
jb
arpl
daa
add
add
pusha
jbe
popa
jae
and
je
jne
je
jb
add
pusha
jae
jb
outs
addr16
add
add
pusha
ins
outs
arpl
and
popa
je
arpl
addr16
jb
daa
add
add
pusha
je
jo
outs
data16
add
add
pusha
jbe
popa
ins
ins
daa
add
bound
ins
gs
add
add
data16
bound
add
add
add
jl
add
es
cmp
add
cmp
add
sub
add
jl
add
es
jl
add
pop
add
add
add
sub
add
sub
add
ds
add
cmp
add
cmp
add
and
add
add
add
add
add
add
sub
add
sub
add
sub
jo
jb
je
jb
add
add
add
and
add
and
add
cmp
add
ds
cmp
fs
gs
add
outs
gs
add
add
jne
popa
ins
imul
pop
jb
jae
jb
arpl
pop
pop
jo
jb
xor
pop
pop
arpl
popa
ins
ins
add
add
popaw
jae
arpl
ins
add
pop
pop
je
imul
add
jae
arpl
ins
add
add
jo
jae
popa
ins
add
add
pop
pop
arpl
ins
add
bound
gs
add
add
add
add
add
adc
inc
add
inc
add
add
in
add
loopne
inc
add
add
int3
add
rol
add
inc
add
sti
inc
add
sti
inc
add
sti
inc
add
inc
add
inc
add
add
cwde
add
xchg
add
nop
add
mov
inc
add
add
js
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
inc
add
add
xor
inc
add
add
sub
inc
add
add
and
inc
add
add
sbb
inc
add
add
adc
inc
add
add
or
inc
add
add
add
inc
add
add
hlt
inc
call
inc
aam
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
fdivr
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
sbb
inc
add
inc
in
inc
add
std
inc
add
std
inc
add
std
inc
add
inc
add
add
inc
add
cld
inc
add
cld
inc
add
cld
inc
add
inc
add
inc
add
cld
inc
add
rol
inc
gs
jb
arpl
jae
imul
popa
je
outs
outs
add
je
jae
jb
bound
arpl
outs
jb
popa
je
outs
outs
inc
add
add
je
popa
jae
inc
arpl
gs
outs
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outs
js
add
inc
push
xor
cs
dec
dec
add
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
test
test
test
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
(bad)
inc
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
add
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
(bad)
inc
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
(bad)
inc
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
jnp
jge
jg
add
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
(bad)
dec
cmp
cmp
add
add
fs
dec
dec
dec
dec
and
and
jns
add
das
fs
jns
add
add
push
dec
add
inc
dec
add
inc
arpl
bound
add
add
dec
outs
jbe
ins
bound
add
add
dec
arpl
gs
push
gs
gs
bound
add
add
addr16
je
add
ins
jns
add
add
outs
add
add
inc
jo
imul
arpl
add
inc
bound
popa
jb
add
add
dec
popa
outs
jne
jb
add
add
jbe
dec
arpl
gs
inc
jne
add
ins
add
outs
add
jns
inc
jo
add
jb
inc
bound
dec
popa
outs
add
je
jb
popa
jns
add
add
imul
jne
jae
popa
jns
add
add
outs
gs
popa
jns
add
push
jne
jae
popa
jns
dec
outs
outs
fs
jns
add
outs
fs
jns
add
je
inc
jb
add
add
add
add
outs
add
outs
add
dec
dec
push
push
and
xor
push
dec
inc
dec
add
xor
dec
dec
inc
add
add
and
inc
add
add
and
inc
dec
add
push
jne
dec
outs
outs
push
jne
push
gs
push
push
popa
je
add
dec
popa
outs
inc
bound
jb
jo
dec
popa
jns
jne
dec
jne
inc
jne
push
gs
arpl
jbe
arpl
add
add
add
add
add
add
add
adc
add
test
xor
or
sub
cmp
add
add
xor
push
push
mov
add
and
or
pusha
push
or
pop
js
jo
jo
or
add
or
or
pop
or
add
add
add
dec
add
add
inc
add
inc
add
add
add
inc
push
or
ret
in
ror
push
and
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
pusha
and
or
add
add
add
push
inc
add
add
add
inc
add
(bad)
(bad)
inc
add
add
add
or
add
add
push
inc
add
add
add
push
inc
add
push
inc
add
cmovb
add
add
jl
inc
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
enter
cwde
and
(bad)
(bad)
(bad)
inc
add
add
add
sbb
inc
add
add
add
inc
add
cmovb
cwde
and
sbb
inc
add
into
add
in
and
add
add
mov
inc
add
add
add
add
add
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
scas
inc
add
add
add
scas
inc
add
add
add
add
ror
add
cmovb
add
add
jl
inc
add
add
add
(bad)
(bad)
inc
add
add
add
dec
scas
inc
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
cmc
rol
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
mov
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
mov
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
rol
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
inc
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
ret
inc
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
les
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
lds
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
mov
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
retf
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
push
int3
inc
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
call
aam
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
inc
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
jecxz
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
in
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
jmp
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
cli
inc
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
inc
add
(bad)
(bad)
inc
add
add
inc
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
sbb
add
add
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
call
inc
add
inc
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
call
inc
add
inc
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
mov
cmp
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
jmp
inc
add
cmp
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
cmp
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
inc
inc
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
push
inc
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
push
inc
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
push
inc
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
mov
cmps
inc
add
add
int3
sbb
add
mov
add
add
add
add
add
sbb
add
add
add
hlt
sbb
add
add
pop
add
stos
pop
add
rcl
add
pop
add
in
add
not
add
push
sbb
add
sbb
add
sbb
add
sbb
add
add
pop
sbb
add
add
add
sbb
add
sbb
add
sbb
add
add
dec
sbb
add
push
sbb
add
sbb
add
add
sbb
add
add
add
jb
add
mov
add
mov
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
push
sbb
add
add
ins
sbb
add
add
mov
add
sahf
sbb
add
add
(bad)
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
sub
add
cmp
add
push
sbb
add
add
js
add
mov
add
cwde
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
ss
add
add
pusha
sbb
add
sbb
add
sbb
add
add
loopne
add
cli
sbb
add
sbb
add
xor
add
add
add
sldt
adc
add
adc
add
or
add
push
add
add
add
ficomp
add
add
add
pop
add
imul
jo
imul
inc
gs
popa
jae
inc
jb
outs
jb
add
add
ins
je
inc
jns
gs
outs
push
imul
mov
ins
jae
jb
outs
inc
add
mov
gs
outs
arpl
fs
arpl
ins
outs
je
add
add
je
jb
arpl
fs
jae
add
icebp
add
fs
imul
add
dec
add
gs
gs
jne
arpl
add
add
imul
jae
jne
arpl
add
add
imul
outs
jne
arpl
add
add
fs
gs
jne
arpl
add
add
outs
fs
gs
jne
arpl
add
add
je
outs
fs
gs
popa
outs
fs
gs
add
lsl
fs
xor
dec
gs
add
inc
add
outs
jae
dec
popa
outs
fs
add
jne
xor
inc
imul
inc
jb
popa
je
push
outs
outs
ins
push
xor
popa
jo
push
stos
add
je
jne
jb
outs
je
jb
arpl
jae
add
push
dec
inc
dec
xor
cs
ins
add
hlt
add
gs
outs
imul
add
xor
cs
ins
add
inc
inc
push
push
xor
cs
ins
add
mov
jo
jb
add
and
inc
gs
jb
arpl
jae
gs
jo
add
jo
ins
ins
outs
arpl
outs
add
je
outs
ins
ins
popa
outs
fs
imul
dec
gs
jo
jb
popa
je
add
push
add
imul
jb
add
gs
inc
jb
je
arpl
push
arpl
outs
add
add
jbe
inc
jb
je
arpl
push
arpl
outs
add
fld
inc
outs
je
jb
jb
je
arpl
push
arpl
outs
add
push
add
imul
ins
ins
outs
arpl
add
push
gs
ins
ins
outs
arpl
cmps
add
popa
jo
imul
push
gs
imul
outs
arpl
jae
add
inc
jne
jb
outs
je
jb
arpl
jae
ds
outs
push
gs
js
gs
imul
gs
add
push
outs
push
gs
js
gs
imul
gs
rol
dec
jae
bound
addr16
jb
jae
outs
je
stc
add
je
outs
fs
gs
popa
outs
fs
gs
add
and
ins
gs
add
inc
js
je
jb
arpl
jae
lea
jb
je
inc
imul
je
je
dec
popa
outs
fs
add
hlt
add
je
outs
fs
gs
imul
add
jp
push
imul
outs
dec
jne
je
inc
jns
add
inc
outs
outs
jae
ins
gs
push
add
xchg
add
je
outs
outs
jae
ins
gs
outs
fs
push
fs
imul
ins
jae
gs
popa
ins
jne
add
add
ins
jae
ins
ins
outs
arpl
add
push
gs
popa
ins
jne
add
add
ins
jae
jb
gs
add
je
jb
outs
arpl
fs
outs
arpl
ins
outs
je
add
add
je
popa
jae
inc
jb
outs
jb
add
inc
jne
jb
outs
je
push
dec
add
inc
add
jne
push
inc
jne
data16
add
fild
push
gs
imul
gs
add
add
je
popa
outs
fs
gs
outs
jne
je
add
add
je
imul
cmp
inc
gs
je
jb
jne
dec
outs
outs
inc
add
push
outs
ja
outs
add
inc
jb
gs
outs
jbe
jb
outs
ins
outs
je
je
imul
add
je
outs
jbe
jb
outs
ins
outs
je
je
imul
inc
jb
gs
outs
jbe
jb
outs
ins
outs
je
je
imul
add
je
outs
jbe
jb
outs
ins
outs
je
je
imul
push
add
gs
push
gs
outs
jb
popa
outs
arpl
outs
jne
je
jb
data16
je
imul
je
add
inc
gs
jns
je
ins
push
imul
ins
gs
imul
outs
imul
inc
jb
je
arpl
push
arpl
outs
inc
outs
fs
jo
outs
inc
outs
jne
je
pop
add
je
push
dec
outs
outs
add
inc
gs
inc
push
add
adc
inc
gs
inc
dec
inc
push
add
fild
dec
jae
popa
ins
imul
add
inc
outs
ins
jo
jb
push
je
imul
add
ins
jo
jb
push
je
imul
add
je
outs
jbe
jb
outs
ins
outs
je
popa
jb
popa
bound
add
je
inc
outs
outs
jae
ins
gs
add
inc
outs
outs
jae
ins
gs
jne
jo
je
push
add
mov
jb
je
inc
outs
outs
jae
ins
gs
add
add
je
je
dec
popa
outs
fs
add
js
inc
jb
popa
je
inc
imul
gs
outs
arpl
gs
outs
outs
inc
add
loope
dec
inc
dec
popa
jo
je
imul
add
popa
jo
je
imul
add
je
je
imul
inc
add
inc
add
je
je
imul
push
add
int
push
gs
outs
fs
inc
imul
add
out
add
add
add
add
add
add
add
inc
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lods
inc
add
lock
add
add
add
aas
inc
push
pop
arpl
pop
gs
outs
jb
inc
add
add
hlt
out
inc
add
lock
add
add
add
aas
inc
push
je
jo
pop
imul
hlt
out
inc
add
lock
add
add
add
aas
inc
push
bound
pop
popa
ins
ins
outs
arpl
je
inc
inc
add
lock
add
add
add
aas
inc
push
gs
gs
imul
inc
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
or
add
ins
add
add
add
add
add
add
add
sbb
add
jb
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
cmps
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
or
add
or
add
or
add
add
add
dec
out
mov
jne
add
jae
add
hlt
out
inc
add
out
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
add
clc
cmc
inc
add
add
add
cmc
inc
add
add
add
add
add
cmc
inc
add
add
add
hlt
inc
add
add
add
add
mov
inc
add
add
add
add
add
add
inc
add
add
add
repz
add
add
add
repz
add
add
add
add
fs
add
add
add
add
add
add
repnz
add
add
add
add
add
add
add
icebp
inc
add
add
add
inc
add
add
lock
add
add
loopne
inc
add
add
add
lock
add
add
add
lock
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
inc
add
test
(bad)
(bad)
inc
add
add
cli
inc
add
add
add
cli
inc
add
inc
add
cli
inc
add
stc
inc
add
stc
inc
add
stc
inc
add
stc
inc
add
stc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
clc
inc
add
clc
inc
add
clc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
clc
inc
add
clc
inc
add
inc
add
inc
add
test
fdiv
inc
add
inc
add
test
cwde
test
ins
test
sub
add
add
add
pop
add
add
add
or
add
lahf
outs
inc
add
outs
inc
add
outs
inc
add
outs
inc
add
outs
inc
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
arpl
addr16
ins
outs
outs
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
arpl
addr16
ins
outs
outs
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
sub
add
add
movs
add
add
jns
and
add
add
add
cmps
fild
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
inc
add
add
add
mov
add
cmp
add
inc
inc
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficomp
and
pop
fisubr
xor
adc
add
xor
inc
add
add
(bad)
inc
add
add
add
add
add
cmp
inc
add
cs
add
cs
add
cs
add
cs
add
add
add
add
add
xor
mov
or
test
inc
add
inc
add
inc
add
add
add
inc
add
sub
add
add
add
add
and
add
add
add
mov
push
inc
add
add
add
or
add
or
add
or
add
or
add
or
add
inc
add
or
add
or
add
or
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
or
add
or
add
or
add
inc
add
or
add
or
add
or
add
or
hlt
or
call
or
fmul
inc
add
or
enter
mov
inc
add
add
add
add
add
add
add
inc
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
jg
jg
jg
adc
inc
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
cld
(bad)
push
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
xor
add
add
lock
(bad)
inc
add
add
push
add
push
add
xor
(bad)
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
mov
add
add
add
add
add
add
add
add
cli
or
add
add
add
add
or
push
ret
cmovo
add
add
add
add
adc
add
add
add
adc
add
add
add
mov
add
add
add
leave
sbb
add
ret
inc
and
sahf
mov
sub
inc
rcr
and
sbb
add
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
dec
js
rol
(bad)
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
(bad)
inc
jmp
aam
imul
loope
jp
iret
inc
gs
(bad)
xchg
push
cmps
scas
mov
or
add
cmps
xchg
cmp
xor
dec
cmps
in
cmp
sahf
xchg
pop
call
lock
mov
popa
sar
mov
fsub
stos
xchg
clc
repz
mov
sub
fwait
xchg
and
and
add
int3
int
int3
int3
int3
int3
int3
int3
sti
aas
jno
or
mov
mov
cmp
dec
lea
aas
ret
shr
mov
icebp
aas
ror
and
cmps
out
aas
inc
cmps
mov
ins
scas
add
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
(bad)
loop
mov
jp
popa
push
pop
sar
jl
mov
das
lea
mov
inc
aas
and
movs
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
mov
aaa
fld
cmp
jno
shl
(bad)
out
dec
nop
pop
cmp
fisub
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
and
dec
dec
gs
std
or
in
ficomp
frstor
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
call
add
add
add
add
add
js
add
xchg
add
add
add
add
add
add
add
add
add
add
add
ins
add
add
(bad)
(bad)
call
add
add
add
add
add
ja
add
xchg
add
add
add
repnz
add
add
add
add
add
add
ins
add
add
add
add
add
add
add
or
add
jo
add
nop
add
adc
add
test
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
lock
add
add
or
add
and
add
cmp
add
add
add
add
add
add
add
push
add
sub
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cwde
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
enter
add
add
add
add
add
add
fadd
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
add
add
clc
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
pop
add
add
add
add
in
add
add
add
fsub
add
add
add
add
add
add
in
add
add
add
sub
add
sub
add
add
add
add
add
add
or
add
add
add
add
add
add
add
in
add
add
add
lock
add
add
add
add
add
xchg
add
add
add
add
add
add
add
in
add
add
add
mov
add
add
add
add
add
add
add
pop
add
add
add
sub
add
adc
add
and
add
add
and
add
add
inc
add
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
aad
lods
(bad)
sar
cmps
(bad)
sar
cmps
(bad)
sar
cmps
(bad)
sar
cmps
(bad)
sar
cmps
(bad)
sar
cmps
(bad)
sar
cmps
(bad)
fcmovb
mov
aam
sar
retf
into
mov
call
retf
into
mov
call
rcl
(bad)
fcmovu
(bad)
(bad)
(bad)
fdivr
jecxz
(bad)
call
call
out
call
les
call
pop
or
xchg
pop
or
cdq
pop
or
call
call
arpl
call
lods
mov
out
out
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
xlat
lds
jmp
pop
add
xchg
push
add
call
call
pusha
add
pushf
pop
add
popf
pop
add
shr
(bad)
jmp
jmp
jmp
call
lds
jmp
popa
add
xchg
push
add
fwait
pop
add
call
pop
add
pushf
pop
add
popf
pop
add
shr
(bad)
jmp
(bad)
call
les
jmp
imul
(bad)
jle
sub
imul
dec
pop
or
popf
pop
add
lds
out
(bad)
out
in
in
(bad)
(bad)
aad
loop
(bad)
aam
mov
push
xor
outs
push
sub
jmp
cmp
mov
jb
call
pop
add
les
out
(bad)
in
out
(bad)
mov
shl
retf
mov
push
(bad)
mov
jle
jmp
and
call
push
adc
mov
sub
mov
inc
scas
mov
lock
jmp
fcmovnb
mov
aad
mov
inc
mov
push
call
ja
call
push
adc
call
mov
push
hlt
hlt
push
out
jmp
iret
mov
call
retf
ret
mov
dec
lods
jle
ret
inc
fwait
pusha
(bad)
mov
mov
mov
push
add
cwde
pop
add
lds
repz
icebp
in
jmp
mov
(bad)
call
fcom
call
leave
sar
mov
xchg
call
mov
call
mov
dec
cmps
jae
les
imul
xchg
pop
(bad)
mov
ret
cmc
cmc
cmc
(bad)
clc
hlt
in
push
retf
jge
in
faddp
jmp
(bad)
iret
(bad)
(bad)
iret
call
(bad)
mov
aad
mov
aam
scas
call
ret
rol
stos
dec
mov
popf
dec
mov
popf
jmp
fcmove
(bad)
cli
cli
cli
(bad)
cld
cli
clc
(bad)
cli
in
sar
clc
repnz
(bad)
into
(bad)
fcmovnbe
aam
(bad)
fdivr
(bad)
fdivr
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fcos
fstp
fcos
fstp
fcos
fstp
fcos
(bad)
fcos
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
(bad)
fcmovbe
leave
(bad)
call
call
fistp
loope
rcr
fcmovnbe
(bad)
lahf
fxch
ret
lahf
fmul
rcr
into
ret
lahf
fcmovnbe
leave
lahf
xlat
into
leave
lahf
xlat
into
leave
lahf
fcom
int
loop
rcr
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
add
add
add
add
add
add
and
add
add
adc
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
hlt
loope
sbb
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
iret
mov
cld
div
sbb
iret
mov
movs
dec
mov
movs
dec
mov
movs
dec
mov
movs
dec
mov
movs
dec
mov
movs
dec
mov
movs
dec
mov
movs
dec
mov
movs
dec
mov
movs
dec
mov
movs
dec
mov
movs
dec
mov
movs
dec
mov
movs
dec
mov
movs
(bad)
fmulp
mov
call
retf
(bad)
int
call
retf
iret
(bad)
rol
sar
enter
mov
aad
(bad)
call
int3
(bad)
call
mov
dec
(bad)
ror
(bad)
call
ror
(bad)
fcompp
aad
fcompp
(bad)
(bad)
fcompp
(bad)
(bad)
fcompp
(bad)
(bad)
(bad)
xlat
jmp
fcmovnu
jmp
(bad)
jmp
fstp
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
fstp
jmp
(bad)
call
enter
mov
mov
fcmovnu
(bad)
dec
retf
leave
dec
mov
dec
enter
mov
dec
leave
(bad)
dec
leave
(bad)
dec
mov
dec
mov
call
iret
into
call
rcl
call
aam
(bad)
(bad)
fdivr
fcmovnu
(bad)
fcmovnu
(bad)
loope
loope
in
in
in
(bad)
in
in
in
(bad)
in
in
in
push
lock
repnz
repnz
icebp
icebp
push
lock
out
out
out
(bad)
fcmove
(bad)
call
mov
mov
call
pop
adc
xchg
pop
adc
xchg
pop
adc
xchg
pop
adc
xchg
pop
adc
xchg
pusha
adc
cwde
bound
call
popa
adc
xchg
popa
ud0
ud0
data16
fwait
gs
pushf
data16
sahf
push
jmp
loop
(bad)
jmp
jmp
in
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
fxch
(bad)
call
mov
mov
jmp
pop
add
cdq
pop
add
call
call
pop
add
popf
pop
add
sahf
pop
add
pushf
pop
add
pushf
pop
add
popf
pop
add
mov
arpl
jmp
pop
add
sahf
pusha
add
mov
jbe
(bad)
fcmovu
(bad)
jecxz
jecxz
jecxz
jecxz
jmp
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
call
mov
mov
jmp
data16
cdq
pop
add
cwde
pop
add
xchg
pop
add
cwde
pop
add
cdq
pop
add
fwait
pop
add
pushf
pop
add
call
call
add
lahf
popa
add
sahf
pusha
add
pushf
pop
add
pushf
pop
add
mov
jne
(bad)
(bad)
fdivrp
out
out
out
out
jmp
(bad)
jmp
jmp
jmp
(bad)
call
int
call
mov
mov
jmp
push
add
xchg
pop
add
xchg
push
add
xchg
push
add
cwde
pop
add
call
push
push
call
pop
add
popf
pop
add
sahf
pusha
add
popf
pop
add
fwait
pop
add
fwait
pop
add
sahf
pusha
add
mov
(bad)
jmp
out
jmp
out
(bad)
jmp
(bad)
jmp
(bad)
call
out
call
int3
(bad)
call
mov
mov
jmp
push
jmp
push
add
xchg
push
add
xchg
push
add
cwde
pop
add
call
jmp
pop
call
add
popf
pop
add
sahf
pop
add
popf
pop
add
fwait
pop
add
fwait
pop
add
sahf
pusha
add
mov
(bad)
jmp
jecxz
jmp
loop
(bad)
call
jmp
(bad)
jmp
(bad)
call
out
call
retf
aam
lods
call
les
jmp
add
mov
pop
add
xchg
push
add
xchg
push
add
cwde
pop
add
mov
cmp
dec
pop
add
fwait
pop
add
sahf
pop
add
lahf
popa
add
sahf
pop
add
pushf
pop
add
popf
pop
add
mov
jbe
jmp
loope
(bad)
call
out
(bad)
jmp
(bad)
jmp
jmp
jmp
(bad)
call
retf
sar
mov
jmp
outs
add
mov
bound
call
dec
adc
xchg
pop
add
call
dec
pop
add
cwde
pop
add
(bad)
push
add
mov
call
pop
add
pushf
pop
add
lahf
popa
add
mov
in
(bad)
jmp
jmp
jmp
(bad)
out
out
out
(bad)
in
in
in
(bad)
jmp
jmp
jmp
call
retf
(bad)
call
mov
mov
jmp
adc
cmps
jo
jmp
push
call
jmp
sbb
call
inc
inc
dec
add
cmp
push
pop
call
pop
sub
mov
call
pusha
add
mov
jmp
push
repz
icebp
icebp
push
lock
in
jmp
sar
les
jmp
out
call
retf
(bad)
mov
mov
push
test
push
jnp
jmp
push
push
(bad)
ds
and
ja
pop
call
ud0
jo
inc
add
ins
inc
add
call
jne
(bad)
jmp
lock
out
out
out
push
icebp
icebp
jmp
fcmovbe
(bad)
mov
mov
rcl
call
int3
(bad)
mov
mov
push
mov
mov
cmp
mov
cmp
mov
xor
inc
inc
inc
inc
add
inc
add
dec
or
(bad)
jnp
dec
call
fwait
jmp
outs
and
cdq
addr16
jmp
push
call
pop
add
mov
call
out
(bad)
out
out
out
push
repnz
call
mov
ret
inc
pushf
cmp
call
(bad)
call
shr
(bad)
mov
push
(bad)
mov
nop
dec
(bad)
mov
xchg
inc
call
pop
call
sbb
inc
add
call
pop
inc
jmp
adc
movs
push
dec
xchg
and
lea
inc
pop
add
mov
jmp
push
repnz
icebp
icebp
push
cmc
cmc
(bad)
jmp
dec
xchg
ins
dec
mov
jmp
shl
(bad)
mov
pop
(bad)
mov
xchg
push
(bad)
mov
mov
ins
call
push
call
pop
pop
dec
cmp
inc
mov
add
call
xchg
(bad)
mov
inc
add
fwait
pop
add
mov
out
(bad)
out
out
out
(bad)
out
out
out
push
cmc
cmc
(bad)
in
loope
dec
call
into
cmps
test
in
in
in
(bad)
fmul
enter
mov
into
ret
enter
ret
mov
addr16
popf
arpl
rcr
inc
test
push
push
or
fwait
test
mov
xor
ins
dec
adc
inc
or
jb
sbb
jle
add
call
(bad)
jmp
jmp
repz
repnz
div
(bad)
out
in
call
mov
je
shr
(bad)
fxch
enter
mov
rol
mov
dec
cmps
jbe
(bad)
movs
jb
(bad)
mov
ins
dec
mov
call
xchg
cmp
mov
aas
jmp
dec
ud0
sbb
addr16
ud0
call
push
add
xchg
push
add
call
(bad)
out
out
out
push
div
push
cmc
cmc
(bad)
stc
stc
stc
push
out
(bad)
fldcw
jne
xlat
mov
(bad)
out
out
out
(bad)
(bad)
int
aam
mov
fstp
aad
retf
dec
lods
cmp
retf
stos
jp
retf
call
mov
call
pop
(bad)
mov
nop
dec
(bad)
mov
lea
mov
push
add
xchg
push
add
xchg
push
add
xchg
push
add
xchg
push
add
cdq
pop
add
sahf
jno
(bad)
jmp
push
repnz
stc
stc
stc
push
call
jb
loopne
ja
fdiv
icebp
(bad)
call
int3
mov
dec
mov
mov
shl
test
into
scas
cmp
mov
dec
mov
dec
test
pop
(bad)
mov
xchg
pop
(bad)
mov
xchg
pop
push
adc
xchg
push
add
xchg
push
add
xchg
push
add
cdq
pop
add
sahf
jno
(bad)
in
in
in
push
cmc
cmc
push
cmc
cmc
(bad)
cli
cli
cli
push
jmp
out
js
loopne
mov
repnz
call
int3
sar
ror
dec
shl
aam
xchg
call
mov
call
mov
call
mov
call
mov
dec
mov
dec
scas
cmp
mov
fs
popf
arpl
ret
inc
lahf
gs
lahf
gs
mov
cmp
push
pop
(bad)
out
out
out
push
div
push
div
(bad)
sti
sti
sti
push
in
(bad)
in
ret
in
les
in
mov
repz
jecxz
(bad)
fxch
mov
dec
shl
xlat
mov
cdq
call
mov
xchg
call
mov
nop
call
mov
call
mov
dec
test
inc
mov
outs
dec
movs
jo
enter
enter
enter
enter
leave
cmps
jno
mov
in
in
push
hlt
hlt
push
hlt
hlt
(bad)
cli
cli
cli
push
out
loope
cmc
rol
(bad)
jmp
xchg
push
repz
loope
(bad)
fxch
mov
dec
les
(bad)
fld
lahf
(bad)
fdivr
fwait
call
mov
xchg
call
mov
xchg
call
mov
(bad)
dec
mov
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
ja
out
out
out
push
div
push
div
(bad)
sti
sti
sti
(bad)
clc
bnd
(bad)
cli
jecxz
push
fbstp
jmp
loope
(bad)
fmul
mov
push
out
in
call
int
call
retf
(bad)
call
retf
ret
call
retf
(bad)
call
retf
ret
call
retf
ret
call
retf
ret
call
retf
ret
call
retf
ret
call
retf
ret
call
retf
ret
call
retf
ret
call
int3
ret
call
int3
ret
call
int3
(bad)
call
int3
(bad)
call
int3
(bad)
call
int
(bad)
(bad)
aam
std
std
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
std
(bad)
stc
div
(bad)
stc
div
(bad)
stc
div
(bad)
cld
cld
cld
jmp
loope
(bad)
fmul
mov
(bad)
call
call
jmp
(bad)
call
call
jmp
(bad)
call
call
jmp
(bad)
call
call
jmp
(bad)
call
call
jmp
(bad)
call
call
jmp
(bad)
call
call
call
jmp
out
(bad)
(bad)
xlat
(bad)
fmul
mov
call
rcl
call
ror
call
ror
call
ror
call
ror
call
ror
call
ror
call
iret
int3
call
iret
int3
call
into
retf
call
into
retf
call
into
retf
int
call
int
call
int
call
int
call
int
call
int
call
int
call
int
call
int
call
into
retf
into
retf
call
iret
int3
call
iret
int3
call
iret
int3
call
ror
call
ror
call
ror
(bad)
fcmovbe
sar
fxch
sar
call
hlt
push
cmc
repnz
repnz
push
out
in
push
in
call
(bad)
out
out
(bad)
jmp
fdivr
call
(bad)
jmp
(bad)
jmp
(bad)
into
jmp
aad
jmp
rol
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
iret
(bad)
rol
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
aam
jmp
aad
jmp
(bad)
(bad)
(bad)
sar
fcmovbe
int
fcmovnbe
int
(bad)
sar
jecxz
xlat
(bad)
fcmovbe
iret
(bad)
jmp
inc
mov
mov
mov
mov
cmp
mov
mov
cmp
mov
mov
cmp
mov
mov
cmp
mov
mov
cmp
mov
mov
cmp
mov
mov
cmp
mov
mov
cmp
mov
mov
cmp
sar
cmp
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
lock
stos
ffree
test
stos
ffree
test
stos
ffree
test
stos
ffree
test
stos
ffree
test
stos
ffree
test
stos
ffree
test
stos
ffree
test
stos
ffree
test
stos
ffree
test
stos
ffree
test
stos
ffree
test
stos
ffree
test
stos
ffree
test
stos
ffree
test
stos
ffree
test
stos
ffree
test
stos
ffree
test
stos
ffree
test
stos
ffree
test
stos
ffree
test
stos
ffree
test
stos
ffree
test
stos
stc
cmc
icebp
stos
int3
mov
movs
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
inc
mov
jmp
retf
mov
dec
sar
iret
les
dec
ret
mov
dec
ret
into
les
dec
les
dec
les
dec
ret
mov
dec
ret
mov
dec
ret
mov
dec
les
(bad)
fcom
int
fcom
int
fcom
int
(bad)
into
(bad)
fcom
int3
call
ror
call
ror
(bad)
fcom
int3
(bad)
fcom
int
(bad)
int
(bad)
into
(bad)
fcmovbe
into
(bad)
fcmovbe
iret
(bad)
fcmovnbe
iret
(bad)
fcmovnbe
iret
(bad)
fcmovnbe
iret
(bad)
fcmovnbe
iret
(bad)
fcmovnbe
iret
(bad)
fcmovnbe
iret
(bad)
fcmovbe
iret
(bad)
fcmovbe
iret
(bad)
fcmovbe
into
(bad)
(bad)
into
dec
ret
aad
mov
fcmovnb
lods
call
mov
(bad)
(bad)
(bad)
aam
(bad)
aam
(bad)
aam
(bad)
int
aad
enter
int
aad
leave
(bad)
fcom
retf
(bad)
fcom
int3
inc
ret
sar
(bad)
(bad)
(bad)
aam
(bad)
aam
(bad)
int
aad
enter
int
aad
leave
call
ror
(bad)
(bad)
int
(bad)
aad
(bad)
call
out
(bad)
call
call
call
(bad)
jmp
jmp
in
in
in
(bad)
in
in
in
(bad)
out
out
out
(bad)
out
out
out
push
lock
icebp
icebp
push
icebp
icebp
push
repnz
repz
repz
repz
repz
repnz
icebp
icebp
push
lock
out
out
out
(bad)
fcom
iret
call
shl
sar
aam
fcmovu
xlat
dec
leave
enter
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
mov
vcmpsd
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
enter
enter
enter
leave
enter
into
call
rcl
call
rcl
call
rcl
call
rcl
call
xlat
xlat
jmp
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
out
out
out
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
lock
lock
out
out
out
(bad)
out
out
out
call
ror
call
shl
sar
aam
mov
cmp
xchg
popa
sbb
xchg
pop
sbb
xchg
arpl
call
gs
nop
pop
sbb
cwde
addr16
xchg
popa
sbb
xchg
data16
xchg
arpl
call
data16
xchg
gs
cdq
push
pop
call
arpl
call
arpl
call
gs
lahf
outs
sbb
popf
ins
sbb
sahf
outs
sbb
mov
imul
ja
inc
mov
in
out
out
out
out
out
out
jmp
jmp
lock
lock
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
call
ror
call
shl
sar
sar
movs
mov
lahf
fs
fwait
pop
add
xchg
push
add
cwde
pop
add
xchg
push
add
call
call
add
call
call
pop
add
xchg
pop
add
fwait
pop
add
xchg
push
add
lahf
pusha
add
xchg
push
add
mov
push
add
mov
push
add
sahf
pop
add
call
call
push
add
mov
scas
test
in
in
in
in
in
in
out
out
jmp
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
call
shl
sar
sar
cmps
vpcmov
mov
pop
add
fwait
pop
add
xchg
pop
add
sahf
pop
add
xchg
push
add
lahf
popa
add
cwde
pop
add
lahf
popa
add
pushf
pop
add
sahf
pusha
add
sahf
pusha
add
sahf
pop
add
mov
pop
add
movs
addr16
fwait
pop
add
cmps
push
call
push
call
push
add
mov
imul
jmp
mov
jmp
in
jmp
out
jmp
out
jmp
out
(bad)
jmp
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
call
iret
int3
call
ret
fcmovnb
stos
call
mov
aam
cmps
(bad)
addr16
mov
popa
add
cwde
pop
add
xchg
push
add
call
call
push
add
call
call
pop
add
xchg
pop
add
fwait
pop
add
xchg
push
add
lahf
pusha
add
xchg
push
add
mov
push
add
mov
push
add
sahf
pop
add
call
call
pop
add
mov
mov
jmp
out
jmp
out
jmp
out
jmp
out
(bad)
jmp
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
(bad)
jmp
call
retf
call
shl
sar
aad
cmps
nop
imul
mov
addr16
sahf
popa
add
xchg
push
add
pushf
pop
add
xchg
push
add
popf
pop
add
xchg
push
add
popf
pop
add
call
call
pop
add
lahf
popa
add
fwait
pop
add
mov
pop
add
movs
push
add
movs
push
add
mov
bound
jmp
addr16
sahf
pop
add
test
add
mov
test
jmp
out
jmp
out
jmp
out
(bad)
jmp
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
call
out
aam
retf
call
shl
sar
(bad)
jmp
push
jmp
addr16
mov
push
add
call
call
push
add
call
call
fs
jg
dec
call
pop
dec
popa
add
xchg
push
add
mov
push
add
mov
pop
add
lahf
popa
add
pushf
pop
add
popf
pop
add
mov
pop
add
movs
data16
mov
test
jmp
in
jmp
in
jmp
in
(bad)
call
in
in
(bad)
jmp
jmp
jmp
(bad)
jmp
call
out
out
out
ror
retf
mov
lods
call
mov
xlat
jmp
ins
add
mov
push
add
cwde
pop
add
call
call
push
add
fwait
pop
add
cwde
pop
add
fwait
pop
add
mov
pop
inc
inc
dec
push
add
mov
push
add
mov
push
add
mov
pop
add
mov
pop
add
sahf
pusha
add
mov
pop
add
movs
push
test
in
in
in
in
in
in
in
in
out
out
in
in
in
(bad)
jmp
jmp
jmp
(bad)
call
call
out
out
out
ror
retf
mov
lods
call
mov
fdivr
test
imul
ins
add
mov
imul
call
add
xchg
push
add
call
call
push
add
call
call
adc
xchg
ja
call
popa
add
xchg
push
add
mov
push
add
mov
pop
add
lahf
popa
add
popf
pop
add
popf
pop
add
mov
pop
add
movs
addr16
mov
test
jmp
out
jmp
in
jmp
in
(bad)
call
in
in
(bad)
jmp
jmp
jmp
(bad)
jmp
call
out
out
out
aam
retf
dec
mov
lods
call
mov
fcos
test
outs
add
movs
ins
add
mov
imul
lahf
data16
cdq
pop
add
xchg
push
add
cdq
pop
add
xchg
push
add
cdq
pop
add
xchg
push
add
stos
ja
inc
notrack
push
inc
push
add
sahf
pusha
add
xchg
push
add
mov
push
add
mov
pop
add
lahf
pusha
add
pushf
pop
add
popf
pop
add
mov
pop
add
movs
data16
mov
stos
jmp
out
jmp
out
jmp
out
jmp
in
(bad)
jmp
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
(bad)
call
call
retf
dec
mov
scas
dec
mov
(bad)
stos
xchg
ins
jmp
outs
add
mov
ins
add
mov
pop
add
xchg
push
add
mov
dec
pop
add
xchg
push
add
test
popa
inc
add
jnp
arpl
call
call
push
add
pushf
popa
add
(bad)
push
add
cwde
pop
add
xchg
push
add
sahf
popa
add
popf
pop
add
sahf
pusha
add
mov
pop
add
movs
push
stos
(bad)
call
call
out
out
out
jmp
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
(bad)
call
iret
int3
dec
mov
scas
dec
mov
(bad)
stos
xchg
outs
jmp
outs
add
mov
ins
add
mov
bound
call
call
test
cwde
pop
pop
jmp
jmp
daa
daa
dec
pop
add
xchg
push
add
xchg
pop
add
or
call
add
gs
add
mov
call
pop
add
sahf
pop
add
cwde
pop
add
mov
mov
repnz
repnz
icebp
icebp
push
lock
lock
out
out
out
(bad)
out
out
out
(bad)
jmp
jmp
out
jmp
out
jmp
out
(bad)
jmp
iret
int3
dec
mov
scas
dec
mov
(bad)
lods
cwde
ja
mov
sub
scas
jge
jmp
je
jmp
push
add
sub
push
push
dec
call
call
sbb
pop
push
add
jp
add
jne
add
ins
inc
add
push
cs
jl
pop
jmp
mov
call
or
xchg
pop
add
lahf
popa
add
mov
pop
add
cmps
push
mov
repz
repz
repnz
repnz
icebp
icebp
push
lock
loope
dec
mov
stos
inc
mov
inc
mov
call
rcl
(bad)
jmp
dec
mov
scas
dec
mov
fdivr
scas
cdq
jns
mov
push
sub
mov
sub
lods
jl
jmp
push
add
sub
add
add
cmp
cmp
add
push
pop
jmp
adc
jmp
sbb
je
or
jle
pop
jmp
add
iret
xchg
or
fisubr
xor
jge
add
xchg
pop
add
pushf
pop
add
xchg
push
add
mov
mov
hlt
push
hlt
hlt
push
hlt
hlt
push
repz
repnz
icebp
icebp
(bad)
fmulp
(bad)
(bad)
mov
mov
mov
and
leave
(bad)
jmp
int
mov
fcmovnb
scas
dec
mov
(bad)
scas
fwait
jge
mov
inc
push
cmp
mov
cmp
mov
xor
mov
xor
movs
outs
add
jmp
and
inc
add
inc
add
call
sbb
jmp
inc
cmp
shr
pop
push
pop
call
arpl
inc
add
(bad)
mov
push
jmp
add
cwde
pop
add
mov
pop
add
movs
push
scas
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
out
out
out
push
repz
rol
(bad)
mov
nop
outs
inc
mov
mov
retf
(bad)
(bad)
jmp
jmp
xlat
ror
dec
mov
mov
retf
mov
fdivrp
scas
pushf
jg
mov
dec
push
mov
mov
aas
push
cmp
test
adc
lea
inc
inc
inc
pop
pop
inc
add
inc
add
inc
add
inc
add
jmp
stos
push
inc
test
jmp
push
or
mov
call
test
push
xor
dec
pop
add
xchg
push
add
lahf
popa
add
mov
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
push
lock
cmc
cmc
jmp
rol
inc
xchg
imul
xchg
outs
inc
xchg
ins
inc
xchg
imul
int
(bad)
in
in
in
call
ror
dec
mov
mov
retf
mov
fdivrp
mov
cmp
mov
nop
dec
(bad)
mov
lea
mov
and
and
and
and
add
add
add
add
add
add
sub
sub
ja
pop
dec
mov
xchg
push
dec
sbb
jp
or
cmps
push
dec
xchg
adc
jmp
sub
or
fwait
pop
add
movs
data16
mov
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
repnz
div
jmp
rol
inc
nop
gs
xchg
imul
xchg
addr16
nop
call
int
(bad)
out
out
out
(bad)
fcom
iret
dec
mov
mov
retf
mov
fdivrp
mov
cmp
xchg
pop
(bad)
mov
xchg
push
(bad)
mov
xchg
dec
(bad)
mov
mov
call
imul
add
add
add
add
sub
sub
xchg
jb
dec
adc
cmps
xchg
pop
dec
popa
or
popf
push
dec
bound
inc
xchg
call
mov
dec
jmp
add
xchg
pop
add
xchg
push
add
lahf
popa
add
mov
out
out
push
lock
lock
out
out
out
push
repz
div
jmp
aad
dec
call
int3
fwait
jo
retf
call
out
out
out
(bad)
(bad)
sar
int
mov
fcmovnb
mov
retf
jmp
loope
push
fwait
popa
(bad)
mov
cwde
pop
(bad)
mov
xchg
push
(bad)
mov
xchg
push
call
jl
push
(bad)
ds
sub
test
dec
add
mov
gs
cdq
es
mov
data16
xchg
jmp
jp
call
fwait
sbb
mov
cmp
call
pop
add
mov
mov
repz
repz
repz
repz
cmc
cmc
(bad)
clc
clc
clc
jmp
(bad)
leave
dec
call
int
imul
call
icebp
icebp
icebp
(bad)
fcmovbe
sar
int
mov
fcmovnb
mov
retf
jmp
loope
push
mov
addr16
popf
gs
pushf
(bad)
(bad)
mov
call
pushf
xchg
cmp
(bad)
(bad)
dec
jae
jmp
sub
popf
gs
jb
add
xor
fdivr
dec
jmp
adc
sbb
call
push
(bad)
jp
sub
call
pop
add
mov
mov
hlt
push
cmc
cmc
push
hlt
hlt
push
hlt
hlt
push
div
(bad)
cli
cli
cli
(bad)
jmp
mov
jne
shl
(bad)
fcmovnbe
int3
push
repnz
fcmovbe
sar
int
mov
fcmovnb
mov
retf
jmp
loope
push
movs
jno
lds
ins
inc
mov
addr16
sahf
inc
pushf
(bad)
call
mov
mov
mov
mov
push
popa
adc
arpl
adc
jmp
outs
jmp
push
call
push
add
jge
add
jg
add
mov
call
pop
add
lahf
popa
add
sar
div
idiv
cmc
cmc
cmc
push
cmc
cmc
(bad)
clc
clc
clc
(bad)
cli
cli
cli
(bad)
jmp
call
stos
jbe
(bad)
test
call
cmps
je
(bad)
int
repz
fcmovnbe
sar
int
mov
fcmovnb
mov
rol
mov
push
js
leave
cmps
jbe
enter
(bad)
movs
jb
(bad)
mov
outs
inc
mov
(bad)
jmp
xchg
mov
mov
dec
push
mov
mov
inc
push
fs
jmp
add
outs
aas
add
js
add
(bad)
push
add
xchg
push
add
cdq
pop
add
xchg
pop
add
cwde
pop
add
fwait
pop
add
cwde
pop
add
lahf
pusha
add
mov
repnz
repz
repz
repz
div
(bad)
sti
sti
sti
(bad)
in
fcmovne
(bad)
fsubr
jb
fldcw
outs
(bad)
fst
int
hlt
hlt
hlt
(bad)
(bad)
sar
aad
sar
(bad)
mov
loopne
fcos
in
loopne
mov
mov
int
cmp
stos
jge
retf
stos
jnp
retf
dec
test
dec
cmps
jne
enter
mov
cdq
xchg
(bad)
mov
mov
mov
(bad)
(bad)
(bad)
lea
stos
jl
call
push
add
xchg
push
add
cwde
pop
add
xchg
push
add
cwde
pop
add
xchg
push
add
cwde
pop
add
call
call
mov
repz
repz
repz
repz
div
(bad)
cld
cld
cld
(bad)
in
fmulp
(bad)
fbstp
jns
fidiv
jbe
(bad)
into
push
cmc
cmc
(bad)
fstp
aad
jmp
call
(bad)
(bad)
fdivr
in
loopne
mov
(bad)
dec
mov
dec
mov
dec
scas
cmp
lods
cmp
lods
jle
retf
stos
jge
retf
stos
jp
enter
leave
mov
dec
cmps
jae
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
mov
mov
push
add
call
call
pop
add
cdq
pop
add
pushf
pop
add
cwde
pop
add
lahf
pusha
add
mov
repz
hlt
hlt
push
hlt
hlt
push
repz
div
(bad)
std
std
std
(bad)
out
(bad)
jmp
mov
jmp
mov
jmp
mov
jmp
mov
(bad)
(bad)
into
push
div
(bad)
fstp
aad
jmp
call
(bad)
fcompp
aad
in
loopne
mov
(bad)
call
mov
call
mov
call
mov
call
mov
dec
mov
dec
mov
dec
scas
cmp
mov
jle
int3
stos
jge
leave
cmps
jne
mov
xchg
pop
(bad)
mov
cwde
pop
(bad)
mov
cdq
pop
(bad)
mov
call
lahf
fs
xchg
push
add
xchg
push
add
xchg
push
add
xchg
push
add
cwde
pop
add
xchg
push
add
fwait
pop
add
mov
repz
hlt
hlt
push
hlt
hlt
push
hlt
hlt
(bad)
clc
clc
clc
(bad)
std
std
std
push
loope
(bad)
call
mov
js
out
jns
(bad)
iret
push
div
(bad)
fcompp
(bad)
(bad)
jmp
(bad)
(bad)
sar
in
loopne
mov
nop
call
mov
xchg
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
dec
mov
dec
mov
dec
scas
cmp
stos
jp
rcr
inc
popf
(bad)
inc
pushf
popa
inc
sahf
arpl
rcr
rcr
mov
jle
jmp
imul
jmp
mov
(bad)
mov
repz
hlt
hlt
push
hlt
hlt
push
hlt
hlt
(bad)
clc
clc
clc
(bad)
(bad)
(bad)
(bad)
push
jecxz
(bad)
in
shl
jns
jmp
ja
jmp
ja
loopne
iret
(bad)
clc
clc
clc
(bad)
(bad)
(bad)
(bad)
call
(bad)
mov
(bad)
int
in
loopne
mov
xchg
call
mov
cwde
call
mov
xchg
call
mov
xchg
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
dec
scas
cmp
ret
mov
imul
ret
inc
mov
imul
ret
mov
imul
mov
imul
mov
push
ret
pushf
pop
(bad)
mov
hlt
hlt
push
cmc
cmc
push
cmc
cmc
push
hlt
hlt
(bad)
stc
stc
stc
(bad)
(bad)
(bad)
(bad)
push
in
push
(bad)
jae
icebp
leave
jns
lock
jbe
out
(bad)
jbe
loopne
into
(bad)
stc
stc
stc
(bad)
(bad)
(bad)
jmp
loop
(bad)
fcmovnb
mov
(bad)
retf
jmp
loop
(bad)
mov
shl
fdivr
fwait
call
mov
cdq
call
mov
xchg
call
mov
xchg
call
mov
call
mov
call
mov
call
mov
dec
test
jno
leave
cmps
jb
enter
leave
cmps
jb
enter
retf
dec
cmps
jb
retf
dec
cmps
jae
retf
dec
test
dec
cmps
jb
(bad)
mov
mov
div
idiv
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
cli
cli
cli
(bad)
(bad)
(bad)
(bad)
push
call
mov
not
mov
cmc
(bad)
mov
cmc
aad
jmp
fnop
(bad)
stc
stc
stc
(bad)
(bad)
xlat
jmp
(bad)
(bad)
fcmovne
mov
fcom
retf
jmp
loop
(bad)
mov
lds
(bad)
fcmovb
mov
(bad)
fld
mov
(bad)
fdivr
pushf
call
mov
cdq
call
mov
xchg
call
mov
xchg
call
mov
xchg
retf
stos
jp
leave
test
dec
stos
jns
retf
dec
stos
jns
retf
dec
stos
jns
retf
test
jns
int3
stos
jp
retf
test
ins
inc
mov
idiv
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
sti
sti
sti
(bad)
(bad)
(bad)
(bad)
push
in
fdivr
sti
jecxz
(bad)
sti
jecxz
(bad)
cli
loop
(bad)
cli
loop
jmp
loope
(bad)
cli
cli
cli
jmp
fcmovbe
jmp
(bad)
(bad)
fcmovne
mov
(bad)
call
mov
xchg
mov
mov
cmp
mov
cmp
mov
cmp
mov
jg
mov
jle
mov
jle
mov
jle
mov
jge
mov
jl
mov
jl
mov
jns
mov
jo
mov
jno
mov
jo
mov
jno
mov
jo
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
ror
push
div
push
div
push
div
push
div
(bad)
sti
sti
sti
(bad)
(bad)
(bad)
(bad)
push
repnz
out
push
out
push
out
push
repnz
(bad)
sti
sti
sti
jmp
fcmovu
jmp
fstp
(bad)
fcmovne
mov
(bad)
jmp
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
push
lock
sti
sti
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
std
(bad)
std
std
std
(bad)
cld
cld
cld
(bad)
sti
sti
sti
jmp
fcmovnu
jmp
fcompp
(bad)
fcmovne
mov
jmp
fstp
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
lock
lock
out
out
lock
out
out
out
(bad)
out
out
out
(bad)
(bad)
sar
in
(bad)
fcmovne
mov
call
int
(bad)
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
fcomp
fdivr
fcomp
fdivr
fcomp
fdivr
fcomp
fdivr
xlat
xlat
xlat
call
(bad)
(bad)
call
(bad)
(bad)
dec
mov
in
(bad)
fcmovne
mov
call
enter
iret
retf
call
iret
retf
call
iret
retf
call
into
retf
into
retf
int
call
int
call
int3
enter
(bad)
call
retf
(bad)
call
retf
(bad)
call
retf
ror
(bad)
leave
(bad)
leave
(bad)
call
leave
ret
call
enter
enter
enter
enter
mov
dec
mov
dec
mov
dec
mov
call
mov
call
enter
enter
enter
leave
(bad)
call
retf
ror
(bad)
call
retf
(bad)
call
retf
(bad)
call
retf
(bad)
call
int3
(bad)
call
int3
enter
enter
enter
sar
(bad)
(bad)
fcmovne
mov
(bad)
stc
div
(bad)
clc
div
push
cmc
repz
repz
icebp
out
push
out
in
push
out
jmp
jmp
loop
in
in
(bad)
jmp
jmp
(bad)
jmp
fcmovnbe
jmp
fcmovbe
jmp
fmul
jmp
(bad)
int
loope
retf
jmp
ror
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
rol
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
rol
(bad)
(bad)
(bad)
jmp
ror
jmp
aad
(bad)
(bad)
retf
jmp
(bad)
jmp
fcom
call
mov
(bad)
fxch
retf
sar
loop
aad
ror
(bad)
(bad)
fnop
int
loopne
aam
out
(bad)
loopne
sar
ror
fndisi(8087
fstp
fndisi(8087
(bad)
fneni(8087
(bad)
fneni(8087
fcmovbe
fneni(8087
fcmovbe
fcmovnu
(bad)
fcmovnu
fcom
fcmovnu
(bad)
rcr
(bad)
rcr
(bad)
into
fcmovnu
ror
fcmovnu
ror
fcmovnu
ror
fcmovnu
iret
enter
(bad)
fcmovnbe
int
fcmovnbe
retf
(bad)
fcmovnbe
retf
ret
fcmovnbe
retf
aam
rcr
leave
mov
fcmovnbe
(bad)
mov
fcmovnbe
(bad)
mov
fcmovnbe
(bad)
mov
fcmovnbe
(bad)
mov
fcmovnbe
leave
mov
fcmovnbe
retf
aam
ret
into
(bad)
fcmovnbe
into
leave
fcmovnbe
leave
(bad)
fcmovnbe
int
fcmovnu
ror
fcmovnbe
retf
(bad)
into
fcmovnu
fcom
fcmovnbe
mov
fcmovnu
ror
fcmovnu
ror
fcomi
call
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
(bad)
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
jmp
add
add
add
add
add
add
add
add
add
inc
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
cld
hlt
in
cmp
iret
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
sar
cmp
(bad)
(bad)
cmp
rol
inc
test
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
call
mov
out
call
shl
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
les
sar
mov
mov
dec
mov
mov
retf
dec
mov
mov
leave
mov
mov
leave
mov
mov
dec
sar
iret
lds
dec
mov
mov
enter
leave
mov
mov
enter
enter
enter
retf
dec
mov
mov
call
retf
ror
(bad)
retf
ror
(bad)
retf
(bad)
retf
(bad)
leave
ret
call
mov
call
mov
call
enter
enter
enter
enter
enter
enter
enter
leave
ret
call
leave
ret
call
leave
ret
call
leave
ret
call
leave
ret
call
leave
ret
call
leave
ret
call
leave
ret
call
enter
enter
enter
enter
enter
mov
inc
scas
mov
dec
mov
(bad)
int
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
(bad)
(bad)
int
ror
(bad)
(bad)
(bad)
int
fcmovnbe
iret
call
int3
enter
into
call
iret
retf
mov
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
(bad)
(bad)
int
xlat
ror
(bad)
fcmovbe
into
(bad)
fcom
int3
call
enter
ror
(bad)
fcmovnbe
iret
(bad)
fcmovnbe
iret
dec
int3
retf
(bad)
call
call
out
call
call
out
jmp
jmp
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
out
out
out
(bad)
out
out
out
push
lock
icebp
icebp
push
icebp
icebp
push
repnz
repz
repz
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
repz
repz
repnz
icebp
icebp
push
icebp
icebp
push
lock
icebp
icebp
inc
lods
popf
inc
scas
mov
dec
mov
(bad)
into
retf
(bad)
(bad)
into
(bad)
fcom
into
(bad)
fcom
int
fcom
int
ror
enter
int3
call
int
call
ror
call
ror
call
int3
enter
retf
leave
(bad)
call
ror
(bad)
fcom
int
fcom
int
fcom
int
fcom
int
ror
enter
int
xlat
ror
call
int3
enter
int3
call
int3
enter
retf
call
iret
retf
(bad)
(bad)
(bad)
(bad)
call
out
(bad)
call
out
(bad)
call
call
call
(bad)
jmp
(bad)
jmp
jmp
jmp
jmp
in
in
in
(bad)
in
in
in
(bad)
out
in
in
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
out
out
push
repnz
repnz
repz
repnz
repnz
repnz
icebp
icebp
push
icebp
icebp
push
lock
out
out
out
(bad)
out
out
out
push
lock
lods
popf
inc
scas
mov
dec
mov
(bad)
jmp
in
(bad)
(bad)
fdivr
retf
inc
rol
rol
inc
sar
rol
inc
sar
rol
inc
sar
sar
inc
mov
mov
inc
mov
mov
inc
mov
mov
inc
mov
mov
(bad)
mov
mov
mov
inc
ret
ret
dec
enter
leave
leave
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
iret
iret
(bad)
(bad)
fdivrp
jmp
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
out
out
out
push
icebp
lock
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
lock
lock
lock
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
out
out
out
inc
lods
popf
inc
mov
jmp
retf
mov
into
mov
(bad)
(bad)
(bad)
(bad)
stos
xchg
jo
fwait
jb
dec
gs
lea
call
fs
mov
call
popa
and
xchg
addr16
xchg
gs
nop
arpl
call
popa
and
xchg
push
call
gs
xchg
imul
(bad)
bound
call
popw
call
ins
pop
call
outs
pop
call
imul
call
jae
call
jno
call
imul
xchg
push
jmp
sahf
jnp
fcmovu
(bad)
in
in
in
in
in
in
in
in
in
in
jmp
lock
lock
lock
lock
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
out
out
out
inc
lods
sahf
inc
mov
jmp
retf
mov
into
mov
(bad)
xlat
xlat
call
add
call
call
add
cdq
pop
add
xchg
push
add
sahf
pusha
add
xchg
push
add
pushf
pop
add
cdq
pop
add
xchg
push
add
mov
push
add
lahf
pusha
add
call
jmp
push
add
mov
pop
add
call
call
push
add
sahf
pop
add
mov
push
add
cmps
push
call
bound
jmp
pop
add
test
push
add
mov
mov
fstp
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
out
in
in
inc
lods
sahf
inc
mov
jmp
retf
mov
into
mov
(bad)
(bad)
fcom
xlat
call
addr16
pushf
popa
add
lahf
arpl
call
pop
add
cwde
pop
add
xchg
push
add
popf
pop
add
xchg
push
add
fwait
pop
add
cwde
pop
add
xchg
push
add
sahf
pusha
add
xchg
push
add
sahf
pusha
add
cdq
pop
add
cwde
pop
add
mov
push
add
mov
pop
add
cdq
pop
add
mov
push
add
movs
addr16
cwde
pop
add
popf
pop
add
mov
push
add
cmps
imul
call
bound
call
ins
add
xchg
push
add
mov
adc
sar
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
out
out
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
(bad)
in
in
in
inc
scas
sahf
inc
mov
jmp
int3
mov
into
mov
(bad)
(bad)
(bad)
xlat
call
push
call
imul
cwde
pop
add
call
call
popa
add
xchg
push
add
sahf
pop
add
fwait
pop
add
cdq
pop
add
mov
pop
add
mov
pop
add
pushf
pop
add
movs
data16
cdq
pop
add
movs
addr16
sahf
pop
add
sahf
pusha
add
movs
imul
jmp
pop
add
mov
push
add
test
pop
add
movs
addr16
movs
push
add
lods
jno
call
add
lahf
test
rcl
jmp
loop
jmp
jecxz
jmp
jecxz
jmp
jecxz
jmp
jecxz
jmp
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
in
in
inc
scas
sahf
inc
mov
jmp
int3
mov
into
mov
(bad)
(bad)
(bad)
fdivr
call
call
add
call
call
push
add
fwait
pop
add
xchg
push
add
cdq
pop
add
xchg
push
add
xchg
push
add
pushf
pop
add
xchg
dec
add
fwait
pop
add
xchg
push
add
xchg
push
add
popf
pop
add
xchg
push
add
popf
pop
add
xchg
push
add
xchg
push
add
sahf
pusha
add
xchg
push
add
mov
push
add
call
call
gs
xchg
push
add
pushf
pop
add
popf
pop
add
xchg
push
add
movs
addr16
xchg
push
add
lahf
popa
add
lahf
test
(bad)
fdivr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
call
call
inc
scas
sahf
inc
mov
jmp
int3
mov
into
mov
(bad)
(bad)
fcmovu
fdivr
pushf
jge
jmp
add
movs
ins
add
mov
pusha
add
call
call
push
add
popf
pop
add
fwait
pop
add
cdq
pop
add
mov
push
add
mov
pop
add
pushf
pop
add
mov
pop
add
mov
pop
add
sahf
pusha
add
movs
push
add
cmps
imul
popf
pop
add
mov
push
add
test
pop
add
movs
addr16
movs
imul
jmp
add
cmps
imul
lahf
test
rcl
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
call
call
(bad)
jmp
jmp
lds
mov
dec
mov
(bad)
(bad)
fcmovnu
fcos
fwait
jge
jmp
gs
mov
arpl
call
push
add
xchg
push
add
fwait
pop
add
xchg
push
add
call
call
pop
add
xchg
push
add
pushf
pop
add
xchg
pop
add
xchg
push
add
cdq
pop
add
mov
call
pop
add
cwde
pop
add
mov
push
add
mov
push
add
pushf
pop
add
lahf
popa
add
xchg
push
add
movs
push
add
sahf
pusha
add
lahf
popa
add
xchg
push
add
cmps
push
call
arpl
call
rcl
jmp
jecxz
jmp
jecxz
jmp
jecxz
jmp
jecxz
jmp
jecxz
jmp
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
call
call
jmp
out
(bad)
jmp
jmp
mov
jmp
int3
mov
into
mov
(bad)
(bad)
fcmovnu
(bad)
fwait
jle
jmp
addr16
movs
ins
add
lahf
data16
mov
pop
add
xchg
push
add
fwait
pop
add
xchg
push
add
call
call
pop
add
xchg
push
add
popf
pop
add
cdq
pop
add
xchg
pop
add
mov
jo
push
inc
dec
add
mov
call
arpl
call
data16
cwde
pop
add
popf
pop
add
mov
push
add
cmps
imul
call
arpl
call
imul
xchg
push
add
mov
xchg
(bad)
fdivr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
jmp
call
jmp
out
jmp
out
(bad)
jmp
inc
mov
jmp
int
dec
mov
(bad)
(bad)
fstp
(bad)
pushf
jg
jmp
add
movs
ins
add
mov
imul
call
pop
add
xchg
push
add
fwait
pop
add
cdq
pop
add
xchg
push
add
sahf
pusha
add
xchg
push
add
sahf
pusha
add
call
inc
pop
pop
call
push
add
fwait
pop
add
mov
push
add
movs
push
add
lahf
pusha
add
mov
pop
add
cmps
imul
call
jmp
pop
add
test
pop
add
movs
push
push
call
rcl
jmp
loop
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
call
call
jmp
out
jmp
out
(bad)
jmp
inc
scas
mov
dec
mov
(bad)
(bad)
(bad)
fdivr
pushf
jg
jmp
push
add
sahf
gs
mov
addr16
xchg
push
add
cdq
pop
add
xchg
push
add
xchg
pop
add
xchg
push
add
xchg
push
add
call
call
push
add
mov
jno
sub
cs
add
xchg
push
add
sahf
pop
add
xchg
push
add
mov
push
add
cdq
pop
add
popf
pop
add
xchg
push
add
mov
push
add
pushf
pop
add
pushf
pop
add
xchg
push
add
movs
addr16
xchg
push
add
lahf
pusha
add
popf
adc
(bad)
(bad)
jmp
in
jmp
in
jmp
in
jmp
jecxz
jmp
jecxz
jmp
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
call
call
jmp
out
jmp
out
(bad)
jmp
jmp
scas
mov
dec
mov
enter
(bad)
popf
or
outs
add
mov
outs
add
mov
imul
mov
pop
add
fwait
pop
add
xchg
push
add
call
call
pop
add
xchg
push
add
sahf
pusha
add
popf
pusha
or
sahf
xchg
mov
pop
pop
pop
(bad)
jp
ja
test
call
add
mov
pop
add
movs
imul
jmp
data16
call
call
add
movs
addr16
pushf
pop
add
stos
outs
add
fwait
pop
add
cmps
push
jmp
(bad)
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
jmp
call
jmp
out
(bad)
jmp
jmp
scas
mov
dec
mov
enter
(bad)
pushf
or
add
mov
outs
add
mov
push
jmp
pusha
add
cdq
pop
add
xchg
push
add
xchg
pop
add
xchg
push
add
xchg
push
add
call
call
xchg
inc
inc
inc
dec
or
dec
pop
add
xchg
push
add
xchg
push
add
sahf
pop
add
xchg
push
add
mov
push
add
call
call
gs
xchg
push
add
pushf
pop
add
popf
pop
add
xchg
push
add
movs
push
add
mov
adc
aad
jmp
in
jmp
in
jmp
in
jmp
jecxz
jmp
loop
jmp
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
call
(bad)
jmp
jmp
mov
scas
mov
dec
mov
enter
loopne
popf
or
add
mov
jo
jmp
ins
add
mov
data16
cdq
pop
add
xchg
push
add
cwde
pop
add
or
xchg
push
add
fwait
pop
add
xchg
push
add
fwait
pop
add
mov
cmp
or
dec
dec
(bad)
jg
cmp
sahf
pusha
add
cdq
pop
add
cdq
pop
add
mov
push
add
lahf
arpl
call
add
call
jmp
pop
add
lahf
popa
add
mov
pop
add
cmps
push
call
gs
lahf
test
fcomp
fdivr
out
out
out
out
out
out
out
out
out
out
call
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
call
(bad)
mov
scas
mov
dec
mov
enter
loope
sahf
or
outs
add
cmps
jno
jmp
ins
add
movs
ins
add
mov
pop
add
xchg
push
add
lods
jns
jmp
inc
call
add
fwait
pop
add
xchg
push
add
movs
ins
sbb
je
ins
inc
add
dec
dec
add
call
pop
add
popf
pusha
add
lea
dec
dec
add
jnp
add
jg
add
jg
add
xchg
pop
add
xchg
push
add
lahf
popa
add
mov
pop
add
test
add
cwde
pop
add
movs
data16
mov
loopne
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
jmp
in
(bad)
mov
scas
mov
dec
mov
enter
loop
sahf
adc
jbe
jmp
jno
jmp
ins
add
mov
push
add
xchg
push
add
mov
inc
dec
pop
pop
call
add
(bad)
dec
add
mov
and
call
sbb
mov
dec
push
add
mov
dec
push
add
imul
call
add
push
aaa
push
call
sbb
pop
inc
push
call
adc
jb
add
or
xchg
pop
add
pushf
pop
add
xchg
push
add
movs
data16
xchg
push
add
lahf
pusha
add
mov
jecxz
push
repz
repnz
repnz
icebp
icebp
push
icebp
icebp
push
lock
lock
out
out
out
(bad)
out
out
out
jmp
in
(bad)
(bad)
fdivrp
(bad)
fdivrp
fstp
(bad)
fstp
(bad)
fstp
(bad)
out
out
jmp
in
in
(bad)
mov
scas
mov
dec
mov
call
int
jmp
jecxz
jmp
xor
scas
sub
mov
jmp
jbe
jmp
imul
mov
push
add
mov
inc
jmp
dec
dec
(bad)
jl
outs
inc
add
inc
add
jmp
pop
jmp
pop
push
add
jbe
add
jo
add
push
add
pop
ss
dec
sub
dec
arpl
dec
fwait
sub
mov
pop
xor
jno
add
xchg
pop
add
mov
pop
add
test
pop
add
movs
push
pop
jmp
in
push
repz
repz
repz
repnz
repnz
icebp
icebp
push
lock
lock
xlat
sar
retf
inc
test
lahf
inc
test
fwait
dec
mov
loope
jmp
(bad)
mov
scas
mov
inc
mov
call
int
jmp
in
jmp
test
push
test
jmp
sub
jmp
outs
or
xchg
push
add
mov
inc
jmp
das
das
inc
add
push
ss
call
push
inc
add
inc
xor
and
call
call
adc
ins
dec
or
jae
pop
push
pusha
add
mov
xchg
adc
fisubr
pop
call
add
xchg
call
push
add
mov
push
add
sahf
pop
add
mov
in
push
cmc
cmc
push
hlt
hlt
push
hlt
hlt
push
repz
repz
repnz
icebp
icebp
push
icebp
icebp
call
shl
mov
mov
mov
and
movs
xchg
jmp
loope
(bad)
jmp
jmp
out
in
in
(bad)
mov
scas
mov
inc
mov
call
int
jmp
in
jmp
mov
push
xor
push
sub
mov
sub
push
inc
inc
dec
or
inc
add
jmp
and
dec
or
cs
push
dec
call
mov
adc
rol
lahf
jb
call
gs
scas
outs
add
int
add
xlat
mov
imul
jle
add
call
jmp
push
add
mov
xchg
fstp
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
in
in
in
push
repz
repnz
fcmovb
mov
(bad)
mov
xchg
jb
mov
lea
enter
loop
loop
jmp
jmp
out
out
out
(bad)
mov
mov
jmp
iret
mov
call
int
jmp
out
jmp
mov
mov
inc
push
xchg
mov
cmp
mov
cmp
mov
xor
jmp
xchg
dec
inc
inc
jmp
sub
inc
add
inc
add
inc
add
dec
or
call
pop
pop
call
adc
(bad)
ds
push
dec
xchg
adc
mov
jmp
popa
xor
mov
ud0
mov
fisub
jmp
xor
outs
inc
add
xchg
pop
add
xchg
push
add
movs
push
add
mov
mov
in
in
hlt
hlt
hlt
push
hlt
hlt
push
repz
repz
repnz
repnz
hlt
hlt
push
repz
fcmovb
mov
mov
mov
ret
(bad)
mov
mov
(bad)
test
jmp
loop
(bad)
in
in
in
(bad)
out
out
out
(bad)
mov
mov
jmp
sar
call
int
jmp
out
jmp
(bad)
lea
mov
inc
push
mov
mov
push
mov
jmp
cdq
push
dec
dec
inc
inc
dec
add
inc
add
inc
add
inc
add
inc
add
inc
pop
pop
call
mov
jno
rcr
add
(bad)
jle
pop
jmp
push
or
jne
and
inc
inc
call
add
xchg
call
fs
xchg
push
add
sahf
pop
add
lahf
test
(bad)
fdivr
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
push
cmc
cmc
push
cmc
cmc
(bad)
fadd
mov
inc
xchg
ins
inc
cwde
je
les
ins
dec
lods
fwait
jmp
jecxz
(bad)
in
in
in
(bad)
out
out
out
(bad)
mov
mov
jmp
sar
call
int
jmp
out
jmp
xchg
push
(bad)
mov
nop
dec
(bad)
mov
(bad)
mov
mov
inc
push
sub
push
push
push
call
push
jmp
sub
inc
add
inc
add
inc
add
inc
add
inc
add
inc
notrack
shr
(bad)
fdiv
push
inc
xor
dec
jno
dec
nop
ud0
lahf
dec
jmp
cmp
inc
pop
add
cmps
imul
jmp
pop
jmp
loopne
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
lock
div
push
div
(bad)
ffree
mov
ret
inc
(bad)
gs
xchg
outs
inc
(bad)
inc
(bad)
dec
stos
xchg
jmp
in
(bad)
out
out
out
push
lock
(bad)
mov
mov
jmp
sar
(bad)
int
(bad)
call
mov
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
nop
dec
(bad)
mov
nop
dec
push
sahf
push
call
pop
jmp
popa
inc
inc
inc
add
inc
add
inc
add
inc
add
call
push
(bad)
jns
dec
sbb
jle
pop
(bad)
jns
pop
push
dec
jmp
and
push
xor
mov
adc
movs
gs
enter
aam
sub
xlat
mov
jmp
xor
ins
cmp
add
mov
push
add
popf
pop
add
mov
out
push
div
push
div
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
div
push
div
(bad)
(bad)
mov
dec
xchg
imul
popf
jae
retf
dec
xchg
ins
dec
mov
jmp
in
(bad)
out
out
out
push
lock
mov
mov
jmp
sar
(bad)
int
(bad)
jmp
mov
mov
cwde
pop
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
test
pop
jmp
outs
jmp
dec
add
inc
add
inc
inc
jmp
add
inc
sub
dec
mov
dec
sahf
xor
les
add
mov
pop
push
jmp
add
mov
xchg
adc
fsubr
pop
call
add
test
jmp
push
add
mov
xchg
(bad)
fdivrp
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
push
lock
clc
clc
clc
(bad)
clc
clc
clc
jmp
retf
int3
fwait
ins
dec
fwait
ins
dec
mov
outs
dec
fwait
outs
dec
mov
jmp
out
push
lock
icebp
icebp
(bad)
mov
mov
jmp
sar
(bad)
int
(bad)
jmp
lea
rcr
mov
cwde
pop
(bad)
mov
xchg
pop
(bad)
mov
xchg
push
(bad)
mov
mov
jmp
data16
jge
jge
jns
jns
addr16
inc
(bad)
cmp
cmp
mov
pop
add
add
push
das
add
mov
mov
adc
mov
popa
add
mov
jb
call
jae
call
xchg
or
(bad)
mov
pop
jmp
ud0
add
lahf
bound
call
pusha
add
mov
loop
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
lock
repz
stc
stc
stc
(bad)
clc
clc
clc
jmp
retf
int3
call
iret
mov
push
int3
call
out
out
icebp
icebp
icebp
push
repnz
mov
mov
jmp
sar
call
int
(bad)
jmp
mov
mov
inc
popf
gs
pushf
arpl
rcr
(bad)
mov
cdq
pop
(bad)
mov
mov
outs
dec
xchg
jmp
push
sub
jmp
add
addr16
inc
jmp
lds
dec
xchg
jmp
imul
jno
sub
sahf
imul
jmp
dec
dec
adc
jg
add
pushf
pusha
add
xchg
push
add
popf
pop
add
mov
call
clc
(bad)
clc
clc
clc
push
div
push
div
push
div
(bad)
clc
clc
clc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
jmp
into
mov
call
movs
jae
aam
jp
shl
call
mov
(bad)
call
repnz
repz
mov
mov
jmp
sar
call
int
(bad)
jmp
(bad)
ins
inc
mov
ins
inc
mov
imul
rcr
inc
popf
arpl
mov
mov
jne
cwde
cwde
cwde
call
je
scas
cmps
xchg
push
test
jmp
dec
add
push
xor
jmp
shl
call
mov
push
ud0
add
pop
xor
jmp
add
cmp
push
add
jg
add
lea
jmp
pop
add
mov
xchg
loopne
loopne
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
repnz
cli
cli
cli
(bad)
cli
cli
cli
jmp
int
call
mov
imul
cmps
je
shl
ins
call
mov
(bad)
jmp
repz
hlt
repz
mov
mov
jmp
sar
call
int
(bad)
jmp
dec
cmps
je
(bad)
movs
jno
(bad)
movs
outs
inc
mov
ins
inc
mov
imul
rcr
(bad)
jp
jp
movs
movs
movs
inc
popf
xchg
push
xchg
push
mov
mov
aaa
call
ds
push
sub
sub
push
dec
xor
dec
sub
call
add
jbe
add
add
(bad)
push
add
xchg
dec
push
add
(bad)
dec
add
sahf
pop
add
xchg
push
add
fwait
pop
add
mov
jecxz
push
repz
repz
repz
repz
repnz
cmc
cmc
(bad)
sti
sti
sti
(bad)
sti
sti
sti
jmp
sar
(bad)
fsubr
jnp
fsubr
jbe
(bad)
mov
jmp
hlt
hlt
(bad)
mov
mov
jmp
sar
call
iret
retf
(bad)
jmp
dec
stos
jp
retf
dec
cmps
jbe
enter
enter
(bad)
movs
jno
(bad)
mov
outs
inc
mov
sahf
inc
sahf
sahf
call
xchg
pop
push
mov
mov
inc
(bad)
mov
mov
mov
inc
jmp
dec
add
jne
add
outs
cmp
push
add
jp
add
mov
call
add
sahf
pop
add
xchg
push
add
fwait
pop
add
pushf
pop
add
xchg
push
add
mov
push
add
lahf
pusha
add
mov
call
clc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
stc
stc
stc
(bad)
cld
cld
cld
(bad)
sti
sti
sti
jmp
sar
fldcw
jbe
fldcw
outs
call
mov
jmp
cmc
cmc
inc
mov
scas
jmp
sar
call
ror
(bad)
jmp
dec
lods
jg
retf
stos
jge
retf
stos
jnp
retf
test
jns
retf
dec
cmps
jne
leave
cmps
je
enter
fcmovb
mov
dec
mov
inc
(bad)
mov
mov
mov
nop
dec
push
nop
dec
push
test
dec
add
nop
push
add
xchg
push
add
cwde
pop
add
xchg
push
add
pushf
pop
add
xchg
push
add
cdq
pop
add
call
call
push
add
pushf
pop
add
lahf
test
loopne
loopne
lock
lock
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
repz
cld
cld
cld
(bad)
cld
cld
cld
(bad)
jmp
mov
(bad)
fbstp
jge
fidiv
js
fnstcw
jmp
div
idiv
div
cmc
(bad)
(bad)
into
dec
lds
jmp
(bad)
call
ror
(bad)
jmp
dec
mov
dec
scas
cmp
lods
cmp
int3
lods
jge
int3
stos
jl
retf
stos
jp
retf
test
js
fcmovnb
movs
(bad)
jns
js
retf
inc
movs
outs
(bad)
mov
xchg
dec
(bad)
mov
xchg
dec
(bad)
mov
nop
dec
(bad)
mov
xchg
dec
(bad)
mov
xchg
dec
jmp
add
xchg
push
add
xchg
push
add
cwde
pop
add
xchg
push
add
fwait
pop
add
xchg
push
add
cwde
pop
add
cdq
pop
add
xchg
push
add
sahf
pusha
add
xchg
push
add
pushf
pop
add
mov
in
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
hlt
hlt
push
hlt
hlt
push
div
(bad)
std
std
std
(bad)
cld
cld
cld
(bad)
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
(bad)
fnstcw
jmp
div
idiv
div
idiv
(bad)
into
dec
(bad)
mov
jmp
fstp
call
ror
(bad)
jmp
jmp
stos
xchg
jne
shl
mov
iret
mov
dec
mov
dec
scas
test
int
cmp
lods
cmp
int3
lods
jle
fmulp
lods
call
lds
dec
test
outs
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
push
push
bound
call
pop
add
xchg
push
add
pushf
pop
add
xchg
push
add
call
call
bound
call
pop
add
mov
jmp
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
cli
cli
cli
(bad)
std
std
std
(bad)
std
std
std
(bad)
jmp
mov
jmp
mov
jmp
mov
je
jecxz
je
fcmovnb
mov
(bad)
clc
clc
clc
push
div
(bad)
(bad)
into
dec
(bad)
mov
(bad)
(bad)
xlat
call
ror
(bad)
jmp
jmp
stos
xchg
jbe
shl
mov
shl
call
mov
dec
mov
dec
mov
dec
mov
dec
scas
cmp
mov
dec
scas
cmp
int
jg
retf
stos
jl
(bad)
movs
jo
mov
xchg
pop
(bad)
mov
xchg
pop
(bad)
mov
xchg
pop
(bad)
mov
cdq
pop
(bad)
mov
fwait
pop
(bad)
mov
cmp
call
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
xchg
push
add
pushf
pop
add
xchg
push
add
cdq
pop
add
sahf
sbb
loope
push
lock
lock
lock
lock
lock
hlt
hlt
(bad)
std
std
std
(bad)
std
std
std
(bad)
in
fadd
(bad)
call
mov
jge
out
ja
out
js
ffree
mov
(bad)
clc
clc
clc
(bad)
clc
div
(bad)
(bad)
int3
dec
lds
(bad)
fstp
aam
xlat
ror
(bad)
jmp
jmp
stos
xchg
js
aad
xchg
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
scas
cmp
scas
cmp
cmps
jae
rcr
rcr
inc
pushf
pusha
inc
pushf
pusha
inc
sahf
(bad)
inc
fwait
pusha
inc
lahf
arpl
rcr
ret
sahf
arpl
mov
dec
push
gs
pushf
pop
add
call
gs
jmp
xor
(bad)
in
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
(bad)
clc
clc
clc
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
std
(bad)
in
fld
(bad)
jmp
jo
jmp
jno
in
ret
jp
jmp
(bad)
faddp
lahf
(bad)
in
in
in
(bad)
stc
stc
stc
(bad)
clc
clc
clc
call
iret
retf
les
(bad)
(bad)
sar
(bad)
iret
retf
(bad)
jmp
jmp
lods
xchg
jns
(bad)
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
dec
mov
dec
mov
dec
mov
dec
stos
jp
ret
lahf
push
inc
lahf
addr16
sahf
inc
lahf
addr16
mov
inc
mov
addr16
mov
imul
(bad)
mov
push
inc
popf
(bad)
inc
fwait
pusha
dec
mov
push
jmp
jmp
cli
cli
cli
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
cli
cli
cli
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
fadd
push
(bad)
jns
out
(bad)
jp
lock
cmp
(bad)
jnp
out
(bad)
jl
loopne
mov
(bad)
stc
stc
stc
(bad)
clc
clc
clc
call
int
dec
ret
mov
(bad)
fcmovbe
into
call
iret
retf
(bad)
jmp
jmp
lods
xchg
jp
fdivr
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
nop
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
dec
scas
cmp
mov
ins
inc
mov
ins
inc
mov
imul
movs
outs
inc
mov
ins
inc
movs
outs
inc
mov
jo
lds
outs
dec
movs
outs
inc
mov
jno
lds
jo
cmps
nop
outs
jmp
loop
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
hlt
hlt
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
fadd
push
leave
jno
repnz
int3
jnp
icebp
enter
enter
(bad)
lahf
(bad)
in
in
in
(bad)
cli
cli
cli
(bad)
stc
clc
clc
call
retf
(bad)
sar
fcmovbe
int
(bad)
into
retf
jmp
jmp
ret
fld
lahf
(bad)
fld
sahf
(bad)
fdivr
pushf
(bad)
fdivr
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
nop
call
mov
call
mov
call
mov
dec
stos
jns
enter
leave
movs
jb
leave
cmps
jae
enter
retf
dec
movs
jb
leave
cmps
jae
retf
dec
movs
jb
retf
test
jb
retf
dec
test
dec
cmps
jb
int
ja
leave
cmps
jb
int3
stos
jbe
test
out
push
div
push
div
push
div
push
div
push
div
(bad)
clc
clc
clc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
loop
(bad)
clc
fist
push
fist
neg
xchg
jmp
shr
cli
cli
cli
(bad)
stc
stc
stc
call
leave
ret
dec
sar
fcmovbe
int
aad
retf
jmp
jmp
lds
(bad)
fcmovb
mov
(bad)
fld
mov
(bad)
fadd
lahf
(bad)
fdivr
pushf
call
mov
fwait
call
mov
cwde
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
test
retf
dec
test
jbe
retf
test
ja
retf
dec
test
ja
int3
stos
jns
leave
test
dec
test
js
leave
cmps
ja
int
jnp
leave
cmps
ja
int3
stos
jp
test
jmp
stc
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
sti
sti
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
out
(bad)
sti
jecxz
(bad)
cli
jecxz
(bad)
cli
loop
(bad)
cli
loop
(bad)
cli
loope
jmp
xlat
mov
(bad)
sti
sti
sti
(bad)
stc
stc
stc
call
enter
sar
fcmovbe
into
call
into
retf
out
out
push
lahf
(bad)
fadd
popf
(bad)
fadd
popf
call
mov
fwait
call
mov
cwde
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
dec
stos
jnp
enter
retf
dec
cmps
je
retf
dec
test
dec
cmps
je
retf
test
jne
retf
test
ja
retf
dec
stos
js
retf
dec
stos
js
scas
cdq
ja
in
in
icebp
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
cmc
cmc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
out
(bad)
cli
in
(bad)
cli
in
(bad)
cli
in
(bad)
stc
in
(bad)
stc
jecxz
(bad)
out
ffreep
(bad)
cli
cli
cli
(bad)
sti
sti
sti
(bad)
cli
stc
stc
call
enter
sar
fcmovnbe
iret
call
into
leave
(bad)
clc
clc
clc
call
retf
mov
xchg
jmp
mov
xchg
jmp
mov
xchg
jmp
mov
xchg
jmp
mov
nop
jmp
mov
nop
jmp
mov
nop
jmp
mov
nop
jmp
mov
nop
jmp
mov
nop
jmp
mov
xchg
jmp
mov
xchg
push
mov
xchg
call
rol
(bad)
stc
stc
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cli
clc
clc
push
lock
push
lock
push
lock
push
lock
push
out
out
push
hlt
hlt
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
cli
stc
stc
call
enter
sar
fcmovnbe
iret
call
into
leave
(bad)
(bad)
(bad)
(bad)
(bad)
sti
sti
sti
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
(bad)
sti
sti
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
std
(bad)
std
std
std
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
cli
cli
stc
call
enter
sar
(bad)
sar
aad
leave
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
stc
stc
stc
(bad)
stc
clc
clc
call
enter
sar
(bad)
sar
retf
ret
mov
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aam
call
aam
call
aam
call
aam
call
rcl
call
rcl
call
rcl
call
rcl
(bad)
(bad)
fdivr
ror
ret
dec
sar
(bad)
sar
int3
(bad)
sar
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
fcomp
fdivr
fcomp
fdivr
fcomp
fdivr
xlat
xlat
xlat
jmp
(bad)
call
leave
ret
dec
sar
fstp
sar
aam
(bad)
call
retf
ror
(bad)
call
retf
ror
(bad)
retf
ror
(bad)
call
leave
(bad)
call
leave
ret
call
enter
mov
call
mov
dec
(bad)
mov
dec
lds
dec
les
dec
ret
mov
dec
ret
int3
ret
int3
sar
int3
sar
retf
sar
retf
sar
retf
mov
mov
dec
mov
mov
dec
sar
retf
sar
retf
sar
int3
ret
int3
ret
int
mov
dec
les
dec
lds
dec
mov
rol
sar
mov
rol
sar
enter
enter
enter
enter
fcompp
dec
ret
out
(bad)
fcom
(bad)
stc
div
(bad)
clc
div
(bad)
clc
cmc
hlt
(bad)
clc
cmc
repz
repz
push
repnz
push
icebp
out
push
out
in
push
out
jmp
jmp
out
call
loope
in
in
(bad)
jmp
fdivr
jmp
(bad)
jmp
fst
jmp
fcmovnbe
jmp
fcmovbe
jmp
fnop
jmp
xlat
iret
jmp
(bad)
int
loope
int3
jmp
aam
(bad)
(bad)
enter
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
rol
(bad)
fst
(bad)
into
(bad)
(bad)
(bad)
ret
(bad)
(bad)
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fmulp
(bad)
rol
(bad)
(bad)
(bad)
rol
(bad)
(bad)
(bad)
jmp
ror
jmp
aam
(bad)
(bad)
retf
(bad)
(bad)
int
jecxz
sar
loop
(bad)
(bad)
fcmove
leave
dec
sar
ror
dec
sar
fcmovbe
int3
(bad)
(bad)
sar
aam
(bad)
dec
ret
fxch
retf
(bad)
(bad)
sar
in
out
dec
les
(bad)
fcompp
aad
cli
clc
idiv
stc
div
(bad)
stc
div
(bad)
clc
cmc
hlt
(bad)
clc
cmc
repnz
repz
repnz
push
lock
push
out
in
push
out
jmp
jmp
push
jmp
loop
in
in
(bad)
in
in
(bad)
jmp
(bad)
call
fst
jmp
(bad)
jmp
fcmovnbe
jmp
(bad)
jmp
fmul
jmp
xlat
into
jmp
(bad)
int
loope
retf
jmp
aad
jmp
aam
jmp
ror
jmp
rol
jmp
rol
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
rol
jmp
rol
jmp
ror
jmp
aam
jmp
aad
jmp
aad
jmp
(bad)
int
loope
int
jecxz
sar
call
fcmovnbe
(bad)
(bad)
int
(bad)
sar
in
xlat
jmp
loopne
(bad)
fst
sar
in
fdivr
call
out
jmp
int3
retf
(bad)
out
call
jmp
(bad)
fmul
enter
fcos
ret
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
mov
mov
leave
sar
repz
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
sub
add
add
add
add
add
add
add
add
add
or
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
std
jne
jmp
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
out
aam
jne
jecxz
jne
cli
div
(bad)
push
(bad)
push
clc
hlt
(bad)
in
sar
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
stos
(bad)
ffreep
mov
out
(bad)
(bad)
cld
cli
clc
(bad)
(bad)
(bad)
(bad)
jmp
aad
push
nop
jle
mov
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
mov
aam
cmps
(bad)
in
(bad)
(bad)
std
stc
idiv
(bad)
mov
enter
(bad)
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
(bad)
jmp
(bad)
jmp
ret
scas
(bad)
clc
call
lods
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
enter
jns
fcmovnb
test
inc
mov
(bad)
fidivr
enter
mov
(bad)
mov
scas
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
scas
cmps
inc
mov
inc
scas
movs
inc
scas
cmps
(bad)
mov
mov
(bad)
mov
scas
cmps
inc
scas
movs
(bad)
mov
scas
movs
(bad)
mov
scas
movs
(bad)
mov
scas
movs
(bad)
mov
scas
movs
(bad)
mov
scas
movs
(bad)
mov
scas
movs
(bad)
mov
scas
movs
(bad)
mov
scas
movs
(bad)
mov
scas
movs
(bad)
mov
scas
movs
(bad)
mov
scas
movs
(bad)
mov
scas
movs
(bad)
mov
scas
movs
(bad)
mov
scas
movs
(bad)
mov
lods
movs
(bad)
mov
scas
movs
(bad)
mov
mov
(bad)
mov
lods
mov
push
movs
call
movs
call
movs
call
movs
call
movs
call
movs
call
movs
call
movs
cdq
push
movs
cdq
push
movs
cdq
push
movs
cdq
push
movs
cdq
push
movs
cdq
push
movs
cdq
push
mov
cdq
push
mov
cdq
push
mov
cdq
push
mov
cdq
push
mov
cdq
push
mov
cdq
push
mov
cdq
push
int3
(bad)
(bad)
fidivr
enter
jns
fstp
retf
inc
mov
(bad)
fidivr
fwait
(bad)
out
in
jmp
int
call
int
call
int3
enter
enter
enter
(bad)
call
retf
(bad)
call
retf
(bad)
call
retf
(bad)
call
int3
enter
enter
(bad)
call
retf
(bad)
call
retf
enter
(bad)
call
retf
(bad)
call
retf
enter
enter
retf
iret
retf
call
iret
retf
call
iret
retf
call
ror
(bad)
(bad)
into
(bad)
(bad)
sar
jmp
iret
int3
call
retf
(bad)
call
retf
enter
(bad)
call
retf
(bad)
call
retf
(bad)
call
retf
(bad)
call
retf
(bad)
call
retf
(bad)
call
retf
(bad)
call
int3
enter
(bad)
call
retf
(bad)
call
retf
(bad)
call
retf
(bad)
call
retf
(bad)
call
retf
(bad)
call
retf
(bad)
call
retf
enter
retf
call
iret
retf
call
iret
retf
call
iret
retf
call
ror
call
iret
retf
jmp
(bad)
(bad)
call
out
(bad)
call
out
(bad)
call
out
(bad)
call
out
(bad)
call
out
(bad)
call
out
(bad)
call
out
(bad)
jmp
(bad)
in
jmp
in
jmp
in
jmp
in
jmp
(bad)
in
jmp
(bad)
in
jmp
(bad)
in
jmp
(bad)
in
in
jmp
out
in
jmp
out
in
jmp
out
in
jmp
out
in
jmp
out
in
in
(bad)
out
in
in
(bad)
out
in
in
(bad)
out
in
in
(bad)
out
in
in
(bad)
out
in
in
(bad)
out
out
in
(bad)
out
out
in
(bad)
out
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
(bad)
out
in
in
(bad)
out
in
in
(bad)
out
in
in
(bad)
out
in
in
(bad)
out
in
in
(bad)
out
in
in
(bad)
out
in
in
(bad)
out
in
jmp
out
in
jmp
out
in
jmp
out
in
jmp
out
jmp
push
mov
enter
jns
fstp
enter
lods
(bad)
fidivr
fwait
push
lock
sar
loopne
aad
loopne
aad
loopne
aad
loopne
aad
loopne
aad
loopne
aad
loopne
aad
loopne
aad
ror
(bad)
fcom
(bad)
(bad)
sar
ror
(bad)
jmp
(bad)
call
retf
(bad)
sar
aad
leave
call
leave
(bad)
(bad)
fcmovnbe
into
call
retf
(bad)
(bad)
(bad)
sar
ror
(bad)
ror
call
iret
retf
mov
ret
aam
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
call
mov
call
iret
retf
ror
jmp
fcmovbe
call
mov
call
retf
ror
(bad)
(bad)
(bad)
sar
ror
(bad)
(bad)
(bad)
sar
(bad)
into
leave
call
int3
enter
sar
mov
mov
call
call
out
call
call
out
call
call
out
call
call
out
jmp
call
call
(bad)
jmp
(bad)
jmp
jmp
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
lock
lock
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
repnz
repnz
repnz
repz
repz
repz
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
repz
repz
repz
repnz
repnz
repnz
icebp
icebp
push
icebp
icebp
push
lock
lock
out
out
out
push
repz
mov
enter
jp
fstp
(bad)
inc
mov
(bad)
fidivr
fwait
push
lock
mov
fcos
in
fcos
in
fcos
in
fcos
in
fcos
in
fcos
in
fcos
in
fcos
in
fcos
aam
enter
(bad)
call
enter
mov
sar
aad
enter
(bad)
(bad)
(bad)
int3
inc
mov
aad
aad
leave
jmp
fcmovbe
(bad)
fst
sar
ror
(bad)
fcmovnbe
(bad)
mov
mov
sar
in
fcos
in
fcos
in
fcos
in
fcos
in
fcos
in
fcos
in
fcos
in
fcos
in
fcos
ror
(bad)
(bad)
inc
mov
mov
call
leave
(bad)
(bad)
dec
ret
mov
jmp
fstp
call
leave
(bad)
fcompp
call
into
leave
call
iret
retf
jmp
fcompp
push
call
out
jmp
call
out
jmp
call
out
jmp
call
out
jmp
call
out
jmp
jmp
jmp
jmp
jmp
jmp
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
lock
lock
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
repnz
repnz
repnz
repnz
repz
repz
repz
repz
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
repz
repz
repz
repz
repnz
repnz
repnz
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
lock
lock
out
out
out
(bad)
out
out
out
push
repz
mov
enter
jp
fstp
vcmpsd
(bad)
mov
lock
mov
fcos
in
fcos
in
fcos
in
fcos
in
fcos
in
fcos
in
fcos
in
fcos
in
fcos
aam
enter
(bad)
jmp
fcmovnbe
jmp
fcmovbe
jmp
(bad)
call
int
jmp
fcmovbe
jmp
fstp
(bad)
(bad)
sar
jecxz
fdivr
aad
leave
jmp
fcmovbe
(bad)
fcmovbe
into
jmp
(bad)
(bad)
fcmovbe
iret
inc
mov
sar
(bad)
sar
in
fcos
in
fcos
in
fcos
in
fcos
in
fcos
in
fcos
in
fcos
in
fcos
in
fcos
ror
(bad)
fstp
jmp
fcmovnbe
jmp
fcmovnbe
jmp
fstp
call
leave
(bad)
fcompp
jmp
fcmovbe
jmp
fcmovnbe
jmp
fcompp
call
leave
(bad)
fcom
(bad)
(bad)
sar
fst
sar
loopne
aam
mov
mov
jmp
out
(bad)
jmp
out
(bad)
jmp
out
(bad)
jmp
call
out
jmp
call
out
jmp
(bad)
jmp
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
lock
lock
lock
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
repnz
repnz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repnz
repnz
repnz
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
lock
lock
lock
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
repnz
mov
enter
jp
fstp
ret
inc
mov
(bad)
fidivr
fwait
push
lock
(bad)
aam
into
enter
enter
mov
dec
mov
int
ret
mov
int
ret
mov
retf
(bad)
int
ret
mov
int
ret
mov
int3
(bad)
int
ret
mov
int
ret
mov
int3
(bad)
int3
mov
int
ret
mov
int
ret
iret
int
in
loop
iret
leave
(bad)
dec
mov
int
ret
mov
int
ret
mov
int
ret
mov
int
ret
mov
retf
(bad)
int
ret
mov
int
ret
mov
retf
(bad)
int
ret
mov
int
ret
mov
retf
(bad)
int
ret
mov
int
ret
mov
fstp
fcos
out
in
out
in
out
in
out
in
out
in
out
in
out
in
out
in
out
in
out
in
out
in
out
out
call
call
call
(bad)
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
out
out
out
push
lock
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
lock
lock
lock
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
push
repnz
mov
enter
jp
fstp
sar
mov
(bad)
fidivr
fwait
push
lock
jmp
out
jmp
jecxz
jmp
(bad)
(bad)
fstp
(bad)
fcmovnu
fcos
(bad)
fdivr
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
fdivr
(bad)
fdivr
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
fcomp
xlat
(bad)
fcomp
xlat
(bad)
(bad)
fdivr
fcmovu
fcos
fcmovnu
(bad)
fcmovnu
(bad)
(bad)
fdivr
fstp
fdivr
(bad)
(bad)
(bad)
fdivrp
(bad)
fdivrp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
(bad)
(bad)
fdivrp
(bad)
fdivrp
loopne
loopne
jecxz
jecxz
out
out
jmp
jmp
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
out
out
out
push
icebp
lock
icebp
icebp
push
repnz
repnz
repnz
repnz
repnz
repnz
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
lock
lock
lock
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
push
repnz
push
mov
enter
jp
fcmovnb
stos
push
(bad)
mov
(bad)
fidivr
fwait
push
icebp
lock
call
loope
(bad)
fcom
(bad)
dec
enter
mov
mov
stos
stos
stos
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
stos
stos
push
mov
push
mov
push
mov
mov
(bad)
mov
mov
mov
(bad)
mov
mov
ret
iret
iret
(bad)
fstp
(bad)
call
in
in
(bad)
out
out
in
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
in
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
out
out
push
lock
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
lock
lock
lock
lock
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
push
icebp
icebp
push
mov
enter
jp
fcmovnb
stos
push
(bad)
mov
(bad)
fidivr
fwait
push
icebp
icebp
jmp
in
(bad)
fcmovnu
(bad)
mov
mov
cdq
adc
jne
inc
addr16
inc
imul
push
inc
inc
ins
inc
inc
push
inc
inc
inc
inc
imul
test
dec
ins
inc
inc
push
inc
inc
ins
inc
inc
addr16
inc
outs
inc
inc
push
inc
inc
outs
inc
inc
push
inc
inc
jo
inc
push
aas
inc
jo
inc
push
aas
dec
jo
inc
push
aas
dec
jno
inc
push
aas
dec
jns
call
jae
call
jge
call
jbe
dec
ja
call
jge
call
je
call
push
jmp
enter
loope
(bad)
in
in
in
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
lock
lock
lock
lock
lock
icebp
icebp
push
icebp
icebp
push
lock
lock
lock
lock
lock
lock
lock
lock
lock
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
push
icebp
icebp
push
mov
enter
jp
fcmovnb
stos
push
(bad)
mov
(bad)
fidivr
fwait
push
icebp
icebp
jmp
in
call
rcl
jmp
imul
mov
pop
add
cwde
push
add
sahf
pop
add
lahf
popa
add
cdq
pop
add
xchg
push
add
cwde
pop
add
mov
bound
call
pop
add
call
jmp
pop
add
cwde
pop
add
pushf
pop
add
movs
data16
mov
pop
add
cdq
pop
add
sahf
pusha
add
movs
push
add
cdq
pop
add
cdq
pop
add
mov
push
jmp
add
call
jmp
data16
fwait
pop
add
fwait
pop
add
movs
addr16
stos
outs
add
movs
push
add
fwait
pop
add
cmps
imul
jmp
pop
add
popf
pop
add
test
jo
jmp
pop
add
popf
pop
add
stos
outs
add
lods
jb
jmp
pop
add
popf
pop
add
lods
jo
jmp
fs
pushf
pop
add
lahf
popa
add
lods
jb
jmp
arpl
call
fs
scas
je
jmp
popa
add
popf
pop
add
mov
jne
jmp
mov
(bad)
call
(bad)
(bad)
(bad)
(bad)
fcos
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
call
lock
lock
lock
lock
lock
lock
lock
lock
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
repnz
icebp
push
mov
enter
jp
fcmovnb
stos
push
(bad)
mov
(bad)
fidivr
fwait
push
icebp
lock
jecxz
dec
int3
int3
call
addr16
movs
imul
mov
arpl
call
pop
add
popf
pop
add
cwde
push
add
xchg
push
add
xchg
push
add
lahf
pusha
add
lahf
pusha
add
xchg
push
add
xchg
push
add
cwde
pop
add
mov
bound
call
push
add
fwait
pop
add
mov
bound
call
push
add
popf
pop
add
mov
bound
call
push
add
sahf
pusha
add
movs
addr16
mov
pop
add
xchg
push
add
mov
imul
call
pop
add
mov
imul
mov
pop
add
cwde
pop
add
movs
data16
stos
ins
add
mov
pop
add
call
jmp
popa
add
cdq
pop
add
call
jmp
popa
add
call
jmp
outs
add
lahf
popa
add
cdq
pop
add
pushf
pop
add
stos
outs
add
lods
jo
call
pop
add
sahf
pusha
add
lods
jno
jmp
pop
add
cdq
pop
add
mov
jb
jmp
mov
sar
out
out
jmp
jmp
jmp
jmp
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
icebp
icebp
lock
mov
enter
jp
fcmovnb
stos
push
(bad)
mov
(bad)
fidivr
fwait
push
icebp
lock
jecxz
dec
retf
xchg
xchg
xchg
call
imul
call
pop
add
fwait
pop
add
call
call
push
add
fwait
pop
add
fwait
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
pushf
pop
add
pushf
pop
add
xchg
push
add
xchg
dec
add
xchg
push
add
popf
pop
add
pushf
pop
add
xchg
push
add
xchg
push
add
cwde
pop
add
sahf
pusha
add
pushf
pop
add
xchg
push
add
xchg
dec
add
cdq
pop
add
mov
pop
add
xchg
push
add
xchg
push
add
call
call
add
xchg
push
add
fwait
pop
add
mov
pop
add
xchg
push
add
xchg
push
add
popf
pop
add
mov
pop
add
nop
dec
add
xchg
push
add
mov
data16
cdq
pop
add
xchg
push
add
xchg
push
add
mov
push
add
xchg
push
add
xchg
push
add
mov
push
add
xchg
push
add
xchg
push
add
movs
addr16
movs
push
add
xchg
dec
add
xchg
push
add
cmps
push
jmp
add
xchg
push
add
cwde
pop
add
cmps
imul
mov
lahf
popf
call
rcl
(bad)
jmp
in
in
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
mov
enter
jp
fcmovnb
stos
push
(bad)
mov
(bad)
fidivr
fwait
push
icebp
icebp
jmp
in
dec
retf
xchg
xchg
(bad)
call
imul
call
pop
add
lahf
fs
fwait
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
call
call
dec
add
xchg
push
add
pushf
pop
add
pushf
pop
add
xchg
push
add
nop
dec
add
xchg
push
add
popf
pop
add
fwait
pop
add
xchg
push
add
xchg
dec
add
xchg
push
add
sahf
pop
add
fwait
pop
add
xchg
dec
add
nop
dec
add
cwde
pop
add
lahf
popa
add
pushf
pop
add
xchg
push
add
nop
dec
add
call
call
push
add
nop
dec
add
fwait
pop
add
mov
pop
add
xchg
dec
add
nop
dec
add
pushf
pop
add
mov
pop
add
nop
dec
add
xchg
push
add
mov
data16
cwde
pop
add
nop
dec
add
xchg
push
add
mov
addr16
cwde
push
add
nop
dec
add
xchg
push
add
mov
addr16
xchg
push
add
nop
dec
add
xchg
push
add
movs
data16
movs
push
add
nop
dec
add
xchg
push
add
cmps
imul
call
dec
add
cwde
pop
add
cmps
imul
lahf
ins
adc
xchg
nop
mov
mov
aad
(bad)
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
out
out
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
push
mov
enter
jp
fcmovnb
stos
push
(bad)
mov
(bad)
fidivr
fwait
push
icebp
lock
in
dec
retf
retf
call
addr16
movs
imul
lahf
data16
sahf
arpl
call
push
jmp
push
add
xchg
push
add
xchg
push
add
popf
pop
add
sahf
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
lahf
pusha
add
lahf
pusha
add
xchg
push
add
xchg
push
add
cdq
pop
add
mov
pusha
add
xchg
push
add
xchg
push
add
fwait
pop
add
mov
popa
add
xchg
push
add
xchg
push
add
sahf
pop
add
mov
bound
call
push
add
lahf
popa
add
movs
push
add
xchg
push
add
xchg
push
add
mov
push
jmp
push
add
xchg
push
add
mov
imul
mov
pop
add
cdq
pop
add
movs
push
add
sahf
pusha
add
xchg
pop
add
cdq
pop
add
cmps
imul
test
pusha
add
xchg
pop
add
cdq
pop
add
cmps
ins
add
stos
outs
add
popf
pop
add
cwde
pop
add
fwait
pop
add
stos
outs
add
stos
outs
add
pushf
pop
add
cwde
pop
add
popf
pop
add
stos
jo
jmp
pop
add
cdq
pop
add
lahf
pusha
add
lods
jno
jmp
pushf
call
out
(bad)
jmp
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
in
in
in
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
lock
push
mov
enter
jp
fcmovnb
stos
push
xlat
mov
(bad)
fidivr
fwait
push
repnz
jmp
in
dec
retf
retf
xchg
nop
jmp
ins
add
mov
gs
mov
ins
add
cmps
ins
add
cdq
pop
add
xchg
push
add
xchg
push
add
sahf
pusha
add
sahf
popa
add
cwde
pop
add
xchg
push
add
cwde
pop
add
mov
bound
call
pop
add
pushf
pop
add
mov
arpl
call
pop
add
popf
pop
add
mov
fs
cdq
pop
add
cdq
pop
add
mov
push
add
cdq
pop
add
call
jmp
gs
fwait
pop
add
call
jmp
addr16
pushf
pop
add
fwait
pop
add
movs
push
add
movs
addr16
fwait
pop
add
pushf
pop
add
test
add
stos
outs
add
mov
pop
add
popf
pop
add
stos
outs
add
lods
jo
jmp
pop
add
popf
pop
add
stos
jo
jmp
fs
pushf
pop
add
lahf
popa
add
lods
jb
jmp
arpl
call
add
scas
je
jmp
popa
add
popf
pop
add
mov
jne
jmp
sahf
pushf
call
rcl
(bad)
call
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
out
push
mov
enter
jnp
fcmovnb
stos
push
xlat
mov
(bad)
fidivr
fwait
push
repnz
jmp
in
dec
retf
retf
call
add
movs
ins
add
mov
fs
lahf
fs
movs
push
jmp
add
xchg
push
add
xchg
push
add
pushf
pop
add
popf
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
lahf
pop
add
sahf
pusha
add
xchg
push
add
xchg
push
add
cdq
pop
add
mov
pusha
add
xchg
push
add
xchg
push
add
fwait
pop
add
mov
popa
add
xchg
push
add
xchg
push
add
popf
pop
add
mov
popa
add
xchg
push
add
xchg
push
add
sahf
pusha
add
movs
addr16
mov
push
add
xchg
push
add
mov
imul
call
push
add
mov
push
jmp
push
add
cdq
pop
add
movs
push
add
sahf
pusha
add
cwde
pop
add
cdq
pop
add
cmps
push
jmp
pop
add
cwde
pop
add
cdq
pop
add
cmps
imul
test
pop
add
cwde
pop
add
fwait
pop
add
test
outs
add
pushf
pop
add
xchg
pop
add
popf
pop
add
stos
jo
jmp
pop
add
cwde
pop
add
lahf
pusha
add
lods
jno
jmp
nop
mov
mov
aam
(bad)
fcomp
fdivr
fcomp
fdivr
fcomp
fdivr
fcomp
fdivr
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
in
in
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
call
push
out
out
push
mov
enter
jnp
fcmovnb
stos
push
xlat
mov
(bad)
fidivr
fwait
push
repnz
jmp
in
dec
retf
retf
call
gs
mov
gs
pushf
bound
call
add
mov
popa
add
xchg
push
add
xchg
push
add
call
call
push
add
xchg
push
add
fwait
pop
add
fwait
pop
add
xchg
push
add
xchg
dec
add
xchg
push
add
pushf
pop
add
fwait
pop
add
xchg
push
add
xchg
dec
add
xchg
push
add
popf
pop
add
call
call
pop
add
sahf
pusha
add
fwait
pop
add
xchg
dec
add
nop
dec
add
call
call
push
add
nop
dec
add
call
call
add
nop
dec
add
pushf
pop
add
mov
pop
add
nop
dec
add
xchg
push
add
lahf
popa
add
mov
pop
add
nop
dec
add
xchg
push
add
mov
data16
cwde
push
add
nop
dec
add
xchg
push
add
mov
addr16
xchg
push
add
nop
dec
add
xchg
push
add
mov
addr16
xchg
push
add
nop
dec
add
xchg
push
add
movs
push
add
xchg
push
add
nop
dec
add
xchg
push
add
cmps
imul
call
iret
iret
jmp
in
(bad)
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
jmp
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
jmp
(bad)
call
call
out
push
mov
enter
jnp
fcmovnb
stos
push
xlat
mov
(bad)
fidivr
fwait
push
repnz
jmp
in
dec
int3
retf
call
add
mov
gs
pushf
bound
call
push
add
popf
popa
add
cdq
pop
add
xchg
push
add
call
call
push
add
xchg
push
add
fwait
pop
add
call
call
push
add
pushf
pop
add
call
call
push
add
popf
pop
add
fwait
pop
add
xchg
push
add
nop
dec
add
cwde
pop
add
sahf
pusha
add
fwait
pop
add
xchg
push
add
nop
dec
add
call
call
push
add
nop
push
add
call
call
push
add
xchg
dec
add
pushf
pop
add
mov
pop
add
xchg
dec
add
xchg
push
add
mov
gs
cwde
pop
add
xchg
dec
add
xchg
push
add
mov
data16
cwde
pop
add
xchg
dec
add
xchg
push
add
mov
addr16
xchg
push
add
xchg
push
add
xchg
push
add
movs
data16
movs
addr16
xchg
push
add
nop
dec
add
xchg
push
add
movs
push
add
xchg
push
add
nop
push
add
xchg
pop
add
cmps
push
jmp
sahf
pushf
call
rcl
(bad)
call
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
jmp
(bad)
call
call
out
lock
out
push
mov
enter
jnp
fcmovnb
stos
push
xlat
mov
(bad)
fidivr
fwait
push
repnz
jmp
out
dec
int3
retf
call
push
add
mov
data16
lahf
data16
movs
ins
add
movs
ins
add
mov
arpl
call
pop
add
popf
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
sahf
pop
add
sahf
pusha
add
xchg
push
add
xchg
push
add
call
call
push
add
xchg
push
add
fwait
pop
add
mov
pusha
add
xchg
push
add
xchg
push
add
popf
pop
add
mov
bound
call
push
add
lahf
popa
add
mov
arpl
call
pop
add
mov
imul
call
pop
add
mov
imul
mov
pop
add
call
jmp
popa
add
cwde
pop
add
call
jmp
popa
add
cdq
pop
add
call
jmp
pusha
add
cdq
pop
add
pushf
pop
add
stos
outs
add
stos
jo
call
pop
add
sahf
pusha
add
lods
jno
jmp
pop
add
cdq
pop
add
lahf
popa
add
scas
jb
jmp
nop
(bad)
(bad)
mov
aam
(bad)
fcomp
fdivr
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
in
in
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
call
(bad)
call
call
out
out
out
out
out
out
push
mov
leave
call
shr
mov
(bad)
fidivr
pushf
push
repnz
out
dec
int
call
push
add
mov
push
add
movs
ins
add
cmps
ins
add
mov
gs
mov
pop
add
popf
pop
add
xchg
pop
add
xchg
push
add
cwde
pop
add
lahf
popa
add
sahf
pusha
add
cwde
pop
add
xchg
push
add
call
call
pop
add
cwde
pop
add
pushf
pop
add
mov
bound
call
pop
add
sahf
popa
add
movs
data16
mov
pop
add
cdq
pop
add
mov
push
add
cdq
pop
add
cdq
pop
add
mov
push
jmp
pop
add
call
jmp
data16
fwait
pop
add
pushf
pop
add
cmps
imul
stos
outs
add
mov
pop
add
pushf
pop
add
test
jo
jmp
pop
add
pushf
pop
add
test
jno
jmp
pop
add
sahf
pusha
add
stos
jno
jmp
add
pushf
pop
add
mov
jae
jmp
add
popf
pop
add
mov
je
jmp
pushf
call
in
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
call
(bad)
call
call
out
out
out
out
out
out
out
out
push
mov
leave
call
shr
mov
(bad)
fidivr
pushf
push
repnz
out
dec
int
call
addr16
movs
ins
add
mov
data16
lahf
data16
mov
imul
lahf
gs
popf
arpl
call
bound
call
push
add
xchg
push
add
xchg
push
add
pushf
pop
add
pushf
pop
add
xchg
push
add
xchg
push
add
cwde
pop
add
sahf
pop
add
popf
pop
add
xchg
push
add
xchg
push
add
call
call
push
add
xchg
push
add
fwait
pop
add
mov
pop
add
xchg
push
add
xchg
push
add
popf
pop
add
mov
pusha
add
xchg
push
add
xchg
push
add
sahf
pop
add
mov
pusha
add
xchg
push
add
xchg
push
add
mov
push
add
xchg
push
add
xchg
push
add
mov
push
call
push
add
xchg
push
add
movs
push
add
pushf
pop
add
xchg
push
add
xchg
pop
add
movs
imul
call
push
add
cdq
pop
add
cmps
imul
test
pop
add
xchg
push
add
fwait
pop
add
test
ins
add
cdq
pop
add
xchg
push
add
popf
pop
add
stos
outs
add
movs
jb
call
rcl
(bad)
call
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
jmp
(bad)
call
call
call
jmp
out
jmp
out
jmp
out
(bad)
out
out
out
push
mov
leave
call
shr
mov
(bad)
fidivr
pushf
push
repz
call
into
int
xchg
xchg
xchg
jmp
ins
add
mov
gs
sahf
gs
mov
push
call
popa
add
pushf
bound
jmp
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
call
call
dec
add
xchg
push
add
fwait
pop
add
cdq
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
pushf
pop
add
call
call
pop
add
popf
pop
add
call
call
pop
add
sahf
pusha
add
test
push
add
(bad)
dec
add
pushf
pop
add
mov
pop
add
xchg
push
add
nop
dec
add
fwait
pop
add
mov
pop
add
nop
dec
add
xchg
push
add
lahf
popa
add
mov
pop
add
xchg
push
add
xchg
push
add
mov
gs
xchg
push
add
nop
dec
add
xchg
push
add
mov
addr16
xchg
push
add
xchg
dec
add
xchg
push
add
mov
addr16
xchg
push
add
nop
dec
add
xchg
push
add
movs
push
add
xchg
push
add
xchg
dec
add
xchg
push
add
cmps
push
call
xchg
(bad)
inc
rol
aam
aam
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
in
in
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
jmp
(bad)
call
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
(bad)
out
out
out
push
mov
enter
jnp
fcmovnb
lods
push
fadd
inc
mov
(bad)
fidivr
pushf
push
repz
call
into
int
xchg
xchg
xchg
jmp
ins
add
mov
gs
lahf
gs
mov
push
call
bound
call
add
popf
pusha
add
xchg
push
add
xchg
push
add
xchg
push
add
call
call
push
add
xchg
push
add
pushf
pop
add
call
call
push
add
pushf
pop
add
call
call
pop
add
sahf
pop
add
fwait
pop
add
xchg
push
add
xchg
push
add
cwde
pop
add
mov
daa
jmp
and
sbb
add
xor
add
pop
ss
mov
call
push
add
nop
push
add
pushf
pop
add
mov
pop
add
xchg
push
add
xchg
push
add
mov
fs
cwde
pop
add
xchg
push
add
xchg
push
add
mov
data16
cwde
pop
add
xchg
push
add
xchg
push
add
mov
addr16
xchg
push
add
xchg
push
add
xchg
push
add
movs
data16
movs
addr16
xchg
push
add
xchg
push
add
xchg
push
add
cmps
push
add
xchg
push
add
xchg
push
add
cwde
pop
add
cmps
imul
call
rcl
jmp
in
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
call
call
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
call
(bad)
call
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
(bad)
out
out
out
push
mov
enter
jl
fcmovnb
lods
push
fadd
inc
mov
(bad)
fidivr
pushf
push
repz
jmp
into
int
xchg
xchg
xchg
jmp
outs
add
mov
imul
jmp
outs
add
mov
addr16
mov
ins
add
mov
push
add
xchg
push
add
xchg
push
add
pushf
pop
add
popf
pop
add
xchg
push
add
xchg
push
add
cdq
pop
add
lahf
pusha
add
popf
pop
add
xchg
push
add
xchg
push
add
call
call
push
add
xchg
push
add
popf
pop
add
mov
popa
add
xchg
push
add
xchg
push
add
sahf
pusha
or
loopne
scas
call
ror
jmp
dec
inc
jmp
sbb
call
add
cwde
pop
add
cwde
pop
add
mov
imul
call
pop
add
movs
push
add
lahf
pusha
add
cdq
pop
add
call
jmp
pusha
add
cdq
pop
add
call
jmp
pusha
add
cdq
pop
add
pushf
pop
add
stos
ins
add
stos
outs
add
popf
pop
add
cdq
pop
add
sahf
pusha
add
lods
jo
jmp
pop
add
call
jmp
je
jmp
rcl
(bad)
jmp
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
jmp
(bad)
call
call
out
out
out
out
out
out
out
out
out
out
out
out
out
out
jmp
mov
enter
jl
fcmovnb
lods
push
fadd
inc
mov
(bad)
fidivr
pushf
push
repz
jmp
call
imul
jmp
push
jmp
outs
add
cmps
outs
add
mov
push
add
movs
ins
add
movs
ins
add
cdq
pop
add
xchg
push
add
cwde
push
add
popf
pop
add
popf
pop
add
xchg
pop
add
xchg
push
add
cdq
pop
add
lahf
popa
add
sahf
pop
add
cwde
pop
add
xchg
push
add
fwait
pop
add
mov
popa
add
cwde
pop
add
cwde
pop
add
sahf
pop
add
mov
bound
call
push
add
mov
ds
les
mov
mov
call
jmp
add
fwait
pop
add
call
jmp
fs
call
jmp
ins
add
mov
pop
add
pushf
pop
add
cmps
imul
stos
outs
add
mov
pop
add
pushf
pop
add
test
outs
add
mov
pop
add
sahf
pusha
add
stos
outs
add
lods
jno
call
pop
add
mov
jb
jmp
pop
add
pushf
pop
add
mov
jae
jmp
xchg
nop
inc
rol
(bad)
(bad)
(bad)
(bad)
fcmovu
(bad)
fcmovu
(bad)
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
in
in
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
jmp
(bad)
call
call
out
out
out
out
out
out
out
out
out
out
out
out
out
out
jmp
mov
enter
jl
fcmovnb
lods
push
fadd
inc
mov
(bad)
fidivr
pushf
push
hlt
repz
jmp
call
push
add
mov
push
add
movs
ins
add
movs
ins
add
mov
gs
lahf
gs
mov
imul
call
call
pop
add
call
call
push
add
pushf
pop
add
fwait
pop
add
xchg
push
add
xchg
push
add
cwde
pop
add
popf
pop
add
fwait
pop
add
xchg
push
add
xchg
push
add
call
call
add
xchg
dec
add
iret
mov
call
inc
inc
call
adc
call
sbb
dec
mov
dec
push
add
xchg
push
add
sahf
pop
add
mov
pop
add
xchg
push
add
xchg
push
add
mov
addr16
fwait
pop
add
xchg
push
add
xchg
push
add
mov
push
add
xchg
push
add
xchg
push
add
mov
push
call
push
add
xchg
push
add
cmps
imul
call
push
add
cdq
pop
add
cmps
imul
cmps
push
call
push
add
fwait
pop
add
test
jo
call
rcl
jmp
out
(bad)
jmp
(bad)
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
call
call
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
call
(bad)
call
call
out
out
out
out
out
out
out
out
out
out
out
out
out
out
jmp
mov
jmp
rol
call
ret
hlt
fadd
inc
mov
(bad)
fidivr
fwait
push
hlt
hlt
(bad)
jmp
jmp
call
addr16
movs
outs
add
mov
push
add
movs
ins
add
movs
ins
add
lahf
data16
popf
fs
sahf
fs
mov
push
call
add
xchg
push
add
cdq
pop
add
cdq
pop
add
xchg
push
add
xchg
dec
add
xchg
push
add
call
call
push
add
xchg
push
add
fwait
pop
add
call
call
push
add
popf
pop
add
call
call
into
mov
call
adc
inc
add
push
xor
inc
(bad)
inc
sbb
fwait
pop
add
xchg
push
add
xchg
push
add
fwait
pop
add
mov
pop
add
xchg
dec
add
xchg
push
add
lahf
pusha
add
mov
pop
add
xchg
push
add
xchg
push
add
mov
gs
xchg
push
add
nop
dec
add
xchg
push
add
mov
gs
xchg
push
add
nop
dec
add
xchg
push
add
mov
addr16
xchg
push
add
nop
dec
add
xchg
push
add
movs
push
add
xchg
push
add
xchg
dec
add
xchg
push
add
cmps
push
adc
call
aam
(bad)
jmp
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
call
(bad)
call
call
out
out
out
out
out
out
out
out
out
out
out
out
out
out
jmp
mov
jmp
rol
call
ret
hlt
fadd
inc
mov
(bad)
fidivr
fwait
push
hlt
hlt
(bad)
jmp
jmp
xchg
xchg
jmp
outs
add
mov
imul
jmp
add
lahf
data16
sahf
gs
sahf
gs
mov
push
call
push
add
xchg
push
add
cdq
pop
add
cdq
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
fwait
pop
add
cdq
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
fwait
pop
add
cdq
pop
add
xchg
push
add
xchg
push
add
cwde
push
add
popf
pop
add
call
push
scas
push
ss
add
inc
add
inc
cmp
dec
add
popf
pop
add
xchg
push
add
xchg
push
add
pushf
pop
add
mov
pop
add
xchg
push
add
xchg
push
add
lahf
popa
add
mov
pop
add
xchg
push
add
xchg
push
add
mov
fs
cdq
pop
add
xchg
push
add
xchg
push
add
mov
gs
xchg
push
add
xchg
push
add
xchg
push
add
movs
gs
movs
addr16
xchg
push
add
xchg
push
add
xchg
push
add
movs
push
add
xchg
push
add
xchg
push
add
cwde
pop
add
cmps
imul
call
ret
xlat
xlat
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
(bad)
fcos
(bad)
fcos
(bad)
fcos
in
in
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
call
(bad)
call
call
call
jmp
out
jmp
out
jmp
out
jmp
out
(bad)
out
out
out
jmp
mov
jmp
rol
call
ret
hlt
fadd
inc
mov
(bad)
fidivr
fwait
push
cmc
hlt
(bad)
in
jmp
call
rcl
call
imul
jmp
add
mov
outs
add
cmps
outs
add
mov
push
add
movs
ins
add
movs
ins
add
mov
pusha
add
xchg
push
add
fwait
pop
add
pushf
pop
add
xchg
push
add
xchg
push
add
cwde
pop
add
popf
pop
add
pushf
pop
add
xchg
push
add
xchg
push
add
call
call
push
add
xchg
push
add
pushf
pop
add
mov
pop
add
xchg
push
add
fcmovb
cmps
(bad)
jg
jg
sbb
sbb
add
add
pop
pop
pop
dec
mov
call
bound
call
pop
add
mov
push
add
cwde
pop
add
cdq
pop
add
movs
addr16
cmps
push
call
pop
add
call
jmp
pusha
add
cdq
pop
add
call
jmp
pop
add
cdq
pop
add
pushf
pop
add
test
outs
add
popf
pop
add
call
jmp
outs
add
pushf
pop
add
call
jmp
adc
call
rcl
jmp
out
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
jmp
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
jmp
(bad)
call
call
call
jmp
out
jmp
out
jmp
out
(bad)
out
out
out
jmp
mov
jmp
rol
call
ret
hlt
fadd
inc
mov
(bad)
fidivr
fwait
push
cmc
hlt
(bad)
in
jmp
call
rcl
call
push
jmp
outs
add
movs
ins
add
mov
jo
jmp
imul
mov
imul
jmp
imul
call
pop
add
pushf
pop
add
xchg
push
add
xchg
push
add
cdq
pop
add
popf
pop
add
popf
pop
add
xchg
push
add
xchg
push
add
call
call
pop
add
xchg
push
add
pushf
pop
add
mov
pusha
add
mov
(bad)
int3
inc
inc
inc
add
add
add
dec
dec
dec
(bad)
mov
inc
or
jmp
pop
add
cdq
pop
add
mov
push
add
call
jmp
add
lahf
popa
add
call
jmp
ins
add
lahf
popa
add
call
jmp
ins
add
lahf
popa
add
call
jmp
outs
add
lahf
pusha
add
fwait
pop
add
lahf
popa
add
lods
jo
jmp
pop
add
fwait
pop
add
mov
jb
jmp
mov
aad
jmp
jmp
out
out
out
push
lock
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
jmp
(bad)
call
call
call
jmp
out
jmp
out
(bad)
out
out
out
jmp
mov
jmp
rol
call
ret
hlt
fadd
inc
mov
(bad)
fidivr
fwait
push
cmc
cmc
(bad)
in
in
in
call
rcl
call
imul
jmp
imul
mov
outs
add
movs
outs
add
mov
push
add
movs
ins
add
movs
ins
add
lahf
addr16
sahf
data16
xchg
pop
add
call
call
add
xchg
push
add
fwait
pop
add
call
call
push
add
fwait
pop
add
call
call
pop
add
sahf
pop
add
call
call
push
push
inc
add
inc
add
mov
ins
inc
add
popf
pop
add
xchg
push
add
xchg
push
add
popf
pop
add
mov
pop
add
xchg
push
add
xchg
push
add
mov
data16
call
call
gs
movs
addr16
call
call
gs
movs
push
add
xchg
push
add
xchg
pop
add
movs
push
add
cdq
pop
add
xchg
push
add
cdq
pop
add
cmps
imul
cmps
imul
call
pop
add
test
outs
adc
xchg
xchg
xchg
inc
ret
ret
(bad)
fcomp
fdivr
(bad)
fdivr
fstp
(bad)
fstp
(bad)
fstp
(bad)
(bad)
fdivr
(bad)
fdivr
(bad)
fdivr
(bad)
fdivr
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
out
out
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
jmp
(bad)
call
call
call
jmp
out
(bad)
out
out
out
jmp
mov
jmp
rol
call
ret
hlt
fadd
inc
mov
(bad)
fnstcw
call
in
in
call
rcl
call
imul
jmp
imul
mov
outs
add
movs
outs
add
mov
addr16
lahf
addr16
movs
ins
add
mov
data16
popf
gs
cdq
pop
add
cwde
pop
add
cwde
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
cdq
pop
add
cwde
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
call
call
dec
add
xchg
push
add
fwait
pop
add
call
call
inc
add
jmp
es
mov
call
pusha
add
call
call
pop
add
lahf
popa
add
cdq
pop
add
xchg
dec
add
xchg
push
add
sahf
pop
add
mov
push
add
nop
dec
add
xchg
push
add
mov
fs
xchg
push
add
nop
dec
add
xchg
push
add
mov
fs
xchg
push
add
nop
dec
add
xchg
push
add
mov
gs
xchg
push
add
nop
dec
add
xchg
push
add
movs
addr16
mov
push
add
nop
dec
add
xchg
push
add
movs
push
adc
call
rcl
(bad)
call
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
jmp
(bad)
call
call
out
lock
out
jmp
mov
jmp
rol
call
ret
hlt
fadd
inc
mov
(bad)
fdivr
fwait
push
div
(bad)
in
in
in
call
aam
call
imul
jmp
ins
add
mov
outs
add
movs
outs
add
mov
imul
jmp
add
mov
gs
popf
arpl
call
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
cdq
pop
add
xchg
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
call
call
push
add
cwde
push
add
fwait
pop
add
scas
jl
dec
leave
sar
sbb
inc
add
inc
add
jmp
push
jmp
push
call
pusha
add
call
call
pop
add
mov
pop
add
xchg
push
add
xchg
push
add
sahf
pusha
add
mov
pop
add
nop
push
add
xchg
push
add
sahf
pusha
add
mov
push
add
xchg
push
add
xchg
push
add
mov
data16
xchg
push
add
xchg
push
add
xchg
push
add
mov
data16
xchg
push
add
xchg
push
add
xchg
push
add
movs
push
add
xchg
push
add
xchg
push
add
cwde
pop
add
cmps
push
jmp
mov
xlat
(bad)
in
in
in
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
lock
lock
lock
lock
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
call
(bad)
call
call
out
jmp
mov
jmp
rol
call
ret
scas
push
fld
inc
mov
call
mov
call
in
in
call
aam
call
push
jmp
jo
jmp
add
cmps
jno
jmp
ins
add
mov
imul
cmps
outs
add
cmps
outs
add
mov
push
add
fwait
pop
add
call
call
add
pushf
pop
add
jo
add
jb
add
cwde
push
add
cdq
pop
add
popf
pop
add
pushf
pop
add
xchg
push
add
xchg
push
add
fwait
pop
add
popf
pop
add
shl
cmp
add
inc
add
dec
or
push
push
inc
dec
pop
add
mov
popa
add
xchg
pop
add
xchg
push
add
mov
data16
mov
pop
add
xchg
pop
add
mov
gs
xchg
pop
add
xchg
push
add
xchg
push
add
fwait
popa
add
popf
fs
xchg
pop
add
xchg
push
add
xchg
pop
add
mov
imul
pushf
pop
add
cwde
pop
add
fwait
pop
add
test
add
test
pop
add
cdq
pop
add
sahf
pop
add
stos
outs
add
test
pop
add
call
jmp
jb
call
(bad)
(bad)
fcos
(bad)
fdivrp
(bad)
fdivrp
(bad)
fdivrp
fstp
(bad)
fstp
(bad)
fstp
(bad)
fstp
(bad)
fstp
(bad)
fstp
(bad)
fstp
(bad)
(bad)
fdivr
out
out
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
jmp
(bad)
call
out
out
jmp
mov
jmp
rol
call
ret
scas
push
fld
inc
mov
call
mov
call
in
in
call
aam
call
imul
cmps
je
jmp
outs
add
movs
outs
add
cmps
jb
jmp
ins
add
mov
ins
add
cmps
jo
jmp
imul
mov
imul
sahf
bound
call
push
add
xchg
push
add
xchg
push
add
mov
dec
sbb
and
add
cmp
call
pop
add
pushf
pop
add
xchg
push
add
xchg
push
add
fwait
pop
add
cmps
ins
adc
(bad)
(bad)
jmp
das
xor
add
add
add
add
ds
ret
sar
xor
add
lahf
pusha
add
mov
popa
add
cwde
pop
add
cwde
pop
add
lahf
bound
jmp
popa
add
xchg
push
add
xchg
push
add
cwde
pop
add
xchg
pop
add
mov
inc
add
mov
dec
push
add
xchg
dec
bound
jmp
pop
add
cwde
pop
add
pushf
pop
add
test
outs
add
sahf
pusha
add
call
jmp
ins
add
popf
pop
add
fwait
pop
add
mov
jo
jmp
lahf
popf
call
rcl
(bad)
jmp
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
in
in
in
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
jmp
push
out
out
jmp
mov
jmp
rol
call
ret
scas
push
fld
inc
mov
call
mov
call
out
out
call
aad
call
push
jmp
outs
add
mov
outs
add
cmps
jo
jmp
ins
add
mov
imul
movs
outs
add
movs
outs
add
mov
push
add
lahf
gs
xchg
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
into
mov
call
retf
ret
xor
add
pop
xor
call
pop
add
xchg
push
add
xchg
push
add
xchg
pop
add
mov
mov
dec
or
add
add
add
add
mov
test
jne
add
xchg
push
add
call
call
push
add
xchg
push
add
fwait
pop
add
popf
pusha
add
xchg
pop
add
mov
test
inc
dec
add
jne
add
ins
cmp
jmp
add
jno
add
je
add
outs
inc
add
jno
add
ja
add
mov
xchg
pop
add
(bad)
push
add
mov
call
add
movs
push
add
xchg
push
add
cwde
pop
add
cmps
push
add
xchg
push
add
xchg
push
add
call
jmp
mov
fdivr
in
in
in
push
repnz
repnz
repnz
repnz
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
lock
lock
lock
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
lock
push
mov
jmp
rol
call
ret
scas
push
fld
inc
mov
call
mov
call
out
out
call
aad
call
push
jmp
jo
jmp
add
cmps
jno
jmp
ins
add
mov
push
jmp
outs
add
mov
addr16
mov
imul
call
dec
add
xchg
dec
add
int
xchg
mov
ret
sar
inc
inc
call
add
dec
sub
call
push
add
nop
dec
add
xchg
push
add
fadd
pushf
jmp
inc
add
inc
add
call
push
push
inc
rol
popa
dec
xor
dec
push
add
call
dec
dec
add
xchg
push
add
xchg
pop
add
mov
(bad)
jns
add
jb
add
jo
add
addr16
add
dec
sub
dec
call
add
push
xor
call
add
push
sub
call
add
je
add
adc
test
inc
push
add
mov
fs
xchg
push
add
xchg
dec
add
xchg
push
add
mov
fs
xchg
push
add
nop
dec
add
xchg
push
add
movs
addr16
mov
mov
fdivr
out
out
out
push
repnz
repz
repnz
repnz
repnz
repnz
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
lock
lock
lock
lock
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
jmp
jmp
out
out
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
jecxz
jecxz
in
in
out
out
jmp
jmp
jmp
push
lock
push
mov
jmp
rol
call
ret
scas
push
fld
inc
mov
call
mov
cdq
(bad)
clc
clc
idiv
out
out
out
call
aad
call
outs
adc
lods
jle
jmp
jne
jmp
jae
jmp
ins
add
mov
imul
movs
outs
add
movs
outs
add
mov
imul
jmp
add
xchg
push
add
xchg
push
add
xchg
dec
add
shl
pop
call
dec
int3
retf
popa
pop
call
and
dec
push
add
movs
outs
sub
aam
(bad)
sbb
inc
add
inc
add
call
pop
push
xor
dec
dec
add
lea
call
push
add
xchg
inc
add
xchg
(bad)
js
add
data16
call
add
push
xor
dec
add
jmp
and
push
jmp
aaa
jmp
cmp
call
sub
pop
cmp
jmp
or
jo
add
jns
add
or
mov
jmp
data16
xchg
push
add
xchg
push
add
xchg
push
add
cmps
addr16
movs
data16
xchg
push
add
xchg
push
add
cdq
pop
add
cmps
imul
jmp
fcos
out
out
out
push
repz
repz
repz
repz
repnz
repnz
repnz
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
lock
lock
lock
lock
out
out
out
(bad)
out
out
out
(bad)
in
in
in
jmp
out
(bad)
(bad)
fdivr
xlat
xlat
xlat
call
xlat
xlat
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
aad
call
aad
call
aad
(bad)
fcomp
fdivr
loopne
loopne
call
jmp
jmp
lock
mov
jmp
rol
call
ret
scas
push
fld
inc
mov
dec
mov
push
clc
idiv
lock
out
call
(bad)
(bad)
call
jb
push
sub
jmp
jle
jmp
jb
jmp
add
cmps
jno
jmp
add
mov
outs
add
pushf
pusha
add
xchg
push
add
xchg
push
add
xchg
push
add
shl
inc
add
(bad)
ds
leave
enter
jo
pop
adc
push
inc
add
(bad)
mov
call
add
inc
add
jmp
push
push
inc
inc
add
or
dec
add
jg
add
jp
add
ja
add
js
add
jno
add
arpl
add
push
sub
inc
add
dec
xor
push
or
(bad)
pop
or
test
or
mov
mov
inc
xchg
and
mov
call
jne
inc
jmp
push
push
add
jg
add
(bad)
push
add
mov
ins
add
pushf
pop
add
call
jmp
ins
add
pushf
pop
add
call
jmp
jb
jmp
fcos
out
out
out
push
repz
repz
repz
repz
repz
repnz
repnz
repnz
repnz
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
lock
lock
lock
lock
out
out
out
jmp
loope
(bad)
fstp
xlat
call
int
dec
mov
retf
mov
int
(bad)
dec
mov
retf
(bad)
retf
(bad)
retf
(bad)
retf
dec
(bad)
iret
int
(bad)
fcmovnu
(bad)
out
out
jmp
(bad)
jmp
jmp
mov
jmp
rol
call
les
inc
mov
dec
mov
push
clc
idiv
icebp
lock
call
(bad)
(bad)
call
jb
push
xor
mov
das
push
sub
scas
sub
scas
jle
jmp
jnp
jmp
outs
add
mov
ins
add
cmps
jo
call
push
add
xchg
push
add
xchg
push
add
shl
inc
add
inc
add
jmp
cs
mov
nop
mov
and
push
push
sbb
call
leave
mov
inc
add
inc
add
call
pop
pop
(bad)
mov
cmp
(bad)
jge
add
jo
add
imul
add
push
add
addr16
jmp
add
pop
xor
add
push
xor
inc
add
inc
sub
dec
or
mov
push
jmp
add
cmps
data16
mov
mov
call
xchg
or
fsub
inc
(bad)
fdiv
push
pop
inc
sbb
pusha
aaa
add
jbe
add
mov
call
imul
popf
pop
add
cdq
pop
add
sahf
pop
add
stos
ins
add
test
pop
add
call
jmp
jb
jmp
fcmovu
(bad)
out
out
out
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
repz
repz
repz
repnz
repnz
repnz
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
lock
in
jmp
inc
mov
jb
mov
mov
mov
mov
xchg
jle
mov
mov
mov
mov
mov
(bad)
fcmovu
jmp
out
(bad)
jmp
jmp
jmp
push
lock
mov
jmp
rol
call
les
inc
mov
dec
mov
push
clc
clc
push
lock
call
xlat
(bad)
call
jae
push
xor
mov
xor
mov
das
push
sub
scas
jg
jmp
sub
jmp
ud0
outs
add
lahf
gs
xchg
push
add
xchg
push
add
xchg
dec
add
iret
mov
call
pop
inc
add
inc
add
inc
add
call
push
push
jmp
sahf
call
mov
adc
add
add
add
add
jno
jno
xchg
lea
push
add
outs
dec
adc
fs
sbb
push
xor
dec
add
inc
and
add
aas
and
inc
push
dec
or
dec
xor
jmp
call
sub
push
pop
add
mov
jae
dec
xchg
call
xchg
pop
call
sahf
sub
fsub
push
push
push
cmp
dec
sub
jmp
add
jge
add
xchg
pop
add
mov
push
add
xchg
push
add
xchg
push
add
movs
data16
mov
push
add
xchg
push
add
cwde
pop
add
movs
push
adc
(bad)
fcmovu
(bad)
lock
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
repz
repz
repz
repz
repnz
repnz
repnz
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
(bad)
in
jmp
inc
xchg
jg
mov
and
and
and
test
ror
(bad)
mov
and
and
test
ret
ret
fcmovnu
(bad)
call
jmp
(bad)
jmp
push
lock
mov
jmp
rol
call
les
inc
mov
dec
mov
push
stc
clc
push
icebp
icebp
(bad)
fcom
xlat
call
and
mov
cmp
mov
push
xor
mov
xor
mov
xor
mov
das
jmp
sub
mov
sub
scas
jg
jmp
and
lods
jp
jmp
push
add
xchg
dec
add
nop
dec
add
iret
mov
call
pop
dec
or
inc
add
inc
add
inc
add
call
adc
call
out
(bad)
jns
jns
add
add
add
add
or
or
mov
dec
inc
jmp
add
push
sub
(bad)
jnp
daa
call
outs
inc
push
cmp
push
push
sub
push
sbb
call
jbe
call
call
mov
jmp
pop
add
scas
ins
add
les
add
aam
sbb
(bad)
fisubr
push
push
inc
push
call
add
jne
add
xchg
pop
add
popf
popa
add
xchg
push
add
xchg
dec
add
xchg
push
add
mov
arpl
call
dec
add
xchg
push
add
movs
data16
lahf
imul
fcmovnu
(bad)
lock
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
repz
repz
repz
repz
repnz
repnz
repnz
repnz
icebp
icebp
(bad)
out
jmp
inc
xchg
jle
mov
test
mov
test
mov
xchg
jno
mov
test
mov
test
mov
ret
ret
(bad)
fcmovnu
(bad)
call
jmp
(bad)
jmp
jmp
jmp
push
mov
jmp
rol
call
les
inc
mov
dec
mov
push
stc
clc
push
icebp
icebp
(bad)
(bad)
fdivr
pushf
call
mov
cmp
mov
cmp
mov
cmp
mov
aaa
push
xchg
push
xor
mov
xor
mov
xor
mov
xor
scas
sub
scas
sub
mov
sub
mov
sub
sahf
gs
call
mov
call
pop
jmp
and
inc
push
push
inc
add
inc
add
inc
add
dec
or
(bad)
jg
jg
xor
xor
add
add
add
add
xor
ret
sar
es
and
or
sbb
or
dec
dec
xor
fnstsw
xor
retf
inc
call
(bad)
nop
or
mov
push
jmp
jp
(bad)
jp
sub
pusha
dec
xor
rcr
add
fwait
pop
add
test
add
mov
mov
call
xchg
or
(bad)
mov
dec
(bad)
fidivr
jb
dec
xor
call
push
add
mov
call
add
xchg
push
add
xchg
pop
add
movs
addr16
movs
data16
xchg
push
add
xchg
push
add
cdq
pop
add
cmps
imul
jmp
fcmovnu
push
icebp
icebp
push
cmc
cmc
push
div
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
repz
repz
repz
repnz
repnz
repnz
repnz
out
in
in
inc
fwait
test
mov
mov
mov
mov
mov
lds
ins
(bad)
mov
mov
mov
mov
iret
(bad)
fcmovnu
(bad)
call
jmp
(bad)
jmp
jmp
jmp
jmp
icebp
icebp
lock
mov
jmp
rol
call
les
inc
mov
dec
mov
push
stc
clc
push
repnz
(bad)
fdivr
pushf
call
mov
inc
push
cmp
mov
cmp
mov
cmp
mov
cmp
mov
aaa
push
test
push
xor
mov
xor
mov
xor
mov
xor
mov
xor
cmps
jb
jmp
bound
call
mov
call
pop
jmp
cs
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
(bad)
(bad)
mov
sahf
pushf
inc
push
push
call
leave
(bad)
call
movs
cmp
rcr
or
int3
pop
dec
mov
(bad)
mov
imul
sahf
bound
jmp
jp
call
sub
(bad)
mov
add
pushf
pop
add
mov
je
dec
test
dec
pop
call
fwait
sbb
fsub
push
(bad)
mov
push
aaa
dec
add
ins
aas
add
mov
call
add
cdq
pop
add
popf
pop
add
test
imul
pushf
pop
add
call
jmp
jo
call
retf
(bad)
(bad)
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loope
loope
in
in
in
push
repz
repz
repz
repnz
out
in
in
inc
fwait
test
ror
inc
lea
ror
inc
xchg
ja
mov
lea
mov
lea
ror
(bad)
(bad)
fdivr
call
in
in
(bad)
jmp
jmp
jmp
jmp
icebp
icebp
lock
mov
jmp
rol
call
les
inc
mov
dec
mov
push
stc
stc
push
repnz
(bad)
fdivr
pushf
call
mov
mov
mov
inc
push
push
mov
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
xor
push
xchg
mov
xor
test
outs
add
mov
ret
push
push
pop
push
xor
xor
or
add
add
add
add
add
add
add
add
add
add
add
add
add
and
xor
jmp
cs
daa
sub
pop
pop
pop
call
adc
call
mov
call
lahf
das
dec
cwde
adc
int
add
retf
inc
add
lods
outs
add
sahf
bound
jmp
jnp
jmp
xor
popf
add
xchg
lahf
popa
add
popf
pop
add
scas
outs
add
ret
add
call
xchg
push
call
mov
dec
call
mov
jmp
dec
dec
pop
jmp
inc
pusha
add
xchg
pop
add
cwde
pop
add
pushf
pop
add
test
add
cmps
push
call
pop
add
lahf
pusha
add
stos
ins
add
movs
jno
jmp
(bad)
(bad)
(bad)
in
in
in
push
lock
icebp
icebp
push
icebp
icebp
push
lock
lock
lock
lock
lock
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
repnz
hlt
hlt
push
repz
repz
repz
out
in
in
inc
cwde
jg
mov
mov
mov
mov
mov
xchg
jb
mov
mov
mov
mov
mov
(bad)
(bad)
fdivr
call
in
in
(bad)
in
in
in
(bad)
jmp
jmp
repnz
icebp
push
mov
jmp
rol
call
lds
inc
mov
dec
mov
push
cli
stc
push
repz
(bad)
fcos
popf
fwait
call
mov
mov
inc
push
mov
mov
inc
push
mov
push
xchg
mov
cmp
mov
cmp
mov
aaa
push
test
push
sbb
mov
push
(bad)
fadd
mov
(bad)
cmp
cmp
cmp
daa
daa
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
inc
jmp
enter
movs
inc
call
popf
cs
xchg
adc
retf
mov
inc
add
mov
add
mov
pusha
add
mov
add
jne
daa
jmp
cs
cwde
daa
jmp
pop
add
lods
push
dec
xchg
(bad)
fbld
cmp
loopne
dec
(bad)
fdiv
dec
adc
push
sub
add
mov
dec
push
add
xchg
push
add
mov
fs
xchg
push
add
xchg
push
add
cwde
pop
add
movs
addr16
mov
movs
mov
push
repnz
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
in
in
inc
call
mov
mov
mov
lea
(bad)
xchg
jae
mov
mov
mov
mov
lea
rol
(bad)
(bad)
fstp
(bad)
call
in
in
(bad)
in
in
in
(bad)
in
in
in
push
icebp
icebp
push
mov
jmp
rol
call
lds
inc
mov
dec
mov
push
cli
stc
push
hlt
hlt
(bad)
fcmovu
(bad)
popf
fwait
call
(bad)
dec
push
mov
mov
inc
push
mov
mov
inc
push
aas
push
mov
push
xchg
push
cmp
scas
jle
jmp
add
fadd
mov
inc
inc
inc
inc
(bad)
aas
aas
aas
dec
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
sbb
ror
scas
(bad)
fdivr
call
movs
dec
dec
xchg
pop
inc
test
push
data16
fwait
pop
add
stos
ins
add
cwde
jne
dec
sub
rcl
push
jno
call
je
dec
test
cmps
pushf
je
ret
(bad)
mov
inc
sub
dec
es
jo
add
mov
dec
dec
add
xchg
push
add
mov
arpl
call
push
add
xchg
push
add
mov
push
call
retf
retf
jmp
loopne
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
jecxz
jmp
jecxz
jmp
jecxz
jmp
jecxz
(bad)
out
out
out
push
cmc
cmc
push
cmc
cmc
push
hlt
hlt
push
hlt
hlt
push
out
out
inc
call
mov
mov
mov
lea
(bad)
xchg
jae
mov
mov
mov
mov
lea
rol
(bad)
(bad)
fstp
(bad)
jmp
in
in
(bad)
in
in
in
(bad)
in
in
in
push
icebp
icebp
push
mov
jmp
rol
call
lds
inc
mov
dec
mov
push
cli
cli
push
hlt
hlt
(bad)
fcmovu
(bad)
popf
fwait
call
xchg
dec
(bad)
mov
mov
mov
dec
push
mov
mov
inc
push
mov
mov
inc
push
mov
push
cmp
push
test
cmps
jb
jmp
(bad)
mov
dec
dec
dec
dec
dec
dec
jmp
daa
daa
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
iret
mov
(bad)
fnstsw
jae
rcr
adc
stos
imul
pushf
pop
add
mov
jnp
jmp
xor
xchg
jb
call
aaa
pop
inc
ud0
push
call
jmp
das
call
xor
push
dec
cmp
push
inc
aaa
jmp
inc
dec
sbb
inc
and
jmp
add
adc
mov
dec
push
add
mov
gs
xchg
push
add
xchg
push
add
cdq
pop
add
movs
push
adc
(bad)
fcomp
fdivr
in
in
in
push
repnz
repnz
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
lock
lock
lock
lock
repz
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
out
out
dec
mov
jbe
enter
enter
enter
leave
fwait
js
int3
mov
jbe
enter
enter
enter
enter
rol
(bad)
(bad)
(bad)
fdivrp
jmp
(bad)
in
in
in
(bad)
in
in
in
push
repnz
push
mov
jmp
rol
call
lds
inc
mov
dec
mov
push
cli
cli
push
hlt
hlt
(bad)
fcmovu
(bad)
sahf
pushf
call
xchg
push
(bad)
mov
nop
dec
(bad)
mov
nop
dec
(bad)
mov
mov
mov
inc
push
mov
mov
mov
mov
mov
inc
push
mov
mov
jmp
jo
(bad)
ffree
mov
dec
dec
call
push
dec
dec
(bad)
aas
aas
aas
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
cmp
jns
jbe
jmp
ret
retf
loopne
fwait
(bad)
ffreep
xchg
(bad)
fnstsw
jns
ret
xchg
dec
jmp
push
ud0
(bad)
cmp
or
cmp
add
pop
ds
jle
or
mov
or
inc
fwait
sub
mov
xchg
arpl
mov
pop
dec
adc
popa
cmp
(bad)
jle
add
mov
call
pop
add
cmps
push
jmp
pop
add
cwde
pop
add
sahf
pop
add
stos
ins
add
movs
jb
jmp
fstp
push
repz
clc
clc
clc
(bad)
stc
stc
stc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
cmc
cmc
push
out
out
inc
pushf
jg
ror
inc
mov
ror
dec
cdq
je
ror
inc
mov
ror
call
mov
fstp
(bad)
jmp
(bad)
in
in
in
(bad)
in
in
in
push
repnz
push
mov
jmp
ror
call
lds
inc
mov
dec
mov
push
cli
cli
push
hlt
hlt
(bad)
fcmovnu
(bad)
sahf
pushf
call
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
nop
dec
(bad)
mov
(bad)
nop
dec
(bad)
mov
mov
mov
inc
push
mov
mov
mov
scas
jg
jmp
enter
push
push
call
push
call
push
call
push
call
push
dec
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
dec
dec
(bad)
jns
outs
(bad)
cmp
(bad)
mov
fcmovnb
(bad)
jmp
(bad)
call
retf
mov
(bad)
fcmovnb
cdq
call
mov
call
das
or
aas
daa
or
mov
push
pop
add
mov
jne
dec
xchg
dec
xchg
push
call
sahf
sub
fisubr
pop
jmp
daa
call
add
jbe
add
test
dec
pop
add
cmps
push
jmp
pop
add
cwde
pop
add
sahf
pop
add
test
outs
adc
fwait
call
loop
loop
out
out
out
out
out
out
out
out
out
out
out
out
in
in
in
in
in
in
in
in
in
in
out
out
out
push
div
push
div
push
div
push
div
push
out
out
dec
popf
cmp
nop
inc
nop
gs
nop
inc
nop
inc
xchg
imul
ret
nop
inc
nop
inc
nop
addr16
nop
inc
xchg
push
rol
(bad)
(bad)
(bad)
jmp
jmp
out
out
out
(bad)
out
out
out
(bad)
in
in
in
push
repnz
mov
jmp
ror
call
lds
inc
mov
dec
mov
push
cli
cli
push
cmc
hlt
(bad)
fcmovnu
(bad)
sahf
pushf
call
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
dec
(bad)
mov
nop
dec
(bad)
mov
nop
dec
(bad)
mov
mov
mov
dec
(bad)
mov
mov
mov
inc
push
jb
(bad)
(bad)
mov
call
call
pop
call
pop
call
call
push
push
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
dec
jmp
sbb
dec
jmp
dec
push
pop
inc
jns
xchg
mov
mov
outs
pop
dec
call
daa
inc
push
jmp
or
pop
dec
sub
inc
test
call
add
mov
add
lds
add
rcr
aas
(bad)
fldcw
js
outs
popa
dec
dec
jmp
add
js
add
test
call
arpl
jmp
push
add
xchg
push
add
xchg
push
add
movs
data16
sahf
push
jmp
fcomp
(bad)
out
out
out
push
repz
repz
repnz
repnz
repnz
repnz
repnz
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
cmc
cmc
push
div
push
div
push
div
push
div
push
lock
lahf
cmp
xchg
addr16
xchg
addr16
xchg
addr16
xchg
push
dec
sahf
jbe
enter
enter
enter
enter
enter
rol
(bad)
(bad)
(bad)
jmp
jmp
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
repnz
mov
jmp
ror
call
lds
inc
mov
dec
mov
push
sti
cli
push
div
(bad)
fcmovnu
(bad)
sahf
pushf
call
xchg
pop
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
dec
(bad)
mov
(bad)
dec
(bad)
mov
xchg
dec
(bad)
mov
lea
mov
inc
jmp
enter
push
push
jmp
popa
jmp
jmp
jmp
push
xor
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
inc
inc
sar
pop
xor
inc
add
addr16
aas
jmp
jne
jmp
inc
jmp
cmp
pop
push
das
jmp
and
outs
push
sbb
jge
or
xchg
pusha
add
mov
add
jle
sub
fs
xor
into
pushf
xor
mov
pop
add
stos
imul
dec
mov
call
xchg
adc
aad
cmp
xlat
stos
dec
(bad)
fdiv
ins
call
adc
pop
ss
jno
add
jg
add
mov
call
popa
add
xchg
push
add
xchg
dec
add
xchg
push
add
mov
push
jmp
(bad)
push
cmc
cmc
(bad)
stc
stc
stc
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
push
div
push
div
push
div
push
div
push
lock
mov
outs
dec
call
retf
call
shl
jo
retf
call
retf
call
rol
(bad)
(bad)
(bad)
(bad)
in
in
in
push
lock
out
out
out
(bad)
out
out
out
push
repz
mov
jmp
ror
call
lds
inc
mov
dec
mov
push
sti
cli
push
div
(bad)
fcmovnu
(bad)
sahf
pushf
call
cdq
pop
(bad)
mov
xchg
pop
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
dec
(bad)
mov
xchg
dec
(bad)
mov
nop
dec
(bad)
mov
jle
jmp
int
call
jmp
jmp
ins
jmp
push
imul
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
das
das
dec
mov
mov
inc
add
addr16
add
dec
sub
(bad)
cmp
enter
lods
push
dec
movs
inc
inc
call
ror
jmp
pusha
add
stos
outs
add
xchg
jae
dec
daa
push
outs
add
call
(bad)
mov
xchg
dec
xchg
or
aam
sub
xlat
cmps
inc
(bad)
fdiv
ja
pop
dec
sub
push
xor
jmp
add
jl
add
lea
jmp
fs
xchg
push
add
xchg
push
add
cwde
pop
add
movs
addr16
lahf
imul
call
jecxz
jecxz
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
icebp
icebp
icebp
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
push
div
push
icebp
lock
movs
xchg
int
jno
int
jno
int
jno
int
jb
into
sahf
je
shl
jb
int
jb
int3
popf
jb
int3
popf
jb
int
jbe
rol
(bad)
(bad)
(bad)
(bad)
in
in
in
push
lock
lock
out
out
out
push
repz
mov
jmp
ror
call
lds
inc
mov
dec
mov
push
sti
cli
push
div
(bad)
fcmovnu
(bad)
sahf
pushf
call
fwait
pusha
(bad)
mov
cdq
pop
(bad)
mov
cwde
pop
(bad)
mov
xchg
pop
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
mov
jmp
shl
jmp
outs
push
jae
jno
jno
outs
outs
outs
jmp
ins
jmp
sub
add
add
add
add
add
add
add
add
add
add
sbb
mov
push
(bad)
push
add
or
jo
add
pop
xor
push
sbb
scas
cmps
mov
(bad)
cmp
iret
cdq
and
retf
pop
(bad)
mov
imul
pushf
pusha
add
mov
jg
call
sub
mov
inc
test
call
pusha
add
mov
add
les
add
rcl
ss
stos
dec
dec
mov
jmp
dec
call
add
cmp
(bad)
jnp
add
(bad)
push
add
mov
push
add
cdq
pop
add
sahf
pop
add
test
add
mov
mov
fdivr
out
out
out
push
repz
repz
repz
repz
repz
repz
repz
repz
repnz
repnz
repnz
div
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
push
icebp
icebp
dec
mov
push
dec
cdq
imul
int
imul
movs
js
int3
cdq
push
int3
cdq
push
int3
cdq
push
int3
cdq
push
int3
fwait
outs
call
mov
(bad)
in
in
in
push
icebp
icebp
push
lock
lock
repz
mov
jmp
ror
call
lds
inc
mov
dec
mov
push
sti
cli
push
div
(bad)
fcmovnu
(bad)
sahf
pushf
call
pushf
arpl
mov
call
mov
cdq
pop
(bad)
mov
cwde
pop
(bad)
mov
xchg
pop
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
aad
call
push
push
jbe
jp
jp
js
js
ja
ja
je
je
jo
jo
cmp
cmp
sbb
sbb
(bad)
(bad)
ud0
push
push
call
adc
jmp
cmps
cmp
pop
add
inc
inc
add
popa
aaa
add
aas
and
(bad)
js
(bad)
jmp
leave
cmp
mov
xor
int
adc
leave
mov
inc
add
call
popa
add
mov
add
sub
addr16
xor
into
fwait
das
call
pop
add
lods
imul
sar
retf
dec
xchg
add
rcr
aas
(bad)
fidiv
push
jmp
add
ja
add
mov
call
data16
call
call
push
jmp
test
(bad)
(bad)
(bad)
cmc
cmc
cmc
(bad)
cli
cli
cli
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
clc
clc
clc
push
repnz
dec
mov
push
dec
cdq
imul
int3
fwait
ins
call
mov
push
int3
cdq
push
int3
cdq
push
int3
cdq
push
int3
fwait
outs
call
mov
(bad)
out
out
out
push
icebp
icebp
push
icebp
icebp
push
lock
repz
mov
jmp
ror
call
lds
inc
mov
dec
mov
push
sti
cli
push
div
(bad)
fcmovnu
(bad)
sahf
pushf
call
sahf
inc
pushf
arpl
mov
fwait
popa
inc
fwait
pusha
inc
fwait
pusha
(bad)
mov
cdq
pop
(bad)
mov
cdq
pop
(bad)
mov
xchg
pop
(bad)
mov
xchg
pop
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
fcmovb
call
push
(bad)
jge
jge
add
jge
jnp
jnp
jns
jns
jns
jns
jae
jae
ins
ins
ins
(bad)
cmp
cmp
xchg
xchg
xchg
dec
shr
pushf
pop
add
xchg
push
add
mov
(bad)
jp
add
cmp
dec
add
dec
cmp
call
stos
push
call
mov
daa
dec
(bad)
or
les
jmp
pop
add
stos
outs
add
call
(bad)
mov
imul
cwde
pop
add
movs
data16
mov
xchg
or
fcomp
sbb
fldcw
inc
jmp
dec
sub
pop
xor
push
add
test
call
popa
add
xchg
push
add
xchg
push
add
xchg
push
add
mov
push
cdq
dec
iret
iret
jmp
in
(bad)
call
call
call
(bad)
call
call
call
jmp
out
jmp
out
jmp
out
push
repnz
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
push
repnz
movs
cmp
fwait
imul
int
imul
into
pushf
ins
call
movs
js
int
push
int
push
int
push
int
push
int
outs
call
mov
(bad)
out
out
out
push
repnz
icebp
icebp
push
icebp
icebp
push
hlt
repz
mov
jmp
ror
call
lds
inc
mov
dec
mov
push
sti
cli
push
div
(bad)
fcmovnu
(bad)
sahf
pushf
fwait
jmp
mov
inc
popf
gs
popf
fs
popf
fs
pushf
arpl
rcr
(bad)
mov
fwait
pusha
(bad)
mov
cdq
pop
(bad)
mov
cwde
pop
(bad)
mov
cwde
pop
(bad)
mov
xchg
pop
(bad)
mov
fcmovnb
call
inc
mov
inc
cmp
add
jge
jge
dec
dec
dec
inc
int3
mov
push
jnp
call
dec
add
jg
add
outs
ds
pop
xor
push
add
mov
cdq
jmp
lds
(bad)
lods
pusha
call
popf
xor
(bad)
mov
addr16
cdq
pop
add
mov
jp
call
sub
xchg
(bad)
mov
outs
add
mov
adc
lods
jge
call
jno
dec
xchg
push
inc
mov
inc
mov
(bad)
jle
cmp
arpl
add
jae
add
test
call
pusha
add
xchg
push
add
xchg
push
add
xchg
push
add
mov
imul
(bad)
out
out
out
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
repz
repz
repz
repz
repz
repz
repz
div
(bad)
cli
cli
cli
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
push
repnz
lods
(bad)
call
test
jnp
aam
jnp
aam
jl
aad
jge
xlat
scas
cmp
test
jl
aam
jge
aam
jge
aam
cmp
mov
(bad)
out
out
out
push
repnz
repnz
icebp
icebp
push
hlt
repz
mov
jmp
ror
call
lds
inc
mov
dec
mov
push
sti
cli
push
div
(bad)
fcmovnu
(bad)
sahf
pushf
fwait
jmp
mov
imul
ret
inc
sahf
addr16
sahf
inc
popf
gs
pushf
gs
pushf
arpl
rcr
mov
cdq
pop
(bad)
mov
call
mov
xchg
pop
(bad)
mov
fadd
call
dec
(bad)
(bad)
dec
mov
inc
mov
jmp
imul
rol
jmp
sub
mov
push
pop
call
dec
add
jns
add
cmp
inc
add
jbe
arpl
jmp
(bad)
ffree
mov
fstp
arpl
enter
mov
or
fwait
pop
add
cdq
pop
add
mov
add
and
dec
sub
stos
jns
jmp
add
cmp
add
push
push
add
xor
sbb
inc
or
pop
inc
sbb
imul
ins
ds
jp
add
mov
call
add
xchg
push
add
xchg
push
add
cdq
pop
add
mov
ins
push
jmp
loopne
push
div
(bad)
sti
sti
sti
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
stc
stc
stc
push
repz
cmps
cmp
lahf
push
rcr
push
rcr
ins
call
test
imul
lahf
imul
lahf
ins
call
lahf
ins
call
mov
(bad)
jmp
loop
(bad)
out
out
out
push
repz
repnz
repnz
hlt
hlt
push
mov
jmp
ror
call
lds
inc
mov
dec
mov
push
sti
cli
push
div
(bad)
fcmovnu
(bad)
sahf
pushf
fwait
push
mov
ins
inc
mov
imul
mov
imul
ret
inc
sahf
addr16
sahf
gs
sahf
fs
popf
fs
popf
arpl
rcr
inc
fwait
popa
(bad)
mov
call
jmp
push
push
call
xchg
xchg
call
xchg
call
nop
nop
jmp
ins
call
pop
call
ror
push
sub
mov
xor
mov
xor
mov
push
and
mov
or
call
add
dec
cmp
jmp
(bad)
jmp
into
cmps
jmp
retf
mov
(bad)
ffreep
cdq
(bad)
fdivr
ins
push
imul
mov
adc
call
push
and
inc
add
dec
sub
call
add
pop
cmp
call
add
pop
xor
jmp
add
ins
inc
add
jne
add
jl
add
test
nop
push
add
mov
gs
cdq
pop
add
cwde
pop
add
popf
pop
add
cmps
imul
call
rcl
jmp
in
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
call
call
call
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
push
repz
cmps
cmp
mov
imul
mov
imul
mov
jp
shl
ins
call
mov
ins
call
mov
(bad)
jmp
loop
(bad)
out
out
out
push
repz
repz
repnz
hlt
hlt
push
mov
jmp
ror
call
lds
shl
jmp
sti
sti
push
div
(bad)
fcmovnu
(bad)
sahf
pushf
fwait
push
movs
jno
(bad)
mov
outs
inc
mov
ins
inc
mov
imul
mov
push
inc
lahf
push
inc
sahf
gs
sahf
gs
sahf
inc
popf
fs
pushf
(bad)
(bad)
mov
cdq
pop
(bad)
jmp
push
push
call
pushf
pushf
call
cwde
cwde
call
add
ror
retf
popf
imul
xchg
push
xchg
push
mov
push
ja
dec
inc
add
cmp
inc
jmp
aad
jmp
fcmovb
(bad)
jmp
fdivr
jmp
shr
call
mov
call
adc
dec
add
pop
xor
jmp
add
imul
push
add
jns
add
je
add
jb
add
jbe
add
or
xchg
inc
dec
add
xchg
push
add
mov
gs
cwde
pop
add
xchg
push
add
pushf
pop
add
movs
push
adc
(bad)
fcmovu
(bad)
lock
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
repz
repz
clc
clc
clc
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
cli
cli
cli
(bad)
cli
cli
cli
push
repz
test
imul
mov
imul
mov
outs
call
stos
jnp
shl
ins
call
mov
ins
call
mov
(bad)
jmp
jecxz
push
lock
hlt
hlt
push
repz
repz
cmc
hlt
push
mov
jmp
ror
call
lds
shl
jmp
sti
sti
push
div
(bad)
(bad)
fdivr
sahf
pushf
fwait
push
cmps
je
(bad)
movs
jno
(bad)
movs
jo
(bad)
mov
outs
inc
mov
ins
inc
mov
ins
inc
mov
push
ret
mov
addr16
lahf
addr16
lahf
push
inc
popf
fs
popf
fs
mov
loope
call
push
call
mov
mov
call
inc
inc
dec
leave
(bad)
(bad)
mov
xchg
push
push
mov
push
mov
push
xor
jne
inc
aas
add
pop
das
add
inc
and
inc
pop
call
cmp
ja
call
xchg
mov
xchg
mov
inc
and
cmp
add
pop
xor
jmp
add
jo
add
jbe
add
jl
add
xchg
dec
dec
add
add
or
lea
nop
push
add
mov
dec
push
add
popf
pusha
add
sahf
pusha
add
xchg
push
add
xchg
push
add
xchg
push
add
mov
imul
jmp
loopne
push
div
(bad)
cld
cld
cld
(bad)
std
std
std
(bad)
std
std
std
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
push
hlt
hlt
call
lods
mov
xlat
test
call
test
call
test
jae
xlat
stos
jne
fidiv
jae
(bad)
test
je
(bad)
test
js
aam
(bad)
jmp
jecxz
push
lock
hlt
hlt
push
hlt
hlt
push
repz
cmc
hlt
push
mov
jmp
ror
call
lds
inc
mov
dec
mov
jmp
sti
sti
push
div
(bad)
(bad)
fdivr
sahf
pushf
fwait
push
test
dec
cmps
je
enter
enter
(bad)
movs
jno
(bad)
movs
jo
(bad)
mov
outs
inc
mov
outs
inc
mov
imul
mov
push
les
push
ret
inc
sahf
inc
pushf
(bad)
(bad)
in
jecxz
call
push
jmp
test
jmp
dec
dec
(bad)
mov
scas
mov
mov
cmp
mov
cmp
push
xchg
push
push
xchg
push
cmp
mov
push
or
outs
cmp
jmp
add
pop
xor
call
add
inc
and
(bad)
cmp
add
cmp
add
inc
and
dec
add
push
sub
call
add
arpl
add
jg
add
or
dec
push
add
xchg
pop
add
mov
dec
dec
add
xchg
pop
add
cwde
pop
add
nop
push
add
mov
call
pop
add
sahf
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
mov
data16
popf
pushf
fwait
call
rcl
jmp
out
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
jmp
jmp
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
push
hlt
hlt
call
mov
(bad)
fisubr
jbe
fldcw
ja
fisubr
cmp
fldcw
js
fldcw
jl
aam
(bad)
jmp
jecxz
push
icebp
icebp
push
cmc
cmc
push
hlt
hlt
push
hlt
hlt
push
cmc
cmc
push
mov
jmp
ror
call
lds
inc
mov
dec
mov
jmp
sti
sti
push
div
(bad)
(bad)
fdivr
lahf
pushf
fwait
push
stos
jp
leave
cmps
ja
leave
cmps
jbe
leave
cmps
jbe
enter
enter
enter
(bad)
movs
jae
(bad)
movs
jno
enter
(bad)
movs
jno
(bad)
movs
outs
inc
mov
outs
inc
mov
ins
inc
mov
imul
sahf
data16
in
jecxz
call
push
jmp
mov
jmp
push
jmp
mov
aas
push
mov
mov
inc
push
mov
push
mov
mov
inc
push
aas
push
xchg
movs
jnp
dec
inc
add
jb
add
outs
aas
add
cmp
jmp
add
popa
xor
jmp
add
ins
aas
add
outs
ds
jb
add
jp
add
mov
call
push
add
nop
push
add
xchg
push
add
fwait
pop
add
popf
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
sahf
pusha
add
lahf
pusha
add
xchg
push
add
xchg
push
add
xchg
push
add
mov
popa
add
xchg
push
add
xchg
push
add
cdq
pop
add
mov
push
jmp
fcos
lock
hlt
hlt
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
(bad)
clc
clc
clc
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
sti
sti
sti
push
hlt
hlt
call
lods
test
fsubr
ins
(bad)
fsubr
ins
(bad)
fldcw
jl
fsubr
outs
(bad)
fsubr
outs
call
test
(bad)
jmp
jecxz
push
icebp
icebp
push
cmc
cmc
push
cmc
cmc
push
hlt
hlt
push
cmc
cmc
push
mov
jmp
ror
call
(bad)
mov
hlt
(bad)
inc
mov
jecxz
mov
sahf
(bad)
cld
sti
sti
push
div
(bad)
(bad)
fdivr
lahf
pushf
fwait
push
lods
jge
retf
test
jns
retf
dec
test
dec
test
dec
cmps
jbe
leave
cmps
jne
enter
enter
enter
enter
(bad)
movs
jb
(bad)
movs
jno
(bad)
movs
jo
enter
(bad)
mov
outs
inc
mov
aam
pop
pop
pop
push
mov
jmp
call
enter
mov
mov
inc
push
mov
mov
mov
mov
inc
(bad)
mov
pop
mov
mov
mov
inc
push
lea
mov
inc
jmp
popa
adc
xchg
inc
dec
add
jp
add
jp
add
jg
add
or
or
dec
add
mov
call
pop
add
xchg
pop
add
xchg
push
add
xchg
push
add
sahf
pop
add
mov
pop
add
xchg
push
add
cwde
pop
add
mov
arpl
call
push
add
call
jmp
pop
add
cwde
pop
add
pushf
pop
add
movs
addr16
mov
test
loope
clc
clc
clc
(bad)
cld
cld
cld
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
push
cmc
hlt
call
scas
test
fldcw
ins
(bad)
fldcw
outs
(bad)
fisubr
jl
fldcw
outs
(bad)
fldcw
outs
(bad)
fsubr
(bad)
jmp
jecxz
push
icebp
icebp
push
div
push
cmc
cmc
push
cmc
cmc
push
div
push
call
in
call
(bad)
mov
hlt
(bad)
inc
mov
(bad)
push
sti
sti
push
div
(bad)
(bad)
fdivr
lahf
popf
fwait
push
lods
jg
int3
stos
jge
retf
stos
jl
retf
stos
jnp
retf
stos
jp
retf
test
jp
retf
dec
cmps
js
leave
cmps
ja
leave
cmps
jbe
leave
cmps
jne
leave
cmps
jne
leave
cmps
je
enter
enter
enter
(bad)
movs
jno
lds
aad
pop
pop
pop
(bad)
mov
jns
(bad)
jp
jp
fcom
(bad)
mov
mov
inc
push
mov
mov
mov
mov
inc
push
(bad)
nop
dec
(bad)
mov
lea
mov
inc
(bad)
mov
nop
dec
(bad)
mov
mov
mov
inc
jmp
push
add
mov
dec
dec
add
(bad)
push
add
xchg
push
add
(bad)
push
add
mov
call
pop
add
pushf
pop
add
xchg
pop
add
xchg
push
add
xchg
push
add
popf
pop
add
sahf
pusha
add
cwde
pop
add
xchg
push
add
xchg
push
add
lahf
popa
add
mov
pop
add
xchg
push
add
cdq
pop
add
mov
bound
call
push
add
fwait
pop
add
mov
push
call
rcl
jmp
out
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
div
idiv
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
push
cmc
cmc
(bad)
fsubr
ins
(bad)
fsubr
(bad)
fld
(bad)
fbstp
(bad)
fld
(bad)
fld
call
enter
in
push
icebp
icebp
push
div
push
div
push
cmc
cmc
push
div
push
(bad)
(bad)
std
std
std
call
(bad)
mov
hlt
(bad)
inc
mov
(bad)
push
sti
sti
push
div
(bad)
(bad)
fdivr
lahf
popf
pushf
push
scas
cmp
lods
jg
int3
lods
jg
int3
lods
jge
retf
stos
jl
retf
stos
jl
retf
stos
jl
retf
stos
jnp
retf
dec
test
jns
retf
dec
test
dec
cmps
jbe
leave
cmps
jbe
leave
cmps
je
enter
(bad)
movs
jae
(bad)
mov
(bad)
call
dec
ins
ins
(bad)
fstp
sar
mov
nop
dec
push
lea
mov
(bad)
(bad)
lea
mov
dec
(bad)
mov
nop
dec
(bad)
mov
lea
mov
dec
(bad)
mov
xchg
dec
(bad)
mov
lea
mov
dec
(bad)
mov
jle
call
dec
add
(bad)
dec
add
xchg
push
add
xchg
pop
add
xchg
push
add
nop
dec
add
xchg
push
add
cwde
pop
add
call
call
push
add
call
call
push
add
xchg
push
add
pushf
pop
add
pushf
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
sahf
pop
add
popf
pop
add
xchg
push
add
xchg
dec
add
xchg
push
add
lahf
pusha
add
fwait
addr16
(bad)
fcmovu
(bad)
lock
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
(bad)
stc
stc
stc
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
push
cmc
cmc
(bad)
fdiv
jle
loop
jle
loop
jg
loope
jg
loop
cmp
loope
cmp
mov
cmp
loope
test
aam
(bad)
jmp
jecxz
push
repnz
div
push
div
push
div
push
div
push
(bad)
(bad)
std
std
std
call
(bad)
mov
hlt
(bad)
inc
mov
(bad)
push
sti
sti
push
div
(bad)
fstp
(bad)
lahf
popf
pushf
push
test
int
cmp
int
cmp
lods
jg
int3
lods
jle
int3
lods
jle
retf
stos
jge
retf
stos
jl
retf
stos
jnp
retf
stos
jnp
retf
stos
jnp
retf
dec
test
jns
retf
dec
cmps
ja
leave
cmps
jbe
(bad)
movs
jb
out
in
dec
dec
call
pop
(bad)
(bad)
sar
ret
stos
xchg
enter
ret
(bad)
mov
mov
mov
xchg
dec
(bad)
mov
(bad)
mov
mov
xchg
dec
(bad)
mov
(bad)
(bad)
xchg
dec
(bad)
mov
xchg
dec
(bad)
mov
(bad)
xchg
dec
(bad)
mov
mov
pushf
bound
call
push
add
cdq
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
cdq
pop
add
call
call
push
add
call
call
add
xchg
push
add
pushf
pop
add
pushf
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
popf
pop
add
popf
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
lahf
pusha
add
pushf
addr16
jmp
loope
(bad)
clc
clc
clc
(bad)
std
std
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
cld
cld
cld
push
cmc
cmc
(bad)
(bad)
outs
jmp
mov
jmp
mov
(bad)
fbstp
jno
loop
jle
fbstp
jo
fbstp
jno
fidiv
enter
jecxz
repnz
div
push
div
push
div
push
div
push
(bad)
(bad)
std
std
std
call
(bad)
mov
hlt
fmulp
inc
mov
std
push
cld
sti
(bad)
clc
clc
clc
(bad)
fstp
(bad)
lahf
popf
pushf
push
mov
dec
mov
dec
scas
test
int
cmp
scas
cmp
scas
cmp
scas
cmp
int3
lods
jg
int
jg
int
jg
retf
lods
jge
retf
lods
jl
retf
stos
jl
retf
stos
jl
retf
stos
jnp
retf
test
jp
leave
cmps
jne
out
in
jmp
ins
call
iret
into
inc
mov
dec
cmps
je
leave
test
dec
cmps
je
mov
xchg
dec
(bad)
mov
xchg
push
(bad)
mov
nop
dec
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
dec
(bad)
mov
xchg
push
(bad)
mov
xchg
dec
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
jbe
call
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
call
call
push
add
xchg
push
add
pushf
pop
add
popf
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
popf
pop
add
sahf
pusha
add
xchg
push
add
xchg
push
add
xchg
pop
add
mov
popa
add
xchg
push
add
xchg
push
add
cdq
pop
add
mov
push
fwait
call
rcl
jmp
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
div
idiv
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
clc
div
(bad)
fdiv
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jo
loopne
jno
loopne
jno
loopne
jno
fbstp
enter
in
repnz
div
push
div
push
div
push
div
push
(bad)
(bad)
std
std
std
call
(bad)
mov
hlt
fmulp
inc
mov
cld
push
cld
cld
(bad)
clc
clc
clc
(bad)
fstp
(bad)
lahf
popf
pushf
push
mov
call
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
scas
cmp
scas
cmp
scas
cmp
lods
cmp
int3
lods
cmp
lods
jg
int3
lods
jg
int3
stos
jle
int3
stos
jge
retf
stos
jl
retf
push
jmp
jmp
enter
enter
retf
dec
test
ja
enter
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
cwde
push
(bad)
mov
xchg
push
(bad)
mov
lea
movs
ins
push
call
push
add
xchg
push
add
fwait
pop
add
pushf
pop
add
xchg
pop
add
xchg
push
add
xchg
push
add
popf
pop
add
sahf
pop
add
cwde
pop
add
xchg
push
add
xchg
pop
add
lahf
pusha
add
mov
pop
add
xchg
push
add
cdq
pop
add
mov
bound
call
push
add
fwait
pop
add
mov
imul
fcmovu
(bad)
lock
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
hlt
hlt
(bad)
stc
stc
stc
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
clc
div
(bad)
fnsave
outs
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jo
loop
jno
loop
jno
loop
jb
loope
jne
aam
(bad)
jmp
in
push
repz
clc
clc
clc
push
div
push
div
push
div
push
(bad)
(bad)
std
std
std
call
(bad)
mov
hlt
fmulp
inc
mov
cli
push
cld
cld
(bad)
clc
clc
clc
(bad)
fstp
(bad)
lahf
popf
pushf
push
mov
call
mov
call
mov
dec
mov
call
mov
call
mov
dec
mov
dec
mov
dec
mov
dec
scas
test
into
scas
cmp
scas
cmp
scas
cmp
scas
cmp
int
cmp
lods
cmp
lods
jg
retf
stos
jnp
repnz
(bad)
test
dec
stos
jnp
retf
stos
jl
retf
stos
jl
retf
test
jns
(bad)
movs
jno
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
pop
(bad)
mov
xchg
pop
(bad)
mov
xchg
push
(bad)
mov
cwde
pop
(bad)
mov
xchg
push
(bad)
mov
xchg
pop
(bad)
mov
cwde
pop
(bad)
mov
xchg
push
inc
call
scas
jle
call
push
add
cdq
pop
add
fwait
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
fwait
pop
add
pushf
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
popf
pop
add
sahf
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
lahf
popa
add
lahf
pusha
add
xchg
push
add
xchg
push
add
cdq
pop
add
mov
imul
jmp
loope
(bad)
clc
clc
clc
(bad)
std
std
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
clc
div
(bad)
fidivr
je
out
jne
in
jne
in
jne
in
ja
out
cmp
mov
ja
in
ja
in
js
jecxz
jnp
aam
enter
in
repz
clc
clc
clc
push
div
push
div
push
div
push
std
(bad)
cld
cld
cld
call
(bad)
mov
hlt
fmulp
inc
mov
clc
push
cld
cld
(bad)
clc
clc
clc
(bad)
fstp
(bad)
lahf
popf
pushf
push
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
dec
mov
dec
mov
call
mov
dec
mov
dec
mov
dec
mov
dec
scas
test
into
scas
test
iret
scas
test
into
scas
cmp
lods
cmp
lods
cmp
iret
mov
iret
mov
dec
lods
jg
int3
lods
jle
int3
stos
jle
int3
lods
jle
int3
stos
jge
retf
stos
jl
retf
stos
jnp
enter
mov
xchg
pop
(bad)
mov
xchg
pop
(bad)
mov
cwde
pop
(bad)
mov
xchg
pop
(bad)
mov
xchg
pop
(bad)
mov
xchg
pop
(bad)
mov
xchg
pop
(bad)
mov
cdq
pop
(bad)
mov
xchg
pop
(bad)
mov
cdq
pop
inc
call
mov
jne
call
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
cdq
pop
add
call
call
push
add
call
call
push
add
xchg
push
add
pushf
pop
add
pushf
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
sahf
pop
add
call
call
rcl
jmp
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
push
div
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
clc
div
jmp
mov
jp
call
mov
jnp
call
les
jmp
mov
jge
out
jle
in
cmp
in
in
repz
clc
clc
clc
(bad)
clc
clc
clc
push
div
push
div
push
sti
(bad)
cld
cld
sti
call
(bad)
mov
hlt
fmulp
inc
mov
idiv
mov
sahf
(bad)
cld
cld
cld
(bad)
clc
clc
clc
(bad)
fstp
(bad)
lahf
popf
pushf
push
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
dec
mov
dec
mov
call
mov
dec
mov
dec
mov
dec
mov
dec
scas
cmp
mov
dec
scas
cmp
scas
cmp
scas
cmp
int
cmp
lods
cmp
int3
lods
jle
retf
stos
jl
int3
lods
jle
leave
cmps
jae
rcr
(bad)
mov
cdq
pop
(bad)
mov
cdq
pop
(bad)
mov
xchg
pop
(bad)
mov
call
mov
xchg
pop
(bad)
mov
fwait
pop
(bad)
mov
xchg
pop
(bad)
mov
fwait
pop
inc
pushf
pop
(bad)
mov
xchg
pop
(bad)
mov
xchg
push
jmp
pop
push
call
push
add
cwde
pop
add
call
call
push
add
call
call
push
add
xchg
push
add
popf
pop
add
fwait
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
popf
pop
add
call
(bad)
(bad)
fcos
lock
hlt
hlt
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
(bad)
cli
cli
cli
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
clc
div
jmp
mov
outs
(bad)
call
mov
jo
call
ret
out
jno
out
jb
out
jb
out
jae
in
jbe
aam
(bad)
jmp
in
push
hlt
hlt
(bad)
stc
stc
stc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
div
push
sti
cli
(bad)
sti
sti
cli
call
(bad)
mov
hlt
fmulp
inc
mov
repz
cld
cld
(bad)
clc
clc
clc
(bad)
fstp
(bad)
lahf
popf
pushf
push
mov
xchg
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
scas
cmp
scas
cmp
scas
cmp
int
cmp
int
cmp
cmps
jne
rcr
inc
fwait
pop
inc
pushf
pusha
inc
fwait
pusha
(bad)
mov
cdq
pop
inc
fwait
pusha
inc
pushf
popa
inc
pushf
pusha
(bad)
mov
call
ret
inc
popf
pusha
(bad)
mov
call
ret
sahf
(bad)
inc
pushf
pusha
(bad)
mov
fwait
pop
inc
lahf
(bad)
inc
mov
pop
push
outs
sbb
mov
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
popf
pop
add
popf
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
lahf
pusha
add
sahf
pop
add
xchg
push
add
xchg
push
add
fwait
pop
add
jmp
test
loope
clc
clc
clc
(bad)
std
std
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
std
(bad)
stc
div
jmp
mov
jo
jmp
(bad)
jmp
(bad)
jmp
jg
jmp
mov
jae
jmp
mov
(bad)
jmp
in
push
hlt
hlt
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
clc
clc
clc
(bad)
clc
div
push
stc
idiv
cli
cli
stc
call
(bad)
mov
hlt
fmulp
inc
mov
lock
cld
cld
(bad)
clc
clc
clc
(bad)
fstp
(bad)
lahf
popf
pushf
(bad)
mov
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
dec
mov
dec
mov
dec
mov
call
mov
dec
mov
dec
scas
test
into
scas
test
into
scas
cmp
scas
cmp
scas
cmp
test
inc
popf
arpl
rcr
rcr
rcr
ret
inc
popf
arpl
rcr
ret
sahf
arpl
ret
lahf
fs
sahf
arpl
rcr
ret
lahf
gs
mov
fs
pushf
arpl
rcr
inc
mov
fs
pushf
arpl
ret
inc
popf
pop
(bad)
mov
xor
mov
arpl
jmp
pop
pop
call
pop
pop
jmp
adc
push
push
dec
movs
push
call
rcl
(bad)
call
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
push
div
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
div
jmp
mov
jo
in
mov
jno
in
mov
je
in
mov
(bad)
jmp
jae
jmp
call
enter
in
push
hlt
hlt
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
clc
clc
clc
(bad)
clc
div
push
div
(bad)
cli
clc
idiv
popf
pop
push
fmulp
inc
mov
in
push
cld
cld
(bad)
clc
clc
clc
(bad)
fstp
(bad)
lahf
popf
pushf
(bad)
mov
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
nop
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
dec
mov
dec
mov
call
mov
dec
mov
dec
mov
dec
scas
test
retf
inc
lahf
push
inc
sahf
gs
popf
gs
popf
gs
sahf
gs
lahf
inc
sahf
gs
popf
fs
popf
fs
mov
push
inc
popf
fs
popf
fs
mov
addr16
lahf
addr16
popf
inc
sahf
inc
mov
imul
ret
inc
sahf
inc
mov
push
lds
addr16
sahf
pusha
inc
sahf
pop
inc
pushf
pop
(bad)
mov
xchg
push
inc
cdq
pop
inc
mov
imul
ret
lahf
addr16
mov
ins
jmp
mov
(bad)
lock
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
(bad)
cli
cli
cli
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
div
jmp
ret
lock
cmp
out
leave
cmp
leave
cmp
retf
lock
(bad)
out
leave
cmp
leave
cmp
leave
test
out
leave
test
in
enter
enter
in
push
hlt
hlt
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
clc
div
push
cmc
repnz
stc
clc
idiv
popf
pop
hlt
fmulp
inc
mov
in
push
cld
cld
(bad)
clc
clc
clc
(bad)
fstp
(bad)
lahf
popf
pushf
(bad)
mov
mov
cwde
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
dec
mov
dec
mov
dec
lods
jle
(bad)
mov
addr16
sahf
addr16
sahf
addr16
lahf
push
inc
lahf
imul
rcr
inc
mov
imul
rcr
inc
mov
imul
rcr
inc
mov
push
inc
lahf
addr16
mov
ins
inc
mov
push
dec
mov
ins
inc
mov
push
dec
movs
ins
dec
mov
push
inc
mov
outs
jmp
test
loop
stc
stc
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
div
jmp
mov
jno
lock
out
les
out
les
out
lds
retf
out
les
out
les
out
les
les
ret
js
aam
(bad)
jmp
in
push
cmc
cmc
(bad)
cli
cli
cli
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
clc
div
push
repnz
stc
div
call
(bad)
mov
hlt
fmulp
inc
mov
jmp
(bad)
cld
cld
cld
(bad)
clc
clc
clc
(bad)
fstp
(bad)
lahf
popf
pushf
(bad)
mov
mov
call
mov
cwde
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
nop
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
dec
mov
inc
movs
jb
ret
inc
mov
imul
mov
imul
mov
imul
(bad)
mov
imul
mov
push
(bad)
mov
ins
inc
mov
imul
(bad)
mov
ins
inc
mov
imul
(bad)
mov
outs
inc
mov
imul
leave
movs
outs
dec
movs
outs
inc
mov
imul
leave
movs
jo
leave
movs
outs
inc
mov
imul
retf
jmp
sahf
popf
call
rcl
(bad)
jmp
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
push
div
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
div
jmp
ror
icebp
(bad)
jno
icebp
(bad)
jno
lock
jb
icebp
enter
int
push
(bad)
jae
lock
jae
out
(bad)
je
out
(bad)
je
out
(bad)
js
ror
(bad)
jmp
jecxz
push
cmc
cmc
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
stc
stc
stc
(bad)
clc
div
push
lock
(bad)
clc
hlt
repnz
(bad)
mov
hlt
fmulp
inc
mov
call
(bad)
cld
cld
cld
(bad)
clc
clc
clc
(bad)
fstp
(bad)
lahf
popf
pushf
(bad)
mov
shl
xlat
mov
fwait
call
mov
fwait
call
mov
cdq
call
mov
cdq
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
nop
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
dec
test
inc
mov
outs
inc
movs
outs
inc
movs
outs
inc
mov
ins
inc
movs
outs
dec
movs
outs
dec
movs
outs
inc
mov
ins
dec
movs
outs
dec
cmps
jo
(bad)
movs
outs
inc
mov
outs
dec
movs
jno
retf
inc
movs
outs
inc
mov
outs
dec
cmps
jno
retf
inc
movs
outs
inc
mov
outs
dec
cmps
jno
retf
test
dec
movs
outs
inc
movs
ins
dec
movs
outs
dec
test
dec
test
inc
movs
outs
inc
mov
outs
dec
stos
je
lods
cmp
movs
mov
(bad)
lock
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
(bad)
cli
cli
cli
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
div
jmp
ret
repz
repz
repz
jno
repnz
jb
repnz
repz
cmp
leave
jae
repnz
jae
icebp
leave
je
icebp
leave
je
out
enter
mov
push
cmc
cmc
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
stc
stc
stc
(bad)
clc
clc
idiv
mov
sahf
push
out
jmp
div
repnz
(bad)
mov
hlt
fmulp
inc
mov
call
(bad)
cld
cld
cld
(bad)
clc
clc
clc
(bad)
fstp
(bad)
lahf
popf
pushf
(bad)
mov
ret
fld
lahf
(bad)
fadd
sahf
(bad)
fadd
sahf
(bad)
fdivr
sahf
(bad)
fdivr
fwait
call
mov
fwait
call
mov
cdq
call
mov
cwde
call
mov
cwde
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
dec
scas
cmp
cmps
jb
enter
enter
(bad)
movs
jo
enter
leave
movs
jb
leave
cmps
jb
leave
movs
jno
(bad)
movs
jo
(bad)
movs
jo
leave
cmps
jb
retf
dec
cmps
jno
enter
enter
retf
dec
test
dec
cmps
jb
enter
enter
retf
test
dec
test
jb
enter
leave
cmps
jb
int3
test
jne
leave
cmps
jno
enter
retf
dec
stos
jbe
int3
stos
jne
leave
cmps
jno
leave
cmps
jno
retf
test
dec
stos
ja
scas
add
test
loop
stc
stc
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
div
jmp
(bad)
nop
push
sar
cmc
sar
cmc
sar
cmc
iret
jns
cmc
sar
not
xchg
hlt
iret
jp
hlt
iret
jp
hlt
iret
jp
hlt
iret
jnp
icebp
into
jle
rol
(bad)
jmp
in
push
cmc
cmc
(bad)
sti
sti
sti
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
stc
clc
clc
push
jmp
call
enter
(bad)
inc
mov
call
(bad)
cld
cld
cld
(bad)
clc
clc
clc
(bad)
fstp
(bad)
lahf
popf
pushf
(bad)
mov
lds
fld
mov
(bad)
fld
mov
(bad)
fld
sahf
(bad)
fdivr
popf
(bad)
fdivr
pushf
(bad)
fdivr
pushf
call
mov
fwait
call
mov
cdq
call
mov
cwde
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
call
mov
call
mov
nop
call
mov
call
mov
call
mov
call
mov
dec
test
jae
enter
enter
retf
dec
cmps
jne
retf
dec
cmps
jae
enter
retf
dec
test
dec
cmps
je
enter
enter
retf
test
dec
test
jae
enter
leave
cmps
jae
retf
test
dec
test
je
enter
leave
cmps
jae
int3
stos
ja
int3
stos
ja
leave
cmps
je
leave
cmps
jae
retf
dec
stos
ja
int3
stos
ja
leave
cmps
je
enter
retf
dec
lods
jns
stos
add
rcl
sar
jmp
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
clc
clc
clc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
div
(bad)
jmp
(bad)
cli
in
(bad)
cli
in
(bad)
cli
in
(bad)
cli
in
(bad)
stc
in
(bad)
stc
in
(bad)
stc
in
(bad)
stc
in
(bad)
stc
jecxz
push
in
call
mov
push
cmc
cmc
(bad)
sti
sti
sti
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
stc
clc
clc
push
out
div
out
call
enter
(bad)
inc
mov
call
(bad)
cld
cld
cld
(bad)
clc
clc
clc
(bad)
fstp
(bad)
lahf
popf
pushf
(bad)
mov
lds
(bad)
fcmovb
mov
(bad)
fcmovb
mov
(bad)
fld
mov
(bad)
fadd
lahf
(bad)
fld
mov
(bad)
fld
lahf
(bad)
fdivr
sahf
(bad)
fdivr
pushf
call
mov
fwait
call
mov
call
mov
cwde
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
call
mov
call
mov
dec
scas
cmp
cmps
jbe
enter
retf
dec
test
dec
cmps
ja
enter
enter
retf
dec
test
jbe
enter
enter
retf
dec
test
jbe
enter
enter
retf
test
js
leave
cmps
jbe
enter
leave
cmps
jne
int3
stos
jns
int3
stos
js
leave
cmps
jbe
enter
leave
cmps
jbe
int3
stos
jp
int3
stos
jp
leave
cmps
jbe
enter
retf
dec
lods
jnp
stos
add
mov
fcos
lock
hlt
hlt
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
(bad)
sti
sti
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
div
(bad)
jmp
(bad)
sti
loop
(bad)
cli
loop
(bad)
cli
loop
(bad)
cli
loope
(bad)
cli
loope
(bad)
cli
loope
(bad)
stc
loope
(bad)
stc
loope
(bad)
stc
loope
push
jecxz
call
enter
in
push
div
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
cli
cli
cli
(bad)
stc
clc
clc
push
out
div
out
call
enter
(bad)
inc
mov
call
(bad)
cld
cld
cld
(bad)
clc
clc
clc
(bad)
(bad)
fdivrp
mov
xchg
pop
(bad)
fmul
test
fcmovb
movs
(bad)
fcmovnb
movs
(bad)
fcmovb
movs
(bad)
fcmovnb
movs
(bad)
fcmovb
mov
(bad)
fcmovb
mov
(bad)
fcmovb
mov
(bad)
fld
mov
(bad)
fadd
lahf
(bad)
fld
sahf
(bad)
fadd
sahf
(bad)
fdivr
popf
(bad)
fdivr
pushf
call
mov
fwait
call
mov
call
mov
cwde
call
mov
cwde
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
dec
stos
jge
retf
test
jp
retf
dec
test
dec
test
dec
stos
jns
retf
stos
jns
retf
dec
test
dec
test
dec
stos
jp
int3
stos
jp
retf
dec
test
dec
test
dec
stos
jp
int3
stos
jnp
retf
test
ja
retf
dec
stos
jnp
int
jnp
retf
dec
test
dec
test
jnp
into
lods
jl
retf
dec
test
dec
stos
jns
iret
scas
jge
stos
add
stos
test
(bad)
cli
cli
cli
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
div
(bad)
jmp
(bad)
sti
jecxz
(bad)
sti
jecxz
(bad)
sti
jecxz
(bad)
sti
jecxz
(bad)
sti
jecxz
(bad)
sti
jecxz
(bad)
sti
loop
(bad)
cli
loop
(bad)
cli
loop
(bad)
clc
in
(bad)
fxch
int
in
in
in
(bad)
clc
clc
clc
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
cli
cli
cli
(bad)
stc
clc
clc
push
in
cmc
icebp
out
call
enter
(bad)
inc
mov
jmp
(bad)
cld
cld
cld
(bad)
stc
stc
stc
jmp
loopne
jmp
xchg
pusha
(bad)
fmulp
lods
(bad)
ffree
test
fadd
cmps
(bad)
fadd
cmps
(bad)
fadd
cmps
(bad)
fadd
cmps
(bad)
fcmovnb
cmps
(bad)
fcmovnb
movs
(bad)
fcmovnb
movs
(bad)
fcmovnb
movs
(bad)
fcmovnb
movs
(bad)
fcmovnb
mov
(bad)
fcmovb
mov
(bad)
fcmovb
mov
(bad)
fld
mov
(bad)
fld
lahf
(bad)
fld
lahf
(bad)
fadd
popf
(bad)
fadd
popf
(bad)
fdivr
popf
call
mov
fwait
call
mov
fwait
call
mov
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
mov
int
jg
int3
lods
jl
int3
stos
jp
retf
stos
jp
int3
lods
jge
int
jge
int3
lods
jl
retf
stos
jnp
int3
stos
jl
into
lods
jge
into
scas
jge
int3
lods
jl
int3
stos
jnp
int3
stos
jnp
into
lods
jge
iret
scas
jg
int
jl
int3
lods
jl
int3
lods
jl
iret
scas
jle
iret
scas
jg
int
jge
int3
stos
jl
int
jge
shr
jg
int
jl
int3
stos
jl
into
lods
jge
shl
inc
jmp
(bad)
(bad)
(bad)
jmp
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
clc
clc
clc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
div
(bad)
jmp
(bad)
cld
in
(bad)
cld
in
(bad)
cld
in
(bad)
cld
in
(bad)
cld
in
(bad)
sti
in
(bad)
sti
jecxz
(bad)
sti
jecxz
(bad)
sti
jecxz
(bad)
stc
in
jmp
fcom
push
div
(bad)
cli
cli
cli
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
cli
cli
cli
(bad)
stc
clc
clc
push
jecxz
cmc
lock
call
enter
(bad)
inc
mov
jmp
cld
cld
(bad)
cli
cli
cli
jmp
out
push
(bad)
push
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
(bad)
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
dec
mov
call
mov
call
mov
call
mov
dec
mov
call
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
scas
test
into
mov
dec
scas
test
into
scas
test
into
scas
cmp
scas
cmp
scas
cmp
scas
jg
enter
lds
ins
inc
mov
outs
inc
mov
ins
inc
mov
outs
dec
movs
jo
(bad)
mov
ins
inc
mov
outs
dec
movs
outs
inc
mov
ins
inc
mov
jo
retf
inc
mov
ins
dec
mov
jno
retf
inc
mov
ins
dec
movs
outs
dec
test
inc
push
loope
push
icebp
icebp
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
(bad)
sti
sti
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cli
div
(bad)
jmp
in
(bad)
clc
in
(bad)
clc
in
(bad)
clc
in
(bad)
clc
in
(bad)
clc
in
(bad)
clc
in
push
in
push
in
push
in
push
jecxz
(bad)
call
sti
sti
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
stc
clc
clc
push
jmp
in
call
enter
(bad)
inc
mov
in
jmp
cld
cld
(bad)
cld
cld
cld
(bad)
out
out
out
call
rcl
jmp
and
xchg
jns
call
jns
call
js
call
js
call
jns
call
jns
call
jns
call
js
call
js
call
jns
call
js
call
js
call
js
call
jns
call
js
call
js
call
jns
call
jns
call
jns
call
pop
call
jns
call
pop
call
pop
call
jp
call
pop
call
jns
call
pop
call
pop
call
pop
call
jl
call
jl
call
jle
call
jl
call
jg
call
jl
call
jg
jmp
fwait
jnp
xlat
(bad)
(bad)
push
icebp
icebp
(bad)
cld
cld
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
std
(bad)
out
out
(bad)
in
loop
(bad)
in
loop
(bad)
in
loop
(bad)
in
loop
(bad)
in
loop
(bad)
in
loop
(bad)
in
loop
(bad)
in
loop
(bad)
jmp
loopne
jmp
loopne
jmp
loope
clc
cmc
cmc
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
stc
clc
clc
push
jmp
in
call
leave
mov
inc
mov
in
jmp
cld
cld
(bad)
std
std
std
push
div
(bad)
jmp
jmp
fstp
(bad)
iret
iret
iret
dec
retf
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
retf
call
rcl
(bad)
(bad)
(bad)
in
in
in
(bad)
clc
clc
clc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
stc
clc
clc
push
jmp
out
call
leave
mov
inc
mov
in
jmp
cld
cld
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
std
(bad)
stc
stc
stc
push
cmc
cmc
push
repnz
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
icebp
icebp
push
repz
div
(bad)
cli
cli
cli
(bad)
std
std
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
stc
clc
clc
push
jmp
popf
nop
test
fcmovne
mov
inc
mov
out
jmp
cld
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
stc
clc
clc
push
jmp
popf
nop
test
fcmovne
mov
inc
mov
lock
cld
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
stc
clc
clc
push
jmp
popf
nop
test
fcmovne
mov
inc
mov
lock
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
push
div
push
div
push
div
push
div
push
jmp
push
icebp
out
call
leave
mov
inc
mov
icebp
jmp
out
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
dec
iret
sar
iret
iret
sar
iret
iret
sar
iret
iret
sar
in
in
mov
mov
push
repnz
call
leave
mov
inc
mov
repnz
jmp
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
fcomp
fdivr
fcomp
fdivr
fcomp
fdivr
fcomp
fdivr
fcomp
fdivr
fcomp
fdivr
fcomp
fdivr
fcomp
fdivr
fcomp
fdivr
xlat
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
cmps
mov
push
repnz
call
leave
mov
inc
mov
repz
jmp
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
fcomp
fdivr
fcomp
fdivr
fcomp
fdivr
fcomp
fdivr
fcomp
fdivr
fcomp
fdivr
fcomp
fdivr
fcomp
fdivr
xlat
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
cmps
mov
push
repnz
call
retf
hlt
loopne
inc
mov
hlt
jmp
jmp
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
fcomp
fdivr
fcomp
fdivr
fcomp
fdivr
jmp
cmps
mov
push
repnz
retf
hlt
loopne
inc
mov
hlt
push
call
mov
fwait
push
mov
fwait
jmp
mov
fwait
jmp
mov
fwait
jmp
mov
fwait
jmp
mov
call
mov
call
mov
call
mov
call
mov
call
mov
fwait
jmp
mov
fwait
jmp
mov
fwait
jmp
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
fwait
jmp
mov
fwait
push
mov
fwait
push
mov
pushf
push
mov
pushf
push
mov
pushf
jmp
scas
test
push
repnz
retf
hlt
loopne
inc
mov
cmc
push
repz
push
repz
repz
repz
repz
repz
repz
push
repnz
push
repnz
push
repnz
push
icebp
out
push
icebp
out
push
icebp
in
push
lock
push
lock
push
out
in
push
lock
repz
jmp
repz
jmp
in
jmp
push
in
call
push
in
out
icebp
jmp
push
jmp
push
jmp
lock
in
out
call
loop
out
call
loope
in
out
(bad)
in
out
(bad)
in
in
(bad)
in
in
(bad)
in
in
(bad)
in
in
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
loope
(bad)
jmp
loopne
(bad)
jmp
loopne
(bad)
call
loopne
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
jmp
fst
jmp
fst
jmp
fst
jmp
fst
jmp
fst
jmp
fst
jmp
fst
jmp
(bad)
(bad)
call
fst
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
loopne
(bad)
call
loopne
(bad)
jmp
loopne
(bad)
jmp
loope
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
in
in
(bad)
in
out
(bad)
in
out
(bad)
in
out
(bad)
in
out
(bad)
out
out
(bad)
out
call
jecxz
out
call
jecxz
out
jmp
in
lock
icebp
jmp
push
jmp
push
jmp
push
in
out
repnz
out
repnz
call
push
in
call
push
in
jmp
push
in
jmp
in
call
call
retf
hlt
loopne
inc
mov
cmc
(bad)
stc
div
(bad)
stc
div
(bad)
stc
div
(bad)
clc
div
(bad)
clc
cmc
hlt
(bad)
clc
cmc
hlt
(bad)
clc
cmc
repz
clc
hlt
icebp
push
repz
push
repz
repnz
icebp
out
push
icebp
out
push
lock
push
lock
push
out
in
push
out
jmp
repnz
jmp
in
out
bnd
push
jmp
lock
jecxz
out
out
(bad)
out
out
(bad)
in
in
(bad)
in
in
(bad)
in
in
(bad)
jmp
(bad)
jmp
(bad)
jmp
loopne
jmp
(bad)
jmp
fst
jmp
fst
jmp
fcmovnbe
jmp
fcmovnbe
jmp
fcmovbe
jmp
fcmovbe
jmp
fnop
jmp
fcom
jmp
fmul
jmp
xlat
into
jmp
(bad)
int
loope
int
loope
int3
jmp
aam
jmp
aam
jmp
ror
jmp
ror
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
rol
(bad)
(bad)
(bad)
rol
(bad)
(bad)
(bad)
iret
(bad)
(bad)
(bad)
ret
(bad)
(bad)
ret
(bad)
(bad)
ret
(bad)
(bad)
ret
(bad)
(bad)
ret
(bad)
(bad)
ret
(bad)
(bad)
ret
(bad)
(bad)
ret
(bad)
(bad)
ret
(bad)
(bad)
(bad)
(bad)
fmulp
(bad)
iret
(bad)
rol
(bad)
(bad)
(bad)
rol
(bad)
(bad)
(bad)
rol
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
retf
aam
jmp
aad
(bad)
(bad)
retf
ror
jmp
aad
jmp
xlat
iret
jmp
fcom
(bad)
out
call
sar
fcmovnbe
sar
fcmovnbe
sar
fcmovbe
sar
fcmovnbe
sar
fcmovnbe
sar
fcmovnbe
sar
fcmovnbe
sar
(bad)
sar
fcmovnbe
sar
fcmovnbe
sar
fcmovnbe
sar
(bad)
sar
(bad)
sar
fcmovnbe
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
iret
(bad)
(bad)
iret
(bad)
(bad)
sar
fcmovbe
sar
(bad)
sar
(bad)
sar
(bad)
sar
jmp
in
repz
jmp
call
retf
hlt
loope
inc
mov
idiv
cli
div
(bad)
stc
div
(bad)
stc
div
(bad)
stc
div
(bad)
clc
div
(bad)
clc
cmc
hlt
(bad)
clc
cmc
hlt
(bad)
clc
div
(bad)
clc
hlt
repnz
repz
push
repnz
repnz
push
icebp
out
push
lock
push
lock
push
out
in
push
out
jmp
repz
jmp
in
call
push
jmp
lock
in
out
out
(bad)
out
out
(bad)
in
out
(bad)
in
in
(bad)
in
in
(bad)
in
jecxz
(bad)
jmp
(bad)
jmp
loopne
(bad)
call
(bad)
jmp
fst
jmp
(bad)
jmp
fcmovnbe
jmp
fcmovnbe
jmp
fcmovbe
jmp
(bad)
jmp
fnop
jmp
fcom
jmp
xlat
iret
jmp
(bad)
into
jmp
(bad)
int
loop
int
loope
int3
jmp
aam
jmp
aam
jmp
ror
jmp
ror
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
rol
(bad)
(bad)
(bad)
rol
(bad)
fmulp
(bad)
iret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fmulp
(bad)
rol
(bad)
(bad)
(bad)
rol
(bad)
(bad)
(bad)
rol
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
leave
jmp
aam
jmp
aam
jmp
aad
(bad)
fst
leave
(bad)
(bad)
int3
jmp
xlat
sar
jecxz
sar
in
aam
in
out
call
mov
call
ret
mov
inc
mov
(bad)
fst
enter
(bad)
call
mov
(bad)
mov
scas
test
dec
mov
retf
enter
ror
jmp
aam
jmp
aad
(bad)
mov
mov
(bad)
mov
mov
sar
loop
sar
loop
sar
(bad)
(bad)
push
in
jmp
cwde
(bad)
jmp
rol
push
loop
inc
mov
idiv
cli
clc
idiv
cli
clc
idiv
cli
div
(bad)
stc
div
(bad)
stc
div
(bad)
clc
div
(bad)
clc
div
(bad)
clc
div
(bad)
clc
cmc
repz
clc
hlt
icebp
push
repz
push
repz
repnz
push
icebp
out
push
icebp
in
push
lock
push
out
in
push
out
jmp
repz
jmp
in
out
bnd
push
jmp
push
jmp
lock
loop
out
out
(bad)
in
in
(bad)
in
in
(bad)
in
in
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
(bad)
call
fst
jmp
fst
jmp
(bad)
jmp
(bad)
jmp
fcmovnbe
jmp
fcmovbe
jmp
(bad)
jmp
fcom
jmp
fcom
jmp
xlat
iret
jmp
xlat
into
jmp
(bad)
int
loope
int3
jmp
aad
jmp
aad
jmp
aam
jmp
aam
jmp
aam
(bad)
(bad)
(bad)
jmp
rol
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
rol
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
rol
(bad)
(bad)
(bad)
rol
(bad)
(bad)
(bad)
rol
(bad)
(bad)
(bad)
rol
(bad)
(bad)
(bad)
rol
(bad)
(bad)
(bad)
rol
(bad)
(bad)
(bad)
rol
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
rol
jmp
ror
jmp
aam
jmp
aam
jmp
aam
jmp
aad
jmp
aad
jmp
(bad)
int
(bad)
retf
jmp
(bad)
into
jmp
fcmovbe
jmp
fst
jmp
(bad)
(bad)
in
out
call
leave
(bad)
jmp
aad
(bad)
mov
loope
dec
ret
fmul
enter
sar
fcmovnbe
int
in
in
call
leave
(bad)
rcl
dec
sar
in
out
(bad)
fst
sar
lock
push
in
out
lock
jmp
(bad)
(bad)
fcom
sar
iret
mov
lock
bnd
(bad)
out
out
(bad)
(bad)
(bad)
push
out
jmp
div
repnz
fxch
(bad)
clc
out
inc
mov
clc
(bad)
sti
clc
idiv
cli
div
(bad)
cli
div
(bad)
stc
div
(bad)
stc
div
(bad)
stc
div
(bad)
clc
div
(bad)
clc
cmc
hlt
(bad)
clc
div
push
hlt
repnz
repz
push
repz
repnz
repnz
push
icebp
out
push
icebp
in
push
lock
push
out
jmp
repz
jmp
repz
jmp
in
call
push
jmp
push
jmp
lock
loop
out
out
(bad)
out
out
(bad)
in
in
(bad)
in
in
(bad)
jmp
(bad)
jmp
(bad)
jmp
fdivr
jmp
(bad)
jmp
(bad)
(bad)
call
fst
jmp
fst
jmp
(bad)
jmp
fcmovnbe
jmp
fcmovbe
jmp
fcmovbe
jmp
(bad)
jmp
(bad)
jmp
fcom
jmp
fmul
jmp
xlat
into
jmp
xlat
int
jecxz
int
loop
int3
jmp
(bad)
retf
jmp
aad
jmp
aad
jmp
aad
jmp
aam
jmp
ror
jmp
ror
jmp
ror
jmp
ror
jmp
ror
jmp
ror
jmp
rol
jmp
ror
jmp
rol
jmp
rol
jmp
rol
jmp
rol
jmp
ror
jmp
rol
jmp
ror
jmp
ror
jmp
ror
jmp
ror
jmp
ror
jmp
aam
jmp
aam
jmp
aad
jmp
aad
jmp
(bad)
retf
jmp
(bad)
int3
jmp
(bad)
int
jecxz
int
jecxz
into
jmp
fmul
jmp
fmul
jmp
xlat
iret
jmp
(bad)
jmp
(bad)
(bad)
jmp
loopne
(bad)
out
call
sar
in
out
jmp
(bad)
jmp
fcom
jmp
(bad)
(bad)
in
in
(bad)
in
out
jmp
fstp
push
in
out
repnz
call
(bad)
jmp
fdivr
repz
jmp
(bad)
push
lock
push
repnz
push
lock
call
leave
(bad)
(bad)
fxch
int
xlat
retf
retf
aad
push
hlt
repnz
icebp
out
push
in
jmp
loopne
xlat
push
out
jmp
clc
hlt
repnz
mov
in
(bad)
cld
bnd
cmc
sar
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
mov
mov
mov
cmc
mov
mov
mov
jecxz
retf
repz
cmc
(bad)
cld
cli
cmc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
pop
retf
push
call
push
cmc
mov
add
adc
dec
add
mov
scas
add
xchg
push
push
test
push
mov
pop
ins
mov
jmp
jle
aam
pop
shl
or
imul
jl
pop
pop
inc
cmp
dec
mov
jp
movs
(bad)
mov
lahf
cmp
shr
out
or
xor
in
pop
cmc
popa
cdq
inc
std
cmp
jmp
inc
push
rol
in
cmps
pop
mov
dec
or
adc
mov
in
sub
repnz
jo
or
pop
fldenv
push
adc
nop
outs
inc
out
xchg
(bad)
dec
adc
cmps
lds
xchg
outs
aaa
jg
mov
retf
popf
icebp
sbb
imul
inc
mov
(bad)
cmp
stos
pop
ss
je
inc
mov
mov
fs
mov
test
out
dec
lahf
inc
or
fimul
adc
xchg
xchg
jae
push
xor
out
pushf
adc
in
data16
xchg
mov
jg
push
lock
lods
imul
daa
or
adc
adc
push
imul
cmp
test
xchg
mov
dec
add
call
xchg
sbb
test
xchg
pusha
cmp
popf
push
js
xchg
int3
push
or
(bad)
lods
mov
push
dec
(bad)
dec
sbb
jb
outs
popa
(bad)
fisub
ins
adc
mov
mov
mov
arpl
jne
dec
in
mov
dec
mov
push
rcr
push
dec
stc
jl
adc
mov
push
pop
sahf
adc
shr
xor
and
out
jns
fwait
cmp
jmp
ins
hlt
mov
idiv
xor
mov
(bad)
aam
icebp
jecxz
xor
jle
ja
xor
pop
lea
mov
mov
icebp
(bad)
push
test
and
cmps
sub
icebp
inc
out
sbb
cmp
push
or
addr16
mov
out
jg
sub
xchg
pop
xchg
aaa
fadd
mov
mov
inc
clc
adc
leave
sub
jne
push
aam
scas
ret
sbb
das
add
adc
xchg
pop
push
xor
mov
jo
test
retf
push
repnz
(bad)
jo
mov
iret
je
mov
jge
mov
lahf
xchg
std
loopne
push
xor
lods
pop
ret
jmp
jp
stos
push
imul
jnp
mov
dec
mov
sahf
aas
mov
retf
stos
or
dec
sbb
mov
inc
mov
xchg
adc
push
repz
push
cmps
out
xchg
sbb
xchg
lods
mov
push
mov
mov
std
inc
xor
mov
push
or
stc
pop
dec
arpl
xchg
cmp
jge
add
or
fs
arpl
rol
xor
sub
cmp
sbb
adc
std
add
sbb
fmul
cmp
mov
pop
add
fisubr
mov
sub
fs
sbb
add
leave
inc
mov
loopne
inc
call
pop
jne
inc
fcomp
adc
in
int3
fiadd
mov
pop
fild
mov
pop
pop
jmp
sahf
sbb
cmp
jmp
xchg
aas
pop
lea
not
xor
jns
inc
jne
pushf
sub
jge
mov
xchg
mov
dec
test
jb
mov
ja
test
push
sub
dec
inc
int3
out
sbb
push
sub
push
jle
lods
and
dec
and
int
cli
xor
out
int
aad
jbe
out
inc
mov
out
push
jge
sbb
and
test
add
popa
mov
mov
cmp
pop
sub
mov
hlt
jns
adc
out
lods
xor
mov
into
or
fldcw
add
pop
jge
stc
retf
pop
cdq
call
fistp
add
scas
out
push
not
pop
ins
in
call
xor
ret
popa
shl
xlat
(bad)
ror
sub
dec
xchg
mov
mov
mov
call
fbld
std
fwait
mov
cli
jne
js
sbb
int
adc
int3
cs
ror
test
imul
cmc
icebp
or
sbb
lds
and
push
pop
sbb
push
addr16
mov
and
call
retf
ss
push
cdq
cs
cmp
fwait
pop
cmps
imul
(bad)
(bad)
out
rdpmc
jmp
or
(bad)
aam
ss
or
loopne
icebp
sub
or
ret
jge
js
das
jle
pop
je
dec
iret
mov
sar
enter
jnp
jno
les
fcom
mov
jg
scas
adc
outs
daa
sar
xchg
xchg
mov
dec
loopne
adc
jecxz
jge
sub
dec
leave
mov
cmp
out
lea
xlat
movs
jle
add
ins
mov
cmps
fcmovnu
(bad)
xchg
push
xchg
add
mov
dec
and
(bad)
rcl
fidivr
daa
pusha
mov
gs
shl
inc
into
mov
dec
les
(bad)
lods
xchg
daa
retf
movs
sbb
(bad)
mov
sbb
sub
pushf
xor
bnd
pop
mov
cmc
aas
mov
cmp
cli
jmp
mov
mov
jp
fsub
das
mov
repz
mov
mov
fbld
fld
popf
loop
outs
sahf
and
in
inc
stc
sbb
mov
mov
xor
xchg
mov
push
cwde
inc
popf
xchg
cdq
xchg
cmp
js
jmp
es
cmp
imul
lock
add
scas
pop
pop
sub
sbb
ds
jmp
pop
test
fdiv
lds
push
mov
in
out
adc
stos
pop
jge
daa
mov
wrmsr
cld
jmp
nop
or
push
dec
cmps
lds
push
adc
fwait
es
xchg
int3
cmp
xchg
dec
retf
adc
add
pop
inc
and
inc
ret
cmp
adc
xchg
popa
shl
popf
out
xchg
xchg
fcmovbe
mov
mov
retf
fnstenv
push
mov
je
(bad)
sub
call
push
cs
ret
or
mov
test
mov
dec
stc
repz
int3
pop
movs
and
sub
pop
rol
ror
fwait
jno
mov
mov
cmps
push
(bad)
imul
cmps
jle
dec
and
arpl
and
xor
pushf
push
mov
imul
mov
ins
and
sub
scas
retf
movs
ins
dec
ins
jno
adc
imul
ss
imul
cmc
cmp
jecxz
aaa
int
pop
(bad)
mov
mov
or
scas
sbb
out
inc
sub
or
cwde
in
and
test
in
lahf
sbb
pop
inc
test
jecxz
cmp
shr
sti
and
enter
pop
aad
mov
mov
imul
sub
jl
mov
cmps
pop
call
mov
mov
inc
fsubr
dec
dec
ror
push
je
and
aad
xor
push
addr16
sti
jne
cmp
jge
push
mov
sub
cmp
sar
add
inc
or
xor
in
lahf
xor
inc
add
xor
into
loopne
mov
xchg
inc
jge
js
outs
jb
sbb
cmp
mov
aam
push
mov
add
int
mov
jae
rcr
shl
aam
mov
aam
pop
xor
shl
inc
div
ds
push
std
jge
loop
dec
mov
add
sbb
cli
pop
shl
scas
out
inc
cmp
sbb
cmp
(bad)
jge
jne
and
fist
jg
dec
jmp
rol
enter
mov
adc
es
fisttp
aaa
jnp
dec
mov
mov
leave
jbe
mov
mov
ret
ror
jo
add
pusha
mov
ins
cmp
fmul
sub
dec
pop
add
mov
mov
cmps
cwde
add
add
and
sub
adc
(bad)
aad
lds
sub
aam
loope
mov
xchg
lahf
push
fcomp
je
shl
inc
add
jmp
pop
es
aaa
cmp
mul
out
cmps
pop
jbe
hlt
or
cmp
mov
mov
push
xchg
shr
(bad)
inc
xchg
or
cmp
mov
in
mov
lds
test
push
imul
cmps
test
aam
xchg
pop
jno
imul
lahf
dec
xor
js
jmp
in
lock
dec
dec
mov
hlt
out
fiadd
mov
jne
stc
mov
mov
shl
sub
mov
xchg
dec
jmp
jl
gs
scas
sbb
add
std
xchg
and
or
xchg
xchg
loop
shl
repz
lock
or
or
mov
and
loop
imul
fisubr
fcmovne
xor
stos
mov
movs
dec
xlat
push
cmps
je
xor
fimul
mov
cmp
pushf
lds
outs
mov
adc
(bad)
jge
xor
jp
jl
push
(bad)
jl
sbb
shl
loop
sbb
das
shr
inc
pop
adc
loope
iret
call
mov
pop
mov
fsubr
adc
sub
(bad)
push
jg
mov
arpl
add
jmp
xor
pop
xchg
(bad)
sahf
and
(bad)
and
xor
inc
rcl
in
jno
push
retf
cmp
leave
pop
push
or
cmp
clc
push
cmp
cli
sub
icebp
aas
add
repz
aas
mov
call
pop
shr
xlat
aas
dec
jae
dec
fstp
retf
lea
call
data16
or
in
mov
test
test
push
cmp
neg
(bad)
idiv
sti
repz
jnp
popa
xchg
sbb
pushf
add
aas
sub
sbb
lea
pop
push
or
sub
scas
sub
(bad)
out
mov
xchg
pop
rol
push
add
mov
stc
mov
mov
and
dec
fcomip
mov
imul
and
int
movs
mov
sbb
pop
mov
js
jo
sbb
push
imul
mov
push
mov
retf
inc
dec
cdq
int3
retf
ja
leave
cmp
data16
add
aad
mov
bound
out
repnz
xchg
sub
pop
mov
fdivr
or
adc
mov
inc
cwde
shl
retf
mov
dec
(bad)
fnstcw
push
pop
pop
mov
push
xor
or
xchg
ins
imul
les
mov
lahf
xchg
sbb
aad
fadd
fsubr
pushf
(bad)
sbb
push
ficom
inc
xchg
sub
and
and
call
fidivr
jg
pop
jge
sub
push
cmp
mov
or
in
fwait
adc
push
push
push
mov
jns
ss
aaa
xchg
add
mov
dec
xchg
jle
in
dec
je
xchg
mov
pop
cmp
mov
cmp
test
leave
dec
hlt
je
aad
loopne
push
xor
jg
test
je
daa
loope
cmp
sub
stos
push
(bad)
(bad)
std
push
cmp
xor
xchg
xor
dec
lahf
fisubr
pusha
cmp
sub
pop
xchg
xchg
aam
not
aad
cmp
out
call
jg
or
jp
sub
mov
ror
fld
icebp
xchg
xchg
jge
mov
push
push
movhps
aaa
je
sbb
jle
sub
leave
xor
test
fbstp
xchg
pop
mov
scas
in
aas
sub
or
sbb
or
rol
test
shl
xor
or
cmp
mov
dec
(bad)
adc
shr
mov
dec
gs
cmp
popf
add
add
adc
cmp
scas
fild
or
adc
imul
ins
inc
sub
adc
mov
inc
cmp
(bad)
cmp
es
fst
call
mov
cmp
cld
inc
mov
aaa
jl
push
imul
sub
push
push
aaa
icebp
aaa
dec
sbb
into
lds
cmp
dec
cmps
or
ret
adc
ret
test
ja
(bad)
jbe
jge
pop
fsubrp
jle
imul
stos
or
retf
push
sbb
push
fnstsw
cmp
xchg
pop
jecxz
inc
pop
xor
ja
rcr
jb
shl
and
mov
loope
jg
sbb
fnsave
push
nop
in
test
pop
mov
add
jge
call
xor
ja
push
add
aaa
jmp
cdq
in
pop
mov
add
xlat
sbb
push
scas
push
out
jnp
out
mov
xor
cmc
pop
jmp
cwde
(bad)
arpl
and
aad
leave
pop
adc
dec
add
lods
ins
fcom
jmp
xor
ins
xor
xor
mov
ins
fisub
dec
mov
outs
and
xor
sub
jmp
outs
jne
call
xor
test
jmp
repnz
add
xor
push
sub
out
pop
lods
outs
jmp
push
mov
stos
jle
add
cmc
pop
fdivr
sbb
mov
outs
rol
push
inc
add
inc
out
mov
and
outs
in
dec
add
dec
lods
iret
push
and
mov
sti
cmp
bnd
aas
add
sbb
mov
stos
lods
ss
lock
push
and
int
jae
fild
jno
add
cmp
fwait
stos
mov
sub
pop
test
adc
cmp
or
jecxz
leave
sahf
cmps
jmp
in
pop
adc
sub
nop
inc
push
ins
sahf
cld
jge
or
inc
adc
fiadd
push
imul
sbb
clc
dec
es
mov
xor
jmp
add
or
xor
(bad)
sbb
cmp
pop
loop
outs
mov
ins
lds
in
sahf
enter
fiadd
cmc
adc
jmp
enter
pop
daa
outs
fimul
ins
xchg
mov
add
adc
ret
sbb
call
ins
adc
pop
(bad)
aad
xlat
stos
sub
fcomip
pop
push
ror
adc
add
cwde
outs
pop
imul
or
int
jne
and
mov
push
test
pop
mov
fadd
dec
arpl
arpl
pushf
xor
cmp
es
sbb
xchg
cmps
cmps
sub
mov
in
mov
cmp
sti
sbb
aaa
sbb
pop
xor
lea
in
int
fnstcw
out
icebp
js
fs
or
cld
stos
in
ficomp
neg
push
inc
mov
test
xchg
nop
fld
mov
inc
jp
mov
fisttp
out
cmp
jle
rcr
pushf
lock
sar
lds
in
sub
xor
inc
sbb
loope
(bad)
std
cmps
les
enter
fsubr
call
xchg
and
add
or
add
mov
dec
ss
pop
stos
int
mov
pop
dec
or
dec
sub
retf
xchg
sub
push
push
int
stos
jae
(bad)
fld
rol
bound
aad
push
sahf
fisub
jl
cmp
popf
xadd
clc
add
push
in
xchg
and
dec
or
icebp
jbe
sub
push
push
adc
mov
loopne
neg
test
sbb
adc
fdivr
clc
xchg
test
jbe
sbb
test
sahf
imul
(bad)
xchg
push
fsin
das
push
lock
pop
loope
mov
fwait
sbb
loopne
xor
mov
cmp
jae
adc
xchg
cmc
adc
adc
push
pop
dec
ins
xchg
sbb
cvttps2pi
mov
cdq
pop
cli
mov
test
lods
hlt
adc
ret
sub
dec
repz
push
mov
cmp
mov
mov
fcom
aaa
pop
cs
and
mov
arpl
push
mov
cmp
outs
sbb
shl
adc
adc
inc
cmp
dec
out
push
mov
mov
push
ret
sub
sub
cmp
test
sbb
mov
push
or
jle
dec
mov
mov
test
inc
xchg
(bad)
mul
scas
pop
pop
das
inc
in
dec
(bad)
push
add
mov
mov
dec
xchg
mov
mov
dec
pop
push
aad
das
xor
test
jmp
movs
iret
arpl
xchg
daa
enter
sub
test
mov
mov
fild
sbb
push
fs
push
outs
and
mov
outs
push
retf
inc
dec
sbb
jnp
or
pop
pushf
enter
pop
jae
push
loopne
push
mov
add
add
and
or
(bad)
push
sub
bound
jmp
into
fcom
sub
mov
mov
lds
push
loopne
scas
jbe
lods
mov
in
fldenv
rcpps
jge
mov
jne
xor
stos
lock
in
jnp
xchg
scas
push
or
mov
shl
jbe
adc
mov
pop
in
mov
and
dec
shr
pushf
je
out
(bad)
pop
jmp
sub
clc
add
push
cmps
dec
or
fimul
xchg
aaa
mov
inc
and
call
test
and
mov
xor
add
mov
or
push
inc
dec
hlt
lea
jmp
test
mov
xchg
test
repz
fcomp
push
inc
sub
ja
idiv
inc
fwait
sbb
or
das
aad
xlat
and
sbb
jo
xchg
in
das
sub
or
(bad)
dec
jns
sti
loope
xchg
and
mov
mov
or
xchg
sbb
adc
inc
inc
shr
mov
call
mov
mov
or
sub
pop
pop
nop
adc
push
mov
push
mov
int3
in
add
inc
sub
mov
jno
push
outs
sbb
out
mov
adc
pop
add
mov
fwait
or
mov
push
xor
dec
add
cmp
xchg
(bad)
mov
stc
pop
data16
mov
xchg
jmp
lahf
addr16
mov
js
movs
xor
in
loopne
xchg
cmp
shr
push
in
into
iret
dec
adc
push
bound
jbe
repnz
pop
xor
adc
pop
fistp
add
fidivr
jp
aam
adc
dec
push
adc
xor
repnz
mov
in
add
fld1
into
push
push
and
fs
cmp
cmp
push
movs
cmp
xchg
scas
and
call
js
gs
nop
mov
idiv
and
mov
aad
(bad)
or
mov
fidiv
or
clc
fsubr
outs
xlat
sub
ins
cmp
rcl
fst
inc
popa
gs
maxps
call
in
xchg
xchg
cmp
or
cli
inc
and
sub
mov
cmp
fdivr
test
out
sub
push
mov
pusha
dec
mov
push
inc
call
adc
push
shl
xchg
and
inc
xchg
pop
aas
cmp
cli
sbb
outs
mov
std
sbb
enter
retf
xchg
cmp
inc
pop
arpl
mov
popa
sbb
sbb
pop
and
inc
fdivr
test
iret
mov
add
ror
sub
fidiv
mov
retf
ficomp
mov
pop
adc
lods
lds
retf
test
push
fsubr
daa
pushf
es
cmp
in
dec
dec
mov
dec
mov
adc
cwde
and
pop
add
xor
cmp
cmps
(bad)
or
fisub
push
and
and
fcom
xchg
mov
inc
fdiv
push
sbb
fldcw
arpl
jmp
sbb
push
sbb
sahf
mov
dec
mov
push
inc
fsubr
test
retf
in
in
or
cwde
fild
adc
push
inc
outs
or
cmp
fld
add
adc
and
in
mov
adc
(bad)
mov
push
push
push
jb
push
cmps
imul
xchg
(bad)
xor
ss
repz
sahf
push
jmp
mov
push
je
cmps
imul
lods
push
dec
es
int3
jp
leave
inc
call
icebp
lods
mov
das
mov
fbld
cdq
jecxz
or
push
pop
loop
pop
outs
inc
jno
arpl
pop
dec
cs
popf
mov
pop
jmp
fstp
inc
pop
shr
mov
pop
push
pop
sub
enter
and
daa
mov
ja
repz
into
popa
dec
repnz
cmps
sbb
lods
loope
fld
test
iret
ficom
xchg
loope
or
or
pop
push
jge
imul
aas
in
loop
push
cmp
adc
push
imul
mov
push
out
lods
pop
aas
xchg
sub
dec
mov
push
xchg
leave
leave
(bad)
into
loope
jnp
mov
in
xchg
xchg
retf
push
mov
mov
ret
push
cmp
outs
pop
push
call
icebp
xchg
jl
mov
ret
xchg
ds
xchg
cmp
mov
jb
sub
cmp
test
and
je
popf
xchg
pop
pop
mov
sbb
jmp
(bad)
xor
imul
aam
push
test
aaa
call
mov
inc
out
dec
cwde
jo
push
mov
mov
jmp
push
aad
scas
adc
pop
sub
loop
mov
jno
leave
pop
sub
dec
mov
pop
int3
xor
bnd
pop
sbb
in
bound
push
push
nop
ret
fld
add
xchg
adc
adc
cmp
jle
add
les
xlat
lds
fsubr
fcom
inc
cmp
mov
sbb
adc
jbe
scas
xchg
add
in
rol
dec
loop
fwait
pop
inc
adc
jl
ins
adc
sar
daa
iret
push
add
ror
not
mov
sbb
cmp
ins
rcr
xchg
call
mov
loope
shr
cdq
mov
adc
repnz
mov
arpl
push
loopne
mov
push
jmp
mov
(bad)
pop
mov
push
(bad)
or
les
aam
fst
xchg
ret
jmp
cmp
mov
pop
sub
adc
bound
xor
test
cs
not
pop
xchg
or
mov
mov
adc
mov
loopne
sbb
fwait
add
dec
jb
adc
and
js
inc
ss
rcr
rcr
dec
sti
mov
scas
loop
pop
xchg
fisttp
mov
mov
jb
mov
ja
inc
cmp
fwait
adc
mov
push
xor
fadd
sbb
push
and
inc
lea
pop
out
sbb
fcmove
in
nop
mov
adc
stos
cmp
test
jge
ror
call
movs
or
in
inc
jnp
shr
shl
imul
loope
sahf
sar
adc
icebp
cmp
imul
int
pop
mov
call
retf
jmp
ins
mov
dec
nop
adc
stc
push
adc
loope
dec
push
scas
inc
or
loopne
cli
mov
(bad)
stos
add
js
shl
dec
js
sub
pcmpeqw
mov
inc
xchg
dec
pop
mov
sbb
inc
sar
add
cli
out
jle
hlt
inc
call
mov
cwde
inc
push
call
popa
mov
inc
pop
aad
mov
or
arpl
sub
mov
mov
repz
xor
arpl
sub
inc
jmp
enter
bound
xchg
mov
mov
lds
push
not
ins
repz
test
call
(bad)
jno
and
add
cmp
fcom
xchg
mov
sbb
xor
stos
mov
push
call
dec
das
inc
bound
into
inc
add
ins
inc
mov
fisttp
loop
sbb
mov
sub
push
jbe
repnz
dec
push
pop
sti
rol
out
in
jnp
xchg
mov
mov
fwait
push
neg
pop
fstp
pop
sub
pop
or
and
lahf
pusha
sub
cmp
repnz
gs
or
pop
mov
jnp
jl
aas
push
mov
shr
push
xlat
sbb
cmp
ret
js
pop
les
jo
sbb
pop
fsubr
stos
dec
(bad)
aam
inc
imul
pop
pop
cmps
stos
ja
adc
push
outs
inc
sbb
push
adc
scas
mov
cld
jle
inc
mov
adc
call
jbe
jbe
fwait
dec
push
jle
ds
adc
aam
sbb
out
push
pop
sbb
fadd
cmp
pop
leave
outs
jp
ss
mov
fidiv
lock
pop
inc
aad
push
test
jle
lahf
gs
inc
mov
test
pop
lods
fcmovnu
push
adc
jmp
(bad)
jmp
push
jmp
xchg
iret
push
daa
fcmove
movs
sbb
push
arpl
pop
or
mov
enter
nop
ins
dec
scas
repz
xchg
lods
xor
cmp
rcr
and
mov
sub
xlat
outs
inc
popf
add
adc
repnz
jmp
out
jle
imul
mov
lods
push
ds
ins
mov
pop
mov
(bad)
xlat
inc
xchg
jno
cdq
lods
(bad)
pavgw
aad
mov
cld
pop
into
xchg
(bad)
movs
scas
outs
push
das
mov
push
xchg
dec
add
imul
cmp
xor
mov
fsub
aad
dec
push
cmp
xlat
add
add
repnz
cmp
add
test
xor
(bad)
jno
repz
mov
bound
or
fsubr
and
xor
fs
push
push
push
out
xchg
sar
mov
cmp
leave
aad
pushf
push
in
loopne
sbb
lock
push
jne
(bad)
repnz
ss
xchg
add
lea
push
movs
jne
mov
clc
cmp
dec
jns
jmp
daa
cwde
and
fist
sub
rcl
push
xchg
pop
ins
pop
mov
leave
repz
es
jns
mov
mov
fstp
pop
sub
sub
sub
call
imul
adc
bound
movs
cli
mov
mov
mov
inc
ja
pop
jg
iret
or
cld
sbb
nop
test
gs
mov
sbb
cld
pop
mov
mov
dec
pop
mov
out
aam
shl
in
or
mov
dec
pop
inc
ins
pop
xor
aaa
mov
or
push
fisubr
push
dec
pop
out
jl
pop
adc
xchg
shl
enter
push
push
ror
mov
jg
in
mul
cmp
inc
pop
out
sbb
sahf
mov
ins
mov
push
lds
inc
dec
mov
xor
push
jb
call
push
pop
in
out
test
in
shr
imul
push
(bad)
mov
test
or
ds
ficomp
aad
pop
and
fwait
jg
aas
push
mov
push
push
sbb
jne
cs
(bad)
mov
xor
inc
adc
cmp
xchg
(bad)
in
pop
pop
xor
aaa
cdq
stos
jo
jle
xchg
mov
ins
jmp
mov
jbe
add
movs
stos
push
xor
out
mov
sbb
xchg
stos
sub
into
xchg
adc
(bad)
cmc
mov
dec
push
iret
cmp
dec
nop
(bad)
pop
stos
leave
cmp
cmp
clc
(bad)
movs
mov
cmp
icebp
xchg
mov
mov
lahf
push
sbb
repz
imul
push
mov
sti
mov
sbb
test
out
iret
icebp
out
jmp
mov
cmc
pop
sbb
in
dec
(bad)
cmps
std
js
jmp
mov
push
(bad)
iret
jmp
out
push
aam
inc
push
jbe
xchg
xchg
js
and
and
mov
stos
test
jp
ret
cmp
push
aad
movs
sar
jmp
adc
mov
psubusb
push
jp
jne
fimul
sbb
push
(bad)
mov
mov
iret
shr
and
pushf
sub
sbb
imul
pop
dec
adc
shl
rol
jb
add
mov
cmps
stos
fstp
ja
cmp
xchg
adc
pop
arpl
mov
mov
push
cmp
push
mov
cmp
ror
cmc
adc
retf
mov
loope
in
or
movs
mov
xor
push
in
xchg
lods
es
mov
repz
or
lods
rol
xchg
scas
jmp
cs
adc
add
cmp
dec
or
cwde
mov
and
jmp
sbb
mov
push
fimul
sub
sub
int3
xchg
daa
adc
sar
popa
jno
pop
ins
adc
sub
icebp
shl
jge
(bad)
out
mov
in
mov
aas
jmp
sub
and
repnz
test
aam
leave
and
je
lods
jbe
xor
mov
pusha
sub
push
ror
pushf
fisttp
aad
xlat
xor
and
outs
dec
xchg
call
repz
(bad)
mov
jns
mov
sub
pop
add
and
sbb
movs
add
or
outs
mov
pop
scas
fiadd
imul
inc
and
xor
imul
adc
mov
into
lds
mov
xchg
call
dec
aaa
fistp
or
dec
adc
retf
mov
sti
loopne
cmps
arpl
adc
dec
jg
into
jg
dec
sbb
fcom
adc
xchg
std
xor
loope
rol
cmp
int
pop
fld
outs
ror
xlat
out
and
stc
xor
in
jae
lahf
push
arpl
mov
mov
popf
pop
sbb
hlt
rol
cmp
rol
jbe
adc
scas
add
test
fs
and
push
adc
push
xchg
sbb
xor
jle
jp
cs
das
loope
jp
add
pop
mov
mov
cdq
les
das
cmp
int3
sti
mov
cmp
popa
loope
test
xchg
pop
jbe
stc
arpl
rcr
aam
lea
cmp
popa
add
jmp
sub
dec
pop
push
xor
out
aam
mov
shr
inc
cmp
retf
jmp
(bad)
sub
push
scas
aaa
add
out
inc
jb
arpl
ss
shl
test
jns
(bad)
lock
popa
imul
inc
add
xor
dec
jnp
leave
mov
sbb
(bad)
popf
in
in
fidivr
inc
jbe
mov
xor
or
add
xor
mov
xchg
jecxz
adc
inc
and
xchg
dec
cmps
inc
imul
pop
mov
sbb
cmps
xor
inc
aad
push
cmp
adc
(bad)
fild
xor
cmp
jge
jns
(bad)
repnz
dec
dec
call
neg
repz
movs
(bad)
sbb
sbb
lock
add
pop
in
fist
imul
xor
mov
push
ins
dec
mov
and
or
dec
xor
pop
inc
fcomp
add
test
pop
sbb
ret
fimul
(bad)
out
mov
dec
shl
cmps
mov
adc
ins
test
sub
ret
(bad)
pop
(bad)
fsub
mov
fcomp
call
sub
or
fs
(bad)
shl
rol
xchg
data16
push
scas
push
test
pop
pop
lock
test
or
sub
add
int3
push
mov
inc
pusha
pop
add
nop
pop
jp
ror
(bad)
mov
scas
fist
xlat
mov
xor
and
movs
inc
inc
or
fldz
fsubr
adc
(bad)
or
mov
jo
cmps
cmp
add
jbe
ins
push
dec
xor
xor
sub
jb
pop
test
inc
cdq
std
imul
cmp
inc
aad
pop
lods
mov
(bad)
xor
cmp
aad
out
add
ja
mov
add
loopne
sti
inc
(bad)
loope
dec
nop
inc
push
mov
sbb
jl
ret
mov
scas
or
hlt
or
and
push
mov
sbb
pop
out
loope
inc
pushf
call
aad
add
xchg
push
sbb
stc
in
enter
mov
cmp
dec
xor
pop
ror
jle
sub
into
loop
mov
push
inc
imul
lods
pop
iret
ja
rol
cmp
in
add
lock
cmp
cmp
loope
and
pop
repz
mov
(bad)
jno
das
mov
loopne
rcr
sbb
sub
test
dec
or
clc
mov
lock
mov
lds
dec
gs
sbb
push
arpl
retf
(bad)
lods
ins
pop
push
stos
push
pop
call
fbstp
add
mov
gs
xchg
mov
push
out
cmp
sbb
push
scas
and
pop
xchg
adc
out
mov
xlat
movs
sub
push
ret
or
repz
pop
scas
idiv
mov
das
repz
jno
adc
ss
jae
add
mov
mov
pop
sbb
fwait
out
mov
mov
ret
mov
ins
mov
inc
inc
push
mov
push
fdivr
rol
xlat
int3
mov
ret
or
xor
sbb
mov
mov
jp
mov
pop
rol
test
sti
sbb
jb
jo
out
inc
push
addr16
push
jmp
mov
ficomp
add
inc
iret
jmp
pop
dec
sub
stos
(bad)
cli
retf
lock
sbb
inc
inc
test
xchg
(bad)
ret
add
jo
ss
punpckhdq
cwde
pop
ja
pop
jno
scas
push
inc
stc
push
jns
mov
mov
adc
(bad)
sub
jmp
test
sub
(bad)
xor
fbld
sbb
popf
aas
sub
xor
add
cs
push
ds
or
in
dec
adc
(bad)
cmp
inc
loopne
pop
cmps
into
scas
movs
mov
or
fcom
lods
sahf
leave
inc
dec
push
iret
push
lahf
inc
cld
mov
pop
cs
ds
dec
or
sbb
lds
das
bound
pop
scas
sar
fwait
xor
into
sub
outs
and
inc
lods
cmp
jecxz
icebp
mov
xor
jbe
mov
push
ror
stos
push
scas
adc
mov
xchg
sbb
sbb
push
aad
mov
int3
shl
mov
and
mov
pop
(bad)
and
mov
test
call
nop
aaa
cli
in
fs
outs
ror
(bad)
fabs
les
movaps
push
xchg
aam
ret
cmp
das
cmc
jno
ss
mov
push
movs
das
xlat
stos
out
addr16
fld
xor
shl
add
sub
sbb
xchg
mov
mov
jns
sub
scas
xchg
pop
pop
(bad)
daa
push
lock
imul
sub
cmp
and
test
jne
aad
sar
sbb
add
cld
cmp
pusha
cmp
iret
pop
and
in
mov
push
test
mov
cmp
xchg
pop
retf
xor
cdq
inc
popa
adc
adc
cld
les
xchg
call
scas
aam
imul
ficom
cli
imul
jge
fadd
mov
mov
dec
push
push
push
scas
sub
popf
pop
test
jb
aam
call
sub
hlt
addr16
lock
mov
sub
loopne
mov
iret
mov
push
mov
test
mov
xchg
mov
pusha
sub
into
cmp
dec
ficomp
or
mov
shr
adc
aaa
inc
test
sbb
daa
(bad)
mov
xchg
movs
jns
sub
inc
movs
mov
cwde
in
adc
pop
aas
push
loopne
and
ror
loopne
cli
test
jae
adc
rcl
add
scas
mov
nop
inc
mov
xor
out
xor
adc
test
xchg
jge
cmp
mov
or
or
cdq
aas
pop
call
push
mov
and
js
mov
push
sbb
sbb
sbb
mov
sbb
enter
ror
clc
adc
popf
or
dec
es
mov
fsub
lahf
inc
(bad)
retf
rcl
aas
xor
inc
mov
jl
mov
lods
or
into
mov
or
and
repnz
outs
hlt
xchg
ja
and
pusha
repnz
clc
xchg
inc
sbb
movs
into
cmps
fs
imul
adc
cmp
outs
push
jmp
ja
movs
popf
in
or
dec
mov
mov
aaa
cwde
adc
ret
cs
sbb
inc
leave
sub
sub
stos
push
mov
mov
xor
cmp
dec
jmp
sahf
div
test
fcmove
xchg
por
imul
mov
in
(bad)
aam
xor
xor
inc
jnp
fst
inc
inc
sub
or
mov
jmp
mov
shl
add
inc
dec
cmp
inc
dec
mov
ss
xchg
push
ror
fwait
pop
nop
mov
fst
popa
add
add
mov
lahf
arpl
dec
inc
xor
push
aam
repz
adc
mov
mov
cmp
pop
xchg
adc
sbb
mov
inc
or
sbb
mov
sti
jnp
adc
aaa
test
add
cmp
loope
lahf
fidiv
call
mov
cmp
jns
xor
jnp
mov
addr16
cmps
pop
jns
add
(bad)
jne
sar
mov
call
inc
fs
adc
cmp
lods
or
dec
jb
and
inc
inc
retf
pop
jmp
or
je
int
imul
cdq
rol
cmp
pop
adc
cli
xor
dec
push
arpl
or
adc
ss
pop
test
pop
test
xchg
mov
adc
inc
push
push
xchg
add
mov
gs
out
std
mov
mov
stc
shl
outs
in
in
fs
dec
add
pop
pop
xor
out
das
pop
dec
lods
addr16
popw
push
xchg
daa
pop
jmp
mov
(bad)
fimul
or
test
cld
int
mov
(bad)
and
or
out
xor
lock
mov
mov
mov
cmps
ret
or
cmp
mov
fiadd
test
cmps
sahf
stos
fstp
adc
(bad)
jmp
or
shr
fs
aas
jp
jo
xor
sbb
dec
loope
add
cdq
ja
pop
repnz
cmp
cwde
push
pop
sub
and
xor
xor
test
cmps
xor
popf
test
lods
js
pusha
inc
push
(bad)
int3
xchg
pop
jecxz
push
stc
inc
lock
xor
push
inc
sar
pop
jl
jp
in
fld
fidiv
add
rol
lods
loopne
enter
retf
lahf
lods
jmp
jno
ds
cmp
data16
sub
dec
push
ja
or
stos
into
vmaxss
into
int
test
cmp
in
xor
aam
repz
inc
aad
sub
mov
xor
xchg
pop
imul
fcom
arpl
adc
cmps
pop
add
add
sub
push
push
sar
iret
sar
xchg
js
out
inc
add
out
adc
fs
cli
and
pop
scas
add
xchg
shr
sbb
hlt
sti
(bad)
scas
jno
in
push
imul
xchg
outs
mov
cmc
gs
xlat
push
and
scas
push
add
adc
xchg
inc
lahf
xchg
fisttp
pop
je
and
sub
lods
lock
push
sbb
dec
pop
mov
dec
xchg
xchg
xchg
push
stc
aad
shl
out
dec
mov
mov
mov
push
mov
pop
jle
les
sbb
or
and
jae
in
dec
arpl
inc
xor
cs
xchg
out
movs
iret
outs
mov
stc
gs
fnstcw
in
shl
pop
loope
and
mov
xchg
pop
xor
out
das
push
mov
add
fbstp
shl
adc
pop
clc
add
sub
or
xchg
push
iret
xchg
adc
and
fstp
cmps
stc
stos
sub
or
addr16
retf
icebp
outs
inc
pop
fwait
add
inc
je
sub
pop
sbb
pop
arpl
pop
test
push
fstp
push
add
mov
in
pop
dec
movs
adc
nop
daa
push
fadd
cmps
cmp
mov
pop
das
cmp
mov
sub
cmps
cmps
dec
dec
mov
push
mov
jb
(bad)
fadd
mov
into
and
aaa
les
push
ret
in
popa
call
mov
adc
retf
test
cmp
mul
dec
pop
or
ss
repz
(bad)
fdiv
(bad)
mov
jecxz
inc
fmul
test
xlat
jge
pop
outs
dec
cli
cmp
sub
sar
or
fisubr
fadd
mov
xor
push
je
push
cmp
mov
fsub
mov
int3
test
add
sbb
ret
ficomp
sub
sbb
out
push
fistp
dec
jns
addr16
dec
std
or
cs
sub
int
mov
xchg
pop
pop
pop
fstp
jg
daa
mov
mov
call
out
ret
jne
ror
sub
sub
out
sti
stos
mov
pop
xor
mov
ins
push
cmp
sbb
and
fwait
jl
das
aas
sti
mov
xchg
(bad)
rol
sub
or
out
cmp
outs
fwait
inc
push
adc
jb
(bad)
jns
add
shl
and
daa
jne
mov
clc
out
jge
cmps
inc
mov
fist
sbb
push
and
inc
int
jne
or
mov
xchg
mov
jp
lock
movs
lods
lods
or
push
mov
loop
and
in
out
pop
xor
add
int
movs
mov
mov
mov
sbb
pop
ja
dec
pop
inc
adc
add
dec
imul
ins
jmp
mov
imul
add
mul
sub
sbb
into
sbb
sub
gs
dec
jb
retf
jns
adc
gs
pop
fisubr
(bad)
popa
mov
fisubr
jg
sbb
cmp
inc
ret
or
mov
fcom
fisubr
fmul
add
mov
and
out
xchg
imul
mov
pop
sbb
lods
aam
xor
or
mov
xchg
repz
mov
inc
leave
sahf
mov
pusha
cli
mov
push
push
(bad)
frstpm(287
inc
xchg
jl
jb
pop
loope
std
mov
fs
(bad)
out
inc
jno
xchg
cld
fdiv
fst
repnz
movs
in
or
sub
and
(bad)
pop
cmovb
jae
push
scas
push
bound
aam
sub
mov
hlt
cmps
mov
mov
mov
and
jl
mov
inc
pusha
xor
mov
sbb
and
mov
sbb
fcmovbe
cli
mov
or
test
ret
mov
retf
xchg
xor
outs
mov
jbe
cmp
fwait
stos
je
push
fidiv
xor
mov
scas
inc
repz
out
je
test
pop
xor
xor
cld
jb
inc
or
pop
outs
rcr
int3
push
sbb
and
loop
sub
sub
mov
js
adc
jo
adc
mov
fldenv
jge
loopne
jno
mov
mov
rcl
movs
(bad)
cld
dec
jp
dec
scas
fwait
std
xor
jb
mov
ret
popf
lea
sbb
dec
fcomp
daa
dec
jb
mov
add
push
data16
or
inc
inc
adc
aam
(bad)
cli
in
xchg
pop
sbb
call
adc
adc
lods
sub
(bad)
mov
mov
cs
pop
movs
mov
pop
add
sbb
adc
xlat
lds
outs
or
out
int
pop
cmp
sbb
out
outs
scas
adc
cmp
call
test
sbb
cld
pusha
call
fstp
add
call
pusha
out
adc
mov
push
push
call
dec
ror
cmp
lock
sub
sahf
jo
adc
lods
cld
and
dec
jnp
rcr
add
inc
in
xor
add
mov
fnstsw
sub
pop
inc
scas
jne
fwait
and
inc
sahf
mov
pop
lods
stc
test
xor
jne
ror
cmp
mov
adc
div
mov
jns
jmp
or
bound
sar
and
xor
retf
lods
(bad)
call
mov
xor
imul
icebp
push
int3
add
aaa
mov
ret
data16
lods
outs
ss
fcmovnbe
popf
xor
(bad)
cmp
adc
outs
mov
das
ss
mov
aas
test
enter
loopne
xlat
xchg
cmp
dec
stos
fadd
cs
imul
add
sub
out
lock
mov
or
cmps
das
cmps
js
xor
mov
js
sub
lds
enter
mov
int3
or
mov
cdq
in
idiv
xchg
or
or
aaa
popa
imul
addr16
or
pop
int
jo
add
dec
retf
inc
xchg
dec
das
sbb
jp
scas
pop
sti
xchg
or
push
ds
addr16
ds
mov
xchg
push
sbb
and
sti
jg
cdq
retf
ror
cmc
push
mov
inc
retf
add
dec
call
or
stc
push
cs
aaa
iret
scas
fsubr
pushf
push
aad
mov
or
test
xchg
add
dec
push
daa
jmp
ja
repnz
dec
adc
je
lds
into
jp
ins
push
call
jp
push
jmp
adc
js
pop
sbb
cmps
adc
cmp
and
mov
sbb
in
jo
and
pushf
or
adc
mov
arpl
dec
sub
cmp
rol
fidiv
std
fisttp
(bad)
pop
(bad)
pop
mov
push
and
push
aam
loop
test
ins
outs
loop
sbb
loopne
xchg
push
jbe
mov
mov
or
lods
mov
xchg
pusha
out
adc
ins
(bad)
jmp
push
inc
or
addr16
shl
cmp
shl
or
out
sti
mov
repz
inc
je
dec
jmp
fucomi
or
sub
lds
dec
clc
dec
lea
mov
dec
pusha
aaa
mov
clc
jbe
mov
scas
xor
cwde
fnstcw
jge
lahf
mov
scas
pop
push
mov
test
inc
loope
xor
sar
arpl
scas
cmps
retf
and
mov
(bad)
and
pop
mov
jl
into
ret
ret
in
lods
test
sbb
adc
loope
cmps
mov
out
jns
ret
mov
and
cmp
lods
mov
shl
cdq
rcr
sub
repz
mov
test
pop
pop
ins
aam
add
js
in
push
ror
mov
jmp
jns
mov
sub
call
movs
inc
int3
inc
cmp
fs
nop
cmp
and
icebp
cmp
adc
mov
push
in
mov
dec
(bad)
or
movs
out
pop
cmp
push
shr
cwde
test
push
inc
aas
stos
dec
cmps
pop
loopne
cmp
jge
jnp
and
adc
sub
cmp
xchg
add
sbb
cmc
dec
cli
jb
fisub
mov
sbb
arpl
mov
inc
data16
(bad)
mov
mov
xor
inc
imul
call
into
(bad)
jmp
lock
aad
fdivr
push
push
mov
cld
add
outs
cmp
jl
xchg
call
xchg
mov
sbb
mov
lods
imul
pop
fnstsw
and
adc
mov
outs
lods
shr
sub
ret
mov
rol
fidiv
and
icebp
adc
out
xor
sbb
outs
or
add
adc
inc
add
pushf
popa
xchg
leave
sbb
lods
fwait
jo
pop
les
cmp
cs
into
cli
das
fild
in
sbb
jnp
int3
loope
xchg
sub
pop
addr16
movs
inc
mov
jbe
mov
pop
shl
xchg
or
stc
dec
jp
enter
push
inc
movs
inc
retf
jg
or
jg
inc
xchg
pop
sahf
(bad)
sbb
retf
mov
ds
mov
and
dec
out
out
sub
scas
push
ja
jg
sbb
cmc
push
nop
jmp
pop
cmps
xor
pushf
inc
pop
retf
loope
add
mov
xlat
retf
in
movs
fstp
adc
mov
ins
ret
(bad)
jb
or
stos
jp
xor
hlt
mov
ss
ss
fs
jo
(bad)
int
inc
cmps
xchg
add
jne
push
dec
aaa
popf
xor
add
and
jecxz
and
or
loope
pop
jns
xor
adc
int3
rol
(bad)
cdq
pop
inc
test
popa
aas
jae
adc
xchg
mov
sbb
stc
xchg
jno
mov
pushf
jne
call
xchg
aaa
dec
jb
push
sub
mov
xor
jg
out
div
xchg
mov
jmp
push
rcl
stos
jo
aas
mov
jno
call
jp
push
sub
mov
cmp
jo
scas
push
xor
mov
cmps
inc
sbb
scas
xor
fmul
xor
mov
movs
shl
leave
add
push
out
shl
fs
or
mov
retf
inc
adc
adc
cmpxchg
pop
mov
or
pop
(bad)
push
cmc
scas
mov
sub
imul
arpl
mov
std
cmp
inc
ds
jle
pushf
mov
inc
lock
or
or
repnz
test
mov
adc
cmc
add
scas
popa
jb
and
repz
loopne
push
xor
test
dec
sub
lds
(bad)
es
dec
mov
inc
push
(bad)
inc
xchg
inc
rcl
mov
sbb
xor
and
mov
je
ficom
in
cli
push
dec
test
sbb
sbb
daa
mov
arpl
bswap
cmps
jle
sbb
jmp
or
or
popf
lods
outs
mov
imul
hlt
(bad)
or
das
jnp
in
ins
loopne
outs
out
and
in
es
xlat
xor
pop
push
inc
cmp
push
ins
fisub
push
mov
or
ja
xor
div
xlat
movs
or
mov
jl
in
lods
test
(bad)
in
mov
jge
popa
push
mov
std
popa
add
pop
bound
je
inc
lods
enter
inc
mov
adc
call
mov
and
fldl2e
pop
cwde
outs
pop
loop
shl
mov
setnp
cs
cmp
bound
call
cli
loop
push
pop
lock
and
add
mov
out
sti
mov
out
fst
add
pop
icebp
sar
pop
js
hlt
ss
inc
inc
pop
cmp
ds
add
js
sub
fidiv
je
pop
fbstp
xchg
adc
mov
jl
pop
xchg
push
add
push
fdiv
fisub
sub
fsubr
lahf
add
jg
mov
cmps
fwait
cmps
out
mov
fbld
sub
ss
dec
add
sub
inc
xchg
je
das
dec
push
xor
xor
repnz
inc
out
in
out
dec
loopne
(bad)
(bad)
fimul
jb
jmp
mov
fiadd
pop
mov
pop
ret
cld
sahf
mov
xor
int3
inc
in
jg
sbb
iret
mov
dec
pop
jge
stos
maxps
clc
push
std
sub
shl
jge
aaa
push
icebp
and
ss
cmps
clc
or
xchg
mov
push
and
scas
mov
sar
sub
add
ror
and
or
lock
mov
bound
fisubr
loop
add
and
neg
pop
popf
scas
arpl
or
pop
cmps
je
mov
outs
ins
sub
gs
jnp
xchg
sub
cmp
test
test
test
pop
xor
pop
icebp
dec
or
inc
call
mov
add
inc
or
sub
xor
xchg
jp
arpl
jle
mov
fdivr
dec
jecxz
ret
in
out
mul
fcmovnb
jbe
(bad)
data16
xor
xor
push
fld
and
or
adc
(bad)
mov
jno
jae
retf
cmps
dec
fistp
jp
inc
scas
clc
dec
mov
xor
popf
sub
mov
and
push
add
xchg
inc
xchg
int
inc
cmps
adc
popa
inc
hlt
arpl
(bad)
lods
pop
adc
add
call
lods
adc
inc
jle
loope
jns
fucom
test
or
leave
jb
rcr
cdq
rol
jno
dec
fiadd
mov
aam
push
jl
mov
cmp
dec
xchg
outs
mov
imul
inc
or
fucomip
xor
push
sbb
mov
sbb
hlt
push
adc
push
cmps
movs
cwde
mov
into
ins
imul
pop
scas
xor
int3
jle
jbe
pop
cdq
push
jo
aad
ins
add
mov
in
jl
pushf
and
pushf
cli
push
cli
es
ror
ins
shl
pop
in
stos
(bad)
jnp
std
out
or
cmp
es
dec
mov
xchg
fnstenv
and
inc
jb
(bad)
fdiv
xor
xchg
int3
popa
icebp
jl
cmp
jp
push
lods
rcl
shl
ds
cdq
jmp
or
jns
div
add
pusha
jp
push
iret
jg
jae
(bad)
pop
loopne
test
jbe
test
adc
push
push
inc
imul
push
aad
test
sbb
mov
adc
sbb
lock
adc
ja
jle
add
mov
xor
iret
add
daa
in
sbb
test
pop
dec
xlat
rcl
pop
add
add
out
fmul
jp
and
rcr
adc
adc
and
xor
sbb
jle
(bad)
(bad)
lock
jns
xor
inc
push
jecxz
add
into
adc
jbe
(bad)
ins
jns
sub
and
cdq
and
add
sbb
call
outs
dec
sbb
and
(bad)
(bad)
and
inc
ss
cwde
scas
mov
mov
and
(bad)
and
cli
pushf
fistp
dec
or
jo
jp
in
fidiv
shr
in
jns
xor
inc
pusha
sub
jmp
sbb
(bad)
daa
in
and
les
clc
loop
icebp
inc
xchg
add
cmp
cmp
or
out
mov
aad
pop
jbe
push
into
or
mov
cmp
mov
jo
jo
dec
pushf
adc
mov
movs
adc
sbb
mov
ret
adc
popa
fisub
cmp
sbb
fld
push
loop
add
ret
cli
clc
sub
clc
ss
add
push
ins
idiv
(bad)
push
adc
(bad)
or
mov
enter
rcr
or
xor
push
test
call
mov
jmp
mov
mov
pop
jo
das
enter
cmp
ror
and
call
sub
jo
fild
imul
jl
pop
push
stos
loop
pop
retf
mov
das
shl
push
xlat
cld
lea
dec
(bad)
movs
mov
adc
cmp
adc
sbb
call
out
js
lods
out
adc
push
int
push
cld
test
cmp
lea
je
or
jecxz
mov
dec
addr16
jnp
fmul
repz
mov
inc
cmp
mov
lods
xchg
mov
iret
xchg
lds
mov
mov
icebp
jnp
ror
push
jnp
adc
mov
pop
imul
dec
push
jp
push
push
call
or
aas
pusha
xor
sub
sub
cmp
inc
mov
sbb
mov
pop
(bad)
nop
dec
pop
cld
call
pop
dec
stc
push
jne
pop
pop
mov
push
sub
nop
sti
adc
xor
mov
(bad)
outs
xor
dec
push
lods
jns
out
ds
inc
pop
(bad)
xor
imul
and
jne
cmp
add
cmc
int3
scas
adc
mov
fild
xor
mov
xchg
push
push
hlt
jnp
mov
mov
repz
mov
cmp
dec
xchg
aad
sub
mov
loope
mov
xchg
mov
and
ss
adc
jmp
jns
or
mov
daa
sbb
mov
nop
inc
out
push
adc
test
dec
pop
movs
shl
cmps
cmp
fs
retf
sahf
inc
mov
xchg
xchg
gs
xchg
xchg
fcom
aam
xchg
jae
dec
or
add
push
adc
pop
inc
mov
out
push
fimul
jmp
sbb
dec
(bad)
out
std
and
xchg
in
ret
(bad)
jmp
mov
and
test
add
loop
xchg
add
dec
pop
cs
test
test
fdivr
imul
push
fwait
popf
loop
adc
push
mov
sub
sar
lock
add
mov
mov
lods
sbb
call
xchg
xor
ins
scas
mov
push
sar
cmp
or
test
adc
and
xchg
nop
or
ja
cli
pop
mov
dec
push
jmp
push
jmp
mov
jno
add
xchg
repnz
(bad)
retf
stc
hlt
pop
inc
fdivr
clc
inc
(bad)
shl
adc
ds
clc
pop
xchg
mov
xchg
jecxz
xchg
jae
and
mov
je
mov
fptan
lea
push
add
push
adc
gs
adc
mov
cmps
sub
cmp
(bad)
shl
js
mov
aaa
and
push
cli
sub
adc
cmps
stc
sbb
dec
jl
dec
sbb
inc
fcmovb
ror
mov
mov
xchg
ficom
push
jmp
popa
pop
outs
aam
mov
mov
mov
mov
xor
stos
nop
ins
adc
and
mov
retf
hlt
or
ret
mov
push
dec
imul
cmp
jns
rcr
cwde
pusha
inc
(bad)
push
aad
cmp
lahf
fmul
sub
jl
xchg
inc
add
retf
mov
cwde
lods
pop
icebp
xchg
mov
in
retf
adc
adc
push
sub
shr
ja
mov
push
sub
sbb
icebp
push
mov
enter
shl
or
xor
adc
xchg
cmc
jge
xchg
mov
xchg
add
rcl
mov
clc
adc
fwait
jns
xor
(bad)
pop
stc
pop
dec
mov
scas
mov
inc
cmp
adc
ret
jne
and
jmp
aam
les
push
js
jle
inc
mov
inc
cmovne
jns
jle
cmp
sbb
and
lock
pop
fs
fild
cwde
movs
fs
stos
je
or
xor
adc
dec
cmp
lods
sub
popa
sbb
cmc
out
fadd
inc
mov
push
jmp
or
aaa
test
cmps
sbb
pop
bound
xchg
mov
xor
cmp
xchg
pusha
xlat
jno
jmp
push
add
push
stos
aad
test
cmps
pop
mov
xchg
fstp
mov
scas
test
jne
and
jle
mov
push
cmps
jne
xchg
ficom
jge
xchg
loope
push
std
repnz
dec
xchg
sbb
gs
and
mov
jl
enter
(bad)
jnp
mov
mov
std
pop
call
sub
pop
call
mov
mov
xor
jg
inc
leave
cmp
inc
in
jl
shr
lds
push
xchg
loop
popa
mov
jo
scas
push
dec
pushf
sub
inc
sti
lahf
dec
sbb
jns
add
xchg
lock
push
sbb
aam
jmp
jno
stc
sub
cwde
add
cmps
dec
sar
jle
add
or
xor
ret
dec
aas
cdq
push
aad
out
test
dec
rcl
adc
movs
sbb
mov
jnp
stos
aad
pop
fcmovnb
stc
stc
and
scas
fiadd
fisubr
fstp
sbb
ds
xor
adc
add
popa
sbb
call
jl
jns
into
int3
xchg
and
fdiv
jle
adc
test
mov
push
mul
or
repnz
pusha
das
push
aam
retf
pop
adc
or
lods
add
jo
cmps
add
push
daa
adc
les
test
inc
and
int3
add
(bad)
mov
mov
sub
push
(bad)
pop
fmul
lods
mov
nop
or
test
stos
outs
dec
cdq
mov
into
adc
dec
inc
sub
mov
loope
ds
adc
xchg
jnp
ffree
mov
outs
and
pop
ds
mov
(bad)
rol
pop
jo
daa
aas
cmp
mov
mov
mov
mov
in
div
and
mov
js
pop
adc
push
xor
inc
rcr
imul
cmc
pop
repnz
inc
push
fnsetpm(287
push
xchg
dec
fisub
sub
mov
jecxz
iret
inc
test
lahf
pop
adc
stc
push
ins
ss
out
xchg
jg
mov
bound
push
and
fsub
jmp
dec
jo
outs
mov
dec
jbe
xor
cmp
cmp
push
and
in
(bad)
mov
stos
rcl
js
fisubr
(bad)
in
mov
xor
cli
loope
adc
push
test
jne
or
cmp
sti
cmp
push
popa
mov
fs
sub
xchg
fsubrp
jne
lods
mov
sti
retf
(bad)
retf
dec
pop
sub
xchg
(bad)
aaa
ret
mov
mov
and
fistp
push
xchg
sub
(bad)
xchg
ins
test
rcl
sbb
jmp
pop
and
repnz
inc
dec
jns
and
sub
and
das
movs
test
cwde
out
or
mov
adc
xchg
sub
dec
xor
fbstp
in
lods
cdq
aam
shl
int
clc
jecxz
push
xor
push
xor
jp
pop
pop
movs
lahf
dec
out
inc
cli
pop
das
ror
adc
pop
repz
stc
fisttp
test
cmp
mov
loopne
(bad)
xchg
(bad)
pop
imul
add
pushw
mov
and
cmps
imul
aaa
add
rol
ds
shl
ja
sub
ds
retf
int3
inc
sub
xor
add
iret
into
cli
aad
dec
sbb
cdq
sub
xor
aas
sbb
xchg
shl
neg
mov
jl
xchg
out
mov
mov
stc
inc
add
outs
push
pop
repz
sub
movs
adc
xchg
cli
ins
mov
pop
stc
in
adc
push
push
mov
pop
xchg
cvtdq2ps
dec
adc
mul
jl
inc
call
sub
jno
cmp
dec
and
pop
mov
mov
push
cmp
inc
out
stos
push
fsubr
inc
hlt
cmps
mov
mov
push
pop
fdiv
in
mov
jp
jl
sub
fiadd
mov
mov
cld
out
call
ja
out
and
adc
dec
out
sub
cwde
out
adc
call
inc
cmp
pop
sub
test
mov
iret
gs
into
mov
mov
inc
jbe
sbb
in
iret
pop
inc
mov
jae
mov
inc
dec
pop
int3
mov
scas
fsub
ret
gs
mov
sub
inc
jge
mov
inc
fcom
mov
repz
movs
test
cli
pop
inc
cmps
add
jge
and
icebp
mov
popa
add
dec
ss
fld
mov
fwait
adc
inc
out
movs
cmp
call
mov
popf
dec
and
in
mov
cmp
adc
jmp
and
dec
shr
xchg
mov
pop
xchg
pushf
pushf
xchg
scas
jge
fcomi
vprotw
movs
fucomip
inc
sbb
lods
js
repz
lods
pushf
xor
mov
mov
xchg
ja
enter
sbb
ds
(bad)
xchg
jg
and
push
dec
sbb
dec
repnz
push
jno
mov
mov
cmc
pop
xchg
mov
mov
out
lds
das
int
push
test
ret
in
fadd
sub
(bad)
fucom
mov
dec
dec
dec
fcomp
cld
(bad)
loope
stos
pushf
test
aam
cmp
repz
jne
in
daa
in
jb
pop
cs
pop
inc
sub
sub
inc
or
rol
ret
ret
int3
nop
mov
jle
or
lods
lea
xor
retf
js
jmp
lahf
adc
fdivr
or
test
aad
jmp
sahf
retf
xor
(bad)
idiv
pop
inc
or
(bad)
push
adc
and
aas
pinsrw
ins
mov
rol
(bad)
cmp
and
mov
mov
xchg
hlt
pop
xchg
fxch
ins
push
sbb
mov
ins
adc
int3
sbb
mov
xchg
dec
(bad)
addr16
sti
pop
push
jecxz
inc
mov
dec
es
dec
pop
mov
call
nop
fidiv
or
or
(bad)
out
xchg
aam
movs
mov
scas
sahf
and
aam
jge
rcl
dec
fsub
mov
cmps
addr16
imul
pop
mov
ror
pusha
fcmovu
jnp
mov
scas
xor
sub
sub
push
pop
sbb
sub
mov
jle
fwait
mov
pop
clc
aas
and
je
mov
in
loop
ficomp
xchg
mov
xor
ja
iret
sti
push
or
mov
lods
dec
icebp
int3
stos
mov
pop
xchg
outs
cmp
inc
inc
jne
pop
(bad)
scas
out
(bad)
push
push
add
mov
cli
cmp
add
and
jmp
stos
sysexit
lea
movs
or
ins
lea
pushf
xchg
push
mov
shl
dec
jnp
cli
movs
cmp
xchg
and
test
test
arpl
loopne
movs
jmp
cmp
mov
jp
mov
jl
sub
dec
cmp
push
sub
xor
add
mov
sub
sahf
test
retf
mov
adc
and
popf
pop
pop
sbb
aas
pop
lods
sub
adc
cs
dec
ins
jnp
fidivr
sbb
rol
cmps
enter
shl
imul
jnp
add
mov
and
xchg
int
outs
fadd
push
jb
add
inc
scas
mov
test
(bad)
mov
dec
jns
sti
pop
push
or
ret
mov
cs
pop
or
into
adc
mov
fdivr
shl
arpl
test
fs
xchg
sub
jmp
scas
cwde
out
fimul
arpl
adc
jo
xchg
leave
lods
push
jbe
add
sbb
pop
xchg
mov
and
sbb
test
popa
jb
std
retf
inc
pop
sbb
es
fistp
(bad)
cmp
jmp
cwde
aas
repz
sar
sub
es
hlt
mov
xor
sub
cs
cmp
or
adc
sti
push
cld
add
movs
cli
out
lock
mov
jmp
mov
adc
jnp
loope
ja
int3
jmp
push
out
mov
ret
push
mov
arpl
sar
rcl
ins
das
jb
leave
stos
inc
cmp
mov
pop
ror
(bad)
pop
fisubr
(bad)
xchg
(bad)
arpl
out
mov
adc
and
push
adc
fs
icebp
gs
aam
stc
xlat
mov
movs
cmp
cmp
dec
pop
test
je
movs
retf
mov
daa
call
pop
xchg
ss
mov
idiv
mov
lods
or
push
lds
or
(bad)
and
add
out
sub
sbb
lds
pop
and
xchg
adc
in
daa
jns
cmp
retf
push
shl
ror
fstp
lahf
js
cmps
xchg
sbb
mov
push
and
cmps
or
ds
mov
xchg
xchg
add
nop
xchg
push
enter
ja
popf
ret
pop
xlat
add
cmp
pop
lock
inc
inc
mov
xor
imul
dec
push
dec
(bad)
(bad)
xchg
inc
or
in
neg
push
jge
loop
inc
dec
outs
cmp
popa
loop
jmp
dec
jno
enter
test
sbb
mov
xor
pop
mov
ins
stc
or
mov
mov
and
in
jno
nop
(bad)
xlat
cld
mov
cmp
xor
imul
aas
cdq
xchg
ss
loop
sub
adc
in
mov
stc
add
jb
sbb
lea
sti
fsub
lods
push
inc
in
mov
lahf
shl
mov
inc
mov
sbb
bound
mov
inc
fcmovne
push
lahf
mov
ds
sub
push
fdivrp
js
mov
mov
sbb
test
mov
retf
pushf
repnz
pop
cmp
mov
and
mov
stos
cld
and
add
out
jns
sbb
ins
jnp
cmp
bound
test
addr16
and
(bad)
sbb
cli
retf
mov
pop
outs
push
add
add
pop
scas
dec
pop
lds
(bad)
jp
faddp
sub
sub
add
fist
jno
stos
cs
and
add
dec
xchg
add
sbb
mov
cmp
clc
add
fcomi
cmove
inc
daa
pop
and
jne
adc
outs
outs
mov
dec
mov
pop
sbb
pop
in
imul
cmp
cmp
or
retf
jecxz
jp
std
cmp
call
out
xchg
pop
cdq
inc
leave
repnz
pushf
scas
jae
xlat
jle
hlt
fmul
jge
or
jns
cmp
ret
daa
fmul
sub
jmp
(bad)
in
(bad)
loope
xchg
cmp
stos
cmp
jae
or
mov
leave
xchg
lock
inc
xchg
stos
scas
stos
or
mov
dec
or
cmp
jl
mov
dec
icebp
add
rol
xchg
hlt
xabort
vpcmpgtw
sti
loopne
mov
int3
mov
ror
test
pop
cmc
aaa
enter
test
sub
adc
jo
icebp
outs
or
cmp
(bad)
outs
mov
fwait
mov
dec
hlt
fidiv
cmp
jbe
nop
inc
push
add
int3
jmp
sbb
stc
cmc
inc
loopne
push
dec
ror
dec
lods
pop
(bad)
cli
popa
fbld
xchg
cwde
arpl
pop
mov
fidiv
shr
cli
out
div
mov
xchg
je
adc
add
cmp
rdpmc
clc
dec
pop
add
pop
fwait
dec
cmp
popa
or
fcmovnb
xor
jae
cmp
mov
out
mov
xor
jne
mov
push
nop
push
mov
push
pop
retf
and
jmp
repnz
ins
jb
rcl
mov
mov
xlat
ja
lds
into
mov
fsubr
test
sub
stos
(bad)
sbb
repz
dec
cmp
mov
mov
jg
pop
xor
out
push
mov
(bad)
jp
and
hlt
bound
push
mov
xchg
mov
loop
pop
mov
rol
jne
mov
adc
or
add
jmp
cmp
xchg
mov
lahf
or
inc
push
dec
nop
and
out
mov
ret
ins
mov
push
shl
lds
xor
or
jge
arpl
or
das
out
sbb
enter
inc
mov
xchg
dec
call
and
lods
xchg
test
and
and
dec
inc
data16
jmp
lea
xchg
imul
ins
fst
ins
out
dec
aad
jno
jo
push
sub
push
mov
test
dec
retf
and
pop
xchg
hlt
xor
in
cmp
inc
data16
pop
pushf
dec
pushf
fst
push
pop
in
and
cmp
(bad)
ins
jp
pop
movs
jle
sub
sbb
add
push
jns
popf
fidiv
mov
adc
ret
dec
or
popa
(bad)
inc
leave
into
pusha
rcr
mov
fidivr
(bad)
and
popa
in
retf
mov
frstor
add
lods
icebp
xchg
ficomp
push
sub
mov
xlat
retf
mov
push
in
jb
or
xchg
scas
hlt
out
mov
(bad)
jae
test
cmp
mov
arpl
sub
ret
repnz
fld
xor
shl
xchg
ffree
inc
rol
add
xlat
mov
retf
addr16
mov
jns
mov
xchg
int
rcl
cwde
xchg
lds
push
push
or
loopne
out
push
and
sub
in
ja
std
push
inc
cwde
mov
adc
cwde
jp
pop
push
xor
popa
sub
pop
push
xor
iret
into
fisttp
and
ins
ror
shl
mov
repz
pop
jb
je
dec
jo
lds
call
pop
push
icebp
sti
movs
or
out
ins
addr16
(bad)
push
frstor
aam
or
mov
addr16
imul
lock
repnz
push
loope
fist
ja
inc
ja
dec
mov
into
int3
mov
mov
cmc
sbb
add
jp
lds
ret
or
out
pop
push
call
mov
push
inc
jcxz
stos
mov
pop
xlat
or
aaa
xlat
mov
repnz
nop
cmc
fimul
into
shl
push
dec
cmp
daa
icebp
pop
pop
fidiv
(bad)
bound
adc
into
dec
push
push
mov
adc
daa
lods
xor
cmp
pop
int3
not
les
push
jo
aad
mov
outs
pushf
jmp
and
ret
mov
sub
or
popf
jp
in
or
jbe
aam
pmuludq
mul
jl
cmps
jl
xor
cwde
out
cmp
cdq
mov
pop
popf
mov
inc
inc
lea
inc
fnstenv
jp
jne
xchg
retf
mov
ret
sbb
retf
adc
enter
and
test
jae
pop
test
xchg
out
popa
sbb
xchg
push
enter
gs
cmp
xor
movaps
icebp
into
mov
sbb
and
call
fsubp
jnp
xchg
cmp
sub
loopne
rol
xlat
jle
ret
stos
inc
dec
pop
sub
out
enter
mov
jne
add
(bad)
movs
cmp
add
sub
push
cmp
movs
adc
add
fadd
aad
test
and
aam
fs
mov
neg
dec
lock
jmp
jmp
sbb
jb
ficom
jp
(bad)
fsub
sub
lahf
bound
lds
inc
pop
cmp
jl
xor
ror
jmp
pusha
xchg
adc
enter
adc
dec
fdivr
mov
add
movs
scas
fild
mov
xlat
popf
mov
cmp
jecxz
and
pop
sahf
jne
push
inc
fst
push
out
ret
push
push
jl
mov
adc
jbe
into
out
lods
or
test
add
cld
mov
arpl
cmp
xchg
or
push
leave
mov
jle
outs
push
sbb
cwde
shl
pop
mov
and
pusha
into
adc
jecxz
(bad)
fidivr
scas
add
stos
lahf
test
test
aam
mov
and
ror
fsub
inc
cmp
mov
and
scas
inc
call
pop
std
retf
leave
fist
cs
inc
or
adc
mov
cld
popa
cmp
xchg
dec
ret
mov
sar
cmps
add
xor
cmps
sub
pop
pop
xchg
(bad)
gs
fldenv
xchg
and
add
lds
push
mov
pop
xchg
loopne
sbb
inc
imul
jns
sbb
sbb
xchg
and
push
stos
out
add
ret
inc
call
(bad)
hlt
das
push
dec
push
cmp
(bad)
mov
bnd
adc
xor
stc
jb
dec
or
cmp
inc
test
cwde
imul
lahf
mov
fmul
inc
rcr
pusha
in
xchg
jge
inc
enter
scas
pushf
sub
mov
mov
push
push
dec
mov
sar
mov
in
dec
xor
outs
push
sbb
jbe
lds
pop
push
pop
imul
and
leave
loopne
dec
out
push
or
test
fbstp
xor
push
pop
cmp
cmc
sbb
popa
adc
adc
pop
sti
div
fidiv
mov
fadd
inc
outs
mov
cmp
mov
cmp
cdq
push
sbb
scas
adc
sbb
cli
mov
cmp
jne
mov
pushf
ret
sub
lods
and
cmp
js
les
jnp
adc
cmp
xchg
mov
dec
(bad)
ja
or
push
shr
les
imul
bound
push
ins
push
sub
imul
sbb
ss
pop
cmps
and
push
mov
ret
dec
stc
jo
sub
adc
cmps
mov
retf
mov
ss
je
xor
je
stc
sub
jge
push
inc
add
js
aad
xor
daa
and
mov
add
and
mov
jg
pop
jg
cmp
push
inc
jne
pop
xor
ret
mov
lods
pop
leave
in
mov
rol
and
inc
ds
retf
(bad)
lea
inc
(bad)
and
out
jecxz
sbb
js
jge
sub
dec
pushf
add
and
out
sbb
xor
or
dec
push
or
pusha
(bad)
dec
add
xor
(bad)
or
mov
xchg
mov
mov
(bad)
cmp
enter
(bad)
add
fnstsw
push
mov
mov
jae
shr
popa
daa
push
fucomp
aam
mov
(bad)
cld
mov
jmp
fcom
mov
or
adc
(bad)
addr16
push
cmp
call
rol
into
nop
or
mov
fs
repnz
or
cmp
jl
lahf
test
lahf
pop
imul
or
inc
add
dec
mov
fistp
mov
ja
and
outs
test
ss
xchg
dec
cli
pop
or
test
into
add
(bad)
jno
repnz
(bad)
sub
lds
sub
std
fcom
add
lods
xchg
fnstcw
and
mov
lahf
and
inc
retf
adc
pop
xchg
xchg
mov
xor
sbb
dec
(bad)
dec
add
cmp
sti
dec
cmp
fcom
pop
rol
daa
sbb
mov
in
mov
sub
movs
adc
bnd
sub
add
mov
es
pop
scas
stc
cmp
mov
xor
push
out
stos
xor
or
fldcw
sbb
sub
aad
cwde
pop
out
or
gs
iret
push
sub
stc
cs
sbb
pop
sub
adc
pop
lock
shl
xchg
jne
xchg
xlat
sub
ret
lods
sti
sahf
fidiv
push
inc
push
pop
aas
sbb
popf
mov
(bad)
push
cmp
call
mov
stos
adc
push
jnp
sub
scas
or
xchg
xor
sti
test
add
xchg
ss
push
jb
clc
fsubrp
dec
dec
leave
call
bound
push
(bad)
outs
mov
inc
pop
push
inc
push
lds
dec
std
scas
clc
dec
rol
and
inc
in
call
pop
and
and
push
pop
sbb
je
mov
sbb
and
push
ficomp
xor
mov
pusha
adc
cmp
mov
ins
iret
cmp
shl
or
bound
bound
imul
ss
pushf
in
das
sbb
fnstsw
mov
mov
inc
mov
ins
xchg
pop
mul
or
push
ror
fistp
fimul
xchg
push
in
jg
push
inc
outs
lock
call
cmp
es
popf
push
je
sbb
outs
dec
pop
dec
xchg
push
cmp
movs
aaa
out
sahf
scas
xor
xlat
push
(bad)
fcom
and
ror
repz
test
ss
and
(bad)
push
clc
add
outs
xor
fucomp
xchg
mov
push
push
imul
xchg
cs
or
gs
adc
test
push
test
imul
sbb
movs
fwait
ins
repz
imul
int3
movs
jmp
sbb
int
mov
lods
setns
arpl
(bad)
(bad)
push
in
imul
shr
popa
hlt
cmp
das
xchg
mov
cmp
out
inc
dec
sti
push
mov
mov
pop
test
mov
cwde
mov
add
push
add
inc
and
outs
adc
push
and
loope
dec
icebp
xor
jmp
setnp
mov
sar
test
push
out
fisubr
or
add
cwde
cmp
cli
mov
movs
sbb
popa
retf
pop
fst
imul
aam
call
add
test
sbb
mov
and
movs
lahf
push
add
movs
dec
rol
xchg
in
jbe
push
sub
das
shl
ds
mov
push
jo
and
jnp
mov
ret
xchg
aad
xchg
xchg
cs
int
mov
clc
(bad)
enter
mov
retf
sub
sti
out
sar
push
xor
sar
xchg
test
push
into
adc
cld
inc
mov
aad
test
aad
xchg
inc
add
leave
aad
push
shr
jns
imul
mov
and
aaa
push
test
cmps
add
test
je
and
push
aam
into
jns
inc
mov
xor
push
xchg
(bad)
nop
shl
inc
data16
mov
ss
fnsave
mov
ret
dec
test
inc
pop
shl
pushf
jmp
mov
iret
inc
mov
arpl
and
(bad)
sub
mov
pop
and
xchg
pushf
rcl
into
pop
dec
clc
cmp
clc
imul
inc
inc
ds
aad
cmps
push
pop
mov
sub
mov
aaa
mov
test
xor
xchg
std
adc
in
sub
jle
out
addr16
lds
push
ror
dec
xor
fbld
shl
sub
and
mov
and
sbb
lods
dec
jl
and
das
push
aam
call
sti
and
fdiv
pop
repz
hlt
xchg
push
mov
dec
dec
push
jl
movs
sub
sub
lsl
mov
ins
push
xor
in
mov
and
push
out
(bad)
int3
sub
aaa
arpl
gs
into
cdq
bound
shr
dec
sub
mov
inc
stc
or
sub
out
dec
sub
adc
mul
mov
cmp
or
jns
xlat
push
outs
cli
xor
int3
adc
dec
sahf
add
aam
scas
and
retf
mov
mov
mov
stc
fwait
lock
cmp
mov
aad
and
or
push
outs
ins
dec
sub
xor
or
sbb
xchg
push
sar
popf
retf
sahf
shr
lds
ja
fidivr
jmp
pop
sar
(bad)
enter
inc
in
adc
test
inc
pop
cmc
push
in
ja
into
int
mov
xchg
enter
pop
add
sbb
mov
outs
fld
push
jmp
or
sub
add
shl
xlat
pop
cmps
jle
ds
ja
sbb
jmp
or
dec
cli
jmp
mov
daa
(bad)
rol
(bad)
into
and
adc
xchg
push
ficom
xor
clc
das
rcl
daa
cmc
xchg
in
pop
mov
(bad)
shr
sbb
movs
aas
pop
inc
clc
ret
sub
popf
xchg
mov
aas
ins
push
jmp
jb
mov
jp
(bad)
and
push
xchg
arpl
ret
lods
data16
std
jmp
int3
or
fsubr
movs
sbb
mov
(bad)
xor
cmp
adc
and
mov
clc
popf
shr
push
adc
sbb
xchg
mov
xchg
push
call
sar
mov
dec
sbb
dec
(bad)
push
repz
cmp
js
pusha
cmp
fistp
es
outs
fs
aam
xor
shr
xchg
jmp
call
push
push
imul
xchg
xor
fcomp
mov
jae
imul
dec
aaa
jl
pop
jbe
in
ss
mov
xchg
es
add
lock
mov
sub
les
gs
cli
in
cmps
out
cmp
dec
mov
adc
in
and
sbb
rcl
stos
sub
outs
ret
iret
lods
sbb
adc
mov
mov
fstp
add
sbb
mov
cmp
dec
fs
jl
neg
mov
mov
loop
inc
cmp
cdq
or
pop
inc
pop
or
lahf
push
mov
ds
aam
sub
or
dec
dec
add
pusha
push
push
fsub
mov
inc
jae
cmp
(bad)
in
popa
ficom
into
sub
fld
ror
imul
inc
(bad)
loopne
jns
xor
je
cmp
sar
pop
push
mov
xchg
fistp
xchg
fild
sub
icebp
sbb
pop
cmp
ret
sub
and
jno
out
enter
sbb
aaa
inc
out
jmp
dec
xor
loop
iretw
std
(bad)
xlat
sub
bound
popa
and
mov
cli
loop
sbb
(bad)
push
xor
sbb
test
lds
ds
lds
int3
mov
sbb
test
ja
gs
jb
xor
lahf
add
sub
fldl2t
xor
mov
ret
pusha
iret
jmp
adc
push
inc
xlat
inc
sahf
outs
mov
and
hlt
int3
jae
mov
mov
sub
retf
aaa
adc
inc
dec
pop
cli
mov
and
push
push
hlt
jecxz
loop
les
xchg
movs
rcl
mov
loope
fadd
sbb
cdq
sbb
or
xor
stos
out
in
jno
dec
popa
dec
aas
pop
fld
rcr
inc
cdq
mov
push
cmp
jmp
out
or
scas
test
add
mov
jnp
sub
(bad)
in
daa
push
cmp
das
push
add
movs
test
test
mov
das
aad
sbb
cmp
mov
mov
cmp
mov
rcr
int3
std
sbb
jmp
xchg
mov
add
xor
pop
push
mov
pop
out
mov
ins
adc
repz
enter
sub
lods
fiadd
and
addr16
cmp
fdivr
std
lock
(bad)
pop
mov
jmp
add
mov
imul
and
jbe
ins
push
inc
sub
cs
cmps
sbb
cdq
retf
mov
push
sbb
mov
mov
push
inc
neg
inc
xchg
pop
pusha
jno
sub
pop
movs
mov
out
adc
jecxz
out
mov
add
retf
mov
pop
push
ins
jmp
loop
test
or
jge
pop
inc
test
frstor
das
mov
and
inc
cwde
jp
mov
sti
test
into
dec
jb
cmp
outs
in
les
ja
jae
pop
sbb
nop
sbb
push
fistp
(bad)
sub
mov
push
adc
fwait
add
ror
or
jno
mov
push
lea
popf
les
inc
in
inc
pushf
sbb
sub
lods
sub
push
adc
mov
mov
loopne
js
mov
jg
pusha
or
push
push
push
shr
std
or
and
dec
lea
mov
xchg
xchg
jbe
dec
adc
inc
ins
call
dec
push
ins
push
aas
or
or
jb
test
pop
jno
xchg
push
add
in
stc
and
pop
sub
mov
pop
inc
jno
jno
or
cmp
dec
mov
mov
xor
jae
add
cld
ret
pushf
xor
jecxz
xchg
cs
aam
xor
push
pop
inc
rcr
pop
out
cmp
xchg
jns
icebp
push
aam
inc
add
cwde
xor
in
sbb
jl
sahf
pop
dec
retf
or
out
adc
inc
mov
jecxz
sub
stos
xor
sbb
inc
call
jp
push
or
jmp
mov
aaa
retf
mov
jmp
lods
push
stos
dec
iret
mov
sub
jg
adc
mov
es
hlt
je
pmaddwd
ret
mov
jmp
dec
movs
dec
pop
xor
cmp
rol
inc
(bad)
push
xor
cmp
stos
in
and
scas
fisub
sar
sbb
sbb
icebp
retf
iret
jns
stc
sar
mov
lods
mov
cmp
popf
sbb
stc
dec
cmp
ret
int3
push
les
cwde
mov
pop
es
cdq
cs
cmps
sar
push
ins
adc
mov
pop
fstp
lods
push
xchg
jmp
or
sbb
sbb
xchg
jae
cwde
(bad)
cmc
mov
sbb
minps
cmps
lds
sub
call
fxch
fisubr
fiadd
mov
adc
mov
and
ficom
(bad)
scas
fsubr
dec
cdq
in
mov
dec
jmp
lea
aaa
adc
sti
or
dec
outs
or
or
test
inc
dec
outs
pop
sahf
cmp
lds
pop
scas
call
je
js
sahf
popa
or
and
(bad)
in
mov
cs
int
or
out
xor
ja
fisubr
cmc
pop
stos
jb
ss
xchg
and
les
mov
stc
es
popf
sar
xor
lock
ss
inc
shl
push
sbb
dec
jg
es
ror
call
add
inc
cmps
pusha
icebp
push
(bad)
sub
repz
adc
hlt
push
push
mov
xor
jne
push
adc
inc
stos
enter
fbld
jne
mov
jmp
outs
inc
int
push
enter
movs
cmp
cmp
je
xchg
stos
and
sti
pop
cmp
or
clc
push
sub
pop
push
or
es
cmp
iret
popf
inc
and
mov
mov
push
ins
adc
mov
push
(bad)
push
out
lahf
stos
cmps
push
inc
xor
rol
stos
out
dec
gs
icebp
gs
div
aaa
clc
imul
daa
imul
test
lods
lea
jmp
jge
outs
xchg
mov
aas
mov
into
jg
out
jno
cmp
sub
sub
or
adc
sbb
push
hlt
movs
mov
xchg
mov
or
jl
mov
stos
adc
fdiv
mov
cmp
pop
cmp
inc
xlat
jb
jo
push
shr
jl
pop
ror
ficomp
test
pop
dec
inc
ss
xor
ins
xchg
je
and
mov
dec
pop
fnstenv
(bad)
clc
stc
pushw
popa
jmp
arpl
loopne
add
repz
dec
add
and
fisttp
ins
mov
jae
jmp
cmp
sub
inc
xchg
or
xchg
and
push
in
aam
iret
fisubr
punpcklbw
add
fidivr
out
faddp
cmps
mov
hlt
cmp
jmp
pop
mov
fild
mov
mov
pop
pop
in
jp
sbb
jo
inc
les
movs
inc
repz
popa
out
and
or
inc
les
fld
push
push
rcl
or
ins
in
mov
arpl
pop
lods
add
mov
push
push
add
(bad)
repnz
mul
lock
bound
stc
jmp
pop
xchg
mov
(bad)
cs
and
push
xlat
and
push
les
ja
repnz
ja
das
adc
sub
ret
adc
nop
pop
push
add
xchg
fisubr
adc
and
fucomi
lock
test
leave
jnp
gs
gs
outs
ror
xchg
dec
add
into
pop
scas
jo
in
int
mov
sbb
es
je
popa
sbb
fcmovu
dec
mov
shl
pop
movs
out
mov
test
push
jns
ror
(bad)
fcomp
fcmovb
ins
lds
dec
xor
cwde
add
mov
adc
mov
outs
aam
dec
inc
scas
pusha
mov
jmp
jg
outs
xchg
adc
std
add
inc
add
ja
and
mov
call
jp
inc
mov
jne
cmp
and
xchg
add
adc
stc
and
lock
pop
repnz
ds
sub
dec
and
sbb
mov
adc
cmps
std
add
sbb
or
push
lea
stos
add
push
dec
jo
push
adc
adc
and
add
lahf
add
cmp
sahf
retf
fisub
mov
retf
js
test
sub
repnz
out
mov
js
dec
xbegin
cmps
adc
in
loop
clc
outs
leave
sub
mov
aad
add
int
test
cld
sub
icebp
or
adc
mov
jle
mov
add
cmp
aaa
sub
stos
outs
je
popa
enter
call
push
clc
sub
mov
dec
stos
push
test
ret
push
test
pop
and
jmp
sub
push
dec
fild
pop
mov
mov
stc
jb
popf
mov
xchg
aaa
leave
xchg
inc
push
pop
dec
call
mov
test
adc
jae
jp
adc
mov
dec
mov
jp
outs
push
jae
loop
data16
jbe
rol
add
pusha
jb
mov
inc
mov
mov
movs
and
addr16
inc
sub
pop
sar
shr
cwde
imul
mov
xor
mov
dec
pop
add
lods
loope
stc
lods
lea
sbb
fwait
cmp
arpl
dec
adc
mov
sbb
test
mov
jns
mov
push
addr16
lea
dec
xchg
scas
inc
pop
adc
xlat
ja
(bad)
jb
or
daa
shr
test
rcl
push
mov
lahf
es
in
stc
inc
mov
add
cmp
adc
jbe
clc
xor
mov
js
sti
ja
shl
daa
pusha
cmp
or
pop
inc
jge
pop
adc
test
cwde
dec
das
mov
inc
mov
imul
inc
xchg
scas
add
dec
mov
lea
sub
inc
cmp
mov
out
jae
or
(bad)
call
aad
ja
jmp
mov
stos
pushf
ins
stc
jae
or
stc
(bad)
sub
mov
adc
and
push
je
aad
mov
inc
fnsave
and
sbb
add
stos
pop
mov
rcr
fsub
cmps
scas
(bad)
mov
out
ret
unpcklps
cmp
test
mov
aad
inc
addr16
nop
es
cmp
lods
and
inc
mov
push
jnp
in
inc
cs
push
mov
mov
in
adc
inc
lock
push
cli
xchg
dec
mov
stos
ret
jno
cli
adc
shl
stos
add
fiadd
mov
inc
stos
cmp
popf
adc
lds
xchg
sbb
jno
jmp
movs
mov
push
jne
adc
into
cdq
cmp
popf
test
pop
pop
(bad)
cmc
adc
out
(bad)
jecxz
cmc
cli
das
sub
hlt
daa
or
ins
movs
mov
sub
pop
movs
pop
mov
xor
jb
std
adc
pop
cdq
scas
push
repz
sahf
jl
into
mov
js
mov
leave
pop
sub
mov
aam
cdq
inc
push
aas
dec
bound
leave
mov
add
adc
repz
mov
cmp
sbb
(bad)
or
int
or
cmps
(bad)
sar
(bad)
sbb
lods
sbb
lock
or
mov
cmp
stos
das
aas
add
aaa
sbb
pop
fild
pop
outs
aad
fcmovnu
mov
mov
in
pop
in
jl
mov
adc
or
dec
cmp
and
mov
xchg
scas
sub
mov
inc
mov
jnp
mov
adc
imul
sub
pop
retf
loopne
xor
dec
das
je
adc
adc
mov
loopne
ret
lock
lods
ins
pop
test
inc
ss
daa
xlat
cmp
add
jbe
lds
pop
fs
add
push
cmps
aaa
fild
and
aam
mov
cwde
adc
add
adc
xchg
cli
xor
aam
fld
movs
xor
movlps
out
mov
cs
ror
shr
leave
jge
mov
jns
or
mov
aam
mov
ja
push
je
xor
call
sub
ss
in
pop
dec
mov
std
jb
ins
mov
pop
clc
mov
fnstsw
sub
add
add
sbb
ja
sbb
lods
xor
adc
xlat
adc
push
pop
aas
mov
sub
xlat
popf
jmp
pushf
and
or
iret
jo
add
gs
push
xchg
call
hlt
sbb
ret
dec
outs
lods
leave
(bad)
inc
loop
cmp
sbb
xchg
push
jne
movs
sahf
fxch
cmp
pop
fdivr
adc
js
into
cmp
inc
popa
out
adc
mov
pop
jl
and
lock
outs
cmc
xchg
mov
mov
or
or
sbb
dec
jbe
jnp
ret
inc
dec
and
ficom
jae
stc
fidiv
scas
leave
aam
mov
lock
lahf
mov
mov
push
out
mov
aas
and
loop
lods
hlt
sbb
pop
xor
jo
sahf
jne
(bad)
mov
aas
mov
in
fidivr
(bad)
jmp
scas
jne
dec
add
and
cmps
imul
repnz
in
lds
or
sub
and
sti
mov
inc
lods
push
cmp
adc
rol
mov
xor
retf
fwait
stos
enter
add
xor
sbb
xor
mov
and
out
xchg
xchg
push
xchg
and
test
scas
push
push
loope
adc
aaa
in
push
mov
rol
xchg
cwde
or
inc
les
push
rol
dec
mov
mov
inc
pop
imul
jnp
inc
inc
mov
fstp
mov
cwde
cdq
ins
cmps
mov
cwde
ja
sub
daa
(bad)
cmp
daa
inc
xlat
pop
ret
aam
sub
push
shr
push
pusha
or
nop
cdq
ins
push
jns
inc
dec
dec
dec
push
cmp
xchg
lahf
popa
pop
dec
mov
push
sahf
retf
in
or
and
jb
cmps
test
dec
push
addr16
outs
lea
pop
dec
or
loope
mov
xor
and
jecxz
out
jmp
dec
ror
xor
jb
cld
div
push
pop
jmp
lds
xlat
add
mov
jg
cdq
imul
(bad)
stc
mov
and
sti
leave
dec
xchg
pop
fdivr
cmp
xchg
fdiv
inc
inc
xor
js
cwde
jg
and
inc
push
pop
(bad)
ficomp
push
jo
sahf
fstp
imul
dec
and
or
in
cmp
loope
sub
sbb
imul
cmp
ins
push
xor
dec
adc
adc
push
pop
push
(bad)
clc
cmc
or
jecxz
dec
ins
loope
lahf
(bad)
lock
mov
fidivr
out
daa
jmp
jns
pop
test
scas
out
jmp
xor
aad
stos
add
adc
shl
xor
mov
push
hlt
in
pop
add
xor
sti
push
fwait
and
jne
sahf
adc
mov
cmp
mov
mov
pop
mov
dec
addr16
and
aad
xchg
ret
bound
lds
ins
mov
call
shl
push
jns
dec
dec
mov
test
push
push
loope
cdq
aam
pop
nop
mov
sub
mov
pop
mov
retf
fiadd
or
jmp
adc
mov
inc
iret
in
mov
call
es
adc
(bad)
rcr
jge
jl
add
popa
mov
repz
imul
dec
addr16
cmp
call
jmp
add
aaa
jp
mov
push
dec
fwait
jmp
lea
das
icebp
inc
lds
adc
push
xor
xchg
xor
(bad)
popf
push
adc
lods
outs
cmp
pop
push
call
les
test
fsub
push
pop
jmp
popf
out
jge
adc
and
js
fild
lahf
jo
out
mov
cmps
xchg
or
outs
xchg
xor
pusha
mov
setno
aam
ror
xchg
mov
pop
mov
xchg
lahf
stc
lahf
call
out
inc
inc
sub
(bad)
pop
jmp
push
sbb
pop
shr
push
pop
mov
addr16
dec
(bad)
xchg
sbb
dec
cmp
hlt
cmp
inc
mov
ds
jmp
mov
push
std
xor
jbe
retf
jbe
ror
arpl
xor
int
sub
add
stc
int
inc
mov
sub
mov
sbb
lods
xchg
sbb
es
sub
push
and
xor
cmps
inc
rcr
cmp
push
cmp
fisttp
and
and
pop
inc
lds
not
arpl
pop
cmp
mov
add
lock
sbb
xchg
stc
mov
ficomp
mov
lea
pop
mov
scas
fwait
arpl
sbb
test
sbb
fwait
into
std
push
not
fadd
cmps
sbb
dec
xor
mov
es
cmp
mov
icebp
mov
in
syscall
das
sbb
dec
popf
inc
push
scas
sub
xchg
dec
jge
int
sti
shl
xabort
mov
(bad)
push
push
aas
dec
lea
fst
repnz
nop
dec
ja
nop
sbb
jp
jae
xchg
ins
ss
dec
mov
jg
test
cmp
dec
mov
xor
inc
inc
int
mov
lea
xchg
loope
sub
adc
test
(bad)
(bad)
fucomp
pop
ret
or
push
in
sub
sub
(bad)
stc
jnp
xlat
or
or
ins
test
movs
sub
xor
push
mov
jbe
mov
push
mov
sbb
call
mov
lods
pop
sahf
int3
or
add
pusha
sahf
xchg
jmp
fnstcw
mov
test
dec
adc
loop
int
aad
inc
or
mov
ss
sbb
mov
mov
fwait
retf
add
retf
jmp
mov
mov
pop
xchg
sahf
mov
fs
jmp
lods
push
mov
into
ins
xchg
sbb
sar
popa
outs
mul
jbe
push
enter
push
in
mov
cmp
fist
dec
(bad)
mov
imul
shl
sub
cdq
call
mov
adc
mov
mov
add
cwde
bound
cmc
add
jnp
movs
and
xchg
loope
lds
movs
and
and
xchg
aas
cmp
inc
lods
out
inc
push
cs
dec
movs
inc
xchg
fmul
call
add
add
xchg
jns
sti
in
add
stos
cmps
imul
mov
pop
fmul
sbb
ja
jb
ds
(bad)
shl
imul
inc
fld
mov
sub
jo
frstor
push
retf
xchg
adc
sub
aad
sub
mov
mov
pop
mov
popf
loop
jb
ss
mov
pop
fwait
mov
xchg
pusha
ss
aaa
cli
mov
enter
dec
adc
loopne
cmps
or
test
sub
pcmpeqb
jge
push
aam
push
rcr
push
sbb
push
sub
rol
fwait
dec
(bad)
sub
xchg
push
loop
jo
xor
lods
ds
add
mov
cdq
dec
sbb
xchg
out
jbe
push
cmp
cmp
sbb
in
js
or
call
enter
dec
push
mov
mov
pop
adc
(bad)
or
ror
inc
loop
xor
or
movs
xlat
xor
push
dec
sbb
xor
or
mov
in
adc
loope
ss
(bad)
icebp
in
std
popf
dec
pop
jbe
cmp
cld
sbb
mov
test
sub
add
ret
fadd
add
call
pop
scas
(bad)
js
das
mov
jne
(bad)
sub
jg
int
pop
pusha
dec
ret
neg
lods
aas
add
cmps
pop
dec
lahf
jnp
sti
cmp
or
pop
or
mov
(bad)
or
or
cld
add
jno
fidivr
call
std
aas
sbb
xchg
mov
je
pop
and
(bad)
sbb
sahf
inc
fdivrp
xor
in
jl
inc
and
call
movs
and
mov
jae
retf
cmp
xor
fdivr
jo
mov
mov
or
and
(bad)
lock
cmps
imul
imul
cwde
mov
imul
jo
cmp
mov
out
pop
loopne
jns
iret
mov
movs
xchg
enter
sbb
mov
mov
jmp
mov
movs
ins
or
lea
shl
mov
pop
pop
bound
inc
adc
mov
call
cmp
cs
movs
(bad)
popf
jo
adc
sbb
cmp
and
and
xchg
not
cmps
xlat
nop
push
(bad)
dec
fidiv
call
pop
rcl
jp
neg
fbld
stos
push
pusha
in
cmp
or
imul
or
ds
mov
mov
fisubr
nop
dec
aaa
cli
push
cmps
xor
pop
ss
sbb
lods
sub
and
push
aad
gs
push
pop
scas
test
push
mov
pop
adc
and
and
nop
push
mov
inc
sub
int
adc
iret
icebp
pop
mov
dec
jne
lahf
xor
or
sub
mov
dec
mov
arpl
sub
cmp
dec
or
sub
lock
retf
push
imul
sub
mov
sub
lods
ret
or
add
mov
cs
push
mov
(bad)
jmp
int3
and
xchg
ror
imul
mov
(bad)
sbb
cmc
cmc
push
ins
hlt
mov
test
scas
pop
xchg
pop
ss
cmc
mov
out
stc
imul
inc
jmp
mov
mov
mov
xor
sub
dec
js
dec
lea
ins
into
push
out
push
retf
and
out
dec
hlt
push
mov
(bad)
scas
fiadd
sub
add
adc
scas
fmul
pop
cmp
push
xor
mov
cmovbe
mov
aam
aas
push
fwait
sub
jb
jmp
and
icebp
xchg
fdivrp
addr16
iret
xchg
add
xchg
cmps
sub
movs
into
in
sbb
mov
mov
das
out
repnz
mov
lea
mov
mov
sub
stos
inc
loope
in
jg
inc
mov
(bad)
xchg
outs
cmps
fcmovnbe
add
aas
push
sti
pop
scas
loopne
lock
add
add
cs
(bad)
ror
xor
arpl
imul
ret
ret
test
mov
cmp
mov
mov
(bad)
pop
push
in
sbb
adc
in
imul
fld
ja
push
cmps
and
test
mov
jb
stos
loop
inc
jns
xor
pop
sbb
fbstp
mov
jno
icebp
pushf
pop
mov
xchg
push
and
and
jne
jbe
dec
cli
xchg
jns
test
cwde
sbb
shr
loopne
push
sbb
test
test
jne
call
mov
pop
sbb
push
icebp
pop
outs
adc
mov
iret
jp
mov
add
lds
dec
stos
(bad)
fwait
mov
jno
pop
popa
cmp
fcomp
or
out
jp
jnp
jl
xor
mov
mov
out
cmp
lea
push
inc
sub
sahf
lock
mov
adc
loope
enter
jae
sub
mov
fs
arpl
popa
cmps
push
jae
inc
scas
cmp
mov
and
pop
fbstp
pop
add
popf
iret
call
mov
xchg
adc
push
jmp
xchg
dec
hlt
enter
inc
ds
int
cmp
dec
scas
cmp
fwait
movs
cmps
nop
xchg
jecxz
lds
neg
fst
or
mov
mov
push
bound
pop
mov
mov
cld
and
clc
icebp
jl
rcr
repnz
jle
enter
cmp
jle
jge
sub
jns
out
fild
sti
sahf
add
in
psubusb
push
test
repz
mov
mov
mov
push
pop
movs
dec
or
rol
inc
add
xlat
in
gs
add
push
and
inc
jnp
cmp
push
fmul
mov
arpl
call
sub
mov
imul
cli
add
jo
xchg
or
push
mov
push
in
and
nop
cmp
hlt
mov
push
inc
mov
div
dec
sub
popf
rcl
icebp
cwde
or
cmovno
adc
push
mov
xchg
xor
pop
rol
pop
cmps
pop
test
sbb
loope
xchg
clc
dec
push
int3
int3
(bad)
pop
dec
xchg
sub
mov
sub
out
sti
cmp
inc
cmps
sub
sbb
scas
or
aad
into
jmp
cdq
dec
into
jg
pop
sbb
lods
enter
aad
imul
cmp
cmp
(bad)
and
or
ret
arpl
dec
bound
sbb
xor
test
jecxz
pop
inc
push
and
test
push
popf
or
inc
jne
add
loope
ins
sahf
sbb
in
jb
hlt
loop
adc
aam
sub
mov
out
sbb
add
or
push
mov
sub
pop
sar
test
ror
push
cmp
lods
mov
fld
sbb
mov
shr
(bad)
rcl
cmp
inc
aaa
mov
add
mov
adc
inc
dec
retf
xor
pop
stos
fmul
sub
mov
mov
mov
mov
or
xor
inc
daa
jb
xor
cmp
into
sub
sbb
dec
dec
cli
xchg
adc
pop
scas
mov
cs
mov
adc
add
push
push
retf
nop
imul
enter
aam
add
add
jae
rcr
ds
movs
adc
out
pushf
add
xchg
sbb
mov
cmp
push
sub
enter
(bad)
sti
jle
cmp
push
ret
jae
mov
jo
dec
push
bound
pop
pop
fild
les
xchg
and
sbb
jl
mov
rcl
jbe
js
add
dec
add
xchg
sbb
add
test
push
in
jecxz
mov
ret
add
or
adc
(bad)
repz
stos
sub
push
adc
push
mov
push
inc
sahf
ja
imul
or
pop
retf
test
jle
pop
fmul
pop
inc
dec
cli
fsub
data16
outs
mov
inc
jbe
push
rcr
push
xchg
in
jnp
and
sub
loopne
es
daa
and
or
dec
or
mov
popa
sub
std
cmp
loop
(bad)
mov
rcr
xchg
sti
mov
dec
inc
mov
cld
mov
imul
popf
or
out
xchg
pop
mov
pop
in
lods
jbe
mov
adc
mov
jecxz
ror
inc
enter
pusha
rcr
hlt
adc
pop
mov
add
jbe
mov
neg
dec
pop
leave
sbb
sub
scas
test
mov
pushf
fsubr
inc
in
sti
addr16
imul
daa
ret
xchg
jno
stos
jo
xrelease
fstp
mov
test
mov
cld
mov
mov
sbb
mov
push
jbe
ret
adc
or
xchg
ds
push
repz
shr
add
test
mov
ds
and
inc
cmp
loopne
aam
mov
or
inc
push
rol
sbb
pop
mov
shld
popf
adc
push
or
fcom
std
stc
sub
cli
icebp
mov
add
icebp
xchg
lea
cmps
adc
and
inc
outs
or
pop
xor
dec
xchg
adc
inc
lds
out
in
stc
retf
jno
or
push
mov
push
jno
push
jno
imul
aam
mov
out
fs
enter
xor
gs
jno
shl
sub
and
jo
inc
cmc
rcl
popf
out
movs
outs
or
in
cmp
lock
stos
hlt
add
mov
cmp
jmp
arpl
push
jmp
aas
(bad)
out
cmc
ret
sbb
or
cld
ret
je
loop
lods
nop
sub
lods
inc
retf
adc
add
dec
stc
pop
xchg
(bad)
jo
popa
adc
add
mov
sbb
push
mov
adc
imul
jne
pusha
in
or
xor
sub
daa
jecxz
jb
jmp
xchg
sbb
movs
push
xchg
xchg
or
or
shl
gs
mov
jne
stos
mov
mov
(bad)
xchg
lahf
stos
inc
stc
lods
rcl
sub
test
data16
mov
sar
jge
(bad)
iret
not
std
not
push
loop
aad
dec
jmp
jbe
adc
xchg
and
pop
adc
mov
sub
das
mov
pop
in
mov
push
mov
enter
cmc
sbb
cmp
push
(bad)
pop
fnstcw
iret
adc
xchg
mov
sub
jae
dec
add
or
aaa
jae
inc
mov
jo
pop
aam
leave
sbb
cmps
mov
in
inc
in
lea
popa
inc
inc
aad
push
and
inc
mov
cdq
stos
push
les
in
mov
in
imul
(bad)
enter
mov
call
ret
push
inc
jmp
cs
leave
push
and
in
xchg
xchg
pop
ret
ins
sub
add
cwde
add
loop
push
add
or
push
xchg
retf
mov
pop
inc
sti
out
xlat
and
retf
mov
cs
dec
test
jg
add
fwait
ret
xor
and
push
mov
scas
mov
ss
movs
int
xchg
and
repz
fimul
shl
add
dec
dec
pop
out
mov
xchg
mov
not
pop
paddusw
call
ret
push
ficomp
cmp
pop
mov
or
mov
or
push
adc
mov
add
mov
outs
enter
jecxz
sub
dec
jne
push
xchg
inc
push
dec
sub
adc
in
adc
lds
ss
push
scas
outs
xor
push
neg
jmp
out
sub
leave
push
and
test
lahf
and
test
mov
gs
sar
ja
push
push
sbb
out
std
scas
imul
pop
dec
cmovbe
scas
rcl
pop
and
test
test
xor
or
push
push
dec
xor
(bad)
push
mov
mov
stc
pop
daa
mov
inc
mov
push
ret
ins
dec
mov
aam
inc
fidiv
cdq
xchg
cmc
nop
std
sub
or
xchg
mov
xor
jnp
mov
aas
(bad)
imul
int
mov
pop
jecxz
sub
add
dec
adc
xor
push
in
mov
sub
pop
ret
ja
aaa
mov
pop
call
push
gs
fidiv
ret
aad
jge
jno
jo
inc
(bad)
mov
movs
lods
test
adc
sub
lds
sub
rcr
mov
icebp
dec
sub
or
loope
scas
popf
jmp
cmps
data16
mov
pusha
xchg
mov
mov
fdiv
adc
xchg
cmp
daa
adc
lock
jne
xor
xor
call
out
mov
jns
loope
fistp
repz
mov
cmp
out
xor
aad
pusha
and
xlat
xor
stos
imul
je
pop
ds
xchg
cmp
bound
and
mov
inc
push
sbb
into
dec
xor
pusha
jp
repnz
out
xchg
dec
jno
icebp
cmp
jno
call
push
shl
add
xchg
and
mov
jle
and
ror
sbb
ins
jbe
lods
inc
sub
popf
mov
lahf
into
mov
imul
aas
push
sub
add
rol
(bad)
cmp
fwait
retf
addr16
int3
dec
pushf
mov
cdq
sbb
(bad)
and
ss
push
mov
adc
adc
cmp
cmc
dec
je
or
out
test
retf
test
jmp
ss
pop
fstp
fdivr
(bad)
and
pop
add
das
mov
pop
add
loopne
imul
cld
inc
leave
or
test
mov
lock
(bad)
adc
mov
movs
test
cwde
dec
bswap
pop
mov
ins
loop
rol
mov
nop
into
xchg
les
xor
psubsw
aam
jl
adc
inc
std
out
ret
pushf
push
(bad)
std
test
inc
popf
nop
(bad)
and
jle
stos
mov
mov
jbe
sub
fiadd
pop
and
push
shl
mov
imul
ja
sbb
mov
movs
int3
nop
les
xchg
mov
mov
mov
mov
jl
jne
lock
dec
mov
jbe
and
out
neg
loopne
or
mov
lds
cmps
in
aaa
loop
mov
sub
sub
dec
test
pop
addr16
pusha
imul
(bad)
pop
popf
fdiv
adc
sub
lea
sub
pop
lahf
fdivr
iret
jo
sub
and
loopne
call
mov
xor
or
sub
jo
cmp
in
adc
xor
push
mov
data16
stos
movs
lea
jge
xchg
retf
push
xor
cld
outs
or
push
cmp
leave
mov
mov
adc
movs
and
inc
retf
jle
out
int
sub
cmps
test
xor
(bad)
scas
pop
sbb
mov
push
sbb
daa
xlat
and
xor
cmc
call
das
enter
adc
mov
jmp
pop
addr16
mov
adc
dec
lea
adc
jg
stc
xchg
adc
jge
sub
std
xchg
sub
inc
mov
rcr
das
sbb
xor
hlt
inc
in
das
(bad)
loope
add
fs
in
push
jmp
jbe
add
cmp
inc
or
xor
push
jo
pop
sar
xchg
sahf
jns
(bad)
mov
cmps
nop
push
jbe
dec
cmp
out
xchg
cdq
xchg
push
xchg
cmp
push
icebp
push
stc
add
out
adc
xor
loop
(bad)
xor
stos
dec
xchg
das
pop
and
movs
rol
mov
mov
inc
push
nop
inc
(bad)
push
in
movsx
pop
or
dec
in
sti
div
test
mov
cld
add
data16
push
pusha
mov
ficom
mov
(bad)
mov
ret
dec
jmp
inc
out
popa
sbb
test
dec
inc
push
mov
jne
or
cmp
dec
sub
pushf
push
hlt
retf
jnp
xchg
rol
jecxz
daa
jb
lds
add
inc
cmps
scas
dec
in
mov
es
lods
daa
cmp
inc
mov
cmp
pop
ins
jmp
mov
rcr
mov
test
xchg
and
clc
loope
ret
pop
inc
aam
jmp
mov
xor
data16
test
inc
sahf
mov
sbb
ror
lods
repz
pop
or
push
mov
pop
aas
sbb
jecxz
cmp
adc
das
sbb
arpl
aad
mov
bound
cmp
push
(bad)
mov
clc
jne
stos
jl
sbb
icebp
inc
test
cmp
and
xchg
call
ins
jne
jecxz
cmp
out
lods
jmp
jno
pop
pushf
add
jnp
and
clc
mov
ins
mov
or
cvtpi2ps
out
jl
dec
retf
sbb
sbb
dec
mov
enter
mov
pushf
cld
mov
cmps
jg
(bad)
popa
cmps
jb
mov
out
iret
cmp
int
scas
test
jmp
stos
or
jae
xor
(bad)
cli
dec
call
xchg
mov
mov
test
mov
inc
scas
sahf
mov
add
push
scas
xchg
mov
add
shl
aam
arpl
mov
inc
pop
xor
dec
xchg
inc
dec
(bad)
ds
mov
lods
dec
jo
test
fs
aam
jp
add
add
fisttp
xor
push
(bad)
call
xor
or
test
xchg
and
mov
fcom
adc
mov
push
mov
sar
push
scas
sub
xchg
das
mov
test
dec
rcl
leave
scas
mov
and
cmp
xchg
jnp
pop
call
push
movs
inc
push
call
sahf
adc
rcr
xor
cli
ror
xchg
xchg
loop
sub
inc
fld
jg
sub
loopne
mov
aas
inc
sbb
jle
ror
mov
and
jne
pop
sti
std
push
pop
and
cmp
push
mov
jno
aaa
not
and
aam
ficom
popa
out
test
in
jns
ss
fimul
jge
inc
pop
retf
gs
scas
push
sbb
(bad)
(bad)
test
mov
and
pop
add
or
gs
cmp
inc
or
data16
or
(bad)
ins
pop
push
clc
dec
mov
shr
xchg
jge
arpl
pop
lds
cdq
mov
push
lods
aam
repz
adc
iret
jp
xchg
imul
fisubr
mov
das
push
ss
ss
mov
stos
xor
adc
xchg
and
xchg
push
xor
loopne
pop
mov
xchg
mov
mov
js
push
jge
ret
pusha
cmc
adc
cmp
ret
test
imul
push
mov
adc
xchg
loop
jmp
or
cmp
out
lock
fimul
sti
div
loopne
js
retf
xor
out
test
js
cmc
aaa
cmp
sar
xor
jp
jae
dec
and
(bad)
pop
pop
in
inc
or
push
pusha
sbb
sub
lods
inc
out
aad
or
popf
dec
lock
arpl
mov
stos
mov
shr
inc
push
(bad)
cli
xchg
mov
fs
call
mov
scas
cmps
push
sbb
mov
pop
xlat
lea
mov
dec
sub
cld
add
mov
rcl
inc
or
jno
out
inc
loope
jb
aad
scas
push
push
push
or
ret
int
cli
stc
aas
mov
dec
push
and
mov
daa
fcomp
sbb
pop
sbb
data16
sbb
fs
(bad)
xchg
jle
(bad)
movs
ret
push
mov
mov
sahf
lea
jge
adc
xchg
in
push
dec
setae
mov
xor
or
fnstcw
repnz
inc
push
or
xchg
pop
cmp
cmp
aad
mov
and
or
pop
leave
in
in
mov
mov
sub
test
popf
popa
mov
loop
mov
in
sub
into
push
xchg
jge
repz
jmp
mov
mov
retf
sub
inc
retf
jno
mov
fstp
jle
xor
and
call
int
sub
arpl
pop
ror
pop
xor
maskmovq
neg
dec
pop
icebp
les
clc
and
mov
aaa
nop
jnp
es
cmp
or
cwd
xor
dec
call
imul
inc
(bad)
pop
add
sbb
rcr
inc
push
mov
xor
(bad)
mov
xchg
outs
mov
mov
jp
push
jle
add
fiadd
test
sub
mov
mov
jmp
jmp
call
aam
mov
mov
lods
(bad)
jnp
jecxz
sbb
out
or
or
sahf
dec
push
icebp
and
jp
sub
mov
cs
jmp
push
add
add
adc
add
popa
cwde
lds
push
adc
fld
pop
and
mov
mov
push
(bad)
inc
in
hlt
jmp
dec
shl
loop
xchg
fcom
inc
pushf
outs
push
rcl
(bad)
and
in
sub
xor
mov
sahf
out
ins
pop
pop
int
aaa
(bad)
(bad)
bound
and
mov
data16
sbb
daa
das
daa
in
bound
mov
jno
xor
sbb
sub
ret
mov
jge
xor
ins
dec
sub
push
out
(bad)
(bad)
adc
pop
mov
adc
int
clc
push
jmp
jae
inc
sbb
call
lea
xor
mov
pop
add
aaa
in
bound
push
pop
ror
mov
xor
into
mov
xchg
fcmovu
ja
mov
loope
jl
and
repz
aad
retf
fwait
xchg
(bad)
pop
dec
aas
adc
sub
stc
fisttp
xchg
inc
or
mov
xor
in
xchg
rcl
repnz
loopne
mov
idiv
or
out
ss
inc
adc
fsubr
idiv
cdq
sbb
xor
dec
adc
mov
adc
xchg
xchg
sbb
sub
mov
and
enter
scas
sub
or
test
jbe
xchg
mov
pop
popf
out
mov
cdq
lods
cmp
shr
inc
xchg
fimul
pop
fidiv
test
sbb
retf
push
pusha
add
xchg
int3
int
stc
imul
fld
vmptrst
rol
mov
add
or
lock
pop
jne
test
sub
or
xor
clc
fcom
mov
inc
pop
jge
sub
ja
cmp
mov
test
es
push
dec
cmp
push
adc
div
push
mov
jno
cmps
loopne
(bad)
mov
pop
inc
test
and
and
or
enter
xchg
dec
(bad)
pop
dec
scas
call
sbb
xchg
test
adc
pop
mov
mov
xchg
xchg
mov
pop
push
xchg
lock
inc
adc
inc
inc
cwde
mov
mov
out
xchg
xchg
cmps
pusha
int
jl
jno
je
inc
nop
hlt
push
ds
test
or
pop
jmp
outs
or
test
lahf
cmc
fs
jo
addr16
retf
xchg
xor
jge
push
clc
fwait
mov
push
ffreep
aaa
or
mov
mov
or
sbb
push
test
mov
xchg
jne
dec
ins
ficom
inc
sbb
pminsw
sahf
jne
fldpi
push
add
mov
inc
fldenv
xchg
jge
xchg
js
leave
fmul
das
ret
sub
lods
lods
jb
cmp
cmp
xchg
stos
(bad)
pop
mov
cmp
mov
popf
fisubr
movs
push
jg
ja
stos
jge
cmps
outs
or
push
mov
fdivr
aas
add
jecxz
clc
or
fadd
das
pop
or
jnp
dec
pop
or
ins
sub
in
unpckhps
not
mov
(bad)
fisub
lahf
pop
jmp
data16
xor
pop
add
loopne
push
dec
xchg
dec
mov
pop
lahf
jmp
mov
jbe
pop
sub
repz
fidivr
push
push
or
jo
mov
mov
pop
sub
bound
test
jbe
mov
sbb
or
sbb
adc
sbb
ds
jo
sbb
jmp
aaa
out
stc
lea
int3
add
leave
sub
inc
(bad)
test
sbb
dec
fisttp
cmp
push
jg
loop
mov
(bad)
xchg
inc
test
test
imul
push
xchg
xor
or
es
xchg
imul
push
mov
jge
test
adc
scas
xchg
in
mov
test
fsubr
cdq
call
loopne
gs
fnsave
adc
imul
stos
pop
adc
cld
out
mov
jle
mov
xchg
pop
arpl
jnp
pop
sub
mov
jb
icebp
cmp
ds
cld
sbb
jge
and
test
inc
call
push
lds
test
stos
jnp
and
jmp
rol
and
pop
rcl
aad
xchg
adc
mov
mov
scas
and
xchg
pop
pop
pop
jl
retf
mov
jmp
call
adc
push
ret
iret
retf
sbb
gs
pop
inc
xor
test
add
rcr
xchg
and
inc
inc
js
in
xlat
(bad)
std
(bad)
jae
lock
mov
imul
pushf
pop
out
stos
mov
push
pushf
or
mov
and
xchg
adc
sti
fstp
or
loopne
not
xchg
jae
jnp
jns
sub
and
popf
pushf
data16
stos
pop
rcr
adc
scas
div
ror
xor
pushf
mov
dec
cmp
sbb
pop
cmp
add
int
cld
or
cwde
dec
fiadd
xchg
mov
jno
hlt
xor
in
add
idiv
mov
mov
sub
inc
and
clc
or
rol
push
and
pop
inc
(bad)
push
popf
pop
push
add
mov
ror
iret
int3
les
neg
add
jbe
push
out
fisubr
mov
add
add
and
jbe
cmp
ja
mov
fisub
jmp
cmps
cmps
mov
(bad)
jns
cdq
cmp
sub
test
jl
cld
sar
mov
jae
(bad)
mov
xor
or
add
xor
movs
cmp
xchg
in
mov
push
jno
sub
add
or
adc
mov
jns
into
iret
sbb
or
jnp
or
out
test
xor
push
xchg
fisttp
into
pop
mov
push
clc
inc
mov
add
cmps
fmulp
ins
inc
mov
ss
push
jne
dec
sub
add
and
lahf
add
adc
inc
push
sbb
hlt
sbb
push
sub
mov
aaa
pop
cld
push
das
xor
dec
sub
pop
popa
lods
add
jbe
xchg
lds
data16
add
jo
pop
sub
cdq
cmp
test
dec
int3
retf
mov
fadd
mov
out
cmp
mov
int
das
and
retf
sbb
sti
inc
pop
rcl
add
pushf
and
sub
nop
inc
or
cmc
xchg
inc
rol
xor
xchg
sar
and
or
push
mov
call
ds
push
(bad)
cmc
in
fisttp
or
sub
adc
push
adc
jmp
adc
fs
es
adc
hlt
and
pavgb
stos
mov
fsub
xor
gs
std
cmp
cmps
inc
mov
push
imul
imul
push
lahf
mov
adc
adc
pop
sbb
and
mul
and
push
cmp
hlt
dec
cs
dec
xlat
sti
or
sbb
inc
repnz
mov
jmp
out
addr16
cmp
pop
pop
jp
rep
imul
or
mov
jmp
or
cld
jge
loope
fbstp
hlt
outs
pop
dec
push
mov
jl
push
mov
and
adc
jmp
lods
add
icebp
cld
cld
push
add
test
jmp
in
ins
fidiv
movs
dec
arpl
(bad)
mov
add
xor
into
or
dec
mov
and
sbb
(bad)
sysenter
pop
movs
and
inc
xchg
mov
call
(bad)
mov
cli
push
push
lahf
adc
retf
retf
jne
test
sbb
(bad)
xchg
and
cmp
bound
and
movs
int
pop
jo
mov
xor
or
mov
inc
and
xor
cli
stos
mov
gs
js
sar
mov
mov
dec
cmp
cmp
mov
pop
call
sub
mov
retf
je
arpl
(bad)
addr16
mov
cmp
into
movs
sbb
xchg
cdq
aam
sub
mov
les
ret
gs
je
pop
sti
daa
adc
out
jb
fisubr
adc
pop
test
jne
and
popf
and
imul
jno
xchg
cld
rcr
adc
ret
jb
jp
call
sbb
jns
icebp
fs
ss
sahf
fld
inc
xchg
ffreep
retf
mov
sub
adc
mov
and
in
lahf
mov
out
xchg
ret
ss
adc
stc
cmp
sub
arpl
pop
dec
addr16
clc
jecxz
in
lahf
xlat
in
sti
xchg
call
popa
add
adc
fcmovnbe
fwait
xor
xadd
mov
lods
shr
sub
sar
cli
pop
call
(bad)
xchg
daa
add
bound
rol
push
je
in
mov
push
adc
(bad)
inc
mov
or
or
mov
iret
sbb
sub
mov
jmp
mov
xchg
sbb
(bad)
call
stos
or
pushf
push
jmp
movs
daa
cmc
sbb
adc
lods
mov
fstp
push
push
test
ret
sar
shl
pop
and
and
out
retf
lock
into
cli
aad
out
jns
shr
imul
das
movs
out
xchg
dec
cmps
cwde
test
cld
fadd
mov
dec
or
jge
(bad)
int3
test
cmp
mov
pusha
xor
mov
test
movs
mov
adc
jne
pop
add
cmp
pop
jae
fld
push
(bad)
mov
mov
stos
fisub
jmp
xor
pop
lahf
add
dec
mov
fisttp
fs
fistp
cmp
aas
xchg
sub
int
outs
clc
scas
mov
pop
or
cmps
int
pop
sbb
(bad)
mov
and
mov
js
mov
retf
and
xchg
cmp
jno
pop
hlt
out
scas
aas
adc
xchg
push
stc
loope
cmp
inc
(bad)
(bad)
arpl
mov
or
mov
xor
jl
dec
ins
or
mov
xchg
sbb
aam
out
sub
cwde
icebp
ror
mov
push
arpl
or
shr
pushf
jecxz
fnstsw
sub
mov
cmp
imul
add
das
inc
add
pop
ins
(bad)
mov
icebp
mov
fst
dec
call
xor
sub
jp
lock
cmp
mov
cmp
jg
sbb
mov
call
cli
fcmove
lods
adc
test
lods
cwde
outs
cmp
dec
inc
jbe
pop
addr16
fbld
pop
sti
or
or
(bad)
addr16
jnp
push
int
adc
mov
inc
cmps
or
movs
pop
sbb
push
push
outs
enter
lea
mov
and
mov
clc
and
push
and
loope
jne
iret
jg
repz
adc
popa
test
pop
jnp
es
(bad)
(bad)
mov
mov
cwde
and
cli
push
(bad)
iret
ins
jmp
and
xor
jecxz
fld
push
push
inc
add
out
cmp
movs
cmp
imul
and
pop
or
dec
(bad)
push
pop
enter
or
jmp
add
sub
data16
(bad)
lds
enter
dec
addr16
sub
mov
dec
test
cwde
int
mov
pop
aas
test
fcmovb
gs
out
jbe
fistp
test
jp
cmp
adc
call
and
(bad)
(bad)
js
aaa
das
daa
pop
jbe
cmc
adc
cld
xchg
div
cmc
adc
push
popa
fs
xlat
add
inc
push
xchg
cmp
push
mov
adc
outs
xchg
and
cmp
cmps
hlt
fcomip
and
sub
les
add
fdivr
bound
xchg
iret
push
inc
out
adc
sbb
pushf
mov
and
sbb
push
pop
or
clc
mov
outs
add
icebp
mov
ret
xchg
mov
push
inc
sub
cwde
test
mov
fwait
std
outs
adc
mov
mov
cmp
pop
cmp
and
pop
pop
pop
adc
dec
ds
xchg
aaa
sti
loop
test
jo
aas
test
in
movs
lahf
sbb
sbb
inc
es
add
dec
mov
retf
int
xor
cli
popf
push
popa
repnz
xchg
mov
push
std
imul
ror
mov
cwde
shl
cmp
fcomp
aad
in
xchg
mov
pop
mov
jp
jae
and
adc
pop
call
popf
daa
cmc
or
rol
cmp
int3
add
mov
lods
pop
mov
push
jp
add
jo
data16
push
adc
cwde
xor
jae
(bad)
add
rcpps
stc
outs
xchg
ror
pop
inc
int
and
clc
(bad)
clc
nop
mov
fwait
sub
push
rol
pusha
mov
mov
stos
sbb
xchg
cmp
push
addr16
or
pusha
popa
jbe
fldenv
or
adc
jbe
out
mov
mov
and
dec
cmps
mov
test
inc
or
loopne
retf
push
data16
pop
stos
or
inc
cmp
dec
fs
in
icebp
pop
scas
ret
imul
and
xor
hlt
jmp
xor
dec
sar
call
or
xchg
or
push
fwait
pop
outs
pop
jge
cmp
mov
jmp
and
jmp
add
sti
ins
fsubr
inc
fist
ss
aas
mov
rcr
cmc
sbb
in
mov
xor
push
xlat
jnp
lahf
inc
push
enter
sub
mov
push
les
push
mov
aam
xor
sub
iret
(bad)
jns
sbb
std
hlt
or
add
imul
pop
xchg
movs
mov
or
mov
cmp
adc
mov
add
mov
dec
push
mov
dec
test
push
repnz
rol
sbb
mov
or
and
xor
vmulps
jae
mov
data16
frstor
not
sbb
scas
inc
scas
jne
cwde
or
push
adc
hlt
data16
pop
jo
pop
jns
int3
mov
inc
ja
mov
jl
ret
test
pusha
movs
adc
movs
ins
dec
ffree
fild
div
in
dec
ja
movs
es
(bad)
inc
push
retf
retf
aas
xchg
pop
adc
lea
adc
outs
lea
das
dec
and
(bad)
fst
or
sub
out
mov
out
fldcw
out
or
inc
fwait
sbb
in
ins
or
(bad)
retf
call
movs
sbb
adc
xchg
adc
xchg
jmp
cs
and
xor
cs
push
fsubr
icebp
push
ss
shl
ja
rcr
mov
jnp
add
sahf
pushf
push
icebp
mov
cmps
jl
stos
xor
in
sbb
(bad)
in
jmp
int3
and
popf
and
leave
(bad)
pop
movs
dec
mov
mov
ins
and
adc
dec
xadd
ret
xchg
sub
xchg
leave
sti
and
fistp
(bad)
jge
xor
enter
(bad)
shl
retf
std
je
popa
js
dec
rep
mov
mov
and
out
add
mov
test
cmp
mov
mov
aam
sbb
arpl
inc
jp
xor
sbb
cmp
mov
and
xor
xor
mov
mov
and
dec
pushf
xchg
push
or
pop
stos
movs
push
fs
fdivr
pop
stos
pop
ret
retf
push
pop
cld
cmp
dec
dec
ror
pop
pop
in
fcmovnbe
(bad)
sub
iret
pop
xchg
fiadd
retf
and
jns
sar
pop
bound
add
in
mov
test
out
mov
push
pop
inc
imul
test
popf
aas
ins
mov
aam
in
xchg
retf
push
cmps
cmp
and
sub
fistp
and
sub
loopne
xor
sbb
push
repz
jmp
xchg
mov
outs
fnstenv
cwde
sbb
inc
stc
sbb
(bad)
js
xor
add
dec
jo
dec
mov
mov
inc
sbb
ins
aaa
xchg
mov
push
push
sbb
dec
pop
cmp
mov
mov
bound
stos
dec
inc
pushf
jae
aaa
cmc
xchg
cmp
stos
sbb
xchg
std
xchg
lods
push
icebp
std
inc
mov
push
pop
stc
mov
push
inc
mov
push
push
or
aas
pop
adc
cli
xchg
or
bound
aaa
mov
fnsave
(bad)
int3
mov
fadd
jecxz
sub
daa
fistp
mov
inc
getsec
add
sahf
in
inc
pop
cmp
nop
push
inc
push
out
cmp
pop
mov
imul
stc
iret
pop
arpl
mov
cmp
sar
in
add
inc
jge
hlt
cmp
loope
lea
lock
dec
mov
aas
in
jb
sbb
ja
(bad)
add
ss
and
retf
pop
cs
das
jmp
repnz
test
(bad)
fdiv
sbb
bound
xor
jne
icebp
mov
or
xor
dec
bound
xor
dec
ins
inc
neg
jb
jae
xor
outs
push
mov
(bad)
scas
and
enter
addr16
cmp
sti
or
bound
mov
or
sub
fstp
push
test
xchg
ss
aas
dec
jo
sub
movs
std
out
into
lods
cli
cmp
not
add
xchg
xchg
dec
xchg
jb
scas
ins
fild
adc
outs
outs
stos
lods
sbb
lahf
and
cli
pop
arpl
nop
test
data16
imul
(bad)
mov
inc
ret
mov
fwait
xlat
mov
js
and
jb
jae
das
daa
fwait
cmp
std
mov
int3
stos
jb
fld
and
xchg
lea
lea
xor
fistp
out
cmp
data16
ja
add
jno
icebp
mov
fdiv
push
xor
sub
push
adc
out
mov
inc
iret
push
mov
adc
add
repz
mov
add
icebp
or
movs
mov
cdq
add
cwde
lahf
or
imul
pop
mov
pusha
gs
inc
sahf
inc
ds
adc
dec
(bad)
or
mov
cmp
add
cmp
pop
xchg
pop
or
retf
pushf
loop
xor
jbe
jmp
mov
lea
cmp
hlt
repnz
stc
dec
fisub
jb
push
cdq
inc
jns
sahf
xchg
je
test
scas
xchg
into
mov
mov
(bad)
jmp
cmp
push
push
movs
(bad)
daa
les
in
aad
nop
adc
and
mov
dec
inc
(bad)
scas
sub
retf
pop
loope
sub
shl
inc
int
ins
cwde
pop
xchg
shr
shr
xor
aam
pop
fnstcw
repz
(bad)
cli
push
jb
push
fldcw
(bad)
leave
popf
in
nop
in
xchg
cmps
in
aaa
ds
jb
mov
hlt
and
(bad)
icebp
dec
adc
and
les
pop
aam
mov
ins
ret
pushf
loope
fld
js
pop
pop
cwde
mov
hlt
test
call
cld
ret
stc
dec
iret
mov
daa
retf
fmul
loop
push
mov
ss
adc
cmp
mov
shl
(bad)
shl
sbb
mov
xchg
popa
pushf
mov
movhps
inc
stos
mov
cs
shr
pop
cmc
pop
sub
or
adc
repz
icebp
cmps
popf
xor
sbb
jnp
repz
in
xchg
movs
or
jns
mov
mov
ret
mul
xor
sbb
inc
cwde
cmp
cmps
sbb
loope
mov
adc
outs
into
rol
shl
inc
sar
inc
fdiv
dec
cmp
mov
or
push
mov
push
rcr
mov
or
sub
jo
add
jg
stos
sbb
cmovb
xchg
adc
lods
pop
xor
test
ins
pxor
push
ins
fnstenv
stos
sbb
rcl
xor
(bad)
imul
mov
xchg
inc
add
jmp
es
shr
inc
mov
outs
mov
out
add
aaa
inc
jp
shr
xchg
scas
jb
xchg
sahf
arpl
jecxz
iret
lds
stos
push
in
mov
inc
test
into
jne
retf
mov
pop
or
bound
das
or
loop
add
lods
push
lahf
inc
ds
outs
stos
out
cmp
ret
xor
jbe
(bad)
pushf
jmp
and
in
scas
mul
push
push
retf
cmp
into
sbb
daa
ret
xchg
jle
outs
xor
sbb
cmp
mov
sbb
loope
out
loope
push
sbb
dec
dec
iret
mov
xor
sub
sbb
fidivr
repz
(bad)
jge
fimul
sub
arpl
and
dec
mov
push
lea
jbe
cdq
out
mov
sbb
sti
adc
sbb
sbb
inc
push
call
shr
dec
push
lods
mov
pop
xor
add
pop
outs
addr16
shr
mov
mov
cmp
xchg
dec
mov
adc
jecxz
stos
pop
mov
mov
aam
bound
out
out
arpl
imul
sub
fwait
adc
push
push
addr16
idiv
sahf
and
and
pop
scas
and
(bad)
icebp
adc
xor
mov
jl
cwde
cmp
push
imul
xchg
mov
mov
sub
stos
pushf
aaa
jno
stos
das
xor
arpl
xchg
data16
or
test
dec
cmps
jb
rcl
fnstsw
cmp
push
sub
xchg
ror
outs
mov
test
sub
icebp
add
sar
add
stos
aaa
out
fwait
hlt
sub
mov
pusha
sub
inc
pop
dec
push
ins
add
int
cwde
(bad)
retf
je
movs
push
or
aad
addr16
les
lahf
fs
jno
mov
xchg
outs
test
mov
shr
in
mov
push
mul
lods
popa
and
inc
mov
xchg
xor
loope
pop
fimul
jb
mov
xor
xchg
cmp
ret
or
int3
fldenv
cmp
sub
aaa
jne
adc
das
loopne
xchg
lea
repz
loope
cdq
lods
and
inc
xchg
jle
call
int3
xor
xor
inc
mov
pushf
dec
mov
mov
push
scas
sahf
fwait
js
xor
adc
std
aad
inc
adc
jne
inc
dec
sub
pop
sbb
fisttp
push
out
retf
popa
inc
cld
pop
data16
cmc
pop
xlat
sbb
(bad)
xchg
jmp
lods
clc
int3
sub
cmp
inc
out
stos
cli
loopne
cli
xchg
dec
leave
fs
test
sbb
(bad)
jns
jns
push
icebp
inc
add
xchg
xchg
mov
add
out
hlt
lds
shl
stos
xchg
cmps
mov
sub
lds
mov
adc
int3
and
jle
stc
daa
loop
test
mov
(bad)
das
push
movs
inc
mov
adc
ins
sub
xchg
ja
cdq
dec
into
and
clc
mov
xchg
les
cmp
sub
or
pop
and
lds
sub
xor
rcr
les
cvtpi2ps
mov
mov
rol
fs
cmps
dec
out
mov
xor
(bad)
shr
cmp
repz
jno
dec
jb
fstp
push
inc
enter
out
dec
dec
dec
test
je
std
mov
jb
std
ficom
rcl
pop
out
mov
mov
push
pop
jp
dec
push
jmp
arpl
cmp
fisttp
iret
cmp
adc
lds
xchg
jle
adc
stc
daa
xor
stos
rcl
mov
test
push
xlat
ret
cmp
int
jb
shl
xor
xchg
pop
add
xor
add
xchg
and
movs
dec
xchg
adc
jmp
jle
push
out
clc
jge
mov
sahf
inc
dec
inc
and
sub
xor
jecxz
jle
xchg
cmp
mov
mov
rol
push
mov
in
and
adc
pop
cmp
into
pop
cmp
push
mov
and
ret
jae
fmul
mov
dec
cmp
cmc
test
mov
or
dec
sahf
jge
retf
aaa
or
mov
mov
mov
sub
(bad)
cmp
lods
call
std
stos
pusha
in
or
lods
jecxz
ffreep
jle
mov
jle
pop
dec
push
mov
scas
xor
test
or
int
jnp
sub
cmp
pop
loope
cld
jb
stos
jl
cmp
mov
jmp
xchg
sub
push
adc
call
xchg
sbb
movs
and
push
inc
call
sub
jno
inc
and
dec
ins
push
mov
push
fisub
add
cmps
cld
test
pop
(bad)
in
push
in
icebp
cdq
les
xor
inc
add
inc
std
js
inc
cmps
jle
mov
pop
movs
jge
xchg
fistp
rcl
aaa
xchg
imul
sub
lea
mov
test
or
out
mov
xchg
(bad)
in
mov
sub
and
inc
cs
mov
push
adc
retf
mov
repz
mov
out
xor
icebp
gs
shl
cmps
movs
add
sub
sub
sbb
adc
lds
sbb
in
mov
(bad)
adc
(bad)
out
pop
retf
ins
add
sub
xor
pop
ja
mov
fwait
das
les
imul
mov
ja
fcom
hlt
test
mov
mov
test
imul
pusha
inc
ror
ss
sbb
pop
in
aad
fisttp
dec
cld
push
inc
mov
cmovp
mov
cwde
and
ins
cmps
out
adc
cmp
add
repnz
js
cld
cmps
jmp
fwait
sbb
aas
cmp
fstp
push
fs
mov
stos
sub
adc
cmp
jno
lods
add
(bad)
jle
ror
mov
movs
push
fs
cmp
mov
mov
mov
sbb
test
jae
inc
dec
bound
add
idiv
movs
push
loope
jnp
xchg
stc
movs
add
jg
add
out
inc
les
push
sub
pop
add
xchg
daa
out
fmul
jp
inc
sub
call
pushf
mov
adc
jno
cmp
push
fs
and
mov
and
sbb
repnz
loop
aam
push
cmc
lahf
pop
adc
test
popa
xor
jae
xchg
shl
push
dec
sahf
jg
mov
push
sub
sbb
imul
xor
shr
mov
jbe
xchg
(bad)
pop
sub
xchg
clc
xchg
sbb
idiv
cmp
mov
cmp
ds
ror
pop
cs
sbb
inc
push
and
pop
pop
call
pop
and
or
je
mov
(bad)
jmp
cmp
adc
sti
pop
pushf
scas
shl
imul
sbb
ss
aam
pmuludq
test
jle
pop
or
sub
xor
popf
add
cmp
add
fs
call
add
retf
dec
nop
sahf
mul
lods
fsubr
cmps
mov
dec
lahf
mov
cld
sbb
loope
adc
ret
(bad)
adc
les
inc
push
mov
cwde
(bad)
mov
mov
aad
dec
or
retf
fucomip
or
je
push
lds
test
add
dec
lea
or
pop
retf
adc
mov
movs
inc
sti
ja
adc
cmp
nop
cmp
(bad)
jae
sub
jg
mov
or
out
jnp
mov
pop
scas
xchg
inc
add
cmp
mov
test
daa
ret
popa
fwait
jl
cmp
push
push
scas
dec
shl
jbe
or
mov
sahf
dec
xchg
mov
dec
not
ds
jecxz
jnp
icebp
pushf
sub
mov
cli
adc
(bad)
outs
pop
mov
inc
mov
and
std
and
nop
inc
mov
sub
mov
add
dec
xor
adc
xchg
fisttp
mov
push
dec
or
cdq
push
retf
or
and
push
ins
imul
push
pop
cli
mov
lods
jo
xchg
lds
out
scas
jge
shr
rcl
push
imul
scas
movs
ret
dec
ret
popf
ret
inc
dec
jno
inc
mov
pop
cmc
lock
jmp
jp
jg
xlat
cmp
int
xor
pop
jmp
mov
jns
call
inc
lods
sub
xlat
hlt
or
mov
stos
dec
popf
addr16
(bad)
mov
sbb
(bad)
cmp
xor
in
adc
jle
sub
sub
inc
sbb
dec
xchg
fadd
mov
sti
mov
(bad)
call
test
add
scas
mov
movs
ins
icebp
lods
pop
lods
in
test
xchg
rol
inc
cmp
adc
cwde
shr
(bad)
aad
sub
loop
pop
sahf
inc
jg
addr16
dec
and
rcr
pop
out
daa
lods
sbb
pop
lods
push
lahf
mov
das
mov
sbb
push
enter
sbb
inc
rcl
mov
jmp
add
popa
or
fadd
cmp
fstp
xchg
cmp
and
mov
mov
push
out
ss
mov
mov
das
shr
push
imul
mov
enter
call
stc
lea
das
mov
push
repnz
sbb
daa
into
mov
mov
xchg
cmp
cwde
std
sub
sahf
call
retf
(bad)
jnp
xor
paddusb
xor
cld
jle
pop
pop
inc
pop
mov
(bad)
pop
dec
(bad)
mov
jns
mov
sub
pop
inc
sub
ss
fs
std
push
leave
push
xchg
sub
div
stos
xchg
mov
retw
cmp
ss
adc
mov
push
push
xchg
mov
loop
setl
sub
jp
mov
lock
cmp
sbb
sbb
mov
test
jle
and
and
xor
popa
arpl
mov
out
jle
ja
push
fcmovnbe
sbb
pop
dec
pusha
and
rcl
cdq
jg
push
add
push
jecxz
pop
push
cmp
inc
jmp
lods
ins
mov
pop
aad
sbb
rcr
mov
inc
rol
lds
xor
cmp
test
inc
cs
add
out
gs
or
and
cmp
jmp
sar
sbb
retf
inc
xor
jbe
jbe
mov
out
ror
clc
ins
div
pop
push
inc
cmp
jnp
out
push
and
lock
retf
sbb
scas
popa
ja
inc
add
cwde
fidiv
ds
push
or
cwde
sahf
pop
xchg
jmp
movs
jbe
pop
jno
sar
fcomp
mov
sti
retf
cs
mov
pop
mov
xor
call
fwait
inc
dec
sar
mov
dec
adc
pop
call
mov
adc
jl
test
popf
cmc
push
bound
loopne
fldcw
mov
shr
call
jp
jecxz
popa
in
add
push
mov
fs
xchg
out
add
sub
inc
xor
cs
retf
pop
adc
retf
movs
shr
popa
aam
mov
in
mov
lock
xchg
jle
aas
or
outs
or
arpl
mov
mov
(bad)
js
cmp
inc
or
cmp
cmps
test
xchg
push
int
outs
cmp
sub
push
or
pop
xchg
repz
jle
mov
push
std
jecxz
mov
pop
es
test
xchg
cmps
jb
dec
mov
or
xor
inc
sbb
and
pushf
sub
retf
imul
xor
in
xchg
cmps
sbb
add
dec
int
mov
lods
sbb
shl
lods
push
loop
out
dec
adc
cmp
ds
pop
mov
je
(bad)
lods
mov
shr
rcr
dec
cdq
aad
ffreep
ficom
xchg
push
arpl
jnp
ja
inc
popf
loope
sbb
popf
add
pop
sbb
push
and
ss
and
in
subps
repnz
stos
in
cmp
hlt
out
gs
jae
sub
inc
pusha
pop
sahf
add
push
les
push
mov
scas
popf
mov
and
xor
icebp
push
pop
jp
mov
cmp
pop
cmc
popa
lahf
add
lods
inc
in
frstor
jno
(bad)
js
pushf
mov
ins
pop
scas
jns
mov
mov
sbb
enter
push
sbb
xchg
and
stc
jb
dec
xchg
mov
jp
xchg
mov
(bad)
rol
pusha
lods
in
mov
rcr
call
mov
sar
pop
in
xchg
add
adc
mov
dec
lods
push
clc
repz
call
test
je
sbb
(bad)
pop
gs
outs
mov
adc
call
(bad)
stos
mov
call
fcomi
aam
xchg
jmp
sbb
and
arpl
gs
ss
iret
iret
jns
xor
or
mov
xchg
mov
out
sub
stos
jo
dec
fistp
fstp
iret
int3
arpl
jecxz
inc
adc
pop
fnsave
addr16
jge
lahf
ja
pop
pop
shr
lds
rcl
mov
mov
into
test
aad
mov
aad
jnp
ins
add
ja
jg
outs
cld
ret
in
jb
jmp
push
inc
cdq
sti
and
jns
arpl
sbb
mov
pushf
mov
aaa
and
jge
pop
sub
mov
sub
test
inc
fcomp
retf
iret
icebp
loopne
hlt
mov
xor
(bad)
mov
push
outs
psubb
jmp
mov
ret
or
aaa
inc
push
test
popa
retf
cld
(bad)
lods
repnz
cmp
push
push
jns
mov
xchg
inc
retf
outs
sub
call
mov
out
iret
xor
fld
mov
shr
sbb
call
jle
call
in
clc
repnz
jmp
mov
mov
sub
inc
inc
aad
in
pop
(bad)
test
in
ret
test
stos
pop
hlt
and
push
push
and
repz
and
jmp
aaa
into
lock
mov
out
pop
in
rcr
lea
js
pusha
lods
or
jge
loop
ficomp
mov
jne
stc
popa
sub
sub
lea
(bad)
pop
inc
out
aad
test
jge
inc
ret
mov
cmps
lea
out
call
adc
push
js
or
vtestpd
pop
or
addr16
lahf
xchg
movs
xchg
test
in
or
cs
jno
out
popa
inc
cld
adc
cwde
mov
pop
sbb
and
(bad)
inc
cmps
mov
ins
lock
popa
pop
inc
and
pop
push
mov
cli
lods
push
(bad)
cmp
(bad)
fucomi
add
push
es
pop
(bad)
cwde
push
test
in
sbb
test
or
imul
icebp
or
mov
mov
mov
leave
sub
mov
cmp
push
into
into
sar
cwde
(bad)
(bad)
fidivr
dec
jno
iret
mov
stc
adc
mov
pusha
out
mov
pop
sub
jmp
in
mov
jo
pop
lock
add
call
pop
js
punpckhdq
iret
frstor
sub
cmp
mov
add
jp
cmp
(bad)
dec
repnz
add
(bad)
scas
out
dec
out
retf
fdivr
nop
test
ret
outs
pop
xor
mov
test
cmp
pop
and
mov
aad
outs
call
adc
scas
sub
or
adc
and
fsub
pop
lahf
dec
inc
jl
push
popa
dec
xchg
sub
mov
add
test
ficom
lea
fs
cmps
sub
adc
xchg
cmc
stos
fisub
dec
pop
inc
in
fwait
push
pop
es
add
pop
in
or
(bad)
mov
loop
outs
ss
lea
call
scas
mov
sbb
adc
mov
dec
daa
icebp
dec
or
scas
and
add
popa
test
jp
in
dec
je
lahf
sar
scas
(bad)
loope
movs
cmp
fwait
sahf
(bad)
fcom
and
add
clc
je
jge
hlt
mov
(bad)
je
add
xchg
xchg
push
das
mov
rcl
mov
bound
repz
jae
ret
fistp
or
scas
cwde
sti
fistp
das
cmp
add
lock
xchg
out
sub
mov
and
push
clc
pushf
pop
imul
xor
and
std
dec
push
dec
push
adc
sar
in
mov
fsubrp
jle
dec
out
aad
add
mov
or
mov
xor
fwait
jg
test
xchg
jp
js
sbb
push
das
sbb
(bad)
out
leave
push
jo
mov
and
push
pop
repz
xchg
push
xchg
sbb
daa
(bad)
mov
movs
jb
movs
cmps
cwde
add
or
mov
jne
jecxz
jmp
fdiv
mov
rol
pushf
stc
push
lds
lahf
sqrtps
int
inc
bndldx
clc
adc
fistp
xor
aaa
pop
retf
xchg
popa
mov
outs
scas
das
sbb
xchg
popa
aad
jae
inc
inc
xchg
(bad)
(bad)
loopne
mov
leave
or
fld
sub
xchg
mov
pop
jno
sub
(bad)
in
ds
popf
ret
cmp
lods
fwait
jbe
daa
sbb
jno
pop
rcl
in
mov
scas
push
dec
or
sub
aad
pop
sahf
pop
xchg
add
cmps
imul
sub
repz
loop
xchg
pop
and
mov
adc
aaa
popa
outs
sbb
ror
mov
push
push
(bad)
push
(bad)
neg
dec
dec
xor
call
cwde
movs
push
mov
iret
rcl
imul
nop
mov
scas
or
sub
cli
(bad)
mov
leave
sub
pop
dec
pusha
(bad)
mov
enter
int3
and
ror
ror
pop
ret
jecxz
cmp
sub
jmp
call
adc
push
and
xchg
cmc
out
jge
adc
mov
in
dec
out
dec
scas
sbb
out
popa
cld
(bad)
adc
mov
pusha
out
cmp
in
es
adc
xor
sub
aas
or
and
xchg
ins
pop
scas
mov
leave
sahf
les
cmc
(bad)
sahf
sbb
inc
sbb
jb
sti
xchg
scas
and
or
popf
nop
mov
(bad)
adc
and
add
xchg
sbb
lods
enter
pop
push
call
mov
ret
inc
retf
adc
jge
sti
lahf
adc
bound
cs
pop
imul
cmps
js
into
xchg
push
jae
out
ins
xchg
pop
jl
rcl
ds
push
jmp
shr
imul
rcr
retf
mov
xchg
std
loopne
bound
jne
pop
push
mov
add
fcom
inc
int
adc
pop
xchg
(bad)
jmp
mov
push
jo
jne
mov
and
fld
pop
lea
xor
cld
push
rcr
jg
loopne
cli
xchg
jmp
jmp
lods
dec
mov
enter
inc
jno
mov
(bad)
int
fisttp
pandn
pop
aam
xchg
loopne
add
shl
cmp
outs
movs
fisttp
inc
inc
test
addr16
mov
test
inc
dec
sbb
sbb
xchg
shr
(bad)
and
test
daa
icebp
mov
into
jmp
push
sub
inc
jp
adc
sbb
push
pop
pop
rol
cmp
arpl
ret
or
or
jp
mov
repz
popf
cmp
(bad)
ret
xor
xlat
retf
or
mov
xor
ins
shl
scas
sbb
stc
mov
loope
cld
test
cmps
popf
push
inc
xchg
loopne
std
jl
push
ins
test
inc
leave
sti
retf
gs
add
cld
jnp
cdq
mov
cmp
inc
inc
xchg
cwde
xlat
js
(bad)
stc
inc
movs
push
inc
inc
pop
xchg
je
jno
(bad)
int3
fwait
push
push
pop
adc
ror
xchg
scas
in
ror
sar
aas
(bad)
adc
push
inc
repnz
mov
ss
sub
cmps
fwait
sar
(bad)
es
add
inc
adc
(bad)
(bad)
fdiv
loope
lods
shr
test
sbb
mov
sti
aaa
js
imul
jl
mov
mov
or
jmp
or
stc
(bad)
fcom
inc
out
mov
mov
ror
dec
cmp
daa
dec
out
cmp
gs
mov
dec
movs
inc
mov
in
sub
cmp
jbe
stc
and
nop
popf
bound
xchg
lods
xchg
mov
jae
jmp
mov
(bad)
sbb
shl
jmp
and
in
(bad)
sahf
data16
sbb
jmp
push
fwait
push
sbb
sbb
add
and
sbb
jge
call
sbb
or
aad
mov
jo
sub
push
dec
call
jmp
inc
loopne
sub
scas
lock
out
loop
sub
and
(bad)
sbb
mov
push
jbe
or
pusha
inc
jg
mov
fs
mov
lods
or
push
xchg
jecxz
js
dec
popf
out
cmp
pop
adc
and
das
push
jne
sub
xor
bound
push
sub
cwde
(bad)
pmaxsw
mov
mov
outs
mov
xchg
retf
das
mov
in
push
ret
aas
movs
add
ins
push
jne
out
stc
icebp
push
shl
ins
adc
xlat
mov
sub
into
mov
add
sub
movs
push
js
mov
xor
mov
aad
xchg
pusha
xchg
fist
int
enter
sbb
retf
dec
adc
into
sbb
pop
adc
jno
xor
enter
adc
adc
ja
in
pop
sub
sbb
and
and
sbb
push
xchg
push
sbb
enter
or
icebp
and
ret
push
enter
xchg
fucomip
test
dec
adc
rol
mov
pop
stos
ds
aas
iret
jbe
fild
in
adc
dec
pop
fs
push
xor
pop
jo
mov
ret
push
test
dec
cwde
adc
lahf
xlat
fiadd
fld
clc
xchg
cmp
or
loop
(bad)
call
jo
test
sbb
push
stc
fsubr
in
fwait
xlat
cmp
sahf
cmp
pop
or
inc
popf
xor
retf
pop
xchg
movs
dec
sbb
mov
outs
jle
(bad)
push
into
xor
push
into
mov
push
jnp
loop
pop
sbb
sbb
cmp
mov
ja
and
into
sub
mov
daa
and
mov
(bad)
jp
inc
retf
jb
nop
or
xchg
jns
(bad)
xor
test
mov
rcr
ja
aad
int3
mov
dec
outs
nop
push
cmc
mov
jmp
inc
stos
movs
arpl
icebp
jb
push
fld
stos
fwait
adc
dec
fstp
fcmovbe
aaa
mov
add
mul
xchg
jl
int3
pop
rol
jo
repz
mov
clc
or
pop
mov
inc
push
es
sbb
cdq
inc
push
xchg
test
test
scas
adc
mov
xchg
fxam
inc
jnp
inc
fcmovnu
jmp
mov
lahf
call
mov
mov
pop
or
mov
add
sbb
repnz
ret
xor
jle
xchg
sbb
lock
mov
jo
repnz
popf
cmps
mov
xchg
sbb
xchg
loop
mov
mov
cld
xchg
shr
adc
pop
lds
fisub
imul
ds
mov
ror
int
sahf
dec
sbb
fmul
push
dec
test
sub
xor
push
cmp
or
add
sub
jns
scas
dec
sysenter
adc
sub
pop
(bad)
ins
mov
cmps
push
popf
loopne
push
out
fwait
dec
adc
xor
icebp
xchg
mov
inc
cmp
jg
mov
int3
inc
cmp
xor
ficom
into
fs
mov
outs
loopne
and
popa
or
les
xor
push
cmps
mov
(bad)
mov
jp
pop
mul
mov
cdq
shl
adc
and
sbb
rcl
(bad)
das
xchg
mov
jmp
xor
ror
pop
cmp
or
add
sub
fwait
popa
xor
xchg
sbb
cld
aaa
cmp
cmp
mov
sub
add
cmps
mov
(bad)
aam
mov
dec
and
cdq
in
enter
repnz
rcr
(bad)
dec
add
repnz
shl
xor
mov
call
in
loopne
cs
imul
push
sub
inc
test
and
mov
dec
pop
cmp
inc
mul
jb
mov
imul
movs
jg
pop
std
jns
in
dec
inc
dec
neg
dec
add
push
out
test
in
call
retf
in
jg
add
stc
ins
pop
in
cmp
(bad)
push
imul
add
dec
stos
out
xadd
mov
ss
pop
imul
sbb
cmp
mov
push
inc
ret
jne
fisubr
cli
outs
sbb
xchg
jo
mov
xor
cmps
push
pop
(bad)
dec
int3
cmps
mov
cmps
pop
sbb
popa
mov
jne
cmp
mov
mov
xchg
mov
push
bound
imul
jecxz
neg
pop
test
mov
into
arpl
aam
add
test
inc
popa
in
fld
jb
(bad)
sti
dec
sbb
fnstcw
mov
out
out
jmp
push
scas
ins
(bad)
xchg
mov
(bad)
sbb
dec
pop
lds
(bad)
into
or
jp
iret
neg
daa
ds
popf
into
int
sbb
jb
mov
jmp
xor
outs
ins
jmp
sbb
jno
push
ret
shl
std
int3
lods
movs
es
xor
callw
push
or
and
push
sbb
fwait
es
jmp
adc
test
call
push
pushf
sar
in
pop
or
outs
push
mov
and
cmp
test
dec
(bad)
fsubr
jmp
jb
mov
sar
xor
dec
(bad)
sbb
mov
push
xchg
push
retf
stc
rcr
ret
inc
fsubr
jno
outs
div
push
sbb
push
add
aad
mov
mov
test
ds
cmp
add
sub
jl
mov
cmc
les
addr16
retf
ret
mov
sbb
out
dec
push
mov
cmps
mov
add
lds
nop
xor
and
repnz
mov
arpl
inc
out
xchg
out
rcl
cli
pop
mov
adc
push
rcl
ins
mov
enter
(bad)
pop
pop
dec
loopne
xchg
cwde
fistp
aam
or
sbb
(bad)
and
nop
mov
sti
pop
(bad)
jl
cwde
lock
leave
test
stos
fwait
mov
inc
xor
sti
mov
rep
xchg
sub
lds
sub
aad
or
hlt
xchg
in
jmp
jmp
or
out
cld
shl
test
jmp
xor
shl
cmp
inc
jno
div
(bad)
jmp
xor
mov
neg
and
sub
mov
adc
(bad)
out
test
pop
out
pop
xor
ret
push
or
adc
add
mov
adc
xor
movs
pop
mov
or
push
cwde
mov
mov
or
dec
pop
aad
loop
cmp
jg
clc
arpl
sbb
xor
inc
pavgb
inc
inc
xor
inc
push
clc
and
push
pop
scas
mov
jge
(bad)
and
xchg
into
jmp
mov
aad
out
lea
dec
out
stos
es
cmc
pusha
adc
or
sub
sti
(bad)
std
test
add
test
and
sub
shl
mov
je
hlt
xchg
lahf
aaa
fcmove
adc
xchg
xlat
fwait
xchg
sbb
clc
push
and
mov
cli
sahf
dec
add
pop
pusha
js
sahf
ror
push
leave
or
loop
imul
sahf
call
inc
out
xchg
add
test
jno
xlat
mov
shr
cmc
add
in
rcr
(bad)
repz
dec
mov
rcl
push
arpl
inc
stos
pop
dec
sub
adc
sbb
hlt
out
sub
mov
clc
scas
shl
aam
fimul
bound
mov
in
lock
xchg
sbb
test
(bad)
push
jae
mov
fsubp
mov
clc
mov
adc
sbb
or
(bad)
div
addr16
adc
lods
cmps
shl
adc
sub
je
jle
(bad)
gs
sar
test
cmp
xchg
pop
fnstsw
imul
stc
mov
inc
aas
xchg
xchg
std
repz
stc
dec
sahf
mov
sbb
popa
and
sub
inc
ds
mov
(bad)
jmp
add
jae
mov
sahf
push
jo
cmp
dec
mov
jmp
out
daa
xchg
loope
and
in
out
push
sub
jae
add
rep
jbe
cwde
in
xor
cdq
mov
test
pop
ret
scas
jb
xor
xchg
rcr
out
mov
jbe
arpl
pusha
pop
dec
test
mov
xor
inc
xchg
mov
mov
rcr
stos
xchg
jmp
mov
xlat
scas
mov
inc
push
mov
and
fild
mov
dec
pop
adc
repz
call
je
scas
xchg
out
in
sub
out
sahf
xor
sub
call
xchg
arpl
or
sub
add
and
or
call
push
and
shr
das
or
jle
jo
loope
pop
std
outs
dec
pushf
pushf
cmp
aaa
xor
push
mov
imul
scas
retf
cdq
div
cmp
sub
fnstsw
sub
cld
mov
loop
or
fisub
or
repnz
out
or
shl
mov
and
mov
dec
mov
scas
fst
and
mov
pop
out
mov
ins
add
adc
xchg
dec
jl
ficom
sti
jmp
dec
(bad)
cwde
arpl
xchg
dec
xor
je
fwait
jmp
outs
add
popa
test
mov
aam
jb
rol
xchg
lds
out
pop
mov
sbb
push
movs
mov
std
xor
and
mov
pop
ins
jns
les
cmp
adc
sbb
mov
sub
ins
xor
mov
cs
jle
test
xchg
xor
xor
jmp
inc
aaa
lds
xor
into
cmp
jns
loopne
inc
add
xchg
call
cmp
and
stc
out
popa
ror
cs
mov
repz
xchg
or
mov
sub
pop
js
int
cmp
mov
cmp
jl
sbb
add
ins
and
dec
ins
xchg
outs
aas
cwde
test
sbb
adc
pop
jmp
imul
sub
cwde
push
out
jecxz
jecxz
mov
mov
shl
or
sbb
sub
jg
hlt
inc
jmp
add
imul
frstor
in
dec
je
inc
mov
call
lds
enter
jmp
sub
dec
jp
push
fucomi
mov
loop
pop
and
fnstcw
cmp
xchg
stos
leave
and
or
xchg
mov
dec
or
fmul
xchg
imul
inc
in
inc
fwait
pop
mov
rcl
push
xchg
(bad)
rcr
(bad)
sbb
adc
inc
inc
and
mov
jno
and
cwde
repnz
and
adc
mov
cdq
call
mov
pop
inc
push
push
rcl
sbb
nop
mov
or
push
xlat
mov
dec
gs
into
xchg
shr
mov
and
ror
xchg
pop
loope
cmps
mov
inc
push
(bad)
jecxz
mov
mov
das
push
sub
inc
out
or
mov
xor
lods
sbb
push
xchg
mov
push
imul
cmps
fstp
xor
xchg
xor
cld
xchg
mov
mov
pusha
pusha
ja
cmp
add
cld
and
fsubr
add
push
daa
fild
sub
mov
popf
push
or
loopne
sub
xor
imul
test
push
cwde
aaa
mov
cmps
imul
jno
jo
or
mov
lods
pop
inc
pop
or
xor
or
scas
fisub
out
add
imul
jg
push
mov
arpl
jo
(bad)
ins
clc
mov
out
adc
inc
jp
push
popf
adc
sbb
fidivr
and
sbb
and
xchg
add
js
fdivr
dec
icebp
push
out
(bad)
out
jmp
lds
jl
lods
aad
mov
xchg
jbe
add
or
adc
int
sti
loopne
add
mov
dec
out
test
xor
addr16
cdq
in
sub
add
xor
cmp
leave
popa
mov
enter
jecxz
(bad)
cdq
lahf
inc
xchg
jmp
cmp
and
jg
xchg
push
(bad)
push
sub
jmp
in
adc
sbb
or
mul
iret
stc
pop
add
dec
inc
iret
aam
das
lahf
fmul
jbe
cs
clc
addr16
add
pop
outs
fwait
jl
cmps
loope
inc
xchg
pop
xchg
and
pusha
dec
inc
pop
xchg
fisub
aam
nop
dec
jecxz
in
mov
fdivr
call
inc
mov
repnz
(bad)
mov
push
mov
and
cmc
xchg
fcomp
test
mov
scas
xchg
fs
cmp
push
(bad)
(bad)
pop
pop
and
add
pop
shl
sub
arpl
add
xchg
in
(bad)
cmp
sub
bound
dec
sub
out
xor
loopne
and
jnp
push
cdq
pop
addr16
mov
add
jne
adc
daa
mov
push
xor
mov
test
xor
into
add
in
adc
bound
sbb
cmp
gs
sbb
fsubr
call
and
push
push
mov
push
imul
sub
sbb
xchg
add
ss
xchg
das
pop
movs
jnp
into
adc
ins
test
out
xor
cmp
fst
std
shl
das
cmp
dec
dec
and
pop
dec
or
mov
fwait
cmps
jae
adc
mov
mov
enter
inc
addr16
outs
stos
scas
jge
shr
push
vpsrlw
fcmove
out
nop
jne
daa
das
cs
loope
push
stc
stos
scas
lahf
add
clc
repnz
jge
sub
mov
rcl
push
sbb
push
lods
add
jb
cli
repz
and
(bad)
cmp
xchg
push
push
xchg
adc
fdivp
es
xlat
adc
push
pop
lds
mov
sbb
or
inc
aad
inc
add
pop
arpl
(bad)
(bad)
pop
xchg
pushf
push
gs
call
mov
dec
sub
mov
xor
jle
jmp
push
out
mov
or
adc
cwde
mov
(bad)
loop
xchg
lahf
push
cmp
jg
cld
jle
and
arpl
mov
ins
icebp
xchg
adc
clc
mov
cmp
cmp
dec
and
xchg
retf
dec
pusha
push
dec
sub
outs
ss
jbe
ss
fwait
in
repnz
popf
xchg
adc
std
mov
jb
loopne
pop
adc
sahf
cmps
xchg
shl
or
fidivr
mov
retf
cmp
adc
lea
and
nop
dec
cmc
sti
scas
lahf
inc
loop
xchg
aaa
das
pop
cli
inc
mov
ror
lahf
xchg
push
cmp
jb
gs
jnp
mov
lock
movs
push
xor
scas
cli
adc
icebp
loop
out
out
(bad)
xchg
imul
inc
jl
dec
inc
cdq
mov
(bad)
nop
rcr
and
ins
push
inc
test
add
adc
mov
loop
std
cmp
fstp
xor
mov
std
mov
es
mov
popa
jmp
gs
imul
inc
mov
fsubrp
push
mov
loopne
xchg
sahf
cs
push
(bad)
hlt
aaa
stc
ins
sub
jns
hlt
scas
cmps
fimul
les
out
ror
fdiv
dec
mov
fnsave
dec
cmc
adc
push
sbb
and
cmc
mov
dec
push
push
adc
xchg
add
sbb
mov
test
jnp
mov
outs
(bad)
(bad)
fisub
inc
pushf
in
and
into
mov
and
arpl
xchg
cmp
pusha
(bad)
test
cmps
inc
loopne
sub
and
pop
dec
cdq
js
jns
pushf
dec
mov
sub
ins
mov
fimul
xchg
jmp
sub
and
xchg
push
and
pop
test
stos
in
sub
pop
inc
(bad)
and
retf
aad
sbb
xor
and
jmp
pusha
mov
loop
dec
je
sahf
test
das
into
jmp
sub
jge
div
outs
xchg
call
dec
mov
cmc
test
mov
mov
loopne
inc
aam
push
iret
adc
das
mov
clc
adc
std
jns
shr
mov
int
std
mov
pop
dec
jge
or
pop
mov
mov
fst
stos
retf
cli
fnstsw
out
push
fs
stos
dec
aad
pop
imul
not
jge
push
mov
rcr
movs
lods
rcl
jnp
mov
pop
dec
jb
pop
jmp
push
(bad)
loop
dec
or
bnd
ins
push
or
cs
add
jmp
bswap
or
dec
dec
int
clc
mov
lock
call
inc
lock
jae
jle
repz
jl
fsubr
dec
xchg
rol
inc
stos
lds
lds
mov
iret
adc
in
fst
ret
sbb
fidivr
dec
fadd
pop
mov
inc
xor
ja
repnz
adc
or
cmp
retf
jecxz
(bad)
jle
mov
dec
push
nop
leave
push
nop
ret
enter
sahf
mov
xor
ds
addr16
in
dec
push
in
js
xor
dec
dec
sahf
rcr
inc
fist
push
lods
mov
(bad)
leave
dec
mov
add
sub
inc
add
xchg
test
cli
inc
(bad)
in
add
shl
test
xchg
dec
mov
mov
jp
fild
push
dec
into
mov
mov
jno
fcom
out
jge
out
mov
aad
sbb
mov
sbb
dec
inc
push
call
xchg
ins
and
or
adc
inc
pushf
pop
aad
mov
xor
and
adc
js
fadd
lea
(bad)
popa
je
fdivp
jne
call
xchg
ins
mov
add
push
das
test
jle
pop
test
jmp
aam
(bad)
and
push
xor
cmp
test
pop
push
fmul
mov
lods
clc
push
mov
inc
and
sub
retf
or
push
sbb
mov
mov
fcom
add
fsubr
in
in
clc
popa
enter
movs
mov
ins
jecxz
and
stc
test
mov
sub
in
xor
dec
retf
dec
sub
sahf
shl
jne
loope
out
mov
push
mov
sbb
std
push
sbb
ret
hlt
xor
int
push
mov
pop
push
push
push
lock
cmp
push
cmp
aas
cmps
dec
rol
mov
xchg
aad
push
dec
sbb
xor
push
mov
or
pop
adc
(bad)
and
fstp
and
call
retf
ja
call
push
test
pop
and
out
sbb
outs
loopne
neg
dec
(bad)
sub
dec
sbb
xchg
in
cmp
aam
loopne
popf
sar
and
iret
pop
js
hlt
xor
pop
test
xor
add
shr
sbb
repz
pop
cli
pop
cs
add
leave
lods
mov
jmp
jae
icebp
mul
cli
rcr
out
dec
inc
les
add
mov
cmp
in
inc
out
(bad)
test
xchg
mov
scas
pushf
fdivr
inc
jp
cmps
xchg
enter
sbb
or
int3
sar
call
cdq
js
push
add
sbb
push
leave
jl
sbb
aam
inc
sbb
ins
and
or
es
addr16
test
loopne
push
mov
inc
aaa
xchg
inc
jg
sbb
jle
repz
maxps
shl
icebp
push
scas
iret
fistp
icebp
aam
add
jnp
lods
cmps
pop
add
inc
mov
xor
and
into
ins
shl
pop
pop
imul
daa
aam
cmp
mov
nop
push
nop
dec
mov
jb
and
jns
mov
xlat
pop
out
retf
inc
jo
retf
pop
shl
pop
fadd
cmp
add
aaa
fnstenv
ror
shl
mov
dec
daa
jg
pusha
add
test
std
dec
pushf
(bad)
jne
sub
pop
sahf
mov
jmp
push
int
nop
clc
rcl
mov
cmp
neg
xor
xor
fidiv
ret
pop
in
cmc
pop
ds
rcr
inc
add
(bad)
cmps
xchg
sub
movs
dec
inc
xchg
imul
xor
jns
scas
push
fs
cli
addr16
jno
jno
and
mov
push
sbb
inc
cmp
loop
inc
mov
mov
inc
cli
mov
arpl
add
push
mov
nop
add
push
aad
pop
jo
inc
ss
call
arpl
inc
sbb
int
adc
or
mov
das
shl
jl
dec
sub
xor
mov
cld
lods
inc
xchg
mov
rcl
std
mov
add
jo
out
inc
sub
or
xor
test
ficomp
xor
xchg
sbb
imul
stos
(bad)
js
push
imul
movaps
or
dec
inc
mov
sbb
ret
in
aam
push
pop
aaa
xchg
int3
cmp
(bad)
std
shr
cmp
sub
pop
add
jns
out
mov
aam
fstp
cdq
in
adc
shr
add
pop
sbb
xchg
mov
lock
loope
mov
div
sub
xchg
out
mov
fnstsw
(bad)
dec
addr16
jbe
lods
inc
in
repnz
scas
inc
fst
aaa
dec
je
loop
cs
pop
push
adc
daa
sub
out
and
mov
xchg
sub
inc
mov
sub
aas
or
aas
in
sub
and
(bad)
and
inc
cmc
shl
shl
popf
gs
xor
and
loope
in
jae
retf
sbb
(bad)
fistp
pop
shr
rol
inc
cli
sub
xor
mov
ret
mov
dec
jmp
jmp
add
mov
and
jae
test
mov
xchg
into
and
push
sub
test
xchg
cs
sbb
push
mov
lds
movlps
push
(bad)
ss
and
shl
cmp
jb
cli
not
or
adc
not
lods
inc
cmpps
loopne
jp
mov
test
ret
mul
es
xchg
or
mov
push
ret
stc
add
cli
push
popf
stos
mov
sub
push
and
mov
rcl
jle
cmp
fs
call
or
je
fadd
stos
inc
push
add
retf
pop
or
sbb
retf
lock
pop
add
mov
retf
jl
(bad)
out
ficom
(bad)
sti
jle
aaa
sub
call
fidiv
cmps
xor
enter
std
cmps
pop
cmp
xchg
lahf
stos
mov
dec
adc
ins
ret
mov
js
fs
sbb
cmp
les
dec
popf
sub
in
cmps
jmp
sbb
pop
jne
out
(bad)
jns
mov
mov
mov
mov
jbe
cmp
inc
cmp
call
shl
out
stc
outs
div
shl
jp
mov
mov
push
mov
sbb
mov
retf
sbb
mov
mov
outs
daa
add
sbb
cmc
mov
xor
nop
loope
std
sbb
jecxz
mov
jbe
ret
fwait
add
mov
xor
(bad)
cmp
sahf
push
xor
out
mov
xor
adc
ror
mov
mov
pop
or
movs
push
xchg
into
mov
mov
rol
mov
ficom
sub
xchg
in
jbe
pop
add
cmp
outs
pop
jp
add
dec
jb
lahf
in
jge
clc
sbb
(bad)
or
(bad)
iret
and
sti
das
aad
push
mov
pop
iret
push
mov
rol
out
mov
and
adc
fsubrp
add
clc
add
mov
rcr
mov
pop
sbb
or
inc
shr
add
push
and
push
ds
sbb
(bad)
cmp
sbb
imul
in
fnstenv
sbb
cli
shl
or
inc
ret
rcl
inc
and
or
push
(bad)
xor
mov
lods
and
xchg
cmps
pushf
inc
cmps
cmp
movs
sti
add
daa
or
popf
(bad)
jmp
add
or
xchg
mov
into
outs
jo
xlat
cmp
inc
adc
sbb
mov
rcl
push
icebp
ror
sbb
push
dec
fbld
mov
loope
lods
movs
lods
push
xor
test
ficomp
call
js
inc
jae
call
pop
cmp
inc
lock
sub
jne
inc
hlt
jb
cmp
data16
sbb
test
les
fdiv
mov
ins
mov
add
push
pop
push
push
and
test
push
repz
mov
test
fild
out
jecxz
pop
pop
les
mov
sub
mov
sbb
mov
popa
mov
push
imul
mov
pop
jg
xchg
add
popa
or
adc
fcomip
lea
ds
movs
lods
pop
xor
xchg
mov
sbb
test
jbe
or
lock
jne
jmp
inc
sti
mov
sub
inc
dec
out
loope
and
cmp
mov
cmp
sti
loope
sbb
jb
jmp
fadd
mov
(bad)
fmul
or
push
rcl
cmp
scas
sub
push
mov
adc
cmp
movs
inc
mov
call
push
outs
xchg
push
pop
aaa
mov
fwait
cmp
ror
ret
je
mov
addr16
mov
mov
inc
add
adc
mov
data16
(bad)
cs
or
sbb
push
movs
mov
push
es
sub
ins
(bad)
jbe
xchg
in
mov
leave
outs
nop
enter
fbld
cmp
mov
loop
jno
xchg
nop
out
sub
pop
aaa
test
pop
fst
cld
xchg
push
fsubr
sets
jg
push
repnz
loope
ret
and
xor
call
gs
inc
adc
hlt
sub
nop
sbb
push
jo
out
stc
sbb
popa
xor
cld
data16
jmp
ins
pusha
and
cwde
jmp
in
mov
not
cld
mov
xchg
loopne
ret
pop
shl
xor
loopne
fidivr
fs
xchg
mov
scas
cmp
cmp
push
aad
and
or
dec
cwde
adc
push
or
and
aam
int3
push
mov
in
mov
fimul
mov
out
clc
nop
shl
or
or
out
and
xchg
les
inc
retf
data16
dec
jmp
movs
and
cmc
xor
sar
enter
inc
out
mov
push
nop
das
js
inc
outs
mov
jae
jo
pop
sti
and
sub
mov
jg
jb
mov
cmp
mov
cmp
xchg
sbb
or
mov
mov
and
loope
inc
pop
(bad)
inc
sahf
ins
ins
and
vphadduwq
sub
inc
adc
shl
adc
inc
pop
aaa
push
adc
xor
std
jne
cmp
scas
adc
or
and
test
mov
call
stc
xor
mov
call
aaa
mov
mov
mov
(bad)
xor
pushf
outs
mov
sbb
sbb
or
scas
(bad)
mov
push
inc
cmp
adc
mov
sub
(bad)
gs
mov
mov
pop
inc
lock
mov
push
sbb
mov
jne
(bad)
cmp
xor
inc
cmc
jecxz
(bad)
and
(bad)
xor
mov
and
jl
jg
lea
dec
mov
popa
sub
pop
xor
mov
mov
cmp
xchg
xor
mov
jae
push
jp
inc
pop
or
loope
movs
jle
and
aad
jns
les
or
or
mov
popf
bound
repnz
sub
pushf
pusha
xor
cwde
pusha
mov
or
lahf
xor
sbb
fwait
not
fisttp
xchg
outs
int3
sbb
dec
sbb
push
jo
fwait
out
or
add
xchg
pop
cmps
mov
ja
xchg
lea
push
jne
fwait
mov
sti
mov
xor
cmp
lods
sub
pop
and
icebp
inc
push
cmp
mov
movs
and
lea
leave
push
xor
out
popf
and
das
ror
xchg
std
clc
pop
icebp
push
push
dec
jge
push
mov
inc
outs
aas
(bad)
ins
in
jecxz
icebp
sub
gs
jae
shl
add
gs
cmp
arpl
out
sbb
rcr
cdq
cmp
dec
push
pop
mov
mov
(bad)
jl
js
mov
cmp
and
aam
les
addr16
outs
imul
test
div
in
mov
mov
aas
(bad)
and
jg
cld
les
inc
cmp
fcom
cmp
mov
push
pop
mov
in
inc
push
cmp
or
jge
loope
je
sub
cmps
cld
ss
pop
sbb
test
sbb
push
or
pop
pop
sbb
mov
lahf
pusha
outs
pushf
pushf
das
push
clc
inc
push
mov
xlat
test
adc
cld
xchg
mov
loope
push
neg
and
scas
mov
call
pushf
(bad)
popa
sbb
rcl
les
outs
repz
inc
push
in
inc
xchg
push
pop
add
push
dec
dec
cmp
enter
arpl
cdq
push
pusha
sub
sub
sbb
sub
ret
xchg
and
dec
xor
icebp
mov
and
not
mov
xlat
pusha
adc
jb
(bad)
popa
fld
mov
ror
loopne
or
adc
jae
dec
mov
push
shr
cmps
jb
or
push
inc
sar
adc
jae
dec
or
cld
pop
pushf
ss
out
xchg
and
or
xor
inc
je
or
and
jne
imul
or
mov
sub
je
loope
cmp
jbe
int3
fisttp
(bad)
fld
cmp
sbb
pop
inc
sub
movs
sub
push
and
cmp
jmp
mov
pop
or
retf
mov
bound
push
add
mov
ds
push
in
ss
pop
xchg
mov
call
push
inc
int
shr
in
and
sub
sbb
cmp
shl
cli
pusha
xchg
ret
adc
ror
sub
or
dec
pusha
mov
fdivr
mov
push
jae
popa
jnp
dec
inc
mov
mov
push
xchg
ret
sbb
push
in
cmp
jnp
loop
out
aaa
gs
mov
xor
stc
loopne
popa
clc
je
or
mov
(bad)
and
jle
mov
fdivr
pop
cmp
aas
and
jno
sahf
mov
fdiv
push
push
bound
scas
dec
mov
(bad)
mov
fs
rcl
xor
mov
fnsave
lock
or
(bad)
jmp
add
push
sub
dec
mov
rcl
xchg
mov
xor
pop
mov
mov
mul
adc
out
sub
psubsb
es
push
sbb
cmp
popf
jle
sbb
mov
imul
outs
xor
xor
sbb
pop
sbb
lods
mov
popf
jmp
sbb
cmp
cmp
pop
xchg
mov
inc
push
(bad)
xchg
call
pop
sbb
(bad)
inc
(bad)
test
xchg
das
xchg
jmp
jecxz
test
aas
(bad)
sbb
pop
rcr
xor
inc
aas
cmps
push
aas
imul
aaa
push
push
leave
and
mov
dec
pop
gs
bound
gs
dec
jns
sub
adc
push
or
daa
xor
cmp
xor
cmp
neg
inc
jb
call
stos
retf
cmps
sub
pop
pop
icebp
sti
xor
addr16
mov
jecxz
lock
sbb
add
stos
ficomp
cmp
add
hlt
test
or
or
ss
jecxz
rsqrtps
fmulp
xabort
fwait
jae
dec
shl
out
hlt
aas
inc
stc
or
je
mov
ret
dec
test
and
call
je
(bad)
xor
retf
mov
jl
jmp
ja
shl
lods
into
pop
cmp
pop
mov
push
mov
pop
popf
mov
adc
daa
adc
jmp
in
lods
mov
(bad)
int
daa
out
pop
cmp
push
or
in
lock
dec
jmp
dec
xchg
push
repz
push
cwde
sbb
and
movs
jmp
shl
daa
mov
pop
mov
iret
adc
movs
sub
cdq
aaa
cmp
push
ficomp
pop
sub
(bad)
mov
xor
ds
aaa
mov
mov
mov
je
mov
in
pushf
dec
stos
mov
dec
sti
mov
inc
mov
shr
mov
fnstenv
std
jno
ins
xchg
fimul
add
push
and
adc
das
not
lods
mov
test
dec
fsub
dec
xor
and
mov
iret
rcr
mov
sbb
mov
les
dec
js
cmp
cdq
adc
ss
call
mov
jo
cmp
adc
mov
cmp
test
push
adc
mov
aad
scas
fs
test
ret
in
outs
clc
hlt
loop
pop
adc
rcl
cmp
mov
ds
pop
call
and
jg
and
test
sbb
movs
iret
daa
add
cs
and
sar
mov
repz
aam
(bad)
jmp
dec
adc
test
test
sbb
inc
adc
push
dec
inc
sub
(bad)
outs
sbb
mov
add
xor
jbe
movs
enter
stos
mov
jnp
xor
aas
mov
sub
sub
mov
loopne
xor
jae
lds
mov
lahf
test
or
(bad)
fs
(bad)
sub
pop
adc
icebp
mov
and
in
adc
fmul
dec
gs
pop
jae
call
dec
cmps
and
ret
xor
int3
add
out
xor
into
lock
dec
add
fiadd
lods
mov
dec
push
cdq
lods
jecxz
(bad)
mov
or
inc
sub
adc
mov
outs
xlat
pusha
lds
cmp
pop
fs
daa
push
in
add
xchg
les
ins
jb
jno
adc
iret
jg
add
push
xlat
push
add
xchg
nop
lock
pop
and
mov
stc
dec
aas
dec
dec
adc
cmp
mov
cs
xchg
in
sbb
ss
call
outs
jg
pop
bound
adc
and
push
or
pop
arpl
(bad)
dec
cmp
mov
add
fadd
fidivr
repnz
cmp
idiv
(bad)
stos
push
xchg
in
pop
cmps
or
sbb
pop
out
mov
data16
fdivr
cmps
cmp
jp
or
pop
iret
sbb
or
sub
cmps
xor
test
or
dec
arpl
das
jne
aam
push
dec
push
jp
inc
add
adc
and
out
xchg
fiadd
adc
test
pop
ficomp
mov
(bad)
mov
and
or
mov
ds
fisubr
or
mov
mov
dec
scas
mov
push
cli
or
mov
inc
mov
jno
sar
hlt
dec
aas
add
adc
fldcw
retf
inc
adc
jl
rol
xor
mov
mov
mov
mov
daa
adc
sbb
std
xor
xchg
aaa
xchg
push
dec
repnz
rcr
mov
jge
and
cmp
loopne
add
push
stc
out
sbb
adc
mov
sub
pop
xchg
mov
jmp
push
push
add
and
sbb
push
jnp
pop
jmp
adc
out
or
jmp
inc
or
ret
(bad)
pusha
dec
les
sub
stos
aam
sub
(bad)
out
jg
adc
scas
xchg
jbe
jae
dec
inc
xchg
mov
inc
call
lea
fadd
push
ret
xchg
jmp
adc
pusha
pushf
pop
push
(bad)
ficomp
pusha
aad
xchg
mov
xor
xlat
add
addr16
pushf
push
lods
sub
mov
hlt
loop
loop
xchg
pop
jae
addr16
loope
xor
mov
ret
movs
into
test
jmp
jne
or
adc
pop
bound
xchg
out
push
imul
clc
ins
push
mov
shr
mov
shr
lahf
lods
push
and
into
aas
adc
imul
mov
xchg
jp
dec
rcr
jo
out
jg
add
aad
cmp
mov
ficom
cmp
xor
pop
xor
jae
pop
(bad)
out
jge
and
sahf
push
or
add
jmp
jne
xchg
out
je
pop
and
fcom
outs
adc
popf
int
cdq
mov
pusha
dec
add
xor
sbb
inc
repz
aas
pop
les
cmps
test
test
lods
(bad)
std
call
daa
mov
jmp
cmp
imul
ror
lods
call
arpl
rcl
out
mov
mov
xchg
sub
lods
das
push
je
je
push
shl
in
jmp
popa
inc
mov
lahf
std
aaa
xor
push
cdq
sub
(bad)
in
xor
dec
in
(bad)
popf
jae
lea
push
sbb
sub
ss
imul
push
js
(bad)
cld
push
or
mov
stc
sbb
imul
mov
mov
scas
xor
enter
dec
jg
(bad)
mov
ror
loop
push
sbb
pushf
mov
pop
xlat
mov
mov
pop
push
aam
xor
mov
in
and
cmps
xchg
pop
push
ds
fs
xor
jmp
mov
outs
xor
and
test
cli
dec
jnp
jl
xchg
es
push
add
test
imul
pop
push
mov
mov
into
out
imul
rcl
lahf
es
test
jbe
fcmovnu
pop
inc
sti
xor
pop
add
in
inc
inc
fmul
out
sub
dec
imul
push
fldz
stc
ds
daa
pop
hlt
cmps
pop
xor
gs
mov
pop
jnp
push
into
jle
loope
in
es
pop
outs
std
pop
push
les
mov
out
imul
push
out
int
lea
sbb
mov
(bad)
pop
dec
movs
dec
mov
addr16
jno
sbb
lock
xchg
rcr
mov
pop
aaa
mov
cdq
ficom
inc
movs
bound
inc
add
jge
cs
outs
xchg
or
cmps
ja
or
sti
sbb
div
dec
neg
jl
mov
inc
in
fstp
adc
xchg
outs
pusha
mov
je
in
xchg
or
ds
xchg
cmps
push
ror
xor
dec
fmul
push
js
sbb
and
pusha
mov
or
ret
movs
mov
mov
aad
pusha
arpl
jp
mov
in
data16
lock
and
adc
hlt
sub
dec
and
jp
icebp
not
xor
mov
or
xchg
xor
cmps
add
inc
cmp
stos
punpcklwd
pop
nop
adc
sub
jae
jle
dec
movs
push
or
(bad)
jecxz
outs
dec
leave
mov
mov
pop
push
test
int3
sti
(bad)
pop
and
inc
mov
adc
iret
or
push
aam
dec
shl
push
jns
data16
sub
cbw
and
xor
pop
jmp
lods
mov
add
and
out
hlt
in
mov
sub
xor
push
or
int
jb
stos
aam
mov
addr16
retf
jns
in
inc
test
inc
gs
inc
sbb
sub
push
ss
mov
pop
xchg
outs
xchg
jmp
fs
not
stc
cmp
xlat
cmp
add
xor
xchg
sub
cmps
movs
jne
lods
test
lods
jg
test
or
inc
leave
popa
outs
mov
or
test
in
aad
sub
push
pop
sbb
lahf
(bad)
stc
mov
dec
xchg
inc
mov
lahf
jl
test
stc
add
(bad)
and
pop
push
lods
out
gs
ret
les
inc
popa
stos
cli
rcl
sbb
jae
dec
imul
fs
stc
xchg
sbb
rcl
imul
push
loop
jno
or
arpl
out
call
sbb
mov
inc
xor
xchg
mov
mov
das
unpckhps
sbb
fst
aaa
pop
mov
jne
test
cmp
xor
sub
jg
inc
loopne
(bad)
es
and
out
outs
pusha
mov
(bad)
push
(bad)
add
jl
rcr
inc
shr
add
jmp
push
in
mov
mov
fmul
sbb
mov
sar
mov
stc
mov
push
stc
cmps
jle
jbe
mov
cmp
jne
sbb
adc
sbb
cld
jno
mov
sbb
push
xchg
or
mov
shl
mov
mov
sahf
push
inc
pop
popa
inc
cs
cmp
add
jl
imul
and
ror
sub
pop
out
pop
into
loopne
(bad)
cmc
xchg
sbb
mov
inc
pop
int3
and
pop
jb
call
iret
adc
dec
call
call
lods
cs
push
out
leave
push
cmp
clc
retf
movs
pop
pop
loope
ret
pop
push
cmps
pop
ror
push
push
mov
shl
xchg
js
cld
icebp
icebp
push
in
icebp
add
sub
dec
ins
daa
retf
out
mov
mov
add
xchg
lds
clc
jp
stos
fld
ror
mov
ins
xor
test
out
aam
ret
cmpxchg
lock
scas
cmp
push
popf
dec
pop
(bad)
int3
js
sub
and
jmpw
or
xchg
(bad)
xor
jge
cmp
cmp
xlat
sbb
xchg
test
add
jle
cmp
push
sti
pop
mov
add
push
loop
dec
loopne
pop
sbb
cmp
jmp
repz
mov
int3
fstp
jmp
aaa
mov
sbb
xor
pop
data16
xchg
pusha
and
imul
xor
adc
std
fwait
or
inc
xchg
loop
mov
retf
in
jne
arpl
xchg
add
cmp
dec
mov
cmp
rol
sbb
fbstp
dec
jns
or
mov
fdivr
imul
stc
xchg
arpl
jl
push
inc
scas
popa
jnp
test
and
dec
outs
pop
mov
test
sbb
or
stos
add
jecxz
movs
ret
bound
xor
adc
mov
ret
in
push
call
mov
shl
call
call
inc
push
dec
sub
adc
mov
arpl
and
iret
adc
daa
and
sahf
pop
sbb
push
pop
fsub
mov
in
and
lods
fmul
sub
clc
ins
shl
(bad)
sub
out
in
cdq
add
(bad)
out
adc
int3
cmps
jge
jmp
popf
cmps
or
ins
idiv
arpl
xchg
jno
xchg
aad
paddd
dec
ss
or
push
sub
and
inc
mov
scas
xor
mov
jb
ror
pop
aaa
ins
fistp
push
inc
adc
test
pusha
in
jp
sar
fmul
cmps
paddsw
js
mov
pop
jl
jp
inc
out
inc
dec
mov
out
and
mov
mov
cs
jcxz
adc
call
xchg
push
push
aad
cmps
sbb
leave
retf
imul
mov
movs
push
fadd
cmp
jmp
xchg
xchg
cs
dec
pop
adc
inc
sub
aas
in
gs
add
sub
sbb
mov
pop
mov
pop
pminub
vaddsubps
loopne
jecxz
das
dec
retf
rcr
jns
ret
pop
das
fld
inc
and
pop
adc
out
jns
inc
das
into
stos
jl
pop
iret
mov
mov
xchg
add
aad
retf
mov
push
mov
mov
cmp
xor
push
add
dec
lods
jbe
pop
inc
jne
mov
pop
lds
dec
(bad)
jl
fwait
call
xchg
inc
xchg
repz
cmp
sbb
xchg
popf
pop
test
les
(bad)
pop
call
into
sbb
je
test
enter
fnstcw
pusha
push
or
and
sbb
test
jl
push
stc
pop
jbe
xor
mov
mov
or
sbb
arpl
mov
jmp
and
inc
iret
add
or
fnstsw
and
add
(bad)
hlt
jns
daa
push
int3
in
and
xchg
adc
cmps
sub
(bad)
lods
or
dec
ja
outs
lock
xchg
or
inc
mov
sbb
xor
(bad)
inc
jge
cwde
shr
adc
jae
cmp
sar
and
je
gs
sti
std
mov
fisttp
add
imul
leave
fbld
xor
dec
(bad)
into
lahf
les
xchg
data16
fst
mov
ret
call
push
mov
jnp
inc
adc
xor
and
psubd
mul
in
dec
cmp
mov
mov
inc
and
push
into
cmps
pop
mov
pop
mov
adc
mov
jne
fwait
lahf
and
cmps
nop
mov
add
bnd
pusha
outs
shr
ins
das
retf
sbb
cmp
rol
mov
inc
and
mov
daa
sbb
jecxz
cld
xchg
pop
mov
mov
add
sti
inc
dec
fs
mov
add
or
push
inc
mov
push
inc
cmp
out
loop
jo
inc
js
ins
inc
iret
cdq
not
ds
xchg
and
jle
in
add
xlat
sahf
push
sbb
xor
outs
in
pushf
adc
xor
adc
jne
lods
inc
jo
cmp
out
mov
mov
stos
dec
ss
call
push
inc
xchg
jnp
or
je
jmp
mov
inc
xor
jp
popa
je
xor
test
inc
mov
pop
aas
push
nop
pushf
mov
push
and
mov
adc
ja
(bad)
rol
cmp
push
cwde
or
outs
cs
ins
dec
mov
pop
std
imul
test
xchg
pop
ins
imul
and
shl
mov
or
sbb
sub
addr16
cmp
push
out
pop
call
outs
cmp
jnp
stos
add
push
inc
loopne
pop
cmp
fwait
jg
bound
push
xor
(bad)
cmps
dec
jo
jl
inc
push
mov
jmp
inc
add
fstp
es
jg
in
(bad)
pop
dec
fimul
xor
jae
xchg
lahf
ror
js
jle
pop
xlat
pop
pop
adc
cvtps2pi
mov
gs
out
in
ficomp
push
ret
sbb
jns
push
data16
mov
call
shl
xor
test
push
xchg
dec
out
jge
fsubr
cmps
(bad)
xchg
fsub
add
mov
aas
sbb
pop
mov
cmp
inc
push
lea
add
jb
mov
es
mov
adc
outs
mov
(bad)
sahf
push
ret
out
mov
call
sbb
jmp
std
inc
int3
add
mov
je
jmp
in
dec
pusha
add
bound
add
dec
and
pop
cld
(bad)
xor
rcl
mov
mov
retf
scas
std
or
shl
jo
fadd
mov
loope
cmp
jb
out
repnz
stc
xchg
outs
inc
loop
ds
arpl
pop
nop
sbb
cld
repnz
pop
dec
push
mov
std
arpl
and
pop
loope
add
and
dec
pop
push
add
scas
xchg
sbb
pop
xchg
jnp
sbb
cmp
and
and
loop
int
or
icebp
nop
or
xchg
test
xchg
call
retf
ins
push
mov
fadd
retf
pop
mov
fadd
ins
js
mov
add
inc
jno
sbb
sub
fwait
ss
dec
push
(bad)
(bad)
xchg
mov
ins
adc
fwait
sbb
sbb
dec
jbe
shl
icebp
repnz
mov
pop
pusha
add
stos
add
mov
or
dec
or
mov
pusha
jb
mov
sbb
test
aaa
lods
ds
popf
stc
clc
call
les
inc
sbb
test
or
xchg
cs
dec
loopne
mov
call
mov
aaa
stc
mov
pop
out
data16
fucomip
cmp
ret
mov
jb
jp
sbb
aaa
repz
mov
adc
inc
test
in
pop
push
adc
xor
jecxz
scas
sbb
(bad)
mov
inc
cwde
imul
xlat
pop
xchg
retf
pop
out
mov
push
lds
or
mov
outs
cmp
push
in
icebp
or
push
das
int3
ret
push
and
ss
ins
das
push
and
int
enter
in
idiv
ret
mov
lds
repnz
jb
les
ret
pop
pop
sar
clc
and
and
repz
cmp
and
or
aad
cmp
add
mov
mov
call
fwait
xchg
(bad)
out
icebp
pop
sub
daa
push
cmp
jmp
xor
sbb
mov
outs
shl
movs
ficom
ins
hlt
pop
push
pusha
adc
push
pop
mul
jb
(bad)
loop
repz
mov
icebp
loope
jmp
jg
jne
dec
mov
pop
lea
inc
adc
retf
in
adc
xchg
mov
retf
test
mov
inc
imul
iret
adc
(bad)
int3
mov
sub
sub
hlt
jmp
ja
jl
jg
xor
mov
mov
lods
pop
mov
jo
cwde
mov
out
retf
inc
ret
cmc
dec
test
lea
push
test
push
pop
inc
pusha
fadd
mov
cdq
cmp
mov
nop
cdq
jge
xor
arpl
shl
xchg
bound
(bad)
jle
push
sub
in
out
movs
int3
xor
inc
mov
cs
cmps
das
jp
jle
jp
sub
rcl
push
out
pop
movs
add
ss
ins
rcr
push
daa
mov
aad
add
es
xor
cmc
cli
out
leave
adc
lahf
add
data16
mul
pop
jge
adc
dec
mov
retf
ss
mov
mov
or
mov
pop
or
loop
sub
test
mov
mov
ins
jg
xchg
leave
dec
add
jl
daa
inc
lock
inc
retf
icebp
in
test
xchg
aas
mov
push
add
or
addr16
cmp
sub
idiv
fwait
push
pop
sub
(bad)
push
mov
retf
popa
loopne
jns
xchg
test
ret
fbstp
push
sar
cmp
inc
lds
js
cmp
(bad)
sahf
movs
jb
clc
fstp
js
xchg
ret
sbb
lds
test
stos
mov
stos
xor
fld
ret
jns
cmp
popf
int
or
dec
xor
sub
pop
push
call
mov
movs
pop
loop
xchg
popf
mov
dec
test
pop
push
mov
aas
mov
fnstcw
stos
pop
(bad)
pop
pusha
xchg
dec
and
cwde
mov
adc
mov
mov
xor
xor
retf
sub
nop
jnp
das
sbb
arpl
sbb
and
and
xchg
sti
and
in
test
push
xchg
aas
pop
in
nop
or
jno
mov
ret
ja
out
xlat
add
push
popa
stc
in
xchg
gs
cld
test
xchg
jne
sub
mov
and
les
fist
adc
xor
into
push
rcl
add
fimul
cmp
mov
jns
mov
not
mov
mov
jns
or
mov
jp
xor
pusha
int3
aad
scas
test
jmp
int3
add
and
fdiv
js
arpl
dec
jp
sbb
push
mov
push
mov
jge
imul
out
test
test
cmps
(bad)
ffree
sahf
inc
sbb
scas
dec
jae
mov
mov
div
jl
(bad)
sbb
and
xchg
out
jge
imul
push
and
mov
mov
jmp
sbb
xor
shl
dec
fcmovnu
cmp
xchg
jbe
call
cdq
xchg
dec
xor
add
mov
das
int3
stos
scas
test
pop
sbb
(bad)
fcom
shr
ror
shl
xor
adc
inc
pushf
inc
scas
mov
inc
dec
xor
loope
ficom
push
out
jp
fadd
sub
mov
mov
mov
jg
(bad)
jno
adc
movs
stc
dec
out
pop
add
dec
push
mov
ja
fisttp
ins
pushf
inc
pusha
jbe
pop
pop
jle
add
jne
adc
ss
mov
mov
jge
sbb
or
(bad)
jne
push
push
imul
out
pop
cmp
inc
fsub
adc
clc
cmp
test
ds
aaa
cmp
test
aaa
rcl
aas
imul
xchg
jge
mov
push
shl
adc
enter
or
inc
push
cld
or
sahf
or
pop
jbe
pop
fdivp
lahf
dec
mov
dec
mov
pop
add
dec
or
je
add
ins
mov
cmp
mov
enter
pop
xor
pusha
mov
stc
fistp
fwait
neg
sub
repz
add
sbb
bound
gs
(bad)
dec
cli
iret
iret
jmp
pop
or
dec
test
leave
xchg
outs
pop
inc
fs
das
mov
cmps
jmp
lods
cmp
js
mov
and
inc
add
out
ins
dec
test
loopne
movs
pop
pop
sbb
scas
jg
xor
sbb
ret
and
daa
xchg
xchg
xlat
add
sub
mov
daa
adc
dec
lahf
(bad)
fsubr
sbb
xchg
les
mov
cmp
adc
int3
sub
mov
jle
arpl
jbe
(bad)
cld
push
fist
mov
mov
dec
mov
test
iret
inc
gs
test
pop
push
cmp
stos
retf
jno
sbb
fisttp
mov
and
xor
out
mov
cmp
test
sar
(bad)
push
jle
jb
fcom
je
mov
jecxz
pop
push
loope
shl
es
mov
dec
popa
sub
(bad)
xchg
inc
jmp
pusha
repnz
cmp
sahf
mov
xchg
out
shl
add
xor
dec
or
xchg
sub
in
enter
cmps
xor
sub
mov
mov
ins
fadd
mov
ins
in
mov
mov
call
cmp
sbb
retf
xchg
mov
push
sub
and
movs
adc
fucom
or
arpl
push
dec
push
pop
pop
pop
fidiv
lock
fcomp
jp
push
sar
add
sahf
addr16
add
ja
or
lock
sbb
stos
jmp
xchg
scas
xchg
push
(bad)
mov
dec
jo
mov
pop
cs
ds
sub
push
xor
cmp
jae
sbb
jo
lock
adc
and
push
mov
lds
or
xor
cmc
push
jl
pop
les
imul
in
icebp
lock
and
cdq
xchg
shr
cmp
or
jno
lods
(bad)
fisub
out
dec
xor
add
out
add
pusha
cmp
dec
cmc
iret
add
stos
imul
mov
cmp
(bad)
sbb
(bad)
inc
(bad)
outs
jle
mov
jns
pop
and
cli
clc
ror
adc
sub
sbb
or
ret
fist
dec
pop
pop
cmps
push
call
inc
mov
dec
jecxz
mov
mov
or
add
mov
push
sub
shl
xor
cmps
sub
push
imul
aam
movs
add
cmp
test
xchg
push
test
pop
cmps
(bad)
jle
call
or
mov
jle
xor
int
loop
sub
arpl
and
sbb
inc
call
ja
and
mov
scas
(bad)
jecxz
fcomp
les
or
arpl
aas
int3
inc
adc
mov
in
dec
ins
mov
inc
push
mov
arpl
daa
(bad)
xor
dec
pop
inc
ret
pop
rcr
cmp
inc
arpl
les
sub
dec
xchg
mov
sbb
pop
dec
pop
sbb
fwait
pop
sar
test
lds
xlat
sub
call
xchg
(bad)
lods
sub
into
enter
in
jbe
dec
fnstenv
xchg
adc
push
rcr
test
jae
cmps
and
adc
jmp
sbb
icebp
std
mov
lahf
push
movs
inc
fidivr
call
sti
std
pop
adc
icebp
dec
or
mov
xchg
and
cld
ret
sub
jmp
ja
out
fwait
inc
jb
dec
cs
dec
hlt
cmps
inc
in
sbb
test
add
pop
push
fcom
lahf
fisub
shl
add
stos
sbb
fnsave
xor
lods
out
loop
xchg
push
and
scas
ds
ror
(bad)
xor
push
jb
dec
pop
push
and
adc
inc
pop
adc
cmp
loope
push
jg
pop
adc
in
daa
xor
lods
popa
jle
fistp
jne
call
loopne
mov
outs
push
ficom
mov
mov
rol
mov
and
inc
pop
out
xor
mov
ds
call
sbb
pop
inc
test
xchg
pop
adc
icebp
jl
loop
sbb
adc
push
clc
frstor
xchg
in
pusha
mov
les
lods
jo
cmp
pop
xrelease
dec
inc
push
mov
cmps
dec
fnsave
cmp
jecxz
sbb
adc
rcl
and
and
pop
push
cs
mov
(bad)
fadd
mov
mov
out
in
addr16
sub
and
pop
inc
xor
and
mov
mov
repnz
push
data16
jecxz
lahf
pop
out
out
dec
lods
cmp
out
cmps
and
sub
call
cld
mov
add
xchg
in
(bad)
sti
lock
aaa
mov
push
retf
retf
sbb
mov
or
lds
mov
out
pusha
ficom
fwait
xlat
popa
jmp
adc
lock
push
add
push
in
jecxz
inc
sbb
ja
repnz
imul
sbb
push
or
dec
jg
and
cmps
mov
cmp
mov
or
repnz
jns
rcl
xchg
dec
pop
xchg
xor
jg
cmp
xlat
jp
cwde
push
and
xchg
jbe
scas
jbe
push
push
ror
dec
sbb
les
bound
mov
shl
mov
mov
int3
mov
dec
jae
cwde
neg
sti
or
push
jbe
icebp
outs
outs
cdq
sub
push
out
test
arpl
rcl
pop
retf
xchg
nop
(bad)
out
or
std
lds
call
sub
mov
das
cld
out
cmp
imul
test
sub
dec
rcr
inc
gs
pop
fcomp
mov
scas
fisub
cmc
fld
enter
pop
inc
(bad)
fucomp
add
scas
and
cmps
xor
pop
mov
cmp
lods
mov
sbb
xchg
or
test
jns
mov
test
sbb
iret
das
mov
(bad)
jg
scas
call
enter
shr
sbb
ror
dec
mov
call
arpl
add
les
sahf
pop
adc
adc
push
aad
idiv
jb
mov
retf
fcmovbe
or
dec
dec
shl
stc
clc
sar
out
arpl
mov
bound
mov
mov
xchg
ror
jno
fdiv
mov
push
mov
sbb
xlat
xchg
shl
xor
or
push
fnstsw
mov
popf
adc
(bad)
leave
push
jmp
imul
leave
xchg
sbb
std
imul
pop
pusha
or
mov
push
repnz
inc
out
jns
and
cs
test
or
lods
pushf
add
pop
je
call
adc
push
dec
cmp
pop
mov
clc
shld
sub
out
mov
jb
(bad)
outs
sbb
xchg
xchg
cmp
push
inc
dec
push
and
push
mov
and
cli
sti
ins
or
push
repz
outs
mov
lock
jb
das
or
popa
pop
popf
sbb
jno
aad
sbb
in
jo
outs
push
push
neg
fcmovu
ret
add
dec
mov
sahf
pop
push
aam
xor
je
inc
inc
jl
loope
repz
in
sub
popa
retf
cmp
mov
mov
not
adc
inc
or
push
out
lods
stos
inc
inc
lods
loop
out
repz
imul
jno
cmp
push
push
pop
cmp
test
mov
inc
cwde
push
dec
jne
fwait
loopne
inc
add
enter
movs
dec
cli
test
sub
adc
sbb
int3
(bad)
pop
shr
mov
push
nop
cmps
ins
sbb
xor
add
mov
or
aam
dec
lods
cmps
sub
icebp
or
push
sbb
and
push
cdq
adc
sub
xor
xor
ret
andps
xchg
hlt
xchg
lock
pop
push
aam
ins
or
and
stos
add
leave
xchg
gs
sbb
aad
mov
loopne
in
adc
mov
cmc
add
cmp
mov
les
push
pop
dec
fs
push
movlps
arpl
and
out
ja
pop
mov
stc
shr
push
xlat
pushf
ins
cld
inc
retf
imul
mov
sbb
popa
repz
lea
pop
hlt
cmp
mov
call
xchg
ss
imul
add
or
es
repnz
addr16
mov
mov
ror
jg
movs
mov
or
(bad)
mov
xor
mov
xor
ds
mov
pop
in
dec
in
xor
xlat
aas
pop
int3
cmp
cdq
inc
mov
pop
cmp
loopne
shr
imul
int
add
xchg
sub
adc
rcr
aam
std
dec
repz
test
mov
or
adc
add
xor
or
sbb
push
sub
jecxz
jp
sbb
or
enter
sub
cmps
scas
jnp
and
pop
mov
outs
js
push
cmp
sub
cmp
pop
loop
mov
jae
jle
push
shl
sar
xchg
fdivr
jecxz
ins
sbb
aam
and
scas
jecxz
int3
imul
pop
popf
ins
sar
mov
std
pop
ins
mov
xor
mov
and
adc
rol
aas
pop
pop
mov
mov
ss
sbb
adc
outs
in
pop
jne
dec
lods
out
mov
adc
loopne
in
sbb
lds
inc
mov
adc
add
mov
xchg
rcr
cmp
aam
cdq
mov
shr
sub
fisttp
and
pusha
pop
or
jmp
aas
loop
mov
sub
or
cli
(bad)
ffreep
outs
mov
shr
jl
dec
fisttp
repz
es
rcl
mov
loopne
ds
xchg
adc
cmp
shl
das
ins
and
jno
adc
sub
sbb
iret
or
and
mov
jle
gs
repnz
dec
push
or
cmps
mov
sub
pop
jmp
jg
xor
jecxz
enter
ret
lods
push
xor
add
sar
(bad)
inc
loop
jmp
test
ret
mov
jge
sub
cmp
or
cmps
mov
push
sub
fstp
movs
push
jo
xchg
cmps
inc
or
mov
iret
inc
dec
push
add
mov
add
sbb
pop
cmp
scas
and
sub
jl
adc
or
cmp
bound
xchg
jmp
add
dec
js
or
mov
jns
sar
fnstenv
cmp
mov
cmp
aam
mov
lea
push
test
test
adc
cmps
(bad)
push
rcl
sbb
loope
and
stc
push
adc
or
jp
into
and
loope
addr16
cwde
test
dec
in
inc
shl
sub
fist
fcmove
test
dec
mov
mov
pop
out
scas
dec
dec
jno
or
mov
lods
xlat
es
mov
sbb
jp
in
or
lock
cmc
dec
jo
imul
jb
bnd
arpl
or
and
in
hlt
mov
cs
ja
pop
adc
repz
cmp
mov
je
add
inc
adc
movs
inc
sbb
(bad)
jmp
and
adc
repz
jecxz
and
add
bnd
mov
sub
cld
jne
and
mov
jns
pop
mov
gs
jnp
mov
loop
in
int
adc
enter
jmp
js
lahf
int
jmp
sar
icebp
imul
sub
sti
(bad)
xlat
ds
rol
iret
sub
mov
cmp
xor
mov
mul
jns
add
movs
push
add
(bad)
enter
xchg
jmp
mov
mov
mov
jne
jge
pop
std
push
ja
jbe
cld
cmps
add
or
and
loopne
lds
inc
lods
dec
xor
jne
pusha
and
jns
sbb
pop
sub
push
cmp
cmc
test
sbb
mov
aam
dec
push
daa
push
cdq
jo
imul
xor
outs
into
clc
sub
in
adc
sub
push
sub
neg
scas
js
jae
mul
repnz
arpl
popf
inc
loop
in
cmc
xor
sbb
mov
jbe
xor
cmps
cmps
inc
sbb
scas
xor
sahf
inc
or
mov
add
or
pop
out
out
push
jmp
nop
leave
loop
sbb
pop
cld
mov
popf
test
adc
push
cmp
mov
(bad)
fsubr
xor
ret
dec
cdq
dec
daa
ins
and
jl
dec
sahf
sbb
outs
mov
jns
sbb
pop
aas
cmp
lods
mov
shl
add
cli
sub
enter
fs
cmp
add
gs
bound
inc
and
add
out
add
sahf
mov
mov
jae
retf
sbb
(bad)
int3
leave
rol
mov
(bad)
and
mov
or
push
jns
(bad)
or
sbb
dec
gs
leave
mov
dec
mov
pop
and
dec
push
mov
dec
pusha
cmps
jmp
lods
cmp
rol
cmp
(bad)
xchg
test
and
movs
and
aad
(bad)
in
pop
mov
hlt
rcr
pushf
movs
sti
imul
into
mov
(bad)
in
out
dec
popa
pop
int
ja
int
das
adc
and
lods
mov
pop
jb
mov
lahf
inc
mov
sbb
in
xchg
adc
adc
dec
scas
ins
icebp
jb
fld
and
(bad)
ret
jb
inc
cmp
test
js
in
imul
in
jb
pusha
or
xor
lock
xchg
cmc
mov
shl
aas
fxch
cmp
jmp
or
adc
scas
mov
stc
cmp
xchg
or
cmp
das
pslld
(bad)
scas
sub
jns
xlat
es
stos
jmp
clc
mov
mov
jne
imul
jmp
cmps
ror
push
fsubrp
aas
or
lods
in
mov
shr
jbe
dec
sbb
imul
add
(bad)
out
lds
(bad)
aad
cld
enter
cmp
xchg
cmp
or
imul
push
shl
rol
std
fild
loope
jbe
cmp
jae
(bad)
jns
sub
stc
imul
loop
scas
in
mov
das
sbb
inc
adc
test
jmp
mov
xchg
jb
push
nop
cmp
faddp
inc
xchg
stos
stc
xor
repnz
repz
repnz
inc
test
dec
leave
sub
cmp
xor
fnstsw
pop
add
jae
pop
inc
push
jae
xchg
mov
outs
adc
in
stos
or
push
fcom
std
mov
mov
inc
mov
sbb
es
inc
js
xor
dec
cmp
mov
in
loop
test
jg
inc
mov
and
and
pop
lahf
push
clc
lods
sbb
cld
sbb
(bad)
cmp
mov
lahf
jl
ss
cmp
push
sub
mov
pop
movs
mov
mov
(bad)
mov
mov
stos
dec
iret
rcl
mul
xor
in
rol
enter
or
mov
pop
sbb
mov
sub
outs
fdivr
(bad)
lods
je
adc
sub
(bad)
adc
rcl
fst
sbb
mov
cld
inc
pcmpeqd
neg
pop
push
xchg
divps
cwde
aad
gs
or
jl
push
add
lea
test
std
push
cmps
adc
sbb
jns
adc
push
fisubr
lock
xchg
xchg
rcl
repnz
sub
sahf
xor
pusha
cld
xchg
lods
and
jno
inc
jle
add
mov
pusha
and
add
scas
ret
ret
sbb
in
add
and
scas
arpl
fist
mov
inc
jl
mov
sub
sbb
imul
mov
mov
dec
fisttp
xchg
mov
push
add
call
ds
lds
xor
stc
push
sub
scas
push
enter
movs
lea
mov
ins
mov
sbb
or
add
in
out
cmp
pop
mov
sti
dec
fld
and
xchg
xchg
pop
repz
enter
mov
fldcw
movs
mov
jno
popa
(bad)
sbb
push
push
xor
in
xchg
sub
jne
test
daa
push
push
and
ins
sbb
push
add
xor
data16
sti
mov
(bad)
cmp
jbe
lods
inc
js
fstp
pop
add
(bad)
sub
cwde
lds
push
fidivr
mov
in
dec
int3
add
leave
leave
lahf
mov
sbb
sbb
pushf
push
test
inc
jg
mov
cs
call
inc
cmp
xchg
xor
dec
jg
jp
dec
lock
and
out
setnp
sbb
xchg
inc
(bad)
repz
out
in
ret
icebp
test
enter
mov
xchg
repnz
xor
popf
int
jg
push
(bad)
int3
and
dec
push
shr
push
enter
sub
daa
mov
ret
sub
pop
dec
ins
loope
mov
jb
pushf
dec
sbb
enter
adc
packsswb
add
cmp
sub
inc
sahf
lds
(bad)
xor
out
(bad)
pop
fstp
cmp
es
data16
imul
test
fcom
ret
mov
outs
jno
push
dec
or
pop
not
popa
call
cs
hlt
mov
ret
sbb
push
inc
or
jns
aaa
sbb
mov
cs
into
je
lahf
inc
sbb
stc
dec
mov
adc
xor
repnz
push
cwde
xor
jno
stos
cs
pop
jae
pop
(bad)
mov
ret
pop
cld
dec
add
adc
fcom
lea
ret
and
mov
(bad)
cmp
mov
xlat
xchg
(bad)
bound
xchg
dec
popf
sbb
(bad)
les
cmp
test
push
enter
xor
ins
repz
out
jno
xlat
mov
xor
arpl
mov
pop
fcmovu
(bad)
and
dec
adc
aam
icebp
dec
outs
xchg
retf
cmp
in
mov
mov
push
jmp
xchg
xor
xor
sar
mov
dec
push
push
daa
push
ret
dec
and
popa
sbb
iret
and
iret
xor
mov
es
out
bound
push
jl
dec
jmp
mov
pusha
test
sti
mov
movs
xchg
call
call
sar
xchg
lods
ficomp
ret
cmp
adc
jecxz
shr
xor
cmps
ror
jo
push
sub
mov
std
xor
fistp
ds
xor
xchg
mov
mov
add
mov
pop
mov
sub
xor
shr
gs
stos
inc
loop
pusha
fimul
mov
lds
std
repnz
sbb
pop
arpl
inc
pushf
test
mov
xor
fld
sbb
and
xchg
iret
adc
int
int
and
icebp
outs
push
inc
imul
lds
out
shl
std
repz
xor
dec
out
call
inc
jno
adc
ins
sbb
cmp
stos
mov
jge
sbb
mov
ja
sub
sub
mov
sbb
cmp
mov
adc
xor
cs
movs
lods
dec
stos
sub
cld
jp
add
div
pop
xlat
sbb
dec
das
xchg
sar
lock
ss
arpl
ds
fwait
dec
sub
pop
sti
mov
ror
lea
mov
mov
jmp
test
or
mov
clc
push
add
jle
add
pop
push
and
stc
fiadd
inc
add
inc
mov
sub
mov
cmps
cmp
inc
test
addr16
leave
xchg
push
fnstsw
sub
or
in
jnp
stos
add
fcompp
cmps
and
outs
and
xchg
mov
or
hlt
imul
adc
int3
xchg
pop
pop
sub
sti
test
sti
addr16
ds
ss
jns
cmps
sub
push
push
pop
mov
mov
push
lods
movs
add
out
fild
cmp
shl
cmp
sub
mov
aaa
fiadd
loop
jmp
inc
loopne
loope
pop
retf
jmp
stc
sbb
les
jns
jb
in
xor
inc
xchg
jge
cmp
mov
cmp
mov
xchg
push
aas
fsubr
jg
aad
bound
and
test
xor
jmp
mov
repnz
or
xchg
pushf
ja
fs
mov
cmps
sbb
aaa
dec
jae
ins
push
push
cmp
in
gs
push
outs
mov
les
add
fist
call
and
mov
ret
add
mov
pop
stc
sub
xlat
or
mov
shl
test
mov
outs
shl
xor
xor
sub
dec
cwde
mov
mov
sti
dec
mov
cli
das
sbb
lock
adc
pop
jmp
add
xchg
inc
mov
ror
push
imul
mov
mov
mov
imul
jmp
jns
jmp
sbb
shl
xchg
les
in
adc
into
or
mov
and
or
out
pushf
imul
leave
push
push
fwait
cli
adc
pop
retf
pop
mov
call
sub
add
(bad)
mov
cdq
sub
dec
push
push
mov
xchg
and
xchg
push
pop
mov
jg
hlt
jl
fst
inc
mov
jl
loope
fdivr
and
in
je
mov
sbb
xchg
aas
sbb
and
aam
das
fld
test
lahf
and
adc
jmp
jecxz
test
dec
int
mov
loopne
ror
aaa
pop
jne
clc
push
std
test
and
ficomp
fist
dec
shr
add
jg
or
fisttp
sbb
pop
cmp
inc
inc
add
leave
gs
add
xor
cli
mov
ret
pusha
jmp
adc
mov
sbb
stos
inc
push
pop
mul
push
xor
add
sub
js
dec
jns
xor
aad
xor
jmp
fadd
mov
pop
push
mov
or
(bad)
sub
add
fcomp
xor
dec
mov
nop
retf
add
mov
xor
fs
(bad)
lods
jo
fdivr
repz
div
jo
jp
aad
cmp
pop
in
repz
adc
inc
sti
fidivr
and
(bad)
jns
pop
mov
in
fs
pop
add
loope
xchg
leave
jmp
lock
sti
(bad)
mov
je
aas
adc
rol
jb
xchg
inc
mov
or
mov
(bad)
fsub
jle
ja
sbb
das
pop
in
push
mov
dec
mov
and
in
leave
mov
rep
scas
push
ss
repnz
pushf
push
mov
or
push
ins
push
xor
shl
int3
rcl
jo
adc
push
and
and
cmp
std
dec
xor
mov
or
cwde
stos
in
rol
inc
outs
jg
sub
(bad)
hlt
xor
movs
sbb
lock
inc
jl
loope
pop
or
es
jl
pop
sub
call
or
add
xchg
jl
(bad)
out
(bad)
cmp
jns
add
sahf
dec
pop
call
retf
inc
push
xchg
std
pop
fdivr
das
sbb
std
dec
inc
or
in
mov
pop
stos
sar
ins
push
je
sbb
cmp
fcom
or
aaa
test
ins
inc
cmp
or
lock
cld
xor
inc
test
inc
sbb
cld
xchg
mov
dec
js
and
jg
push
xchg
test
pop
mov
add
pop
cmps
stos
or
call
cdq
inc
leave
or
fsubr
push
pop
inc
adc
cwde
imul
movs
inc
loop
dec
fnstenv
mov
repnz
jno
aas
mov
jle
adc
add
dec
jmp
adc
inc
arpl
sub
sti
xchg
inc
adc
lahf
and
dec
movs
mov
dec
mov
stc
xchg
add
lock
adc
shl
xchg
or
inc
xchg
jle
jb
out
push
repz
mov
fs
xchg
mov
fs
adc
int3
retf
icebp
dec
add
fwait
not
loopne
(bad)
cwde
out
pusha
ret
adc
repz
sbb
push
pop
push
pop
pop
jno
mov
call
in
jecxz
and
cdq
push
mov
xor
jle
jecxz
cmp
jo
and
pushf
jmp
push
jp
push
das
sub
jno
add
(bad)
fdiv
rol
fistp
sub
mov
and
push
mov
lods
gs
push
mov
lds
mov
mov
and
adc
ja
cs
jmp
cli
arpl
mov
lock
aaa
daa
dec
jp
mov
ficom
xchg
mov
iret
dec
xor
xor
repz
inc
mov
or
imul
jge
repnz
xchg
xor
loope
pop
xchg
cwde
in
rcl
mov
cmps
mov
int3
std
aad
test
dec
sub
sar
daa
pop
ret
jl
cmp
inc
retf
leave
add
sub
jg
push
out
lds
or
cli
cmps
and
xor
daa
sahf
xchg
mov
rol
jmp
dec
(bad)
mov
dec
cmps
das
mov
xor
lea
cli
fwait
rcl
movs
jecxz
popf
jl
fadd
daa
stc
mov
fimul
mov
sub
add
mov
cmp
test
sub
sbb
cdq
sub
cs
lds
sub
jl
out
push
lahf
out
pop
push
push
mov
shl
add
cmp
stc
icebp
aaa
pop
add
lods
outs
cmp
mov
icebp
or
test
ins
retf
fsubr
adc
pushf
push
pop
pushf
jnp
mov
ror
int3
mov
test
xchg
dec
pop
mov
pop
inc
test
adc
test
push
mov
jae
lea
add
fmulp
push
ret
sub
mov
test
push
pop
out
test
test
fcom
jp
addr16
ret
push
xchg
ret
xchg
nop
mov
js
(bad)
les
cld
imul
sbb
or
sub
mov
jmp
ror
fdivr
shr
arpl
sub
pop
in
enter
aas
iret
inc
repnz
inc
xor
bound
xor
imul
dec
jnp
jo
and
aaa
mov
cmps
in
ja
or
mov
xchg
xor
sti
stc
cmps
inc
hlt
add
pop
js
or
jbe
retf
lock
in
xchg
push
cs
data16
jbe
in
mov
ret
jle
lods
push
aam
mov
xor
aaa
and
cmps
push
imul
fmul
add
push
ficom
jp
sbb
and
xlat
pop
es
cwde
dec
xor
mov
shl
js
and
push
(bad)
and
pusha
and
pop
lock
(bad)
sbb
rcr
ss
es
cmps
pushf
stos
pop
int3
push
cmp
adc
xor
popa
push
add
ins
and
movs
mov
out
mov
and
shr
fdivrp
inc
add
loope
jns
mov
mov
mov
xor
or
jb
xchg
sub
loopne
push
sub
sub
push
fnstenv
not
rol
ins
adc
lods
lods
dec
jmp
add
xchg
cwde
cld
jp
mov
ds
jo
(bad)
cwde
lods
out
xor
push
jmp
hlt
test
dec
adc
ret
call
js
mov
lods
dec
rcr
addr16
push
jmp
mov
push
push
sbb
sub
out
xor
fsub
js
call
je
pop
daa
push
nop
lea
(bad)
retf
fstp
add
(bad)
sbb
mov
addr16
sub
mov
xchg
jmp
mov
push
in
jo
mov
and
and
xor
les
loop
or
and
shl
test
bound
and
shl
cs
repz
mov
ja
es
push
(bad)
and
nop
test
fldcw
div
cld
ss
out
push
daa
inc
add
sub
mov
adc
test
out
loope
(bad)
(bad)
imul
xor
out
pop
(bad)
hlt
mov
shr
mov
push
add
in
jg
jns
mov
sub
cs
mov
aad
and
shr
jecxz
mov
push
pop
ficom
iret
aaa
scas
mov
(bad)
xlat
mov
jbe
jge
and
fbstp
int3
popa
dec
test
jle
xchg
aas
enter
xor
inc
add
dec
mov
dec
dec
or
(bad)
ror
push
mov
adc
cli
lds
ret
mov
jne
rcr
setl
sbb
fld
retf
mov
adc
stos
cmp
aaa
sub
cwde
xchg
mov
mov
pop
mov
scas
cmp
add
aad
push
jno
push
int3
loopne
in
dec
je
lock
push
stos
sub
in
mov
xor
mov
loope
(bad)
xchg
xchg
scas
pusha
inc
adc
int
dec
mov
mov
mov
push
lock
push
or
push
sbb
add
push
push
mov
sub
in
call
fst
fisubr
add
mov
dec
xor
mov
add
call
push
es
xchg
shl
xlat
inc
add
fistp
aad
add
daa
add
neg
outs
fs
dec
inc
(bad)
jp
jp
xor
gs
and
or
cmp
loope
fcomp
pushf
rol
push
inc
into
add
xchg
cmp
inc
push
repnz
ret
cli
jg
rol
add
ins
pusha
jns
retf
and
push
movs
pop
scas
pcmpeqb
pop
adc
cld
jmp
sahf
aas
pop
fs
or
cwde
repnz
les
sub
call
cli
icebp
jmp
inc
and
jl
jp
adc
cmp
js
add
mov
test
sbb
mov
adc
push
cmc
iret
aas
pop
jge
lds
int
dec
jl
(bad)
pop
mov
mov
test
mov
retf
cmps
pop
xchg
dec
mov
xor
ss
xor
call
jo
push
jns
daa
xor
icebp
xor
cs
sbb
xor
cmp
inc
(bad)
hlt
std
jle
push
stc
push
in
mov
inc
xor
dec
jo
bound
retf
jmp
jle
icebp
dec
call
scas
mov
inc
push
sbb
pushf
ficom
bound
mov
ficom
js
dec
std
push
jl
dec
fst
clc
imul
pop
sub
jecxz
(bad)
(bad)
shl
lea
out
push
ret
jnp
movs
cmp
adc
adc
popa
mov
cwde
dec
cmp
jns
movs
addr16
xor
pop
add
outs
xor
scas
mov
pusha
push
inc
sbb
push
or
js
add
mov
fnsave
in
jmp
mov
out
mov
mov
add
xor
cmovnp
push
test
pop
push
mov
or
popf
mov
daa
les
adc
xchg
and
pop
xchg
sub
iret
js
pop
sub
push
pusha
fist
jnp
xchg
ins
cmp
sbb
ds
movzx
sub
push
fs
cmp
dec
jecxz
and
int
lahf
fldenv
jns
sub
dec
nop
ffree
mov
test
fs
mov
or
mov
jo
add
loop
lds
jle
shl
les
(bad)
mov
sbb
dec
mov
enter
scas
sub
push
fdiv
xor
nop
les
fs
std
rol
and
retf
push
test
mov
cwde
call
(bad)
sub
int
adc
adc
icebp
mov
dec
or
mov
popf
jae
xchg
clc
rcr
push
js
imul
cwde
or
fdivr
push
(bad)
sub
sub
retf
sub
out
sbb
icebp
pushf
outs
xchg
push
gs
add
jbe
xor
dec
or
aas
xor
push
inc
push
pop
out
cmps
cmps
loope
outs
loop
daa
aam
jbe
jg
xchg
(bad)
adc
movs
cld
and
mov
lea
test
push
fdivr
arpl
inc
iret
sti
(bad)
es
addps
sar
cmp
mov
fisub
jnp
jecxz
mov
pusha
add
jle
lods
cli
(bad)
mov
and
adc
push
test
(bad)
cmc
(bad)
in
push
and
jle
add
add
mov
xchg
leave
lds
rol
push
xchg
jno
mov
cmc
enter
adc
out
and
pop
aam
leave
dec
enter
push
pop
ins
or
gs
add
push
inc
xchg
daa
mov
push
dec
cmc
(bad)
cli
enter
sbb
mov
ds
dec
out
cmp
xchg
stc
mov
cmc
fild
jnp
jmp
inc
adc
repz
mov
stc
call
jmp
ret
movs
addr16
jmp
scas
sub
movs
jle
cmps
ja
cmps
jnp
out
movs
xchg
mov
sub
stc
sub
pop
sbb
fistp
or
xchg
pusha
cmp
add
mov
pusha
sbb
popf
xchg
adc
mov
push
or
cmps
or
lds
mov
sahf
pop
xor
test
test
lahf
stos
lock
pusha
or
add
stos
jmp
mov
aam
loopne
pop
mov
lahf
lea
xchg
aam
popa
push
sub
lock
dec
call
add
pop
lods
cmp
or
mov
out
inc
sub
dec
scas
bound
iret
das
idiv
jns
jg
fadd
or
stc
and
les
fidivr
rcl
lods
xor
xlat
mov
(bad)
push
data16
icebp
popa
mov
mov
pushf
aam
jb
inc
jecxz
push
sbb
inc
test
mov
popa
in
sub
push
and
in
arpl
xor
jae
sub
xor
jecxz
jg
fist
pop
sub
shufps
jo
out
add
cmp
clc
sbb
enter
xlat
mov
pop
sbb
test
pop
cmps
js
mov
inc
repnz
mov
clc
push
xchg
sbb
jbe
in
xchg
jmp
dec
rol
hlt
retf
in
in
pop
mov
jle
mov
rol
out
inc
dec
and
push
cmp
not
mov
scas
das
push
lahf
scas
(bad)
jmp
imul
mov
and
mov
test
cs
cmps
xor
pop
push
int
imul
jnp
cmp
in
jns
ins
xor
pusha
or
push
cmc
fld
sub
ja
push
fstp
pusha
mov
sar
inc
mov
mov
repz
in
push
fadd
mov
xchg
jg
call
pop
push
mov
daa
dec
sub
dec
fs
xor
inc
push
add
and
daa
scas
pop
mov
clc
(bad)
jae
ror
inc
xchg
mov
add
sbb
push
and
dec
add
xchg
es
ins
cwde
pop
jne
dec
add
jns
sub
fldcw
sbb
call
nop
add
jae
icebp
aad
stos
mov
add
imul
cmp
push
enter
jp
(bad)
adc
inc
addr16
adc
and
int
sbb
and
adc
cwde
leave
inc
dec
cmps
push
xor
push
xchg
push
out
shr
mov
or
ror
loop
sub
mov
test
es
xchg
dec
icebp
cdq
std
xchg
popa
and
pusha
clc
imul
(bad)
push
and
lds
inc
dec
or
mov
dec
push
jnp
add
ins
cld
xlat
and
pop
add
adc
pop
pop
xchg
jns
ins
jmp
xor
jmp
in
add
jl
sub
ret
jmp
les
xor
or
not
jge
add
ret
mov
mov
jecxz
push
lods
(bad)
jns
inc
dec
fld
sbb
inc
test
rcr
jl
das
dec
pop
mov
cmp
push
add
outs
cmp
push
loope
inc
pop
mov
jmp
movs
ja
pop
add
sahf
stos
icebp
mov
sti
mov
cdq
xchg
mov
mov
add
lods
lods
sub
cwde
stos
jge
stos
push
and
inc
fisttp
push
inc
add
jmp
in
jbe
or
les
pop
xchg
psubsb
mov
cmp
icebp
cwde
inc
xor
jno
push
mov
rcr
rcr
pop
add
daa
push
sbb
std
and
out
in
dec
push
in
adc
repnz
not
ror
xchg
xchg
es
add
adc
movs
jno
sbb
sar
retf
dec
retf
pop
xchg
mov
stos
outs
xor
push
ja
ins
sbb
pop
arpl
sub
das
lahf
adc
scas
push
cwde
(bad)
retf
mov
jb
mov
sbb
xchg
in
enter
ss
pusha
daa
daa
neg
inc
lock
fisub
jecxz
sti
or
cmovnp
sub
sbb
pop
rcl
mov
cld
icebp
xchg
jmp
aaa
cmp
(bad)
lock
lea
xchg
neg
icebp
imul
or
pop
add
scas
xor
scas
adc
pop
push
stos
push
aaa
sub
inc
lods
les
out
(bad)
std
cmps
fdivr
xchg
xchg
pop
push
jle
aad
add
pop
hlt
arpl
push
ins
hlt
mov
add
xchg
xchg
retf
lods
jg
add
fdiv
cmp
jae
adc
mov
pushf
rol
stc
dec
lods
pop
mov
cmp
(bad)
cmp
push
test
xor
add
inc
ret
addr16
or
(bad)
xor
mov
cld
inc
dec
test
inc
popf
fst
dec
jne
push
pop
xor
push
jp
pop
imul
pop
sbb
adc
(bad)
repnz
in
adc
aad
dec
fdiv
inc
mov
xchg
popa
push
dec
rcl
in
cld
and
jo
dec
jne
sbb
add
lods
cdq
cmps
add
mov
fisttp
push
jmp
add
rcl
jmp
in
add
into
mov
mov
dec
xchg
xor
out
xlat
dec
ins
mov
inc
push
sbb
loopne
and
das
cmp
and
dec
cmp
mov
jp
push
popf
je
xor
mov
cli
loop
xchg
adc
cmp
cs
pop
sub
xor
inc
lods
jmp
aad
(bad)
fmul
add
mov
adc
mov
or
mov
mov
mov
scas
push
mov
lahf
jbe
jmp
leave
in
(bad)
pop
ret
mov
lods
retf
jge
fcomp
fucomi
push
cwde
(bad)
das
scas
xchg
xchg
fst
jnp
loope
and
mov
sahf
sbb
push
add
je
out
xor
call
pushf
or
dec
fstp
cli
xor
or
lds
inc
movs
xchg
(bad)
and
mov
in
inc
or
add
lea
jno
pop
rcl
sub
push
loopne
cmp
cmp
cmp
push
xchg
jl
adc
cmp
and
das
xchg
jae
bound
sar
pop
daa
xchg
sti
int3
cdq
cwde
in
std
int3
pop
dec
lahf
jae
push
leave
sar
adc
cmp
repz
mov
sub
inc
shr
cli
or
imul
sub
ficom
sbb
pop
gs
mov
add
jnp
xchg
cwde
jge
retf
push
jmp
xor
shl
cmp
rcl
push
rcl
lods
dec
inc
add
mov
fstp
xchg
mov
xor
push
add
jb
jecxz
aas
test
stos
push
lahf
or
enter
push
stos
push
dec
popa
int
push
jne
xchg
jl
jnp
lods
fst
out
in
mov
inc
or
inc
add
mov
sbb
pusha
ret
push
inc
cmc
mov
mov
inc
test
(bad)
pop
not
adc
jbe
dec
or
adc
out
mov
xchg
add
test
pop
add
jne
add
fsub
dec
das
xchg
or
out
sub
cmp
pop
cmp
sti
mov
cli
sbb
inc
scas
sbb
(bad)
inc
jmp
cmp
and
sar
lds
inc
shr
xor
shl
inc
loopne
mov
call
popa
or
add
add
jo
inc
ret
and
sub
xor
aad
cmp
test
sar
int
pusha
shl
add
mov
inc
cmp
(bad)
aaa
sub
rcl
popf
xor
or
jge
(bad)
mov
push
mov
rcr
jbe
test
jge
add
mov
add
pushw
push
mov
mov
xor
pushf
add
pop
add
scas
ret
out
inc
adc
add
cmp
stc
push
jl
iret
pop
(bad)
pop
inc
iret
dec
test
(bad)
stos
push
adc
or
adc
std
and
sub
loopne
(bad)
icebp
outs
push
lods
cld
mov
mov
adc
or
inc
fld
sbb
pop
sbb
sub
mov
clc
sub
push
pushf
icebp
cmc
dec
sbb
inc
push
(bad)
mov
je
sub
sub
icebp
and
dec
(bad)
icebp
call
fsub
mov
pop
jmp
std
pop
adc
jp
popf
mov
(bad)
xchg
(bad)
out
push
das
fdivr
sub
jno
mov
dec
js
mov
(bad)
sahf
push
repz
rcl
sbb
fidiv
push
mov
xor
inc
dec
movs
push
xchg
ins
or
fwait
jns
sbb
cmp
pop
fistp
mov
mov
sbb
inc
js
les
or
or
adc
stc
fimul
addr16
bound
cmc
stos
std
ret
dec
cmc
ds
shl
fidivr
push
lods
dec
div
test
push
push
fcomp
ins
pushf
xor
int
mov
mov
xchg
mov
out
fwait
movs
push
mov
push
or
jmp
xchg
std
push
jge
mov
xor
push
dec
and
pop
(bad)
(bad)
cmp
cli
add
(bad)
into
fiadd
fldpi
bound
push
scas
mov
scas
and
sub
dec
dec
sbb
xor
jge
push
push
int3
repnz
jb
xlat
daa
and
(bad)
push
xlat
add
adc
out
xchg
xchg
xlat
push
retf
xchg
inc
xlat
loope
in
(bad)
sbb
cdq
sub
into
inc
test
lods
ret
mov
xchg
mov
xor
ins
(bad)
xchg
xor
std
aam
xchg
into
push
push
mov
out
mov
pop
and
push
mov
cld
icebp
pusha
(bad)
jno
mov
lods
lea
add
and
add
jbe
out
(bad)
int
xor
mov
inc
inc
adc
mov
xor
bound
faddp
cwde
pushf
xchg
shl
rcl
es
repz
and
push
fdivr
xchg
inc
mov
push
xor
cdq
xor
fadd
sbb
jbe
mov
xlat
cwde
ins
inc
or
jl
out
sub
or
push
stc
jno
call
xor
lods
gs
test
mov
cwde
push
adc
popf
jne
mov
dec
nop/reserved
inc
loope
pop
cmps
mov
iret
std
fwait
rcl
mov
jp
cmp
clc
fimul
(bad)
jg
dec
into
iret
pushf
dec
int
repz
scas
lahf
and
stc
fist
rcr
out
movs
xchg
jns
mul
outs
imul
cmps
xor
cli
push
addr16
sub
add
dec
dec
jne
pop
repnz
adc
std
(bad)
mov
inc
xchg
movs
dec
xchg
sub
xchg
fiadd
pop
cmps
mov
cmp
test
jnp
mov
sub
cmps
je
mul
pop
ret
push
ret
dec
int3
push
cwde
push
test
sub
or
call
(bad)
sahf
push
aam
xor
jg
pop
gs
cmp
mov
jo
mov
sub
dec
shr
dec
mov
sbb
ficom
fwait
xchg
dec
pop
add
adc
idiv
jmp
push
std
inc
je
and
sub
jl
movs
jno
and
push
nop
dec
into
or
add
mov
ret
mov
cmp
inc
jbe
jns
cmps
rol
movs
or
dec
mov
ret
sub
div
pop
inc
jp
cmps
mov
stos
xchg
in
jnp
add
cmp
daa
mov
push
dec
push
and
(bad)
out
cdq
cmp
pop
(bad)
ja
xchg
sahf
or
imul
xor
outs
jo
mov
xchg
cli
shl
xor
js
in
mov
inc
leave
das
ss
mov
adc
mov
mov
jecxz
add
mov
jg
sar
cld
mov
and
jl
ins
xor
cmc
idiv
repnz
hlt
add
dec
xchg
(bad)
xor
mov
push
mul
(bad)
mov
test
pusha
mov
je
xchg
mov
fisub
push
mov
mov
inc
inc
and
jns
sbb
repnz
or
sub
test
aam
sub
mov
movs
retf
mov
push
cmp
pop
adc
or
or
pop
shl
push
mov
xor
cdq
imul
fst
ins
jnp
push
sub
add
aad
pop
adc
cli
ins
movs
jg
xchg
xor
adc
inc
call
shl
js
mov
inc
loope
xor
ret
pushf
dec
adc
jle
jns
cs
pop
int
sahf
enter
sbb
pop
js
iret
pop
imul
or
lods
retf
and
lock
mov
or
das
ret
pushf
sbb
add
mov
cmc
and
pop
mov
pop
sbb
inc
mov
add
sub
mov
repnz
test
sub
add
fmul
push
sahf
add
aas
push
mov
inc
int3
lock
aas
cwde
ret
mov
out
lods
xor
repz
mov
jb
jge
jecxz
or
enter
lea
mov
sub
arpl
call
inc
int
call
rcl
mov
xor
add
neg
mov
retf
mov
ins
cmp
jne
inc
mov
mov
mov
jp
add
or
movs
dec
(bad)
fcom
cmp
icebp
push
aam
xor
mov
mov
jmp
(bad)
loop
add
stc
mov
int
popf
jle
cmp
js
sub
or
imul
(bad)
gs
shr
and
push
fld
movs
out
imul
or
xchg
cmps
cmp
xlat
dec
sbb
test
mov
mov
lods
popa
retf
out
jp
rol
ror
nop
mov
lock
jecxz
test
cmp
xor
js
lods
push
(bad)
mov
or
fs
(bad)
pop
fdiv
mov
(bad)
stc
inc
sub
call
aaa
mov
imul
push
ror
fcmovnbe
xchg
in
cld
adc
movs
mov
pusha
in
lods
push
xor
(bad)
ins
and
pop
xor
ret
jg
mov
cmc
xor
inc
jle
ins
frstor
rcl
or
push
pop
cmp
cmp
shr
movs
xchg
pushf
int
adc
sbb
inc
addr16
ja
fwait
aad
or
and
mov
hlt
mov
pop
test
xchg
iret
sti
pop
test
jnp
fiadd
mov
push
das
popa
jle
mov
dec
mov
test
xchg
out
adc
add
fisttp
push
xlat
retf
scas
and
cmps
xchg
rol
push
pop
or
mov
mov
and
lds
in
pop
dec
dec
or
call
ds
jmp
(bad)
cdq
in
pop
outs
ror
test
test
(bad)
pop
and
(bad)
ss
cmps
retf
out
sbb
jle
jo
mov
pop
sti
jle
mov
je
sub
inc
fistp
inc
xchg
aad
sbb
xchg
pushf
inc
int3
sub
sahf
inc
daa
aas
rcl
mov
(bad)
jo
xchg
loopne
pop
repnz
cmp
imul
loope
mov
push
aad
and
inc
rol
cmc
(bad)
call
fstp
rcr
xor
jmp
fld
mov
imul
add
adc
loop
mov
les
xlat
(bad)
jmp
pop
jns
enter
xor
cmp
inc
jmp
mov
mov
and
dec
idiv
cmp
data16
fsubr
hlt
or
sub
rcr
daa
cmp
sub
or
sbb
fisub
mov
and
rcr
mov
add
daa
mov
in
aaa
add
loopne
xor
xor
cld
jmp
sbb
clc
sbb
jbe
retf
hlt
div
shl
enter
ds
neg
out
fiadd
cli
fs
xor
sbb
dec
sbb
xchg
xchg
dec
inc
pop
jmp
je
stos
xchg
push
xor
(bad)
in
fs
cmp
pop
jecxz
stos
mov
push
dec
dec
in
inc
inc
cmp
xor
ds
mov
in
fisubr
int3
cmp
inc
les
mov
inc
lds
lea
repz
icebp
(bad)
aad
sti
jl
push
sub
cmp
mov
fs
icebp
sub
mov
xor
push
cmp
and
(bad)
jp
jge
bnd
xor
cld
cdq
stc
or
fidivr
mov
inc
js
push
and
add
inc
test
jecxz
dec
mov
shr
mov
and
test
loop
bound
movs
(bad)
add
jmp
inc
or
adc
jmp
fdiv
push
or
and
in
(bad)
repz
fsub
dec
lods
pop
add
test
fidivr
xchg
mov
mov
xor
mov
dec
xchg
jb
xchg
call
mov
jge
mov
inc
lods
jno
push
outs
mov
xchg
add
arpl
es
mov
sub
jmp
pop
dec
jae
mov
or
repnz
retf
bound
dec
aas
mov
pop
cmc
ins
adc
xchg
lods
jno
mov
xchg
dec
mov
pop
dec
push
add
std
mov
(bad)
cwde
adc
push
test
in
addr16
sub
inc
mov
and
int
push
out
jecxz
repz
iret
mov
add
mov
cli
cmps
lea
push
xchg
jp
aam
in
inc
jnp
sub
dec
and
fwait
cld
nop
and
stc
mov
cwde
das
jle
dec
mov
movs
inc
inc
push
jecxz
sbb
jge
movs
jns
push
sbb
jno
push
cmc
jge
sbb
add
add
test
mov
out
ror
mov
mov
icebp
addr16
jns
pusha
or
cmp
pushf
pop
mov
cmp
in
fdivr
inc
xchg
pop
mov
mov
pushf
retf
loop
dec
mov
neg
cmp
aam
mov
adc
adc
rcl
pop
mov
pop
shl
int3
fs
xchg
add
xchg
cmp
jnp
cmpxchg
aas
sub
lea
scas
dec
mov
loopne
loopne
les
out
xor
or
mov
shl
xchg
(bad)
add
and
jle
aas
and
shl
je
xor
jns
stos
pop
daa
fnstenv
mov
or
sub
dec
adc
mov
(bad)
in
out
into
mov
pop
jo
mov
mov
and
push
mov
inc
mov
add
cmps
add
adc
adc
rcl
xor
rcr
popa
nop
cdq
pop
and
(bad)
mov
jmp
jae
fadd
lea
pushf
push
js
cs
je
or
mov
aas
stc
push
sar
aam
push
push
int
dec
or
jb
pop
add
rcr
rol
bound
in
repnz
imul
out
call
rcl
sbb
test
inc
mov
mov
shr
div
xor
mov
dec
xchg
call
fiadd
jne
mov
cmp
mov
sub
arpl
(bad)
push
cmp
add
add
sub
mov
inc
or
adc
mov
imul
jecxz
sbb
bound
stos
xchg
cwde
inc
mov
icebp
or
adc
adc
add
pushf
dec
call
mov
cli
out
push
jno
std
sbb
inc
daa
clc
push
rcr
arpl
sar
push
jne
hlt
jbe
mov
xor
repnz
dec
push
into
mov
test
loope
inc
movs
fwait
push
mov
pusha
adc
jge
xchg
mov
lea
adc
pop
push
popa
fcom
repnz
mov
out
enter
movs
movs
jne
add
(bad)
hlt
ins
or
xchg
mov
sub
stos
popf
jbe
inc
test
in
inc
loope
jge
mov
jae
mov
loope
sbb
cmp
or
and
scas
push
(bad)
test
retf
fisubr
adc
cld
leave
loop
stos
dec
mov
(bad)
imul
ror
les
call
mov
mov
sub
cmp
cmp
cli
jno
daa
push
inc
(bad)
jg
xchg
gs
call
jge
adc
nop
or
sub
sbb
sbb
sub
push
ret
pop
mov
pop
ins
fcmovnbe
rcr
(bad)
mov
leave
mov
push
movs
repnz
shl
rcl
adc
pop
dec
stos
dec
xchg
xchg
fld
dec
mov
lods
mov
mov
adc
out
jno
pop
loope
imul
test
data16
movs
xchg
push
(bad)
ins
fadd
mov
(bad)
ins
and
mov
jbe
scas
add
sub
les
sbb
out
lock
and
push
and
fsub
clc
jnp
mov
inc
call
add
push
adc
repnz
pushf
jg
pushf
inc
dec
daa
test
clc
mov
stc
sub
pusha
mov
add
aam
imul
(bad)
rcr
movs
adc
xor
sub
lods
adc
out
dec
iret
call
pop
xchg
and
stc
cmp
fimul
loop
cmp
and
sbb
push
jecxz
enter
sbb
xchg
in
fld
fldcw
pop
div
jb
sbb
xor
mov
dec
jge
pop
add
cld
lods
in
test
clc
ret
ror
test
and
(bad)
and
jbe
mov
add
pop
cmp
xor
(bad)
mov
and
sti
or
sbb
ja
fst
fsubr
push
outs
sbb
xchg
xor
push
xchg
(bad)
adc
clc
out
sti
dec
jb
inc
and
out
int
fld
push
nop
mov
lods
sub
das
sar
out
enter
adc
sahf
mov
jns
hlt
mov
rcl
jecxz
scas
je
sbb
ja
in
xor
or
mov
and
aaa
repz
(bad)
fcmovb
fidivr
stc
xchg
inc
jg
add
push
pop
mov
cdq
sar
mov
cmp
xchg
xchg
sti
mov
mov
lods
les
dec
(bad)
arpl
mov
aam
sbb
mov
not
and
mov
xchg
add
xchg
sub
(bad)
imul
sub
xor
mov
in
push
(bad)
jl
mov
and
les
or
sub
int3
push
pop
mov
retf
push
mov
jbe
jae
xor
inc
mov
rcr
xchg
lea
jmp
repz
imul
mov
mov
jmp
add
loopne
pop
in
in
jge
mov
jp
imul
jecxz
and
sbb
push
stos
or
push
les
in
cmc
add
imul
dec
mov
fwait
sub
std
mov
sbb
dec
dec
repnz
mov
push
loope
mov
adc
inc
pop
mov
fwait
adc
movs
aas
cli
xor
jge
into
cmp
fdivr
popf
mov
test
ret
mov
cmps
jp
jo
add
pop
hlt
inc
(bad)
pop
sbb
and
in
aam
push
sbb
mov
xor
pop
jns
dec
mov
push
and
pop
or
sbb
cmp
jbe
aad
retf
es
mov
adc
sub
mov
cmps
xchg
jge
loop
fstp
das
stc
imul
sti
scas
sub
outs
daa
push
jl
xor
nop
in
cmp
sbb
mov
pop
mov
inc
fimul
data16
dec
xlat
test
mov
rol
shl
cmp
fcom
fadd
imul
mov
loopne
adc
daa
cmc
mov
adc
mov
xor
(bad)
dec
(bad)
mov
daa
popf
sbb
clc
enter
and
das
hlt
jg
repz
(bad)
xlat
jecxz
or
and
retf
mov
jnp
pmaxub
arpl
imul
neg
lahf
jecxz
ins
mov
pop
jno
in
inc
pop
mov
and
call
push
jo
jmp
sbb
das
mov
lds
das
or
mov
(bad)
fld
popa
cmp
jo
xlat
out
cdq
sub
addr16
cwde
mov
das
and
sahf
lods
loop
hlt
cdq
das
call
mov
push
stos
aad
adc
ret
and
dec
pop
sar
xchg
sub
sbb
int3
sahf
push
lds
scas
lea
les
push
sub
nop
fimul
loop
call
ret
mul
add
retf
dec
leave
adc
jns
bnd
adc
das
mov
fdiv
mov
pusha
pop
es
mov
scas
cli
pop
lds
mov
mov
push
jge
das
mov
pop
pop
adc
adc
pop
movs
sub
ficomp
rol
cmc
fadd
pop
adc
fisttp
ret
lods
mov
dec
arpl
rol
scas
bound
dec
or
dec
and
cmp
lods
pop
sbb
cmp
jle
lods
gs
cmps
movs
dec
xor
mov
push
mov
aam
pop
push
xchg
push
ins
or
pop
push
dec
xchg
mov
aaa
or
push
test
lods
stos
jg
addr16
xchg
adc
and
pop
bnd
add
loop
cmp
popa
add
mov
fwait
sbb
ret
int3
sbb
out
in
cmp
xor
and
push
cmp
adc
jp
mov
icebp
repz
shr
aaa
fwait
inc
pop
mov
arpl
or
push
int3
sub
xor
jp
adc
arpl
cmps
lock
fisubr
cmps
adc
sub
push
cmp
cwde
add
scas
pushf
mov
out
retf
mov
lea
test
jge
pusha
xchg
mov
mov
mov
jle
inc
xchg
or
jb
push
stos
inc
mov
dec
push
mov
fst
inc
and
mov
gs
adc
dec
and
dec
dec
adc
add
test
add
cwde
std
test
nop
neg
adc
dec
adc
out
enter
enter
xchg
fmul
mov
call
test
xchg
daa
lahf
jnp
inc
movs
bound
adc
push
cmps
cwde
hlt
stos
sub
or
(bad)
inc
ret
(bad)
fisttp
stos
sti
sub
xor
jne
popf
add
and
mov
xchg
call
cmp
sbb
mov
jg
mov
jno
xchg
cmp
pop
in
arpl
dec
movs
(bad)
fs
retf
popf
pop
mov
cdq
rol
lds
adc
sbb
ficomp
sbb
cmps
imul
inc
xchg
(bad)
sbb
push
inc
sti
pusha
xchg
setnp
in
loopne
adc
jecxz
or
fsubrp
ret
mov
or
mov
pop
or
cmps
mov
in
pop
jp
sti
mov
lods
lods
scas
mov
bound
lods
aaa
inc
xchg
pusha
dec
aad
js
adc
in
sbb
fisubr
adc
imul
inc
std
add
mov
pop
js
mov
jge
cmp
outs
jg
inc
and
stos
dec
out
cdq
sbb
popf
xchg
les
sahf
je
sub
(bad)
cmc
shl
test
std
dec
jnp
jl
cmp
adc
sbb
lods
xchg
ret
and
retf
leave
aas
(bad)
xchg
pop
fstp
push
sbb
test
arpl
cmp
and
mov
cmp
popa
aad
cmp
sbb
push
rcr
dec
or
dec
jg
cwde
call
neg
mov
sub
in
imul
cmp
arpl
adc
inc
ss
mov
cwde
stos
cs
and
dec
push
ja
push
push
or
inc
mov
dec
inc
add
pop
sti
add
or
loopne
xchg
cld
add
sbb
retf
sbb
add
cld
and
mov
shl
repz
retf
std
xchg
dec
mov
test
imul
loop
fnstcw
add
pushf
inc
pop
sar
sbb
lds
pop
push
sbb
dec
push
cld
adc
cwde
add
adc
and
(bad)
in
sti
adc
movs
push
pop
dec
jmp
inc
cmp
or
xchg
ret
cmps
push
mov
jmp
stos
xor
aad
scas
pop
add
mov
adc
cmp
fnsave
je
aaa
es
sub
push
shl
inc
fisub
fs
out
scas
movs
mov
rcl
pop
ins
add
test
jnp
add
mov
(bad)
stos
push
(bad)
mov
or
icebp
lock
xchg
jp
adc
fs
jb
retf
lahf
cmps
bound
sar
clc
xchg
cdq
and
test
in
lock
and
xchg
scas
xor
fild
adc
and
daa
inc
push
loop
or
fwait
int
sbb
into
stc
or
fs
push
inc
lahf
clc
sbb
rcl
int3
movs
and
or
push
nop
cmp
rol
test
leave
into
ins
dec
add
clc
xchg
pop
mul
mov
rol
mov
lea
lock
cmp
int3
cs
or
retf
pop
mov
enter
cli
add
js
aad
movs
jo
mov
jb
call
inc
int
add
(bad)
push
arpl
out
out
rol
adc
and
push
sub
add
fild
or
or
push
cmp
rol
mov
mov
outs
rcpps
adc
mov
pusha
pop
nop
sbb
ret
fst
mov
cdq
inc
pop
cs
in
retf
sti
test
fisubr
js
fcomp
cmps
jge
(bad)
fdivr
jmp
cmp
or
aad
inc
add
arpl
pop
mov
mov
lods
jecxz
rol
xchg
iret
lds
or
mov
add
sbb
jno
pop
jbe
retf
mov
scas
clc
mov
fwait
ret
addr16
rsm
out
push
jmp
leave
mov
test
inc
add
push
and
mov
call
add
cmp
cmps
jbe
and
imul
sbb
dec
jnp
outs
push
repz
test
out
adc
repnz
adc
and
sti
adc
mov
loop
ffree
jnp
fild
add
pop
add
lods
sub
mov
cmp
mov
add
movaps
mov
bound
ja
shl
retf
shl
push
and
sbb
scas
xchg
int
cmp
add
cli
rol
xlat
js
or
mov
cli
cmp
lock
dec
call
retf
xor
lods
sub
cmp
rcl
lock
ins
mov
dec
fadd
or
sub
and
repz
call
mov
bound
push
mov
xor
test
xor
cdq
hlt
mov
cmp
mov
dec
xor
prefetchw
mov
pop
imul
cli
inc
inc
pop
jnp
jge
pop
jb
lods
lds
outs
pop
inc
adc
hlt
into
fsubr
out
jae
pop
jg
xchg
nop
inc
rcr
ficom
mov
(bad)
xchg
(bad)
test
cmps
sub
les
test
aas
sub
icebp
aam
jp
cmp
push
and
push
xchg
mov
push
fs
dec
int3
mov
mov
jo
jnp
add
movs
out
cwde
mov
sbb
retf
sar
jle
fcom
pop
jnp
enter
mov
sub
out
ds
push
mov
in
jb
pop
or
jmp
outs
inc
test
inc
fld
push
pop
push
ins
or
adc
test
pop
mov
sbb
xlat
pusha
or
mov
lea
lock
cmp
ret
mov
imul
ds
xchg
mov
bound
in
add
ins
and
and
test
ss
test
cli
xlat
xchg
and
sbb
fld
add
add
cli
aaa
and
sbb
pop
cmp
push
cmps
xlat
or
mov
jecxz
pusha
rcl
sti
inc
(bad)
loopne
or
ret
imul
fidivr
inc
sbb
cmp
(bad)
push
test
inc
push
outs
movs
ror
out
test
sbb
mov
mov
pop
enter
xlat
aad
cmp
icebp
cmp
sub
sbb
pusha
mov
or
dec
inc
cmp
add
addr16
mov
movs
xchg
lods
xor
mov
pop
adc
dec
push
and
pop
cmp
adc
retf
or
stos
cs
(bad)
fwait
dec
pop
aaa
mov
mov
xor
mov
outs
ret
fdivr
push
jne
retf
popa
cmp
mov
pop
(bad)
ffree
sar
mov
lods
outs
mov
dec
retf
fisttp
div
inc
in
out
sub
stc
inc
mov
pop
jmp
and
repnz
rol
mov
ret
or
je
dec
out
mov
shl
inc
ds
xor
jmp
in
loop
(bad)
out
fnstenv
not
daa
jns
push
test
gs
jne
(bad)
mov
ja
popa
adc
and
into
out
add
xor
jg
hlt
xor
out
les
mov
cmp
jo
add
inc
rol
fild
movs
dec
or
inc
clc
dec
hlt
popf
cmps
mov
ret
nop
xor
out
mov
cmp
jecxz
or
ss
add
lock
leave
and
and
jp
stos
cmp
add
call
xchg
lock
sub
ins
rcl
pop
sub
(bad)
not
inc
jae
mov
loopne
je
rcl
mov
inc
cmp
outs
daa
adc
shl
repz
repz
ret
test
int3
sbb
sub
jmp
pop
sti
or
mov
enter
fsub
and
sar
popa
jecxz
stos
movs
dec
or
(bad)
rol
test
add
mov
test
fld
loop
pop
add
sub
lahf
xor
sub
mov
stc
clc
xor
cmp
arpl
lock
ficomp
push
int
push
stos
xchg
das
test
outs
xchg
dec
jl
add
jle
sbb
(bad)
sbb
xchg
push
les
inc
push
xor
pop
jns
test
dec
mov
(bad)
(bad)
out
(bad)
pop
jecxz
into
es
retf
loope
and
dec
in
call
mov
daa
jnp
pushf
outs
pop
jne
lods
jno
int
lods
shl
(bad)
(bad)
and
mov
outs
mov
add
mov
adc
mov
or
jp
sbb
push
add
cwde
out
mov
out
aas
shr
dec
gs
pop
cmp
xor
adc
hlt
cmc
repnz
rol
shl
xchg
call
adc
mov
call
add
jmp
dec
shr
shl
iret
dec
pop
adc
adc
mov
dec
int
retf
retf
push
xor
int3
mov
popa
fsub
pop
retf
int3
lods
sbb
pop
sbb
xchg
jmp
mov
sbb
pop
push
push
sahf
clc
test
int3
mov
mov
(bad)
call
fldenv
or
cmps
fstp
fcomi
push
lods
push
ja
(bad)
lock
cmc
imul
idiv
movs
sub
jns
dec
dec
inc
xchg
cmps
xchg
fs
pop
std
je
sub
(bad)
shr
push
push
push
cmp
scas
xor
cmp
adc
and
cmp
inc
sub
hlt
add
push
fwait
cld
retf
dec
movs
push
dec
xor
sub
pop
cmps
movs
mov
sti
inc
jp
or
hlt
mov
cld
cwde
dec
inc
test
inc
or
rol
mov
or
adc
inc
xor
adc
in
jmp
push
lahf
sti
es
and
call
xor
xlat
gs
pop
test
sahf
pop
xchg
aad
pop
sub
fs
inc
shr
add
add
or
ins
or
mov
out
and
je
out
sub
idiv
mov
lods
movs
fcmovu
in
dec
jns
stos
movs
ja
mov
loopne
adc
cwde
add
xchg
jecxz
pusha
sti
dec
cmp
movs
pop
fwait
jecxz
xor
xor
test
jbe
pop
fcmovnb
jns
aad
mov
push
mov
call
movs
leave
ret
shrd
outs
push
xchg
cmovo
mov
leave
add
cmps
mov
inc
mov
stc
adc
(bad)
xchg
adc
sub
mov
xchg
sub
out
cmp
fdivr
xchg
mov
sbb
and
adc
adc
pop
push
mov
jg
enter
sub
add
repz
mov
inc
retf
cmp
(bad)
mov
or
call
mov
pop
sti
mov
out
sbb
mov
das
mov
pusha
repz
test
dec
sub
sar
jp
or
mov
es
arpl
mov
cmps
or
rcl
xchg
mov
add
stos
inc
fcmovnu
pop
dec
stos
pop
stos
cwde
and
bswap
jns
jp
push
daa
jae
cmp
ss
mov
sbb
dec
ret
jbe
inc
pop
repnz
lea
push
sbb
push
(bad)
(bad)
cmc
adc
cmp
push
lock
je
call
jb
fs
or
xchg
pop
add
xchg
int
adc
les
ins
pop
jb
jns
stc
call
ss
ss
test
mov
clc
imul
dec
imul
ins
pop
and
fiadd
sub
push
add
push
sub
enter
inc
ss
push
pop
mov
in
mov
shl
fisub
loope
push
sub
push
sbb
mov
push
nop
mov
mov
or
mov
xchg
cmps
dec
enter
fst
mov
inc
xor
(bad)
shl
stos
push
popf
or
pop
or
popa
push
mov
retf
mov
jmp
in
int
and
jge
ss
test
cmc
push
jmp
sub
mov
xor
lds
adc
jnp
add
inc
test
repz
stos
cld
xchg
xchg
ret
scas
jg
push
inc
or
mov
ret
push
xor
shl
cmp
sbb
rcl
arpl
jmp
jecxz
mov
sub
into
js
int
cmp
mov
pop
jmp
push
jge
div
sbb
push
jle
push
jb
or
loopne
xchg
sbb
inc
sub
mov
xlat
ins
dec
outs
mov
mov
cmp
addr16
jp
test
adc
mov
xchg
adc
dec
mov
push
cmp
or
mov
dec
mov
jmp
call
call
jns
rcl
daa
cmp
sbb
(bad)
fidiv
xor
or
mov
pop
out
outs
out
sbb
retf
ins
cmps
or
dec
popf
lahf
lock
inc
es
adc
jmp
scas
cld
rcl
push
xor
int3
sub
jge
out
adc
mov
add
and
dec
mov
adc
out
sub
daa
mov
jo
ins
(bad)
aam
ret
dec
inc
repnz
sbb
(bad)
mov
in
loope
fsubr
mov
pop
jae
xchg
xor
dec
and
test
rcl
jo
movs
shl
and
xor
mov
fisubr
mov
push
pop
push
xor
add
jb
or
push
hlt
sub
loope
add
mov
add
adc
sub
push
dec
cmps
sti
inc
dec
fdiv
movs
icebp
movs
jp
pop
mov
js
pop
mov
and
mov
lahf
inc
cmove
addr16
leave
pop
imul
dec
popa
arpl
bound
in
cmp
int
mov
jae
clc
out
xlat
sub
jae
mov
jmp
adc
adc
mov
retf
mov
daa
pop
test
in
retf
mov
xchg
(bad)
pop
lods
sar
fstp
sbb
pop
lods
test
fs
adc
lods
fisttp
sbb
(bad)
cmps
arpl
pop
and
sbb
push
add
dec
inc
or
sub
sti
popa
cli
ss
mov
sub
xor
clc
shl
les
xchg
jno
test
adc
jae
mov
mov
cmp
test
cwde
repnz
push
stos
movs
sbb
imul
bound
aad
add
scas
retf
aaa
hlt
fisttp
movs
push
or
clc
movs
push
retf
lods
push
adc
or
jg
sbb
xchg
arpl
pusha
(bad)
push
ret
adc
pusha
push
(bad)
mov
add
jbe
mov
jo
and
pop
ins
movs
xchg
xchg
loope
aas
mov
dec
xchg
push
arpl
fdivp
mov
rcr
repnz
sub
in
rcl
mov
retf
jb
retf
iret
xlat
or
aas
jmp
cmp
call
pop
out
mov
mul
sub
mov
jne
mov
pop
pop
jmp
fwait
(bad)
leave
mov
addr16
(bad)
aas
xchg
push
sub
fwait
xchg
cdq
sti
push
sub
cmp
int3
rcl
or
fild
ficomp
pop
push
dec
out
add
jae
out
adc
adc
mov
in
lods
and
iret
rcl
das
pop
and
push
jmp
jge
cs
rdmsr
(bad)
aam
pop
mov
sub
sahf
popf
lods
lods
inc
mov
cmp
pop
cld
and
stc
jno
cdq
faddp
cli
(bad)
dec
lahf
lods
cmps
mov
mov
es
xchg
push
xchg
pop
fidiv
mov
(bad)
mov
pop
mov
mov
fstp
inc
cmps
leave
ins
nop
add
inc
inc
imul
in
push
out
gs
rcl
inc
xor
adc
cmp
dec
and
inc
mov
(bad)
outs
and
fld
pop
jnp
xchg
mov
(bad)
dec
sub
rcl
and
bound
aaa
mov
shr
stos
pop
cmps
int3
scas
push
fld
push
push
add
jae
xchg
mov
xchg
sub
cmps
fiadd
or
hlt
test
out
shl
shl
add
push
cmp
jle
mov
pop
cwde
lahf
and
into
fsubr
xlat
or
and
adc
and
cwde
leave
lahf
sbb
jecxz
data16
(bad)
mov
stc
sbb
push
push
scas
mov
cmp
stos
retf
cmp
(bad)
fadd
xor
add
div
cmps
pushf
cmp
pop
mov
nop
loope
sub
xchg
jge
(bad)
lods
mov
stos
(bad)
mov
sub
adc
lahf
lds
push
push
ds
pop
pop
ins
xor
rol
sbb
sbb
xchg
dec
into
dec
mov
and
cmp
add
pop
ss
js
frstor
add
gs
push
cdq
mov
mov
dec
data16
sub
jle
jl
push
rcl
cmps
push
or
adc
repz
cwde
out
repz
retf
mov
cmps
es
jmp
ja
jb
lods
test
popf
fdiv
movs
pop
or
stos
mov
adc
daa
add
call
jecxz
sub
xor
mov
div
adc
mov
ss
or
mov
adc
repz
pop
retf
mov
outs
jmp
loop
xchg
das
sbb
cli
push
ja
push
js
jle
enter
bsr
stos
mov
nop
jo
pop
lahf
jl
pop
and
xchg
ja
fmul
outs
jge
cmc
aam
xor
rol
loope
sbb
xlat
push
int
(bad)
(bad)
ins
add
mov
ins
sbb
and
hlt
dec
mov
push
fsub
add
loop
scas
fisttp
pop
mov
mov
mov
jp
lods
ds
push
rcr
sbb
adc
dec
in
sbb
outs
add
lahf
pop
fild
adc
ror
mov
xor
and
sub
jb
or
mov
and
movs
adc
or
scas
mov
pushf
daa
loopne
xchg
lahf
aas
clc
stos
inc
inc
(bad)
dec
adc
out
and
xchg
xchg
in
imul
cmp
mov
mov
sbb
imul
mov
inc
loopne
push
pop
xor
sub
(bad)
pop
fist
fidivr
xchg
push
sub
mov
mov
into
jns
sahf
test
push
jb
push
sub
mov
xchg
sbb
pop
xchg
push
add
stc
pop
mov
movs
sub
jae
into
cmp
pop
xor
call
add
push
mov
xor
test
(bad)
lds
or
mov
fdiv
ins
aam
jns
sbb
aam
sub
imul
test
xchg
or
pop
xor
sti
mov
js
push
dec
and
sti
in
mov
in
iret
push
pop
xlat
and
cld
jmp
pop
sub
std
mov
inc
stos
cld
fcomp
retf
repz
mov
outs
int3
push
push
dec
sahf
das
xor
mul
imul
movs
mov
dec
les
xor
(bad)
jb
sub
ds
push
imul
xchg
pop
out
fstp
mov
jle
push
or
into
add
test
mov
clc
lahf
inc
popf
call
fmul
sti
mov
xchg
into
not
push
mov
bound
mov
add
push
retf
sub
jo
stos
ficom
mov
sbb
adc
pop
xor
pop
fwait
sbb
enter
iret
sub
push
and
inc
aaa
xor
ins
push
push
xor
dec
sbb
push
in
mov
sub
stc
push
ins
lods
addr16
ret
xchg
cmc
mov
inc
jo
push
(bad)
pop
out
add
dec
iret
call
ss
imul
mov
lock
loop
adc
pop
dec
inc
aaa
xor
adc
mov
ss
xchg
mov
(bad)
xchg
sub
mov
ret
sub
dec
(bad)
mov
cld
ror
pop
xchg
pop
or
fcom
scas
dec
(bad)
mov
in
and
inc
cmp
xchg
jmp
lea
shl
dec
xor
fwait
push
dec
pop
test
pop
xor
dec
jl
sar
mov
push
xchg
add
lahf
push
push
add
mov
cmp
mov
dec
mov
adc
(bad)
lock
test
rcl
or
sbb
pop
sar
scas
retf
rol
add
into
in
sub
adc
cmps
pop
arpl
jp
addr16
stos
ins
clc
out
ja
xor
and
fwait
cmps
in
pop
inc
aas
test
xchg
imul
push
retf
cdq
mov
mov
push
fld
(bad)
fstp
mov
hlt
push
and
sub
sub
and
test
sub
fbld
cld
adc
push
xchg
sti
cmp
adc
xchg
add
loope
into
out
dec
jp
or
mov
cdq
ror
out
inc
daa
mov
lahf
clc
punpckldq
mov
js
loope
call
cmc
and
mov
dec
inc
(bad)
stc
(bad)
popf
shl
lock
test
cwde
inc
out
test
jle
test
arpl
xor
dec
and
fwait
xchg
ret
in
mov
movs
shr
shl
cmc
test
and
repnz
or
sbb
mov
inc
cld
cld
dec
jge
retf
pop
adc
xlat
outs
lea
jge
jle
push
and
mov
cwde
adc
add
fidivr
and
(bad)
cld
fisttp
mov
lea
cmp
adc
sub
dec
cld
jmp
jo
cmp
jmp
and
ds
xlat
rcr
clc
idiv
xchg
sub
loope
icebp
pop
mov
xchg
cmp
inc
jae
stos
clc
sbb
and
xchg
push
mov
out
clc
mov
sbb
cmp
jb
stos
in
dec
jmp
enter
sbb
repnz
test
out
and
mov
lock
lahf
sti
jbe
std
fisttp
mov
movs
jl
stos
mov
xchg
ret
push
jb
push
pop
arpl
mov
add
rcl
iret
cdq
enter
or
bound
sbb
jne
shr
adc
jl
stos
out
imul
sti
push
mov
sbb
icebp
je
lock
and
cmps
daa
popf
push
aaa
jg
int3
pusha
imul
enter
(bad)
sbb
out
test
aas
dec
mov
and
mov
xor
int3
lock
or
stos
dec
rol
popa
ja
sti
popa
dec
sub
aaa
and
stc
ret
or
sub
movs
fld
fwait
into
and
add
daa
scas
add
pop
mov
aad
push
data16
pusha
movs
jl
mov
sti
mov
mov
cld
out
aaa
dec
xchg
ficom
jmp
sbb
out
xchg
(bad)
aaa
sbb
mov
dec
pop
(bad)
aas
repnz
dec
rcr
fisub
jmp
stos
push
enter
mov
es
cmp
pusha
ds
mov
adc
mov
or
ret
mov
mov
rcr
or
shl
mov
cs
inc
mov
stos
sahf
rcr
sbb
sbb
shl
adc
mov
mov
mov
xchg
stc
jo
out
ss
push
push
ror
jnp
dec
adc
aaa
xor
xor
sbb
adc
xor
push
mov
leave
adc
cmp
mov
xchg
arpl
pop
inc
popf
inc
xor
icebp
stos
pop
mov
stc
movs
mov
mov
cmp
ja
jg
jecxz
retf
retf
xor
inc
popa
les
mov
adc
cli
in
pusha
shr
pusha
inc
dec
in
jnp
adc
xchg
push
imul
hlt
cmp
rol
jne
fistp
sti
xchg
das
jo
adc
xor
cmp
shl
push
lahf
inc
xchg
fsubr
cdq
das
sub
jmp
push
xor
xor
ja
dec
or
jno
pop
cmp
mov
inc
push
push
cmp
pop
mov
sub
jg
popa
xor
pop
xchg
mov
ins
out
or
scas
cwde
lds
dec
loopne
xchg
add
fidivr
or
hlt
cmp
dec
aaa
push
mov
das
setae
rcl
add
std
out
xchg
sub
sbb
push
add
add
pushf
int
aaa
xor
mov
inc
rcr
popf
cld
jecxz
push
iret
mov
adc
test
xchg
sbb
movs
lahf
mov
push
mov
mov
xor
repnz
imul
add
shr
push
sub
aaa
(bad)
mov
jnp
xor
xor
aas
js
out
cmp
cmp
inc
push
add
and
rcr
add
add
mov
out
and
in
mov
xor
mov
or
sub
or
jecxz
dec
or
adc
inc
dec
sub
scas
out
sub
arpl
mov
add
iret
shrd
aad
mov
cmp
inc
ror
push
fild
mov
xchg
popf
enter
pusha
push
pop
dec
shl
mov
mov
push
fild
call
mov
inc
inc
push
mov
xchg
add
dec
mov
sbb
pop
pushf
jp
mov
and
cmp
retf
xchg
jg
test
cld
adc
mov
pop
jo
cmp
mov
cmc
or
sbb
mov
cli
out
cli
adc
cdq
mov
popf
in
inc
(bad)
popa
adc
leave
push
mov
dec
call
jb
gs
xlat
gs
push
fcom
xor
out
adc
inc
push
aaa
inc
cmp
jns
in
arpl
mov
inc
inc
mov
or
retf
arpl
fcom
bound
outs
imul
lods
mov
adc
cli
int3
push
icebp
es
jl
or
mov
sub
push
xor
repnz
push
sub
call
(bad)
push
xor
add
lahf
(bad)
jno
adc
sbb
pop
lock
jg
cmp
(bad)
data16
fcom
shl
inc
inc
pop
dec
ins
lds
neg
add
enter
inc
rcr
and
es
cli
retf
retf
pop
mov
sbb
mov
ret
loop
mov
addr16
arpl
in
into
je
add
push
mov
mov
xchg
jb
add
cwde
mov
mov
pop
pusha
push
jne
adc
test
push
imul
sbb
dec
loop
pop
xchg
repnz
sbb
lds
xchg
xchg
push
jl
inc
inc
add
mov
adc
int
xlat
mov
jmp
arpl
pop
loopne
shl
push
lahf
bound
jecxz
cmps
test
loopne
sbb
or
jns
xor
call
(bad)
adc
jb
mov
pop
imul
add
xchg
add
fsubr
jbe
adc
shl
bound
mov
lea
(bad)
call
sub
test
mov
sbb
xor
ja
(bad)
adc
fnsave
or
mov
cmps
ror
jmp
(bad)
dec
cmp
in
add
icebp
push
dec
dec
add
pusha
call
inc
sahf
fisttp
leave
fistp
std
aaa
mov
xor
ret
adc
xchg
js
jb
cmp
xor
pop
push
in
mov
adc
iret
pop
and
test
jmp
sbb
retf
mov
sbb
int
inc
outs
fyl2xp1
mov
jno
into
das
mov
mov
jg
jae
sbb
jo
add
or
fisttp
jne
adc
sub
pop
outs
xor
fist
sbb
dec
sbb
mov
jmp
leave
je
adc
mov
stos
rcl
mov
dec
sahf
pop
pushf
push
pop
pushf
add
call
scas
popf
pop
jns
push
jge
jbe
push
sbb
xor
(bad)
jbe
push
pop
cmp
and
sti
and
sub
jg
xor
retf
scas
ins
pop
push
or
mov
lods
jl
pop
push
and
mov
and
inc
fnstcw
xchg
fwait
sbb
mov
xchg
scas
xor
and
retf
cld
pop
data16
dec
(bad)
pop
stos
jb
iret
mov
into
fincstp
inc
mov
push
stos
sub
pop
nop
push
jmp
jle
leave
cmp
aas
lea
out
into
out
fwait
mov
pop
ret
cmovb
or
sbb
(bad)
or
pop
data16
mov
adc
push
loopne
aas
sti
in
fst
inc
mov
xchg
call
std
cs
mov
ret
test
cmps
shl
out
push
cmp
or
pop
xchg
jne
outs
xor
mov
adc
sub
pop
repz
cld
cs
iret
sub
pusha
pop
out
scas
push
das
daa
pop
pop
or
inc
cmc
fwait
or
cmp
cs
mov
mov
or
push
add
aad
or
outs
mov
fimul
cdq
sbb
es
inc
les
pushf
inc
in
inc
and
repnz
inc
ret
push
repz
scas
call
mov
stos
aas
popf
popa
mov
gs
sbb
jecxz
push
dec
lock
jns
mov
or
shr
sbb
inc
jne
mov
fdiv
mov
shr
outs
rcr
inc
call
ss
imul
rcr
push
dec
ret
div
imul
and
or
xchg
popa
xor
lahf
loop
inc
inc
aad
and
(bad)
dec
dec
add
jmp
push
mov
test
enter
scas
gs
jl
add
mov
lock
aad
inc
xlat
outs
push
sti
and
xchg
hlt
inc
retf
dec
dec
or
stos
jmp
test
adc
jp
lea
sub
jb
pusha
call
cmp
fst
mov
or
or
jmp
sub
enter
shl
mov
scas
popf
std
jle
mov
mov
imul
or
sbb
mov
movs
(bad)
(bad)
popf
cmp
push
retf
push
lahf
loopne
lds
mov
in
xlat
pop
add
not
test
inc
imul
shl
mul
add
mov
dec
push
repnz
les
cdq
push
sbb
mov
add
hlt
push
and
push
je
clc
adc
cmps
jmp
mov
aas
dec
jge
aam
pop
cmp
mov
xchg
and
cmps
cmp
cli
fucomp
dec
ins
jl
mov
test
imul
(bad)
mov
sbb
add
popf
jl
pop
cli
fidiv
pop
sahf
imul
mov
or
paddd
les
inc
xchg
xchg
(bad)
jb
les
imul
ret
mov
push
mov
sub
ret
add
jbe
leave
aas
lods
repz
shl
loop
mov
jge
mov
adc
ds
jl
dec
scas
div
cmps
rol
inc
cmovp
popa
(bad)
adc
mov
int
mov
call
add
push
out
stos
push
xor
adc
inc
call
lea
inc
jge
mov
jns
scas
and
sar
xor
pop
xchg
popa
ds
sbb
test
adc
inc
clc
sub
bnd
cmps
into
aam
hlt
xor
popa
push
aas
or
and
js
or
in
pop
cmp
push
retf
retf
cld
mov
iret
push
push
out
call
mov
retf
cli
inc
jne
data16
adc
lods
cmp
cmp
and
(bad)
rol
inc
nop
or
out
push
jb
ss
sbb
lods
push
jmp
add
mov
popa
pop
test
sbb
in
lods
lods
out
inc
popa
push
pop
xor
popf
add
out
push
lods
sbb
movs
(bad)
sahf
leave
idiv
push
push
push
ins
mov
cmp
fstp
int
add
push
add
enter
sub
dec
add
jbe
push
or
dec
or
cli
call
jp
sbb
ja
iret
inc
popf
ror
fisttp
and
cmps
and
sbb
sbb
dec
inc
rcr
fist
fcmovnbe
mov
push
fidivr
jg
jle
xchg
sub
push
daa
and
mov
ins
jo
pop
rcr
dec
jae
call
ins
mov
push
rol
mov
nop
xor
sub
movs
lahf
and
fstp
cmc
adc
inc
jbe
retf
cmp
jp
out
mov
cli
cmps
pop
xchg
fistp
adc
pop
xchg
in
mov
cmp
pop
scas
xchg
xor
loopne
call
sub
dec
dec
push
add
jmp
cmp
lods
dec
fdivr
and
dec
mov
hlt
add
dec
push
pop
pushf
adc
mov
jne
imul
in
in
dec
popa
call
movs
in
loopne
test
outs
jns
jb
js
stc
stc
jae
mov
mov
loop
pop
xchg
inc
xor
sar
arpl
stos
and
push
jno
in
sti
ret
shr
lahf
int3
sqrtps
dec
fs
(bad)
xchg
inc
in
xor
(bad)
and
enter
icebp
and
pop
push
loopne
dec
dec
and
lea
xchg
int
jns
scas
xlat
xor
iret
loope
cs
add
push
mov
pop
pop
not
jecxz
jne
dec
fld
ret
(bad)
mov
scas
mov
sti
push
outs
push
or
mov
int3
xor
sub
dec
fwait
(bad)
arpl
push
sbb
push
sub
dec
cmp
lahf
repz
add
in
pushf
lahf
xor
mov
(bad)
shl
xchg
pop
xchg
mov
clc
jne
nop
sub
xchg
pop
ret
rcl
(bad)
in
fidivr
cdq
mov
mov
cs
or
xlat
xchg
vphaddbd
add
dec
adc
test
or
jp
dec
loop
push
mov
ror
es
cmps
mov
and
cmp
adc
add
outs
cld
aas
cmc
icebp
icebp
jns
pop
ds
or
xor
inc
call
xlat
stos
mov
xor
add
sub
std
add
gs
out
mov
xchg
xor
shld
xchg
ja
in
inc
rcl
xchg
cmp
cwde
jns
mov
(bad)
cmc
xchg
sti
(bad)
pop
mov
in
sahf
jecxz
out
vaddsubps
or
ins
aas
out
arpl
jb
push
ja
or
sahf
xchg
pop
and
adc
or
ins
scas
sub
out
mov
fucomi
fist
add
pop
test
test
jae
(bad)
sbb
sub
leave
xlat
call
pushf
adc
(bad)
inc
popf
ss
lds
sub
fwait
or
in
and
push
fidivr
add
jmp
add
enter
mov
add
(bad)
add
sub
push
xchg
xor
pop
push
je
inc
xlat
push
dec
lea
mov
scas
idiv
or
movs
mov
nop
pusha
adc
adc
adc
inc
push
int
mov
in
pop
mov
lock
xor
lahf
and
pop
aas
inc
jns
push
pop
cld
jl
enter
js
std
pop
xchg
pop
cld
jo
test
jge
pop
mov
outs
shr
leave
mov
cmp
jae
repnz
pushf
sahf
mov
call
jle
mov
xchg
add
jno
or
and
push
(bad)
js
mov
int
jae
std
stos
xchg
ret
sub
inc
stos
sub
cmp
xchg
and
mov
(bad)
dec
jp
mov
int
popf
lea
and
xor
inc
adc
jbe
sahf
sbb
adc
dec
lods
xchg
out
mov
pop
bound
mov
add
cdq
adc
mov
daa
shl
xchg
mov
add
or
pop
mov
(bad)
and
mov
cmp
cmp
repz
mov
sub
sar
das
xchg
adc
gs
gs
imul
scas
test
mov
scas
nop
dec
in
jno
adc
mov
or
cmp
cmp
cmp
in
cld
mov
std
cs
vpxor
(bad)
sar
pop
repnz
bound
cmp
xor
pop
cmps
icebp
scas
jo
iret
xor
push
add
fstp
pop
outs
adc
(bad)
dec
and
iret
add
mov
adc
xor
test
and
sub
icebp
xlat
sti
hlt
cmps
dec
neg
sahf
and
xchg
xor
add
mov
adc
add
and
xlat
rcr
rol
jle
pop
and
sbb
mov
jmp
adc
mov
or
in
out
pushf
lods
es
and
inc
jecxz
sub
pop
sar
mov
fld
mov
out
sbb
dec
call
inc
mov
adc
push
dec
hlt
les
adc
jno
loopne
outs
lods
or
add
mov
clc
push
jb
cmps
into
jb
inc
xor
ins
in
or
scas
push
push
push
add
sahf
jmp
or
cmc
or
popa
xchg
sub
sub
mov
add
inc
cld
out
adc
addr16
xchg
dec
sti
retf
and
push
stos
ds
daa
fidivr
mov
mov
mov
jns
adc
in
mov
jnp
jnp
push
retf
lods
arpl
test
lods
xchg
movs
cmp
cmp
xchg
arpl
pop
add
cmp
xor
xor
push
xchg
jbe
in
fisubr
in
xchg
lock
not
lods
adc
popa
dec
add
mov
dec
cmp
sbb
test
sbb
(bad)
mov
sbb
push
push
lods
shl
add
fwait
add
scas
stc
fnstsw
pusha
fst
loopne
imul
lock
hlt
loope
jno
xchg
jle
xchg
fadd
and
sbb
(bad)
adc
les
pop
mov
jae
jmp
xchg
es
in
push
or
xor
iret
cli
adc
rol
xchg
mov
and
inc
cmp
das
inc
push
sub
jmp
enter
mov
xchg
mov
mov
xchg
xchg
jne
lds
fisubr
pop
mov
lahf
lock
mov
adc
pusha
inc
mov
fisttp
dec
sub
(bad)
pop
daa
or
pop
sub
push
xchg
retf
fdiv
enter
and
test
shr
and
in
out
lea
in
sbb
xor
dec
lods
pop
xchg
push
dec
cmp
leave
jmp
sub
(bad)
cmp
(bad)
cmp
jbe
enter
cmp
and
jnp
(bad)
pop
cld
and
xchg
sti
repz
add
pop
ins
jge
mov
add
push
fiadd
rep
sbb
inc
pop
inc
push
mov
hlt
and
mov
add
jne
xor
not
jns
inc
or
or
dec
scas
loop
pop
mov
retf
test
call
rcr
sbb
stos
mov
push
add
cdq
shr
test
add
inc
adc
aad
mov
sbb
xchg
inc
fsubr
sar
popf
rol
in
inc
xchg
leave
push
adc
aas
push
lods
dec
xor
inc
and
fadd
in
pop
mov
inc
sub
pop
int
mov
outs
or
jl
sub
outs
jg
add
scas
mov
mov
fiadd
jg
xchg
in
push
pop
jno
xchg
popf
fdiv
mov
fadd
bound
enter
pop
imul
adc
bound
loop
lahf
pop
mov
add
sbb
mov
rol
into
pop
inc
mov
inc
inc
outs
dec
(bad)
push
or
test
jge
in
fyl2xp1
add
dec
push
jne
jo
cmc
adc
cmps
shl
out
xchg
imul
dec
jp
add
push
in
xchg
adc
clc
das
push
xchg
stc
pop
retf
int3
outs
xchg
cmp
jp
leave
push
sbb
pop
add
fsubp
call
inc
adc
jmp
retf
cmp
mov
inc
enter
push
out
inc
xchg
pop
mov
mov
add
test
and
mov
fild
fisttp
mov
movs
lds
cwde
cmp
ja
push
sbb
icebp
push
jo
ss
adc
lods
jmp
lods
and
mov
lea
mov
and
test
cmp
xor
xchg
popf
cmps
ins
jo
push
or
rcl
out
call
test
cmp
push
inc
fidiv
popa
push
jae
popa
sbb
addr16
mov
or
repnz
mov
or
mov
jl
push
ror
ins
inc
fwait
leave
xlat
pop
cld
cli
adc
je
dec
and
push
cmp
push
jnp
mov
pop
repnz
xlat
adc
cmp
sbb
(bad)
outs
loope
in
adc
dec
rcr
mov
mov
add
dec
dec
not
cmp
sub
xchg
xor
and
lahf
adc
push
xor
sub
out
aam
mov
ret
dec
and
repnz
ins
xchg
mov
imul
in
sub
mov
repz
mov
ins
call
xchg
fwait
(bad)
mov
shl
and
add
mov
sbb
or
sbb
xor
mov
dec
xor
push
push
imul
test
and
jb
imul
cmps
push
jno
cdq
pop
mov
shl
into
add
in
mov
xadd
shr
xor
push
es
and
adc
pop
inc
popa
ins
sbb
mov
ret
mov
mov
repnz
lahf
xchg
je
dec
dec
in
sahf
cmp
sub
scas
xor
add
pusha
cmp
leave
xchg
inc
and
test
push
jb
xor
enter
stos
icebp
(bad)
lea
push
sub
call
pop
fst
jecxz
loope
outs
jns
lods
xchg
shl
in
out
mov
mov
and
bound
xchg
popf
mov
push
iret
fsub
js
fcmovne
outs
adc
and
add
bound
adc
fucomp
jmp
xchg
pop
loope
push
rol
add
mov
sahf
loop
adc
mov
cmps
ror
mov
and
sbb
stos
dec
inc
jmp
mov
push
jmp
sbb
and
in
mov
mov
or
inc
sub
jns
fld
adc
sub
aad
or
fst
mov
cmps
ins
je
mov
cdq
imul
cmp
add
shr
iret
and
xchg
int3
les
or
loop
fadd
ja
inc
jle
and
cmp
push
test
xchg
std
pop
retf
push
push
loope
std
out
sbb
xor
fs
jae
add
loop
movs
inc
cmp
dec
rol
retf
mov
xchg
imul
imul
dec
les
adc
push
in
adc
jbe
xor
retf
repnz
test
cmp
lods
loopne
fwait
fwait
sub
stos
push
outs
or
push
mov
sar
xor
jbe
add
xor
adc
movs
out
sub
sub
bound
pop
jo
shl
or
inc
fst
and
mov
adc
dec
out
jecxz
lahf
mov
jno
fdiv
out
xchg
jbe
mov
adc
push
test
adc
fs
dec
lea
(bad)
ret
cmp
xchg
imul
fidivr
lds
(bad)
test
mov
test
add
xchg
in
sub
shl
sub
mov
mov
mov
ss
inc
and
push
inc
repnz
(bad)
(bad)
sahf
add
out
sahf
mov
mov
xchg
cmp
jo
xor
add
or
sub
js
jmp
mov
and
or
add
and
mov
pop
jecxz
mov
adc
pop
jno
pop
gs
push
pop
(bad)
rol
xor
pop
push
jmp
test
cmp
jo
sahf
push
daa
out
aam
and
out
fisttp
pop
pop
mov
(bad)
pop
(bad)
sbb
iret
push
pop
cmp
xchg
sbb
mov
je
adc
mov
mov
xchg
call
popa
inc
jo
es
or
ror
lods
shl
sti
add
push
fimul
and
sub
das
sub
in
pop
cmp
xchg
pop
jecxz
mov
fimul
scas
std
adc
cmovs
sbb
xor
daa
into
jnp
(bad)
outs
jbe
sbb
xor
lds
pop
jecxz
sahf
call
fcom
pop
or
mov
imul
imul
push
or
xchg
jne
in
out
pop
or
push
das
mov
sub
pop
repnz
xchg
add
ja
dec
imul
test
sbb
imul
lds
lods
mov
lahf
sub
xor
and
sbb
inc
mov
cmp
adc
jl
jae
ds
(bad)
jmp
stos
js
and
mov
cmp
inc
addr16
mov
sub
mov
mov
dec
cmp
pop
(bad)
jnp
shufps
dec
mov
sbb
sbb
mov
stos
xor
mov
div
int3
dec
out
js
xor
mov
mov
movs
je
add
test
mov
inc
fistp
je
add
sbb
fwait
push
clc
jae
mov
fdiv
jmp
sbb
in
mov
push
xor
pushf
xbegin
mov
mov
jbe
mov
push
inc
lock
fcom
retf
and
(bad)
push
imul
mov
int
inc
pop
and
sub
cmp
xchg
ror
lds
jno
in
stos
in
lods
and
popa
fiadd
push
adc
shl
into
ds
(bad)
sbb
xor
fwait
xor
add
lock
and
(bad)
cmp
mov
iret
dec
mul
jmp
sti
mov
cmc
rcr
cwde
lods
mov
jl
int3
adc
(bad)
rcl
fadd
(bad)
adc
fdiv
dec
in
das
rol
add
or
in
mov
adc
std
xchg
leave
rcr
pop
outs
dec
xor
arpl
or
neg
sbb
mov
sbb
lahf
mov
pop
jp
retf
jmp
pop
ficom
ja
lock
mov
xor
push
(bad)
cdq
fst
mov
or
mov
pusha
lea
ds
popf
inc
in
dec
gs
sbb
ja
mov
outs
(bad)
in
dec
and
adc
(bad)
cdq
fst
xor
sbb
(bad)
or
arpl
push
xor
mov
sti
and
ret
xchg
pop
dec
inc
adc
xchg
dec
sbb
bound
xor
ret
test
fld
inc
idiv
outs
add
fs
test
jno
mov
cs
fsubr
add
icebp
retf
mov
cdq
nop
add
stos
push
add
arpl
ins
mov
mov
cmp
mov
enter
mov
cmp
jl
sbb
pop
mov
inc
push
or
mov
mov
adc
cld
cdq
fimul
mov
xchg
push
jbe
sbb
xchg
jecxz
xor
call
imul
into
sti
inc
gs
mov
xor
out
in
imul
dec
(bad)
ror
into
loope
sar
lea
das
or
out
out
jnp
mov
xor
add
pusha
hlt
arpl
pop
xchg
icebp
adc
loop
pop
sub
leave
mov
pop
pusha
cdq
or
les
das
pushf
mov
and
or
pop
push
fdivr
jae
imul
sub
xchg
(bad)
pop
(bad)
in
cld
dec
sbb
stos
enter
mov
cmp
scas
jg
pop
push
repnz
call
and
call
push
mov
cmp
mov
je
mov
movs
imul
rcl
ss
in
dec
int
ficomp
mov
pop
scas
xor
cmp
cmp
jns
cdq
adc
jae
into
or
movs
std
sahf
sbb
jge
std
xor
hlt
je
scas
add
aas
cmp
movs
inc
and
mov
sbb
movs
sub
jae
bound
loope
lods
cli
mov
mov
pusha
sub
std
push
pop
aad
xchg
dec
jb
fsubr
test
enter
lock
scas
and
push
jo
and
inc
lods
leave
imul
cmp
push
or
ja
mov
aam
jecxz
mov
stos
cmp
fmul
xlat
sub
mov
bndldx
ret
mov
xor
add
pop
jmp
pop
loope
lods
add
jg
scas
sub
stc
fcom
(bad)
mov
xchg
pop
scas
ffreep
dec
mov
call
outs
repz
pop
call
add
cmp
add
mov
mov
(bad)
ins
xchg
daa
xchg
dec
push
leave
or
adc
and
xchg
inc
push
icebp
mov
or
mov
loopne
(bad)
retf
lods
retf
enter
inc
cli
mov
mov
mov
add
pusha
scas
xor
mov
not
jl
and
add
iret
pop
sub
ret
sub
push
add
mov
das
repnz
xchg
stc
pop
xchg
mov
dec
xlat
jbe
pop
push
jbe
cmps
xchg
mov
shr
fs
ins
into
push
pop
stos
mov
ins
(bad)
pop
je
cmp
jae
inc
loop
dec
xchg
shl
aad
lods
mov
jge
xchg
jecxz
or
in
sbb
push
sub
cmp
test
rcr
and
cmp
(bad)
popa
inc
pop
lods
push
jbe
iret
adc
leave
dec
enter
dec
movs
jae
xor
loop
adc
ret
aas
scas
mov
scas
pop
push
sbb
add
fbstp
mov
xchg
in
lock
push
popf
xlat
loope
lahf
jno
pop
int
lods
mov
jno
mov
inc
enter
lds
in
inc
adc
lods
in
test
ret
xor
lods
sub
je
lea
cdq
cli
sti
fs
jp
fs
aaa
inc
nop
jmp
test
call
cmp
je
dec
cli
push
cmp
push
sub
sub
rcr
mov
cwde
imul
cmp
icebp
adc
cmc
call
pop
sub
add
sub
xor
mov
cmc
jne
push
cmp
and
pop
ret
pop
out
sub
mov
repnz
sbb
mov
dec
mov
ds
cmp
leave
sub
add
pop
ret
push
inc
loopne
lahf
xchg
sub
test
push
and
add
out
mov
mov
lea
jmp
stos
jmp
add
mov
iret
aas
xor
sub
test
loope
xchg
(bad)
je
xor
(bad)
popf
push
jno
push
loope
mov
loope
jmp
sub
inc
mov
test
pop
fwait
and
or
mov
or
mov
jge
push
or
jmp
fild
ja
enter
jnp
aaa
jge
fcomp
mov
shr
aad
xor
nop
fs
icebp
mov
into
shr
out
imul
mov
mov
mov
scas
sbb
(bad)
sti
sbb
scas
inc
fidiv
(bad)
sub
ret
not
mov
or
out
ja
int
gs
xchg
and
push
retf
frstor
pop
ss
addr16
mov
xor
hlt
fs
inc
mov
adc
fadd
xchg
ds
push
pop
stos
stos
xchg
arpl
retf
sub
sub
ror
jae
sbb
shr
lock
out
sbb
movs
aad
stc
fdivrp
call
sti
sub
push
loop
rol
add
rcr
nop
push
gs
ret
inc
arpl
sbb
inc
mov
cmp
dec
inc
in
daa
cs
push
loopne
test
mov
shl
pop
sbb
pop
xchg
gs
ja
sub
cmp
sti
cmp
adc
cwde
addr16
push
out
cmc
ja
xchg
(bad)
cmp
sub
sbb
ja
aad
cli
mov
add
xchg
out
fidiv
add
push
xchg
jp
loopne
aaa
xchg
lahf
arpl
xor
imul
scas
pop
sub
mov
stos
test
jno
loopne
sti
cmp
(bad)
stos
dec
popf
jmp
lock
xor
dec
xadd
and
adc
out
sbb
stc
inc
jge
or
fwait
or
gs
sub
rcr
test
sbb
xchg
sbb
das
clc
pusha
and
out
cs
ja
xlat
test
(bad)
dec
adc
pop
into
cmp
pop
sbb
push
(bad)
mov
and
pop
or
add
push
lahf
ins
push
inc
gs
test
dec
push
sti
les
je
sti
ss
repnz
add
pop
pop
outs
loop
popf
push
shr
or
mov
add
js
dec
test
bound
jmp
mov
sbb
addr16
add
sti
in
icebp
das
ja
jbe
(bad)
in
push
cmc
rcl
sub
shr
fcom
shl
repnz
inc
lds
mov
mov
pop
dec
(bad)
xor
sub
pop
jae
ret
jg
test
push
push
jge
dec
repz
xchg
mov
call
inc
pop
ss
cwde
adc
shl
xor
jnp
cs
jg
cld
push
or
and
clc
fidivr
fsubr
fld
push
inc
jno
scas
lods
fcmovnu
inc
aam
not
sbb
enter
retf
mov
xor
cmps
mov
cld
cmps
sbb
push
ins
ror
push
pop
inc
fstp
popa
jmp
mov
dec
aam
jbe
dec
stos
enter
outs
jmp
add
dec
test
xchg
sbb
mov
cmps
stos
jnp
in
(bad)
into
aas
aas
mov
jmp
mov
out
das
cmp
and
bound
in
es
adc
out
push
iret
mov
or
sbb
push
add
iret
or
xchg
jecxz
adc
pushf
(bad)
rcl
mov
sbb
pop
push
and
cdq
enter
mov
ficomp
push
mov
mov
add
xor
sbb
loop
dec
loope
pop
dec
int3
out
push
fwait
dec
jne
repnz
retf
stos
inc
pushf
fcmovnu
sti
rcr
add
in
mov
xchg
pop
inc
and
arpl
sahf
retf
and
sbb
cmp
and
xor
sbb
fwait
mov
or
ja
xor
sub
mov
(bad)
shr
(bad)
dec
call
sbb
add
adc
popa
or
mov
in
mov
mov
inc
add
mov
test
cs
call
outs
lods
pop
or
inc
stos
call
jb
cmp
mov
pop
adc
js
mov
sbb
aas
bound
pop
add
test
fld
cmp
sbb
mov
adc
mov
pop
mov
jo
sub
xchg
out
cmp
sti
ret
mov
shl
out
sbb
cmc
scas
sbb
pop
nop
stos
icebp
mov
sahf
mov
ss
mov
mov
retf
adc
and
push
adc
retf
mov
test
or
adc
inc
adc
imul
jnp
inc
repz
mov
sar
inc
mov
mov
cmp
shl
call
pop
dec
loopne
cmp
in
push
sub
inc
dec
sbb
shr
fsubrp
ins
iret
mov
loope
cmp
(bad)
xor
push
(bad)
mov
mov
add
mov
cmp
std
xor
inc
fld
mov
cmp
mov
add
aaa
int3
lds
mov
call
mov
idiv
aas
xchg
scas
arpl
adc
movs
imul
pop
movs
mov
sar
pop
fld
je
inc
jnp
lahf
add
(bad)
or
fisttp
movs
mov
shr
xor
aam
mov
pop
call
mov
es
std
(bad)
jae
mov
(bad)
dec
fcmove
inc
fcomp
pushf
pop
push
test
iret
add
push
inc
xchg
cdq
jnp
repz
xor
fst
pop
jmp
ds
call
xchg
ss
mov
out
jae
and
loopne
sbb
fldenv
test
fistp
xchg
fst
dec
dec
xor
dec
dec
jmp
pop
xor
mov
xchg
sub
push
adc
inc
icebp
inc
pop
pop
scas
dec
loope
les
retf
jg
cmp
inc
xchg
cli
jecxz
(bad)
fmulp
push
ret
js
push
out
pop
xor
jg
inc
rcl
sub
(bad)
mov
dec
pop
lock
fsubr
xor
xor
fadd
xchg
xchg
mov
and
sti
movs
pusha
aad
dec
(bad)
and
dec
lods
sub
rcr
cmp
fdivr
xchg
stos
adc
cwde
cmps
fisttp
daa
xchg
add
test
xor
jno
add
jae
popa
pop
call
dec
into
ficom
lahf
mov
dec
fist
xor
int3
cmps
xor
(bad)
idiv
data16
bound
jmp
test
loop
inc
jg
mov
sub
mov
out
loopne
std
jmp
sub
ret
mov
inc
jl
pop
jg
cmp
out
inc
fwait
lea
test
inc
sbb
test
and
lods
loopne
mov
lds
mov
les
mov
mov
int
in
ret
push
movs
mov
aam
push
ins
gs
popa
dec
jae
xor
fsub
mov
pop
adc
inc
cmp
pop
cmc
jmp
and
scas
push
add
jo
js
xchg
outs
push
xor
addr16
mov
mov
fcomp
cmps
sub
adc
xchg
or
jns
out
hlt
inc
jp
mov
and
test
add
clc
test
push
jnp
in
or
aam
jl
jmp
add
jb
out
mov
jae
cmc
pop
sub
iret
adc
and
mov
stos
mov
xor
scas
inc
and
mov
xchg
test
retf
das
imul
push
cwde
adc
mov
fucom
mov
call
imul
add
pop
(bad)
mov
cs
daa
xor
cmp
dec
pop
icebp
in
pop
jl
mov
push
clc
push
cmc
nop
mov
in
jbe
aam
lea
aas
fadd
mov
add
(bad)
out
add
inc
loopne
movs
das
sub
jge
call
cmp
sti
loopne
test
cld
pop
pop
push
int3
sbb
mov
dec
es
ins
fadd
aam
js
sbb
jne
or
pop
mov
or
mov
sbb
int3
in
sbb
fild
out
add
out
mov
lahf
mov
xor
nop
cmp
inc
push
lods
sub
jecxz
xchg
jnp
in
pop
mov
popf
mov
les
mov
or
push
stos
das
push
pop
pop
adc
jb
push
dec
adc
and
push
jle
in
sub
les
pop
add
xchg
push
sub
sub
xchg
dec
mov
xchg
push
stc
add
inc
mov
jcxz
(bad)
ds
or
add
add
loope
lods
mov
cmp
push
and
cmc
movs
add
sahf
rcr
mov
je
mov
call
add
stos
sti
jge
add
xor
adc
sbb
in
pusha
cwde
xchg
jb
fcmovu
js
out
hlt
movs
test
arpl
imul
rcr
sbb
mov
out
xlat
das
mov
sbb
xchg
fmul
xor
add
dec
or
mov
and
in
or
pop
ja
out
loop
xlat
or
pop
das
jns
cmp
mov
bound
mov
mov
bnd
push
sub
jl
adc
dec
rcl
mov
cld
pusha
mov
push
xchg
shl
scas
add
jg
mov
xor
inc
inc
loope
daa
cdq
das
jmp
mov
div
jmp
pop
leave
lea
inc
shl
scas
aaa
cmp
shl
adc
cmps
inc
movs
xor
jmp
(bad)
jmp
cmp
adc
mov
fimul
int
add
mov
mov
jae
rol
sbb
movs
jbe
int
mov
ret
or
stos
jmp
test
shl
rcr
repz
ret
push
cdq
retf
fld
xchg
cmp
sahf
mov
je
inc
fisub
and
mov
sbb
pusha
icebp
iret
pop
and
out
das
lods
sub
mov
cmp
sbb
xchg
das
mov
sahf
xor
mov
ins
mov
mov
fcom
sbb
sub
mov
push
pop
retf
in
shl
xor
fist
add
mov
adc
push
arpl
mov
add
rcr
jb
stos
ins
loopne
out
ja
push
imul
lods
add
cmp
sbb
jmp
pop
adc
stc
iret
inc
out
sub
rcl
jge
xor
xchg
pop
ins
adc
addr16
or
dec
sbb
mov
cli
and
call
and
add
cmp
and
iret
retf
pop
das
or
loopne
mov
int3
sti
call
cld
mov
cmp
xor
jb
cmp
xchg
cmp
mov
(bad)
stos
ins
add
xor
aad
inc
mov
call
mov
fcom
push
mov
xor
push
test
out
jno
push
bound
jle
pop
adc
shl
or
or
popf
pop
cs
jne
iret
push
(bad)
push
bound
push
xor
aaa
mov
mov
mov
or
pop
jg
xor
mov
add
test
xchg
movs
xchg
aaa
cmp
jmp
sub
stc
sbb
cmp
push
jmp
push
cld
iret
push
mov
dec
aaa
jns
and
sbb
shl
test
fnstenvw
push
dec
stos
mov
dec
mov
jl
cmp
and
lods
mov
push
or
je
rcr
aas
jae
and
dec
push
xor
js
mov
in
and
jnp
ins
mov
adc
nop
adc
int3
fwait
mov
ins
xchg
sbb
add
push
mov
sysret
neg
dec
jno
repz
pop
test
div
xor
scas
and
jmp
les
push
add
mov
jmp
out
out
out
out
fistp
mov
(bad)
jmp
(bad)
movs
mov
xor
(bad)
xchg
loopne
imul
adc
ja
mov
and
push
ret
idiv
jecxz
xor
lahf
xchg
sub
xor
rcr
addr16
clc
aaa
mov
inc
xchg
fistp
out
add
push
xlat
fcomp
push
mov
mov
adc
dec
fwait
lds
fst
shl
js
dec
fwait
and
lds
sub
outs
adc
add
sar
dec
lock
inc
idiv
pop
fdiv
push
cmp
dec
sbb
mov
rcl
fwait
pop
fsubr
sbb
sub
pop
push
js
sub
push
data16
sub
movs
gs
test
mov
mov
lea
lods
fsubr
shl
icebp
xchg
nop
sti
pop
jno
imul
dec
fstp
movs
pop
dec
jmp
daa
mov
(bad)
call
sub
enter
inc
jg
data16
fs
aas
hlt
cmp
inc
xor
adc
jle
lock
and
dec
(bad)
cli
dec
sbb
ror
xor
popf
lods
pusha
ins
dec
push
jmp
pusha
inc
movs
mov
pop
stos
push
fs
mov
mov
cmp
ss
jno
es
jecxz
jle
stos
pop
mov
xor
sahf
sub
mov
(bad)
pusha
loop
cmp
mov
dec
add
xor
mov
sub
and
jl
popa
mov
cmc
add
aad
cmp
push
adc
xchg
mov
sub
cdq
mov
repnz
inc
push
cmp
popa
and
cmp
push
ins
sub
ret
mov
adc
test
mov
imul
out
movs
pop
ret
xor
cmc
stos
cmp
sbb
mov
mov
fdiv
mov
push
pop
leave
jle
pop
add
rcr
and
and
sar
fld
aas
or
cwde
jle
imul
das
loop
or
sub
jg
bound
(bad)
or
or
int3
or
mov
test
xchg
neg
xchg
mov
int3
cmp
push
inc
out
rol
or
lods
rol
fst
out
mov
push
xor
out
call
(bad)
push
push
out
mov
cld
inc
stc
movs
adc
out
xchg
pop
cmp
xchg
out
cmp
add
das
mov
les
mov
inc
pcmpgtd
mov
sbb
or
jl
push
mov
mov
sbb
jne
out
and
inc
mov
and
pop
jno
inc
gs
movs
adc
cli
inc
dec
(bad)
xlat
or
scas
xchg
and
fiadd
inc
jmp
int3
xlat
push
addr16
rcl
and
dec
cmp
sbb
mov
rcr
lea
mov
pop
and
mov
sar
hlt
fs
dec
xchg
sub
and
xchg
test
idiv
jge
xor
movs
sbb
dec
mov
cmp
dec
dec
test
mov
sub
imul
push
cmc
dec
xor
and
sbb
sbb
call
xchg
pop
sbb
loop
dec
mov
enter
xchg
mov
xchg
inc
dec
mov
jg
pop
jmp
(bad)
outs
hlt
sbb
cmp
mov
sbb
add
cmps
inc
push
mov
imul
push
lock
in
imul
and
cmc
sub
mov
and
inc
jnp
cmp
mov
pop
dec
popa
dec
sbb
inc
jl
xor
cs
jmp
push
hlt
pop
push
lods
fwait
shr
jno
cmp
neg
outs
or
call
popa
or
imul
mov
lea
mov
in
enter
bound
pop
mov
cmp
cmps
shr
jg
shl
push
mov
scas
ds
out
jp
and
sbb
out
dec
pop
cs
or
cmp
movs
sbb
test
jnp
adc
dec
mov
loope
or
mov
jbe
push
add
scas
add
add
aad
ins
mov
mov
inc
fnstsw
dec
adc
loop
pop
sbb
ss
xor
ret
push
popf
inc
int
add
adc
mov
jp
lock
dec
imul
xor
xchg
mov
mov
mov
push
sub
in
mov
push
leave
jnp
xor
sub
cwde
lods
xor
jmp
(bad)
fdiv
mov
scas
or
sar
jmp
xchg
mov
mov
cs
in
nop
jp
adc
ins
js
jno
fs
cld
xchg
inc
or
pushf
jne
xchg
popa
hlt
repz
call
lods
sbb
(bad)
das
retf
fnstenv
sub
mov
and
imul
pop
cmp
cdq
mov
daa
in
cld
jl
dec
cmp
enter
pop
out
xchg
rcl
arpl
jne
ror
lea
test
imul
sub
mov
add
adc
mov
rol
hlt
ins
sbb
dec
pushf
and
xchg
cmp
aaa
iret
pop
cmp
push
adc
mov
cmc
test
fist
(bad)
dec
pop
ins
fcomp
xlat
jecxz
push
cmc
mov
test
xchg
mov
jle
mov
out
inc
ficom
mov
cmc
fiadd
(bad)
loope
lods
movs
xchg
sbb
repz
push
xchg
cwde
adc
lahf
mov
cwde
inc
xor
nop
scas
lods
push
sub
mov
pop
shl
add
ins
test
sbb
pop
out
inc
jne
inc
pusha
pop
ja
mov
and
push
pop
ins
adc
mov
inc
enter
stos
add
jno
in
add
or
and
adc
stc
and
ret
or
xor
retf
clc
nop
aam
(bad)
cmp
cdq
cmp
adc
call
sar
data16
mov
jno
adc
jno
outs
fimul
add
push
loopne
or
push
mov
int
das
xchg
fld
fistp
or
pop
sbb
pop
dec
inc
cli
jbe
xchg
xlat
std
scas
cmp
movs
mov
shl
fiadd
outs
les
(bad)
mov
pop
dec
stos
popf
dec
or
neg
xlat
(bad)
xor
aas
mov
jl
fidivr
mov
pop
xchg
sbb
jbe
mov
stc
pop
loop
cs
dec
or
pushf
mov
fsub
inc
mov
xor
leave
and
mov
and
pop
push
aas
mov
xchg
pop
lods
jmp
rcr
lds
and
pop
dec
imul
add
push
jne
imul
inc
imul
mov
xchg
xacquire
(bad)
sahf
loope
aam
xor
xchg
push
or
ins
mov
mov
vcvttps2dq
popa
out
iret
xor
add
dec
sub
(bad)
jno
std
pop
cld
cmp
mov
retf
(bad)
or
ins
mov
or
call
movs
xlat
jge
xchg
pop
xor
dec
(bad)
mov
push
mov
jmp
mov
xchg
movs
in
scas
aam
rcr
fbstp
jnp
and
pop
add
and
bound
mov
rcl
int
(bad)
mov
mov
sub
jle
movs
dec
pop
xor
leave
call
aas
adc
jno
sbb
(bad)
(bad)
bound
lahf
outs
sti
fiadd
sub
jge
mov
jle
out
retf
adc
aad
fs
cmc
sbb
loope
mov
push
vpor
sub
sbb
adc
xor
lock
jl
fucomip
fiadd
stc
gs
iret
sbb
add
aam
mov
xor
ins
rcr
pop
xor
push
adc
push
adc
mov
sub
ficomp
inc
pop
stos
dec
sbb
xchg
sbb
mov
ins
add
jmp
xlat
cli
jmp
mov
mov
jns
hlt
ss
mov
inc
(bad)
dec
inc
add
into
cmp
imul
jbe
mov
cmp
movs
xor
test
sbb
call
push
inc
sub
jo
inc
stos
adc
mov
in
sahf
neg
repz
and
sub
sbb
mov
mov
stos
sub
ss
in
jle
xchg
cmc
push
sub
xchg
(bad)
out
cmp
cmc
sub
sbb
push
jbe
adc
mov
inc
inc
jecxz
mov
add
jno
dec
jo
xchg
out
pop
popa
retf
sahf
fcomp
mov
or
call
push
ds
shl
cmovs
ja
mov
sub
icebp
or
nop
sub
stos
xor
pop
pop
fdiv
in
movs
std
cmps
sbb
xchg
pop
shl
leave
dec
rcl
mov
adc
enter
or
push
aad
(bad)
stc
sub
dec
fbstp
ins
aaa
bound
or
addr16
inc
push
cmp
pop
adc
fbld
es
or
mul
mov
cmp
xor
mov
mov
and
mov
ss
adc
cwde
pushf
and
xor
jecxz
sar
das
and
mov
mov
outs
retf
stc
adc
sub
xor
pop
rol
or
push
push
in
sub
mov
(bad)
in
adc
ficomp
mov
dec
cmp
fs
jge
enter
out
in
clc
shl
lahf
lods
aaa
ds
inc
sub
xor
xchg
inc
ret
push
div
fimul
mov
ins
(bad)
pusha
and
int
stos
jl
std
push
sub
ins
xor
or
jp
out
jp
fnstsw
push
fsub
(bad)
adc
mov
or
xor
retf
xor
push
aaa
or
pop
repnz
push
jp
fiadd
movs
nop
retf
int
shl
xor
push
jne
add
ins
jo
jecxz
shl
scas
dec
push
or
int
sub
out
push
movs
dec
popa
mov
xor
ror
jne
sar
ret
mov
cld
and
adc
cmp
dec
xchg
in
fistp
pandn
lods
(bad)
cmc
mov
jb
mov
paddusw
cdq
adc
lods
leave
pop
and
jo
data16
mov
mov
and
je
push
mov
xchg
movs
lea
jno
xor
scas
test
aas
xor
in
push
pop
push
mul
fimul
fiadd
adc
iret
cmp
add
mov
stc
jl
frstor
push
xchg
jo
jae
and
leave
lock
and
or
xchg
xor
fld
and
cld
mov
movs
xchg
adc
rcl
idiv
xor
fistp
xchg
loope
or
call
adc
cmp
push
iret
addr16
inc
int3
jle
mov
sets
aas
mov
test
rol
add
add
add
add
add
add
add
and
add
add
and
test
add
add
xor
add
add
and
test
add
add
inc
inc
add
add
and
sub
add
add
add
or
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
inc
add
add
add
popa
add
inc
add
ins
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
ins
add
je
imul
add
add
add
mov
mov
add
je
jb
imul
inc
add
ins
add
dec
add
data16
add
xchg
add
add
add
add
add
add
add
add
bound
xor
add
dec
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outs
add
add
jae
and
push
add
add
je
add
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
or
add
dec
add
je
add
outs
add
ins
add
popa
add
add
add
jo
jae
add
add
js
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
and
add
cmp
or
add
dec
add
imul
outs
add
ins
add
imul
outs
add
ins
add
add
jne
jo
jae
add
add
js
add
add
or
add
push
add
outs
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
jae
jae
add
bound
ins
add
and
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
mov
ins
ins
and
jb
imul
xor
and
arpl
imul
sub
aas
ds
ins
jbe
cmp
jae
ins
bound
ins
popa
outs
imul
jb
imul
xor
and
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
js
ins
outs
jae
popa
jae
jbe
cmp
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
js
ins
outs
jae
popa
jae
jbe
cmp
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
js
ins
outs
jae
js
imul
ja
ja
ja
outs
jb
das
xor
xor
das
pop
dec
dec
push
arpl
ins
popa
sub
popa
outs
arpl
ds
popa
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
ins
gs
jo
ins
imul
cs
jo
and
ds
je
jne
je
outs
outs
and
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
ins
gs
js
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
or
and
and
and
sub
inc
and
outs
imul
jo
imul
and
and
and
and
and
and
and
jne
ja
outs
je
je
and
popa
outs
and
and
outs
outs
ja
and
gs
inc
arpl
jne
je
inc
outs
outs
je
outs
ins
and
gs
and
jo
popa
arpl
je
and
and
and
and
and
and
jno
gs
gs
js
arpl
imul
ins
and
fs
je
and
and
and
and
ins
ins
outs
ja
outs
addr16
and
and
and
and
gs
gs
gs
js
arpl
imul
ins
and
ins
gs
ins
cmp
outs
jbe
imul
and
inc
arpl
jae
cmp
jae
and
das
ds
and
and
and
gs
gs
gs
js
arpl
imul
ins
and
ins
gs
ins
cmp
jne
jb
inc
fs
imul
je
jb
and
inc
arpl
jae
cmp
jae
and
das
ds
and
and
and
gs
gs
gs
js
arpl
imul
ins
and
ins
gs
ins
cmp
push
jbe
imul
jne
inc
arpl
jae
cmp
jae
and
das
ds
and
and
and
and
and
and
arpl
jns
outs
and
jno
gs
gs
js
arpl
imul
ins
and
fs
ins
ins
and
popa
bound
imul
and
imul
imul
jp
je
outs
outs
cs
and
and
and
and
and
and
jne
ja
outs
je
je
and
imul
ins
and
and
imul
imul
jp
je
outs
outs
and
jb
bound
imul
and
and
and
and
and
and
ins
jo
je
bound
imul
and
gs
and
and
jno
gs
gs
js
arpl
imul
ins
and
fs
and
and
and
and
and
and
and
cmp
gs
gs
gs
js
arpl
imul
ins
and
gs
cmp
jne
jb
inc
fs
imul
je
jb
and
inc
arpl
jae
cmp
jae
and
das
ds
and
and
jb
jno
gs
gs
jb
jbe
ins
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outs
outs
ds
or
and
outs
ins
jo
je
bound
imul
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
jo
je
bound
imul
or
and
jo
ins
imul
ds
and
and
sub
ins
imul
popa
ins
ins
and
outs
outs
ja
and
jb
imul
popa
je
je
imul
imul
and
and
imul
outs
and
jb
and
je
and
outs
outs
ja
and
ins
ins
and
je
ins
popa
je
arpl
ins
jns
jae
ins
arpl
push
jae
and
ins
jo
je
bound
outs
jbe
jb
outs
ins
outs
je
sub
or
and
and
sub
and
jne
and
jo
imul
and
and
imul
outs
and
jb
and
je
and
outs
outs
ja
and
sub
jne
arpl
ins
outs
je
je
and
ins
ins
outs
ja
outs
and
jo
outs
jb
gs
push
and
fs
and
and
and
cmp
sub
jo
outs
jb
gs
push
and
cmp
xor
cmp
popa
sub
sub
sub
sub
xor
xor
jge
das
ds
and
and
and
or
and
popa
jo
ins
imul
ds
das
arpl
jo
je
bound
imul
or
and
popa
bound
je
gs
gs
outs
jb
push
imul
arpl
ins
outs
outs
and
outs
je
outs
ins
jae
popa
outs
and
ins
outs
addr16
sub
outs
outs
ja
and
and
and
gs
and
and
cmp
sub
gs
outs
fs
arpl
or
and
gs
outs
fs
je
jae
gs
bound
or
and
and
jae
gs
bound
fs
je
je
or
and
and
and
and
gs
xor
and
and
and
and
and
ins
gs
jb
jae
data16
push
imul
inc
outs
ins
ins
outs
outs
sub
jb
ins
jae
or
and
and
and
and
jb
imul
xor
xor
xor
or
and
and
and
and
outs
arpl
jae
jb
jb
push
je
jb
cmp
or
and
and
and
and
and
bound
dec
gs
outs
imul
and
xor
xor
xor
arpl
xor
or
and
and
and
and
addr16
addr16
or
and
and
and
and
ds
and
fs
outs
fs
je
jae
gs
bound
or
das
fs
outs
fs
arpl
sub
or
jae
jbe
cmp
jae
ins
bound
or
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
add
push
gs
imul
add
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
inc
push
inc
inc
push
mov
add
jae
add
add
mov
mov
repnz
(bad)
jbe
js
inc
mov
jb
mov
pusha
js
xchg
adc
mov
test
cwde
scas
cmp
retf
test
cmp
aas
test
mov
outs
lods
outs
mov
es
(bad)
mov
or
sahf
out
xchg
jo
(bad)
lds
scas
inc
mov
fnsave
adc
cwde
push
jo
mul
fucompp
sub
loop
popf
test
pop
adc
pop
push
inc
cdq
rcl
sub
add
inc
add
ret
jle
daa
stc
sbb
jge
cmps
inc
cmp
cmp
adc
call
outs
(bad)
pop
mov
data16
ret
shl
ror
push
jecxz
or
aam
xor
inc
loop
or
or
cmp
push
mov
inc
jge
rol
nop
into
jge
cmc
and
leave
in
adc
jns
xchg
les
sti
mov
jle
jne
dec
outs
pop
mov
loopne
sub
pop
cld
push
push
mov
mov
pop
xchg
mov
push
lods
in
test
iret
retf
xchg
leave
adc
and
iret
movs
push
adc
inc
inc
and
add
ins
push
ss
xlat
push
and
xchg
aaa
xor
sbb
aad
jle
mov
mov
xchg
jmp
xor
inc
xchg
xchg
xor
xor
in
sub
loopne
arpl
adc
rcl
adc
dec
pop
scas
ins
(bad)
pop
pop
jo
jne
mov
add
call
int
das
idiv
adc
ss
ins
push
push
jnp
rol
mov
pushf
mov
sbb
pop
out
bound
xchg
dec
sar
imul
jb
jb
std
push
stos
es
sub
lea
xchg
popf
repz
xchg
jnp
int
addr16
mov
xchg
push
mov
(bad)
bound
pop
and
test
mov
fld
gs
jnp
(bad)
jmp
pop
jnp
jmp
neg
fiadd
and
clc
call
sub
add
cmc
fild
mov
ins
aaa
imul
(bad)
ror
sbb
arpl
jge
jl
inc
int3
sahf
xor
mov
add
cmp
xchg
xchg
fild
in
es
add
mov
xchg
retf
mov
shr
das
aaa
loop
(bad)
out
cmp
sti
loopne
into
call
ret
enter
ja
push
loop
out
retf
push
repz
cmp
push
arpl
fnstcw
aas
mov
ja
fmul
ins
test
jne
xchg
out
dec
aas
popa
jno
jmp
imul
xor
aas
in
mov
dec
pop
xor
or
dec
inc
xchg
add
retf
mov
cld
popa
xchg
jb
xchg
and
(bad)
leave
nop
fsubr
xchg
out
dec
retf
dec
xlat
ficom
sub
sub
not
shl
jae
jne
in
sub
sub
inc
mov
ret
test
popf
retf
sbb
scas
cdq
add
or
fdiv
jp
cmp
lahf
push
leave
dec
pop
jge
popf
lahf
xor
pop
jmp
imul
mov
fnsave
jns
push
ret
inc
retf
fmul
inc
in
push
jg
dec
cwde
loope
pop
sti
or
fld
add
iret
fidivr
push
sub
dec
pop
adc
jp
popf
pushf
cmp
mov
sub
mov
punpckhbw
jns
add
lahf
loop
fcomip
pop
rcl
xor
push
push
sbb
sahf
das
std
cmps
shrd
mov
fdivr
cdq
inc
mov
daa
or
retf
jae
xchg
add
cmp
sub
sbb
or
and
movs
fisub
mov
push
(bad)
das
jge
test
push
rcl
pop
push
or
dec
add
stc
pop
ss
gs
sbb
push
xor
outs
cmc
mov
mov
xchg
shl
and
daa
cmp
sbb
imul
and
inc
sub
retf
jg
xor
aaa
jnp
jbe
dec
adc
loopne
mov
mov
mov
xor
aas
pushf
mov
cmp
mov
int
mov
pop
pop
rep
outs
arpl
sbb
push
gs
pop
scas
jno
mov
fs
push
ret
dec
xchg
jmp
call
pushf
add
xor
jno
pop
add
ret
sahf
add
push
rcl
mov
add
ss
push
pop
push
xor
xor
jg
rcr
adc
in
inc
dec
dec
or
ds
pop
cs
or
mov
mov
sbb
ins
jmp
mov
cmp
outs
mov
imul
add
dec
hlt
mov
and
push
mov
imul
into
sbb
dec
add
push
fs
test
inc
and
lahf
sub
push
loopne
sub
dec
leave
cmp
rol
pop
lea
pop
sti
icebp
pop
std
mov
cld
pop
test
pop
ja
hlt
arpl
imul
and
(bad)
jb
add
pop
fild
pop
sahf
jle
push
sbb
cmp
fcmovnbe
jb
gs
sbb
cmp
sahf
dec
cmps
push
inc
outs
jns
sahf
push
cmp
xchg
pop
or
mov
sbb
loopne
inc
sub
outs
movs
sub
je
fptan
jns
and
xchg
fmul
outs
mov
xor
addr16
jnp
mov
push
call
mov
aaa
adc
dec
imul
pop
adc
out
cmp
pop
ds
imul
retf
jle
sar
fs
jmp
jo
hlt
out
push
mov
xchg
cmp
mov
aad
mov
inc
loopne
pop
fidiv
ins
outs
lods
jmp
inc
adc
xchg
gs
repnz
enter
jecxz
cmps
cmp
xor
fidiv
inc
cmps
out
xor
fldcw
cld
dec
add
outs
jmp
cs
mov
push
mov
(bad)
push
cld
sub
aad
inc
push
pop
add
stos
dec
dec
(bad)
fld
pop
jns
stc
fcomp
dec
add
and
push
popa
fcom
and
aas
(bad)
aas
fs
mov
and
das
dec
push
mov
out
xor
popa
ss
div
(bad)
into
jnp
aad
mov
imul
mov
loope
and
adc
out
out
pushf
out
pop
xor
fstp
ds
or
or
mov
or
cli
mov
int3
les
(bad)
pop
inc
jg
mov
jp
cli
push
ds
idiv
or
and
adc
pop
inc
sub
imul
push
dec
call
pop
mov
pop
pop
mov
rol
mov
cmp
push
mov
mov
(bad)
outs
inc
mul
inc
adc
test
arpl
mov
cmovno
repnz
les
fbstp
sub
pushf
mov
jae
in
cmp
stos
sbb
shr
push
cmp
dec
xor
jae
gs
adc
pop
cmc
jb
(bad)
sti
test
aam
out
call
inc
(bad)
(bad)
in
pop
retf
ja
inc
add
add
push
leave
add
retf
pop
aad
cmps
mov
in
hlt
push
outs
cmp
lods
fisub
sahf
jl
aas
push
outs
dec
xchg
mov
inc
or
adc
sub
sbb
sub
outs
cmp
fist
mov
(bad)
push
addr16
out
cmps
push
aam
xchg
jae
call
ret
aaa
or
inc
in
sbb
loopne
stc
sub
or
sub
loop
cmps
pop
jne
daa
(bad)
out
inc
xchg
rol
(bad)
in
inc
inc
test
call
inc
jg
nop
pop
sub
or
push
push
sbb
in
mov
cdq
xor
shr
xor
cld
push
push
and
aam
pop
cmp
or
push
int3
leave
sbb
sar
adc
(bad)
int3
xor
sbb
iret
mov
mov
stos
mov
fs
push
dec
and
out
mov
seta
dec
xlat
ret
add
mov
dec
xor
test
push
fs
mov
adc
push
and
dec
dec
cmp
pop
fst
(bad)
adc
scas
fwait
jo
cwde
dec
pop
dec
iret
mov
std
fstp
movs
das
sahf
push
js
cmp
mov
imul
add
push
(bad)
stos
mov
idiv
jb
and
dec
xchg
xchg
mov
retf
xor
adc
jb
fwait
pop
xor
cmp
push
fadd
sub
es
inc
hlt
loopne
sbb
aam
gs
out
cmp
mov
into
retf
aam
test
sbb
jmp
sbb
sbb
loopne
mov
sbb
adc
pop
pop
or
sti
ss
rol
dec
dec
pop
and
(bad)
and
lds
push
lahf
xchg
rcl
inc
aad
test
inc
rcl
in
xchg
inc
inc
mov
loopne
cmp
mov
fisub
jb
ins
fstp
push
push
stc
shl
sbb
aas
sub
adc
jp
push
jae
jmp
cs
or
and
fs
test
fist
outs
arpl
outs
das
xchg
repz
adc
clc
xchg
or
push
test
(bad)
push
inc
cmp
sub
adc
jle
test
sti
in
scas
or
ror
test
or
fwait
pop
mov
add
xor
push
pusha
mov
out
mov
mov
lods
mov
xchg
lahf
inc
xor
or
loope
xchg
enter
repnz
call
daa
jno
jno
mov
(bad)
and
cmc
stc
lock
inc
push
pop
and
in
cmp
add
std
aad
push
fwait
inc
pop
out
push
xor
in
retf
scas
mov
mov
and
scas
call
dec
js
stos
lock
dec
cmp
adc
inc
fnstenv
out
(bad)
pop
movs
ds
repnz
sub
xor
push
outs
hlt
mov
lock
push
lahf
pop
jnp
gs
stos
push
xchg
lods
jbe
mov
jle
cs
adc
adc
mov
loope
rol
in
inc
jmp
push
popf
cmps
inc
jle
sar
push
jb
aam
pushf
mov
inc
ret
dec
loopne
cmp
push
cmps
(bad)
push
in
jl
nop
movs
(bad)
(bad)
adc
push
xor
lock
ds
cmp
or
cld
inc
inc
push
hlt
cmp
mov
fadd
repz
stos
call
push
cli
or
xor
xor
add
adc
bound
or
and
lods
cs
ret
and
out
dec
mov
push
and
es
ins
jne
mov
stos
push
pop
mov
jbe
dec
call
fadd
hlt
sub
mov
mov
mov
stos
push
leave
lock
push
push
fstp
xor
push
ss
mov
jge
push
arpl
mov
add
adc
mov
dec
or
lea
les
movs
dec
in
mov
loope
stc
mov
rep
mov
push
aaa
mov
jmp
jnp
push
xor
imul
adc
add
sahf
js
je
push
push
les
loop
into
xor
fist
cmc
out
add
lods
fimul
xchg
sbb
dec
es
lods
push
aaa
jae
(bad)
sbb
(bad)
data16
dec
sub
pop
mul
push
mov
imul
inc
mov
fidiv
jle
hlt
push
jmp
lods
cmp
adc
inc
(bad)
jp
and
jns
outs
add
or
nop
add
add
cmp
dec
repnz
xchg
push
xor
sbb
das
dec
stos
fiadd
xchg
fnstcw
pushf
call
mov
jno
push
imul
cld
adc
and
add
or
jbe
xchg
mov
enter
push
cmp
arpl
mov
fld
loop
dec
push
nop
xchg
adc
inc
add
inc
or
mul
pop
inc
mov
push
mov
mov
pop
pusha
test
add
and
je
mov
inc
ds
sub
or
test
xchg
clc
das
dec
outs
dec
sbb
adc
and
mov
inc
nop
in
xor
fs
mov
(bad)
cmps
mov
pop
in
and
stos
cmp
sti
xchg
and
pop
mov
(bad)
mov
jmp
icebp
mov
mov
mov
aam
mov
and
fld
cld
push
adc
and
shr
xlat
adc
mov
jae
xor
sub
jmp
inc
mov
cld
bnd
out
mov
lods
add
xchg
fiadd
jne
iret
fldcw
loopne
cs
ins
out
add
(bad)
and
popa
(bad)
xchg
xchg
stos
sbb
push
ficom
mov
xchg
mov
add
mov
call
or
outs
dec
arpl
scas
iret
adc
jmp
xchg
add
bound
ret
and
sub
test
cmp
shl
jmp
or
or
jns
mov
das
and
cs
inc
in
test
sbb
ret
ins
call
pop
xor
cmc
cmps
jl
jno
fcmovu
xor
mov
nop
mov
inc
mov
(bad)
adc
push
inc
shr
xchg
sbb
mov
xchg
mov
cli
ror
cmp
pusha
jecxz
les
ins
rcl
(bad)
jmp
sub
jge
mov
sbb
mov
int
and
in
push
dec
movs
mov
sar
nop
or
out
movs
sbb
jg
lock
cmp
jmp
fadd
(bad)
nop
imul
xchg
loope
mov
aas
xchg
call
jne
mov
in
and
or
call
js
ds
cli
add
mov
add
sbb
jg
or
push
movs
int
xchg
ins
and
cwde
xchg
in
push
push
sbb
lds
mov
int3
and
out
std
and
daa
cmp
dec
ins
xor
mov
inc
movs
retf
movs
std
stos
pop
(bad)
xchg
mov
ins
ficom
imul
bnd
out
mov
add
mov
out
fist
adc
(bad)
sbb
lods
out
mov
or
jbe
imul
in
adc
cmp
inc
test
jg
xchg
or
mov
fcom
std
pop
cld
lahf
shl
xchg
in
fwait
dec
repnz
adc
xor
xor
jno
and
mov
push
dec
js
popf
adc
mov
add
cld
test
xor
mov
in
loope
retf
mov
xor
test
inc
and
mov
call
test
sahf
mov
ret
push
mov
sub
ss
cmp
mov
cld
aaa
rcr
cld
lods
bound
mov
aaa
lahf
and
nop
ss
sbb
in
fcmovnbe
fimul
int
sbb
aam
or
cdq
mov
in
scas
pop
outs
fisttp
jno
fcmovnb
inc
shl
and
jns
xchg
xlat
pop
sub
xor
in
mov
clc
cmp
sahf
xchg
xor
fstp
fmul
call
mov
and
std
call
pop
xchg
adc
aaa
ds
inc
out
dec
push
push
cwde
stos
iret
jle
inc
scas
sbb
mov
movs
jns
(bad)
in
sub
enter
loopne
pop
jnp
pop
sbb
xor
cmp
mov
xor
lods
mov
mov
and
gs
xor
movups
(bad)
bound
xchg
rol
mov
test
(bad)
jmp
(bad)
and
dec
fsubr
pop
adc
dec
add
iret
sub
movs
fistp
leave
ret
fisubr
mov
cmc
cwde
aam
icebp
ds
xchg
xchg
das
push
pop
enter
adc
cmp
movs
cmps
xchg
cmps
fst
loopne
dec
iret
(bad)
mov
push
or
int
mov
inc
mov
jg
test
leave
enter
add
dec
imul
cli
fdivr
stos
ja
and
inc
arpl
pop
lahf
xchg
jp
repnz
xchg
push
cmp
test
stos
or
xchg
ss
fwait
sub
mov
xor
sbb
xor
mov
mov
add
ret
and
test
inc
sar
cmps
or
sbb
out
inc
and
xor
cmp
mov
adc
scas
mov
mov
loopne
xchg
stos
shl
mov
mov
mov
or
sub
test
loopne
int
ss
jmp
pop
xor
mov
mov
retf
cmp
data16
(bad)
cs
pop
inc
test
jae
js
leave
mov
sbb
movs
loopne
pop
test
cmp
sahf
rol
sbb
or
and
bound
pop
xchg
push
adc
inc
mov
aad
push
addr16
xchg
test
mov
sbb
xor
arpl
mov
lock
into
aam
mov
jae
ja
das
ja
xor
repnz
hlt
cmp
pop
push
jp
push
mov
or
aad
and
sar
scas
sahf
xchg
(bad)
(bad)
and
fs
xchg
stos
xor
loopne
out
ds
in
mov
inc
mov
das
mov
repz
setg
jnp
addr16
sbb
jns
sbb
sbb
sub
jle
jmp
xchg
pop
imul
sar
fsubr
add
test
fcmovu
lods
fwait
lahf
retf
loope
jp
fcmove
push
data16
mov
hlt
or
push
shl
sbb
mov
pushf
call
push
pop
mov
data16
xlat
std
push
inc
stos
sub
jp
dec
sahf
jmp
fs
loop
mov
sbb
ds
mov
jae
cmp
cmc
push
sub
inc
js
int
inc
mov
mov
clc
shr
icebp
and
mov
mov
das
test
or
push
js
jne
(bad)
aam
adc
mov
loope
shr
daa
pop
mov
adc
xchg
dec
ror
cdq
mov
stos
addr16
mov
(bad)
xchg
jns
pop
mov
cmp
ja
test
rol
mov
jnp
bound
test
or
movs
jl
xchg
(bad)
shr
dec
je
xor
jg
add
sub
cs
cmp
test
out
sbb
sti
fmul
nop
loop
call
mov
xchg
loop
pop
(bad)
test
dec
lods
stos
into
push
icebp
pop
xchg
loopne
test
test
(bad)
pop
fldenv
aas
scas
or
cld
data16
mov
xor
es
cmp
scas
mov
mov
jp
or
div
fcmovne
retf
cmps
mov
sub
and
enter
dec
add
loop
push
fwait
mov
inc
fnstenv
fdivr
jb
out
push
inc
mov
loopne
sub
fidivr
pop
or
xor
test
mov
push
xchg
(bad)
lods
mov
mov
leave
retf
jg
push
dec
into
cld
and
and
jp
bnd
addr16
(bad)
push
shl
frstor
in
pop
sbb
test
daa
sti
sti
hlt
cmp
nop
stos
push
lods
pop
loopne
hlt
aas
pop
sbb
mov
retf
push
cld
repz
fs
test
and
add
nop
retf
push
ja
jne
ret
in
outs
or
add
mov
rol
pop
scas
or
cmp
arpl
jle
mov
jge
xchg
or
imul
sar
or
mov
jmp
repz
sub
gs
adc
mov
sbb
imul
jge
sbb
aaa
sub
repz
retf
mov
pusha
pop
mov
xor
sbb
shl
pop
push
add
aam
cld
push
add
pushf
jne
test
lock
rol
lock
int3
pop
repz
jnp
inc
je
stos
and
sar
and
pop
pop
out
or
lds
mov
push
ss
movups
add
shl
push
push
adc
cdq
mov
or
call
lea
bound
idiv
xor
in
xor
popf
mov
jb
shl
pop
sub
out
lahf
mov
mov
xor
fld
inc
pop
mov
cld
or
adc
in
push
aas
sub
gs
push
sub
in
lds
retf
pop
mov
dec
xchg
stc
arpl
sub
div
inc
repz
jmp
sbb
jle
mov
pop
repz
mov
jbe
out
inc
mov
pop
sbb
clc
push
pop
ins
push
dec
xchg
lods
mov
bound
movs
test
push
dec
jle
lods
(bad)
in
jmp
out
and
xor
xchg
adc
(bad)
sub
pop
pop
dec
jle
out
retf
jmp
sbb
faddp
jp
fdivr
sbb
jb
cmp
ds
pop
fisub
dec
jecxz
adc
jmp
fstp
mov
mov
or
pushf
fst
imul
fwait
and
loope
fidivr
rol
shl
jbe
mov
mov
call
push
idiv
mov
sahf
aam
pop
int
cmp
sub
xor
xchg
jmp
out
int3
jg
sub
out
push
mov
call
pop
jp
test
ds
mov
adc
je
outs
xchg
(bad)
cmp
inc
xlat
cmps
xchg
pop
cld
test
sbb
adc
enter
inc
xchg
or
mov
and
cs
and
mov
(bad)
out
ds
(bad)
jo
and
enter
movs
push
and
ja
out
cs
xchg
pop
pop
add
ja
cmp
jb
iret
jnp
je
mov
cwde
cmp
sub
fnstsw
dec
imul
lea
mov
in
ficomp
push
js
test
cmc
mov
aad
adc
out
cmps
sar
sbb
ret
(bad)
es
dec
fisttp
retf
jne
(bad)
pop
mov
ins
div
mov
push
inc
inc
jge
xlat
fnstsw
mov
mov
pop
stos
mov
fadd
rcl
dec
fisub
leave
int
test
or
adc
mov
not
mov
iret
stos
xchg
test
retf
cs
cwde
jo
aad
push
retf
xor
add
adc
or
arpl
sub
or
movs
ss
sbb
lods
inc
aam
jb
add
cmp
dec
fldenv
aaa
into
stos
sti
lods
in
push
xchg
pop
ficomp
imul
mov
push
fwait
mov
aam
lods
add
add
cld
fwait
add
mov
pop
jnp
out
xor
push
cs
loop
int3
mov
scas
inc
mov
test
in
aad
jg
jl
push
stc
lods
pop
retf
cmp
xor
jl
xor
stc
repnz
aas
adc
sbb
jne
leave
cdq
mov
popa
and
movs
xchg
and
mov
cmp
cli
push
push
cli
mov
mov
cdq
xchg
push
or
mov
mov
(bad)
dec
mov
loopne
pop
jmp
sub
arpl
fcmovnbe
int
aad
and
cmp
rcl
ret
loope
fdivr
call
mov
jle
movs
je
sbb
pop
dec
add
ds
mov
mov
pop
mov
repz
out
pop
sar
out
cmp
dec
xor
das
mov
fs
mov
in
sub
cmp
mov
mov
repz
sub
daa
arpl
add
popf
imul
div
scas
mov
arpl
lods
push
imul
sub
popf
mov
call
adc
push
idiv
test
or
test
sbb
pop
fnstsw
xchg
rol
pop
retf
cmp
mov
push
inc
lock
pop
jnp
sbb
lock
add
loopne
dec
(bad)
(bad)
(bad)
js
pop
sahf
movs
mov
mov
daa
ins
sbb
paddusw
pop
mov
add
jne
xor
lods
loope
sbb
dec
dec
dec
xor
add
cmps
lds
out
in
lods
inc
fwait
or
scas
mov
jmp
out
or
sbb
adc
(bad)
sub
push
scas
mov
sahf
mov
cmc
addr16
adc
cld
in
les
hlt
push
rcr
cs
ins
jge
in
popa
push
push
int
mov
icebp
sbb
ja
into
loope
adc
sub
and
jnp
je
mov
call
sub
mov
cmp
dec
rcr
jae
mov
(bad)
dec
lds
jge
jecxz
lea
addr16
sahf
adc
add
mov
ja
push
adc
inc
push
sub
mov
call
inc
das
je
mov
jno
mov
sub
cmp
lds
iret
ja
in
mov
out
xchg
push
mov
and
icebp
adc
sti
xlat
and
int
std
push
jp
xchg
mov
repz
jg
add
mov
hlt
cmp
push
lods
cmp
(bad)
cli
mov
push
(bad)
dec
scas
inc
mov
cdq
pop
mov
and
sbb
(bad)
(bad)
inc
push
xor
inc
cmp
shl
je
ret
lock
push
push
fstp
ficom
jnp
adc
mov
xor
mov
pop
push
iret
adc
xchg
pop
mov
pushf
mov
mov
popf
mov
out
mov
les
test
push
inc
add
fidiv
xor
loop
adc
sbb
fidiv
push
xchg
aad
push
lds
popa
(bad)
fdiv
pop
pop
dec
mov
jb
xchg
arpl
mov
int
ror
mov
pop
ja
mov
mov
mov
ins
xor
add
pop
mov
jae
sub
or
jbe
in
push
jmp
ins
fbld
jl
add
mov
and
ins
aaa
xchg
sub
jle
movs
lds
fstp
mov
cmc
bound
xor
jge
dec
inc
push
cli
daa
sbb
cwde
loopne
sub
cwde
hlt
ret
cmps
cmps
xchg
push
adc
int
jae
or
pop
mov
push
not
inc
pop
ret
imul
ret
scas
push
jns
lods
sbb
dec
push
cli
(bad)
cmp
in
sub
adc
dec
aas
aaa
in
xor
jb
cmp
gs
retf
push
inc
xchg
lahf
pushf
in
repz
scas
fwait
xchg
pusha
and
jnp
ja
rol
sub
inc
mov
nop
xchg
out
(bad)
test
scas
out
jl
imul
or
dec
inc
xor
jle
mov
das
es
xor
jecxz
mov
jnp
cld
pusha
lea
push
xchg
cmps
pop
push
sar
mov
jns
mov
jo
call
(bad)
(bad)
pop
ss
xlat
pop
add
xchg
(bad)
sar
cmps
adc
cdq
pop
pop
or
retf
enter
cdq
mov
dec
xchg
test
pusha
cwde
xor
jnp
cmp
out
mov
sub
or
sbb
push
add
mov
mov
mov
fsub
int
push
test
clc
icebp
out
iret
mov
test
and
sbb
push
sahf
push
pop
or
mov
pusha
int
in
pop
mov
(bad)
sub
lahf
in
mov
fcom
enterw
in
outs
std
xor
cmps
jle
add
pushf
sbb
mov
pushf
jl
adc
adc
imul
pop
dec
sub
repnz
inc
scas
dec
adc
int3
jns
(bad)
and
pushf
and
or
cmp
gs
and
xchg
xor
mov
mov
cdq
jecxz
push
out
and
jae
call
ret
aam
dec
outs
lock
xor
ja
sub
jnp
cli
fs
cli
xor
fdiv
xchg
retf
out
cmp
daa
call
mov
dec
pop
dec
(bad)
inc
dec
lods
into
retf
call
imul
daa
sbb
je
iret
cmp
sub
mov
in
push
and
movs
sub
pop
ror
add
fcom
aaa
call
sbb
stos
cs
push
add
push
and
dec
or
outs
inc
hlt
scas
stc
adc
repz
ss
lahf
jb
and
fidivr
add
xor
fwait
sbb
aas
pop
sub
pop
jl
sbb
cmc
popf
lods
enter
push
fdiv
aaa
retf
and
adc
fidivr
mov
jmp
mov
loop
fistp
lods
xchg
xchg
test
xor
(bad)
mov
add
cmps
cli
xor
ret
leave
cmp
dec
push
mov
iret
dec
fs
xor
jmp
adc
cmc
mov
dec
ficom
pop
adc
xor
adc
fild
fidivr
pop
pop
test
repz
aad
nop
or
aam
sbb
and
jb
sub
sub
or
push
mov
inc
int
test
cdq
popf
out
fsub
cmc
add
adc
mov
xor
mov
cmps
sub
frstor
adc
push
xor
lahf
sbb
cmp
adc
in
nop
pop
xor
xchg
sti
mov
and
movs
push
and
out
jle
push
or
loope
hlt
add
les
daa
shr
pop
sbb
fadd
ret
ja
fs
sub
lds
and
cmp
push
adc
mov
std
cmp
stc
(bad)
repnz
gs
push
in
test
pop
out
lock
mov
leave
add
and
inc
rcl
sti
ror
add
xchg
int3
ror
int
test
sar
sbb
shr
lods
jmp
shr
jnp
xor
pop
mov
push
popf
inc
mov
and
(bad)
das
add
xor
pop
dec
test
dec
cs
fist
add
call
loope
sub
inc
shr
fsubr
cmp
push
push
lods
imul
int3
xchg
xor
mov
inc
jne
imul
mov
ret
ret
xchg
pop
int3
shr
jbe
fst
outs
mov
xor
adc
ds
lds
(bad)
arpl
mov
jbe
ja
sub
inc
sub
ja
pop
mov
adc
cmp
pop
iret
call
cmp
ins
sub
cmps
pop
mov
mov
push
stc
scas
sti
mov
or
sbb
jle
jmp
in
push
mov
fucomp
aaa
sbb
imul
arpl
or
or
mov
pop
int3
jle
cmp
lea
out
mov
pop
lods
stos
(bad)
(bad)
mov
mov
sbb
xchg
jge
inc
iret
cli
ds
scas
jnp
add
iret
sub
xor
sbb
cmp
push
add
xor
ds
jmp
loopne
xor
sar
js
xchg
sub
ret
xchg
push
loope
inc
(bad)
push
xchg
popf
pop
pop
cld
jmp
mul
mov
or
les
cmp
xor
push
or
xor
push
(bad)
out
or
mov
mov
out
icebp
pop
sub
or
adc
add
push
push
or
jge
mov
xor
push
sub
and
fwait
dec
outs
pop
xchg
mov
push
mov
out
mov
and
das
pop
mov
scas
sub
out
inc
mov
in
and
adc
mov
ins
and
mov
lea
fwait
loopne
leave
cmovae
sub
cmp
jp
ret
cmp
jge
xlat
fcomp
aas
adc
or
rcl
push
cmp
dec
xchg
or
xchg
sbb
sti
xlat
out
adc
pop
sub
lahf
pop
lods
in
mov
pop
jbe
cmp
pop
xchg
jb
arpl
sahf
mov
add
xchg
fadd
sti
or
jl
cmp
and
add
xor
pop
cld
pop
mov
int
xchg
mov
mov
cmps
or
or
cdq
jp
and
xor
pushf
xchg
jecxz
sbb
and
xchg
cmp
xchg
shl
repz
push
stos
inc
les
jo
das
push
cmp
jns
repnz
aad
(bad)
ins
jb
les
push
dec
psllq
jmp
adc
iret
cmp
repnz
fadd
jge
es
gs
cdq
xchg
pop
mov
imul
(bad)
or
aaa
mov
pop
aas
sar
lea
(bad)
or
sub
dec
push
adc
retf
shl
and
scas
xor
mov
mov
rcr
cld
or
clc
lock
fwait
pop
sbb
ror
stos
arpl
dec
mov
ror
pop
xchg
cli
push
repnz
inc
mov
push
mov
mov
sbb
xchg
repnz
in
push
mov
fst
adc
jp
or
movs
stos
mov
cmp
push
and
mov
fdivr
push
mov
push
pop
sub
mov
push
dec
sti
inc
cld
mov
cmp
ret
test
push
shl
jne
loop
cmps
add
loope
jns
pop
sbb
popf
xchg
add
dec
or
cmp
in
jle
fwait
pushf
sahf
pop
in
jmp
fnstenv
jg
lea
stos
mov
or
aad
push
xchg
daa
push
aaa
mov
xchg
cmp
mov
xchg
cmp
push
mov
icebp
xor
pop
scas
scas
cwde
inc
nop
push
add
sub
stc
push
call
sbb
jno
sbb
sbb
mov
movs
mov
aaa
and
daa
mov
dec
dec
dec
mov
iret
ds
js
jle
inc
mov
push
inc
pop
in
data16
mov
scas
aas
repz
(bad)
std
cmp
mov
xchg
xchg
outs
jnp
inc
ficom
cmc
xchg
pop
std
es
jae
inc
pop
mov
(bad)
jb
jns
jno
pop
fstp
push
sub
jae
dec
iret
int3
and
mov
mov
movs
fs
mov
out
fwait
in
xchg
dec
inc
stos
inc
ret
xor
loop
lahf
inc
adc
add
mov
bound
(bad)
sbb
mov
or
pushf
dec
jecxz
test
pop
clc
and
int3
xor
sbb
in
xlat
mov
inc
sbb
sbb
sbb
mov
call
test
or
data16
lods
arpl
retf
pop
cwde
rcl
rol
and
in
clc
jle
xchg
inc
xor
mov
mov
and
nop
mov
out
lea
call
cmc
icebp
push
scas
xchg
gs
lahf
loopne
push
mov
retf
xchg
mov
xlat
mov
inc
movs
scas
aam
ror
ror
js
xor
sub
and
vpmuludq
inc
cmps
or
test
clc
mov
mov
int
fwait
aad
xchg
test
jp
aad
lock
xor
je
test
les
ds
rol
in
adc
pop
std
lds
mov
jb
cmovle
cmp
dec
jno
dec
adc
inc
inc
cmps
pop
or
jmp
test
dec
jmp
pop
pop
aad
cmps
leave
jmp
push
test
jmp
and
push
imul
fild
push
in
rol
and
sub
(bad)
and
xor
dec
fsubrp
fsubr
cmp
dec
fwait
dec
jge
sbb
lea
rol
jg
cmp
(bad)
or
jle
int3
hlt
inc
and
inc
popa
push
sti
fimul
mul
outs
loopne
push
and
mov
xchg
xchg
xchg
sbb
jae
fild
mov
push
es
mov
pop
stos
pop
cmps
cmps
xchg
cld
mov
adc
enter
mov
mov
pop
bound
add
(bad)
in
push
in
leave
fcmovnbe
or
and
dec
jle
fistp
add
in
cdq
aaa
cmp
push
stc
imul
pop
push
dec
pop
mov
rol
mov
jnp
pop
fs
inc
dec
sub
scas
bound
xor
movs
ins
sahf
xor
test
mov
sbb
mov
sbb
shr
int3
test
push
sbb
jo
aam
cld
add
add
mov
(bad)
test
out
gs
push
lea
in
in
pop
test
call
mov
cmp
cmps
cmps
sbb
scas
aas
adc
ret
jnp
and
mov
aam
sub
(bad)
(bad)
fwait
shr
outs
sahf
and
push
aas
xchg
xchg
push
mov
push
(bad)
adc
ja
pop
out
add
pop
frstor
jl
ficomp
sub
ret
inc
mov
push
inc
sub
mov
pop
and
idiv
mov
mov
das
add
cmp
mov
jae
bound
or
dec
add
mov
inc
or
sbb
sub
push
push
fst
pop
or
lea
scas
mov
add
jmp
daa
xchg
mov
ja
or
push
ret
cmp
add
das
lahf
leave
adc
imul
jno
cld
jbe
in
data16
clc
repz
(bad)
mov
mov
leave
out
adc
dec
repnz
pop
dec
ret
jmp
imul
add
and
add
clc
xor
mov
lahf
cmps
lea
sub
or
shl
ret
dec
stc
and
into
mov
xchg
jmp
xchg
add
dec
mov
xchg
pushf
mov
call
sbb
mov
bnd
ins
hlt
lock
pop
mov
jle
mov
push
pop
add
call
ins
push
cmp
mov
iret
xchg
jecxz
add
cmp
out
add
stos
push
mov
jnp
jmp
(bad)
mov
fsubr
mov
in
jno
fwait
aad
idiv
xlat
mov
int
pusha
mov
xchg
fist
nop
lahf
test
repz
jmp
rol
shl
or
movs
ins
dec
push
stc
pop
ins
je
add
es
mov
int
jns
shl
push
sbb
sti
dec
pop
(bad)
nop
sub
ja
sub
mov
add
into
div
pop
mov
sbb
iret
mov
inc
outs
(bad)
mov
ins
jg
movs
xchg
and
jp
aaa
popf
fldenv
jo
(bad)
jmp
rcpps
adc
sbb
daa
(bad)
jne
push
iret
pop
ds
jae
cmp
xchg
stc
sub
xlat
xchg
jae
adc
in
lds
fbstp
mov
mov
jb
test
mov
lods
fist
and
std
lods
push
inc
js
imul
pop
and
loop
stc
sbb
push
sub
adc
mov
aas
fld
stos
xchg
jp
cmps
or
adc
mov
jnp
add
data16
xchg
sbb
jo
mov
fmul
jmp
es
inc
pop
jmp
mov
fcmovnu
stos
div
pusha
aad
jmp
sbb
xchg
popf
and
add
inc
(bad)
pop
sub
dec
push
xor
data16
sub
add
xchg
cwde
mov
sub
mov
mov
mov
mov
cs
mov
sub
jns
dec
sub
mov
lock
push
xor
test
pop
sbb
dec
retf
mov
popa
and
push
xorps
mov
loope
lock
fisub
je
xchg
adc
or
aas
adc
scas
xchg
dec
leave
jne
xchg
std
jecxz
adc
movs
xor
xchg
push
sub
dec
(bad)
out
imul
mov
dec
sub
mov
fistp
mov
ds
jb
push
sar
ficomp
xor
mov
cs
pop
mov
jle
cmp
in
stos
retf
xchg
lods
jecxz
push
xchg
pop
int
addr16
shr
mov
fmul
mov
push
jecxz
lahf
stos
jmp
dec
loopne
das
aam
daa
dec
adc
adc
in
stos
test
xor
jmp
jnp
into
ret
in
mov
sub
adc
mov
and
xchg
ss
cs
jnp
inc
aam
sbb
imul
repnz
repnz
call
enter
xchg
inc
and
xchg
cmps
sub
sti
push
mov
cli
xchg
(bad)
and
fsubr
jo
cdq
(bad)
sub
pop
jns
push
clc
lahf
dec
out
adc
dec
dec
sub
pop
push
jnp
sbb
cmc
jb
aas
inc
xchg
jp
add
inc
and
loop
retf
int3
mov
mov
sub
nop
cmc
sbb
inc
mov
xchg
and
and
in
push
mov
push
sbb
cmc
in
(bad)
cld
(bad)
inc
jge
xchg
xor
push
inc
and
mov
jle
inc
jge
je
repz
xchg
call
iret
add
push
ret
test
fbld
loope
mov
enter
fs
xor
push
add
sub
mov
rcr
add
cmc
ret
in
push
dec
xor
out
neg
mov
cld
add
ins
(bad)
adc
sbb
sub
cmp
and
pop
and
sub
mov
xor
cmps
mov
pushf
mov
jb
xchg
les
or
ret
mov
pop
mov
or
mov
out
pop
aam
enter
xor
inc
mov
aam
jecxz
mov
inc
pop
ret
mov
mov
pop
idiv
push
inc
xchg
sahf
sub
sbb
leave
add
and
inc
(bad)
jg
mov
sbb
(bad)
aam
(bad)
fimul
les
or
pop
je
push
rol
lds
pop
out
and
mov
sbb
cmp
push
mov
pop
jnp
dec
les
inc
lods
dec
repnz
dec
retf
lock
jne
jmp
retf
test
rcr
call
sbb
fdivr
cs
xor
inc
std
pop
fwait
out
sti
jl
add
xchg
and
add
xchg
pop
movs
mov
or
cmp
into
dec
in
add
push
ss
stos
push
mov
xor
and
cmp
(bad)
or
addr16
lea
sahf
pop
sbb
(bad)
xchg
movs
(bad)
jmp
xchg
(bad)
not
scas
dec
mov
cmp
sbb
cmp
lock
in
and
cwde
xchg
cmp
pop
(bad)
sub
inc
inc
test
data16
cwde
ins
aad
sub
(bad)
div
fcomi
fdivr
mov
(bad)
sub
add
outs
pop
out
adc
adc
add
mov
xor
sbb
cdq
ret
sbb
sbb
xor
es
sub
fs
inc
mov
jg
ret
es
hlt
in
push
sti
cmp
ret
cmp
ficom
into
xchg
dec
jns
(bad)
ss
xor
or
ror
sub
imul
aam
sbb
std
pop
stc
mov
fadd
outs
nop
fimul
adc
je
sub
lods
pop
and
(bad)
adc
rcl
adc
fsubr
cmps
mov
mov
push
clc
mov
(bad)
dec
inc
jmp
push
cmp
pop
test
fs
adc
sub
mov
pop
or
not
test
push
push
push
in
int
ss
jp
aaa
pop
cwde
push
sub
cli
test
mov
les
pusha
lock
push
test
inc
adc
xchg
leave
je
pop
add
add
ins
fst
adc
xor
cmp
mov
and
das
adc
mov
mov
dec
not
and
dec
jecxz
ret
ja
cmp
push
ficomp
mov
pop
leave
imul
mov
das
push
sbb
daa
es
dec
or
and
sbb
add
imul
nop
shl
sbb
push
mov
mov
xor
or
jge
mov
(bad)
ficomp
stos
push
mov
or
mov
jmp
jnp
cmp
mov
nop
call
(bad)
ss
adc
mov
pop
ror
push
adc
mov
xchg
(bad)
cld
add
js
clc
and
enter
ret
es
retf
fcmovbe
popa
jnp
gs
sub
pop
dec
scas
shl
lds
and
dec
jle
or
and
mov
fnsave
test
xchg
movs
push
xchg
repnz
imul
mov
dec
cmp
test
aad
jmp
std
sub
fist
scas
mov
xor
sbb
xchg
push
or
xor
pop
inc
xor
retf
test
movs
sbb
mov
inc
fwait
out
fidiv
inc
call
or
in
dec
ret
jp
rcl
rsqrtps
div
hlt
pop
adc
js
mov
adc
fdiv
repnz
xchg
(bad)
shl
into
cmc
adc
xchg
push
sbb
mov
stos
pushf
or
push
mov
inc
push
add
das
mov
xchg
js
lock
cmp
pop
div
pusha
jmp
xor
sbb
pop
hlt
pop
leave
mov
call
or
jle
imul
and
mov
mov
mov
xchg
imul
jmp
sbb
jmp
mov
fs
sub
xor
or
hlt
adc
cdq
pusha
jle
sbb
shl
or
push
loope
adc
xor
and
jl
inc
mov
out
dec
xchg
fwait
stos
add
es
mov
test
shl
test
inc
in
rol
imul
stos
mov
aas
jg
call
cmp
mov
sub
(bad)
push
sbb
pop
jne
pushf
enter
int3
adc
dec
jmp
push
jo
dec
loopne
ja
aas
adc
jo
inc
mov
cmps
or
loop
sub
addr16
ret
sbb
(bad)
cwde
push
dec
scas
jno
sar
test
sub
add
pop
jno
ret
mov
lea
int3
mov
sbb
arpl
push
loope
mov
imul
cld
jns
cmp
sub
loope
int3
dec
addr16
sub
lea
jne
stc
xchg
sbb
aam
sub
or
sub
iret
jnp
cmp
(bad)
in
lods
xor
rol
jae
cmc
lods
lods
into
movs
push
test
cmp
mov
nop
in
push
push
mov
mov
jo
jbe
sahf
pop
xchg
xor
outs
bound
sbb
test
fimul
or
jb
scas
xchg
or
inc
outs
mov
sar
adc
inc
xor
retf
je
ja
dec
mov
les
rol
aad
xor
jb
imul
cmp
(bad)
push
repz
jb
cmp
std
push
jo
sbb
cmp
test
xchg
sbb
int3
dec
lods
mov
loop
push
jl
ins
neg
pop
popf
idiv
test
fisttp
std
or
pusha
clc
aas
fstp
cmp
dec
sub
and
jp
and
adc
add
pop
dec
jl
or
mov
pusha
std
push
stos
push
sbb
xchg
push
mov
das
xor
cli
cmp
ret
pop
stc
fbld
stos
sub
stc
imul
cld
in
or
add
movs
and
ins
lds
pop
xor
cmc
aas
pop
jne
xrelease
jmp
sbb
test
sub
xchg
jg
jmp
outs
cld
call
mov
imul
pop
retf
(bad)
xchg
adc
push
test
outs
ja
push
sti
pop
cld
add
fidivr
push
leave
mov
xchg
cdq
imul
ds
repz
stos
dec
jns
lock
fcom
cmp
inc
in
out
add
sqrtps
cli
sub
dec
add
cld
fsubr
nop
in
jp
int3
jle
pop
dec
mov
push
mov
mov
enter
cmp
sbb
aam
in
ret
xchg
enter
addr16
lods
cmp
jns
jnp
fcmovnbe
stos
rol
sub
not
not
jge
icebp
in
cmp
adc
(bad)
ins
inc
mov
sub
out
mov
xchg
xchg
xchg
pushf
lods
jbe
adc
cmp
dec
push
mov
hlt
sar
test
div
dec
inc
gs
test
and
jne
pop
bound
adc
pop
test
outs
or
loop
mov
mov
hlt
jmp
test
mov
ja
sub
retf
pop
lds
mov
cmp
and
dec
and
mov
and
outs
sub
inc
cmp
mov
pop
xchg
sub
mov
mov
jl
jo
pusha
jmp
sub
cli
outs
jmp
and
(bad)
es
imul
mov
push
sahf
mov
mov
mov
daa
out
cmp
in
mov
mov
aam
pop
les
sub
push
(bad)
clc
and
inc
bound
or
pushf
sub
cwde
push
into
pop
pop
enter
push
jp
fstp
movs
pop
and
rcr
daa
pop
lea
iret
jnp
pop
xchg
cmp
push
aaa
lods
adc
push
je
out
in
mov
(bad)
cmp
std
jb
or
popa
sbb
inc
dec
sbb
jmp
inc
mov
jo
dec
mov
retf
cmps
mov
cmp
xchg
or
jle
sub
cmp
mov
cmps
sbb
jmp
cmp
xchg
push
(bad)
adc
cmp
jns
icebp
pushf
cmc
dec
cwde
xor
popf
fcmovbe
sub
sbb
mov
outs
fs
data16
fwait
addr16
loopne
fadd
mov
adc
adc
sti
sbb
sub
ror
cld
inc
rcr
leave
in
std
jmp
mov
ins
std
dec
xchg
ins
pop
sbb
bound
(bad)
cmps
xor
xor
or
jns
xor
cmc
shr
sub
and
shl
ja
out
inc
dec
pusha
xor
mov
sbb
pop
mov
lds
bound
mov
retf
lods
repnz
mov
lods
into
loopne
enter
js
rol
jmp
sahf
cmp
mov
fistp
clc
inc
scas
and
in
jb
test
pop
lds
sub
sub
fadd
adc
xchg
ss
xchg
(bad)
add
adc
mov
loope
mov
scas
icebp
and
pop
push
cmp
dec
shl
loopne
push
xor
xchg
repz
jecxz
int3
or
mov
mov
fwait
aaa
cmps
imul
arpl
inc
mov
and
mov
jo
cmp
jno
sbb
ror
mov
in
fiadd
jne
xchg
repz
(bad)
push
sbb
jmp
das
int
fild
nop
retf
ins
mov
iret
push
imul
outs
neg
pop
fild
int3
and
jge
popf
and
dec
out
out
(bad)
lds
add
out
dec
mov
into
sbb
outs
les
sar
mov
test
and
xchg
mov
cmps
and
or
fsub
lock
cdq
mul
repz
les
or
fild
(bad)
shr
inc
xchg
xor
call
pop
and
jns
xor
dec
sbb
mov
jnp
push
sbb
ficom
loopne
lock
jbe
inc
outs
stos
popf
pop
push
ret
pop
ins
mov
xor
inc
aaa
lea
and
dec
xchg
icebp
dec
(bad)
jp
addr16
fcmovnb
jnp
xor
clc
xchg
paddusw
int
pop
retf
std
test
or
int3
fcmovbe
lods
mov
ins
hlt
xchg
imul
das
mov
out
push
(bad)
inc
sub
add
fbstp
or
inc
jmp
sub
into
not
mov
mov
xchg
xchg
jmp
loop
popa
and
daa
repz
mov
add
dec
pop
clc
call
jmp
les
inc
adc
cmp
test
aas
iret
out
and
cmps
add
gs
xchg
scas
cmps
jge
dec
xchg
ins
push
push
call
cmc
pop
int3
jbe
mov
cmp
pushf
xchg
inc
add
cmp
mov
(bad)
pusha
dec
popa
es
ret
dec
mov
jg
cmp
rcr
dec
inc
stc
outs
and
jnp
jns
popa
repz
cmp
xchg
inc
cmp
push
das
inc
lahf
jno
aad
pop
cmp
xchg
outs
rol
(bad)
jmp
addr16
cdq
ds
repz
arpl
mov
call
data16
inc
aad
mov
or
js
push
inc
sbb
mov
out
add
inc
push
icebp
mov
sbb
rcr
enter
nop
pop
sub
push
loopne
mov
adc
pop
cmovbe
and
imul
or
sub
and
jg
pop
sub
push
pop
sub
cmp
add
or
push
xchg
jecxz
and
jb
or
out
mov
dec
and
repz
clc
lsl
popf
pop
add
shl
pop
mov
jae
test
std
call
out
push
repnz
push
sbb
or
jae
stos
call
mov
xchg
xchg
sub
mov
jg
add
lds
adc
out
stos
scas
xor
adc
cmp
xadd
jnp
and
cmps
ss
adc
push
loope
inc
push
stos
call
mov
pushf
fcomp
dec
pop
fld
pop
ins
in
movs
xor
jmp
sub
adc
cmp
xor
sbb
jmp
sahf
xchg
xchg
ins
cmps
sti
clc
push
inc
data16
mov
inc
cmps
xchg
pop
add
stos
mov
aaa
xchg
ret
sbb
fwait
je
jb
dec
jbe
adc
cmp
sar
scas
cmc
inc
dec
xchg
jp
cmp
nop
nop
jbe
or
clc
push
sub
call
or
mov
pop
xchg
jecxz
popf
push
cli
xor
aas
pop
popf
push
mov
cdq
mov
mov
xchg
call
inc
inc
xor
jecxz
xor
out
inc
pushf
lea
mov
retf
or
push
and
or
jge
xchg
ret
push
sbb
(bad)
in
sub
inc
repz
out
inc
test
jmp
mov
pop
push
(bad)
jnp
adc
es
pop
xchg
xchg
sub
nop
pop
add
imul
in
xor
mov
ret
out
popf
push
cmps
pop
sub
mov
movs
sbb
jno
popa
stos
leave
aaa
mov
xlat
xchg
inc
pop
or
(bad)
movs
sbb
sar
add
in
das
cwde
leave
bound
mov
aas
mov
jo
fs
mov
not
loope
pop
jnp
inc
inc
movs
cmp
lods
loopne
mov
outs
ficom
dec
sub
xor
mov
inc
push
push
mov
inc
xchg
pop
mov
mov
cmp
cmp
pop
push
out
fs
xchg
ss
shl
js
mov
dec
scas
jge
adc
xchg
fucomi
lods
mov
and
pop
inc
push
sbb
scas
ds
cs
inc
mov
push
or
test
ja
adc
fwait
shl
lahf
jmp
data16
leave
ins
cmp
test
pop
je
scas
cmp
push
outs
sbb
aas
in
cmp
or
mov
add
xor
hlt
fwait
aaa
and
and
add
cdq
xchg
fsubr
add
jnp
jecxz
xchg
into
cmp
sub
jg
jl
cmp
dec
fdiv
xor
daa
in
sahf
(bad)
shl
mov
sub
xlat
dec
inc
ja
mov
cmp
sub
shr
or
sub
les
aas
loopne
(bad)
(bad)
xchg
hlt
or
lock
fdiv
inc
into
icebp
mov
adc
cmps
aas
leave
mov
scas
and
mov
push
sub
xchg
bound
jecxz
mov
push
mov
out
repz
lods
push
sahf
sub
scas
mov
xor
(bad)
mov
out
and
mov
fsub
cmp
pop
mov
outs
inc
sbb
xlat
loopne
fild
push
push
imul
xchg
xchg
aam
hlt
mov
xchg
inc
dec
dec
inc
mov
sbb
mov
dec
sbb
adc
cmp
(bad)
and
inc
cmp
frstor
sbb
lods
js
dec
das
mov
add
imul
jecxz
dec
mov
rcl
mov
shr
loop
enter
or
add
push
js
xchg
sub
(bad)
xor
shl
mov
xor
stos
xchg
inc
jb
or
mov
mov
fwait
stos
stos
mov
mov
movs
lock
enter
and
fcomp
pop
ror
pop
vpcmpeqb
rcl
xor
pushf
mov
pop
jns
popa
sbb
jl
mov
sbb
sbb
push
xchg
sub
sub
pop
repnz
jno
inc
mov
nop
adc
mov
pop
adc
sub
jb
mov
into
push
jge
inc
in
push
and
lahf
xchg
fwait
stc
mov
jmp
cs
scas
paddusw
loop
bndstx
out
(bad)
jecxz
jl
xchg
jmp
inc
jp
xlat
in
push
scas
jmp
dec
imul
fidiv
pop
int3
push
xor
cmp
push
cmp
adc
mov
cmps
hlt
push
aaa
aad
call
das
xchg
and
ret
and
mov
adc
lods
inc
mov
aas
movs
das
jp
and
cmp
icebp
(bad)
dec
push
push
dec
into
std
ret
adc
mov
int
mov
cmp
movs
fcom
nop
aaa
mov
out
mov
dec
jecxz
mov
push
or
cwde
mov
or
(bad)
test
pushf
pop
push
fldcw
lods
fisttp
jl
ret
pop
mov
std
ins
dec
or
push
test
enter
lods
mov
nop
int3
adc
pop
iret
mov
cmc
sub
gs
fsubr
dec
outs
out
pop
test
jo
test
jmp
sbb
ds
out
cmp
dec
ficom
jbe
cmp
push
push
and
dec
add
mov
loopne
loope
aaa
lock
adc
pop
sahf
outs
sti
jno
mov
pop
sbb
fiadd
(bad)
mov
gs
mov
dec
pop
mov
ins
imul
lods
js
and
dec
jp
mov
(bad)
pusha
pop
fwait
pop
adc
pop
and
fdivr
icebp
mov
sbb
dec
jo
xor
imul
mov
mov
iret
mul
loope
in
push
add
xchg
not
(bad)
iret
enter
pushf
stc
or
pop
jge
pop
jb
xor
lds
cmps
and
cmp
inc
and
push
std
adc
mov
int3
sub
mov
or
dec
sbb
sahf
mov
cmp
lahf
(bad)
or
jg
mov
in
test
fisub
iret
xor
add
xor
sub
jnp
sub
fisub
xlat
jns
in
outs
xchg
gs
dec
sbb
push
in
mov
les
in
push
push
jb
gs
mov
jp
cmp
aaa
fsub
call
daa
jno
xchg
mov
xchg
mov
outs
rcr
gs
and
int3
sbb
and
jae
xor
mov
daa
mov
stos
sbb
ds
mov
in
mov
je
movs
xor
and
jge
pushf
(bad)
pop
retf
xor
out
int3
ins
jg
push
fld
mov
out
add
xchg
in
icebp
(bad)
in
mov
mov
mov
pop
push
mov
stc
mov
mov
add
fild
mov
mov
fldenv
in
js
add
jae
dec
mov
aas
in
mov
int3
inc
(bad)
jge
push
popf
leave
imul
xchg
mov
loopne
mov
nop
jne
jp
pop
loop
imul
and
std
jmp
sbb
jb
mov
and
(bad)
jg
jg
or
mov
pop
gs
xchg
enter
inc
dec
out
(bad)
icebp
popa
ror
movs
sbb
aaa
popf
push
data16
aad
sti
in
xchg
jecxz
sub
cdq
or
popa
aam
das
and
pop
sub
pop
popa
dec
pop
and
or
jle
sbb
add
jecxz
icebp
out
iret
jae
mov
rcl
mov
mov
dec
sbb
icebp
shr
cmp
jmp
or
out
cmp
out
or
push
(bad)
sbb
push
js
jg
in
jmp
sbb
and
ret
std
xchg
or
loope
mov
cmp
inc
stc
jmp
aaa
adc
(bad)
ds
sar
inc
sbb
and
call
push
push
arpl
or
jns
sub
jno
adc
pop
add
push
mov
addr16
cmp
push
out
fwait
sbb
cmp
jae
aam
std
pop
sar
push
enter
mov
out
mov
push
loopne
cld
cwde
pop
xchg
stc
push
in
jmp
arpl
cmp
xor
lods
(bad)
and
adc
sbb
jecxz
stos
inc
add
outs
dec
scas
(bad)
aaa
std
aas
das
inc
outs
mov
out
add
clc
pop
jmp
push
fistp
mov
jge
xchg
mov
mov
dec
adc
mov
mov
icebp
sbb
push
xor
sbb
shr
adc
fnstenv
and
and
(bad)
fadd
test
push
cwde
jecxz
scas
fisubr
sub
or
int3
pop
iret
kandnb
fwait
jmp
sbb
jle
addr16
xor
inc
push
and
rcr
mov
xchg
loopne
pop
cld
add
cdq
dec
inc
jmp
aaa
push
(bad)
jl
std
mov
iret
sub
pushf
xchg
pushf
int3
inc
enter
mov
pop
scas
mov
loope
mov
loope
out
in
int3
pop
push
fst
pushf
sub
mov
daa
jge
popf
les
aas
jge
push
ficomp
and
sbb
xchg
mov
push
push
icebp
add
or
and
and
dec
mov
add
sbb
movs
mov
mov
cmc
mov
psadbw
das
cmp
jbe
mov
retf
lds
in
ins
pop
push
fisub
repnz
in
fldenv
aad
clc
xchg
inc
(bad)
in
push
inc
in
inc
mov
pop
into
stos
add
pop
push
aad
pop
jmp
jecxz
test
aad
xchg
sub
pop
mov
je
add
movs
mov
and
mov
fwait
adc
adc
adc
je
mov
sbb
(bad)
in
aas
shl
int
sub
lods
jp
shl
adc
aaa
sbb
or
mov
push
push
mov
adc
push
shl
xchg
lahf
inc
cwde
daa
(bad)
je
aas
scas
mov
push
cs
daa
sub
push
bound
xchg
xchg
cmps
jl
into
call
repnz
inc
cwde
in
jmp
lea
stc
jae
int3
call
in
cwde
hlt
jmp
inc
mov
and
movs
pop
shl
iret
mov
imul
sbb
stos
mov
dec
mov
(bad)
nop
fsub
repz
cmc
inc
sub
out
sbb
dec
adc
call
iret
cmps
mov
mov
sub
add
jmp
loope
lods
mov
sbb
iret
rcr
test
fadd
outs
fistp
and
cmp
sahf
sbb
js
jg
xchg
dec
cwde
stos
xor
jnp
push
add
js
sahf
rcr
xchg
aam
mov
inc
dec
pop
xor
imul
jmp
push
out
call
arpl
mov
inc
pop
push
pusha
es
mov
mov
sbb
cld
adc
int
mov
je
jge
cs
push
je
push
shr
icebp
add
mov
xor
aas
shr
scas
out
inc
sti
push
cmp
cdq
inc
in
xchg
mov
mov
sbb
xor
mov
sbb
es
mov
cmc
call
rcr
jns
fnstsw
mov
aad
push
adc
push
cdq
xlat
iret
adc
sbb
or
cmp
shl
cmc
sahf
push
rcr
sbb
and
mov
or
jne
ja
in
mov
sar
jmp
sub
mov
xchg
and
retf
imul
je
outs
shl
sbb
jg
or
xor
pop
sbb
aaa
add
or
scas
jno
inc
es
sub
sub
add
rcl
pop
cwde
xchg
mov
or
cli
mov
scas
aaa
mov
out
pop
shl
loopne
mov
cmp
dec
(bad)
xchg
pusha
pop
fcomi
test
cmps
mov
call
enter
and
in
leave
add
in
(bad)
mov
movs
(bad)
test
scas
nop
pop
pop
dec
pop
push
ror
adc
jg
cmp
push
add
ds
fist
aas
cwde
(bad)
jge
call
sbb
pushf
fld
xor
les
cs
fdiv
mov
jmp
xor
shl
cmc
push
rol
test
push
repz
push
movs
test
(bad)
mov
pop
push
aaa
push
mov
hlt
jne
mov
jbe
adc
outs
mov
push
dec
dec
mov
sub
movs
es
in
pop
push
xor
xlat
cmp
xchg
dec
add
cmp
dec
jb
lea
popa
and
hlt
pop
sbb
pop
add
mov
jne
test
clc
cld
mov
leave
hlt
test
idiv
ror
cs
xchg
jae
pop
rol
ins
inc
cmovnp
xor
xor
in
sti
sub
into
out
xchg
out
jge
push
ins
lock
jae
ret
add
mov
fnstenv
rcr
(bad)
jns
jecxz
pop
or
push
mov
mov
retf
bnd
sar
loop
pop
fist
popf
ror
adc
mov
mov
jbe
or
in
es
retf
sub
jne
iret
out
dec
movs
sub
loopne
enter
mov
call
(bad)
retf
xor
xlat
add
lock
mov
jmp
cmp
fs
mov
xchg
sub
dec
retf
add
mov
dec
cs
neg
mov
fimul
(bad)
cmp
gs
push
xchg
cld
lsl
mov
les
repz
mov
push
in
imul
jae
nop
(bad)
jns
jle
data16
sbb
push
es
mov
js
sub
push
cdq
test
and
push
cmp
sbb
cmps
das
aam
in
xor
out
and
inc
and
out
jmp
jo
(bad)
xor
xor
cmp
fdivr
nop
push
xlat
and
popf
je
mov
and
and
xor
dec
adc
fwait
jmp
test
fwait
push
mov
sub
ds
sub
pusha
mov
inc
in
je
leave
push
push
arpl
out
jmp
sub
jno
or
and
pop
xchg
push
mov
(bad)
not
adc
dec
mov
push
lock
leave
fs
jp
fwait
jmp
fcom
scas
test
aaa
hlt
add
rol
jg
ret
mov
dec
aaa
pop
ja
in
xor
push
scas
ror
xchg
inc
pusha
loopne
cmp
rol
xchg
inc
push
xchg
outs
mov
dec
shl
mov
loop
mov
cmp
pop
pop
cmp
mov
gs
into
icebp
data16
jp
xchg
out
mov
mov
daa
push
test
lods
push
out
(bad)
sub
js
sbb
fidivr
mov
rol
(bad)
scas
sbb
or
(bad)
xchg
or
dec
in
xchg
push
mov
bound
xor
cmp
rcl
jge
ror
cmp
ds
sbb
sub
add
lods
repnz
xor
ds
fiadd
xchg
mov
je
paddusb
jmp
aad
shl
xor
iret
cmp
in
loopne
pop
into
adc
call
add
in
xor
sub
mov
xchg
fdivr
jp
push
jne
into
hlt
sub
xor
daa
pop
adc
mov
fldcw
inc
sub
sub
aas
pop
lods
jo
dec
sti
aad
(bad)
aaa
das
mov
inc
retf
scas
inc
ins
inc
repnz
inc
adc
(bad)
dec
adc
or
xor
fcmovb
arpl
xor
push
scas
sbb
cmp
daa
sub
jl
and
mov
int
lds
pop
sub
mov
pop
les
xchg
nop
frstor
adc
dec
cdq
loope
mov
call
repz
xchg
(bad)
mov
into
aaa
sbb
and
mov
clc
jns
inc
hlt
dec
xchg
add
cmp
mov
dec
pusha
ficomp
sbb
xchg
jecxz
mov
pop
(bad)
sub
fnstcw
dec
pop
sbb
inc
add
cld
out
movs
inc
inc
and
sbb
mov
or
push
mov
push
das
mov
sbb
in
shl
lahf
(bad)
jecxz
int3
cmp
ja
ins
mov
lods
mov
lahf
mov
adc
mov
add
enter
(bad)
into
push
in
out
jg
inc
test
test
enter
adc
jne
out
mov
cmc
popf
mov
in
cmp
mov
and
or
fs
cdq
or
stc
jae
sar
push
mov
jae
sti
inc
cmp
xor
fdiv
(bad)
enter
or
push
shl
sti
ret
fs
inc
pusha
mov
jo
ja
fldcw
fdiv
fisubr
jp
or
or
mov
sub
fs
aaa
xor
stos
mov
out
jp
mov
cs
outs
and
mov
mov
dec
fdiv
cmp
in
add
mov
sar
inc
xchg
js
test
jb
add
xchg
dec
sahf
push
adc
jle
out
adc
jl
sar
or
jle
jge
dec
and
jmp
popa
jno
ror
test
repnz
(bad)
push
xor
hlt
sti
and
js
pop
rcr
add
test
sub
bound
adc
cmps
sbb
mov
ss
cld
fwait
inc
and
cs
repnz
xchg
stc
movs
sub
mov
(bad)
sti
cdq
inc
xor
mov
and
cwde
fsubr
movs
aam
leave
aas
pop
jnp
loop
in
imul
test
push
call
sbb
icebp
mov
jle
retf
cld
rcl
sub
pop
movs
(bad)
stc
push
imul
hlt
push
in
mov
fsub
shr
stc
sbb
mov
push
(bad)
in
pop
or
enter
or
jl
and
jns
inc
jge
xchg
pop
fcom
out
xor
mov
or
fstp
cmp
dec
test
adc
out
mov
popf
cmc
push
sub
clc
mov
outs
je
call
sub
and
out
jmp
push
add
ffreep
add
mov
into
test
ret
pop
mov
mov
dec
ss
xchg
adc
loop
cmps
mov
les
test
dec
mov
push
std
ffree
or
dec
(bad)
sbb
(bad)
push
jns
fstp
pop
xor
gs
adc
fisub
pop
sbb
pop
xchg
push
push
mov
test
jg
dec
addr16
and
stos
movs
les
pop
fs
icebp
fwait
mov
adc
cmp
adc
xchg
xchg
scas
mov
mov
mov
neg
aam
mov
loope
inc
fs
or
mov
pushf
fs
call
aas
cmps
xchg
and
xchg
loope
stos
fstp
(bad)
jmp
sbb
fdivrp
dec
int
fs
mov
call
cmp
ds
or
in
xchg
push
cmp
lods
mov
pop
int
push
frstor
lods
jmp
pop
retf
mov
and
pop
mov
lahf
retf
mov
mov
or
and
pop
lea
or
mov
mov
aad
push
mov
mov
movs
xlat
sbb
mov
xchg
cmp
in
adc
cdq
sub
js
ret
sbb
aad
mov
addr16
sub
xchg
jmp
sbb
mov
movs
arpl
push
aam
pusha
fs
loope
ins
pop
inc
ret
sub
es
xor
dec
outs
popf
(bad)
jle
mov
cli
fild
rol
scas
sbb
ret
sar
pop
ficom
and
sub
std
add
or
das
jecxz
out
sub
aas
jp
fiadd
(bad)
pop
cli
aas
sub
mov
xlat
add
fist
lds
jb
pop
ds
xor
inc
mov
fld
int
pop
lods
inc
in
mov
hlt
ror
test
int
lods
js
out
(bad)
mov
xor
outs
clc
and
mov
pop
loop
fmul
ret
ret
rcr
push
icebp
mov
mov
dec
out
(bad)
sbb
xchg
jo
lods
mov
and
not
retf
add
mov
icebp
inc
das
adc
jns
(bad)
in
scas
sub
(bad)
add
je
lahf
movs
inc
adc
in
jne
call
mov
pop
push
imul
test
mov
pop
ffreep
test
test
nop
cmps
add
cli
and
(bad)
sbb
outs
icebp
js
out
(bad)
pusha
sbb
push
sbb
fwait
jecxz
int3
sbb
inc
mov
add
sub
loope
sahf
jno
mov
repz
lea
retf
xchg
push
loope
adc
mov
inc
mov
bound
jne
sbb
dec
pop
scas
arpl
and
pushf
enter
or
mov
test
enter
xchg
in
sub
fwait
lds
loop
push
out
mov
pop
pop
xor
retf
sti
cmc
call
ret
stos
sti
addr16
(bad)
retf
ret
rcl
push
stos
xor
dec
in
cmc
add
and
addr16
popf
mov
ja
push
add
mov
mov
pop
popa
test
inc
ret
sti
scas
into
sub
sahf
ja
(bad)
xchg
dec
and
fnstsw
pusha
repz
mov
pop
dec
push
pop
fild
bound
(bad)
in
or
xor
div
push
(bad)
ja
aas
rcr
xchg
xchg
jl
sbb
jmp
les
sub
cmp
in
inc
jecxz
call
push
je
push
js
sub
sub
cmps
loop
retf
scas
inc
jg
mov
pop
mov
add
shl
jnp
ss
and
rcr
xor
or
push
mov
rcr
sahf
movs
(bad)
cli
in
cmp
push
mov
cs
sahf
sbb
outs
xor
mov
jbe
loope
icebp
out
in
test
fnstenv
mov
(bad)
dec
push
and
and
ds
jg
xor
fild
jecxz
enter
cmps
push
int
xor
inc
inc
cmps
xchg
jmp
setne
aas
aam
lahf
shl
sub
(bad)
jmp
sbb
and
jmp
aas
jns
scas
or
or
mov
and
lods
xor
sbb
idiv
mov
ins
push
inc
pop
mov
push
or
jmp
stc
mov
rcr
pop
xor
fsub
push
movs
sbb
mov
imul
lods
bound
mov
in
and
mov
aaa
mov
cmp
mov
add
mul
push
test
neg
mov
aam
out
push
imul
or
(bad)
pusha
sbb
push
dec
add
pop
shl
iret
mov
cmp
imul
sar
push
aad
lahf
loopne
adc
in
cmps
mov
pop
mov
mov
hlt
sbb
lds
sbb
add
rol
lds
cmp
ds
adc
scas
(bad)
sub
into
mov
into
inc
inc
sbb
pusha
jp
push
dec
sub
sbb
dec
pop
or
aad
in
and
inc
lahf
repz
sub
ins
push
in
test
and
pop
cmp
fbstp
adc
popa
call
xchg
stc
cmp
test
int3
pop
loopne
icebp
das
xchg
jae
pop
inc
lea
stos
xlat
ret
inc
enter
cli
retf
push
adc
mov
sbb
adc
les
xor
dec
push
ds
in
in
add
outs
cmc
ja
push
ret
jp
push
test
adc
mov
or
xor
push
lods
mov
push
test
iret
mov
add
add
dec
je
aaa
clc
or
adc
push
mov
pop
mov
and
mov
or
ret
into
adc
imul
xchg
cmp
fistp
cmps
jb
fdivr
push
dec
pop
not
pop
inc
sbb
repnz
test
jl
aad
cld
arpl
pop
and
sbb
hlt
aad
push
inc
add
iret
push
loopne
sub
cmp
mov
jo
jmp
mov
je
mov
rcr
int3
cdq
mov
loop
(bad)
les
and
xor
cmc
test
cdq
lods
sbb
ins
outs
int
cmp
retf
xchg
pop
cmc
sbb
loopne
stc
test
es
(bad)
popa
call
ficomp
addr16
dec
mov
dec
push
movs
es
sub
fistp
in
inc
xor
les
inc
stos
mov
outs
in
jns
or
cmp
push
adc
and
push
xor
enterw
cmps
xchg
mov
jg
test
retfw
push
fsqrt
test
mov
push
rcr
jl
fwait
and
cmps
push
int
bound
mov
inc
cld
mov
sub
push
xchg
int3
jmp
jmp
inc
enter
(bad)
out
fdivr
shl
xor
and
popf
scas
cdq
cmp
imul
addr16
dec
sbb
mov
dec
adc
add
sub
cli
or
das
iret
dec
stos
jge
xchg
mov
add
clc
std
outs
cmp
sbb
jmp
(bad)
sub
cld
call
or
xor
and
int3
xchg
in
nop
cmp
outs
xchg
in
clc
gs
push
and
pushf
scas
test
and
shl
or
push
mov
in
xchg
jne
dec
aam
dec
call
jnp
push
push
arpl
dec
xchg
cmps
iret
pop
fwait
pop
add
bound
jne
loopne
xchg
or
aam
mov
fnstsw
outs
cmp
icebp
ja
leave
dec
lea
jnp
and
je
dec
sbb
sub
imul
add
(bad)
retf
xor
cwde
in
mov
dec
sbb
mov
bound
imul
cmp
dec
cmp
pop
mov
and
hlt
push
daa
add
cwde
int3
loope
inc
rcr
adc
scas
cs
scas
mov
cmp
int
outs
xor
add
and
sbb
inc
add
pop
or
pop
ins
inc
gs
and
icebp
enter
daa
push
addr16
sbb
xor
clc
xchg
icebp
aam
xor
loopne
xchg
jle
cmp
data16
je
ret
add
mov
daa
jne
jnp
dec
leave
(bad)
mov
test
(bad)
retf
mov
jmp
fcmovnbe
sar
mov
inc
cwde
and
test
mov
jmp
lea
sbb
xchg
xchg
dec
push
leave
inc
sbb
int
push
ror
test
adc
sbb
mov
(bad)
push
fisub
ficom
out
xor
inc
pop
mov
pushf
adc
pop
xchg
out
xchg
data16
mov
ficom
dec
mov
stos
clc
test
dec
(bad)
and
lock
pushf
test
xchg
inc
test
in
add
push
or
test
mov
ss
mov
dec
in
adc
test
dec
sbb
jl
cs
fs
push
sub
je
mov
popa
adc
ds
repz
mov
inc
mov
mov
lahf
and
int
repnz
ds
dec
cmp
mov
jne
ror
and
movs
shr
lock
adc
aam
mov
mov
lahf
sar
rol
xchg
std
push
cmps
pop
adc
aaa
push
sbb
(bad)
mov
fcmovu
jmp
fwait
lea
cs
adc
inc
and
mov
cmc
sub
xor
sahf
cdq
jcxz
push
jmp
xchg
cwde
sar
daa
imul
cmc
mov
imul
inc
fnstsw
sbb
stc
int3
loope
push
in
mov
pop
mov
mov
clc
and
fs
das
in
icebp
fwait
rcl
sub
pop
mov
movs
movs
idiv
cdq
pop
inc
movs
mov
inc
jg
in
std
popf
cli
imul
or
push
push
mov
mov
inc
jmp
sbb
cmp
lea
push
mov
lea
and
sub
xchg
leave
sar
jns
lea
into
(bad)
retf
(bad)
lock
and
fadd
add
pusha
pushf
ret
xor
add
into
ror
mov
fsub
aaa
jne
mov
scas
lahf
inc
in
pop
add
fsubr
in
add
lds
aas
jl
(bad)
clc
adc
pop
test
ror
in
sti
cmp
(bad)
mov
ins
mov
sbb
imul
jnp
cmp
xchg
ss
sbb
mov
es
mov
pop
push
pop
in
shr
adc
push
(bad)
push
xchg
push
xlat
xor
add
push
lods
daa
call
(bad)
call
push
jmp
jmp
pushf
xchg
int
sub
mov
inc
inc
xchg
mov
pop
cmp
nop
mov
xor
out
sub
mov
mov
sub
add
dec
pop
dec
and
icebp
xchg
adc
dec
data16
mov
mov
inc
movs
mov
adc
and
mov
lea
cmp
scas
je
test
jae
or
pop
pop
call
repnz
mov
pushf
mov
idiv
cmc
int
cld
fst
ja
xor
jmp
pop
ja
(bad)
iret
dec
jbe
xlat
mov
aad
mov
ins
loope
and
pop
in
ja
push
jp
mov
mov
sub
test
fld
pusha
lock
jo
test
jge
pop
xor
ins
xchg
xlat
push
icebp
inc
add
jle
ja
lahf
cmps
inc
jno
pusha
jge
lods
pop
push
xor
gs
mov
add
mov
test
and
fisub
cmp
lods
test
mov
sar
mov
or
jb
fcmovnbe
dec
add
xchg
sub
imul
push
sub
mov
call
mov
fidivr
pop
fisttp
std
leave
inc
and
inc
daa
pop
gs
fist
addr16
ja
push
addr16
fimul
pushf
shr
int3
fs
inc
out
popf
ficomp
out
mov
xchg
jp
sub
add
es
xor
mov
inc
lahf
add
fnstcw
jmp
gs
pop
or
lahf
mov
mov
bound
sbb
jle
inc
fist
adc
(bad)
sbb
scas
shl
adc
cmps
jp
inc
adc
or
xor
and
lahf
out
and
xchg
jne
cmc
mov
xchg
ret
ins
in
inc
fcomp
(bad)
sub
jnp
cmp
mov
es
in
jae
mov
jae
mov
jbe
nop
push
mov
jnp
lods
ins
sbb
ret
pop
add
cmp
loopne
lds
aam
cwde
xchg
shl
cld
cmp
xchg
jb
push
fstp
dec
(bad)
fs
mov
xlat
push
xchg
in
inc
arpl
lock
and
push
addr16
push
out
pushf
push
and
mov
lea
out
xor
es
je
je
mov
mov
pop
xchg
push
pop
adc
retf
jne
cmp
psrlq
xchg
sahf
js
pop
sbb
add
sub
repz
jbe
or
(bad)
rcr
xchg
jp
bnd
js
outs
jmp
repnz
movs
lock
arpl
sub
inc
cmp
mov
jno
ret
jbe
pop
or
mov
pinsrw
jp
xchg
test
inc
push
push
or
mov
enter
xchg
leave
add
sub
add
and
mov
movs
push
(bad)
or
xchg
adc
scas
inc
adc
xchg
std
adc
inc
(bad)
mov
icebp
mov
jecxz
add
xor
sub
ss
pop
inc
lea
mov
(bad)
enter
push
daa
pushf
aam
mov
cmp
sub
jl
retf
jmp
adc
dec
imul
and
ret
lock
push
or
or
lods
dec
loop
sub
cmps
mov
mov
sbb
(bad)
mov
fdiv
sahf
and
xchg
jmp
lock
xchg
cmps
mov
fcomp
jg
mov
sbb
mov
jecxz
bound
(bad)
ins
adc
pop
ins
jp
xor
out
call
sub
popa
mov
je
fild
int3
push
cli
into
les
pusha
shl
leave
mov
fnstenv
loopne
xor
fs
dec
push
sub
pop
dec
or
inc
and
repnz
lods
xchg
mov
sub
sbb
inc
cmp
dec
sti
and
and
cdq
cwde
mov
scas
test
push
adc
push
std
call
out
sub
loopne
or
jbe
pop
sub
jmp
jbe
out
sbb
jb
push
sbb
iret
outs
in
call
pop
push
push
in
in
ja
xchg
test
and
test
adc
xchg
cmp
aad
inc
mov
jg
sub
repz
andnps
fld
push
xchg
fwait
sbb
xchg
xor
pop
cmp
cmc
loope
mov
inc
in
pop
jae
dec
stos
sti
(bad)
dec
add
test
repnz
or
std
cmps
inc
push
call
mov
sub
or
movs
lods
fiadd
aad
sub
dec
icebp
xchg
push
das
inc
jmp
mov
bound
pop
sbb
outs
je
test
call
or
loope
sub
or
test
ds
jmp
mov
push
and
ja
sbb
push
cmc
stc
les
mov
or
ins
fild
push
pushf
pop
push
xor
mov
or
and
scas
mov
sbb
and
pop
add
xor
sbb
mov
mov
dec
imul
mov
sahf
xchg
xchg
mov
jae
jne
sub
aaa
pop
push
ja
push
jnp
dec
out
adc
call
loopne
(bad)
imul
or
fst
and
fmul
sub
dec
loope
daa
inc
cmp
xor
sti
outs
sub
ficom
adc
pop
push
and
mov
out
dec
ins
cmp
mov
int
dec
out
stc
loope
xor
jmp
ret
leave
jne
pop
add
retf
and
push
jae
sbb
cmp
and
and
inc
stc
sbb
fwait
dec
int3
jbe
add
inc
lock
loopne
cli
mov
push
in
lds
mov
jo
iret
jo
icebp
sub
or
fisttp
jne
ror
repnz
stc
push
adc
shl
movs
cld
popf
jo
test
add
dec
cmp
dec
xor
out
call
xor
mov
and
aas
or
imul
adc
xchg
and
mov
jmp
jns
int3
xchg
lfs
shr
sub
ficom
push
adc
rcl
mov
mov
movs
ficomp
push
push
pop
push
jnp
cmp
pop
or
pop
mov
aas
sbb
stos
push
ret
xor
dec
arpl
mov
ds
not
div
sbb
mov
fisub
div
in
fisub
inc
xor
xor
cmp
cmp
lahf
popa
test
inc
inc
adc
and
popf
in
(bad)
ror
in
xchg
sbb
xchg
mov
rcl
leave
jo
(bad)
jecxz
or
ins
push
dec
jg
pop
and
mov
mov
in
or
mov
cmp
mov
popf
call
jmp
xchg
xlat
pop
or
ret
icebp
fs
add
or
inc
(bad)
adc
dec
aas
les
dec
xor
test
movs
push
mov
clc
and
add
sub
push
xlat
(bad)
xlat
aas
bound
test
(bad)
sbb
je
sbb
icebp
addr16
sbb
inc
mov
cmps
repz
and
mov
jmp
je
inc
nop
pop
adc
gs
outs
mov
pop
fcom
dec
push
mov
jns
sbb
sti
movs
sti
sbb
jle
fdiv
daa
stos
inc
fild
inc
pop
sbb
mov
adc
pop
cmp
aas
xchg
xchg
or
adc
das
push
push
mov
inc
xor
push
mov
mov
(bad)
int3
fisub
retf
inc
shl
push
test
jnp
pop
dec
or
dec
mov
adc
(bad)
dec
push
mov
int
adc
cmp
(bad)
cmp
movs
hlt
sbb
pop
dec
adc
(bad)
sub
push
mov
out
cmp
and
jg
mov
sub
enter
repz
mov
popa
out
loop
xchg
jge
or
iret
pop
sbb
inc
scas
xor
aam
out
add
pop
(bad)
cmp
in
add
pop
jb
pushf
sub
cmp
cmp
xor
fistp
repz
and
ss
repnz
cwde
stos
sti
mov
sub
pop
fdiv
js
adc
das
out
push
dec
(bad)
jnp
sub
inc
jp
cmp
dec
jmp
loop
mov
ja
sub
(bad)
pop
retf
add
sbb
(bad)
mov
adc
gs
mov
cli
adc
jge
enter
xor
test
cmc
xor
test
sub
cmpxchg
inc
mov
or
sbb
icebp
ficomp
idiv
fidivr
mov
aas
fstp
cmp
jp
mov
cmp
fild
neg
cdq
push
ret
sbb
clc
repz
dec
jle
and
arpl
jmp
add
mov
shl
rol
jno
mov
or
sub
ss
aas
loop
mov
jp
or
inc
jg
sbb
fldcw
pop
mov
and
mov
fs
mov
arpl
mov
test
jbe
adc
pop
dec
dec
xor
xor
jl
(bad)
aas
pop
jae
mov
cli
push
pop
loopne
stc
pop
rcl
test
pop
ficomp
ds
lods
xor
cli
shr
push
out
nop
ja
div
imul
and
retf
mov
cmp
(bad)
mov
test
imul
jl
loopne
rcl
retf
into
ins
inc
pop
mov
icebp
xchg
inc
les
ins
call
dec
lock
jge
hlt
xchg
pop
enter
(bad)
pop
inc
cmps
or
pop
nop
xchg
(bad)
xor
push
repnz
adc
inc
inc
sbb
fidivr
inc
dec
test
(bad)
(bad)
in
aad
hlt
les
pop
inc
popf
loopne
loop
add
stc
imul
std
fisttp
inc
dec
repnz
sbb
iret
pop
mov
pop
neg
jae
and
xor
ret
jns
call
aas
jl
lahf
add
mov
and
xchg
cmps
sbb
in
nop
inc
scas
mov
mov
call
out
adc
pop
ja
(bad)
(bad)
call
and
sar
mov
xor
or
sahf
loopne
clc
add
mov
cmp
dec
js
call
mov
fcom
stos
in
addr16
cmp
push
adc
mov
dec
cwde
pop
sbb
sbb
mov
add
mov
jae
inc
jbe
mov
sbb
das
cmp
fwait
adc
js
xchg
arpl
pop
mov
movs
xor
aad
jne
jge
inc
div
dec
mov
and
sar
addr16
xchg
mov
or
or
pop
cmp
fdivr
outs
(bad)
ffreep
outs
js
stc
neg
push
int3
imul
test
jge
sub
xchg
call
xchg
jmp
out
stos
push
push
dec
cmp
jno
int
ja
ss
lahf
dec
(bad)
ret
movs
loope
in
dec
icebp
xor
movs
and
std
mov
cdq
dec
cmc
bnd
out
addr16
mov
test
int
pop
shl
mov
adc
mov
mov
jecxz
aad
fnstsw
retf
out
imul
or
repnz
dec
push
add
mov
arpl
pop
retf
jp
scas
cmps
sub
(bad)
out
daa
rol
mov
repz
xor
cli
xor
jno
mov
push
loopne
xchg
or
or
push
std
or
sub
fild
ret
call
pop
fidiv
(bad)
(bad)
mov
in
ja
dec
icebp
xor
push
mov
xor
inc
stc
mov
xchg
stos
xchg
test
pusha
cmps
cmps
mov
push
pop
test
test
fisttp
movs
push
pop
popa
and
cmps
(bad)
cmp
les
fstp
hlt
pushf
(bad)
jne
retf
dec
sbb
pop
into
pushf
push
out
xchg
stos
cdq
jmp
mov
mov
mov
sbb
(bad)
or
stos
xlat
gs
dec
pop
out
dec
enter
jo
sar
mov
sbb
jmp
cmp
movs
or
ja
scas
add
cmp
outs
inc
fisub
lds
aam
or
imul
xor
loope
gs
out
add
mov
ret
mov
(bad)
stc
jae
dec
retf
loope
inc
pop
(bad)
push
sbb
cmp
ficomp
add
cwde
mov
dec
sbb
pop
ror
mul
and
ret
test
cmps
pop
cdq
xchg
lds
in
into
inc
jge
out
call
cmp
sti
pop
enter
cmp
mov
ret
push
in
fistp
dec
test
cli
cmc
sub
jp
(bad)
pop
(bad)
fmul
jno
mov
sbb
retf
out
daa
das
inc
out
cmp
das
retf
(bad)
scas
pusha
xchg
add
mov
gs
out
loop
push
mov
lahf
ins
dec
sub
cwde
or
(bad)
das
call
inc
es
cmps
cmp
jnp
int
push
iret
mov
cdq
data16
push
cmps
sti
ss
add
xor
xor
lahf
sbb
movs
inc
imul
jl
dec
in
xchg
fs
enter
das
loope
sub
call
aad
xor
out
aaa
aaa
sbb
(bad)
ins
dec
push
fs
fstp
or
div
mov
or
jle
in
pusha
mov
dec
pop
test
add
xchg
int
stos
test
jno
xchg
aad
rol
sbb
cmp
dec
clc
add
mov
and
ja
sub
call
cwde
mov
outs
mov
shr
ret
inc
aaa
fistp
add
sbb
mov
sub
div
mov
inc
jp
repnz
push
or
popf
inc
out
jmp
repz
arpl
dec
es
pop
fnstenv
xchg
je
test
rol
out
jmp
in
mov
push
fs
pop
out
adc
pop
scas
mov
mov
js
fstp
imul
(bad)
pop
out
dec
push
div
fs
and
and
lahf
dec
sub
shr
cmc
push
pop
inc
pop
jb
lods
int
cmp
xor
nop
sub
aad
inc
movs
push
jp
mov
inc
xchg
in
xchg
fwait
ins
lds
je
add
sub
adc
jecxz
ss
or
out
cmps
mov
pop
jae
sbb
aas
mov
jnp
aad
mov
adc
mov
mov
sahf
pusha
fwait
dec
pop
cmp
push
enter
and
repz
cmp
jo
test
and
pop
cwde
push
pusha
mov
pop
and
sub
ins
js
out
sbb
sti
add
ds
dec
sub
dec
sahf
fs
movs
stc
mov
and
int
dec
adc
mov
nop
inc
xchg
in
stc
push
fcmovb
sbb
mov
fmul
push
int
pop
or
push
sub
or
pavgb
lds
xlat
fdiv
das
jbe
call
push
addr16
and
sub
idiv
sbb
(bad)
ror
test
dec
or
aam
sub
test
sti
add
xor
test
pushf
test
fsubr
dec
sub
shr
sbb
inc
mov
lds
sub
or
and
sub
fwait
out
das
cmp
xor
rol
std
sub
(bad)
xlat
cmps
jle
inc
push
lock
leave
in
cmp
jns
dec
push
sub
imul
arpl
ret
or
or
xchg
xor
mov
rol
int
ja
xchg
rcr
cmps
mov
dec
sti
lds
and
and
xchg
mov
mov
outs
les
rol
mov
aad
mov
mov
mov
aad
ja
mov
inc
test
mov
pop
fnsave
xchg
sbb
hlt
add
push
movs
mov
push
xchg
inc
inc
mov
in
mov
ds
out
and
mov
call
pop
test
les
mov
xor
pop
jp
adc
pop
pusha
sbb
movs
out
fwait
popf
movs
(bad)
out
and
mov
sub
int
jnp
lea
sahf
xor
and
aaa
mov
dec
clc
fs
and
jne
ins
into
mov
mov
fwait
stos
add
pop
xor
mov
scas
and
pop
mov
popf
add
cmps
pushf
es
or
cmp
pop
fisub
fisttp
nop
sbb
(bad)
mov
popf
push
dec
or
pop
mov
push
push
add
jmp
add
in
pxor
push
xchg
pop
loope
sub
into
sbb
bound
pop
inc
cmp
push
and
cmp
sbb
add
mov
test
jb
and
jge
dec
fs
xchg
mov
call
fcom
addr16
es
mov
fcomp
fwait
cwde
cmp
stos
sbb
mov
rcl
in
in
mov
jge
push
jg
cmps
cmp
(bad)
mov
and
ficom
xor
cmp
test
movs
xor
ret
mov
push
(bad)
sub
test
(bad)
ret
out
jecxz
cmps
out
stos
add
cmps
ins
mov
fdiv
fidivr
(bad)
push
fimul
scas
stos
lock
push
xlat
adc
icebp
inc
sti
xor
cmc
and
lea
mov
out
mov
sub
dec
xor
push
(bad)
add
mov
mov
adc
adc
data16
and
cmp
cmp
xlat
loop
inc
inc
lahf
out
sbb
mov
das
jl
mov
(bad)
xor
mov
je
std
icebp
fld
and
mov
push
leave
shr
repz
cmp
gs
push
lahf
jns
mov
jle
or
jbe
pop
dec
push
cmps
mul
push
imul
call
cmp
push
mov
fld
mov
jl
jp
icebp
mov
push
sbb
dec
pop
test
nop
or
push
mov
jg
sbb
je
out
jl
mov
or
fild
int3
cmp
add
pop
mov
sbb
xor
cmps
leave
out
mov
cmps
adc
jb
xchg
inc
(bad)
call
sahf
call
xor
mov
addr16
int3
pop
pop
dec
sbb
stos
add
mov
lods
pop
stos
inc
jge
push
mov
cmp
jecxz
sub
mov
ds
test
jmp
jl
sbb
fs
(bad)
int
xor
xor
mov
es
sub
call
mov
mov
leave
inc
(bad)
test
jne
fwait
popa
test
pop
xor
dec
in
popa
xor
out
sub
cmp
je
sbb
pop
pop
mov
inc
test
cli
xchg
mov
dec
xlat
mov
call
jge
push
test
pop
mov
in
lods
or
mov
mov
cwde
iret
xor
fs
add
push
clc
or
aas
cmps
repz
mov
mov
jmp
add
(bad)
pusha
sub
cmp
ret
jo
jo
or
push
xor
test
test
test
sbb
jg
rcr
cmp
outs
test
test
std
clc
(bad)
xor
repz
cmp
push
sbb
cmp
adc
int
loope
cmp
repz
ins
mov
shl
add
movs
pop
ins
int
movs
cs
push
test
jmp
xchg
or
add
push
frstor
scas
xor
jecxz
sub
dec
mov
imul
out
cwde
push
and
adc
mov
adc
xor
add
fimul
inc
xor
sub
icebp
fldln2
aaa
lods
xor
jo
or
pop
pop
jb
cmps
inc
rcl
mov
pop
cmp
xor
pusha
or
movs
adc
ins
dec
mov
push
rdmsr
call
sub
sub
sbb
dec
ja
ficom
test
ror
repz
(bad)
adc
inc
stos
and
push
push
jmp
and
ins
pushf
(bad)
jne
(bad)
fimul
add
(bad)
aad
sub
cmp
jle
popa
aas
cmp
pop
test
call
mov
sub
dec
stos
add
dec
sti
pop
sahf
je
xor
xchg
in
cmps
jnp
adc
data16
pop
aaa
dec
shl
and
and
stos
jmp
aas
jmp
and
div
test
adc
sub
stos
pop
jnp
mov
and
enter
out
mov
test
repz
or
test
add
arpl
loopne
movs
and
push
ins
push
xor
mov
mov
test
(bad)
fld
lods
pop
inc
rcl
push
adc
push
adc
in
sti
enter
xchg
ss
xor
and
arpl
ja
fnstcw
xchg
mov
sub
daa
add
or
js
mov
mov
dec
jne
dec
fcompp
jbe
in
aad
jnp
xlat
ds
sub
fst
inc
fisttp
inc
fst
leave
ror
lss
ret
rcl
mov
fst
xchg
push
ror
(bad)
xlat
aaa
push
je
jg
mov
push
mov
mov
lods
mov
push
inc
aaa
rcl
cli
jle
mov
push
movs
fyl2xp1
data16
in
movs
mov
inc
and
ss
mul
mul
xor
mov
mov
add
icebp
mov
mov
mov
cmp
sbb
sbb
es
inc
xchg
or
inc
add
bound
movs
mov
adc
push
cld
out
jmp
les
popa
ret
sbb
clc
jmp
jmp
lock
in
cmp
dec
dec
push
push
scas
test
inc
jge
sbb
mov
fnstenv
je
es
js
sar
jl
(bad)
aam
lock
xor
sbb
clc
loop
sti
xor
lock
sbb
inc
xchg
inc
std
sub
add
cmp
xchg
test
mov
(bad)
cmps
and
shr
mov
mov
ror
aas
ins
cmp
inc
dec
jp
fmulp
push
xor
test
(bad)
dec
in
(bad)
out
dec
adc
jle
adc
(bad)
in
adc
add
and
data16
mov
cmps
std
and
inc
sbb
xor
mov
mov
lahf
xlat
mov
push
adc
or
push
pop
add
sti
jns
push
popf
jns
add
fucomi
in
mov
fidiv
shl
push
mov
sbb
(bad)
cmc
push
stc
hlt
sbb
dec
out
pop
stc
imul
jno
mov
sbb
test
add
and
xchg
jnp
cwde
jnp
pop
xchg
and
and
retf
adc
fst
adc
hlt
xchg
les
ret
lock
or
cmp
sub
mov
fbstp
loopne
push
mov
jl
jb
out
addr16
sar
add
xchg
cli
scas
sub
lea
xchg
mov
pusha
inc
pop
jmp
add
ins
xor
sbb
dec
nop
fwait
in
pop
dec
stos
int
push
pop
clc
cwde
repz
add
add
test
push
mov
push
movs
mov
pop
sahf
dec
cmp
pop
lds
(bad)
mov
test
daa
mov
sub
dec
mov
jmp
jo
inc
mov
mov
lock
in
(bad)
sbb
and
adc
mov
pop
push
(bad)
inc
sub
and
stos
dec
jmp
pushf
scas
fst
push
bswap
(bad)
add
adc
sti
add
mov
xchg
arpl
call
mov
cmc
push
gs
pop
jmp
fs
xchg
mov
add
into
or
push
pop
(bad)
in
or
ficom
push
pop
add
jae
or
stc
out
add
popa
(bad)
daa
popa
into
cmc
cmps
sub
adc
jb
nop
and
gs
mov
(bad)
call
aas
popf
clc
adc
scas
mov
ss
xor
xor
mov
xor
ss
lods
fist
sbb
aaa
ins
lods
lock
add
jg
mov
adc
pop
es
or
fdivr
mov
ins
pop
popf
lods
xchg
(bad)
int
es
int3
push
cmps
std
add
adc
call
push
in
mov
or
daa
aaa
popa
mov
imul
push
out
add
push
jns
inc
adc
cmp
inc
jle
jae
mov
or
dec
rcl
call
pop
adc
xchg
test
xchg
dec
mov
je
sub
add
movs
sbb
jmp
cmp
retf
jmp
adc
sahf
imul
cmp
ja
cmp
dec
sub
or
rcr
mov
movs
push
lods
fst
cmp
jb
inc
and
cmps
pop
stos
lea
jmp
leave
iret
sub
les
sti
cmps
adc
outs
imul
cwde
dec
sbb
lea
sub
xor
jmp
stos
imul
jmp
push
inc
ret
stc
cld
shl
dec
jne
dec
enter
stc
aam
dec
std
dec
mov
retf
in
sbb
call
daa
mov
inc
sbb
daa
outs
movs
test
pop
iret
jmp
jp
clc
dec
int3
or
leave
fild
sub
retf
(bad)
mov
ins
cs
mov
pushf
or
xor
call
shr
push
jnp
adc
cwde
xor
lds
sar
inc
adc
stc
jp
popf
adc
icebp
dec
push
mov
mov
push
(bad)
rcl
sbb
pusha
imul
push
cdq
nop
or
add
push
mov
xchg
dec
pop
push
jbe
jl
bound
scas
adc
das
into
cmps
(bad)
push
adc
enter
rol
push
and
cmp
sbb
ror
call
pop
push
add
lods
mov
xchg
adc
xchg
data16
repnz
repnz
fnstenv
xchg
cmp
pusha
mov
dec
pushf
icebp
add
call
fs
fild
fs
lods
rcr
push
xor
adc
fs
loop
jmp
inc
cmp
inc
pop
mov
push
js
out
or
and
ds
and
lock
or
clc
ins
mov
lods
jge
out
movs
cld
out
dec
(bad)
push
mov
(bad)
mov
pop
cmps
xchg
inc
push
or
push
test
push
repz
pop
(bad)
xor
call
loop
shr
jle
retf
pop
add
mov
mov
retf
aad
pop
hlt
fs
fdivr
cli
out
mov
mov
pop
das
retf
mov
rcl
jo
xchg
je
push
add
clc
mov
leave
mov
and
add
fwait
inc
inc
jmp
lods
push
mov
ds
dec
loope
jnp
out
outs
icebp
(bad)
jmp
dec
xchg
mov
fisub
inc
or
mov
xchg
mov
loop
jb
and
pop
push
push
into
mov
pop
add
addr16
or
lea
sti
enter
mov
nop
adc
sub
mov
jge
jnp
int3
inc
adc
mov
cld
sub
cmp
in
dec
icebp
xchg
xor
jno
(bad)
xor
mov
cmp
mov
inc
adc
pop
sub
pop
(bad)
push
bound
inc
out
scas
sbb
sar
add
test
test
push
pop
and
scas
adc
mov
pop
sbb
jmp
cmp
push
and
aas
dec
retf
xchg
pop
in
aaa
(bad)
es
xchg
pop
jmp
pop
mov
sbb
cmp
rcr
push
or
xor
outs
mov
je
fs
iret
mov
push
jl
or
shl
pushaw
dec
cmp
push
push
sub
mov
aas
jb
aas
adc
aas
xlat
sbb
lods
lock
clc
shl
or
push
hlt
jo
pop
test
add
or
rcl
jo
cmp
or
sbb
cmps
ja
dec
jge
push
inc
mov
and
xchg
in
sar
mov
fistp
sbb
nop
mov
xor
test
hlt
pop
loopne
(bad)
and
cli
xchg
pop
inc
inc
retw
daa
rcr
(bad)
in
in
inc
xor
lods
mov
sub
xchg
sti
xor
(bad)
pop
jo
cld
mov
cmp
fdiv
in
sub
es
cdq
mov
hlt
dec
jnp
jmp
or
adc
mov
icebp
and
xchg
dec
xor
mov
aaa
out
inc
outs
sbb
inc
adc
push
adc
add
jae
jecxz
iret
adc
hlt
xchg
outs
and
pusha
jnp
ins
mov
xor
outs
shl
sub
cwde
movs
jae
sub
pop
leave
fmul
clc
fist
pop
adc
retf
outs
push
push
leave
cmc
in
jno
popa
gs
push
mov
push
aad
adc
movs
mov
je
lods
jno
hlt
aaa
clc
(bad)
push
test
(bad)
cmc
fnstcw
adc
adc
aam
pusha
std
jnp
and
sbb
xor
int
or
push
fistp
dec
jne
leave
test
pop
ss
mov
adc
arpl
jo
nop
adc
ret
xlat
pushf
inc
cmps
xor
push
aad
dec
mov
sbb
mov
push
jb
sub
call
mov
push
cld
in
call
mov
sbb
xor
cdq
mov
mov
leave
dec
sub
mov
jo
xor
call
das
rcl
dec
push
(bad)
mov
or
int
cmp
test
pop
es
xor
cmp
daa
cmp
and
sahf
pavgw
into
loopne
shl
jle
and
mov
push
repnz
into
rcl
das
sbb
push
mov
sbb
mov
push
js
mov
fisttp
popf
jmp
ror
pop
or
shr
dec
into
rcl
mov
outs
or
mov
sar
sbb
pop
popa
sub
ins
xchg
ds
enter
sub
aam
test
sti
inc
lock
(bad)
xchg
pop
and
mov
test
mov
loope
sub
cmps
inc
fld
fdivrp
fdivrp
mov
into
mov
enter
ror
js
fstp
mov
or
pop
mul
sbb
fcomp
test
dec
jae
xchg
(bad)
imul
add
adc
jp
mov
ret
nop
ficomp
push
cdq
std
push
les
push
sbb
mov
inc
sti
jmp
jmpw
cmp
repnz
jecxz
or
bound
xchg
xchg
or
inc
rcl
outs
je
repz
addr16
in
fwait
push
xchg
add
das
cmp
in
popf
cdq
jns
jl
fcomip
xchg
sbb
inc
shl
test
adc
psraw
or
(bad)
push
fsub
icebp
jg
sbb
mov
stos
pop
rcl
and
(bad)
scas
mov
imul
mov
sub
pop
sbb
test
in
sub
dec
lods
mov
and
adc
dec
aaa
aas
imul
mov
mov
sbb
loop
faddp
adc
loop
push
sbb
hlt
faddp
jge
xor
sub
mov
pusha
pop
push
scas
cdq
into
mov
and
pushf
clc
push
test
lock
ret
inc
enter
daa
jge
bound
inc
stos
lods
bound
push
fistp
or
lock
jnp
mov
pop
sub
test
(bad)
fwait
popf
sbb
sub
adc
fisubr
and
jne
ds
lds
ret
pop
outs
xchg
push
add
(bad)
call
out
sbb
call
imul
push
push
cmc
mov
fld
nop
or
shl
push
jnp
sub
xlat
js
int
pop
xchg
cs
mov
mov
sub
(bad)
mov
mov
xchg
push
xor
hlt
or
add
inc
out
adc
jne
adc
movs
sub
xchg
ficomp
rcl
mov
xor
adc
or
dec
push
out
mov
push
mov
sbb
sbb
ss
and
and
xchg
sbb
in
ficom
cmp
xchg
aad
(bad)
xor
imul
sub
movs
(bad)
fisub
mov
lods
movs
outs
inc
aad
sti
dec
(bad)
sub
fisttp
mov
push
aam
stc
adc
jg
sub
lods
fwait
xchg
test
outs
bound
push
in
fbld
stc
push
movs
sbb
in
je
push
test
je
ror
dec
not
sub
in
aaa
jne
out
pop
adc
sub
or
lods
mov
add
mov
fdiv
addr16
int3
pop
cmps
inc
xchg
adc
sub
xlat
fs
inc
daa
adc
jg
inc
imul
sbb
test
data16
mov
push
mov
jl
ins
jae
adc
adc
inc
jns
mov
xchg
les
test
fwait
ds
rol
cmc
arpl
adc
jbe
mov
jg
mov
nop
or
jmp
mov
int
fmul
mov
xor
and
out
inc
fs
rcr
mov
jg
(bad)
push
in
fcom
xchg
mov
mov
lds
add
cmps
icebp
or
push
and
in
sahf
pop
lods
mov
adc
(bad)
mov
add
mov
pop
push
jmp
in
push
mov
clc
adc
adc
and
sbb
movs
pop
xchg
fincstp
inc
or
dec
push
in
ins
add
or
test
fs
pop
test
jle
mov
jmp
mov
jge
stos
ror
cmp
mov
push
push
cli
idiv
fwait
(bad)
scas
(bad)
dec
enter
jecxz
add
jo
xor
jmp
xor
mov
mov
outs
mov
ja
test
paddw
loope
(bad)
xchg
xchg
jmp
and
pop
push
imul
pop
popa
add
je
call
and
cmp
pusha
mov
xchg
mov
xor
in
and
sub
fsubr
jge
push
dec
xor
dec
int
add
in
clc
jb
cmp
or
inc
jmp
push
pop
cmp
outs
clc
xor
int3
enter
das
(bad)
cwde
dec
stos
push
xchg
push
out
adc
or
cmp
dec
jg
cmp
cmp
and
idiv
inc
rcl
inc
movs
pop
loop
xchg
mov
fisubr
cli
js
cmp
pop
sti
inc
mov
dec
stos
sub
fs
sub
pushf
xchg
not
mov
and
inc
in
jno
pop
dec
repz
sbb
and
pop
mov
inc
retf
pop
push
cs
jno
push
inc
dec
shr
xchg
add
push
sbb
sar
xlat
mov
jno
mov
mov
stc
pushf
pop
jae
cs
(bad)
cwde
inc
mov
mov
sub
xchg
sub
mov
mov
ficomp
lock
sbb
push
mov
xor
pop
out
int3
and
xchg
(bad)
xor
xchg
lods
xchg
jl
push
cmp
scas
mov
fisub
xor
popa
adc
pop
mov
out
and
mov
sub
cmp
cmp
shl
dec
cmp
xor
cmps
or
into
shl
lahf
cli
or
ds
sub
mov
mov
mov
jno
out
xchg
pop
je
pop
lds
cmps
cdq
mov
fucomi
push
popf
dec
lock
shl
leave
cmp
mov
iret
scas
imul
ret
jbe
es
push
cmc
cmp
pop
lahf
call
sbb
fidiv
pop
popf
mov
add
dec
jae
mov
jb
loope
xor
icebp
cwde
sub
scas
and
pop
int3
lds
xor
gs
cmp
fadd
jo
mov
(bad)
lods
xchg
pushf
or
mov
in
leave
adc
stos
icebp
std
xchg
or
cmp
aas
aaa
cmp
push
and
sbb
mov
or
dec
fstp
or
ja
add
out
xchg
inc
mov
dec
and
(bad)
fisub
(bad)
mov
push
lods
fsubr
(bad)
scas
cmps
push
rol
fwait
add
mov
ins
inc
mov
repz
ds
cmc
mov
pop
xchg
pop
adc
pop
xchg
fstp
scas
pop
aam
or
pop
test
out
cmps
inc
daa
retf
ds
fidiv
ret
dec
mov
js
inc
das
sub
adc
rcl
repz
mov
cmp
out
xlat
mov
pop
cld
std
adc
jno
adc
mov
xor
leave
mov
sub
dec
dec
in
mov
stc
inc
sbb
mov
push
sub
loopne
jb
add
outs
test
add
ror
xchg
inc
xchg
dec
arpl
out
cmp
test
mov
push
les
jb
int3
jecxz
mov
imul
out
add
jo
push
push
loope
popf
or
out
cs
les
test
push
fs
and
fsubr
ds
mov
cmp
xlat
iret
lds
lock
push
xchg
aad
mov
std
xor
(bad)
(bad)
(bad)
mov
push
and
xchg
enter
cmp
neg
mov
sbb
pop
repz
rcl
pop
jno
fwait
stos
push
adc
sbb
jge
mov
pusha
movs
xor
jl
sub
je
lods
call
push
enter
cs
pop
cmps
add
sub
jmp
cli
xor
mov
cmc
mov
mov
cwde
push
adc
sub
aaa
mov
dec
cmp
pop
jecxz
cmovle
jle
test
mov
and
xor
jmp
jo
ja
shl
inc
sti
sbb
xor
inc
addr16
fnstsw
daa
fld
dec
sbb
mov
pop
pop
mov
mov
push
vxorps
test
pop
mov
sbb
mov
ret
(bad)
in
pusha
mov
adc
lock
cli
xchg
mov
xchg
inc
sbb
inc
dec
dec
xchg
inc
sub
or
dec
out
mov
xor
push
test
jle
fs
mov
ins
mov
cli
mov
(bad)
sti
jo
xor
mov
shr
cmps
pop
in
dec
dec
rcl
xlat
adc
cmps
pop
mov
std
test
jmp
loop
cdq
jl
dec
in
xor
xchg
pushf
lock
xor
and
das
push
mov
xor
sar
jbe
jp
pop
xlat
stc
jmp
mov
in
ror
icebp
enter
icebp
jne
mov
mov
rcr
idiv
pop
dec
cmp
jno
arpl
ja
(bad)
mov
arpl
add
push
xlat
pop
ret
cmp
(bad)
adc
mov
adc
data16
fsub
mov
pop
pusha
outs
sub
dec
scas
imul
(bad)
xor
and
push
jno
test
mov
jp
fs
pusha
cdq
xchg
push
or
pop
daa
adc
popa
popf
jmp
pushf
imul
out
mov
add
aam
cs
test
add
inc
inc
mov
mov
xchg
sub
pop
adc
dec
imul
adc
cmp
jns
(bad)
mov
daa
or
xchg
mov
cmc
pushf
push
movs
loope
call
xchg
pop
xor
dec
and
ja
push
mov
pop
xor
(bad)
hlt
jno
adc
mov
xor
aas
push
adc
cmp
gs
stos
xchg
std
inc
sbb
repz
es
ret
pop
cmc
daa
les
ror
ret
cmp
jnp
je
call
pop
loopne
std
or
push
xor
or
mov
and
xor
test
pop
jmp
or
push
int
movs
in
adc
cmp
sub
cdq
and
mov
addr16
add
fmul
daa
test
mov
and
jae
(bad)
lock
inc
mov
add
(bad)
ins
xor
and
data16
aaa
fisttp
or
mov
ficomp
retf
add
std
jae
out
mov
push
imul
adc
daa
and
int3
push
xor
pop
inc
push
les
adc
(bad)
ret
aam
xor
sbb
jg
movs
dec
mov
cmp
mov
pop
fcomp
mov
das
dec
mov
xchg
fs
repnz
mov
cmp
fst
addr16
pop
mov
pushf
inc
sbb
pop
repz
bound
jbe
gs
hlt
xlat
jle
jp
je
fwait
jne
leave
out
xor
xor
int
out
lahf
jge
fmul
lods
jae
xchg
or
add
jno
xor
adc
pop
mov
xchg
int
sub
xor
or
cmp
in
xchg
dec
pop
stos
repnz
jns
jae
mov
adc
mov
push
mov
icebp
ja
sub
push
das
xor
jmp
addr16
rcl
shr
je
ja
int
cmp
mov
push
mov
sub
pop
pop
sbb
push
jne
pop
in
cmps
sbb
sbb
xchg
shl
imul
repz
push
and
jb
lds
jae
xchg
into
rcr
lods
adc
pushf
into
cmp
mov
dec
sub
mov
out
xlat
movs
push
push
push
stc
push
mov
dec
jecxz
ror
jb
cli
mov
adc
jne
jg
les
ja
fidiv
xchg
enter
(bad)
jo
sub
test
jmp
xchg
or
fwait
stos
fdivrp
rdtsc
xchg
jb
add
movs
sub
mov
jmp
sbb
loopne
jnp
ins
adc
repz
(bad)
xchg
push
xor
or
dec
dec
adc
movs
retf
and
pop
mov
add
pop
jmp
and
cmps
fbstp
sti
mov
mov
mov
shl
mov
push
rol
sub
xlat
call
and
out
je
das
or
in
in
adc
(bad)
and
repz
pop
jno
inc
scas
dec
mov
xchg
retf
jle
fcom
add
xchg
mov
adc
mov
mov
lods
sub
mov
(bad)
sub
iret
pop
ins
jp
sbb
loopne
enter
add
xchg
dec
add
cdq
xchg
inc
jle
cmp
mov
jnp
cld
dec
enter
test
out
mov
sub
adc
cmp
fwait
pusha
(bad)
mov
mov
aam
adc
cmp
inc
ja
adc
idiv
push
sub
jmp
(bad)
in
ins
ret
or
mov
call
das
test
xchg
lahf
retf
cmp
adc
cmps
ins
xor
repnz
sahf
dec
inc
push
out
js
inc
add
mov
jne
push
jle
xchg
mov
push
push
add
pop
pushf
push
enter
(bad)
and
push
fs
adc
jp
out
cdq
aaa
adc
inc
xchg
sbb
xchg
pop
gs
mov
mov
dec
in
and
lods
fsub
mov
in
out
daa
fs
push
jae
mov
daa
cwde
test
scas
out
adc
sub
inc
icebp
push
cmc
fsubr
jmp
mov
mov
data16
loope
sahf
dec
and
icebp
push
dec
mov
pusha
enter
adc
gs
mov
in
scas
xabort
inc
test
inc
pop
cmp
stos
mov
retf
fs
sbb
lds
mov
fs
fldcw
test
fwait
mov
je
xor
popa
stos
dec
out
es
mov
bound
and
inc
sbb
aad
xchg
pop
out
loopne
lods
cli
rcr
sbb
test
leave
in
(bad)
sbb
jo
push
dec
movs
cwde
sub
dec
fbstp
fdivr
fdivr
stc
sbb
dec
pop
push
mov
iret
mov
mov
jbe
pop
xchg
push
xchg
and
mov
lods
fimul
jp
daa
lea
and
(bad)
int
mov
(bad)
lds
mov
popa
jno
pop
scas
xor
adc
mov
jmp
pushw
out
popa
and
sar
push
fisub
cs
aaa
push
stos
mul
or
pop
in
sub
in
jmp
mov
sub
inc
ror
push
mov
jl
retf
ja
and
and
jle
xchg
shl
bswap
sbb
pop
fs
mov
xchg
loop
cs
daa
jmp
arpl
push
jno
push
adc
movs
(bad)
ret
cmc
mov
adc
cmps
sbb
in
lahf
adc
or
or
lock
inc
int3
fstp
arpl
mov
inc
in
sub
dec
fstp
and
out
dec
add
mov
mov
outs
add
iret
add
add
mov
std
lods
xor
je
mov
mov
ins
imul
cmp
jl
add
fiadd
rol
mov
out
sub
in
cmps
lea
adc
(bad)
sar
(bad)
mov
popa
cmp
call
fwait
shl
mov
or
cmp
inc
xchg
push
fcom
sub
dec
jns
inc
in
in
pop
std
mul
cmc
fadd
mov
dec
adc
cwde
es
sti
rcr
ss
leave
in
mov
outs
xor
ret
push
sub
jge
mov
mov
xchg
push
loope
bound
mov
mov
xchg
cmp
dec
addr16
sub
dec
jbe
int3
mov
push
fidiv
ud0
sti
jno
(bad)
fiadd
jns
out
addr16
into
mov
mov
sub
inc
mov
iret
(bad)
std
popf
ss
std
call
mov
call
cmp
test
or
(bad)
call
addr16
mov
add
ins
loopne
fs
mov
pop
fild
jbe
retf
adc
sti
lods
cmps
pop
repz
cmp
fs
or
xor
push
jns
xor
mov
add
inc
or
jnp
(bad)
inc
sti
mov
jnp
out
jl
xor
repz
jmp
add
pusha
dec
pop
test
mov
jmp
js
out
dec
sub
shl
das
dec
jno
ret
ret
sbb
imul
jg
cdq
adc
mov
test
aad
pop
arpl
push
(bad)
dec
or
enter
out
gs
xor
hlt
mov
leave
jns
mov
cmp
push
scas
aaa
clc
jle
add
jns
pop
pop
out
jb
xchg
pusha
lea
add
fisubr
jmp
out
daa
pop
inc
sbb
cmp
cmps
je
pop
xchg
cmps
pop
pop
cdq
mov
push
(bad)
hlt
xchg
and
outs
fisttp
add
mov
xchg
setnp
cmps
xchg
xlat
aas
cmp
push
cld
leave
pop
scas
xor
fdivr
fidiv
stos
pop
pop
repnz
imul
ja
in
mov
out
push
movs
sub
lea
mov
jle
loope
jge
inc
sbb
gs
dec
xchg
test
ins
or
fstp
cmp
and
sahf
jecxz
jge
aaa
(bad)
int3
shl
test
cmp
loope
pop
and
jmp
push
push
push
sbb
test
mov
sar
ror
jl
jo
cmp
and
xchg
jmp
adc
and
xchg
jo
int3
and
dec
add
movs
or
xchg
cwde
dec
into
stc
push
sub
pop
and
fbstp
pop
pop
lods
fcos
mov
mov
jecxz
retf
pop
jge
movd
mov
and
inc
inc
xor
or
cmps
mov
repnz
mov
adc
inc
xor
inc
xor
mov
pop
mov
(bad)
movs
mov
xchg
pushf
loop
jns
jno
mov
add
scas
xor
pop
push
jmp
xchg
and
mov
mov
push
xor
rcl
dec
movs
xor
and
ds
inc
jecxz
inc
add
and
xchg
lahf
dec
sub
ds
rcl
hlt
xor
popf
and
lock
dec
jns
push
scas
and
call
fmul
adc
push
movs
pop
or
and
and
gs
mov
xchg
cmp
sub
mov
ds
or
pop
jne
adc
popa
mov
fdivrp
cmp
addr16
adc
sbb
(bad)
adc
pop
jmp
sbb
test
xor
nop
int
(bad)
outs
in
add
aas
test
loop
push
xchg
hlt
dec
jns
sub
test
jg
(bad)
inc
ret
sub
sbb
in
cli
jbe
loope
ja
pop
mov
neg
or
adc
loopne
aam
sbb
test
push
fstp
leave
sub
leave
ret
xchg
out
inc
dec
js
outs
mov
mov
mov
sar
rcr
fnsave
cmc
lea
or
or
data16
in
sahf
movs
ins
test
sub
mov
enter
lods
jp
and
push
pop
mov
in
icebp
call
aam
jmp
cdq
pop
cmp
in
scas
push
addr16
fdivr
call
(bad)
aas
jns
out
lods
sbb
adc
(bad)
lods
loopne
add
mov
leave
mov
ret
pop
sbb
int3
xchg
retf
rol
test
cmc
cld
(bad)
mov
shr
mov
arpl
push
clc
mov
mov
mov
mov
ins
pop
xchg
adc
dec
xor
repnz
repz
cmp
movs
sbb
xchg
stc
jl
push
mov
retf
xchg
cs
pop
add
xchg
out
dec
mov
fisub
jge
push
adc
cmc
fidiv
test
mov
pop
sbb
dec
ret
push
pop
test
jae
(bad)
xor
repz
mov
mov
jbe
jnp
hlt
or
shl
mov
sbb
push
jbe
mov
int
mov
loopne
mov
lock
sub
jmp
es
fsubp
jg
jmp
pusha
ror
dec
dec
shr
pop
cli
sub
sbb
nop
or
pop
inc
iret
mov
jno
mov
jo
ss
fldcw
ins
das
(bad)
in
std
call
push
fs
outs
and
pop
out
std
leave
ds
pop
retfw
mov
pop
or
(bad)
(bad)
sbb
in
shl
outs
cmp
xchg
inc
jg
(bad)
dec
sbb
jg
or
xchg
or
outs
or
mov
mov
jecxz
and
outs
lods
push
call
movs
inc
pop
cmp
into
imul
push
xchg
dec
pop
or
or
and
in
rol
gs
rcl
mov
leave
cmps
mov
cs
call
fst
fmul
sub
fmul
pop
cmp
aaa
mov
leave
cmps
sub
out
or
gs
jnp
cwde
test
add
xor
es
jo
int
fnstsw
aam
and
movs
cmp
xlat
lahf
mov
pusha
xchg
sub
mov
sub
sbb
neg
ret
loopne
or
leave
mov
fst
in
leave
dec
xor
les
adc
mov
pop
xor
mov
pop
add
fnstenv
jbe
mov
lock
pop
pop
mov
pusha
fld
jg
add
inc
mov
mov
sub
mov
pushf
pusha
cmps
inc
add
mov
dec
sbb
stos
or
movs
mov
ds
adc
push
into
out
aad
(bad)
data16
or
inc
out
mov
(bad)
(bad)
dec
cmp
shr
(bad)
les
dec
fnsave
adc
mov
xchg
jno
stos
adc
pop
adc
dec
adc
sahf
push
and
dec
fidiv
cli
pop
xchg
movs
cdq
mov
jle
inc
pop
call
pop
add
mov
lods
xchg
(bad)
jp
int
or
jp
in
cmp
(bad)
sub
mov
mov
pop
xchg
inc
test
add
pushf
in
dec
sub
retf
dec
repz
sbb
je
or
pop
or
fwait
outs
pop
cmc
mov
outs
push
push
mov
inc
loopne
fstp
mov
mov
jns
fwait
sbb
dec
outs
mov
xchg
push
or
ins
iret
call
jae
ret
stos
sahf
or
mov
or
mov
add
jno
mov
dec
psubusw
or
inc
ret
adc
mov
or
dec
lods
aad
fstp
in
js
out
xlat
jo
scas
add
repnz
jmp
enter
xor
popa
and
movs
mov
scas
and
mov
mov
test
nop
shr
mov
adc
call
call
stc
(bad)
or
pop
dec
in
cmp
and
or
lea
jmp
jno
sub
std
cwde
ficom
(bad)
stos
leave
sbb
fsubrp
in
push
add
popa
(bad)
call
out
call
leave
in
out
popf
retf
jnp
xor
(bad)
(bad)
adc
ror
xchg
mov
ss
shr
pop
js
push
arpl
pop
push
in
jmp
cmp
xor
vpcmpgtb
(bad)
push
mov
rcl
clc
or
out
pop
shl
or
lahf
ret
stos
ss
push
mov
xor
add
je
movs
and
addr16
repnz
pop
dec
sub
call
cmp
test
test
aas
scas
mov
or
mov
int3
adc
loop
fstp
xchg
pop
std
nop
pop
(bad)
sub
jle
and
js
mov
cmc
fild
xchg
sub
adc
pop
outs
scas
lahf
xchg
ret
dec
aam
xchg
cmp
xchg
lds
sub
lea
pushw
movs
and
in
and
leave
les
push
int
xchg
outs
push
and
push
inc
movs
pop
jmp
adc
cwde
arpl
hlt
in
or
mov
sub
xor
push
add
dec
jge
std
mov
loope
jle
pop
movs
cmps
inc
sbb
xchg
sub
fucomp
mov
cs
pop
mov
sub
adc
pop
cmps
cmp
xor
scas
mov
(bad)
cmps
(bad)
ficom
mov
push
mov
int
or
add
cmp
cmc
retf
daa
sub
xchg
daa
adc
fwait
mov
test
jg
mov
call
hlt
or
inc
imul
or
shr
lods
ret
repz
and
fcmovu
js
pop
cmp
and
push
aaa
mov
cwde
cmp
pop
mov
out
or
push
xchg
leave
push
aad
push
push
iret
arpl
jmp
cmp
out
pushf
cmovbe
or
fstp
scas
int3
in
add
rcr
es
stc
aas
(bad)
and
mov
dec
mov
loope
pop
cld
xor
das
xor
cld
sahf
sub
sub
(bad)
push
sbb
adc
stc
pop
inc
sub
aad
mov
push
in
pop
iret
ret
aam
sbb
cli
fmulp
inc
sahf
jp
lahf
mov
stos
mov
int3
repz
cmp
mov
and
inc
cld
or
jge
call
lahf
rcl
sbb
int3
div
dec
loope
arpl
pop
dec
mov
dec
cld
imul
push
dec
add
out
xchg
sub
xor
ins
mov
(bad)
dec
and
call
inc
jo
push
scas
pusha
jno
mov
cmps
pop
ins
shr
jno
cmp
and
call
dec
shr
nop
and
call
leave
xor
movhps
pop
mov
push
dec
dec
or
adc
inc
imul
jmp
mov
or
sbb
out
(bad)
loopne
mov
arpl
xlat
out
adc
mul
sbb
xor
sub
cwde
imul
(bad)
fs
rdtsc
std
test
in
mov
pop
push
fdivr
cmp
jl
jbe
jmp
xchg
mov
sbb
loopne
sub
aam
xor
mov
push
bound
jo
sub
cwde
adc
(bad)
jmp
sub
in
loope
cmp
ficom
inc
out
int
fidivr
fmulp
arpl
mov
loop
mov
lock
pop
loope
dec
das
or
test
fld
out
pop
enter
inc
retf
rol
dec
ins
xor
sti
in
adc
xchg
mov
push
test
jmp
ficom
push
daa
stc
adc
repz
mov
add
lahf
arpl
mov
dec
mov
mov
mov
scas
loop
loope
icebp
and
sub
push
cmp
repnz
mov
retf
bound
repnz
mov
rcr
push
arpl
sub
mov
popa
mov
sbb
add
out
sub
std
mov
sub
sub
call
xor
inc
retf
jae
psubusb
mov
pusha
cli
inc
mov
mov
push
mov
rcr
dec
cmp
dec
xchg
outs
out
(bad)
pop
xchg
in
sub
imul
pusha
loopne
mov
stc
sub
std
add
cli
mov
and
mov
rol
or
rcr
dec
adc
fsub
dec
or
js
push
cdq
dec
inc
sub
pop
and
div
ins
and
ret
jg
xchg
inc
xor
outs
fiadd
pop
ficom
int3
jmp
ret
das
adc
repz
mov
cmps
int3
push
pushf
xchg
sub
add
push
dec
or
loop
retf
and
mov
mov
inc
and
fist
mov
(bad)
in
gs
gs
dec
push
inc
repnz
ins
mov
lods
xchg
paddsb
stc
jno
jg
inc
lods
lahf
pop
sbb
out
test
aaa
cmp
test
stc
pop
sub
mov
mov
add
adc
dec
sub
jb
sub
or
movs
ins
cmp
inc
shl
imul
pusha
cmc
mov
pusha
mov
mov
cs
push
iret
pop
cs
frstor
or
push
or
mov
sahf
daa
iret
pop
mov
das
sbb
sub
out
push
add
pop
clc
imul
xchg
es
js
cmps
push
call
jp
or
or
pusha
rol
cmp
inc
add
inc
adc
xchg
retf
mov
add
mov
mov
sahf
movs
push
lds
fcmovnb
in
sub
cmp
(bad)
dec
push
mov
jecxz
fstp
push
gs
cs
ss
mov
mov
inc
ins
addr16
imul
push
jb
adc
test
neg
xchg
sub
(bad)
mov
movs
sbb
or
add
imul
sub
scas
mov
ja
mov
das
sub
int3
mov
in
pop
dec
adc
fnsave
test
in
xchg
inc
xchg
push
push
push
or
scas
adc
sbb
add
push
xor
(bad)
push
lds
lods
nop
pusha
dec
ds
dec
jae
jb
xchg
and
cmc
fs
adc
jmp
inc
fucomp
or
push
add
pop
pop
nop
out
and
mov
imul
adc
mov
outs
cs
or
imul
sbb
jae
mov
test
aam
aaa
sub
or
mov
cwde
(bad)
jecxz
movs
push
out
adc
sahf
fwait
push
cld
pop
popa
push
in
inc
and
xchg
nop
int3
das
mov
mov
xchg
mov
cwde
xor
sub
add
push
cmp
and
mov
and
dec
ror
ins
lods
add
adc
or
xor
dec
cmps
push
pop
fwait
test
pop
push
lods
sbb
div
shl
(bad)
(bad)
shl
(bad)
repnz
fs
outs
(bad)
retf
push
mov
sub
gs
or
scas
arpl
pop
stos
nop
lock
cmp
lods
inc
ret
mov
pusha
or
cdq
sbb
push
lahf
add
jge
push
sub
retf
imul
stos
inc
push
dec
fs
jnp
push
adc
mov
pop
lea
sub
sub
imul
mov
popf
adc
outs
jbe
inc
adc
lods
imul
push
jbe
xor
call
jle
lock
xchg
pop
js
mov
inc
shl
adc
daa
push
jle
test
mov
mov
int3
push
(bad)
test
dec
jb
and
adc
mov
dec
hlt
fisubr
dec
mov
inc
pop
xchg
imul
mov
sub
pop
cli
cmp
sub
pop
cwde
add
aaa
or
dec
fistp
xor
not
call
dec
loopne
daa
test
fs
mov
inc
dec
dec
sbb
sub
xchg
or
mov
fst
cmp
mov
imul
repz
add
add
mov
jmp
xchg
hlt
out
jmp
push
in
gs
dec
in
(bad)
mov
addr16
xlat
jp
mov
or
stos
mov
lods
data16
xchg
jnp
and
cmp
push
mov
popf
arpl
leave
adc
scas
cmp
outs
jg
xchg
xchg
js
sub
retf
shr
fidiv
pop
xor
sbb
push
fisubr
scas
sub
adc
cmps
mov
cmc
test
cmp
mov
pop
add
or
dec
mov
jle
inc
push
daa
aam
sti
pusha
pop
dec
fwait
cmp
inc
mov
aas
adc
call
cli
xchg
jp
and
outs
popa
out
(bad)
mov
mov
jbe
inc
dec
popa
push
cmc
call
cmps
fild
mov
xchg
test
mov
jne
mov
push
popa
push
jne
mov
push
stc
iret
xor
jae
dec
lods
sub
inc
imul
out
fstp
sub
addr16
push
call
xchg
retf
inc
jno
pushf
das
fldcw
jns
dec
sbb
fcomp
ret
jb
int
mov
xor
or
fstp
frstor
inc
pop
pop
mov
lock
xlat
mov
leave
jnp
das
mov
jge
dec
imul
scas
inc
jo
pop
xor
inc
and
into
ds
inc
les
mov
push
push
sbb
pop
sub
ins
mov
sbb
imul
iret
(bad)
ss
mov
scas
lock
adc
retf
int
movs
ss
xchg
psubb
and
inc
jl
sub
and
je
pushf
jbe
mov
dec
xor
out
repz
test
ror
sahf
xor
xor
xchg
cdq
nop
in
shr
inc
pop
fs
sub
test
sbb
or
mov
dec
or
aaa
adc
or
in
inc
dec
dec
jl
push
(bad)
mov
jge
inc
out
in
inc
fptan
(bad)
jns
les
dec
hlt
ins
stc
mov
out
(bad)
retf
jg
pusha
xor
mov
sbb
dec
jno
ins
pop
movs
ret
cmp
stos
fidivr
xchg
mov
in
mov
pop
mov
in
fcom
mov
jae
jmp
add
enter
outs
outs
adc
push
push
pop
mov
jns
popf
(bad)
clc
iret
jmp
test
(bad)
fidivr
sub
xlat
push
sbb
sub
cld
arpl
int3
cs
movs
popf
push
jmp
data16
pushf
fistp
inc
test
mov
and
ja
sub
popa
cmp
push
sbb
cmp
shr
xchg
icebp
xor
gs
enter
jp
out
lds
xor
out
push
das
push
repnz
xor
jae
xchg
mov
mov
dec
lods
pushf
pop
lahf
(bad)
or
outs
(bad)
test
outs
repz
mov
jne
fimul
cld
xchg
cmps
cmp
sub
lahf
jge
int
and
pop
jbe
pop
aad
jge
shr
mov
push
scas
stos
xor
outs
test
jae
or
or
or
dec
cmps
ror
xlat
fdiv
pop
mov
sub
test
sub
add
retf
mov
xor
mov
cmps
imul
push
mov
adc
loop
sti
(bad)
xor
jb
jl
or
mov
stc
jge
std
out
call
fld
leave
mov
movs
add
sbb
jne
mov
or
ds
rcl
or
(bad)
pop
out
mov
mov
jmp
imul
out
daa
and
mov
sbb
sbb
adc
jl
inc
dec
dec
je
adc
mov
fwait
sbb
mov
aam
or
sahf
call
jp
and
dec
add
adc
adc
into
xchg
popa
xor
shr
mov
mov
xchg
(bad)
jae
in
xchg
cmps
jnp
inc
test
(bad)
fbld
out
in
daa
xor
mov
inc
pop
ret
shl
lods
lods
add
test
addr16
sbb
add
push
addr16
push
gs
fld
push
jno
div
fisubr
cmp
retf
add
or
or
cwde
sbb
ret
stos
cmp
push
adc
jl
push
inc
mov
stos
popa
inc
pop
mov
add
inc
mov
(bad)
jp
fwait
enter
and
rcr
adc
dec
mov
div
jno
jbe
loopne
dec
retf
sub
pop
mov
mov
cmp
xchg
sbb
in
nop
and
xchg
dec
scas
xor
sbb
jg
loope
mov
xor
jb
shr
or
pushf
sbb
std
out
xchg
loop
cmc
cmp
cmp
stos
and
shr
ret
or
pop
call
or
sbb
push
xlat
mov
or
out
(bad)
into
aas
imul
rcr
out
in
pop
aaa
stc
out
adc
sbb
pop
jle
(bad)
dec
mov
jo
xchg
mov
cwde
jmp
repnz
and
out
fimul
add
int
clc
in
mov
movs
mov
ret
jmp
in
int3
pop
mov
aad
out
repz
call
cmp
add
push
aas
jge
je
xchg
scas
add
push
pusha
push
pop
cmp
popa
sub
mov
gs
jnp
mov
mov
push
sub
mov
in
and
mov
imul
retf
stc
fstp
mov
std
repz
rcl
mov
pop
fidiv
jnp
loop
cmp
pushf
(bad)
jmp
push
jle
shl
mov
push
ja
clc
xor
mov
inc
xor
jne
add
sub
cdq
jge
into
out
and
push
xor
add
sbb
mov
test
das
leave
out
sbb
fidiv
xor
jne
dec
repnz
jb
sahf
jbe
iret
adc
dec
hlt
xor
pop
or
test
inc
mov
aas
pop
cwde
mov
pop
and
enter
aas
ret
xor
int3
stc
fnsave
inc
ror
outs
out
fst
sti
fbstp
dec
movs
jnp
inc
dec
popa
inc
mov
bound
mov
jle
sbb
xor
scas
lods
hlt
sub
rcl
add
push
jp
mov
adc
cmps
dec
cmc
pop
loopne
fistp
aam
pushf
aam
cmp
dec
div
cmps
mov
gs
outs
xlat
dec
or
pushf
add
lods
inc
lock
retf
pop
push
test
jbe
mov
movs
cwde
adc
cmp
pop
mov
mov
pop
jo
loope
xor
xor
push
jae
adc
lahf
retf
cmp
pop
mov
popf
mov
stos
idiv
inc
add
enter
test
dec
jno
lods
jne
jns
bound
ds
dec
pop
je
or
(bad)
jo
lds
movups
(bad)
jp
inc
xchg
cwde
repnz
into
lahf
(bad)
pusha
loop
and
(bad)
and
inc
sbb
out
(bad)
stc
jecxz
xchg
inc
add
sti
sbb
mov
(bad)
aas
jnp
(bad)
sbb
pop
les
mov
cmp
or
xor
movs
in
mov
int
clc
inc
fdiv
pop
ins
lea
(bad)
sti
sbb
or
lock
or
iret
xchg
sahf
jmp
jmp
repnz
stos
inc
sub
or
in
mov
in
inc
fstp
out
mov
fild
ror
test
test
movs
xchg
mov
clc
push
xchg
mov
xchg
lds
retf
push
push
inc
jp
dec
jecxz
aam
sahf
in
aad
popf
push
daa
mov
lahf
mov
jp
out
ja
adc
jnp
sub
int
in
adc
adc
mov
je
pushf
outs
or
mov
fiadd
cmps
data16
movs
mov
aas
test
int3
call
movs
mov
mov
jmp
int3
push
cmps
xchg
dec
loope
push
sub
repnz
shl
jb
sbb
mov
push
mov
mov
adc
aad
(bad)
add
jle
mov
out
inc
xchg
out
and
jns
mov
mov
arpl
mov
xchg
in
xor
dec
mov
fs
das
sbb
adc
pop
xchg
arpl
mov
jle
sub
or
inc
mov
adc
icebp
xchg
movs
dec
scas
outs
jo
mov
ins
aad
aaa
xchg
cmp
mov
outs
jle
dec
xor
pop
push
retf
fidivr
das
jl
inc
xchg
pop
push
icebp
mov
push
pop
test
ror
jmp
push
push
push
mul
add
or
movs
movs
int3
jns
jge
ret
mov
xchg
or
mov
lahf
dec
add
es
mov
push
dec
into
or
jp
inc
dec
sbb
adc
push
xor
daa
mov
sub
xor
fadd
fwait
push
(bad)
(bad)
push
adc
adc
push
pop
cwde
loopne
mov
clc
jecxz
jne
cdq
mov
or
inc
dec
enter
inc
inc
jp
mov
mov
icebp
aas
sbb
retf
xor
jae
and
jns
movs
adc
jmp
jb
aam
mov
mov
push
mul
clc
xchg
push
rol
fdivr
lock
or
fadd
rol
jg
mov
adc
add
xchg
sub
mov
test
add
div
test
add
cmc
xchg
xor
loop
stos
icebp
sbb
fsubr
lods
mov
not
repz
add
lea
dec
rcl
movs
ss
daa
jecxz
push
mov
sti
sbb
jmp
or
inc
xchg
cmp
sub
push
pop
sar
stc
cmp
cmp
in
push
je
rep
xor
push
mov
mov
mov
in
jp
jns
fdivr
xchg
sbb
mov
out
psrld
push
popa
cmp
mov
mov
add
hlt
xchg
cmps
mov
aad
movs
jno
push
leave
mov
dec
and
pop
cmp
call
test
xchg
xor
hlt
cmc
paddw
push
pop
fsubp
xor
mov
repz
pop
push
adc
dec
adc
pop
xchg
aas
cmp
rcl
sbb
loopne
ins
push
mov
jno
aad
dec
add
sbb
shl
mov
das
cdq
stos
enter
jmp
ret
xchg
movs
fimul
je
dec
jl
mov
shl
daa
cmp
pop
sahf
pop
jmp
mov
icebp
jne
and
dec
adc
aam
dec
push
inc
cmp
and
sub
cmps
xor
mov
xor
lock
jge
ja
or
fsubr
jnp
pop
ins
mov
pop
and
sbb
push
pusha
rcr
iret
stos
fs
rcr
cmp
lahf
ror
out
xchg
sub
leave
sbb
les
sbb
lods
sti
js
xchg
aas
mov
shl
xor
mov
add
inc
inc
jge
js
(bad)
(bad)
fld
inc
ret
cmps
pop
push
dec
imul
call
xor
jg
call
xchg
and
cmp
cmps
dec
cmp
mov
fdivrp
or
fwait
dec
push
aas
ss
test
add
push
add
jo
out
cli
xchg
dec
or
sbb
ins
adc
or
mov
ret
movs
enter
pusha
xor
bound
pop
dec
or
test
cmps
dec
ins
add
lods
cld
test
js
add
jb
mov
cld
or
jge
dec
add
inc
popf
and
mov
sub
push
dec
add
dec
jnp
sbb
and
outs
ins
sbb
shl
jo
inc
arpl
bound
lods
mov
imul
dec
cmps
or
out
test
(bad)
or
shr
repnz
ret
sbb
fidiv
out
mov
mov
shl
sbb
fwait
data16
mov
loopne
push
outs
fsubr
mov
push
dec
xlat
mov
inc
jmp
jno
or
jnp
sbb
test
(bad)
cs
sub
adc
out
mov
(bad)
mov
nop
add
sbb
xor
hlt
mov
fdiv
and
adc
xchg
dec
adc
(bad)
xchg
adc
xchg
ret
jno
adc
stos
ret
jge
xchg
ret
mov
into
add
sub
sub
fstp
lods
das
xlat
cmp
repnz
int3
movs
(bad)
xor
jle
cdq
inc
mov
add
adc
push
jecxz
std
daa
sub
lods
ror
xchg
push
sbb
les
cmp
je
jo
int3
xor
fild
jmp
in
add
cmp
call
or
cmp
cld
outs
ja
or
jp
xchg
lods
xchg
inc
(bad)
jecxz
test
aam
pop
rol
pop
enter
out
fs
push
mov
and
push
lahf
add
fwait
push
cwde
test
add
and
mov
dec
mov
out
dec
(bad)
push
dec
loopne
fist
cld
dec
cmp
and
inc
outs
mov
in
fimul
sub
lds
mov
call
push
sub
adc
dec
inc
lds
adc
mov
test
pushf
ss
arpl
ins
jg
xchg
mov
pop
cld
mov
lods
cmp
xor
enter
mov
jno
test
aad
outs
(bad)
ror
les
stos
lods
call
jns
jno
loop
aad
dec
ins
into
fmul
lods
push
fwait
mov
outs
shl
and
mov
aam
mov
mov
push
sahf
xchg
jge
adc
test
retf
sub
push
rcl
push
mov
push
aaa
in
dec
jae
mov
not
jle
les
add
dec
cmp
jle
jp
mov
popf
mov
int
int
and
jl
fistp
mov
(bad)
cdq
add
pop
xchg
stc
int
repnz
jne
nop
or
adc
pop
mov
adc
rcr
add
add
dec
cmp
rcr
pop
and
cmps
jo
jmp
int
sub
or
jb
ret
sub
mov
cld
test
stos
(bad)
mov
loope
mov
xchg
das
dec
pop
jg
stc
fild
rcr
xchg
mov
fs
xor
mov
popf
xchg
cmp
into
(bad)
data16
and
mov
xor
cdq
call
mov
cdq
sbb
mov
push
scas
sbb
repnz
out
mov
push
je
popf
ins
add
imul
pop
adc
jae
arpl
dec
pop
jg
and
push
dec
sub
cli
into
div
in
dec
pop
push
inc
into
inc
sbb
dec
jecxz
stos
scas
lock
jecxz
or
inc
lods
arpl
repz
mov
dec
push
ret
test
inc
mov
jle
pusha
sbb
xchg
add
dec
mov
add
sbb
sub
xchg
ror
stos
mov
adc
retf
xchg
sub
inc
(bad)
and
test
(bad)
fisub
or
pop
pop
sbb
jnp
jno
daa
test
jno
scas
jb
pop
push
or
or
dec
pop
inc
fwait
jmp
mov
add
or
fsubr
or
xchg
and
dec
pushf
inc
jns
into
and
dec
xor
ja
ret
jecxz
retf
or
int3
imul
cmp
cmp
in
mov
pop
je
inc
in
(bad)
xlat
lods
push
into
pop
and
mov
lods
or
cs
cwde
inc
fwait
push
push
or
dec
cmps
xor
fwait
pop
call
lahf
push
mov
push
rcl
pop
out
das
iret
adc
cwde
add
add
(bad)
and
adc
rol
jae
mov
scas
add
jnp
inc
imul
loopne
out
xchg
arpl
mov
shl
mov
shl
mov
mov
sub
sbb
das
inc
mov
daa
push
jg
(bad)
mov
push
repz
jne
and
jmp
sbb
addr16
sbb
jnp
jnp
repnz
cmp
sbb
xor
pop
xchg
mov
mov
add
mov
mov
push
popa
xchg
push
retf
test
clc
fstp
int3
mov
je
clc
call
sti
mov
adc
iret
pop
outs
outs
mov
ror
inc
mov
sbb
sbb
adc
inc
fiadd
push
shr
retf
or
lods
or
movs
cli
arpl
rcr
mov
rol
push
aaa
xchg
lock
fs
sub
jge
shr
mov
xor
xchg
int
cmp
mov
jmp
fdivr
cwde
xchg
push
jmp
sbb
pop
pop
xchg
sbb
push
arpl
clc
dec
retf
mov
cs
in
loopne
sub
adc
inc
scas
push
sub
aaa
dec
pop
loope
and
mov
clc
and
jle
push
iret
sbb
push
mov
push
mov
gs
and
inc
lods
pop
xor
inc
xchg
fcomp
ja
mov
mov
mov
outs
ss
movs
out
(bad)
aaa
cmc
xchg
jle
fisub
jmp
movs
fnsave
adc
xchg
(bad)
in
sbb
jg
nop
xor
call
test
cld
or
or
add
cmp
or
test
movs
rcl
xchg
mov
ret
lea
shr
out
xor
jne
div
ins
or
pusha
out
jge
cwde
push
xchg
ins
mov
inc
xor
adc
pop
xor
adc
xchg
jb
push
iret
push
or
into
or
mov
push
add
jl
pop
aas
adc
fwait
inc
outs
test
mov
inc
inc
out
adc
loope
out
pushf
lea
xor
test
mov
inc
push
and
xlat
pop
push
test
movs
xor
or
and
dec
test
xor
fidiv
pushf
pop
shr
sbb
push
inc
(bad)
cdq
pop
mov
push
cs
adc
ret
sub
ficomp
mov
hlt
popa
and
stos
in
adc
test
push
cld
adc
pusha
mov
outs
xor
add
pop
sub
out
int
sub
add
add
ud0
add
cmp
(bad)
cmp
mov
push
into
xchg
retf
jmp
loope
ret
push
sbb
mov
cmps
jns
push
adc
push
inc
adc
mov
or
jmp
jmp
sub
sti
push
xchg
adc
imul
dec
call
je
jae
xchg
gs
push
jl
pop
xor
xchg
movs
push
xor
cmc
mov
sub
nop
dec
cmp
jnp
mov
stc
mov
data16
and
ret
pop
or
jae
push
rdmsr
stos
inc
and
cmc
jo
pop
push
mov
in
(bad)
push
pop
aad
mov
push
lahf
aaa
lods
cld
jns
sar
stos
leave
add
in
cs
xlat
sbb
jb
mov
fisttp
sub
movs
add
arpl
loope
adc
mov
mov
(bad)
mov
adc
jmp
xchg
xchg
dec
enter
adc
scas
mov
sbb
lahf
add
test
lods
es
jmp
ins
xchg
fwait
mov
push
xchg
xchg
mov
cld
shr
repnz
jns
imul
loop
sahf
aam
dec
adc
out
cdq
mov
jl
(bad)
out
sar
pop
xchg
fst
int3
imul
xchg
rcl
inc
xor
je
imul
cmp
out
imul
dec
push
or
scas
into
ret
jg
push
mov
or
mov
out
dec
std
(bad)
(bad)
adc
and
hlt
pop
out
outs
sub
sub
into
ret
adc
dec
xor
pop
(bad)
and
rcr
jle
push
sbb
ss
mov
push
cmc
fbstp
xchg
mov
xchg
jo
sahf
arpl
ins
pushf
call
jno
ret
test
test
outs
stos
into
push
or
mov
(bad)
rcl
xchg
or
inc
ror
(bad)
adc
mov
cmps
or
idiv
jl
popf
cmp
bound
mov
mov
shr
scas
xor
xchg
ins
pop
cs
lahf
xor
mov
(bad)
std
xchg
inc
test
call
sbb
xor
(bad)
cmc
sbb
mov
lahf
je
test
jl
dec
shr
lods
inc
cmp
rcl
sti
add
adc
fstp
pop
fnsave
adc
mov
mov
mov
outs
or
(bad)
js
dec
leave
push
inc
push
iret
dec
fsubr
xor
ss
jno
sbb
daa
sbb
mov
test
retf
hlt
mov
fs
inc
xlat
or
mov
sbb
xchg
sub
xor
out
imul
adc
jne
sbb
cmp
lahf
fsubr
mov
jno
inc
dec
aas
jmp
jl
mov
int
and
nop
jno
add
cs
xor
pop
lods
sub
jmp
mov
mov
mov
mov
loope
ss
mov
icebp
inc
outs
aam
(bad)
lods
mov
push
xor
dec
nop
stc
mov
and
sub
es
(bad)
mov
out
dec
(bad)
pusha
inc
test
xchg
push
push
sub
scas
lods
xlat
rol
push
(bad)
sahf
ret
ds
or
mov
hlt
mov
stos
rcr
dec
adc
add
movs
inc
std
inc
js
pop
cmps
ja
push
loopne
cli
inc
push
mov
mov
inc
dec
scas
sahf
add
mov
jp
push
rol
scas
loopne
xor
and
pop
retf
inc
xor
inc
jnp
adc
or
pusha
sbb
adc
daa
inc
inc
and
push
dec
inc
mov
add
scas
jge
imul
test
mov
cmc
dec
jns
int3
cmp
mov
add
outs
mov
pop
inc
pop
and
add
popf
call
pusha
cdq
fdiv
sbb
and
shr
and
cmp
mov
adc
push
jmp
xlat
and
pop
xor
or
aaa
push
mov
dec
xchg
and
cmps
mov
jbe
or
pop
lahf
mov
retf
repnz
(bad)
loopne
fwait
(bad)
mov
jl
arpl
mov
push
loope
mov
cdq
ins
(bad)
mov
inc
pop
adc
cmp
pop
out
sbb
pusha
sub
add
pop
fmul
mov
jmp
and
outs
xchg
adc
sub
ds
cmp
and
gs
lods
arpl
or
adc
aad
lds
aad
out
pushaw
sbb
loope
dec
addr16
pop
fucomp
sar
mov
ja
inc
sbb
dec
dec
fsubr
in
push
retf
imul
and
inc
mov
imul
stc
or
test
or
enter
sahf
jnp
mul
pop
sbb
int3
scas
loope
movs
xchg
inc
fild
cmp
or
inc
ss
sbb
pop
mov
pop
add
xchg
dec
jecxz
test
fadd
daa
sub
cmp
jo
adc
test
xchg
jle
pop
(bad)
and
sbb
outs
xchg
push
call
sbb
sbb
stos
jne
push
mov
imul
nop
mov
rol
pop
mov
imul
jmp
inc
je
inc
call
jae
addr16
cmp
sahf
inc
mov
and
push
out
aas
jmp
fist
push
push
dec
leave
scas
sar
and
fmul
xchg
pop
call
xchg
(bad)
dec
(bad)
fwait
push
jmp
cdq
xchg
pop
adc
inc
test
leave
and
sbb
mov
nop
sbb
or
xchg
cmp
out
add
outs
sbb
int3
(bad)
out
push
cli
lahf
adc
inc
mov
movs
push
cmp
xlat
xchg
es
adc
mov
popa
or
sub
jmp
mov
aaa
fnsave
cmovbe
jmp
dec
retf
pushf
ins
test
push
jmp
add
pop
mov
dec
jg
les
cs
int
dec
stos
imul
imul
dec
fnstsw
sub
mov
mov
mov
xor
pop
xchg
aaa
popf
popf
out
pop
pop
add
sbb
jmp
data16
lods
sub
add
add
add
jecxz
js
xor
fnstcw
cmp
mov
cmp
adc
mov
nop
js
shl
pop
(bad)
xor
sub
push
mov
or
adc
add
adc
pop
mov
test
fadd
pop
rcr
fnstcw
mov
jnp
push
lods
mov
push
inc
adc
or
les
xchg
jmp
pop
dec
xor
test
and
mov
inc
jmp
mov
cmc
adc
adc
adc
lea
or
sbb
movs
ret
fwait
test
dec
pop
jo
(bad)
cli
jb
xor
mov
jle
jns
push
mov
cli
test
cmp
mov
test
loope
jmp
inc
xchg
jle
push
mov
test
lea
pop
adc
push
cmp
fidiv
xor
cs
jmp
push
jmp
adc
in
or
and
jbe
and
mov
sub
rol
inc
retf
mov
call
nop
or
or
and
(bad)
jle
sbb
cmp
mulps
aam
jne
sbb
xlat
call
ss
or
adc
push
and
or
ss
daa
add
jae
jae
push
cmp
push
and
stc
call
pop
sub
xor
icebp
out
inc
push
stc
fsub
(bad)
js
cmp
loope
movs
lahf
add
sub
mov
fs
cmps
and
test
or
ret
call
gs
hlt
xchg
mov
xchg
into
jo
mov
jb
fistp
dec
adc
cmp
fimul
adc
push
rcr
jnp
cmp
out
ret
dec
stos
jge
nop
sahf
xor
(bad)
xlat
fiadd
(bad)
lahf
dec
adc
push
mov
arpl
test
shl
add
repnz
pop
cmp
pop
cwde
xor
ret
and
add
rcr
out
jp
or
aad
and
lds
xlat
mov
pop
lds
jg
jl
sbb
pushf
lods
cmp
mov
mov
mov
mov
dec
les
scas
arpl
xchg
or
mov
xor
test
or
dec
in
pop
ss
and
pop
pop
xlat
jbe
mov
rol
adc
icebp
dec
mov
cli
sbb
dec
daa
stos
clc
adc
shl
and
pushf
mov
fild
arpl
cmp
adc
add
push
push
(bad)
sbb
xor
cmp
push
add
xchg
mov
ja
mov
mov
loopne
(bad)
es
cdq
sbb
pop
ja
std
aad
jb
arpl
inc
xchg
xchg
nop
retf
popf
push
xchg
les
aas
sar
fsub
aad
les
in
repz
adc
jo
cmps
jge
aam
mov
push
push
movs
das
xor
nop
sub
adc
loopne
push
xchg
mov
ja
icebp
or
imul
mov
in
data16
xor
push
test
cmps
(bad)
inc
call
je
iret
mov
pop
adc
push
lods
cdq
cmps
popf
scas
int3
inc
push
into
pop
ror
lods
ret
cwde
shl
or
pop
ds
xchg
cmps
push
mov
mov
xchg
mov
pop
enter
pop
adc
lods
sub
xchg
cs
xchg
push
jns
and
leave
inc
retf
mov
inc
xchg
jge
jmp
push
cmp
sahf
jb
xor
fs
sbb
test
retf
je
inc
xor
stos
hlt
pushf
push
xchg
and
stos
sub
aas
fidiv
inc
addr16
pusha
pop
xchg
(bad)
jnp
dec
adc
clc
xchg
es
or
inc
fist
fwait
sub
mov
xchg
inc
jne
add
sbb
dec
jbe
sbb
cmp
test
call
test
test
(bad)
push
not
lea
fst
pop
cmps
into
add
fisubr
sti
push
push
ds
dec
push
cmp
sbb
push
and
xchg
sub
dec
inc
dec
lea
test
imul
mov
out
jle
jecxz
ror
cmp
shr
mov
pop
fistp
cmp
dec
mov
in
outs
loope
cmp
loope
repnz
jnp
mov
call
call
ins
into
movs
dec
loope
adc
jp
fcmovne
arpl
jmp
xor
jge
clc
ror
xchg
and
jl
jb
(bad)
outs
pop
in
cmp
leave
jb
out
clc
sub
xchg
pusha
test
dec
lock
enter
icebp
mov
push
push
(bad)
push
adc
sbb
int
call
popf
leave
xor
sbb
jp
stos
add
sar
stos
dec
inc
pop
jb
adc
int3
xchg
sub
movs
das
dec
jmp
ss
jmp
jecxz
mov
mov
cmp
add
pop
ss
iret
jmp
cmps
sbb
das
in
daa
std
xchg
(bad)
pop
mov
add
out
mov
mov
movs
(bad)
ja
lods
pop
push
mov
mov
mov
aam
fisub
loope
mov
inc
jmp
sub
fs
xor
or
aam
pop
fs
out
sbb
adc
lock
mov
jp
movs
push
fwait
xchg
test
push
push
cmps
imul
rcl
mov
add
call
xchg
adc
aas
mov
sahf
inc
push
sbb
and
xor
jae
mov
test
dec
inc
mov
push
cdq
xchg
pop
push
xchg
sub
imul
mov
jae
add
sar
mov
mov
repnz
mov
int
std
sbb
fucomip
pop
movs
fwait
shl
mov
push
pop
cmp
pop
mov
push
call
sbb
dec
test
and
es
pop
ins
pop
jb
cmp
mov
(bad)
scas
sub
jmp
inc
bound
lods
jbe
call
fnstenv
sbb
rep
push
enter
sub
xchg
fldlg2
ins
fldenv
loopne
mov
mov
jle
test
call
(bad)
jg
in
mov
jo
bnd
test
out
sar
ror
mov
jb
dec
jp
pop
sub
pop
sub
test
das
ja
clc
movs
aam
xor
sub
dec
lahf
es
jo
jno
and
or
fdivr
push
or
pop
jp
jl
inc
das
inc
fist
mov
fisttp
lds
into
and
adc
jne
mov
dec
test
xor
push
scas
stos
(bad)
mov
lock
adc
cmp
cwde
outs
stos
pop
pushf
push
dec
inc
notrack
imul
out
pop
xchg
cmps
retf
movs
inc
ins
int3
push
xor
jp
lss
lahf
test
inc
test
mov
xchg
fcmovu
mov
mov
sbb
iret
mov
xchg
mov
retf
sbb
cmp
sbb
lahf
mov
jp
mov
rol
in
imul
push
jns
push
adc
dec
loopne
loope
dec
cli
loope
pop
inc
scas
mov
aad
xor
in
cmp
shr
pop
inc
and
popf
push
es
movs
test
xor
scas
add
cmp
fstp
daa
mov
stc
mov
jns
dec
loop
jmp
xchg
loopne
mov
cmp
aas
add
in
mov
mov
popf
dec
xor
out
popf
or
push
es
sub
cmp
jp
es
mov
iret
pushf
inc
jp
jne
outs
push
and
ja
jo
inc
mov
inc
retf
cmp
sar
int3
dec
cdq
xchg
lahf
xor
lds
or
dec
pop
sar
out
loope
mov
jo
test
mov
movs
inc
jle
arpl
mov
imul
cld
das
es
inc
mov
test
pushf
and
imul
test
(bad)
mov
or
retf
int3
dec
int
mov
leave
mov
loop
mov
sub
xchg
bound
xchg
pop
pop
mov
aaa
mov
dec
clc
add
frstor
pop
push
sub
loope
jno
lahf
stos
cs
idiv
aaa
scas
mov
(bad)
loopne
(bad)
cwde
loopne
repz
stos
nop
jecxz
mov
fst
pop
and
loope
adc
push
adc
push
dec
xor
mov
mov
sbb
dec
sub
push
lock
xor
rol
pop
adc
in
adc
add
outs
outs
dec
push
mov
mov
je
je
lods
jo
pop
cmp
stc
mov
(bad)
cld
mov
retf
gs
je
cmps
jmp
shl
push
mov
ror
mov
mov
jo
mov
dec
cwde
(bad)
lock
clc
push
jo
sahf
adc
xchg
lahf
outs
and
push
aas
or
pusha
lds
mov
loopne
mov
clc
mov
and
inc
outs
mov
mov
and
push
mov
cs
mov
xor
xor
add
push
in
xor
mov
cmc
leave
outs
add
call
jge
jnp
fcom
push
les
push
add
lods
mov
sub
sub
dec
ds
pop
popa
sti
adc
shl
adc
fsub
outs
cmp
neg
call
mov
add
xor
xchg
int3
jb
pop
iret
push
fbstp
gs
mov
xchg
gs
sub
xor
cmps
(bad)
cdq
inc
jl
dec
test
mov
sub
pusha
cli
aaa
jmp
fwait
xor
stos
ret
ss
sub
dec
push
and
mov
mov
mov
not
pop
mov
sbb
inc
fld
ret
mov
xchg
or
sar
out
and
mov
sbb
fidivr
out
or
pop
add
scas
xchg
jmp
xor
lods
cs
sti
dec
inc
(bad)
pop
add
pop
fldcw
repz
xchg
fs
xor
pop
pop
xchg
sub
data16
stc
(bad)
(bad)
push
xchg
inc
fstp
push
addr16
movs
dec
outs
test
adc
bnd
inc
ucomiss
push
sbb
scas
pop
adc
fisubr
xchg
(bad)
out
movs
pop
aas
in
ficomp
pushf
mov
xchg
inc
push
add
arpl
enter
mov
jnp
mov
mov
mov
and
cmc
mov
sub
rcr
add
pop
xor
mov
cmp
pop
jae
adc
out
jle
mov
xchg
add
loopne
iret
push
push
ss
scas
dec
mov
inc
retf
ins
enter
inc
and
mov
scas
cmps
daa
add
daa
push
mov
rcl
or
mov
stos
(bad)
aam
fisttp
pushf
repz
sbb
int
xchg
in
popf
xchg
cmp
test
ds
dec
push
out
dec
mul
xchg
sbb
push
mov
or
(bad)
pop
and
sbb
mov
shl
out
imul
mov
bound
ja
dec
std
inc
dec
xor
push
jg
daa
test
popf
(bad)
into
stos
jl
addr16
inc
std
fcomip
pop
jl
cmp
add
push
test
rol
mov
jecxz
xchg
pop
ret
jle
mov
es
xchg
mov
mov
adc
push
or
repz
mov
push
adc
fisub
add
mov
cs
(bad)
in
fsubr
or
test
or
jae
inc
sbb
fcom
and
bound
out
push
xchg
jnp
sbb
dec
(bad)
jle
gs
sub
shrd
adc
cmp
stc
fidiv
lock
or
enter
test
iret
(bad)
add
int
pusha
clc
push
imul
cmp
cmp
repz
ret
inc
sbb
aas
inc
fisubr
pop
sub
lods
push
iret
mov
movs
and
sahf
jg
xchg
retf
xchg
in
sub
hlt
or
sbb
mov
mov
mov
fldenv
inc
pusha
inc
ret
jb
cmp
inc
pusha
inc
fild
cmp
div
imul
shl
push
out
(bad)
xor
fisttp
xchg
mov
pop
hlt
sbb
rcr
xchg
out
aas
out
imul
mov
movs
jp
clc
repz
ficomp
and
iret
test
faddp
test
cmp
jne
fidivr
inc
pop
aad
jae
xchg
inc
mov
xor
in
stc
dec
es
icebp
cmp
sbb
out
ficomp
fiadd
inc
mov
jp
jns
std
pop
jmp
into
cmp
test
xchg
add
push
sub
imul
xchg
daa
jno
repz
fnsave
in
push
mov
cs
xchg
jno
div
retf
dec
popf
ja
dec
dec
dec
ror
xchg
xchg
push
mov
data16
or
mov
mov
retf
ins
lds
cli
in
das
push
out
in
xor
stc
nop
cmps
push
add
pop
loope
add
push
add
sub
pop
xor
xchg
adc
mov
push
adc
retf
mov
call
cmp
jmp
call
aam
int
inc
cmp
iret
cwde
not
xchg
dec
sbb
jbe
loope
mov
loop
pop
pop
into
mov
jmp
int3
xor
sbb
jl
and
add
sbb
ds
retf
xchg
and
in
jns
dec
push
sahf
in
adc
pop
mov
dec
(bad)
and
imul
push
test
lea
dec
or
pop
xor
mov
cmp
test
or
xchg
inc
outs
inc
outs
mov
mov
adc
xor
dec
and
inc
xchg
stos
loop
sbb
fst
mov
jae
fsubr
ret
movs
dec
sub
inc
push
adc
pushf
xchg
int3
pop
adc
xor
adc
or
fs
bound
pop
add
lahf
retf
sbb
add
pop
loop
test
sbb
adc
test
pop
call
loop
xor
add
leave
enter
inc
movs
jno
push
and
xchg
mov
outs
in
cmp
repnz
pop
jnp
xchg
pop
loopne
jo
xor
push
int3
jmp
bound
pop
addr16
pop
aas
sbb
dec
mov
loope
push
adc
push
or
bnd
stc
xor
xchg
fwait
pop
scas
(bad)
cdq
in
push
pop
stc
ror
pop
repz
add
or
stc
push
mov
xchg
test
adc
lds
movs
jl
mov
addr16
adc
call
jl
add
xchg
(bad)
adc
add
mov
test
imul
fld
push
jg
fucomp
or
and
stos
stos
sbb
sbb
and
lea
aam
jp
jl
das
nop
push
mov
(bad)
or
mov
cwde
dec
sub
mov
jmp
repnz
mov
dec
add
mov
adc
pop
cld
movs
jle
and
push
sbb
fs
push
popf
mov
aam
dec
gs
call
and
push
sbb
cmps
mov
mov
outs
mov
out
mov
(bad)
jg
push
pop
jbe
lock
lods
push
cmps
xor
lea
cld
retf
not
(bad)
xor
mov
aaa
mov
loope
mov
sub
ds
xor
out
loop
mov
add
pop
fmulp
repz
popf
mov
repnz
jg
xor
je
lods
hlt
test
sar
rcr
mov
sbb
adc
fistp
shr
bound
retf
jo
shl
loopne
lea
retf
mov
nop
xchg
sbb
(bad)
idiv
adc
push
push
jb
gs
clc
fstp
lods
in
mov
out
dec
loope
xchg
jp
psubusw
mov
jp
jp
fwait
cmp
sbb
cli
popa
add
in
push
xchg
movs
rcl
dec
mov
push
aam
in
imul
or
and
cmps
scas
outs
(bad)
sub
inc
and
mov
and
dec
sbb
sahf
xchg
or
pop
mov
sbb
mov
jp
mov
dec
jns
stc
ins
lock
pop
test
arpl
add
mov
inc
jle
adc
mov
scas
outs
sub
or
in
xchg
pusha
sbb
arpl
inc
pop
cmp
jne
fistp
mov
mov
sub
pushf
loope
out
mov
std
xor
cmc
lea
xchg
inc
test
scas
pop
das
inc
shr
call
push
retf
mov
mov
xchg
sbb
xchg
pop
sub
mov
int
jnp
push
sub
pop
cs
daa
out
xchg
daa
cwde
in
fmul
addr16
cld
ror
mov
cld
inc
daa
inc
(bad)
dec
xchg
scas
push
push
pushf
imul
not
jne
(bad)
rcl
fiadd
pusha
fwait
(bad)
xchg
sbb
dec
out
cmp
or
loope
add
gs
(bad)
(bad)
icebp
jge
out
xchg
mov
jge
xchg
inc
push
je
push
xchg
pop
sub
outs
mov
(bad)
aam
(bad)
xchg
and
mov
pop
mov
mov
in
test
call
mov
popa
cmps
or
out
push
in
jbe
(bad)
cmp
ret
imul
and
pop
jb
scas
inc
adc
push
sbb
fst
adc
mov
mov
mov
mov
inc
arpl
push
jmp
jno
pop
shl
push
pop
jmp
and
dec
sbb
sbb
shr
cmovg
or
stos
or
dec
jmp
dec
mov
imul
inc
rcl
sbb
push
mov
pusha
mov
retf
scas
pop
push
jb
vpcompressb
pop
movs
daa
or
mov
and
popf
daa
scas
in
jnp
push
push
xor
pop
sub
xchg
sub
rcl
inc
imul
lock
fwait
cld
addr16
pop
xor
mov
imul
xchg
cwde
dec
fld
cmp
or
and
retf
mov
mov
loopne
fmul
sbb
ins
(bad)
call
je
cmps
fldenv
lea
ins
retf
ins
pop
mov
xchg
rcl
adc
dec
sbb
ret
test
push
ror
jns
cwde
iret
(bad)
aaa
scas
push
jmp
gs
je
jle
lea
imul
stc
lods
sub
dec
jp
imul
ds
adc
idiv
adc
mov
push
add
test
jmp
(bad)
cmc
fdiv
ror
(bad)
aam
movs
test
mov
ret
loop
call
(bad)
adc
xor
jo
shl
pop
push
(bad)
not
jmp
xor
scas
jg
mov
aam
outs
jmp
sbb
gs
ss
push
push
jmp
mov
pop
pushf
add
cmp
sub
inc
cmp
sub
daa
fist
sbb
int3
xlat
push
and
popa
push
sub
mov
xor
pushf
test
bound
mov
dec
pop
outs
inc
push
sub
cmps
sub
add
in
rcr
fcom
outs
call
push
test
add
mov
scas
cli
mov
cli
fdiv
jns
mov
jnp
pop
pop
rcl
clc
data16
xor
jne
pop
adc
(bad)
test
fdivr
cs
xchg
popa
push
inc
test
in
mov
cmp
inc
out
(bad)
xor
frstor
test
jno
push
adc
xchg
mov
sbb
arpl
cmp
push
stos
mov
push
pop
and
pusha
pushf
cli
mov
ds
dec
xchg
or
mov
aam
test
scas
sub
inc
jecxz
xor
cmp
inc
iret
loop
adc
(bad)
repz
push
cmps
mov
inc
adc
mov
inc
in
inc
mov
pop
xor
or
xor
sbb
stos
push
xor
pop
adc
clc
std
lea
push
call
hlt
xchg
jle
or
pop
inc
pop
pop
cmp
stc
add
fwait
mov
or
sahf
xchg
lods
test
into
add
inc
test
hlt
scas
mov
int3
(bad)
sbb
rol
inc
xchg
in
daa
(bad)
pop
mov
and
ins
and
pushf
(bad)
ins
pop
clc
movs
add
and
push
retf
jnp
pop
xchg
mov
mov
mov
pop
xchg
ins
arpl
pop
retf
loopne
push
clc
add
scas
sti
jno
sub
sub
in
xor
mov
dec
xchg
(bad)
(bad)
cli
(bad)
pushf
out
push
mov
test
inc
outs
xor
add
js
sub
imul
dec
and
xchg
(bad)
xchg
xlat
popa
push
iret
mov
jns
dec
ins
push
in
sub
rol
inc
movs
push
leave
retf
inc
push
adc
sub
add
in
xlat
xchg
cli
test
movs
mov
mov
add
fldcw
mov
idiv
aam
add
in
fadd
jnp
jecxz
ds
push
jnp
or
jmp
adc
mov
dec
push
iret
and
inc
jo
mov
jbe
and
addr16
sbb
cdq
adc
mov
inc
data16
push
fwait
jecxz
repz
repnz
gs
push
adc
bound
fldcw
rcl
and
test
and
adc
imul
sub
fnstsw
pop
fstp
add
fmul
out
xchg
mov
xchg
es
sbb
scas
out
push
loopne
mov
ins
push
push
cli
cli
push
adc
loop
jne
adc
in
push
adc
or
adc
inc
ja
mov
mov
repz
jge
sbb
or
dec
ja
(bad)
fmul
adc
xchg
sbb
out
and
int3
sub
iret
ins
retf
(bad)
fcmovnbe
dec
mov
sbb
sbb
js
out
fild
adc
pop
dec
jnp
mov
adc
mov
xchg
(bad)
mov
xor
xchg
(bad)
(bad)
pop
push
repz
ins
movs
out
xor
or
sub
adc
fcomp
scas
dec
or
gs
sub
cld
shl
sar
mov
and
jae
cmp
pop
dec
std
mov
cmpxchg
xchg
jmp
lods
dec
sbb
mov
and
push
xor
fdivp
test
xlat
inc
das
ins
jg
sub
outs
add
inc
lods
mov
pop
popa
shr
ins
push
sbb
inc
jmp
adc
mov
in
fdiv
les
pop
inc
aas
xchg
mov
pop
fs
pusha
ja
outs
rcr
(bad)
aas
dec
call
arpl
imul
mov
imul
ret
adc
fsubr
or
mov
nop
sti
pop
and
stos
push
std
mov
js
xchg
or
rcl
repz
pusha
inc
test
or
dec
loope
and
pop
(bad)
outs
jecxz
mov
mov
xor
fcom
xor
jnp
shr
cld
fcomip
mov
push
or
pop
neg
and
cmp
push
or
gs
adc
mov
adc
cld
and
xor
sbb
call
inc
sbb
add
das
push
mov
pop
jp
frstor
mov
push
adc
mov
push
cmp
push
push
cmp
or
pop
lock
cmp
loopne
mov
in
cmp
sbb
xchg
sub
adc
cmc
shl
fstp
scas
jge
scas
shl
popa
inc
jb
int3
std
ficom
xor
pop
sbb
cld
outs
xchg
test
jmp
retf
sub
sub
out
in
or
dec
add
jmp
ds
cmp
mov
cmps
cld
lds
push
test
sbb
push
int3
mov
lahf
and
dec
popa
sti
retf
push
and
enter
dec
dec
adc
xlat
sbb
rol
rcl
sbb
xchg
enter
aas
inc
jmp
inc
js
test
pop
jge
cli
push
pop
and
mov
je
in
dec
and
sti
in
push
cmp
bound
xchg
add
adc
sbb
ins
mov
jnp
adc
pop
dec
inc
fnsave
sub
aaa
int
adc
sbb
and
out
dec
cmp
jne
cmp
in
pop
xor
ffreep
sub
pop
sar
mov
retf
aam
gs
push
sub
jmp
xor
xchg
call
sub
or
stc
test
xchg
(bad)
push
pop
mov
retf
aad
xchg
es
int
test
repnz
dec
fisub
fldenv
adc
imul
or
or
and
push
xor
push
and
enter
push
mov
cmc
or
and
scas
sbb
xchg
or
and
pop
ss
sti
push
sub
inc
or
imul
mov
inc
daa
or
mov
push
dec
push
lea
inc
xchg
sbb
push
push
popa
jle
shl
cs
mov
pop
push
retf
stos
mov
hlt
test
sbb
mov
jnp
add
mov
and
fdivr
out
shl
and
or
or
pop
lock
repz
fsubr
int
hlt
jge
enter
shr
ins
pop
test
xlat
push
adc
dec
(bad)
cmp
and
bound
cmp
std
dec
mov
sub
leave
sub
stc
add
retf
pop
int3
pop
out
sub
int3
movs
out
sar
jmp
aad
std
push
cwde
mov
push
or
fwait
arpl
shl
push
hlt
in
retf
sti
mov
inc
movs
dec
dec
dec
pop
xor
ret
inc
lds
and
jns
ret
pop
mov
movs
push
in
mov
mov
jb
fwait
push
mov
cmp
lods
pop
sbb
iret
push
lods
fsubrp
or
outs
in
repnz
test
or
push
(bad)
mov
fcmovnbe
mov
neg
test
pop
pop
mov
dec
icebp
(bad)
scas
js
pop
add
cmp
xchg
cld
inc
jns
or
ror
mov
sti
sub
sahf
fcom
or
or
lahf
xchg
jecxz
xchg
mov
mov
nop
mov
adc
and
sbb
cmps
aam
inc
scas
scas
les
mov
push
add
aad
push
or
adc
mov
mov
fst
add
sbb
inc
cmp
fst
popa
mov
in
xor
jmp
jnp
cmps
sbb
cmp
fs
sti
fadd
mov
mov
iret
lods
push
or
div
push
addr16
in
mov
pop
push
inc
fwait
ins
mov
es
xchg
test
popa
adc
rol
sbb
mov
nop
sbb
je
xchg
inc
arpl
fucomp
icebp
mov
shl
inc
xor
or
rol
pushf
aaa
dec
out
cmp
gs
sbb
mov
mov
adc
pusha
or
mov
pop
stos
ins
std
lea
(bad)
mov
pop
mov
xchg
out
sar
jmp
pop
cmp
and
and
dec
loopne
or
mov
rol
push
xchg
mov
lods
mov
iret
enter
cmp
add
xchg
push
hlt
or
mov
fild
cmp
enter
sbb
or
fwait
push
ss
sub
mov
scas
sub
push
(bad)
mov
pop
les
mov
inc
cs
xchg
test
push
mov
clc
dec
test
jmp
dec
mov
dec
data16
int
and
dec
sbb
out
(bad)
push
mov
outs
fwait
pop
pop
jnp
cli
push
lods
sbb
dec
lea
je
jno
xlat
inc
inc
dec
lods
sbb
jecxz
sbb
nop
aam
(bad)
int
pusha
jg
movs
aaa
inc
jne
pop
je
fsubrp
lea
and
add
adc
stos
rep
loope
js
jbe
mov
jns
mov
imul
test
std
sub
gs
adc
mov
jno
in
push
and
sbb
jno
adc
rcr
mov
rol
jnp
loop
xchg
aaa
adc
push
adc
int3
daa
lahf
add
cdq
and
call
in
call
ja
sub
clc
and
sub
das
inc
push
dec
test
out
cmps
inc
cmp
inc
sti
lea
test
push
and
mov
mov
(bad)
push
les
fs
mov
xchg
xor
(bad)
mov
shl
je
imul
jmp
sbb
cli
xchg
adc
aas
seto
pop
fstp
cmp
or
fsub
test
enter
mov
std
add
mov
jmp
adc
in
pop
mov
xor
sbb
push
rcl
(bad)
in
clc
lahf
inc
cmp
xchg
inc
xor
pop
adc
add
data16
xor
in
inc
arpl
sti
jle
jbe
add
push
test
mov
cmp
loope
sub
(bad)
ja
retf
(bad)
adc
inc
out
jle
and
xor
outs
outs
xchg
or
pop
scas
mov
sub
shl
mov
ret
mov
mov
and
das
fsub
xchg
iret
mov
(bad)
pushf
mov
cmp
add
rcl
sub
rol
std
pop
scas
sub
mov
ja
clc
mov
fwait
xor
sub
test
leave
jne
push
sbb
mov
bound
dec
pop
jno
pop
in
lods
clc
scas
in
mul
jnp
mov
enter
stos
lock
ins
sub
jge
push
out
in
in
idiv
jg
test
loop
out
or
adc
mov
and
call
test
mov
sub
in
(bad)
xchg
push
(bad)
lods
push
mov
adc
dec
dec
jg
fisubr
or
repz
cs
cdq
and
retf
fidiv
sbb
fcomp
outs
pop
imul
movs
aam
mov
out
inc
cmp
sub
adc
jno
scas
push
dec
inc
ins
leave
mov
test
xchg
cmp
ds
xor
test
pop
xchg
rcl
gs
fidivr
pop
nop
in
mov
repz
add
xchg
es
jne
mov
jbe
popa
mov
jne
into
inc
imul
cld
dec
shl
outs
jae
hlt
ret
and
dec
push
or
jp
and
xlat
or
or
mov
inc
or
sub
cmp
repz
dec
scas
sbb
push
hlt
mov
pop
cs
mov
push
cmps
ret
test
xor
ret
shl
sub
mov
mov
imul
gs
xor
mov
data16
mov
mov
sub
mov
test
push
cld
xlat
arpl
int3
or
mov
mov
add
clc
cld
fnstcw
push
les
inc
inc
enter
adc
push
xor
stos
adc
call
or
les
scas
and
repz
lds
jnp
cmp
dec
xchg
jp
pop
in
mov
aas
cli
xchg
les
mov
addr16
mov
imul
enter
fidiv
and
xor
mov
mov
xchg
xchg
sub
pop
das
and
jns
aas
sahf
lods
jnp
xlat
loopne
add
adc
aaa
jmp
ror
jns
mov
outs
fsub
jl
push
xor
mov
(bad)
push
outs
inc
loope
and
es
loop
xchg
enter
xchg
sub
ficomp
fstp
js
movs
stc
sub
dec
dec
and
cwde
dec
xor
iret
dec
jns
sub
sbb
sbb
int
lds
sbb
in
mov
inc
fidiv
jb
push
and
iret
or
aam
pop
jmp
inc
mov
xchg
sub
xor
pop
sub
(bad)
push
and
sub
add
dec
retf
sub
mov
xchg
sub
popa
mov
iret
les
mov
out
sub
aad
js
jmp
iret
stc
mov
xchg
arpl
lock
jle
out
sub
add
(bad)
push
data16
xchg
jmp
or
mov
jge
fild
arpl
cmps
cmp
mov
cmp
ror
cdq
add
shl
sbb
ja
push
std
jno
aas
inc
aam
popf
push
fs
pushf
xchg
sbb
mov
and
ds
adc
jno
add
pop
scas
mov
loop
cld
and
and
aas
les
jle
push
bound
imul
(bad)
fbstp
xchg
jmp
jnp
sub
adc
inc
mov
xchg
in
xchg
test
mov
call
xor
mov
ret
mov
xchg
les
cdq
jbe
xor
and
adc
into
xchg
mov
inc
cmp
inc
pop
popa
cmps
aaa
aas
inc
cdq
xor
jae
sub
sub
mov
(bad)
jmp
xlat
arpl
add
push
imul
or
mov
cmp
mov
add
xlat
inc
xor
xor
imul
addr16
adc
mov
aam
pop
arpl
pop
mov
pop
push
call
fsub
out
jae
test
in
xor
xchg
xor
dec
test
pop
mov
and
adc
fcmovbe
adc
mov
adc
push
cmp
adc
sbb
cmp
xor
jmp
cmps
inc
jbe
mov
mov
inc
ret
jmp
scas
push
loopne
pop
sbb
pop
out
inc
leave
pop
mov
xchg
fisubr
into
ror
lods
mov
je
jo
es
add
cli
cs
mov
out
xchg
mov
jmp
ret
test
out
(bad)
jno
into
cmp
pushf
out
ss
adc
(bad)
sti
add
add
mov
stos
int3
(bad)
cmp
pop
cdq
cmp
popf
xchg
and
jp
ds
adc
or
mov
loop
lahf
sub
jne
sbb
and
cwde
stos
stos
mov
mov
popa
aam
inc
xchg
and
push
adc
out
dec
jg
xor
mov
mov
jmp
xchg
retf
sti
add
rol
mov
cmp
mov
push
mov
lds
push
mov
pop
jmp
mov
sbb
(bad)
repnz
mov
sahf
add
push
mov
adc
fdivr
xchg
imul
dec
ss
jp
mov
jo
ret
sbb
std
icebp
and
fs
(bad)
clc
inc
and
outs
add
loope
sbb
stos
imul
pop
xchg
mov
(bad)
pop
adc
push
add
dec
arpl
or
mov
ret
mov
push
cmps
test
rcr
inc
es
push
sbb
add
ins
or
xor
jl
inc
movs
xchg
mov
jle
cmp
mov
adc
fmul
retf
pop
jmp
lock
fbld
jns
sub
into
pop
sub
into
jge
loopne
std
xchg
out
mov
mov
repz
bound
ins
mov
inc
mov
lahf
addr16
push
add
pop
cmp
and
mov
add
cld
push
out
nop
mov
adc
fwait
mov
pop
mov
jbe
ret
inc
adc
cld
imul
sbb
push
(bad)
inc
mov
adc
add
cmp
mov
xor
or
sbb
dec
mov
stos
dec
test
push
imul
(bad)
data16
mov
sub
cmp
mov
ins
xchg
cmp
das
loop
push
lea
push
daa
jbe
jae
push
dec
sahf
movs
pop
dec
outs
cmps
or
out
jmp
ret
xchg
push
mov
pop
add
push
and
jo
in
test
add
nop
js
jle
xchg
mov
xchg
aas
dec
mov
int3
sub
sub
popa
and
add
popf
xor
arpl
jl
push
jp
and
cmp
pop
or
mov
icebp
jno
js
mov
adc
jp
adc
pop
cmp
jmp
mov
jg
pop
pop
je
pop
dec
cmp
in
mov
iret
push
outs
jle
fistp
xchg
icebp
sahf
dec
lock
ror
pop
jp
popf
jnp
imul
dec
jl
mov
arpl
movs
lods
dec
out
jae
ss
fild
and
dec
mov
pop
leave
lea
sbb
xchg
adc
call
xor
jmp
mov
sub
lods
jmp
mov
fbld
fwait
in
pusha
xchg
ja
jbe
cmp
stos
loopne
or
push
mov
(bad)
je
lods
hlt
push
imul
movs
aam
scas
push
mov
fimul
jmp
repnz
popa
out
mov
dec
or
xchg
jne
push
adc
aas
mul
mov
mov
push
sub
idiv
loopne
out
test
aaa
std
cld
lock
jle
test
in
scas
xor
stc
iret
push
jne
push
mov
aam
add
jmp
ins
inc
jg
or
call
mov
xor
inc
xor
or
nop
mov
movups
push
into
loope
adc
out
push
lods
sub
dec
cld
jb
sbb
sub
or
ds
clc
hlt
xchg
xor
aaa
outs
mov
push
in
outs
mov
adc
dec
test
push
xchg
(bad)
mov
and
add
xchg
in
mov
out
adc
sub
add
ja
adc
aad
rcr
xor
dec
popa
dec
mov
das
xchg
(bad)
sbb
ror
retf
jo
movs
ss
add
sub
or
(bad)
(bad)
aam
push
mov
push
pop
jae
aas
repnz
lds
mov
dec
jl
mov
push
daa
or
(bad)
call
lods
sbb
mov
int
xchg
jns
jecxz
inc
xchg
sub
mov
xor
aas
daa
lock
jne
xchg
in
sti
and
ret
fwait
sbb
xor
bound
mov
sbb
shl
inc
(bad)
cli
dec
dec
jnp
mov
int3
xor
int
call
pushf
outs
mov
cli
std
jne
in
add
ds
dec
xlat
mov
xchg
mov
(bad)
mov
jo
in
sbb
cmp
movs
jns
push
std
sti
ficom
mov
mov
out
fnstcw
mov
popf
push
(bad)
stos
ret
jo
aas
pop
and
sahf
pusha
arpl
fld
call
adc
inc
mov
out
into
in
data16
into
hlt
xchg
out
ret
stos
cld
out
jo
ror
sbb
add
xchg
movs
test
ja
out
ficomp
aaa
cwde
mov
add
out
aam
xchg
mov
(bad)
xor
cmps
push
pop
mov
imul
je
enter
and
inc
lds
lods
out
jmp
push
mov
test
pusha
sti
and
sti
leave
push
addr16
mov
xchg
adc
ins
into
xor
cmc
stos
hlt
aas
pop
shl
ror
test
je
add
xor
imul
push
xchg
xor
and
and
out
(bad)
jmp
ja
call
sub
rol
cmp
out
fwait
xor
sub
sub
pop
repz
sbb
adc
push
leave
inc
sub
cli
adc
push
jne
jle
xchg
inc
push
dec
call
stos
cmp
imul
sahf
jae
pop
inc
xlat
addr16
(bad)
jbe
pop
or
lahf
and
mov
out
and
sahf
aaa
and
(bad)
out
repnz
lahf
sar
sbb
retf
pop
cmp
bound
mov
and
add
inc
jle
push
out
jecxz
hlt
push
dec
and
cmps
lahf
cmp
stc
add
pop
jnp
test
mov
and
iret
test
cli
push
jo
lea
push
inc
cs
inc
pop
push
and
int3
mov
sbb
pop
movs
pop
xor
fsub
cld
adc
out
ret
fst
jmp
leave
push
or
cwde
(bad)
jb
ins
sub
add
fs
outs
inc
xchg
aad
pop
imul
or
xor
mov
jne
scas
fdiv
xor
das
clc
and
jns
int3
add
lahf
mov
fcmovnbe
movzx
jg
xlat
fild
sar
arpl
dec
and
add
mov
sub
xlat
(bad)
or
cwde
into
lahf
aam
sbb
in
cmps
imul
cs
adc
pop
dec
jmp
fldenv
(bad)
aas
cmps
cdq
mov
aam
push
stos
adc
pop
add
fwait
sub
ins
scas
out
push
retf
mul
jle
mov
push
adc
cs
add
jne
add
inc
mov
xchg
jne
nop
jmp
call
rcr
cwde
in
mov
cmp
movs
pop
pop
mov
shr
frstor
inc
pop
or
cmp
sti
dec
and
inc
test
in
cdq
mov
pop
lds
and
or
movs
push
ins
pop
fwait
mov
and
inc
retf
xor
div
fnstenv
push
retf
mov
pop
jmp
and
pop
ins
cmp
loop
pop
sbb
add
lods
pop
sub
aas
test
xchg
cmp
and
shl
jmp
push
out
mov
movs
xchg
fs
out
stos
test
loopne
sub
fcomp
push
sub
xor
test
scas
xchg
dec
shl
jnp
dec
mov
arpl
movs
push
pop
stos
je
or
cmp
push
mov
rep
jmp
data16
pop
test
inc
add
test
adc
imul
scas
mov
add
push
jmp
lods
inc
fs
lahf
jg
stos
and
cmp
pop
in
lds
fcom
xor
mov
push
sub
mov
xchg
in
xchg
push
not
in
(bad)
lock
cs
mov
xor
sub
das
xor
pop
rcr
mov
loopne
shl
mov
jbe
jb
cmps
jmp
mov
sbb
pop
mov
int3
jo
mov
fimul
xchg
xor
add
push
shr
nop
sub
lock
xor
les
pop
outs
into
sbb
mov
(bad)
popa
out
lea
add
stos
sti
jmp
(bad)
mov
sti
scas
mov
imul
sbb
sub
pop
dec
popa
add
pushw
enter
or
mov
cli
fs
and
mov
or
retf
dec
(bad)
jno
sub
in
(bad)
jge
cld
push
cdq
or
ja
dec
icebp
mov
mov
mov
cmp
ins
fiadd
and
jmp
or
mov
leave
xchg
nop
(bad)
nop
lods
movs
imul
or
adc
jmp
cld
add
jmp
and
mov
fmulp
idiv
dec
mov
mov
ret
mov
lods
add
xchg
or
stc
cmps
mov
xchg
test
xlat
sahf
sub
enter
sbb
iret
add
ins
popa
fstp
or
cmp
(bad)
cmp
xor
js
cdq
test
inc
retf
sbb
xchg
mov
sub
aaa
in
jno
seta
push
int3
jmp
cmp
retf
xchg
pop
jle
or
stos
xor
out
inc
and
rol
shl
(bad)
shr
pop
cmp
mov
test
push
dec
mov
int3
push
mov
add
inc
adc
aad
mov
mov
jno
jg
jp
jno
movs
sbb
mov
mov
push
outs
sbb
or
add
sub
call
pushf
push
or
push
add
(bad)
les
cwde
jno
push
xor
aaa
mov
imul
cmp
sbb
xchg
pop
adc
retf
xor
jle
pop
pop
mov
mov
xchg
xor
mov
pop
in
js
les
and
rcl
cmc
lahf
mov
jle
pop
lea
lahf
aaa
push
mov
stc
xchg
sbb
test
dec
jo
(bad)
pop
or
arpl
aad
(bad)
(bad)
and
jbe
mov
lock
hlt
popf
movs
ret
jbe
mov
(bad)
xor
data16
adc
cmp
sbb
scas
retf
pop
lahf
arpl
jnp
rcr
add
cmp
dec
repnz
out
addr16
cmp
xor
jp
(bad)
ins
int3
mov
call
adc
hlt
retf
test
sti
fsubr
mov
xor
ret
and
cmp
pop
pop
mov
mov
nop
lods
jmp
mov
dec
pop
dec
stos
sbb
out
mov
jmp
xchg
pop
pop
les
push
out
fidiv
mov
add
out
shl
xlat
(bad)
rol
ret
inc
sbb
add
cwde
ds
adc
movs
xchg
mov
nop
js
(bad)
or
pop
xchg
jns
test
test
mov
mov
and
cmps
jle
xor
add
pushf
or
inc
mov
jecxz
retf
adc
sbb
sbb
sahf
jbe
lods
adc
(bad)
ss
mov
pop
shr
in
xor
xor
xor
and
sti
mov
sbb
pop
(bad)
mov
sar
sub
es
scas
std
and
sar
sub
push
and
fsubr
adc
fnstenv
(bad)
in
outs
inc
in
fmul
and
fistp
sub
fdivr
and
test
xchg
loop
or
test
(bad)
fwait
pop
ja
inc
iret
(bad)
pusha
push
or
push
std
inc
xchg
inc
aas
dec
call
fld
movs
xchg
les
sbb
cmp
push
mov
rcr
pop
lock
in
daa
and
aas
sbb
sete
popf
pop
sti
and
add
jo
and
retf
push
mov
int3
sub
xor
scas
cmps
sbb
aas
cmp
xor
fistp
add
and
cmc
cmp
jnp
movs
ja
sub
das
out
sbb
ret
or
dec
push
dec
(bad)
int
sub
not
pop
mov
jmp
retf
pop
fstp
fwait
pop
in
ror
inc
mov
pop
aam
sbb
inc
daa
inc
sar
jns
push
jo
in
xchg
xchg
dec
cwde
inc
cmc
daa
ja
fadd
mov
into
add
and
pop
sbb
repz
mov
mov
jmp
dec
push
xor
push
inc
mov
popa
mov
and
jge
and
and
leave
rcr
ror
into
jmp
and
std
in
xchg
js
bound
mov
icebp
loope
sbb
out
rcl
adc
jl
leave
aaa
cdq
ret
into
lods
je
iret
in
arpl
mov
cmp
sub
mov
mul
popf
jle
adc
push
mov
xor
call
dec
outs
aaa
movs
adc
add
inc
xor
out
sub
pop
ja
or
ror
movs
aas
adc
dec
int
in
mul
or
jle
out
das
lods
into
mov
aam
iret
int3
cmp
adc
mov
push
mov
sub
xchg
cmps
push
fs
push
fsubr
mov
int
inc
(bad)
cld
inc
outs
aas
mov
or
mov
aas
or
and
(bad)
fist
pop
movs
nop
js
retf
dec
stos
or
gs
fist
xor
adc
test
inc
lods
jae
cli
in
dec
in
cmc
push
cmp
sub
jmp
outs
push
pop
sbb
(bad)
fwait
clc
cli
cwde
popa
call
inc
jmp
aam
js
loope
and
cld
fstp
sbb
inc
cmp
std
and
(bad)
mov
sti
or
data16
jmp
cwde
daa
sbb
in
rcr
or
stos
inc
dec
jne
mov
add
push
cmp
outs
cmp
xchg
jecxz
loope
ret
dec
idiv
inc
jle
ins
pop
std
push
popf
mov
sub
adc
push
inc
aam
mov
lods
in
retf
pop
sti
sahf
in
mov
fwait
pop
fadd
call
pop
sbb
mov
and
dec
iret
or
sbb
add
bound
outs
or
test
mov
pushf
out
mov
add
or
(bad)
fld
icebp
or
rcr
stos
icebp
scas
jle
pop
ret
pop
pop
xchg
mov
fwait
hlt
sbb
(bad)
out
mov
cmp
ins
in
jmp
aad
lods
jae
jno
imul
mov
das
scas
int3
pop
lock
jae
xchg
scas
mov
leave
and
push
mov
xchg
xchg
lea
and
and
mov
pop
or
add
cs
out
pop
push
sbb
stos
mov
sbb
aad
lea
imul
and
mov
test
jle
icebp
lods
inc
pop
sub
xor
call
xchg
and
(bad)
loope
(bad)
out
cmps
mov
(bad)
in
xchg
cmp
call
jg
inc
sub
push
xor
aam
cmps
mov
sbb
pusha
outs
adc
loope
int3
jmp
mov
test
sub
adc
and
stc
cmp
cwde
stc
push
mov
adc
out
cmp
pop
jge
ret
jb
sbb
cmps
sub
mov
fwait
jae
fnsave
sbb
test
pusha
pop
sbb
in
xchg
xchg
js
fcmovnu
and
jae
shl
inc
mov
jmp
or
xchg
xor
pop
sub
and
mov
cmp
imul
mov
pushf
mov
and
lea
imul
xor
mov
jno
jo
and
(bad)
(bad)
xor
jne
adc
add
sbb
bound
adc
mov
ss
daa
lods
push
mov
test
stos
sbb
inc
or
icebp
retf
data16
pushf
cmp
stos
adc
xchg
fcom
out
sbb
out
test
ret
daa
fld
mov
and
aaa
lods
or
in
push
stc
pushaw
mov
sbb
aam
mov
ret
sub
and
adc
sub
jl
dec
sti
pop
arpl
fisttp
push
mov
jmp
dec
dec
sub
jge
test
add
push
mov
or
lods
out
test
cdq
push
add
mov
cmp
ins
xchg
jp
nop
fldcw
cmp
hlt
les
or
mov
dec
fiadd
outs
xor
cmps
hlt
jb
popf
mov
repnz
or
pop
cmp
pop
xchg
jp
push
das
out
retf
xlat
mov
cmps
mov
mov
mov
pop
mov
mov
outs
mov
pusha
dec
repz
sbb
xchg
test
fidivr
pop
ins
aas
dec
dec
mov
das
sub
jle
cwde
iret
retf
mov
int
test
mov
push
popf
sub
hlt
shl
ret
pop
jecxz
mov
add
out
mov
retf
mov
arpl
call
dec
ret
push
scas
mov
(bad)
ret
xchg
inc
test
and
pusha
fsub
lock
fsub
xchg
arpl
inc
test
push
int3
retf
gs
out
aad
inc
outs
push
pushf
jecxz
push
int3
lods
push
mov
xrelease
cmp
pop
push
push
int
out
je
sub
xor
mov
mov
xchg
call
loope
push
mov
sbb
cs
jnp
call
dec
pop
sub
neg
cmp
int3
fwait
xor
and
lods
test
inc
cld
inc
xor
xor
mov
sbb
sub
cmp
ins
stos
test
mov
cmp
push
(bad)
adc
test
sahf
les
aaa
mov
das
in
pop
pushf
movs
adc
jl
sub
jb
jne
shl
xchg
bound
pop
xchg
xchg
outs
dec
push
mov
adc
adc
add
push
sbb
cmps
and
out
pop
sub
pop
hlt
ret
je
xchg
ret
jl
jl
aad
mov
pop
fucomip
fdivrp
dec
adc
loop
jmp
push
jmp
mov
and
(bad)
movs
iret
in
cmp
mov
out
mov
ins
dec
lock
(bad)
(bad)
ja
daa
aad
cmp
sbb
sub
cli
in
push
into
das
push
dec
(bad)
pop
push
nop
and
or
mov
ret
dec
dec
jmp
push
jo
sub
cmp
adc
cli
cmp
enter
ja
cld
hlt
adc
and
pop
ss
mov
inc
push
cmps
aam
stos
add
fmul
mov
iret
mov
into
(bad)
es
mov
mov
xchg
mov
scas
jmp
sbb
icebp
lock
es
and
jmp
inc
mov
sahf
fld
xchg
aad
into
sbb
scas
pushf
lahf
push
leave
addr16
mov
mov
mov
test
or
mov
mov
cmp
mov
loop
mov
xor
push
or
sub
jge
pop
les
test
mov
adc
and
lds
xchg
sbb
bound
dec
dec
mov
mov
push
jp
ret
mov
mov
outs
xor
dec
bound
mov
pop
nop
(bad)
mov
jns
mov
(bad)
push
nop
ja
lahf
pop
push
aam
cli
cmp
leave
inc
xchg
inc
add
repz
push
lods
cmps
jle
int
push
lods
int3
push
cmp
mov
sbb
retf
into
in
out
jecxz
sub
cmps
and
fst
sbb
jl
jmp
mov
pop
popf
sub
sbb
dec
mov
inc
push
jg
movd
pusha
ss
movs
data16
shr
les
js
push
sbb
ins
xchg
dec
pop
imul
call
outs
cmp
sti
inc
xchg
cmp
pop
cs
sub
(bad)
addr16
pop
sbb
and
add
sar
cmp
repz
(bad)
in
push
push
out
add
push
in
jmp
push
xor
dec
jnp
sbb
fisttp
stos
sahf
adc
lock
inc
jne
cmp
pop
aam
jp
rol
xchg
sub
xor
mov
pop
test
add
mov
enter
mov
fs
retf
in
push
adc
dec
popf
shl
dec
shl
adc
mov
pop
jg
cld
push
push
iret
sbb
or
cmovge
cdq
pop
push
repz
fidivr
out
xchg
push
imul
xchg
mov
shr
or
enter
push
sar
sub
jge
test
retf
push
pop
jmp
sub
test
jle
scas
xchg
xchg
(bad)
int
jns
adc
cmc
mov
int
push
mov
arpl
adc
enter
lea
mov
dec
pop
and
push
mov
fidivr
daa
sub
push
icebp
push
sub
ror
loopne
loop
retf
pop
xchg
mov
mov
mov
mov
std
xchg
mov
mov
push
iret
pop
shl
jmp
dec
sbb
adc
int3
test
jbe
cli
ins
leave
sbb
pop
add
jecxz
mov
cmp
cmp
in
mov
adc
dec
push
rol
loopne
daa
inc
icebp
and
adc
out
mov
sub
sbb
lods
mov
movs
and
cmc
ja
daa
pop
dec
test
(bad)
retf
imul
ja
test
aam
ret
pop
mov
jne
int3
ds
sar
cli
adc
sbb
add
pop
ins
test
gs
aam
(bad)
add
mov
(bad)
mov
and
test
ret
rep
rcr
mov
lahf
scas
push
dec
inc
jmp
or
xchg
aaa
sub
mov
or
mov
push
fst
fwait
sbb
mov
cmp
scas
xchg
adc
imul
(bad)
neg
push
jns
daa
cwde
jbe
lds
fwait
pop
ret
test
mov
outs
ret
icebp
mov
cvtps2pd
retf
stos
inc
xor
add
inc
sbb
xor
retf
das
mov
jbe
sub
mov
cmp
adc
int3
mov
lods
inc
imul
jne
test
les
fmul
adc
out
aam
push
cdq
movs
es
ja
pusha
movs
aas
mov
cmp
dec
mov
mov
mov
out
add
(bad)
test
hlt
ret
call
sub
xchg
jp
test
ror
jl
data16
test
xlat
fcmovu
pop
inc
xor
xchg
mov
lahf
xchg
pop
xchg
pop
inc
xchg
mov
adc
inc
int
adc
pop
adc
sub
or
leave
addr16
push
or
add
ja
call
sbb
ret
inc
popa
ins
xor
stc
rol
adc
dec
enter
retf
movs
out
sar
jbe
nop
movs
adc
or
cmp
cmp
in
clc
ds
(bad)
jl
jle
adc
outs
xor
sub
push
icebp
(bad)
cmp
outs
sub
jecxz
push
aaa
jns
xchg
pop
aam
lea
popf
pop
lds
sub
push
sub
push
ret
clc
or
xor
or
add
popa
pop
add
inc
push
int3
push
push
test
push
aaa
jns
cmp
mov
test
adc
rcr
inc
icebp
in
adc
and
pop
scas
(bad)
shr
pop
(bad)
fwait
push
pop
cmp
cmp
sub
jmp
pushf
aad
cs
jne
cmps
pop
sub
movs
out
nop
dec
mov
repnz
sbb
into
push
xor
inc
push
or
pop
cld
shl
dec
popf
sub
adc
push
mov
jg
lahf
hlt
adc
call
imul
jmp
and
and
lods
jns
and
arpl
dec
sbb
ins
not
push
and
jmp
cli
push
test
fisttp
jge
mov
stc
push
test
ret
mov
mov
inc
scas
jbe
lock
lds
sbb
or
shl
adc
and
pop
rol
fild
loop
out
cmc
adc
popf
dec
hlt
lea
iret
push
aaa
push
push
outs
fimul
sti
lock
ins
mov
mov
mov
lock
sar
and
div
adc
test
jecxz
inc
ins
daa
cli
lock
ret
lods
xchg
push
scas
push
dec
mov
out
or
and
(bad)
mov
je
add
xor
test
mov
and
lds
outs
mov
dec
clc
mov
gs
ins
inc
and
pop
cmp
mov
lds
lds
push
ins
imul
sub
jp
xlat
sub
xchg
sub
pop
cmp
lods
aam
jno
ficomp
mov
mov
mov
ret
inc
mov
push
std
ret
je
inc
pop
je
fwait
mov
inc
popf
add
clc
enter
repnz
mov
pop
inc
shl
mov
cmp
cli
push
mov
push
mov
inc
pop
mov
ins
neg
movs
pop
sbb
inc
inc
pop
test
jecxz
sahf
jmp
adc
inc
aas
fs
in
push
cmp
in
adc
mov
test
sbb
inc
cmp
sub
add
stc
mov
leave
sbb
dec
or
pop
rol
in
jb
and
rcr
loopne
adc
cmp
loope
fist
mov
fmul
rol
cmp
pushf
(bad)
xor
sbb
lahf
loop
jno
bound
mov
mov
xchg
pop
enter
inc
mov
ss
sbb
sahf
out
call
(bad)
retf
movs
icebp
cmp
popa
cli
push
clc
jl
repnz
xlat
xchg
sbb
inc
(bad)
cli
std
push
xchg
xlat
push
in
pop
adc
scas
cmps
test
cli
rol
mov
arpl
cli
dec
popa
sub
call
pop
dec
push
pop
adc
out
js
mov
dec
jle
enter
jle
test
cdq
test
mov
mov
cmp
cdq
imul
jnp
icebp
xchg
fadd
push
stos
mov
sbb
add
pushf
adc
in
and
cli
scas
fdiv
ins
ds
aad
cld
push
mov
cld
cmps
add
clc
lea
and
idiv
vphsubdq
xchg
ins
dec
pop
pusha
adc
fidiv
stc
aaa
jmp
mov
xchg
fdivr
into
out
inc
push
sahf
xchg
or
or
xchg
inc
mov
sbb
rol
adc
addr16
dec
shr
sbb
call
(bad)
test
inc
int3
mov
cmp
and
add
sbb
xchg
cmp
push
xchg
hlt
jo
dec
add
adc
push
xchg
xchg
(bad)
retf
retf
stos
push
pop
pop
sub
(bad)
jp
loope
xor
std
jmp
adc
retf
hlt
inc
data16
inc
in
inc
adc
inc
pop
mov
xor
bound
lock
jge
push
ret
ss
clc
push
sbb
and
push
dec
add
movs
jne
push
(bad)
and
cmp
mov
mov
mov
and
cwde
(bad)
idiv
jge
adc
mov
cdq
cmp
push
mov
mov
push
clc
nop
rcl
ret
pop
fcomp
mov
jne
push
add
lods
lea
sub
hlt
jmp
sbb
dec
scas
xchg
or
inc
int3
inc
and
cmps
cmps
mov
cmp
into
jno
cmps
mov
push
xchg
sub
lahf
lds
stos
mov
sti
mov
sub
out
jbe
xlat
mov
jbe
cwde
jp
mov
xor
xor
(bad)
mov
adc
dec
inc
stos
rol
iret
sub
jbe
(bad)
fdivr
fdivr
jl
(bad)
jb
movsx
out
adc
pop
xchg
push
sbb
sbb
xchg
popf
(bad)
aad
in
(bad)
aad
stos
ins
(bad)
dec
mov
add
pop
pusha
test
in
pop
fsubr
dec
js
int
lahf
stc
lods
out
push
scas
push
retf
call
mov
jno
dec
push
mov
shl
pop
daa
int3
inc
jmp
jbe
dec
fwait
into
xor
mov
shr
cmps
enter
jmp
xlat
pusha
aad
cmps
sbb
push
rcl
sub
push
sbb
addr16
sbb
pop
jo
add
lods
add
(bad)
bound
inc
add
and
or
aam
and
aaa
dec
sub
mov
mov
dec
lds
ficom
mov
enter
inc
call
jbe
and
sub
pop
stc
jmp
mov
out
sti
call
sar
popf
mov
mov
xchg
xor
in
test
aam
xor
pushf
sahf
lock
lahf
add
aas
jbe
adc
add
pop
push
pop
mov
popf
or
clc
aas
sti
mov
gs
pushf
movs
jmp
fistp
jnp
jo
mov
ss
in
sub
rcr
dec
rcr
push
gs
pop
adc
adc
addr16
movs
rcl
jg
and
adc
cs
dec
cmp
mov
mul
pusha
adc
inc
ins
and
adc
clc
mov
mov
into
mov
cmp
sbb
mov
sub
sbb
int
and
(bad)
sub
lahf
arpl
(bad)
mov
call
arpl
iret
xchg
pop
inc
mov
and
gs
das
sbb
daa
ja
div
ja
ins
mov
jo
imul
mov
dec
mov
sahf
jmp
clc
push
cmp
fsub
test
lock
jb
fucomip
sbb
cmc
inc
rol
mov
and
or
leave
cs
popf
or
mov
and
push
in
popf
inc
push
movs
add
aas
sbb
pop
cmp
sbb
mov
xchg
scas
les
nop
test
push
(bad)
fdivr
xchg
pop
push
in
xchg
imul
dec
aas
jp
stos
push
shl
stos
outs
icebp
fidivr
arpl
pslld
mov
sub
jns
inc
jbe
jmp
hlt
adc
pushf
lock
jae
fadd
fcom
fst
inc
fwait
sub
out
xor
mov
jmp
rcr
or
or
and
inc
pop
nop
xchg
push
mov
xor
(bad)
sbb
retf
adc
cmp
cli
pop
push
push
mov
js
pop
jecxz
or
scas
and
movs
imul
push
push
stc
sub
neg
mov
sbb
movs
(bad)
pop
fisttp
div
and
jmp
test
cld
lds
or
hlt
call
and
add
sub
retf
add
nop
leave
inc
xor
test
push
and
inc
mov
scas
mov
push
or
call
mov
mov
jge
fwait
jge
enter
stos
or
push
(bad)
int
or
cs
stc
add
jmp
dec
(bad)
sub
mov
sub
daa
(bad)
mov
in
mov
dec
fisttp
jp
adc
pop
mov
fcomp
jmp
(bad)
scas
push
inc
or
fcom
fs
xor
cmc
xor
mov
sub
jecxz
retf
cmps
ins
inc
sbb
dec
movs
in
gs
jg
cli
retf
and
fbld
ret
adc
fcmovb
lock
and
imul
aaa
data16
sbb
sbb
jne
rcr
out
cdq
push
xlat
pop
xor
mov
ret
mov
and
repnz
xor
jle
or
pop
es
lods
sbb
lock
jl
lea
lods
cmp
fmul
cmps
push
sbb
leave
gs
mov
cmp
ins
fucomi
sub
and
loop
xchg
inc
add
inc
lods
fwait
xchg
mov
jp
cwde
push
je
add
pop
or
popa
push
mov
add
pop
aad
int3
int
and
adc
or
xlat
push
pop
icebp
push
sbb
push
and
and
xchg
mov
fs
mov
lea
(bad)
cmps
add
inc
push
rcl
mov
pop
das
sub
repnz
mov
mov
xor
inc
push
adc
jb
mov
cmp
mov
out
movs
mov
lds
fisubr
cmp
into
lahf
retf
aas
fnstenv
shl
cmc
pop
sub
xor
mov
in
clc
paddd
movs
cli
xchg
xchg
in
enter
cmps
sub
jle
shl
jmp
and
jp
sub
cmp
adc
jg
push
xchg
pop
mov
aad
mov
add
inc
xchg
(bad)
sub
iret
jmp
fld
loope
mov
imul
push
dec
jp
fistp
stos
loopne
inc
fild
xor
sub
nop
sbb
jne
pop
fst
dec
push
stos
sar
adc
movs
retf
mov
or
dec
mov
retf
sub
(bad)
adc
pop
pop
pop
mov
into
add
ins
addr16
xor
adc
sbb
stos
xor
cmp
dec
retf
aaa
and
or
mov
mov
cmp
push
or
sub
retf
dec
scas
cmp
out
mov
cmp
retf
inc
jmp
daa
cmp
out
or
jno
loopne
imul
inc
dec
outs
jo
hlt
add
adc
jne
or
cmp
les
div
cmp
call
icebp
and
sub
ficomp
sub
dec
and
dec
jnp
test
xlat
sub
or
lea
(bad)
jle
cs
(bad)
int3
jle
in
test
int
rol
sub
das
in
cmc
fnstsw
rol
ins
fcmovne
mov
adc
inc
mov
fwait
mov
(bad)
fnstcw
(bad)
fistp
inc
dec
retf
mov
pop
dec
inc
or
sub
jmp
enter
(bad)
mov
clc
adc
movs
mov
(bad)
ins
ror
jae
cmp
bound
iret
aam
call
jmp
out
inc
dec
cmp
test
adc
sar
jne
clc
dec
fisttp
mov
stc
jne
outs
pop
in
xlat
cld
lock
and
xchg
xchg
adc
and
xor
test
cdq
xchg
shl
dec
jns
ins
dec
scas
cmc
mov
xor
sub
ja
mov
pushf
icebp
mov
aas
fiadd
sbb
scas
xchg
inc
jns
nop
pushf
int
bnd
cmp
mov
and
push
ins
mov
cli
das
xor
add
sub
dec
inc
cmp
ja
or
push
inc
sti
mov
adc
xchg
mov
leave
jle
test
sti
lahf
mov
push
cs
mov
jae
or
out
int
push
addr16
or
mov
aas
or
or
inc
sti
ss
hlt
pop
jl
inc
mov
inc
jo
pop
aaa
jbe
jl
out
pop
mov
scas
or
mov
leave
call
xor
repz
loopne
sti
jmp
sbb
adc
cmp
jmp
pop
shl
bnd
outs
(bad)
pop
pop
inc
popa
imul
adc
and
or
enter
fbld
sub
xor
xor
mov
cmps
mov
or
push
jmp
test
cmp
ins
out
xlat
rcr
in
sbb
dec
aas
cmc
or
push
push
sub
dec
(bad)
adc
push
arpl
or
add
jne
out
mov
call
dec
jno
adc
and
jnp
push
outs
popf
mov
xor
out
dec
hlt
jbe
popf
jns
adc
and
enter
mov
adc
lock
gs
repz
push
adc
das
pop
nop
mov
gs
loopne
les
std
xor
mov
not
in
pop
cmp
pop
jbe
(bad)
sbb
lock
cmp
push
mov
sub
repz
addr16
add
adc
mov
addr16
sbb
test
data16
pop
pop
imul
pushf
cmp
pop
stc
stc
mov
mov
mov
mov
inc
jbe
or
mov
pop
fisttp
call
sub
mov
cs
neg
mov
jnp
jl
jbe
repnz
add
out
sub
lods
clc
xor
xor
inc
jo
int3
fcom
ss
dec
pop
imul
movs
test
scas
and
es
adc
mov
ret
nop
je
lahf
mov
retf
inc
shl
pop
popf
ins
xor
repz
push
mov
(bad)
jl
adc
and
mov
jle
dec
hlt
inc
in
es
ds
popa
jmp
adc
sub
test
or
bnd
jnp
mov
and
adc
or
pushf
stc
retf
mov
dec
(bad)
push
out
(bad)
sub
imul
fcom
adc
test
jnp
sub
sbb
push
jmp
fld
or
sub
jb
icebp
out
add
gs
imul
mov
mov
out
imul
(bad)
sbb
inc
aad
shr
fs
dec
call
sbb
retf
push
es
repnz
xor
in
(bad)
out
sub
jo
jnp
lods
pop
jne
imul
aam
sbb
retf
nop
pop
jge
ret
aaa
sti
ds
in
cwde
call
xor
(bad)
xor
xor
pop
or
pushf
cmp
or
pop
test
jmp
cmp
out
jge
jp
fcmove
int
int3
mov
lds
xor
mov
mov
loope
test
cmp
stos
mov
inc
mov
inc
jnp
pushfw
cmc
xor
(bad)
inc
scas
or
xor
shr
test
call
add
push
cmp
(bad)
xor
push
ins
add
sti
jb
lods
int
or
dec
xor
and
push
xchg
mov
rcl
in
pop
daa
je
and
mov
movs
pop
mov
mov
cmp
lock
mov
les
sub
or
cmp
retf
scas
nop
dec
pushf
cmp
mov
xchg
ins
push
or
mov
cdq
movs
nop
dec
fcom
cmp
std
(bad)
sti
adc
dec
xchg
pop
(bad)
fldcw
(bad)
push
pop
pop
daa
mov
jp
repnz
out
ss
adc
mov
dec
mov
jno
out
cwde
inc
xchg
mov
hlt
sub
cwde
sbb
dec
int
jg
sbb
call
enter
das
pop
std
mov
mov
pop
outs
jo
mov
pop
adc
jge
mov
or
fisub
repnz
cmp
mov
dec
repnz
adc
stc
repz
sahf
pop
sbb
pop
in
out
jb
cmp
int3
outs
pop
sub
and
inc
outs
push
cmps
in
pop
push
add
xor
in
xchg
ds
or
fistp
jecxz
jmp
pop
not
out
add
ror
adc
mov
push
mov
jge
sahf
xchg
inc
div
sub
hlt
loopne
sbb
and
popa
je
cmp
sub
sahf
pop
inc
shl
mov
cmp
and
retf
sar
or
push
fldcw
adc
xchg
test
xchg
ret
sbb
jmp
sub
fist
jo
lds
neg
sahf
leave
and
pop
inc
cmps
ret
xchg
in
cmp
mov
not
lahf
rcl
sbb
sbb
fs
call
int
mov
js
push
clc
mov
out
iret
addr16
xchg
dec
mov
ins
ret
gs
xchg
jo
pop
mov
cwde
bound
pop
aad
nop
fist
sbb
out
shl
lock
jmp
jns
sbb
ret
xchg
rcr
mov
cmp
cmp
cmp
test
fs
cmp
mov
or
inc
rcl
pusha
mov
sbb
cld
int3
call
imul
ror
pushf
shl
inc
sub
cmp
enter
push
inc
sub
hlt
pop
sahf
test
inc
or
dec
mov
push
pop
enter
push
sub
psadbw
(bad)
xor
mov
lahf
mov
cmp
add
es
jno
xchg
sar
int
jmp
lea
push
leave
jmp
lock
push
or
outs
(bad)
fadd
loopne
push
adc
jg
faddp
stos
jne
xchg
jae
fcom
out
dec
pop
and
ins
scas
add
shl
adc
leave
mov
test
out
add
bound
cmp
inc
mov
fnstenv
lea
fldpi
sbb
push
mov
fstp
push
sbb
call
xchg
cld
sbb
mov
das
je
in
inc
sbb
xor
jno
in
repz
adc
cmps
mov
pop
xor
js
mov
(bad)
scas
or
(bad)
xor
mov
in
ret
cmp
jecxz
enter
jmp
in
inc
mov
cmps
and
ficomp
and
hlt
xchg
jp
jge
push
stc
cs
mov
stos
push
jae
pop
dec
add
scas
int3
jecxz
xlat
mov
je
inc
fmul
out
lds
neg
(bad)
pop
sub
xor
out
cwd
xor
pop
clc
aaa
test
cmp
rcr
(bad)
fsub
mov
dec
add
mov
pop
pop
lahf
ret
cmp
cmp
push
add
ret
fldcw
xchg
cmp
arpl
shr
scas
lods
rcl
mov
mov
(bad)
pop
repz
scas
dec
add
fidiv
adc
lock
int3
sti
dec
push
cmp
in
inc
ror
(bad)
and
mov
fstp
push
in
mov
outs
(bad)
retf
clc
mov
inc
je
ss
pusha
loop
cli
push
inc
mov
cs
mov
mov
aam
pop
and
out
test
xlat
ja
popa
mov
stos
push
jl
or
sbb
jle
inc
inc
sbb
daa
push
push
mov
rcl
inc
(bad)
js
lock
popa
lods
pop
add
mov
push
out
les
fld
out
je
jno
sbb
in
cmp
scas
adc
out
push
fstp
in
and
or
mov
jb
sbb
test
mov
jns
adc
jge
out
sti
aad
xlat
inc
mov
mov
pusha
jno
adc
sbb
mov
pop
push
ds
mov
fcmovnb
cmp
int3
sub
scas
mov
mov
add
mov
push
xchg
rcl
enter
pop
(bad)
cmp
xchg
outs
rcr
fbstp
jns
cmp
mov
jne
jo
scas
clc
mov
push
cwde
add
jle
bound
sub
scas
imul
jmp
shl
push
imul
push
sub
lds
xchg
pop
dec
dec
mov
mov
sub
or
xor
push
sub
int3
(bad)
retf
sbb
mov
pop
stos
jecxz
int
pop
loop
dec
rcl
dec
or
dec
cld
into
scas
test
out
inc
jno
mov
adc
fs
repnz
imul
test
sub
dec
jp
out
and
pusha
lods
test
hlt
cmp
ficom
fbld
pop
mov
in
inc
(bad)
movs
sbb
jl
cmps
ror
pop
mov
xor
pop
arpl
sub
sbb
or
and
cmps
idiv
pop
shr
ins
js
jne
(bad)
jne
sbb
outs
mov
jle
adc
cmp
dec
stos
mov
or
test
sub
or
xchg
ss
call
and
add
xlat
in
xor
jnp
xchg
test
test
pop
hlt
mov
(bad)
popa
dec
(bad)
out
fwait
mov
test
cmp
shr
mov
jns
loopne
shl
mov
mov
mov
ins
pop
ret
stos
aam
mov
mov
std
fwait
xor
comiss
ss
aaa
mov
jecxz
mov
add
inc
or
and
dec
ret
mov
add
mov
retf
imul
data16
out
jb
and
cmp
pusha
pushf
and
stc
and
or
jge
out
repnz
and
je
pop
inc
aam
gs
popf
inc
jmp
ret
cmp
adc
test
mov
jno
aaa
lods
test
in
and
icebp
xor
adc
int3
dec
fadd
test
les
mov
push
jg
sbb
jmp
xor
(bad)
in
pop
mov
inc
xor
mov
aad
cmc
jecxz
lods
adc
inc
clc
scas
mov
outs
mov
mov
adc
test
dec
fistp
pushf
mov
and
shl
pop
jmp
ja
imul
dec
pop
pop
push
pop
or
cmp
or
outs
dec
push
repnz
mov
iret
adc
(bad)
shr
mov
push
add
and
(bad)
jle
sbb
adc
es
dec
add
pop
mov
dec
sbb
int3
jb
nop
jae
inc
pop
(bad)
pusha
mov
pop
pop
in
xor
or
sub
stos
sbb
jmp
cli
cld
sbb
sub
les
adc
pop
xchg
inc
sti
movs
jge
(bad)
adc
ret
jmp
fsub
push
sub
xlat
cli
adc
xchg
outs
or
test
enter
outs
sbb
mov
push
push
bound
xlat
jmp
jge
std
pop
lea
dec
cmp
lea
jbe
pop
cmp
fadd
(bad)
mov
pop
jns
xchg
lods
and
mov
movs
ins
adc
vpslld
push
mov
sub
inc
aad
xor
lods
jne
add
retf
jnp
cmps
popf
or
stos
xchg
stos
pop
jns
cmp
shl
cmp
pop
add
xchg
sar
sbb
aam
mov
jbe
xor
push
lods
sar
xor
xor
jae
out
add
fimul
mov
jge
xchg
xchg
in
inc
call
iret
hlt
mov
mov
pop
pop
mov
int3
pop
das
dec
jns
mov
cmp
daa
inc
aam
nop
jmp
pop
stos
mov
sub
out
or
mov
push
ret
jmp
repnz
out
loope
or
push
mov
imul
pop
jecxz
jecxz
sbb
data16
movs
pop
xor
mov
leave
push
repnz
stos
test
sbb
(bad)
sub
movs
sub
icebp
dec
fimul
cmp
mov
cmps
out
ror
mov
in
test
adc
pop
pushf
mov
push
inc
adc
cmp
retf
sbb
aas
push
fstp
inc
add
jns
test
rcl
ins
call
add
inc
adc
push
les
iret
xchg
mov
jl
fistp
xchg
cmp
loope
cmp
adc
cwde
inc
push
jmp
sbb
call
les
inc
cmp
jmp
mov
xor
movs
sbb
xchg
imul
jbe
call
jnp
adc
push
add
xchg
out
mov
fsubr
add
add
mov
or
cli
push
cwde
outs
mov
inc
cmp
ja
xchg
ds
dec
fs
test
push
test
loope
mov
ins
cmc
or
(bad)
mov
mov
jecxz
and
and
dec
mov
jns
outs
mov
xchg
inc
and
test
mov
cmc
xchg
fucomip
fld
rol
data16
pop
retf
mov
add
pop
sub
mov
aaa
xchg
addr16
push
daa
jp
mov
pushf
nop
test
shl
xchg
loopne
push
jbe
addr16
xchg
sub
inc
adc
aaa
ficomp
cmp
(bad)
xchg
xchg
lods
push
mov
out
addr16
cmp
retf
retf
push
movs
push
enter
out
push
mov
es
sar
mov
jae
jae
mov
xchg
mov
jae
xchg
dec
out
ret
and
pop
mov
jns
call
xchg
(bad)
pop
push
push
or
ins
mov
test
and
ins
xor
or
aad
test
popf
xchg
adc
push
shr
push
push
aas
mov
outs
cmp
out
and
(bad)
mov
push
jmp
popa
dec
ds
dec
push
jecxz
xor
cmp
jecxz
mov
mov
sar
jp
bound
ficomp
popf
out
mov
pop
inc
and
pop
mov
fs
sti
add
cld
bound
mov
fdiv
mov
lea
ja
mov
dec
in
hlt
lahf
in
add
enter
adc
or
xor
dec
arpl
mov
ret
mov
pop
jp
cmp
mov
adc
and
sbb
rcr
cmp
aam
mov
test
imul
lock
nop
or
dec
call
(bad)
repnz
call
popa
jb
retf
jecxz
retf
mov
xor
shr
enter
push
cmp
mov
xchg
hlt
push
cmp
adc
push
push
stos
stos
icebp
(bad)
shr
sbb
xchg
jno
mov
sbb
cmp
xchg
in
stos
ins
inc
pop
outs
push
fcmovu
icebp
shl
push
pop
and
test
mov
sub
arpl
mov
in
pop
push
aam
mov
xchg
dec
mov
mov
adc
sub
jge
jl
divps
repnz
push
lods
pop
mov
aaa
mov
cmps
pop
add
leave
in
sahf
imul
jp
sub
js
xor
stos
mov
es
pop
sbb
xor
in
(bad)
in
popf
inc
fdivr
shl
popa
and
fidiv
mov
push
pushf
mov
dec
js
movs
or
clc
inc
sahf
xchg
jecxz
jo
fistp
pusha
sbb
call
xor
fs
into
dec
enter
xor
pushf
jo
pop
in
cdq
(bad)
push
inc
aam
jecxz
in
aam
test
pop
pop
pop
cwde
adc
pop
cmp
pop
(bad)
js
inc
pop
mov
imul
lahf
stc
xchg
push
fimul
mov
xchg
repz
(bad)
mov
outs
mov
mov
fistp
cmp
out
mov
jbe
cmc
es
jno
enter
dec
jmp
hlt
or
cmc
call
add
popa
test
xchg
or
xchg
pop
sbb
mov
mov
neg
fwait
cmp
add
mov
sub
pop
or
adc
pusha
repz
loope
pusha
push
shl
add
fs
mov
and
cmp
sub
sub
icebp
rcl
mov
mov
jo
adc
ror
dec
int3
adc
jg
pop
sub
retw
cmp
ins
xor
in
and
les
jmp
or
gs
mov
cmc
pop
add
std
mov
shr
push
dec
fwait
fwait
xchg
sbb
vpsrld
xor
pusha
pop
adc
mov
dec
jmp
lea
xchg
ss
mov
js
pop
xor
mov
jnp
in
push
mov
cmp
add
mov
lea
and
inc
aam
lahf
xchg
add
repz
push
ret
retf
retf
mov
aad
es
gs
pop
inc
lods
inc
(bad)
pop
(bad)
mov
scas
sbb
dec
adc
add
clc
popf
xchg
movs
cmp
rcl
test
cwde
mov
cmp
xchg
jecxz
mov
clc
imul
or
dec
mov
fs
rcl
mov
push
jecxz
lea
jns
lea
mov
ds
jle
dec
pop
clc
in
(bad)
aaa
out
test
add
adc
push
cmp
in
popf
push
ins
data16
mov
or
cmp
add
ucomiss
adc
mov
rcl
jmp
fs
inc
repz
stc
and
(bad)
or
dec
(bad)
mov
push
and
or
push
pop
rol
retf
jmp
cwde
inc
inc
mov
push
sbb
in
outs
jle
mov
adc
mov
(bad)
imul
std
repz
das
ds
jmp
stos
lods
or
xchg
and
(bad)
sub
rol
mov
xchg
push
mov
sub
or
dec
aas
add
adc
loope
jae
fidiv
mov
mov
ins
clc
stos
ins
cmp
xor
(bad)
sti
mov
push
fidivr
bound
inc
cli
pop
xchg
push
add
sbb
stos
sahf
loopne
and
sar
outs
pushf
fwait
pop
in
dec
ins
push
hlt
cmps
imul
jo
(bad)
mov
cmp
dec
jne
movs
sar
fsub
cmps
pop
repz
imul
xchg
(bad)
test
add
mov
je
inc
arpl
jecxz
or
sub
mov
dec
movs
ror
stc
add
xchg
inc
iret
adc
add
fldcw
call
mov
adc
aam
mov
in
fbld
sar
std
sbb
test
xor
sahf
add
jo
icebp
mov
jmp
(bad)
cld
xchg
ins
xor
dec
ret
inc
sub
inc
ret
stos
imul
xchg
ins
scas
pop
call
push
pop
data16
cli
and
std
push
adc
ins
movs
ins
jle
jo
sbb
mov
pop
stos
push
mov
dec
cmp
xchg
inc
mov
push
mov
je
loop
mov
gs
jo
pop
dec
or
lahf
mul
mov
dec
pop
sub
mov
aad
cli
popa
pop
cmc
jle
sub
scas
mov
outs
lahf
ficom
(bad)
int3
push
and
xor
mov
outs
iret
loop
xor
fcom
push
mov
sbb
pop
add
or
xchg
jmp
loopne
push
jb
xor
pusha
mov
adc
stos
xor
aad
test
mov
loope
cli
mov
cmp
cmc
mov
je
mov
mov
aad
pop
and
std
jnp
sbb
push
mov
mov
adc
ss
dec
dec
xchg
enter
loop
xor
(bad)
cdq
ror
dec
scas
cmp
(bad)
mov
adc
ret
xchg
(bad)
dec
out
je
jmp
bsr
mov
imul
mov
sbb
ficom
xchg
test
dec
fst
sar
scas
pop
nop
add
xchg
cmp
mov
shl
loopne
hlt
cmp
pop
loopne
loopne
aaa
mov
lea
cwde
mov
ret
mov
call
aam
jns
sub
cmp
movs
push
push
or
jmp
lds
jae
ins
sub
lahf
sub
add
lahf
adc
add
or
mov
pop
cmp
dec
inc
lds
sbb
pop
jne
icebp
push
cdq
int
lea
push
and
mov
lock
xchg
test
iret
scas
repnz
adc
movs
xor
lock
(bad)
call
jns
ins
std
add
jecxz
clc
shl
lock
mov
rcr
and
scas
pop
cs
lahf
arpl
xchg
int3
cwde
cmp
xchg
(bad)
in
jle
and
imul
cmp
fcomp
sbb
jmp
retf
shl
pusha
cs
fild
scas
inc
cdq
fisttp
cmp
xchg
push
dec
and
scas
cmc
rol
cli
sub
or
ins
test
fmul
(bad)
adc
mov
and
mov
div
jmp
sub
out
pop
dec
push
aas
imul
push
outs
add
xor
shr
daa
inc
xchg
jg
pop
rcr
xchg
cmps
test
mov
jp
ins
push
call
mov
cwde
cmp
push
xor
out
mov
xchg
aaa
xchg
mov
sub
sbb
shl
mov
int
and
stc
(bad)
xor
cwde
dec
cmp
pop
cmp
pop
or
loope
jae
sbb
fisttp
cli
xlat
aas
xor
lods
aam
dec
mov
xchg
jge
xchg
push
adc
ins
jns
pop
push
sbb
rol
pop
fnsave
jae
pop
mov
imul
jmp
xlat
push
imul
jge
mov
aaa
jmp
in
xor
inc
jns
jecxz
dec
mov
test
fidivr
mov
xchg
mov
cmp
jnp
adc
mov
xchg
sub
mov
ins
push
ss
mov
lds
fcomp
inc
(bad)
enter
gs
adc
mov
push
inc
sahf
scas
mov
in
cwde
jae
mov
mov
sbb
sar
mov
push
out
xor
repnz
pop
ins
sub
into
mov
cwde
xor
pop
pop
loop
adc
jmp
ins
xchg
push
sub
(bad)
out
dec
jmp
bound
mov
jp
into
in
pop
inc
pop
inc
imul
fwait
push
dec
mov
inc
(bad)
hlt
push
add
mov
pushf
(bad)
aam
out
mov
xchg
pusha
cmp
call
add
pop
ss
sti
jl
loop
dec
adc
dec
xor
push
sub
push
or
mov
jecxz
xor
es
repz
or
out
pop
adc
loop
cld
fstp
adc
in
jbe
sub
popa
xchg
leave
fnstsw
out
cmp
mov
and
mov
cmp
pop
arpl
push
mov
cmp
repz
jl
scas
mov
xchg
cmp
pusha
push
or
leave
inc
jbe
lods
loopne
xchg
jno
mul
popf
sub
xchg
int
ffreep
ret
ret
mov
fwait
push
icebp
push
stos
mov
mov
or
ret
sub
dec
enter
cmp
ficomp
and
sbb
adc
xor
leave
jne
fwait
and
mov
xor
data16
mov
push
inc
outs
sbb
sbb
jl
push
mov
call
cmps
cdq
pop
mov
leave
call
rcl
fadd
lds
ss
mov
int
mov
popf
fcomp
imul
push
test
retf
bound
aam
arpl
mov
cs
adc
sub
std
lods
xor
xchg
inc
sub
gs
scas
popa
sar
dec
int
mov
jo
jp
rol
sar
sub
pop
push
and
outs
shl
test
jle
inc
sbb
dec
sbb
jmp
cmp
xchg
push
dec
jae
(bad)
retf
stos
adc
test
cs
ins
mov
test
push
add
xor
sub
and
add
mov
push
cmc
test
ret
jp
addr16
test
push
xlat
jno
pop
cli
(bad)
in
fstp
mov
fwait
dec
cmp
ret
and
inc
and
pop
ins
bound
push
es
cmp
cmc
test
out
div
and
gs
or
mov
add
mov
xchg
stos
jns
mov
xchg
pushf
js
js
jl
mov
mov
(bad)
mov
sub
sub
mov
sbb
test
rcl
repz
fist
sub
out
cmps
mov
mov
mov
pop
jecxz
lea
jp
dec
imul
movq
push
out
xor
add
xlat
jno
cmp
dec
lods
xor
cmp
dec
push
jp
sub
imul
scas
idiv
sti
into
cmp
rcr
or
popf
(bad)
mov
and
(bad)
in
mov
je
adc
add
add
(bad)
shr
out
push
out
jge
pop
mov
in
cld
sbb
cli
push
es
dec
or
aaa
in
div
push
jp
shr
lahf
mov
out
fisub
inc
inc
add
aaa
test
scas
pop
rcl
xchg
push
push
std
int3
mov
aaa
dec
push
xor
dec
push
arpl
fwait
sbb
xchg
mov
dec
(bad)
cli
out
mov
js
jne
dec
es
fstp
in
inc
and
lea
sti
jbe
pusha
cmp
(bad)
fist
shl
mov
or
push
jmp
jge
push
repz
sbb
xchg
sub
ror
rcr
xor
cmp
stos
jns
jbe
lods
leave
and
pop
cli
test
scas
cld
dec
sub
les
ficom
xchg
push
add
test
cmp
call
fcom
mov
cmp
sub
jb
out
scas
ret
mov
or
jb
pop
push
push
pop
or
loope
popa
cmps
push
xchg
or
test
mov
dec
pop
shr
push
cmp
imul
shr
xchg
add
xchg
loopne
rol
dec
sub
in
mov
sub
loop
pop
add
mov
nop
sub
mov
stos
sbb
ss
mov
movs
cmp
inc
mov
scas
stos
push
mov
in
jo
push
dec
es
inc
(bad)
(bad)
inc
repz
inc
aad
arpl
ins
test
movs
test
inc
pop
dec
jle
lods
scas
fucomi
mov
push
dec
dec
xchg
sti
push
ins
pop
retf
inc
std
cmp
test
and
cld
in
or
bound
shl
jne
xchg
jecxz
rcl
xchg
test
shl
xchg
jmp
(bad)
push
seto
cmp
retf
rol
cld
and
sub
xchg
jmp
ftst
fld
(bad)
mul
scas
imul
xor
mov
les
jg
movs
outs
and
mov
xor
stos
pop
fild
mov
pop
movaps
xor
push
int3
jae
in
sbb
pop
mov
scas
(bad)
fcomp
xchg
mov
adc
mov
mov
aas
cmps
adc
leave
es
mov
outs
adc
inc
or
jb
popa
loope
jae
or
or
xchg
pop
(bad)
sbb
mov
jmp
mov
pop
icebp
pop
lds
pop
fnsave
sbb
and
fisttp
pop
fdivr
dec
loopne
ds
or
push
inc
jns
push
xchg
bound
cmp
loope
adc
adc
xor
add
je
or
in
(bad)
or
ret
movs
in
test
loope
xchg
ficom
inc
idiv
push
push
fistp
mov
jbe
inc
push
ja
xchg
int
mov
sbb
jo
jbe
(bad)
push
in
fsubr
aad
pop
xchg
hlt
mov
push
or
js
pop
push
jnp
test
test
or
xor
mov
sar
in
cmp
mov
retf
fucom
cmp
div
in
mov
jo
jmp
sbb
nop
push
push
cmp
jmp
pop
enter
mov
xor
sub
loop
dec
adc
xchg
xchg
test
in
pop
outs
or
gs
dec
sub
dec
inc
cld
mov
fistp
lahf
bound
jp
jb
gs
mov
fcomp
mul
sbb
inc
(bad)
jae
pop
mov
add
or
scas
mov
int3
inc
and
jp
test
adc
ds
fild
call
fld
cli
adc
into
test
jle
shr
mov
(bad)
cmp
cmps
loop
xlat
movs
hlt
mov
add
retf
jmp
lock
shl
shl
push
ja
or
retf
ds
add
retf
scas
pop
fsubr
sub
push
xor
movs
(bad)
movs
lahf
xchg
jl
mov
mov
jns
sbb
xchg
dec
sub
jge
dec
add
call
shl
call
int3
int3
xchg
mov
scas
jae
dec
and
out
or
xchg
popf
and
or
loope
sbb
push
lds
sbb
arpl
retf
mov
add
inc
outs
xor
mov
adc
pop
sub
out
mov
mov
jmp
dec
call
lods
or
(bad)
retf
push
rol
fs
push
sub
cmp
in
(bad)
in
lods
pop
push
mov
div
and
cli
std
mov
jecxz
arpl
xor
stos
adc
mov
mov
nop
gs
dec
fldenv
div
and
xchg
test
jmp
mov
iret
shl
(bad)
pop
clc
pop
loope
add
or
push
and
int3
scas
rcl
movs
nop
int
jmp
rcl
inc
cli
out
mov
push
jge
cmp
test
fst
loop
in
outs
and
adc
jp
inc
xor
and
cmp
(bad)
jnp
outs
pop
out
cmp
fmul
cli
iret
and
jl
mov
clc
jge
xchg
push
gs
test
call
mov
loope
dec
dec
(bad)
mov
sub
enter
xchg
push
push
lock
cli
ret
mov
ret
dec
pop
loopne
cwde
lahf
xchg
lock
movs
out
and
cmp
add
pop
jae
(bad)
cwde
dec
adc
test
shr
aaa
das
adc
lock
cli
xchg
xchg
repnz
inc
fidivr
push
sub
jo
and
and
and
stc
cmps
cmps
pop
jl
std
sub
inc
stc
shr
into
push
mov
arpl
mov
sbb
arpl
inc
mov
push
xor
cld
sti
or
and
dec
out
ins
xchg
mov
icebp
mov
dec
shl
imul
lock
cmp
inc
mov
shr
add
int
mov
lahf
pop
cmps
call
fistp
jbe
sbb
cmp
idiv
fnstcw
(bad)
scas
int3
retf
mov
add
or
push
mov
jp
fcom
hlt
fs
loop
xor
sahf
in
pop
cmps
inc
test
ins
and
scas
(bad)
dec
cs
sub
sbb
in
hlt
xor
xor
mov
push
jle
pop
fsub
xor
and
jno
aad
aad
lahf
sub
cmp
inc
int3
fs
mov
into
xor
xchg
aam
push
out
lea
bound
mov
sub
mov
fisub
push
call
cmp
retf
ret
fstp
dec
dec
xchg
push
dec
adc
test
outs
xchg
sbb
jle
(bad)
fist
or
xchg
ins
mov
push
lea
psubusb
daa
add
jmp
fs
jmp
ror
push
mov
mov
xor
push
lods
jno
cmps
jmp
jg
pop
enter
mov
iret
clc
mov
and
adc
push
ja
add
mov
and
add
fdivp
cmp
retf
mov
xchg
cdq
mov
push
stos
adc
inc
dec
inc
jecxz
inc
pop
je
push
(bad)
adc
adc
mov
sub
mov
in
enter
and
sbb
aad
or
int
test
test
add
adc
movs
dec
pop
mov
seto
jbe
ins
mov
or
mov
mov
sahf
mov
fxch
dec
push
cmp
ja
pop
or
fiadd
das
ret
xchg
xchg
(bad)
sub
ja
inc
cmp
js
adc
adc
dec
cmp
push
imul
outs
cs
call
test
and
cs
outs
repz
std
(bad)
repnz
das
pop
pop
jmp
mov
or
out
(bad)
rol
cmp
pop
dec
pop
ds
add
mov
sbb
sub
jnp
xchg
pop
sbb
cmp
out
cwde
(bad)
(bad)
das
or
jns
mov
leave
repnz
and
pop
ins
lds
inc
ret
jp
into
mov
cmp
aaa
xor
mov
cmp
shl
cld
fs
fidivr
xchg
push
stos
ret
out
ficom
shl
loop
jge
test
mov
imul
cli
dec
adc
jge
sar
sar
dec
je
in
outs
cmp
test
inc
mov
jo
pop
pushf
jno
mov
sub
jae
imul
sti
push
and
test
repz
sbb
xchg
fnsave
sbb
(bad)
jbe
sar
test
std
call
cmp
sub
cmp
test
sub
ss
mov
js
retf
pop
push
sbb
adc
mov
inc
xor
xor
aam
and
cld
sbb
add
js
js
iret
fs
rcr
sbb
mov
mov
pop
popa
jmp
daa
ffree
cmc
lds
cwde
bound
cli
add
push
scas
mov
sub
mov
pop
inc
movs
popf
sbb
neg
add
pusha
mov
add
sbb
mov
sbb
adc
xchg
sti
mov
mov
pop
add
daa
xchg
repz
xchg
fsubr
jbe
mov
gs
adc
push
jb
cmps
mov
mov
popa
imul
push
pop
sar
sub
adc
jbe
dec
sbb
adc
xor
push
sub
adc
pop
outs
gs
add
sub
les
popf
lods
xor
js
dec
push
sbb
jmp
xchg
inc
icebp
sbb
and
cmp
pop
ss
add
nop
mov
xor
ss
pop
(bad)
push
or
pop
fnstsw
shl
sbb
xor
jne
dec
and
xchg
mov
or
push
lods
loop
xor
loopne
push
mov
in
xchg
scas
int
std
mov
bound
or
jb
int3
sub
mov
mov
jno
(bad)
pushf
cmp
iret
dec
and
cmps
inc
cli
arpl
pop
(bad)
loop
fs
repnz
pop
aaa
adc
mov
mov
xchg
push
mov
jnp
gs
mov
dec
push
int3
push
add
jmp
inc
cmp
add
dec
xchg
dec
push
jns
pop
ret
retf
lods
inc
mov
adc
data16
int
pop
stos
add
pop
push
jecxz
jmp
jmp
mov
add
push
scas
(bad)
jbe
rep
push
int3
fsubr
mov
inc
xchg
clc
push
movs
fwait
xchg
cmp
or
xor
xor
cdq
pop
push
mov
xor
add
xor
lods
xchg
cmp
bound
mov
inc
jl
ss
sub
leave
jae
sub
push
in
nop
into
call
(bad)
sub
daa
sbb
lahf
enter
adc
lods
repz
push
mov
inc
repz
cmp
(bad)
sub
pop
mov
dec
sub
pop
movs
pop
xchg
out
cmp
pop
jecxz
dec
sbb
dec
cmp
adc
movs
pop
adc
xor
inc
xor
or
stos
sub
nop
lahf
push
mov
jns
mov
retf
rcr
hlt
call
leave
mov
popf
arpl
(bad)
fisubr
push
inc
repnz
push
cli
mov
lds
das
and
xor
popa
cli
les
arpl
scas
dec
and
xchg
or
lahf
mov
(bad)
mov
fst
or
(bad)
push
sub
mov
lea
mov
arpl
cli
cmp
pop
push
aad
inc
int3
push
push
cld
in
(bad)
mov
test
add
xor
fwait
leave
xchg
sti
inc
adc
xchg
lds
aad
lock
cmps
inc
lods
jno
inc
test
es
adc
cs
ss
push
sahf
rcl
xlat
iret
cmp
xchg
pop
mov
dec
in
fldenv
rep
lock
xchg
dec
inc
sbb
push
jge
rol
add
or
(bad)
jne
sub
scas
jno
cmp
icebp
mov
cmp
and
fcmovb
leave
nop
pop
(bad)
stos
pop
fadd
xor
out
retf
lea
mov
cmc
or
sbb
popf
aaa
mov
mov
gs
pop
outs
jle
push
inc
stos
scas
dec
adc
push
rcr
xor
xstore-rng
cmps
add
test
(bad)
into
es
fsubr
dec
pop
mul
dec
mov
jmp
cmc
in
iret
call
cli
adc
mov
mov
outs
or
lahf
xchg
and
add
dec
sub
imul
xchg
arpl
daa
in
mov
sbb
inc
fwait
sbb
sbb
fmulp
retf
popf
inc
mov
pop
xchg
pop
hlt
push
cld
or
push
push
jmp
sub
shl
cdq
ins
js
push
dec
aam
push
inc
hlt
sbb
add
sbb
xchg
enter
sub
xchg
adc
hlt
nop
ret
inc
fwait
outs
and
xlat
enter
mov
popf
in
jae
push
and
xor
sub
push
push
push
cdq
xchg
js
jb
imul
xchg
push
in
sub
je
imul
inc
adc
in
inc
sub
lea
and
div
ds
add
sbb
dec
xchg
shr
pusha
es
mov
or
bound
dec
and
add
sti
cmp
mov
jecxz
popa
test
mov
in
mov
popf
into
icebp
xchg
sahf
out
outs
cdq
call
es
xchg
rcr
aaa
sbb
rcr
daa
jg
mov
pop
jae
(bad)
pushf
ret
cld
adc
sub
lods
xor
mov
pop
cmp
leave
mov
mov
sbb
mov
sbb
fld
push
sub
cmp
out
dec
push
je
(bad)
out
imul
sub
popa
or
test
mov
loope
push
in
sbb
mov
mov
icebp
sbb
out
push
sub
push
repz
add
js
push
ins
or
push
mov
test
test
retf
inc
int3
inc
cmp
repz
in
bound
sbb
push
mov
cmps
cdq
aad
jnp
sbb
ds
jo
mov
and
sub
test
mov
xchg
dec
dec
push
or
lahf
in
mov
scas
dec
sub
pop
enter
imul
cmc
out
sub
xlat
xchg
mov
lods
(bad)
pop
dec
or
pop
jmp
push
ja
call
inc
xchg
pslld
or
cwde
sti
sub
imul
test
icebp
cs
jnp
shl
stos
adc
movs
imul
inc
mov
add
sub
mov
fsubr
cld
iret
aas
(bad)
jb
adc
icebp
pop
cmp
push
mov
inc
loopne
repnz
xor
xchg
fst
imul
cld
pushf
test
mov
lock
int
jecxz
adc
sbb
push
mov
or
dec
hlt
sub
repz
sti
add
(bad)
out
repz
xor
sbb
and
inc
in
mov
xchg
mov
scas
cmp
mov
ds
push
jp
or
inc
into
pop
push
mov
adc
aaa
mov
xchg
pop
push
mov
aam
in
push
(bad)
retf
hlt
cmp
dec
mov
aaa
stos
ret
loop
js
hlt
pop
out
rcr
inc
jge
cld
xor
add
cdq
je
ror
stc
icebp
or
mov
cdq
std
sbb
and
or
inc
out
jnp
push
pop
lods
jp
fist
sbb
xchg
push
mov
sbb
pop
out
adc
ja
and
(bad)
or
lock
push
call
and
in
sub
ret
jno
mov
mov
mov
iret
sub
inc
arpl
lahf
addr16
std
mov
test
cli
and
mov
stc
ins
mov
xrelease
mov
lds
sub
xor
or
loopne
xor
lds
leave
sub
jg
stc
pushf
push
inc
xchg
scas
sti
xor
xchg
sub
inc
xchg
inc
leave
cmp
jp
addr16
mov
lock
fidiv
loop
adc
inc
cwde
mov
push
adc
sbb
sbb
push
xchg
ins
popa
mov
scas
shr
lds
jno
sub
dec
mov
xlat
jo
or
cmc
cmps
popa
xchg
sbb
idiv
inc
push
push
mov
add
and
test
push
aad
dec
dec
dec
add
ds
or
push
xor
repnz
pop
loop
push
cmovl
sbb
outs
movs
jno
popa
retf
(bad)
jmp
mov
(bad)
loop
xchg
test
mov
xor
test
add
and
pop
and
cmp
dec
(bad)
not
dec
jmp
retf
fwait
mul
shr
imul
ins
loopne
(bad)
and
and
retf
loopne
(bad)
call
(bad)
lods
mov
pop
pop
fwait
mov
push
jmp
adc
imul
sub
ja
cmp
or
mov
int3
add
push
mov
dec
xchg
lods
stos
jle
int3
mov
test
loop
add
das
retf
add
iret
rcr
push
inc
lock
jo
mov
je
jge
mov
jecxz
icebp
mov
add
push
loopne
adc
inc
pop
or
daa
dec
shl
mov
dec
sbb
fadd
cmp
xor
mov
or
iret
cwde
dec
int3
pop
jge
cmp
(bad)
jg
inc
inc
rcr
mov
sar
je
lahf
(bad)
inc
add
dec
add
in
ja
dec
pop
jl
mov
cld
das
mov
mov
mov
shl
and
fcomp
dec
jne
push
push
xchg
mov
xchg
lods
gs
mov
push
cmp
pop
adc
jne
fbstp
push
and
(bad)
and
pop
shl
xchg
jecxz
sbb
mov
movs
add
in
jne
iret
mov
in
ss
pop
sti
dec
es
xor
ror
dec
test
dec
jb
adc
xor
mov
jmp
pop
dec
add
mov
pop
cwde
cmp
xchg
mov
movs
mov
inc
outs
mov
sbb
inc
jge
fbstp
rcl
jo
aaa
pop
jl
fiadd
push
push
out
fisub
pop
jg
lods
mov
inc
into
mov
jae
add
push
outs
and
addr16
mov
(bad)
lds
les
jmp
pop
push
stos
leave
fisubr
mov
addr16
vcvtps2dq
xor
jae
cmp
jmp
jae
xor
push
xor
fmul
aas
test
mov
adc
cld
shl
stos
cmc
aas
call
add
mov
xlat
lahf
sub
aad
and
jnp
cdq
int
sbb
hlt
imul
sbb
daa
retf
cmp
idiv
jbe
and
inc
call
xor
stos
aam
fldcw
mov
jl
inc
hlt
outs
push
daa
paddq
sbb
loop
xchg
push
adc
push
jmp
out
pop
ror
or
loope
mov
popa
inc
or
out
dec
inc
shl
pop
mov
popf
mov
xor
add
or
shl
pop
data16
bound
sbb
sti
mov
sub
push
and
cmps
jp
or
jmp
add
pop
nop
inc
mov
push
xchg
(bad)
stos
fiadd
(bad)
out
adc
adc
or
inc
imul
sub
and
or
add
shl
and
lea
call
sub
scas
adc
or
ss
dec
ret
jo
aas
ja
and
add
call
hlt
xchg
shl
xchg
inc
jle
mov
xchg
xchg
jl
jns
lea
jmp
loop
repz
or
sub
mov
daa
xchg
enter
cmp
loop
add
mov
cmp
sub
jecxz
test
sub
ret
mov
mov
adc
(bad)
stc
mov
stos
and
ins
adc
les
push
in
sub
inc
cmp
pop
push
mov
dec
xlat
or
pcmpeqw
cmp
mov
retf
cmc
add
push
cmp
pop
jnp
js
mov
loopne
mov
popf
push
movs
mul
into
sub
jae
mov
lea
adc
and
xchg
xchg
test
adc
push
push
or
(bad)
push
jmp
cmp
shl
lea
inc
call
sub
push
jg
aas
pop
gs
fs
sbb
adc
push
ins
mov
inc
ror
repnz
aam
mov
xchg
(bad)
mov
mov
loopne
lahf
(bad)
and
rcl
mov
jecxz
cld
enter
xor
xor
jge
into
mov
xor
mov
das
sub
mov
aad
mov
xor
adc
sub
daa
push
mov
mov
mov
lea
out
or
cli
sahf
imul
push
or
or
mov
pop
jne
mov
rcr
sbb
in
mov
pop
ficom
pop
ss
scas
xchg
inc
out
hlt
pcmpgtd
inc
and
ret
mov
loopne
push
xor
mov
sar
stos
cmp
pop
ds
adc
and
cdq
mov
sbb
in
rdmsr
inc
loope
jge
lds
sub
out
(bad)
jns
or
sahf
add
xor
ds
cmp
jle
sbb
lods
shr
arpl
cmp
mov
sub
mul
jle
mov
mov
inc
ror
stc
les
mov
into
pop
mov
ds
cmp
loope
out
retf
or
hlt
test
sbb
jns
in
jle
jne
leave
dec
pop
int3
dec
int3
fstp
int3
lods
test
iret
js
cli
and
add
sbb
add
adc
xor
cdq
mov
cwde
inc
xor
cmc
and
xchg
addr16
or
cmp
mov
mov
xor
out
and
(bad)
pop
aad
mov
jae
ins
popa
addr16
mov
lahf
inc
mov
mov
sub
xlat
or
jne
push
jecxz
popf
push
sub
or
cmps
test
push
inc
fwait
mov
jnp
push
dec
mov
and
pop
push
mov
fwait
pop
scas
fwait
imul
les
or
jge
xchg
das
into
pusha
fst
cmp
sbb
sar
ror
inc
test
xchg
ins
or
push
call
sbb
cmp
inc
adc
outs
pop
mov
pop
call
aas
jmp
aas
inc
pop
(bad)
into
pop
add
mov
pop
les
sbb
jae
xchg
call
push
jno
fild
cld
push
pop
pusha
fild
mov
shr
ds
sahf
cmp
push
cld
and
sub
sbb
aas
retf
xor
stc
xchg
add
add
pop
ja
out
repz
jae
jbe
iret
adc
adc
adc
je
inc
push
loope
pop
mov
pop
pop
mov
pop
(bad)
pop
xor
pop
movs
xchg
mov
sub
sub
retf
repnz
xor
test
xchg
nop
mov
sub
cld
sbb
mov
or
add
cmp
sbb
fcomp
jnp
pop
xchg
mov
push
sub
in
lods
mov
dec
pop
outs
xor
daa
or
movs
xchg
jb
loope
jo
mov
add
nop
jo
pop
gs
or
data16
sbb
xchg
std
mov
jge
push
inc
or
sbb
movs
ds
push
fmul
in
and
adc
mov
inc
aad
push
ret
sbb
aam
push
test
pop
push
arpl
add
sub
icebp
adc
test
sub
pop
test
es
movs
aam
in
pop
cmc
mov
mov
mov
or
ins
or
cwde
pop
cmps
(bad)
addr16
sub
test
jge
xor
push
push
out
sub
push
mov
xlat
mov
mov
cmp
mov
mov
pop
(bad)
retf
scas
stc
mov
sahf
das
nop
(bad)
jg
push
cdq
bound
and
stc
xchg
popa
mov
daa
add
jb
popa
ss
test
scas
dec
lahf
push
cmp
mov
stos
cs
mov
retf
mov
mov
ffree
out
movs
and
push
pop
sub
jge
rol
sbb
retf
lods
test
stos
cmp
mov
cmc
dec
push
popa
xor
cmp
mov
xchg
(bad)
push
jbe
test
push
lahf
je
leave
icebp
xor
addr16
mov
sub
fcmove
je
jnp
shl
ret
push
mov
inc
sbb
fxch
adc
sub
jcxz
lds
or
sub
sbb
dec
sbb
cmp
add
test
retf
jmp
jbe
jne
movs
xchg
hlt
inc
inc
aam
mov
loope
xchg
or
repnz
adc
mov
scas
test
add
movs
cmps
lds
mov
test
xor
jg
sbb
xor
sbb
stc
sti
pop
inc
cmp
hlt
mov
cs
inc
pop
or
adc
fidivr
cmp
and
sub
mov
in
inc
xor
daa
mov
dec
pop
retf
and
rcr
adc
hlt
and
pop
mov
xchg
push
les
mov
mov
mov
test
pop
xchg
jo
aad
daa
adc
aad
sub
add
jnp
sbb
mov
es
ds
dec
stos
pop
pop
pop
xchg
leave
ret
and
scas
fild
dec
jne
enter
out
cmp
jbe
pop
repz
and
in
jne
cdq
mov
shr
in
or
fs
pop
and
xchg
cld
ja
sub
cli
popa
mov
mov
outs
mov
dec
or
adc
inc
fbstp
arpl
mov
mov
pop
shl
in
test
je
movs
adc
xor
mov
das
jmp
test
add
repz
mov
pop
or
push
inc
neg
cdq
je
out
push
xor
mov
push
test
mov
dec
add
pop
inc
dec
inc
in
(bad)
retf
jmp
es
popf
dec
das
je
scas
cmp
(bad)
sub
inc
xor
push
cmp
jae
cwde
jl
into
sbb
cmp
test
inc
shl
pcmpeqw
sub
call
xchg
int
and
xchg
lods
test
adc
stc
add
repnz
mov
sub
movs
loop
out
fild
and
mov
xchg
adc
add
and
and
aam
adc
jl
es
aad
(bad)
mov
fwait
inc
xor
ror
sub
fwait
sbb
arpl
adc
xor
movs
xchg
inc
stos
xor
add
lods
movs
adc
out
lock
mov
rcr
imul
adc
das
stos
cdq
sub
jns
xchg
fnsave
xchg
mov
or
imul
inc
push
daa
cmp
xor
adc
movs
mov
(bad)
outs
xor
mov
cmp
and
repnz
sahf
test
and
mov
popa
mov
xor
loop
inc
mov
test
fldcw
mul
jae
pop
sub
ror
aaa
lods
mov
(bad)
add
adc
adc
pusha
mov
add
mov
lahf
jne
jmp
ror
cmc
mov
les
xchg
or
out
add
stc
int
pop
xchg
aam
mov
sub
cld
stos
mov
rcl
and
and
movs
mov
lods
cmp
sub
(bad)
repz
dec
mov
out
icebp
in
cmp
jg
dec
and
das
mov
loop
das
xor
xor
add
mov
fisub
les
ss
dec
and
ret
data16
xlat
pop
das
cmps
mov
cmp
sbb
rol
xchg
cmp
lods
mov
mov
out
enter
rcr
push
adc
dec
push
dec
clc
jne
(bad)
movs
jae
jb
adc
mov
cwde
push
sbb
gs
loop
call
pop
add
mov
sub
hlt
push
sbb
jo
lods
cmp
mov
sub
jmp
leave
or
xchg
call
mov
mov
std
mov
add
shr
pop
fwait
jle
popa
pop
pusha
push
inc
jbe
and
push
jge
mov
ins
or
dec
clc
and
sar
sub
mov
jo
push
into
mov
mov
arpl
(bad)
fmul
inc
jae
outs
stos
imul
mov
ins
inc
sub
pusha
lock
fimul
shl
jp
mov
rcr
cmp
popa
add
mov
pop
pop
xchg
jmp
sar
out
in
sub
add
jp
aaa
imul
mov
mov
(bad)
xchg
push
cdq
cmp
sbb
das
mov
mov
sbb
xlat
aam
push
call
lds
mov
cmp
jnp
inc
jb
cli
sub
xchg
and
js
xor
cmps
mov
movs
fimul
scas
repz
jbe
mov
int
retf
sbb
xchg
jmp
add
pop
adc
dec
std
pop
addr16
sub
stos
jle
clc
into
repnz
sub
imul
add
gs
pop
cmp
dec
fld
pop
fcmovu
fldcw
and
test
xchg
imul
xor
jnp
and
push
mov
pop
pop
clc
loopne
pushf
int
test
addr16
mov
mov
pop
sub
xor
inc
(bad)
sub
xchg
and
dec
pop
(bad)
push
in
pop
sbb
mov
mov
sti
les
or
fstp
or
pop
imul
ins
sub
push
loopne
and
cld
mov
dec
jl
mov
xchg
jns
fmul
xor
sub
sbb
mov
cmc
aaa
fdivrp
mov
aad
lds
es
pop
jmp
mov
and
mov
or
call
(bad)
and
mov
inc
mov
int
clc
pop
dec
xchg
popa
push
repz
loopne
pop
gs
pop
pop
cmp
das
fxch
loop
pop
lea
pop
les
sub
xchg
fcomp
jecxz
repnz
mov
xor
mov
inc
pushf
xchg
pop
push
jae
mov
rol
fiadd
fwait
sbb
xor
cs
nop
repnz
shr
shl
aam
addr16
test
out
fs
xchg
add
pop
rcl
retf
mov
out
jle
pop
sub
fsubr
inc
xor
jmp
sti
dec
imul
xchg
sub
fdiv
sbb
retf
and
fstp
aam
idiv
into
cmps
data16
repnz
stc
sub
adc
push
push
mov
sbb
or
ins
sbb
dec
mov
mov
adc
mov
les
push
pop
sub
fcmovnbe
inc
dec
sbb
sub
add
lahf
mov
mov
xor
in
repz
or
(bad)
shl
and
push
xchg
cmovbe
pop
sub
cmp
pop
sub
(bad)
cs
add
(bad)
or
movs
and
mov
scas
or
inc
sub
xor
into
stos
daa
push
enter
adc
inc
jmp
xchg
sahf
jne
pop
retf
jp
arpl
adc
xchg
lods
push
inc
pop
mov
adc
js
nop
and
(bad)
shl
jno
push
loopne
sub
stc
popf
fcomp
pop
pusha
in
sar
int3
mov
dec
stos
(bad)
push
mov
ret
sbb
fcomp
std
cmp
push
ror
aaa
inc
gs
or
ret
jno
adc
and
sahf
jl
leave
shl
faddp
clc
jmp
pop
sar
and
mov
mov
imul
add
retf
ins
pop
adc
fnsave
ja
test
add
stos
mov
jbe
scas
cmp
jge
or
shr
ins
data16
push
mov
cmps
or
das
aam
and
adc
add
mov
push
pop
inc
and
xchg
loop
loop
inc
ror
sub
loope
retf
push
lods
mov
in
outs
das
mov
push
ror
pop
movs
in
(bad)
mov
test
adc
arpl
movs
sub
jecxz
js
sahf
into
pushf
mov
dec
pop
adc
sbb
inc
pushf
cdq
shr
lss
inc
je
(bad)
lods
iret
and
retf
or
loop
lock
nop
mov
add
mov
loopne
fdivrp
xor
pop
and
cli
aaa
xchg
jmp
pop
es
mov
fcomip
repnz
cmps
push
jl
aam
out
push
jmp
das
jmp
mov
imul
jo
cwde
out
fist
pop
lods
aad
mov
jne
cmp
pop
and
in
mov
cli
aas
adc
ja
ret
aam
(bad)
test
sbb
repnz
mov
(bad)
in
aam
cdq
add
out
cli
xchg
cdq
or
lods
adc
dec
xchg
mov
jbe
enter
xlat
jb
and
jmp
or
xor
mov
or
sahf
add
push
sbb
mov
in
inc
test
out
mov
(bad)
push
xchg
adc
xor
mov
jne
call
repnz
sbb
out
ja
stos
loopne
aam
add
outs
out
mov
sub
mov
add
xchg
(bad)
xor
stos
cli
rcl
in
mov
inc
hlt
cdq
test
lods
jne
in
jae
stos
inc
pop
das
arpl
fcomp
mov
mov
push
das
in
(bad)
sahf
sti
inc
adc
inc
inc
pop
in
mov
and
popa
cmps
push
or
repz
pop
jg
scas
in
push
push
jp
daa
shr
add
inc
sub
inc
sbb
aad
dec
stos
sub
xor
and
or
lea
icebp
xchg
or
rcl
pop
aaa
pop
repz
jb
push
test
and
lds
xchg
icebp
test
push
outs
add
not
mov
aam
int
daa
add
mov
mov
and
outs
xor
jbe
jg
(bad)
aas
imul
sbb
fnstenv
add
call
(bad)
aas
jae
add
mov
in
jb
(bad)
sar
lds
mov
ret
test
sbb
shl
mov
xor
aam
js
mov
shr
lahf
xchg
push
jle
rol
jl
dec
icebp
inc
ja
mov
push
xor
ins
nop
mov
pusha
pop
mov
mov
xor
cmps
loop
push
or
mov
int3
xor
mul
into
push
jg
push
bound
sbb
pop
mov
aad
inc
out
scas
repnz
out
inc
push
retf
aas
pop
mov
xlat
xor
mov
out
push
fild
sbb
gs
adc
pusha
imul
mov
jecxz
(bad)
fisttp
imul
sub
push
loope
mov
es
(bad)
out
push
aaa
pop
mov
sar
outs
pop
pop
adc
push
jge
inc
in
dec
dec
popf
int3
aam
les
dec
or
mov
dec
sbb
ins
and
lds
pop
push
xor
scas
cmc
xchg
xchg
inc
clc
or
ins
push
dec
jmp
sub
pop
js
pop
scas
mov
fld
jne
inc
push
mov
fsub
out
shl
bound
jge
(bad)
fst
fisubr
(bad)
sbb
sbb
inc
adc
cmp
iret
jp
pinsrw
sub
add
mov
aam
xlat
cmp
push
jns
mov
inc
dec
jb
mov
and
ins
dec
call
push
(bad)
out
and
adc
pop
xchg
(bad)
sub
scas
fdivr
pop
cli
mov
sub
xor
movs
bound
leave
fs
cld
shr
add
std
(bad)
rcl
out
inc
xchg
popa
xchg
cdq
and
pop
jb
movs
cmps
je
movs
pushf
loop
adc
xor
dec
inc
fneni(8087
and
mov
adc
sbb
sbb
cmp
xor
pop
iret
sbb
sti
mov
leave
mov
xchg
in
scas
ret
mov
and
clc
sub
out
loopne
xchg
pop
sti
inc
mov
adc
jbe
inc
in
cwde
outs
cdq
movs
repz
test
(bad)
imul
aad
movs
fbstp
gs
pop
cmp
mov
sub
jmp
cld
push
lock
out
daa
ss
xchg
jl
aam
mov
(bad)
scas
(bad)
cli
or
dec
inc
out
jl
mov
and
add
bound
scas
xchg
ins
sub
xor
push
aam
hlt
je
dec
ficom
fistp
add
test
fdivr
sbb
xor
shr
jo
fs
out
xchg
icebp
mov
add
jno
xor
xor
rol
jb
add
mov
div
xchg
retf
add
sub
aaa
je
arpl
imul
adc
jne
jno
dec
xchg
sbb
xchg
push
out
(bad)
ficom
popa
and
jmp
adc
cmp
stc
out
cld
je
xchg
pop
retf
ins
sti
xor
in
pop
xor
mov
dec
inc
fcom
lods
or
aam
jmp
push
push
mov
push
pop
in
sbb
es
add
ret
inc
sar
jg
pop
jo
mov
push
add
out
mov
inc
rep
mov
push
test
in
or
in
jns
cs
fist
dec
les
jg
ret
je
mov
or
(bad)
xlat
inc
cwde
push
dec
mov
mov
std
(bad)
or
pusha
or
inc
cli
push
ins
ja
gs
push
jne
ret
and
test
jl
jl
aas
push
mov
add
daa
pop
sbb
dec
jne
popa
jmp
or
pop
xchg
push
jnp
or
jl
sub
jnp
shl
push
loope
or
dec
jb
jge
pop
movs
xor
mov
pop
dec
push
xor
test
inc
jbe
sub
nop
shr
lock
jecxz
mov
in
(bad)
bound
pushf
jno
xchg
or
mov
xchg
dec
sahf
ja
clc
loopne
sbb
call
pop
sbb
mov
lods
inc
mov
retf
pop
jo
lods
xchg
je
cmp
and
mov
ss
idiv
mov
test
outs
(bad)
lods
xchg
cmp
inc
mov
retf
adc
fist
jg
fcomp
or
mov
push
push
ret
pop
jle
mov
(bad)
mov
retf
mov
dec
gs
cmp
cmp
int
cmp
les
fidivr
arpl
outs
jns
inc
mov
je
mov
or
(bad)
and
mov
mov
lds
push
cmp
lds
add
popf
daa
test
xor
cli
adc
imul
scas
or
scas
mov
sbb
jo
dec
scas
loopne
mov
push
jmp
fstp
shr
add
or
fwait
push
sahf
clc
movs
lea
mov
mov
mov
push
in
jne
iret
sub
mov
push
test
push
cld
cmp
fnstcw
test
mov
aas
repnz
repz
(bad)
xor
call
mov
mov
ret
add
push
push
or
outs
xchg
ret
xor
add
(bad)
clc
inc
ror
add
ss
add
jmp
cmp
(bad)
out
ret
lea
or
xchg
call
cmp
cmps
sar
inc
stos
sub
cmp
(bad)
clc
lock
cmp
in
push
jnp
test
and
lahf
jmp
ret
push
(bad)
addr16
xchg
fisubr
pushf
cld
add
xor
or
xchg
xchg
add
mov
ins
cmp
les
iret
fmul
push
xchg
hlt
mov
rol
xchg
cmp
sub
pop
es
or
xchg
and
inc
inc
xor
cli
in
icebp
or
add
push
in
dec
loop
cs
hlt
pop
scas
mov
loopne
pop
sub
xchg
pusha
outs
push
daa
push
bound
mov
repnz
out
icebp
loope
test
add
dec
mov
jmp
in
jl
add
fwait
imul
aad
mov
add
enter
or
(bad)
fisttp
push
sti
xlat
inc
jns
retf
loop
imul
push
lds
(bad)
mov
cmc
movs
xchg
frstor
sti
sbb
arpl
sbb
inc
xchg
add
or
add
cmovb
inc
xchg
mov
cmp
pusha
pop
es
adc
jb
or
test
lock
daa
push
mov
sub
in
mov
add
stc
pop
mov
imul
psubusw
aad
and
sti
jne
jo
pop
mov
cli
mov
pop
jge
add
and
mov
push
fisubr
inc
push
nop
push
cli
outs
fs
ss
cmp
xor
mov
and
in
shl
(bad)
loope
jle
pop
fdivr
sub
dec
push
sbb
sbb
cmp
push
test
scas
(bad)
fisubr
in
inc
into
xchg
adc
adc
mov
mov
cmps
aaa
daa
xchg
in
cmp
adc
ins
je
cmps
mov
xchg
mov
fsub
xchg
inc
mov
push
test
mov
or
or
repz
cld
add
mov
xchg
cmp
add
test
cmp
outs
test
in
ficomp
pop
push
dec
in
shl
jae
xchg
xor
nop
inc
push
jns
jne
not
push
aas
fsub
inc
and
adc
lods
jmp
add
adc
pushf
mov
stos
stos
leave
jnp
dec
jge
sar
gs
jmp
cmp
push
in
aam
pop
mov
test
call
mov
push
xor
clc
in
dec
xchg
call
fstp
test
or
adc
inc
repnz
test
stos
sar
outs
pop
in
mov
lahf
mov
sbb
mov
and
daa
shr
in
pop
mov
and
out
das
js
xchg
push
or
mov
cmc
les
cmp
lods
je
popa
dec
sahf
popa
jge
(bad)
mov
movs
add
lea
sbb
(bad)
jmp
xchg
xchg
or
push
push
jmp
fisubr
jge
out
sub
int3
push
push
xchg
call
mov
movs
cmps
sbb
nop
pusha
push
scas
dec
aas
push
cdq
xchg
stos
bound
popa
(bad)
jl
xor
jns
xchg
pusha
jne
xlat
test
sub
arpl
popa
xchg
les
pop
jno
cmp
and
bound
xor
lods
mov
leave
xor
jne
arpl
sbb
in
xchg
sbb
pop
movs
cli
out
popa
jo
lds
cmps
lahf
xor
jmp
and
retf
xor
ins
fdivr
repnz
adc
sbb
mov
push
stos
jmp
push
xor
and
dec
sub
or
nop
cmp
ja
pushf
nop
popa
out
push
inc
dec
or
push
xor
pop
jmp
sub
xchg
inc
or
sub
add
jmp
and
add
scas
jbe
mov
test
mov
pop
fild
jg
dec
mov
inc
xchg
imul
mov
ds
inc
mov
mov
cs
loope
out
sbb
fisub
adc
sti
mov
or
jmp
iret
or
aad
add
and
xlat
mov
cli
(bad)
cdq
sbb
fidivr
mov
rcr
repz
lods
sahf
cmc
int3
xchg
xchg
cmp
icebp
es
inc
or
push
cmp
mov
push
leave
xchg
mov
sbb
out
(bad)
sbb
iret
pusha
pop
retf
pop
out
add
enter
xchg
in
test
jbe
aaa
or
test
pop
in
cmp
and
pop
ins
(bad)
xor
jbe
in
imul
jge
iret
into
jge
jmp
aam
add
and
int
lahf
inc
push
bound
or
(bad)
je
fwait
jae
cmc
outs
outs
pop
rol
push
add
ds
gs
test
mov
mov
fnstenv
(bad)
int
cmp
leave
sub
mov
mov
push
icebp
xchg
mov
lods
in
(bad)
adc
cmc
push
out
and
mov
retf
(bad)
mov
xchg
(bad)
aaa
pop
add
mov
or
dec
push
sbb
cmc
inc
xchg
fnstsw
(bad)
mov
lods
aad
int
scas
into
outs
loopne
jbe
(bad)
push
mov
jecxz
and
and
into
xchg
push
hlt
mov
(bad)
in
inc
mov
xchg
cmp
in
ins
jg
div
adc
loopne
imul
cmps
jne
fcom
int
jne
inc
push
fstp
sub
fcmovu
imul
sub
sbb
mov
cmp
add
fcmovu
inc
adc
int3
ret
push
repnz
enter
out
outs
xchg
or
jmp
imul
test
sbb
push
xchg
mov
sub
pop
inc
and
mov
dec
add
lea
cwde
lea
into
aaa
sbb
fdivr
or
mov
rcl
inc
inc
cmp
sub
cmp
outs
cli
and
aam
cs
cmp
cs
dec
sbb
fs
mov
not
mov
mov
xor
xor
daa
mov
mov
aad
imul
mov
jg
pop
call
add
aas
int
out
das
cmp
scas
lea
ret
and
jg
jb
cmp
ret
repz
sbb
sub
pop
daa
std
sar
pop
inc
push
mov
push
mov
mov
out
cdq
int3
adc
mov
push
mov
cmp
inc
sub
ss
sbb
sub
inc
or
int3
sbb
xchg
add
ins
cs
bound
fild
fidiv
pop
pop
ins
or
movs
pop
push
inc
out
xor
into
xchg
xchg
push
adc
jb
dec
mov
pusha
xchg
int
mov
push
jl
loopne
ds
inc
pop
jae
stos
inc
add
sbb
cmp
in
xor
sub
add
loope
add
call
retf
ins
adc
test
out
add
push
iret
inc
dec
add
xchg
inc
ds
lea
cmps
repnz
mov
or
imul
std
cmp
jb
xlat
add
in
xchg
fld
mov
daa
and
xchg
xor
test
fcmove
pop
xor
fbld
mov
std
loop
jno
push
inc
and
jp
mov
mov
or
cmp
scas
inc
mov
fldenv
icebp
bound
sub
sti
shl
aad
jns
imul
jbe
js
pop
pop
rcr
inc
inc
data16
shl
inc
cmp
mov
lods
sar
nop
inc
pop
pop
pop
fisttp
pop
aam
pop
cmp
call
cmc
cmp
es
fstp
pop
clc
mov
xchg
nop
test
mov
pop
(bad)
enter
mov
mov
inc
(bad)
cmp
out
inc
rcr
xchg
push
lods
shl
xchg
inc
nop
mov
int
fidivr
fwait
add
dec
mov
iret
jecxz
test
mov
test
fstp
dec
cmp
repz
rcr
jmp
data16
imul
and
std
call
dec
inc
fs
in
arpl
dec
cmp
inc
ss
pop
loopne
add
je
and
adc
push
jmp
in
sbb
cmps
cmp
mov
aad
loopne
and
adc
add
add
jnp
mul
or
sub
lds
sbb
push
jb
aam
inc
pop
adc
or
out
shr
xor
adc
and
cdq
hlt
pop
out
jmp
sbb
into
iret
js
push
pop
aad
xchg
pop
movs
arpl
lahf
mov
addr16
and
scas
(bad)
addr16
aad
or
sbb
stos
adc
aas
in
xchg
push
bound
and
xor
dec
cmps
shr
add
xchg
fs
pop
jno
ja
push
jg
jb
gs
cmps
adc
outs
rol
js
mov
mov
xchg
inc
call
cmp
sbb
dec
xchg
cmps
inc
xor
imul
lods
add
push
ficomp
mov
cmps
mov
push
adc
lds
or
outs
pop
setp
enter
or
ja
ror
inc
push
xchg
call
aad
pop
mov
inc
out
add
test
jb
es
inc
pop
cmp
xor
adc
in
outs
push
pop
in
xor
xchg
fbld
push
jb
sub
dec
mov
mov
ret
arpl
pusha
xchg
inc
rcl
movs
or
pop
out
mov
mov
lahf
(bad)
(bad)
pusha
mov
and
ins
jmp
cmovbe
xchg
adc
repnz
push
mov
xor
mov
jb
out
mov
in
dec
hlt
push
inc
int3
ja
shr
jl
xor
cdq
cmp
adc
call
pop
nop
dec
mov
inc
imul
add
adc
adc
mov
stos
sar
and
adc
pop
mov
push
inc
xor
gs
sbb
jg
mov
rcr
sub
rcr
fimul
push
inc
inc
or
or
repz
int3
neg
vmread
mov
inc
cmp
dec
icebp
mov
jmp
mov
push
inc
scas
mov
fistp
lahf
loop
cmc
es
adc
popa
pop
cdq
mov
jmp
pop
push
or
mov
imul
xor
mov
(bad)
sub
and
dec
and
popa
adc
mov
cmp
mov
jmp
in
rol
and
inc
cmp
sbb
add
jmp
pushf
mov
test
push
cwde
mov
test
add
push
push
mov
nop
jmp
loope
cmps
jp
dec
cs
mov
imul
int3
push
jo
and
jbe
mov
cmp
stos
into
adc
lock
ins
cmp
fimul
push
ins
xchg
push
repnz
mov
cmp
lds
sbb
int
mov
xchg
clc
add
ret
aam
aas
sbb
leave
jl
mov
xor
sti
or
mov
popf
lock
into
and
push
loope
jmp
cmp
aas
push
mov
or
jbe
cmp
inc
mov
jno
(bad)
xlat
iret
fdivr
push
in
ss
xor
nop
mov
(bad)
push
fucomip
sahf
ss
jo
inc
sbb
dec
adc
mov
jmp
sub
jmp
inc
hlt
jno
cli
js
mov
call
push
xor
push
out
xchg
push
and
mov
mov
inc
mov
xchg
pop
mov
inc
nop
push
inc
loopne
(bad)
push
sar
xchg
jge
std
jae
cmc
dec
jbe
sbb
xchg
xchg
mov
movs
inc
test
repnz
ss
inc
pop
or
int3
sub
inc
pop
(bad)
retf
dec
pop
movs
addr16
scas
aam
push
scas
jmp
push
inc
inc
mov
add
in
or
jae
xchg
aaa
js
cli
and
jbe
dec
bound
(bad)
movs
pop
and
pop
jl
jle
jmp
pop
fdivr
movs
mov
pop
or
pop
int
pop
cmp
test
je
jp
bound
int3
jne
mov
lea
mov
pop
pop
sti
sub
hlt
or
jp
cmp
adc
loopne
aam
push
jg
mov
(bad)
repz
inc
dec
ins
mov
push
pop
add
fs
pop
push
jnp
pop
dec
mov
jg
xchg
inc
dec
jmp
jl
dec
inc
scas
addr16
mov
aam
sbb
loopne
inc
mov
loop
icebp
dec
in
test
xchg
mov
ins
push
lea
adc
je
out
fisub
sbb
mov
into
mov
sbb
xor
data16
cld
ret
ret
ss
pop
cli
or
mov
xor
stc
adc
add
enter
mov
mov
movs
fs
dec
xor
call
cmp
sbb
(bad)
dec
sbb
and
adc
bound
stos
jno
add
adc
ss
mov
add
mov
dec
dec
sbb
lahf
shr
jge
pop
clc
das
cmp
push
cmp
(bad)
mov
mov
cmp
rcr
push
iret
push
inc
ins
push
aam
pop
inc
icebp
shl
push
sub
int
rcr
cmp
cmps
cmp
mov
push
arpl
mov
dec
cmp
mov
lahf
int
bswap
dec
gs
cmp
lds
add
into
add
loopne
outs
mov
push
mov
mov
jae
cdq
push
sub
add
pop
bnd
or
push
popf
mov
retf
daa
rcr
dec
jle
pop
cmps
pop
jo
loopne
(bad)
jnp
xchg
dec
mov
sbb
jle
movs
sub
ret
inc
movs
fs
mov
add
in
fmulp
sbb
movs
adc
add
dec
fist
pop
inc
jecxz
outs
popfw
add
adc
in
push
ret
das
les
scas
cdq
pushf
not
or
push
mov
xor
(bad)
sbb
inc
pop
xchg
push
lds
mov
shr
int
dec
je
pop
and
fdivr
pop
mov
call
mov
sbb
dec
hlt
mov
sbb
and
xor
push
push
jecxz
or
dec
jo
es
and
mov
mov
xor
(bad)
jmp
cmps
fild
and
lahf
dec
retf
mov
cmc
fwait
dec
mov
dec
inc
cmp
test
cmp
mov
xchg
imul
and
cli
jg
and
mov
cmp
out
xchg
inc
pusha
mov
xchg
dec
fistp
ret
cwde
in
mov
push
mov
outs
and
retf
push
push
cmp
ror
push
aad
or
inc
lods
jns
nop
push
(bad)
retf
cmp
pop
mov
enter
test
push
outs
jbe
(bad)
(bad)
pop
outs
(bad)
(bad)
jb
dec
test
enter
adc
dec
jo
push
cdq
mov
and
shl
dec
popa
cmp
test
push
or
(bad)
mov
adc
xchg
bound
imul
data16
push
mov
sub
mov
xchg
sub
jb
in
adc
pop
inc
sti
sti
mov
and
test
jge
dec
fsub
fidiv
xchg
push
add
mov
sbb
dec
mov
xor
cld
hlt
jg
lock
shl
inc
or
loope
dec
lods
cwde
stos
or
jmp
gs
mov
lock
js
bound
sbb
call
pop
lahf
pop
jmp
call
std
je
mov
(bad)
fcmovnbe
and
cmp
repnz
(bad)
std
sar
lods
out
jne
inc
stos
mov
pop
outs
xchg
cmp
cmp
lock
(bad)
(bad)
les
sub
cmp
push
loopne
jecxz
ret
jmp
stos
pslld
test
adc
inc
xor
div
jge
hlt
mov
jne
sbb
lods
imul
jbe
sub
(bad)
iret
inc
rcl
std
push
mov
push
mov
or
ret
sbb
sbb
xor
lahf
xchg
ja
gs
push
movs
aas
lods
push
push
loopne
mov
cmp
and
adc
jae
in
iret
ins
sbb
pushf
jnp
mov
cdq
or
data16
data16
jle
shl
mov
sbb
stos
sbb
push
mov
fcomp
cmp
or
add
dec
mov
mov
lock
pop
cmc
in
in
jge
jne
imul
push
dec
retf
stc
sub
mov
ins
dec
iret
xchg
lods
xchg
loopne
xchg
adc
cmp
rol
(bad)
jecxz
neg
push
mov
push
cmps
aam
sbb
lahf
xor
das
push
xor
add
inc
sti
cwde
stos
(bad)
fistp
jb
push
xchg
mov
mov
aam
pop
and
imul
scas
dec
aad
mov
ret
push
in
idiv
push
push
(bad)
cmp
push
xchg
cmp
leave
cli
push
retf
add
sub
stc
scas
push
lock
jbe
push
push
mov
imul
cwde
mov
mov
aam
movs
out
fmulp
sti
sbb
scas
adc
das
ret
mov
mov
in
ror
sahf
or
pop
cmp
addr16
pusha
xchg
cmp
in
xchg
pop
xor
jg
adc
add
xor
aad
in
fsub
ret
xchg
ret
mov
lea
stos
(bad)
push
xor
je
and
adc
or
aaa
push
scas
popa
arpl
fistp
imul
xchg
cmp
xchg
jecxz
dec
adc
cmp
dec
jae
adc
test
or
sub
stos
popf
mov
stc
pop
out
retf
in
mov
fstp
xor
or
js
adc
inc
popf
retf
dec
xor
ror
cld
sbb
cs
cmp
mov
xor
add
fisubr
or
call
es
adc
inc
cmp
xor
sub
xor
add
das
js
out
movaps
lods
inc
das
or
es
leave
setno
mov
fst
jecxz
cs
not
jne
xor
(bad)
retf
push
xor
xchg
cmp
jmp
jno
hlt
dec
mov
push
push
nop/reserved
mov
mov
cmp
or
shr
cmp
nop
mov
cdq
daa
xchg
std
sar
inc
xchg
popa
shl
out
mov
sahf
cmp
ret
ins
push
pop
lea
(bad)
cmps
mov
xchg
push
loopne
mov
mov
bound
sti
outs
jle
inc
jmp
mov
in
add
rcr
xlat
jle
out
fs
lock
(bad)
je
call
sub
loop
adc
mov
imul
sar
jg
cld
sub
cmp
xor
pop
ret
push
jne
test
inc
outs
test
jp
xchg
jp
std
repnz
push
out
jmp
or
mul
cmps
retf
fcom
div
in
out
(bad)
xchg
mov
or
mov
das
dec
mov
xor
xchg
repz
dec
mov
fisttp
adc
cmc
fmul
mov
lea
add
jg
mov
lods
jl
push
pop
cmps
push
retf
or
imul
push
test
enter
mov
loope
call
setl
les
ss
or
shl
adc
mov
std
jbe
cdq
ret
push
out
mov
or
mov
push
lock
sub
add
mov
adc
mov
pop
push
and
pop
lock
aad
pushf
sbb
pop
sbb
mov
jg
stos
je
xor
xchg
jne
mov
xor
adc
repz
dec
out
or
imul
paddb
fnstenv
popf
loop
push
adc
pop
cmp
push
stos
sbb
adc
daa
and
std
repnz
adc
shl
cmp
and
xor
jge
adc
adc
aam
test
ja
inc
and
sub
arpl
or
jmp
test
cmc
leave
sbb
aam
pushf
dec
les
mov
xchg
pop
adc
leave
adc
xchg
pop
repz
push
or
dec
pushf
and
mov
mov
push
int3
push
stc
mov
inc
or
pusha
mov
mov
add
aaa
or
rol
(bad)
sbb
sti
mov
mov
loopne
add
and
loopne
daa
xchg
in
lods
jns
fs
lods
xchg
ins
sub
mov
cmc
mov
mov
aad
xchg
adc
push
adc
xchg
cmp
add
add
xchg
dec
imul
cdq
xchg
in
and
mov
imul
and
pop
mov
mov
sbb
gs
mov
adc
rcl
ss
fadd
mov
jns
mov
movs
sub
mov
retf
sar
add
xchg
and
(bad)
ror
ror
and
xchg
jmp
sbb
imul
sub
fucomi
fidivr
sbb
cs
daa
jmp
sbb
movs
adc
sub
jge
mov
add
push
inc
shl
mov
cs
push
fsubp
icebp
(bad)
inc
xchg
dec
inc
(bad)
retf
imul
leave
jns
inc
shl
ret
popf
add
xor
cld
inc
xor
fist
pushf
dec
xor
enter
or
ret
push
jle
loope
pop
mov
call
mov
add
cdq
push
pop
icebp
and
stos
mov
pop
pop
mov
inc
rcr
jg
retf
and
bound
bound
fwait
push
mov
ror
or
and
adc
clc
mov
jg
xor
retf
loop
sbb
dec
jp
xor
jl
mov
inc
je
jnp
cmp
mov
dec
inc
dec
mov
loop
cmc
pop
add
push
jp
mov
fwait
(bad)
mov
mov
movs
push
and
pop
out
dec
sub
push
dec
(bad)
fnstenv
jb
xchg
loopne
mov
iret
pop
pop
adc
dec
and
je
js
fs
popf
mov
sahf
xor
ror
lods
fst
out
push
in
int3
pop
ds
xchg
mov
(bad)
std
out
xchg
cdq
mov
inc
and
hlt
mov
fistp
mov
in
jb
fild
xor
push
retf
scas
aaa
xchg
dec
jl
cmp
shl
push
repz
dec
movs
test
add
pop
sub
fcom
xor
les
inc
push
jo
pop
hlt
call
arpl
xor
scas
popf
xor
and
clc
es
lods
ins
sbb
test
cld
lea
cwde
mov
pop
push
jle
daa
test
ins
push
shr
xor
jp
sbb
int3
js
hlt
imul
mov
rcl
sahf
call
les
movs
mov
out
(bad)
out
loopne
mov
lds
pop
dec
in
push
jo
fcmovnb
aad
jne
(bad)
fcmovnu
sub
pop
sub
retf
mov
and
jmp
mov
addr16
mov
jmp
jge
cmp
cmp
(bad)
mov
(bad)
jne
sub
rol
gs
jmp
stos
dec
(bad)
fs
loope
rol
cmps
xor
js
or
dec
sar
icebp
dec
push
fstp
movs
pop
xor
ins
movs
or
(bad)
lock
mov
cmps
cld
mov
outs
les
in
lock
mov
(bad)
les
push
and
xlat
adc
test
pop
add
pop
xor
jbe
adc
movs
mov
pop
sbb
in
test
addr16
xchg
dec
or
aam
std
jnp
cwde
cli
xchg
cmps
fiadd
fistp
jge
iret
cmp
inc
inc
fidiv
adc
lea
dec
js
and
pop
push
pop
cs
jg
pop
sti
xor
icebp
mov
test
aam
push
rol
mov
dec
sub
mov
push
je
enter
push
xor
and
mov
adc
add
ret
outs
mov
scas
int
fdivr
and
(bad)
jno
mov
and
mov
ins
pusha
imul
test
xchg
stos
pop
iret
xchg
add
push
fmul
jae
inc
pop
jp
jnp
pop
lock
xchg
push
(bad)
imul
imul
sbb
mov
enter
jb
inc
xchg
ror
gs
push
and
mov
(bad)
cmps
mov
ja
gs
add
pop
in
pop
cs
dec
into
adc
pusha
fcomi
cmp
mov
jmp
mov
(bad)
jbe
adc
lods
pop
cwde
jnp
dec
lahf
jmp
ficom
outs
mov
xchg
mov
lods
xchg
push
inc
shl
push
in
imul
inc
jne
rcl
jno
mov
push
jecxz
cmps
push
scas
or
pop
ds
outs
icebp
mov
test
bound
cmp
fwait
push
or
fimul
outs
out
arpl
dec
or
xchg
mov
xor
and
jns
jbe
in
xor
(bad)
hlt
or
dec
mov
clc
test
mov
fxsave
mov
repz
jne
push
pop
js
xchg
xor
push
imul
fs
ins
adc
mov
ja
cwde
push
(bad)
xchg
fmul
or
pop
cwde
push
adc
sbb
sbb
adc
dec
ror
cmps
sbb
sahf
cli
outs
repz
ss
sub
push
add
pop
push
out
(bad)
cli
in
stos
xor
aam
enter
add
push
shl
sbb
cmps
pop
dec
jae
cmc
mov
mov
adc
fsubr
or
cld
add
mov
lds
cs
mov
mov
fnstenv
pusha
sub
push
stc
int3
shr
sbb
sbb
leave
xor
stos
jmp
iret
push
push
ret
mov
pop
add
adc
jg
xchg
cmp
pop
and
unpcklps
dec
add
(bad)
sahf
ror
fld
sbb
loop
mov
sub
adc
mov
out
cmp
sub
adc
jae
(bad)
mov
xchg
lea
movs
ror
jmp
pop
push
jge
pop
pop
dec
lods
mov
cmp
in
std
sub
and
cmp
sub
or
xchg
call
les
repnz
xor
push
pop
add
push
sti
inc
fwait
jno
jp
pop
(bad)
mov
xor
pop
mov
xor
imul
inc
mov
sbb
test
std
add
out
or
push
jmp
(bad)
xor
std
and
or
rcl
xchg
or
inc
cmps
inc
dec
push
jle
xchg
and
imul
outs
and
pop
mov
or
and
dec
call
pop
mov
iret
xlat
stos
das
jge
dec
imul
sbb
pop
cli
mov
inc
jp
add
test
movs
mov
movs
ja
into
sbb
repz
neg
sub
(bad)
mov
scas
pop
pop
sbb
push
mov
xlat
cmp
mul
mov
sub
xchg
aam
arpl
popa
add
mov
inc
lods
or
pop
pop
mov
dec
scas
scas
fiadd
cmp
jp
push
mov
and
scas
mov
arpl
inc
rcl
test
inc
add
nop
dec
pop
fbld
imul
jmp
aam
leave
mov
pop
cmp
add
jbe
pushf
fisubr
aad
mov
push
cmp
jo
rcr
sbb
or
adc
add
dec
mov
xor
mov
mov
and
mov
ret
and
addr16
inc
test
or
pop
mov
je
ss
jns
ins
pusha
sub
das
mov
or
jl
shr
out
or
enter
stc
jae
jmp
sbb
and
movs
mov
inc
mov
add
test
push
cmp
repnz
inc
xchg
xor
outs
les
mov
sub
hlt
pop
dec
xchg
adc
cs
mov
cmp
cmp
mov
das
xor
iret
ins
test
pop
movs
ins
and
push
out
xchg
and
dec
inc
imul
jl
push
jnp
js
and
aam
or
out
cdq
cmps
cdq
or
rol
pusha
and
or
xor
pop
jno
sbb
xchg
mov
dec
imul
(bad)
ds
and
xchg
leave
cmp
sar
mov
call
aas
jmp
add
cmc
fnstcw
inc
dec
push
adc
cmp
sbb
ja
inc
dec
sbb
sub
adc
test
add
and
or
icebp
pop
inc
add
sbb
popa
pop
call
cmps
cmp
adc
(bad)
iret
loopne
sti
push
push
push
mov
dec
scas
mov
movs
jbe
sbb
rol
ret
cdq
cmp
aaa
and
inc
movs
fcom
shl
push
cwde
add
jo
jg
pop
pop
push
out
xchg
push
cmc
xor
push
xor
data16
shl
mov
stos
in
mov
push
bound
dec
test
test
test
bound
dec
clc
ja
push
enter
test
dec
sbb
out
cmps
hlt
pop
inc
pop
mov
cmps
mov
fild
mov
ret
xchg
ins
sbb
pop
fldcw
push
jle
xchg
xor
rcl
js
cli
add
inc
cmp
sub
out
iret
pop
lahf
rol
mov
xor
jmp
(bad)
daa
clc
jmp
fmul
fmul
fbld
push
dec
push
add
xlat
cmp
loope
test
inc
jecxz
aas
inc
adc
leave
ret
fwait
stc
repnz
imul
jb
outs
fwait
out
jg
or
leave
lock
xchg
fstp
(bad)
or
movs
lock
push
mov
movs
stos
mov
ins
pusha
mov
jns
sub
mov
shr
jb
or
xor
in
mov
ja
out
or
retf
hlt
cmp
(bad)
or
or
pop
(bad)
cld
pop
add
sbb
mov
ja
(bad)
mov
movs
repz
cmp
ds
and
(bad)
sub
daa
fdivr
lods
sbb
push
jg
ss
and
popf
retf
ror
push
sub
fmul
sbb
push
adc
ret
jnp
xor
mov
mov
std
add
ins
xchg
aas
cmps
jns
aas
fld
(bad)
(bad)
cmps
adc
pop
xor
(bad)
pop
ret
cmc
jmp
adc
clc
idiv
or
imul
push
stos
inc
(bad)
jae
(bad)
fdivr
xchg
int3
inc
xor
add
repnz
push
xchg
out
retf
adc
adc
push
and
xlat
hlt
aad
pushf
mov
out
(bad)
jno
xor
lods
imul
sbb
call
adc
pop
inc
cs
jp
jb
pop
add
pushf
les
sbb
jbe
xchg
les
jne
cmp
cmp
aad
retf
mov
jp
jae
pop
rol
sub
pop
add
(bad)
ret
cmc
and
movs
dec
add
ss
inc
pop
scas
pop
ret
cmp
cs
sahf
inc
pop
dec
xor
or
in
xchg
mov
loop
mov
outs
jbe
stc
fistp
aas
fs
lods
and
out
pop
ja
movs
int3
and
dec
neg
(bad)
call
(bad)
sbb
push
mov
loope
das
les
inc
fisttp
add
xor
adc
cmp
(bad)
xor
test
cmp
js
mov
adc
inc
loopne
cmp
or
neg
adc
sub
nop
mov
ret
je
pushf
dec
or
sbb
int3
ror
aam
hlt
fld
stos
fdivr
mov
pusha
push
jb
adc
sbb
(bad)
xchg
add
xchg
push
jns
fstp
rcl
inc
mov
mov
fwait
out
xchg
pop
adc
in
cmp
adc
fsubp
cdq
and
fbstp
bound
scas
rol
lods
mov
mov
mov
mov
stc
out
mov
lods
xor
mov
adc
mov
push
inc
mov
mov
xor
sbb
pop
inc
call
repnz
sbb
mov
xchg
push
mov
mov
mov
ins
dec
sub
add
adc
repz
fs
mov
fsub
pop
add
retf
ss
xor
fwait
mov
add
pop
test
jle
sub
push
cmp
enter
(bad)
mov
repz
scas
mov
pop
or
xchg
in
mov
leave
sahf
or
bnd
mov
pop
call
lahf
stos
sub
cmp
pop
fs
adc
aad
outs
adc
push
loope
arpl
jbe
push
popf
adc
or
shl
sbb
mov
inc
ret
sub
retf
push
xor
sub
add
nop
adc
fiadd
arpl
mov
mov
and
xor
clc
pusha
push
dec
pop
mov
push
lods
push
pop
std
and
cwde
cwde
xchg
fs
lods
ror
sbb
call
jle
inc
jb
(bad)
outs
cmps
leave
(bad)
aam
lock
jne
dec
fdiv
mov
dec
jae
jg
add
push
outs
inc
or
xlat
add
out
aad
mov
jp
adc
outs
(bad)
pop
lods
adc
outs
add
daa
push
or
in
sbb
jns
push
das
out
sar
pop
dec
ret
push
out
lock
popf
inc
mov
push
sub
pop
sbb
pop
into
aad
mov
or
pop
mov
xor
(bad)
bound
enter
mov
test
inc
sti
jg
fnsave
and
dec
add
inc
cwde
pop
push
mov
sub
sub
jb
cdq
sbb
rcr
inc
mov
lods
call
sahf
xchg
or
push
inc
jge
pop
sar
mov
push
inc
dec
(bad)
dec
push
dec
xchg
lds
(bad)
xor
xor
call
mov
mov
cwde
sbb
pushf
aas
sti
add
pusha
pop
or
test
xchg
pop
imul
push
cmp
es
enter
aaa
push
dec
in
fldcw
das
cmps
imul
push
mov
mov
mov
xchg
pop
mov
mov
mov
cmp
pushf
sbb
je
mov
mov
dec
pop
xor
cmps
pop
call
in
sbb
stos
mov
sub
adc
call
les
inc
sub
pushf
push
inc
and
mov
fcom
inc
cmc
cmp
push
aad
cmp
retf
nop
popa
in
fldcw
leave
and
cmps
ins
fisub
enter
xchg
add
loope
fdiv
imul
aas
inc
add
jae
in
in
lea
dec
repz
xchg
pusha
push
jno
pop
jmp
adc
sbb
add
dec
sub
jmp
mov
xor
jmp
dec
int3
push
xchg
addr16
mov
mov
jmp
jne
mov
sbb
or
and
mov
in
int3
xor
ret
fs
in
pop
sub
add
mov
push
inc
pop
cmps
test
fistp
push
call
dec
pusha
fistp
pop
repnz
add
or
repz
jge
mov
pop
(bad)
outs
test
xchg
lds
dec
mov
sbb
jnp
loop
icebp
inc
ror
out
dec
mov
cmp
stos
pusha
out
daa
jo
xchg
aas
mov
fistp
retf
stos
mov
jl
mov
ret
(bad)
or
sahf
pusha
rol
stos
xchg
sub
pop
cdq
aam
int3
in
pusha
pop
cdq
add
nop
lods
jae
fmul
xchg
out
mov
das
js
fs
ret
sub
cmps
iret
leave
clc
and
pop
repz
xchg
test
ret
je
sub
packuswb
xor
cmp
sahf
push
push
pop
nop
fistp
or
sar
sub
mov
mov
adc
out
and
popf
add
and
sbb
les
in
fucomip
xor
jle
ins
gs
outs
adc
fwait
mov
lods
fsubr
sub
inc
cmps
xchg
sub
xor
cmp
xor
jbe
mov
loop
push
dec
icebp
mov
and
arpl
xchg
and
mov
stos
inc
in
adc
hlt
mov
xor
outs
adc
xchg
pop
iret
dec
stos
cmp
or
stos
mov
data16
fs
ret
sub
or
sub
xchg
jne
(bad)
adc
js
adc
sahf
push
sahf
jmp
test
sbb
adc
dec
add
pop
push
mov
push
out
xchg
push
xor
arpl
(bad)
and
aad
inc
and
ss
or
dec
mov
ret
aas
pop
popf
jle
jle
mov
aaa
aaa
imul
sahf
mov
jmp
ja
jno
or
pop
add
shl
dec
fidivr
jge
pop
lock
xchg
test
sar
jmp
in
jge
retf
dec
mov
sbb
outs
or
int3
xchg
movs
mov
mov
or
pop
imul
and
mov
jno
dec
sti
cld
imul
fs
stc
enter
cmp
xor
push
test
leave
xchg
pop
sub
add
mov
xlat
call
mov
push
pop
mov
push
addr16
sub
scas
shl
xchg
or
mov
adc
scas
cli
cmp
(bad)
sbb
push
fisttp
push
loopne
rcr
jp
aad
jle
std
sub
adc
sbb
retf
mov
jne
jle
ret
adc
icebp
(bad)
cld
xor
cs
cmc
sub
aam
cmps
sbb
ds
sahf
dec
std
dec
ins
cmp
stos
fdivr
out
fimul
xor
jbe
cld
cmp
inc
dec
pop
dec
les
adc
push
pop
inc
mov
loopne
fild
out
cwde
lods
xor
pop
not
push
inc
in
cli
scas
aaa
enter
mov
out
xchg
push
cmp
jp
nop
pop
(bad)
mov
not
shl
fiadd
inc
pop
pop
mov
push
jp
sub
push
cmp
test
or
test
addr16
ss
and
pop
cmc
sar
(bad)
jp
je
xchg
mov
loop
xchg
mov
sbb
or
inc
jbe
xchg
add
pop
shl
sbb
in
cmp
stc
pop
icebp
inc
fisttp
lock
test
push
call
inc
sbb
pop
pop
jecxz
adc
ror
mov
cmps
xchg
jecxz
jo
jb
adc
ds
mov
gs
loop
xor
sbb
mov
std
add
dec
or
adc
mov
mov
mov
pop
(bad)
fimul
lock
pop
adc
add
add
add
jne
push
sbb
out
push
pop
mov
adc
dec
in
jmp
jge
aad
xlat
sahf
shld
inc
or
fdivr
jns
mov
and
fadd
fwait
sbb
fadd
cmp
or
imul
(bad)
popa
dec
xchg
test
cmp
rcr
dec
xor
cmp
sbb
xlat
xchg
loopne
jne
mov
adc
test
pop
pop
fwait
pusha
loopne
sar
xlat
addr16
or
add
add
test
add
add
mov
dec
mov
dec
mov
or
outs
fwait
sar
adc
mov
lds
or
out
in
inc
ficom
dec
xchg
out
mov
xchg
mov
add
and
adc
dec
out
pop
push
pushf
imul
enter
mov
nop
sbb
lahf
sub
push
xchg
dec
movs
outs
push
lea
es
pop
rcl
xchg
sbb
(bad)
jp
jmp
jp
sbb
stos
ror
daa
xchg
push
hlt
sti
retf
dec
push
or
fist
xor
sar
pop
jo
xor
sbb
dec
sub
xor
xlat
push
pushf
jne
xchg
sbb
and
stc
pop
sar
ror
js
sbb
xor
stc
add
add
mov
call
add
jmp
sar
jmp
adc
inc
mov
and
xrelease
hlt
mov
sar
test
cmp
lea
jb
inc
mov
in
push
dec
pop
push
xor
aad
test
repz
sub
fild
and
movs
inc
ss
test
pop
push
rcr
pop
bound
test
and
daa
fcom
pusha
imul
adc
xchg
stos
fst
sbb
repz
inc
loope
mov
mov
and
mov
and
mov
bound
nop
add
dec
and
scas
jp
ror
outs
mov
xor
out
add
into
gs
lock
cld
dec
movs
hlt
push
sbb
xor
sbb
push
add
push
mov
ss
xchg
cmps
mov
leave
pop
in
pop
(bad)
xor
scas
xchg
push
movs
bswap
mov
ror
popf
jl
es
add
mov
je
cmp
fistp
cmps
pop
scas
aad
push
xchg
jle
xor
mov
jl
jnp
jb
mov
mov
jns
jecxz
cli
push
fdivr
int
(bad)
jle
add
pop
lock
mov
fnsave
cmovo
cmp
in
test
in
(bad)
cwde
sti
fcmovb
xchg
sbb
xor
jb
cdq
push
jne
push
sbb
push
fstp
adc
gs
rol
cli
push
mov
test
pusha
je
adc
in
adc
sub
adc
and
adc
push
sub
add
shl
movs
push
add
call
add
or
int3
scas
sub
xor
adc
xchg
enter
das
sbb
adc
fwait
push
sbb
cwde
shr
(bad)
popf
sbb
in
cs
cdq
xchg
retf
dec
pop
movs
jecxz
mov
es
mov
cs
je
jecxz
xchg
fdiv
cmp
ret
loopne
in
sbb
and
dec
and
push
xlat
cmp
jmp
cwde
ss
pop
xor
aad
add
or
js
cmps
jmp
lahf
cmp
ss
mov
ret
dec
aaa
shl
xlat
push
fnstcw
clc
push
push
pusha
test
and
es
test
push
hlt
sub
or
inc
cli
pop
and
push
mov
xchg
fcmovnbe
adc
imul
and
addr16
add
add
rol
mov
jl
mov
cmp
cli
out
pop
add
sub
push
test
std
data16
jg
sbb
arpl
xchg
data16
(bad)
jp
scas
(bad)
add
fnstenv
pop
shl
add
inc
jbe
pop
push
(bad)
push
scas
push
outs
(bad)
repz
adc
fidiv
(bad)
jns
loope
or
cmp
fmul
inc
je
into
mov
into
(bad)
xor
cmp
gs
std
sub
adc
pop
dec
xchg
cli
stos
push
pop
push
lods
add
scas
push
mov
sub
aam
js
jge
lods
mov
loopne
pusha
dec
clc
xchg
rcr
bound
ret
aaa
mov
mov
inc
neg
stos
popa
xchg
jno
(bad)
xor
jp
test
ss
pushf
xchg
mov
pop
xchg
sub
sar
sub
and
fld
ficomp
hlt
dec
inc
mov
sbb
aam
imul
cmp
dec
push
or
dec
into
enter
std
jae
pop
push
das
mov
sbb
push
mov
std
je
inc
xlat
or
ffreep
rol
ins
nop
addr16
xchg
mov
dec
xor
and
sahf
mov
in
(bad)
dec
call
in
sub
je
adc
push
add
push
mov
out
sub
scas
sub
cmp
xchg
(bad)
xchg
cwde
pop
stos
dec
dec
xor
out
xlat
addr16
enter
shr
mov
lea
ins
sub
movs
js
mov
push
std
aas
dec
inc
out
inc
sbb
sbb
mov
retf
aas
aam
pop
sbb
js
push
ds
aaa
call
xchg
xor
pop
aaa
jmp
jnp
sub
sahf
daa
mov
popa
ins
fst
ja
nop
mov
fwait
mov
je
ds
mov
xor
or
(bad)
es
idiv
xchg
mov
in
fild
retf
rcl
mov
jne
pop
push
adc
gs
inc
sub
jle
mov
dec
nop
loope
inc
or
pop
js
xor
retf
sub
out
xor
pop
ss
cmps
cmps
dec
fmul
frstor
rol
mov
pop
xor
push
jp
adc
sub
mov
mov
dec
rcr
jecxz
js
pushf
popa
add
outs
jae
adc
pop
rol
out
mov
and
mov
sbb
xor
lods
lock
lods
sub
mov
scas
movs
pop
(bad)
sub
iret
xor
addr16
xchg
cmp
je
stc
xchg
loopne
inc
cmc
xchg
retf
pop
mov
dec
inc
es
xchg
jae
rol
mov
in
pop
add
test
out
mov
inc
add
(bad)
in
xchg
repnz
movs
or
repz
inc
pop
nop
into
imul
je
pushf
rcl
xor
jmp
in
aad
fucomip
cmp
(bad)
sbb
es
and
mov
popf
jmp
dec
gs
fbld
mov
aad
dec
dec
mov
in
sbb
aad
imul
jmp
sbb
adc
mov
or
jecxz
pop
cmps
pop
mov
mov
ins
fidivr
inc
adc
mov
shr
ds
jle
and
pushf
ins
into
lods
dec
cdq
push
push
xchg
mov
jle
dec
mov
sbb
inc
into
outs
or
xchg
xor
inc
inc
add
inc
cmps
pusha
hlt
add
push
pop
jg
mov
push
push
sti
mov
fs
cld
jle
jle
mov
ins
scas
fldcw
mov
ins
mov
jmp
fs
xor
pusha
sub
cmp
mov
xlat
scas
in
sub
inc
jae
call
mov
mov
xor
jnp
loope
(bad)
fnsave
pop
daa
dec
or
movs
aaa
jmp
push
add
mov
pop
mov
xor
add
mov
sbb
call
inc
mov
push
pop
xchg
mov
sbb
or
xchg
lahf
cmc
and
jae
cdq
bswap
adc
sub
mov
test
scas
sub
mov
xchg
in
ret
and
cld
sbb
in
mov
cli
mov
retf
das
ficomp
aad
cs
sbb
fsub
add
arpl
jmp
mov
sub
mov
or
int3
pop
mov
or
sub
push
imul
pusha
rcl
or
fwait
mov
js
fimul
sub
call
mov
sbb
pop
in
iret
push
leave
mov
cmp
sbb
pop
rol
in
(bad)
dec
mov
stos
pop
sbb
hlt
fbld
rcr
popa
fs
fsub
repz
sahf
int
neg
push
bnd
jne
(bad)
lock
call
aaa
out
fbstp
not
pop
pop
fs
in
inc
and
mov
mov
xor
mov
mov
jno
mov
iret
inc
das
imul
push
aam
pushf
scas
sahf
ss
sar
or
clc
sbb
frstor
loope
lahf
mov
(bad)
xchg
sbb
jnp
out
sbb
fst
ins
stos
sbb
int
bound
nop
iret
lea
mov
sti
imul
call
jge
call
fcom
push
sbb
test
sbb
xor
mov
leave
rol
xchg
fwait
int
mov
push
sahf
ins
or
ficomp
jp
call
call
mov
xchg
out
sub
mov
push
fisub
sar
push
or
dec
(bad)
cmps
adc
iret
and
pop
cli
push
das
jno
mov
dec
add
ret
sti
dec
ret
out
inc
dec
cmp
lods
inc
leavew
jae
mov
mov
mov
xor
jns
aad
xor
adc
xor
xchg
and
and
ja
dec
mov
pop
sub
ins
shr
fldln2
cmp
xchg
mov
xchg
aas
das
scas
fs
pop
out
adc
ret
ds
div
mov
cli
add
mov
mov
(bad)
mov
and
xor
cmp
ds
std
pop
add
retf
sti
cdq
cmps
aas
adc
jnp
xchg
mov
fidivr
xor
and
(bad)
sub
ds
iret
cmp
cmp
lss
adc
or
scas
std
iret
shr
add
test
je
dec
jns
lods
dec
push
mov
mov
test
adc
lods
pusha
stos
sub
aaa
cmp
pop
xor
loopne
ret
leave
add
ss
sar
hlt
out
pop
(bad)
outs
ror
loopne
or
adc
jmp
movq
mov
cmp
mov
out
cwde
mov
(bad)
fcmovu
and
cld
fwait
xchg
call
outs
mov
cmp
mov
push
and
xchg
sahf
sysexit
aam
push
mov
dec
loope
sub
call
fisub
cmp
scas
out
and
imul
loope
sub
and
test
sbb
les
fbld
out
std
addr16
int
daa
shr
or
nop
mov
out
in
inc
pop
push
jg
sbb
mov
cmp
jg
into
and
push
push
ins
push
jns
xor
iret
fadd
fs
jae
adc
ret
(bad)
data16
mov
aaa
adc
fs
add
pop
or
lods
sub
ins
mov
jb
or
pop
dec
nop
or
inc
adc
cmp
int
loope
loope
cmp
outs
imul
or
test
pop
mov
rol
add
(bad)
xchg
adc
popf
scas
nop
movs
leave
cmp
cs
pusha
jo
push
push
jo
call
ja
mov
mov
pop
sbb
and
mov
xchg
fst
add
adc
dec
(bad)
jl
shr
scas
mov
dec
movs
rcl
mov
in
cmp
psrad
xchg
cs
inc
inc
mov
call
mov
mov
or
and
push
pushf
pop
sbb
mov
outs
aas
mov
dec
mov
ins
dec
pusha
int3
mov
cmc
shr
mov
jne
arpl
jmp
lods
std
test
jnp
jb
jg
push
retf
lods
mov
dec
adc
pop
jmp
fcmove
in
out
in
in
rol
inc
jae
(bad)
lods
ror
ret
sbb
mov
jb
pop
int3
std
and
ror
leave
call
and
add
das
sbb
out
movs
inc
push
jbe
add
rol
ret
inc
push
(bad)
xlat
aam
fisub
xor
mov
sbb
ret
mov
fiadd
mov
aad
and
movs
xchg
sub
mov
push
inc
or
aaa
sbb
mov
out
fwait
jns
fbstp
push
lea
inc
mov
int
arpl
hlt
inc
jno
adc
idiv
xchg
jae
cmp
and
dec
add
sub
fwait
in
mov
jo
cmp
mov
movs
fld
fadd
or
or
mov
xchg
mov
inc
iret
lds
add
adc
and
push
fnstcw
or
iret
popa
add
jg
jno
adc
fwait
inc
(bad)
pop
and
cmp
inc
(bad)
and
mov
pop
aam
int3
jne
mov
push
inc
mov
into
add
dec
ds
or
or
push
leave
mov
sbb
test
std
stos
imul
test
rcr
mov
loope
pop
sbb
adc
stos
push
or
dec
mov
ja
dec
or
adc
jns
addr16
mov
leave
les
jbe
xor
and
pusha
icebp
or
aas
push
mov
arpl
push
not
inc
ret
adc
pop
pop
pusha
int3
loopne
xchg
hlt
jae
je
(bad)
es
mov
stos
jno
inc
cmp
(bad)
mov
jl
jg
shr
inc
jne
test
jne
add
es
das
adc
daa
fisttp
inc
js
adc
jge
add
in
je
nop
scas
rcl
pop
cmp
ror
inc
adc
xchg
pop
fs
mov
mov
mov
add
mov
jnp
mov
jmp
mov
mov
pop
cmp
cmp
je
push
cmp
aad
adc
in
mov
outs
adc
pop
xor
repz
stos
jge
mov
push
or
jnp
sbb
call
pusha
adc
arpl
fnstenv
ror
in
ja
fdiv
scas
je
push
mul
in
cmp
push
pop
pop
jl
sbb
aad
mov
stos
js
aam
in
push
cmp
call
push
std
pushf
mov
mov
stos
and
jae
out
xor
repnz
dec
aad
mov
sahf
or
sub
movs
retf
movs
lock
cs
ror
xor
sbb
test
inc
cmp
add
or
fistp
shl
add
fidiv
dec
in
loope
cmc
pop
cdq
xlat
push
jl
je
lahf
add
jge
jae
push
mov
popf
sar
adc
gs
data16
stos
call
jae
iret
sti
sbb
inc
mov
xor
or
ins
in
shr
pop
cmp
or
mov
jb
pop
daa
outs
mov
push
sub
icebp
fs
cwde
fcomp
sub
mov
mov
aam
adc
gs
cmps
adc
dec
or
(bad)
stc
cli
popf
fsub
into
or
ret
call
movs
fmul
out
and
jle
inc
(bad)
arpl
shl
mov
mov
inc
enter
push
outs
shr
push
sub
cmc
fdivrp
lea
pop
cwde
fmul
(bad)
je
adc
adc
test
adc
or
pushf
outs
cld
rcr
fwait
lods
std
add
xor
les
movaps
fdiv
sub
add
inc
sbb
neg
nop
inc
out
xchg
imul
fst
fidiv
mov
cwde
push
cmp
aad
es
and
sar
and
pop
js
sub
push
(bad)
mov
cmp
ins
xchg
in
jge
jge
outs
addr16
push
sub
xor
lahf
pop
push
out
mov
fiadd
aam
popa
pop
xchg
or
mov
cmps
rol
and
sti
mov
mov
push
xor
cmp
sub
outs
sbb
xchg
sub
stc
push
adc
push
jne
add
adc
imul
xchg
(bad)
loopne
push
mov
mov
repz
jmp
stos
or
pop
fs
mov
adc
pop
inc
jo
rol
push
sti
jge
rcr
mov
lods
loop
fs
jbe
cmps
dec
sbb
ror
sbb
mov
ins
sub
jb
out
cmp
or
xchg
xor
mov
fldcw
mov
push
xor
add
push
idiv
outs
or
daa
je
fidiv
xor
and
je
xchg
mov
jmp
dec
adc
mov
inc
push
fidivr
jg
xor
inc
test
popf
push
scas
adc
pop
ret
pop
daa
call
addr16
push
adc
jmp
adc
in
jns
xor
imul
add
mov
cmp
jle
mov
nop
push
loop
jmp
lea
jge
fbld
mov
cmp
mov
jecxz
cli
xchg
movs
std
inc
dec
int3
jp
fsubr
in
call
in
dec
and
add
nop
sub
movs
ret
or
xchg
shl
jo
pop
in
gs
je
leave
adc
jne
punpcklbw
(bad)
movs
mov
(bad)
out
lea
and
sub
cmps
adc
sub
mov
mov
cwde
mov
mov
addr16
movs
dec
sub
daa
out
jnp
imul
ret
mov
icebp
push
sub
cli
mov
adc
and
sbb
pop
dec
inc
or
mov
sti
xor
cli
jge
outs
in
or
(bad)
xor
ret
sbb
mov
mov
scas
or
mov
lods
jmp
jmp
mov
add
sbb
or
xchg
fidiv
es
mov
pop
xchg
jl
in
imul
add
mov
(bad)
lahf
xchg
icebp
push
outs
xchg
mov
sbb
push
shl
js
xchg
sub
push
mov
aam
cmp
fcomp
les
test
pop
icebp
push
cdq
dec
add
dec
cmp
inc
ficomp
cmp
les
sbb
out
xchg
xchg
(bad)
pusha
scas
inc
cmp
mov
je
mov
push
sbb
pop
dec
movmskps
adc
rol
idiv
mov
fisub
mov
fnstsw
jo
push
sbb
mov
jge
sub
dec
xlat
cmps
jmp
and
popa
push
stos
mov
sub
xchg
out
stos
xchg
test
or
sbb
mov
scas
push
fcomip
out
scas
pop
adc
int
out
out
sbb
inc
push
mov
movs
xlat
pusha
sbb
fcomp
test
(bad)
push
add
adc
dec
cmp
mov
into
int
(bad)
fld
push
ja
dec
jae
xchg
and
xchg
ret
(bad)
inc
fwait
ror
leave
dec
fidivr
dec
jb
pop
mov
pop
adc
xor
push
xor
in
ins
imul
pop
dec
adc
mov
js
jno
jno
call
xor
adc
and
cdq
add
fisub
pusha
test
inc
(bad)
push
clc
aaa
push
push
les
sbb
or
adc
and
pop
not
or
in
jb
popa
dec
dec
rol
pop
inc
out
gs
add
jl
hlt
les
ds
or
sub
in
cmp
cli
loop
or
add
jae
mov
repnz
xor
aad
and
xchg
in
xlat
scas
loope
sbb
mov
jae
push
add
je
add
xchg
movs
cmp
(bad)
movs
dec
ds
jp
mov
adc
int3
push
loopne
xchg
pushf
outs
jg
pop
sbb
xor
xchg
stos
movs
mov
arpl
in
and
test
cli
mov
and
inc
push
mov
jbe
sub
push
test
test
repz
jbe
pop
js
sbb
fimul
lock
(bad)
(bad)
test
inc
repnz
(bad)
cmps
xor
int
jge
dec
sub
(bad)
in
xor
mov
pop
sahf
mov
ror
pop
inc
and
hlt
lds
gs
es
aad
mov
inc
push
mov
and
ss
hlt
add
fs
fld
mov
fwait
cmps
sbb
sbb
sahf
mov
mov
push
xchg
push
fsub
loope
fld
xor
adc
int3
ror
or
retf
cmps
cmp
outs
mov
and
mov
(bad)
xchg
add
push
pop
data16
cmp
mov
jno
jo
adc
pop
dec
inc
iret
enter
jmp
mov
in
pop
ret
and
cmp
retf
shl
lods
xor
in
pop
cmp
fsubr
add
iret
aam
lds
mov
jl
xchg
pop
ins
(bad)
(bad)
and
cmc
es
mov
jae
cwde
sbb
int3
xchg
mov
ja
lea
jo
add
sub
dec
sub
xor
pop
add
pop
inc
repz
call
dec
dec
imul
stos
mov
sub
sub
ja
sub
mov
sub
xor
rol
sbb
dec
jmp
dec
pop
popa
mov
xchg
add
mov
xchg
pop
xor
retf
ja
clc
cmp
imul
mov
fst
mov
mov
cmp
popa
arpl
push
pop
dec
sub
rcl
cwde
imul
dec
and
bnd
xchg
jp
mov
inc
(bad)
mov
dec
adc
mov
fisttp
out
cmp
les
xor
sbb
fadd
xor
push
adc
or
mov
(bad)
fidivr
outs
sbb
repz
loop
call
sbb
mov
mov
movs
sbb
int3
pop
popa
fild
dec
push
cmp
sti
adc
lds
lahf
xchg
loope
dec
fistp
pop
test
or
fdivr
stos
lahf
sub
xchg
repz
jl
inc
test
sub
sbb
dec
or
sbb
and
xor
retf
gs
jns
pop
jno
outs
outs
aaa
ins
clc
sub
test
mov
int
(bad)
repz
fsub
enter
int3
pushf
xchg
inc
mov
cmps
sahf
inc
push
in
(bad)
and
xchg
dec
rcr
cld
aam
dec
mov
movs
jo
cwde
pop
sub
inc
sbb
mov
(bad)
shr
fbld
das
(bad)
mov
cs
dec
imul
mov
sbb
mov
push
pop
mov
mov
mov
stos
je
cmp
adc
out
mov
cmp
and
push
pop
sub
rcr
inc
int3
bound
pop
mov
mov
pop
mov
adc
retf
pop
lea
inc
mov
sahf
fsub
sbb
sub
fimul
pop
das
jg
pop
dec
retf
mov
pop
push
daa
fcom
mov
ror
add
je
jae
fs
xchg
cmp
xchg
cli
xlat
push
sbb
cmp
add
jb
push
pop
fdivr
sub
popa
jg
mov
add
inc
push
adc
inc
sbb
jmp
pop
mov
aad
jmp
lods
fwait
call
dec
xor
(bad)
mov
pop
scas
lock
xlat
mov
int3
xor
imul
movs
push
cmps
sub
fstp
cwde
dec
add
fdivr
pop
adc
fucompp
sub
push
ins
pop
mov
(bad)
jg
xchg
aaa
mov
in
clc
rol
in
sub
push
retf
mov
push
inc
(bad)
cmp
sbb
fisubr
fucomip
xor
test
cs
loop
fidiv
out
outs
lock
dec
adc
test
jl
and
adc
cmc
push
and
nop
inc
xchg
ja
mov
jb
sahf
pop
cmp
sahf
imul
dec
mov
push
les
push
xlat
mov
mul
ss
sbb
adc
fsubr
leave
(bad)
adc
cld
push
cmps
movs
mov
fnstenv
gs
pop
adc
mov
jbe
(bad)
call
adc
jo
(bad)
repnz
scas
retf
or
dec
in
fstp
scas
out
jo
push
push
xchg
mov
mov
sub
add
(bad)
fistp
mov
mov
cmp
movs
xor
xchg
and
or
into
push
cmp
rcl
sar
jecxz
addr16
data16
imul
mov
adc
data16
or
repz
jb
sub
jo
rep
test
pop
xor
bnd
nop
dec
in
icebp
mov
sbb
scas
mov
(bad)
imul
mov
addr16
push
adc
and
dec
and
das
shl
xchg
arpl
sub
loope
lea
push
cs
dec
and
vpshufd
jmp
xrelease
je
adc
push
ret
outs
in
fidivr
and
in
push
jno
std
cli
lahf
lods
fldpi
test
pop
(bad)
push
mov
fwait
sub
nop
cwde
sbb
add
fwait
pop
inc
mov
out
xchg
cmc
cmp
jl
mov
fwait
pusha
push
cmp
fs
sub
adc
ja
push
cs
xor
inc
push
sbb
cmp
loopne
ins
lods
and
movups
stos
push
out
mov
jmp
fidivr
fcomp
gs
stc
push
in
clc
addr16
adc
sub
xchg
in
dec
adc
nop
dec
cmp
sbb
stc
clc
lods
std
repz
fidiv
sub
push
add
fstp
loop
mov
lea
adc
mov
pusha
fsub
sbb
in
adc
dec
fdivr
and
and
jmp
jmp
jnp
clc
push
(bad)
(bad)
pop
outs
jns
dec
mov
mov
lock
or
inc
mov
cli
or
pop
call
(bad)
mov
in
inc
out
in
mov
mov
popf
out
call
or
inc
pop
pop
xor
mov
in
cmpps
hlt
adc
ds
div
cs
add
jmp
push
adc
test
aas
cdq
dec
mov
ins
jle
adc
dec
adc
cli
inc
push
lods
mov
jmp
lock
imul
test
int
mov
shl
push
mov
jmp
jno
inc
mov
jns
hlt
and
xchg
neg
inc
mov
mov
and
inc
mov
mov
retf
(bad)
lock
pop
repz
imul
mov
sub
mov
test
mul
dec
pop
pop
inc
hlt
scas
cmp
jg
ins
imul
mov
in
cld
add
sbb
fs
fs
add
mov
jge
call
push
cmp
sbb
movs
sbb
imul
out
add
inc
fnsave
or
and
add
scas
mov
je
clc
icebp
or
xchg
pusha
fdivr
mov
mov
inc
(bad)
cmp
or
sub
adc
lods
sub
mov
cmp
jno
cmp
jno
jl
imul
add
pop
fist
test
inc
inc
repz
sbb
aas
call
imul
cmp
sahf
fisub
mov
cmp
pop
(bad)
sti
popf
adc
add
sti
xor
leave
(bad)
inc
or
cmp
(bad)
and
outs
inc
xchg
pop
hlt
outs
jno
out
enter
push
je
in
pop
jo
xor
mov
fucom
pop
iret
mov
loope
mov
inc
and
add
sbb
push
xor
(bad)
fdiv
nop
pop
iret
sub
dec
and
mov
xchg
test
aad
push
adc
and
adc
cmp
ja
(bad)
cmp
in
movs
adc
lahf
jecxz
ss
mov
pop
imul
mov
jnp
jecxz
cli
inc
dec
int
aas
loopne
sub
sub
sbb
xor
test
sbb
push
loop
pop
stos
scas
mov
push
adc
fadd
inc
dec
les
fstp
mov
mov
jmp
std
mov
(bad)
mov
pop
das
out
push
out
jnp
std
ds
je
fadd
mov
adc
test
sub
pop
mul
cmp
jae
adc
push
or
cli
(bad)
ins
push
push
jle
inc
jl
inc
in
aad
ins
mov
je
mov
mov
dec
in
jl
and
pop
outs
cmp
and
sbb
fs
inc
stos
fmul
retf
fdivr
sbb
push
outs
push
ja
xchg
mov
mov
xchg
mov
enter
xlat
enter
dec
ret
xor
icebp
les
pop
dec
popa
mov
adc
push
push
xor
and
aas
inc
xor
es
repz
dec
adc
rcr
int
mov
jo
dec
pop
add
enter
sbb
lds
or
mov
dec
jnp
(bad)
int3
call
jmp
cmp
mov
dec
sbb
fistp
shl
and
adc
fwait
pop
fwait
jns
push
sti
(bad)
jmp
icebp
push
and
fwait
mov
mov
inc
sbb
pop
xor
sbb
jmp
mov
jg
int3
shr
mov
and
pop
dec
(bad)
mov
pop
repz
and
loope
loopne
mov
in
les
mov
outs
and
inc
enter
mov
dec
mov
mov
mov
jmp
sub
and
mov
adc
jnp
pop
or
std
pop
jnp
icebp
pop
jne
mov
mov
mov
hlt
push
sbb
adc
mov
lea
pop
(bad)
(bad)
cli
push
imul
mov
adc
push
push
fbstp
jle
pop
push
mov
and
cs
ds
add
add
cmps
cdq
cmp
popf
mov
push
cmp
cmp
test
mov
leave
ss
mov
push
int3
jmp
repnz
or
and
jnp
lods
ins
lahf
xchg
mov
es
jmp
jns
jge
cmps
sub
sahf
jecxz
add
adc
sub
dec
sub
pop
mov
repnz
xchg
enter
call
outs
mov
cmp
mov
push
fld
ret
pop
and
mov
inc
repz
mov
adc
dec
fstp
dec
aaa
aaa
shl
fs
fnstsw
sub
scas
lods
dec
xchg
add
cwde
or
(bad)
mov
mov
mov
fiadd
fnstenv
dec
add
scas
ins
jmp
or
sbb
sbb
push
sub
sub
int
or
nop
in
arpl
cli
stos
cmc
jmp
pop
cld
jnp
pop
sbb
pop
jecxz
jno
mov
lds
dec
sahf
push
or
inc
adc
fistp
fnstenv
addr16
push
push
mov
int
out
aam
out
rol
add
int
pop
das
fist
adc
adc
add
pop
shl
fimul
retf
daa
(bad)
or
mov
mov
xor
dec
push
stos
pop
jg
and
ja
pop
dec
mov
jmp
ret
inc
xlat
mov
jmp
shl
aam
ins
or
loopne
mov
in
ret
and
enter
xor
nop
xchg
dec
jg
inc
mov
or
xchg
inc
inc
sbb
aad
push
mov
mov
xchg
and
or
out
sbb
cs
(bad)
mov
std
shl
push
out
(bad)
push
inc
in
lea
mov
(bad)
imul
fs
test
in
fcom
sti
mov
inc
ins
rcr
mov
pop
inc
adc
outs
inc
and
cli
or
xor
mov
mov
xor
xor
ficomp
popa
cdq
sbb
scas
je
jae
push
not
movs
(bad)
mov
sub
push
out
fistp
pop
call
(bad)
in
pop
and
fwait
test
ret
addr16
gs
cmp
int3
mov
xchg
mov
leave
mov
out
inc
ja
cmp
scas
cmc
test
scas
mov
fsubr
iret
sub
push
popf
sub
sbb
dec
dec
or
scas
mov
fs
outs
enter
cmp
int
stos
xor
retf
mov
data16
into
call
in
cmp
retf
into
shr
mov
inc
push
mov
add
jne
(bad)
mov
iret
jbe
add
test
repz
out
dec
movmskps
pop
out
push
cmp
out
xchg
pop
dec
lahf
gs
push
out
cmps
repnz
or
iret
push
shr
jp
inc
lods
add
mov
mov
cmp
xchg
in
or
and
push
or
dec
fbstp
or
mov
mov
xor
ja
cmc
loopne
dec
test
mov
cs
xchg
bound
loop
retf
rcr
fs
sbb
ds
enter
aas
sbb
push
sub
jnp
push
mov
ds
gs
or
xor
clc
test
push
retf
xchg
rcl
test
js
or
ds
sbb
jg
xchg
test
mov
lahf
push
out
adc
stos
pop
retf
cmp
ret
ss
mov
das
add
adc
idiv
bts
lods
les
push
(bad)
ja
(bad)
dec
mov
mov
cli
xchg
xchg
sub
test
xchg
xchg
sub
ret
(bad)
popf
sub
sbb
inc
lods
cmp
daa
test
xchg
lea
adc
pop
jle
fst
popf
cmps
mov
(bad)
sahf
or
retf
mov
test
daa
dec
fadd
xchg
adc
push
xchg
cmp
hlt
mov
(bad)
sub
adc
push
jge
xchg
aaa
add
dec
retf
mov
jmp
sub
mov
jns
pop
test
adc
mov
inc
cmp
imul
mov
mov
xor
xlat
clc
scas
jp
sub
scas
ret
pusha
rcl
push
fldenv
add
call
es
lahf
mul
sbb
jl
or
out
outs
push
test
push
aad
mov
enter
or
sub
scas
mov
lahf
sbb
jmp
mov
pushf
mov
fcom
stos
jns
shl
shl
pop
leave
sbb
loop
cmp
sahf
call
in
in
jb
or
dec
scas
ror
sub
mov
fwait
adc
sub
mov
cmps
pop
adc
jle
jae
add
adc
fnstcw
(bad)
cmp
neg
inc
and
hlt
jae
cdq
push
int
and
stos
push
jo
in
pop
add
imul
dec
mov
jp
or
rol
lock
inc
sub
clc
out
and
iret
mov
repnz
mov
fst
cld
jmp
movs
push
mov
or
add
jo
sahf
sub
push
or
(bad)
leave
sub
sbb
jno
mov
or
lock
mov
pop
sti
ds
push
or
sbb
fstp
xchg
loop
mov
in
test
dec
test
repz
sahf
cmp
inc
arpl
test
pop
cli
push
nop
jo
sbb
js
fdivp
xor
icebp
mov
xchg
xor
jl
mov
sub
icebp
clc
or
aaa
jbe
sar
ds
xor
pusha
xor
push
cmp
mov
pop
stc
mov
ins
and
iret
sub
xor
lods
cmp
fimul
or
push
mov
ror
or
loop
sbb
mov
out
mov
jno
jl
push
push
or
jno
mov
dec
push
cpuid
xchg
repnz
rcl
fstp
(bad)
push
fisttp
and
xchg
push
ins
retf
mov
pop
sbb
cmp
pop
sub
shl
push
push
out
mov
or
push
push
or
add
sti
ss
cmp
dec
pushf
dec
loopne
(bad)
sub
pop
jbe
cmp
pushf
std
sbb
jb
lock
pop
sub
mov
imul
enter
out
xchg
scas
movs
enter
out
pushf
cmps
pop
popa
xor
addr16
cmps
aam
add
sbb
mov
dec
in
dec
sar
stos
cs
jne
gs
ror
inc
inc
or
sub
loope
sub
mov
and
in
and
(bad)
cmp
(bad)
and
fstp
dec
inc
ffree
push
test
lods
(bad)
les
clc
sbb
loopne
test
inc
aas
jbe
mov
outs
mov
add
adc
movs
jmp
pop
xchg
popa
mov
add
mov
mov
stos
mov
repnz
mov
(bad)
pop
movs
mov
nop
sbb
mov
push
test
mov
inc
push
and
loop
ins
xchg
jo
int
jle
push
(bad)
(bad)
mov
(bad)
push
or
int
xor
sar
sub
mov
mov
xlat
outs
leave
cmps
pop
xchg
mov
ds
xchg
jbe
dec
adc
stos
mov
or
outs
retf
pop
inc
fsubr
jmp
fcom
xchg
and
hlt
dec
sbb
xor
xor
into
pushf
in
leave
aad
add
mov
xchg
or
jns
(bad)
adc
mov
retf
fild
call
js
sbb
jbe
ror
jle
mov
push
xor
add
jnp
sub
and
xchg
and
test
sub
les
xor
retf
scas
inc
jecxz
pusha
nop
or
xchg
dec
aaa
fcomp
cdq
(bad)
xchg
gs
mov
mov
inc
add
psraw
mov
xchg
pop
mov
sbb
mov
xor
mov
sub
inc
sbb
add
in
in
test
movs
mov
addr16
sahf
sti
sbb
or
mov
sub
popf
xchg
cli
push
int3
push
ret
push
cmp
sbb
mul
and
pop
dec
push
jg
aam
add
xor
ins
xchg
dec
cmps
bound
es
ret
lds
jb
jecxz
das
adc
push
xor
iret
cmps
call
xor
leave
sub
xor
dec
sbb
outs
sbb
xlat
out
loopne
sbb
cs
fcom
(bad)
adc
mov
inc
fmul
pop
and
sub
dec
jmp
fld
and
sbb
mov
inc
push
mov
adc
sahf
scas
int3
or
add
lea
pop
inc
or
fsub
loope
lea
(bad)
xchg
pop
add
jmp
dec
or
clc
stos
ds
lods
push
ret
arpl
mov
test
add
in
xchg
or
and
mov
mov
out
iret
ins
imul
popa
(bad)
push
cmp
cmps
stos
imul
add
retf
mov
and
aam
and
add
mov
cmps
rol
sub
cmps
push
xchg
xchg
fisttp
(bad)
jmp
(bad)
xchg
or
popf
stos
push
retf
pop
movs
and
mov
(bad)
or
int
mov
add
nop
popf
dec
or
(bad)
jbe
mov
call
pop
push
ss
sub
cli
pop
mov
sbb
adc
mov
push
fld
push
lock
cmp
push
xchg
test
mov
out
aas
xchg
nop
push
push
cmps
call
(bad)
mov
and
cmp
cmp
add
repz
lahf
ins
push
stos
cmc
je
mov
cmps
ins
push
in
jne
fst
cli
enter
mov
gs
push
sub
push
(bad)
push
mov
call
shr
retf
scas
cmp
pushf
lods
dec
(bad)
inc
xor
jmp
xlat
popa
sub
int
mov
pop
loopne
mov
mov
dec
mov
mov
push
push
mov
cli
in
inc
jo
jns
sub
mov
leave
icebp
adc
push
(bad)
mov
add
repnz
inc
jle
mov
in
sbb
in
mov
inc
pop
in
popa
icebp
push
push
(bad)
inc
add
cmp
movs
adc
sub
mov
mov
fiadd
test
push
ret
loope
jb
imul
mov
(bad)
lahf
(bad)
das
dec
push
ds
sar
or
dec
xchg
cmp
mov
and
repz
push
in
je
sub
cmp
rol
les
fisubr
sar
or
jnp
sahf
pusha
fsub
loopne
sub
cmp
pop
jle
js
dec
in
aad
add
add
test
test
aad
sub
int
je
or
mov
xchg
jno
cmp
adc
fldenv
sub
jecxz
cmp
test
xor
(bad)
cli
(bad)
xchg
pop
mov
push
mov
mov
cdq
cmp
cs
pop
imul
lock
fcomp
jmp
dec
(bad)
xchg
(bad)
out
sub
pop
adc
mov
cs
and
test
push
je
xchg
mov
dec
cmps
xchg
cdq
cmp
mov
cmps
bound
jl
repnz
mov
loopne
sahf
loopne
sub
xchg
lahf
add
cmp
pop
jg
dec
xor
adc
jb
pop
xchg
loop
sub
xor
jae
retf
popf
mov
iret
in
push
outs
shl
addr16
rol
cmp
xor
jecxz
shl
sbb
add
mov
or
pop
lock
nop
sub
adc
ins
and
scas
aam
cmp
adc
(bad)
push
sub
arpl
stos
loop
push
call
and
dec
loopne
out
cli
dec
pop
mov
mov
repz
dec
lds
cld
stos
xchg
and
or
cwde
mov
clc
das
stc
and
dec
jb
mov
push
imul
out
mov
nop
cmp
sbb
pushf
xchg
pushf
in
mov
ret
loope
and
div
pop
jp
sub
dec
aaa
cmps
mov
or
call
dec
ror
nop
mov
cmp
jno
ins
or
clc
mov
and
add
aas
cdq
ss
jge
pusha
sahf
clc
in
cwde
test
push
adc
call
imul
mov
cmc
popf
mov
sbb
add
jge
icebp
cli
in
xor
add
xor
jle
lea
inc
icebp
jge
adc
neg
add
mov
pop
mov
test
pop
mov
lods
xchg
mov
fs
jecxz
imul
xchg
out
fistp
into
mov
sar
xor
int
arpl
sbb
cmp
pop
inc
int
xchg
mov
xor
movs
jo
mov
adc
pop
retf
xor
fsub
ins
fs
add
nop
dec
inc
push
repnz
rcl
ror
pop
push
pop
xchg
mov
mov
pushf
adc
cmp
repnz
inc
(bad)
scas
ins
mov
rcl
pop
dec
fistp
repnz
inc
out
adc
jne
xor
push
and
mov
lahf
xor
into
hlt
xchg
mov
pop
hlt
test
sbb
out
cmps
outs
aaa
cmp
in
(bad)
aas
jl
pop
cwde
mov
test
mov
xor
outs
mov
sbb
jb
dec
dec
(bad)
push
and
or
jae
sar
mov
test
test
(bad)
xchg
iret
lea
and
nop
test
mov
jnp
inc
push
scas
retf
scas
mov
and
pop
pop
inc
es
movs
and
iret
pushf
xchg
cmp
shl
stos
lods
jns
push
mov
push
inc
ror
sub
mov
mov
push
pop
push
sbb
add
xor
inc
cld
mov
jg
push
mov
imul
and
cmp
loop
and
add
dec
sub
loopne
stos
imul
push
aam
pause
push
xchg
mov
clc
fwait
and
outs
add
iret
lods
retf
cmp
mov
stc
and
dec
out
pop
stos
or
push
loope
in
push
sub
dec
or
xchg
push
fsub
ins
mov
mov
dec
xlat
outs
push
pop
mov
push
imul
iret
xchg
cli
ror
mov
retf
jp
call
cmp
sub
jb
mov
in
ins
jl
fdiv
adc
fwait
sub
mov
and
pop
fisttp
mov
popf
mov
xchg
jo
rcl
mov
jbe
jb
and
add
jae
add
xchg
lods
pop
fldenv
jbe
daa
(bad)
adc
and
mov
or
je
or
in
sbb
xchg
push
pop
push
ror
aad
xor
(bad)
or
inc
cmp
inc
jmp
les
jmp
add
test
fs
or
pop
repz
sbb
in
cld
test
call
sbb
ins
call
sti
lods
mov
mov
mov
fidiv
lods
inc
in
dec
(bad)
enter
dec
cdq
bound
mov
out
inc
inc
cmp
xchg
inc
xlat
ffree
xchg
outs
xor
and
movs
xchg
mov
iret
in
loopne
dec
psubsb
cld
iret
add
mov
ret
push
jecxz
je
cmp
dec
push
das
and
shl
call
cmp
and
mov
out
stos
fisubr
xchg
or
or
pop
cmp
clc
dec
or
pushf
mov
and
inc
mov
popa
add
mov
std
push
pop
mov
push
inc
mov
push
mov
mov
paddusw
sub
retf
inc
adc
dec
je
pusha
sar
or
iret
popa
int
in
aas
loop
icebp
mov
pop
xchg
(bad)
idiv
sub
sbb
lds
fidivr
mov
iret
push
mov
pop
dec
add
xor
bound
pushf
xchg
ror
daa
jbe
sahf
lods
bound
ds
jmp
enter
mov
in
fs
and
js
nop
and
add
ror
retf
xor
jle
cmc
and
and
inc
mov
sete
inc
imul
xchg
mov
sbb
jns
add
je
test
xor
dec
lahf
gs
mov
leave
neg
push
popa
xor
cmp
sbb
pop
xchg
sub
das
fnstenv
mov
movs
xor
and
mov
xor
fild
aas
sub
in
add
adc
add
mov
test
mov
lahf
inc
and
xlat
mov
pop
jge
lea
xor
inc
enter
xchg
aaa
cmp
iret
push
fs
mov
adc
fs
loopne
adc
or
aad
retf
pop
pop
jns
arpl
ret
ds
mov
jo
repz
pop
fisttp
cwde
(bad)
cmp
pop
push
pop
xchg
cmp
jne
mov
mov
xchg
outs
(bad)
add
add
cmc
or
ret
pusha
outs
dec
mov
push
sbb
mov
call
mov
in
loop
push
xor
jmp
retf
sub
ss
js
and
jle
into
fcomp
xor
or
push
out
jmp
(bad)
in
es
pop
cmp
retf
jmp
pop
repz
adc
int3
add
rcl
pusha
ret
cmp
out
xor
mov
arpl
pop
cdq
jecxz
add
push
hlt
aad
repnz
sbb
pop
pusha
inc
adc
out
hlt
hlt
ins
(bad)
aam
add
xor
aad
sbb
mov
and
adc
xlat
mov
cmps
xchg
pop
or
popa
and
pop
fst
xor
jge
into
sub
and
aas
test
pop
jne
iret
push
mov
sub
sar
test
movs
es
sti
test
aaa
aam
loop
lods
dec
test
ja
inc
mov
icebp
gs
test
sbb
int
xchg
sub
out
in
xor
push
sub
dec
add
enter
out
or
push
cld
cmc
bound
push
sub
into
inc
cdq
or
gs
pop
sbb
dec
pop
inc
mov
(bad)
in
pop
mov
push
push
mov
lods
jns
sbb
shr
pop
shl
(bad)
repz
sub
shr
das
ss
xor
stos
lds
ret
mov
push
sub
bound
popa
loopne
test
cmps
cmc
dec
call
mov
xor
icebp
add
js
shr
inc
sub
jne
add
and
into
call
push
int3
and
(bad)
pushf
and
clc
jmp
int
cs
pop
popa
mov
rcr
jo
addr16
vaddpd
loopne
push
jbe
jbe
ja
pusha
sub
cmp
mov
(bad)
and
dec
in
jle
sbb
outs
dec
(bad)
cli
sub
mov
ror
mov
bound
jmp
mov
mov
add
repz
and
dec
xor
jo
sub
push
(bad)
aas
jmp
(bad)
sub
ret
jecxz
xor
push
movs
(bad)
loope
push
mov
ds
shr
addr16
dec
add
sub
shl
out
test
shl
mov
inc
push
adc
scas
cmp
stos
cli
dec
sbb
sub
dec
test
daa
sbb
or
sbb
dec
aaa
lahf
icebp
sub
pop
xor
and
cwde
cmp
inc
pop
lock
pop
retf
stos
xchg
inc
(bad)
loop
or
(bad)
lods
dec
xor
add
dec
shr
int
adc
in
call
mov
setg
addr16
idiv
ins
imul
cmp
mov
mov
not
test
jg
adc
xor
jecxz
aaa
cmp
dec
xor
mov
inc
push
mov
inc
mov
or
pop
xchg
inc
aas
lahf
jo
jmp
xchg
daa
cld
bound
xor
bswap
(bad)
pop
xor
(bad)
dec
data16
jno
retf
lock
popa
or
sbb
gs
test
sub
jne
cmp
fwait
pop
pop
xchg
aam
dec
jns
ss
cmp
int3
outs
adc
jp
in
xchg
push
push
jp
pop
loopne
sub
(bad)
out
pop
leave
(bad)
mov
pop
mov
je
shl
bound
and
in
mov
cdq
in
fnclex
pushf
aad
dec
daa
mov
xchg
test
bound
shl
cmp
(bad)
and
cmp
pop
jp
int3
icebp
prefetcht2
push
call
or
(bad)
iret
inc
data16
xchg
adc
add
or
fs
pushf
sub
mov
(bad)
mov
push
idiv
adc
and
out
ss
shr
jbe
repz
or
dec
repnz
movs
fbstp
push
ins
dec
mul
push
shr
bnd
mov
pop
jg
pop
push
adc
jbe
ins
mov
xor
shr
iret
adc
int
pop
inc
dec
push
mov
push
adc
xchg
add
sub
rcr
aam
daa
push
pop
in
bound
mov
fisubr
add
or
jmp
lods
call
stc
push
ret
mov
or
data16
lea
mov
pop
cwde
mov
pop
add
fnstsw
xchg
jmp
jmp
scas
mov
pop
bound
inc
sub
inc
mov
sbb
out
std
call
into
mov
push
ret
sub
outs
mov
xchg
outs
lahf
(bad)
xor
scas
test
int3
loopne
add
push
cld
pop
lods
mov
popa
jg
mov
iret
icebp
retf
mov
lods
repz
test
test
and
xor
adc
push
scas
jg
int3
cli
leave
or
jmp
repnz
movs
test
test
fistp
loop
mov
push
lea
rcr
jnp
xlat
xchg
repz
push
fadd
cmp
add
dec
lods
adc
sbb
dec
nop
xchg
inc
mov
popa
ficom
(bad)
clc
dec
rcl
adc
stos
mov
in
sub
jae
xchg
mov
push
retf
loope
and
jne
lods
sbb
jne
sub
fs
adc
jmp
test
xor
fcomp
mov
sbb
jmp
adc
mov
pop
jno
pop
(bad)
ins
cld
(bad)
sti
pop
xchg
rcr
push
jle
adc
jno
sbb
inc
cmp
inc
into
pop
pop
xchg
repnz
or
(bad)
or
sub
dec
push
data16
inc
sti
pusha
enter
xchg
sti
or
mov
call
sahf
add
jmp
mov
daa
retf
and
push
push
push
sbb
mov
outs
push
fs
repz
inc
xor
movs
mov
ficom
mov
retf
not
repnz
and
retf
movs
das
push
call
jge
and
enter
pop
je
cmps
test
repz
test
cmc
mov
sbb
ja
sar
inc
(bad)
sub
mov
xchg
jge
mov
inc
sahf
sub
int3
and
mov
shl
test
adc
and
sti
enter
test
test
arpl
adc
sahf
or
mov
and
push
jle
inc
movs
cmps
ss
jns
jns
pop
jnp
dec
arpl
(bad)
inc
cmps
in
mov
test
xchg
jnp
and
xchg
fist
lods
jb
xchg
inc
and
push
or
(bad)
pop
js
imul
scas
xchg
punpcklbw
enter
shl
push
or
std
mov
mov
test
inc
dec
aam
jl
pop
xchg
(bad)
xchg
dec
std
fdivr
js
jmp
fisub
stos
add
je
jl
mov
mov
icebp
mov
jl
leave
inc
push
add
cmp
cmp
cli
sbb
xor
and
or
add
call
dec
mov
jg
cmps
pop
mov
xchg
mov
lea
and
mov
pop
inc
pop
out
imul
push
xchg
pop
adc
sub
xchg
out
pop
adc
adc
xchg
fist
mov
xor
jecxz
cmp
in
sti
movs
test
dec
xor
mov
mov
mov
mov
(bad)
jmp
fcom
or
cs
scas
push
dec
add
aam
not
xchg
lods
and
inc
sar
push
aaa
mov
aas
out
movs
xor
adc
lea
ja
jmp
int
mov
shl
add
scas
xchg
dec
cwde
push
xchg
push
popa
or
jns
(bad)
sub
int
dec
sti
test
movs
ja
ins
jecxz
aad
mov
fwait
sar
xchg
pop
cli
adc
cmp
jmp
push
xor
(bad)
jns
push
xor
jo
mov
push
test
push
adc
outs
push
retf
sbb
out
repz
cmps
gs
test
inc
xchg
sub
xor
js
jmp
inc
push
not
ficomp
cmp
(bad)
xchg
dec
adc
mov
daa
jns
cmp
stc
add
xchg
into
pop
test
bound
mov
test
sub
and
xor
mov
pushf
popa
push
shr
stos
or
lock
jecxz
fwait
jno
mov
fs
xchg
xchg
jbe
jno
inc
add
int
add
inc
fs
sbb
mov
mov
pushf
mov
fild
or
pop
and
cmp
js
outs
add
inc
adc
adc
inc
repnz
stos
mov
aas
xchg
adc
adc
or
sbb
mov
retf
in
cmp
mov
push
test
(bad)
sub
arpl
jae
out
pop
xchg
mov
mov
repnz
jl
cmp
aad
adc
cmps
ds
mov
cwde
pop
les
idiv
movs
les
xor
outs
(bad)
sbb
and
inc
ins
stc
xor
loop
adc
pop
jecxz
push
and
xor
mov
(bad)
mov
sub
sbb
xor
out
aas
push
cmp
sbb
lods
cs
cmp
in
pop
jns
mov
test
je
ja
cmps
pop
mov
popa
sbb
push
scas
mov
inc
mov
cwde
sbb
jbe
mov
and
imul
mov
or
nop
imul
int
pop
adc
test
cmp
out
ficom
push
lods
cmp
jne
aas
sbb
mov
shl
xchg
fnsave
sub
jnp
or
clc
add
int3
xchg
pop
sbb
sub
mov
cli
int3
and
jp
neg
out
fs
addr16
push
and
lock
sbb
sar
repz
sbb
cmp
add
sub
xchg
xchg
dec
arpl
push
ins
mov
mov
cmp
sub
lods
shl
aaa
bnd
mov
ds
jnp
pop
popa
jb
prefetcht2
add
and
enter
or
js
push
leave
iret
mov
xor
mov
xor
aaa
popa
cwde
cs
jge
or
or
xor
dec
or
mov
popf
cli
lahf
dec
pop
sub
loop
aas
mov
movs
retf
xchg
mov
jnp
stos
mov
gs
shr
push
pop
dec
jbe
mov
imul
xor
in
out
icebp
ja
jo
dec
add
repnz
and
lods
pop
push
push
mov
jmp
or
ins
std
inc
jbe
mov
or
cmp
mov
stc
dec
or
and
mov
adc
mov
mov
jl
jmp
mov
test
mov
loopne
imul
push
push
xchg
int
add
mov
rcr
sbb
jo
inc
xchg
test
dec
mov
xor
paddsb
sub
jle
ret
xor
mov
jl
dec
loope
pop
or
(bad)
sbb
and
mov
in
js
movs
jl
std
adc
adc
xor
data16
xchg
ins
shr
adc
les
sbb
into
nop
iret
dec
jnp
pop
in
xchg
gs
retf
push
lods
jo
test
push
popa
and
cdq
push
sub
mov
push
inc
xor
adc
inc
jo
enter
int3
fiadd
rol
sar
xchg
xchg
shr
out
test
or
mov
outs
sub
test
out
sub
xchg
rcr
lds
cdq
clc
and
push
out
mov
xchg
xchg
(bad)
into
push
lods
or
repz
cmp
shl
icebp
xor
jae
pop
aas
loop
hlt
outs
dec
mov
arpl
pusha
out
popf
mov
cmp
xor
push
int
and
pop
sub
arpl
imul
mov
adc
(bad)
jae
adc
sbb
or
ds
shl
push
sub
loope
fcom
or
jmp
mov
retf
loop
fwait
add
aam
in
sub
gs
xchg
add
imul
enter
cmp
ds
fwait
out
loop
mov
(bad)
aad
movs
jmp
sub
push
add
ss
int
and
mov
jecxz
sub
xchg
stos
mov
ins
cmp
(bad)
ins
in
xor
stos
das
xor
pop
bound
icebp
into
cmp
sbb
inc
outs
(bad)
int3
and
mov
in
hlt
add
or
inc
cli
dec
(bad)
inc
inc
xor
inc
xchg
out
ror
das
sti
and
(bad)
adc
fdiv
lods
dec
stos
sar
push
xchg
je
les
adc
ins
outs
test
fild
jmp
aam
mov
sub
iret
add
stc
inc
xor
mov
jp
out
syscall
jl
aaa
pop
out
inc
and
mov
inc
aad
pop
cmp
loopne
dec
outs
fbld
mov
fidivr
xor
or
inc
pop
retf
xchg
and
out
jmp
xchg
fstp
pop
stos
and
cld
jne
stos
jne
sub
fldcw
mov
pusha
mov
add
push
sub
shl
mov
cmp
sub
out
and
sahf
cmp
mov
bnd
or
out
popf
aas
cld
cmp
lahf
mov
jo
push
iret
or
scas
imul
out
adc
dec
mov
jo
sti
dec
sbb
jnp
jno
ins
dec
out
inc
out
ret
sbb
cwde
pop
push
push
pop
jnp
scas
push
lods
sbb
lock
or
and
xor
adc
mov
or
mov
sub
push
out
mov
shl
and
jle
add
je
call
sub
inc
(bad)
push
cld
ss
xchg
imul
rcr
stos
xchg
stos
pop
xchg
pop
jb
js
sub
inc
cld
je
outs
xor
aad
add
cmp
arpl
int3
jmp
cmp
xchg
push
mov
pop
mov
pop
jbe
loope
push
sub
cld
inc
mov
jmp
jmp
out
cld
push
push
sbb
in
inc
popa
adc
sbb
xor
aas
enter
and
xor
repnz
or
push
or
jge
hlt
cdq
pop
adc
mov
jg
or
push
xlat
fisttp
mov
dec
pop
in
retf
xchg
cli
add
arpl
leave
ins
or
pop
and
ja
mov
push
mov
mov
test
add
push
ret
(bad)
xchg
in
es
fld
adc
popa
icebp
cmp
aam
sti
mov
ror
imul
push
inc
outs
cmps
out
or
and
push
stos
xchg
xchg
add
cli
push
das
retf
adc
shl
(bad)
dec
push
loop
push
sub
mov
cli
mov
rol
(bad)
sbb
xchg
clc
and
rol
popf
pop
jmp
or
rcl
cdq
pushf
xchg
pop
mov
lods
and
push
xor
pop
lods
outs
mov
push
mov
test
and
or
retf
stos
push
loopne
add
inc
sbb
jmp
call
jecxz
sub
push
mov
cmps
in
outs
pop
test
data16
mov
test
push
or
mov
and
hlt
sbb
cmps
aad
icebp
jae
fldcw
(bad)
jecxz
ins
push
lods
jecxz
cmp
adc
ja
xor
sbb
jmp
gs
pop
xor
lahf
shr
jno
inc
aad
jne
mov
fwait
add
je
cmps
adc
push
adc
dec
ret
cmp
jecxz
imul
movs
les
xchg
arpl
in
shr
in
pop
dec
or
popa
test
pop
mov
xchg
call
ins
cmps
mov
add
stc
mov
pop
dec
push
jge
scas
xlat
mov
inc
sub
mulps
add
ds
mov
mov
xchg
ud0
jmp
gs
aad
ds
shl
pop
xchg
mov
push
arpl
jmp
push
inc
aas
cmps
ror
mov
stc
push
push
adc
retf
mov
inc
enter
pop
push
loope
adc
out
std
lods
mov
arpl
jae
std
test
adc
arpl
push
or
scas
pop
dec
or
sbb
dec
sbb
test
xor
nop
rol
pop
sbb
mov
mov
dec
inc
cmp
out
jbe
repnz
popa
call
push
imul
jnp
jbe
pop
icebp
sbb
mov
push
nop
cmps
mov
fcmovnu
lahf
and
and
jp
cmps
shl
push
std
retf
inc
in
mov
shr
in
std
mov
aaa
adc
ja
retf
and
scas
aas
test
mov
dec
rcr
cmp
lock
lahf
jo
or
ins
pop
dec
adc
xor
mov
addr16
xor
repz
inc
xchg
ret
sbb
cmp
jmp
inc
scas
loop
sbb
inc
add
pop
push
loop
scas
out
sub
sbb
(bad)
scas
dec
jecxz
jle
cmp
add
lea
clc
pusha
int3
test
ror
xor
push
test
xor
stos
outs
push
inc
sbb
mov
xchg
(bad)
ds
jbe
ja
push
bound
jg
addr16
loopne
adc
adc
mov
movs
lea
push
push
cli
jg
jbe
xor
jle
rcr
scas
or
mov
push
cmp
mov
cmp
push
iret
test
ins
cdq
(bad)
and
jo
sub
ds
mov
je
je
cmp
std
cmps
loop
bound
inc
fld
mov
retf
test
popa
xchg
test
lds
aas
jmp
sar
leave
shl
pop
mov
dec
mov
dec
mov
inc
imul
sub
test
shl
inc
sbb
in
movs
pop
fst
push
call
cmp
xor
or
sub
cmps
or
out
push
jp
clc
outs
mov
cmp
sbb
jno
or
add
imul
inc
push
les
movs
push
stos
fcmovnu
or
sub
sbb
cmp
mov
jl
hlt
cmc
(bad)
loop
jno
nop
dec
int
adc
ret
pusha
mov
mov
mov
imul
aas
mov
dec
or
or
jns
push
iret
inc
in
pop
cld
out
mov
cmp
lock
and
or
xchg
aam
pop
data16
(bad)
leave
ret
(bad)
imul
inc
ins
inc
iret
push
cmc
fadd
push
or
add
push
in
jle
xchg
sbb
add
pop
mov
xchg
data16
push
fsubr
sahf
stos
xlat
ins
setae
lds
not
sti
outs
pop
aas
mov
cmc
lds
and
push
cmp
fs
sbb
into
dec
call
xlat
mov
(bad)
mov
sbb
dec
(bad)
fnstcw
xchg
(bad)
and
or
adc
or
jo
in
sahf
and
jl
sub
movntq
out
xchg
or
aad
cwde
mov
outs
dec
bound
and
or
imul
idiv
and
push
pop
jbe
ds
scas
test
jns
les
or
ins
push
fidivr
xor
and
push
icebp
push
adc
cmc
and
lods
cdq
jle
push
cmp
dec
cmc
adc
or
int
imul
xchg
cmc
loope
jmp
mov
sub
(bad)
adc
mov
mov
adc
push
iret
push
fldcw
int3
mov
aad
and
inc
loope
and
mov
(bad)
jno
inc
ss
idiv
cmp
cmp
pop
daa
movs
xor
mov
inc
jae
call
data16
jecxz
adc
(bad)
add
fmul
lds
fsubr
int
dec
mov
cmp
mov
enter
jle
add
setle
mov
pop
pop
mov
nop
dec
adc
pop
movs
dec
xor
ret
push
pop
push
js
or
pop
pop
stos
cld
loope
addr16
and
inc
test
mov
xor
icebp
cdq
daa
add
outs
inc
mov
imul
sahf
adc
jle
aam
or
jns
mov
ret
nop
adc
scas
out
stos
add
sbb
sbb
and
jmp
jmp
or
imul
inc
mov
cmp
xor
loope
sahf
xor
test
xlat
and
ds
ja
test
movs
outs
cmps
mov
jbe
adc
iret
dec
mov
sub
jge
dec
out
push
add
push
test
push
stc
add
in
inc
jge
pop
jb
push
adc
mov
sub
fisttp
mov
sub
push
and
or
pop
daa
xchg
daa
pop
inc
(bad)
mov
jae
inc
out
cdq
and
push
inc
adc
pop
clc
loop
lock
mov
jle
pop
add
int
iret
mov
sub
mov
and
mov
cmp
int
mov
xchg
inc
loope
fs
cmp
ins
and
add
pop
scas
pop
loopne
fsubr
cmc
mov
pop
mov
fwait
(bad)
fisubr
lahf
es
mov
ret
ret
adc
or
sbb
push
aam
(bad)
fldenv
or
adc
imul
pop
adc
dec
int
test
push
push
mov
sub
push
adc
std
inc
add
test
pop
cli
mov
push
arpl
pop
call
mov
jge
xchg
sub
jne
ret
dec
std
call
jnp
out
loop
mov
xor
cmp
adc
sbb
jbe
sti
out
mov
mov
push
leave
xchg
sbb
(bad)
jle
sub
rcr
das
retf
shl
sti
push
mov
retf
js
dec
push
clc
xor
shl
pushf
dec
(bad)
and
ja
stos
loopne
mov
in
inc
push
dec
jle
scas
fsub
neg
int3
dec
xchg
cmps
pop
xchg
xor
adc
leave
(bad)
sub
scas
xchg
and
stos
rcr
inc
retf
and
mov
dec
pop
js
jmp
sub
push
jb
or
and
imul
jb
inc
movs
std
pop
shl
rdmsr
jnp
mov
cmc
repz
int3
jle
imul
jae
mov
sar
not
stos
sub
cs
pop
mov
pop
imul
cmp
pop
sub
mov
push
sub
movs
mov
shr
push
dec
inc
retf
bound
inc
cmovle
pop
and
mov
pop
dec
les
out
(bad)
std
jge
cmc
fwait
sub
jmp
mov
fsubr
in
pop
and
xor
mov
(bad)
sub
stos
jns
(bad)
call
cmc
xor
popf
add
outs
xor
cmps
fwait
loop
and
add
out
jb
jge
xchg
adc
sbb
addr16
out
xchg
xchg
nop
push
dec
dec
retf
rcl
cmp
and
(bad)
cld
or
mov
mov
out
and
pop
mov
inc
push
mov
sbb
int
lods
and
mov
ins
icebp
xlat
or
mov
mov
or
jge
out
inc
loope
nop
and
and
inc
cmp
movs
xchg
add
pop
cmp
jb
xor
or
pop
adc
xchg
cmp
cmps
pop
adc
and
or
clc
ins
pop
jo
stos
sbb
mov
sub
mov
out
inc
mov
push
ret
mov
jns
sti
add
leave
push
ins
fmul
sub
sti
xor
jo
add
les
inc
ins
or
inc
cld
jp
push
jle
or
mov
out
hlt
cli
imul
inc
imul
sbb
cmp
fbld
addr16
mov
stc
adc
popa
adc
mov
and
in
jo
(bad)
cmp
(bad)
retf
sub
jge
popf
mov
adc
mov
inc
jmp
or
loope
sub
sub
adc
jnp
out
pop
leave
jecxz
retf
add
add
sbb
inc
sti
das
scas
jmp
and
sub
xor
mov
inc
dec
jle
aam
outs
imul
jge
fistp
pop
mov
push
or
push
inc
nop
sti
outs
xchg
inc
xor
push
inc
or
dec
adc
movs
outs
mov
dec
jge
in
(bad)
sti
retf
add
test
(bad)
icebp
test
mov
cmp
pop
jae
or
int3
inc
dec
pop
push
fdiv
cmp
dec
cmp
in
loopne
adc
aam
(bad)
ds
xor
cmp
call
call
jecxz
or
out
ss
mov
sar
inc
cmp
pop
(bad)
mov
pop
dec
jo
push
mov
jo
pop
in
inc
xlat
in
jb
das
add
int3
cmp
test
in
test
fdivr
enter
mov
inc
aas
add
xlat
icebp
pop
mov
retf
cdq
imul
bound
int
add
inc
call
sbb
aam
out
xor
out
sub
in
sbb
les
xor
test
sti
popw
data16
or
xor
jae
ret
adc
test
inc
mov
les
or
dec
jmp
clc
cs
std
(bad)
repnz
pop
jle
inc
dec
cmc
or
fld
mov
call
out
sti
jecxz
mov
pop
cmp
loope
or
add
loopne
xchg
mov
scas
jl
scas
lods
jle
push
cmp
inc
bts
call
mov
dec
push
push
movs
(bad)
and
test
sub
stos
cmp
(bad)
fdiv
mov
add
adc
pmullw
outs
push
inc
(bad)
xlat
or
std
(bad)
out
scas
or
adc
sub
inc
enter
cmp
mov
inc
cwde
clc
jecxz
and
iret
jbe
test
inc
dec
js
ss
or
(bad)
int3
mov
test
sbb
or
test
jo
lock
and
(bad)
jmp
mov
cmp
adc
sbb
add
test
mov
rol
pop
dec
and
pop
call
ret
imul
inc
sbb
lahf
stc
(bad)
mov
sub
dec
call
push
or
icebp
cmps
cmps
data16
aam
fnstcw
pop
sub
popa
and
push
jae
and
add
push
mov
push
push
aam
xchg
push
cmp
rol
push
(bad)
retf
out
fst
(bad)
aam
jno
lock
pop
lea
adc
inc
lods
mov
int3
daa
ins
xchg
xchg
fisttp
sbb
push
mov
sti
jge
push
dec
or
xchg
add
push
mov
and
mov
jecxz
in
mov
mov
push
arpl
mov
hlt
fwait
jmp
xchg
dec
jmp
and
cmp
fs
add
mov
ds
mov
mov
ret
out
sub
sub
int3
mov
inc
fisubr
mov
aam
or
add
inc
xchg
lahf
mov
cwde
mov
push
es
pop
xor
rcr
call
sbb
leave
aad
add
mov
or
mov
or
sbb
xchg
xchg
push
dec
enter
cmp
(bad)
aam
movs
scas
ins
jne
pop
sub
pop
sar
leave
dec
inc
div
nop
pop
push
cmp
xchg
sub
ror
outs
adc
inc
sbb
int3
xor
lods
fdiv
mov
xchg
shr
adc
inc
scas
das
adc
stc
cdq
push
fcmovb
stos
stos
xchg
stos
jge
arpl
cli
cli
jg
add
inc
dec
cld
mov
daa
iret
iret
and
stos
call
test
mov
repz
xor
cmp
cdq
cmp
push
mov
xor
(bad)
call
jmp
mov
fs
or
sbb
cmp
or
call
push
push
cmp
push
xchg
jno
mov
add
loop
cmp
xchg
jp
hlt
lahf
dec
arpl
mov
scas
push
bound
xor
cmp
sbb
ficom
in
lds
pushf
xchg
xor
xlat
scas
mov
popf
sbb
jmp
bound
clc
leave
cmp
ffree
sub
lahf
mov
jle
bound
jge
outs
cs
adc
cmc
pusha
sbb
cwde
shl
fld
mov
out
xchg
scas
test
cmp
cmc
inc
jno
mov
fcom
fdiv
outs
(bad)
sbb
jp
rol
xor
inc
xor
(bad)
cld
movs
ret
fmul
lds
xor
push
mov
jmp
xchg
sub
push
test
pop
sbb
pop
cmps
enter
mov
arpl
(bad)
sti
sub
loopne
inc
xor
stc
fs
or
sub
push
not
cmp
test
cwde
fist
enter
aas
ret
jp
cmp
(bad)
in
retf
loopne
lds
jl
(bad)
mov
push
jbe
inc
mov
xor
dec
cmps
xor
xor
div
push
shl
push
push
dec
jmp
mov
or
test
and
cmps
test
ret
add
mov
inc
sbb
push
test
or
loopne
les
in
frstor
arpl
push
aas
xchg
pop
scas
(bad)
out
test
xchg
mov
dec
cld
or
jae
fidivr
cmp
add
stc
test
mov
mov
jo
fstp
or
shr
in
push
pop
fucom
mov
je
aad
mov
test
mov
xchg
scas
inc
int
fs
clc
call
mov
les
hlt
test
fdiv
ret
repz
iret
xor
mov
push
push
push
stc
outs
cmp
adc
pop
cmp
cmp
cmc
ja
aad
dec
xchg
(bad)
ret
dec
cmc
and
imul
push
cmp
adc
xor
sar
lock
fisub
xchg
imul
call
(bad)
les
ret
push
jmp
sub
jno
xor
imul
fisubr
call
mov
add
sbb
dec
test
mov
imul
pop
call
sub
inc
jo
gs
sbb
lods
inc
push
pop
pusha
mov
mov
addr16
sbb
out
mov
jne
loop
mov
cdq
(bad)
adc
loopne
adc
outs
cmp
and
std
(bad)
enter
push
or
icebp
push
or
or
or
jae
lahf
mov
push
mov
sub
jo
rol
fistp
add
data16
cmps
dec
call
leave
sti
mov
out
ret
fisttp
cli
pop
sub
push
or
and
(bad)
or
scas
test
push
jmp
pop
addr16
jne
mov
loopne
or
xor
jo
stos
or
cld
sbb
inc
add
push
std
data16
cwde
sub
(bad)
or
and
jg
jge
cmp
sbb
faddp
shl
in
fisubr
outs
jns
out
xor
stc
jnp
scas
and
adc
ins
cmp
dec
mov
ret
in
pop
ret
dec
or
out
aaa
(bad)
scas
and
and
mov
fsubr
iret
fsub
cwde
add
jmp
cdq
mov
cld
pop
pop
xchg
jb
ins
retf
xor
sub
xchg
jbe
scas
jg
push
lock
in
sbb
mov
inc
or
sub
mov
test
lods
popf
(bad)
fld
out
cs
mov
cli
dec
fisttp
jmp
adc
mov
pop
or
mov
dec
popf
divps
aas
dec
mov
xor
fdivr
out
jno
push
inc
mov
bound
loope
into
hlt
movs
aaa
jmp
push
mov
clc
imul
and
cld
fwait
jge
push
push
fidivr
hlt
push
xchg
mov
cmp
dec
loop
mov
stc
jno
and
push
ins
inc
(bad)
(bad)
ret
sbb
outs
jnp
sbb
sbb
mov
xchg
adc
iret
sbb
or
ret
neg
xchg
sub
idiv
out
add
mov
cli
lahf
iret
fdivrp
repnz
adc
jne
jae
rcl
cs
int3
loope
cmps
push
sbb
sub
jg
mov
dec
mov
bound
pop
test
push
mov
rcr
dec
imul
sub
loope
inc
stos
xchg
aad
and
in
mov
xchg
mov
test
pop
jns
jecxz
mov
push
cld
xchg
dec
shl
sbb
jl
mov
jge
xor
mov
das
xchg
sahf
push
iret
rcl
fiadd
stos
fdivr
cmp
add
cmp
sbb
inc
inc
push
lea
adc
sub
lods
ins
bound
(bad)
scas
and
test
push
mov
push
js
mov
mov
pop
mov
or
test
rcr
out
push
lea
repnz
inc
cwde
cmp
out
in
lods
sti
les
or
add
cld
or
sub
pop
int3
idiv
ror
xor
cmp
cmc
test
xor
sbb
fisub
lock
cli
cmp
movs
sbb
or
addr16
mov
arpl
retf
and
and
dec
repnz
inc
add
mov
icebp
fst
mov
mov
or
and
mov
hlt
js
daa
lea
into
leave
jl
push
xor
xor
sbb
lahf
jge
lods
jbe
js
fstp
jo
int3
fs
push
and
not
or
xor
dec
pop
sub
cmp
pop
icebp
jp
and
jae
add
sar
push
scas
add
icebp
in
enter
shl
int
ret
cmp
std
mov
mov
push
cmp
in
mov
icebp
movs
cmps
mov
add
or
and
rcr
or
leave
xor
sub
and
fild
xchg
adc
stos
ja
xchg
mov
xchg
stos
stos
inc
pop
push
stos
pushf
mov
sbb
clc
pop
mov
pusha
lds
jg
rcr
mov
leave
stos
push
int
ds
mov
mov
(bad)
gs
in
mov
clc
pusha
cmps
mov
push
or
inc
jmp
mov
push
in
and
inc
call
sbb
jmp
lods
or
and
daa
popf
jmp
fistp
xor
cmp
gs
bound
inc
jnp
(bad)
bound
lock
rcr
push
sub
ss
shl
add
xchg
sbb
xchg
mov
inc
inc
xor
movs
rcr
in
cmp
push
aaa
cmps
xchg
cmps
ficomp
xchg
lods
dec
mov
push
(bad)
je
pop
loopne
(bad)
sub
adc
pusha
mov
je
xchg
and
cmc
not
jne
int3
retf
sbb
call
xchg
ret
mov
sar
push
rol
cmp
stos
mov
or
or
std
push
das
aas
pop
push
lahf
out
icebp
mov
rol
xchg
adc
push
inc
dec
add
mov
data16
xchg
xor
xor
jnp
inc
or
xor
daa
add
ret
into
shl
jl
jmp
adc
dec
(bad)
push
cmc
adc
inc
add
pop
aaa
push
(bad)
pop
jl
clc
add
push
cmp
mov
shl
push
jo
aam
fwait
mov
dec
fcmovnb
push
cs
sbb
icebp
push
sub
shr
mov
xor
fidiv
(bad)
repnz
call
shl
mov
or
jae
test
je
shl
adc
cmp
xchg
pop
ret
ss
or
repnz
xor
scas
repnz
xlat
pop
test
vrsqrtss
hlt
mov
retf
int3
repnz
jp
fidivr
inc
sub
imul
movs
pusha
pop
push
dec
dec
mov
outs
call
push
xchg
int
pop
fidiv
rol
aam
add
add
fisttp
add
imul
push
popf
ss
inc
clc
rcl
and
(bad)
ss
mov
inc
fmul
dec
hlt
pop
ret
mov
popa
xlat
pop
(bad)
fidivr
js
xor
adc
adc
idiv
mov
addr16
add
add
icebp
test
jmp
pop
pusha
ins
pop
jno
sbb
jge
xor
and
dec
cmp
pop
fimul
mov
mov
cmc
ins
pop
jmp
cwde
das
lahf
or
or
sbb
add
xchg
sbb
nop
fisub
pop
dec
xchg
fstp
int3
mov
mov
pop
fldcw
mov
xchg
mov
cmp
inc
adc
pop
pop
pop
rol
cmps
sbb
adc
add
test
inc
jle
xchg
fdivr
cmp
xlat
fimul
lea
fisub
out
iret
inc
mov
leave
push
jle
jne
sbb
adc
mov
in
mov
push
je
cli
shr
xchg
lds
sbb
arpl
push
call
daa
dec
daa
retf
sbb
sub
mul
xor
pop
sbb
mov
scas
test
cmps
repnz
and
leave
hlt
or
mov
(bad)
daa
scas
push
call
jno
mov
pusha
pop
sbb
jb
addr16
push
and
leave
xor
clc
loopne
retf
jb
sub
and
cmp
xor
sub
sbb
ret
int3
push
xor
rcr
movs
inc
not
jg
or
mov
xor
outs
jo
stc
loope
xchg
ds
sti
nop
fwait
test
loopne
idiv
bswap
fstp
mov
jnp
sub
mov
clc
jge
jne
dec
or
push
xor
inc
call
daa
sbb
and
nop
aam
sbb
xchg
push
push
mov
add
add
fnstsw
jmp
mov
jno
mov
ficomp
test
dec
gs
ds
mov
sbb
imul
retf
(bad)
int3
or
xchg
mov
popf
popa
cdq
add
pop
out
in
inc
push
icebp
das
data16
cld
sbb
sbb
xchg
lods
xchg
xor
loop
or
(bad)
std
out
inc
sub
(bad)
cmp
mov
sub
push
cdq
pop
or
sbb
clc
mov
in
xchg
arpl
pop
jg
cwde
sub
and
stos
fsub
pop
mov
mov
push
fdivr
imul
mov
pop
cmp
sbb
push
mov
add
xchg
es
inc
ins
inc
pop
into
fcmovb
adc
mov
xlat
xor
pop
pop
mov
shr
dec
jne
or
add
imul
or
(bad)
xor
mov
cmp
lods
jg
hlt
in
(bad)
push
mov
fxch
inc
rcl
(bad)
sar
inc
mov
jge
or
fcomip
movs
retf
mov
cs
cli
adc
sbb
push
mov
jne
jl
sti
ja
jne
loopne
leave
mov
into
stos
dec
sub
cmp
sbb
sub
or
mov
add
inc
out
mov
iret
fldcw
iret
enter
xchg
pop
inc
mov
fnstenv
sub
jo
leave
jp
ins
aam
neg
sub
dec
push
mov
push
inc
lods
mov
and
hlt
xor
cli
jns
mov
mov
lds
jno
dec
shl
or
clc
xor
ja
mov
and
out
xchg
les
push
and
cmps
gs
xor
mov
or
and
fs
inc
fsubr
arpl
(bad)
mov
dec
xchg
xchg
adc
pusha
(bad)
repnz
cmp
test
scas
sbb
neg
sbb
aaa
test
pusha
jg
sbb
sub
jbe
jae
mov
ror
jmp
adc
pop
loopne
adc
adc
xlat
je
int
xor
js
frstor
(bad)
xor
out
inc
cmp
lods
cmp
sbb
movq
push
movups
cs
xchg
daa
cmp
xchg
mov
dec
xor
fldcw
inc
xlat
push
push
pop
jno
into
sub
push
or
add
and
cdq
int3
xchg
push
cmp
add
xchg
ja
lods
and
test
cmp
jb
or
mov
xchg
movs
imul
and
stos
into
pop
movs
and
pop
jmp
adc
jge
inc
sub
iret
mov
push
or
loopne
sti
add
or
lods
pop
fldenv
stos
rcl
xchg
or
hlt
mov
lock
stos
dec
int3
cmp
mov
xor
cwde
mov
inc
or
jbe
ret
cli
cmps
adc
push
xchg
lock
ds
mov
test
sub
cmp
push
add
mov
xor
stos
fnstsw
sub
mov
out
adc
and
jae
daa
popf
jmp
push
outs
add
xchg
mov
into
stos
add
adc
inc
pop
outs
cpuid
pop
pop
sub
sti
push
sub
lods
in
and
out
sub
hlt
fistp
pop
jmp
pop
pop
jns
xor
add
xor
mov
cmp
mov
mov
dec
clc
je
daa
pop
xor
or
mov
cmp
repz
mov
push
dec
fnstcw
das
jle
fsub
in
retf
mov
sub
call
push
fstp
push
gs
lea
or
(bad)
and
lods
aaa
mov
imul
or
push
mov
sbb
ficomp
sbb
int3
mov
fs
adc
lods
sahf
rcr
sahf
fbld
jmp
mov
inc
aam
push
(bad)
dec
or
ret
fldenv
dec
jl
(bad)
imul
adc
pop
xor
mov
(bad)
cmp
xchg
mov
or
movs
lds
xor
lock
dec
jne
cs
adc
xchg
stc
push
test
mov
ds
mov
das
pop
cwde
fdivr
pop
sub
cmc
call
push
hlt
dec
popf
add
pusha
jnp
nop
test
sub
into
or
fcmove
add
push
ret
pushf
pusha
push
sti
in
je
stos
lock
out
jbe
clc
sub
arpl
outs
push
imul
int
icebp
cmps
bnd
xlat
mov
push
inc
lea
imul
(bad)
push
push
xchg
pusha
jecxz
sti
in
mov
mov
and
std
addr16
xor
test
nop
je
mov
adc
xor
jae
fcmovb
jne
xor
xor
xchg
out
xchg
int
icebp
fnstenv
mov
jns
stos
mov
mov
xchg
inc
lods
push
sbb
adc
rcl
jne
xchg
gs
(bad)
movs
(bad)
out
mov
out
ud0
sbb
xor
inc
scas
in
cwde
(bad)
add
pop
xor
pop
out
fs
stos
fwait
push
xchg
adc
and
xchg
and
cs
sbb
push
lods
xchg
push
mov
rol
repnz
pop
out
or
xor
jns
or
shl
int
pop
mov
mov
call
mov
mov
sub
mov
add
das
jae
pop
cs
inc
mov
push
or
pop
or
icebp
mov
pop
xor
mov
idiv
dec
mov
and
fidiv
retf
dec
cmp
mov
sar
fsub
xchg
into
inc
les
aas
fwait
das
and
push
jne
(bad)
movs
inc
pop
pop
scas
call
test
add
or
ins
push
ds
loopne
and
xchg
pusha
test
sbb
xchg
mov
jp
add
pushf
mov
pop
adc
mov
jb
std
rcl
sbb
pop
lock
or
nop
(bad)
in
stc
push
adc
lahf
fcomp
push
jmp
mov
dec
test
pop
add
cmp
ds
pop
jae
push
fidiv
pusha
jl
adc
fcmovnbe
div
lea
fadd
jb
lds
pop
cmc
mov
jecxz
adc
xchg
cmps
cmp
xor
sbb
adc
or
test
dec
mov
inc
sbb
push
outs
(bad)
pop
adc
sti
into
inc
popa
ror
push
fnstcw
inc
pop
repnz
dec
ret
push
in
mov
or
add
adc
ret
adc
inc
in
or
cmps
js
sbb
or
sbb
bound
pop
mov
addr16
aaa
inc
and
sbb
loopne
xchg
push
pusha
push
or
inc
aaa
sbb
jl
out
(bad)
dec
jbe
rcl
in
adc
mov
sub
test
mov
mov
push
push
out
mov
cdq
jmp
add
mov
call
dec
pop
push
mov
imul
in
lods
cs
loop
aaa
sbb
popf
sub
inc
fdivr
mov
in
dec
iret
fsubrp
and
dec
sub
pushf
dec
cdq
rol
icebp
cmp
sub
push
mov
jecxz
inc
cdq
pop
add
aaa
inc
fdivr
sti
or
cmps
out
xlat
or
sub
clc
pop
and
sub
fistp
fsub
mov
and
(bad)
mov
inc
movs
push
inc
dec
cmc
mov
leave
sbb
lock
pop
shr
lods
imul
(bad)
in
(bad)
repz
and
mov
nop
pop
xchg
jns
cmp
and
cmp
xor
push
sbb
mov
aam
lods
inc
dec
adc
sub
das
xchg
(bad)
xor
cmps
lods
push
push
cs
xchg
and
test
aaa
ss
mov
jne
mov
dec
push
fstp
mov
in
lea
inc
int
adc
add
lods
mov
repz
add
or
mov
ins
cmps
nop
mov
cmp
pop
cmps
out
aam
add
adc
add
out
cli
mov
ja
and
mov
jo
(bad)
arpl
pop
xor
xchg
sub
sbb
and
jne
jmp
jmp
pop
jne
fcomp
das
daa
daa
mov
lahf
je
imul
jns
(bad)
popf
add
addr16
ret
or
les
and
aad
(bad)
addr16
xchg
icebp
sbb
fldcw
cmp
inc
(bad)
ficom
add
pop
add
mov
adc
mov
xor
dec
das
popf
sbb
adc
inc
sbb
and
(bad)
fstp
enter
(bad)
(bad)
sub
inc
inc
(bad)
or
push
rol
push
popa
fistp
retf
out
loope
in
and
ins
mov
mov
(bad)
ficom
and
xlat
add
xchg
mov
sbb
(bad)
shl
mov
cld
jmp
ret
div
jbe
imul
icebp
(bad)
mov
scas
iret
or
jmp
mov
pop
shr
xchg
(bad)
sub
cmps
mov
push
(bad)
nop
ror
xchg
sar
stos
inc
dec
outs
ins
push
movs
sub
xchg
jbe
adc
mov
mov
jo
dec
test
sbb
retfw
icebp
cdq
jno
mov
sub
(bad)
repz
mov
dec
pop
mov
pusha
adc
div
inc
push
retf
adc
xchg
add
xor
imul
enter
sbb
movs
mov
scas
aas
enter
daa
pop
xlat
fist
xchg
jo
dec
shl
mov
mov
out
sbb
call
cmps
add
pusha
pushf
xor
or
push
lds
je
mov
jno
sbb
pop
into
nop
aam
mov
mov
push
fwait
mov
int3
sub
mov
ds
ret
mov
stos
jae
xor
loope
inc
or
iret
and
retf
test
sahf
cli
dec
pop
inc
cmp
pop
add
pushf
sub
call
jle
sahf
sti
pop
push
sbb
sub
ds
push
pusha
cmp
call
push
sbb
mov
aaa
xchg
mov
aas
out
fsubrp
sar
xor
inc
push
xor
dec
and
jo
popf
jmp
sub
mov
push
rcl
cmc
sub
repz
mov
xor
sbb
dec
and
inc
inc
mov
dec
xchg
mov
jne
test
push
pop
out
js
jmp
cdq
js
xchg
mov
mov
sar
pop
push
addr16
test
push
fcmovb
xchg
addr16
inc
jbe
jbe
shl
mov
int
xchg
adc
cmps
jmp
int3
fwait
icebp
cmp
mov
jmp
outs
data16
xchg
jb
outs
mov
test
mov
je
mov
add
fadd
rcr
aam
in
sbb
and
es
pop
mul
dec
jae
repz
cwde
inc
test
push
pushf
jmp
or
or
test
jne
pusha
lock
shl
ins
in
(bad)
jmp
sar
cmp
jecxz
jmp
(bad)
pop
aas
pop
in
repnz
movs
aad
pop
das
lea
pop
retf
jecxz
pop
lahf
not
test
pushf
dec
enter
mov
dec
mov
ret
sbb
iret
aas
gs
dec
xchg
jmp
leave
push
out
lahf
imul
arpl
inc
push
addr16
inc
xor
call
sbb
cmp
inc
mov
call
jmp
retf
xchg
adc
sti
xchg
retf
pushf
sbb
aaa
retf
(bad)
lds
inc
inc
adc
dec
xor
mov
inc
and
sub
xor
and
sti
and
and
js
push
mov
aas
fdivr
mov
xchg
and
sbb
movs
in
mov
jae
leave
xlat
das
pop
sti
out
in
dec
fs
mov
fisubr
rol
lods
push
rcr
and
mov
rol
pop
sbb
in
mov
outs
cwde
daa
popf
cld
pop
dec
outs
mov
stos
cmp
adc
std
inc
jle
sub
mov
sbb
iret
inc
retf
scas
lahf
nop
sub
out
push
push
les
lea
icebp
mov
and
loop
ret
pop
rcl
xchg
xor
mov
div
cmps
xor
xchg
jnp
adc
mov
icebp
dec
dec
jae
xchg
enter
xchg
dec
repnz
int
xor
test
(bad)
fdivr
in
push
outs
inc
cmps
jmp
sub
mov
(bad)
sar
sbb
test
xlat
xor
js
jmp
in
nop
pop
ret
das
xor
sub
push
daa
inc
push
aad
mov
in
jge
mov
cmp
mov
sub
sub
in
add
pusha
and
push
adc
xor
lahf
fs
popf
add
push
and
sahf
sub
in
and
adc
(bad)
mov
push
jg
push
stos
cld
push
xor
(bad)
jl
push
test
inc
dec
lods
sbb
ja
mov
iret
mov
jo
(bad)
(bad)
aam
not
inc
dec
clc
stc
scas
ins
sub
sub
pop
cmp
jae
ja
pop
dec
call
add
ror
fwait
ins
leave
xor
ins
push
scas
aas
outs
test
dec
call
cmp
inc
fwait
je
sahf
xchg
jmp
das
adc
repnz
inc
ror
movs
ds
fistp
jmp
dec
daa
clc
cmp
mov
push
mov
mov
sub
inc
sub
push
icebp
push
jle
outs
neg
scas
or
jb
dec
cld
fidivr
test
dec
cmp
or
in
fwait
jle
idiv
pop
in
inc
or
scas
clc
int3
aas
and
mov
mov
bnd
fidiv
adc
xor
pop
loope
add
add
mov
(bad)
xlat
add
and
adc
sub
daa
or
test
cwde
imul
jmp
xchg
push
sbb
jle
je
shl
(bad)
jp
icebp
jecxz
setl
mov
add
mov
fwait
push
push
cmp
pusha
push
loope
adc
inc
fisttp
pop
jno
push
dec
dec
push
jae
out
xor
jmp
repnz
cmp
sub
or
inc
adc
add
jg
dec
mov
sbb
je
test
mov
pop
mov
pop
(bad)
out
add
shl
call
ds
lea
xor
jecxz
jnp
stos
mov
add
pop
sub
or
jnp
fbstp
jb
push
cmp
inc
mov
or
mov
add
dec
loopne
inc
adc
nop
pop
enter
xor
push
sub
lods
mov
int
mov
lock
icebp
cmps
call
es
sbb
lea
lods
pop
ret
shr
lea
test
or
cmp
xchg
pop
sub
aad
and
sbb
xor
xor
out
jns
dec
out
xchg
retf
add
repnz
fadd
add
inc
dec
sbb
push
pop
cmp
loopne
jb
or
push
jecxz
call
arpl
mov
dec
dec
rcl
jle
(bad)
sbb
iret
xchg
ja
cmp
jmp
int3
test
cdq
and
or
repnz
cld
(bad)
sub
dec
mov
and
xor
push
or
popf
mov
mov
loop
ret
fst
inc
jb
shl
leave
fwait
lods
mov
or
mov
imul
jmp
dec
mov
mov
xlat
inc
je
mov
and
jmp
dec
stc
cdq
mov
retf
idiv
xchg
addr16
test
mov
lds
dec
nop
stos
adc
clc
sbb
inc
and
pushf
cwde
add
add
jnp
adc
pop
fistp
mov
dec
sbb
mov
jne
in
movs
push
mov
outs
test
push
fld
pop
sbb
bound
imul
add
mov
daa
sar
jmp
jne
out
jmp
sbb
std
inc
mov
cmp
ror
xor
fild
sbb
sub
and
lock
aas
fst
or
xchg
shl
push
out
add
xchg
jl
shr
ins
das
sub
pop
sbb
daa
mov
xor
outs
(bad)
push
xchg
shr
mov
jmp
fs
int
push
bound
or
xor
jge
jmp
xor
cmp
idiv
or
mov
addr16
lods
fisub
adc
push
(bad)
stc
dec
jmp
mov
cld
mov
pop
jno
mov
fs
adc
fbstp
inc
xor
arpl
dec
fst
in
cvtps2pd
sbb
xchg
add
add
(bad)
sub
or
inc
add
js
xchg
cli
(bad)
fucom
jb
inc
jae
sub
lods
and
and
lea
mov
call
cli
fadd
inc
addr16
bound
test
inc
jne
retf
mov
add
aaa
pop
cmp
mov
jb
dec
scas
lahf
cmp
jns
lods
add
cdq
and
mov
mov
jle
fdiv
fbld
mov
das
ret
xchg
mov
inc
or
push
daa
punpckhdq
inc
and
mov
es
sub
jnp
lods
mov
sub
adc
rcr
aas
jl
scas
mov
push
sub
fcomp
mov
fcomp
pop
sbb
and
xchg
daa
not
test
out
pop
std
stc
push
xchg
and
sbb
inc
movs
mov
or
jne
aaa
gs
(bad)
or
adc
les
aad
das
fcmovb
pop
scas
loop
mov
imul
jle
mov
and
rcl
cmp
fadd
movs
mov
add
mov
lods
int3
pop
jle
sbb
adc
dec
cmp
jns
mov
ds
ins
mov
adc
mov
cmp
out
cmp
xchg
(bad)
mov
adc
(bad)
xchg
push
xor
popa
fstp
aas
sbb
leave
(bad)
lahf
xor
stos
cmp
cmp
dec
popf
es
mov
stos
add
jl
xchg
pop
mov
sar
div
leave
arpl
dec
(bad)
outs
out
shl
sub
mov
mov
xor
out
in
mov
jno
test
cmp
fwait
mov
and
xlat
xchg
add
xchg
je
add
pop
or
xor
push
scas
in
movs
iret
pushf
ret
jp
ja
clc
sti
inc
add
loopne
mov
xchg
mov
adc
push
sbb
or
int3
dec
loop
mov
add
ja
xor
mov
aaa
add
jmp
lods
nop
sbb
inc
adc
sahf
pushf
and
out
fild
xchg
les
int3
movs
xchg
stos
add
into
adc
push
or
mov
popa
dec
sub
xchg
mov
adc
icebp
pop
push
or
(bad)
jp
sti
ins
adc
cmp
mov
call
cmp
push
arpl
jno
rcl
pop
add
xor
scas
(bad)
dec
inc
movs
out
mov
leave
jl
push
fs
and
ja
dec
xchg
push
fild
dec
jnp
repz
cwde
jno
mov
pop
ret
mov
dec
mov
jb
push
cmp
push
or
scas
mov
ss
pop
mov
dec
fnstcw
rol
jle
and
cmps
test
and
pushf
cmp
xchg
out
sub
movs
inc
dec
push
inc
add
push
mov
jp
clc
adc
or
sar
xor
mov
neg
js
call
sbb
ret
or
test
jnp
push
jecxz
sub
xchg
(bad)
jns
mov
cdq
pop
leave
loope
jmp
mov
and
inc
xchg
or
out
dec
mov
clc
imul
xchg
idiv
add
fs
rcr
cmc
add
stos
sar
xchg
xchg
stc
hlt
pop
and
adc
(bad)
in
pop
arpl
cwde
xchg
jne
stc
cmp
jb
xchg
imul
mov
lahf
jmp
ret
bound
dec
mov
jp
cmp
fsubr
stos
mov
jbe
icebp
das
jmp
inc
pop
mov
popa
cmps
xchg
scas
jl
add
lods
in
mov
jmp
mov
icebp
push
add
dec
aaa
xor
ret
jle
nop
push
sar
test
cmps
inc
pop
rcl
out
js
in
xor
shr
sub
and
mov
push
retf
les
push
and
in
cdq
dec
adc
loope
icebp
leave
add
jmp
inc
mov
cld
out
lahf
out
mov
fs
in
jge
pop
or
pop
mov
icebp
lods
into
pop
jecxz
std
inc
push
add
fdivp
loope
clc
call
pop
add
xchg
cmp
xchg
jle
inc
inc
xchg
repz
inc
xchg
sub
inc
add
xchg
xchg
mov
xor
cs
dec
mov
mov
(bad)
cmps
sbb
std
fbld
test
lahf
lods
icebp
jl
retf
or
add
pop
fwait
jnp
xchg
jg
aaa
push
stos
mov
mov
loop
cmp
xor
inc
and
sub
fld
rol
call
sbb
fwait
cmp
mov
leave
push
sbb
hlt
xchg
mov
and
mov
nop
push
stc
popf
inc
dec
sub
mov
xor
rcl
jns
test
into
and
dec
or
sbb
push
push
(bad)
repz
iret
mov
cmps
imul
lea
sub
push
(bad)
push
test
pop
hlt
scas
mov
cmp
push
call
in
dec
fwait
aad
xchg
pop
out
lahf
test
cmp
mov
cmp
ja
xor
pusha
xchg
pop
dec
dec
lods
push
cmc
jb
xchg
mov
retf
ins
das
pusha
mov
jle
jp
pop
cli
and
jmp
jnp
jge
cdq
pop
mov
mov
jp
xchg
pop
shr
push
jo
int3
sti
pop
mov
xor
xlat
movs
in
mov
jge
cmp
dec
xchg
jecxz
daa
jle
jmp
pop
lea
fwait
dec
addr16
adc
add
xchg
fist
gs
fs
rcr
mov
mov
je
retf
loopne
pop
cmc
cmp
call
push
test
lahf
mov
stos
lahf
call
jno
sbb
(bad)
call
loop
xor
and
push
xchg
cdq
or
stos
xchg
and
or
xor
outs
mov
sti
repnz
mov
pop
test
lahf
loop
sub
mov
xor
pop
outs
cwde
popf
push
je
ins
sti
inc
pop
(bad)
mov
and
sub
imul
ins
push
repnz
xor
data16
ins
xchg
aam
sbb
adc
adc
xor
add
pop
dec
cld
cld
sbb
rcl
jne
push
fwait
movs
scas
or
dec
inc
pop
mov
inc
xor
in
jno
push
mov
mov
adc
inc
xchg
call
ins
call
movs
je
adc
jl
je
sbb
xchg
xor
xor
popa
shl
idiv
stos
inc
test
sub
or
shl
inc
sbb
lods
add
add
xor
dec
gs
add
xchg
jge
mov
jmp
ins
mov
mov
jb
sub
test
jecxz
scas
pop
rcl
mov
cmp
jo
je
xchg
into
inc
xor
imul
in
pop
inc
dec
jmp
jb
clc
repnz
mov
mov
inc
adc
scas
scas
stc
leave
popa
repz
lock
add
or
inc
ficom
cdq
(bad)
jmp
fwait
and
mov
arpl
xchg
dec
pop
dec
mov
clc
cmp
sbb
inc
(bad)
push
das
push
pop
mov
dec
or
lods
sub
pop
pop
push
sbb
push
mov
in
out
mov
dec
pushf
int
push
sahf
adc
outs
dec
push
in
test
les
and
xor
mov
pop
dec
jle
in
cmc
sti
inc
shr
mov
sub
aam
mov
xchg
cld
mov
cmp
jns
push
xor
pop
in
xchg
adc
cmp
(bad)
rdmsr
jne
adc
xchg
int
scas
adc
(bad)
push
ficom
adc
outs
jne
sbb
pop
stos
out
push
das
call
inc
cmp
int3
loope
mov
daa
inc
jb
retf
shr
mov
jecxz
mov
push
aas
mov
lods
addr16
lock
test
pop
clc
out
adc
adc
fadd
(bad)
addr16
mov
(bad)
int3
cmc
ins
push
gs
outs
in
cmp
loop
daa
pop
shl
aas
fs
push
push
rcr
test
or
and
imul
stos
jle
repnz
and
in
fdiv
adc
movs
out
xchg
or
push
and
mov
ror
or
adc
rcl
stos
fcomp
mov
mov
jp
mov
sub
cmp
xor
xor
mov
mov
pop
sbb
adc
mov
jbe
add
fdivr
dec
xchg
out
mov
pusha
ins
pushf
pop
cwde
sub
xchg
test
rol
lock
xchg
sub
xor
popa
jb
stos
jp
sahf
stos
pop
in
fdivr
fdiv
adc
stos
pop
(bad)
sbb
ss
mov
nop
stos
push
adc
icebp
fild
jbe
mov
mov
dec
or
dec
and
mov
push
jge
pusha
dec
add
mov
les
(bad)
not
mov
xchg
int3
pusha
inc
push
aad
jbe
mov
addr16
inc
ins
cmp
mov
rep
cmp
or
mov
push
mov
je
mov
jbe
fs
or
xor
mov
pop
jmp
cmp
test
std
cdq
and
or
mov
mov
jne
pop
dec
fadd
add
test
ins
cmp
inc
xchg
xor
dec
mov
out
cmps
in
imul
jmp
inc
xchg
sbb
and
push
push
and
xor
pop
cmp
sub
(bad)
popa
sbb
inc
or
xchg
scas
mov
xchg
or
in
das
and
out
xor
pop
(bad)
nop
or
retf
pop
dec
fadd
cmps
mov
push
test
test
js
pop
cld
push
add
sbb
shr
jp
test
and
ror
dec
fnstcw
xchg
es
das
fcmovu
ins
adc
adc
mov
cs
sbb
(bad)
jno
daa
push
outs
and
xor
loop
out
les
stos
fst
aaa
popa
jecxz
mov
cmp
imul
in
xor
cmp
arpl
cmps
icebp
les
in
aad
cmp
int
mov
mov
and
arpl
mov
aad
dec
adc
movs
xchg
mov
retf
js
cmp
sbb
ds
ja
shr
jmp
pop
xor
gs
add
loope
and
or
(bad)
loop
xchg
and
sti
push
fwait
xchg
xor
sbb
inc
inc
inc
cmp
call
jae
cld
outs
sub
(bad)
cmp
movs
jp
jne
push
loop
movs
aaa
movsx
stc
inc
repnz
mov
xor
(bad)
push
sbb
jno
sub
dec
jl
sar
les
xor
or
fwait
rcl
pop
pop
push
jnp
push
(bad)
mov
retf
adc
cld
cmp
sub
in
mov
mov
nop
(bad)
mov
sbb
pop
add
mov
sbb
sbb
cld
jno
cdq
jo
or
xchg
adc
inc
sub
jmp
jb
mov
jg
adc
cmps
cmp
dec
adc
xchg
call
xchg
lods
jl
push
and
ins
lods
sub
sbb
jmp
jbe
popf
scas
mov
repz
mov
ins
xor
push
movs
cmc
je
mov
and
enter
test
out
ins
sar
popa
popf
cs
lahf
jle
or
adc
test
lods
cmp
mov
inc
fild
add
lods
add
leave
(bad)
outs
push
dec
(bad)
fld
or
xchg
popf
ss
icebp
and
sub
int3
sbb
sar
test
loopne
cs
push
sbb
repz
add
pop
push
movs
or
and
xrelease
pop
data16
pop
mov
iret
bound
add
mov
outs
retf
fwait
or
dec
cs
sub
jge
jge
cdq
cmp
adc
add
shl
pop
repz
xor
jp
fnstsw
ja
(bad)
jl
daa
nop
std
cmp
ins
nop
cmps
pop
push
int3
ror
movzx
popf
push
imul
xor
scas
push
cwde
aad
dec
push
loope
mov
(bad)
icebp
cmp
fdiv
xor
or
and
call
sahf
xchg
inc
mov
fsubr
dec
jne
shl
dec
mov
arpl
xchg
mov
adc
fdivr
mov
loopne
xchg
clc
fbld
mov
inc
out
(bad)
es
mov
add
inc
hlt
push
aaa
frstor
sbb
hlt
test
sti
and
aas
add
push
sbb
mov
cmp
lods
inc
out
add
aad
push
add
mov
leave
(bad)
sti
xor
fs
xchg
es
mov
test
or
pop
xchg
jl
mov
test
jg
xchg
arpl
add
jmp
mov
xor
dec
lds
int
mov
call
pop
call
mov
sub
pop
std
out
push
cs
ss
dec
or
(bad)
scas
push
inc
int3
out
xor
add
ja
ins
xor
jns
loopne
test
adc
jl
xor
addr16
cmc
mov
loopne
sahf
jne
leave
mov
outs
out
sar
sub
loope
lods
test
inc
lahf
lods
les
int3
(bad)
fcom
adc
jmp
adc
xchg
sbb
push
jl
jp
mov
sub
cmp
mov
dec
out
push
adc
xchg
data16
shl
xor
and
or
imul
sub
adc
lods
mov
(bad)
fcomp
jp
and
push
cli
in
push
mov
movs
or
js
xor
xchg
cmp
or
nop
or
pop
pop
std
or
sti
icebp
push
pop
fsubp
ja
xchg
jmp
jmp
rol
jle
cmp
xchg
xchg
mov
lods
je
mov
cmp
ins
cmps
dec
test
jns
daa
je
sub
rol
shl
repnz
cdq
inc
xlat
inc
xor
sub
xor
or
pop
(bad)
jmp
inc
jae
mov
cmp
mov
inc
aas
jnp
fidivr
mov
cmp
jbe
jne
ja
and
mov
popa
repz
into
jle
jp
aaa
out
push
test
cmp
lea
push
push
mov
test
sbb
fisub
mov
mov
sub
inc
lods
daa
cmc
fs
sub
sub
das
and
ja
mov
cmp
xchg
xchg
pop
(bad)
or
repz
repz
jge
(bad)
dec
jo
les
shl
adc
std
imul
mov
jmp
xlat
cmc
xchg
fucom
test
loop
cmc
stos
mov
and
js
pushf
addr16
ficomp
jno
jne
jle
stos
mov
(bad)
arpl
out
movs
push
jl
sahf
retf
and
(bad)
cmp
jecxz
sub
cmp
or
and
xchg
dec
inc
in
arpl
loop
movs
into
inc
mul
add
xlat
idiv
mov
ss
dec
dec
sub
xchg
mov
fwait
jecxz
movs
(bad)
dec
test
dec
lods
imul
mov
cmp
mov
fs
or
mov
shl
(bad)
sub
into
mov
sbb
cs
xchg
adc
cmp
pop
push
icebp
enter
out
arpl
jg
push
cmp
inc
rcr
nop
sub
in
pushf
mov
mov
jle
jge
add
mov
xor
and
push
test
push
and
sti
jg
jge
ds
out
and
movs
jbe
in
inc
addr16
pop
dec
push
mov
mov
sub
movs
push
xlat
adc
adc
retf
fstp
xor
add
in
sub
daa
adc
xchg
enter
mov
fcomi
xor
dec
jp
retf
js
bound
das
inc
dec
fld
adc
mov
ror
hlt
inc
(bad)
rcl
pop
xchg
fcom
jecxz
loopne
xchg
mov
and
ins
inc
repz
and
push
mov
jg
cmp
scas
dec
xchg
push
shr
dec
ret
inc
mov
mov
xchg
icebp
aam
pusha
cmp
mov
mov
xchg
dec
mov
cwde
imul
xchg
(bad)
ds
sbb
mov
idiv
xor
jno
cmp
cmp
jnp
jns
ja
dec
jle
ret
fsubr
add
push
xchg
aas
(bad)
inc
cmp
sbb
inc
inc
lahf
rol
lods
push
pop
mov
xor
adc
dec
pop
pop
mov
push
mov
inc
lock
fadd
ja
adc
or
ret
sti
xchg
outs
fst
pop
call
retf
ret
jae
lahf
popf
nop
push
jle
jmp
aam
sbb
idiv
bound
sub
jno
sub
jbe
push
xor
es
repnz
nop
mov
sub
mov
imul
ror
test
leave
mov
imul
(bad)
daa
inc
dec
mov
mov
mov
(bad)
dec
xchg
icebp
dec
inc
(bad)
dec
mov
dec
ins
mov
xlat
data16
dec
das
cdq
imul
cmc
enter
mov
inc
ds
adc
xchg
and
call
mov
loopne
cli
xchg
adc
and
scas
pop
pop
out
aas
inc
cmp
nop
retf
pop
retf
or
inc
mov
lods
test
add
mov
sbb
or
stos
adc
stos
push
fstp
sub
shl
cmp
xor
outs
sbb
rcr
inc
inc
lock
stos
lahf
add
cld
pop
dec
nop
xchg
mov
sbb
mov
pop
xchg
jl
xchg
inc
or
pop
mov
loop
shl
fs
test
add
inc
ror
mov
pop
hlt
mov
fidiv
imul
push
adc
cmp
jmp
call
sbb
pushf
push
xchg
add
push
push
jecxz
xor
hlt
dec
lds
ss
add
fucomp
loopne
(bad)
pop
mov
retf
in
(bad)
sti
and
cwde
sbb
jl
mov
add
mov
stc
dec
push
mov
into
mov
or
mov
or
inc
je
fimul
sbb
mov
pop
mov
dec
imul
rcl
add
and
ret
jnp
pop
nop
sub
cdq
mov
shr
and
test
imul
aad
add
and
pop
and
xor
push
push
call
push
idiv
fistp
out
xchg
pushf
fstp
push
sub
lods
mov
clc
(bad)
sahf
loop
jne
ins
iret
xchg
les
adc
add
pop
in
or
cmp
or
or
popa
jmp
sahf
test
(bad)
imul
cmc
std
stos
and
or
push
and
ror
mov
push
in
mov
in
jne
scas
jb
outs
std
sub
hlt
cmps
cmps
push
je
xchg
xlat
push
std
jnp
mov
jbe
movs
iret
cli
rcr
sub
mov
int3
cmp
xor
shl
xchg
je
jb
cmp
shr
je
and
clc
inc
imul
lock
cmp
loopne
mul
sbb
and
mov
dec
aas
dec
mov
test
(bad)
xor
out
aas
mov
ds
push
pop
push
sub
jmp
pop
cmc
cdq
int3
inc
hlt
push
push
push
fcmovb
hlt
test
jmp
cmp
lods
out
and
sbb
cmps
mov
into
xchg
sbb
push
shl
clc
pop
add
mov
adc
jecxz
rol
jns
mov
leave
scas
dec
cli
mov
push
test
aaa
jnp
js
and
cmp
jae
fidivr
push
leave
cmps
push
push
pop
sbb
std
inc
mov
lock
add
lods
imul
dec
xchg
jmp
(bad)
add
pop
fbld
fild
inc
inc
stc
int3
xchg
mov
rcr
xchg
sub
jmp
aas
adc
test
push
ret
dec
outs
xor
pop
lods
(bad)
repz
inc
inc
fbstp
cwde
repnz
xor
addr16
inc
inc
cdq
jmp
(bad)
add
cs
mov
adc
call
das
lea
dec
fs
in
pop
jbe
mov
add
in
inc
div
mov
push
add
mov
mov
rcl
movs
xchg
mov
or
jmp
push
xor
and
popf
mov
stc
inc
pcmpgtw
pushf
mov
jge
xchg
outs
mov
addr16
lods
nop
(bad)
sbb
pop
mov
movs
xor
fcmove
ds
iret
arpl
int3
fdivr
xor
or
imul
(bad)
adc
shl
jp
repnz
retf
mov
sub
dec
cmp
xchg
pop
mov
mov
sbb
test
retf
iret
aam
aaa
sub
mov
add
xchg
dec
test
lock
mov
push
push
jb
les
les
sti
cmps
popa
jae
out
push
cmp
sbb
punpckldq
mov
cmc
jns
int3
push
and
js
and
adc
pop
sub
lods
mov
sbb
cmps
inc
mov
(bad)
push
xor
movs
scas
call
dec
movs
outs
movs
(bad)
shr
cmp
jp
jo
dec
sub
adc
jmp
adc
mov
cld
stos
pusha
xchg
sbb
inc
adc
mov
test
fbld
cmp
push
fwait
or
push
xchg
jmp
(bad)
push
call
fiadd
mov
pusha
jo
repnz
xchg
xor
rol
daa
adc
call
lock
in
iret
icebp
and
(bad)
cwde
jmp
les
jb
xor
inc
and
dec
je
and
popf
repnz
sar
xor
stos
pusha
mov
sbb
sahf
aaa
sbb
dec
iret
ins
std
std
xchg
and
popf
xchg
jo
loop
or
dec
int3
adc
inc
mov
std
xchg
add
inc
rcl
mov
jecxz
ja
mov
fadd
mov
push
sub
jne
imul
mov
xor
stos
dec
xor
aaa
lods
call
cmps
inc
add
les
mov
shl
mov
xchg
cmp
popf
or
mov
mov
push
mov
sbb
xchg
ret
call
jne
loope
shl
in
movs
jl
inc
cmp
lods
pop
push
movs
lock
mov
sbb
mov
imul
pushf
out
fisub
fdiv
inc
jb
fidivr
cmp
(bad)
and
xchg
push
fcom
cdq
add
imul
leave
jns
movs
fld
je
dec
xor
sub
stos
inc
mov
jne
(bad)
dec
mov
(bad)
repz
retf
bound
jmp
pop
xchg
add
arpl
sub
cmp
push
dec
lahf
adc
pop
retf
loope
pop
fbstp
jp
sahf
test
add
cmp
in
hlt
cs
retf
jbe
mov
sbb
cmp
fidiv
pop
xlat
add
test
fwait
cli
mov
in
mov
sahf
cmp
(bad)
stc
pop
add
les
mov
cmp
adc
nop
fcom
sub
sbb
jmp
ret
jnp
jns
jae
lock
xlat
push
fwait
sbb
mul
stc
fstp
pushf
fstp
std
in
xor
call
ds
(bad)
cld
inc
retf
inc
std
cs
xor
dec
je
sbb
sti
jge
mov
jae
sub
imul
mov
int
in
sbb
adc
rol
stos
jnp
lds
in
push
popa
pop
jle
(bad)
mov
or
sub
mov
fmul
pop
retf
push
jp
(bad)
mov
stc
stos
test
sbb
ja
and
fisub
xchg
mov
xchg
jl
cmp
mov
or
inc
inc
mov
pop
mov
dec
loope
xor
nop
jmp
fimul
jecxz
mov
jl
fisttp
mov
iret
scas
shl
pop
scas
or
hlt
aad
jecxz
jmp
repnz
bound
push
adc
mov
les
mov
cwde
push
mov
rcr
sti
xor
sbb
pop
add
add
(bad)
pop
or
cmp
jmp
imul
cdq
fistp
cmp
mov
(bad)
dec
push
push
fisttp
scas
mov
aas
jno
das
or
adc
mov
dec
mov
leave
inc
out
mov
cmp
daa
fldenv
dec
sub
(bad)
adc
pop
dec
pop
in
mov
mov
hlt
jmp
mov
sbb
mov
clc
xor
xor
pop
mov
or
std
push
cmp
mov
stos
pop
out
hlt
and
mov
jecxz
jmp
je
mov
nop
mov
not
cld
mov
in
add
or
movs
push
jmp
sub
mov
push
dec
pop
adc
mov
(bad)
mov
inc
or
inc
outs
mov
mov
pop
out
adc
out
call
shl
xor
pop
repz
pop
test
adc
dec
jo
cmps
pop
add
ffreep
or
ss
push
arpl
iret
popf
and
shl
push
fisubr
in
aaa
xor
ret
sysenter
imul
test
push
adc
inc
loop
jno
out
xor
dec
mov
adc
pop
and
xchg
not
in
jmp
or
xchg
cmp
aaa
pop
push
dec
pop
push
movs
call
mov
add
xor
imul
(bad)
hlt
push
mov
mov
add
jb
and
fnsave
shl
mov
repnz
add
in
mov
es
fsub
xchg
mov
pop
sar
jle
sahf
aad
mov
dec
mov
cmps
adc
aam
sub
jle
inc
sbb
(bad)
sahf
or
and
ins
mov
or
adc
rcr
es
or
ins
mov
push
into
addr16
fisttp
dec
xor
dec
and
lods
nop
int3
mov
test
mov
cmp
inc
mov
test
xchg
rcr
or
inc
pusha
ja
add
cmps
push
bound
scas
push
lahf
mov
call
jmp
mov
leave
dec
cmp
or
mov
jmp
push
int3
mov
pop
test
popf
xchg
sub
in
cld
cs
xchg
cmp
fidivr
push
movs
pop
inc
xor
daa
fwait
repnz
movs
ins
or
fmul
rol
xor
mov
mov
stc
(bad)
outs
cmps
or
push
add
mov
ins
movs
cld
jmp
mov
pop
sub
adc
pusha
aad
aas
jle
mov
loope
lods
sbb
popf
(bad)
adc
xchg
aas
push
mov
sub
std
(bad)
jb
xor
rcr
in
mov
ret
jp
pop
stos
loopne
hlt
cmps
mov
pop
push
ds
ss
or
adc
loope
clc
aad
cmps
leave
jns
not
mul
sbb
aam
sub
scas
mov
loopne
(bad)
jge
push
xchg
sbb
ror
in
jge
and
gs
outs
jge
push
dec
jo
data16
fdiv
loopne
ret
(bad)
pop
inc
dec
adc
and
popa
bound
or
mov
and
iret
add
jle
or
call
arpl
mov
push
movs
dec
sub
add
std
gs
fcmovu
xchg
aaa
mov
cdq
and
clc
mov
jae
and
or
sub
js
aas
sbb
dec
aaa
mov
loope
jno
imul
dec
dec
popf
pop
sub
lods
fsub
dec
jle
dec
or
jae
mov
test
ret
inc
jp
inc
sub
xchg
push
cwde
ins
enter
ja
push
cmp
jae
pop
dec
lea
jne
cmp
adc
int3
cli
mov
xchg
push
mov
stos
or
mov
outs
call
xchg
fnstcw
or
addr16
adc
jae
xor
hlt
mov
sbb
mov
and
lods
mov
out
dec
mov
jle
shl
aas
popa
and
push
jo
push
or
out
adc
rol
sbb
cmp
add
add
mov
xor
movs
cld
les
hlt
and
pop
dec
or
or
iret
mov
mov
div
out
or
test
call
jb
inc
mov
jmp
mov
pop
mov
jmp
ror
sub
fsubr
jns
or
adc
push
test
pop
mov
sub
rcr
or
push
mov
rep
push
hlt
loop
pop
aam
dec
sub
repz
add
lock
add
jb
cmps
xor
mov
cmp
call
add
out
cmp
jmp
aam
sbb
scas
inc
aad
cmps
popa
fsub
dec
cmp
push
rol
push
pushf
fidiv
xor
adc
sahf
test
cmp
mov
sbb
adc
jno
sub
xor
out
(bad)
(bad)
pop
into
ds
pop
loopne
adc
and
std
aaa
imul
in
push
pop
fwait
sbb
lea
adc
pop
mov
dec
rcl
pusha
add
xor
push
dec
scas
xor
jb
hlt
jae
mov
jnp
inc
das
loopne
clc
jb
sahf
pop
repz
neg
cmpxchg
jns
leave
push
xor
retf
mov
dec
mov
fmul
stos
sbb
into
mov
cmp
add
pusha
jmp
jmp
or
lods
jmp
xchg
ret
lock
cdq
out
xor
test
dec
cmp
xchg
mov
jno
addr16
mov
rol
popf
cli
scas
rol
test
shr
(bad)
lea
mov
jge
int3
icebp
inc
shl
sbb
dec
cmc
jmp
shl
xchg
stos
push
cmc
mov
and
jmp
mov
jnp
(bad)
pop
jno
jge
inc
movs
cdq
in
inc
(bad)
mov
dec
jbe
test
jo
ffree
cld
dec
ins
mov
inc
imul
mov
mov
(bad)
mov
inc
add
adc
and
or
ret
mov
jmp
mov
pmulhuw
stc
(bad)
movs
movs
push
cmp
xchg
iret
mov
add
mov
mov
es
pop
and
clc
fcmovbe
dec
js
jnp
ds
out
jb
es
push
adc
and
test
cmp
cmp
dec
js
dec
shl
mov
stos
mov
ja
icebp
stc
dec
pop
(bad)
cdq
and
mov
inc
or
lds
push
and
xor
sbb
shr
jmp
ja
movs
int3
lock
xchg
(bad)
xchg
lods
jp
pop
loope
sbb
bnd
and
jno
pop
stos
dec
icebp
sub
call
in
push
das
mov
in
shl
inc
call
pop
les
push
lahf
mov
hlt
mov
pop
ja
dec
xchg
repnz
imul
popf
jge
icebp
inc
jl
mov
test
arpl
xor
xor
pop
mov
mov
lods
xchg
ds
add
test
push
int3
xchg
sbb
mov
cmc
test
ss
and
pop
dec
mov
js
test
sbb
jo
test
sub
inc
mov
sti
aad
sub
bound
sbb
test
mov
ins
add
enter
dec
mov
push
and
daa
(bad)
test
mov
sti
jge
in
cmps
add
(bad)
mov
add
sbb
mov
sub
cwde
enterw
aas
(bad)
test
mov
push
dec
pop
cmp
xor
mov
adc
mov
inc
mov
cmp
mov
mov
mov
jg
cs
or
xor
fidiv
loopne
adc
icebp
jo
ret
sub
aas
push
aaa
cmp
jnp
xor
sbb
add
sti
bound
lea
aam
mov
or
out
mov
and
or
xor
inc
jge
(bad)
aad
inc
inc
lea
xor
pushf
cmps
and
mov
stos
mov
test
pushf
icebp
jp
ins
mov
into
test
xor
loopne
cld
mov
lock
and
test
aam
fstp
xchg
popf
or
cmp
xor
outs
sbb
sub
sub
rcr
inc
int
and
mov
and
(bad)
loopne
push
inc
dec
loopne
aam
scas
mov
sub
cmps
sbb
test
loope
addr16
jg
out
(bad)
xor
mov
clc
leave
jbe
xchg
cli
aam
mov
out
sub
je
imul
outs
adc
lock
rol
jl
fwait
xchg
lds
xchg
xchg
ins
push
fnstsw
jge
or
(bad)
sub
sbb
fsubrp
fwait
jmp
cmps
test
xchg
scas
xchg
adc
push
mov
and
stc
test
stos
int
aam
jno
inc
xor
imul
mov
and
or
lock
imul
loop
pop
iret
jb
push
and
mov
mov
loope
les
cmc
and
sbb
ret
adc
inc
lahf
dec
jno
imul
add
(bad)
ja
xor
push
push
stos
(bad)
sbb
call
clc
push
inc
pop
popf
frstor
dec
lea
inc
fisubr
mov
aas
mov
aas
dec
jmp
adc
inc
(bad)
push
adc
sbb
lods
mov
fld
test
imul
xchg
test
out
imul
push
aam
push
fwait
mov
lods
sbb
xchg
(bad)
enter
mov
clc
mov
xchg
add
mov
inc
jb
fs
mov
(bad)
into
mov
imul
out
scas
jge
inc
sbb
dec
mov
call
jmp
and
xor
jl
sub
into
or
lods
cmp
sbb
ffree
fsub
cmc
bound
jbe
xor
into
ret
nop
pop
push
and
outs
(bad)
sahf
adc
jecxz
sbb
adc
cmp
xor
cdq
xchg
pop
mov
inc
sub
xor
mov
inc
cmps
push
mov
ficom
xchg
mov
add
movs
pop
aam
or
cmp
sbb
gs
mov
sbb
mov
ins
inc
adc
mov
add
mov
dec
push
lahf
dec
(bad)
pop
aam
xlat
jle
into
hlt
fimul
xor
xchg
dec
aad
mov
movs
jle
or
pusha
mov
rcl
pop
jno
xchg
ret
jmp
in
xor
out
aas
and
jo
idiv
xor
in
add
fcmovu
fsub
xchg
sti
cmc
into
test
push
(bad)
mov
dec
mov
pushf
out
(bad)
stos
in
out
jl
mov
push
lods
sbb
in
fst
mov
pop
jge
test
sbb
call
push
dec
pusha
dec
sub
add
push
das
push
dec
jbe
jmp
imul
add
cwde
push
jns
lods
sbb
ja
into
fsubp
fisttp
imul
add
ins
jmp
mov
mov
sar
add
push
pop
ins
js
ret
add
sar
jp
imul
and
push
mov
add
adc
cmp
mov
push
popf
xchg
daa
iret
mov
leave
add
sub
loopne
push
shr
jae
fmul
pop
int3
fs
xchg
and
bsr
cwde
xor
push
out
mov
nop
push
cmp
cdq
xchg
mov
add
outs
mov
xlat
nop
outs
inc
pop
adc
and
cmps
xor
and
mov
rcl
inc
mov
xor
adc
int
jmp
in
ja
push
out
xor
inc
jl
repnz
rcl
into
dec
inc
and
xchg
jle
sar
gs
or
stos
repz
jg
(bad)
(bad)
rol
pushf
loop
jge
sbb
pop
xchg
or
inc
out
idiv
cmps
fst
inc
fistp
data16
jmp
lods
xor
pop
dec
je
jle
data16
jb
jmp
adc
push
jne
cmp
sbb
iret
xchg
fist
shl
adc
add
xchg
in
icebp
pop
ins
ror
pop
mov
fprem1
jns
retf
fldenv
mov
les
jno
mov
mov
test
and
dec
in
xchg
mov
ret
int3
aad
idiv
clc
loopne
jo
(bad)
int
cld
and
bound
fild
pop
mov
movs
dec
pushf
add
xor
ins
jo
mov
push
addr16
cdq
push
hlt
pop
push
or
mov
xlat
cmps
pushf
sub
dec
dec
mov
pushf
mov
into
or
test
(bad)
add
mov
rcr
sti
add
pop
mov
or
pop
retf
jnp
ja
mov
xchg
arpl
or
pop
cmp
fsubr
fsub
shl
xchg
fldcw
aaa
cmp
retf
out
dec
repnz
enter
pop
add
fdiv
jle
ins
leave
mov
xchg
and
mov
sub
and
xchg
xchg
jnp
stc
add
sub
ss
aas
cmp
dec
and
movs
movs
xlat
pop
and
sbb
retf
push
(bad)
cmp
xchg
mov
mov
daa
enter
fs
sti
or
enter
mov
jle
cmp
out
mov
mov
xor
fwait
add
or
mov
pop
and
gs
pop
jle
inc
or
loopne
lock
mov
bound
fst
jno
scas
pop
fisttp
xor
addr16
xchg
dec
and
mov
aad
imul
jge
rol
xchg
adc
(bad)
adc
fstp
outs
pop
mov
js
adc
lds
jno
fimul
addr16
jmp
push
mov
xor
xchg
inc
test
pop
outs
jno
mov
cmps
inc
dec
xchg
xchg
jle
cwde
push
or
test
repz
shl
push
inc
add
sti
cs
mov
movs
push
repz
xor
ds
test
xor
pop
sbb
push
dec
test
mov
shr
lea
je
ret
mov
sub
push
xor
outs
and
mov
xchg
iret
dec
sbb
sub
sub
xor
xchg
sti
repnz
push
fimul
aaa
cmps
leave
lods
mov
mov
add
jbe
lods
outs
test
nop
push
xchg
mov
rol
dec
cld
mov
push
add
enter
jne
jb
out
repz
xchg
mov
dec
xchg
mov
cmps
or
and
mov
dec
(bad)
cli
mov
call
mov
push
fidivr
ss
lods
stos
inc
retf
sub
arpl
ss
jmp
retf
mov
push
ss
ins
xlat
pop
push
adc
jg
cmp
push
push
push
nop
das
sbb
xchg
push
and
ds
mov
sbb
ds
or
jo
jbe
out
xor
adc
push
dec
lahf
in
jmp
and
adc
dec
mov
jl
ins
(bad)
cdq
pop
sub
les
outs
ins
xchg
sahf
mov
pause
dec
pop
gs
pop
jle
push
out
sub
adc
jle
mov
mov
out
ror
and
inc
push
push
rol
mov
call
xor
xchg
pop
enter
cmp
aad
push
add
adc
outs
push
gs
jmp
mov
inc
(bad)
or
sti
and
xchg
jg
push
outs
lock
scas
and
(bad)
jmp
xor
pop
jnp
js
xchg
mov
movs
lock
ds
fld
cs
dec
retf
pop
(bad)
pop
and
cmp
sub
in
and
cdq
add
and
xor
mov
stc
(bad)
push
cs
or
sahf
pop
ror
push
add
idiv
sub
inc
je
sbb
adc
and
add
mov
sbb
idiv
mul
xor
jl
inc
xor
and
fldenv
cmp
jecxz
mov
fbld
jg
(bad)
out
or
mov
inc
and
lahf
mov
(bad)
push
xor
and
xor
into
and
mov
jo
or
dec
test
mov
fidiv
push
mov
or
adc
mov
cmp
mov
daa
fimul
imul
out
stos
jno
lds
popf
cmp
xlat
lahf
cdq
cs
sti
mov
jmp
add
jmp
jbe
test
into
inc
xor
push
cmp
call
sub
shr
and
aas
inc
mov
test
cwde
lods
test
jmp
imul
movs
mov
mov
jns
mov
popf
pop
cmp
or
mov
inc
ffree
clc
sub
and
xchg
mov
dec
stos
rcl
ss
jmp
add
pop
xchg
and
jne
mov
inc
mov
dec
xchg
push
xchg
jne
je
(bad)
jle
sar
mov
sub
adc
inc
mov
sar
and
lahf
mov
loope
pushf
sbb
(bad)
push
or
pop
outs
shl
jg
stos
shl
cdq
push
push
cwde
sbb
hlt
sub
cmps
xchg
aas
push
dec
sbb
mov
cdq
jp
fisttp
imul
mov
sub
test
in
xor
fistp
ds
shr
mov
jne
cmp
das
push
sbb
scas
adc
push
jge
ror
xor
pop
push
inc
pushf
mov
adc
es
xchg
mov
or
cmps
pop
cmp
add
repz
dec
out
imul
cs
or
fs
jno
fs
popa
and
inc
pop
fidiv
ret
xor
adc
mov
aas
xchg
(bad)
stc
pop
jmp
rcr
cmp
rcr
lods
neg
mov
xchg
aam
mov
leave
popa
sbb
out
ins
sub
repz
jo
int
fwait
cmp
xchg
sbb
test
scas
lock
sub
jne
push
ret
scas
adc
outs
add
test
jno
cmp
out
add
push
xchg
dec
add
sahf
enter
inc
mov
jo
loop
dec
jmp
pop
push
xchg
(bad)
pop
mov
ror
pushf
dec
xor
lock
or
aaa
ja
test
add
retf
aam
xor
dec
mov
inc
pop
sbb
sbb
repz
ss
cmp
fsubr
addr16
pop
ins
mov
retf
and
mov
adc
adc
loopne
mov
lock
fld
jp
imul
mov
mov
lods
test
icebp
adc
rol
les
pop
push
ret
mov
sub
push
lds
jbe
push
sahf
mov
je
jb
jmp
movs
call
addr16
pop
inc
mov
rcr
fidivr
mov
cmps
clc
pushf
hlt
add
mov
rcl
ret
jmp
lea
cmps
iret
ficomp
adc
pop
xchg
pop
retf
outs
(bad)
popa
push
loop
adc
cmp
adc
xchg
fwait
push
mov
adc
xchg
mov
jmp
xor
jae
push
mov
repnz
add
mov
bound
cdq
popa
adc
xor
mov
data16
dec
repnz
dec
lds
rcr
call
pop
add
in
ss
xchg
xchg
mov
call
inc
es
das
pushf
nop
mov
mov
xor
inc
jge
push
(bad)
into
call
imul
nop
outs
mov
push
int3
clc
jg
cwde
pop
mov
mov
stos
out
mov
std
jns
push
cmc
mov
rol
(bad)
enter
mov
arpl
lock
rcr
push
mov
jp
jge
pusha
in
sub
loop
sub
loopne
pushf
fld
xchg
inc
xor
push
in
std
sub
fisub
sbb
sti
es
cwde
adc
lods
inc
movs
icebp
(bad)
xlat
aam
arpl
fidivr
jae
sahf
xor
jns
outs
mov
inc
and
shr
push
mov
pop
lahf
imul
fnstenv
xor
dec
ret
adc
lods
lods
ins
loopne
sti
push
dec
cwde
mov
int
pop
addr16
call
je
arpl
fmul
cmps
rcr
sub
jecxz
cwde
adc
mov
stos
rcl
xchg
xor
fnstcw
retf
shl
push
popf
push
outs
or
xor
retf
xlat
mov
ret
jge
ret
dec
repnz
imul
repnz
out
jmp
ins
push
dec
add
fcomp
sub
lds
or
mov
inc
scas
iret
repz
sub
jecxz
enter
dec
sbb
or
nop
fs
js
mov
and
cmp
and
movs
repnz
inc
xchg
outs
mov
inc
out
dec
fbstp
mov
sub
dec
out
sub
xchg
cmp
mov
push
cmc
sar
pop
stos
in
dec
add
fbstp
adc
ror
jmp
adc
je
mov
fmul
mov
add
push
repnz
pop
stos
mov
adc
outs
jmp
jl
push
push
ds
(bad)
jp
repz
sub
sahf
lea
paddw
call
aas
fadd
mov
(bad)
add
dec
jmp
inc
rcl
push
movs
add
xor
cmp
push
ja
xchg
out
xchg
loopne
stos
add
popf
cmp
fadd
jb
into
xchg
movs
adc
aaa
jns
jmp
inc
dec
stos
imul
or
mov
int3
adc
sahf
rol
inc
mov
int3
xor
call
adc
enter
scas
inc
jne
movs
mov
dec
xor
adc
push
mov
das
sub
jecxz
inc
imul
inc
fdivr
push
test
scas
repnz
cmp
retf
ss
xchg
arpl
les
mov
neg
repz
in
sub
scas
test
imul
dec
inc
iret
adc
or
shl
pop
xchg
loopne
fs
and
jb
and
mov
add
arpl
icebp
in
push
inc
xchg
and
inc
stc
cmps
xlat
xor
sbb
outs
push
cmc
inc
in
xor
dec
mov
mov
push
out
rcl
and
jnp
scas
call
push
sub
js
adc
ja
sub
out
cmc
dec
int3
outs
xor
pusha
adc
movs
sub
cmp
mov
or
aaa
xlat
push
xchg
inc
sub
sbb
and
faddp
push
sub
pop
lea
dec
push
dec
adc
sbb
into
rol
push
push
ficom
cmp
pop
jnp
xor
sub
fisttp
mov
sbb
fcom
js
jae
arpl
aaa
sub
push
xor
mov
fs
mov
cld
mov
leave
xchg
mov
or
fs
xchg
std
loop
cmc
xchg
jg
or
fdivr
inc
pusha
mov
ds
and
push
repz
test
push
fsubrp
ret
adc
fucomip
(bad)
in
(bad)
dec
in
push
dec
cmp
cmp
fld
ds
mov
ds
and
lds
add
stos
movs
rcl
cmps
mov
arpl
in
dec
arpl
mov
mov
fild
push
loope
jmp
repz
mov
sbb
mov
test
mov
and
jnp
movs
dec
sbb
mov
cli
mov
in
cld
ins
push
fld
fisttp
jmp
jp
js
retf
das
aam
inc
and
xchg
push
mov
fwait
mov
sbb
sahf
js
cs
shr
pushf
and
addr16
shl
jle
icebp
popa
fsubr
mov
mov
jmp
fsub
push
mov
out
cmc
mov
int
std
mov
mov
add
add
cmp
sub
stc
pop
push
xor
jge
out
ret
sub
add
arpl
cli
mov
sbb
push
fmul
dec
stc
jno
mov
inc
push
mov
stos
sbb
mov
or
dec
ror
test
clc
adc
cmp
ret
mov
jbe
(bad)
pop
das
adc
neg
push
loop
xchg
in
rcl
sub
jo
loope
mov
movs
xchg
lds
sbb
inc
aad
mov
out
lahf
sbb
mov
mov
xchg
fidivr
jns
pop
jmp
jg
cmp
add
mov
in
or
push
fsubr
jecxz
cmp
(bad)
inc
enter
(bad)
das
and
fst
or
fnstsw
push
sub
pop
test
adc
iret
aaa
push
int
add
imul
and
cmc
mov
aam
cmp
hlt
add
cwde
xor
gs
cli
xchg
inc
out
icebp
fwait
mov
test
push
aas
and
gs
mov
or
in
mov
inc
sub
mov
mov
push
pop
mov
xor
xchg
ins
sbb
inc
nop
push
jmp
ret
push
or
sub
jnp
inc
xchg
ins
jg
and
xchg
cmp
add
lods
and
pop
mov
cld
das
and
xchg
ret
jecxz
in
stos
pop
xor
sub
pop
hlt
or
xchg
pop
and
xchg
movs
jmp
fwait
xor
push
sahf
stc
dec
cmc
in
inc
ficomp
(bad)
fistp
sbb
xchg
inc
pushf
pop
js
pop
test
sbb
push
mov
jno
enter
loope
jns
sbb
iret
sub
push
rcl
xor
xchg
cwde
mov
pop
shr
xor
jae
shl
int3
sub
lds
outs
mov
outs
inc
cmp
add
in
xchg
pop
mov
xchg
xchg
call
movs
in
cmp
and
clc
adc
or
test
out
cmp
call
xchg
out
popf
loope
int3
jnp
jmp
cmp
mov
inc
sub
outs
cmp
scas
aam
gs
inc
push
cmc
test
sti
loopne
adc
inc
cmp
sbb
push
mov
aad
adc
fist
fwait
jns
loop
mov
lods
data16
in
cmp
or
mov
dec
jmp
inc
stos
inc
pop
retf
dec
popf
aaa
push
adc
jl
adc
js
mov
cwde
mov
les
add
ret
retf
jae
adc
inc
in
and
fisub
xor
sti
sub
xchg
add
jle
mov
push
test
pop
leave
mov
mov
ins
sahf
test
outs
data16
fdivr
xor
popf
jns
mov
cmps
scas
imul
pop
or
test
xchg
jl
js
test
movs
in
mov
and
pop
jno
add
inc
ret
adc
pop
adc
es
lahf
fsub
xchg
mov
rcl
cmp
and
pop
in
inc
and
cmc
cs
mov
test
jae
shr
(bad)
sub
pop
icebp
adc
jo
inc
dec
inc
lods
adc
adc
hlt
test
(bad)
pop
sub
dec
mov
int3
into
adc
push
mov
push
lods
les
and
pop
imul
ins
pop
loopne
ds
jne
push
dec
and
jne
in
jns
fstp
in
add
xlat
jmp
out
inc
aas
adc
add
es
or
ins
xchg
dec
out
cmp
xlat
xor
or
or
add
jmp
js
mov
mov
inc
jmp
lock
(bad)
inc
xor
dec
fsubrp
cmp
inc
iret
mov
mov
xor
stc
pop
push
xchg
sti
cmp
dec
or
inc
or
stos
dec
dec
(bad)
mov
mov
out
popf
pushf
hlt
in
fcomp
out
sar
inc
shr
fwait
rcl
add
int
or
dec
sub
pop
movs
jg
xchg
jl
bswap
dec
xor
int
fcom
mov
clc
lods
or
xor
test
jns
rcr
nop
mov
add
aas
pusha
mov
stos
mov
adc
in
adc
sub
and
xchg
dec
sub
test
fsub
scas
cmps
mov
pop
imul
mov
sbb
sub
jbe
or
push
jbe
dec
aaa
jle
push
xchg
sbb
stos
xor
dec
or
test
and
mov
xchg
inc
jl
test
int3
or
push
mov
jae
mov
pop
mov
xor
and
popf
retf
jmp
add
retf
cmp
gs
js
add
inc
stc
lods
sub
nop
mov
je
dec
(bad)
out
mov
fucomip
dec
cs
push
and
int
out
xchg
(bad)
(bad)
mov
jmp
daa
loopne
fldenv
cld
out
(bad)
mov
bound
sti
(bad)
fcmovnbe
pop
dec
jns
test
mov
mov
inc
push
leave
mov
xchg
mov
inc
popf
adc
sub
push
cli
pusha
cdq
call
xchg
mov
iret
ret
loope
scas
cmps
mov
jmp
jge
clc
sar
mov
xchg
cs
clc
jne
sub
push
mov
xchg
call
js
xchg
cs
std
adc
xchg
and
mov
mov
cmp
or
adc
xchg
xchg
repnz
test
rol
(bad)
ja
ins
mov
adc
pop
dec
ja
sub
out
in
arpl
sti
sbb
xchg
repz
or
sub
rcl
cmp
mov
inc
xchg
(bad)
push
push
mov
out
pop
or
ja
jle
(bad)
push
jg
dec
repnz
cmp
add
or
push
jno
das
mov
xchg
pusha
jmp
xlat
mov
mov
dec
call
gs
or
test
inc
jle
cmc
inc
(bad)
loope
mov
or
dec
inc
dec
dec
or
sbb
push
xor
cmc
inc
idiv
xchg
cmps
out
movs
in
pop
push
int
adc
test
and
mov
test
jp
jbe
pusha
add
loop
cmp
cmp
out
mov
pop
mov
xor
xor
popa
jp
xor
(bad)
leave
mov
add
je
pop
or
scas
xchg
cmps
cmp
dec
mov
ins
pop
into
je
call
inc
outs
js
daa
lods
jns
int3
add
and
sbb
mov
push
repz
adc
cwde
nop
sub
push
mov
and
leave
adc
lahf
jnp
sub
sar
fcmovnbe
xchg
je
push
jmp
ins
inc
xchg
pop
jne
int3
jno
inc
sub
xor
ss
aas
xor
sbb
sub
sub
daa
or
add
movs
cdq
jg
pop
inc
int
or
xchg
adc
je
cmp
test
adc
or
jne
scas
sub
retf
nop
sub
shl
add
stos
dec
idiv
push
jmp
sbb
fadd
js
xor
out
adc
pop
(bad)
es
xchg
jp
(bad)
into
sub
adc
push
jmp
mov
or
aam
arpl
xchg
sub
cmp
sbb
mov
xchg
sub
fs
out
push
imul
popa
fnstsw
cmc
(bad)
retf
shl
mov
pop
icebp
sbb
pop
es
dec
adc
push
add
mov
aas
jbe
shl
rcr
add
pop
jmp
dec
je
and
cmc
pushf
mov
push
in
push
dec
xchg
add
lahf
data16
xor
xchg
rol
jmp
in
jmp
dec
xchg
repz
fidivr
push
(bad)
mov
jp
stos
pop
out
icebp
scas
fcom
repz
mov
xchg
jle
cmp
sub
dec
fistp
inc
add
xor
jo
test
dec
cwde
xchg
cli
and
enter
mov
std
push
mov
out
jg
dec
rol
(bad)
jg
fild
pop
mov
std
out
mov
jno
sar
mov
pop
mov
ins
jbe
mov
cmp
int
lahf
dec
push
call
add
sub
inc
pop
pop
std
xor
in
xor
mov
mov
push
and
sub
ds
mov
mov
(bad)
sub
cmp
in
mov
retf
jns
loope
cmp
adc
push
xchg
out
out
pop
out
inc
test
dec
ds
jl
inc
inc
outs
sbb
mov
leave
imul
stos
mov
mov
cli
xor
adc
add
dec
rol
adc
jmp
dec
fdiv
or
sub
(bad)
iret
iret
push
out
(bad)
jmp
add
clc
adc
sti
stos
retf
test
push
push
push
loop
gs
mov
loop
mov
push
sbb
mov
std
xor
mov
cmc
pop
das
stos
sub
sub
and
repz
rcr
xor
mov
(bad)
pop
aaa
mov
push
add
cmp
test
and
xlat
repnz
pushf
(bad)
repnz
mov
push
or
lods
(bad)
rsm
or
or
cmc
stc
mov
push
dec
sub
mov
scas
push
cmp
mov
(bad)
sbb
test
jb
cli
pusha
xchg
pop
cwde
sub
sbb
sbb
int
or
dec
jae
push
xchg
mov
and
loop
adc
add
jl
aad
xchg
mov
cli
js
loope
nop
aaa
jo
jmp
xchg
push
dec
sbb
lds
ss
cwde
daa
sbb
adc
js
nop
sbb
inc
rol
gs
dec
shl
xor
push
pop
xor
sub
dec
sub
aad
push
(bad)
cmps
gs
les
cmc
and
pusha
(bad)
or
sub
hlt
pop
mov
jecxz
pop
pusha
mov
mov
xchg
ins
sar
into
dec
pop
mov
add
mov
inc
inc
into
mov
out
and
addr16
sub
std
dec
adc
dec
push
mov
bound
sar
mov
push
lods
xchg
popf
cld
or
daa
or
pop
aad
jns
daa
pop
xor
and
shl
ret
xor
out
sbb
rcr
scas
jp
push
ss
inc
aam
adc
and
call
mov
ins
mov
lds
or
call
inc
(bad)
sub
cwde
sbb
cmp
push
pop
int3
lea
nop
cmps
js
add
fdivr
xor
and
outs
pop
sti
jno
in
fstp
(bad)
retf
dec
dec
dec
dec
aad
mov
fnstcw
scas
fnstsw
fadd
int
out
imul
cmps
pop
repnz
push
cs
nop
or
xchg
retf
in
mov
loop
pop
das
aas
and
mov
mov
test
dec
xor
out
jmp
sti
mov
cmp
(bad)
mov
es
int
cdq
fnstenv
dec
mov
repz
xchg
cld
or
sub
imul
jl
aas
mov
mov
fs
ds
icebp
push
or
pop
sub
sar
sti
ret
ins
(bad)
jmp
cli
into
adc
inc
pop
arpl
popa
inc
ins
sti
jae
adc
push
fisttp
jne
xchg
xchg
xor
stc
das
and
sbb
push
popf
push
pusha
fdiv
cs
mov
movzx
fist
loop
dec
pop
cli
jo
int
cdq
rcr
jae
sub
cmp
dec
inc
test
and
movs
xchg
hlt
out
das
push
push
xchg
aam
das
and
mov
and
sar
sbb
dec
mov
fmul
imul
add
outs
sbb
pop
xchg
aam
cmp
mov
loope
into
cmp
lods
xchg
inc
iret
xlat
xor
push
mov
call
arpl
xchg
sub
movs
pop
ror
adc
xor
pop
es
jl
je
pop
test
retf
push
jne
out
pop
sbb
(bad)
jle
jle
mov
loopne
pop
xor
loope
jbe
jne
dec
jmp
inc
pop
push
js
nop
icebp
ret
mov
cdq
pop
ret
inc
mov
cmp
jmp
sub
jno
sbb
mov
push
sbb
pop
in
xchg
retf
jne
loope
mov
scas
inc
sti
sub
mov
sbb
call
pop
pop
ficomp
aad
addr16
mov
cmc
out
cwde
outs
retf
push
adc
dec
inc
imul
xor
cdq
pop
xor
out
xor
mov
sub
xor
stos
rcl
or
imul
aam
adc
cld
push
outs
loop
add
mov
jmp
mov
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
inc
push
inc
inc
push
mov
add
hlt
or
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
arpl
sub
push
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
inc
push
call
add
adc
add
add
jae
add
arpl
outs
add
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
arpl
add
add
or
outs
outs
inc
popa
je
or
outs
outs
push
imul
push
jns
je
ins
cs
jb
ja
outs
addr16
imul
add
add
or
add
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
mov
add
add
add
and
add
add
add
test
add
push
add
add
add
add
add
add
add
add
or
add
add
add
test
mov
(bad)
inc
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
adc
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
push
jns
je
ins
cs
jb
ja
outs
addr16
arpl
sub
push
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
jns
je
ins
cs
outs
fs
outs
ins
cs
gs
bound
inc
je
jb
bound
gs
and
jae
gs
sub
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
jns
je
ins
cs
ins
outs
bound
imul
cs
jne
je
jb
dec
outs
outs
sub
ins
jae
outs
jb
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
jns
je
ins
cs
jb
ja
outs
addr16
imul
jae
gs
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
int3
mov
inc
push
call
cmp
sbb
push
mov
xchg
sbb
test
mov
add
add
add
add
add
xchg
add
cmps
add
add
add
add
add
add
add
add
add
add
add
and
je
push
add
add
outs
add
jo
push
add
inc
add
imul
add
es
je
push
add
add
add
jns
dec
add
jb
add
dec
add
outs
add
add
add
adc
add
add
jae
add
arpl
outs
add
add
add
sbb
je
push
add
add
add
imul
add
or
add
add
add
jae
add
add
ja
inc
add
imul
add
sub
add
outs
add
jb
add
jae
inc
add
jb
xor
add
outs
add
add
imul
jae
(bad)
or
add
and
je
push
add
add
add
popa
add
add
popa
add
ins
add
or
add
add
add
jae
add
add
add
popa
add
add
add
sbb
add
add
jae
add
jb
imul
imul
sub
add
and
je
push
add
add
add
jns
dec
add
imul
je
into
adc
add
jo
jb
outs
add
jb
add
jae
inc
add
jb
xor
add
add
imul
add
adc
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
arpl
add
add
or
outs
outs
inc
popa
je
or
outs
outs
push
imul
push
jns
je
ins
cs
jb
ja
outs
addr16
imul
add
add
or
add
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
mov
add
add
add
and
add
add
add
test
add
push
add
add
add
add
add
add
add
add
or
add
add
add
test
mov
(bad)
inc
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
sub
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
pop
push
jns
je
ins
cs
outs
fs
outs
ins
cs
gs
bound
inc
je
jb
bound
gs
add
add
jbe
ins
jne
pop
pop
add
add
add
add
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
push
jns
je
ins
cs
ins
outs
bound
imul
cs
jne
je
jb
dec
outs
outs
or
add
or
pop
imul
outs
ins
jns
arpl
jo
jb
dec
outs
outs
or
je
outs
outs
pop
outs
jne
dec
outs
outs
or
popa
je
push
imul
or
ins
outs
fs
jb
ins
pop
fs
je
dec
je
ins
or
ins
je
jb
dec
inc
push
ins
pop
outs
popa
ins
adc
jne
gs
jae
jb
jbe
jb
imul
add
add
add
and
jae
gs
cs
ins
outs
bound
imul
cs
outs
ins
jo
jb
dec
outs
outs
sbb
gs
cs
ins
outs
bound
imul
cs
gs
dec
outs
outs
and
gs
cs
ins
outs
bound
imul
cs
jne
bound
inc
outs
jb
popa
je
outs
outs
daa
push
jns
je
ins
cs
ins
outs
bound
imul
cs
popa
je
push
imul
popa
je
outs
outs
sbb
gs
cs
ins
outs
bound
imul
cs
popa
ins
outs
fs
jb
or
add
add
add
or
add
add
add
add
or
add
add
jg
add
push
add
add
add
add
push
jns
je
ins
cs
ins
outs
bound
imul
cs
outs
ins
jo
jb
dec
outs
outs
add
add
push
ins
pop
outs
popa
ins
or
outs
xor
dec
inc
dec
inc
pop
arpl
je
jb
or
jb
push
gs
imul
or
and
jae
gs
cs
ins
outs
bound
imul
cs
outs
jb
push
gs
imul
add
add
add
add
or
add
add
gs
cs
ins
outs
bound
imul
cs
gs
dec
outs
outs
pop
add
add
ins
pop
ins
imul
jb
je
jb
ins
pop
imul
outs
ins
jns
ins
pop
arpl
je
jb
dec
popa
ins
adc
jae
outs
ins
inc
jne
je
jb
dec
popa
ins
or
outs
inc
popa
je
dec
je
ins
adc
jne
gs
jae
jb
jbe
jb
imul
outs
xor
dec
popa
outs
addr16
inc
add
add
add
add
or
or
push
add
add
sub
or
add
add
add
jg
add
add
add
add
gs
cs
ins
outs
bound
imul
cs
jne
bound
inc
outs
jb
popa
je
outs
outs
and
add
adc
ins
bound
inc
jb
jne
push
imul
jb
outs
arpl
jb
jne
push
imul
jb
outs
je
jb
jne
push
imul
jae
je
jbe
push
imul
popa
je
jbe
push
imul
bound
inc
arpl
popa
ins
push
gs
jb
je
jb
outs
jne
bound
inc
jb
jne
push
gs
jb
je
jb
arpl
jb
outs
arpl
jb
jne
push
gs
jb
je
jb
arpl
jb
outs
arpl
arpl
popa
ins
push
gs
jb
je
jb
arpl
jb
outs
arpl
jns
bound
adc
jae
inc
jne
jb
outs
arpl
jns
bound
or
outs
push
jns
bound
push
jo
jae
je
jbe
dec
outs
imul
push
jns
bound
push
outs
gs
je
jbe
dec
outs
imul
push
jns
bound
pop
jo
jb
outs
je
arpl
popa
ins
push
gs
jb
je
jb
jo
jb
outs
je
jb
jne
push
gs
jb
je
jb
jo
jb
outs
je
jns
bound
push
jo
jb
imul
outs
ins
or
popa
je
jbe
inc
imul
pop
fs
je
dec
je
ins
adc
ins
bound
inc
arpl
popa
ins
inc
imul
jne
jb
outs
arpl
arpl
popa
ins
inc
imul
jne
jb
outs
arpl
outs
jae
je
jbe
push
popa
je
gs
pop
arpl
jb
outs
arpl
gs
je
jbe
push
popa
je
gs
adc
gs
gs
je
jbe
push
popa
je
gs
push
jo
jb
outs
je
outs
jae
je
jbe
push
popa
je
gs
push
jo
jb
outs
je
gs
je
jbe
push
popa
je
gs
adc
gs
outs
je
arpl
popa
ins
inc
imul
imul
jae
imul
imul
outs
ins
jns
ins
pop
jne
gs
jae
jb
jbe
jb
imul
dec
outs
jbe
jb
popa
outs
je
jbe
ins
imul
jae
inc
jae
jne
bound
pop
jbe
ins
imul
jae
inc
jae
jne
jb
outs
arpl
pop
pop
add
add
add
add
add
add
add
add
add
add
or
or
or
or
or
or
add
add
add
or
add
or
add
add
or
add
push
or
add
add
push
or
add
add
add
or
add
add
push
add
add
or
adc
add
add
movs
or
adc
add
add
dec
push
adc
add
or
imul
push
adc
add
or
outs
imul
or
add
add
push
add
add
and
add
loop
mov
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
or
add
add
add
or
add
add
sbb
add
or
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
add
add
push
sbb
xor
push
add
add
xor
add
ss
and
add
add
push
and
add
add
push
and
add
add
or
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
add
add
or
add
add
jnp
hlt
and
push
cmc
shl
in
mov
outs
leave
push
or
mov
pop
repz
mov
jg
sub
ds
sub
std
cmp
(bad)
out
cmp
adc
jb
pop
jbe
push
jge
adc
stos
mov
or
out
xor
retf
mov
add
ins
mov
mov
cmps
(bad)
outs
adc
inc
push
scas
pop
sub
mov
add
add
and
add
adc
add
cmp
inc
push
jg
fcom
cwde
or
add
add
ja
outs
jae
jbe
jo
bound
add
or
jle
or
add
add
jo
or
add
add
add
pop
inc
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
js
push
push
mov
call
out
into
mov
cmc
sub
xchg
inc
xor
fcomp
inc
mov
xlat
pop
mov
adc
std
mov
cmps
and
mov
bound
inc
rcl
es
(bad)
mov
pop
adc
(bad)
push
adc
add
sti
shl
out
loope
(bad)
pop
aaa
ret
xchg
pop
inc
add
mov
outs
mov
lea
cli
inc
popa
popf
ins
or
in
inc
jmp
pusha
dec
mov
mov
cli
daa
mov
aam
sbb
aam
in
(bad)
clc
jl
pop
gs
lods
les
hlt
xchg
jmp
inc
cmps
and
ret
pop
pop
gs
int3
or
jge
out
call
pop
test
loopne
sub
adc
add
cmp
xor
rcl
sub
mov
add
add
dec
cmp
je
dec
mov
add
add
jmp
dec
mov
add
add
jmp
push
mov
mov
cmp
je
mov
jmp
mov
pop
jmp
push
pop
outs
stc
fs
and
xchg
scas
mov
sbb
icebp
xchg
push
outs
xchg
xchg
xchg
test
push
or
enter
push
pushw
dec
sbb
jbe
xor
adc
or
or
dec
sbb
sahf
mov
mov
sbb
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
or
xchg
test
add
add
add
or
add
jo
add
mov
add
mov
add
add
add
add
add
add
add
call
add
add
add
add
add
xor
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
js
add
add
add
add
add
nop
add
add
add
add
add
test
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
push
add
add
add
add
add
dec
xchg
or
test
add
hlt
mov
add
sbb
or
sub
add
inc
pop
or
and
add
in
add
add
add
fs
or
dec
add
add
add
add
or
add
add
add
add
add
add
sub
add
adc
add
and
add
add
and
add
add
inc
add
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
aad
lods
(bad)
sar
cmps
(bad)
sar
cmps
(bad)
sar
cmps
(bad)
sar
cmps
(bad)
sar
cmps
(bad)
sar
cmps
(bad)
sar
cmps
(bad)
fcmovb
mov
aam
sar
retf
into
mov
call
retf
into
mov
call
rcl
(bad)
fcmovu
(bad)
(bad)
(bad)
fdivr
jecxz
(bad)
call
call
out
call
les
call
pop
or
xchg
pop
or
cdq
pop
or
call
call
arpl
call
lods
mov
out
out
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
xlat
lds
jmp
pop
add
xchg
push
add
call
call
pusha
add
pushf
pop
add
popf
pop
add
shr
(bad)
jmp
jmp
jmp
call
lds
jmp
popa
add
xchg
push
add
fwait
pop
add
call
pop
add
pushf
pop
add
popf
pop
add
shr
(bad)
jmp
(bad)
call
les
jmp
imul
(bad)
jle
sub
imul
dec
pop
or
popf
pop
add
lds
out
(bad)
out
in
in
(bad)
(bad)
aad
loop
(bad)
aam
mov
push
xor
outs
push
sub
jmp
cmp
mov
jb
call
pop
add
les
out
(bad)
in
out
(bad)
mov
shl
retf
mov
push
(bad)
mov
jle
jmp
and
call
push
adc
mov
sub
mov
inc
scas
mov
lock
jmp
fcmovnb
mov
aad
mov
inc
mov
push
call
ja
call
push
adc
call
mov
push
hlt
hlt
push
out
jmp
iret
mov
call
retf
ret
mov
dec
lods
jle
ret
inc
fwait
pusha
(bad)
mov
mov
mov
push
add
cwde
pop
add
lds
repz
icebp
in
jmp
mov
(bad)
call
fcom
call
leave
sar
mov
xchg
call
mov
call
mov
dec
cmps
jae
les
imul
xchg
pop
(bad)
mov
ret
cmc
cmc
cmc
(bad)
clc
hlt
in
push
retf
jge
in
faddp
jmp
(bad)
iret
(bad)
(bad)
iret
call
(bad)
mov
aad
mov
aam
scas
call
ret
rol
stos
dec
mov
popf
dec
mov
popf
jmp
fcmove
(bad)
cli
cli
cli
(bad)
cld
cli
clc
(bad)
cli
in
sar
clc
repnz
(bad)
into
(bad)
fcmovnbe
aam
(bad)
fdivr
(bad)
fdivr
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fcos
fstp
fcos
fstp
fcos
fstp
fcos
(bad)
fcos
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
(bad)
fcmovbe
leave
(bad)
call
call
fistp
loope
rcr
fcmovnbe
(bad)
lahf
fxch
ret
lahf
fmul
rcr
into
ret
lahf
fcmovnbe
leave
lahf
xlat
into
leave
lahf
xlat
into
leave
lahf
fcom
int
loop
rcr
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
add
add
add
add
add
add
and
add
add
adc
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
hlt
loope
sbb
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
iret
mov
cld
div
sbb
iret
mov
movs
dec
mov
movs
dec
mov
movs
dec
mov
movs
dec
mov
movs
dec
mov
movs
dec
mov
movs
dec
mov
movs
dec
mov
movs
dec
mov
movs
dec
mov
movs
dec
mov
movs
dec
mov
movs
dec
mov
movs
dec
mov
movs
(bad)
fmulp
mov
call
retf
(bad)
int
call
retf
iret
(bad)
rol
sar
enter
mov
aad
(bad)
call
int3
(bad)
call
mov
dec
(bad)
ror
(bad)
call
ror
(bad)
fcompp
aad
fcompp
(bad)
(bad)
fcompp
(bad)
(bad)
fcompp
(bad)
(bad)
(bad)
xlat
jmp
fcmovnu
jmp
(bad)
jmp
fstp
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
fstp
jmp
(bad)
call
enter
mov
mov
fcmovnu
(bad)
dec
retf
leave
dec
mov
dec
enter
mov
dec
leave
(bad)
dec
leave
(bad)
dec
mov
dec
mov
call
iret
into
call
rcl
call
aam
(bad)
(bad)
fdivr
fcmovnu
(bad)
fcmovnu
(bad)
loope
loope
in
in
in
(bad)
in
in
in
(bad)
in
in
in
push
lock
repnz
repnz
icebp
icebp
push
lock
out
out
out
(bad)
fcmove
(bad)
call
mov
mov
call
pop
adc
xchg
pop
adc
xchg
pop
adc
xchg
pop
adc
xchg
pop
adc
xchg
pusha
adc
cwde
bound
call
popa
adc
xchg
popa
ud0
ud0
data16
fwait
gs
pushf
data16
sahf
push
jmp
loop
(bad)
jmp
jmp
in
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
fxch
(bad)
call
mov
mov
jmp
pop
add
cdq
pop
add
call
call
pop
add
popf
pop
add
sahf
pop
add
pushf
pop
add
pushf
pop
add
popf
pop
add
mov
arpl
jmp
pop
add
sahf
pusha
add
mov
jbe
(bad)
fcmovu
(bad)
jecxz
jecxz
jecxz
jecxz
jmp
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
call
mov
mov
jmp
data16
cdq
pop
add
cwde
pop
add
xchg
pop
add
cwde
pop
add
cdq
pop
add
fwait
pop
add
pushf
pop
add
call
call
add
lahf
popa
add
sahf
pusha
add
pushf
pop
add
pushf
pop
add
mov
jne
(bad)
(bad)
fdivrp
out
out
out
out
jmp
(bad)
jmp
jmp
jmp
(bad)
call
int
call
mov
mov
jmp
push
add
xchg
pop
add
xchg
push
add
xchg
push
add
cwde
pop
add
call
push
push
call
pop
add
popf
pop
add
sahf
pusha
add
popf
pop
add
fwait
pop
add
fwait
pop
add
sahf
pusha
add
mov
(bad)
jmp
out
jmp
out
(bad)
jmp
(bad)
jmp
(bad)
call
out
call
int3
(bad)
call
mov
mov
jmp
push
jmp
push
add
xchg
push
add
xchg
push
add
cwde
pop
add
call
jmp
pop
call
add
popf
pop
add
sahf
pop
add
popf
pop
add
fwait
pop
add
fwait
pop
add
sahf
pusha
add
mov
(bad)
jmp
jecxz
jmp
loop
(bad)
call
jmp
(bad)
jmp
(bad)
call
out
call
retf
aam
lods
call
les
jmp
add
mov
pop
add
xchg
push
add
xchg
push
add
cwde
pop
add
mov
cmp
dec
pop
add
fwait
pop
add
sahf
pop
add
lahf
popa
add
sahf
pop
add
pushf
pop
add
popf
pop
add
mov
jbe
jmp
loope
(bad)
call
out
(bad)
jmp
(bad)
jmp
jmp
jmp
(bad)
call
retf
sar
mov
jmp
outs
add
mov
bound
call
dec
adc
xchg
pop
add
call
dec
pop
add
cwde
pop
add
(bad)
push
add
mov
call
pop
add
pushf
pop
add
lahf
popa
add
mov
in
(bad)
jmp
jmp
jmp
(bad)
out
out
out
(bad)
in
in
in
(bad)
jmp
jmp
jmp
call
retf
(bad)
call
mov
mov
jmp
adc
cmps
jo
jmp
push
call
jmp
sbb
call
inc
inc
dec
add
cmp
push
pop
call
pop
sub
mov
call
pusha
add
mov
jmp
push
repz
icebp
icebp
push
lock
in
jmp
sar
les
jmp
out
call
retf
(bad)
mov
mov
push
test
push
jnp
jmp
push
push
(bad)
ds
and
ja
pop
call
ud0
jo
inc
add
ins
inc
add
call
jne
(bad)
jmp
lock
out
out
out
push
icebp
icebp
jmp
fcmovbe
(bad)
mov
mov
rcl
call
int3
(bad)
mov
mov
push
mov
mov
cmp
mov
cmp
mov
xor
inc
inc
inc
inc
add
inc
add
dec
or
(bad)
jnp
dec
call
fwait
jmp
outs
and
cdq
addr16
jmp
push
call
pop
add
mov
call
out
(bad)
out
out
out
push
repnz
call
mov
ret
inc
pushf
cmp
call
(bad)
call
shr
(bad)
mov
push
(bad)
mov
nop
dec
(bad)
mov
xchg
inc
call
pop
call
sbb
inc
add
call
pop
inc
jmp
adc
movs
push
dec
xchg
and
lea
inc
pop
add
mov
jmp
push
repnz
icebp
icebp
push
cmc
cmc
(bad)
jmp
dec
xchg
ins
dec
mov
jmp
shl
(bad)
mov
pop
(bad)
mov
xchg
push
(bad)
mov
mov
ins
call
push
call
pop
pop
dec
cmp
inc
mov
add
call
xchg
(bad)
mov
inc
add
fwait
pop
add
mov
out
(bad)
out
out
out
(bad)
out
out
out
push
cmc
cmc
(bad)
in
loope
dec
call
into
cmps
test
in
in
in
(bad)
fmul
enter
mov
into
ret
enter
ret
mov
addr16
popf
arpl
rcr
inc
test
push
push
or
fwait
test
mov
xor
ins
dec
adc
inc
or
jb
sbb
jle
add
call
(bad)
jmp
jmp
repz
repnz
div
(bad)
out
in
call
mov
je
shr
(bad)
fxch
enter
mov
rol
mov
dec
cmps
jbe
(bad)
movs
jb
(bad)
mov
ins
dec
mov
call
xchg
cmp
mov
aas
jmp
dec
ud0
sbb
addr16
ud0
call
push
add
xchg
push
add
call
(bad)
out
out
out
push
div
push
cmc
cmc
(bad)
stc
stc
stc
push
out
(bad)
fldcw
jne
xlat
mov
(bad)
out
out
out
(bad)
(bad)
int
aam
mov
fstp
aad
retf
dec
lods
cmp
retf
stos
jp
retf
call
mov
call
pop
(bad)
mov
nop
dec
(bad)
mov
lea
mov
push
add
xchg
push
add
xchg
push
add
xchg
push
add
xchg
push
add
cdq
pop
add
sahf
jno
(bad)
jmp
push
repnz
stc
stc
stc
push
call
jb
loopne
ja
fdiv
icebp
(bad)
call
int3
mov
dec
mov
mov
shl
test
into
scas
cmp
mov
dec
mov
dec
test
pop
(bad)
mov
xchg
pop
(bad)
mov
xchg
pop
push
adc
xchg
push
add
xchg
push
add
xchg
push
add
cdq
pop
add
sahf
jno
(bad)
in
in
in
push
cmc
cmc
push
cmc
cmc
(bad)
cli
cli
cli
push
jmp
out
js
loopne
mov
repnz
call
int3
sar
ror
dec
shl
aam
xchg
call
mov
call
mov
call
mov
call
mov
dec
mov
dec
scas
cmp
mov
fs
popf
arpl
ret
inc
lahf
gs
lahf
gs
mov
cmp
push
pop
(bad)
out
out
out
push
div
push
div
(bad)
sti
sti
sti
push
in
(bad)
in
ret
in
les
in
mov
repz
jecxz
(bad)
fxch
mov
dec
shl
xlat
mov
cdq
call
mov
xchg
call
mov
nop
call
mov
call
mov
dec
test
inc
mov
outs
dec
movs
jo
enter
enter
enter
enter
leave
cmps
jno
mov
in
in
push
hlt
hlt
push
hlt
hlt
(bad)
cli
cli
cli
push
out
loope
cmc
rol
(bad)
jmp
xchg
push
repz
loope
(bad)
fxch
mov
dec
les
(bad)
fld
lahf
(bad)
fdivr
fwait
call
mov
xchg
call
mov
xchg
call
mov
(bad)
dec
mov
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
ja
out
out
out
push
div
push
div
(bad)
sti
sti
sti
(bad)
clc
bnd
(bad)
cli
jecxz
push
fbstp
jmp
loope
(bad)
fmul
mov
push
out
in
call
int
call
retf
(bad)
call
retf
ret
call
retf
(bad)
call
retf
ret
call
retf
ret
call
retf
ret
call
retf
ret
call
retf
ret
call
retf
ret
call
retf
ret
call
retf
ret
call
int3
ret
call
int3
ret
call
int3
(bad)
call
int3
(bad)
call
int3
(bad)
call
int
(bad)
(bad)
aam
std
std
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
std
(bad)
stc
div
(bad)
stc
div
(bad)
stc
div
(bad)
cld
cld
cld
jmp
loope
(bad)
fmul
mov
(bad)
call
call
jmp
(bad)
call
call
jmp
(bad)
call
call
jmp
(bad)
call
call
jmp
(bad)
call
call
jmp
(bad)
call
call
jmp
(bad)
call
call
call
jmp
out
(bad)
(bad)
xlat
(bad)
fmul
mov
call
rcl
call
ror
call
ror
call
ror
call
ror
call
ror
call
ror
call
iret
int3
call
iret
int3
call
into
retf
call
into
retf
call
into
retf
int
call
int
call
int
call
int
call
int
call
int
call
int
call
int
call
int
call
into
retf
into
retf
call
iret
int3
call
iret
int3
call
iret
int3
call
ror
call
ror
call
ror
(bad)
fcmovbe
sar
fxch
sar
call
hlt
push
cmc
repnz
repnz
push
out
in
push
in
call
(bad)
out
out
(bad)
jmp
fdivr
call
(bad)
jmp
(bad)
jmp
(bad)
into
jmp
aad
jmp
rol
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
iret
(bad)
rol
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
aam
jmp
aad
jmp
(bad)
(bad)
(bad)
sar
fcmovbe
int
fcmovnbe
int
(bad)
sar
jecxz
xlat
(bad)
fcmovbe
iret
(bad)
jmp
inc
mov
mov
mov
mov
cmp
mov
mov
cmp
mov
mov
cmp
mov
mov
cmp
mov
mov
cmp
mov
mov
cmp
mov
mov
cmp
mov
mov
cmp
mov
mov
cmp
sar
cmp
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
lock
stos
ffree
test
stos
ffree
test
stos
ffree
test
stos
ffree
test
stos
ffree
test
stos
ffree
test
stos
ffree
test
stos
ffree
test
stos
ffree
test
stos
ffree
test
stos
ffree
test
stos
ffree
test
stos
ffree
test
stos
ffree
test
stos
ffree
test
stos
ffree
test
stos
ffree
test
stos
ffree
test
stos
ffree
test
stos
ffree
test
stos
ffree
test
stos
ffree
test
stos
ffree
test
stos
stc
cmc
icebp
stos
int3
mov
movs
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
inc
mov
jmp
retf
mov
dec
sar
iret
les
dec
ret
mov
dec
ret
into
les
dec
les
dec
les
dec
ret
mov
dec
ret
mov
dec
ret
mov
dec
les
(bad)
fcom
int
fcom
int
fcom
int
(bad)
into
(bad)
fcom
int3
call
ror
call
ror
(bad)
fcom
int3
(bad)
fcom
int
(bad)
int
(bad)
into
(bad)
fcmovbe
into
(bad)
fcmovbe
iret
(bad)
fcmovnbe
iret
(bad)
fcmovnbe
iret
(bad)
fcmovnbe
iret
(bad)
fcmovnbe
iret
(bad)
fcmovnbe
iret
(bad)
fcmovnbe
iret
(bad)
fcmovbe
iret
(bad)
fcmovbe
iret
(bad)
fcmovbe
into
(bad)
(bad)
into
dec
ret
aad
mov
fcmovnb
lods
call
mov
(bad)
(bad)
(bad)
aam
(bad)
aam
(bad)
aam
(bad)
int
aad
enter
int
aad
leave
(bad)
fcom
retf
(bad)
fcom
int3
inc
ret
sar
(bad)
(bad)
(bad)
aam
(bad)
aam
(bad)
int
aad
enter
int
aad
leave
call
ror
(bad)
(bad)
int
(bad)
aad
(bad)
call
out
(bad)
call
call
call
(bad)
jmp
jmp
in
in
in
(bad)
in
in
in
(bad)
out
out
out
(bad)
out
out
out
push
lock
icebp
icebp
push
icebp
icebp
push
repnz
repz
repz
repz
repz
repnz
icebp
icebp
push
lock
out
out
out
(bad)
fcom
iret
call
shl
sar
aam
fcmovu
xlat
dec
leave
enter
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
mov
vcmpsd
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
enter
enter
enter
leave
enter
into
call
rcl
call
rcl
call
rcl
call
rcl
call
xlat
xlat
jmp
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
out
out
out
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
lock
lock
out
out
out
(bad)
out
out
out
call
ror
call
shl
sar
aam
mov
cmp
xchg
popa
sbb
xchg
pop
sbb
xchg
arpl
call
gs
nop
pop
sbb
cwde
addr16
xchg
popa
sbb
xchg
data16
xchg
arpl
call
data16
xchg
gs
cdq
push
pop
call
arpl
call
arpl
call
gs
lahf
outs
sbb
popf
ins
sbb
sahf
outs
sbb
mov
imul
ja
inc
mov
in
out
out
out
out
out
out
jmp
jmp
lock
lock
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
call
ror
call
shl
sar
sar
movs
mov
lahf
fs
fwait
pop
add
xchg
push
add
cwde
pop
add
xchg
push
add
call
call
add
call
call
pop
add
xchg
pop
add
fwait
pop
add
xchg
push
add
lahf
pusha
add
xchg
push
add
mov
push
add
mov
push
add
sahf
pop
add
call
call
push
add
mov
scas
test
in
in
in
in
in
in
out
out
jmp
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
call
shl
sar
sar
cmps
vpcmov
mov
pop
add
fwait
pop
add
xchg
pop
add
sahf
pop
add
xchg
push
add
lahf
popa
add
cwde
pop
add
lahf
popa
add
pushf
pop
add
sahf
pusha
add
sahf
pusha
add
sahf
pop
add
mov
pop
add
movs
addr16
fwait
pop
add
cmps
push
call
push
call
push
add
mov
imul
jmp
mov
jmp
in
jmp
out
jmp
out
jmp
out
(bad)
jmp
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
call
iret
int3
call
ret
fcmovnb
stos
call
mov
aam
cmps
(bad)
addr16
mov
popa
add
cwde
pop
add
xchg
push
add
call
call
push
add
call
call
pop
add
xchg
pop
add
fwait
pop
add
xchg
push
add
lahf
pusha
add
xchg
push
add
mov
push
add
mov
push
add
sahf
pop
add
call
call
pop
add
mov
mov
jmp
out
jmp
out
jmp
out
jmp
out
(bad)
jmp
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
(bad)
jmp
call
retf
call
shl
sar
aad
cmps
nop
imul
mov
addr16
sahf
popa
add
xchg
push
add
pushf
pop
add
xchg
push
add
popf
pop
add
xchg
push
add
popf
pop
add
call
call
pop
add
lahf
popa
add
fwait
pop
add
mov
pop
add
movs
push
add
movs
push
add
mov
bound
jmp
addr16
sahf
pop
add
test
add
mov
test
jmp
out
jmp
out
jmp
out
(bad)
jmp
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
call
out
aam
retf
call
shl
sar
(bad)
jmp
push
jmp
addr16
mov
push
add
call
call
push
add
call
call
fs
jg
dec
call
pop
dec
popa
add
xchg
push
add
mov
push
add
mov
pop
add
lahf
popa
add
pushf
pop
add
popf
pop
add
mov
pop
add
movs
data16
mov
test
jmp
in
jmp
in
jmp
in
(bad)
call
in
in
(bad)
jmp
jmp
jmp
(bad)
jmp
call
out
out
out
ror
retf
mov
lods
call
mov
xlat
jmp
ins
add
mov
push
add
cwde
pop
add
call
call
push
add
fwait
pop
add
cwde
pop
add
fwait
pop
add
mov
pop
inc
inc
dec
push
add
mov
push
add
mov
push
add
mov
pop
add
mov
pop
add
sahf
pusha
add
mov
pop
add
movs
push
test
in
in
in
in
in
in
in
in
out
out
in
in
in
(bad)
jmp
jmp
jmp
(bad)
call
call
out
out
out
ror
retf
mov
lods
call
mov
fdivr
test
imul
ins
add
mov
imul
call
add
xchg
push
add
call
call
push
add
call
call
adc
xchg
ja
call
popa
add
xchg
push
add
mov
push
add
mov
pop
add
lahf
popa
add
popf
pop
add
popf
pop
add
mov
pop
add
movs
addr16
mov
test
jmp
out
jmp
in
jmp
in
(bad)
call
in
in
(bad)
jmp
jmp
jmp
(bad)
jmp
call
out
out
out
aam
retf
dec
mov
lods
call
mov
fcos
test
outs
add
movs
ins
add
mov
imul
lahf
data16
cdq
pop
add
xchg
push
add
cdq
pop
add
xchg
push
add
cdq
pop
add
xchg
push
add
stos
ja
inc
notrack
push
inc
push
add
sahf
pusha
add
xchg
push
add
mov
push
add
mov
pop
add
lahf
pusha
add
pushf
pop
add
popf
pop
add
mov
pop
add
movs
data16
mov
stos
jmp
out
jmp
out
jmp
out
jmp
in
(bad)
jmp
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
(bad)
call
call
retf
dec
mov
scas
dec
mov
(bad)
stos
xchg
ins
jmp
outs
add
mov
ins
add
mov
pop
add
xchg
push
add
mov
dec
pop
add
xchg
push
add
test
popa
inc
add
jnp
arpl
call
call
push
add
pushf
popa
add
(bad)
push
add
cwde
pop
add
xchg
push
add
sahf
popa
add
popf
pop
add
sahf
pusha
add
mov
pop
add
movs
push
stos
(bad)
call
call
out
out
out
jmp
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
(bad)
call
iret
int3
dec
mov
scas
dec
mov
(bad)
stos
xchg
outs
jmp
outs
add
mov
ins
add
mov
bound
call
call
test
cwde
pop
pop
jmp
jmp
daa
daa
dec
pop
add
xchg
push
add
xchg
pop
add
or
call
add
gs
add
mov
call
pop
add
sahf
pop
add
cwde
pop
add
mov
mov
repnz
repnz
icebp
icebp
push
lock
lock
out
out
out
(bad)
out
out
out
(bad)
jmp
jmp
out
jmp
out
jmp
out
(bad)
jmp
iret
int3
dec
mov
scas
dec
mov
(bad)
lods
cwde
ja
mov
sub
scas
jge
jmp
je
jmp
push
add
sub
push
push
dec
call
call
sbb
pop
push
add
jp
add
jne
add
ins
inc
add
push
cs
jl
pop
jmp
mov
call
or
xchg
pop
add
lahf
popa
add
mov
pop
add
cmps
push
mov
repz
repz
repnz
repnz
icebp
icebp
push
lock
loope
dec
mov
stos
inc
mov
inc
mov
call
rcl
(bad)
jmp
dec
mov
scas
dec
mov
fdivr
scas
cdq
jns
mov
push
sub
mov
sub
lods
jl
jmp
push
add
sub
add
add
cmp
cmp
add
push
pop
jmp
adc
jmp
sbb
je
or
jle
pop
jmp
add
iret
xchg
or
fisubr
xor
jge
add
xchg
pop
add
pushf
pop
add
xchg
push
add
mov
mov
hlt
push
hlt
hlt
push
hlt
hlt
push
repz
repnz
icebp
icebp
(bad)
fmulp
(bad)
(bad)
mov
mov
mov
and
leave
(bad)
jmp
int
mov
fcmovnb
scas
dec
mov
(bad)
scas
fwait
jge
mov
inc
push
cmp
mov
cmp
mov
xor
mov
xor
movs
outs
add
jmp
and
inc
add
inc
add
call
sbb
jmp
inc
cmp
shr
pop
push
pop
call
arpl
inc
add
(bad)
mov
push
jmp
add
cwde
pop
add
mov
pop
add
movs
push
scas
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
out
out
out
push
repz
rol
(bad)
mov
nop
outs
inc
mov
mov
retf
(bad)
(bad)
jmp
jmp
xlat
ror
dec
mov
mov
retf
mov
fdivrp
scas
pushf
jg
mov
dec
push
mov
mov
aas
push
cmp
test
adc
lea
inc
inc
inc
pop
pop
inc
add
inc
add
inc
add
inc
add
jmp
stos
push
inc
test
jmp
push
or
mov
call
test
push
xor
dec
pop
add
xchg
push
add
lahf
popa
add
mov
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
push
lock
cmc
cmc
jmp
rol
inc
xchg
imul
xchg
outs
inc
xchg
ins
inc
xchg
imul
int
(bad)
in
in
in
call
ror
dec
mov
mov
retf
mov
fdivrp
mov
cmp
mov
nop
dec
(bad)
mov
lea
mov
and
and
and
and
add
add
add
add
add
add
sub
sub
ja
pop
dec
mov
xchg
push
dec
sbb
jp
or
cmps
push
dec
xchg
adc
jmp
sub
or
fwait
pop
add
movs
data16
mov
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
repnz
div
jmp
rol
inc
nop
gs
xchg
imul
xchg
addr16
nop
call
int
(bad)
out
out
out
(bad)
fcom
iret
dec
mov
mov
retf
mov
fdivrp
mov
cmp
xchg
pop
(bad)
mov
xchg
push
(bad)
mov
xchg
dec
(bad)
mov
mov
call
imul
add
add
add
add
sub
sub
xchg
jb
dec
adc
cmps
xchg
pop
dec
popa
or
popf
push
dec
bound
inc
xchg
call
mov
dec
jmp
add
xchg
pop
add
xchg
push
add
lahf
popa
add
mov
out
out
push
lock
lock
out
out
out
push
repz
div
jmp
aad
dec
call
int3
fwait
jo
retf
call
out
out
out
(bad)
(bad)
sar
int
mov
fcmovnb
mov
retf
jmp
loope
push
fwait
popa
(bad)
mov
cwde
pop
(bad)
mov
xchg
push
(bad)
mov
xchg
push
call
jl
push
(bad)
ds
sub
test
dec
add
mov
gs
cdq
es
mov
data16
xchg
jmp
jp
call
fwait
sbb
mov
cmp
call
pop
add
mov
mov
repz
repz
repz
repz
cmc
cmc
(bad)
clc
clc
clc
jmp
(bad)
leave
dec
call
int
imul
call
icebp
icebp
icebp
(bad)
fcmovbe
sar
int
mov
fcmovnb
mov
retf
jmp
loope
push
mov
addr16
popf
gs
pushf
(bad)
(bad)
mov
call
pushf
xchg
cmp
(bad)
(bad)
dec
jae
jmp
sub
popf
gs
jb
add
xor
fdivr
dec
jmp
adc
sbb
call
push
(bad)
jp
sub
call
pop
add
mov
mov
hlt
push
cmc
cmc
push
hlt
hlt
push
hlt
hlt
push
div
(bad)
cli
cli
cli
(bad)
jmp
mov
jne
shl
(bad)
fcmovnbe
int3
push
repnz
fcmovbe
sar
int
mov
fcmovnb
mov
retf
jmp
loope
push
movs
jno
lds
ins
inc
mov
addr16
sahf
inc
pushf
(bad)
call
mov
mov
mov
mov
push
popa
adc
arpl
adc
jmp
outs
jmp
push
call
push
add
jge
add
jg
add
mov
call
pop
add
lahf
popa
add
sar
div
idiv
cmc
cmc
cmc
push
cmc
cmc
(bad)
clc
clc
clc
(bad)
cli
cli
cli
(bad)
jmp
call
stos
jbe
(bad)
test
call
cmps
je
(bad)
int
repz
fcmovnbe
sar
int
mov
fcmovnb
mov
rol
mov
push
js
leave
cmps
jbe
enter
(bad)
movs
jb
(bad)
mov
outs
inc
mov
(bad)
jmp
xchg
mov
mov
dec
push
mov
mov
inc
push
fs
jmp
add
outs
aas
add
js
add
(bad)
push
add
xchg
push
add
cdq
pop
add
xchg
pop
add
cwde
pop
add
fwait
pop
add
cwde
pop
add
lahf
pusha
add
mov
repnz
repz
repz
repz
div
(bad)
sti
sti
sti
(bad)
in
fcmovne
(bad)
fsubr
jb
fldcw
outs
(bad)
fst
int
hlt
hlt
hlt
(bad)
(bad)
sar
aad
sar
(bad)
mov
loopne
fcos
in
loopne
mov
mov
int
cmp
stos
jge
retf
stos
jnp
retf
dec
test
dec
cmps
jne
enter
mov
cdq
xchg
(bad)
mov
mov
mov
(bad)
(bad)
(bad)
lea
stos
jl
call
push
add
xchg
push
add
cwde
pop
add
xchg
push
add
cwde
pop
add
xchg
push
add
cwde
pop
add
call
call
mov
repz
repz
repz
repz
div
(bad)
cld
cld
cld
(bad)
in
fmulp
(bad)
fbstp
jns
fidiv
jbe
(bad)
into
push
cmc
cmc
(bad)
fstp
aad
jmp
call
(bad)
(bad)
fdivr
in
loopne
mov
(bad)
dec
mov
dec
mov
dec
scas
cmp
lods
cmp
lods
jle
retf
stos
jge
retf
stos
jp
enter
leave
mov
dec
cmps
jae
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
mov
mov
push
add
call
call
pop
add
cdq
pop
add
pushf
pop
add
cwde
pop
add
lahf
pusha
add
mov
repz
hlt
hlt
push
hlt
hlt
push
repz
div
(bad)
std
std
std
(bad)
out
(bad)
jmp
mov
jmp
mov
jmp
mov
jmp
mov
(bad)
(bad)
into
push
div
(bad)
fstp
aad
jmp
call
(bad)
fcompp
aad
in
loopne
mov
(bad)
call
mov
call
mov
call
mov
call
mov
dec
mov
dec
mov
dec
scas
cmp
mov
jle
int3
stos
jge
leave
cmps
jne
mov
xchg
pop
(bad)
mov
cwde
pop
(bad)
mov
cdq
pop
(bad)
mov
call
lahf
fs
xchg
push
add
xchg
push
add
xchg
push
add
xchg
push
add
cwde
pop
add
xchg
push
add
fwait
pop
add
mov
repz
hlt
hlt
push
hlt
hlt
push
hlt
hlt
(bad)
clc
clc
clc
(bad)
std
std
std
push
loope
(bad)
call
mov
js
out
jns
(bad)
iret
push
div
(bad)
fcompp
(bad)
(bad)
jmp
(bad)
(bad)
sar
in
loopne
mov
nop
call
mov
xchg
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
dec
mov
dec
mov
dec
scas
cmp
stos
jp
rcr
inc
popf
(bad)
inc
pushf
popa
inc
sahf
arpl
rcr
rcr
mov
jle
jmp
imul
jmp
mov
(bad)
mov
repz
hlt
hlt
push
hlt
hlt
push
hlt
hlt
(bad)
clc
clc
clc
(bad)
(bad)
(bad)
(bad)
push
jecxz
(bad)
in
shl
jns
jmp
ja
jmp
ja
loopne
iret
(bad)
clc
clc
clc
(bad)
(bad)
(bad)
(bad)
call
(bad)
mov
(bad)
int
in
loopne
mov
xchg
call
mov
cwde
call
mov
xchg
call
mov
xchg
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
dec
scas
cmp
ret
mov
imul
ret
inc
mov
imul
ret
mov
imul
mov
imul
mov
push
ret
pushf
pop
(bad)
mov
hlt
hlt
push
cmc
cmc
push
cmc
cmc
push
hlt
hlt
(bad)
stc
stc
stc
(bad)
(bad)
(bad)
(bad)
push
in
push
(bad)
jae
icebp
leave
jns
lock
jbe
out
(bad)
jbe
loopne
into
(bad)
stc
stc
stc
(bad)
(bad)
(bad)
jmp
loop
(bad)
fcmovnb
mov
(bad)
retf
jmp
loop
(bad)
mov
shl
fdivr
fwait
call
mov
cdq
call
mov
xchg
call
mov
xchg
call
mov
call
mov
call
mov
call
mov
dec
test
jno
leave
cmps
jb
enter
leave
cmps
jb
enter
retf
dec
cmps
jb
retf
dec
cmps
jae
retf
dec
test
dec
cmps
jb
(bad)
mov
mov
div
idiv
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
cli
cli
cli
(bad)
(bad)
(bad)
(bad)
push
call
mov
not
mov
cmc
(bad)
mov
cmc
aad
jmp
fnop
(bad)
stc
stc
stc
(bad)
(bad)
xlat
jmp
(bad)
(bad)
fcmovne
mov
fcom
retf
jmp
loop
(bad)
mov
lds
(bad)
fcmovb
mov
(bad)
fld
mov
(bad)
fdivr
pushf
call
mov
cdq
call
mov
xchg
call
mov
xchg
call
mov
xchg
retf
stos
jp
leave
test
dec
stos
jns
retf
dec
stos
jns
retf
dec
stos
jns
retf
test
jns
int3
stos
jp
retf
test
ins
inc
mov
idiv
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
sti
sti
sti
(bad)
(bad)
(bad)
(bad)
push
in
fdivr
sti
jecxz
(bad)
sti
jecxz
(bad)
cli
loop
(bad)
cli
loop
jmp
loope
(bad)
cli
cli
cli
jmp
fcmovbe
jmp
(bad)
(bad)
fcmovne
mov
(bad)
call
mov
xchg
mov
mov
cmp
mov
cmp
mov
cmp
mov
jg
mov
jle
mov
jle
mov
jle
mov
jge
mov
jl
mov
jl
mov
jns
mov
jo
mov
jno
mov
jo
mov
jno
mov
jo
mov
jb
mov
jb
mov
jb
mov
jb
mov
jb
mov
ror
push
div
push
div
push
div
push
div
(bad)
sti
sti
sti
(bad)
(bad)
(bad)
(bad)
push
repnz
out
push
out
push
out
push
repnz
(bad)
sti
sti
sti
jmp
fcmovu
jmp
fstp
(bad)
fcmovne
mov
(bad)
jmp
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
push
lock
sti
sti
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
std
(bad)
std
std
std
(bad)
cld
cld
cld
(bad)
sti
sti
sti
jmp
fcmovnu
jmp
fcompp
(bad)
fcmovne
mov
jmp
fstp
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
lock
lock
out
out
lock
out
out
out
(bad)
out
out
out
(bad)
(bad)
sar
in
(bad)
fcmovne
mov
call
int
(bad)
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
fcomp
fdivr
fcomp
fdivr
fcomp
fdivr
fcomp
fdivr
xlat
xlat
xlat
call
(bad)
(bad)
call
(bad)
(bad)
dec
mov
in
(bad)
fcmovne
mov
call
enter
iret
retf
call
iret
retf
call
iret
retf
call
into
retf
into
retf
int
call
int
call
int3
enter
(bad)
call
retf
(bad)
call
retf
(bad)
call
retf
ror
(bad)
leave
(bad)
leave
(bad)
call
leave
ret
call
enter
enter
enter
enter
mov
dec
mov
dec
mov
dec
mov
call
mov
call
enter
enter
enter
leave
(bad)
call
retf
ror
(bad)
call
retf
(bad)
call
retf
(bad)
call
retf
(bad)
call
int3
(bad)
call
int3
enter
enter
enter
sar
(bad)
(bad)
fcmovne
mov
(bad)
stc
div
(bad)
clc
div
push
cmc
repz
repz
icebp
out
push
out
in
push
out
jmp
jmp
loop
in
in
(bad)
jmp
jmp
(bad)
jmp
fcmovnbe
jmp
fcmovbe
jmp
fmul
jmp
(bad)
int
loope
retf
jmp
ror
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
rol
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
rol
(bad)
(bad)
(bad)
jmp
ror
jmp
aad
(bad)
(bad)
retf
jmp
(bad)
jmp
fcom
call
mov
(bad)
fxch
retf
sar
loop
aad
ror
(bad)
(bad)
fnop
int
loopne
aam
out
(bad)
loopne
sar
ror
fndisi(8087
fstp
fndisi(8087
(bad)
fneni(8087
(bad)
fneni(8087
fcmovbe
fneni(8087
fcmovbe
fcmovnu
(bad)
fcmovnu
fcom
fcmovnu
(bad)
rcr
(bad)
rcr
(bad)
into
fcmovnu
ror
fcmovnu
ror
fcmovnu
ror
fcmovnu
iret
enter
(bad)
fcmovnbe
int
fcmovnbe
retf
(bad)
fcmovnbe
retf
ret
fcmovnbe
retf
aam
rcr
leave
mov
fcmovnbe
(bad)
mov
fcmovnbe
(bad)
mov
fcmovnbe
(bad)
mov
fcmovnbe
(bad)
mov
fcmovnbe
leave
mov
fcmovnbe
retf
aam
ret
into
(bad)
fcmovnbe
into
leave
fcmovnbe
leave
(bad)
fcmovnbe
int
fcmovnu
ror
fcmovnbe
retf
(bad)
into
fcmovnu
fcom
fcmovnbe
mov
fcmovnu
ror
fcmovnu
ror
fcomi
call
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
(bad)
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
jmp
add
add
add
add
add
add
add
add
add
inc
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
cld
hlt
in
cmp
iret
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
sar
cmp
(bad)
(bad)
cmp
rol
inc
test
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
(bad)
mov
cmps
xchg
call
mov
out
call
shl
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
loopne
mov
les
sar
mov
mov
dec
mov
mov
retf
dec
mov
mov
leave
mov
mov
leave
mov
mov
dec
sar
iret
lds
dec
mov
mov
enter
leave
mov
mov
enter
enter
enter
retf
dec
mov
mov
call
retf
ror
(bad)
retf
ror
(bad)
retf
(bad)
retf
(bad)
leave
ret
call
mov
call
mov
call
enter
enter
enter
enter
enter
enter
enter
leave
ret
call
leave
ret
call
leave
ret
call
leave
ret
call
leave
ret
call
leave
ret
call
leave
ret
call
leave
ret
call
enter
enter
enter
enter
enter
mov
inc
scas
mov
dec
mov
(bad)
int
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
(bad)
(bad)
int
ror
(bad)
(bad)
(bad)
int
fcmovnbe
iret
call
int3
enter
into
call
iret
retf
mov
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
(bad)
(bad)
int
xlat
ror
(bad)
fcmovbe
into
(bad)
fcom
int3
call
enter
ror
(bad)
fcmovnbe
iret
(bad)
fcmovnbe
iret
dec
int3
retf
(bad)
call
call
out
call
call
out
jmp
jmp
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
out
out
out
(bad)
out
out
out
push
lock
icebp
icebp
push
icebp
icebp
push
repnz
repz
repz
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
repz
repz
repnz
icebp
icebp
push
icebp
icebp
push
lock
icebp
icebp
inc
lods
popf
inc
scas
mov
dec
mov
(bad)
into
retf
(bad)
(bad)
into
(bad)
fcom
into
(bad)
fcom
int
fcom
int
ror
enter
int3
call
int
call
ror
call
ror
call
int3
enter
retf
leave
(bad)
call
ror
(bad)
fcom
int
fcom
int
fcom
int
fcom
int
ror
enter
int
xlat
ror
call
int3
enter
int3
call
int3
enter
retf
call
iret
retf
(bad)
(bad)
(bad)
(bad)
call
out
(bad)
call
out
(bad)
call
call
call
(bad)
jmp
(bad)
jmp
jmp
jmp
jmp
in
in
in
(bad)
in
in
in
(bad)
out
in
in
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
out
out
push
repnz
repnz
repz
repnz
repnz
repnz
icebp
icebp
push
icebp
icebp
push
lock
out
out
out
(bad)
out
out
out
push
lock
lods
popf
inc
scas
mov
dec
mov
(bad)
jmp
in
(bad)
(bad)
fdivr
retf
inc
rol
rol
inc
sar
rol
inc
sar
rol
inc
sar
sar
inc
mov
mov
inc
mov
mov
inc
mov
mov
inc
mov
mov
(bad)
mov
mov
mov
inc
ret
ret
dec
enter
leave
leave
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
iret
iret
(bad)
(bad)
fdivrp
jmp
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
out
out
out
push
icebp
lock
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
lock
lock
lock
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
out
out
out
inc
lods
popf
inc
mov
jmp
retf
mov
into
mov
(bad)
(bad)
(bad)
(bad)
stos
xchg
jo
fwait
jb
dec
gs
lea
call
fs
mov
call
popa
and
xchg
addr16
xchg
gs
nop
arpl
call
popa
and
xchg
push
call
gs
xchg
imul
(bad)
bound
call
popw
call
ins
pop
call
outs
pop
call
imul
call
jae
call
jno
call
imul
xchg
push
jmp
sahf
jnp
fcmovu
(bad)
in
in
in
in
in
in
in
in
in
in
jmp
lock
lock
lock
lock
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
out
out
out
inc
lods
sahf
inc
mov
jmp
retf
mov
into
mov
(bad)
xlat
xlat
call
add
call
call
add
cdq
pop
add
xchg
push
add
sahf
pusha
add
xchg
push
add
pushf
pop
add
cdq
pop
add
xchg
push
add
mov
push
add
lahf
pusha
add
call
jmp
push
add
mov
pop
add
call
call
push
add
sahf
pop
add
mov
push
add
cmps
push
call
bound
jmp
pop
add
test
push
add
mov
mov
fstp
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
out
in
in
inc
lods
sahf
inc
mov
jmp
retf
mov
into
mov
(bad)
(bad)
fcom
xlat
call
addr16
pushf
popa
add
lahf
arpl
call
pop
add
cwde
pop
add
xchg
push
add
popf
pop
add
xchg
push
add
fwait
pop
add
cwde
pop
add
xchg
push
add
sahf
pusha
add
xchg
push
add
sahf
pusha
add
cdq
pop
add
cwde
pop
add
mov
push
add
mov
pop
add
cdq
pop
add
mov
push
add
movs
addr16
cwde
pop
add
popf
pop
add
mov
push
add
cmps
imul
call
bound
call
ins
add
xchg
push
add
mov
adc
sar
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
out
out
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
(bad)
in
in
in
inc
scas
sahf
inc
mov
jmp
int3
mov
into
mov
(bad)
(bad)
(bad)
xlat
call
push
call
imul
cwde
pop
add
call
call
popa
add
xchg
push
add
sahf
pop
add
fwait
pop
add
cdq
pop
add
mov
pop
add
mov
pop
add
pushf
pop
add
movs
data16
cdq
pop
add
movs
addr16
sahf
pop
add
sahf
pusha
add
movs
imul
jmp
pop
add
mov
push
add
test
pop
add
movs
addr16
movs
push
add
lods
jno
call
add
lahf
test
rcl
jmp
loop
jmp
jecxz
jmp
jecxz
jmp
jecxz
jmp
jecxz
jmp
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
in
in
inc
scas
sahf
inc
mov
jmp
int3
mov
into
mov
(bad)
(bad)
(bad)
fdivr
call
call
add
call
call
push
add
fwait
pop
add
xchg
push
add
cdq
pop
add
xchg
push
add
xchg
push
add
pushf
pop
add
xchg
dec
add
fwait
pop
add
xchg
push
add
xchg
push
add
popf
pop
add
xchg
push
add
popf
pop
add
xchg
push
add
xchg
push
add
sahf
pusha
add
xchg
push
add
mov
push
add
call
call
gs
xchg
push
add
pushf
pop
add
popf
pop
add
xchg
push
add
movs
addr16
xchg
push
add
lahf
popa
add
lahf
test
(bad)
fdivr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
call
call
inc
scas
sahf
inc
mov
jmp
int3
mov
into
mov
(bad)
(bad)
fcmovu
fdivr
pushf
jge
jmp
add
movs
ins
add
mov
pusha
add
call
call
push
add
popf
pop
add
fwait
pop
add
cdq
pop
add
mov
push
add
mov
pop
add
pushf
pop
add
mov
pop
add
mov
pop
add
sahf
pusha
add
movs
push
add
cmps
imul
popf
pop
add
mov
push
add
test
pop
add
movs
addr16
movs
imul
jmp
add
cmps
imul
lahf
test
rcl
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
call
call
(bad)
jmp
jmp
lds
mov
dec
mov
(bad)
(bad)
fcmovnu
fcos
fwait
jge
jmp
gs
mov
arpl
call
push
add
xchg
push
add
fwait
pop
add
xchg
push
add
call
call
pop
add
xchg
push
add
pushf
pop
add
xchg
pop
add
xchg
push
add
cdq
pop
add
mov
call
pop
add
cwde
pop
add
mov
push
add
mov
push
add
pushf
pop
add
lahf
popa
add
xchg
push
add
movs
push
add
sahf
pusha
add
lahf
popa
add
xchg
push
add
cmps
push
call
arpl
call
rcl
jmp
jecxz
jmp
jecxz
jmp
jecxz
jmp
jecxz
jmp
jecxz
jmp
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
call
call
jmp
out
(bad)
jmp
jmp
mov
jmp
int3
mov
into
mov
(bad)
(bad)
fcmovnu
(bad)
fwait
jle
jmp
addr16
movs
ins
add
lahf
data16
mov
pop
add
xchg
push
add
fwait
pop
add
xchg
push
add
call
call
pop
add
xchg
push
add
popf
pop
add
cdq
pop
add
xchg
pop
add
mov
jo
push
inc
dec
add
mov
call
arpl
call
data16
cwde
pop
add
popf
pop
add
mov
push
add
cmps
imul
call
arpl
call
imul
xchg
push
add
mov
xchg
(bad)
fdivr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
jmp
call
jmp
out
jmp
out
(bad)
jmp
inc
mov
jmp
int
dec
mov
(bad)
(bad)
fstp
(bad)
pushf
jg
jmp
add
movs
ins
add
mov
imul
call
pop
add
xchg
push
add
fwait
pop
add
cdq
pop
add
xchg
push
add
sahf
pusha
add
xchg
push
add
sahf
pusha
add
call
inc
pop
pop
call
push
add
fwait
pop
add
mov
push
add
movs
push
add
lahf
pusha
add
mov
pop
add
cmps
imul
call
jmp
pop
add
test
pop
add
movs
push
push
call
rcl
jmp
loop
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
call
call
jmp
out
jmp
out
(bad)
jmp
inc
scas
mov
dec
mov
(bad)
(bad)
(bad)
fdivr
pushf
jg
jmp
push
add
sahf
gs
mov
addr16
xchg
push
add
cdq
pop
add
xchg
push
add
xchg
pop
add
xchg
push
add
xchg
push
add
call
call
push
add
mov
jno
sub
cs
add
xchg
push
add
sahf
pop
add
xchg
push
add
mov
push
add
cdq
pop
add
popf
pop
add
xchg
push
add
mov
push
add
pushf
pop
add
pushf
pop
add
xchg
push
add
movs
addr16
xchg
push
add
lahf
pusha
add
popf
adc
(bad)
(bad)
jmp
in
jmp
in
jmp
in
jmp
jecxz
jmp
jecxz
jmp
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
call
call
jmp
out
jmp
out
(bad)
jmp
jmp
scas
mov
dec
mov
enter
(bad)
popf
or
outs
add
mov
outs
add
mov
imul
mov
pop
add
fwait
pop
add
xchg
push
add
call
call
pop
add
xchg
push
add
sahf
pusha
add
popf
pusha
or
sahf
xchg
mov
pop
pop
pop
(bad)
jp
ja
test
call
add
mov
pop
add
movs
imul
jmp
data16
call
call
add
movs
addr16
pushf
pop
add
stos
outs
add
fwait
pop
add
cmps
push
jmp
(bad)
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
jmp
call
jmp
out
(bad)
jmp
jmp
scas
mov
dec
mov
enter
(bad)
pushf
or
add
mov
outs
add
mov
push
jmp
pusha
add
cdq
pop
add
xchg
push
add
xchg
pop
add
xchg
push
add
xchg
push
add
call
call
xchg
inc
inc
inc
dec
or
dec
pop
add
xchg
push
add
xchg
push
add
sahf
pop
add
xchg
push
add
mov
push
add
call
call
gs
xchg
push
add
pushf
pop
add
popf
pop
add
xchg
push
add
movs
push
add
mov
adc
aad
jmp
in
jmp
in
jmp
in
jmp
jecxz
jmp
loop
jmp
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
call
(bad)
jmp
jmp
mov
scas
mov
dec
mov
enter
loopne
popf
or
add
mov
jo
jmp
ins
add
mov
data16
cdq
pop
add
xchg
push
add
cwde
pop
add
or
xchg
push
add
fwait
pop
add
xchg
push
add
fwait
pop
add
mov
cmp
or
dec
dec
(bad)
jg
cmp
sahf
pusha
add
cdq
pop
add
cdq
pop
add
mov
push
add
lahf
arpl
call
add
call
jmp
pop
add
lahf
popa
add
mov
pop
add
cmps
push
call
gs
lahf
test
fcomp
fdivr
out
out
out
out
out
out
out
out
out
out
call
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
call
(bad)
mov
scas
mov
dec
mov
enter
loope
sahf
or
outs
add
cmps
jno
jmp
ins
add
movs
ins
add
mov
pop
add
xchg
push
add
lods
jns
jmp
inc
call
add
fwait
pop
add
xchg
push
add
movs
ins
sbb
je
ins
inc
add
dec
dec
add
call
pop
add
popf
pusha
add
lea
dec
dec
add
jnp
add
jg
add
jg
add
xchg
pop
add
xchg
push
add
lahf
popa
add
mov
pop
add
test
add
cwde
pop
add
movs
data16
mov
loopne
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
jmp
in
(bad)
mov
scas
mov
dec
mov
enter
loop
sahf
adc
jbe
jmp
jno
jmp
ins
add
mov
push
add
xchg
push
add
mov
inc
dec
pop
pop
call
add
(bad)
dec
add
mov
and
call
sbb
mov
dec
push
add
mov
dec
push
add
imul
call
add
push
aaa
push
call
sbb
pop
inc
push
call
adc
jb
add
or
xchg
pop
add
pushf
pop
add
xchg
push
add
movs
data16
xchg
push
add
lahf
pusha
add
mov
jecxz
push
repz
repnz
repnz
icebp
icebp
push
icebp
icebp
push
lock
lock
out
out
out
(bad)
out
out
out
jmp
in
(bad)
(bad)
fdivrp
(bad)
fdivrp
fstp
(bad)
fstp
(bad)
fstp
(bad)
out
out
jmp
in
in
(bad)
mov
scas
mov
dec
mov
call
int
jmp
jecxz
jmp
xor
scas
sub
mov
jmp
jbe
jmp
imul
mov
push
add
mov
inc
jmp
dec
dec
(bad)
jl
outs
inc
add
inc
add
jmp
pop
jmp
pop
push
add
jbe
add
jo
add
push
add
pop
ss
dec
sub
dec
arpl
dec
fwait
sub
mov
pop
xor
jno
add
xchg
pop
add
mov
pop
add
test
pop
add
movs
push
pop
jmp
in
push
repz
repz
repz
repnz
repnz
icebp
icebp
push
lock
lock
xlat
sar
retf
inc
test
lahf
inc
test
fwait
dec
mov
loope
jmp
(bad)
mov
scas
mov
inc
mov
call
int
jmp
in
jmp
test
push
test
jmp
sub
jmp
outs
or
xchg
push
add
mov
inc
jmp
das
das
inc
add
push
ss
call
push
inc
add
inc
xor
and
call
call
adc
ins
dec
or
jae
pop
push
pusha
add
mov
xchg
adc
fisubr
pop
call
add
xchg
call
push
add
mov
push
add
sahf
pop
add
mov
in
push
cmc
cmc
push
hlt
hlt
push
hlt
hlt
push
repz
repz
repnz
icebp
icebp
push
icebp
icebp
call
shl
mov
mov
mov
and
movs
xchg
jmp
loope
(bad)
jmp
jmp
out
in
in
(bad)
mov
scas
mov
inc
mov
call
int
jmp
in
jmp
mov
push
xor
push
sub
mov
sub
push
inc
inc
dec
or
inc
add
jmp
and
dec
or
cs
push
dec
call
mov
adc
rol
lahf
jb
call
gs
scas
outs
add
int
add
xlat
mov
imul
jle
add
call
jmp
push
add
mov
xchg
fstp
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
in
in
in
push
repz
repnz
fcmovb
mov
(bad)
mov
xchg
jb
mov
lea
enter
loop
loop
jmp
jmp
out
out
out
(bad)
mov
mov
jmp
iret
mov
call
int
jmp
out
jmp
mov
mov
inc
push
xchg
mov
cmp
mov
cmp
mov
xor
jmp
xchg
dec
inc
inc
jmp
sub
inc
add
inc
add
inc
add
dec
or
call
pop
pop
call
adc
(bad)
ds
push
dec
xchg
adc
mov
jmp
popa
xor
mov
ud0
mov
fisub
jmp
xor
outs
inc
add
xchg
pop
add
xchg
push
add
movs
push
add
mov
mov
in
in
hlt
hlt
hlt
push
hlt
hlt
push
repz
repz
repnz
repnz
hlt
hlt
push
repz
fcmovb
mov
mov
mov
ret
(bad)
mov
mov
(bad)
test
jmp
loop
(bad)
in
in
in
(bad)
out
out
out
(bad)
mov
mov
jmp
sar
call
int
jmp
out
jmp
(bad)
lea
mov
inc
push
mov
mov
push
mov
jmp
cdq
push
dec
dec
inc
inc
dec
add
inc
add
inc
add
inc
add
inc
add
inc
pop
pop
call
mov
jno
rcr
add
(bad)
jle
pop
jmp
push
or
jne
and
inc
inc
call
add
xchg
call
fs
xchg
push
add
sahf
pop
add
lahf
test
(bad)
fdivr
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
push
cmc
cmc
push
cmc
cmc
(bad)
fadd
mov
inc
xchg
ins
inc
cwde
je
les
ins
dec
lods
fwait
jmp
jecxz
(bad)
in
in
in
(bad)
out
out
out
(bad)
mov
mov
jmp
sar
call
int
jmp
out
jmp
xchg
push
(bad)
mov
nop
dec
(bad)
mov
(bad)
mov
mov
inc
push
sub
push
push
push
call
push
jmp
sub
inc
add
inc
add
inc
add
inc
add
inc
add
inc
notrack
shr
(bad)
fdiv
push
inc
xor
dec
jno
dec
nop
ud0
lahf
dec
jmp
cmp
inc
pop
add
cmps
imul
jmp
pop
jmp
loopne
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
lock
div
push
div
(bad)
ffree
mov
ret
inc
(bad)
gs
xchg
outs
inc
(bad)
inc
(bad)
dec
stos
xchg
jmp
in
(bad)
out
out
out
push
lock
(bad)
mov
mov
jmp
sar
(bad)
int
(bad)
call
mov
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
nop
dec
(bad)
mov
nop
dec
push
sahf
push
call
pop
jmp
popa
inc
inc
inc
add
inc
add
inc
add
inc
add
call
push
(bad)
jns
dec
sbb
jle
pop
(bad)
jns
pop
push
dec
jmp
and
push
xor
mov
adc
movs
gs
enter
aam
sub
xlat
mov
jmp
xor
ins
cmp
add
mov
push
add
popf
pop
add
mov
out
push
div
push
div
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
div
push
div
(bad)
(bad)
mov
dec
xchg
imul
popf
jae
retf
dec
xchg
ins
dec
mov
jmp
in
(bad)
out
out
out
push
lock
mov
mov
jmp
sar
(bad)
int
(bad)
jmp
mov
mov
cwde
pop
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
test
pop
jmp
outs
jmp
dec
add
inc
add
inc
inc
jmp
add
inc
sub
dec
mov
dec
sahf
xor
les
add
mov
pop
push
jmp
add
mov
xchg
adc
fsubr
pop
call
add
test
jmp
push
add
mov
xchg
(bad)
fdivrp
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
push
lock
clc
clc
clc
(bad)
clc
clc
clc
jmp
retf
int3
fwait
ins
dec
fwait
ins
dec
mov
outs
dec
fwait
outs
dec
mov
jmp
out
push
lock
icebp
icebp
(bad)
mov
mov
jmp
sar
(bad)
int
(bad)
jmp
lea
rcr
mov
cwde
pop
(bad)
mov
xchg
pop
(bad)
mov
xchg
push
(bad)
mov
mov
jmp
data16
jge
jge
jns
jns
addr16
inc
(bad)
cmp
cmp
mov
pop
add
add
push
das
add
mov
mov
adc
mov
popa
add
mov
jb
call
jae
call
xchg
or
(bad)
mov
pop
jmp
ud0
add
lahf
bound
call
pusha
add
mov
loop
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
lock
repz
stc
stc
stc
(bad)
clc
clc
clc
jmp
retf
int3
call
iret
mov
push
int3
call
out
out
icebp
icebp
icebp
push
repnz
mov
mov
jmp
sar
call
int
(bad)
jmp
mov
mov
inc
popf
gs
pushf
arpl
rcr
(bad)
mov
cdq
pop
(bad)
mov
mov
outs
dec
xchg
jmp
push
sub
jmp
add
addr16
inc
jmp
lds
dec
xchg
jmp
imul
jno
sub
sahf
imul
jmp
dec
dec
adc
jg
add
pushf
pusha
add
xchg
push
add
popf
pop
add
mov
call
clc
(bad)
clc
clc
clc
push
div
push
div
push
div
(bad)
clc
clc
clc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
jmp
into
mov
call
movs
jae
aam
jp
shl
call
mov
(bad)
call
repnz
repz
mov
mov
jmp
sar
call
int
(bad)
jmp
(bad)
ins
inc
mov
ins
inc
mov
imul
rcr
inc
popf
arpl
mov
mov
jne
cwde
cwde
cwde
call
je
scas
cmps
xchg
push
test
jmp
dec
add
push
xor
jmp
shl
call
mov
push
ud0
add
pop
xor
jmp
add
cmp
push
add
jg
add
lea
jmp
pop
add
mov
xchg
loopne
loopne
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
repnz
cli
cli
cli
(bad)
cli
cli
cli
jmp
int
call
mov
imul
cmps
je
shl
ins
call
mov
(bad)
jmp
repz
hlt
repz
mov
mov
jmp
sar
call
int
(bad)
jmp
dec
cmps
je
(bad)
movs
jno
(bad)
movs
outs
inc
mov
ins
inc
mov
imul
rcr
(bad)
jp
jp
movs
movs
movs
inc
popf
xchg
push
xchg
push
mov
mov
aaa
call
ds
push
sub
sub
push
dec
xor
dec
sub
call
add
jbe
add
add
(bad)
push
add
xchg
dec
push
add
(bad)
dec
add
sahf
pop
add
xchg
push
add
fwait
pop
add
mov
jecxz
push
repz
repz
repz
repz
repnz
cmc
cmc
(bad)
sti
sti
sti
(bad)
sti
sti
sti
jmp
sar
(bad)
fsubr
jnp
fsubr
jbe
(bad)
mov
jmp
hlt
hlt
(bad)
mov
mov
jmp
sar
call
iret
retf
(bad)
jmp
dec
stos
jp
retf
dec
cmps
jbe
enter
enter
(bad)
movs
jno
(bad)
mov
outs
inc
mov
sahf
inc
sahf
sahf
call
xchg
pop
push
mov
mov
inc
(bad)
mov
mov
mov
inc
jmp
dec
add
jne
add
outs
cmp
push
add
jp
add
mov
call
add
sahf
pop
add
xchg
push
add
fwait
pop
add
pushf
pop
add
xchg
push
add
mov
push
add
lahf
pusha
add
mov
call
clc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
stc
stc
stc
(bad)
cld
cld
cld
(bad)
sti
sti
sti
jmp
sar
fldcw
jbe
fldcw
outs
call
mov
jmp
cmc
cmc
inc
mov
scas
jmp
sar
call
ror
(bad)
jmp
dec
lods
jg
retf
stos
jge
retf
stos
jnp
retf
test
jns
retf
dec
cmps
jne
leave
cmps
je
enter
fcmovb
mov
dec
mov
inc
(bad)
mov
mov
mov
nop
dec
push
nop
dec
push
test
dec
add
nop
push
add
xchg
push
add
cwde
pop
add
xchg
push
add
pushf
pop
add
xchg
push
add
cdq
pop
add
call
call
push
add
pushf
pop
add
lahf
test
loopne
loopne
lock
lock
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
repz
cld
cld
cld
(bad)
cld
cld
cld
(bad)
jmp
mov
(bad)
fbstp
jge
fidiv
js
fnstcw
jmp
div
idiv
div
cmc
(bad)
(bad)
into
dec
lds
jmp
(bad)
call
ror
(bad)
jmp
dec
mov
dec
scas
cmp
lods
cmp
int3
lods
jge
int3
stos
jl
retf
stos
jp
retf
test
js
fcmovnb
movs
(bad)
jns
js
retf
inc
movs
outs
(bad)
mov
xchg
dec
(bad)
mov
xchg
dec
(bad)
mov
nop
dec
(bad)
mov
xchg
dec
(bad)
mov
xchg
dec
jmp
add
xchg
push
add
xchg
push
add
cwde
pop
add
xchg
push
add
fwait
pop
add
xchg
push
add
cwde
pop
add
cdq
pop
add
xchg
push
add
sahf
pusha
add
xchg
push
add
pushf
pop
add
mov
in
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
hlt
hlt
push
hlt
hlt
push
div
(bad)
std
std
std
(bad)
cld
cld
cld
(bad)
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
(bad)
fnstcw
jmp
div
idiv
div
idiv
(bad)
into
dec
(bad)
mov
jmp
fstp
call
ror
(bad)
jmp
jmp
stos
xchg
jne
shl
mov
iret
mov
dec
mov
dec
scas
test
int
cmp
lods
cmp
int3
lods
jle
fmulp
lods
call
lds
dec
test
outs
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
push
push
bound
call
pop
add
xchg
push
add
pushf
pop
add
xchg
push
add
call
call
bound
call
pop
add
mov
jmp
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
cli
cli
cli
(bad)
std
std
std
(bad)
std
std
std
(bad)
jmp
mov
jmp
mov
jmp
mov
je
jecxz
je
fcmovnb
mov
(bad)
clc
clc
clc
push
div
(bad)
(bad)
into
dec
(bad)
mov
(bad)
(bad)
xlat
call
ror
(bad)
jmp
jmp
stos
xchg
jbe
shl
mov
shl
call
mov
dec
mov
dec
mov
dec
mov
dec
scas
cmp
mov
dec
scas
cmp
int
jg
retf
stos
jl
(bad)
movs
jo
mov
xchg
pop
(bad)
mov
xchg
pop
(bad)
mov
xchg
pop
(bad)
mov
cdq
pop
(bad)
mov
fwait
pop
(bad)
mov
cmp
call
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
xchg
push
add
pushf
pop
add
xchg
push
add
cdq
pop
add
sahf
sbb
loope
push
lock
lock
lock
lock
lock
hlt
hlt
(bad)
std
std
std
(bad)
std
std
std
(bad)
in
fadd
(bad)
call
mov
jge
out
ja
out
js
ffree
mov
(bad)
clc
clc
clc
(bad)
clc
div
(bad)
(bad)
int3
dec
lds
(bad)
fstp
aam
xlat
ror
(bad)
jmp
jmp
stos
xchg
js
aad
xchg
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
scas
cmp
scas
cmp
cmps
jae
rcr
rcr
inc
pushf
pusha
inc
pushf
pusha
inc
sahf
(bad)
inc
fwait
pusha
inc
lahf
arpl
rcr
ret
sahf
arpl
mov
dec
push
gs
pushf
pop
add
call
gs
jmp
xor
(bad)
in
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
(bad)
clc
clc
clc
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
std
(bad)
in
fld
(bad)
jmp
jo
jmp
jno
in
ret
jp
jmp
(bad)
faddp
lahf
(bad)
in
in
in
(bad)
stc
stc
stc
(bad)
clc
clc
clc
call
iret
retf
les
(bad)
(bad)
sar
(bad)
iret
retf
(bad)
jmp
jmp
lods
xchg
jns
(bad)
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
dec
mov
dec
mov
dec
mov
dec
stos
jp
ret
lahf
push
inc
lahf
addr16
sahf
inc
lahf
addr16
mov
inc
mov
addr16
mov
imul
(bad)
mov
push
inc
popf
(bad)
inc
fwait
pusha
dec
mov
push
jmp
jmp
cli
cli
cli
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
cli
cli
cli
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
fadd
push
(bad)
jns
out
(bad)
jp
lock
cmp
(bad)
jnp
out
(bad)
jl
loopne
mov
(bad)
stc
stc
stc
(bad)
clc
clc
clc
call
int
dec
ret
mov
(bad)
fcmovbe
into
call
iret
retf
(bad)
jmp
jmp
lods
xchg
jp
fdivr
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
nop
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
dec
scas
cmp
mov
ins
inc
mov
ins
inc
mov
imul
movs
outs
inc
mov
ins
inc
movs
outs
inc
mov
jo
lds
outs
dec
movs
outs
inc
mov
jno
lds
jo
cmps
nop
outs
jmp
loop
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
hlt
hlt
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
fadd
push
leave
jno
repnz
int3
jnp
icebp
enter
enter
(bad)
lahf
(bad)
in
in
in
(bad)
cli
cli
cli
(bad)
stc
clc
clc
call
retf
(bad)
sar
fcmovbe
int
(bad)
into
retf
jmp
jmp
ret
fld
lahf
(bad)
fld
sahf
(bad)
fdivr
pushf
(bad)
fdivr
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
nop
call
mov
call
mov
call
mov
dec
stos
jns
enter
leave
movs
jb
leave
cmps
jae
enter
retf
dec
movs
jb
leave
cmps
jae
retf
dec
movs
jb
retf
test
jb
retf
dec
test
dec
cmps
jb
int
ja
leave
cmps
jb
int3
stos
jbe
test
out
push
div
push
div
push
div
push
div
push
div
(bad)
clc
clc
clc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
loop
(bad)
clc
fist
push
fist
neg
xchg
jmp
shr
cli
cli
cli
(bad)
stc
stc
stc
call
leave
ret
dec
sar
fcmovbe
int
aad
retf
jmp
jmp
lds
(bad)
fcmovb
mov
(bad)
fld
mov
(bad)
fadd
lahf
(bad)
fdivr
pushf
call
mov
fwait
call
mov
cwde
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
test
retf
dec
test
jbe
retf
test
ja
retf
dec
test
ja
int3
stos
jns
leave
test
dec
test
js
leave
cmps
ja
int
jnp
leave
cmps
ja
int3
stos
jp
test
jmp
stc
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
sti
sti
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
out
(bad)
sti
jecxz
(bad)
cli
jecxz
(bad)
cli
loop
(bad)
cli
loop
(bad)
cli
loope
jmp
xlat
mov
(bad)
sti
sti
sti
(bad)
stc
stc
stc
call
enter
sar
fcmovbe
into
call
into
retf
out
out
push
lahf
(bad)
fadd
popf
(bad)
fadd
popf
call
mov
fwait
call
mov
cwde
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
dec
stos
jnp
enter
retf
dec
cmps
je
retf
dec
test
dec
cmps
je
retf
test
jne
retf
test
ja
retf
dec
stos
js
retf
dec
stos
js
scas
cdq
ja
in
in
icebp
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
cmc
cmc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
out
(bad)
cli
in
(bad)
cli
in
(bad)
cli
in
(bad)
stc
in
(bad)
stc
jecxz
(bad)
out
ffreep
(bad)
cli
cli
cli
(bad)
sti
sti
sti
(bad)
cli
stc
stc
call
enter
sar
fcmovnbe
iret
call
into
leave
(bad)
clc
clc
clc
call
retf
mov
xchg
jmp
mov
xchg
jmp
mov
xchg
jmp
mov
xchg
jmp
mov
nop
jmp
mov
nop
jmp
mov
nop
jmp
mov
nop
jmp
mov
nop
jmp
mov
nop
jmp
mov
xchg
jmp
mov
xchg
push
mov
xchg
call
rol
(bad)
stc
stc
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cli
clc
clc
push
lock
push
lock
push
lock
push
lock
push
out
out
push
hlt
hlt
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
cli
stc
stc
call
enter
sar
fcmovnbe
iret
call
into
leave
(bad)
(bad)
(bad)
(bad)
(bad)
sti
sti
sti
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
(bad)
sti
sti
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
std
(bad)
std
std
std
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
cli
cli
stc
call
enter
sar
(bad)
sar
aad
leave
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
stc
stc
stc
(bad)
stc
clc
clc
call
enter
sar
(bad)
sar
retf
ret
mov
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aad
call
aam
call
aam
call
aam
call
aam
call
rcl
call
rcl
call
rcl
call
rcl
(bad)
(bad)
fdivr
ror
ret
dec
sar
(bad)
sar
int3
(bad)
sar
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
fcomp
fdivr
fcomp
fdivr
fcomp
fdivr
xlat
xlat
xlat
jmp
(bad)
call
leave
ret
dec
sar
fstp
sar
aam
(bad)
call
retf
ror
(bad)
call
retf
ror
(bad)
retf
ror
(bad)
call
leave
(bad)
call
leave
ret
call
enter
mov
call
mov
dec
(bad)
mov
dec
lds
dec
les
dec
ret
mov
dec
ret
int3
ret
int3
sar
int3
sar
retf
sar
retf
sar
retf
mov
mov
dec
mov
mov
dec
sar
retf
sar
retf
sar
int3
ret
int3
ret
int
mov
dec
les
dec
lds
dec
mov
rol
sar
mov
rol
sar
enter
enter
enter
enter
fcompp
dec
ret
out
(bad)
fcom
(bad)
stc
div
(bad)
clc
div
(bad)
clc
cmc
hlt
(bad)
clc
cmc
repz
repz
push
repnz
push
icebp
out
push
out
in
push
out
jmp
jmp
out
call
loope
in
in
(bad)
jmp
fdivr
jmp
(bad)
jmp
fst
jmp
fcmovnbe
jmp
fcmovbe
jmp
fnop
jmp
xlat
iret
jmp
(bad)
int
loope
int3
jmp
aam
(bad)
(bad)
enter
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
rol
(bad)
fst
(bad)
into
(bad)
(bad)
(bad)
ret
(bad)
(bad)
ret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fmulp
(bad)
rol
(bad)
(bad)
(bad)
rol
(bad)
(bad)
(bad)
jmp
ror
jmp
aam
(bad)
(bad)
retf
(bad)
(bad)
int
jecxz
sar
loop
(bad)
(bad)
fcmove
leave
dec
sar
ror
dec
sar
fcmovbe
int3
(bad)
(bad)
sar
aam
(bad)
dec
ret
fxch
retf
(bad)
(bad)
sar
in
out
dec
les
(bad)
fcompp
aad
cli
clc
idiv
stc
div
(bad)
stc
div
(bad)
clc
cmc
hlt
(bad)
clc
cmc
repnz
repz
repnz
push
lock
push
out
in
push
out
jmp
jmp
push
jmp
loop
in
in
(bad)
in
in
(bad)
jmp
(bad)
call
fst
jmp
(bad)
jmp
fcmovnbe
jmp
(bad)
jmp
fmul
jmp
xlat
into
jmp
(bad)
int
loope
retf
jmp
aad
jmp
aam
jmp
ror
jmp
rol
jmp
rol
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
rol
jmp
rol
jmp
ror
jmp
aam
jmp
aad
jmp
aad
jmp
(bad)
int
loope
int
jecxz
sar
call
fcmovnbe
(bad)
(bad)
int
(bad)
sar
in
xlat
jmp
loopne
(bad)
fst
sar
in
fdivr
call
out
jmp
int3
retf
(bad)
out
call
jmp
(bad)
fmul
enter
fcos
ret
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
mov
mov
leave
sar
repz
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
sub
add
add
add
add
add
add
add
add
add
or
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
std
jne
jmp
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
in
into
mov
out
aam
jne
jecxz
jne
cli
div
(bad)
push
(bad)
push
clc
hlt
(bad)
in
sar
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
test
fadd
stos
(bad)
ffreep
mov
out
(bad)
(bad)
cld
cli
clc
(bad)
(bad)
(bad)
(bad)
jmp
aad
push
nop
jle
mov
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
mov
aam
cmps
(bad)
in
(bad)
(bad)
std
stc
idiv
(bad)
mov
enter
(bad)
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
jmp
aad
(bad)
jmp
(bad)
jmp
ret
scas
(bad)
clc
call
lods
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
cmps
(bad)
fidivr
enter
jns
fcmovnb
test
inc
mov
(bad)
fidivr
enter
mov
(bad)
mov
scas
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
inc
scas
cmps
inc
mov
inc
scas
movs
inc
scas
cmps
(bad)
mov
mov
(bad)
mov
scas
cmps
inc
scas
movs
(bad)
mov
scas
movs
(bad)
mov
scas
movs
(bad)
mov
scas
movs
(bad)
mov
scas
movs
(bad)
mov
scas
movs
(bad)
mov
scas
movs
(bad)
mov
scas
movs
(bad)
mov
scas
movs
(bad)
mov
scas
movs
(bad)
mov
scas
movs
(bad)
mov
scas
movs
(bad)
mov
scas
movs
(bad)
mov
scas
movs
(bad)
mov
scas
movs
(bad)
mov
lods
movs
(bad)
mov
scas
movs
(bad)
mov
mov
(bad)
mov
lods
mov
push
movs
call
movs
call
movs
call
movs
call
movs
call
movs
call
movs
call
movs
cdq
push
movs
cdq
push
movs
cdq
push
movs
cdq
push
movs
cdq
push
movs
cdq
push
movs
cdq
push
mov
cdq
push
mov
cdq
push
mov
cdq
push
mov
cdq
push
mov
cdq
push
mov
cdq
push
mov
cdq
push
int3
(bad)
(bad)
fidivr
enter
jns
fstp
retf
inc
mov
(bad)
fidivr
fwait
(bad)
out
in
jmp
int
call
int
call
int3
enter
enter
enter
(bad)
call
retf
(bad)
call
retf
(bad)
call
retf
(bad)
call
int3
enter
enter
(bad)
call
retf
(bad)
call
retf
enter
(bad)
call
retf
(bad)
call
retf
enter
enter
retf
iret
retf
call
iret
retf
call
iret
retf
call
ror
(bad)
(bad)
into
(bad)
(bad)
sar
jmp
iret
int3
call
retf
(bad)
call
retf
enter
(bad)
call
retf
(bad)
call
retf
(bad)
call
retf
(bad)
call
retf
(bad)
call
retf
(bad)
call
retf
(bad)
call
int3
enter
(bad)
call
retf
(bad)
call
retf
(bad)
call
retf
(bad)
call
retf
(bad)
call
retf
(bad)
call
retf
(bad)
call
retf
enter
retf
call
iret
retf
call
iret
retf
call
iret
retf
call
ror
call
iret
retf
jmp
(bad)
(bad)
call
out
(bad)
call
out
(bad)
call
out
(bad)
call
out
(bad)
call
out
(bad)
call
out
(bad)
call
out
(bad)
jmp
(bad)
in
jmp
in
jmp
in
jmp
in
jmp
(bad)
in
jmp
(bad)
in
jmp
(bad)
in
jmp
(bad)
in
in
jmp
out
in
jmp
out
in
jmp
out
in
jmp
out
in
jmp
out
in
in
(bad)
out
in
in
(bad)
out
in
in
(bad)
out
in
in
(bad)
out
in
in
(bad)
out
in
in
(bad)
out
out
in
(bad)
out
out
in
(bad)
out
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
push
out
in
(bad)
out
in
in
(bad)
out
in
in
(bad)
out
in
in
(bad)
out
in
in
(bad)
out
in
in
(bad)
out
in
in
(bad)
out
in
in
(bad)
out
in
jmp
out
in
jmp
out
in
jmp
out
in
jmp
out
jmp
push
mov
enter
jns
fstp
enter
lods
(bad)
fidivr
fwait
push
lock
sar
loopne
aad
loopne
aad
loopne
aad
loopne
aad
loopne
aad
loopne
aad
loopne
aad
loopne
aad
ror
(bad)
fcom
(bad)
(bad)
sar
ror
(bad)
jmp
(bad)
call
retf
(bad)
sar
aad
leave
call
leave
(bad)
(bad)
fcmovnbe
into
call
retf
(bad)
(bad)
(bad)
sar
ror
(bad)
ror
call
iret
retf
mov
ret
aam
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
call
mov
call
iret
retf
ror
jmp
fcmovbe
call
mov
call
retf
ror
(bad)
(bad)
(bad)
sar
ror
(bad)
(bad)
(bad)
sar
(bad)
into
leave
call
int3
enter
sar
mov
mov
call
call
out
call
call
out
call
call
out
call
call
out
jmp
call
call
(bad)
jmp
(bad)
jmp
jmp
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
lock
lock
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
repnz
repnz
repnz
repz
repz
repz
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
repz
repz
repz
repnz
repnz
repnz
icebp
icebp
push
icebp
icebp
push
lock
lock
out
out
out
push
repz
mov
enter
jp
fstp
(bad)
inc
mov
(bad)
fidivr
fwait
push
lock
mov
fcos
in
fcos
in
fcos
in
fcos
in
fcos
in
fcos
in
fcos
in
fcos
in
fcos
aam
enter
(bad)
call
enter
mov
sar
aad
enter
(bad)
(bad)
(bad)
int3
inc
mov
aad
aad
leave
jmp
fcmovbe
(bad)
fst
sar
ror
(bad)
fcmovnbe
(bad)
mov
mov
sar
in
fcos
in
fcos
in
fcos
in
fcos
in
fcos
in
fcos
in
fcos
in
fcos
in
fcos
ror
(bad)
(bad)
inc
mov
mov
call
leave
(bad)
(bad)
dec
ret
mov
jmp
fstp
call
leave
(bad)
fcompp
call
into
leave
call
iret
retf
jmp
fcompp
push
call
out
jmp
call
out
jmp
call
out
jmp
call
out
jmp
call
out
jmp
jmp
jmp
jmp
jmp
jmp
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
lock
lock
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
repnz
repnz
repnz
repnz
repz
repz
repz
repz
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
repz
repz
repz
repz
repnz
repnz
repnz
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
lock
lock
out
out
out
(bad)
out
out
out
push
repz
mov
enter
jp
fstp
vcmpsd
(bad)
mov
lock
mov
fcos
in
fcos
in
fcos
in
fcos
in
fcos
in
fcos
in
fcos
in
fcos
in
fcos
aam
enter
(bad)
jmp
fcmovnbe
jmp
fcmovbe
jmp
(bad)
call
int
jmp
fcmovbe
jmp
fstp
(bad)
(bad)
sar
jecxz
fdivr
aad
leave
jmp
fcmovbe
(bad)
fcmovbe
into
jmp
(bad)
(bad)
fcmovbe
iret
inc
mov
sar
(bad)
sar
in
fcos
in
fcos
in
fcos
in
fcos
in
fcos
in
fcos
in
fcos
in
fcos
in
fcos
ror
(bad)
fstp
jmp
fcmovnbe
jmp
fcmovnbe
jmp
fstp
call
leave
(bad)
fcompp
jmp
fcmovbe
jmp
fcmovnbe
jmp
fcompp
call
leave
(bad)
fcom
(bad)
(bad)
sar
fst
sar
loopne
aam
mov
mov
jmp
out
(bad)
jmp
out
(bad)
jmp
out
(bad)
jmp
call
out
jmp
call
out
jmp
(bad)
jmp
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
lock
lock
lock
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
repnz
repnz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repnz
repnz
repnz
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
lock
lock
lock
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
repnz
mov
enter
jp
fstp
ret
inc
mov
(bad)
fidivr
fwait
push
lock
(bad)
aam
into
enter
enter
mov
dec
mov
int
ret
mov
int
ret
mov
retf
(bad)
int
ret
mov
int
ret
mov
int3
(bad)
int
ret
mov
int
ret
mov
int3
(bad)
int3
mov
int
ret
mov
int
ret
iret
int
in
loop
iret
leave
(bad)
dec
mov
int
ret
mov
int
ret
mov
int
ret
mov
int
ret
mov
retf
(bad)
int
ret
mov
int
ret
mov
retf
(bad)
int
ret
mov
int
ret
mov
retf
(bad)
int
ret
mov
int
ret
mov
fstp
fcos
out
in
out
in
out
in
out
in
out
in
out
in
out
in
out
in
out
in
out
in
out
in
out
out
call
call
call
(bad)
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
out
out
out
push
lock
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
lock
lock
lock
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
push
repnz
mov
enter
jp
fstp
sar
mov
(bad)
fidivr
fwait
push
lock
jmp
out
jmp
jecxz
jmp
(bad)
(bad)
fstp
(bad)
fcmovnu
fcos
(bad)
fdivr
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
fdivr
(bad)
fdivr
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
(bad)
xlat
(bad)
fcomp
xlat
(bad)
fcomp
xlat
(bad)
(bad)
fdivr
fcmovu
fcos
fcmovnu
(bad)
fcmovnu
(bad)
(bad)
fdivr
fstp
fdivr
(bad)
(bad)
(bad)
fdivrp
(bad)
fdivrp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
(bad)
(bad)
fdivrp
(bad)
fdivrp
loopne
loopne
jecxz
jecxz
out
out
jmp
jmp
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
out
out
out
push
icebp
lock
icebp
icebp
push
repnz
repnz
repnz
repnz
repnz
repnz
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
lock
lock
lock
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
push
repnz
push
mov
enter
jp
fcmovnb
stos
push
(bad)
mov
(bad)
fidivr
fwait
push
icebp
lock
call
loope
(bad)
fcom
(bad)
dec
enter
mov
mov
stos
stos
stos
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
cmps
cmps
jmp
stos
stos
push
mov
push
mov
push
mov
mov
(bad)
mov
mov
mov
(bad)
mov
mov
ret
iret
iret
(bad)
fstp
(bad)
call
in
in
(bad)
out
out
in
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
in
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
out
out
push
lock
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
lock
lock
lock
lock
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
push
icebp
icebp
push
mov
enter
jp
fcmovnb
stos
push
(bad)
mov
(bad)
fidivr
fwait
push
icebp
icebp
jmp
in
(bad)
fcmovnu
(bad)
mov
mov
cdq
adc
jne
inc
addr16
inc
imul
push
inc
inc
ins
inc
inc
push
inc
inc
inc
inc
imul
test
dec
ins
inc
inc
push
inc
inc
ins
inc
inc
addr16
inc
outs
inc
inc
push
inc
inc
outs
inc
inc
push
inc
inc
jo
inc
push
aas
inc
jo
inc
push
aas
dec
jo
inc
push
aas
dec
jno
inc
push
aas
dec
jns
call
jae
call
jge
call
jbe
dec
ja
call
jge
call
je
call
push
jmp
enter
loope
(bad)
in
in
in
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
lock
lock
lock
lock
lock
icebp
icebp
push
icebp
icebp
push
lock
lock
lock
lock
lock
lock
lock
lock
lock
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
push
icebp
icebp
push
mov
enter
jp
fcmovnb
stos
push
(bad)
mov
(bad)
fidivr
fwait
push
icebp
icebp
jmp
in
call
rcl
jmp
imul
mov
pop
add
cwde
push
add
sahf
pop
add
lahf
popa
add
cdq
pop
add
xchg
push
add
cwde
pop
add
mov
bound
call
pop
add
call
jmp
pop
add
cwde
pop
add
pushf
pop
add
movs
data16
mov
pop
add
cdq
pop
add
sahf
pusha
add
movs
push
add
cdq
pop
add
cdq
pop
add
mov
push
jmp
add
call
jmp
data16
fwait
pop
add
fwait
pop
add
movs
addr16
stos
outs
add
movs
push
add
fwait
pop
add
cmps
imul
jmp
pop
add
popf
pop
add
test
jo
jmp
pop
add
popf
pop
add
stos
outs
add
lods
jb
jmp
pop
add
popf
pop
add
lods
jo
jmp
fs
pushf
pop
add
lahf
popa
add
lods
jb
jmp
arpl
call
fs
scas
je
jmp
popa
add
popf
pop
add
mov
jne
jmp
mov
(bad)
call
(bad)
(bad)
(bad)
(bad)
fcos
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
call
lock
lock
lock
lock
lock
lock
lock
lock
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
repnz
icebp
push
mov
enter
jp
fcmovnb
stos
push
(bad)
mov
(bad)
fidivr
fwait
push
icebp
lock
jecxz
dec
int3
int3
call
addr16
movs
imul
mov
arpl
call
pop
add
popf
pop
add
cwde
push
add
xchg
push
add
xchg
push
add
lahf
pusha
add
lahf
pusha
add
xchg
push
add
xchg
push
add
cwde
pop
add
mov
bound
call
push
add
fwait
pop
add
mov
bound
call
push
add
popf
pop
add
mov
bound
call
push
add
sahf
pusha
add
movs
addr16
mov
pop
add
xchg
push
add
mov
imul
call
pop
add
mov
imul
mov
pop
add
cwde
pop
add
movs
data16
stos
ins
add
mov
pop
add
call
jmp
popa
add
cdq
pop
add
call
jmp
popa
add
call
jmp
outs
add
lahf
popa
add
cdq
pop
add
pushf
pop
add
stos
outs
add
lods
jo
call
pop
add
sahf
pusha
add
lods
jno
jmp
pop
add
cdq
pop
add
mov
jb
jmp
mov
sar
out
out
jmp
jmp
jmp
jmp
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
icebp
icebp
lock
mov
enter
jp
fcmovnb
stos
push
(bad)
mov
(bad)
fidivr
fwait
push
icebp
lock
jecxz
dec
retf
xchg
xchg
xchg
call
imul
call
pop
add
fwait
pop
add
call
call
push
add
fwait
pop
add
fwait
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
pushf
pop
add
pushf
pop
add
xchg
push
add
xchg
dec
add
xchg
push
add
popf
pop
add
pushf
pop
add
xchg
push
add
xchg
push
add
cwde
pop
add
sahf
pusha
add
pushf
pop
add
xchg
push
add
xchg
dec
add
cdq
pop
add
mov
pop
add
xchg
push
add
xchg
push
add
call
call
add
xchg
push
add
fwait
pop
add
mov
pop
add
xchg
push
add
xchg
push
add
popf
pop
add
mov
pop
add
nop
dec
add
xchg
push
add
mov
data16
cdq
pop
add
xchg
push
add
xchg
push
add
mov
push
add
xchg
push
add
xchg
push
add
mov
push
add
xchg
push
add
xchg
push
add
movs
addr16
movs
push
add
xchg
dec
add
xchg
push
add
cmps
push
jmp
add
xchg
push
add
cwde
pop
add
cmps
imul
mov
lahf
popf
call
rcl
(bad)
jmp
in
in
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
mov
enter
jp
fcmovnb
stos
push
(bad)
mov
(bad)
fidivr
fwait
push
icebp
icebp
jmp
in
dec
retf
xchg
xchg
(bad)
call
imul
call
pop
add
lahf
fs
fwait
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
call
call
dec
add
xchg
push
add
pushf
pop
add
pushf
pop
add
xchg
push
add
nop
dec
add
xchg
push
add
popf
pop
add
fwait
pop
add
xchg
push
add
xchg
dec
add
xchg
push
add
sahf
pop
add
fwait
pop
add
xchg
dec
add
nop
dec
add
cwde
pop
add
lahf
popa
add
pushf
pop
add
xchg
push
add
nop
dec
add
call
call
push
add
nop
dec
add
fwait
pop
add
mov
pop
add
xchg
dec
add
nop
dec
add
pushf
pop
add
mov
pop
add
nop
dec
add
xchg
push
add
mov
data16
cwde
pop
add
nop
dec
add
xchg
push
add
mov
addr16
cwde
push
add
nop
dec
add
xchg
push
add
mov
addr16
xchg
push
add
nop
dec
add
xchg
push
add
movs
data16
movs
push
add
nop
dec
add
xchg
push
add
cmps
imul
call
dec
add
cwde
pop
add
cmps
imul
lahf
ins
adc
xchg
nop
mov
mov
aad
(bad)
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
out
out
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
push
mov
enter
jp
fcmovnb
stos
push
(bad)
mov
(bad)
fidivr
fwait
push
icebp
lock
in
dec
retf
retf
call
addr16
movs
imul
lahf
data16
sahf
arpl
call
push
jmp
push
add
xchg
push
add
xchg
push
add
popf
pop
add
sahf
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
lahf
pusha
add
lahf
pusha
add
xchg
push
add
xchg
push
add
cdq
pop
add
mov
pusha
add
xchg
push
add
xchg
push
add
fwait
pop
add
mov
popa
add
xchg
push
add
xchg
push
add
sahf
pop
add
mov
bound
call
push
add
lahf
popa
add
movs
push
add
xchg
push
add
xchg
push
add
mov
push
jmp
push
add
xchg
push
add
mov
imul
mov
pop
add
cdq
pop
add
movs
push
add
sahf
pusha
add
xchg
pop
add
cdq
pop
add
cmps
imul
test
pusha
add
xchg
pop
add
cdq
pop
add
cmps
ins
add
stos
outs
add
popf
pop
add
cwde
pop
add
fwait
pop
add
stos
outs
add
stos
outs
add
pushf
pop
add
cwde
pop
add
popf
pop
add
stos
jo
jmp
pop
add
cdq
pop
add
lahf
pusha
add
lods
jno
jmp
pushf
call
out
(bad)
jmp
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
in
in
in
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
lock
push
mov
enter
jp
fcmovnb
stos
push
xlat
mov
(bad)
fidivr
fwait
push
repnz
jmp
in
dec
retf
retf
xchg
nop
jmp
ins
add
mov
gs
mov
ins
add
cmps
ins
add
cdq
pop
add
xchg
push
add
xchg
push
add
sahf
pusha
add
sahf
popa
add
cwde
pop
add
xchg
push
add
cwde
pop
add
mov
bound
call
pop
add
pushf
pop
add
mov
arpl
call
pop
add
popf
pop
add
mov
fs
cdq
pop
add
cdq
pop
add
mov
push
add
cdq
pop
add
call
jmp
gs
fwait
pop
add
call
jmp
addr16
pushf
pop
add
fwait
pop
add
movs
push
add
movs
addr16
fwait
pop
add
pushf
pop
add
test
add
stos
outs
add
mov
pop
add
popf
pop
add
stos
outs
add
lods
jo
jmp
pop
add
popf
pop
add
stos
jo
jmp
fs
pushf
pop
add
lahf
popa
add
lods
jb
jmp
arpl
call
add
scas
je
jmp
popa
add
popf
pop
add
mov
jne
jmp
sahf
pushf
call
rcl
(bad)
call
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
out
push
mov
enter
jnp
fcmovnb
stos
push
xlat
mov
(bad)
fidivr
fwait
push
repnz
jmp
in
dec
retf
retf
call
add
movs
ins
add
mov
fs
lahf
fs
movs
push
jmp
add
xchg
push
add
xchg
push
add
pushf
pop
add
popf
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
lahf
pop
add
sahf
pusha
add
xchg
push
add
xchg
push
add
cdq
pop
add
mov
pusha
add
xchg
push
add
xchg
push
add
fwait
pop
add
mov
popa
add
xchg
push
add
xchg
push
add
popf
pop
add
mov
popa
add
xchg
push
add
xchg
push
add
sahf
pusha
add
movs
addr16
mov
push
add
xchg
push
add
mov
imul
call
push
add
mov
push
jmp
push
add
cdq
pop
add
movs
push
add
sahf
pusha
add
cwde
pop
add
cdq
pop
add
cmps
push
jmp
pop
add
cwde
pop
add
cdq
pop
add
cmps
imul
test
pop
add
cwde
pop
add
fwait
pop
add
test
outs
add
pushf
pop
add
xchg
pop
add
popf
pop
add
stos
jo
jmp
pop
add
cwde
pop
add
lahf
pusha
add
lods
jno
jmp
nop
mov
mov
aam
(bad)
fcomp
fdivr
fcomp
fdivr
fcomp
fdivr
fcomp
fdivr
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
in
in
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
call
push
out
out
push
mov
enter
jnp
fcmovnb
stos
push
xlat
mov
(bad)
fidivr
fwait
push
repnz
jmp
in
dec
retf
retf
call
gs
mov
gs
pushf
bound
call
add
mov
popa
add
xchg
push
add
xchg
push
add
call
call
push
add
xchg
push
add
fwait
pop
add
fwait
pop
add
xchg
push
add
xchg
dec
add
xchg
push
add
pushf
pop
add
fwait
pop
add
xchg
push
add
xchg
dec
add
xchg
push
add
popf
pop
add
call
call
pop
add
sahf
pusha
add
fwait
pop
add
xchg
dec
add
nop
dec
add
call
call
push
add
nop
dec
add
call
call
add
nop
dec
add
pushf
pop
add
mov
pop
add
nop
dec
add
xchg
push
add
lahf
popa
add
mov
pop
add
nop
dec
add
xchg
push
add
mov
data16
cwde
push
add
nop
dec
add
xchg
push
add
mov
addr16
xchg
push
add
nop
dec
add
xchg
push
add
mov
addr16
xchg
push
add
nop
dec
add
xchg
push
add
movs
push
add
xchg
push
add
nop
dec
add
xchg
push
add
cmps
imul
call
iret
iret
jmp
in
(bad)
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
jmp
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
jmp
(bad)
call
call
out
push
mov
enter
jnp
fcmovnb
stos
push
xlat
mov
(bad)
fidivr
fwait
push
repnz
jmp
in
dec
int3
retf
call
add
mov
gs
pushf
bound
call
push
add
popf
popa
add
cdq
pop
add
xchg
push
add
call
call
push
add
xchg
push
add
fwait
pop
add
call
call
push
add
pushf
pop
add
call
call
push
add
popf
pop
add
fwait
pop
add
xchg
push
add
nop
dec
add
cwde
pop
add
sahf
pusha
add
fwait
pop
add
xchg
push
add
nop
dec
add
call
call
push
add
nop
push
add
call
call
push
add
xchg
dec
add
pushf
pop
add
mov
pop
add
xchg
dec
add
xchg
push
add
mov
gs
cwde
pop
add
xchg
dec
add
xchg
push
add
mov
data16
cwde
pop
add
xchg
dec
add
xchg
push
add
mov
addr16
xchg
push
add
xchg
push
add
xchg
push
add
movs
data16
movs
addr16
xchg
push
add
nop
dec
add
xchg
push
add
movs
push
add
xchg
push
add
nop
push
add
xchg
pop
add
cmps
push
jmp
sahf
pushf
call
rcl
(bad)
call
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
jmp
(bad)
call
call
out
lock
out
push
mov
enter
jnp
fcmovnb
stos
push
xlat
mov
(bad)
fidivr
fwait
push
repnz
jmp
out
dec
int3
retf
call
push
add
mov
data16
lahf
data16
movs
ins
add
movs
ins
add
mov
arpl
call
pop
add
popf
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
sahf
pop
add
sahf
pusha
add
xchg
push
add
xchg
push
add
call
call
push
add
xchg
push
add
fwait
pop
add
mov
pusha
add
xchg
push
add
xchg
push
add
popf
pop
add
mov
bound
call
push
add
lahf
popa
add
mov
arpl
call
pop
add
mov
imul
call
pop
add
mov
imul
mov
pop
add
call
jmp
popa
add
cwde
pop
add
call
jmp
popa
add
cdq
pop
add
call
jmp
pusha
add
cdq
pop
add
pushf
pop
add
stos
outs
add
stos
jo
call
pop
add
sahf
pusha
add
lods
jno
jmp
pop
add
cdq
pop
add
lahf
popa
add
scas
jb
jmp
nop
(bad)
(bad)
mov
aam
(bad)
fcomp
fdivr
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
in
in
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
call
(bad)
call
call
out
out
out
out
out
out
push
mov
leave
call
shr
mov
(bad)
fidivr
pushf
push
repnz
out
dec
int
call
push
add
mov
push
add
movs
ins
add
cmps
ins
add
mov
gs
mov
pop
add
popf
pop
add
xchg
pop
add
xchg
push
add
cwde
pop
add
lahf
popa
add
sahf
pusha
add
cwde
pop
add
xchg
push
add
call
call
pop
add
cwde
pop
add
pushf
pop
add
mov
bound
call
pop
add
sahf
popa
add
movs
data16
mov
pop
add
cdq
pop
add
mov
push
add
cdq
pop
add
cdq
pop
add
mov
push
jmp
pop
add
call
jmp
data16
fwait
pop
add
pushf
pop
add
cmps
imul
stos
outs
add
mov
pop
add
pushf
pop
add
test
jo
jmp
pop
add
pushf
pop
add
test
jno
jmp
pop
add
sahf
pusha
add
stos
jno
jmp
add
pushf
pop
add
mov
jae
jmp
add
popf
pop
add
mov
je
jmp
pushf
call
in
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
call
(bad)
call
call
out
out
out
out
out
out
out
out
push
mov
leave
call
shr
mov
(bad)
fidivr
pushf
push
repnz
out
dec
int
call
addr16
movs
ins
add
mov
data16
lahf
data16
mov
imul
lahf
gs
popf
arpl
call
bound
call
push
add
xchg
push
add
xchg
push
add
pushf
pop
add
pushf
pop
add
xchg
push
add
xchg
push
add
cwde
pop
add
sahf
pop
add
popf
pop
add
xchg
push
add
xchg
push
add
call
call
push
add
xchg
push
add
fwait
pop
add
mov
pop
add
xchg
push
add
xchg
push
add
popf
pop
add
mov
pusha
add
xchg
push
add
xchg
push
add
sahf
pop
add
mov
pusha
add
xchg
push
add
xchg
push
add
mov
push
add
xchg
push
add
xchg
push
add
mov
push
call
push
add
xchg
push
add
movs
push
add
pushf
pop
add
xchg
push
add
xchg
pop
add
movs
imul
call
push
add
cdq
pop
add
cmps
imul
test
pop
add
xchg
push
add
fwait
pop
add
test
ins
add
cdq
pop
add
xchg
push
add
popf
pop
add
stos
outs
add
movs
jb
call
rcl
(bad)
call
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
jmp
(bad)
call
call
call
jmp
out
jmp
out
jmp
out
(bad)
out
out
out
push
mov
leave
call
shr
mov
(bad)
fidivr
pushf
push
repz
call
into
int
xchg
xchg
xchg
jmp
ins
add
mov
gs
sahf
gs
mov
push
call
popa
add
pushf
bound
jmp
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
call
call
dec
add
xchg
push
add
fwait
pop
add
cdq
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
pushf
pop
add
call
call
pop
add
popf
pop
add
call
call
pop
add
sahf
pusha
add
test
push
add
(bad)
dec
add
pushf
pop
add
mov
pop
add
xchg
push
add
nop
dec
add
fwait
pop
add
mov
pop
add
nop
dec
add
xchg
push
add
lahf
popa
add
mov
pop
add
xchg
push
add
xchg
push
add
mov
gs
xchg
push
add
nop
dec
add
xchg
push
add
mov
addr16
xchg
push
add
xchg
dec
add
xchg
push
add
mov
addr16
xchg
push
add
nop
dec
add
xchg
push
add
movs
push
add
xchg
push
add
xchg
dec
add
xchg
push
add
cmps
push
call
xchg
(bad)
inc
rol
aam
aam
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
in
in
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
jmp
(bad)
call
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
(bad)
out
out
out
push
mov
enter
jnp
fcmovnb
lods
push
fadd
inc
mov
(bad)
fidivr
pushf
push
repz
call
into
int
xchg
xchg
xchg
jmp
ins
add
mov
gs
lahf
gs
mov
push
call
bound
call
add
popf
pusha
add
xchg
push
add
xchg
push
add
xchg
push
add
call
call
push
add
xchg
push
add
pushf
pop
add
call
call
push
add
pushf
pop
add
call
call
pop
add
sahf
pop
add
fwait
pop
add
xchg
push
add
xchg
push
add
cwde
pop
add
mov
daa
jmp
and
sbb
add
xor
add
pop
ss
mov
call
push
add
nop
push
add
pushf
pop
add
mov
pop
add
xchg
push
add
xchg
push
add
mov
fs
cwde
pop
add
xchg
push
add
xchg
push
add
mov
data16
cwde
pop
add
xchg
push
add
xchg
push
add
mov
addr16
xchg
push
add
xchg
push
add
xchg
push
add
movs
data16
movs
addr16
xchg
push
add
xchg
push
add
xchg
push
add
cmps
push
add
xchg
push
add
xchg
push
add
cwde
pop
add
cmps
imul
call
rcl
jmp
in
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
call
call
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
call
(bad)
call
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
(bad)
out
out
out
push
mov
enter
jl
fcmovnb
lods
push
fadd
inc
mov
(bad)
fidivr
pushf
push
repz
jmp
into
int
xchg
xchg
xchg
jmp
outs
add
mov
imul
jmp
outs
add
mov
addr16
mov
ins
add
mov
push
add
xchg
push
add
xchg
push
add
pushf
pop
add
popf
pop
add
xchg
push
add
xchg
push
add
cdq
pop
add
lahf
pusha
add
popf
pop
add
xchg
push
add
xchg
push
add
call
call
push
add
xchg
push
add
popf
pop
add
mov
popa
add
xchg
push
add
xchg
push
add
sahf
pusha
or
loopne
scas
call
ror
jmp
dec
inc
jmp
sbb
call
add
cwde
pop
add
cwde
pop
add
mov
imul
call
pop
add
movs
push
add
lahf
pusha
add
cdq
pop
add
call
jmp
pusha
add
cdq
pop
add
call
jmp
pusha
add
cdq
pop
add
pushf
pop
add
stos
ins
add
stos
outs
add
popf
pop
add
cdq
pop
add
sahf
pusha
add
lods
jo
jmp
pop
add
call
jmp
je
jmp
rcl
(bad)
jmp
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
jmp
(bad)
call
call
out
out
out
out
out
out
out
out
out
out
out
out
out
out
jmp
mov
enter
jl
fcmovnb
lods
push
fadd
inc
mov
(bad)
fidivr
pushf
push
repz
jmp
call
imul
jmp
push
jmp
outs
add
cmps
outs
add
mov
push
add
movs
ins
add
movs
ins
add
cdq
pop
add
xchg
push
add
cwde
push
add
popf
pop
add
popf
pop
add
xchg
pop
add
xchg
push
add
cdq
pop
add
lahf
popa
add
sahf
pop
add
cwde
pop
add
xchg
push
add
fwait
pop
add
mov
popa
add
cwde
pop
add
cwde
pop
add
sahf
pop
add
mov
bound
call
push
add
mov
ds
les
mov
mov
call
jmp
add
fwait
pop
add
call
jmp
fs
call
jmp
ins
add
mov
pop
add
pushf
pop
add
cmps
imul
stos
outs
add
mov
pop
add
pushf
pop
add
test
outs
add
mov
pop
add
sahf
pusha
add
stos
outs
add
lods
jno
call
pop
add
mov
jb
jmp
pop
add
pushf
pop
add
mov
jae
jmp
xchg
nop
inc
rol
(bad)
(bad)
(bad)
(bad)
fcmovu
(bad)
fcmovu
(bad)
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
in
in
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
jmp
(bad)
call
call
out
out
out
out
out
out
out
out
out
out
out
out
out
out
jmp
mov
enter
jl
fcmovnb
lods
push
fadd
inc
mov
(bad)
fidivr
pushf
push
hlt
repz
jmp
call
push
add
mov
push
add
movs
ins
add
movs
ins
add
mov
gs
lahf
gs
mov
imul
call
call
pop
add
call
call
push
add
pushf
pop
add
fwait
pop
add
xchg
push
add
xchg
push
add
cwde
pop
add
popf
pop
add
fwait
pop
add
xchg
push
add
xchg
push
add
call
call
add
xchg
dec
add
iret
mov
call
inc
inc
call
adc
call
sbb
dec
mov
dec
push
add
xchg
push
add
sahf
pop
add
mov
pop
add
xchg
push
add
xchg
push
add
mov
addr16
fwait
pop
add
xchg
push
add
xchg
push
add
mov
push
add
xchg
push
add
xchg
push
add
mov
push
call
push
add
xchg
push
add
cmps
imul
call
push
add
cdq
pop
add
cmps
imul
cmps
push
call
push
add
fwait
pop
add
test
jo
call
rcl
jmp
out
(bad)
jmp
(bad)
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
call
call
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
call
(bad)
call
call
out
out
out
out
out
out
out
out
out
out
out
out
out
out
jmp
mov
jmp
rol
call
ret
hlt
fadd
inc
mov
(bad)
fidivr
fwait
push
hlt
hlt
(bad)
jmp
jmp
call
addr16
movs
outs
add
mov
push
add
movs
ins
add
movs
ins
add
lahf
data16
popf
fs
sahf
fs
mov
push
call
add
xchg
push
add
cdq
pop
add
cdq
pop
add
xchg
push
add
xchg
dec
add
xchg
push
add
call
call
push
add
xchg
push
add
fwait
pop
add
call
call
push
add
popf
pop
add
call
call
into
mov
call
adc
inc
add
push
xor
inc
(bad)
inc
sbb
fwait
pop
add
xchg
push
add
xchg
push
add
fwait
pop
add
mov
pop
add
xchg
dec
add
xchg
push
add
lahf
pusha
add
mov
pop
add
xchg
push
add
xchg
push
add
mov
gs
xchg
push
add
nop
dec
add
xchg
push
add
mov
gs
xchg
push
add
nop
dec
add
xchg
push
add
mov
addr16
xchg
push
add
nop
dec
add
xchg
push
add
movs
push
add
xchg
push
add
xchg
dec
add
xchg
push
add
cmps
push
adc
call
aam
(bad)
jmp
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
call
(bad)
call
call
out
out
out
out
out
out
out
out
out
out
out
out
out
out
jmp
mov
jmp
rol
call
ret
hlt
fadd
inc
mov
(bad)
fidivr
fwait
push
hlt
hlt
(bad)
jmp
jmp
xchg
xchg
jmp
outs
add
mov
imul
jmp
add
lahf
data16
sahf
gs
sahf
gs
mov
push
call
push
add
xchg
push
add
cdq
pop
add
cdq
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
fwait
pop
add
cdq
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
fwait
pop
add
cdq
pop
add
xchg
push
add
xchg
push
add
cwde
push
add
popf
pop
add
call
push
scas
push
ss
add
inc
add
inc
cmp
dec
add
popf
pop
add
xchg
push
add
xchg
push
add
pushf
pop
add
mov
pop
add
xchg
push
add
xchg
push
add
lahf
popa
add
mov
pop
add
xchg
push
add
xchg
push
add
mov
fs
cdq
pop
add
xchg
push
add
xchg
push
add
mov
gs
xchg
push
add
xchg
push
add
xchg
push
add
movs
gs
movs
addr16
xchg
push
add
xchg
push
add
xchg
push
add
movs
push
add
xchg
push
add
xchg
push
add
cwde
pop
add
cmps
imul
call
ret
xlat
xlat
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
(bad)
fcos
(bad)
fcos
(bad)
fcos
in
in
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
call
(bad)
call
call
call
jmp
out
jmp
out
jmp
out
jmp
out
(bad)
out
out
out
jmp
mov
jmp
rol
call
ret
hlt
fadd
inc
mov
(bad)
fidivr
fwait
push
cmc
hlt
(bad)
in
jmp
call
rcl
call
imul
jmp
add
mov
outs
add
cmps
outs
add
mov
push
add
movs
ins
add
movs
ins
add
mov
pusha
add
xchg
push
add
fwait
pop
add
pushf
pop
add
xchg
push
add
xchg
push
add
cwde
pop
add
popf
pop
add
pushf
pop
add
xchg
push
add
xchg
push
add
call
call
push
add
xchg
push
add
pushf
pop
add
mov
pop
add
xchg
push
add
fcmovb
cmps
(bad)
jg
jg
sbb
sbb
add
add
pop
pop
pop
dec
mov
call
bound
call
pop
add
mov
push
add
cwde
pop
add
cdq
pop
add
movs
addr16
cmps
push
call
pop
add
call
jmp
pusha
add
cdq
pop
add
call
jmp
pop
add
cdq
pop
add
pushf
pop
add
test
outs
add
popf
pop
add
call
jmp
outs
add
pushf
pop
add
call
jmp
adc
call
rcl
jmp
out
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
jmp
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
jmp
(bad)
call
call
call
jmp
out
jmp
out
jmp
out
(bad)
out
out
out
jmp
mov
jmp
rol
call
ret
hlt
fadd
inc
mov
(bad)
fidivr
fwait
push
cmc
hlt
(bad)
in
jmp
call
rcl
call
push
jmp
outs
add
movs
ins
add
mov
jo
jmp
imul
mov
imul
jmp
imul
call
pop
add
pushf
pop
add
xchg
push
add
xchg
push
add
cdq
pop
add
popf
pop
add
popf
pop
add
xchg
push
add
xchg
push
add
call
call
pop
add
xchg
push
add
pushf
pop
add
mov
pusha
add
mov
(bad)
int3
inc
inc
inc
add
add
add
dec
dec
dec
(bad)
mov
inc
or
jmp
pop
add
cdq
pop
add
mov
push
add
call
jmp
add
lahf
popa
add
call
jmp
ins
add
lahf
popa
add
call
jmp
ins
add
lahf
popa
add
call
jmp
outs
add
lahf
pusha
add
fwait
pop
add
lahf
popa
add
lods
jo
jmp
pop
add
fwait
pop
add
mov
jb
jmp
mov
aad
jmp
jmp
out
out
out
push
lock
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
jmp
(bad)
call
call
call
jmp
out
jmp
out
(bad)
out
out
out
jmp
mov
jmp
rol
call
ret
hlt
fadd
inc
mov
(bad)
fidivr
fwait
push
cmc
cmc
(bad)
in
in
in
call
rcl
call
imul
jmp
imul
mov
outs
add
movs
outs
add
mov
push
add
movs
ins
add
movs
ins
add
lahf
addr16
sahf
data16
xchg
pop
add
call
call
add
xchg
push
add
fwait
pop
add
call
call
push
add
fwait
pop
add
call
call
pop
add
sahf
pop
add
call
call
push
push
inc
add
inc
add
mov
ins
inc
add
popf
pop
add
xchg
push
add
xchg
push
add
popf
pop
add
mov
pop
add
xchg
push
add
xchg
push
add
mov
data16
call
call
gs
movs
addr16
call
call
gs
movs
push
add
xchg
push
add
xchg
pop
add
movs
push
add
cdq
pop
add
xchg
push
add
cdq
pop
add
cmps
imul
cmps
imul
call
pop
add
test
outs
adc
xchg
xchg
xchg
inc
ret
ret
(bad)
fcomp
fdivr
(bad)
fdivr
fstp
(bad)
fstp
(bad)
fstp
(bad)
(bad)
fdivr
(bad)
fdivr
(bad)
fdivr
(bad)
fdivr
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
out
out
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
jmp
(bad)
call
call
call
jmp
out
(bad)
out
out
out
jmp
mov
jmp
rol
call
ret
hlt
fadd
inc
mov
(bad)
fnstcw
call
in
in
call
rcl
call
imul
jmp
imul
mov
outs
add
movs
outs
add
mov
addr16
lahf
addr16
movs
ins
add
mov
data16
popf
gs
cdq
pop
add
cwde
pop
add
cwde
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
cdq
pop
add
cwde
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
call
call
dec
add
xchg
push
add
fwait
pop
add
call
call
inc
add
jmp
es
mov
call
pusha
add
call
call
pop
add
lahf
popa
add
cdq
pop
add
xchg
dec
add
xchg
push
add
sahf
pop
add
mov
push
add
nop
dec
add
xchg
push
add
mov
fs
xchg
push
add
nop
dec
add
xchg
push
add
mov
fs
xchg
push
add
nop
dec
add
xchg
push
add
mov
gs
xchg
push
add
nop
dec
add
xchg
push
add
movs
addr16
mov
push
add
nop
dec
add
xchg
push
add
movs
push
adc
call
rcl
(bad)
call
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
jmp
(bad)
call
call
out
lock
out
jmp
mov
jmp
rol
call
ret
hlt
fadd
inc
mov
(bad)
fdivr
fwait
push
div
(bad)
in
in
in
call
aam
call
imul
jmp
ins
add
mov
outs
add
movs
outs
add
mov
imul
jmp
add
mov
gs
popf
arpl
call
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
cdq
pop
add
xchg
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
call
call
push
add
cwde
push
add
fwait
pop
add
scas
jl
dec
leave
sar
sbb
inc
add
inc
add
jmp
push
jmp
push
call
pusha
add
call
call
pop
add
mov
pop
add
xchg
push
add
xchg
push
add
sahf
pusha
add
mov
pop
add
nop
push
add
xchg
push
add
sahf
pusha
add
mov
push
add
xchg
push
add
xchg
push
add
mov
data16
xchg
push
add
xchg
push
add
xchg
push
add
mov
data16
xchg
push
add
xchg
push
add
xchg
push
add
movs
push
add
xchg
push
add
xchg
push
add
cwde
pop
add
cmps
push
jmp
mov
xlat
(bad)
in
in
in
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
lock
lock
lock
lock
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
call
(bad)
call
call
out
jmp
mov
jmp
rol
call
ret
scas
push
fld
inc
mov
call
mov
call
in
in
call
aam
call
push
jmp
jo
jmp
add
cmps
jno
jmp
ins
add
mov
imul
cmps
outs
add
cmps
outs
add
mov
push
add
fwait
pop
add
call
call
add
pushf
pop
add
jo
add
jb
add
cwde
push
add
cdq
pop
add
popf
pop
add
pushf
pop
add
xchg
push
add
xchg
push
add
fwait
pop
add
popf
pop
add
shl
cmp
add
inc
add
dec
or
push
push
inc
dec
pop
add
mov
popa
add
xchg
pop
add
xchg
push
add
mov
data16
mov
pop
add
xchg
pop
add
mov
gs
xchg
pop
add
xchg
push
add
xchg
push
add
fwait
popa
add
popf
fs
xchg
pop
add
xchg
push
add
xchg
pop
add
mov
imul
pushf
pop
add
cwde
pop
add
fwait
pop
add
test
add
test
pop
add
cdq
pop
add
sahf
pop
add
stos
outs
add
test
pop
add
call
jmp
jb
call
(bad)
(bad)
fcos
(bad)
fdivrp
(bad)
fdivrp
(bad)
fdivrp
fstp
(bad)
fstp
(bad)
fstp
(bad)
fstp
(bad)
fstp
(bad)
fstp
(bad)
fstp
(bad)
(bad)
fdivr
out
out
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
jmp
(bad)
call
out
out
jmp
mov
jmp
rol
call
ret
scas
push
fld
inc
mov
call
mov
call
in
in
call
aam
call
imul
cmps
je
jmp
outs
add
movs
outs
add
cmps
jb
jmp
ins
add
mov
ins
add
cmps
jo
jmp
imul
mov
imul
sahf
bound
call
push
add
xchg
push
add
xchg
push
add
mov
dec
sbb
and
add
cmp
call
pop
add
pushf
pop
add
xchg
push
add
xchg
push
add
fwait
pop
add
cmps
ins
adc
(bad)
(bad)
jmp
das
xor
add
add
add
add
ds
ret
sar
xor
add
lahf
pusha
add
mov
popa
add
cwde
pop
add
cwde
pop
add
lahf
bound
jmp
popa
add
xchg
push
add
xchg
push
add
cwde
pop
add
xchg
pop
add
mov
inc
add
mov
dec
push
add
xchg
dec
bound
jmp
pop
add
cwde
pop
add
pushf
pop
add
test
outs
add
sahf
pusha
add
call
jmp
ins
add
popf
pop
add
fwait
pop
add
mov
jo
jmp
lahf
popf
call
rcl
(bad)
jmp
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
in
in
in
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
jmp
push
out
out
jmp
mov
jmp
rol
call
ret
scas
push
fld
inc
mov
call
mov
call
out
out
call
aad
call
push
jmp
outs
add
mov
outs
add
cmps
jo
jmp
ins
add
mov
imul
movs
outs
add
movs
outs
add
mov
push
add
lahf
gs
xchg
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
into
mov
call
retf
ret
xor
add
pop
xor
call
pop
add
xchg
push
add
xchg
push
add
xchg
pop
add
mov
mov
dec
or
add
add
add
add
mov
test
jne
add
xchg
push
add
call
call
push
add
xchg
push
add
fwait
pop
add
popf
pusha
add
xchg
pop
add
mov
test
inc
dec
add
jne
add
ins
cmp
jmp
add
jno
add
je
add
outs
inc
add
jno
add
ja
add
mov
xchg
pop
add
(bad)
push
add
mov
call
add
movs
push
add
xchg
push
add
cwde
pop
add
cmps
push
add
xchg
push
add
xchg
push
add
call
jmp
mov
fdivr
in
in
in
push
repnz
repnz
repnz
repnz
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
lock
lock
lock
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
jmp
(bad)
jmp
jmp
jmp
(bad)
jmp
lock
push
mov
jmp
rol
call
ret
scas
push
fld
inc
mov
call
mov
call
out
out
call
aad
call
push
jmp
jo
jmp
add
cmps
jno
jmp
ins
add
mov
push
jmp
outs
add
mov
addr16
mov
imul
call
dec
add
xchg
dec
add
int
xchg
mov
ret
sar
inc
inc
call
add
dec
sub
call
push
add
nop
dec
add
xchg
push
add
fadd
pushf
jmp
inc
add
inc
add
call
push
push
inc
rol
popa
dec
xor
dec
push
add
call
dec
dec
add
xchg
push
add
xchg
pop
add
mov
(bad)
jns
add
jb
add
jo
add
addr16
add
dec
sub
dec
call
add
push
xor
call
add
push
sub
call
add
je
add
adc
test
inc
push
add
mov
fs
xchg
push
add
xchg
dec
add
xchg
push
add
mov
fs
xchg
push
add
nop
dec
add
xchg
push
add
movs
addr16
mov
mov
fdivr
out
out
out
push
repnz
repz
repnz
repnz
repnz
repnz
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
lock
lock
lock
lock
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
jmp
jmp
out
out
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
jecxz
jecxz
in
in
out
out
jmp
jmp
jmp
push
lock
push
mov
jmp
rol
call
ret
scas
push
fld
inc
mov
call
mov
cdq
(bad)
clc
clc
idiv
out
out
out
call
aad
call
outs
adc
lods
jle
jmp
jne
jmp
jae
jmp
ins
add
mov
imul
movs
outs
add
movs
outs
add
mov
imul
jmp
add
xchg
push
add
xchg
push
add
xchg
dec
add
shl
pop
call
dec
int3
retf
popa
pop
call
and
dec
push
add
movs
outs
sub
aam
(bad)
sbb
inc
add
inc
add
call
pop
push
xor
dec
dec
add
lea
call
push
add
xchg
inc
add
xchg
(bad)
js
add
data16
call
add
push
xor
dec
add
jmp
and
push
jmp
aaa
jmp
cmp
call
sub
pop
cmp
jmp
or
jo
add
jns
add
or
mov
jmp
data16
xchg
push
add
xchg
push
add
xchg
push
add
cmps
addr16
movs
data16
xchg
push
add
xchg
push
add
cdq
pop
add
cmps
imul
jmp
fcos
out
out
out
push
repz
repz
repz
repz
repnz
repnz
repnz
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
lock
lock
lock
lock
out
out
out
(bad)
out
out
out
(bad)
in
in
in
jmp
out
(bad)
(bad)
fdivr
xlat
xlat
xlat
call
xlat
xlat
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
aad
call
aad
call
aad
(bad)
fcomp
fdivr
loopne
loopne
call
jmp
jmp
lock
mov
jmp
rol
call
ret
scas
push
fld
inc
mov
dec
mov
push
clc
idiv
lock
out
call
(bad)
(bad)
call
jb
push
sub
jmp
jle
jmp
jb
jmp
add
cmps
jno
jmp
add
mov
outs
add
pushf
pusha
add
xchg
push
add
xchg
push
add
xchg
push
add
shl
inc
add
(bad)
ds
leave
enter
jo
pop
adc
push
inc
add
(bad)
mov
call
add
inc
add
jmp
push
push
inc
inc
add
or
dec
add
jg
add
jp
add
ja
add
js
add
jno
add
arpl
add
push
sub
inc
add
dec
xor
push
or
(bad)
pop
or
test
or
mov
mov
inc
xchg
and
mov
call
jne
inc
jmp
push
push
add
jg
add
(bad)
push
add
mov
ins
add
pushf
pop
add
call
jmp
ins
add
pushf
pop
add
call
jmp
jb
jmp
fcos
out
out
out
push
repz
repz
repz
repz
repz
repnz
repnz
repnz
repnz
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
lock
lock
lock
lock
out
out
out
jmp
loope
(bad)
fstp
xlat
call
int
dec
mov
retf
mov
int
(bad)
dec
mov
retf
(bad)
retf
(bad)
retf
(bad)
retf
dec
(bad)
iret
int
(bad)
fcmovnu
(bad)
out
out
jmp
(bad)
jmp
jmp
mov
jmp
rol
call
les
inc
mov
dec
mov
push
clc
idiv
icebp
lock
call
(bad)
(bad)
call
jb
push
xor
mov
das
push
sub
scas
sub
scas
jle
jmp
jnp
jmp
outs
add
mov
ins
add
cmps
jo
call
push
add
xchg
push
add
xchg
push
add
shl
inc
add
inc
add
jmp
cs
mov
nop
mov
and
push
push
sbb
call
leave
mov
inc
add
inc
add
call
pop
pop
(bad)
mov
cmp
(bad)
jge
add
jo
add
imul
add
push
add
addr16
jmp
add
pop
xor
add
push
xor
inc
add
inc
sub
dec
or
mov
push
jmp
add
cmps
data16
mov
mov
call
xchg
or
fsub
inc
(bad)
fdiv
push
pop
inc
sbb
pusha
aaa
add
jbe
add
mov
call
imul
popf
pop
add
cdq
pop
add
sahf
pop
add
stos
ins
add
test
pop
add
call
jmp
jb
jmp
fcmovu
(bad)
out
out
out
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
repz
repz
repz
repnz
repnz
repnz
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
lock
in
jmp
inc
mov
jb
mov
mov
mov
mov
xchg
jle
mov
mov
mov
mov
mov
(bad)
fcmovu
jmp
out
(bad)
jmp
jmp
jmp
push
lock
mov
jmp
rol
call
les
inc
mov
dec
mov
push
clc
clc
push
lock
call
xlat
(bad)
call
jae
push
xor
mov
xor
mov
das
push
sub
scas
jg
jmp
sub
jmp
ud0
outs
add
lahf
gs
xchg
push
add
xchg
push
add
xchg
dec
add
iret
mov
call
pop
inc
add
inc
add
inc
add
call
push
push
jmp
sahf
call
mov
adc
add
add
add
add
jno
jno
xchg
lea
push
add
outs
dec
adc
fs
sbb
push
xor
dec
add
inc
and
add
aas
and
inc
push
dec
or
dec
xor
jmp
call
sub
push
pop
add
mov
jae
dec
xchg
call
xchg
pop
call
sahf
sub
fsub
push
push
push
cmp
dec
sub
jmp
add
jge
add
xchg
pop
add
mov
push
add
xchg
push
add
xchg
push
add
movs
data16
mov
push
add
xchg
push
add
cwde
pop
add
movs
push
adc
(bad)
fcmovu
(bad)
lock
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
repz
repz
repz
repz
repnz
repnz
repnz
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
(bad)
in
jmp
inc
xchg
jg
mov
and
and
and
test
ror
(bad)
mov
and
and
test
ret
ret
fcmovnu
(bad)
call
jmp
(bad)
jmp
push
lock
mov
jmp
rol
call
les
inc
mov
dec
mov
push
stc
clc
push
icebp
icebp
(bad)
fcom
xlat
call
and
mov
cmp
mov
push
xor
mov
xor
mov
xor
mov
das
jmp
sub
mov
sub
scas
jg
jmp
and
lods
jp
jmp
push
add
xchg
dec
add
nop
dec
add
iret
mov
call
pop
dec
or
inc
add
inc
add
inc
add
call
adc
call
out
(bad)
jns
jns
add
add
add
add
or
or
mov
dec
inc
jmp
add
push
sub
(bad)
jnp
daa
call
outs
inc
push
cmp
push
push
sub
push
sbb
call
jbe
call
call
mov
jmp
pop
add
scas
ins
add
les
add
aam
sbb
(bad)
fisubr
push
push
inc
push
call
add
jne
add
xchg
pop
add
popf
popa
add
xchg
push
add
xchg
dec
add
xchg
push
add
mov
arpl
call
dec
add
xchg
push
add
movs
data16
lahf
imul
fcmovnu
(bad)
lock
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
repz
repz
repz
repz
repnz
repnz
repnz
repnz
icebp
icebp
(bad)
out
jmp
inc
xchg
jle
mov
test
mov
test
mov
xchg
jno
mov
test
mov
test
mov
ret
ret
(bad)
fcmovnu
(bad)
call
jmp
(bad)
jmp
jmp
jmp
push
mov
jmp
rol
call
les
inc
mov
dec
mov
push
stc
clc
push
icebp
icebp
(bad)
(bad)
fdivr
pushf
call
mov
cmp
mov
cmp
mov
cmp
mov
aaa
push
xchg
push
xor
mov
xor
mov
xor
mov
xor
scas
sub
scas
sub
mov
sub
mov
sub
sahf
gs
call
mov
call
pop
jmp
and
inc
push
push
inc
add
inc
add
inc
add
dec
or
(bad)
jg
jg
xor
xor
add
add
add
add
xor
ret
sar
es
and
or
sbb
or
dec
dec
xor
fnstsw
xor
retf
inc
call
(bad)
nop
or
mov
push
jmp
jp
(bad)
jp
sub
pusha
dec
xor
rcr
add
fwait
pop
add
test
add
mov
mov
call
xchg
or
(bad)
mov
dec
(bad)
fidivr
jb
dec
xor
call
push
add
mov
call
add
xchg
push
add
xchg
pop
add
movs
addr16
movs
data16
xchg
push
add
xchg
push
add
cdq
pop
add
cmps
imul
jmp
fcmovnu
push
icebp
icebp
push
cmc
cmc
push
div
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
repz
repz
repz
repnz
repnz
repnz
repnz
out
in
in
inc
fwait
test
mov
mov
mov
mov
mov
lds
ins
(bad)
mov
mov
mov
mov
iret
(bad)
fcmovnu
(bad)
call
jmp
(bad)
jmp
jmp
jmp
jmp
icebp
icebp
lock
mov
jmp
rol
call
les
inc
mov
dec
mov
push
stc
clc
push
repnz
(bad)
fdivr
pushf
call
mov
inc
push
cmp
mov
cmp
mov
cmp
mov
cmp
mov
aaa
push
test
push
xor
mov
xor
mov
xor
mov
xor
mov
xor
cmps
jb
jmp
bound
call
mov
call
pop
jmp
cs
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
(bad)
(bad)
mov
sahf
pushf
inc
push
push
call
leave
(bad)
call
movs
cmp
rcr
or
int3
pop
dec
mov
(bad)
mov
imul
sahf
bound
jmp
jp
call
sub
(bad)
mov
add
pushf
pop
add
mov
je
dec
test
dec
pop
call
fwait
sbb
fsub
push
(bad)
mov
push
aaa
dec
add
ins
aas
add
mov
call
add
cdq
pop
add
popf
pop
add
test
imul
pushf
pop
add
call
jmp
jo
call
retf
(bad)
(bad)
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loope
loope
in
in
in
push
repz
repz
repz
repnz
out
in
in
inc
fwait
test
ror
inc
lea
ror
inc
xchg
ja
mov
lea
mov
lea
ror
(bad)
(bad)
fdivr
call
in
in
(bad)
jmp
jmp
jmp
jmp
icebp
icebp
lock
mov
jmp
rol
call
les
inc
mov
dec
mov
push
stc
stc
push
repnz
(bad)
fdivr
pushf
call
mov
mov
mov
inc
push
push
mov
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
xor
push
xchg
mov
xor
test
outs
add
mov
ret
push
push
pop
push
xor
xor
or
add
add
add
add
add
add
add
add
add
add
add
add
add
and
xor
jmp
cs
daa
sub
pop
pop
pop
call
adc
call
mov
call
lahf
das
dec
cwde
adc
int
add
retf
inc
add
lods
outs
add
sahf
bound
jmp
jnp
jmp
xor
popf
add
xchg
lahf
popa
add
popf
pop
add
scas
outs
add
ret
add
call
xchg
push
call
mov
dec
call
mov
jmp
dec
dec
pop
jmp
inc
pusha
add
xchg
pop
add
cwde
pop
add
pushf
pop
add
test
add
cmps
push
call
pop
add
lahf
pusha
add
stos
ins
add
movs
jno
jmp
(bad)
(bad)
(bad)
in
in
in
push
lock
icebp
icebp
push
icebp
icebp
push
lock
lock
lock
lock
lock
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
repnz
hlt
hlt
push
repz
repz
repz
out
in
in
inc
cwde
jg
mov
mov
mov
mov
mov
xchg
jb
mov
mov
mov
mov
mov
(bad)
(bad)
fdivr
call
in
in
(bad)
in
in
in
(bad)
jmp
jmp
repnz
icebp
push
mov
jmp
rol
call
lds
inc
mov
dec
mov
push
cli
stc
push
repz
(bad)
fcos
popf
fwait
call
mov
mov
inc
push
mov
mov
inc
push
mov
push
xchg
mov
cmp
mov
cmp
mov
aaa
push
test
push
sbb
mov
push
(bad)
fadd
mov
(bad)
cmp
cmp
cmp
daa
daa
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
inc
jmp
enter
movs
inc
call
popf
cs
xchg
adc
retf
mov
inc
add
mov
add
mov
pusha
add
mov
add
jne
daa
jmp
cs
cwde
daa
jmp
pop
add
lods
push
dec
xchg
(bad)
fbld
cmp
loopne
dec
(bad)
fdiv
dec
adc
push
sub
add
mov
dec
push
add
xchg
push
add
mov
fs
xchg
push
add
xchg
push
add
cwde
pop
add
movs
addr16
mov
movs
mov
push
repnz
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
in
in
inc
call
mov
mov
mov
lea
(bad)
xchg
jae
mov
mov
mov
mov
lea
rol
(bad)
(bad)
fstp
(bad)
call
in
in
(bad)
in
in
in
(bad)
in
in
in
push
icebp
icebp
push
mov
jmp
rol
call
lds
inc
mov
dec
mov
push
cli
stc
push
hlt
hlt
(bad)
fcmovu
(bad)
popf
fwait
call
(bad)
dec
push
mov
mov
inc
push
mov
mov
inc
push
aas
push
mov
push
xchg
push
cmp
scas
jle
jmp
add
fadd
mov
inc
inc
inc
inc
(bad)
aas
aas
aas
dec
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
sbb
ror
scas
(bad)
fdivr
call
movs
dec
dec
xchg
pop
inc
test
push
data16
fwait
pop
add
stos
ins
add
cwde
jne
dec
sub
rcl
push
jno
call
je
dec
test
cmps
pushf
je
ret
(bad)
mov
inc
sub
dec
es
jo
add
mov
dec
dec
add
xchg
push
add
mov
arpl
call
push
add
xchg
push
add
mov
push
call
retf
retf
jmp
loopne
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
jecxz
jmp
jecxz
jmp
jecxz
jmp
jecxz
(bad)
out
out
out
push
cmc
cmc
push
cmc
cmc
push
hlt
hlt
push
hlt
hlt
push
out
out
inc
call
mov
mov
mov
lea
(bad)
xchg
jae
mov
mov
mov
mov
lea
rol
(bad)
(bad)
fstp
(bad)
jmp
in
in
(bad)
in
in
in
(bad)
in
in
in
push
icebp
icebp
push
mov
jmp
rol
call
lds
inc
mov
dec
mov
push
cli
cli
push
hlt
hlt
(bad)
fcmovu
(bad)
popf
fwait
call
xchg
dec
(bad)
mov
mov
mov
dec
push
mov
mov
inc
push
mov
mov
inc
push
mov
push
cmp
push
test
cmps
jb
jmp
(bad)
mov
dec
dec
dec
dec
dec
dec
jmp
daa
daa
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
iret
mov
(bad)
fnstsw
jae
rcr
adc
stos
imul
pushf
pop
add
mov
jnp
jmp
xor
xchg
jb
call
aaa
pop
inc
ud0
push
call
jmp
das
call
xor
push
dec
cmp
push
inc
aaa
jmp
inc
dec
sbb
inc
and
jmp
add
adc
mov
dec
push
add
mov
gs
xchg
push
add
xchg
push
add
cdq
pop
add
movs
push
adc
(bad)
fcomp
fdivr
in
in
in
push
repnz
repnz
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
lock
lock
lock
lock
repz
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
out
out
dec
mov
jbe
enter
enter
enter
leave
fwait
js
int3
mov
jbe
enter
enter
enter
enter
rol
(bad)
(bad)
(bad)
fdivrp
jmp
(bad)
in
in
in
(bad)
in
in
in
push
repnz
push
mov
jmp
rol
call
lds
inc
mov
dec
mov
push
cli
cli
push
hlt
hlt
(bad)
fcmovu
(bad)
sahf
pushf
call
xchg
push
(bad)
mov
nop
dec
(bad)
mov
nop
dec
(bad)
mov
mov
mov
inc
push
mov
mov
mov
mov
mov
inc
push
mov
mov
jmp
jo
(bad)
ffree
mov
dec
dec
call
push
dec
dec
(bad)
aas
aas
aas
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
cmp
jns
jbe
jmp
ret
retf
loopne
fwait
(bad)
ffreep
xchg
(bad)
fnstsw
jns
ret
xchg
dec
jmp
push
ud0
(bad)
cmp
or
cmp
add
pop
ds
jle
or
mov
or
inc
fwait
sub
mov
xchg
arpl
mov
pop
dec
adc
popa
cmp
(bad)
jle
add
mov
call
pop
add
cmps
push
jmp
pop
add
cwde
pop
add
sahf
pop
add
stos
ins
add
movs
jb
jmp
fstp
push
repz
clc
clc
clc
(bad)
stc
stc
stc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
div
push
cmc
cmc
push
out
out
inc
pushf
jg
ror
inc
mov
ror
dec
cdq
je
ror
inc
mov
ror
call
mov
fstp
(bad)
jmp
(bad)
in
in
in
(bad)
in
in
in
push
repnz
push
mov
jmp
ror
call
lds
inc
mov
dec
mov
push
cli
cli
push
hlt
hlt
(bad)
fcmovnu
(bad)
sahf
pushf
call
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
nop
dec
(bad)
mov
(bad)
nop
dec
(bad)
mov
mov
mov
inc
push
mov
mov
mov
scas
jg
jmp
enter
push
push
call
push
call
push
call
push
call
push
dec
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
dec
dec
(bad)
jns
outs
(bad)
cmp
(bad)
mov
fcmovnb
(bad)
jmp
(bad)
call
retf
mov
(bad)
fcmovnb
cdq
call
mov
call
das
or
aas
daa
or
mov
push
pop
add
mov
jne
dec
xchg
dec
xchg
push
call
sahf
sub
fisubr
pop
jmp
daa
call
add
jbe
add
test
dec
pop
add
cmps
push
jmp
pop
add
cwde
pop
add
sahf
pop
add
test
outs
adc
fwait
call
loop
loop
out
out
out
out
out
out
out
out
out
out
out
out
in
in
in
in
in
in
in
in
in
in
out
out
out
push
div
push
div
push
div
push
div
push
out
out
dec
popf
cmp
nop
inc
nop
gs
nop
inc
nop
inc
xchg
imul
ret
nop
inc
nop
inc
nop
addr16
nop
inc
xchg
push
rol
(bad)
(bad)
(bad)
jmp
jmp
out
out
out
(bad)
out
out
out
(bad)
in
in
in
push
repnz
mov
jmp
ror
call
lds
inc
mov
dec
mov
push
cli
cli
push
cmc
hlt
(bad)
fcmovnu
(bad)
sahf
pushf
call
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
dec
(bad)
mov
nop
dec
(bad)
mov
nop
dec
(bad)
mov
mov
mov
dec
(bad)
mov
mov
mov
inc
push
jb
(bad)
(bad)
mov
call
call
pop
call
pop
call
call
push
push
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
dec
jmp
sbb
dec
jmp
dec
push
pop
inc
jns
xchg
mov
mov
outs
pop
dec
call
daa
inc
push
jmp
or
pop
dec
sub
inc
test
call
add
mov
add
lds
add
rcr
aas
(bad)
fldcw
js
outs
popa
dec
dec
jmp
add
js
add
test
call
arpl
jmp
push
add
xchg
push
add
xchg
push
add
movs
data16
sahf
push
jmp
fcomp
(bad)
out
out
out
push
repz
repz
repnz
repnz
repnz
repnz
repnz
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
cmc
cmc
push
div
push
div
push
div
push
div
push
lock
lahf
cmp
xchg
addr16
xchg
addr16
xchg
addr16
xchg
push
dec
sahf
jbe
enter
enter
enter
enter
enter
rol
(bad)
(bad)
(bad)
jmp
jmp
out
out
out
(bad)
out
out
out
(bad)
out
out
out
push
repnz
mov
jmp
ror
call
lds
inc
mov
dec
mov
push
sti
cli
push
div
(bad)
fcmovnu
(bad)
sahf
pushf
call
xchg
pop
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
dec
(bad)
mov
(bad)
dec
(bad)
mov
xchg
dec
(bad)
mov
lea
mov
inc
jmp
enter
push
push
jmp
popa
jmp
jmp
jmp
push
xor
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
inc
inc
sar
pop
xor
inc
add
addr16
aas
jmp
jne
jmp
inc
jmp
cmp
pop
push
das
jmp
and
outs
push
sbb
jge
or
xchg
pusha
add
mov
add
jle
sub
fs
xor
into
pushf
xor
mov
pop
add
stos
imul
dec
mov
call
xchg
adc
aad
cmp
xlat
stos
dec
(bad)
fdiv
ins
call
adc
pop
ss
jno
add
jg
add
mov
call
popa
add
xchg
push
add
xchg
dec
add
xchg
push
add
mov
push
jmp
(bad)
push
cmc
cmc
(bad)
stc
stc
stc
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
push
div
push
div
push
div
push
div
push
lock
mov
outs
dec
call
retf
call
shl
jo
retf
call
retf
call
rol
(bad)
(bad)
(bad)
(bad)
in
in
in
push
lock
out
out
out
(bad)
out
out
out
push
repz
mov
jmp
ror
call
lds
inc
mov
dec
mov
push
sti
cli
push
div
(bad)
fcmovnu
(bad)
sahf
pushf
call
cdq
pop
(bad)
mov
xchg
pop
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
dec
(bad)
mov
xchg
dec
(bad)
mov
nop
dec
(bad)
mov
jle
jmp
int
call
jmp
jmp
ins
jmp
push
imul
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
das
das
dec
mov
mov
inc
add
addr16
add
dec
sub
(bad)
cmp
enter
lods
push
dec
movs
inc
inc
call
ror
jmp
pusha
add
stos
outs
add
xchg
jae
dec
daa
push
outs
add
call
(bad)
mov
xchg
dec
xchg
or
aam
sub
xlat
cmps
inc
(bad)
fdiv
ja
pop
dec
sub
push
xor
jmp
add
jl
add
lea
jmp
fs
xchg
push
add
xchg
push
add
cwde
pop
add
movs
addr16
lahf
imul
call
jecxz
jecxz
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
icebp
icebp
icebp
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
push
div
push
icebp
lock
movs
xchg
int
jno
int
jno
int
jno
int
jb
into
sahf
je
shl
jb
int
jb
int3
popf
jb
int3
popf
jb
int
jbe
rol
(bad)
(bad)
(bad)
(bad)
in
in
in
push
lock
lock
out
out
out
push
repz
mov
jmp
ror
call
lds
inc
mov
dec
mov
push
sti
cli
push
div
(bad)
fcmovnu
(bad)
sahf
pushf
call
fwait
pusha
(bad)
mov
cdq
pop
(bad)
mov
cwde
pop
(bad)
mov
xchg
pop
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
mov
jmp
shl
jmp
outs
push
jae
jno
jno
outs
outs
outs
jmp
ins
jmp
sub
add
add
add
add
add
add
add
add
add
add
sbb
mov
push
(bad)
push
add
or
jo
add
pop
xor
push
sbb
scas
cmps
mov
(bad)
cmp
iret
cdq
and
retf
pop
(bad)
mov
imul
pushf
pusha
add
mov
jg
call
sub
mov
inc
test
call
pusha
add
mov
add
les
add
rcl
ss
stos
dec
dec
mov
jmp
dec
call
add
cmp
(bad)
jnp
add
(bad)
push
add
mov
push
add
cdq
pop
add
sahf
pop
add
test
add
mov
mov
fdivr
out
out
out
push
repz
repz
repz
repz
repz
repz
repz
repz
repnz
repnz
repnz
div
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
push
icebp
icebp
dec
mov
push
dec
cdq
imul
int
imul
movs
js
int3
cdq
push
int3
cdq
push
int3
cdq
push
int3
cdq
push
int3
fwait
outs
call
mov
(bad)
in
in
in
push
icebp
icebp
push
lock
lock
repz
mov
jmp
ror
call
lds
inc
mov
dec
mov
push
sti
cli
push
div
(bad)
fcmovnu
(bad)
sahf
pushf
call
pushf
arpl
mov
call
mov
cdq
pop
(bad)
mov
cwde
pop
(bad)
mov
xchg
pop
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
aad
call
push
push
jbe
jp
jp
js
js
ja
ja
je
je
jo
jo
cmp
cmp
sbb
sbb
(bad)
(bad)
ud0
push
push
call
adc
jmp
cmps
cmp
pop
add
inc
inc
add
popa
aaa
add
aas
and
(bad)
js
(bad)
jmp
leave
cmp
mov
xor
int
adc
leave
mov
inc
add
call
popa
add
mov
add
sub
addr16
xor
into
fwait
das
call
pop
add
lods
imul
sar
retf
dec
xchg
add
rcr
aas
(bad)
fidiv
push
jmp
add
ja
add
mov
call
data16
call
call
push
jmp
test
(bad)
(bad)
(bad)
cmc
cmc
cmc
(bad)
cli
cli
cli
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
clc
clc
clc
push
repnz
dec
mov
push
dec
cdq
imul
int3
fwait
ins
call
mov
push
int3
cdq
push
int3
cdq
push
int3
cdq
push
int3
fwait
outs
call
mov
(bad)
out
out
out
push
icebp
icebp
push
icebp
icebp
push
lock
repz
mov
jmp
ror
call
lds
inc
mov
dec
mov
push
sti
cli
push
div
(bad)
fcmovnu
(bad)
sahf
pushf
call
sahf
inc
pushf
arpl
mov
fwait
popa
inc
fwait
pusha
inc
fwait
pusha
(bad)
mov
cdq
pop
(bad)
mov
cdq
pop
(bad)
mov
xchg
pop
(bad)
mov
xchg
pop
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
fcmovb
call
push
(bad)
jge
jge
add
jge
jnp
jnp
jns
jns
jns
jns
jae
jae
ins
ins
ins
(bad)
cmp
cmp
xchg
xchg
xchg
dec
shr
pushf
pop
add
xchg
push
add
mov
(bad)
jp
add
cmp
dec
add
dec
cmp
call
stos
push
call
mov
daa
dec
(bad)
or
les
jmp
pop
add
stos
outs
add
call
(bad)
mov
imul
cwde
pop
add
movs
data16
mov
xchg
or
fcomp
sbb
fldcw
inc
jmp
dec
sub
pop
xor
push
add
test
call
popa
add
xchg
push
add
xchg
push
add
xchg
push
add
mov
push
cdq
dec
iret
iret
jmp
in
(bad)
call
call
call
(bad)
call
call
call
jmp
out
jmp
out
jmp
out
push
repnz
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
push
repnz
movs
cmp
fwait
imul
int
imul
into
pushf
ins
call
movs
js
int
push
int
push
int
push
int
push
int
outs
call
mov
(bad)
out
out
out
push
repnz
icebp
icebp
push
icebp
icebp
push
hlt
repz
mov
jmp
ror
call
lds
inc
mov
dec
mov
push
sti
cli
push
div
(bad)
fcmovnu
(bad)
sahf
pushf
fwait
jmp
mov
inc
popf
gs
popf
fs
popf
fs
pushf
arpl
rcr
(bad)
mov
fwait
pusha
(bad)
mov
cdq
pop
(bad)
mov
cwde
pop
(bad)
mov
cwde
pop
(bad)
mov
xchg
pop
(bad)
mov
fcmovnb
call
inc
mov
inc
cmp
add
jge
jge
dec
dec
dec
inc
int3
mov
push
jnp
call
dec
add
jg
add
outs
ds
pop
xor
push
add
mov
cdq
jmp
lds
(bad)
lods
pusha
call
popf
xor
(bad)
mov
addr16
cdq
pop
add
mov
jp
call
sub
xchg
(bad)
mov
outs
add
mov
adc
lods
jge
call
jno
dec
xchg
push
inc
mov
inc
mov
(bad)
jle
cmp
arpl
add
jae
add
test
call
pusha
add
xchg
push
add
xchg
push
add
xchg
push
add
mov
imul
(bad)
out
out
out
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
repz
repz
repz
repz
repz
repz
repz
div
(bad)
cli
cli
cli
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
push
repnz
lods
(bad)
call
test
jnp
aam
jnp
aam
jl
aad
jge
xlat
scas
cmp
test
jl
aam
jge
aam
jge
aam
cmp
mov
(bad)
out
out
out
push
repnz
repnz
icebp
icebp
push
hlt
repz
mov
jmp
ror
call
lds
inc
mov
dec
mov
push
sti
cli
push
div
(bad)
fcmovnu
(bad)
sahf
pushf
fwait
jmp
mov
imul
ret
inc
sahf
addr16
sahf
inc
popf
gs
pushf
gs
pushf
arpl
rcr
mov
cdq
pop
(bad)
mov
call
mov
xchg
pop
(bad)
mov
fadd
call
dec
(bad)
(bad)
dec
mov
inc
mov
jmp
imul
rol
jmp
sub
mov
push
pop
call
dec
add
jns
add
cmp
inc
add
jbe
arpl
jmp
(bad)
ffree
mov
fstp
arpl
enter
mov
or
fwait
pop
add
cdq
pop
add
mov
add
and
dec
sub
stos
jns
jmp
add
cmp
add
push
push
add
xor
sbb
inc
or
pop
inc
sbb
imul
ins
ds
jp
add
mov
call
add
xchg
push
add
xchg
push
add
cdq
pop
add
mov
ins
push
jmp
loopne
push
div
(bad)
sti
sti
sti
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
stc
stc
stc
push
repz
cmps
cmp
lahf
push
rcr
push
rcr
ins
call
test
imul
lahf
imul
lahf
ins
call
lahf
ins
call
mov
(bad)
jmp
loop
(bad)
out
out
out
push
repz
repnz
repnz
hlt
hlt
push
mov
jmp
ror
call
lds
inc
mov
dec
mov
push
sti
cli
push
div
(bad)
fcmovnu
(bad)
sahf
pushf
fwait
push
mov
ins
inc
mov
imul
mov
imul
ret
inc
sahf
addr16
sahf
gs
sahf
fs
popf
fs
popf
arpl
rcr
inc
fwait
popa
(bad)
mov
call
jmp
push
push
call
xchg
xchg
call
xchg
call
nop
nop
jmp
ins
call
pop
call
ror
push
sub
mov
xor
mov
xor
mov
push
and
mov
or
call
add
dec
cmp
jmp
(bad)
jmp
into
cmps
jmp
retf
mov
(bad)
ffreep
cdq
(bad)
fdivr
ins
push
imul
mov
adc
call
push
and
inc
add
dec
sub
call
add
pop
cmp
call
add
pop
xor
jmp
add
ins
inc
add
jne
add
jl
add
test
nop
push
add
mov
gs
cdq
pop
add
cwde
pop
add
popf
pop
add
cmps
imul
call
rcl
jmp
in
(bad)
jmp
jmp
jmp
(bad)
jmp
jmp
jmp
(bad)
call
call
call
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
push
repz
cmps
cmp
mov
imul
mov
imul
mov
jp
shl
ins
call
mov
ins
call
mov
(bad)
jmp
loop
(bad)
out
out
out
push
repz
repz
repnz
hlt
hlt
push
mov
jmp
ror
call
lds
shl
jmp
sti
sti
push
div
(bad)
fcmovnu
(bad)
sahf
pushf
fwait
push
movs
jno
(bad)
mov
outs
inc
mov
ins
inc
mov
imul
mov
push
inc
lahf
push
inc
sahf
gs
sahf
gs
sahf
inc
popf
fs
pushf
(bad)
(bad)
mov
cdq
pop
(bad)
jmp
push
push
call
pushf
pushf
call
cwde
cwde
call
add
ror
retf
popf
imul
xchg
push
xchg
push
mov
push
ja
dec
inc
add
cmp
inc
jmp
aad
jmp
fcmovb
(bad)
jmp
fdivr
jmp
shr
call
mov
call
adc
dec
add
pop
xor
jmp
add
imul
push
add
jns
add
je
add
jb
add
jbe
add
or
xchg
inc
dec
add
xchg
push
add
mov
gs
cwde
pop
add
xchg
push
add
pushf
pop
add
movs
push
adc
(bad)
fcmovu
(bad)
lock
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
repz
repz
clc
clc
clc
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
cli
cli
cli
(bad)
cli
cli
cli
push
repz
test
imul
mov
imul
mov
outs
call
stos
jnp
shl
ins
call
mov
ins
call
mov
(bad)
jmp
jecxz
push
lock
hlt
hlt
push
repz
repz
cmc
hlt
push
mov
jmp
ror
call
lds
shl
jmp
sti
sti
push
div
(bad)
(bad)
fdivr
sahf
pushf
fwait
push
cmps
je
(bad)
movs
jno
(bad)
movs
jo
(bad)
mov
outs
inc
mov
ins
inc
mov
ins
inc
mov
push
ret
mov
addr16
lahf
addr16
lahf
push
inc
popf
fs
popf
fs
mov
loope
call
push
call
mov
mov
call
inc
inc
dec
leave
(bad)
(bad)
mov
xchg
push
push
mov
push
mov
push
xor
jne
inc
aas
add
pop
das
add
inc
and
inc
pop
call
cmp
ja
call
xchg
mov
xchg
mov
inc
and
cmp
add
pop
xor
jmp
add
jo
add
jbe
add
jl
add
xchg
dec
dec
add
add
or
lea
nop
push
add
mov
dec
push
add
popf
pusha
add
sahf
pusha
add
xchg
push
add
xchg
push
add
xchg
push
add
mov
imul
jmp
loopne
push
div
(bad)
cld
cld
cld
(bad)
std
std
std
(bad)
std
std
std
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
push
hlt
hlt
call
lods
mov
xlat
test
call
test
call
test
jae
xlat
stos
jne
fidiv
jae
(bad)
test
je
(bad)
test
js
aam
(bad)
jmp
jecxz
push
lock
hlt
hlt
push
hlt
hlt
push
repz
cmc
hlt
push
mov
jmp
ror
call
lds
inc
mov
dec
mov
jmp
sti
sti
push
div
(bad)
(bad)
fdivr
sahf
pushf
fwait
push
test
dec
cmps
je
enter
enter
(bad)
movs
jno
(bad)
movs
jo
(bad)
mov
outs
inc
mov
outs
inc
mov
imul
mov
push
les
push
ret
inc
sahf
inc
pushf
(bad)
(bad)
in
jecxz
call
push
jmp
test
jmp
dec
dec
(bad)
mov
scas
mov
mov
cmp
mov
cmp
push
xchg
push
push
xchg
push
cmp
mov
push
or
outs
cmp
jmp
add
pop
xor
call
add
inc
and
(bad)
cmp
add
cmp
add
inc
and
dec
add
push
sub
call
add
arpl
add
jg
add
or
dec
push
add
xchg
pop
add
mov
dec
dec
add
xchg
pop
add
cwde
pop
add
nop
push
add
mov
call
pop
add
sahf
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
mov
data16
popf
pushf
fwait
call
rcl
jmp
out
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
jmp
jmp
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
push
hlt
hlt
call
mov
(bad)
fisubr
jbe
fldcw
ja
fisubr
cmp
fldcw
js
fldcw
jl
aam
(bad)
jmp
jecxz
push
icebp
icebp
push
cmc
cmc
push
hlt
hlt
push
hlt
hlt
push
cmc
cmc
push
mov
jmp
ror
call
lds
inc
mov
dec
mov
jmp
sti
sti
push
div
(bad)
(bad)
fdivr
lahf
pushf
fwait
push
stos
jp
leave
cmps
ja
leave
cmps
jbe
leave
cmps
jbe
enter
enter
enter
(bad)
movs
jae
(bad)
movs
jno
enter
(bad)
movs
jno
(bad)
movs
outs
inc
mov
outs
inc
mov
ins
inc
mov
imul
sahf
data16
in
jecxz
call
push
jmp
mov
jmp
push
jmp
mov
aas
push
mov
mov
inc
push
mov
push
mov
mov
inc
push
aas
push
xchg
movs
jnp
dec
inc
add
jb
add
outs
aas
add
cmp
jmp
add
popa
xor
jmp
add
ins
aas
add
outs
ds
jb
add
jp
add
mov
call
push
add
nop
push
add
xchg
push
add
fwait
pop
add
popf
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
sahf
pusha
add
lahf
pusha
add
xchg
push
add
xchg
push
add
xchg
push
add
mov
popa
add
xchg
push
add
xchg
push
add
cdq
pop
add
mov
push
jmp
fcos
lock
hlt
hlt
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
(bad)
clc
clc
clc
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
sti
sti
sti
push
hlt
hlt
call
lods
test
fsubr
ins
(bad)
fsubr
ins
(bad)
fldcw
jl
fsubr
outs
(bad)
fsubr
outs
call
test
(bad)
jmp
jecxz
push
icebp
icebp
push
cmc
cmc
push
cmc
cmc
push
hlt
hlt
push
cmc
cmc
push
mov
jmp
ror
call
(bad)
mov
hlt
(bad)
inc
mov
jecxz
mov
sahf
(bad)
cld
sti
sti
push
div
(bad)
(bad)
fdivr
lahf
pushf
fwait
push
lods
jge
retf
test
jns
retf
dec
test
dec
test
dec
cmps
jbe
leave
cmps
jne
enter
enter
enter
enter
(bad)
movs
jb
(bad)
movs
jno
(bad)
movs
jo
enter
(bad)
mov
outs
inc
mov
aam
pop
pop
pop
push
mov
jmp
call
enter
mov
mov
inc
push
mov
mov
mov
mov
inc
(bad)
mov
pop
mov
mov
mov
inc
push
lea
mov
inc
jmp
popa
adc
xchg
inc
dec
add
jp
add
jp
add
jg
add
or
or
dec
add
mov
call
pop
add
xchg
pop
add
xchg
push
add
xchg
push
add
sahf
pop
add
mov
pop
add
xchg
push
add
cwde
pop
add
mov
arpl
call
push
add
call
jmp
pop
add
cwde
pop
add
pushf
pop
add
movs
addr16
mov
test
loope
clc
clc
clc
(bad)
cld
cld
cld
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
push
cmc
hlt
call
scas
test
fldcw
ins
(bad)
fldcw
outs
(bad)
fisubr
jl
fldcw
outs
(bad)
fldcw
outs
(bad)
fsubr
(bad)
jmp
jecxz
push
icebp
icebp
push
div
push
cmc
cmc
push
cmc
cmc
push
div
push
call
in
call
(bad)
mov
hlt
(bad)
inc
mov
(bad)
push
sti
sti
push
div
(bad)
(bad)
fdivr
lahf
popf
fwait
push
lods
jg
int3
stos
jge
retf
stos
jl
retf
stos
jnp
retf
stos
jp
retf
test
jp
retf
dec
cmps
js
leave
cmps
ja
leave
cmps
jbe
leave
cmps
jne
leave
cmps
jne
leave
cmps
je
enter
enter
enter
(bad)
movs
jno
lds
aad
pop
pop
pop
(bad)
mov
jns
(bad)
jp
jp
fcom
(bad)
mov
mov
inc
push
mov
mov
mov
mov
inc
push
(bad)
nop
dec
(bad)
mov
lea
mov
inc
(bad)
mov
nop
dec
(bad)
mov
mov
mov
inc
jmp
push
add
mov
dec
dec
add
(bad)
push
add
xchg
push
add
(bad)
push
add
mov
call
pop
add
pushf
pop
add
xchg
pop
add
xchg
push
add
xchg
push
add
popf
pop
add
sahf
pusha
add
cwde
pop
add
xchg
push
add
xchg
push
add
lahf
popa
add
mov
pop
add
xchg
push
add
cdq
pop
add
mov
bound
call
push
add
fwait
pop
add
mov
push
call
rcl
jmp
out
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
div
idiv
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
push
cmc
cmc
(bad)
fsubr
ins
(bad)
fsubr
(bad)
fld
(bad)
fbstp
(bad)
fld
(bad)
fld
call
enter
in
push
icebp
icebp
push
div
push
div
push
cmc
cmc
push
div
push
(bad)
(bad)
std
std
std
call
(bad)
mov
hlt
(bad)
inc
mov
(bad)
push
sti
sti
push
div
(bad)
(bad)
fdivr
lahf
popf
pushf
push
scas
cmp
lods
jg
int3
lods
jg
int3
lods
jge
retf
stos
jl
retf
stos
jl
retf
stos
jl
retf
stos
jnp
retf
dec
test
jns
retf
dec
test
dec
cmps
jbe
leave
cmps
jbe
leave
cmps
je
enter
(bad)
movs
jae
(bad)
mov
(bad)
call
dec
ins
ins
(bad)
fstp
sar
mov
nop
dec
push
lea
mov
(bad)
(bad)
lea
mov
dec
(bad)
mov
nop
dec
(bad)
mov
lea
mov
dec
(bad)
mov
xchg
dec
(bad)
mov
lea
mov
dec
(bad)
mov
jle
call
dec
add
(bad)
dec
add
xchg
push
add
xchg
pop
add
xchg
push
add
nop
dec
add
xchg
push
add
cwde
pop
add
call
call
push
add
call
call
push
add
xchg
push
add
pushf
pop
add
pushf
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
sahf
pop
add
popf
pop
add
xchg
push
add
xchg
dec
add
xchg
push
add
lahf
pusha
add
fwait
addr16
(bad)
fcmovu
(bad)
lock
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
(bad)
stc
stc
stc
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
push
cmc
cmc
(bad)
fdiv
jle
loop
jle
loop
jg
loope
jg
loop
cmp
loope
cmp
mov
cmp
loope
test
aam
(bad)
jmp
jecxz
push
repnz
div
push
div
push
div
push
div
push
(bad)
(bad)
std
std
std
call
(bad)
mov
hlt
(bad)
inc
mov
(bad)
push
sti
sti
push
div
(bad)
fstp
(bad)
lahf
popf
pushf
push
test
int
cmp
int
cmp
lods
jg
int3
lods
jle
int3
lods
jle
retf
stos
jge
retf
stos
jl
retf
stos
jnp
retf
stos
jnp
retf
stos
jnp
retf
dec
test
jns
retf
dec
cmps
ja
leave
cmps
jbe
(bad)
movs
jb
out
in
dec
dec
call
pop
(bad)
(bad)
sar
ret
stos
xchg
enter
ret
(bad)
mov
mov
mov
xchg
dec
(bad)
mov
(bad)
mov
mov
xchg
dec
(bad)
mov
(bad)
(bad)
xchg
dec
(bad)
mov
xchg
dec
(bad)
mov
(bad)
xchg
dec
(bad)
mov
mov
pushf
bound
call
push
add
cdq
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
cdq
pop
add
call
call
push
add
call
call
add
xchg
push
add
pushf
pop
add
pushf
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
popf
pop
add
popf
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
lahf
pusha
add
pushf
addr16
jmp
loope
(bad)
clc
clc
clc
(bad)
std
std
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
cld
cld
cld
push
cmc
cmc
(bad)
(bad)
outs
jmp
mov
jmp
mov
(bad)
fbstp
jno
loop
jle
fbstp
jo
fbstp
jno
fidiv
enter
jecxz
repnz
div
push
div
push
div
push
div
push
(bad)
(bad)
std
std
std
call
(bad)
mov
hlt
fmulp
inc
mov
std
push
cld
sti
(bad)
clc
clc
clc
(bad)
fstp
(bad)
lahf
popf
pushf
push
mov
dec
mov
dec
scas
test
int
cmp
scas
cmp
scas
cmp
scas
cmp
int3
lods
jg
int
jg
int
jg
retf
lods
jge
retf
lods
jl
retf
stos
jl
retf
stos
jl
retf
stos
jnp
retf
test
jp
leave
cmps
jne
out
in
jmp
ins
call
iret
into
inc
mov
dec
cmps
je
leave
test
dec
cmps
je
mov
xchg
dec
(bad)
mov
xchg
push
(bad)
mov
nop
dec
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
dec
(bad)
mov
xchg
push
(bad)
mov
xchg
dec
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
jbe
call
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
call
call
push
add
xchg
push
add
pushf
pop
add
popf
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
popf
pop
add
sahf
pusha
add
xchg
push
add
xchg
push
add
xchg
pop
add
mov
popa
add
xchg
push
add
xchg
push
add
cdq
pop
add
mov
push
fwait
call
rcl
jmp
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
div
idiv
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
clc
div
(bad)
fdiv
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jo
loopne
jno
loopne
jno
loopne
jno
fbstp
enter
in
repnz
div
push
div
push
div
push
div
push
(bad)
(bad)
std
std
std
call
(bad)
mov
hlt
fmulp
inc
mov
cld
push
cld
cld
(bad)
clc
clc
clc
(bad)
fstp
(bad)
lahf
popf
pushf
push
mov
call
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
scas
cmp
scas
cmp
scas
cmp
lods
cmp
int3
lods
cmp
lods
jg
int3
lods
jg
int3
stos
jle
int3
stos
jge
retf
stos
jl
retf
push
jmp
jmp
enter
enter
retf
dec
test
ja
enter
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
cwde
push
(bad)
mov
xchg
push
(bad)
mov
lea
movs
ins
push
call
push
add
xchg
push
add
fwait
pop
add
pushf
pop
add
xchg
pop
add
xchg
push
add
xchg
push
add
popf
pop
add
sahf
pop
add
cwde
pop
add
xchg
push
add
xchg
pop
add
lahf
pusha
add
mov
pop
add
xchg
push
add
cdq
pop
add
mov
bound
call
push
add
fwait
pop
add
mov
imul
fcmovu
(bad)
lock
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
hlt
hlt
(bad)
stc
stc
stc
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
clc
div
(bad)
fnsave
outs
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jo
loop
jno
loop
jno
loop
jb
loope
jne
aam
(bad)
jmp
in
push
repz
clc
clc
clc
push
div
push
div
push
div
push
(bad)
(bad)
std
std
std
call
(bad)
mov
hlt
fmulp
inc
mov
cli
push
cld
cld
(bad)
clc
clc
clc
(bad)
fstp
(bad)
lahf
popf
pushf
push
mov
call
mov
call
mov
dec
mov
call
mov
call
mov
dec
mov
dec
mov
dec
mov
dec
scas
test
into
scas
cmp
scas
cmp
scas
cmp
scas
cmp
int
cmp
lods
cmp
lods
jg
retf
stos
jnp
repnz
(bad)
test
dec
stos
jnp
retf
stos
jl
retf
stos
jl
retf
test
jns
(bad)
movs
jno
mov
xchg
push
(bad)
mov
xchg
push
(bad)
mov
xchg
pop
(bad)
mov
xchg
pop
(bad)
mov
xchg
push
(bad)
mov
cwde
pop
(bad)
mov
xchg
push
(bad)
mov
xchg
pop
(bad)
mov
cwde
pop
(bad)
mov
xchg
push
inc
call
scas
jle
call
push
add
cdq
pop
add
fwait
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
fwait
pop
add
pushf
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
popf
pop
add
sahf
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
lahf
popa
add
lahf
pusha
add
xchg
push
add
xchg
push
add
cdq
pop
add
mov
imul
jmp
loope
(bad)
clc
clc
clc
(bad)
std
std
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
clc
div
(bad)
fidivr
je
out
jne
in
jne
in
jne
in
ja
out
cmp
mov
ja
in
ja
in
js
jecxz
jnp
aam
enter
in
repz
clc
clc
clc
push
div
push
div
push
div
push
std
(bad)
cld
cld
cld
call
(bad)
mov
hlt
fmulp
inc
mov
clc
push
cld
cld
(bad)
clc
clc
clc
(bad)
fstp
(bad)
lahf
popf
pushf
push
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
dec
mov
dec
mov
call
mov
dec
mov
dec
mov
dec
mov
dec
scas
test
into
scas
test
iret
scas
test
into
scas
cmp
lods
cmp
lods
cmp
iret
mov
iret
mov
dec
lods
jg
int3
lods
jle
int3
stos
jle
int3
lods
jle
int3
stos
jge
retf
stos
jl
retf
stos
jnp
enter
mov
xchg
pop
(bad)
mov
xchg
pop
(bad)
mov
cwde
pop
(bad)
mov
xchg
pop
(bad)
mov
xchg
pop
(bad)
mov
xchg
pop
(bad)
mov
xchg
pop
(bad)
mov
cdq
pop
(bad)
mov
xchg
pop
(bad)
mov
cdq
pop
inc
call
mov
jne
call
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
cdq
pop
add
call
call
push
add
call
call
push
add
xchg
push
add
pushf
pop
add
pushf
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
sahf
pop
add
call
call
rcl
jmp
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
push
div
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
clc
div
jmp
mov
jp
call
mov
jnp
call
les
jmp
mov
jge
out
jle
in
cmp
in
in
repz
clc
clc
clc
(bad)
clc
clc
clc
push
div
push
div
push
sti
(bad)
cld
cld
sti
call
(bad)
mov
hlt
fmulp
inc
mov
idiv
mov
sahf
(bad)
cld
cld
cld
(bad)
clc
clc
clc
(bad)
fstp
(bad)
lahf
popf
pushf
push
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
dec
mov
dec
mov
call
mov
dec
mov
dec
mov
dec
mov
dec
scas
cmp
mov
dec
scas
cmp
scas
cmp
scas
cmp
int
cmp
lods
cmp
int3
lods
jle
retf
stos
jl
int3
lods
jle
leave
cmps
jae
rcr
(bad)
mov
cdq
pop
(bad)
mov
cdq
pop
(bad)
mov
xchg
pop
(bad)
mov
call
mov
xchg
pop
(bad)
mov
fwait
pop
(bad)
mov
xchg
pop
(bad)
mov
fwait
pop
inc
pushf
pop
(bad)
mov
xchg
pop
(bad)
mov
xchg
push
jmp
pop
push
call
push
add
cwde
pop
add
call
call
push
add
call
call
push
add
xchg
push
add
popf
pop
add
fwait
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
popf
pop
add
call
(bad)
(bad)
fcos
lock
hlt
hlt
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
(bad)
cli
cli
cli
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
clc
div
jmp
mov
outs
(bad)
call
mov
jo
call
ret
out
jno
out
jb
out
jb
out
jae
in
jbe
aam
(bad)
jmp
in
push
hlt
hlt
(bad)
stc
stc
stc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
div
push
sti
cli
(bad)
sti
sti
cli
call
(bad)
mov
hlt
fmulp
inc
mov
repz
cld
cld
(bad)
clc
clc
clc
(bad)
fstp
(bad)
lahf
popf
pushf
push
mov
xchg
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
scas
cmp
scas
cmp
scas
cmp
int
cmp
int
cmp
cmps
jne
rcr
inc
fwait
pop
inc
pushf
pusha
inc
fwait
pusha
(bad)
mov
cdq
pop
inc
fwait
pusha
inc
pushf
popa
inc
pushf
pusha
(bad)
mov
call
ret
inc
popf
pusha
(bad)
mov
call
ret
sahf
(bad)
inc
pushf
pusha
(bad)
mov
fwait
pop
inc
lahf
(bad)
inc
mov
pop
push
outs
sbb
mov
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
popf
pop
add
popf
pop
add
xchg
push
add
xchg
push
add
xchg
push
add
lahf
pusha
add
sahf
pop
add
xchg
push
add
xchg
push
add
fwait
pop
add
jmp
test
loope
clc
clc
clc
(bad)
std
std
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
std
(bad)
stc
div
jmp
mov
jo
jmp
(bad)
jmp
(bad)
jmp
jg
jmp
mov
jae
jmp
mov
(bad)
jmp
in
push
hlt
hlt
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
clc
clc
clc
(bad)
clc
div
push
stc
idiv
cli
cli
stc
call
(bad)
mov
hlt
fmulp
inc
mov
lock
cld
cld
(bad)
clc
clc
clc
(bad)
fstp
(bad)
lahf
popf
pushf
(bad)
mov
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
dec
mov
dec
mov
dec
mov
call
mov
dec
mov
dec
scas
test
into
scas
test
into
scas
cmp
scas
cmp
scas
cmp
test
inc
popf
arpl
rcr
rcr
rcr
ret
inc
popf
arpl
rcr
ret
sahf
arpl
ret
lahf
fs
sahf
arpl
rcr
ret
lahf
gs
mov
fs
pushf
arpl
rcr
inc
mov
fs
pushf
arpl
ret
inc
popf
pop
(bad)
mov
xor
mov
arpl
jmp
pop
pop
call
pop
pop
jmp
adc
push
push
dec
movs
push
call
rcl
(bad)
call
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
push
div
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
div
jmp
mov
jo
in
mov
jno
in
mov
je
in
mov
(bad)
jmp
jae
jmp
call
enter
in
push
hlt
hlt
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
clc
clc
clc
(bad)
clc
div
push
div
(bad)
cli
clc
idiv
popf
pop
push
fmulp
inc
mov
in
push
cld
cld
(bad)
clc
clc
clc
(bad)
fstp
(bad)
lahf
popf
pushf
(bad)
mov
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
nop
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
dec
mov
dec
mov
call
mov
dec
mov
dec
mov
dec
scas
test
retf
inc
lahf
push
inc
sahf
gs
popf
gs
popf
gs
sahf
gs
lahf
inc
sahf
gs
popf
fs
popf
fs
mov
push
inc
popf
fs
popf
fs
mov
addr16
lahf
addr16
popf
inc
sahf
inc
mov
imul
ret
inc
sahf
inc
mov
push
lds
addr16
sahf
pusha
inc
sahf
pop
inc
pushf
pop
(bad)
mov
xchg
push
inc
cdq
pop
inc
mov
imul
ret
lahf
addr16
mov
ins
jmp
mov
(bad)
lock
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
(bad)
cli
cli
cli
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
div
jmp
ret
lock
cmp
out
leave
cmp
leave
cmp
retf
lock
(bad)
out
leave
cmp
leave
cmp
leave
test
out
leave
test
in
enter
enter
in
push
hlt
hlt
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
clc
div
push
cmc
repnz
stc
clc
idiv
popf
pop
hlt
fmulp
inc
mov
in
push
cld
cld
(bad)
clc
clc
clc
(bad)
fstp
(bad)
lahf
popf
pushf
(bad)
mov
mov
cwde
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
dec
mov
dec
mov
dec
lods
jle
(bad)
mov
addr16
sahf
addr16
sahf
addr16
lahf
push
inc
lahf
imul
rcr
inc
mov
imul
rcr
inc
mov
imul
rcr
inc
mov
push
inc
lahf
addr16
mov
ins
inc
mov
push
dec
mov
ins
inc
mov
push
dec
movs
ins
dec
mov
push
inc
mov
outs
jmp
test
loop
stc
stc
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
div
jmp
mov
jno
lock
out
les
out
les
out
lds
retf
out
les
out
les
out
les
les
ret
js
aam
(bad)
jmp
in
push
cmc
cmc
(bad)
cli
cli
cli
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
clc
div
push
repnz
stc
div
call
(bad)
mov
hlt
fmulp
inc
mov
jmp
(bad)
cld
cld
cld
(bad)
clc
clc
clc
(bad)
fstp
(bad)
lahf
popf
pushf
(bad)
mov
mov
call
mov
cwde
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
nop
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
dec
mov
inc
movs
jb
ret
inc
mov
imul
mov
imul
mov
imul
(bad)
mov
imul
mov
push
(bad)
mov
ins
inc
mov
imul
(bad)
mov
ins
inc
mov
imul
(bad)
mov
outs
inc
mov
imul
leave
movs
outs
dec
movs
outs
inc
mov
imul
leave
movs
jo
leave
movs
outs
inc
mov
imul
retf
jmp
sahf
popf
call
rcl
(bad)
jmp
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
in
push
div
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
div
jmp
ror
icebp
(bad)
jno
icebp
(bad)
jno
lock
jb
icebp
enter
int
push
(bad)
jae
lock
jae
out
(bad)
je
out
(bad)
je
out
(bad)
js
ror
(bad)
jmp
jecxz
push
cmc
cmc
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
stc
stc
stc
(bad)
clc
div
push
lock
(bad)
clc
hlt
repnz
(bad)
mov
hlt
fmulp
inc
mov
call
(bad)
cld
cld
cld
(bad)
clc
clc
clc
(bad)
fstp
(bad)
lahf
popf
pushf
(bad)
mov
shl
xlat
mov
fwait
call
mov
fwait
call
mov
cdq
call
mov
cdq
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
nop
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
dec
test
inc
mov
outs
inc
movs
outs
inc
movs
outs
inc
mov
ins
inc
movs
outs
dec
movs
outs
dec
movs
outs
inc
mov
ins
dec
movs
outs
dec
cmps
jo
(bad)
movs
outs
inc
mov
outs
dec
movs
jno
retf
inc
movs
outs
inc
mov
outs
dec
cmps
jno
retf
inc
movs
outs
inc
mov
outs
dec
cmps
jno
retf
test
dec
movs
outs
inc
movs
ins
dec
movs
outs
dec
test
dec
test
inc
movs
outs
inc
mov
outs
dec
stos
je
lods
cmp
movs
mov
(bad)
lock
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
(bad)
cli
cli
cli
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
div
jmp
ret
repz
repz
repz
jno
repnz
jb
repnz
repz
cmp
leave
jae
repnz
jae
icebp
leave
je
icebp
leave
je
out
enter
mov
push
cmc
cmc
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
stc
stc
stc
(bad)
clc
clc
idiv
mov
sahf
push
out
jmp
div
repnz
(bad)
mov
hlt
fmulp
inc
mov
call
(bad)
cld
cld
cld
(bad)
clc
clc
clc
(bad)
fstp
(bad)
lahf
popf
pushf
(bad)
mov
ret
fld
lahf
(bad)
fadd
sahf
(bad)
fadd
sahf
(bad)
fdivr
sahf
(bad)
fdivr
fwait
call
mov
fwait
call
mov
cdq
call
mov
cwde
call
mov
cwde
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
dec
scas
cmp
cmps
jb
enter
enter
(bad)
movs
jo
enter
leave
movs
jb
leave
cmps
jb
leave
movs
jno
(bad)
movs
jo
(bad)
movs
jo
leave
cmps
jb
retf
dec
cmps
jno
enter
enter
retf
dec
test
dec
cmps
jb
enter
enter
retf
test
dec
test
jb
enter
leave
cmps
jb
int3
test
jne
leave
cmps
jno
enter
retf
dec
stos
jbe
int3
stos
jne
leave
cmps
jno
leave
cmps
jno
retf
test
dec
stos
ja
scas
add
test
loop
stc
stc
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
div
jmp
(bad)
nop
push
sar
cmc
sar
cmc
sar
cmc
iret
jns
cmc
sar
not
xchg
hlt
iret
jp
hlt
iret
jp
hlt
iret
jp
hlt
iret
jnp
icebp
into
jle
rol
(bad)
jmp
in
push
cmc
cmc
(bad)
sti
sti
sti
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
stc
clc
clc
push
jmp
call
enter
(bad)
inc
mov
call
(bad)
cld
cld
cld
(bad)
clc
clc
clc
(bad)
fstp
(bad)
lahf
popf
pushf
(bad)
mov
lds
fld
mov
(bad)
fld
mov
(bad)
fld
sahf
(bad)
fdivr
popf
(bad)
fdivr
pushf
(bad)
fdivr
pushf
call
mov
fwait
call
mov
cdq
call
mov
cwde
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
call
mov
call
mov
nop
call
mov
call
mov
call
mov
call
mov
dec
test
jae
enter
enter
retf
dec
cmps
jne
retf
dec
cmps
jae
enter
retf
dec
test
dec
cmps
je
enter
enter
retf
test
dec
test
jae
enter
leave
cmps
jae
retf
test
dec
test
je
enter
leave
cmps
jae
int3
stos
ja
int3
stos
ja
leave
cmps
je
leave
cmps
jae
retf
dec
stos
ja
int3
stos
ja
leave
cmps
je
enter
retf
dec
lods
jns
stos
add
rcl
sar
jmp
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
clc
clc
clc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
div
(bad)
jmp
(bad)
cli
in
(bad)
cli
in
(bad)
cli
in
(bad)
cli
in
(bad)
stc
in
(bad)
stc
in
(bad)
stc
in
(bad)
stc
in
(bad)
stc
jecxz
push
in
call
mov
push
cmc
cmc
(bad)
sti
sti
sti
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
stc
clc
clc
push
out
div
out
call
enter
(bad)
inc
mov
call
(bad)
cld
cld
cld
(bad)
clc
clc
clc
(bad)
fstp
(bad)
lahf
popf
pushf
(bad)
mov
lds
(bad)
fcmovb
mov
(bad)
fcmovb
mov
(bad)
fld
mov
(bad)
fadd
lahf
(bad)
fld
mov
(bad)
fld
lahf
(bad)
fdivr
sahf
(bad)
fdivr
pushf
call
mov
fwait
call
mov
call
mov
cwde
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
call
mov
call
mov
dec
scas
cmp
cmps
jbe
enter
retf
dec
test
dec
cmps
ja
enter
enter
retf
dec
test
jbe
enter
enter
retf
dec
test
jbe
enter
enter
retf
test
js
leave
cmps
jbe
enter
leave
cmps
jne
int3
stos
jns
int3
stos
js
leave
cmps
jbe
enter
leave
cmps
jbe
int3
stos
jp
int3
stos
jp
leave
cmps
jbe
enter
retf
dec
lods
jnp
stos
add
mov
fcos
lock
hlt
hlt
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
(bad)
sti
sti
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
div
(bad)
jmp
(bad)
sti
loop
(bad)
cli
loop
(bad)
cli
loop
(bad)
cli
loope
(bad)
cli
loope
(bad)
cli
loope
(bad)
stc
loope
(bad)
stc
loope
(bad)
stc
loope
push
jecxz
call
enter
in
push
div
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
cli
cli
cli
(bad)
stc
clc
clc
push
out
div
out
call
enter
(bad)
inc
mov
call
(bad)
cld
cld
cld
(bad)
clc
clc
clc
(bad)
(bad)
fdivrp
mov
xchg
pop
(bad)
fmul
test
fcmovb
movs
(bad)
fcmovnb
movs
(bad)
fcmovb
movs
(bad)
fcmovnb
movs
(bad)
fcmovb
mov
(bad)
fcmovb
mov
(bad)
fcmovb
mov
(bad)
fld
mov
(bad)
fadd
lahf
(bad)
fld
sahf
(bad)
fadd
sahf
(bad)
fdivr
popf
(bad)
fdivr
pushf
call
mov
fwait
call
mov
call
mov
cwde
call
mov
cwde
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
dec
stos
jge
retf
test
jp
retf
dec
test
dec
test
dec
stos
jns
retf
stos
jns
retf
dec
test
dec
test
dec
stos
jp
int3
stos
jp
retf
dec
test
dec
test
dec
stos
jp
int3
stos
jnp
retf
test
ja
retf
dec
stos
jnp
int
jnp
retf
dec
test
dec
test
jnp
into
lods
jl
retf
dec
test
dec
stos
jns
iret
scas
jge
stos
add
stos
test
(bad)
cli
cli
cli
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
div
(bad)
jmp
(bad)
sti
jecxz
(bad)
sti
jecxz
(bad)
sti
jecxz
(bad)
sti
jecxz
(bad)
sti
jecxz
(bad)
sti
jecxz
(bad)
sti
loop
(bad)
cli
loop
(bad)
cli
loop
(bad)
clc
in
(bad)
fxch
int
in
in
in
(bad)
clc
clc
clc
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
cli
cli
cli
(bad)
stc
clc
clc
push
in
cmc
icebp
out
call
enter
(bad)
inc
mov
jmp
(bad)
cld
cld
cld
(bad)
stc
stc
stc
jmp
loopne
jmp
xchg
pusha
(bad)
fmulp
lods
(bad)
ffree
test
fadd
cmps
(bad)
fadd
cmps
(bad)
fadd
cmps
(bad)
fadd
cmps
(bad)
fcmovnb
cmps
(bad)
fcmovnb
movs
(bad)
fcmovnb
movs
(bad)
fcmovnb
movs
(bad)
fcmovnb
movs
(bad)
fcmovnb
mov
(bad)
fcmovb
mov
(bad)
fcmovb
mov
(bad)
fld
mov
(bad)
fld
lahf
(bad)
fld
lahf
(bad)
fadd
popf
(bad)
fadd
popf
(bad)
fdivr
popf
call
mov
fwait
call
mov
fwait
call
mov
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
mov
int
jg
int3
lods
jl
int3
stos
jp
retf
stos
jp
int3
lods
jge
int
jge
int3
lods
jl
retf
stos
jnp
int3
stos
jl
into
lods
jge
into
scas
jge
int3
lods
jl
int3
stos
jnp
int3
stos
jnp
into
lods
jge
iret
scas
jg
int
jl
int3
lods
jl
int3
lods
jl
iret
scas
jle
iret
scas
jg
int
jge
int3
stos
jl
int
jge
shr
jg
int
jl
int3
stos
jl
into
lods
jge
shl
inc
jmp
(bad)
(bad)
(bad)
jmp
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
out
out
out
(bad)
clc
clc
clc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
stc
div
(bad)
jmp
(bad)
cld
in
(bad)
cld
in
(bad)
cld
in
(bad)
cld
in
(bad)
cld
in
(bad)
sti
in
(bad)
sti
jecxz
(bad)
sti
jecxz
(bad)
sti
jecxz
(bad)
stc
in
jmp
fcom
push
div
(bad)
cli
cli
cli
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
cli
cli
cli
(bad)
stc
clc
clc
push
jecxz
cmc
lock
call
enter
(bad)
inc
mov
jmp
cld
cld
(bad)
cli
cli
cli
jmp
out
push
(bad)
push
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
xchg
call
mov
(bad)
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
dec
mov
call
mov
call
mov
call
mov
dec
mov
call
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
scas
test
into
mov
dec
scas
test
into
scas
test
into
scas
cmp
scas
cmp
scas
cmp
scas
jg
enter
lds
ins
inc
mov
outs
inc
mov
ins
inc
mov
outs
dec
movs
jo
(bad)
mov
ins
inc
mov
outs
dec
movs
outs
inc
mov
ins
inc
mov
jo
retf
inc
mov
ins
dec
mov
jno
retf
inc
mov
ins
dec
movs
outs
dec
test
inc
push
loope
push
icebp
icebp
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
(bad)
sti
sti
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cli
div
(bad)
jmp
in
(bad)
clc
in
(bad)
clc
in
(bad)
clc
in
(bad)
clc
in
(bad)
clc
in
(bad)
clc
in
push
in
push
in
push
in
push
jecxz
(bad)
call
sti
sti
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
stc
clc
clc
push
jmp
in
call
enter
(bad)
inc
mov
in
jmp
cld
cld
(bad)
cld
cld
cld
(bad)
out
out
out
call
rcl
jmp
and
xchg
jns
call
jns
call
js
call
js
call
jns
call
jns
call
jns
call
js
call
js
call
jns
call
js
call
js
call
js
call
jns
call
js
call
js
call
jns
call
jns
call
jns
call
pop
call
jns
call
pop
call
pop
call
jp
call
pop
call
jns
call
pop
call
pop
call
pop
call
jl
call
jl
call
jle
call
jl
call
jg
call
jl
call
jg
jmp
fwait
jnp
xlat
(bad)
(bad)
push
icebp
icebp
(bad)
cld
cld
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
std
(bad)
out
out
(bad)
in
loop
(bad)
in
loop
(bad)
in
loop
(bad)
in
loop
(bad)
in
loop
(bad)
in
loop
(bad)
in
loop
(bad)
in
loop
(bad)
jmp
loopne
jmp
loopne
jmp
loope
clc
cmc
cmc
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
stc
clc
clc
push
jmp
in
call
leave
mov
inc
mov
in
jmp
cld
cld
(bad)
std
std
std
push
div
(bad)
jmp
jmp
fstp
(bad)
iret
iret
iret
dec
retf
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
retf
call
rcl
(bad)
(bad)
(bad)
in
in
in
(bad)
clc
clc
clc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
stc
clc
clc
push
jmp
out
call
leave
mov
inc
mov
in
jmp
cld
cld
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
std
(bad)
stc
stc
stc
push
cmc
cmc
push
repnz
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
icebp
icebp
push
repz
div
(bad)
cli
cli
cli
(bad)
std
std
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
sti
sti
sti
(bad)
stc
clc
clc
push
jmp
popf
nop
test
fcmovne
mov
inc
mov
out
jmp
cld
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
stc
clc
clc
push
jmp
popf
nop
test
fcmovne
mov
inc
mov
lock
cld
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
std
std
std
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
cld
cld
cld
(bad)
sti
sti
sti
(bad)
stc
clc
clc
push
jmp
popf
nop
test
fcmovne
mov
inc
mov
lock
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
cli
cli
cli
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
stc
stc
stc
(bad)
clc
clc
stc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
(bad)
clc
clc
clc
push
div
push
div
push
div
push
div
push
jmp
push
icebp
out
call
leave
mov
inc
mov
icebp
jmp
out
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
call
rcl
dec
iret
sar
iret
iret
sar
iret
iret
sar
iret
iret
sar
in
in
mov
mov
push
repnz
call
leave
mov
inc
mov
repnz
jmp
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
fcomp
fdivr
fcomp
fdivr
fcomp
fdivr
fcomp
fdivr
fcomp
fdivr
fcomp
fdivr
fcomp
fdivr
fcomp
fdivr
fcomp
fdivr
xlat
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
cmps
mov
push
repnz
call
leave
mov
inc
mov
repz
jmp
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
fcomp
fdivr
fcomp
fdivr
fcomp
fdivr
fcomp
fdivr
fcomp
fdivr
fcomp
fdivr
fcomp
fdivr
fcomp
fdivr
xlat
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
cmps
mov
push
repnz
call
retf
hlt
loopne
inc
mov
hlt
jmp
jmp
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovnu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
fcmovu
(bad)
(bad)
fcos
(bad)
fcos
(bad)
fcos
(bad)
fcos
fcomp
fdivr
fcomp
fdivr
fcomp
fdivr
jmp
cmps
mov
push
repnz
retf
hlt
loopne
inc
mov
hlt
push
call
mov
fwait
push
mov
fwait
jmp
mov
fwait
jmp
mov
fwait
jmp
mov
fwait
jmp
mov
call
mov
call
mov
call
mov
call
mov
call
mov
fwait
jmp
mov
fwait
jmp
mov
fwait
jmp
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
fwait
jmp
mov
fwait
push
mov
fwait
push
mov
pushf
push
mov
pushf
push
mov
pushf
jmp
scas
test
push
repnz
retf
hlt
loopne
inc
mov
cmc
push
repz
push
repz
repz
repz
repz
repz
repz
push
repnz
push
repnz
push
repnz
push
icebp
out
push
icebp
out
push
icebp
in
push
lock
push
lock
push
out
in
push
lock
repz
jmp
repz
jmp
in
jmp
push
in
call
push
in
out
icebp
jmp
push
jmp
push
jmp
lock
in
out
call
loop
out
call
loope
in
out
(bad)
in
out
(bad)
in
in
(bad)
in
in
(bad)
in
in
(bad)
in
in
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
loope
(bad)
jmp
loopne
(bad)
jmp
loopne
(bad)
call
loopne
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
jmp
fst
jmp
fst
jmp
fst
jmp
fst
jmp
fst
jmp
fst
jmp
fst
jmp
(bad)
(bad)
call
fst
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
loopne
(bad)
call
loopne
(bad)
jmp
loopne
(bad)
jmp
loope
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
in
in
(bad)
in
out
(bad)
in
out
(bad)
in
out
(bad)
in
out
(bad)
out
out
(bad)
out
call
jecxz
out
call
jecxz
out
jmp
in
lock
icebp
jmp
push
jmp
push
jmp
push
in
out
repnz
out
repnz
call
push
in
call
push
in
jmp
push
in
jmp
in
call
call
retf
hlt
loopne
inc
mov
cmc
(bad)
stc
div
(bad)
stc
div
(bad)
stc
div
(bad)
clc
div
(bad)
clc
cmc
hlt
(bad)
clc
cmc
hlt
(bad)
clc
cmc
repz
clc
hlt
icebp
push
repz
push
repz
repnz
icebp
out
push
icebp
out
push
lock
push
lock
push
out
in
push
out
jmp
repnz
jmp
in
out
bnd
push
jmp
lock
jecxz
out
out
(bad)
out
out
(bad)
in
in
(bad)
in
in
(bad)
in
in
(bad)
jmp
(bad)
jmp
(bad)
jmp
loopne
jmp
(bad)
jmp
fst
jmp
fst
jmp
fcmovnbe
jmp
fcmovnbe
jmp
fcmovbe
jmp
fcmovbe
jmp
fnop
jmp
fcom
jmp
fmul
jmp
xlat
into
jmp
(bad)
int
loope
int
loope
int3
jmp
aam
jmp
aam
jmp
ror
jmp
ror
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
rol
(bad)
(bad)
(bad)
rol
(bad)
(bad)
(bad)
iret
(bad)
(bad)
(bad)
ret
(bad)
(bad)
ret
(bad)
(bad)
ret
(bad)
(bad)
ret
(bad)
(bad)
ret
(bad)
(bad)
ret
(bad)
(bad)
ret
(bad)
(bad)
ret
(bad)
(bad)
ret
(bad)
(bad)
(bad)
(bad)
fmulp
(bad)
iret
(bad)
rol
(bad)
(bad)
(bad)
rol
(bad)
(bad)
(bad)
rol
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
retf
aam
jmp
aad
(bad)
(bad)
retf
ror
jmp
aad
jmp
xlat
iret
jmp
fcom
(bad)
out
call
sar
fcmovnbe
sar
fcmovnbe
sar
fcmovbe
sar
fcmovnbe
sar
fcmovnbe
sar
fcmovnbe
sar
fcmovnbe
sar
(bad)
sar
fcmovnbe
sar
fcmovnbe
sar
fcmovnbe
sar
(bad)
sar
(bad)
sar
fcmovnbe
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
iret
(bad)
(bad)
iret
(bad)
(bad)
sar
fcmovbe
sar
(bad)
sar
(bad)
sar
(bad)
sar
jmp
in
repz
jmp
call
retf
hlt
loope
inc
mov
idiv
cli
div
(bad)
stc
div
(bad)
stc
div
(bad)
stc
div
(bad)
clc
div
(bad)
clc
cmc
hlt
(bad)
clc
cmc
hlt
(bad)
clc
div
(bad)
clc
hlt
repnz
repz
push
repnz
repnz
push
icebp
out
push
lock
push
lock
push
out
in
push
out
jmp
repz
jmp
in
call
push
jmp
lock
in
out
out
(bad)
out
out
(bad)
in
out
(bad)
in
in
(bad)
in
in
(bad)
in
jecxz
(bad)
jmp
(bad)
jmp
loopne
(bad)
call
(bad)
jmp
fst
jmp
(bad)
jmp
fcmovnbe
jmp
fcmovnbe
jmp
fcmovbe
jmp
(bad)
jmp
fnop
jmp
fcom
jmp
xlat
iret
jmp
(bad)
into
jmp
(bad)
int
loop
int
loope
int3
jmp
aam
jmp
aam
jmp
ror
jmp
ror
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
rol
(bad)
(bad)
(bad)
rol
(bad)
fmulp
(bad)
iret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fmulp
(bad)
rol
(bad)
(bad)
(bad)
rol
(bad)
(bad)
(bad)
rol
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
enter
enter
leave
jmp
aam
jmp
aam
jmp
aad
(bad)
fst
leave
(bad)
(bad)
int3
jmp
xlat
sar
jecxz
sar
in
aam
in
out
call
mov
call
ret
mov
inc
mov
(bad)
fst
enter
(bad)
call
mov
(bad)
mov
scas
test
dec
mov
retf
enter
ror
jmp
aam
jmp
aad
(bad)
mov
mov
(bad)
mov
mov
sar
loop
sar
loop
sar
(bad)
(bad)
push
in
jmp
cwde
(bad)
jmp
rol
push
loop
inc
mov
idiv
cli
clc
idiv
cli
clc
idiv
cli
div
(bad)
stc
div
(bad)
stc
div
(bad)
clc
div
(bad)
clc
div
(bad)
clc
div
(bad)
clc
cmc
repz
clc
hlt
icebp
push
repz
push
repz
repnz
push
icebp
out
push
icebp
in
push
lock
push
out
in
push
out
jmp
repz
jmp
in
out
bnd
push
jmp
push
jmp
lock
loop
out
out
(bad)
in
in
(bad)
in
in
(bad)
in
in
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
(bad)
call
fst
jmp
fst
jmp
(bad)
jmp
(bad)
jmp
fcmovnbe
jmp
fcmovbe
jmp
(bad)
jmp
fcom
jmp
fcom
jmp
xlat
iret
jmp
xlat
into
jmp
(bad)
int
loope
int3
jmp
aad
jmp
aad
jmp
aam
jmp
aam
jmp
aam
(bad)
(bad)
(bad)
jmp
rol
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
rol
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
rol
(bad)
(bad)
(bad)
rol
(bad)
(bad)
(bad)
rol
(bad)
(bad)
(bad)
rol
(bad)
(bad)
(bad)
rol
(bad)
(bad)
(bad)
rol
(bad)
(bad)
(bad)
rol
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
rol
jmp
ror
jmp
aam
jmp
aam
jmp
aam
jmp
aad
jmp
aad
jmp
(bad)
int
(bad)
retf
jmp
(bad)
into
jmp
fcmovbe
jmp
fst
jmp
(bad)
(bad)
in
out
call
leave
(bad)
jmp
aad
(bad)
mov
loope
dec
ret
fmul
enter
sar
fcmovnbe
int
in
in
call
leave
(bad)
rcl
dec
sar
in
out
(bad)
fst
sar
lock
push
in
out
lock
jmp
(bad)
(bad)
fcom
sar
iret
mov
lock
bnd
(bad)
out
out
(bad)
(bad)
(bad)
push
out
jmp
div
repnz
fxch
(bad)
clc
out
inc
mov
clc
(bad)
sti
clc
idiv
cli
div
(bad)
cli
div
(bad)
stc
div
(bad)
stc
div
(bad)
stc
div
(bad)
clc
div
(bad)
clc
cmc
hlt
(bad)
clc
div
push
hlt
repnz
repz
push
repz
repnz
repnz
push
icebp
out
push
icebp
in
push
lock
push
out
jmp
repz
jmp
repz
jmp
in
call
push
jmp
push
jmp
lock
loop
out
out
(bad)
out
out
(bad)
in
in
(bad)
in
in
(bad)
jmp
(bad)
jmp
(bad)
jmp
fdivr
jmp
(bad)
jmp
(bad)
(bad)
call
fst
jmp
fst
jmp
(bad)
jmp
fcmovnbe
jmp
fcmovbe
jmp
fcmovbe
jmp
(bad)
jmp
(bad)
jmp
fcom
jmp
fmul
jmp
xlat
into
jmp
xlat
int
jecxz
int
loop
int3
jmp
(bad)
retf
jmp
aad
jmp
aad
jmp
aad
jmp
aam
jmp
ror
jmp
ror
jmp
ror
jmp
ror
jmp
ror
jmp
ror
jmp
rol
jmp
ror
jmp
rol
jmp
rol
jmp
rol
jmp
rol
jmp
ror
jmp
rol
jmp
ror
jmp
ror
jmp
ror
jmp
ror
jmp
ror
jmp
aam
jmp
aam
jmp
aad
jmp
aad
jmp
(bad)
retf
jmp
(bad)
int3
jmp
(bad)
int
jecxz
int
jecxz
into
jmp
fmul
jmp
fmul
jmp
xlat
iret
jmp
(bad)
jmp
(bad)
(bad)
jmp
loopne
(bad)
out
call
sar
in
out
jmp
(bad)
jmp
fcom
jmp
(bad)
(bad)
in
in
(bad)
in
out
jmp
fstp
push
in
out
repnz
call
(bad)
jmp
fdivr
repz
jmp
(bad)
push
lock
push
repnz
push
lock
call
leave
(bad)
(bad)
fxch
int
xlat
retf
retf
aad
push
hlt
repnz
icebp
out
push
in
jmp
loopne
xlat
push
out
jmp
clc
hlt
repnz
mov
in
(bad)
cld
bnd
cmc
sar
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
mov
mov
mov
cmc
mov
mov
mov
jecxz
retf
repz
cmc
(bad)
cld
cli
cmc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
adc
cmp
push
iret
addr16
inc
int3
jle
mov
sets
aas
mov
test
rol
add
add
add
add
add
add
add
and
add
add
and
test
add
add
xor
add
add
and
test
add
add
inc
inc
add
add
and
sub
add
add
add
add
or
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
inc
add
add
add
popa
add
inc
add
ins
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
ins
add
je
imul
add
add
add
mov
loopne
add
add
push
add
add
outs
add
inc
add
ins
add
dec
add
data16
add
mov
add
add
add
add
add
add
bound
xor
add
push
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outs
add
add
jae
and
dec
add
je
ja
outs
add
imul
add
add
jbe
add
and
push
add
jb
jbe
imul
add
add
xor
or
add
inc
add
ins
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
outs
add
add
outs
add
ins
add
popa
add
add
add
imul
add
add
js
add
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
and
add
inc
add
add
add
jb
imul
outs
add
ins
add
imul
outs
add
ins
add
add
ja
imul
add
add
js
add
add
add
or
add
push
add
outs
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
jae
jae
add
bound
ins
add
and
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
mov
ins
ins
and
jb
imul
xor
and
arpl
imul
sub
aas
ds
ins
jbe
cmp
jae
ins
bound
ins
popa
outs
imul
jb
imul
xor
and
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
js
ins
outs
jae
popa
jae
jbe
cmp
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
js
ins
outs
jae
popa
jae
jbe
cmp
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
js
ins
outs
jae
js
imul
ja
ja
ja
outs
jb
das
xor
xor
das
pop
dec
dec
push
arpl
ins
popa
sub
popa
outs
arpl
ds
popa
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
ins
gs
jo
ins
imul
cs
jo
and
das
ds
je
jne
je
outs
outs
and
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
ins
gs
js
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
or
and
and
and
sub
inc
and
outs
imul
jo
imul
and
and
and
and
and
and
and
jne
ja
outs
je
je
and
popa
outs
and
and
outs
outs
ja
and
gs
inc
arpl
jne
je
inc
outs
outs
je
outs
ins
and
gs
and
jo
popa
arpl
je
and
and
and
and
and
and
jno
gs
gs
js
arpl
imul
ins
and
fs
je
and
and
and
and
ins
ins
outs
ja
outs
addr16
and
and
and
and
gs
gs
gs
js
arpl
imul
ins
and
ins
gs
ins
cmp
outs
jbe
imul
and
inc
arpl
jae
cmp
jae
and
das
ds
and
and
and
gs
gs
gs
js
arpl
imul
ins
and
ins
gs
ins
cmp
jne
jb
inc
fs
imul
je
jb
and
inc
arpl
jae
cmp
jae
and
das
ds
and
and
and
gs
gs
gs
js
arpl
imul
ins
and
ins
gs
ins
cmp
push
jbe
imul
jne
inc
arpl
jae
cmp
jae
and
das
ds
and
and
and
and
and
and
arpl
jns
outs
and
jno
gs
gs
js
arpl
imul
ins
and
fs
ins
ins
and
popa
bound
imul
and
imul
imul
jp
je
outs
outs
cs
and
and
and
and
and
and
jne
ja
outs
je
je
and
imul
ins
and
and
imul
imul
jp
je
outs
outs
and
jb
bound
imul
and
and
and
and
and
and
ins
jo
je
bound
imul
and
gs
and
and
jno
gs
gs
js
arpl
imul
ins
and
fs
and
and
and
and
and
and
and
cmp
gs
gs
gs
js
arpl
imul
ins
and
gs
cmp
jne
jb
inc
fs
imul
je
jb
and
inc
arpl
jae
cmp
jae
and
das
ds
and
and
jb
jno
gs
gs
jb
jbe
ins
gs
or
and
and
jo
ins
imul
push
gs
gs
dec
imul
or
and
and
and
gs
jne
je
jae
gs
bound
gs
gs
and
jb
imul
gs
gs
outs
arpl
and
jae
outs
ins
and
das
ds
and
and
and
gs
imul
gs
push
outs
jb
jae
jb
arpl
cmp
and
dec
inc
cmp
je
ins
and
push
popa
ins
gs
imul
and
das
ds
and
and
popa
jo
ins
imul
push
gs
gs
dec
imul
or
and
jae
arpl
imul
cmp
je
jne
je
outs
outs
ds
arpl
jo
je
bound
imul
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
jo
je
bound
imul
or
and
jo
ins
imul
ds
and
and
sub
ins
imul
popa
ins
ins
and
outs
outs
ja
and
jb
imul
popa
je
je
imul
imul
and
and
imul
outs
and
jb
and
je
and
outs
outs
ja
and
ins
ins
and
je
ins
popa
je
arpl
ins
jns
jae
ins
arpl
push
jae
and
ins
jo
je
bound
outs
jbe
jb
outs
ins
outs
je
sub
and
and
and
cmp
sub
and
jne
and
jo
imul
and
and
imul
outs
and
jb
and
je
and
outs
outs
ja
and
sub
jne
arpl
ins
outs
je
je
and
ins
ins
outs
ja
outs
and
jo
outs
jb
gs
push
and
fs
and
and
and
cmp
sub
jo
outs
jb
gs
push
and
cmp
xor
cmp
popa
sub
sub
sub
sub
xor
xor
jge
das
ds
and
and
cmp
popa
jo
ins
imul
ds
das
arpl
jo
je
bound
imul
cmp
sub
popa
bound
je
gs
gs
outs
jb
push
imul
arpl
ins
outs
outs
and
outs
je
outs
ins
jae
popa
outs
and
ins
outs
addr16
sub
outs
outs
ja
and
and
and
gs
and
and
cmp
sub
gs
outs
fs
arpl
or
and
gs
outs
fs
je
jae
gs
bound
or
and
and
jae
gs
bound
fs
je
je
or
and
and
and
and
gs
xor
and
and
and
and
and
ins
gs
jb
jae
data16
push
imul
inc
outs
ins
ins
outs
outs
sub
jb
ins
jae
or
and
and
and
and
jb
imul
xor
xor
xor
or
and
and
and
and
outs
arpl
jae
jb
jb
push
je
jb
cmp
or
and
and
and
and
and
bound
dec
gs
outs
imul
and
xor
xor
xor
arpl
xor
or
and
and
and
and
addr16
addr16
or
and
and
and
and
ds
and
fs
outs
fs
je
jae
gs
bound
or
das
fs
outs
fs
arpl
sub
cmp
popa
jae
jbe
cmp
jae
ins
bound
add
push
or
or
add
nop
cmp
add
jmp
test
pop
fdivrp
inc
jmp
pop
mov
sub
or
in
adc
xchg
das
xor
stc
adc
cmp
mov
adc
lock
sub
test
ss
xor
jmp
rcl
repnz
xchg
popf
xchg
push
jge
and
addr16
rol
call
add
add
add
add
add
add
or
jp
or
push
push
inc
push
jns
inc
lods
ins
xchg
daa
dec
sbb
inc
inc
sahf
xchg
add
add
pop
cs
bound
enter
fdivrp
or
add
add
sar
or
add
add
add
pop
inc
outs
jb
ins
ins
dec
popa
imul
jb
gs
ins
add
add
add
and
