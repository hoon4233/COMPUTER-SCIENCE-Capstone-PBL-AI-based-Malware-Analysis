inc
mul
mov
adc
cmp
shl
jb
xor
bound
cmp
cmps
clc
and
mov
adc
cmp
cmps
pop
pop
cmps
cmp
ret
mov
cmps
cmp
jecxz
push
mov
stos
mov
dec
inc
sbb
sub
clts
mov
xor
jle
mov
add
ds
jmp
cmps
mov
sub
repnz
gs
ins
and
pop
xor
dec
js
leave
inc
jo
cli
fs
xlat
sub
shl
js
icebp
ins
and
jae
cwde
cld
xchg
cmp
sub
mov
ss
jnp
xor
xchg
cmps
mov
into
sub
pusha
mov
pop
jns
mov
pop
mov
cmp
js
pop
les
(bad)
jo
sub
push
mov
mov
rol
arpl
push
pusha
mov
sub
rol
pop
jns
mov
add
shl
xor
shl
addr16
das
jo
cmps
mov
or
jns
mov
cmps
enter
pop
shl
add
jns
outs
clc
gs
bound
aas
sub
aas
addr16
pop
dec
xchg
mov
ds
rcr
pop
(bad)
repz
push
(bad)
mov
xor
cmp
mov
mov
repz
mov
shl
(bad)
mov
(bad)
outs
std
pop
mov
(bad)
gs
scas
mov
pop
mov
mov
mov
xor
lods
cmp
int
cwde
mov
cmp
arpl
jns
rcr
sbb
pusha
ds
xchg
cmp
cmps
cmp
ds
push
or
cmps
mov
add
cmps
rcl
pop
les
test
jo
in
inc
jo
and
js
xchg
sub
je
rcl
cmp
repnz
cmp
(bad)
clc
repz
dec
ja
cmps
cmp
dec
rcl
sbb
jns
pop
lods
les
cmps
shl
cmps
outs
stc
ror
les
sub
jns
pop
cmp
pop
stc
adc
xlat
pusha
gs
ins
stc
push
dec
imul
cmp
out
mov
repz
push
pop
xchg
cmp
adc
jns
pop
xchg
or
cmps
les
pop
jns
leave
xchg
pop
shl
push
pop
jns
mov
cmps
rol
inc
cmps
cmp
repnz
(bad)
and
in
inc
jo
outs
clc
adc
cmps
cmp
cmp
jp
cmp
gs
ins
iret
mov
push
xchg
mov
pop
mov
pop
cmps
push
jo
movs
push
jo
cmps
push
jo
cmps
mov
jo
mov
jo
cs
enter
jo
inc
mov
ficom
mov
sar
inc
test
sub
and
ja
sub
and
rol
cmps
mov
jo
dec
ds
cmps
or
xchg
in
std
mov
ret
ret
enter
adc
aaa
dec
leave
pop
cmp
mov
daa
repz
sahf
outs
cmps
cmp
test
stc
icebp
pushf
mov
xchg
sti
das
push
fisub
data16
ins
iret
fst
pop
push
cmps
mov
into
div
jo
cwde
cmp
int
sbb
int
pop
les
cmps
mov
mov
jae
cmps
xor
fstp
dec
fs
shl
sbb
pop
dec
pusha
leave
rol
cwde
icebp
fidivr
jo
popa
les
cmps
xor
fnsave
dec
ja
movs
cmp
dec
xor
icebp
in
arpl
xchg
sti
xor
repnz
cs
fisubr
sbb
dec
pop
movlps
cmps
int3
xchg
mov
sub
iretw
and
cmps
push
jo
shl
pop
shl
cmps
cmp
lock
int
xor
dec
push
inc
mov
sub
dec
cmps
cmp
lock
dec
mov
mov
int
xor
sti
xor
scas
mov
rol
ret
das
push
inc
mov
daa
mov
pop
int
test
mov
into
cs
inc
hlt
outs
mov
mov
mov
adc
pop
jl
xor
hlt
outs
mov
mov
or
retf
sti
arpl
xor
and
js
(bad)
and
(bad)
jbe
pop
jno
rol
dec
cmc
shr
(bad)
jae
mov
es
jle
inc
mov
add
push
sti
cmp
ret
jae
mov
into
loopne
xor
pop
add
retf
js
mov
out
dec
aaa
cmps
dec
mov
loop
jg
fadd
(bad)
(bad)
cmps
fs
outs
clc
and
cmps
cmp
gs
ins
sti
inc
stos
mov
es
mov
inc
pop
test
leave
cs
pop
hlt
cs
mov
pop
les
ss
js
mov
out
dec
aaa
cmps
dec
mov
popa
dec
jns
and
jo
pop
cmp
and
ret
pop
(bad)
sub
js
mov
clc
mov
pop
jl
jmp
pop
les
leave
pop
(bad)
stc
mov
les
leave
pop
(bad)
stc
mov
les
leave
pop
(bad)
stc
out
mov
mov
mov
cmp
mov
cmp
jmp
shl
fs
ins
sti
imul
or
pop
jmp
cmps
int3
adc
mov
dec
sbb
jo
fidiv
retf
pop
pusha
addr16
xchg
shl
and
cld
cs
mov
das
das
inc
jo
in
loopne
jle
lock
(bad)
stc
jae
mov
(bad)
push
pop
test
pop
fs
outs
clc
and
gs
ins
sti
imul
mov
jle
mov
repnz
sar
jo
fidiv
retf
pop
pusha
addr16
xchg
shl
and
cld
cs
mov
das
das
inc
jo
in
loopne
loop
cmps
int3
adc
mov
ror
js
mov
pusha
mov
addr16
ins
daa
mov
mov
xor
jne
jle
mov
repnz
(bad)
xor
(bad)
xor
cs
fwait
sub
js
sbb
dec
mov
jmp
out
ds
mul
sar
sahf
in
(bad)
es
mov
loopne
jo
fs
outs
clc
and
gs
ins
sti
inc
scas
test
xchg
ret
stc
icebp
pop
ds
in
pop
push
xlat
in
es
(bad)
(bad)
mov
iret
gs
je
ins
cwde
add
sub
mov
ins
cwde
aad
les
aas
cs
xchg
cs
mov
outs
clc
and
gs
ins
sti
imul
enter
jo
inc
mov
retf
pop
rcr
cmp
lock
sbb
iret
les
cmps
push
sbb
int
cwde
aad
cmp
loop
jo
push
fdivr
jae
mov
lock
fs
outs
clc
and
pusha
lock
sbb
pushf
(bad)
mov
jo
call
cmp
cmps
imul
pop
push
pop
mov
leave
hlt
xor
xor
sti
cs
push
xchg
mov
dec
loop
cmps
fs
outs
clc
and
sub
ins
daa
mov
call
mov
and
je
int
cwde
xchg
xlat
cmp
loop
and
fidiv
ss
mov
cmps
mov
mov
pusha
or
imul
jle
aas
addr16
es
iret
mov
pop
cmps
mov
(bad)
not
and
cmps
cmp
cmc
xchg
sti
jns
test
mov
loop
jns
ror
stc
(bad)
and
je
iret
fwait
xchg
je
mov
leave
xchg
mov
leave
mov
jo
cmps
cmp
cmc
es
jge
cmp
scas
loopne
stos
addr16
shr
sti
xor
test
mov
pop
mov
pusha
dec
ds
inc
idiv
gs
outs
stc
rcr
pop
jo
cmps
rol
inc
cmps
cmp
pusha
lock
add
stc
out
mov
stc
cmc
es
or
in
(bad)
add
and
or
fisttp
jl
and
jno
cmps
mov
cmp
les
mov
mov
cmps
shl
add
push
cmps
shl
sti
push
pop
ins
js
dec
mov
cmps
mov
jo
iret
les
xlat
pop
lds
fidivr
dec
jo
int
sbb
inc
jns
mov
pop
imul
arpl
dec
leave
pop
cmp
stos
mov
jo
dec
addr16
cmps
mov
jo
push
das
and
cmps
mov
ret
xor
data16
(bad)
popa
mov
inc
test
test
inc
aaa
cmps
cmp
dec
pop
cmp
mov
jo
and
mov
es
or
in
(bad)
add
cs
aad
mov
stc
cmc
pop
ds
in
sti
jae
add
adc
inc
mov
jns
ss
inc
les
xor
pop
cmps
cmp
ss
mov
cmps
(bad)
stc
out
xchg
jecxz
cmc
sar
(bad)
movs
cmp
jae
mov
fiadd
les
xor
(bad)
and
pusha
mov
cmps
cmp
mov
cwde
les
push
cs
mov
and
(bad)
mov
fcmovb
jo
repnz
in
xchg
in
sbb
inc
jns
mov
lahf
les
cmp
cs
aas
addr16
inc
mov
fs
jmp
shl
sti
push
pop
lods
in
cmps
cmp
jae
xor
dec
adc
leave
pop
cmp
loop
dec
mov
les
lds
adc
ss
in
xchg
in
jo
lods
call
xchg
les
ds
jle
mov
pop
xor
pop
pop
les
je
cmp
jbe
cmp
inc
mov
loop
lds
ins
outs
clc
and
es
ins
daa
mov
js
es
dec
cmps
cmp
cs
data16
and
mov
sub
js
fwait
or
stos
jo
cmps
xor
retf
jo
cs
fdivr
jae
mov
fstp
mov
pop
jg
repz
mov
sub
jb
cmp
xor
aas
repz
pop
cmp
jae
mov
xor
add
dec
jo
and
js
pop
int3
xchg
mov
popa
rcl
int3
(bad)
add
and
mov
and
mov
shr
pop
jns
xchg
ret
(bad)
xor
dec
jo
into
cmps
ret
stc
icebp
and
mov
xchg
loopne
into
push
fdivr
jae
mov
fnstsw
add
mov
xchg
pop
dec
dec
mov
mov
mov
pop
mov
jo
jle
mov
or
and
(bad)
adc
retf
jg
shl
sbb
ds
fidiv
jo
dec
inc
icebp
icebp
xor
cmp
ss
sbb
int
sbb
cmps
cmp
pop
cmps
movs
xor
dec
sbb
cmps
mov
into
int
sbb
int
and
xchg
push
jo
sub
js
mov
out
dec
aaa
cmps
dec
mov
jmp
leave
rol
cwde
dec
enter
cmps
mov
ret
jb
push
(bad)
ss
dec
mov
int
jo
cs
xchg
cs
mov
pop
dec
mov
pop
push
jo
clc
gs
outs
stc
rcr
xchg
jo
cmps
rcl
cmp
pusha
lock
mov
cmp
inc
mov
sbb
mov
lods
cmp
and
(bad)
sbb
inc
jns
faddp
push
jo
cs
std
mov
les
int
les
aas
addr16
jmp
jg
test
fs
jo
mov
ss
push
pop
cmps
mov
cli
pop
lds
mov
pop
lds
enter
fcomp
mov
aaa
repz
cwde
xor
cmps
dec
mov
ss
fdivr
mov
les
mov
les
xchg
in
and
cs
aas
addr16
sar
and
mov
and
(bad)
sbb
jns
mov
pop
imul
pop
das
dec
cmps
cmp
loop
jns
test
inc
cmps
cmp
cmc
(bad)
jo
sub
and
div
stc
jae
xor
cmps
push
and
les
ret
pop
mov
aaa
mov
pop
mov
cli
pop
lds
ss
out
cs
std
mov
les
xchg
in
and
cs
aas
addr16
mov
xchg
leave
pop
les
and
retf
pop
lds
xor
gs
je
mov
retf
pop
lds
leave
pop
mov
push
mov
pop
mov
jo
adc
dec
leave
pop
cmp
and
jb
cmps
xor
mov
les
mov
les
xchg
out
cwde
int
cmp
arpl
jg
and
je
neg
aad
pop
lds
and
jo
and
jno
cmps
mov
jo
cmps
push
movs
(bad)
in
sbb
jp
fimul
(bad)
jl
pop
les
rcr
aaa
iret
cmc
nop
je
mov
retf
pop
lds
leave
pop
mov
(bad)
cmps
dec
jp
and
jo
cmps
push
jno
data16
ss
imul
cmps
rcr
repnz
push
(bad)
add
int
sbb
sbb
(bad)
cwde
std
push
les
leave
pop
cmp
lods
cld
cmc
sahf
pop
lds
pop
cmps
push
fst
in
sbb
jp
fiadd
into
(bad)
jl
pop
les
rcr
aaa
iret
adc
pop
lds
leave
pop
mov
(bad)
cmps
dec
jp
and
jo
cmps
push
jno
add
xor
iret
imul
cmps
rcl
pop
(bad)
rep
push
(bad)
add
int
sbb
sbb
(bad)
cwde
jno
les
leave
pop
cmp
lods
cld
cmc
sahf
pop
lds
mov
and
mov
cmps
push
in
in
sbb
jp
fidiv
(bad)
jl
pop
les
shl
mov
pinsrw
int
sbb
neg
test
pop
mov
(bad)
cmps
dec
jp
and
jo
cmps
push
jno
(bad)
xor
iret
imul
cmps
sar
stos
push
(bad)
add
int
sbb
sbb
(bad)
cwde
cdq
push
les
leave
pop
cmp
mov
(bad)
sub
daa
fidiv
(bad)
jl
pop
les
shl
mov
pinsrw
es
cmp
mov
les
lock
cmp
mov
les
int3
pop
les
fnsave
jns
aaa
push
outs
shl
adc
in
stc
out
xchg
jecxz
cmc
popa
mov
jo
mov
enter
cmp
mov
les
jmp
(bad)
popa
sti
mov
retf
jg
push
aas
jo
sub
and
pop
imul
pop
ins
push
mov
cmps
jecxz
cmc
and
mov
test
mov
cmps
cmp
xchg
jae
mov
cmps
mov
jo
add
(bad)
repz
les
and
push
cmps
pop
mov
aas
les
mov
les
sub
and
pop
imul
jg
mov
div
stc
out
push
fdivr
mov
les
mov
les
xlat
in
sti
mov
les
leave
mov
jo
cmps
cmp
jae
xor
cmps
mov
out
lds
leave
pop
les
mov
cmps
cmp
loop
stc
out
cmps
jecxz
cmc
and
mov
test
jo
cmps
cmp
mov
les
out
lds
popa
lahf
mov
retf
jg
push
jo
es
cmp
leave
pop
les
mov
pop
imul
pop
ins
dec
mov
lds
jo
inc
mov
sahf
pop
lds
retf
cmc
mul
(bad)
sti
mov
les
leave
lock
stc
jae
mov
pop
jg
mov
fcmovb
jo
and
cmps
mov
jo
add
(bad)
pop
iret
imul
cmps
mov
retf
pop
lds
cmps
mov
pushf
leave
pop
les
cmps
cmp
int
cwde
(bad)
cmp
push
repz
ficomp
(bad)
mov
pop
imul
inc
jns
mov
pop
imul
arpl
stc
out
mov
stc
cmc
sar
mov
cmps
mov
ficomp
(bad)
mov
pop
mov
stos
pop
lds
leave
pop
(bad)
repz
cmp
push
sahf
std
sub
mov
and
pusha
mov
cmps
cmp
leave
pop
les
mov
cs
aas
addr16
pop
movs
cmp
add
icebp
cmc
pop
je
sub
and
fidiv
ss
in
leave
pop
les
mov
cmps
cmp
cs
aas
addr16
sbb
jne
cmps
mov
xchg
pop
lds
leave
pop
les
mov
cs
aas
addr16
leave
cmps
cmp
add
cdq
xlat
cmps
cmp
cmps
ror
jg
test
fs
mov
xlat
les
mov
les
leave
pop
(bad)
std
mov
les
inc
pop
lds
rcr
aas
jo
cmps
enter
dec
(bad)
pushf
es
xor
mov
xchg
pop
lds
popa
shl
daa
cmps
int3
xchg
mov
pop
mov
mov
(bad)
jo
and
cmps
mov
(bad)
sub
and
fidiv
ss
lock
pop
les
mov
cmps
cmp
cs
aas
addr16
and
mov
jg
scas
cmp
sub
and
vaddss
(bad)
mov
pop
imul
pop
ins
push
mov
mov
stc
cmc
and
mov
test
stos
cmps
cmp
mov
pop
(bad)
jg
push
jo
and
sbb
pop
les
and
jo
cmps
mov
imul
pop
mov
leave
pop
les
mov
xor
icebp
loopne
int
pop
(bad)
(bad)
mov
popf
jp
cmps
mov
(bad)
ss
push
cmps
cmp
leave
cmps
cmp
int
pop
sub
and
(bad)
sub
and
adc
mov
pop
mov
dec
aaa
cmps
dec
mov
pop
mov
jo
adc
retf
pop
mov
imul
data16
mov
pop
(bad)
std
mov
(bad)
(bad)
cwde
test
arpl
sbb
sub
and
(bad)
sub
and
ins
push
jo
and
pusha
mov
inc
xor
mov
lds
mov
les
leave
icebp
xor
out
push
fdivr
mov
les
mov
les
leave
pop
les
pinsrw
pop
(bad)
sti
mov
les
leave
icebp
xor
mov
les
leave
icebp
xor
leave
sub
xchg
leave
pop
les
dec
les
retf
repz
mov
cmps
dec
ja
and
(bad)
enter
jo
inc
mov
sahf
pop
lds
ficomp
(bad)
data16
(bad)
pusha
scas
mov
(bad)
shl
sti
mov
les
leave
icebp
xor
mov
mov
cmps
dec
jl
and
(bad)
sti
push
pop
ins
js
and
(bad)
sti
push
pop
ins
js
and
(bad)
sti
push
pop
ins
js
jg
test
fs
(bad)
pop
lds
pusha
scas
rcl
pop
les
push
ficomp
leave
iret
mov
jmp
cmp
neg
adc
xlat
fs
ins
stc
push
dec
cld
xor
sbb
jmp
jo
loop
jo
cmps
cmp
jae
repz
cmps
push
sub
cmp
mov
aas
cwde
inc
push
les
je
cmp
jae
les
icebp
loop
jno
cmps
cmp
jae
clc
sti
push
dec
cld
xor
ss
lods
mov
shl
fwait
test
mov
pop
les
mov
cmps
cmp
ss
cmps
outs
stc
shl
ins
iret
popa
rcr
mov
loop
stc
icebp
iret
mov
jo
cmps
push
adc
out
sbb
int
cwde
pop
ret
mov
les
jo
outs
clc
and
and
ins
sti
imul
stc
(bad)
cmps
retf
stc
lock
ds
in
stc
out
and
je
out
jo
push
cmp
cmp
ss
dec
test
xor
jbe
cmp
mov
ds
out
je
cmps
cmp
(bad)
out
jo
out
xor
test
jne
ds
aas
addr16
dec
movs
cmp
pop
cmp
test
add
cmp
je
mov
jo
dec
pop
jb
cmps
les
adc
pop
addr16
mov
and
je
cs
aaa
mov
ror
cmps
cmp
cmp
int
push
test
pop
xor
cmp
cmps
dec
jge
dec
cmps
xor
cmps
ds
test
pop
ds
test
push
(bad)
jae
mov
fbld
ds
test
cmps
cmp
mov
int
cmp
sar
test
cmps
mov
jo
stos
and
ja
sub
jbe
jp
xchg
mov
xor
dec
or
cmp
xor
cmp
test
cmps
mov
jo
stos
and
ja
aas
cdq
cmp
pop
mov
xor
xchg
sti
cdq
xlat
movs
cmp
popa
pop
adc
cmps
mov
jo
pop
jnp
ja
cdq
xor
pop
les
ja
cmp
xchg
sti
cdq
and
cmp
jp
aaa
pusha
ds
stos
out
jb
cmps
cmp
shl
add
xchg
sti
cdq
mov
dec
xor
cmps
mov
jo
pusha
ds
out
jb
cmps
cmp
leave
mov
les
cmp
mov
popa
mov
jo
dec
aas
jno
cmps
call
lahf
movs
xor
pop
and
xchg
mov
daa
ss
fild
jo
push
xlat
in
ja
mov
dec
test
cmps
cmp
jecxz
xor
cmps
ds
out
cdq
mov
cmps
xor
cmps
ds
test
cmps
cmp
mov
mov
jo
dec
cmps
jo
cmps
mov
pop
push
mov
mov
add
ja
cmp
pop
sar
cmp
cmp
mov
jo
outs
jp
ss
xor
xor
fwait
xor
scas
sti
or
and
jnp
mov
xor
call
or
jo
fadd
(bad)
adc
sti
(bad)
je
mov
jo
dec
or
xor
(bad)
xor
dec
adc
fidivr
jp
aaa
mov
rcl
mov
mov
pop
push
mov
mov
and
ja
jnp
cmp
cmp
push
xchg
cmp
cmps
les
adc
shl
jg
arpl
jo
repz
cmp
(bad)
mov
stc
lock
jne
push
jns
adc
jo
das
jle
cmp
add
mov
lea
cmps
xor
mov
fcmovb
xor
les
aaa
jnp
mov
and
cmps
xor
jae
push
lock
cmp
ja
cmp
aaa
jnp
mov
jg
ja
cmp
shr
dec
pop
cmp
js
out
jb
in
or
mov
and
ja
mov
stc
lock
cmp
mov
mov
mov
stos
mov
ja
mov
aas
stc
(bad)
mov
stc
lock
jl
out
jo
mov
cs
out
cli
ss
aas
gs
ds
leave
mov
call
stos
stos
xor
aad
icebp
fdivr
sbb
jl
out
jo
mov
cs
out
cli
ss
aas
gs
add
jo
mov
call
stos
stos
xor
aad
(bad)
xor
(bad)
xor
cs
out
add
loopne
cmps
or
cmc
repnz
imul
mov
dec
(bad)
daa
pop
div
cmps
int3
xchg
mov
pop
ds
in
sbb
sbb
fs
cs
sbb
dec
mov
sub
in
sbb
sbb
dec
das
cmps
cwde
pusha
test
lods
cmp
inc
mov
into
cs
sbb
sbb
outs
das
cmps
cwde
test
sbb
jle
cmps
cwde
inc
test
sbb
push
das
cmps
cwde
sub
outs
clc
and
inc
hlt
ins
daa
lea
jbe
cs
out
cs
(bad)
xor
(bad)
xor
iret
mov
xor
push
jns
icebp
loop
push
out
cmps
jecxz
cmc
and
pushf
sub
mov
push
jnp
cmps
mov
jo
ret
mov
(bad)
jo
mov
mov
test
jg
mov
ret
icebp
loop
jno
cmps
cmp
cmps
adc
cmps
cmp
mov
sbb
fisttp
ss
jle
xor
cmp
int3
arpl
push
fdivr
jae
mov
icebp
loop
jno
cmps
cmp
push
pop
cmp
dec
sbb
jo
cmps
enter
shl
pop
cmps
cmp
sub
pop
test
xchg
jecxz
cmc
sub
data16
std
jae
imul
int
sbb
int
pop
shr
push
cmps
cmp
jae
imul
not
fiadd
ds
in
sbb
pop
dec
rcr
jo
mov
fistp
mov
ss
fdivr
jae
mov
leave
rcr
cwde
fsqrt
cmp
mov
mov
fdivp
les
pop
test
inc
shl
dec
lahf
push
cmps
fs
outs
clc
and
adc
mov
mov
(bad)
stc
jae
mov
(bad)
push
pop
xchg
mov
pop
mov
cmp
jle
mov
pop
mov
mov
jae
push
je
cmps
push
jno
loop
and
rol
sbb
sub
data16
pop
les
cmp
mov
es
mov
out
jo
outs
stc
shl
ins
iret
xor
and
pop
adc
inc
adc
leave
shl
sbb
pop
cs
test
fnstsw
jo
inc
mov
retf
das
jmp
shl
jl
icebp
ins
sti
inc
scas
mov
cmp
add
in
inc
leave
test
je
call
cmp
jg
aaa
call
cmp
jg
xor
les
cmps
dec
ins
cmp
jg
xor
cmps
dec
pusha
cmp
jg
xor
xor
cmp
cmp
loop
std
jb
ds
and
jle
ss
xor
xor
xchg
ss
or
cmp
sar
adc
pcmpgtw
mov
test
and
shl
movs
xor
and
mov
mov
aas
jg
mov
cmp
stc
xor
jae
push
mov
sub
jne
sbb
dec
bound
cmps
xor
arpl
mov
in
jns
fs
sub
cmps
cmp
jae
mov
pusha
mov
pop
mov
jae
pop
mov
test
movs
ds
and
je
repnz
stc
and
rcl
adc
pop
addr16
lock
cmp
daa
jle
aaa
dec
or
leave
pop
les
adc
mov
add
mov
pop
jbe
shl
into
and
jb
fwait
cmp
mov
mov
ret
repz
pop
sbb
push
into
cmps
cmp
mov
dec
mov
xor
xor
je
addr16
xor
mov
adc
or
ret
repz
dec
and
daa
pop
jbe
sar
into
and
je
adc
jbe
dec
cmp
sar
inc
mov
pusha
mov
pop
mov
jno
and
je
loop
sti
jae
mov
xor
dec
aas
sti
arpl
xor
pop
dec
aaa
shr
into
out
mov
cmp
daa
pop
jbe
rol
jae
fwait
cmp
mov
mov
xor
jo
mov
cmp
cmps
mov
sub
xor
mov
and
mov
jo
and
fs
outs
clc
and
cmp
ins
daa
leave
mov
mov
ds
daa
inc
leave
dec
cmp
or
mov
jo
push
mov
jo
mov
sti
jae
push
cwde
xor
shl
cdq
fbld
xor
ss
and
mov
out
inc
in
cs
jno
not
hlt
rcr
leave
mov
xor
xor
cmp
call
mov
(bad)
jo
test
(bad)
cli
and
jle
xchg
mov
jle
inc
dec
rcl
mov
mov
sub
ret
stc
les
shl
jmp
jae
mov
sub
sub
mov
shl
mov
jno
mov
stc
int3
cmps
loope
out
shl
ret
mov
xchg
sar
jb
cmp
arpl
pusha
leave
mov
mov
std
bound
shl
ret
mov
dec
mov
or
ins
jg
repnz
and
xchg
ss
dec
mov
pop
mov
sub
outs
stc
rcr
addr16
cmps
sar
lock
mov
in
leave
cmps
ror
outs
cmps
cmp
cmps
cmp
inc
mov
les
fstp
jo
mov
cmp
mov
leave
cmps
dec
popa
cmp
mov
lock
cmp
daa
xchg
inc
mov
(bad)
mov
aam
leave
daa
pop
jne
sbb
xor
cmp
lds
(bad)
mov
pop
push
mov
push
sbb
addr16
xchg
sub
cmps
mov
sahf
jns
(bad)
mov
out
jg
xor
lahf
leave
pop
push
mov
call
fnstenvw
xor
inc
and
mov
sub
cmps
mov
xchg
jns
(bad)
mov
out
lock
aam
leave
cmps
xor
mov
aam
leave
int3
sti
outs
mov
ds
(bad)
in
jo
and
leave
pop
std
cmc
lds
(bad)
ss
in
dec
les
or
cmp
cmp
(bad)
in
dec
les
and
mov
loop
les
je
mov
(bad)
ss
out
cmps
cmp
mov
pop
les
adc
mov
pop
mov
test
xor
mov
inc
leave
dec
sbb
ss
jo
dec
xchg
sub
cmps
mov
mov
cmp
mov
(bad)
mov
mov
jo
cmp
lahf
leave
pop
dec
cmps
mov
pop
imul
mov
mov
(bad)
ss
mov
cmps
push
(bad)
pop
pop
mov
cmp
(bad)
mov
aaa
stc
jae
xor
mov
les
call
xchg
(bad)
stc
in
shl
inc
cmp
pop
mov
mov
mov
pop
les
mov
mov
jo
test
test
cmps
sub
cs
fwait
js
clc
jo
cmps
cmp
int
retf
jo
ror
jnp
pop
les
mov
xlat
lahf
leave
pop
cmp
cmps
mov
mov
pop
les
sahf
mov
jg
cli
les
and
pop
dec
add
cmps
shl
xor
xor
lahf
leave
pop
cli
xchg
xor
das
gs
ss
mov
pop
mov
(bad)
ss
test
pop
les
test
cmp
mov
pop
(bad)
sti
mov
fnstenvw
jle
cdq
xor
fidiv
jmp
leave
and
lahf
leave
pop
mov
(bad)
mov
les
adc
mov
fsubr
ins
iret
gs
cmps
rcr
pusha
cmps
cmp
mov
in
leave
cs
jae
mov
mov
stos
jns
(bad)
mov
inc
jae
cs
sti
mov
in
leave
sub
call
hlt
mov
scas
scas
leave
pop
mov
xchg
jns
(bad)
mov
pop
cmp
and
cmc
call
scas
leave
pop
mov
jmp
cmc
mov
(bad)
pop
mov
lock
and
scas
leave
pop
add
mov
pop
mov
bnd
(bad)
mov
pop
cmp
jmp
scas
leave
pop
cmp
xor
(bad)
scas
leave
pop
cli
call
les
pop
stos
cmp
pop
scas
fsubr
pop
les
and
jg
xor
lahf
leave
pop
cli
xchg
xor
mov
jmp
jae
(bad)
gs
xor
cmp
scas
sbb
les
and
scas
test
pop
les
ss
jo
dec
push
es
mov
xchg
(bad)
aas
addr16
push
cmps
cmp
fidiv
jo
and
jno
cmps
mov
ret
(bad)
cmp
cmp
cmps
cmp
test
or
or
cmp
sub
test
pop
(bad)
sti
and
mov
jb
cs
mov
add
(bad)
fst
js
(bad)
xor
xchg
jmp
out
mov
stc
(bad)
and
jb
lahf
cmp
fisub
stc
(bad)
and
je
lahf
cmp
fisub
xor
(bad)
jne
adc
cmp
scas
shr
pop
les
and
loope
leave
daa
mov
jno
adc
jo
mov
je
cmps
cmp
and
(bad)
mov
and
scas
leave
pop
shl
mov
and
lahf
leave
pop
cmp
mov
inc
in
leave
aad
lock
add
(bad)
(bad)
mov
fnstenvw
sbb
aam
pop
les
or
dec
pop
mov
push
jb
cmps
cmp
mov
cmp
cmps
dec
fs
push
je
cmps
cmp
lods
mov
jo
cmps
dec
jae
dec
repz
and
mov
add
ins
cmp
mov
and
adc
scas
leave
pop
(bad)
(bad)
les
leave
and
jl
sbb
scas
leave
pop
cmp
and
test
pop
les
xor
lahf
leave
pop
cli
xchg
xor
loop
fbld
jbe
mov
pop
(bad)
stc
xor
les
leave
pop
cmp
dec
mov
je
rcr
pop
(bad)
lock
aam
leave
cmps
xor
mov
aam
leave
int3
sti
outs
mov
ds
(bad)
in
jo
and
leave
pop
fs
outs
clc
and
or
ins
daa
mov
pop
lds
xchg
jo
popa
jle
aaa
sub
mov
cmps
and
cmp
mov
outs
int3
adc
mov
jg
inc
mov
jns
(bad)
ss
lahf
std
dec
jbe
inc
mov
mov
lahf
icebp
pop
pop
es
cmps
mov
xor
loop
stc
hlt
cmps
stc
stc
arpl
xor
mov
pop
add
inc
dec
jbe
loop
je
lods
mov
or
lock
jo
pop
cmp
sub
(bad)
dec
jb
jecxz
mov
cmp
es
mov
cmp
loop
jno
adc
or
jo
ficomp
and
push
mul
jnp
xor
jle
aaa
test
xor
cs
repz
mov
repz
mov
jnp
xor
jle
aaa
test
xor
push
js
not
aaa
repz
mov
aas
lock
cmp
jae
mov
pop
gs
into
test
xor
cmp
cmps
push
lock
cmp
xor
cmp
shl
xchg
add
xor
jle
aaa
daa
inc
lea
test
es
pop
les
and
(bad)
dec
jb
jmp
dec
xor
jae
cmp
dec
pop
cmp
shl
push
mov
cmp
cmps
cmp
mov
xor
jae
fs
outs
clc
and
popa
sub
js
pop
sub
cmps
cmp
leave
cmps
cmp
int
cwde
xor
cmp
push
mov
dec
aaa
cmps
dec
mov
fwait
add
xor
cmps
cmp
aaa
fcom
stc
out
xchg
jecxz
cmc
clc
sub
outs
stc
rcr
aas
push
cmps
rcl
cmps
cmp
popa
sbb
mov
inc
mov
retf
(bad)
mov
pusha
mov
cmp
les
(bad)
pop
les
fidiv
mov
and
test
jo
and
pusha
mov
pusha
or
arpl
fisub
mov
and
sbb
aam
cmps
cmp
ss
pop
push
jo
cmp
ss
data16
cs
fisubr
xchg
sub
cmp
cmps
push
lock
cmp
xor
iret
cmp
daa
les
cmps
mov
mov
les
sar
push
ss
xchg
cs
mov
cmc
push
jo
dec
and
cmps
mov
mov
sub
pop
out
mov
cmps
cmp
jae
mov
jo
cmps
mov
js
loop
stc
jae
shl
loop
stc
jae
les
retf
mov
fimul
jo
sub
mov
mov
mov
imul
mov
addr16
ins
daa
mov
ret
jno
cs
sbb
iret
mov
je
cmps
push
jo
cmps
cmp
pop
dec
js
(bad)
ss
icebp
icebp
out
xor
pop
or
pop
cmps
push
jo
dec
mov
xor
(bad)
pop
jnp
or
clc
sbb
sub
fs
les
cmps
cmp
sub
data16
sbb
inc
jns
pusha
dec
and
cmps
mov
jo
dec
push
cmps
xor
cmp
push
cs
fisubr
ss
pop
sbb
cmps
int3
xchg
mov
int
sbb
mov
push
jo
cmps
sti
pop
rcl
lock
xchg
cs
mov
sar
inc
test
int
sbb
icebp
rcl
sub
pop
dec
pusha
leave
shl
ficomp
ret
pop
into
cs
fidiv
jo
xchg
sti
xor
repnz
fisub
gs
ins
sti
inc
scas
cld
xor
ja
push
mov
jl
scas
frstor
cmp
dec
push
push
xor
in
cwde
dec
hlt
cmp
rol
fnsave
cmp
or
int
jo
and
pusha
pop
jl
arpl
adc
outs
iretw
push
nop
je
shl
scas
js
imul
jnp
fwait
add
je
mov
stos
inc
and
nop
je
rcr
cmp
repnz
mov
retf
jno
outs
mov
pusha
mov
addr16
ins
daa
mov
stos
cld
xor
dec
es
repnz
pop
pushf
(bad)
ss
into
and
cmps
bound
dec
sub
mov
(bad)
ss
fisub
cmps
mov
xchg
push
(bad)
in
cwde
stc
cmc
cmp
sub
mov
repnz
das
push
cs
fimul
mov
test
jg
mov
pusha
jle
aaa
cmps
mov
adc
shl
push
jmp
in
leave
xor
add
xchg
cs
mov
cmps
dec
jbe
pusha
jle
cmps
mov
ds
xor
jle
fisttp
cmp
mov
pop
xor
jb
retf
mov
inc
(bad)
xor
aas
repz
dec
cmp
fld
pshufw
push
(bad)
aaa
daa
inc
(bad)
ss
sti
jae
xor
jbe
mov
enter
fld
jo
test
xor
xor
mov
cmps
jle
mov
lds
mov
mov
or
mov
loop
stc
cmc
sub
jl
adc
sti
arpl
jmp
test
jo
test
and
aaa
loop
stc
out
cmps
jecxz
cmc
sub
cwde
mov
test
cmp
jae
cmp
cmp
jnp
mov
cmc
cmp
and
aaa
loop
sti
jae
xor
jbe
mov
ds
and
mov
jno
inc
mov
ror
out
cmps
jecxz
cmc
clc
gs
fs
loopne
aaa
stos
loopne
cmps
sub
ss
xor
out
loopne
fbld
imul
mov
aaa
stos
loopne
mov
js
aaa
stos
loopne
aaa
stos
loopne
aaa
jnp
cmps
aaa
stos
loopne
aaa
stos
loopne
aaa
jnp
cmps
aaa
stos
loopne
jg
loopne
aaa
dec
stos
cmps
aaa
stos
loopne
cmps
mov
ss
and
loopne
mov
aaa
mov
loopne
mov
or
aaa
stos
loopne
addr16
loopne
aaa
add
inc
dec
stos
loopne
aaa
pop
loopne
aaa
stos
loopne
dec
mov
retf
pop
clc
adc
rcl
cmps
cmp
cmps
aaa
stos
loopne
mov
stos
pop
push
call
cmps
aaa
stos
sti
jle
stos
loopne
sub
js
aaa
stos
inc
and
and
je
aaa
stos
dec
std
aaa
stos
loopne
fcmovnbe
loopne
aaa
stos
repz
add
aaa
stos
add
cmps
(bad)
stos
loopne
aaa
stos
pop
fist
(bad)
leave
cmps
sub
and
imul
ja
xor
loopne
mov
fs
loopne
aaa
stos
loopne
cmps
sub
ss
push
je
aaa
stos
loopne
aaa
stos
loopne
aaa
mov
loopne
cmc
stos
loopne
aaa
xor
out
loopne
jle
loopne
aaa
adc
pop
jne
loopne
aaa
imul
aaa
stos
loopne
outs
stos
loopne
aaa
int3
xchg
aaa
stos
loopne
aaa
arpl
cmps
aaa
stos
loopne
fbld
imul
inc
cmps
aaa
stos
loopne
pop
stos
loopne
aaa
fld
mov
mov
loopne
cmc
stos
loopne
aaa
and
jle
loopne
aaa
adc
pop
jne
loopne
aaa
imul
aaa
stos
loopne
outs
stos
loopne
aaa
int3
xchg
aaa
stos
loopne
aaa
arpl
cmps
aaa
stos
loopne
loopne
mov
aaa
or
aaa
stos
loopne
pop
stos
loopne
aaa
fld
push
aaa
stos
loopne
aaa
pop
cdq
or
outs
stc
shl
push
imul
xor
fndisi(8087
add
stc
hlt
cmps
stc
stc
arpl
xchg
jle
cmps
shr
out
cmps
retf
and
cmp
(bad)
mov
repnz
pop
cmp
ss
adc
mov
fdivr
jo
mov
lea
out
int3
mov
ds
mov
pop
loop
cmps
int3
adc
mov
mov
pop
cmovno
jnp
xor
mov
xor
cmp
(bad)
out
(bad)
es
cmp
es
xchg
cmp
scas
push
loopne
cmps
cmp
jae
imul
adc
data16
(bad)
div
and
fisubr
cmp
stc
out
cmps
retf
and
fnsave
ss
push
mov
cmp
dec
cmps
pop
(bad)
jae
xor
jae
jae
lock
push
push
cs
fimul
cli
in
mov
jo
leave
jne
ss
push
not
jno
sar
and
cld
cs
mov
and
mov
in
jo
mov
cmp
sub
pop
dec
js
sbb
(bad)
js
popa
xor
cmps
xor
dec
dec
cli
xchg
xor
das
dec
call
fmul
call
xor
dec
dec
cli
xchg
xor
cmovge
push
cmp
sbb
popa
dec
cli
cmp
pop
cmps
mov
xor
cmps
cmp
jnp
cmp
repnz
cmp
jae
shl
fs
add
cmps
mov
xor
ja
xor
xchg
sub
jae
aas
sar
sbb
xor
cmps
add
loop
jns
mov
pop
les
cmps
int3
xchg
mov
cs
jae
pop
mov
jmp
xor
mov
cmp
jg
xor
sahf
jle
inc
je
sbb
cmps
cmp
jae
rcl
cmps
cmp
dec
jnp
(bad)
leave
cs
jg
jne
xchg
es
in
stc
or
xor
shr
cmps
cmp
mov
jmp
sbb
mov
mov
cmps
mov
cmps
push
xor
xchg
ss
jae
xchg
ss
nop
jp
cmp
repnz
call
push
shl
dec
fild
cmps
mov
xor
ja
xor
xchg
sub
jae
aas
sar
sbb
xor
cmps
add
loop
jns
mov
cs
jae
push
mov
jmp
xor
mov
cmp
jg
xor
sahf
jle
inc
js
xchg
cmps
xor
arpl
xchg
mov
in
sti
cmp
xor
cs
dec
mov
sbb
cmp
outs
lahf
out
mov
mov
sub
lods
mov
cmp
cmp
cmp
fcmovbe
jno
mov
xor
jae
imul
movs
ds
in
and
or
(bad)
js
cmps
push
jo
movs
push
jo
cmps
push
jo
cmps
jnp
inc
scas
sar
cmps
cmp
jae
mov
jo
cmps
mov
fdivp
les
ror
cmp
cmps
les
cmps
ins
cwde
icebp
out
cmp
addr16
cmp
cmp
cmps
int3
xchg
mov
clc
gs
outs
stc
shl
xlat
push
pusha
lock
mov
cmp
inc
mov
ficomp
(bad)
mov
adc
pushf
cmps
cmp
mov
mov
pop
push
mov
ficomp
jo
ss
push
not
mov
mov
icebp
stc
out
mov
mov
jp
int3
das
scas
(bad)
mov
pop
cmp
cmps
xor
dec
pop
and
neg
mov
mov
(bad)
stc
hlt
and
adc
pop
(bad)
lock
cmp
jae
pop
js
ins
std
cmc
xor
(bad)
ss
outs
cmp
cmps
mov
shl
cmp
jne
pop
les
and
icebp
sar
(bad)
and
call
cmps
mov
int
les
cmps
push
jo
cmps
push
jb
cmps
push
jo
cmps
cmp
sub
and
jne
jo
cs
pop
cmp
in
and
mov
cmp
mov
(bad)
(bad)
jno
cmps
cmp
into
sbb
leave
adc
(bad)
leave
pop
rol
cmps
cmp
(bad)
cmps
retf
stc
lock
mov
loope
jo
mov
push
jo
and
mov
pop
imul
and
(bad)
leave
pop
imul
js
jo
and
mov
pop
imul
cmps
cmp
fdivp
cmp
pop
mov
xchg
mov
pop
mov
leave
mov
push
mov
in
sbb
js
jo
and
mov
pop
imul
cmps
cmp
fiadd
sbb
in
sbb
jns
pop
movs
cmp
dec
xor
mov
es
dec
cmps
cmp
push
cs
fisubr
dec
mov
ret
pop
into
cs
(bad)
xor
(bad)
xor
cs
xchg
cs
mov
cmps
mov
into
div
jo
cwde
cmp
int
sbb
int
pop
les
cmps
mov
mov
les
mov
cmp
pop
mov
into
pop
dec
mov
cmp
ss
dec
pusha
leave
rol
cwde
sbb
cmp
dec
add
cmps
les
cmps
fs
outs
clc
and
test
dec
sub
cmps
les
cmps
push
jno
pop
dec
fs
shr
pop
les
cmps
mov
mov
fisub
popa
sbb
dec
add
inc
mov
retf
sbb
int
std
jae
imul
pop
dec
js
mov
jmp
outs
clc
and
popa
sbb
mov
pop
mov
mov
loop
and
jbe
movs
cmp
ss
sbb
pop
dec
jl
shl
cwde
ins
out
cmp
addr16
je
rol
shl
pop
les
inc
mov
add
cmps
xor
retf
cmp
cmps
or
pop
pop
mov
leave
rol
cwde
sbb
addr16
jmp
shl
pusha
pusha
lock
and
push
mov
mov
jo
cmp
pop
pop
mov
mov
mov
cmp
ds
into
aaa
cmps
xor
fstp
ins
sbb
int
pop
les
cmps
xor
retf
aaa
cmps
or
retf
aaa
cmps
xor
jae
sar
sub
ss
fdivr
jae
mov
imul
fisub
data16
ins
iret
nop
rcr
pusha
jge
cmps
mov
jo
rcr
cwde
xor
cmp
dec
call
cs
inc
into
cs
ror
jb
jo
loop
add
fucom
push
jo
pusha
cmp
int
sbb
int
sbb
jns
fdivrp
jge
ss
movs
je
mov
jo
addr16
je
shl
xchg
(bad)
movs
je
sar
jo
cmp
jae
shl
push
fsubr
cmps
fs
inc
ds
dec
jg
xor
cs
in
stc
scas
clc
and
pusha
lock
ds
jl
loop
sub
das
push
sti
jae
mov
pop
gs
retf
fwait
add
pop
dec
cmp
adc
and
pop
dec
pusha
fdivrp
jl
ss
jl
pop
adc
xor
sti
jb
into
mov
jo
loopne
dec
or
dec
push
mov
add
mov
pop
jbe
shr
sti
jae
std
jo
es
mov
cmp
jg
fwait
add
retf
jno
not
aam
cmps
cmp
icebp
es
mov
cmp
pop
dec
ins
mov
pop
dec
pusha
fcompp
jns
ss
mov
repnz
stc
out
cmps
ret
fwait
xor
sti
das
push
cs
fidiv
data16
loop
xchg
push
sub
icebp
inc
push
pop
inc
cmps
push
jo
loop
stc
icebp
jbe
repz
scas
ins
sbb
mov
xor
and
retf
add
addr16
jp
adc
inc
mov
dec
clc
xor
xchg
mov
retf
push
or
lds
dec
jae
sbb
add
into
push
and
cmps
mov
repz
ins
stc
into
push
and
cmps
cmp
aam
shl
repnz
stc
loope
cld
adc
inc
test
popa
scas
je
ins
cwde
dec
loope
jo
arpl
push
leave
loop
jg
loop
dec
jae
dec
fistp
cld
repnz
cs
jle
cmp
fnstcw
ss
ins
daa
mov
js
or
fnsave
iret
(bad)
repz
dec
les
into
pop
lds
fidivr
(bad)
js
fs
aaa
push
mov
aas
jl
ja
rcr
cmps
cmp
mov
mov
cmps
dec
jge
dec
xchg
xor
cmps
or
ss
dec
fs
js
ss
enter
jo
add
(bad)
cmc
loop
(bad)
(bad)
mov
pop
push
int
pop
(bad)
pop
scas
movs
leave
pop
(bad)
std
mov
ins
sbb
outs
xor
cmps
mov
retf
(bad)
mov
mov
cmps
les
cmps
ror
ja
cmp
(bad)
mov
stc
lock
js
and
(bad)
retf
pop
mov
mov
les
mov
cmp
pop
mov
pop
scas
mov
out
(bad)
(bad)
aaa
pop
imul
arpl
jo
shl
cwde
mov
arpl
sbb
jns
leave
adc
(bad)
sub
cmp
repnz
ror
cmps
cmp
cmp
cmp
push
ret
mov
(bad)
ss
mov
loop
jo
arpl
stc
(bad)
xchg
retf
stc
lock
ss
cmps
cmp
rcr
xor
sbb
pop
cmp
ds
mov
mov
pop
les
pop
cdq
in
lock
repnz
test
cmps
cmp
cmp
cmp
push
ret
mov
(bad)
ss
mov
jecxz
jo
arpl
sbb
js
jo
adc
(bad)
xchg
jb
cmp
repnz
rcl
jb
cmp
cmp
cmp
push
ret
mov
(bad)
ss
mov
jecxz
jo
arpl
cwde
dec
jecxz
jo
lods
cmp
ds
mov
dec
push
xor
cmps
adc
cmps
cmp
rcr
mov
mov
lock
dec
jmp
sar
and
pusha
leave
rcr
sbb
jns
mov
pop
imul
js
jo
dec
jb
cmps
mov
mov
cmps
cmp
(bad)
lods
cmp
ds
mov
iret
retf
nop
je
(bad)
vaddss
(bad)
fsubp
jg
ss
js
lods
in
ss
mov
jecxz
jo
arpl
cwde
fucom
cmp
lods
cmp
ds
mov
iret
retf
nop
je
(bad)
vaddss
(bad)
fisubr
(bad)
js
movs
in
ss
mov
in
jo
arpl
cwde
test
cmp
lods
cmp
ds
mov
dec
call
cmps
cmp
rcr
mov
mov
lock
dec
jmp
cmp
ss
pusha
mov
push
jo
push
(bad)
mov
les
pop
in
jo
dec
cmp
ds
mov
scas
je
mov
call
dec
push
xor
cmps
mov
call
pop
dec
pusha
mov
pop
imul
jns
jo
dec
push
cmps
mov
xor
cmps
cmp
cmp
rcr
xor
sbb
pop
cmp
ds
mov
mov
pop
les
pop
cdq
in
lock
cmp
repnz
add
mov
(bad)
pop
(bad)
(bad)
mov
cmps
cmp
cmp
cmp
push
ret
mov
(bad)
ss
mov
in
jo
arpl
cwde
std
in
jo
lods
cmp
ds
mov
iret
lock
je
(bad)
vaddss
(bad)
fimul
jo
and
js
add
ss
xor
cmps
mov
jne
mov
adc
cmp
leave
dec
(bad)
xor
cmps
mov
inc
(bad)
cs
sbb
shr
sti
mov
les
call
fnstcw
ss
fs
jns
ss
xor
cmps
mov
jne
mov
mov
sbb
leave
dec
inc
xor
cmps
mov
xor
cmps
cmp
cmp
rcr
xor
sub
mov
leave
adc
(bad)
sub
repz
shl
cmp
cmp
cmp
push
ret
mov
jns
ss
pop
jo
cmps
mov
int
pop
lds
je
ins
cwde
leave
out
jo
arpl
repz
xchg
jg
and
jo
and
mov
pop
les
call
mov
jo
dec
ins
add
cmps
mov
(bad)
ss
inc
sti
mov
les
leave
pop
les
pop
les
mov
(bad)
leave
movs
xchg
sbb
jo
cmps
mov
adc
leave
sub
cmp
call
fnstenv
mov
(bad)
mov
lock
cmps
les
je
mov
cmps
les
cmps
mov
and
mov
pop
mov
leave
and
(bad)
retf
pop
mov
(bad)
mov
cmp
and
(bad)
vaddss
(bad)
std
mov
cmp
retf
(bad)
iretw
pop
scas
je
imul
arpl
cwde
leave
out
jo
lods
cmp
ds
mov
iret
data16
je
(bad)
vaddss
(bad)
fidivr
(bad)
js
jge
jo
push
xor
cmps
mov
jne
mov
mov
sbb
leave
dec
ret
cmps
mov
inc
(bad)
cs
cwde
cdq
out
jo
lods
cmp
ds
mov
iret
retf
nop
je
(bad)
vaddss
(bad)
fisubr
jo
and
js
and
(bad)
retf
pop
mov
cmc
ret
(bad)
mov
pop
add
repnz
(bad)
(bad)
cmp
mov
ficomp
(bad)
mov
and
(bad)
retf
pop
mov
(bad)
cmp
sub
ins
mov
pop
sar
aaa
cmps
cmp
mov
xor
or
or
sub
add
into
pop
lds
cmps
mov
into
pop
lds
retf
pop
les
je
mov
ret
(bad)
dec
and
cmps
mov
test
pop
(bad)
repz
pop
jnp
or
cld
push
mov
pop
mov
pop
push
mov
mov
pop
imul
std
(bad)
retf
pop
mov
xor
(bad)
leave
not
push
or
push
les
into
pop
(bad)
repz
(bad)
(bad)
(bad)
add
leave
pop
(bad)
sti
mov
les
call
add
ss
push
ss
xor
cmps
mov
jne
mov
sub
sbb
leave
dec
sahf
dec
cmps
mov
jno
cs
cwde
ins
cwde
cmp
lods
cmp
ds
mov
iret
lock
je
(bad)
vaddss
(bad)
(bad)
add
ss
js
xchg
add
ss
xor
cmps
mov
jne
mov
adc
cmp
leave
dec
outs
dec
cmps
mov
or
les
mov
jp
cmps
(bad)
cmc
ret
(bad)
mov
pop
imul
hlt
rcr
pop
(bad)
rep
mov
into
pop
lds
movs
pop
les
ss
mov
cwde
cmp
arpl
cwde
cmc
cdq
cmp
lods
cmp
ds
mov
iret
data16
je
(bad)
vaddss
(bad)
fiadd
jo
and
js
cmp
jo
cmps
mov
jne
mov
mov
sbb
leave
dec
xchg
cmps
mov
xchg
cs
stc
lock
push
dec
cmps
cmp
cmp
rcr
xor
sub
mov
leave
adc
(bad)
cld
or
push
inc
call
pop
les
cmps
mov
dec
cmps
cmp
cmp
rcr
xor
sbb
pop
cmp
ds
mov
mov
pop
les
pop
cdq
in
lock
cmps
cmp
repnz
jo
cmps
cmp
cmp
cmp
push
ret
mov
in
ss
mov
cdq
cmp
arpl
icebp
sar
cmps
cmp
cmp
rcr
xor
sub
std
jns
jo
adc
(bad)
test
cmps
cmp
repnz
rol
or
cmp
push
ret
mov
(bad)
ss
mov
call
mov
lods
cmp
ds
mov
dec
inc
dec
cmps
adc
cmps
cmp
rcr
mov
mov
lock
dec
jmp
rol
jo
and
pusha
pop
mov
xor
pop
mov
call
(bad)
mov
stc
lock
push
dec
cmps
cmp
cmp
rcr
xor
sub
mov
leave
adc
(bad)
sub
cmps
cmp
repnz
push
ins
call
pop
les
cmps
mov
dec
cmps
cmp
cmp
rcr
xor
sub
mov
leave
adc
(bad)
push
or
push
push
in
pop
dec
sub
cmps
mov
jbe
cmps
cmp
(bad)
lods
cmp
ds
mov
iret
retf
nop
je
(bad)
vaddss
(bad)
fiadd
jo
and
js
and
(bad)
retf
pop
imul
pop
les
call
add
jo
and
pusha
fisub
pop
jo
push
xor
cmps
mov
jne
mov
adc
cmp
leave
dec
sahf
dec
cmps
mov
scas
je
(bad)
vaddss
(bad)
fidiv
(bad)
js
jmp
xor
cmps
mov
jne
mov
adc
cmp
leave
dec
push
dec
cmps
mov
or
cmps
int3
xchg
mov
pop
mov
fidivr
shl
cmps
mov
icebp
icebp
mov
jo
lock
retf
(bad)
popa
iret
shr
cmp
sub
(bad)
lods
cmp
ds
mov
iret
retf
nop
je
(bad)
vaddss
(bad)
fisubr
(bad)
js
jns
xor
pop
mov
pushf
cmp
arpl
cwde
sbb
mov
iret
retf
nop
je
(bad)
vaddss
(bad)
fidiv
jo
and
js
push
dec
xor
or
cmps
cmp
push
ret
mov
add
push
pop
jo
cmps
mov
int
pop
lds
je
ins
cwde
inc
pushf
cmp
arpl
sbb
jp
jo
adc
(bad)
clc
or
scas
push
jo
cmps
push
jb
cmps
push
jo
cmps
cmp
pop
dec
js
movs
add
cs
icebp
lock
jo
pop
mov
lahf
cmp
cmps
mov
ret
(bad)
popa
test
vphaddubq
push
cmps
cmp
leave
dec
ret
cmps
(bad)
vaddss
(bad)
fiadd
retf
jno
cs
and
xor
ss
pushf
leave
pop
les
push
cs
fisubr
test
xor
push
fdivr
mov
lds
jae
cmp
leave
not
jmp
cmp
mov
lds
or
cmp
into
xchg
ret
stc
icebp
int
sbb
and
mov
pop
imul
cmps
cmp
ficom
(bad)
ins
mov
les
loop
dec
xor
test
ss
add
jmp
cmp
aaa
cmps
cmp
fidiv
leave
iret
in
lods
je
push
stos
jmp
jo
movs
cmp
dec
mov
leave
pop
mov
sub
cmps
cmp
jmp
shl
xlat
in
cmps
cmp
pusha
lock
cmp
ret
stc
icebp
and
in
retf
pop
les
loop
lock
cmps
xor
mul
jno
and
xor
aaa
cmps
cmp
and
mov
pop
mov
pop
jl
xor
lock
cmp
repnz
bound
fwait
(bad)
leave
pop
ins
cwde
add
inc
(bad)
leave
pop
(bad)
lds
or
mov
pop
mov
cmp
mov
xor
jns
mov
cs
jno
cs
fisub
mov
pop
dec
retf
cmps
mov
inc
pop
les
leave
pop
rcl
arpl
les
mov
pop
mov
cmp
mov
xor
jns
mov
es
adc
ss
jo
sbb
jo
cs
icebp
ror
ss
sbb
sub
and
movs
add
dec
outs
inc
cmps
imul
mov
mov
and
out
ss
(bad)
lods
je
push
jb
cmps
mov
(bad)
mov
pop
jns
shl
fiadd
push
jo
xchg
sti
cdq
push
test
(bad)
jno
cmps
mov
retf
(bad)
data16
and
lds
jo
pop
mov
retf
pop
les
leave
pop
mov
retf
pop
les
leave
pop
mov
retf
pop
les
leave
icebp
mov
sbb
dec
jne
leave
pop
mov
in
retf
pop
les
shl
ficomp
sti
cdq
shl
xor
sub
and
or
ret
pop
into
cs
std
mov
(bad)
(bad)
cmc
retf
(bad)
dec
stos
dec
cmps
rol
mov
(bad)
(bad)
sbb
sub
and
mov
jo
and
ins
mov
pusha
cld
cmc
mov
(bad)
jb
cmp
and
mov
pop
cmp
cmps
pop
mov
dec
lds
mov
(bad)
(bad)
ins
push
pusha
mov
jno
es
outs
ja
cmp
mov
lds
(bad)
pop
les
mov
pop
imul
pop
lds
pop
cmps
push
push
pop
cmps
push
jo
cmps
mov
retf
(bad)
data16
cwde
rcl
hlt
out
cmps
cmp
adc
enter
stc
into
mov
stc
icebp
pop
mov
retf
pop
les
and
jns
pop
(bad)
xor
sub
and
or
jmp
and
leave
pop
cmp
imul
(bad)
add
adc
xor
xor
xchg
cmp
and
leave
pop
cmp
mov
(bad)
(bad)
add
scas
loopne
arpl
cmp
cmps
sar
cmps
cmp
mov
(bad)
(bad)
jp
cmps
retf
jo
dec
add
push
je
cmps
cmp
mov
lds
adc
cmp
mov
lds
mov
rep
push
(bad)
add
retf
pop
les
mov
les
push
cmps
cmp
retf
pop
les
pusha
mov
cmc
sbb
dec
inc
cmps
and
cmps
cmp
retf
pop
(bad)
stc
icebp
icebp
rol
add
pop
mov
retf
pop
les
leave
adc
aam
cmps
cmp
mov
(bad)
(bad)
enter
jo
inc
mov
pop
pop
les
ins
outs
stc
je
repnz
mov
sub
pusha
lock
and
mov
mov
pop
mov
leave
shl
cwde
stc
xchg
cmp
gs
stc
arpl
mov
pop
mov
leave
shl
cwde
lea
stc
arpl
add
cmps
mov
push
outs
xchg
call
outs
test
adc
cmp
outs
mov
ja
(bad)
arpl
mov
mov
int
cwde
lea
mov
jo
addr16
in
cs
mov
loop
and
sbb
(bad)
jl
shl
stc
(bad)
and
jne
dec
add
cmps
les
enter
xor
imul
pop
adc
es
xor
xor
jg
xor
sar
cmps
cmp
cmp
jle
mov
adc
aaa
ja
(bad)
arpl
xor
movs
imul
loop
and
sbb
hlt
jnp
pop
cmps
push
jo
pop
or
cs
icebp
fstp
jo
int
fiadd
jle
data16
rol
cmps
cmp
fdivrp
or
sub
mov
pusha
mov
mov
and
ss
mov
es
sub
js
inc
jl
push
cs
pop
into
cs
enter
jo
inc
mov
mov
(bad)
mov
inc
les
mov
pop
imul
fisttp
push
push
jmp
jo
popa
xor
cmps
mov
jo
pop
mov
xchg
cmp
arpl
jns
shl
sub
leave
pop
dec
jl
mov
jo
cs
xchg
cs
stc
icebp
xchg
sti
xor
(bad)
cld
cmc
mov
(bad)
jbe
cmp
and
std
mov
fisttp
pop
mov
jo
addr16
inc
mov
pusha
push
(bad)
inc
cmps
mov
add
(bad)
pop
les
sbb
sar
dec
add
cmps
rcr
pop
fs
outs
clc
and
push
cmps
cmp
gs
ins
sti
imul
icebp
lock
jno
cs
and
cmp
dec
bound
cmps
mov
mov
les
mov
cmp
pop
mov
pop
scas
mov
aaa
pop
imul
arpl
jo
dec
jle
cmps
mov
out
cmps
cmp
(bad)
mov
stc
lock
jne
je
mov
ss
les
cmps
mov
inc
cmps
cmp
cmp
rcr
xor
das
sbb
inc
jns
mov
pop
imul
arpl
cwde
lea
jo
ds
mov
dec
xchg
inc
cmps
adc
cmps
cmp
rcr
mov
push
sub
in
std
mov
rcl
add
mov
lock
cmps
cmp
push
ret
mov
(bad)
sub
and
cmp
jo
and
js
push
adc
jmp
cmps
fisttp
add
scas
shl
add
cmps
cmp
push
ret
mov
(bad)
sub
and
stc
or
and
js
mov
xor
cmps
mov
jne
mov
js
cmps
cmp
push
cmps
cmp
push
ret
sbb
nop
leave
pop
ins
sbb
jns
mov
pop
ins
cwde
leave
xchg
cmp
arpl
pop
push
(bad)
jmp
cmps
fisttp
jmp
cmps
fisttp
add
cmp
repnz
add
mov
ret
(bad)
mov
cmps
cmp
cmp
cmp
push
ret
mov
(bad)
sub
and
imul
js
lods
in
sub
and
sbb
(bad)
js
ror
jo
push
xor
cmps
mov
jne
mov
adc
cmp
mov
fisttp
add
cmp
repnz
push
jae
in
std
mov
fisttp
add
cmp
repnz
mov
rol
(bad)
js
(bad)
mov
cmps
cmp
cmp
cmp
push
ret
mov
or
push
pop
jo
cmps
mov
int
inc
les
je
mov
ss
les
cmps
mov
scas
je
mov
ss
les
cmps
mov
inc
cmps
cmp
cmp
rcr
xor
das
sbb
inc
jns
mov
pop
imul
arpl
sbb
jns
mov
pop
imul
arpl
stc
(bad)
xchg
retf
stc
lock
call
cmps
cmp
rcr
xor
das
sbb
inc
jns
mov
pop
imul
arpl
sbb
jns
mov
pop
imul
arpl
cwde
push
xchg
cmp
lods
cmp
ds
mov
iret
retf
nop
je
mov
ss
les
cmps
mov
jecxz
cmps
cmp
ss
les
je
mov
ss
les
cmps
mov
inc
cmps
cmp
cmp
rcr
xor
das
sbb
inc
jns
mov
pop
imul
arpl
sbb
jns
jo
and
nop
leave
pop
imul
arpl
cwde
aad
cmp
lods
cmp
ds
mov
iret
retf
nop
je
mov
ss
les
cmps
mov
pop
cmps
int3
xchg
mov
pop
mov
fimul
or
push
shl
cmps
mov
icebp
icebp
mov
jo
lock
ss
les
je
mov
ss
les
cmps
mov
inc
cmps
cmp
cmp
rcr
xor
das
sbb
inc
jns
mov
pop
imul
arpl
sbb
jp
jo
and
nop
leave
pop
imul
arpl
icebp
fcom
push
inc
cmps
cmp
cmp
rcr
xor
das
sbb
inc
jns
mov
pop
imul
arpl
cwde
and
cmp
ds
mov
dec
ds
cmps
adc
cmps
cmp
rcr
mov
push
sub
in
std
mov
ror
mov
mov
mov
fisttp
push
cmps
cmp
repnz
push
jo
cmps
push
jb
cmps
push
jo
cmps
cmp
hlt
sar
sbb
in
leave
es
mov
mov
fisttp
sbb
xchg
data16
daa
leave
adc
scas
leave
pop
rcl
pop
in
leave
dec
inc
pop
cmps
or
(bad)
mov
stc
lock
gs
outs
stc
shl
xlat
hlt
xor
test
into
push
fdivr
mov
ror
cmp
(bad)
xchg
cmps
mov
ds
rcl
sbb
mov
xor
mov
mov
pop
int3
xchg
mov
pop
mov
fsubrp
adc
not
inc
sbb
les
cmps
push
jo
in
cwde
inc
mov
jo
and
pusha
pop
cmps
mov
xchg
pop
les
cmps
push
je
cmps
cmp
mov
(bad)
(bad)
fucomip
in
sbb
movs
cmp
dec
fist
adc
cmp
iret
aas
jno
cmps
mov
retf
(bad)
data16
and
popf
adc
cs
jno
cs
pop
hlt
mov
sbb
dec
adc
cmp
cmp
iret
fwait
lods
je
mov
retf
(bad)
dec
xchg
pop
cmps
mov
sbb
data16
and
xor
xchg
leave
pop
mov
scas
pop
les
mov
cmps
mov
mov
(bad)
dec
cs
cmps
mov
addr16
cmps
cmp
leave
jecxz
jo
pusha
mov
jno
cmps
cmp
mov
(bad)
(bad)
ins
push
pusha
mov
jno
es
add
mov
lds
rcr
sub
pop
imul
pop
lds
pop
cmps
push
push
pop
cmps
push
jo
cmps
mov
retf
(bad)
data16
cwde
leave
lea
jo
addr16
mov
cmp
adc
mov
cmps
cmp
into
cmps
ret
stc
icebp
pop
mov
retf
pop
les
and
jns
pop
(bad)
xor
sub
and
adc
jmp
and
pop
cmp
push
cmps
cmp
mov
lds
jmp
jo
popa
xor
xor
lea
jo
and
pop
cmp
mov
ror
scas
int
mov
cmp
iret
cmp
sbb
cmp
into
mov
stc
icebp
iret
aas
jno
cmps
mov
cmps
pop
les
sbb
cmp
aaa
iret
push
lods
je
mov
cmps
pop
les
leave
pop
mov
(bad)
cmps
xor
lock
cmp
and
and
pop
int3
(bad)
js
addr16
cwde
cmps
cmp
cmps
(bad)
lds
and
cwde
jns
cmp
push
inc
sbb
cmps
mov
stos
pop
les
retf
pop
les
mov
pop
les
ss
xor
cmps
cmp
pop
lods
out
ss
ror
repnz
mov
mov
jmp
jo
cmp
fwait
or
mov
aaa
push
push
(bad)
test
pop
mov
sti
mov
(bad)
vphaddubq
icebp
(bad)
lds
mov
(bad)
jl
dec
ficomp
cmps
ins
cwde
xor
cmps
(bad)
leave
pop
cmp
cmps
mov
sbb
dec
repnz
cmps
mov
aaa
pop
mov
pop
cmps
(bad)
lds
cdq
adc
pop
mov
retf
pop
les
mov
pop
shl
push
xor
cs
outs
stc
je
repnz
mov
sub
pusha
lock
ds
adc
enter
gs
outs
pop
cmps
mov
into
pop
dec
jl
in
adc
sub
mov
int
cwde
dec
(bad)
cmp
popa
push
jo
pop
cld
ds
int3
xchg
mov
hlt
rcl
cmps
cmp
xor
cmp
dec
bound
cmps
mov
retf
jo
iret
xchg
cs
push
jo
cmps
shl
cmps
cmp
lock
ficomp
adc
cs
xchg
cs
mov
imul
jne
cmp
dec
push
push
cmps
mov
retf
sub
outs
stc
rcr
cmp
cmps
shl
adc
dec
xor
cmp
add
cmps
mov
mov
pusha
xor
fucom
push
(bad)
cmp
retf
(bad)
cwde
ror
les
(bad)
pop
les
fsubp
mov
or
jo
sar
stc
(bad)
dec
sub
sar
fimul
adc
cs
fwait
cdq
clc
gs
mov
aaa
daa
mov
jl
sub
int3
fisttp
cmp
icebp
loop
jno
dec
pop
jg
loop
and
out
sub
dec
jmp
(bad)
cmp
loop
and
xor
cmps
cmp
ss
adc
cmps
xor
jae
mov
(bad)
in
in
std
jae
imul
arpl
std
jae
imul
iret
js
cmps
les
cmp
ficomp
jo
rol
enter
enter
dec
xor
repnz
mov
aaa
es
sbb
cs
sbb
cs
mov
movs
push
jo
cmps
push
jne
cmps
push
jo
cmps
push
jo
aaa
cmp
int
sbb
int
sbb
dec
push
pop
cmps
mov
mov
xor
push
(bad)
jae
mov
pop
cmps
ins
sbb
pop
push
hlt
xchg
in
cwde
mov
cmps
ins
sbb
pop
push
cwde
stos
out
cwde
dec
(bad)
cmp
cmps
ins
sbb
pop
push
lock
in
cwde
pop
(bad)
cmp
cmps
ins
sbb
pop
push
pop
test
(bad)
cmp
cmps
ins
sbb
pop
push
ins
mov
(bad)
cmp
dec
movs
es
push
jno
int
pop
(bad)
movs
xor
dec
add
cmps
push
jno
int
pop
xchg
cmps
push
jno
int
pop
aaa
cwde
xor
dec
and
cmps
push
jno
int
pop
rcr
pop
cmps
mov
pop
push
mov
pop
cmps
ins
sbb
pop
push
inc
scas
out
cwde
lds
ins
sbb
pop
push
sub
cmp
cmps
ins
sbb
pop
push
in
in
cwde
in
cmp
cmps
ins
sbb
pop
push
call
cmc
cmp
mov
adc
push
(bad)
jae
mov
imul
clc
outs
stos
fnstcw
jo
pop
les
cmp
fsubp
sbb
ss
in
cmps
push
pusha
mov
cmp
retf
cwde
stos
out
cwde
or
pop
les
push
jns
fiadd
pop
out
ja
push
pusha
mov
cmp
retf
lock
in
cwde
and
jns
cmps
push
mov
xchg
pop
out
ja
ror
adc
jp
pop
mov
xor
int
pop
mov
cmps
push
mov
xchg
daa
in
cmps
shl
aaa
jnp
pop
mov
xor
int
pop
mov
repnz
cmps
push
mov
xchg
adc
ja
rol
adc
jns
pop
mov
xor
int
pop
(bad)
movs
xor
dec
sahf
push
cmps
push
mov
xchg
sbb
ja
sar
adc
jnp
pop
mov
xor
int
pop
xchg
cmps
mov
pop
pop
mov
pop
pop
les
push
jns
faddp
sbb
out
ja
push
pusha
mov
cmp
retf
hlt
xchg
in
cwde
popa
cmp
stc
shl
fs
lock
jp
jo
iret
into
stos
je
les
leave
pop
mov
pop
dec
loopne
ss
shl
retf
repz
js
out
sbb
not
or
cmps
cmp
shl
jo
sub
data16
rcr
cmps
cmp
ss
push
inc
test
icebp
mov
retf
test
jle
sbb
cmps
push
jo
cmps
cmp
iretw
out
je
push
xchg
in
in
sbb
movs
cmp
cdq
sbb
shl
push
jo
xchg
pxor
push
jo
int
sti
jae
adc
data16
sbb
iret
cmp
not
in
in
sbb
jl
jo
cmps
sar
cmps
cmp
xor
jp
mov
pusha
push
jo
xchg
pxor
push
jo
xchg
jg
ja
push
loopne
cmps
cmp
jae
adc
data16
sbb
iret
xor
not
jmp
jl
jo
cmps
shl
pop
jns
pop
cmps
push
jb
cmps
push
jo
mov
push
jo
cmps
push
int3
xor
cmp
ss
sbb
int
cwde
xor
push
jno
int
pop
mov
pop
push
cmps
push
jo
xchg
pxor
push
jo
xchg
jg
ja
push
pusha
pop
xchg
cmp
int
sbb
iret
cmp
not
in
in
sbb
jl
jo
cmps
shr
adc
jns
mov
or
leave
xchg
pxor
push
jo
xchg
jg
ja
push
pusha
pop
test
jo
int
sbb
iret
cmp
not
in
in
sbb
jl
jo
cmps
shr
cmp
xchg
add
jo
cmps
les
cmp
pop
cmps
les
pop
jp
pop
mov
mov
xchg
cmps
cmp
(bad)
push
jo
cmps
imul
jge
jo
jge
xor
int
cwde
aad
cmp
stos
movs
xor
int
pop
xchg
movs
xor
int
pop
jecxz
xor
int
sbb
cmp
sbb
jo
int
sbb
cmps
cmp
pop
sub
xor
iret
loope
je
push
jo
or
das
out
ja
push
jo
xchg
pxor
push
jo
xchg
pop
shl
adc
ret
push
fidiv
cmps
cmp
and
cmp
not
jmp
jge
jo
cmps
rol
cmps
cmp
fidivr
jp
mov
mov
cmps
push
or
in
sbb
iret
js
cmps
imul
shl
xor
int
sbb
cmp
xchg
shr
ja
shr
cmp
ss
push
inc
test
pop
push
adc
cmps
cmp
xchg
push
fidiv
cmps
cmp
dec
iret
cmp
not
jmp
jge
jo
cmps
sar
cmp
mov
jns
mov
addr16
cmps
push
jo
xchg
pxor
push
jo
xchg
pop
shl
pop
aaa
cmps
cmp
or
xchg
jo
cmps
push
fidiv
cmps
cmp
xor
jnp
xor
iret
mov
jo
ins
sbb
add
out
ja
rcr
pop
les
ss
push
inc
test
pop
push
xor
out
sbb
int
sbb
cmps
cmp
iret
cmp
iret
cmp
not
in
in
sbb
jl
jo
cmps
sar
adc
add
jo
pop
int3
xchg
mov
int
pop
xchg
movs
xor
int
pop
jecxz
xor
int
sbb
pop
cmp
iret
das
jno
cmps
push
jo
cmps
imul
jge
jo
jge
xor
int
cwde
jno
cmp
rcr
pop
xchg
movs
xor
int
pop
jecxz
xor
int
sbb
and
cmps
push
mov
cmps
cmp
cmps
cmp
pop
in
xor
iret
loope
je
push
jo
test
or
ja
push
jo
xchg
pxor
push
jo
xchg
jg
ja
push
pusha
pop
pop
cmp
iret
or
cmps
push
adc
cmps
cmp
iret
sub
in
in
sbb
dec
out
push
cmps
cwde
sub
push
inc
test
pop
push
xor
out
sbb
int
sbb
jo
pop
cmp
iret
cmp
not
in
in
sbb
jl
jo
cmps
shr
adc
cmp
mov
cmps
les
cmp
pop
cmps
les
pop
jns
pop
mov
cmp
cmps
cmps
cmp
mov
jo
daa
imul
js
jo
cmps
loope
ss
cmp
cmps
rcl
adc
cmp
mov
jns
pop
cmps
les
cmp
pop
cmps
les
pop
jns
pop
mov
cmp
cmc
cmps
cmp
mov
jo
daa
imul
add
loope
ss
cmp
cmps
rcl
cmp
sub
jnp
mov
pusha
push
jo
xchg
pxor
push
jo
xchg
pop
shl
push
cmps
cmp
and
cmp
not
jmp
jge
jo
cmps
cmp
dec
ficom
cmps
cwde
pop
test
pop
push
inc
test
pop
push
adc
int
sbb
cmps
cmp
mov
jo
daa
imul
js
jo
cmps
loope
ss
cmp
cmps
rcr
pop
cmps
cmp
push
cmp
pop
cmps
les
cmp
pop
cmps
les
pop
jp
pop
mov
jmp
cmps
cmp
lahf
cmps
cmp
mov
imul
jle
jo
pop
loop
ss
cwde
inc
xchg
jo
aas
cwde
xor
dec
pusha
mov
pop
mov
pop
pop
mov
fisub
ret
clc
gs
mov
and
popa
sbb
sar
mov
pop
push
loopne
ss
dec
js
mov
(bad)
sbb
jl
jo
dec
daa
xchg
pop
mov
out
ja
mov
pop
pop
mov
pop
cmps
les
cmp
fisub
jle
data16
shl
cmps
cmp
ss
push
inc
test
icebp
mov
retf
test
jle
sbb
cmps
push
jo
cmps
cmp
iretw
out
je
push
xchg
in
in
sbb
movs
cmp
jne
jo
add
shl
push
jo
xchg
pxor
push
jo
int
sti
jae
adc
data16
sbb
iret
cmp
not
out
in
sbb
jl
jo
cmps
shr
push
cmps
cmp
xor
jp
mov
push
xor
cmps
push
jo
xchg
pxor
push
jo
xchg
jg
ja
push
pop
aaa
cmps
cmp
jae
adc
data16
sbb
iret
xor
not
jmp
jl
jo
cmps
shr
push
cmps
cmp
push
pop
jns
pop
cmps
push
jb
cmps
push
jo
mov
push
jo
cmps
push
int3
xor
cmp
ss
sbb
int
cwde
lods
xchg
jo
popa
push
jno
int
pop
mov
ret
cmps
push
jo
xchg
pxor
push
jo
xchg
pop
shl
adc
ret
push
fs
mov
jae
daa
imul
js
jo
and
xor
int
cwde
fnstcw
cmps
xor
es
and
jns
pop
cmps
push
xor
cmps
cmp
fimul
and
ss
dec
stos
je
push
jo
in
jo
pop
push
cwde
stos
out
cwde
mov
call
and
cmp
aaa
iret
jne
cmps
les
cmp
(bad)
and
ss
das
sbb
int
sbb
cmp
xchg
shr
ja
rcl
cmps
cmp
ss
push
inc
test
pop
push
adc
cmps
cmp
xchg
push
fs
fst
ss
imul
js
jo
and
xor
int
cwde
popa
mov
call
cs
sbb
pop
push
inc
test
pop
push
adc
cmps
cmp
fwait
push
fs
or
jo
iret
cmp
not
jmp
jge
jo
cmps
shr
cmps
cmp
sbb
jp
(bad)
into
(bad)
pop
xchg
movs
xor
int
pop
jecxz
xor
int
sbb
leave
push
fs
cmps
cmp
cmps
cmp
pop
hlt
loope
ss
loope
je
push
jo
jge
jo
add
shl
jo
xchg
pxor
push
jo
xchg
jg
ja
push
pusha
pop
rcl
cmps
cmp
cmc
cmps
cmp
cmps
cmp
iret
jns
je
push
stos
in
in
sbb
dec
call
out
enter
jo
inc
mov
fisubr
cld
sbb
pop
push
inc
test
pop
push
xor
out
sbb
iret
(bad)
jo
cmps
push
shl
cmps
cmp
push
iret
cmp
not
in
in
sbb
jl
jo
cmps
shr
cmps
cmp
(bad)
cmp
pop
cmps
les
cmp
pop
cmps
les
pop
jp
pop
mov
es
push
cmp
iret
fwait
jo
cmps
push
jo
cmps
imul
jge
jo
jge
xor
int
cwde
adc
xor
pop
xchg
movs
xor
int
pop
jecxz
xor
int
sbb
cmps
cmp
inc
cmp
int
sbb
cmps
cmp
pop
(bad)
xor
iret
loope
je
push
jo
dec
es
add
shl
jo
xchg
pxor
push
jo
xchg
jg
ja
push
pusha
pop
pop
cmp
iret
les
cmps
push
outs
pop
cmps
cmp
iret
ins
test
in
in
sbb
dec
mov
cmps
cwde
rcl
pop
push
inc
test
pop
push
adc
iret
mov
pop
pop
mov
jo
daa
imul
add
loope
ss
cmp
cmps
ror
sub
jnp
mov
mov
jo
xchg
pxor
push
jo
xchg
pop
shl
push
pop
mov
jo
daa
imul
js
jo
cmps
loope
ss
cmp
cmps
ror
cmp
push
cmp
pop
cmps
les
cmp
pop
cmps
les
pop
jns
pop
mov
push
fs
cmps
cmp
iretw
out
je
push
jno
in
sbb
movs
cmp
mov
sbb
ja
push
jo
xchg
pxor
push
jo
xchg
jg
ja
push
addr16
cmp
jo
iret
jnp
cmps
push
outs
pop
cmps
cmp
iretw
fsubr
out
in
sbb
dec
imul
cwde
call
adc
jle
jo
push
fdivr
jae
mov
fidivr
leave
clc
gs
mov
and
pusha
lock
push
aaa
stc
into
push
fdivr
jae
mov
pop
cmps
push
lock
cmp
xor
iret
cmp
daa
les
cmps
mov
mov
les
cmp
int
fidivr
clc
ficom
and
and
mov
pusha
jle
xor
int3
xchg
mov
sub
data16
data16
pop
dec
pusha
pop
call
ss
sar
xchg
pop
(bad)
repz
jl
ss
dec
mov
loop
ss
outs
test
cmp
js
jnp
(bad)
push
not
sbb
xor
aas
std
jae
imul
in
sbb
cmps
cmp
(bad)
cdq
(bad)
push
mov
outs
clc
and
cmps
cmp
icebp
test
sbb
retf
stc
lock
jo
cmp
xchg
pop
jns
mov
pop
imul
pop
daa
jo
push
xor
cmps
mov
clc
imul
leave
cmps
dec
popa
pop
sbb
jo
pop
les
ficom
retf
pop
(bad)
cs
lock
pop
cmp
je
mov
ss
les
cmps
mov
popa
pop
push
mov
sub
and
movs
and
daa
inc
(bad)
xor
sub
and
jns
mov
pop
imul
push
cmp
leave
mov
mov
sub
and
imul
xor
sub
jge
jns
mov
pop
imul
fcmovb
ja
mov
adc
in
std
mov
les
and
xor
je
mov
ss
les
cmps
mov
pop
push
mov
mov
les
mov
rol
cmps
les
and
xor
je
mov
ss
les
cmps
mov
popa
pop
cmps
mov
sub
and
cdq
sub
ss
inc
(bad)
cmp
sub
pop
adc
cmp
adc
les
mov
dec
test
cmp
mov
les
and
(bad)
mov
lds
dec
pop
xor
ret
mov
ss
les
cmps
push
jo
cmps
push
xor
in
sbb
jns
mov
pop
imul
cmp
fimul
(bad)
test
xchg
cmp
jbe
jp
fdivrp
(bad)
(bad)
push
aas
cmps
rol
repnz
mov
rol
into
pop
les
enter
ins
outs
stc
je
repnz
gs
ins
sti
inc
scas
test
into
mov
stc
icebp
cs
fisub
and
sub
aaa
lock
(bad)
mov
xor
shl
sbb
lock
cmps
cmp
push
cmps
outs
stc
shl
xlat
dec
cmps
cmp
pusha
lock
out
icebp
rcl
jo
es
(bad)
cmp
inc
adc
(bad)
xchg
pop
imul
popa
and
push
xor
cmps
mov
or
(bad)
lock
leave
cmps
dec
popa
pop
or
popf
rcr
ficomp
jo
daa
xchg
inc
mov
mov
in
std
mov
int3
vphaddubq
push
ret
(bad)
popa
pop
inc
mov
sub
and
ins
cs
pop
lahf
popa
cmps
int3
xchg
mov
pop
mov
mov
enter
aas
add
je
mov
fist
(bad)
dec
call
pop
les
das
adc
jo
and
xchg
pop
imul
sbb
mov
pop
cmp
ret
je
mov
fist
(bad)
dec
push
gs
mov
(bad)
xor
sub
jns
jns
mov
pop
imul
push
cmp
lds
(bad)
shr
sbb
jns
mov
pop
imul
sbb
mov
pop
xor
je
mov
fist
(bad)
dec
and
cmps
mov
(bad)
cmp
sub
pushf
adc
jo
and
xchg
pop
imul
sbb
mov
pop
xor
je
mov
fist
(bad)
dec
fisub
mov
rol
(bad)
push
les
lds
(bad)
cmp
sub
ficom
jo
and
xchg
pop
imul
sbb
mov
pop
ss
je
mov
fist
(bad)
dec
sahf
fs
mov
(bad)
cmp
sub
push
adc
mov
pop
imul
xlat
fwait
xor
sub
and
mov
vphadddq
rcr
lock
dec
shl
inc
les
mov
int3
(bad)
or
les
stos
mov
(bad)
ss
dec
xor
daa
xor
cs
xchg
cs
stc
lock
stc
lock
loopne
ss
dec
shl
xor
pop
(bad)
repz
mov
ficomp
(bad)
aas
addr16
in
movs
cmp
cmps
cmp
daa
xchg
and
jb
cmps
mov
(bad)
or
mov
lock
(bad)
cmc
sbb
les
xchg
cmp
inc
mov
loop
les
into
pop
les
je
mov
retf
(bad)
dec
mov
mov
and
mov
pop
les
mov
xor
cmps
cmp
cmc
xor
adc
cli
xchg
shl
and
cld
cs
mov
pop
ret
(bad)
cmp
cmps
cmp
or
cmps
xor
movs
dec
inc
pop
aaa
call
cmps
mov
retf
(bad)
dec
cs
pop
push
mov
pop
aaa
call
cmps
mov
retf
(bad)
dec
ret
cmps
mov
sbb
mov
(bad)
mov
pop
imul
adc
jo
push
(bad)
mov
int3
(bad)
std
mov
ret
(bad)
pusha
out
in
std
mov
lds
and
jns
mov
pop
imul
arpl
std
mov
lds
and
(bad)
(bad)
je
sub
and
jecxz
sub
and
(bad)
ss
pusha
pop
cmps
mov
retf
(bad)
dec
sahf
fs
push
jno
push
jecxz
sub
and
frstor
jl
addr16
push
cmps
cmp
and
mov
pop
mov
lods
and
ret
mov
pop
mov
rol
out
les
into
pop
les
aaa
cmps
cmp
leave
iret
stos
shl
xchg
out
in
std
mov
ret
vphaddubq
cmps
cmp
repnz
inc
lds
and
cmp
mov
lds
and
int3
(bad)
sti
mov
int3
(bad)
jne
pop
les
mov
int3
(bad)
jne
pop
les
mov
and
movs
rcr
inc
jbe
add
mov
cli
push
les
into
pop
les
leave
pop
imul
jg
jo
and
mov
pop
imul
arpl
std
mov
ret
vphaddubq
outs
int3
(bad)
mov
pop
les
ficom
xchg
dec
mov
rcl
mov
ret
(bad)
(bad)
cmps
cmp
mov
ret
(bad)
vmaxss
(bad)
(bad)
sub
sub
and
shr
jo
sub
daa
mov
pop
mov
xor
cmp
and
mov
pop
imul
pop
mov
aad
jo
cmps
push
jo
std
sub
not
movs
daa
cmps
cmp
mov
(bad)
(bad)
pop
dec
ret
pop
mov
jns
test
jp
pop
les
leave
dec
bound
cmps
mov
jo
out
imul
push
gs
bound
imul
cmp
and
mov
jo
icebp
ins
retf
xchg
xchg
(bad)
push
mov
fs
in
in
sbb
iret
cmp
cmps
rcl
cmps
cmp
mov
aad
leave
scas
sti
add
not
and
cmps
cmp
aaa
dec
xor
cmps
(bad)
jo
sub
js
xchg
movs
xor
pusha
and
cmps
cmp
out
push
fdivr
mov
(bad)
(bad)
sbb
jp
faddp
sub
iret
les
cmps
push
loopne
in
cwde
adc
xchg
sub
not
push
and
sbb
ss
aas
jno
cmps
mov
xchg
(bad)
pop
dec
js
imul
sbb
and
cwde
cmp
arpl
dec
leave
pop
cmp
and
jne
adc
ds
add
in
(bad)
xor
(bad)
xor
es
adc
cmps
cmp
mov
div
mov
retw
ins
mov
outs
cs
repz
out
mov
pop
std
cmc
test
(bad)
aaa
dec
or
jo
adc
retf
pop
pusha
addr16
xchg
shl
and
cld
cs
mov
cs
clc
mov
pop
mov
(bad)
aaa
sub
les
sti
icebp
cmc
fimul
ss
mov
jo
sub
xchg
cmps
dec
jle
and
mov
or
mov
xchg
dec
les
je
push
mov
mov
xlat
vphaddubq
cmp
vmovapd
int
std
mov
xlat
(bad)
cmc
xchg
(bad)
dec
jb
cmps
mov
test
dec
jge
leave
pop
mov
xchg
dec
les
leave
pop
mov
std
mov
xlat
vphaddubq
cmp
aaa
dec
push
jg
cmps
mov
jo
sbb
xor
iret
stos
shl
mov
in
sbb
jp
fiadd
xchg
fcomp
std
add
sbb
cmps
enter
(bad)
push
loopne
in
sbb
jg
jo
xlat
fwait
xor
dec
dec
arpl
cmps
mov
pop
jg
mov
sbb
sahf
leave
pop
mov
jo
jns
(bad)
mov
pop
aad
or
xor
iret
stos
shl
mov
in
sbb
aaa
jnp
fsubp
sub
sub
std
add
in
xor
push
sbb
cmps
enter
cdq
test
cmps
push
loopne
in
sbb
jg
jo
cmps
movs
xor
dec
arpl
cmps
mov
into
fistp
std
add
xor
push
xor
cmps
enter
adc
pop
cmps
push
je
cmps
push
jo
cmps
cmp
iret
cmp
ja
shr
cmp
push
jb
cmps
push
jo
dec
xchg
jg
cmps
cld
xor
sub
data16
and
cmc
xor
vaddpd
repz
pop
jnp
or
cmp
inc
pop
ins
and
pop
ins
pop
shr
sub
data16
sbb
inc
jns
leave
ror
jo
dec
and
xor
sub
data16
and
aad
jo
sub
repz
pop
jnp
or
cmp
inc
pop
ins
and
pop
ins
pop
shl
cmp
jle
data16
sbb
inc
jns
leave
ror
jo
ror
jo
jae
jo
push
fdivr
mov
(bad)
(bad)
rcr
(bad)
stc
cmc
sub
xchg
in
in
stc
jae
call
imul
mov
fdivr
jo
cmps
ror
cmp
push
jae
cmps
cmp
ss
cmp
mov
out
shl
jnp
jo
cmps
push
jo
xor
jle
icebp
loop
jae
cmps
cmp
out
mov
stc
cmc
pusha
jle
cmps
cmp
loop
jo
cmps
cmp
jae
imul
cmps
les
cmp
pop
cmps
push
jo
cmps
push
jo
cmps
push
jo
cmps
cmp
je
push
xchg
in
in
sbb
dec
ds
cmps
cwde
jo
out
sbb
cmps
push
jo
in
jo
int
cwde
xchg
adc
(bad)
mov
aas
cwde
inc
stos
cmp
cmps
cmp
aad
sbb
mov
inc
test
cmps
imul
and
fwait
xchg
mov
jo
gs
jo
int
and
xor
cmc
call
jo
jg
test
fs
mov
(bad)
data16
and
(bad)
xor
iret
inc
test
cmps
push
and
cmps
cmp
fisubr
lods
(bad)
push
mov
push
les
mov
retf
(bad)
xor
cmps
cmp
dec
scas
fmul
pop
mov
pop
jg
mov
and
sbb
int
sbb
xlat
jnp
pop
cmps
push
jo
test
sar
cmp
aad
leave
not
pop
cmps
push
outs
inc
out
sbb
int
cwde
fldcw
push
jl
cmps
push
jo
push
cmp
int
pop
cmps
movs
xor
dec
bound
cmps
shr
loop
and
sbb
clc
dec
or
imul
cmps
push
jo
cmps
mov
shl
shl
cmps
cmp
shr
das
push
cmps
outs
stc
shl
xlat
dec
xor
cmp
pusha
lock
cmc
pop
icebp
icebp
ret
cmp
sub
jl
pop
sub
aaa
cmp
fdiv
hlt
push
cmps
cmp
ins
xor
call
inc
movs
cmp
mov
jo
shl
dec
daa
cmps
cmp
sub
dec
aaa
cmps
cmp
fnstcw
jo
dec
cmps
js
cmps
mov
jo
test
movs
cmps
cmp
ret
jl
jo
xchg
push
les
dec
rcr
stc
mov
(bad)
vphaddbq
cs
sbb
jl
jo
adc
(bad)
leave
pop
rcl
pop
(bad)
repz
cmc
ficomp
(bad)
mov
pop
imul
dec
sub
cmps
xor
cmps
mov
(bad)
pop
les
xchg
out
cwde
shr
pop
mov
pop
adc
out
pop
les
mov
mov
dec
out
and
mov
(bad)
(bad)
lods
retf
pop
(bad)
repz
les
leave
pop
add
mov
pop
adc
jmp
nop
retf
pop
les
jg
(bad)
jo
cmps
les
pop
jp
fimul
int3
pop
cmp
(bad)
xor
cmps
xor
mul
(bad)
xor
add
les
xchg
cmp
sbb
cmps
cmp
or
(bad)
xor
cmps
dec
ja
dec
les
or
(bad)
xor
cmps
xor
mov
xchg
push
les
(bad)
pop
les
(bad)
cmp
ss
jno
cs
shl
cmp
psrad
jg
sar
int
cwde
xor
cmp
ss
cmp
ja
add
inc
scas
shl
cmp
sub
cmp
inc
mov
ficomp
(bad)
mov
cmps
cmp
jae
mov
into
pop
les
cmps
add
add
jo
jecxz
jne
push
jns
inc
fwait
add
ds
inc
xchg
add
cmp
inc
mov
jne
add
jo
add
dec
push
jns
inc
mov
jns
inc
mov
jne
cmp
inc
stos
add
cmp
cmp
loope
cmps
push
jo
shr
cwde
aad
cmp
and
mov
pop
add
push
jns
inc
mov
jne
add
jo
scas
add
ds
inc
stos
push
shl
cmp
cmp
les
shr
cwde
test
mov
jo
push
fdivr
mov
(bad)
(bad)
repz
jnp
(bad)
aad
pop
les
retf
pop
les
fisubr
aaa
jo
cs
icebp
icebp
and
jo
dec
gs
cmps
mov
pop
pop
mov
pop
pop
cmp
sub
and
xchg
shr
ja
rcr
cmps
les
pop
cmps
push
jo
hlt
jecxz
ss
cwde
popa
lods
cmp
xchg
shr
ja
shl
cmp
mov
pusha
mov
aaa
pop
les
leave
pop
std
cmc
rcr
ss
push
add
and
(bad)
cmps
cmp
mov
les
mov
jns
fisub
xor
sub
repz
pop
jnp
or
ret
jne
mov
fidiv
sub
and
pop
test
jl
pop
les
rcr
sbb
int
sbb
cmps
sar
add
call
cmps
rcl
xor
cmp
inc
mov
ficomp
(bad)
mov
pop
les
retf
pop
les
pop
mov
xor
sub
and
and
jmp
pop
cmp
sub
and
xchg
daa
in
cmps
rcr
cmps
les
pop
cmps
push
jo
test
cmp
leave
xchg
daa
in
cmps
shl
cmp
mov
pop
mov
dec
aaa
cmps
dec
mov
int
sbb
iret
fsub
fiadd
push
ins
mov
scas
cmp
data16
jo
popa
mov
jo
call
leave
sub
les
or
push
jo
inc
in
xor
int
cwde
aad
cmp
xchg
daa
in
cmps
shl
aas
cmps
cmp
mov
cmp
mov
les
(bad)
cs
pop
into
cs
std
mov
les
ret
pop
les
je
mov
ret
pop
les
cmps
mov
jo
cmps
mov
aaa
pop
les
xchg
in
cwde
leave
scas
cmp
sbb
(bad)
add
ss
cld
cmps
je
push
jo
int
jo
pop
push
lock
in
cwde
and
aas
jo
es
pop
cmps
cmp
mov
les
ret
pop
les
je
mov
ret
pop
les
cmps
mov
jo
cmps
mov
aaa
pop
les
test
scas
cmp
sbb
(bad)
add
ss
xchg
cmps
je
push
jo
movs
xor
pop
push
pop
test
scas
cmp
push
cmp
cs
inc
into
cs
std
mov
les
ret
pop
les
je
mov
ret
pop
les
cmps
mov
jo
cmps
mov
aaa
pop
les
test
scas
cmp
sbb
(bad)
add
ss
push
cmps
je
push
jo
cmp
push
pop
test
scas
cmp
sahf
cmp
sub
repz
pop
jnp
or
ret
jae
xchg
pop
cmps
push
pop
loope
cmp
ss
pop
js
cmps
les
cmp
fidiv
aas
jae
cmps
std
cmc
leave
pop
les
and
mov
pop
mov
xor
or
fwait
add
push
int
sbb
iret
pop
cmps
je
push
jo
xor
pop
test
mov
cmp
daa
mov
jno
and
mov
pop
pop
jae
push
mov
pop
pop
mov
mov
pop
imul
push
(bad)
(bad)
pop
out
in
std
mov
(bad)
vphaddubq
repnz
(bad)
cmps
cmp
mov
les
push
cmp
fsubp
cmp
ss
xchg
pop
les
xchg
pop
cmps
push
popa
loope
cmp
ss
xchg
ja
cmps
les
cmp
fdivrp
cmp
ss
ja
cmps
std
cmc
enter
ss
push
jg
and
mov
pop
mov
xor
or
fwait
add
push
int
sbb
iret
aad
je
push
jo
leave
cmp
ss
push
push
test
mov
cmp
daa
mov
jno
sub
(bad)
mov
aaa
cmps
dec
mov
adc
dec
hlt
aad
stc
into
xchg
ret
stc
icebp
sub
and
pop
imul
jg
jo
and
(bad)
leave
pop
imul
arpl
enter
jo
inc
mov
ficomp
(bad)
mov
pop
mov
pop
cmps
push
jo
mov
push
jo
cmps
jnp
jbe
jp
fidiv
ds
cs
sbb
mov
mov
dec
les
add
scas
out
repz
pop
jnp
or
clc
sbb
sub
and
or
jbe
(bad)
vmulss
(bad)
fidivr
jo
int
std
mov
(bad)
(bad)
jb
push
(bad)
ss
mov
mov
into
(bad)
leave
pop
mov
dec
aaa
cmps
dec
mov
in
pop
les
ret
pop
les
enter
movs
mov
mov
(bad)
pop
les
mov
leave
adc
mov
pop
ror
xor
lds
cmps
les
pop
jp
ficomp
cmp
sbb
int
sbb
int
sbb
cmps
cmp
pop
xchg
je
cmps
mov
ret
(bad)
mov
and
(bad)
leave
pop
mov
rcr
(bad)
mov
cmps
push
jo
adc
mov
pop
rol
xor
cdq
xor
and
(bad)
jbe
pop
jno
rol
stc
cmc
int
std
mov
cmc
push
jo
adc
mov
pop
rol
sub
and
pushf
loopne
cmp
leave
dec
loop
cmps
(bad)
vmulss
(bad)
(bad)
cmp
pusha
ds
in
jno
cmps
cmp
into
mov
stc
icebp
int
sbb
iret
push
les
or
in
sbb
jns
pop
cmps
cmp
dec
mov
mov
int
pop
scas
movs
xor
dec
out
jne
cmps
sbb
cmps
cmp
retf
pop
(bad)
stc
icebp
dec
sub
es
dec
jl
shl
cwde
aad
cmp
stc
pusha
mov
mov
hlt
ins
daa
mov
lods
xchg
adc
pusha
mov
cmp
xor
out
cmp
fisubr
jns
and
jo
cmps
add
push
jns
inc
lods
les
cmp
fidivr
aas
jo
cs
xchg
cs
mov
cmp
inc
lods
les
push
jns
fisub
push
lock
in
add
test
mov
pop
out
ja
dec
jnp
xchg
daa
in
cmps
shr
cmps
cmp
into
push
fdivr
jae
mov
or
cmps
dec
jnp
xchg
adc
ja
shl
xor
movs
xor
shl
pop
xchg
cmps
add
cmp
inc
mov
dec
inc
adc
shl
pop
dec
cmps
xor
dec
sub
add
cmp
inc
mov
jns
aaa
shr
xor
dec
into
jae
cmps
sar
pop
int3
xchg
mov
xchg
loopne
add
xor
sar
xor
pushf
push
lock
in
add
test
mov
sub
aam
sub
scas
xor
sar
xor
pushf
push
pop
test
sub
or
xchg
sub
push
hlt
xchg
in
add
test
shr
pop
les
pusha
hlt
rol
cmps
cmp
sub
cmp
push
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ficomp
cmp
cs
lock
mov
jbe
shl
xor
mov
retf
add
cs
aaa
frstor
dec
mov
mov
xor
push
ror
fwait
aaa
loopne
into
xor
ret
push
inc
push
push
jo
popa
cmp
int
daa
pop
cmps
imul
outs
clc
sub
cmps
push
jo
cmps
cmp
xor
cmp
fisttp
les
bound
les
les
int3
test
jb
xor
mov
add
push
xor
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
cmp
ss
stos
jo
cmps
.byte
