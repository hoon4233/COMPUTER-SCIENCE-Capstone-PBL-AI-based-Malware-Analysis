add
or
add
add
dec
add
add
add
add
add
add
add
add
push
mov
add
adc
or
add
add
add
adc
add
push
sub
es
and
add
add
and
add
cmp
fwait
add
add
and
jbe
xor
and
enter
cmp
add
sub
add
and
add
add
jp
add
and
add
and
pusha
enter
or
pop
inc
add
add
loopne
(bad)
(bad)
mov
(bad)
(bad)
jmp
add
add
cmp
add
and
add
add
and
add
add
add
adc
add
push
add
add
sub
add
and
add
add
and
add
add
add
sub
add
add
pop
add
add
push
add
dec
add
add
add
(bad)
call
(bad)
inc
add
add
add
add
(bad)
(bad)
call
add
add
add
cmp
and
add
add
cmp
(bad)
(bad)
jmp
sub
add
push
sub
add
push
sub
add
cmp
(bad)
(bad)
jmp
and
add
add
cmps
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
jmp
and
add
and
xchg
(bad)
(bad)
jmp
add
adc
sldt
add
add
add
sub
es
pop
sub
add
cmp
add
and
add
cmp
add
add
fwait
nop
pop
hlt
cmp
add
or
or
add
and
add
add
and
add
cmp
add
add
mov
pop
add
cli
and
add
icebp
cld
jle
and
rol
cmp
sub
add
push
and
add
add
pop
add
or
sub
push
add
add
and
add
cmp
add
and
mov
sub
and
add
add
arpl
add
adc
and
out
sub
ficomp
add
add
and
sub
sub
lea
add
add
add
add
rol
push
add
push
mov
add
push
or
or
add
cmp
arpl
add
and
sub
retf
add
sub
adc
lea
add
add
add
and
add
add
sub
add
push
mov
add
push
sub
add
push
cmp
(bad)
(bad)
jmp
or
add
cmp
add
add
dec
sbb
add
and
adc
and
movs
ds
pop
popa
cmp
add
or
push
add
push
and
add
cmp
and
adc
mov
es
popa
cmp
add
add
push
add
add
jae
add
or
or
add
or
jmp
and
add
add
outs
add
add
inc
ror
and
cmp
mov
push
pop
inc
or
add
jmp
jmp
(bad)
jmp
(bad)
(bad)
call
(bad)
(bad)
call
add
xor
add
adc
and
and
cmp
or
add
sub
cmp
(bad)
jmp
add
add
dec
pop
add
or
add
add
add
(bad)
jmp
call
(bad)
jmp
(bad)
(bad)
dec
(bad)
jmp
std
(bad)
dec
(bad)
(bad)
cmp
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
dec
add
add
add
add
cmp
add
add
xor
add
add
add
add
sub
es
and
add
add
cmp
or
dec
and
add
xchg
aam
aas
and
add
adc
sbb
add
and
add
add
cmps
xlat
loopne
cmp
add
add
adc
add
sldt
add
inc
add
add
mov
sbb
fs
fs
and
inc
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
sti
add
add
and
cmp
mov
cmp
pop
sub
add
push
and
add
cmp
add
add
pushf
add
add
push
add
add
jae
add
or
sldt
push
or
push
add
add
mov
add
push
sub
add
push
sub
add
push
push
sub
add
push
cmp
add
add
and
add
cmp
push
(bad)
push
xor
add
and
sti
or
cmp
(bad)
(bad)
jmp
call
sbb
add
and
imul
add
cmp
add
add
pop
add
add
cmp
add
and
mov
cmp
(bad)
(bad)
call
push
add
push
and
add
add
aas
add
add
jne
add
add
and
add
add
add
add
and
and
stos
add
(bad)
(bad)
jmp
hlt
add
add
adc
add
cmp
(bad)
(bad)
jmp
or
add
dec
add
dec
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
dec
add
(bad)
(bad)
(bad)
(bad)
cmp
add
jne
(bad)
(bad)
jl
(bad)
dec
add
sub
add
sar
inc
(bad)
dec
(bad)
(bad)
jmp
add
and
add
add
cmp
pop
and
pop
cmps
sub
xor
retf
popa
cmp
jmp
adc
add
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
jmp
and
add
add
cmp
inc
and
push
stos
pop
and
gs
cmp
(bad)
(bad)
inc
sub
add
push
cmp
std
(bad)
jmp
add
add
sub
add
cmp
(bad)
jmp
and
cmp
add
add
imul
and
dec
mov
pop
popa
cmp
std
(bad)
(bad)
cmp
add
adc
or
or
add
add
add
sub
es
add
sub
adc
or
or
add
add
add
sub
es
add
add
push
sub
adc
or
or
add
add
add
sub
es
add
add
push
sub
adc
or
or
add
adc
add
push
add
add
add
add
sub
add
adc
or
or
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
adc
add
push
add
add
sub
add
sub
add
adc
or
or
add
add
add
sub
es
add
outs
add
add
sub
xor
add
add
add
add
sub
es
add
sub
add
sub
adc
or
or
add
add
add
sub
es
add
add
or
add
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
sub
es
add
add
or
add
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
sub
es
sub
add
sub
add
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
sub
es
add
sub
add
xor
add
add
add
add
sub
es
sub
add
push
sub
add
xor
add
add
add
add
sub
es
sub
add
push
sub
add
xor
add
add
add
add
sub
es
add
sub
add
sub
adc
or
or
add
add
add
sub
es
add
xor
add
sub
adc
or
or
add
add
add
sub
es
add
sub
add
sub
adc
or
or
add
add
add
sub
es
add
sub
add
xor
add
add
push
and
add
add
test
add
and
cmp
add
add
int
ins
dec
and
add
or
add
add
pop
aas
pop
bound
and
add
add
push
add
add
or
xor
add
and
add
cmp
add
adc
and
and
stos
push
popa
cmp
add
add
add
push
or
or
add
pop
cmp
add
add
adc
and
fwait
repz
and
cmp
push
adc
adc
or
xor
add
cmc
add
add
or
jmp
and
ror
cmp
imul
(bad)
(bad)
jmp
and
add
add
leave
add
add
retf
add
add
push
pop
jae
add
or
pop
and
add
add
mov
add
add
add
or
and
add
add
lahf
add
add
adc
add
add
cmp
or
rcr
xor
popa
cmp
add
push
sub
add
push
adc
add
cmp
add
and
xchg
inc
dec
cmp
add
add
or
sbb
xor
add
es
sub
add
cmp
(bad)
jmp
and
cmp
add
adc
and
in
mov
std
test
and
add
sbb
or
add
add
sub
add
push
cmp
add
add
push
push
cmp
(bad)
jmp
add
add
dec
or
dec
add
add
add
add
sbb
(bad)
(bad)
jmp
call
add
add
(bad)
(bad)
call
(bad)
(bad)
mov
add
add
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
jmp
(bad)
(bad)
(bad)
aas
add
add
(bad)
(bad)
inc
jmp
push
add
add
movs
(bad)
(bad)
call
or
test
lods
pop
pop
and
dec
cmp
cmp
add
add
add
aas
adc
(bad)
jmp
push
add
add
cmp
call
add
pop
adc
adc
add
cmp
(bad)
inc
sub
add
push
pop
or
and
add
add
cmp
(bad)
jmp
and
arpl
push
push
popa
and
pop
inc
or
add
test
std
(bad)
dec
(bad)
(bad)
push
(bad)
push
(bad)
(bad)
call
(bad)
inc
(bad)
(bad)
jmp
add
adc
add
cmp
(bad)
call
or
cmp
and
pop
pusha
out
popa
cmp
push
sub
xor
add
add
adc
add
push
and
add
add
jo
add
adc
xchg
mov
cli
ret
popa
cmp
add
add
adc
add
add
dec
add
pop
movups
pop
setne
pop
setne
and
add
add
and
add
cmp
add
add
and
sbb
pop
and
shl
cmp
pop
pop
push
adc
pop
push
xchg
or
push
xchg
popa
sahf
and
add
add
inc
add
or
mov
add
cmp
add
adc
pop
or
pop
pop
or
popa
sahf
and
rol
add
or
pushf
repnz
es
and
cmps
imul
cmp
add
adc
adc
and
adc
push
rcr
cmp
pop
sbb
or
and
add
sub
add
cmp
xchg
add
adc
add
adc
pusha
mov
or
fnsave
dec
das
popa
cmp
add
add
sbb
lea
add
add
or
pop
add
add
cmp
add
adc
retf
fcomp
push
push
xor
aam
add
adc
sbb
pop
sbb
or
add
add
cs
add
or
mov
and
or
stos
add
add
or
or
popa
or
add
or
add
or
pop
push
adc
and
mov
les
xchg
add
adc
adc
xchg
adc
and
add
add
and
add
cmp
add
add
and
add
add
or
pop
adc
and
add
add
mov
add
pop
pop
or
pop
pop
or
popa
sahf
and
add
add
lods
add
add
pop
pop
adc
pop
xchg
or
xchg
popa
sahf
and
add
add
xchg
add
add
or
push
and
adc
pop
sbb
and
jge
add
push
adc
and
add
add
jo
add
adc
pop
or
pop
pop
or
or
or
popa
sahf
and
add
add
push
add
add
fcom
aas
repnz
add
aad
dec
xchg
and
add
push
adc
and
add
add
xor
add
and
data16
add
pop
sbb
pop
sbb
sahf
and
add
add
adc
add
adc
add
and
retf
popa
cmp
pop
adc
pop
adc
sahf
and
add
add
jmp
je
inc
jmp
popa
cmp
add
adc
pop
pop
adc
and
mov
add
sahf
and
add
cmp
or
cmp
(bad)
data16
popa
cmp
and
and
add
and
and
add
add
mov
add
pop
adc
adc
and
add
add
jne
add
and
in
(bad)
fbld
inc
iret
repz
adc
and
inc
and
add
mov
std
(bad)
jmp
(bad)
(bad)
(bad)
mov
add
add
add
add
add
add
std
(bad)
inc
(bad)
(bad)
inc
add
add
add
sub
add
clc
(bad)
(bad)
dec
add
iret
(bad)
(bad)
jmp
cld
(bad)
jmp
add
in
(bad)
call
add
add
add
add
std
(bad)
call
std
(bad)
(bad)
stc
std
(bad)
(bad)
fdivr
(bad)
push
add
lea
add
in
add
add
add
add
(bad)
jmp
sbb
add
cmp
add
add
and
and
add
add
mov
or
adc
add
pop
je
popa
cmp
pop
pop
or
pop
pop
or
popa
sahf
and
add
add
mov
add
and
adc
(bad)
call
pop
sbb
pop
sbb
sahf
and
add
cmp
add
or
and
xchg
sbb
imul
popf
popa
cmp
(bad)
(bad)
call
add
pop
adc
and
add
cmp
add
and
loopne
and
add
and
cmp
(bad)
(bad)
call
or
adc
lods
add
add
xor
add
cmp
add
add
movs
cmp
push
add
add
and
add
(bad)
(bad)
call
pop
sbb
pop
sbb
sahf
and
add
cmp
add
add
adc
or
or
add
cmp
add
add
or
fcomp
push
sub
and
lods
push
ss
cmp
(bad)
call
or
push
and
dec
(bad)
(bad)
call
add
add
add
cmp
adc
adc
and
adc
rcr
sub
add
push
cmp
add
add
and
add
add
add
add
or
icebp
xor
inc
adc
popa
cmp
std
(bad)
call
or
add
push
add
add
add
add
cmp
add
adc
xchg
jbe
arpl
jle
mov
popa
cmp
std
(bad)
call
or
push
and
adc
pop
adc
and
add
add
sub
add
or
or
and
add
or
push
add
add
lods
add
add
adc
add
dec
or
add
add
add
cli
(bad)
dec
(bad)
call
(bad)
(bad)
mov
sti
(bad)
jmp
std
(bad)
dec
(bad)
inc
add
or
add
mov
(bad)
inc
(bad)
(bad)
jmp
std
(bad)
inc
(bad)
dec
(bad)
inc
(bad)
jmp
add
add
cli
(bad)
call
(bad)
(bad)
mov
add
add
(bad)
(bad)
jmp
add
add
(bad)
call
add
add
cld
(bad)
call
std
(bad)
(bad)
cld
sti
(bad)
inc
sti
(bad)
(bad)
mov
(bad)
(bad)
dec
stc
(bad)
(bad)
cmp
(bad)
(bad)
(bad)
fdivr
(bad)
call
add
cmp
call
add
add
add
cmps
add
add
sbb
and
or
xchg
pop
and
call
(bad)
call
add
adc
mov
sub
cmp
(bad)
(bad)
jmp
adc
call
mov
and
cld
(bad)
call
adc
add
(bad)
(bad)
call
or
mov
push
dec
pop
and
mov
pop
cld
(bad)
call
or
adc
cmp
jmp
sldt
add
mov
(bad)
call
or
lods
sti
ror
and
xor
popa
cmp
(bad)
call
add
xchg
(bad)
jmp
sub
add
cmp
or
sbb
and
add
add
jg
(bad)
call
pop
pop
or
xchg
or
or
push
(bad)
(bad)
jmp
and
add
add
pusha
(bad)
(bad)
call
or
jnp
int
pop
and
fnstsw
cmp
cmp
sti
(bad)
call
or
sbb
popf
adc
dec
test
popa
cmp
sti
(bad)
call
or
scas
loopne
leave
pop
and
sbb
and
mov
(bad)
call
pop
sbb
pop
sbb
sahf
and
add
add
adc
(bad)
call
or
imul
pop
and
pop
fs
cmp
adc
and
add
add
cmp
std
(bad)
jmp
and
setbe
jne
(bad)
dec
or
sbb
or
add
aam
(bad)
call
or
(bad)
lahf
(bad)
pop
and
add
cmp
(bad)
call
pop
push
adc
push
xchg
or
xchg
popa
sahf
and
add
add
stos
std
(bad)
call
adc
add
add
sahf
std
(bad)
call
pop
push
adc
push
xchg
or
xchg
popa
sahf
and
add
cmp
scas
in
mov
add
add
or
cmp
sti
(bad)
jmp
add
adc
push
add
add
sub
es
add
std
scas
sahf
add
loop
popa
adc
add
push
or
add
adc
add
(bad)
(bad)
(bad)
aas
pop
adc
add
bound
add
add
add
ja
popa
and
pop
inc
or
add
adc
add
hlt
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
or
push
movs
add
add
or
pop
and
cmp
and
cmp
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
or
pop
add
or
add
add
or
add
or
or
add
movs
add
add
or
pop
and
and
cmp
(bad)
inc
outs
sbb
or
add
and
cmp
add
add
push
daa
je
and
(bad)
(bad)
jle
add
add
adc
push
adc
pop
sub
add
or
pop
and
add
dec
pop
and
pop
sub
popa
cmp
(bad)
(bad)
inc
outs
push
push
or
add
and
cmp
add
add
popaw
jno
and
(bad)
inc
outs
pop
push
or
add
and
pop
cmps
(bad)
and
add
cmps
retf
arpl
adc
mov
popa
cmp
pop
and
cmps
dec
pop
and
pop
adc
cmp
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
sbb
or
add
outs
or
add
adc
or
push
adc
and
ret
inc
pop
and
add
popa
cmp
std
(bad)
call
lea
add
sbb
add
or
(bad)
sbb
add
sbb
or
add
or
mov
or
pop
and
pushf
xchg
mov
sbb
inc
sub
xor
add
add
add
add
adc
add
push
add
pop
loop
ins
pop
and
add
cmp
and
and
and
pop
inc
adc
add
cmp
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
xchg
add
pop
lea
add
sbb
jmp
or
add
(bad)
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
or
pop
add
or
add
add
or
add
or
or
add
movs
add
add
or
pop
and
test
repnz
popa
cmp
(bad)
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
sbb
and
pop
iret
sub
int
(bad)
inc
outs
push
push
or
add
and
cmp
add
add
mov
sub
cmp
outs
sbb
or
add
and
cld
mov
and
add
hlt
cmp
sti
and
hlt
sbb
cmp
add
add
adc
push
adc
pop
sub
add
or
push
movs
add
add
or
pop
and
xchg
into
inc
pop
and
xchg
(bad)
call
add
adc
add
(bad)
(bad)
(bad)
aas
pop
adc
add
bound
add
pop
and
push
aaa
pop
and
push
cs
(bad)
call
add
add
sub
add
or
add
or
add
or
push
adc
and
and
push
and
(bad)
(bad)
(bad)
jle
add
add
or
(bad)
sbb
add
sbb
or
add
adc
and
inc
xor
and
cmp
std
(bad)
call
pop
and
and
dec
mov
(bad)
dec
push
mov
or
pop
and
pop
lea
xchg
jb
and
cmp
pop
push
or
pop
and
adc
pop
and
xchg
std
(bad)
inc
outs
pop
push
or
add
and
aas
sti
push
and
add
out
xor
ja
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
pop
and
shr
or
std
(bad)
inc
sub
adc
push
add
add
add
add
adc
add
push
add
gs
(bad)
pop
and
push
arpl
popa
adc
and
fidiv
and
and
pop
inc
push
add
add
add
add
add
add
(bad)
(bad)
inc
add
sbb
add
cmp
add
xchg
add
add
add
add
add
add
add
add
cmp
add
add
bound
add
pop
and
and
mov
popa
cmp
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
pop
and
je
pop
and
dec
popaw
cmp
(bad)
inc
pop
push
or
add
adc
adc
and
and
stc
pop
popa
cmp
(bad)
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
or
pop
add
or
add
add
or
add
or
or
add
movs
add
add
or
pop
and
mov
mov
cmp
and
(bad)
(bad)
aas
pop
adc
adc
and
and
cmp
outs
sbb
or
add
and
mov
add
add
jnp
int3
(bad)
and
xor
adc
(bad)
(bad)
inc
outs
sbb
or
add
and
cmp
outs
and
add
cmps
xchg
cmp
(bad)
dec
push
mov
or
pop
and
cs
or
popa
cmp
(bad)
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
jp
(bad)
pop
and
cmp
std
(bad)
call
add
add
sub
add
or
add
or
add
or
push
jle
add
add
adc
push
adc
pop
sub
add
or
push
movs
add
add
or
pop
and
push
dec
or
jge
std
adc
sahf
std
(bad)
inc
outs
push
push
or
add
and
gs
add
and
push
jnp
cmp
(bad)
call
lea
add
sbb
add
or
(bad)
sbb
add
sbb
or
add
adc
and
and
push
std
(bad)
inc
sub
add
adc
push
add
add
add
add
adc
add
push
add
dec
or
pop
and
adc
add
push
or
jb
mov
jle
loopne
popa
and
pop
inc
adc
add
and
add
pop
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
and
and
add
in
popa
cmp
pop
and
imul
add
loop
popa
cmp
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
mov
(bad)
jo
cmp
out
(bad)
dec
push
mov
or
pop
and
and
int3
pop
popa
cmp
(bad)
(bad)
inc
outs
sbb
or
add
and
cmp
add
add
aad
adc
and
sub
sub
cmp
add
add
adc
push
adc
pop
sub
add
or
pop
and
fidivr
pop
and
fldz
mov
(bad)
call
lea
add
sbb
add
or
(bad)
sbb
add
sbb
or
add
adc
and
push
neg
mov
lock
push
(bad)
(bad)
inc
outs
sbb
or
add
and
int
adc
add
sub
inc
inc
and
(bad)
inc
outs
pop
push
or
add
and
inc
jns
cmp
add
add
push
mov
and
(bad)
call
push
movs
add
add
or
pop
and
fld
and
lods
aad
popa
cmp
std
(bad)
inc
sbb
add
pop
and
or
pop
and
scas
sti
sbb
fdivrp
(bad)
call
add
add
sub
add
or
add
or
add
or
push
adc
and
add
jo
popa
cmp
and
(bad)
(bad)
aas
pop
adc
adc
and
data16
pop
and
pop
push
aas
popa
cmp
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
or
pop
add
or
add
add
or
add
or
or
add
movs
add
add
or
pop
and
repnz
into
ret
or
popa
cmp
std
(bad)
inc
sub
adc
push
add
add
adc
add
push
add
in
mov
and
adc
and
lahf
stc
and
mov
adc
pop
adc
adc
add
repz
add
add
add
add
and
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
cmp
pop
push
or
add
adc
adc
and
xchg
fbstp
pop
and
cmp
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
or
pop
and
and
jle
and
sub
(bad)
(bad)
inc
outs
push
push
or
add
and
jp
xlat
and
add
jb
data16
retf
cli
mov
(bad)
(bad)
call
pop
and
into
inc
pop
and
pusha
lock
popa
cmp
(bad)
(bad)
(bad)
jle
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
add
add
and
loopne
jle
add
add
and
loopne
push
bound
add
add
and
loopne
pop
adc
jle
add
add
and
loopne
pop
sbb
adc
movs
dec
push
pop
and
sub
(bad)
(bad)
inc
sbb
add
pop
and
enter
and
lock
cmp
(bad)
inc
and
(bad)
(bad)
aas
pop
adc
adc
and
and
jns
cmp
(bad)
(bad)
call
lea
add
sbb
mov
out
out
popa
cmp
(bad)
(bad)
(bad)
jle
add
add
or
(bad)
sbb
add
sbb
or
add
or
mov
or
pop
and
xlat
sub
jbe
in
popa
cmp
std
(bad)
call
pop
and
inc
add
aam
xchg
aam
cmp
std
(bad)
call
push
movs
add
add
or
pop
and
and
cmp
add
or
add
add
or
add
or
or
add
movs
add
add
or
pop
and
fwait
icebp
das
pop
and
fsub
test
(bad)
inc
outs
sbb
or
add
and
and
and
add
movs
xchg
xor
and
(bad)
(bad)
jle
add
add
adc
push
adc
pop
sub
add
or
pop
and
and
cmp
(bad)
inc
outs
sbb
or
add
and
fsub
add
je
icebp
cmc
and
(bad)
call
add
add
sub
add
or
add
or
add
or
push
adc
and
(bad)
sub
pop
and
pop
out
popa
cmp
cld
(bad)
inc
sub
add
sub
es
add
sbb
add
sub
sub
es
add
add
add
sub
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
or
add
or
add
push
add
or
add
xor
add
add
add
add
add
add
push
add
or
add
or
add
sub
adc
or
adc
add
add
add
sub
es
add
or
add
or
add
sldt
or
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
dec
add
outs
adc
add
sub
add
xor
add
add
add
add
add
add
push
add
or
add
adc
add
sub
adc
or
adc
add
add
add
sub
es
dec
add
dec
add
outs
adc
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
adc
add
sub
add
xor
add
add
add
add
add
add
push
add
adc
add
sub
adc
or
sldt
add
add
add
add
push
add
or
add
adc
add
xor
add
add
add
add
add
add
push
add
push
add
or
add
xor
add
add
add
add
add
add
push
add
pop
add
or
add
xor
add
add
add
add
add
add
push
dec
add
outs
sbb
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
sbb
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
sbb
add
sub
add
xor
sbb
add
add
add
sub
es
dec
add
dec
add
dec
add
dec
add
outs
sbb
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
push
add
push
sub
add
xor
add
add
add
add
push
dec
add
dec
add
dec
add
dec
add
dec
add
outs
push
add
push
sub
add
xor
add
add
add
add
add
add
push
add
or
add
sbb
add
sub
adc
or
adc
add
add
add
sub
es
add
add
add
add
add
adc
or
inc
add
add
add
adc
add
push
push
sub
add
push
cmp
add
add
and
add
add
and
add
add
add
bound
add
add
mov
push
add
add
push
add
dec
add
add
add
add
add
add
add
add
(bad)
add
add
add
add
add
add
add
add
add
add
xchg
(bad)
(bad)
jmp
add
lahf
add
add
add
add
add
sahf
add
add
add
cmp
add
cmp
pop
and
sub
pop
and
mov
popa
cmp
add
add
jnp
add
add
inc
lock
add
push
add
add
jg
(bad)
inc
and
xlat
(bad)
pop
and
push
aas
cmp
cmps
add
add
and
add
pop
jge
add
add
sldt
add
push
(bad)
(bad)
inc
and
and
fcom
stc
popa
cmp
add
and
add
add
add
add
add
add
sbb
add
add
add
add
sub
add
push
cmp
(bad)
(bad)
jmp
and
cs
sbb
add
mov
jae
and
fwait
movs
scas
pop
popa
cmp
add
add
and
add
bound
add
add
or
add
cmp
(bad)
(bad)
inc
and
and
cmp
popa
cmp
add
add
add
add
add
bound
jnp
add
add
cmp
add
shl
push
add
add
or
add
sub
add
push
cmp
and
sar
add
and
enter
es
and
stc
ins
pop
popa
cmp
jnp
add
add
add
add
inc
add
add
adc
add
cmp
(bad)
inc
and
mov
pop
into
add
xchg
add
add
sub
in
push
pop
sbb
xchg
add
add
jge
add
add
or
add
cmp
(bad)
jmp
add
fs
cmp
add
add
add
jnp
add
add
fs
jge
add
add
add
add
cmp
(bad)
(bad)
inc
and
jecxz
and
cmp
add
add
jnp
add
add
add
add
inc
in
(bad)
jmp
or
out
(bad)
inc
jnp
add
add
or
add
add
or
pop
add
add
int3
std
(bad)
jmp
push
push
jno
pusha
cwde
pop
xor
or
push
pop
inc
push
add
add
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
(bad)
jmp
add
(bad)
dec
(bad)
dec
add
test
add
adc
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
jmp
add
add
cmp
(bad)
inc
and
and
cmp
jnp
add
add
bound
jnp
add
add
cmp
add
shl
push
add
add
pushf
std
(bad)
jmp
and
add
add
cmp
std
(bad)
jmp
cmp
add
add
and
add
pop
jge
add
add
add
add
cmp
std
(bad)
jmp
in
les
retf
push
add
add
icebp
jle
(bad)
and
and
cmp
(bad)
(bad)
call
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
sbb
add
sub
add
xor
and
add
add
add
sub
es
sub
es
add
jge
add
add
pop
add
pop
pop
bound
jge
add
add
add
add
xor
das
add
add
add
adc
add
push
sub
add
sub
add
cmp
add
and
add
add
sbb
add
cmp
add
add
pop
pop
or
xor
add
and
add
add
push
add
dec
add
add
add
add
adc
add
sar
inc
add
add
add
add
add
mov
add
pop
add
add
and
retf
(bad)
(bad)
jmp
dec
out
xchg
shl
add
ret
aam
mov
add
add
and
xchg
jle
popa
cmp
add
jnp
add
add
loopne
add
add
sub
add
push
and
add
add
xchg
(bad)
call
or
add
add
cmp
(bad)
inc
and
clc
push
icebp
pop
and
mov
add
add
outs
pop
add
add
add
pop
pop
bound
xchg
(bad)
(bad)
jmp
add
add
cmp
(bad)
jmp
cmps
addr16
and
pop
(bad)
lods
popa
and
push
add
add
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
call
add
mov
(bad)
jmp
(bad)
jmp
add
add
cmp
test
(bad)
jmp
add
xor
pop
add
add
add
adc
add
push
and
add
add
repnz
add
adc
push
add
add
mov
cmp
cmp
add
pop
pop
pop
or
or
add
cmp
add
add
push
inc
cmp
add
pop
push
ds
(bad)
jmp
add
add
sub
add
cmp
cmp
add
add
jnp
add
add
and
add
add
xchg
add
add
or
inc
add
push
sub
add
cmp
add
add
and
cmp
add
es
mov
adc
popa
and
push
add
add
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
jmp
add
add
fwait
(bad)
(bad)
jmp
and
add
add
cmp
add
or
aaa
pop
cmp
pop
and
sub
mov
(bad)
inc
pop
bound
jnp
add
add
loopne
add
add
add
cmp
add
pop
or
inc
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
jmp
(bad)
(bad)
call
(bad)
jmp
(bad)
(bad)
dec
(bad)
(bad)
call
add
add
pop
add
add
inc
add
push
cmp
(bad)
(bad)
jmp
or
dec
push
into
lahf
pop
and
xchg
popa
cmp
(bad)
inc
pop
add
add
add
pop
pop
bound
add
add
xor
mov
add
or
add
sub
es
and
add
add
cmp
pop
or
add
add
cmp
xchg
push
cmps
jmp
mov
adc
add
ret
add
add
add
add
add
das
add
add
(bad)
(bad)
(bad)
add
add
add
add
add
add
cmp
add
cmp
add
or
jnp
add
add
pushf
add
add
add
add
cmp
add
push
inc
inc
sti
cmp
pop
bound
and
add
sub
add
cmp
add
add
and
add
push
or
or
add
cmp
add
add
or
cmp
or
add
dec
add
add
add
add
(bad)
jmp
add
add
add
add
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
dec
add
add
add
add
cmp
jo
add
adc
mov
(bad)
(bad)
inc
jnp
add
add
loopne
add
add
add
cmp
add
or
add
inc
add
push
cmp
adc
mov
push
mov
and
adc
(bad)
(bad)
call
or
or
add
cmp
(bad)
inc
or
pop
pop
pop
bound
pop
sub
add
cmp
and
add
add
inc
add
push
cmp
(bad)
(bad)
jmp
adc
mov
(bad)
and
pop
jo
cmp
pop
pop
or
mov
and
pop
(bad)
(bad)
call
add
(bad)
ins
mov
and
outs
(bad)
(bad)
inc
sub
xor
rol
add
or
add
sub
es
and
add
add
cmp
add
adc
je
arpl
and
loope
popa
cmp
add
pop
loopne
add
add
add
cmp
add
or
add
and
add
and
popa
add
add
add
add
inc
add
add
add
add
dec
add
add
add
add
add
add
(bad)
call
add
movs
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
and
add
add
mov
inc
repz
and
cmp
inc
popa
and
pop
inc
or
add
xor
add
pushf
add
add
(bad)
jmp
add
aam
add
inc
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
add
add
or
add
cmp
(bad)
(bad)
cmp
add
add
pop
pop
or
add
add
pop
cmp
(bad)
jmp
adc
xchg
int3
sbb
and
(bad)
call
or
add
add
cmp
(bad)
inc
pop
bound
pop
sub
add
cmp
add
add
and
add
add
sub
(bad)
call
add
adc
mov
and
inc
into
xchg
popa
cmp
(bad)
inc
or
cmp
and
add
sub
add
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
call
add
dec
sub
sbb
ret
cmp
das
(bad)
(bad)
inc
or
pop
pop
pop
bound
and
add
push
cmp
(bad)
(bad)
jmp
pop
or
or
add
cmp
(bad)
(bad)
jmp
sbb
adc
add
sar
sub
(bad)
call
or
or
add
cmp
add
cmps
repnz
in
and
daa
sbb
(bad)
(bad)
inc
sub
adc
or
push
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
adc
add
push
and
add
add
cmp
add
and
and
add
add
add
add
add
cmp
add
add
and
and
cmp
add
add
add
add
add
bound
jnp
add
add
dec
add
push
shl
push
add
add
add
add
push
add
add
push
add
dec
add
add
add
add
jne
(bad)
push
add
add
add
xor
add
add
add
call
add
add
add
add
add
add
jo
(bad)
jmp
and
add
add
mov
and
sbb
sbb
lods
popa
int3
mov
cmp
add
add
jge
add
add
or
add
cmp
add
add
sbb
add
add
add
add
sub
add
cmp
jl
(bad)
inc
and
or
pop
and
dec
push
and
add
add
pop
pop
or
pop
add
add
pop
(bad)
(bad)
jmp
inc
ret
out
and
add
jb
mov
and
add
push
or
or
add
sub
add
cmp
(bad)
jmp
and
jp
pop
and
and
or
add
push
(bad)
(bad)
jmp
add
add
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
call
sub
add
cmp
(bad)
(bad)
jmp
and
add
pop
cmp
(bad)
(bad)
jmp
add
jge
add
add
or
add
cmp
(bad)
(bad)
inc
and
lods
scas
lea
sbb
mov
(bad)
(bad)
jmp
add
xor
add
add
add
add
sub
es
add
sub
xor
add
add
add
add
sub
es
push
sub
add
cmp
add
add
and
add
add
mov
sar
stc
mov
add
and
pop
jmp
add
and
add
bound
add
add
push
add
add
pop
add
cmp
add
and
cmp
mov
sahf
popa
and
add
add
add
(bad)
(bad)
(bad)
mov
add
add
add
add
pop
cmp
add
cmp
jnp
add
add
bound
jnp
add
add
dec
add
push
shl
push
add
add
add
add
cmp
add
and
popf
(bad)
(bad)
inc
jnp
add
add
add
add
inc
pop
(bad)
(bad)
(bad)
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
call
(bad)
push
add
add
(bad)
(bad)
call
add
add
sbb
(bad)
jmp
and
iret
(bad)
(bad)
inc
and
and
cmp
(bad)
(bad)
jmp
adc
or
pushf
add
add
add
sub
es
and
add
add
cmp
jnp
add
add
and
add
add
sub
add
adc
imul
popa
scas
inc
popa
cmp
add
add
push
xor
add
cmp
add
and
add
add
push
push
add
or
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
add
jb
(bad)
dec
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
and
lahf
(bad)
(bad)
inc
push
pop
pop
pop
adc
sldt
add
cmp
cmp
loop
cmp
add
add
sahf
push
(bad)
les
in
(bad)
and
add
add
push
bound
jnp
add
add
dec
add
push
shl
and
add
add
push
(bad)
(bad)
jmp
nop
movs
adc
cmp
add
add
or
adc
add
cmp
(bad)
(bad)
jmp
loop
or
and
and
pop
inc
or
add
mov
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
cmps
add
add
(bad)
(bad)
jmp
dec
add
push
sub
add
cmp
(bad)
(bad)
jmp
and
add
cmp
(bad)
(bad)
(bad)
cmp
add
add
push
adc
pop
pop
pop
or
add
ret
inc
push
bound
and
add
add
mov
(bad)
call
add
sub
add
jnp
popa
cmp
dec
pop
pop
or
add
xchg
(bad)
(bad)
call
add
dec
pop
and
cmp
(bad)
inc
or
add
je
(bad)
dec
pop
bound
adc
pusha
or
or
add
cmp
(bad)
call
add
xchg
pop
and
and
(bad)
call
add
(bad)
pop
and
and
cmp
(bad)
(bad)
inc
pop
or
push
add
add
sub
add
jo
and
add
popa
cmp
(bad)
(bad)
inc
and
add
add
(bad)
jmp
add
add
cmp
jmp
adc
add
jge
add
add
adc
add
cmp
std
(bad)
jmp
pop
(bad)
shr
add
and
pushf
inc
test
(bad)
(bad)
inc
push
jge
add
add
or
add
cmp
std
(bad)
inc
jnp
add
add
and
add
add
mov
(bad)
dec
sub
xor
add
add
add
add
sub
es
sub
es
add
dec
add
push
sub
adc
or
push
add
add
add
add
add
push
dec
add
outs
sbb
add
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
adc
add
push
sub
es
and
add
add
cmp
add
add
pop
and
shl
pop
and
dec
mov
add
add
jnp
add
add
pop
add
add
cmp
add
add
pop
add
add
inc
add
pop
and
jno
sahf
pop
and
cmp
add
add
or
push
add
add
loopne
add
add
rol
add
lea
add
add
add
add
push
add
push
sub
add
cmp
add
add
and
add
add
cmp
sbb
add
push
jge
add
add
movs
add
add
and
add
add
xchg
add
add
pop
or
lea
add
add
add
add
add
add
cmp
add
cmp
adc
add
adc
add
cmp
add
pop
and
jb
add
cmp
cmp
push
push
adc
add
inc
add
add
(bad)
jno
ins
and
add
xchg
push
mov
je
add
push
pop
pop
or
adc
add
cmp
add
add
sbb
lea
add
add
add
add
pop
add
add
or
add
dec
add
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
call
(bad)
call
(bad)
dec
add
add
add
add
add
(bad)
(bad)
inc
(bad)
push
(bad)
(bad)
(bad)
jl
(bad)
call
(bad)
(bad)
(bad)
aas
add
add
add
ret
add
(bad)
(bad)
call
add
or
add
push
cmp
add
rol
add
lea
add
add
add
add
or
add
cmp
inc
pop
jb
lea
add
add
add
add
sldt
add
pop
(bad)
(bad)
inc
jae
add
push
jge
add
add
push
add
add
inc
(bad)
(bad)
inc
pop
or
lea
add
add
add
add
adc
add
push
cmp
(bad)
(bad)
jmp
add
or
lea
add
add
add
add
or
cmp
(bad)
jmp
add
add
push
jge
add
add
pop
add
add
(bad)
(bad)
(bad)
inc
sub
push
and
add
add
out
(bad)
(bad)
inc
jae
add
push
jge
add
add
adc
fsin
(bad)
inc
jae
add
push
jge
add
add
adc
add
sub
add
cmp
and
dec
pop
and
xchg
sbb
add
push
add
add
(bad)
call
(bad)
(bad)
call
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
jmp
add
add
sub
add
cmp
(bad)
jmp
add
add
push
jge
add
add
add
add
cmp
(bad)
inc
pop
or
lea
add
add
add
add
adc
add
sub
add
cmp
(bad)
cmp
(bad)
jmp
adc
(bad)
(bad)
jmp
add
add
xor
add
add
or
add
sub
es
and
add
cmp
add
add
add
add
cmp
add
add
sub
add
cmp
add
add
and
add
add
push
add
push
cmp
add
add
pop
and
cli
push
test
shl
lds
add
add
add
add
sub
add
cmp
add
and
add
dec
add
dec
add
add
add
add
jns
add
jns
add
imul
(bad)
jmp
add
add
add
add
push
add
add
int
(bad)
inc
and
sbb
jp
sub
add
add
jnp
add
add
sub
add
jge
add
add
pop
add
add
lahf
(bad)
(bad)
inc
jnp
add
add
add
add
sub
add
or
or
add
sub
add
cmp
(bad)
(bad)
cmp
(bad)
(bad)
cmp
add
add
jge
add
add
cmp
(bad)
jmp
and
pop
(bad)
(bad)
jmp
sbb
xchg
sbb
add
(bad)
(bad)
call
(bad)
(bad)
call
add
sar
(bad)
fdivr
(bad)
jmp
add
add
cmp
(bad)
inc
and
and
(bad)
and
(bad)
jmp
add
add
xor
add
add
add
add
sub
es
add
add
add
add
pop
add
push
sub
add
xor
add
add
add
add
adc
add
push
push
sub
add
cmp
add
add
and
add
add
push
add
add
out
add
add
add
add
sub
add
and
add
add
dec
mov
test
or
pop
inc
add
add
fdivr
(bad)
call
add
(bad)
(bad)
(bad)
jmp
mov
add
add
dec
add
dec
add
add
add
add
add
add
(bad)
(bad)
dec
add
add
add
add
add
add
cmp
(bad)
(bad)
inc
and
mov
pop
and
push
and
mov
(bad)
inc
push
pop
pop
jge
add
add
pop
add
add
push
add
push
cmp
pop
add
pop
pop
bound
cmp
add
add
and
add
add
(bad)
(bad)
(bad)
inc
jnp
add
add
sub
add
and
add
add
cmp
(bad)
jmp
pop
and
and
mov
(bad)
(bad)
jmp
add
xor
add
add
add
add
push
and
add
add
xchg
add
add
and
push
cmps
inc
pop
and
cmp
add
jnp
add
add
pop
add
push
and
push
add
push
cmp
add
cmp
add
or
cdq
pop
and
pop
and
cmp
add
add
pop
pop
or
add
push
add
push
cmp
pop
pop
pop
or
push
add
add
add
add
jg
fdiv
add
jnp
add
add
loopne
add
add
sub
add
push
cmp
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
in
(bad)
(bad)
(bad)
aas
add
add
add
add
add
into
add
add
add
add
add
cmps
add
add
(bad)
call
add
add
add
add
add
xlat
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
or
add
mov
add
add
adc
add
cmp
(bad)
jmp
in
sbb
in
cmp
add
add
cdq
lods
jne
and
add
pop
add
add
add
jnp
add
cmp
add
and
add
add
inc
(bad)
(bad)
inc
jnp
add
add
loopne
add
add
sub
add
push
and
add
add
es
(bad)
jmp
xchg
xchg
add
and
jmp
add
add
sbb
(bad)
(bad)
jmp
sbb
add
cmp
(bad)
(bad)
inc
jnp
add
add
loopne
add
add
sub
add
push
and
add
add
loop
(bad)
jmp
jno
push
into
and
add
xchg
cmp
jnp
add
add
loopne
add
add
sub
add
push
and
add
cmp
and
and
dec
adc
js
add
add
add
add
pop
add
push
and
add
add
cmp
and
es
mov
add
jnp
add
add
loopne
add
add
sub
add
push
and
add
add
pusha
(bad)
(bad)
dec
and
scas
cld
pop
and
cmp
add
add
pop
pop
or
adc
add
cmp
(bad)
dec
and
cmp
xor
enter
popa
cmp
add
add
or
sbb
add
cmp
(bad)
(bad)
inc
jl
add
add
cmp
push
add
add
or
and
pop
mov
pop
and
push
(bad)
add
add
jnp
add
add
add
add
add
pop
add
push
and
(bad)
(bad)
dec
and
and
inc
popa
cmp
jnp
add
add
loopne
add
add
sub
add
push
and
add
add
mov
(bad)
inc
jnp
add
add
sub
add
and
add
add
fwait
std
(bad)
jmp
test
ins
add
add
pop
pop
or
add
add
pop
cmp
or
std
nop
loope
pop
and
out
cdq
popa
cmp
add
push
or
add
add
sub
add
cmp
(bad)
jmp
cmp
add
or
push
add
add
dec
std
(bad)
jmp
retf
push
call
add
jnp
add
add
loopne
add
add
sub
add
push
and
add
cmp
std
(bad)
dec
and
and
sbb
add
add
jnp
add
add
pop
add
push
and
add
add
(bad)
cld
(bad)
jmp
(bad)
int3
inc
loope
cmp
add
add
scas
jmp
and
add
push
sbb
pop
or
or
add
cmp
cld
(bad)
dec
and
test
pop
and
push
mov
cmp
pop
jb
retf
jmp
sbb
add
cmp
and
add
add
test
(bad)
dec
and
es
and
jo
pop
popa
cmp
add
push
pop
or
jae
(bad)
jmp
push
add
push
sub
add
cmp
std
(bad)
jmp
and
add
add
push
add
push
cmp
(bad)
(bad)
cmp
(bad)
dec
and
xor
in
inc
popa
cmp
add
add
and
and
xchg
jle
popa
cmp
add
add
jnp
add
add
loopne
add
add
sub
adc
sub
(bad)
jmp
ss
jo
and
mov
fbld
or
pop
add
add
sti
(bad)
jmp
(bad)
(bad)
out
cld
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
(bad)
mov
std
(bad)
jmp
(bad)
jmp
(bad)
(bad)
jmp
(bad)
dec
(bad)
(bad)
jmp
sti
(bad)
call
(bad)
call
(bad)
call
(bad)
(bad)
push
(bad)
jmp
or
add
sub
add
cmp
sub
add
adc
push
add
add
adc
add
push
and
add
add
push
add
adc
and
movs
ret
push
rol
fisub
add
add
or
add
dec
or
add
add
add
add
adc
add
cmp
or
add
mov
rcr
pop
and
cmp
add
adc
add
jnp
add
add
add
jnp
add
add
sub
add
sub
push
adc
and
add
add
test
and
mov
pop
and
(bad)
pop
iret
popa
cmp
jnp
add
add
adc
sub
add
and
add
add
cmp
or
add
adc
and
(bad)
lock
and
js
(bad)
popa
cmp
add
adc
and
pop
(bad)
movs
pop
and
cmp
add
adc
add
add
adc
and
add
cmp
add
push
add
push
and
jl
add
push
adc
pop
add
add
push
add
push
cmp
add
adc
and
and
cmp
add
or
add
add
add
add
bound
or
pop
add
add
jnp
add
add
cmp
add
cmp
add
add
or
add
sub
add
cmp
or
add
add
add
add
pop
sub
add
and
add
add
pop
or
add
cmp
add
or
or
push
add
add
cmc
or
add
and
push
add
add
push
xchg
mov
adc
and
popa
cmp
add
adc
sub
cwde
pop
add
and
add
add
push
add
push
cmp
mov
add
and
push
add
add
adc
push
pop
pop
pop
bound
and
add
add
xchg
or
add
add
adc
add
or
add
je
fsubr
and
add
mov
adc
and
popa
cmp
add
adc
(bad)
adc
and
push
or
add
or
(bad)
jmp
das
add
add
cmp
and
cmp
add
add
fcmovnb
push
mov
es
add
add
jnp
add
add
jnp
add
add
or
bound
add
sbb
or
sub
add
cmp
add
adc
and
data16
and
push
loop
popa
cmp
jnp
add
add
add
push
and
add
add
cmp
or
add
adc
and
and
test
cld
popa
cmp
add
adc
and
and
pop
add
add
jnp
add
add
or
pusha
add
push
and
add
add
cmp
jnp
add
add
jnp
add
add
sub
add
sub
add
and
add
add
push
add
push
cmp
add
cmp
add
and
inc
jae
cmp
add
add
jnp
add
add
add
add
add
pop
add
add
jnp
add
add
cmp
add
cmp
add
and
add
add
push
add
push
cmp
add
adc
and
and
out
(bad)
popa
cmp
add
add
add
add
add
push
sbb
add
push
sbb
or
sbb
add
pop
cmp
or
add
and
xchg
xchg
and
add
imul
cmp
add
nop
add
push
and
add
add
fadd
add
and
add
fidivr
js
add
or
or
xor
add
cmp
pop
add
adc
and
(bad)
cdq
pop
and
cmp
add
add
adc
cmp
add
cmp
push
mov
add
add
jnp
add
add
jnp
add
add
add
popa
add
push
adc
and
add
add
jne
add
adc
add
add
fs
add
adc
and
push
dec
pop
and
and
popa
cmp
add
add
add
xchg
add
push
and
add
add
inc
pop
add
and
mov
add
add
int3
pop
stos
push
and
sbb
jecxz
popa
cmp
add
add
jnp
add
add
sub
add
adc
and
add
add
or
add
and
and
add
ret
test
adc
and
push
push
pop
popa
cmp
jnp
add
add
add
add
add
pop
add
add
jnp
add
add
cmp
add
pop
cmp
pop
add
and
add
sub
add
cmp
adc
and
xchg
and
cmp
add
pop
adc
jmp
add
add
nop
push
add
add
add
add
push
push
add
add
jnp
add
and
push
out
sbb
add
adc
and
ret
pop
and
cmp
ret
popa
cmp
add
add
or
cmp
add
cmp
add
and
sub
and
add
rcr
and
leave
clc
cwde
or
popa
cmp
add
add
outs
adc
jmp
and
push
add
push
cmp
push
add
add
add
add
add
add
add
bound
or
pop
add
add
jnp
add
add
cmp
add
cmp
add
add
add
out
add
and
cmp
add
add
jmp
jp
add
pop
add
add
jnp
add
add
aas
add
push
pop
or
and
add
cmp
add
add
add
jnp
add
add
or
bound
add
pop
adc
and
add
add
xchg
add
sub
sub
add
jns
and
add
fst
mov
add
push
add
push
and
add
add
pop
add
xor
(bad)
and
mov
popa
and
pop
inc
cmp
add
in
add
sahf
add
add
(bad)
(bad)
dec
cli
(bad)
dec
add
add
stc
(bad)
(bad)
mov
sti
(bad)
inc
(bad)
(bad)
inc
add
mov
add
jns
(bad)
inc
(bad)
push
cld
(bad)
inc
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
jge
(bad)
push
(bad)
jmp
add
add
add
add
stc
(bad)
(bad)
(bad)
cli
(bad)
dec
add
add
add
add
(bad)
(bad)
cmp
(bad)
(bad)
cmp
(bad)
inc
std
(bad)
push
add
add
(bad)
(bad)
sti
sti
(bad)
dec
add
add
add
add
cld
(bad)
call
cld
(bad)
dec
add
add
add
mov
(bad)
jmp
(bad)
(bad)
call
std
(bad)
dec
add
test
add
std
(bad)
call
add
je
add
lds
add
pop
cli
(bad)
jmp
and
add
pop
cmp
add
adc
and
rol
loope
lahf
cmp
in
(bad)
(bad)
call
mov
mov
adc
pop
cs
cmp
(bad)
(bad)
inc
jnp
add
add
push
add
and
add
add
sbb
add
or
mov
and
add
add
push
add
push
cmp
add
add
inc
add
and
(bad)
(bad)
call
or
std
(bad)
jmp
push
add
add
loope
add
and
mov
lock
add
add
add
adc
jnp
add
add
push
sub
add
pop
or
add
add
cmp
imul
push
add
add
or
lods
test
(bad)
inc
add
add
add
in
add
and
push
add
push
cmp
add
adc
and
jne
and
mov
(bad)
popa
cmp
mov
jb
cmp
and
adc
(bad)
(bad)
inc
jnp
add
add
add
add
add
pop
add
add
jnp
add
add
cmp
add
cmp
std
(bad)
jmp
add
add
sub
add
adc
and
mov
pop
and
pop
xor
std
(bad)
call
add
add
add
cmp
add
add
and
rcr
cmp
or
adc
and
add
add
jmp
mov
por
and
cmp
mov
fs
mov
mov
std
(bad)
dec
adc
push
add
push
sub
add
cmp
and
add
cmp
pop
(bad)
xchg
xchg
cmp
(bad)
inc
or
or
add
cmp
mov
jbe
xchg
pop
and
adc
sub
cmp
std
(bad)
call
add
add
add
cmp
add
es
(bad)
dec
xchg
cmp
std
(bad)
call
or
add
sub
add
cmp
add
adc
sub
adc
add
cmp
add
and
push
jmp
add
add
push
inc
or
and
idiv
(bad)
cld
(bad)
call
add
or
add
add
cmp
add
add
add
jnp
add
add
push
sub
add
adc
and
add
cmp
add
add
mov
and
adc
cmps
adc
test
(bad)
call
add
pop
add
and
add
sub
add
cmp
add
add
adc
and
mov
mov
sub
popa
cmp
(bad)
inc
jnp
add
add
add
add
add
pop
add
add
jnp
add
add
cmp
add
cmp
(bad)
jmp
daa
add
add
cmp
adc
and
and
icebp
outs
popa
cmp
cld
(bad)
dec
or
add
push
add
push
cmp
add
and
push
push
mov
cld
sti
(bad)
call
mov
push
int3
pop
and
jmp
popa
cmp
sti
(bad)
call
or
and
xor
add
adc
sub
and
add
cmp
add
add
mov
adc
push
pop
and
and
mov
or
add
cmp
add
add
adc
and
push
sbb
add
xchg
sti
(bad)
call
add
std
(bad)
jmp
cmp
add
cmp
add
add
fldcw
push
add
add
ffree
jb
and
(bad)
call
push
add
add
mov
add
and
dec
sar
cmp
add
add
mov
test
mov
movs
add
popa
cmp
sti
(bad)
inc
jnp
add
add
add
add
add
(bad)
loopne
add
add
add
add
add
cmp
add
and
add
cmp
add
adc
and
sbb
pop
and
clc
dec
jo
cmp
sti
(bad)
inc
jnp
add
add
or
imul
add
add
add
add
add
add
push
adc
add
push
add
push
cmp
add
add
adc
and
push
mov
and
cmc
mov
mov
or
(bad)
(bad)
jmp
adc
add
dec
adc
dec
add
add
add
(bad)
(bad)
jmp
(bad)
call
(bad)
push
cmc
(bad)
jmp
(bad)
call
(bad)
inc
(bad)
(bad)
inc
cli
(bad)
jmp
idiv
push
(bad)
(bad)
cmp
(bad)
jmp
(bad)
inc
sti
(bad)
jmp
sti
(bad)
call
(bad)
jmp
idiv
push
hlt
(bad)
dec
std
(bad)
jmp
hlt
(bad)
push
repz
jmp
clc
(bad)
inc
sti
(bad)
push
cmc
(bad)
push
(bad)
(bad)
call
cmc
(bad)
call
cli
(bad)
inc
cmc
(bad)
call
(bad)
jmp
hlt
(bad)
jmp
idiv
jmp
cld
(bad)
call
(bad)
(bad)
(bad)
mov
cld
(bad)
inc
(bad)
inc
cmc
(bad)
jmp
(bad)
inc
(bad)
push
(bad)
call
(bad)
dec
hlt
(bad)
call
stc
(bad)
inc
sti
(bad)
dec
(bad)
jmp
std
(bad)
dec
std
(bad)
call
cli
(bad)
call
idiv
(bad)
jmp
(bad)
inc
cld
(bad)
call
idiv
(bad)
(bad)
cld
(bad)
call
clc
(bad)
dec
add
and
add
add
cmp
(bad)
(bad)
jmp
and
jg
mul
add
sbb
cmp
(bad)
jmp
add
add
xor
or
add
sldt
adc
add
push
sub
add
sub
add
cmp
add
and
add
add
cmp
push
xchg
pop
or
and
add
add
cmp
add
adc
and
adc
lods
popa
cmp
add
add
sub
add
and
add
add
dec
add
add
push
and
lock
and
data16
cmp
add
adc
add
cmp
add
and
add
add
cmp
add
add
cmp
or
sub
add
cmp
(bad)
(bad)
jmp
or
add
dec
pop
add
or
add
add
add
add
add
(bad)
(bad)
jmp
(bad)
inc
add
add
add
int3
add
add
add
add
add
add
add
dec
(bad)
(bad)
dec
add
add
add
add
cmp
sbb
and
add
add
mov
push
and
neg
add
popa
cmp
add
pop
adc
push
pop
pop
pop
pop
bound
add
add
add
cmp
(bad)
jmp
popa
out
sub
jg
add
push
adc
add
pop
(bad)
(bad)
call
push
and
fisttp
and
sbb
popa
cmp
add
adc
and
add
add
cmp
(bad)
call
adc
pop
add
add
sub
(bad)
inc
sbb
and
add
add
push
add
push
cmp
(bad)
(bad)
jmp
and
xchg
cmp
add
add
repnz
pop
add
add
adc
dec
add
push
and
add
cmp
(bad)
(bad)
jmp
sbb
add
and
mov
punpcklwd
inc
or
add
mov
(bad)
(bad)
push
(bad)
call
(bad)
inc
(bad)
(bad)
dec
(bad)
(bad)
(bad)
mov
add
mov
(bad)
inc
push
xchg
pop
or
and
add
add
push
add
push
cmp
sub
adc
or
xlat
add
add
add
adc
add
push
and
add
add
add
add
sbb
add
sub
add
cmp
add
and
add
add
dec
add
add
cmps
add
add
sbb
add
and
add
add
call
sub
inc
add
add
jb
add
pop
add
add
(bad)
(bad)
(bad)
fdivr
(bad)
(bad)
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
inc
add
add
call
add
add
xchg
(bad)
(bad)
jmp
and
add
cmp
(bad)
(bad)
jmp
mov
mov
add
xor
push
and
inc
retf
cmp
sub
and
and
cmp
(bad)
call
sub
adc
or
push
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
add
add
xor
add
add
add
add
add
add
push
add
or
add
or
add
sbb
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
dec
add
outs
jb
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
imul
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
inc
add
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
ins
add
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
dec
add
outs
add
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
jae
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
xchg
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
xchg
add
sub
add
xor
sbb
add
add
add
sub
es
dec
add
dec
add
dec
add
dec
add
outs
jne
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
dec
add
outs
ins
add
push
sub
add
xor
sbb
add
add
add
sub
es
add
or
add
or
add
or
add
or
add
inc
add
push
sub
adc
or
add
add
add
add
push
dec
add
dec
add
dec
add
dec
add
dec
add
outs
jbe
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
inc
add
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
dec
add
outs
test
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
add
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
inc
add
push
sub
add
xor
add
add
add
add
add
add
push
add
or
add
push
add
push
sub
adc
or
push
add
add
add
add
add
push
dec
add
outs
test
add
sub
add
xor
add
add
add
adc
add
push
sub
add
sub
add
cmp
add
add
and
add
add
push
add
add
xchg
in
pop
push
cmp
add
add
add
add
add
push
add
add
jmp
add
cmp
(bad)
(bad)
jmp
mov
out
shr
and
add
(bad)
(bad)
inc
(bad)
(bad)
call
add
and
add
inc
add
add
add
mov
add
and
cmp
add
add
dec
popf
fiadd
cmp
pop
or
or
add
cmp
and
and
pushf
(bad)
(bad)
inc
add
add
add
or
add
push
cmp
add
es
(bad)
(bad)
inc
jnp
add
add
loopne
add
add
sbb
add
push
add
pop
add
add
cmp
add
add
add
add
cmp
(bad)
jmp
and
add
add
sub
add
add
add
add
loopne
add
add
sbb
add
push
add
pop
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
(bad)
call
(bad)
(bad)
dec
(bad)
(bad)
jmp
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
dec
add
add
add
add
cmp
(bad)
(bad)
jmp
adc
or
fadd
add
or
add
sub
es
pop
sub
add
cmp
add
add
and
add
add
dec
add
add
adc
sub
add
pop
pop
or
or
add
push
cmp
add
es
and
out
out
and
xor
jns
add
add
add
aaa
add
push
and
add
add
or
add
and
fs
and
add
mov
cmp
add
add
add
add
loopne
add
add
sub
or
add
cmp
add
add
dec
add
add
and
rcr
and
cmp
add
add
jl
add
add
cmp
add
add
cmp
jmp
arpl
in
in
and
or
or
or
add
mov
(bad)
(bad)
jg
(bad)
jmp
add
add
(bad)
(bad)
call
add
call
(bad)
(bad)
inc
(bad)
(bad)
jmp
xchg
(bad)
(bad)
jmp
and
add
add
outs
add
push
cmp
add
es
and
icebp
js
pop
and
cmp
jnp
add
add
aas
(bad)
(bad)
jmp
push
add
add
add
add
and
jmp
pop
and
cmp
inc
jnp
add
add
loopne
add
add
sub
(bad)
(bad)
jmp
pop
add
add
push
add
dec
add
add
add
add
add
(bad)
(bad)
call
(bad)
(bad)
call
add
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
jle
(bad)
jmp
add
add
push
cmp
(bad)
(bad)
jmp
push
or
add
add
cmp
jl
add
add
aaa
add
push
and
sahf
(bad)
(bad)
inc
and
sbb
and
icebp
call
(bad)
(bad)
jmp
adc
or
mov
add
or
add
sub
es
and
add
add
mov
add
cmp
and
aas
fwait
scas
pop
and
jno
popa
cmp
add
add
add
add
sub
add
push
pop
or
add
add
push
cmp
add
es
and
or
pop
and
jno
popa
cmp
add
add
push
pop
or
add
add
cmp
add
add
and
les
mov
aad
add
push
add
add
add
loopne
add
add
add
add
push
pop
or
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
(bad)
(bad)
mov
(bad)
(bad)
(bad)
jnp
add
imul
add
(bad)
call
add
add
add
add
sub
add
cmp
add
and
add
add
cmp
jl
add
add
sub
add
push
cmp
add
and
outs
add
push
cmp
and
stos
loope
cmp
jnp
add
add
loopne
add
add
add
add
push
sub
and
mov
and
cmp
add
add
or
dec
add
add
and
add
add
pop
(bad)
(bad)
jmp
ins
sub
and
dec
out
and
or
add
int3
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
cld
(bad)
(bad)
call
(bad)
(bad)
call
add
and
add
add
cmp
(bad)
(bad)
jmp
add
add
sub
add
push
cmp
or
add
cmp
(bad)
(bad)
jmp
pop
and
push
add
add
leave
ins
add
cmp
sub
add
xor
add
add
add
add
adc
add
push
sub
es
and
add
add
push
add
add
jl
add
add
adc
cmp
add
and
add
add
push
add
dec
add
add
add
add
jbe
add
jbe
add
dec
add
add
add
add
add
mov
add
add
add
add
cmp
(bad)
(bad)
inc
pop
adc
lea
add
add
add
add
sub
add
cmp
add
add
and
add
add
cmp
add
jae
add
push
jge
add
add
and
and
add
add
mov
(bad)
inc
pop
adc
lea
add
add
add
add
pop
add
add
cmp
(bad)
jmp
add
jno
add
and
add
add
popa
(bad)
(bad)
inc
jl
add
add
adc
and
add
add
cmp
(bad)
jmp
sub
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
rol
add
add
adc
add
push
and
add
add
xchg
add
add
and
and
out
outs
popa
cmp
add
push
loopne
or
add
jge
add
add
or
outs
add
add
or
xor
add
and
or
xor
loope
pop
popa
cmp
add
add
add
and
add
or
add
cmp
add
add
xchg
ret
pop
cwde
popa
and
inc
push
add
add
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
mov
add
add
cmp
add
add
arpl
inc
mov
cmp
add
add
mov
mov
cmp
pop
add
pop
pop
bound
pop
jge
add
add
add
mov
fcmovbe
inc
mov
inc
jnp
add
add
cmp
add
and
add
add
cmp
or
sub
out
pop
and
jmp
dec
(bad)
(bad)
call
add
add
add
jnp
add
add
pop
pop
pop
bound
and
add
add
cmp
add
and
or
jmp
and
and
ja
ins
popa
cmp
(bad)
(bad)
inc
add
add
add
or
add
cmp
add
add
das
lahf
adc
and
add
sbb
or
lods
add
push
inc
ss
(bad)
(bad)
cmp
add
and
add
add
push
add
dec
add
add
add
(bad)
jmp
(bad)
jmp
add
push
add
add
(bad)
jmp
(bad)
(bad)
inc
add
add
add
jge
(bad)
push
add
add
(bad)
(bad)
dec
(bad)
dec
(bad)
(bad)
inc
add
add
iret
(bad)
(bad)
jmp
and
add
add
jns
add
cmp
pop
pop
pop
or
sub
add
cmp
(bad)
(bad)
jmp
and
add
add
cmp
or
ja
pop
cdq
pop
and
cmp
popa
cmp
(bad)
(bad)
call
or
sldt
add
imul
inc
jnp
add
add
pop
(bad)
(bad)
jmp
or
add
push
cmp
(bad)
jmp
cmp
add
add
add
add
loopne
or
add
sub
add
and
add
add
xor
(bad)
dec
and
pusha
sbb
add
popa
cmp
std
(bad)
jmp
or
and
ret
and
cmp
std
(bad)
inc
jnp
add
add
inc
lahf
std
(bad)
jmp
or
add
cmp
(bad)
(bad)
dec
and
int3
addr16
and
pushf
stc
inc
popa
cmp
adc
or
cmp
add
adc
add
sub
es
sub
add
sub
add
cmp
add
add
and
add
add
mov
inc
mov
add
add
or
or
add
cmp
add
add
add
jnp
add
add
pop
pop
pop
bound
and
add
add
ins
add
add
lahf
adc
cmps
and
or
pop
inc
add
add
add
(bad)
(bad)
jmp
add
add
(bad)
(bad)
jmp
push
add
add
cmp
add
and
imul
add
add
std
test
cmp
and
add
loopne
or
add
sub
push
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
dec
(bad)
push
(bad)
(bad)
call
add
sbb
add
sub
add
push
(bad)
(bad)
add
add
adc
and
jns
add
cmp
(bad)
(bad)
(bad)
cmp
pop
pop
or
add
add
cmp
and
add
pop
push
inc
jae
(bad)
jmp
add
add
cmp
and
and
push
push
popa
cmp
(bad)
(bad)
jmp
adc
or
and
add
adc
add
push
add
jnp
add
add
add
add
add
pop
pop
bound
add
add
add
pop
pop
pop
arpl
add
add
xor
pop
add
add
add
sub
es
add
add
add
add
sub
push
loopne
or
add
add
jge
add
sub
adc
or
and
add
add
add
sub
es
add
add
add
add
sub
push
loopne
or
add
add
add
jle
add
sub
add
adc
or
sldt
add
add
sub
es
sub
es
add
jp
add
sub
adc
or
push
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
adc
add
push
add
add
add
lea
add
add
add
add
add
add
xor
add
add
add
add
adc
add
push
sub
add
sub
mov
add
and
add
add
mov
add
push
pop
pop
or
pop
add
add
add
push
cmp
cwde
add
add
or
add
add
cmp
add
adc
pop
fsub
or
pop
inc
add
add
add
add
scas
add
add
(bad)
(bad)
jmp
push
add
add
pop
add
add
in
jne
and
add
sti
loope
loope
cmp
and
pop
add
add
aaa
add
push
cmp
(bad)
jmp
and
and
add
cmp
add
push
and
add
add
ret
(bad)
(bad)
(bad)
cmp
add
add
dec
add
dec
add
add
add
(bad)
inc
(bad)
(bad)
inc
(bad)
jmp
(bad)
(bad)
(bad)
mov
add
add
add
add
cmp
(bad)
(bad)
jmp
or
or
cmp
(bad)
inc
and
les
and
pop
pop
popa
cmp
(bad)
(bad)
jmp
add
adc
or
or
add
or
add
sub
es
sub
add
sub
inc
add
add
and
add
add
jg
add
cmp
add
and
xor
nop
add
add
and
add
add
add
add
push
add
add
add
push
cmp
add
cmp
add
pop
or
add
add
and
add
add
das
add
add
mov
pop
bound
jnp
add
add
loopne
add
add
add
cmp
add
pusha
or
mov
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
add
add
(bad)
(bad)
(bad)
cmp
add
and
aad
(bad)
jmp
push
xor
or
(bad)
push
lods
xor
or
pop
inc
add
add
fdivr
(bad)
inc
add
add
(bad)
jmp
add
add
cmp
cmps
sub
fwait
and
add
lock
and
popa
cmp
shr
add
add
xor
add
add
add
add
push
and
add
add
cmp
add
add
and
js
lahf
cmp
jnp
add
add
pop
pop
push
bound
pop
loopne
add
add
add
cmp
add
or
scas
add
add
or
add
dec
add
dec
add
add
add
add
add
add
or
add
adc
add
or
add
and
add
imul
add
lahf
add
add
add
xchg
(bad)
(bad)
(bad)
jns
add
and
add
add
cmp
pop
(bad)
adc
cmp
add
add
and
add
add
cmp
add
add
and
and
sbb
sub
popf
add
add
and
loop
pop
and
aam
popa
cmp
sbb
sub
jg
add
cmp
and
add
push
cmp
(bad)
jmp
and
sbb
cmp
add
add
adc
cmp
add
push
and
add
add
add
add
or
add
cmp
(bad)
(bad)
jmp
or
add
add
xchg
and
fild
popa
cmp
add
add
and
add
add
(bad)
(bad)
jmp
or
add
cmp
(bad)
(bad)
jmp
pop
outs
cli
in
and
retf
and
inc
or
add
jle
(bad)
inc
add
(bad)
(bad)
(bad)
call
(bad)
(bad)
inc
(bad)
push
(bad)
(bad)
jmp
add
add
sub
lods
(bad)
(bad)
(bad)
cmp
or
cmp
jmp
or
add
cmp
or
add
add
cmp
dec
adc
(bad)
inc
pop
bound
jnp
add
add
loopne
add
add
add
cmp
add
pusha
or
or
add
cmp
(bad)
inc
pop
bound
pusha
or
push
add
add
dec
(bad)
(bad)
jmp
pop
outs
cli
in
and
add
ret
cmc
and
(bad)
inc
shr
add
adc
or
push
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
adc
add
push
pop
sub
xchg
add
add
and
add
cmp
add
cmp
add
lea
add
add
add
add
add
sub
add
push
and
test
jl
(bad)
popa
cmp
add
add
add
stos
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
int
(bad)
inc
jnp
add
add
cmp
sub
add
and
add
add
mov
(bad)
jmp
sti
ror
add
add
jge
add
add
or
add
sub
xchg
(bad)
(bad)
jmp
and
enter
pop
xor
push
pop
inc
add
add
(bad)
jmp
(bad)
(bad)
(bad)
fdivr
(bad)
call
(bad)
jmp
add
add
cmp
(bad)
inc
push
jge
add
add
pop
add
add
push
(bad)
(bad)
jmp
add
add
xor
add
add
add
add
sub
es
pop
sub
arpl
add
and
add
add
sub
add
push
and
dec
xor
mov
push
je
cmp
add
cwde
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
and
add
add
mov
add
cmp
(bad)
(bad)
jmp
and
jbe
enter
das
icebp
popa
and
add
add
add
add
add
(bad)
(bad)
call
push
add
add
mov
add
cmp
test
(bad)
jmp
add
sbb
cmp
add
add
mov
mov
es
and
cmp
pop
popa
cmp
push
jge
add
add
add
add
cmp
(bad)
(bad)
cmp
add
add
add
add
add
mov
add
cmp
(bad)
(bad)
(bad)
cmp
push
jge
add
add
or
add
sub
pop
(bad)
(bad)
jmp
add
add
push
and
add
add
push
(bad)
(bad)
inc
and
push
fimul
aam
popa
cmp
(bad)
jmp
add
add
xor
add
add
adc
add
push
pop
sub
inc
add
add
and
add
add
add
add
jnp
add
add
imul
add
add
add
add
add
imul
and
cmp
add
add
add
test
add
cmp
and
add
add
mov
add
cmp
add
add
sbb
add
add
cmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
jl
(bad)
dec
add
add
add
add
cmp
(bad)
(bad)
jmp
add
add
xor
mov
add
adc
add
push
and
add
cmp
xchg
cmp
and
pusha
idiv
and
pop
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
add
add
add
add
or
add
push
cmp
add
and
or
add
and
enter
es
and
imul
(bad)
(bad)
jmp
pop
and
fcomp
and
cmp
push
jge
add
add
mov
add
and
add
dec
add
dec
add
add
add
add
dec
(bad)
(bad)
dec
dec
add
add
add
jl
add
pushf
add
add
add
add
add
add
add
add
cmp
(bad)
(bad)
(bad)
cmp
add
add
add
add
jnp
add
add
jae
(bad)
jmp
add
add
cmp
jnp
add
add
jnp
add
add
or
sub
sub
add
and
add
add
test
(bad)
inc
and
and
mov
popa
cmp
(bad)
(bad)
inc
cmp
add
cmp
add
add
and
add
add
mov
add
cmp
(bad)
jmp
and
(bad)
(bad)
inc
add
add
add
sub
add
or
add
cmp
(bad)
(bad)
jmp
xchg
lds
add
add
sbb
es
and
popa
cmp
jnp
add
add
jnp
add
add
jnp
add
add
sub
add
add
idiv
(bad)
jmp
adc
push
add
add
adc
add
sub
es
and
add
add
cmp
add
add
or
jle
into
xchg
pop
and
cmp
sub
add
add
rol
add
add
add
add
fwait
add
add
or
add
cmp
and
mov
gs
popa
cmp
jnp
add
add
and
add
or
pop
jge
add
add
loopne
jnp
add
add
and
xchg
pushf
cmp
add
add
and
add
add
mov
add
cmp
add
add
add
add
jnp
add
add
mov
add
and
add
add
inc
add
add
pop
aas
pusha
dec
and
add
xlat
xchg
jg
and
add
push
add
add
add
or
push
add
add
pop
add
add
mul
xor
in
dec
push
popa
and
inc
or
add
ret
(bad)
(bad)
push
add
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
call
add
daa
add
add
add
add
add
add
add
add
sub
retf
add
add
and
fs
pop
and
add
(bad)
retf
and
(bad)
dec
and
and
add
scas
popa
cmp
pop
pop
adc
and
mov
add
cmp
cmp
add
add
or
add
add
push
cmp
add
or
pop
or
mov
and
cmp
popa
cmp
(bad)
inc
add
add
add
add
add
sub
jecxz
(bad)
jmp
and
add
add
inc
add
add
jnp
add
add
pop
pop
pop
or
add
add
cmp
add
add
and
aaa
and
add
jo
push
sub
(bad)
inc
inc
fdivr
(bad)
(bad)
cmp
(bad)
(bad)
jmp
or
add
dec
add
dec
add
add
add
(bad)
dec
(bad)
(bad)
stc
(bad)
(bad)
inc
(bad)
(bad)
push
(bad)
(bad)
call
std
(bad)
call
(bad)
(bad)
call
(bad)
jmp
(bad)
call
(bad)
(bad)
call
add
add
or
add
sub
mov
(bad)
jmp
and
hlt
ss
xchg
(bad)
(bad)
jmp
add
adc
or
pop
add
add
add
adc
add
push
sub
mov
add
cmp
and
add
add
test
add
add
add
add
and
add
or
pop
jge
add
add
loopne
pushf
and
add
sub
pop
add
add
push
add
add
jnp
mov
and
add
xchg
dec
daa
clc
and
cmovl
pop
popa
cmp
add
add
test
add
and
add
add
sub
add
cmp
jnp
add
add
jnp
add
add
(bad)
(bad)
(bad)
(bad)
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
push
(bad)
(bad)
inc
add
add
add
add
add
add
cmp
jmp
and
iret
(bad)
(bad)
jmp
rep
pop
push
and
call
pop
inc
add
add
fdivr
(bad)
dec
(bad)
(bad)
call
add
add
add
add
push
cmp
pop
and
mov
and
cmp
(bad)
(bad)
jmp
add
xor
add
add
add
add
adc
add
push
and
add
add
jns
add
add
add
add
pop
pop
pop
or
add
add
sub
pop
add
add
push
add
add
add
lods
add
add
sub
ins
add
add
and
add
sub
aaa
add
add
xor
add
and
cdq
and
xlat
jg
popa
and
add
add
ins
add
add
add
loopne
(bad)
(bad)
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
add
add
or
add
and
iret
(bad)
(bad)
(bad)
cmp
add
add
add
or
push
add
add
mov
(bad)
inc
and
mov
pop
and
fiadd
(bad)
(bad)
inc
jnp
add
add
loopne
sub
xor
add
add
add
add
sub
es
sub
es
add
lea
add
sub
adc
or
push
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
push
add
or
add
or
add
or
add
or
add
or
sub
add
or
add
xor
sbb
add
add
add
sub
es
dec
add
dec
add
dec
add
dec
add
outs
push
add
or
add
adc
or
push
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
sub
es
add
jge
add
add
adc
or
push
add
adc
add
push
sub
xchg
add
push
cmp
and
add
add
cmp
add
add
push
and
addr16
xchg
(bad)
bnd
popa
cmp
jnp
add
add
or
add
add
pop
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
mov
(bad)
(bad)
jmp
add
add
add
add
pop
add
add
int
(bad)
inc
jnp
add
add
inc
mov
xor
add
and
add
cmp
sbb
and
and
adc
mov
cmp
add
add
push
jge
add
add
add
mov
(bad)
jmp
inc
dec
and
jge
in
popa
and
pop
add
add
(bad)
(bad)
jmp
add
and
add
mov
(bad)
(bad)
dec
add
sldt
add
add
add
cmp
(bad)
(bad)
cmp
add
sub
and
push
mov
pop
and
cmp
and
add
pop
jge
add
add
push
add
add
pop
(bad)
(bad)
jmp
push
and
imul
and
movs
xor
(bad)
inc
and
add
pop
jge
add
add
or
add
cmp
(bad)
(bad)
jmp
pop
push
jno
cmp
(bad)
jmp
adc
or
pop
add
add
add
sub
es
add
jnp
add
add
inc
pop
add
add
or
add
add
sbb
add
add
xor
add
add
add
add
sub
es
add
jnp
add
add
inc
pop
add
add
or
add
add
push
jge
add
add
add
xor
add
add
add
add
sub
es
add
jnp
add
add
inc
pop
add
add
or
add
add
pop
or
add
add
adc
or
push
add
add
add
sub
es
add
add
add
inc
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
sub
es
sub
es
add
popf
add
push
sub
adc
or
add
add
adc
add
push
jle
add
add
push
cmp
add
add
dec
scas
push
xlat
and
and
pop
inc
or
add
mov
add
lds
add
fwait
add
add
add
and
add
add
add
add
(bad)
(bad)
dec
add
add
rol
add
adc
and
popa
pop
test
and
jmp
xlat
popa
cmp
adc
mov
call
add
add
add
xchg
add
add
add
add
add
add
add
add
add
xchg
add
xchg
add
iret
add
add
add
add
sub
ret
mov
call
adc
and
aas
or
popa
cmp
(bad)
call
xchg
add
push
es
cli
imul
cmp
(bad)
(bad)
call
pop
and
push
outs
pop
and
cs
cmp
(bad)
(bad)
inc
pop
push
popa
inc
add
add
sub
add
and
jle
fnstcw
or
or
adc
mov
(bad)
(bad)
(bad)
call
pop
and
and
mov
jmp
(bad)
call
or
cmp
(bad)
call
add
inc
mov
add
sbb
sub
pop
or
add
inc
pop
pop
or
cmp
add
or
ss
pop
or
or
add
sbb
add
call
cmp
(bad)
(bad)
inc
jle
add
add
sub
add
add
ins
xchg
pushf
sub
push
and
add
xchg
pop
pop
pop
adc
inc
add
adc
or
mov
add
adc
add
push
jle
add
add
add
add
push
and
jns
mul
popa
and
pop
inc
or
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
outs
add
add
int
add
push
or
adc
aad
or
cmp
pop
and
pop
aaa
sahf
pop
and
cmp
or
add
pop
and
cmp
rcr
je
adc
mov
(bad)
call
add
add
add
inc
nop
sti
in
cmp
(bad)
inc
popa
push
pop
push
popa
inc
add
add
outs
add
add
mov
cmp
cmp
(bad)
call
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
jmp
sub
cmp
(bad)
(bad)
call
pop
and
dec
dec
retf
pop
and
cmp
(bad)
call
cwde
add
push
and
jbe
mov
cmc
(bad)
(bad)
call
add
add
cmp
(bad)
call
push
adc
cmp
inc
mov
add
sbb
fwait
add
push
or
adc
outs
(bad)
(bad)
inc
pop
pop
or
add
add
and
pop
cmp
add
add
push
and
add
add
add
inc
(bad)
(bad)
call
or
repnz
(bad)
call
add
add
xchg
pop
adc
sub
(bad)
inc
jne
add
add
sbb
add
sbb
(bad)
inc
adc
or
mov
add
adc
add
sub
es
jle
add
add
push
and
jae
push
and
adc
pop
or
or
add
add
add
add
add
add
add
add
add
add
rol
add
add
add
add
add
add
cmp
add
add
popa
pop
dec
pop
push
popa
inc
add
add
jmp
add
and
mov
cdq
add
push
adc
and
add
xchg
and
adc
push
call
pop
and
and
add
add
add
cmp
(bad)
call
or
push
pop
adc
mov
(bad)
call
or
call
or
inc
popa
cmp
(bad)
call
add
add
add
pop
add
add
(bad)
inc
add
pop
add
add
add
mov
(bad)
(bad)
jmp
(bad)
(bad)
dec
(bad)
jmp
pop
jmp
(bad)
(bad)
(bad)
jle
add
add
pop
adc
and
push
mov
pop
and
(bad)
js
popa
cmp
(bad)
(bad)
call
or
or
or
pop
and
cmp
(bad)
(bad)
call
or
cwde
popf
aaa
inc
pop
and
mov
mov
cmp
(bad)
(bad)
call
cmp
(bad)
call
sbb
add
inc
mov
add
sbb
pushf
add
push
or
add
inc
pop
pop
or
mov
add
or
and
add
dec
or
or
pop
cmp
add
adc
pop
push
sub
or
repnz
(bad)
inc
jne
add
sbb
pop
or
add
inc
adc
or
or
add
add
add
sub
es
add
sub
adc
or
or
add
add
add
sub
es
add
mov
add
xor
add
add
add
add
sub
es
add
mov
add
xor
add
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
and
add
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
and
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
and
add
sub
add
xor
add
add
add
add
sub
es
sub
es
add
stos
add
push
sub
adc
push
add
add
adc
add
push
jle
add
add
add
add
push
cmp
add
add
jb
out
and
and
pop
inc
or
add
xor
add
rol
add
test
(bad)
(bad)
(bad)
mov
add
add
add
add
add
retf
add
add
pop
push
jle
add
add
scas
add
add
add
add
adc
add
add
cmps
add
add
scas
les
(bad)
call
movs
add
push
sbb
add
jb
out
cmp
adc
pop
and
(bad)
neg
push
or
shl
(bad)
(bad)
call
add
or
add
or
add
pop
add
jb
(bad)
jmp
add
or
add
mov
add
add
add
add
add
jnp
add
and
dec
(bad)
cmp
(bad)
(bad)
call
or
rcl
and
(bad)
call
pop
and
iret
pop
and
out
popa
cmp
(bad)
(bad)
call
add
add
bound
(bad)
call
push
pop
xor
(bad)
(bad)
call
pop
or
add
jne
(bad)
inc
mov
add
sbb
mov
add
sbb
cmps
add
push
or
push
and
add
xchg
and
add
dec
(bad)
(bad)
inc
pop
pop
or
or
sbb
add
cmp
(bad)
dec
sbb
sldt
add
push
and
adc
and
(bad)
call
cmp
(bad)
(bad)
inc
je
add
add
sbb
add
push
(bad)
(bad)
inc
adc
or
scas
add
add
add
adc
add
push
jle
add
add
push
and
mov
fidiv
call
pop
inc
or
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
push
add
add
fiadd
add
jle
add
add
pop
adc
and
arpl
sbb
popa
cmp
and
in
stos
pop
and
pusha
cmp
cmp
or
adc
test
call
and
fcmovnbe
pop
and
cmp
call
movs
add
push
and
data16
add
popa
pop
and
popa
inc
add
add
imul
add
(bad)
or
(bad)
(bad)
call
add
add
add
add
add
add
pop
add
add
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
inc
add
xchg
add
add
sub
adc
call
or
shr
in
adc
(bad)
(bad)
call
adc
mov
loopne
(bad)
call
push
pop
pop
xchg
sbb
call
or
adc
inc
mov
add
sbb
sub
adc
and
add
add
(bad)
(bad)
inc
pop
pop
or
or
or
pop
or
cmp
adc
and
add
add
add
add
call
push
pop
pop
xchg
sbb
cmp
(bad)
(bad)
call
adc
inc
je
add
sbb
push
adc
inc
adc
push
add
add
sub
es
jle
add
add
add
repnz
mov
and
repz
popa
and
pop
inc
or
add
loope
add
imul
add
xor
add
into
add
add
add
add
add
add
(bad)
(bad)
(bad)
cmp
add
add
add
add
add
inc
and
mov
popa
cmp
or
cmps
clc
mov
and
ins
pop
adc
xchg
(bad)
(bad)
call
add
add
add
add
pop
das
mov
inc
popa
pop
pop
pop
push
popa
inc
add
add
add
add
pop
ficom
(bad)
cmp
(bad)
call
or
add
movs
add
add
and
movs
push
mov
call
or
js
retf
pop
and
cmp
(bad)
(bad)
dec
inc
or
add
inc
add
add
add
add
add
add
(bad)
(bad)
dec
add
add
add
mov
(bad)
inc
fadd
fnstcw
stc
(bad)
(bad)
call
or
pop
sub
sbb
xor
(bad)
call
add
add
call
add
add
or
inc
mov
add
sbb
test
pop
jle
add
add
jg
push
add
add
jg
add
das
pop
pushf
pop
or
and
pop
or
inc
sbb
or
add
pop
or
call
cmp
(bad)
(bad)
jmp
sbb
pop
adc
inc
add
add
add
add
add
add
add
add
add
add
add
cmps
add
push
sub
(bad)
(bad)
call
xor
add
add
add
add
sub
es
add
sub
adc
or
or
add
add
add
sub
es
add
sub
adc
or
or
add
add
add
sub
es
add
scas
add
push
sub
adc
or
push
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
and
add
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
and
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
sub
add
adc
or
sldt
add
add
sub
es
sub
es
add
mov
add
sub
adc
push
add
add
add
add
push
jle
add
add
add
loop
dec
loop
xchg
popa
and
pop
inc
or
add
pop
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
or
add
jle
add
add
push
adc
and
mov
cmp
aas
lea
movs
(bad)
(bad)
inc
jle
add
add
nop
add
add
add
add
nop
add
add
add
add
pop
push
popa
inc
add
add
ret
add
cmp
cmp
(bad)
call
or
lods
loop
xor
lock
cmps
adc
cmp
(bad)
call
or
rcr
and
pop
and
cmp
(bad)
call
add
add
add
add
xchg
icebp
pusha
icebp
cmp
(bad)
(bad)
call
add
or
add
je
add
pop
(bad)
(bad)
push
add
add
push
add
add
add
add
add
add
add
add
and
mov
call
or
shr
in
out
(bad)
call
add
add
and
dec
not
popa
mov
(bad)
call
adc
or
fs
and
pop
and
push
(bad)
(bad)
call
or
jne
(bad)
call
add
jns
(bad)
inc
mov
add
sbb
sub
pop
pop
or
and
add
or
mov
add
or
mov
add
pop
or
pop
pop
cmp
sbb
(bad)
(bad)
call
cmp
(bad)
(bad)
call
push
and
adc
pop
ds
pop
adc
sub
(bad)
jmp
pop
adc
adc
inc
add
add
add
add
add
add
add
add
add
add
add
mov
add
sub
xchg
(bad)
inc
add
adc
or
ins
add
add
add
push
jle
add
add
add
add
push
and
and
and
inc
pop
add
add
add
add
add
add
add
iret
(bad)
(bad)
call
add
add
xchg
add
add
push
pop
imul
sbb
call
or
add
add
add
aas
(bad)
sbb
call
add
or
add
imul
add
add
mov
add
add
add
mov
add
add
add
mov
add
sar
ins
(bad)
(bad)
inc
push
popa
inc
add
add
and
add
and
sub
(bad)
cmp
(bad)
call
adc
or
xchg
je
retf
(bad)
out
into
imul
adc
and
cmp
(bad)
call
push
and
pop
dec
pop
adc
jnp
(bad)
inc
mov
add
sbb
mov
add
sbb
mov
add
push
pop
pop
or
add
add
or
cdq
add
add
stos
add
add
sbb
pop
aas
or
add
sbb
add
inc
(bad)
(bad)
call
add
add
(bad)
(bad)
jmp
sbb
or
or
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
sub
ds
(bad)
call
xor
add
add
add
add
sub
es
add
sub
adc
or
or
add
add
add
sub
es
add
sub
adc
or
push
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
sub
add
or
add
adc
or
push
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
daa
add
or
add
adc
or
sldt
add
add
sub
es
sub
es
add
ret
push
sub
adc
or
mov
add
adc
add
push
jle
add
add
push
and
dec
mov
popaw
and
pop
inc
or
add
test
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
jecxz
add
adc
and
add
add
adc
and
xor
leave
call
adc
and
aad
retf
call
cmp
inc
or
add
and
add
and
add
mov
add
jb
add
xchg
add
add
add
add
add
mov
add
mov
add
bound
add
sti
add
add
cmp
and
dec
(bad)
(bad)
(bad)
jle
add
add
pop
adc
and
push
pop
and
and
popa
cmp
add
pop
pop
pop
push
popa
inc
add
add
dec
add
add
xchg
lea
and
sbb
(bad)
call
adc
xchg
mov
and
fwait
pop
popa
cmp
(bad)
call
shr
(bad)
call
mov
and
sub
out
(bad)
call
or
xchg
cdq
jg
cmp
(bad)
(bad)
call
push
pop
adc
call
push
adc
inc
mov
add
sbb
mov
adc
and
adc
pop
dec
xchg
pop
adc
inc
pop
pop
or
dec
or
add
push
add
add
add
sbb
pop
aas
sldt
add
pop
and
adc
call
push
and
add
add
xchg
pop
cmp
(bad)
(bad)
inc
jne
add
add
push
adc
inc
add
xor
add
add
adc
add
push
jle
add
add
add
add
push
cmp
add
and
aas
cli
sbb
pop
pop
or
or
add
rol
add
add
jae
add
mov
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
cmp
add
pop
and
xor
jge
mov
cmp
mov
and
(bad)
(bad)
call
or
add
mov
adc
cmp
(bad)
(bad)
inc
sub
add
add
imul
add
and
mov
imul
call
pop
and
inc
cmps
out
pop
and
cmp
(bad)
call
add
or
add
test
add
jo
add
test
add
push
add
add
add
add
(bad)
inc
(bad)
(bad)
dec
add
add
add
in
sbb
xor
pop
(bad)
(bad)
call
adc
mov
scas
cmp
or
(bad)
call
push
and
add
add
add
loope
(bad)
call
pop
or
add
xchg
(bad)
(bad)
inc
mov
add
sbb
add
mov
pop
or
add
jge
(bad)
inc
pop
pop
or
into
add
add
and
pop
cmp
add
add
adc
pop
(bad)
(bad)
call
call
push
and
add
add
add
add
inc
(bad)
(bad)
inc
jne
add
add
pop
or
add
xor
(bad)
call
xor
mov
add
sbb
add
sub
es
jle
add
add
push
cmp
add
and
xor
and
pop
inc
or
add
sbb
add
fadd
add
add
add
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
xlat
add
add
pop
and
(bad)
loope
pop
and
push
cwde
popa
cmp
or
or
add
repnz
push
and
add
add
add
retf
cmp
pop
and
xchg
dec
pop
and
cmp
(bad)
call
mov
sbb
add
in
(bad)
(bad)
(bad)
call
add
add
add
pop
add
add
add
outs
add
add
add
add
(bad)
push
add
add
add
add
add
mov
(bad)
(bad)
mov
lahf
scas
mov
inc
popa
pop
ds
push
popa
inc
add
add
sbb
add
add
push
ror
call
pop
and
sbb
jbe
aad
popa
cmp
(bad)
(bad)
call
cmp
(bad)
call
cmp
(bad)
jmp
or
add
add
add
or
adc
inc
mov
add
sbb
rol
push
or
adc
inc
mov
add
sbb
rol
push
or
adc
inc
pop
pop
or
jle
add
or
add
adc
or
or
cmp
sbb
(bad)
(bad)
call
or
repnz
(bad)
call
or
add
inc
sub
or
add
inc
adc
or
or
add
add
add
sub
es
add
ret
add
push
sub
adc
or
or
add
adc
add
push
add
add
les
add
sub
add
adc
or
or
add
add
add
sub
es
add
mov
adc
or
or
add
add
add
sub
es
add
enter
sub
adc
or
push
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
sub
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
dec
add
outs
sub
add
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
sbb
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
sub
add
sub
add
xor
add
add
add
add
sub
es
sub
es
add
aam
add
sub
adc
or
aad
add
sbb
add
sub
es
and
je
add
and
mov
sub
sub
add
jle
add
add
push
and
add
add
pop
add
add
adc
add
pop
or
pop
cmp
and
add
add
inc
add
add
jbe
and
add
add
cmp
add
add
jle
add
add
add
add
and
add
adc
add
xchg
pop
adc
xchg
add
add
cmp
(bad)
(bad)
call
add
add
clc
add
add
add
add
and
add
add
call
or
add
add
add
add
add
add
add
add
add
add
add
add
or
add
cmp
add
add
or
inc
xchg
push
pop
dec
(bad)
popa
cmp
add
adc
and
in
js
and
mov
popa
cmp
add
adc
pop
adc
add
add
adc
add
add
cmp
loop
adc
cmp
add
adc
imul
add
add
add
add
add
add
repnz
(bad)
(bad)
mov
(bad)
(bad)
call
add
add
add
add
add
add
(bad)
add
push
sub
add
push
cmp
add
and
add
add
xor
add
push
pop
pop
or
or
add
sub
add
push
cmp
add
add
cmp
sub
add
push
cmp
(bad)
(bad)
jmp
or
push
or
dec
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
dec
add
dec
add
add
(bad)
(bad)
jmp
add
add
add
add
add
movs
add
add
(bad)
(bad)
dec
add
add
(bad)
push
(bad)
(bad)
fild
add
xchg
(bad)
push
(bad)
jmp
(bad)
(bad)
push
add
add
adc
add
cmp
sti
(bad)
(bad)
call
adc
popf
loopne
and
dec
add
add
or
cmps
mov
ds
iret
xchg
popa
cmp
add
add
add
pop
and
add
add
retf
jmp
add
add
cmp
(bad)
jmp
fcom
add
add
or
push
add
add
inc
(bad)
(bad)
jmp
mov
or
popa
and
pop
inc
or
add
xchg
(bad)
(bad)
call
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
inc
(bad)
(bad)
push
(bad)
jmp
or
add
cmp
(bad)
(bad)
call
retf
push
and
add
cmp
(bad)
(bad)
call
or
add
or
add
cmp
(bad)
(bad)
(bad)
cmp
(bad)
jmp
sbb
or
adc
add
sub
add
push
cmp
(bad)
(bad)
jmp
adc
pop
adc
dec
std
(bad)
jmp
and
mov
(bad)
jmp
cmp
add
adc
adc
add
add
sbb
add
sub
es
jle
add
add
push
and
xchg
fldenv
xchg
loop
call
pop
inc
or
add
add
add
add
add
add
add
add
add
jns
add
mov
add
ret
add
add
add
sbb
add
adc
pop
push
xchg
and
add
add
add
out
add
pop
and
call
call
add
add
add
data16
add
add
jmp
add
xlat
add
add
add
add
add
add
add
dec
add
add
add
cmc
add
add
add
mov
(bad)
(bad)
call
or
and
idiv
mov
(bad)
(bad)
call
push
and
pop
ds
adc
mov
call
or
or
(bad)
(bad)
call
adc
jmp
daa
pop
and
sub
or
(bad)
call
retf
add
push
es
push
xchg
repz
(bad)
(bad)
inc
add
pop
pop
pop
push
popa
inc
add
add
dec
add
add
jns
jae
cmp
(bad)
(bad)
call
or
jp
mov
adc
(bad)
(bad)
call
or
ds
mov
pop
and
mov
mov
sub
pop
adc
and
and
dec
mov
cmp
pop
pop
imul
(bad)
call
sbb
add
inc
mov
add
sbb
rol
add
or
adc
inc
pop
pop
or
sub
and
add
or
inc
or
sbb
add
add
pop
jle
add
add
pop
xchg
jle
add
add
inc
xchg
pop
pop
es
pushf
pop
pop
cmp
adc
and
adc
call
or
repnz
(bad)
call
adc
inc
je
add
add
pop
adc
call
xor
adc
add
sbb
add
sub
es
push
sub
add
push
cmp
add
and
add
add
pop
add
add
push
and
and
adc
add
add
or
dec
sub
and
xor
cmp
add
add
int3
add
push
cmp
and
add
add
fadd
add
cmp
add
add
pop
pop
or
add
add
cmp
add
add
add
pop
jo
loop
and
pop
inc
or
add
ret
call
add
add
add
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
and
add
push
cmp
cmp
add
pop
or
add
add
(bad)
add
push
cmp
add
and
add
or
or
add
sub
add
push
cmp
add
and
and
add
add
inc
add
add
add
jb
(bad)
inc
add
pop
pop
push
popa
inc
add
add
inc
add
and
add
add
sbb
add
adc
and
fisub
pop
and
and
cmp
call
or
push
add
add
cld
add
add
sbb
outs
into
cmp
(bad)
(bad)
call
add
add
add
xor
add
mov
(bad)
call
add
leave
(bad)
(bad)
inc
(bad)
(bad)
jmp
add
add
add
in
(bad)
push
adc
add
cmp
push
add
add
push
and
add
add
(bad)
add
push
cmp
and
int3
(bad)
(bad)
call
or
es
(bad)
in
and
push
sbb
(bad)
(bad)
jle
add
add
pop
and
ins
add
add
inc
or
sbb
cmp
and
add
add
push
add
add
pop
(bad)
(bad)
jmp
rol
add
or
push
add
add
add
add
ja
push
aad
jo
(bad)
call
inc
outs
into
cmp
(bad)
call
pop
and
and
add
add
loope
(bad)
call
cmp
add
add
or
add
dec
or
dec
add
add
add
(bad)
(bad)
call
(bad)
inc
std
(bad)
dec
(bad)
(bad)
jmp
add
test
(bad)
call
(bad)
push
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
push
(bad)
(bad)
call
add
add
add
or
(bad)
(bad)
(bad)
(bad)
dec
add
add
(bad)
jmp
add
add
sldt
add
cdq
(bad)
(bad)
call
adc
call
cmp
(bad)
(bad)
call
pop
and
adc
add
ja
(bad)
(bad)
cmp
je
add
add
adc
and
pop
push
pop
adc
add
push
(bad)
(bad)
call
or
add
add
cmp
(bad)
jmp
adc
pop
aaa
xchg
and
adc
add
sub
ss
(bad)
inc
add
adc
or
bound
add
sbb
add
sub
es
jle
add
add
add
fisub
xchg
sub
or
pop
inc
or
add
retf
(bad)
(bad)
(bad)
cmp
add
call
add
add
add
add
add
xchg
add
add
adc
jnp
jae
cmp
add
push
popa
inc
add
add
ja
add
and
mov
(bad)
(bad)
call
or
adc
xchg
and
call
or
xchg
push
rcr
pop
jo
popa
cmp
adc
or
cmp
call
popa
cmp
(bad)
call
add
or
add
popf
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
pushf
das
sbb
call
cmp
(bad)
call
add
dec
pop
adc
mov
(bad)
inc
mov
add
sbb
mov
add
sbb
rol
add
push
pop
pop
or
xchg
add
lock
add
add
add
sbb
pop
aas
or
add
sbb
(bad)
(bad)
call
add
lahf
add
add
jmp
push
adc
adc
inc
add
add
add
add
add
add
add
add
add
add
add
int
add
sub
lock
(bad)
inc
add
xor
add
add
add
push
jle
add
add
add
inc
and
jmp
pop
inc
or
add
cmps
add
add
add
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
cmp
adc
or
xchg
(bad)
call
and
mov
(bad)
call
add
pop
adc
mov
xor
mov
push
add
add
push
sbb
add
or
outs
xchg
mov
popa
cmp
add
pop
je
push
popa
inc
add
add
dec
add
add
push
jmp
(bad)
(bad)
call
or
lods
sbb
sub
call
add
or
add
sub
add
xor
add
pop
add
add
(bad)
(bad)
jmp
add
add
add
add
add
add
add
xchg
(bad)
call
push
and
cmp
(bad)
call
adc
mov
(bad)
inc
mov
add
sbb
sub
add
push
push
pop
pop
or
xor
pop
pop
or
sbb
sbb
pop
aas
or
add
sbb
add
mov
(bad)
call
push
and
add
add
add
out
(bad)
jmp
pop
adc
adc
inc
add
add
add
add
add
add
add
into
add
push
sub
daa
(bad)
(bad)
call
xor
add
add
add
add
sub
es
add
xlat
add
push
sub
adc
or
or
add
add
add
sub
es
add
fadd
add
sub
adc
or
or
add
add
add
sub
es
sub
add
push
sub
add
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
or
add
sub
add
sub
adc
or
push
add
add
add
add
add
push
dec
add
outs
sub
add
sub
add
xor
add
add
add
add
add
add
push
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
sub
add
or
add
adc
or
adc
add
add
add
sub
es
dec
add
dec
add
outs
das
add
or
add
adc
or
sldt
add
add
sub
es
sub
es
add
fld
add
sub
adc
or
push
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
sub
es
sub
es
add
jmp
add
xor
lds
add
sbb
add
push
jle
add
add
push
and
jnp
es
popa
and
pop
inc
or
add
sub
add
jecxz
add
inc
add
add
add
add
(bad)
(bad)
call
add
add
add
add
add
add
fiadd
add
rcr
add
push
es
adc
pop
cmp
or
popa
pop
xor
pop
and
or
cwde
(bad)
(bad)
inc
add
pop
jge
push
popa
inc
add
add
cmps
add
add
ret
call
call
or
aad
ins
push
pop
and
mov
les
push
(bad)
call
add
add
add
int3
add
add
add
add
add
aam
add
jne
(bad)
call
add
add
add
add
add
add
inc
xchg
jg
cmp
(bad)
(bad)
call
or
adc
adc
sbb
(bad)
(bad)
jle
add
add
pop
adc
and
and
cmp
(bad)
(bad)
call
or
and
iret
mov
and
sbb
(bad)
(bad)
call
adc
sbb
loopne
(bad)
call
push
and
add
xchg
and
add
add
loope
(bad)
inc
or
pop
and
add
add
add
add
dec
(bad)
(bad)
inc
mov
add
sbb
in
add
or
adc
inc
pop
pop
or
pop
or
add
push
or
or
cmp
adc
and
add
xchg
and
adc
call
repz
(bad)
call
adc
inc
sub
push
pop
js
and
add
add
add
inc
add
adc
or
xor
add
push
add
adc
add
push
and
add
add
xchg
add
cmp
add
shl
add
push
and
add
add
jno
add
and
push
cmp
mov
and
pop
inc
or
add
test
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
sub
add
push
cmp
add
es
pop
or
add
push
add
add
add
add
push
pop
push
(bad)
call
adc
add
and
add
add
jmp
add
sbb
add
add
(bad)
add
add
adc
add
jmp
add
es
add
(bad)
(bad)
inc
add
inc
pop
push
popa
inc
add
add
xchg
add
and
add
add
jmp
add
cmp
and
add
add
or
pop
pop
cmp
and
jg
add
adc
and
add
and
cmp
(bad)
(bad)
call
or
add
add
cmp
add
sbb
add
add
push
add
add
(bad)
retf
mov
(bad)
(bad)
call
or
add
or
iret
(bad)
(bad)
call
adc
add
add
add
test
add
push
pop
pop
or
sldt
add
cmp
add
add
cmp
add
pop
je
add
add
adc
and
add
add
add
add
adc
jmp
add
cmp
add
add
out
add
jle
add
add
push
and
add
add
aad
add
adc
and
and
out
push
(bad)
(bad)
jle
add
add
pop
and
add
add
cmp
and
scas
ror
cmp
(bad)
(bad)
call
add
add
add
add
(bad)
jmp
(bad)
(bad)
in
std
(bad)
call
(bad)
push
(bad)
call
(bad)
inc
(bad)
(bad)
call
(bad)
inc
(bad)
(bad)
call
add
and
add
add
add
add
cmp
add
out
std
(bad)
call
or
(bad)
mov
and
popf
xchg
(bad)
(bad)
call
or
adc
idiv
enter
adc
and
and
pop
popa
cmp
push
and
add
add
call
cmp
or
add
dec
or
dec
add
add
add
(bad)
(bad)
(bad)
aas
(bad)
(bad)
push
(bad)
(bad)
call
(bad)
push
(bad)
jmp
add
add
std
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
jmp
std
(bad)
(bad)
mov
std
(bad)
call
std
(bad)
dec
(bad)
(bad)
call
std
(bad)
dec
add
add
(bad)
(bad)
cmp
add
and
add
cmp
cmp
push
sub
add
push
cmp
and
add
add
cmp
(bad)
cmp
(bad)
(bad)
jmp
in
add
or
or
add
pop
cmp
(bad)
jmp
cmp
xor
add
add
adc
add
push
jle
add
add
push
and
cwde
pop
mov
or
or
or
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
ret
add
push
and
adc
imul
shl
add
push
and
(bad)
(bad)
call
adc
data16
pop
and
cmp
inc
or
add
or
add
and
add
add
add
cmps
(bad)
(bad)
call
add
add
add
add
add
test
add
test
add
int3
add
add
or
push
dec
(bad)
(bad)
inc
popa
pop
aas
pop
push
popa
inc
add
add
cmp
add
and
xor
(bad)
call
or
push
pop
and
add
imul
jle
add
add
pop
adc
and
stc
fcomp
xchg
jae
daa
popa
cmp
(bad)
call
push
and
add
ss
(bad)
call
pop
or
add
inc
mov
add
sbb
out
add
or
or
add
inc
pop
pop
or
les
add
or
les
add
or
add
sbb
pop
aas
sbb
add
adc
and
adc
and
add
add
adc
(bad)
call
pop
and
add
add
jmp
je
add
add
push
adc
inc
add
xor
add
add
adc
add
push
jle
add
add
add
add
push
and
movs
xor
or
or
or
add
mov
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
mov
add
sbb
add
or
idiv
inc
and
cmp
or
add
add
xchg
pop
adc
shr
cmc
ret
cmp
popa
pop
aas
pop
push
popa
inc
add
add
jb
add
and
jo
lods
cmp
(bad)
call
add
or
add
inc
add
add
add
mov
add
add
add
mov
(bad)
(bad)
call
add
inc
add
add
mov
je
cmp
call
adc
mov
jg
cmp
(bad)
(bad)
call
or
push
mov
mov
and
mov
popa
cmp
(bad)
call
or
pushf
jno
neg
jg
push
stc
popa
cmp
(bad)
(bad)
call
call
add
add
(bad)
(bad)
inc
mov
add
sbb
out
add
push
pop
pop
or
les
add
or
les
add
or
xor
add
pop
sbb
pop
aas
adc
push
and
add
add
add
add
inc
(bad)
(bad)
call
add
add
jmp
sbb
or
or
add
add
add
add
add
add
add
add
loop
add
sub
out
(bad)
(bad)
inc
add
adc
or
stos
add
add
add
sub
es
jle
add
add
add
add
fcmovu
fwait
popa
and
pop
inc
or
add
mov
add
add
add
add
add
sbb
add
add
add
add
add
add
add
cmps
add
add
fild
add
sbb
adc
and
sub
sub
popf
popa
cmp
inc
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
div
nop
xchg
jno
(bad)
call
or
data16
pop
and
cmp
call
or
mov
and
cmp
(bad)
(bad)
jle
add
add
add
int3
fsubr
pop
and
sub
(bad)
(bad)
call
or
push
das
fs
pop
and
lods
popa
cmp
(bad)
call
or
imul
cmps
scas
cmp
(bad)
(bad)
call
add
or
jb
cmp
(bad)
inc
pop
push
popa
inc
add
add
or
add
and
mov
cmp
(bad)
(bad)
call
cmp
(bad)
(bad)
call
or
inc
mov
add
sbb
sub
add
push
push
pop
pop
or
adc
add
or
and
pop
cmp
add
add
or
call
add
pop
xchg
cmp
(bad)
(bad)
call
add
add
cmp
(bad)
(bad)
jmp
sbb
pop
adc
inc
add
add
add
add
add
add
add
add
add
add
add
jecxz
add
sub
push
add
xor
add
add
add
add
sub
es
add
in
add
push
sub
adc
or
or
add
add
add
sub
es
sub
add
push
sub
add
xor
add
add
add
add
sub
es
add
out
add
push
sub
adc
or
or
add
add
add
sub
es
add
out
add
push
sub
adc
or
or
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
xor
add
sub
add
xor
add
add
add
add
add
add
push
add
xor
add
sub
adc
or
push
add
add
add
add
add
push
dec
add
outs
xor
add
sub
add
xor
add
add
add
add
add
add
push
add
or
add
xor
add
sub
adc
or
adc
add
add
add
sub
es
dec
add
dec
add
sub
add
sub
add
xor
add
add
add
add
sub
es
sub
es
add
hlt
add
push
sub
adc
or
add
add
add
sub
es
sub
es
pop
adc
and
add
repz
push
sub
add
lea
add
add
add
repz
push
sub
add
add
adc
or
or
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
or
add
or
add
push
add
or
add
xor
add
add
adc
add
push
sub
es
and
add
add
sbb
add
add
add
add
cmp
add
add
add
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
cmp
add
add
and
add
add
sar
(bad)
inc
sub
add
and
ret
(bad)
(bad)
inc
jae
add
push
jge
add
add
add
add
sub
add
push
cmp
(bad)
(bad)
jmp
and
add
cmp
add
add
xor
sub
add
add
add
sub
es
push
lea
add
add
inc
add
push
and
add
arpl
add
sub
dec
add
push
push
sub
add
push
sub
add
xor
add
add
add
add
adc
add
push
and
add
add
and
add
and
and
cmp
cmp
add
add
push
add
add
push
add
dec
add
add
add
add
add
add
adc
add
sbb
add
xchg
add
sbb
add
add
add
add
add
add
add
or
add
sub
add
push
cmp
(bad)
(bad)
(bad)
cmp
dec
add
add
or
add
add
and
add
cmp
sub
add
and
add
add
cmp
and
cmp
add
add
jne
inc
arpl
add
or
add
repz
and
cmp
add
sbb
xor
add
add
add
add
xor
add
mov
add
and
dec
(bad)
(bad)
dec
and
dec
jb
pop
and
shl
add
or
sub
and
dec
ja
cmp
add
add
inc
pop
add
add
add
lahf
add
add
(bad)
(bad)
jmp
(bad)
(bad)
jmp
or
add
cmp
(bad)
(bad)
jmp
fadd
jno
je
dec
sbb
or
add
add
(bad)
jmp
(bad)
push
(bad)
(bad)
call
(bad)
(bad)
dec
(bad)
call
sub
add
push
cmp
(bad)
(bad)
jmp
and
add
add
mov
(bad)
dec
and
or
xchg
add
add
(bad)
(bad)
call
cmp
(bad)
(bad)
inc
jnp
add
add
xor
add
inc
add
and
add
add
add
add
cmp
(bad)
(bad)
cmp
(bad)
(bad)
jle
add
add
and
add
add
arpl
(bad)
jmp
add
adc
or
rol
add
add
adc
add
push
jle
add
add
push
and
dec
mov
mov
popa
and
pop
inc
or
add
add
add
add
add
add
add
add
add
inc
add
add
add
retf
add
add
add
add
mov
inc
add
adc
and
add
add
add
scas
cmp
sti
add
push
es
clc
xor
cmp
add
push
popa
inc
add
add
mov
add
pop
popa
leave
cmp
(bad)
(bad)
(bad)
jle
add
add
pop
adc
and
inc
push
jge
repz
cmp
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
dec
pop
sti
mov
call
or
adc
int
adc
(bad)
call
push
and
adc
mov
dec
pop
and
cmc
(bad)
(bad)
call
or
stos
cs
or
and
push
scas
out
cmp
(bad)
(bad)
call
or
in
dec
imul
pop
and
dec
mov
(bad)
(bad)
call
or
mov
dec
and
jbe
push
popaw
cmp
and
cmp
(bad)
(bad)
call
sbb
add
inc
mov
add
sbb
sub
add
push
or
add
inc
pop
pop
or
add
add
daa
or
pop
or
or
add
pop
adc
call
pop
and
add
add
jmp
jne
add
add
push
adc
call
xor
add
add
add
add
adc
add
push
jle
add
add
push
jle
add
add
pop
and
push
and
pop
inc
or
add
mov
add
add
add
add
add
add
add
add
add
lods
add
add
add
add
add
add
add
add
hlt
add
add
or
les
jecxz
and
cmps
(bad)
(bad)
call
push
sbb
add
add
jns
pop
pop
and
push
iret
hlt
popa
cmp
or
stos
imul
cmp
(bad)
call
or
push
(bad)
pop
and
mov
(bad)
(bad)
(bad)
call
or
popf
stos
inc
push
pop
and
cmp
(bad)
call
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
data16
add
add
and
mov
(bad)
(bad)
call
push
pop
ins
xchg
adc
dec
cmp
(bad)
(bad)
inc
popa
pop
jne
push
popa
inc
add
add
sub
add
and
dec
popa
cmp
(bad)
(bad)
call
cld
add
push
es
or
add
jns
sar
(bad)
call
or
cmp
inc
dec
cmp
(bad)
(bad)
call
pop
and
addr16
cmp
or
adc
inc
mov
add
sbb
add
add
or
adc
inc
pop
pop
or
sub
pop
or
add
sbb
pop
aas
or
add
sbb
add
call
push
and
pop
adc
jmp
je
add
add
adc
and
add
add
add
call
xor
add
add
add
add
sub
es
add
add
add
xor
add
add
add
add
sub
es
add
push
add
push
sub
adc
or
or
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
sub
es
add
or
add
sub
adc
or
push
add
add
add
add
add
push
dec
add
sub
add
or
add
adc
or
push
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
sub
add
adc
or
sldt
add
add
add
add
push
add
or
add
aaa
add
or
add
xor
add
add
add
add
add
add
push
dec
add
outs
cmp
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
cmp
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
cmp
add
sub
add
xor
add
add
add
add
sub
es
sub
es
add
or
add
sub
adc
or
push
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
adc
add
push
and
add
cmp
add
add
and
add
and
add
sub
add
push
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
add
cmp
add
add
and
add
add
sar
(bad)
jmp
cdq
add
add
iret
add
add
add
sub
add
push
cmp
(bad)
(bad)
jmp
and
add
add
scas
(bad)
(bad)
push
add
push
sub
add
call
xor
add
add
push
jle
add
add
add
jmp
inc
pop
pop
mov
and
pop
inc
or
add
xor
add
daa
add
add
add
add
add
add
add
inc
add
add
(bad)
(bad)
call
add
add
enter
push
or
sub
in
jmp
call
adc
or
add
sub
or
popa
cmp
adc
mov
mov
xchg
(bad)
(bad)
call
or
push
dec
mov
pop
and
xor
cmp
push
add
add
push
adc
and
dec
mov
pop
and
je
popa
cmp
(bad)
call
add
or
add
and
add
jne
(bad)
jmp
add
and
add
lods
add
add
(bad)
inc
add
pushf
add
add
add
push
add
add
test
sub
adc
or
cmp
xchg
js
pushf
popa
cmp
(bad)
(bad)
dec
add
outs
pop
push
popa
inc
add
add
or
add
and
aaa
pop
mov
cli
(bad)
(bad)
call
add
push
(bad)
(bad)
call
push
and
adc
jnp
(bad)
inc
mov
add
sbb
add
add
add
add
add
push
push
pop
pop
or
mov
add
or
out
add
add
and
or
add
or
pop
pop
cmp
sbb
(bad)
(bad)
call
push
pop
adc
call
push
and
add
xchg
sbb
and
(bad)
jmp
pop
adc
adc
inc
add
add
add
add
add
add
add
or
add
sub
dec
(bad)
(bad)
inc
add
adc
or
or
add
add
add
sub
es
add
adc
add
sub
adc
or
add
add
sub
es
add
add
push
add
adc
add
sub
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
or
add
cmp
add
sub
adc
or
add
add
add
add
push
add
or
add
or
add
or
add
or
add
or
sub
add
xor
add
add
add
add
adc
add
push
jle
add
add
add
cmp
test
and
pop
cmp
add
add
add
add
add
jecxz
add
add
add
add
add
nop
add
add
add
add
add
cmp
add
add
adc
add
sbb
mov
lods
(bad)
(bad)
inc
add
pop
inc
pop
push
popa
inc
add
add
mov
xor
cmp
or
jno
cmp
cmp
add
pop
xchg
or
adc
or
jecxz
jnp
popa
cmp
call
push
and
mov
xchg
jge
cmp
(bad)
(bad)
jle
add
add
add
leave
aam
pop
and
and
and
aas
(bad)
(bad)
call
or
cli
cmp
(bad)
(bad)
call
push
and
jecxz
pop
and
cmp
(bad)
(bad)
dec
inc
or
add
adc
add
ds
(bad)
dec
(bad)
(bad)
(bad)
cmp
add
sub
(bad)
call
add
add
add
and
add
adc
add
test
add
and
loopne
(bad)
call
or
fwait
(bad)
(bad)
call
adc
es
pop
or
(bad)
(bad)
inc
mov
add
sbb
push
add
push
or
add
cmp
pop
pop
or
jle
add
add
in
add
jle
add
add
in
add
xchg
add
mov
add
pop
pushf
pop
cmp
add
add
or
call
add
push
add
add
jmp
inc
(bad)
(bad)
inc
jne
add
add
adc
add
add
add
cmp
(bad)
(bad)
inc
add
adc
or
add
add
and
add
sub
es
jle
add
add
push
jle
add
add
pop
cmp
add
and
or
pop
fsub
adc
pop
or
or
add
mov
add
add
add
add
add
fadd
add
sbb
add
sub
add
cmp
add
add
add
add
add
add
jmp
mov
and
mov
stos
(bad)
(bad)
call
adc
add
and
fwait
(bad)
(bad)
call
push
pop
xor
and
mov
(bad)
call
or
mov
jl
(bad)
inc
push
popa
inc
add
add
xchg
add
add
mov
pop
(bad)
(bad)
call
or
add
and
stos
fadd
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
cmp
(bad)
fild
add
pusha
(bad)
(bad)
call
dec
cmps
(bad)
cmp
(bad)
(bad)
call
push
pop
pop
xchg
adc
or
rcr
fld
out
(bad)
call
or
sub
pop
and
cmp
(bad)
(bad)
call
push
and
cmp
(bad)
(bad)
call
cmp
or
(bad)
(bad)
inc
mov
add
sbb
mov
add
sbb
pop
add
push
or
(bad)
(bad)
inc
mov
add
sbb
mov
add
sbb
sbb
add
or
push
pop
setno
push
pop
sub
xor
(bad)
inc
pop
pop
or
or
or
pop
or
cmp
adc
and
add
add
add
add
call
push
pop
ins
xchg
pop
bound
in
(bad)
(bad)
call
push
and
add
add
add
inc
sub
pop
and
push
(bad)
(bad)
(bad)
call
xor
add
add
add
add
push
jle
add
add
add
add
push
cmp
add
add
inc
dec
rcr
dec
mov
adc
adc
pop
or
or
add
mov
add
add
add
add
add
xchg
add
add
(bad)
(bad)
inc
add
add
add
pop
add
add
repz
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jge
add
cmp
add
inc
add
and
jge
inc
cmp
(bad)
call
pop
and
and
or
data16
(bad)
call
adc
and
and
push
(bad)
(bad)
call
pop
and
and
pop
and
cmp
(bad)
call
pop
and
aad
jae
and
cmp
(bad)
(bad)
call
add
dec
pop
adc
pop
and
and
cmp
(bad)
(bad)
call
adc
test
xchg
dec
cmp
(bad)
(bad)
inc
popa
pop
dec
pop
push
popa
inc
add
add
add
add
add
and
inc
jecxz
cmp
(bad)
(bad)
call
or
push
and
and
add
add
add
movs
mov
jb
retf
(bad)
(bad)
call
cmp
cmp
or
or
add
idiv
(bad)
inc
mov
add
sbb
sbb
add
or
or
add
loope
(bad)
inc
mov
add
sbb
sbb
add
or
push
pop
dec
xchg
pop
outs
pop
adc
(bad)
(bad)
(bad)
inc
pop
pop
or
and
pop
or
adc
mov
(bad)
dec
sbb
sldt
add
push
and
add
add
(bad)
(bad)
call
push
and
add
add
jmp
sub
or
add
cmp
inc
add
xor
add
add
add
add
sub
es
add
sbb
add
sub
adc
or
or
add
add
add
sub
es
add
sub
add
sub
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
sub
es
add
and
add
sub
adc
or
or
add
add
add
sub
es
add
and
add
sub
adc
or
push
add
add
add
add
add
push
dec
add
outs
add
or
add
adc
or
adc
add
add
add
sub
es
add
or
add
or
add
aas
add
or
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
inc
add
or
add
adc
or
push
add
add
add
add
add
push
dec
add
outs
inc
add
or
add
adc
or
push
add
add
add
add
add
push
dec
add
outs
inc
add
or
add
adc
or
sldt
add
add
sub
es
sub
es
add
daa
add
push
sub
adc
push
add
add
sub
es
jle
add
add
push
and
adc
shl
(bad)
fiadd
or
or
or
add
hlt
add
add
add
sbb
add
sub
add
fild
add
aas
add
add
(bad)
(bad)
inc
add
add
out
add
add
or
jns
ret
and
mov
scas
(bad)
(bad)
call
or
test
or
(bad)
(bad)
call
push
pop
cmp
adc
mov
(bad)
jle
add
add
pop
adc
and
inc
stc
pop
and
rol
outs
(bad)
(bad)
call
add
add
add
or
add
or
add
int3
add
add
add
jle
add
or
add
xor
add
add
add
lds
add
and
sub
add
push
jle
add
add
jp
sub
sbb
add
add
cmp
add
and
(bad)
fidivr
add
(bad)
call
and
add
adc
pop
jnp
pop
or
inc
or
cmp
(bad)
(bad)
call
or
pop
pop
push
add
(bad)
cmp
(bad)
(bad)
call
cmp
(bad)
(bad)
call
adc
and
pop
ins
pop
adc
inc
mov
add
sbb
sub
pop
or
add
inc
pop
pop
or
xor
and
add
add
or
or
cmp
push
adc
call
or
repnz
(bad)
call
adc
inc
je
add
sbb
adc
and
add
add
(bad)
(bad)
call
xor
add
add
add
add
adc
add
push
and
add
add
pop
add
add
je
add
or
add
add
pop
cmp
add
cmp
add
add
add
add
cmp
add
add
and
rol
add
push
popa
inc
add
add
stc
add
add
sub
add
sub
add
push
cmp
add
and
add
add
sub
add
cmp
add
add
test
add
popf
add
add
sbb
pop
aas
adc
add
and
add
add
fld
add
sbb
add
add
push
and
pop
ss
cmp
(bad)
(bad)
inc
sub
pop
pop
push
adc
add
cmp
pop
xor
sub
cmp
or
dec
jns
rcr
js
mov
popa
cmp
add
add
or
adc
add
cmp
push
and
adc
add
jne
add
cmp
(bad)
(bad)
jmp
mov
xor
and
adc
pop
or
inc
or
add
inc
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
call
(bad)
(bad)
call
add
add
add
add
adc
add
cmp
add
add
add
add
push
and
add
add
sub
add
cmp
add
add
pop
or
add
cld
add
add
or
outs
adc
rcr
out
push
ins
popa
cmp
(bad)
call
or
js
sub
pop
and
cmp
(bad)
call
or
leave
punpckldq
pop
and
loope
popa
cmp
(bad)
call
and
add
and
add
add
mov
add
jle
add
add
pop
and
cmp
cmp
add
add
pop
pop
or
adc
add
cmp
adc
add
sub
add
cmp
add
cmp
add
cmp
add
add
add
add
push
or
add
add
cmp
add
adc
and
jne
popa
pop
and
or
popa
cmp
(bad)
(bad)
call
or
add
add
sub
add
cmp
add
add
and
push
inc
jge
ret
(bad)
(bad)
call
adc
dec
cmp
push
pop
pop
xchg
pop
popa
pop
cmp
(bad)
(bad)
call
add
and
add
add
push
or
dec
add
add
add
std
(bad)
call
(bad)
(bad)
push
(bad)
(bad)
dec
(bad)
push
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
jmp
(bad)
inc
add
add
(bad)
(bad)
push
std
(bad)
push
(bad)
(bad)
call
add
add
(bad)
(bad)
jmp
std
(bad)
push
(bad)
dec
call
add
cmp
and
add
add
cmp
and
jg
or
and
(bad)
call
add
add
(bad)
(bad)
call
std
(bad)
jmp
(bad)
(bad)
(bad)
mov
std
(bad)
jmp
cld
(bad)
jmp
(bad)
(bad)
inc
std
(bad)
jmp
or
add
pop
cmp
(bad)
jmp
cmp
adc
or
or
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
inc
add
or
add
adc
or
adc
add
add
add
sub
es
add
or
add
or
add
inc
add
or
add
xor
add
add
daa
add
adc
add
push
and
add
add
add
add
add
add
sub
add
push
cmp
add
add
and
add
pop
cmp
add
es
and
xor
push
adc
and
inc
pop
add
add
add
add
add
rol
add
add
sahf
add
add
(bad)
(bad)
jmp
xor
add
sub
add
push
cmp
and
add
add
stc
add
add
mov
add
push
je
add
add
and
mov
xor
add
sub
add
push
cmp
add
add
add
add
cmp
add
add
or
add
add
pop
xchg
cmp
(bad)
(bad)
call
or
or
add
cmp
and
xchg
xchg
pop
and
cmp
(bad)
call
or
aaa
cmp
(bad)
inc
jne
add
add
lods
sbb
push
add
xor
add
pop
jo
and
push
add
sub
stos
add
add
fwait
add
add
and
add
add
pop
add
add
aad
lods
push
cmp
(bad)
(bad)
jmp
test
add
add
xor
add
and
add
and
add
pop
add
sub
sahf
add
add
lds
add
sub
add
sub
retf
add
in
add
add
or
add
or
mov
add
and
add
add
push
or
dec
add
add
add
add
or
(bad)
jmp
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
or
add
jp
(bad)
call
add
xchg
add
add
add
leave
(bad)
(bad)
jmp
jge
jl
and
add
cli
sar
and
(bad)
dec
inc
or
add
xor
add
add
(bad)
(bad)
push
add
add
(bad)
(bad)
dec
(bad)
(bad)
(bad)
cmp
add
int3
(bad)
(bad)
jmp
pop
add
add
jp
(bad)
(bad)
cmp
add
add
add
mov
and
or
add
pop
(bad)
(bad)
jmp
mov
adc
(bad)
call
cmp
and
add
cmp
(bad)
(bad)
(bad)
add
add
push
add
add
fld
add
add
adc
cmp
and
add
add
cmp
add
add
and
xchg
ficom
popa
and
inc
add
add
(bad)
(bad)
inc
add
mov
add
test
add
cmp
add
add
add
add
dec
or
dec
add
add
add
std
(bad)
call
std
(bad)
(bad)
jge
(bad)
dec
add
add
add
add
add
aad
(bad)
(bad)
cmp
add
adc
inc
push
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
xor
add
cmp
adc
and
(bad)
pop
(bad)
pop
and
lods
popa
cmp
call
jle
add
add
push
add
add
add
add
push
add
add
add
and
add
pop
pushf
sub
lock
dec
das
cmp
(bad)
(bad)
inc
sub
add
add
add
sub
add
add
add
add
add
add
xor
add
add
add
add
sub
es
sub
es
add
xor
add
sub
adc
or
adc
add
add
add
sub
es
sub
es
jae
add
or
sub
adc
or
or
add
add
add
sub
es
add
sub
adc
or
pop
add
add
add
add
add
push
add
or
add
or
add
or
add
outs
add
push
sub
adc
or
adc
add
add
add
sub
es
add
or
add
or
add
loopne
add
sub
adc
or
push
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
add
or
add
or
add
aas
add
or
add
xor
fld
add
sub
add
sub
es
and
add
add
repnz
add
(bad)
out
add
or
xchg
add
xchg
and
or
add
add
cmp
add
add
or
or
add
pop
cmp
add
add
and
push
add
add
cmp
add
add
add
and
add
add
cmp
cmp
jne
add
add
jnp
add
add
mov
ret
add
or
add
cmp
add
add
jnp
add
add
or
and
and
push
and
dec
add
add
or
add
and
add
add
dec
add
add
ds
cmp
add
add
mov
cmp
add
add
cmp
add
add
jnp
add
add
and
add
add
adc
or
add
cmp
add
add
add
add
cmp
add
add
pop
(bad)
and
mov
popa
and
pop
inc
or
add
fwait
(bad)
(bad)
call
add
add
(bad)
(bad)
jmp
add
popa
add
add
add
add
(bad)
(bad)
call
add
add
cmp
add
add
mov
add
push
jne
add
add
jnp
add
add
cmp
add
cmp
add
add
jnp
add
add
adc
add
sbb
test
add
add
add
push
sub
add
push
and
add
add
jl
add
adc
pop
xchg
or
adc
add
sub
add
cmp
add
es
je
add
add
and
add
add
add
push
sub
add
push
and
add
add
inc
add
add
sub
jae
xor
cmp
add
or
sub
add
cmp
(bad)
jmp
and
add
add
sbb
add
adc
push
pop
and
adc
push
(bad)
(bad)
dec
inc
or
add
jae
add
cmp
(bad)
jmp
std
(bad)
call
add
add
add
add
add
add
(bad)
(bad)
call
(bad)
(bad)
jmp
add
retf
add
add
mov
jne
add
add
jnp
add
add
sbb
add
and
add
add
or
and
add
add
mov
push
(bad)
inc
jne
add
add
jnp
add
add
outs
add
add
sub
add
sub
add
sub
and
add
add
jne
add
and
loope
dec
cmp
(bad)
call
ss
pop
(bad)
(bad)
(bad)
jle
add
add
add
add
add
cmp
add
push
or
push
add
add
inc
add
add
or
xor
(bad)
call
cmp
(bad)
(bad)
inc
je
add
add
push
add
push
and
add
add
je
add
sub
add
sub
cmp
add
and
add
add
push
push
add
or
add
add
add
(bad)
(bad)
call
add
add
(bad)
(bad)
fdivrp
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
dec
cld
(bad)
jmp
(bad)
(bad)
(bad)
out
cld
(bad)
call
(bad)
call
(bad)
(bad)
(bad)
(bad)
dec
add
add
add
add
(bad)
(bad)
call
(bad)
inc
std
(bad)
jmp
(bad)
(bad)
jmp
add
add
(bad)
(bad)
jmp
add
or
xchg
(bad)
(bad)
call
or
sldt
add
mov
(bad)
call
or
adc
inc
add
push
cmp
(bad)
jmp
jle
add
add
and
add
cmp
(bad)
(bad)
cmp
(bad)
inc
jne
add
add
and
aas
sub
add
push
and
add
add
mov
or
add
and
add
add
cmp
(bad)
jmp
push
jne
add
add
cmp
add
sub
add
adc
or
add
add
adc
add
push
sub
es
and
add
add
pop
add
add
jne
add
add
stos
add
add
lea
add
sub
add
sub
and
add
add
inc
add
push
cmp
add
add
cmc
add
add
pop
jne
add
add
and
add
add
cmc
add
add
push
add
sub
add
add
add
add
cmp
add
add
je
add
add
and
sbb
add
add
add
push
and
add
add
sahf
add
add
push
add
sub
imul
add
add
fwait
add
add
adc
aaa
add
add
or
mov
add
add
add
add
and
jo
add
push
and
fadd
add
sub
add
sub
mov
add
and
add
add
pop
add
add
jle
add
or
add
add
or
add
cmp
add
add
add
jne
add
add
push
add
add
push
pop
inc
pop
pop
sub
add
sub
lds
add
and
add
add
adc
add
push
adc
or
add
sub
add
cmp
add
add
add
jne
add
add
nop
dec
sub
add
sub
add
add
aas
add
push
sub
add
cmp
or
add
cmp
add
add
add
je
add
sbb
add
and
add
add
mov
add
add
add
or
add
add
add
add
sub
add
push
cmp
add
jne
add
add
and
add
add
rol
add
push
add
sub
cmp
add
jge
add
add
add
outs
add
add
jnp
add
add
and
sub
add
push
sub
ja
add
cmp
add
add
and
add
add
inc
add
add
bound
add
pop
je
add
add
and
sbb
add
add
add
push
and
add
and
add
add
push
add
sub
sar
(bad)
(bad)
cmp
(bad)
(bad)
jmp
push
add
add
push
push
add
or
add
add
add
add
add
add
add
add
mov
(bad)
call
(bad)
(bad)
call
(bad)
inc
(bad)
(bad)
jmp
add
add
(bad)
call
(bad)
(bad)
jmp
add
add
inc
add
sub
(bad)
(bad)
dec
std
(bad)
jmp
(bad)
(bad)
dec
(bad)
(bad)
jmp
(bad)
(bad)
call
add
add
pop
add
add
xchg
(bad)
(bad)
inc
jle
add
or
add
add
add
add
sub
add
push
cmp
(bad)
jmp
add
add
or
add
add
sldt
add
inc
add
push
cmp
jmp
cmp
add
pop
je
add
add
add
add
add
add
cmp
(bad)
inc
pop
lea
or
add
sbb
pop
sub
or
add
and
add
add
jecxz
add
sub
add
sub
add
inc
add
push
cmp
(bad)
(bad)
jmp
cmp
(bad)
(bad)
dec
jne
add
sbb
add
or
push
add
add
out
(bad)
(bad)
inc
jle
add
or
add
add
push
add
add
(bad)
(bad)
call
add
pop
adc
adc
retf
jmp
adc
or
or
add
add
add
sub
es
jae
add
or
add
adc
or
or
add
add
add
sub
es
add
sub
add
sub
xor
add
add
add
add
sub
es
add
inc
add
push
sub
adc
or
or
add
add
add
sub
es
add
add
or
add
xor
add
add
add
add
sub
es
add
add
or
add
xor
add
add
add
add
sub
es
add
sub
add
sub
xor
add
add
add
add
add
add
push
add
or
add
or
add
or
add
outs
add
push
sub
adc
or
push
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
and
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
xor
add
sub
add
xor
add
add
add
add
add
add
push
add
or
add
or
add
aas
add
or
add
xor
das
add
add
add
adc
add
push
and
add
cmp
add
add
adc
cmp
add
adc
and
add
add
inc
pop
maxps
add
add
or
add
cmp
adc
cmp
or
cmp
add
xchg
and
cmp
(bad)
(bad)
inc
pop
pop
maxps
pop
add
push
and
add
add
adc
pop
add
push
or
sbb
add
cmp
add
cmp
or
xor
adc
and
retf
sub
add
add
or
pop
add
push
and
add
add
or
add
pop
cmp
add
add
pop
adc
pop
cmp
cmp
(bad)
(bad)
inc
pop
pop
maxps
pop
add
push
and
add
add
adc
adc
cmp
adc
add
dec
or
dec
add
add
add
(bad)
(bad)
dec
add
add
add
add
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
aas
add
add
add
add
(bad)
jmp
add
push
add
add
add
add
(bad)
call
add
add
add
popf
add
add
add
add
add
add
add
enter
stos
(bad)
(bad)
inc
add
add
sub
pop
add
add
and
add
add
ins
(bad)
(bad)
inc
pop
pop
maxps
pop
add
push
and
add
add
pop
(bad)
(bad)
inc
adc
push
or
push
add
add
cmp
(bad)
jmp
adc
and
add
xchg
pop
and
test
add
push
cmp
(bad)
(bad)
inc
jnp
add
add
push
pop
or
xchg
or
pop
add
add
adc
(bad)
inc
or
pop
add
push
and
(bad)
(bad)
jmp
or
add
cmp
(bad)
(bad)
jmp
pop
pusha
movs
(bad)
cmp
add
add
or
push
cmps
repz
and
enter
mov
add
adc
pop
and
add
pop
cmp
(bad)
inc
jnp
add
add
xchg
and
(bad)
(bad)
jmp
or
add
cmp
arpl
pop
sbb
or
push
add
add
mov
mov
iret
xchg
and
add
inc
test
pop
add
add
pop
inc
adc
add
adc
std
(bad)
call
add
add
add
(bad)
jmp
(bad)
call
add
add
add
add
add
add
add
add
(bad)
(bad)
call
add
add
add
add
std
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
jmp
adc
add
cmp
(bad)
(bad)
jmp
stc
pop
or
mov
and
inc
push
add
add
(bad)
push
(bad)
(bad)
(bad)
jp
(bad)
call
(bad)
(bad)
jmp
add
add
cmp
std
(bad)
call
adc
cmp
(bad)
call
push
cmp
(bad)
(bad)
inc
pop
pop
maxps
pop
add
push
and
add
add
xlat
std
(bad)
call
or
pop
add
add
add
pop
and
add
add
cmp
jnp
add
add
push
pop
or
xchg
or
adc
add
cmp
push
add
add
or
sbb
add
pop
cmp
pop
sbb
adc
add
add
add
add
cmp
(bad)
jmp
cmp
(bad)
(bad)
inc
pop
maxps
add
je
(bad)
(bad)
cmp
(bad)
jmp
and
add
add
push
std
(bad)
call
or
iret
add
add
and
inc
std
(bad)
(bad)
jle
add
add
or
add
add
cmp
std
(bad)
(bad)
cmp
sbb
add
add
add
add
adc
add
sub
paddw
(bad)
cmp
std
(bad)
(bad)
cmp
(bad)
inc
push
aas
sub
sbb
add
cmp
cld
(bad)
call
movlps
and
add
add
out
(bad)
inc
jnp
add
add
xchg
or
pop
add
add
sar
(bad)
inc
pop
maxps
add
xchg
add
push
cmp
pop
sbb
adc
or
adc
add
adc
add
push
sub
add
fld
add
add
fld
add
add
add
add
adc
add
add
or
add
add
add
xor
add
add
add
add
sub
es
add
add
add
add
xor
add
add
add
add
sub
es
sub
push
sub
add
sub
add
sub
xor
add
add
adc
add
push
and
add
add
cmp
pop
adc
pop
and
add
add
jb
add
push
pop
pop
cmp
adc
add
cmp
add
adc
and
and
add
iret
add
add
add
add
pop
xchg
pushf
pop
adc
cmp
cmp
(bad)
(bad)
call
sub
jnp
add
add
adc
pop
add
push
and
add
add
xchg
add
push
cmp
add
add
sbb
pop
cmp
add
add
and
add
dec
or
dec
add
add
add
add
mov
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
imul
add
add
add
add
add
(bad)
(bad)
dec
add
add
add
add
add
add
add
add
add
add
(bad)
call
add
ins
add
add
add
mov
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
mov
push
add
cmp
add
and
add
add
pop
(bad)
(bad)
call
adc
and
add
cmp
(bad)
(bad)
call
add
(bad)
jmp
sub
clc
(bad)
(bad)
inc
add
add
add
add
push
jge
add
add
push
add
add
cmp
(bad)
(bad)
jmp
push
sub
jnp
add
add
sub
add
or
sub
add
pop
cmp
(bad)
(bad)
jmp
add
and
add
add
scas
(bad)
(bad)
(bad)
cmp
add
add
add
add
out
add
add
adc
add
cmp
pop
add
add
sbb
add
daa
add
add
jg
(bad)
inc
jle
add
add
dec
add
add
sub
add
cmp
(bad)
call
adc
pop
cmp
add
add
and
repnz
(bad)
inc
pop
or
inc
add
add
pop
add
add
cmp
(bad)
jmp
push
push
cmp
add
add
or
add
cmp
or
sub
pop
cmp
add
add
adc
repnz
(bad)
call
sub
jnp
add
add
adc
pop
add
push
and
add
add
push
(bad)
(bad)
inc
sbb
add
add
add
add
cmp
std
(bad)
call
sbb
pop
cmp
sbb
repnz
(bad)
call
sub
jnp
add
add
sub
add
and
add
add
int
(bad)
inc
sbb
add
add
and
add
cmp
pop
pop
xchg
adc
cmp
add
pop
sbb
inc
sbb
add
add
sbb
add
cmp
pop
add
add
sub
add
add
add
adc
pop
add
push
and
add
add
or
add
cmp
(bad)
(bad)
cmp
jnp
add
add
jnp
add
add
jnp
add
add
bound
add
or
xor
add
cmp
(bad)
call
sub
jnp
add
add
add
push
push
inc
sub
jnp
add
add
jnp
add
add
arpl
add
cmp
add
and
add
add
sbb
(bad)
call
adc
pop
and
cmp
std
(bad)
jmp
adc
pop
ins
xchg
adc
and
add
add
cmp
cld
(bad)
jmp
cmp
jnp
add
add
test
(bad)
jmp
add
add
cmp
cld
(bad)
jmp
call
add
adc
and
add
xchg
sbb
add
add
pop
cmp
add
adc
pop
push
xchg
cmp
add
pop
adc
push
cmp
add
sbb
pop
add
add
cmp
add
sbb
push
add
add
or
cdq
add
add
add
adc
add
or
add
add
sub
add
adc
and
add
add
pop
and
pop
cld
(bad)
call
adc
and
add
add
dec
cld
(bad)
(bad)
cmp
add
add
pop
arpl
add
sbb
aaa
cld
(bad)
inc
and
add
pop
jge
add
add
sub
add
cmp
cld
(bad)
call
adc
cmp
add
add
pop
cmp
(bad)
(bad)
call
sub
add
add
add
pop
add
push
jge
add
add
pop
add
add
repz
(bad)
jmp
jnp
or
cmp
add
add
add
add
push
sub
mov
(bad)
jmp
and
add
add
int3
sti
(bad)
inc
push
cmp
std
(bad)
jmp
or
add
cmp
jg
add
add
add
add
adc
pop
add
push
or
xor
add
cmp
or
add
add
xchg
add
push
cmp
sbb
pop
and
add
pop
cmp
jmp
add
add
push
add
add
push
(bad)
inc
sbb
add
add
and
add
push
cmp
(bad)
jmp
adc
and
shl
mov
mov
adc
and
mov
add
adc
inc
and
add
test
cld
(bad)
jmp
(bad)
(bad)
inc
add
add
std
(bad)
(bad)
cmp
(bad)
call
cld
(bad)
(bad)
ds
(bad)
call
add
je
(bad)
(bad)
mov
add
add
add
add
(bad)
(bad)
(bad)
(bad)
sti
(bad)
dec
(bad)
(bad)
cmp
(bad)
dec
add
add
(bad)
call
std
(bad)
inc
cld
(bad)
(bad)
(bad)
cld
(bad)
call
cld
(bad)
jmp
(bad)
dec
add
pop
std
(bad)
dec
sti
(bad)
inc
add
add
add
add
cmp
(bad)
std
(bad)
(bad)
jle
add
add
or
sbb
add
cmp
dec
(bad)
(bad)
inc
jle
add
add
dec
add
add
add
add
outs
cli
(bad)
call
push
adc
cmp
(bad)
(bad)
call
cmp
(bad)
(bad)
inc
pop
jge
add
add
adc
add
sub
dec
cli
(bad)
jmp
or
pop
inc
or
add
inc
std
(bad)
call
(bad)
call
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
push
(bad)
(bad)
jnp
(bad)
inc
std
(bad)
call
add
add
cmp
cli
(bad)
call
add
add
add
les
add
retf
add
add
add
add
and
add
cmp
stc
(bad)
(bad)
cmp
jnp
add
add
push
add
push
and
xchg
add
push
cmp
stc
(bad)
jmp
jle
add
add
or
pop
add
add
cmp
adc
and
adc
and
add
add
cmps
stc
(bad)
(bad)
cmp
(bad)
inc
jae
add
push
jge
add
add
das
add
add
mov
(bad)
jmp
dec
or
and
push
rol
sbb
inc
push
add
add
(bad)
inc
(bad)
(bad)
call
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
jmp
and
xchg
add
push
cmp
(bad)
jmp
sbb
pop
and
add
sub
cmp
pop
sbb
pop
cmp
std
(bad)
call
and
repnz
(bad)
call
or
rol
add
call
(bad)
(bad)
(bad)
call
adc
and
add
add
or
(bad)
(bad)
cmp
std
(bad)
inc
sub
add
sub
sub
sub
add
adc
or
cmp
add
add
add
sub
es
jle
add
add
pop
maxps
imul
arpl
maxps
imul
arpl
maxps
imul
or
xchg
pusha
push
add
add
add
add
sub
es
add
pop
add
add
xor
add
sub
add
sub
and
add
and
add
add
adc
add
push
bound
sub
cmp
add
jle
add
add
xor
add
xchg
pushf
sub
add
xor
test
add
add
adc
add
push
and
add
add
sbb
add
cmp
add
add
and
add
(bad)
jg
add
push
add
add
or
add
cmp
add
add
add
push
pop
and
cmp
add
add
add
das
add
add
add
pop
add
add
ja
add
jp
jnp
add
add
and
add
or
pop
jge
add
add
add
pushf
push
sub
push
add
and
add
add
cmp
and
loopne
and
add
add
mov
and
sbb
and
mov
add
add
add
or
pop
jge
add
add
add
add
cmp
add
pop
inc
lock
sbb
add
add
add
fcom
ss
cmp
add
or
add
add
(bad)
jmp
(bad)
(bad)
mov
(bad)
(bad)
inc
(bad)
(bad)
cmp
add
add
dec
push
add
or
add
add
add
(bad)
(bad)
dec
add
or
add
xor
(bad)
dec
add
add
add
add
add
add
(bad)
call
or
add
cmp
(bad)
(bad)
jmp
or
add
test
je
and
inc
or
add
retf
(bad)
(bad)
push
add
add
(bad)
(bad)
dec
(bad)
(bad)
inc
(bad)
jmp
(bad)
(bad)
jmp
add
add
add
cmp
(bad)
jle
add
add
add
add
add
cmp
(bad)
(bad)
cmp
add
jmp
and
jmp
popf
(bad)
(bad)
inc
and
add
inc
mov
add
add
cmp
call
or
jmp
and
add
add
xor
(bad)
jmp
add
sbb
push
add
adc
add
add
sub
es
and
add
add
ins
add
add
adc
add
add
pop
add
add
sbb
ret
add
add
cmp
add
pop
or
repnz
(bad)
jmp
inc
add
add
xor
cdq
add
push
adc
jnp
add
add
cmp
xor
add
sub
add
sub
sgdtd
add
and
call
or
add
or
add
dec
sub
dec
add
add
add
or
add
add
xor
add
or
add
inc
push
add
fisttp
add
adc
add
popf
or
add
(bad)
call
or
add
or
add
add
add
add
dec
add
add
or
add
add
xchg
or
add
or
add
add
add
add
mov
or
add
or
add
mov
add
add
add
add
or
add
or
add
or
add
push
add
ror
add
jno
add
dec
or
add
or
add
add
pop
add
add
or
add
or
add
or
add
or
add
or
add
(bad)
(bad)
(bad)
jmp
or
add
or
add
cmp
(bad)
(bad)
jmp
lods
mov
add
add
pop
and
add
add
push
cmp
add
add
sbb
xlat
add
add
add
add
(bad)
dec
jne
add
sbb
pop
pop
pop
call
add
into
(bad)
(bad)
jmp
pop
mov
dec
sbb
and
pop
inc
adc
add
mov
or
add
add
test
add
add
cdq
pop
add
loop
add
jns
add
add
add
jne
(bad)
dec
or
add
or
add
add
mov
or
add
or
(bad)
jmp
add
add
sub
popa
(bad)
(bad)
jmp
cmp
add
adc
je
add
add
jp
test
add
and
add
add
adc
add
push
inc
inc
adc
add
xor
(bad)
(bad)
cmp
or
add
add
add
and
add
add
cld
add
add
adc
add
pop
pop
inc
mov
push
add
add
add
(bad)
call
adc
and
add
cmp
std
(bad)
(bad)
cmp
pop
add
adc
sbb
or
and
add
cmp
std
(bad)
call
or
push
and
aam
(bad)
call
or
sbb
pop
push
dec
and
and
inc
push
add
add
add
add
add
add
(bad)
(bad)
dec
add
add
cdq
add
add
sbb
add
add
add
xchg
add
outs
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
lock
call
(bad)
call
daa
and
dec
ret
fimul
imul
jle
add
add
add
add
dec
add
or
or
add
and
cmp
add
add
arpl
mov
dec
(bad)
(bad)
call
sbb
pop
xchg
pop
or
sbb
lods
sub
cmp
(bad)
call
sbb
pop
add
add
in
(bad)
(bad)
jle
add
add
add
add
dec
add
or
adc
jno
add
and
lds
add
sub
je
add
add
mov
mov
adc
add
adc
sbb
sbb
adc
(bad)
call
or
add
add
ja
add
adc
pop
push
clc
(bad)
(bad)
call
or
add
add
cld
add
add
ret
add
adc
adc
or
add
add
adc
into
(bad)
(bad)
call
or
add
adc
sbb
adc
pop
add
add
aaa
add
add
push
add
sub
adc
and
and
sbb
cwde
(bad)
(bad)
call
add
add
adc
cmp
pop
pop
xor
in
(bad)
(bad)
call
or
sbb
pop
add
push
adc
add
add
xchg
pop
adc
cmp
(bad)
call
push
adc
cmp
add
add
adc
scas
jmp
dec
sbb
and
inc
add
add
(bad)
(bad)
call
add
xor
add
add
push
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
daa
and
mov
add
pop
into
mov
popa
cmp
or
sbb
mov
mov
add
push
adc
and
mov
(bad)
(bad)
fisttp
add
es
jmp
dec
and
and
inc
add
add
(bad)
(bad)
call
add
add
push
add
add
adc
adc
and
xchg
sti
pop
and
mov
or
leave
(bad)
(bad)
(bad)
fisttp
add
add
pop
adc
fld
add
add
adc
and
jae
mov
dec
sbb
and
inc
add
add
(bad)
(bad)
inc
add
add
add
add
push
inc
add
add
add
add
add
add
add
add
add
add
add
daa
and
jle
pop
and
jb
popa
cmp
push
cmp
add
add
adc
and
jnp
and
and
pop
inc
or
add
dec
add
add
add
add
add
add
(bad)
(bad)
(bad)
cmp
add
adc
add
in
add
add
add
add
cmp
add
add
fwait
stos
ss
call
adc
add
add
jl
add
cmp
add
add
cmp
add
add
and
push
dec
cmp
daa
and
fucomip
pop
and
push
push
fisub
jge
(bad)
call
pop
and
add
add
add
jp
add
adc
jne
add
add
jge
add
adc
and
cmp
cmp
(bad)
(bad)
call
and
add
add
(bad)
push
add
add
add
add
add
add
add
add
add
add
add
into
add
add
add
add
cmp
add
cmp
(bad)
(bad)
call
adc
add
add
jg
add
and
add
add
cmp
add
and
out
sub
add
lods
xchg
sbb
es
(bad)
(bad)
call
and
sbb
sub
js
add
adc
sub
add
adc
and
add
add
cwde
add
push
cmp
add
add
or
add
sbb
and
push
add
add
cld
add
add
adc
and
add
add
out
add
add
adc
add
adc
sub
push
and
add
add
(bad)
add
add
pop
pop
or
cmp
(bad)
jmp
and
mov
adc
add
add
or
sbb
adc
sbb
add
sub
cwde
add
push
cmp
(bad)
(bad)
jmp
and
add
add
xchg
add
adc
and
xor
pop
and
adc
(bad)
call
pcmpeqw
jp
add
and
add
add
cmp
add
and
mov
dec
cmp
std
(bad)
call
adc
and
jnp
fs
std
(bad)
call
adc
and
add
pop
cmp
adc
jne
add
add
add
add
add
and
push
add
push
sub
add
adc
cmp
(bad)
jmp
add
add
dec
sub
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
jmp
push
(bad)
(bad)
inc
(bad)
(bad)
mov
(bad)
(bad)
jmp
add
add
add
add
cmp
pcmpeqw
sbb
add
push
and
add
add
xchg
(bad)
(bad)
(bad)
cmp
std
(bad)
call
adc
add
add
add
push
adc
fld
add
add
fld
add
add
adc
and
push
fwait
dec
and
and
inc
add
(bad)
(bad)
inc
add
add
add
add
jne
add
(bad)
pop
add
adc
and
and
cmp
xor
add
add
push
jne
add
add
add
or
push
jne
add
add
adc
je
out
pop
cmp
inc
push
add
add
add
add
add
add
add
add
daa
and
adc
pop
pop
and
jmp
(bad)
(bad)
add
add
adc
and
add
add
add
adc
add
add
adc
and
add
cmp
idiv
jmp
dec
inc
dec
bound
add
movs
push
jo
cmp
clc
(bad)
call
daa
and
xor
cmp
idiv
call
daa
and
jae
in
and
nop
inc
ret
call
add
and
add
add
scas
add
add
pop
add
sub
aaa
add
push
and
add
cmp
adc
and
add
add
xor
call
daa
and
out
and
cmp
je
add
sbb
pop
call
and
jecxz
add
sub
add
sub
push
(bad)
jmp
or
add
cmp
(bad)
call
daa
and
sub
mov
(bad)
popa
cmp
(bad)
call
adc
add
and
(bad)
call
or
add
add
adc
adc
and
add
cmp
idiv
call
daa
and
inc
dec
sub
scas
adc
jmp
adc
inc
sbb
add
push
add
sbb
add
(bad)
(bad)
(bad)
cmp
add
stos
add
add
add
pop
idiv
call
add
add
add
sub
(bad)
jmp
(bad)
(bad)
inc
add
add
add
add
cmc
(bad)
dec
add
cdq
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
jbe
(bad)
call
sbb
pop
add
xchg
adc
pop
bound
sbb
add
pop
cmp
(bad)
jmp
sbb
push
cmp
(bad)
call
or
call
add
add
pop
and
add
add
stos
add
add
adc
add
adc
and
daa
cmc
(bad)
call
es
push
add
add
add
nop
add
add
add
add
add
add
cwde
add
push
cmp
hlt
(bad)
(bad)
cmp
hlt
(bad)
(bad)
cmp
(bad)
(bad)
call
or
je
add
sbb
test
add
xor
add
cmp
hlt
(bad)
jmp
or
dec
and
and
inc
add
add
inc
add
add
add
add
(bad)
(bad)
jmp
xor
test
or
push
and
add
add
fwait
hlt
(bad)
call
adc
push
and
add
cmp
pop
pop
es
adc
and
add
add
jl
(bad)
call
daa
and
fcom
mov
mov
inc
add
add
xor
add
sub
jne
add
add
sbb
add
and
add
add
adc
add
and
add
and
add
sub
and
add
add
cwde
add
push
cmp
hlt
(bad)
(bad)
cmp
hlt
(bad)
(bad)
cmp
(bad)
(bad)
dec
je
add
sbb
or
add
and
add
add
pushf
add
add
push
add
sub
and
add
and
add
add
cmp
repz
jmp
adc
and
mov
repz
and
cmp
cmc
(bad)
call
adc
and
add
add
cmp
repz
jmp
cmp
std
(bad)
(bad)
jle
add
add
adc
jae
add
and
add
sbb
add
and
add
add
movs
repz
call
add
add
adc
pop
pop
pop
adc
cmp
sbb
add
adc
and
add
add
test
(bad)
jmp
rol
jbe
mov
(bad)
(bad)
jle
add
or
add
sbb
add
cmp
(bad)
call
pop
and
or
adc
and
add
add
push
repz
call
adc
push
and
add
add
inc
repz
call
or
push
cmp
(bad)
call
or
repnz
(bad)
call
add
add
add
mov
add
add
or
add
cmp
repnz
jmp
xor
add
cmp
repz
call
pop
pop
pop
xchg
adc
and
add
add
cmp
repnz
jmp
cmp
repz
call
adc
push
and
add
add
jmp
pop
pop
je
and
push
cmp
cld
(bad)
call
pop
pop
pop
xchg
sbb
in
(bad)
(bad)
dec
je
add
sbb
or
pop
call
add
xchg
add
push
cmp
cmp
or
add
sbb
add
add
add
add
mov
(bad)
(bad)
cmp
sbb
pop
and
add
sub
je
(bad)
(bad)
cmp
(bad)
(bad)
jle
add
add
pop
push
sub
fdivr
(bad)
jmp
and
add
add
push
repnz
call
or
push
and
add
add
cmp
(bad)
jmp
and
mov
repz
call
and
and
fwait
add
push
pop
lea
adc
adc
add
sbb
pop
sub
adc
je
add
sbb
mov
cdq
add
add
sldt
sub
add
cwde
add
push
cmp
icebp
(bad)
jmp
pop
or
push
cmp
sti
(bad)
call
sbb
dec
xchg
adc
pop
dec
xchg
pop
cmp
(bad)
(bad)
call
add
add
jmp
add
and
or
add
push
ds
jmp
adc
add
cmp
out
or
cmp
repnz
call
adc
push
and
add
add
call
xchg
and
add
add
push
and
add
add
test
(bad)
call
pop
and
add
add
push
cmp
(bad)
call
cmp
(bad)
(bad)
call
add
add
loopne
add
and
or
add
cmp
(bad)
(bad)
jmp
add
cmp
(bad)
jmp
cmp
(bad)
call
add
add
or
pop
and
add
add
test
add
sub
add
push
add
add
cmp
icebp
(bad)
jmp
adc
and
mov
xchg
hlt
sti
adc
(bad)
call
add
sub
add
push
or
sbb
add
cmp
lock
(bad)
cmp
cli
(bad)
call
adc
and
add
add
loopne
(bad)
(bad)
cmp
cli
(bad)
call
or
add
pop
je
scas
add
add
loopne
add
sub
add
sub
inc
inc
adc
and
add
add
xchg
add
push
cmp
iret
jb
jns
fdiv
(bad)
call
daa
and
sub
and
cmp
icebp
(bad)
(bad)
jle
add
add
sbb
sub
jge
(bad)
(bad)
cmp
add
adc
and
push
fisttp
cmp
adc
add
sub
inc
add
add
add
mov
add
add
add
cmp
add
add
add
mov
add
add
add
cmp
add
add
add
mov
add
add
add
push
add
add
add
add
push
add
push
or
add
add
add
add
add
xor
add
add
add
add
sub
es
add
add
add
add
xor
add
add
adc
add
push
sub
cwde
add
push
cmp
add
and
add
add
sbb
add
sub
cmp
add
and
add
add
push
or
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
add
add
cmp
(bad)
(bad)
(bad)
jle
add
add
add
mov
and
add
add
xchg
add
push
cmp
(bad)
(bad)
jmp
sbb
or
pop
fld
pop
sbb
inc
push
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
jmp
cwde
add
push
sub
pusha
add
add
and
add
add
cmp
add
add
cmp
add
add
inc
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
or
dec
add
add
add
add
add
add
add
add
cmp
add
add
and
add
add
xlat
(bad)
(bad)
jmp
movs
jge
js
push
(bad)
(bad)
call
add
cmp
sub
iret
add
add
add
add
iret
add
add
add
aam
add
xchg
pop
and
pushf
pop
or
dec
cmp
(bad)
(bad)
inc
pop
add
add
add
add
push
cmp
and
inc
cmp
push
add
add
push
dec
xchg
jp
es
(bad)
(bad)
call
pop
and
jno
mov
and
enter
(bad)
(bad)
call
cmp
jne
add
add
add
sbb
add
and
add
add
sbb
add
cmp
add
add
je
add
add
add
imul
sub
add
sub
fnsave
adc
and
dec
push
pop
fld
pop
sbb
inc
push
add
add
(bad)
(bad)
call
add
add
add
add
add
add
imul
add
adc
and
(bad)
(bad)
(bad)
call
pop
and
dec
movs
inc
pop
and
jmp
popa
cmp
push
inc
push
add
add
add
add
add
add
add
add
add
add
add
add
out
ficom
das
cmp
jne
add
add
or
add
and
pushf
push
jnp
cmp
add
add
jno
dec
jl
cmp
(bad)
call
cmp
jne
add
add
add
push
fadd
je
add
add
add
inc
sbb
add
add
add
add
arpl
add
fld
add
mov
add
add
add
adc
or
add
add
sub
es
add
add
adc
and
add
je
add
sub
add
sub
sub
add
adc
or
push
add
add
add
adc
add
push
and
cwde
add
push
cmp
add
add
sbb
and
add
cmp
add
add
or
lock
cmp
or
adc
add
cmp
or
add
add
cmp
add
add
mov
pop
and
add
add
and
add
sub
add
and
add
add
cmp
add
add
or
push
mov
mov
cmp
add
or
xor
call
repz
mov
add
sbb
add
and
add
add
test
pop
je
imul
pop
or
adc
add
cmp
add
push
stc
add
push
jae
add
or
lahf
add
push
and
add
add
cwde
add
push
cmp
add
es
rcr
add
inc
or
add
add
add
sbb
add
jns
add
inc
(bad)
(bad)
inc
add
add
add
add
sldt
add
aaa
add
add
and
xchg
lahf
cs
and
rol
nop
popa
cmp
sbb
pop
sbb
sub
sahf
add
push
cmp
(bad)
jmp
add
push
add
dec
add
add
add
(bad)
(bad)
push
(bad)
(bad)
inc
add
cmps
(bad)
(bad)
call
add
add
(bad)
(bad)
jmp
(bad)
(bad)
dec
(bad)
(bad)
push
(bad)
(bad)
jmp
add
add
(bad)
(bad)
jmp
add
add
add
and
add
add
xchg
add
push
cmp
imul
add
sbb
pop
sbb
sub
movs
add
add
fadd
add
sub
push
add
add
cmp
(bad)
jmp
and
and
fst
popa
and
inc
push
add
add
add
add
add
daa
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
jmp
add
add
(bad)
(bad)
push
add
add
sub
fs
(bad)
jmp
and
add
add
cmp
(bad)
jmp
and
xchg
(bad)
(bad)
inc
and
add
inc
and
add
jae
add
or
adc
add
and
add
add
push
add
sub
or
add
sub
sar
(bad)
jmp
and
pop
(bad)
(bad)
inc
and
add
add
pop
add
sub
or
scas
(bad)
(bad)
dec
and
mov
pop
and
sahf
(bad)
bound
xor
(bad)
inc
push
sub
or
add
cmp
and
pop
xor
and
inc
push
xchg
popa
cmp
(bad)
(bad)
inc
and
add
and
dec
add
or
test
add
add
add
sub
add
add
cmp
(bad)
dec
and
lods
push
xchg
pop
and
cmp
(bad)
(bad)
jmp
add
adc
or
xchg
add
add
add
adc
add
push
and
add
cmp
add
add
mov
jne
add
sbb
xchg
push
jne
add
sbb
xchg
cmp
add
add
adc
add
and
add
add
cmp
add
add
adc
and
sub
pop
and
mov
mul
sbb
and
add
add
add
add
sub
add
sub
rol
add
and
add
sub
and
add
add
pop
add
adc
and
mov
cld
outs
aaa
stc
popa
cmp
add
add
add
add
loope
mov
cmp
add
add
add
add
add
or
add
cmp
add
call
scas
add
add
adc
add
add
pop
cmp
add
es
add
add
push
and
add
add
sub
add
cmp
add
add
and
add
add
rol
add
sub
add
sub
dec
pop
sub
add
sub
sub
xchg
add
push
cmp
(bad)
jmp
and
add
add
repnz
add
(bad)
int
add
dec
add
add
pop
and
add
leave
pop
and
cmp
add
add
or
add
add
cmp
add
add
sbb
add
ins
add
add
or
repnz
(bad)
call
sub
pop
pop
or
or
cmps
add
add
add
add
add
add
cwde
add
push
cmp
and
dec
jg
cmp
add
add
je
add
sbb
add
je
add
sbb
add
add
add
add
add
add
pop
and
scas
es
pop
and
in
xchg
mov
mov
add
adc
std
add
add
add
add
add
add
(bad)
jmp
add
pop
(bad)
(bad)
call
call
(bad)
dec
add
add
add
add
(bad)
(bad)
(bad)
in
(bad)
(bad)
(bad)
cmp
(bad)
jmp
or
add
dec
or
dec
add
add
add
(bad)
call
(bad)
dec
add
add
(bad)
(bad)
mov
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
push
(bad)
(bad)
mov
(bad)
(bad)
inc
add
add
std
(bad)
dec
add
add
(bad)
(bad)
jmp
add
add
add
add
add
add
cmp
shr
les
and
and
pop
inc
or
add
adc
(bad)
call
(bad)
(bad)
push
(bad)
(bad)
mov
add
add
std
(bad)
jmp
add
add
(bad)
(bad)
push
(bad)
(bad)
inc
std
(bad)
jmp
adc
add
cmp
(bad)
jmp
mov
cmp
add
add
daa
lock
inc
and
(bad)
call
pop
and
and
cdq
pop
popa
cmp
add
add
mov
sub
jne
add
sbb
dec
add
add
adc
add
cmp
(bad)
(bad)
(bad)
cmp
pop
jne
add
sbb
add
and
add
add
jecxz
(bad)
call
push
and
and
adc
adc
add
cmp
(bad)
(bad)
call
adc
jo
(bad)
call
add
add
jmp
or
add
add
cmp
or
add
push
add
add
cmp
adc
add
add
xor
(bad)
call
push
and
add
xchg
pop
outs
pop
cmp
(bad)
(bad)
call
sub
add
adc
or
add
add
add
adc
add
push
and
add
add
lahf
add
add
or
add
push
pop
pop
or
pop
add
add
mov
add
add
pop
adc
and
add
add
jge
add
and
add
add
pop
popa
and
pop
inc
or
add
into
add
add
add
cmps
add
add
(bad)
(bad)
call
add
inc
add
add
add
mov
add
ins
add
add
add
add
or
add
sub
xor
add
es
or
add
hlt
(bad)
(bad)
inc
add
push
add
add
ds
add
add
cmp
add
and
cmp
add
add
and
mov
push
add
add
dec
add
cmp
(bad)
call
or
add
cwde
add
push
cmp
add
add
rol
add
pop
or
add
add
js
add
xchg
push
pop
cmp
(bad)
(bad)
inc
add
or
add
add
adc
add
pop
cmp
and
leave
push
sbb
and
(bad)
(bad)
jle
add
add
add
add
xchg
add
add
pop
adc
and
add
add
cmp
add
cmp
add
into
add
add
xchg
pop
or
add
cmp
add
es
or
add
cmp
and
add
add
add
add
adc
(bad)
call
add
add
add
inc
add
add
add
add
add
add
push
or
cmp
add
add
push
pop
add
or
add
add
add
(bad)
(bad)
call
add
or
(bad)
dec
(bad)
(bad)
fsin
(bad)
call
(bad)
(bad)
(bad)
jl
(bad)
(bad)
jl
add
xor
(bad)
(bad)
jmp
(bad)
push
add
add
add
call
call
(bad)
jmp
add
and
add
cmp
push
and
fwait
mov
pop
and
xchg
xor
(bad)
dec
inc
or
add
les
add
ss
(bad)
jmp
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
(bad)
mov
(bad)
(bad)
jmp
add
add
add
add
or
add
cmp
(bad)
call
push
and
push
pop
and
(bad)
jl
popa
cmp
std
(bad)
call
or
add
add
cmp
(bad)
(bad)
inc
add
add
or
pop
(bad)
(bad)
(bad)
jle
add
add
add
add
add
pop
cmp
adc
and
and
bound
std
(bad)
call
push
and
cmp
or
popa
cmp
(bad)
call
add
mov
add
xchg
or
push
cmp
(bad)
inc
add
or
sar
(bad)
jmp
push
add
add
cmp
adc
or
add
pop
or
call
add
add
add
out
(bad)
inc
sub
push
cmp
(bad)
jmp
or
add
cmp
(bad)
call
or
call
hlt
(bad)
(bad)
inc
sub
add
xor
add
add
adc
add
push
add
dec
add
push
add
dec
add
push
pop
adc
sub
add
sbb
or
add
add
adc
add
push
and
add
add
aaa
add
add
aas
or
mov
or
pop
inc
add
add
(bad)
(bad)
dec
add
add
add
cmp
add
add
add
dec
or
dec
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
add
add
add
and
add
add
cmp
(bad)
(bad)
jmp
add
test
add
and
add
add
cwde
add
push
cmp
or
add
or
add
add
cmp
adc
or
add
add
add
add
add
add
add
add
add
add
add
add
or
add
and
add
add
jno
(bad)
call
or
cs
imul
pop
push
popa
cmp
(bad)
inc
push
and
add
add
push
(bad)
(bad)
call
adc
test
pushf
pop
mov
or
or
or
add
(bad)
(bad)
(bad)
jmp
add
mov
add
pop
add
add
add
fild
add
sbb
add
scas
add
add
add
sub
cwde
add
push
cmp
add
and
add
add
test
add
cmp
push
add
and
add
add
mov
and
add
push
pop
and
sahf
add
add
and
add
and
add
add
and
add
cmp
add
sbb
add
push
add
add
xor
add
and
(bad)
(bad)
inc
and
je
add
and
add
add
add
sub
inc
add
add
add
add
dec
or
dec
add
add
add
(bad)
dec
add
add
(bad)
call
add
add
add
add
(bad)
(bad)
call
add
add
add
add
cmp
(bad)
(bad)
jmp
mov
je
cmp
(bad)
(bad)
inc
add
and
add
add
jo
add
sub
add
sub
pop
pop
pop
pop
push
sub
add
sub
or
add
pop
cmp
and
add
(bad)
call
or
inc
rcl
pop
and
repz
popa
cmp
adc
or
add
cmp
(bad)
jmp
add
cmp
mov
(bad)
call
add
pop
add
add
(bad)
(bad)
call
(bad)
(bad)
jmp
add
add
add
add
(bad)
(bad)
call
(bad)
(bad)
(bad)
jns
(bad)
(bad)
cmp
(bad)
(bad)
jmp
and
add
add
sub
(bad)
call
or
jp
pop
ret
dec
ror
mov
(bad)
inc
add
pop
add
push
or
add
add
cmp
(bad)
(bad)
call
or
loop
pop
lock
and
cmp
(bad)
(bad)
fnsave
adc
and
in
rcl
and
adc
sbb
inc
push
add
add
(bad)
(bad)
push
add
add
add
add
add
add
add
outs
add
add
adc
and
(bad)
(bad)
(bad)
inc
jne
add
add
or
add
and
cmp
cmp
add
add
dec
mov
cmp
inc
pop
add
add
add
add
add
add
add
add
add
add
xor
pop
adc
ja
(bad)
call
or
mov
push
sub
aam
fisub
cmp
call
cmp
add
add
add
push
fcom
adc
push
sub
and
(bad)
jmp
and
add
cmp
cmp
push
cld
(bad)
inc
jne
add
sbb
add
add
add
add
add
hlt
add
add
add
add
add
add
add
add
xor
pop
add
add
add
adc
add
push
and
add
cmp
and
cmp
mov
and
and
pop
fdivr
cmp
and
add
clc
pop
jge
add
add
add
add
cmp
add
and
push
cmp
or
or
add
push
cmp
add
es
or
add
add
cmp
add
and
adc
inc
cmp
add
and
add
jnp
add
add
pop
pop
pop
pop
fs
add
add
cmp
jmp
add
add
dec
add
dec
add
add
add
(bad)
dec
add
push
add
add
add
xchg
(bad)
(bad)
jmp
add
add
(bad)
inc
pop
add
add
cmp
(bad)
(bad)
jmp
and
add
xor
adc
or
pop
inc
pop
add
add
(bad)
(bad)
dec
(bad)
call
add
sbb
add
sbb
(bad)
push
(bad)
call
(bad)
(bad)
call
sub
das
add
add
and
add
add
test
(bad)
(bad)
cmp
add
pop
inc
add
(bad)
(bad)
push
(bad)
(bad)
(bad)
cmp
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
(bad)
cmp
and
push
(bad)
(bad)
dec
and
sub
pop
and
das
xchg
popa
cmp
(bad)
jmp
sbb
push
add
add
adc
add
push
sub
xchg
add
push
cmp
and
add
add
adc
add
sbb
jmp
jo
ins
xchg
popa
and
inc
pop
add
add
add
jmp
add
add
cmp
(bad)
(bad)
call
sub
pushf
add
add
and
add
add
cwde
add
push
cmp
add
cmp
add
and
xchg
aad
stos
(bad)
(bad)
call
pop
and
aam
inc
pop
and
cmp
je
add
add
push
add
add
and
add
add
daa
add
sub
push
add
add
cmp
add
add
and
rol
cmp
(bad)
call
or
add
add
add
add
dec
or
dec
add
add
add
add
sar
inc
add
add
add
jle
(bad)
call
add
add
add
cmp
add
add
and
iret
(bad)
(bad)
jmp
jb
out
jecxz
sbb
(bad)
inc
je
add
add
inc
add
add
dec
add
add
sub
add
and
add
sub
mov
pushf
(bad)
(bad)
(bad)
cmp
add
or
add
add
(bad)
(bad)
push
(bad)
push
(bad)
(bad)
jmp
add
add
sub
push
(bad)
(bad)
cmp
(bad)
jmp
loopne
sub
(bad)
fstp
adc
xor
add
xchg
popa
and
inc
add
(bad)
(bad)
(bad)
aas
add
add
add
add
add
add
pop
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
push
lahf
push
cmp
adc
xor
add
inc
je
add
add
or
add
and
sbb
add
and
cmp
(bad)
call
cmp
(bad)
(bad)
inc
jne
add
add
add
push
fcomp
adc
cmp
add
and
add
add
push
or
dec
add
add
add
add
add
add
das
add
add
std
(bad)
dec
add
add
add
and
add
cmp
(bad)
(bad)
call
push
inc
add
add
add
add
add
add
add
add
add
add
add
add
mov
(bad)
inc
and
add
and
add
add
sub
add
pop
sub
cmp
and
add
add
mov
(bad)
jmp
add
add
add
add
add
push
add
add
add
jl
add
lahf
add
add
add
add
xor
add
add
add
add
adc
add
push
and
add
add
movs
add
add
add
dec
add
add
adc
add
cmp
add
adc
add
cmp
dec
add
add
jnp
add
add
jnp
add
add
stos
add
add
add
arpl
add
and
ret
and
mov
retf
popa
and
inc
pop
add
add
add
jnp
add
add
add
iret
(bad)
(bad)
call
add
pop
add
add
sub
pop
add
add
and
add
add
xchg
add
push
cmp
add
add
push
or
pop
add
add
and
cmp
(bad)
(bad)
inc
cmp
and
add
add
cwde
add
push
cmp
add
add
call
add
jp
and
fnstenv
popa
cmp
(bad)
(bad)
jle
add
add
add
jbe
add
and
add
add
cmp
push
add
cmps
(bad)
(bad)
jmp
or
add
cmp
push
jge
add
add
adc
add
cmp
or
fild
add
adc
adc
inc
and
add
add
pop
pop
adc
xchg
and
add
add
jnp
add
add
pop
pop
bound
push
add
add
or
add
sub
push
add
add
adc
dec
pop
and
ins
es
cmp
(bad)
(bad)
dec
pop
pop
xchg
or
das
popf
jns
cmp
(bad)
(bad)
call
cmp
(bad)
(bad)
jmp
ja
add
jp
add
and
add
add
pop
add
add
pop
add
add
add
add
adc
add
cmp
add
add
inc
add
add
and
add
pop
jge
add
add
push
add
add
in
add
and
test
(bad)
cmp
call
or
or
add
cmp
add
add
add
xor
add
and
sbb
and
(bad)
dec
inc
or
add
add
(bad)
(bad)
(bad)
std
(bad)
call
(bad)
jmp
(bad)
jmp
add
add
add
add
(bad)
(bad)
jp
(bad)
push
(bad)
(bad)
inc
add
cmp
add
and
add
add
cmp
add
adc
pop
add
add
cmp
add
gs
sbb
out
(bad)
(bad)
jmp
xchg
add
jp
pop
pop
cmp
add
add
cmp
add
or
inc
xchg
pop
jl
or
or
cmp
add
add
push
or
push
(bad)
call
cmp
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
cmp
add
add
push
push
add
or
add
add
add
inc
jmp
(bad)
call
(bad)
(bad)
(bad)
fscale
(bad)
dec
add
xchg
std
(bad)
inc
(bad)
(bad)
(bad)
mov
(bad)
(bad)
jmp
(bad)
jmp
std
(bad)
push
(bad)
(bad)
jmp
(bad)
dec
std
(bad)
call
add
and
add
add
cmp
sub
and
add
add
mov
(bad)
jmp
adc
or
and
add
add
add
sub
es
add
add
pop
pop
pop
fs
add
add
and
add
pop
jge
add
add
adc
or
add
add
sub
es
jle
add
add
das
add
add
add
add
push
or
jne
add
add
adc
sub
push
jle
add
add
sub
add
jle
add
add
inc
xchg
pushf
sub
adc
(bad)
mov
add
xor
add
push
sub
xchg
add
push
cmp
add
and
add
add
cwde
add
push
cmp
add
add
dec
xlat
mov
add
inc
add
add
add
add
add
add
add
add
add
add
and
add
add
imul
add
add
or
add
pop
add
add
add
loop
test
and
test
add
add
add
add
add
add
or
add
add
cmp
add
add
add
mov
repz
and
cmp
add
or
add
add
mov
add
and
add
add
push
add
add
add
add
add
add
(bad)
(bad)
jmp
(bad)
jmp
add
jnp
(bad)
dec
add
pushf
add
add
or
add
sub
(bad)
(bad)
(bad)
jmp
and
mov
(bad)
and
xchg
jp
popa
and
inc
or
add
retf
(bad)
(bad)
jmp
(bad)
(bad)
jmp
add
jb
(bad)
inc
(bad)
(bad)
dec
(bad)
push
add
add
and
add
cmp
shl
inc
jnp
add
add
push
jne
add
sbb
add
add
add
sub
inc
add
add
sub
add
and
add
add
dec
(bad)
(bad)
(bad)
jle
add
add
cmp
(bad)
jmp
and
add
add
aaa
(bad)
(bad)
jmp
sti
jbe
sar
(bad)
(bad)
call
add
addr16
ins
int
and
push
fldenv
pop
(bad)
(bad)
inc
je
add
sbb
add
push
sub
add
sbb
or
cmp
add
add
add
sub
es
and
add
add
fadd
add
sub
inc
dec
add
push
jae
add
or
mov
add
and
add
add
sub
add
fld
add
add
fld
add
add
add
add
add
add
add
das
xor
push
push
add
add
xor
add
add
add
add
adc
add
push
sub
add
pop
jne
add
add
push
add
push
pop
jne
add
add
lea
add
and
add
add
sub
add
or
scas
add
add
or
leave
and
and
inc
push
add
add
add
bound
add
sar
(bad)
inc
add
add
add
cmp
add
or
add
add
add
add
pop
add
add
add
add
add
mov
(bad)
cmp
add
stc
sub
ins
call
(bad)
inc
je
add
add
or
add
and
fsub
add
push
daa
push
in
and
(bad)
call
or
jmp
call
cmp
(bad)
(bad)
inc
je
add
add
add
push
fadd
je
add
sbb
add
add
add
or
sub
add
adc
or
sbb
add
add
add
sub
es
add
add
add
jnp
add
add
add
add
add
arpl
add
xor
add
add
aaa
add
adc
add
push
and
add
add
mov
and
setno
sbb
pop
cmp
add
and
add
add
jmp
or
adc
dec
add
add
mov
add
or
add
adc
push
adc
and
add
add
push
push
add
sub
and
add
cmp
add
pop
sbb
pop
and
add
cmp
add
cmp
movhps
adc
add
add
add
sub
xor
cmp
add
or
ds
(bad)
jmp
push
add
add
sbb
adc
or
add
cmp
add
add
adc
pop
das
xchg
pop
or
pop
cmp
add
cmp
(bad)
(bad)
dec
jne
add
add
dec
add
push
push
add
add
fild
add
jle
add
add
and
sub
cwde
add
push
cmp
add
add
and
xor
lds
stos
or
add
jne
add
add
je
add
add
push
add
and
lahf
add
add
adc
and
add
add
xchg
add
add
je
add
add
push
add
push
and
add
sub
ja
add
adc
pop
sub
pop
cmp
and
cmp
(bad)
(bad)
call
add
add
push
or
or
inc
add
add
jne
add
add
dec
add
push
adc
and
add
add
cmp
add
add
push
or
add
or
add
sbb
and
add
sub
add
cmp
add
and
add
add
push
xor
dec
add
add
add
(bad)
call
add
or
add
jmp
add
add
jae
add
sti
or
add
or
add
or
add
jno
add
loope
add
test
add
cmp
inc
add
es
add
mov
or
add
or
add
pop
add
add
data16
add
or
add
add
dec
or
add
add
add
add
add
add
jmp
add
add
add
std
(bad)
(bad)
cmp
add
or
add
or
add
add
add
add
pop
(bad)
(bad)
inc
or
add
or
(bad)
(bad)
cmp
add
sub
(bad)
(bad)
fisttp
add
test
add
xor
or
add
add
add
xor
add
or
add
or
add
(bad)
(bad)
cmp
(bad)
(bad)
mov
add
add
add
mov
add
inc
add
std
(bad)
call
add
std
(bad)
push
add
jge
add
mov
add
lahf
or
add
or
add
std
(bad)
(bad)
clc
add
add
push
add
jns
add
sar
(bad)
inc
add
add
add
add
or
add
push
add
and
add
add
cmp
daa
add
add
dec
add
push
adc
and
add
sub
gs
(bad)
(bad)
cmp
(bad)
call
cs
loopne
sbb
ja
or
or
add
and
jmp
fwait
add
push
sub
and
rol
cmp
or
add
jne
add
add
jg
add
and
add
add
sbb
(bad)
(bad)
cmp
add
adc
jnp
jge
inc
in
pop
add
and
add
add
std
std
(bad)
call
and
or
add
add
in
std
(bad)
dec
je
add
add
or
add
push
adc
pop
pop
pop
xor
push
add
sub
and
add
add
enter
adc
sbb
add
pop
and
cmp
sbb
and
imul
pop
add
popa
and
inc
add
add
add
add
mov
(bad)
(bad)
jmp
cwde
add
push
sub
rol
add
and
add
add
xor
add
and
cmps
mov
cmp
sbb
add
add
add
lea
add
adc
cmp
add
add
add
add
dec
das
add
or
add
add
add
add
outs
add
add
add
add
add
add
add
add
add
and
add
cmp
(bad)
(bad)
call
and
xchg
add
xchg
and
adc
and
xchg
add
push
cmp
and
and
call
sbb
add
sbb
pop
add
push
or
add
xchg
(bad)
(bad)
(bad)
cmp
add
add
and
add
add
(bad)
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
(bad)
cmp
(bad)
(bad)
jmp
and
add
add
pusha
(bad)
(bad)
jmp
fdivr
aad
out
(bad)
(bad)
fnstsw
adc
shl
pusha
pop
add
popa
and
inc
push
add
add
(bad)
(bad)
inc
add
add
add
jne
add
xor
add
cmp
add
adc
add
add
add
add
or
add
or
add
or
add
push
add
add
add
and
test
(bad)
call
sbb
add
add
or
add
and
cmp
add
add
sub
test
cmp
and
popa
xor
cdq
cmps
or
cmp
(bad)
call
adc
loop
arpl
(bad)
call
out
(bad)
(bad)
call
sbb
add
sub
sbb
daa
and
add
cmp
sti
(bad)
jmp
mov
stos
push
add
adc
inc
and
add
pop
add
add
add
mov
pop
add
mov
add
or
add
add
add
cli
(bad)
push
stc
(bad)
push
add
add
cli
(bad)
dec
cli
(bad)
inc
or
add
or
add
add
add
add
add
pop
add
ds
(bad)
push
add
xor
(bad)
(bad)
fdivr
(bad)
inc
add
add
fiadd
add
call
push
add
add
add
dec
or
add
add
add
std
(bad)
jmp
xor
add
cmp
sti
(bad)
call
sbb
pop
and
add
pop
cmp
sti
(bad)
jmp
cmp
(bad)
call
pop
je
add
sbb
push
je
add
sbb
sub
add
adc
and
add
add
in
(bad)
(bad)
cmp
or
sbb
add
push
adc
and
add
sub
ret
cli
(bad)
(bad)
cmp
and
mov
add
xchg
adc
and
add
add
and
add
cmp
and
pop
and
add
add
xchg
cli
(bad)
(bad)
cmp
add
add
and
and
add
popa
cmp
daa
and
add
add
outs
cli
(bad)
jmp
inc
cmps
and
and
add
push
pusha
inc
lea
stos
cs
pop
popa
cmp
add
pop
and
jns
cmp
add
cmp
(bad)
(bad)
inc
je
add
add
je
add
add
push
add
push
cmp
daa
add
add
cwde
add
push
cmp
pop
adc
pop
and
add
add
cwde
add
push
cmp
cli
(bad)
(bad)
cmp
stc
(bad)
call
and
lods
add
add
add
pop
and
add
cmp
stc
(bad)
dec
je
add
add
dec
add
push
adc
and
add
cmp
stc
(bad)
call
adc
je
add
sbb
adc
adc
and
add
sub
add
and
stos
stc
(bad)
dec
je
add
add
dec
add
push
adc
and
add
add
xchg
add
push
cmp
and
add
add
adc
jne
add
sbb
sbb
add
sub
add
adc
cmp
add
cmp
(bad)
(bad)
cmp
add
push
dec
add
enter
and
add
cmp
(bad)
(bad)
cmp
sti
(bad)
call
add
sbb
mov
add
add
cmp
stc
(bad)
jmp
cmp
(bad)
call
lea
add
add
add
mov
add
adc
and
add
add
push
stc
(bad)
call
or
or
add
cld
clc
(bad)
call
and
pop
xchg
adc
and
add
add
jmp
(bad)
call
adc
adc
add
and
add
add
cmp
clc
(bad)
jmp
jle
add
add
and
add
cmp
adc
and
and
cmp
add
add
daa
inc
pop
add
add
add
or
(bad)
inc
(bad)
inc
add
push
add
add
inc
pop
add
and
add
cmp
(bad)
call
and
setno
pop
cmp
and
xor
bound
(bad)
call
pop
push
cmp
add
and
dec
clc
(bad)
(bad)
cmp
adc
adc
adc
and
add
push
cmp
clc
(bad)
jmp
cmp
(bad)
call
adc
sbb
add
push
adc
inc
add
add
sbb
(bad)
call
lea
add
add
add
cmp
clc
(bad)
jmp
sbb
sub
xor
pop
add
popa
and
inc
pop
add
add
(bad)
(bad)
inc
add
add
add
fadd
add
daa
add
add
add
add
add
and
cmp
add
and
ret
cmp
(bad)
(bad)
call
and
and
and
popa
cmp
sbb
sbb
pop
add
push
or
add
add
push
xor
dec
add
add
add
add
mov
add
add
add
add
add
add
bound
add
and
add
add
cmp
(bad)
(bad)
jmp
cmp
sub
add
add
add
add
add
add
add
add
and
add
mov
(bad)
jmp
xchg
add
push
sub
sar
jmp
and
add
add
(bad)
(bad)
(bad)
jmp
xor
fadd
call
adc
and
add
add
js
(bad)
jmp
and
cmps
cmp
adc
add
add
lea
add
adc
add
dec
(bad)
(bad)
jmp
push
(bad)
(bad)
(bad)
frstor
adc
and
pusha
pop
add
popa
and
inc
add
(bad)
(bad)
call
add
aas
add
add
add
add
add
add
and
ret
add
sub
mov
sar
call
sbb
sub
or
add
and
jp
and
add
jle
add
popf
(bad)
(bad)
call
sub
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
pop
add
cmp
(bad)
call
and
cdq
add
add
call
sbb
sub
add
push
fcom
adc
add
xchg
add
push
cmp
idiv
jmp
adc
and
add
add
pop
cmp
cli
(bad)
call
and
rol
add
xchg
pop
pop
pop
cmp
(bad)
(bad)
call
prefetchnta
cli
(bad)
jmp
dec
add
add
aam
(bad)
jmp
movs
je
mov
cmc
popa
and
pop
inc
or
add
push
add
add
sti
(bad)
call
sti
(bad)
call
cld
(bad)
call
add
lock
(bad)
inc
(bad)
(bad)
jmp
add
and
add
cmp
lea
add
add
add
mov
add
adc
and
add
cmp
(bad)
call
and
pop
xchg
sbb
pop
and
add
add
pusha
cmc
(bad)
call
adc
and
add
add
push
cmc
(bad)
call
and
pop
xchg
and
add
add
pop
and
add
add
cmp
(bad)
call
and
test
add
xchg
pop
or
pop
sub
cwde
add
push
cmp
(bad)
jmp
and
add
add
adc
les
shl
pusha
pop
add
popa
and
inc
pop
add
add
(bad)
(bad)
jmp
stc
(bad)
call
hlt
(bad)
dec
add
mov
add
add
sldt
add
(bad)
(bad)
call
pop
adc
and
add
add
int3
hlt
(bad)
call
add
nop
bound
add
pop
add
add
cmp
cmp
clc
(bad)
call
or
add
movs
hlt
(bad)
(bad)
cmp
add
adc
add
idiv
push
idiv
call
(bad)
push
idiv
push
idiv
push
idiv
jmp
pop
add
add
cwde
add
push
cmp
(bad)
jmp
cmp
or
ds
add
add
xor
add
cmp
(bad)
jmp
pop
inc
cmp
add
add
and
add
push
cmp
(bad)
jmp
cmp
je
add
add
push
add
push
adc
and
add
add
and
gs
(bad)
call
add
push
dec
add
sbb
(bad)
jmp
adc
add
sub
add
add
(bad)
call
or
pop
and
add
add
xchg
add
push
cmp
repz
jmp
cmp
(bad)
dec
je
add
add
or
sbb
adc
sbb
add
and
push
add
sub
and
add
add
mov
(bad)
dec
jne
add
add
push
add
push
adc
and
add
add
lahf
repz
call
and
or
add
xchg
and
adc
cmp
idiv
call
and
repnz
(bad)
call
add
add
add
push
add
add
cmp
(bad)
jmp
cmp
adc
adc
push
(bad)
jmp
aas
add
add
push
repz
(bad)
cmp
jne
add
add
push
add
push
adc
and
add
add
cmp
(bad)
jmp
movs
je
mov
call
adc
and
add
mov
add
adc
and
add
add
adc
(bad)
jmp
mov
cmp
(bad)
call
adc
and
add
mov
add
adc
and
add
add
jmp
pop
cmp
idiv
call
adc
repnz
(bad)
call
and
jno
and
add
add
fwait
add
push
sub
or
add
add
push
add
push
and
add
cmp
and
sub
aam
cdq
popa
cmp
mov
add
or
push
add
add
cmp
adc
and
add
add
xchg
pop
adc
cmp
and
mov
add
xchg
sbb
jmp
add
add
adc
and
add
add
cmp
(bad)
jmp
and
pop
outs
(bad)
cmp
(bad)
call
and
cmp
add
xchg
and
adc
and
add
add
sub
(bad)
jmp
mov
pusha
pop
add
popa
and
inc
add
repz
jmp
push
(bad)
call
(bad)
(bad)
jmp
sub
add
cmp
icebp
(bad)
jmp
cmp
add
and
add
sub
push
add
add
xchg
add
push
cmp
icebp
(bad)
jmp
pop
sbb
pop
cmp
and
repnz
(bad)
call
push
cmp
(bad)
jmp
push
add
add
mov
je
add
add
push
add
push
adc
or
add
cmp
loope
(bad)
dec
je
add
add
aad
add
and
add
add
adc
jne
add
add
dec
pop
je
adc
aam
add
add
adc
add
gs
(bad)
call
or
pop
and
add
sub
push
icebp
(bad)
jmp
and
push
mov
(bad)
call
nop
repz
jmp
dec
add
add
cmp
(bad)
jmp
pop
push
adc
cmp
(bad)
call
and
adc
add
xchg
cmp
(bad)
(bad)
dec
jne
add
add
push
add
push
adc
and
add
cmp
icebp
(bad)
(bad)
cmp
idiv
call
adc
pop
and
add
add
xchg
add
push
cmp
lock
jmp
or
add
sub
add
and
add
cmp
lock
(bad)
cmp
cmc
(bad)
dec
je
add
add
adc
sbb
adc
sbb
add
and
add
sub
add
sub
and
add
add
mov
and
pop
xchg
adc
and
add
pop
cmp
pop
and
pop
and
add
add
xor
dec
je
add
sbb
inc
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
add
add
add
or
add
add
add
xor
add
add
adc
add
push
and
add
add
cwde
add
push
cmp
add
cmp
add
add
add
adc
push
add
add
or
add
cmp
add
add
add
add
add
and
or
add
adc
and
and
or
inc
popa
cmp
add
adc
and
cmc
mov
fwait
gs
cmp
add
or
add
add
(bad)
push
add
add
add
add
add
add
add
mov
add
pushf
add
add
add
add
cmp
add
or
add
pop
or
add
call
jg
and
and
inc
pop
add
add
add
and
add
dec
add
add
(bad)
(bad)
dec
add
test
(bad)
push
(bad)
jmp
or
add
cmp
add
jle
add
add
add
or
add
cmp
add
cmp
add
add
add
add
add
push
sub
add
pop
add
add
sub
add
and
adc
mov
(bad)
inc
jnp
add
add
cmp
add
add
fild
add
and
add
add
push
pop
add
or
add
add
add
(bad)
(bad)
jmp
dec
add
add
add
cmp
call
add
or
add
mov
add
add
(bad)
(bad)
call
(bad)
(bad)
push
(bad)
(bad)
fild
add
and
add
add
mov
or
jmp
and
add
add
cmps
(bad)
(bad)
call
call
cmp
(bad)
(bad)
call
push
add
add
jnp
add
add
and
add
or
pop
jge
add
add
xchg
and
add
add
jnp
add
add
and
add
or
pop
jge
add
add
xchg
and
add
add
bound
jnp
add
add
pop
pop
bound
push
add
add
or
add
sub
xor
(bad)
jmp
and
cs
add
add
(bad)
call
(bad)
(bad)
call
add
pop
xchg
or
xor
jbe
(bad)
call
cmp
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
push
(bad)
(bad)
jmp
push
add
add
cmp
(bad)
(bad)
jmp
cmp
std
(bad)
inc
jnp
add
add
pop
add
pop
pop
bound
pop
push
imul
xor
add
add
adc
add
push
pop
sub
inc
add
add
and
add
add
cwde
add
push
cmp
add
cmp
add
adc
and
repnz
add
jne
add
sub
and
add
add
xor
push
add
add
add
push
add
add
and
push
add
add
aam
(bad)
(bad)
jle
add
add
add
jmp
add
add
dec
or
dec
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
inc
add
add
add
add
cmp
(bad)
(bad)
jmp
jg
(bad)
std
and
and
inc
add
add
(bad)
(bad)
jmp
(bad)
call
add
add
cmp
or
out
lods
jge
and
inc
add
add
add
add
add
(bad)
(bad)
call
cwde
add
push
sub
pop
add
add
and
add
add
cwde
add
push
cmp
add
add
cmp
add
iret
add
add
in
cmp
inc
add
add
add
add
add
add
dec
or
dec
add
add
add
add
add
add
add
add
cmp
add
add
and
add
add
xlat
(bad)
(bad)
jmp
(bad)
in
mov
and
add
mov
cmp
dec
inc
push
add
add
add
add
add
add
add
add
add
add
add
add
pop
cmp
and
jb
fnstcw
sbb
(bad)
call
add
or
pop
(bad)
(bad)
inc
jne
add
add
and
add
and
add
sub
add
sub
pop
add
add
je
add
add
and
add
add
in
add
sub
add
sub
(bad)
pop
and
lods
jge
and
inc
add
(bad)
(bad)
call
add
add
add
add
add
add
pop
add
add
add
cdq
add
add
icebp
int
cmp
(bad)
(bad)
inc
je
add
add
or
add
and
rcr
add
add
mov
or
and
(bad)
call
pop
inc
push
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
mov
xchg
movs
into
jecxz
js
(bad)
call
add
add
cdq
(bad)
(bad)
inc
je
add
add
add
push
fadd
jne
add
add
add
inc
sbb
add
add
add
add
add
add
add
add
adc
lldt
add
add
add
adc
add
push
and
add
add
cmp
pop
or
add
add
push
add
add
push
add
add
pop
cmp
cmp
add
and
add
add
push
or
dec
add
add
add
add
and
add
or
add
mov
add
add
(bad)
dec
add
add
add
add
add
add
add
add
add
add
add
and
add
mov
add
add
add
add
add
sahf
add
add
add
add
add
add
and
add
and
(bad)
(bad)
(bad)
jmp
add
or
add
add
cmp
(bad)
jmp
retf
sub
dec
add
add
or
jmp
adc
cmp
add
adc
and
add
xchg
and
add
add
add
cmp
add
add
push
and
add
add
in
(bad)
jmp
ja
add
jp
jnp
add
add
pop
and
jg
add
and
add
add
pop
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
(bad)
jle
add
add
pop
and
add
cmp
(bad)
(bad)
jmp
add
add
add
and
add
or
add
add
add
add
add
and
pushf
and
sar
(bad)
call
adc
add
or
repnz
(bad)
inc
jnp
add
add
add
add
add
jnp
add
add
and
out
add
sub
add
sub
or
add
cmp
into
add
add
and
push
cmp
and
add
cmp
(bad)
jmp
scas
jmp
or
add
push
sub
or
rol
pop
popa
cmp
and
add
pop
and
add
sub
cmps
(bad)
(bad)
jmp
and
add
add
cwde
add
push
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
jmp
cdq
xor
inc
sbb
adc
pop
or
or
add
xchg
(bad)
(bad)
(bad)
fld
add
add
add
(bad)
(bad)
(bad)
stc
add
add
(bad)
jmp
(bad)
(bad)
jmp
push
add
add
out
(bad)
(bad)
jle
add
add
push
and
add
add
(bad)
std
(bad)
call
or
mov
and
cmp
(bad)
(bad)
call
add
add
add
add
(bad)
jmp
add
add
(bad)
(bad)
inc
(bad)
(bad)
jmp
add
add
add
in
add
dec
(bad)
(bad)
(bad)
out
(bad)
(bad)
call
(bad)
jmp
(bad)
jmp
add
add
or
add
cmp
(bad)
call
(bad)
(bad)
call
pop
and
add
add
(bad)
(bad)
inc
jnp
add
add
cmp
add
add
add
add
sub
inc
std
(bad)
(bad)
cmp
std
(bad)
(bad)
cmp
(bad)
inc
and
add
pop
jge
add
add
adc
add
cmp
std
(bad)
jmp
jl
sahf
inc
cmp
(bad)
(bad)
call
add
add
or
(bad)
call
or
div
pop
and
(bad)
(bad)
dec
and
add
cmp
and
jecxz
(bad)
call
push
and
add
add
add
call
or
repnz
(bad)
inc
add
stc
std
(bad)
jmp
adc
add
push
cmp
sbb
add
call
push
and
adc
pop
dec
xchg
pop
cmp
(bad)
(bad)
jmp
add
add
push
push
add
add
mov
(bad)
call
adc
add
jnp
(bad)
call
or
add
add
ins
cld
(bad)
jmp
adc
push
add
add
add
add
adc
add
push
pop
sub
sbb
add
and
add
add
cmp
cmp
add
add
jnp
add
add
pop
and
jg
add
push
add
add
add
add
cmp
pop
inc
pop
add
add
sldt
add
add
add
mov
dec
mov
imul
popa
and
pop
inc
or
add
test
add
or
add
push
add
add
(bad)
(bad)
call
add
add
add
add
add
and
cmp
add
pop
or
add
cmp
(bad)
(bad)
inc
add
jnp
add
add
add
pop
sub
add
pop
or
or
add
cmp
rol
add
add
jnp
add
add
jnp
add
add
sub
add
or
or
jmp
mov
add
xchg
and
or
add
rol
add
sbb
add
lds
add
and
ds
cmp
add
(bad)
and
cmp
popa
cmp
(bad)
(bad)
inc
add
push
add
add
and
add
and
add
sub
sub
add
and
add
and
add
sub
add
adc
add
cmp
add
jle
add
add
add
add
add
pop
cmp
add
and
sar
(bad)
call
or
cwde
cmp
(bad)
(bad)
call
add
sbb
mov
cmp
cmp
(bad)
(bad)
inc
add
add
add
jnp
add
add
sub
add
or
bound
add
and
add
add
push
push
add
or
add
add
add
(bad)
jmp
add
add
add
add
add
sahf
(bad)
(bad)
push
add
adc
add
inc
(bad)
(bad)
jmp
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
push
std
(bad)
inc
(bad)
(bad)
call
(bad)
(bad)
push
(bad)
call
(bad)
inc
add
lods
add
add
adc
and
add
add
fwait
(bad)
(bad)
jmp
call
(bad)
call
add
mov
add
xchg
pop
adc
and
add
add
cwde
add
push
cmp
(bad)
jmp
pop
or
add
imul
and
add
add
and
add
add
push
(bad)
(bad)
inc
and
add
pop
jge
add
add
adc
add
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
dec
inc
or
add
daa
add
add
(bad)
call
(bad)
jmp
(bad)
(bad)
jmp
add
add
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
(bad)
fdivrp
(bad)
jmp
adc
add
cmp
(bad)
(bad)
jmp
stos
neg
out
jns
(bad)
call
add
jge
and
cmp
(bad)
jmp
add
push
add
add
or
push
add
add
retf
call
add
neg
ja
jae
popa
cmp
ds
(bad)
jmp
or
add
cmp
imul
inc
sub
add
adc
or
add
add
adc
add
push
and
add
add
cld
add
add
adc
add
add
jge
add
add
or
add
cmp
add
add
cld
add
add
jnp
add
add
jnp
add
add
leave
push
add
and
mov
add
add
add
cmp
push
add
and
add
add
mov
add
add
add
add
cmp
or
add
inc
add
add
call
pop
add
push
and
add
add
cmp
add
add
add
add
add
jnp
add
add
push
rcr
pop
cmp
add
cmp
add
add
add
add
add
add
jge
add
add
xor
add
cmp
add
add
and
add
add
xor
dec
add
add
jnp
add
add
and
add
adc
pop
pop
jge
add
add
pop
add
add
add
and
add
cmp
add
add
or
(bad)
outs
cmp
and
fisub
add
add
and
or
jmp
je
add
adc
inc
sub
add
adc
add
inc
add
add
add
add
add
add
pop
add
jmp
add
add
cld
add
add
(bad)
jmp
add
(bad)
(bad)
inc
pop
add
sbb
add
pushf
add
add
or
add
add
add
add
add
push
add
les
add
mov
add
add
(bad)
call
pop
add
cld
add
add
(bad)
(bad)
(bad)
call
add
add
ds
add
dec
add
add
add
add
add
fild
add
add
add
add
add
add
xor
add
add
adc
jge
add
add
daa
add
add
sbb
xor
(bad)
inc
add
sub
add
jge
add
add
sbb
add
pop
cmp
add
add
pop
sbb
or
and
icebp
add
add
sbb
add
add
and
add
cmp
add
add
or
daa
add
add
or
inc
add
add
leave
add
add
add
add
or
add
cmp
or
cmp
add
add
and
add
cmp
mov
and
cmp
and
cmp
add
sub
add
and
add
add
cmp
add
and
add
stos
popa
and
pop
inc
or
add
scas
add
add
add
add
ret
add
(bad)
push
add
mov
(bad)
(bad)
dec
(bad)
jmp
cwde
add
push
sub
cld
add
push
add
add
cmp
add
add
cmp
(bad)
(bad)
inc
sbb
pop
add
push
or
cmp
add
cmp
add
add
adc
and
add
add
cld
add
add
add
add
add
jnp
add
add
jge
add
add
inc
add
add
fild
add
cmp
std
(bad)
inc
jnp
add
add
jnp
add
add
push
add
add
cmp
cmp
adc
pop
bound
or
or
add
pop
cmp
cmp
pop
pop
adc
add
add
or
mov
add
adc
and
add
add
add
add
xchg
std
(bad)
call
or
out
add
add
call
sub
jnp
add
add
sub
push
and
cmp
add
add
sub
add
cmp
add
cmp
(bad)
inc
push
jge
add
add
cmp
add
sub
sub
add
cmp
(bad)
inc
add
sub
add
jge
add
add
xor
add
cmp
add
add
adc
cmp
std
(bad)
call
or
sub
add
xchg
pop
gs
cmp
(bad)
(bad)
call
sub
or
pop
add
push
and
add
push
cmp
add
add
adc
and
add
add
add
or
das
add
add
enter
cmp
cld
(bad)
inc
jnp
add
add
and
add
adc
add
add
add
adc
jge
add
add
push
pushf
and
add
add
xchg
add
add
or
or
adc
add
push
cmp
adc
pop
adc
add
add
jno
add
adc
and
adc
cmp
(bad)
call
or
xchg
add
add
call
sub
and
add
add
add
pop
jge
add
add
sbb
cwde
add
push
cmp
add
add
pop
adc
or
inc
cld
(bad)
call
or
add
add
xchg
cmp
(bad)
(bad)
call
sub
sbb
pop
add
push
cmp
adc
add
dec
or
add
add
add
add
add
add
add
add
nop
add
add
(bad)
dec
add
arpl
add
(bad)
(bad)
call
add
add
add
mov
add
sbb
add
cld
add
add
add
cld
cld
(bad)
call
cld
(bad)
call
add
add
add
add
add
add
(bad)
call
std
(bad)
dec
add
add
std
(bad)
jmp
add
add
(bad)
(bad)
sti
sti
(bad)
call
cli
(bad)
call
cld
(bad)
jmp
add
add
std
(bad)
call
(bad)
mov
add
add
std
(bad)
dec
(bad)
jmp
cld
(bad)
(bad)
call
add
add
add
(bad)
(bad)
call
(bad)
call
add
add
(bad)
(bad)
dec
add
ss
(bad)
(bad)
fdivr
(bad)
(bad)
mov
add
add
add
add
add
outs
add
add
add
add
(bad)
jmp
add
add
add
add
cli
(bad)
push
(bad)
jmp
add
add
(bad)
push
stc
(bad)
dec
add
add
and
add
push
cmp
(bad)
(bad)
jmp
and
jmp
cld
(bad)
call
cmp
cli
(bad)
call
or
call
(bad)
cli
(bad)
call
or
add
or
xchg
pop
cmp
or
xchg
add
add
sahf
cli
(bad)
call
adc
xchg
cli
(bad)
call
push
adc
and
add
add
cmp
(bad)
jmp
adc
pop
push
xchg
(bad)
call
and
call
sub
and
add
pop
jge
add
add
adc
add
cmp
(bad)
call
or
movs
add
add
add
or
push
cli
(bad)
call
or
sub
add
add
(bad)
call
sub
sbb
add
add
push
add
add
adc
(bad)
call
and
or
and
(bad)
call
adc
repnz
(bad)
inc
add
add
add
jecxz
add
jge
add
add
or
add
sub
loopne
(bad)
jmp
pop
push
adc
and
add
cmp
std
(bad)
call
adc
or
add
add
ret
std
(bad)
inc
sbb
pop
add
push
and
add
add
cmp
pop
movlps
and
add
cmp
sbb
or
inc
add
add
cmp
cmp
(bad)
(bad)
call
or
push
and
leave
mov
popa
cmp
sti
(bad)
call
push
adc
and
add
add
ins
std
(bad)
call
or
pop
xchg
sbb
or
jns
(bad)
call
or
test
add
xchg
and
cmp
(bad)
(bad)
inc
push
jge
add
add
push
add
add
cmp
(bad)
call
adc
or
dec
stc
(bad)
call
or
add
add
jmp
push
cmp
add
add
inc
add
add
adc
(bad)
call
or
xchg
test
(bad)
pop
and
aas
movs
push
(bad)
call
add
push
add
add
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
dec
(bad)
jmp
or
add
cmp
cld
(bad)
inc
push
cmp
cld
(bad)
jmp
sbb
add
push
cmp
cld
(bad)
jmp
cmp
clc
(bad)
inc
add
sub
add
jge
add
add
inc
add
add
xchg
add
push
cmp
add
jge
add
add
add
add
mov
(bad)
(bad)
cmp
add
add
jnp
add
add
or
and
add
push
cmp
(bad)
jmp
and
cmc
stc
(bad)
(bad)
jle
add
add
or
add
add
cmp
(bad)
inc
or
pop
add
push
or
add
inc
cld
(bad)
call
or
push
pop
cmp
cld
idiv
jmp
and
add
add
es
(bad)
call
or
xchg
add
add
and
add
add
adc
(bad)
(bad)
cmp
clc
(bad)
inc
and
add
pop
jge
add
add
or
add
cmp
sti
(bad)
inc
push
jge
add
add
pop
add
add
loop
(bad)
call
or
add
add
aam
(bad)
call
or
imul
and
sar
inc
sbb
add
add
xor
add
cmp
or
(bad)
jge
and
pop
mov
cmp
stc
(bad)
inc
jnp
add
add
add
xor
add
cmp
adc
idiv
call
or
repnz
(bad)
call
sub
pop
adc
adc
(bad)
jmp
cmp
add
cmp
(bad)
call
sbb
idiv
call
sbb
repnz
(bad)
inc
jnp
add
add
jnp
add
add
paddw
jmp
add
add
cmp
sti
(bad)
call
adc
or
dec
idiv
call
cmp
(bad)
(bad)
call
sub
and
add
pop
jge
add
add
sub
add
cmp
sti
(bad)
inc
jnp
add
add
cmp
cli
(bad)
jmp
push
add
add
cld
cli
(bad)
inc
pop
jge
add
add
add
add
cmp
cli
(bad)
dec
jle
add
add
jnp
add
add
pop
or
add
sar
(bad)
(bad)
cmp
idiv
inc
add
adc
(bad)
mov
add
cmp
add
sub
es
and
add
add
cmp
add
es
or
add
push
add
add
inc
add
add
rol
add
add
add
add
jnp
add
add
add
and
jg
add
and
add
add
pop
add
add
push
lods
add
add
adc
add
cmp
add
add
pop
or
pop
add
add
add
add
add
add
add
cmp
add
add
sbb
add
cmp
add
add
or
add
sldt
add
fadd
add
cmp
add
add
add
add
and
cmp
xor
mov
add
add
add
add
and
mov
add
and
mov
add
add
jnp
add
add
pop
add
add
adc
nop
add
add
add
add
add
add
jg
add
cmp
add
add
add
add
add
add
add
add
sub
add
sub
add
sub
or
add
cmp
add
adc
retf
add
add
add
sbb
add
and
add
add
cmp
add
adc
add
add
add
cmp
add
add
or
add
sbb
add
cmp
add
add
cmps
add
add
cmp
add
and
add
add
push
or
dec
add
add
add
add
add
(bad)
inc
(bad)
(bad)
call
add
dec
(bad)
(bad)
jmp
add
jle
add
test
(bad)
push
(bad)
(bad)
inc
(bad)
(bad)
jmp
(bad)
(bad)
dec
(bad)
call
add
ins
(bad)
(bad)
call
(bad)
(bad)
inc
(bad)
(bad)
push
call
add
retf
add
add
sub
inc
(bad)
(bad)
jmp
and
add
add
xchg
add
push
cmp
(bad)
jmp
adc
pop
adc
add
add
add
add
jmp
jnp
add
add
add
add
pop
and
sub
add
and
add
add
cmp
(bad)
jmp
enter
and
pop
pop
popa
and
inc
pop
add
add
(bad)
(bad)
call
add
add
(bad)
dec
(bad)
(bad)
inc
(bad)
dec
add
add
or
add
sub
clc
(bad)
(bad)
jmp
adc
sbb
add
add
ja
add
jle
add
add
ja
add
xchg
jle
add
add
dec
xchg
pop
and
add
add
pop
adc
add
add
cmp
adc
and
add
cmp
add
add
and
add
pop
jge
add
add
adc
add
sub
(bad)
(bad)
(bad)
jmp
and
cmp
add
add
cmp
dec
(bad)
and
imul
cmp
(bad)
(bad)
call
add
or
add
add
cld
(bad)
push
(bad)
call
(bad)
(bad)
mov
add
add
add
add
std
(bad)
(bad)
fdivr
(bad)
call
(bad)
(bad)
jmp
or
add
cmp
(bad)
(bad)
(bad)
cmp
or
add
add
adc
aam
call
adc
and
loop
neg
rcl
(bad)
call
push
and
cmp
std
(bad)
inc
jnp
add
add
add
adc
add
cmp
std
(bad)
(bad)
jle
add
add
push
and
add
add
enter
adc
and
adc
dec
(bad)
(bad)
call
cmp
(bad)
(bad)
jmp
ja
add
jp
sub
adc
ltr
add
adc
add
push
and
xor
add
and
mov
data16
jnp
add
add
jnp
add
add
je
add
sbb
add
add
add
inc
add
add
sub
add
sub
add
sub
add
add
cmp
add
add
add
add
and
add
add
xchg
add
push
cmp
add
add
and
xor
add
adc
jb
pusha
xor
mov
cmp
jnp
add
add
add
add
or
or
add
push
cmp
and
pop
sar
fs
and
inc
pop
add
add
(bad)
inc
add
add
(bad)
call
(bad)
(bad)
dec
add
and
add
add
outs
add
add
add
and
in
loopne
and
mul
mov
(bad)
dec
and
add
add
cmp
(bad)
jmp
and
add
add
cmp
add
sbb
add
add
push
cmp
add
add
cmp
add
or
add
add
(bad)
push
add
add
(bad)
call
add
cmp
add
add
add
push
add
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
jmp
jmp
(bad)
(bad)
inc
(bad)
(bad)
jmp
add
add
sub
jl
(bad)
jmp
and
add
add
mov
jl
dec
cmp
push
(bad)
(bad)
inc
je
add
sbb
add
push
sub
xor
add
add
add
add
sub
es
add
add
add
jnp
add
add
add
add
xor
add
add
xor
add
sub
es
and
add
add
inc
add
add
mov
cmps
enter
and
pop
inc
or
add
inc
add
add
add
add
add
add
add
test
add
mov
add
add
add
add
add
add
add
add
or
add
push
cmp
add
add
and
mov
cmp
and
add
(bad)
jg
add
push
add
add
add
add
cmp
add
add
add
dec
pop
and
or
call
add
sbb
popa
cmp
(bad)
dec
and
add
xchg
sbb
and
cmp
and
popa
and
add
(bad)
ss
cmp
(bad)
dec
inc
or
add
sbb
add
add
(bad)
jmp
(bad)
(bad)
cli
add
add
add
add
add
lods
(bad)
(bad)
jmp
push
add
add
dec
add
add
add
mov
and
cmp
(bad)
(bad)
inc
jnp
add
add
and
add
or
pop
jge
add
add
add
add
add
and
xchg
pushf
cmp
(bad)
(bad)
jmp
pop
add
add
push
push
add
or
add
add
add
(bad)
(bad)
(bad)
jns
(bad)
inc
add
add
add
(bad)
(bad)
call
add
or
add
xor
(bad)
(bad)
cmp
add
sub
add
jg
add
sar
(bad)
(bad)
mov
or
add
cmp
sub
and
add
add
cmp
and
dec
jo
pop
(bad)
(bad)
call
or
leave
(bad)
(bad)
jmp
and
mov
(bad)
call
or
add
add
cmp
(bad)
jmp
fmul
and
xor
push
add
add
stc
add
or
es
(bad)
call
or
jge
push
add
sbb
(bad)
inc
push
cmp
and
add
add
inc
(bad)
(bad)
(bad)
cmp
add
add
(bad)
jg
add
add
sub
xchg
(bad)
(bad)
jmp
and
add
add
cmp
(bad)
(bad)
jmp
jle
add
add
add
add
add
sub
or
(bad)
jmp
and
sub
and
add
add
xchg
pop
cmp
add
adc
push
add
add
add
adc
add
push
and
add
add
fadd
add
cmp
add
push
adc
adc
add
cmp
add
add
add
je
add
sbb
or
pop
pop
pop
bound
add
cmp
add
cmp
adc
pop
push
add
pop
pop
cmp
(bad)
(bad)
inc
jne
add
sbb
movups
pop
adc
mulps
pop
pop
bound
and
add
push
cmp
add
and
add
add
or
add
add
cmp
add
adc
test
add
pop
adc
xor
dec
add
add
adc
adc
push
add
add
cmp
add
adc
dec
add
push
adc
and
add
cmp
add
add
add
cmp
add
or
add
add
cmp
or
adc
retf
add
and
repnz
(bad)
call
adc
fadd
add
pop
adc
adc
add
sub
jmp
pop
adc
adc
das
add
add
cmp
add
add
adc
pop
adc
add
add
sub
rol
add
mov
adc
add
add
adc
sub
add
pop
cmp
adc
adc
aas
sti
(bad)
(bad)
jmp
or
add
pop
cmp
adc
and
add
add
jb
(bad)
jmp
or
je
add
pop
pop
adc
sub
add
cmp
add
adc
and
add
add
add
add
push
add
add
add
jne
add
sbb
push
xchg
pop
adc
push
pop
pop
pop
pop
bound
add
cmp
add
cmp
add
add
push
and
adc
sbb
cmp
add
adc
or
add
or
sub
push
and
add
add
cld
add
add
adc
mov
add
adc
add
add
out
(bad)
inc
adc
add
add
add
sub
add
cmp
add
add
add
adc
pop
pop
adc
push
pop
pop
pop
pop
arpl
add
add
test
add
adc
add
add
adc
sbb
add
cmp
or
add
add
cmp
cmp
add
push
pop
or
pop
add
add
inc
add
add
push
add
cmp
add
add
add
add
and
add
add
push
add
add
or
add
jnp
add
add
or
push
adc
sbb
or
popf
and
add
cmp
add
adc
and
push
mov
cmp
ret
mov
add
pop
sbb
adc
sub
add
add
adc
add
adc
inc
add
add
hlt
add
add
push
and
sbb
adc
add
add
fiadd
add
pop
or
adc
xchg
add
add
cmp
(bad)
(bad)
inc
je
add
sbb
sete
add
adc
add
cmp
jae
add
adc
sbb
adc
and
add
add
movs
add
add
and
adc
pop
add
add
or
repnz
(bad)
inc
jnp
add
add
adc
push
sbb
punpcklbw
and
add
cmp
add
and
jo
iret
cmp
add
add
sbb
push
(bad)
(bad)
inc
jne
add
sbb
pop
add
and
add
pop
add
add
add
inc
add
add
adc
and
add
add
xchg
add
push
cmp
add
add
jle
add
add
adc
add
and
add
cmp
add
add
add
cmp
add
or
repnz
(bad)
jmp
cmp
add
dec
sbb
dec
add
add
add
std
(bad)
(bad)
clc
add
add
(bad)
(bad)
jg
add
imul
add
add
sbb
(bad)
dec
add
stos
cld
(bad)
call
sti
(bad)
call
add
(bad)
(bad)
jmp
add
add
std
(bad)
push
add
aad
add
jnp
(bad)
push
cli
(bad)
push
add
fscale
(bad)
jmp
std
(bad)
jmp
add
add
(bad)
dec
add
add
add
add
(bad)
(bad)
call
add
xchg
(bad)
(bad)
inc
(bad)
push
add
add
cld
(bad)
(bad)
cmp
add
and
add
sub
add
add
add
inc
sti
(bad)
(bad)
cld
sti
(bad)
call
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
ds
(bad)
jmp
(bad)
push
add
add
add
add
add
jb
(bad)
inc
add
add
std
(bad)
jmp
add
add
add
iret
sti
(bad)
inc
sti
(bad)
dec
add
add
jle
add
sti
add
add
add
xchg
(bad)
(bad)
jl
add
pushf
cld
(bad)
call
add
add
add
add
std
(bad)
push
add
or
add
and
add
push
sti
(bad)
jmp
add
add
add
lods
(bad)
(bad)
call
push
adc
push
add
add
cwde
add
push
cmp
xchg
(bad)
(bad)
jmp
push
retf
and
and
pop
inc
or
add
aas
add
add
(bad)
dec
call
add
add
std
(bad)
inc
(bad)
(bad)
jmp
add
test
(bad)
jmp
or
add
sub
dec
(bad)
(bad)
jmp
pop
and
add
add
cmp
(bad)
jmp
mov
(bad)
xchg
cmp
push
cmp
and
add
cmp
(bad)
(bad)
call
pop
adc
rol
add
pop
push
cmp
(bad)
(bad)
inc
je
add
sbb
push
xchg
and
adc
sub
cwde
add
push
cmp
add
and
add
cmp
std
(bad)
jmp
cmp
add
add
out
loope
adc
and
inc
xchg
neg
cmp
(bad)
(bad)
call
adc
or
push
add
add
mov
(bad)
(bad)
cmp
add
or
pop
or
sub
add
cmp
push
add
add
push
add
add
and
add
sub
cmp
jmp
sbb
adc
cmp
jb
(bad)
jmp
add
add
adc
add
popa
std
(bad)
(bad)
cmp
add
add
push
pop
pop
adc
and
add
add
dec
std
(bad)
jmp
cld
mov
(bad)
call
adc
add
add
add
add
add
add
add
add
add
add
cli
(bad)
inc
(bad)
(bad)
stc
add
add
add
add
add
cli
(bad)
call
sti
(bad)
inc
add
add
add
push
add
add
sti
(bad)
inc
add
add
sti
(bad)
(bad)
in
add
add
sti
(bad)
jmp
add
add
add
add
cld
(bad)
jmp
add
add
stc
(bad)
push
(bad)
(bad)
dec
stc
(bad)
(bad)
fdivrp
(bad)
call
sti
(bad)
push
add
add
cld
(bad)
dec
(bad)
(bad)
inc
add
add
sub
cmp
pop
and
adc
lock
(bad)
jmp
and
add
add
cmp
call
(bad)
(bad)
call
and
repnz
(bad)
call
or
pop
adc
and
add
add
fs
(bad)
(bad)
cmp
or
adc
pop
or
pop
pop
bound
or
daa
add
add
inc
cld
(bad)
call
pop
and
aas
inc
jno
and
cmp
or
add
cmp
push
adc
and
add
sub
adc
(bad)
jmp
adc
cmp
adc
add
(bad)
call
push
pop
pop
xchg
adc
mov
(bad)
call
cmp
(bad)
(bad)
call
adc
and
add
add
loope
(bad)
call
adc
add
adc
push
add
add
cwde
add
push
cmp
sti
(bad)
jmp
cmp
(bad)
call
push
pop
(bad)
ret
jmp
dec
add
add
lods
sti
(bad)
(bad)
cmp
(bad)
call
or
(bad)
(bad)
jmp
dec
add
add
xchg
sti
(bad)
call
push
and
sbb
dec
add
add
jle
(bad)
call
adc
or
add
cmp
(bad)
(bad)
cmp
(bad)
(bad)
inc
adc
xchg
adc
and
add
sub
push
sti
(bad)
jmp
cmp
(bad)
(bad)
call
push
pop
pop
adc
and
add
sub
cmp
(bad)
jmp
adc
and
add
add
sub
(bad)
call
pop
and
(bad)
xor
and
out
jg
popa
cmp
adc
or
add
xchg
add
push
cmp
sti
(bad)
jmp
cmp
or
or
(bad)
(bad)
jmp
and
add
sub
jecxz
(bad)
jmp
cmp
jnp
add
add
adc
inc
add
pop
xchg
adc
and
add
add
xchg
add
push
cmp
cmp
(bad)
call
or
add
or
add
mov
pop
std
(bad)
inc
jne
add
sbb
push
adc
and
add
add
mov
(bad)
call
adc
pop
maxps
pop
pop
bound
adc
cmp
add
sub
outs
cli
(bad)
jmp
cmp
std
(bad)
call
add
cmp
add
or
adc
add
cmp
call
adc
adc
sldt
add
inc
cli
(bad)
call
adc
adc
inc
add
add
cmp
(bad)
call
nop
cmp
and
add
cmp
adc
adc
(bad)
(bad)
call
push
and
add
add
call
adc
and
add
push
cmp
cli
(bad)
jmp
cmp
adc
adc
pop
pop
pop
bound
adc
and
in
(bad)
(bad)
cmp
jnp
add
add
adc
adc
or
adc
sbb
punpcklbw
and
add
add
mov
movlps
and
add
cmp
cmp
(bad)
call
adc
adc
pop
pop
pop
bound
adc
pop
add
add
cmp
adc
and
adc
inc
cld
(bad)
call
push
and
add
add
jmp
adc
or
cmps
pop
add
cmp
add
sub
es
and
add
add
out
add
add
jle
add
add
and
add
add
jge
add
add
sbb
add
cmp
add
add
inc
pop
loope
and
push
cmc
popa
and
pop
inc
or
add
adc
add
pop
add
add
(bad)
(bad)
jmp
push
add
xlat
add
add
push
add
and
add
add
add
sub
add
push
cmp
cmp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
popa
add
push
and
add
add
popa
add
add
add
add
pop
and
push
add
add
and
add
pop
jge
add
add
sub
add
sub
xor
add
adc
add
test
add
add
fld
add
add
cmp
add
add
adc
and
pop
sbb
push
cmp
add
add
repz
(bad)
call
sub
jnp
add
add
jnp
add
add
inc
add
push
and
(bad)
call
sti
add
add
sbb
add
cmp
add
add
push
cmp
add
add
adc
add
cmp
push
cmp
add
add
add
add
cmp
adc
cmp
add
add
pop
and
add
inc
pop
or
add
add
and
add
cmp
adc
dec
add
add
or
add
cmp
add
adc
and
stos
push
int
and
scas
repz
popa
cmp
adc
push
push
sub
test
add
and
add
add
inc
add
add
sbb
push
cmp
add
pop
adc
repnz
(bad)
call
sub
jle
add
add
xchg
jge
add
add
and
add
cmp
add
add
pop
and
sbb
push
cmp
add
pop
sbb
repnz
(bad)
inc
push
jge
add
add
and
add
pop
cmp
add
add
adc
pop
ins
xchg
sbb
push
and
add
add
fld
add
add
add
add
jnp
add
add
pop
add
push
or
add
rol
add
dec
add
add
push
inc
push
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
inc
add
stos
add
add
add
add
add
jbe
add
sbb
add
add
add
pop
add
add
add
add
(bad)
(bad)
(bad)
mov
add
add
add
pop
add
add
add
out
add
cmp
(bad)
(bad)
jg
add
or
(bad)
call
add
jbe
add
dec
(bad)
(bad)
jmp
sbb
xchg
add
push
cmp
add
add
adc
pop
cmp
add
push
and
add
add
cmp
cmp
(bad)
inc
and
add
add
add
add
xor
add
cmp
add
add
jle
add
add
xchg
jge
add
add
or
jecxz
add
pop
adc
push
cmp
(bad)
(bad)
call
push
cmp
(bad)
(bad)
inc
and
add
add
add
add
push
add
add
cwde
add
push
cmp
mov
add
add
jge
add
add
das
add
add
cmp
push
adc
cmp
(bad)
(bad)
call
(bad)
(bad)
(bad)
call
sub
jnp
add
add
jnp
add
add
pop
add
push
and
add
add
cwde
add
push
cmp
add
sbb
push
cmp
pop
and
and
add
add
out
(bad)
call
sub
jnp
add
add
jnp
add
add
pop
add
push
and
add
add
cmp
add
add
pop
adc
add
add
daa
add
add
data16
(bad)
inc
jnp
add
add
ds
(bad)
jmp
or
add
cmp
add
adc
and
add
add
push
cmp
(bad)
(bad)
call
adc
repnz
(bad)
inc
push
cmp
add
add
daa
add
add
xchg
add
push
cmp
add
add
pop
or
push
and
add
add
cmp
add
add
cmp
(bad)
(bad)
inc
pop
or
add
add
sub
add
cmp
sbb
push
and
add
add
cmps
add
add
jns
sbb
(bad)
call
or
jae
adc
and
cmp
sti
(bad)
(bad)
jle
add
add
or
xor
add
cmp
add
and
push
push
xchg
cmp
jnp
add
add
ins
add
push
or
push
add
add
pop
add
add
pop
pop
and
add
cmp
cld
(bad)
jmp
xor
add
cmp
add
cmp
sbb
add
add
add
cmp
add
push
add
add
add
or
and
add
cmp
add
add
push
cmp
(bad)
(bad)
(bad)
cmp
jmp
sub
add
dec
or
dec
add
add
add
(bad)
(bad)
push
(bad)
call
add
add
add
add
(bad)
(bad)
(bad)
jnp
(bad)
(bad)
std
cli
(bad)
inc
add
add
(bad)
call
(bad)
(bad)
jp
(bad)
inc
add
(bad)
(bad)
jmp
add
add
sti
(bad)
call
(bad)
(bad)
inc
(bad)
jmp
(bad)
(bad)
inc
(bad)
(bad)
jmp
add
add
std
(bad)
jmp
(bad)
dec
dec
add
add
cld
(bad)
inc
std
(bad)
dec
add
add
std
(bad)
call
(bad)
dec
(bad)
(bad)
jmp
add
add
cld
(bad)
jmp
(bad)
push
add
cli
(bad)
call
(bad)
jmp
call
(bad)
(bad)
call
add
and
(bad)
(bad)
mov
add
add
add
add
cmp
jnp
add
add
jnp
add
add
pop
add
push
or
add
add
or
(bad)
call
or
push
pop
push
sbb
cli
(bad)
inc
jnp
add
add
add
or
add
cmp
(bad)
(bad)
(bad)
cmp
cld
(bad)
inc
jnp
add
add
ds
sti
(bad)
jmp
sub
add
sub
(bad)
(bad)
(bad)
jmp
cmp
cld
(bad)
inc
jnp
add
add
jnp
add
add
inc
add
push
or
fdivr
(bad)
jmp
and
xchg
add
push
cmp
adc
and
push
pop
rcr
(bad)
push
pop
adc
mov
(bad)
call
or
pop
mov
pop
and
movs
stc
(bad)
call
or
add
lods
add
add
(bad)
call
adc
call
or
hlt
add
add
add
add
(bad)
call
or
mov
or
push
and
add
add
sub
(bad)
(bad)
cmp
(bad)
inc
jnp
add
add
sub
add
and
add
cmp
(bad)
(bad)
call
or
push
and
add
add
cmp
(bad)
(bad)
jmp
pop
or
push
cmp
sti
(bad)
call
pop
pop
sub
call
sub
adc
dec
add
add
adc
add
cmp
std
(bad)
call
sub
jle
add
add
and
add
add
jge
add
add
adc
mov
pop
pop
pop
xchg
sbb
or
add
push
cmp
and
inc
cmp
(bad)
call
pop
pop
ins
xchg
adc
and
add
add
mov
(bad)
inc
and
add
pop
jge
add
add
push
add
add
jae
(bad)
call
pop
adc
cmp
or
sti
add
add
xchg
pop
cmp
(bad)
(bad)
call
sub
adc
(bad)
jbe
add
cmp
add
sub
es
and
add
add
cwde
add
push
cmp
adc
and
xchg
and
add
add
adc
add
pop
add
add
outs
add
add
push
add
add
and
add
pop
jge
add
add
add
add
sub
dec
add
add
adc
and
or
pop
and
jmp
and
pop
add
add
or
sbb
add
cmp
add
and
mov
or
inc
add
add
and
add
fs
add
add
push
add
add
or
add
jnp
add
add
jnp
add
add
pop
pop
cmp
add
add
adc
add
cmp
add
add
push
pop
push
lea
add
pop
or
repnz
(bad)
inc
sub
jnp
add
add
jnp
add
add
or
or
add
cmp
adc
(bad)
add
add
and
add
pop
jge
add
add
add
add
cmp
inc
add
add
push
jge
add
add
push
add
add
xchg
add
pop
or
add
and
add
cmp
add
cmp
add
add
or
add
add
add
add
pop
and
add
and
and
je
add
adc
loop
(bad)
call
(bad)
(bad)
call
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
(bad)
call
add
add
add
add
add
add
add
add
or
add
cmp
add
add
add
add
add
add
cmp
add
add
and
sub
pop
pop
adc
adc
add
xor
add
add
add
add
xor
(bad)
jmp
call
add
add
(bad)
(bad)
jmp
add
add
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
dec
(bad)
(bad)
call
add
add
add
outs
add
add
add
add
push
cmp
add
adc
and
dec
jp
and
les
(bad)
call
pop
and
mov
lods
mov
loopne
cmp
(bad)
call
adc
add
add
add
cmp
add
pop
or
add
jmp
(bad)
(bad)
inc
adc
and
add
add
xchg
add
push
cmp
jle
add
add
add
add
xchg
add
push
cmp
add
add
and
and
(bad)
inc
add
pop
pop
adc
add
add
add
pushf
and
add
add
jmp
cmp
add
xchg
and
adc
cmp
call
add
add
xchg
pop
cmp
(bad)
(bad)
inc
add
add
add
and
add
or
pop
jge
add
add
xchg
and
add
add
push
add
add
or
add
sub
pop
add
adc
add
sbb
add
pop
cmp
add
add
(bad)
jmp
pop
add
add
push
add
adc
and
(bad)
sbb
popa
cmp
(bad)
call
pop
and
jo
xor
arpl
cmp
(bad)
inc
jnp
add
add
cmp
and
add
add
add
add
add
add
push
and
add
add
xchg
add
push
cmp
add
add
and
dec
int3
adc
add
pop
jle
gs
(bad)
call
pop
and
loop
pop
and
xchg
mov
push
(bad)
(bad)
call
adc
add
(bad)
fwait
les
add
(bad)
inc
pop
pop
or
sbb
add
push
cmp
add
add
cmp
(bad)
inc
jnp
add
add
jnp
add
add
add
and
add
sub
add
sub
add
sub
sldt
add
xchg
add
push
cmp
pop
or
add
inc
std
(bad)
call
add
add
add
out
(bad)
inc
jmp
push
add
add
jo
add
and
xchg
(bad)
call
movlps
adc
pop
add
add
adc
mov
(bad)
jmp
and
add
push
cmp
add
and
pop
std
(bad)
call
or
inc
(bad)
(bad)
inc
(bad)
jmp
adc
add
cmp
add
add
and
inc
cmp
std
(bad)
inc
cmp
pop
add
add
push
or
dec
add
add
add
sti
(bad)
(bad)
std
cld
(bad)
(bad)
call
sti
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
call
cld
(bad)
jmp
(bad)
call
(bad)
(bad)
(bad)
cld
std
(bad)
jmp
(bad)
dec
(bad)
push
(bad)
inc
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
jge
(bad)
(bad)
(bad)
(bad)
dec
(bad)
(bad)
dec
sti
(bad)
push
std
(bad)
dec
sti
(bad)
(bad)
mov
add
add
(bad)
jmp
(bad)
(bad)
dec
(bad)
push
sti
(bad)
call
(bad)
jmp
add
add
sub
sbb
(bad)
jmp
and
popa
(bad)
(bad)
call
adc
or
add
cmp
(bad)
cmp
sti
(bad)
inc
add
add
stos
add
add
add
add
stos
add
add
add
add
sub
add
xor
add
add
add
add
sub
es
and
repnz
lea
add
add
add
mov
add
sub
add
xor
add
add
add
add
sub
es
and
add
add
add
add
sub
add
adc
or
add
add
push
and
sahf
add
add
mov
add
adc
sbb
add
adc
add
sbb
or
pop
pop
adc
pop
xchg
popa
adc
je
add
sbb
or
or
pop
adc
or
popa
shr
nop
add
push
and
add
add
cmp
add
cmp
add
adc
adc
xor
add
and
add
add
cmp
add
add
and
repnz
stc
and
and
pop
inc
or
add
mov
add
add
add
add
and
add
add
add
add
mov
add
sahf
add
add
add
add
cmp
add
add
xor
(bad)
(bad)
call
push
inc
adc
add
mov
add
sbb
add
add
add
pop
add
add
add
add
add
(bad)
(bad)
dec
add
add
add
cmc
add
add
add
add
(bad)
(bad)
inc
cmp
and
add
add
mov
add
adc
pop
imul
add
cmp
add
jle
add
add
add
add
pop
or
add
add
add
pop
add
add
nop
adc
and
add
add
dec
add
add
adc
and
add
add
cmp
add
adc
and
add
push
and
add
cmp
add
adc
pop
pop
pop
adc
and
inc
add
arpl
pop
and
add
add
or
add
cmp
(bad)
(bad)
call
or
add
sbb
or
add
cmp
add
add
add
add
mov
add
add
fld
add
pop
or
push
and
add
add
iret
add
add
or
add
adc
adc
add
mov
adc
and
add
add
cwde
add
push
cmp
jle
add
add
adc
push
add
add
cmp
mov
cmp
add
add
push
pop
sbb
and
(bad)
inc
and
add
and
add
add
push
lock
stos
cmp
adc
and
sub
fnstcw
jbe
cmp
(bad)
(bad)
call
cmp
add
add
je
add
add
or
add
jle
add
add
push
add
sbb
adc
or
or
adc
sbb
xor
(bad)
call
or
pop
adc
jmp
or
push
adc
dec
add
add
add
(bad)
call
(bad)
(bad)
dec
(bad)
(bad)
(bad)
jns
add
inc
(bad)
(bad)
jmp
std
(bad)
dec
std
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
jns
(bad)
(bad)
out
std
(bad)
inc
add
add
add
scas
(bad)
(bad)
jmp
add
add
add
jne
(bad)
dec
add
add
add
adc
add
dec
(bad)
(bad)
dec
std
(bad)
call
(bad)
inc
add
add
cld
(bad)
dec
add
mov
add
fdivrp
(bad)
push
add
add
add
add
add
add
add
cmp
jmp
adc
and
ins
jns
and
cmp
std
(bad)
(bad)
jle
add
add
and
add
cmp
(bad)
(bad)
(bad)
cmp
(bad)
call
or
pop
adc
and
add
add
and
(bad)
call
adc
push
cmp
std
(bad)
call
cmp
(bad)
(bad)
call
add
sbb
add
sub
and
add
add
std
(bad)
(bad)
call
adc
pop
add
add
push
cmp
std
(bad)
call
or
repnz
(bad)
call
pop
pop
punpckldq
or
add
adc
xchg
adc
and
add
add
sar
call
or
add
add
mov
(bad)
call
or
push
and
add
add
cmp
adc
and
and
cmp
(bad)
(bad)
jle
add
add
add
add
pop
call
jmp
add
add
cmp
(bad)
call
or
add
sbb
or
pop
xchg
adc
push
add
add
push
(bad)
(bad)
jmp
ds
cli
cmp
(bad)
call
adc
fild
add
xchg
pop
push
pop
adc
and
xchg
test
std
sti
(bad)
dec
je
add
sbb
sbb
pop
popa
or
pop
add
add
sbb
(bad)
call
adc
push
xchg
adc
and
add
add
or
(bad)
(bad)
cmp
pop
add
adc
sbb
xchg
add
push
cmp
std
(bad)
jmp
adc
and
mov
jbe
popa
cmp
outs
add
push
and
add
add
retf
std
(bad)
(bad)
cmp
(bad)
call
mov
add
add
xchg
add
push
cmp
and
add
add
cmp
adc
and
adc
and
add
cmp
mov
push
pop
and
xchg
(bad)
(bad)
jmp
adc
add
sub
jb
(bad)
jmp
cmp
add
add
xor
add
add
add
adc
add
push
and
add
add
repnz
add
or
or
inc
pop
and
or
add
add
add
add
cmp
add
add
cmp
pop
pop
or
imul
sldt
add
mov
add
and
add
add
sbb
pop
aas
sub
add
and
sahf
add
add
sbb
sti
(bad)
cmp
add
add
add
add
pop
and
add
add
add
add
pop
add
add
sub
and
add
add
ins
add
add
push
and
adc
add
pop
add
add
dec
add
add
add
add
cmp
add
adc
and
jmp
xchg
and
push
popa
cmp
add
adc
and
mov
sbb
popa
cmp
add
adc
add
add
jb
(bad)
push
add
fadd
add
mov
add
(bad)
inc
add
add
add
add
add
add
add
add
or
add
cmp
add
add
pop
pop
ins
xchg
adc
add
cmp
add
add
jle
add
add
push
and
add
cmp
add
add
repnz
mov
and
popa
and
pop
inc
or
(bad)
(bad)
call
(bad)
jmp
add
add
(bad)
(bad)
call
add
add
(bad)
jmp
add
add
add
dec
add
add
add
add
add
add
add
add
pop
cmp
add
and
mov
(bad)
call
push
and
and
adc
add
dec
add
add
inc
cmp
(bad)
(bad)
call
push
pop
push
xchg
and
add
add
add
hlt
cmp
(bad)
call
push
and
add
add
add
loope
(bad)
call
cmp
add
and
add
add
push
or
dec
add
add
add
(bad)
(bad)
jmp
std
(bad)
call
add
sbb
add
sar
call
(bad)
(bad)
(bad)
cmp
(bad)
call
(bad)
inc
(bad)
(bad)
push
(bad)
(bad)
inc
add
add
std
(bad)
dec
(bad)
(bad)
cmp
(bad)
call
(bad)
jmp
(bad)
call
std
(bad)
(bad)
jmp
add
sub
(bad)
std
(bad)
jmp
and
add
add
(bad)
(bad)
(bad)
call
pop
pop
imul
pop
(bad)
(bad)
call
inc
je
add
add
adc
and
adc
and
pop
adc
add
push
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
call
or
out
push
stos
pop
and
sub
cmp
or
out
rol
pop
and
lods
pop
ret
popa
cmp
(bad)
call
outs
add
push
and
cwde
add
push
cmp
adc
(bad)
call
gs
add
cmp
(bad)
(bad)
jmp
adc
and
(bad)
and
sbb
(bad)
call
or
or
add
cmp
(bad)
(bad)
jmp
pop
imul
inc
add
pop
sub
popa
inc
add
add
mov
add
add
cmp
xchg
std
(bad)
call
xor
add
add
sbb
add
sub
es
and
add
add
push
add
add
rcl
cmp
add
adc
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
mov
pop
pop
or
adc
add
cmp
add
add
cmps
(bad)
(bad)
inc
sub
pop
sub
movs
add
add
and
add
add
aam
add
cmp
push
add
add
pop
and
add
add
cmp
adc
and
mov
loop
and
ret
add
popa
pop
jl
push
popa
inc
add
add
jno
add
and
add
add
mov
add
or
add
add
add
add
pop
pop
frstor
add
adc
add
cmp
add
adc
pop
dec
xchg
pop
jp
adc
add
xchg
add
push
cmp
add
adc
and
adc
retf
popf
popa
cmp
add
adc
and
and
nop
add
add
pop
cmp
add
add
and
add
add
adc
adc
jmp
add
add
dec
or
dec
add
add
add
add
test
(bad)
(bad)
push
add
add
(bad)
(bad)
call
add
add
add
add
(bad)
call
(bad)
(bad)
call
(bad)
push
add
mov
add
mov
add
pop
add
add
(bad)
(bad)
jmp
add
add
(bad)
(bad)
dec
add
add
add
add
cmp
push
pop
and
add
call
cmp
(bad)
(bad)
inc
je
add
add
adc
pop
or
pop
inc
pop
adc
add
gs
(bad)
jmp
pop
mov
add
add
or
out
adc
pop
and
cmp
add
adc
pop
ins
xchg
adc
aaa
cmp
add
adc
and
inc
push
and
mov
popa
cmp
adc
add
xchg
add
push
cmp
(bad)
(bad)
jmp
or
pop
cmp
adc
(bad)
(bad)
(bad)
(bad)
cmp
or
and
in
(bad)
(bad)
jmp
inc
pop
sub
push
mov
sbb
adc
pop
or
add
and
add
sub
(bad)
(bad)
stc
std
(bad)
(bad)
jnp
(bad)
call
(bad)
inc
(bad)
push
(bad)
(bad)
(bad)
jle
(bad)
call
std
(bad)
call
(bad)
jmp
(bad)
call
add
and
add
add
xchg
add
push
cmp
adc
and
and
ss
popa
cmp
jo
add
and
add
push
cmp
(bad)
jmp
jle
add
add
push
and
add
add
pop
(bad)
(bad)
jmp
xchg
push
cmp
(bad)
call
or
or
add
cmp
(bad)
jmp
and
cmp
and
add
add
cmp
(bad)
(bad)
jmp
adc
pop
cmp
add
add
add
jo
sub
jo
add
pop
jl
pushf
pop
adc
add
add
(bad)
(bad)
cmp
add
adc
or
lds
add
pop
add
adc
add
push
jle
add
add
push
jle
add
add
pop
and
and
and
and
pop
inc
or
add
les
add
in
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
or
or
and
test
adc
mov
mov
and
cdq
hlt
mov
cmp
push
and
add
xchg
and
adc
xlat
cmp
(bad)
call
jno
add
and
stos
lea
addr16
(bad)
call
or
outs
pusha
js
pop
and
push
dec
cmp
push
(bad)
(bad)
call
add
add
add
add
add
outs
add
add
add
add
add
or
add
stos
(bad)
(bad)
dec
add
add
add
add
add
and
sbb
cmp
(bad)
(bad)
inc
and
popa
inc
add
add
aas
add
add
lds
mov
call
adc
ds
int3
pop
and
pop
(bad)
popa
cmp
(bad)
(bad)
call
or
sahf
(bad)
mov
and
or
popa
cmp
(bad)
(bad)
call
or
shl
(bad)
(bad)
call
cmp
or
push
pop
push
pop
(bad)
(bad)
inc
mov
add
sbb
mov
add
sbb
xchg
add
push
or
(bad)
(bad)
inc
pop
pop
or
int3
add
add
loope
add
or
add
sbb
pop
aas
or
add
push
adc
call
pop
and
cmp
(bad)
(bad)
inc
sub
pop
and
adc
inc
add
adc
or
add
add
add
adc
add
push
jle
add
add
add
adc
fwait
sbb
rol
pop
pop
or
or
add
xor
add
dec
add
add
add
add
(bad)
(bad)
jmp
add
add
add
cmp
add
mov
add
xchg
or
popa
cmp
add
push
popa
inc
add
add
mov
add
and
add
(bad)
call
or
pop
lock
and
fwait
pushf
fwait
popa
cmp
or
xchg
retf
and
(bad)
cmps
popa
cmp
(bad)
dec
inc
or
add
push
add
inc
add
add
add
add
add
add
(bad)
(bad)
(bad)
call
add
sbb
add
add
add
add
pop
xchg
in
jg
ss
(bad)
call
pop
and
int3
outs
sbb
popa
cmp
(bad)
(bad)
call
or
sub
(bad)
(bad)
call
cmp
(bad)
call
or
inc
mov
add
sbb
sub
pop
pop
or
pop
or
inc
sbb
pop
add
add
or
call
cmp
(bad)
(bad)
jmp
sbb
push
adc
inc
add
add
add
add
add
add
add
jb
add
sub
clc
(bad)
(bad)
inc
add
adc
or
xchg
add
sbb
add
sub
es
jle
add
add
add
cmps
pop
jo
and
mov
or
or
or
add
stos
add
add
add
aaa
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
cmp
or
jp
loope
pop
and
jp
ds
cmp
or
stos
xor
(bad)
call
or
or
sub
mov
cmp
push
add
popa
inc
add
add
bound
add
and
jo
xor
js
(bad)
call
adc
or
das
test
pop
and
inc
(bad)
call
adc
and
mov
push
(bad)
(bad)
call
add
or
add
sbb
add
adc
add
ja
(bad)
call
add
add
add
ja
(bad)
jmp
add
add
add
add
(bad)
(bad)
je
cmp
(bad)
(bad)
call
cmp
add
add
mov
mov
add
sbb
add
sub
add
push
pop
pop
or
fiadd
add
or
inc
or
sahf
add
add
sbb
pop
aas
or
add
sbb
add
xchg
(bad)
call
cmp
(bad)
(bad)
jmp
sbb
pop
adc
inc
add
add
add
add
add
jae
add
es
add
add
add
add
add
add
add
add
add
add
sub
stc
(bad)
(bad)
inc
add
xor
add
add
sub
es
jle
add
add
add
add
push
and
in
dec
xor
adc
pop
or
or
add
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
add
add
add
mov
or
add
test
(bad)
call
pop
and
mov
pop
imul
adc
and
iret
or
cmp
xlat
jb
cmp
add
or
add
or
add
mov
add
je
add
retf
add
add
add
add
add
add
add
add
add
add
add
add
add
and
push
(bad)
(bad)
call
or
add
mov
adc
dec
jns
cmp
inc
add
pop
inc
pop
push
popa
inc
add
add
sbb
test
sbb
je
add
es
adc
test
(bad)
call
add
repnz
add
ss
(bad)
call
adc
and
add
add
cmp
(bad)
inc
mov
add
sbb
xchg
add
push
or
adc
inc
(bad)
(bad)
inc
pop
pop
or
and
pop
or
adc
sub
sbb
or
add
pop
or
add
sbb
(bad)
call
push
and
adc
and
add
xchg
pop
cmp
(bad)
(bad)
inc
je
add
sbb
adc
pop
adc
cmp
(bad)
(bad)
call
xor
add
add
adc
add
push
sub
es
sub
cwde
add
push
cmp
and
add
add
cwde
add
push
cmp
add
add
loope
add
push
je
add
sbb
and
add
popf
and
add
add
retf
add
add
add
add
add
add
pop
cmp
adc
mov
and
cmp
add
add
je
add
sbb
and
and
add
add
lea
add
push
je
add
sbb
and
and
add
add
jbe
add
and
fdivr
cmp
mov
or
or
add
cmp
add
cmp
add
adc
cmp
add
pop
add
add
inc
add
add
les
sub
cmp
add
push
je
add
sbb
mov
and
add
add
and
add
adc
fistp
aam
and
popa
cmp
add
or
add
add
add
add
add
data16
add
add
jg
(bad)
call
(bad)
(bad)
jmp
adc
add
cmp
add
add
and
sbb
and
cmp
add
add
jle
add
add
and
add
add
mov
add
jmp
popa
cmp
add
add
add
jle
add
xchg
and
add
add
and
add
add
pop
add
and
sbb
cmp
add
add
and
add
mov
add
cmp
add
pop
add
add
popa
add
add
pop
pop
xchg
or
adc
cmp
add
and
jge
add
push
jne
add
sbb
and
add
popf
and
add
add
xchg
add
push
cmp
add
add
and
push
add
add
je
add
sbb
and
or
add
jmp
or
add
dec
push
add
or
add
add
add
(bad)
(bad)
inc
(bad)
jmp
add
add
(bad)
call
add
add
(bad)
dec
(bad)
(bad)
(bad)
mov
(bad)
(bad)
push
add
add
(bad)
(bad)
jmp
add
mov
(bad)
jmp
std
(bad)
dec
std
(bad)
push
(bad)
(bad)
push
add
add
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
fdivr
(bad)
call
(bad)
dec
add
add
add
add
push
add
add
(bad)
(bad)
(bad)
jmp
mov
mov
je
add
sbb
add
add
ins
(bad)
(bad)
call
or
or
add
cmp
(bad)
jmp
xor
push
inc
cmp
add
xchg
pop
and
fcmovne
or
jp
add
push
je
add
sbb
and
add
popf
and
add
cmp
(bad)
jmp
les
sub
cmp
add
push
jne
add
sbb
and
add
add
or
jmp
cmp
add
sub
add
hlt
pop
and
(bad)
push
add
add
jne
add
and
add
add
(bad)
(bad)
call
lea
and
into
(bad)
(bad)
jmp
les
sub
and
and
pop
inc
adc
add
jne
(bad)
jmp
(bad)
dec
(bad)
call
(bad)
(bad)
call
cld
(bad)
call
std
(bad)
push
(bad)
(bad)
dec
std
(bad)
push
std
(bad)
push
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
(bad)
cmp
std
(bad)
jmp
and
add
add
cmp
(bad)
jmp
sub
xor
add
add
add
add
sub
es
add
mov
add
xor
add
add
add
add
sub
es
jae
add
or
add
adc
or
or
add
add
add
sub
es
sub
add
xor
add
add
adc
add
push
add
add
movs
add
push
sub
add
adc
or
or
add
add
add
sub
es
add
cmps
add
push
sub
adc
or
or
add
adc
add
push
add
add
cmps
add
push
sub
add
adc
or
or
add
add
add
sub
es
add
test
add
sub
adc
or
or
add
add
add
sub
es
add
test
add
xor
push
add
add
add
sub
es
add
add
sub
add
adc
or
or
add
add
add
sub
es
add
stos
add
push
sub
adc
or
or
add
add
add
sub
es
add
lods
add
push
sub
adc
or
or
add
add
add
sub
es
add
lods
add
push
sub
adc
or
or
add
add
add
sub
es
jae
add
or
add
adc
or
or
add
add
add
sub
es
add
scas
add
push
sub
adc
or
or
add
add
add
sub
es
jae
add
or
add
adc
or
or
add
add
add
sub
es
add
sub
adc
or
or
add
adc
add
push
add
add
push
add
or
add
add
xor
add
add
add
add
sub
es
jae
add
or
add
adc
or
or
add
adc
add
push
add
add
push
add
or
add
add
xor
add
add
add
add
sub
es
jae
add
or
add
adc
or
or
add
add
add
sub
es
sub
add
adc
or
or
add
add
add
sub
es
add
add
or
add
xor
add
add
add
add
sub
es
add
sub
adc
or
push
add
add
add
sub
es
add
add
sub
add
adc
or
or
add
add
add
sub
es
jae
add
or
add
adc
or
or
add
add
add
sub
es
jae
add
or
add
adc
or
or
add
add
add
sub
es
add
sub
adc
or
or
add
add
add
sub
es
add
add
or
add
xor
add
add
add
add
sub
es
add
mov
add
sub
adc
or
or
add
add
add
sub
es
add
mov
add
sub
adc
or
or
add
adc
add
push
add
add
mov
add
sub
add
adc
or
or
add
add
add
sub
es
add
sub
adc
or
or
add
add
add
sub
es
add
mov
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
or
add
or
add
mov
add
xor
add
add
add
add
add
add
push
add
or
add
or
add
or
add
outs
add
push
sub
adc
or
pop
add
add
add
add
add
push
add
or
add
or
add
or
add
outs
add
push
sub
adc
or
adc
add
add
add
sub
es
add
or
add
or
add
int3
add
push
sub
adc
or
pop
add
add
add
add
add
push
add
or
add
or
add
or
add
jo
add
sub
adc
or
adc
add
add
add
sub
es
dec
add
dec
add
outs
pop
add
or
add
adc
or
adc
add
add
add
sub
es
dec
add
dec
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
sub
or
add
adc
or
adc
add
add
add
sub
es
add
or
add
or
add
or
add
sub
adc
or
sbb
add
add
add
sub
es
add
or
add
or
add
or
add
or
add
and
add
sub
adc
or
sldt
add
add
add
add
push
add
or
add
pop
add
or
add
xor
add
add
add
add
add
add
push
add
pop
add
or
add
xor
add
add
add
add
add
add
push
add
or
add
or
add
or
add
pop
add
or
add
xor
add
add
add
add
add
add
push
add
or
add
pusha
add
or
add
xor
add
add
add
add
add
add
push
add
or
add
or
add
or
add
popa
add
or
add
xor
add
add
add
add
add
add
push
add
or
add
bound
add
sub
adc
or
sldt
add
add
add
add
push
add
or
add
arpl
add
sub
adc
or
sbb
add
add
add
sub
es
dec
add
dec
add
dec
add
dec
add
outs
push
add
or
add
adc
or
push
add
add
add
add
add
push
dec
add
outs
add
or
add
adc
or
sldt
add
add
add
add
push
add
or
add
add
or
add
xor
add
add
add
add
add
add
push
add
or
add
data16
or
add
xor
add
add
add
add
add
add
push
dec
add
outs
cmp
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
add
or
add
adc
or
or
add
add
add
sub
es
add
push
add
xor
add
add
add
add
add
add
push
add
or
add
or
add
push
add
or
add
xor
sbb
add
add
add
sub
es
dec
add
dec
add
dec
add
dec
add
outs
imul
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
push
add
sub
add
xor
add
add
add
add
add
add
push
add
or
add
imul
or
add
xor
add
add
add
add
add
add
push
add
or
add
ins
add
or
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
dec
add
outs
adc
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
ins
add
or
add
adc
or
push
add
add
add
add
add
push
dec
add
outs
outs
add
or
add
adc
or
sldt
add
add
sub
es
sub
es
add
rol
push
sub
adc
or
lods
add
add
add
push
jle
add
add
push
jle
add
add
pop
and
cs
jg
and
pop
inc
or
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
fadd
add
pop
adc
lods
xor
pop
and
inc
push
xor
test
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
imul
call
mov
and
pop
(bad)
(bad)
call
push
and
add
add
and
or
sub
inc
(bad)
(bad)
call
or
adc
and
ss
(bad)
inc
add
pop
and
add
add
inc
add
add
mov
sbb
(bad)
call
or
xchg
shl
pop
and
aas
in
popa
cmp
(bad)
(bad)
call
or
or
or
js
cmp
(bad)
(bad)
call
or
sahf
sti
fisttp
pop
and
cmp
(bad)
(bad)
call
push
and
add
xchg
and
cmp
(bad)
call
or
sbb
add
inc
mov
add
sbb
mov
adc
pop
adc
(bad)
(bad)
inc
pop
pop
or
jl
add
or
adc
add
or
pop
or
sldt
add
pop
and
adc
call
push
pop
inc
xchg
sbb
cmp
(bad)
(bad)
inc
sub
adc
call
xor
add
add
adc
add
push
and
add
add
cmp
add
add
and
adc
mov
and
add
add
inc
add
and
(bad)
mul
push
test
adc
pop
or
add
pop
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
stos
add
add
fcom
xlat
mov
cmps
(bad)
(bad)
call
or
push
pop
not
arpl
popa
cmp
add
add
add
add
mov
(bad)
(bad)
jle
add
add
pop
and
add
add
add
add
xchg
xchg
push
mov
call
or
mov
jb
pop
and
adc
js
cmp
(bad)
call
push
pop
cmp
add
add
xor
add
adc
and
dec
test
push
(bad)
rcr
(bad)
call
pop
pop
imul
adc
cmp
add
and
add
add
push
or
dec
add
add
add
add
add
(bad)
(bad)
(bad)
std
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
mov
add
add
add
add
add
add
add
inc
(bad)
(bad)
call
add
add
add
je
add
popa
add
add
add
add
add
add
add
add
adc
add
sub
add
push
cmp
push
adc
add
cmp
adc
and
push
mov
loop
popa
cmp
call
pop
and
adc
mov
push
add
jbe
push
popa
inc
add
add
das
(bad)
(bad)
jmp
add
add
cmp
(bad)
(bad)
cmp
add
add
pop
pop
or
add
add
cmp
(bad)
(bad)
call
or
or
mov
pop
and
cmp
(bad)
(bad)
call
or
adc
add
cmp
(bad)
call
or
pop
or
sub
add
cmp
add
add
and
clc
(bad)
(bad)
jmp
pushf
add
add
or
add
cmp
(bad)
(bad)
call
add
add
cmp
(bad)
(bad)
inc
jne
add
add
adc
and
pop
pop
adc
add
mov
push
add
add
push
and
add
add
stos
(bad)
(bad)
call
push
and
and
add
add
add
add
cmp
and
add
add
test
(bad)
(bad)
cmp
(bad)
call
or
mov
stc
or
sbb
cmp
call
add
add
(bad)
(bad)
call
(bad)
(bad)
inc
(bad)
call
add
add
(bad)
jmp
(bad)
(bad)
jmp
(bad)
jmp
add
stc
(bad)
(bad)
jmp
(bad)
jmp
add
add
ret
push
cmp
(bad)
(bad)
jmp
pop
push
or
add
ret
push
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
(bad)
cmp
mov
and
add
add
rol
push
cmp
std
(bad)
jmp
cmp
add
adc
push
add
add
adc
add
push
jle
add
add
add
sbb
loopne
and
adc
stos
popa
and
pop
inc
or
add
jbe
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
(bad)
cmp
add
add
add
add
add
inc
mov
movs
scas
xchg
popa
cmp
add
cmp
add
adc
and
stos
bswap
pop
and
sbb
dec
popa
cmp
add
pop
or
mov
rcr
sub
popa
cmp
(bad)
dec
add
imul
inc
add
add
jb
add
and
in
pop
stos
cmp
(bad)
dec
inc
or
add
push
add
add
add
push
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
sbb
xchg
cmps
cmp
(bad)
(bad)
call
or
div
shr
call
mov
and
xchg
test
(bad)
call
or
cmp
(bad)
(bad)
call
add
pop
add
add
add
loop
(bad)
call
or
pop
or
inc
mov
add
sbb
add
sub
pop
or
inc
pop
pop
or
add
jle
add
add
sbb
add
add
sbb
pop
pushf
pop
sbb
pop
add
add
(bad)
call
add
fiadd
add
xchg
and
cmp
(bad)
(bad)
call
add
pop
add
add
cmp
(bad)
(bad)
inc
sub
inc
adc
or
or
add
add
add
sub
es
add
ret
add
push
sub
adc
or
or
add
add
add
sub
es
sub
add
push
sub
add
xor
push
add
add
add
sub
es
add
add
sub
add
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
sbb
add
sub
add
xor
add
add
add
add
add
add
push
add
pop
add
or
add
xor
sbb
add
add
add
sub
es
dec
add
dec
add
dec
add
dec
add
outs
sbb
add
sub
add
xor
push
add
sbb
add
sub
es
jle
add
add
add
and
sub
and
leave
dec
jmp
and
inc
or
add
retf
(bad)
(bad)
call
add
mov
add
add
add
add
add
xor
add
cmp
add
push
popa
inc
add
add
mov
add
and
dec
sar
(bad)
(bad)
call
or
sub
jbe
pop
and
ins
xor
(bad)
call
or
(bad)
imul
cmp
adc
outs
in
cmps
loop
jge
(bad)
call
add
or
add
das
add
add
add
aaa
add
add
add
cmp
(bad)
jns
add
inc
add
add
add
add
add
or
add
and
inc
(bad)
(bad)
call
or
add
dec
pop
adc
cmp
cs
(bad)
call
add
add
(bad)
(bad)
call
add
call
add
sbb
sub
add
push
push
pop
pop
or
jle
add
or
lds
add
or
mov
add
pop
or
or
cmp
pop
adc
data16
(bad)
call
cmp
(bad)
(bad)
call
adc
pop
(bad)
(bad)
jmp
push
adc
adc
inc
add
add
add
add
add
add
add
add
add
add
add
mov
push
sub
(bad)
(bad)
inc
add
xor
jp
add
adc
add
push
jle
add
add
add
add
push
pop
or
add
xchg
adc
in
add
popa
and
inc
or
add
and
add
add
add
imul
add
add
add
(bad)
(bad)
(bad)
cmp
or
mov
test
mov
popa
cmp
adc
xrelease
cmp
or
add
add
and
xchg
(bad)
(bad)
call
or
xor
adc
pop
and
jmp
daa
popa
cmp
add
or
popa
inc
add
add
inc
add
add
dec
clc
jno
cmp
(bad)
call
add
or
add
mov
(bad)
jmp
add
push
add
adc
add
pop
add
add
add
add
add
add
add
add
add
ffree
inc
push
cmp
(bad)
call
outs
(bad)
(bad)
call
push
and
adc
mov
(bad)
inc
mov
add
sbb
leave
add
push
push
pop
pop
or
dec
or
mov
and
or
sbb
cmp
sbb
add
cmp
call
add
out
(bad)
(bad)
call
add
add
add
addr16
(bad)
jmp
sbb
or
or
add
add
add
add
add
add
add
add
add
add
add
add
mov
cmp
(bad)
(bad)
inc
add
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
sub
es
add
int
add
sub
adc
or
adc
add
add
add
sub
es
dec
add
dec
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
add
or
add
adc
or
lds
add
add
add
sub
es
sub
es
push
sub
add
push
cmp
push
add
add
cmp
add
add
add
push
jge
add
add
add
add
cmp
add
add
add
add
add
push
add
push
and
add
add
add
add
sbb
add
add
add
add
cmp
jae
add
push
jge
add
add
xor
add
and
add
add
push
add
dec
add
add
add
add
add
(bad)
call
add
add
(bad)
(bad)
call
add
add
add
add
test
(bad)
jmp
and
cmp
(bad)
(bad)
jmp
add
rol
add
and
add
add
mov
add
add
xor
add
add
adc
add
push
sub
es
sub
add
push
sub
add
push
cmp
add
add
and
add
add
push
add
add
push
lea
add
and
add
rol
add
add
add
add
add
cmp
add
add
add
add
add
sbb
add
add
rol
add
cmp
add
push
add
add
push
add
add
push
add
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
jnp
(bad)
dec
add
add
add
add
add
add
add
add
cmp
(bad)
(bad)
call
or
add
add
cmp
sub
jmp
cmp
and
xor
and
cmp
popa
cmp
sbb
add
add
rol
add
cmp
add
or
add
cmp
jmp
sub
add
add
inc
add
(bad)
(bad)
dec
add
das
(bad)
(bad)
dec
add
add
add
and
add
add
dec
(bad)
(bad)
(bad)
cmp
push
lea
add
and
add
rol
add
add
add
fsin
(bad)
jmp
and
and
(bad)
dec
and
lock
retf
pop
and
inc
lods
popa
cmp
add
add
or
or
add
cmp
(bad)
jmp
lods
cs
pop
and
mov
dec
popa
and
or
add
sar
inc
(bad)
(bad)
call
add
cmps
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
push
(bad)
(bad)
jmp
pop
add
add
(bad)
(bad)
(bad)
jmp
mov
add
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
or
add
or
add
push
add
or
add
xor
add
add
add
add
sub
es
sub
es
add
fld
add
sub
adc
or
fld
add
pop
add
adc
add
push
jle
add
add
push
and
jl
mov
sbb
push
or
or
or
add
adc
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
or
adc
repz
mov
(bad)
call
adc
movs
fild
and
ja
jge
cmp
add
push
popa
inc
add
add
mov
add
mov
stos
in
lea
jl
(bad)
call
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
hlt
mov
cmp
(bad)
call
push
and
pop
inc
pop
adc
mov
and
(bad)
call
or
xor
dec
fwait
js
popa
cmp
(bad)
(bad)
call
and
lods
xchg
pop
and
xor
cmp
(bad)
(bad)
(bad)
jle
add
add
pop
adc
and
and
and
cmp
(bad)
(bad)
call
(bad)
add
push
and
adc
cmp
(bad)
(bad)
call
cmp
pop
and
and
cmp
or
or
add
inc
mov
add
sbb
add
xlat
add
push
or
push
pop
adc
(bad)
(bad)
inc
mov
add
sbb
add
fadd
add
or
or
add
inc
pop
pop
or
mov
and
and
add
add
sbb
pop
aas
adc
push
and
add
xchg
and
adc
call
cmp
(bad)
(bad)
inc
jne
add
add
push
adc
inc
add
adc
or
or
add
adc
add
push
add
add
fiadd
add
sub
add
adc
or
or
add
adc
add
push
add
add
fld
add
sub
add
adc
or
push
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
dec
add
outs
jb
add
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
dec
add
outs
jae
add
sub
add
xor
add
add
add
add
sub
es
sub
es
add
add
add
add
add
add
sub
add
push
sub
adc
or
push
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
repnz
add
add
sub
es
sub
es
and
add
add
cmp
add
add
and
stos
add
add
push
or
add
add
cmp
add
add
or
add
call
xor
add
pop
pop
and
mov
add
and
add
push
cmp
add
add
pop
or
add
pop
adc
repz
(bad)
call
add
test
or
add
stos
add
add
cmc
add
add
and
add
add
sar
(bad)
jmp
sbb
nop
add
add
fild
add
push
jne
add
sbb
and
pushf
and
add
add
je
add
jle
add
add
add
adc
add
sub
add
push
cmp
add
es
cmc
xchg
cmp
add
pop
and
mov
add
add
cmp
add
add
mov
add
push
je
add
sbb
and
or
sub
add
push
cmp
add
cmp
add
add
add
gs
or
add
pop
add
add
or
add
cmp
(bad)
(bad)
inc
jne
add
sbb
add
push
sbb
add
or
loopne
add
cmp
add
add
and
add
add
mov
add
and
add
add
mov
add
or
add
mov
add
cli
sub
cmps
add
add
inc
adc
add
add
add
fs
(bad)
(bad)
jnp
(bad)
inc
add
add
(bad)
(bad)
(bad)
jmp
add
(bad)
(bad)
jmp
add
add
add
add
add
add
(bad)
(bad)
call
(bad)
(bad)
jmp
sbb
add
cmp
add
push
and
daa
clc
cvtps2pd
gs
cmp
add
and
add
add
or
push
add
add
sub
add
pop
push
or
call
or
repz
(bad)
inc
je
add
sbb
add
push
sbb
add
and
add
sub
add
push
cmp
add
add
adc
cdq
add
add
add
sub
add
push
cmp
add
add
pop
and
or
and
add
sub
add
push
cmp
add
add
cmp
(bad)
(bad)
inc
je
add
sbb
and
pushf
and
add
add
mov
add
adc
add
xchg
pop
or
add
xchg
add
add
pop
sti
ins
push
and
add
idiv
ja
add
jle
add
add
add
add
outs
add
add
push
and
ja
pop
and
add
jecxz
cmp
add
adc
adc
add
add
daa
add
add
add
and
add
add
cmp
add
add
push
or
xor
(bad)
jmp
and
add
add
cmp
add
sbb
call
or
repz
(bad)
call
adc
add
add
add
dec
pop
add
or
add
add
add
(bad)
(bad)
call
call
add
(bad)
cld
(bad)
dec
add
add
add
add
add
add
(bad)
jmp
jmp
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
dec
cld
(bad)
jmp
std
(bad)
inc
(bad)
(bad)
cli
add
add
add
pop
(bad)
(bad)
jmp
cld
(bad)
(bad)
mov
cld
(bad)
(bad)
ds
(bad)
call
std
(bad)
inc
(bad)
jmp
(bad)
push
add
add
(bad)
inc
add
pop
sub
add
push
cmp
(bad)
(bad)
jmp
and
add
add
pop
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
call
push
and
push
rcl
pop
popf
popa
cmp
add
pop
prefetch
push
add
add
cmp
(bad)
call
push
and
pop
aam
pop
and
imul
je
add
sbb
and
pushf
and
add
add
push
(bad)
(bad)
jmp
bound
cmp
clc
jno
pop
popa
and
pop
inc
or
cld
(bad)
(bad)
cmp
add
sbb
(bad)
(bad)
(bad)
jg
(bad)
call
std
(bad)
jmp
(bad)
push
add
add
(bad)
(bad)
inc
inc
sti
(bad)
jmp
pop
add
add
mov
push
and
aas
test
pop
and
cmp
push
and
cmps
(bad)
pop
and
ds
popa
cmp
or
jge
jg
(bad)
call
adc
add
cmp
(bad)
jmp
cmp
cld
(bad)
inc
and
add
add
imul
add
add
pop
(bad)
(bad)
(bad)
cmp
jne
add
sbb
and
pushf
and
add
add
inc
(bad)
(bad)
call
add
in
add
cmp
(bad)
(bad)
(bad)
cmp
add
adc
or
push
add
add
add
sub
es
sub
es
add
out
add
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
sub
es
sub
es
add
jmp
xor
add
add
add
adc
add
push
sub
es
push
sub
add
push
cmp
add
and
add
add
cli
add
add
pop
add
add
inc
add
add
add
add
add
add
add
add
cmp
add
add
lds
sbb
add
lea
add
and
add
jmp
pop
add
add
jecxz
add
and
add
add
mov
jnp
retf
daa
cmp
add
add
adc
and
add
jmp
add
add
or
add
push
cmp
add
and
retf
daa
and
sbb
inc
push
add
add
add
add
(bad)
call
(bad)
(bad)
jmp
add
add
add
add
cmp
add
add
or
or
add
cmp
add
add
jne
stc
jno
mov
lea
add
and
add
jmp
pop
add
add
cmp
(bad)
jmp
push
add
add
push
add
dec
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
jmp
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
jmp
add
add
add
add
cmp
(bad)
(bad)
dec
and
push
xchg
(bad)
pop
and
cmp
(bad)
call
or
pop
add
add
cmp
sub
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
add
add
push
dec
add
sub
add
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
or
add
or
add
push
add
or
add
xor
pop
push
add
xor
add
sub
es
sub
es
and
add
add
cmp
add
add
sbb
adc
add
sub
add
push
cmp
jle
add
add
sbb
and
add
cmp
and
adc
mov
adc
add
pop
adc
and
add
out
add
push
sub
add
pop
add
add
cmp
add
adc
sbb
sbb
nop
shl
fiadd
add
sbb
add
sub
add
push
cmp
add
es
or
add
add
xor
add
pop
push
lea
add
add
and
add
add
push
add
add
clc
add
add
add
add
push
pop
or
dec
add
push
popf
and
add
add
inc
add
and
fstp
out
cmp
add
add
cld
cdq
pop
call
add
or
and
add
add
pop
dec
xchg
pop
dec
pop
or
add
add
sub
add
push
cmp
add
add
adc
xor
and
add
add
mov
add
push
or
mov
add
pop
adc
repz
(bad)
call
push
lea
add
sub
and
add
add
mov
add
cmp
add
jle
add
add
and
add
add
pop
sbb
add
popf
and
add
add
lock
push
cmp
add
es
adc
and
add
out
add
push
sub
add
adc
add
sub
add
push
cmp
add
es
add
add
and
add
add
sub
add
and
jb
cmp
adc
add
add
add
aas
add
add
add
test
add
(bad)
(bad)
jmp
add
add
add
add
add
cmp
add
inc
(bad)
(bad)
call
add
add
add
add
add
add
(bad)
push
(bad)
(bad)
jmp
push
add
add
cmp
xchg
(bad)
(bad)
inc
pop
push
aas
push
add
add
sub
add
cmp
or
jnp
(bad)
call
or
repz
(bad)
call
add
add
add
add
and
cmp
add
and
xchg
test
sub
popa
and
pop
inc
push
add
add
(bad)
js
add
and
add
or
(bad)
push
add
add
add
add
add
add
std
(bad)
push
add
add
add
(bad)
(bad)
call
sbb
add
cmp
add
add
cld
(bad)
(bad)
inc
and
add
add
cmp
add
cmp
add
add
or
add
dec
push
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
(bad)
jmp
std
(bad)
jmp
(bad)
(bad)
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
add
add
add
or
add
sar
(bad)
jmp
add
add
std
(bad)
call
std
(bad)
(bad)
jmp
add
add
cld
(bad)
dec
cld
(bad)
call
add
add
(bad)
(bad)
call
add
add
add
add
sldt
add
inc
(bad)
(bad)
(bad)
cmp
push
add
add
add
and
add
push
cmp
(bad)
(bad)
jmp
cmp
(bad)
(bad)
(bad)
jle
add
add
pop
test
pop
push
bound
dec
add
push
popf
push
sub
add
push
cmp
(bad)
jmp
and
add
add
cld
(bad)
(bad)
(bad)
cmp
std
(bad)
(bad)
jle
add
add
and
(bad)
(bad)
inc
pop
pop
or
dec
add
push
popf
and
add
add
xlat
(bad)
(bad)
(bad)
jle
add
add
and
pushf
and
add
add
sar
dec
and
out
add
add
and
add
add
test
imul
add
and
pushf
and
lock
push
cmp
cmp
(bad)
inc
pop
pop
or
and
add
sub
add
push
cmp
(bad)
jmp
jle
add
add
and
pushf
and
add
add
pop
(bad)
(bad)
jmp
mov
(bad)
(bad)
(bad)
jle
add
add
pop
xor
pop
push
bound
dec
add
push
popf
and
add
add
cmp
(bad)
(bad)
cmp
std
(bad)
inc
and
add
add
mov
(bad)
jmp
add
add
pop
cmp
adc
inc
pop
and
aam
mov
xchg
std
(bad)
dec
and
sbb
and
add
add
cmc
std
(bad)
(bad)
jle
add
add
and
or
cmp
std
(bad)
call
adc
add
add
sub
add
push
cmp
std
(bad)
jmp
adc
xchg
pop
and
ins
mov
popa
cmp
(bad)
call
add
rcr
out
adc
popa
cmp
std
(bad)
call
add
clc
pop
and
xchg
das
popa
cmp
or
movs
sti
(bad)
call
or
add
icebp
add
push
cmp
(bad)
(bad)
cmp
(bad)
call
or
or
add
cmp
(bad)
call
add
iret
add
add
add
cmp
(bad)
call
push
or
adc
dec
std
(bad)
jmp
fiadd
cld
(bad)
jmp
push
add
add
sub
add
add
add
cmp
std
(bad)
call
or
adc
add
cmp
std
(bad)
(bad)
cmp
sti
(bad)
inc
and
add
add
popa
sti
(bad)
jmp
sub
add
push
cmp
cld
(bad)
jmp
and
add
add
sub
add
sub
add
sub
add
push
cmp
cld
(bad)
jmp
sbb
mov
(bad)
call
or
call
add
iret
add
add
add
cmp
xor
aas
cld
(bad)
inc
and
mov
(bad)
jmp
or
add
cmp
or
ja
(bad)
call
add
popf
add
add
add
add
(bad)
jmp
add
add
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
add
or
add
or
add
push
add
or
add
xor
add
add
add
add
sub
es
sub
es
add
push
sub
add
push
sub
add
adc
or
pop
add
inc
add
adc
add
push
jle
add
add
push
and
addr16
adc
adc
pop
or
or
add
add
add
add
add
add
lds
add
adc
add
ret
inc
add
add
add
add
rol
add
push
adc
push
cmp
add
add
add
add
add
add
add
movs
add
add
add
add
add
add
add
out
add
cmc
add
add
add
add
or
je
je
(bad)
call
hlt
add
push
es
or
add
jo
pusha
(bad)
(bad)
call
or
push
and
adc
push
cmp
(bad)
(bad)
jle
add
add
pop
adc
and
and
dec
ja
popa
cmp
(bad)
(bad)
inc
pop
push
popa
inc
add
add
xor
add
and
adc
or
jecxz
ins
out
and
out
call
call
or
retf
push
inc
sbb
mov
clc
popa
cmp
(bad)
(bad)
call
pop
pop
adc
call
pop
or
add
inc
mov
add
sbb
mov
add
sbb
clc
add
push
or
or
add
inc
pop
pop
or
aaa
or
and
add
or
sbb
cmp
push
adc
call
cmp
(bad)
(bad)
call
adc
inc
je
add
add
sbb
add
inc
adc
or
aam
add
pop
add
adc
add
push
jle
add
add
push
jle
add
add
pop
cmp
add
and
cmp
mov
and
pop
inc
or
add
mov
add
mov
add
add
add
add
add
add
add
add
add
add
in
add
add
or
pop
sbb
sub
mov
(bad)
call
or
dec
dec
cmp
pop
and
pop
and
lahf
(bad)
(bad)
inc
pop
push
popa
inc
add
add
mov
jl
test
test
(bad)
call
add
add
add
add
(bad)
(bad)
call
add
scas
add
add
add
aaa
add
add
add
add
loope
xor
call
or
sub
imul
xor
(bad)
call
push
pop
adc
and
and
in
adc
(bad)
call
cmc
add
push
adc
pop
pop
xchg
pop
push
pop
adc
inc
cmp
(bad)
(bad)
call
or
pop
pushf
pop
push
pop
and
jg
popa
cmp
(bad)
(bad)
call
pop
and
pop
sub
adc
add
sar
(bad)
call
call
adc
and
sbb
add
inc
mov
add
sbb
mov
add
sbb
stc
add
push
or
add
inc
pop
pop
or
aaa
or
and
add
or
sbb
cmp
adc
and
and
add
add
add
call
push
pop
aaa
xchg
and
cmp
(bad)
(bad)
call
or
add
inc
je
add
sbb
pop
or
add
call
xor
add
add
add
adc
add
push
jle
add
add
add
call
xchg
adc
pop
or
inc
or
add
mov
add
add
add
add
mov
add
in
add
add
add
add
add
add
add
add
test
add
test
push
and
mov
stos
(bad)
(bad)
call
push
and
push
sbb
ret
popa
cmp
sub
add
adc
cdq
pop
and
aam
adc
jge
(bad)
dec
inc
or
(bad)
(bad)
call
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
mov
cmp
(bad)
(bad)
inc
popa
pop
es
push
popa
inc
add
add
pusha
add
add
add
and
pop
jnp
sbb
(bad)
call
cmp
call
or
stos
mov
ss
popa
cmp
(bad)
(bad)
call
push
and
sub
pop
and
das
stos
popa
cmp
(bad)
(bad)
call
push
and
and
add
or
or
cs
(bad)
(bad)
call
cmp
add
pop
xchg
pop
dec
pop
cmp
or
or
inc
mov
add
sbb
cli
add
push
or
add
jnp
and
or
inc
mov
add
sbb
sti
add
push
or
add
add
add
add
(bad)
(bad)
inc
pop
pop
or
and
pop
cmp
add
add
(bad)
call
or
repz
(bad)
call
add
add
add
add
(bad)
(bad)
inc
je
add
add
pop
or
call
xor
add
add
add
add
sub
es
jle
add
add
add
push
and
and
pop
inc
or
add
retf
add
add
jae
add
test
add
push
add
add
add
sub
add
cmp
add
mov
add
add
repnz
add
or
mov
jb
scas
(bad)
(bad)
call
or
add
pop
and
push
cmps
pop
and
xor
xchg
(bad)
(bad)
call
test
mov
xchg
(bad)
inc
push
popa
inc
add
add
scas
add
add
fst
cmp
call
pop
and
scas
jl
and
(bad)
(bad)
popa
cmp
(bad)
call
adc
mov
(bad)
(bad)
call
add
or
add
pop
(bad)
(bad)
dec
add
add
add
mov
(bad)
(bad)
jmp
add
mov
add
movs
add
add
add
add
retf
arpl
or
(bad)
call
adc
pop
and
and
mov
cmc
(bad)
(bad)
call
pop
and
mov
shl
popa
cmp
(bad)
(bad)
(bad)
jle
add
add
push
adc
and
and
cmp
(bad)
(bad)
call
add
add
add
pop
(bad)
(bad)
inc
push
adc
pop
(bad)
(bad)
inc
mov
add
sbb
sub
add
push
or
add
add
add
inc
(bad)
(bad)
inc
pop
pop
or
pop
or
push
and
adc
and
sbb
or
add
sbb
add
adc
or
repnz
(bad)
inc
sub
add
add
add
add
hlt
(bad)
(bad)
call
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
sub
es
add
add
add
sub
adc
or
or
add
add
add
sub
es
add
add
add
sub
adc
or
or
add
add
add
sub
es
add
sub
add
sub
xor
add
add
add
add
add
add
push
dec
add
dec
add
dec
add
sub
add
adc
or
push
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
je
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
jne
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
jbe
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
outs
ja
add
sub
add
xor
add
add
add
add
add
add
push
dec
add
dec
add
outs
js
add
sub
add
xor
add
add
add
add
adc
add
push
and
add
add
cmp
add
add
and
push
add
or
add
cmp
add
add
and
add
or
add
add
cmp
add
add
pop
pop
or
add
add
cmp
add
add
mov
cmp
add
adc
movs
add
add
add
add
add
add
add
sub
add
stos
add
add
add
add
add
add
mov
aam
push
and
and
pop
inc
or
add
pop
add
add
add
add
add
aam
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
jmp
add
add
add
add
or
jno
add
and
cs
into
cmp
adc
push
add
push
sub
scas
add
add
and
add
add
dec
add
add
add
add
add
add
push
and
add
add
xor
add
push
adc
ds
(bad)
call
push
pop
xor
pop
push
pop
cmp
(bad)
(bad)
jmp
pop
adc
and
add
add
adc
add
adc
and
push
pop
and
cmp
(bad)
inc
add
push
pop
push
popa
inc
add
add
into
add
add
or
add
push
cmp
add
add
adc
and
int3
shl
and
push
(bad)
popa
cmp
(bad)
(bad)
call
or
jp
bound
pop
and
mov
dec
popa
cmp
(bad)
(bad)
call
add
cmp
add
xchg
(bad)
call
add
add
call
and
cmp
(bad)
(bad)
call
or
or
add
sub
add
push
cmp
add
es
add
add
add
add
ins
add
add
add
and
add
add
pop
add
add
or
add
add
add
add
(bad)
(bad)
call
add
add
add
add
add
add
add
add
sub
add
push
cmp
add
add
adc
and
test
das
pop
and
xchg
cmp
popa
cmp
(bad)
call
cmp
(bad)
call
add
add
bound
add
and
add
add
push
or
dec
add
add
add
add
add
std
(bad)
(bad)
ds
(bad)
call
(bad)
(bad)
inc
std
(bad)
dec
(bad)
dec
(bad)
(bad)
(bad)
cmp
(bad)
inc
add
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
cmp
and
add
and
add
add
fwait
(bad)
(bad)
jmp
js
add
pop
sbb
pop
aas
pusha
(bad)
(bad)
jmp
adc
add
cmp
(bad)
std
(bad)
jmp
or
add
and
add
add
outs
(bad)
(bad)
jmp
cmp
(bad)
call
xor
mov
add
and
add
sub
es
jle
add
add
push
and
jb
stos
popa
and
pop
inc
or
add
and
add
add
add
add
add
mov
add
clc
add
add
add
add
add
add
repz
add
push
add
push
adc
and
add
xchg
and
add
in
cmp
push
and
adc
into
cmp
or
add
cdq
cmp
sbb
jae
(bad)
inc
pop
push
popa
inc
add
add
xchg
add
add
xor
xchg
sti
cmp
(bad)
(bad)
jle
add
add
pop
adc
and
icebp
cmc
jge
and
cmp
(bad)
(bad)
call
or
pop
fstp
fistp
fwait
and
popa
cmp
(bad)
(bad)
call
or
shl
cmp
(bad)
(bad)
call
or
fadd
mov
lea
popa
cmp
(bad)
call
add
add
add
sbb
add
adc
add
data16
add
add
stos
(bad)
(bad)
push
add
outs
add
add
(bad)
(bad)
jmp
(bad)
jmp
add
add
addr16
idiv
retf
(bad)
(bad)
call
cmp
(bad)
(bad)
call
or
adc
inc
mov
add
sbb
mov
add
sbb
or
add
or
adc
inc
pop
pop
or
and
add
or
pop
or
cmp
adc
and
adc
call
push
pop
push
(bad)
call
or
add
inc
sub
or
add
inc
add
adc
or
int
add
pop
add
adc
add
push
jle
add
add
push
jle
add
add
pop
and
inc
sbb
aam
fiadd
popa
and
pop
inc
or
add
mov
add
add
add
add
add
enter
sub
add
fild
add
sahf
add
add
add
add
add
dec
add
add
hlt
add
add
or
movs
xchg
rcr
outs
int3
loop
popa
cmp
pop
add
push
and
inc
cmp
or
add
mov
(bad)
inc
popa
inc
add
add
mov
add
and
outs
dec
or
jno
(bad)
call
or
pop
fsqrt
inc
pop
and
scas
mov
popa
cmp
(bad)
call
add
add
add
test
(bad)
call
(bad)
call
add
add
add
add
add
add
add
(bad)
jmp
add
daa
push
cmp
(bad)
(bad)
call
or
add
xlat
add
pop
and
xchg
inc
popa
cmp
(bad)
(bad)
call
or
jmp
rcr
inc
or
idiv
(bad)
call
or
add
stos
movs
neg
jb
shr
(bad)
call
push
and
add
xchg
and
add
add
add
adc
call
push
and
cmp
(bad)
(bad)
call
push
adc
inc
mov
add
sbb
mov
add
sbb
or
add
or
adc
inc
pop
pop
or
jo
add
or
push
and
pop
or
adc
add
adc
and
add
add
add
call
pop
pop
ss
pop
xor
cmp
(bad)
(bad)
inc
jne
add
add
pop
or
add
inc
add
adc
push
add
add
inc
add
adc
add
push
and
add
add
test
add
pop
and
xor
and
aad
retf
cmp
add
or
push
add
add
xlat
add
add
adc
adc
add
cmp
add
add
cmps
add
add
add
or
add
jp
add
out
add
out
add
inc
add
add
add
add
add
add
add
bound
add
sldt
add
add
jp
add
stos
(bad)
(bad)
jmp
or
test
add
cmp
pop
pop
or
adc
add
cmp
add
adc
and
jbe
mov
test
add
add
add
mov
adc
push
add
push
sub
movs
add
add
and
add
pop
cmp
add
add
sbb
add
push
add
add
sub
add
and
cmps
add
add
add
mov
or
push
add
and
add
add
push
or
dec
add
add
add
add
add
(bad)
(bad)
push
add
out
add
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
mov
add
add
(bad)
(bad)
call
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
jnp
(bad)
dec
add
add
fadd
add
and
add
add
xchg
(bad)
(bad)
jmp
xchg
add
add
pop
and
push
cmp
and
inc
popa
cmp
add
add
pop
and
inc
or
push
cmp
add
add
push
and
add
add
add
call
aad
add
add
popa
pop
or
add
add
sbb
adc
add
cmp
(bad)
(bad)
(bad)
cmp
(bad)
jmp
or
add
or
pop
add
add
push
add
push
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
inc
and
add
or
add
jle
add
add
or
add
xchg
add
sti
add
add
pop
or
adc
add
cmp
(bad)
(bad)
call
pop
and
xchg
push
mov
and
mov
cdq
popa
cmp
add
add
add
push
and
add
add
ret
call
adc
add
add
cmp
adc
call
cmp
(bad)
(bad)
inc
jne
add
add
sbb
add
adc
xchg
(bad)
(bad)
(bad)
cmp
std
(bad)
dec
sbb
fcos
(bad)
jmp
add
add
cmp
jmp
and
mov
out
or
adc
pop
or
inc
or
add
mov
(bad)
(bad)
(bad)
fdivr
(bad)
(bad)
cmp
add
jno
(bad)
jmp
(bad)
call
(bad)
(bad)
(bad)
jmp
jmp
add
add
(bad)
(bad)
jmp
add
add
cmp
(bad)
inc
or
and
add
add
push
(bad)
(bad)
jmp
call
(bad)
call
or
add
and
add
add
add
(bad)
jmp
sbb
stos
dec
cmp
or
add
or
add
sub
add
push
cmp
std
(bad)
jmp
jle
add
add
add
add
aad
(bad)
(bad)
cmp
std
(bad)
call
xor
add
add
add
add
sub
es
sub
add
push
sub
add
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
sub
es
add
sub
add
push
sub
xor
add
add
add
add
sub
es
sub
add
push
sub
add
xor
add
add
add
add
add
add
push
pop
sub
add
xor
add
add
add
add
add
add
push
push
sub
add
sub
es
add
jns
add
sub
xor
add
add
add
add
add
add
push
add
or
add
or
add
jp
add
sub
adc
or
adc
add
add
add
sub
es
dec
add
dec
add
outs
jnp
add
sub
add
xor
add
add
add
add
add
add
push
add
jl
add
sub
mov
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
inc
push
inc
inc
push
mov
add
ins
push
add
jnp
jge
add
daa
dec
fistp
and
push
dec
xor
lahf
ds
cld
adc
or
add
pop
and
cmp
add
push
inc
inc
clc
dec
js
les
dec
test
in
(bad)
and
call
sahf
into
inc
mov
jp
fwait
xchg
mov
pop
pop
xor
pop
add
sub
and
xor
sub
je
outs
fwait
mov
(bad)
adc
sub
jno
pushf
push
mov
sub
fiadd
dec
dec
adc
mov
test
ret
mov
pushw
push
dec
mov
inc
jnp
aas
bound
addr16
xor
cmp
mov
popf
xchg
push
jno
jmp
dec
jmp
mov
add
cmp
and
cli
or
aaa
mov
push
xor
arpl
push
mov
xchg
jmp
jno
inc
shl
std
mov
popa
and
jbe
(bad)
rol
mov
sub
xor
pop
popf
pushf
mov
inc
mov
ret
xlat
pop
mov
inc
nop
mov
mov
pop
jg
jno
fcomp
test
or
das
movs
pusha
das
outs
popa
out
(bad)
sbb
push
sti
dec
or
xlat
fld
cmp
jnp
fwait
rcl
icebp
test
add
xchg
xchg
mov
sbb
fs
cmp
inc
loope
jmp
mov
add
fld
test
cwde
(bad)
fiadd
scas
xlat
adc
movs
std
(bad)
inc
mov
or
inc
jmp
mov
sbb
push
sbb
mov
aad
mov
add
cs
hlt
fidiv
jbe
fcmovne
pop
icebp
or
xchg
aaa
cld
mov
xlat
jg
movs
bound
aad
cmp
in
stc
test
cmps
inc
push
scas
and
jnp
adc
jb
dec
cmps
mov
in
xor
popf
sub
retf
mov
frstor
stos
rcl
jno
push
push
jbe
and
ds
ins
jmp
js
xchg
(bad)
sahf
inc
jg
add
cdq
and
out
mov
add
push
jns
lds
fs
arpl
mov
adc
jnp
mov
movs
lahf
out
(bad)
fild
int3
cmps
xor
ret
repnz
jp
mov
pop
sub
and
add
out
push
pop
pop
mov
inc
arpl
mov
cmp
(bad)
mov
xchg
shr
call
and
jne
push
jmp
xchg
in
sub
and
xtest
and
out
and
(bad)
test
cs
mov
test
push
test
adc
stc
sbb
cmps
jns
sar
mov
psraw
test
dec
add
je
or
and
push
jmp
mov
jge
jge
cmps
push
mov
mov
mov
test
pop
popa
push
pop
aam
mov
push
xor
or
mov
cld
jmp
sti
inc
call
mov
dec
adc
cmp
fbld
sub
jo
fstp
daa
adc
dec
push
push
xchg
nop
mov
xor
xchg
jbe
arpl
cmp
xchg
cmp
or
outs
sub
cdq
leave
mov
cmp
inc
mov
leave
rcr
inc
mov
dec
mov
repnz
xchg
lock
sbb
ret
ret
fwait
xor
call
mov
or
mov
imul
add
es
or
and
adc
loop
mov
cdq
xor
jbe
dec
dec
mov
pop
ins
js
sub
mov
cdq
sti
cmp
mov
inc
xchg
xor
mov
pop
das
imul
sti
dec
jns
inc
adc
arpl
pop
mov
sahf
dec
ins
test
dec
dec
sbb
mov
cli
popf
push
mov
outs
inc
call
push
lods
cdq
or
movs
and
lea
cmp
mov
push
sbb
movs
lods
rcl
out
fcomp
scas
(bad)
push
and
fmul
fidivr
fwait
jmp
sub
pop
mov
push
jg
pusha
nop
cmp
jg
push
arpl
lods
ds
jb
mov
jne
and
inc
and
gs
lahf
lea
xchg
jmp
fdivr
dec
rcr
aas
dec
cmovs
idiv
add
push
cmp
pop
add
sbb
pop
adc
push
mov
adc
loopne
into
mov
pusha
or
or
push
aaa
mov
mov
aad
ffree
pop
mov
icebp
inc
movs
lahf
mov
out
pop
fcmovb
inc
jo
addr16
mov
cmp
sete
jo
fstp
iret
jae
add
test
xlat
gs
test
dec
mov
loopne
retf
or
xchg
mov
inc
popf
xor
scas
mov
mov
sbb
pop
js
jl
cld
or
inc
int3
mov
inc
mov
dec
retf
xchg
in
mov
sbb
and
std
or
ret
pop
mov
pxor
repnz
inc
push
movs
inc
push
das
fidivr
and
xor
mov
jns
xor
in
dec
pop
cmps
ja
and
pop
sub
dec
add
push
mov
cmps
jmp
call
popa
pop
int
(bad)
xchg
pop
nop
jno
iret
mov
ds
dec
add
mov
push
cmp
push
add
or
dec
and
ffree
cmp
adc
or
test
daa
in
sti
outs
mov
hlt
jnp
jmp
out
int
sbb
add
scas
jmp
cdq
cdq
inc
ins
rol
push
lock
push
jle
cdq
jno
test
sbb
in
data16
xor
mul
out
fisub
out
sbb
mov
rol
cmp
ret
inc
mov
mov
loope
push
adc
pop
dec
shr
pop
jl
dec
(bad)
out
xor
sub
loopne
mov
pusha
cmp
pop
aaa
xor
shl
pop
sub
mov
pop
in
fmul
ins
dec
cwde
add
jle
push
xchg
mov
(bad)
into
mov
adc
inc
mov
push
pushf
rcr
xor
(bad)
pop
pop
scas
sbb
ja
xchg
lods
cwde
jp
(bad)
mov
out
int3
sub
ins
popa
mov
fucomi
(bad)
rcr
pop
inc
mov
ja
lods
jmp
faddp
dec
adc
aad
repnz
pop
enter
movs
xor
aaa
and
adc
push
cli
inc
out
sub
cmp
jle
mov
cmp
std
mov
scas
lods
ret
into
into
xchg
ret
ret
arpl
dec
cmp
stc
jb
in
pushf
mov
ror
cmps
es
cli
shr
add
retf
repz
shl
and
icebp
sti
push
js
cmp
out
xchg
sub
inc
out
adc
mov
retf
sti
sahf
pop
or
mov
neg
pop
mov
out
xchg
mov
scas
cs
fdivp
cmp
test
pushf
jnp
int
xchg
jp
rol
mov
mov
push
cdq
jge
movs
xchg
sub
xor
mov
sbb
jle
(bad)
lea
pop
fisttp
mov
sub
imul
es
std
(bad)
out
jnp
cmps
retf
push
(bad)
rcr
mov
pusha
adc
stos
xor
das
sti
xchg
ins
xchg
xchg
mov
jns
fucom
shl
div
adc
out
pop
rcl
(bad)
cmp
and
test
xchg
ins
sbb
push
adc
ss
fst
jge
and
jecxz
add
pop
adc
scas
(bad)
dec
inc
fstp
cmps
mov
sbb
xor
in
les
sbb
cli
ret
bnd
pop
std
xchg
mov
out
cmp
pop
xchg
stos
mov
test
sbb
and
push
push
xor
jne
imul
dec
and
aam
dec
(bad)
xchg
(bad)
into
xor
push
mov
inc
and
jl
push
cmp
pop
clc
das
adc
dec
pop
pop
cwde
cld
dec
mov
mov
xor
repnz
cs
adc
jo
nop
in
sbb
push
push
and
cmps
inc
outs
jo
(bad)
cmp
dec
idiv
xor
jb
repz
ret
shl
sbb
lods
pop
sti
add
mov
popf
jmp
inc
sub
in
sub
pop
enter
push
bound
fnsave
fidiv
jnp
inc
pop
clc
fidivr
pop
jne
jb
mov
lods
xor
rcr
jg
data16
daa
xchg
mov
loopne
cmp
or
xchg
imul
retf
dec
dec
cmps
adc
inc
out
mov
ret
cs
push
dec
inc
loopne
in
mov
and
add
xchg
ret
sti
mov
sbb
std
ds
mov
out
cwde
pop
xor
stos
inc
dec
pusha
xor
clc
add
arpl
adc
(bad)
fild
xor
adc
cmc
jnp
push
or
in
xor
inc
in
sbb
int
or
jnp
dec
movs
mov
mov
jne
int
dec
scas
xlat
int3
and
adc
dec
cs
mov
adc
out
mov
and
push
imul
mov
in
dec
sub
repnz
ret
mov
mov
aam
out
sbb
out
mov
dec
add
icebp
fistp
popf
mov
adc
stc
out
and
sbb
xor
add
xchg
cmc
bound
sbb
jl
test
sbb
cdq
outs
pop
jbe
inc
lahf
pop
in
push
pushf
(bad)
stc
imul
lods
sub
pop
cmc
ins
push
xor
cmp
sub
jnp
mov
sahf
ins
push
test
push
add
bound
aad
xor
fucomip
push
in
inc
mov
(bad)
dec
mul
pop
adc
push
(bad)
mov
aaa
sbb
(bad)
ins
inc
pop
inc
movs
or
stc
inc
test
ins
out
(bad)
jbe
nop
mov
mov
scas
or
mov
pushf
mov
or
int
xor
push
(bad)
aaa
sbb
popa
and
lods
sbb
xchg
sbb
retf
inc
mov
jle
call
enter
nop
xor
lds
imul
pop
sub
jae
clc
pop
jne
arpl
dec
mov
mov
out
lea
xchg
aaa
pop
dec
hlt
push
aad
mov
in
lods
pop
daa
pushf
pop
push
xchg
jle
mov
xor
fidiv
adc
xchg
inc
mov
in
ins
or
inc
add
popf
aad
push
dec
cmc
bnd
jge
das
call
test
loope
pop
scas
ins
push
or
sahf
sub
scas
lds
shl
jb
aaa
jne
jl
shl
inc
adc
out
xor
xor
out
jne
cmc
push
retf
adc
imul
mov
jbe
mov
pusha
xchg
call
jp
push
dec
pop
adc
inc
popf
popa
popf
(bad)
lock
xor
(bad)
ficom
into
in
jl
dec
push
xchg
sbb
xchg
lods
and
add
or
sub
sti
mov
xchg
in
push
dec
cmc
add
sub
sbb
add
mov
std
add
test
mov
not
dec
jmp
out
iret
cmp
cmps
bound
mov
sbb
loopne
cli
pop
sti
dec
xchg
sub
sar
pushf
cmps
push
pop
jmp
inc
out
fld
cmps
outs
cmc
outs
sub
outs
les
lea
jp
loop
pop
in
push
mov
and
mov
(bad)
loope
lds
call
sub
(bad)
into
inc
mov
mov
(bad)
(bad)
jb
pop
and
mov
popf
rcr
pop
leave
push
pop
push
add
and
and
xchg
lahf
sbb
std
out
adc
rol
dec
and
imul
cmp
(bad)
call
adc
mov
sub
xchg
nop
xchg
aas
push
cdq
or
dec
daa
sub
arpl
inc
lods
test
rol
and
shr
fcom
out
sbb
test
jb
repz
add
aas
push
stos
mov
fdivr
sub
jnp
lahf
pushf
push
jle
pop
nop
sub
xor
hlt
cmps
pop
ss
jp
lock
xchg
jbe
clc
sub
jp
push
cwde
rcl
pop
int
pop
jmp
inc
push
add
into
test
push
lds
jns
adc
mov
adc
aad
mov
mov
xchg
and
lods
jno
shl
push
xor
lea
cmp
or
xor
fldenv
mov
pop
call
fisub
into
pop
inc
pop
bound
std
cmp
sub
inc
out
test
inc
arpl
mov
cs
sbb
(bad)
or
fldcw
adc
repz
inc
add
sbb
lahf
(bad)
cli
push
adc
mov
das
push
dec
xchg
jae
inc
hlt
pop
cmp
test
xchg
pop
loope
jns
rcr
cmp
lea
das
imul
mov
xor
jno
adc
or
(bad)
or
aam
pop
xchg
test
stos
out
sub
sub
mov
sub
stc
or
add
jmp
xor
or
push
or
retf
sub
cli
mov
call
jae
cdq
dec
cmp
push
int3
mov
aas
je
mov
mov
sub
mov
push
or
mov
test
lds
xchg
and
mov
cmp
dec
repz
das
add
icebp
dec
icebp
inc
inc
adc
push
inc
int3
mov
inc
add
mov
repnz
stos
ja
ror
push
add
sbb
dec
dec
cld
nop
or
sub
mov
and
xor
pop
retf
push
push
mov
in
test
loop
sub
or
imul
ss
add
retf
mov
cmp
push
jle
popa
or
ror
repz
ficom
(bad)
sub
jl
into
mov
push
vmovaps
and
push
or
fidivr
mov
or
jp
cmc
fldcw
cli
imul
xlat
popf
add
push
xchg
push
sbb
inc
jge
and
pusha
cmp
mov
lods
mov
stos
dec
loopne
aas
pop
popa
inc
rcr
cmp
and
imul
nop
xor
push
ja
pop
jnp
int
mov
mov
repz
cdq
pop
mov
jnp
mov
repnz
out
add
or
outs
out
jmp
aad
sub
inc
es
fs
pop
fwait
gs
mov
out
inc
movs
and
fiadd
js
sti
push
xchg
das
xchg
or
xor
jno
popa
ror
mov
jmp
lds
mov
es
mov
or
repz
out
jmp
imul
push
xor
xor
and
sbb
lods
inc
jne
(bad)
retf
or
jbe
push
mov
pop
fs
add
idiv
aas
lock
rcl
push
addr16
sub
dec
mov
out
push
cmp
sbb
mov
jle
inc
push
je
fimul
in
and
or
add
sbb
sbb
add
js
je
in
mov
fsubr
aam
add
je
into
jno
iret
add
call
pop
mov
adc
pop
rol
pop
gs
mov
out
jmp
push
mov
sub
(bad)
scas
int3
and
lds
dec
stos
shl
test
rol
out
cmp
mov
and
(bad)
mov
mov
(bad)
jbe
pop
fild
jecxz
into
xchg
loopne
inc
push
(bad)
int3
push
push
in
xchg
adc
sub
fnsave
push
push
and
fwait
adc
mov
shl
les
lods
cs
jle
push
fidiv
mov
retfw
and
and
sar
ins
fwait
mov
sub
(bad)
ins
mov
imul
pushw
and
jnp
lds
xchg
pop
push
add
int
nop
sub
adc
mov
jmp
rol
xor
pop
mov
pop
inc
inc
aam
lock
dec
adc
addr16
into
(bad)
mov
out
test
test
pop
inc
jnp
lock
enter
cmp
mov
mov
mov
push
mov
lods
mov
mov
push
scas
fstp
stc
or
pop
adc
int3
fdivr
mov
fisubr
adc
jns
(bad)
mov
jle
arpl
mul
mov
inc
lods
sbb
imul
xchg
xchg
xchg
mov
into
xor
out
out
cwde
ins
push
movs
inc
adc
cmp
scas
sub
push
shr
cmp
(bad)
fisubr
lods
mov
adc
and
xor
retf
jo
add
jg
mov
jb
fiadd
fidiv
push
mov
xchg
push
pop
std
push
xor
mov
fs
fisttp
or
inc
ds
or
scas
out
bound
inc
mov
imul
jno
inc
div
popf
div
push
cli
xor
dec
cmp
sbb
es
add
loope
test
sub
add
or
dec
adc
push
aad
data16
xor
mov
int
mov
cmp
xchg
push
scas
arpl
lods
loope
(bad)
popf
push
jns
push
xchg
pop
push
sub
inc
es
outs
mov
sbb
mov
outs
inc
or
inc
sub
push
push
mov
mov
add
xchg
scas
dec
push
aam
leave
(bad)
dec
sub
or
sub
xor
pop
pop
mov
jmp
inc
add
xchg
scas
imul
fiadd
mov
loope
and
pop
inc
sbb
cli
loop
cmp
cmp
jmp
add
ret
pop
int
cmp
in
pop
jnp
cmp
inc
and
int
in
or
pop
pop
inc
push
push
loop
sbb
sahf
jae
xor
sub
push
out
or
jmp
pop
mov
adc
sub
repnz
mov
cmp
or
popf
push
push
inc
scas
(bad)
jge
fadd
adc
and
retf
retf
push
mov
add
bound
sti
sahf
and
lods
(bad)
push
adc
fdiv
mov
cli
daa
xchg
mov
pop
mov
push
xchg
sbb
jno
push
iret
xchg
pop
inc
jle
das
(bad)
std
or
adc
je
mov
dec
repz
(bad)
std
inc
loop
movs
dec
rcl
mov
cli
imul
cmc
sbb
cmp
stos
sar
std
mov
and
cmp
cmp
cmp
scas
mov
fwait
pop
fcom
scas
or
inc
or
movs
pop
nop
popa
or
fwait
icebp
inc
cmp
cmp
mov
in
aad
jbe
push
test
retfw
adc
push
out
stc
in
aam
xor
movs
stos
dec
xor
ds
sub
mov
jge
leave
ret
outs
mov
rcr
iret
cmc
inc
aas
mov
adc
mov
enter
out
js
mov
xchg
in
xchg
mov
xchg
movs
test
adc
pusha
xor
xor
(bad)
add
sbb
mov
ins
push
popa
stc
fs
int3
or
push
repz
xor
push
mov
lock
mov
cli
cmp
cmp
adc
mov
cmp
add
lods
je
out
es
push
(bad)
lahf
out
jnp
jo
and
jp
dec
adc
lock
xchg
call
imul
mov
addr16
push
sbb
xor
scas
imul
outs
cli
sbb
sub
inc
ss
stos
(bad)
fiadd
add
icebp
inc
mov
cwde
cmp
cmp
imul
ins
out
sub
xor
jo
dec
fst
push
dec
rol
jmp
push
pop
pop
mov
mov
lods
xor
test
mov
clc
stc
aas
and
data16
ja
dec
and
cmp
xor
cmp
mov
mov
inc
mov
out
and
adc
adc
pop
cmp
idiv
push
mov
call
xor
inc
push
mov
adc
sub
shr
(bad)
cmp
jle
imul
shl
sar
push
add
scas
inc
cli
stos
xchg
sub
sbb
and
nop
jl
inc
(bad)
jbe
jl
xor
ss
xor
in
ret
and
jl
lods
add
mov
push
pop
mov
dec
aam
les
call
pop
cdq
sbb
movs
and
jo
scas
cmp
das
rol
cmps
pop
mov
test
pop
mov
mov
xchg
ss
jb
sub
inc
xchg
push
idiv
mov
jle
sub
xchg
pusha
xor
icebp
mov
push
add
push
push
push
inc
inc
jecxz
cmp
xchg
data16
and
sbb
pop
test
sbb
adc
adc
jno
ret
mov
std
jno
repz
jae
and
jmp
icebp
pusha
(bad)
push
pop
mov
fld
cli
fs
cmps
xchg
shl
mov
addr16
push
cmp
adc
pushf
into
in
cmp
jg
sbb
cmp
rol
lahf
lods
imul
mov
stos
nop
xor
nop
or
(bad)
cdq
mov
mov
lods
xlat
dec
add
(bad)
pusha
enter
and
xor
cdq
mov
xchg
jnp
sar
daa
inc
mov
(bad)
adc
mov
push
call
mov
mov
ss
cmp
xor
sbb
and
cmps
sbb
jo
cdq
inc
mov
imul
push
icebp
mov
jnp
(bad)
jb
jmp
dec
pop
dec
xchg
test
xor
int
or
sbb
loopne
xchg
push
addr16
(bad)
addr16
sbb
mov
xchg
and
mov
adc
inc
das
cmps
pop
outs
xor
in
pop
xor
cmp
inc
into
jmp
inc
sub
outs
js
in
xchg
or
stc
jns
inc
ja
pushf
shr
and
jb
test
test
dec
and
fs
sub
cmp
aam
in
movq
stos
cmps
fwait
xchg
pop
(bad)
xlat
adc
rcr
dec
dec
inc
pop
mov
adc
pusha
les
out
mov
lahf
jmp
lods
and
cmp
or
mov
data16
jg
leave
and
ds
inc
gs
cwde
pop
push
add
es
mov
pop
sub
in
fdivr
add
inc
inc
dec
in
xchg
push
dec
pop
jo
aaa
lahf
xlat
sti
jae
pop
pop
sbb
rcpps
call
imul
ss
mov
inc
aas
pop
mov
or
add
xchg
fs
ret
rol
mov
ins
int3
or
stc
and
adc
movs
pop
xchg
popf
dec
xchg
sbb
cmp
adc
das
mov
mov
adc
retf
or
inc
push
add
xor
imul
pop
in
mov
sar
xchg
dec
inc
iret
sub
rcl
cmps
pop
ss
je
xchg
pop
out
test
jbe
repnz
pop
retf
daa
jmp
xchg
sbb
int
push
and
mov
and
xchg
dec
inc
push
scas
stos
mov
ins
movs
mov
xchg
js
loopne
pop
cs
or
dec
out
cmp
icebp
in
cli
dec
lds
ret
mov
pop
or
test
pop
test
pop
call
push
adc
cmp
popf
scas
jo
mov
out
push
ror
xchg
ins
icebp
or
sub
int
mov
xlat
mov
cmc
das
mov
mov
bound
cmp
push
shr
xor
sahf
cli
fld
shl
mov
fcom
mov
or
mov
adc
es
outs
arpl
(bad)
rol
inc
in
ror
mov
mov
movs
jl
ds
add
sub
aad
add
sub
lock
into
mov
jmp
pop
jg
fadd
fcomp
sub
ret
push
out
dec
mov
in
jno
push
jle
(bad)
sbb
inc
inc
mov
pop
es
sub
lock
mov
fst
rcl
pop
nop
dec
jae
in
add
sar
xchg
data16
clc
(bad)
scas
pop
in
push
inc
push
das
bnd
dec
ja
or
mov
mov
mov
mov
ds
outs
xchg
test
sub
out
(bad)
and
cmc
mov
(bad)
mov
sbb
ss
dec
shl
cdq
jnp
outs
or
stos
ins
repnz
repnz
pop
cmc
ret
mov
mov
pop
mov
sbb
movs
sahf
mov
lods
and
shr
pop
sub
aas
jl
sub
fwait
outs
dec
mov
jne
push
jl
imul
loopne
loope
mov
fdivr
push
cwde
cli
push
jl
mov
pop
lods
ins
(bad)
mov
cs
dec
add
(bad)
ins
mov
pusha
cmps
dec
xchg
pop
(bad)
loopne
jmp
je
(bad)
into
loope
or
out
xor
lea
(bad)
es
push
mov
shr
push
inc
dec
mov
sub
inc
mov
lods
leave
xor
imul
retf
cmp
inc
pop
lods
pop
xchg
fwait
jmp
aam
push
shr
mov
pop
sub
fwait
xor
aaa
push
lahf
test
xchg
jns
xor
xor
inc
xchg
dec
push
xchg
mov
mov
jg
imul
mov
clc
call
(bad)
cmc
stos
test
sbb
icebp
out
movs
je
call
sbb
pusha
popa
fs
mov
pusha
jl
stos
add
idiv
jbe
in
iret
jl
aaa
stos
sub
in
div
or
popf
adc
push
rcl
cmp
and
cmc
ja
jp
lods
repnz
fs
xor
out
loop
sbb
cmps
test
icebp
or
dec
dec
fistp
imul
xchg
cmps
xlat
arpl
inc
je
repz
xor
(bad)
(bad)
mov
jmp
push
cmc
sar
jg
sub
in
inc
out
lods
jl
mov
das
dec
pop
push
in
push
sub
clc
in
lock
jnp
cli
mov
mov
scas
jge
stos
not
sbb
int
push
retf
inc
adc
xor
outs
test
mov
cdq
sub
jns
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
push
gs
cs
jb
ja
outs
addr16
imul
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
inc
inc
push
inc
inc
shl
xadd
int3
cmpps
(bad)
repnz
pinsrw
pextrw
shufps
rdrand
int3
bswap
repnz
bswap
repnz
(bad)
repz
lmsw
int3
lar
int3
lsl
int3
clts
repz
mov
int3
mov
int3
mov
int3
mov
int3
mov
int3
(bad)
repz
mov
int3
(bad)
repz
movaps
int3
movaps
int3
jo
repz
jb
repz
je
repz
jbe
repz
jle
repz
push
repz
pop
repz
cpuid
repz
bt
int3
shld
shld
int3
(bad)
repz
(bad)
repz
shrd
shrd
int3
pavgb
int3
psraw
int3
psrad
int3
pavgw
int3
pmulhuw
int3
pmulhw
int3
(bad)
repz
movntq
out
int3
pmaxsw
int3
pxor
int3
(bad)
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
pushf
ds
mov
add
fild
add
xor
add
pop
push
add
add
add
add
inc
add
daa
pop
add
mov
add
mov
add
cmp
add
popa
or
add
or
add
pop
add
repnz
add
leave
pop
add
inc
or
add
or
add
or
add
or
add
add
add
add
fadd
add
add
add
xchg
add
scas
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
out
add
add
add
add
add
add
add
add
ret
add
add
add
add
push
add
add
add
add
add
cmp
add
add
adc
add
add
add
add
add
add
add
add
push
or
add
add
add
add
add
add
xor
add
sub
add
add
sub
add
add
add
bound
popa
add
popa
add
add
add
add
add
add
xor
bound
sub
add
add
bound
popa
add
popa
add
add
add
add
add
add
xor
bound
sub
add
add
or
add
arpl
popa
add
add
add
add
add
add
xor
bound
sub
add
add
add
sbb
add
add
arpl
popa
add
add
add
add
add
add
xor
bound
sub
add
add
add
sub
add
add
arpl
popa
add
add
add
add
add
add
xor
bound
sub
add
add
add
aaa
add
and
add
arpl
popa
add
add
add
add
add
add
xor
bound
sub
add
add
add
bound
popa
add
popa
add
add
add
add
add
add
xor
bound
sub
add
add
sahf
push
add
and
add
arpl
popa
add
add
add
add
add
add
xor
bound
sub
add
add
add
add
arpl
popa
add
add
add
add
add
add
xor
bound
sub
add
add
add
add
and
add
arpl
popa
add
add
add
add
add
add
xor
bound
sub
add
add
add
add
and
add
arpl
popa
add
add
add
add
add
add
xor
bound
sub
add
add
add
add
and
add
arpl
popa
add
add
add
add
add
add
xor
bound
sub
add
add
add
add
and
popa
add
popa
add
add
add
add
add
add
xor
bound
sub
add
add
bound
popa
add
popa
add
add
add
add
add
add
xor
bound
sub
add
add
add
mov
add
add
arpl
popa
add
add
add
add
add
add
xor
bound
sub
add
add
add
ret
add
and
add
arpl
popa
add
add
add
add
add
add
xor
bound
sub
add
add
add
rol
add
add
arpl
popa
add
add
add
add
add
add
xor
bound
sub
add
add
add
fild
add
add
arpl
popa
add
add
add
add
add
add
xor
bound
sub
add
add
cmc
in
add
and
add
arpl
popa
add
add
add
add
add
add
xor
bound
sub
add
add
add
add
arpl
popa
add
add
add
add
add
add
xor
bound
sub
add
add
add
or
add
add
arpl
popa
add
add
add
add
add
add
xor
bound
sub
add
add
add
push
add
and
add
arpl
popa
add
add
add
add
add
add
xor
bound
sub
add
add
add
bound
popa
add
popa
add
add
add
add
add
add
xor
bound
sub
add
add
add
add
arpl
popa
add
add
add
add
add
add
xor
bound
sub
add
add
bound
popa
add
popa
add
add
add
add
add
add
xor
bound
sub
add
add
add
bound
popa
add
popa
add
add
add
add
add
add
xor
bound
sub
add
add
add
add
add
arpl
popa
add
add
add
add
add
add
xor
bound
sub
add
add
add
add
and
add
arpl
popa
add
add
add
add
add
add
xor
bound
sub
add
add
add
add
and
add
arpl
popa
add
add
add
add
add
add
xor
bound
sub
add
add
push
xchg
add
add
arpl
popa
add
add
add
add
add
add
xor
bound
sub
add
add
add
add
arpl
popa
add
add
add
add
add
add
xor
bound
sub
add
add
add
mov
add
arpl
popa
add
add
add
add
add
add
xor
bound
sub
add
add
add
add
and
add
arpl
popa
add
add
add
add
add
add
xor
bound
sub
add
add
add
mov
add
arpl
popa
add
add
add
add
add
add
xor
bound
sub
add
add
add
int3
add
and
popa
add
popa
add
add
add
add
add
add
xor
bound
sub
add
clc
fld
add
add
arpl
popa
add
add
add
add
add
add
xor
bound
sub
add
xor
out
add
and
add
arpl
popa
add
add
add
add
add
add
xor
bound
sub
add
xor
fcomip
add
and
add
arpl
popa
add
add
add
add
add
add
xor
bound
sub
add
xor
iret
add
add
add
arpl
popa
add
add
add
add
add
add
xor
bound
sub
add
xor
rcl
add
add
arpl
popa
add
add
add
add
add
add
xor
bound
sub
add
xor
scas
pop
add
and
add
arpl
popa
add
add
add
add
add
add
xor
bound
sub
add
xor
add
add
arpl
popa
add
add
add
add
add
add
xor
bound
sub
add
add
bound
popa
add
popa
add
add
add
add
add
add
xor
bound
sub
add
aaa
add
add
and
add
arpl
popa
add
add
add
add
add
add
xor
bound
sub
add
cmp
jo
add
and
add
arpl
popa
add
add
add
add
add
add
xor
bound
sub
add
cmp
pusha
add
and
popa
add
popa
add
add
add
add
add
add
xor
bound
sub
add
add
add
arpl
popa
add
add
add
add
add
add
xor
bound
sub
add
add
popa
add
popa
add
add
add
add
add
add
xor
bound
sub
add
pop
add
add
arpl
popa
add
add
add
add
add
add
xor
bound
sub
add
popf
add
and
add
arpl
popa
add
add
add
add
add
add
xor
bound
sub
add
stos
add
and
add
arpl
popa
add
add
add
add
add
add
xor
bound
sub
add
mov
add
arpl
popa
add
add
add
add
add
add
xor
bound
sub
add
mov
and
add
arpl
popa
add
add
add
add
add
add
xor
bound
sub
add
aam
add
add
arpl
popa
add
add
add
add
add
add
xor
bound
sub
add
loop
add
add
arpl
popa
add
add
add
add
add
add
xor
bound
sub
add
lock
and
add
arpl
popa
add
add
add
add
add
add
xor
bound
sub
add
inc
add
bound
popa
add
popa
add
add
add
add
add
add
xor
bound
sub
add
add
bound
popa
add
popa
add
add
add
add
add
add
xor
bound
sub
add
add
add
bound
popa
add
popa
add
add
add
add
add
add
xor
bound
sub
add
add
add
add
add
arpl
popa
add
add
add
add
add
add
xor
bound
sub
add
add
add
add
and
add
arpl
popa
add
add
add
add
add
add
xor
bound
sub
add
add
add
add
and
add
arpl
popa
add
add
add
add
add
add
xor
bound
sub
add
add
dec
push
add
and
popa
add
popa
add
add
add
add
add
add
xor
bound
sub
add
add
push
add
and
popa
add
popa
add
add
add
add
add
add
xor
bound
sub
add
add
add
and
popa
add
popa
add
add
add
add
add
add
xor
bound
sub
add
add
jae
add
inc
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
jne
jno
(bad)
das
jecxz
ins
into
xchg
cdq
rcr
nop
dec
enter
push
jbe
je
rcl
adc
addr16
test
inc
xor
sahf
pop
icebp
cld
(bad)
and
jl
adc
aam
in
dec
(bad)
gs
jmp
cld
fstp
inc
mov
jb
push
push
(bad)
out
(bad)
ss
ds
xor
push
jle
mov
or
aam
call
sub
sub
mov
aas
call
cdq
jmp
pop
rcl
mov
dec
in
mov
ins
cwde
and
jg
cmp
aad
in
mov
int3
call
test
mov
push
sub
ret
xchg
mov
outs
clc
outs
push
ss
or
add
gs
mov
jae
pop
std
stos
mov
mov
jae
lods
jmp
push
in
sub
std
das
lea
adc
lea
inc
(bad)
std
sub
push
hlt
sub
adc
sub
jle
cmps
popa
mov
mov
push
or
adc
out
data16
jl
jbe
jmp
mov
pusha
std
mov
and
repnz
mov
push
ins
scas
mov
mov
repz
shl
fincstp
mov
clc
push
or
cmp
mov
xchg
out
jmp
(bad)
dec
repz
mov
jae
jl
sub
mov
gs
mov
fisttp
jle
jns
test
or
mov
sar
adc
outs
mov
pop
adc
xchg
sbb
dec
test
jno
mov
mov
imul
dec
out
sahf
nop
jge
or
push
int
cmp
fistp
jecxz
es
cmps
clc
neg
popa
add
adc
mov
imul
sbb
out
xchg
sub
je
aaa
push
int3
cli
inc
cmp
mul
fmul
aas
cmp
pop
scas
cmps
and
push
loopne
xor
ds
gs
jno
ds
mov
xchg
or
push
add
(bad)
std
retf
inc
pushf
push
sub
push
mov
inc
fbstp
arpl
repz
fwait
(bad)
push
fwait
push
and
retf
stc
lahf
div
out
pop
add
cmp
mov
int3
jmp
in
mov
jnp
xor
xor
(bad)
cs
add
sti
push
inc
pop
jmp
ftst
stc
icebp
add
jmp
pop
(bad)
je
inc
mov
pop
outs
cmp
xchg
stos
fisubr
jns
cmp
fnstenv
aas
cmp
outs
push
cwde
cwde
(bad)
push
cwde
inc
dec
jecxz
and
cmc
sbb
gs
cmp
xor
mov
popf
enter
jp
push
jb
jmp
mov
mov
and
ficom
inc
jg
or
dec
lahf
xchg
mov
sbb
mov
addr16
in
jp
mov
fdivr
and
cld
pushf
xlat
aaa
in
fisttp
ins
jmp
ins
(bad)
xchg
sbb
dec
ins
vunpcklps
ror
pop
inc
mov
and
sub
and
mov
xchg
in
mov
push
imul
mov
loope
iret
lock
sub
fstp
in
out
into
in
xor
pop
fabs
test
pop
mov
js
jmp
xor
lods
jns
xor
repnz
or
cmps
into
inc
mov
mov
mov
retf
ins
fidivr
jbe
test
out
inc
aad
xor
jmp
jno
pop
into
mov
mov
(bad)
mov
add
mov
mov
mov
xor
nop
adc
mov
clc
sub
push
push
push
xchg
mov
xchg
pop
adc
shr
dec
outs
enter
cmc
dec
pop
push
or
inc
xchg
cmp
(bad)
xor
mov
out
ret
xchg
push
ja
mov
jmp
jle
sbb
mov
push
mov
scas
jb
fisub
xor
pop
mov
sub
fdivp
std
jo
add
ja
rcl
out
cmp
movs
int3
mov
popf
call
movs
cwde
jb
adc
push
cld
push
in
adc
or
neg
mov
test
jno
dec
movs
sbb
cdq
out
(bad)
imul
cli
xlat
sub
(bad)
fs
mov
rol
xchg
stos
jmp
push
and
or
cmp
into
nop
retf
das
sub
adc
mov
shl
inc
jmp
cmp
cli
sub
and
gs
jp
pushf
in
adc
in
in
cdq
sbb
(bad)
mov
mov
popa
ss
shr
stc
mov
cmp
lock
fdivr
sub
cmp
xor
sub
pop
movs
das
inc
push
adc
fcomp
mov
test
inc
cmp
inc
ficom
(bad)
aas
mov
push
shr
xor
rcl
stc
ret
mov
test
xor
cli
cmp
pop
shl
adc
pop
rol
pop
inc
ja
out
rcl
dec
xchg
push
jmp
inc
sub
jo
iret
hlt
daa
mov
cli
pop
loop
and
xchg
int
out
and
add
jno
mov
leave
pop
(bad)
sbb
addr16
mul
push
ds
adc
movs
xchg
mov
stos
inc
jno
sub
pop
push
(bad)
and
jmp
and
shl
jo
(bad)
in
(bad)
add
daa
mov
mov
inc
mov
mov
fmul
pop
jecxz
outs
pop
(bad)
and
(bad)
clc
into
test
aaa
les
push
xor
ins
out
sub
push
dec
add
mov
push
cld
pop
xchg
and
jb
mov
test
cmp
jb
xchg
cmovs
outs
icebp
or
test
int3
call
(bad)
lahf
push
ja
xchg
enter
dec
iretw
out
loop
xchg
je
bound
inc
jns
and
and
jbe
fistp
arpl
repz
push
lods
push
das
(bad)
stos
pop
pop
ds
pop
mov
loope
sti
lds
imul
fcom
sbb
jns
sbb
cmc
popf
or
scas
aad
retf
pop
gs
or
jno
push
adc
xor
dec
psubusb
cli
das
and
cmp
int3
mov
dec
jge
test
xor
fwait
imul
mov
jl
(bad)
ror
mov
sub
and
ins
mov
xchg
movs
inc
xor
push
ret
aas
test
subps
ds
clc
and
sahf
xchg
jae
push
nop
into
fstp
lods
xor
cmp
xchg
add
jo
push
retf
push
ins
dec
mov
cmps
icebp
sar
movs
pop
les
hlt
add
and
push
adc
adc
xor
mov
ds
fnsave
push
fmul
xchg
jge
xor
dec
sub
rcr
shl
stos
mov
push
inc
in
push
pop
inc
mov
dec
mov
xchg
sub
xchg
inc
push
jp
imul
iret
jb
loope
inc
fs
dec
pusha
ins
mov
test
outs
stos
jbe
retf
and
xchg
jns
sbb
std
push
icebp
pop
bound
popa
test
(bad)
push
arpl
and
or
inc
cmp
pusha
mov
jge
popa
test
and
jg
sbb
fild
out
sti
mov
pop
mov
jmp
push
add
and
cmps
sbb
mov
addr16
loope
inc
mov
dec
lock
dec
scas
stos
mov
popa
inc
nop
addr16
mov
dec
push
ja
sahf
sahf
xchg
leave
push
ss
sbb
push
pop
movs
mov
fild
mov
xchg
mov
jle
mov
movs
xchg
icebp
jns
(bad)
mov
aaa
out
xor
inc
jl
cmp
mov
cmp
das
mov
icebp
pop
jecxz
sbb
inc
lock
xor
cmp
sbb
popf
repnz
mulps
pop
loope
xor
mov
out
sub
call
mov
mov
sti
(bad)
out
push
or
(bad)
jecxz
cmp
cwde
xor
sahf
cs
cmp
pop
or
xor
inc
xor
ja
call
mov
repnz
mov
inc
clc
icebp
pusha
out
xlat
mov
lds
aam
mov
cmp
dec
pushf
mov
popf
add
jnp
jl
fld
mov
jge
jp
inc
mov
je
push
cld
jp
and
push
(bad)
jp
adc
inc
mov
lock
aas
and
fild
rol
loop
and
jge
cmp
sbb
imul
add
xchg
das
mov
outs
cmp
imul
icebp
imul
and
mov
(bad)
lods
mov
and
rol
push
add
push
xchg
cld
test
pop
xchg
test
dec
cmp
loop
test
add
mov
cmp
or
push
jle
call
or
mov
enter
ja
push
arpl
adc
imul
and
(bad)
pop
cmp
add
js
cdq
pop
sub
sub
cmps
pop
inc
mov
arpl
sub
jp
pusha
mov
in
and
fcomp
gs
jge
inc
(bad)
pop
adc
(bad)
mov
dec
cmps
ds
cmc
rcl
cmps
mov
xchg
push
xchg
loop
mov
mov
xor
mov
mov
daa
xchg
xor
shr
adc
cmp
in
or
sbb
rol
fnsave
js
mov
add
ds
cmps
push
rol
sbb
ds
xchg
in
mov
xor
scas
jns
repz
add
adc
sub
push
cmp
or
into
fs
sbb
mov
adc
mov
mov
and
jb
cwde
dec
mov
and
lods
fsubrp
fisubr
inc
lea
les
sub
shl
mov
div
sub
sub
adc
pop
xor
push
je
mov
popa
cmp
pop
aad
adc
pop
jmp
inc
cmps
add
dec
jg
(bad)
frstor
add
ja
arpl
xor
scas
add
leave
and
pop
inc
push
xor
mov
jl
and
mov
rcl
sahf
ja
mov
sub
jnp
mov
cmp
sub
ja
retf
loopne
in
mov
pop
pop
movs
xor
sub
aad
cld
and
movs
loop
push
xchg
lock
push
push
cmp
fsub
repnz
cmp
out
and
pop
jmp
jbe
jmp
jnp
xor
sbb
in
in
int
and
add
push
sub
adc
sub
loopne
jg
inc
dec
lock
cld
andnps
dec
jp
ror
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
fmul
add
lock
cmp
ins
cmp
in
out
call
mov
cwde
pushf
icebp
rcr
cmp
shl
jmp
ja
xchg
lock
mov
popf
adc
ja
dec
(bad)
fwait
shr
xor
xlat
inc
jae
sub
hlt
popf
loopne
mov
(bad)
pushf
push
add
jb
dec
pop
xchg
stos
jo
pushf
cmp
test
aas
sbb
adc
mov
retf
jp
adc
sub
addr16
jo
stos
push
inc
out
addr16
pop
jno
ins
mov
retf
hlt
pushf
mov
scas
nop
and
cmp
dec
lods
mov
or
xchg
xor
int
dec
aad
inc
fwait
push
mov
jge
in
add
xchg
push
aam
add
mov
mov
and
dec
sbb
xchg
cdq
js
es
cmps
scas
wbinvd
jmp
or
addr16
int
xchg
aas
push
push
(bad)
and
xchg
jae
adc
xor
(bad)
jne
cmp
es
push
push
hlt
mov
test
movs
in
xchg
shl
cmps
jae
shr
aad
imul
in
inc
jp
int
inc
ror
imul
gs
fcom
imul
lahf
fmul
cmps
xchg
mov
xchg
into
fmul
loop
inc
out
jae
cmp
fild
leave
mov
into
test
pop
fsub
cmp
inc
loopne
rcl
outs
pop
ins
bnd
push
xor
sbb
fild
js
std
outs
dec
cli
movs
jge
sbb
and
fistp
or
mov
jmp
xchg
dec
dec
mov
xchg
mov
out
out
mov
cmp
inc
mov
adc
push
cmp
inc
xor
dec
push
(bad)
pop
dec
pop
imul
mov
jmp
sti
mov
adc
cmp
jle
pushf
inc
stos
test
mov
xchg
or
push
and
sub
xchg
sahf
pop
and
(bad)
int3
mov
pushf
mov
neg
inc
lahf
jnp
and
aad
in
pop
addr16
pop
aam
data16
retf
or
fild
lahf
fisub
int
xchg
pop
and
out
push
jg
scas
movs
or
jno
aaa
(bad)
(bad)
popf
rol
xchg
sub
pop
or
dec
inc
mov
xchg
std
pop
scas
test
aas
(bad)
(bad)
sti
sar
jl
sbb
sub
sbb
mov
cld
cmp
xchg
ret
pop
fwait
call
inc
into
repnz
mov
fbstp
pop
(bad)
enter
pop
or
dec
mov
mov
fyl2x
retf
cmp
xchg
cli
adc
mov
test
aam
pop
out
ficomp
xchg
pop
sahf
mov
jp
xchg
mov
arpl
cmp
jno
lods
loope
jb
out
lahf
push
movs
inc
idiv
pop
mov
jns
mov
pop
push
push
(bad)
cdq
popf
xor
(bad)
sub
jecxz
mov
cmp
aaa
or
cs
mov
cld
or
mov
mov
in
mov
fisubr
xlat
cdq
cwde
fist
mov
call
lods
(bad)
in
jb
mov
pop
cs
adc
adc
ds
mov
xchg
adc
test
les
cmp
imul
or
and
or
enter
pop
cdq
movs
imul
fdivr
das
enter
mov
call
and
adc
dec
mov
mov
push
add
jno
loope
pushf
add
mov
fst
lods
fist
push
sub
adc
sbb
sub
cli
mov
cmp
repnz
sti
cmp
push
mov
rcl
sbb
das
add
lock
push
in
adc
cmp
sub
or
shr
inc
js
lods
ins
sahf
sahf
and
fcom
mov
shr
retf
mov
mov
imul
(bad)
in
out
ins
fistp
imul
es
or
jle
jbe
push
and
dec
lods
jno
pop
mov
mov
stos
cld
or
popf
push
test
lahf
xchg
or
stc
lock
inc
outs
data16
nop
movs
jg
jno
push
mov
lds
shl
fidivr
cmp
enter
adc
ret
push
sbb
jle
mov
add
add
test
adc
jl
jecxz
push
loopne
out
pop
mov
pop
inc
les
cmps
cmp
and
(bad)
outs
lahf
xor
fwait
bound
jne
dec
push
in
(bad)
xchg
scas
cmps
icebp
mov
mov
rcl
lahf
js
out
jae
dec
(bad)
pop
call
xchg
cmp
jbe
maskmovq
imul
sub
in
adc
push
mov
cmp
(bad)
xchg
jno
(bad)
push
lea
dec
jns
jmp
xchg
dec
cmp
or
dec
pop
and
sub
mov
lock
imul
sbb
test
aam
mov
test
ret
dec
(bad)
pop
sub
xor
sbb
or
mov
jmp
lds
cmp
dec
ins
dec
data16
or
mov
jns
aam
and
inc
pop
imul
retf
std
jge
push
mov
mov
ja
jne
jmp
mov
and
sbb
push
out
leave
test
sti
(bad)
fcom
popa
sti
add
mov
inc
pusha
dec
xlat
addr16
lahf
clc
mov
in
call
pop
add
aas
sahf
cmp
in
aas
ja
call
int
and
adc
add
dec
scas
nop
jg
fdiv
xor
xor
sub
ret
aaa
xchg
mov
mov
ret
fistp
push
daa
inc
mov
push
cmp
mov
iret
ins
iret
add
xchg
jnp
dec
aas
fistp
xor
dec
fwait
adc
je
cdq
and
sbb
out
daa
add
ficomp
loopne
movs
cs
in
fstp
xchg
pop
jmp
retf
jo
cmp
cmp
mov
sahf
xor
adc
aad
xor
mov
icebp
cli
pop
xchg
jge
dec
fadd
rcl
cmp
push
mov
sbb
out
xor
mov
jle
add
int3
sahf
cmps
and
sub
add
imul
cmp
cmps
xchg
(bad)
in
xchg
xor
mov
or
and
int
mov
movs
xor
sbb
fwait
shl
sub
es
fcomp
call
mov
retf
mov
loopne
aam
or
mov
and
test
das
lods
or
xchg
mov
jb
adc
fadd
xor
(bad)
stos
xchg
push
dec
icebp
mov
sbb
sbb
sub
lahf
les
inc
mov
sub
out
xchg
outs
sub
add
fnstsw
push
repnz
inc
mov
icebp
or
lahf
add
loop
(bad)
js
(bad)
add
add
push
fadd
lock
mov
retf
sar
jle
enter
jp
psadbw
sti
add
mov
xchg
repnz
jecxz
xchg
pusha
test
xchg
mov
into
inc
push
cmp
popa
ins
arpl
push
pop
and
mov
shr
inc
mov
jnp
daa
mov
adc
xchg
mov
(bad)
mov
xchg
mov
jbe
shl
inc
add
rcr
jne
les
cmps
xor
adc
xor
push
ret
sbb
cmc
pop
lods
inc
mov
lds
mov
dec
and
call
(bad)
(bad)
cli
push
mov
cmps
jb
popa
push
fs
mov
lock
stos
js
cdq
popa
or
mov
icebp
call
les
stos
aaa
nop
cdq
push
jmp
mov
mov
push
adc
push
into
aaa
stc
pop
inc
mov
stc
jns
(bad)
xchg
retf
imul
jecxz
mov
stos
retf
or
push
popa
inc
pop
lahf
cdq
into
sub
jle
es
ins
lods
cmc
dec
lods
rcr
sahf
pop
hlt
imul
scas
movs
xlat
add
popa
mov
out
stos
mov
cmp
fnstenv
pop
fsub
adc
movs
shl
push
rcl
jl
iret
inc
cmp
hlt
jno
inc
fadd
nop
scas
jns
jecxz
cmps
call
pop
sub
ja
daa
mov
pop
mov
rcr
in
and
imul
(bad)
mov
xchg
dec
std
add
pop
int3
inc
movs
test
adc
add
ja
or
daa
(bad)
clc
call
adc
call
pop
hlt
xor
inc
out
add
xor
jae
sub
cmp
mov
xor
adc
andnps
ins
jmp
fmul
outs
rcl
add
lods
xlat
sub
push
enter
xlat
or
and
js
aad
sbb
mov
push
dec
lods
mov
addr16
and
shl
ss
movs
mov
imul
mov
dec
std
xchg
xchg
repz
addr16
jmp
push
or
lock
ds
add
mov
movs
xor
int
pop
mov
jnp
cwde
mov
icebp
shl
or
test
cmp
pushf
and
mov
arpl
bound
not
ror
ror
xchg
dec
jo
cmps
aas
jnp
mov
mov
pop
mov
test
fsub
pop
jnp
mov
adc
leave
push
sub
aaa
add
out
mov
jecxz
dec
imul
ror
movs
push
and
lods
imul
sbb
and
jno
mov
mov
cmp
pop
adc
jbe
dec
dec
cmps
pop
push
call
xor
add
xor
ins
lea
xor
fldenv
pop
stos
sar
in
adc
ja
(bad)
or
js
adc
and
cmp
cmp
pop
aam
movs
daa
pop
sub
lea
stos
test
dec
push
stos
adc
test
sbb
les
xchg
inc
cld
cmp
add
lea
sahf
int3
movs
jmp
(bad)
fdiv
adc
es
cmp
xlat
fcomp
inc
cld
imul
mov
and
mov
pop
inc
fcom
call
ret
ja
mov
outs
movs
test
rol
enter
(bad)
add
out
jae
xchg
cdq
mov
add
dec
test
cmp
fistp
mov
int3
and
mov
movs
cmp
pop
jmp
mov
out
cdq
and
fwait
in
or
sbb
ja
mov
and
xor
retf
sub
std
and
pop
int
mov
in
push
fisttp
test
cmp
jmp
xchg
sub
cmp
push
sti
cmps
jne
clc
mov
fs
pushf
xchg
call
pop
xchg
aas
push
adc
inc
jo
dec
dec
test
pushf
jmp
xchg
js
cmp
and
xchg
(bad)
and
mov
lods
outs
and
sub
xor
jns
and
out
add
leave
into
punpckldq
ret
sahf
dec
xlat
add
ins
ficomp
sbb
jns
dec
mov
push
inc
push
js
js
cmps
lods
gs
mov
es
add
push
gs
fldcw
into
add
cmp
aaa
lock
loopne
sar
lock
cmps
inc
cmp
adc
dec
iret
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
cmc
mov
or
movs
push
out
ins
fnstcw
mov
lahf
pop
fldenv
jge
cmp
pop
cmp
sub
enter
daa
fstp
iret
dec
clc
add
popf
or
rol
mov
sub
outs
push
add
clc
fs
xchg
xor
sbb
jp
or
push
stc
fcomp
loope
xor
dec
cmp
inc
fstp
push
enter
ret
or
ret
pop
cmp
nop
(bad)
pause
clc
in
jle
dec
jb
sbb
dec
xor
xor
pushf
xchg
push
int3
adc
xchg
dec
popa
out
add
pop
add
sahf
gs
lahf
dec
add
bound
xor
jl
retf
ins
sbb
push
mov
mov
mov
jmp
ror
pop
mov
cmp
fisub
mov
pop
cmc
inc
sub
je
sub
adc
sbb
fld
mov
push
fs
aad
outs
xchg
cmps
dec
mov
adc
hlt
imul
inc
aam
pushf
add
sahf
and
xchg
adc
mov
movs
mov
or
cs
(bad)
add
cmp
fxch
dec
push
xor
mov
and
push
pop
or
movs
push
fist
aad
(bad)
pop
js
xor
xor
jmp
xlat
scas
inc
xchg
push
es
lock
inc
adc
je
stos
sub
or
jle
loope
(bad)
jmp
mov
add
mov
and
mov
aas
mov
(bad)
mov
inc
jo
cmc
cmp
addr16
push
xchg
push
retf
pushf
xchg
mov
sbb
out
dec
push
int3
sub
sti
rcl
cld
call
pusha
les
(bad)
ret
dec
jnp
add
lds
imul
out
mov
clc
xor
cld
cmp
scas
pop
mov
add
lock
or
inc
das
adc
inc
sbb
mov
xchg
or
inc
call
cli
out
ins
movs
stc
fcomp
jmpw
cmc
xchg
or
jb
cmp
mov
addr16
pop
xor
(bad)
in
ror
sub
adc
fwait
ret
mov
mov
repz
add
cmps
repz
sub
adc
out
or
and
cmp
push
mov
fdivr
loop
pop
sbb
push
push
push
call
out
adc
out
dec
ror
icebp
jbe
(bad)
sbb
xor
lds
frstor
loope
xchg
fcom
loopne
push
and
cdq
ret
hlt
das
daa
sub
shufps
loop
clc
cmp
xor
or
xchg
leave
aas
mov
popa
mov
push
mov
mov
jae
shr
xchg
in
dec
(bad)
(bad)
or
push
push
cs
cmp
push
jge
jne
jle
lahf
imul
xchg
cmp
push
dec
rcr
mov
lahf
cli
push
ret
cmps
sub
loop
in
loop
pop
xchg
inc
sub
out
nop
mov
nop
hlt
mov
adc
push
xchg
repnz
xchg
cmp
dec
jbe
rcl
push
or
ret
out
(bad)
ror
push
clc
cs
jne
rcr
cmp
fwait
les
fcomp
adc
cmp
cmp
into
scas
fwait
mov
ss
mov
dec
jno
jl
inc
fnsave
push
in
gs
xchg
(bad)
cmp
pop
es
mov
into
jmp
sbb
jp
or
addr16
cwde
xchg
into
lods
out
mov
lock
es
cld
cmc
ret
pop
pop
(bad)
(bad)
cmps
xor
add
dec
dec
rol
or
imul
mov
cmc
lds
enter
mov
call
mov
or
retf
and
fiadd
icebp
out
out
pop
pop
fdivrp
popf
out
cs
(bad)
pop
sbb
nop
dec
xor
in
sub
jb
imul
or
pop
lods
scas
mov
xchg
inc
cmp
es
gs
cwde
(bad)
or
call
jbe
cwde
xchg
xchg
xchg
sbb
sbb
dec
aaa
or
pop
je
fist
not
aad
add
cli
aad
jle
imul
leave
adc
pop
cmps
dec
outs
mov
xor
not
cdq
add
inc
pop
out
add
lods
cmovg
mov
pop
sti
into
adc
pop
lods
push
push
lods
cmp
out
out
mov
jno
icebp
push
popf
push
jnp
jnp
stos
add
vcomisd
ret
cmp
push
sub
(bad)
cmp
mov
cmc
aad
jg
mov
sar
or
retf
add
cmps
iret
adc
aam
or
(bad)
mov
xchg
lahf
mov
fnstenv
out
add
aaa
test
lods
popa
or
jo
sar
and
mov
mov
mov
mov
push
or
mov
pop
push
jge
and
out
add
in
loop
in
xchg
dec
cmc
pop
mov
push
and
push
jb
inc
rol
sti
and
sti
pusha
repnz
jnp
lods
fst
cmp
sub
mov
or
les
and
shr
add
outs
imul
xor
mov
xor
pop
adc
rcl
sub
and
in
out
xor
mov
mov
adc
dec
sahf
sub
int
aas
iret
xchg
in
hlt
push
mov
mov
gs
popa
xchg
sar
lock
retf
aad
rol
mov
outs
fwait
or
pusha
out
aaa
shl
lods
dec
adc
fwait
mov
popa
cmc
leave
fbld
stos
mov
aaa
int3
test
sub
dec
cmp
lods
jecxz
cmp
add
cmp
push
jmp
fcmovnb
addr16
push
xchg
jp
add
jno
xchg
jnp
pop
dec
data16
mov
jmp
ret
ins
cmc
mov
rcr
cmc
pop
push
jns
(bad)
cmp
push
xor
jg
adc
dec
fwait
sub
punpcklwd
sub
ret
sub
std
cli
nop
or
rcl
dec
(bad)
sub
jnp
push
scas
sbb
push
mov
xor
aam
jo
lds
add
iret
mov
add
and
mov
pop
push
sbb
aas
mov
paddq
xlat
sti
lods
enter
lods
call
ret
cld
movs
call
or
dec
mov
loopne
aad
into
jmp
xor
jg
jne
fwait
arpl
cmps
mov
sbb
shl
dec
test
arpl
mov
lods
fistp
gs
fild
repnz
int
push
imul
ins
popf
lahf
cmc
jp
jp
fnstcw
cmp
ja
cmp
cmps
test
into
(bad)
hlt
xor
fucomip
ja
iret
rol
add
xchg
add
stc
jns
mov
popa
mov
xor
adc
popa
jbe
shr
mov
shr
push
cmp
mov
mov
jnp
adc
ficomp
clc
cmp
out
iret
dec
scas
cmps
scas
mov
dec
loopne
movs
(bad)
bound
adc
mov
jecxz
test
add
out
adc
mov
rcl
mov
mov
sbb
pushf
es
jp
sbb
loopne
mov
cmp
addr16
push
scas
lea
add
repz
sub
addr16
jno
mov
fdivp
shl
mov
dec
enter
enter
xchg
push
dec
lahf
jl
outs
dec
cmp
cmp
jmp
push
mov
mov
and
mov
jmp
fwait
pop
xlat
and
dec
fcmovb
jle
popf
cmp
ucomiss
dec
push
xor
loop
out
stos
mov
int
and
cmps
repz
and
add
adc
push
int3
adc
enter
ffree
jle
aam
test
adc
imul
stos
pop
sbb
popa
dec
repz
popf
pop
dec
out
gs
push
pushf
hlt
scas
(bad)
(bad)
pmullw
mov
loope
lods
fild
in
sub
stos
js
add
mov
mov
mov
jecxz
(bad)
fstp
in
mov
scas
push
in
int3
jns
mov
imul
or
push
cmp
xchg
jns
add
sub
dec
lea
retf
xor
gs
neg
fmul
repz
mov
pop
clc
adc
xchg
stos
inc
cmps
aas
(bad)
pop
icebp
mov
cwde
and
inc
mov
adc
repz
rol
adc
push
out
out
aaa
ficom
sbb
lock
cmps
fcomp
leave
movs
sub
pop
and
sub
xchg
push
dec
xor
xor
nop
cs
mov
xor
cli
cmp
and
cdq
cmp
ret
sub
shl
jl
loop
loop
enter
mov
add
add
aas
outs
icebp
or
jl
mov
out
push
sti
loope
inc
mov
imul
iret
cli
mov
xchg
test
out
aas
call
ret
cmps
leave
popa
xor
mov
imul
xor
inc
or
(bad)
adc
cld
mov
mov
das
faddp
retf
int3
mov
dec
popf
js
push
loopne
push
neg
cdq
jl
std
out
popf
and
loop
(bad)
jno
sbb
sar
lea
aad
fwait
and
sbb
out
aam
xor
mov
jg
push
mul
imul
ror
(bad)
mov
mov
lods
xor
pop
dec
push
je
inc
jns
ror
jmp
jno
(bad)
mov
loope
mov
mov
int3
push
push
js
xchg
dec
cmp
stos
cmp
or
retf
pusha
xchg
leave
imul
xchg
sbb
inc
cmps
mov
mov
mov
dec
int3
loope
jno
in
adc
retf
sti
(bad)
sub
inc
test
and
jle
sbb
cmp
mov
push
mov
dec
pop
sbb
in
sbb
mov
iret
imul
cld
xchg
push
mov
xor
loopne
jg
and
movs
out
and
inc
popf
push
pop
mov
xchg
mov
mov
inc
jmp
inc
mov
(bad)
xor
xchg
fs
leave
mov
mov
xor
push
shl
jge
div
sub
(bad)
outs
jno
pop
cld
sahf
ins
test
dec
cld
movzx
push
imul
adc
jmp
jge
push
add
or
lahf
mov
std
push
sub
dec
aad
mov
push
cs
add
repnz
test
dec
out
lods
hlt
enter
inc
push
dec
jno
rol
xchg
inc
cld
xchg
ficomp
sub
imul
xchg
sti
mov
rcr
jns
jl
mov
aam
dec
xchg
sar
sub
xchg
inc
nop
sub
mov
sbb
call
jne
int3
or
or
(bad)
cmp
dec
ror
mov
push
adc
add
cmp
outs
retf
enter
ins
cmp
xchg
jno
push
fcom
mov
rcr
ja
test
call
fwait
les
(bad)
xchg
push
mov
test
cmps
idiv
(bad)
clc
pop
lods
adc
lods
fld
jg
inc
dec
lock
cld
pcmpgtb
mov
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
popf
jne
cmp
in
mov
mov
mov
outs
fst
sbb
ficomp
addr16
mov
in
jge
cmp
fistp
das
loope
add
mov
push
cwde
mov
xchg
out
dec
retf
jb
imul
mov
and
jge
imul
dec
dec
shr
adc
add
mov
inc
jnp
xchg
push
xchg
into
pushf
cs
shr
cmp
and
aad
lds
sub
and
cmp
and
cs
add
arpl
test
outs
xchg
jb
out
fs
pop
stc
stos
jle
cmp
shl
xchg
xchg
add
(bad)
push
push
cwde
inc
ds
in
aas
repnz
fcmove
cdq
push
outs
jg
sub
sahf
rol
cmps
xchg
adc
sti
stos
pop
ror
mov
popf
cmp
repnz
sti
push
push
out
jae
shr
pop
rcr
xlat
nop
jb
pop
ret
jbe
fbld
sub
in
out
jae
mov
jo
clc
mov
jge
xchg
in
lea
(bad)
into
jae
dec
sub
push
shl
(bad)
cli
lods
test
xlat
retf
pop
jg
lea
call
das
pop
xchg
int
hlt
sar
div
jb
mov
ds
jne
xchg
jno
adc
add
bts
sbb
xor
mov
push
mov
inc
jbe
cmps
dec
in
cli
(bad)
jne
clc
lock
(bad)
push
(bad)
xor
(bad)
jmp
jle
popf
popf
mov
stc
arpl
sub
sbb
mov
rol
jmp
(bad)
std
idiv
push
retf
dec
loopne
xor
or
xor
cdq
jnp
and
mov
jnp
rcl
dec
or
mov
arpl
and
mov
daa
xadd
jecxz
pop
mov
dec
or
icebp
mov
sbb
pop
imul
bound
jecxz
or
sahf
shr
ret
xor
shl
pop
sub
adc
fld
sbb
repnz
pop
mov
mov
cmp
iret
retf
or
das
add
sub
push
popf
loope
sahf
aaa
mov
or
sti
mov
imul
fs
sbb
pop
jl
dec
cmps
test
out
xchg
bnd
ds
mov
es
das
push
test
fsub
(bad)
cmc
stos
stos
je
or
push
bound
fcmove
push
push
mov
test
mov
fisubr
(bad)
leave
ret
repz
jo
or
sbb
addr16
(bad)
fimul
fidivr
add
jmp
(bad)
gs
and
and
in
adc
pop
icebp
push
fild
push
add
out
stos
cs
or
add
add
xor
mov
shr
pop
out
imul
jge
add
out
dec
aad
ja
stos
js
cmp
pop
ret
mov
adc
(bad)
je
sbb
test
mov
and
call
stos
xor
mov
fidiv
mov
out
sar
std
shl
mov
and
fs
inc
cmp
mov
add
xchg
(bad)
mov
dec
fcmove
stos
shr
jnp
push
(bad)
mov
call
call
int
pop
(bad)
push
push
jecxz
mov
rcl
pop
sub
xchg
push
out
(bad)
ss
dec
idiv
xchg
shl
adc
dec
mov
fisub
push
cdq
das
iret
enter
scas
xchg
add
mov
jne
dec
and
stos
mov
jbe
jae
jb
lods
repnz
call
mov
call
pop
ja
scas
outs
jle
push
dec
data16
push
loop
xor
xchg
test
cmp
into
jno
jmp
pop
jl
(bad)
mov
push
pushf
loopne
test
aad
ins
lea
shr
retf
popa
int
mov
dec
outs
icebp
mov
aad
sar
sbb
(bad)
scas
cmp
in
lods
fisubr
out
ins
push
loop
nop
dec
and
pop
(bad)
pop
scas
or
and
sub
imul
push
test
push
and
xchg
vminpd
jl
pop
xchg
stc
add
dec
xchg
in
xor
clc
test
dec
clc
mov
cmps
pop
sub
inc
push
and
dec
pop
call
cwde
nop
jmp
sahf
(bad)
arpl
jbe
dec
int
stos
ds
js
fcmove
push
retf
inc
or
cmps
xchg
bound
movs
xchg
das
sahf
xor
iret
fadd
jae
jecxz
cmovnp
fstp
js
sahf
mov
pop
mov
add
xchg
or
add
(bad)
xchg
fild
fmul
out
call
sar
ds
xchg
sbb
inc
(bad)
mov
adc
call
xor
inc
stos
sbb
push
pop
btc
jne
jp
cwde
cdq
ins
dec
sub
pop
sbb
rol
and
sbb
fwait
and
movs
iret
loope
xchg
adc
pusha
jp
mov
sub
push
enter
push
mov
cs
push
lock
cs
retf
xchg
bound
sub
jae
daa
sti
(bad)
shl
and
cmp
sbb
sbb
(bad)
out
cmp
shr
aas
icebp
and
inc
push
jmp
repnz
jae
ds
cmp
scas
xchg
pop
fsubrp
ds
lock
dec
dec
push
inc
inc
iret
sbb
xchg
inc
mov
add
and
sar
shl
pushf
in
inc
add
and
add
xchg
test
out
mov
jbe
or
jno
add
and
inc
aas
xor
popf
popa
repz
mov
imul
jae
sbb
pop
xchg
mov
push
jne
sbb
in
(bad)
mov
ds
inc
test
imul
pop
fsubr
(bad)
ss
xchg
push
repz
push
shr
pop
xor
rcr
sbb
jbe
xlat
inc
and
push
js
pop
int
pop
int3
xchg
stos
xor
shufps
out
out
push
inc
js
cs
xor
jg
push
cwde
push
int3
leave
mov
mov
mov
mov
push
popf
xchg
or
xor
dec
pop
sti
(bad)
daa
sbb
je
mov
jns
stc
jbe
add
pusha
or
imul
jle
dec
out
gs
icebp
addr16
inc
iret
out
cmc
adc
fldcw
call
sub
neg
xchg
or
cmp
xor
pop
out
lods
and
add
mov
and
dec
cld
div
jecxz
rcr
mov
test
ins
mov
push
int
je
or
xor
adc
cmps
in
(bad)
in
sbb
aas
or
xor
sahf
sub
jl
inc
pop
xchg
popf
or
or
push
jp
dec
inc
dec
das
xchg
das
lock
sti
inc
nop
shl
cmp
retf
fwait
sub
xchg
(bad)
pop
mov
xor
aaa
mov
mov
lods
and
loop
xor
cdq
in
add
outs
jp
leave
sbb
in
xor
and
add
pop
sbb
shr
popf
lea
imul
dec
mov
mov
add
int3
inc
jmp
cmps
enter
lock
jecxz
push
mov
loopne
push
xchg
stos
lods
add
sbb
fcomp
jp
inc
push
js
imul
mov
daa
xor
push
pop
sbb
test
mov
je
mov
or
push
outs
sbb
hlt
in
imul
pop
aad
clc
ins
retf
retf
fnsave
pop
dec
or
jecxz
cwde
repnz
jbe
in
sbb
mov
xor
sub
jmp
retf
mov
shl
dec
pushf
out
jmp
std
mov
dec
outs
pop
add
xchg
jne
inc
xor
out
into
inc
add
lods
mov
or
cld
jmp
pop
pop
mov
mov
jno
in
mov
mov
push
jns
sub
and
mov
add
adc
pop
dec
fidivr
jge
sbb
xchg
push
aad
add
shr
inc
enter
mov
retf
sub
fstp
daa
scas
jno
aas
lds
scas
lea
in
stc
cmp
test
sub
sub
mov
xor
xchg
les
aad
sbb
adc
imul
cdq
xor
aas
lock
mul
retf
aam
pushf
jnp
dec
dec
push
(bad)
cdq
push
jb
shl
inc
xor
ror
ds
mov
imul
sbb
pop
pop
add
cmps
add
cmp
adc
hlt
pop
pushf
and
in
sbb
mov
in
mov
jns
ins
fucomip
clc
mov
test
pop
pop
out
xor
fsub
mov
gs
(bad)
sub
xchg
data16
hlt
mov
stos
or
xchg
mov
mov
je
and
es
xchg
mov
push
or
sbb
out
sub
pop
test
nop
es
pop
or
bound
push
ins
adc
dec
sbb
enter
ja
mov
xchg
iret
int
xchg
pop
or
jae
mov
xchg
shl
cmp
rol
and
fsub
jecxz
je
ins
jle
call
xlat
pop
jle
loop
cmps
jne
imul
pop
xchg
add
dec
push
cmp
in
push
adc
mov
inc
mov
push
mov
in
not
enter
repz
nop
xchg
and
fmulp
fwait
(bad)
cmp
mov
shr
sbb
lods
shr
sub
pop
mov
mov
inc
push
mov
lds
scas
fcomp
mov
lds
adc
pop
adc
pop
inc
add
jo
inc
pop
xchg
loope
(bad)
js
inc
jg
sub
ret
pop
dec
sbb
fwait
mov
fstp
popf
sbb
push
jns
shl
xor
fmul
clc
fs
stos
add
sub
mov
cs
iret
fmul
xchg
cmp
xor
inc
call
sub
sub
xchg
and
jmp
mov
jge
sbb
lahf
fs
nop
mov
ret
out
mov
mov
movs
arpl
int
adc
imul
jmp
inc
(bad)
and
sbb
dec
ds
sbb
icebp
cmp
shl
mov
mov
sbb
mov
mov
ret
out
inc
adc
aas
es
sbb
adc
sbb
mov
aam
or
popf
xlat
adc
pop
inc
(bad)
jg
or
out
aam
add
xchg
push
add
scas
mov
or
imul
fwait
daa
pusha
dec
inc
in
and
mov
das
je
inc
sub
imul
aas
call
aad
ret
and
mov
mov
mov
popf
ret
nop
or
xchg
dec
or
jno
loopne
hlt
jno
shl
aas
inc
dec
lock
loopne
sbb
pop
jmp
or
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
aad
inc
ror
ret
xor
mov
inc
inc
mov
mov
call
movs
xor
inc
dec
ja
push
js
shl
or
push
movs
dec
cmp
iret
ja
fidivr
test
fwait
or
enter
add
fldenv
(bad)
sub
aam
cli
sar
cmps
cdq
retf
and
stos
add
push
lds
outs
(bad)
mov
data16
adc
cwde
mov
cmp
xchg
mov
or
sbb
aaa
scas
mov
ss
xor
inc
xor
inc
and
ret
push
jno
mov
lahf
out
in
inc
xchg
mov
inc
(bad)
cmp
mov
arpl
pop
xlat
xchg
shr
xchg
pop
dec
add
sub
loop
push
pop
fwait
adc
lahf
ja
dec
or
xchg
jmp
int
popf
mov
adc
xor
in
clc
xlat
lock
adc
sbb
or
cmp
outs
cmp
pop
sbb
push
hlt
add
je
loop
test
jnp
mov
ret
xchg
and
sub
pop
xchg
les
jl
test
daa
and
sub
add
inc
xor
fnsave
retf
cs
in
pop
mov
mov
mov
dec
mov
pop
out
adc
push
and
test
pusha
daa
adc
jnp
sbb
and
mul
inc
shl
jo
jo
dec
cmp
mov
mov
mov
and
sar
ins
scas
in
mov
es
jmp
fcmovne
fidivr
mov
lods
(bad)
ja
icebp
pop
xchg
imul
dec
fwait
ins
mov
test
cmps
in
(bad)
loopne
cmp
scas
outs
shl
inc
addr16
inc
mov
push
pop
add
mov
push
xor
sbb
and
dec
sti
sti
fisttp
xchg
outs
inc
arpl
push
mov
ins
adc
push
sub
sub
lea
int
push
jae
inc
mov
add
(bad)
push
mov
aaa
pop
rol
pmaxsw
pop
lds
int
je
fcmovbe
fmul
gs
mov
mov
hlt
jns
mov
push
add
shl
dec
push
jnp
aad
js
cmp
jo
adc
movs
adc
mov
imul
sbb
mov
nop
rcl
imul
mov
pop
cmp
shl
das
pop
movs
movs
adc
aaa
das
pop
jmp
pmaddwd
(bad)
mov
ja
cmp
xchg
scas
pop
cmc
pop
in
in
test
push
dec
or
sbb
and
push
mov
aam
jle
add
dec
dec
rcl
out
xchg
xor
pop
pusha
outs
clc
mov
lock
xor
add
push
cmp
stos
pop
hlt
scas
cld
xchg
cmp
lds
leave
add
int
or
mov
clc
cmp
fwait
inc
pop
and
adc
jmp
cmc
push
xchg
xlat
imul
int3
mov
frstor
(bad)
retf
sti
xor
cmp
sbb
adc
js
sub
sbb
ja
adc
mov
fst
sbb
sahf
aaa
add
xchg
mov
lods
outs
mov
sub
ins
mov
pop
(bad)
js
es
xor
sub
sahf
(bad)
enter
dec
pop
jge
lea
mov
repz
sbb
pop
jp
popf
jbe
cmp
pop
adc
cld
jno
mov
jne
sub
push
mov
movs
cmps
scas
bound
jns
lods
stos
jno
adc
xchg
int3
(bad)
jb
imul
xor
mov
lock
adc
mov
shl
push
fwait
dec
repz
dec
add
pop
xchg
cld
(bad)
and
(bad)
ror
pop
div
movs
popw
sub
gs
mov
cli
pop
mov
adc
or
cmp
loop
imul
shl
xor
push
dec
je
cld
ret
mov
add
ss
add
fist
pop
lea
pop
add
das
call
dec
push
sub
mov
ret
or
and
jns
cmp
shl
fmulp
ins
shr
mov
jl
ss
sub
dec
push
(bad)
test
iret
sti
xor
jle
pop
retf
bound
retf
cmps
retf
jbe
(bad)
scas
xchg
stc
mov
leave
aaa
cmp
(bad)
mov
retf
mov
pop
(bad)
xor
mov
jne
adc
(bad)
daa
push
ja
ds
cmp
mov
push
add
mov
xor
dec
or
add
daa
(bad)
in
push
mov
fidivr
mov
call
adc
cli
dec
in
sub
(bad)
js
xchg
loop
or
add
push
ret
fdiv
in
pop
test
xchg
(bad)
xchg
pop
xchg
pop
fwait
sub
popf
ins
cmp
xchg
lahf
daa
add
jmp
or
dec
sbb
add
lds
add
(bad)
lods
sar
xchg
ror
int
add
and
add
jnp
sbb
push
cmp
push
aas
mov
dec
ret
jo
adc
sbb
leave
mov
cmp
ds
sub
fdiv
neg
aam
jne
mov
out
into
std
cli
mov
(bad)
pop
cmp
sbb
call
call
mov
in
sub
test
jnp
icebp
or
or
ss
stc
mov
push
repnz
arpl
jle
xlat
ins
push
sub
cmps
sbb
cdq
es
(bad)
push
(bad)
pop
sbb
mov
out
nop
setnp
mov
xlat
mov
sti
and
fidiv
rol
add
dec
adc
imul
and
loopne
mov
jns
mov
aam
sub
jle
inc
xor
aad
movs
jmp
inc
jb
icebp
inc
cmp
mov
cmp
add
ja
sub
rcr
cmp
imul
into
(bad)
pop
and
mov
arpl
loop
(bad)
daa
fistp
mov
or
test
mov
std
mov
lds
push
jb
rcr
add
mov
call
add
pop
mov
lods
dec
je
push
sahf
cmp
out
xor
or
mov
int
inc
popf
scas
repnz
js
mov
ror
mov
ror
xor
mov
inc
or
pop
test
jmp
add
daa
dec
addr16
mov
sub
push
(bad)
in
mov
jns
cmp
les
sub
pop
dec
rcr
in
xlat
fiadd
or
pop
hlt
lahf
mov
movs
cdq
dec
(bad)
in
adc
push
fmul
loopne
mov
inc
mov
push
fldl2e
in
scas
popf
xlat
pop
into
pop
ds
aad
cmp
cmps
push
call
sar
mov
mov
mov
shl
sti
jo
jb
hlt
fidivr
adc
fidiv
test
test
into
(bad)
addr16
stc
jo
cmp
xor
in
sub
sub
ja
push
jecxz
mov
lds
push
les
(bad)
jnp
xor
es
mov
mov
push
pop
div
pushf
ss
test
test
mov
xchg
xchg
push
jmp
xor
clc
jo
inc
adc
out
mov
retf
xor
jnp
or
retf
daa
(bad)
nop
jle
and
movs
pushf
or
xor
lods
imul
dec
ds
test
cmc
pop
clc
das
iret
xchg
add
add
iret
jno
ds
or
push
jo
mov
lea
test
push
movs
scas
sub
inc
xor
push
in
outs
das
add
sbb
hlt
jle
call
ja
pop
retf
(bad)
retf
mov
in
sbb
inc
dec
bound
repz
sbb
ds
mov
jne
stos
in
dec
shr
or
fstp
repz
sub
and
inc
dec
bound
jmp
mov
outs
retf
sbb
fmul
loope
xchg
ds
mov
add
sti
aam
cmps
ret
dec
ficomp
imul
imul
adc
jecxz
push
adc
loope
push
movs
cwde
sti
mov
and
jo
add
or
sub
in
inc
js
ins
cdq
add
or
nop
retf
push
jno
sub
xchg
or
add
jecxz
aad
into
pop
add
lahf
mov
lock
mov
ja
sub
xor
shl
inc
jne
jecxz
xchg
arpl
repnz
jle
xor
jl
cmp
jmp
sbb
pop
mov
scas
cmps
hlt
and
push
ja
jmp
add
aas
outs
cmps
out
ins
ja
push
cmp
push
aad
mov
cmps
sahf
aas
aam
adc
mov
int3
or
mov
jb
cwde
and
and
mov
sub
cs
or
mov
cmp
pop
inc
lds
inc
pusha
or
(bad)
jl
in
imul
fimul
pop
mov
pop
fisub
or
mov
lods
sub
pop
out
xchg
jae
xor
outs
popa
xchg
shl
imul
inc
cdq
sub
or
daa
xchg
loope
xchg
adc
jbe
sbb
push
mov
cwde
or
jp
aam
and
xor
repz
xchg
mov
dec
loop
movs
les
fmul
repnz
out
push
aad
jle
fistp
mov
nop
xchg
test
pusha
cmps
dec
add
push
popf
rcr
fs
mov
loope
loope
repz
pop
mov
jno
popf
stc
or
maskmovq
add
push
mov
sbb
jbe
clc
mov
fs
mov
sub
sti
out
adc
(bad)
movs
outs
fadd
aas
int
mov
jae
push
and
out
loop
les
push
fstp
and
repz
dec
cmps
push
sub
test
neg
shl
inc
mov
sub
arpl
pop
dec
mov
dec
jae
jge
sbb
dec
sar
fsubp
sub
xor
inc
cmp
not
leave
fisub
adc
dec
out
mov
lea
xor
pusha
loop
dec
jne
cmp
cmp
adc
add
loopne
mov
xchg
repnz
ss
inc
aam
fs
cs
mov
xchg
fdivr
scas
movs
cwde
push
jns
add
xchg
out
test
and
mov
xchg
xchg
ins
jl
ret
bound
jge
lahf
push
dec
push
inc
push
xchg
shl
pushf
(bad)
pop
mov
or
sub
or
inc
mov
and
inc
or
out
bound
sbb
fst
xor
aad
not
sub
or
mov
sbb
mov
loop
emms
cmps
ret
lock
xor
pop
lods
fiadd
sub
dec
scas
inc
cmc
jnp
outs
mov
cli
rol
(bad)
or
adc
loopne
sar
loopne
inc
pop
and
imul
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
and
lea
add
cmovb
mov
mov
ins
fstp
int3
int3
int3
in
and
jns
addr16
jne
xchg
pop
pop
xor
cmp
jnp
jg
mov
scas
cmp
aam
mov
and
icebp
dec
xor
adc
jle
movs
das
lea
pop
push
sti
jno
add
mov
cld
pop
mov
pop
mov
and
stos
mov
jns
push
fucomip
mov
xchg
sub
sbb
pop
stos
lods
std
loope
jl
addr16
push
push
shl
sti
daa
mov
sbb
(bad)
bound
int3
or
dec
sbb
lock
repz
add
fisubr
xlat
push
cmc
xchg
cmc
xor
retf
add
dec
pop
sar
mov
je
sub
cwde
arpl
cmp
aaa
data16
dec
comiss
daa
out
mov
mov
lods
and
fidivr
fidiv
es
mov
jmp
ins
ss
pop
xor
cmp
aam
movs
mov
cli
clc
dec
dec
dec
out
pop
mov
xlat
ret
cdq
add
sbb
xchg
mov
push
jp
leave
xchg
sbb
les
repnz
daa
js
ficomp
sub
xlat
popf
imul
arpl
pop
sti
cmp
pop
cli
dec
jno
lds
enter
lea
mov
cdq
cmc
push
in
in
aaa
or
add
jo
jl
gs
in
xchg
pop
int
sub
xor
pop
test
xchg
inc
cmp
inc
xchg
mov
mov
arpl
inc
jge
cmp
fisubr
lahf
in
enter
stos
sbb
xchg
mov
xor
pop
push
in
sbb
lods
sub
std
mov
loope
and
inc
push
loope
cmp
sub
cwde
sbb
xchg
inc
xchg
mov
or
les
stc
and
xor
adc
fwait
shr
ja
daa
fiadd
mov
mov
pop
xor
pop
and
sahf
jle
retf
add
call
or
jb
push
gs
mov
mov
mov
dec
out
ds
adc
adc
mov
xor
lock
dec
jne
mov
adc
xchg
dec
jae
xchg
arpl
je
(bad)
scas
enter
ins
movs
adc
out
daa
push
cdq
adc
cmp
movs
jle
mov
inc
jmp
call
jbe
xor
repnz
pop
out
mov
dec
shr
fild
jmp
pop
retf
adc
push
or
jne
retf
mov
std
pop
pop
sub
sub
sbb
ret
push
scas
dec
mov
sub
sub
sahf
jmp
hlt
in
xchg
in
xchg
pop
(bad)
stos
fld
out
test
into
aam
(bad)
enter
call
das
dec
cmp
aam
mov
inc
repnz
pop
jl
arpl
dec
cmc
clc
mov
int
loopne
repz
and
shl
imul
mov
mov
add
sub
popa
pop
jmp
leave
scas
dec
bound
inc
sub
pop
arpl
int3
sub
or
scas
rcl
push
adc
retf
not
scas
sar
test
sahf
sub
(bad)
(bad)
inc
add
jb
push
pushf
out
loope
pop
mov
ds
or
cs
repnz
mov
add
jns
das
lods
sar
(bad)
xor
jne
fmulp
xchg
pop
cmc
cmp
jne
sbb
xchg
(bad)
cmp
cmp
xchg
scas
push
test
and
sub
pop
add
lods
cmp
movs
repnz
sbb
pop
pop
(bad)
fist
jl
ret
cld
movs
std
mov
les
cdq
leave
sahf
cdq
mov
or
sbb
mov
shl
and
call
pop
shl
lods
push
and
stc
inc
and
dec
cmp
in
clc
je
push
pop
mov
xor
xchg
inc
cmp
pop
aas
sub
dec
or
xor
and
movs
lea
cmp
and
jmp
jns
test
rcr
push
pusha
cmp
and
xor
ror
ins
sbb
xor
je
sbb
fisub
mov
xchg
mov
pop
scas
lods
sub
mov
xlat
adc
mov
std
inc
lods
(bad)
std
sub
dec
fdiv
push
dec
jmp
cmps
inc
adc
fwait
ret
(bad)
dec
cld
cs
addr16
sbb
push
cmp
jl
daa
sub
inc
stos
imul
imul
aam
or
pop
jb
mov
loope
push
cmps
xchg
int3
push
push
test
aaa
rol
dec
sub
hlt
js
xchg
jl
movs
dec
xchg
push
test
mov
xor
jo
cdq
ss
sub
mov
xor
fstp
retf
xchg
push
les
loop
dec
xchg
out
lods
pop
mov
das
fneni(8087
xor
fild
cli
ja
nop
add
mov
pusha
dec
test
fwait
mov
scas
or
jge
test
fist
out
loop
popf
loop
and
out
mov
sub
sub
ins
push
fs
adc
jp
pusha
in
xchg
clc
in
inc
lods
popw
add
jg
std
cmp
fnstcw
xor
dec
sbb
rcr
push
mov
or
lea
cld
and
pop
out
jns
pop
sub
frstor
push
scas
and
cmp
test
inc
mov
push
cli
mov
aaa
movs
adc
(bad)
daa
adc
jne
das
xchg
lea
sub
imul
sbb
rcl
sahf
(bad)
cmc
inc
aad
jmp
aas
ins
inc
in
and
repnz
xchg
xchg
mov
pop
mov
mov
pop
xchg
push
dec
shl
push
cmp
mov
loopne
daa
sub
fbstp
dec
jecxz
xchg
leave
mov
fs
add
in
shr
aas
or
jg
rcl
add
fcom
jae
std
je
outs
push
popf
dec
sub
cmp
xor
sahf
jmp
mov
gs
ss
push
pop
push
cmp
or
ret
cwde
aam
xor
jbe
pop
add
jb
jmp
js
(bad)
mov
dec
jp
mov
cmovle
outs
jbe
je
mov
adc
adc
cmp
mov
cmps
movs
dec
sbb
xchg
mov
inc
dec
sub
xor
(bad)
cmp
mov
pushf
adc
les
push
dec
stos
clc
dec
(bad)
xchg
(bad)
test
test
sub
loope
nop
aam
jno
sub
push
shr
lock
or
and
cmp
adc
cmp
jo
push
pop
mov
xchg
jl
call
lds
xor
jl
dec
pop
mov
jg
bswap
(bad)
xchg
mov
in
add
movs
retf
dec
inc
fiadd
inc
stc
test
add
retf
adc
xor
inc
ficom
test
xchg
aaa
push
mov
xor
daa
into
sbb
add
retf
add
leave
je
jb
xchg
and
test
and
dec
mov
xchg
xchg
push
add
and
retf
pop
jne
and
(bad)
int3
fiadd
mov
outs
daa
fiadd
and
xchg
add
sbb
jnp
xlat
add
outs
add
repnz
mov
sbb
jns
stos
(bad)
or
xlat
outs
loop
retf
(bad)
aaa
ins
mov
pop
imul
add
mov
mov
cmp
(bad)
or
stos
inc
add
xor
push
inc
jb
dec
xchg
ins
das
mov
pop
out
sbb
mov
push
push
mov
in
cmps
retf
adc
repz
(bad)
mov
mov
pusha
dec
dec
ds
mov
cli
and
mov
xor
aaa
dec
or
shr
arpl
mov
retf
pop
push
xor
push
pop
and
out
xchg
outs
pop
xor
out
dec
mov
cmp
dec
lods
bound
in
mov
daa
adc
sbb
imul
sbb
jg
loop
jo
rcl
shr
dec
adc
psubusw
jae
js
cmp
mov
leave
fwait
mov
or
data16
cld
test
sub
loope
int
into
jns
ins
fisttp
xor
xchg
pushf
stos
ret
pop
xor
sar
gs
pop
ror
jbe
rcl
shl
out
lock
cmp
stos
stc
cmp
pop
stc
add
cmp
inc
adc
pushf
xchg
jno
(bad)
adc
jb
ss
shr
ds
add
cmp
push
ret
jge
ret
pop
cld
pop
in
mov
cmp
les
scas
lds
pop
and
ror
jp
jo
adc
mov
add
call
pop
imul
jnp
push
sti
nop
jg
mov
loope
dec
int
add
in
retf
push
mov
popa
in
cmp
and
dec
or
int
fst
sub
adc
push
pop
xor
fbstp
ret
std
push
xchg
xchg
retf
rol
leave
data16
dec
pop
cli
cmp
adc
movs
(bad)
movs
int
inc
jp
pop
test
mov
out
enter
mov
sbb
stc
add
mov
int3
call
jmp
sbb
pop
push
mov
cmp
push
mov
outs
xor
int3
iret
pop
dec
lds
jnp
inc
sub
sbb
and
mov
data16
pop
mov
test
cmp
ins
ret
xor
es
loope
(bad)
popf
xor
adc
fnstcw
sbb
sub
cli
pop
xor
lea
jbe
push
mov
test
push
xchg
jl
jl
int
push
(bad)
jno
movs
leave
push
int
mov
fimul
mov
push
pop
dec
jge
pusha
inc
xchg
mov
inc
push
arpl
pusha
(bad)
(bad)
jae
rcl
fsubr
xchg
repnz
pop
inc
sbb
mov
push
sub
sub
daa
push
mov
aad
cli
ret
call
jns
outs
cdq
lds
mov
mov
sbb
fstp
push
adc
out
xor
fcom
inc
shl
push
ds
aam
je
(bad)
xor
idiv
jecxz
in
je
bound
inc
das
dec
scas
jecxz
dec
or
aaa
adc
imul
cmps
mov
add
jmp
rcr
jo
and
mov
mov
imul
cld
aam
data16
cmps
rcr
jns
and
add
aaa
out
pop
repz
cmc
es
dec
cmp
add
aas
loopne
iret
jae
mov
mov
push
inc
mov
pand
mov
repnz
mov
mov
in
cdq
and
xchg
cmp
(bad)
arpl
std
fadd
pop
nop
push
aad
mov
retf
lea
not
jb
mov
mov
lahf
pop
inc
dec
cld
cwde
fadd
add
or
adc
xchg
push
dec
popf
nop
aaa
jnp
pop
cmp
push
dec
jae
shl
add
cmc
ja
out
rcr
mov
iret
cmp
mov
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
jns
inc
cmp
dec
mov
in
sub
sub
es
pop
jne
push
fstp
mov
sub
adc
loop
mov
dec
clc
add
cdq
loope
push
ror
inc
xchg
dec
pop
mov
loope
xchg
jnp
jl
outs
test
cmp
push
sub
jg
cdq
(bad)
ds
push
bndldx
mov
iret
pop
sbb
into
sbb
and
imul
outs
mov
xchg
xor
stos
mov
dec
adc
aad
dec
xchg
cmp
jb
add
mov
pusha
push
push
movs
and
push
lods
push
cmps
fsub
xor
pop
sub
xor
mov
aam
jns
ror
test
ss
and
adc
in
inc
test
bound
and
aas
pop
arpl
push
into
xor
call
fs
xor
mov
jmp
and
(bad)
mov
int
mov
lahf
jns
and
icebp
push
or
xchg
loopne
iret
call
fwait
cmp
xchg
in
jmp
fadd
push
push
jno
dec
mov
repnz
mov
loope
xor
xchg
cld
pop
(bad)
clc
sub
pop
(bad)
out
jmp
fstp
mov
(bad)
mov
push
ins
add
jno
leave
mov
jb
test
fisubr
or
iret
mov
ss
xchg
in
dec
push
mov
movs
lods
lds
imul
leave
sub
xchg
xchg
pop
cdq
jecxz
mov
push
ret
iret
jmp
jmp
jle
data16
mov
sbb
xor
shl
imul
cmp
xchg
retf
imul
inc
clc
dec
pop
cmc
xor
cld
push
out
sahf
shl
cmc
retf
fld
adc
jmp
in
jno
sti
retf
jno
movaps
fsubr
add
aas
fimul
mov
ins
adc
cmps
dec
std
mov
je
out
rol
xchg
push
inc
cmp
adc
pusha
popf
cli
neg
inc
jns
add
fidiv
push
into
sbb
mov
test
hlt
sbb
lods
aad
add
cmps
movs
sub
lahf
nop
test
aam
sbb
and
jecxz
mov
xchg
pop
sbb
cmp
loopne
sar
sbb
and
sbb
popf
pop
or
cmp
xchg
das
aas
aam
inc
inc
leave
push
call
lea
jl
adc
aad
repnz
mov
scas
xchg
jae
(bad)
je
jp
stos
and
jl
or
nop
aad
xchg
lods
fmul
sbb
inc
(bad)
aaa
dec
idiv
add
std
mov
stos
retf
and
pop
rcl
mov
xchg
ins
imul
movs
in
in
lds
sti
in
jmp
cmps
outs
(bad)
in
xchg
into
sar
ficomp
xchg
leave
inc
fwait
dec
xchg
(bad)
in
repz
retf
jmp
(bad)
and
loope
fnstsw
jp
outs
mov
pop
in
inc
cmps
(bad)
aad
cmp
push
xor
add
xchg
inc
and
jns
sbb
out
sub
ds
inc
inc
push
out
aas
outs
jge
xchg
push
dec
or
dec
and
pop
leave
in
inc
clc
cmp
ja
mov
mov
(bad)
and
mov
mov
jnp
daa
mov
or
mov
adc
test
jae
es
pop
xchg
pop
cdq
and
mov
add
dec
xor
in
int3
and
cmp
mov
jmp
jns
pop
mov
mov
xchg
jmp
sub
mov
outs
push
push
push
push
lock
arpl
xor
test
int3
pop
aaa
fidivr
mov
retf
and
stos
(bad)
jle
push
jecxz
sbb
pop
sar
test
mov
adc
loope
scas
(bad)
ret
imul
lods
sbb
or
mov
mov
iret
push
test
lds
retf
stos
dec
(bad)
jae
mov
outs
cmp
lahf
aas
shl
dec
and
sar
hlt
shl
adc
adc
jg
xor
jmp
rcl
xchg
(bad)
cld
inc
leave
mul
(bad)
jecxz
jno
xchg
pop
mov
inc
adc
inc
fsub
add
jp
ins
pop
jno
nop
dec
pop
dec
adc
out
push
ret
xor
mov
out
jl
pushf
dec
gs
in
cli
push
pop
sub
sub
jecxz
push
int3
xchg
mov
icebp
arpl
fisttp
inc
jg
add
jae
stos
jo
pusha
cmps
repz
bound
jl
adc
or
jmp
or
in
mov
stos
push
mov
call
xchg
arpl
loop
cmp
cmp
call
push
lock
shl
scas
dec
popa
push
push
in
lds
cmp
data16
fist
mov
mov
push
movs
call
je
dec
sbb
xlat
mov
pop
fsub
mov
cmp
mov
mov
pusha
ja
sbb
retf
aas
pop
sbb
cmps
inc
into
ins
mov
lods
inc
and
push
add
and
sub
sbb
repnz
dec
jg
jns
push
cld
add
fst
inc
jp
dec
(bad)
std
out
popf
push
nop
lods
xchg
call
add
aad
jne
jmp
xor
dec
(bad)
in
push
sbb
pop
call
mov
outs
repz
std
hlt
cld
out
xchg
sub
popa
test
xor
(bad)
retf
clc
inc
push
(bad)
mov
cs
fucom
push
bound
sbb
and
push
adc
lea
imul
adc
mov
mul
mov
lods
es
in
pop
xchg
push
aaa
dec
mov
iret
call
sub
scas
mov
cdq
sub
mov
daa
inc
mov
push
xchg
push
mov
add
das
arpl
push
ror
inc
add
xchg
ret
xor
(bad)
cwde
dec
lea
ret
cdq
cmp
hlt
and
cmp
push
ins
mov
out
ds
mov
int3
stc
mov
jns
mov
pop
xchg
dec
push
pusha
jns
fcom
fadd
cmp
sti
cmps
xchg
xchg
stos
dec
ror
shl
mov
add
into
xlat
mov
inc
push
or
icebp
or
in
add
xor
xchg
lea
jne
test
iret
iret
test
pop
in
cmp
jl
in
mov
jge
pop
aaa
add
xor
stos
push
stos
lock
xchg
cs
jmp
arpl
cmp
ins
pop
add
bound
bound
call
mov
push
clc
xchg
and
jmp
clc
test
sahf
push
sti
ret
mov
add
clc
jno
pusha
cmps
adc
ds
sahf
or
mov
hlt
cmp
mov
and
ins
stos
cmp
in
jmp
leave
out
mov
out
movs
push
mov
inc
and
ds
call
data16
jnp
cwde
mov
clc
and
mov
lds
cmp
cmp
and
test
shl
lds
push
cli
cdq
jecxz
retf
jmp
ret
call
jmp
ss
icebp
push
(bad)
dec
mov
mov
retf
into
fstp
(bad)
ins
ror
push
or
icebp
push
inc
jno
out
pushf
pop
cli
(bad)
pop
stc
ja
xchg
xchg
and
mov
inc
add
mov
xchg
add
fs
fs
inc
mov
xor
push
dec
loop
call
ins
sub
cmc
sbb
xchg
cli
dec
pop
retf
add
cmps
fmul
xchg
pop
mov
push
pop
push
imul
fimul
nop
(bad)
cmps
outs
out
push
or
sub
(bad)
sbb
push
push
aas
pop
pop
fwait
in
stc
xchg
int3
push
and
int3
mov
jl
outs
and
aam
dec
xchg
mov
dec
push
dec
test
stos
arpl
pop
pop
lahf
mov
stos
bound
or
pop
xchg
iret
je
shr
pop
mov
lods
imul
pop
ret
sub
pop
pop
cmp
movs
push
sub
fwait
clc
ds
ins
sbb
hlt
stos
mov
jne
sub
adc
frstor
aas
add
rcr
lods
mov
pop
cmp
std
cmp
mov
sub
mov
cmp
push
neg
scas
fimul
loop
xchg
cmp
mov
test
pop
in
xchg
cmp
adc
dec
or
arpl
std
lods
push
or
and
js
jp
movs
push
int
cdq
out
inc
xor
or
jnp
addr16
fwait
xchg
push
pusha
fstp
pop
xchg
clc
in
stos
std
imul
sub
hlt
xchg
int3
jle
push
jne
scas
cmps
mov
pop
retf
mov
dec
mov
clc
mov
fwait
inc
cdq
sub
jne
inc
sbb
enter
xchg
sti
pop
popf
sub
addr16
nop
add
mov
mov
cwde
dec
adc
(bad)
fdiv
mov
test
or
push
movs
addr16
mov
mov
jmp
jmp
mov
movs
in
and
mov
mov
xchg
les
sub
shr
(bad)
into
psllw
in
pop
test
mov
jge
sbb
mov
out
inc
pusha
popf
cmp
mov
cmp
sbb
and
adc
jae
cmp
sub
arpl
or
xor
push
xor
sbb
mov
dec
adc
imul
cmps
or
mov
sti
jno
and
jmp
ds
pushf
movs
dec
dec
cmp
and
mov
stc
dec
and
call
push
je
inc
sti
pop
sbb
mov
rcr
and
push
xchg
rcl
gs
cmp
in
mov
scas
and
loope
mov
add
cld
int3
sar
in
fwait
or
test
sub
ja
push
ds
icebp
cmp
mov
or
sbb
cmc
dec
stos
xchg
in
cmp
repz
std
mov
dec
xor
pop
jg
outs
cmp
xor
mov
cmps
in
jbe
addr16
not
in
stos
(bad)
and
or
ret
sahf
jge
mul
out
mov
xor
cwde
(bad)
jae
repnz
in
or
cmp
sti
push
ins
les
push
cwde
mov
sbb
ret
push
das
daa
ins
loopne
shl
lods
repnz
push
jne
pop
mov
jl
nop
lock
pop
ret
add
ret
and
sti
outs
sbb
iret
inc
sub
pop
adc
mov
popf
into
and
mov
pusha
scas
in
mov
shl
jecxz
jl
mov
dec
retf
sbb
cmp
mov
xor
hlt
sub
xor
inc
sub
ficom
aas
adc
arpl
loopne
sbb
pop
call
cld
dec
(bad)
sbb
sub
xchg
inc
pop
push
jle
fdiv
jp
pop
xor
pusha
(bad)
sbb
js
add
sar
push
dec
lock
loopne
sbb
pop
cmps
movs
daa
in
adc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
rcl
ror
xchg
sbb
push
jo
mov
call
pusha
test
xor
mov
movs
xchg
inc
dec
dec
inc
dec
and
pop
mov
mov
stc
verr
pop
les
iret
cli
fcomp
(bad)
xchg
xlat
xchg
jbe
cmp
(bad)
loopne
jge
dec
(bad)
add
fs
jbe
mov
cmc
call
push
daa
and
fscale
mov
lahf
rcr
add
inc
xchg
out
mov
mov
add
out
cmp
mov
jbe
fcom
sti
cmp
inc
inc
repz
xor
push
mov
(bad)
add
xor
dec
sbb
(bad)
div
stc
ror
ret
pushf
push
add
push
sub
dec
lock
and
fdiv
fucom
mov
mov
sbb
scas
pop
push
ret
fs
test
outs
or
pop
(bad)
sub
sub
jecxz
xchg
xchg
fistp
ret
loope
imul
mov
scas
and
shr
xchg
mov
sbb
cmp
add
push
cdq
pop
xchg
scas
ins
test
jnp
rcl
xor
ficom
repz
test
bound
sub
jne
inc
mov
pinsrw
mov
scas
jle
ss
stos
call
pop
aam
(bad)
cmp
lock
ds
sbb
sbb
sbb
xchg
in
js
push
or
and
imul
pop
stos
cwde
pop
aaa
cmp
inc
push
jle
ds
jae
popf
sub
or
ja
mov
mov
sub
sti
movs
out
push
popa
mov
pushw
add
int
xlat
pop
cmp
lea
fld
iret
jp
push
test
out
int
imul
aaa
sbb
mov
into
lods
dec
enter
mov
mov
or
mov
repnz
sub
xchg
das
arpl
pushf
mov
add
jl
lock
dec
cmps
push
sbb
jmp
mov
xor
hlt
xor
test
and
inc
cmp
rcl
int
pop
inc
dec
shr
mov
loop
cmp
jmp
mov
sbb
pop
aad
aaa
pusha
fst
(bad)
nop
cmp
or
jnp
sub
xchg
ret
ret
lds
fs
fs
sub
test
jae
jmp
dec
popa
ss
xchg
hlt
(bad)
push
add
push
jb
pushf
scas
call
xchg
jmp
mov
push
mov
jb
mov
ds
xchg
xchg
sub
mov
int3
in
jg
(bad)
cmp
or
push
fimul
lea
rol
mov
les
pop
fmul
(bad)
jns
jae
inc
or
lods
sti
xor
pop
jmp
push
push
pusha
jge
sar
leave
inc
inc
jnp
les
jb
xchg
sub
in
aaa
out
leave
(bad)
int
mov
(bad)
jbe
pop
and
or
cld
or
dec
mov
data16
aas
rcr
push
pusha
push
das
(bad)
movs
mov
test
inc
lods
and
sub
bound
mov
fld
pop
jb
lea
loope
jns
sbb
inc
pop
ds
rol
fwait
lahf
sub
repz
or
xlat
and
mov
pop
(bad)
fistp
sbb
pop
mov
das
dec
and
sub
aaa
rol
call
leave
mov
sbb
add
shl
pop
cli
add
mov
mov
scas
dec
aaa
inc
ror
jg
test
out
nop
push
dec
mov
mov
lahf
out
out
mov
test
adc
xlat
enter
jns
jmp
fld
std
inc
stc
in
out
xlat
push
pop
sbb
rep
movs
sub
arpl
(bad)
jl
inc
(bad)
jle
cmc
jmp
pop
xor
dec
adc
xor
mov
fs
das
shl
jnp
test
mov
xchg
sub
mov
sub
add
in
dec
inc
out
mov
ins
adc
pop
bound
ret
loop
xor
adc
aam
loopne
int
test
stc
jp
lahf
pop
mov
mov
repnz
pop
sbb
lahf
xchg
mov
xor
or
int
aam
dec
jl
jecxz
pop
arpl
adc
cmc
in
add
arpl
xchg
clc
inc
fistp
sbb
lock
push
loope
add
mov
adc
in
dec
pop
adc
or
pop
mov
aam
cld
fldcw
adc
(bad)
jmp
xor
push
sub
lds
fs
cmps
iret
add
jmp
sub
bound
sbb
mov
sub
sbb
sub
mov
fs
daa
sbb
cmps
mov
pop
call
outs
rol
cmp
inc
jp
sub
push
nop
cmp
push
jge
cmp
lods
inc
fcmovb
imul
out
cwde
mov
mov
push
xor
addr16
pop
mov
cmp
dec
shl
fsubr
xchg
pop
mov
fcomp
dec
push
push
leave
sbb
lods
and
lahf
mov
rol
jg
mov
push
int
and
jl
mov
mov
aaa
jmp
push
or
add
xor
jae
int3
and
test
sub
test
scas
ss
push
xchg
inc
pop
scas
and
inc
or
je
fisub
jg
inc
jno
mov
out
lods
mov
pop
das
push
mov
cmp
xor
pop
lea
cmp
sub
pop
cld
lds
inc
push
bound
or
xchg
lock
aam
mov
iret
and
imul
mov
mov
inc
xchg
jecxz
or
fwait
ja
inc
movs
ss
in
ret
es
jb
daa
test
cmp
pop
fcom
push
lods
jmp
lock
pop
add
loop
fimul
out
inc
scas
scas
xor
lahf
push
xor
imul
push
cmp
(bad)
jmp
sub
stc
stos
mov
test
loop
mov
lea
cmp
mov
ror
aam
leave
aaa
in
dec
out
adc
fistp
fucomip
pop
jne
cmp
jb
arpl
(bad)
aad
jge
and
jmp
sub
add
add
dec
pop
test
add
or
add
shr
adc
add
data16
out
stos
cmps
imul
popf
(bad)
sti
xchg
popf
daa
sbb
repz
dec
or
push
cmp
lds
pop
bound
lahf
js
xchg
add
sub
sbb
mov
xchg
lahf
shl
mov
rol
fild
jge
imul
dec
cli
pop
aas
shl
and
mov
clc
clc
fldl2t
ins
iret
inc
add
jp
ins
lods
dec
add
adc
cmp
int
hlt
mov
scas
mov
adc
test
js
ins
and
sub
and
mov
adc
in
leave
aam
add
retf
call
dec
dec
sahf
aaa
and
mul
sbb
mov
mov
sbb
fcmovne
xchg
loopne
cmp
push
pop
jp
cmp
pop
stos
or
xor
repz
js
pop
mov
icebp
out
adc
pop
je
imul
mov
sub
into
jg
xchg
cmp
adc
shl
cmp
xor
mov
stos
sahf
inc
mov
sub
inc
and
jnp
fstp
mov
dec
lock
cmc
sub
in
dec
mov
add
neg
push
in
mov
shr
ret
(bad)
inc
ins
xor
mov
fs
(bad)
push
popa
adc
ret
mov
fcomip
pop
pushf
inc
int
push
movs
and
add
repz
sbb
js
fbld
cmps
pop
retf
movs
aas
push
sub
in
cld
pop
test
(bad)
(bad)
mov
(bad)
ss
push
call
cdq
xchg
mov
jg
dec
xchg
iret
movs
in
add
std
sar
dec
inc
ds
xchg
fs
mov
ret
mov
(bad)
dec
mov
dec
retf
test
add
jle
dec
add
jne
icebp
aas
lods
adc
adc
cli
movs
mov
adc
adc
call
(bad)
data16
mov
xchg
std
sbb
mov
sub
xchg
enter
add
mov
mov
mov
pop
stc
xor
push
das
jno
sub
repz
(bad)
(bad)
sahf
mov
in
xor
sbb
adc
xor
xchg
fs
pop
mov
push
idiv
mov
int
pop
jb
mov
loop
sahf
push
or
dec
xor
jnp
retf
pop
imul
xchg
or
dec
fnsave
(bad)
jo
pop
fadd
mov
push
(bad)
adc
das
cmp
out
mov
push
aas
into
mov
dec
js
xchg
pop
les
sub
shl
fdiv
js
sbb
mov
aam
or
pop
push
out
adc
pop
xor
dec
and
arpl
push
iret
and
dec
sub
push
push
xor
cmp
in
sbb
fiadd
dec
ret
xchg
in
aad
add
call
pop
(bad)
mov
jge
jmp
adc
es
and
movs
adc
cmc
out
out
xchg
sahf
jno
inc
test
or
call
mov
les
(bad)
cmp
in
xchg
scas
xchg
adc
retf
sbb
push
inc
jno
mov
xor
cld
add
stos
fmul
mov
push
sbb
sar
mov
sub
mov
dec
lods
out
sti
xchg
std
sbb
mov
xchg
popa
xor
add
fstp
fwait
inc
lea
xchg
fcomip
sub
jle
and
mov
inc
call
push
lea
mov
dec
sub
and
sub
jle
test
push
mov
stos
or
aad
cdq
xor
pop
mov
jmp
enter
xor
clc
(bad)
xchg
mov
adc
sub
inc
sbb
pop
fs
mov
dec
pushf
(bad)
add
out
mov
in
shr
jle
mov
bound
mov
es
(bad)
jnp
xchg
jae
sbb
sub
add
scas
adc
xor
mov
sbb
aas
rcr
cdq
xchg
adc
sbb
test
gs
ret
lds
(bad)
popf
mov
les
fs
mov
leave
(bad)
and
or
add
adc
or
push
stos
mov
jecxz
out
pop
loope
into
pop
out
and
mov
das
add
aam
mov
movs
lods
mov
clc
pop
ret
(bad)
fistp
push
mov
enter
mov
push
into
clc
mov
ins
mov
xor
lods
sbb
pop
fsubr
sub
push
pop
lahf
in
in
sub
sbb
scas
cmps
addr16
push
repnz
and
inc
jns
mov
dec
es
or
or
mov
(bad)
cmc
dec
loopne
sar
jg
inc
lahf
add
add
and
lods
sbb
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
cdq
test
addr16
xor
fiadd
sub
int3
test
adc
xor
fidiv
and
or
and
pop
test
sbb
sti
jns
iret
mov
add
cwde
dec
test
iret
out
xchg
clc
adc
idiv
leave
fadd
mov
cmps
jbe
cmc
or
clc
jp
mov
mov
jg
adc
sbb
aas
mov
xchg
or
jg
out
cmp
pop
dec
mov
push
pushf
mov
mov
cli
aad
lods
cmp
adc
stc
mul
(bad)
out
xchg
ds
mov
(bad)
mov
shl
out
xchg
cmp
cmp
(bad)
mov
or
mov
cmp
xor
das
cwde
cmp
push
xchg
inc
cmp
dec
mov
push
mov
out
and
cmp
sub
dec
push
jne
cmp
ss
loopne
(bad)
addr16
adc
xlat
pop
nop
iret
and
nop
in
mov
jo
outs
jmp
retf
fdivr
pushf
out
ds
and
dec
aaa
dec
push
mov
loopne
jl
push
mov
mov
and
stc
mov
mov
mov
popa
ins
mov
lds
pop
call
sbb
bound
fdiv
lea
mov
jecxz
adc
sahf
cwde
mov
clc
ss
push
xor
(bad)
stc
lea
or
lahf
xor
cmp
jne
xchg
xor
enter
xlat
repz
nop
retf
mov
sub
pop
fidiv
sub
dec
mov
(bad)
repnz
cmps
jne
jbe
popa
bound
inc
dec
sar
stos
lea
add
das
(bad)
stos
out
retf
cmp
dec
jmp
int3
jle
mov
retf
test
jmp
leave
addr16
jl
repnz
jbe
in
ds
jg
fdiv
clc
push
rcl
fisub
mov
pop
ror
sbb
leave
sbb
out
outs
mov
sbb
rol
jno
mov
fcmovbe
cli
mov
add
jo
arpl
in
dec
mov
test
cmc
mov
fmul
aam
mov
movs
inc
add
xor
xchg
loopne
and
nop
push
mov
ss
adc
mov
jne
(bad)
and
cli
add
jne
(bad)
call
data16
sub
mov
bound
sbb
in
add
xchg
inc
fidivr
pop
pop
(bad)
xor
inc
js
sti
sahf
fwait
cmp
inc
fst
cmc
lds
retf
sbb
xchg
(bad)
daa
enter
das
pop
sbb
das
jne
jae
and
or
push
loopne
ins
mov
aam
sbb
inc
sahf
mov
ss
pop
mov
xchg
shl
ins
or
mov
ins
aaa
mov
mov
pop
push
and
(bad)
enter
mov
mov
addr16
mov
adc
sti
ds
mov
or
pop
test
pop
inc
aas
inc
in
push
pop
xchg
fwait
ins
call
adc
in
inc
xor
icebp
jmp
cli
push
adc
clc
shl
add
jp
pop
push
pop
xchg
add
sahf
out
lahf
mov
pop
and
popf
dec
and
cdq
pop
lock
daa
and
mov
cs
je
in
jae
nop
dec
adc
scas
test
stos
jg
sbb
lea
loope
inc
loopne
xchg
jmp
jne
mov
jmp
sub
and
add
push
imul
repnz
adc
mov
ds
xlat
push
ret
test
rol
mov
ja
out
enter
xchg
add
das
push
jg
arpl
sub
cmp
or
jo
ss
push
ret
dec
mov
stos
dec
outs
es
pop
or
mov
loopne
sub
adc
out
int3
das
lods
push
(bad)
leave
mov
xor
cld
cwde
jmp
push
loope
mov
dec
xchg
(bad)
bound
out
sub
aas
and
adc
cld
rcl
cdq
inc
nop
mov
ficom
cmps
enter
push
cmps
pop
repnz
out
cmp
cmc
stos
jmp
popa
in
jp
call
jecxz
hlt
cmp
lahf
ja
push
loopne
stc
jp
inc
dec
jne
mov
jns
adc
das
fnstenv
mov
lea
pop
out
add
ins
enter
cmps
sub
into
push
push
push
popf
cwde
xor
push
mov
dec
mul
loop
sbb
xchg
(bad)
repz
stc
xor
cmp
retf
sbb
or
retf
and
fistp
dec
je
aam
jbe
fsubr
shr
inc
xchg
mov
and
popa
call
pop
jmp
cmp
dec
cmc
test
lea
cwde
xor
or
in
dec
dec
cdq
in
jne
je
call
lds
and
stos
out
jecxz
cwde
pop
retf
mov
(bad)
xchg
adc
es
cmp
dec
mov
push
push
div
sub
and
mov
addr16
push
adc
ins
hlt
cmp
pop
add
sbb
in
adc
ja
je
test
jo
inc
(bad)
add
mov
pop
xchg
loop
or
imul
int
inc
and
add
retf
(bad)
mov
adc
nop
xchg
sub
push
cld
sbb
mov
inc
int3
frstor
(bad)
cmp
jmp
mov
ds
jge
adc
sub
push
xor
xor
(bad)
push
and
xor
mov
jmp
sbb
outs
out
cld
movs
cmps
and
sbb
mov
adc
inc
and
lock
inc
xchg
call
adc
sbb
ficomp
jle
shl
movs
and
mov
push
inc
or
out
das
and
rcl
shr
fwait
aad
pop
mov
pushf
dec
cs
mov
dec
out
jb
daa
and
adc
push
stos
mov
mov
ins
inc
lods
icebp
into
fcomp
call
dec
jae
retf
push
xchg
jle
movs
sbb
mov
mov
das
retf
ret
inc
pushf
mov
sbb
pop
cmp
cmp
leave
test
mov
sub
jle
jbe
pop
sub
or
(bad)
pop
loop
ds
enter
sbb
stos
daa
or
pop
push
jmp
pop
pop
call
out
aad
nop
sahf
in
xchg
mov
mov
cwde
inc
pop
clc
push
imul
mov
fs
fistp
out
mov
ret
mov
cmps
mov
xor
stc
lahf
ja
mov
cmps
hlt
jp
clc
sti
mov
sahf
sub
cmp
shl
sar
sbb
data16
cmc
mov
int
test
adc
cld
mov
xchg
(bad)
std
or
push
shl
rcr
jno
lahf
and
inc
mov
mov
lahf
xor
lds
cmp
and
ret
push
and
es
iret
stc
fs
jmp
loopne
sbb
and
movs
retf
push
jge
mov
or
xor
mov
stos
xor
push
fld
jb
mov
adc
scas
repz
sub
mov
(bad)
stos
inc
enter
or
ficom
es
jmp
cmps
pop
pop
test
sbb
scas
sbb
sbb
dec
xchg
in
jle
fs
out
xor
xchg
adc
or
xor
movs
or
addr16
pop
cwde
clc
stos
mov
mov
lods
sbb
dec
sbb
dec
les
mov
xor
and
sbb
imul
enter
arpl
push
dec
cld
add
adc
es
push
mov
je
in
dec
mov
xchg
hlt
inc
mov
mov
out
add
movs
int3
mov
popa
or
fisttp
mov
gs
jb
imul
cmp
frstor
ss
stos
sbb
stos
pop
sbb
xor
mov
std
fcomi
and
scas
dec
mov
or
mov
push
jmp
jb
mov
shl
cmp
mov
push
clc
(bad)
pop
into
es
pusha
inc
mov
int
test
xor
stc
cdq
mov
fsubr
pop
xlat
or
dec
mov
pop
mov
nop
jbe
xor
mov
bound
sub
sbb
mov
daa
stos
push
out
pop
je
adc
mov
jns
jbe
lahf
loopne
cmps
xor
ss
mov
aas
pop
fild
add
in
lods
pop
xchg
fnstsw
xchg
es
mov
or
sbb
jmp
xchg
pop
mov
xchg
pop
inc
lods
in
xchg
hlt
in
mov
sbb
mov
sub
xlat
push
out
in
push
ficom
repz
xchg
shl
popa
mov
inc
adc
push
push
mov
xchg
xchg
xchg
scas
mov
mov
mov
aas
call
cmp
sahf
loopne
scas
inc
(bad)
nop
idiv
sub
xchg
icebp
movs
(bad)
lods
movs
push
bound
jns
sti
xchg
jmp
(bad)
fld
leave
inc
sti
outs
or
jmp
xor
rcr
arpl
fcomp
ficomp
jae
inc
arpl
xor
in
leave
gs
add
and
cmps
fstp
sahf
jno
lahf
push
push
cmp
sub
sahf
out
in
inc
lds
push
call
jae
loop
imul
pop
jmp
(bad)
jge
inc
mov
or
mov
xchg
int
shl
xchg
pop
dec
inc
cwde
imul
mov
call
dec
sti
adc
movs
lods
imul
(bad)
lea
push
es
sbb
fisub
test
pusha
mov
outs
not
adc
xor
fadd
retf
inc
fcomip
sub
imul
movs
movs
aas
mov
repnz
hlt
xor
and
jnp
add
popa
lods
mov
sar
mov
xchg
fwait
sbb
jae
out
loopne
aad
xor
sbb
push
(bad)
shl
jg
mov
int3
add
in
hlt
or
(bad)
test
push
or
pop
jmp
fucomi
arpl
mov
fs
sub
pop
sub
mov
rcl
or
xchg
je
jp
loope
adc
push
pop
sbb
aaa
(bad)
sbb
push
xchg
jb
sub
jns
pop
push
jge
dec
push
mov
retf
ja
inc
(bad)
pop
mov
pop
xchg
xchg
sub
adc
mov
sub
jp
leave
push
sbb
pop
int
jle
jne
and
and
push
mov
lea
mov
js
arpl
cmp
iret
jmp
scas
imul
xor
int3
(bad)
retf
imul
mov
popa
pop
test
cmp
cld
sbb
aaa
lock
loopne
sar
lock
sbb
and
mov
enter
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
push
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
pop
and
and
call
outs
dec
cmp
sbb
sbb
enter
sub
(bad)
fpatan
out
ins
loope
mov
iret
mov
in
repz
add
cli
dec
bound
inc
jmp
push
and
sbb
lahf
jge
cmps
adc
mov
mov
fidiv
xchg
dec
lahf
mov
mov
xor
mov
mov
mov
out
push
loope
loope
pop
out
cmp
pop
sub
pop
cdq
fnstenv
push
cmp
dec
and
fstp
sub
loope
fs
dec
add
bound
dec
or
sbb
cmp
les
jmp
xor
pop
add
imul
out
stos
cmp
add
test
pop
dec
sysret
scas
in
jae
jmp
xchg
les
sar
(bad)
movs
add
rep
adc
(bad)
call
scas
aas
cld
mov
sub
xor
jle
adc
pop
pop
test
pop
mov
and
addr16
das
je
push
movs
call
in
aaa
inc
and
les
pop
push
jl
jmp
push
jbe
in
shr
(bad)
pop
js
xchg
fwait
int
jb
add
ret
iret
loope
mov
or
sti
sahf
pop
pop
or
ret
imul
rcl
pop
dec
dec
outs
jne
cdq
inc
pop
and
jg
xchg
sbb
in
mov
leave
hlt
jp
out
in
test
xor
fisttp
mov
daa
scas
pushf
xchg
mov
in
out
lahf
mov
and
sub
je
sahf
sbb
xor
scas
xchg
outs
mov
aaa
jg
push
and
fstp
mov
mov
add
push
cli
mov
xchg
(bad)
push
push
loope
imul
retf
mov
mov
sbb
and
in
xlat
lahf
mov
nop
test
mov
adc
mov
(bad)
jmp
jg
inc
jo
xchg
push
sub
sbb
xchg
cmp
sub
xor
mov
cmp
aad
leave
hlt
mov
jnp
lods
ret
lock
mov
xchg
in
inc
sbb
mov
outs
fidivr
push
cmp
inc
shr
cwde
push
movs
mov
mov
add
pushf
xor
sbb
(bad)
fldcw
xchg
icebp
call
sub
sub
(bad)
fild
or
addr16
sub
push
and
pop
adc
push
les
adc
mov
mov
mov
in
mov
push
(bad)
fcom
iret
pop
ins
cmp
mov
test
cdq
lods
aad
sbb
repz
in
jae
mov
dec
cmc
adc
adc
mov
addr16
push
push
push
popf
add
pop
cdq
mov
mov
shl
xor
jge
mov
pop
and
sbb
push
inc
cdq
add
bound
mov
cmp
xchg
dec
je
and
pusha
cmp
jbe
add
les
cmps
cmps
xchg
aaa
jb
pop
add
jno
xor
dec
pop
dec
leave
xor
push
in
ds
popa
mov
loopne
addr16
cmp
jge
pop
jmp
or
push
cli
dec
push
sub
dec
or
dec
js
idiv
test
out
fpatan
fucomip
push
lahf
neg
push
sbb
fisub
mov
mov
cmp
cld
push
movs
add
call
ins
pusha
xchg
dec
add
fidivr
movq
lods
jle
test
mov
mov
mov
jne
out
push
ret
xor
(bad)
loopne
and
(bad)
pop
xchg
jl
xor
test
popf
jmp
xor
inc
push
jmp
(bad)
jb
icebp
xlat
mov
pop
outs
popa
ret
cld
sti
pop
dec
stc
dec
addr16
mov
outs
jecxz
or
lds
cld
icebp
jbe
popf
jns
xchg
or
stc
call
cmps
xor
pop
xor
test
movs
push
scas
cmp
cmp
dec
inc
stos
ds
icebp
repz
(bad)
movs
push
sbb
out
dec
xchg
test
push
xor
imul
adc
ss
push
jmp
out
and
stos
fmulp
dec
jge
popf
shr
mov
ret
sbb
scas
shr
ret
jg
shl
sahf
lds
mov
or
jmp
fsub
jnp
mov
ins
ins
jle
cmp
mov
jmp
fwait
and
jo
loope
pop
daa
in
les
sub
pop
in
(bad)
fadd
scas
fsubrp
mov
fisttp
or
push
and
xor
int3
fs
push
adc
repnz
out
inc
sub
call
idiv
sbb
jmp
cmc
lahf
push
cmc
xchg
sub
dec
mov
jle
mov
jp
adc
dec
inc
mov
xchg
sub
sahf
jae
and
ret
dec
mov
mov
mov
push
xchg
data16
movs
pop
add
popa
adc
or
cs
sub
dec
xor
and
sbb
dec
addr16
xchg
cmp
in
scas
xchg
and
mov
sub
ds
pop
adc
xchg
pusha
stos
test
int3
sub
xor
addr16
(bad)
pop
xor
mov
mov
sbb
cmps
stc
call
in
popf
mov
xchg
das
push
scas
fcomp
std
les
int3
loope
xor
cmp
pop
mov
jl
popa
ss
shl
nop
jns
fwait
sub
cmp
mov
test
std
test
xchg
and
mov
mov
out
and
ds
leave
pop
ins
and
pop
and
test
fisttp
or
in
rcl
int3
int3
repz
test
pushf
jo
sub
cwde
cmp
inc
ds
mov
aas
push
ds
icebp
cli
call
ins
inc
jecxz
std
fldln2
sti
adc
and
ror
stos
enter
not
ins
adc
jne
call
mov
jecxz
retf
lea
out
iret
mov
(bad)
repnz
cmp
dec
data16
xchg
mov
sti
mov
ins
cwde
sub
aam
std
fstp
cli
mov
or
xchg
iret
into
add
sahf
mov
or
pop
aas
in
call
int3
sbb
lods
icebp
mov
aas
(bad)
dec
clc
je
loop
std
and
mov
jg
xadd
dec
call
aam
ror
pop
ficomp
adc
adc
es
fiadd
and
daa
mov
jg
jb
ficom
jmp
test
push
shr
mov
push
cmc
(bad)
sub
xor
sbb
retf
sub
inc
mov
je
jge
ror
push
sbb
and
cmc
or
rcl
call
out
xor
mov
mov
mov
xlat
push
ret
dec
or
jno
jp
sub
in
les
lea
ins
sbb
cdq
sbb
mov
repz
mov
leave
push
cmp
ins
inc
jl
and
mov
xchg
(bad)
out
cli
(bad)
mov
pop
pop
hlt
sub
mov
test
scas
scas
xchg
imul
mov
jne
sub
xor
cld
mov
inc
sbb
sub
push
inc
or
cmp
inc
jmp
xor
test
out
sar
std
(bad)
sub
ins
pusha
xchg
into
sbb
movs
cmp
lock
jl
xor
inc
xor
mov
cmp
and
inc
ficom
test
rcl
mov
or
mov
mov
jge
bswap
inc
aaa
mov
add
pop
push
sahf
out
cli
das
cs
mov
add
cmp
ret
aaa
jbe
jns
js
out
jg
mov
jge
hlt
mov
sub
sub
push
sub
test
sub
outs
mul
popf
pop
leave
xchg
sbb
scas
cmp
pop
mov
std
xor
sub
xchg
mov
dec
inc
daa
and
fimul
rol
jp
ror
scas
sub
cmps
rcr
stos
in
jnp
pop
adc
sub
or
clc
xchg
adc
adc
pop
(bad)
jmp
and
push
ja
enter
into
or
mov
bound
jl
sbb
lods
popa
cmp
popa
push
scas
loop
mov
and
gs
mov
sub
sub
mov
lods
mov
sbb
out
enter
xchg
out
in
adc
cmp
or
push
mov
adc
(bad)
nop
mov
adc
mov
mov
pop
fsub
dec
nop
xchg
cmp
mov
and
pop
rcr
inc
jns
inc
push
outs
inc
mov
cmc
into
lock
leave
mov
mov
aaa
enter
out
pop
rcr
daa
ja
and
test
inc
popf
in
outs
sub
mov
icebp
cmp
dec
sbb
xchg
cmc
mov
mov
add
xlat
outs
and
jbe
fdivr
scas
and
jns
lahf
xor
mov
mov
jle
stos
dec
push
or
inc
lahf
es
dec
pop
cmp
sub
sbb
mov
stc
cmp
outs
call
sbb
push
mov
jne
cs
es
push
inc
fisubr
sysenter
or
inc
mov
mov
sti
stc
xchg
fld
pop
cmp
mov
add
sar
xor
xor
es
cmp
mov
cmp
jb
xor
mov
add
out
dec
inc
daa
(bad)
cld
js
mov
cmp
ss
popf
push
adc
mov
outs
adc
and
cmp
xchg
sar
lds
xchg
sub
leave
mov
lods
loop
and
inc
or
or
pop
outs
jb
ins
push
or
sti
in
cmp
push
(bad)
dec
fnstsw
repz
xchg
sub
in
nop
dec
mul
adc
jg
pop
fild
in
call
nop
cmp
sub
adc
loopne
in
or
scas
jb
xchg
mov
dec
mov
fstp
pop
jle
ins
outs
pop
jne
sub
add
pop
pop
test
sahf
mov
jnp
mov
push
sub
mov
in
std
sti
or
sub
ret
ret
mov
dec
sbb
lods
cld
cmp
or
fcomp
pop
pop
addr16
mov
sub
in
jecxz
cmps
and
dec
fcmovnb
in
les
shl
push
(bad)
jecxz
(bad)
mov
(bad)
fidivr
mov
sbb
inc
add
mov
xchg
xchg
adc
iret
sub
out
ja
imul
pop
adc
ret
push
daa
fild
(bad)
push
imul
inc
lds
jg
cld
fs
or
cs
mov
addr16
(bad)
mov
cmp
cmp
hlt
lods
popa
adc
lods
fnstsw
jb
popa
mov
imul
rcl
inc
shl
mov
add
sub
push
xchg
xchg
fld
js
push
add
adc
cmp
aaa
out
es
arpl
les
sbb
sub
pop
push
cmps
ret
push
or
lock
loopne
sar
sar
cmps
call
xchg
and
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
inc
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
inc
xchg
lea
add
xchg
cld
and
dec
xchg
push
push
add
enter
push
movs
sbb
(bad)
xchg
sbb
dec
(bad)
push
nop
out
sbb
popf
shr
jno
cli
pop
ret
movs
cmp
mov
sub
pop
xor
mov
dec
movs
cmc
mov
stc
imul
pusha
or
mov
retf
and
add
shr
xor
fistp
dec
jmp
fist
(bad)
mov
pop
jb
xchg
dec
mov
inc
in
dec
pop
push
fadd
or
xchg
test
mov
add
fist
shl
in
daa
pusha
pusha
mov
(bad)
not
jnp
mov
je
jnp
lods
mov
cmps
mov
and
sub
aam
imul
push
cmp
mov
js
test
mov
adc
loope
sub
jl
fistp
xor
div
pop
ja
xor
inc
and
aas
sub
mov
inc
popf
pop
arpl
and
je
cmp
jp
xchg
loope
fcompp
or
cwde
jnp
jmp
rcl
xlat
mov
aam
mov
xor
xor
jne
daa
rol
(bad)
out
push
and
push
into
repz
push
dec
adc
sbb
mov
mov
(bad)
mov
(bad)
mov
push
scas
cwde
pop
jbe
cmp
out
rcr
mov
mov
test
xlat
dec
add
xor
adc
sub
sbb
jno
jmp
ror
and
jg
and
cdq
lods
nop
fsub
jo
shl
xchg
mov
enterw
into
jp
in
or
inc
xchg
fs
in
dec
out
mov
pop
repnz
xchg
jmp
clc
adc
mov
ja
sbb
popf
mov
fisub
sub
add
scas
mov
enter
fcmovnbe
cmp
(bad)
es
pop
nop
scas
test
dec
push
popa
inc
or
enter
stc
jb
cwde
xchg
fwait
daa
mov
ss
fst
aaa
jnp
mov
pushf
hlt
sbb
cwde
dec
sub
data16
dec
imul
mov
popf
sbb
lahf
or
(bad)
mov
scas
dec
repnz
cmp
cmp
iret
dec
jle
pop
mov
mov
sbb
dec
mov
loope
mov
cmps
imul
mov
jo
and
in
daa
dec
mov
inc
jmp
pusha
dec
mov
movs
stos
popf
je
sbb
sbb
fs
push
int
sub
retf
outs
cmps
xor
xchg
jg
adc
fbstp
push
cmc
cmp
popa
dec
stos
mov
sub
sub
mov
add
icebp
out
mov
adc
stos
test
std
pop
mov
mov
jmp
mov
out
ja
enter
test
popf
fbstp
outs
sbb
arpl
push
fisub
lods
(bad)
lahf
mov
push
and
faddp
jp
mov
int3
cmp
retf
scas
je
jp
sbb
or
mov
xchg
inc
mov
jmp
(bad)
cmps
mov
(bad)
scas
sbb
dec
dec
sub
addr16
mov
xchg
(bad)
pmulhuw
pop
cmp
fist
les
test
mov
jl
hlt
outs
jbe
sti
int3
push
ret
xlat
pop
mov
das
icebp
pushf
cmps
dec
outs
icebp
pop
stos
xchg
xor
xchg
ficomp
xor
leave
inc
jp
lea
data16
iret
sbb
or
jmp
xor
int3
dec
popa
mov
pushf
out
xchg
ret
paddsb
xchg
push
sbb
cdq
sub
shr
push
jecxz
mov
rcl
xchg
sbb
push
in
enter
ins
or
push
push
cdq
icebp
call
mov
jmp
icebp
cdq
test
sub
cmc
out
cmp
out
test
pop
fs
sub
jno
nop
cwde
or
daa
ins
jno
and
mov
dec
add
push
out
repnz
jno
out
popf
repz
stos
popaw
mov
js
pop
or
cmp
pop
push
call
add
jno
jle
pop
mov
lods
lods
adc
mov
pop
xchg
mov
or
xchg
in
cmps
(bad)
xchg
lods
pop
dec
dec
xchg
jne
je
jmp
(bad)
loope
inc
lods
mov
loope
dec
inc
(bad)
add
aam
add
or
ja
dec
pop
daa
je
movs
xchg
sar
jne
jg
mov
or
rcr
and
push
out
jbe
xor
div
mov
lea
aam
test
stc
xor
mov
popa
mov
enterw
nop
cmp
pop
or
pop
bound
pop
test
not
ins
mov
mov
scas
retf
adc
retf
inc
adc
sbb
adc
sub
mov
lods
scas
sub
cmc
aas
(bad)
sbb
out
inc
cmp
nop
cdq
or
repz
adc
ja
pop
mul
xchg
into
icebp
popa
(bad)
fst
popf
push
int3
dec
push
out
es
dec
inc
pop
push
imul
cmc
adc
mov
pushf
mov
jecxz
cmp
or
(bad)
call
ret
mov
add
loope
lods
stos
idiv
hlt
or
dec
xor
mov
and
pop
mov
mov
mov
mov
jl
pop
push
lea
hlt
xchg
gs
and
retf
sti
out
test
out
in
sbb
jbe
movs
lods
adc
dec
imul
jp
(bad)
add
rcr
mov
jmp
dec
jmp
add
jne
pop
movs
adc
cmp
cld
cdq
enter
xlat
pop
xchg
inc
push
pop
aam
jb
mov
cdq
dec
(bad)
pop
and
arpl
and
jb
add
pop
pop
repnz
in
lock
rcr
add
prefetch
nop
sub
dec
outs
xchg
nop
retf
dec
and
jl
dec
xchg
sti
popa
adc
jmp
daa
dec
cmp
and
mov
pushf
xlat
mov
xlat
add
pushf
pop
push
mov
popf
add
push
daa
xchg
cld
cmovno
pop
sar
pop
loop
repz
dec
test
ja
mov
pop
mov
stos
mov
leave
test
jecxz
je
pop
inc
xor
jae
cli
imul
das
test
mov
push
gs
ror
and
js
lock
pushf
inc
xor
pop
hlt
sbb
stos
lahf
cmp
ret
dec
or
cmps
add
add
xor
xor
mov
cmp
ja
ins
push
in
dec
hlt
inc
enter
push
gs
mov
or
dec
pop
mov
lods
retf
mov
add
int3
sbb
mov
icebp
xchg
mov
imul
cli
jbe
jb
xchg
mov
push
out
mov
leave
add
sbb
loope
leave
repnz
adc
mov
fadd
shl
push
xchg
fisubr
mov
xchg
std
pop
jge
ret
push
js
lods
jne
and
pop
cmp
stos
nop
add
mov
cmp
sub
movs
cmp
(bad)
shr
and
push
enter
push
mov
and
icebp
repz
push
push
add
retf
lea
lods
test
(bad)
mov
add
or
in
je
popa
es
push
add
div
jmp
xor
ret
or
rcl
sbb
adc
fwait
stc
movs
or
out
ins
jno
push
out
in
sub
in
mov
jle
retf
pop
mov
loopne
call
and
jl
test
pushf
xchg
sbb
(bad)
icebp
xchg
xor
call
and
shl
cmp
mov
daa
jmp
es
or
rol
inc
inc
pop
sub
dec
stos
and
cmps
xor
imul
out
in
xor
pop
ds
xchg
xor
loope
push
mov
push
jmp
inc
(bad)
ror
fwait
xchg
arpl
pop
stos
sbb
bswap
iret
xchg
lds
mov
or
mov
loopne
dec
out
cmp
and
(bad)
retf
lahf
inc
fwait
in
(bad)
xchg
xor
in
add
mov
jle
push
jmp
pop
dec
div
jnp
in
adc
cmps
xchg
outs
stos
pop
jmp
sbb
(bad)
aaa
aaa
or
fisttp
into
cmps
jbe
rol
dec
sar
jbe
dec
je
mov
push
mov
lods
or
ins
cmps
dec
cmp
mov
inc
iret
pop
out
sbb
call
mov
mov
(bad)
pop
push
fdivr
xchg
ret
imul
mov
aam
arpl
out
loope
movs
mov
stc
enter
dec
push
adc
aam
xchg
sbb
std
loope
sar
fsub
xor
push
mov
loope
adc
jg
pop
std
in
hlt
ret
dec
jecxz
in
imul
sbb
jl
adc
pop
xchg
inc
mov
fld
imul
cmc
stc
imul
(bad)
shr
mov
dec
into
lods
push
xor
dec
(bad)
sbb
xchg
aas
loope
test
mov
rol
pop
push
test
(bad)
adc
push
lock
fwait
call
je
jmp
out
add
mov
and
mov
push
lea
imul
dec
adc
ficomp
dec
repz
mov
mov
shr
jnp
fild
mov
inc
test
je
xor
outs
loope
add
add
jmp
test
daa
jns
(bad)
(bad)
movs
cmc
jbe
sbb
cmp
addr16
addr16
jo
ja
fst
stos
cld
aad
push
test
inc
cli
inc
movs
xor
cmp
jns
inc
xor
int3
les
mov
add
lea
lods
retf
add
xor
xlat
dec
retf
es
pop
cdq
push
in
inc
mov
mov
jb
xor
adc
out
sbb
je
sub
mov
sub
jns
fld
stc
mov
enter
jl
jmp
inc
push
push
mov
cmp
rcl
call
sub
(bad)
dec
dec
imul
loop
add
mov
xor
jb
jbe
fadd
xchg
int3
pop
inc
xchg
cwde
add
adc
fild
lahf
push
or
xchg
hlt
add
pop
in
and
sti
in
or
retf
test
lods
add
or
sbb
jmp
cli
sbb
in
or
cmp
mov
(bad)
xlat
gs
xor
sub
jnp
cmps
iret
retf
mov
hlt
fist
into
in
imul
push
add
pop
mov
push
movs
add
mov
and
scas
xor
lods
sub
test
mov
imul
in
pop
adc
(bad)
fist
sbb
push
in
pop
inc
stc
in
or
rol
jae
xchg
lahf
mov
jo
cmp
push
pusha
leave
aas
or
retf
(bad)
int
jmp
sbb
cli
push
ins
ins
ss
or
ret
mov
ret
push
dec
or
xchg
pusha
pop
arpl
popa
(bad)
mov
jbe
sub
xchg
es
sbb
and
xchg
scas
ins
test
adc
push
dec
jmp
or
scas
adc
cmc
or
rep
loopne
sar
dec
cmp
inc
push
scas
adc
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
mov
fstp
fst
test
pop
xchg
retf
or
fnstcw
pop
retf
addr16
xchg
push
div
and
lldt
sbb
mov
out
pop
inc
xor
inc
push
add
xchg
in
jecxz
mov
pop
cmp
dec
mov
cmp
xor
outs
lock
arpl
pop
mov
dec
xor
xchg
test
in
sbb
adc
mov
push
hlt
adc
pop
sbb
scas
icebp
add
add
repnz
pop
xor
loop
retf
push
or
cmp
adc
jb
pop
not
pop
stos
add
pop
mov
jge
jl
stc
inc
lds
xor
scas
fst
movs
ror
and
jecxz
sub
pop
and
adc
xlat
and
test
mov
test
into
xlat
push
pop
xor
pop
test
jg
push
aam
or
ror
sub
push
xchg
mov
lahf
loope
fs
jle
xlat
leave
xor
xchg
push
cdq
fsub
adc
jnp
jle
into
fstp
imul
inc
push
loop
mov
pop
std
push
stos
pop
(bad)
loop
lds
inc
mov
cmp
push
or
dec
mov
add
inc
ror
mov
jecxz
dec
pop
ret
xor
ror
sub
daa
fwait
sub
inc
hlt
push
ret
les
das
iret
and
or
xor
les
scas
test
dec
jnp
mov
or
adc
add
xor
scas
mov
loopne
test
dec
sbb
pop
mov
jmp
xchg
pop
lods
inc
fst
xlat
xor
int3
sub
loope
mov
lock
cmps
add
mov
fidivr
xchg
in
int3
push
aas
inc
into
xchg
popf
arpl
popf
es
xor
not
and
into
pop
enter
lock
push
std
loope
sbb
jmp
in
pop
popa
pop
push
xchg
fidiv
imul
xlat
icebp
loopne
imul
sub
cli
pop
and
cli
aaa
ja
push
dec
xor
loope
ins
xor
(bad)
(bad)
cdq
mov
stos
lds
ret
stos
adc
lea
rcr
test
push
adc
test
out
add
mov
xor
popa
fidivr
js
(bad)
xchg
pop
pop
movs
xor
scas
sbb
test
ss
js
cld
or
adc
leave
(bad)
(bad)
xchg
(bad)
cmp
mov
mov
fild
(bad)
loop
ret
jecxz
cmp
lods
movs
cwde
mov
adc
out
pop
pop
(bad)
jbe
call
mov
cmps
retf
and
paddusb
add
outs
cmps
push
push
mov
mov
sbb
cmps
xor
mov
ret
push
arpl
mov
jle
movs
test
lock
loop
dec
xlat
dec
retf
outs
inc
inc
aam
aad
mov
stos
outs
push
fisttp
nop
movs
or
std
mov
dec
or
jmp
push
lea
jb
cmc
dec
stos
jmp
movs
xchg
lods
outs
mov
imul
inc
es
movs
push
aad
addr16
xor
jne
cmc
push
(bad)
test
jns
adc
add
cli
dec
adc
cmp
fisubr
neg
ficom
mov
mov
cmp
jnp
in
jl
xchg
lods
pop
and
mov
or
push
sbb
or
cmp
fcmovb
xchg
daa
iret
dec
daa
movs
adc
mov
sbb
ins
icebp
ins
(bad)
fist
mov
cmovge
dec
and
mov
mov
aas
out
test
sub
dec
mov
mov
movs
adc
cmc
mov
inc
sub
icebp
gs
ins
add
mov
mov
call
inc
push
and
mov
xchg
jmp
mov
es
ds
xor
data16
ret
xor
scas
mov
mov
js
or
pop
(bad)
fs
loop
pop
loop
pop
xchg
out
cmps
jns
and
push
pop
xchg
jne
mov
add
push
fcomip
pop
cmp
fld
xor
test
mov
add
lea
cmp
sub
mov
aam
in
call
inc
aad
jnp
daa
xchg
(bad)
int3
daa
iret
xchg
mov
aam
mov
retf
jo
xchg
cmc
and
stos
ins
cdq
stos
mov
fwait
push
mov
fld
sbb
sbb
ror
dec
jbe
sub
push
call
inc
mov
or
push
sub
ss
loop
sub
and
cmp
dec
out
inc
or
mov
fwait
test
sbb
(bad)
jns
int
and
jbe
lock
mov
sbb
int
out
push
ins
aas
and
es
and
cli
jmp
test
add
in
jo
(bad)
das
mov
call
iret
lea
dec
icebp
adc
leave
sti
and
and
jne
pusha
dec
add
xor
inc
sahf
jmp
sub
or
add
std
add
cld
in
fidivr
jns
outs
pop
pop
mov
or
sub
and
shr
cmp
hlt
mov
pop
jbe
ret
sbb
aaa
sbb
pop
sbb
cmps
pushf
dec
xlat
int
mov
jmp
sbb
pop
pushf
xor
sbb
movs
mov
dec
test
push
adc
dec
push
cdq
lea
loope
push
adc
xor
pop
stos
push
cmp
(bad)
lds
fidivr
movs
mov
inc
push
add
jmp
push
imul
pop
out
cmp
dec
and
push
fdiv
bound
daa
pop
fwait
mov
xchg
jp
or
xchg
xchg
dec
push
out
dec
add
xchg
jo
or
div
fstp
imul
test
fsubrp
inc
out
mov
arpl
shr
lock
arpl
lea
add
pop
jmp
dec
icebp
leave
and
add
sbb
enter
sub
cmps
dec
mov
adc
sbb
movs
scas
xor
loope
mov
xor
in
dec
jecxz
dec
fisubr
mov
in
icebp
inc
loopne
dec
cmp
xor
fld
in
std
into
inc
ret
test
dec
cmp
cmp
xor
sbb
test
inc
cmc
aad
movs
jge
push
addr16
xor
nop
pop
stc
inc
add
gs
pop
lods
push
fldcw
mov
xchg
or
hlt
fisubr
dec
sbb
xor
mov
add
in
push
xor
cmp
aam
pop
add
cli
mov
sbb
test
cmp
sub
js
or
jo
inc
(bad)
outs
das
mov
pop
in
stc
int3
rcr
cwde
ss
jmp
mov
jae
retf
clc
mul
cmp
test
bound
push
or
mov
aad
imul
ins
inc
xchg
adc
dec
shl
ins
ss
cmps
call
xchg
sbb
clc
dec
push
cli
jecxz
mov
mov
fcmovb
adc
dec
dec
test
pop
and
bound
ret
xor
jne
mov
jp
push
loope
icebp
fdivr
and
sub
inc
add
outs
add
fs
cmps
adc
mov
into
pop
xor
lahf
jl
jne
push
div
push
mov
push
fiadd
out
add
call
movaps
add
out
jns
aaa
retf
mov
lock
dec
addr16
int3
out
cmp
ins
jg
ins
sbb
pop
push
ret
and
adc
(bad)
jg
jl
dec
lods
push
push
sbb
mov
addr16
jno
jo
aad
icebp
out
mov
jnp
sbb
hlt
mov
retf
adc
pop
ins
movs
int
pop
jmp
push
cli
xchg
or
fcmove
pop
jmp
sub
daa
adc
ret
xchg
out
sbb
ja
xchg
repnz
(bad)
jnp
call
lods
sub
jg
(bad)
js
mov
mov
sub
dec
ss
sti
ret
or
(bad)
dec
movs
and
xchg
lods
ins
sub
ja
or
cmp
std
sbb
jbe
repnz
jb
add
test
or
dec
pushf
(bad)
or
inc
mov
test
pop
cwde
into
pop
test
sbb
add
dec
pop
jle
stos
pop
mov
shr
lods
cmps
push
jl
pop
xlat
xor
xchg
lea
mov
out
test
test
fnstsw
ins
push
cmp
dec
shl
cmc
mov
sub
mov
or
dec
dec
mov
push
push
pop
pop
inc
loope
mov
mov
or
fst
sbb
mov
clc
into
ja
je
in
outs
mov
mov
ror
out
ja
mov
mov
jnp
jle
aaa
dec
fcmove
iret
in
adc
cli
lock
adc
out
pusha
mov
adc
cmp
xor
mov
js
(bad)
mov
jle
lock
out
lahf
arpl
pop
mov
and
outs
inc
inc
sbb
xor
popa
mov
into
mov
inc
pop
and
xchg
sub
ret
mov
aad
jmp
or
dec
imul
xor
shl
mov
jb
push
dec
push
out
rcl
pop
call
or
fs
test
pop
(bad)
shr
ret
loope
mov
mov
aad
pop
in
jae
inc
xor
sti
fst
xchg
scas
(bad)
sbb
mov
scas
cmp
inc
mov
mov
jae
mov
push
adc
cdq
inc
mov
pop
pop
jae
fcmovnbe
(bad)
or
loop
mov
je
lods
mov
mov
sar
xchg
fld
mov
dec
and
push
adc
fist
pop
and
stos
xor
mov
and
sahf
inc
and
aas
pop
(bad)
ins
ret
lahf
mov
mov
and
inc
and
arpl
push
aam
popf
outs
xchg
push
(bad)
imul
ret
stos
sub
push
push
ficomp
popf
out
imul
adc
mov
xor
jl
pop
stc
(bad)
adc
mov
mov
retf
mov
(bad)
icebp
inc
push
pop
lods
push
xchg
loope
add
xor
xor
rol
repz
into
fcom
xor
fcomp
test
mov
(bad)
or
push
mov
bound
ss
int
outs
rcr
div
mov
je
inc
fs
dec
mov
mov
cmps
push
retf
test
addr16
xchg
xchg
lods
(bad)
cmp
mov
les
mov
out
pop
cld
jmp
mov
jge
or
(bad)
fucomp
adc
and
inc
jb
pushf
adc
mov
and
dec
jnp
out
push
clc
inc
xlat
ss
dec
dec
mov
iret
and
jmp
and
jbe
(bad)
sti
lods
sbb
shl
adc
add
add
push
dec
lock
cld
cmova
cmp
call
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
push
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
aad
aas
aam
add
icebp
mov
cmp
cli
jo
in
pushf
mov
adc
cdq
fldcw
jnp
or
jno
and
sbb
mov
or
jnp
test
ds
pop
jg
repz
pop
add
sbb
push
mov
out
xchg
call
xchg
fsubr
cmp
jp
leave
push
pop
jmp
pop
(bad)
pop
call
popf
outs
xchg
and
xchg
ror
test
in
jmp
and
int
pop
pop
xlat
popa
dec
lea
dec
les
inc
cwde
call
mov
pop
test
mov
bound
and
sub
bound
pop
ds
arpl
fwait
mov
hlt
lds
ficomp
xor
jle
int
lods
fnstcw
inc
cmc
lock
mov
ret
inc
jl
fist
xor
jno
fsubr
in
bound
ja
lea
or
fld
lea
stc
addr16
repz
inc
xchg
or
cli
inc
mov
fstp
inc
and
mov
jecxz
mov
xlat
retf
(bad)
out
shr
test
cmps
push
popf
push
adc
jae
push
xor
movs
mov
movs
out
or
test
aad
push
je
inc
push
add
xchg
aam
mov
stos
call
inc
scas
aam
mov
cld
inc
nop
(bad)
pop
or
stc
loop
inc
fdivp
mov
fstp
sub
jg
repnz
pop
btr
cwde
or
je
push
das
test
push
pop
pop
dec
or
cs
mov
gs
stc
cmp
push
pop
cmp
lods
aad
push
iret
mov
lahf
fcom
or
sub
cmp
repnz
sahf
pop
fstp
cmp
and
nop
daa
and
xor
or
sub
out
jp
jmp
and
cmps
clc
enter
push
stos
popf
js
push
jge
push
adc
or
sub
add
shl
jbe
dec
ret
mov
neg
jle
xchg
in
lock
lahf
cmc
adc
mov
xchg
adc
jecxz
or
cwde
pop
mov
cmp
jge
sub
mov
sbb
js
test
and
jge
out
ret
shr
cli
inc
mov
xor
aas
int3
shr
cwde
nop
mov
pop
out
aad
pop
and
aad
dec
in
into
pop
mov
neg
mov
mov
fnsave
bound
(bad)
scas
aam
push
and
out
and
dec
loope
ins
popf
mov
fcmovnu
stc
cmovge
dec
mov
into
test
xchg
fsubr
imul
js
or
or
cmp
cs
mov
js
mov
sahf
movs
xchg
in
xchg
mov
cmps
cmps
sbb
ins
cmp
or
xchg
and
add
outs
bound
push
not
inc
test
pop
push
loope
scas
add
mov
mov
ret
cmc
in
loopne
(bad)
jno
or
sub
aas
jmp
and
fst
iret
(bad)
push
mov
or
loope
daa
imul
lock
rcl
inc
icebp
mov
retf
jnp
lds
fimul
push
xchg
imul
push
out
stos
or
xchg
popf
outs
popa
sub
push
sub
es
dec
mov
adc
push
push
fs
bnd
add
(bad)
out
adc
arpl
fs
sub
cdq
and
call
hlt
sahf
xor
dec
out
push
jo
cmc
xchg
sbb
pop
mov
push
inc
adc
in
(bad)
out
fnstcw
xor
dec
jae
or
adc
sub
push
adc
mov
out
xor
cmp
mov
mov
mov
push
(bad)
jns
mov
rcl
call
xchg
pop
jns
enter
dec
mov
addr16
dec
mov
sub
stc
fild
sbb
push
pop
dec
and
xchg
cmp
dec
stc
loope
and
jg
(bad)
cmp
fbld
dec
data16
inc
add
lea
and
out
rol
(bad)
cmp
ins
lea
(bad)
and
(bad)
popa
jecxz
adc
mov
fmul
call
lahf
xor
nop
lea
loopne
ins
mov
and
popf
(bad)
repz
aas
mov
sbb
retf
sub
mov
aam
pop
cmps
scas
jae
dec
leave
ror
into
xchg
pop
cmp
fwait
sub
cmp
jno
clc
retf
test
push
imul
ins
mov
das
pop
or
jle
shl
mov
into
pop
nop
test
mov
loope
jmp
arpl
pop
aad
inc
pop
(bad)
cld
je
or
mov
push
and
(bad)
cmp
jb
push
sub
clc
sub
sub
shl
xchg
dec
rcl
xchg
std
mov
mov
lods
or
xchg
mov
pop
or
int
enter
push
imul
or
enter
mov
popa
xchg
std
inc
and
push
xchg
ror
retf
ret
xchg
fnstcw
stc
in
sub
test
ror
inc
inc
dec
pushf
xor
cwde
add
ins
add
test
mov
in
inc
xchg
mov
and
xor
mov
mov
and
pop
dec
mov
mov
or
mov
cmp
mov
dec
cld
jmp
push
mov
and
adc
push
push
jmp
jo
aad
les
xor
pop
jae
ins
sub
xchg
fchs
push
movs
xor
loop
mov
sti
std
jo
jbe
dec
js
jbe
pop
shl
xor
mov
imul
mov
pop
cmp
add
scas
rcl
test
sbb
ror
or
jg
popf
movs
xchg
ret
hlt
mov
enter
dec
cli
scas
lods
(bad)
aas
sbb
out
pop
xor
push
ror
mov
sbb
(bad)
pop
mov
stc
xor
scas
xchg
jmp
mov
fld
(bad)
dec
clc
push
rcl
jns
mov
retf
popa
ss
adc
mov
xor
leave
rol
ja
les
and
pop
cmp
es
imul
mov
sar
mov
pop
ret
push
mov
mov
loope
outs
les
add
or
ss
cmps
or
retf
or
ror
add
bound
jne
dec
cmps
inc
aam
out
pusha
jecxz
scas
sbb
(bad)
out
jecxz
daa
sub
xor
js
ss
nop
fcom
aas
sub
fistp
pop
fsub
xchg
push
nop
sub
sub
jbe
in
push
dec
jo
or
fsubr
lahf
jno
cs
fstp
xchg
jae
inc
inc
inc
add
mov
repnz
mov
mov
push
lea
call
inc
push
fbstp
test
lods
retf
fs
ja
pop
ins
cmps
addr16
and
pop
mov
pop
xchg
movs
pop
xchg
in
mov
mov
stos
inc
fs
mov
out
aaa
scas
aad
mov
(bad)
xchg
dec
pusha
xor
scas
or
add
aad
xor
imul
rcl
push
jne
fild
(bad)
loopne
fcomp
and
daa
enter
push
push
movs
pop
jns
out
mov
popa
cmp
fs
sub
(bad)
jns
xor
adc
loopne
lods
mov
sbb
shl
cdq
int
pop
in
jle
adc
adc
repnz
xchg
cmp
mov
(bad)
loopne
push
or
in
dec
and
sub
and
fcom
mov
push
pop
jl
dec
push
dec
xchg
clc
retf
out
jle
mov
cmp
pop
aaa
outs
ins
leave
(bad)
aam
dec
jo
cdq
mov
adc
cmp
jns
arpl
test
imul
hlt
pop
inc
aad
and
cmp
cmp
jno
mov
int3
mov
push
mov
stc
pop
pop
pop
jbe
outs
push
sahf
dec
rcl
outs
dec
pop
in
lock
pop
test
mov
aam
fcomp
mov
jne
pop
mov
movs
lds
fisttp
jae
test
ins
push
or
cmp
test
in
push
sbb
pop
and
push
mov
pop
push
jecxz
rcl
sti
sub
shr
mov
sbb
jle
enter
ds
imul
nop
test
fsubr
out
xor
mov
dec
test
stos
cld
or
inc
mul
cmp
jmp
retf
ss
push
out
xor
ror
jg
mov
mov
adc
mov
and
inc
in
out
sub
imul
popf
jns
pop
xor
cmp
push
or
jmp
and
sti
adc
sahf
sti
xor
fnstsw
mov
add
(bad)
imul
pop
bound
leave
retf
je
cmc
in
pop
stos
add
mov
xorps
pop
cmp
rcl
fiadd
in
loopne
into
dec
mov
mov
push
jne
push
fsub
stos
add
push
xchg
cdq
push
or
out
aaa
xchg
ja
ds
dec
call
retf
repnz
gs
push
test
mov
jecxz
mov
jmp
movs
push
sbb
push
sub
sub
push
inc
div
fclex
ss
dec
add
enter
fbstp
mov
xchg
je
push
loop
cwde
jecxz
loopne
sti
or
rep
sti
nop
xor
dec
adc
mov
in
daa
rol
(bad)
sub
out
and
mov
push
pushf
ret
push
add
sti
xchg
sbb
dec
cmp
imul
and
not
movs
fsubp
std
gs
pop
(bad)
(bad)
sar
mov
xchg
push
xor
sub
cmp
fbstp
mul
jecxz
mov
aaa
ds
es
aad
cmp
rol
cmp
jmp
sahf
pop
sub
out
fyl2x
out
add
repnz
test
sbb
sbb
iret
xor
add
(bad)
bound
pop
mov
jnp
ds
sub
mov
shr
ffree
xchg
mov
scas
mov
aam
cmp
outs
sbb
imul
push
(bad)
stc
shl
mov
hlt
mov
mov
xchg
div
jecxz
es
xor
cmps
and
push
fs
test
pop
pop
shr
or
loopne
xchg
ret
pop
retf
dec
test
cmps
cmp
xchg
aaa
sti
sti
cmp
adc
adc
mov
repnz
mov
jge
sbb
bound
gs
not
shl
dec
cmp
hlt
fisubr
dec
mov
pop
sbb
arpl
nop
scas
enter
cwde
push
movs
(bad)
sbb
xchg
(bad)
imul
inc
iret
(bad)
jb
les
aam
jo
cmp
je
mov
and
sub
mov
sub
push
out
arpl
xchg
push
sbb
cmp
cwde
jno
push
add
add
outs
jg
dec
cld
adc
loopne
adc
das
cmp
rcr
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
and
pop
add
mov
jbe
mov
cmps
xchg
ror
mov
cmps
arpl
(bad)
in
fwait
mov
xor
je
jae
jae
aam
jmp
inc
test
add
(bad)
jmp
push
ss
out
mov
sar
xchg
mov
inc
fsubr
sbb
or
call
cmp
hlt
stos
push
leave
adc
push
std
mov
jg
pop
bound
pusha
jne
test
sar
sbb
jl
pop
xchg
lods
dec
out
pushf
bound
dec
jae
das
mov
dec
pusha
lods
shr
shr
xor
lods
arpl
jnp
ss
into
fidivr
in
int
outs
xor
xor
push
call
test
ror
into
(bad)
in
dec
(bad)
cmp
fsub
adc
push
and
in
addr16
outs
fadd
movs
in
in
sbb
push
dec
fwait
push
cmc
mov
mov
es
inc
aas
sbb
in
div
cwde
or
xlat
and
inc
add
push
call
es
xchg
stos
or
and
call
neg
fs
fidiv
in
retf
sbb
jmp
inc
test
clc
pushf
push
retfw
fst
in
add
aaa
mov
pop
(bad)
cdq
adc
xchg
jecxz
icebp
lahf
mov
scas
popa
into
jp
push
mov
imul
cmp
inc
stos
cmp
pop
les
icebp
sub
or
ficomp
xor
sar
(bad)
jp
bound
aad
jle
add
xchg
xor
pop
es
add
fsubp
fs
dec
imul
es
ja
mov
inc
push
les
xlat
into
mov
push
sub
in
mov
outs
scas
xor
out
retf
stc
in
inc
stos
cmps
pop
cdq
and
ins
popf
movs
fwait
jnp
loop
cmp
repz
fs
xchg
lock
arpl
cmps
jmp
add
or
jge
xchg
in
adc
cmp
jl
push
mov
aam
enter
shr
add
sar
sbb
scas
and
call
mov
shl
not
sbb
mov
sbb
add
inc
and
cmp
stc
leave
sub
xlat
inc
pusha
mov
dec
data16
adc
pop
inc
fadd
xor
loop
shl
bound
sbb
pop
and
mov
jecxz
test
push
dec
(bad)
mov
arpl
xchg
push
pop
or
out
cmp
push
ss
shr
and
jne
mov
(bad)
out
inc
fistp
inc
sub
push
imul
xchg
or
mov
(bad)
out
mov
and
and
mov
pop
push
aas
mov
imul
sbb
test
lahf
dec
fild
and
adc
xor
push
xlat
add
int3
pop
pop
push
in
add
test
and
add
or
js
fbstp
nop
imul
pop
cs
icebp
mov
push
push
shl
das
repz
mov
xchg
jae
loopne
mov
adc
stc
scas
daa
ret
loopne
mov
imul
or
adc
test
mov
gs
clc
retf
test
inc
xchg
jg
adc
jnp
mov
fld
or
sbb
cmps
stos
es
mov
ins
mov
dec
mov
jmp
shr
test
std
call
dec
aas
jns
fsubp
and
lahf
out
sub
cmp
rcr
and
(bad)
xchg
xchg
pcmpeqw
outs
inc
in
sub
sbb
in
mov
push
es
mov
xchg
leave
xor
not
xchg
adc
xchg
sbb
cmp
xchg
shr
fiadd
fwait
mov
pop
dec
xchg
jecxz
mov
movs
cmp
push
jp
and
clc
lds
cld
js
test
pop
(bad)
loopne
(bad)
mov
pop
in
mov
add
cmp
jmp
mov
xchg
mov
or
cs
push
shl
cmp
add
movs
ret
sub
jge
call
xchg
push
push
dec
mov
dec
pop
int3
xor
(bad)
ds
xor
add
mov
pop
cli
jnp
imul
shr
inc
out
scas
in
and
add
jae
cmp
shl
jle
dec
and
or
movs
jp
mov
adc
cmp
hlt
xor
js
out
(bad)
cld
jno
or
out
mov
cwde
jecxz
scas
shr
jmp
loopne
cmc
xchg
in
imul
popf
fbstp
rol
js
loopne
fimul
mov
test
xor
loope
pusha
in
cmp
and
into
jmp
pop
sahf
mov
js
add
adc
mov
inc
ins
ins
(bad)
sbb
cmp
(bad)
(bad)
aas
and
ds
xchg
retf
rcr
gs
xchg
push
cmp
and
pop
mov
dec
stos
cmc
lds
xor
sti
repnz
sti
adc
adc
les
mov
and
cmp
in
or
test
xchg
fisttp
inc
ins
outs
xchg
popa
sbb
or
dec
add
push
and
ficom
sub
mov
js
or
dec
sbb
cwde
fdiv
loop
nop
sbb
arpl
mov
adc
dec
sahf
xor
xchg
repnz
add
dec
xor
sub
cld
jmp
push
int
cmps
mov
xor
clc
fidivr
in
mov
jp
and
fwait
jge
jnp
push
jecxz
retf
inc
in
push
pop
xchg
in
movs
mov
hlt
mov
jmp
push
fist
mov
pop
aad
mov
bound
mov
aas
mov
push
test
jb
pop
mov
jl
mov
aas
xchg
jg
mov
shl
xchg
fld
hlt
xchg
cmp
mov
sbb
xor
pop
cmp
mov
test
lds
ja
fisttp
xchg
cli
in
push
retf
add
jl
sbb
pop
pop
push
jle
ins
or
or
dec
pop
cld
dec
fstp
outs
mov
xor
imul
jmp
adc
push
lahf
jns
xlat
sub
test
or
xor
xchg
pop
ja
jp
and
push
jge
icebp
or
sub
loop
mov
loope
adc
xchg
push
cwde
mov
or
cmp
push
xor
imul
xor
outs
add
sub
out
xor
mov
shl
add
add
pop
mov
xor
sar
ins
xchg
or
or
xchg
ja
add
call
les
sbb
scas
jbe
sar
mov
sub
sub
in
jl
shl
push
jno
xor
inc
cmp
mov
sahf
sub
push
or
jno
xor
sub
cmc
lock
mov
mov
idiv
mov
shl
mov
xchg
ds
pusha
stos
das
jg
mov
dec
cdq
and
test
icebp
in
popf
inc
or
stos
inc
push
pop
fs
sbb
push
test
push
pop
fcom
scas
xchg
lods
lahf
pop
mov
xchg
or
xor
xor
dec
mov
popa
lods
or
mov
add
jg
lods
jg
jge
lds
dec
cmp
enter
sub
xchg
(bad)
icebp
jo
push
sub
cs
daa
idiv
ja
mov
mov
out
ficom
shl
out
sbb
call
pop
xchg
sbb
cmp
(bad)
mov
dec
arpl
addr16
mov
and
hlt
jl
cmp
imul
out
mov
sysenter
inc
repz
int
(bad)
pusha
sub
icebp
cmp
call
into
loop
add
mov
aas
lods
inc
and
rol
fs
cli
push
xchg
fimul
fild
mov
cmp
push
outs
in
(bad)
jnp
jns
mov
in
scas
sub
push
stos
call
sbb
dec
(bad)
cmp
sub
daa
test
mov
icebp
xchg
test
es
mov
jb
sub
push
xor
test
int
sub
sti
inc
push
mov
gs
movs
fwait
neg
std
stos
cmp
cdq
inc
fisttp
mov
retf
cmp
push
push
mov
jbe
(bad)
mov
push
sbb
pop
push
push
idiv
bound
jl
pop
into
mov
aam
jle
mov
dec
and
xor
and
(bad)
(bad)
or
int
test
test
mov
jmp
mov
and
mov
les
mov
jl
mov
inc
(bad)
imul
xor
test
jns
xchg
dec
mov
enter
shufps
cmp
movs
gs
pop
mov
loop
xchg
mov
sti
inc
sahf
mov
mov
and
das
push
xchg
or
inc
mov
inc
inc
or
mov
call
test
xchg
cmps
lock
into
adc
into
int
cld
fcmovb
fiadd
ror
arpl
rol
imul
test
push
enter
mov
rcl
arpl
jg
push
std
dec
mov
aas
mov
add
aad
repz
popa
inc
push
adc
loop
das
scas
or
pop
retf
int
fsubr
pop
push
iret
mov
cmps
retf
push
cmps
sub
push
mov
(bad)
imul
cdq
push
push
and
call
dec
sub
add
movs
jg
push
loope
popf
dec
push
mov
inc
(bad)
sahf
addr16
int3
gs
push
mov
popf
imul
test
sub
outs
push
mov
push
dec
dec
push
inc
mov
mov
adc
or
push
mov
movs
(bad)
fild
jmp
add
es
repnz
fcomp
cmp
pop
dec
adc
add
dec
mov
rol
mov
sbb
dec
jb
mov
inc
jno
pop
(bad)
jecxz
lea
sar
aam
pushf
movs
mov
inc
sub
xor
imul
mov
cmp
mov
push
lea
test
xchg
pushf
das
mov
sahf
cwde
pop
sbb
repnz
pop
fwait
or
repnz
mov
inc
push
dec
add
and
mov
adc
lea
ds
inc
and
out
pop
sub
es
into
sbb
push
and
ds
inc
xchg
dec
out
xor
lock
movs
lods
mov
mov
iret
pop
mov
add
xchg
outs
in
outs
es
xor
push
into
not
cli
bound
hlt
fwait
enter
fwait
mov
push
add
lea
aas
push
xor
mov
lods
add
sbb
pop
into
data16
(bad)
ins
ficomp
dec
ficomp
jg
mov
lods
por
movs
mov
iret
pop
mov
jl
dec
aad
retf
loopne
leave
hlt
and
jg
ja
std
inc
push
and
fstp
adc
mov
sti
sar
push
dec
lock
loopne
cmp
aas
xlat
repz
adc
inc
je
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
push
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aas
aad
mov
sbb
xchg
push
mov
cmp
test
(bad)
cmp
retf
mov
sahf
(bad)
push
xchg
xchg
arpl
movs
icebp
mov
xlat
lahf
lock
add
sbb
das
mov
ret
xchg
jne
mov
push
push
cwde
push
stos
cld
daa
(bad)
out
fst
rcr
ret
popa
movs
or
push
push
popf
std
stos
das
call
cmc
cmp
(bad)
loop
repnz
sbb
ror
mov
in
inc
pop
imul
cmp
push
push
xchg
mov
hlt
mov
mov
daa
iret
pusha
les
or
ja
sub
dec
push
and
push
cs
sti
repnz
mov
or
mov
test
xchg
inc
lods
loop
jne
mul
repz
inc
and
fstp
lods
adc
test
jne
pusha
(bad)
cmp
xchg
pop
lea
jne
or
fnstenv
mov
cmp
cmp
inc
outs
stos
das
aaa
bound
jno
push
or
pop
out
mov
sub
xor
stos
out
sub
xor
sbb
outs
xchg
xor
lea
test
adc
lea
cld
repz
jns
jbe
mov
nop
inc
loope
loop
cmc
pop
outs
dec
lahf
pop
push
cmps
adc
adc
add
jmp
js
adc
push
rcr
out
(bad)
mov
aad
popa
sub
cmp
mov
pop
or
call
and
cdq
inc
adc
outs
into
loop
add
leave
repnz
and
adc
mov
cwde
xor
mov
or
fimul
fist
out
jl
jb
shl
out
(bad)
sub
mov
adc
mov
mov
xor
ins
inc
mov
push
retf
(bad)
cmps
fdivr
xchg
cmp
fwait
(bad)
out
stos
sub
(bad)
fiadd
pushf
retf
pop
add
dec
in
mul
aam
enter
repz
mov
sub
mov
in
xor
pop
cmp
sahf
inc
mov
hlt
xor
std
lds
lahf
sbb
mov
shl
xor
cli
aaa
xlat
and
(bad)
xor
frstor
out
dec
(bad)
jp
xlat
js
call
inc
jp
int3
cmp
xor
mov
sbb
push
in
mov
xor
rcl
adc
adc
lods
repnz
enter
pop
stc
mov
add
xor
push
add
pop
sub
jl
mov
lahf
cmp
pop
out
pop
jecxz
adc
sub
xchg
add
jg
data16
mov
ret
out
(bad)
sar
ret
popa
imul
sbb
inc
dec
hlt
mov
bound
dec
sbb
add
dec
pop
pop
fsubr
pop
ja
cmps
repz
add
cmc
jo
mov
call
int
xor
jo
and
jno
popa
sub
inc
mov
test
sub
mov
rcl
sti
jne
xor
push
inc
enter
sub
mov
sub
lds
pop
inc
mov
jne
sti
or
push
je
loopne
pop
cdq
sbb
(bad)
mov
sub
sti
hlt
pop
inc
daa
imul
jae
cmp
adc
jae
jae
outs
imul
sub
mov
in
dec
aaa
sti
shl
ss
pop
dec
mov
nop
sub
sub
aas
outs
pop
bound
dec
inc
mov
xor
(bad)
(bad)
fdivr
shl
shl
call
and
out
test
sub
cmc
lods
pushf
sub
aaa
pop
push
outs
(bad)
dec
out
inc
rol
and
pavgb
xor
fldln2
outs
adc
cs
out
rol
lds
push
mov
sbb
dec
or
jae
hlt
or
(bad)
fmulp
daa
dec
jl
rcr
add
aas
mov
or
sar
imul
enter
in
jle
cwde
cdq
pop
addr16
sbb
leave
ins
jge
fld
jno
(bad)
aad
ret
xor
loop
xchg
sbb
mov
jae
jnp
xchg
out
out
pop
inc
xor
jo
clc
cdq
js
adc
dec
fiadd
and
(bad)
aaa
movs
mov
in
loop
pop
repz
sbb
loop
push
aad
xchg
mov
neg
mov
fsubr
or
ins
push
sbb
mov
in
ds
jne
mov
inc
push
fs
scas
jb
cmp
ss
mov
cwde
xlat
sbb
loop
(bad)
adc
inc
mov
loope
push
mov
loope
sbb
sub
or
lock
(bad)
mov
inc
mov
popa
or
xor
xor
ins
mov
ins
xor
aam
loopne
xchg
lock
out
jl
jmp
out
push
pop
scas
lods
dec
in
adc
ja
cmp
mov
ss
and
ret
gs
cmc
ss
add
(bad)
add
jbe
bound
mov
arpl
test
pop
push
loopne
mov
sbb
and
cs
pushf
test
shl
rcl
jo
sub
cmp
mov
in
shl
push
test
jo
xor
inc
and
adc
sub
push
mov
mov
sbb
aaa
call
mov
pushf
data16
push
xor
imul
ja
loop
jb
enter
rcr
jb
fild
repz
mov
data16
clc
shl
sbb
push
ins
adc
push
movs
call
popa
int
aas
in
jl
jmp
scas
pop
ret
push
call
stos
push
(bad)
mov
std
inc
sub
mov
pop
mov
mov
jge
push
adc
movs
les
inc
dec
lock
(bad)
retf
mov
sbb
pop
shl
sti
mov
scas
call
sub
add
push
iret
rcl
jnp
push
pop
pop
push
xor
jo
sbb
jecxz
(bad)
xchg
call
jmp
popa
add
jp
cli
pop
div
pop
retf
add
and
daa
or
jbe
ds
add
rcl
sub
les
test
mov
adc
rol
sahf
xor
push
push
cmp
imul
cmp
(bad)
push
mov
mov
sahf
fild
sbb
mov
dec
pop
jno
xchg
add
xchg
push
mov
cwde
out
mov
jb
outs
jb
clc
pop
sbb
hlt
inc
pusha
sahf
pop
cmps
sub
retf
sbb
adc
std
outs
adc
mul
daa
cwde
mov
jno
push
cmp
and
(bad)
fimul
movs
mov
push
xor
push
pop
in
mov
in
icebp
add
scas
mov
call
inc
sbb
gs
(bad)
fist
mov
mov
xchg
movs
and
mov
inc
jnp
cdq
cwde
inc
lea
test
stos
dec
push
push
mov
scas
xor
repz
push
jb
rcr
mov
pushf
scas
jge
mov
into
in
cmc
and
pop
or
pop
pop
xchg
lock
(bad)
jmp
pop
fwait
loop
sbb
ret
and
movs
jo
in
pop
jp
stos
in
out
and
sbb
jmp
in
iret
and
jmp
lods
leave
push
aas
mov
and
ficom
ror
cmps
outs
pop
jns
xchg
out
jbe
cli
push
fdivr
mov
xchg
mov
sub
loop
daa
add
xchg
pushf
addr16
xchg
in
shr
scas
mov
xchg
shr
dec
mov
cdq
test
xchg
cld
dec
data16
pop
out
int
xor
mov
push
inc
inc
scas
loope
mov
mov
gs
mov
mov
pop
cmp
bound
fisttp
ja
xor
bound
xor
sar
pop
or
(bad)
aas
sbb
adc
aam
and
and
xor
dec
xchg
jmp
pop
sbb
inc
jg
pop
pop
int3
sbb
aam
mov
xor
mov
cs
xchg
pop
leave
mov
adc
pop
sub
or
out
add
jb
daa
jb
aas
clc
(bad)
scas
xor
xchg
jne
push
fld
aaa
inc
add
mov
int3
inc
xchg
sbb
call
icebp
jg
retf
cmp
mov
(bad)
push
jle
icebp
mov
adc
std
(bad)
in
out
hlt
adc
jns
push
fcom
jne
ror
aad
sar
sbb
jg
fs
push
ins
outs
loop
mov
lock
out
push
mov
adc
in
jecxz
jmp
pop
adc
test
cmp
pop
ins
test
je
icebp
push
outs
and
jge
scas
popf
leave
stos
dec
(bad)
hlt
mov
fstp
mov
int
jbe
clc
mov
idiv
add
mov
push
adc
mov
sbb
dec
rcl
push
test
dec
cmp
pop
ss
inc
jo
arpl
fwait
arpl
aam
xchg
mov
imul
(bad)
xor
dec
add
ror
cmc
pop
cld
jb
dec
xchg
mov
push
das
in
jne
fstp
xchg
push
lods
stc
arpl
and
es
jge
mov
sub
pop
ror
cmp
enter
iret
cmp
dec
mov
mov
and
es
cmp
ins
outs
daa
shr
add
loope
xor
add
test
or
mov
hlt
mov
jo
mov
dec
pop
(bad)
dec
or
sbb
jnp
pop
xor
ret
jae
or
jecxz
sub
xchg
lea
or
(bad)
cmp
cld
and
sar
cmp
sahf
adc
push
sub
aas
ins
in
mov
fidivr
jb
adc
loop
sbb
mov
push
in
cmp
scas
jae
jl
sub
pop
cld
arpl
ds
xchg
jno
popa
lea
push
enter
sti
sbb
fisttp
in
pop
inc
les
sbb
mov
dec
fwait
add
sbb
sub
mov
cmps
jae
and
fldenv
xor
imul
ret
dec
cdq
and
mov
loope
stc
int
mov
cmp
mov
xchg
cdq
mov
repz
sar
sbb
(bad)
cmp
out
inc
call
push
int
outs
popf
movs
push
shr
(bad)
ja
jae
(bad)
out
fsubr
cwde
ja
setb
push
int
jae
pop
jbe
cdq
repz
or
xchg
mov
cmps
mov
add
data16
fs
std
mov
aas
xor
sbb
into
dec
nop
stos
ins
int
aad
lock
shl
sbb
popf
(bad)
call
push
mov
push
mov
call
or
jle
neg
push
gs
jns
mov
or
sub
ins
ret
add
mov
add
int
jo
int
dec
inc
js
jmp
mov
call
test
inc
dec
xchg
in
jg
cmp
ja
stos
jg
test
test
pop
pop
xlat
popa
cdq
addr16
mov
loopne
inc
or
adc
daa
lock
loopne
sub
aas
lock
inc
and
sar
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
push
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
(bad)
mul
aam
add
icebp
dec
mov
in
cmp
in
xor
sub
addr16
into
pop
sub
(bad)
fstp
jecxz
fs
mov
cmp
cmp
ret
repz
loope
rcr
add
mov
aad
dec
jmp
push
mov
clc
push
jne
std
push
push
dec
(bad)
lods
sub
cmp
cld
and
sub
push
cmp
adc
test
push
sar
ins
xlat
jo
stos
jnp
sbb
sbb
test
pop
mov
inc
mov
(bad)
jge
and
mov
mov
pop
out
jb
mov
push
push
ss
mov
xchg
xchg
jns
push
and
inc
js
sbb
mov
mov
repz
xchg
add
fwait
or
js
pop
pop
mov
not
xchg
sub
mov
add
mov
mov
imul
rdpmc
addr16
xchg
xchg
aas
int
repnz
sub
and
fld
jge
(bad)
retf
scas
int
jno
cmp
or
add
jbe
sbb
jne
and
mov
mov
push
adc
retf
cmps
aaa
fdiv
jno
(bad)
fidiv
in
push
add
mov
lods
and
imul
jo
mov
sar
mov
dec
pop
mov
mov
dec
pop
mov
fs
adc
xchg
or
adc
or
inc
fs
scas
movs
nop
sub
xchg
xchg
mov
push
push
jno
shr
ror
and
or
aad
fnstsw
xchg
pop
mov
and
jecxz
call
cmp
sub
fs
pushf
mov
cmps
pop
pop
or
add
push
scas
jae
retf
and
ficom
push
push
push
fild
xor
jae
pop
out
push
pushf
jbe
aad
into
xor
lds
loop
iret
and
or
js
pop
push
scas
rol
mov
sub
inc
fwait
mov
jno
sbb
ins
js
mov
out
mov
sbb
cmps
or
cdq
mov
in
movs
fcomi
xchg
adc
sahf
scas
fs
adc
sbb
les
push
sbb
arpl
loopne
call
daa
sbb
sar
(bad)
stc
xchg
xchg
cli
movs
mov
xchg
pop
push
(bad)
sti
dec
leave
and
add
sub
aam
sti
scas
push
sahf
sti
jb
mov
je
push
jecxz
push
ins
cmp
imul
sbb
xchg
xchg
popa
sahf
ror
aam
inc
loopne
cmp
fisub
int3
pop
lea
fwait
mul
int
into
and
(bad)
cs
inc
inc
(bad)
jno
test
mov
inc
or
jne
mov
fs
dec
(bad)
fcom
xor
xchg
ins
shl
rcl
fnstcw
jmp
sti
shr
jno
push
mov
dec
xchg
cld
inc
std
pop
ins
ins
cld
imul
sbb
cmp
je
retw
gs
jo
outs
cmps
inc
and
loopne
xor
rcl
xchg
vcvtsi2ss
pusha
mov
jecxz
loop
sti
mov
dec
cwde
call
or
lods
scas
add
lods
test
jne
jmp
retf
and
and
ret
xchg
ja
test
pop
test
aaa
sbb
sbb
jmp
test
sar
add
sub
dec
mov
out
(bad)
iret
adc
mov
jle
mov
mov
jb
mov
movs
les
sub
adc
daa
cld
out
test
add
cmc
les
mov
add
mov
cmp
sbb
pushf
or
ins
dec
rol
xchg
das
out
pop
pop
popf
in
inc
fs
imul
dec
loope
pop
mov
push
adc
jno
cmp
test
retf
mov
daa
fild
gs
(bad)
fmul
dec
mov
and
mov
daa
mov
in
repz
nop
mov
mov
mov
cli
outs
mov
ror
mov
add
mov
mov
inc
jg
mov
cmp
jmp
repnz
cmp
retf
push
inc
or
pop
(bad)
mov
leave
ret
idiv
sbb
lds
lahf
es
jae
or
push
sub
pop
add
mov
lock
cmp
pop
cmp
pop
cmp
fsubp
cmp
fbstp
adc
leave
xor
mov
xchg
mov
xor
jnp
jle
xor
xor
mov
or
push
dec
cmp
push
loopne
sbb
push
jge
addr16
or
popw
and
fld
into
add
rcl
outs
stos
(bad)
add
dec
addr16
and
pushf
adc
in
push
jae
mov
(bad)
ret
inc
test
data16
xor
lods
add
sub
sub
xor
sbb
push
xchg
(bad)
cmp
jnp
lods
out
in
jns
jnp
sub
subps
add
fdivr
aaa
pop
add
out
pop
mov
(bad)
addr16
cwde
cs
jecxz
or
and
dec
es
sahf
sbb
popa
xor
fcmovnbe
hlt
cmps
push
lods
mov
inc
sub
fisttp
fst
int3
inc
call
mov
mov
addr16
je
hlt
out
in
js
and
stos
push
(bad)
test
aad
sahf
cmp
or
mov
cmp
inc
(bad)
jbe
jb
adc
and
dec
push
cld
aaa
add
lea
or
scas
test
fidiv
or
outs
leave
shr
mov
(bad)
dec
pop
push
popf
inc
test
sub
mov
push
movs
out
out
leave
fisttp
cmp
retf
test
loopne
ror
aaa
aas
push
push
enter
test
sahf
jmp
fsub
sub
cmp
dec
jbe
retf
loopne
inc
mov
fucom
stos
loop
jae
repnz
jg
jge
mov
rcr
cwde
call
stc
sub
imul
aam
(bad)
xchg
int3
inc
pop
add
lea
mov
popa
pusha
mov
pop
jnp
cmp
sub
in
movs
cli
xor
scas
bound
push
mov
iret
push
inc
inc
sub
inc
hlt
outs
aas
in
imul
add
out
xchg
retf
jle
ss
mov
cwde
xor
mov
pop
xor
movs
ficomp
das
daa
mov
sub
(bad)
push
add
aaa
xchg
cmp
cwde
fcomip
mov
sahf
push
pop
(bad)
pop
push
popa
das
out
mov
cmp
test
stos
pop
mov
clc
pop
into
jne
mov
fsub
scas
std
outs
cmp
data16
out
sub
fnstcw
sub
push
jmp
imul
int
push
cld
mov
pop
(bad)
outs
aas
mov
lock
and
cmc
arpl
push
dec
iret
sub
test
adc
adc
sub
(bad)
sub
rcl
fstp
in
leave
icebp
lods
add
adc
cli
mov
fcmovb
(bad)
push
mov
jae
jl
sbb
mov
outs
addr16
mov
imul
push
adc
pop
or
std
mov
ret
jbe
enter
rcl
sub
call
xchg
adc
mov
xchg
movs
sub
rol
outs
xor
out
fdivr
sbb
es
in
mov
sub
push
scas
jbe
test
ins
int3
push
xor
iret
sbb
nop
cmc
or
mov
fdivr
fnstsw
pop
dec
sbb
arpl
mov
xchg
ss
ret
neg
lahf
daa
mov
mov
cmp
test
inc
push
pop
imul
ret
mov
mov
lods
outs
pop
cmps
(bad)
add
jmp
mov
dec
lods
dec
jecxz
lea
mov
add
movs
out
enter
add
ds
fisubr
daa
push
call
pop
(bad)
rcl
adc
test
clc
cdq
into
(bad)
out
and
in
cwde
add
mov
or
mov
fistp
xor
and
and
popa
stc
mov
in
mov
and
retf
jg
inc
xchg
cdq
sub
lahf
scas
outs
and
rcl
(bad)
xor
mov
loope
xchg
(bad)
aaa
sub
scas
je
or
js
bound
gs
push
sbb
xchg
shl
xor
sbb
or
loope
cmp
fwait
js
xchg
jl
jbe
xchg
mov
mov
arpl
loop
mov
mov
jno
lods
lods
sbb
lds
frstor
in
rep
jmp
push
test
daa
or
pop
shr
nop
xchg
pop
and
movs
fsubp
(bad)
sti
(bad)
mov
cmp
jbe
jo
mov
test
jns
mov
(bad)
sti
mov
(bad)
sub
xchg
add
stos
or
mov
(bad)
mov
fisttp
ja
jle
in
jmp
aas
inc
cwde
(bad)
sbb
fisttp
jmp
retf
lods
mov
ds
jle
or
pop
xchg
pusha
add
fiadd
pusha
mov
adc
push
sub
pop
test
cmps
je
push
mov
and
inc
cmps
scas
mov
lahf
(bad)
cli
icebp
or
aas
outs
test
or
mov
dec
and
in
lods
scas
bound
or
sub
aam
dec
fnstsw
sti
jb
jle
mov
std
icebp
lock
outs
in
mov
push
jecxz
mov
dec
add
adc
and
ja
out
sbb
mov
js
add
adc
int3
out
sbb
mov
(bad)
jo
lock
imul
jne
adc
in
cwde
jne
or
out
hlt
sub
and
pop
dec
sub
gs
ret
cdq
std
pop
xchg
jo
imul
imul
xor
repnz
inc
test
or
or
jne
loopne
jb
std
adc
and
pop
jmp
push
ss
and
sbb
xchg
jmp
jbe
jbe
rcr
movs
dec
mov
push
aas
mov
shl
fwait
(bad)
cdq
cmc
test
imul
out
test
dec
pop
cld
inc
loope
fidivr
or
jmp
sbb
arpl
pop
das
aas
(bad)
sbb
gs
push
icebp
cmps
add
mov
cld
int3
xor
(bad)
or
jge
loope
(bad)
and
mov
jmp
jne
dec
add
mov
pop
outs
ins
call
call
push
lods
add
popa
inc
xor
adc
xchg
scas
mov
sbb
xor
fidiv
xchg
mov
lds
out
xor
pushf
or
mov
test
ja
push
iret
cld
vorpd
retf
jecxz
pop
retf
cli
sahf
test
imul
dec
idiv
mov
jmp
sar
daa
lock
loopne
sar
lock
inc
stos
dec
push
jp
je
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
aad
inc
xchg
or
and
xlat
push
nop
rol
sbb
mov
retf
inc
call
lea
jae
or
inc
mov
push
mov
jmp
std
jmp
push
imul
shl
ror
neg
jne
jne
xchg
mov
or
inc
mov
(bad)
(bad)
fcmovnu
pushf
adc
pop
fdivr
lock
in
inc
repz
add
jl
(bad)
pop
imul
or
and
sbb
ss
lock
mov
frstor
pop
into
inc
jns
push
jmp
push
fsub
je
call
mov
jmp
mov
xor
sar
ins
test
lahf
adc
or
sar
pop
std
mov
out
dec
sbb
pop
mov
add
dec
push
aad
sbb
jno
adc
aaa
mov
cmps
add
cmp
pop
bound
sahf
(bad)
jg
sub
in
lods
pop
lods
aam
leave
cmc
cmp
mov
test
fnsave
into
icebp
push
or
shl
sti
imul
mov
lea
into
ins
std
jl
jne
outs
pusha
push
cld
(bad)
sbb
mov
addr16
inc
mov
in
pushf
and
jbe
and
inc
push
or
ret
(bad)
jg
ja
jmp
scas
retf
cli
jge
(bad)
fdivr
and
add
out
call
mov
in
xor
push
pop
add
xchg
(bad)
jmp
dec
loop
mov
dec
sahf
pop
mov
jae
daa
adc
cmps
ret
adc
fld
xchg
mov
push
(bad)
or
adc
inc
inc
lock
ins
mul
and
gs
xlat
add
shl
dec
jg
call
icebp
fstp
inc
xor
lds
call
mov
xchg
hlt
movs
mov
in
xor
gs
dec
cmps
xchg
adc
and
aas
pop
or
push
jbe
scas
xchg
int
test
retf
mov
mov
pop
test
sub
test
lea
jp
dec
inc
test
dec
inc
jl
int
retf
int
mov
int3
in
imul
test
or
outs
cmp
pop
xchg
in
xchg
lahf
jmp
sub
cmps
add
test
dec
outs
leave
jg
jecxz
inc
aas
jb
sbb
stos
out
retf
mov
mov
int
outs
scas
pop
mov
aaa
pop
inc
mov
mov
imul
das
xor
sbb
add
les
push
cli
movs
popf
in
and
mov
push
xor
ja
and
sub
add
mov
clc
push
cdq
cs
shr
cmps
inc
dec
push
fcomp
ins
push
ret
movs
sbb
push
pop
xor
shr
hlt
test
mov
sub
into
ret
sub
(bad)
fld
jbe
ja
inc
xchg
or
sub
mov
shrd
enter
pop
sbb
mov
paddusw
sbb
fistp
mov
pushf
dec
sar
mov
adc
cmc
rol
neg
jns
sbb
jno
dec
ins
aad
aad
dec
and
call
repnz
and
jae
jle
and
jecxz
shr
lock
add
pusha
jne
jmp
mov
jmp
push
adc
mov
and
call
cmps
xor
sbb
repz
test
jns
jmp
loope
(bad)
jle
xor
push
pusha
iret
es
(bad)
idiv
mov
adc
push
rcr
and
aam
push
mov
add
inc
jmp
icebp
mov
movs
int3
inc
mov
stc
mov
adc
pop
xchg
xor
jl
pop
fnstsw
not
lock
push
xchg
sub
cdq
jmp
outs
std
dec
cmps
int3
push
addr16
out
(bad)
outs
push
jnp
in
pop
std
cs
lock
(bad)
fbstp
cmp
xchg
pushf
mov
mov
xchg
dec
data16
jmp
jb
in
ja
xchg
push
cmp
and
fbld
movs
std
lea
mov
mov
(bad)
icebp
xchg
mov
sub
mov
push
pop
das
adc
xchg
scas
cli
rol
jo
xor
sti
fadd
shl
push
add
mov
in
sar
inc
fdivrp
fs
pop
jp
imul
js
push
test
add
mov
mov
push
(bad)
add
fsubr
enter
fcomi
ins
lock
mov
cmp
xor
jecxz
xchg
out
int
icebp
inc
scas
xchg
cmps
jle
stos
or
mov
stos
iret
test
jmp
dec
push
rol
add
add
sub
retf
daa
dec
int
jne
jmp
sub
and
push
push
fisttp
mov
(bad)
imul
and
repz
push
pop
int
sub
pop
push
aad
fidivr
xchg
bound
mov
fwait
pop
push
ins
inc
mov
jb
(bad)
nop
pop
jo
or
psrlq
dec
and
shr
sbb
cs
or
pop
push
(bad)
and
dec
hlt
xor
pop
ret
retf
pushf
jmp
jle
lods
js
cmp
mov
pop
mov
ins
cmp
mul
(bad)
sub
mov
pop
pop
sub
mov
cmps
aad
shr
bound
lock
ja
cmp
stos
inc
(bad)
or
adc
sub
outs
mov
mov
jge
adc
mov
int3
pop
sub
mov
in
xchg
and
leave
add
cld
push
dec
(bad)
push
aad
sub
int
test
add
dec
shr
add
push
call
test
into
cs
aas
lods
shr
pop
xchg
jl
enter
mov
mov
dec
es
jbe
mov
pop
sub
jle
rcr
and
push
sbb
mov
push
jb
mov
cmp
push
cmps
in
mov
jnp
mov
xor
mov
and
mov
lods
jge
push
jmp
scas
mov
jmp
mov
stc
sub
xor
sbb
mov
ins
rol
test
add
inc
push
les
xlat
jmp
mov
ss
ins
ja
dec
and
dec
add
sbb
mov
adc
mov
(bad)
cld
jb
mov
outs
call
icebp
xchg
repnz
xchg
jo
loope
and
sbb
out
movs
adc
push
sub
mov
push
jl
repz
sub
ret
mov
les
push
movs
fwait
sub
test
sub
mov
mov
int3
mov
pop
mov
jmp
jl
sbb
xchg
clc
adc
ins
jb
mov
push
fxch
xor
sbb
inc
leave
push
nop
(bad)
mov
fwait
in
jl
es
push
imul
fwait
xor
or
inc
dec
inc
mov
aam
stos
enter
test
push
cld
push
mov
addr16
adc
out
cmps
fcom
jbe
fild
dec
sub
and
add
jno
adc
jp
shl
jp
sar
int3
and
lods
inc
sub
mov
adc
jecxz
fadd
jno
dec
inc
aas
fild
stc
dec
cmps
and
mov
pop
lea
pop
int3
or
xchg
xlat
jg
cmp
nop
dec
out
outs
or
jp
mov
and
jns
es
ins
loop
jbe
dec
mov
mov
xchg
fcom
int3
stc
sbb
mov
arpl
cmp
mov
push
sar
cwde
(bad)
push
loope
pop
cmp
repnz
int3
jns
mov
pop
in
sbb
push
mov
mov
mov
mov
mov
sub
inc
jg
hlt
scas
jl
mov
fdivr
leave
inc
xchg
jmp
pop
das
sbb
cmc
mov
mov
and
fadd
pop
cmp
push
cmp
mov
push
jmp
inc
mov
xlat
xor
push
pop
daa
arpl
std
dec
push
jmp
xchg
jno
push
sub
adc
lahf
add
jbe
mov
pop
jno
mov
sbb
jnp
cmp
mov
fdivr
push
fs
fisubr
loopne
sbb
inc
sbb
mov
sub
pop
jnp
jns
ja
dec
test
fmul
sahf
out
xchg
retf
mov
xchg
and
sbb
xchg
scas
cwde
movs
push
or
mov
cmps
cmp
out
stc
cmps
sub
push
rcr
mov
adc
cmp
pop
repz
inc
adc
jecxz
out
addr16
cmp
stos
jecxz
daa
dec
hlt
mov
repz
pop
sub
fcmovne
and
pop
cmp
inc
mov
add
mov
data16
jb
int
ja
xor
xchg
je
pop
push
xchg
cmp
and
adc
dec
cli
inc
sti
mov
call
std
dec
pushf
leave
jp
loope
cdq
sub
xchg
add
push
mov
in
pop
fdiv
ss
mov
test
sahf
pop
push
mov
xchg
das
jbe
inc
ds
jmp
rol
inc
xor
cmp
sub
pop
cmp
les
sbb
scas
clc
cld
add
dec
test
jnp
imul
xchg
xchg
pusha
test
aad
repz
ret
dec
inc
bound
js
inc
retf
push
clc
mov
or
add
ss
or
test
xchg
adc
dec
push
pop
mov
jmp
push
fdiv
xchg
data16
(bad)
sti
iret
pop
dec
jne
mov
push
(bad)
loopne
ss
xchg
es
mov
or
mov
pusha
sbb
iret
aam
fxch
jecxz
xor
out
push
and
arpl
aad
test
outs
xchg
nop
lds
cmps
adc
aam
popa
cs
mov
jae
or
xor
sub
arpl
sub
rol
jl
icebp
push
mov
jo
xlat
mov
and
stc
test
dec
idiv
pop
fidivr
imul
xor
(bad)
push
pop
enter
xor
add
cli
mov
aad
inc
cmc
ret
iret
cmp
push
nop
push
dec
cwde
push
imul
sub
inc
pushf
xor
xchg
sbb
jp
xchg
xchg
je
and
add
cld
adc
mov
fs
arpl
xchg
fistp
pop
push
cmp
cdq
fs
scas
mov
adc
add
adc
and
and
mov
jmp
mov
mov
adc
aad
cmp
imul
loop
mov
cld
and
imul
fidivr
inc
cmps
lahf
jae
adc
xchg
pop
btr
mov
xor
mov
or
pop
mov
lahf
mov
jne
or
sbb
sbb
jg
shr
xor
lds
movs
hlt
add
bound
sahf
sub
mov
mov
call
push
or
(bad)
(bad)
xchg
cmps
lahf
clc
pop
mov
in
push
dec
mov
push
cmps
pop
mov
js
and
iret
mov
add
mov
mov
or
adc
daa
lock
loopne
sar
loopne
cmp
lods
sbb
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
push
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
(bad)
idiv
aam
add
lock
pushf
adc
jno
push
inc
pop
call
out
ds
rol
cmp
xor
jb
or
inc
data16
test
jno
cdq
lods
out
out
clc
(bad)
(bad)
dec
js
pop
pop
jmp
add
nop
sub
xchg
or
xor
je
jmp
(bad)
(bad)
and
sbb
add
sbb
mov
mov
push
movs
test
fnsave
sti
xchg
dec
adc
mov
imul
leave
repz
scas
xchg
mov
pop
lock
into
jl
shr
mov
push
xchg
pop
dec
mov
idiv
inc
ins
aad
rcr
push
js
mov
shr
push
mov
les
outs
(bad)
xchg
dec
fild
mov
mov
adc
fisub
mov
fnstenv
cmps
std
add
ret
test
repz
loop
(bad)
aad
add
out
inc
std
mov
sub
mov
add
jg
mov
sar
mov
js
leave
mov
shl
retf
faddp
test
push
or
test
in
sbb
les
movs
adc
ds
jb
push
addr16
bound
inc
mov
push
retf
mov
mov
out
sbb
in
pop
jbe
xchg
adc
arpl
xor
cmc
cmc
push
scas
test
pop
and
out
push
xor
cs
(bad)
xchg
sbb
inc
ror
aad
push
test
mov
aas
push
pop
jge
ror
popf
xor
ds
adc
or
jg
or
inc
xchg
adc
aam
outs
dec
psllw
and
pop
jb
aam
push
mov
push
lods
dec
ja
ja
fld
lods
dec
xor
pushf
scas
lea
mov
xchg
stos
fwait
push
xor
sub
jae
adc
mov
(bad)
test
lock
call
sar
xor
loop
call
ins
ss
fucomi
cmp
stos
cmp
fild
xor
pop
fwait
mov
or
jmp
js
sub
and
or
fimul
sub
xchg
xchg
fisttp
sar
pop
ja
jae
icebp
(bad)
pop
or
stos
in
sbb
mov
push
or
xor
imul
ror
mov
jmp
hlt
mov
or
int
jle
in
sahf
lds
mov
lds
pop
aad
adc
pop
dec
mov
jne
mov
(bad)
popf
scas
mov
pushf
mov
movs
jle
xchg
jmp
dec
data16
out
js
in
sbb
popa
mov
into
sbb
or
xor
aaa
add
add
sub
add
jp
add
repnz
les
outs
nop
push
sub
push
in
cmps
loopne
push
pop
push
(bad)
push
jmp
push
mov
mov
inc
sbb
jmp
cmp
lea
dec
xchg
nop
repz
retf
mov
mov
cmp
pop
mov
inc
mov
mov
mov
in
cld
mov
sbb
ds
mov
ja
data16
cmp
cmp
clc
out
jg
in
(bad)
jecxz
jnp
inc
movs
rcr
xchg
out
data16
out
jl
mov
push
out
or
mov
mov
xor
add
xchg
pop
pusha
push
sti
ds
jo
movs
stos
sub
dec
ret
shl
stos
lea
ret
xor
sti
mov
xchg
mov
xchg
adc
jnp
cmp
fiadd
pop
inc
mul
in
into
mov
lahf
call
retf
bound
jno
aaa
ds
int
pop
leave
not
sub
stos
xchg
mov
xchg
mov
and
fmul
mov
fldenv
movups
mov
test
out
push
sbb
xlat
loopne
mov
jecxz
cmc
push
cdq
mov
repnz
sbb
cli
mov
mov
push
lods
stc
imul
push
inc
cs
nop
pop
test
ror
push
outs
div
mov
mov
out
mov
(bad)
sub
es
adc
mov
fwait
(bad)
inc
ror
sub
out
mov
and
cmc
stos
rcr
jne
jl
cs
scas
cmp
out
call
repz
call
push
dec
dec
mov
(bad)
jns
sub
add
mov
push
lock
fimul
in
pusha
cdq
and
mov
inc
addr16
push
inc
aad
jp
xchg
push
dec
pop
popf
popa
stos
mov
cmp
lock
mov
cmp
xchg
data16
ret
cmps
test
adc
sbb
sub
aas
sbb
mov
and
xor
test
sti
iret
xor
in
enter
hlt
imul
xchg
shr
sahf
in
cmova
aaa
mov
retf
mov
add
mov
(bad)
dec
aas
mov
(bad)
fcomi
inc
not
jno
jmp
int3
(bad)
mov
movs
dec
cmp
in
mov
pop
in
mov
jl
adc
cwde
stos
pop
add
fld
into
mov
pop
inc
(bad)
cmps
out
out
jo
mov
fisub
(bad)
mov
mov
mov
xchg
fwait
dec
inc
push
pop
ja
scas
iret
pop
out
enter
push
xor
push
jle
push
mov
pop
nop
mov
test
sub
dec
cmp
sbb
pop
and
xchg
iret
in
ret
or
add
mov
mov
(bad)
fld
mov
inc
loopne
push
cdq
gs
cmp
mov
pop
lods
loop
pop
(bad)
jae
lea
inc
aaa
rcr
mov
bound
call
mov
(bad)
sbb
cdq
pop
mov
cmps
(bad)
mov
arpl
mov
sbb
lock
sub
xor
(bad)
dec
inc
(bad)
jno
mov
inc
das
inc
mov
pop
ret
pop
mov
inc
dec
push
push
cs
cmp
push
fldcw
out
(bad)
call
test
outs
loop
test
sub
retf
sub
mov
out
mov
sbb
mov
rcr
sti
popf
scas
sbb
lahf
cmp
stos
out
xor
jle
push
nop
inc
out
cmp
es
push
pop
jae
ror
movs
outs
or
cli
test
push
cmp
xor
jmp
mov
std
inc
cwde
dec
iret
iret
pop
sbb
int3
mov
into
xchg
sahf
or
sbb
mov
ds
or
jg
cmc
push
mov
nop
or
cmp
(bad)
and
adc
sbb
loop
rol
push
outs
ds
mov
xor
dec
dec
xchg
sub
int3
jp
arpl
out
adc
call
aam
fisttp
lea
push
ffreep
loop
mov
add
fwait
sub
les
test
dec
(bad)
xchg
jno
inc
mov
iret
(bad)
cmp
sbb
mov
in
fisubr
dec
mov
daa
dec
adc
test
mov
xchg
add
ss
loopne
shl
into
jmp
lds
loopne
cmp
inc
stos
push
push
cmp
movs
leave
adc
ja
xor
xor
mov
loop
push
ret
dec
mov
outs
sub
jmp
xor
(bad)
(bad)
mov
ss
fcom
sub
pusha
cs
inc
movs
push
scas
mov
cmps
ret
cmp
xchg
int
popf
dec
mov
shr
mov
aad
das
ins
or
je
(bad)
and
lods
int3
and
ret
inc
lds
xor
xchg
sub
cld
sub
pop
mov
arpl
push
je
cmp
pop
cli
in
xor
adc
icebp
pop
inc
outs
xchg
scas
adc
fisttp
push
call
push
fnstenv
pop
cmp
int3
mov
dec
scas
fdiv
jge
sbb
js
cli
pop
cmc
stos
add
and
adc
jno
in
mov
push
pop
sub
cmp
call
sub
scas
xchg
cmp
adc
push
dec
jle
sahf
imul
(bad)
mov
inc
in
push
ss
mov
setne
icebp
shr
push
mov
std
adc
int3
fist
stos
in
mov
sbb
inc
test
mov
xchg
and
jb
nop
push
xchg
ror
push
ins
pop
aad
mov
pop
dec
sahf
in
shr
int
(bad)
mov
test
ret
fldenv
les
pop
aas
(bad)
sar
aaa
enter
out
xlat
sub
pop
dec
loop
xor
dec
sti
xchg
jno
cld
mov
retf
in
or
fldcw
(bad)
jb
xchg
sbb
pop
and
jmp
out
lahf
mov
test
aad
dec
sar
and
push
push
mov
iret
repnz
pop
and
jmpw
mov
or
std
push
shl
call
test
(bad)
pusha
sub
mov
mov
push
pop
cli
pop
ror
aas
movs
add
sbb
rol
fwait
inc
ja
and
ss
or
adc
or
mov
jb
outs
sub
cmp
shl
imul
sbb
lds
sub
rol
ficom
js
ja
add
das
mov
inc
aam
push
pop
popf
fcomp
mov
ror
jb
(bad)
rcl
cmps
push
or
jmp
push
and
jb
sbb
and
scas
jno
std
mov
sbb
jae
scas
in
cmc
sub
xchg
adc
(bad)
retf
mov
pop
inc
jo
std
add
jecxz
in
or
cmc
jnp
cld
mov
pusha
fnstenv
fidiv
aas
es
(bad)
cmp
ins
mov
xor
pop
call
jmp
retf
mov
cmc
sub
adc
mov
sbb
je
adc
int3
test
cmc
fstp
sbb
push
push
jg
mov
scas
xor
xchg
in
fisttp
popf
dec
icebp
xchg
repz
sbb
inc
push
pusha
mov
shl
inc
popf
mov
or
movs
loope
or
icebp
jnp
mov
jns
ss
out
(bad)
daa
jns
fs
dec
dec
xor
int3
or
sub
mul
push
mov
mov
repz
jl
mov
cmp
fnsave
int
ss
push
out
and
jmp
and
inc
pusha
ss
in
outs
jmp
xchg
push
mov
jmp
sbb
out
sbb
or
inc
or
pusha
hlt
(bad)
fld
inc
cmp
data16
jmp
test
popf
fpatan
into
cmp
mov
fst
cs
(bad)
mov
and
pop
push
test
or
jp
add
xor
cmp
add
cmp
clc
mov
add
arpl
pop
xchg
sbb
mov
inc
dec
push
sbb
pop
push
cmps
out
xchg
xchg
fisttp
and
iret
xor
arpl
lock
leave
pop
sbb
cdq
das
sbb
arpl
mov
(bad)
bound
add
and
(bad)
adc
loopne
rcr
push
loopne
push
ins
and
pop
mov
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
in
dec
jbe
pop
addr16
cmp
lods
mov
enter
sbb
sahf
sbb
inc
fs
popf
xchg
jns
cdq
push
into
xchg
adc
pop
mov
inc
cmp
idiv
pop
add
call
repnz
ins
pop
pop
out
cmp
push
inc
ffreep
outs
or
mov
ret
ins
leave
adc
into
ds
cmp
mov
lahf
or
cmp
mov
scas
jnp
data16
scas
inc
test
jb
cmc
(bad)
retf
dec
sbb
mov
or
sar
fsub
xlat
xchg
jp
jp
test
lahf
dec
iret
jb
jmp
enter
cmp
inc
dec
sub
cmp
sti
pop
push
inc
dec
adc
pop
outs
bound
pop
push
xchg
test
xchg
mov
and
cld
(bad)
push
dec
add
and
inc
cmp
repz
mov
sbb
nop
js
inc
pop
xchg
jecxz
in
fbstp
mov
mov
push
cmps
(bad)
jnp
je
mov
in
int
arpl
sub
dec
mov
rcl
cwde
int
ret
enter
(bad)
sub
mov
dec
cmp
pop
popa
repz
test
pop
out
les
bound
dec
and
adc
fwait
mov
sub
push
mov
add
cwde
rcl
aaa
or
sti
mov
js
sbb
xor
mov
icebp
(bad)
jb
add
lods
pushf
cmps
sbb
shl
pop
mov
inc
xchg
cmc
and
out
xchg
cmovb
fdiv
pop
sub
cmp
fld
adc
out
pop
mov
cmp
and
adc
lock
outs
sbb
lock
retf
popa
jns
dec
mov
nop
add
push
lahf
xchg
cli
out
pushf
cmp
vmread
mov
push
imul
je
or
jne
adc
cmps
add
mov
dec
cmp
scas
adc
push
imul
sbb
mov
mov
push
mov
rep
out
int
out
or
xchg
pushf
mov
daa
xchg
movs
daa
jp
inc
mov
inc
in
jae
inc
or
lea
call
test
stos
adc
push
div
arpl
aad
movs
jns
push
stc
(bad)
(bad)
or
cwde
jns
(bad)
mov
pop
test
sub
jnp
ins
hlt
jne
pop
int3
loopne
pop
ss
fisub
sub
push
or
enter
dec
pop
adc
push
add
std
mov
add
mov
or
or
int3
mov
add
adc
aam
mov
cmp
arpl
sbb
jo
imul
sbb
sub
pop
bound
xchg
add
mov
push
push
faddp
and
dec
jmp
dec
aad
adc
and
movs
xchg
push
and
xor
clc
stos
xor
and
loopne
cmp
xchg
push
out
cdq
mov
aaa
std
popa
enter
mov
mov
js
dec
pop
dec
sbb
add
das
faddp
or
jns
adc
xor
or
mov
out
jle
stos
jl
(bad)
imul
scas
mov
hlt
mov
mov
ins
sahf
loopne
out
adc
dec
sahf
outs
cmp
mov
and
mov
inc
js
lock
inc
jmp
daa
xor
or
cli
dec
push
mov
lea
arpl
call
xor
mov
cmp
lods
pop
push
cmps
and
lods
mov
adc
cmc
and
test
adc
dec
(bad)
xor
jl
and
lock
pusha
jl
cld
jecxz
enter
jle
fxch
xchg
jl
mov
mov
test
push
pop
daa
push
cmp
cmp
inc
adc
xchg
fisttp
pop
xor
pop
les
jno
mov
dec
mov
movs
add
pop
push
fwait
sub
lock
test
jge
scas
sbb
jno
and
call
or
sub
jmp
adc
mov
mov
jp
pop
pushf
imul
jmp
cmps
dec
inc
pusha
imul
push
pop
mov
xor
fmul
je
cmp
mov
push
bndldx
daa
dec
inc
not
test
stos
xor
adc
sub
ja
mov
(bad)
fiadd
sbb
cmp
movnti
test
dec
iret
es
in
pop
add
adc
jns
jnp
pop
and
xor
aas
fdivr
fwait
movs
fcomp
jg
sahf
out
xlat
popf
mov
adc
pop
int3
cmp
call
cmc
sbb
jae
loope
in
rcl
adc
adc
out
in
push
out
inc
cmp
mov
rcr
pop
push
ins
iret
fsub
aam
arpl
ins
dec
std
cmc
cmp
idiv
stc
test
cmp
out
js
mov
scas
les
mov
mov
test
sbb
mov
shl
cmp
xchg
(bad)
outs
mov
test
xchg
add
outs
hlt
bswap
sbb
push
xor
lea
inc
and
das
and
fild
fs
push
test
jo
ja
addr16
rcl
mov
jnp
sbb
push
aaa
push
pop
call
mov
pop
jno
cmp
sbb
push
dec
into
inc
jle
mov
mov
inc
push
inc
cmps
cmp
aad
push
nop
mov
mov
sub
cmp
fisub
(bad)
aas
jg
test
(bad)
aaa
ret
mov
in
or
out
test
cld
iret
jns
ret
test
rcr
in
mov
jb
fst
mov
rcr
icebp
aas
out
or
xchg
in
aaa
les
repz
xor
arpl
out
scas
stos
mov
jecxz
dec
shl
adc
mov
in
aam
dec
sub
stos
push
sti
repnz
add
dec
mov
or
mov
jl
jecxz
paddd
mov
fsubr
add
retf
cdq
loopne
rol
out
out
mov
popa
mov
jmp
scas
test
ins
aaa
pop
(bad)
fsubrp
das
push
cmp
or
stc
aad
xchg
jl
loopne
push
dec
aas
add
push
cmp
mov
bnd
dec
into
aam
rcl
jbe
cmps
cmps
outs
out
jno
and
sbb
cmp
cmp
enter
pop
add
iret
sbb
dec
vmovaps
daa
aas
cmps
stc
adc
xchg
scas
loop
cwde
mov
pop
push
adc
movs
lds
push
fld
mov
mov
inc
mov
fsubr
adc
sbb
or
push
les
xchg
lock
mov
(bad)
mov
imul
jae
cwde
in
clc
mov
loopne
rol
retf
jbe
pop
test
(bad)
in
(bad)
mov
xor
inc
js
jle
fisub
bound
pushf
mov
push
bound
popf
dec
int3
loop
fcom
xor
sub
cdq
mov
jae
ror
add
and
aas
xchg
and
and
adc
add
pop
push
jno
shr
cmp
stc
mov
sti
imul
inc
fucomi
addr16
loopne
fdivp
ret
jno
out
mov
pop
scas
int3
adc
jo
add
mov
push
push
push
inc
jge
push
std
sbb
xor
into
fmul
scas
adc
mov
outs
dec
ret
jmp
aam
adc
xchg
ror
jecxz
cmc
jne
daa
xchg
lods
arpl
and
push
sub
cmp
xchg
and
lahf
je
cmps
fwait
jecxz
ja
(bad)
cs
stc
sub
jmp
push
jns
repz
and
mov
xlat
cld
xchg
cmp
adc
ds
add
loope
pop
jns
or
icebp
push
inc
in
aaa
jp
cmc
ret
leave
xor
popa
or
cmp
fistp
xchg
push
push
enter
inc
add
adc
jo
pop
mov
sahf
ds
iret
fistp
movs
xor
push
lods
imul
lea
pop
mov
loop
mov
inc
fild
outs
jo
xor
cli
ins
sbb
jp
mov
lahf
sub
jmp
pushaw
repz
push
mov
add
ja
xor
or
fldenv
ret
cmc
(bad)
idiv
ds
(bad)
shr
jge
cmp
lods
sub
jl
call
outs
cld
cmps
fs
adc
dec
mov
lea
xlat
cmps
mov
cdq
ja
sti
or
int
movs
sti
push
out
cld
(bad)
push
dec
push
rol
mov
jge
jmp
iret
imul
lods
mov
aas
dec
jno
mov
adc
xor
pop
xchg
aad
lods
xor
das
mov
xchg
ret
lahf
stc
mov
out
cdq
push
cmp
pop
shl
adc
fild
mov
(bad)
jecxz
jl
xchg
pop
in
or
add
retf
push
aad
in
icebp
push
ja
adc
repnz
das
cmc
dec
jns
ror
dec
lahf
mov
pop
sub
sbb
adc
out
test
dec
xchg
std
pop
xchg
adc
inc
es
fimul
xor
jge
pop
stos
push
push
add
imul
loopne
fs
shl
mov
shl
add
push
outs
loopne
xchg
test
dec
aaa
data16
setp
ins
je
jg
mov
cdq
jl
push
and
inc
nop
xor
or
mov
adc
repnz
push
and
loopne
or
push
sbb
xlat
push
ss
scas
imul
push
pmaxsw
into
mov
lods
and
cmps
(bad)
ins
in
gs
ins
sub
aaa
(bad)
je
inc
mov
out
outs
out
xchg
sbb
inc
fadd
push
retf
push
aam
mov
jae
scas
enter
sub
jmp
sub
movs
mov
sbb
mov
add
je
mov
jmp
aas
xchg
test
aad
icebp
xor
jge
jbe
push
mov
(bad)
mov
mov
push
dec
cmp
lds
xor
jp
repz
fs
inc
leave
push
or
xor
mov
test
push
and
hlt
mov
cmc
repz
js
xchg
jnp
lahf
in
push
mov
mov
sub
or
jns
pop
scas
xor
xor
xchg
jbe
sbb
xor
test
fdiv
jno
push
neg
sar
xor
iret
mov
jmp
inc
iret
push
and
or
aaa
pop
sbb
adc
add
jecxz
js
xchg
push
and
push
and
jle
or
ret
push
xchg
loope
push
mov
pop
movs
mov
or
xor
outs
movs
jbe
mov
pusha
std
xor
add
call
movs
dec
dec
xchg
add
push
push
jno
ins
mul
dec
dec
ret
mov
dec
and
or
pusha
ror
inc
jecxz
ins
jns
lods
pushf
jl
jmp
adc
retf
jmp
add
sub
sub
mov
sbb
mov
cmp
loop
rcl
fisttp
jge
push
es
rol
std
gs
mov
test
test
pop
(bad)
stc
aaa
lock
loopne
sar
sar
mov
pop
mov
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
push
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
aam
and
mov
xor
lods
data16
push
mov
jnp
cmp
sub
hlt
(bad)
mov
sbb
call
cmps
aam
cmp
xlat
mov
repz
push
add
ss
shr
or
cmps
adc
addr16
adc
xlat
push
lds
popf
lock
(bad)
ficomp
test
fwait
in
leave
and
jmp
push
outs
fcmovb
jno
jecxz
outs
test
into
fistp
cld
or
jmp
adc
ret
xchg
or
xchg
mov
xor
mov
shl
add
js
jg
and
dec
mov
es
jp
int
or
or
xchg
leave
adc
movs
js
or
(bad)
lods
sub
rcr
sbb
rol
sub
add
and
shl
retf
sahf
stc
mov
loop
sti
inc
enter
leave
xor
adc
fwait
dec
push
and
movs
cmp
fild
add
cld
mul
les
bound
sbb
outs
xchg
push
loop
(bad)
pop
rcr
scas
in
aas
adc
pop
xchg
pop
sbb
ss
rol
mov
mov
or
loope
push
dec
cld
jo
cdq
jmp
xchg
jecxz
mov
push
mov
icebp
test
adc
jecxz
xor
mov
cmp
push
add
bound
mov
aas
inc
aas
movs
mov
into
pop
cmps
pushf
mov
out
daa
fcmovb
sub
enter
push
adc
movs
xchg
push
pop
sub
jne
arpl
mov
shr
dec
sbb
jp
pop
ins
repz
or
fisub
pop
xchg
jbe
call
mov
xchg
pop
adc
movs
fiadd
stos
ja
jmp
(bad)
dec
adc
adc
adc
dec
mov
mov
push
xchg
xchg
ds
or
enter
mov
dec
rcr
cld
add
cmp
imul
jae
div
cmps
jmp
and
adc
cmp
in
sahf
pop
and
push
les
mov
sub
xor
cmps
sub
xchg
int
out
pop
repz
sub
fisttp
(bad)
clc
outs
test
cmp
int
sub
mov
sahf
lahf
inc
xchg
push
dec
stos
cs
out
movs
push
mov
data16
inc
push
ds
lds
sub
std
sub
jb
pop
in
ins
mov
lahf
xchg
jmp
fimul
jbe
mov
das
ja
ret
fcmovnb
loopne
fisttp
sbb
repz
cmp
mov
dec
inc
add
and
int3
vrcpss
bnd
push
sbb
int3
in
out
lods
shl
ror
mov
ret
jp
ins
pop
xchg
mov
dec
cmpxchg
inc
sub
dec
and
push
jl
push
out
fwait
stos
mov
push
stc
inc
ja
sub
sub
sub
or
out
push
inc
push
aam
rep
lahf
(bad)
sub
mov
div
push
out
mov
ja
push
je
pusha
not
out
fs
pop
pop
cmp
push
jnp
into
movs
adc
mov
adc
gs
dec
jmp
xchg
sbb
jbe
enter
mov
lods
not
sahf
sar
xor
xchg
inc
mov
out
mov
jns
fcom
adc
cmp
lods
mov
aas
lock
fucom
pushf
shl
ins
jne
push
jb
jmp
cwde
cmp
cmc
mov
mov
aad
rcr
sub
ins
mov
into
sar
dec
sbb
out
jp
mov
mov
push
or
sub
(bad)
pop
xchg
popa
jmp
jns
jo
cdq
mov
inc
dec
cli
lahf
mov
fsub
xor
pop
les
add
mov
pop
mov
fimul
imul
push
mul
test
cmp
std
test
pop
dec
cmp
inc
jae
ja
sbb
push
shr
sti
stc
(bad)
adc
out
cmps
xor
sbb
loope
and
sbb
mov
int3
fisub
lock
or
cmp
dec
je
jmp
cdq
outs
cwde
push
mov
sbb
add
scas
xor
add
leavew
mov
xchg
call
mov
in
cmp
imul
scas
xor
jle
movs
int
iret
popf
(bad)
daa
sbb
test
movs
mov
scas
pusha
icebp
out
(bad)
mov
dec
retf
popf
mov
sbb
lods
jns
cmc
das
movs
iret
mov
sahf
mov
lahf
mov
xor
mov
mov
data16
repnz
mov
jno
clc
jne
mov
push
mov
daa
sub
push
imul
pop
mov
out
pop
xor
shr
jns
nop
xchg
test
and
fnstsw
ins
ins
cmp
jbe
movs
in
ss
jb
out
aaa
mov
ins
lahf
xchg
fcomi
test
pop
mov
sub
xchg
lock
cmp
call
cli
es
inc
ret
loopne
addr16
cmps
mov
aad
cmp
mov
loope
sbb
outs
jge
xchg
push
add
pop
in
mov
pop
js
adc
mov
mov
push
std
lods
jbe
enter
fstp
shr
cmps
mov
fld
int3
jo
cmp
ja
(bad)
mov
je
ret
adc
adc
xor
push
mov
sbb
imul
repz
push
clc
add
mov
inc
xchg
mov
pop
sti
cli
mov
dec
sub
cmc
loope
int
cwde
fcomp
mov
mov
mov
inc
jbe
mov
jl
push
adc
mov
jge
call
sub
daa
lock
fidivr
test
test
(bad)
aaa
je
mov
mov
jg
mov
ds
xchg
lds
push
pop
fs
clc
mov
or
mov
sub
retf
jmp
cmps
je
pop
lock
jmp
xchg
xchg
dec
ret
jo
gs
adc
lods
adc
arpl
scas
adc
out
das
cmp
out
jp
js
cmp
pop
push
pop
lods
cmps
or
dec
addr16
lods
repz
ficomp
ret
jo
(bad)
fcmove
sub
xor
or
xchg
icebp
sub
jl
aaa
(bad)
int
sahf
mov
push
mov
mov
imul
or
cmps
pop
jne
not
cmps
outs
shr
xor
pop
daa
sbb
loope
mov
les
retf
int3
div
jne
adc
stc
aam
inc
push
cmps
lock
mov
xlat
jl
call
gs
popf
jmp
mov
pusha
cmps
lock
mov
fidiv
fist
ja
mov
add
cdq
js
lods
jae
cdq
je
es
or
sahf
sar
sti
bound
push
sub
dec
ds
pop
cmp
mov
bound
mov
hlt
movs
sub
dec
hlt
loope
rol
fwait
jne
mov
push
mov
jns
mov
adc
sbb
push
cmp
out
fwait
and
xchg
mov
sub
jb
xchg
push
xchg
cmc
ficomp
xor
and
repnz
cmp
into
jo
ds
sub
jnp
rcr
mov
sub
ja
rol
adc
xchg
fucomip
inc
mov
repz
aad
mov
and
das
inc
pop
fmul
sbb
idiv
repnz
nop
jle
shl
jl
inc
lock
mov
clc
push
jle
sub
adc
bound
call
pop
xchg
daa
pop
jb
imul
sbb
dec
push
stc
into
cmp
and
shl
sub
dec
(bad)
mov
push
push
mov
mov
pop
or
cmp
sbb
mov
mov
sbb
sub
dec
jecxz
icebp
dec
and
in
jge
adc
sub
jecxz
sbb
in
jae
popf
mov
jp
pop
enter
xchg
je
xchg
pop
push
cdq
pop
sar
xchg
pop
cld
cli
or
fistp
inc
das
cs
or
sbb
jo
js
xor
pop
adc
dec
pop
mov
jnp
inc
shl
adc
sub
jno
cli
and
push
xor
lahf
pop
test
xchg
or
mov
adc
adc
jae
aas
mov
(bad)
cwde
fist
mov
xchg
sub
push
in
pop
mov
cmp
ja
adc
fcomp
adc
mov
mov
cmpxchg
push
popa
pop
ficomp
sbb
call
or
gs
repz
out
push
mov
xor
mov
mov
add
mov
add
stos
push
add
out
xchg
cld
push
mov
push
pop
xchg
mov
popa
add
fldenv
sti
loope
imul
mov
inc
test
xor
xor
cdq
stos
icebp
xchg
sub
aad
enter
add
xlat
movs
push
mov
xor
cs
xor
sub
cmps
sbb
add
push
mov
fwait
sti
retf
jmp
jmp
jns
adc
fnstsw
xlat
imul
push
call
jne
inc
mov
mov
fwait
or
inc
mov
fstp
jmp
jmp
xor
les
and
sub
mov
clc
clc
scas
mov
xchg
jg
xchg
in
dec
int
lods
mov
das
es
mov
jecxz
test
cdq
or
mov
shr
and
or
add
ret
or
add
pop
iret
push
inc
mov
push
popa
xor
xchg
imul
fidiv
adc
loop
sbb
sub
js
jecxz
aad
pop
shl
mov
ret
mov
ja
add
mov
pop
sub
es
les
and
jns
fs
adc
lahf
(bad)
add
and
add
sub
pop
(bad)
repz
loopne
pop
nop
mov
xor
mul
pop
xor
call
retf
div
scas
mov
dec
inc
jae
pop
xor
nop
pop
shl
and
test
cmp
mov
xchg
jno
jmp
dec
and
pushf
ins
mov
jns
idiv
cdq
int
dec
call
cs
mov
sbb
xchg
rcr
add
ins
jmp
arpl
inc
xlat
cld
adc
ins
iret
out
repz
mov
inc
test
sti
repnz
push
dec
fsub
neg
sub
popa
xchg
call
mov
jnp
call
ja
push
int
es
inc
in
cmp
sub
cmp
retf
pop
sbb
iret
ja
mov
pop
in
nop
lock
mov
pop
and
mov
adc
cmp
sbb
xlat
stos
xchg
push
into
mov
out
pop
mov
test
in
dec
test
in
fwait
lods
fs
icebp
push
sub
les
cmp
mov
shr
and
jno
push
or
cmps
aas
add
dec
cld
adc
and
jg
cld
pop
xchg
mov
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
inc
xchg
lea
add
xchg
prefetcht0
dec
dec
ja
lea
cmp
movs
inc
push
movs
cmp
mov
rol
add
fucomp
into
inc
pushf
mov
add
xchg
mov
inc
mov
je
inc
cmp
and
popf
pop
cdq
xor
mov
pop
pop
sahf
jp
xor
add
shr
psubd
fwait
imul
xchg
cli
or
das
jle
lock
mov
sub
cld
sub
fiadd
xchg
cmp
fisub
push
inc
mov
aaa
jne
icebp
fs
sbb
inc
(bad)
pop
mov
stc
dec
jno
lahf
xlat
gs
mov
stos
leave
xor
mov
fnstcw
(bad)
imul
jp
lahf
mov
arpl
jge
ror
test
jno
mov
and
pop
add
stc
and
push
pop
(bad)
adc
fimul
mov
ret
stos
sbb
or
inc
sub
out
mov
mov
push
or
test
xchg
imul
retf
cli
mov
push
sbb
and
sahf
mov
ror
mov
ja
adc
iret
mov
(bad)
push
inc
or
(bad)
out
fnstsw
(bad)
xor
sub
sbb
adc
push
ja
sbb
in
(bad)
gs
movs
outs
(bad)
xchg
repnz
outs
je
mov
popa
call
scas
xchg
(bad)
bound
or
add
push
inc
mov
cs
es
fdivrp
adc
cmc
cmp
in
retf
push
idiv
inc
cmp
lea
ror
cmp
imul
mov
pop
cmps
xchg
aas
popa
xor
mov
and
cmp
jbe
fs
inc
add
dec
sub
push
add
push
popf
das
mov
add
adc
cmp
aad
test
scas
fs
adc
dec
cwde
xchg
icebp
add
loopne
sbb
fiadd
xchg
aas
int3
imul
xchg
pusha
xor
call
stos
shl
pop
xchg
cmps
ret
sar
ins
popf
adc
pop
sbb
cwde
fst
call
into
cwde
and
pop
mov
sar
(bad)
fldcw
loope
add
(bad)
test
xlat
or
cmp
fndisi(8087
xchg
popf
or
repnz
mov
push
icebp
retf
fmul
(bad)
push
jno
add
mov
jns
jge
pop
repnz
push
out
lock
test
int
rcl
adc
test
mov
js
loope
mov
mov
adc
cmp
popf
or
pop
jns
push
mov
inc
push
add
xor
xor
push
in
mov
adc
stos
cs
addr16
movs
cmp
les
jge
mov
push
inc
push
out
bswap
sbb
or
mov
(bad)
retf
cmps
mov
in
jge
jb
pop
jmp
es
xchg
push
and
les
pop
ficom
xor
or
sbb
pop
xor
(bad)
sub
xor
dec
ret
pusha
icebp
fbstp
aam
fs
push
xor
inc
sub
adc
test
push
scas
xchg
xor
jno
ss
mov
xchg
sbb
sti
xor
int
js
outs
cmps
adc
in
mov
mov
push
push
shr
rol
inc
inc
mov
int3
arpl
adc
retf
cmp
rcl
ror
addr16
cmp
pop
loopne
mov
inc
(bad)
rcr
pop
push
mov
shl
and
retf
xor
hlt
cmp
jg
(bad)
mov
mov
cwde
adc
sahf
stos
and
xchg
iret
imul
inc
inc
sti
nop
inc
push
push
xchg
pop
fs
das
aas
mov
and
dec
push
stos
adc
pop
jl
xchg
pop
movs
enter
daa
arpl
add
mov
fcomip
inc
cmc
jl
neg
cmp
cwde
or
ja
xor
pop
ins
and
out
push
jl
mov
inc
iret
out
fdivp
cmp
fcmovne
sahf
test
call
clc
das
in
push
pop
mov
xor
xor
test
pop
gs
popf
push
fcomi
shl
out
push
jo
fdivr
es
mov
mov
sbb
fucomp
mov
mov
aam
push
inc
addr16
ins
xchg
dec
sub
sbb
test
pop
mov
xchg
jbe
cmps
mov
xchg
cmp
pushf
int3
bound
mov
xor
imul
aas
in
mov
stc
mov
adc
mov
jb
call
(bad)
int
inc
retf
pop
dec
je
xchg
mov
cs
pop
xchg
xchg
add
rcl
sub
test
push
sbb
das
push
pop
cmps
jno
(bad)
pop
lods
int
lods
and
in
or
(bad)
scas
pop
call
mov
and
sub
pop
cmp
add
push
mov
and
test
jae
inc
mov
pop
xchg
pop
aaa
fsub
and
push
imul
cmps
dec
(bad)
stc
outs
xchg
add
aam
cld
lods
call
pop
or
movs
das
inc
jle
sub
in
and
out
call
push
mov
sub
cmp
mov
mov
imul
inc
push
fcmovnu
sbb
or
dec
sbb
xchg
jno
mov
test
adc
repnz
cmp
xchg
pop
jmp
stos
jle
call
pop
inc
mov
mov
in
push
mov
mov
(bad)
dec
xor
repnz
push
sbb
pop
lods
sbb
push
out
in
sbb
aaa
fcomp
dec
scas
jne
lea
call
pop
mov
fwait
out
out
in
fld
sbb
cmps
retf
cdq
in
lock
test
pop
cli
mov
in
imul
cs
cmp
(bad)
loop
and
adc
movs
enter
mov
iret
lods
mov
pop
imul
or
(bad)
rol
popa
lea
fucomi
jl
xchg
cld
lods
sub
je
mov
push
mov
push
out
pop
out
sub
push
push
call
aad
pop
test
(bad)
push
pop
pop
dec
mov
int
pop
push
repz
outs
(bad)
pushf
fdiv
xor
(bad)
imul
and
sub
add
inc
icebp
call
push
sbb
inc
inc
push
mov
push
pop
rol
mov
inc
jno
mov
ds
sbb
or
aas
dec
movs
and
mov
lock
mov
data16
sbb
jb
pusha
loope
push
jb
aaa
shl
adc
mov
push
dec
repz
push
jmp
outs
in
jmp
add
add
fsubrp
adc
xchg
aas
dec
push
iret
repz
imul
push
mov
hlt
das
jg
stc
dec
xchg
leave
dec
jl
retf
sub
in
sub
xor
rcr
cdq
adc
cmp
dec
std
adc
mov
push
pop
mov
cmc
dec
outs
aaa
gs
mov
aaa
fxch
jl
and
xlat
jbe
sbb
push
test
mov
aaa
or
cmp
test
lahf
test
dec
push
push
clc
outs
movs
outs
jb
ja
cmp
ins
aam
push
lahf
lds
or
sub
push
pop
stos
inc
dec
xchg
mov
fwait
sub
cmp
movs
test
sub
shr
xchg
jecxz
xlat
xchg
cld
xor
sub
mov
and
mov
rol
(bad)
add
inc
mov
push
or
xchg
and
and
sbb
fisttp
out
mov
xchg
sub
sbb
dec
mov
idiv
sub
jmp
jp
lds
aaa
(bad)
cmps
out
push
bound
mov
icebp
jns
push
mov
retf
test
sbb
or
mov
cs
imul
sub
imul
cmp
(bad)
and
pop
dec
and
fst
push
mov
xor
ins
mov
cmp
and
in
sbb
in
rol
das
lahf
fiadd
cmc
mov
xor
xchg
jp
xlat
mov
inc
inc
pop
es
scas
jge
dec
movs
xor
test
imul
(bad)
mov
adc
inc
adc
sti
xchg
push
mov
add
inc
bound
push
sub
adc
push
and
call
cmps
push
or
cmc
cwde
jnp
cmp
dec
jle
mov
add
and
jns
jmp
jb
scas
add
add
lods
je
inc
xchg
add
cwde
xchg
in
rol
sti
adc
sbb
movs
cmps
or
inc
cmp
mov
int
jp
int
mov
mov
xchg
push
rcr
pop
and
mov
fistp
imul
hlt
sub
test
push
or
pop
adc
ss
daa
in
sar
push
xchg
ss
test
pop
cmp
push
hlt
mov
popa
mov
xor
mov
xchg
dec
xchg
and
ffree
arpl
sub
aad
xor
hlt
jg
cmp
sti
pop
mov
bound
sub
inc
push
dec
stos
add
mov
cmp
push
scas
jno
int
iret
adc
popf
sub
repnz
mov
or
call
fistp
add
(bad)
mov
out
pop
mov
das
lods
mov
inc
cmc
pop
sub
pusha
cdq
lahf
pusha
movs
shl
xor
and
adc
ins
rol
repz
add
dec
xor
jg
clc
xor
mov
cli
xchg
jp
jae
xor
xor
xchg
cs
leave
cwde
ins
add
fnsetpm(287
stos
add
ror
dec
mov
or
imul
mov
mov
lock
xchg
pop
xor
xchg
pop
into
in
in
loopne
mov
sbb
and
out
and
das
push
aas
pop
popf
xor
and
xchg
je
push
cmc
cmps
mov
enter
or
mov
iret
fisubr
shl
inc
sub
stos
mov
sbb
cmp
retf
inc
sbb
fst
cmps
in
shl
xor
fwait
xlat
loop
fidivr
js
repz
push
mov
(bad)
jecxz
fcmovnbe
inc
mov
aad
(bad)
mov
(bad)
or
cmps
movs
mov
push
test
push
adc
pushf
jnp
pop
mov
ins
add
push
cmp
aad
outs
adc
inc
rcl
adc
bound
dec
xor
sahf
loope
call
cmp
(bad)
imul
lahf
cmps
iret
mov
sub
push
shl
idiv
test
lea
out
out
test
sub
mov
xchg
lock
push
inc
rol
and
icebp
mov
inc
jmp
int
dec
ficom
push
push
xchg
stos
(bad)
in
mov
out
aad
scas
cli
lea
(bad)
fstp
xchg
and
in
test
int
jl
mov
ja
push
mov
xor
push
fdivr
jp
nop
hlt
adc
out
sar
dec
add
mov
add
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
fmul
add
lock
cmps
mov
jmp
popf
jecxz
cdq
cld
popa
dec
dec
lahf
out
mov
mov
mov
(bad)
fwait
cmp
mov
js
(bad)
repz
ds
loope
add
sbb
mov
stos
into
jmp
lahf
mov
ins
cmp
sbb
mov
mov
pop
cmp
popa
inc
iret
or
jbe
stos
xchg
neg
cmp
push
xchg
cmp
hlt
push
cwde
xor
adc
adc
mov
in
fwait
sahf
(bad)
icebp
push
call
shl
(bad)
out
and
xchg
adc
pop
push
jge
jl
pop
ss
and
jb
pusha
mov
fnstenv
lock
call
sub
repnz
fld
scas
cmc
popf
mov
jb
addr16
out
push
push
in
xor
ret
test
jecxz
daa
adc
ins
jle
lods
or
hlt
mov
sbb
cmps
jle
push
js
ja
xchg
mov
sub
(bad)
fs
sbb
inc
fcomp
xor
scas
(bad)
adc
and
xlat
and
and
mov
mov
leave
pop
sar
pushf
mov
fwait
and
imul
push
loopne
pop
neg
scas
mov
sahf
pop
push
xchg
and
(bad)
pop
outs
icebp
repz
dec
retf
mov
imul
test
enter
retf
mov
aas
mov
std
nop
dec
ficomp
xlat
adc
xor
push
adc
jle
outs
pop
test
mov
pushf
lea
mov
jmp
push
pop
xchg
stos
pop
int3
mov
pop
cmp
xor
ins
jo
xor
push
ins
leave
lods
arpl
cmp
lea
push
outs
mov
loopne
lahf
pop
dec
popa
mov
popf
ror
lahf
iret
bound
pop
aaa
in
or
aaa
and
cmp
push
add
(bad)
xchg
test
fld
mov
xor
push
lods
rcr
das
and
in
in
add
xchg
pop
push
pop
mov
(bad)
out
jnp
or
sbb
enter
add
mov
scas
jb
movs
(bad)
adc
xor
ins
scas
cmp
or
lods
or
jns
fsubr
sub
test
xor
into
fmul
xor
not
loope
add
push
cli
inc
xor
sbb
sbb
add
jmp
xor
popa
jmp
push
inc
mov
push
test
cmp
push
addr16
xchg
jp
mov
in
fucomi
popa
popf
push
jno
ds
mov
fstp
pop
push
(bad)
jne
xlat
into
pushfw
daa
cmp
xchg
pop
cmp
jbe
rol
jne
je
adc
dec
rol
clc
rcr
push
outs
retf
scas
shr
jl
push
scas
in
mov
data16
jecxz
push
mov
pop
mov
inc
lods
in
sub
pop
mov
jmp
movs
mov
or
sahf
jmp
jl
pop
pop
addr16
mov
clc
xor
sar
jno
aaa
dec
movs
js
dec
pop
sbb
dec
jbe
out
test
iret
sbb
adc
lods
push
xor
scas
push
scas
outs
imul
cmp
mov
sbb
pop
jmp
fisub
mov
sub
sti
xor
gs
inc
dec
mov
jmp
fdivrp
into
ins
or
cmps
cmp
jg
(bad)
fprem
lds
dec
xchg
jae
xchg
mov
cli
adc
pusha
rcr
mov
test
dec
pop
mov
out
out
sbb
in
pop
jp
dec
add
imul
mov
adc
retf
ds
push
cmp
mov
aam
adc
fs
lods
ror
cli
adc
pop
sbb
in
dec
sbb
xchg
jl
outs
mov
test
xor
int
rcl
mov
xor
xor
or
std
pop
xlat
dec
mov
xchg
sbb
lods
pop
xor
fild
cmp
jae
out
jg
imul
push
fdiv
iret
scas
push
mov
and
cmp
movs
imul
cld
outs
mov
je
dec
stc
inc
mov
push
jmp
rcr
pusha
rcr
stos
imul
jmp
dec
and
(bad)
out
aas
dec
sub
cli
pop
adc
arpl
retf
xchg
stos
inc
test
xchg
(bad)
cmc
cmp
(bad)
(bad)
pop
clc
xor
or
(bad)
sbb
into
push
fisub
inc
push
mov
and
mov
push
mov
lods
(bad)
imul
mov
das
imul
mov
mov
adc
ss
imul
dec
xor
cs
in
mov
imul
xor
shl
or
(bad)
aaa
adc
imul
push
adc
les
jecxz
data16
rcr
xlat
out
or
sbb
dec
mov
icebp
stc
inc
cmps
lea
jb
jecxz
jbe
jp
jnp
cs
mov
popf
inc
jo
nop
test
sbb
lods
mov
pop
jecxz
add
test
mov
retf
ins
push
fcmovbe
ins
mov
jbe
mov
fiadd
sub
nop
push
cmp
leave
mov
push
mov
jmp
in
ret
mov
ins
loope
aaa
dec
je
push
(bad)
bound
cmovno
mov
out
cld
jb
or
cmps
add
repnz
clc
retf
mov
retf
loope
cmp
test
fimul
cmp
mov
mov
repz
(bad)
mov
loop
xchg
sub
mov
movs
call
dec
cmps
jne
sub
loop
adc
dec
or
pop
loope
inc
push
inc
pop
fs
movs
in
mov
ror
enter
cs
pop
xchg
int
xchg
jne
mov
mov
(bad)
in
leave
(bad)
push
xor
iret
aad
add
popa
xchg
and
rcl
(bad)
jo
enter
xor
neg
mov
call
mov
jl
clc
popf
fnstsw
test
sbb
push
add
fisub
bound
test
test
dec
xor
mov
jg
cmp
out
push
fwait
push
retf
cmp
inc
fdivr
ror
mov
push
and
mov
(bad)
cld
aas
mov
ins
inc
jno
pop
gs
aas
push
mov
jecxz
pop
scas
or
sub
push
mov
std
gs
test
std
cld
dec
jmp
inc
or
inc
xchg
dec
cmps
or
jo
cs
mov
cmp
imul
mov
ds
ds
out
sbb
repnz
fidiv
shl
ja
lds
movzx
jne
in
jb
pop
das
inc
lods
in
(bad)
not
cmp
out
mov
jle
pop
test
repnz
enter
shl
dec
sbb
ret
iret
xlat
add
sti
leave
push
cld
cmc
xrelease
sub
mov
sbb
mov
or
fisttp
or
pop
push
les
mov
and
out
xor
mov
rcl
adc
jo
xor
out
sub
cmp
mov
imul
push
out
cmp
add
xchg
in
lds
add
xor
inc
fst
adc
mov
out
jp
out
jne
fcmovb
cmp
icebp
dec
int3
jg
adc
stos
push
sbb
fist
fs
xchg
inc
mov
rcl
mov
adc
ficom
add
imul
call
mov
mov
ins
cmc
repz
mov
push
mov
int3
sbb
out
in
sbb
iret
(bad)
in
xlat
je
or
ret
xchg
adc
pop
outs
push
imul
dec
rol
jns
sbb
push
test
cmp
retf
cmp
xor
cmp
jg
pop
stc
or
jne
push
dec
push
dec
mov
movs
inc
xchg
and
sub
sub
mov
jne
adc
sub
popf
mov
mov
iret
cmc
push
push
push
xchg
jno
jb
stos
jb
jne
mov
xchg
mov
call
outs
and
jp
sti
dec
in
cmp
mov
add
fdiv
mov
and
fyl2x
fadd
arpl
ss
lods
xchg
mov
jb
jne
(bad)
(bad)
arpl
(bad)
mov
(bad)
repnz
aad
vaddsd
sbb
popf
int
mov
fs
icebp
mov
inc
callw
cdq
repnz
(bad)
out
sti
in
sbb
pop
call
imul
jmp
or
pop
mov
xlat
les
int
out
jecxz
inc
jg
imul
(bad)
adc
mov
or
sahf
jae
sub
xchg
dec
and
or
ds
adc
mov
jmp
ins
mov
or
or
mov
xchg
cmps
imul
loope
push
adc
adc
clc
dec
inc
fwait
cmp
inc
cmp
mov
fwait
xor
aas
mov
lahf
popa
fst
pop
jbe
mov
add
fcomp
ror
lea
stc
sbb
mov
add
shl
call
pop
test
cmp
fisubr
jbe
adc
inc
(bad)
push
jmp
jmp
inc
into
stos
inc
sub
or
cdq
xlat
clc
add
pop
jg
or
inc
rcr
shr
dec
inc
cs
and
je
cwde
pushf
xchg
clc
sahf
mov
cmp
add
sahf
inc
outs
pushf
and
fwait
mov
jnp
push
mov
sub
repz
xlat
cdq
and
int3
popa
fpatan
(bad)
std
dec
cmps
(bad)
outs
out
pop
mov
pop
mov
inc
adc
sbb
imul
std
jne
test
mov
cs
xor
xchg
iret
cmp
adc
inc
scas
es
popa
mov
inc
mov
xchg
loop
rcl
fistp
or
call
aam
mov
pop
outs
cld
mov
push
cld
cmps
mov
push
dec
jle
(bad)
rol
fldz
test
lods
les
inc
mov
sub
fdivr
push
aam
stos
cs
cmp
pop
out
mov
jp
sub
(bad)
enter
dec
jnp
(bad)
sbb
bound
cdq
xor
pop
shl
mov
dec
dec
call
ret
gs
dec
test
xor
and
inc
pushf
dec
dec
push
sub
leave
mov
sbb
xor
cli
mov
pop
fnstcw
(bad)
cmp
adc
clc
adc
lahf
stc
ret
imul
loope
xchg
test
loop
mov
arpl
and
inc
adc
mov
dec
(bad)
mov
dec
int
mov
daa
ror
dec
ds
in
mov
add
push
std
nop
xchg
xchg
and
ror
leave
jb
sub
dec
and
pusha
shr
jmp
scas
inc
addr16
lds
mov
ins
jns
adc
test
stc
lea
xchg
pop
pusha
imul
inc
dec
add
test
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
jno
dec
inc
dec
(bad)
(bad)
mov
push
neg
cdq
sbb
cmp
int3
cs
jno
loop
sbb
repz
lldt
mov
sbb
outs
(bad)
repz
add
outs
mov
mov
inc
(bad)
imul
cwde
retf
cmps
mov
sub
pop
test
xlat
cdq
loope
jmp
scas
adc
adc
aaa
pop
pop
js
xor
fcom
fmul
loope
xor
jne
inc
pop
jge
inc
mov
clc
cdq
das
arpl
mov
sub
test
fbld
sub
pop
cdq
data16
mov
push
rol
sub
ins
push
sbb
pop
retf
and
adc
push
xchg
in
fs
fnsave
cmps
into
or
loopne
xor
mov
mov
sbb
mov
aaa
hlt
and
cs
imul
dec
cmps
mov
in
or
scas
adc
cmc
pop
xchg
(bad)
push
aaa
(bad)
je
mov
or
jae
in
pop
adc
jg
not
out
mov
or
(bad)
adc
jno
repnz
icebp
add
mov
add
movs
std
(bad)
std
ret
call
int3
rcr
mov
mov
into
push
pop
push
mov
pop
imul
js
inc
enter
int
daa
xor
sub
dec
rol
adc
pop
in
or
std
movs
dec
cmp
loope
or
and
mov
lea
fwait
add
clc
mov
jae
mov
jbe
popa
sub
pop
mov
mov
out
add
cmc
xor
outs
pop
out
jge
fldcw
and
or
add
xchg
and
popf
mov
adc
mov
mov
ins
lock
sbb
xor
xchg
div
inc
in
dec
jae
push
mov
fnstcw
stos
mov
aad
cmps
shl
enter
test
es
shr
daa
out
ds
nop
add
pop
clc
cmps
mov
in
idiv
out
mov
outs
(bad)
sub
dec
loope
out
xor
push
push
or
dec
pusha
mov
jae
jmp
shl
add
dec
add
push
pop
inc
out
cmps
shl
sub
adc
jge
lea
out
enter
loop
mov
cmp
jb
push
fistp
call
push
icebp
int3
(bad)
dec
xchg
mov
and
sbb
jb
mov
add
test
test
jp
pop
pop
shl
scas
mov
retf
ins
stos
cld
lds
(bad)
(bad)
js
mov
(bad)
cmp
push
xchg
mov
dec
jecxz
or
push
inc
pop
xchg
(bad)
adc
push
ins
adc
cmps
out
xor
outs
pop
jmp
(bad)
lock
stos
div
adc
dec
popf
(bad)
lock
sub
mov
cmps
std
lods
das
aas
jns
mov
cmps
cld
dec
jb
lods
ret
fimul
xchg
mov
sub
and
inc
mov
pop
xor
fist
adc
daa
fimul
or
add
push
mov
push
call
fld
inc
mov
xor
outs
or
aaa
in
jns
aad
cmp
loope
ficom
mov
scas
xlat
icebp
dec
shl
adc
or
xchg
ds
rol
gs
pop
nop
inc
inc
inc
mov
adc
int
push
je
data16
test
out
sbb
sub
pop
ror
dec
aad
pop
es
push
mov
cmps
jle
test
lock
fmulp
xchg
lods
xchg
inc
sbb
fadd
mov
push
ja
lea
xchg
iret
(bad)
cmc
dec
std
fwait
and
push
loop
fistp
(bad)
pusha
mov
(bad)
cli
bound
pop
or
push
add
repnz
cmc
pop
rol
adc
dec
test
cmps
leave
sahf
jmp
movs
mov
cmp
mov
push
mov
xor
cmps
cmc
sti
cmp
sub
pop
mov
scas
or
mov
out
dec
cmp
adc
stc
call
adc
inc
mov
pop
cmp
lods
mov
push
retf
adc
das
mov
bnd
mov
movs
rcl
lds
inc
outs
mov
int3
js
add
push
or
jmp
add
(bad)
sbb
xchg
sbb
jne
mov
retf
enter
mov
xchg
je
inc
push
jg
gs
adc
cdq
mov
xor
(bad)
clc
jo
jmp
fisubr
add
dec
call
xchg
dec
movs
out
into
pop
in
dec
jnp
mov
movs
sti
test
in
popf
repz
fs
pop
aam
mov
popf
push
sub
imul
not
inc
mov
add
int
adc
sar
and
sbb
hlt
cmp
jecxz
fimul
gs
jmp
push
pusha
add
cmp
dec
stos
pop
call
stos
aaa
inc
or
psllw
lds
into
push
xchg
push
pop
push
pop
sub
out
jmp
add
or
neg
jno
call
xchg
in
bound
and
(bad)
repnz
daa
scas
mov
mov
mov
shl
sbb
and
and
mov
jmp
push
arpl
fs
pop
sahf
test
xor
shl
int
in
cli
sub
outs
rcr
and
pop
jb
fcomp
sbb
cmp
and
je
mov
test
ss
add
cli
shl
sbb
xchg
and
xor
adc
inc
test
mov
pop
xchg
shl
mov
jl
sub
inc
sub
scas
test
lea
out
push
dec
fild
mov
call
adc
or
push
ins
xchg
pop
dec
inc
clc
int3
push
call
or
ror
in
(bad)
out
mov
add
out
stos
(bad)
xchg
mov
ins
loop
cld
mov
ss
pop
sub
or
xchg
adc
sub
and
arpl
fld
loop
in
icebp
ja
adc
sbb
mov
sub
cmp
jno
adc
cmps
ret
mov
aaa
fdivrp
in
ds
mov
sub
pop
scas
push
lahf
shr
call
mov
ss
adc
out
or
mov
gs
xor
(bad)
push
mov
sahf
(bad)
in
or
cmp
sub
inc
pop
int
aaa
mov
cmp
adc
int3
adc
sbb
cmp
sbb
cs
out
clc
and
or
pop
inc
into
sub
and
cdq
(bad)
retf
mov
or
push
popa
mov
out
dec
xchg
inc
retf
sbb
mov
addr16
xchg
cmps
ret
outs
jbe
xchg
and
pop
mul
in
in
xlat
dec
movs
push
bound
xchg
cld
bound
push
shr
outs
hlt
add
iret
mov
shl
mov
(bad)
pop
emms
xchg
push
ds
jae
ins
mov
jecxz
into
cmc
pop
ins
push
xlat
test
inc
mov
jmp
fwait
add
in
hlt
ret
stos
xchg
retf
mov
icebp
ins
mov
cmps
cmp
out
bound
dec
push
add
mov
(bad)
pop
sub
icebp
mov
cwde
sub
in
test
cmp
popa
xor
push
stos
imul
es
hlt
mov
pop
jge
sub
pop
jmp
jae
ins
out
into
ss
or
scas
out
iret
mov
stc
pop
or
jbe
inc
sbb
adc
les
repz
mov
sbb
pop
xchg
sbb
stos
int
mov
pop
stos
sub
jl
xchg
or
jle
cmp
mov
das
sbb
aaa
inc
jmp
das
and
(bad)
ds
jecxz
test
movs
movs
leave
add
popf
xor
and
xchg
pushf
mov
pusha
push
loopne
aad
or
leave
adc
mov
pop
ja
pop
test
(bad)
mov
sub
or
fimul
repz
push
mov
mov
sahf
push
cmp
fsub
movs
in
xchg
jp
sbb
mov
mov
es
cmp
push
add
push
imul
bound
sbb
lods
jecxz
repnz
jge
cmp
jae
add
cmp
ins
retf
xchg
scas
push
fwait
cmp
sbb
adc
call
jnp
out
pop
jo
mov
sub
(bad)
leave
xor
push
pop
cmps
jo
mov
xlat
dec
jp
sub
push
jo
repz
cs
test
lods
or
and
sub
out
in
sbb
bound
lahf
lods
pop
or
stc
mov
movs
scas
out
add
mov
leave
sbb
jnp
test
xlat
pop
pushf
clc
fld
cmps
push
xchg
loop
leave
dec
jecxz
scas
and
sbb
sub
iret
mov
ror
outs
and
addr16
ror
cmps
lea
mov
push
pop
fucomp
lods
adc
inc
(bad)
cmp
frstor
fcom
and
adc
mov
xor
inc
mov
stc
fcomi
cwde
clc
sar
xor
dec
xchg
pop
sar
mov
dec
push
xor
sbb
add
mov
mov
fs
sahf
aam
test
mov
push
into
dec
bound
imul
daa
and
pop
sub
pop
jae
(bad)
scas
pushf
sub
xor
or
inc
and
xchg
mov
(bad)
fsub
mov
xchg
lock
leave
imul
xchg
and
jecxz
neg
repnz
fcomp
fisubr
mov
repnz
outs
cmps
retf
or
test
pop
das
cmp
mov
rol
jge
cdq
sub
aas
loop
dec
loopne
cmp
sar
pop
ret
push
fidiv
(bad)
xchg
imul
ja
push
cmp
bound
add
mov
or
mov
xchg
push
and
cmp
xor
imul
gs
dec
jmp
sti
push
(bad)
mov
movs
xchg
xchg
cmp
cmp
inc
scas
xchg
(bad)
cli
pop
cmp
sbb
outs
or
addr16
lea
push
inc
aas
pop
fisubr
mov
sbb
mov
inc
retf
xor
es
lock
sbb
sub
and
test
mov
xchg
pushf
loope
loopne
xor
jnp
and
in
lahf
(bad)
sub
imul
sbb
sub
lock
dec
inc
mov
jge
retf
and
mov
fs
sub
mov
cdq
xchg
pop
stc
sar
xor
xchg
aaa
daa
cmp
(bad)
enter
and
push
in
test
jl
pop
mov
push
mov
(bad)
cmp
pop
mov
rol
sub
popa
(bad)
in
nop
cmp
bound
or
cmp
fdiv
stos
jo
inc
movs
push
lods
mov
or
in
mov
rol
dec
cmp
iret
mov
push
dec
pop
inc
push
leave
cmp
out
and
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
push
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
(bad)
cdq
xchg
out
in
jge
and
xchg
and
je
sbb
cdq
xchg
ins
mov
fnstcw
jecxz
xchg
popf
mov
sub
fwait
mov
xor
jns
iret
mov
add
shl
sar
test
push
adc
jp
mov
mov
bound
js
aaa
dec
mov
ja
push
mov
xchg
bound
cmp
in
fstp
push
jmp
out
jle
inc
hlt
inc
push
es
stc
cmp
pop
adc
adc
mov
add
and
mov
hlt
inc
mov
jmp
clc
jmp
cli
inc
or
popa
adc
popa
and
inc
sub
cmp
inc
cwde
pushf
and
(bad)
stc
dec
sbb
mov
jl
push
ret
imul
mov
pop
push
test
fsub
mul
or
xchg
add
xchg
(bad)
jns
xchg
aaa
cmp
rol
pop
leave
call
inc
ins
pop
in
jae
xor
int3
outs
xchg
test
arpl
jmp
test
icebp
icebp
nop
cwde
pop
jge
jle
dec
xlat
je
push
call
ficomp
and
movs
pusha
mov
int3
inc
add
or
iret
cmp
pop
inc
push
and
gs
xchg
movs
sub
mov
popa
sub
cwde
push
icebp
add
jg
rcl
cmps
addr16
out
adc
movs
inc
add
push
stc
and
(bad)
(bad)
sub
fs
mov
hlt
pop
xor
fadd
lock
arpl
push
mov
lds
xchg
and
mov
dec
ds
mov
hlt
bnd
test
loope
stc
outs
mul
rol
dec
cmps
dec
icebp
mov
jmp
retf
cmp
push
std
pop
shl
adc
mov
imul
(bad)
repz
ds
dec
cld
fcmovu
adc
mov
das
inc
xchg
pop
and
ja
sub
in
ja
mov
das
data16
inc
rcr
iret
in
ror
add
pop
pop
dec
xor
retf
call
int
pushf
outs
jno
mov
dec
pop
mov
inc
xor
sar
scas
mov
push
inc
jmp
ss
cmp
mov
sub
mov
pop
adc
add
icebp
enter
ins
xor
sar
dec
sbb
lahf
fistp
jb
adc
pop
lods
xchg
push
xchg
adc
cmp
xchg
aam
xchg
ins
adc
fild
stos
jbe
les
adc
xor
mov
pop
(bad)
fadd
std
movs
or
mov
je
mov
sub
pop
dec
sbb
push
cmc
jle
pop
fistp
xor
ins
iret
fwait
adc
cwde
jns
sub
xchg
push
es
lds
mov
mov
cmp
bound
stc
rcr
lock
sar
frstor
fstp
add
pop
and
and
sbb
or
cs
lea
xchg
call
cmp
std
test
push
arpl
pop
mov
adc
add
add
ret
stc
ret
test
sti
fnstsw
mov
sub
or
xchg
inc
in
in
xor
dec
mov
sub
lods
mov
push
xchg
dec
pop
aad
xor
push
(bad)
cmp
sahf
ds
sub
sar
(bad)
data16
adc
sub
cmp
and
inc
pop
jecxz
dec
ins
icebp
xchg
in
out
cli
out
mov
adc
enter
mov
jne
sub
loope
pop
push
mov
jl
stos
sbb
jle
scas
cwde
sbb
jo
jg
cmp
mov
jp
inc
jecxz
int
ret
(bad)
ret
mov
out
xor
jp
push
mov
clc
mov
sahf
fld
lods
test
ret
push
data16
jmp
outs
mov
(bad)
sbb
dec
add
mov
dec
ins
scas
sub
inc
xchg
in
or
addr16
or
js
sub
xlat
jb
mov
inc
lahf
mov
push
in
adc
or
dec
pop
shl
sub
jge
cdq
sub
mov
in
mov
xchg
test
(bad)
mov
aaa
dec
fdivr
lods
shr
out
retf
es
ins
fmul
dec
aas
fcomp
and
ficom
(bad)
lea
fisttp
jns
add
rol
ins
mov
mov
mov
clc
jo
and
cmps
in
push
inc
bnd
pop
or
or
push
mov
iret
or
out
xlat
leave
add
mov
jmp
pop
loopne
pop
mov
push
leave
mov
or
adc
jge
nop
gs
in
shl
adc
ins
pop
pop
jmp
sbb
jae
adc
push
(bad)
xor
test
in
cwde
pop
icebp
shl
inc
push
ins
daa
lahf
jno
mov
stos
out
stc
pushf
test
adc
lds
dec
push
repnz
idiv
(bad)
push
or
push
in
adc
sub
call
jbe
fs
cld
fsubr
shl
fsub
out
fbld
mov
push
inc
push
adc
inc
jmp
shl
jge
std
repz
ss
out
imul
cli
retf
inc
aam
je
and
adc
add
sbb
ds
mov
mov
xchg
pop
sub
push
dec
push
(bad)
mov
cmp
jae
out
dec
jp
arpl
std
pop
adc
cmp
inc
in
leave
push
jno
sbb
inc
pop
mov
or
aas
mov
js
je
xchg
ins
in
sbb
fisttp
xor
rcl
mov
leave
hlt
mov
enter
lods
hlt
int3
sbb
mov
jge
mov
adc
in
jae
into
add
push
es
fidiv
mov
sub
repnz
scas
hlt
cmp
push
cmp
hlt
and
mov
cmp
or
ja
in
push
mov
(bad)
fwait
xchg
mov
dec
jmp
outs
add
push
and
(bad)
mov
cmps
movs
fisttp
retf
lahf
push
xchg
clc
xchg
or
sbb
rol
cmp
popa
dec
sbb
(bad)
adc
loopne
imul
pushf
xchg
(bad)
cmps
dec
ins
add
out
mov
lea
ja
sub
loopne
mov
imul
lahf
cli
inc
sbb
imul
fiadd
mov
bextr
adc
jp
inc
sbb
xor
pop
ja
pushf
inc
sub
out
imul
(bad)
in
dec
mov
sbb
sub
rcr
cmps
std
xor
inc
mov
les
cmp
add
imul
je
sti
in
add
cwde
dec
daa
pop
outs
jne
sub
test
cld
inc
sar
or
ror
es
sub
or
inc
aas
xor
sar
adc
adc
pop
sub
sub
aas
mov
hlt
movs
popa
pop
mov
nop
add
xchg
mov
mov
adc
in
sbb
shl
jl
inc
add
inc
(bad)
popa
push
dec
scas
cld
push
jae
ret
push
ds
mov
and
shl
push
and
and
inc
or
scas
cmp
adc
int3
adc
pop
aad
mov
repz
in
adc
movs
clc
das
pop
imul
pop
ficomp
sbb
(bad)
sbb
shr
and
test
jns
cwde
arpl
cmp
cli
push
and
mov
mov
xchg
idiv
les
sbb
jl
dec
cli
fs
data16
xchg
jmp
mov
inc
lea
inc
imul
pop
cld
sbb
cmp
les
adc
loope
outs
jns
repnz
mov
hlt
int
xlat
jecxz
or
in
dec
imul
movs
or
sbb
push
(bad)
sti
dec
test
pop
xchg
xchg
in
jecxz
lock
push
xchg
jnp
inc
loope
add
adc
into
shl
aam
cld
cmps
mov
sbb
xor
cli
adc
repnz
mov
xlat
pushf
adc
inc
push
into
pop
inc
mov
jno
push
pop
shr
cdq
pop
jge
sahf
sbb
aad
(bad)
pop
rcr
sbb
xchg
push
pop
cmc
adc
jmp
cld
test
mov
jp
dec
adc
mov
dec
ins
aad
inc
inc
aad
sbb
dec
push
cmp
cmp
add
push
fldcw
jecxz
xor
push
sub
int
rcr
jo
mov
ds
inc
psrld
pop
cmp
pop
xor
mov
out
sub
sbb
or
in
xor
xchg
pop
imul
(bad)
popa
mov
in
cmps
add
leave
or
inc
loopne
iret
add
jb
icebp
jae
mov
mov
push
jp
add
iret
mov
jbe
xchg
int3
ds
jecxz
jge
movs
sbb
dec
retf
sti
pop
out
mov
loop
(bad)
cmp
sbb
xlat
add
jb
(bad)
jae
out
(bad)
hlt
(bad)
(bad)
xchg
cmp
rcl
xchg
jmp
outs
lea
int
xor
int
push
mov
cmp
cmp
inc
arpl
xchg
test
jae
adc
jmp
sub
xchg
dec
mov
rcr
vmovd
loopne
pop
jne
leave
push
int
mov
ins
das
rcl
stc
sti
rcl
daa
mov
and
xor
and
rcr
shl
movs
xlat
ficomp
jnp
stos
and
stos
cmps
lods
add
pop
xchg
jns
and
mov
outs
push
mov
stos
psubusb
cli
fstp
clc
pop
mov
jp
add
jmp
jbe
call
clc
bound
clc
movs
scas
scas
rol
push
mov
mov
test
dec
movs
adc
mov
xchg
popf
mov
fwait
imul
jge
mov
enter
sti
push
fistp
stos
jp
mov
mov
cmps
and
push
mov
es
sar
fild
mov
lock
pop
call
(bad)
bound
dec
jle
mov
arpl
xor
daa
cld
into
cmps
nop
jbe
adc
inc
cmp
jle
inc
call
cmps
shl
xchg
movs
idiv
adc
lods
push
hlt
mov
imul
jmp
les
mul
mov
ficom
leave
mov
and
js
loop
adc
icebp
mov
fs
jge
or
lods
lahf
cdq
cmps
or
push
popf
call
add
loope
pop
rcr
jp
xor
jmp
push
jne
repnz
call
xlat
sti
fmul
dec
rcr
and
mov
sbb
test
mov
sbb
jg
jb
mov
mov
aad
cmp
in
or
mov
(bad)
dec
ret
gs
xchg
fs
sar
outs
or
in
aaa
out
sub
aad
mov
jle
jle
clc
out
sar
dec
add
fcomp
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
mov
addr16
dec
jmp
sub
and
push
sub
mov
cdq
xchg
cdq
jge
das
loop
mov
dec
clc
add
and
mov
es
pusha
xlat
js
jne
mov
adc
fisub
jmp
cmp
movs
mov
lods
sub
imul
daa
dec
xchg
out
sti
dec
and
outs
(bad)
mov
jmp
sub
mov
xor
add
inc
push
mov
stos
rcr
lds
add
jle
js
pop
inc
push
(bad)
push
test
jg
(bad)
arpl
add
mov
inc
call
repnz
inc
xchg
mov
cwde
stos
frstor
mov
pinsrw
je
mov
jl
xchg
sub
xlat
enter
mov
mov
call
adc
fcomp
fdiv
inc
mov
fwait
pop
xor
lods
stos
jl
mov
dec
mov
inc
jmp
sbb
int
add
adc
out
jnp
xor
push
div
cmps
movs
adc
sbb
cmp
push
dec
iret
das
fisttp
mov
push
ss
int
ret
mov
arpl
mov
cmp
repz
adc
add
rol
fcmovnu
aad
fwait
cli
inc
je
aad
push
retf
and
(bad)
icebp
popf
aas
iret
dec
lock
sub
pop
or
jle
dec
xlat
inc
test
movs
push
jns
pushf
jbe
and
xchg
dec
pop
ds
mov
lods
repz
xchg
je
inc
inc
mov
(bad)
int3
loop
push
aas
jmp
inc
pushf
mov
inc
dec
shl
fdivr
push
mov
add
push
or
int
jp
inc
xor
aad
cs
movs
push
je
xchg
xchg
mov
xchg
adc
xchg
fld
mov
(bad)
outs
fiadd
sbb
les
popf
adc
fstp
inc
retf
mov
mov
shl
inc
test
stos
mov
and
adc
fdivr
aad
xchg
popf
jle
pop
cwde
or
xor
jg
movs
mov
mov
loopne
xchg
nop
fcomp
out
xchg
xor
cmps
(bad)
lock
xchg
mov
and
out
jns
ja
sbb
popa
fs
ss
push
inc
shl
outs
sub
mov
ss
push
and
scas
sbb
mov
xor
mov
clc
or
mov
sub
push
sahf
mov
repz
mov
bound
mov
or
or
pop
cmp
mov
mov
stos
daa
or
cmp
lds
pop
and
cmp
xchg
sbb
sub
and
out
(bad)
cmp
ret
jae
iret
outs
and
ja
fsub
popa
jle
imul
retf
cs
xor
outs
int
add
loop
sub
sub
mov
push
mov
jg
xchg
or
jge
mov
mov
aas
test
loopne
sbb
outs
std
std
pop
and
pop
popa
mov
imul
adc
loop
jnp
inc
cli
neg
stos
aas
cmp
js
push
bound
inc
pop
and
es
pop
in
jnp
sbb
imul
push
jmp
xor
dec
cmp
xchg
cmp
push
sub
mov
pop
dec
in
gs
arpl
(bad)
nop
cmp
pop
addr16
lock
fcom
fcmovne
in
mov
xchg
jl
(bad)
xchg
xor
mov
psubw
fnsave
adc
iret
push
ins
dec
jb
xchg
imul
in
add
jmp
in
push
rcr
sub
sbb
test
mov
mov
sbb
jle
cwde
sub
test
xchg
data16
test
sar
jno
mov
int
jne
daa
enter
sahf
loopne
pusha
xor
mov
ds
jp
and
movs
sbb
(bad)
pop
in
leave
scas
sub
(bad)
xor
cmp
xor
pushf
sbb
pop
ret
mov
push
and
cmp
fidiv
jo
ficomp
lock
jecxz
(bad)
retf
fst
out
(bad)
cmp
fisub
mov
push
repz
push
js
loope
cmps
cmps
mov
in
fwait
sub
lods
and
inc
adc
test
sbb
mov
adc
call
sub
add
xor
jbe
cld
sub
cs
ins
lods
inc
into
mov
mov
push
dec
inc
movs
jnp
lahf
push
out
mov
dec
push
arpl
push
jno
(bad)
into
mov
pop
sbb
or
hlt
jge
push
jecxz
add
mov
inc
fist
inc
jns
fs
jne
das
adc
pop
movs
pop
fwait
mov
push
ffreep
fnstsw
sub
mov
ror
inc
daa
retf
lods
add
jae
adc
or
ins
mov
pusha
xchg
and
and
xor
cmp
pushf
cmp
aas
jo
popa
in
add
sub
scas
pop
xchg
jp
mov
(bad)
xor
and
mov
movs
adc
adc
out
jp
retf
mov
sbb
push
loope
cmp
mov
add
mov
inc
ret
cmp
test
stos
mov
dec
rcr
xor
mov
add
mov
in
pop
ds
xchg
and
push
into
cmp
mov
cmp
xlat
jne
xchg
xchg
mov
xor
inc
(bad)
pop
mov
and
dec
xchg
or
in
push
stos
sbb
jmp
aaa
stc
nop
or
adc
jbe
add
pop
mov
push
rcr
mov
jg
into
hlt
jno
xor
jnp
push
and
mov
imul
das
out
mov
sahf
xchg
push
jne
int
stc
cmc
pop
mov
cmp
fidivr
or
rol
icebp
jecxz
pop
in
scas
adc
leave
dec
cmp
adc
in
push
out
xchg
inc
lods
cmp
jnp
mov
mov
repz
mov
cwde
cmps
jae
ret
cld
cmps
outs
push
pop
xor
sub
mov
pop
enter
sub
ds
setp
sbb
push
jle
sbb
mov
ror
mov
js
cmc
std
lods
sub
xor
jae
lods
call
call
mov
test
cmp
repnz
arpl
dec
icebp
lods
pop
sbb
sub
inc
dec
test
sti
xor
xchg
mov
in
loop
adc
fld
mov
push
inc
pusha
cwde
push
fisubr
or
mov
ffreep
fidiv
mov
jns
jbe
and
dec
mov
mov
xchg
jnp
imul
inc
or
push
xchg
jl
mov
in
cmps
call
jno
sub
push
xchg
repnz
stc
cdq
jno
pop
pop
cmps
sub
adc
xor
mov
call
sahf
xchg
lds
xor
sub
mov
and
sbb
addr16
fst
ss
sbb
and
call
xchg
sbb
clc
imul
cmp
ret
aam
dec
lods
or
add
movs
sbb
xor
aam
repnz
in
repnz
push
movs
ja
pop
mov
scas
sub
loop
add
jae
sub
add
in
ins
add
dec
bnd
leave
and
scas
adc
or
xor
or
cs
test
or
push
xor
xor
add
call
(bad)
pop
mov
sub
in
jmp
push
jle
sub
cmp
mov
pop
jecxz
data16
(bad)
dec
add
pop
fwait
sub
jne
xchg
cs
jno
neg
lods
outs
das
xor
(bad)
into
retf
por
mov
in
pop
sbb
jbe
inc
retf
hlt
pop
push
push
loope
shl
fmul
lock
ins
lock
push
ss
js
test
ins
fldcw
out
rcr
jp
retf
mov
push
sbb
ror
push
push
jae
js
xchg
test
loopne
dec
mov
jno
test
loope
or
in
xchg
lods
jns
jbe
sbb
pusha
fld
rcl
fs
test
bound
in
dec
xchg
mov
dec
cmp
cld
scas
movs
push
sbb
scas
out
xchg
inc
rcr
jle
pop
mov
jg
fptan
in
aad
xchg
movs
mov
xchg
into
xchg
cmp
daa
lahf
lods
inc
test
xchg
gs
pop
or
loope
or
stc
or
push
gs
xor
inc
fcomp
les
add
xor
jno
push
cmps
fstp
test
ja
sub
or
clc
(bad)
stc
daa
jle
inc
inc
nop
and
loop
or
and
mov
das
jle
shl
es
push
lock
imul
sub
xchg
mov
cdq
xchg
jge
vprotb
es
xchg
daa
cmp
xchg
xchg
movs
fwait
ins
inc
outs
arpl
lock
mov
iret
inc
jno
jecxz
sub
cmp
dec
outs
jg
xor
or
jne
xor
cmp
loopne
jno
xchg
jmp
adc
inc
pop
sub
sar
xchg
xchg
push
jge
pop
inc
mov
push
mov
jmp
lods
lea
mov
jmp
pop
inc
pavgb
dec
adc
dec
or
int3
out
jecxz
cmp
xchg
ins
ss
bound
imul
cmp
xchg
retf
ror
cld
jbe
int3
fidivr
and
out
ror
mov
inc
in
or
fstp
xor
mov
call
sahf
xchg
add
jg
pop
das
cmp
(bad)
cli
aaa
jmp
mov
sub
sub
push
push
pop
fs
xor
xchg
add
jecxz
mov
cwde
cmps
out
imul
mov
add
fwait
test
addr16
adc
dec
lods
ins
or
mov
xchg
mov
div
into
jp
mov
inc
mov
popf
in
sar
bound
mov
push
jmp
or
and
in
loope
scas
mov
clc
adc
jp
mov
or
cdq
adc
mov
mov
sbb
mov
retf
mov
jmp
cmp
sbb
xor
adc
pop
mov
call
cli
out
hlt
lods
adc
xor
into
std
call
sbb
pop
xchg
jp
push
clc
cs
add
pusha
mov
arpl
mov
call
les
mov
mov
mov
mov
fcomp
lock
mov
push
and
js
fidiv
cdq
gs
jecxz
rcl
cmp
or
retf
xchg
iret
add
xor
lahf
xchg
push
dec
xchg
jo
push
in
aam
xchg
cld
repnz
mov
mov
outs
loopne
sar
dec
cmp
ffreep
mov
jno
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
jno
cmp
and
out
addr16
inc
(bad)
mov
push
mov
and
into
push
(bad)
fsincos
mov
into
fidiv
inc
retf
fnstcw
iret
mov
add
out
xor
cmp
jecxz
ins
jne
mov
mov
aas
cmp
cmp
lahf
jg
jl
inc
ja
and
pop
stc
aad
inc
imul
cli
jl
push
dec
shl
(bad)
xor
out
xchg
xlat
xor
adc
add
das
jp
repnz
clc
jecxz
inc
fcom
mov
jbe
jmp
fmul
stc
rcl
inc
sbb
or
mov
retf
sub
cli
jo
popf
mov
not
stc
fsubr
xchg
fwait
out
pop
jnp
ja
out
mov
mov
imul
jp
test
popa
scas
loop
js
xor
jns
iret
jecxz
imul
mov
(bad)
push
dec
neg
cli
inc
pop
jg
dec
popf
inc
jle
jno
in
data16
aaa
mov
and
xor
adc
cwde
ds
cmp
mov
fwait
jnp
push
pop
xor
inc
iret
in
pop
cld
and
adc
inc
(bad)
ja
out
jb
pop
scas
sub
mov
xor
mov
movs
ins
inc
cmps
xor
jle
and
cmp
xrelease
fs
xor
je
hlt
pop
std
int3
add
rol
out
mov
sub
jmp
inc
call
pop
sbb
jp
push
les
leave
xlat
adc
cmp
jbe
aad
pushf
sub
rcr
lods
mov
out
dec
jno
pop
(bad)
ss
pop
loop
mov
shl
sbb
scas
push
pop
inc
cmp
or
or
sub
jne
fcmovne
adc
movs
fcom
or
mov
inc
or
ds
stos
dec
cli
hlt
mov
pop
dec
and
out
sbb
xor
out
mov
aaa
xchg
shl
push
sub
lds
sub
or
pushf
in
fisttp
dec
mov
mov
retf
xchg
nop
sub
xchg
stc
in
mov
mov
out
repnz
xor
mov
xchg
add
xchg
hlt
cmps
add
xchg
sti
pop
inc
mov
out
mov
or
adc
test
mov
push
popa
mov
sbb
jae
movs
mov
pop
sbb
inc
or
fld
jl
test
(bad)
dec
add
(bad)
std
lock
addr16
and
push
call
fs
jge
repz
int3
jo
and
movs
test
cmp
jle
sbb
jecxz
in
push
add
xor
jmp
dec
xor
aam
repnz
popf
call
xchg
clc
outs
leave
enter
adc
jo
dec
mov
or
push
ds
jmp
jmp
fild
xchg
ss
movs
inc
or
cmp
jae
sbb
lods
in
push
shl
add
(bad)
and
xchg
xchg
pop
xor
mov
mov
aas
xor
cmp
sbb
std
jp
xor
xchg
xchg
mov
ss
dec
and
loopne
movs
jbe
repz
add
sub
mov
ret
aaa
inc
mov
lahf
adc
or
sbb
push
repz
and
stos
xor
pop
mov
mov
shl
inc
pop
std
and
dec
loopne
cmp
push
scas
bound
pop
outs
push
pop
das
and
pop
(bad)
in
gs
neg
dec
clc
xor
push
sahf
in
mov
mov
and
xchg
inc
fist
(bad)
adc
repz
hlt
sbb
inc
sub
mov
mov
cmp
vdivss
mov
rcl
and
outs
mov
push
repnz
mov
mov
cmp
cmps
das
daa
xchg
jns
jmp
and
dec
or
push
xchg
push
data16
mov
fdiv
repnz
inc
push
xchg
mov
out
stos
push
mov
aam
fs
dec
pop
cld
sub
push
jbe
icebp
aad
ret
mov
test
fisub
rcl
cmps
jecxz
scas
pop
fist
mov
jecxz
mov
ins
mov
jmp
jge
mov
test
(bad)
fisubr
out
sbb
mov
sbb
mov
push
push
retf
arpl
pop
mov
in
ret
adc
hlt
addr16
repnz
in
cli
mov
loop
or
mov
cmp
pop
pop
repnz
push
loop
add
scas
stos
pop
sub
loopne
stos
mov
frstor
iret
cmp
(bad)
cmps
push
ins
mov
xor
pop
jg
mov
cs
or
mov
dec
imul
push
pop
jae
int
data16
or
int3
xchg
push
jl
sub
and
jg
repnz
ins
cmp
addr16
loopne
(bad)
test
enter
add
cmc
fs
int3
sbb
push
int
out
test
xchg
xchg
adc
xor
adc
int3
inc
xor
jge
popa
cmp
or
das
cmp
inc
ret
test
adc
adc
dec
push
push
test
mov
or
sub
leave
or
sbb
cmp
fistp
xchg
movs
mov
cmp
mov
fsubr
outs
les
xor
adc
mov
jne
mov
jl
(bad)
jb
and
push
ds
ss
out
inc
ins
xchg
or
aas
inc
cdq
mov
push
push
mov
out
push
or
popa
mov
repnz
(bad)
fistp
xor
ror
call
add
sbb
add
xchg
mov
aas
js
aam
push
hlt
aas
push
sbb
js
dec
(bad)
jmp
jno
cmc
pop
mov
jo
mov
aas
cmp
jecxz
movs
mov
popf
mov
repz
cmp
lea
push
add
jo
push
mov
ret
mov
lods
jecxz
movs
jecxz
mov
movq
ret
push
fistp
mov
in
ror
xor
sub
stc
scas
cmp
xor
xchg
xor
inc
fwait
inc
pop
dec
je
inc
pushw
add
add
push
mov
pop
pushf
jne
dec
xlat
mov
add
add
ins
push
pop
xor
cmp
aas
adc
popf
shr
dec
xchg
(bad)
or
lds
lods
outs
lock
jbe
outs
add
pusha
out
iret
xchg
rol
dec
lea
retf
jno
(bad)
out
lahf
jge
ins
(bad)
dec
hlt
sbb
cmp
jmp
ror
mov
or
push
stos
lods
cdq
stc
jle
pop
data16
mov
mov
pop
aas
repz
out
out
into
inc
and
leave
ret
mov
jmp
mov
leave
(bad)
cwde
int3
in
bswap
add
cmps
cmp
lea
repnz
sub
hlt
enter
pop
adc
test
cwde
mov
(bad)
in
outs
fidivr
test
mov
xor
popf
xchg
adc
(bad)
ds
ficomp
mov
mov
mov
mov
or
jmp
inc
ins
out
push
repz
mov
mov
hlt
mov
imul
mov
mov
hlt
mov
repnz
js
cld
ffree
repnz
dec
arpl
test
inc
dec
sahf
add
mov
lahf
ds
cmp
outs
push
(bad)
(bad)
xor
in
sub
mov
sti
dec
cmps
hlt
sub
pop
adc
sbb
or
sub
inc
lahf
mov
test
pop
adc
in
sbb
stos
lds
scas
fwait
xchg
sbb
das
jne
shr
cs
mov
out
push
jnp
adc
shr
ret
cmps
mov
pop
(bad)
int
mov
sbb
and
sti
int
repz
test
rol
cmp
jmp
add
pop
push
sar
shr
leave
iret
sbb
xchg
sbb
and
or
cmps
leave
or
push
push
push
or
add
rcl
pop
mov
(bad)
sti
mov
retf
push
sub
imul
retf
xor
dec
jno
clc
push
jo
xchg
adc
dec
aad
in
xor
loop
lods
push
imul
ss
add
enter
daa
add
xchg
add
nop
mov
xchg
or
sub
dec
mov
sub
adc
and
outs
test
fild
and
xlat
mov
test
or
loop
(bad)
cdq
scas
push
lods
data16
lahf
or
mov
scas
mov
and
test
mov
push
js
cmp
xchg
lock
sub
lahf
xchg
sar
adc
cmps
mov
jae
pop
ficomp
jmp
jp
pop
sahf
fisub
sbb
xor
in
lea
out
mov
xor
cmp
adc
inc
dec
and
jno
shl
je
loop
jne
mov
or
mov
xor
dec
repz
jbe
inc
push
mov
dec
xor
bound
out
dec
int3
scas
or
and
sub
hlt
retf
fidiv
cmps
xchg
gs
sub
xor
xchg
jmp
mov
mov
outs
cmp
cli
mov
xor
adc
and
aad
pop
(bad)
cld
in
addr16
fwait
push
jecxz
cld
and
jl
sar
cs
rcl
sub
push
jns
jo
mov
outs
idiv
rcl
jecxz
test
sbb
xchg
call
aam
cmp
xlat
aaa
add
in
fmul
ror
cdq
cmp
fcomp
in
addr16
jle
repnz
cmp
idiv
call
aas
mov
test
push
or
push
mov
add
(bad)
fmul
xchg
mov
(bad)
std
mov
adc
sub
imul
mov
sbb
call
dec
repnz
(bad)
cwde
arpl
mov
in
aad
and
lds
sub
or
call
sbb
ja
ret
clc
fucomi
or
das
cld
add
sti
or
xchg
(bad)
outs
fcom
retf
mov
idiv
(bad)
cmc
sub
xchg
or
call
inc
sub
retf
xor
dec
jno
add
mov
pop
inc
call
jno
cmp
dec
mov
movs
scas
leave
bound
hlt
cmps
es
xchg
mov
in
jnp
and
mov
pop
mov
xlat
stc
retf
int
inc
sub
xchg
xor
xchg
mov
(bad)
mov
jmp
sbb
rol
in
sub
ins
mov
mov
sub
mov
daa
mov
rcr
mov
ret
sbb
xor
adc
mov
xor
sub
and
sahf
xor
stos
jmp
xchg
sbb
adc
(bad)
in
push
je
or
vcvtps2pd
retf
enter
(bad)
push
aaa
test
in
inc
xchg
or
rep
loopne
sar
dec
cmp
adc
sbb
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
push
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aas
aad
jecxz
icebp
mov
(bad)
fidivr
pop
and
cmp
arpl
inc
data16
fs
xchg
xchg
sub
xchg
cwde
inc
enter
jns
(bad)
cmp
ret
not
pop
jg
repz
add
push
mov
pop
mov
scas
dec
loopne
sar
outs
cld
pop
scas
cmp
pop
jle
cmps
scas
pushf
sahf
adc
jne
push
imul
popa
add
fidivr
pop
and
(bad)
in
pop
xchg
mov
adc
dec
into
test
dec
lea
nop
loopne
call
mov
mov
jl
movs
xor
in
sbb
mov
repnz
mov
cmps
pop
mov
xor
adc
push
mov
dec
aas
out
loopne
imul
xchg
(bad)
push
jle
xchg
xchg
and
dec
adc
repz
and
and
retf
dec
adc
xchg
mov
lods
movs
retf
cmc
enter
sahf
jp
mov
pop
cdq
inc
es
xchg
pushf
xor
and
(bad)
lods
jl
mov
ud2
mov
js
sbb
adc
jl
frstor
mov
es
gs
push
out
pop
imul
lods
inc
(bad)
stc
pcmpeqw
(bad)
mov
fnsave
push
push
mul
mov
cld
jb
sub
sbb
jns
mov
in
sbb
dec
fbld
jl
imul
and
rcl
dec
add
pop
mov
int3
xor
mov
cmp
dec
cmc
add
and
mov
mov
psraw
adc
pop
inc
dec
mov
fcmovne
mov
inc
dec
iret
arpl
mov
inc
pop
loope
mov
push
(bad)
cmp
outs
js
and
cdq
xchg
sbb
imul
mov
les
mov
adc
cmp
sbb
push
in
push
std
or
jns
sar
sub
xchg
jmp
mov
shr
push
cmps
icebp
mov
out
and
mov
ret
(bad)
(bad)
retf
sbb
in
repz
in
outs
(bad)
fdiv
jne
mov
outs
movs
inc
pushf
cmp
mov
repnz
mov
add
push
ret
ret
dec
xchg
sub
pop
icebp
scas
mov
lods
mov
aaa
cmp
or
xlat
in
xchg
mov
sbb
cmp
and
mov
mov
xchg
xor
jns
pavgw
and
dec
pop
adc
aad
mov
adc
xchg
push
or
mov
mov
add
in
push
cmp
(bad)
sub
sub
xchg
clc
xchg
mov
inc
inc
(bad)
jg
cmc
call
mov
mov
and
push
push
sub
cwde
xchg
clc
dec
dec
(bad)
fbstp
mov
cmp
fadd
jmp
or
xchg
cs
xlat
add
movs
cld
mov
and
adc
dec
scas
(bad)
clc
fs
vpslld
cmps
pop
(bad)
leave
lds
xchg
pop
mov
lods
inc
fwait
dec
sbb
cmp
in
or
dec
in
leave
cmp
sbb
out
lock
dec
in
retf
jne
add
sbb
jg
repnz
in
xchg
stos
xlat
arpl
cmps
mov
sub
dec
adc
jp
(bad)
xor
jl
sub
outs
jle
mov
stc
mov
int
movs
es
imul
mov
test
rcr
dec
jg
adc
cmp
fs
and
sub
xchg
popf
jb
idiv
xlat
lahf
inc
shr
cmps
inc
pop
fcom
mov
jbe
das
cmp
or
(bad)
jne
cmps
cmp
loop
test
psubsb
pop
mov
cld
out
imul
shr
das
mov
sbb
retf
xor
repz
mov
pop
jp
rcl
movs
outs
das
in
(bad)
lock
sub
imul
pop
cdq
cmp
or
mov
xchg
mov
add
pushf
xor
pop
sbb
fisub
out
scas
jl
push
rcl
pop
or
xor
adc
ficomp
pop
test
lahf
in
push
jne
cwde
mov
(bad)
cmp
cmp
outs
push
addr16
mov
icebp
call
mov
sub
cs
mov
pop
pop
leave
(bad)
push
mov
sbb
dec
or
xor
cmc
jno
jge
push
jbe
cmp
stc
cmp
xor
test
and
or
cwde
jae
hlt
inc
mov
test
mov
cmp
sbb
adc
(bad)
(bad)
mov
sbb
pop
sub
adc
sbb
jge
mov
inc
mov
hlt
scas
mov
das
push
xchg
call
add
xor
fwait
cmp
or
retf
lock
push
retf
mov
fs
jno
aad
outs
je
mov
call
mov
sub
mov
or
and
repz
rol
mov
lea
ds
xor
mov
adc
fimul
jge
xchg
push
dec
adc
push
push
xor
pushf
ss
inc
adc
aas
ins
jp
aad
cmps
xchg
xlat
mov
and
lea
dec
std
inc
lahf
int3
cdq
and
add
aaa
in
mov
ror
(bad)
int3
push
std
or
cmp
cwde
call
lahf
cmp
jo
stc
cdq
popf
push
mov
out
mov
int
pop
or
pop
sbb
sub
cmc
push
xor
mov
fsub
aaa
cmp
mov
gs
call
fdivp
push
icebp
jmp
inc
xchg
rcr
pusha
push
call
int
jmp
sar
sbb
std
xchg
fiadd
stos
in
test
fisttp
jecxz
fldenv
push
in
pop
aam
jno
in
in
inc
cli
stos
sahf
test
xchg
xchg
cmp
and
shr
ins
pop
mov
cmp
mov
pop
push
mov
idiv
lea
cmp
lahf
in
inc
sar
js
fld
cmp
jl
jmp
gs
je
je
mov
add
icebp
xchg
test
push
adc
fwait
scas
(bad)
int
or
in
iret
hlt
and
ja
mov
aas
lods
outs
jmp
lds
pop
xor
mov
mov
push
adc
mov
out
sub
add
iret
fucomip
sbb
aas
xchg
sbb
cmp
int3
dec
mov
xor
mov
ja
fidivr
fcom
cmp
push
cmc
fstp
call
iret
gs
dec
inc
rcl
pop
sbb
add
shl
ss
out
mov
pop
fwait
inc
sbb
and
into
jnp
(bad)
iret
mov
je
mov
xor
vmovlps
sbb
push
aad
das
movs
nop
mov
mov
imul
adc
arpl
mov
pop
mov
or
sbb
cmp
fucom
pop
fwait
xor
mov
div
pop
dec
stos
cmp
add
xchg
das
daa
mov
push
(bad)
mov
pop
and
xor
dec
or
jp
pop
jl
(bad)
loopne
cmp
dec
cld
adc
inc
cwde
fs
enter
xchg
sahf
icebp
jne
into
push
leave
es
loope
mov
call
add
in
mov
cmc
(bad)
or
(bad)
dec
sub
test
sti
add
mov
lea
(bad)
(bad)
loopne
mov
int3
lods
out
add
xchg
lock
int3
stos
rcl
test
ds
out
jb
sbb
imul
imul
lahf
pushf
push
cmp
repnz
dec
jl
mov
(bad)
add
jmp
inc
xor
jbe
out
jmp
icebp
pop
or
lods
push
xchg
mov
fdivr
cmp
lahf
push
jae
mov
les
pop
sbb
cmc
jle
xchg
dec
loop
sahf
xchg
aam
scas
push
nop
mov
or
js
mov
int3
adc
sub
rol
jmp
dec
sbb
(bad)
bound
call
adc
fistp
dec
scas
or
push
imul
shl
sub
push
mov
mov
inc
cmc
mov
std
jns
xor
adc
test
adc
call
mov
pop
xchg
adc
xchg
sti
sub
pusha
fbstp
add
sbb
dec
dec
pop
cmps
xchg
test
or
sub
sbb
sub
sbb
pop
push
sub
mov
adc
dec
jge
out
(bad)
pop
dec
pop
push
and
shr
dec
fidivr
adc
stos
cmc
and
das
adc
imul
xor
xchg
(bad)
push
or
sub
ds
sub
popa
jmp
jp
sbb
mov
int
in
jbe
pop
retf
movs
aas
push
xor
push
jnp
cmp
cld
push
xor
movs
test
nop
mov
sbb
cmps
test
or
ja
dec
mov
retf
mov
cmp
adc
sub
mov
int
push
jle
enter
xchg
jo
test
mov
(bad)
iret
and
jle
cmp
and
psubq
ja
gs
imul
in
dec
rcl
cld
push
xor
jae
lock
movaps
pop
retf
mov
xchg
outs
frstor
jmp
retf
jae
mov
push
cmp
pop
js
ret
hlt
jns
xchg
mov
mov
xchg
dec
nop
data16
add
iret
cs
enter
sub
and
xchg
push
cwde
mov
pop
div
data16
mov
xor
inc
jp
xor
dec
iret
int
fsubr
ss
icebp
push
xchg
pop
frstor
mov
out
xor
pop
push
nop
(bad)
cmp
mov
mov
or
xor
shl
inc
mov
icebp
test
push
pop
xchg
xchg
cs
jp
es
bound
cmps
xor
pop
sub
pusha
and
retf
xchg
cmp
push
adc
adc
and
es
ja
mov
lea
inc
and
pop
aam
dec
shl
cmp
call
push
cmp
mov
mov
cmp
call
call
in
or
popa
leave
scas
xor
inc
adc
fst
xor
push
loope
mov
sahf
mov
inc
mov
xor
push
add
in
aad
sahf
add
clc
je
inc
mov
(bad)
mov
mov
add
add
std
jbe
retf
mov
sti
imul
sbb
std
int3
sub
in
loop
inc
add
daa
(bad)
push
loope
pop
mov
stos
inc
outs
or
jle
inc
addr16
mov
mov
call
jbe
dec
in
fcom
cmps
aam
mov
fimul
sbb
push
push
stos
fcomp
sbb
out
mov
and
add
(bad)
out
mov
dec
aad
cmp
cmp
jmp
cmp
inc
aas
lock
add
dec
cld
adc
adc
aas
ficom
arpl
out
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
inc
into
fiadd
leave
xchg
in
ins
and
sbb
fidiv
inc
sbb
sbb
into
es
fisubr
jnp
push
inc
pushf
mov
in
shl
and
lldt
scas
(bad)
cmp
mov
(bad)
cmp
or
jae
adc
jb
fs
bound
fcom
(bad)
in
retf
xor
lods
inc
cmp
inc
clc
and
sbb
sbb
sub
in
mov
jmp
pop
test
jo
mov
int
adc
div
das
jp
sahf
mov
inc
std
or
fld
mov
fstp
ja
mov
xchg
stc
js
inc
test
(bad)
pop
xchg
cmp
repz
je
jp
test
cmp
popa
mov
out
mov
adc
stos
int3
in
xlat
gs
xor
adc
cmp
ss
push
push
shl
into
xor
mov
ins
dec
ss
fstp
retf
cmp
pop
icebp
cmps
and
outs
outs
shl
div
shr
push
or
jle
nop
sbb
loopne
sbb
push
xchg
xadd
push
int
popf
in
cli
mov
pop
cmp
inc
ss
and
in
loope
xchg
jmp
xchg
adc
jns
push
test
push
(bad)
stc
push
jno
jne
pushf
fwait
xor
inc
or
adc
pop
xchg
jmp
jo
pop
repnz
jp
cmp
pop
mov
and
jo
pop
loop
cmp
daa
gs
arpl
xchg
cmp
jae
pushf
scas
sub
jmp
mov
jle
imul
sahf
mov
adc
inc
lods
sub
jg
push
cmc
out
aam
dec
xchg
call
das
cmp
add
inc
dec
or
lods
push
aam
scas
jno
push
push
in
pop
gs
ds
push
sbb
and
xchg
mov
pop
xor
jge
xor
adc
jg
cmp
ja
fmul
lods
fsubp
test
les
add
int
xor
(bad)
test
adc
jnp
or
es
push
fisttp
push
pop
movs
enter
cwde
push
movs
addr16
jle
aad
lds
xor
mov
or
stc
cs
or
inc
mov
add
push
sub
sub
adc
push
out
jmp
push
mov
pop
(bad)
xor
dec
mov
out
pop
mov
das
adc
aas
cmc
inc
call
out
push
in
in
addr16
scas
sbb
sti
lods
jmp
sub
cmp
mov
mov
pop
out
mov
adc
pop
or
sub
dec
fwait
ins
xchg
in
neg
add
popf
mov
cmp
in
call
(bad)
(bad)
popf
jle
aas
lods
dec
dec
and
sub
jmp
popa
or
in
cmps
(bad)
pop
cli
inc
mov
call
(bad)
call
mov
aas
out
pop
mov
repnz
fidiv
jae
jmp
mov
adc
data16
mov
inc
cmps
and
sub
out
imul
int
cs
mov
push
inc
scas
neg
sbb
ror
aad
pop
scas
mov
into
pop
in
dec
xchg
sti
les
mov
out
mov
mov
sar
mov
cdq
cwde
mov
or
mov
addr16
sub
add
and
(bad)
or
and
shr
jne
fldlg2
sahf
into
repnz
add
stos
lods
push
sbb
mov
xor
mov
loopne
fldenv
mov
hlt
mov
mov
jmp
ret
popa
cmp
out
neg
jge
ds
fwait
push
stos
mov
(bad)
mov
mov
fiadd
add
xor
jp
or
jo
daa
and
mulps
jmp
shl
ja
call
or
adc
fs
in
dec
popa
fisub
cmps
pop
add
popf
add
xor
or
pushf
inc
enter
cmc
popa
out
daa
(bad)
jecxz
sub
das
mov
addr16
push
xor
cwde
sub
scas
and
cmc
popa
outs
out
mov
stos
js
adc
jle
dec
adc
cmp
sbb
and
xchg
jmp
cdq
fnstcw
gs
aad
mov
cwde
xor
rcr
ins
ret
lods
loopne
ficomp
inc
ror
inc
ret
(bad)
push
cli
and
or
jae
mov
ins
jecxz
jecxz
scas
inc
imul
scas
fst
adc
mov
cdq
lahf
popa
xlat
pop
pop
mov
shl
push
mov
push
repz
(bad)
adc
dec
ins
or
repz
xchg
mov
fwait
das
pop
sub
shl
in
std
xor
adc
sbb
xchg
(bad)
daa
not
push
mul
shl
pop
scas
adc
cmp
loop
pop
push
adc
call
retf
sti
add
std
xor
mov
cmp
shl
jl
push
mov
dec
mov
push
mov
xsaves
pop
mov
adc
adc
dec
jp
les
inc
daa
(bad)
sti
sub
cs
(bad)
mov
xor
loop
mov
(bad)
in
movs
or
push
arpl
mov
sbb
fld
jmp
(bad)
sub
mov
loop
push
sub
xchg
ja
dec
cmps
push
add
das
lods
mov
pop
sbb
int3
mulps
fdiv
jp
or
jo
aad
std
enter
mov
and
push
xor
stos
mov
adc
pop
dec
add
jle
xor
mov
xchg
outs
and
pop
jmp
and
cmp
sahf
and
imul
jo
mov
jmp
outs
xlat
repz
icebp
inc
enter
jns
cmp
lea
inc
cwde
outs
aas
jg
pop
sahf
push
clc
stos
xchg
shl
mov
in
sub
rcr
(bad)
hlt
stos
das
jns
shl
stc
mov
loope
push
aas
ret
pushf
sahf
dec
xchg
lods
mov
push
test
(bad)
int3
and
(bad)
rcr
cwde
fmul
push
xor
push
mov
jne
mov
xlat
(bad)
or
mov
push
inc
jo
sub
push
addr16
cmp
scas
adc
ins
movs
mov
dec
pusha
adc
loopne
imul
cld
lods
sbb
lds
lods
iret
mov
repnz
inc
ret
push
xchg
push
sti
push
cli
add
aas
cs
nop
push
push
cld
stc
cdq
pop
lds
out
fwait
push
mov
push
jno
jl
into
mov
dec
(bad)
test
nop
call
xchg
xchg
inc
outs
pop
jg
inc
mov
jne
jno
fadd
cmps
xchg
dec
test
stc
push
jo
es
std
call
leave
mov
mov
mul
sub
nop
push
arpl
or
mov
and
mov
dec
mov
pop
push
loop
gs
add
add
pop
inc
test
jmp
sar
aaa
jmp
push
cmp
jno
ret
adc
rol
push
inc
jmp
cmp
mov
adc
pop
in
cld
add
rol
pop
push
nop
or
inc
lods
and
and
jbe
jle
je
mov
mov
jmp
cmp
jae
inc
sbb
aam
std
adc
les
iret
scas
dec
mov
push
cli
mov
adc
sar
outs
je
mov
int3
inc
sub
add
jmp
fistp
pop
icebp
and
xchg
cmp
dec
arpl
mov
out
aam
lods
aaa
aad
jp
cmp
mov
sbb
mov
jp
add
xor
mov
mov
fldcw
cmp
mov
pop
pop
fnstenv
lds
cs
mov
lds
scas
gs
cmp
inc
xchg
sbb
xchg
dec
dec
xchg
out
das
loopne
xor
mov
pop
inc
or
jg
or
pop
sar
mov
bound
pop
imul
sub
dec
stc
dec
add
add
in
mov
cmps
xor
mov
ret
fucomi
sub
cli
js
in
(bad)
push
mov
push
add
and
push
sbb
add
mov
xchg
mov
push
mov
xchg
shr
loope
fwait
mov
int3
fs
xor
ja
out
dec
shr
lea
jnp
xchg
adc
retfw
push
mov
mov
sbb
adc
arpl
stos
mov
movs
mov
in
jmp
pop
adc
(bad)
pop
sub
imul
mov
sub
push
popa
xchg
aad
mov
ret
mov
test
in
lods
push
sbb
aam
pop
dec
pop
ror
mul
push
mov
int
inc
lahf
ret
jge
jl
fld
xchg
lods
sahf
inc
cmps
scas
stos
or
mov
sahf
mov
sahf
dec
dec
push
cmp
ret
cmp
cld
mov
pop
cmovb
sub
ror
adc
clc
add
jg
adc
arpl
cmps
mov
retf
adc
dec
outs
das
ja
rcl
outs
mov
xchg
sbb
push
mov
xor
(bad)
in
push
dec
adc
xchg
mov
inc
pop
or
adc
aam
sub
mov
inc
popa
in
pop
scas
js
not
je
stc
push
arpl
loop
dec
jmp
jb
aas
jns
es
fs
push
outs
imul
adc
or
rcr
les
sti
xchg
push
sbb
cmp
cs
int
jecxz
xchg
rcl
jge
xchg
out
nop
push
mov
ins
inc
popf
movs
cmc
sahf
push
(bad)
pop
out
lea
cmps
sub
sbb
mov
scas
sub
sbb
pop
sbb
add
pop
dec
(bad)
out
pop
xchg
mov
in
xchg
and
(bad)
jbe
outs
sub
stc
jbe
and
je
add
mov
std
xor
jb
xor
(bad)
cli
push
jg
js
adc
push
std
xchg
pop
dec
mov
mov
cmp
and
jl
js
gs
stos
pop
jge
ds
mov
dec
cmp
jb
xbegin
xchg
pushf
cwde
(bad)
(bad)
fistp
mov
push
movs
adc
inc
mov
jne
scas
test
mov
xchg
cmp
pop
add
xchg
int3
fmul
stc
push
ja
mov
jge
sbb
mov
mov
xchg
fstp
mov
mov
mov
add
and
mov
lahf
push
shr
scas
mov
xchg
xchg
cld
call
adc
push
jb
ja
lea
aam
ror
cli
add
verw
push
std
rcr
mov
xchg
xchg
test
pop
cwde
imul
mov
pusha
cli
sub
sti
or
jno
je
mov
ret
inc
add
pop
mov
lods
jns
or
xor
jo
cmps
stos
fst
pop
dec
or
les
inc
pop
pop
add
jbe
lahf
jg
inc
dec
lock
cld
shld
dec
mul
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
inc
xchg
lea
add
push
cmp
inc
and
outs
or
movs
xchg
push
movs
cmp
dec
or
push
sub
jo
shl
xor
into
pop
lahf
dec
js
add
mov
sub
lahf
pop
push
mov
dec
popa
je
stos
fnstcw
leave
fld
sbb
call
(bad)
mov
mov
lock
adc
pusha
stos
mov
add
in
cmp
fild
das
cld
or
dec
out
adc
rcl
idiv
xor
into
dec
out
sub
cli
stc
jl
add
push
sti
clc
stos
(bad)
pushf
(bad)
fwait
js
adc
out
lock
popf
ins
jecxz
call
retf
(bad)
dec
mov
mov
mov
jge
mov
push
aaa
(bad)
test
in
dec
xor
out
mov
pop
movs
lods
(bad)
outs
push
add
inc
jmp
mov
leave
sbb
or
xor
or
jmp
pop
jle
or
inc
inc
add
cmp
add
aaa
cmps
imul
adc
gs
int
mov
or
mov
inc
popa
fld
clc
jnp
adc
inc
add
fidivr
add
jns
sahf
and
loop
imul
dec
pop
mov
xchg
jb
loopne
(bad)
std
ds
call
test
pop
dec
fcmove
mov
call
arpl
ret
mov
sbb
push
pushf
(bad)
xor
sub
out
dec
push
into
shl
pop
jbe
cmc
dec
and
push
enter
shl
pop
mov
mov
repz
sbb
adc
sub
ja
or
push
sub
data16
mov
sub
push
mov
fcmovnb
icebp
ret
xchg
adc
fist
mov
mov
mov
les
jge
stos
jbe
ins
jmp
leave
xor
(bad)
sub
js
push
lds
lods
sbb
test
mov
inc
mov
cwde
cmp
dec
pop
add
push
and
xchg
mov
cmp
pop
push
xor
dec
gs
dec
mov
cdq
les
into
shl
xor
or
aam
fcmovu
mov
in
dec
jle
push
mov
push
lds
aam
aad
loope
or
sbb
aas
cmp
sub
repnz
retf
rcl
ror
xlat
stos
xchg
pop
inc
aad
mov
(bad)
loopne
lods
jp
push
imul
mov
dec
dec
pop
mov
imul
ret
cmp
jecxz
imul
pop
push
cdq
loop
sbb
xor
mov
xor
or
jp
add
scas
mov
add
push
or
xchg
ficomp
std
pop
in
mov
push
mov
push
icebp
push
aaa
sub
mov
dec
add
xchg
sbb
xchg
cmp
xchg
outs
dec
(bad)
jno
ss
pop
lock
mov
push
push
sbb
add
fwait
sbb
jmp
(bad)
std
or
push
nop
sahf
inc
xchg
daa
cwde
or
xchg
sar
mov
inc
xor
adc
sbb
shl
imul
aas
mov
mov
std
adc
inc
xor
aaa
push
cmps
push
es
inc
mov
pop
cs
cmps
fnstsw
jmp
mov
adc
pop
pop
inc
sti
je
popf
movs
sbb
cmc
sti
jmp
xor
sbb
mov
nop
add
lods
lods
repnz
imul
into
mov
lods
ins
and
sub
and
adc
cwde
mov
jae
cmp
fnstsw
out
loop
sub
movs
sub
aaa
or
add
xor
lock
pop
call
movs
push
mov
pop
in
push
xchg
cmp
jne
add
fs
or
xor
xor
enter
out
rcr
faddp
outs
(bad)
jns
cli
lods
cwde
(bad)
or
call
(bad)
aas
bound
cmc
imul
mov
sub
int3
mov
lahf
imul
ss
fld
jmp
out
push
dec
pop
das
sub
sbb
fsub
pop
sbb
xor
and
rcl
sub
ret
mov
and
push
add
call
arpl
repnz
scas
fldenv
(bad)
cs
dec
(bad)
in
inc
ret
mov
mov
cmp
bound
xchg
adc
stos
cld
xchg
jmp
mul
repnz
xchg
mov
or
inc
jp
sub
imul
mov
jnp
push
stc
xlat
out
out
lahf
gs
ins
std
fiadd
lahf
cmps
dec
push
mov
jl
(bad)
fild
pop
add
fild
or
cdq
test
repnz
sub
rcr
add
stos
add
jmp
and
xlat
imul
push
fwait
dec
mov
ror
jnp
dec
mov
pand
or
mov
cmps
and
add
call
push
shl
test
cdq
pop
in
add
cmp
cwde
ror
test
shl
adc
sbb
adc
mov
out
fwait
sbb
stc
mov
adc
outs
test
xchg
mov
mov
and
sti
into
jnp
mov
cmp
push
sub
xchg
push
mov
ins
mov
test
adc
aam
mov
ficom
repz
jge
lea
sbb
retf
xchg
inc
imul
leave
inc
xchg
jnp
or
pop
xor
jmp
icebp
add
push
mov
xor
jle
out
cdq
fsubr
xchg
inc
cwde
inc
jnp
push
xchg
les
sbb
cmps
lock
inc
inc
jge
lds
and
gs
mov
xor
mov
cli
in
sar
or
dec
adc
adc
daa
scas
mov
sbb
lods
xor
lds
mov
js
xchg
sti
retf
or
pushf
inc
mov
into
mov
call
(bad)
into
mov
xchg
cmp
mov
stos
shl
je
cmp
out
test
cmps
adc
sbb
sub
and
imul
pop
mov
jns
or
shr
dec
adc
les
dec
cdq
dec
xchg
dec
xor
aam
sti
fisttp
cmc
cmp
mov
xchg
shl
fs
ret
add
mov
leave
xchg
sbb
xor
and
ss
adc
lods
mov
ror
mov
arpl
into
sub
cli
and
mov
mov
or
aad
xlat
cmp
push
inc
popf
inc
lods
mov
(bad)
scas
and
aas
xlat
daa
ds
and
rcl
push
out
add
ja
popf
sub
jno
and
js
movs
add
das
inc
sub
out
rol
mov
and
idiv
mov
test
mov
ficom
icebp
fnstsw
mov
xlat
int
cmps
mov
cdq
adc
jge
jmp
cli
or
mov
neg
ss
shl
adc
and
mov
dec
pushf
mov
cmp
mov
adc
and
das
fldenv
jb
and
test
cmp
int
mov
mov
jp
and
and
jp
stc
push
xor
out
lods
mov
sahf
xchg
fwait
icebp
push
xor
jge
ins
das
sbb
sub
mov
call
ins
jmp
xchg
fsubr
sub
push
cmp
dec
add
add
push
icebp
add
setge
jo
mov
int
leave
mov
les
jge
add
and
pop
scas
jnp
mov
pop
add
hlt
ret
les
in
push
sbb
sub
into
stc
and
mov
xchg
movs
leave
inc
xor
(bad)
std
out
push
sbb
(bad)
iret
ins
push
push
mov
cmps
repnz
dec
jmp
add
fwait
jae
jmp
pop
in
sub
les
and
shl
cmp
mov
movs
(bad)
sbb
xor
outs
ds
lods
aad
pop
cmp
stc
cmp
pop
adc
call
add
sbb
or
push
hlt
xchg
int
mov
jne
scas
idiv
mov
fbstp
pop
adc
cdq
mov
cs
outs
push
push
div
cld
or
outs
cmp
sub
adc
mov
xor
mov
addr16
out
les
adc
push
xor
idiv
jmp
push
cmps
cli
xchg
ficom
mov
ss
aam
cmp
les
jnp
jno
in
loope
adc
sbb
jl
fs
icebp
out
shl
(bad)
dec
ret
dec
stos
aad
retf
xchg
in
iret
test
jns
mov
sub
shr
jb
mov
xor
outs
fsubp
and
mov
repnz
push
in
xchg
pop
neg
mov
jae
sbb
xlat
xor
call
idiv
pop
pusha
bound
lock
outs
lahf
aaa
loop
idiv
lds
jbe
push
push
das
or
enter
imul
inc
(bad)
retf
(bad)
add
lods
nop
mov
jle
mov
ror
sbb
dec
add
(bad)
(bad)
dec
mov
cmps
sahf
sub
stc
sbb
mov
push
xchg
pushf
test
pop
stos
xlat
jno
call
mov
adc
out
inc
push
or
xor
out
mov
int3
das
jb
cld
retf
add
xor
cwde
mov
pop
dec
mov
fs
fsub
jmp
repnz
call
xor
xlat
mov
jle
xor
shl
les
das
fwait
and
jnp
aam
xchg
push
mov
aas
rol
into
cs
lea
ins
jg
add
arpl
push
dec
mov
test
push
fnstenv
cli
and
dec
fs
pushf
jmp
test
arpl
mov
inc
xchg
sti
adc
cmps
mov
pushf
neg
arpl
and
cmp
fsubp
call
sub
(bad)
lock
out
cmp
xchg
es
pop
je
call
scas
stos
mov
mov
ds
shl
pop
bound
inc
test
xor
lock
loopne
mov
scas
dec
mov
sahf
imul
cmc
xchg
inc
stos
loop
mov
arpl
pop
dec
and
push
into
or
push
mov
jo
dec
mov
pop
(bad)
arpl
rol
outs
or
aaa
sub
cs
test
movs
and
dec
pop
iret
sub
mov
xor
ins
int3
stos
sub
retf
push
aam
pop
iret
inc
mov
sub
inc
aas
xchg
in
ret
add
jb
popf
in
bound
(bad)
(bad)
lock
fcomp
push
push
mov
ss
leave
ss
fs
xor
push
enter
stos
mov
dec
sbb
mov
adc
mov
mov
jp
jnp
mov
sbb
sbb
inc
xor
lds
jge
out
repnz
mov
fnsave
fcom
mov
xchg
shl
test
clc
out
sar
dec
add
sub
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
fmul
add
lock
cwde
out
popa
push
fisttp
call
mov
bound
xlat
(bad)
out
(bad)
aam
xor
xchg
jns
iret
mov
add
icebp
jle
adc
icebp
pop
test
(bad)
jne
les
les
pop
(bad)
inc
push
cmp
mov
adc
stos
in
les
push
dec
ins
mov
adc
and
dec
daa
jmp
stos
enter
sbb
rcl
outs
dec
adc
cmp
mov
outs
pop
mov
mov
ds
fadd
clc
out
in
jno
push
xchg
out
dec
lock
sbb
push
xchg
dec
mov
rol
pop
scas
dec
xor
ins
mov
cmp
xchg
mov
jl
popf
cmp
movs
pop
adc
mov
jb
jl
cmps
adc
hlt
mov
jp
lahf
in
xchg
mov
mov
scas
outs
test
push
cmps
bound
jne
cmp
cmps
stos
add
sbb
iret
lock
dec
aaa
lahf
push
retf
and
or
(bad)
std
cmc
es
cmps
and
jns
fisubr
sbb
sbb
out
and
jae
push
add
xchg
add
xor
cmp
int3
inc
jecxz
sbb
pushf
xlat
push
inc
dec
inc
mov
ja
sti
into
mov
and
mov
fwait
es
fxch
cli
mov
xor
dec
xor
and
je
sbb
ins
and
inc
or
push
mov
push
fstp
xor
aad
mov
enter
ret
add
mov
mov
lods
out
cmc
push
sbb
dec
and
movs
(bad)
adc
int3
dec
or
aas
in
push
clc
mov
add
daa
push
jns
dec
xchg
inc
mov
leave
mov
cmp
loop
adc
std
call
push
(bad)
aas
arpl
cmp
and
lock
daa
in
mov
mov
xlat
repnz
pop
sbb
fistp
ins
cs
outs
mov
sub
call
icebp
fxam
call
test
sti
arpl
pop
push
mov
jnp
push
mov
cmp
push
mov
push
add
mov
(bad)
cdq
outs
push
inc
sbb
aaa
cli
popf
cmp
sbb
call
fstp
xchg
popa
inc
ror
jae
mov
jp
mov
pop
mov
xchg
retf
daa
sahf
jne
push
sbb
je
retf
ins
dec
lods
jmp
dec
cmp
add
mov
xlat
inc
clc
into
xchg
into
mov
aaa
add
mov
mov
pop
retf
push
call
(bad)
sub
and
xchg
pusha
mov
push
sbb
mov
gs
stos
test
jl
jns
sahf
or
mov
sti
into
sbb
pusha
shr
jno
call
int
mov
js
inc
mov
popf
mov
(bad)
jmp
mov
jb
js
add
mov
vpunpckldq
mov
push
xlat
add
sbb
xchg
out
ret
imul
addr16
jmp
adc
(bad)
dec
les
popf
mov
add
mov
popf
xchg
jmp
mov
dec
(bad)
adc
inc
or
jno
jmp
jecxz
movs
xchg
xor
cmp
jbe
(bad)
enter
pop
xor
add
inc
fcomp
sub
mov
xchg
outs
mov
call
aad
sub
addr16
xchg
pop
mov
mul
push
imul
mov
xor
push
(bad)
fcomp
push
jne
test
xor
sbb
fadd
out
ss
rol
lock
mov
pop
and
rep
mov
test
es
repz
scas
pop
push
sbb
sti
push
mov
jno
and
push
jp
and
loope
(bad)
inc
sub
movs
cdq
mov
(bad)
out
shr
pop
les
aad
repnz
scas
and
int
mov
inc
adc
sbb
push
(bad)
sti
stos
int
pusha
popa
out
mov
popa
fadd
mov
mov
test
fwait
mov
test
aaa
cmp
test
rcr
cwde
mov
mov
not
mov
aam
mov
adc
das
mov
cmp
and
or
pushf
xor
mov
push
mov
xor
loopne
dec
into
fistp
mov
icebp
(bad)
aad
mov
add
sbb
retf
sbb
or
ins
scas
xchg
jbe
aaa
cmps
sbb
dec
jmp
clc
and
int
out
dec
add
mov
sub
fild
lods
pop
xchg
shr
or
das
push
aam
jns
mov
xchg
and
dec
jle
(bad)
aas
jnp
mov
push
pop
add
aam
bound
cmp
sub
jns
mov
scas
dec
jnp
and
and
das
cmp
call
xchg
xlat
dec
mov
adc
stos
mov
loop
mov
leave
ins
ss
aad
or
ror
push
xchg
push
inc
(bad)
jmp
mov
adc
out
loop
push
das
or
lods
push
aam
in
jo
fisubr
out
jnp
dec
int3
push
fimul
movaps
out
test
pop
jae
jg
stos
mov
ret
and
dec
pop
adc
repnz
push
outs
or
loopne
inc
aas
dec
jp
xor
pop
xchg
jmp
cs
inc
std
pop
jmp
sub
bnd
cmovg
sub
in
int3
mov
jmp
sbb
cld
repz
data16
sti
inc
mov
ret
jp
xor
xor
or
cmp
dec
pop
shl
inc
jne
mov
mov
imul
cli
por
pop
or
pop
jle
es
leave
aaa
cmp
inc
jmp
inc
loope
sahf
adc
cmc
xor
dec
in
add
imul
mov
stos
loopne
aas
sbb
ds
fisttp
loop
jmp
shl
movs
mov
cmc
scas
add
xor
mov
push
and
or
int
in
cmp
loopne
shl
jle
inc
add
adc
in
stos
pop
pop
cdq
popf
inc
sbb
jle
push
test
mov
jnp
icebp
(bad)
into
fnstsw
fwait
jg
pop
lds
fild
pop
jo
in
retf
rcl
or
ds
pop
and
fisubr
or
jb
(bad)
loopne
retf
and
test
call
fcomp
(bad)
add
push
pop
lods
mov
jmp
dec
jecxz
scas
sar
mov
xchg
cli
jo
or
mov
inc
stos
fsub
aaa
shl
push
sbb
fld
push
cdq
adc
outs
xchg
xor
sub
pop
dec
mov
out
pop
fdivr
aam
shl
mov
xchg
pop
dec
mov
sbb
adc
dec
pop
or
repz
jne
fsubr
mov
cmc
je
lahf
out
jecxz
mov
push
sub
mov
pop
cmp
sqrtps
and
mov
mov
jno
jns
test
mov
rcl
push
inc
test
xor
aad
pusha
daa
mov
pop
lock
mul
jmp
push
inc
jecxz
mov
dec
inc
xchg
cli
mov
mul
ins
fwait
jns
(bad)
cmp
rol
push
ds
mov
stos
jo
sbb
push
pop
jo
jmp
or
lods
mov
pushf
fstp
sub
xor
xchg
fcom
pushf
ror
jo
mov
(bad)
xchg
pop
test
inc
inc
sub
mov
xor
adc
stos
repnz
in
mov
in
cs
dec
xor
out
mov
and
out
push
fiadd
jnp
cmp
inc
adc
inc
sahf
ffree
dec
pop
sbb
pop
test
push
(bad)
fdivr
lahf
(bad)
mov
cdq
dec
mov
ja
cmps
or
jns
xor
xor
mov
iret
mov
xchg
sub
loop
icebp
movs
fidiv
iret
in
or
pop
push
popf
jb
int3
mov
ror
pusha
stc
int3
fdiv
in
lea
sub
ss
loop
neg
add
mov
cmc
enter
in
ss
mov
imul
fimul
(bad)
and
mov
jne
(bad)
cmp
test
ret
leave
dec
out
adc
push
jle
scas
movs
fucomip
inc
mov
repz
mov
mov
pop
push
mov
or
sar
rcr
repnz
cmp
xor
pop
adc
jb
adc
and
jnp
(bad)
(bad)
jp
push
outs
adc
aam
je
hlt
mov
add
mov
cmps
cs
outs
outs
jno
cmc
pusha
fistp
mov
cmp
stos
sbb
jge
dec
mov
pushf
dec
inc
in
data16
add
adc
push
sbb
arpl
pushf
fcmovbe
bound
lea
mov
adc
sub
jmp
dec
push
(bad)
push
lods
add
into
sahf
pop
clc
mov
imul
cmp
dec
and
sahf
and
dec
test
sub
push
cld
(bad)
icebp
cmp
ret
jp
aad
xchg
adc
xchg
loopne
fistp
stc
rcl
(bad)
lds
and
popa
and
sub
or
inc
xchg
out
in
pop
sub
dec
fmul
add
pusha
or
lea
test
pop
adc
adc
(bad)
inc
test
(bad)
sbb
and
jnp
and
and
cmp
addr16
out
sbb
xchg
sbb
and
rcl
sub
ins
sbb
in
push
mov
loopne
test
test
mov
retf
push
dec
inc
gs
add
out
daa
out
in
iret
lahf
std
add
fisttp
ds
xor
sub
cmp
(bad)
out
js
aas
pop
inc
and
lods
sub
inc
pop
mov
mov
scas
mov
xchg
test
fs
in
push
in
pop
outs
sub
adc
aaa
int
cmp
sbb
sbb
mov
mov
fidivr
out
int3
lods
sbb
inc
mov
mov
sub
inc
into
in
adc
nop
xchg
or
dec
cdq
jnp
pop
or
dec
mov
loop
push
out
push
stc
clc
or
push
cmp
pushf
sti
mov
xor
repnz
xor
jmp
jb
mov
sub
shl
(bad)
mov
daa
mov
in
jg
dec
ds
icebp
xchg
adc
sub
or
cmp
cmp
movs
(bad)
cmps
and
add
mov
mov
pop
rcl
adc
int
mov
out
sub
add
call
stos
inc
mov
shl
cmp
js
repz
push
cwde
jmp
jo
dec
mov
clc
mov
out
sbb
xlat
adc
das
aam
sub
not
jecxz
mov
imul
jmp
adc
mov
cmps
push
or
fnstenv
mov
mov
sbb
(bad)
pop
out
jnp
shl
inc
fwait
mov
(bad)
imul
pop
std
ret
push
sbb
sbb
fstp
push
jp
sub
cmp
in
(bad)
jns
sti
push
xor
add
or
lock
loopne
sar
lock
dec
or
enter
dec
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
xchg
or
add
xchg
sub
adc
retf
adc
cs
dec
or
dec
sbb
sub
mov
or
adc
(bad)
sti
aad
adc
add
sbb
sti
jo
pop
cmc
out
sub
and
aad
xor
xchg
mov
push
adc
outs
dec
or
jno
imul
pop
fwait
jae
or
xchg
daa
sub
push
aaa
cmp
int
cmps
ins
push
jnp
xchg
sub
and
xchg
(bad)
jle
psubsb
adc
das
sbb
stc
push
outs
adc
jecxz
jbe
(bad)
mov
movs
in
push
in
std
sahf
cmps
xchg
pusha
xchg
push
in
or
stos
xor
repz
sub
dec
test
mov
push
push
jmp
scas
ins
mov
jo
push
sbb
mov
inc
mov
aas
jnp
and
inc
jp
js
hlt
or
hlt
jmp
xchg
fs
ds
sbb
mov
mov
xor
push
mov
add
mov
dec
push
pop
adc
mov
les
aam
scas
xchg
xchg
nop
into
rcr
dec
stc
cmc
(bad)
mov
aas
pop
jmp
stos
ins
ret
stos
aam
push
cwde
ret
jge
js
ds
adc
xchg
push
into
push
mov
fcmovu
in
sub
jecxz
cmps
cmc
cmps
inc
jmp
outs
cdq
das
inc
and
or
jg
(bad)
pop
ret
xchg
cmp
jmp
imul
mov
std
add
sbb
dec
mov
fstp
jmp
cmp
sub
push
out
add
mov
retf
mov
cld
popf
(bad)
sti
popf
mov
mov
pop
sub
and
jg
pushf
dec
pop
jb
xchg
xchg
sbb
es
mov
pop
repz
mov
rcl
adc
loopne
loopne
test
movs
inc
in
test
adc
adc
bound
(bad)
mov
add
retf
ds
jmp
shl
jne
add
cmp
pminsw
mov
sub
repnz
sti
in
adc
pop
dec
rol
fwait
movs
sub
pop
mov
sahf
xlat
mov
arpl
pop
jecxz
push
leave
adc
lods
cmp
pop
jle
arpl
mov
sbb
das
mov
imul
sub
leave
pop
dec
fisubr
cmp
dec
test
leave
push
imul
fistp
in
mov
dec
xor
cli
outs
xor
pop
jl
dec
fsub
lods
fstp
out
shr
rol
outs
xor
adc
or
js
shl
stc
movs
scas
inc
pop
sbb
inc
mov
scas
add
lods
xchg
outs
outs
mov
out
sub
mov
aaa
cli
xchg
adc
add
push
retf
(bad)
repnz
loopne
je
not
shl
test
or
push
outs
mov
fldenv
and
repz
inc
and
add
push
add
sub
pop
rcl
push
jns
shl
mov
aaa
cs
(bad)
fdivr
inc
outs
les
cmp
pop
mov
xor
repz
add
mov
cmp
lds
cmps
or
pop
mov
pop
arpl
or
push
popf
(bad)
lea
push
jno
icebp
(bad)
cld
out
jbe
cdq
loope
(bad)
xor
stc
les
std
adc
les
xchg
sar
pop
xchg
xchg
dec
retf
xor
xor
xchg
or
js
pusha
dec
movs
jl
and
cmps
inc
scas
or
cmp
sbb
pop
por
mov
gs
jg
rol
xchg
mov
aaa
popa
push
pusha
xor
sar
stos
mov
jge
fcmovu
pop
or
jecxz
pop
je
hlt
mov
jbe
rcr
mov
sahf
js
dec
test
cli
dec
xor
mov
adc
or
mov
(bad)
fstp
ds
dec
push
repz
jecxz
pop
iret
cs
jns
lods
stc
jmp
jne
xor
sti
js
std
sub
mov
mov
inc
(bad)
push
cmp
test
cmp
outs
mov
mov
movs
mov
sub
cmc
pop
and
adc
sub
jle
out
adc
mov
adc
hlt
arpl
jnp
int
pop
icebp
test
mov
cmp
add
mov
jo
jl
leave
and
and
(bad)
sbb
or
mov
jae
inc
fisttp
sbb
cli
push
enter
stos
push
sahf
cli
ror
cmp
xor
push
xchg
cs
not
sbb
jl
xchg
dec
add
mov
xchg
fisttp
add
push
sahf
mov
test
mov
jmp
clc
dec
and
test
jo
fisubr
mov
icebp
fld
or
dec
jo
call
(bad)
ficomp
xchg
aam
mov
daa
movd
dec
mov
cmps
add
add
(bad)
pop
int
sub
xchg
popa
(bad)
rcr
xchg
mov
dec
fstp
iret
lea
mov
out
in
cmc
dec
push
data16
push
retf
loope
movs
fxrstor
add
out
pusha
mov
loop
test
dec
out
out
iret
mov
in
out
(bad)
pop
xchg
test
leave
mov
push
sub
pop
jbe
cmp
cs
add
xlat
adc
(bad)
jbe
mov
jmp
rol
xor
pop
sub
xchg
jl
xor
xor
dec
cld
xor
pop
std
(bad)
call
and
sbb
pop
int
mov
loope
inc
inc
mov
inc
fxch
mov
mov
push
cmc
pop
call
xchg
retf
mov
dec
ins
lea
mov
xor
push
mov
pop
adc
inc
out
pop
xor
pop
pop
xor
and
iret
push
out
pop
and
jnp
and
arpl
fidiv
fidiv
xor
mov
sub
cmp
pop
js
test
and
fistp
push
popa
outs
shl
dec
xchg
mov
repz
dec
mov
imul
out
gs
inc
jbe
mov
idiv
(bad)
xchg
jp
addr16
xor
shl
test
mov
and
jecxz
jge
js
mov
push
jg
mov
jo
lods
cmp
lods
popa
adc
inc
add
movs
push
xchg
inc
jb
add
xchg
inc
jp
fadd
dec
xchg
pusha
hlt
imul
emms
cdq
pop
ja
mov
xor
pop
les
jle
adc
sti
push
dec
inc
cld
cmps
pop
sub
into
or
push
pushf
jae
xor
pusha
push
cmp
retf
dec
cwde
cs
adc
in
xor
addr16
shl
adc
lock
adc
inc
mov
dec
dec
pop
retf
mov
cdq
inc
lods
jmp
stos
xchg
xchg
test
xchg
imul
push
outs
fst
push
jb
cld
mov
xor
push
stos
bound
retf
add
jmp
in
(bad)
fild
add
sbb
xchg
add
shr
jmp
hlt
(bad)
in
cmps
js
inc
(bad)
ins
jae
test
cmp
lods
add
cmc
jmp
cli
dec
sub
xchg
dec
adc
in
and
iret
mov
rcl
in
cdq
adc
les
loope
cmps
sbb
jl
outs
(bad)
lds
xor
mov
add
mov
(bad)
in
cli
dec
out
iret
mov
ins
pop
mov
xchg
and
inc
jmp
adc
xor
sbb
sti
push
call
bound
xor
outs
popa
xor
mov
sub
or
test
sub
mov
mov
nop
push
mov
dec
mov
fwait
cmp
nop
(bad)
(bad)
lock
mov
push
movs
imul
sti
mov
popf
adc
stos
push
pushf
push
jge
and
jo
inc
xchg
cld
cmp
pop
adc
ins
mov
out
cld
mov
mov
xchg
cmp
or
dec
test
add
xchg
int3
inc
jmp
in
push
dec
movs
jmp
ja
pop
mov
dec
pop
fstp
push
mov
or
mul
dec
inc
add
push
test
sbb
or
sub
mov
clc
adc
into
cmps
jne
test
and
mov
loopne
jle
jb
les
aam
sub
loop
jbe
add
push
push
(bad)
cli
adc
pop
sar
cmps
int
loopne
xchg
dec
stos
inc
mov
adc
rcl
mov
push
jg
int3
lods
push
call
push
dec
sub
test
or
xchg
hlt
(bad)
mov
jno
xchg
mov
push
ss
pop
inc
rcr
adc
fld
cmps
mov
imul
stos
dec
xchg
loop
jno
cwde
xchg
inc
xchg
push
ins
imul
mov
sub
pushf
and
imul
inc
movs
pop
lods
push
retf
xchg
push
jg
sbb
or
cdq
jecxz
pop
faddp
gs
xchg
outs
and
sahf
push
jo
dec
mov
sbb
mov
bnd
mov
pop
inc
lods
ret
and
loop
fdiv
int3
dec
dec
mov
hlt
in
test
fadd
pop
push
in
sub
jae
xor
sub
(bad)
jne
pop
lods
pop
mov
repz
dec
(bad)
in
sar
retf
out
cmp
xor
push
xor
imul
add
ja
fcmovb
jle
mulps
aad
sti
test
adc
cs
ja
inc
jo
idiv
mov
(bad)
cmp
and
adc
ss
pop
mov
mov
ja
jo
movs
aas
sbb
enter
dec
enter
push
push
push
jp
dec
scas
and
cmp
adc
mov
xchg
not
rol
shl
clc
pusha
(bad)
mov
leave
imul
popa
add
rcr
je
and
addr16
jle
loopne
pop
(bad)
rcl
xchg
lahf
(bad)
(bad)
fs
repz
dec
mov
in
mov
jo
pusha
loopne
enter
icebp
mov
aaa
mov
push
hlt
inc
sti
es
jmp
cdq
int3
pop
movs
pop
inc
es
gs
inc
xor
fcmovnb
cdq
xchg
jg
mov
mov
stc
push
mov
bound
lock
cmp
popf
(bad)
lock
adc
js
sbb
gs
into
lahf
pop
pusha
mov
scas
aad
xlat
ins
mov
pmaddwd
test
mov
shl
popa
(bad)
jbe
je
pop
je
mov
sti
outs
mov
push
out
jb
jns
cld
popa
mov
xchg
cmp
addr16
pop
test
leave
jle
mov
jo
sar
xlat
fldenv
loope
hlt
cmp
inc
std
std
mov
xlat
adc
popf
adc
popf
neg
adc
sbb
push
scas
(bad)
les
xor
or
xchg
jecxz
call
gs
(bad)
(bad)
aam
push
adc
lock
out
rcr
mov
inc
sbb
gs
lods
xchg
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
push
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
sbb
xlat
sbb
addr16
dec
pushf
xchg
lods
cmp
jmp
and
push
enter
jle
sub
xor
adc
cmp
mov
enter
icebp
cld
(bad)
and
mov
fidiv
cs
pop
fst
and
pop
loop
add
mov
ja
rcr
scas
stos
or
mov
push
in
test
mov
cdq
jb
test
mov
mov
or
push
jmp
fcmove
inc
enter
cmp
ror
xchg
sbb
push
adc
and
push
push
push
fs
sbb
or
pop
fsub
mov
retf
sbb
push
sub
mov
xchg
std
bound
idiv
xor
ss
inc
xchg
lea
cld
ins
(bad)
xchg
setnp
call
test
mov
mov
mov
or
out
dec
jbe
or
loop
pop
cs
pop
xchg
pop
ret
sbb
(bad)
sub
sub
jno
push
mov
(bad)
fdivr
inc
push
fcomp
xor
push
int3
dec
iret
mov
dec
cld
xchg
(bad)
jne
dec
scas
out
(bad)
jl
in
xor
imul
sbb
sub
push
sbb
outs
push
cmp
aas
mov
cmp
pop
neg
out
fcomp
cwde
daa
fst
xchg
jb
fidivr
pop
jmp
mov
pop
or
sti
sahf
mov
sbb
add
daa
pop
jo
out
mov
in
mov
ins
jg
frstor
shl
jmp
push
es
clc
popf
inc
test
sub
inc
cmp
loop
sub
test
cli
stos
mov
dec
out
pop
sbb
arpl
test
fld
fmul
arpl
jbe
add
push
pushf
mov
xchg
loope
inc
jmp
leave
jmp
dec
sbb
adc
dec
sbb
xchg
ins
sbb
dec
add
fild
sub
fdiv
dec
fs
into
retf
inc
mov
stos
ds
add
outs
cmp
adc
(bad)
loope
data16
not
jp
loope
pop
lahf
ins
sub
dec
clc
lods
jne
pop
jb
mov
adc
js
pop
and
in
push
pop
nop
xchg
inc
cmp
cmp
retf
xchg
sbb
push
std
xor
out
cwde
push
ins
or
fdivr
outs
push
sub
mov
(bad)
jge
mov
scas
bound
push
push
lods
addr16
cli
jbe
mov
add
xchg
sub
dec
imul
sbb
adc
sub
xchg
sbb
out
clc
frstor
and
inc
sub
mov
jb
pop
lock
and
push
sbb
sub
pop
xlat
sub
stos
imul
xor
inc
jmp
inc
js
sub
aas
mov
pusha
retf
outs
pop
dec
push
imul
pop
sahf
or
(bad)
sbb
sar
repz
xchg
es
bound
ret
mul
or
mov
add
mov
cmps
xor
ror
sub
pop
(bad)
lods
pop
ror
pushf
mov
xor
adc
rcr
cmps
and
jne
adc
fldenv
sbb
jl
mov
stos
aaa
push
mov
cmp
test
popa
mov
ret
inc
push
inc
mov
pushf
fdiv
jb
cmp
sub
je
and
repz
repz
daa
imul
add
lock
sbb
ins
arpl
inc
loop
jb
es
inc
adc
mov
sbb
pop
(bad)
mov
movs
fistp
int3
hlt
shr
shr
(bad)
lods
lock
out
mov
dec
popa
or
lea
jb
and
add
(bad)
daa
jns
xchg
call
aad
cmps
jne
mov
mov
inc
dec
cmp
popf
in
les
lock
(bad)
jne
mov
ins
xor
stc
adc
mov
rcl
pop
test
cmp
pop
inc
and
cmp
xchg
adc
cld
xchg
push
dec
xlat
push
xor
or
adc
pop
scas
cmp
or
stos
out
lock
jnp
sbb
cdq
movs
outs
cdq
dec
xchg
pop
adc
aas
cdq
mov
inc
xchg
sub
pop
mov
pop
cli
int
rcr
scas
(bad)
sub
icebp
imul
and
clc
popf
rcl
ins
push
retf
add
mov
fld
shl
xchg
mov
ja
movs
daa
mov
jnp
cmps
pop
in
adc
push
dec
pop
popf
mov
sbb
xchg
out
daa
inc
mov
mov
or
inc
jl
out
arpl
test
out
jbe
rcr
cwde
or
inc
dec
pushf
inc
jnp
fld
or
les
sbb
fbld
fisttp
and
add
ins
pop
retf
arpl
jmp
push
and
sub
sar
mov
stos
addr16
push
and
sub
sar
out
mov
pop
es
push
jle
shl
inc
repnz
neg
mov
jmp
push
lds
(bad)
sti
pop
xor
mov
jmp
lds
mov
mov
fiadd
dec
mov
pop
movs
mov
mov
data16
dec
call
jmp
jae
stos
lahf
std
addr16
sub
sub
ret
popa
and
dec
jmp
dec
sbb
or
or
sbb
(bad)
jmp
dec
cmp
mov
mov
adc
dec
int
dec
xor
imul
dec
ins
mov
cld
jns
mov
add
stos
dec
pop
dec
mov
xor
push
mov
imul
icebp
jl
loopne
repnz
inc
adc
js
xlat
xchg
sahf
cmps
jle
fld
daa
pushf
xor
mov
mov
scas
and
jne
cmp
xor
adc
(bad)
in
(bad)
fnstenv
jmp
mov
fcomp
mov
push
add
sbb
jle
aam
push
jne
popa
jnp
ss
pop
mov
xor
aam
mov
sbb
jae
dec
cdq
mov
iret
jp
push
push
dec
std
fadd
jns
cmp
gs
lock
and
add
mov
daa
stos
loope
jnp
call
and
mov
in
dec
mov
out
loop
lock
pushf
jle
mov
mov
mov
int3
stc
fild
fsub
repnz
cmc
jge
mov
sbb
outs
inc
fistp
push
pop
pop
pop
retf
stc
test
push
(bad)
xchg
or
loopne
jne
xor
test
jmp
aad
cli
scas
adc
in
dec
mov
aam
adc
dec
out
in
push
aad
xor
lea
jb
pop
dec
sub
xchg
inc
and
push
mov
jle
in
scas
pusha
lock
daa
xchg
mov
cmp
inc
iret
ss
jmp
dec
push
repnz
add
jge
push
lahf
xor
dec
push
mov
lahf
sahf
fcmovb
jb
inc
leave
(bad)
cmp
ficomp
retf
loope
sbb
jo
in
adc
inc
pop
(bad)
loopne
and
xchg
psubw
jge
fimul
jmp
cmp
and
sub
dec
adc
repz
mov
cmp
nop
xchg
std
mov
add
popf
jne
scas
ins
push
test
and
fld
cs
bound
imul
test
in
pop
lds
push
push
xchg
inc
mov
jecxz
loopne
mov
nop
call
mov
cmp
sahf
mov
xor
cmp
lds
into
fidivr
jge
sti
xlat
icebp
mov
and
add
cmp
pop
movs
mov
movs
cmc
jl
dec
mov
push
push
int3
fidivr
fisub
gs
cli
dec
jmp
or
stos
nop
xor
ret
pop
paddsb
outs
jmp
inc
loop
pushf
pop
popf
stos
jns
mov
mov
(bad)
(bad)
repnz
cmp
jg
cdq
mov
repnz
push
daa
jle
jnp
popa
sub
adc
mov
es
dec
lahf
xchg
jo
lods
(bad)
cmp
ss
mov
inc
out
fidiv
mov
or
lds
mov
out
in
bound
cmp
dec
hlt
jb
in
pop
ss
and
ds
adc
aad
mov
imul
sbb
push
bnd
aaa
or
jmp
pop
inc
sbb
fdivp
popf
jno
sub
(bad)
cli
je
or
test
stc
lds
in
retf
mov
fs
fs
dec
shl
sub
sbb
adc
stos
es
into
mov
mov
dec
and
test
and
jecxz
mov
shl
cmp
ja
fisttp
sahf
cld
jmp
shl
mov
int
inc
fbld
fldenv
cmc
in
bswap
mov
xchg
fs
lods
mov
cmp
sub
cwde
cmp
mov
sti
xchg
adc
jmp
xchg
pop
test
clc
mov
pop
sbb
leave
cmp
movs
mov
cmp
arpl
std
rcl
or
stos
inc
inc
jbe
and
adc
mov
xor
mov
dec
sti
dec
or
pop
jne
test
lds
and
pop
sbb
sub
popf
xchg
xor
adc
fdivr
fcmove
addr16
mov
sbb
mov
cmp
enter
movs
sbb
xchg
xor
loope
je
pop
jb
popf
ja
je
or
dec
mov
adc
xor
in
scas
lock
int3
mov
fdiv
aad
push
sub
mov
sbb
and
or
pushf
cdq
inc
sub
dec
ficom
test
fbstp
mov
inc
je
iret
movs
adc
mov
pushf
aam
shl
mov
(bad)
out
cld
dec
sub
and
les
sbb
inc
daa
pop
out
push
jae
leave
mov
push
adc
jge
int
mov
xchg
into
jns
enter
dec
iret
stos
push
in
and
add
pop
pop
inc
cmp
lahf
pop
sub
ret
pop
push
repz
and
fadd
cmp
test
std
popa
xor
ds
out
(bad)
sahf
loopne
adc
les
sbb
push
(bad)
sub
jno
xor
in
push
adc
sbb
sbb
inc
xchg
push
outs
cmp
mov
add
into
rcr
push
mov
dec
push
adc
addr16
aam
repnz
leave
pop
gs
inc
sti
ja
popf
icebp
mov
lea
outs
outs
mov
push
pop
mov
jne
ja
cmp
fistp
stc
dec
aaa
adc
(bad)
nop
mov
push
in
dec
xor
popf
cmp
in
inc
out
cli
cmps
cdq
sbb
cmp
fbld
mov
shr
imul
fucomi
jnp
mov
sub
out
repnz
int
dec
cmp
out
or
pop
mov
hlt
ss
mov
lea
cwde
pop
repz
add
stos
test
inc
nop
inc
ror
ffreep
mov
push
dec
cmp
retf
cmp
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
and
lea
add
dec
and
cmp
loope
ret
out
fxch
mov
and
xchg
mov
xchg
mov
xor
ja
jmp
clc
(bad)
adc
pop
jnp
test
add
jmp
and
aaa
mov
mov
mov
stos
push
xchg
xor
cwde
fbld
sbb
scas
or
fldcw
adc
ins
mov
xchg
in
sbb
dec
scas
mov
les
clc
dec
test
lods
mov
xchg
jno
stc
ja
add
call
xlat
jo
xchg
and
add
jp
adc
push
mov
ja
rcr
mov
(bad)
and
sub
ret
jp
jno
cmp
call
(bad)
jg
adc
rcr
lea
xchg
and
scas
jmp
inc
fs
push
cmps
add
(bad)
cmp
dec
test
adc
std
test
test
lss
loop
cmps
xchg
pop
rcr
(bad)
sahf
test
push
push
push
cmps
xor
aaa
gs
int3
sub
fdiv
fild
and
xor
mov
js
popf
inc
hlt
test
sbb
jno
push
adc
vmovapd
in
jo
leave
loope
sbb
mov
push
int3
add
loop
aaa
rol
stos
mov
jne
int3
cli
xor
stos
pop
fadd
test
shl
push
fbstp
dec
popa
jp
scas
lods
and
xchg
add
mov
hlt
or
addr16
fstp
mov
and
das
jg
mov
loop
dec
jns
push
sub
or
ja
test
adc
or
cwde
les
sbb
mov
mov
jnp
rol
mov
test
inc
retf
das
pop
retf
int
outs
jmp
cmp
inc
stos
test
stos
fwait
outs
ds
call
retf
aaa
mov
imul
sub
fnstsw
mov
(bad)
pop
or
and
lds
dec
outs
dec
push
dec
or
push
mov
jnp
shl
xlat
movs
cli
adc
(bad)
(bad)
ror
sbb
adc
push
jns
rcr
ins
sub
in
mov
fdiv
shr
bsf
(bad)
call
imul
mov
push
and
movs
dec
xchg
push
inc
xchg
shl
inc
jne
mov
and
cli
mov
sar
jne
ins
inc
xchg
sub
call
setp
mov
in
sti
jno
push
sbb
inc
imul
add
sub
and
cvtdq2ps
adc
sub
cld
sbb
ret
push
clc
outs
(bad)
mov
test
push
sbb
mov
sbb
gs
fsubr
pop
mov
mov
adc
(bad)
cmps
xchg
jg
clc
dec
xor
push
jns
popf
cmp
inc
xchg
inc
jl
shl
mov
dec
inc
mov
xor
sbb
arpl
jne
sub
inc
jg
ror
addr16
xchg
sti
mov
jl
sbb
mov
and
push
test
es
sahf
mov
jne
rcr
jg
add
mov
ja
fmul
jno
leave
cdq
xor
es
loopne
dec
mov
pop
popa
jae
dec
add
sahf
inc
jp
and
mov
inc
push
mov
fwait
sbb
out
(bad)
fcom
scas
cmp
lds
es
jo
or
mov
dec
jecxz
jnp
movs
les
test
mov
retf
bound
xor
iret
scas
std
bnd
inc
jmp
and
stos
arpl
fild
int
mov
std
into
jo
out
mov
jns
in
pop
push
push
or
mov
mov
xor
xor
aas
(bad)
cmps
mov
xchg
pop
push
repz
add
ret
test
jge
xchg
es
test
push
lahf
aad
pop
pop
ss
dec
jb
add
sbb
add
adc
jmp
icebp
xor
push
repz
jle
xchg
mov
cmp
test
pop
fwait
push
xor
push
lock
push
cmc
pushf
xchg
ins
push
in
mov
ins
mov
in
xor
(bad)
pushf
aam
fstp
ins
pop
cmc
sti
sar
(bad)
loop
push
xchg
sbb
xor
(bad)
test
test
xchg
and
pop
daa
arpl
retf
and
into
xchg
test
ret
cmp
xchg
movs
jae
retf
jmp
hlt
sub
add
inc
sbb
xchg
fbstp
dec
jne
push
test
jp
mov
std
jge
movs
jg
test
es
cdq
retf
xchg
rcl
mov
inc
adc
sti
popa
mov
xor
out
cs
idiv
jmp
pop
stc
inc
mov
imul
dec
stos
pop
mov
pop
xchg
mov
sbb
mov
jno
adc
adc
jmp
nop
div
pop
inc
and
hlt
inc
sahf
mov
mov
dec
popf
sub
mov
cmp
rol
int3
fwait
pop
xchg
xor
loopne
add
int3
scas
cwde
repnz
fwait
mov
icebp
mov
jge
pop
in
jge
and
dec
mov
addr16
stos
dec
xchg
inc
test
ds
sub
dec
jne
shr
fisubr
xor
pop
mov
test
mov
out
aam
popf
pop
cld
nop
jae
mov
cmc
outs
and
mov
inc
bound
outs
in
(bad)
test
pop
adc
retf
pop
push
es
xchg
fnstcw
pop
mov
inc
sti
data16
mov
sahf
inc
popa
(bad)
xlat
jmp
sub
xchg
pop
mov
dec
ins
push
scas
in
js
pop
and
pusha
dec
or
data16
xchg
adc
dec
call
jle
es
and
and
ins
jmp
mov
cmps
retf
pushf
jmp
test
xor
mov
pop
clc
lods
mov
imul
fadd
lds
sub
xchg
bnd
mov
aam
ins
adc
pusha
mov
je
or
or
inc
sbb
fs
ret
jmp
fldenv
xchg
or
mov
mov
repnz
repnz
or
mov
gs
repnz
stos
out
xor
ret
repz
mov
push
out
xor
push
cmp
(bad)
enter
repz
mov
pop
and
ja
scas
mov
mov
sub
cmp
std
cmp
adc
fdivr
ja
rcr
sbb
dec
push
icebp
lea
outs
gs
jecxz
shl
or
or
cs
or
call
inc
loop
dec
call
xchg
sub
outs
pop
pop
aam
push
mov
sub
aas
pushf
and
mov
inc
mov
mov
and
sahf
sub
nop
inc
or
test
pop
cmp
popa
mov
xchg
or
xor
push
test
out
(bad)
jmp
les
inc
call
adc
push
rcr
ret
or
and
pop
sbb
outs
adc
(bad)
cs
dec
sbb
or
pop
jmp
push
lahf
dec
mov
imul
or
or
fs
shr
cmps
dec
mov
aas
sbb
je
xchg
out
retf
mov
xchg
lahf
dec
pop
jb
idiv
les
out
fsubrp
test
xchg
imul
pushf
xor
and
daa
inc
ins
or
aas
cmp
iret
enter
pop
out
mov
retf
mov
lahf
push
in
mov
inc
cld
lahf
ins
lahf
js
int3
fdivr
mov
es
popf
pop
shl
xchg
xchg
shl
xchg
push
and
jmp
mov
xor
pop
xchg
mov
ret
jo
fwait
int
jle
arpl
stos
fsub
es
push
mov
dec
(bad)
call
jg
stos
ret
dec
mov
rcl
outs
dec
call
test
fadd
sub
adc
outs
inc
or
mov
sub
xchg
pop
popa
ins
out
inc
out
add
cmc
out
and
cmp
mov
lods
jmp
rcr
xchg
sbb
dec
cmp
mov
cmp
imul
mov
mov
arpl
dec
nop
inc
xchg
fwait
and
pop
sbb
cdq
mov
ins
lods
push
add
retf
sbb
leave
in
stos
or
add
(bad)
pop
sub
cmp
pavgb
xor
lods
xchg
scas
mov
mov
push
jae
lods
(bad)
dec
or
add
(bad)
sub
dec
cs
adc
fs
xchg
shr
pop
test
or
sub
cmp
xlat
cmp
and
cmp
daa
not
(bad)
(bad)
int3
mov
stc
xor
inc
push
mul
mov
(bad)
jb
loopne
and
lods
test
movs
(bad)
into
test
xchg
mov
pop
sub
in
(bad)
int3
fld
pop
push
movs
nop
ret
inc
repnz
dec
out
inc
xchg
mov
add
sub
(bad)
pop
push
xchg
lods
dec
pop
leave
stos
(bad)
mov
and
jmp
add
(bad)
ret
fdiv
call
jle
(bad)
icebp
addr16
ins
push
mov
stc
and
ds
loopne
push
scas
ja
cmps
(bad)
call
pop
and
adc
cmp
push
jnp
cs
pop
add
test
scas
les
les
mov
push
or
pop
or
(bad)
fs
xchg
and
ret
(bad)
mov
xchg
sub
leave
mov
outs
push
out
sub
sti
xor
sbb
lea
cs
mov
sub
sbb
popf
mov
push
push
pop
aam
dec
sti
adc
cmp
call
pushf
ins
outs
sbb
add
test
push
addr16
jge
sub
dec
sbb
jmp
test
xchg
imul
mov
sub
js
addr16
jnp
dec
fidiv
xchg
aas
pop
push
and
popf
add
sub
loope
scas
inc
pop
out
add
pop
je
add
test
inc
xor
addr16
nop
sar
mov
ss
les
add
xchg
jecxz
in
adc
mov
push
jmp
lahf
sbb
pusha
and
(bad)
(bad)
imul
out
xchg
and
cs
sahf
cmp
ficomp
inc
loop
xor
sbb
cmp
cmps
imul
pushf
iret
add
pop
mov
jns
sub
push
xchg
and
fst
fwait
xchg
pop
adc
mov
call
mov
and
dec
(bad)
test
enter
and
ror
or
mov
xchg
xchg
aas
pop
and
mov
sbb
loope
pop
fcomp
dec
cmps
ds
and
ror
repnz
sar
stos
scas
ss
push
sub
test
pop
fnsave
cdq
fistp
(bad)
aas
and
sbb
inc
xchg
movs
jl
cmp
sub
cmp
ins
div
sub
ss
or
push
dec
ret
(bad)
mov
movs
add
and
mov
scas
daa
push
and
push
cld
sbb
push
cld
pminub
(bad)
out
test
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
cmp
and
xchg
and
pushf
dec
and
gs
xor
push
neg
pushf
(bad)
dec
neg
daa
sti
in
xchg
push
idiv
int3
jl
(bad)
rep
lahf
xchg
lock
cmp
rol
loop
lods
(bad)
cli
loope
dec
pop
and
or
adc
test
fwait
sbb
adc
xlat
cli
jo
test
adc
adc
shl
lds
iret
lods
jmp
(bad)
mov
jle
stos
push
and
pusha
ror
xchg
hlt
ret
add
(bad)
jmp
inc
xchg
mov
dec
and
mov
enter
test
out
adc
add
inc
outs
shl
scas
xor
and
repnz
ror
jo
sub
mov
push
jnp
push
loop
jl
pop
mov
lods
stos
push
mov
daa
add
call
int3
pop
mov
scas
sbb
imul
mov
imul
add
pop
push
test
or
sub
imul
lods
adc
ins
dec
add
mov
lods
fucomip
or
add
idiv
imul
fnstcw
int
ja
(bad)
mov
cli
inc
xchg
sbb
imul
mov
xchg
rol
out
mov
and
dec
inc
ins
adc
and
mov
lea
cmp
fdiv
test
inc
cmp
xchg
test
dec
adc
cmp
jecxz
cdq
je
stc
ja
iret
div
in
push
dec
int
mov
retf
jns
jbe
pop
jno
jb
sbb
stos
pusha
cmps
dec
pop
cmc
pop
pop
retf
jnp
mov
dec
xchg
aam
mov
ret
scas
test
movs
push
inc
sbb
sub
pop
push
cmps
mov
leave
inc
cmp
fsubp
fdivr
push
and
xchg
dec
ja
dec
retf
repnz
adc
imul
or
jbe
fidiv
xor
add
outs
addr16
dec
jae
sub
xchg
push
mov
out
jp
xchg
pop
pop
xor
test
adc
xchg
xchg
xor
mov
push
jno
dec
dec
std
leave
mov
pop
lock
mov
mov
xchg
or
push
mov
push
and
test
mov
neg
dec
mov
sar
sub
mov
imul
lock
jns
mov
xor
pop
out
mov
bound
inc
mov
aad
into
push
mov
fisub
push
mov
xlat
mul
push
cmp
push
sahf
xor
loop
or
add
out
int3
adc
push
and
scas
xchg
lock
lea
enter
int3
xchg
push
mov
arpl
lods
push
xor
jno
data16
imul
inc
inc
mov
xchg
dec
xchg
test
mov
ret
dec
lea
push
mov
mov
push
and
fs
xor
jmp
ss
fist
push
fmul
ins
cmc
adc
mov
jbe
mov
jmp
pusha
inc
pop
retf
test
jle
mov
pop
scas
and
jno
mul
or
js
mov
mov
mov
es
pop
movs
mov
or
cmp
scas
mov
in
outs
enter
xor
fucomp
in
push
enter
lahf
clc
xchg
pop
inc
xor
ins
mov
je
xchg
add
add
sub
pop
ds
dec
and
shl
and
jmp
jae
fist
mov
retf
sbb
call
sub
sub
out
je
inc
xor
xor
jp
jg
pop
aad
movs
and
scas
call
xchg
icebp
test
rcl
mov
outs
jg
add
adc
jge
gs
push
js
jecxz
lahf
test
and
dec
sub
sub
xchg
pop
cmp
je
mov
cmp
ret
add
adc
xor
clc
adc
and
popa
or
loope
je
es
je
loop
outs
mov
sbb
inc
in
xor
mov
sbb
sbb
jg
mov
popa
and
(bad)
cmp
out
xor
sar
jmp
jb
dec
repz
popa
pop
push
jecxz
sub
(bad)
and
push
mov
inc
(bad)
sti
popa
mov
add
nop
or
jmp
sahf
mov
out
std
jo
xor
jp
fstp
xchg
cdq
cmps
jle
rcl
mov
js
popf
dec
lods
jno
int3
in
inc
dec
fisubr
cld
xor
aam
and
bound
jo
inc
xchg
push
pop
adc
jns
jns
cli
inc
inc
mov
hlt
xchg
fcom
sub
dec
cmps
sbb
sbb
mov
and
je
jle
and
xlat
mov
leave
(bad)
pop
pushf
sub
mov
sbb
aam
fldlg2
push
jmp
adc
dec
bnd
mov
popf
jle
test
imul
sbb
or
js
inc
mov
and
push
inc
cmps
adc
cli
mov
sahf
lods
jmp
nop
push
inc
imul
push
sbb
ds
fsubp
add
or
hlt
imul
cmc
test
mov
cmp
loopne
pop
icebp
lock
and
xor
jle
clc
fidiv
fs
int3
or
iret
pusha
jecxz
dec
xchg
cld
and
sbb
inc
mov
xchg
pop
out
outs
or
xchg
mov
mov
stos
inc
fwait
xchg
cdq
ja
popa
jle
sbb
not
mov
pusha
mov
mov
in
sub
daa
call
cmp
clc
movd
xor
mov
push
add
dec
icebp
data16
sub
es
scas
cmc
lea
mov
repnz
dec
or
push
xchg
out
imul
inc
push
sub
xchg
cmp
imul
pop
fimul
not
fild
loop
pop
ja
dec
or
sub
push
add
dec
xchg
sub
push
mov
push
mov
sub
inc
jecxz
inc
icebp
adc
cmove
mov
pop
push
cwde
mov
jns
mov
(bad)
arpl
mov
aad
push
mov
mov
ds
adc
xor
fbstp
ja
mov
retf
mov
sti
xor
fst
les
bound
inc
jmp
icebp
xor
xor
cwde
addr16
adc
movs
aam
dec
fidivr
test
cmc
(bad)
xor
aas
test
clc
ins
adc
enter
scas
jmp
jno
sub
dec
repz
int
pop
push
push
lock
or
pushf
aad
cs
int3
dec
push
sbb
mov
fisub
mov
repnz
mov
daa
jo
push
or
nop
jmp
jbe
inc
sbb
sub
xchg
lea
in
mov
pushf
jg
ror
jmp
ins
sbb
cmps
push
aaa
dec
aaa
and
pop
cdq
push
or
(bad)
cmp
add
inc
fstp
and
cmp
jbe
add
jl
outs
test
sub
repnz
mov
push
mov
pop
sahf
repz
cmp
aaa
pop
aaa
std
cmps
mov
and
push
push
stc
ficomp
mov
btr
or
sar
call
int3
call
mov
push
mov
sub
pop
inc
popf
mov
js
dec
cmp
push
rcr
adc
sbb
aaa
cmc
cs
in
jp
aas
jg
loop
sbb
sti
pushf
pop
add
lea
jle
cmp
add
movs
fdiv
addr16
loop
inc
in
mov
(bad)
mov
mov
push
popf
pop
xchg
dec
cmp
(bad)
xchg
add
dec
inc
and
inc
sub
inc
and
push
cmp
push
pop
mov
sub
add
pop
sbb
mov
mov
mov
push
pop
or
movs
(bad)
hlt
jg
retf
push
ins
adc
in
jl
and
fcomp
aaa
mov
dec
int
fistp
loope
clc
clc
in
popf
mov
mov
shr
fstp
shl
(bad)
cmp
jge
ins
sahf
(bad)
out
and
and
jg
mov
out
jae
inc
dec
into
mov
sub
mov
pop
xchg
push
dec
jmp
push
push
pop
pop
ds
mov
mov
ss
fimul
mov
fidivr
pop
sub
lahf
icebp
mov
imul
xchg
mov
xchg
sbb
lods
pop
mov
repnz
(bad)
gs
mov
retf
mov
loopne
repz
pop
movs
mov
ins
inc
ror
or
(bad)
addr16
shl
out
shl
pusha
push
call
push
inc
sbb
daa
jmp
xor
movs
jae
ret
sbb
dec
adc
jne
das
sub
jo
jmp
sahf
xlat
mov
arpl
cmp
mov
ja
cmp
scas
test
or
js
sub
sbb
adc
or
neg
inc
dec
xchg
lods
cs
loopne
je
pop
xchg
mov
push
add
ret
rol
in
iret
mov
and
aas
push
test
icebp
inc
enter
aam
out
or
loopne
add
jmp
or
jbe
shr
test
pop
add
(bad)
sti
and
mov
in
adc
daa
and
dec
cmp
xchg
adc
ss
retf
shl
push
cmp
je
fld
pop
mov
pop
inc
sahf
xor
or
cmp
inc
inc
aas
pop
xchg
inc
xchg
das
jne
std
sbb
or
popf
(bad)
mov
pop
loopne
pop
jb
psubsw
adc
lahf
push
daa
dec
pop
pop
or
pusha
pop
and
mov
push
iret
in
adc
popf
mov
rol
(bad)
fdiv
out
imul
(bad)
fsub
movs
or
movs
bound
mov
xor
lock
and
add
inc
shr
bound
int
icebp
mov
cmp
popf
aad
mov
fs
mov
xchg
rcr
or
stos
test
mov
aas
and
pop
adc
fild
jo
and
shl
cmc
sahf
in
(bad)
push
arpl
jnp
adc
mov
div
push
xor
dec
lods
mov
addr16
jge
and
fisub
push
loop
(bad)
enter
loop
add
cli
inc
pop
jne
cmp
loope
test
fiadd
xor
fld
in
push
pop
lahf
jge
mov
mov
mov
in
nop
mov
fisub
in
test
jmp
out
xlat
enter
repz
mov
push
aas
mov
mov
sub
aad
loop
cs
dec
jl
sbb
dec
add
std
or
xchg
std
jne
mov
pop
sbb
pop
leave
cwde
push
sbb
fadd
shl
pop
jg
xor
xor
add
fbstp
sar
into
and
mov
cmp
adc
scas
stos
xchg
mov
mov
popf
lds
pusha
jle
inc
fidivr
xor
aad
lea
add
loopne
jg
inc
dec
lock
cld
ucomiss
das
in
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
inc
xchg
lea
add
pop
sbb
fnsave
xor
xchg
push
sub
adc
jmp
sub
into
dec
ja
add
jae
out
iret
and
inc
sub
in
retf
rcl
xor
hlt
dec
mov
xchg
dec
ret
imul
test
ins
sbb
cmp
xchg
and
(bad)
cld
pop
inc
out
push
push
rol
movs
or
jl
lahf
mov
fstp
sbb
cmc
and
scas
lahf
jg
jns
ds
pop
enter
xchg
jo
aad
ss
clc
xchg
in
fidivr
mov
push
sti
int
ds
pop
cwde
jne
xor
sub
sti
ss
inc
gs
mov
in
jb
lods
xor
add
outs
sbb
mov
mov
bound
and
mov
cmp
pop
or
sbb
push
mov
jno
ret
(bad)
xchg
push
ss
mov
bound
adc
push
cld
scas
(bad)
pop
call
shl
das
cmp
mov
cmp
xchg
and
cmc
out
leave
mov
call
les
inc
enter
inc
jne
int3
jle
bound
mov
mov
pop
popa
dec
clc
fwait
jmp
lahf
add
in
sbb
push
cmp
lods
xchg
daa
xor
scas
mov
(bad)
fisub
sub
retf
push
jmp
add
es
ss
mov
jecxz
push
xchg
jmp
dec
daa
out
push
addr16
shr
mov
(bad)
in
xor
jns
adc
xor
enter
mov
test
leave
mov
or
mov
fdivr
fistp
pop
stc
fdiv
cmps
dec
cmp
fcmove
leave
fwait
pop
mov
jl
sbb
push
ret
rol
push
jge
push
mov
scas
pop
mov
lods
pushf
lods
sub
sti
mov
sub
mov
mov
pop
and
out
out
fld
xchg
fneni(8087
push
push
xchg
fbstp
jb
std
push
mov
add
xor
cmp
mov
mov
popa
fsubr
ret
adc
xchg
adc
xchg
loop
jnp
shl
fnstcw
xchg
add
retf
jmp
ins
cld
fsubr
(bad)
sub
xor
lahf
push
xchg
fbld
stos
inc
std
push
xchg
mov
cmp
fs
mov
mov
adc
and
pushf
push
push
loopne
imul
shr
cwde
das
out
mov
adc
fs
xchg
push
xor
mov
push
popf
mov
sub
jecxz
pop
(bad)
mov
rcr
ds
lea
mov
(bad)
imul
sbb
sub
mov
test
leave
(bad)
adc
bound
pop
pop
icebp
sbb
mov
cmps
jno
les
jo
fs
cmp
mov
dec
pop
test
inc
inc
aaa
fcomp
add
mov
ucomiss
and
adc
xor
(bad)
push
xchg
mov
bound
xor
xlat
sbb
mov
or
jnp
adc
adc
or
in
mov
cld
sub
mul
push
test
cmps
or
or
iret
retf
icebp
test
ret
test
xor
mov
xor
outs
xchg
sar
repz
mov
sbb
sub
leave
sub
sahf
and
inc
xchg
int
ins
ss
es
(bad)
pusha
ret
rcr
sub
cmp
dec
jmp
or
or
aaa
lods
jmp
push
iret
jle
daa
popf
mov
lds
popf
xchg
mov
outs
or
jle
pop
fidiv
or
cld
dec
lahf
ins
push
call
and
jle
int3
cmps
aam
sub
sub
stos
pusha
stos
add
cmp
fsubr
or
mov
ja
stos
sub
ins
sub
push
int
dec
int
sbb
mov
loope
add
scas
retf
lea
stos
sahf
stos
jp
or
sti
jne
mov
lods
mov
mov
jne
jo
or
in
jb
mov
imul
inc
pop
in
sub
jb
xor
and
rcr
mov
shl
push
daa
fwait
push
sub
xor
loopne
imul
mov
sub
sbb
or
adc
dec
lods
and
cdq
sar
mov
rcr
push
stc
into
xchg
pop
js
xchg
gs
cmps
out
push
jecxz
xor
mov
mov
jecxz
inc
das
or
mov
jo
imul
sub
xor
xor
and
xchg
(bad)
and
ja
movs
adc
or
leave
std
cdq
daa
das
lahf
cmp
dec
popa
push
cmp
ror
stos
sub
push
inc
inc
lds
ret
add
sbb
and
ret
jnp
jmp
pop
cmp
fcmovnu
mov
test
enter
jmp
iret
push
mov
leave
xlat
lods
fmul
rep
lods
mov
test
pushf
ins
jle
jmp
mov
pop
mov
lar
das
sub
lds
cmp
ds
mov
cmp
xchg
mov
and
dec
sub
int3
out
scas
mov
dec
movs
pop
(bad)
jb
aam
nop
retf
xor
inc
iret
test
add
imul
in
and
xchg
ins
or
(bad)
shr
mov
push
ins
jle
pop
shl
adc
fs
in
inc
pusha
leave
or
push
sub
push
mov
push
sbb
push
dec
mov
out
ror
imul
xchg
dec
jecxz
cmc
xchg
retf
pop
jae
mov
adc
lds
cli
push
ja
cmp
add
pop
arpl
dec
and
repz
test
xchg
mov
mov
pop
addr16
mov
xchg
xor
test
cli
in
stos
fidivr
popa
imul
std
jmp
aaa
xor
inc
dec
mov
mov
sbb
stos
call
pop
cmp
xor
retf
loop
daa
add
lock
xor
mov
mov
mov
jp
lahf
sbb
pop
adc
dec
jge
cwde
and
ins
push
imul
jnp
sahf
cmp
arpl
int
fimul
xor
mov
movs
imul
inc
ret
xor
mov
lods
add
xor
sub
shl
fsubr
add
fwait
xchg
push
ja
loopne
imul
(bad)
ins
lea
push
mov
lods
dec
cwde
fist
mov
jo
in
push
jl
(bad)
(bad)
fadd
iret
xchg
popa
xor
(bad)
and
unpcklps
cmc
jno
arpl
push
cmps
and
lods
imul
mov
inc
push
sub
cmp
repz
rol
lods
and
mov
in
sub
mov
jp
int3
jns
movs
adc
mov
std
cli
pop
push
cmp
push
inc
fdiv
jns
inc
mov
xor
fdiv
fs
dec
(bad)
mov
(bad)
add
jb
adc
jl
loope
mov
add
dec
(bad)
adc
popf
add
jmp
mov
mov
movs
pop
std
out
dec
clc
das
mov
arpl
sbb
mov
sti
fist
dec
(bad)
out
and
mov
imul
test
aam
or
push
inc
inc
sbb
jo
sub
scas
retf
mov
push
jno
scas
pop
je
dec
push
pop
fdivr
jg
add
inc
ficomp
ja
add
daa
adc
push
out
ror
jno
bound
je
ret
sbb
lahf
push
shr
stos
mov
xor
jns
stos
fist
jl
sahf
out
aaa
shl
sbb
inc
push
adc
xor
mov
adc
xchg
xor
jo
sbb
xor
sahf
push
sahf
inc
rol
scas
and
sbb
std
push
into
in
or
xor
mov
icebp
dec
push
cmp
pop
sub
mov
adc
loope
repz
jecxz
mov
(bad)
loop
daa
mov
mov
mov
ret
ror
ret
xchg
sbb
les
dec
sbb
push
movd
cmps
xor
or
jbe
sysret
in
hlt
sub
ins
jno
xchg
push
sbb
sahf
lock
je
into
jns
ins
add
cld
lds
js
ret
std
imul
cdq
mov
hlt
and
push
ins
mov
jg
jg
dec
sub
pop
xchg
imul
fmul
jmp
fwait
(bad)
mov
lods
cmp
mov
movs
jmp
mov
popa
jmp
mov
cs
fisttp
dec
das
and
xchg
inc
mov
jl
ret
mov
add
adc
(bad)
sbb
fisub
cmps
add
dec
pop
pop
ret
xor
fst
or
(bad)
lods
fdiv
loopne
int3
stos
test
mov
wbinvd
inc
mov
dec
sbb
adc
or
adc
pop
loope
scas
test
inc
jns
call
test
jno
in
adc
clc
inc
or
sub
xor
cmp
jl
js
sub
int3
jbe
out
adc
push
add
out
scas
xor
inc
push
aas
nop
ja
or
out
fistp
inc
fcom
push
enter
test
mov
dec
ret
stc
jbe
int
(bad)
xchg
push
(bad)
leave
leave
imul
aaa
adc
or
mov
push
loope
mov
rcr
mov
xchg
xor
aas
xchg
mov
dec
pop
xchg
ret
mov
in
inc
fistp
gs
movs
sbb
pop
xor
mov
repnz
fwait
mov
xchg
addr16
adc
popf
jo
imul
push
test
push
shl
xor
mov
dec
add
sti
sbb
push
mov
test
mov
jmp
xchg
xchg
pop
retf
mul
sti
or
ficomp
mov
xchg
cmp
and
mov
scas
pop
icebp
pop
mov
inc
fisub
pop
test
mov
pop
out
mov
in
test
xchg
int3
pop
mov
push
loope
mov
xor
imul
push
adc
out
dec
push
(bad)
arpl
and
pop
or
dec
int3
add
pop
cld
mov
xchg
cwde
sub
mov
call
inc
inc
add
mov
(bad)
popa
push
xchg
xchg
and
jne
inc
stos
call
pop
jns
jbe
dec
pop
xchg
inc
add
adc
jle
mov
sub
mov
les
ins
jl
ja
push
shl
loop
cwde
daa
adc
aad
addr16
mov
jecxz
or
dec
loope
int
stc
xchg
(bad)
popa
ja
mov
scas
pop
shl
jge
and
ss
adc
jle
xlat
jbe
dec
bound
jae
popa
sub
je
fwait
icebp
jb
inc
add
push
push
cmp
mov
pop
scas
neg
xchg
arpl
sbb
ss
retf
push
add
rol
aas
inc
dec
lock
loopne
sbb
pop
pushf
imul
jmp
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
push
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
lods
and
outs
adc
mov
xchg
fs
fsubr
clc
test
popf
push
fsincos
enter
out
enter
daa
push
into
in
mov
cdq
or
iret
mov
in
repz
add
dec
in
aaa
loopne
shl
cmps
fidivr
dec
lahf
mov
push
test
ret
mov
mov
dec
mov
call
pop
out
nop
jo
punpckhbw
(bad)
ror
or
mov
mov
jmp
(bad)
cmp
test
inc
inc
stc
pop
xor
cwde
pusha
push
or
jge
push
(bad)
out
and
sub
stos
mov
sahf
jo
push
add
iret
icebp
or
sbb
jmp
dec
fadd
xor
(bad)
shr
mov
loop
pmullw
das
repz
pop
mov
jnp
out
pop
jbe
neg
sub
mov
cwde
xchg
adc
or
cmps
outs
sbb
xchg
aad
ss
mov
int
cwde
scas
sub
sbb
mov
push
daa
pop
lea
cld
bound
call
mov
inc
aam
pushf
adc
out
jecxz
push
xchg
mov
(bad)
aam
cmc
sti
ds
test
adc
xchg
clc
sub
pushf
xchg
mov
in
gs
pop
dec
or
push
push
sbb
jmp
jmp
push
and
imul
cmp
dec
lea
arpl
push
loop
repz
adc
push
cdq
mov
mov
mov
and
inc
pop
imul
pop
xchg
push
mov
mov
sub
dec
mov
gs
xor
jbe
mov
ins
xchg
lds
xor
xor
sub
imul
pop
lock
mov
lods
call
and
in
add
imul
in
std
adc
push
push
lds
popf
lea
repnz
push
mov
push
mov
cld
cmps
imul
mov
inc
mov
icebp
aad
sbb
xor
xor
xchg
fwait
nop
push
movs
push
ffreep
sub
and
mov
inc
test
mov
dec
push
xor
(bad)
(bad)
lea
jnp
cmp
popf
mov
push
add
nop
loope
adc
mov
popf
mov
push
mov
cdq
daa
inc
in
sbb
jmp
movs
inc
gs
push
gs
addr16
scas
enter
jecxz
xchg
push
sbb
not
push
aad
pop
xlat
xchg
stos
ds
outs
(bad)
cmp
pop
idiv
dec
pushf
jmp
stos
ficom
or
cdq
addr16
jg
mov
jno
les
jg
mov
movs
xor
and
(bad)
cli
ret
fs
add
or
ins
push
loope
pop
mov
clc
in
or
jns
xchg
retf
into
dec
xchg
sqrtps
les
adc
dec
imul
cmp
fidivr
xchg
mov
inc
daa
fbstp
ror
jmp
inc
jb
mov
or
fild
jmp
sub
fcom
(bad)
sbb
jl
(bad)
shr
jb
sbb
mov
retf
mov
add
mov
bound
popf
lahf
push
cmp
ds
push
ja
stc
outs
out
stos
leave
data16
sub
jecxz
cmps
call
leave
lods
mov
bound
or
adc
dec
mov
cmp
scas
cs
repz
mov
cmc
mov
adc
pop
mov
jl
jmp
or
stos
jp
mov
sbb
clc
test
and
and
xchg
and
cmp
adc
mov
jg
sub
in
sbb
jp
sub
mov
cdq
pop
jae
mov
ud0
push
cmp
push
adc
pop
sahf
fsubr
jmp
mov
push
xchg
in
pop
jns
cmp
dec
fnstcw
cld
mov
cmps
jl
jecxz
or
dec
cmp
adc
cwde
jp
pop
addr16
add
lods
les
pop
ror
aad
pop
mul
ret
(bad)
push
push
xchg
sub
mov
int3
loop
sbb
xchg
cdq
fwait
sti
js
cli
faddp
dec
mov
cld
mov
cmp
iret
adc
iret
jecxz
fnstcw
sbb
sbb
popa
adc
mov
adc
das
fs
pushf
lods
mov
rol
iretw
fisttp
repnz
stos
xchg
jecxz
je
bnd
adc
mov
shl
enter
or
loopne
lds
mov
pop
ins
add
iret
fwait
add
sahf
and
retf
into
in
mov
xchg
ficom
push
add
mov
cdq
xor
sub
es
adc
mov
mov
int
stc
pushf
jecxz
idiv
pop
dec
bound
or
inc
pop
xor
int3
mov
pop
push
(bad)
sub
add
sub
jmp
sbb
sub
xchg
push
(bad)
(bad)
jbe
mov
fadd
sbb
icebp
loope
sub
pop
cmps
jmp
add
cmp
loopne
sahf
push
scas
xchg
inc
inc
shl
mov
div
jmp
scas
xchg
mov
pop
cwde
mov
xor
ja
and
xchg
add
frstor
mov
sub
call
es
sti
adc
and
xchg
std
cmp
jecxz
shr
in
pop
mov
int
sub
out
mov
xchg
lea
push
mov
cmps
fst
in
jne
xchg
jmp
push
jmp
dec
adc
lea
jnp
mov
push
cmp
idiv
sahf
shl
sub
push
and
scas
les
cdq
mov
xchg
std
imul
call
sub
dec
mov
push
sbb
jge
cmc
mov
cdq
fisttp
push
dec
mov
in
cmps
test
jg
mov
mov
pushf
or
fsubr
cmp
xchg
jecxz
lahf
mov
mov
sbb
(bad)
int
mov
imul
mov
sub
pop
arpl
out
sub
pushf
fdivp
into
ja
into
iret
jne
loopne
je
int
retf
(bad)
scas
push
mov
push
mov
inc
and
ret
js
push
out
fs
popf
fcomp
xchg
push
xchg
adc
dec
addr16
pushf
loopne
(bad)
cmp
jecxz
cld
(bad)
push
das
cmp
dec
stos
fcomp
jmp
rcr
and
adc
xchg
adc
mov
cld
cmp
sbb
mov
gs
arpl
push
aad
addr16
add
cli
jae
push
mov
imul
push
jne
std
shl
mov
mov
cli
int3
out
call
outs
scas
jmp
dec
mov
(bad)
or
inc
std
jne
jp
dec
mov
or
inc
lock
sub
sbb
xchg
fldenv
out
sbb
sahf
inc
retf
sahf
push
xchg
xchg
shl
test
test
(bad)
bound
pop
pop
hlt
push
int3
xchg
mov
stos
xchg
mov
jmp
rcr
push
mov
push
ja
pusha
sbb
sbb
pusha
ffreep
jmp
push
outs
mov
sti
ror
fcmovbe
cld
js
xor
ror
push
icebp
sub
adc
push
jae
sahf
pop
stos
jmp
lock
fimul
jg
fld
shl
in
cdq
lods
pop
call
sbb
repz
retf
xor
add
push
test
dec
mov
iret
mov
jecxz
push
inc
jmp
pop
in
sbb
pop
fistp
mov
sub
cdq
add
and
test
mov
out
dec
pop
out
fisubr
and
jecxz
jecxz
jae
cmc
lock
xchg
push
sub
cmc
leave
(bad)
hlt
es
jle
imul
pusha
sub
or
(bad)
mov
(bad)
sub
jo
mov
or
xor
addr16
inc
mov
inc
rcr
icebp
mov
repnz
ror
jno
js
push
fadd
add
mov
jmp
js
mov
shl
add
outs
cmp
xor
xchg
int3
lods
inc
and
cmp
call
sub
pushf
fnstcw
dec
jno
inc
test
push
mov
xchg
xchg
stos
jmp
xchg
dec
dec
test
mov
dec
and
rcr
loopne
inc
mov
sbb
inc
cdq
aad
xor
retf
or
adc
retf
sub
fs
jp
xchg
mov
dec
in
and
stos
mov
inc
scas
repz
adc
mov
das
retf
les
(bad)
aam
lods
movs
ret
sbb
sub
mov
jle
bnd
(bad)
ja
cmp
sbb
ret
sub
dec
mov
jns
sub
inc
add
pop
loope
cmps
dec
jl
dec
sahf
loope
mov
fsub
in
mov
mov
es
mov
xchg
or
adc
lods
mov
outs
mov
cld
movs
jbe
or
repz
sub
icebp
dec
jmp
adc
cmp
jmp
mov
hlt
jnp
(bad)
sub
das
add
lea
in
inc
and
mov
dec
inc
ins
pop
rcr
je
push
sbb
pop
xchg
jbe
mov
test
out
cmps
xchg
mov
xchg
xor
jbe
mov
les
repz
mov
or
mov
sbb
mov
jns
push
call
mov
ret
nop
jnp
icebp
je
icebp
(bad)
or
inc
inc
inc
pop
pop
out
and
fwait
outs
sti
(bad)
call
dec
loope
and
adc
popa
jns
xor
jl
xor
pushf
jmp
jmp
pop
or
cmps
xor
scas
ror
xor
jl
and
xor
mov
popa
xor
(bad)
pop
xlat
inc
jg
stos
scas
xor
push
jbe
(bad)
das
pushf
mov
cmp
and
loop
pop
ror
push
pop
scas
pop
xchg
mov
dec
in
sar
sub
clc
mov
and
mov
sub
lahf
xor
add
fld
mov
sub
mov
inc
push
pop
or
jb
aas
(bad)
mov
call
jg
xor
inc
pop
sub
pop
movs
or
xchg
sahf
sbb
mov
(bad)
jecxz
push
out
mov
sti
xchg
addr16
mov
aam
stos
xchg
aaa
lods
cs
xchg
push
sub
push
sub
mov
push
jne
xor
xchg
outs
icebp
sbb
cmps
int3
mov
dec
lock
mov
inc
xchg
sub
test
adc
push
sti
cmp
mov
push
cmp
pusha
jp
inc
jge
mov
and
fstp
jp
stc
popf
pop
jo
cmp
aas
cmp
test
or
rol
mov
(bad)
das
adc
or
jmp
inc
outs
dec
lods
adc
push
mov
mov
inc
jnp
and
cdq
cld
cdq
loope
iret
xchg
out
jge
mov
cmps
jle
push
arpl
jo
sbb
cmp
jnp
data16
mov
in
inc
repz
bound
dec
lock
loopne
sbb
pop
and
inc
mov
stos
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
cmp
inc
inc
sub
mov
sahf
and
mov
test
jb
in
sbb
mov
jns
inc
fld
fisub
stc
mov
dec
clc
add
mov
push
xor
outs
cmp
and
cmps
repz
scas
rcr
jbe
adc
mov
mov
adc
dec
call
mov
xor
jb
dec
push
adc
imul
inc
fsubp
outs
push
pop
inc
add
xchg
jmp
mov
inc
xor
fnstcw
call
sti
fisttp
repnz
test
bound
out
cmp
retf
(bad)
jg
sar
push
or
mov
jbe
mov
jmp
stos
jne
fnstenv
pop
pop
mov
(bad)
sbb
pusha
xor
and
sub
pop
pop
sub
cld
pop
fild
xchg
mul
stos
sahf
sub
pusha
test
lahf
pop
sbb
push
mov
jg
mov
and
cmp
int3
push
push
icebp
xor
mov
add
loop
stos
dec
mov
pop
loope
push
icebp
stos
(bad)
(bad)
stos
pop
lds
fs
ins
dec
sbb
retf
cmp
jecxz
mov
pushf
fstp
mov
movs
fstp
call
cmp
repnz
mov
fwait
xor
pop
ins
lea
xlat
or
push
retf
cmp
or
mov
fdiv
push
gs
sub
jmp
push
push
retf
xchg
sub
or
push
push
xor
test
movs
ret
aad
cmp
test
mov
scas
cmps
data16
xchg
xor
cld
ins
jae
add
adc
out
mov
adc
pop
push
jo
ins
xchg
or
fcom
push
fld
mov
adc
cmp
jp
push
inc
cmc
mov
mov
adc
enter
jl
les
repnz
xchg
jno
jl
ret
sub
inc
jg
fnstenv
pop
stc
push
stc
mov
mov
int
lods
sub
lods
ror
or
loop
lea
mov
sub
adc
xor
sar
out
mov
test
stos
jne
lods
inc
in
nop
sar
adc
sub
xchg
jae
pushf
mov
jnp
imul
call
rcr
sbb
les
xor
mov
dec
jge
int3
rcr
push
test
idiv
add
repz
aam
add
jne
xchg
movs
xchg
pop
jl
test
mov
add
imul
out
pop
loope
mov
jae
pop
jns
fnsave
sub
outs
jle
das
mov
es
push
ror
add
popf
inc
mov
add
aas
int
mov
sar
shr
(bad)
adc
push
gs
cwde
mov
jae
jb
add
adc
jle
mov
mov
sub
push
xor
mov
push
loop
sub
jle
outs
sti
stos
add
push
cmp
and
leave
push
dec
and
xlat
iret
jbe
(bad)
push
fcomp
lahf
shl
mov
push
cmps
(bad)
and
mov
in
bound
adc
jmp
sbb
fcomp
lods
sti
jo
mov
jl
imul
data16
call
call
(bad)
mov
inc
add
mov
fld
leave
push
jns
nop
dec
cld
jmp
out
fadd
pop
adc
in
adc
sub
jae
or
in
mov
push
add
sub
sub
movs
gs
icebp
mov
in
cli
and
jae
xchg
dec
inc
aad
mov
loop
cmps
xchg
cwde
addr16
ins
shl
lods
shr
loope
add
je
sbb
add
add
jmp
dec
cld
sub
mov
push
sub
lods
(bad)
fcomp
or
fistp
sbb
rcl
cdq
retf
mov
leave
or
jns
dec
out
or
lock
lahf
xchg
mov
stos
bound
repnz
into
outs
imul
xchg
and
xor
jle
mov
sbb
lods
inc
scas
repnz
cmp
or
jg
sbb
push
xchg
jb
stc
repnz
jne
lea
imul
inc
rol
push
test
sbb
cmps
push
sbb
movs
jnp
loop
inc
mov
mov
pushf
sbb
pop
test
mov
adc
ret
sub
dec
inc
ins
mov
mov
ins
or
cmp
add
ret
cmp
dec
push
xchg
pop
cmp
dec
addr16
or
push
jo
xchg
inc
mov
or
dec
test
and
xor
dec
sbb
add
mov
mov
cmp
mov
sbb
and
jl
(bad)
scas
push
inc
jbe
push
cmp
movs
(bad)
mov
stc
inc
lock
push
cmp
inc
repnz
mov
mov
imul
xchg
or
sbb
aas
or
xlat
sbb
sbb
or
sub
xchg
neg
pusha
ret
lods
les
pop
jmp
out
pop
push
retf
ret
add
jg
in
inc
xchg
xchg
cmp
lea
sbb
xchg
jbe
(bad)
rcr
dec
sti
xor
jno
repnz
es
es
sub
inc
xor
adc
test
pop
xchg
sbb
addr16
cld
cmc
jns
sub
adc
hlt
and
or
mov
ss
cmp
inc
pop
jns
mov
ds
jns
push
cli
(bad)
pop
push
xor
xchg
cdq
popf
add
lds
out
cmp
retf
sti
test
sar
clc
test
aam
arpl
dec
ins
jno
add
mov
call
push
and
pop
add
outs
outs
jmp
inc
push
stos
outs
call
gs
test
push
ss
aad
das
adc
rol
xchg
movs
(bad)
lahf
and
or
xor
leave
mov
ins
mov
int
cmp
das
and
sub
aad
popa
outs
fist
(bad)
sbb
sahf
stos
js
cdq
mov
pop
js
push
cmp
rcr
clc
call
push
adc
push
xchg
cmps
push
push
lods
(bad)
fnsave
test
jne
sub
in
out
push
fidiv
jge
jno
xchg
imul
in
cld
mov
stos
(bad)
aad
bound
sub
jmp
fsubr
lahf
lods
pop
xchg
or
push
jg
leave
sbb
pop
sbb
in
loopne
scas
cli
cmp
dec
pop
retf
mov
jb
fcomip
jne
(bad)
in
jge
adc
ficom
test
mov
push
sbb
jmp
test
push
push
xchg
adc
cmp
mov
aam
fcmovu
and
outs
fdiv
mov
mov
sti
mov
xor
sbb
sbb
ja
test
mov
cli
iret
sbb
rol
outs
idiv
push
or
fs
xchg
cmps
pushf
inc
rcr
sub
sbb
fld
jmp
dec
push
ret
pop
mov
mov
icebp
aaa
add
icebp
in
jge
push
xor
shl
xor
and
movs
enter
aam
push
mov
jae
or
mov
fsub
lahf
cli
out
neg
xchg
mov
jg
push
xlat
fidiv
call
adc
scas
and
xor
pop
cdq
in
push
das
inc
je
in
inc
fdivr
pop
cmp
(bad)
sbb
cdq
fcomip
xlat
out
sub
xchg
pop
xchg
and
movs
fdivrp
mov
mov
test
xchg
xchg
daa
xchg
test
aaa
lea
retf
adc
lods
push
or
or
mov
fbld
xchg
retf
(bad)
inc
sbb
and
nop
sub
ins
sar
and
mov
mov
xor
fidivr
cwde
jo
movs
cdq
shl
imul
add
dec
push
lds
jb
outs
xchg
movs
mov
pop
push
mov
stos
rcr
push
cwde
pop
test
in
xchg
dec
jae
pop
out
and
scas
pushf
fdiv
xor
loop
cmp
pusha
push
scas
cmp
jmp
addr16
cmp
push
test
aad
pop
aas
neg
(bad)
jmp
and
ss
enter
lahf
shr
adc
xor
cmp
mov
pop
iret
mov
cdq
adc
out
rcl
sbb
ins
xor
adc
and
shl
inc
xchg
daa
add
nop
pop
test
ins
mov
rol
aaa
pop
mov
xchg
pop
jo
in
les
in
jno
cmc
push
(bad)
xchg
daa
cld
int
xor
(bad)
mov
leave
mov
aad
jl
mov
adc
mov
push
inc
or
sbb
add
xchg
retf
repnz
push
mov
ret
enter
sub
leave
cmp
fisttp
add
arpl
inc
cwde
cmp
pop
sub
in
cmc
sub
jp
jl
lds
aam
(bad)
repz
cld
cwde
dec
lahf
not
sub
and
cmc
xor
mov
cmp
daa
shrd
fist
nop
jae
ret
fwait
mov
push
rol
test
mov
(bad)
xor
mov
sub
inc
fcomip
in
sbb
clc
push
out
sub
dec
or
loop
addr16
sar
cmp
lahf
dec
sar
std
fadd
pop
cmc
cwde
pop
lahf
mov
movs
inc
and
mov
push
mov
sub
xor
or
push
sub
imul
dec
jno
push
cld
repnz
sbb
jno
pop
jmp
iret
xor
pop
jmp
sbb
adc
add
retf
xor
jecxz
jo
test
shl
mov
mov
mov
data16
mov
repnz
sub
or
imul
xchg
je
cmps
sub
pop
sub
adc
ins
dec
repnz
cmps
pop
xchg
xlat
cwde
jl
test
push
jge
arpl
mov
jl
add
mov
adc
pop
rcl
xchg
dec
inc
mov
inc
pusha
or
popf
xor
pop
mov
out
pop
mov
(bad)
add
sub
mov
and
jmp
and
pop
clc
aad
rol
xchg
aaa
inc
xor
fstp
mov
dec
inc
pushf
mov
xor
mov
popa
movs
xor
bound
ins
fsubr
imul
lds
adc
loope
dec
iret
gs
popa
push
(bad)
lahf
sbb
outs
and
mov
dec
push
mov
xchg
fnstcw
jns
(bad)
out
push
jo
gs
dec
add
xchg
scas
dec
jg
mov
into
ret
dec
lds
mov
mov
retf
mov
fs
enter
ret
adc
test
lods
mov
pop
jp
es
sub
lods
out
fistp
loop
jbe
fwait
pop
in
lods
xchg
inc
push
stc
(bad)
push
push
xchg
mov
sbb
cli
daa
dec
push
repz
enter
cld
sbb
aaa
lock
loopne
sar
cmp
inc
push
and
pushf
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
and
push
mov
and
iret
mov
pop
cdq
sub
cdq
jge
out
les
gs
xchg
lods
mov
enter
test
iret
mov
add
mov
dec
scas
jbe
ret
in
out
and
jl
pop
clc
leave
sub
cmp
aam
icebp
pop
sbb
fidiv
ficomp
and
out
jns
stos
push
hlt
pop
fld
mov
outs
leave
cmc
dec
adc
dec
stos
cmp
fs
jmp
arpl
sub
mov
(bad)
cmp
imul
call
adc
sub
(bad)
cwde
fild
imul
mov
dec
cmp
inc
dec
or
fstp
cli
cmp
es
jne
jno
hlt
stos
xor
or
inc
(bad)
cdq
stos
push
stc
xor
inc
pop
and
loope
out
jmp
in
fist
pop
fs
hlt
gs
(bad)
leave
mov
lds
pushf
jp
out
rol
push
int3
int3
jns
call
retf
jae
lods
ss
cld
aam
pop
mov
cmp
push
or
xor
outs
jo
mov
outs
mov
mov
inc
lahf
lods
ds
xor
pop
inc
dec
es
push
push
nop
add
int3
idiv
add
mov
inc
div
xchg
out
shr
dec
or
hlt
mov
sbb
xor
stos
imul
push
enter
or
movs
or
add
test
int
mov
popf
fdivr
adc
pop
cld
push
outs
or
or
das
cmp
adc
mov
packsswb
scas
mov
ins
movs
jnp
inc
pop
lods
arpl
int3
xchg
icebp
push
out
fistp
(bad)
mov
mov
mov
cwde
es
sub
(bad)
shl
xchg
jns
sub
inc
sbb
scas
fwait
rcr
fs
xor
jb
scas
call
fsub
gs
popa
pusha
jp
push
sub
fldenv
dec
and
mov
neg
xor
inc
setbe
nop
push
jb
or
js
mov
dec
in
outs
out
cwde
outs
sbb
push
pop
ds
push
je
lods
into
or
pusha
and
jp
xchg
out
test
repnz
xchg
rcr
jo
cs
mov
loop
inc
add
mov
inc
mov
into
(bad)
enter
pop
xor
fldcw
in
inc
fs
lock
shl
popa
shr
or
loop
jle
jmp
(bad)
out
test
xchg
add
mov
inc
push
popf
cld
xchg
lods
pop
aad
data16
lahf
mov
scas
mov
jne
xchg
mov
ret
fimul
push
popa
test
cmc
inc
das
data16
pop
and
leave
sbb
jns
das
into
dec
xchg
iret
aam
mov
xor
push
jno
enter
stc
mov
mov
sub
es
mul
jl
mov
dec
aaa
ror
fsubr
pop
iret
pop
js
mov
cli
call
cmps
sbb
xchg
and
adc
pop
xchg
pop
push
(bad)
sbb
lahf
aaa
xor
loope
ret
neg
ins
lahf
into
pop
jmp
sbb
xor
xchg
add
dec
pop
js
inc
inc
pop
cmps
repnz
adc
pop
and
or
nop
fsub
in
nop
movs
sbb
mov
fnstcw
xchg
push
movs
lds
adc
lock
mov
shl
dec
inc
push
mov
mov
gs
sar
iret
popa
add
paddb
cmp
outs
das
push
or
test
fwait
jl
pop
jg
mov
sahf
int
enter
push
ds
lds
sahf
daa
push
(bad)
bound
xchg
inc
leave
in
aas
pop
ins
dec
out
pop
jmp
jb
jge
dec
stos
outs
cmps
clc
ret
or
inc
or
imul
es
jmp
mov
and
xchg
fist
ins
jb
xchg
mov
outs
rol
std
mov
sub
inc
jmp
pop
ins
pusha
add
hlt
lods
ins
test
sub
jmp
in
fwait
out
adc
fwait
ja
out
xor
popa
dec
out
push
mov
repz
mov
pop
xor
cmps
call
push
fst
daa
ret
in
int3
test
lock
pop
xlat
push
mov
scas
mov
inc
mov
adc
arpl
jnp
in
call
xor
stos
pop
mov
fisubr
not
add
mov
cdq
call
xchg
jne
ins
sbb
mov
in
jle
pop
xchg
gs
pop
stos
jb
popf
cmps
leave
addr16
pop
mul
rol
retf
inc
push
test
xlat
and
aas
pop
dec
adc
bound
retf
fnstcw
in
or
xor
mov
or
xchg
xor
xor
ins
leave
in
adc
out
dec
mov
xor
das
cld
mov
(bad)
enter
daa
imul
jl
fmul
dec
pop
bound
scas
adc
mov
in
cmp
sti
push
ss
or
jo
ins
cs
shl
push
xchg
inc
dec
das
add
fcomi
cwde
mov
mov
xor
push
repz
mov
loop
push
adc
mov
sbb
(bad)
dec
out
jecxz
inc
mov
scas
aaa
ja
mov
or
iret
mov
stc
ret
cmps
into
test
mov
push
stos
adc
mov
mov
popa
popa
mov
mov
cs
mov
stc
mov
jle
pop
cld
jae
xlat
xor
dec
aaa
inc
dec
movs
cdq
cld
jp
stos
cli
movs
(bad)
repz
out
mov
push
shl
dec
call
jmp
movs
sbb
int
xchg
inc
dec
push
inc
jmp
mov
sti
adc
pop
dec
push
cmp
lahf
fisttp
xchg
inc
dec
out
inc
jge
mov
stos
and
adc
xlat
scas
ins
pusha
ds
sub
es
int3
xor
out
adc
(bad)
sub
mov
outs
xor
ret
jecxz
mov
js
jg
out
dec
xlat
rcr
leave
sbb
mov
ret
adc
cld
lea
jl
adc
loope
cs
std
mov
xor
dec
pop
in
aam
mov
fcmovbe
mov
cmp
add
mov
sahf
ficomp
mov
jg
in
mov
(bad)
xchg
pop
std
push
retf
test
mov
jbe
or
sub
cmc
mov
sbb
xor
push
sub
push
in
ds
mov
retf
mov
adc
or
add
test
push
imul
inc
jecxz
gs
sbb
sbb
cwde
cmp
jae
fld
mov
inc
mov
sub
jle
loopne
movs
(bad)
mov
aam
pushf
cdq
mov
div
mov
out
jecxz
pop
cmp
jmp
or
mov
into
jp
add
inc
pop
scas
pop
movs
into
sbb
cld
shl
adc
cmps
add
test
retf
(bad)
leave
xchg
js
iret
or
jl
lds
jp
jg
je
push
(bad)
loop
imul
xlat
jl
or
pushf
cmp
dec
jmp
inc
mov
sar
aam
jecxz
push
and
test
in
pop
jmp
xchg
fisubr
ins
fld
pop
cmp
cdq
gs
leave
jae
daa
jmp
adc
mov
dec
cmp
and
cld
nop
sub
fistp
or
scas
jns
cmp
cmp
dec
movs
mov
movs
sub
dec
not
mov
cmc
mov
cmps
test
xchg
das
xor
call
psubsw
rcl
cmp
inc
gs
dec
xchg
fwait
inc
mov
xor
jmp
xor
jle
cmc
hlt
mov
mov
stc
jns
jg
lea
mov
in
in
dec
ja
or
into
es
cs
pop
ins
pusha
addr16
jns
cmp
aas
and
pop
stos
push
mov
jmp
mov
movs
ja
maxps
in
add
sbb
jp
rol
dec
cmp
(bad)
out
cld
push
movs
mov
movs
dec
sbb
fmul
jmp
in
push
test
sbb
fcomp
mov
inc
push
pop
jecxz
fist
mov
xchg
mul
pop
enter
cmp
add
mov
mov
and
(bad)
leave
lods
scas
mov
pop
and
stos
test
nop
fadd
inc
add
xor
xchg
lods
mov
pop
(bad)
outs
mov
mov
stos
sti
mov
in
add
aas
xchg
fisub
ficom
shl
jbe
cwde
data16
aad
cmp
push
ror
mov
mov
fcmovnb
mov
std
loop
loope
jmp
pop
push
adc
cdq
or
mov
in
mov
imul
sbb
mov
je
stos
jmp
call
sbb
pop
out
dec
lahf
rol
lods
mov
xchg
ins
cmp
mov
pop
mov
adc
or
jne
push
or
cmp
call
fst
jns
xchg
lods
sbb
(bad)
dec
enter
scas
add
pop
add
push
and
pop
jb
clc
in
push
pop
cmc
popf
call
outs
sub
add
mov
sub
(bad)
cli
adc
xor
pop
int3
(bad)
xor
jl
(bad)
leave
bnd
lahf
push
fstp
jnp
outs
inc
jp
jno
xchg
inc
inc
int3
out
sti
pop
out
in
xor
sub
mov
loop
ror
cwde
or
in
cmps
add
imul
and
and
xchg
cmp
lds
push
jno
movs
jge
stc
inc
int3
mov
sub
aas
pop
sar
ror
and
inc
push
inc
xor
shl
mov
fstp
aad
inc
inc
sti
hlt
mov
scas
cwde
arpl
fstp
pop
jmp
fsub
hlt
ret
push
leave
daa
mov
jnp
pop
and
push
rcr
imul
xor
test
xlat
jnp
mov
jns
inc
std
jmp
call
icebp
imul
cs
cmp
stos
mov
sub
pop
inc
stc
popa
pop
dec
(bad)
cld
popa
adc
or
push
das
inc
in
retf
test
adc
pop
push
inc
popf
cwde
jmp
jge
cmp
inc
in
ins
ror
cwde
sar
or
popa
add
mov
dec
das
pop
inc
xchg
mov
mov
into
add
add
cmp
sbb
scas
(bad)
fimul
aam
es
sbb
mov
stc
stos
mov
aas
int
repz
outs
mov
ja
push
mov
xor
arpl
icebp
retf
pop
ret
aas
scas
inc
ins
sti
inc
mov
mov
loopne
adc
iret
sbb
cli
inc
leave
into
(bad)
push
out
(bad)
test
push
xor
arpl
nop
pop
push
xor
jns
mov
imul
aad
sar
jnp
retf
push
mov
sbb
xchg
cbw
mov
in
or
pop
add
sar
push
dec
lock
loopne
sbb
pop
xchg
and
and
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
enter
fs
ins
retf
(bad)
outs
fld
adc
cdq
fstp
in
mov
in
sub
out
sbb
mov
in
repz
add
dec
outs
or
ret
outs
adc
in
dec
push
adc
ins
retf
xlat
int
data16
mov
push
sbb
call
leave
pop
xchg
gs
enter
inc
int
xor
jbe
sbb
sbb
call
fdivp
sub
mov
std
xor
mov
push
xchg
mov
pushf
push
cmp
repnz
pop
add
dec
mov
pop
mov
push
xchg
cmp
sbb
(bad)
push
sub
sub
jmp
adc
xchg
stos
cmc
xchg
adc
mov
pop
mov
mov
sub
push
or
inc
cmps
(bad)
lock
lock
mov
mov
pop
in
cmps
arpl
cmc
cdq
jmp
xor
sub
jno
adc
push
and
pxor
pop
aas
jecxz
and
xor
push
gs
cmp
jbe
dec
adc
sub
mov
sti
mov
mul
mov
scas
scas
in
dec
push
movs
inc
pop
push
push
sub
inc
arpl
stc
outs
xchg
jp
fcmovb
into
scas
sub
std
movs
ds
inc
inc
jbe
repnz
adc
pop
pop
adc
push
mov
sbb
sahf
ins
popf
or
out
mov
aad
mov
mov
sar
jno
ror
loopne
and
test
jnp
sbb
(bad)
jmp
sbb
or
lea
push
cmp
jae
call
je
pop
(bad)
adc
push
and
pusha
mov
out
fisubr
jns
cmps
loope
push
outs
inc
jmp
test
fdivr
xor
aam
pop
pop
push
outs
nop
ins
dec
and
int
mov
cmp
xor
sbb
lds
cmp
imul
dec
sub
inc
pop
cmps
sahf
cmp
xchg
lods
mov
js
loope
cdq
ins
data16
xlat
pop
mov
xchg
rcl
mov
(bad)
ret
rcr
xor
mov
aam
daa
sub
arpl
cmp
div
mov
mov
arpl
vunpcklpd
lds
les
inc
inc
cmc
fild
push
pop
fcomi
hlt
and
outs
jmp
jmp
push
movs
movs
adc
arpl
out
inc
lods
scas
pop
push
imul
mov
ficomp
repz
mov
add
ss
xor
mov
ja
fisubr
cmp
pop
loopne
retf
icebp
loope
dec
outs
addr16
cmp
bound
dec
lea
push
mov
retf
mov
shr
xor
mov
(bad)
mov
aas
jecxz
inc
lahf
mov
xor
mov
jmp
scas
xor
lods
popa
lods
ja
xor
idiv
fild
inc
lea
push
and
ficomp
xor
jne
enter
test
push
jae
push
cdq
jecxz
das
jmp
fmul
sbb
call
sar
mov
fsubrp
mov
xlat
cs
shl
mov
xor
mov
lea
call
pushf
push
xchg
leave
idiv
sub
xor
xor
jbe
iret
in
aaa
xchg
mov
jnp
in
icebp
iret
popf
mov
retf
mov
bound
mov
and
sub
aad
xor
and
inc
jge
mov
call
mov
mov
push
mov
push
lahf
popa
outs
pop
lods
mov
fs
jmp
das
jmp
cwde
and
cmp
stc
ret
pop
cmps
pop
jl
test
repnz
mov
cmps
dec
xor
sbb
repz
icebp
push
pop
add
cmp
dec
(bad)
sbb
inc
mov
mov
or
fdiv
outs
stos
pusha
xchg
pop
lahf
js
test
test
push
aam
push
mov
stos
pop
jecxz
cmp
stc
mov
dec
mov
test
jbe
jmp
mov
inc
inc
or
in
pop
(bad)
push
pop
jg
(bad)
mov
popa
jmp
fdiv
out
out
test
xor
sbb
test
push
rcr
mov
lods
sub
inc
dec
inc
cmp
imul
mov
mov
mov
pop
sti
or
popa
jnp
add
fmul
fisttp
inc
retf
sub
pop
call
xchg
push
xchg
jecxz
pop
pop
sub
ror
sbb
push
pop
stos
inc
ret
ja
fadd
push
loop
imul
xlat
pop
(bad)
neg
lock
sbb
ret
xor
out
repz
or
jns
sti
jnp
adc
sbb
mov
fs
aaa
cs
ret
pop
movs
mov
aam
sbb
std
cmp
push
cmp
pop
jmp
xchg
call
addr16
xchg
sahf
shl
pop
sub
sar
das
arpl
pop
dec
repnz
aam
sbb
mov
xor
stos
sub
mov
fwait
aas
ret
or
ins
sti
(bad)
adc
stos
mov
call
cld
jle
sbb
cmps
cdq
cmps
mov
cli
out
or
data16
sub
xchg
sbb
pop
daa
jb
pop
inc
jae
(bad)
rol
add
xchg
sbb
jmp
mov
fmul
xchg
xchg
cwde
pop
adc
lods
fiadd
test
add
in
data16
cmp
dec
movs
mov
jmp
outs
mov
movs
mov
mov
cs
ds
repnz
jno
push
add
xchg
aam
mov
leave
jl
pop
pushf
arpl
into
sti
pop
rol
hlt
mov
icebp
sub
mov
mov
mov
inc
dec
into
cmp
sub
lock
sub
and
fadd
les
loop
add
adc
sbb
adc
add
jae
std
leave
cdq
dec
scas
(bad)
push
inc
aad
or
rcl
div
xor
data16
stos
mul
mov
fdiv
lock
sahf
or
test
or
pop
das
cmc
mov
cli
xchg
bnd
xor
mov
pop
cmps
push
repz
jne
mov
lock
ja
shl
rcr
(bad)
jl
test
pusha
cld
retf
jl
shl
mov
aam
pop
mov
push
mov
pop
int
sbb
dec
or
std
xlat
jge
mov
sbb
int3
xchg
mov
mov
jle
jo
add
and
ins
icebp
stc
jmp
cmovbe
sti
pop
xlat
popf
mov
lea
(bad)
fmulp
xchg
pop
add
mov
lods
xchg
jecxz
pop
mov
test
pop
test
and
and
pop
cmp
(bad)
shl
repnz
mov
fld
out
shr
ror
pavgw
mov
ja
(bad)
xchg
pop
frstor
pushf
cmp
mov
pop
sbb
loopne
mov
xor
inc
les
xchg
ja
add
sbb
inc
add
js
jae
xchg
adc
jl
(bad)
push
popf
xchg
jae
inc
jmp
jo
sub
call
adc
hlt
and
jno
outs
loopne
xchg
mov
adc
inc
jns
imul
(bad)
push
cmp
push
shr
jl
xlat
mov
int3
cmp
data16
ret
xchg
mov
stc
loopne
(bad)
dec
sbb
lahf
ror
sub
and
in
jmp
je
cmp
jne
imul
inc
adc
mov
jp
in
xlat
ror
xor
xlat
mov
scas
(bad)
cmc
in
repz
cmp
add
popf
push
mov
jge
jb
out
bound
push
loop
mov
sub
add
(bad)
push
push
scas
scas
fiadd
jge
or
push
std
cmc
jmp
add
pop
push
mov
xchg
mov
fistp
imul
adc
fcom
movs
xor
daa
mov
mov
outs
fs
je
push
and
pause
dec
mov
jns
pop
int
mov
or
xchg
out
pop
out
les
int
sub
pop
and
and
pop
adc
mov
jecxz
int
jecxz
jle
in
daa
inc
jp
imul
push
mov
inc
dec
jnp
cmp
xchg
popa
stos
outs
sub
mov
pop
mov
outs
or
out
mov
jb
fs
dec
mov
mov
outs
inc
dec
sbb
xor
sub
ins
push
cld
fs
(bad)
pop
and
call
push
cmp
in
fsub
cdq
push
mov
cs
imul
cmp
add
add
lahf
inc
shr
dec
or
inc
pop
outs
adc
shl
inc
neg
push
sti
jge
bound
push
mov
scas
adc
mov
cmp
test
out
xor
mov
out
or
jge
or
push
sbb
fs
jp
pop
xor
scas
das
jno
cmps
je
(bad)
jbe
lods
(bad)
inc
and
add
sbb
pop
inc
mov
sbb
ins
fsub
je
pusha
sar
mov
lock
mov
repz
sub
shl
xchg
call
xchg
(bad)
push
adc
xchg
rol
stos
mov
add
cmp
clc
out
pop
and
nop
pop
rcl
out
les
and
ror
cmp
mov
popf
mov
add
inc
jbe
and
popf
jp
push
pusha
xor
aam
cmp
aad
inc
and
movs
sahf
pop
not
addr16
out
xchg
xor
imul
xor
xlat
(bad)
test
mov
cmc
arpl
push
stc
mov
outs
cmp
stc
test
and
mov
(bad)
mov
dec
movs
jmp
inc
push
fwait
dec
add
pushf
fadd
push
jns
out
dec
inc
ins
xchg
pusha
das
sub
push
cmp
mov
inc
inc
cmp
dec
dec
nop
jmp
(bad)
pop
in
leave
and
xor
imul
outs
stc
jp
add
adc
and
add
cwde
sahf
jg
(bad)
cmp
jb
push
sbb
vpsrlq
arpl
and
jnp
mov
fstp
mov
cmp
xchg
movs
adc
out
test
repnz
xlat
out
stc
ret
mov
mov
mov
stos
push
push
cmp
sub
adc
(bad)
stc
iret
mov
iret
sti
or
retf
sub
or
sub
pop
or
mov
ss
shr
fdiv
loop
jge
rcl
sub
jge
mov
lock
js
scas
add
sub
std
and
cdq
pop
xor
mov
push
inc
jmp
pop
leave
ror
adc
fwait
push
mov
inc
stos
mov
std
inc
inc
(bad)
es
lds
mov
sbb
frstpm(287
xchg
lds
mov
rcl
or
clc
aaa
lock
loopne
sar
nop
iret
aas
jl
fstp
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
xor
daa
into
jbe
test
xchg
popf
rcr
addr16
or
test
jbe
xor
mov
cmp
jae
and
out
push
cmp
loop
mov
dec
clc
add
cmc
ret
imul
repz
xchg
cdq
add
cmp
pop
shl
jne
dec
jp
mov
pushf
push
fdivr
mul
cmps
out
repz
cmp
xchg
test
ret
xchg
push
dec
scas
jne
leave
xchg
es
push
inc
es
adc
stos
jbe
sar
pusha
xchg
push
lahf
stos
inc
push
in
in
xchg
and
push
movs
(bad)
cmp
add
inc
mov
jmp
sub
cli
(bad)
jne
jge
(bad)
data16
xlat
popa
mov
rol
out
push
jns
rol
sub
int3
lea
push
push
add
imul
xchg
jo
pop
std
into
jecxz
xchg
ds
mov
(bad)
nop
vmwrite
rcr
mov
push
cmp
icebp
sub
pusha
into
mov
mov
add
xchg
jl
scas
xor
xor
mov
pop
lds
aaa
jle
or
inc
mov
hlt
cmp
outs
sub
mov
lods
pushf
pop
jne
addr16
ficom
test
xor
jne
int
cmp
ins
jne
xor
xchg
ja
int
hlt
imul
sbb
jb
test
call
popf
dec
mov
in
xchg
jo
stc
gs
cmps
aam
inc
pusha
mov
dec
je
pop
outs
push
add
stc
sti
push
mov
mov
and
test
pop
in
aad
mov
dec
add
icebp
xor
and
jo
shl
dec
inc
lods
gs
mov
aad
or
xchg
xchg
mov
cmps
jp
into
test
sub
outs
jns
adc
jmp
fbld
pusha
inc
pop
test
test
push
in
call
or
scas
push
mov
jl
dec
fwait
jecxz
adc
iret
pop
test
pop
cmps
add
pop
pop
pop
mov
loop
outs
fcom
(bad)
icebp
sbb
fdivr
das
xchg
sub
jae
add
jmp
or
in
inc
ins
sub
adc
inc
sti
jbe
dec
mov
cmp
popa
xlat
scas
scas
mov
inc
outs
out
inc
fst
mov
clc
(bad)
and
push
sbb
xchg
imul
sub
push
les
xchg
mov
xor
mov
pop
loopne
daa
es
fistp
stos
in
rol
push
retf
push
jae
sub
xchg
xor
mul
cmp
repz
mov
stc
add
cmps
jb
mov
mov
cmp
ss
inc
movs
cmc
(bad)
mov
mov
push
fadd
jae
cmps
inc
jno
fst
mul
fild
lock
mov
inc
cmp
dec
adc
inc
xchg
stc
jbe
mov
shl
outs
aas
icebp
pushf
xchg
call
seta
(bad)
sar
std
test
cmp
sbb
movs
call
push
and
ror
push
cmps
loope
add
dec
inc
in
dec
fs
pop
mov
or
pop
(bad)
outs
pop
sar
ret
out
cmps
imul
pop
inc
sbb
loope
rol
adc
xchg
cmp
and
aam
push
dec
dec
pusha
cwde
scas
cmps
(bad)
aad
or
xor
push
icebp
sub
xchg
jnp
mov
hlt
push
xchg
pop
out
daa
sub
sub
test
std
or
sbb
ss
ret
lock
imul
inc
js
sub
not
sti
cmc
mov
jnp
adc
mov
mov
(bad)
aas
out
cmp
sti
mov
fstp
push
les
xchg
sub
repnz
movs
xor
in
and
or
lock
push
jno
push
ins
adc
sahf
inc
imul
test
jmp
sbb
cmps
mov
cmps
xchg
lods
out
(bad)
adc
lods
add
sar
cs
icebp
ret
mov
cmp
aas
out
sub
popa
mov
in
dec
sbb
pop
cmp
cmp
leave
inc
cwde
das
pcmpeqd
sahf
ss
nop
mov
rcr
inc
cwde
lock
mov
inc
aas
cmp
xor
sbb
arpl
lods
and
or
daa
sub
inc
scas
into
popa
lds
xchg
mov
ja
cmp
imul
adc
jo
inc
and
das
add
cmps
pop
jg
push
test
and
mov
out
not
pop
sub
mov
xchg
mov
sub
or
fisubr
mov
jns
out
adc
gs
fiadd
ins
in
stos
repnz
or
int
pusha
dec
mov
add
dec
out
ds
xor
dec
rcl
loope
xor
aad
xor
xchg
in
aaa
daa
fst
adc
xlat
jae
(bad)
leave
leave
sbb
mov
movs
mov
jb
jp
fs
aam
into
mov
fsubr
push
icebp
test
pop
adc
pop
dec
pushf
mov
jmp
sbb
mov
sahf
or
movs
es
popa
adc
scas
loope
fwait
pop
xchg
int3
and
cdq
mov
xor
ds
mov
fild
lods
imul
clc
mov
gs
sub
and
retf
outs
loope
mov
pop
pop
push
cmp
cli
xor
repnz
sub
cmps
nop
cmc
fmul
mov
mov
push
sbb
xchg
sbb
cs
and
cs
xlat
test
mov
cs
pop
daa
mov
dec
mov
jb
aam
xchg
clc
mov
das
cmp
shl
addr16
shl
ja
jmp
mov
adc
dec
and
pusha
arpl
aam
jp
movs
je
(bad)
jns
add
xlat
int3
jmp
scas
sub
mov
std
mov
or
inc
pop
sub
xchg
out
inc
cmp
inc
mov
out
xchg
sti
arpl
adc
fwait
sub
inc
hlt
mov
sti
pop
mov
out
adc
and
jmp
pop
(bad)
mov
and
cwde
rcr
cmp
scas
jg
shl
outs
rcl
scas
call
cmp
sub
pop
xor
jl
imul
and
xor
(bad)
stos
sub
ret
xlat
movs
popf
sahf
cmc
(bad)
les
and
retf
dec
jmp
enter
mov
jnp
push
mov
in
sbb
jno
(bad)
jns
sbb
test
mov
loope
xchg
out
fisttp
cmps
and
mov
test
fsubr
aaa
mov
cmp
mov
push
fwait
cmps
inc
and
cmps
or
sub
mov
das
push
sar
pushf
js
fdivrp
call
xchg
lock
jp
int3
pop
repz
mov
pop
xchg
ds
xchg
addr16
xor
pop
ins
adc
leave
ins
test
mov
fnstenv
cmp
cmp
add
mov
inc
mov
rcr
lea
xor
xchg
test
jne
out
mov
jb
imul
mov
test
mov
ins
addr16
adc
sti
mov
pop
xor
fbld
pop
rcl
adc
jp
imul
ja
enter
cmp
int
cmps
shl
pop
push
(bad)
fld
mov
rol
cld
aam
rep
lds
out
sub
ror
mov
push
aam
dec
mov
cdq
add
cmp
ins
pop
cmp
jnp
ss
cmp
mov
aad
pop
mov
sbb
mov
scas
cmp
stos
push
xchg
mov
imul
fnstsw
cwde
sbb
add
arpl
xor
mov
std
pop
add
aad
mov
hlt
fldenv
lods
into
sub
add
dec
mov
push
shr
shl
inc
sar
cdq
fwait
cs
jle
mov
sub
je
mov
(bad)
loope
movs
adc
sub
daa
das
(bad)
stos
adc
jb
push
ss
sub
add
imul
and
push
mov
mov
jo
sub
in
arpl
div
inc
into
mov
dec
pop
and
mov
cld
mov
(bad)
mov
cmp
dec
adc
pop
aad
jmp
xor
je
je
mov
aad
movs
stos
mov
jo
rcr
add
mov
mov
jecxz
inc
adc
ja
loop
inc
test
pop
push
ret
add
cmp
pop
dec
adc
loop
xchg
in
gs
retf
test
pop
lahf
stc
rcr
dec
xchg
hlt
aam
pop
fwait
jmp
and
in
stc
jno
mov
sub
xor
pop
push
cmp
lock
loope
out
sub
mov
outs
cmp
imul
hlt
inc
xor
mov
jb
test
mov
push
ror
or
inc
dec
loopne
inc
nop
shr
fisubr
shl
cmc
inc
rcr
jmp
jecxz
sbb
shr
mov
mov
xor
les
sub
imul
pop
jae
ret
or
pop
mov
sub
mov
push
(bad)
push
mov
lods
jnp
inc
xchg
inc
pop
jmp
adc
je
mov
mov
dec
scas
loopne
pop
aam
and
sbb
es
mov
rcr
inc
repz
xchg
xchg
mov
call
(bad)
stos
jmp
xor
xchg
dec
inc
aas
xor
pop
and
test
fist
out
call
mov
lea
cmps
(bad)
test
adc
mov
sub
fcompp
dec
std
frstor
sub
push
inc
je
or
(bad)
xor
test
jp
push
adc
mov
(bad)
mov
hlt
xchg
(bad)
xchg
leave
cdq
inc
aam
shr
add
xchg
arpl
daa
push
inc
lock
inc
loope
xor
mov
pop
ret
mov
repnz
pop
cmp
jne
jne
not
mov
mov
out
pop
ja
xchg
inc
je
jnp
xchg
sbb
jb
lahf
movs
out
dec
pop
sub
hlt
xor
in
(bad)
bound
xchg
lidtd
pop
fcom
jnp
in
xchg
ficomp
add
jo
out
push
idiv
add
add
mov
lahf
gs
push
das
movs
jg
jg
adc
iret
shl
xor
ret
pusha
daa
cmps
adc
jmp
adc
jo
push
mov
mov
adc
push
inc
sbb
pop
bnd
(bad)
adc
sub
dec
xor
loope
dec
dec
inc
in
jl
bound
and
les
mov
retf
gs
add
out
sbb
leave
test
dec
loopne
pop
and
fs
sub
jmp
imul
fist
(bad)
lock
(bad)
and
cmp
in
sbb
das
adc
leave
retf
rcr
(bad)
mov
add
lock
loopne
sar
sar
inc
mov
sbb
xor
mov
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
cmp
addr16
(bad)
cdq
or
in
mov
ret
fcompp
xchg
dec
leave
into
into
sbb
inc
(bad)
fnstcw
jnp
mov
inc
xchg
mov
das
loop
mov
dec
clc
add
test
jns
scas
jecxz
repnz
inc
ja
retf
inc
pushf
fiadd
inc
scas
out
mov
popa
mov
xchg
mov
and
push
jp
popf
js
mov
sub
jg
xor
fcom
ret
lahf
stos
div
daa
int
popf
hlt
outs
push
and
inc
pop
(bad)
xchg
test
or
das
push
cli
test
dec
cmps
cmp
jo
jmp
lea
adc
test
jmp
(bad)
mov
xchg
sub
fs
rcl
push
sub
loop
inc
pop
and
xor
cmp
stc
cli
retf
add
adc
(bad)
lods
pushf
mov
gs
push
mov
das
sbb
lds
ud0
scas
fisttp
arpl
and
hlt
(bad)
jno
sbb
(bad)
(bad)
lahf
in
call
(bad)
(bad)
leave
stc
popa
or
inc
jo
inc
or
(bad)
aaa
sbb
idiv
pop
int
cmp
adc
pop
mov
mov
mov
iret
mov
adc
push
in
and
and
arpl
popa
xor
jb
jns
cmp
pop
mov
mov
lds
jge
scas
aaa
sub
jmp
jge
out
je
jo
ror
mov
mov
rcl
xor
pop
pop
leave
imul
ja
mov
and
xor
xor
push
pop
dec
das
dec
add
popa
rcl
xor
sub
out
mov
jg
ja
mov
or
dec
mov
ds
mov
in
icebp
add
(bad)
cmps
push
mov
and
rcr
sbb
(bad)
ror
ror
pop
fild
cmps
sbb
gs
inc
add
jno
push
cmp
loopne
repz
retf
xchg
mov
inc
xchg
pop
pushf
mov
mov
stos
pop
jmp
mov
sbb
data16
add
pop
into
std
push
icebp
add
sub
and
jl
cli
shl
adc
sub
xor
xchg
xchg
rcr
lea
cmps
outs
push
out
xor
cmp
outs
clc
xor
shl
cs
push
dec
inc
imul
pop
mov
sbb
dec
inc
mov
(bad)
mov
repnz
sbb
or
fistp
push
mov
pop
cmp
add
(bad)
int
pop
mov
idiv
idiv
popa
cmp
out
or
xor
jmp
jbe
adc
mov
inc
xor
outs
adc
ret
adc
cwde
add
sub
sbb
vpaddd
mov
daa
cmp
stos
push
pop
xchg
adc
mov
mov
dec
mov
mov
xchg
test
cmps
cli
mov
jecxz
jmp
pop
movs
dec
cmp
idiv
xor
mov
push
movs
repz
mov
scas
call
dec
or
shr
inc
fiadd
les
sbb
nop
cmp
ins
movs
jge
jbe
fistp
dec
push
mov
xor
or
adc
pop
not
cmp
jge
adc
cmp
jl
loope
ds
fsubrp
movs
outs
inc
mov
int3
inc
sbb
xchg
fmul
mov
call
add
add
pushf
add
sub
sbb
dec
cwde
or
cmps
xor
scas
xor
mov
inc
mov
push
sbb
pusha
loopne
cmps
fmul
scas
call
ret
mov
push
jp
(bad)
xor
cs
xor
out
dec
pop
sbb
ret
xchg
jecxz
or
loopne
movs
xchg
inc
in
dec
inc
sar
pop
and
or
gs
fisub
push
push
loop
adc
shl
aas
fisubr
push
outs
mov
cld
scas
push
int3
lods
ss
or
retf
cld
push
mov
mov
mov
addr16
loopne
adc
addr16
lock
pop
jle
inc
pop
pop
test
jmp
pusha
inc
and
int3
and
in
cmp
fmul
retf
popf
add
mov
pop
sti
add
imul
adc
js
out
retf
scas
(bad)
cmps
(bad)
iret
pop
add
ret
xchg
mov
ja
adc
out
mov
jle
icebp
lock
jns
int
lock
cld
(bad)
mov
ja
mov
fs
arpl
and
bound
out
retf
pop
lock
or
ja
jae
add
shl
in
dec
inc
adc
in
xchg
es
iret
sub
mov
xor
pop
xchg
lods
cmp
ficomp
jb
inc
(bad)
jnp
push
adc
retf
lods
test
push
into
iret
xor
pop
adc
cmp
pop
inc
aas
jmp
shl
idiv
enter
les
or
sbb
std
in
mov
cs
cld
movs
popa
jmp
or
ret
or
push
lea
pop
lahf
inc
dec
lahf
mov
cmp
xor
push
mov
cmp
aas
sub
adc
frstor
sub
jle
xor
out
jecxz
push
pusha
mov
cld
inc
mov
sbb
cmc
cmp
inc
loopne
jp
mov
xchg
jmp
mov
pop
hlt
into
daa
out
in
cmc
adc
adc
and
in
or
inc
repz
mov
call
xchg
inc
mov
cwde
mov
test
push
test
push
push
push
ret
loop
push
lock
mov
(bad)
fstp
sub
mov
sbb
sbb
mov
jge
xor
iret
loopne
mov
cmps
mov
(bad)
sbb
dec
je
xchg
(bad)
test
cmp
xchg
push
es
push
inc
out
lods
mov
(bad)
ins
push
stos
into
xchg
and
jns
iret
scas
dec
mov
out
call
test
sub
push
cmps
movs
fwait
or
cmc
xchg
dec
pop
aas
arpl
pop
xchg
(bad)
mov
cdq
mov
mov
(bad)
push
icebp
dec
pop
add
xlat
sub
clc
mov
in
xchg
and
dec
ss
fld
clc
sub
sub
aaa
fisttp
inc
pushf
inc
or
mov
pusha
jp
popa
lock
shl
xchg
dec
jg
jmp
adc
mov
in
out
aas
js
jnp
sti
pop
add
js
sbb
mov
call
dec
out
addr16
push
xchg
fistp
clc
lock
popa
in
stc
cmps
cmp
push
mov
mov
jmp
and
jmp
loope
pusha
sti
jae
shr
jnp
outs
xchg
inc
xchg
(bad)
jecxz
ds
es
inc
mov
pop
test
repz
xchg
in
call
test
xchg
mov
stos
add
pop
cmp
sub
es
cmp
mov
mov
call
in
js
jecxz
jb
imul
sahf
ja
xchg
jg
cwde
dec
fisub
and
adc
sub
fdivr
adc
xor
dec
and
mov
add
loope
push
idiv
and
inc
xchg
cmp
out
mov
pusha
adc
sub
cs
or
into
into
fwait
mov
mov
out
inc
pop
dec
js
ja
adc
das
cmps
jl
jns
add
cmovo
push
and
jo
inc
leave
iret
mov
inc
sbb
add
add
jo
aam
inc
test
and
rep
test
clc
dec
mov
pop
cmc
xchg
cmp
xchg
popa
pop
mov
xlat
imul
adc
push
mov
pop
in
mov
jle
jmp
cs
mov
fmulp
mov
add
push
pop
pop
pop
dec
mov
cli
xor
retf
xchg
pop
push
pop
mov
fcomp
cmp
stc
pop
js
mul
or
adc
test
pop
dec
mov
mov
pop
addr16
dec
and
(bad)
pop
sub
ret
and
xor
xchg
arpl
fwait
ret
and
cld
jns
inc
inc
add
adc
clc
bound
mov
jmp
rcl
sbb
push
dec
rol
cwde
cmc
mul
push
call
dec
adc
jl
ja
leave
mov
sbb
daa
jno
xchg
ins
test
cmp
or
dec
aaa
daa
(bad)
fstp
pop
frstor
in
std
mov
sbb
stos
mov
mov
mov
rcl
jg
sti
lock
aam
xor
mov
inc
xchg
cmp
add
push
inc
idiv
cmc
or
push
and
adc
gs
push
add
data16
jns
fiadd
test
test
jne
mov
push
gs
ror
mov
xchg
sbb
mov
scas
jae
into
jge
cmp
loop
push
das
cmp
pop
push
pop
ja
or
mov
dec
in
fwait
mov
jbe
cmp
retf
in
dec
loopne
pop
lds
(bad)
adc
and
lods
cmp
mov
ror
jae
inc
mov
mov
mov
xchg
ins
nop
rcr
mov
stos
mov
mov
lahf
cld
xor
fdiv
mov
call
push
stc
jbe
gs
stos
bound
mov
outs
cmp
push
jb
cmp
das
pop
inc
stos
mov
xlat
ins
lock
clc
add
sub
pop
repz
cdq
add
mov
push
xchg
push
hlt
in
test
cs
adc
pop
or
push
aad
call
in
repz
into
pop
mov
mov
clc
xor
jle
das
aam
jge
cli
add
je
pusha
out
fimul
push
pop
loop
inc
icebp
bound
rcl
lock
loope
pop
and
jne
(bad)
mov
xchg
je
sub
cld
lods
mov
adc
loopne
arpl
inc
pusha
test
cmc
cmc
pop
cwde
dec
cmc
xchg
retf
push
pop
mov
pop
outs
(bad)
movs
jge
not
inc
dec
sbb
and
ins
jmp
xchg
loopne
fldcw
out
xor
inc
sar
in
repnz
xchg
xchg
jbe
popf
inc
in
adc
mov
ret
retf
enter
mov
mov
sub
jge
push
jne
ss
or
push
jge
sub
sub
call
jae
inc
dec
inc
call
mov
or
mov
arpl
sbb
cld
je
and
jb
sub
mov
call
sbb
xchg
sahf
neg
in
mov
movq
std
xchg
adc
std
add
xchg
or
std
push
rol
mov
cmp
jl
and
fnstsw
cmp
pop
shl
fs
addr16
add
ins
mov
xchg
stos
adc
mov
ret
mov
jmp
push
loop
dec
dec
jge
push
fnstcw
xor
mov
(bad)
add
pop
loopne
jg
inc
dec
lock
cld
(bad)
jmp
cmp
cdq
push
aam
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
aad
and
(bad)
jecxz
icebp
xchg
mov
fstp
out
in
inc
sbb
(bad)
jo
xchg
inc
not
fs
cmp
jno
(bad)
mov
fisubr
jnp
lahf
out
push
std
mov
lahf
lock
in
add
jno
adc
push
int3
mov
cmp
mov
test
(bad)
adc
xchg
adc
ins
stos
sysret
fucomip
iret
inc
sub
cmps
push
and
cvtpi2ps
adc
dec
mov
in
imul
ins
movs
mov
(bad)
out
jo
sti
push
ret
jmp
jmp
les
out
popf
ss
mov
cmp
push
not
xchg
je
mov
enter
lods
out
push
or
clc
push
mov
push
cmps
sub
dec
mov
movs
bound
xor
jne
adc
sbb
xchg
call
push
jo
mov
jo
sbb
jg
cmps
arpl
scas
adc
das
pop
mov
and
test
sub
imul
arpl
xor
nop
xor
cmp
fadd
cmp
ret
test
rcl
ss
push
in
mov
loop
pop
push
cs
xchg
std
enter
xor
es
sub
add
loopne
push
xor
inc
pop
xchg
add
mov
mov
popf
ds
cmp
or
adc
stos
lods
and
mov
aas
adc
mov
or
add
push
dec
xor
mov
pop
sbb
or
push
xchg
xor
xchg
or
xor
lds
in
adc
pop
push
and
ins
inc
daa
and
mov
repnz
sub
cmp
xchg
add
cmps
inc
sub
xchg
mov
mov
leave
(bad)
xor
test
push
int3
mov
xchg
xchg
mov
pop
shr
cmps
push
mov
arpl
inc
aaa
mov
sub
aad
arpl
js
cli
test
loop
mov
shl
push
cli
mov
repz
mov
lds
sbb
xchg
stos
(bad)
movs
ins
pop
faddp
popf
jmp
and
lea
enter
lods
out
push
adc
sub
push
imul
xchg
out
and
mov
imul
or
cdq
pop
jp
jl
inc
adc
mov
mov
cmp
cli
push
pop
jle
jns
fld
mov
xchg
int3
sub
mov
fist
(bad)
mov
or
loop
int3
mov
pop
mov
arpl
jmp
call
adc
mov
push
(bad)
fsubr
mov
out
jmp
inc
mov
cmp
adc
adc
sbb
cmp
popf
es
iret
and
jg
fisttp
dec
pop
push
jge
adc
sub
repnz
push
mov
outs
or
imul
inc
dec
dec
xor
scas
add
xor
xchg
add
and
inc
imul
scas
nop
cmps
das
cli
adc
mov
pop
jnp
lahf
(bad)
js
dec
mov
mov
pop
movups
addr16
scas
int3
out
jl
sbb
mov
xchg
mov
xor
sbb
adc
push
mov
rcl
mov
enter
pop
adc
mov
dec
mov
outs
clc
adc
cmps
cld
ds
movs
jmp
jbe
cmc
jp
imul
and
hlt
mov
sub
bnd
pop
cmps
adc
pop
push
sbb
sub
je
add
imul
daa
sub
inc
jae
out
or
ds
scas
sub
mov
mov
in
push
mov
jbe
sub
push
jns
sbb
dec
or
xchg
lahf
aam
ins
dec
inc
in
xchg
push
lock
push
and
mov
call
daa
push
shl
dec
dec
add
or
ins
jb
dec
retf
add
inc
lea
mov
dec
inc
outs
jmp
dec
push
cmp
push
mov
xor
ds
adc
pop
mov
mov
mov
aad
pop
cmp
dec
std
(bad)
mov
popa
mov
pop
pop
xchg
leave
pushf
lds
cwde
ja
mov
pop
add
or
leave
mov
mov
paddsw
ss
xchg
dec
xor
dec
lods
adc
sbb
sbb
jbe
jl
pop
aas
xlat
cwde
sub
(bad)
popf
sbb
add
(bad)
cmp
pop
pushf
pop
push
xchg
pop
push
cmps
fdiv
call
cwde
fistp
cwde
xlat
sbb
push
sub
mov
retf
mov
xor
mov
lock
iret
sahf
out
push
jle
data16
mov
mov
xchg
aas
dec
les
and
sbb
sar
inc
sbb
cs
jne
pop
add
ficomp
movs
ret
adc
addr16
sbb
pop
mov
cmps
cli
mov
sbb
retf
jae
dec
and
dec
mov
es
and
ret
sbb
shl
sbb
mov
lods
lods
pusha
sbb
mov
out
shr
and
jle
mov
rcl
or
test
aaa
pop
push
push
pop
mov
sbb
sti
cli
(bad)
aas
mov
sbb
les
mov
mov
out
mov
iret
jle
pop
or
inc
and
adc
ja
call
push
push
aam
cmp
popa
ret
ins
in
xchg
sub
xor
cmp
mov
xchg
dec
stos
out
ds
popf
call
jmp
fsub
scas
jecxz
repnz
and
push
repnz
push
or
daa
jo
sar
aad
sub
cmp
ins
mov
sub
ret
mov
ret
xor
dec
xor
fisttp
enter
cmp
or
ror
psrlq
fimul
jns
mov
cld
stos
lods
fidiv
mov
popf
ret
leave
sub
mov
aad
dec
cmp
aad
movs
cli
imul
fdivrp
mov
xchg
mov
bound
jmp
add
loopne
repnz
push
icebp
push
popf
add
(bad)
dec
leave
test
aam
xor
(bad)
adc
dec
cmp
leave
fs
xchg
adc
adc
fsubr
jg
mov
cmp
lods
rol
sub
adc
into
shl
inc
mov
xchg
fidiv
mov
cld
inc
movs
and
inc
in
fdiv
cli
icebp
jae
xor
jo
dec
in
mov
push
pusha
dec
cli
fisub
add
xchg
pop
and
xchg
inc
test
mov
mov
jns
hlt
(bad)
cmp
and
jge
pop
jae
push
pushf
fnstcw
inc
mov
fidiv
sbb
test
cs
xor
add
pop
daa
arpl
mov
pop
cmps
jmp
inc
or
cli
mov
xchg
and
aam
dec
xchg
xor
cld
aam
xor
div
push
and
xor
mov
cmp
imul
iret
fstp
(bad)
gs
cmp
xchg
inc
pop
aam
loope
push
xor
sub
jg
out
cli
cdq
inc
mov
inc
and
jmp
pop
xchg
rcl
je
bound
repnz
fbstp
fild
or
xor
dec
jle
imul
jae
push
aam
xor
push
aad
xchg
or
ins
sbb
sub
inc
or
dec
adc
push
jb
std
pop
push
fnstsw
mov
hlt
cli
push
push
xor
xor
imul
mov
dec
out
jb
popf
mov
retf
dec
imul
movs
jecxz
outs
cld
(bad)
in
das
sti
movs
xchg
mov
lods
inc
xchg
xchg
and
pop
and
movs
aaa
sti
sbb
cmps
dec
xor
pop
stc
jmp
cmp
test
push
mov
(bad)
popf
scas
nop
jbe
(bad)
test
call
cld
jp
imul
es
xor
bswap
inc
adc
shl
adc
jmp
(bad)
mov
mov
push
jmp
or
sub
dec
inc
and
jb
sbb
add
aas
loop
sbb
jnp
sbb
sub
mov
fsubr
mov
mov
call
retf
sbb
in
jno
or
pop
dec
dec
ret
daa
jmp
add
out
inc
push
shl
jp
data16
mov
int
push
or
inc
ror
enter
xchg
stos
inc
mov
push
and
dec
mov
ret
sbb
mov
lahf
sti
mov
push
clc
dec
cmp
and
out
pop
push
call
adc
into
jle
xchg
dec
push
and
jnp
inc
mov
jb
jno
xchg
pop
jecxz
push
ds
popf
mov
ins
dec
aas
retf
das
(bad)
retf
add
rcl
jle
push
out
mov
movs
fdiv
mov
ds
in
xchg
(bad)
or
shl
inc
and
cmps
aas
jne
test
sbb
push
fcomp
fcmovne
xchg
cmp
inc
ins
push
js
fs
aad
pop
lds
test
xlat
xchg
add
push
and
adc
(bad)
mov
jnp
lods
rcr
fild
and
push
sbb
mov
test
test
push
movs
pop
(bad)
cmp
sar
xor
xchg
jnp
push
jge
out
scas
ins
mov
jb
fadd
call
dec
sub
stos
and
sahf
xchg
cmp
fisttp
dec
mov
je
fwait
nop
dec
rcr
jno
(bad)
cmps
loope
xchg
inc
mov
push
ficom
int
shl
push
(bad)
repz
js
dec
mov
pop
enter
xor
push
cdq
lahf
and
out
jle
sahf
jb
xor
pop
xor
adc
shr
push
(bad)
fwait
dec
(bad)
in
xor
movs
in
clc
mov
jge
jnp
call
fist
pop
xor
xor
les
sub
inc
inc
pop
dec
lds
bound
loopne
jb
or
lods
dec
cmp
test
out
or
adc
jb
ins
pop
das
fidivr
push
xlat
loop
std
jp
test
cdq
inc
int3
or
in
sbb
sub
xchg
jb
mov
xor
cmps
retf
js
scas
mov
(bad)
pop
inc
in
mov
mov
xor
add
shl
sbb
lea
(bad)
mov
std
bound
mov
loopne
jp
ror
sbb
lods
jp
mov
jmp
rcl
or
ret
retf
jmp
out
cmp
inc
xor
inc
aaa
and
inc
pop
div
push
shl
mov
mov
xor
xchg
xor
jmp
loope
fcom
mov
cmp
mov
call
cli
test
cli
add
lods
js
retf
shr
jmp
(bad)
sti
xchg
jbe
es
ins
push
int
retf
sub
mov
out
push
mov
out
mov
idiv
push
pop
jo
cli
div
push
xor
retf
mov
stc
nop
daa
fidivr
or
call
mov
add
ret
sbb
out
fld
enter
cmp
pop
call
jmp
add
cli
daa
lock
loopne
sar
jg
dec
inc
test
dec
xchg
adc
scas
out
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
xor
into
fidivr
cmp
fstp
xor
fnstenv
xor
and
cmp
xchg
push
fnstcw
out
push
jno
sahf
pop
icebp
cld
(bad)
and
push
jg
jo
repz
mov
sti
push
inc
xchg
cmps
call
pop
cmc
aam
lods
in
dec
xchg
jl
mov
ins
xchg
lods
add
mov
jl
rcl
scas
jecxz
pop
ret
les
or
jl
push
lock
xchg
pop
aas
test
std
inc
repz
in
imul
fdiv
sahf
sub
aad
jne
xor
arpl
xor
fcomip
add
inc
scas
out
xor
call
popa
test
sub
pop
inc
or
sub
mov
mov
stos
out
fadd
(bad)
mov
push
in
cdq
(bad)
out
xor
ror
ror
(bad)
fstp
xchg
and
ins
ins
movs
inc
sbb
loop
xor
pop
jo
(bad)
lahf
neg
add
cld
ret
fstp
xchg
mov
pop
sub
call
ins
test
rcr
mov
or
add
imul
pusha
lock
sbb
out
dec
fs
add
inc
cmc
mov
mov
add
test
xchg
push
call
xor
rcr
jg
mov
stos
mov
(bad)
mov
scas
cmp
repnz
pop
out
and
sub
jmp
popa
mov
adc
and
jecxz
jns
not
leave
sbb
cmp
not
xchg
dec
push
xor
xchg
and
popf
inc
imul
call
gs
jbe
jo
test
in
push
push
jnp
mov
jmp
arpl
inc
arpl
jp
loop
mov
in
aad
mov
push
ror
ss
mov
cmp
cld
pusha
sub
xchg
aaa
adc
fild
leave
data16
aad
pop
gs
call
and
pop
pop
sub
pushf
and
jo
pop
(bad)
dec
dec
jge
ret
arpl
and
dec
adc
std
gs
xchg
mov
lods
jmp
(bad)
jnp
push
dec
xchg
iret
std
bound
hlt
jmp
adc
pop
sbb
ficomp
and
call
xor
push
xor
lahf
call
fs
sbb
out
mov
sbb
stc
cmp
cmc
imul
inc
aad
jl
in
retf
fist
cdq
iret
pop
mov
sbb
xor
push
(bad)
xchg
aaa
xor
and
clc
mov
jnp
in
sbb
rcr
fcomp
xlat
mov
(bad)
cmp
pop
adc
loopne
std
push
movmskps
push
stos
xor
ds
xor
ins
test
or
inc
sub
pop
inc
call
data16
sbb
pop
add
daa
test
loopne
mov
ins
imul
fld
xchg
cmp
xor
sahf
lock
je
pop
adc
xchg
adc
das
out
cmps
scas
retf
jecxz
inc
or
push
movs
mov
mov
aas
xor
cwde
and
cli
adc
xchg
daa
fsub
or
addr16
icebp
sub
add
retf
ss
xchg
jae
mov
in
push
sbb
in
dec
ficomp
repnz
mov
mov
sub
cmc
or
test
rcr
gs
outs
jnp
fcom
repz
aaa
pop
inc
aam
or
jecxz
push
mov
cmp
jae
ror
or
mov
fdiv
scas
adc
movs
dec
ficom
add
xor
dec
test
sbb
aad
xlat
xor
and
inc
iret
mov
jecxz
ins
lods
cwde
sbb
pop
imul
mov
popf
pushf
push
jne
enter
mov
pop
jl
mov
xor
ror
cdq
and
popa
addr16
nop
popf
mov
sbb
add
stos
sub
fistp
rcl
mov
sub
ss
sbb
push
pop
push
mov
shl
pop
aas
jg
nop
inc
mov
xor
dec
mov
mov
mov
or
movs
dec
sub
pop
add
jl
stos
push
daa
push
adc
jmp
xchg
and
jbe
(bad)
mov
adc
lods
dec
inc
xchg
cmp
std
fnstsw
and
mov
fcmovbe
jno
push
call
xor
neg
aam
cmp
inc
push
outs
add
push
jne
sbb
xor
jae
mov
and
cmps
dec
jbe
enter
push
dec
inc
jmp
jmp
jne
fcom
mov
movs
mov
adc
jecxz
hlt
adc
fs
mov
in
jg
loopne
es
xchg
mov
xchg
add
inc
out
ins
xchg
rol
mov
cmp
(bad)
daa
inc
daa
popa
mov
ins
lss
pop
jp
jne
xchg
icebp
outs
fimul
in
neg
cs
pop
jbe
pop
ja
ret
push
fnstcw
js
out
imul
push
push
cli
sub
sub
in
fs
mov
sbb
cmps
add
and
ins
xchg
xchg
mov
mov
mov
mov
add
arpl
pop
jnp
stos
cmp
fcmovnu
div
add
cmp
aaa
jne
pop
aam
inc
sub
push
push
or
and
std
movs
sub
lods
sti
push
jp
mov
(bad)
jl
sub
cmp
daa
sbb
lahf
(bad)
ja
pop
sahf
sub
call
icebp
inc
xor
pop
movs
lahf
pop
cld
stos
cmp
popa
mov
(bad)
sbb
dec
add
fwait
loope
push
push
mov
out
std
xor
sub
mov
movs
jnp
popf
pop
mov
cmp
adc
mov
mov
cli
xchg
call
ret
cmp
(bad)
mov
push
(bad)
(bad)
mov
int
add
aam
sub
add
jns
stc
shr
scas
fwait
arpl
dec
jmp
dec
stos
fist
out
or
jns
add
pop
enter
ds
iret
sbb
repz
out
pusha
dec
lds
and
pop
cmp
bound
jle
and
xchg
dec
xor
mov
scas
out
aad
xor
setge
mov
pop
pop
push
and
fmul
repnz
and
push
inc
push
mov
movs
dec
jmp
shl
push
pusha
fwait
stos
add
mov
pop
iret
repz
out
aaa
push
push
push
(bad)
adc
or
(bad)
push
mov
imul
je
adc
scas
ins
fsubr
retf
jb
scas
ja
xchg
mov
dec
and
imul
repz
mov
loop
(bad)
jnp
jne
xchg
cs
xchg
inc
add
out
shl
cdq
mov
lock
enter
and
and
dec
ins
(bad)
cmp
add
mov
mov
xchg
mov
jnp
arpl
mov
adc
fxch
(bad)
sub
dec
lock
test
adc
int
aam
push
xchg
sub
sbb
cmps
dec
(bad)
pop
adc
das
xchg
or
mov
jne
ja
(bad)
xor
dec
mov
dec
push
retf
out
dec
aam
in
inc
in
into
mov
cld
adc
ror
jne
cmps
mov
pop
out
stos
jae
mov
pop
cmp
dec
jmp
dec
bnd
(bad)
pop
iret
cmp
sub
and
cmp
mov
clc
jp
les
cwde
adc
(bad)
ss
gs
(bad)
sbb
sub
pop
(bad)
cmc
jmp
lea
retf
push
adc
cmp
push
(bad)
test
inc
mov
xchg
jne
mov
pop
pop
and
and
dec
mov
push
xchg
shl
pop
mov
daa
ret
sbb
xor
scas
imul
cs
jp
icebp
jnp
nop
scas
cmp
loop
je
dec
dec
push
or
ficom
add
outs
mov
xchg
sbb
or
pop
ret
and
jg
and
jmp
mov
jl
xchg
sbb
adc
loop
inc
mov
xchg
fld
and
xor
lods
(bad)
test
pop
push
xchg
ror
xchg
fldenv
cmp
movs
cmps
sub
jge
inc
cmp
inc
aad
mov
fwait
cmp
pop
gs
fs
call
pushf
add
popa
fucomp
ins
adc
fisubr
pusha
jns
pop
frstor
mov
inc
in
mov
pop
(bad)
retf
rol
adc
or
xchg
int
mov
adc
popf
inc
add
cmp
add
rol
cmp
cld
sbb
lods
(bad)
repnz
(bad)
dec
(bad)
or
retf
mov
mov
fdiv
popa
(bad)
bound
popa
pop
and
aaa
shl
pop
mov
push
repz
push
pop
or
jl
add
mov
in
(bad)
cld
mov
mov
into
dec
lock
jae
cmc
pop
mov
xchg
and
cmp
push
scas
cmc
jo
xor
sub
pop
in
out
push
jp
vpsubd
aad
out
mov
or
add
mov
and
mov
repz
lahf
push
out
retf
in
dec
mov
fsub
xchg
in
mov
mov
fcmovnu
ds
(bad)
cmp
sbb
xchg
push
add
jae
mov
neg
xchg
(bad)
push
popa
cmp
pop
push
dec
jl
push
mov
jl
clc
pusha
cdq
xchg
sub
imul
sbb
xchg
pop
push
add
nop
mov
mov
fld
test
jae
push
sbb
mov
mov
movs
push
mov
xor
sub
sub
ss
in
cld
jge
and
loop
pop
push
nop
jg
push
in
and
inc
mov
mov
call
(bad)
pop
ret
xchg
shr
adc
pop
test
lds
int
dec
or
fdivr
sub
mov
loopne
pushf
movsx
cmp
dec
shl
mov
cmp
xchg
stc
xchg
pop
and
pop
lea
dec
mov
shl
xchg
push
(bad)
push
sbb
call
and
jae
mov
mov
or
dec
lahf
sahf
fcom
in
data16
aam
jbe
fist
inc
pop
int
ret
cs
ins
jmp
ins
mov
sbb
neg
aaa
inc
gs
mov
ins
and
jb
pop
push
dec
(bad)
movs
pop
std
dec
cdq
adc
cmps
mov
outs
mov
pop
ficomp
pushf
call
xor
adc
ss
or
adc
dec
test
mov
cdq
dec
ja
test
and
xor
jne
and
push
mov
jmp
aad
or
loopne
push
test
cmp
add
addr16
and
push
pop
std
adc
lock
and
xor
mov
stos
stos
shr
add
adc
and
div
stc
push
xchg
retf
loop
jg
push
cs
cwde
cmp
or
out
pop
out
jno
mov
pop
ror
ja
mov
add
and
iret
mov
push
dec
pop
inc
xchg
fdiv
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
jns
in
pop
ja
pop
sub
fs
sub
cmp
jo
mov
xor
mov
(bad)
cdq
sbb
pop
adc
inc
gs
(bad)
fstp
into
mov
mov
in
repz
add
jp
adc
mov
mov
dec
cmp
sahf
lock
inc
sub
mov
inc
aad
mov
jl
jmp
in
out
cmp
xchg
scas
jnp
or
daa
fldcw
es
icebp
cmovne
mov
pop
push
pop
imul
cmp
sub
or
inc
into
and
or
xor
pop
or
push
xor
fiadd
test
mov
mov
lods
push
call
xor
imul
out
lock
cmp
pop
pop
mov
push
mov
xchg
es
cdq
out
xlat
inc
rcl
xchg
test
jge
movs
push
in
scas
imul
and
daa
mov
call
push
cwde
cmp
cwde
push
lods
xchg
inc
repz
jmp
rcr
js
push
arpl
mov
pop
adc
ret
mov
push
adc
xor
xor
and
sub
xchg
pop
cmp
(bad)
movs
sbb
scas
ret
mov
cmp
dec
arpl
jnp
push
xor
jbe
push
jmp
je
or
mov
mov
enter
sbb
cmp
mov
push
retf
pop
mov
(bad)
mov
dec
hlt
pop
adc
adc
scas
outs
out
cld
sbb
mov
jp
cs
mov
out
sahf
pusha
rcr
repz
xchg
mov
ins
add
xchg
pop
jae
movs
jecxz
jns
push
sbb
movs
in
or
cmps
xor
pop
xchg
jp
in
cmp
aam
lods
pop
sbb
iret
mov
into
fistp
mov
xchg
inc
xchg
iret
add
pop
fisub
ds
dec
sub
pop
or
sbb
cmp
pop
movs
jmp
dec
lock
out
mov
repz
sbb
xchg
adc
xchg
aas
lods
pusha
rcl
adc
sub
jecxz
(bad)
sti
in
daa
jne
dec
clc
cli
leave
xchg
sub
lods
cmp
(bad)
fcomp
(bad)
out
(bad)
cmps
std
nop
push
cwde
pop
xchg
js
daa
inc
cmps
cld
push
mov
inc
dec
movs
vpsrld
mov
sti
pop
push
retf
or
push
sbb
loopne
mov
fsub
js
test
scas
xor
repnz
mov
stos
mov
in
jae
pop
call
shl
inc
mov
out
repz
push
std
sub
jbe
xlat
xor
and
arpl
leave
imul
push
jno
pop
dec
dec
adc
push
push
dec
push
sub
shl
xlat
iret
popa
pushf
je
call
and
push
out
jle
push
in
es
sub
les
sub
push
push
push
sub
dec
inc
in
jge
(bad)
aaa
stos
dec
mov
gs
les
call
dec
ficom
dec
fdivr
or
mov
push
inc
pop
iret
movs
arpl
xchg
mov
dec
lahf
jmp
stos
add
push
pop
out
mov
add
adc
(bad)
sbb
push
mov
adc
test
xchg
(bad)
je
or
pop
jp
lea
dec
cmp
sbb
mov
lods
dec
mov
fisttp
sbb
popa
idiv
jne
cmp
mov
aas
into
icebp
xor
movs
jp
dec
mov
sahf
push
out
push
jmp
dec
iret
push
and
cdq
aam
test
mov
outs
cmps
mov
xor
xor
out
or
test
leave
scas
dec
push
mov
or
mov
add
daa
xor
call
and
or
in
sbb
movs
popa
adc
aad
rcl
in
jp
fnsave
cmps
jmp
mov
in
repz
inc
xor
or
pop
ficom
jno
pop
pushf
jge
xor
inc
mov
pusha
xor
jle
(bad)
sti
es
dec
sbb
jmp
mov
lds
adc
jo
fs
scas
mov
sbb
push
xchg
sar
fisttp
xor
ret
jb
and
out
mov
(bad)
retf
ror
sti
sbb
fcomip
xlat
or
cli
stos
pop
mov
add
scas
inc
stos
(bad)
iret
xor
push
lods
lahf
je
retf
jno
mov
inc
int3
in
xchg
movs
fsub
pop
repnz
clc
cmps
adc
mov
sti
adc
div
lods
sbb
movs
jo
in
mov
jge
inc
push
mov
sbb
xchg
or
fstp
and
shl
popa
cwde
fist
push
addr16
cs
cwde
mov
jp
shr
into
in
test
leave
shr
add
iret
or
movs
out
lahf
adc
sub
popf
fist
jp
(bad)
lods
add
and
push
pop
mov
enter
imul
and
lds
inc
jne
inc
(bad)
adc
inc
push
xor
and
(bad)
cmp
pop
sbb
or
pop
and
sub
adc
cmp
cmp
in
xlat
mov
jae
sbb
mov
lds
in
aaa
cs
cmp
xchg
and
rol
mov
out
push
mov
ins
ret
cmp
sub
popf
lods
and
popf
jo
and
outs
mov
aad
cmp
stos
jno
sbb
xchg
ins
loopne
or
xor
mov
ror
mov
int3
movs
add
lods
jns
iret
pop
int3
adc
inc
sub
jg
fistp
sbb
jl
push
xor
in
outs
mov
in
ins
jne
xchg
ficomp
sub
cmps
cwde
fistp
jno
cmc
retf
jmp
xor
mov
and
dec
loop
mov
std
cwde
jge
mov
mov
retf
ret
call
mov
imul
xor
(bad)
or
sub
push
loope
test
nop
lds
in
test
adc
mov
xor
add
cmp
cmp
xor
xor
and
int3
in
cli
(bad)
fiadd
aaa
cmp
imul
sub
mov
sti
shr
stos
stos
out
repnz
dec
ja
mov
dec
sub
or
(bad)
popf
js
push
pop
shr
out
mov
shr
mov
loope
push
add
sti
jns
mov
lods
cld
mov
jb
les
dec
mov
aas
daa
repnz
cmp
je
daa
and
pushf
pop
jmp
fistp
and
and
es
arpl
stos
movs
pop
or
add
dec
mov
mov
out
sub
dec
mov
or
lea
pop
test
int3
hlt
jae
loopne
outs
adc
clc
std
retf
imul
sub
inc
xor
vmovupd
add
ficom
jnp
xor
popa
and
jne
sub
mov
jmp
mov
std
popa
or
sbb
aaa
loop
loop
cmc
mov
mov
mov
dec
sti
shl
xrelease
aaa
les
add
xchg
popf
xor
adc
mov
inc
dec
add
not
cmp
enter
jmp
dec
es
xor
outs
dec
ret
not
push
xchg
icebp
aad
into
rcl
shl
mov
aam
inc
jno
push
lods
loopne
adc
and
jo
jns
dec
in
inc
xchg
and
aad
jecxz
dec
into
call
inc
xor
jmp
neg
jo
gs
sub
pop
stc
xor
cmp
inc
cmps
icebp
imul
(bad)
jle
repnz
cmp
fwait
mov
or
test
hlt
popa
push
fld
fbstp
clc
fs
das
test
dec
sahf
bound
cwde
jo
into
imul
sbb
out
jmp
stc
cmps
inc
xchg
arpl
push
dec
aad
call
repnz
int
adc
mov
mov
or
pusha
push
out
pusha
aaa
daa
mov
pop
cld
daa
jp
xchg
xchg
in
mov
cmps
scas
sub
mov
xchg
and
loopne
sar
daa
push
adc
fisubr
in
in
mov
ret
adc
ins
test
push
std
(bad)
in
aaa
push
sub
cwde
lods
cmps
(bad)
aad
cmp
mov
push
jno
mov
adc
out
cwde
xor
popa
ffreep
fbld
dec
jle
dec
movs
movs
daa
xchg
pusha
jecxz
lea
mov
hlt
(bad)
push
dec
iret
cmp
add
pop
xor
jb
fst
add
pop
sub
xor
sub
(bad)
pop
sub
in
inc
xchg
xchg
inc
mov
outs
loop
retf
mov
inc
jo
call
mov
out
xor
test
adc
pop
xchg
repnz
loope
add
mov
or
loop
lahf
pop
in
or
hlt
jb
sbb
(bad)
pop
jl
sub
adc
retf
(bad)
add
cwde
retf
jle
clc
push
(bad)
sub
mov
cmp
push
jnp
xchg
dec
aad
in
loopne
or
mov
or
pushf
lar
rcl
cmps
aaa
(bad)
or
(bad)
push
cmc
lahf
aad
mov
ficomp
fisttp
std
pop
xor
jns
xchg
cs
rcl
adc
outs
sub
hlt
push
mov
les
fimul
or
mov
repnz
and
jno
aaa
jb
call
test
cld
push
rcl
jne
ror
or
fwait
cmp
sub
loopne
lock
mov
mov
lds
icebp
inc
pop
mov
hlt
(bad)
dec
mov
jb
jmp
loope
shr
xchg
out
mov
cmc
mov
or
cli
and
jbe
mov
ins
fcomp
mov
pop
lods
sbb
adc
xchg
sub
clc
push
(bad)
cli
dec
mov
mov
das
xor
js
loop
adc
push
popa
aaa
popf
mov
std
jecxz
sbb
movs
movs
xor
imul
sbb
in
sub
aas
pop
mov
daa
int3
dec
lods
sbb
mov
cmps
ficom
(bad)
dec
fnstsw
clc
je
add
push
out
loope
pusha
ret
in
and
push
out
cmp
sti
(bad)
sbb
and
pop
out
push
push
sahf
and
sbb
aad
lods
(bad)
lock
or
lds
fisttp
cmp
cld
push
mov
scas
xchg
pop
lea
mov
ror
shl
xchg
pop
pop
push
mov
ins
sti
mov
rcr
pop
loopne
sahf
sbb
xor
cmps
movs
gs
mov
cmp
push
aam
retf
movs
fs
pop
mov
dec
or
(bad)
mov
jle
jae
add
cmp
pop
popa
(bad)
out
in
loopne
add
(bad)
sbb
mov
push
dec
out
dec
rcl
(bad)
das
dec
idiv
rcr
push
stc
jmp
inc
lahf
sbb
fst
sub
ror
adc
and
shr
leave
sub
adc
xchg
retf
fcomp
lea
mov
fisubr
cmp
jae
ret
mul
cmp
jg
or
and
test
int
lods
(bad)
dec
pop
push
add
push
(bad)
cmp
sub
dec
call
adc
add
stc
aaa
lock
loopne
sar
sar
push
fld
mov
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
adc
mov
jnp
fs
push
push
cld
cmp
or
mov
jb
sahf
jno
repz
adc
dec
into
push
dec
inc
xchg
mov
jge
ret
cwde
sub
aas
out
ret
aad
mov
mov
in
jns
dec
mov
add
imul
mov
pop
mov
(bad)
push
stc
xor
dec
xchg
sub
dec
sbb
je
loop
xor
cwde
dec
xor
push
nop
pop
xor
cdq
(bad)
mov
mov
(bad)
mov
mov
icebp
call
mov
rcl
cld
pop
push
sub
shr
mov
push
mov
mov
sub
das
jmp
pusha
cmps
and
bound
popf
xchg
pop
inc
xchg
mov
fisttp
jb
xor
cdq
inc
cmp
fcmovb
dec
xchg
jg
scas
sub
rcr
mov
jno
retf
cmp
sub
adc
or
mov
cmp
shr
add
int3
mov
lahf
or
and
pop
into
mov
and
xchg
out
scas
push
sbb
gs
sbb
lahf
je
repnz
mov
xlat
cmp
pop
je
lods
add
loope
ss
xchg
jnp
mov
imul
fisubr
fisub
pop
scas
and
or
push
inc
stc
lods
mov
cmp
mov
dec
cwde
or
push
rol
iret
sahf
ins
retf
sbb
ret
xchg
fcomp
xor
mov
adc
iret
(bad)
cmp
sub
movs
mov
(bad)
mov
enter
cmp
cmp
out
xchg
lock
cmps
in
fiadd
stc
add
sub
repz
test
mov
daa
jecxz
cmp
jp
adc
cld
shl
pop
pop
inc
mov
sbb
inc
mov
mov
sar
fcom
popa
or
add
cmps
mov
pop
je
pop
fist
sub
mov
xchg
jmp
das
in
mov
inc
in
push
enter
pop
mov
test
stos
in
sbb
cmp
jg
xchg
test
test
ret
jno
adc
sub
retf
sbb
fbld
sub
ds
add
jbe
mov
fimul
mov
das
dec
jge
outs
cmps
lock
ret
bnd
in
stos
in
mov
addr16
push
fcom
mov
jo
lahf
outs
push
jp
ret
daa
inc
add
adc
push
(bad)
hlt
clc
inc
lods
fs
and
(bad)
out
push
mov
pop
int3
pop
adc
popa
adc
mov
adc
cdq
xchg
xchg
pop
div
jne
xchg
xor
xchg
fisub
ror
outs
adc
inc
jo
iret
mov
xchg
adc
dec
out
sub
fstp
dec
shr
mov
jmp
dec
shl
cmps
int3
idiv
mov
icebp
arpl
js
jns
popa
lods
push
in
push
mov
dec
and
push
ffree
xor
scas
clc
test
jmp
xor
jae
cwde
jnp
xor
and
jbe
jl
(bad)
loopne
xlat
cdq
stc
xlat
dec
dec
ror
mov
mov
retf
adc
outs
dec
cmp
push
enter
jmp
mov
out
push
das
push
push
jnp
ret
mov
sbb
jmp
int
sbb
call
mov
mov
stos
inc
push
not
pop
cmp
jae
(bad)
call
adc
dec
dec
pop
pop
outs
xor
pop
mov
div
mov
stos
shl
and
inc
shl
jae
xchg
movs
dec
fwait
leave
mov
rcl
mov
and
iret
ins
push
pop
pop
mov
ret
pop
sbb
add
xchg
in
mov
or
push
cwde
sbb
out
jl
(bad)
hlt
retf
sahf
or
int3
into
pop
dec
jg
sub
pop
mov
test
mov
(bad)
movs
xchg
and
and
iret
mov
push
xlat
scas
mov
add
out
adc
std
dec
or
cmps
jo
out
(bad)
in
cmp
daa
adc
hlt
cld
push
imul
cdq
test
js
repnz
xchg
sbb
jo
mov
stos
jmp
iret
mov
sbb
adc
pusha
(bad)
jmp
lock
add
mov
xchg
jl
mov
out
sbb
pop
or
ins
ret
into
sub
js
sub
push
call
push
pop
cmp
sbb
out
inc
in
outs
jns
aaa
pop
jle
repnz
int
pop
scas
popf
mov
retf
ja
imul
test
xchg
int3
shl
shl
xor
shl
scas
cmp
clc
sub
pop
(bad)
rol
mov
sbb
int
dec
fidiv
pop
pop
xor
sub
fisubr
dec
xor
sub
mov
xchg
inc
and
xchg
stos
push
mov
(bad)
popa
jle
mov
mov
in
sbb
nop
xor
iret
scas
mov
(bad)
call
jle
push
lea
pusha
in
mov
ins
aam
repz
adc
or
xor
nop
aam
xchg
lahf
retf
inc
idiv
mov
popa
xlat
mov
and
xor
fcmovb
call
dec
inc
mov
bound
mov
sbb
dec
imul
stc
mov
scas
mov
cmps
fistp
dec
bound
icebp
scas
int
xchg
cld
and
clc
xchg
aam
adc
inc
repz
or
inc
inc
xchg
movs
(bad)
in
mov
cld
cmps
pop
and
add
shl
cld
lods
int
cdq
in
(bad)
out
arpl
out
jmp
push
jmp
rcr
sar
sbb
adc
ins
jge
enter
cmp
sbb
pop
lock
jmp
ss
pop
lock
cli
loope
dec
xchg
faddp
or
sub
cs
pop
stc
jl
mov
xchg
shl
test
adc
xchg
push
ss
(bad)
adc
icebp
in
clc
imul
sub
es
movs
mov
inc
jnp
jnp
xor
ja
push
ror
or
call
mov
retf
ret
mov
pop
(bad)
add
or
and
or
dec
inc
fld
add
inc
cmps
inc
adc
jnp
loop
adc
mov
jnp
cmp
mov
sbb
or
jnp
and
jmp
push
ds
add
ret
rcl
repnz
test
mov
or
jecxz
hlt
and
call
in
sub
dec
mov
jmp
pop
pop
ret
pop
stos
jecxz
out
pop
test
mov
sbb
ins
test
xor
sub
adc
mov
and
pop
push
lods
loope
mov
sahf
mov
push
loop
test
js
dec
cmp
mov
in
pop
add
push
ret
sub
dec
fdiv
stos
not
test
jecxz
xor
pop
jge
lods
rcr
test
jmp
retf
fsubr
adc
or
rol
inc
leave
sub
jmp
push
adc
cs
loope
mov
data16
and
into
mov
ret
mov
(bad)
push
fisubr
scas
adc
rol
dec
pop
mov
sub
mov
cli
cmp
rcl
push
fisub
cmp
iret
bound
mov
test
or
movs
ja
fcomi
pushf
adc
cmp
push
add
(bad)
mov
sti
cmps
inc
inc
out
cmp
add
xor
sbb
jle
push
(bad)
sar
push
stos
nop
retf
call
cmc
add
arpl
or
xor
mov
ror
inc
js
adc
loopne
sub
sub
fld
mov
out
lahf
cmps
test
dec
jnp
push
inc
rcr
jb
loope
fild
inc
xchg
sub
pop
mov
pushf
inc
lahf
in
mov
push
pop
idiv
test
cli
xchg
into
jg
pop
pop
loopne
gs
jle
push
gs
mov
test
lahf
lahf
dec
adc
jecxz
fld
pop
xor
add
inc
out
cmc
jp
rcr
push
movs
push
hlt
in
inc
or
mov
in
mov
jno
pop
das
fucomp
data16
jecxz
push
test
or
pop
or
pop
xor
jge
push
je
cmp
add
in
adc
add
pop
mov
dec
cs
retf
ret
push
jns
jl
xor
(bad)
lock
fwait
adc
sbb
mov
icebp
mov
loop
in
mov
mov
addr16
xchg
pop
aad
mov
ss
call
popa
gs
xchg
arpl
out
xor
ret
inc
xor
mov
enter
(bad)
xor
les
(bad)
sub
test
mov
in
jge
mov
dec
outs
addr16
fld
push
cmp
sbb
adc
call
dec
cmp
adc
lea
in
not
stos
inc
inc
jne
xor
ds
pop
mov
sbb
dec
adc
mov
ss
pop
outs
aaa
stos
(bad)
shl
inc
jae
mov
imul
ror
or
sbb
add
cmp
sub
retf
iret
icebp
jo
in
cmp
jl
cli
es
push
mov
out
fsub
je
retf
push
sbb
xchg
mov
jecxz
js
sub
scas
pop
jnp
out
jbe
or
push
cmc
xor
sbb
or
in
xor
outs
call
sahf
push
movd
jmp
pop
pop
loopne
jg
sbb
push
imul
push
scas
fstp
push
mov
(bad)
mov
lods
jmp
loope
fs
(bad)
jmp
or
dec
aad
xchg
and
pushf
lahf
std
shr
sar
retf
adc
test
push
test
inc
aad
(bad)
std
mov
jmp
call
cli
xchg
pop
out
dec
out
jnp
mov
mov
test
loop
dec
adc
xlat
ret
mov
sahf
mov
mov
inc
ss
frstor
push
cld
ds
push
sbb
in
mov
ins
shl
cmp
xchg
ds
inc
cli
cmp
aas
aam
leave
jne
inc
in
cli
out
mov
pushf
and
xchg
jne
cmp
adc
or
stos
pop
inc
push
mov
leave
push
add
cmps
push
jb
std
inc
cwde
call
imul
lea
icebp
dec
ss
mov
dec
xchg
in
mov
add
mov
fs
jns
mov
mov
retf
retf
push
jmp
pop
shr
movs
das
call
mov
stos
sbb
mov
pushf
pop
test
in
fld
mov
cld
mov
add
pop
icebp
jo
test
mov
stos
pop
dec
mov
ret
mov
rcr
repnz
jecxz
pop
sbb
jo
sbb
xchg
(bad)
dec
cdq
adc
jne
nop
xor
dec
jmp
popa
mov
mov
jmp
cdq
out
aam
mov
dec
in
and
pushf
movs
lea
sbb
les
stos
popa
jno
scas
les
fwait
imul
xor
pop
lock
mov
push
dec
pop
inc
jnp
xor
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
push
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aas
fisttp
scas
cdq
out
out
cwde
cmp
daa
ss
call
cmp
in
xor
ret
xor
rcl
sbb
je
dec
ja
dec
pop
(bad)
jl
push
fucomp
dec
js
pop
add
dec
pop
(bad)
push
cmp
lea
shl
inc
std
in
xor
jl
mov
daa
aad
xchg
add
mov
mov
stc
mov
mov
repz
cdq
mov
call
fsubr
das
scas
push
cdq
cmp
out
daa
mov
jb
ins
fiadd
pop
or
aam
push
(bad)
arpl
dec
fxch
sti
sub
and
jo
cmps
mov
jge
ss
sub
or
xchg
inc
addr16
movs
pop
int3
stc
je
mov
adc
movs
mov
scas
jnp
retf
mov
test
inc
movs
lock
adc
sub
pop
fldcw
sti
lods
loopne
dec
jmp
inc
je
jbe
mov
rcr
int
push
pop
fimul
retf
loope
fst
inc
adc
push
arpl
fcom
mov
pop
ret
out
sub
cwde
pop
sub
mov
leave
pushf
movs
call
dec
shr
fs
xchg
push
cdq
outs
mov
les
push
rol
jge
fnsave
dec
add
mov
mov
fwait
sbb
loope
in
push
not
in
xchg
add
in
movs
aam
(bad)
fadd
mov
jbe
cmps
sbb
(bad)
or
pusha
jb
mov
xor
mov
mov
shl
xchg
scas
cld
ins
daa
jmp
pop
mov
xchg
jecxz
scas
or
lahf
adc
int3
mov
mov
xchg
outs
or
push
call
jmp
dec
xchg
xchg
and
mov
sahf
push
loopne
fwait
ret
and
dec
inc
movs
pop
retf
lods
mov
inc
jmp
or
pop
out
mov
out
aas
call
pop
xchg
jmp
or
mov
push
in
lods
lods
xor
or
sahf
daa
rcr
iret
xchg
(bad)
fisubr
jne
icebp
pop
pop
stos
jge
sub
out
iret
cmp
mov
mov
adc
jecxz
pop
in
leave
(bad)
out
jmp
out
mov
push
out
push
push
xlat
shl
sub
js
mov
add
xor
std
mov
call
fstp
ds
cwde
jl
mov
add
popf
cs
cmp
jp
jno
test
xchg
int
jbe
stos
fs
inc
std
lahf
add
es
in
fsub
cmps
jns
inc
stos
cmp
rcr
jg
enter
stos
cwde
jnp
jns
xchg
pop
call
or
inc
imul
fs
mov
xchg
cs
ja
push
sub
push
ins
leave
cmp
in
inc
cli
add
xchg
cwde
fisubr
es
pusha
jmp
lahf
pushf
and
pop
fs
mov
xor
mov
movs
jbe
mov
add
pushf
popa
popa
movs
test
push
xlat
mov
xor
ins
aad
lds
and
push
adc
and
sub
push
xor
icebp
ss
mov
lahf
jno
add
inc
xor
je
pop
icebp
rcr
inc
xor
cs
in
pop
retf
fs
pop
adc
loope
add
sahf
dec
or
je
sub
fstp
inc
xor
shr
and
mov
and
vandnps
mul
outs
retf
mov
pop
shl
ret
or
sub
jl
adc
mov
or
pop
pushf
add
(bad)
imul
addr16
mov
xchg
fistp
(bad)
enter
pop
push
adc
pop
ds
pop
aad
push
cs
sub
cdq
inc
mov
in
cmp
sar
jl
inc
jg
or
cmp
or
xchg
out
ffreep
stos
sar
jnp
call
hlt
out
movs
sbb
ss
mov
(bad)
popf
pop
xor
push
rcl
scas
or
push
call
clc
and
jb
icebp
xchg
mov
inc
add
push
push
sahf
mov
(bad)
fistp
ja
imul
adc
fwait
int
mov
addr16
xchg
dec
push
ret
jo
inc
push
imul
jbe
mov
call
or
fdiv
retf
push
sahf
pop
mov
dec
aam
dec
arpl
(bad)
add
fbld
push
fld
ds
adc
or
xchg
and
cmp
add
sub
mov
hlt
dec
shl
cdq
hlt
xchg
or
dec
and
movnti
sub
adc
or
aam
ins
or
sar
xchg
retf
imul
sar
scas
sub
std
push
mov
fbld
pop
std
(bad)
adc
mov
xchg
jne
and
push
in
pop
dec
push
adc
js
addr16
int3
pop
loopne
comiss
in
and
add
repz
das
les
retf
je
cs
inc
and
sub
and
mov
inc
sbb
mov
mov
aad
push
stos
xchg
jmp
cmp
int
test
ficomp
adc
adc
add
push
sbb
jb
stos
push
pop
jge
fistp
adc
mov
std
imul
pop
stos
lds
sbb
mov
sub
pop
and
je
cmp
mov
sub
mov
cld
fsub
fwait
and
pusha
lea
pop
dec
imul
cdq
scas
add
addr16
xchg
inc
mov
xor
xchg
push
jmp
inc
fld
xchg
pushf
gs
hlt
cld
push
enter
ds
(bad)
aam
fsubr
cmp
and
sub
ins
jle
loop
xchg
cmps
mov
rcl
mov
into
mov
xor
xor
(bad)
and
fimul
sbb
or
and
lock
add
mov
jbe
inc
mov
sub
mov
pop
inc
jl
add
retf
push
xor
xor
in
push
fadd
call
mov
ss
lds
mov
rol
sub
sbb
xchg
test
ja
push
rcr
(bad)
xchg
sbb
pop
mov
int3
call
mov
ins
scas
push
dec
add
daa
inc
mov
xchg
movs
and
dec
fimul
sub
retfw
pop
ret
dec
push
leave
pop
jns
repnz
mov
or
or
dec
cwde
mov
lods
nop
or
aam
and
fist
mov
retf
arpl
sbb
retf
or
mov
outs
ins
out
inc
inc
jmp
out
mov
and
(bad)
jmp
inc
shr
sub
stos
push
mov
addr16
ror
ret
mov
inc
xchg
cld
mov
jmp
lods
sbb
adc
cmp
add
into
jg
int3
jmp
mov
sbb
lods
inc
inc
cmc
inc
es
ret
add
mov
jl
dec
jl
push
call
push
ja
add
sbb
adc
cwde
mov
jmp
cmps
jge
adc
lods
push
xor
cld
ja
jo
stos
fnsave
sub
out
adc
test
inc
loopne
xor
add
out
imul
in
mov
fs
fisub
push
lds
enter
in
arpl
cmp
adc
outs
movs
or
(bad)
xor
ror
aaa
in
and
cld
sbb
mov
movs
xor
mov
iret
push
xor
xor
jo
pop
adc
cli
rcr
je
imul
aas
imul
mov
adc
movs
jns
dec
test
call
gs
out
xor
mov
lahf
push
out
repnz
xchg
adc
ret
pusha
sbb
cmc
cwde
xor
pop
sar
les
push
or
or
pop
rcl
popf
rcr
loop
(bad)
dec
sbb
jno
or
sub
and
mov
push
mov
inc
data16
sbb
icebp
dec
adc
xor
adc
adc
add
(bad)
dec
rol
hlt
dec
outs
pop
(bad)
jle
pop
retf
add
popf
fstp
in
int
xor
jmp
add
cmps
loop
out
lods
in
out
(bad)
jle
add
mov
pop
pushf
sbb
int3
jnp
popf
mov
cmps
xor
pop
pop
jmp
xchg
jno
cmp
mov
pop
push
aas
push
adc
mov
call
mov
repz
(bad)
cmp
mov
and
daa
add
push
pop
pop
add
xlat
cmp
mov
mov
inc
fstp
mov
dec
jl
mov
ss
in
repz
jle
arpl
push
fistp
arpl
xchg
add
cmp
(bad)
jae
pop
mov
mov
push
pop
outs
out
dec
mov
retf
or
push
(bad)
jmp
test
jb
cmp
retf
mov
loopne
ret
pop
sbb
add
imul
aas
sub
in
xchg
or
mov
xor
mov
cs
push
retf
test
mov
inc
jp
fldenv
mov
cwde
inc
test
loope
push
cs
or
mov
pop
pop
cmp
jae
std
sbb
jbe
fidivr
outs
xchg
repnz
xchg
retf
das
out
jge
jecxz
adc
sar
xor
xchg
add
and
xor
mov
cmp
cli
jb
outs
test
in
xor
jmp
in
adc
xor
and
mov
out
push
repnz
inc
dec
and
mov
or
add
jecxz
or
or
mov
pop
or
dec
outs
and
dec
lds
fmul
in
fistp
push
xor
sub
and
das
or
sbb
(bad)
xchg
lea
mov
xor
test
mov
fld
mov
out
and
cmps
lock
pop
or
push
xor
daa
and
dec
data16
mov
cmp
iret
xchg
xchg
jmp
rcl
ret
and
sub
cdq
and
fistp
inc
repz
push
int3
push
and
lds
pop
stos
pushf
add
lods
repz
jmp
xchg
div
loop
mov
mov
sbb
imul
sbb
xchg
sub
or
xor
bnd
mov
add
xchg
test
arpl
ja
popf
and
and
aam
mov
rcr
sbb
call
mov
sahf
in
add
sub
jns
fwait
push
movs
jae
dec
mov
shr
inc
cmp
js
das
sysenter
retf
add
cli
daa
lock
loopne
sar
jg
dec
inc
push
inc
ds
scas
lea
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
fmul
add
lock
cmp
mov
aaa
fidivr
dec
dec
ja
(bad)
in
dec
sahf
into
popf
jbe
mov
dec
xor
jbe
data16
xor
jns
iret
mov
add
outs
mov
(bad)
mov
stos
push
in
ror
and
push
pop
xchg
xor
call
xchg
xor
and
sub
pop
jl
retf
jo
jns
xchg
sub
mov
test
(bad)
movs
mov
push
lods
inc
jg
cmps
mov
fidivr
test
jle
aas
fstp
dec
mov
sub
sub
add
dec
aaa
into
inc
dec
cdq
movs
pop
aad
leave
mov
lods
inc
lods
push
mov
xor
sub
inc
cmp
das
mov
ror
mov
fadd
mov
fld
push
jno
out
fld
sbb
test
out
fsubr
mov
push
or
push
pop
pop
gs
icebp
es
jns
sub
mov
pusha
mov
(bad)
iret
adc
jnp
scas
fsubr
mov
xchg
inc
push
and
pop
push
push
jg
sbb
push
mov
xchg
mov
push
nop
(bad)
sbb
icebp
sbb
inc
xor
xor
xchg
cli
ins
cmp
dec
push
cmp
inc
inc
icebp
outs
loop
jb
in
mov
jne
scas
hlt
xlat
jne
stos
mov
(bad)
lock
and
(bad)
jnp
nop
cmp
sahf
cmp
test
sbb
mov
loop
xchg
cmp
rcr
ja
adc
push
and
fwait
push
rcl
and
jb
aad
lea
out
inc
rcl
jo
fwait
sub
out
mov
sbb
fsub
sbb
into
adc
jne
fdivr
mov
or
int3
and
push
add
sbb
adc
or
punpckhbw
dec
sar
adc
cdq
in
xor
inc
aam
punpckhbw
fst
cmp
mov
sub
pop
test
or
push
inc
cdq
scas
mov
(bad)
fcomi
mov
pusha
and
sbb
ret
mov
int3
rcr
mov
cmp
inc
cmp
retf
fistp
dec
ret
loopne
dec
fs
inc
dec
pushf
jmp
rcr
sub
bound
xor
pop
xlat
pop
xchg
ret
and
(bad)
xchg
idiv
enter
call
leave
xor
retf
pop
popf
or
(bad)
repz
out
mov
test
outs
ins
sub
in
push
in
xor
sbb
cmps
adc
cmp
daa
sub
(bad)
popf
push
sub
sti
pop
jbe
jmp
imul
pop
xor
addr16
xor
jle
dec
adc
pushf
xor
push
mov
in
shr
imul
xor
mov
(bad)
xor
push
push
cmp
sub
sbb
cld
jle
(bad)
gs
jae
popf
loop
retf
jge
or
movs
cmp
ins
mov
test
pop
pusha
jns
(bad)
xchg
rcl
push
inc
daa
xchg
jnp
leave
in
fbld
and
mov
mov
sbb
mov
mov
je
mov
and
out
jne
mov
inc
push
cs
jge
sbb
add
pusha
jle
(bad)
imul
mov
addr16
and
or
mov
mov
jmp
pop
push
jg
sahf
and
test
xchg
or
adc
(bad)
dec
push
into
sub
cmp
retf
(bad)
adc
mov
stos
cmp
jne
sahf
mov
addr16
jle
jle
rol
xchg
lahf
retf
std
cs
(bad)
sti
leave
sbb
xchg
push
retf
add
sbb
cmp
jl
and
mov
cs
pop
add
fist
fdivr
nop
jb
aas
fisub
pusha
inc
push
lds
les
mov
pop
movs
aad
out
call
pop
pop
fstp
push
and
sub
enter
ds
in
test
cmp
fcom
imul
stc
inc
jae
mov
pop
xchg
lea
push
lods
jae
jle
fild
xchg
test
ss
test
pop
push
jnp
adc
test
sbb
mov
jbe
cs
sbb
std
ret
xlat
addr16
or
and
push
mov
scas
dec
push
dec
sub
enter
mov
int3
mov
popa
icebp
popa
rol
mov
(bad)
fldcw
rol
inc
fild
aaa
pop
shr
out
mov
xchg
add
pop
test
mov
xchg
sti
fwait
cmp
push
movs
sbb
mov
inc
push
in
ins
inc
mov
shr
popa
sub
aas
aaa
xor
int
pop
mov
jns
ds
push
repz
push
call
sub
inc
pop
ins
repnz
sub
ja
imul
cmps
add
mov
fs
mov
cmp
add
(bad)
jge
pop
out
call
loop
(bad)
lock
xor
rcl
or
or
inc
pop
xor
xchg
inc
out
mov
mov
and
dec
fdiv
sbb
sbb
mov
and
arpl
jae
jbe
pop
daa
test
ja
out
nop
mov
xchg
ins
imul
sub
daa
jg
mov
movs
stos
dec
enter
pop
mov
mov
add
hlt
mov
dec
pop
mov
hlt
sbb
mov
push
dec
jo
rep
ror
cld
and
aam
call
xlat
adc
or
daa
add
mov
push
pop
sti
jmp
push
outs
add
daa
scas
loop
pusha
pop
and
sar
lods
push
xlat
jnp
daa
jne
vmread
cmp
mov
xchg
sbb
(bad)
lahf
mov
cwde
push
sar
adc
out
push
xor
inc
test
popf
mov
jecxz
pop
pop
push
add
sub
mov
push
cmovae
cmp
fnsave
push
stc
ins
ret
fistp
mov
fs
dec
dec
(bad)
std
enter
dec
jnp
fisttp
cdq
ret
adc
psrlw
add
pop
imul
fnstsw
pop
test
add
mov
inc
pop
push
fwait
jl
jmp
or
push
dec
mov
jl
lock
test
jno
push
jp
in
in
push
mov
ret
call
ss
loop
sbb
xor
adc
xchg
mov
push
bound
jp
pop
imul
lds
lds
rcl
loop
pop
pop
cmp
sbb
adc
xor
and
add
jle
out
xchg
mov
pop
cmc
popf
or
out
or
and
(bad)
cmp
in
and
and
icebp
xor
(bad)
call
in
push
je
add
push
cmc
fnstcw
push
push
inc
and
cdq
jbe
sahf
xchg
xor
jge
clc
out
test
leave
add
mov
hlt
dec
push
retf
jmp
push
(bad)
or
pop
and
pop
bound
je
test
je
bound
mov
pop
popf
xor
icebp
add
data16
fild
in
mov
repz
loopne
adc
xor
call
jno
lahf
cmp
in
and
test
je
popf
(bad)
std
mov
std
dec
mov
das
xchg
int3
or
in
xchg
mov
pop
out
call
push
dec
sbb
and
idiv
inc
xchg
imul
inc
mov
stc
(bad)
or
jle
xchg
mov
fidivr
ins
std
loopne
jg
aam
push
dec
arpl
xor
xchg
leave
cmp
lahf
push
xchg
popa
idiv
push
jge
jl
(bad)
std
cmp
cmp
adc
pop
fincstp
jp
pop
or
cmp
retf
mov
popf
xchg
adc
mov
sbb
inc
movs
xor
out
jnp
stos
sub
xchg
out
pop
and
or
cli
adc
jno
jmp
or
ss
sbb
push
cwde
scas
adc
ret
data16
int3
repz
sub
cmp
jns
xor
stos
icebp
mov
push
icebp
les
and
push
add
sub
cmp
push
jbe
adc
scas
cwde
pop
dec
rcr
sar
daa
pop
aas
es
les
in
outs
sti
sbb
inc
fisttp
mov
leave
repnz
test
test
inc
lods
dec
fidiv
int3
not
or
inc
int
xchg
inc
lods
xchg
ins
jecxz
out
pop
adc
push
and
jne
pop
iret
lods
stos
xor
comiss
cmp
sub
xor
lahf
push
call
es
push
daa
loope
fstp
fwait
inc
mov
ror
mov
dec
xlat
minps
add
bound
jmp
movs
sbb
xchg
mov
adc
jl
pop
clc
mov
mov
out
out
int
add
jmp
popa
and
cmc
jns
xchg
jne
mov
dec
pop
les
popa
sub
mov
cmp
js
fst
sub
je
rcr
dec
shl
push
ss
mov
fsubr
aas
(bad)
mov
imul
fimul
retf
(bad)
sar
sub
cmp
out
loopne
and
cmc
cmp
jo
(bad)
fmul
mov
jb
mov
xchg
inc
loopne
mov
call
jg
pop
or
xchg
inc
mov
js
jmp
js
and
repz
call
(bad)
in
add
ins
push
mov
pop
in
sbb
or
xchg
adc
sub
xchg
mov
rcr
repz
ss
mov
mov
pop
mov
lods
aas
les
outs
mov
cmp
xchg
fadd
pop
cmp
jns
pop
mov
fwait
mov
pusha
sti
sti
dec
jge
call
mov
popf
jbe
outs
sub
loop
icebp
jmp
and
push
xchg
jle
loope
mov
bnd
xchg
ins
cmp
add
in
ja
(bad)
mov
or
iret
cdq
loop
pop
cmp
je
cmp
inc
lds
inc
outs
jne
ror
mov
fadd
mov
lods
mov
es
(bad)
hlt
mov
inc
cmp
pop
push
push
push
stc
in
fnstsw
inc
and
out
mov
cs
int3
cli
pop
jecxz
jmp
adc
shr
cmp
outs
call
pop
fucomip
pop
xchg
fmul
adc
push
sbb
icebp
dec
cmp
mov
push
cvtpi2ps
push
ss
les
inc
aaa
xchg
int
mov
pop
xor
xchg
dec
fwait
adc
fadd
ins
rcr
call
stos
mov
pop
(bad)
popa
push
call
xor
sbb
add
loopne
dec
jno
(bad)
mov
daa
cmp
inc
xchg
fsubr
rcl
sar
jbe
xchg
fld
xor
jnp
xor
jmp
jp
xor
in
or
stc
outs
xchg
add
mov
sbb
mov
lock
loopne
sar
sar
idiv
pop
je
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
fmul
add
lock
cdq
cmp
cmp
xor
xor
xor
rcr
cld
les
arpl
mov
jmp
cld
mov
add
sbb
xchg
jae
idiv
xchg
push
cmc
push
fidivr
inc
in
mov
xor
xchg
xchg
js
call
mov
and
xchg
mov
xchg
lds
xor
inc
dec
or
mov
jnp
cld
rcl
push
xchg
jbe
pop
inc
mov
mov
fiadd
je
jo
cmp
push
sar
fisttp
or
add
jmp
cld
aad
cmps
xor
jns
out
fld
js
outs
mov
fdiv
push
mov
(bad)
ret
loop
lock
or
ins
sub
loop
stos
xchg
int
fidiv
(bad)
out
cmp
jae
pop
addr16
xchg
dec
sar
stos
lahf
adc
popw
cmp
and
mov
in
jo
mov
add
ret
cmps
ins
lahf
adc
mov
cmp
fdivr
ds
fisub
cdq
cmp
test
or
pop
xchg
inc
test
daa
iret
sub
cmp
lock
fucomi
mov
(bad)
addr16
jle
sbb
lea
xor
clc
scas
ret
mov
lds
xor
mov
jnp
sub
jmp
stos
mov
lods
loopne
vmread
imul
jbe
leave
cwde
and
stc
sub
enter
mov
cmp
lds
mov
into
jns
imul
je
(bad)
mov
lock
adc
int
in
mov
sbb
ss
jo
(bad)
lods
and
sub
or
call
xor
jl
loope
inc
mov
mov
inc
add
cwde
mov
jl
rol
pop
arpl
das
mov
mov
rcl
icebp
lahf
aaa
loope
stos
stos
jmp
leave
jmp
jg
dec
shl
jg
xor
aad
(bad)
stos
pop
pop
jmp
sbb
mov
jecxz
in
data16
sbb
mov
dec
in
and
mov
inc
sar
lahf
bound
rcr
sahf
ror
add
(bad)
test
cmp
imul
xchg
outs
pop
xchg
shr
aad
das
outs
mov
sub
push
cmp
sbb
(bad)
add
mov
in
mov
out
scas
push
cmp
mov
test
inc
sub
(bad)
(bad)
sub
fiadd
adc
and
or
xchg
dec
lahf
call
pop
jg
and
sbb
mov
dec
cwde
pop
pop
add
add
fnstcw
xor
and
cmps
ja
movs
sti
pop
mov
pop
xor
out
or
sub
pop
mov
xchg
(bad)
dec
outs
mov
mov
xchg
push
sub
jge
pushf
das
push
jns
movs
movs
xor
dec
pop
in
xor
gs
enter
std
mov
or
mov
fdivp
(bad)
shl
and
cmp
pop
inc
add
ins
sbb
sub
mov
mov
lahf
dec
test
adc
mov
out
push
mov
iret
jbe
(bad)
sar
mov
or
pop
mov
and
call
jle
scas
lock
(bad)
retf
sbb
pop
test
mov
or
test
mov
fisttp
jae
out
cmps
in
retw
cld
sbb
mov
add
mov
pop
push
(bad)
xchg
cmp
imul
(bad)
rcr
or
mov
xchg
or
mov
idiv
and
mov
std
movs
retf
das
imul
inc
leave
cmp
pop
(bad)
nop
shl
xchg
push
inc
cld
jle
dec
jl
out
dec
cvtdq2ps
loopne
jmp
ret
jbe
pusha
das
test
movs
xlat
xor
(bad)
cmp
jg
or
pop
inc
int3
dec
pop
mov
lahf
inc
jmp
add
cmp
sub
cmp
mov
mov
ja
call
dec
xchg
cmp
inc
push
test
and
sbb
ins
xor
out
test
jmp
jl
ficom
(bad)
pop
mov
dec
cwde
pop
imul
call
in
push
mov
lods
loop
ss
jmp
pop
cmp
sbb
inc
repnz
sub
sub
mov
dec
data16
ja
fmul
(bad)
loopne
push
fcomi
mov
adc
push
pop
sar
mov
jg
lock
pop
call
not
sub
pop
xor
fpatan
lock
shl
mov
and
pop
gs
retf
enter
iret
cld
jnp
mov
sbb
sbb
mov
int
in
xor
js
or
jae
xor
iret
add
stc
ja
push
fbld
inc
dec
(bad)
mov
mov
push
mov
sbb
mov
mov
dec
adc
or
lods
out
push
das
sti
cmps
jle
pop
push
mov
jl
pusha
sbb
push
pop
push
push
mov
aam
aaa
lock
pop
sub
mov
sti
js
addr16
leave
cmp
push
sub
jns
shr
xor
ja
sub
pop
mov
enter
les
ficom
dec
pop
xchg
clc
dec
cmp
mov
bound
ret
(bad)
pop
add
ss
imul
jnp
in
ins
inc
test
inc
xchg
mov
adc
leave
rcr
xchg
and
cmp
xchg
xchg
repz
outs
add
sub
clc
sub
pop
push
xchg
ror
lahf
idiv
and
sub
jbe
pop
clc
mov
out
out
add
sub
jnp
pop
mov
jne
leave
mov
mov
ror
sahf
xor
cwde
loopne
jle
xchg
adc
dec
lods
mov
cmp
imul
imul
rcl
inc
stc
popf
mov
in
or
xor
add
inc
das
in
adc
xchg
mov
or
in
enter
(bad)
or
jb
jmp
pop
sub
fld
mov
lods
adc
jo
arpl
push
outs
shl
cmp
test
inc
gs
cmps
sub
rsm
lock
adc
stc
iret
cmp
push
pop
shr
inc
and
pop
lods
inc
ins
int
adc
imul
loopne
cmp
ret
xchg
cmps
cmp
retf
xor
adc
and
jg
(bad)
les
jmp
and
pushf
je
sub
adc
out
outs
(bad)
mov
sbb
fild
xor
(bad)
dec
or
cmps
or
push
inc
call
pop
in
test
and
pop
outs
daa
mov
pop
stc
jnp
outs
xor
int
jp
(bad)
cmc
push
fld
push
in
psubsb
add
out
xor
mov
push
push
in
adc
jne
arpl
lods
pop
push
add
gs
cwde
push
and
cmc
dec
in
xor
push
adc
outs
cmps
sar
sahf
dec
dec
adc
loop
fdiv
add
fs
pop
and
add
cmp
mov
pushf
lea
into
add
push
les
dec
gs
xchg
cmp
inc
(bad)
mov
gs
bound
in
dec
jle
push
pop
mul
arpl
in
das
mov
ds
outs
push
jbe
mov
pop
pop
rcl
pop
jl
fisttp
jb
aad
push
xchg
dec
lods
gs
xlat
add
xchg
push
dec
add
sar
aam
xchg
repz
add
js
jb
in
pop
mov
sahf
std
jl
push
mov
cwde
rcr
add
jnp
jmp
jecxz
mov
mov
(bad)
fdivr
lods
adc
iret
lahf
mov
icebp
adc
retf
test
aad
adc
ins
ret
std
shl
outs
sub
int3
sbb
sub
dec
xor
shl
fbstp
sbb
aas
add
dec
sbb
sub
loopne
dec
pop
or
push
sbb
dec
and
and
dec
cmp
inc
or
(bad)
div
jo
pop
xor
and
mov
xlat
sbb
mov
ficom
scas
aam
dec
cmp
adc
xchg
test
cmp
xchg
das
int
cmps
and
pop
mov
rcl
pushf
sti
lods
add
push
inc
enter
add
inc
stos
pop
inc
sub
cmp
jne
mov
hlt
xchg
mov
lea
mov
jbe
mov
and
in
push
mov
rol
add
ja
shr
cld
ja
or
xchg
mov
retf
mov
sub
pop
popa
jae
retf
mov
push
pop
add
outs
mov
fcomp
xchg
jmp
lods
in
adc
mov
ins
jl
stos
aas
(bad)
pop
add
add
test
sti
jb
das
xchg
(bad)
stc
leave
cmp
mov
sub
out
push
fimul
mov
mov
xchg
jnp
or
not
xchg
add
push
mov
inc
sahf
movsx
adc
dec
mov
dec
cmp
scas
(bad)
mov
pop
pop
mov
add
repz
jle
test
xchg
jae
adc
stos
mov
stos
mov
dec
std
aam
cmp
jecxz
adc
add
fidivr
jbe
sbb
xchg
dec
dec
jbe
xchg
add
jecxz
shl
mov
cli
mov
sub
and
setl
push
int
pop
in
cmp
sbb
or
mov
das
mov
mov
add
cwde
std
ins
adc
push
pop
cmps
mov
jl
xor
xor
stos
xchg
adc
jp
inc
fiadd
sti
push
xchg
gs
cld
jbe
pop
icebp
inc
std
sub
sub
xor
or
dec
stos
cmp
movs
cdq
cmc
shl
jle
jecxz
jnp
pop
and
ja
shl
sets
sbb
or
into
std
add
std
mov
cmp
xchg
in
xor
or
jmp
xchg
mov
push
outs
push
aam
icebp
mov
or
pushf
mov
movs
xor
xor
out
cmps
cwde
cmp
arpl
add
inc
loop
sbb
fs
push
add
outs
cmps
dec
cmp
not
repnz
popa
jns
inc
in
(bad)
lds
inc
xchg
sbb
std
rol
add
aaa
or
aas
add
ds
shl
mov
xchg
lock
lods
test
es
popf
and
nop
in
inc
push
pusha
hlt
fdivr
fbstp
fisub
sbb
aas
popf
xchg
push
and
mov
cli
(bad)
and
mov
fmul
lods
jb
push
(bad)
stos
aam
pop
daa
inc
or
addr16
repnz
shl
mov
push
xchg
shl
and
mov
mov
xchg
pushf
jo
dec
rol
adc
push
int3
je
out
fadd
push
jmp
and
in
push
shl
jle
das
mov
loop
cmp
cld
sbb
aaa
lock
loopne
sar
lock
into
in
dec
and
out
or
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
push
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
aam
and
(bad)
jecxz
icebp
xchg
xchg
mov
mov
jnp
out
jno
mov
int3
retf
test
hlt
ss
(bad)
sbb
lods
mov
jnp
retf
push
and
pop
jnp
or
add
add
hlt
xchg
sbb
pop
xor
stos
leave
(bad)
or
push
bound
dec
std
mov
jg
ror
xchg
test
loopne
jge
dec
dec
(bad)
pop
sbb
stos
retf
test
data16
jne
sub
jb
mov
test
jle
push
test
ds
mov
into
cmp
outs
jmp
mov
lods
mov
in
das
inc
dec
mov
inc
stos
dec
loop
popa
cli
xchg
mov
pop
sub
jmp
sub
sub
mov
fwait
lea
mov
arpl
dec
xchg
dec
scas
mov
movs
inc
in
js
pushf
cli
mov
fmul
push
add
sbb
inc
mov
pop
xor
into
cld
push
test
mov
cmp
adc
jns
jne
popf
jb
(bad)
xor
jo
dec
xchg
gs
fcmovnb
xchg
jmp
pushf
ret
xchg
addr16
cmps
nop
ins
jb
inc
push
out
and
ficom
jge
jge
cdq
cmp
loop
bound
mov
daa
call
jmp
sub
loop
jmp
out
xchg
das
sahf
xor
jne
daa
icebp
xchg
(bad)
ror
stc
add
fdiv
mov
pop
(bad)
jle
stc
fwait
mov
stos
dec
(bad)
scas
xchg
outs
cli
aaa
and
mov
add
xor
dec
mov
adc
in
xchg
jo
std
repz
or
cmps
and
out
cwde
les
pop
sbb
mov
sbb
adc
sbb
loope
ins
scas
clc
inc
getsec
xchg
ret
in
fnstenv
jbe
cmps
scas
dec
cwde
jae
je
sbb
fisttp
sbb
xor
fdivr
ins
dec
out
push
dec
cs
mov
mov
call
and
cvtps2pd
or
outs
or
push
shr
mov
jge
inc
xchg
mov
leave
lds
xchg
cmp
lock
xor
nop
int
rcl
cmp
dec
fistp
test
test
mov
aad
mov
pop
ja
sti
jmp
test
jg
pop
mov
jmp
add
cdq
dec
nop
jae
addr16
cld
add
outs
and
push
and
test
sbb
add
push
adc
xor
ins
push
gs
fsub
hlt
movs
dec
push
xor
xchg
inc
or
jmp
dec
push
cmp
stos
dec
gs
call
and
pop
sbb
jp
loopne
(bad)
push
ss
or
data16
and
sbb
mov
int3
or
mov
inc
hlt
mov
div
and
sub
repz
leave
push
or
cmps
push
jmp
dec
test
arpl
jmp
popf
std
xor
sub
cdq
ret
xchg
cmp
cmp
cmp
mov
pusha
out
and
pop
push
mov
jmp
or
stos
cmp
repz
mov
pop
aaa
ficomp
fidiv
loope
xor
sub
sti
(bad)
outs
pop
cmp
add
neg
inc
sub
mov
(bad)
adc
mov
dec
mov
je
xor
das
mov
add
(bad)
outs
fild
imul
jne
fstp
and
xchg
cld
imul
test
cmp
sahf
and
pop
in
rcl
xor
jo
ds
push
mov
xchg
jle
movs
mov
sub
leave
jecxz
xor
pop
lahf
dec
sub
test
dec
mov
lock
jns
cmp
out
lods
adc
test
and
mov
mov
in
jg
push
mov
xchg
inc
ret
dec
ja
shr
inc
sar
call
xor
lahf
daa
mov
sbb
inc
dec
add
ficomp
pop
out
jae
(bad)
outs
retf
outs
mov
fcom
and
in
jae
cmp
jecxz
out
sbb
mov
adc
xchg
push
pop
push
xchg
jecxz
add
out
xor
es
loop
js
neg
iret
arpl
test
rol
inc
aas
dec
dec
and
mov
aas
xchg
jae
push
push
fcmovnu
mov
add
jne
add
cli
push
ds
enter
mov
add
(bad)
ror
dec
sahf
scas
mov
xchg
sbb
xor
or
inc
pop
mov
in
mov
cs
jns
pop
mov
jbe
test
jbe
(bad)
mov
cli
pop
cli
dec
mov
mov
pop
es
lock
sbb
(bad)
int
imul
push
test
dec
ss
pop
or
shl
es
icebp
ret
inc
cmp
inc
mov
mov
push
pop
outs
sub
icebp
pusha
push
loope
icebp
inc
sbb
in
clc
mov
mov
(bad)
cmps
mov
mov
mov
adc
(bad)
dec
lods
or
add
popa
jg
fmul
(bad)
cmp
sbb
sub
rcr
dec
sub
retf
jae
xchg
stc
cs
out
jmp
or
xchg
sbb
pop
daa
cwde
loope
ja
bound
fprem1
mov
dec
pop
sbb
ins
pushf
shl
int
ret
xchg
and
mov
jno
loopne
push
add
js
and
aad
push
into
xchg
pusha
sub
add
rcl
mov
push
cmc
or
mov
stos
inc
je
mov
pop
sbb
dec
call
scas
mov
adc
dec
push
cdq
lahf
push
outs
sub
movs
jmp
(bad)
push
ds
clc
mov
push
jp
mov
add
(bad)
sbb
sub
pop
(bad)
push
fsubr
(bad)
repnz
xlat
adc
enter
push
sbb
xchg
or
ja
add
sub
push
scas
cmc
imul
xor
leave
ret
push
pop
xchg
add
pop
fs
int3
add
jp
sbb
(bad)
out
retf
shl
cmp
mov
xor
fstp
cs
inc
mov
inc
pop
int
ror
stc
cwde
mov
imul
xor
dec
int
sbb
addr16
and
ret
mov
mov
sbb
jle
lods
loope
nop
dec
(bad)
fdivr
int
jmp
cdq
jp
test
es
push
inc
(bad)
fcomp
data16
lock
xchg
movs
mov
test
push
push
loope
inc
lods
scas
leave
scas
iret
test
scas
ficomp
cld
iret
push
mov
xchg
rol
fadd
movs
adc
pusha
xchg
xchg
push
jno
and
ja
mov
dec
jb
xlat
or
fs
stos
call
jl
shl
inc
ret
ret
adc
out
xor
cwde
test
push
push
repnz
mov
sub
call
mov
push
je
add
push
adc
mov
(bad)
(bad)
and
pop
rol
xor
ja
ins
cmp
sub
in
adc
leave
sbb
mov
push
test
xor
pushf
add
jle
xchg
sbb
lock
mov
iret
(bad)
mov
adc
loop
fst
inc
neg
mov
ficom
cmp
(bad)
test
lods
add
iret
lods
cmp
adc
dec
add
xor
sbb
call
ret
test
clc
mov
jne
test
dec
dec
mov
jle
adc
imul
je
loop
jmp
jecxz
stos
push
sub
icebp
jge
cmps
add
dec
js
repnz
jge
retf
cmp
xchg
enter
cld
inc
adc
hlt
and
daa
mul
fnstcw
jmp
shl
out
(bad)
or
sbb
out
adc
pop
cs
loopne
inc
push
xchg
into
rcl
inc
pop
int
jae
push
or
fbld
add
adc
das
daa
xor
scas
xchg
sub
add
test
(bad)
xchg
ror
scas
xor
dec
inc
icebp
push
mov
retf
fimul
(bad)
xchg
jle
fiadd
mov
imul
mov
out
or
xchg
dec
xchg
mov
inc
enter
jp
icebp
addr16
(bad)
sbb
div
xor
fld
xchg
pop
es
adc
inc
hlt
adc
pop
jge
(bad)
mov
mov
scas
mov
ins
rcr
cmp
cmp
lock
adc
imul
sub
cmp
push
mov
in
shl
jmp
jg
sar
les
ss
cmp
(bad)
shr
popa
push
or
cld
pop
add
sub
leave
imul
rol
xchg
mov
jmp
sub
and
and
stos
sbb
mov
sbb
sbb
leave
mov
div
mov
stos
mov
push
xor
sbb
and
shl
jmp
cld
sbb
pop
xor
bound
cmp
ja
ficom
lds
std
add
push
sbb
test
outs
add
cwde
or
add
mov
cli
fstp
ror
and
mov
test
inc
pop
aaa
enter
sub
data16
cmp
sub
push
imul
ret
movs
ret
or
ret
mov
ja
push
cmps
xchg
stos
pushw
outs
mov
adc
inc
jmp
mov
and
push
adc
jg
stos
cmp
sbb
mov
leave
(bad)
dec
cli
sbb
(bad)
dec
test
mov
mov
inc
and
sti
out
and
fnsave
or
xchg
jecxz
shl
les
cmp
inc
mov
jbe
iret
or
pop
or
imul
add
jns
xchg
out
in
xlat
mov
push
xor
push
sahf
movs
fsub
inc
pop
sti
dec
shl
icebp
int
xchg
jno
into
ins
xchg
dec
cmp
jmp
out
and
jbe
mov
call
fcom
shl
dec
imul
pop
mov
les
lahf
jecxz
call
aad
addr16
arpl
adc
jae
daa
fild
movs
out
dec
sub
fstp
mov
jno
inc
pop
outs
adc
pop
cmp
dec
cmp
push
mov
dec
push
es
mov
adc
sbb
xchg
in
and
cmc
cmp
cmps
retf
fs
or
aaa
or
mov
nop
jl
push
ins
xor
int
inc
div
sbb
addr16
stc
inc
cmp
out
cli
push
es
clc
inc
adc
shr
lods
and
inc
jp
rcr
mov
into
clc
mov
(bad)
and
mov
int
in
leave
jae
xor
sbb
dec
mov
dec
push
ret
fldenv
lods
out
sub
retf
mov
inc
inc
dec
idiv
out
retf
dec
dec
inc
xor
rcr
mov
ret
or
mov
mov
sub
or
mov
aad
inc
out
out
or
or
in
jecxz
xchg
cld
cmp
dec
inc
(bad)
or
mov
add
dec
cld
adc
adc
pop
aaa
add
retf
dec
adc
in
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
in
int
mov
and
retf
sbb
xchg
jns
pushf
cmp
enter
mov
test
out
adc
mov
add
and
cmp
popa
stos
mov
sbb
test
cmc
xor
mov
lods
xor
lock
cmps
mov
in
xlat
test
xor
pop
push
fistp
out
hlt
jbe
adc
jmp
icebp
jb
(bad)
and
adc
stc
cmp
loopne
bnd
test
inc
mov
hlt
ret
aad
enter
sbb
fstp
push
mov
fistp
test
sub
outs
call
mov
mov
mov
push
(bad)
(bad)
jmp
push
inc
xchg
push
movs
imul
mov
clc
or
aam
jb
lahf
add
inc
xor
cmps
cli
jb
mov
stos
dec
dec
in
inc
rol
cmp
dec
adc
fistp
push
jmp
fxch
std
pop
ja
aad
aam
pop
xchg
mov
rol
cmp
adc
or
sub
jmp
cmp
mov
fdivrp
mov
mov
repnz
mov
mov
lock
cmps
adc
mov
add
xchg
nop
pop
cmps
adc
nop
adc
pop
inc
mov
test
xor
jb
mov
ins
push
mov
into
jo
cmp
mov
adc
add
cli
or
into
int
push
rol
push
sbb
test
push
mov
lods
dec
xor
lea
and
mov
add
mov
repnz
inc
gs
ss
pop
inc
mov
fld
mov
push
pusha
imul
sbb
xchg
adc
lds
outs
movs
cdq
cs
mov
imul
jae
pop
mov
mov
aad
sub
mov
cmps
sub
shl
and
(bad)
sahf
cmp
push
(bad)
arpl
test
out
sbb
jmp
call
das
stc
push
out
and
cdq
dec
jmp
cmps
js
jmp
shl
sbb
icebp
call
mov
int3
(bad)
jmp
mov
rcr
adc
ins
jle
jle
mov
stos
test
push
mov
add
inc
or
paddsw
sub
xchg
rcl
in
xchg
aaa
aam
mov
fist
mov
arpl
rcl
mov
cmps
sub
cld
and
xor
xchg
pushf
out
sar
pop
push
jb
jmp
and
cmp
popa
(bad)
jnp
inc
pushf
add
loop
jecxz
sub
xchg
sbb
outs
ds
mov
cmp
xchg
into
inc
xor
cmps
iret
jmp
jecxz
push
cmc
out
mov
push
fisubr
or
adc
jmp
xor
sbb
push
jecxz
xor
je
ror
neg
sub
out
adc
adc
push
cmp
push
cld
cmp
ret
movs
cmp
xor
stos
std
repz
je
jle
(bad)
and
popa
or
cwde
sbb
cmc
fmulp
popf
sub
mov
add
pop
push
lahf
sti
adc
or
pop
cld
or
aad
scas
daa
jmp
adc
sub
mov
and
(bad)
cmp
(bad)
mov
xor
mov
sub
xlat
cmp
pushf
mov
jmp
lea
jns
scas
mov
aas
add
pop
mul
ins
jmp
stc
in
dec
sbb
xchg
popf
in
retf
mov
dec
or
push
or
inc
push
fcomp
xchg
xor
test
ja
push
push
pop
int3
push
loope
add
outs
popa
push
xor
push
mov
inc
adc
pusha
pop
sahf
pop
push
lds
adc
jae
inc
cld
xchg
stos
enter
call
xchg
fisubr
fbld
ja
pop
or
jb
retf
nop
fst
add
inc
fstp
dec
arpl
in
cwde
mov
or
xor
out
and
jo
jecxz
aam
fbstp
xchg
mov
idiv
loop
push
inc
ds
push
cs
dec
dec
fcmovb
lods
push
push
enter
add
jbe
xlat
push
outs
add
jecxz
sbb
sbb
dec
outs
and
enter
jmp
ins
pop
movs
push
adc
test
push
push
mov
sub
lods
cmp
cli
retf
loope
push
mov
xor
pusha
inc
test
adc
mov
mov
lods
jmp
jecxz
adc
lds
xchg
sub
push
lods
add
cmp
dec
ss
(bad)
xchg
shr
repz
loop
push
cdq
outs
xchg
pop
adc
mov
ss
ret
in
cmp
test
jmp
and
mov
xchg
adc
adc
mov
jno
dec
adc
mov
mov
dec
cmps
and
(bad)
push
(bad)
mov
dec
xor
cwde
sbb
sbb
jnp
adc
add
inc
xor
jo
fidiv
scas
(bad)
dec
or
jp
dec
lahf
and
mov
jg
cmp
shr
das
ds
push
xchg
icebp
sbb
retf
pop
movs
call
inc
push
xor
icebp
jge
cli
lock
pop
mov
test
cli
idiv
cmp
sub
pop
add
mov
dec
pushf
pop
pushf
jle
ds
pop
pop
adc
dec
hlt
fwait
sub
push
in
loop
inc
(bad)
into
and
pop
mov
popa
sbb
xor
push
addr16
cld
in
xchg
arpl
sub
dec
(bad)
test
push
lea
dec
mov
stos
ss
(bad)
fld
test
xchg
pop
xlat
repz
and
mov
popa
sub
aaa
fwait
enter
mov
xchg
in
cmc
inc
sub
stos
repnz
jg
loopne
sub
loope
mov
mov
mov
(bad)
in
sub
ins
push
or
and
xchg
ja
out
call
repz
inc
outs
std
mov
leave
stc
adc
jmp
dec
cmp
jmp
xchg
imul
sub
mov
arpl
mov
add
mov
mov
lods
or
mov
arpl
repz
inc
pushf
pop
mov
add
ficomp
push
inc
jae
mov
fisub
fs
div
xlat
sbb
xchg
and
inc
jecxz
popa
retf
lock
mov
jmp
sti
test
test
lahf
push
push
pop
inc
cld
ficomp
push
aad
pushf
mov
stos
mul
jmp
out
mov
push
xchg
fistp
bound
aam
mov
icebp
call
inc
and
(bad)
div
sbb
imul
mov
or
das
mov
xchg
fdiv
popa
stos
xor
pop
lea
ss
lods
inc
nop
adc
data16
cdq
inc
xor
push
lock
pop
not
call
jmp
push
push
(bad)
fldenv
nop
mov
test
and
fs
arpl
add
je
fadd
pop
add
shr
call
xor
psubusw
ja
ds
xchg
jns
loope
push
push
mov
mov
mov
es
scas
inc
bound
daa
mov
mov
lea
hlt
aaa
dec
or
fisttp
stos
movs
push
test
out
pop
jb
sub
call
mov
(bad)
jl
dec
lods
cwde
fiadd
add
cmp
test
xor
(bad)
cmc
push
xor
cmp
push
dec
xchg
daa
mov
mov
add
jmp
repz
je
(bad)
movs
das
daa
inc
jge
lds
imul
popa
mov
xchg
test
aad
push
sbb
movs
int3
shl
push
out
dec
stos
or
fidiv
daa
and
rol
scas
pop
cmp
pop
or
sbb
stos
push
jmp
lods
add
imul
dec
inc
mov
mov
adc
gs
stos
sub
ja
(bad)
fistp
lock
out
dec
es
mov
cmp
mov
cdq
fldenv
xor
std
loopne
cmps
cmc
dec
mov
addr16
adc
je
gs
dec
pop
daa
je
popf
push
add
mov
in
xor
pop
or
jl
pop
cmps
mov
arpl
ret
fst
out
jp
(bad)
(bad)
hlt
(bad)
dec
sahf
mov
mov
sub
ins
mov
mov
push
les
ret
repz
push
test
lods
push
push
jb
xchg
test
or
xchg
dec
mov
inc
sbb
adc
mov
mov
dec
(bad)
mov
pop
scas
addr16
sahf
xchg
xchg
jg
jns
iret
pop
in
sub
call
jo
push
aaa
(bad)
jge
fdiv
fs
xchg
movs
xchg
fcomp
stos
ss
ins
pop
icebp
mov
dec
mov
mov
mov
lahf
fidiv
jns
out
xlat
sub
add
or
cld
repnz
scas
ret
jmp
aas
sbb
push
bound
cmp
mov
mov
and
push
dec
repnz
bswap
jecxz
fsub
fsetpm(287
xlat
xchg
jb
or
mov
adc
repz
leave
or
adc
fld
pusha
add
mov
mov
fnstsw
xlat
cmp
ret
movs
in
repz
fldcw
push
pop
movs
cmp
stos
cmp
xlat
rcr
mov
test
sbb
fild
cmp
jmp
mov
push
fst
popf
add
cmc
cmps
xchg
add
lods
in
aam
ror
cmc
test
scas
pop
dec
ds
es
pop
aaa
out
popf
dec
sahf
and
out
pop
push
fsubr
pop
sub
lods
daa
out
(bad)
push
sbb
arpl
mov
aad
push
inc
mov
and
sbb
fidiv
enter
sbb
ds
cmp
cli
cli
mov
sahf
pop
sub
mov
test
rcl
mov
(bad)
sub
shl
and
cs
cmp
or
xchg
mov
ror
shr
les
adc
cmps
aas
inc
lods
pop
dec
loop
mov
jbe
xchg
xchg
sbb
mov
sar
call
or
inc
scas
and
das
in
(bad)
ss
sbb
xchg
aam
mov
push
xor
cmps
fcomp
je
sub
pop
enter
mov
test
mov
push
or
nop
inc
push
sbb
jae
fsub
push
jae
mov
dec
mov
shl
div
xchg
mov
push
loope
push
mov
mul
nop
repnz
inc
jecxz
pop
pop
gs
fcomp
mov
cmp
outs
mov
jno
ins
out
inc
cmp
or
dec
aam
mov
shl
jmp
inc
and
pop
rcr
(bad)
and
retf
cwde
add
xor
cmp
lods
or
xchg
push
aad
sub
jp
into
daa
loopne
jg
inc
dec
lock
cld
pcmpeqw
push
mov
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
cdq
mov
addr16
mov
push
inc
enter
popf
dec
mov
jo
push
loope
xor
in
xchg
xchg
nop
xchg
dec
idiv
(bad)
rep
lahf
xchg
lock
or
jecxz
and
retf
sbb
pop
in
std
shr
mov
xchg
jo
popa
inc
mov
ins
jl
in
xchg
lds
mov
xchg
shr
aas
stc
shr
push
fbld
call
jge
ds
xchg
out
das
out
sbb
jle
cmps
cmp
dec
add
inc
mov
ins
(bad)
int3
dec
push
xchg
pop
mov
pop
adc
cmp
push
jl
xchg
outs
push
sub
cdq
popa
mov
test
and
push
dec
cmc
push
pop
idiv
adc
xchg
cmp
pop
mov
sub
cmp
sub
ds
lods
in
jns
push
inc
jl
fs
xchg
cmp
lods
jno
adc
jg
repnz
cmc
fldenv
and
mov
cmc
es
lea
add
jb
hlt
mov
jno
fs
lods
js
out
adc
cmp
cmp
(bad)
jne
mov
sar
lock
fistp
loope
cli
xchg
push
push
xor
cmp
dec
xchg
std
cmp
xor
ins
inc
fcomp
add
sbb
cmp
push
pop
dec
(bad)
jl
adc
xchg
mov
cmp
fisub
ror
(bad)
movs
lds
repz
sub
lahf
cmps
inc
mov
push
xchg
loop
sub
sub
jns
gs
push
jmp
out
js
adc
imul
or
sub
jno
jmp
cmp
mov
cld
movs
cmp
pop
dec
(bad)
cmp
xchg
push
shr
gs
add
(bad)
addr16
mov
daa
arpl
xlat
push
jp
push
(bad)
or
in
ins
dec
and
in
mov
sub
pushf
out
add
cmp
(bad)
xor
aaa
jae
push
mov
mov
bound
inc
add
(bad)
mov
rcl
outs
fadd
arpl
aam
cli
bndldx
pop
out
pop
shl
les
or
push
add
push
sub
xchg
cmc
mov
loopne
fcmovu
in
mov
jnp
leave
sbb
sub
dec
mov
sahf
sbb
mov
cmp
nop
mov
xor
and
retf
xchg
push
jle
add
add
push
add
stos
jp
rep
xchg
mov
out
push
inc
fidivr
jbe
cmp
test
or
clc
xor
not
iret
cmps
cmps
rol
lock
jg
movs
xchg
mov
out
mov
mov
push
jno
jnp
mov
mov
adc
inc
jbe
jmp
sti
and
xor
cmp
add
inc
loope
mov
cmp
push
loop
fnsave
mov
add
repz
mov
test
jnp
outs
fst
xchg
jmp
sahf
push
add
push
bound
mov
aaa
pop
jge
out
fdivr
ret
sbb
jo
xor
adc
mov
addr16
jnp
outs
sub
scas
shl
inc
xchg
adc
mov
popa
cmp
data16
add
stc
push
push
mov
(bad)
cmp
mov
cmp
mov
fsub
enter
jmp
ins
cwde
pop
dec
sub
xchg
push
jge
test
ss
cmp
stc
gs
ret
and
in
or
retf
inc
pop
shr
les
test
adc
je
aaa
mov
push
dec
push
test
test
rcr
sti
fdivr
mov
aad
pop
add
pop
dec
jno
jno
and
xor
aam
adc
jg
mov
push
out
lahf
pop
mov
pop
jmp
je
pusha
cmp
or
mov
pop
(bad)
aas
push
or
ds
sbb
pop
pop
xor
mov
push
imul
dec
mov
sti
aam
xchg
xor
inc
cdq
pop
cmp
cli
push
push
cmp
xchg
xchg
sub
clc
lods
sub
sbb
jg
pop
add
cmp
xchg
mov
mov
bound
mov
sbb
mov
pusha
int
cli
rcl
mov
mov
clc
cld
inc
mov
xor
(bad)
shl
shl
jmp
jb
mov
dec
fbld
pop
or
adc
xor
cs
mov
shr
inc
cmps
sub
and
xchg
dec
or
jbe
cli
xchg
fucomi
ror
jmp
int3
add
jl
in
imul
retf
out
add
inc
test
dec
xor
mov
pop
test
adc
sbb
pop
cli
movs
and
iret
(bad)
jmp
mov
xlat
push
push
adc
stos
cmps
inc
jmp
adc
pop
test
pop
jne
fist
mov
jne
or
push
lock
xor
push
cdq
int3
ficomp
je
pushf
jne
stc
sbb
dec
arpl
xchg
pop
adc
push
dec
test
push
out
std
adc
(bad)
adc
loopne
jp
and
xchg
jmp
(bad)
in
aad
out
popa
hlt
jg
or
fs
movs
mov
je
cmp
mov
jnp
xor
jg
jbe
js
(bad)
bound
add
and
pop
into
aam
sbb
data16
int3
jnp
sahf
icebp
fistp
sub
fwait
sbb
inc
and
pop
jns
repnz
and
cmp
mov
adc
jmp
lea
loope
cmp
xor
test
mov
and
mov
mov
fist
mov
xchg
cmp
sub
cli
adc
and
mov
stos
or
sbb
mov
int
stos
jne
add
inc
mov
fisubr
cs
loopne
inc
add
inc
outs
adc
fcomp
sub
shl
ins
clc
int3
or
out
pusha
inc
lahf
clc
(bad)
sub
xor
repz
ja
xor
fsubrp
out
(bad)
fmul
int3
sub
fs
data16
and
pop
pop
or
mov
jb
mov
pop
jp
popf
mov
aaa
push
cmp
es
or
xchg
in
xchg
jno
loopne
pop
and
xor
xor
retf
icebp
fucomi
cmps
dec
xor
cli
sub
mov
pop
mov
pop
idiv
jnp
stc
mov
or
mov
and
jmp
pop
imul
repnz
movs
std
mov
outs
cwde
scas
imul
add
scas
dec
test
push
inc
xchg
xchg
inc
stos
xchg
ret
or
jbe
mov
inc
jecxz
sbb
div
xchg
stos
mov
or
or
jmp
out
stc
jb
pop
jae
mov
xor
mov
repz
lock
and
mov
pushf
or
fldenv
cmp
push
ins
cmps
pop
push
fwait
out
inc
call
mov
out
ja
cmp
gs
cmp
dec
test
mov
imul
jle
(bad)
jb
ds
inc
xor
dec
push
push
sbb
jb
inc
scas
or
mov
xor
lods
addr16
mov
popf
bswap
jmp
loop
cmp
mov
mov
mov
adc
cmc
ja
mov
cmp
lahf
jle
push
xlat
retf
in
pop
stc
xchg
outs
cmp
inc
xchg
les
mov
cmp
xor
fistp
jns
pop
xor
test
add
mov
sbb
dec
iret
add
aad
movs
pop
dec
dec
lock
inc
outs
mov
pushf
push
cmp
dec
and
movs
out
aad
lock
retf
pop
cmp
jmp
dec
es
repz
jg
xor
add
jo
call
mov
dec
pushf
pop
push
lods
in
pop
jg
xor
adc
frstor
or
lods
inc
shl
or
daa
outs
mov
lahf
pop
xchg
sub
call
sub
imul
push
adc
sar
retf
push
repnz
neg
retf
aam
enter
sbb
movs
hlt
popf
mov
sbb
mov
sub
push
nop
xchg
mov
arpl
mov
leave
jno
stc
fisubr
xor
mov
add
mov
push
scas
pushf
std
ins
xor
mov
cmp
push
mov
and
nop
adc
cs
inc
outs
scas
call
ins
add
out
cmp
int
mov
mov
pop
mov
dec
xchg
mov
fst
xor
fcom
pop
pop
int
imul
xor
stos
sbb
dec
dec
xor
and
pushf
mov
cmp
stos
iret
mov
rcr
mov
rol
mov
repnz
call
in
jae
jmp
lods
daa
push
fwait
das
jge
pop
loopne
jmp
or
int3
sbb
sub
ror
pusha
or
and
sbb
loopne
adc
mov
or
adc
mov
inc
imul
mov
stos
fwait
rol
push
cmp
fidiv
enter
sbb
popf
bnd
pop
and
jmp
not
push
mov
add
adc
inc
out
sbb
pop
call
(bad)
xchg
test
pop
in
js
adc
movs
dec
aaa
pop
sub
mov
inc
or
push
(bad)
out
jecxz
sub
bound
adc
pop
cdq
adc
fiadd
in
ds
pop
jne
loope
scas
data16
popf
jns
xor
imul
xor
or
xchg
pop
pusha
out
lahf
jle
push
mov
(bad)
in
out
(bad)
stos
sub
popf
dec
sub
and
(bad)
jmp
shr
cmp
cmps
add
jae
and
push
inc
jge
inc
jnp
mov
test
call
sbb
inc
cmp
pop
push
lods
mov
cmp
mov
imul
(bad)
or
dec
xor
scas
pop
mov
nop
add
ret
fisttp
fidivr
(bad)
das
jbe
add
dec
mov
adc
out
and
and
pop
into
popf
xchg
outs
loop
add
mov
xchg
int
xchg
scas
pop
call
push
test
jo
fmulp
lock
dec
dec
cmps
xchg
stc
scas
cdq
test
je
ds
cmp
cs
stos
aaa
int
fisttp
xchg
jecxz
fcom
pop
push
aad
sbb
xchg
neg
es
lock
pop
xor
mov
xchg
xor
xchg
daa
or
outs
inc
scas
xchg
sub
data16
fldcw
int
lods
test
xor
push
add
call
xor
or
test
call
or
retf
jmp
(bad)
inc
imul
dec
es
sub
test
cmps
imul
call
int3
mov
or
jg
or
lock
loopne
sar
lock
mov
cmp
into
call
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
fmul
add
lock
les
ja
out
ret
je
ret
(bad)
les
cmps
jae
cwde
ret
pushf
mov
jmp
jbe
aam
out
fcmovnbe
fdiv
and
pop
add
xlat
pop
retf
cdq
sub
mov
jo
mov
push
stc
cs
leave
inc
dec
ds
pusha
dec
sub
popf
(bad)
clc
cmp
cmp
xlat
push
xchg
add
jae
lock
sub
repz
inc
mov
jecxz
aad
jmp
callw
ret
xchg
ss
icebp
push
cmps
mov
dec
mov
je
pop
mov
jl
and
bound
or
and
pop
call
repnz
xchg
sti
out
cdq
jbe
jns
and
(bad)
gs
jle
add
fxch
dec
sub
jae
(bad)
rcr
lahf
push
data16
adc
adc
das
daa
pop
cmp
xchg
sbb
dec
add
dec
shr
xchg
sub
xchg
jle
jle
xor
sbb
mov
push
inc
jo
lods
or
outs
loopne
mov
xor
xchg
mov
or
add
xchg
mov
dec
scas
jp
push
jl
ins
idiv
or
jbe
stos
pop
out
cwde
cmp
and
adc
jmp
in
jl
xor
cmc
aaa
in
or
sub
out
dec
daa
or
push
adc
cmp
adc
mov
and
inc
mov
inc
dec
shr
inc
push
mov
push
in
or
sub
adc
(bad)
or
pop
push
sub
pop
sub
dec
not
lahf
push
jne
sub
mov
mov
pop
pop
push
pop
dec
jo
and
cmp
add
pushw
pop
(bad)
in
push
mov
lahf
pop
dec
aaa
fistp
hlt
outs
adc
pop
in
dec
sbb
dec
out
add
xlat
leave
push
inc
pop
shl
imul
xor
(bad)
mov
inc
mov
pop
inc
mov
inc
nop
sar
pop
jl
loop
out
xchg
arpl
push
ret
aad
jge
push
cmc
aaa
fwait
out
push
fidivr
call
mov
xor
xchg
xor
push
sbb
sub
pop
mov
or
sti
adc
sar
repnz
dec
sub
loopne
mov
call
fscale
pop
pop
mov
mov
sti
int
icebp
mov
mov
lods
js
pushf
in
mov
jle
pop
popf
cmp
call
idiv
ja
int3
(bad)
loope
adc
push
leave
hlt
and
arpl
cmc
sbb
inc
mov
out
mov
test
int
jmp
push
in
sub
jge
mov
clc
adc
jmp
pop
ja
shl
pop
mov
push
push
test
sub
cmps
xchg
adc
ins
movs
adc
repz
cmp
lods
push
jg
daa
jl
xlat
mov
int
push
mov
mov
push
push
movs
sub
mov
xlat
call
scas
fsub
sbb
xchg
hlt
int3
push
jle
fld
inc
adc
mov
pop
retf
or
sub
push
cmp
push
mov
stos
xchg
add
cmp
daa
int
mov
sar
adc
fisttp
test
xrelease
mov
jp
clc
popf
aad
push
push
int
fwait
out
lods
jg
jmp
mov
mov
push
sahf
stos
mov
xlat
pop
icebp
mov
sub
scas
pop
jmp
xor
jae
es
arpl
push
ret
adc
nop
mov
daa
in
inc
sbb
int3
push
call
arpl
lock
inc
test
div
mov
lods
add
in
cmps
add
xor
mov
loopne
mov
xchg
xchg
jmp
mov
mul
call
repz
aaa
mov
out
inc
loopne
or
gs
jnp
nop
(bad)
xor
sti
fs
aas
add
in
mov
fisttp
xlat
mov
sbb
mov
sbb
gs
leave
(bad)
dec
fs
scas
es
pop
mov
imul
sbb
sar
in
dec
adc
inc
fistp
or
daa
xor
sahf
imul
cmp
or
dec
xchg
scas
dec
sbb
cmc
xchg
sbb
movs
jg
jge
mov
xor
push
mov
push
sbb
mov
dec
lock
out
or
push
in
ret
in
jecxz
ret
pop
dec
pop
jmp
mov
pop
shr
rcl
int
push
jnp
out
imul
jne
sar
test
and
lea
stos
shl
jnp
cmp
pop
inc
adc
sub
cdq
dec
pop
lahf
loop
jb
(bad)
jmp
cmp
push
ret
(bad)
mov
pop
dec
lds
fdiv
mov
pop
loop
cwde
in
mov
jb
enter
sbb
es
es
int3
in
push
into
ret
inc
xor
xor
std
mov
inc
push
cli
xchg
sub
mov
test
(bad)
repz
mov
(bad)
mov
xor
mov
leave
sbb
or
ret
jmp
or
stc
cld
jle
arpl
aas
and
clc
adc
add
bound
dec
sbb
scas
imul
mov
retf
mov
xchg
pop
mov
jbe
cmc
(bad)
mov
call
mov
mov
shr
dec
or
xor
xor
pop
dec
sar
popf
cmp
jb
inc
popa
xchg
mov
pusha
and
pop
ins
shl
and
xlat
mov
push
sub
inc
loop
in
jo
not
ss
jne
jmp
inc
adc
mov
dec
mov
(bad)
ins
inc
arpl
loop
js
mov
push
push
inc
js
add
aam
mov
mov
in
adc
sti
cmps
and
push
sub
test
mov
stc
mov
daa
and
sub
(bad)
aas
inc
xchg
add
retf
xchg
and
mov
adc
pop
cdq
cmp
xor
into
add
mov
pop
jle
enter
dec
js
movs
test
cli
popa
xchg
sub
int
pusha
setb
cmp
test
(bad)
jo
call
movs
fs
rcr
loop
cmp
cmps
cld
jle
jle
int3
lds
cmp
jg
mov
es
fld
clc
inc
nop
cmp
mov
pop
inc
ja
in
ror
jle
rol
or
mov
jo
xor
dec
lahf
loope
mov
adc
push
fstp
cmp
or
adc
pop
rcr
mov
dec
or
mov
xchg
(bad)
les
popa
or
xchg
nop
push
scas
push
(bad)
mov
and
mov
aam
inc
cmps
xlat
inc
add
stos
mov
mov
in
or
xchg
sbb
fdiv
ret
inc
pop
sub
adc
pusha
mov
pop
aad
test
(bad)
sahf
jmp
inc
cmp
inc
jmp
ficomp
lock
fist
stos
test
pop
dec
leave
or
xchg
(bad)
jmp
xchg
dec
out
jbe
cli
sbb
loope
mov
push
jmp
cmp
jnp
add
adc
je
cmp
xor
push
in
int3
test
test
mov
dec
and
jp
mov
shl
pop
cmp
call
fstp
repz
ret
xchg
ret
dec
inc
push
aas
jbe
mov
and
cmp
dec
(bad)
shl
xor
cs
sbb
retf
lea
dec
xchg
xchg
mov
adc
push
dec
shr
mov
lds
or
bound
lock
enter
int
push
jle
cmps
and
out
xchg
push
sar
dec
stc
inc
dec
stos
cdq
inc
stos
mov
push
push
and
sub
enter
sbb
je
test
int
cmp
sub
mov
xchg
fld
xchg
push
fcomp
cmc
fs
mov
daa
xor
jns
retf
inc
push
cli
mov
push
into
pop
and
mov
clc
(bad)
mov
(bad)
jecxz
addr16
pop
sbb
call
sub
adc
shr
jno
pusha
jp
jb
ss
rcl
je
cmp
test
call
(bad)
mov
mov
sub
mov
mov
pcmpgtb
lock
mov
and
xor
jg
sub
(bad)
clc
inc
sti
cmc
or
sub
mov
das
sub
add
cli
adc
mov
int
adc
test
fwait
pop
dec
ds
mov
fild
pop
es
xor
ss
stos
xchg
dec
aad
not
push
mov
iret
sahf
add
cs
pop
fadd
out
lods
inc
ficomp
out
jno
cmp
push
in
mov
fcomp
mov
(bad)
cmp
movs
jb
jmp
(bad)
gs
cmc
fwait
addr16
int3
fisubr
push
div
fsubp
push
mov
call
mov
inc
add
and
lahf
loopne
in
inc
outs
js
out
mov
cmp
adc
cwde
and
adc
cmp
into
shl
fld
xchg
mov
add
fwait
jg
dec
or
jo
jle
mov
cld
xchg
daa
je
add
ror
aaa
pop
data16
xchg
inc
scas
push
pop
stc
fsubr
mov
les
int
popa
outs
std
cld
les
loop
add
cmps
mov
test
scas
ret
push
adc
dec
addr16
adc
adc
pop
outs
nop
aaa
jbe
test
jae
lods
xchg
cli
pop
stos
mov
adc
in
pop
mov
inc
xchg
jae
rol
arpl
dec
cmc
pop
bound
outs
fidivr
std
mov
gs
ins
popa
lods
nop
rcl
dec
mov
lahf
(bad)
in
jb
pop
in
sbb
jae
in
mov
in
xor
fdiv
popf
fwait
sbb
xor
js
sub
(bad)
or
bound
ret
pop
jmp
sub
push
lods
or
out
movs
in
addr16
in
or
pop
repz
pop
data16
je
xchg
into
sbb
repz
xor
mov
mov
xchg
loopne
sbb
dec
adc
in
ja
sub
mov
(bad)
addr16
mov
loop
dec
rol
mov
sub
xchg
xchg
dec
cmp
mov
xor
jne
inc
fsubr
xchg
(bad)
and
mov
mov
je
mov
inc
stos
xor
enter
push
clc
test
xor
fmul
iret
mov
les
imul
int
leave
scas
and
xchg
sub
popa
push
mov
(bad)
or
ficomp
arpl
retf
hlt
(bad)
xlat
outs
mov
sahf
sbb
fcmovne
repz
retf
loope
int3
xor
(bad)
into
mov
inc
adc
or
cli
daa
and
and
mov
rcr
dec
(bad)
sti
(bad)
jle
push
cmp
fsubp
data16
cmc
test
or
adc
mov
fcom
cmp
push
cld
rcl
ins
xor
lock
cld
push
out
inc
mov
into
outs
and
movs
jg
scas
mov
and
cld
rep
loopne
sar
dec
cmp
ret
test
inc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
fmul
add
lock
sbb
out
cwde
ss
push
rcr
cmp
sbb
sar
mov
xchg
adc
aam
jmp
(bad)
fucom
and
inc
cmp
or
into
xor
push
fnstcw
adc
xor
pop
rcr
xchg
lahf
push
push
or
iret
jmp
fstp
push
push
cmps
neg
jmp
in
jmp
fadd
pop
jg
repz
outs
fld
push
addr16
xchg
adc
call
mov
jb
sub
mov
xchg
xor
cmp
(bad)
fs
dec
or
fs
push
jmp
push
jl
sbb
mov
test
adc
iret
imul
imul
icebp
mov
popf
jmp
std
xor
popa
sub
inc
lahf
jle
cmp
(bad)
fdiv
shl
ds
test
aad
arpl
test
or
mov
pop
cdq
fstp
cld
dec
push
push
push
dec
and
dec
mov
xchg
mov
sbb
pop
addr16
cmps
sub
jb
add
call
in
and
or
jo
jne
fidiv
shl
jmp
sahf
cwde
mov
sti
pusha
(bad)
cmc
mov
xchg
dec
mov
jb
nop
pop
push
js
icebp
push
inc
icebp
pop
in
cwde
cmp
stc
dec
pop
cmp
pop
out
push
hlt
mov
sub
pop
mov
adc
call
pushf
les
mov
inc
push
fsub
sbb
call
cmp
push
cmps
inc
sub
push
or
and
iret
lds
stos
mov
lds
sbb
in
xchg
out
jns
mov
adc
aam
push
int
add
jg
xchg
jmp
cmps
sub
shl
sbb
dec
adc
ds
add
dec
mov
mov
xchg
mov
jnp
sub
aaa
mov
aad
ja
icebp
test
adc
cmps
jg
in
loopne
cmp
jbe
aad
int
loope
fdivr
pop
and
sar
aad
(bad)
lock
test
xchg
cli
mov
mov
out
mov
push
push
mov
sbb
imul
shl
jge
mov
mov
mov
pushf
not
cli
push
inc
and
mov
pop
dec
cmps
pop
popf
inc
add
dec
cld
mov
(bad)
mov
call
cmp
popf
icebp
adc
imul
ins
(bad)
into
mov
jb
sub
push
sar
pop
fcom
and
xor
jne
add
leave
xor
je
(bad)
push
loopne
cmp
test
(bad)
lock
xchg
mov
add
scas
loopne
scas
hlt
out
and
mov
mov
inc
iret
jg
ja
je
push
cmps
leave
push
and
push
(bad)
repnz
stc
inc
or
inc
test
xchg
aam
mov
cmp
int
mov
xor
repz
xchg
cli
lahf
fmul
stos
jno
mov
or
sbb
dec
xor
stos
out
sbb
mov
jle
in
sahf
push
xor
shr
xchg
or
fiadd
xchg
pop
sbb
mov
nop
imul
jbe
pop
bound
cdq
lea
lahf
pusha
ret
xchg
mov
imul
out
pop
mov
test
pop
(bad)
inc
mov
add
mov
call
std
aam
jg
mov
jb
xchg
popf
dec
rcl
xchg
pusha
pop
lods
lahf
inc
in
inc
pop
fimul
(bad)
aam
add
(bad)
cli
push
sub
xchg
out
outs
push
mov
mov
xchg
int
lds
inc
scas
xor
in
aam
add
aad
pop
cli
mov
imul
(bad)
xor
cmc
clc
sbb
cmps
test
xchg
sbb
leave
shl
ins
iret
mov
jo
mov
lods
loopne
(bad)
and
jmp
xor
sub
fwait
icebp
jge
sbb
nop
xchg
sbb
sti
pop
or
cmp
fcomp
mov
inc
les
mov
test
push
adc
mov
stos
gs
pop
retf
loopne
fwait
and
popa
jmp
lds
and
adc
bound
jmp
fsub
push
and
call
xor
xchg
add
sub
xor
jp
sub
lods
cs
inc
movs
int
pop
stos
ins
adc
lea
sub
pushf
inc
es
adc
rcr
pusha
or
pop
ins
sar
stos
mov
dec
popf
mov
push
test
pop
xor
popa
sub
xchg
jnp
arpl
mov
movs
and
aam
repz
and
ja
cmps
sbb
cmp
mov
dec
daa
sbb
addps
ins
sbb
cmp
xor
fs
in
ja
sbb
(bad)
lods
inc
xchg
dec
lods
jle
push
(bad)
or
(bad)
fadd
mov
xor
repnz
gs
inc
(bad)
test
mov
jge
jne
sbb
cmp
pop
xchg
mov
push
js
sti
retf
clc
dec
arpl
neg
jmp
mov
pop
popa
shl
mov
jge
jbe
xor
js
add
mov
push
aas
movs
mov
sti
outs
inc
iret
push
add
inc
mov
jns
pushf
pop
in
pop
int
out
mov
pop
jge
imul
fild
inc
sar
retf
dec
cli
loopne
pop
and
sbb
push
sub
mov
sbb
xor
out
sar
hlt
or
mov
div
fwait
imul
dec
dec
fistp
fisub
sub
(bad)
and
adc
xchg
(bad)
ja
jbe
xchg
mov
dec
in
stos
pop
push
pop
cmps
imul
push
sbb
dec
das
mov
shl
movs
repnz
out
fstp
lds
xor
adc
mov
mov
cmp
pop
mov
pop
and
iret
mov
lahf
dec
test
push
loopne
outs
loopne
repnz
inc
sbb
mov
scas
mov
mov
mov
and
cmps
bound
cmp
adc
inc
pop
push
push
hlt
xor
cmp
sbb
inc
mov
sbb
dec
mov
jle
fild
xor
dec
add
mov
adc
mov
sub
daa
fwait
push
rcr
imul
int
dec
and
mov
outs
inc
mov
hlt
xchg
cmp
in
adc
inc
xor
sbb
mov
mov
xor
adc
lods
and
push
out
or
ret
mov
scas
add
jbe
cmp
pop
mov
aaa
adc
mov
pop
(bad)
jno
aas
sahf
push
and
aam
cmp
pop
jmp
adc
inc
imul
push
cwde
jb
mov
scas
add
adc
ret
out
dec
arpl
dec
pop
data16
jmp
stos
cmps
(bad)
(bad)
gs
sbb
icebp
sbb
jmp
cmp
cmp
mov
(bad)
das
sub
and
dec
cs
mov
jno
xchg
test
retf
test
or
dec
dec
push
or
test
neg
mov
mov
in
or
lds
lods
dec
dec
ror
ret
pop
popa
shl
cmc
jns
sbb
xor
adc
cli
retf
jae
cli
nop
push
and
adc
(bad)
stc
dec
sub
dec
ins
xor
xor
sub
jecxz
push
dec
jecxz
repz
push
popf
adc
out
mov
mov
jbe
push
mov
push
sbb
aas
pop
dec
mov
and
add
mov
inc
(bad)
dec
loope
mov
cmp
cmp
pusha
mov
fcmovu
popf
and
adc
adc
not
sub
in
xchg
cmp
or
fidiv
or
(bad)
push
shr
adc
sub
mov
cmps
sar
dec
pop
push
sbb
xchg
icebp
push
loopne
jle
je
jo
shl
sbb
(bad)
dec
xor
mov
cmps
cmp
loopne
out
push
add
or
in
bound
xlat
repnz
aam
push
div
fwait
cmc
stos
mov
push
inc
mov
test
add
sbb
xchg
or
dec
sbb
data16
xchg
call
adc
inc
aad
mov
out
push
lock
out
jns
enter
jge
or
dec
popf
ins
pop
dec
push
les
sti
loop
push
fldenv
cmps
fcomp
mov
and
push
retf
fnstcw
inc
inc
retf
scas
pop
retf
mov
jle
lods
loopne
jmp
arpl
cwde
daa
ret
icebp
xor
cmp
adc
xlat
inc
xchg
cmp
fcomp
push
in
adc
or
jbe
ror
pop
aam
lods
shl
mov
int3
push
sar
retf
lea
aad
out
ficomp
cmp
lock
sbb
adc
mul
jbe
ins
test
outs
cmp
fistp
in
mov
sub
js
xor
stos
mov
not
(bad)
aas
or
add
jmp
lock
in
sbb
call
imul
test
in
and
mov
xchg
inc
popf
loope
mov
cmp
push
or
mov
imul
dec
lahf
pop
sub
scas
retf
jb
and
xchg
mov
pop
mov
add
xchg
mov
fs
cmp
xor
(bad)
gs
ret
fild
out
add
inc
cli
add
push
adc
pop
dec
or
(bad)
fwait
sub
sub
dec
sbb
cmp
sbb
data16
push
rcl
add
cmps
sub
arpl
push
gs
dec
repz
shl
sub
pop
fild
icebp
lahf
scas
sub
pusha
jnp
inc
int
(bad)
pushf
icebp
jp
ins
js
push
cmp
ins
ror
adc
retf
test
adc
mov
jnp
pushf
push
jecxz
popf
push
retf
mov
cmp
icebp
sub
xlat
push
cmp
das
outs
cld
cmps
pop
or
(bad)
ror
mov
cmp
add
lods
push
jg
jnp
mov
jmp
shr
mov
add
or
mov
adc
pusha
push
sbb
and
xchg
leave
shr
dec
cmp
sbb
bound
sub
stos
ins
test
test
mov
lea
dec
mov
cmp
mov
pusha
mov
or
stc
push
add
xchg
push
mov
or
pushf
add
enter
js
std
jnp
gs
push
push
les
jbe
(bad)
and
out
test
loop
cmc
jae
inc
dec
pop
xchg
aas
jl
or
int3
and
cwde
pop
mov
xchg
inc
fidiv
jge
bound
into
stc
mov
test
test
popf
add
dec
mov
das
mov
sbb
fidiv
mov
enter
lods
jle
xchg
jmp
jl
push
jl
fst
sub
xchg
sahf
imul
pop
mov
cmc
test
push
std
dec
retf
div
(bad)
imul
(bad)
mov
jmp
or
lock
mov
push
dec
pop
inc
gs
xor
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
and
lea
add
bswap
int3
out
in
xlat
sahf
addr16
xchg
mov
fs
jne
mov
fidivr
ins
inc
mov
mov
mov
mov
mov
retf
adc
pop
jnp
test
add
cmc
ret
and
xor
aas
cmp
sub
cmp
into
std
sub
push
mov
xchg
test
jecxz
pop
jle
retf
fst
or
mov
(bad)
push
ins
retf
out
in
push
lahf
mov
js
cmp
out
rol
sar
dec
mov
ds
fwait
hlt
loope
mov
pop
adc
pop
mov
xchg
mov
inc
mov
mov
leave
das
jle
fist
ins
(bad)
fistp
(bad)
jmp
dec
mov
dec
xor
arpl
cmc
or
xchg
or
hlt
scas
cmp
movs
int3
inc
fldcw
adc
adc
iret
push
aad
je
fdiv
cmps
mov
and
jp
jae
sub
sbb
outs
or
or
push
das
jg
add
out
cmp
repnz
xchg
mov
push
movs
movs
inc
jl
push
dec
mov
(bad)
(bad)
int3
pushf
sbb
sbb
iret
cmp
mov
dec
xchg
repnz
dec
sahf
adc
add
sub
in
loop
xchg
cmps
sub
pop
ficomp
xor
mov
daa
dec
pop
pop
dec
(bad)
mov
sti
jle
scas
fucom
xchg
mov
sbb
lds
fisubr
mov
jp
jg
imul
int3
fwait
dec
mov
mov
nop
(bad)
lea
or
not
lods
mov
popf
ins
pop
mov
or
lahf
mov
push
pop
push
imul
fdivr
pop
push
push
cmps
pop
lea
xor
dec
inc
jns
pop
or
xor
pop
fimul
outs
inc
pusha
sar
push
mov
ds
mov
dec
add
movs
outs
mov
mov
aas
fcmove
sbb
xor
dec
xchg
add
adc
out
dec
sbb
fst
pop
bound
ja
mov
pop
les
xchg
push
push
(bad)
in
mov
sbb
jnp
pushf
mov
pop
cmp
xchg
das
fsub
aaa
fwait
dec
(bad)
pop
mov
outs
(bad)
cmp
pop
js
xor
inc
jne
enter
(bad)
mov
icebp
(bad)
stos
mov
cmps
dec
xchg
mov
jnp
imul
inc
sbb
int3
ins
iret
in
cmps
jo
jle
sub
aas
xchg
sar
fwait
cwde
fbstp
mov
test
jg
push
rol
push
test
stos
pop
xlat
mov
sti
xchg
mov
cmp
retf
sub
push
daa
(bad)
repnz
stos
enter
push
hlt
sub
pop
adc
sbb
sub
bnd
(bad)
test
jbe
leave
dec
rol
ds
cdq
outs
popf
cmp
lods
mov
(bad)
loope
fbstp
std
test
inc
mov
je
fwait
inc
(bad)
dec
xchg
jl
(bad)
stos
mov
or
fcmove
iret
cmovns
sub
jmp
lahf
jb
pusha
frstor
inc
xlat
xor
mov
mov
push
clc
add
sub
iret
sub
pop
cmp
repz
or
daa
lea
add
imul
pop
mov
cmp
cmp
or
mov
pop
mov
out
mov
movs
inc
mov
imul
or
fwait
cmp
mov
aad
pop
xor
cwde
fstp
imul
pop
dec
inc
mov
push
(bad)
out
es
add
rcl
fisubr
cmc
ja
pop
jle
add
lahf
mov
in
pop
sar
pop
ss
pop
repnz
pop
inc
pushf
and
sub
les
pop
fisub
push
test
cld
sar
xchg
sbb
out
push
or
mov
jmp
test
push
das
into
scas
xchg
mov
jmp
inc
retf
ss
rcl
push
pop
aaa
sbb
cmc
or
xor
in
imul
jne
retf
fistp
pop
stos
jle
xchg
or
aam
sbb
leave
xor
jge
mov
test
or
cmc
or
test
popa
aam
cmp
and
sti
mov
pop
dec
push
and
test
out
mov
push
shl
push
fdivr
lea
popa
dec
add
lahf
pop
enter
retf
xor
stos
add
aam
addr16
or
cs
mov
add
add
jmp
push
mov
jp
(bad)
pop
xor
mov
sahf
push
mov
iret
and
xor
jnp
xor
out
ds
in
lahf
add
or
outs
dec
aad
out
inc
xchg
(bad)
push
fmul
ret
add
push
or
jge
popf
(bad)
sar
mov
cmp
call
sahf
mov
cmp
and
and
adc
xor
mov
and
je
and
mov
js
xchg
scas
outs
loop
fistp
(bad)
icebp
add
adc
(bad)
adc
adc
inc
adc
ins
stos
push
inc
aas
ins
enter
iret
add
push
retf
and
clc
dec
xchg
mov
adc
xlat
xor
pop
(bad)
cmc
inc
mov
sti
lods
daa
mov
mov
loopne
cdq
dec
mov
xor
dec
retf
shl
in
ss
lds
(bad)
or
popa
mov
and
mov
(bad)
lods
(bad)
and
xor
dec
or
dec
sar
aas
hlt
cmp
mov
(bad)
pop
leave
mov
jl
aam
stc
les
xor
cmp
jle
fmul
pop
xor
push
mov
aam
fmul
cwde
xchg
jnp
dec
sahf
rol
aas
clc
aam
push
xor
leave
jmp
adc
(bad)
ins
sbb
pushf
or
inc
mov
adc
sub
push
xor
sar
ins
loopne
sub
pop
add
mov
call
ja
dec
mov
sti
daa
dec
jp
ret
sahf
pusha
enter
jb
push
mov
adc
add
mov
jns
fistp
ins
push
add
xor
test
mov
(bad)
js
(bad)
cmps
(bad)
call
mov
cdq
push
je
aad
cmp
mov
in
and
mov
push
ret
pop
dec
xchg
sbb
push
mov
movs
adc
test
aas
mov
jne
idiv
es
ss
ja
int
sbb
push
imul
inc
sahf
div
jmp
mov
mov
addr16
hlt
mov
arpl
mov
mov
xor
xor
jo
xor
xchg
adc
test
cmc
movs
xchg
dec
mov
xor
mov
mov
cli
in
pushf
js
jmp
and
pop
sbb
inc
out
adc
inc
mov
fnstcw
fs
mov
lds
sbb
push
xor
xor
shl
dec
leave
cmp
mov
hlt
mov
nop
dec
or
lahf
or
inc
mov
pusha
add
cmp
into
int
push
pop
adc
sub
retf
push
and
or
push
inc
push
pop
jae
jge
mov
and
push
int3
(bad)
fsubr
mov
addr16
jecxz
pop
icebp
mov
enter
dec
movs
das
jae
cmp
fidivr
xor
mov
loope
fnstenv
mov
mov
daa
adc
xor
pop
lods
inc
or
ja
rol
xchg
arpl
pop
and
mov
jle
popf
loop
hlt
outs
(bad)
(bad)
or
mov
popa
inc
jmp
or
hlt
cmp
push
out
inc
sahf
jne
sub
les
sub
(bad)
lea
xchg
sub
adc
sti
call
mov
mov
mov
addr16
xor
call
mov
inc
in
and
mov
vmulss
iret
or
mov
jo
imul
cs
mov
lahf
mov
pop
push
ins
or
lock
(bad)
aad
xlat
push
xchg
ins
and
mov
cdq
loope
(bad)
mov
jp
mov
sbb
cmp
loope
sbb
test
add
cmc
retf
ins
fbstp
pop
cmps
inc
add
push
mov
push
stos
dec
(bad)
mov
daa
ret
cmp
pop
mov
mov
mov
mov
fldenv
shl
mov
cli
jno
addr16
and
adc
add
in
enter
or
sub
(bad)
out
mov
add
mov
pop
daa
addr16
adc
fiadd
jge
imul
fadd
xchg
ja
dec
xchg
mov
xchg
fnsave
pop
sbb
push
and
or
fisub
pop
loop
mov
jmp
add
jp
out
pusha
(bad)
sahf
mov
xor
pop
mov
lock
int
push
cmps
pop
addr16
enter
cmps
lds
test
mov
repz
popa
adc
inc
push
push
loop
retf
sub
gs
cld
jae
bound
mov
fneni(8087
ins
mov
mov
sbb
jno
leave
scas
push
jmp
xor
dec
dec
enter
leave
jns
and
cmp
call
inc
or
popf
pushf
and
int
gs
cmp
mov
push
add
daa
adc
sub
and
mov
pop
lock
mov
adc
sbb
push
pop
xchg
pmullw
loop
dec
adc
jns
xchg
jb
and
jecxz
ins
cs
lahf
fs
jae
ror
repnz
sub
xchg
mov
js
xor
fst
or
cmps
rsm
dec
fcomp
mov
aad
aas
dec
or
into
pop
aaa
dec
rcr
lea
stos
mov
sbb
dec
in
stc
cli
cs
add
stos
test
jecxz
shl
out
ret
pop
fld
popa
cwde
sub
jb
add
retf
imul
aaa
adc
sbb
fisub
loop
movs
stos
mov
fisubr
inc
sub
jmp
jne
sbb
das
cmps
sub
or
retf
pop
outs
jne
adc
loopne
bound
jno
lods
mov
dec
imul
sbb
aaa
outs
sbb
into
and
xlat
(bad)
cmp
ins
pusha
scas
pusha
ds
ja
retf
call
xchg
retf
rcl
out
cmovbe
sar
pop
mov
mov
sbb
ret
xor
dec
or
dec
sub
cmp
dec
cmps
fwait
or
sahf
mov
mov
into
cld
in
mov
fwait
pop
mov
xchg
mov
pop
or
in
xor
sub
push
hlt
ins
or
rcl
in
stc
push
mov
xchg
iret
daa
xchg
cmp
mov
ficomp
(bad)
ss
jmp
sahf
jmp
inc
add
shl
in
jns
and
inc
mov
push
(bad)
push
jecxz
xchg
jae
gs
xor
mov
xor
enter
push
pop
cmp
cld
mov
mov
fistp
int
add
pop
dec
cld
sbb
loopne
sbb
pop
pop
jmp
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
loope
fstp
aas
cmp
xchg
or
cmp
adc
int3
xor
cmp
jecxz
jge
inc
cmp
scas
xchg
sub
out
cmp
idiv
pop
add
fs
sar
jg
movs
adc
xor
inc
cmp
add
clc
push
test
into
fldcw
imul
jae
dec
in
arpl
dec
push
ja
out
dec
scas
or
repz
mov
pop
pop
xor
adc
mov
and
jnp
mov
inc
dec
sbb
inc
fiadd
pandn
and
int
mov
xor
aad
or
jmp
inc
ficomp
aam
jne
mov
ja
addr16
(bad)
ret
push
stc
sub
dec
ja
cs
push
in
hlt
dec
mov
gs
cmc
movs
sub
movs
xchg
jp
(bad)
fdiv
jle
movhps
hlt
jp
sbb
fisub
test
stos
js
(bad)
mov
ja
cmp
sbb
push
dec
sub
retf
adc
jns
push
or
rsqrtps
add
mov
pushf
lock
call
mov
pop
xchg
jae
cmp
aam
sbb
daa
dec
mov
cmc
pop
mov
dec
enter
jb
sbb
xor
rol
das
and
inc
or
push
jns
sub
imul
ss
ret
movs
daa
test
lds
ds
dec
ret
les
cwde
cmps
bound
push
xchg
icebp
jg
xchg
xchg
push
pop
ja
in
popa
xor
jg
add
mov
or
and
daa
lea
push
push
pushf
daa
cmp
sub
aas
cdq
fnstcw
mov
je
jo
pop
xor
push
or
fs
mov
push
add
and
ficom
dec
mov
push
aad
adc
in
icebp
jle
lahf
out
iret
fisttp
adc
xchg
data16
out
jle
rcr
test
xor
cmp
mov
call
retf
lods
mov
iret
jne
push
xor
fsub
jp
stc
fsubrp
dec
inc
cld
clc
mov
repnz
in
add
pop
pop
ror
(bad)
mov
dec
iret
not
or
inc
scas
push
jmp
adc
sbb
loope
mov
sub
call
data16
mov
inc
imul
in
fsub
mov
movs
fdiv
jle
in
pop
retf
jmp
cmp
xchg
dec
pop
gs
stos
jg
int3
aam
test
(bad)
jb
out
jno
xlat
test
pusha
pop
(bad)
mov
ror
sbb
cli
das
adc
cmp
mov
add
cld
scas
je
jmp
ds
cmps
(bad)
fmul
cli
sub
movs
inc
ret
int3
jecxz
jno
data16
xchg
out
test
leave
pop
or
dec
inc
adc
lahf
mov
pop
xor
js
jge
test
xchg
inc
imul
js
inc
imul
movs
lods
(bad)
sbb
sub
hlt
shl
jge
and
call
mov
(bad)
pushf
enter
into
and
sbb
popa
jnp
and
dec
in
loop
(bad)
mov
push
loopne
mov
xchg
inc
xchg
mov
scas
retf
clc
pushf
xchg
lahf
mov
mov
push
sbb
icebp
or
fadd
mov
mov
fcomp
cs
add
outs
mov
jp
jb
mov
(bad)
sub
cs
jmp
inc
iret
pop
jo
(bad)
clc
push
sbb
push
push
fwait
jne
stos
cmp
jno
sahf
aaa
pop
push
xchg
pop
aas
mov
icebp
mov
dec
sub
cmp
push
mov
and
psrlw
rcr
(bad)
jmp
push
pusha
jmp
shrd
adc
jmp
fsub
xlat
nop
sub
call
outs
sub
nop
xchg
in
ins
repz
jne
mov
xor
mov
stos
sub
mov
iret
(bad)
shl
pop
imul
es
in
cwde
add
or
retf
aaa
lods
jmp
xor
inc
inc
pop
cmp
sub
and
retf
jo
sub
mov
jo
mov
shl
mov
mov
dec
dec
add
test
adc
xchg
mov
mov
test
cmps
aas
inc
fcomp
enter
mov
push
fwait
cmc
popa
xor
ror
sar
mov
mov
(bad)
mov
pop
push
(bad)
cmp
sub
mov
out
sbb
adc
inc
adc
cld
ds
pop
outs
outs
js
pop
pop
imul
imul
sub
mov
lea
cmps
stc
jle
sub
jge
mov
iret
sub
dec
jle
repnz
sub
iret
mov
xchg
cli
mov
outs
or
fisttp
cwde
sbb
xor
retf
hlt
pop
pop
in
xor
out
xchg
std
nop
mov
and
pop
int3
and
(bad)
test
pop
xor
retf
call
ja
mov
pop
push
rcr
dec
ss
movs
dec
lods
push
shl
lods
enter
mov
and
mov
pop
pop
or
sbb
rcl
mov
fwait
xchg
sbb
push
xor
mov
and
mov
jns
bound
(bad)
aam
repz
cld
fwait
mov
adc
jne
fimul
adc
push
adc
dec
rcl
pop
ja
inc
and
pop
pop
lods
push
aas
sub
sub
iret
mov
call
outs
and
gs
jle
stos
std
(bad)
mov
pop
inc
mov
addr16
inc
and
test
mov
lock
or
mov
push
and
mov
rcl
mov
test
sbb
mov
shr
test
(bad)
mov
jns
iret
dec
std
add
shr
out
fsubr
inc
mov
dec
ror
mov
or
mov
adc
movs
outs
addr16
add
fisubr
leave
cmp
mov
push
dec
jno
xchg
sub
leave
adc
ss
adc
(bad)
sub
jmp
push
pusha
push
vpacksswb
dec
repz
sahf
out
sub
mov
jns
cmp
inc
dec
imul
movs
ins
mov
xchg
cmps
arpl
nop
lea
hlt
cmp
js
retf
in
push
shl
movs
or
cmps
xor
cmp
scas
adc
lock
adc
xor
xchg
dec
or
stos
loope
test
sub
shl
jmp
mov
bound
push
(bad)
xchg
pop
int3
mov
jmp
sub
mov
test
leave
cmp
lahf
bound
jp
inc
sub
sbb
cli
sbb
sbb
push
hlt
aam
and
pop
mov
sbb
jmp
rcr
xchg
leave
dec
and
(bad)
jp
ds
mov
jmp
(bad)
push
inc
cmp
(bad)
or
ret
cmps
lods
cmps
xchg
dec
cmp
in
pop
xchg
iret
lods
mov
add
aad
bound
push
jo
add
in
dec
fistp
sub
xchg
icebp
jns
lods
xchg
add
je
loop
pop
jge
aam
clc
xchg
test
mov
or
arpl
push
dec
and
push
xchg
jnp
or
clc
int3
mov
imul
push
scas
ja
test
ret
mov
xor
popa
and
mov
leave
ja
fistp
dec
idiv
outs
pop
mov
mov
loope
sar
imul
data16
clc
mov
popf
pusha
js
loope
adc
fisttp
push
aas
cmp
out
and
(bad)
sbb
loop
push
sbb
fnstenv
inc
dec
xor
clc
mov
or
mov
and
movnti
jae
or
lahf
fcom
fstp
add
cmp
inc
mov
in
scas
out
mov
sbb
cmp
mov
xchg
and
adc
in
pop
jp
jne
fstp
sub
fstp
sbb
push
call
fiadd
ins
adc
mov
and
mov
stc
dec
and
or
adc
mov
daa
int
push
cmp
mov
hlt
js
xchg
push
pushf
pop
jmp
popa
iret
repz
fs
pop
inc
dec
pop
repnz
xlat
push
jno
mov
mov
cmc
sti
loope
xor
into
mov
sahf
mov
into
outs
inc
push
xchg
dec
xlat
fld
jnp
in
or
jmp
cmps
montmul
cmps
add
xchg
or
aaa
mov
in
dec
icebp
mov
icebp
gs
popf
push
jae
cmp
int
xchg
sbb
jb
and
call
adc
mov
or
rcr
rcl
or
fdiv
scas
push
jb
jns
inc
call
(bad)
aam
cmp
test
test
pop
jecxz
out
jge
jno
into
mov
sub
mov
xchg
pop
ins
mov
xchg
outs
pop
jnp
sub
jae
xor
xlat
in
add
xchg
mov
fdiv
neg
add
dec
mov
cli
dec
dec
cmp
fild
fistp
loopne
dec
cwde
cmp
test
sahf
aad
aas
xchg
(bad)
or
xlat
shl
sub
sub
in
jns
pop
xor
xchg
sub
cmp
fs
enter
cdq
stos
xchg
cmp
xor
(bad)
pop
xchg
call
(bad)
(bad)
or
and
mov
scas
ins
pop
jne
jl
push
lods
or
pop
lahf
aaa
scas
call
sub
retf
adc
loopne
sub
push
dec
test
(bad)
int
ds
ror
call
mov
push
push
paddusb
mov
dec
ficom
sbb
xchg
je
in
ds
inc
jmp
xchg
ss
push
ss
fisubr
sbb
pusha
fisub
fs
gs
xchg
fcmovu
jmp
adc
das
(bad)
cmp
fmul
loopne
mov
mov
aad
mov
out
mov
cmp
nop
data16
inc
cmps
add
pop
mov
(bad)
ss
out
pop
fcom
sub
mov
out
mov
jnp
cs
not
jno
loope
pop
push
out
inc
mov
add
repz
idiv
jmp
xchg
ficom
mov
movs
pop
mov
icebp
mov
popa
retf
xor
lods
push
ins
lea
jbe
loope
mov
sbb
(bad)
xchg
hlt
jmp
mov
dec
jnp
cdq
add
inc
mov
test
cwde
pop
and
cmp
arpl
fstp
loop
dec
lahf
mov
xor
add
or
stc
cdq
xor
inc
aas
xchg
ficomp
dec
stc
not
push
aas
pop
in
fist
mov
in
mov
out
test
or
cmp
pusha
mul
lahf
movs
cmc
out
push
fadd
int3
in
je
push
rcl
mov
adc
out
sar
dec
add
daa
pop
mov
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
inc
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
fldcw
cmp
jnp
mov
addr16
inc
test
out
cmp
jne
xor
sbb
popf
mov
xchg
jge
mov
stc
mov
dec
clc
add
xchg
pop
cmp
mov
in
lock
mov
test
in
inc
pop
lods
movs
int
jns
sub
xor
mov
or
dec
push
fstp
mov
daa
rcr
xlat
and
xchg
addr16
or
aas
jecxz
push
jae
stos
rcr
mov
jo
scas
mov
cmp
jno
mov
mov
adc
ss
or
cmc
pop
dec
sub
cmp
and
pop
inc
xor
out
sub
loopne
jle
and
lahf
cdq
add
jle
test
aaa
loope
or
push
sub
sbb
mov
inc
iret
push
test
popf
das
cmc
aas
dec
cmp
mov
pop
sti
and
xlat
sar
xchg
adc
inc
sbb
ret
ror
movs
in
sahf
dec
mov
pushf
jp
sbb
dec
sbb
mov
sbb
lock
cmp
xor
in
imul
retf
(bad)
lods
sub
outs
leave
ss
mov
xchg
mov
sub
movs
out
dec
sub
xor
and
imul
daa
cmp
(bad)
sub
icebp
xchg
rcr
pop
pusha
in
xor
mov
sbb
pop
push
mov
outs
xchg
fnstsw
call
mov
pop
xchg
je
js
sbb
ss
pop
pop
cwde
ret
adc
sub
iret
adc
mov
(bad)
fld
xor
dec
push
out
xor
mov
pop
into
cmp
sub
inc
xchg
push
cld
mov
lea
jl
outs
imul
ds
cmp
inc
mov
outs
jae
mov
inc
repnz
cmp
sub
mov
xlat
clc
clc
mov
in
jmp
std
xchg
cmp
(bad)
mov
fdiv
(bad)
pmovmskb
pop
repnz
pop
push
(bad)
lods
sub
cmp
addr16
in
pop
jl
scas
mul
mov
movs
sub
push
add
and
mov
rol
imul
cmp
dec
push
aad
dec
fiadd
pop
push
fist
fild
nop
xor
neg
shl
(bad)
(bad)
cld
js
loope
das
xchg
sub
xchg
push
jae
or
mov
sti
xchg
lds
out
push
cmps
pop
lods
popf
scas
mov
inc
sbb
xchg
mov
push
rol
pop
rcr
leave
mov
lods
mov
cmp
dec
pushf
int
cmc
jmp
jns
outs
pop
sbb
sub
rcr
sub
retf
inc
push
addr16
repnz
or
nop
les
jl
ret
(bad)
add
lods
pop
sti
in
imul
cmc
jo
xchg
or
in
sbb
fstp
iret
pop
jo
enter
sbb
inc
iret
sbb
ins
ja
jb
mov
std
int
push
clc
test
or
mov
add
test
dec
jmp
pop
xchg
cmp
jp
lahf
pop
push
sahf
cmp
jne
fs
sbb
jecxz
sbb
push
jge
stos
cmps
inc
(bad)
or
xlat
aaa
rol
stos
inc
stos
add
fadd
jge
dec
icebp
in
icebp
inc
fadd
or
mov
dec
sar
std
js
rol
jmp
cwde
pop
sub
leave
pusha
lahf
xor
push
or
xchg
push
sbb
sub
jo
imul
inc
fyl2x
rcl
jecxz
ficom
push
xchg
jno
jbe
adc
lahf
int
xchg
add
je
xchg
and
hlt
stos
mov
sub
push
mov
add
pop
and
int3
jle
imul
mov
adc
mov
inc
leave
push
add
mov
and
mov
retf
(bad)
scas
int3
lahf
cmp
ret
add
xchg
cmc
xchg
lods
ins
mov
push
repnz
sbb
loope
xor
push
jbe
into
mov
pop
push
mov
pop
loopne
sbb
and
push
cmps
mov
sbb
lds
inc
push
fwait
cdq
daa
ret
outs
into
adc
or
popa
loop
push
dec
setns
mov
add
fs
jns
adc
cwde
jbe
in
dec
out
in
dec
sub
mov
pop
out
mov
fmulp
lock
not
retf
cmps
in
xchg
dec
dec
or
test
loopne
out
or
sar
cmc
jmp
add
cmps
add
jp
push
cmp
mov
push
das
xchg
mov
nop
fsubr
inc
mov
mov
je
pop
mov
mov
xchg
jge
inc
je
test
sub
fdivr
clc
or
mov
xchg
jl
mov
dec
cmc
jmp
fld
pop
mov
nop
pop
adc
push
jg
and
dec
fidiv
sbb
(bad)
xor
push
mov
mov
cmps
adc
out
xchg
lods
outs
xchg
(bad)
neg
dec
hlt
retf
xlat
addr16
sbb
sbb
fmulp
cli
adc
loope
arpl
mov
ret
dec
jne
aas
mov
add
xor
push
sub
jge
out
js
lahf
or
dec
sub
push
out
test
dec
loop
xchg
lods
ins
imul
jns
and
mov
fwait
push
xor
inc
xor
pop
outs
xchg
fdiv
mov
cmc
dec
imul
stc
in
cdq
adc
scas
test
fldcw
fiadd
xchg
repnz
cdq
int3
xadd
ss
arpl
addr16
push
cmp
mov
sbb
popf
xor
jle
cs
cli
jge
add
mov
ficom
clc
mov
test
mov
scas
loop
cmc
or
stos
mov
daa
movs
test
movs
es
movs
stc
int3
lock
cmp
add
popa
sub
add
mov
movs
test
mov
out
push
cmp
cmc
inc
dec
in
cmp
and
in
pop
mov
sbb
xabort
inc
xchg
inc
pop
push
adc
pop
mov
shr
ds
fisttp
sub
or
pop
and
jmp
dec
push
retf
pop
imul
fdiv
mov
and
cmp
cmp
int3
push
jnp
mov
iret
sub
mov
popf
test
int3
je
mov
mov
mov
sub
outs
xlat
out
xchg
sbb
repz
push
xor
jg
cmp
jecxz
ficom
and
fs
mov
cld
pop
gs
mov
aam
pop
add
mov
cdq
ficom
push
and
xchg
pop
std
mov
aam
(bad)
mov
(bad)
lock
das
movs
int
jb
scas
inc
pop
inc
and
sbb
test
cmp
dec
in
je
js
inc
sub
jbe
repz
mov
inc
and
fisub
test
and
adc
imul
stos
test
pushf
pop
add
pop
loop
sahf
outs
add
dec
sub
push
push
mov
jle
scas
adc
(bad)
sti
std
sbb
push
in
in
adc
dec
cmps
imul
div
pop
sub
jb
xchg
push
sub
cmp
mov
test
cmc
xlat
es
xchg
sbb
pusha
(bad)
jmp
mov
add
outs
fild
mov
ror
mov
aad
and
and
call
or
sahf
or
(bad)
std
loope
(bad)
rcr
pop
jmp
out
jle
xchg
add
(bad)
pop
test
and
jle
mov
mov
mov
xchg
pop
jae
adc
movs
shr
rcl
jmp
mov
cli
(bad)
movs
jmp
gs
loopne
and
pushw
add
in
leave
cli
xor
neg
jo
pushf
bound
cmp
cwde
mov
pop
xchg
in
and
sbb
cs
int3
push
xchg
xor
xor
dec
jbe
add
fistp
loope
out
pop
inc
addr16
lock
jae
loope
sub
clc
test
icebp
jge
xchg
cdq
dec
xchg
cmc
sar
xor
mov
je
sbb
aas
lods
in
fsub
cmp
ret
inc
xor
jge
(bad)
sar
adc
mov
rcr
fdivr
js
mov
or
sahf
jp
ret
push
jo
fwait
dec
outs
sub
test
sub
sub
out
pop
jbe
xchg
or
stos
lods
lea
mov
cs
push
adc
call
stos
push
fisttp
add
shr
sub
imul
or
popf
movs
mov
mov
es
push
and
fcomp
xor
sbb
in
(bad)
mov
mov
inc
sbb
into
aad
aad
sbb
aaa
ret
test
clc
cld
neg
cmp
jg
aad
jns
ret
outs
out
dec
adc
mov
mov
ficom
(bad)
lods
xor
(bad)
or
in
outs
cmps
gs
lods
fdivr
jnp
add
mov
imul
xchg
jmp
es
test
(bad)
leave
fnstcw
adc
arpl
pop
push
bound
sbb
aad
pop
repz
inc
inc
xor
inc
jg
mov
or
xor
jae
sbb
out
jl
add
cdq
cmp
xor
add
mov
pop
lods
lahf
aas
int
and
not
ret
jb
adc
or
out
clc
jae
mov
fsubr
sbb
jmp
inc
push
xchg
(bad)
aam
lods
mov
pop
mov
adc
(bad)
pop
in
loope
stos
mov
gs
popf
js
mov
in
inc
cmp
mov
add
frstor
or
inc
xor
into
add
adc
jns
adc
daa
int
cmp
cld
lds
or
std
pop
in
mov
cli
cmp
jmp
dec
mov
ja
dec
das
mov
jmp
ficomp
inc
xor
sbb
jmp
call
push
in
and
mov
inc
fidivr
fwait
scas
not
dec
(bad)
push
cmc
pop
jmp
aad
xchg
lods
mov
add
scas
sub
(bad)
(bad)
pop
in
ins
mov
ins
jbe
or
sub
into
mov
mov
into
jae
and
and
push
cdq
test
pop
and
cli
movs
or
fidiv
cmp
rol
add
in
inc
sbb
lea
pusha
in
popf
inc
add
repnz
jp
test
out
cmp
inc
push
mov
mov
mov
inc
cmp
jle
push
inc
shr
repz
mov
int3
addr16
daa
add
call
into
imul
mov
pop
popf
push
adc
or
cmps
xlat
mov
(bad)
sbb
xlat
sbb
adc
mov
popf
pop
xchg
imul
xlat
leave
xor
sbb
aam
(bad)
inc
test
adc
sub
nop
push
xchg
dec
lahf
outs
fs
leave
or
adc
(bad)
jb
adc
mov
or
sub
sub
in
and
pop
xor
adc
mov
popf
jae
pop
adc
pusha
(bad)
cmp
cmp
jo
and
shl
sbb
push
dec
lock
loopne
sbb
pop
add
sbb
repz
or
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
push
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
adc
and
or
data16
and
push
jp
shr
or
jmp
push
add
mov
repz
cmp
mov
dec
push
repnz
pop
gs
cmp
mov
in
push
jns
cmp
das
sub
mov
pop
xor
push
mov
lahf
jbe
xor
ret
mov
fcom
in
pop
shr
clc
push
scas
test
fwait
ret
ss
fsubr
sub
pop
cdq
or
leave
dec
daa
cmp
push
data16
repnz
sbb
add
sub
aas
push
fstp
test
mov
inc
and
movs
push
inc
adc
jle
jp
sbb
mov
stos
sbb
or
cmp
scas
lea
call
jg
not
add
les
jle
mov
add
mov
repz
ds
pushf
and
fistp
push
(bad)
jo
cmp
fldcw
cmp
aad
test
(bad)
out
cmp
cmp
fst
push
es
nop
push
xchg
xor
jmp
pop
test
xchg
out
or
gs
add
(bad)
sub
pop
and
fisttp
cmp
repz
stc
aad
xchg
cld
loope
dec
into
jo
shl
enter
dec
jbe
enter
clc
sbb
mov
inc
pop
repz
jnp
push
outs
cmc
outs
out
into
nop
cwde
aaa
clc
enter
cmp
ds
or
add
xchg
pop
sub
jno
cmp
je
push
(bad)
fwait
adc
sbb
pop
sub
pushf
repz
pushf
xor
rcl
scas
pop
dec
inc
jne
mov
xor
inc
je
test
and
ss
sub
pop
arpl
jg
pop
movs
in
add
jno
mov
cs
cli
inc
jno
cmp
and
out
jp
xor
mov
jmp
ret
ins
js
ds
jne
jnp
mov
lock
(bad)
cmps
les
daa
hlt
push
mov
aad
aad
pop
cli
(bad)
out
hlt
push
mov
idiv
movs
out
push
sahf
mov
mov
push
pop
int
hlt
dec
stc
lock
arpl
xor
jmp
movs
adc
cmc
add
sbb
sti
mov
cdq
(bad)
retf
pusha
xchg
mov
fstp
hlt
lods
mov
xor
pop
movs
sbb
fwait
mov
scas
test
mov
rcr
repz
or
jle
mov
push
sbb
adc
adc
das
out
xchg
pop
test
push
int
cmp
inc
das
mov
outs
out
xchg
icebp
push
lahf
mov
(bad)
sbb
mov
movs
jmp
int3
pop
scas
mov
out
nop
in
jge
das
push
cli
int
or
pop
repnz
test
cld
std
mov
clc
sti
div
mov
rcl
mov
jmp
add
xchg
jg
arpl
fcomp
sub
fiadd
retf
mov
dec
dec
imul
sub
cmp
nop
fcmovnb
push
out
push
pop
and
lods
enter
std
cmp
mov
xor
cli
daa
mov
xchg
jno
bswap
mov
ins
inc
(bad)
push
call
dec
dec
dec
out
jg
mov
adc
sub
add
adc
fdivr
pop
and
inc
push
sbb
not
sub
mov
aaa
and
cdq
push
push
(bad)
push
mov
or
fcmovu
cmp
and
test
clc
sub
xor
ins
cmc
inc
popf
aas
xor
(bad)
cwde
sbb
js
bound
mov
into
cmp
jo
pop
mov
stos
mov
jnp
and
mov
mov
retf
cdq
cmp
inc
pop
popf
cmp
aam
jp
add
xchg
shl
dec
jecxz
cld
js
fldcw
pop
xor
shr
adc
jne
pop
scas
cmp
rcl
sbb
stos
rdmsr
pop
(bad)
fld
leave
imul
mov
cwde
mov
dec
pop
xchg
push
outs
outs
sbb
jns
or
dec
mov
popf
sub
mov
pop
fisttp
push
pop
ret
jmp
and
leave
test
mov
stos
inc
das
cmp
sub
push
mov
or
dec
lods
push
test
xchg
fcom
pop
test
imul
out
in
push
cmp
mov
dec
jbe
leave
push
dec
fs
in
mov
iret
fidivr
clc
shl
push
ficom
sbb
aad
inc
mov
inc
loopne
adc
inc
and
mov
addr16
or
iret
(bad)
mov
repz
mov
sub
lea
cmp
mov
out
ds
push
shl
push
in
xchg
loop
push
mul
adc
sti
mov
lods
test
or
scas
xchg
and
jbe
cs
push
adc
scas
adc
dec
dec
stos
je
jecxz
cmp
rcr
xchg
xchg
call
jecxz
and
jo
mov
enter
sub
addr16
cld
sub
in
pusha
jns
sub
mov
aaa
iret
dec
into
lods
and
shl
xchg
xchg
adc
fwait
mov
arpl
sub
inc
rcl
adc
cmp
and
push
repz
and
mov
lods
pop
fld
sti
mov
ror
adc
cmp
xchg
in
in
stos
and
in
fisub
xchg
sbb
mov
movs
sbb
out
pop
fistp
mov
xor
xor
jge
data16
outs
inc
call
or
ins
mov
cmp
hlt
push
cwde
fimul
sbb
pop
xchg
imul
lahf
daa
lea
xchg
call
mov
xor
pop
sbb
pop
in
fdivr
sub
es
mov
cmc
test
mov
mov
jae
xor
jb
push
(bad)
xchg
sub
outs
fwait
pop
ret
sub
cwde
dec
mov
and
inc
push
inc
movs
icebp
fimul
xchg
inc
test
dec
sub
ja
dec
mov
mov
cld
std
lods
fcomp
arpl
sub
adc
jnp
pushf
pop
sbb
popf
sbb
das
lahf
fmul
mov
lods
cs
jo
mov
cld
and
(bad)
mov
arpl
add
or
sbb
dec
mov
retf
jmp
push
adc
mov
std
fst
inc
sbb
mov
cmp
xchg
mov
fcomp
test
sbb
add
or
pop
stc
pop
xchg
and
mov
sbb
mov
jl
out
repnz
not
popa
dec
mov
ja
ins
out
test
lods
mov
sbb
dec
stos
hlt
enter
xchg
fnstenv
or
loope
int
aad
push
enter
and
(bad)
cmps
pop
and
lock
sbb
inc
movs
sub
lahf
cmc
xchg
add
jle
mov
popf
jmp
ins
jecxz
ins
into
les
scas
std
aam
inc
mov
jg
jle
pop
jg
aam
sbb
daa
dec
lock
mov
mov
in
cmps
xor
call
mov
mov
nop
jno
cmp
mov
dec
pop
fnstsw
stos
es
or
(bad)
loopne
fxch
frstor
enter
mov
jmp
mov
(bad)
pop
xor
inc
add
inc
and
or
int3
cmp
cld
out
and
mov
repz
ss
ret
sub
out
pop
test
dec
je
int3
pop
adc
loop
mov
jne
mov
dec
lock
hlt
pop
ss
cmp
mov
mov
sub
mov
jmp
sub
jne
xchg
push
xor
cwde
dec
adc
ds
dec
out
retf
add
xlat
push
hlt
test
mov
pop
(bad)
sar
jle
es
sbb
ins
cmp
cld
add
push
pop
adc
xor
das
hlt
push
rcl
jp
mov
xor
sbb
retf
outs
and
lahf
(bad)
mov
sti
or
xchg
pop
push
jp
and
push
gs
out
(bad)
and
push
mov
nop
sahf
clc
gs
inc
add
repz
xchg
mov
js
jnp
and
movs
mov
sbb
les
and
ret
adc
adc
and
sbb
fnstsw
rol
jb
pop
cmc
cmps
jl
sub
add
js
mov
fst
inc
jne
jge
gs
mov
call
rol
test
rol
inc
es
rcr
lods
or
push
mov
jl
arpl
lods
fwait
pop
in
pop
cli
xchg
add
jns
outs
push
in
daa
daa
jle
or
or
int3
(bad)
js
fadd
inc
stos
jp
or
enter
sbb
mov
sub
adc
in
fwait
sbb
and
(bad)
inc
sti
into
mov
imul
stos
cmp
sbb
in
jecxz
dec
repz
(bad)
mov
jge
sbb
mov
or
inc
rcr
ret
call
or
es
out
xor
lock
push
popf
nop
arpl
sahf
in
aad
mul
and
add
ds
mov
sub
imul
dec
leave
sbb
test
add
pop
push
and
add
adc
(bad)
and
addr16
cmp
popa
jno
jbe
rcr
rcl
(bad)
mov
ficom
or
rcl
imul
inc
sbb
mov
sub
pusha
(bad)
cmp
aas
push
rcr
mov
or
or
out
sbb
sbb
outs
test
dec
pop
mov
lea
lea
rol
sbb
mov
jnp
aad
std
dec
or
mov
add
xchg
pusha
push
push
daa
in
sub
push
ret
sbb
outs
pop
jbe
jne
dec
pop
or
jge
nop
push
lods
add
out
iret
shr
xchg
loope
ja
cmp
inc
mov
mov
add
call
movs
fiadd
rol
inc
out
jnp
mov
jmp
aaa
adc
mov
mov
adc
(bad)
in
mov
popa
scas
xchg
sbb
shl
or
push
lods
ds
into
cmp
adc
stos
stos
jns
xchg
and
jmp
dec
neg
rol
and
push
add
xchg
pusha
inc
mov
fnstsw
or
fmul
das
dec
imul
dec
test
lahf
cmp
cld
mov
cdq
dec
loopne
mov
sar
test
cli
sbb
ret
sub
sbb
not
jae
in
or
push
test
jo
and
data16
stos
fdivrp
xor
and
and
clc
test
pop
inc
(bad)
push
or
outs
sub
or
or
inc
mov
sub
imul
imul
mov
(bad)
cli
daa
lock
loopne
sar
jg
dec
inc
cmp
sub
xor
dec
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
pop
push
fldcw
xchg
in
in
fs
and
xchg
mov
out
nop
test
addr16
inc
movs
lods
nop
jne
push
cdq
aas
pop
fnstenv
and
lock
das
loope
add
ret
cwde
ret
fist
xlat
cmps
nop
stos
ins
adc
pop
cwde
push
out
into
loop
int3
xchg
mov
lods
pushf
fstp
xchg
sti
xchg
cmp
mov
mov
jns
mov
sti
es
xchg
or
mov
dec
imul
mov
dec
add
iret
dec
push
and
popf
call
push
aam
add
lea
sbb
cmps
push
fs
dec
lods
mul
add
(bad)
daa
test
out
inc
mov
pop
lods
cmc
mov
js
inc
mov
icebp
push
or
mov
outs
test
je
sub
arpl
xchg
push
ret
mov
sub
int3
pop
inc
ins
outs
cli
dec
cmp
or
mov
add
dec
cld
dec
outs
sbb
and
(bad)
fs
shr
cmps
mov
out
cmp
cmp
sbb
(bad)
movs
sbb
sbb
int
add
sbb
xchg
mov
sbb
mov
frstor
sub
adc
cmp
fistp
fmul
dec
pop
push
test
aaa
(bad)
sub
out
pop
fld
adc
sahf
mov
sub
dec
cmp
pop
imul
in
jae
scas
sbb
shl
out
xor
test
jmp
idiv
sahf
cmps
aad
in
psubq
outs
mov
mov
push
mov
(bad)
and
adc
pop
sti
repnz
in
push
push
stc
fstp
test
jno
in
add
jp
mov
in
dec
add
cwde
jo
dec
ins
push
pop
jnp
pop
sbb
daa
push
jb
daa
inc
js
mov
iret
jecxz
mov
add
ins
and
sbb
loopne
icebp
push
es
xor
sti
call
loop
xchg
dec
in
sub
ret
out
mov
movs
mov
cmp
dec
jge
add
adc
shl
xchg
mov
inc
dec
cmps
xchg
das
xor
add
aad
add
fist
xchg
adc
rcl
sar
dec
sub
scas
cli
cmps
js
add
xchg
sbb
mov
lds
sub
cmc
fisttp
mov
mov
lods
fs
mov
push
mov
loope
push
mov
mov
sbb
sub
adc
lahf
repnz
push
pop
shl
les
inc
hlt
sub
stos
add
mov
inc
and
ins
movs
in
mov
das
call
adc
iret
push
push
add
test
mov
jb
lods
xor
lock
push
mov
xor
sbb
in
cdq
sub
and
xor
fxch
rol
jl
dec
ss
in
adc
cs
and
in
xchg
mov
add
push
mov
mov
push
in
inc
shl
xlat
(bad)
sbb
jmp
scas
bound
or
dec
jno
cmp
xchg
stos
mov
pop
jo
dec
mov
mul
addr16
out
cmps
outs
cmp
lods
and
mov
icebp
or
in
mov
sahf
hlt
or
ss
outs
out
inc
sti
mov
jbe
nop
pop
cmp
repz
outs
jo
add
(bad)
lahf
xchg
mov
pop
or
rcr
lods
jb
inc
push
push
cmp
xchg
jle
pushf
mov
je
sub
es
sub
mov
test
mov
xor
xor
sub
jge
mov
cmps
jns
inc
in
jae
dec
cli
or
jne
ret
std
test
cld
mov
into
rcr
add
xchg
mov
sub
mov
inc
xor
lock
or
cdq
aas
into
aas
cmp
xchg
inc
mov
mov
sbb
imul
shr
xchg
stos
sbb
jae
pop
fist
sbb
sub
sbb
pop
jg
pusha
pop
test
adc
(bad)
out
sbb
rcl
ins
call
(bad)
xor
mov
ins
sbb
sbb
mov
mov
mov
pusha
mov
es
shl
xor
jmp
jp
jne
xchg
dec
in
call
repz
retf
inc
pushw
sahf
into
retf
lods
inc
bnd
cmp
out
add
push
add
jecxz
and
addr16
ret
test
stc
sub
inc
sbb
pop
loope
outs
pop
sbb
fstp
mov
mov
ds
jo
movs
xor
add
sbb
jmp
repnz
and
cdq
push
(bad)
clc
aam
outs
xor
adc
mov
test
fisubr
repnz
stos
fs
pop
mov
sub
aam
pop
cmp
ret
add
fs
ret
and
jmp
push
jecxz
sub
repz
mov
push
mov
mov
mov
call
out
fwait
int3
push
push
shl
retf
and
push
(bad)
sub
fdivr
fbstp
push
fcom
test
push
bound
cmp
pop
mov
scas
rol
mov
inc
sbb
sub
loop
adc
xchg
cdq
bound
inc
call
std
shl
cmp
fiadd
(bad)
adc
mov
shl
mov
or
and
sbb
movs
scas
adc
mov
xlat
adc
xchg
mov
shr
out
dec
sub
xchg
cmp
loop
jb
jnp
test
(bad)
std
lock
stc
jecxz
mov
test
sub
rcr
test
push
imul
add
mov
mov
out
adc
inc
mov
rcr
jp
lahf
pop
add
cmps
cmc
mov
pop
xchg
sahf
movs
fwait
cli
cmp
inc
jmp
ds
mov
push
jb
movs
call
mov
pop
aam
and
out
gs
jle
jo
test
bound
mov
iret
test
ja
mov
mov
xor
pushf
push
lods
add
pop
popf
lods
test
push
pop
out
jno
imul
out
push
fsubr
out
jle
mov
fdivrp
sbb
pop
cmp
push
idiv
add
add
call
mov
xchg
sbb
mov
call
cmp
mov
mov
add
xor
mov
jns
jge
jne
imul
fidiv
popa
aad
and
sbb
xlat
imul
hlt
ds
mov
out
adc
pusha
in
das
mov
dec
xchg
leave
lea
xor
ja
adc
stos
adc
cmp
(bad)
lahf
fwait
imul
fstp
sbb
xlat
xchg
imul
mov
pop
and
sahf
cdq
mov
push
sub
sbb
je
cmp
or
retf
out
loop
ins
push
xor
pop
test
xchg
push
popa
cmp
ss
xor
scas
pop
push
mov
leave
mov
into
xchg
inc
dec
adc
xchg
inc
icebp
out
inc
mov
pop
rcr
mov
cmp
mov
adc
test
and
gs
loop
mov
sub
xor
ret
xchg
sbb
lods
dec
test
sahf
out
push
psubq
test
push
mov
pop
xor
adc
add
dec
jae
cwde
push
adc
jbe
mov
fst
and
jl
lds
iret
ss
cdq
push
std
dec
mov
gs
gs
in
repnz
data16
mov
lahf
xor
sub
outs
test
mov
jb
xlat
cmp
sbb
mov
xchg
retf
dec
aam
xlat
dec
(bad)
and
sbb
jne
jne
loope
pop
add
sub
std
mov
mov
loopne
adc
xor
aad
dec
ror
into
push
pop
and
fs
sbb
lds
xor
cwde
pusha
fist
dec
pop
pusha
xchg
pushf
sbb
das
xchg
div
cwde
cmp
neg
cmps
stc
mov
icebp
dec
or
xchg
push
pop
push
fst
cmp
mov
clc
jmp
pop
fucomip
adc
in
mov
jb
push
mov
push
pushf
bound
mov
lods
jmp
xchg
pop
xlat
lods
hlt
in
sub
fmul
stc
stos
mov
jmp
clc
dec
jle
and
cmp
ret
mov
mov
mov
adc
jmp
fwait
out
int3
not
test
adc
xchg
mov
add
in
mov
dec
enter
test
cwde
jnp
repnz
inc
push
pop
clc
fisub
mov
xchg
push
push
xchg
mov
xchg
aaa
push
sti
cli
bound
xor
jg
xchg
sbb
(bad)
lock
ret
adc
jnp
mov
(bad)
pop
inc
jecxz
or
std
push
scas
jns
outs
mov
adc
mov
imul
adc
movs
xchg
mov
or
push
xchg
fist
xchg
xchg
adc
xchg
xchg
into
int
out
sub
retf
mov
mov
nop
and
lahf
lods
mov
or
jno
jg
mov
imul
punpcklwd
gs
cmp
loopne
(bad)
sub
(bad)
mov
dec
cld
fidivr
mov
dec
push
outs
sub
jg
mov
call
pop
stos
sbb
jecxz
popf
iret
pop
inc
hlt
push
sub
test
js
jne
mov
add
in
mov
cmp
push
ficomp
adc
sbb
jl
sub
push
xor
lods
push
arpl
inc
je
and
mov
mov
or
xor
cmp
mov
xchg
popa
dec
xchg
fsubr
arpl
sbb
inc
mov
ss
pop
adc
outs
nop
mov
push
pop
(bad)
gs
(bad)
js
or
cmp
add
mov
mov
jp
lock
cmc
mov
and
mov
jmp
jmp
jb
pop
mov
mov
cld
mov
repnz
ret
push
xchg
movs
mov
push
jo
push
(bad)
loopne
es
aas
adc
in
mov
or
ret
sbb
mov
adc
pop
sub
mov
sti
jno
into
mov
jo
mov
loopne
sub
and
push
xchg
push
pop
pop
cli
test
cli
sub
dec
push
in
jmp
jp
retf
loopne
mov
pushf
outs
dec
cmp
outs
js
or
jb
inc
mov
icebp
inc
retf
pop
dec
push
adc
cmp
arpl
shl
test
or
inc
(bad)
mov
sbb
fnsave
and
lea
cmp
test
cmp
sbb
ds
mov
mov
add
clc
aaa
lock
loopne
sar
sub
daa
add
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
and
pop
add
mov
icebp
lds
fs
sub
mov
daa
and
mov
retf
pop
daa
jnp
and
fmulp
enter
js
mov
xlat
pop
jg
or
test
sub
xor
sub
aam
mov
int3
xor
fwait
adc
loope
mov
ja
or
inc
dec
loope
cwde
cmps
pop
pushf
in
mov
mov
and
aad
or
dec
push
cld
into
pop
xor
inc
dec
add
inc
sbb
fucomi
dec
or
movs
(bad)
leave
sub
pop
and
xor
add
(bad)
enter
push
ins
cld
ins
cmp
ins
xchg
pusha
adc
mov
and
inc
push
xchg
pop
sbb
mov
jo
sahf
nop
xchg
scas
sub
mov
popa
and
inc
mul
jl
adc
clc
inc
(bad)
aad
jb
jno
mov
xchg
inc
sbb
test
and
pop
ror
popf
xlat
cli
push
retf
mov
dec
lahf
iret
ret
stos
out
mov
adc
mov
leave
jns
out
sbb
push
jae
or
mov
lock
xor
dec
mov
cmp
and
in
gs
mov
pop
dec
sbb
cmp
lahf
scas
outs
and
or
test
cli
lea
push
test
add
in
xor
add
mov
pop
jb
or
or
cmps
mov
xchg
mov
push
shl
adc
push
pusha
out
adc
(bad)
das
mov
(bad)
cmc
xchg
mov
xchg
ins
in
lock
jge
loop
popa
jae
data16
sar
rcr
mov
mov
dec
ret
scas
dec
pusha
inc
inc
mov
mov
retf
out
sub
xchg
inc
call
cmp
cmovns
dec
popf
cmp
or
adc
fadd
fdivrp
pop
mov
xor
int
adc
jo
fdiv
dec
mov
sub
cmp
adc
xlat
arpl
adc
mov
fucomi
lea
lahf
in
jns
neg
test
adc
or
addr16
cmp
test
(bad)
push
push
fsubp
imul
sub
pop
mov
std
repz
push
jmp
int
inc
popf
jb
xlat
inc
icebp
mov
pop
rol
cmp
arpl
mov
xlat
pop
sbb
jnp
pop
mov
mov
retf
cwde
or
fstp
push
in
and
cmp
mov
mov
sbb
loop
xor
ficom
mov
push
movs
adc
or
ds
jmp
sti
mov
mov
sbb
sub
fist
xlat
andps
movs
fadd
pop
or
xchg
and
sub
(bad)
jb
ds
arpl
mov
pop
sub
ret
inc
mov
dec
loopne
in
mov
jmp
push
imul
sub
pop
shl
mov
shl
xor
jae
xor
dec
ret
neg
popa
push
mov
push
scas
std
test
xchg
sahf
test
add
push
in
into
mov
test
pop
inc
sub
xchg
dec
call
mov
stos
xor
and
ror
data16
jbe
jle
inc
add
loopne
scas
dec
shl
mov
push
std
or
cli
push
test
in
in
mov
(bad)
fldcw
in
mov
fst
rcl
das
(bad)
cld
cmp
mov
rcl
or
pop
repnz
pop
iret
mov
push
dec
into
movs
push
ror
or
sub
xchg
mov
push
mov
push
push
jne
sub
retf
fwait
ror
fbstp
lods
daa
pmullw
mov
xor
aaa
xor
movs
fucom
mov
xchg
xlat
lahf
or
xor
mov
outs
(bad)
cmc
push
dec
cmp
jnp
cld
adc
cmp
mov
fs
fwait
xor
jl
test
ror
aas
cwde
or
repnz
test
mov
xchg
retf
imul
repz
(bad)
sub
test
push
(bad)
pushf
mov
nop
push
push
cs
mov
lahf
fadd
inc
scas
imul
in
or
leave
dec
(bad)
outs
outs
mov
pushf
pop
call
add
mov
mov
inc
daa
mov
mov
xchg
pop
nop
push
mov
and
stc
inc
pop
idiv
int
fadd
mov
xchg
mov
jle
add
push
jbe
outs
push
fist
adc
scas
inc
mov
repz
repz
xor
mov
ror
aaa
mov
mov
push
cdq
cmp
cs
dec
xor
nop
in
xor
aad
mov
cmp
fld
icebp
mov
movs
mov
push
cmp
sar
adc
outs
call
fwait
xor
or
rcr
pushf
push
aas
not
imul
or
movs
fsave
arpl
cmp
(bad)
bound
ss
dec
xchg
xchg
inc
(bad)
fs
shl
(bad)
out
mov
sar
adc
mov
call
jp
in
in
out
aas
rcr
pop
mov
popf
lock
(bad)
push
xchg
int
xchg
mov
sub
inc
and
test
ret
adc
out
push
fisttp
stos
mov
push
js
or
fimul
out
xlat
enter
sbb
mov
jns
xchg
loopne
cmps
push
cmp
mov
aam
xor
stos
rol
fisttp
push
fucomi
jge
call
(bad)
scas
lods
pop
or
add
adc
pop
cmp
fwait
xor
pop
push
and
mov
add
jnp
jbe
fcomp
push
fist
add
jl
outs
fadd
in
js
jmp
mul
inc
inc
lea
jns
mov
xor
idiv
lods
xor
dec
pop
pop
jmp
push
(bad)
cmp
pop
pop
lock
adc
mov
fdiv
movs
or
retf
xchg
fxch
push
sahf
xor
or
outs
cmp
mov
jae
ror
mov
xchg
adc
push
test
out
hlt
pop
cmp
sahf
push
jb
call
sbb
add
je
cdq
adc
xchg
dec
mov
mov
mov
ins
adc
mov
adc
fbstp
mov
and
outs
mov
mov
cmp
or
add
hlt
mov
out
add
adc
inc
ins
mov
es
test
stos
dec
(bad)
vmovaps
(bad)
stos
mov
pop
fs
sbb
fld
sbb
loop
pop
das
cld
pop
inc
dec
cwde
aas
or
jge
test
fst
jns
sar
jp
out
les
imul
push
lea
push
adc
pop
ins
ss
inc
push
jg
mov
push
dec
mov
in
cmp
lds
sbb
jmp
jl
(bad)
(bad)
or
dec
pop
ss
inc
mov
nop
test
cmp
or
pop
jp
sbb
loop
cmc
dec
sub
ret
jmp
dec
mov
cli
or
push
fwait
mov
jmp
stos
jmp
inc
mov
sub
adc
push
pop
and
test
xchg
xchg
or
fild
out
dec
jae
dec
test
cmp
addr16
cmps
add
out
daa
and
mov
mov
repz
jmp
mov
mov
pop
mov
xlat
cmp
retf
sub
jl
lahf
(bad)
cdq
jg
mov
(bad)
sub
mov
push
push
push
jp
in
push
adc
mov
test
cmc
or
pusha
das
add
movs
movs
mov
pop
mov
xor
test
out
aam
sub
dec
(bad)
fadd
xor
add
push
out
jo
and
rcr
ficomp
inc
push
idiv
mov
mov
pop
sbb
mov
xlat
cmps
adc
sub
mov
push
ret
arpl
cmp
or
hlt
stc
jge
ret
jbe
inc
push
je
sbb
inc
(bad)
sbb
push
push
(bad)
aas
adc
mov
test
push
daa
sub
fisttp
inc
push
inc
pop
cld
mov
mov
inc
mov
adc
cwde
retf
push
jb
scas
mov
sub
dec
sbb
pusha
cmp
pop
pusha
and
jge
jg
xor
out
jle
push
cmps
icebp
and
movs
fnstcw
adc
fimul
movs
push
dec
xlat
push
cmp
outs
test
ins
sbb
push
jecxz
push
in
imul
dec
fistp
xchg
pop
test
adc
or
mov
bound
xchg
pop
lods
inc
rcr
enter
call
nop
push
mov
pop
out
cmp
push
jp
lahf
int
jae
fisub
ins
push
or
xchg
adc
nop
test
aad
scas
icebp
aam
dec
iret
popf
dec
cmp
jge
(bad)
mov
mov
or
aam
lock
adc
ficomp
jle
cmp
test
jne
data16
adc
fiadd
or
sti
xor
jmp
cdq
sti
fsubr
or
ficom
arpl
loop
xchg
xor
test
test
jmp
in
repnz
gs
icebp
stos
(bad)
ror
stc
in
cmp
mov
jo
mov
inc
(bad)
out
rcl
rcl
retf
xchg
out
sub
cmp
adc
push
or
lock
fst
mov
ja
loop
sub
adc
dec
sbb
inc
pop
mov
lods
mov
sub
repnz
sbb
lea
jnp
jo
mov
or
cmps
ja
es
aad
and
(bad)
leave
ret
and
mov
xchg
sbb
or
and
inc
dec
sahf
leave
test
inc
lds
fst
adc
clc
fimul
xchg
shl
je
stos
cmp
shl
out
xchg
and
aam
or
stos
out
pop
lods
lods
add
adc
lahf
jge
inc
dec
pop
sti
cmp
jmp
mov
clc
in
jl
cmps
mov
jecxz
cmp
(bad)
shl
mov
mov
fcomp
fstp
daa
inc
das
shl
mov
jl
into
or
adc
xchg
call
mov
fldcw
shl
cmc
jp
and
jns
outs
mov
pop
sbb
sbb
out
cmps
inc
add
jmp
push
mov
clc
push
push
add
push
or
mov
inc
mov
ins
fdiv
int
xchg
add
(bad)
xor
pop
outs
pop
pop
add
cld
push
movs
sub
xchg
int3
mov
or
aam
mov
dec
cmp
push
fxch
scas
cld
pop
xchg
dec
mov
jae
sub
(bad)
pop
sbb
or
hlt
xchg
popf
push
outs
mov
in
cld
push
mov
stos
out
add
jmp
pmaxsw
pop
stos
cmc
sub
push
xchg
inc
ins
pop
pop
fsubr
int
clc
pop
jecxz
icebp
iret
loopne
test
xor
sub
aad
hlt
mov
jo
sbb
push
dec
mov
ss
or
lock
loopne
sar
cmp
outs
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
push
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
and
pop
add
aaa
inc
leave
cmp
test
jge
xchg
sub
ins
jno
pop
aam
(bad)
in
fs
push
xchg
sub
lods
nop
mov
pop
mov
aas
loop
mov
lahf
lock
es
imul
sub
mov
cdq
std
int
fist
lock
mov
mov
popf
(bad)
dec
imul
out
inc
scas
ins
sahf
(bad)
or
adc
xchg
cmps
lds
add
daa
fstp
adc
cli
pop
test
lock
add
push
xor
push
jp
daa
daa
rcl
add
cmps
fsubr
xor
sbb
das
push
inc
enter
arpl
out
shl
addr16
push
nop
shl
pusha
cmp
mov
sbb
cmp
fucomp
dec
std
aas
jge
(bad)
icebp
hlt
jmp
or
and
aam
call
jo
pop
sbb
mov
and
sahf
mov
sahf
scas
inc
mov
enter
mov
pop
div
out
icebp
sbb
inc
jle
mov
and
scas
lods
cwde
push
mov
xor
leave
out
mov
mov
or
pop
adc
div
mov
cmp
(bad)
lods
fst
mov
aas
imul
jmp
and
push
mov
xor
aas
or
cld
pop
out
loop
jmp
pop
pop
arpl
cld
inc
xchg
push
sub
pmaxub
cmp
add
icebp
lahf
daa
jecxz
mov
call
mov
retf
mov
hlt
jecxz
pop
ret
push
jne
cmp
lds
std
test
or
std
jb
dec
jne
mov
retf
lahf
jl
cli
push
pop
sar
sub
stos
jae
ins
sub
jne
push
je
shr
fidivr
xor
jle
ss
int
addr16
add
inc
jmp
je
and
ins
das
ds
push
jo
jle
ret
int
push
mov
add
mov
mov
(bad)
lods
jl
(bad)
sbb
push
pop
mov
xchg
cld
test
(bad)
retf
fisttp
pushf
dec
test
cmc
xor
ror
xchg
call
sub
jmp
add
lea
icebp
pop
iret
loope
les
add
movs
mov
pusha
and
inc
cmp
xchg
outs
hlt
loop
mov
fiadd
cld
mov
pop
cdq
inc
imul
outs
aaa
inc
jle
lods
out
xchg
rsm
push
movs
cli
lods
into
clc
pop
in
(bad)
jo
fs
mov
mov
fcomp
int
das
pop
aaa
loope
pushf
adc
les
mov
or
leave
pop
cmps
pop
dec
das
adc
adc
add
stc
cwde
enter
jne
jbe
xchg
jmp
lahf
cmp
push
movs
push
pusha
xor
outs
xchg
sub
rcr
pop
cwde
xor
push
mov
xchg
cdq
inc
xchg
das
jecxz
rol
outs
ja
shl
sbb
sbb
loopne
inc
imul
cdq
inc
push
mov
jp
ja
jne
bound
xchg
cmc
push
sbb
add
pop
ret
sbb
in
sbb
je
sub
push
fwait
and
shl
push
mov
fidiv
push
mov
dec
rol
push
dec
mov
fld
scas
add
(bad)
loop
clc
aas
sbb
cmp
pop
mov
popa
sub
inc
xor
inc
je
push
call
sbb
ret
push
and
in
leave
aam
out
movs
sbb
dec
adc
pop
sub
dec
dec
leave
mov
cwde
adc
test
outs
xchg
int3
out
mov
into
jno
std
nop
inc
icebp
cmc
cli
loop
mov
xor
jo
lds
pop
mov
popf
adc
gs
or
jno
scas
rcl
sub
add
jo
adc
ret
sti
pop
add
clc
jno
gs
pop
jl
inc
fisubr
dec
(bad)
out
mov
xor
and
enter
fxch
in
jp
in
jg
jne
fld
pop
push
dec
aam
es
pop
xchg
pushf
cmp
imul
dec
mov
bound
cmp
jecxz
movs
cmp
mov
mov
jp
push
out
stos
fcmovnbe
aaa
into
and
mov
mov
lds
out
mov
das
xchg
in
jl
in
imul
push
mov
sbb
jl
jecxz
enter
imul
or
jns
jns
pop
cmc
mov
cmc
enter
(bad)
hlt
fwait
lahf
adc
ds
sub
out
in
push
mov
fadd
xchg
bound
das
xor
ror
aaa
nop
pop
jmp
or
test
cmps
jns
enter
das
int3
in
xchg
push
cmp
push
es
out
push
sbb
or
js
in
mov
call
mov
icebp
out
jo
xchg
retf
sub
jns
ds
(bad)
(bad)
mov
sub
pusha
enter
dec
icebp
inc
lahf
test
mov
pop
test
push
call
cmp
lods
in
shr
gs
xor
pop
push
out
stos
loope
fucomip
cmp
cmp
mov
sub
dec
ins
ja
pop
sbb
repz
lods
test
fbstp
pop
and
out
addr16
push
popf
and
inc
xchg
ja
pop
xchg
dec
push
(bad)
popf
popf
xchg
out
loopne
dec
mov
call
icebp
ds
mov
xor
out
mov
xor
mov
mov
lock
es
or
push
in
and
cdq
int3
sbb
cld
daa
in
movs
mov
outs
in
cmc
gs
xor
retf
cmp
xchg
pop
gs
adc
add
push
imul
loop
fsubrp
push
xchg
in
fst
aam
hlt
jge
into
test
in
out
push
lahf
lods
mov
sub
stc
pop
mov
mov
push
out
mov
jb
test
dec
fstp
icebp
add
dec
leave
mov
xchg
and
leave
xchg
(bad)
push
and
jo
mov
mov
neg
(bad)
xor
mov
mov
rcr
adc
xor
jmp
aas
mov
ret
inc
mov
dec
std
or
adc
dec
sub
repnz
out
aam
add
js
shl
sbb
movs
gs
lock
out
mov
push
cmc
fist
call
inc
(bad)
pushf
or
rol
adc
rcl
sti
out
outs
leave
mov
add
or
(bad)
xlat
mov
and
into
pop
icebp
mul
mov
sbb
iret
sti
js
inc
jbe
(bad)
or
pop
jge
adc
rol
fst
pop
pusha
push
adc
stos
dec
mov
xchg
mov
mov
add
sbb
jae
out
sbb
cmp
mov
fs
sbb
push
sub
push
bnd
les
mov
out
xor
(bad)
movs
fstp
or
push
fst
(bad)
out
lahf
dec
stos
push
ret
or
stos
adc
cmp
pop
xchg
jno
push
mov
aam
es
mov
pop
adc
jmp
sub
jne
mov
dec
shl
jns
mov
mov
jmp
pusha
xor
ret
leave
cld
inc
fstp
out
test
push
cmp
movs
inc
xchg
fdiv
fwait
cwde
jae
sbb
iret
xor
adc
pushf
cmc
push
inc
mov
mov
push
int
sbb
scas
ds
cwde
addr16
ins
test
and
cld
lock
out
fist
xchg
xchg
pop
xor
mov
sub
sub
push
int3
aam
and
adc
jae
ins
addr16
dec
int
xor
scas
mov
mov
or
mov
loope
shr
fistp
sbb
scas
push
test
or
mov
lahf
dec
push
sbb
rcr
mov
dec
ins
dec
cmp
rol
sub
push
sub
mov
ret
or
and
push
loopne
(bad)
xor
sub
dec
into
dec
jo
xor
mov
xchg
arpl
pushf
fistp
sub
jb
add
dec
call
push
lds
int
push
jns
les
mov
jecxz
neg
icebp
push
add
jnp
ficomp
bound
fimul
rcr
gs
cmps
adc
cs
repnz
and
addr16
call
xchg
fwait
push
pop
jp
stos
call
cmp
(bad)
pop
inc
cdq
(bad)
lahf
addr16
shl
cmps
dec
mov
dec
push
dec
sahf
(bad)
rol
(bad)
imul
ficom
add
out
jg
adc
loopne
(bad)
mov
cld
inc
inc
jle
and
iret
sbb
test
(bad)
test
rcr
or
repnz
(bad)
das
jmp
leave
jb
xchg
inc
xor
mov
mov
out
mov
add
fbstp
xchg
inc
mov
xor
sar
addr16
ret
(bad)
(bad)
fisubr
push
jmp
rol
sub
mov
mov
jp
sbb
arpl
repz
pushf
into
pop
lahf
sub
jae
pop
cmp
xlat
aas
or
out
outs
pop
test
mov
fdivp
popa
cmp
in
fild
out
fdivr
and
inc
pop
mov
xchg
pop
mov
dec
jl
outs
push
pop
sbb
jecxz
faddp
retf
(bad)
or
pcmpgtb
out
lds
pusha
jge
mov
jmp
adc
stc
xchg
push
add
fidivr
dec
lock
sub
(bad)
xor
dec
push
clc
dec
test
in
pop
fcmovne
jmp
dec
adc
retf
cmp
out
sbb
and
xchg
sbb
lock
das
pop
pop
call
jge
and
mov
pop
push
ret
test
jnp
test
push
sbb
je
retf
jno
repnz
loop
popa
outs
ret
imul
into
cli
arpl
xor
sbb
and
mov
into
daa
lods
ins
and
jge
cmp
lods
mov
fwait
sahf
push
mov
jmp
pop
jmp
inc
rcr
jno
dec
xchg
pop
mov
leave
sbb
mov
add
inc
pop
into
sbb
inc
inc
pop
jp
inc
les
(bad)
movs
cld
retf
xor
ret
or
mov
rol
inc
cmp
(bad)
sub
push
adc
push
jle
inc
push
mov
in
push
inc
mul
mov
cmps
dec
mov
or
dec
pop
test
bound
cwde
popf
lea
push
mov
pop
or
shr
mov
cmp
call
cs
jmp
xchg
imul
and
clc
xchg
sbb
loopne
mov
enter
xlat
push
jp
or
loop
or
ficom
mov
mov
xlat
mov
and
push
pusha
mov
cld
rep
loopne
sar
(bad)
lahf
add
pop
inc
fs
push
jbe
push
push
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
and
pop
add
mov
sbb
and
inc
push
cmp
out
data16
and
nop
sub
fldenv
jnp
mov
ficom
dec
ret
test
fwait
add
dec
jne
fwait
test
stc
repz
mov
nop
cmp
pop
js
ficomp
ins
vrcpss
cmp
inc
add
shl
dec
jmp
inc
nop
dec
je
rol
repnz
pop
and
mov
push
hlt
inc
inc
loopne
ror
inc
in
aas
mov
inc
cmp
cmp
mov
es
ret
lds
push
pop
mov
jno
mov
xchg
cld
cdq
scas
gs
xchg
and
clc
xchg
shl
cmps
int
fstp
mov
xchg
out
(bad)
and
mov
outs
and
ret
mov
pop
scas
cmc
sub
(bad)
fmulp
or
dec
dec
mov
aas
out
test
push
jo
adc
push
and
aas
xchg
adc
mov
fsub
stos
dec
cmp
pusha
ficom
push
nop
xor
sar
retf
shr
outs
aam
mov
pop
pop
cmp
std
retf
cmps
jmp
mov
add
adc
mov
or
or
sbb
mov
ins
retf
dec
fadd
inc
push
cs
ret
sub
fld
jns
stc
xchg
pop
or
mov
stc
mov
in
and
stos
lds
push
xor
in
pop
mov
mov
adc
add
movq
push
iret
sti
pop
popf
sahf
(bad)
xchg
xchg
repz
mov
scas
and
aam
or
cmp
dec
popa
and
xchg
nop
mov
add
jnp
adc
fbstp
adc
inc
test
aam
sub
icebp
xor
sar
movs
call
inc
ror
adc
pop
jmp
adc
(bad)
jmp
push
xchg
cli
or
int3
cwde
mov
mov
rcr
cmp
mov
(bad)
not
ret
jne
cmp
sub
cmp
fidivr
sbb
inc
outs
dec
(bad)
movs
fdivr
push
data16
mov
aam
cdq
mov
push
mov
cli
push
gs
xchg
mov
int
xor
push
loopne
fild
jp
mov
cmp
pop
aad
mov
and
jmp
or
and
mov
push
push
add
cmp
mov
inc
push
in
mov
loop
xchg
jnp
mov
sbb
mov
xor
scas
pop
mov
xchg
push
aad
mov
ins
(bad)
push
imul
cdq
test
cmp
enter
aad
ja
sbb
(bad)
inc
fild
xor
stos
outs
test
adc
imul
jnp
xor
jle
push
ror
push
pop
fldcw
test
jl
mov
cmps
test
fdiv
mov
inc
icebp
test
fst
outs
test
je
or
jno
sar
sub
les
pop
test
or
xchg
mov
cmp
loopne
xor
adc
xor
dec
push
xchg
add
pop
loope
aaa
adc
ins
cmp
mov
sbb
sahf
add
ja
out
ror
xlat
mov
inc
xor
cwde
in
push
dec
jmp
fwait
in
sbb
in
ds
div
cmp
push
dec
addr16
aam
mov
in
dec
jmp
or
xor
dec
adc
icebp
repz
push
push
cmp
call
pop
jecxz
adc
add
repnz
dec
jp
inc
push
fild
data16
repz
jge
mov
mov
int3
mov
adc
cmps
and
stos
pusha
xchg
or
dec
push
xor
vdivss
fxch
fidiv
leave
mov
lds
ja
sbb
rcr
push
add
add
repz
add
(bad)
and
call
ret
in
cmp
js
cs
gs
push
clc
lods
and
mov
call
ins
jg
mov
shr
sti
sbb
sbb
movs
add
dec
mov
mov
adc
out
jecxz
pop
push
jb
xchg
sub
push
lods
jge
jmp
jg
pop
je
cmp
leave
jns
pop
fcomp
les
push
mov
or
ret
push
pop
xlat
xor
leave
outs
repnz
adc
outs
adc
sub
sbb
cmp
shl
out
mov
fidivr
push
xor
(bad)
in
fisttp
sub
stc
aam
ficomp
inc
fdivr
jb
call
out
nop
dec
add
out
fsubr
sar
jp
shr
mov
ja
add
lock
xchg
inc
(bad)
or
ss
mov
jg
ds
pushf
and
sub
xor
js
das
call
jp
mov
lock
dec
sub
out
push
mov
inc
outs
pop
mov
dec
inc
pop
outs
pop
xchg
xchg
ja
jbe
push
js
mov
fnstcw
je
fs
push
inc
jno
mov
mov
sbb
inc
inc
fiadd
pop
inc
jmp
push
repz
sbb
es
test
loopne
mov
(bad)
dec
xchg
push
stos
jmp
int
add
dec
adc
(bad)
(bad)
jmp
mov
cmp
push
lds
call
cmp
enter
dec
or
mov
les
mov
mov
retf
mov
or
movs
movs
mov
bound
sub
xchg
jle
pop
jns
push
mov
pusha
imul
ret
and
cdq
(bad)
xor
cld
adc
in
cld
dec
(bad)
movs
in
out
idiv
and
ss
or
mov
dec
fild
out
lock
jb
jnp
mov
push
fdivr
out
dec
repz
pop
mov
and
jmp
mov
xchg
in
add
and
adc
sub
lods
sbb
sti
add
lock
jg
cmp
cmp
fldenv
ficomp
cmps
hlt
aas
or
sahf
pop
enter
mov
sub
mov
int
aad
das
daa
push
call
and
jecxz
mov
dec
mov
ret
add
sbb
int3
sti
icebp
outs
dec
fisttp
sub
es
push
pop
or
mov
push
adc
mov
jmp
jle
add
sbb
in
xchg
mov
aad
repz
dec
and
and
mov
mov
inc
lods
cmc
push
test
stc
test
mov
fwait
xor
int
sub
ret
imul
inc
loop
xor
sub
outs
inc
jp
dec
popa
push
(bad)
outs
jp
cld
push
dec
xchg
dec
xchg
popa
adc
sub
cwde
int
and
movs
jo
daa
in
aaa
iret
aam
fild
mov
scas
jmp
inc
pop
xor
push
das
jmp
jle
sahf
jmp
mov
mov
ins
push
aad
adc
pusha
pushf
out
add
fisubr
sar
pop
repnz
mov
sar
shl
adc
push
cmp
clc
cmp
imul
outs
xor
(bad)
inc
xchg
cld
cmp
and
mov
mov
inc
lods
xor
imul
add
ss
daa
dec
ret
xor
jmp
push
push
push
lahf
and
neg
xchg
call
rol
fimul
dec
test
ja
pop
add
sbb
adc
fst
cmovnp
xchg
stos
shl
js
repz
cld
cdq
clc
shl
mov
pop
xor
jmp
stos
jno
jb
mov
jmp
andps
mov
addr16
mov
cmp
sbb
pop
movs
je
mov
addr16
clc
mov
sbb
cdq
call
jmp
mov
mov
shr
leave
mov
movs
sub
or
cmp
outs
bound
ds
leave
jnp
leave
les
adc
sub
pop
ds
push
mov
pusha
cli
mov
adc
shr
imul
loope
js
out
call
outs
add
loope
add
pop
dec
movs
in
test
cwde
mov
out
inc
rcl
(bad)
jge
mov
in
(bad)
in
xchg
push
mov
mov
mov
add
sbb
jae
adc
fst
adc
mov
sub
push
xchg
je
aas
mov
repz
mov
jl
das
adc
pop
inc
fcmovnu
ins
cmp
inc
inc
inc
pop
xchg
mov
nop
pusha
mov
push
fcomp
mov
(bad)
enter
ret
xor
inc
or
into
inc
fwait
nop
and
icebp
pop
(bad)
call
fmul
lds
or
into
jb
push
jo
mov
xchg
movs
inc
inc
repz
les
mov
arpl
mov
pop
xchg
jae
lea
xor
(bad)
xchg
mov
(bad)
pusha
aam
rcr
jns
loopne
fwait
sub
ins
mov
lods
jge
cs
cmp
ret
push
data16
rcl
dec
jbe
popa
jecxz
jecxz
rcl
or
fcmovne
cld
imul
jl
sbb
fsubp
outs
jnp
pop
jae
lods
fist
fld
sbb
ret
stos
and
inc
xlat
push
mov
adc
cmp
loope
hlt
cmp
xor
dec
cmps
fwait
cmp
sub
shl
dec
inc
sub
push
int3
jle
jno
sar
out
or
mov
int3
stos
(bad)
jns
rcl
pop
jecxz
xchg
into
ss
mov
shl
jmp
and
ficom
and
xchg
jno
jmp
pop
mov
(bad)
clc
sbb
jmp
into
mov
dec
mov
(bad)
push
fisttp
inc
mov
adc
mov
mov
inc
adc
inc
mov
test
ins
imul
push
jp
lea
mov
cmp
ss
lock
out
fist
scas
std
dec
(bad)
jg
jg
ret
cli
mov
push
cmc
movs
test
(bad)
data16
retf
mov
mov
dec
cmp
(bad)
sbb
dec
fldenv
inc
movs
jmp
hlt
int3
stc
cwde
dec
(bad)
add
ss
aas
popf
push
jp
(bad)
push
pusha
xchg
addr16
je
and
or
les
(bad)
xchg
(bad)
idiv
pop
push
sti
xor
(bad)
aad
push
cmc
(bad)
lods
cmp
pop
rcr
out
int
in
aad
fild
dec
retf
out
popf
push
stc
fmul
mov
call
push
ja
outs
cwde
dec
shl
(bad)
xchg
jge
cmp
(bad)
mov
adc
and
imul
mov
or
add
mov
movs
sbb
fs
xor
nop
mov
cmps
mov
xchg
movs
jmp
fdiv
and
jecxz
cmp
movs
cdq
out
out
mov
xchg
xor
scas
icebp
cmp
jno
cmp
stc
mov
sub
loopne
jg
inc
dec
lock
aas
or
or
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
add
dec
inc
inc
push
pop
inc
in
sar
cmp
or
es
sub
inc
dec
mov
sbb
inc
imul
in
dec
jns
cmp
jnp
inc
outs
repnz
cmp
pop
mov
movs
int
enter
imul
in
xor
loop
sahf
fdivr
repz
jl
add
loope
add
xor
js
inc
into
mov
lock
test
aam
call
frstor
retf
int
fwait
test
lods
bound
mov
sub
xchg
xchg
out
(bad)
loope
adc
shr
and
lds
pop
mov
mov
add
jnp
push
inc
mov
cld
pop
xchg
and
add
jmp
pop
xor
movs
aad
int
jns
or
add
out
xor
ror
mov
jbe
jg
xor
xchg
sbb
fidiv
xchg
ins
dec
adc
mov
push
sbb
mov
ins
addr16
aas
pop
(bad)
jb
imul
cmp
cmp
sub
stc
leave
nop
jns
js
fdiv
jmp
lods
push
mov
cdq
dec
shl
sub
clc
aad
xchg
fs
fisttp
lods
or
xor
xchg
lds
repnz
xor
in
inc
in
cmp
sub
into
bound
sub
bound
into
xchg
imul
lea
ss
sahf
mov
sahf
in
push
lods
jb
sti
jb
adc
mov
jae
scas
push
xchg
cs
retf
adc
xor
cld
loope
dec
enter
lahf
xchg
out
add
je
cld
and
mov
push
add
rcl
jo
adc
mov
ret
jmp
xor
fxch
jb
xchg
aad
add
into
and
mov
test
push
mov
iret
lods
fwait
in
mov
mov
pop
(bad)
xor
inc
fistp
dec
mov
cmp
aam
out
mov
sub
dec
jns
mov
jmp
push
cmp
dec
mov
aaa
dec
push
addr16
adc
shl
mov
sub
sub
dec
in
push
fsub
pop
inc
shl
faddp
mov
movs
sbb
dec
or
in
fwait
retf
fiadd
pslld
inc
dec
mov
mov
cld
push
repz
xchg
xchg
aaa
in
test
in
test
and
stc
es
cmc
push
jo
lds
pushf
sub
jb
aaa
or
sub
jl
inc
aam
(bad)
fdiv
jle
mov
sbb
mov
jecxz
mov
aam
xchg
add
mov
sbb
xchg
pop
ds
mov
imul
(bad)
xchg
popf
(bad)
xchg
arpl
scas
rol
mov
test
arpl
js
inc
pop
and
dec
pusha
jp
inc
cmp
stc
mov
xor
xchg
leave
daa
push
dec
pushf
in
jecxz
pusha
fidiv
into
cmp
cmps
mov
sbb
mov
dec
mov
std
push
aas
push
mov
jae
push
fld
jg
jnp
or
and
sbb
and
cmp
xor
aaa
xlat
hlt
shl
xor
shl
fdivr
retf
div
adc
loop
push
xchg
(bad)
sahf
jnp
mov
jmp
dec
cmp
in
cmp
adc
bnd
mov
fcmovne
pop
jg
and
out
jbe
jno
or
stc
sar
xchg
or
leave
call
mov
mov
sbb
fmul
(bad)
cmps
sbb
icebp
lea
ja
cld
cmp
fcmove
je
cli
imul
and
stc
push
and
lods
in
and
(bad)
mov
jl
shl
pop
ret
push
call
mov
out
mov
gs
jb
out
je
pop
xchg
leave
xor
in
inc
inc
test
adc
fnsave
sbb
ror
pop
aaa
push
aaa
dec
jecxz
cmp
aad
xor
dec
inc
xor
jp
dec
and
nop
pop
inc
and
loopne
cmp
push
add
add
add
add
add
add
add
stos
cmp
xor
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
push
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aas
adc
jecxz
icebp
mov
in
mov
into
mov
int3
inc
sbb
mov
int3
ins
fs
push
mov
es
sbb
xchg
cmp
mov
sti
jl
xchg
scas
mov
add
movs
add
je
add
mov
aas
or
jbe
sub
mov
mov
xchg
mov
xchg
rol
dec
pmulhw
jbe
sbb
in
lock
xchg
fldz
(bad)
fnstsw
into
ins
xchg
ds
jo
stos
or
nop
addr16
movs
jge
xchg
pop
mov
data16
movs
stc
push
(bad)
stos
sub
lods
cmps
adc
rcr
inc
pusha
sbb
aam
sbb
bound
addr16
arpl
or
idiv
cmps
and
jecxz
mov
cmp
sbb
outs
cmp
or
pop
ficomp
pop
jns
outs
imul
fdivr
lahf
jecxz
push
jge
and
sub
add
sub
or
movs
call
cmp
dec
loope
test
ins
mov
fst
rol
movs
fdivr
cmp
cmp
pop
aad
jnp
lods
fbld
and
push
jns
jo
in
mov
mov
cmp
adc
bound
cwde
and
sub
lock
shr
mov
cmc
movs
mov
jmp
xchg
std
sbb
sahf
sbb
mov
sbb
popa
das
pop
(bad)
sbb
add
out
test
sbb
fucomi
inc
stos
push
imul
in
and
fldcw
fwait
mov
dec
pop
data16
jae
pop
inc
pusha
jbe
in
ja
mov
add
dec
sbb
(bad)
or
adc
pop
sbb
inc
mov
es
and
xchg
ins
push
cmp
gs
or
int3
int3
popa
(bad)
xchg
sub
cdq
in
ret
push
ficomp
clc
and
(bad)
jp
jns
jne
mov
rcr
push
(bad)
std
pop
push
xchg
dec
aas
mov
mov
(bad)
mov
cmps
inc
push
and
repz
and
sub
hlt
jp
inc
pop
sbb
aas
and
call
movs
push
in
imul
fldcw
ss
je
lea
cmc
stos
jo
gs
bswap
jbe
stos
aad
mov
int3
sub
sub
loope
mov
xchg
jmp
xor
cmc
dec
pop
maskmovq
mov
std
arpl
pop
in
push
inc
and
xor
jns
outs
cmp
fcomp
push
pushf
mov
jmp
mov
out
or
and
mov
cmc
stos
lods
imul
pop
ja
xchg
lods
repnz
dec
icebp
inc
inc
int
inc
push
xor
pop
push
push
retf
scas
leave
mov
sbb
call
add
xor
push
iret
push
fs
add
cmp
dec
fist
jo
jns
out
sbb
int
adc
ret
xchg
pop
fdiv
call
fild
mov
ins
fs
dec
shl
es
xchg
call
mov
push
mov
popa
bound
nop
imul
ss
mov
or
out
jmp
add
(bad)
xor
adc
out
repz
cwde
inc
mov
rol
fs
das
int3
mov
dec
aad
jl
or
aam
cmp
xchg
push
and
(bad)
aas
(bad)
or
(bad)
xchg
in
or
pop
jnp
dec
push
pop
pushf
iret
hlt
das
sub
mov
xor
cld
int
cmp
data16
jge
pushf
xor
pop
popa
shl
xlat
push
sub
and
mov
pop
cmps
mov
cmps
inc
lahf
vunpcklps
ficom
stc
and
aad
sub
das
mov
push
mov
add
push
(bad)
in
je
dec
js
sbb
xchg
mov
pop
icebp
(bad)
retf
inc
out
fnstcw
pop
(bad)
jnp
sub
aad
or
imul
xchg
adc
test
or
inc
sbb
test
pop
gs
add
cli
add
and
pop
xlat
mov
movs
int3
mov
mov
sub
jnp
idiv
test
pop
dec
aaa
in
xchg
inc
mov
outs
mov
out
cs
rol
gs
xchg
(bad)
push
pop
xor
cmp
sbb
cmp
stc
scas
push
adc
ud1
sbb
inc
retf
mov
arpl
cmp
mov
loop
dec
cmps
pop
pop
out
push
pop
lods
aad
push
pop
xchg
cld
sti
lods
and
arpl
push
fdivr
mov
mov
mov
mov
and
mov
push
jne
and
(bad)
jmp
pop
and
xor
aaa
ja
ficomp
nop
movs
push
cmc
xor
fbld
pop
xchg
int
and
sbb
sub
push
jmp
jp
mov
add
and
or
jmp
cmovle
xchg
in
push
xchg
add
dec
pop
(bad)
lea
daa
jl
scas
ins
mov
sahf
dec
mov
push
sub
xchg
adc
test
sub
cmps
enter
jl
jns
dec
cmp
addr16
xlat
fdiv
out
pop
push
(bad)
jmp
aas
ret
mov
addr16
in
lds
add
adc
imul
scas
test
ja
daa
dec
xchg
mov
mov
es
enter
pop
xor
sahf
mov
jns
mov
hlt
mov
rol
mov
jle
ud0
(bad)
jmp
movs
sbb
pop
aad
sub
fs
outs
jecxz
scas
mov
dec
jae
push
lahf
sub
(bad)
(bad)
mov
add
mov
std
inc
fmul
adc
cmp
push
loope
fsubr
mov
sub
xchg
sahf
or
dec
jns
push
fbld
test
sub
mov
shl
adc
rcl
push
cli
push
adc
mov
lods
or
leave
imul
dec
add
fwait
js
lods
out
fwait
push
push
in
aas
mov
in
add
fcom
lea
jl
shl
cld
jb
call
jmp
cmp
fisttp
test
and
ret
dec
retf
pop
call
test
scas
mov
cs
mov
cmp
icebp
mov
push
and
lahf
hlt
push
xor
in
pop
jmp
and
adc
std
xor
lahf
les
sar
xor
les
push
mov
jg
jmp
in
icebp
push
xor
adc
dec
lds
inc
cmp
retf
xor
pop
mov
in
call
pop
shl
pop
jge
call
mov
push
out
jmp
sti
mov
les
xchg
sub
cwde
rol
out
xchg
adc
add
sbb
push
push
dec
pop
and
and
sahf
pop
aad
nop
cmps
xor
push
cmps
aam
push
pop
mov
add
xchg
mov
mov
(bad)
lods
lods
arpl
mov
adc
xor
scas
or
ja
xchg
imul
retf
repnz
ds
mov
scas
ss
mov
scas
or
cwde
xchg
ror
adc
loop
xor
mov
dec
fld
sub
ret
sahf
adc
(bad)
imul
add
cmps
sbb
(bad)
fadd
jbe
pop
xchg
push
and
or
js
pusha
movs
mov
add
sbb
inc
iret
pop
sub
sub
cmp
cmp
cmps
mov
push
or
rcl
xlat
pop
add
jae
mov
mov
inc
(bad)
out
aam
out
pop
loope
mov
mov
mov
inc
pop
idiv
xor
lods
mov
rep
ins
test
sub
jnp
outs
fbld
add
xchg
push
or
push
xor
mov
aad
xchg
loopne
xchg
adc
icebp
int
cwde
neg
icebp
jle
pop
push
imul
dec
loopne
or
sti
sar
mov
fnstcw
mov
in
or
lahf
sahf
xchg
mov
push
cmc
dec
sahf
push
jge
out
xchg
sub
adc
or
ficomp
xchg
mov
fiadd
adc
pop
scas
pop
shl
mov
xchg
daa
xchg
repnz
adc
ss
jmp
loopne
mov
jmp
out
jp
retf
out
dec
mov
or
test
repnz
or
jle
or
aam
cmp
inc
js
xchg
cmp
pushf
mov
lahf
dec
mov
lds
mov
push
pop
push
je
mov
call
dec
inc
push
scas
dec
les
dec
sbb
in
test
sti
push
cmp
pop
in
or
xor
pop
lods
mov
cmc
add
rol
adc
gs
pop
xor
icebp
xchg
outs
sahf
xor
in
jb
lahf
mov
add
call
js
(bad)
jmp
add
push
(bad)
mov
xchg
mov
aam
jae
nop
fsubr
xor
hlt
pop
outs
and
adc
out
jg
mov
dec
or
push
xor
push
lahf
repz
hlt
dec
sub
and
mov
jno
cmps
(bad)
outs
xlat
ret
and
push
and
hlt
aaa
jns
in
hlt
popf
retf
sub
out
std
or
aad
sahf
or
in
movs
sbb
ret
sub
and
call
bound
fild
clc
pop
pop
scas
div
movs
fcom
dec
and
test
int3
push
push
jne
mov
xor
movs
cmp
jmp
jmp
sbb
mov
push
mov
add
fsubr
nop
test
xchg
and
add
add
jmp
sub
mov
push
xor
xchg
sbb
mov
pushf
sub
pop
jmp
fsubp
mul
mov
push
add
cs
scas
and
push
push
shl
mov
outs
lahf
sahf
xor
in
mov
and
repz
popf
pop
or
(bad)
push
pushf
addr16
mov
push
(bad)
lock
add
seta
gs
fdiv
imul
pop
cld
(bad)
adc
fnstsw
pop
js
out
xor
test
sbb
or
mov
pop
push
push
out
scas
or
aad
gs
scas
cwde
mov
adc
xchg
add
(bad)
loop
xor
sbb
mov
hlt
pop
xlat
ins
es
in
fs
push
add
pushf
in
mov
rol
mov
pop
cmc
sbb
aam
pop
sbb
and
ds
jg
ins
jg
data16
aam
outs
adc
and
cmp
cmps
dec
or
fwait
sbb
dec
cmp
jb
sbb
call
xlat
out
retf
inc
mov
pop
or
add
mov
mov
jne
retf
sbb
fcmovne
xchg
or
je
pop
xchg
mov
ds
stos
hlt
jecxz
(bad)
sub
mov
int
sbb
xlat
aaa
arpl
fnstsw
jge
mov
inc
ins
mov
retf
adc
sbb
sar
daa
lock
loopne
sar
loopne
inc
adc
mov
xor
push
add
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
push
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
aad
and
(bad)
jecxz
icebp
pop
into
cmp
sub
mov
pushf
mov
push
(bad)
pop
pop
inc
gs
sub
mov
retf
xchg
xchg
aad
(bad)
xchg
fidivr
movs
pushf
cmp
test
out
scas
cmp
dec
add
sub
add
fiadd
xor
test
inc
arpl
jmp
aad
cmp
popf
loop
mov
mov
(bad)
(bad)
aad
in
push
arpl
pusha
jae
cld
popf
jbe
push
xor
xor
iret
push
xor
sbb
mov
in
sbb
leave
add
imul
iret
outs
mov
xor
sti
aam
fwait
stos
or
outs
jge
call
jns
mov
loop
sub
popa
ret
sahf
aam
mov
jo
test
mov
cmp
xor
icebp
stos
mov
iret
jp
push
push
retf
cli
ja
adc
pop
push
retf
sub
push
mov
cmp
into
push
hlt
ja
add
(bad)
shl
aas
or
mov
loope
jno
jae
fs
cmp
retf
add
jns
push
push
xchg
jl
repnz
movs
ror
push
lods
xor
sub
sbb
cwde
mov
ins
(bad)
(bad)
or
rcl
xor
xor
mov
aas
loopne
mov
mov
cwde
mov
bound
pop
pop
ins
scas
cmp
popa
mov
fcomp
dec
jnp
and
mov
adc
and
inc
inc
scas
pop
inc
dec
aaa
dec
cli
mov
mov
retf
and
(bad)
out
push
scas
enter
cmp
ds
inc
sbb
inc
outs
das
iret
rol
fsubr
xlat
ret
mov
mov
mov
xchg
fwait
push
mov
test
sub
adc
xor
dec
mov
popf
int
stos
leave
mov
les
std
arpl
pop
add
sahf
adc
sub
sahf
mov
and
mul
xor
(bad)
fisttp
or
sub
xchg
push
add
mov
cmp
inc
aaa
xchg
cmp
sbb
icebp
or
mov
pop
push
mov
jmp
pop
cmps
sub
or
sbb
(bad)
push
ja
mov
icebp
jno
mov
mov
pop
add
mov
fidiv
pop
(bad)
and
wrmsr
cmp
repz
out
fwait
jae
push
icebp
add
inc
cmps
adc
ret
dec
xlat
add
push
and
fist
call
sbb
in
inc
or
add
fwait
ins
mov
(bad)
pushf
cmc
push
mov
pop
pop
xor
rcr
popf
dec
int3
fnstenv
sub
inc
push
cld
ret
sbb
add
icebp
mov
mov
jg
sub
loop
dec
(bad)
aad
push
add
mov
sub
stos
ja
cmps
ret
sbb
lock
les
jl
push
sub
imul
in
and
mov
sahf
adc
lods
pop
stc
xchg
out
dec
jo
fld
lods
addr16
dec
mov
aad
mov
cmps
adc
(bad)
iret
xchg
dec
adc
scas
lea
bound
gs
pop
fst
gs
and
loopne
jo
ret
inc
jnp
pushf
xchg
cmp
inc
(bad)
fsub
cld
repnz
ret
cwde
stos
je
adc
push
jle
movs
sbb
clc
jl
loopne
lock
cwde
dec
cwde
test
nop
and
fwait
enter
clc
dec
leave
push
pusha
shr
ins
mov
call
sti
inc
je
(bad)
stos
loope
loopne
inc
outs
call
call
dec
xor
push
test
inc
jo
ror
out
mov
int3
xor
mov
in
enter
js
(bad)
cmp
jmp
stos
pop
cwde
xchg
dec
pop
inc
clc
loop
and
xchg
les
push
into
popf
or
fdivr
arpl
mov
jl
pop
push
cdq
pop
lgs
popa
mov
pop
adc
outs
retf
in
jno
sub
push
ins
mov
sahf
int
xchg
(bad)
cmp
push
cld
outs
jge
out
(bad)
xchg
mov
icebp
cmp
test
out
mov
push
out
out
cmp
mov
jp
ss
aad
ficomp
lods
lahf
and
loop
ficomp
sbb
stc
cmps
clc
retf
mov
mov
push
out
sub
fcmovnu
(bad)
cmps
ss
or
xor
pop
xor
pop
cld
out
test
repz
jo
mov
xchg
cdq
out
xchg
lea
mov
xchg
add
scas
rcr
mov
imul
cmc
ss
sub
pop
sbb
jmp
nop
test
jns
test
inc
mov
(bad)
add
xchg
and
mov
mov
adc
shl
sbb
mov
push
mov
or
push
inc
inc
mov
sub
pusha
push
ins
dec
sub
pop
jae
aam
push
je
lahf
push
sub
jmp
jne
mov
push
jmp
fs
pop
iret
add
cmp
(bad)
and
push
popf
popf
dec
and
imul
and
xor
adc
push
je
xchg
mov
gs
push
xor
scas
fsubr
fsubr
cmps
mov
scas
addr16
inc
mov
jge
pop
jge
mov
inc
jmp
fnstcw
push
(bad)
rol
pushf
scas
jl
sub
dec
push
xchg
or
dec
and
sbb
sub
pop
ss
in
aas
stc
lds
lahf
and
mov
cdq
int
arpl
gs
outs
mov
xchg
mov
or
xor
cld
in
xchg
sub
iret
popa
push
retf
add
mov
jecxz
and
cs
cmp
bound
leave
mov
push
cld
pop
rcr
jle
iret
mov
mov
and
inc
scas
call
nop
rol
mov
lds
sub
adc
and
int3
sbb
mov
mov
cmp
jge
push
cli
and
sti
add
jmp
inc
in
xchg
fstp
clc
jns
jo
cmps
push
add
call
dec
or
cmp
pop
push
shr
aaa
test
aam
jne
outs
xchg
cs
bound
jne
test
mov
shr
inc
(bad)
sub
out
fisttp
jp
push
call
or
imul
mov
stos
jle
enter
icebp
pop
jle
adc
(bad)
sbb
(bad)
and
mov
dec
or
aaa
jmp
(bad)
daa
jle
pop
in
mov
sbb
mov
aas
mov
mov
loopne
pushf
sbb
leave
es
pop
imul
neg
xchg
int3
cmc
shr
or
sahf
inc
aam
mov
xchg
leave
lock
inc
push
enter
or
imul
lds
jo
dec
into
and
clc
jg
aas
and
push
pop
lods
adc
and
mov
inc
and
icebp
sar
sbb
pushf
fwait
stc
and
xor
xchg
mov
in
xchg
jp
xchg
int
sub
fistp
out
inc
repz
in
(bad)
xchg
movs
sub
mov
push
leave
scas
cmp
push
inc
and
mov
hlt
imul
mov
mov
jmp
test
pop
inc
push
jb
std
adc
adc
jne
pop
xchg
or
or
jl
adc
jl
mov
pusha
push
or
ja
jmp
pop
xchg
inc
dec
lods
jge
(bad)
or
inc
xor
setne
cdq
sbb
fidiv
popf
scas
(bad)
(bad)
imul
(bad)
aaa
push
mov
or
and
in
xchg
outs
(bad)
outs
dec
add
sub
test
dec
fmul
or
add
idiv
int
repz
inc
mov
mov
xchg
jecxz
cmc
sbb
dec
mov
adc
sti
cs
and
jbe
mov
inc
movs
ins
ret
cs
jl
shl
push
movs
jne
push
lods
in
push
fsub
mov
xchg
inc
into
sub
idiv
mov
out
cmp
aaa
add
inc
mov
jg
mov
inc
inc
mov
das
scas
push
add
sbb
mov
xchg
in
push
dec
ss
scas
xlat
xchg
xchg
or
daa
nop
jmp
mov
int3
dec
ja
jne
neg
leave
int3
test
mov
and
adc
retf
sbb
push
adc
shl
xlat
pop
xor
xchg
outs
sub
dec
pop
adc
daa
call
leave
mov
jecxz
jle
adc
neg
js
cmp
lock
jp
int
pop
movs
dec
fcmovnb
ins
ins
xchg
sbb
adc
cli
bound
pop
loop
data16
in
inc
adc
fwait
or
mov
sbb
out
outs
jne
add
loop
mov
dec
jne
rol
les
mov
shl
idiv
inc
push
mov
jns
and
mov
sbb
jmp
push
aas
push
outs
jmp
sub
push
and
repz
fadd
add
mov
adc
call
neg
test
nop
xlat
nop
fsub
inc
mov
idiv
inc
rol
mov
push
pop
fidivr
pushf
lahf
jmp
call
xor
cmps
mov
add
push
fldcw
mov
movs
fwait
mov
int
sbb
aas
ins
out
lock
or
jno
call
pusha
stos
add
sbb
push
mov
scas
adc
sar
movs
imul
xchg
sub
mov
pop
push
neg
in
aas
pop
push
dec
repnz
pop
jbe
movs
mov
mov
or
sbb
xchg
inc
xchg
retf
pop
or
mov
imul
aad
stos
mov
inc
test
popf
dec
pusha
push
dec
arpl
jecxz
pop
add
and
jmp
sbb
rcr
je
imul
(bad)
xlat
and
fs
mov
add
mov
dec
shl
aad
bound
cwde
shr
dec
mov
(bad)
inc
xchg
adc
inc
lds
xchg
mov
xchg
(bad)
fild
bound
pop
mov
lds
and
out
lds
xchg
xchg
nop
ins
add
fcmovb
dec
mov
and
adc
in
cmp
fiadd
ins
call
dec
pop
ret
(bad)
mov
sbb
stc
xor
cmps
jno
xchg
ins
push
pop
repnz
jge
fcomp
repz
add
or
daa
sbb
xor
pop
jge
ficom
ja
mov
fst
xchg
or
sbb
pop
ins
(bad)
fcmove
int3
jmp
test
sbb
or
imul
xchg
test
mov
sub
in
jl
stos
gs
fcmove
repz
adc
gs
dec
xchg
ins
fld
out
fldenv
mov
outs
pop
xor
push
jg
and
into
push
mov
loopne
outs
push
sti
xor
ins
repz
adc
push
int3
jnp
add
aaa
sbb
clc
jl
test
xchg
adc
int3
popa
adc
mov
rol
ret
sub
jp
xchg
jle
mul
stc
stos
xchg
jmp
push
mov
xchg
mov
mov
daa
xor
repnz
and
pop
push
mov
in
fimul
pop
bound
dec
sbb
mov
clc
daa
lock
loopne
sar
loopne
repz
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
dec
or
push
dec
inc
or
add
or
add
add
add
add
or
add
add
pushf
das
cmp
add
add
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
push
ret
sub
add
or
dec
inc
inc
push
pop
inc
in
shl
aam
add
lock
cdq
fldenv
repz
mov
jnp
enter
aas
jecxz
iret
es
mov
inc
(bad)
fldenv
popf
xchg
adc
push
jns
pop
add
aaa
sbb
cld
mov
cmp
push
dec
adc
jb
jns
pop
add
retf
cmps
cld
pop
stos
(bad)
and
xchg
cmps
xor
mov
adc
xor
inc
aad
push
xchg
dec
sub
mov
test
retf
sbb
or
jle
loopne
xchg
dec
sub
stos
push
xor
in
cs
fs
sub
stos
fidiv
retf
sbb
push
js
or
inc
cs
retf
pop
scas
push
je
mov
jmp
shl
pop
sti
jo
adc
xchg
ret
jno
sbb
sub
(bad)
sub
push
cmp
pop
xor
repz
loop
inc
dec
adc
js
cmp
outs
push
jg
push
mov
push
sub
retf
adc
sbb
cmps
repnz
xor
xor
xor
push
cdq
test
adc
mov
icebp
ins
call
inc
mov
shl
jmp
jle
fisttp
push
dec
ds
mov
loop
xchg
mov
inc
icebp
sbb
movs
pop
retf
mov
stc
push
pop
fsubr
popf
cmp
es
dec
sub
nop
in
xor
loope
xlat
mov
mov
popa
push
mov
sub
jo
jbe
int
push
or
push
mov
cmps
push
loop
jne
add
mov
and
iret
aad
pop
xchg
js
dec
sahf
push
ja
adc
movs
in
clc
push
leave
repnz
push
pushf
and
lods
cmp
adc
xor
loopne
outs
and
jnp
jb
mov
js
fwait
aam
dec
push
push
mov
les
pop
push
imul
xchg
or
in
mov
fmul
mov
(bad)
pop
and
cli
mov
rcr
cmp
jbe
lds
(bad)
ja
adc
pop
pop
loope
shl
leave
sti
cld
ja
or
cmp
jge
loopne
sbb
scas
in
test
repz
pushf
stc
scas
ins
adc
sbb
or
hlt
pop
ret
sub
mov
stos
lahf
push
pop
mov
scas
push
int3
and
jle
call
pop
daa
retf
inc
add
lods
scas
adc
mov
adc
push
aaa
mov
int3
jg
adc
jge
fld
bound
xor
movs
pop
dec
push
jl
sub
jl
aad
out
mov
pop
adc
ret
test
loope
xchg
xchg
add
xchg
fcmovnu
push
push
shl
mov
adc
dec
les
mov
mov
das
mov
shl
sbb
loope
sub
sub
ins
fidivr
ins
add
cmc
lea
aad
and
mov
sbb
jne
xor
stc
inc
adc
test
leave
mov
or
push
movs
xor
or
cmp
fwait
push
ins
push
mov
test
mov
mov
cmp
mov
js
gs
pop
popa
add
fsubr
pushf
mov
jo
repnz
out
sub
aad
pushf
inc
(bad)
ins
mov
xchg
or
add
neg
ret
xor
mov
lahf
mov
(bad)
fbld
dec
sahf
mov
retf
mov
fidivr
(bad)
jbe
inc
dec
push
lods
fs
adc
push
mov
ja
inc
cmp
jae
shl
cmp
idiv
shr
cmp
xor
jg
xor
pop
xor
fst
(bad)
push
repz
sub
dec
enter
add
outs
cmp
push
(bad)
or
sub
xchg
(bad)
fwait
sti
fidivr
ins
mov
test
and
or
pop
xlat
ret
into
icebp
inc
retf
mov
xchg
movs
gs
and
cmps
shl
add
pop
in
mov
dec
rcr
out
pop
in
inc
fisubr
add
push
dec
cmps
outs
nop
dec
mov
jns
xor
aad
mov
mov
nop
mov
pop
repnz
jbe
or
enter
jns
popf
call
shr
cmp
jmp
and
mov
mov
pop
or
mov
inc
movs
ret
cli
cmc
mov
jmp
(bad)
push
iret
push
stos
out
or
test
fnstcw
jno
or
jp
je
cmp
jne
retf
cs
daa
pop
or
loope
inc
test
in
and
sar
out
shl
xor
hlt
xlat
sub
loop
xlat
cmp
jbe
call
mov
nop
xchg
sub
(bad)
xor
ret
jp
leave
out
and
and
pop
add
jno
pop
push
sub
nop
rcl
stos
pop
pop
sbb
mov
test
cmp
sti
sub
jge
cmp
lods
sti
inc
push
cmp
fisttp
mov
push
push
xchg
and
retf
sub
xchg
mov
sbb
ret
jnp
ins
xor
jmp
mov
sti
ror
mov
shl
lods
movs
mov
nop
sub
inc
mov
loope
jns
pop
cli
add
add
mov
imul
add
rol
mov
sub
loop
ficomp
movd
and
jmp
lods
add
repz
or
sahf
pushf
loop
std
movs
push
push
mov
xchg
push
fwait
hlt
inc
jno
ja
inc
call
fldcw
or
cmp
mov
fistp
data16
ja
lock
div
jmp
(bad)
jmp
push
popa
fisub
cmp
add
addr16
push
jmp
das
dec
ret
sar
adc
retf
adc
mov
add
cmp
xchg
int
jl
sti
dec
(bad)
hlt
pop
fsubr
or
or
push
push
or
mov
(bad)
pop
fs
pop
pop
fbstp
popf
add
push
pop
xchg
mov
dec
adc
outs
jmp
mov
bound
and
mov
add
fxch
inc
movs
sbb
adc
ins
jo
pushf
enter
shr
fwait
cmp
pop
fidiv
dec
xlat
das
sbb
scas
inc
cmp
mov
xor
mov
lock
mov
daa
mov
cmp
sub
repnz
jb
pusha
int
rcl
aad
xor
shr
xor
dec
or
mov
cmp
addr16
call
mov
outs
jb
dec
pop
sub
and
sub
lock
or
inc
scas
pop
shl
fnstsw
mov
daa
adc
in
mov
push
pop
pop
inc
mov
mov
aaa
and
pop
mov
pop
mul
fucomi
xor
pop
sub
xchg
aas
add
retf
xlat
xchg
fiadd
in
adc
je
xor
inc
push
outs
inc
pop
xchg
pop
stc
or
je
dec
jns
xchg
fbstp
add
and
and
(bad)
jmp
push
lock
cs
leave
icebp
neg
pop
outs
arpl
popf
push
int3
adc
ja
(bad)
(bad)
repz
lock
repz
or
stc
arpl
inc
fild
push
mov
jl
cmp
pusha
push
in
jae
mov
imul
in
inc
pusha
sbb
addr16
push
or
or
and
fstp
mov
fiadd
je
movs
in
movs
jl
cmp
or
(bad)
jbe
dec
movs
ja
mov
mov
stc
icebp
sub
das
sbb
add
pop
mov
add
mov
retf
outs
xor
mov
sbb
retf
pop
dec
dec
iret
fs
adc
fs
fld
nop
xchg
jmp
jns
dec
xchg
or
pusha
add
pop
adc
repz
mov
cs
jge
bound
inc
sbb
push
iret
push
int
and
cmp
cdq
out
sub
adc
ret
sbb
aad
add
ret
arpl
sub
out
xchg
inc
aam
jge
push
lds
mov
sub
mov
shr
ror
jae
aas
dec
and
xchg
mov
test
sbb
push
ret
inc
cld
shr
stos
outs
std
retf
pop
jge
jmp
inc
fsubr
arpl
mov
mov
mov
push
mov
stos
xlat
dec
in
sbb
mov
ret
ins
test
aad
sub
and
sub
jnp
sub
repnz
pop
push
or
fs
gs
(bad)
fdivrp
jmp
cli
push
(bad)
mov
in
dec
push
pusha
add
std
aaa
aaa
jo
lea
neg
mov
or
call
xlat
popf
scas
xchg
imul
pop
jnp
sbb
iret
inc
cmps
cmp
mov
imul
call
sahf
mov
stos
xor
sub
loope
leave
test
rol
mov
jl
jge
sbb
pop
xchg
popf
adc
mov
ret
cmp
sub
ins
add
mov
jmp
xchg
inc
jae
jmp
rcl
or
stos
mov
ds
add
dec
nop
aam
dec
dec
retf
jo
jno
jmp
shl
arpl
inc
out
jge
xchg
cld
cmc
mov
cmps
dec
repz
ss
outs
mov
or
out
xor
aam
addr16
pop
sub
daa
cs
add
xchg
loopne
jge
dec
xchg
add
jne
jl
icebp
or
pop
jle
and
mov
and
pusha
stos
add
stc
sub
pop
pop
mov
enter
scas
int
or
cmps
ins
jg
scas
rcl
shr
xchg
mov
out
jmp
mov
mov
cmp
or
or
ja
and
sar
and
adc
pop
jne
cmp
dec
and
sbb
mov
xor
shl
xor
jmp
out
iret
aaa
sbb
sar
fisubr
or
xor
movs
aas
mov
cmp
dec
push
xor
int
inc
push
pop
aaa
cmps
and
sub
retf
fstp
in
mov
inc
or
daa
sbb
push
shl
mov
outs
xchg
inc
rcr
adc
inc
mov
push
and
dec
ja
repnz
aaa
shl
inc
or
adc
sbb
popf
dec
into
call
jecxz
in
iret
outs
push
outs
dec
pushf
dec
add
xor
mov
out
xchg
(bad)
pop
addr16
xor
aad
push
inc
out
xor
push
adc
mov
push
inc
adc
jns
cmp
aam
cmps
fadd
stc
rol
mov
mov
add
mov
xchg
push
jecxz
bswap
(bad)
xchg
fisubr
je
cs
inc
mov
movs
sbb
pop
pop
sti
int
jne
icebp
sub
std
mov
lods
add
xchg
mov
push
xchg
adc
push
mov
xchg
sbb
fadd
popf
mov
dec
xchg
outs
pusha
repnz
dec
sub
pop
cdq
arpl
mov
test
mov
and
(bad)
stc
aaa
lock
loopne
sar
sar
mov
enter
add
dec
inc
dec
inc
scas
inc
pusha
or
add
inc
mov
(bad)
outs
pop
aad
xor
pop
ds
inc
iret
or
xor
xlat
mov
mov
minpd
xchg
mov
movs
pop
retf
xchg
ret
test
(bad)
pushf
mov
stc
call
cwde
pop
ds
inc
iret
or
xor
xlat
mov
mov
minpd
xchg
mov
movs
pop
retf
xchg
ret
test
outs
hlt
cli
mov
sbb
lea
jb
pop
icebp
jb
idiv
clc
jge
ret
fld
mov
xor
int3
adc
and
imul
ret
adc
shr
dec
xchg
dec
shl
mov
mov
outs
fst
xchg
pop
int3
jle
call
scas
lods
fs
out
push
xchg
popa
push
dec
clc
or
adc
ins
mov
dec
ror
das
adc
pop
mov
cmp
cmp
or
inc
adc
cs
out
cmp
outs
adc
stos
mov
cmp
dec
push
cdq
sbb
push
add
xchg
fild
inc
push
arpl
mov
xor
int
dec
cmc
jae
xor
push
jge
je
and
mov
loope
xchg
and
sub
push
stos
es
or
adc
loopne
jns
ss
mov
lods
jecxz
jg
dec
inc
xor
arpl
in
js
int3
or
stos
int
xor
stos
jmp
pop
and
xchg
loop
les
loope
cwde
and
cmp
or
cmp
adc
in
out
addr16
es
mov
dec
ror
and
scas
cs
sbb
sbb
fwait
pop
pushf
movs
and
or
sbb
dec
cmc
dec
sub
(bad)
(bad)
push
jae
addr16
lahf
test
idiv
scas
dec
adc
popf
jle
jbe
ror
cmp
jnp
pop
out
xor
push
sbb
jbe
stos
(bad)
in
rcl
xchg
pop
sub
daa
es
movs
sti
jle
dec
rcl
jne
pop
lea
test
inc
daa
movs
mov
retf
jp
push
int
xor
dec
mov
xchg
mov
xor
(bad)
xlat
push
aas
mov
mov
loop
cmp
jle
fidiv
pop
cwde
data16
and
sbb
mov
mov
xchg
xor
mov
ss
(bad)
rol
(bad)
xor
pusha
jb
outs
mov
out
in
iret
fcomi
fsubr
cmps
inc
or
lods
dec
mov
push
imul
sysexit
add
loope
jbe
loop
daa
ret
mov
imul
fistp
in
call
fcom
mov
fs
loope
jo
mov
xchg
lods
into
push
fisttp
outs
retf
int3
inc
scas
mov
inc
mov
pop
out
mov
inc
sub
push
mov
sbb
jge
pop
ins
into
add
sub
fld
(bad)
xchg
scas
ror
mov
test
cmp
xchg
push
mov
aad
enter
dec
bound
push
pop
lods
loope
and
or
dec
sbb
add
inc
adc
mov
jge
or
loope
cmp
pop
(bad)
pop
sahf
mov
test
pop
xor
pushf
sbb
jle
idiv
mov
ds
lods
pop
add
mov
into
(bad)
repz
mov
rcr
adc
shr
call
ds
std
lahf
repz
stos
mov
and
add
xor
mov
or
fisubr
ja
ror
arpl
adc
push
sub
repz
je
lea
xchg
out
sahf
pop
cmp
cli
mov
sbb
nop
(bad)
sbb
outs
mov
mov
sbb
jo
pop
sti
push
and
out
mov
jo
call
mov
jns
xor
mov
push
int3
int
push
das
adc
pop
cmp
inc
xchg
and
mov
cwde
popf
xor
scas
in
dec
pop
jp
loopne
mov
or
add
fwait
and
aad
pop
adc
jbe
lea
sub
push
pop
push
dec
xchg
loopne
xor
inc
mov
jle
nop
test
inc
movs
sti
add
dec
fldenv
pop
mov
xchg
enter
push
pusha
scas
xchg
pop
fdivr
cmc
xchg
dec
arpl
adc
outs
and
outs
scas
hlt
scas
addr16
outs
push
aam
add
push
(bad)
rcl
jle
mov
pop
push
and
in
out
pop
adc
jae
retf
int
xchg
gs
push
jg
shl
ficomp
int
test
icebp
push
idiv
push
retf
je
fcom
dec
movs
pop
jbe
xor
adc
int3
xchg
xchg
mov
gs
outs
scas
push
lds
sbb
mov
adc
sti
pop
in
ret
mov
xchg
cmp
xlat
jecxz
enter
mov
or
jo
xchg
or
xor
or
pop
and
and
pop
lahf
ds
xchg
and
(bad)
mov
in
rcl
or
xor
(bad)
xchg
movs
xlat
push
push
test
sbb
or
xchg
mov
cld
sub
jl
or
mov
cwde
(bad)
ret
push
push
inc
or
mov
rsm
popf
jmp
das
mov
push
mov
setae
push
call
mov
cmc
cmp
pop
lea
sbb
pop
sbb
pop
outs
int3
xchg
stos
mov
shl
dec
in
fdivr
js
cs
je
neg
(bad)
loopne
(bad)
jbe
call
push
arpl
imul
into
cmp
sbb
jmp
adc
out
push
mov
or
inc
pop
rcr
repz
sbb
pop
(bad)
lds
ds
pop
mov
add
pusha
test
ds
inc
dec
neg
mov
mov
jns
and
cmp
test
ror
xor
sbb
aad
shl
adc
test
ins
fchs
sbb
jmp
test
mov
int
jae
or
jns
inc
cmp
mov
repz
add
mov
movs
ja
push
(bad)
cmps
mov
std
cmp
popf
out
into
mov
int3
pop
pop
mov
gs
shr
(bad)
xchg
stos
mov
jno
retf
ror
ss
test
das
and
adc
stos
ins
call
cmp
fistp
call
ret
sbb
mov
rol
xor
or
(bad)
shr
dec
adc
xchg
jmp
mov
int
inc
out
neg
or
cmp
fisub
vprotd
dec
sbb
gs
mov
shl
pause
clc
cdq
jmp
push
mov
jmp
int3
sbb
dec
std
adc
call
add
mov
int
movs
mov
mov
pop
sub
jno
gs
dec
pop
sbb
ins
xchg
out
xor
mov
outs
arpl
clc
movs
mov
push
bound
jb
add
int3
mov
inc
loopne
in
(bad)
out
cmp
push
jb
mov
leave
or
lahf
mov
add
sbb
daa
jmp
xor
and
adc
jle
xchg
cmp
adc
add
or
outs
cmp
fldcw
inc
faddp
stos
pushf
iret
jo
ror
cmp
jns
add
pop
bound
sbb
sub
fsubr
mov
dec
ja
cmp
jb
adc
dec
add
je
dec
mov
out
jle
in
cmps
mov
cdq
push
dec
mov
adc
sub
shr
movs
out
push
leave
cld
repnz
ret
mov
pusha
cmc
push
push
or
and
inc
fs
sub
popa
dec
xchg
jmp
cmp
lahf
xor
push
push
sub
sub
pushf
fisubr
fimul
mov
jo
cmps
test
mov
enter
sbb
mov
push
rcl
xor
dec
(bad)
jmp
pop
(bad)
int3
pop
pop
ret
ret
mov
mov
fnstenv
in
das
fisubr
stos
aaa
push
in
pop
fnstcw
pop
cmp
lahf
adc
sbb
push
dec
imul
or
adc
or
popa
sar
pop
(bad)
pop
jmp
mov
ss
fisubr
fst
adc
das
cmps
and
jge
sub
sub
pop
clc
imul
pushf
xor
cli
mov
nop
iret
shl
(bad)
leave
pop
fisttp
mov
xchg
add
and
cmp
sub
pusha
push
mov
mov
dec
and
lods
fidivr
jmp
cmp
loope
pop
mov
inc
dec
inc
jg
sbb
adc
inc
push
hlt
inc
jecxz
loopne
jle
repz
(bad)
or
pop
lods
dec
jo
jecxz
jmp
cmp
add
shl
pop
jnp
sbb
jge
frstor
loope
mov
and
ins
pop
sahf
cmp
mov
mov
clc
xor
inc
out
(bad)
adc
ret
ins
xchg
mov
or
inc
sub
cmp
or
rol
fstp
or
jne
adc
inc
fs
sbb
fwait
add
jbe
inc
test
fldpi
xchg
mov
in
jmp
mov
mov
sub
push
and
sti
outs
shr
pop
in
repz
movs
inc
jle
mov
inc
ja
mov
sbb
mov
movs
cmc
cmc
outs
jns
sar
ds
xlat
aad
sbb
pop
gs
or
ret
das
add
mov
mov
test
push
aad
sbb
gs
fild
sahf
sub
mov
dec
shl
fisttp
add
add
icebp
pop
dec
loopne
fcomp
mov
repz
in
lea
das
inc
sbb
mov
(bad)
cmps
push
add
ins
in
mov
inc
sub
nop
push
jo
(bad)
in
add
div
and
sbb
mov
dec
dec
test
outs
enter
jns
pop
retf
sub
ss
repz
add
rol
jecxz
fwait
cdq
mov
sbb
mov
ficomp
xchg
xor
and
mov
stos
les
mov
xlat
dec
xchg
xchg
arpl
in
ins
bound
(bad)
pop
jmp
adc
inc
ret
add
adc
(bad)
xchg
ffree
mov
pop
int3
mov
loopne
mov
xchg
sub
sbb
scas
sbb
idiv
mov
dec
movs
mov
sbb
sub
inc
int
dec
sar
loopne
lahf
and
lea
pusha
or
fwait
int
xchg
inc
inc
xchg
jae
sbb
and
adc
dec
inc
ins
(bad)
jge
ret
in
bound
mov
push
hlt
pop
mov
rcr
in
cwde
jle
cdq
addr16
mov
rcl
outs
repz
sar
cmps
enter
rcl
xor
dec
nop
jno
test
jg
(bad)
aam
jno
xor
dec
push
xor
aam
(bad)
mov
inc
jle
outs
popa
std
test
out
xor
sub
fist
das
leave
mov
ss
outs
ds
dec
adc
push
imul
fnstenv
das
sbb
mov
sbb
movs
add
outs
bound
lods
mov
add
repz
bound
(bad)
mov
aaa
push
jle
pop
aas
push
inc
jmp
fs
jo
mov
call
add
cwde
sbb
mov
nop
int
cmc
cmps
retf
cmp
xchg
jge
jmp
xlat
or
push
or
scas
sbb
arpl
popf
test
pop
fldenv
leave
cmp
sbb
sbb
leave
pusha
and
jb
(bad)
jle
xor
fld
sbb
lea
shr
pop
pop
mov
cmp
int
jmp
jb
mov
loop
iret
cdq
imul
or
jmp
ds
adc
adc
and
jo
shl
jp
ins
mov
nop
dec
ret
push
(bad)
repz
movs
ficomp
cmp
fcomp
popa
pop
sub
shl
mov
dec
aad
push
cs
adc
add
int3
sub
nop
pop
sub
adc
pop
sahf
or
cmp
add
mov
mov
retf
lods
in
inc
je
lea
jmp
xlat
leave
xor
leave
les
dec
fmul
add
fdiv
push
fs
xor
jg
mov
fst
push
sub
cdq
mov
fdiv
push
mov
xor
add
and
jl
fdivp
push
xchg
imul
mov
xchg
xor
push
and
mov
jmp
cld
add
or
push
loopne
push
lahf
inc
jne
(bad)
mov
or
cmp
stc
pop
xchg
adc
jne
add
dec
mov
dec
je
pop
aas
xchg
dec
scas
lods
scas
mov
jmp
add
cmp
fisttp
cmps
xchg
mov
out
jmp
cs
daa
jns
call
cld
adc
repnz
push
imul
inc
xor
cli
and
cmps
(bad)
iret
(bad)
mov
das
shl
mov
mov
xlat
rol
add
jae
repz
test
mov
sbb
mov
xlat
lock
dec
xor
xor
add
mov
cmps
mov
(bad)
push
dec
mov
std
arpl
into
push
xor
lods
cmps
nop
out
pop
jl
(bad)
mov
popa
pop
stc
xor
in
add
(bad)
(bad)
cmps
or
out
mov
add
stc
fld
jno
leave
daa
xchg
in
repnz
sub
and
icebp
cli
shr
cmp
dec
or
neg
xchg
inc
xchg
mov
inc
into
push
sub
inc
in
sahf
mov
xchg
cmps
rcl
retf
inc
cmp
inc
add
mov
pop
popf
rol
mov
add
dec
test
mov
popa
ds
fst
out
xchg
scas
sahf
mul
es
jge
xchg
(bad)
inc
loopne
inc
retf
jns
mov
jmp
push
jmp
(bad)
call
mov
dec
fst
call
xchg
push
fwait
jl
pop
pop
aam
(bad)
and
scas
xor
popf
jmp
mov
push
sub
loopne
mov
push
add
fiadd
in
rcl
test
ds
(bad)
div
mov
push
xor
cmp
rol
idiv
retf
mov
mov
mov
aam
scas
mov
mov
rcr
enter
and
cmp
rcr
dec
mov
(bad)
cs
and
ret
jmp
or
test
pop
icebp
test
sbb
arpl
nop
push
xlat
lock
add
inc
cmp
or
aad
or
mov
sbb
xchg
mov
test
dec
aam
xchg
addr16
mov
inc
int
pop
clc
inc
fadd
xchg
ret
sub
into
push
mov
aas
movs
sbb
call
arpl
leave
lock
rcl
xor
(bad)
push
addr16
mov
adc
sbb
fist
mov
xchg
mov
dec
pushf
(bad)
mov
pop
das
adc
add
and
sbb
jge
mov
movs
and
loopne
mov
pop
dec
das
jb
inc
jecxz
mov
mov
test
jecxz
aad
cdq
dec
add
jnp
mov
and
adc
cmp
in
or
stos
addr16
(bad)
mov
retf
(bad)
not
or
fwait
clc
or
pop
push
retf
rcl
dec
test
push
pop
outs
stos
test
sub
jb
fwait
add
lods
cmp
js
jl
jecxz
xchg
mov
jecxz
pop
add
mov
es
je
repz
dec
jmp
pop
out
nop
js
shr
clc
div
fs
jbe
sub
jmp
jmp
retf
les
mov
jo
pop
ins
add
pop
inc
out
imul
lock
loop
jl
pop
int
sub
jge
mov
xor
adc
dec
push
add
adc
stos
adc
xchg
mov
push
out
mov
jb
stc
mov
pop
retf
fcmovb
jg
mov
push
jp
jb
loope
dec
das
je
sub
mov
sahf
mov
xchg
ja
mov
call
adc
outs
sbb
inc
add
add
cwde
xor
jae
cmps
jns
(bad)
fidiv
inc
hlt
pop
imul
fadd
mov
lea
iret
pop
adc
jecxz
es
lahf
add
dec
xor
ins
cmp
fidiv
mov
push
fnstcw
jmp
mov
ins
stos
mov
test
repnz
push
jge
bound
inc
inc
in
(bad)
mov
cmps
(bad)
call
cmp
lea
clc
push
xchg
mov
sbb
ret
add
cs
mov
fidivr
push
mov
jno
pop
fwait
pop
mov
sub
push
call
shr
or
or
loopne
push
fs
daa
rcr
jno
mov
inc
cmps
push
ins
test
test
test
sar
mov
ret
xor
mov
je
in
xchg
lock
jae
popf
std
clc
mov
mov
movs
enter
mov
mov
xchg
mov
cmc
xchg
out
mov
aas
fldenv
js
and
movs
push
int3
hlt
push
(bad)
mov
enter
mov
mul
(bad)
test
out
hlt
mov
fwait
bsf
pop
pop
mov
xor
inc
iret
mov
jp
sahf
ror
cmp
loope
pop
sbb
xor
sub
add
xor
jmp
pop
mov
jns
and
mov
sub
push
sbb
pop
fistp
repnz
mov
pop
lock
repz
and
test
in
push
popf
adc
leave
fisubr
(bad)
fcomp
push
dec
cwde
and
imul
imul
add
dec
push
stc
xor
inc
or
pop
dec
jbe
pop
dec
rcl
jle
pop
scas
imul
mov
push
cld
pop
mov
leave
push
shl
test
cmp
jp
movs
xchg
mov
out
les
je
(bad)
(bad)
pusha
xchg
inc
movs
mov
movs
mov
into
in
adc
jb
and
cld
lds
mov
out
add
lea
(bad)
cmp
sti
(bad)
pop
push
shr
das
xchg
jb
(bad)
push
loope
fistp
ins
fist
std
retf
mov
lock
cmp
lds
lds
pop
xor
inc
sub
fmul
or
mov
mov
fsubr
and
jecxz
iret
(bad)
les
mov
mov
sub
mov
mov
and
xor
pop
and
std
dec
mov
mov
dec
lods
cwde
mov
pop
jnp
retf
pop
retf
or
adc
adc
repnz
fisub
mov
cld
mov
dec
xchg
fnstsw
push
mov
sbb
mov
push
(bad)
mov
int3
popa
mul
stos
es
out
mov
and
xlat
mov
push
cmps
mov
pop
xchg
mov
dec
outs
std
popf
rcl
dec
add
inc
sub
(bad)
out
rol
imul
push
jb
fucom
in
pop
jmp
xchg
jae
mov
fwait
sar
push
inc
ins
or
out
xchg
add
cmps
scas
pop
retf
cmc
loope
cdq
aas
mov
sub
cmps
popf
(bad)
pop
pop
daa
das
imul
loop
nop
(bad)
jle
scas
enter
rcl
sahf
loope
ds
or
sbb
lea
ret
lea
fcom
pop
ror
mov
fldenv
scas
bound
inc
scas
inc
mov
cmp
ret
jae
xor
jb
inc
xor
and
mov
dec
jbe
into
sub
xlat
add
mov
pusha
sub
cmps
inc
xchg
jp
fwait
cmps
jo
sbb
cdq
mov
stc
mov
pop
xchg
daa
push
popa
sub
jmp
ret
out
rol
ret
std
test
daa
mov
leave
inc
ja
push
jo
mov
in
js
xor
test
arpl
adc
xor
in
aas
push
stos
nop
dec
cdq
xlat
or
fstp
xor
and
mov
cmc
inc
xchg
xchg
push
cmc
imul
xor
xor
xor
sti
push
mov
cs
mov
and
sbb
dec
mov
adc
jnp
std
sbb
mov
mov
mov
bound
xor
or
push
jne
push
cmc
lds
call
aam
movs
sub
pop
mov
stos
cmp
(bad)
mov
pop
xlat
sbb
dec
ins
lock
xor
hlt
push
add
mov
pop
hlt
mov
push
or
dec
push
add
mov
jo
stos
add
xchg
cmp
pop
fdiv
and
sbb
inc
into
or
xor
ret
movs
jecxz
in
and
ret
and
adc
and
xor
sub
mov
adc
mov
aas
pushf
aad
xchg
add
loopne
lea
je
mov
out
jle
dec
push
and
ss
imul
xchg
mov
fist
cmp
push
cmp
lods
test
push
and
cmp
in
int
data16
xor
jg
vmwrite
mov
mov
idiv
dec
sbb
pop
add
adc
sbb
lock
sbb
jbe
ja
out
(bad)
adc
movs
jae
mov
sti
or
and
and
pop
ss
add
(bad)
mov
add
sbb
popa
std
nop
mov
dec
xchg
sub
mov
mov
test
cmc
ins
dec
pop
fcmovu
nop
cmp
push
fcmove
retf
fist
mov
push
mov
outs
ret
mov
ss
retf
sub
cli
add
add
pop
xor
cmp
inc
mov
mov
and
jne
cli
xchg
pop
leave
jne
cmps
push
mov
inc
jae
call
loope
scas
fstp
int
daa
les
movs
sbb
mov
shl
sub
sar
xchg
push
mov
push
mov
loop
call
or
jmp
jb
cwde
in
jno
mov
adc
ins
je
hlt
jnp
ret
in
test
loope
in
mov
xor
dec
xchg
cli
outs
inc
pop
cmp
cmp
mov
aam
ss
sub
stos
jns
pop
sbb
adc
dec
sahf
xchg
ins
loope
sub
fwait
xchg
dec
jb
imul
inc
mov
aam
jle
mov
push
mov
shl
mov
popf
pop
xor
in
sbb
mov
jno
jns
pusha
fst
mov
jecxz
sbb
cmp
pop
shl
xchg
xchg
inc
mov
mov
adc
aam
sub
loop
js
movd
inc
mov
sbb
leave
jecxz
cli
je
xor
retf
ja
add
fst
mov
mov
fisub
dec
adc
cmp
cld
or
loop
inc
dec
xchg
scas
and
into
mov
daa
cwde
sub
push
out
cmp
fcomp
outs
or
stos
aad
fst
sub
inc
dec
mov
rcr
retf
sbb
(bad)
mov
movs
lock
mov
pop
xchg
repnz
adc
not
in
mov
pop
idiv
sub
aas
mov
stos
pop
nop
std
jecxz
loopne
or
mov
mov
inc
adc
xchg
cwde
mov
je
in
rep
(bad)
in
cmp
xor
mov
adc
mov
and
sub
movs
stc
mov
(bad)
mov
or
(bad)
adc
push
(bad)
cmp
adc
test
xor
add
and
push
jl
arpl
add
and
or
into
dec
int
lods
push
(bad)
cld
xor
push
add
pushf
pop
push
pop
dec
lods
mov
retf
or
push
cmp
icebp
xchg
or
ror
movs
push
mov
lea
jbe
retf
mov
mov
outs
xchg
or
es
dec
mov
ds
jnp
test
loope
shr
fwait
aaa
gs
test
(bad)
in
dec
imul
div
or
dec
adc
jo
retf
pop
jne
xchg
cwde
pusha
adc
(bad)
push
mov
in
test
les
cwde
push
adc
retf
out
and
lock
and
mov
shr
mov
cmp
clc
ins
shl
ds
ss
aas
int
jbe
(bad)
jmp
ja
cli
loope
dec
retf
out
mov
inc
inc
lahf
xchg
dec
enter
call
mov
je
ja
shr
add
fwait
out
loop
pop
mov
sub
rcl
xor
mov
outs
xchg
xor
mov
sbb
xchg
push
lds
aam
adc
mov
clc
xchg
adc
(bad)
jbe
cdq
je
in
stc
(bad)
sub
pop
mov
mov
fild
out
(bad)
imul
sub
retf
je
xor
dec
lods
add
sahf
call
(bad)
loop
jmp
cmp
dec
inc
in
shl
add
pop
stos
bound
outs
cmp
xchg
dec
cs
(bad)
xlat
outs
dec
(bad)
loop
mov
je
add
mov
aad
js
ret
pop
loop
jmp
rcr
(bad)
mov
pusha
xchg
inc
xchg
stc
lods
pop
add
add
xor
push
stos
(bad)
xchg
fs
imul
icebp
(bad)
mov
ss
mul
in
mov
and
inc
push
push
rol
dec
jns
icebp
fcomp
out
jecxz
jmp
mov
lods
jg
(bad)
lds
(bad)
out
mov
or
push
(bad)
neg
ins
das
bound
iret
jmp
inc
retf
jle
dec
pop
addr16
adc
rol
setns
cdq
dec
sbb
loopne
and
pop
add
push
(bad)
cmp
stos
mov
or
push
jmp
jbe
jae
mov
es
adc
inc
push
cmp
jle
pop
xor
retf
loopne
mov
mov
xchg
call
repnz
adc
lods
icebp
mul
daa
sbb
adc
(bad)
es
mov
mov
or
aas
ret
add
and
mov
lods
push
or
loop
mov
sbb
mov
jge
pop
std
sbb
push
xor
cmp
mov
push
jecxz
in
cmp
mov
add
int
(bad)
aas
leave
test
jb
mov
aam
xchg
xchg
sub
or
retf
stos
das
inc
hlt
mov
daa
clc
push
inc
jle
mov
shr
or
inc
xchg
jecxz
and
or
fldcw
sub
mov
inc
addr16
ror
inc
in
dec
or
out
(bad)
and
arpl
fwait
out
mov
(bad)
rcl
mov
cwde
jmp
movs
pop
cmp
repz
hlt
je
cmp
push
outs
xor
add
(bad)
push
xchg
(bad)
jmp
cmps
mov
retf
test
cld
loopne
out
or
push
pop
popf
jl
sbb
lods
mov
pop
mov
push
sti
push
jecxz
pop
sub
sbb
js
stc
jb
xchg
fs
pop
mov
std
addr16
shl
and
inc
fcom
arpl
lea
cwde
mov
ret
jge
(bad)
mov
pop
inc
inc
repnz
inc
icebp
fmul
in
inc
shl
dec
stos
jmp
mov
inc
vprotw
lea
mov
mov
mov
push
loop
jae
jg
mov
cld
sahf
mov
pop
es
mov
cwde
pop
pop
xchg
test
dec
xchg
xchg
fidiv
ds
std
stos
sub
sbb
push
mov
clc
(bad)
jmp
cmp
push
add
jne
lods
dec
nop
mov
xchg
xchg
sbb
dec
sbb
and
adc
arpl
mov
push
(bad)
mov
xor
cli
xchg
lds
xor
in
aaa
jae
hlt
addr16
dec
icebp
cmp
repz
iret
inc
je
int
add
pop
cdq
stc
test
jle
sub
xor
sub
pusha
cs
in
mov
popw
push
movs
mov
fcom
shl
mov
or
fdiv
outs
in
fs
(bad)
and
push
adc
jb
adc
xchg
gs
lahf
js
mov
jp
loope
fsub
push
add
fld
adc
js
mov
dec
mov
outs
pop
ret
cmps
es
adc
outs
lds
mov
mov
or
int3
add
lods
cld
push
in
pop
push
sub
adc
repz
popf
jne
in
cmp
loop
pop
rcl
dec
pushf
dec
js
das
and
setl
sub
push
mov
xor
inc
loope
mov
ss
call
lock
scas
xor
mov
and
sar
(bad)
inc
ret
cmp
cmp
xor
inc
mov
into
out
push
jno
loop
add
into
ins
jnp
lsl
sbb
ficom
imul
or
loop
dec
ins
test
jb
scas
add
mov
ss
arpl
jle
xlat
mov
xor
scas
pushf
inc
pop
out
test
or
fnstenv
pop
xchg
das
retf
stos
inc
hlt
arpl
mov
pop
iret
in
cmp
mov
push
mov
cwde
pusha
adc
mov
fbstp
pop
pusha
lock
sub
adc
outs
retf
inc
mov
leave
pop
and
ror
test
imul
mov
inc
or
jle
dec
gs
pop
and
nop
cmp
mov
pop
add
ss
dec
jo
int3
rcl
sbb
push
adc
or
xchg
add
cmp
sbb
ret
mov
mov
cwde
ja
xlat
jb
cmp
shr
nop
retf
aas
int3
push
mov
call
out
call
stc
push
retf
into
xor
mov
xchg
pop
lahf
(bad)
inc
mov
add
ja
push
pop
fild
push
or
into
fld
xchg
imul
mov
movs
mov
push
dec
loopne
hlt
push
xlat
enter
mov
push
cld
ror
mov
dec
clc
int3
mov
aam
div
cld
and
sar
push
addr16
mov
sbb
and
push
xchg
or
mov
mov
and
div
push
ins
test
jmp
hlt
pop
mov
add
out
repnz
imul
mov
jge
leave
(bad)
cmp
in
into
pop
outs
cdq
cmc
and
js
mov
push
fmulp
outs
inc
cwde
and
outs
mov
outs
test
and
fmul
stos
enter
pop
and
pop
cmp
mov
cmc
and
jge
out
mov
ins
int3
cmp
enter
dec
add
in
cli
mov
inc
pop
cmps
in
ins
cwde
mov
imul
mov
outs
retf
jecxz
add
inc
inc
cmps
sub
add
loop
pop
and
xlat
test
add
add
jecxz
in
out
cmps
(bad)
mov
sbb
dec
push
adc
movs
add
imul
mov
sub
sub
imul
add
int
or
adc
sbb
lds
cli
sub
add
add
mov
xchg
push
mov
cmps
adc
loopne
dec
or
pop
xor
retw
xor
pop
int3
outs
pusha
dec
xor
push
popf
shl
inc
fsubr
out
arpl
pop
cmp
sti
lds
or
arpl
data16
xor
push
std
jl
sbb
sub
adc
adc
aam
pop
leave
cs
mov
jne
fsubr
pop
pop
stos
xor
sub
xchg
adc
xor
mov
test
add
(bad)
xlat
(bad)
stos
arpl
sub
in
pop
mov
sti
jnp
jnp
cld
inc
popa
push
mov
add
cdq
cmp
movs
xchg
xchg
popf
stc
lss
dec
popa
xchg
leave
int3
test
push
adc
les
cmp
pop
add
and
imul
popf
and
mov
push
mov
jnp
dec
rcl
movs
mov
lea
xchg
xchg
jbe
mov
mov
cmp
jp
test
or
mov
fs
mov
fwait
loope
sbb
inc
iret
xor
arpl
repz
add
nop
cmps
fwait
hlt
aas
adc
xor
add
push
popf
lock
add
mov
xchg
test
or
scas
push
push
(bad)
cmp
dec
inc
jmp
pop
cmc
mov
in
inc
sbb
push
sbb
inc
fucomp
dec
cwde
pushf
mov
retf
movs
ins
inc
dec
add
stos
sub
mov
jno
addr16
scas
rcr
add
stos
test
outs
enter
ins
(bad)
test
mov
pushf
aas
push
mov
dec
mov
xor
mov
ds
getsec
fsubr
rol
imul
in
jmp
or
add
gs
jecxz
lea
neg
ret
retf
xchg
pop
ins
test
mov
imul
gs
jge
mov
int3
std
stos
add
dec
jge
xchg
inc
sbb
push
push
xchg
xor
test
addr16
push
push
sbb
mov
jge
aad
js
sbb
xchg
push
mov
xor
mov
jo
sub
mov
fs
lods
inc
dec
mov
data16
and
into
jecxz
and
cmp
mov
mov
not
mov
and
adc
lods
jecxz
loopne
icebp
shl
imul
jg
xchg
cli
test
and
das
push
xor
adc
sub
cmp
retf
mov
sahf
out
xchg
xor
imul
ss
and
fmul
or
jmp
pop
mov
mov
mov
rcl
das
hlt
push
pop
movs
lea
pop
(bad)
retf
cmps
js
sbb
in
dec
fnstcw
in
xchg
fnstcw
outs
sub
mov
dec
loop
sbb
mov
fs
dec
gs
sub
ret
mov
sub
lea
bound
scas
(bad)
cmp
add
cwde
sar
js
sbb
sbb
fisub
or
fild
jp
out
mov
push
sahf
out
cmp
adc
test
push
inc
mov
imul
xor
push
out
cmps
sbb
repz
push
xor
inc
rol
mov
popf
les
cdq
jp
or
sahf
js
push
mov
cmp
das
inc
inc
jmp
sbb
imul
or
sub
in
inc
ret
inc
xor
fcmovne
out
pusha
adc
pop
les
call
lds
rol
add
jb
xchg
jmp
pop
pop
or
sub
lahf
sub
fimul
mov
mov
sub
fidivr
ret
fs
jnp
ret
pop
adc
push
xchg
dec
iret
js
in
shl
and
or
dec
outs
and
nop
sub
jae
push
jge
and
jno
xor
pop
aam
sbb
adc
cmp
(bad)
fcomp
mov
add
xchg
jne
int
jg
or
push
jae
lds
leave
cmps
xchg
add
sahf
sub
jo
out
push
rcr
mov
cmp
(bad)
mov
fwait
xchg
add
(bad)
jmp
mov
cdq
(bad)
nop
sbb
sub
aad
js
stos
aaa
inc
push
jmp
(bad)
xchg
imul
int
es
cdq
sbb
sub
repz
pusha
(bad)
xchg
ds
jg
jbe
scas
xchg
repz
or
mov
cmp
jl
aas
scas
stc
out
xchg
xor
xchg
or
jno
movs
dec
push
test
jns
pop
jg
push
dec
or
xor
inc
mov
or
sbb
mov
fdivr
stos
pop
dec
mov
rcr
and
adc
loope
int
imul
aaa
push
popf
inc
or
(bad)
cmp
xor
xchg
dec
add
push
in
cmps
adc
and
mov
cmps
or
push
jmp
dec
xchg
and
clc
(bad)
jmp
stc
pusha
cmp
jg
icebp
into
xchg
sbb
mov
push
mov
cmc
fwait
repz
repz
retf
adc
mov
std
int3
std
or
fist
jo
outs
icebp
or
stos
je
jnp
(bad)
xchg
add
add
cmp
ror
push
ss
dec
cdq
hlt
aas
add
stos
cmps
dec
sub
clc
mov
sbb
xchg
mov
mov
push
push
jle
pop
cmp
iret
inc
adc
xchg
add
dec
iret
inc
xor
rcr
jg
dec
mov
es
popa
xor
sub
das
fistp
mov
das
sub
cmp
dec
into
and
jbe
ja
add
outs
jecxz
aad
inc
pop
std
mov
ins
dec
sbb
mov
push
dec
movs
cmp
mov
cld
bswap
leave
inc
dec
cmp
(bad)
cld
test
dec
stos
sub
pop
sbb
mov
sahf
sbb
sub
cdq
es
add
mov
jecxz
lods
int
movs
repz
mov
add
xchg
fmulp
or
idiv
cmps
pop
cwde
or
jp
or
sbb
test
mov
inc
push
inc
push
stos
cli
push
loop
pop
into
outs
test
mov
xchg
fwait
mov
int
jecxz
test
shl
nop
cmp
add
push
fimul
push
stos
xchg
jmp
out
dec
xor
stos
loopne
arpl
push
idiv
je
ror
push
pop
push
and
or
xchg
mov
ret
and
ss
inc
xchg
inc
mov
aam
mov
cmp
or
mov
mov
scas
lock
loop
pop
call
movs
push
fisubr
pop
add
jp
loopne
(bad)
mov
jo
or
rcl
pop
popf
push
xor
out
in
test
push
call
js
xchg
jb
enter
cmp
adc
push
inc
popa
sbb
cmc
jmp
cld
pop
and
inc
push
add
mov
dec
(bad)
aam
fcom
xchg
push
push
jle
in
dec
fldenv
adc
push
out
sbb
dec
jae
mov
test
cmp
in
pop
jmp
popa
cmp
inc
push
in
adc
out
xor
aaa
fisub
stc
push
push
leave
mov
stc
es
push
arpl
xor
sub
ret
test
xchg
es
in
push
push
or
pop
test
jecxz
lods
js
push
adc
jecxz
pop
stc
fxch
fs
and
xchg
mov
sbb
ffreep
dec
jmp
xchg
test
mov
add
dec
push
dec
pop
dec
xor
sahf
push
push
or
addr16
add
mov
push
inc
lahf
int
rol
popf
aad
push
dec
sub
popf
aaa
sub
ds
imul
dec
xchg
repnz
(bad)
rcl
dec
cmps
or
mov
mov
test
pop
(bad)
jnp
mov
sbb
mov
fnsave
dec
fwait
test
push
fucomip
mov
mov
test
xchg
or
adc
ret
push
lds
jg
test
imul
mov
ja
movs
cmp
add
and
and
push
push
xchg
jmp
mov
in
jmp
aad
test
pop
jge
push
pop
mov
pop
cli
out
in
jns
or
pop
mov
iret
lahf
jno
mov
pusha
in
sbb
push
pusha
jp
mov
push
mov
jecxz
(bad)
repnz
jl
push
addsd
push
(bad)
adc
std
sbb
dec
push
aam
cmp
push
in
xor
jbe
sbb
mov
cmp
pusha
xor
pop
sti
loop
cmp
sub
mov
shr
push
mov
hlt
xchg
lahf
adc
or
fstp
inc
jmp
push
rcr
or
sahf
mov
lods
jg
xor
add
add
outs
jns
push
mov
in
sub
loope
pop
jge
clc
pop
and
ds
xor
or
mov
into
and
call
in
or
pop
push
jge
ja
fidiv
into
sbb
test
imul
fsubr
add
add
pop
push
or
ds
pop
sub
sti
push
or
pop
setns
xlat
fs
sub
out
hlt
ret
jl
in
sub
xchg
xor
jmp
fimul
cmp
xor
cmps
sahf
push
(bad)
xlat
test
test
xor
dec
aam
add
adc
push
outs
aaa
(bad)
in
ret
xor
xchg
arpl
mov
ds
mov
outs
and
mov
add
xor
mov
shl
push
cmp
adc
push
jno
call
enter
mov
fldenv
cmp
out
in
mov
mov
in
or
test
jp
jb
cmp
push
mov
stos
fisub
int
cmps
jmp
pop
jmp
mov
das
cs
in
mov
and
(bad)
fs
fidiv
mov
sbb
or
dec
or
cli
mov
shl
imul
mov
inc
sub
add
div
sub
aaa
xchg
popf
hlt
push
imul
or
mov
data16
hlt
out
je
or
add
mov
sbb
xor
cwde
es
and
stos
sbb
xor
push
mov
lea
jb
or
and
inc
cmc
sbb
push
add
and
imul
jge
mov
mov
lods
popa
xor
xor
leave
inc
test
out
fisttp
dec
adc
xor
ss
adc
lea
cmp
xchg
icebp
out
loopne
data16
clc
adc
shl
add
fs
xor
rol
inc
daa
sbb
ss
shl
hlt
mov
or
(bad)
test
xchg
sbb
scas
or
or
or
or
jno
xor
mov
cmp
and
fist
pop
jne
scas
push
dec
inc
and
xlat
in
adc
je
out
lock
rcl
mov
pop
pop
xor
es
mov
icebp
or
mov
mov
aas
ins
cld
out
mov
cmc
retf
fisub
popa
push
cli
enter
sbb
dec
sub
aaa
mov
out
push
cmp
fwait
pop
add
mov
mov
pop
adc
call
cmp
inc
xor
outs
aaa
jbe
retf
jae
shr
daa
mov
add
dec
add
js
repz
test
adc
aaa
fsub
cwde
cmp
mov
cmp
daa
retf
addr16
test
xchg
and
daa
daa
adc
xchg
cmp
mov
mov
jle
movs
std
int
cmp
sub
push
fwait
xchg
stc
push
nop
and
icebp
fwait
jae
in
and
jg
movs
adc
int3
sbb
xor
pop
xor
mov
enter
aam
lahf
and
jecxz
inc
mov
out
adc
jecxz
in
dec
adc
fstp
aaa
(bad)
and
or
mov
lods
adc
adc
lds
or
mov
fcmovb
gs
and
(bad)
mov
inc
add
inc
push
mov
data16
xor
push
mov
pop
or
test
pusha
data16
aaa
jno
add
pop
jmp
call
in
mov
inc
add
iret
push
mov
push
std
pop
jbe
loopne
fist
adc
adc
aaa
jmp
test
mov
push
fistp
cmp
sub
movs
add
popf
adc
sbb
pushf
pop
or
loopne
shl
adc
aam
into
push
lods
call
mov
in
sub
test
jb
js
dec
mov
mov
lock
xchg
ret
sahf
push
pop
stos
adc
arpl
mov
fst
pushf
dec
and
ins
cmp
out
test
fsubr
jecxz
jno
stc
fisub
or
je
sbb
std
push
or
rcr
not
cmps
xor
sbb
scas
mov
and
repnz
imul
enter
mov
rcr
imul
mov
jmp
sub
or
daa
stos
mov
into
(bad)
enter
cmps
fld
add
outs
out
jmp
xchg
popf
in
inc
mov
adc
fwait
xor
(bad)
inc
push
push
sub
push
lock
adc
dec
gs
and
jle
mov
js
pop
retf
xchg
fs
sub
loope
gs
inc
imul
dec
sbb
daa
pop
daa
xor
mov
ret
sahf
add
jg
cmps
and
xor
shl
mov
loopne
cdq
in
enter
ss
mov
inc
dec
adc
(bad)
dec
pop
imul
xchg
addr16
cmc
pushf
mov
mov
out
mov
lods
add
mov
pop
push
push
jle
mov
pushf
xchg
in
push
cmp
dec
adc
(bad)
loopne
ret
adc
loopne
jle
jb
cmp
aas
sub
mov
or
jne
dec
mov
outs
dec
inc
pop
xor
sti
cdq
cmps
xor
mov
cmps
(bad)
loop
cmp
jge
mov
ins
jbe
fsub
mov
mov
xor
xchg
arpl
push
jmp
add
mov
jle
int
add
lahf
in
cdq
jmp
xchg
ss
das
xor
in
push
jle
addr16
out
sub
sub
dec
mov
sub
pop
ret
sbb
cli
pop
out
cmp
cwde
mov
int3
dec
cmp
loopne
lods
pop
(bad)
sbb
mov
cdq
or
xlat
stos
(bad)
pushf
mov
movs
push
dec
or
mov
add
mov
pop
mov
pop
mov
pop
inc
into
xlat
push
popa
push
in
es
vmwrite
cmps
adc
aad
mov
outs
dec
jmp
mov
mov
out
loopne
jne
mov
xchg
or
lods
test
and
arpl
push
xchg
inc
aaa
sbb
(bad)
xor
retf
sbb
xchg
pusha
inc
xor
sahf
mov
sub
(bad)
cwde
into
stc
retf
cmp
pop
cmps
je
mov
cmp
mov
icebp
jge
inc
nop
dec
ror
popa
cld
arpl
mov
das
arpl
push
in
lods
sbb
pop
mov
scas
leave
xchg
stos
pop
push
inc
cli
jae
lds
jo
mov
call
push
cmp
pop
pop
sub
xchg
sub
xchg
shr
pop
sub
fld
add
dec
mov
out
and
mov
shl
sbb
shl
adc
lods
lock
cmp
dec
inc
mov
retf
hlt
gs
call
xor
das
xchg
xchg
xchg
js
(bad)
into
adc
add
pushf
std
(bad)
mov
or
rol
dec
shr
and
bound
mov
mov
es
jns
jo
xor
lds
jmp
dec
imul
xor
jge
and
in
lds
push
lods
pop
sub
aaa
xchg
nop
mov
push
lds
and
ins
es
inc
les
arpl
(bad)
sub
call
inc
sbb
sub
imul
pop
es
ins
fdiv
cli
rol
xchg
jl
loop
pusha
inc
mov
xor
clc
rcl
retf
jmp
cli
aam
jo
dec
push
or
mov
es
sub
cs
mov
mov
iret
aam
fidivr
rol
xchg
xchg
mov
pop
(bad)
jle
popf
(bad)
test
cmp
or
dec
enter
dec
pop
mov
push
shl
outs
jo
adc
movs
data16
mov
mov
and
and
call
inc
mov
addr16
lahf
pop
cmp
mov
aad
jbe
test
fmul
retf
mov
ret
cld
cdq
cdq
pop
imul
shl
mov
(bad)
dec
movs
and
jmp
xchg
dec
leave
dec
stc
ins
jnp
push
test
inc
sub
mov
pop
xchg
inc
push
or
and
sub
fst
and
push
mov
shl
enter
cmp
fisubr
sub
pop
cmp
lea
cdq
loop
leave
arpl
mov
ficomp
mov
sbb
xor
arpl
rol
out
sub
sti
inc
call
or
add
sub
dec
add
popf
push
jo
cmps
xchg
inc
nop
ret
lock
pop
jbe
add
pop
sub
jecxz
jae
ficom
add
cdq
sbb
into
add
repz
jmp
test
or
pop
add
stos
and
cmps
je
jb
popf
and
xor
jg
ret
add
fld
cmp
es
enter
jg
mov
and
and
call
ret
mov
lock
outs
sub
enter
xchg
add
rcr
in
sub
cld
sbb
cmp
push
cwde
enter
inc
repz
jg
and
cmp
stc
adc
(bad)
adc
cld
mov
push
mov
push
sub
pushf
lock
push
lock
test
xchg
into
cmps
cld
sub
cli
(bad)
pusha
sbb
mov
inc
push
and
adc
or
or
sbb
stc
adc
outs
mov
mov
fs
jbe
test
push
leave
mov
mov
mov
inc
pop
sbb
repz
ss
iret
enter
mov
fild
inc
mov
mov
push
arpl
push
push
add
ins
cli
jb
mov
out
push
mov
sbb
mov
popf
arpl
pop
pop
and
push
sbb
lock
jmp
xor
enter
outs
lock
lods
xchg
not
addr16
mov
and
out
push
out
inc
adc
cmp
gs
repnz
in
out
enter
mov
xchg
mov
add
lds
add
movs
sti
cmp
dec
add
adc
popf
push
ss
adc
cmps
cdq
xor
pop
xlat
daa
inc
shl
ins
inc
mov
fiadd
adc
inc
push
sbb
out
pop
jp
xchg
jmp
jb
dec
dec
rcl
into
mov
push
test
mov
dec
out
dec
addr16
adc
rol
xlat
jnp
das
xchg
jge
lods
in
mov
inc
dec
nop
xlat
sub
(bad)
ss
add
xor
inc
inc
mov
or
sub
(bad)
jae
cmc
aad
test
xchg
jmp
and
xchg
jnp
inc
nop
scas
xor
cs
les
mov
cmp
jne
push
adc
mov
mov
shr
or
cmp
add
ds
inc
pop
sub
mov
jno
jle
jge
movs
cli
or
add
pop
addr16
ja
push
cmp
cmps
mov
jbe
xchg
pusha
fnstsw
data16
aam
sahf
ficom
push
out
ds
dec
ins
std
les
push
sbb
fs
adc
adc
icebp
mov
push
gs
and
cmps
mov
in
add
pop
in
jns
xor
stos
bound
loop
pop
pop
or
sub
inc
mov
iret
sar
ins
xor
inc
cmc
scas
in
dec
lahf
xor
sub
js
test
mov
cmp
fcomi
test
lock
jb
push
mov
sbb
arpl
sub
fnclex
lods
sar
loopne
test
xor
xor
or
jecxz
jnp
and
dec
xchg
cmp
dec
ret
mov
lods
or
adc
xchg
xor
push
cmp
ror
cmc
or
xchg
and
popf
dec
push
outs
mov
fs
les
sub
scas
push
inc
push
jns
scas
adc
pop
push
dec
test
add
pop
jg
out
or
pushf
mov
out
or
nop
stos
jae
mov
neg
jmp
inc
mov
lds
push
mov
pop
pushf
stos
jbe
test
push
xor
popa
aas
and
aaa
js
fcomi
inc
jae
icebp
(bad)
es
cmp
fist
sbb
(bad)
or
aam
stc
cmp
(bad)
repz
cmp
imul
(bad)
sbb
imul
js
mov
test
popf
and
stos
add
or
push
sti
addr16
xchg
sub
jmp
cli
add
inc
nop
movs
fisubr
inc
fld
mov
fisubr
mov
and
ins
mov
xchg
jae
stos
xor
cmp
mov
cmp
test
test
movups
aam
xchg
lods
push
(bad)
in
sub
stos
data16
sbb
sub
mov
adc
cs
out
cwde
sbb
cwde
ss
xor
jp
movs
dec
xlat
aad
mov
leave
mov
dec
lods
mov
push
lahf
(bad)
call
push
sbb
add
loopne
xchg
xchg
push
inc
add
mov
int
pop
cmp
inc
aam
test
aam
or
ds
jns
cmp
jmp
movs
mov
mov
pop
popf
sbb
xor
daa
inc
and
xor
loope
rcr
mov
sub
mov
mov
out
loope
shl
pop
dec
shr
xchg
sbb
clc
lods
and
or
test
iret
pop
(bad)
or
jle
mov
iret
in
dec
jbe
stos
jne
cmp
mov
push
fs
test
rcr
sbb
pop
fild
mov
add
adc
xor
popa
or
cmp
sti
pop
loop
or
je
stos
js
push
pop
sub
fadd
pop
sub
not
aad
or
add
or
sbb
push
rol
xor
and
dec
(bad)
call
push
pop
jmp
cmp
imul
test
ins
stos
out
jne
xchg
jmp
(bad)
push
fld
jg
test
mov
mov
enter
adc
mov
adc
shr
mov
sbb
mov
movs
cmp
xor
fucompp
imul
movs
inc
outs
pop
stc
push
add
lock
fprem1
push
icebp
inc
jnp
cmps
out
sbb
adc
scas
dec
mov
add
arpl
xlat
dec
mov
dec
dec
in
xchg
scas
lds
in
inc
cs
mov
sub
jno
es
in
jbe
xor
sbb
or
jge
mov
jb
mov
lods
cmps
inc
pop
jge
out
dec
pop
addr16
aas
or
aad
mov
or
and
mov
ins
stos
sub
mov
imul
jl
pop
test
fs
sbb
data16
and
pop
adc
(bad)
int
lods
clc
sub
sub
pop
int3
jecxz
cmc
cwde
(bad)
in
jmp
(bad)
push
mov
mov
sbb
(bad)
xor
pusha
jo
popf
xchg
sub
sub
pop
cmp
push
add
inc
inc
dec
inc
inc
mov
lds
cmp
stos
out
(bad)
cli
outs
xchg
sub
mov
pop
std
imul
loope
sbb
mov
mov
loope
cld
nop
clc
xchg
lea
mov
loope
inc
pop
pop
xor
mov
ret
daa
add
in
cmps
aas
inc
pop
push
movs
rol
dec
add
sbb
mov
xlat
(bad)
sar
and
lock
aam
jecxz
movs
fcomp
loope
ds
cmp
pushw
ja
ror
or
ins
ins
mov
xchg
inc
pop
loopne
and
test
add
iret
or
xor
xor
dec
icebp
adc
stos
pop
sub
cld
fs
mov
dec
inc
xor
jno
add
pop
push
adc
inc
shr
ins
xor
mov
mov
fwait
mov
xor
pusha
cmp
xchg
sub
outs
pushf
sbb
jnp
scas
fstp
adc
test
shl
dec
push
add
mov
and
sub
mov
mov
inc
test
cdq
xor
inc
fcomp
pop
arpl
jo
inc
sbb
clc
sbb
xchg
pushf
in
pop
adc
in
xchg
pop
mov
iret
(bad)
stc
dec
jp
popf
mov
lods
loop
sub
ror
add
ror
cmp
dec
mov
inc
mov
clc
pop
cmc
mov
push
adc
addr16
lods
push
movs
aas
out
out
push
mov
ficom
addr16
fld
jno
inc
sar
jp
add
jo
inc
lock
push
push
sbb
cld
xchg
jle
jle
fbld
pop
repz
xor
adc
ins
test
pop
imul
fsubrp
popf
scas
rol
repz
push
mov
pop
jbe
mov
aaa
test
and
push
inc
aam
out
and
and
cmp
movs
dec
mov
jmp
add
xor
mov
pop
mov
into
push
and
js
push
add
pop
jne
shl
mov
cmp
inc
addr16
rcr
jge
int
aas
in
inc
retf
retf
lods
or
(bad)
adc
cmps
push
loop
retf
push
movs
test
fucomip
pcmpeqd
inc
jmp
jo
movs
call
mov
inc
fnstcw
mov
(bad)
sbb
cmp
or
aad
cmps
ja
mov
inc
fchs
cld
(bad)
ret
ror
pop
aam
push
inc
aam
xchg
mov
cdq
rcr
fucomp
push
popf
pop
(bad)
push
sbb
xor
xchg
ja
mov
lods
inc
add
mov
or
xor
call
sahf
inc
cmp
scas
jl
push
stos
mov
ret
add
pop
mov
jae
out
lds
jne
and
pop
es
cmp
hlt
inc
icebp
outs
dec
mov
or
dec
cmp
mov
and
lahf
xchg
out
enter
daa
fs
pop
dec
mov
cmps
cmp
mov
xor
movs
push
out
fdivr
dec
(bad)
jge
mov
out
loope
mov
cwde
out
(bad)
adc
test
out
jg
xor
jl
mov
pop
inc
sbb
neg
outs
jmp
sub
pop
and
jnp
push
fild
pop
sbb
sbb
ret
adc
jecxz
sub
cmp
loopne
retf
pusha
popa
daa
or
xchg
push
repnz
dec
sahf
adc
pusha
shl
ja
xchg
pop
push
mov
mov
mov
add
dec
lods
lahf
pop
jmp
adc
(bad)
mov
leave
das
scas
push
dec
daa
repnz
xor
sahf
or
jp
in
stos
xchg
popf
push
pop
scas
jns
gs
loopne
sub
popf
push
xchg
pop
in
in
enter
push
je
mov
pop
mov
nop
inc
xchg
xor
xchg
sub
xchg
imul
push
daa
dec
cmp
xchg
sub
xchg
shl
push
mov
jbe
pop
mov
mov
hlt
arpl
pop
cmp
retf
enter
lea
fisub
(bad)
mov
addr16
mov
movs
and
loopne
add
sbb
mov
and
stos
jbe
test
icebp
inc
pop
cmp
call
repnz
hlt
call
mov
lods
add
lods
scas
add
add
fld
sub
xchg
cmp
retf
push
and
shl
pop
push
xchg
add
mov
adc
sbb
push
mov
sar
adc
call
jg
inc
sub
or
lds
(bad)
(bad)
push
xchg
and
push
lods
mov
(bad)
fldpi
imul
cwde
cwde
jmp
and
jmp
mov
xchg
pop
push
dec
and
and
fucomi
xor
or
cld
add
enter
lahf
inc
scas
addr16
and
add
out
arpl
hlt
cwde
xor
adc
or
jb
popa
popf
xchg
call
imul
add
cmp
ret
call
ins
cmp
out
loop
push
push
sahf
xchg
mov
and
jmp
(bad)
add
mov
cmp
bound
leave
push
fbld
(bad)
rcl
ins
mov
(bad)
or
and
push
jecxz
cmps
jle
hlt
or
pop
ret
jns
or
and
aam
adc
and
sbb
fcomp
inc
mov
mov
fldl2e
scas
push
inc
stos
retf
in
(bad)
iret
mov
scas
pop
mov
and
ds
cmps
or
push
ror
jb
jl
arpl
sti
cmp
fiadd
shr
mov
nop
ret
dec
js
sub
(bad)
test
int
jg
mov
adc
xchg
aad
sbb
sub
xchg
push
fsubr
adc
das
(bad)
fld
(bad)
sbb
add
mov
cmc
or
pop
(bad)
inc
loopne
(bad)
push
sub
fidiv
and
xchg
stos
cli
and
pusha
or
push
push
jo
adc
mov
je
cmp
pop
mov
ins
xchg
sahf
jg
in
jl
mov
sbb
and
and
ds
adc
les
gs
bound
(bad)
jp
push
jns
les
mov
mov
xchg
xor
outs
pop
leave
icebp
push
pop
or
(bad)
loopne
xchg
(bad)
fwait
(bad)
imul
fisttp
loop
pop
iret
mov
test
or
mov
test
mov
sub
push
sub
(bad)
data16
icebp
inc
cmp
out
sub
push
mov
lock
inc
or
ss
mov
or
leave
cli
pop
mov
fdiv
dec
lods
push
mov
pop
inc
adc
out
adc
inc
pop
out
movs
mov
jmp
mov
adc
je
mov
arpl
push
sub
call
push
push
das
xlat
push
retf
in
fadd
add
add
sub
sub
aad
in
and
jge
xor
xor
xor
add
inc
jecxz
cdq
outs
push
xor
cwde
out
inc
mov
in
arpl
outs
loopne
int
pusha
xor
pop
adc
pop
xlat
pushf
mov
mov
mov
mov
jae
adc
fiadd
loope
pop
outs
imul
pop
add
dec
adc
aam
dec
cmps
aad
shl
fadd
fisubr
fidivr
cmps
dec
call
retf
rcl
ret
jo
mov
mul
adc
xchg
bound
jae
inc
pop
jo
dec
es
stos
and
and
xchg
xchg
test
outs
inc
js
lods
jnp
and
pop
jmp
cwde
scas
mov
(bad)
jbe
mov
bound
into
pop
mov
(bad)
pop
or
loope
mov
sub
jno
inc
jno
test
sbb
loop
mov
ins
shl
pop
arpl
ins
cmc
cdq
push
or
les
xor
repnz
push
loopne
pushf
lahf
mov
loop
inc
pop
and
push
stc
stos
dec
cmp
aam
icebp
retf
cli
addr16
ja
dec
adc
cmp
add
(bad)
(bad)
mov
test
ins
ror
push
mov
loope
sbb
inc
ja
data16
lds
xlat
mov
clc
nop
sub
sbb
jo
int
inc
and
sahf
sub
adc
or
xor
rol
pop
nop
and
adc
cmp
ins
pop
and
ds
mov
(bad)
into
lods
adc
and
(bad)
push
fs
hlt
mov
movs
iret
push
sub
test
fiadd
mov
out
rcr
jecxz
sub
fs
adc
inc
mov
or
rcl
(bad)
cmp
jg
sub
jo
or
rcr
mov
pop
outs
cdq
fcomp
test
pusha
mov
push
add
dec
mul
es
add
out
inc
enter
lahf
cdq
pop
or
mov
inc
mov
mov
aam
xor
jns
(bad)
jne
les
xchg
xor
xor
das
fst
in
and
or
cs
imul
pushf
cwde
cmp
cmps
fstp
out
shl
lods
loopne
mov
cmp
lock
stos
(bad)
mov
sbb
cdq
dec
cmp
and
leave
adc
pop
inc
movs
mov
dec
outs
mov
add
inc
pushw
pop
mov
jecxz
xor
mov
pusha
shl
stos
jmp
pop
jo
inc
les
fdivr
in
arpl
adc
sbb
jnp
inc
movs
sbb
aaa
aam
hlt
sbb
call
pop
mov
mov
mov
dec
jle
test
test
pop
fist
push
or
sbb
sar
push
mov
mov
or
(bad)
ins
mov
aam
jbe
pop
xchg
pop
and
xor
je
popf
xchg
jg
cmps
cmp
mov
cli
sti
mov
dec
sub
aad
xchg
fsub
xor
jg
lods
shl
stc
jo
gs
pushf
cwde
aaa
lahf
das
mov
sub
cmc
jge
rol
cmp
mov
rcl
sbb
mov
rcr
dec
lods
out
and
mov
or
sbb
pop
call
out
jno
ja
xchg
xchg
imul
ror
dec
jle
mov
retf
cmp
ja
ret
inc
xchg
cld
cs
mov
fwait
add
mov
clc
add
lock
add
mov
mov
push
mov
(bad)
dec
leave
push
aaa
outs
cs
sub
or
jae
push
push
xchg
js
or
mov
sub
movs
ret
mov
arpl
(bad)
loopne
je
mov
popf
mov
xchg
push
ins
jb
xor
shl
(bad)
in
xor
sar
(bad)
out
popa
inc
ja
shl
push
fs
sti
dec
scas
mov
push
mov
lea
es
ret
mov
xchg
push
adc
dec
in
xchg
xor
xchg
sbb
aaa
xor
fisubr
inc
retf
popa
imul
jbe
bnd
sub
sub
mov
cmp
ds
movs
rcl
lods
and
mov
adc
or
push
jae
pop
push
fstp
xchg
fs
push
imul
add
mov
nop
sub
int
mov
out
dec
pop
xchg
outs
jmp
xor
cs
gs
out
jmp
jno
cmp
fwait
or
and
fdiv
jp
jns
mov
std
nop
pop
jnp
adc
bnd
cdq
jmp
pop
daa
es
jmp
cli
mov
inc
ss
imul
push
mov
inc
and
mov
ins
pop
sahf
repz
sub
jmp
loope
loop
adc
mov
dec
push
dec
xchg
push
int
jmp
xchg
ret
xchg
je
stc
xor
pop
mov
test
push
dec
or
mov
sbb
push
lods
cmps
retf
add
cmp
mov
int3
inc
mov
in
adc
jno
pop
(bad)
or
(bad)
jmp
pop
sub
push
cli
jl
mov
rol
ins
sub
inc
stos
in
dec
cmp
add
mov
icebp
movs
jo
retf
loopne
mov
das
lahf
stc
leave
jl
pusha
add
pushf
cmp
scas
add
dec
call
push
(bad)
enter
mov
(bad)
repz
int
sti
add
push
retf
pusha
add
jmp
stc
sbb
or
mov
fwait
das
stos
mov
dec
daa
add
fucomi
xchg
jecxz
sub
lahf
mov
sbb
cwde
mov
das
cmp
pop
mov
ficom
inc
dec
cs
push
data16
out
add
inc
movs
and
sub
inc
jmp
popf
movs
test
mov
in
out
repz
aad
adc
xchg
enter
ret
data16
inc
cmp
mov
dec
inc
jnp
xor
sbb
sbb
pop
xchg
fcmove
inc
scas
xchg
inc
push
shr
push
loopne
in
ins
lods
das
test
cmps
pop
lods
push
xor
aad
hlt
pop
scas
leave
int3
test
mov
pop
pop
cmc
sbb
aad
pop
(bad)
out
scas
popa
rcl
addr16
jg
stc
and
(bad)
daa
in
fucomp
dec
mov
push
push
popf
dec
add
(bad)
ficomp
and
addr16
icebp
xchg
ficomp
sbb
sbb
neg
mov
or
loope
test
fiadd
call
jp
pop
push
pop
out
(bad)
adc
adc
dec
sar
das
inc
test
pop
and
arpl
and
das
adc
int3
in
ret
xchg
mov
out
sbb
jb
cmp
ins
or
add
popf
ja
jmp
xchg
push
or
ss
mov
aad
stos
mov
mov
cmp
sub
enter
dec
xchg
scas
mov
jg
dec
arpl
add
sar
push
ja
cmp
iret
das
xchg
pop
test
test
icebp
push
pop
fsubr
jmp
imul
in
outs
stos
dec
sub
jae
xor
aam
sbb
add
cwde
aas
out
mov
daa
pushf
cli
(bad)
pop
inc
cs
call
inc
lahf
sub
jmp
es
scas
call
and
addr16
call
stos
and
fwait
jg
sahf
hlt
xchg
mov
and
les
sub
or
add
add
stc
jecxz
jns
pop
xchg
btr
js
sub
iret
(bad)
jb
cmps
pop
mov
jnp
mov
mov
pop
test
cli
popa
les
sub
push
cld
test
data16
sub
nop
dec
lods
and
in
aam
xchg
(bad)
fucomp
jl
inc
push
scas
cmp
call
sub
hlt
js
xchg
fbld
cmp
outs
or
outs
daa
mov
mov
rol
pop
je
mov
ss
call
in
rcl
jo
inc
xchg
out
inc
int
push
mov
sbb
xor
xor
mov
shl
inc
cld
push
add
jge
lock
inc
dec
mov
js
test
push
jl
cdq
mov
pop
(bad)
repnz
pop
test
out
or
fisubr
and
xchg
dec
cmps
push
push
dec
xchg
inc
sub
or
loopne
dec
pop
fstp
sub
call
and
jle
jecxz
xchg
pop
test
es
(bad)
out
fiadd
leave
ins
cmp
mov
jns
mov
mov
sub
je
ins
sbb
inc
xor
mov
enter
(bad)
xor
pop
call
mov
mov
in
fmul
push
jecxz
inc
xchg
dec
jg
add
add
mov
inc
rol
iret
or
inc
push
stos
sbb
fwait
dec
push
adc
cmps
dec
aaa
sbb
sub
pop
sbb
push
jecxz
push
inc
mov
fnsave
pop
(bad)
inc
adc
leave
retf
mov
and
mov
and
retf
test
xchg
mov
add
std
xor
sbb
neg
leave
test
call
inc
movs
into
sub
fcmovnbe
sub
sub
mov
leave
fist
ins
popa
mov
js
jge
enter
push
sbb
enter
mov
lods
and
leave
mov
scas
and
jge
push
cmps
out
sub
xor
push
sar
loope
or
imul
imul
stc
sbb
shl
stos
dec
add
lods
ins
cmovno
fild
cmp
inc
icebp
(bad)
fstp
and
rep
sbb
and
xor
inc
push
call
fcom
xor
jo
in
repnz
in
jo
mov
push
cmp
mov
lods
adc
cmp
call
add
pop
pop
rol
ins
icebp
adc
movs
mov
enter
std
xor
jno
push
leave
nop
push
repz
sbb
popa
scas
gs
(bad)
arpl
xor
xchg
cmp
and
sbb
dec
sbb
sbb
mov
inc
hlt
jp
cmp
cwde
mov
add
sub
mov
fadd
retf
mov
out
fld
and
retf
stc
lods
mov
cmp
adc
xchg
std
xchg
xchg
cs
aaa
sub
inc
pop
jmp
add
adc
jno
adc
or
sbb
cmp
lahf
dec
aam
repnz
and
sbb
and
pop
push
cld
jmp
cmp
mov
mov
jns
(bad)
rcr
mov
addr16
mov
out
and
sub
sti
pop
cmp
jbe
loop
push
std
push
xchg
mov
push
retf
xor
aad
jl
sub
retf
jb
in
iret
stos
imul
in
stos
in
dec
inc
xchg
jo
cld
pop
or
cmp
je
movs
cmp
cmps
inc
repz
(bad)
not
popf
dec
addr16
movs
push
or
sub
std
mov
adc
dec
xor
mov
sub
je
push
cmp
jae
mov
xchg
mov
xchg
lock
fsubr
xchg
pop
scas
mov
mov
ficomp
add
jecxz
mov
imul
ss
popf
hlt
ins
push
scas
jp
cs
repnz
mov
jp
cmp
ds
jle
mov
mov
fst
or
cmc
daa
adc
cvtps2pi
mov
fimul
into
adc
or
dec
inc
popf
das
dec
fsubr
mov
mov
xor
sbb
inc
enter
pop
mov
mov
pushf
dec
cmp
mov
xlat
inc
ss
mov
sub
push
adc
mov
xchg
xor
cmp
stos
sub
lahf
fadd
sbb
and
inc
punpcklbw
fdivr
push
mov
xor
adc
(bad)
and
out
fwait
sub
pop
repnz
test
outs
dec
push
push
pop
(bad)
sbb
adc
mov
cmp
xor
sbb
lods
push
mov
faddp
jmp
dec
inc
push
imul
mov
adc
je
or
out
aas
movs
fdiv
jns
leave
fcom
(bad)
fldenv
jns
push
mov
xchg
inc
repnz
fistp
fist
loopne
enter
mov
or
rol
lods
sub
and
add
dec
cmp
not
adc
jp
push
sub
mov
inc
push
sahf
or
test
xlat
dec
and
or
jmp
inc
pop
jge
fstp
dec
xor
pusha
push
jge
ds
addr16
pop
jae
push
mov
in
dec
cwde
mov
inc
out
cmps
and
and
test
push
std
ds
(bad)
into
sahf
les
jnp
xor
aad
(bad)
in
jo
push
sbb
into
(bad)
pop
arpl
leave
sbb
xchg
pop
pushf
call
nop
push
cmp
ret
loopne
push
pop
ds
hlt
pushf
mov
xchg
mov
sub
inc
(bad)
(bad)
repnz
and
sub
mov
or
dec
mov
data16
call
and
inc
fdivr
sub
in
shr
enter
push
mov
and
icebp
or
pushf
mov
mov
repz
jo
push
and
or
or
and
test
nop
test
ret
dec
cmp
aas
lahf
jne
pop
outs
push
jo
cmp
cli
test
cdq
or
mov
mov
pusha
hlt
xor
ds
loop
cmp
push
ror
das
enter
int
clc
jp
fsub
adc
lods
lock
in
sbb
push
push
sbb
imul
xchg
pop
clc
pop
popf
lods
por
mov
nop
cdq
ins
push
hlt
stos
outs
jmp
popa
loopne
dec
lods
dec
mov
imul
mov
or
adc
dec
loop
cs
jg
mov
inc
push
sub
call
ss
retf
sar
fistp
dec
mov
pop
aam
scas
xchg
or
jl
imul
mov
lods
sbb
cdq
pop
jno
push
mov
test
xor
repnz
(bad)
int3
scas
cmpxchg
jo
je
and
cli
inc
pop
dec
mov
mov
in
push
aaa
sbb
out
in
pop
and
mov
cmps
addr16
xchg
and
in
xor
out
or
rol
xchg
(bad)
sbb
inc
js
cmp
rcr
inc
xchg
xchg
push
xchg
sub
aad
xor
xor
dec
lods
mov
dec
cli
fistp
adc
pop
imul
(bad)
stos
mov
bound
mov
pusha
push
lea
pop
mov
nop
xchg
cmp
cmc
jnp
sub
or
iret
sbb
or
loop
cmp
lea
adc
leave
ins
push
(bad)
mov
push
and
xchg
inc
cwde
shld
add
call
xor
xor
and
mov
ret
imul
ja
loop
inc
das
mov
jmp
fadd
inc
cmp
arpl
mov
fistp
mul
je
jmp
in
dec
mov
mov
mov
mov
iret
int3
xchg
push
call
lods
push
mov
mov
jecxz
popf
cli
lahf
icebp
fisubr
add
jl
in
cmp
out
push
data16
or
cmp
mov
outs
and
and
sub
div
sbb
xchg
adc
(bad)
inc
aas
movs
jns
inc
cmps
dec
retf
mov
cld
mov
push
aad
and
add
lds
mov
xchg
dec
push
pusha
out
pop
ins
int3
cwde
int
pop
inc
cmp
repz
out
ins
cmp
aad
sar
pusha
popa
mov
leave
dec
sbb
cmp
in
pushf
and
pop
mov
jl
ret
shl
add
enter
dec
jo
retf
xchg
or
dec
or
test
lods
loopne
add
xor
or
test
push
fbstp
jp
or
(bad)
xor
push
out
cmp
cli
outs
test
fsub
add
mov
lods
fimul
stc
call
arpl
pop
pop
ret
mov
adc
mov
sub
sbb
lods
add
pop
sub
ret
mov
mov
dec
inc
aaa
jl
jnp
lods
pop
aam
mov
out
mov
and
adc
stos
out
xor
jg
xchg
retf
outs
repz
retf
push
in
dec
stos
fwait
sbb
fisubr
cmp
lods
and
test
jne
movs
jmp
and
and
lods
and
cmp
sti
gs
sbb
sbb
fisttp
push
outs
mov
pop
sub
je
fadd
aaa
test
iret
or
sub
icebp
or
iret
mov
cdq
inc
add
ror
rcr
pusha
mov
pop
pop
lahf
jmp
pop
sbb
cmp
xor
hlt
xor
mov
inc
mov
popa
jg
int
or
add
or
xor
das
cli
cmp
add
xchg
(bad)
inc
mov
sbb
stos
xor
jl
icebp
push
xchg
fs
sub
in
fwait
mov
retf
mov
movs
iret
cld
(bad)
cwde
sbb
mov
jge
cmp
out
pop
mov
or
mov
dec
je
fsubrp
sbb
stc
sbb
call
xchg
mov
jl
mov
and
movs
jb
mov
mov
(bad)
pop
mov
shl
jno
cs
jecxz
loop
inc
into
test
add
ffree
push
adc
and
shr
lds
hlt
mov
add
sar
addr16
mul
mov
sbb
stc
mov
inc
popa
sbb
or
ret
fld
shr
xchg
sbb
jb
fidivr
lds
in
dec
or
jns
mov
push
rcl
jo
inc
mov
jecxz
ss
push
cwde
in
fisubr
rcr
scas
lea
sahf
fs
(bad)
jbe
out
xchg
data16
mov
mov
push
add
in
movs
mov
fwait
imul
stos
loope
cs
mov
mov
pop
jg
mov
xor
loop
clc
sbb
fs
pushf
xchg
dec
ins
test
xchg
fst
mov
loopne
jo
jno
jmp
test
iret
mov
lock
pop
mov
imul
enter
sbb
mov
dec
(bad)
fidiv
mov
or
fisub
pop
outs
into
cmp
(bad)
aas
jmp
or
or
inc
pop
shl
push
push
push
and
xor
dec
sub
sub
call
add
add
ins
std
jg
aaa
fisttp
retf
or
clc
bound
sbb
mov
mov
adc
lahf
mov
push
std
and
stos
(bad)
cmp
pop
pop
enter
clc
imul
and
dec
(bad)
retf
pop
and
movlps
jnp
sbb
gs
push
push
test
iret
add
pop
inc
push
mov
jecxz
(bad)
adc
out
fdivp
dec
sub
cmp
pop
mov
push
mov
std
jl
pop
or
add
xchg
pop
or
in
mov
hlt
aas
adc
push
int3
xchg
xchg
cs
imul
or
inc
rcl
ds
mov
mov
stos
xchg
(bad)
std
fnstcw
lahf
pop
test
das
shl
fimul
das
pop
or
pop
(bad)
push
(bad)
jb
xchg
(bad)
(bad)
popa
cmp
xor
icebp
push
test
pop
xor
jg
push
outs
mov
jmp
xchg
mov
fadd
sbb
(bad)
mov
jl
or
imul
xchg
packsswb
or
add
pushf
sahf
push
(bad)
dec
mov
add
popf
push
push
inc
cmps
jno
cwde
ds
and
xchg
in
mov
dec
inc
adc
aas
cmc
cmp
adc
cmp
shl
add
pop
fs
out
sbb
jp
fptan
iret
imul
mov
xlat
xchg
jl
or
and
pop
(bad)
popa
retf
ins
and
and
add
pop
js
jne
int3
icebp
nop
xchg
pop
pop
je
(bad)
mov
inc
jmp
push
or
xchg
xor
test
loopne
push
clc
je
jns
add
mov
push
cmps
or
fidivr
inc
inc
es
add
sub
lods
pop
cmp
mov
mov
sbb
fisub
mov
xchg
add
jle
int
sbb
jmp
cmp
and
sub
das
dec
shl
daa
mov
std
imul
fdivr
dec
sahf
fdiv
cmp
add
sbb
pop
inc
or
dec
xchg
mov
jmp
add
call
jle
mov
in
inc
inc
(bad)
sub
xlat
cmp
loopne
mov
jle
or
adc
inc
mov
imul
jne
test
rol
rcr
push
jmp
cld
pop
dec
test
inc
out
outs
xor
adc
popf
loopne
sti
jns
xor
ss
jmp
scas
cld
repnz
xchg
push
jl
(bad)
mov
gs
fwait
and
popa
mov
aam
add
push
test
mov
add
jb
lahf
cmc
dec
out
cdq
in
xor
xchg
cmp
mov
or
add
push
sahf
dec
adc
or
sti
lahf
xchg
push
ret
cwde
xor
neg
add
(bad)
and
dec
fmul
jo
cmps
xor
iret
rcl
cmp
or
xlat
sbb
dec
ja
sbb
stos
nop
pop
jg
add
mov
jl
cmp
jle
jno
ds
bound
xor
and
sub
lahf
data16
sbb
cmp
loop
pop
cld
xchg
lds
setge
sbb
mov
mov
push
out
or
in
ror
push
leave
retf
mov
in
sbb
push
imul
jae
add
xchg
test
or
in
out
and
dec
ret
push
sub
imul
xor
fisub
and
sahf
arpl
pandn
add
pusha
push
popf
fisttp
add
rcr
sub
pop
xchg
not
xor
rcr
mov
stos
adc
jmp
mov
adc
mov
out
add
in
cmp
mov
outs
ror
es
fadd
push
xchg
outs
mov
aas
dec
repnz
cs
pop
sub
test
or
call
sub
xchg
adc
mov
mov
inc
icebp
lock
gs
fs
out
push
xor
and
push
adc
lea
aas
fsub
iret
inc
mov
pushf
div
add
call
xchg
sub
inc
in
mov
shl
xor
mov
add
pop
es
(bad)
aad
inc
loop
xor
in
test
ins
sub
call
sbb
data16
test
into
jmp
mov
mov
in
xchg
push
fidivr
mov
out
xor
hlt
not
inc
xchg
in
loopne
inc
push
xchg
add
ficomp
mov
mov
or
adc
inc
stos
cmc
loopne
retf
adc
es
xor
pop
sti
adc
cmp
ds
xchg
(bad)
fdivr
fidiv
pop
push
or
jb
jo
iret
adc
mov
cld
jg
jle
pop
mov
push
loope
jno
mov
adc
jge
mov
mov
and
sub
and
es
cld
pusha
in
mov
pop
mov
xor
pop
lods
lock
mov
cmp
xchg
fbld
(bad)
retf
mov
cmps
xor
xchg
cmc
mov
xor
shl
and
mov
ja
mov
out
or
movs
mov
push
out
stc
or
sub
adc
inc
xchg
sub
stos
mov
ds
xor
lock
aas
add
stos
add
shl
adc
cli
pop
dec
sub
xchg
ins
out
jle
xor
fcos
loope
daa
fst
ja
fs
inc
(bad)
sub
jmp
out
sbb
sub
or
xchg
lods
loop
pop
sti
push
adc
push
mov
repnz
das
repz
push
pusha
sbb
or
mov
xchg
and
dec
unpckhps
sbb
mov
icebp
sar
outs
sub
test
in
mov
in
inc
dec
xchg
fild
loope
and
adc
fbld
push
or
push
in
jp
push
xchg
and
pop
and
ja
(bad)
sub
mov
(bad)
jns
sahf
push
push
pushf
and
adc
pop
inc
gs
xor
pop
std
push
inc
sbb
fisub
and
aaa
jge
xchg
iret
pushf
xor
push
popf
shl
int3
ins
and
out
dec
vshufpd
dec
jnp
movs
dec
mov
xchg
xor
sbb
nop
mov
je
dec
aas
loopne
in
cs
cmp
adc
cmp
gs
movs
stos
add
sbb
push
push
jg
adc
sahf
fimul
xchg
arpl
call
push
cmp
test
cmp
hlt
les
rol
std
test
push
xor
addr16
or
imul
jmp
loope
xchg
enter
rcr
push
push
sbb
cli
mov
xchg
cmps
call
adc
and
pop
dec
push
dec
dec
pop
mov
cld
push
or
lock
add
mov
scas
test
cdq
xor
jmp
jno
mov
jns
add
pop
inc
sbb
and
xlat
rcr
test
outs
call
outs
call
and
rcl
dec
and
xor
aaa
pop
icebp
pusha
xor
add
fisttp
xor
daa
sub
inc
pusha
mov
mov
icebp
imul
iret
data16
fsubr
ret
(bad)
ins
in
movs
push
push
rcr
sub
loop
dec
mov
movs
and
outs
sub
mov
pop
jns
pop
or
fimul
cmp
repz
jmp
test
mov
or
out
stos
rol
sti
rcr
and
lds
sti
jecxz
sbb
sbb
outs
xchg
lods
dec
fs
mov
sbb
loopne
mov
ja
int
add
lahf
add
retf
fadd
idiv
pop
mov
test
rcr
jb
sahf
(bad)
fwait
push
scas
stos
cmps
movs
pop
add
jbe
sbb
repnz
daa
adc
sub
or
adc
ins
xor
push
sub
jmp
cwde
test
cmp
inc
(bad)
in
push
inc
outs
xchg
or
daa
dec
in
cmp
mov
(bad)
js
sbb
out
(bad)
xchg
jle
sbb
cmp
sahf
jno
leave
je
or
daa
adc
out
jbe
mov
aam
leave
mov
popa
mov
das
scas
cmp
mov
and
repz
sahf
mov
(bad)
sbb
stos
imul
sbb
inc
jns
fwait
push
and
div
out
cmp
mov
(bad)
dec
xor
call
fbld
or
mov
arpl
test
add
aam
into
lods
adc
stos
xlat
movs
and
dec
push
icebp
out
mov
sbb
(bad)
popa
inc
lahf
not
mov
fmul
test
(bad)
xor
mov
push
lock
and
or
je
and
cmp
test
psubusw
icebp
inc
les
addr16
stc
and
ins
inc
scas
lods
cdq
pop
call
cmc
lds
test
outs
in
xor
mov
sbb
icebp
add
push
sub
inc
and
jbe
cmp
lds
xchg
mov
paddd
add
fucomi
sub
add
cmc
dec
cmps
sti
mov
(bad)
mov
inc
outs
xchg
stos
inc
ja
data16
(bad)
add
pushf
aad
jl
shr
(bad)
call
mov
jb
mov
pop
add
bswap
mov
popa
div
nop
nop
inc
cs
mov
pop
push
jae
outs
into
data16
arpl
xchg
fisttp
jbe
lock
pop
outs
dec
and
sub
sub
stos
xor
cmp
adc
cwde
add
dec
mov
push
(bad)
sbb
pusha
pop
xchg
xchg
adc
add
cmp
repnz
sub
jp
pusha
dec
(bad)
fcmovnb
pop
jb
sbb
out
lods
mov
ds
mov
and
clc
push
mov
aaa
jb
(bad)
gs
mul
adc
mov
stos
mov
stos
adc
xor
push
pop
icebp
add
mov
mov
loop
inc
ins
lahf
shl
jno
mov
adc
retf
clc
adc
(bad)
mov
rcl
jno
out
mov
sub
jmp
cmp
stc
int
fiadd
fnstsw
pop
cmps
mov
jge
or
sbb
fs
sub
xchg
test
pushf
mov
fsub
(bad)
hlt
cs
sub
aam
sbb
(bad)
(bad)
mov
xor
jmp
jle
(bad)
clc
fcomp
inc
and
(bad)
stos
jmp
pop
push
(bad)
retf
pop
in
inc
push
ja
in
push
jle
clc
int3
jbe
ins
in
in
adc
sahf
adc
mov
pop
cld
in
fldenv
call
test
imul
add
call
xor
sti
fcom
cmps
ins
fcomp
les
mov
loope
(bad)
push
call
xchg
cmps
mov
xor
ja
aaa
push
sub
jns
inc
int3
neg
fsubr
adc
movs
push
lods
mov
popf
inc
sbb
add
ins
dec
pop
push
aas
ja
pushf
dec
int
cwde
js
xchg
cmps
int3
sbb
push
fcom
sahf
mov
inc
add
cmp
aam
xchg
mov
xlat
push
sti
call
pop
mov
jg
xchg
push
cmps
dec
ret
dec
test
cli
ror
xor
mov
inc
inc
xchg
xchg
pop
mov
sub
lock
mov
daa
dec
test
das
popa
mov
mov
imul
xlat
test
fidiv
or
push
ret
cmp
sbb
jecxz
movs
pop
xchg
and
stos
mov
(bad)
adc
retf
enter
call
imul
or
jbe
xor
ja
jg
aad
in
popa
fwait
aaa
inc
adc
mov
or
and
and
sbb
movs
pop
js
mov
test
mov
add
frstor
mov
retf
aas
mov
mov
stos
fdiv
dec
bound
adc
fstp
in
addr16
push
mov
and
call
retf
repnz
adc
mov
psadbw
jmp
int3
ret
jae
inc
stc
pop
push
pop
jmp
dec
pop
push
adc
repnz
bound
bound
dec
call
data16
add
add
and
repz
mov
and
(bad)
in
dec
popa
jle
mov
in
mov
(bad)
cmp
cmps
and
pop
mul
call
xor
or
scas
ret
sub
xchg
call
cmc
xchg
dec
mov
mov
arpl
out
iret
and
jnp
xor
pushw
push
rol
jnp
push
shr
push
inc
outs
push
out
sbb
inc
icebp
std
pop
inc
xchg
out
cmp
cmps
sbb
mov
and
test
mov
jb
push
or
jno
cmp
mov
jl
mov
cmp
mov
arpl
adc
sub
mov
sub
jmp
lds
pop
fstp
fcomip
mov
pop
and
push
loopne
mov
mov
cli
movs
mov
sbb
push
out
retf
cmc
shr
fbstp
xor
cmp
mov
adc
xchg
push
and
cdq
jle
enter
rcl
sti
add
push
add
loop
sbb
das
cmc
push
mov
add
lahf
div
(bad)
sti
jmp
enter
xchg
xor
jno
jg
int
and
mov
sub
(bad)
lahf
loopne
test
mov
xchg
pop
mov
movs
(bad)
xchg
inc
pop
mov
out
or
imul
mov
dec
in
push
push
clc
loopne
test
pop
mov
xor
mov
add
scas
push
sbb
ja
sub
test
inc
sub
stos
loop
ss
sbb
call
sub
sbb
sub
mov
push
std
jl
cmp
pop
dec
add
add
xor
dec
(bad)
in
out
sbb
pop
mov
enter
out
loopne
cmp
adc
ja
movs
adc
(bad)
jo
jmp
fisttp
inc
mov
es
push
std
xchg
or
cdq
inc
add
(bad)
std
dec
xor
xchg
lock
sub
aaa
cmp
or
mov
(bad)
(bad)
mov
mov
add
mov
push
jne
js
push
nop
imul
int
jmp
int3
in
pop
xor
mov
push
or
mov
(bad)
in
jl
cmc
clc
xor
push
cmps
(bad)
cwde
inc
(bad)
in
stos
(bad)
xchg
lock
xchg
cwde
dec
push
bound
not
lock
rcpps
dec
stos
xor
fstp
es
jmp
int
movs
mov
jl
nop
out
(bad)
pop
inc
or
push
pop
mov
sub
into
pusha
mov
or
cmp
js
loope
in
adc
(bad)
(bad)
mov
ins
xchg
jae
cdq
lods
std
adc
mov
xchg
inc
scas
sub
xchg
pop
sub
lods
adc
cmp
(bad)
cli
gs
jge
push
jbe
push
fcomp
mov
scas
test
sub
mov
sub
fwait
mov
imul
mov
out
dec
dec
in
aad
outs
outs
dec
test
adc
stc
movs
mul
cmp
lds
adc
fmul
bound
and
in
push
cmps
lds
je
(bad)
adc
iret
mov
ss
mov
dec
sbb
and
or
(bad)
cmps
xchg
cmp
je
lods
(bad)
adc
cmc
popa
dec
push
push
sub
(bad)
sub
push
ror
adc
add
push
push
fisub
pop
jmp
aaa
call
or
push
cwde
popa
into
sbb
sub
movs
add
inc
push
mov
shl
lea
dec
and
cmp
das
(bad)
sbb
add
sbb
or
ds
jbe
in
int3
cmp
inc
jp
fwait
push
dec
pop
not
sar
stos
mov
dec
test
cmc
bound
stc
stos
cli
enter
or
mov
dec
push
jnp
movs
cmc
jae
pop
call
ss
push
push
loop
out
cmp
aas
adc
xor
fnstenv
bound
mov
xchg
dec
popa
popa
sub
pop
(bad)
leave
pop
mov
or
add
addr16
shl
lods
sbb
shr
mov
xor
adc
xlat
jecxz
push
cs
pop
mov
fsub
ror
mov
sub
cmp
and
hlt
or
sahf
(bad)
pop
add
retf
mov
int3
lods
and
sahf
mov
les
xchg
mov
jg
mov
dec
repnz
or
mov
mov
push
sbb
pop
mov
fidiv
mov
xchg
sub
push
repnz
cli
mov
daa
and
pop
dec
pushf
das
rcr
xchg
mov
jge
in
mov
or
add
sbb
jbe
dec
in
lods
push
mov
neg
jo
jmp
sbb
push
mov
(bad)
mov
cmp
in
iret
popf
loop
fdivr
test
std
leave
das
(bad)
sar
int3
test
jb
sbb
pop
aas
movs
call
sub
aaa
shl
xchg
xchg
push
lock
jo
(bad)
sbb
les
mov
mov
mov
cwde
mov
xor
data16
jo
jle
pop
adc
sub
data16
cmps
inc
std
neg
jmp
adc
ds
mov
inc
lods
or
add
pop
push
test
mov
fwait
cmp
ins
push
add
jp
cs
mov
mov
icebp
cdq
loop
mov
xchg
xor
jns
call
mov
gs
leave
out
adc
jo
jo
sub
movs
repz
xor
test
into
fwait
repz
mov
cmps
or
outs
pushf
dec
mov
or
fisttp
jecxz
xchg
test
and
sbb
sub
fidivr
push
hlt
(bad)
aam
je
add
mov
bswap
cmp
lods
fwait
sub
je
enter
icebp
in
nop
jle
lods
pop
xlat
lods
pop
fnop
xchg
xor
push
inc
jbe
dec
and
jmp
sub
push
scas
mov
int
test
jbe
and
xchg
test
aad
cmp
movs
je
or
ds
cmp
aad
xchg
xchg
adc
(bad)
std
lods
sti
ins
int3
and
mov
repz
xchg
push
jmp
xchg
mov
popw
cs
jl
pop
xchg
cwde
mov
pop
mov
sub
(bad)
cmp
test
call
or
stos
mov
scas
ret
test
popf
xchg
test
not
xor
pusha
hlt
inc
daa
es
mov
fdiv
and
ins
shl
cdq
pop
jbe
shl
mov
popf
mov
dec
pop
lock
push
ds
cwde
mov
movs
jge
pop
(bad)
je
add
pop
fwait
add
inc
cwde
xor
cmps
repz
(bad)
mov
mov
or
mov
dec
xor
and
push
xlat
in
fisubr
(bad)
or
imul
mov
xchg
ins
ret
xchg
cmp
loop
dec
push
sub
call
or
push
mov
out
push
pop
push
dec
fisttp
les
ret
dec
ret
jp
repz
mov
mov
not
jo
js
popa
loop
loop
mov
stos
call
mov
push
mov
retf
add
loopne
mov
enter
inc
xchg
jl
push
xchg
pop
jmp
inc
stos
jle
jmp
jne
loopne
fadd
in
(bad)
cwde
mov
mov
test
mov
mov
rol
aam
mov
push
push
push
hlt
aaa
repnz
outs
mov
out
and
jnp
sti
imul
jle
push
in
adc
sbb
je
push
(bad)
push
push
cmps
push
outs
push
inc
cli
mov
xchg
mov
enter
fdiv
js
sub
popf
call
in
cmps
push
(bad)
mov
xor
std
jge
mov
add
fs
js
inc
xchg
mov
and
pop
jl
xchg
stc
call
sub
xchg
(bad)
test
jmp
jo
pop
movs
sti
test
fdivr
lock
retf
fidivr
xchg
inc
mov
add
repnz
mov
adc
cmp
aam
jmp
pop
(bad)
xlat
or
stc
and
xlat
pushf
push
fsub
and
imul
and
sahf
sub
shl
xor
ins
mov
test
adc
hlt
sbb
jne
int
shl
dec
cmps
pop
and
sahf
jg
xor
add
test
popa
pushf
add
jp
test
pop
add
lods
in
and
push
clc
data16
jmp
(bad)
aas
and
ret
lods
test
xchg
pop
imul
jb
call
ror
dec
(bad)
rcr
and
pop
sub
outs
fild
or
add
fldln2
pop
(bad)
jle
and
test
outs
or
cmp
popa
data16
xchg
adc
dec
and
popa
adc
jg
xor
sbb
inc
inc
inc
add
jecxz
inc
or
fwait
bound
sbb
mov
mov
ds
mov
je
pop
push
xlat
pop
gs
pop
or
cmp
mov
mov
or
sar
add
xchg
xchg
int3
shl
adc
inc
or
test
push
dec
pop
add
ja
sub
repz
ret
(bad)
int3
outs
sahf
leave
or
sbb
(bad)
adc
test
mov
dec
mov
in
mov
leave
test
and
and
out
mov
adc
repz
cmp
xor
add
add
push
mov
out
cmp
jmp
mov
fdiv
pop
cmp
int3
cmp
mov
mov
or
fsub
sub
sub
mov
dec
jno
(bad)
sbb
popa
jl
push
or
cld
rcr
xlat
mov
cmp
xor
inc
es
das
imul
test
push
adc
jecxz
test
push
jp
je
and
mov
cmc
xchg
inc
mov
push
xchg
das
xor
mov
and
xchg
pop
and
mov
mov
add
xchg
cld
or
sub
sahf
in
addr16
mov
repnz
and
bound
jp
jne
lds
sbb
les
mov
and
icebp
push
aam
dec
lahf
jl
xchg
call
inc
popf
bswap
popf
ins
and
cmp
imul
sahf
mov
push
ins
test
retf
xchg
jle
mov
xchg
and
aas
dec
mov
xlat
inc
pusha
and
jne
int
jnp
xchg
xchg
cmc
inc
mov
push
pop
mov
repz
jbe
fsubr
scas
outs
mov
and
loopne
jae
and
imul
xor
(bad)
not
std
dec
push
mov
cwde
outs
pop
fistp
mov
jns
pop
iret
fisubr
push
loop
mov
pop
dec
in
mov
cmp
repnz
or
and
lods
fstp
rol
in
push
es
and
mov
xor
or
xchg
mov
test
jbe
cmp
jmp
add
mov
lea
shr
mov
cmp
leave
stos
sub
pop
mov
cmp
cs
adc
aas
and
jnp
iret
xor
xor
cmp
mov
lea
leave
add
data16
imul
adc
movs
arpl
idiv
retf
dec
scas
je
shl
retf
cmp
and
xchg
cdq
fisttp
repz
bound
add
repnz
je
push
push
push
out
adc
jno
cli
sahf
adc
xchg
cld
ins
(bad)
pop
mov
push
xchg
pop
push
vpacksswb
fdivrp
push
imul
iret
out
mov
xchg
push
fcomp
popa
mov
mov
out
fnstcw
pop
not
(bad)
repnz
xchg
jb
mov
mov
lods
jns
(bad)
adc
mov
mov
loopne
inc
cmps
dec
and
add
retf
mov
call
xchg
ror
arpl
add
fisub
jb
hlt
out
xor
jp
add
add
repnz
add
sub
lods
mov
and
or
xor
dec
sti
add
mov
(bad)
jmp
arpl
push
cdq
push
es
pop
push
sub
sbb
inc
dec
mov
push
mov
std
jb
pop
jo
and
ss
jge
fisub
xchg
xor
mov
xchg
(bad)
jmp
popa
cs
dec
xor
sbb
push
or
jp
in
dec
sub
xlat
pop
cmps
jecxz
pop
mov
inc
fwait
(bad)
sahf
enter
loopne
daa
mov
add
inc
div
icebp
push
xor
fmul
pop
aam
jb
dec
cmp
mov
(bad)
cdq
int3
xlat
jmp
test
dec
fdivr
jae
repz
pop
gs
push
stc
push
aam
jg
(bad)
pop
addr16
or
jecxz
add
icebp
cmp
fstp
add
jns
(bad)
mov
dec
xchg
fimul
pop
sub
mov
sbb
cs
jmp
scas
inc
in
repnz
mov
pop
fcom
push
mov
je
popa
mov
fstp
push
stos
adc
out
push
and
repnz
retf
sahf
gs
(bad)
cmps
mov
retf
jp
pop
loopne
(bad)
jecxz
xchg
test
jecxz
aad
cmp
dec
imul
mov
jecxz
loopne
dec
inc
mov
faddp
xchg
adc
out
cdq
lea
pusha
retf
xchg
je
sar
sbb
mov
imul
iret
inc
rcl
and
(bad)
xlat
adc
lds
ret
mov
mov
popf
push
jns
push
cdq
int3
ss
or
js
mov
bound
xchg
dec
and
inc
xchg
clc
sub
cmp
and
xchg
add
adc
mov
scas
(bad)
jae
jo
xor
jl
push
stos
test
fwait
xchg
inc
push
cmp
sbb
jecxz
push
inc
sbb
sbb
push
and
out
cdq
lock
out
xor
pop
call
sub
shr
sub
popf
dec
mov
ja
fwait
es
(bad)
repz
pushf
psrlw
cmp
popa
mov
dec
cmp
jp
int3
pop
not
lock
cwde
push
inc
sbb
sbb
mov
div
out
pop
add
push
jl
add
push
fiadd
shr
jne
push
xchg
repz
push
sub
(bad)
ins
add
pop
iret
xchg
pusha
mov
mov
mov
cmp
ret
in
jne
test
mul
xor
mov
ins
mov
pusha
ficomp
cmp
fs
sub
cli
out
inc
add
jo
ret
(bad)
ins
and
faddp
pop
push
jne
enter
imul
add
cli
lahf
sbb
fld
add
jecxz
dec
adc
xchg
call
adc
pusha
lea
bound
mov
sbb
push
pop
add
arpl
iret
out
loope
jl
fdiv
(bad)
fld
sub
adc
repz
mov
fdivr
add
iret
das
icebp
add
xor
adc
inc
(bad)
cmp
inc
pop
pusha
and
sub
je
mov
pop
mov
or
imul
pop
scas
xchg
(bad)
repnz
add
ss
ja
dec
arpl
fsubp
jge
cld
mov
stc
inc
push
loopne
ss
repnz
ins
out
repnz
mov
jge
pushf
mov
imul
dec
pushf
shl
or
test
aaa
pop
out
dec
movs
and
fiadd
shr
cmp
cmp
mov
xchg
pop
or
repz
shr
mov
sub
out
mov
lods
lea
fiadd
int
test
push
std
data16
push
not
cmp
ins
sbb
or
push
test
popa
mov
adc
stos
jno
sub
sbb
ucomiss
ficomp
jae
les
add
pop
inc
xor
xchg
dec
xchg
les
stos
add
(bad)
adc
push
imul
scas
xchg
xlat
adc
push
mov
mov
das
jg
mov
inc
mov
push
mov
add
xchg
shr
xor
cs
adc
cmp
xor
push
mov
lods
and
push
jecxz
xchg
popa
adc
mov
in
sbb
in
pushf
xchg
mov
push
fwait
imul
mov
fisubr
pop
lahf
and
xchg
xchg
push
xor
and
mov
inc
retf
inc
leave
dec
and
and
retf
jnp
sbb
push
ffree
mov
ins
pop
cmps
add
hlt
stc
cwde
clc
dec
xchg
mov
pusha
sub
test
mov
sub
inc
in
cmp
add
daa
(bad)
mov
jle
dec
scas
call
in
pop
pop
and
es
out
or
xor
add
or
cmp
arpl
or
push
mov
lahf
mov
adc
or
xchg
(bad)
push
jnp
or
dec
lds
out
out
mov
fdiv
ins
jg
jecxz
adc
push
inc
cmp
fmulp
stos
int3
daa
push
retf
xchg
rol
jnp
jns
cmp
xchg
xchg
inc
fild
xchg
jno
add
shl
int3
ds
add
call
inc
enter
outs
aam
mov
test
or
cmps
add
mov
in
sbb
mov
inc
xor
or
sbb
aas
push
jecxz
nop
mov
movs
clc
pop
iret
aaa
jmp
ror
pop
imul
cld
call
dec
sbb
(bad)
pop
fisubr
ins
data16
nop
das
pop
call
imul
or
aas
call
cmp
and
and
jmp
jns
pop
sub
jmp
ins
dec
mov
test
inc
pusha
shl
cmp
jb
sub
jmp
int3
inc
cwde
and
add
fsubrp
aas
xchg
in
in
cmp
cmp
fbstp
retf
stc
sub
jmp
pop
push
or
mov
cmp
dec
xor
iret
push
dec
lock
jne
inc
cmc
xlat
jmp
hlt
loope
jne
jle
ja
and
sub
nop
fwait
aas
sahf
cmps
fnstcw
outs
jecxz
and
and
arpl
dec
test
mov
ret
bound
cmps
ret
es
sbb
mov
and
cmps
xchg
ror
pop
imul
mov
cmc
xchg
push
sub
inc
jne
fadd
jg
and
js
fs
rcr
add
lods
enter
inc
jae
mov
push
or
or
and
repnz
mov
push
(bad)
scas
test
jne
pop
push
push
fs
adc
imul
sub
dec
xchg
push
daa
add
loope
push
mov
push
pop
cmp
pusha
mov
lods
inc
adc
add
mov
and
cmp
mov
sub
repnz
push
jg
mov
mov
into
daa
scas
pushf
dec
jmp
jb
inc
test
outs
cmps
aad
mov
lods
jns
add
pop
fidivr
ins
sub
fistp
or
mov
adc
sbb
popf
jmp
xchg
pop
in
sbb
push
push
gs
sub
add
jp
push
inc
out
lock
push
xchg
inc
jo
lods
(bad)
outs
mov
out
pop
mov
mov
test
(bad)
or
push
mov
adc
call
arpl
(bad)
in
dec
ret
loop
xlat
inc
xchg
test
sbb
fld
mov
lods
popf
dec
cmp
fisubr
add
int
sti
loop
sub
xor
stos
dec
push
push
ror
dec
loope
pop
adc
mov
hlt
fdiv
mov
inc
dec
nop
call
in
pop
add
dec
ficom
push
push
(bad)
or
push
jae
mov
xchg
mov
aas
or
fdiv
sub
cmps
in
leave
jns
push
push
shl
gs
shufps
cmp
jne
dec
adc
test
jns
rol
popf
fcmovnu
call
ss
mov
lds
fmul
icebp
or
aam
jmp
or
xchg
cdq
push
cmp
sbb
push
out
cmp
mov
cmp
cwde
movs
push
dec
test
xchg
xor
ins
pop
lock
dec
int
push
push
xchg
xor
ja
loop
dec
repz
js
imul
push
outs
fiadd
sbb
mov
js
(bad)
(bad)
xchg
mov
cli
lods
sub
jbe
jg
mov
fs
or
fnstenv
cmp
pusha
into
repnz
jmp
sahf
xchg
ds
adc
mov
(bad)
out
dec
push
xchg
mov
pop
or
test
(bad)
cmps
and
push
adc
fld
ds
inc
sbb
in
mov
sbb
adc
push
mov
and
jo
mov
jmp
lock
test
jmp
js
retf
cmp
ja
lock
icebp
imul
and
jecxz
adc
dec
pop
loopne
adc
push
add
fisubr
shr
xlat
popa
ins
call
push
mov
mov
adc
jl
lahf
shl
inc
adc
not
jnp
mov
xchg
jnp
jp
add
ins
sub
xor
xchg
test
inc
or
(bad)
jno
xlat
test
mov
or
mov
repz
dec
mov
sub
cs
inc
in
sbb
xchg
mov
xor
stc
retf
cmp
rcl
mov
jae
fild
in
or
inc
sbb
in
cmp
cmp
leave
iret
outs
bound
ds
xchg
(bad)
mov
add
pop
outs
cld
fs
xor
xchg
into
mov
jb
jns
adc
push
repz
ins
jmp
pushf
fst
cmps
mov
mov
outs
add
aaa
jae
cmp
xchg
xchg
sub
std
fnsave
outs
stos
inc
or
(bad)
cmc
aaa
mov
int3
sub
cmps
fnsave
scas
xor
sbb
out
jo
outs
or
mov
in
das
add
pushf
ret
push
mov
push
mov
test
sbb
xor
xchg
dec
pop
sub
scas
pop
sub
movs
add
jmp
sti
xchg
add
call
or
xlat
in
jp
(bad)
mov
movs
push
test
fwait
jns
dec
test
dec
xchg
scas
inc
xor
mov
mov
fsub
ret
inc
mov
pop
dec
push
aas
cmc
clc
test
mov
fnsave
mov
sub
stos
das
jne
push
mov
icebp
fnsave
repnz
loop
fnsave
movs
popf
test
mov
and
push
pop
ret
push
ret
jae
jp
push
mov
je
pop
add
jb
adc
push
mov
pop
lahf
fbld
sbb
fidivr
shr
retf
int3
in
repz
push
dec
cmp
or
dec
enter
and
cmp
fist
cmp
in
add
mov
(bad)
cmp
push
jmp
leave
repz
in
push
fiadd
lock
ins
fs
in
pop
add
and
and
jae
fbld
mov
and
repz
mov
jecxz
outs
addr16
or
sub
dec
loopne
call
xchg
(bad)
popf
mov
add
jb
into
mov
add
xchg
shl
mov
xchg
outs
loopne
lods
fsub
inc
sub
mov
sbb
xchg
pop
aam
dec
adc
into
hlt
mov
mov
add
and
mov
sub
(bad)
or
outs
addr16
sti
sti
fsub
push
mov
(bad)
sbb
imul
ds
les
sbb
mov
fcomp
jle
out
ins
or
in
and
pop
fsub
xor
sbb
jecxz
jbe
adc
shl
inc
fsub
nop
loopne
repz
out
jmp
or
cdq
mov
xor
dec
scas
ins
imul
mov
neg
data16
pop
mov
aad
std
ja
out
(bad)
and
stos
call
xor
test
jb
add
call
fdiv
mov
jg
neg
add
int
pusha
push
adc
push
loope
or
jbe
push
pop
das
sub
inc
cmp
fist
adc
push
pop
push
pop
pusha
sub
mov
mov
jno
push
jge
sub
mov
fdivr
nop
stc
das
add
cld
pop
cld
xor
sub
in
popf
xchg
js
iret
push
out
mov
mov
inc
xor
sub
ins
jmp
lods
adc
repnz
pop
cmps
(bad)
jmp
push
imul
cs
xor
ins
fiadd
mov
add
jp
mov
fisub
jne
sub
xchg
lea
lea
mov
xchg
xchg
mov
adc
mov
push
push
dec
inc
lock
mov
retf
imul
sar
(bad)
xacquire
inc
jg
fdivrp
or
cmp
pop
xchg
jg
pop
ss
fs
pop
(bad)
push
sahf
xchg
xor
or
loopne
mov
sahf
adc
mov
pop
(bad)
movs
mov
sub
pushf
imul
or
aam
loopne
or
xor
cdq
in
out
stos
es
jge
out
mov
leave
and
inc
orps
sar
mov
mov
nop
xchg
hlt
sbb
pop
cmp
adc
shr
xor
fadd
adc
popf
lahf
jp
leave
cmc
cld
stos
repz
add
adc
in
dec
adc
inc
xchg
dec
repz
add
mov
and
int
mov
jae
sbb
sbb
jbe
inc
inc
mov
sbb
in
rcr
mov
inc
sub
cmp
jecxz
jmp
add
ins
aaa
fiadd
retf
jmp
pop
sar
or
add
push
mov
or
push
outs
mov
dec
jne
push
cmp
and
mov
sbb
pop
mov
lahf
das
cli
xchg
cld
push
outs
mov
icebp
je
fild
ss
in
lods
push
pop
inc
jo
out
adc
push
(bad)
mov
add
gs
in
xor
cmp
aam
cmc
sbb
cmc
xchg
std
aaa
aas
(bad)
push
adc
xor
pop
pop
cli
cli
(bad)
jbe
les
dec
stc
xor
enter
mov
shl
imul
adc
adc
mov
test
xchg
sub
inc
and
push
xchg
aad
xchg
mov
pop
push
xabort
in
(bad)
out
je
scas
fwait
push
call
mov
rol
mov
xchg
or
out
shr
mov
bound
or
fistp
mov
push
loopne
pushf
jo
push
mov
out
mov
fisttp
push
enter
or
sbb
fs
jb
add
(bad)
in
cdq
ret
out
and
mov
jne
inc
push
(bad)
std
add
dec
ret
pop
rcr
inc
add
aaa
test
dec
mov
jecxz
mov
popf
lods
push
loopne
cdq
and
hlt
push
mov
shl
(bad)
mov
jne
mov
xor
outs
test
mov
and
cmp
cdq
fucomi
scas
xchg
mov
sub
mov
and
jno
test
jae
push
hlt
xchg
jnp
dec
mov
xchg
test
pop
sub
int
adc
pop
int3
inc
shl
(bad)
push
xchg
dec
enter
jge
jns
js
mov
cmp
and
adc
push
imul
movntps
sbb
or
cmc
sub
cmp
cmp
or
or
test
(bad)
mov
inc
dec
cmp
jbe
pop
add
ret
sub
in
out
ret
outs
push
pop
sub
movs
adc
jne
scas
mov
leave
sahf
std
adc
jo
rcl
test
cmp
add
add
adc
scas
imul
frstpm(287
mov
inc
outs
push
clc
jae
add
cmps
loop
mov
xor
cli
inc
(bad)
hlt
in
push
jo
leave
dec
scas
sbb
adc
jle
cmp
leave
adc
into
xchg
call
popf
popa
and
ins
mov
call
in
in
xor
push
jge
aad
jnp
xor
mov
sti
mov
sahf
popf
dec
or
pop
jbe
mov
leave
mov
(bad)
scas
sar
xor
xchg
jbe
xor
adc
pop
dec
sbb
int
movs
mov
(bad)
jo
xor
shr
fdivr
clc
dec
ret
cmp
xor
out
movs
icebp
fwait
in
sub
push
adc
dec
nop
test
je
(bad)
cmp
adc
imul
jnp
stos
sbb
pop
xchg
push
add
ret
add
fadd
sub
mov
cmp
scas
or
ret
or
mov
adc
aam
and
in
mov
stos
mov
mov
outs
seta
adc
test
imul
xor
enter
xchg
or
movs
fdiv
ins
adc
js
pushf
sbb
out
add
cwde
lods
sbb
out
daa
arpl
mov
jge
ret
loope
div
or
lods
ret
jae
(bad)
sub
mov
sbb
add
sbb
sub
(bad)
mov
ins
jns
push
out
xchg
jne
xchg
sub
in
sub
dec
daa
mov
bound
lea
aad
mov
and
push
mov
in
jl
xor
aam
jbe
enter
push
fwait
sub
push
out
mov
or
scas
cmp
pop
sub
stc
xchg
nop
pop
mov
mov
xabort
cld
leave
cmp
mov
push
ins
mov
mov
sub
xchg
outs
push
lods
rol
push
(bad)
arpl
push
or
mov
lds
adc
or
popf
call
mov
lods
pop
lahf
rcl
pop
mov
dec
xor
sbb
push
jne
mov
cmp
aaa
push
(bad)
mov
cwde
pop
aam
dec
repz
fmul
out
fcomp
jmp
cmps
inc
ja
adc
cmp
in
in
(bad)
jbe
icebp
cmc
rcr
sbb
and
sbb
repnz
xchg
std
cmps
test
adc
bound
and
sbb
mov
dec
sar
ins
mov
test
pop
pusha
mov
pop
lds
xchg
xor
mov
loop
mov
icebp
jmp
call
pop
add
mov
pusha
pop
outs
jg
shl
push
test
sbb
add
cmp
inc
sbb
jmp
inc
xor
jnp
ss
mov
test
int
push
arpl
movs
mov
sar
adc
xchg
inc
or
popa
push
mov
cli
loop
rcl
aaa
xchg
shr
mov
ins
call
adc
gs
cmp
sbb
adc
jp
mov
ret
push
xchg
fidivr
call
fcomp
ins
dec
pushf
push
xor
sbb
idiv
rol
inc
jle
aam
mov
movs
jg
xchg
sub
xchg
test
cmp
xchg
sub
add
mov
jge
pop
xor
cli
fcomp
call
scas
scas
sahf
test
(bad)
out
adc
pop
dec
xor
out
and
int
lods
hlt
sbb
pop
ja
in
das
dec
cld
fdivr
nop
loope
push
cmc
mov
cmp
aas
ret
outs
cmp
in
cmp
stos
cld
sbb
jmp
push
hlt
push
std
add
sar
and
cmp
arpl
jge
jecxz
sahf
(bad)
jp
inc
xor
or
sbb
pop
dec
push
(bad)
dec
mov
mov
mov
mov
and
pop
mov
cmc
jg
fsub
mov
mov
rol
sbb
neg
sbb
daa
xchg
ret
lock
mov
ja
and
arpl
sbb
sub
mov
fbstp
xlat
push
mov
and
sbb
xor
retf
dec
movs
outs
out
inc
retf
pop
jo
test
ja
jp
jns
pop
je
aam
sbb
mov
xor
test
pushf
js
and
jb
jmp
loop
adc
and
sti
xchg
in
jg
fwait
mov
mov
sti
popa
adc
aaa
adc
mov
mov
jecxz
inc
jbe
sbb
push
cmp
leave
push
pop
sub
and
fs
mov
retf
push
xor
loopne
fidiv
bound
push
cmp
std
jae
in
gs
xchg
mov
cmp
in
retf
xchg
push
(bad)
or
daa
jecxz
pop
(bad)
jecxz
or
cdq
les
icebp
xchg
(bad)
pop
fwait
repz
and
stos
push
push
pop
push
scas
movs
push
in
add
fld
jmp
cmp
cmp
inc
dec
xor
lds
mov
gs
fldl2t
enter
sbb
and
jbe
pop
(bad)
popf
cmp
add
or
sub
pop
jno
or
dec
xor
cmc
and
mov
push
call
int
inc
das
push
and
adc
cmp
jl
jb
repz
mov
fwait
adc
std
dec
(bad)
and
dec
jbe
xchg
mov
(bad)
shl
fist
xchg
ss
and
jne
(bad)
fisub
fdivr
or
add
or
(bad)
test
stos
mov
aam
or
hlt
add
fldcw
test
fidivr
xlat
cmp
push
pop
cmp
cmp
daa
ret
pop
cmp
and
add
jbe
cmp
pop
cs
cs
add
aad
mov
sub
(bad)
out
adc
into
dec
mul
cmp
pushf
aam
xor
int
jg
push
pop
pop
mov
xchg
mov
adc
adc
jo
jno
outs
sub
jb
jg
mov
es
jne
mov
and
dec
shr
ficom
outs
addr16
sub
call
and
daa
jnp
test
arpl
xchg
sbb
call
outs
or
push
mov
push
ins
jecxz
inc
push
xchg
xlat
inc
mov
xchg
push
jle
pop
adc
adc
sbb
pushf
rol
fmul
adc
jge
jp
pop
gs
mov
jle
lock
mov
adc
dec
add
push
outs
sbb
mov
mov
and
sbb
and
out
and
pusha
test
jae
jne
mov
ror
pop
movs
call
jl
cmp
push
fsub
mov
dec
inc
ins
dec
leave
push
out
mov
pop
sbb
loope
icebp
push
in
retf
mov
imul
popa
icebp
lods
mov
aas
jmp
pop
retf
or
xor
push
cmps
xor
and
sbb
dec
push
cs
popa
jmp
jp
cdq
scas
jns
test
mov
adc
mov
mov
add
jae
lock
mov
dec
nop
jne
rcl
(bad)
push
std
xchg
dec
test
cmps
xor
imul
mov
iret
daa
xchg
add
shr
cmc
int3
and
mov
sub
lods
(bad)
setno
push
ds
mov
push
daa
data16
xor
retf
dec
mov
in
ss
and
iret
data16
test
lds
pop
sbb
or
pop
scas
mov
add
or
cdq
jbe
push
mov
jo
fcom
outs
jge
dec
movs
imul
xlat
push
jnp
stos
arpl
es
xchg
xchg
in
or
add
and
cld
sub
push
loope
(bad)
(bad)
aas
fwait
jne
jo
adc
or
xor
mov
test
sti
add
xlat
inc
loopne
mov
pop
xor
adc
mov
test
repnz
mov
mov
jmp
jl
mov
(bad)
sub
je
movs
call
out
loopne
mov
bound
clc
inc
leave
(bad)
pop
retf
cwde
pop
inc
ret
std
and
int
adc
xchg
push
gs
iret
cwde
pusha
inc
sub
test
push
xchg
out
or
mov
imul
or
lahf
enter
out
inc
and
xchg
push
dec
jbe
out
mov
mov
test
outs
cli
dec
lds
test
push
cmp
fldenv
or
push
push
arpl
popa
es
cli
or
int
pushf
imul
(bad)
lods
mov
xchg
or
iret
sbb
pop
fst
dec
mov
enter
imul
pop
jns
and
push
rol
ror
sahf
xchg
inc
mov
mov
aam
cdq
mov
cmps
jne
pop
lods
inc
fisttp
mov
test
ins
int3
sahf
push
mov
in
shl
movs
pop
mov
es
shl
xchg
mov
inc
xchg
daa
and
in
push
adc
repnz
out
xchg
loope
dec
call
cmp
pusha
sar
or
dec
sub
add
in
mov
xor
aaa
xchg
out
ret
xchg
fsub
mov
pop
xor
dec
jge
xor
cld
sub
and
xchg
out
loope
sub
or
mov
stos
fwait
cli
jb
dec
(bad)
and
pushf
sbb
scas
repz
sbb
(bad)
out
push
inc
mov
fnstcw
js
jne
enter
sub
xchg
imul
lock
cdq
lods
sti
add
adc
add
lea
push
mul
or
fild
adc
(bad)
pop
or
sbb
test
mov
mov
call
cmp
movs
retf
cmc
sbb
push
jbe
pop
jmp
inc
js
das
imul
or
jbe
jbe
pop
jle
cmp
cmp
shr
mov
outs
loopne
(bad)
popa
cwde
in
ds
jae
fadd
(bad)
ds
or
inc
rol
retf
jmp
(bad)
fistp
or
push
mov
xchg
dec
fcomp
sub
lahf
div
loopne
stos
out
push
jmp
aaa
push
pop
xchg
pop
repnz
lods
aas
mov
inc
adc
sbb
pop
(bad)
mov
dec
mov
test
dec
cmp
pusha
retf
mov
pop
push
and
je
dec
clc
xor
out
mov
mov
xor
or
and
arpl
or
mov
addr16
fs
or
popf
jnp
cmp
(bad)
cmc
mov
jo
xor
or
mov
mov
bound
jae
shl
jmp
aas
mov
inc
sub
inc
pop
pusha
push
jns
jno
xor
add
inc
jno
icebp
fdiv
daa
into
aas
fs
pop
int
imul
sbb
rcr
hlt
xor
mov
pop
or
mov
int
retf
and
sbb
jp
push
fsubp
jae
not
sbb
xchg
out
mov
cli
ss
es
push
push
push
mov
mov
outs
dec
daa
jne
repnz
in
pop
ror
iret
scas
and
dec
data16
jo
xchg
in
jns
push
push
xchg
mov
pop
loop
push
pushf
hlt
jmp
adc
addr16
scas
gs
(bad)
clc
imul
das
mov
push
xchg
mov
imul
pop
dec
cdq
sbb
mov
iret
ds
pushf
pop
jmp
nop
(bad)
out
xchg
out
scas
repz
out
cmps
inc
cmp
mov
jo
cmp
xchg
rcl
sbb
fst
and
out
int3
inc
fstp
(bad)
add
or
add
loope
test
or
adc
mov
bound
into
cmp
pop
pop
hlt
xchg
jnp
leave
cld
jecxz
cmc
push
daa
pop
ins
sti
loopne
fdivr
sbb
lahf
mov
mov
fwait
xchg
add
jne
je
fmul
in
cmps
lock
cmp
ins
sbb
fcomp
iret
dec
ins
sub
adc
mov
or
adc
sub
push
addr16
ss
push
jne
ja
lahf
xor
ss
sbb
rol
js
scas
inc
into
dec
cmp
mov
pusha
adc
retf
adc
xlat
xor
mov
iret
sbb
test
js
adc
adc
mov
repz
sbb
loope
fiadd
fsub
lds
push
lock
pop
fwait
ja
mov
sti
cld
sub
or
mov
loope
mul
popf
cmp
test
dec
lahf
dec
jo
jae
mul
xlat
aas
js
cmps
scas
xchg
dec
mov
pop
push
or
stos
sub
pop
das
(bad)
mov
bound
xchg
adc
jg
mov
idiv
or
push
fdivrp
movs
std
ret
mov
aad
out
retf
out
int3
jge
cwde
repz
rcl
jg
mov
mov
les
mov
jl
(bad)
repz
hlt
xlat
andps
and
cli
stos
push
mov
mov
out
add
cdq
push
mov
loope
mov
mul
js
add
gs
sub
jecxz
dec
xchg
gs
jg
push
int3
in
xor
inc
jbe
adc
adc
leave
mov
inc
scas
std
dec
mov
mov
pop
xchg
adc
bswap
aaa
fmul
in
(bad)
cmp
xor
in
mov
imul
out
sub
sbb
test
(bad)
movs
xchg
retf
adc
into
mov
ror
paddb
xchg
adc
mov
push
inc
lods
movs
push
ins
cs
mov
(bad)
scas
mov
sbb
mov
aam
call
jb
cmp
test
jo
adc
pop
xor
add
(bad)
pop
push
jae
xchg
pusha
cmps
(bad)
mov
cmp
pop
sub
lahf
or
aaa
sub
add
je
xor
lock
ins
jmp
inc
jmp
inc
pop
mov
or
inc
mov
cmp
cmps
mov
fucomi
out
push
imul
mov
cwde
into
lahf
xchg
pop
cmp
or
rol
mov
cmp
inc
pop
push
stos
sbb
pop
mov
add
pop
xor
push
sar
loopne
sub
shl
mov
fbstp
or
cmp
int3
dec
sub
movs
cwde
mov
fisttp
sub
loop
adc
fld
lods
jmp
inc
ins
aam
sub
sbb
push
xchg
test
sar
xchg
fiadd
and
outs
adc
shl
sbb
call
enter
mov
mov
cmps
mov
(bad)
repz
mov
into
sub
movs
xchg
daa
fdiv
sub
xor
fistp
es
jmp
mov
gs
adc
rcr
leave
jmp
mov
fdivr
xor
aam
dec
in
ret
mov
mov
mov
xchg
mov
call
pop
sub
mov
add
jb
fwait
push
and
mov
int
adc
and
add
mov
jecxz
icebp
pop
xchg
call
or
daa
mov
fnstsw
push
cwde
push
test
mov
cmp
(bad)
sbb
mov
ins
mov
inc
mov
(bad)
test
mul
imul
fwait
rcl
hlt
inc
fist
cmp
mov
enter
push
pop
jle
shl
pop
cmp
pop
fadd
or
icebp
and
ret
(bad)
dec
mov
in
aaa
xchg
pop
and
mov
imul
cmp
mov
in
lahf
push
dec
xor
test
jmp
pusha
sub
mov
or
loope
pushf
div
mov
sub
imul
ins
xchg
ret
sbb
mov
fcmovnb
mov
push
adc
add
mov
std
or
push
inc
cmc
inc
mov
loopne
mov
sbb
outs
mov
adc
aas
pop
jns
pop
or
push
outs
sti
add
dec
adc
popa
retf
ds
and
cmp
pop
ja
lock
xor
(bad)
mov
imul
cmps
push
and
or
leave
repnz
xchg
outs
outs
ret
jl
imul
add
xor
sbb
xchg
adc
xchg
and
nop
lock
enter
xchg
lock
xor
es
adc
sub
(bad)
std
pop
mov
(bad)
dec
popa
mov
je
outs
lods
pop
jo
xchg
ja
push
mov
ret
inc
pop
mov
add
enter
xchg
pop
sub
and
repnz
lock
stos
fs
mov
or
test
nop
or
jno
lods
rcl
mov
mov
fcomp
out
cdq
mov
out
adc
adc
xor
aaa
bound
push
fisttp
nop
pushf
iret
mov
jmp
mov
mov
cdq
ins
mov
push
and
mov
cmc
add
inc
mov
mov
mov
hlt
sbb
(bad)
push
aad
dec
xchg
jbe
or
jmp
cmp
push
leave
sahf
arpl
sbb
push
or
jmp
sub
ret
aas
mov
arpl
inc
dec
push
add
xchg
pop
out
loopne
sub
div
ds
mov
xor
or
adc
sbb
push
mov
xor
mov
not
adc
fwait
popa
mov
push
scas
test
push
pop
adc
popf
out
push
rol
fist
aad
(bad)
inc
push
test
sbb
mov
lahf
mov
xor
push
sar
mov
mov
jle
sbb
sbb
repnz
jno
es
inc
mov
cld
fs
int3
into
aaa
arpl
jnp
jmp
int
pusha
outs
push
push
jns
les
aas
sub
pop
cmp
sar
mov
sub
fst
mov
mov
and
add
test
loop
jge
pusha
sbb
ins
sub
in
popf
iret
jb
pop
and
jb
pop
or
jo
cmp
dec
icebp
sbb
inc
cdq
movs
adc
xchg
xchg
xchg
pop
pop
out
clc
sbb
cmp
pop
mov
or
mov
icebp
mov
jnp
pop
push
out
pop
not
jmp
cdq
lahf
mov
ds
jns
int3
add
sub
(bad)
bound
ins
movs
seta
sbb
call
cmp
pop
inc
cmp
or
add
xchg
cmps
xor
mov
gs
dec
(bad)
or
std
sub
jns
xchg
nop
dec
cmp
imul
mov
or
lods
mov
lods
gs
sbb
xchg
out
dec
lods
cmp
dec
fldenv
lods
inc
cs
adc
mov
(bad)
adc
movs
out
dec
stos
(bad)
sbb
jl
xchg
mov
pushf
mov
pop
jmp
adc
in
or
jle
jg
ret
xlat
xor
push
sti
jne
(bad)
iret
or
in
inc
pop
add
sbb
sub
xor
int3
shr
shr
ficomp
dec
mov
jno
sbb
(bad)
or
jno
ret
out
pushf
sbb
jg
cli
movs
adc
repz
xor
in
dec
mov
fnstcw
jmp
mov
sbb
imul
inc
pushf
sbb
stc
lock
cdq
cld
in
jle
push
ror
mov
sbb
and
push
scas
mov
std
add
and
xor
repz
pop
ins
loop
jl
les
ins
fs
jecxz
fadd
cmp
mov
out
scas
test
fisttp
nop
cli
inc
loopne
mov
add
inc
inc
xchg
or
mov
iret
les
ficom
adc
sub
(bad)
push
pop
mov
adc
es
xor
ins
or
leave
xchg
mov
and
add
je
loop
gs
call
xchg
aas
pop
and
push
cld
lds
sar
test
xchg
jne
inc
out
mov
push
js
adc
ja
sahf
and
cmc
xchg
retf
pop
aam
in
in
sub
pop
inc
xchg
inc
cmps
es
(bad)
jle
outs
out
call
sub
ds
jp
ret
xor
hlt
dec
fcom
in
xor
cmp
(bad)
enter
das
stos
push
add
xchg
data16
pop
inc
pushf
pop
pop
xor
sub
push
arpl
jg
xchg
push
hlt
test
adc
ret
imul
dec
fst
(bad)
scas
xchg
xchg
add
out
enter
or
(bad)
or
fisubr
rol
cmp
(bad)
xor
dec
test
xchg
mov
int3
dec
test
hlt
cmp
push
stos
aas
mov
xchg
(bad)
nop
or
cmp
icebp
xlat
(bad)
js
push
push
call
and
js
leave
xchg
ss
sbb
div
in
mov
pop
sub
test
sub
in
xor
mov
add
clc
sbb
(bad)
ss
aam
dec
(bad)
ins
xchg
and
stos
pop
dec
leave
dec
ins
mov
mov
push
jb
(bad)
mov
adc
out
add
fstp
xor
xchg
mov
test
out
xchg
(bad)
jmp
test
les
retf
je
loop
shl
add
add
push
fist
xchg
push
mov
xor
mov
jle
xor
pop
inc
repnz
enter
stc
mov
cmp
idiv
fisttp
add
and
or
or
mov
out
shl
test
mov
ror
sub
loope
adc
push
out
and
mov
mov
sub
test
fsincos
and
std
mov
daa
mov
pushf
mov
sbb
mov
in
and
adc
cmps
jb
jne
loop
sysenter
scas
ret
and
or
xlat
jns
das
aaa
jo
cdq
push
dec
pop
ins
or
ja
cmp
dec
repz
jl
cld
mov
adc
sbb
int
sar
sub
sub
out
cld
shl
xor
push
pushf
xor
add
add
movs
xor
idiv
in
cmp
inc
es
retf
test
add
jge
xchg
xchg
push
pop
je
mov
fidivr
(bad)
and
adc
popf
adc
lahf
(bad)
jae
aas
mov
test
lea
adc
xchg
dec
repnz
fs
inc
and
jg
inc
sub
push
aas
push
adc
mov
cmp
dec
outs
mov
inc
in
retf
mov
call
inc
push
xchg
xor
mov
addr16
add
lock
and
adc
xchg
and
ja
cmp
dec
movs
xchg
xchg
(bad)
repnz
in
dec
sub
jns
inc
sbb
test
cmc
and
test
(bad)
cmc
add
sbb
and
rep
push
sbb
gs
adc
xor
add
and
test
push
push
sbb
mov
and
(bad)
ins
js
xchg
cld
xor
xor
mov
aam
movs
pop
mov
cli
enter
test
mov
sub
and
hlt
test
call
fmul
hlt
jmp
pop
xchg
div
pop
mov
sbb
inc
xchg
or
sub
je
idiv
leave
in
sub
fist
das
test
sub
sub
mov
data16
outs
pop
in
pop
les
fsubp
mov
push
cmp
jge
mov
aaa
dec
gs
xchg
aam
ret
mov
stos
retf
jge
push
mov
sbb
xchg
fst
ds
dec
cmp
movs
into
sub
pop
adc
jl
cmp
mov
test
dec
adc
shl
push
or
icebp
inc
sbb
xor
out
jmp
dec
into
je
out
jbe
imul
mov
pushf
repz
adc
mov
mov
cwde
sahf
and
and
inc
dec
stos
mov
neg
fs
pop
js
fist
mov
pop
pop
pop
cmps
(bad)
xchg
test
pop
aam
ds
movs
test
mov
aas
add
movs
xor
dec
aaa
stos
mov
aas
xor
cmc
mov
push
cmps
retf
pushf
adc
mov
test
xor
fnstsw
fmul
sub
out
gs
loope
rol
xchg
cli
or
loope
push
jg
cmp
xchg
and
or
icebp
fwait
xor
jno
dec
inc
pop
ret
sub
inc
jmp
mov
xchg
mov
(bad)
adc
sub
adc
sbb
lods
sub
add
loopne
scas
cmp
out
xchg
hlt
adc
mov
or
mov
dec
aaa
test
pop
sbb
pop
push
(bad)
jbe
cli
dec
push
pop
push
in
inc
mov
es
mov
xchg
fidivr
mov
or
or
and
pushf
cli
mov
sti
sub
sar
jmp
(bad)
pop
arpl
xchg
and
add
daa
inc
std
push
adc
jmp
sbb
inc
fcmovu
cmc
sub
lods
loopne
push
inc
lods
loope
xchg
push
push
sbb
repz
arpl
mov
inc
push
push
pop
sahf
xlat
fwait
outs
enter
nop
fidivr
xchg
xchg
inc
cmp
mov
and
push
add
fmulp
repz
push
dec
add
push
add
xchg
out
mov
xchg
xchg
sub
cmp
pop
cmp
aas
fsub
cmps
xlat
out
jp
sbb
rol
out
mov
mov
xor
push
sbb
test
imul
mov
mov
xchg
and
xor
daa
adc
fsubp
sbb
mov
pop
push
jge
adc
cmps
mov
jle
pop
dec
call
daa
xor
dec
push
jge
data16
adc
sub
or
popa
in
aam
push
mov
cdq
pop
and
ins
nop
jecxz
test
adc
or
aaa
push
cmp
aad
sub
push
and
shl
clc
mov
(bad)
loope
retf
sub
lahf
jb
jmp
hlt
loop
ret
pop
pop
sbb
jb
sbb
push
mov
adc
dec
out
or
stos
mov
lods
cmp
and
jbe
or
in
js
adc
cmp
xor
mov
jp
loopne
xchg
jae
xchg
jnp
lock
pop
or
scas
push
mov
clc
dec
mov
fistp
and
(bad)
mov
shl
imul
adc
inc
shr
jbe
mov
and
push
retf
int
inc
inc
ja
mov
enter
jp
add
sti
pop
sbb
push
fld
jl
repnz
out
mov
ss
cld
inc
out
lea
retf
(bad)
aad
pop
mov
fcomi
iret
xchg
sbb
(bad)
fwait
pop
(bad)
imul
mov
loop
mov
retf
mov
inc
retf
and
inc
add
mov
in
lods
pop
scas
pop
out
adc
add
aas
(bad)
push
std
imul
adc
inc
scas
jp
mov
mov
xchg
gs
in
imul
jb
pusha
xor
mov
dec
pop
ret
cs
in
xor
sbb
mov
jp
mov
iret
or
sub
adc
(bad)
lods
jmp
sti
sbb
push
mov
xchg
or
jecxz
imul
ja
(bad)
adc
movs
(bad)
or
lahf
mov
loopne
or
dec
rcr
(bad)
call
iret
adc
loop
mov
fsub
clc
jmp
jae
sub
aad
push
jl
mov
(bad)
idiv
test
mov
cld
cmp
jge
cld
or
mov
cmp
cdq
loope
mov
adc
sub
push
cmp
sub
cdq
fadd
std
bound
push
inc
xor
mov
movs
outs
and
cmc
cmps
xlat
and
js
imul
inc
adc
enter
jno
jmp
imul
mov
cmp
mov
call
xor
fidivr
push
mov
or
lahf
jle
or
repz
fadd
or
add
ss
xor
or
out
pop
xor
inc
aas
scas
push
push
adc
arpl
fdivr
or
jae
je
sub
ins
pop
jmp
daa
push
ja
or
cmp
shl
loope
sub
push
or
dec
imul
js
loope
add
shr
sahf
lods
stos
push
cdq
add
lea
scas
and
mov
rcl
sbb
shr
mov
arpl
lahf
icebp
xor
pop
lds
into
xchg
out
popf
cdq
sub
mov
inc
iret
dec
retf
jno
sbb
hlt
xlat
sar
jge
sub
(bad)
aaa
rcr
mov
fdiv
stos
jmp
push
mov
fiadd
stos
outs
popf
jl
xor
lds
in
pop
inc
ins
(bad)
mov
cmp
jns
aad
dec
xor
pop
pop
out
xlat
lods
sbb
sub
dec
nop
test
loope
arpl
mov
leave
loope
mov
mov
mov
jl
sbb
(bad)
and
lds
sahf
sbb
test
sub
test
inc
cmp
imul
or
mov
aaa
pushf
mov
out
aas
lods
fbstp
rcl
(bad)
sbb
(bad)
xchg
fstp
add
lods
mov
fldenv
retf
fwait
loop
mov
repnz
rcl
hlt
lods
and
es
dec
out
cmp
sub
jae
push
inc
jp
icebp
mov
das
fs
pop
movs
mov
rcl
out
out
adc
xchg
adc
mov
stc
push
dec
lds
inc
cs
enter
jb
mov
push
jne
lahf
mov
outs
(bad)
sbb
or
cmp
mov
or
test
int
inc
cmp
or
sub
aas
or
xchg
xchg
mov
hlt
into
mov
aaa
dec
and
mov
bound
loop
mov
call
adc
dec
push
or
inc
jno
xchg
cmp
popa
nop
and
sbb
jg
mov
mov
mov
add
mov
test
adc
ss
test
jle
jnp
out
cs
in
xlat
data16
es
jae
scas
mov
movs
sbb
add
dec
pop
xchg
clc
cmp
pop
jmp
les
leave
(bad)
sub
jae
int3
mov
or
ds
adc
mov
std
jle
repnz
outs
ja
test
js
cwde
call
retf
push
lods
and
mov
pop
sub
gs
stc
btc
hlt
ins
inc
test
mov
xchg
push
mov
mov
sub
shl
mov
xor
mov
jnp
or
pop
dec
ins
(bad)
jno
inc
push
dec
int3
stos
test
lods
jnp
adc
pop
movs
retf
loope
inc
or
mov
std
cli
sbb
retf
ins
inc
adc
in
dec
pushf
ficom
pop
out
mov
and
stos
mov
fidiv
xchg
out
test
cmp
dec
nop
add
mov
and
rcr
or
sbb
stos
out
jmp
push
add
neg
xchg
les
outs
inc
cdq
xchg
jo
xor
in
jo
jbe
sub
lea
jns
pop
mov
xor
cmp
mov
call
jmp
out
and
test
xchg
neg
push
pop
push
je
outs
in
mov
push
data16
dec
push
test
rcr
xchg
es
ret
test
add
adc
dec
inc
sub
and
in
fwait
mov
adc
cmp
mov
call
inc
fbstp
je
jne
daa
mov
aam
stc
jmp
adc
loopne
mov
iret
out
jmp
loope
aaa
push
fldenv
or
shl
pop
imul
in
in
js
dec
sbb
jecxz
add
fist
jmp
jmp
and
ins
xor
jmp
lods
mov
bound
pop
and
in
iret
scas
sbb
jnp
and
cmps
cdq
popf
aas
dec
add
ror
xchg
add
mov
inc
add
pop
sbb
push
popa
push
xor
mov
and
sar
test
mul
aas
call
adc
mov
sbb
xor
push
sub
mov
clc
pop
test
(bad)
adc
push
or
xchg
lock
xor
gs
scas
adc
inc
xchg
test
cmp
lock
leave
push
neg
xor
sub
xchg
adc
pop
enter
movs
pushf
dec
mov
xchg
mov
arpl
dec
je
inc
jns
fcomp
pop
sub
pop
fwait
(bad)
jnp
in
inc
or
adc
xor
test
pop
push
out
push
outs
arpl
xchg
in
or
and
popf
rol
test
fimul
(bad)
push
sub
push
out
cmp
push
ss
movs
xchg
into
dec
rcl
outs
pop
outs
xor
mov
cmp
add
call
jmp
popa
push
(bad)
jnp
mov
jmp
mov
test
and
xchg
dec
push
mov
mov
test
aad
adc
push
mov
shl
add
scas
dec
push
pop
sub
rol
inc
std
out
shl
sbb
arpl
aam
mov
or
rcr
mov
add
mov
pop
(bad)
cmp
xor
xor
mov
test
cmps
ret
pop
xchg
loop
xchg
(bad)
lods
test
inc
cld
in
call
push
in
fidiv
cmps
popf
or
jl
adc
adc
push
xchg
inc
jl
outs
arpl
sar
push
adc
popa
lea
bnd
xchg
push
sbb
mov
pop
push
add
je
xchg
fadd
popf
xchg
jl
loop
cwde
mov
adc
mov
xchg
sbb
test
imul
es
fld
cmps
cmp
mov
in
inc
rcr
push
cmp
pop
mov
jbe
dec
out
sti
cmc
nop
nop
and
cmps
push
lock
and
jp
mov
pushf
mov
out
mov
dec
mov
mov
mov
ss
cmp
pushf
nop
pusha
jo
mov
sbb
xchg
sub
es
sbb
fimul
scas
jne
dec
pop
push
fild
xor
inc
(bad)
int3
mov
std
bound
(bad)
mov
(bad)
xor
jle
in
xor
xchg
ret
add
mov
xlat
jge
mov
pop
vunpckhps
add
je
mov
cmp
out
xor
jno
fstp
out
je
repnz
xor
pusha
shl
push
mov
fistp
jecxz
inc
inc
pop
push
out
add
sub
sbb
or
mov
or
out
cmp
jge
imul
mov
jbe
iret
inc
scas
xor
imul
cmp
jl
push
pop
cmp
push
and
ds
dec
sbb
xchg
es
add
imul
dec
pop
call
or
mov
mov
out
push
mov
sbb
fcomp
mov
dec
test
pop
shl
stos
fcom
mov
pop
outs
out
test
hlt
push
fwait
adc
mov
gs
dec
(bad)
popa
or
cmps
ja
or
add
in
xor
pop
in
cdq
mov
mov
test
in
je
cmps
scas
loopne
adc
std
push
nop
push
in
sahf
xor
ja
or
xchg
enter
ds
cmps
jl
pushf
aas
or
scas
pop
cli
inc
std
ja
sar
jnp
add
nop
rol
loope
and
into
scas
ja
es
sub
das
jmp
sub
in
retf
arpl
push
xchg
sbb
sahf
int3
ins
iret
adc
mov
call
popf
das
dec
mov
pushf
adc
(bad)
push
xchg
imul
push
adc
sub
popa
xor
in
test
xchg
inc
das
or
test
ret
(bad)
loop
and
mov
cwde
inc
(bad)
or
push
mov
cld
adc
cmp
and
jb
sar
popf
cmp
stos
shl
outs
mov
mov
das
or
xor
ins
out
adc
loope
popf
mov
inc
scas
movlps
inc
pxor
xchg
into
cs
push
mov
scas
aas
into
int3
jmp
int3
pop
xchg
daa
in
add
jmp
push
mov
into
stc
sar
js
int
dec
jns
jp
xchg
mov
mov
leave
call
les
ror
(bad)
sub
jmp
(bad)
push
cmp
push
icebp
(bad)
pop
and
nop
sub
clc
ror
pushf
out
out
dec
ror
sub
xor
outs
xor
jmp
retf
int3
or
jmp
cli
repz
mov
fsubrp
inc
pop
xchg
in
mov
daa
pop
test
test
in
imul
mov
rol
sub
stos
popa
sub
mov
jecxz
xor
scas
mov
push
fnstcw
movs
cmp
or
fdiv
(bad)
(bad)
mov
push
cmp
ins
jno
(bad)
loopne
in
push
push
pushf
ret
ret
add
jl
jp
inc
pushf
sub
or
call
je
dec
xchg
pop
or
mov
or
xor
retf
leave
add
scas
jl
push
push
dec
sysret
fwait
xchg
cmps
cmp
xchg
ins
or
xchg
jb
ins
(bad)
loop
stc
and
or
out
and
fidiv
jb
jmp
aas
fwait
pop
sbb
aad
xchg
(bad)
cld
xlat
push
push
xlat
jne
sub
stc
fcmovu
out
scas
adc
(bad)
mov
adc
push
adc
frstor
add
pop
adc
rol
outs
dec
dec
stos
push
loop
adc
clc
sbb
fwait
sub
push
aaa
cmps
out
loopne
cld
push
je
loopne
lock
stos
(bad)
pop
bound
push
fcmovbe
cmp
pop
retf
or
xchg
(bad)
jo
jecxz
push
cld
ret
loope
sahf
loop
(bad)
fbstp
mov
mov
test
mov
or
xchg
cmp
xlat
add
out
cs
sbb
test
push
mov
daa
imul
fidivr
adc
pop
mov
idiv
push
xchg
mov
fiadd
fwait
xchg
push
cs
sahf
aaa
es
push
xor
inc
fisubr
sub
(bad)
mov
lahf
mov
not
add
add
(bad)
in
xchg
int
dec
and
stos
mov
mov
cli
inc
adc
or
adc
pop
adc
push
sub
add
sar
test
mov
test
xchg
sbb
add
scas
push
and
ret
jmp
movs
loope
xchg
xchg
popa
fxch
xchg
or
retf
mov
cmp
pop
imul
daa
bound
retf
cmps
fmul
jno
add
xor
ins
iret
mov
add
cmp
in
xchg
pop
cmps
sub
ss
in
js
mov
jae
in
(bad)
lods
mov
sbb
(bad)
clc
jno
push
fcompp
out
add
(bad)
mov
in
popa
imul
xchg
fwait
out
or
call
das
aad
clc
push
and
ins
cld
add
call
xchg
cmps
sbb
cmps
adc
pop
adc
stos
(bad)
adc
std
outs
cmp
out
mov
int3
inc
lods
push
cdq
les
leave
xchg
fptan
sahf
add
cmp
test
nop
push
cmp
retf
dec
fimul
xchg
sahf
mov
mov
jmp
ror
mov
dec
sub
ins
add
xchg
mov
pushf
xor
xor
fst
loopne
cmp
mov
jmp
cwde
jns
or
out
mov
mov
or
push
mov
jb
push
fbstp
js
sub
shr
inc
or
not
stos
js
mov
xchg
cs
out
std
xchg
mov
imul
mov
jecxz
lock
jns
mov
loopne
mov
fdivr
sar
lods
popa
pushf
jns
shl
adc
imul
or
mov
loope
or
mov
dec
cmp
add
add
inc
aaa
lea
movs
inc
shr
dec
loop
cmc
mov
out
jae
jae
xchg
xchg
outs
cmps
xor
mov
(bad)
pop
or
push
sahf
dec
xchg
or
push
clc
xchg
cmps
jmp
sbb
cs
xor
cmp
xchg
add
shl
in
sbb
inc
out
push
pop
mov
xor
push
ds
jne
and
inc
mov
int3
aam
mov
adc
lock
repnz
push
aad
add
dec
popf
mov
adc
pop
jnp
call
inc
lods
outs
push
rol
das
inc
lahf
clc
or
cmps
mov
xchg
(bad)
lock
mov
push
or
jge
mov
cld
inc
lds
or
adc
data16
add
lea
xchg
add
repnz
cmp
push
clc
in
pop
leave
cmp
jo
mov
xor
jo
jne
enter
cld
cpuid
xchg
aas
and
jl
stos
xchg
mov
mov
(bad)
out
aam
test
out
dec
arpl
xchg
in
test
mov
les
cmc
mov
pop
les
fsqrt
cli
mov
push
ror
jnp
mov
mov
cmp
das
push
out
or
mov
pop
mov
cwde
sub
aas
aam
add
in
pop
sbb
outs
shl
cmp
inc
enter
es
mov
sub
or
inc
js
adc
pop
popf
jecxz
cmp
lahf
ins
jae
sbb
popf
popf
(bad)
xor
mov
mov
cmp
mov
dec
and
dec
jbe
call
push
leavew
pop
or
inc
jno
cmc
leave
xchg
cdq
or
test
mov
mov
mov
loop
mov
dec
sahf
jo
jg
stos
or
or
shl
lahf
add
fidiv
std
sub
mov
test
or
fwait
pop
xor
or
mov
inc
and
sub
(bad)
xor
adc
cmp
inc
sbb
out
fstp
fwait
call
adc
cmp
call
in
aas
mov
cmps
mov
mov
xor
in
xor
lds
jo
push
push
dec
push
fst
(bad)
aam
loopne
push
push
cmp
lods
and
lock
sti
push
mov
cmps
cmp
xor
std
es
jl
mov
aaa
cmp
pop
and
sub
ret
aas
ret
xchg
jb
daa
jbe
pop
mov
repnz
push
fistp
mov
sub
aas
mov
lea
pop
pop
add
out
push
mov
fnstcw
stos
xor
shl
push
mov
cwde
fisttp
pop
sti
cli
adc
jle
xchg
aas
ret
lods
add
push
mov
les
xor
push
sar
cmc
push
dec
adc
js
aam
and
int3
gs
sahf
dec
xor
adc
and
fcomp
xchg
in
jnp
sahf
cmp
vpunpckhqdq
sub
les
xchg
fdivr
repnz
mov
mov
xchg
(bad)
adc
sub
push
sbb
jl
movs
mov
sbb
icebp
call
into
enter
sbb
push
das
in
stos
outs
mov
add
lods
adc
pop
das
(bad)
in
mov
sti
sub
loopne
mov
or
and
pop
in
jg
std
int3
xchg
pop
movs
sbb
ss
arpl
arpl
push
or
push
outs
push
into
sbb
popa
movs
or
pop
pop
inc
dec
jb
adc
fs
and
stc
mov
je
dec
shr
iret
dec
(bad)
xchg
test
call
mov
idiv
out
jmp
adc
dec
pop
pop
movs
fmul
test
fcmovnb
push
adc
jecxz
loope
js
mov
outs
push
leave
mov
aaa
test
into
mov
lea
mov
aam
pop
mov
push
add
dec
sub
xchg
out
add
bound
sbb
or
in
xchg
add
gs
(bad)
aaa
fcomp
jbe
mov
inc
xor
ror
jp
(bad)
lods
cmp
adc
cwde
scas
or
add
loope
mov
and
xchg
fidivr
int
fldcw
cmp
jmp
inc
xchg
idiv
xlat
push
lods
mov
xlat
xor
jl
in
scas
bound
fsubr
dec
mov
retf
and
js
xchg
cmc
repz
mov
push
stc
inc
mov
adc
mov
stos
xchg
jg
popf
xor
out
ins
push
wrmsr
out
fwait
add
stos
xor
repnz
mov
push
dec
lods
jb
and
mov
outs
jnp
rol
popa
stos
fdiv
pop
arpl
inc
inc
jge
inc
bound
(bad)
jbe
pop
adc
mov
xlat
scas
(bad)
pushf
pushf
js
mov
mov
adc
call
call
sub
lahf
rol
je
mov
or
repz
push
cmp
xchg
inc
test
loope
nop
test
or
(bad)
icebp
hlt
and
push
imul
mov
jg
jmp
push
repnz
fcmovnu
sbb
add
cli
sub
add
jl
in
cmp
ret
xchg
(bad)
mul
fs
mov
dec
popa
imul
mov
jmp
loop
adc
test
cs
retf
push
jmp
in
fisub
jecxz
shr
ins
jnp
test
mov
outs
pop
jns
xor
outs
xchg
pusha
lahf
push
mov
fcmovnbe
stos
call
xlat
movs
sub
xor
pop
and
sbb
xor
scas
mov
mov
cld
sub
shr
repz
dec
movs
or
sbb
inc
movs
fisttp
aaa
call
sbb
add
rcl
mov
adc
ret
iret
(bad)
(bad)
test
push
xor
or
(bad)
cmp
inc
mov
stc
aaa
xchg
lahf
out
sub
inc
push
xchg
sbb
cmps
xor
inc
setno
pop
dec
cmp
sbb
inc
cmp
push
push
or
bound
les
push
sbb
dec
sbb
inc
mov
adc
sbb
push
das
imul
lods
inc
out
mov
or
fnstenv
leave
repz
cdq
repz
sbb
xchg
mov
jb
inc
jl
sbb
mov
and
test
in
mov
xor
jg
push
jb
aas
add
test
xchg
into
inc
daa
ret
xacquire
cld
int
or
jnp
mov
xchg
cmps
inc
or
(bad)
sub
xchg
and
je
bound
in
(bad)
aaa
dec
fdiv
cmps
sub
pop
inc
sbb
mov
xor
or
cmp
mov
stc
mov
in
repz
pop
scas
dec
lds
inc
in
clc
jb
test
out
inc
arpl
test
sbb
fadd
(bad)
mov
pushf
xor
xchg
add
test
mov
sbb
retf
xor
pop
call
mov
stos
(bad)
(bad)
or
repz
sbb
jae
(bad)
stc
xchg
sub
jge
movs
mov
(bad)
out
cs
jae
lea
imul
jne
mov
and
cld
(bad)
das
mov
(bad)
pushf
inc
dec
popa
pop
sub
jnp
out
repz
dec
dec
bound
popf
jg
iret
mov
fwait
pushf
cwde
lods
or
inc
enter
mov
inc
pop
ins
inc
in
dec
aas
scas
jne
(bad)
movs
cmps
pop
ret
xchg
push
jp
pusha
mov
mov
ficom
es
pop
sub
push
or
jle
pop
add
nop
dec
cmps
jbe
pop
hlt
sahf
cli
mov
sahf
pop
xor
sbb
xchg
mov
in
arpl
jle
sbb
adc
aad
rcr
aad
in
mov
cli
imul
fst
(bad)
jae
inc
es
and
add
int3
cmps
jl
adc
push
add
in
add
mov
or
outs
mov
sub
enter
retf
ds
dec
adc
push
add
jmp
mov
hlt
xor
or
retf
push
mov
outs
cmp
nop
jbe
sbb
jecxz
scas
repz
test
daa
hlt
jb
and
adc
into
inc
clc
cmps
sub
imul
xor
iret
out
(bad)
scas
add
xor
loopne
sar
push
or
jp
retf
iret
outs
(bad)
(bad)
xor
inc
ds
adc
or
(bad)
adc
int
xchg
cmp
loop
or
shr
rep
pop
xchg
sub
mov
icebp
stos
mov
into
and
stos
enter
out
and
jne
jae
imul
inc
push
retf
not
and
fbld
mov
inc
inc
repz
test
scas
mov
(bad)
ret
lods
mov
cmp
mov
adc
mov
std
data16
psubsb
xchg
or
fild
movs
mov
(bad)
jge
scas
pop
mov
gs
(bad)
push
sahf
adc
pop
push
hlt
call
fcom
fdivr
and
mov
add
fisubr
pop
fyl2x
imul
xor
(bad)
scas
jle
ret
addr16
and
pop
push
jnp
xchg
das
mov
call
push
repz
add
add
mov
add
in
xchg
cmp
leave
repnz
in
(bad)
fidivr
sbb
lahf
retf
aam
(bad)
mov
sbb
std
and
mov
and
pop
add
xchg
or
cmp
fld
stos
dec
mov
mov
out
push
cli
daa
adc
les
ret
mov
repz
(bad)
hlt
test
inc
and
clc
repnz
or
pop
mov
xlat
adc
xchg
call
cdq
xor
rol
push
imul
push
out
add
mov
(bad)
icebp
leave
jb
push
push
push
popa
pop
bound
retf
jb
xor
(bad)
in
imul
xchg
or
mov
xor
enter
inc
popf
out
sti
sub
push
sub
xchg
xor
outs
and
add
cmp
mov
lock
inc
pop
dec
xchg
mov
sub
mov
add
and
jecxz
jne
pop
int3
sbb
cmp
xchg
mov
push
cmp
sbb
mov
dec
ss
mov
ud1
cmp
xor
(bad)
std
mov
cmp
dec
mul
out
dec
jp
test
xor
push
retf
add
ins
xor
inc
xchg
inc
jno
jle
int
mov
je
js
(bad)
jo
pop
mov
sub
out
cli
adc
int
loop
mov
mov
mov
and
xor
popf
xchg
daa
mov
mov
pop
test
and
aas
scas
ret
cs
inc
push
jmp
jb
lods
out
stos
push
gs
inc
jnp
and
cmc
add
sahf
out
push
dec
mov
adc
daa
arpl
mov
xchg
repnz
imul
cmps
mov
out
lds
shl
(bad)
inc
ret
pop
ss
fdivr
mov
lods
movs
mov
pop
js
test
sub
push
mov
mov
ret
dec
or
inc
cmp
mov
nop
mov
div
jecxz
adc
push
(bad)
popa
dec
je
dec
xor
lods
push
cli
adc
push
cmp
xor
out
and
arpl
(bad)
in
je
imul
pusha
and
cmp
bound
popa
jle
fcomp
cs
mov
ja
int3
add
push
cli
dec
add
cmp
inc
sbb
sar
test
sti
repz
xor
cmc
idiv
div
pop
data16
and
jnp
add
jmp
lds
pop
rcl
fisttp
clc
or
ret
call
call
sub
push
jnp
bound
ror
hlt
std
mov
adc
fist
aam
pop
dec
int
ficom
shl
js
mov
xchg
jle
and
div
iret
mov
sbb
mov
or
neg
imul
stos
and
xchg
push
sbb
(bad)
push
(bad)
sub
xlat
int
out
mov
ret
sub
jmp
jnp
inc
adc
mov
sbb
xchg
and
nop
and
dec
cmp
jmp
inc
out
bound
ret
xchg
mov
test
stos
push
lods
cli
jno
xchg
jbe
xor
rcl
sub
pop
inc
jnp
fisubr
push
mov
cmp
pop
neg
mov
mov
add
in
inc
push
adc
dec
inc
stc
daa
add
clc
mov
not
lods
stos
cmp
inc
pop
mov
frstor
mov
add
cs
jmp
stos
add
scas
jne
sub
dec
adc
xchg
lea
ror
repz
jae
lds
ret
jp
sub
clc
jne
xchg
add
lods
aas
mov
out
xor
add
adc
loop
iret
cmps
mov
icebp
push
mov
sar
push
push
add
call
bound
mov
dec
sub
pusha
aas
fwait
arpl
jle
lea
dec
shl
mov
push
sbb
ss
or
loopne
daa
mov
xchg
fnstcw
jnp
lea
jg
mov
xchg
jno
xor
xor
xchg
mov
cmp
icebp
adc
xchg
fimul
adc
inc
lahf
loopne
mov
rol
cmc
adc
sbb
shr
xor
jno
mov
js
jl
movs
or
mov
es
(bad)
mov
call
add
or
int3
push
in
loope
inc
call
ja
xor
sbb
fiadd
mov
mov
lods
dec
lahf
out
inc
or
sub
movs
nop
mov
inc
and
sbb
in
bound
retf
popf
out
daa
das
sub
xchg
xlat
or
inc
sbb
ja
sar
pop
shr
xchg
add
sbb
jmp
popa
out
fiadd
movs
mov
pop
push
xchg
pop
clc
retf
fadd
clc
scas
(bad)
pop
iret
imul
inc
inc
je
popf
xchg
jbe
push
mov
or
xor
jno
out
adc
push
xor
pushf
aad
or
mov
or
cwde
popa
xchg
push
cmps
mov
push
shl
sbb
iret
and
and
push
mov
mov
ds
out
ins
lahf
xchg
dec
in
test
mov
daa
inc
adc
or
out
in
(bad)
xor
mov
ret
pop
shl
out
loopne
xchg
ins
call
sbb
xchg
jno
sti
mov
aam
fist
inc
add
mov
ss
adc
adc
adc
sbb
pop
aad
inc
inc
mov
add
(bad)
(bad)
pop
ret
rol
icebp
shl
jge
push
fild
inc
loopne
inc
mul
(bad)
and
dec
or
inc
cdq
mov
adc
push
cmc
in
or
xchg
and
or
jmp
shr
mov
retf
cmp
mov
call
outs
addr16
sbb
fsubp
pop
or
cmp
ins
movs
dec
(bad)
ds
or
xor
xlat
cmp
call
data16
sub
loope
enter
mov
cmp
lahf
les
test
and
xchg
mov
push
push
dec
shr
xor
neg
jnp
push
jo
and
jmp
pop
sbb
pop
mov
add
in
dec
mov
cdq
inc
add
fld
(bad)
not
xchg
mov
lahf
jns
rol
movs
jecxz
mov
inc
mov
aas
jmp
fs
adc
jae
cmps
jecxz
jge
mov
les
cmp
(bad)
fbstp
pop
hlt
cs
clc
cld
aam
sub
shr
sahf
mov
shr
popa
inc
pop
test
jmp
sbb
(bad)
(bad)
mov
loope
adc
add
popa
cmp
dec
fwait
mov
mov
mov
lock
mov
scas
fstp
mov
bound
mov
dec
fist
ja
pop
xor
add
fist
retf
(bad)
sahf
leave
push
(bad)
setl
jmp
inc
mov
test
mov
psubq
xchg
in
sahf
jbe
cld
stos
ins
xchg
ja
add
or
cmp
iret
pop
mov
or
sub
outs
in
outs
fidivr
adc
dec
inc
gs
push
test
inc
mov
cmc
int
jmp
ins
or
xchg
jg
imul
adc
lahf
ins
xchg
xlat
test
and
lods
ds
xchg
sub
jmp
lahf
sbb
jo
sub
add
into
and
mov
cmp
mov
movs
loop
pop
mov
mov
out
stos
dec
movs
or
das
lahf
jo
or
fidiv
in
ror
xchg
adc
or
fcmovne
outs
ffree
cmp
sub
mov
or
cmps
inc
fbld
jmp
fisubr
dec
push
stos
ds
hlt
dec
hlt
jno
push
dec
mov
and
dec
mov
add
push
jecxz
and
dec
loop
adc
clc
loopne
dec
xor
mov
movs
jno
and
scas
mov
and
or
int3
arpl
and
inc
(bad)
aad
or
mov
mov
jnp
cmp
inc
ins
xchg
xchg
pop
mov
mov
push
mov
iret
cmp
mov
stc
arpl
mov
sub
jmp
adc
call
stos
hlt
test
or
ss
dec
popf
loope
or
mov
(bad)
rol
mov
(bad)
retf
in
mov
jecxz
add
pop
stc
mov
jp
aam
neg
sbb
pusha
inc
adc
dec
dec
std
in
inc
fiadd
std
push
clc
out
les
mov
inc
mov
das
sbb
pop
or
inc
neg
mov
xor
test
into
rol
adc
cmps
push
movs
stc
mov
cmp
repz
mul
xchg
ins
daa
or
into
icebp
bound
mov
ss
mov
jp
ins
pop
cmp
and
outs
hlt
mov
push
in
in
add
aaa
push
mov
(bad)
pop
lods
mov
repz
outs
adc
cld
imul
out
push
imul
jg
gs
cmps
adc
xchg
cmp
daa
or
les
(bad)
in
pop
xlat
dec
(bad)
sbb
add
mov
imul
cmp
popf
push
int3
sar
(bad)
jg
outs
jmp
lods
jle
jbe
or
lea
pusha
sub
jmp
dec
repnz
xor
or
cli
aas
pop
pop
cbw
hlt
stos
(bad)
data16
jp
popf
(bad)
jae
dec
adc
in
mov
xchg
cli
cs
scas
sar
cmp
enter
sub
nop
add
stos
aad
xor
(bad)
int3
sar
sbb
mov
pop
test
sbb
addr16
scas
pop
dec
sbb
pop
pop
sar
cld
mov
stc
cmps
pusha
clc
rcr
fwait
jmp
aaa
call
inc
aas
mov
or
sub
inc
xchg
div
sub
aam
shr
loopne
and
mov
ror
std
outs
push
pop
es
retf
or
icebp
xor
(bad)
mov
adc
stos
add
pop
pop
fisub
ins
fisttp
cmc
and
or
inc
in
adc
mov
ins
add
add
mov
inc
je
xor
clc
and
ret
shl
mov
movs
lods
mov
fdivr
daa
out
aaa
jb
dec
lods
inc
out
sub
jg
popa
mov
dec
mov
xchg
inc
xchg
repz
sbb
push
rcr
fmul
das
fisttp
movs
cmp
mov
jbe
jo
jb
or
push
mov
scas
sahf
fst
push
pop
retf
mov
add
mov
stos
xor
loop
in
in
xor
(bad)
ins
test
enter
and
es
jns
push
aam
inc
cdq
dec
ret
jle
mov
add
add
fnstenv
or
dec
dec
mov
or
loop
cmps
cdq
and
adc
or
and
and
pusha
or
dec
xlat
sahf
mov
pusha
pop
shl
adc
dec
jmp
adc
es
in
sbb
jg
daa
sub
pop
and
jmp
rol
repnz
adc
mov
into
jbe
xor
adc
cwde
mov
mov
add
ja
cld
and
jae
inc
xor
xor
jbe
stc
xchg
loope
js
lds
mov
adc
pop
or
and
xchg
push
popf
add
iret
xor
js
icebp
pop
fld
xchg
cmps
(bad)
push
or
jno
enter
jb
pop
adc
je
or
mov
add
jae
adc
(bad)
pop
ret
mov
std
hlt
test
inc
rol
(bad)
mov
daa
add
adc
and
xchg
test
(bad)
cmp
add
js
outs
mov
enter
es
pop
pushf
ret
out
cmc
ror
inc
sahf
adc
and
popa
ins
push
sub
mov
cmp
jns
shl
aam
mov
push
fistp
mov
adc
popf
lock
ds
js
dec
dec
inc
inc
sti
xor
inc
push
pop
dec
call
mov
jp
dec
jns
sbb
lds
cwde
in
cmps
popa
scas
sub
arpl
cmp
lfs
fwait
lock
sbb
ins
dec
mov
xor
enter
cmp
in
cld
shr
push
lods
loopne
popa
push
(bad)
loope
jle
jge
scas
mov
inc
out
mov
pop
adc
pop
pop
add
dec
pop
sahf
adc
and
bound
sub
imul
pop
int
das
push
leave
gs
jmp
adc
sub
xor
retf
int3
sub
mov
pop
fistp
(bad)
and
jle
sub
pop
sbb
addr16
dec
outs
push
(bad)
lods
inc
je
fisub
popf
clc
and
pop
outs
cmp
dec
outs
enter
ficom
cdq
mov
shl
xlat
lahf
and
add
les
fst
jp
mov
lock
push
cmp
or
lods
mov
dec
dec
cld
mov
inc
int3
pop
jne
mov
mov
jmp
(bad)
jne
lods
sbb
mov
popa
gs
ds
sbb
jb
into
mov
mov
dec
sbb
and
pop
in
into
add
dec
call
jns
repnz
or
push
jne
and
out
cmovb
and
push
xchg
and
and
fild
inc
lahf
add
jnp
ja
cli
or
mov
bound
add
adc
test
jns
xchg
mov
jge
lods
and
cmp
or
xchg
test
loopne
mov
inc
and
jbe
aas
inc
mov
add
in
sbb
pop
cld
out
jmp
adc
cmc
in
rol
mov
mov
test
in
(bad)
movs
jns
in
xchg
mov
out
inc
xor
js
xor
jo
push
idiv
sub
and
jle
shl
lea
sbb
call
sub
inc
lock
sbb
and
je
ja
pushf
loopne
lahf
nop
retf
inc
add
inc
ss
or
dec
das
int3
hlt
push
fcom
mov
mov
sahf
jae
loope
sub
call
jo
iret
sar
jge
pop
lock
xchg
nop
xor
mov
jmp
fdivp
or
adc
mov
inc
xchg
mov
push
popa
daa
dec
mov
sbb
out
cdq
daa
lock
adc
lds
sar
cmp
or
mov
sub
inc
or
sub
xor
xchg
imul
lods
in
add
pusha
push
sbb
test
mov
sbb
dec
jae
sahf
jge
jg
inc
mov
lods
cwde
adc
sbb
loopne
xchg
pop
mov
sub
push
and
sbb
out
mov
cmps
ss
dec
mov
dec
call
push
and
repnz
movs
nop
jae
mov
fist
dec
xchg
push
bound
jns
jmp
dec
cmp
sub
push
xchg
push
xor
imul
sbb
mov
xchg
adc
or
loope
xchg
inc
jp
and
cmp
mov
or
cli
dec
pop
sbb
adc
stos
int3
mov
dec
cmps
xor
cmp
out
mov
add
cmp
xor
icebp
cmp
les
pop
and
ins
fxtract
aas
ficom
mov
jb
mov
mov
inc
mov
popa
pop
dec
jg
fldcw
inc
pop
push
xor
add
dec
mov
xchg
fnstsw
dec
hlt
push
adc
mov
dec
add
imul
retf
xor
jns
jp
xchg
cld
fldcw
nop
js
test
xchg
es
mov
inc
jmp
mov
out
scas
popa
out
std
leave
js
stos
popf
test
mov
ds
mov
push
push
arpl
push
jnp
unpcklps
adc
sub
adc
jbe
adc
inc
xor
js
out
pop
mov
loop
or
fwait
stos
syscall
adc
movs
jae
inc
xchg
mov
(bad)
repz
arpl
mov
nop
push
cmc
sbb
retf
retf
jge
cmp
ins
call
mov
cmp
mov
ss
dec
lods
stos
add
out
fwait
push
xlat
outs
jnp
rcl
int
xor
outs
and
repz
xchg
and
gs
xchg
jb
(bad)
mov
(bad)
aas
jmp
(bad)
ss
mov
js
xchg
mov
pop
ror
cld
(bad)
mov
les
sub
inc
dec
xor
push
pushf
ins
sbb
push
int
sbb
jmp
cld
outs
sub
xchg
pop
push
aas
cdq
jmp
test
rcl
jbe
in
icebp
ret
repz
pop
xor
outs
in
scas
mov
aaa
pop
cs
mov
pop
inc
cmps
popf
pop
scas
scas
aaa
mov
imul
mov
mov
or
dec
adc
push
add
test
xor
adc
xchg
mov
jbe
outs
in
xchg
lahf
ret
jmp
cmp
fisttp
push
and
xor
sub
fldenv
xor
mov
sub
mov
in
(bad)
(bad)
sti
fmul
push
jg
or
gs
in
xchg
mov
bound
js
imul
ret
pop
or
mov
scas
loop
cmp
xor
cmps
xor
adc
mov
iret
pop
pop
jbe
push
cmp
pop
xchg
and
rol
add
xor
call
inc
test
push
sar
test
inc
dec
add
sub
cmp
imul
adc
cmp
mov
sar
fldenv
push
test
rcl
daa
movs
test
sub
push
or
sbb
cmp
mov
sti
or
mov
push
xor
lahf
lds
mov
xchg
mov
ins
cwde
jmp
les
(bad)
out
xchg
jge
bound
jb
call
sbb
movs
dec
hlt
in
in
movs
out
lds
daa
cmp
(bad)
cs
jmp
imul
rol
jmp
cs
xchg
add
in
add
jne
pop
cmp
(bad)
adc
or
inc
jecxz
pop
xlat
stos
or
out
jbe
pop
mov
lahf
xor
rol
pop
mov
xchg
in
fld
lea
inc
jl
into
inc
mov
outs
aas
ja
mov
xor
xor
fcom
stc
scas
sbb
pop
sbb
inc
cmp
addr16
test
leave
sub
xor
scas
jge
imul
mov
and
das
retf
arpl
or
repz
mov
int3
mov
imul
aas
cmps
std
lea
jge
and
sbb
je
xchg
test
mul
movs
fcomp
repz
jecxz
pusha
jecxz
ja
shr
or
call
sbb
jb
lods
retf
in
leave
addr16
dec
pop
stos
xor
imul
dec
test
inc
cli
dec
xor
retf
imul
add
in
cmps
bound
icebp
or
jmp
out
mov
pop
jmp
push
inc
add
lds
mov
loopne
adc
or
mov
inc
and
les
push
xchg
fwait
aas
dec
mov
add
pop
ret
add
xchg
or
xchg
scas
push
cmps
dec
(bad)
in
sti
lea
sub
fist
sub
jnp
popf
add
addr16
xor
push
shl
in
fucomi
lock
pop
pushf
xchg
inc
pop
jp
fdiv
pop
loopne
loop
rol
pop
push
push
call
stos
fsub
mov
inc
xchg
out
lds
fimul
stc
push
jae
das
jb
lea
in
add
rcl
mov
mov
xor
jne
cmps
push
sub
imul
aad
jl
mov
shr
xchg
cmp
stc
mov
out
adc
push
pop
mov
leave
stos
outs
icebp
ror
pusha
sub
inc
jne
dec
adc
enter
lds
dec
pop
cmps
or
loope
mov
mov
jg
in
xchg
mul
xlat
mov
sbb
je
and
(bad)
aaa
and
scas
xchg
jl
gs
pusha
cmp
fwait
jae
loope
pop
shl
jns
in
test
add
push
out
cwde
(bad)
dec
or
outs
sub
lea
mov
pop
sub
or
mov
lahf
or
adc
jg
xchg
mov
nop
mov
das
push
imul
and
jg
inc
sbb
jnp
cmp
imul
das
xchg
das
jnp
sbb
xchg
sub
mov
mov
sbb
mov
xchg
add
mov
mov
sub
aas
rcl
jge
sbb
in
xchg
lods
adc
jge
popf
adc
mov
push
test
sub
fdivr
sub
dec
pop
adc
lock
fidivr
xchg
imul
(bad)
adc
sahf
fwait
in
repnz
enter
lea
push
loopne
retf
icebp
in
mov
xchg
xor
mov
dec
(bad)
pop
cmp
and
dec
(bad)
jmp
and
in
xchg
jmp
pop
xchg
xor
mov
int3
sub
push
push
test
cmp
outs
idiv
cmp
sbb
jns
mov
xchg
pop
jecxz
idiv
and
xchg
(bad)
cmp
call
xchg
mov
pop
push
fisub
cld
xor
jae
ss
jmp
mov
push
rcl
call
pop
out
xchg
neg
(bad)
aas
pop
or
jl
pop
dec
ins
out
call
mov
mov
fldcw
ficom
ret
mov
jle
dec
cdq
add
sub
cmp
(bad)
fisubr
xor
daa
sub
mov
mov
(bad)
sti
pop
jle
add
adc
pop
xchg
push
xor
cdq
ins
hlt
dec
jecxz
xchg
and
xchg
cmp
aad
in
cmp
nop
(bad)
mov
jecxz
xlat
xchg
mov
mov
push
adc
dec
nop
sahf
sub
sub
pop
inc
shr
imul
fnstsw
push
jecxz
fsub
pop
push
adc
mov
(bad)
jg
adc
movs
ds
sti
sahf
dec
xor
jnp
sub
lds
jmp
xor
mov
dec
aas
pop
push
nop
xor
cmp
pop
mov
inc
cmp
or
jp
adc
xchg
fisubr
and
or
jle
mov
dec
mov
xor
add
dec
sbb
loop
add
mov
(bad)
repnz
rcr
xchg
into
or
test
stos
mov
push
cmc
test
cld
test
sbb
test
jg
int3
push
int
add
xchg
ins
jecxz
pop
mov
mov
je
(bad)
mov
dec
es
leave
push
addr16
xchg
test
mov
xor
jo
int
xchg
lahf
sbb
scas
push
dec
nop
in
sar
sbb
jp
pop
test
ret
sbb
or
arpl
cld
sub
js
xchg
movs
cmp
pushf
cmp
(bad)
mov
movs
cmp
retf
mov
cmps
ins
ss
out
test
push
sub
add
test
mov
or
xchg
xlat
push
mov
neg
mov
and
scas
sub
cmp
jo
push
dec
lea
add
pop
sbb
pop
cmps
fcmovnu
mov
add
inc
(bad)
pop
cld
sbb
sub
call
(bad)
pop
sub
xor
sbb
je
das
popa
xchg
xchg
mov
int3
rcr
cdq
mov
out
sub
jmp
sub
js
adc
pusha
mov
nop
lods
lds
cdq
data16
xor
bound
sbb
ins
sub
lods
imul
js
push
adc
pushf
mov
stc
push
ds
je
div
inc
xchg
mov
or
adc
xchg
mov
cmc
pop
mov
dec
push
jle
fisttp
sbb
sub
pop
pop
sub
jmp
mov
daa
stos
out
mov
loope
jle
out
arpl
cmps
mov
xor
out
int3
pop
mov
push
div
mov
sbb
mov
fst
xchg
mov
cmps
jecxz
or
xchg
dec
mov
cmp
jg
loop
sbb
popf
cli
rcl
loope
push
mov
enter
gs
lahf
add
add
jecxz
ins
scas
pop
dec
fdivr
ficomp
cmp
mov
mov
int
std
mov
pop
dec
push
cwde
out
ja
(bad)
adc
gs
mov
and
adc
pushf
xor
mov
cmp
jg
std
push
test
loopne
add
outs
jno
test
push
test
fst
mov
push
xor
mov
cmps
ret
xchg
inc
xor
ret
dec
sbb
enter
out
add
ins
add
xlat
rcr
not
js
sbb
mov
cmps
stos
add
loop
aad
ss
scas
mov
xor
xchg
mov
icebp
ds
and
push
jmp
dec
ret
lods
addr16
pop
jg
inc
fiadd
punpckhdq
(bad)
(bad)
(bad)
jg
(bad)
aaa
ds
jl
pop
aam
pop
xchg
js
cli
mov
stos
in
push
ss
or
xlat
xchg
or
or
in
inc
rcr
pop
enter
mov
push
dec
rcl
mov
mov
neg
adc
nop
or
mov
out
xchg
les
jg
cmp
aaa
pop
pop
cmp
pop
dec
in
cwde
retf
aas
arpl
dec
pop
or
in
imul
loop
jbe
sbb
add
adc
shl
push
xlat
sbb
retf
dec
push
and
aaa
aaa
lea
es
mov
rcl
in
jp
lods
lods
sbb
jb
in
fs
inc
lahf
mov
mov
pop
sbb
lods
ins
sbb
sar
sub
stc
dec
dec
out
in
cmp
and
stos
add
cmp
leave
cld
xor
sbb
int
outs
push
cmp
sub
and
call
fwait
inc
(bad)
pop
ja
sub
adc
inc
retf
aad
cmp
popf
test
push
mov
dec
ss
dec
jae
and
rcl
fcmovnb
cdq
enter
and
dec
jle
daa
sub
adc
mov
adc
xchg
call
adc
push
xchg
ror
pop
(bad)
in
scas
push
pop
test
sbb
imul
pop
or
test
add
inc
push
fsubr
xchg
loopne
retf
push
out
add
xchg
xchg
ja
scas
add
rcr
ja
(bad)
sub
repz
popa
xor
sub
inc
inc
aas
mov
adc
mov
xchg
adc
push
mov
mov
push
mov
push
lahf
inc
push
imul
(bad)
push
cwde
stos
and
dec
imul
into
lock
dec
imul
push
and
xchg
push
ins
cli
adc
data16
sbb
call
or
cmc
out
add
ret
pop
jo
inc
fsin
cmc
or
mov
xchg
clc
pop
scas
xchg
xchg
mov
and
lahf
repz
adc
inc
repnz
push
dec
(bad)
jp
jmp
sub
int3
and
push
mov
dec
in
retf
loope
cld
xor
pop
add
fcomi
xchg
pop
das
mov
fbstp
shr
retf
aam
into
pop
jecxz
mov
adc
es
lock
pop
mov
data16
jle
fsub
retf
ret
mov
(bad)
shr
push
or
mov
ins
push
cmp
mov
lea
lea
test
or
push
push
dec
lahf
pop
or
sar
in
or
mov
mov
les
add
nop
loopne
fisub
push
adc
mov
push
dec
in
fistp
cs
xor
neg
inc
adc
lods
outs
mov
ins
cmps
xor
pop
sub
iret
xchg
lahf
pop
add
adc
cmc
test
xor
(bad)
js
fcmovnbe
dec
or
or
cmp
jnp
sub
sub
in
jmp
(bad)
cld
jns
sub
call
xor
sbb
gs
(bad)
sbb
enter
in
xor
call
pop
sub
lods
(bad)
pop
icebp
sub
push
ins
mov
or
pop
(bad)
jb
repz
sti
shl
cmp
xchg
sub
gs
mov
aas
fld
fwait
sbb
ffree
pop
ror
ja
lea
sub
gs
dec
dec
out
dec
test
mov
sbb
lods
std
cmp
in
retf
cwde
cdq
jmp
push
lea
cmp
mov
int
(bad)
cld
jns
lea
push
jnp
inc
or
(bad)
dec
cmp
outs
jb
and
pop
int3
daa
fist
xor
inc
sbb
xchg
add
(bad)
les
retf
mov
cmp
pop
mov
and
xor
mov
sub
add
ror
xchg
fstp
jnp
test
add
mov
jns
(bad)
rol
ficom
addr16
gs
mov
mov
dec
add
loop
mov
idiv
mov
movs
mov
mov
sar
dec
data16
pushf
stos
cdq
pop
out
or
inc
imul
jmp
(bad)
jmp
imul
cld
popf
xchg
(bad)
cmc
and
sti
icebp
pop
push
not
in
jle
aas
sub
scas
mov
pushf
mov
xor
xor
retf
push
sti
mov
push
repnz
xchg
inc
ret
sbb
lds
iret
pop
push
add
push
inc
cmp
pop
rcr
mov
mov
stos
aaa
jbe
sbb
dec
mov
pop
movs
pop
sub
xchg
fstp
test
arpl
pop
jne
dec
xchg
add
and
push
sbb
jecxz
inc
or
xchg
fwait
inc
scas
sbb
dec
mov
std
loopne
(bad)
sub
cmp
cmps
and
ss
fisub
cmp
in
adc
xor
pop
data16
outs
mov
dec
out
outs
xchg
mov
ficom
sub
add
loop
popa
outs
cmp
jle
xlat
xchg
aam
sbb
daa
int3
data16
dec
enter
mov
stos
xchg
add
jmp
cmc
xchg
push
cld
mov
loope
repz
xchg
stos
inc
sub
test
out
xor
or
retf
(bad)
pop
sbb
loope
call
xlat
cmc
mov
js
push
jae
fwait
out
ds
pop
jmp
setno
jp
jo
cwde
mov
sbb
add
cmp
int3
dec
pop
push
inc
mov
mov
or
std
add
outs
ffreep
icebp
inc
xor
lods
(bad)
retf
push
mov
sub
inc
gs
retf
dec
push
mov
xchg
aas
jmp
add
push
aaa
xor
sahf
dec
das
dec
(bad)
pop
nop
(bad)
retf
xor
imul
fsub
imul
sub
outs
je
jecxz
lods
retf
mov
in
out
mov
xchg
imul
and
sti
repnz
fsub
or
lods
mov
test
movs
inc
jmp
xlat
test
out
add
add
shl
or
push
cmc
aad
das
ins
pop
arpl
cmp
lock
push
adc
jo
fisub
aam
int3
sbb
jb
mov
ret
loope
add
pop
iret
aaa
and
add
rcl
inc
fld
xchg
stc
xor
sbb
dec
sub
pop
ficomp
aaa
sets
fisttp
jno
jmp
cmp
divps
(bad)
ins
and
pop
out
sub
jo
mov
push
jmp
mov
cmp
adc
(bad)
shl
dec
rcr
enter
pop
sbb
xor
cmp
sti
dec
out
shl
das
dec
mov
lea
into
popa
jne
test
jle
sub
mov
and
pop
mov
lods
xor
jae
dec
xor
add
mov
aad
sub
rcl
std
pop
xor
jg
add
pop
jb
jmp
sub
das
mov
clc
stc
inc
push
(bad)
cdq
stos
outs
mov
xor
add
out
(bad)
out
or
or
push
xchg
frstor
xchg
fisttp
das
or
pop
push
int
pop
loopne
cmc
cmp
test
nop
cmc
push
mov
sbb
adc
and
jno
adc
retf
(bad)
xchg
xor
or
in
adc
sahf
adc
push
jae
inc
dec
sbb
fnstcw
inc
mov
mov
sub
sub
lods
out
jb
lahf
sub
push
and
and
daa
adc
test
iret
aam
lods
xor
(bad)
scas
bswap
bound
test
pop
and
xlat
or
icebp
mov
pop
movs
movs
outs
or
rdmsr
fimul
cwde
mov
mov
add
fldcw
inc
xchg
popa
mov
icebp
jnp
mov
or
data16
sub
push
sahf
cdq
ret
test
mov
repnz
cmp
mov
jno
popf
adc
cmc
mov
xor
leave
cmp
and
cmp
cmp
dec
and
cmp
cmps
xchg
pop
xor
push
scas
popa
ret
inc
add
jnp
inc
pop
adc
sub
jns
cmp
movs
nop
jae
es
push
leave
stos
sbb
mov
stos
pop
and
cmp
sti
lock
popa
push
scas
fild
fstp
jp
sbb
out
mov
fisttp
loopne
out
shl
dec
rcr
sub
lahf
cmp
dec
and
jl
inc
jp
mov
cmp
inc
jmp
lea
pop
retf
stos
jns
stc
sub
add
das
(bad)
enter
mov
rcr
aam
xchg
and
push
xchg
adc
retf
loopne
in
(bad)
sar
out
lock
sub
fcomp
(bad)
pop
dec
ins
clc
or
(bad)
sbb
int3
ins
add
fisubr
gs
fidiv
movs
mov
ret
inc
push
out
pop
pop
sub
aaa
fnstenv
mov
jg
mov
add
ss
int
cmp
add
clc
pop
nop
push
ret
jecxz
xor
cli
adc
rcr
fisttp
outs
xchg
mov
or
or
(bad)
add
cli
daa
test
jmp
scas
out
cmps
jmp
xor
xor
outs
fisub
sti
cs
sub
xor
pop
imul
scas
xor
retf
repnz
pop
fimul
int3
imul
cmc
mov
adc
and
jb
ins
dec
mov
fsubr
xor
sti
push
out
mov
(bad)
pop
push
pop
sub
mov
cdq
aaa
(bad)
aam
loop
in
or
movs
add
nop
test
imul
push
dec
stos
out
push
aas
and
push
push
push
dec
nop
push
jge
adc
jo
cs
call
test
jbe
imul
cwde
setae
(bad)
ror
mov
sub
xchg
jb
arpl
out
or
test
inc
ficom
lahf
loopne
loop
data16
cmps
cs
ins
ret
push
and
mov
mov
inc
mov
ficomp
cmps
and
or
ds
pop
aad
call
lea
sub
xor
push
xchg
pop
loop
mov
in
lahf
rcl
cli
sti
jecxz
dec
lds
shl
cmps
push
retf
dec
xchg
les
shl
jnp
cmc
push
xchg
data16
test
mov
inc
mov
lahf
es
sub
pop
shl
popa
cwde
ror
mul
rcr
iret
jns
aad
adc
out
mov
jnp
das
mov
cld
retf
out
adc
sub
ret
call
add
aaa
retf
adc
cmp
pop
ss
jmp
dec
hlt
sbb
xor
jno
test
mov
cs
shl
lods
cli
mov
inc
mov
retf
dec
mov
jae
test
mov
clc
xor
push
loope
cld
push
and
les
bnd
xor
xchg
cmps
push
stc
or
enter
push
pop
(bad)
imul
imul
xor
aad
sub
popf
mov
jo
cmps
mov
nop
stos
mov
add
inc
xchg
movs
scas
jae
fmul
mov
shl
imul
pop
retf
retfw
or
es
jmp
inc
cdq
push
or
cmps
sbb
dec
in
sub
pop
les
in
adc
not
jne
cwde
push
push
clc
jp
fadd
jb
cdq
sub
add
adc
xor
cli
fdivr
js
cmovno
cld
std
cmp
js
rcl
pop
push
aad
pop
pop
pop
repz
mov
jbe
xor
fst
cdq
cli
push
cmp
sub
sub
imul
retf
(bad)
cmp
loop
cld
adc
addr16
retf
xor
arpl
icebp
dec
out
push
cdq
cmp
icebp
int3
pop
cmp
in
sub
or
sub
test
lods
or
gs
leave
call
rcr
mov
or
fist
(bad)
sahf
imul
sahf
(bad)
movs
adc
or
add
rol
push
push
sbb
sub
mov
cmp
(bad)
inc
dec
push
jg
pop
jge
repnz
mov
dec
xor
scas
cdq
or
cdq
ins
das
push
scas
and
movs
jb
cmps
cs
pop
jns
test
daa
push
pop
jge
clc
pop
xor
jp
or
lock
mov
sub
call
mov
pop
sub
xchg
and
xchg
jbe
lock
nop
out
jmp
xchg
fisub
nop
and
idiv
xor
icebp
pop
sbb
sub
mov
lds
xlat
adc
outs
ins
jo
mov
jmp
and
and
pushf
cmc
dec
leave
xchg
(bad)
xchg
(bad)
clc
dec
dec
jp
pop
int
ds
jb
daa
lods
push
fld
or
into
pop
dec
pop
stos
mov
pop
push
out
jl
xor
imul
jnp
icebp
push
pushw
push
gs
pop
sub
shr
jb
fs
sub
and
dec
add
mov
cmps
mov
imul
push
(bad)
cdq
inc
fwait
outs
imul
pop
fwait
lods
lock
push
bound
imul
std
xchg
pop
test
and
pop
jmp
push
dec
sbb
inc
or
xchg
lods
int3
shl
cmp
sub
mov
sbb
int
inc
pushf
sub
(bad)
outs
mov
rcl
mov
sar
call
and
(bad)
xchg
jmp
jmp
adc
mov
arpl
sbb
xchg
mov
push
cmc
pop
sbb
in
cld
dec
je
mov
push
les
sub
std
aas
dec
sbb
mov
cli
add
stos
sub
cli
dec
int3
bound
and
aas
dec
jo
gs
push
pushf
adc
lock
xchg
loop
pop
sbb
add
adc
ins
pop
inc
pop
lahf
lahf
push
int3
std
mov
call
clc
mov
and
mov
pushf
mov
test
(bad)
cld
enter
add
(bad)
stos
cmp
add
xor
push
jecxz
mov
inc
js
inc
cwde
xor
inc
ret
push
xor
mov
sbb
push
lods
sbb
retf
and
inc
lds
jl
pop
inc
dec
add
test
pop
cmp
outs
neg
shl
dec
stc
jo
mov
sub
popa
xchg
push
dec
test
xor
and
jae
rcl
add
inc
fdivr
stos
arpl
inc
mov
mov
jns
mov
(bad)
bound
leave
mov
xchg
xor
leave
jbe
dec
or
mov
lds
jo
jg
jge
add
cmp
jmp
lds
sahf
inc
mov
mov
xchg
jb
jle
lds
outs
mov
adc
jmp
push
mov
fld
push
push
hlt
mov
pop
lahf
bound
xchg
ficom
bound
inc
in
(bad)
mov
pop
pop
dec
test
aas
addr16
loop
add
inc
pop
sbb
xchg
ja
jge
sbb
add
out
inc
jmp
iret
sti
int
pop
inc
les
push
xchg
add
and
mov
fcmovnbe
mov
sti
sub
adc
inc
fcomp
and
mov
xchg
sti
(bad)
faddp
inc
nop
ret
sti
in
or
cmp
fstp
rcl
imul
sti
jbe
mov
mov
test
or
or
lds
pop
popa
jmp
adc
xchg
aam
imul
in
or
or
fprem1
add
repz
pusha
in
in
lods
jp
xchg
fldcw
or
push
jg
mov
push
cwde
cmp
arpl
addr16
mov
inc
fild
movs
xchg
pop
test
(bad)
ss
rcl
jno
mov
repnz
xlat
mov
test
sahf
loope
pop
mov
or
mov
or
out
call
add
mov
sub
jbe
jne
mov
push
adc
jo
cmp
push
mov
pop
add
ds
test
mov
or
cmp
cld
loop
repz
daa
sti
mov
add
cmp
xchg
call
mov
push
ins
add
fistp
in
es
push
jmp
mov
xor
out
stc
push
fisttp
ror
nop
inc
(bad)
int3
nop
mov
je
add
xor
stc
sbb
mov
out
imul
cli
cmp
call
cdq
(bad)
imul
pop
out
or
(bad)
stc
xchg
push
jle
std
dec
sbb
aas
movs
js
pop
fsubr
sbb
adc
xchg
ds
add
inc
jg
pop
xchg
test
(bad)
(bad)
aam
and
lods
mov
push
sbb
sub
cld
xchg
shl
enter
inc
dec
hlt
in
js
aas
mov
mov
xor
data16
jp
fwait
xchg
popf
dec
bswap
outs
pop
leave
inc
ins
xlat
scas
add
push
gs
loope
mov
jge
out
mov
jle
outs
add
inc
jo
pushf
sub
cwde
xchg
ja
outs
inc
(bad)
jmp
jae
mov
xchg
daa
idiv
sbb
cmp
dec
cwde
xchg
or
mov
lds
ins
test
dec
mov
add
or
pop
mov
dec
data16
xchg
and
mov
push
inc
mov
fwait
inc
fldenv
sub
push
lock
mov
adc
mov
scas
int3
adc
gs
adc
push
push
cmp
cmp
pop
and
lock
or
xchg
fucomi
xchg
ret
pop
std
jmp
adc
imul
or
and
adc
xor
xlat
push
les
cmp
scas
or
inc
stos
(bad)
or
sahf
jp
repnz
(bad)
pop
mov
add
hlt
jbe
jmp
jae
ds
cwde
stos
pop
mov
dec
sti
ror
push
scas
call
aaa
ffreep
or
shl
sbb
jge
leave
dec
clc
(bad)
jo
xor
mov
cmc
and
pop
iret
adc
lock
dec
lods
cs
sub
rcr
sub
pop
loop
sub
ret
xlat
push
iret
cs
repnz
jb
dec
add
push
gs
fwait
inc
sbb
pop
jnp
cli
(bad)
adc
movs
clc
cmp
outs
rcl
and
xor
cmp
add
frstor
(bad)
sbb
pop
xor
aad
add
push
icebp
mov
mov
stc
mov
jge
mov
(bad)
call
stos
cmp
cld
stos
iret
xchg
jl
add
dec
mov
pushf
ror
scas
sahf
js
mov
xchg
jae
sar
sub
outs
mov
stos
xchg
mov
push
push
enter
(bad)
outs
add
or
jmp
cmps
add
into
push
sbb
popa
mov
dec
jg
inc
dec
push
js
push
mov
std
mov
push
jl
push
ret
add
xlat
pop
cmp
xchg
mov
outs
mov
mov
mov
icebp
test
imul
outs
fldcw
pop
out
xlat
xchg
lods
jnp
xchg
js
out
xor
add
jbe
cs
or
scas
pop
cdq
shl
cwde
sub
push
sahf
pop
das
(bad)
dec
lods
leave
adc
aaa
stos
lods
je
aam
mov
add
and
test
or
jg
addr16
fist
sub
test
xlat
and
xchg
shl
jbe
ret
jl
repnz
int
and
clc
sub
xchg
ret
ins
in
mov
out
dec
cs
inc
leave
iret
sti
xchg
mov
inc
dec
inc
jecxz
adc
push
loopne
sub
xor
and
ss
mov
dec
repz
push
jbe
sbb
sahf
mov
icebp
jb
ret
jo
cmp
lea
sub
jl
sbb
test
sbb
pop
pop
sbb
jae
lahf
mov
fwait
mov
dec
mov
xor
scas
fidivr
lds
out
popf
shr
pop
cli
xor
push
shl
or
addr16
cmp
shr
sti
add
xor
retf
pop
sbb
jnp
fs
sbb
in
mov
pop
jl
(bad)
ja
and
add
sub
xchg
xor
adc
in
jne
cli
cmp
es
xchg
out
push
and
retf
icebp
push
mov
sub
adc
addr16
cmp
cmc
rcr
jnp
mov
cmp
ins
int
pop
out
inc
jl
mov
mov
loop
scas
push
sbb
inc
pop
and
xchg
xor
es
jo
mov
loope
loop
int
pop
and
adc
aaa
and
push
stos
or
outs
add
dec
pop
ds
ins
mov
test
sahf
dec
adc
mov
aam
jmp
int3
xchg
ins
mov
adc
call
iret
mov
outs
mov
pop
fsubr
pop
mov
adc
pop
cmp
mov
sahf
in
xor
sub
push
adc
sbb
xchg
cmps
rcr
scas
fnstsw
pop
sub
adc
repnz
mov
test
cmps
sub
jge
jno
dec
bound
je
out
push
test
xor
cmp
clc
stos
dec
cmp
inc
retf
jnp
dec
xchg
and
mov
cs
xchg
or
adc
call
xchg
pop
iret
pop
push
(bad)
mov
cmc
mov
xlat
sbb
std
loope
sbb
mov
test
jle
jno
sub
push
cmps
xor
adc
(bad)
mov
pop
mov
(bad)
mov
pushf
xor
clc
shr
cmc
clc
jmp
(bad)
scas
xchg
stos
stos
aam
arpl
es
add
push
enter
mov
mov
out
and
pop
push
inc
(bad)
cmp
loope
pop
sar
add
or
sbb
or
mov
fnstsw
push
fst
daa
movs
or
dec
in
(bad)
lods
inc
mov
jge
inc
popf
fsubrp
cmps
push
dec
push
(bad)
sub
outs
jmp
sar
lods
mov
stos
or
lea
out
aaa
stos
into
or
jecxz
retf
push
aam
ds
or
in
mov
xchg
xchg
or
fmulp
das
pop
push
jbe
fidiv
test
(bad)
dec
cmp
ror
sti
clc
arpl
cmp
sbb
mov
push
inc
xchg
sub
adc
test
adc
mov
leave
pushf
in
popf
repnz
inc
dec
ret
dec
test
mov
cmp
or
bound
dec
inc
imul
aad
mov
adc
in
cld
test
sub
in
push
repnz
cwde
inc
fidiv
mov
cdq
mov
dec
adc
test
test
sbb
or
sub
pop
leave
jns
in
jle
pop
xor
sub
in
out
or
jp
es
shl
cwde
sub
pop
jo
call
cmp
stos
stos
and
sbb
xchg
fucomp
inc
push
cmp
rcl
ja
scas
mov
test
sub
cdq
push
in
cmp
jecxz
sbb
fidivr
mov
enter
in
icebp
fild
lods
sbb
aad
xor
xor
jno
pop
ins
cmp
clc
push
sub
and
push
leave
jnp
repz
pushf
and
sbb
jb
int
call
jne
into
aas
pop
aad
mov
push
pop
cmp
push
(bad)
int
jmp
es
mov
mov
shl
push
cmc
fdiv
mov
test
sub
(bad)
gs
mov
mov
(bad)
xchg
jnp
hlt
xchg
adc
pop
inc
(bad)
mov
push
mov
cmp
adc
or
fst
cdq
xor
push
cmp
dec
test
call
ss
push
xchg
mov
push
jb
sub
enter
adc
imul
mov
mov
test
jno
push
cmp
xchg
mov
or
lods
cmp
adc
sbb
cmp
add
sub
pop
inc
fs
xchg
dec
aas
dec
hlt
ds
xchg
int3
fnstcw
test
sbb
inc
or
ret
cmps
sar
dec
and
icebp
cdq
sahf
leave
mov
push
mov
das
or
push
js
jnp
xor
aaa
test
xchg
xlat
adc
jns
jbe
pop
cli
ret
cld
sbb
test
xor
push
stos
adc
pop
sbb
cmp
stos
fcom
mov
and
sbb
xchg
rol
adc
mov
shr
test
pushf
sbb
xchg
in
xor
dec
test
inc
pusha
popa
repz
popa
add
xor
in
lahf
stc
xor
xor
add
lock
pop
cmp
out
sar
clc
cdq
xor
sub
xchg
xor
rcl
mov
fst
mov
sub
test
jle
xor
aam
out
push
scas
fisttp
dec
repz
ret
pop
mul
hlt
xchg
jb
imul
enter
sbb
popa
dec
(bad)
lods
jg
out
pushf
ss
adc
inc
outs
mov
mov
in
and
movs
xor
out
add
lods
mov
cmp
push
mov
mov
xlat
nop
mov
repz
pop
xchg
mov
fstp
aam
jns
ret
adc
clc
sbb
nop
jp
mov
and
adc
xchg
adc
mov
sub
sbb
add
or
push
mov
dec
mov
xor
fbstp
fwait
or
and
aad
test
xchg
mov
adc
int3
xor
dec
fs
adc
sub
cli
push
mov
mov
xor
mov
jl
cmp
int
sub
ss
int
(bad)
test
retf
push
or
or
stc
xor
pop
dec
pop
mov
or
adc
fwait
in
test
je
adc
(bad)
fdiv
dec
sbb
mov
movs
stos
push
sbb
add
or
in
enter
pushf
jno
and
(bad)
sub
xchg
ds
out
mov
fmul
cwde
movs
icebp
lods
jge
xchg
into
call
adc
adc
push
pop
dec
addr16
and
retf
cmps
mov
ss
inc
or
cli
pop
and
js
(bad)
scas
mov
xchg
cmps
and
(bad)
push
mov
mov
mov
xchg
xor
or
aad
ins
dec
les
icebp
add
ficom
ja
xchg
into
mov
xchg
and
dec
dec
addr16
cmp
call
and
push
mov
shl
arpl
retf
push
cmp
or
jge
imul
and
xchg
dec
and
mov
aad
push
mov
jae
or
test
retf
cmps
jns
mov
sub
mov
inc
pop
das
mov
dec
push
imul
xor
sub
add
out
push
xchg
mov
jge
je
(bad)
jp
cmps
popf
sbb
cdq
push
add
clc
pop
hlt
das
sub
lods
bound
mul
cmp
xbegin
push
adc
pop
xchg
jmp
or
leave
sbb
les
ror
inc
push
sbb
adc
sar
rol
sahf
sar
ds
div
mov
lea
int
lods
rol
sbb
add
ficom
leave
cmp
mov
call
xor
cmp
sub
popf
mov
pop
or
sbb
jp
dec
dec
jecxz
mov
sbb
cdq
xor
(bad)
(bad)
dec
lods
es
add
call
call
push
nop
cmps
jp
mov
xlat
mov
xchg
ret
nop
ret
jo
mov
test
movs
aam
fnstsw
push
mov
lahf
ss
ins
push
add
fisub
lock
into
jle
in
enter
jno
push
add
rol
sub
aam
lsl
push
mov
ret
ins
push
sbb
xor
mov
mov
add
fist
add
fadd
sbb
rcr
dec
fmul
and
jno
fldenv
div
mul
jnp
add
xchg
out
jae
push
test
mov
sub
lods
xchg
push
mov
out
cmp
and
loopne
cmp
imul
mov
lods
cdq
fcomp
jl
(bad)
imul
hlt
std
sbb
shr
push
popa
dec
cmps
movs
lods
and
cmp
(bad)
retf
jno
push
shl
adc
lahf
jne
push
mov
das
aas
lock
mov
sbb
pop
inc
not
push
mov
movs
xlat
cmp
jo
ja
dec
cmc
mov
retf
(bad)
and
sub
mov
and
mov
stos
test
jge
or
shl
mov
lahf
add
jge
sbb
outs
popf
leave
je
and
not
into
pop
pop
mov
push
add
ret
sub
fisub
and
repz
pop
jmp
ss
or
in
mov
mov
mov
sbb
pushf
movs
jle
dec
inc
ja
inc
movs
mov
mov
(bad)
movs
fwait
mov
retf
inc
dec
scas
mov
in
xchg
pop
pop
xchg
cmp
popa
xor
and
nop
mov
nop
ins
nop
xchg
test
pop
jae
out
jb
dec
push
adc
xchg
adc
fsubr
ja
into
or
clc
les
push
jns
or
fimul
pop
sub
neg
iret
mov
jmp
pop
scas
mov
mov
fnstcw
fcomp
mov
mov
nop
stos
xor
sbb
(bad)
cmp
inc
imul
rcl
add
fsubp
mov
ds
daa
jle
add
jge
jg
rcl
sti
loope
popa
es
inc
jmp
imul
inc
ret
loopne
adc
loop
addr16
xchg
jbe
adc
push
sbb
test
mov
(bad)
mov
inc
mov
stos
outs
je
iret
mov
ret
jno
pushf
inc
outs
and
cld
pushf
cwde
and
call
xor
cwde
sbb
aaa
sub
loopne
mov
(bad)
mov
dec
push
sbb
sahf
je
sub
or
dec
pop
pop
fxch
add
ror
cmp
or
jbe
or
(bad)
in
in
sbb
or
je
push
lock
dec
adc
sbb
cmps
loop
(bad)
push
std
mov
popa
add
(bad)
sub
cwde
mov
mov
ins
repnz
sub
mov
or
lock
mov
stc
add
add
push
(bad)
mov
cmp
cmp
movs
jnp
cmp
and
cmc
aam
jbe
adc
and
push
mov
cmp
mov
add
add
pop
or
xchg
and
test
dec
inc
pop
je
push
dec
bnd
and
je
jmp
ss
mov
xchg
dec
mov
push
inc
cmp
lea
push
adc
add
std
popf
mov
fcom
mov
or
mov
adc
mov
lock
(bad)
mov
sahf
out
and
lock
pop
sub
mov
mov
and
mov
retf
mov
mov
xor
or
loope
dec
test
adc
fidiv
(bad)
and
popf
mov
int
ror
adc
enter
icebp
sbb
adc
call
mov
pop
ds
popa
fcmove
sbb
(bad)
jge
les
add
sti
(bad)
jl
fcomip
pop
and
or
pop
loope
pop
dec
mov
mov
dec
sbb
movs
je
mov
dec
adc
adc
js
and
ret
cmp
add
cs
cmp
jae
push
(bad)
inc
cmps
or
mov
adc
out
std
cmp
pop
cmps
adc
fnstsw
daa
mov
cs
std
xor
xchg
cs
rcl
arpl
arpl
es
dec
push
loopne
pop
mov
or
(bad)
iret
add
ss
xor
daa
mov
fwait
mov
cmp
cmp
mov
rcl
sbb
mov
sbb
xchg
mov
mov
xor
mov
or
cli
mov
jmp
mov
pop
mov
(bad)
inc
mov
stc
cmps
push
sbb
xor
ror
pop
out
pop
cmp
div
cmp
or
push
dec
mov
ror
(bad)
into
pop
pop
jl
sbb
add
dec
lods
xchg
xor
pop
push
cmp
add
in
cdq
push
xor
and
mov
mov
ret
retf
(bad)
das
mov
stc
pop
inc
mov
or
aam
xlat
xlat
imul
xor
xchg
mov
pop
pop
xchg
mov
mov
(bad)
fldcw
rcl
dec
mov
cmp
aas
std
ja
imul
fdiv
adc
pop
push
cmps
mov
retf
ret
jae
les
fld
int
inc
pop
xor
lea
pushf
jae
mov
mov
js
or
dec
test
adc
pop
ds
xchg
pop
(bad)
enter
cli
(bad)
aam
sbb
iret
mov
xchg
xor
cs
repz
adc
movs
push
in
lahf
sbb
icebp
and
push
add
rcl
sbb
outs
inc
retf
mov
mov
dec
jb
lods
push
shl
sbb
xchg
ins
ss
mov
outs
test
movs
xchg
fwait
outs
or
ror
jae
sar
pop
adc
jno
adc
push
in
arpl
test
push
push
xchg
jle
neg
out
aaa
out
mov
xor
add
xor
das
rol
bound
jge
push
mov
je
and
lock
int3
(bad)
rol
mov
inc
adc
and
cmp
cmps
adc
cmc
push
(bad)
loopne
push
mov
add
sbb
push
jg
daa
pop
jmp
mov
lods
mov
pushf
lahf
mov
and
jl
and
push
fistp
adc
retf
sbb
mov
or
dec
std
or
aad
xor
cmp
pop
into
mov
inc
dec
fdiv
or
mov
pop
sbb
pop
mov
xchg
xor
mov
mov
dec
cmp
popa
rcr
sbb
inc
(bad)
push
stos
mov
adc
(bad)
outs
xchg
cmps
leave
xor
ret
lods
mov
repnz
jb
stos
sub
mov
jl
mov
push
daa
and
push
mov
lahf
mov
out
jg
cli
mov
cmps
lock
mov
pop
and
js
cmp
(bad)
shr
retf
(bad)
enter
and
dec
or
test
xor
or
pop
dec
(bad)
aas
daa
inc
inc
fwait
cmp
sub
pop
popf
aas
add
xor
mov
out
test
sbb
jns
(bad)
fsubrp
in
cli
test
xchg
sbb
adc
out
add
inc
mov
and
les
push
and
ficom
bound
es
leave
mov
xor
mov
xchg
cmp
jae
adc
dec
xchg
sbb
hlt
cwde
pop
iret
mov
cmp
jns
mov
adc
cmp
add
retf
pop
push
aas
repz
fadd
mov
inc
loop
fidiv
or
xor
adc
nop
dec
push
mov
sti
lods
mov
hlt
mov
movs
cmp
cmp
lds
(bad)
stc
mov
out
push
push
out
or
add
fs
add
ds
cmp
sub
ret
pop
sbb
mov
pop
pop
pop
aas
mov
fidivr
fild
out
and
lods
sub
mov
push
dec
cli
test
in
jecxz
dec
mov
fcomp
xchg
and
jl
popa
mov
cwde
fnstenv
std
pop
movs
movs
push
in
test
out
paddusw
and
dec
mov
arpl
(bad)
pop
neg
call
xchg
xor
or
stc
sbb
sbb
ret
push
sub
xchg
cdq
push
pop
mov
rcr
cmc
add
sbb
mov
xchg
js
add
lds
hlt
je
sahf
or
mov
(bad)
pop
arpl
and
jne
lods
imul
int
push
nop
ja
scas
jno
pop
jmp
jmp
daa
mov
movs
cmps
sbb
rol
jg
int3
lods
jl
enter
ret
cld
xchg
je
and
out
cmc
pop
in
or
ret
add
in
test
or
in
cdq
shl
popa
stos
test
or
pop
cmp
pop
push
mov
jecxz
xchg
mov
ret
inc
sub
mov
sbb
dec
push
cmp
sbb
ror
aaa
cmp
mov
xor
in
jmp
imul
iret
push
adc
jecxz
loop
lds
or
mov
cwde
popa
int3
loope
lods
gs
call
retf
icebp
test
push
or
into
jns
cdq
and
push
out
sbb
cmp
out
pop
cmp
gs
clc
mov
aaa
out
fstp
or
stos
mov
mov
sub
fld
out
xchg
push
push
std
push
data16
lods
adc
mov
mov
std
dec
cdq
mov
fimul
fstp
push
pop
iret
push
mov
rcl
int
hlt
retf
cwde
lods
inc
aam
je
vpaddw
push
in
ds
scas
shr
sub
into
and
xchg
pop
add
dec
or
sahf
cwde
pop
add
xor
data16
cmps
in
sub
add
xor
dec
jp
out
test
nop
adc
push
aas
xchg
mov
aam
sub
out
xchg
mov
mov
test
test
repz
int3
inc
(bad)
arpl
dec
stc
enter
push
xor
retf
mov
enter
adc
cmp
(bad)
mov
lods
jge
retf
cmps
imul
jmp
jl
mov
sbb
adc
lods
in
inc
fs
pop
dec
es
jmp
clc
fs
pop
mov
fild
adc
fcomp
outs
enter
adc
add
xlat
dec
mov
adc
idiv
faddp
div
std
ret
(bad)
inc
add
add
aam
mov
lods
enter
loop
int
cmp
lock
or
pop
cdq
add
jmp
call
dec
ds
ins
enter
pop
or
dec
inc
push
pop
add
push
cmp
sbb
pop
retf
pop
pop
stos
mov
lds
(bad)
mov
jmp
pop
xchg
in
rcr
stc
xor
or
mov
aaa
jle
dec
add
cwde
cwde
std
cmp
jge
sbb
push
cmps
(bad)
push
lds
adc
jle
sbb
stos
xchg
out
mov
jns
bound
daa
sbb
cmp
jo
(bad)
cmp
adc
mov
dec
in
int
mov
mov
(bad)
data16
(bad)
push
push
push
sbb
mov
imul
sti
out
and
xor
pop
mov
sbb
push
pop
inc
xor
cli
pop
add
sbb
leave
cmp
or
push
sbb
fidivr
or
ins
iret
fistp
mov
outs
repz
jnp
outs
popa
repnz
xchg
inc
add
stos
xor
lods
pop
mov
pushf
jg
mov
jo
cmc
not
push
int
or
mov
aam
dec
in
adc
stc
les
inc
pop
lahf
(bad)
lods
sbb
cmps
int
or
or
gs
xor
sub
loop
push
cli
out
push
adc
rol
mov
(bad)
fiadd
xor
mov
repz
push
and
jae
les
and
call
mov
in
pop
int3
sbb
enter
fldcw
pop
and
inc
std
mov
ds
ret
lods
or
inc
jns
and
xchg
push
xchg
movs
push
jno
popf
adc
leave
sbb
push
(bad)
fisttp
mov
int3
fdiv
int
push
sbb
arpl
(bad)
jns
push
call
push
and
mov
ja
bound
int3
add
xor
xor
mov
mov
test
mov
cld
pop
cmp
shl
push
icebp
adc
or
jne
mov
jnp
mov
dec
cmps
sbb
mov
sbb
jg
cmp
sar
mov
jp
mov
push
loop
arpl
jno
(bad)
imul
jle
xchg
mov
push
sahf
xor
stos
cli
push
xchg
inc
jnp
xlat
jo
out
cmp
xor
mov
retfw
add
sub
xchg
xor
neg
ins
lock
ret
jge
sar
fsub
adc
dec
lea
sub
imul
and
ins
pop
test
jmp
dec
out
pop
jecxz
lds
fcomp
mov
shl
and
or
lds
int3
int
sbb
repz
ret
aas
shl
and
inc
nop
mov
data16
(bad)
mov
lds
stos
lods
and
jae
data16
test
adc
aas
xchg
sti
(bad)
sub
mov
das
pop
dec
ja
ja
out
mov
push
add
loopne
add
xlat
and
jmp
sub
push
pusha
push
stos
mov
addr16
js
mov
cmps
cmp
mov
out
mov
jnp
bound
or
sar
mov
lods
dec
jbe
mov
jo
ins
frstor
jg
sbb
adc
jle
jecxz
mov
xchg
es
xchg
dec
or
add
xchg
mov
mov
sti
cmp
xchg
sub
pop
and
pop
mov
aam
cmp
mov
jge
push
jmp
fmul
dec
fs
inc
push
push
push
xchg
out
bound
cmps
(bad)
(bad)
or
mov
jl
retf
mov
(bad)
jo
in
cmc
cwde
ret
in
add
inc
or
ins
push
push
out
shl
fst
sar
(bad)
std
pop
cwde
aad
cmps
pusha
call
repnz
sahf
outs
outs
push
repz
pop
mov
les
imul
call
push
push
int
outs
fs
into
mov
xchg
or
inc
jmp
int
cmp
rcr
mov
mov
and
mov
int3
test
aaa
xor
dec
lahf
mov
arpl
loopne
call
adc
popa
and
adc
rcl
xchg
adc
push
fild
cs
(bad)
cmp
cld
pop
cli
mov
fistp
xor
sbb
jne
xchg
jbe
jmp
(bad)
int3
(bad)
(bad)
aad
inc
and
test
(bad)
ds
push
jl
(bad)
stc
jmp
xchg
sahf
daa
fimul
inc
test
xor
push
pop
mov
jb
dec
cmc
sub
jnp
xchg
nop
fidivr
out
lahf
mov
aaa
dec
dec
sub
retf
mov
and
scas
fcmovnb
or
or
data16
cmp
stos
shl
mov
mov
xlat
xor
inc
push
pop
dec
xchg
in
movs
movs
lods
jge
icebp
cwde
dec
pop
dec
push
(bad)
fild
pusha
inc
pushf
xchg
repz
(bad)
adc
enter
xor
add
aad
pop
add
or
scas
add
and
push
add
inc
pusha
popf
inc
jmp
add
jecxz
sbb
pushf
iret
mov
out
popf
dec
adc
dec
push
inc
mov
adc
xor
fldcw
cmp
mov
sbb
repz
std
aas
push
cld
xor
iret
dec
or
push
sbb
mov
fwait
jno
in
push
or
pop
cwde
out
push
or
adc
push
test
cmp
cmp
out
sbb
retf
push
idiv
inc
push
xchg
sub
and
cmp
cmps
std
jmp
retf
add
stos
xor
jbe
adc
imul
dec
pop
call
cmp
sub
jmp
cmp
loopne
ror
and
inc
jmp
or
jle
push
in
jl
enter
nop
test
int
popa
pushf
(bad)
fstp
adc
popf
call
push
cs
dec
push
clc
add
(bad)
cmp
dec
arpl
jno
test
imul
jae
ret
(bad)
shl
push
loope
or
fsub
fwait
mov
iret
mov
xchg
jmp
mov
outs
call
repnz
xor
push
jne
in
cdq
lds
lods
dec
add
(bad)
movs
push
int
gs
fadd
cs
jg
jl
retf
push
stos
cmp
mov
adc
xchg
(bad)
out
aad
push
jmp
jb
arpl
loopne
pop
out
je
das
jecxz
add
mov
pushfw
leave
movs
jno
jmp
mov
mov
push
xchg
mov
pop
xchg
push
cs
cmp
ret
jne
push
sbb
pop
push
jo
dec
cmps
cwde
jmp
std
push
push
test
xor
in
and
cs
push
jle
pusha
cmp
mov
and
jnp
sub
and
jge
fld
push
mov
ss
jecxz
xchg
popa
sbb
or
mov
add
mov
sbb
scas
ret
lods
xor
mul
ret
xchg
xor
xchg
xor
gs
shr
and
mov
imul
cmp
inc
lock
fidivr
(bad)
push
packsswb
and
(bad)
mov
mov
push
loope
and
cmp
mov
push
mov
xchg
imul
cmps
sti
jbe
aam
dec
retf
and
pop
mov
or
inc
lahf
xchg
aad
ja
xchg
mov
mov
dec
pop
popa
and
into
shl
cmps
and
nop
xchg
pushf
arpl
mov
popf
leave
fidivr
pop
cs
push
jl
adc
push
add
cmp
icebp
push
mov
pop
mov
call
jb
mov
out
(bad)
and
popf
cmp
adc
cwde
pusha
ins
and
hlt
call
jo
push
jb
outs
push
jns
mov
jge
dec
(bad)
xchg
popf
lods
xchg
mov
lods
cmp
xchg
rol
jae
pushf
lahf
icebp
push
sbb
(bad)
pop
shr
xchg
frstor
inc
outs
call
fisubr
das
mov
clc
mov
bound
or
push
bound
mov
jnp
rol
ret
int
dec
sbb
(bad)
pop
pop
mov
mov
mov
ds
cmc
stc
lods
push
aaa
in
adc
ss
enter
in
cdq
mov
fwait
dec
mov
dec
mov
jbe
dec
sbb
cmps
inc
cli
and
mov
mov
xchg
xchg
mov
stc
xor
pop
pusha
add
imul
lods
and
(bad)
in
lock
mov
(bad)
call
xchg
iret
dec
and
ficom
push
(bad)
xor
mov
cli
adc
shr
ins
fdivr
push
adc
or
push
outs
scas
sub
hlt
jb
scas
push
mov
inc
pop
ret
dec
retf
js
sub
sbb
adc
jbe
rcr
mov
jno
(bad)
aad
adc
adc
ds
pop
dec
jecxz
aaa
rcl
cs
mov
int
xchg
retf
pop
jg
enter
lds
jbe
sbb
push
movs
mov
pop
cmps
icebp
jmp
out
dec
pop
cmc
mov
nop
jecxz
jnp
jo
jmp
xchg
mov
pop
dec
sbb
(bad)
leave
aas
dec
or
loope
push
push
out
sbb
pop
sbb
pop
movs
pop
jne
and
dec
outs
das
aam
fyl2x
imul
into
pushf
sbb
cmc
mov
test
sub
or
push
ins
in
sbb
sbb
rcr
aam
xor
push
fwait
and
sub
sbb
push
push
jmp
cmps
in
ins
jno
movs
es
call
jnp
mov
pop
adc
sbb
js
cwde
cmc
jmp
jne
neg
push
icebp
repz
adc
ret
jne
leave
into
push
pop
ins
jp
lea
push
movs
fisub
daa
neg
mov
ins
add
jo
mov
xchg
sub
in
xchg
mov
es
ret
stc
in
daa
call
sub
mov
push
add
stos
cdq
mov
mov
pop
movs
mov
cdq
nop
or
add
cmp
into
adc
ins
sahf
xchg
fisubr
cwde
xor
aam
mov
int
push
je
ret
sti
fidivr
add
in
shl
enter
and
push
div
cmp
xchg
push
mov
sar
push
cmps
adc
pop
or
mov
and
aam
(bad)
(bad)
call
xchg
loop
jo
das
in
jnp
mov
xor
sub
bound
loopne
cli
sbb
cs
and
je
ins
mov
xchg
or
mov
cmc
sub
or
sub
add
movs
fmul
neg
div
aas
ror
lods
cmps
adc
inc
adc
jnp
shl
cmp
mov
(bad)
mov
jnp
sub
sub
jno
data16
adc
xor
fnsave
pop
mov
sbb
push
mov
aam
jno
fnsave
fdiv
xor
loop
adc
aas
fcomp
mov
(bad)
xchg
retf
fsubp
cli
sub
mov
inc
pop
setns
loope
adc
mov
in
add
jmp
iret
sbb
inc
cwde
mov
inc
and
fstp
dec
sar
sar
push
and
and
fistp
(bad)
loopne
push
and
aaa
pushf
sub
push
dec
ret
shl
test
retf
jne
stos
xor
xlat
sbb
inc
sub
dec
lods
loope
aam
jg
dec
fmul
jmp
dec
ds
adc
cdq
mov
cmp
cmp
and
sub
adc
out
cld
fst
ins
js
and
icebp
push
and
sub
loop
push
movs
sub
jmp
jmp
mov
std
retf
sbb
sub
das
pusha
jle
dec
sar
dec
mov
and
shl
rep
mov
into
pusha
inc
popf
pop
cmps
std
mov
lahf
ss
or
and
bndldx
add
mov
loop
(bad)
test
or
mov
pop
push
push
out
sti
xor
xor
shl
daa
mov
mov
push
loope
leave
inc
dec
repnz
iret
add
loope
xor
mov
nop
mov
mov
mov
(bad)
stos
mov
cmp
fisub
and
xor
data16
push
push
lods
pop
jo
dec
(bad)
out
xchg
pop
mov
ins
jmp
ins
sti
fs
sbb
xchg
(bad)
mov
pop
out
icebp
inc
inc
int
loopne
fstp
mov
bound
and
ror
xchg
neg
pushf
mov
ret
out
fist
pop
ficomp
aad
cmp
and
stc
clc
bound
sbb
push
fsubr
mov
inc
pop
and
jno
push
inc
xor
lahf
push
out
iret
fdiv
pop
cmp
pop
xor
and
fbld
pop
out
jo
adc
test
gs
mov
xchg
bound
mov
push
jae
dec
xchg
ret
into
js
xor
retf
push
add
fnstcw
ds
or
rcl
int3
sti
lods
xor
adc
ins
pushf
xchg
rcl
imul
xor
mov
pop
stos
or
ret
cmc
inc
mov
mov
out
pop
pop
sahf
sbb
lock
adc
cmp
mov
push
dec
retf
movs
stos
loop
add
in
dec
jno
popa
add
adc
jmp
fs
sub
add
mov
mov
and
pop
inc
pop
es
adc
push
jbe
sub
retf
pop
xchg
out
jns
mov
pop
(bad)
addr16
(bad)
aad
and
sbb
sub
sbb
adc
out
xor
mov
sbb
xor
dec
(bad)
pop
out
js
lods
sahf
outs
inc
(bad)
push
aas
sar
adc
repz
jecxz
cmp
(bad)
sbb
add
pop
jmp
cli
cs
sub
jns
cmps
(bad)
rcr
and
or
pop
lds
into
sub
jge
push
jo
loopne
xor
mov
out
out
xchg
jp
int
sti
push
mov
adc
pop
and
sahf
cmc
adc
rcr
jge
iret
cmp
jnp
arpl
inc
int3
and
pop
(bad)
fist
mov
inc
xor
or
inc
pop
jl
pop
mov
aam
add
in
nop
jb
out
add
and
pop
repnz
mov
push
add
mov
mov
jecxz
data16
popf
paddsb
jo
cmp
aam
jno
jne
fisubr
mov
int
mov
data16
cmps
daa
xchg
or
int3
xor
xor
mov
pop
dec
and
out
scas
sub
inc
adc
jo
dec
lods
(bad)
imul
cmp
ja
dec
xchg
dec
cmc
cmp
imul
xchg
mov
(bad)
cmp
cld
aaa
hlt
out
iret
mov
movs
jno
fcmovnbe
les
shr
movs
mov
inc
shl
cmp
sbb
dec
xchg
rcr
add
push
call
cmp
ss
in
jb
stos
lahf
or
test
scas
repz
ret
add
lahf
repnz
rcr
and
lock
push
mov
loopne
push
and
xor
jnp
mov
mov
xor
xchg
add
imul
jb
push
jns
jp
xor
mov
mov
jl
sub
xor
pop
mov
int
pop
shr
mov
mov
pop
cmovno
fld
popa
push
or
mov
xor
ds
jp
sub
(bad)
fprem
enter
or
inc
cmps
mov
or
in
xchg
xor
sub
(bad)
ror
add
aaa
pop
jbe
xchg
push
dec
ins
sti
rcr
push
sbb
cwde
sub
cmp
xchg
mov
cmc
xchg
or
gs
inc
call
push
and
and
imul
fild
in
add
stos
and
sbb
jp
and
cmp
lds
pop
imul
dec
shl
lods
jle
sub
out
into
shr
inc
push
or
dec
out
pop
retf
or
in
out
shl
je
je
(bad)
cmp
das
and
mov
jne
sbb
pop
adc
(bad)
adc
in
jmp
sbb
aas
stos
push
jae
or
jo
jg
mov
cdq
pop
sub
pop
fwait
sbb
out
xchg
jb
test
retf
not
(bad)
inc
cmps
fwait
jecxz
dec
or
lock
loope
push
jp
cmp
push
jne
sbb
mov
(bad)
fst
cmp
jge
int3
sub
cld
stc
(bad)
xchg
out
outs
add
mov
mov
mov
pop
iret
adc
imul
sub
push
xchg
or
jbe
adc
xor
pop
jp
in
arpl
ins
imul
xchg
loop
popa
inc
ds
(bad)
mov
jecxz
mov
mov
iret
fiadd
in
mov
inc
mov
push
adc
daa
stc
neg
hlt
stc
icebp
hlt
lock
inc
mov
cmps
adc
add
sbb
dec
loop
mov
pop
outs
loope
mov
mov
in
es
push
fwait
mov
pop
adc
inc
in
sub
pop
movs
mov
push
cdq
neg
sbb
push
push
(bad)
xchg
jo
push
inc
imul
xchg
lea
pop
frstor
in
xor
(bad)
leave
pop
movs
xor
xor
(bad)
cmp
or
clc
iret
das
cld
jns
dec
lahf
push
shr
ret
add
daa
pop
fild
push
jno
and
add
push
sub
cdq
aad
pop
jmp
movs
call
xchg
cmp
push
jbe
sub
xchg
xchg
push
aad
xor
mov
shl
mov
cdq
int3
in
leave
pusha
xchg
pop
inc
xchg
inc
jb
or
mov
mov
mov
jno
mov
adc
test
adc
push
adc
gs
push
nop
pop
push
and
pop
clc
lods
push
mov
xor
popf
(bad)
jne
cmp
test
xor
mov
add
adc
mov
and
cld
retf
mov
fstp
pop
jmp
aaa
jne
ficom
fnstsw
xchg
in
test
cmp
(bad)
stos
pop
cmp
mov
enter
in
retf
jb
call
retf
test
cmp
jge
imul
ja
xor
test
repnz
pop
gs
(bad)
hlt
inc
jecxz
int
and
mov
inc
fnstsw
mov
add
xor
dec
dec
xor
test
retf
add
aad
add
sbb
push
jnp
aaa
xchg
(bad)
fcom
push
sbb
xchg
xchg
pop
inc
or
retf
cwde
dec
mov
inc
rcl
pop
pop
popf
and
push
add
inc
mov
jp
or
mov
fcomi
jg
xchg
and
and
into
test
pop
or
sbb
xchg
daa
mov
iret
mov
adc
(bad)
fdivr
cwde
add
scas
jmp
cmp
fcomp
xchg
imul
stos
lahf
adc
jle
pusha
or
jge
dec
mov
sub
push
add
inc
jle
jg
pushf
jo
scas
push
cmps
or
bound
aad
dec
sti
or
sti
movs
repnz
data16
popa
in
icebp
sub
push
addr16
sbb
and
nop
das
cmp
aad
jb
popf
addr16
inc
and
stc
fcom
sahf
aaa
and
mov
xor
mov
jb
add
sub
stos
call
loop
ret
mov
add
jp
(bad)
cmp
inc
dec
xchg
stos
fist
xlat
adc
and
addr16
or
mov
jmp
mov
in
xor
sub
sub
inc
dec
pushf
ror
sbb
pop
int
rol
jp
dec
into
enter
dec
std
clc
jbe
mov
sub
and
sub
shl
sbb
fild
clc
das
pop
cmps
xchg
mov
mov
mov
mov
jmp
daa
inc
jp
push
out
mov
repnz
cmp
(bad)
and
sub
rcl
jp
test
es
add
mov
sub
out
ss
fistp
xor
in
jmp
adc
fcom
pop
aam
add
retf
mov
add
sbb
inc
cmps
je
push
lds
adc
lea
sub
push
cmp
sbb
fcmovnbe
sub
jnp
pop
inc
ret
xchg
sbb
cmc
mov
enter
shl
(bad)
ss
cwde
out
sbb
dec
jns
gs
pop
in
mov
sbb
imul
sahf
aas
cmp
call
push
sub
test
test
cmp
and
xchg
lahf
sahf
cmp
mov
push
xor
pop
jge
mul
mov
xor
lods
lds
xchg
data16
(bad)
retf
jmp
outs
daa
sahf
repnz
mov
enter
sbb
pop
clc
or
xchg
add
pop
fistp
inc
inc
dec
dec
fwait
push
xor
int
mov
pop
lock
pop
int
add
push
xor
pop
dec
retf
jo
cmp
mov
je
inc
js
mov
sub
sbb
push
aam
in
push
fst
jnp
jno
jecxz
sub
repz
lods
loop
das
push
cmps
lock
mov
add
int3
jp
jmp
iret
ins
and
pop
push
xchg
out
push
data16
add
mov
cmp
call
mov
xchg
push
sar
aad
sbb
prefetcht0
inc
push
push
sub
fdivr
and
std
div
shl
inc
dec
into
je
mov
(bad)
adc
or
clc
push
xchg
or
push
xor
jle
fwait
and
pop
xor
jo
mov
ins
hlt
pop
mov
inc
call
sti
or
out
xor
data16
adc
(bad)
sub
add
and
xchg
cmp
rol
pop
ret
stos
sbb
test
jb
mov
mov
lock
call
test
push
mov
bound
hlt
loop
scas
scas
push
addr16
or
xchg
add
xor
adc
aam
shl
or
dec
and
sar
sahf
loop
retf
mov
in
leave
cld
cmps
push
scas
jno
nop
fild
inc
(bad)
rcl
mov
cmc
rcr
fdiv
xchg
or
hlt
mov
push
retf
push
mov
xchg
xchg
jnp
rcl
shr
addr16
fadd
and
std
or
cdq
pop
mov
sub
inc
or
daa
in
xchg
cmps
stc
aas
gs
push
sub
rcr
jne
out
xlat
ins
shr
retf
cmp
aas
dec
or
mov
xchg
das
xor
pop
inc
in
ds
cmp
(bad)
fst
shr
mov
mov
sub
imul
int
xchg
xchg
adc
inc
ss
ds
and
outs
arpl
ja
jle
mov
and
adc
movs
cmp
mov
dec
mov
imul
lahf
push
(bad)
cli
jns
rcl
add
pop
out
cmp
adc
repnz
add
pop
loope
out
add
or
xchg
cvtps2pi
adc
mov
ret
aaa
mov
jge
aam
lods
inc
stc
sub
sbb
lods
popf
xor
cwde
mov
dec
bnd
pusha
xchg
inc
pop
pop
cs
jl
cmp
jns
cwde
imul
adc
jg
in
xchg
loope
xor
or
sub
cmp
jo
imul
ret
test
cwde
retf
repnz
xchg
jecxz
inc
cld
dec
inc
xchg
aam
int
push
dec
call
test
mov
xor
sub
or
inc
sub
mov
fstp
rol
mov
imul
test
rcr
mov
jp
jle
sahf
sbb
push
into
popa
mov
adc
add
mov
jns
popf
mov
pop
cmp
add
inc
js
push
mov
lods
pop
(bad)
in
sub
dec
jl
jge
mov
inc
sbb
stos
fadd
lsl
outs
and
mov
adc
movs
fldenv
lahf
(bad)
mov
add
(bad)
test
shr
xchg
stos
std
push
scas
(bad)
mov
dec
sti
push
pop
push
dec
mov
push
push
es
dec
sbb
or
loopne
(bad)
pop
lods
in
pop
ja
jo
popf
xchg
or
jae
addr16
out
pop
mov
icebp
mov
js
cmp
mov
and
xor
fs
addr16
out
jmp
adc
sbb
das
in
jo
dec
fimul
fdiv
adc
iret
js
cmp
cdq
(bad)
leave
or
(bad)
adc
fild
in
shl
mov
cmp
fcomp
xlat
(bad)
jne
scas
xor
dec
mov
mov
jo
jns
or
mov
or
aas
(bad)
loopne
push
jns
call
sbb
call
adc
or
mov
sub
pop
xor
or
mov
imul
repnz
xor
mov
pop
dec
out
imul
cwde
xor
je
outs
popa
xor
jae
add
aas
push
push
in
push
pop
sbb
shr
inc
push
inc
pusha
(bad)
es
sub
mov
mov
ss
(bad)
fwait
retf
xchg
outs
xor
push
in
(bad)
or
push
into
shl
ror
mov
addr16
outs
sbb
jmp
daa
inc
call
mov
ja
xor
pop
and
add
dec
mov
sbb
adc
sub
ds
xchg
sub
cmp
dec
push
(bad)
jmp
mov
xchg
int
inc
fwait
inc
sub
dec
loope
adc
outs
std
daa
fisub
mov
lahf
push
mov
sub
scas
pop
repz
ss
jae
xchg
or
out
push
je
jb
movs
stos
inc
mov
test
mov
fs
inc
pop
leave
mov
or
addr16
jbe
leave
mov
or
xchg
push
sti
inc
and
and
and
pop
push
xchg
inc
iret
icebp
adc
ins
arpl
mov
cs
cwde
xchg
addr16
(bad)
sbb
or
out
mov
rcl
xchg
into
jns
dec
pop
mov
ds
sbb
test
mov
or
or
jnp
add
popf
hlt
xor
cmp
(bad)
lods
xor
je
mov
inc
ins
sub
movs
paddusb
rcr
cmp
cld
dec
iret
fwait
push
and
inc
cdq
mov
out
cld
sbb
jle
push
inc
test
add
cmp
fbld
push
addr16
add
cmp
not
dec
popf
(bad)
je
(bad)
xor
inc
sub
mov
add
mov
and
add
push
fwait
xchg
in
xor
inc
stos
dec
shl
(bad)
je
mov
fsub
xor
inc
nop
repnz
pop
ss
sbb
ins
popa
sar
dec
mov
xor
fdiv
rcl
(bad)
lods
(bad)
xchg
out
inc
outs
iret
cwde
add
or
retw
xchg
jnp
dec
sbb
jne
cmps
psubb
fisub
std
out
mov
fcomp
sub
shr
idiv
in
out
mov
push
int3
and
stos
xchg
sub
pop
and
mov
xor
jmp
ret
push
in
sub
test
push
mov
pop
ins
nop
daa
bound
scas
or
adc
dec
add
adc
push
adc
loop
bound
adc
mov
ret
daa
js
dec
xor
dec
jb
mov
xor
jmp
sar
ins
cld
popf
test
sahf
data16
iret
std
fdivr
add
in
ja
push
jb
mov
mov
push
pop
arpl
mov
lods
sub
idiv
jmp
pop
pop
test
adc
daa
mov
test
fisttp
pop
pop
jge
out
hlt
xchg
loope
mov
stc
jnp
xor
adc
xor
dec
pushf
xor
lahf
mov
sub
repz
stc
aad
int
xor
call
(bad)
jp
cli
daa
outs
int3
jae
push
and
mov
dec
push
sub
mov
mov
xchg
cmp
dec
mov
xchg
inc
stos
xor
jge
clc
mov
jmp
adc
fnsave
add
adc
add
sbb
and
call
aad
data16
cli
jo
cli
pop
data16
xor
iret
lods
fdivrp
fwait
imul
je
lods
rcl
ins
ret
inc
xor
mov
dec
rol
neg
pushf
mov
cmps
std
jle
retf
xchg
xor
dec
add
addr16
mov
call
movs
xchg
xchg
jmp
std
dec
bound
ja
movs
mov
push
add
pop
inc
pop
in
sbb
xchg
mov
mov
icebp
or
clc
mov
dec
dec
stc
cmp
fwait
dec
movs
or
ins
jae
add
popa
aam
push
mov
out
mov
inc
aam
scas
add
test
js
sub
aaa
cmp
xor
sbb
fnstcw
mov
aas
sbb
cmp
add
add
sub
bnd
sbb
jg
clc
stos
pop
shl
pop
sbb
fmul
inc
daa
pop
fimul
jmp
ret
or
mov
fist
pop
xchg
sbb
pop
dec
adc
dec
xchg
mov
sbb
push
mov
dec
test
adc
(bad)
cmc
xchg
call
fnstcw
icebp
int
fs
ret
and
xchg
mov
ja
test
outs
mov
cmp
int3
sbb
xor
mov
xor
nop
ja
jge
pop
mov
cmps
shl
in
jge
test
jmp
mov
popf
out
lods
clc
push
dec
sub
nop
cmp
in
sbb
add
mov
es
push
cdq
popf
mov
mov
xchg
pop
sub
aad
ds
dec
pop
frstor
sbb
sbb
out
idiv
pop
dec
test
mov
push
cld
dec
test
inc
push
shr
xchg
arpl
outs
(bad)
(bad)
xchg
call
cwde
fwait
retf
sahf
cs
and
jmp
fadd
jmp
pushf
xor
rcr
jl
pop
dec
in
sub
lods
sbb
inc
shr
ds
push
scas
jmp
repnz
pop
mov
sub
pop
sub
lea
jle
pop
movs
jno
sub
mov
(bad)
(bad)
jae
cmp
xchg
rol
(bad)
(bad)
popf
xchg
in
push
repz
loopne
push
xchg
mov
xchg
and
aad
pop
enter
cmp
mov
cmp
enter
inc
inc
pop
call
jae
shl
xor
dec
les
jb
jb
pushf
cmp
(bad)
mov
movnti
js
mov
xchg
push
and
add
xchg
cli
retf
xchg
jae
stos
lahf
in
cmps
test
add
or
push
out
pop
pop
add
ins
outs
mov
jle
(bad)
nop
push
(bad)
in
xor
mov
icebp
inc
xlat
sahf
cmp
push
stc
lods
jl
cmps
cmp
fist
ret
mov
or
mov
into
int3
mov
fsubr
pop
loopne
dec
cmps
arpl
aad
fsubr
popa
fldcw
sub
sub
fst
arpl
fs
jecxz
jae
fs
sahf
idiv
mov
jae
or
mov
fild
mov
push
dec
or
(bad)
pop
idiv
test
jno
aad
popf
mov
retf
clc
adc
js
mov
xchg
cmps
bound
pop
outs
cs
dec
mov
sbb
mov
lods
outs
neg
int3
adc
sahf
xchg
dec
inc
shl
sbb
arpl
xchg
xor
dec
inc
fdivr
mov
sub
scas
test
cmp
aad
cmps
dec
dec
fstp
clc
adc
dec
popa
pop
fist
adc
lods
or
or
shl
sbb
and
pop
cmp
lock
icebp
hlt
pop
mov
cld
outs
ss
pusha
sub
mov
lods
cwde
loop
mov
arpl
test
test
mov
xchg
jnp
jnp
sub
(bad)
jmp
lds
fistp
sub
mov
jae
xchg
add
sbb
loop
pop
fs
adc
cli
fisttp
mov
and
xor
(bad)
into
inc
adc
in
in
ficom
pop
mov
leave
jecxz
and
or
xchg
or
hlt
shl
or
pop
adc
xchg
int
aas
jle
mov
mov
mov
fwait
repnz
repz
outs
mov
outs
fisubr
mov
lahf
fs
pop
sahf
push
fxch
ffreep
push
lds
jge
inc
xchg
sub
js
nop
fild
jle
cmp
pop
retf
cdq
xchg
inc
lock
cmp
(bad)
and
aam
push
(bad)
popa
push
stos
add
das
jae
inc
add
rcr
sar
mov
rcr
cld
sub
inc
outs
mov
mov
nop
adc
imul
test
adc
aam
ror
mov
push
dec
out
mov
imul
and
rcl
mov
dec
das
push
cwde
pop
sub
cdq
push
aas
add
dec
pop
cwde
or
pop
retf
lods
pop
pushf
xchg
sbb
jns
int3
sub
push
cmps
bnd
lods
inc
dec
jo
nop
lahf
dec
mov
retf
mov
mov
xor
pusha
push
out
setp
add
or
cmp
cdq
inc
push
fs
dec
hlt
mov
mov
inc
adc
push
cmc
sahf
leave
cdq
push
jno
jnp
mov
pop
xchg
cdq
or
mov
out
dec
(bad)
mov
je
ins
sbb
xchg
mov
inc
repz
push
hlt
mov
xchg
mov
fmul
xchg
stos
into
pop
repnz
mov
add
mov
imul
xchg
fstp
inc
cld
out
inc
push
stos
adc
shl
mov
loope
mov
je
jnp
clc
es
pop
movq
mov
out
lock
push
stos
arpl
jne
mov
adc
add
sti
xor
xchg
cmp
in
(bad)
mov
lea
and
out
outs
push
aad
dec
inc
loopne
pop
pop
or
sub
or
pusha
jmp
jl
movs
ds
inc
cmp
pop
xor
mov
pop
mov
cld
cmp
inc
ficomp
mov
mov
outs
(bad)
aas
xor
daa
lea
sbb
fidiv
cmp
push
add
add
mov
mov
cmp
push
jge
sub
cmc
jecxz
cwde
out
ret
cmp
push
mov
push
js
and
repz
xor
mov
aaa
icebp
popa
mov
and
or
or
push
xor
push
dec
or
lods
pop
rcr
aas
repnz
(bad)
cwde
jp
es
mov
out
imul
ins
push
push
jo
jp
inc
pop
mov
bound
cld
xor
pop
push
cmps
mov
call
mov
daa
outs
add
pushf
lahf
sbb
enter
aaa
std
sbb
and
sahf
mov
push
sbb
xchg
popa
xor
add
in
dec
fcmovu
call
xchg
mul
pushf
xchg
aaa
mov
aaa
xchg
fcomp
push
adc
test
pop
mov
pop
mov
hlt
mov
les
and
mov
add
xchg
jmp
sbb
adc
add
cli
dec
aam
aad
jge
popf
aaa
xchg
mov
fwait
mov
or
mov
dec
jecxz
pop
mov
jne
in
and
bound
jbe
aam
sbb
adc
test
mov
mov
add
and
xchg
inc
adc
or
xor
(bad)
and
retf
movs
dec
cmp
add
mov
aam
cld
pusha
(bad)
movs
inc
aas
cmp
cmc
mov
jecxz
jmp
pop
or
ss
mov
cmp
das
xor
mov
pop
push
xchg
push
mov
aad
sub
push
cli
or
int
ins
or
popf
or
cli
inc
aas
hlt
movs
jmp
repnz
stos
xchg
sbb
xor
scas
enter
dec
inc
lods
rcr
ja
(bad)
cmc
inc
add
pop
retf
and
jae
call
push
retf
scas
dec
xchg
daa
mov
sub
ret
adc
xchg
mov
jo
(bad)
frstor
xchg
mov
ret
inc
popa
div
adc
lods
sub
xor
xor
jb
inc
adc
scas
or
stc
dec
lahf
push
mov
push
mov
push
aam
mov
jmp
out
push
rol
pop
xlat
pop
out
xor
arpl
sti
mov
and
icebp
into
pop
lds
pop
imul
xor
sub
xor
imul
xchg
push
push
lock
cmp
ja
dec
xchg
test
or
mov
mov
cmps
rol
dec
inc
sbb
les
fsub
push
sbb
cmp
or
adc
cmp
stc
scas
sub
jo
(bad)
mov
pop
xchg
pop
jmp
push
ret
sbb
add
xlat
jb
imul
mov
(bad)
fdiv
add
jbe
xor
push
push
mov
ja
sub
mov
jl
outs
jnp
sbb
inc
xchg
dec
fcom
dec
xchg
retf
sbb
pop
leave
adc
add
test
aam
sar
adc
mov
lock
pop
sub
or
jl
and
sub
mov
fbstp
mov
jnp
cmp
es
aaa
aaa
das
out
aas
movs
or
cdq
push
mov
cdq
mov
jb
mov
push
retf
scas
iret
aas
inc
test
dec
cmp
mov
mov
mov
mov
fsubrp
sub
cmp
inc
retf
inc
sbb
cdq
aad
push
push
jmp
push
mov
inc
repz
jge
shl
leave
inc
pop
or
adc
jmp
adc
jns
add
xor
popa
(bad)
push
stos
or
cmp
fistp
jl
dec
sub
mov
jp
pop
ret
bound
aad
repz
pop
xchg
lahf
and
push
xchg
js
dec
push
ss
or
movs
in
repnz
push
dec
es
jle
popa
jle
xor
movs
mov
pop
cmc
test
push
mov
dec
mov
push
scas
pop
ficom
push
mov
mov
mov
cmp
xchg
and
xor
and
mov
mov
add
data16
hlt
cmp
or
dec
jnp
loop
inc
stc
retf
rcl
xchg
sbb
pop
add
adc
jae
cmps
push
pop
cmp
jae
popf
test
mov
aaa
adc
pop
imul
cwde
push
pop
outs
or
add
push
push
imul
push
icebp
clc
stos
pop
icebp
mov
inc
jns
push
add
push
dec
push
ds
stos
inc
push
stos
aad
and
pushf
adc
mov
and
push
mov
and
add
mov
dec
setl
pushf
movs
and
add
push
dec
(bad)
and
cmp
test
imul
out
or
pop
sbb
xor
adc
push
sub
int3
aam
jmp
pop
call
les
jnp
mov
mov
mov
push
call
shl
mov
stos
adc
cmp
adc
ins
and
loopne
jmp
cmp
je
mov
int3
das
jp
or
(bad)
jp
dec
cmp
ja
pop
(bad)
mov
mov
xor
push
xchg
adc
int
jae
and
jno
dec
into
jl
call
pop
(bad)
stos
mov
sub
sbb
cmp
fnstsw
dec
mov
push
shr
pushf
mov
jcxz
sub
sbb
jecxz
test
(bad)
dec
or
out
test
movs
cmp
scas
mov
or
dec
sar
jge
hlt
jge
test
leave
loope
js
xchg
or
in
sbb
inc
xor
in
push
jnp
add
sub
jmp
dec
rcr
mov
ins
jo
js
dec
sub
idiv
fsubr
or
int3
lock
daa
dec
push
out
push
or
add
call
or
add
or
inc
pop
fistp
les
pop
pop
xchg
ja
pop
sar
push
add
movs
mov
(bad)
repnz
loop
(bad)
std
dec
and
dec
lds
xor
fisubr
push
jb
dec
xchg
push
lock
and
cdq
adc
(bad)
std
retf
sbb
add
cmps
iret
xchg
mov
xor
push
js
or
ss
mov
lods
movs
pop
pop
outs
hlt
cmc
push
sub
inc
dec
adc
lods
cmp
xor
mov
add
cmp
aas
retf
(bad)
je
inc
aaa
test
std
loope
adc
add
mov
in
hlt
jns
push
lahf
jne
into
(bad)
mov
shr
leave
add
push
mov
pop
inc
inc
mov
or
or
shl
lea
inc
and
aad
stos
repz
sti
sbb
mov
loopne
ret
sbb
push
fist
cs
jg
bound
mov
loopne
inc
inc
push
call
dec
adc
imul
xor
xchg
dec
sub
int3
(bad)
jmp
jae
aad
cmps
and
sbb
mov
leave
pop
xor
nop
pop
outs
dec
ret
popf
push
outs
mov
jl
cwde
fxch
fdiv
jge
jbe
cmps
dec
pushf
retf
or
xchg
mov
mov
das
xchg
push
out
sub
or
and
xchg
jo
mov
mov
into
sub
dec
jg
or
dec
dec
xor
fdivr
cmps
push
imul
or
cwde
xchg
repnz
stos
mov
shl
mov
fcomp
test
push
in
pop
rcr
dec
pop
ja
push
test
pop
sahf
ja
out
sub
movs
xchg
lahf
jbe
das
ss
dec
and
call
mov
sub
(bad)
and
push
inc
das
sub
mov
pop
loope
xor
ja
mov
int3
adc
(bad)
loop
inc
lahf
leave
mov
js
pop
loopne
jb
imul
push
mov
inc
fidiv
ins
fdivr
mov
jno
or
icebp
repnz
inc
enter
inc
inc
inc
mov
sub
add
push
das
dec
xchg
call
loopne
xor
push
add
fist
xchg
ins
rol
mov
repz
cmp
fmul
bt
ret
jp
push
pop
and
test
cwde
push
sub
mov
ins
xchg
sahf
push
out
push
mul
clc
add
ins
ins
xchg
aam
pop
xchg
jmp
add
pusha
fiadd
push
or
cli
mov
pop
pop
bound
adc
daa
les
mov
out
or
xor
dec
popf
jmp
adc
ja
jle
push
xor
and
mov
repz
and
test
nop
push
mov
add
rcr
push
movs
ret
xchg
call
mov
movs
idiv
scas
mov
pop
out
xchg
imul
je
jg
lock
loope
dec
sbb
jae
cmp
mov
lds
push
rcl
mov
push
push
xor
jmp
(bad)
in
sbb
loopne
ja
fwait
mov
add
rol
sti
push
mov
pop
mov
or
pop
cwde
bound
adc
mov
jb
test
adc
mov
arpl
mov
ret
lods
sub
rcl
shl
pop
cmp
rol
sbb
ins
out
add
push
mov
add
sbb
xor
iret
sub
mov
adc
loope
xchg
cmp
nop
and
cmp
lock
shl
dec
(bad)
mov
xchg
(bad)
mov
sahf
jle
mov
add
outs
sub
or
inc
xchg
int
repnz
mov
jecxz
adc
shl
pusha
xor
shl
add
jl
fcom
(bad)
fadd
cld
mov
mov
xchg
cmc
cmp
mov
push
mov
clc
xor
lods
xchg
outs
out
aas
sub
stos
or
pop
das
sbb
or
dec
ror
repnz
loopne
iret
dec
stos
cmp
ins
push
jbe
mov
stos
(bad)
jmp
jae
imul
or
cli
arpl
bound
sbb
mov
inc
jmp
mov
mov
mov
jmp
dec
fmul
cdq
scas
sahf
xchg
jno
test
retf
push
fst
jbe
mov
xchg
retf
cmp
or
arpl
je
inc
ret
xchg
cmp
sub
repnz
push
add
js
ss
xchg
sub
cdq
xchg
ficomp
push
ds
or
ds
mov
arpl
xchg
ficom
cld
add
les
xchg
pushf
aad
jns
in
in
push
xchg
mov
dec
inc
and
lahf
sub
fnstcw
dec
int3
pop
sub
dec
repnz
and
and
xchg
push
pop
mov
enter
dec
xchg
xchg
cmp
aam
xchg
mov
cmps
fwait
movs
push
jae
test
push
(bad)
and
stos
fsub
retf
push
or
push
sti
mov
cmp
ins
xchg
mov
jge
adc
pop
out
cli
loop
and
clc
nop
jecxz
int
popa
ffree
mov
pop
shl
cmps
xor
test
call
es
int3
fwait
jnp
add
mov
mov
push
mov
mov
cli
cmps
int3
imul
cmp
or
xchg
les
xchg
mov
inc
dec
dec
xchg
xor
sbb
jns
or
cmp
aam
shl
scas
cwde
ja
fmul
cmps
jbe
ret
mov
xchg
cmp
mov
mov
adc
sub
sbb
(bad)
pop
push
cmp
fwait
ja
fwait
adc
pop
mov
dec
pop
mov
pop
dec
loopne
popa
sbb
stos
cdq
neg
dec
sahf
mov
popf
into
fs
into
shr
cdq
mov
ins
ins
fisub
add
sub
cs
(bad)
push
(bad)
adc
jns
fmul
adc
sar
outs
int
sub
sbb
shr
jmp
push
dec
cmps
and
call
inc
das
in
cwde
xor
xchg
clc
fwait
pop
add
sbb
cmps
adc
repz
pop
push
inc
adc
xchg
sbb
movs
xchg
call
in
ret
popw
std
inc
ja
inc
sahf
cmps
daa
xor
push
addr16
out
mov
mov
mov
sar
ds
cmc
or
mov
inc
cmps
ss
or
cli
cmps
repnz
movs
inc
xor
inc
cld
mov
cmp
shl
adc
mov
jmp
cmps
stos
shl
stc
popa
mov
retf
inc
dec
scas
and
jge
mov
xchg
pop
loop
sub
aam
inc
xor
aas
push
jge
call
in
adc
nop
cmp
push
jae
mov
mov
xchg
xor
pop
int
shl
dec
mov
pop
ret
pop
nop
gs
shl
dec
loope
mov
push
ret
out
test
enter
sbb
sti
ffreep
imul
out
dec
cmps
je
inc
xchg
cwde
push
lods
popa
push
dec
int
push
ret
xor
add
fld
mov
rol
or
jo
loop
xor
test
nop
rcr
test
imul
test
ds
ror
cs
mov
sub
dec
je
add
jo
ficom
repz
dec
mov
mov
and
or
add
ja
(bad)
cld
jl
jmp
arpl
pop
shr
push
sub
scas
retf
pop
in
adc
mov
pop
cmp
xchg
mov
lock
(bad)
dec
mov
inc
adc
pop
jge
mov
iret
dec
jnp
test
outs
sub
and
mov
sbb
test
(bad)
cli
mov
ret
xor
pop
mov
adc
ins
das
in
push
test
cmp
pushf
leave
pushf
or
outs
sti
sbb
sar
sbb
sbb
scas
sub
dec
mov
fnsave
neg
jecxz
push
ins
(bad)
(bad)
or
out
in
sbb
(bad)
repnz
(bad)
pop
mov
sbb
data16
and
add
push
cwde
inc
adc
inc
dec
stos
into
cmp
(bad)
dec
out
shr
retf
daa
inc
aam
and
sti
inc
add
in
mov
mov
xchg
sbb
sti
push
loope
jl
int
and
test
dec
and
pop
ret
dec
out
jmp
cmc
push
mov
popa
cmp
rcl
xchg
push
mov
je
sti
int
xchg
stos
lods
das
xchg
imul
fimul
stc
xor
mov
ret
or
rcr
jmp
add
push
xor
sbb
push
and
mov
mov
jge
jmp
xor
pop
cmc
adc
xchg
outs
call
repz
lods
ret
out
sbb
or
pop
sbb
out
je
xchg
cmp
call
jmp
inc
dec
fild
shl
int
or
stos
ret
dec
call
rcr
outs
and
cmp
sbb
es
push
mov
out
jg
call
dec
push
(bad)
jmp
and
mov
fdivr
mov
xor
(bad)
not
jp
and
or
outs
call
dec
and
mov
sbb
sahf
fldz
inc
push
and
or
add
(bad)
repz
sub
mov
pop
sahf
int
jns
pop
xor
or
push
ret
dec
in
adc
retf
lea
fst
push
sbb
pop
movs
push
push
sub
(bad)
fist
dec
adc
call
mov
rdmsr
stos
mov
mov
imul
adc
push
mov
mov
out
xchg
mov
or
fucomip
xchg
scas
repz
mov
sub
adc
fst
push
out
mov
div
mov
ins
mov
pushf
jns
in
call
arpl
mov
lds
cmc
xchg
cmp
movs
fsub
sbb
test
nop
cmps
fidiv
adc
xchg
test
mov
out
sub
xchg
wbinvd
fcomp
repz
push
cmp
pop
dec
jno
mov
fcomip
or
jmp
ins
ja
or
xchg
fs
jmp
retf
adc
lods
dec
mov
xor
fiadd
or
retf
or
xchg
out
mov
xor
in
mov
xor
lahf
lods
inc
test
es
dec
arpl
cmps
cli
cli
cmp
jb
in
imul
jge
mov
jb
add
mov
and
or
add
add
fimul
fmulp
push
sub
mov
xchg
stos
xor
inc
mov
sub
push
mov
(bad)
(bad)
aad
adc
sub
jp
stos
sub
fwait
lods
sbb
jp
mov
daa
inc
ret
pop
gs
pop
(bad)
in
push
xchg
fisubr
cs
imul
dec
and
jbe
lds
enter
(bad)
jne
or
sub
retf
es
or
(bad)
in
pop
sub
test
fadd
loop
push
pop
xor
shl
pusha
or
je
fistp
(bad)
jg
arpl
mov
and
cld
add
and
jne
adc
xor
adc
xor
or
cmp
xor
test
sbb
pop
jmp
stc
mov
imul
xor
retf
arpl
jp
(bad)
out
and
fist
xchg
mov
popa
loope
jae
pop
xchg
mov
std
cmp
loop
(bad)
repz
push
fst
nop
add
cmps
sub
mov
outs
mov
mov
add
fstp
xor
mov
div
inc
lea
(bad)
js
outs
xchg
lahf
pop
addr16
out
loopne
mov
aaa
jbe
mov
cmps
push
div
and
sbb
(bad)
retf
xlat
mov
adc
in
cmp
push
pop
sub
imul
mov
mov
add
or
movnti
(bad)
mul
mul
pop
add
test
xchg
addr16
sub
pusha
mov
xchg
in
lock
mov
push
sahf
shl
sbb
dec
jmp
outs
repnz
jo
push
repz
(bad)
std
add
push
lock
jl
cdq
stc
xchg
xchg
sub
and
lea
mov
test
jne
push
mov
mov
jno
aas
and
xchg
in
test
inc
pop
adc
and
loopne
add
cs
sti
std
pop
cdq
(bad)
cmp
mov
sub
lods
jmp
cmp
dec
mov
jnp
frstor
call
cwde
fistp
or
add
into
cmps
sbb
jl
std
mov
gs
stos
jnp
sahf
xor
push
jbe
cs
call
fcmovu
jmp
(bad)
(bad)
mov
js
or
test
outs
mov
inc
adc
in
ins
push
adc
adc
test
fnstsw
(bad)
xor
and
fnstenv
fs
xor
mov
test
(bad)
aad
or
int3
cmps
std
popf
in
lods
jo
std
cld
inc
fld
mov
add
or
xchg
out
cmp
je
daa
jno
adc
dec
dec
loop
aas
mov
mov
mov
xor
ss
dec
mov
popf
sbb
dec
mov
mov
jge
mov
in
xchg
sahf
(bad)
(bad)
lea
xlat
cmp
(bad)
imul
into
pop
das
out
aam
dec
sbb
jnp
mov
data16
pop
mov
and
jb
mov
mov
imul
mov
lods
pushw
popf
hlt
cs
sub
iret
jle
mov
cmp
inc
ret
fsub
call
jne
pop
and
scas
(bad)
pop
shl
cdq
xchg
sbb
push
or
in
mov
int
and
push
stos
mov
cli
or
ss
ins
mov
push
ja
lea
fxch
inc
fbld
add
nop
stos
aaa
sbb
pop
adc
retf
cmp
xchg
lods
mov
push
cs
or
fist
jne
popf
fist
add
pop
pop
dec
or
fadd
jmp
jb
jle
lea
shl
das
add
jecxz
dec
test
jmp
daa
jbe
pop
sub
dec
xchg
mov
dec
pop
xchg
sbb
sti
dec
arpl
sub
push
rcr
pop
jns
in
xchg
(bad)
jmp
mov
sar
sbb
xor
imul
pop
push
imul
js
pop
or
rcr
and
inc
fisubr
add
test
inc
ds
mov
mov
dec
pop
xchg
add
pop
iret
out
rcr
cmp
ss
xchg
clc
sbb
(bad)
push
retf
xchg
push
shl
jb
push
fnstcw
sahf
scas
fist
sbb
push
data16
fdivr
or
cmp
dec
jcxz
jns
(bad)
mov
scas
and
mov
jle
aaa
popf
or
fwait
jne
sar
ins
dec
retf
(bad)
scas
out
hlt
sar
sub
add
cmp
lds
jb
adc
enter
retf
dec
ins
sahf
mov
push
jg
hlt
aas
aam
add
or
jb
mov
imul
mov
pop
mov
imul
fimul
mov
retf
xor
aas
inc
sbb
gs
sbb
sbb
mov
push
nop
hlt
adc
pop
adc
sbb
ja
sahf
inc
dec
pop
mov
lods
mov
loopne
mov
xor
(bad)
cmp
call
lahf
outs
push
add
mov
repnz
aaa
mov
call
mov
jmp
dec
jae
or
jns
cwde
cld
fimul
cmovo
inc
int
jae
icebp
stos
mov
pop
out
adc
popa
cmp
movs
add
push
mov
mov
inc
sahf
pop
(bad)
outs
xor
enter
inc
fsubrp
mov
inc
push
or
call
jecxz
jb
es
inc
loop
mov
cmp
pop
(bad)
mov
movs
popa
lock
jbe
arpl
xor
stos
and
push
jae
lahf
jmp
dec
or
mov
pop
in
or
dec
data16
xor
pop
mov
xor
int
xchg
retf
movs
popa
dec
daa
fcmovnu
out
mov
jb
les
nop
jbe
xor
mov
adc
mov
inc
adc
xchg
pop
aas
mov
inc
mov
inc
cmp
int
les
jnp
int3
pop
adc
popa
add
shr
sbb
scas
in
cdq
(bad)
push
inc
add
neg
mov
jnp
pop
sub
or
daa
mov
popf
mov
dec
mov
mov
retf
test
xor
imul
add
out
jmp
mov
int3
xor
loop
out
jge
push
mov
sar
xor
mov
retf
dec
cmp
add
ror
dec
aam
jle
mov
movs
fstp
cmp
les
mov
scas
cld
je
fdivr
mov
add
pop
rcl
mov
movs
xchg
xor
sbb
ds
add
pusha
sahf
adc
sub
addr16
push
push
push
mov
add
or
imul
repnz
mov
sub
push
sbb
hlt
and
mov
cmps
ficom
sub
jns
je
out
mov
neg
pop
lds
mov
cs
sbb
test
or
(bad)
and
mov
xchg
jns
sbb
sbb
fwait
cmps
cld
arpl
arpl
mov
cs
das
dec
pop
pop
sub
xlat
push
js
jl
lds
cmp
addr16
jecxz
pop
dec
div
ret
int
jbe
cmp
(bad)
fld
jle
and
sub
jno
mov
fs
sbb
ficom
and
add
sbb
(bad)
jmp
inc
shl
pop
and
adc
pop
gs
sbb
and
push
mov
call
in
ins
test
push
rcl
loop
mov
or
pusha
cwde
mov
(bad)
push
in
ror
loopne
lods
fmul
sbb
and
mov
inc
mov
add
add
pop
mov
cmp
push
push
mov
cmp
dec
dec
hlt
fstp
in
mov
push
aam
mov
dec
inc
dec
rcr
(bad)
sti
rol
sbb
rcr
lock
jg
mov
cs
mov
mov
pop
cmp
int3
jae
and
inc
mov
jecxz
cmp
cmp
fstp
adc
mov
out
movs
mov
xchg
fild
sbb
js
pop
adc
inc
call
mov
call
xor
inc
mov
mov
dec
and
mov
pop
jae
push
dec
and
out
rol
and
inc
outs
xor
ficom
or
repnz
push
adc
xchg
sbb
shl
popf
es
push
and
loope
ror
mov
fstp
sbb
lods
lea
lods
and
cmp
jb
or
jmp
pop
fcmovne
pop
push
push
call
fwait
pusha
(bad)
stos
push
fcmovnu
repnz
out
xchg
mov
inc
add
mov
sbb
or
xchg
lods
das
and
int
iret
jbe
push
xor
pop
add
lahf
jne
mov
pop
je
stc
shr
xor
data16
pop
cmp
or
mov
es
not
dec
lods
inc
aaa
cmps
mov
shr
aad
add
stos
mov
and
xor
jecxz
(bad)
xchg
mov
push
xchg
scas
pop
cmp
cmps
cmps
scas
lea
cmp
cmp
pop
call
loop
inc
xor
xchg
fisubr
dec
push
popf
push
mov
adc
fdiv
and
clc
mov
push
jns
imul
fdivr
pop
retf
xor
movs
(bad)
inc
outs
call
mov
inc
imul
ss
cmp
(bad)
out
imul
dec
dec
cmp
mov
mov
lock
das
jle
mov
adc
mov
scas
pop
pop
add
les
pop
push
mov
mov
mov
mov
inc
scas
lods
rcl
pop
push
sub
push
cmp
xor
mov
push
lahf
inc
ds
sbb
xor
sti
rol
pop
jns
fsubr
std
adc
add
jmp
xor
xor
mov
pop
jmp
jns
inc
rol
xor
dec
(bad)
jo
mov
sub
sub
repnz
push
inc
in
xchg
and
test
mov
dec
sub
fist
adc
add
leave
xor
pop
retf
ret
cmovle
add
adc
sub
scas
fsubr
and
mov
jb
pop
xor
jmp
popf
neg
(bad)
xchg
ret
mov
ja
fistp
xchg
ret
jg
sub
rcr
jo
or
test
cmp
mov
xor
or
icebp
mov
push
or
repz
inc
cmps
arpl
and
adc
lods
fisubr
imul
daa
addr16
cs
add
in
xor
mov
call
iret
inc
sub
or
cmp
and
sbb
int
ja
out
and
inc
push
call
shl
mov
movs
adc
in
cmp
(bad)
mov
xchg
mov
pop
rcl
dec
sbb
push
and
retf
push
arpl
xor
xor
repz
adc
test
call
xchg
pop
mov
das
retf
mov
add
(bad)
mov
add
gs
or
jmp
int3
or
adc
cmp
ss
repnz
xor
ror
loopne
xor
dec
xor
cmp
or
add
inc
or
cmp
cmp
outs
lahf
mov
cmp
test
movs
sbb
push
pop
fcmovbe
ja
mov
lods
cmps
into
scas
sbb
mov
push
mov
test
cs
jecxz
push
in
inc
xchg
ins
jns
and
cmp
ror
scas
jns
dec
or
xor
push
adc
jle
test
nop
jno
call
es
aas
repnz
div
push
out
test
jb
std
dec
(bad)
jmp
and
cld
and
rcr
cmp
popf
test
sub
mov
daa
jmp
in
rol
mov
gs
add
test
js
cmp
cmps
inc
adc
lahf
inc
mov
cmp
xor
mov
push
cld
xchg
out
arpl
mov
or
mov
xchg
pop
fcmovu
mov
xchg
pop
mov
mov
mov
mov
push
js
dec
xor
mov
mov
or
lahf
stc
out
adc
and
and
xchg
push
jb
in
out
or
mov
push
pusha
es
jl
ss
or
push
inc
push
cs
(bad)
and
rcr
adc
and
or
enter
mov
add
mov
sahf
jmp
stos
xlat
jns
cmpxchg8b
arpl
mov
jbe
addr16
sbb
cmp
int
pop
cwde
push
cwde
mov
ds
inc
(bad)
xor
fnop
(bad)
(bad)
addr16
daa
adc
xor
or
adc
adc
pop
inc
mov
xlat
xor
out
inc
stos
out
scas
pop
inc
fldenv
cmp
jne
out
repz
sbb
movs
inc
sbb
pusha
data16
and
leave
pop
outs
xor
jp
jae
fnstenv
push
outs
jae
sub
push
jmp
stos
add
lahf
out
add
mov
cmp
push
psubb
jno
lea
xchg
ja
sbb
ss
mov
fwait
imul
jb
jge
sahf
mov
or
jmp
loope
aam
mov
jnp
jmp
lods
adc
mov
shl
xor
shl
jne
mov
jmp
std
repnz
and
xor
cmp
retf
sbb
push
or
aam
or
pop
lods
stos
pop
add
loop
mov
cmc
sub
ins
mov
jb
imul
and
fild
mov
cmp
jp
sti
aas
mov
push
xor
ja
outs
cdq
test
pop
inc
(bad)
shl
add
je
test
adc
dec
out
outs
and
dec
sbb
xchg
ja
test
mov
pop
inc
mov
jno
sub
into
sbb
mov
cdq
or
cdq
pop
jmp
add
fstp
adc
push
xchg
or
loope
mov
pop
push
fnsave
shl
dec
cdq
cli
jmp
mov
fistp
cmp
push
xchg
(bad)
jl
xchg
stos
jecxz
jns
pop
pusha
xchg
mov
test
mov
in
cmp
mov
mov
ror
dec
movs
cmp
mov
push
dec
cmp
pop
sahf
loope
sbb
jecxz
jmp
sub
adc
mov
test
jns
adc
mov
mov
(bad)
and
xor
fndisi(8087
mov
adc
repz
cmps
xlat
fild
xor
ins
pusha
cld
out
outs
push
(bad)
mov
shl
mov
sbb
add
jmp
sbb
repnz
sbb
sbb
cwde
jl
inc
or
jecxz
std
cmp
mov
sbb
pop
addr16
sbb
shr
movs
or
gs
ins
popa
mov
aaa
ret
adc
out
xor
cdq
fisubr
inc
test
mov
std
shl
fnstenv
mov
pop
xchg
or
xor
call
leave
jae
xchg
push
out
ds
in
movs
retf
(bad)
ret
pop
jbe
outs
mov
inc
daa
(bad)
xlat
pop
sub
adc
je
cmp
out
xchg
fadd
push
je
inc
fnstenv
js
or
cmp
stc
cmc
neg
jg
scas
imul
sahf
dec
sub
les
mov
imul
bound
loopne
cmp
fmul
pop
mov
pop
sbb
add
or
ret
imul
push
ret
aam
stos
ins
cdq
dec
das
jecxz
data16
daa
not
fs
add
dec
fcom
in
out
ret
xor
int3
inc
test
out
mov
mov
jecxz
inc
outs
adc
cmps
jbe
sbb
sub
ret
push
ins
add
cmp
mov
retf
xchg
xlat
dec
mov
rcl
mov
xchg
lahf
js
movs
mov
cmp
shl
sub
int
arpl
aaa
in
fdivr
call
pop
push
jns
adc
ja
or
test
(bad)
cmp
and
dec
dec
push
pop
mov
stos
(bad)
sti
(bad)
mov
data16
xchg
inc
mov
repnz
inc
test
test
jmp
or
(bad)
imul
lahf
js
adc
jle
xchg
jp
shl
in
inc
movs
sbb
add
push
pop
sub
pop
(bad)
push
gs
cdq
adc
pop
mov
xchg
retf
retf
mov
hlt
mov
inc
push
ficomp
test
push
xor
push
(bad)
dec
mov
or
mov
scas
pusha
and
stc
pop
sub
sbb
push
lods
fmul
mov
xor
mul
jle
repnz
or
inc
in
shl
pop
int
in
cli
xor
jg
int3
cmps
cmc
aas
adc
call
inc
pop
loopne
fsubr
inc
mov
mov
dec
(bad)
xchg
and
lahf
out
push
push
movs
into
or
aam
add
out
jg
add
mov
nop
lgs
aaa
js
mov
faddp
in
fld
add
push
mov
push
imul
stos
xor
cli
xor
mov
xchg
fist
imul
and
sub
vmovmskpd
popa
xor
sbb
retf
mov
in
xor
and
loopne
mov
repz
(bad)
loopne
cmp
push
sub
(bad)
adc
dec
lds
sbb
cmp
mov
movs
push
retf
inc
nop
imul
mov
pusha
iret
add
add
sahf
push
pushf
cdq
dec
sbb
(bad)
sub
sbb
jo
sbb
movs
cmp
adc
rol
mov
(bad)
lahf
pop
shl
pop
retf
nop
push
test
mov
nop
add
pop
xchg
xchg
pop
out
(bad)
sbb
das
adc
stc
aad
cmp
jge
into
xor
aaa
loopne
jb
xlat
stos
hlt
cli
das
jnp
vmread
adc
ins
dec
adc
mov
xchg
and
xor
pushf
scas
test
fldcw
mov
lea
cs
iret
mov
fbstp
int
jle
popf
xchg
and
dec
xchg
or
mov
jns
mov
outs
(bad)
stos
jp
jmp
add
xchg
dec
in
sub
inc
icebp
das
aas
ja
jle
gs
into
sbb
out
xchg
or
inc
push
dec
or
daa
sub
mov
add
xor
pop
jno
jbe
or
shl
dec
(bad)
mov
std
rcl
xchg
xchg
mov
mov
jbe
or
sub
cmp
aaa
(bad)
(bad)
sbb
inc
xchg
mov
imul
clc
mov
repz
lods
push
rcr
sahf
pop
rcl
pushf
jmp
jmp
xor
and
cmps
(bad)
ror
mov
out
push
inc
in
inc
jne
jns
inc
(bad)
add
mov
outs
and
add
(bad)
mov
scas
and
icebp
pop
call
mov
mov
mov
sbb
popf
sbb
aas
mov
jne
jmp
mov
pop
xor
mov
xlat
xchg
xor
push
mov
or
sar
imul
pop
aam
scas
mov
je
out
call
cld
mov
push
mov
test
neg
test
cmps
mov
cmp
xchg
mov
xchg
sub
bound
inc
leave
jnp
fist
adc
push
cmps
or
push
jb
iret
lods
jg
or
fist
movs
mov
fwait
std
push
arpl
mov
sbb
push
dec
add
jns
cmp
arpl
xchg
jle
in
in
je
push
cmps
hlt
jmp
xor
add
inc
push
xor
sub
hlt
imul
dec
nop
test
push
test
adc
lock
push
repz
or
or
loopne
test
xchg
sub
inc
xchg
inc
pop
pop
jge
dec
dec
sub
jle
test
jg
xchg
inc
call
xlat
xchg
jne
pop
inc
cmp
cmp
(bad)
jp
mov
push
and
jge
(bad)
clc
pop
dec
fldcw
int3
icebp
jno
sbb
pusha
mov
mov
outs
cmp
adc
cmp
jb
mov
das
mov
call
adc
cmp
xor
repz
sub
sbb
jne
outs
out
cmc
push
test
xchg
jo
add
cli
cmp
fcmovnb
dec
out
daa
sbb
push
or
inc
test
push
mov
retf
jb
xlat
jl
xchg
xchg
jmp
xor
mov
sub
xor
pusha
fcom
mov
xchg
xor
inc
push
(bad)
(bad)
in
push
pop
sub
fld
jns
sbb
retf
dec
mov
push
add
fadd
xor
ffree
jne
sbb
retf
iret
aas
and
inc
das
dec
mov
jmp
iret
xchg
test
xchg
jp
je
mov
or
inc
les
jae
xor
mov
jbe
jae
sub
iret
mov
pop
retf
jp
imul
pusha
sub
int
xchg
in
fldl2t
xor
and
es
jle
xor
scas
adc
stos
bound
js
(bad)
ins
jecxz
mov
jno
mov
stos
push
mul
ret
push
and
or
sahf
ins
jecxz
jne
addr16
nop
jp
pop
loope
in
jno
and
int3
mov
(bad)
push
fmul
fs
lods
test
popf
(bad)
mov
inc
pop
adc
adc
cmp
(bad)
jle
rcr
or
adc
ins
idiv
and
cmp
lahf
call
mov
stos
add
mov
loop
mov
push
popf
adc
mov
cmp
shr
sbb
inc
stos
mov
repnz
inc
sub
push
sub
rcl
jge
dec
push
aam
test
jge
push
hlt
ret
mov
push
imul
xchg
and
push
mov
aam
aad
pop
push
iret
push
mov
sbb
pop
cdq
mov
cli
ret
push
imul
bound
imul
mov
cmp
push
popa
push
stos
out
dec
or
rcl
ins
data16
ret
mov
push
mov
inc
jb
mov
push
in
mov
in
aam
fist
retf
aad
popf
mov
hlt
xor
(bad)
push
ret
jge
popf
rol
int
pop
pop
dec
xchg
adc
sub
stos
dec
and
(bad)
mov
mov
sar
xor
add
cmps
adc
pop
les
mov
pop
fild
mov
lahf
mov
stc
stos
rcl
adc
arpl
xchg
lods
fidivr
xchg
(bad)
ds
out
cmp
out
push
les
stc
sbb
jae
add
stc
pop
mov
add
mov
add
je
inc
or
lahf
lock
gs
aaa
int
xchg
das
(bad)
int3
xor
jecxz
rcl
or
retf
ja
(bad)
mov
mov
je
arpl
push
out
mov
aad
fs
add
popa
addr16
push
sub
sar
dec
cmp
dec
pop
xlat
inc
adc
adc
in
ja
fbstp
data16
in
sbb
add
push
or
retf
repnz
jnp
push
sub
es
movs
out
les
les
pushf
test
mov
xor
push
jmp
not
jne
inc
dec
add
or
mov
add
iret
cmp
(bad)
jo
mov
mov
mov
dec
in
imul
ret
fsub
mov
loopne
imul
jmp
je
stos
clc
push
sbb
arpl
mov
push
mov
fnstenv
outs
mov
inc
out
das
jae
xor
jl
or
jbe
xchg
jmp
sub
cmp
xor
dec
jae
or
push
inc
popa
xor
cmp
dec
icebp
cmp
jge
pop
push
dec
jp
fidiv
cdq
jmp
fisub
jge
pop
in
pushf
push
push
jae
daa
push
call
es
sub
inc
js
daa
mov
dec
out
fwait
dec
xlat
test
xor
ds
repz
lock
mov
adc
sub
xchg
push
jns
lahf
jp
push
dec
(bad)
xchg
mov
(bad)
fidiv
sub
rcr
adc
pop
test
rol
pop
iret
add
jl
cmp
xchg
(bad)
or
popf
(bad)
jb
nop
pop
mov
xchg
mov
push
cmp
fistp
arpl
or
mov
dec
pop
je
stos
xor
adc
pop
inc
inc
lock
movs
dec
or
out
scas
sbb
pop
je
jne
(bad)
jbe
jge
mov
int3
push
in
push
fcom
xchg
push
jnp
(bad)
fcomp
mov
mov
div
push
out
int3
cli
mov
cli
movs
pusha
cmps
sub
pop
adc
jmp
xor
pop
iret
jno
test
repnz
mov
sbb
jns
mov
or
fnstsw
and
sbb
adc
add
adc
into
push
sbb
inc
jns
ja
mov
cmp
clc
inc
push
sbb
push
jnp
enter
mul
xor
jo
mov
addr16
sub
sbb
cmp
xchg
cmp
xchg
jns
test
jo
xchg
je
int
xor
aam
push
sub
and
mov
retf
xchg
je
test
addr16
stos
and
dec
mov
dec
scas
jmp
jo
movs
inc
cld
ret
pop
popa
lock
scas
ds
call
xchg
(bad)
sub
lods
vpmovzxbw
loope
mov
xor
add
test
fwait
dec
add
nop
leave
imul
or
mov
dec
ror
movs
pusha
and
xlat
ret
cmp
es
ret
sbb
mov
lods
xchg
arpl
call
dec
mov
jnp
push
js
bound
test
pop
cmps
or
add
xchg
pop
(bad)
adc
aad
mov
dec
fstp
rol
fisub
pop
or
sahf
movs
pop
stc
mov
xchg
inc
jl
xchg
inc
sbb
mov
inc
mov
inc
xchg
loop
dec
dec
xchg
pop
or
gs
out
sbb
(bad)
div
clc
lods
lock
mov
loop
jno
dec
add
(bad)
mov
aad
add
ins
(bad)
push
jns
aad
mov
sbb
adc
shl
test
and
pop
hlt
ss
shl
(bad)
test
cmps
dec
cmp
sub
or
ret
xor
ficom
inc
je
loope
sbb
shl
cli
inc
out
sbb
add
dec
retf
dec
popf
push
jecxz
outs
icebp
call
int
sub
enter
inc
outs
mov
addr16
xchg
mov
fist
xor
adc
mov
sbb
in
xchg
mov
cli
mov
jmp
jmp
sbb
rcr
xchg
loop
dec
sahf
fsubr
outs
ins
fsub
lds
add
push
xlat
mov
outs
inc
fadd
sbb
ret
dec
and
mov
xchg
jo
xor
(bad)
imul
retf
jp
jle
cmp
or
sub
mov
xchg
jmp
outs
mov
les
and
dec
mov
mov
cmp
push
jmp
fs
mov
mov
adc
fdiv
cdq
rcl
imul
mov
lods
test
mov
in
inc
fist
inc
lds
sar
xor
imul
test
imul
adc
pop
cdq
ret
les
push
and
es
movs
inc
mov
ins
inc
adc
es
(bad)
fild
loope
fs
cmp
or
dec
fdivr
push
arpl
and
or
out
out
add
aad
jnp
inc
inc
adc
adc
push
and
call
shr
movs
loop
mov
fidiv
mov
mov
lods
adc
aad
mov
repz
retf
or
cmp
jae
mov
add
movd
cmps
dec
loope
les
lea
inc
jnp
fisub
dec
sbb
pop
lods
inc
movs
xor
adc
ror
das
dec
push
dec
ja
push
xchg
sub
(bad)
lods
dec
xchg
adc
mov
jp
pop
add
lods
lds
adc
inc
fisubr
xchg
ins
fiadd
sub
loope
(bad)
sahf
push
in
jno
and
adc
out
call
xchg
adc
add
ret
add
(bad)
xchg
adc
cmp
or
or
and
test
xchg
mov
not
add
cmp
repz
in
jo
out
ins
cmp
outs
sbb
lea
test
pop
shl
inc
xor
ins
out
jns
iret
movs
and
(bad)
cdq
ins
out
jmp
les
hlt
fdiv
out
enter
mov
loop
aaa
jmp
add
cmp
std
call
xor
std
jl
mov
popf
dec
sub
je
dec
dec
gs
adc
imul
jle
sti
sar
or
cdq
fcmove
xchg
les
pop
mov
in
pop
repz
push
adc
ds
push
and
mov
cld
retf
outs
pop
sahf
dec
lea
jns
mov
jbe
push
neg
and
std
push
push
call
inc
imul
mov
lods
jne
mov
and
sub
mov
int3
(bad)
sbb
(bad)
sub
scas
jno
imul
gs
jge
pop
out
push
xchg
and
xor
sbb
sub
inc
scas
jae
and
pop
sbb
inc
in
cmp
sbb
pop
push
xor
mov
dec
mov
popf
(bad)
enter
int
add
mov
cmps
mov
in
mov
stos
movs
push
out
jmp
outs
jl
int3
cmp
add
mov
jmp
cmp
fs
adc
mov
xchg
fmulp
ds
cmp
pop
pop
test
mov
mov
popf
mov
jp
add
jae
jno
ds
arpl
popa
daa
and
cmp
pusha
cmp
ja
fist
imul
xchg
push
sub
(bad)
or
test
and
mov
xlat
in
add
out
lods
mov
outs
jae
jb
clc
(bad)
clc
out
adc
dec
ret
cmps
retf
pop
mov
jl
cmp
dec
xor
mov
sti
out
cmps
les
inc
addr16
cwde
cli
xchg
and
cmp
daa
pop
clc
ins
xchg
int3
dec
ret
dec
icebp
push
and
in
xor
in
cmps
mov
clc
jle
aam
ficom
jns
stos
clc
les
test
je
enter
jnp
mov
fdiv
or
scas
imul
scas
stos
mov
aam
fidiv
adc
sbb
popa
lock
data16
push
jbe
sub
cwde
adc
les
add
fnstcw
ret
adc
jmp
sub
gs
or
repnz
pop
xor
push
out
sbb
push
loopne
pop
inc
jmp
mov
push
mov
cmps
mov
adc
shl
inc
lods
fdivr
add
fstp
xor
push
sub
pop
xor
aam
xchg
dec
push
call
add
aam
xchg
xchg
adc
and
inc
inc
out
and
add
inc
js
push
add
frstor
mov
xchg
fsubr
shr
or
mov
mov
add
xchg
push
inc
pushf
mov
mov
sub
pop
cmp
call
pop
loop
in
xor
mov
mov
pop
loopne
push
cmc
(bad)
(bad)
mov
pop
xor
mov
sbb
pop
adc
jle
pop
add
lahf
pop
push
mov
add
sub
cmc
pop
cmp
jg
(bad)
clc
mov
push
das
movs
leave
add
jne
mov
ret
outs
cmp
ret
xor
push
mov
and
sbb
pop
movs
lock
xchg
adc
repnz
xchg
cmp
push
stos
and
cmc
fstp
hlt
jg
jmp
adc
and
lea
in
dec
ror
or
mov
pushf
xor
fcmove
ret
mov
outs
mov
sahf
pop
pop
xchg
out
arpl
sbb
je
sahf
push
cmp
dec
xor
push
mov
int3
pusha
cdq
inc
mov
call
addr16
inc
dec
pop
and
inc
mov
nop
sub
mov
mov
mov
lods
and
and
das
or
jge
jns
mov
cmp
dec
gs
jne
fcmovu
jp
into
test
mov
sbb
dec
fnstenv
scas
cmc
pop
dec
and
mov
icebp
push
lods
mov
ret
pop
add
dec
inc
in
(bad)
xchg
lahf
sti
mov
rol
mov
mov
xchg
xchg
ror
ror
inc
stc
iret
cmps
(bad)
adc
mov
(bad)
push
mov
dec
mov
sub
out
ins
popf
sar
pusha
adc
and
loop
cmp
xchg
(bad)
push
mov
push
and
pop
mov
movs
ins
push
xchg
ss
or
adc
sbb
(bad)
pop
xor
push
add
stos
mov
je
and
dec
(bad)
movs
pop
push
push
xor
(bad)
inc
idiv
(bad)
(bad)
pusha
mov
mov
and
aas
neg
add
push
(bad)
aam
(bad)
aas
mov
loope
and
or
mov
std
and
cwde
imul
mov
mov
xchg
mov
push
xor
mov
ret
retf
push
push
jge
arpl
cdq
push
xchg
mov
stos
daa
inc
aaa
push
or
stos
push
add
in
mov
cwde
arpl
fild
outs
int3
sub
inc
sar
int
stos
dec
js
sbb
test
fbstp
push
stos
inc
dec
movs
mov
mov
ss
nop
jb
dec
lea
outs
jb
adc
cld
sbb
cmp
mov
xchg
inc
ja
and
jmp
and
int3
test
lods
pop
loope
in
mov
in
dec
les
call
mov
mov
push
xor
dec
dec
mov
jle
mov
adc
mov
xor
add
jns
ins
or
inc
mov
outs
mov
adc
loop
mov
in
and
into
(bad)
push
sti
add
inc
jno
movs
pusha
inc
retf
nop
ins
or
int3
jbe
xor
popa
int3
std
jae
imul
push
mov
stos
dec
test
push
iret
pop
xchg
inc
int3
jmp
repnz
sti
std
and
ret
and
mov
lds
loop
cmps
test
inc
shl
xchg
fcomip
neg
mov
mov
mov
(bad)
or
in
stos
adc
pop
fstp
pop
push
mov
dec
dec
lds
and
dec
dec
cmp
dec
les
push
xor
or
rol
push
cs
push
push
lock
ss
cmp
out
cmovbe
or
mov
aam
(bad)
iret
je
int3
loope
sub
fcom
sbb
inc
and
hlt
push
imul
aam
repz
add
add
xor
push
xchg
xor
sub
out
dec
fistp
test
enter
jo
sub
push
jae
mov
movs
cs
ror
dec
sbb
je
add
ss
sub
mov
retf
dec
js
fmul
and
leave
xchg
inc
or
iret
leave
inc
sbb
sbb
xchg
sub
xchg
jb
jo
mov
les
jg
sub
mov
sbb
pop
jo
arpl
push
jle
adc
push
dec
xor
sub
mov
call
jecxz
(bad)
pop
or
mov
out
aad
dec
call
and
outs
mov
adc
cmp
mov
fcomp
pop
mov
test
movs
inc
aaa
es
ins
jmp
mov
inc
call
mov
aam
add
xchg
cmps
and
inc
xchg
inc
jo
mov
add
in
and
js
loope
jo
inc
xor
dec
mov
jg
lahf
aad
mov
push
xor
mov
dec
es
fistp
jecxz
mov
sbb
fcmove
adc
inc
test
aas
fcomp
jae
and
push
int
dec
mov
mov
out
pop
out
hlt
jae
popf
jmp
stos
popa
sub
stos
inc
jmp
mov
mov
mov
inc
movs
scas
xchg
cmp
jae
push
(bad)
and
nop
push
mov
(bad)
scas
mov
cwde
lahf
sub
xchg
fist
jnp
(bad)
out
sahf
out
adc
clc
sbb
push
dec
xchg
stos
ror
daa
pop
(bad)
adc
in
(bad)
pusha
out
hlt
ficomp
stos
dec
inc
ficomp
mov
sbb
xchg
popa
mov
frstor
mov
jl
cmp
aaa
push
in
push
fwait
jmp
call
cmc
mov
xor
push
dec
outs
popf
jge
test
shl
mov
or
mov
scas
mov
retf
jae
cs
push
pop
outs
fwait
into
hlt
xor
clc
jl
sbb
jp
lahf
out
cmp
push
sub
stos
cmp
fld
pop
shl
push
inc
mov
xor
inc
jmp
pop
sbb
dec
imul
outs
inc
ins
test
iret
pop
mov
push
jbe
ret
adc
sub
mov
les
dec
fist
clc
cmc
mov
xrelease
scas
out
call
fmul
int3
hlt
xchg
fs
dec
mov
loopne
mov
cwde
into
push
sbb
cmps
adc
shl
inc
in
les
imul
dec
out
jno
in
jg
sahf
add
cli
das
sbb
cmps
jecxz
xor
jecxz
xlat
xchg
cmp
jmp
mov
inc
retf
xchg
or
aam
xchg
test
cmc
cmp
pop
out
dec
mov
xor
push
mov
(bad)
fimul
push
fidivr
xchg
pop
shl
fidiv
push
inc
scas
mov
stc
bnd
pushf
adc
aad
mov
jb
stos
rcr
stos
nop
stos
(bad)
jecxz
mov
inc
pop
pop
enter
xor
mov
jns
sub
(bad)
dec
jne
push
inc
in
xchg
jmp
mov
pop
push
mul
neg
xlat
ffree
pop
addr16
sbb
out
je
arpl
lock
and
(bad)
(bad)
in
fst
sti
rcr
stos
call
cmp
sub
mov
nop
jle
xlat
fpatan
sbb
cwde
push
inc
sbb
pop
sub
mov
xchg
xchg
retf
adc
imul
xor
push
jmp
jg
or
mov
repnz
inc
jmp
add
pop
test
push
jbe
pop
adc
xchg
pop
jne
mov
mov
dec
in
push
sub
and
xor
js
sahf
and
adc
movs
cmc
aad
imul
(bad)
(bad)
rol
popa
das
std
cmp
pop
mov
mov
jp
push
xchg
lahf
adc
pop
and
pop
xchg
in
stos
pop
sbb
jne
or
aad
push
pop
cmp
mov
push
popf
sub
xchg
push
mov
ss
inc
ins
inc
iret
mov
stos
neg
(bad)
cdq
pop
dec
dec
mov
jns
mov
inc
jb
stos
inc
jb
sbb
lds
sti
or
(bad)
jnp
and
div
sub
leave
pushf
aaa
fiadd
xchg
(bad)
jp
retf
adc
jae
cmp
mov
loop
xlat
mov
mov
aam
dec
dec
repnz
sahf
and
dec
bound
pushf
retf
adc
loopne
test
cmps
mov
add
aam
xchg
push
add
out
or
push
das
push
or
or
(bad)
lds
or
add
xchg
das
out
movs
loope
adc
pop
leave
iret
push
or
les
adc
int
movs
mov
nop
lock
jbe
gs
jge
leave
jecxz
pop
popf
in
xor
pop
test
ins
mov
les
push
iret
jmp
push
xchg
pop
or
sub
je
mov
ret
mov
inc
adc
xor
stos
or
xor
addr16
sub
rcl
rcr
pop
loopne
mov
cmps
mov
pop
pop
hlt
add
or
scas
push
push
aas
shl
cmp
and
xlat
sar
pop
fdivp
or
jecxz
test
into
repnz
mov
repnz
aas
xor
rcr
into
call
mov
xchg
sar
ins
mov
jecxz
add
jge
xor
push
jb
fs
ins
cmp
in
fild
pop
dec
push
ja
and
sbb
and
loope
daa
(bad)
dec
mov
add
fdivr
xchg
cmc
cwde
int3
add
mov
push
add
adc
leave
mov
sbb
ja
mov
movs
sub
les
jbe
and
std
jne
out
stos
repz
in
leave
xor
gs
loop
test
sbb
fidiv
jne
mov
or
jmp
cmp
mov
push
sub
sub
out
xor
cdq
sub
mov
sub
pushf
jl
sub
mov
movs
rol
aas
or
cmp
aam
inc
repz
fadd
scas
jns
or
shl
(bad)
call
and
(bad)
mov
sbb
sub
or
pushf
punpckhwd
fiadd
loope
or
enter
or
or
xchg
and
mov
cmp
repz
sbb
ja
out
inc
cmc
cli
or
jp
add
dec
test
es
pop
sbb
sbb
gs
jle
push
leave
push
(bad)
fidivr
ins
shr
pusha
shr
ins
add
in
in
lods
dec
fstp
mov
js
xor
adc
(bad)
xchg
xchg
call
call
sub
arpl
(bad)
adc
and
lahf
cmp
xchg
sub
lock
out
add
mov
xor
xor
pushf
jo
std
inc
add
jbe
ja
xchg
fwait
sbb
xchg
aad
inc
push
repnz
stos
xchg
sub
das
fsub
sub
cmp
outs
sbb
(bad)
retf
sbb
(bad)
xchg
fistp
clc
cs
lock
faddp
fmulp
xor
hlt
xchg
shr
cmp
cwde
mov
jle
pop
call
std
jne
mov
xor
xor
lock
push
dec
push
and
and
dec
and
outs
stc
jno
std
pop
popa
ins
out
xchg
jge
mov
scas
(bad)
rcr
mov
(bad)
jns
fsub
push
cmp
fmul
imul
xor
rcr
xchg
push
dec
scas
call
pop
push
xchg
bswap
iret
xchg
cmp
and
ret
sub
sub
mov
std
repnz
je
adc
or
test
leave
je
lods
test
sbb
jge
jl
sub
mov
cmp
cmps
adc
nop
xor
jno
adc
mov
sbb
xchg
(bad)
push
mov
and
jnp
inc
test
ja
bnd
cli
loope
fimul
mov
sub
mov
lock
fiadd
shr
dec
sbb
inc
jmp
or
mov
jne
xor
add
ret
sbb
arpl
aam
cmp
cmc
add
ror
push
out
and
js
aam
es
cmp
ins
sbb
inc
fild
pop
mov
mov
lds
adc
cdq
lock
pop
fstp
inc
xor
pop
dec
jne
leave
retf
loop
ret
fld
sbb
lods
repz
jp
js
xor
push
inc
out
lahf
outs
pop
mov
dec
push
jp
add
imul
aaa
dec
pop
pop
into
mov
inc
loope
push
iret
lods
rcl
xor
xchg
mov
icebp
test
pop
fmul
inc
cwde
mov
jbe
sti
add
pop
lahf
push
in
sbb
pop
or
bound
arpl
mov
and
int3
push
rcl
jbe
cmps
call
jb
jge
sar
daa
pop
cli
gs
push
in
xchg
jb
fs
fidiv
sub
add
xchg
pop
jge
mov
or
std
push
adc
test
push
je
bound
loope
pop
cmp
jge
and
cdq
dec
popf
pop
inc
push
inc
stos
push
mov
jecxz
not
test
sar
int3
movd
mov
mov
call
jp
stc
mov
(bad)
out
bound
push
add
rcr
adc
scas
sbb
inc
addr16
lahf
fistp
sub
out
mov
inc
xor
mov
add
lock
mov
or
repnz
adc
aad
jmp
iret
xor
mov
imul
add
rcr
push
mov
cmp
pop
xlat
iret
xchg
fild
cmp
or
xor
pop
adc
cmp
jno
scas
mov
jmp
pusha
rol
xchg
call
call
dec
shl
ds
mov
fadd
repz
mov
outs
mov
xor
js
mov
iret
mov
mov
ja
mov
jmp
sbb
das
dec
xchg
arpl
fnstcw
dec
cmp
out
jne
adc
pop
sbb
cmps
aam
aam
add
push
aas
push
stos
and
mov
in
pop
outs
mov
lods
inc
sbb
mov
sbb
fcmovnb
mov
enter
movs
jp
lea
sub
sub
mov
cmp
mov
adc
pop
jmp
dec
adc
xor
mov
shl
add
push
mov
dec
leave
stc
icebp
ds
inc
ror
or
bound
pop
push
inc
inc
iret
push
in
fnstcw
dec
movs
xchg
arpl
fidivr
lahf
aam
fwait
mov
cdq
loope
popa
fucomip
push
fwait
into
push
mov
jg
adc
sahf
or
stos
xchg
adc
and
in
out
jno
stc
cmp
in
xchg
and
adc
hlt
dec
or
sbb
xlat
fwait
jo
sar
push
ret
ficomp
call
fidiv
aaa
daa
mov
pop
test
dec
jno
dec
adc
sbb
call
dec
(bad)
neg
sar
xor
and
cmc
jnp
or
add
mov
adc
clc
out
jmp
imul
lods
and
cmps
push
dec
pop
das
ret
pop
fnstenv
jnp
icebp
call
jns
xchg
xchg
sub
push
jb
lahf
int3
mov
out
and
std
test
out
aad
pop
or
aad
push
movs
dec
adc
push
mov
mov
int3
call
mov
jb
and
sbb
shr
push
xchg
nop
je
sbb
fs
mov
in
adc
pop
test
repz
and
test
je
mov
and
push
into
scas
cli
ret
scas
sbb
js
ret
xchg
je
iret
mov
ficomp
mov
retf
mov
push
mov
inc
mov
push
js
je
ret
sbb
pop
mov
cmps
add
movs
inc
sub
ins
test
mov
jae
outs
xor
mov
xor
and
jno
sub
jl
mov
pop
(bad)
cwde
mov
jmp
xchg
aaa
xor
arpl
scas
test
in
(bad)
mov
int3
sbb
enter
add
mov
loope
or
(bad)
loopne
sbb
xchg
popf
sub
not
arpl
push
pop
retf
adc
(bad)
mov
cld
ret
test
cmc
clc
mov
and
mov
sub
inc
xchg
cmc
jg
add
repnz
push
inc
popa
hlt
imul
adc
fsub
mov
fldenv
cmp
call
cmp
stos
sub
and
pop
mov
loop
popf
aad
lods
sbb
add
xor
xchg
sbb
imul
gs
mov
test
dec
mov
adc
test
jmp
fwait
dec
fwait
mov
fs
dec
dec
push
lds
cmps
jle
mov
cld
movs
pop
fld1
sahf
lds
and
xchg
enter
jnp
mov
(bad)
jb
mov
fisttp
popa
xor
mov
cmp
fwait
les
inc
xor
inc
fst
repnz
test
aam
in
xor
push
push
(bad)
sub
repz
mov
xchg
mov
cdq
(bad)
loop
pop
sahf
rol
fimul
pop
push
dec
fucomi
mov
dec
pop
cmps
aaa
sbb
push
ret
or
mov
jg
aam
fs
dec
cmp
inc
call
dec
sti
mov
mov
cmc
popa
stos
mov
pop
jle
stc
mov
gs
push
or
dec
dec
imul
leave
sub
mov
mov
xchg
sbb
sbb
int3
jp
sbb
pop
ret
inc
cs
mov
mov
adc
aaa
inc
loope
jnp
mov
pusha
pop
cmps
shl
mov
int
cmp
int
arpl
push
out
int3
int3
cmp
jns
dec
push
icebp
add
out
sbb
add
loope
add
push
inc
popa
cmp
push
fwait
inc
adc
sbb
mov
mov
adc
cmp
jmp
add
push
lods
in
inc
pop
pop
sub
and
aas
les
lds
or
fdiv
sub
sbb
iret
sti
mov
mov
outs
or
mov
mov
das
xchg
shl
mov
and
sahf
or
sbb
sbb
sti
in
xchg
mov
fiadd
xchg
mov
cmp
test
lods
jns
or
rcr
push
push
ror
jp
lods
sub
and
js
sub
pushf
lahf
in
add
sub
cmp
inc
mov
adc
scas
scas
test
(bad)
aaa
pop
pop
jmp
iret
je
test
dec
mov
data16
sub
dec
pop
xor
outs
repz
add
pop
xor
jno
xchg
and
pop
and
(bad)
jge
jl
push
stos
lds
in
jns
icebp
cmp
movs
popf
xchg
mov
stos
out
jmp
mov
sbb
lock
xor
jle
adc
shl
jns
xchg
outs
repz
cmp
sub
pop
and
into
int
push
and
loop
mov
inc
mov
push
and
jne
test
cs
jo
mov
jno
ret
scas
ret
adc
add
jg
inc
sbb
lods
xchg
cdq
and
leave
and
fistp
mov
push
imul
adc
and
std
pop
inc
bound
mov
jp
xchg
xor
sti
mov
or
xor
dec
pop
cmp
or
adc
mov
dec
nop
ins
jmp
push
sbb
cmp
sub
pop
movntps
push
cmp
mov
sub
and
xchg
sar
push
xor
mov
xchg
sbb
jns
loop
repnz
jmp
xchg
sar
repnz
das
retf
and
call
cs
and
mov
and
jae
jbe
sbb
popf
imul
mov
xchg
xchg
mov
mov
arpl
jle
and
adc
inc
jae
jp
aas
adc
(bad)
mov
retf
leave
sbb
pop
or
aas
mov
xlat
(bad)
cld
jl
xlat
pop
aam
(bad)
push
mov
shr
clc
cmp
sbb
inc
adc
je
dec
mov
loopne
xor
push
xchg
mov
sbb
retf
mov
inc
mov
push
pushf
cmps
push
hlt
test
(bad)
or
mov
dec
add
pop
and
jp
jmp
adc
dec
aad
dec
test
jle
int
sbb
inc
jno
jl
frstor
pop
pop
test
and
mov
dec
(bad)
stc
neg
ror
pushf
mov
push
push
pushf
dec
and
inc
(bad)
or
outs
jo
idiv
add
dec
jo
movs
push
loopne
in
inc
jb
jle
xlat
fwait
add
or
pusha
jge
sbb
clc
mov
push
lods
adc
pop
xor
int3
fmulp
or
sub
ins
pop
push
movs
cld
and
sbb
out
adc
lea
cmp
mov
sar
xchg
mov
outs
repnz
sti
sbb
cmp
mov
xchg
sbb
pop
dec
xchg
jae
push
mov
pop
lea
(bad)
(bad)
adc
sti
retf
movs
fnop
stc
sub
arpl
push
ror
mov
fisub
loope
fistp
ins
or
lock
xlat
push
adc
or
lds
add
inc
cmp
xchg
xchg
xchg
jne
fcmovne
xor
adc
jns
sbb
push
or
jno
sbb
mov
xchg
pop
imul
outs
inc
mov
cdq
pop
test
data16
adc
sub
pop
lods
outs
hlt
pop
imul
and
add
mov
inc
movs
ficom
stc
or
in
adc
iret
xchg
pusha
and
jp
ins
pop
xor
push
fidivr
ss
mov
mov
mov
sti
add
sar
gs
sub
jno
add
int
icebp
inc
out
stos
push
and
imul
fst
jg
sbb
sahf
iret
xchg
dec
lahf
retf
bound
add
fstp
jne
repz
mov
mov
dec
jnp
pop
nop
stos
fidivr
test
mov
stc
enter
cmp
xchg
cmp
fld
jnp
imul
stos
jl
inc
cmc
pop
mov
and
lods
fdivp
mov
sub
add
add
cmc
lock
into
aad
dec
es
push
jns
imul
sbb
(bad)
xchg
aam
xchg
test
movs
mov
add
and
inc
push
out
ficomp
in
mov
fst
dec
nop
setb
jmp
bound
shl
mov
push
fdivr
shl
jnp
xlat
in
sub
lds
push
xchg
loopne
daa
xchg
dec
popa
mul
leave
mov
add
les
xlat
cmp
movs
inc
shl
sahf
pop
outs
ds
rcl
(bad)
fmulp
dec
mov
pop
in
test
inc
ss
(bad)
mov
leave
stos
mov
push
ret
add
jge
lahf
sbb
push
cmps
int
cld
movs
jg
out
repz
or
call
pop
popa
mov
adc
push
in
cs
popa
jmp
mov
mov
mov
test
lahf
mov
jbe
ror
mov
scas
pop
add
in
in
xor
js
dec
push
out
xchg
(bad)
ds
sub
pushf
sub
cs
(bad)
push
jns
mov
dec
int
or
mov
dec
fiadd
aas
lods
jbe
pop
xchg
lea
or
dec
sbb
sub
jp
pop
out
xor
push
dec
stc
inc
enter
btc
xchg
daa
add
xlat
fmul
shr
xchg
je
pop
out
dec
push
adc
stos
pop
ja
fadd
adc
mul
sbb
shl
outs
sbb
add
movs
je
sbb
and
push
out
cld
ins
mov
aaa
ret
jge
or
mov
into
xchg
mov
fs
cmc
mov
in
jb
cmps
retf
pop
test
xchg
inc
jge
sub
icebp
in
jo
ss
addr16
mov
sar
sub
div
daa
pop
xchg
mov
out
jbe
je
pop
inc
add
mov
add
adc
sbb
cwde
xchg
fstp
or
cmp
cmp
add
pop
xor
mov
add
div
xor
pop
add
outs
test
lods
mov
shr
adc
hlt
lock
xchg
push
retf
popf
adc
stos
enter
hlt
cmp
pop
lods
push
fadd
mov
cmps
int3
or
or
rcr
sbb
(bad)
hlt
in
arpl
cdq
mov
inc
dec
sub
push
(bad)
jmp
dec
fild
jle
xor
adc
sbb
jbe
mov
xor
mov
adc
xor
fucomi
loop
out
pusha
xchg
ja
jae
stos
or
sub
pop
xor
fisttp
cmps
leave
push
jmp
fld
xchg
(bad)
xchg
aaa
jle
sbb
movs
fwait
ss
mov
or
cli
dec
inc
popa
xor
mov
xor
xchg
mov
jl
movs
ror
pop
jmp
aam
and
jecxz
(bad)
jns
fistp
push
imul
push
xchg
sbb
or
push
and
mov
mov
out
xchg
outs
addr16
call
fisub
(bad)
aad
imul
mov
push
push
cmps
cmc
hlt
or
scas
or
dec
sub
(bad)
ins
fdiv
pop
(bad)
rcr
sbb
ins
test
mov
iret
or
dec
loope
mov
xchg
rcr
fucomi
dec
movs
and
xor
repz
xor
pop
int3
test
ins
adc
adc
push
scas
inc
add
out
hlt
mov
rcl
pop
sbb
inc
aad
push
(bad)
das
fisub
loop
cmp
push
jmp
sbb
and
movs
scas
repz
jecxz
fmul
loopne
fadd
sbb
rcl
xchg
mov
add
(bad)
xor
jbe
sahf
pop
add
push
mov
std
mov
dec
inc
xchg
or
test
in
jecxz
jmp
(bad)
or
sbb
pop
add
dec
sbb
push
cli
bound
inc
pop
xchg
cmps
adc
xchg
adc
sbb
jp
lahf
adc
jno
adc
fadd
cmp
fadd
xlat
pop
out
fcom
xchg
into
fisttp
push
pop
jmp
aas
(bad)
stos
mov
jbe
out
push
inc
inc
mov
neg
test
cmc
in
mov
dec
icebp
adc
jb
mov
arpl
mov
push
mov
dec
popf
push
inc
pop
mov
icebp
adc
sub
push
int3
sbb
mov
jne
fst
xor
in
pop
push
or
fistp
es
stos
mov
ins
shl
dec
mov
push
and
jbe
adc
sub
jp
mov
push
lock
cdq
dec
xor
xor
pop
rcr
jmp
dec
mov
clc
es
sub
(bad)
imul
enter
adc
jmp
cwde
inc
mov
add
or
dec
les
aad
pop
rcl
sub
cmp
out
mov
push
rcr
pop
mov
shl
std
and
sub
imul
sub
sahf
loop
adc
idiv
sbb
dec
aad
ja
pop
add
inc
(bad)
(bad)
jno
push
sahf
xor
mov
cmp
mov
sub
adc
pop
cmp
in
sahf
push
fimul
sbb
icebp
cmp
xchg
sahf
cdq
push
cwde
xor
mov
and
hlt
rol
dec
xchg
inc
in
pusha
and
fsub
mov
push
ror
js
inc
mov
or
dec
outs
jmp
test
sbb
outs
in
dec
sahf
and
add
and
(bad)
stos
and
lods
cmps
push
adc
dec
in
std
ret
xchg
add
test
or
je
adc
cmc
sahf
rol
cs
push
shr
out
cmp
loop
cli
mov
add
fldcw
inc
rcl
outs
enter
sbb
push
lods
lock
enter
jp
mov
jne
mov
or
push
xor
or
sbb
jmp
adc
pop
jl
adc
je
jns
pop
cwde
sub
ror
ret
cmp
add
cmp
and
test
cmp
sbb
mov
push
mov
xor
jo
dec
jge
imul
int3
mov
add
fistp
sub
jo
shl
and
push
nop
leave
imul
sub
pop
xchg
xor
push
test
out
xchg
sahf
or
push
mov
aam
outs
outs
lea
cs
push
in
stos
xchg
push
scas
les
push
pushf
push
(bad)
cmp
lea
loope
cs
sub
xchg
xor
cmc
sar
int
mov
xchg
imul
in
sbb
scas
or
jnp
(bad)
out
frstor
sub
fsub
and
cli
lds
dec
in
(bad)
aaa
inc
inc
(bad)
ins
jecxz
jecxz
jl
xor
jno
je
cli
retf
(bad)
mov
repnz
ja
(bad)
inc
mov
push
loopne
je
int
in
sub
inc
stc
imul
adc
call
ins
mov
pop
push
outs
adc
or
add
xchg
push
jmp
dec
mov
dec
push
repnz
sar
sbb
add
scas
cmp
jmp
jo
pop
je
addr16
cmps
xor
hlt
in
add
lock
stos
std
adc
fbstp
jl
inc
add
push
and
mov
in
push
dec
arpl
sbb
jecxz
push
fsubr
jno
lahf
push
inc
xchg
inc
scas
int
push
out
rcl
arpl
fwait
pop
ror
add
jae
sub
dec
xlat
push
push
fdiv
in
rol
mov
(bad)
mov
mov
retf
pushf
aaa
pop
sahf
cmp
arpl
(bad)
icebp
rcl
inc
xor
or
dec
sbb
jmp
movs
jb
dec
mov
sbb
ins
scas
ins
cmp
sbb
add
daa
loopne
add
mov
sbb
dec
mov
jg
mov
cmp
test
int
std
pop
(bad)
fiadd
jno
cmp
or
mov
pushf
sbb
repnz
idiv
jae
or
jp
push
xchg
xor
adc
adc
inc
xchg
loope
jp
dec
jg
xor
sub
sti
dec
pop
and
pop
or
or
adc
cmps
stos
repnz
add
jle
pop
aam
out
and
cwde
pushf
push
mov
into
xlat
int
and
mov
icebp
sub
les
pushf
adc
pop
xchg
push
test
retf
jae
and
cld
jbe
jae
mov
fsubr
and
in
retf
xchg
adc
test
sub
in
sbb
loope
jecxz
cmp
rol
(bad)
jns
(bad)
sar
in
(bad)
jle
test
cs
sub
out
icebp
push
rol
sbb
ins
push
or
push
push
fcmovbe
jmp
inc
push
in
mov
outs
clc
in
mov
jp
in
xor
(bad)
std
mov
sbb
jle
les
sub
sub
fidiv
mov
add
out
jl
test
loopne
sbb
daa
push
ja
imul
jnp
jg
jne
sti
cmp
jne
xchg
out
or
(bad)
add
jno
rcr
les
xchg
movs
rcl
mov
call
sub
dec
pushf
es
je
addr16
add
clc
xor
jmp
test
out
or
leave
addr16
loopne
ret
(bad)
dec
pop
retf
pop
retf
bound
jmp
cbw
pop
push
jmp
xor
in
shl
mov
jb
cdq
enter
addr16
aaa
cmp
sti
ret
aad
mov
mov
mov
or
sub
add
cmps
sub
aam
sub
dec
adc
xchg
(bad)
shr
pushf
xchg
xchg
and
loop
outs
fldenv
scas
sbb
pop
test
cmp
movs
and
stc
sbb
pop
mov
mov
ror
sbb
repnz
cmps
sbb
(bad)
cwde
push
fld
sbb
pop
rcl
xchg
fadd
test
lock
sub
add
ficom
scas
cmps
mul
pop
(bad)
push
mov
or
xchg
xor
loope
jb
jnp
xchg
fist
xor
fidiv
dec
push
in
(bad)
cmc
xor
adc
in
adc
pop
xchg
mov
sbb
mov
scas
sub
adc
into
pop
push
loop
je
out
imul
sbb
jecxz
ret
mov
mov
inc
in
mov
in
jns
hlt
pop
icebp
(bad)
test
icebp
mov
sbb
xchg
xchg
xchg
xor
jle
jge
mov
sbb
inc
mov
repz
ja
data16
pushf
or
push
jge
mov
xlat
ja
add
stc
lea
dec
fs
pop
(bad)
repz
daa
jp
pop
mov
sbb
ja
les
(bad)
xor
cmc
add
cmp
leave
mov
sbb
int3
sbb
into
mov
cmc
adc
jle
mov
push
rol
push
sub
sar
push
jl
ret
std
mov
iret
add
sbb
hlt
fist
add
sub
into
fild
pop
sbb
cmp
add
cmps
in
repz
dec
sbb
adc
ss
push
call
add
prefetchwt1
ja
push
sahf
mov
out
retf
push
add
fisubr
inc
bound
aaa
fmul
xor
je
add
scas
loope
cld
cmp
pop
sbb
pop
xchg
retf
xor
mov
push
and
jnp
or
into
push
jecxz
cmp
mov
push
push
jnp
iret
mov
xchg
cmp
ret
add
es
cmps
cli
aam
jge
and
dec
jnp
in
out
mov
je
xor
inc
jmp
or
div
neg
(bad)
sub
pusha
pop
imul
xchg
cmp
or
push
cmp
pop
clc
aad
ds
mov
shr
mov
inc
dec
int
push
outs
xor
xor
mov
cmp
xchg
fcomp
or
mov
dec
mov
adc
retf
jmp
inc
sub
pop
sub
call
jno
test
ficomp
stos
addr16
xchg
jle
out
fadd
sub
aaa
aad
or
hlt
out
cld
movs
ret
cmps
xchg
(bad)
not
xor
jmp
adc
ret
nop
rcr
pop
cld
in
push
test
(bad)
mov
jmp
pop
jmp
lods
jmp
sub
jae
fdiv
repnz
setge
sar
and
jl
push
inc
add
fisttp
out
jae
and
push
das
push
dec
add
dec
xchg
rcl
fst
jp
sbb
outs
jno
adc
retf
lahf
gs
adc
ja
xchg
int
sbb
add
mov
les
in
dec
je
add
dec
int
pop
pop
test
mov
add
adc
mov
sbb
xor
cli
outs
sub
jne
arpl
ins
adc
jmp
ins
xor
test
idiv
cmp
ret
lods
ja
int3
into
xlat
ror
sbb
push
repnz
popf
imul
(bad)
lea
inc
jae
mov
mov
jno
xor
loopne
and
loope
call
add
adc
pop
mov
lods
mov
std
ins
in
jae
rcl
sub
pop
or
adc
xor
loopne
pop
movs
jne
push
in
adc
stos
mov
sub
adc
shr
call
and
and
lock
(bad)
mov
lock
jb
movs
push
in
inc
fs
inc
pop
jo
inc
fld
and
outs
sub
add
sub
pop
or
xor
or
leave
and
repz
retf
mov
stos
test
rcl
pop
popa
cs
dec
mov
popf
iret
fwait
int3
sbb
pop
push
(bad)
(bad)
aas
mov
cld
mov
daa
add
je
std
inc
jg
add
push
fldcw
pop
sbb
fcomp
inc
adc
or
sub
sub
and
push
sbb
test
cmc
and
ss
dec
xor
cmp
xlat
movs
mov
shr
xchg
cmps
adc
cmp
pusha
movs
inc
lods
pop
sar
pop
lods
mov
fist
fst
jge
ror
jmp
loop
xor
int3
les
je
lahf
test
aad
pop
retf
add
push
cli
ds
mov
in
add
add
aas
in
push
sub
shr
imul
xchg
sbb
inc
popa
outs
push
dec
push
outs
xor
xor
push
sub
imul
dec
dec
or
ret
daa
jne
sbb
movs
enter
std
cmp
mov
pop
push
stc
jae
inc
stos
mov
loop
les
das
inc
ret
nop
cmc
jecxz
push
aas
push
mov
and
popf
xchg
lods
mov
push
icebp
pop
mov
dec
jb
pop
xchg
setnp
js
lods
mov
fisub
push
js
icebp
jl
out
stc
pop
push
les
sub
cld
mov
stos
jno
out
call
icebp
test
dec
add
lods
jge
test
mov
clc
and
mov
push
sbb
fcom
ds
sar
mov
cmp
xchg
or
pop
sti
push
inc
stos
sub
and
fadd
push
xchg
daa
ins
mov
sbb
cdq
daa
lods
push
push
sbb
cdq
add
sub
inc
xor
or
scas
leave
daa
sti
inc
push
stc
scas
fild
inc
mov
push
gs
je
movs
xor
xchg
and
jg
xor
mov
push
add
rcr
inc
xchg
dec
bound
mov
loopne
dec
mov
mov
sbb
cmc
mov
mov
aad
push
test
shl
clc
push
cdq
mov
ret
ret
rcl
fcom
jne
xor
ret
retf
jb
add
movs
and
(bad)
rcl
pop
inc
test
aas
pop
jg
stos
mov
shl
data16
fimul
scas
xor
std
les
xlat
cwde
mov
mov
popf
jnp
mov
out
add
retf
sub
call
dec
mov
ins
cwde
ins
push
jl
cdq
icebp
xchg
fldenv
aas
test
and
or
(bad)
and
rcl
push
sub
js
and
xchg
sbb
push
cmp
in
and
jno
shr
pop
fcmovb
fild
sbb
cmp
push
push
mov
idiv
sbb
dec
nop
push
aam
repz
adc
adc
or
scas
mov
sub
sub
mov
lea
outs
(bad)
retf
cld
or
dec
leave
inc
pop
test
pop
retf
add
into
ja
les
push
xchg
dec
std
inc
xlat
pop
call
jmp
dec
cld
xor
push
and
push
push
sub
add
aas
and
leave
loop
mov
pushf
clc
mov
dec
and
inc
imul
xor
push
pop
pop
push
sbb
dec
retf
(bad)
pop
mov
pushf
mov
cmp
ret
and
jp
or
daa
test
sbb
(bad)
icebp
dec
test
test
add
dec
mov
sbb
aad
test
dec
pop
loope
push
push
mov
inc
mov
mov
in
push
inc
or
cmp
mov
fldenv
add
fs
into
lods
dec
add
dec
mov
dec
dec
test
pop
and
fisubr
imul
inc
or
sbb
ret
jns
xor
stc
mov
mov
sbb
sti
bound
xor
test
dec
xor
push
ins
mov
xchg
gs
mov
or
inc
jns
frstor
adc
push
mov
outs
call
inc
sub
jb
sub
xor
lods
loopne
loope
jp
add
aad
dec
mov
out
cmp
test
(bad)
pusha
mov
(bad)
imul
xchg
adc
in
pop
loopne
jo
mov
pop
int
mov
jmp
cs
sahf
mov
xor
(bad)
or
ds
add
adc
(bad)
xor
mov
pop
push
sti
retf
iret
add
jmp
es
in
dec
push
xchg
cmps
xlat
xchg
fiadd
sar
inc
movs
xor
div
scas
ins
movs
fstp
pop
add
sub
mov
mov
mov
mov
xchg
push
scas
inc
mov
ficom
int3
mov
xchg
movs
mov
inc
pop
jge
lods
xchg
cmp
(bad)
loope
and
mov
mov
sar
sbb
dec
mov
mov
popf
dec
pop
dec
cmp
nop
inc
sub
jmp
jne
sti
sahf
lods
dec
sbb
pop
dec
pop
sbb
cmps
call
loopne
dec
mov
jbe
adc
and
sub
mov
jmp
pop
sub
mov
mov
movs
(bad)
push
ret
mov
bound
dec
ja
adc
rol
jecxz
jmp
inc
ins
shr
jb
xchg
push
mov
cli
or
cmp
xor
or
dec
mov
add
jae
jmp
repz
lahf
out
ja
xlat
mov
mov
inc
ins
push
lahf
aas
test
lods
pop
jle
sbb
cmp
das
pop
repz
dec
mov
not
sub
rcr
add
call
pop
aaa
dec
mov
inc
or
pop
dec
iret
mov
and
add
fwait
pop
outs
(bad)
jns
jbe
xchg
rol
mov
cs
pushf
cmp
add
fcmove
lea
sub
data16
inc
cmps
mov
jnp
mov
xchg
(bad)
mov
push
mov
shl
dec
movs
fst
or
js
xlat
fwait
add
pusha
enter
push
jmp
add
add
daa
fwait
and
adc
call
mov
cmp
je
mov
pushf
(bad)
jmp
pusha
sti
mov
fmul
je
ror
shr
cmc
nop
mov
adc
mov
mov
loope
push
fisttp
sbb
lahf
bound
idiv
out
stos
mul
cmc
xor
fwait
inc
cdq
cmp
cli
mov
enter
mov
nop
stos
fimul
(bad)
push
jmp
in
sbb
std
and
mov
pop
fidiv
mov
push
inc
sbb
ret
fwait
mov
cmp
or
data16
inc
jno
mov
lock
sub
or
popf
fsub
mov
and
jmp
jns
cmp
std
jge
push
xor
dec
fcomp
push
or
ror
adc
or
cli
shr
add
aaa
sub
ret
sub
pop
sub
fst
ins
iret
fld
jg
or
xor
push
mov
xchg
inc
xor
adc
das
icebp
pop
or
iret
lods
es
sub
or
adc
dec
xchg
xchg
test
mov
sbb
sbb
add
and
movs
outs
jg
jae
add
js
mov
push
cli
fldenv
rcr
xchg
and
and
mov
pop
cmp
pushf
stos
stc
xchg
push
pop
xor
mov
push
dec
add
mov
sub
cli
popf
and
and
and
repnz
repz
pop
mov
pop
and
les
shl
shr
cmps
jp
shl
pop
bound
xchg
fmul
je
sar
jecxz
enter
in
xchg
dec
sar
mov
and
out
pop
adc
jge
cmp
cld
jl
and
jg
test
fsubr
mov
fs
fmul
adc
dec
jge
jb
sbb
adc
retf
hlt
add
dec
xchg
es
push
fadd
je
int3
sbb
das
inc
lods
add
jp
test
popf
div
outs
pop
pushf
ja
and
ret
sar
dec
or
jge
sub
iret
cwde
push
inc
and
out
fidivr
pusha
dec
das
adc
adc
or
lds
retf
in
inc
pop
dec
rcr
es
push
push
and
shr
bound
fidiv
fisttp
retf
mov
ins
test
push
mov
adc
test
retf
mov
cmp
dec
arpl
mov
fnstenv
imul
mov
out
je
lahf
mov
in
add
sub
mov
mov
jle
adc
and
adc
sub
push
pop
jge
xchg
ja
mov
int3
xor
pop
push
clc
retf
inc
or
lea
adc
test
adc
cmp
pop
jge
dec
mov
shl
gs
jae
neg
adc
pop
xor
retf
mov
and
call
push
bnd
or
in
push
je
adc
push
xor
arpl
(bad)
mov
rcr
bound
call
ins
push
outs
es
cmp
(bad)
xor
sbb
mov
push
cli
stos
ja
sbb
lds
jmp
test
je
sar
pop
jns
into
pusha
xlat
pop
test
push
test
inc
and
xlat
xchg
xchg
shl
push
scas
lods
cmp
gs
fnstsw
stos
ins
mov
les
cmp
mov
xor
test
cmp
aaa
(bad)
out
mov
ja
inc
mov
pop
xor
loope
in
dec
outs
sub
ins
enter
ds
out
xchg
push
push
xor
test
jmp
jle
push
inc
jge
inc
mov
aaa
dec
add
sahf
lods
gs
nop
pop
neg
(bad)
rcl
outs
xor
xchg
fadd
stos
mov
test
pop
mov
push
sbb
stos
mov
(bad)
xchg
xor
sub
add
stc
popf
sbb
ss
sti
push
xchg
les
sub
add
pop
das
push
rol
or
and
div
(bad)
push
inc
push
inc
sbb
sub
and
fidivr
scas
outs
mov
lock
retf
call
dec
adc
hlt
stos
(bad)
mov
out
pop
enter
jp
mov
cs
pop
push
pop
rol
shl
pop
outs
xchg
(bad)
int
inc
sbb
shl
pop
pop
jge
arpl
jge
xchg
movs
mov
ret
hlt
popa
or
sar
fs
and
sbb
test
lods
mov
ins
pop
and
xlat
movs
in
add
adc
cld
pop
pop
push
mov
push
pop
in
push
cmp
dec
inc
push
shr
push
lods
xchg
mov
shr
mov
pop
(bad)
cli
(bad)
popf
push
mov
fdivrp
sbb
mov
mov
xchg
enter
movs
xor
sbb
mov
ret
ja
fstp
fwait
(bad)
(bad)
xor
std
cmc
jge
cmp
shr
push
inc
or
movs
push
call
in
loopne
rol
daa
iret
outs
or
adc
outs
iret
fs
fsubr
lock
and
ja
addr16
add
enter
pop
or
add
xchg
data16
mov
scas
or
adc
(bad)
push
(bad)
test
call
inc
dec
in
into
popa
arpl
outs
sbb
aam
hlt
jbe
pop
mov
and
add
xor
sbb
pop
inc
cmp
jp
jnp
(bad)
cmp
push
jns
push
push
enter
repz
push
xor
jb
popa
lahf
pop
out
jnp
pop
sub
sar
out
hlt
mov
pop
outs
int3
push
call
sub
dec
fyl2x
jbe
in
xchg
push
mov
into
loope
xor
push
mov
mov
mov
in
shl
mov
test
test
fbstp
xchg
mov
push
pushf
lods
iret
sub
mov
jo
sar
cmp
movq
outs
(bad)
(bad)
clc
icebp
out
cld
add
imul
xor
movs
lahf
push
inc
mov
call
hlt
iret
data16
xor
mov
out
adc
mov
mov
mov
movs
add
xor
mov
mov
loope
xchg
(bad)
pop
(bad)
enter
ret
outs
fild
and
scas
jge
movs
xchg
sbb
aam
cld
mov
mov
push
(bad)
int
ror
pop
das
mov
dec
mov
mov
iret
sbb
jmp
jno
pusha
es
repnz
xor
shr
jmp
or
mov
or
inc
inc
popa
sub
sbb
test
mov
stc
jg
shr
fimul
jb
jnp
(bad)
sub
stc
or
jl
stos
lds
mov
fidivr
or
mov
loopne
inc
shl
mov
push
jge
call
cmc
sti
cmp
stos
cmc
ss
cmp
pop
or
int3
pop
add
fwait
pop
sahf
ret
imul
mov
sub
hlt
(bad)
or
pop
in
mov
leave
lea
xchg
cld
and
ficomp
xor
xchg
stos
sbb
mov
jbe
outs
mov
xor
dec
mov
sti
aas
inc
and
popf
mov
mov
sub
test
inc
adc
inc
ret
repnz
mov
jb
adc
ins
retf
aaa
sbb
loop
movs
rol
movs
ret
in
xor
dec
pop
xchg
inc
sbb
dec
add
scas
push
rol
into
loop
inc
inc
sub
stos
iret
inc
aam
fisttp
mov
and
sbb
mov
outs
ins
(bad)
mov
mov
(bad)
out
mov
jo
push
movs
cdq
inc
(bad)
xchg
push
les
sti
mov
std
jbe
call
cmps
ret
popa
inc
jo
xor
mov
aas
lods
je
xchg
test
xchg
xor
dec
(bad)
cdq
aad
and
dec
addr16
dec
push
add
inc
mov
nop
sub
cmp
neg
imul
lods
mov
leave
pop
add
cwde
cmps
and
mov
pop
mov
fadd
dec
hlt
and
cld
rcl
out
add
(bad)
adc
mov
push
ror
or
iret
or
je
loop
in
iret
ja
jbe
cmps
(bad)
cmp
aad
fisubr
(bad)
int3
lds
cld
jnp
push
daa
enter
push
inc
cmp
cmp
add
pop
push
inc
jmp
cld
and
adc
fs
and
je
xor
pcmpeqb
loope
xor
jg
mov
out
imul
mov
add
aaa
and
jg
dec
cmc
inc
pop
xchg
jmp
xchg
fiadd
cmp
sbb
sub
push
or
sbb
aaa
cmp
dec
xchg
(bad)
xchg
mov
xor
mov
retf
call
data16
in
push
sahf
(bad)
pop
push
pop
jo
fisttp
sahf
psubb
pop
inc
sbb
xchg
cmp
or
jecxz
sbb
imul
push
dec
sbb
addr16
js
icebp
xor
loope
js
add
dec
and
add
cmp
outs
test
ja
mov
cmp
icebp
enter
sbb
pop
cmp
data16
push
(bad)
adc
xor
jp
pop
push
inc
popa
out
sti
neg
outs
repz
jge
repz
mov
jl
lock
inc
in
cmp
and
sub
outs
fbstp
out
(bad)
sti
jmp
jle
dec
jo
mov
and
adc
push
push
add
pop
enter
xchg
das
fnstsw
inc
cwde
(bad)
fcmovbe
inc
in
jmp
ret
pushf
paddsb
mov
or
pop
push
cs
sub
xchg
add
jmp
push
outs
iret
icebp
xchg
mov
add
fbstp
and
sbb
cmp
or
mov
dec
iret
jns
and
call
mov
pop
repz
mov
stc
fs
dec
out
test
push
fsub
xor
mov
mov
sti
mov
shl
arpl
div
js
or
mov
aas
stc
in
xchg
dec
nop
pop
xor
js
xchg
sub
call
push
jmp
cs
out
les
xor
mov
xchg
cmp
sub
push
mov
ror
fstp
imul
mov
sub
inc
icebp
pop
cmp
int
dec
mov
mov
call
clc
mov
lods
retf
cmp
ja
jmp
add
sbb
cld
mov
mov
dec
loop
test
xor
aam
pop
mov
outs
push
movs
mov
or
int
xchg
mov
add
jns
push
pop
inc
mov
popa
test
mov
rcr
sti
out
jmp
jmp
xchg
adc
scas
(bad)
popf
popf
push
bound
movs
mov
pop
push
out
shl
je
scas
mov
fimul
fisttp
dec
mov
and
hlt
xor
and
das
mov
inc
mov
dec
and
aas
shl
mov
dec
in
jnp
sub
(bad)
jmp
mov
movs
fmul
xchg
jnp
sar
add
jmp
cmps
mov
jb
inc
in
call
cld
adc
pop
lock
in
sbb
cld
or
movs
or
add
std
adc
cli
ds
dec
icebp
repz
into
pop
cmc
adc
je
enter
(bad)
push
push
adc
push
(bad)
fwait
xor
and
push
xor
dec
xor
int3
cld
add
or
inc
arpl
repnz
inc
out
in
call
in
jecxz
out
retf
wrmsr
or
mov
push
aaa
mov
xchg
jecxz
mov
sti
mov
dec
movs
mov
js
and
nop
leave
mov
retf
movs
sub
xchg
mov
cmp
xchg
cdq
xchg
dec
add
xchg
mov
and
ds
arpl
shl
pop
and
addr16
and
and
je
adc
inc
hlt
movs
xchg
sbb
push
lahf
mov
xor
cmps
mov
mov
pop
cmps
mov
repnz
in
mov
mov
test
cmp
test
idiv
cmp
xor
pop
ret
test
mov
cmp
test
xchg
movups
inc
mov
xchg
ficomp
nop
push
iret
xor
es
mov
xchg
push
push
rcl
jb
pop
jne
push
sub
sbb
dec
(bad)
adc
sar
sbb
aad
or
mov
jge
sbb
addr16
retf
popf
int3
push
dec
outs
jmp
and
or
enter
push
cmp
add
std
mov
call
cdq
std
call
lea
mov
push
test
push
inc
lods
pop
std
out
popa
stos
push
inc
pushf
mov
xchg
sti
mov
jae
mov
xchg
test
cmc
mov
sub
jne
jbe
pusha
ds
or
dec
stos
enter
jmp
push
jne
push
and
jecxz
inc
or
in
das
pop
lock
(bad)
cmc
mov
hlt
mov
push
movs
cs
push
scas
ret
push
retf
pop
sub
in
outs
add
mov
icebp
sbb
lds
mov
int3
dec
aad
ret
mov
adc
mov
cmp
in
jns
cmp
push
movs
xor
jle
(bad)
pop
cmp
in
xchg
fs
test
xchg
inc
jmp
and
inc
jg
enter
test
dec
inc
mov
mov
push
jge
aaa
test
jb
mov
inc
out
sub
and
jbe
add
call
lods
scas
xchg
sbb
inc
or
push
in
adc
pop
(bad)
lahf
popf
bound
mov
dec
push
enter
mov
adc
jecxz
xor
mov
mov
sub
sbb
mov
mov
xor
sbb
lock
pop
mov
fwait
inc
repnz
mov
sbb
sub
jno
adc
dec
loopne
add
popa
push
mov
ror
call
sbb
in
mov
inc
and
jns
pop
jae
sbb
retf
xchg
aaa
out
outs
add
dec
out
imul
es
and
dec
scas
push
cmps
lahf
fs
jmp
dec
or
or
and
cwde
pushf
mov
scas
aad
stos
adc
cmps
jmp
adc
or
pop
repnz
and
nop
rcr
rol
sti
xchg
test
sahf
pusha
aam
in
enter
(bad)
test
adc
in
lods
aam
clc
xchg
push
inc
and
and
int
mov
outs
pushf
push
outs
aad
inc
jns
das
or
and
mov
sub
and
cmc
jae
sti
sub
xor
movs
jnp
push
or
ds
stc
dec
lock
adc
lods
dec
jb
cs
dec
xchg
pop
icebp
test
xchg
dec
loop
arpl
jnp
inc
mov
cmp
push
int
pop
popa
(bad)
ins
cli
xchg
aad
dec
mov
cmp
xor
mov
aas
mov
fbstp
shl
mov
retf
sub
test
mov
es
aam
cmp
push
leave
es
aaa
cmp
fmul
mov
adc
or
sbb
icebp
jecxz
cmp
adc
leave
sub
mov
pop
xchg
cli
adc
mov
movs
jg
lock
pop
in
push
mov
(bad)
mov
ret
pop
repnz
int
push
cmp
mov
sbb
xchg
push
(bad)
pop
mov
lods
jle
ss
aas
lar
dec
imul
fiadd
movs
sbb
call
jnp
jns
or
or
rcl
and
call
enter
pop
ret
pop
or
sbb
xchg
xchg
pushf
xor
push
xchg
outs
lods
fst
or
and
adc
dec
jae
jmp
out
jae
repz
fisttp
mov
fild
rol
or
push
sub
repz
fisttp
jne
mov
add
aam
fsubr
fstp
fsub
mov
ss
int3
xor
loop
dec
jge
pop
fwait
aas
test
ss
lea
loopne
ret
fst
cdq
inc
jne
push
outs
add
xchg
add
fisub
sahf
lods
jmp
sbb
mov
popa
je
xchg
dec
outs
mov
inc
(bad)
jno
or
push
adc
sub
hlt
mov
iret
cmps
and
test
adc
jb
pop
pusha
jo
lock
mov
rol
lods
shl
in
cmp
jg
xor
(bad)
jecxz
or
mov
inc
stos
ror
lahf
mov
outs
in
scas
sub
pop
pop
test
sub
test
test
sar
aam
push
push
fiadd
mov
nop
add
sysenter
stos
add
or
call
call
aas
inc
movs
ret
jmp
and
sub
arpl
imul
iret
shl
xor
xor
fucomp
mov
int
xor
in
mov
stos
or
dec
dec
cwde
movd
cmp
or
mov
rol
test
fcom
rol
xchg
sar
popa
mov
sbb
addr16
add
jne
lds
and
or
or
scas
or
and
mov
and
sbb
sti
loopne
mov
loope
and
fcomi
mov
add
adc
xor
push
enter
pand
adc
mov
push
mov
mov
xchg
inc
bound
adc
mov
cmp
mov
(bad)
es
mov
push
ins
and
jmp
or
adc
mov
das
push
icebp
movs
cs
jo
push
lea
gs
xchg
je
gs
movs
sbb
fst
xor
in
mov
xchg
cmps
jle
test
jo
xchg
push
or
jg
in
inc
jae
pushf
push
retf
pop
sbb
inc
fs
outs
stc
xor
mov
push
xor
pop
jno
les
test
and
pop
add
cmp
xchg
ss
push
rcl
xor
aas
mov
jl
jl
shl
jle
dec
jnp
cmc
pop
das
cmps
inc
mov
push
mov
shr
xchg
push
pop
das
mov
sti
inc
push
jb
pushf
shl
sbb
mov
ja
mov
pushf
retf
jecxz
jg
fsub
ins
out
xor
push
and
std
call
mov
mov
and
push
add
aam
sbb
ror
mov
enter
jo
outs
push
ret
nop
loopne
lea
ins
scas
push
mov
mov
push
xchg
xchg
and
fsub
jb
push
add
mov
mov
add
xchg
fisub
xchg
mov
xchg
test
push
into
jae
inc
bound
jbe
pop
or
in
fs
retf
push
adc
cmp
pop
xor
pop
mov
push
jmp
jmp
cmc
cmc
(bad)
out
mov
fdiv
ror
mov
or
fistp
es
adc
out
loopne
mov
ds
dec
ja
aas
int
pop
es
mov
mov
pop
mov
and
inc
popf
xor
dec
jbe
xchg
add
int3
push
mov
cdq
jae
xlat
jg
pop
xor
es
push
icebp
jmp
cmp
repz
out
mov
(bad)
push
outs
adc
les
mov
or
push
cwde
mov
xchg
xlat
dec
xchg
out
mov
mov
mov
test
dec
dec
lahf
fwait
adc
mov
and
fwait
jae
ret
fwait
sbb
dec
(bad)
hlt
cmp
add
mov
fidivr
jmp
xlat
(bad)
and
dec
ins
adc
arpl
or
out
mov
retf
dec
dec
mov
mov
and
repz
xor
mov
add
mov
cmp
mov
or
out
iret
sbb
or
cmp
mov
out
fsub
mov
xchg
jp
in
imul
loope
and
nop
fs
paddsb
sub
add
(bad)
test
xor
jbe
dec
pop
cmp
add
sti
jp
jne
sbb
cmps
push
pop
outs
jp
loopne
inc
mov
pop
pop
outs
std
fs
das
je
addr16
xlat
lods
adc
push
cs
push
inc
adc
test
mov
mov
ret
rol
and
out
cmps
adc
mov
sbb
fcom
dec
mov
xchg
ins
dec
inc
mov
fnstsw
add
push
mov
add
fisttp
jbe
pusha
push
ret
lds
test
push
test
mov
gs
frstpm(287
sub
pop
sub
pop
xor
retf
loop
daa
movs
mov
lock
mov
mov
and
or
retf
jecxz
mov
cmps
push
dec
xor
dec
sbb
popa
clc
mov
pop
rcl
sub
push
dec
ds
dec
add
xchg
aad
pop
retf
mov
repz
stc
cwde
cmp
or
or
popa
push
ins
cmp
add
jmp
push
cwde
mov
pop
or
sub
or
dec
test
mov
xor
sbb
aam
pop
pop
aam
inc
arpl
adc
icebp
pop
pop
or
iret
or
mov
scas
int
in
cmp
test
sub
ins
enter
adc
cmp
les
adc
xchg
jmp
mov
shl
fsubr
jl
or
imul
shr
std
out
push
das
lahf
(bad)
or
pop
outs
dec
add
int
ret
push
sub
and
jo
push
dec
pop
lods
xchg
pop
test
mov
hlt
adc
xchg
adc
shl
test
movs
pop
out
movs
and
sar
inc
sub
jae
cli
sar
xchg
rcr
mov
dec
mov
out
pop
push
cdq
cmp
aas
sbb
jecxz
test
xchg
loopne
jno
cdq
out
call
hlt
cwde
push
out
(bad)
aad
scas
(bad)
push
xor
inc
dec
and
jge
into
xor
arpl
push
mov
mov
dec
popa
in
inc
out
sahf
shr
dec
in
mov
cmp
call
xor
add
or
sub
cmp
lods
pop
fs
pushf
(bad)
mov
sbb
imul
imul
jb
dec
pop
mov
mov
out
jp
shl
test
(bad)
jae
in
xchg
fldz
or
and
iret
inc
mov
adc
aaa
into
movs
mov
jmp
(bad)
fisub
xchg
pop
cld
xor
or
clc
cmp
pop
and
mov
test
jns
sahf
ja
int
xchg
cmps
stos
inc
sbb
(bad)
and
inc
inc
mov
addr16
daa
pop
adc
aas
outs
pop
jbe
or
(bad)
scas
addr16
bound
sar
pop
mov
ss
fmul
pop
sbb
mov
(bad)
cdq
fiadd
mov
or
jo
and
stos
jno
fistp
mov
mov
scas
ss
and
retf
pop
sti
and
popa
(bad)
gs
jmp
or
scas
into
das
pusha
ins
pop
xchg
jns
popf
aad
bnd
sbb
ja
cdq
test
cmp
or
pop
cmp
stc
clc
xchg
dec
pop
outs
inc
dec
xor
jno
pushf
cmp
or
dec
in
add
fimul
lahf
sbb
or
sar
add
jle
scas
scas
aaa
dec
jle
pop
mov
inc
jbe
call
xchg
or
mov
cmc
inc
leave
add
mov
xor
loope
push
cld
fdiv
fisttp
lods
mov
stc
dec
ds
in
mov
inc
dec
test
mov
stos
scas
dec
mov
push
cld
iret
jns
aad
mov
mov
fcmovnbe
mov
xor
lods
adc
mov
xchg
out
push
imul
ins
push
jb
test
test
and
icebp
mov
(bad)
sub
cmc
sbb
pop
popa
mov
or
sbb
xor
pop
fld
or
js
xchg
popf
cmc
jge
fst
stos
xor
pop
inc
xchg
cs
jmp
test
xchg
shr
outs
cld
mov
test
ins
inc
mov
arpl
repz
jb
ror
hlt
xchg
xor
sub
scas
push
ins
les
jg
leave
fisubr
lea
pop
pop
push
or
add
and
xor
xlat
push
push
lea
(bad)
mov
mov
call
scas
add
inc
mov
jne
push
cmp
daa
cmp
fbld
ins
and
xor
mov
ins
mov
xchg
cmp
test
jg
fist
xchg
add
loop
pop
xlat
jbe
xchg
pop
sub
pop
mov
loop
and
stos
setae
bound
dec
enter
data16
aas
enter
jmp
cmp
push
loope
rcl
fwait
js
jmp
fstp
cmp
aam
cmps
mov
and
sbb
aas
push
adc
jae
push
pop
out
push
out
popa
jae
in
xor
jno
mov
add
dec
fsub
cmc
sar
mov
sub
jns
mov
test
fs
and
addr16
jne
je
popa
scas
leave
push
xchg
idiv
daa
adc
adc
jbe
das
push
jg
loopne
push
sub
jns
aam
test
push
mov
stos
mov
push
and
inc
and
push
std
aad
mov
shl
mov
cmps
jae
mov
dec
push
dec
cmp
cwde
rol
loope
popf
mov
addr16
out
ficom
movs
retf
out
(bad)
push
or
in
jle
daa
xor
ficomp
or
cmc
stc
inc
mov
mov
xchg
inc
outs
scas
call
dec
inc
fiadd
mov
ds
mov
mov
cmp
or
fild
sbb
adc
push
retf
inc
cmc
fs
mov
gs
out
jge
movs
mov
jp
adc
xchg
cmp
mov
sar
mov
test
leave
call
adc
scas
nop
ja
and
std
in
bound
mov
stos
out
sub
cmp
popf
scas
or
adc
mov
sbb
jmp
out
inc
movs
mov
xor
xchg
push
bts
pop
mov
lods
test
(bad)
or
(bad)
inc
aad
imul
mov
push
icebp
repz
loope
sbb
(bad)
pop
enter
inc
pop
scas
les
scas
inc
sub
push
xor
cs
mov
pushf
call
push
int
out
mov
in
mov
nop
mov
sbb
data16
rcr
icebp
jmp
imul
sbb
and
imul
jae
fstp
push
je
inc
fnstenv
aad
dec
cmp
mov
adc
sub
sbb
fdiv
adc
dec
mov
ins
jb
inc
cmp
test
fcmovnu
ret
mov
push
shl
gs
mov
out
stc
imul
repz
jnp
lock
jecxz
aad
fidiv
test
xchg
in
cmp
jl
jmp
into
mov
cs
push
ins
xor
xor
ret
xchg
sub
sbb
or
retf
test
arpl
cs
sub
mov
lock
mov
xchg
aaa
mov
fsub
sub
imul
test
push
cmp
mov
scas
mov
xchg
xchg
jecxz
xchg
stc
adc
adc
sahf
jno
cdq
out
jle
cmp
nop
(bad)
jne
and
dec
jmp
inc
out
outs
and
daa
fwait
stos
xchg
sbb
sbb
or
loop
lods
cmps
or
fadd
sub
(bad)
xor
imul
into
push
ret
inc
dec
scas
inc
test
fs
adc
xchg
call
cli
sbb
arpl
inc
cmps
div
jmp
push
je
lods
fcmove
leave
pop
dec
jg
inc
retf
inc
cmp
cld
inc
sub
sar
push
inc
fs
int
xor
sar
sti
popa
fwait
mov
xchg
mov
inc
pop
pop
dec
pop
adc
mov
mov
je
sub
xchg
std
xchg
jge
push
enter
inc
leave
add
mov
jae
ret
lods
repnz
and
sub
cli
or
dec
inc
fadd
shl
mov
jg
cmp
and
(bad)
(bad)
xchg
test
call
sub
add
mov
(bad)
mov
cdq
ins
rol
xor
loopne
push
mov
popf
sub
mov
mov
jg
ss
fisub
jb
mov
cdq
fstp
ror
lods
cmc
fld
ds
es
mov
rol
push
js
stos
in
pop
or
call
scas
lods
adc
jl
pop
sti
push
dec
out
mov
ror
std
push
ss
les
ds
mov
cld
(bad)
ds
push
(bad)
movs
mov
inc
push
lock
out
cli
lahf
xor
ins
pop
outs
mov
ja
push
and
test
push
enter
adc
push
(bad)
ret
mov
add
or
call
push
retf
sbb
mov
inc
mov
lahf
icebp
pop
push
out
iret
adc
pop
jecxz
dec
cdq
stos
loopne
data16
ror
dec
fsub
sbb
sahf
and
fdivr
sub
mov
inc
cmp
mov
dec
dec
pop
mov
cmp
push
xchg
sbb
js
addr16
fmul
addr16
gs
jne
sahf
cmps
retf
adc
ins
xor
xchg
add
sub
pop
test
scas
pop
xor
cs
addr16
mov
neg
dec
add
add
inc
jmp
(bad)
sub
xchg
xchg
xchg
aas
and
push
jae
jb
in
ds
daa
cli
das
adc
mov
sbb
add
add
jle
sbb
cmp
xchg
jmp
add
pop
push
(bad)
and
int3
retf
mov
adc
push
out
aam
arpl
mov
outs
pop
inc
pop
cs
ret
test
in
test
or
push
shl
clc
xchg
popf
dec
mov
sbb
inc
xor
sar
xlat
imul
xor
gs
pop
jmp
mov
cmp
into
xchg
pop
outs
and
loop
dec
adc
pusha
movs
mov
pop
mov
dec
pop
jmp
mov
(bad)
ja
aaa
inc
popf
dec
push
xchg
adc
push
retf
jmp
xor
loope
jne
jl
shl
dec
std
lods
sub
ud0
sub
aaa
adc
adc
sbb
outs
adc
(bad)
push
inc
aaa
imul
aam
fidivr
mov
xchg
out
out
xor
sub
das
ins
jno
pop
mov
xchg
jmp
jb
mov
xlat
fs
mov
test
daa
ins
fadd
cdq
(bad)
ss
retf
mov
rcl
dec
cmps
sub
nop
dec
xor
mov
sub
push
pusha
or
add
sbb
aaa
test
fnstsw
jae
in
leave
inc
call
sbb
loopne
lahf
push
rcl
test
xor
xlat
dec
xor
push
sar
wrmsr
mov
pmullw
jge
add
mov
mov
(bad)
scas
call
push
and
rcr
mov
js
ror
iret
mov
xchg
(bad)
push
fisubr
mov
popa
dec
sbb
inc
ror
ins
cmp
adc
push
rol
(bad)
sub
lahf
call
nop
nop
rol
fcom
ror
jns
dec
or
add
adc
xchg
jge
je
outs
jmp
jl
sbb
add
cmp
imul
pop
pusha
and
fidivr
pop
shl
pusha
aaa
and
es
add
fdivr
in
mov
pop
cmp
fmul
fmul
push
jmp
or
std
xchg
jno
mov
frstor
pop
mov
xchg
mov
ja
cmc
fwait
mov
sub
and
mov
aas
mov
xor
mov
dec
xchg
mov
imul
xor
mov
mov
sahf
retf
addr16
(bad)
mov
jle
std
repz
call
mov
test
add
cld
adc
mov
jb
pop
sub
inc
test
inc
out
push
xor
jge
pop
push
and
lea
shl
(bad)
mov
jg
and
ror
mov
enter
fistp
shl
icebp
mov
cmp
mov
neg
stos
mov
test
inc
ja
lds
jns
cld
repnz
pop
jne
jo
and
ret
call
rcl
ficomp
test
inc
add
mul
js
fnstenv
dec
into
mov
cmp
repz
push
mov
outs
cmp
test
fsubr
jae
sbb
out
mov
mov
int
enter
icebp
dec
or
add
push
jno
das
scas
add
shl
repnz
mov
scas
and
into
xor
pop
add
sbb
movs
jmp
dec
fst
sahf
mov
xor
int
pop
mov
xchg
pop
cwde
jo
sbb
mov
push
adc
fldcw
rcl
jp
xor
movs
popf
adc
fistp
cmps
sbb
cmc
fwait
movs
mov
pop
push
pushf
imul
pop
adc
dec
jmp
mov
(bad)
scas
mov
adc
mov
sbb
outs
jmp
and
daa
add
or
imul
mov
bound
push
pushf
jo
fs
jp
xchg
mov
jae
fwait
sub
scas
mov
inc
jb
sti
push
jp
xchg
imul
and
fcom
lahf
sub
mov
or
pop
pop
sub
jge
(bad)
pop
ins
mov
dec
pop
dec
and
call
lahf
jmp
movs
sbb
ds
push
rol
(bad)
fisubr
cmp
inc
aas
nop
popf
fst
pop
xchg
xor
cwde
mov
std
pop
ret
and
cmp
adc
dec
and
mov
stos
jo
push
or
sub
mov
cmp
test
stos
rcpps
sbb
push
(bad)
pop
cmc
jge
jns
mov
out
outs
xchg
sti
popa
ss
inc
mov
fstp
jmp
fcom
je
xchg
inc
push
push
std
mov
and
call
pushf
(bad)
dec
rcl
sub
out
cs
in
xor
test
test
cld
paddusw
retf
aaa
fistp
push
push
data16
inc
ins
cdq
xchg
mov
daa
push
lea
mov
sbb
or
inc
sbb
mov
(bad)
repz
dec
adc
adc
rol
mov
ss
mov
mov
js
jnp
rcl
jno
inc
push
adc
jge
data16
push
sbb
loopne
call
jo
sahf
shr
sub
jp
popa
dec
scas
mov
mov
(bad)
leave
test
data16
mov
mov
jmp
push
scas
add
inc
inc
retf
jmp
sub
or
mov
pop
adc
(bad)
shl
xor
pop
rol
add
rcr
and
lea
push
neg
outs
inc
sahf
jb
enter
mov
aad
xor
xchg
mov
sbb
push
cli
test
mov
lods
mov
or
xchg
test
out
daa
push
adc
xchg
mov
push
mov
and
jle
pop
sbb
imul
sti
(bad)
mov
sbb
bound
adc
mov
and
in
aas
or
mov
fcomi
je
nop
pop
fbld
jmp
jnp
push
xchg
popf
repz
icebp
sub
dec
ins
pop
repnz
mov
and
aad
push
movs
push
cmp
push
adc
ss
ja
test
lds
lds
pusha
enter
inc
xor
call
aad
push
nop
out
jmp
dec
aam
ins
cmp
mov
mov
sbb
jmp
mov
(bad)
sub
cmp
push
jmp
adc
clc
test
das
fild
inc
sahf
jae
mov
cdq
fcomi
div
fstp
cmp
retf
pop
mov
fstp
sbb
mov
jge
pop
mov
stos
dec
call
retf
cmp
xlat
inc
mov
dec
adc
and
ficomp
xchg
jge
jnp
call
stc
push
xor
push
rcr
pop
dec
imul
loope
jp
arpl
rcr
sbb
jge
aad
mov
fmul
das
pop
shl
mov
dec
and
xchg
dec
cmps
enter
(bad)
xor
mov
inc
push
call
push
arpl
popf
daa
push
fist
adc
mov
xor
fild
pop
and
mov
mov
xchg
and
lods
in
xor
(bad)
es
push
popf
jb
xor
lock
gs
sbb
das
push
push
lods
not
je
push
fdivr
inc
cmc
pop
sub
and
or
pop
mov
scas
jmp
rcl
int3
jge
sub
push
push
sbb
popf
call
lods
hlt
imul
inc
jae
add
icebp
dec
sti
ror
mov
cmp
pushf
aas
cwde
adc
add
mov
aad
xor
sbb
sbb
mov
rol
ror
xchg
rcr
cli
test
xchg
jecxz
rcr
sub
(bad)
in
cmp
xor
scas
popa
jmp
xor
cmp
jmp
dec
jo
pop
das
mov
mov
daa
sbb
int3
loopne
pop
neg
pop
es
sbb
lds
sbb
cs
aam
mov
outs
test
lock
xchg
mov
test
stc
not
stos
jecxz
inc
xor
mov
in
lea
ins
push
mov
and
call
xor
inc
sub
lea
lods
gs
dec
pop
fwait
pop
mov
repz
sahf
pop
add
imul
outs
stos
cmp
mov
adc
mov
aam
push
ins
inc
sbb
cmp
push
pop
sub
pop
and
call
nop
fdivp
adc
push
call
inc
fist
sbb
in
int
dec
fisttp
add
paddusb
lea
int
cmp
std
jo
adc
or
push
jns
sub
sbb
jle
or
or
xchg
xchg
aas
sti
xor
jno
mov
xor
pushw
fwait
out
jl
sub
push
pop
sti
jge
aaa
addr16
inc
sub
add
jo
pop
mov
sar
mov
movs
(bad)
push
jecxz
outs
add
and
dec
shl
or
adc
imul
push
imul
xchg
add
adc
and
je
or
inc
mov
dec
(bad)
nop
pop
push
scas
xor
sahf
adc
jo
pop
add
inc
mov
mov
or
out
loop
add
mov
cli
fwait
cmp
fincstp
or
mov
xor
int3
push
sub
mov
mov
loop
lea
movs
retf
outs
aad
mov
mov
int3
sahf
adc
sti
shl
retf
out
sbb
loopne
pop
xor
test
test
sub
fwait
jge
cmp
sbb
add
in
mul
ss
sbb
out
pop
ror
stos
gs
cmp
dec
mov
sbb
test
stos
inc
jge
stos
fnstenv
add
dec
(bad)
bnd
add
mov
add
unpcklps
dec
imul
jg
movs
push
and
(bad)
retf
jnp
sub
fmul
lea
rcl
test
dec
cmp
ret
push
adc
stc
in
aas
cwde
xchg
xor
outs
sti
xchg
jbe
jb
ror
add
fwait
cmp
mov
ins
loope
cmp
mov
push
jb
dec
cdq
fmul
cld
xchg
mov
mov
dec
imul
pop
pop
xor
jmp
scas
ins
mov
retf
sar
sbb
sbb
add
cmp
movs
inc
adc
shl
cld
fmul
(bad)
pushf
js
sbb
adc
dec
rcr
cmp
(bad)
adc
push
push
or
mov
test
adc
xor
mov
and
mov
mov
(bad)
aaa
push
dec
push
dec
pop
cli
bnd
pushf
retf
jb
lds
icebp
stos
push
inc
enter
cs
leave
cli
jne
push
fst
ss
push
mov
pushf
lahf
cmp
sbb
shl
and
stc
div
xchg
dec
sbb
inc
mov
inc
cdq
inc
pop
popa
sbb
fisubr
mov
and
mov
shl
nop
xchg
jmp
call
mov
mov
sbb
xlat
jmp
(bad)
les
sbb
pop
jp
add
add
test
repnz
xlat
icebp
jl
push
imul
sbb
cld
sbb
dec
sbb
push
ins
sbb
sub
pushf
clc
fwait
mov
ror
add
in
into
std
inc
mov
das
ror
pop
pop
pmulhw
mov
push
and
shl
and
mov
jle
addr16
cwde
xchg
push
ror
ds
call
adc
sar
inc
or
jne
fiadd
fidiv
lods
sahf
pop
push
xor
stc
pop
je
sbb
inc
mov
push
ins
mov
mov
push
out
fcmovu
and
pop
jle
cdq
fwait
push
cmps
in
je
cmps
stos
out
pop
aam
mov
or
stos
inc
mov
pop
ins
in
stc
mov
adc
mov
xor
mov
adc
gs
arpl
add
mov
sub
shl
adc
(bad)
aam
jno
jmp
dec
push
cmp
add
scas
add
sub
retf
lods
retf
xchg
jmp
inc
mov
arpl
nop
pop
mov
in
cmps
aam
ret
xor
sub
retf
xor
int3
jl
inc
je
(bad)
xchg
jno
inc
in
fmul
pop
dec
jns
dec
sub
mov
jo
sahf
push
out
push
sbb
mov
mov
into
mov
jbe
xchg
cli
mov
sbb
push
and
fcom
enter
and
call
mov
mov
out
sub
cld
lds
ins
push
aam
jecxz
push
mov
sub
aad
pop
cmps
jle
jecxz
pop
cmp
cmp
fdivr
add
or
and
retf
cs
nop
lds
fcmovb
out
(bad)
sbb
push
jns
popf
daa
xor
nop
inc
xlat
mov
ror
js
cld
icebp
jne
lods
out
or
cmc
mov
jmp
mov
jp
and
fstp
push
repz
or
cdq
cmps
jbe
loope
call
repz
shr
mov
xchg
pop
pop
add
push
mov
retf
gs
rol
fbld
push
inc
out
imul
xchg
and
bound
add
cs
ins
push
ss
nop
sar
sub
fist
jns
pop
push
jno
ja
cmp
push
xlat
std
test
pusha
pop
arpl
out
mov
iret
push
movs
xor
add
lods
retf
mov
jns
leave
out
jl
jne
test
inc
test
fadd
add
pop
xor
adc
inc
mov
out
mov
mov
xchg
jb
push
mov
and
push
dec
sbb
js
hlt
sub
jmp
lds
cmp
or
mov
xlat
lahf
add
js
dec
cs
jae
push
mov
dec
ja
loop
mov
xlat
lds
or
cmp
out
adc
popa
fidiv
scas
cmc
cmp
mov
js
inc
addr16
and
cmp
jg
mov
gs
and
int
hlt
mov
inc
punpckhwd
lea
and
and
xchg
call
int3
sahf
fist
sbb
jbe
mov
(bad)
dec
sbb
inc
lds
mov
push
ss
repz
inc
cmp
cli
aas
inc
jge
push
enter
jns
push
neg
mov
das
loop
pop
xchg
loop
pop
cld
out
mov
or
and
shl
sbb
xchg
popa
pop
(bad)
sub
xor
lahf
pop
push
jmp
jae
push
sbb
mov
xor
leave
loop
dec
in
mov
jns
xor
bound
push
arpl
jo
sbb
mov
mov
bound
mov
fisub
push
mov
jecxz
retf
mov
xor
or
and
xchg
fiadd
fisttp
push
repnz
mov
or
in
retf
push
retf
fmul
repz
mov
aaa
jl
cwde
popf
jns
in
jns
enter
imul
fwait
in
arpl
dec
fdiv
test
jmp
(bad)
cld
sub
inc
outs
loop
ror
inc
(bad)
adc
dec
shl
mov
loop
mov
lea
pop
in
pop
push
and
enter
jnp
into
pop
dec
push
fst
outs
push
pop
xchg
push
mov
repz
scas
push
xor
pop
dec
push
in
cmp
ja
ins
mov
sub
sub
dec
cmps
(bad)
shl
mov
into
fs
ins
push
mov
mov
lds
sbb
push
add
pop
in
ss
add
and
cmp
dec
and
inc
in
cmc
fistp
(bad)
xchg
cmp
push
cwde
pop
dec
inc
and
scas
lods
mov
cwde
sub
adc
mov
lods
das
(bad)
sub
mov
sbb
lea
es
leave
jl
icebp
enter
outs
mov
pop
(bad)
inc
inc
jo
out
xchg
ins
mov
cmp
pop
sub
cld
les
ds
aas
jns
push
fld
dec
ja
sub
out
scas
rcr
adc
in
cmp
push
(bad)
jo
imul
dec
mov
mov
sub
xor
stos
(bad)
ror
(bad)
xchg
fidivr
mov
jle
movs
push
xlat
and
jno
test
mov
sub
fnstcw
push
inc
(bad)
rcr
ins
sub
push
js
adc
pop
(bad)
int
xor
sub
fbstp
mov
push
ficom
push
div
mov
(bad)
cmp
push
mov
into
mov
popf
hlt
push
jbe
and
aaa
cmp
hlt
(bad)
call
push
in
aam
add
xchg
mov
int
or
dec
in
sub
icebp
add
das
dec
xchg
iret
fist
push
sbb
cmps
lock
adc
dec
div
xchg
ins
adc
jecxz
ror
mov
push
(bad)
push
cs
jg
xor
and
sbb
scas
inc
inc
je
es
ret
mov
imul
or
xor
sbb
push
outs
test
jmp
xchg
ins
dec
test
cmps
dec
loop
cli
xchg
daa
rcl
sahf
out
push
lods
mov
ficom
loope
dec
mov
inc
mov
sub
jno
fisttp
jno
adc
sbb
test
or
push
adc
adc
pop
pusha
jae
(bad)
jl
ins
mov
pop
mov
and
mov
imul
push
outs
push
push
push
xchg
mov
test
mov
dec
retf
mov
ffreep
aas
cdq
xor
mov
rcr
aaa
jmp
or
test
jb
(bad)
jge
(bad)
mov
imul
fisubr
test
mov
(bad)
xlat
loope
ins
mov
nop
aaa
push
bound
jle
sbb
sahf
stos
lds
push
jno
push
fistp
mov
test
int3
sbb
xchg
inc
cmp
test
or
mov
push
mov
pop
add
shl
iret
mov
xor
adc
push
push
cmc
pop
(bad)
leave
push
xchg
mov
pop
out
add
lods
push
dec
sub
shr
sti
pop
mov
jne
shr
sub
xchg
mov
pop
shl
adc
lahf
xchg
movs
int
bound
xor
imul
repz
mov
adc
xchg
and
pop
xor
mov
retf
xor
cmp
ror
mov
mov
mov
call
sub
cli
mov
stos
and
xchg
fstp
pop
add
mov
movs
mov
xchg
out
jge
cs
dec
cdq
pop
jns
jns
push
aad
sub
cld
push
cmp
stos
scas
xchg
push
dec
push
aad
jb
fild
push
pop
mov
sub
or
out
ins
push
out
mov
xchg
sub
scas
ret
jg
sub
mov
or
mov
jo
jo
mov
mov
movs
stos
add
into
mov
ins
pop
xchg
mov
jb
mov
or
jp
stos
and
cmp
inc
test
fstp
cmp
stos
icebp
pop
aam
lods
cmp
js
je
jle
je
push
jmp
cmps
aas
nop
and
call
fldenv
cmp
aaa
and
fst
add
enter
jnp
lds
adc
and
or
ret
mov
push
inc
retf
mov
inc
mov
dec
sub
push
retf
mov
sub
jp
add
popa
inc
push
xchg
mov
mov
fimul
xor
cmps
mov
jmp
mov
je
push
into
jmp
inc
ret
cmp
test
inc
inc
mov
pop
int3
fdiv
jp
sbb
sar
sbb
aas
mov
dec
xchg
jne
jle
sub
jmp
call
lods
lods
mov
(bad)
adc
pop
das
sar
push
imul
xor
int3
fs
movs
(bad)
jnp
sti
inc
call
mov
jl
cmps
frstor
jp
je
pop
(bad)
cmp
ss
cmps
xor
inc
add
dec
test
cmovb
fisub
popa
pop
ins
retf
int
adc
sbb
mov
call
jb
popa
jnp
xchg
and
ins
xchg
(bad)
movs
mov
pop
stos
or
pushf
shl
fsub
xchg
sub
(bad)
fisub
fs
rcr
inc
jnp
pop
mov
mov
and
mov
mov
retf
leave
pusha
fnstcw
xchg
(bad)
scas
inc
imul
xor
xchg
lds
(bad)
adc
or
pop
xlat
test
mov
push
mov
ins
sub
xchg
jbe
test
jl
enter
inc
dec
in
jle
pop
vpunpckhqdq
mov
imul
je
add
inc
sub
jb
fild
loope
jl
int3
inc
and
test
mov
push
in
or
ret
cld
adc
jl
add
addr16
repz
movs
dec
in
enter
push
loop
(bad)
repz
clc
imul
mov
and
test
fs
inc
rcr
push
mul
mov
mov
pop
mov
outs
xchg
out
dec
out
add
pop
jnp
and
jnp
and
mov
pop
mov
out
fwait
bnd
dec
xor
mov
icebp
test
xchg
and
data16
push
dec
rol
adc
repz
mov
inc
inc
adc
sub
hlt
repnz
xor
cmps
jns
mov
adc
cmps
icebp
add
fs
mov
es
es
inc
jne
cmc
arpl
jecxz
jge
inc
(bad)
dec
mov
loop
inc
imul
jmp
adc
jne
pop
pop
pop
or
(bad)
popf
mov
adc
(bad)
fst
das
fidivr
pushf
out
mov
or
jmp
ins
mov
retf
push
pop
push
or
loopne
jmp
loope
inc
sbb
and
test
and
stc
xor
inc
in
xchg
push
not
sbb
dec
mov
std
out
dec
sbb
jnp
or
xor
jb
xchg
inc
mov
push
jmp
lahf
shl
inc
sbb
aaa
xlat
jbe
cld
xor
scas
mov
mov
or
lods
test
fsub
push
pushf
cmp
out
cwde
div
lods
xchg
xchg
leave
out
pinsrw
test
ror
dec
dec
mov
or
add
into
into
aad
in
mov
mov
int3
xchg
pop
xchg
or
or
retf
sub
popa
xor
or
bound
rcl
add
sub
mov
cmp
xchg
xchg
jo
add
or
xchg
inc
ret
pop
mov
pusha
push
dec
dec
shr
pop
cmp
cld
adc
jmp
mov
mov
push
sub
adc
add
jmp
push
jle
inc
(bad)
repnz
sub
repz
sub
mov
mov
inc
mov
jmp
out
cmp
cmp
mov
add
dec
imul
popf
cmp
pop
sbb
dec
mov
mov
ins
shl
(bad)
rcr
push
sbb
(bad)
lds
dec
xchg
sub
je
call
stc
stos
cmp
les
mov
or
jge
pop
push
xchg
aad
mov
(bad)
mov
mov
outs
fidivr
call
daa
jl
fwait
sub
or
gs
mov
jle
adc
xor
dec
loope
aas
dec
jle
mov
mov
ds
(bad)
mov
iret
test
cli
xchg
lahf
or
jnp
daa
clc
xchg
fidivr
sub
fisubr
std
outs
fidiv
pushf
ins
adc
retf
es
(bad)
retf
stos
xchg
xchg
test
leave
iret
fld
lahf
das
daa
mov
xor
mov
call
push
xor
push
pop
imul
pop
and
fsubr
jmp
jecxz
call
jne
pushf
movs
mul
jno
rol
mov
push
enter
jmp
popf
in
mov
push
mov
daa
push
inc
retf
or
sahf
xchg
push
cmp
adc
mov
outs
xchg
bound
js
sar
dec
jno
mov
arpl
retf
int3
sub
dec
icebp
or
imul
stos
les
add
sbb
or
push
dec
mov
add
cwde
sbb
mov
sbb
pop
pop
sbb
push
leave
cmps
mov
out
sbb
push
xchg
fstp
out
jbe
xor
ret
xor
je
pop
in
mov
xor
jge
cwde
repnz
sbb
push
aad
into
or
call
daa
mov
sar
(bad)
jl
outs
js
cmc
les
cmc
mov
add
inc
push
mov
cs
lods
mov
jno
add
xchg
jle
jbe
adc
addr16
dec
pop
mov
stos
loopne
jne
inc
movs
jmp
sbb
ins
inc
adc
cdq
push
or
(bad)
pop
(bad)
jmp
leave
setb
pop
stc
fidiv
adc
inc
loopne
fsubr
in
mov
inc
clc
ins
into
lahf
mov
jge
frstpm(287
addr16
mov
add
es
rcr
stos
add
sbb
movs
cmp
pop
retf
fld
lods
xor
fwait
cld
or
or
pusha
lea
fisubr
pop
xchg
push
and
(bad)
xchg
mov
lods
push
xchg
and
imul
jno
pop
xchg
pusha
addr16
int3
sbb
mov
cs
movs
jp
xchg
pop
mov
push
sbb
rol
jae
jne
push
pop
mov
jns
jae
leave
dec
shr
pop
repz
mov
xor
sub
(bad)
mov
sub
ror
and
mov
jmp
sub
sti
iret
mov
repz
pop
xchg
and
push
scas
setbe
clc
xlat
and
test
je
aas
and
ret
dec
lods
push
sti
scas
push
jg
mov
inc
xchg
cs
mov
pop
dec
sbb
or
test
mov
gs
out
pop
rcl
lock
bts
loop
dec
nop
stc
and
jb
loop
jno
add
cmp
sub
out
icebp
gs
adc
jb
lea
lods
retf
ins
xor
lea
adc
fwait
(bad)
les
jne
mov
loope
mov
ins
ins
sbb
dec
movs
test
int
jno
xor
pop
cwde
cmp
push
pushf
sub
and
das
outs
(bad)
xor
iret
fcomp
fiadd
adc
fwait
mov
scas
mov
nop
(bad)
aad
ja
(bad)
jp
es
fwait
add
aaa
or
ins
jns
mov
mov
and
or
fcmovnbe
mov
icebp
xchg
sub
das
push
add
test
enter
sub
call
mov
(bad)
sub
dec
jecxz
fcom
mov
mov
jae
into
and
int
add
js
cwde
push
call
ins
jmp
pop
push
pop
mov
(bad)
repz
jge
adc
or
xor
mov
add
and
ret
icebp
xlat
icebp
jnp
and
xor
(bad)
cmc
fidivr
imul
xor
mov
jp
(bad)
sub
pop
fs
adc
stc
pop
inc
pop
jb
mov
data16
(bad)
cmp
and
cmp
ja
push
fiadd
stos
ja
fcomp
pop
sub
into
je
jl
test
mov
fld
xlat
inc
pop
mov
les
rcr
xor
cdq
mov
cmp
ds
adc
movs
mov
call
ss
fstp
xchg
ja
jbe
xor
push
(bad)
sar
dec
mov
(bad)
cmc
fst
cld
test
sbb
retf
push
sub
cwde
stos
jge
jmp
mov
xchg
xchg
(bad)
cld
inc
mov
xor
adc
jge
inc
call
adc
push
mov
(bad)
cdq
rcr
adc
in
retf
sbb
pop
adc
lea
jo
jl
or
jns
add
adc
fwait
shl
cmp
fadd
dec
lahf
xchg
mov
jnp
fstp
mov
in
stos
mov
sub
dec
fist
mov
fsub
cmp
mov
push
outs
mov
sub
mov
adc
push
ja
mul
inc
xchg
aam
cmp
and
das
push
repnz
sbb
gs
inc
out
inc
fild
and
aaa
rcr
cmp
pop
in
jle
push
xor
and
jle
inc
mov
call
pop
push
and
popf
cmp
cs
sti
push
mov
mov
adc
popf
cmp
jecxz
fimul
outs
push
pusha
xchg
adc
or
jp
mov
xchg
js
add
repnz
test
pop
sub
not
iret
int
stos
(bad)
loopne
jecxz
sbb
push
pop
jns
ds
cmps
imul
cdq
dec
and
mov
test
mov
mov
fcom
mov
mov
and
mov
jo
xchg
outs
stos
pop
jmp
push
js
mov
daa
sbb
ds
mov
push
out
(bad)
mov
pop
cli
pop
cmp
and
cmps
les
adc
sahf
sub
movs
(bad)
das
pop
int
loopne
pusha
mov
jbe
fidiv
int3
xchg
hlt
fild
fcmovu
push
sar
stos
or
xor
xor
ds
mov
mov
jecxz
stos
jo
icebp
ret
mov
test
lds
shr
push
pop
xchg
pop
repnz
dec
cmp
and
jno
mov
rcl
adc
mov
sub
or
hlt
mov
cmp
cld
mov
std
adc
cld
outs
stos
adc
xlat
mov
adc
icebp
push
out
data16
dec
les
sbb
sub
shr
in
xor
aaa
sub
xchg
mov
or
(bad)
lock
dec
pop
ret
or
popa
sbb
dec
lds
pop
xchg
xchg
inc
fnstcw
rcl
shr
rcl
xor
enter
xor
jg
scas
jns
fs
in
inc
sub
sbb
repz
pop
mov
fcomp
fistp
std
aad
inc
daa
(bad)
jle
xchg
mov
mov
and
xchg
std
fwait
push
and
xchg
cdq
movs
jle
mov
xchg
sbb
sahf
cmp
les
add
sub
cmp
mov
mov
data16
lock
add
and
mov
shr
into
aaa
(bad)
mov
mov
ss
lods
(bad)
or
jp
mov
cmps
mov
adc
jle
jl
xor
scas
mov
push
lods
rcr
(bad)
dec
pop
aaa
or
shl
gs
pop
(bad)
add
pop
adc
mov
xor
(bad)
mul
add
inc
out
(bad)
pop
shl
add
xor
dec
nop
aad
adc
loop
scas
js
daa
xlat
call
(bad)
jb
xchg
cs
(bad)
pop
push
xchg
sbb
aad
xchg
adc
push
in
add
jb
and
clc
outs
sub
jno
aas
inc
mov
out
or
sub
(bad)
ins
pop
pop
mov
arpl
inc
add
scas
mov
dec
test
dec
jl
dec
sub
xor
inc
sti
cmc
dec
mov
iret
sub
or
aaa
pop
pop
push
mov
xchg
iret
cwde
in
ror
into
repnz
jbe
mov
mov
mov
in
adc
div
mov
sbb
mov
or
(bad)
mov
inc
ds
and
leave
xor
xchg
and
or
xchg
push
dec
cmp
fwait
loop
fcom
jns
test
mov
inc
shr
cmp
xor
mov
push
outs
in
cmp
cmps
push
sub
jmp
jo
add
or
popa
sub
out
in
inc
lahf
xchg
xor
imul
sahf
add
dec
out
sar
sub
ja
push
mov
iret
push
addr16
mov
(bad)
mov
(bad)
fist
xchg
lds
jmp
nop
ficomp
lahf
inc
test
push
repz
dec
test
jbe
mov
in
dec
jmp
je
loope
js
add
shr
dec
pop
jns
cmp
push
push
(bad)
push
xor
mov
inc
repnz
jne
inc
aam
scas
xchg
inc
call
call
dec
add
jbe
repnz
cmp
ins
(bad)
xchg
push
mov
inc
dec
cmp
in
sub
call
pmaxub
inc
push
push
push
sub
xchg
sub
jae
fld
loope
pushf
loopne
lods
jb
or
(bad)
stos
jge
add
push
jmp
or
sbb
dec
inc
outs
dec
les
add
and
mov
dec
push
fisub
(bad)
jno
push
inc
pushf
push
outs
mov
inc
mov
not
sub
es
sub
das
mov
cmp
dec
push
pop
xor
mov
add
xor
add
cld
rcr
inc
inc
sbb
in
xchg
daa
cmps
je
mov
and
jnp
enter
push
cli
jo
scas
movs
pop
stc
push
sbb
xchg
push
popa
xor
gs
jnp
mov
add
lea
xor
jp
jo
mov
sbb
jg
fst
xor
ins
dec
inc
inc
sub
(bad)
rol
int
shl
inc
aad
jecxz
mov
je
leave
(bad)
mov
sar
add
jle
mov
or
mov
mov
imul
adc
mov
aaa
jmp
icebp
sub
ja
xor
sbb
ja
xchg
cdq
into
nop
sub
push
jae
pop
dec
jmp
rcl
push
fnsave
int3
aam
int
ins
ins
sahf
stc
stos
repnz
ret
mov
pop
js
aad
pushw
mov
int3
call
in
fst
inc
cmps
rcl
mov
inc
rcl
les
jb
or
cmp
adc
repnz
adc
and
xor
cwde
dec
addr16
ss
hlt
sub
or
aam
push
mov
mov
cs
and
lahf
(bad)
stc
xor
movs
shl
inc
enter
outs
mov
lods
jno
in
fidivr
mov
popa
and
cs
in
loope
daa
cmp
push
sub
in
gs
push
xchg
stos
out
enter
mov
xor
ss
out
es
adc
xchg
lds
in
(bad)
les
ss
or
mov
xchg
adc
xchg
pusha
jbe
neg
xor
cmp
imul
ins
xchg
jle
popf
mov
nop
add
(bad)
ins
test
or
mov
ret
ret
xor
mov
sbb
or
lea
sbb
test
adc
clc
mov
jbe
icebp
out
jge
call
ret
mov
cmpxchg8b
repnz
lods
and
and
pop
adc
xor
aaa
push
(bad)
jg
and
add
arpl
mov
cld
sahf
mov
mov
ss
add
enter
pop
mov
test
bound
xlat
mov
sbb
enter
pop
dec
sub
scas
or
fidivr
mov
jb
sbb
xor
popa
adc
cmp
je
nop
shr
jbe
mov
ret
and
jno
push
xchg
outs
cs
sub
push
sub
sti
mov
cmps
neg
pop
cmps
cmps
add
or
xor
xchg
adc
or
push
out
aas
pushf
pop
ds
cmps
jno
lods
sar
sbb
or
sub
(bad)
sbb
cli
push
xor
inc
jp
pop
out
in
stos
sti
push
aas
adc
clc
push
xor
popf
xchg
cs
gs
in
or
shr
add
xor
(bad)
sbb
fiadd
int
out
jbe
pop
push
sbb
cmc
push
gs
retf
movs
and
test
mov
jb
xchg
xchg
inc
sub
(bad)
mov
mov
ret
xlat
movs
xlat
push
push
push
pop
sub
sti
pop
mov
ret
xchg
jbe
inc
mov
rol
call
popa
iret
and
inc
test
jecxz
enter
in
cwde
or
or
popf
sbb
push
or
jl
repnz
sbb
inc
call
out
push
movs
xchg
pop
and
xchg
xor
dec
retf
popa
rol
mov
movs
or
and
aam
fwait
push
movs
inc
xchg
(bad)
mov
test
jb
std
jg
jge
xchg
adc
push
data16
gs
fist
mov
cmps
into
fnsave
xor
retf
mov
rcr
jns
adc
imul
imul
mov
add
sahf
dec
pushf
adc
and
aam
cdq
mov
stos
ja
pop
sbb
adc
inc
sub
enter
cmps
inc
(bad)
out
mov
dec
mov
push
mov
(bad)
aas
cwde
push
movs
push
adc
mov
xor
mov
hlt
sbb
push
dec
loope
cwde
pusha
clc
mov
push
sbb
pop
lds
sbb
popf
jns
sbb
aaa
mov
inc
jge
inc
mov
es
sar
call
inc
test
adc
(bad)
sub
and
mov
pusha
mov
dec
lea
adc
mov
ret
xchg
adc
pop
push
mov
dec
xchg
push
cdq
das
sbb
or
gs
add
rcr
push
cmp
pop
mov
push
jl
cmp
push
mov
je
iret
or
mov
push
xchg
dec
aaa
sbb
das
mov
je
in
ins
mov
inc
xchg
sti
sahf
push
nop
out
into
xchg
xchg
(bad)
mov
add
popf
js
adc
jne
mov
sar
pop
mov
popa
movs
jp
jmp
stos
cwde
mov
daa
jmp
fs
xchg
(bad)
push
jo
ins
sbb
add
inc
fxch
and
or
ror
sub
cmp
dec
jle
sbb
sbb
sbb
stc
bound
data16
adc
mov
adc
sbb
xor
ds
aad
xchg
jnp
inc
fist
dec
mov
jmp
in
adc
pushf
stos
cs
and
pop
or
and
mov
aam
mov
sbb
sbb
xchg
loopne
sub
fs
outs
fwait
push
outs
push
mov
scas
shl
cmp
inc
aas
xlat
call
and
sbb
jbe
add
fild
jmp
lds
jbe
sub
xor
xor
leave
or
out
ja
ins
xor
ins
adc
arpl
scas
cmp
xor
(bad)
repnz
push
bound
leave
fisttp
cmp
cmp
jp
nop
imul
xchg
and
add
in
hlt
push
inc
dec
daa
jnp
and
cmps
jecxz
out
or
jle
dec
pop
mov
lock
imul
repz
aaa
mov
int3
stc
popf
or
xor
je
fs
loop
xor
and
fwait
inc
bound
inc
adc
(bad)
in
mov
jmp
add
cld
push
test
jb
das
(bad)
fidiv
pop
inc
imul
fnstcw
popf
call
and
sub
xchg
dec
test
cmps
inc
or
add
or
lds
jmp
pop
push
mov
sbb
aam
loope
loopne
jmp
mov
xchg
ins
mov
mov
lds
push
cli
stos
push
sbb
data16
sbb
gs
div
rcr
sub
retf
(bad)
fwait
jg
xchg
out
pop
xchg
lock
cmp
(bad)
in
xlat
arpl
dec
arpl
jmp
aad
jmp
xlat
test
mov
out
push
push
sbb
(bad)
shl
sti
out
dec
add
jle
rcr
xor
adc
shl
stos
xor
mov
and
pop
arpl
mov
mov
dec
rcpps
call
cmps
mov
add
rcl
aas
pop
ss
cmp
mov
imul
ror
into
hlt
(bad)
hlt
loopne
imul
push
and
fcomp
ret
push
pop
push
sahf
scas
mov
retf
and
and
ins
push
imul
mov
mov
xor
push
ss
cmp
aaa
out
gs
adc
out
cli
sbb
or
in
into
retf
(bad)
in
(bad)
pop
retf
popf
scas
cwde
scas
jnp
in
movs
xchg
cmps
mov
lds
loop
jmp
xchg
add
repnz
xor
out
fwait
rep
push
mov
jmp
ins
push
jg
dec
cmps
pop
(bad)
fmul
sbb
enter
push
sub
inc
aaa
cmp
rcr
jo
xor
xchg
cmp
sub
inc
aaa
ins
sub
xchg
cmp
sub
add
aaa
jo
rcr
jg
imul
add
aaa
fs
sbb
addr16
cmp
sub
sub
sbb
and
cmp
sub
add
sbb
mov
aaa
xor
in
sbb
les
push
sub
sbb
sbb
shr
inc
add
aaa
sbb
fcomp
and
cmp
sub
add
sbb
fld
ins
add
aaa
or
xchg
pop
sbb
shr
push
add
aaa
fs
sbb
sbb
retf
sub
mov
adc
aaa
jle
xchg
add
ss
mov
shl
(bad)
retf
fiadd
lock
fmul
ror
sub
(bad)
fldenv
cld
ror
dec
sub
inc
sub
adc
xchg
mov
and
push
cmp
sbb
or
xor
xor
xor
adc
push
stc
mov
mov
mov
cwde
fsubr
sub
ss
xor
or
in
push
fcom
jmp
lds
neg
jecxz
pop
fcom
in
in
shr
lds
jmp
sar
cmp
data16
ins
xor
inc
icebp
jae
jne
inc
movs
push
fadd
ins
cmp
inc
sti
jae
jne
inc
push
cli
pop
cli
pop
cli
jge
nop
into
mov
ret
(bad)
(bad)
out
jns
ret
xlat
int
jmp
repz
fstp
out
div
ss
jmp
repz
(bad)
out
xchg
and
sub
imul
sbb
cmp
or
out
xchg
push
ror
dec
scas
int3
inc
lods
push
fcom
add
sahf
mov
ins
pop
aad
(bad)
mov
jbe
pop
cmp
mov
mov
popf
mov
js
push
in
xor
outs
stc
adc
pop
stc
pop
adc
out
in
and
cmp
adc
push
pop
rcl
hlt
sub
ret
add
loope
mov
lods
iret
dec
push
inc
sbb
xlat
mov
add
ret
dec
ror
xchg
imul
mov
cmp
sbb
push
cmp
aad
pop
lock
fcmovb
mov
fst
outs
in
jp
jnp
jns
push
pop
test
(bad)
mov
mov
cmp
mov
pop
loop
(bad)
and
retf
dec
leave
adc
pop
popa
test
fninit
ss
movs
in
bound
mov
rcr
mov
leave
out
pusha
scas
cld
and
jns
push
sti
adc
xor
pop
push
mov
ds
cmp
dec
(bad)
in
add
dec
dec
shr
lea
data16
pmuludq
sub
xor
sub
setno
add
add
cmc
addr16
mov
mov
pop
je
xchg
mov
push
cmps
les
jo
pop
mov
les
ret
mov
xchg
pop
movs
add
xor
mov
sbb
inc
mov
stos
mov
ja
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jae
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
or
add
push
push
add
add
cmovb
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
push
add
and
add
add
clc
xchg
add
push
je
imul
add
add
adc
add
and
dec
inc
add
add
add
cld
or
ins
outs
bound
add
add
add
push
xchg
mov
add
cli
add
add
add
add
add
push
add
add
add
add
add
adc
add
add
add
jge
add
xor
add
or
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
push
add
add
push
add
add
push
add
add
add
add
add
add
add
add
push
add
add
push
add
add
add
add
add
push
add
add
push
add
dec
add
add
in
add
add
push
inc
push
push
add
push
dec
add
add
push
clts
add
add
add
test
push
add
add
adc
push
push
add
add
dec
add
add
js
push
add
add
add
add
dec
daa
add
add
dec
cmp
or
pop
dec
daa
add
add
dec
dec
add
add
dec
dec
add
add
add
add
jne
adc
test
adc
add
push
adc
add
add
add
pop
push
adc
jne
scas
adc
add
cmp
or
out
push
daa
add
add
add
push
dec
add
add
push
dec
add
add
push
dec
add
add
push
adc
add
daa
pop
dec
add
add
add
pop
adc
add
pop
pop
pusha
push
add
pusha
dec
add
add
popa
dec
add
add
popa
dec
add
add
add
fs
dec
push
add
fs
pusha
push
add
fs
push
push
add
gs
push
push
add
xor
adc
add
dec
add
add
adc
add
adc
add
adc
add
add
add
add
dec
add
add
inc
push
push
add
add
add
dec
add
add
dec
add
add
jno
push
sbb
push
ja
add
add
inc
push
push
add
add
ja
push
push
add
jns
add
add
jns
add
add
jnp
add
add
jnp
add
add
jnp
add
add
add
test
push
add
xchg
add
add
add
add
add
add
adc
add
add
aaa
add
push
add
push
add
cmp
add
sbb
add
add
add
add
push
add
sbb
or
dec
add
sub
add
add
add
add
xor
add
add
add
or
aaa
add
push
add
add
add
cmp
add
add
add
add
inc
add
push
add
add
add
inc
add
push
add
xchg
add
add
add
push
inc
sbb
sub
xchg
add
add
add
add
mov
add
dec
push
inc
sbb
sub
mov
add
adc
jg
push
inc
sbb
sub
mov
add
push
inc
sbb
sub
leave
add
add
add
push
push
inc
sbb
sub
fadd
add
adc
dec
push
push
inc
sbb
cs
add
add
add
push
push
inc
sbb
cs
add
add
add
add
add
add
inc
add
sbb
xor
or
add
add
add
add
add
add
add
pop
push
inc
sbb
xor
adc
adc
add
dec
inc
add
push
add
add
add
add
add
add
push
inc
sbb
xor
add
add
pop
push
inc
sbb
xor
add
add
dec
add
push
add
add
add
add
add
cmp
inc
add
add
add
jns
add
add
add
jns
inc
inc
add
add
add
jnp
inc
sbb
ds
add
jge
add
add
add
add
jnp
add
add
aad
add
jns
add
add
fiadd
add
jg
add
add
loop
add
add
sbb
pop
add
add
add
sbb
push
add
add
add
repz
add
add
jg
inc
sbb
outs
add
add
xchg
add
jnp
adc
adc
add
rol
jnp
adc
adc
add
fadd
jnp
adc
adc
add
mov
add
adc
adc
add
xor
add
jnp
adc
adc
add
stos
adc
adc
adc
add
bound
inc
push
add
adc
adc
fld
adc
adc
push
add
add
add
adc
pusha
pop
rol
add
pop
lds
add
out
lods
add
add
lods
add
add
sbb
add
add
pop
rol
add
add
and
add
add
add
and
add
add
rol
add
and
add
add
or
and
repz
add
add
rol
add
and
add
add
sbb
and
jecxz
pop
add
add
sbb
add
(bad)
push
lods
add
add
es
add
add
add
add
adc
and
loop
adc
add
pop
rol
add
rol
add
pop
add
add
das
lods
add
add
add
add
xor
add
add
add
add
xor
aaa
rol
add
add
cmp
cmp
add
add
cmp
add
add
add
lods
add
add
add
dec
add
dec
add
dec
add
dec
add
dec
add
arpl
xor
mov
addr16
xor
push
inc
push
adc
push
inc
add
push
add
dec
pop
push
add
dec
pop
push
add
inc
dec
pop
push
add
add
add
add
add
add
add
dec
add
dec
add
dec
add
lds
add
cdq
inc
lds
add
mov
add
add
inc
lds
add
xchg
inc
lds
add
xchg
inc
sbb
add
cdq
inc
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
lds
add
cdq
inc
lds
add
xchg
inc
lods
add
add
add
add
inc
lds
add
mov
add
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
lds
add
dec
inc
lds
add
mov
add
add
add
lds
add
rol
add
mov
add
add
add
add
add
add
dec
add
dec
add
dec
add
addr16
adc
push
inc
addr16
adc
push
inc
push
inc
push
inc
ins
or
ins
or
jb
adc
xchg
inc
jb
adc
mov
or
ja
adc
xchg
inc
jl
adc
push
inc
jl
adc
mov
and
add
add
sbb
add
add
add
xchg
add
and
add
aam
add
or
xchg
add
add
add
dec
add
or
adc
dec
add
add
fs
or
adc
fld
push
add
add
add
add
add
push
add
add
adc
icebp
add
add
add
add
add
jb
add
enter
or
adc
jmp
add
add
or
adc
ja
xchg
add
cld
add
or
adc
repz
mov
add
adc
add
or
adc
outs
pop
xchg
add
add
add
or
adc
jmp
sahf
add
add
add
add
add
movs
add
add
add
add
add
or
daa
add
or
adc
pop
or
daa
add
or
adc
fisttp
lods
add
add
adc
push
or
daa
add
or
adc
ror
mov
add
aam
add
or
adc
dec
or
daa
add
or
adc
retf
or
sub
add
add
add
mov
add
sbb
add
or
adc
ret
or
add
add
add
or
adc
aas
or
dec
sub
add
add
add
add
add
add
add
add
add
or
xchg
add
push
and
add
sub
add
or
xchg
add
add
add
add
add
xchg
add
add
xchg
add
adc
add
add
add
add
add
inc
add
or
xchg
add
adc
add
add
inc
add
or
xchg
add
and
add
in
add
or
xchg
add
mov
add
clc
inc
add
or
xchg
add
mov
add
or
add
or
xchg
add
sub
add
or
xchg
add
adc
add
dec
inc
add
or
xchg
add
adc
add
push
add
add
add
xchg
add
adc
add
test
add
or
xchg
add
adc
add
enter
or
xchg
add
add
add
inc
add
or
xchg
add
jo
add
add
add
add
add
add
add
or
xchg
add
adc
inc
add
or
xchg
add
adc
inc
add
or
xchg
add
js
add
push
add
add
add
xchg
add
mov
add
mov
add
add
add
inc
add
or
xchg
add
push
add
call
add
add
add
add
or
xchg
add
add
inc
add
or
add
adc
dec
inc
add
or
add
push
mov
inc
add
or
xchg
add
add
add
add
add
inc
add
or
xchg
add
push
mov
add
loopne
add
or
sbb
add
add
add
dec
add
or
add
sbb
dec
add
or
add
sbb
dec
add
or
add
sbb
dec
add
or
xchg
add
sbb
add
add
add
add
add
add
add
or
xchg
add
mov
add
jl
add
or
add
sbb
add
add
push
add
or
add
sbb
add
add
add
or
add
sbb
jo
add
or
add
sbb
sbb
or
sbb
add
push
add
or
xchg
add
mov
add
push
push
add
or
xchg
add
mov
add
fs
add
or
xchg
add
mov
add
js
add
or
xchg
add
xchg
push
add
or
sbb
add
push
add
or
add
daa
and
add
or
add
add
add
add
pop
add
or
add
sub
add
add
add
or
add
sub
add
add
add
add
add
add
add
or
add
sub
add
add
add
or
xchg
add
add
outs
add
or
xchg
add
inc
add
add
add
or
xchg
add
sub
outs
add
or
xchg
add
mov
add
inc
outs
add
or
xchg
add
ins
add
add
add
add
add
add
xchg
add
test
add
or
xchg
add
add
outs
add
or
xchg
add
add
outs
add
or
xchg
add
sub
add
add
add
or
xchg
add
sub
jo
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
xchg
add
add
xchg
add
sub
add
add
jo
add
add
add
add
jo
add
add
add
add
add
or
xchg
add
mov
add
inc
jno
add
add
add
add
add
or
xchg
add
add
xchg
add
add
add
add
add
xchg
add
sub
add
add
jno
add
add
add
add
add
or
add
xor
jne
add
add
add
add
jbe
add
add
add
add
ja
add
add
add
add
ja
add
add
add
add
js
add
add
add
add
add
or
add
xor
add
add
jp
add
add
add
add
add
or
add
xor
push
add
add
add
add
ss
add
les
or
sbb
add
jl
add
add
add
add
jl
add
add
add
add
jge
add
add
add
add
add
aaa
mov
add
dec
jge
add
add
add
add
add
or
add
cmp
add
add
add
add
add
add
add
add
xchg
add
cmp
add
add
cmp
add
add
add
or
add
cmp
dec
test
add
add
add
add
test
add
add
add
add
add
add
add
add
add
or
add
aas
or
add
sub
add
aas
or
mov
add
add
add
add
add
or
xchg
add
mov
add
push
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
add
or
add
inc
mov
add
mov
add
inc
mov
add
mov
add
add
add
lea
add
add
add
add
mov
add
add
add
add
add
or
xchg
add
add
mov
add
add
add
add
add
add
add
aaa
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
jg
add
xchg
xchg
add
or
adc
sahf
inc
xchg
add
lods
xchg
add
or
xchg
add
inc
inc
add
add
xchg
add
or
xchg
add
inc
xchg
add
add
xchg
add
or
xchg
add
mov
add
cld
xchg
add
or
xchg
add
mov
add
adc
add
test
add
sub
add
or
xchg
add
add
add
or
xchg
add
xchg
add
or
adc
mov
add
xchg
add
or
adc
push
inc
mov
add
int3
xchg
add
or
adc
rol
add
xchg
cdq
add
or
adc
lds
add
add
adc
inc
dec
fiadd
add
les
adc
mov
add
cdq
add
or
xchg
add
inc
add
add
cdq
add
or
xchg
add
add
add
call
jo
mov
add
sub
add
or
xchg
add
inc
call
sahf
dec
inc
add
add
add
or
xchg
add
dec
inc
add
add
add
add
add
add
add
add
add
adc
push
inc
adc
add
add
or
adc
fisttp
add
add
add
or
adc
pop
dec
es
add
add
or
xchg
add
dec
inc
add
add
add
or
xchg
add
dec
xor
add
jo
add
or
xchg
add
dec
mov
add
test
xchg
add
mov
add
cwde
sahf
add
or
xchg
add
push
add
mov
add
add
add
sahf
add
or
adc
mov
push
add
add
adc
xchg
inc
ins
add
add
mov
adc
mov
add
mov
adc
ret
dec
mov
add
movs
add
or
adc
aas
dec
xchg
add
add
add
or
adc
mov
add
add
add
add
dec
call
add
add
add
add
add
or
xchg
add
dec
test
add
xchg
movs
add
or
xchg
add
dec
stos
add
add
add
add
add
movs
add
or
xchg
add
dec
mov
add
loopne
add
or
xchg
add
add
movs
add
or
xchg
add
add
add
or
xchg
add
movs
add
or
adc
mov
ret
add
test
add
add
add
fld
add
stos
add
or
adc
xchg
inc
icebp
add
add
add
or
adc
rol
add
mov
add
add
add
mov
add
add
add
inc
mov
add
add
add
dec
pop
add
add
or
adc
xchg
dec
es
add
or
adc
push
push
sub
add
or
adc
test
add
add
or
xchg
add
push
inc
add
add
xchg
add
add
add
mov
add
add
add
add
mov
add
add
add
add
or
xchg
add
add
add
or
xchg
add
push
jo
add
xor
add
or
xchg
add
push
push
add
push
mov
add
add
add
add
add
add
add
add
add
add
add
xchg
add
mov
add
add
add
add
adc
push
inc
je
add
fdiv
adc
cdq
inc
mov
add
or
adc
dec
inc
xchg
add
add
or
adc
rol
add
aam
add
or
adc
adc
add
in
mov
adc
call
add
add
or
adc
jnp
mov
add
sbb
add
or
adc
not
add
add
add
or
adc
jae
mov
mov
xchg
add
push
inc
add
add
add
or
xchg
add
jl
add
or
xchg
add
push
mov
add
nop
mov
xchg
add
lods
mov
xchg
add
jo
add
les
add
add
mov
xchg
add
add
mov
xchg
add
push
aad
add
sbb
add
or
xchg
add
mov
xchg
sbb
add
add
add
add
add
add
push
dec
add
add
xchg
add
inc
add
add
add
add
add
mov
xchg
add
add
mov
xchg
add
add
mov
xchg
add
mov
add
dec
loop
add
int3
mov
les
rol
add
test
add
or
adc
mov
push
add
je
add
or
adc
push
inc
sbb
les
add
add
add
push
mov
add
les
add
add
add
sub
add
jl
add
or
adc
hlt
push
das
push
add
xchg
les
add
add
add
xor
les
add
add
add
add
les
add
add
add
add
les
add
add
add
add
les
add
add
add
add
lds
add
add
add
add
xchg
add
inc
add
add
add
or
xchg
add
inc
push
add
push
add
add
add
sbb
add
lds
add
add
add
add
xchg
add
add
add
or
adc
mov
add
enter
add
add
pop
pop
push
add
cmp
add
or
adc
dec
pop
and
add
push
enter
add
add
add
add
or
xchg
add
pop
mov
add
jl
add
or
xchg
add
pop
inc
add
add
add
add
add
enter
add
add
add
add
add
inc
xchg
push
add
movs
int3
add
or
adc
push
inc
stos
push
add
nop
into
add
or
adc
xor
mov
add
test
add
or
adc
rcr
add
ror
add
add
add
add
into
add
or
adc
mov
add
into
add
or
adc
xor
add
iret
add
or
xchg
add
add
add
or
xchg
add
pop
xchg
add
inc
iret
add
or
xchg
add
pop
mov
add
pop
iret
add
or
xchg
add
pop
mov
add
ins
iret
add
or
xchg
add
pop
xchg
add
mov
add
or
xchg
add
mov
add
test
add
or
xchg
add
mov
add
(bad)
iret
add
or
xchg
add
iret
add
or
adc
mov
push
add
mov
add
add
add
aam
add
add
add
out
push
add
call
add
add
pop
clc
push
add
add
add
or
xchg
add
add
xchg
add
add
aad
add
add
add
add
add
add
push
add
fs
add
add
push
add
test
add
or
xchg
or
add
fadd
add
add
add
add
fadd
add
add
add
add
add
or
adc
das
pusha
mov
fld
add
add
pop
add
pop
fld
add
add
pop
add
js
add
or
xchg
add
pusha
mov
add
mov
add
or
xchg
add
pusha
mov
add
mov
add
add
add
xchg
add
popa
xchg
add
(bad)
add
or
xchg
xchg
inc
jne
add
(bad)
fld
add
add
add
add
or
adc
ss
mov
add
push
loope
add
add
add
add
add
or
adc
bound
loope
add
add
add
add
add
add
xchg
pop
add
mov
add
or
adc
test
mov
loope
add
add
pop
add
in
loope
add
add
add
add
loop
add
add
add
add
add
or
xchg
add
inc
add
add
add
or
xchg
add
add
add
add
or
xchg
add
add
add
or
nop
add
add
nop
add
and
add
loopne
add
or
nop
add
add
out
add
add
add
add
or
nop
add
add
nop
add
add
add
or
nop
add
add
add
or
nop
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
or
add
add
add
add
or
add
pop
add
or
nop
add
add
nop
add
add
push
add
or
nop
add
add
add
or
nop
add
inc
adc
add
hlt
adc
add
add
or
add
add
or
nop
add
add
pop
add
or
nop
add
dec
or
add
add
add
or
add
nop
add
loopne
add
aam
add
or
nop
add
inc
jne
add
xchg
sbb
add
add
add
add
sbb
add
add
or
add
sbb
nop
add
add
push
add
or
nop
add
loopne
add
test
add
or
nop
add
fmul
add
cmp
add
or
nop
add
test
add
xor
nop
add
add
cmp
add
add
or
add
add
or
nop
add
inc
sub
add
add
add
add
and
xor
add
mov
add
add
or
add
add
add
or
add
dec
add
or
nop
add
add
dec
add
or
nop
add
inc
pop
or
add
add
or
add
pop
add
or
nop
add
add
nop
add
add
add
or
nop
add
test
add
or
nop
add
add
add
add
dec
leave
or
add
imul
or
adc
mov
add
outs
add
or
adc
cmps
gs
jb
add
add
add
add
add
or
adc
mov
or
add
in
jne
add
add
add
xor
or
adc
ret
gs
or
add
jns
add
add
add
add
jl
add
add
add
gs
jl
add
add
add
cmp
add
add
add
or
adc
fsub
or
add
adc
pop
addr16
or
add
jge
add
add
add
addr16
or
add
add
or
adc
pop
push
ins
jge
add
add
add
push
test
add
add
add
pusha
or
add
adc
shr
or
add
add
add
jno
add
sar
add
add
add
push
or
add
jge
add
add
add
inc
add
add
jle
add
add
add
imul
add
jle
add
add
add
ins
sub
add
xor
add
add
add
ins
or
add
add
or
adc
inc
ins
xor
add
or
adc
into
ins
xchg
or
add
add
add
add
mov
jle
add
add
add
outs
mov
add
mov
add
or
adc
pop
outs
mov
jle
add
add
add
outs
es
add
or
adc
data16
or
add
jle
add
add
add
jo
add
add
jg
add
add
add
leave
or
add
add
or
adc
jmp
jg
add
add
add
mov
add
pop
jg
add
add
add
jb
or
add
add
add
add
mov
add
mov
add
add
add
jae
or
add
adc
push
je
or
add
adc
shl
add
fdivr
add
add
add
jmp
jg
add
add
add
jne
or
add
add
or
xchg
add
mov
add
sbb
add
or
xchg
add
mov
add
xor
xchg
add
clc
or
add
add
or
xchg
add
dec
add
je
add
or
xchg
add
add
add
pop
add
mov
add
add
add
add
or
xchg
add
jbe
add
add
add
or
xchg
add
jbe
add
add
add
or
xchg
add
ja
add
add
add
or
xchg
add
ja
or
add
add
add
push
add
test
xchg
add
test
add
mov
add
add
add
add
add
add
add
add
ja
add
add
add
add
ja
add
add
add
or
xchg
add
js
add
add
add
or
xchg
add
js
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
inc
add
add
add
or
xchg
add
add
add
or
xchg
add
or
add
or
xchg
add
js
add
add
add
or
xchg
add
js
add
add
add
add
or
add
add
add
or
add
xchg
add
test
add
test
add
or
xchg
add
test
add
les
xchg
add
push
add
add
add
or
xchg
add
add
test
add
add
add
add
add
or
xchg
add
test
add
add
add
add
test
add
add
add
add
add
or
adc
mov
add
mov
add
add
add
jns
or
add
mov
add
add
add
push
add
add
mov
add
add
add
jp
or
add
add
add
add
add
add
or
xchg
add
mov
add
jl
add
or
xchg
add
mov
add
nop
mov
add
add
add
add
xchg
add
add
mov
add
add
add
add
mov
add
add
add
jge
add
lea
add
add
add
add
mov
add
add
add
jl
or
add
add
or
adc
test
add
sbb
add
or
xchg
add
jge
or
add
add
or
xchg
add
jge
add
add
add
or
xchg
add
jge
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
adc
imul
xchg
add
or
xchg
add
jge
add
add
add
or
xchg
add
jge
add
add
add
add
add
add
add
or
xchg
add
jle
add
add
add
add
add
adc
rol
add
mov
add
add
add
adc
mov
mov
xchg
add
or
xchg
add
add
xchg
add
or
xchg
add
push
add
add
xchg
add
or
xchg
add
mov
add
sub
add
or
xchg
add
mov
add
inc
xchg
add
or
xchg
add
add
add
add
add
add
add
add
add
xchg
add
add
xchg
add
or
xchg
add
jg
add
add
xchg
add
or
xchg
sbb
add
add
add
call
ds
add
add
call
in
mov
add
or
add
or
xchg
add
jg
add
add
fwait
add
or
xchg
add
inc
add
add
add
or
xchg
add
fwait
add
or
xchg
sbb
add
add
add
pushf
add
or
adc
and
in
pushf
add
or
xchg
add
or
xchg
add
add
xchg
add
xor
add
or
xchg
add
cmp
add
push
popf
add
or
xchg
sbb
add
add
add
add
add
or
add
mov
xchg
add
mov
add
in
add
or
xchg
add
add
mov
xchg
add
add
movs
add
or
xchg
ds
add
add
movs
add
or
adc
dec
inc
cmc
or
add
movs
add
or
adc
xchg
inc
add
add
or
adc
mov
add
adc
push
inc
xor
add
or
adc
fld
mov
add
add
inc
or
add
or
adc
rol
shr
adc
dec
sbb
add
call
add
add
or
add
lods
add
or
xchg
add
add
add
add
or
xchg
add
mov
add
cmp
add
mov
add
dec
lods
add
or
xchg
add
add
add
add
add
add
xchg
add
add
add
add
add
lods
add
or
xchg
add
test
add
in
add
or
adc
cdq
inc
or
adc
dec
inc
xchg
add
or
adc
aam
xchg
or
add
or
adc
push
test
mov
add
add
add
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
add
or
xchg
add
xchg
mov
add
add
add
add
add
or
xchg
add
xchg
add
push
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
ds
add
ds
add
bound
push
add
imul
add
add
sbb
add
adc
lea
push
add
add
add
add
ficom
jb
popa
add
adc
add
adc
pop
add
add
add
add
lods
add
add
rcl
add
add
add
adc
add
add
add
add
add
add
sub
cdq
add
add
inc
lea
rol
inc
cwde
add
add
add
in
add
add
add
add
cs
add
cmp
add
dec
mov
dec
movs
add
add
jge
and
js
sbb
cmp
es
aas
add
fiadd
sub
es
add
add
scas
add
enter
mov
add
add
push
pop
add
add
add
pop
mov
popa
add
push
mov
sub
out
ds
sbb
jge
dec
push
jno
add
pop
pop
push
dec
add
pop
and
add
sub
into
pop
mov
pop
enter
xor
add
xchg
mov
mov
add
pop
clc
push
sub
add
popa
dec
pop
leave
add
add
bound
add
aas
add
cmp
sub
in
fs
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
rol
iret
jbe
add
add
ja
add
pop
ja
or
ja
inc
or
add
add
ficom
push
or
stc
ja
or
adc
pusha
or
add
add
ja
dec
add
inc
add
add
add
js
add
adc
add
and
add
jns
or
add
xor
jns
add
stos
jns
add
add
or
add
jge
or
add
lds
add
lds
add
push
or
push
or
cmp
cmp
pop
or
and
mov
or
int3
or
(bad)
or
aas
add
ror
je
loopne
sti
add
add
sti
add
and
sti
add
adc
inc
add
add
adc
add
and
sti
add
inc
push
sti
add
pusha
pop
sti
add
adc
add
mov
add
sti
add
pusha
sbb
add
sbb
add
mov
add
sbb
add
loopne
sti
add
add
add
and
add
inc
sbb
add
pusha
sbb
add
pusha
pop
sti
add
sbb
add
pusha
and
add
and
add
pusha
and
add
and
add
mov
add
sti
add
and
inc
add
sub
add
sti
add
and
sti
add
inc
cs
add
pusha
cs
add
sub
add
inc
aaa
sti
add
pusha
aaa
sti
add
xor
add
sar
add
loopne
sti
add
sar
add
cmp
add
mov
add
ds
add
loopne
sti
add
mov
add
inc
sti
add
loopne
sti
add
add
add
add
add
add
add
add
add
add
add
add
repnz
sbb
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
or
add
sub
add
dec
add
add
add
add
add
add
add
add
aas
add
rol
add
add
in
add
add
add
add
rol
sub
inc
add
mov
add
add
add
add
add
add
add
add
jmp
push
test
sahf
push
fadd
push
pop
push
pop
jp
sahf
pop
fadd
jmp
outs
or
clc
or
or
or
cmp
arpl
mov
scas
or
or
or
or
aam
in
or
or
add
rol
add
sub
add
adc
hlt
add
data16
add
add
pop
or
add
add
add
xor
add
add
add
add
add
add
add
pop
pop
add
mov
add
add
add
pop
pop
add
rcr
add
inc
pop
pop
add
mov
add
pusha
pop
add
test
pop
add
mov
pop
add
shl
js
or
pop
add
pop
popa
pop
add
add
add
str
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
mov
add
add
add
add
add
stos
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
push
add
add
add
add
add
add
and
and
add
add
add
add
add
add
add
add
add
add
sub
sub
add
add
add
xchg
add
add
add
xchg
add
add
add
add
add
xchg
add
add
fild
das
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
loope
add
add
dec
add
xchg
add
add
loope
add
add
dec
add
xchg
add
add
loope
add
add
gs
xchg
add
add
in
add
add
ja
loope
add
add
jns
loope
add
add
jnp
loope
add
add
xchg
add
xchg
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
loope
add
add
jecxz
loope
add
add
jecxz
in
add
add
in
loope
add
add
out
loope
add
add
jmp
add
add
loope
add
add
jns
loope
add
add
lea
loope
add
add
pop
loope
add
add
lods
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
add
add
add
add
xchg
add
add
add
xchg
add
add
xor
add
fld
ret
pop
xchg
add
in
add
add
pusha
pop
or
popw
call
add
add
pop
jmp
add
add
or
int3
pop
js
int3
pop
add
add
js
xor
or
add
or
add
or
mov
add
sub
jle
inc
add
or
jle
out
int3
pop
mov
int3
pop
clc
add
sbb
outs
or
or
add
add
add
or
pop
add
add
or
adc
add
imul
push
add
(bad)
jns
adc
popa
add
add
add
add
add
add
add
add
add
add
add
lea
sbb
add
add
add
add
add
add
xor
and
add
add
add
add
add
sub
mov
add
add
das
add
add
add
add
add
add
rol
xor
add
aaa
add
push
jbe
fs
gs
add
outs
jbe
fs
add
arpl
ins
imul
gs
cs
imul
inc
outs
jb
jae
push
jns
je
ins
cs
jb
ja
outs
add
jae
gs
add
jae
gs
cs
outs
jb
add
jae
outs
popa
add
jb
gs
xor
add
sub
sub
jne
arpl
add
xor
xor
sub
sub
sub
sub
gs
xor
cmp
jge
ss
cmp
arpl
sub
gs
jne
arpl
cs
jae
jne
arpl
add
gs
sub
mov
sub
mov
sub
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
(bad)
loop
mov
or
scas
loop
stos
loop
(bad)
loop
mov
or
stos
loop
mov
sub
(bad)
loop
scas
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
stos
loop
(bad)
loop
stos
loop
(bad)
loop
scas
add
sub
loop
lods
loop
(bad)
loop
scas
loop
stos
loop
lods
loop
lods
loop
mov
or
lods
loop
mov
or
loop
stos
loop
mov
sub
loop
mov
or
loop
mov
sub
loop
lods
loop
stos
loop
stos
loop
stos
loop
stos
loop
scas
loop
scas
loop
lods
loop
scas
add
je
add
arpl
outs
jb
push
jns
add
je
outs
fs
outs
outs
add
jae
gs
cs
gs
arpl
outs
add
gs
add
jae
gs
cs
push
imul
imul
arpl
popa
jb
ins
gs
jb
jp
fs
push
push
je
jb
add
arpl
add
jbe
jb
outs
ins
outs
je
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
scas
loop
(bad)
loop
mov
or
stos
loop
mov
or
loop
stos
loop
lods
loop
lods
loop
lods
loop
(bad)
loop
stos
loop
lods
loop
mov
sub
lods
loop
mov
sub
(bad)
loop
stos
loop
lods
loop
scas
loop
scas
loop
scas
loop
stos
loop
mov
sub
scas
add
sub
mov
sub
(bad)
loop
(bad)
loop
lods
loop
mov
or
stos
loop
stos
loop
lods
loop
scas
loop
(bad)
loop
lods
loop
lods
loop
scas
loop
lods
loop
scas
loop
lods
loop
scas
loop
stos
loop
scas
loop
scas
loop
mov
sub
stos
loop
(bad)
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
mov
sub
add
or
loop
lods
loop
mov
sub
loop
mov
or
lods
loop
stos
loop
(bad)
loop
lods
loop
mov
sub
mov
or
lods
loop
scas
loop
stos
loop
lods
loop
(bad)
loop
scas
loop
stos
loop
mov
sub
stos
loop
lods
loop
stos
loop
stos
loop
stos
loop
lods
loop
lods
loop
scas
add
jb
jns
push
jne
je
ins
gs
imul
fs
gs
sub
lods
loop
lods
loop
(bad)
loop
stos
loop
scas
loop
stos
loop
mov
sub
scas
loop
scas
loop
lods
loop
(bad)
loop
lods
loop
scas
loop
scas
loop
stos
loop
(bad)
loop
lods
loop
stos
loop
lods
loop
stos
loop
scas
loop
(bad)
loop
scas
loop
stos
loop
mov
sub
stos
loop
scas
loop
stos
loop
lods
loop
scas
loop
stos
loop
stos
loop
scas
add
outs
je
ins
gs
jns
gs
popa
outs
fs
gs
sub
loop
mov
sub
scas
loop
lods
loop
mov
sub
loop
(bad)
loop
lods
loop
mov
sub
stos
loop
stos
loop
stos
loop
scas
loop
mov
sub
loop
stos
loop
stos
loop
stos
loop
stos
loop
lods
loop
mov
or
lods
loop
lods
loop
lods
loop
lods
loop
mov
or
add
je
gs
outs
fs
or
lods
loop
mov
sub
lods
loop
lods
loop
stos
loop
stos
loop
stos
loop
stos
loop
stos
loop
lods
loop
lods
loop
stos
loop
scas
loop
lods
loop
mov
sub
mov
sub
(bad)
loop
mov
sub
stos
loop
(bad)
loop
lods
loop
scas
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
stos
loop
lods
loop
scas
add
sub
loop
(bad)
loop
lods
loop
mov
or
lods
loop
stos
loop
lods
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
lods
loop
mov
or
loop
scas
loop
stos
loop
stos
loop
stos
loop
scas
loop
stos
loop
scas
loop
scas
loop
stos
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
scas
loop
stos
loop
scas
add
sub
loop
lods
loop
mov
sub
scas
loop
mov
sub
lods
loop
stos
loop
lods
loop
scas
loop
(bad)
loop
(bad)
loop
scas
loop
mov
sub
scas
loop
scas
loop
(bad)
loop
mov
sub
(bad)
loop
stos
loop
stos
loop
mov
sub
loop
(bad)
loop
mov
sub
outs
fs
popa
jae
add
jne
ins
jae
loop
scas
loop
lods
loop
stos
loop
stos
loop
lods
loop
scas
loop
lods
loop
lods
loop
scas
loop
stos
loop
lods
loop
stos
loop
lods
loop
stos
loop
stos
loop
scas
loop
scas
loop
(bad)
loop
stos
loop
scas
loop
mov
sub
stos
loop
(bad)
loop
(bad)
loop
stos
loop
(bad)
loop
stos
loop
(bad)
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
mov
or
scas
add
sub
mov
or
lods
loop
lods
loop
scas
loop
scas
loop
(bad)
loop
mov
or
stos
loop
lods
loop
lods
loop
mov
sub
stos
loop
mov
or
lods
loop
lods
loop
lods
loop
mov
sub
loop
scas
loop
lods
loop
scas
loop
mov
or
loop
lods
loop
scas
loop
scas
add
sub
(bad)
loop
lods
loop
(bad)
loop
lods
loop
mov
or
lods
loop
stos
loop
stos
loop
lods
loop
scas
loop
stos
loop
stos
loop
mov
sub
mov
sub
loop
lods
loop
mov
sub
lods
loop
mov
sub
(bad)
loop
stos
loop
mov
or
stos
loop
lods
loop
scas
add
sub
stos
loop
lods
loop
(bad)
loop
(bad)
loop
scas
loop
(bad)
loop
scas
loop
mov
or
mov
sub
lods
loop
lods
loop
lods
loop
mov
sub
stos
loop
scas
loop
mov
sub
mov
sub
scas
loop
scas
loop
lods
loop
(bad)
loop
stos
loop
scas
loop
scas
loop
scas
add
sub
lods
loop
stos
loop
scas
loop
scas
loop
stos
loop
stos
loop
stos
loop
mov
sub
stos
loop
lods
loop
scas
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
scas
loop
lods
loop
scas
loop
lods
loop
stos
loop
stos
loop
lods
loop
mov
sub
(bad)
loop
(bad)
loop
scas
loop
(bad)
loop
stos
loop
mov
sub
stos
loop
scas
add
or
lods
loop
mov
or
stos
loop
(bad)
loop
mov
sub
(bad)
loop
stos
loop
(bad)
loop
mov
sub
loop
mov
sub
stos
loop
lods
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
mov
sub
loop
lods
loop
stos
loop
lods
loop
lods
loop
lods
loop
scas
loop
mov
sub
sub
mov
sub
(bad)
loop
lods
loop
lods
loop
stos
loop
scas
loop
lods
loop
lods
loop
scas
loop
stos
loop
scas
loop
scas
loop
mov
sub
loop
stos
loop
(bad)
loop
stos
loop
scas
loop
scas
loop
lods
loop
scas
loop
lods
loop
stos
loop
lods
loop
mov
or
stos
loop
stos
loop
mov
sub
sub
lods
loop
mov
or
loop
lods
loop
stos
loop
lods
loop
stos
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
mov
or
lods
loop
stos
loop
stos
loop
mov
or
mov
or
scas
loop
stos
loop
stos
loop
stos
loop
lods
loop
stos
loop
scas
loop
(bad)
loop
mov
sub
scas
loop
stos
loop
lods
loop
mov
sub
stos
loop
lods
loop
stos
loop
lods
loop
stos
loop
mov
sub
(bad)
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
mov
sub
scas
loop
scas
loop
stos
loop
lods
loop
mov
sub
lods
loop
mov
sub
(bad)
loop
lods
loop
mov
sub
sub
mov
or
lods
loop
lods
loop
mov
sub
loop
scas
loop
stos
loop
scas
loop
scas
loop
lods
loop
lods
loop
scas
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
mov
sub
stos
loop
mov
or
stos
loop
scas
loop
(bad)
loop
scas
loop
(bad)
loop
stos
loop
mov
sub
lods
loop
scas
add
sub
stos
loop
scas
loop
stos
loop
scas
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
mov
or
loop
stos
loop
lods
loop
(bad)
loop
(bad)
loop
scas
loop
stos
loop
scas
loop
lods
loop
lods
loop
(bad)
loop
mov
sub
lods
loop
scas
loop
stos
loop
mov
or
scas
loop
lods
loop
scas
loop
scas
loop
stos
loop
(bad)
loop
scas
add
or
stos
loop
mov
sub
loop
lods
loop
stos
loop
stos
loop
mov
sub
mov
sub
stos
loop
stos
loop
stos
loop
stos
loop
mov
sub
lods
loop
stos
loop
stos
loop
mov
sub
loop
stos
loop
(bad)
loop
lods
loop
mov
sub
lods
loop
(bad)
loop
scas
add
sub
stos
loop
scas
loop
lods
loop
mov
sub
loop
mov
or
(bad)
loop
stos
loop
lods
loop
stos
loop
mov
or
mov
sub
mov
sub
stos
loop
stos
loop
stos
loop
scas
loop
scas
loop
stos
loop
stos
loop
scas
loop
stos
loop
stos
loop
scas
loop
stos
loop
stos
loop
stos
loop
scas
add
or
loop
stos
loop
stos
loop
mov
sub
mov
or
lods
loop
stos
loop
stos
loop
stos
loop
lods
loop
scas
loop
lods
loop
lods
loop
scas
loop
(bad)
loop
stos
loop
mov
sub
lods
loop
(bad)
loop
mov
sub
lods
loop
stos
loop
lods
loop
lods
loop
stos
loop
mov
or
add
sub
loop
scas
loop
lods
loop
lods
loop
mov
sub
lods
loop
mov
or
scas
loop
mov
sub
loop
stos
loop
lods
loop
stos
loop
mov
or
(bad)
loop
mov
sub
stos
loop
lods
loop
scas
loop
lods
loop
lods
loop
stos
loop
(bad)
loop
lods
loop
stos
loop
scas
add
or
scas
loop
stos
loop
lods
loop
scas
loop
lods
loop
lods
loop
scas
loop
scas
loop
stos
loop
stos
loop
mov
or
lods
loop
stos
loop
mov
sub
stos
loop
scas
loop
mov
sub
scas
loop
scas
loop
(bad)
loop
lods
loop
lods
loop
scas
loop
scas
loop
lods
loop
(bad)
loop
(bad)
loop
stos
loop
lods
loop
(bad)
loop
scas
loop
scas
add
ins
outs
jb
push
je
gs
ins
add
jae
gs
cs
dec
add
sub
stos
loop
stos
loop
scas
loop
mov
sub
stos
loop
scas
loop
stos
loop
mov
sub
lods
loop
lods
loop
stos
loop
(bad)
loop
mov
sub
stos
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
lods
loop
stos
loop
lods
loop
stos
loop
scas
loop
lods
loop
mov
sub
mov
sub
add
outs
je
xor
loop
scas
loop
mov
sub
scas
loop
lods
loop
lods
loop
lods
loop
(bad)
loop
mov
sub
stos
loop
mov
sub
loop
stos
loop
stos
loop
scas
loop
lods
loop
stos
loop
scas
loop
mov
sub
scas
loop
mov
sub
scas
loop
(bad)
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
scas
add
arpl
imul
je
ins
cs
gs
add
je
push
push
inc
cmp
inc
gs
je
imul
gs
add
data16
inc
ins
outs
arpl
outs
jo
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
je
ins
gs
outs
je
jns
add
gs
je
dec
outs
jae
popa
outs
arpl
loop
lods
loop
(bad)
loop
mov
sub
loop
scas
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
mov
sub
loop
(bad)
loop
mov
or
stos
loop
mov
or
mov
sub
lods
loop
scas
loop
mov
or
(bad)
loop
(bad)
loop
mov
sub
scas
loop
scas
loop
(bad)
loop
scas
add
sub
loop
scas
loop
stos
loop
lods
loop
mov
or
mov
sub
stos
loop
stos
loop
stos
loop
stos
loop
lods
loop
stos
loop
stos
loop
lods
loop
scas
loop
(bad)
loop
stos
loop
lods
loop
scas
loop
mov
sub
scas
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
lods
loop
lods
loop
stos
loop
stos
loop
lods
loop
scas
add
or
scas
loop
lods
loop
scas
loop
scas
loop
stos
loop
stos
loop
stos
loop
stos
loop
stos
loop
lods
loop
scas
loop
stos
loop
lods
loop
stos
loop
mov
sub
lods
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
mov
sub
loop
stos
loop
lods
loop
lods
loop
lods
loop
lods
loop
lods
loop
scas
loop
stos
loop
scas
loop
scas
loop
(bad)
loop
scas
add
sub
lods
loop
mov
sub
stos
loop
stos
loop
mov
sub
stos
loop
scas
loop
stos
loop
mov
sub
lods
loop
stos
loop
stos
loop
lods
loop
scas
loop
lods
loop
lods
loop
stos
loop
(bad)
loop
stos
loop
scas
loop
scas
loop
stos
loop
lods
loop
(bad)
loop
stos
loop
scas
loop
stos
loop
lods
loop
stos
loop
scas
add
or
stos
loop
scas
loop
lods
loop
(bad)
loop
stos
loop
scas
loop
lods
loop
lods
loop
mov
sub
loop
stos
loop
scas
loop
stos
loop
stos
loop
mov
or
lods
loop
lods
loop
stos
loop
stos
loop
scas
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
scas
loop
lods
loop
lods
loop
mov
sub
lods
loop
stos
loop
stos
loop
scas
add
push
ins
inc
dec
outs
aaa
imul
gs
outs
push
push
outs
add
push
push
je
pop
inc
arpl
inc
dec
fs
push
jno
add
xor
inc
pop
ss
cmp
jb
push
add
xor
push
dec
inc
push
imul
xor
push
jne
je
ins
gs
gs
jo
jb
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
imul
inc
jb
popa
jns
imul
jno
jbe
dec
gs
imul
jno
push
dec
aaa
outs
push
addr16
inc
pop
outs
dec
je
xor
inc
outs
outs
arpl
add
jne
gs
push
je
popa
cmp
inc
xor
jbe
imul
xor
push
push
arpl
jb
gs
jbe
dec
jo
add
imul
imul
dec
fs
inc
pop
xor
dec
xor
dec
dec
add
je
dec
jae
popa
arpl
jb
jne
add
xor
jno
imul
jns
xor
imul
je
dec
inc
imul
ja
pop
push
arpl
aaa
xor
push
add
je
inc
jne
jb
outs
je
push
add
pop
arpl
jbe
js
xor
xor
push
add
gs
dec
outs
dec
push
push
cmp
jns
xor
dec
ins
inc
add
jne
addr16
push
jns
je
ins
cs
imul
imul
pop
dec
jae
je
popa
arpl
add
dec
popa
js
dec
xor
xor
addr16
push
push
add
dec
outs
addr16
je
push
dec
ins
xor
jno
addr16
dec
cmp
add
je
dec
jae
ins
imul
imul
jo
pop
xor
xor
add
jb
popa
ins
add
je
dec
outs
addr16
add
push
popa
xor
xor
pop
ss
pop
add
popa
fs
jns
add
jno
dec
xor
inc
push
dec
outs
inc
pop
inc
push
cmp
push
gs
add
xor
dec
js
outs
inc
pop
inc
push
push
ss
jns
dec
fs
xor
jae
dec
pop
aaa
dec
inc
inc
push
add
ins
pop
dec
dec
aaa
dec
push
push
dec
outs
ins
push
dec
dec
jb
add
outs
fs
je
cmp
inc
push
cmp
xor
loop
lods
loop
lods
loop
scas
loop
stos
loop
lods
loop
scas
loop
stos
loop
stos
loop
stos
loop
stos
loop
lods
loop
mov
sub
lods
loop
(bad)
loop
lods
loop
mov
or
mov
or
mov
sub
loop
scas
loop
(bad)
loop
scas
loop
(bad)
loop
scas
loop
scas
loop
stos
loop
mov
or
scas
loop
lods
loop
scas
add
ins
jne
push
jns
gs
sub
mov
sub
lods
loop
stos
loop
lods
loop
scas
loop
mov
sub
lods
loop
(bad)
loop
stos
loop
lods
loop
scas
loop
mov
sub
stos
loop
scas
loop
scas
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
mov
sub
loop
(bad)
loop
mov
sub
add
sub
lods
loop
mov
or
lods
loop
lods
loop
lods
loop
scas
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
mov
sub
scas
loop
mov
or
loop
scas
loop
scas
loop
(bad)
loop
scas
loop
lods
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
(bad)
loop
mov
sub
add
or
loop
stos
loop
mov
sub
lods
loop
scas
loop
stos
loop
stos
loop
lods
loop
scas
loop
mov
sub
stos
loop
mov
or
stos
loop
stos
loop
stos
loop
mov
or
loop
stos
loop
(bad)
loop
mov
sub
mov
sub
scas
loop
stos
loop
scas
add
jbe
xor
xor
gs
push
push
cmp
add
dec
fs
inc
cmp
je
cmp
push
push
ja
outs
push
xor
pop
dec
inc
inc
xor
ja
add
sub
(bad)
loop
stos
loop
lods
loop
stos
loop
lods
loop
lods
loop
stos
loop
mov
sub
(bad)
loop
(bad)
loop
scas
loop
stos
loop
lods
loop
scas
loop
stos
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
mov
sub
mov
or
lods
loop
lods
loop
(bad)
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
scas
loop
lods
loop
stos
loop
scas
add
or
(bad)
loop
lods
loop
mov
sub
scas
loop
mov
or
mov
sub
scas
loop
stos
loop
stos
loop
stos
loop
stos
loop
stos
loop
mov
sub
stos
loop
mov
or
stos
loop
scas
loop
lods
loop
scas
loop
lods
loop
mov
or
(bad)
loop
lods
loop
scas
loop
scas
add
or
loop
stos
loop
mov
or
lods
loop
(bad)
loop
(bad)
loop
stos
loop
mov
sub
stos
loop
stos
loop
lods
loop
(bad)
loop
stos
loop
scas
loop
lods
loop
lods
loop
scas
loop
(bad)
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
scas
loop
lods
loop
mov
or
stos
loop
stos
loop
mov
sub
scas
add
or
lods
loop
stos
loop
lods
loop
stos
loop
scas
loop
stos
loop
(bad)
loop
scas
loop
scas
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
mov
or
stos
loop
mov
or
mov
or
lods
loop
stos
loop
scas
loop
mov
sub
lods
loop
lods
loop
scas
loop
scas
loop
lods
loop
scas
loop
lods
loop
(bad)
loop
scas
add
or
loop
scas
loop
scas
loop
(bad)
loop
scas
loop
mov
or
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
scas
loop
stos
loop
scas
loop
scas
loop
scas
loop
(bad)
loop
mov
sub
(bad)
loop
stos
loop
scas
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
lods
loop
lods
loop
lods
loop
stos
loop
scas
loop
scas
loop
stos
loop
lods
loop
scas
add
sub
mov
sub
scas
loop
scas
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
scas
loop
mov
or
loop
stos
loop
stos
loop
mov
sub
loop
(bad)
loop
scas
loop
mov
sub
mov
sub
mov
sub
lods
loop
lods
loop
scas
add
or
loop
(bad)
loop
mov
sub
(bad)
loop
mov
or
stos
loop
(bad)
loop
mov
sub
mov
sub
loop
stos
loop
lods
loop
stos
loop
scas
loop
(bad)
loop
lods
loop
mov
sub
loop
scas
loop
scas
loop
(bad)
loop
mov
or
mov
sub
dec
arpl
dec
xor
arpl
add
cmp
jno
pop
dec
dec
outs
je
dec
inc
cmp
loop
scas
loop
stos
loop
scas
loop
scas
loop
lods
loop
lods
loop
lods
loop
stos
loop
stos
loop
scas
loop
stos
loop
mov
or
(bad)
loop
mov
sub
scas
loop
scas
loop
mov
sub
scas
loop
lods
loop
scas
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
stos
loop
stos
loop
mov
or
lods
loop
lods
loop
stos
loop
lods
loop
scas
loop
scas
add
sub
scas
loop
(bad)
loop
scas
loop
lods
loop
mov
or
lods
loop
mov
or
mov
sub
loop
stos
loop
scas
loop
(bad)
loop
stos
loop
mov
sub
loop
stos
loop
scas
loop
lods
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
(bad)
loop
mov
sub
lods
loop
scas
loop
(bad)
loop
(bad)
loop
scas
add
sub
loop
lods
loop
lods
loop
stos
loop
lods
loop
stos
loop
lods
loop
mov
sub
stos
loop
lods
loop
stos
loop
stos
loop
mov
sub
stos
loop
scas
loop
lods
loop
(bad)
loop
lods
loop
mov
sub
stos
loop
stos
loop
mov
sub
(bad)
loop
scas
loop
lods
loop
stos
loop
scas
add
sub
lods
loop
stos
loop
mov
sub
stos
loop
stos
loop
lods
loop
lods
loop
scas
loop
stos
loop
lods
loop
lods
loop
scas
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
(bad)
loop
mov
sub
stos
loop
mov
or
(bad)
loop
mov
sub
scas
loop
mov
sub
stos
loop
scas
add
sub
mov
or
(bad)
loop
stos
loop
lods
loop
stos
loop
stos
loop
scas
loop
mov
sub
lods
loop
lods
loop
mov
sub
loop
mov
sub
loop
scas
loop
stos
loop
(bad)
loop
scas
loop
lods
loop
(bad)
loop
lods
loop
mov
sub
lods
loop
stos
loop
lods
loop
lods
loop
scas
add
sub
lods
loop
scas
loop
(bad)
loop
mov
or
mov
sub
scas
loop
mov
or
mov
sub
loop
lods
loop
stos
loop
mov
sub
stos
loop
mov
sub
lods
loop
stos
loop
mov
sub
lods
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
scas
add
or
loop
scas
loop
scas
loop
stos
loop
scas
loop
lods
loop
stos
loop
mov
sub
lods
loop
lods
loop
lods
loop
(bad)
loop
mov
sub
stos
loop
scas
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
mov
sub
lods
loop
scas
loop
lods
loop
mov
sub
stos
loop
lods
loop
stos
loop
scas
add
sub
stos
loop
mov
sub
lods
loop
stos
loop
stos
loop
lods
loop
stos
loop
scas
loop
lods
loop
stos
loop
scas
loop
mov
sub
loop
scas
loop
(bad)
loop
(bad)
loop
(bad)
loop
stos
loop
mov
sub
lods
loop
lods
loop
stos
loop
mov
sub
loop
lods
loop
scas
add
je
dec
push
jb
push
ins
popa
push
push
xor
jae
push
push
inc
push
push
arpl
add
imul
push
dec
inc
outs
inc
dec
xor
jo
add
dec
popa
inc
bound
xor
bound
add
sub
lods
loop
scas
loop
lods
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
mov
sub
loop
lods
loop
scas
loop
stos
loop
lods
loop
scas
loop
stos
loop
stos
loop
lods
loop
scas
loop
stos
loop
stos
loop
stos
loop
lods
loop
lods
loop
mov
sub
stos
loop
(bad)
loop
scas
loop
stos
loop
mov
sub
mov
sub
sub
stos
loop
stos
loop
scas
loop
lods
loop
mov
or
scas
loop
scas
loop
scas
loop
stos
loop
scas
loop
mov
sub
stos
loop
mov
sub
mov
sub
stos
loop
mov
or
stos
loop
lods
loop
lods
loop
mov
or
stos
loop
stos
loop
scas
add
or
loop
lods
loop
scas
loop
(bad)
loop
lods
loop
scas
loop
mov
sub
scas
loop
mov
or
loop
scas
loop
scas
loop
lods
loop
scas
loop
stos
loop
stos
loop
mov
or
lods
loop
lods
loop
stos
loop
mov
or
loop
stos
loop
stos
loop
scas
loop
stos
loop
scas
loop
scas
loop
scas
loop
stos
loop
scas
add
sub
loop
stos
loop
(bad)
loop
mov
sub
lods
loop
(bad)
loop
stos
loop
(bad)
loop
lods
loop
mov
sub
mov
sub
stos
loop
mov
or
loop
scas
loop
stos
loop
lods
loop
lods
loop
stos
loop
lods
loop
mov
sub
lods
loop
stos
loop
lods
loop
(bad)
loop
scas
add
sub
lods
loop
(bad)
loop
mov
sub
loop
lods
loop
mov
sub
mov
or
stos
loop
stos
loop
scas
loop
stos
loop
stos
loop
scas
loop
lods
loop
(bad)
loop
scas
loop
lods
loop
lods
loop
mov
sub
stos
loop
lods
loop
scas
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
scas
loop
stos
loop
scas
add
or
stos
loop
lods
loop
lods
loop
mov
or
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
mov
sub
mov
sub
scas
loop
stos
loop
scas
loop
(bad)
loop
stos
loop
mov
sub
scas
loop
lods
loop
lods
loop
mov
sub
stos
loop
scas
loop
scas
loop
stos
loop
mov
sub
or
loop
lods
loop
mov
sub
scas
loop
lods
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
scas
loop
(bad)
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
mov
sub
loop
mov
or
stos
loop
(bad)
loop
scas
loop
(bad)
loop
stos
loop
mov
sub
lods
loop
stos
loop
(bad)
loop
stos
loop
scas
add
or
stos
loop
stos
loop
scas
loop
stos
loop
lods
loop
scas
loop
mov
or
(bad)
loop
lods
loop
mov
sub
(bad)
loop
lods
loop
mov
or
mov
sub
lods
loop
stos
loop
stos
loop
stos
loop
lods
loop
mov
sub
loop
mov
sub
scas
add
sub
scas
loop
lods
loop
stos
loop
lods
loop
lods
loop
mov
sub
lods
loop
(bad)
loop
mov
sub
(bad)
loop
stos
loop
stos
loop
scas
loop
stos
loop
lods
loop
scas
loop
(bad)
loop
scas
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
lods
loop
lods
loop
scas
loop
scas
loop
stos
loop
stos
loop
mov
sub
scas
add
sub
scas
loop
stos
loop
mov
sub
(bad)
loop
scas
loop
stos
loop
stos
loop
stos
loop
mov
or
scas
loop
(bad)
loop
scas
loop
stos
loop
lods
loop
mov
sub
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
scas
loop
stos
loop
lods
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
mov
sub
scas
add
sub
stos
loop
lods
loop
scas
loop
scas
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
scas
loop
lods
loop
(bad)
loop
(bad)
loop
mov
or
(bad)
loop
mov
or
lods
loop
mov
sub
loop
lods
loop
mov
sub
mov
sub
lods
loop
lods
loop
(bad)
loop
scas
add
sub
(bad)
loop
stos
loop
stos
loop
stos
loop
scas
loop
mov
sub
stos
loop
mov
or
lods
loop
mov
sub
stos
loop
lods
loop
lods
loop
(bad)
loop
scas
loop
scas
loop
lods
loop
lods
loop
stos
loop
lods
loop
lods
loop
mov
sub
scas
loop
lods
loop
mov
sub
scas
loop
scas
add
sub
scas
loop
(bad)
loop
stos
loop
mov
sub
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
stos
loop
lods
loop
stos
loop
mov
or
scas
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
mov
or
stos
loop
lods
loop
stos
loop
stos
loop
lods
loop
stos
loop
stos
loop
scas
loop
mov
sub
lods
loop
scas
loop
lods
loop
lods
loop
lods
loop
scas
loop
stos
loop
lods
loop
stos
loop
lods
loop
lods
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
mov
or
stos
loop
scas
loop
stos
loop
lods
loop
stos
loop
mov
sub
lods
loop
stos
loop
mov
sub
stos
loop
mov
sub
lods
loop
scas
loop
mov
or
sub
scas
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
(bad)
loop
(bad)
loop
mov
sub
mov
sub
stos
loop
mov
sub
scas
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
scas
loop
mov
sub
mov
sub
loop
(bad)
loop
scas
loop
scas
add
sub
(bad)
loop
lods
loop
stos
loop
(bad)
loop
mov
or
stos
loop
stos
loop
lods
loop
scas
loop
stos
loop
scas
loop
lods
loop
mov
sub
lods
loop
stos
loop
scas
loop
stos
loop
lods
loop
mov
sub
mov
sub
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
scas
loop
(bad)
loop
stos
loop
scas
add
sub
scas
loop
stos
loop
mov
or
stos
loop
mov
sub
lods
loop
scas
loop
lods
loop
scas
loop
mov
sub
loop
lods
loop
lods
loop
scas
loop
(bad)
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
stos
loop
lods
loop
scas
loop
(bad)
loop
(bad)
loop
(bad)
loop
(bad)
loop
lods
loop
stos
loop
scas
loop
stos
loop
scas
add
sub
scas
loop
scas
loop
mov
sub
mov
sub
stos
loop
lods
loop
mov
sub
scas
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
lods
loop
stos
loop
lods
loop
stos
loop
scas
loop
scas
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
mov
sub
loop
scas
add
or
loop
stos
loop
lods
loop
mov
sub
lods
loop
stos
loop
scas
loop
scas
loop
stos
loop
mov
sub
mov
or
lods
loop
lods
loop
scas
loop
lods
loop
stos
loop
scas
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
scas
loop
mov
sub
stos
loop
lods
loop
lods
loop
stos
loop
scas
add
sub
scas
loop
mov
sub
scas
loop
lods
loop
mov
sub
loop
stos
loop
lods
loop
mov
sub
lods
loop
mov
or
loop
mov
sub
loop
scas
loop
mov
sub
loop
lods
loop
lods
loop
lods
loop
stos
loop
scas
loop
scas
add
or
stos
loop
stos
loop
stos
loop
scas
loop
mov
sub
stos
loop
scas
loop
(bad)
loop
(bad)
loop
scas
loop
mov
sub
lods
loop
stos
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
mov
sub
stos
loop
lods
loop
mov
sub
stos
loop
lods
loop
mov
sub
scas
loop
(bad)
loop
lods
loop
lods
loop
mov
sub
stos
loop
lods
loop
lods
loop
(bad)
loop
stos
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
scas
loop
stos
loop
stos
loop
scas
loop
stos
loop
scas
loop
mov
or
stos
loop
scas
loop
mov
or
stos
loop
lods
loop
(bad)
loop
lods
loop
mov
sub
lods
loop
scas
add
or
loop
lods
loop
mov
or
loop
stos
loop
stos
loop
stos
loop
scas
loop
lods
loop
scas
loop
mov
or
stos
loop
(bad)
loop
scas
loop
mov
sub
scas
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
mov
or
scas
loop
lods
loop
(bad)
loop
scas
loop
mov
sub
sub
lods
loop
(bad)
loop
mov
sub
stos
loop
stos
loop
lods
loop
scas
loop
scas
loop
scas
loop
mov
sub
loop
(bad)
loop
scas
loop
(bad)
loop
(bad)
loop
stos
loop
scas
loop
scas
loop
scas
loop
stos
loop
lods
loop
(bad)
loop
mov
sub
lods
loop
mov
sub
stos
loop
scas
add
sub
(bad)
loop
lods
loop
stos
loop
mov
or
mov
or
lods
loop
lods
loop
stos
loop
(bad)
loop
mov
or
lods
loop
lods
loop
lods
loop
scas
loop
scas
loop
stos
loop
mov
sub
loop
stos
loop
scas
loop
mov
or
stos
loop
lods
loop
mov
sub
lods
loop
scas
add
sub
mov
or
lods
loop
lods
loop
stos
loop
lods
loop
mov
sub
lods
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
lods
loop
mov
sub
mov
sub
stos
loop
lods
loop
stos
loop
lods
loop
mov
sub
stos
loop
stos
loop
scas
add
inc
dec
js
ins
xor
imul
push
xor
ins
cmp
push
dec
push
cmp
dec
js
jb
jb
jbe
push
xor
dec
jb
ins
outs
inc
inc
jae
xor
push
dec
pop
pop
popa
push
pop
bound
jb
inc
inc
add
je
add
js
imul
jno
push
ins
jae
inc
dec
push
arpl
add
dec
dec
inc
dec
fs
dec
fs
aaa
dec
xor
dec
pop
inc
ins
addr16
jne
dec
dec
inc
jno
xor
data16
xor
xor
pop
push
inc
xor
inc
push
pop
add
pop
jb
push
xor
dec
imul
jns
push
arpl
je
ins
inc
inc
bound
je
dec
outs
xor
pop
push
cmp
push
push
jns
dec
arpl
push
inc
push
push
add
ins
dec
dec
data16
push
dec
inc
outs
push
outs
inc
fs
push
jbe
push
jno
imul
push
jo
aaa
add
dec
cmp
xor
dec
push
push
add
inc
cmp
cmp
aaa
pop
ss
aaa
jne
add
dec
push
xor
imul
bound
ja
push
jb
dec
dec
push
jns
dec
jbe
push
ss
push
jbe
cmp
ja
imul
pop
bound
arpl
jae
xor
popa
xor
outs
push
bound
xor
push
add
imul
dec
push
pop
xor
pop
add
cmp
cmp
imul
xor
inc
inc
gs
add
push
pop
xor
dec
ins
pop
inc
dec
push
aaa
outs
inc
data16
outs
xor
push
push
xor
jno
jne
ins
add
sub
lods
loop
scas
loop
scas
loop
stos
loop
stos
loop
mov
sub
stos
loop
mov
or
(bad)
loop
stos
loop
scas
loop
stos
loop
lods
loop
mov
or
mov
sub
loop
lods
loop
scas
loop
stos
loop
lods
loop
scas
loop
stos
loop
scas
loop
scas
loop
scas
loop
stos
loop
(bad)
loop
mov
sub
sub
stos
loop
scas
loop
stos
loop
mov
sub
stos
loop
mov
sub
lods
loop
scas
loop
stos
loop
lods
loop
lods
loop
stos
loop
stos
loop
lods
loop
stos
loop
lods
loop
lods
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
mov
sub
lods
loop
scas
loop
(bad)
loop
(bad)
loop
lods
loop
scas
loop
scas
add
sub
mov
or
(bad)
loop
mov
sub
lods
loop
scas
loop
stos
loop
scas
loop
lods
loop
mov
sub
loop
stos
loop
stos
loop
stos
loop
mov
sub
mov
sub
loop
stos
loop
stos
loop
mov
sub
mov
sub
or
mov
sub
mov
or
stos
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
lods
loop
mov
or
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
mov
sub
loop
stos
loop
stos
loop
stos
loop
mov
sub
(bad)
loop
mov
sub
sub
lods
loop
(bad)
loop
mov
or
mov
sub
scas
loop
stos
loop
lods
loop
lods
loop
stos
loop
scas
loop
mov
or
stos
loop
lods
loop
stos
loop
lods
loop
mov
sub
scas
loop
scas
loop
mov
or
scas
loop
lods
loop
(bad)
loop
stos
loop
scas
loop
stos
loop
(bad)
loop
scas
add
or
stos
loop
stos
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
lods
loop
scas
loop
(bad)
loop
mov
sub
scas
loop
(bad)
loop
stos
loop
lods
loop
(bad)
loop
scas
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
lods
loop
(bad)
loop
mov
sub
stos
loop
scas
loop
stos
loop
scas
loop
mov
sub
scas
loop
mov
sub
or
(bad)
loop
mov
or
lods
loop
stos
loop
stos
loop
lods
loop
(bad)
loop
stos
loop
stos
loop
scas
loop
scas
loop
(bad)
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
mov
sub
scas
loop
mov
sub
lods
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
mov
sub
lods
loop
mov
sub
sub
loop
lods
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
stos
loop
(bad)
loop
mov
or
lods
loop
(bad)
loop
lods
loop
lods
loop
mov
sub
lods
loop
stos
loop
scas
loop
(bad)
loop
scas
loop
mov
sub
lods
loop
stos
loop
lods
loop
mov
or
loop
scas
add
sub
stos
loop
stos
loop
mov
or
stos
loop
mov
sub
loop
lods
loop
mov
or
scas
loop
lods
loop
lods
loop
stos
loop
scas
loop
(bad)
loop
mov
sub
(bad)
loop
lods
loop
lods
loop
scas
loop
(bad)
loop
(bad)
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
lods
loop
lods
loop
scas
loop
scas
loop
scas
add
or
mov
sub
loop
lods
loop
stos
loop
stos
loop
scas
loop
mov
or
loop
scas
loop
scas
loop
mov
sub
loop
lods
loop
lods
loop
stos
loop
(bad)
loop
mov
or
loop
scas
loop
scas
loop
mov
sub
mov
or
stos
loop
lods
loop
scas
add
dec
imul
outs
dec
dec
js
addr16
inc
push
arpl
xor
inc
dec
push
dec
inc
push
bound
add
je
inc
xor
imul
arpl
imul
sub
scas
loop
lods
loop
mov
or
scas
loop
stos
loop
stos
loop
stos
loop
lods
loop
(bad)
loop
(bad)
loop
lods
loop
mov
sub
(bad)
loop
(bad)
loop
stos
loop
scas
loop
mov
or
mov
sub
lods
loop
stos
loop
lods
loop
lods
loop
mov
or
loop
mov
sub
scas
add
or
lods
loop
scas
loop
lods
loop
stos
loop
mov
sub
stos
loop
stos
loop
(bad)
loop
mov
sub
loop
stos
loop
scas
loop
stos
loop
lods
loop
mov
or
scas
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
(bad)
loop
lods
loop
(bad)
loop
(bad)
loop
(bad)
loop
stos
loop
lods
loop
scas
loop
lods
loop
mov
sub
sub
lods
loop
stos
loop
lods
loop
(bad)
loop
scas
loop
lods
loop
lods
loop
(bad)
loop
mov
or
loop
lods
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
stos
loop
scas
loop
mov
or
(bad)
loop
scas
loop
lods
loop
lods
loop
mov
or
loop
stos
loop
lods
loop
lods
loop
stos
loop
stos
loop
lods
loop
stos
loop
scas
add
sub
lods
loop
lods
loop
mov
or
lods
loop
mov
or
(bad)
loop
stos
loop
lods
loop
scas
loop
lods
loop
lods
loop
mov
sub
mov
sub
scas
loop
mov
sub
mov
sub
loop
stos
loop
stos
loop
lods
loop
stos
loop
scas
loop
lods
loop
(bad)
loop
lods
loop
scas
add
or
scas
loop
mov
sub
stos
loop
scas
loop
mov
or
stos
loop
lods
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
lods
loop
scas
loop
mov
sub
loop
stos
loop
lods
loop
mov
or
loop
mov
or
mov
sub
or
scas
loop
stos
loop
scas
loop
stos
loop
mov
sub
stos
loop
scas
loop
lods
loop
lods
loop
scas
loop
mov
sub
scas
loop
scas
loop
stos
loop
mov
sub
scas
loop
stos
loop
scas
loop
stos
loop
mov
sub
stos
loop
lods
loop
mov
sub
stos
loop
scas
add
or
loop
mov
sub
loop
lods
loop
stos
loop
stos
loop
mov
sub
mov
or
stos
loop
mov
sub
lods
loop
scas
loop
scas
loop
stos
loop
mov
or
mov
sub
lods
loop
mov
or
stos
loop
lods
loop
stos
loop
scas
add
or
stos
loop
lods
loop
scas
loop
mov
or
stos
loop
(bad)
loop
stos
loop
(bad)
loop
lods
loop
lods
loop
(bad)
loop
stos
loop
(bad)
loop
stos
loop
(bad)
loop
lods
loop
lods
loop
scas
loop
stos
loop
stos
loop
mov
or
mov
sub
lods
loop
mov
or
lods
loop
mov
or
lods
loop
stos
loop
scas
add
or
mov
sub
stos
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
scas
loop
stos
loop
stos
loop
stos
loop
lods
loop
lods
loop
scas
loop
stos
loop
scas
loop
stos
loop
scas
loop
scas
loop
lods
loop
stos
loop
lods
loop
scas
loop
lods
loop
mov
or
lods
loop
lods
loop
scas
loop
mov
sub
(bad)
loop
lods
loop
scas
loop
scas
add
sub
stos
loop
stos
loop
stos
loop
lods
loop
mov
sub
lods
loop
mov
sub
mov
or
lods
loop
stos
loop
scas
loop
scas
loop
scas
loop
(bad)
loop
scas
loop
stos
loop
lods
loop
stos
loop
(bad)
loop
scas
loop
mov
or
lods
loop
mov
sub
loop
scas
add
cmp
push
ins
dec
push
cmp
xor
jo
push
jae
push
jp
push
jb
ss
push
fs
add
cmp
inc
inc
dec
inc
push
push
cmp
add
sub
scas
loop
scas
loop
lods
loop
mov
sub
scas
loop
lods
loop
(bad)
loop
mov
sub
stos
loop
(bad)
loop
scas
loop
lods
loop
stos
loop
mov
or
loop
lods
loop
stos
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
scas
loop
scas
loop
scas
loop
scas
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
(bad)
loop
scas
add
sub
stos
loop
(bad)
loop
(bad)
loop
scas
loop
(bad)
loop
scas
loop
stos
loop
stos
loop
lods
loop
lods
loop
scas
loop
stos
loop
lods
loop
mov
or
scas
loop
lods
loop
stos
loop
(bad)
loop
scas
loop
mov
sub
lods
loop
scas
loop
lods
loop
mov
sub
lods
loop
(bad)
loop
scas
loop
stos
loop
scas
loop
mov
sub
sub
lods
loop
mov
sub
(bad)
loop
lods
loop
scas
loop
(bad)
loop
(bad)
loop
lods
loop
scas
loop
mov
sub
(bad)
loop
stos
loop
(bad)
loop
(bad)
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
lods
loop
stos
loop
(bad)
loop
(bad)
loop
(bad)
loop
mov
sub
loop
(bad)
loop
scas
add
or
loop
scas
loop
mov
sub
lods
loop
lods
loop
scas
loop
mov
sub
lods
loop
mov
or
stos
loop
lods
loop
stos
loop
scas
loop
scas
loop
lods
loop
mov
sub
loop
scas
loop
scas
loop
scas
loop
stos
loop
lods
loop
mov
sub
stos
loop
lods
loop
stos
loop
stos
loop
scas
add
sub
mov
sub
stos
loop
mov
sub
loop
scas
loop
scas
loop
lods
loop
lods
loop
scas
loop
scas
loop
mov
sub
scas
loop
stos
loop
lods
loop
mov
or
lods
loop
(bad)
loop
(bad)
loop
scas
loop
stos
loop
lods
loop
mov
sub
stos
loop
scas
loop
mov
sub
sub
loop
lods
loop
mov
sub
scas
loop
mov
sub
lods
loop
lods
loop
lods
loop
lods
loop
mov
or
mov
or
loop
stos
loop
stos
loop
scas
loop
mov
sub
lods
loop
stos
loop
scas
loop
mov
or
stos
loop
(bad)
loop
scas
add
aaa
inc
dec
xor
push
xor
dec
popa
fs
outs
add
addr16
xor
push
push
dec
ins
push
jb
dec
push
arpl
loop
stos
loop
stos
loop
stos
loop
stos
loop
stos
loop
mov
sub
lods
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
scas
loop
scas
loop
scas
loop
(bad)
loop
stos
loop
mov
sub
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
(bad)
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
scas
loop
stos
loop
stos
loop
scas
loop
stos
loop
stos
loop
scas
add
sub
mov
or
stos
loop
scas
loop
stos
loop
lods
loop
(bad)
loop
mov
or
stos
loop
stos
loop
scas
loop
stos
loop
scas
loop
mov
or
(bad)
loop
mov
sub
lods
loop
stos
loop
stos
loop
lods
loop
mov
sub
mov
sub
lods
loop
(bad)
loop
(bad)
loop
scas
add
sub
lods
loop
lods
loop
scas
loop
lods
loop
lods
loop
scas
loop
stos
loop
stos
loop
lods
loop
stos
loop
lods
loop
lods
loop
scas
loop
stos
loop
stos
loop
lods
loop
stos
loop
mov
or
stos
loop
mov
sub
loop
lods
loop
stos
loop
lods
loop
lods
loop
lods
loop
scas
loop
mov
or
lods
loop
lods
loop
scas
add
sub
stos
loop
stos
loop
mov
sub
loop
mov
or
stos
loop
mov
sub
scas
loop
(bad)
loop
mov
or
stos
loop
lods
loop
lods
loop
stos
loop
stos
loop
scas
loop
stos
loop
scas
loop
stos
loop
scas
loop
scas
loop
lods
loop
stos
loop
(bad)
loop
mov
or
scas
add
sub
lods
loop
lods
loop
scas
loop
lods
loop
lods
loop
stos
loop
mov
sub
loop
stos
loop
lods
loop
stos
loop
stos
loop
stos
loop
scas
loop
stos
loop
stos
loop
lods
loop
stos
loop
stos
loop
stos
loop
lods
loop
(bad)
loop
stos
loop
(bad)
loop
(bad)
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
lods
loop
stos
loop
stos
loop
scas
loop
mov
sub
sub
stos
loop
stos
loop
scas
loop
mov
sub
mov
sub
lods
loop
mov
sub
scas
loop
mov
or
(bad)
loop
stos
loop
lods
loop
(bad)
loop
scas
loop
lods
loop
(bad)
loop
(bad)
loop
lods
loop
mov
or
stos
loop
stos
loop
(bad)
loop
(bad)
loop
stos
loop
(bad)
loop
stos
loop
scas
add
sub
mov
or
lods
loop
scas
loop
lods
loop
lods
loop
scas
loop
scas
loop
stos
loop
stos
loop
scas
loop
scas
loop
scas
loop
scas
loop
mov
sub
scas
loop
(bad)
loop
lods
loop
scas
loop
scas
loop
mov
sub
stos
loop
(bad)
loop
scas
loop
stos
loop
stos
loop
lods
loop
mov
sub
add
or
scas
loop
scas
loop
stos
loop
stos
loop
scas
loop
stos
loop
(bad)
loop
(bad)
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
scas
loop
scas
loop
stos
loop
(bad)
loop
scas
loop
lods
loop
stos
loop
stos
loop
scas
loop
stos
loop
(bad)
loop
scas
loop
scas
loop
stos
loop
scas
loop
scas
loop
mov
sub
lods
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
scas
add
or
loop
stos
loop
lods
loop
lods
loop
lods
loop
scas
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
lods
loop
scas
loop
scas
loop
lods
loop
lods
loop
stos
loop
scas
loop
lods
loop
mov
sub
loop
lods
loop
mov
or
scas
loop
stos
loop
mov
sub
scas
loop
lods
loop
mov
or
scas
add
sub
scas
loop
(bad)
loop
mov
sub
loop
lods
loop
(bad)
loop
mov
or
stos
loop
scas
loop
lods
loop
scas
loop
lods
loop
lods
loop
scas
loop
(bad)
loop
scas
loop
stos
loop
scas
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
lods
loop
stos
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
mov
or
stos
loop
scas
add
sub
lods
loop
lods
loop
mov
sub
lods
loop
scas
loop
lods
loop
mov
sub
stos
loop
mov
sub
lods
loop
lods
loop
scas
loop
lods
loop
mov
sub
(bad)
loop
scas
loop
scas
loop
scas
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
mov
sub
sub
lods
loop
(bad)
loop
mov
sub
stos
loop
mov
sub
loop
stos
loop
lods
loop
lods
loop
stos
loop
lods
loop
lods
loop
mov
or
mov
sub
stos
loop
mov
sub
loop
lods
loop
lods
loop
stos
loop
scas
loop
lods
loop
mov
sub
sub
scas
loop
stos
loop
lods
loop
stos
loop
mov
sub
stos
loop
scas
loop
scas
loop
scas
loop
lods
loop
lods
loop
stos
loop
(bad)
loop
(bad)
loop
scas
loop
scas
loop
scas
loop
scas
loop
lods
loop
stos
loop
stos
loop
mov
sub
stos
loop
(bad)
loop
scas
loop
lods
loop
lods
loop
lods
loop
lods
loop
scas
loop
scas
add
pop
push
inc
inc
outs
inc
imul
dec
xor
push
dec
pop
push
ins
inc
pop
gs
fs
dec
ins
inc
cmp
ins
add
dec
push
ins
xor
push
push
je
outs
aaa
xor
pop
dec
add
imul
pop
jns
outs
push
dec
dec
push
jns
dec
push
dec
addr16
fs
inc
inc
ss
push
pop
push
dec
ins
outs
push
mov
sub
lods
loop
lods
loop
mov
or
(bad)
loop
lods
loop
lods
loop
(bad)
loop
scas
loop
lods
loop
lods
loop
stos
loop
scas
loop
stos
loop
scas
loop
lods
loop
lods
loop
mov
sub
(bad)
loop
lods
loop
scas
loop
stos
loop
lods
loop
mov
sub
loop
(bad)
loop
scas
loop
mov
sub
scas
add
sub
mov
or
scas
loop
(bad)
loop
(bad)
loop
stos
loop
mov
sub
scas
loop
(bad)
loop
(bad)
loop
stos
loop
scas
loop
lods
loop
(bad)
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
stos
loop
scas
loop
scas
loop
stos
loop
lods
loop
mov
sub
(bad)
loop
(bad)
loop
(bad)
loop
scas
add
or
mov
or
lods
loop
mov
sub
(bad)
loop
lods
loop
(bad)
loop
(bad)
loop
mov
sub
(bad)
loop
scas
loop
mov
or
lods
loop
stos
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
stos
loop
lods
loop
scas
loop
mov
or
mov
or
loop
scas
loop
mov
sub
sub
lods
loop
stos
loop
stos
loop
stos
loop
mov
sub
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
(bad)
loop
scas
loop
lods
loop
scas
loop
stos
loop
stos
loop
mov
sub
loop
mov
or
mov
or
stos
loop
stos
loop
scas
loop
scas
loop
stos
loop
lods
loop
mov
or
sub
lods
loop
lods
loop
mov
sub
loop
mov
or
stos
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
stos
loop
scas
loop
lods
loop
(bad)
loop
mov
sub
mov
sub
lods
loop
lods
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
scas
loop
lods
loop
lods
loop
stos
loop
scas
add
or
stos
loop
lods
loop
stos
loop
(bad)
loop
scas
loop
lods
loop
lods
loop
stos
loop
stos
loop
mov
or
stos
loop
lods
loop
stos
loop
(bad)
loop
stos
loop
scas
loop
scas
loop
scas
loop
lods
loop
stos
loop
scas
loop
stos
loop
stos
loop
lods
loop
lods
loop
stos
loop
scas
loop
lods
loop
lods
loop
lods
loop
scas
loop
mov
sub
loop
scas
add
sub
lods
loop
stos
loop
scas
loop
mov
or
loop
stos
loop
lods
loop
scas
loop
stos
loop
lods
loop
lods
loop
stos
loop
scas
loop
scas
loop
(bad)
loop
lods
loop
stos
loop
scas
loop
mov
sub
mov
sub
lods
loop
scas
loop
(bad)
loop
stos
loop
mov
or
mov
sub
loop
scas
add
or
lods
loop
lods
loop
lods
loop
stos
loop
mov
or
stos
loop
(bad)
loop
stos
loop
mov
sub
loop
stos
loop
stos
loop
lods
loop
scas
loop
(bad)
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
lods
loop
stos
loop
(bad)
loop
(bad)
loop
scas
loop
lods
loop
scas
loop
mov
sub
stos
loop
lods
loop
scas
loop
lods
loop
scas
add
jae
inc
inc
jb
pop
dec
dec
xor
ins
jae
add
ins
xor
xor
cmp
pop
inc
je
ins
arpl
add
sub
loop
(bad)
loop
lods
loop
mov
sub
mov
sub
mov
sub
lods
loop
lods
loop
(bad)
loop
stos
loop
(bad)
loop
lods
loop
(bad)
loop
(bad)
loop
stos
loop
scas
loop
lods
loop
stos
loop
scas
loop
scas
loop
scas
loop
lods
loop
lods
loop
mov
or
lods
loop
(bad)
loop
mov
sub
sub
push
arpl
imul
jb
je
arpl
inc
je
jb
bound
add
jae
gs
cs
arpl
imul
ins
bound
popa
ins
gs
and
sub
(bad)
loop
stos
loop
mov
sub
lods
loop
stos
loop
stos
loop
(bad)
loop
(bad)
loop
mov
sub
stos
loop
mov
sub
lods
loop
stos
loop
stos
loop
stos
loop
stos
loop
scas
loop
lods
loop
stos
loop
mov
sub
lods
loop
stos
loop
lods
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
scas
add
sub
scas
loop
stos
loop
lods
loop
lods
loop
scas
loop
mov
sub
(bad)
loop
lods
loop
mov
or
mov
or
stos
loop
mov
sub
lods
loop
(bad)
loop
lods
loop
stos
loop
mov
or
scas
loop
lods
loop
scas
loop
stos
loop
mov
or
(bad)
loop
(bad)
loop
scas
add
jae
ins
bound
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
scas
loop
lods
loop
stos
loop
stos
loop
mov
sub
lods
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
mov
sub
stos
loop
scas
loop
mov
sub
(bad)
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
scas
loop
mov
sub
loop
stos
loop
stos
loop
mov
sub
inc
push
inc
dec
js
inc
xor
push
jbe
dec
pop
add
fs
data16
jo
ss
dec
push
dec
push
dec
push
push
outs
push
pop
je
add
outs
jno
dec
inc
jbe
je
inc
bound
dec
dec
push
add
addr16
arpl
xor
outs
cmp
jne
dec
inc
add
je
popa
ins
add
outs
fs
cmp
xor
pop
aaa
push
js
add
je
jne
ins
imul
dec
xor
inc
xor
dec
dec
xor
inc
je
push
imul
fs
loope
test
loope
mov
loop
lods
loop
lods
loop
stos
loop
scas
loop
scas
loop
stos
loop
scas
loop
scas
loop
stos
loop
lods
loop
stos
loop
scas
loop
stos
loop
scas
loop
lods
loop
lods
loop
lods
loop
mov
sub
stos
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
mov
sub
lods
loop
stos
loop
mov
sub
mov
sub
(bad)
loop
scas
add
or
loop
scas
loop
lods
loop
lods
loop
stos
loop
mov
sub
loop
stos
loop
stos
loop
mov
sub
lods
loop
stos
loop
scas
loop
stos
loop
scas
loop
stos
loop
mov
sub
(bad)
loop
stos
loop
lods
loop
stos
loop
stos
loop
lods
loop
stos
loop
mov
sub
lods
loop
scas
loop
lods
loop
lods
loop
scas
add
sub
stos
loop
stos
loop
lods
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
stos
loop
stos
loop
lods
loop
mov
or
loop
stos
loop
scas
loop
mov
or
mov
sub
scas
loop
scas
loop
lods
loop
scas
loop
mov
or
loop
scas
loop
mov
or
lods
loop
scas
loop
(bad)
loop
stos
loop
scas
add
outs
je
outs
ins
add
jb
jb
inc
xor
jbe
jo
inc
outs
inc
ins
dec
inc
add
jo
outs
add
xor
pop
push
inc
aaa
xor
dec
push
ss
inc
ins
add
dec
jne
ss
dec
jae
dec
push
ja
dec
js
xor
add
inc
xor
inc
js
imul
ja
inc
pop
ins
bound
push
jo
imul
push
je
push
inc
aaa
inc
fs
inc
outs
ins
inc
add
jae
outs
fs
popa
jns
jne
add
aaa
push
push
dec
jns
bound
push
jno
push
add
cmp
loop
scas
loop
lods
loop
lods
loop
lods
loop
scas
loop
lods
loop
lods
loop
stos
loop
lods
loop
scas
loop
lods
loop
mov
sub
loop
(bad)
loop
lods
loop
stos
loop
lods
loop
scas
loop
stos
loop
stos
loop
scas
loop
scas
loop
mov
sub
mov
sub
lods
loop
mov
or
loop
(bad)
loop
(bad)
loop
mov
sub
add
or
scas
loop
mov
sub
scas
loop
scas
loop
stos
loop
stos
loop
stos
loop
stos
loop
mov
sub
stos
loop
stos
loop
mov
or
loop
stos
loop
lods
loop
scas
loop
lods
loop
lods
loop
mov
sub
lods
loop
lods
loop
lods
loop
lods
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
lods
loop
scas
add
jo
outs
ins
popa
imul
ins
jbe
inc
jbe
outs
je
popa
outs
fs
gs
outs
inc
push
xor
inc
cmp
push
dec
addr16
ins
inc
ja
add
je
inc
ins
imul
add
je
push
jno
xor
imul
jne
pop
pop
add
inc
dec
jbe
inc
push
ins
xor
je
outs
dec
inc
js
add
ins
jns
push
push
jns
popa
xor
dec
outs
dec
xor
fs
inc
jae
gs
bound
gs
ins
jbe
add
imul
inc
inc
arpl
arpl
push
xor
imul
loope
movs
loope
mov
pop
dec
gs
outs
fs
outs
outs
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
mov
dec
inc
outs
ins
jo
jb
bound
xor
loop
stos
loop
lods
loop
mov
sub
(bad)
loop
scas
loop
mov
sub
stos
loop
scas
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
stos
loop
lods
loop
stos
loop
scas
loop
(bad)
loop
scas
loop
lods
loop
stos
loop
scas
loop
stos
loop
mov
sub
loop
stos
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
mov
or
scas
add
sub
lods
loop
stos
loop
lods
loop
stos
loop
stos
loop
lods
loop
mov
sub
mov
sub
lods
loop
scas
loop
scas
loop
mov
sub
mov
sub
loop
(bad)
loop
lods
loop
scas
loop
(bad)
loop
stos
loop
mov
sub
scas
loop
lods
loop
stos
loop
stos
loop
lods
loop
scas
add
or
stos
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
(bad)
loop
stos
loop
(bad)
loop
scas
loop
(bad)
loop
stos
loop
scas
loop
stos
loop
scas
loop
(bad)
loop
(bad)
loop
stos
loop
mov
sub
scas
loop
lods
loop
scas
loop
stos
loop
mov
sub
stos
loop
scas
loop
(bad)
loop
stos
loop
mov
sub
(bad)
loop
mov
sub
sub
scas
loop
lods
loop
lods
loop
stos
loop
mov
sub
stos
loop
lods
loop
mov
or
(bad)
loop
stos
loop
scas
loop
stos
loop
scas
loop
(bad)
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
scas
loop
lods
loop
lods
loop
mov
sub
lods
loop
mov
sub
push
dec
inc
push
popa
dec
inc
pop
aaa
dec
pop
push
dec
jb
add
je
inc
outs
je
jns
outs
imul
arpl
dec
xor
arpl
cmp
add
bound
jb
outs
add
je
push
inc
bound
bound
inc
dec
fs
xor
dec
inc
xor
dec
inc
pop
pop
ins
pop
inc
inc
dec
imul
inc
add
inc
dec
dec
push
inc
jae
dec
push
xor
push
addr16
addr16
popa
inc
inc
dec
pop
inc
inc
dec
xor
push
jne
pop
imul
gs
push
outs
jae
je
outs
outs
add
ins
pop
inc
xor
push
arpl
cmp
push
loope
movs
loope
movs
add
outs
jne
gs
bound
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
loope
mov
loop
stos
loop
stos
loop
scas
loop
lods
loop
(bad)
loop
stos
loop
(bad)
loop
(bad)
loop
scas
loop
mov
or
stos
loop
mov
sub
scas
loop
lods
loop
scas
loop
mov
sub
lods
loop
(bad)
loop
mov
sub
mov
sub
mov
sub
loop
(bad)
loop
scas
add
or
loop
scas
loop
mov
sub
scas
loop
(bad)
loop
mov
sub
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
scas
loop
mov
sub
lods
loop
(bad)
loop
scas
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
stos
loop
lods
loop
stos
loop
mov
sub
stos
loop
mov
sub
lods
loop
scas
add
outs
arpl
jae
outs
fs
gs
sub
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
(bad)
loop
(bad)
loop
stos
loop
scas
loop
stos
loop
lods
loop
stos
loop
scas
loop
stos
loop
lods
loop
lods
loop
scas
loop
mov
sub
lods
loop
(bad)
loop
scas
loop
stos
loop
scas
loop
scas
loop
lods
loop
stos
loop
scas
loop
(bad)
loop
stos
loop
stos
loop
(bad)
loop
mov
sub
sub
loop
lods
loop
mov
sub
lods
loop
lods
loop
lods
loop
scas
loop
scas
loop
stos
loop
lods
loop
scas
loop
scas
loop
stos
loop
lods
loop
lods
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
scas
loop
mov
sub
mov
or
(bad)
loop
(bad)
loop
mov
sub
stos
loop
scas
add
sub
scas
loop
stos
loop
mov
sub
scas
loop
mov
or
lods
loop
mov
sub
mov
or
stos
loop
mov
sub
loop
lods
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
stos
loop
(bad)
loop
mov
sub
scas
loop
scas
loop
scas
add
ins
ins
gs
imul
imul
je
ins
cs
arpl
imul
je
addr16
jo
jns
jo
xor
push
inc
push
popa
pop
pop
arpl
inc
push
inc
add
inc
pop
outs
ja
ins
push
dec
bound
push
add
bound
je
inc
inc
jb
dec
outs
push
fs
push
dec
xor
inc
jo
ins
imul
add
je
outs
ins
jo
je
bound
gs
push
outs
fs
outs
addr16
gs
jne
je
push
ss
addr16
jae
push
push
imul
gs
dec
outs
fs
gs
popa
ins
add
inc
dec
jbe
inc
dec
dec
bound
imul
add
je
js
arpl
imul
ins
bound
dec
inc
ins
inc
gs
outs
push
bound
xor
jae
je
dec
popa
ins
add
outs
imul
push
push
jb
xor
pop
cmp
jae
je
dec
gs
pop
push
push
imul
xor
inc
dec
jb
pop
dec
xor
add
and
imul
imul
aaa
dec
push
cmp
loope
movs
loope
lods
add
ins
jo
outs
outs
je
push
jns
je
ins
cs
outs
ins
jo
outs
outs
je
outs
fs
add
outs
arpl
jae
push
imul
lods
loop
(bad)
loop
lods
loop
scas
loop
lods
loop
(bad)
loop
(bad)
loop
mov
sub
scas
loop
lods
loop
lods
loop
(bad)
loop
stos
loop
mov
or
stos
loop
mov
sub
lods
loop
mov
sub
scas
loop
lods
loop
lods
loop
lods
loop
stos
loop
mov
sub
lods
loop
stos
loop
mov
sub
stos
loop
mov
or
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
stos
loop
stos
loop
lods
loop
mov
sub
mov
sub
mov
sub
mov
sub
lods
loop
lods
loop
scas
loop
lods
loop
mov
sub
scas
loop
stos
loop
scas
loop
lods
loop
scas
loop
scas
add
or
mov
sub
loop
lods
loop
lods
loop
scas
loop
lods
loop
stos
loop
lods
loop
mov
sub
(bad)
loop
scas
loop
scas
loop
mov
sub
stos
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
scas
loop
lods
loop
stos
loop
(bad)
loop
mov
or
(bad)
loop
scas
loop
(bad)
loop
lods
loop
lods
loop
scas
add
or
lods
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
mov
sub
(bad)
loop
stos
loop
lods
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
scas
loop
scas
loop
lods
loop
mov
sub
lods
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
mov
sub
stos
loop
scas
loop
(bad)
loop
stos
loop
lods
loop
mov
sub
scas
add
or
stos
loop
scas
loop
stos
loop
stos
loop
scas
loop
stos
loop
mov
sub
mov
or
lods
loop
mov
or
loop
scas
loop
stos
loop
stos
loop
scas
loop
lods
loop
stos
loop
(bad)
loop
(bad)
loop
stos
loop
lods
loop
scas
loop
lods
loop
stos
loop
stos
loop
lods
loop
lods
loop
lods
loop
mov
sub
outs
je
imul
je
outs
ins
add
pop
outs
jne
imul
push
dec
bound
xor
push
push
dec
inc
outs
jbe
xor
inc
imul
pop
ins
bound
dec
inc
popa
dec
xor
push
data16
dec
imul
bound
outs
js
xor
jno
add
je
jne
jb
outs
je
jb
arpl
jae
imul
push
jb
pop
dec
aaa
xor
xor
xor
addr16
dec
popa
imul
add
inc
xor
inc
push
aaa
outs
xor
dec
xor
add
outs
imul
gs
imul
jno
outs
outs
inc
cmp
je
js
jae
je
inc
jne
outs
push
arpl
gs
imul
outs
jae
push
cmp
xor
xor
pop
ja
dec
jb
push
movs
loope
mov
loop
mov
sub
mov
sub
mov
sub
stos
loop
(bad)
loop
lods
loop
lods
loop
mov
sub
scas
loop
lods
loop
stos
loop
mov
sub
scas
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
stos
loop
lods
loop
mov
or
loop
lods
loop
scas
loop
lods
loop
scas
add
inc
dec
push
inc
inc
xor
jbe
xor
inc
add
js
addr16
inc
jo
inc
push
inc
push
arpl
js
dec
add
inc
xor
push
pop
jno
bound
dec
inc
inc
imul
push
inc
ss
jne
gs
push
xor
add
and
jbe
outs
je
jb
jae
inc
imul
dec
inc
outs
ins
jo
jb
bound
dec
inc
imul
ins
add
jb
jo
outs
push
jb
outs
jae
outs
jb
add
sub
(bad)
loop
mov
sub
mov
or
(bad)
loop
mov
sub
stos
loop
stos
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
stos
loop
scas
loop
lods
loop
lods
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
stos
loop
mov
sub
lods
loop
lods
loop
scas
loop
lods
loop
scas
add
sub
loop
lods
loop
(bad)
loop
mov
sub
loop
(bad)
loop
lods
loop
mov
sub
lods
loop
scas
loop
lods
loop
scas
loop
lods
loop
mov
sub
(bad)
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
scas
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
mov
sub
or
lods
loop
scas
loop
stos
loop
mov
sub
stos
loop
lods
loop
stos
loop
stos
loop
lods
loop
lods
loop
scas
loop
stos
loop
lods
loop
mov
sub
(bad)
loop
mov
sub
lods
loop
lods
loop
stos
loop
stos
loop
mov
or
mov
sub
lods
loop
mov
sub
(bad)
loop
(bad)
loop
(bad)
loop
lods
loop
(bad)
loop
stos
loop
scas
loop
mov
sub
stos
loop
(bad)
loop
scas
loop
scas
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
scas
loop
scas
loop
scas
loop
mov
or
scas
loop
mov
sub
stos
loop
scas
loop
(bad)
loop
scas
loop
lods
loop
scas
loop
stos
loop
scas
loop
mov
sub
je
inc
jp
dec
addr16
je
xor
bound
push
je
pop
push
xor
imul
dec
xor
fs
add
ja
outs
push
inc
push
jne
dec
ja
inc
dec
add
push
inc
push
xor
inc
imul
inc
jbe
inc
js
je
dec
push
dec
ins
outs
ja
inc
jae
outs
jno
dec
inc
push
je
dec
add
inc
ss
push
push
inc
jbe
cmp
je
dec
bound
add
cmp
push
outs
push
jne
inc
bound
push
dec
inc
outs
jb
inc
jb
popa
je
inc
arpl
jo
outs
jb
push
pop
xor
push
push
xor
push
outs
xor
pop
add
push
jae
ins
push
inc
push
aaa
jb
push
push
movs
loope
mov
push
push
inc
push
push
inc
je
jb
bound
gs
sub
stos
loop
stos
loop
stos
loop
stos
loop
mov
sub
lods
loop
stos
loop
stos
loop
scas
loop
scas
loop
scas
loop
scas
loop
(bad)
loop
lods
loop
lods
loop
mov
or
stos
loop
lods
loop
mov
sub
mov
or
scas
loop
mov
sub
mov
sub
sub
scas
loop
mov
or
lods
loop
(bad)
loop
lods
loop
stos
loop
mov
sub
lods
loop
stos
loop
lods
loop
mov
sub
lods
loop
scas
loop
stos
loop
lods
loop
lods
loop
lods
loop
scas
loop
stos
loop
mov
or
stos
loop
scas
loop
mov
or
scas
loop
(bad)
loop
mov
sub
outs
popa
ss
cmp
outs
inc
dec
push
outs
aaa
inc
ins
ins
push
add
xor
push
push
push
inc
je
cmp
xor
jbe
add
outs
add
dec
pop
inc
cmp
inc
outs
ins
dec
jne
bound
inc
dec
add
jo
add
jbe
push
outs
dec
inc
imul
dec
push
add
and
inc
outs
outs
jbe
jb
imul
lods
loop
scas
loop
mov
sub
lods
loop
scas
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
scas
loop
stos
loop
lods
loop
lods
loop
scas
loop
lods
loop
scas
loop
scas
loop
lods
loop
lods
loop
lods
loop
mov
sub
loop
lods
loop
lods
loop
(bad)
loop
stos
loop
scas
loop
stos
loop
lods
loop
scas
loop
lods
loop
scas
add
jae
ins
jbe
inc
jbe
outs
je
jb
jae
loop
scas
loop
mov
or
loop
lods
loop
(bad)
loop
lods
loop
(bad)
loop
mov
sub
loop
mov
sub
stos
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
mov
sub
lods
loop
mov
sub
lods
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
mov
sub
sub
stos
loop
lods
loop
mov
sub
loop
mov
or
loop
stos
loop
mov
or
stos
loop
mov
or
lods
loop
scas
loop
stos
loop
stos
loop
lods
loop
mov
sub
lods
loop
stos
loop
stos
loop
lods
loop
lods
loop
stos
loop
stos
loop
scas
loop
stos
loop
stos
loop
scas
add
sub
mov
sub
lods
loop
mov
or
lods
loop
mov
or
loop
mov
or
stos
loop
scas
loop
mov
or
stos
loop
(bad)
loop
mov
or
stos
loop
lods
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
mov
sub
scas
add
or
stos
loop
stos
loop
scas
loop
mov
sub
lods
loop
stos
loop
lods
loop
scas
loop
stos
loop
scas
loop
stos
loop
(bad)
loop
(bad)
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
scas
loop
stos
loop
scas
loop
stos
loop
mov
sub
lods
loop
mov
sub
lods
loop
lods
loop
lods
loop
scas
loop
scas
add
je
dec
popa
ins
add
bound
push
dec
ins
jbe
ss
gs
push
imul
inc
jno
popa
ins
imul
ss
push
dec
dec
xor
push
js
xor
imul
push
pop
push
jbe
push
inc
ss
ja
cmp
dec
add
ss
push
pop
push
inc
outs
ins
dec
pop
push
outs
jbe
jne
inc
add
popa
jb
jae
imul
push
inc
push
cmp
data16
inc
cmp
jns
add
je
dec
gs
imul
cmp
push
xor
js
jae
arpl
dec
cmp
addr16
inc
ins
outs
arpl
imul
inc
xor
dec
push
ss
push
dec
dec
add
and
sub
loop
mov
sub
stos
loop
lods
loop
stos
loop
mov
or
lods
loop
stos
loop
stos
loop
stos
loop
lods
loop
lods
loop
mov
or
loop
scas
loop
stos
loop
lods
loop
stos
loop
scas
loop
stos
loop
mov
sub
loop
mov
sub
loop
mov
sub
jb
jbe
inc
jns
gs
loop
mov
sub
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
(bad)
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
scas
loop
stos
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
(bad)
loop
mov
sub
loop
mov
sub
loop
stos
loop
stos
loop
scas
loop
stos
loop
mov
sub
lods
loop
mov
or
addr16
inc
cmp
push
inc
inc
ins
dec
jno
xor
add
outs
dec
pop
xor
push
xor
je
jbe
push
xor
push
push
push
dec
push
jns
js
xor
inc
gs
jns
gs
imul
push
push
cmp
push
xor
dec
bound
dec
cmp
dec
imul
dec
inc
push
xor
xor
ins
push
outs
xor
ss
and
imul
jb
pusha
xor
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
dec
inc
jno
popa
je
bound
xor
loop
mov
sub
stos
loop
mov
or
scas
loop
scas
loop
stos
loop
(bad)
loop
lods
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
stos
loop
scas
loop
lods
loop
stos
loop
lods
loop
stos
loop
scas
loop
scas
loop
stos
loop
stos
loop
scas
loop
scas
loop
scas
loop
mov
sub
stos
loop
stos
loop
(bad)
loop
scas
loop
mov
sub
add
imul
push
jae
push
inc
arpl
dec
dec
gs
inc
add
bound
push
push
inc
gs
imul
push
add
dec
push
jno
dec
cmp
inc
inc
je
dec
add
dec
aaa
cmp
push
pop
inc
jns
outs
pop
dec
ins
inc
ja
xor
push
imul
xor
push
dec
xor
inc
gs
inc
xor
jns
inc
cmp
push
bound
jns
dec
pop
push
inc
inc
inc
add
jb
imul
je
add
popa
jb
loop
stos
loop
scas
loop
(bad)
loop
stos
loop
mov
sub
loop
(bad)
loop
scas
loop
scas
loop
scas
loop
scas
loop
mov
sub
stos
loop
mov
or
(bad)
loop
scas
loop
scas
loop
mov
sub
(bad)
loop
mov
sub
scas
loop
lods
loop
mov
sub
(bad)
loop
mov
sub
scas
loop
mov
or
mov
or
mov
or
mov
sub
loop
lods
loop
stos
loop
scas
loop
lods
loop
lods
loop
scas
loop
scas
loop
lods
loop
(bad)
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
stos
loop
(bad)
loop
mov
or
stos
loop
stos
loop
mov
sub
scas
add
or
loop
stos
loop
stos
loop
mov
or
loop
scas
loop
(bad)
loop
scas
loop
(bad)
loop
scas
loop
mov
sub
(bad)
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
scas
loop
mov
or
loop
lods
loop
lods
loop
stos
loop
lods
loop
scas
loop
lods
loop
scas
loop
scas
loop
mov
sub
imul
loop
mov
sub
mov
sub
loop
stos
loop
scas
loop
stos
loop
mov
or
stos
loop
lods
loop
scas
loop
lods
loop
stos
loop
lods
loop
lods
loop
lods
loop
mov
or
lods
loop
lods
loop
lods
loop
(bad)
loop
stos
loop
mov
sub
lods
loop
lods
loop
mov
sub
or
mov
sub
stos
loop
scas
loop
(bad)
loop
scas
loop
lods
loop
stos
loop
lods
loop
mov
sub
mov
sub
(bad)
loop
lods
loop
mov
or
loop
stos
loop
mov
sub
lods
loop
stos
loop
mov
sub
stos
loop
scas
loop
lods
loop
lods
loop
stos
loop
mov
sub
or
lods
loop
stos
loop
stos
loop
(bad)
loop
(bad)
loop
(bad)
loop
mov
or
loop
lods
loop
lods
loop
stos
loop
mov
sub
scas
loop
mov
sub
lods
loop
lods
loop
mov
sub
scas
loop
mov
sub
lods
loop
mov
sub
dec
ins
inc
inc
addr16
ins
xor
dec
jns
dec
xor
push
je
dec
dec
dec
push
dec
inc
imul
push
jb
cmp
js
cmp
push
inc
je
inc
jne
imul
inc
bound
push
imul
imul
inc
dec
dec
inc
push
js
xor
push
push
jne
inc
push
aaa
cmp
arpl
jb
pop
inc
inc
cmp
jb
inc
jae
inc
push
push
ss
add
and
sub
sub
sub
sub
js
gs
imul
jae
ins
bound
dec
inc
outs
jne
gs
bound
xor
inc
outs
outs
je
imul
addr16
dec
je
ins
add
ins
gs
je
gs
ins
add
je
dec
je
ins
add
ins
gs
outs
popa
fs
js
gs
imul
dec
ins
popa
addr16
outs
jb
popa
je
js
gs
imul
inc
jb
jo
outs
push
gs
imul
imul
outs
je
popa
outs
fs
gs
inc
gs
push
data16
cmp
cmp
imul
jae
inc
jb
jo
outs
push
je
gs
ins
add
jbe
inc
imul
je
add
je
xor
dec
inc
ins
outs
outs
gs
bound
loope
lods
loope
movs
add
sub
sub
sub
sub
and
stos
loop
stos
loop
scas
loop
mov
or
scas
loop
mov
sub
lods
loop
mov
or
scas
loop
mov
or
mov
sub
stos
loop
stos
loop
scas
loop
scas
loop
lods
loop
mov
sub
(bad)
loop
mov
sub
scas
loop
(bad)
loop
lods
loop
scas
loop
mov
sub
ins
imul
imul
jo
imul
loop
scas
loop
mov
sub
mov
sub
mov
sub
stos
loop
lods
loop
stos
loop
lods
loop
scas
loop
mov
sub
stos
loop
scas
loop
mov
or
(bad)
loop
scas
loop
(bad)
loop
stos
loop
mov
or
scas
loop
scas
loop
stos
loop
lods
loop
scas
loop
scas
loop
scas
loop
lods
loop
scas
add
or
lods
loop
lods
loop
stos
loop
lods
loop
scas
loop
lods
loop
mov
or
(bad)
loop
lods
loop
mov
or
stos
loop
scas
loop
lods
loop
(bad)
loop
mov
or
lods
loop
lods
loop
lods
loop
lods
loop
(bad)
loop
(bad)
loop
lods
loop
stos
loop
(bad)
loop
lods
loop
(bad)
loop
stos
loop
lods
loop
scas
loop
scas
loop
stos
loop
lods
loop
scas
add
or
lods
loop
stos
loop
lods
loop
lods
loop
lods
loop
scas
loop
scas
loop
scas
loop
lods
loop
mov
sub
stos
loop
lods
loop
(bad)
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
scas
loop
mov
sub
lods
loop
scas
loop
scas
loop
scas
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
stos
loop
scas
add
or
stos
loop
stos
loop
mov
sub
lods
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
stos
loop
mov
or
(bad)
loop
stos
loop
lods
loop
mov
or
stos
loop
(bad)
loop
stos
loop
scas
loop
scas
loop
lods
loop
mov
or
mov
sub
stos
loop
mov
sub
lods
loop
scas
add
arpl
jns
outs
outs
add
sub
loop
stos
loop
mov
sub
loop
mov
sub
loop
stos
loop
stos
loop
stos
loop
stos
loop
mov
sub
(bad)
loop
(bad)
loop
mov
or
loop
stos
loop
scas
loop
stos
loop
(bad)
loop
lods
loop
mov
or
lods
loop
scas
loop
scas
loop
stos
loop
stos
loop
(bad)
loop
scas
add
or
loop
lods
loop
stos
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
scas
loop
lods
loop
stos
loop
lods
loop
scas
loop
lods
loop
lods
loop
mov
or
loop
lods
loop
(bad)
loop
mov
sub
stos
loop
mov
sub
(bad)
loop
lods
loop
lods
loop
mov
or
stos
loop
(bad)
loop
scas
add
sub
lods
loop
lods
loop
(bad)
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
mov
sub
mov
or
loop
(bad)
loop
stos
loop
(bad)
loop
stos
loop
(bad)
loop
(bad)
loop
lods
loop
mov
sub
loop
scas
loop
mov
sub
lods
loop
(bad)
loop
mov
or
loop
scas
loop
scas
add
sub
lods
loop
lods
loop
stos
loop
lods
loop
stos
loop
mov
or
stos
loop
scas
loop
lods
loop
lods
loop
stos
loop
scas
loop
mov
sub
mov
or
stos
loop
scas
loop
mov
sub
stos
loop
scas
loop
lods
loop
scas
loop
scas
loop
lods
loop
stos
loop
stos
loop
mov
sub
(bad)
loop
lods
loop
(bad)
loop
(bad)
loop
scas
loop
scas
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
mov
or
stos
loop
scas
loop
mov
sub
lods
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
scas
loop
stos
loop
mov
sub
(bad)
loop
lods
loop
stos
loop
lods
loop
scas
loop
lods
loop
lods
loop
stos
loop
scas
loop
scas
add
sub
stos
loop
scas
loop
(bad)
loop
mov
sub
stos
loop
(bad)
loop
mov
sub
loop
mov
sub
lods
loop
stos
loop
stos
loop
(bad)
loop
mov
sub
lods
loop
stos
loop
scas
loop
mov
sub
mov
sub
scas
loop
lods
loop
lods
loop
scas
add
sub
loop
stos
loop
lods
loop
mov
sub
loop
stos
loop
stos
loop
scas
loop
lods
loop
lods
loop
scas
loop
stos
loop
scas
loop
scas
loop
stos
loop
mov
or
scas
loop
(bad)
loop
mov
sub
loop
mov
sub
stos
loop
stos
loop
(bad)
loop
scas
loop
lods
loop
stos
loop
scas
add
or
stos
loop
stos
loop
stos
loop
mov
or
stos
loop
lods
loop
lods
loop
mov
sub
mov
sub
(bad)
loop
lods
loop
mov
sub
scas
loop
mov
or
lods
loop
stos
loop
lods
loop
mov
or
stos
loop
mov
sub
loop
scas
loop
stos
loop
scas
add
sub
scas
loop
stos
loop
lods
loop
(bad)
loop
scas
loop
scas
loop
stos
loop
scas
loop
stos
loop
scas
loop
lods
loop
mov
sub
loop
scas
loop
(bad)
loop
scas
loop
lods
loop
(bad)
loop
mov
sub
lods
loop
mov
sub
stos
loop
(bad)
loop
mov
or
loop
stos
loop
stos
loop
(bad)
loop
scas
add
jae
popa
outs
popa
addr16
sub
loop
stos
loop
scas
loop
lods
loop
stos
loop
stos
loop
mov
sub
lods
loop
(bad)
loop
lods
loop
mov
sub
stos
loop
lods
loop
scas
loop
stos
loop
mov
sub
loop
stos
loop
scas
loop
mov
sub
lods
loop
lods
loop
mov
or
mov
sub
or
lods
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
lods
loop
mov
sub
(bad)
loop
mov
or
scas
loop
lods
loop
stos
loop
(bad)
loop
mov
sub
loop
lods
loop
mov
sub
stos
loop
stos
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
scas
loop
lods
loop
lods
loop
lods
loop
scas
add
jns
je
push
je
gs
ins
dec
outs
fs
or
loop
(bad)
loop
scas
loop
lods
loop
stos
loop
mov
sub
stos
loop
stos
loop
stos
loop
lods
loop
scas
loop
mov
sub
lods
loop
lods
loop
lods
loop
stos
loop
mov
or
loop
lods
loop
mov
or
lods
loop
lods
loop
scas
loop
mov
sub
stos
loop
scas
loop
scas
add
addr16
outs
je
jne
dec
push
popa
outs
addr16
js
gs
imul
loop
stos
loop
(bad)
loop
scas
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
scas
loop
stos
loop
lods
loop
mov
sub
lods
loop
scas
loop
stos
loop
mov
sub
mov
sub
loop
lods
loop
mov
sub
stos
loop
mov
sub
mov
sub
scas
loop
mov
sub
sub
lods
loop
mov
sub
mov
sub
stos
loop
mov
sub
lods
loop
scas
loop
stos
loop
mov
sub
loop
lods
loop
stos
loop
scas
loop
mov
sub
mov
sub
lods
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
scas
add
sub
stos
loop
mov
sub
lods
loop
lods
loop
scas
loop
lods
loop
(bad)
loop
scas
loop
stos
loop
mov
sub
scas
loop
mov
sub
scas
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
lods
loop
scas
loop
lods
loop
scas
loop
lods
loop
stos
loop
stos
loop
lods
loop
scas
loop
stos
loop
stos
loop
scas
add
sub
mov
sub
scas
loop
stos
loop
lods
loop
stos
loop
scas
loop
stos
loop
scas
loop
lods
loop
lods
loop
stos
loop
stos
loop
scas
loop
lods
loop
stos
loop
stos
loop
mov
sub
(bad)
loop
scas
loop
mov
sub
mov
sub
mov
sub
lods
loop
lods
loop
scas
add
jb
popa
je
js
gs
imul
loop
stos
loop
lods
loop
(bad)
loop
mov
sub
stos
loop
lods
loop
mov
sub
loop
mov
or
stos
loop
lods
loop
(bad)
loop
lods
loop
scas
loop
mov
sub
stos
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
scas
loop
stos
loop
scas
loop
stos
loop
stos
loop
lods
loop
lods
loop
lods
loop
scas
add
or
loop
stos
loop
mov
sub
mov
sub
stos
loop
lods
loop
lods
loop
mov
sub
loop
stos
loop
mov
sub
stos
loop
lods
loop
lods
loop
lods
loop
stos
loop
stos
loop
mov
or
lods
loop
lods
loop
stos
loop
lods
loop
lods
loop
scas
loop
scas
loop
stos
loop
scas
add
sub
lods
loop
lods
loop
scas
loop
lods
loop
lods
loop
stos
loop
scas
loop
mov
or
mov
or
(bad)
loop
stos
loop
lods
loop
(bad)
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
mov
sub
lods
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
scas
loop
mov
or
mov
sub
imul
dec
popa
outs
popa
addr16
sub
loop
mov
or
mov
sub
loop
lods
loop
stos
loop
scas
loop
stos
loop
mov
sub
stos
loop
(bad)
loop
stos
loop
mov
sub
mov
sub
scas
loop
stos
loop
lods
loop
mov
or
(bad)
loop
(bad)
loop
lods
loop
scas
add
sub
scas
loop
lods
loop
lods
loop
mov
sub
loop
stos
loop
mov
sub
stos
loop
(bad)
loop
mov
or
lods
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
(bad)
loop
stos
loop
scas
loop
lods
loop
(bad)
loop
scas
loop
scas
loop
mov
sub
mov
or
scas
add
sub
stos
loop
stos
loop
lods
loop
scas
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
scas
loop
stos
loop
mov
sub
(bad)
loop
stos
loop
lods
loop
stos
loop
scas
loop
lods
loop
mov
sub
stos
loop
mov
sub
loop
(bad)
loop
scas
loop
scas
loop
stos
loop
mov
or
stos
loop
lods
loop
scas
add
or
loop
mov
sub
lods
loop
(bad)
loop
(bad)
loop
lods
loop
mov
or
mov
sub
scas
loop
lods
loop
stos
loop
lods
loop
stos
loop
mov
sub
lods
loop
scas
loop
scas
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
stos
loop
stos
loop
scas
loop
(bad)
loop
scas
loop
stos
loop
scas
add
sub
stos
loop
stos
loop
(bad)
loop
stos
loop
mov
sub
scas
loop
stos
loop
lods
loop
stos
loop
lods
loop
stos
loop
stos
loop
stos
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
(bad)
loop
mov
sub
lods
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
scas
loop
mov
sub
stos
loop
stos
loop
mov
or
add
sub
stos
loop
stos
loop
scas
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
scas
loop
scas
loop
lods
loop
(bad)
loop
mov
sub
lods
loop
stos
loop
mov
or
mov
sub
stos
loop
scas
loop
scas
loop
mov
sub
lods
loop
stos
loop
scas
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
scas
loop
scas
add
sub
scas
loop
mov
or
lods
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
(bad)
loop
scas
loop
scas
loop
stos
loop
stos
loop
mov
sub
loop
scas
loop
lods
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
stos
loop
lods
loop
lods
loop
mov
sub
mov
sub
(bad)
loop
stos
loop
stos
loop
mov
or
mov
or
loop
lods
loop
lods
loop
mov
sub
scas
loop
scas
loop
lods
loop
stos
loop
stos
loop
scas
loop
(bad)
loop
scas
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
scas
loop
lods
loop
scas
loop
stos
loop
(bad)
loop
scas
loop
scas
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
lods
loop
scas
add
sub
stos
loop
lods
loop
(bad)
loop
scas
loop
mov
sub
stos
loop
stos
loop
scas
loop
stos
loop
scas
loop
stos
loop
stos
loop
stos
loop
stos
loop
lods
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
lods
loop
(bad)
loop
mov
or
(bad)
loop
mov
sub
stos
loop
stos
loop
mov
sub
add
inc
js
addr16
dec
push
xor
outs
xor
xor
dec
add
jae
push
pop
push
addr16
xor
gs
push
outs
ja
dec
jns
xor
push
pop
push
dec
fs
dec
jno
inc
jns
ins
inc
jno
addr16
push
jns
jb
jne
inc
push
push
imul
push
dec
xor
bound
jo
inc
data16
push
xor
pop
push
jo
xor
inc
add
jne
push
inc
push
imul
xor
xor
add
je
push
gs
add
xor
inc
aaa
xor
bound
pop
jno
inc
add
fs
dec
outs
popa
add
dec
addr16
push
popa
inc
ss
ins
cmp
pop
push
push
add
jae
ins
gs
popa
jns
jne
add
ins
dec
push
inc
push
gs
xor
imul
pop
add
je
push
push
jns
jbe
dec
push
jbe
imul
add
aaa
dec
gs
push
pop
jbe
xor
ja
xor
jb
inc
ins
popa
jae
xor
dec
outs
popa
add
dec
bound
push
push
cmp
dec
push
push
xor
add
je
add
je
gs
jo
popa
je
add
inc
xor
push
jno
pop
inc
xor
xor
cmp
add
jb
popa
je
push
cmp
jbe
push
jne
push
xor
push
jno
imul
imul
jns
inc
jb
popa
je
inc
imul
jns
ja
push
push
bound
push
jo
data16
jo
xor
cmp
inc
dec
pop
push
push
popa
push
push
imul
push
jae
add
ins
add
imul
xor
arpl
push
inc
dec
jae
jae
jo
xor
add
outs
push
jb
je
add
push
pop
xor
ss
outs
push
jae
dec
dec
pop
inc
push
add
xor
push
dec
xor
arpl
outs
jb
push
outs
jae
add
imul
push
ins
fs
jae
ins
inc
dec
dec
add
fs
imul
xor
jp
dec
push
xor
aaa
push
push
add
imul
outs
inc
inc
push
push
ins
push
dec
inc
js
xor
inc
push
cmp
je
outs
inc
jns
inc
data16
push
jae
je
dec
push
add
inc
pop
cmp
push
pop
jno
arpl
cmp
push
inc
popa
ins
ins
imul
ins
bound
push
xor
push
outs
outs
fs
push
arpl
dec
xor
add
push
inc
push
inc
outs
pop
arpl
inc
push
outs
inc
outs
inc
xor
popa
outs
jae
outs
jb
inc
imul
arpl
ja
arpl
outs
dec
xor
push
dec
jno
imul
arpl
outs
outs
push
jae
push
jbe
cmp
inc
add
outs
jbe
jb
add
popa
jae
ss
je
imul
inc
pop
push
outs
inc
dec
dec
outs
cmp
inc
push
inc
outs
jne
jp
xor
push
outs
jb
pop
outs
jbe
ins
je
inc
inc
ja
inc
xor
push
outs
push
je
dec
push
ins
pop
jo
ins
push
jns
jae
je
dec
gs
imul
push
inc
dec
outs
imul
inc
xor
js
cmp
outs
inc
jb
popa
jns
push
pop
arpl
push
outs
ja
inc
xor
aaa
jbe
xor
push
add
sub
and
je
jb
bound
gs
or
(bad)
loop
lods
loop
mov
or
stos
loop
lods
loop
lods
loop
scas
loop
(bad)
loop
(bad)
loop
scas
loop
mov
or
lods
loop
(bad)
loop
(bad)
loop
lods
loop
mov
or
(bad)
loop
lods
loop
stos
loop
lods
loop
mov
or
mov
or
loop
lods
loop
scas
loop
stos
loop
scas
loop
stos
loop
scas
add
sub
loop
mov
sub
scas
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
mov
sub
lods
loop
stos
loop
(bad)
loop
stos
loop
stos
loop
scas
loop
(bad)
loop
stos
loop
(bad)
loop
mov
sub
lods
loop
lods
loop
mov
sub
loop
(bad)
loop
stos
loop
scas
loop
lods
loop
scas
add
or
lods
loop
lods
loop
mov
or
loop
scas
loop
scas
loop
lods
loop
stos
loop
stos
loop
stos
loop
scas
loop
scas
loop
scas
loop
stos
loop
scas
loop
lods
loop
stos
loop
(bad)
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
mov
sub
scas
loop
lods
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
stos
loop
scas
loop
scas
add
push
gs
outs
cmp
inc
xor
xor
fs
ins
inc
add
outs
xor
outs
dec
inc
inc
cmp
imul
xor
outs
dec
arpl
push
outs
inc
xor
inc
inc
add
push
push
jno
outs
xor
push
dec
ss
push
popa
pop
add
je
xor
dec
xor
xor
dec
aaa
inc
jno
add
jae
inc
imul
push
push
jns
inc
je
jb
bound
gs
jae
addr16
je
jb
bound
add
je
imul
jb
gs
add
and
jne
outs
push
arpl
gs
outs
fs
sub
lods
loop
lods
loop
scas
loop
mov
or
loop
mov
sub
scas
loop
stos
loop
mov
sub
(bad)
loop
stos
loop
scas
loop
mov
sub
stos
loop
stos
loop
mov
sub
stos
loop
scas
loop
lods
loop
scas
loop
scas
loop
lods
loop
stos
loop
scas
loop
mov
or
scas
add
sub
stos
loop
lods
loop
lods
loop
scas
loop
lods
loop
scas
loop
mov
sub
stos
loop
lods
loop
mov
sub
loop
mov
sub
stos
loop
scas
loop
mov
sub
loop
stos
loop
stos
loop
stos
loop
lods
loop
stos
loop
stos
loop
lods
loop
stos
loop
scas
loop
stos
loop
stos
loop
scas
loop
scas
add
je
inc
jne
outs
push
arpl
gs
outs
fs
arpl
cmp
outs
jb
jbe
arpl
jne
add
imul
push
dec
push
popa
pop
add
inc
xor
dec
ss
ins
js
push
cmp
xor
pushw
outs
xor
data16
ss
popa
jae
push
xor
loope
mov
loop
(bad)
loop
stos
loop
lods
loop
mov
or
(bad)
loop
stos
loop
scas
loop
stos
loop
(bad)
loop
(bad)
loop
mov
or
(bad)
loop
scas
loop
lods
loop
scas
loop
mov
sub
scas
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
mov
sub
stos
loop
scas
loop
(bad)
loop
stos
loop
mov
sub
scas
loop
stos
loop
scas
add
bound
outs
outs
cmp
push
push
data16
add
inc
dec
push
inc
outs
push
push
ins
inc
inc
dec
pop
inc
ja
outs
ins
add
cmp
ins
outs
push
pop
inc
push
ja
push
add
inc
push
jno
outs
xor
jbe
outs
cmp
pop
popa
ss
sub
stos
loop
mov
or
scas
loop
scas
loop
lods
loop
lods
loop
scas
loop
stos
loop
stos
loop
lods
loop
stos
loop
lods
loop
stos
loop
mov
or
scas
loop
scas
loop
stos
loop
stos
loop
lods
loop
scas
loop
mov
sub
loop
lods
loop
mov
or
loop
mov
sub
add
or
loop
(bad)
loop
scas
loop
scas
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
stos
loop
lods
loop
scas
loop
lods
loop
stos
loop
lods
loop
lods
loop
lods
loop
mov
sub
scas
loop
(bad)
loop
mov
or
loop
lods
loop
mov
sub
stos
loop
scas
loop
scas
loop
(bad)
loop
lods
loop
scas
loop
stos
loop
scas
add
dec
inc
ins
aaa
outs
jae
aaa
dec
inc
outs
aaa
cmp
jbe
add
gs
je
inc
outs
arpl
jo
outs
jb
jne
dec
bound
outs
push
jae
inc
ins
dec
ja
push
imul
inc
outs
arpl
dec
dec
dec
xor
pop
xor
push
push
dec
inc
outs
pop
inc
imul
ins
xor
inc
push
dec
jae
dec
outs
dec
ins
dec
dec
pop
cmp
add
addr16
push
outs
inc
dec
ja
ins
inc
jo
data16
ins
aaa
add
dec
inc
je
outs
bound
push
ss
imul
xor
outs
dec
push
inc
dec
popa
push
popa
jb
inc
push
dec
add
and
push
gs
inc
outs
ins
dec
je
push
dec
xor
addr16
imul
pop
inc
outs
inc
xor
js
imul
pop
dec
bound
push
dec
xor
push
push
xor
jo
outs
imul
loop
mov
sub
stos
loop
mov
sub
scas
loop
mov
or
scas
loop
(bad)
loop
(bad)
loop
stos
loop
mov
sub
lods
loop
(bad)
loop
scas
loop
scas
loop
lods
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
mov
sub
lods
loop
scas
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
scas
add
pop
imul
jne
inc
jns
addr16
inc
inc
xor
inc
push
ss
outs
fs
je
xor
dec
pop
ja
inc
inc
xor
js
outs
dec
arpl
xor
dec
inc
dec
popa
outs
add
pop
jae
outs
xor
inc
push
inc
push
xor
loope
mov
loop
mov
or
mov
sub
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
scas
loop
(bad)
loop
stos
loop
(bad)
loop
scas
loop
(bad)
loop
lods
loop
lods
loop
(bad)
loop
mov
or
stos
loop
scas
loop
stos
loop
lods
loop
mov
or
stos
loop
(bad)
loop
stos
loop
(bad)
loop
scas
loop
mov
sub
lods
loop
stos
loop
scas
add
inc
xor
outs
ins
ss
push
push
pop
push
imul
xor
push
push
outs
push
push
xor
push
jae
push
add
push
dec
xor
jae
outs
imul
inc
add
and
push
gs
popa
ins
imul
push
jns
je
ins
cs
jne
je
ins
gs
gs
popa
ins
imul
add
sub
mov
sub
lods
loop
scas
loop
stos
loop
stos
loop
scas
loop
lods
loop
scas
loop
scas
loop
stos
loop
mov
or
loop
mov
sub
(bad)
loop
scas
loop
stos
loop
lods
loop
mov
sub
stos
loop
mov
sub
stos
loop
(bad)
loop
mov
sub
lods
loop
scas
add
sub
lods
loop
scas
loop
mov
sub
scas
loop
lods
loop
lods
loop
stos
loop
mov
sub
loop
mov
or
lods
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
mov
sub
loop
stos
loop
mov
sub
loop
stos
loop
lods
loop
(bad)
loop
lods
loop
(bad)
loop
scas
add
sub
stos
loop
stos
loop
mov
or
lods
loop
stos
loop
scas
loop
stos
loop
mov
sub
stos
loop
(bad)
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
(bad)
loop
mov
or
scas
loop
stos
loop
stos
loop
stos
loop
lods
loop
scas
loop
stos
loop
mov
sub
scas
loop
stos
loop
stos
loop
stos
loop
scas
add
sub
stos
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
mov
or
scas
loop
stos
loop
mov
or
mov
sub
(bad)
loop
stos
loop
(bad)
loop
mov
or
mov
or
loop
lods
loop
scas
loop
(bad)
loop
lods
loop
(bad)
loop
stos
loop
stos
loop
lods
loop
stos
loop
stos
loop
scas
add
sub
(bad)
loop
mov
sub
mov
sub
stos
loop
stos
loop
stos
loop
scas
loop
lods
loop
mov
sub
stos
loop
lods
loop
mov
sub
lods
loop
scas
loop
lods
loop
scas
loop
lods
loop
lods
loop
(bad)
loop
mov
sub
scas
loop
stos
loop
(bad)
loop
stos
loop
scas
add
jo
dec
jo
popa
inc
push
xor
jae
gs
add
xor
outs
outs
imul
inc
jbe
cmp
inc
jae
fs
outs
xor
jbe
inc
inc
dec
jo
add
imul
outs
gs
inc
push
xor
dec
aaa
outs
cmp
push
xor
jbe
jns
fs
push
gs
xor
push
jb
ins
add
gs
dec
cmp
ss
popa
jae
xor
ins
add
outs
ja
jb
jbe
push
xor
outs
push
pop
push
bound
jo
push
imul
inc
push
ins
push
cmp
push
outs
jno
push
inc
dec
xor
dec
jae
jae
add
jbe
fs
arpl
popa
arpl
jns
loope
movs
loope
mov
loop
stos
loop
mov
sub
stos
loop
lods
loop
lods
loop
stos
loop
lods
loop
scas
loop
scas
loop
(bad)
loop
(bad)
loop
mov
sub
loop
lods
loop
mov
sub
stos
loop
lods
loop
stos
loop
lods
loop
mov
sub
loop
(bad)
loop
stos
loop
scas
loop
lods
loop
stos
loop
mov
sub
(bad)
loop
scas
add
or
loop
lods
loop
(bad)
loop
lods
loop
mov
sub
scas
loop
(bad)
loop
mov
sub
(bad)
loop
scas
loop
scas
loop
lods
loop
(bad)
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
scas
loop
lods
loop
mov
or
stos
loop
lods
loop
lods
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
scas
loop
mov
sub
or
lods
loop
(bad)
loop
scas
loop
scas
loop
lods
loop
stos
loop
(bad)
loop
mov
or
lods
loop
(bad)
loop
(bad)
loop
lods
loop
mov
or
stos
loop
lods
loop
lods
loop
stos
loop
mov
sub
mov
sub
loop
lods
loop
lods
loop
scas
loop
lods
loop
stos
loop
mov
sub
lods
loop
scas
add
sub
stos
loop
stos
loop
lods
loop
(bad)
loop
mov
sub
mov
sub
stos
loop
mov
sub
scas
loop
scas
loop
lods
loop
mov
sub
lods
loop
mov
sub
lods
loop
lods
loop
mov
sub
(bad)
loop
scas
loop
stos
loop
scas
loop
scas
add
push
jne
cmp
xor
dec
inc
add
inc
ss
outs
jo
push
jns
cmp
ins
push
push
add
popa
bound
imul
jns
gs
push
jb
xor
pop
outs
push
dec
outs
push
bound
jbe
pop
gs
add
pop
dec
outs
gs
popa
ins
imul
inc
push
outs
inc
cmp
imul
cmp
add
je
popa
outs
imul
jae
jne
arpl
je
gs
ins
add
outs
ins
jne
ss
popa
inc
inc
je
fs
pop
add
je
inc
jne
jb
outs
je
outs
ins
popa
imul
xor
aaa
ins
xor
push
inc
ins
jb
add
and
and
and
add
and
add
and
add
imul
jne
add
mov
or
rol
in
adc
mov
add
mov
pop
push
sbb
mov
mov
pop
jg
aad
cmp
push
sbb
sub
pop
add
or
add
add
pop
or
adc
adc
or
or
push
add
sbb
pop
add
adc
or
add
sbb
pop
add
pop
add
add
and
add
or
sub
or
or
add
or
adc
add
push
or
add
xor
add
sbb
add
add
add
sbb
adc
sbb
adc
add
add
add
adc
add
adc
add
add
or
add
add
adc
pop
or
xor
or
or
or
push
and
add
add
sbb
sbb
pop
push
or
or
or
or
or
push
pop
or
push
add
sbb
adc
add
add
cmp
sbb
add
push
push
or
add
adc
add
or
add
adc
adc
add
add
push
add
add
sub
sbb
and
sbb
sbb
sbb
sbb
add
add
add
add
add
sbb
add
add
add
add
and
add
add
sbb
and
or
add
sbb
and
or
add
sbb
and
or
add
sbb
or
or
add
or
add
add
add
or
and
add
or
adc
sbb
or
add
or
pop
add
or
or
pop
push
or
or
or
or
add
sbb
adc
add
adc
pop
add
or
add
dec
or
pop
or
or
or
or
add
or
push
adc
add
adc
push
adc
push
sbb
adc
add
add
push
adc
and
add
add
or
pop
add
or
and
add
dec
adc
pop
adc
sub
or
or
or
or
or
or
and
adc
dec
or
or
or
or
or
or
or
add
or
or
or
add
add
or
add
add
add
or
add
sbb
or
sbb
or
add
sbb
sbb
or
add
add
or
push
add
add
or
push
adc
push
and
or
adc
add
sbb
add
or
or
add
adc
or
adc
or
add
add
and
add
dec
add
or
add
add
or
add
or
pop
and
add
add
sbb
or
or
or
or
or
or
add
push
add
add
add
add
add
or
sbb
or
sbb
or
add
adc
add
or
pop
or
adc
sbb
add
add
or
add
add
adc
popa
push
add
sbb
and
or
add
add
add
pop
add
add
or
add
gs
add
add
push
add
add
push
push
add
add
or
sbb
or
or
add
add
add
add
add
adc
gs
pop
add
sbb
add
imul
sbb
pop
or
or
or
sbb
or
or
add
push
add
ins
or
or
add
push
add
add
add
add
add
jno
ins
pop
add
add
jne
jns
and
add
ins
push
add
add
ins
add
jns
pop
or
adc
or
or
or
add
adc
adc
or
adc
push
or
or
or
add
or
or
pop
or
or
or
or
add
or
add
add
add
adc
add
push
or
add
dec
add
add
or
or
push
add
sbb
or
sysret
or
or
or
sbb
or
or
add
add
push
add
pop
or
adc
or
or
add
push
push
add
add
pop
or
sbb
or
or
or
add
adc
add
or
or
or
sbb
or
add
push
add
add
or
adc
add
push
add
add
add
add
add
push
adc
adc
add
add
imul
adc
and
push
add
add
push
add
adc
or
or
or
sbb
or
add
or
add
add
pop
or
adc
or
or
add
adc
pop
or
sbb
or
or
or
add
adc
push
or
add
add
add
push
or
add
push
add
sbb
or
add
cdq
or
add
or
add
adc
add
mov
and
add
sbb
adc
adc
and
add
sub
sbb
pop
or
adc
or
or
add
push
add
push
push
sysret
or
adc
or
or
add
adc
push
push
add
add
xor
or
add
adc
add
add
or
or
mov
adc
pop
add
add
push
add
or
push
add
jno
push
adc
push
or
push
adc
pop
or
cmp
add
add
push
add
push
or
or
or
sbb
or
add
push
add
add
add
or
or
or
sbb
or
add
or
add
add
add
push
adc
add
push
push
add
or
or
or
add
add
push
pop
or
or
or
or
or
add
or
add
or
add
or
or
or
push
adc
push
adc
pop
or
push
add
or
or
add
add
push
add
cdq
add
mov
adc
push
adc
add
sbb
or
add
add
or
add
push
push
add
adc
sbb
or
or
push
or
add
adc
adc
or
adc
add
add
add
pop
pop
sbb
add
add
adc
add
push
sbb
add
adc
adc
pop
or
or
or
or
or
or
add
or
adc
add
adc
add
add
or
adc
add
or
sbb
or
add
add
or
adc
sbb
adc
add
or
adc
push
sbb
sbb
sbb
adc
add
dec
adc
or
or
or
or
or
or
or
or
or
add
push
add
add
and
adc
adc
add
push
pop
and
add
add
add
rol
add
add
adc
adc
or
or
xor
or
or
add
lea
add
adc
add
adc
sbb
add
add
add
or
or
mov
imul
or
add
add
imul
add
add
push
or
or
or
or
add
pop
pop
add
add
popa
adc
pop
or
or
or
or
add
or
test
pop
or
and
or
or
or
or
or
lds
adc
adc
add
or
or
or
or
or
or
add
adc
xor
or
sbb
or
add
or
or
add
adc
add
cmp
or
push
sbb
or
or
adc
add
adc
add
jne
jns
pop
add
or
add
xor
add
add
sbb
xor
or
or
adc
or
or
or
adc
and
sbb
and
sbb
or
or
or
or
or
or
or
add
or
or
xor
sbb
or
or
add
xor
or
add
adc
add
or
or
push
or
or
or
add
add
or
add
adc
push
add
add
push
or
or
or
or
add
or
or
add
or
or
adc
or
or
or
or
or
or
or
or
sbb
or
sbb
add
sysret
or
or
or
or
sbb
or
add
adc
or
add
or
sbb
or
and
add
push
add
push
or
add
pop
or
adc
or
or
add
push
sbb
or
add
adc
or
or
add
add
or
pop
or
or
or
or
add
push
add
add
or
add
add
add
or
add
adc
add
push
or
pop
adc
sbb
add
adc
add
adc
push
add
push
push
sbb
push
add
adc
add
push
push
push
add
add
push
push
add
adc
add
adc
add
add
adc
add
adc
add
icebp
add
sbb
and
add
dec
adc
or
add
dec
adc
add
and
and
add
or
add
cmp
add
add
adc
and
mov
add
add
sub
adc
add
add
adc
add
add
sbb
push
push
add
sbb
push
or
and
add
xor
add
sbb
push
or
add
or
add
sbb
or
add
add
add
or
adc
add
push
add
or
add
adc
pop
or
or
sbb
or
add
or
add
or
add
dec
or
add
adc
add
add
adc
ins
add
add
add
adc
add
push
add
or
add
push
add
add
add
add
and
add
adc
add
or
xor
push
or
add
xor
sbb
adc
add
mov
and
add
add
add
adc
or
or
add
gs
add
add
add
adc
add
add
or
or
or
adc
add
push
add
add
or
add
or
sbb
or
add
push
add
add
pop
add
adc
gs
add
sbb
add
or
sbb
and
sbb
add
or
or
adc
sub
add
adc
xor
or
add
push
add
add
push
or
add
dec
push
add
add
push
sysret
or
adc
sbb
or
add
adc
push
or
add
adc
pop
add
adc
popa
push
add
add
jne
and
adc
sub
add
xor
xor
sub
sub
sub
cmp
popa
xor
popa
data16
hlt
or
push
daa
or
add
add
add
or
add
pop
inc
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
