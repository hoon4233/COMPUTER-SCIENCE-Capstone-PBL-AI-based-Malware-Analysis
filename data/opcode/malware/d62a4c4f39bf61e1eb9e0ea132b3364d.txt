jg
pop
loopne
cmp
imul
lds
arpl
dec
cmp
push
sbb
cmp
cmp
jno
pop
pop
sbb
mov
sbb
push
jge
imul
imul
dec
outs
xchg
inc
arpl
outs
adc
dec
jne
cmp
pop
cmp
cmp
call
cmp
out
std
push
repnz
dec
push
sbb
mov
inc
xor
stos
dec
dec
cmp
je
add
mov
push
out
inc
div
dec
push
inc
xor
inc
nop
xchg
fucom
ds
sti
call
xchg
inc
lds
enter
imul
mov
or
out
sub
sbb
adc
or
xchg
cs
xchg
pop
xchg
in
mov
xchg
(bad)
pop
in
cmp
popf
out
inc
call
cmp
ins
push
sbb
add
pop
xchg
push
xchg
imul
test
xchg
sbb
pop
(bad)
pop
sbb
or
mov
cmp
dec
push
sbb
jae
test
pop
(bad)
pop
sbb
(bad)
pop
sbb
jae
test
xor
adc
ss
pop
fstp
data16
push
dec
and
int
sbb
cmp
popf
frstor
adc
dec
xchg
xchg
sub
dec
in
xchg
bound
adc
jp
lock
cmc
push
add
loope
call
mov
or
or
adc
push
jae
cmps
popf
imul
arpl
ins
dec
and
fisubr
scas
pop
imul
imul
add
push
sbb
mov
adc
dec
push
sbb
cmp
xchg
jnp
test
pop
dec
push
call
pop
sbb
int
sbb
imul
inc
xor
repnz
test
and
push
dec
cmps
sbb
push
repnz
test
xchg
scas
inc
mov
sbb
sbb
(bad)
sti
jae
add
jnp
push
dec
vmptrst
sbb
push
call
jnp
cmp
adc
dec
int
sbb
add
pop
imul
test
fisttp
icebp
cs
ss
dec
(bad)
pop
sbb
xchg
cmp
(bad)
pop
sbb
int
add
xchg
push
xchg
push
not
dec
push
shr
dec
push
fisubr
xchg
cld
rcl
sbb
mov
imul
cmp
cmps
jp
aas
xchg
loope
test
loopne
loop
je
add
sbb
dec
je
add
sbb
es
dec
test
dec
push
nop
test
and
imul
loop
repnz
xchg
mov
fsubrp
mov
ins
outs
jg
repnz
xchg
out
mov
jbe
daa
dec
push
xchg
out
mov
out
push
dec
icebp
cmp
sbb
mov
dec
icebp
outs
cmp
sbb
je
add
mov
sub
std
loopne
cmp
popf
frstor
loope
imul
pop
mov
ja
fmul
shl
stc
nop
out
cmps
lods
out
(bad)
fldenv
fidivr
(bad)
stos
adc
mov
pop
dec
dec
cmp
cmc
das
bound
test
sbb
or
dec
out
loop
add
imul
imul
imul
icebp
(bad)
aaa
push
sbb
mov
sbb
push
pop
mov
daa
xchg
cmp
out
pop
loope
ja
push
out
pop
loope
xchg
cmps
fldenv
dec
xchg
fist
push
sbb
push
pop
mov
psubsb
out
push
dec
cmps
sbb
push
repnz
iret
fst
dec
push
sub
lea
mov
repnz
dec
loop
mov
pushf
test
fst
dec
sbb
add
ins
addr16
adc
(bad)
fcom
popf
cmp
sub
push
loope
jg
imul
mov
in
push
sbb
fsub
push
mov
pop
adc
adc
movs
adc
stos
push
cmc
adc
mov
(bad)
loop
jmp
sbb
dec
cmp
mov
popf
pop
or
jg
nop
ds
sbb
cli
pop
sbb
sub
sbb
sub
sbb
or
nop
test
mov
sbb
cli
pop
sbb
cmc
pop
loopne
loop
xchg
lds
lock
lock
push
sahf
imul
(bad)
out
call
push
ins
xchg
ja
ins
jnp
pop
in
loopne
push
and
mov
loop
push
mul
inc
imul
xchg
(bad)
pop
jmp
loop
popf
rcl
imul
mov
or
xchg
cs
xchg
fsubr
xchg
pop
jmp
pop
sbb
mov
pop
xchg
inc
pushf
bound
push
sbb
inc
shr
pop
push
sbb
and
dec
cmp
imul
mov
out
jnp
dec
push
lds
nop
test
mov
out
mov
ins
fisttp
xchg
cs
xchg
fsubr
xchg
pop
jmp
pop
sbb
mov
fistp
dec
loope
imul
nop
xchg
addr16
xchg
ds
xchg
or
push
loope
sub
shl
fwait
in
mov
nop
out
mov
out
(bad)
fwait
in
xchg
mov
out
into
mov
out
(bad)
fwait
jmp
out
mov
out
mov
sbb
dec
loope
imul
sbb
loope
xor
(bad)
sti
call
inc
adc
push
xor
mov
pushf
sub
nop
cs
pop
xchg
jg
repnz
cmps
sub
dec
xchg
fs
int
or
nop
stos
mov
fnstsw
je
aam
mov
mov
jg
pop
and
inc
fcomp
xchg
(bad)
pop
in
loop
out
out
push
mov
pop
in
adc
test
xchg
cld
cmp
dec
dec
cmp
inc
adc
inc
mov
xchg
cs
fistp
xchg
dec
xchg
jg
repnz
cmps
shr
dec
xchg
fs
int
or
nop
stos
mov
fnstsw
je
aam
mov
mov
jg
pop
and
js
sbb
xchg
pop
xchg
mov
ins
fisttp
xchg
cs
fcomp
xor
dec
dec
cmp
lds
lods
or
popf
push
mov
xchg
fistp
xchg
dec
xchg
mov
ins
fisttp
nop
pushf
movs
add
outs
jbe
jecxz
mov
mov
ins
outs
jg
pop
add
mov
(bad)
cwde
push
mov
pop
imul
xor
inc
shr
push
dec
dec
cmp
imul
call
xchg
(bad)
(bad)
outs
cmp
adc
imul
pop
xchg
mov
nop
cs
inc
addr16
pop
sbb
mov
xchg
ss
dec
cmp
mov
fisttp
pop
nop
xchg
mov
xchg
fidiv
inc
shr
push
dec
dec
cmp
inc
adc
sub
xchg
jae
dec
jmp
nop
lods
mov
adc
(bad)
fdiv
and
jno
push
push
sbb
sbb
ins
arpl
jae
cmps
std
push
dec
cmps
pop
bound
out
mov
pop
loope
mov
sbb
xor
inc
shr
sbb
push
cmps
sbb
inc
jmp
and
in
pop
sbb
adc
sbb
lds
out
inc
xchg
pop
outs
mov
sbb
arpl
sbb
pop
lds
out
inc
xchg
loope
test
fyl2x
mov
push
sbb
inc
shr
mov
xchg
ins
arpl
pop
and
outs
xchg
loope
mov
fsubrp
push
push
jae
cmps
mov
pop
fwait
push
jbe
mov
icebp
loop
push
sbb
lea
ficomp
pop
ret
ficom
push
sbb
fld
je
out
out
dec
sbb
sbb
(bad)
stos
inc
lds
test
out
call
pop
sbb
dec
loope
loopne
loope
jle
push
sbb
fstp
imul
mov
sbb
or
adc
push
cmc
push
loop
pop
loope
mov
outs
mov
out
jg
inc
xor
(bad)
sti
mov
cmp
sbb
dec
dec
rol
ins
mov
mov
fstp
imul
call
mov
and
inc
adc
loopne
adc
jmp
and
in
pop
sbb
push
mov
cmp
cs
inc
lahf
repnz
push
sbb
imul
xchg
mov
sbb
retf
jmp
xchg
mov
out
inc
test
es
stc
sub
pushf
mov
xor
frstor
loope
imul
call
dec
push
lock
dec
push
sbb
mov
lahf
jmp
jmp
dec
dec
xchg
push
mov
add
push
mov
pop
sbb
arpl
imul
push
push
call
stos
pop
imul
nop
mov
std
nop
out
xchg
loope
xchg
(bad)
fucom
outs
xor
in
push
dec
bound
call
dec
push
mov
loop
out
test
jo
imul
xchg
cmp
(bad)
sub
or
sbb
pop
loope
or
mov
out
out
dec
out
(bad)
call
push
sbb
mov
outs
sbb
nop
cs
rcr
out
lea
dec
add
mov
clc
sub
pop
fwait
push
xchg
and
push
nop
cs
fstp
jns
rol
(bad)
retf
ret
mov
mov
cmp
es
ficomp
sbb
pop
in
mov
lods
dec
bound
imul
addr16
lds
in
cwde
inc
dec
push
call
push
retf
pop
imul
sub
xchg
pop
lahf
ja
loope
int3
aaa
out
mov
cmp
in
pop
sbb
pop
adc
jmp
out
mov
fidiv
inc
shr
mov
mov
cwde
test
call
cmp
dec
push
call
sahf
and
sti
dec
push
sbb
imul
dec
push
nop
cwde
(bad)
out
mov
pop
loope
mov
popa
loop
aaa
shl
out
push
adc
sbb
sub
jb
ins
outs
int
in
lds
out
sbb
mov
sbb
call
xchg
pop
xchg
(bad)
(bad)
outs
out
mov
ja
mov
adc
mov
call
dec
mov
fisttp
repnz
out
xchg
(bad)
fstp
mov
out
mov
pop
loope
mov
add
push
mov
xchg
pop
arpl
sbb
push
ja
sbb
call
mov
loope
mov
cs
sahf
and
pop
mov
out
sub
sbb
xor
sbb
inc
loope
arpl
sub
test
dec
push
repnz
(bad)
imul
outs
and
jae
es
sbb
jbe
cmc
nop
dec
and
sbb
or
jae
and
jae
push
imul
add
push
xchg
cs
xchg
fsubr
xchg
pop
jmp
pop
sbb
mov
fild
dec
xchg
push
lahf
pop
dec
out
inc
loope
xchg
cmps
popa
jbe
dec
je
out
jmp
or
out
mov
jae
dec
push
nop
xchg
mov
xchg
pop
fwait
(bad)
(bad)
push
mov
jecxz
dec
push
inc
xor
(bad)
sti
mov
sub
imul
pop
je
lods
outs
imul
loop
stos
out
mov
(bad)
lea
adc
fcomp
es
stc
sub
jnp
dec
push
nop
out
mov
fst
in
xchg
pop
pop
fldenv
adc
xchg
rcr
fiadd
dec
div
sbb
icebp
push
and
sbb
retf
shl
xchg
mov
shr
ficom
xchg
pushf
scas
mov
out
cmps
hlt
loop
mov
frstor
and
pop
test
out
mov
fwait
test
test
fwait
stc
xchg
mov
dec
retf
pop
imul
and
pop
fstp
in
xchg
rcr
out
lea
out
es
sub
pushf
mov
es
jae
sbb
xchg
pop
xchg
inc
ficom
out
jns
sbb
fnsave
out
mov
out
push
mov
dec
loopne
loope
adc
pop
in
mov
pushf
imul
pop
imul
icebp
xchg
mov
out
mov
nop
lods
or
out
retf
shl
xchg
mov
dec
retf
or
nop
mov
(bad)
nop
test
fwait
cmps
xchg
mov
dec
retf
pop
imul
and
pop
fldenv
push
imul
(bad)
lock
xchg
dec
adc
jmp
jecxz
xchg
mov
push
out
rcr
sbb
pop
jno
scas
pop
sbb
retf
jecxz
xchg
mov
icebp
into
mov
adc
int
loopne
jmp
scas
out
call
loope
imul
push
dec
push
sbb
mov
cmp
fwait
in
mov
dec
add
mov
jbe
dec
popf
frstor
test
out
dec
sbb
nop
call
mov
call
adc
(bad)
into
cmp
dec
je
add
dec
mov
popf
mov
call
push
ins
dec
and
jno
scas
pop
sbb
repz
xchg
mov
icebp
mov
call
mov
sbb
inc
fstp
dec
push
sbb
dec
jbe
mov
jno
out
pop
sbb
int
adc
imul
jae
cmps
stc
sub
movs
xchg
mov
out
cmps
aad
xchg
mov
frstor
loope
imul
lods
retf
mov
xchg
mov
sbb
je
add
(bad)
pop
imul
mov
sahf
mov
call
push
ins
dec
and
jno
scas
pop
sbb
repz
xchg
mov
icebp
loop
loope
call
mov
sbb
inc
fstp
dec
push
sbb
dec
jbe
mov
jno
out
pop
sbb
int
adc
imul
jae
cmps
stc
sub
movs
xchg
mov
out
cmps
pop
in
xchg
mov
frstor
loope
imul
lods
retf
mov
xchg
mov
sbb
xchg
rcr
out
lea
(bad)
pop
imul
mov
sahf
mov
call
push
ins
popa
mov
sbb
push
jae
es
stc
sub
dec
retf
nop
call
and
mov
sbb
inc
fstp
dec
push
sbb
dec
jbe
mov
jno
out
pop
sbb
int
adc
imul
jae
cmps
stc
sub
movs
xchg
mov
out
cmps
mov
xchg
mov
frstor
loope
imul
add
imul
sbb
mov
inc
and
xchg
dec
push
ins
popa
mov
sbb
push
cwde
cwde
add
mov
mov
sbb
pop
fcomp
cli
pop
sbb
fwait
in
mov
dec
and
out
pop
cmc
or
dec
pop
mov
enter
imul
sub
mov
out
dec
test
cwde
or
sbb
fwait
rcl
out
mov
xchg
push
mov
inc
loop
loop
stos
inc
fwait
out
outs
dec
push
xchg
out
mul
out
push
xchg
pushf
mov
loopne
cmp
es
outs
xchg
pop
xchg
mov
call
sbb
imul
int
mov
sbb
mov
popf
mov
imul
mov
shr
inc
xor
sbb
mov
push
imul
sbb
push
xchg
out
(bad)
loope
xchg
push
xchg
pushf
repz
out
lds
dec
loopne
loope
ja
(bad)
out
mov
fwait
popf
xchg
mov
nop
test
fwait
int
mov
dec
add
call
lds
dec
loopne
loope
push
dec
push
sbb
pop
in
mov
pushf
push
dec
push
sbb
retf
into
out
mov
xchg
out
call
xchg
fxch
sbb
xchg
pop
xchg
mov
call
sbb
imul
icebp
xchg
mov
dec
loopne
into
out
mov
xchg
push
mov
and
or
adc
dec
push
cwde
cwde
mov
xor
push
xchg
pushf
mov
loopne
cmp
es
jbe
pop
xchg
idiv
jnp
dec
jmp
out
mov
(bad)
xor
sbb
sbb
xchg
pushf
(bad)
mov
out
lds
dec
loopne
loope
dec
(bad)
pop
in
xchg
das
shl
popf
fs
dec
adc
movs
outs
jge
dec
popf
mov
imul
jno
out
pop
sbb
retf
jecxz
xchg
mov
icebp
pop
and
sbb
mov
call
neg
push
cmps
cmc
jb
dec
lahf
jmp
repnz
mov
pushf
xchg
mov
out
es
sub
pushf
xchg
mov
out
cmps
and
dec
popf
fnstsw
(bad)
xor
retf
xchg
out
mov
sbb
retf
repnz
mov
pushf
sti
mov
out
retf
and
mov
xchg
faddp
loope
xchg
int
or
test
push
jmp
loope
xchg
(bad)
ror
sbb
mov
out
sbb
nop
cs
fldenv
sbb
popf
mov
imul
out
dec
push
xchg
out
jmp
mov
xchg
out
shl
out
push
xchg
and
push
nop
cs
fldenv
sbb
lahf
jmp
mov
xchg
out
jmp
xchg
sbb
cs
fldenv
sbb
popf
mov
imul
sbb
pop
xchg
rcr
fimul
mov
sbb
fwait
mov
mov
nop
out
ss
xchg
ret
fwait
cdq
xchg
mov
dec
out
outs
out
mov
cmc
jnp
stc
mov
cwde
jmp
lods
sbb
push
nop
mov
sbb
imul
loopne
mov
xchg
push
mov
ins
loop
loop
sbb
push
sbb
loopne
loop
popf
fs
dec
adc
jmp
out
mov
xchg
out
retf
xchg
push
jbe
mov
xchg
out
into
loope
xchg
push
xchg
and
push
nop
cs
fldenv
sbb
popf
movs
out
mov
out
inc
call
cs
xchg
push
je
xchg
sti
jmp
mov
out
lds
out
outs
xchg
pop
xchg
mov
call
push
sbb
popf
movs
or
fwait
aam
dec
push
call
adc
out
inc
out
mov
out
es
xchg
cmps
popa
jmp
fstp
repz
out
mov
fcmove
inc
push
sbb
repz
out
mov
push
out
rcr
imul
sbb
push
jae
mov
mov
mov
xchg
out
mov
out
push
jbe
mov
xchg
out
mov
out
push
idiv
add
call
loopne
call
jb
sbb
mov
pushf
xchg
mov
out
movs
add
dec
loope
xor
inc
out
mov
xchg
out
mov
out
ret
call
cmps
xor
and
xchg
out
mov
out
push
jbe
mov
xchg
out
mov
out
push
not
add
call
push
sbb
repz
lds
dec
loopne
loope
arpl
(bad)
out
mov
fwait
inc
xchg
mov
nop
test
fwait
mov
mov
xchg
out
out
loope
xchg
ja
mov
mov
push
jmp
lds
dec
loopne
loope
arpl
fwait
test
loope
arpl
loope
out
stos
loope
xchg
ja
cmc
xchg
mov
push
jmp
int
jmp
push
dec
fcomp
idiv
sbb
jmp
out
mov
(bad)
retf
mul
xchg
mov
xchg
pop
mov
adc
repz
out
mov
ins
lds
mov
dec
loopne
loope
arpl
mov
sbb
inc
xchg
pushf
mov
lds
out
inc
xchg
pushf
mov
loopne
cmp
cs
inc
xchg
pushf
mov
loopne
cmp
cs
inc
xchg
rcr
(bad)
retf
(bad)
out
mov
xchg
pop
mov
adc
adc
mov
and
jno
cli
pop
sbb
aam
pop
imul
sbb
push
dec
vmptrst
sbb
push
call
jnp
lods
or
and
cwde
push
stos
mov
imul
xchg
dec
push
sbb
pop
std
mov
push
sbb
imul
(bad)
ins
out
xchg
mov
and
cli
pop
sbb
shl
mov
xchg
mov
out
data16
push
sbb
pop
stc
test
jnp
lods
or
add
mov
xchg
push
xchg
xchg
out
mov
ins
mov
lods
fisubr
mov
out
mov
inc
xor
xchg
pop
fwait
sub
mov
(bad)
sti
dec
cmp
dec
jg
sbb
pop
xchg
(bad)
fnstenv
cli
pop
sbb
dec
je
add
cmp
and
jae
cmps
jno
imul
cmp
stc
jp
dec
inc
shr
mov
inc
adc
xor
cmps
or
out
sbb
cmp
call
xchg
jmp
call
dec
push
call
popf
cmp
ficomp
imul
sbb
outs
or
sbb
(bad)
pop
loope
mov
push
fisttp
sub
pop
fldenv
sbb
and
imul
in
sbb
imul
sbb
inc
push
xchg
dec
pop
lock
xchg
dec
push
sub
fldpi
ja
push
dec
pop
nop
cs
sbb
rcr
xor
imul
add
nop
dec
es
out
popa
sbb
imul
sbb
inc
mov
sbb
sbb
jbe
pop
imul
out
(bad)
(bad)
pop
in
loop
neg
dec
push
out
jbe
pop
imul
sbb
cli
pop
sbb
dec
push
ins
ins
jg
lock
dec
push
sbb
mov
sahf
adc
rcr
jnp
pop
sub
mov
lock
mov
out
dec
push
xchg
dec
sbb
jg
lock
mov
sahf
adc
rcr
outs
cmps
adc
xchg
mov
sbb
rcr
arpl
sbb
stos
cmps
call
imul
or
push
xchg
dec
push
mov
leave
push
mov
out
mov
sbb
rcr
push
sbb
stos
cmps
stos
sbb
xchg
jmp
jmp
push
xchg
dec
pop
fisubr
sbb
push
sbb
test
sbb
rcr
imul
xchg
sbb
lahf
mul
push
sbb
inc
push
xchg
dec
sbb
outs
or
sbb
xchg
out
mov
sbb
cli
pop
sbb
xchg
jmp
jmp
push
xchg
dec
pop
lock
dec
push
sbb
mov
sbb
hlt
nop
pushf
test
pop
fwait
(bad)
fcomp
imul
clc
imul
xchg
pop
sbb
mov
outs
jbe
pop
imul
pop
nop
outs
inc
mov
cmps
mov
cmc
test
sbb
sbb
dec
loope
pop
cli
pop
sbb
dec
xchg
dec
sbb
test
jmp
push
rcr
push
dec
das
fld
into
adc
hlt
nop
jmp
shr
les
mov
fs
sbb
or
adc
inc
popa
push
xchg
push
mov
or
and
dec
push
sbb
mov
imul
push
mov
pushf
stos
clc
pop
sbb
inc
push
xchg
dec
pop
repnz
mov
ins
fisttp
repnz
out
repnz
dec
pop
sbb
rcr
sub
rcr
loop
das
jmp
jae
pop
sbb
movs
adc
stos
cmps
dec
sbb
lahf
out
ret
push
push
sbb
call
sbb
inc
call
sete
leave
ds
xor
dec
outs
mov
imul
cs
scas
outs
ds
push
jecxz
in
fisttp
in
stos
dec
push
sbb
sbb
sahf
fs
push
imul
dec
push
mov
dec
lahf
div
sbb
loop
into
push
sbb
adc
sbb
push
mov
dec
popf
and
xlat
pop
sbb
or
cmp
arpl
ins
cmp
outs
inc
mov
dec
cmc
pop
jmp
in
push
push
adc
rcr
jmp
out
sbb
sete
leave
stos
sbb
test
(bad)
rcr
call
mov
fs
dec
imul
in
push
dec
popf
sbb
ficomp
outs
(bad)
out
xor
inc
mov
dec
cmc
add
xchg
jle
mov
les
xchg
outs
pop
sub
loope
ficomp
retf
pop
imul
sti
push
push
imul
push
call
cmc
add
xchg
jle
mov
les
xchg
outs
pop
mov
sub
sbb
ficomp
retf
pop
imul
sti
push
push
imul
push
nop
mov
ficomp
pop
mov
xor
dec
dec
cmp
mov
mov
pushf
test
pop
xchg
(bad)
fsub
outs
cmp
mov
xor
push
nop
lods
es
icebp
jmp
pop
imul
mov
sbb
push
sbb
pop
sbb
dec
jmp
nop
lods
and
adc
sbb
mov
push
mov
adc
sbb
jle
pop
imul
mov
pop
adc
sbb
push
mov
shr
mov
movs
rcr
nop
mov
(bad)
nop
test
sbb
or
jno
hlt
pop
sbb
or
mov
adc
imul
sbb
mov
xchg
pop
fwait
mov
sub
sbb
movs
cdq
and
xchg
dec
popf
jl
dec
loope
pop
cli
pop
sbb
sub
sbb
xchg
das
shl
popf
jl
dec
fstp
push
sbb
pop
lds
push
sbb
sub
sbb
std
nop
cs
xchg
(bad)
dec
push
sub
pop
mov
push
fisubr
(bad)
sbb
imul
xor
out
mov
pop
(bad)
loop
fstp
push
sbb
jnp
imul
movs
out
into
mov
cwde
jmp
pop
sbb
sbb
push
xchg
cs
dec
out
mov
(bad)
sub
ror
imul
mov
imul
ins
mov
std
adc
sbb
pop
mov
out
scas
dec
add
mov
outs
cmp
out
out
je
add
sbb
(bad)
cmps
gs
dec
cmps
shr
dec
push
out
mov
pop
mov
(bad)
loope
(bad)
cmps
icebp
inc
imul
pop
cli
pop
sbb
or
dec
xchg
cmp
out
mov
pop
std
or
iret
push
sbb
inc
shr
mov
cmp
sub
(bad)
pop
std
loop
(bad)
out
push
stos
xchg
pop
mov
pop
in
or
nop
cs
push
loope
sub
sbb
xchg
dec
xchg
pop
icebp
add
sbb
dec
xchg
pop
xchg
push
xchg
pop
sbb
ins
xchg
and
xchg
cs
imul
pop
xchg
dec
xchg
pop
lahf
movs
sbb
imul
ds
sti
dec
cmp
sbb
push
xchg
loope
mov
ficom
loope
arpl
out
pop
sbb
dec
jmp
nop
lods
adc
fidivr
(bad)
sti
call
imul
adc
out
cmp
push
fisttp
and
dec
push
sbb
jp
scas
das
jns
and
dec
push
sbb
adc
xchg
dec
push
sbb
push
adc
xchg
dec
push
sbb
pop
adc
xchg
dec
push
sbb
sbb
xchg
pop
jnp
pop
sbb
or
jecxz
fild
mov
push
fisttp
loope
fisttp
jnp
or
push
fstp
and
dec
push
nop
xchg
add
scas
jg
daa
(bad)
sbb
xchg
jecxz
movs
sbb
fstp
and
int
sbb
rsqrtps
icebp
outs
inc
test
ins
jae
sbb
imul
pop
out
mov
xchg
outs
dec
ja
sub
icebp
xor
push
sbb
out
pushf
or
dec
dec
dec
adc
sbb
pop
loope
xchg
xchg
ds
xchg
dec
js
pop
jecxz
movs
sbb
mov
cmps
sbb
jnp
pop
sbb
out
or
lahf
(bad)
or
dec
push
sbb
mov
fnstcw
and
repnz
sbb
adc
pop
mov
out
dec
push
sub
and
loop
push
cdq
push
dec
sbb
out
or
dec
imul
popf
icebp
push
cmp
nop
xchg
int
sbb
push
es
push
lock
sbb
adc
sbb
jb
cmp
push
jbe
call
sbb
dec
push
sbb
jb
sbb
sub
pop
imul
neg
jmp
sbb
push
pop
xchg
loope
cmps
sbb
ins
sub
dec
adc
imul
ins
jae
sbb
imul
xchg
xchg
ds
xchg
dec
js
pop
jecxz
movs
sbb
mov
dec
xchg
pop
xchg
lds
out
sbb
icebp
outs
lds
loop
sbb
imul
push
jo
ins
cmp
out
jmp
sbb
push
pop
xchg
loope
cmps
sbb
push
dec
pop
ins
push
(bad)
out
or
ins
dec
imul
mov
icebp
outs
inc
test
ins
jb
ins
gs
sbb
push
push
mov
sbb
push
icebp
ret
sbb
sbb
xchg
aas
pop
sbb
xchg
int
sbb
imul
jmp
fdiv
inc
shr
mov
loope
pop
cli
pop
sbb
cmp
bnd
loope
ins
into
and
imul
pop
jmp
call
imul
sub
cmps
sbb
outs
mov
neg
imul
popa
mov
ins
fisttp
push
fstp
push
fmul
outs
(bad)
pop
imul
xchg
dec
(bad)
dec
or
out
pop
loope
pop
cli
pop
sbb
push
push
cmps
push
sbb
cmp
dec
push
sbb
outs
popf
jl
dec
cmc
pop
loop
sbb
push
jecxz
sbb
cs
sbb
cs
icebp
sub
je
sbb
out
add
loopne
xchg
pop
xchg
(bad)
in
sbb
dec
les
mov
or
sbb
sbb
nop
jnp
add
nop
dec
ins
xchg
call
dec
les
mov
dec
into
call
sbb
add
pop
push
dec
loope
pop
loope
pop
cli
pop
sbb
xchg
xor
dec
into
call
sbb
loop
and
imul
cmp
(bad)
cld
sbb
push
icebp
pop
mov
out
mov
inc
xor
(bad)
sti
mov
add
dec
adc
cli
mov
loope
xor
sbb
push
sbb
ins
push
lods
retf
std
(bad)
xchg
mov
fucomip
mov
popf
sbb
cli
pop
sbb
cli
mov
loope
push
pop
adc
xchg
into
and
repnz
sbb
add
(bad)
lods
shl
dec
push
fs
fwait
jmp
jle
sub
ins
imul
xchg
mov
nop
loope
add
movs
sub
icebp
ret
sbb
(bad)
sbb
imul
cwde
mov
add
dec
dec
fmul
nop
loope
xchg
jp
dec
nop
mov
push
sbb
fstp
sbb
imul
jmp
fwait
jmp
sahf
and
imul
es
out
retf
in
not
in
not
and
fistp
imul
outs
dec
push
push
fstp
in
not
or
xlat
pop
sbb
fcmovne
(bad)
xchg
mov
sbb
cli
pop
sbb
repz
(bad)
xchg
mov
push
out
fstp
sbb
and
xchg
mov
pushf
mov
loope
xchg
dec
push
sub
mov
popf
fcomip
jge
std
psrad
push
nop
out
mov
loope
dec
es
or
dec
icebp
(bad)
push
push
sbb
mov
sbb
cli
mov
pop
jmp
test
cdq
xchg
pushf
out
nop
loope
cmp
loope
pop
cli
pop
sbb
jmp
not
push
sbb
mov
sbb
stos
cmc
test
shl
cmps
adc
xchg
mov
frstor
pop
in
mov
call
mov
xchg
test
out
movs
pop
sub
(bad)
imul
call
icebp
out
cmp
pop
jmp
(bad)
jmp
push
loop
sbb
jnp
push
nop
out
into
shl
movs
push
cwde
test
push
sbb
in
fwait
dec
push
outs
fnsave
in
xchg
pop
lahf
pushf
xchg
pop
sbb
retf
xchg
(bad)
xchg
mov
out
dec
push
and
mov
cwde
inc
xchg
mov
out
cmp
shl
sbb
inc
test
cwde
mov
sbb
jg
mov
dec
xchg
mov
jmp
not
icebp
out
(bad)
cld
sbb
xchg
fcomip
imul
xchg
xchg
jle
shl
lds
fmul
cmps
sbb
mov
xchg
dec
aam
popa
dec
loope
lahf
mov
jmp
dec
ins
scas
xchg
dec
push
sub
movs
mov
inc
jno
repz
sbb
(bad)
fwait
mov
test
dec
push
sbb
fild
fist
dec
sbb
out
(bad)
shl
lds
xchg
(bad)
(bad)
shl
int
add
call
mov
mov
nop
loope
push
nop
loope
loop
mov
xchg
mov
pushf
mov
retf
ret
mov
add
xchg
mov
out
xchg
shl
cmps
jge
imul
mov
retf
mov
pop
loopne
fcmovb
xchg
mov
pushf
fist
ret
mov
movs
mov
fnsave
dec
sbb
add
mov
xchg
loope
stos
movs
adc
(bad)
repz
adc
dec
push
out
loop
out
movs
test
outs
cmp
mov
lods
sbb
out
shl
gs
int
mov
nop
addr16
mov
dec
adc
xchg
(bad)
cld
sbb
pop
or
cli
push
push
nop
(bad)
mov
push
or
dec
icebp
push
sbb
sbb
retf
scas
(bad)
xchg
mov
fldenv
sbb
sahf
arpl
popf
push
dec
push
sbb
retf
jmp
jae
sbb
push
jmp
push
sbb
sbb
test
out
mov
or
dec
push
sbb
movs
loope
das
dec
sbb
xchg
mov
sbb
jecxz
(bad)
xchg
mov
xchg
fisubr
out
push
jmp
push
ins
inc
(bad)
out
call
add
jmp
push
ins
jg
out
call
adc
fwait
int
sbb
jbe
ins
bound
cmc
aam
dec
push
sub
scas
(bad)
in
shl
(bad)
cld
sbb
cli
or
out
in
shl
dec
adc
imul
loopne
sub
imul
xor
pushf
(bad)
xchg
loope
or
out
add
lahf
mov
aaa
jmp
sub
mov
imul
loope
fs
mov
mov
jle
(bad)
out
mov
sbb
jb
sbb
push
sbb
data16
and
imul
jmp
and
imul
push
pop
sahf
and
imul
jmp
and
dec
push
sbb
dec
pop
repnz
nop
loope
bound
push
sbb
push
adc
xchg
push
loope
mov
loope
xchg
sti
retf
mov
outs
xchg
mov
call
loope
imul
call
xchg
mov
lods
sbb
mov
neg
stos
scas
sbb
es
popf
jle
shl
(bad)
sbb
xchg
retf
jmp
mov
push
sbb
sahf
loope
pop
cli
pop
sbb
into
fwait
jmp
fwait
jmp
sahf
and
imul
inc
mov
out
adc
test
xchg
cld
call
sbb
loope
jl
cmp
and
or
dec
push
fild
mov
xchg
push
test
pop
sbb
pop
push
sbb
mov
pop
cmps
(bad)
pop
rcr
xchg
pop
xchg
ret
arpl
out
fwait
movs
sub
push
imul
iret
ret
arpl
out
mov
dec
push
jmp
push
sbb
jne
ins
fs
xchg
pop
xchg
(bad)
fcomp
test
or
sbb
clc
dec
out
or
(bad)
push
dec
sahf
pop
xchg
dec
cmc
adc
or
sbb
xor
or
stos
fcomp
idiv
push
je
or
inc
fwait
xchg
imul
cs
pop
imul
xchg
dec
adc
imul
or
pop
push
ficomp
imul
sub
sbb
fisttp
cld
push
call
int
sbb
inc
popf
loope
xor
cdq
cs
push
fisttp
fisubr
(bad)
push
call
into
pop
out
lds
loop
aaa
fnclex
sbb
push
fisttp
push
sbb
push
sbb
sbb
fisttp
out
imul
popa
mov
sbb
cs
cdq
push
mov
push
jmp
mov
imul
dec
xchg
je
or
cmp
cdq
cs
repnz
into
pop
in
into
arpl
ins
cmp
cwde
push
mov
pop
imul
push
dec
imul
clc
pop
out
adc
test
xchg
cld
cmp
dec
xchg
push
inc
movs
test
or
sbb
loope
imul
imul
call
jmp
pop
sbb
mov
fiadd
adc
lods
or
sbb
sbb
mov
data16
(bad)
sub
adc
sti
mov
sub
imul
cmps
shl
add
loop
jmp
(bad)
xchg
mov
fiadd
xchg
fsubp
cmp
dec
xchg
cmp
xchg
out
dec
(bad)
out
push
test
dec
push
xchg
out
dec
(bad)
out
push
not
imul
scas
pop
xchg
loope
mov
ficomp
inc
inc
mov
sbb
cwde
test
push
sbb
push
jae
mov
adc
dec
test
lea
mov
repnz
ret
adc
push
jmp
sbb
into
push
sbb
sbb
jno
dec
push
cdq
xchg
cmp
icebp
jbe
push
sbb
mov
call
pop
adc
xchg
mov
xchg
ficomp
cmc
dec
add
icebp
outs
pop
push
sbb
lea
pop
or
in
mov
je
call
inc
xchg
pop
addr16
pop
in
or
xchg
(bad)
pop
in
xchg
cmp
dec
xchg
cmp
dec
add
repz
xchg
cs
pop
loop
aaa
loope
mov
xor
dec
dec
cmp
fs
xchg
dec
out
lods
and
jno
dec
push
sbb
dec
je
add
sbb
fsubp
push
inc
mul
dec
push
nop
lods
iret
fst
dec
push
call
cmc
dec
add
add
icebp
jmp
nop
stos
int
out
into
and
imul
nop
test
push
xchg
ds
dec
xchg
cmp
dec
add
xchg
cs
jae
es
stc
sub
icebp
rcr
push
sbb
mov
dec
icebp
cmp
push
sbb
dec
push
sbb
inc
inc
mov
int
adc
jmp
push
sbb
fnstenv
es
sbb
je
add
sbb
dec
push
sbb
scas
dec
sbb
fcom
cs
loope
outs
jg
repnz
and
jae
and
dec
sub
xchg
cs
out
pop
loope
addr16
daa
cmp
nop
xchg
addr16
lods
sbb
iret
and
push
sub
lea
mov
dec
dec
cmp
imul
or
lock
pop
cwde
push
mov
aas
imul
loop
cmc
push
fs
sbb
push
pop
and
inc
(bad)
in
cmp
(bad)
pop
imul
ins
xchg
jecxz
sbb
and
jae
dec
push
call
adc
pop
scas
pop
sbb
int
adc
jne
adc
add
push
dec
imul
jne
adc
inc
scas
pop
sbb
int
adc
or
nop
test
mov
inc
xor
dec
dec
cmp
lds
lods
or
retf
jl
popa
cwde
cs
imul
mov
icebp
sahf
sbb
sbb
jg
bnd
test
push
push
jbe
mov
icebp
mov
sbb
mov
pop
push
mov
(bad)
pop
imul
xchg
cs
fld
xchg
dec
xchg
adc
mov
int
xor
jmp
and
shl
js
lods
pop
sbb
sub
sbb
sub
sbb
sub
sbb
xor
xchg
pop
aad
pop
imul
sbb
in
mov
imul
(bad)
xor
sbb
dec
js
lods
push
sbb
or
push
fmul
sbb
cs
shl
std
nop
cs
xchg
fisub
out
clc
pop
sbb
int
pop
push
repnz
push
mov
ins
outs
int
cmc
imul
push
cdq
push
mov
cdq
push
mov
ins
mov
stc
pop
sbb
or
repnz
iret
cmc
jmp
push
push
fisttp
loopne
fisttp
sbb
call
cmps
sahf
fs
dec
imul
and
sbb
xor
sbb
cdq
xchg
rcr
xchg
cs
adc
fs
or
mov
dec
push
push
fcomp
cld
push
les
sbb
cmps
xchg
rol
repnz
fadd
cld
out
mov
pop
int
or
xchg
cs
adc
arpl
dec
ins
addr16
push
fcomp
cld
push
les
adc
loopne
push
push
fcomp
xor
or
repnz
mov
inc
xor
fimul
sbb
push
mov
retf
imul
popa
je
inc
mov
mov
aaa
sti
fimul
mov
ficomp
sti
fimul
mov
ficomp
sti
fimul
mov
fisub
sar
mov
sti
fisub
mov
sahf
call
fisub
mov
mov
add
pop
inc
mov
outs
fimul
mov
fisubr
sti
fimul
mov
fidivr
loop
jecxz
test
mov
or
imul
mov
fimul
sbb
arpl
and
dec
mov
sti
lds
sti
fimul
mov
jg
mov
fimul
mov
ja
mov
fimul
mov
int
adc
push
dec
mov
sti
fimul
mov
sub
stos
jp
loope
jnp
push
popf
in
push
popa
je
inc
sbb
or
leave
mov
pop
lea
fimul
sbb
push
mov
dec
mov
sti
fimul
mov
fisubr
sti
fimul
pop
imul
sar
mov
sti
fisubr
retf
sti
fimul
mov
ficom
mov
(bad)
mov
sti
fisub
mov
mov
sti
fimul
mov
fisub
mov
mov
mov
fisubr
sti
fimul
pop
imul
sar
mov
sti
fisubr
retf
sti
fimul
mov
ficom
mov
(bad)
mov
sti
fisub
mov
mov
sti
fimul
mov
fidivr
sti
fimul
or
(bad)
sti
call
inc
adc
or
jg
or
fisubr
mov
pop
push
das
xchg
pop
xchg
(bad)
fcomp
test
mov
push
sbb
mov
xchg
xchg
dec
nop
into
arpl
imul
fild
mov
repnz
cmps
dec
push
imul
xchg
loope
imul
imul
fstp
in
xchg
addr16
sbb
sbb
mov
pushf
sub
nop
cmps
xchg
pop
xchg
les
pop
push
ds
or
loop
pop
jmp
fs
push
jecxz
test
pop
push
lods
push
sbb
push
nop
mov
out
pop
fs
push
push
fld
in
mov
mov
arpl
je
add
push
sbb
pop
jmp
cmps
mov
imul
cs
nop
mov
out
dec
out
in
push
fstp
in
mov
dec
push
jae
ret
pop
jmp
mov
arpl
push
fild
imul
jbe
sbb
stc
pop
adc
jmp
adc
mov
int
xor
stos
pop
int
jmp
ja
dec
push
mov
cmp
fucomip
or
loopne
addr16
mov
sbb
call
imul
mov
pop
imul
out
inc
mul
scas
inc
xchg
fbld
adc
fs
arpl
stos
test
mov
sub
or
imul
push
loop
test
arpl
stos
test
mov
sub
out
push
dec
dec
icebp
stos
add
sbb
inc
je
loop
sbb
sbb
test
push
sbb
fiadd
retf
pop
imul
in
pop
lahf
fiadd
cmp
sbb
leave
(bad)
or
sub
pop
in
out
(bad)
movs
sub
sbb
repz
sbb
loop
mov
retf
dec
xchg
pop
xchg
movs
add
pushf
lods
xchg
pop
mov
fst
loopne
ret
dec
das
or
or
sbb
imul
(bad)
or
and
mov
retf
push
sbb
pop
lds
lds
fs
loope
test
lods
push
adc
push
cwde
adc
imul
pop
mov
and
fs
test
scas
mov
cdq
xchg
and
repz
sbb
push
jbe
(bad)
or
nop
fwait
dec
sbb
(bad)
or
dec
sub
adc
imul
in
sbb
(bad)
jl
sbb
mov
or
(bad)
or
sub
pop
in
outs
out
(bad)
movs
sub
sbb
repz
sbb
jmp
dec
xchg
pop
fwait
movs
seto
pop
ret
dec
das
or
or
sbb
imul
(bad)
or
and
mov
sbb
sbb
idiv
scas
mov
leave
(bad)
or
nop
addr16
out
push
dec
adc
loopne
mov
(bad)
or
xchg
xchg
mov
and
lea
push
imul
test
sbb
fs
pop
icebp
cmp
out
sbb
mov
mov
mov
call
je
add
sbb
dec
push
sbb
mov
adc
(bad)
pop
std
jmp
sbb
or
dec
xchg
cmp
dec
xchg
cmp
icebp
push
pop
push
sbb
push
sbb
dec
das
fldcw
movs
adc
pushf
lods
xchg
pop
mov
adc
sti
cwde
xchg
sbb
dec
dec
aad
sub
imul
loop
repnz
mov
fucomip
dec
push
sub
sbb
xchg
add
xchg
pop
sbb
mov
mul
mov
(bad)
fucomip
or
into
inc
loop
popf
fisubr
(bad)
in
(bad)
mov
out
mov
push
xor
cli
add
arpl
rcr
xchg
fcomp
out
inc
test
call
loopne
xchg
into
pop
out
les
push
inc
push
out
mov
icebp
ds
call
fucomip
dec
loope
xchg
jge
pushf
ins
mov
out
iret
call
xchg
out
mov
out
push
jbe
retf
jno
xchg
pop
sbb
retf
in
xchg
mov
icebp
pop
add
je
add
add
sbb
pop
xchg
out
mov
out
push
test
dec
push
nop
out
mov
imul
(bad)
aam
imul
pop
and
jae
ret
fwait
jmp
add
sbb
out
sub
lods
lahf
mov
out
jle
sbb
out
sbb
mov
fstp
dec
loope
pop
cli
pop
sbb
es
(bad)
sub
pushf
xchg
mov
out
cmps
mov
pushf
nop
mov
out
es
dec
xchg
pushf
xchg
mov
out
es
sbb
test
push
mov
pushf
test
pushf
xor
sbb
cli
pop
sbb
(bad)
rcr
rol
sub
pushf
xchg
mov
out
es
sbb
idiv
imul
add
rcr
arpl
sub
sbb
sahf
icebp
gs
push
sbb
mov
popf
adc
imul
inc
mov
int
adc
push
pop
mov
nop
xchg
addr16
lods
mov
ins
fisttp
nop
xchg
mov
xchg
fsubrp
sub
sbb
or
dec
out
loop
add
imul
imul
imul
icebp
dec
pop
push
sbb
mov
sahf
and
loop
out
push
mov
jae
and
out
pop
loope
xchg
cmps
xor
dec
lahf
not
sbb
push
sbb
inc
shr
icebp
xor
jp
push
sbb
push
sbb
dec
dec
out
pop
loope
jnp
imul
dec
push
sbb
mov
inc
lea
mov
dec
cmps
mov
ss
jmp
nop
lods
and
jae
ret
pop
or
xchg
cmp
out
inc
neg
imul
scas
push
inc
shr
push
dec
cmps
rcr
lock
loop
das
loope
mov
pop
xchg
push
je
add
sbb
push
jae
and
out
inc
loope
arpl
pop
fstp
dec
das
fld
mov
or
imul
icebp
push
push
push
sbb
push
xchg
cmp
icebp
push
push
push
sbb
cmc
or
mov
loope
mov
ins
xchg
cmps
xor
fldcw
adc
fidivr
(bad)
sti
call
or
cs
mov
cwde
pushf
adc
imul
loope
mov
add
push
jae
mov
adc
sahf
or
sbb
push
pop
mov
daa
out
push
dec
cmp
mov
or
push
sbb
push
xchg
cmp
icebp
stos
or
sbb
cmc
add
push
sbb
add
dec
push
out
mov
pop
jmp
mov
pop
dec
dec
cmp
mov
fisubr
jae
int3
sub
ins
dec
cmps
sbb
dec
dec
icebp
retf
sbb
or
nop
xchg
jg
nop
lods
out
loop
sub
pop
xchg
cmp
sub
dec
jbe
imul
imul
imul
(bad)
sub
inc
sub
fwait
pop
sbb
mov
pop
fstp
dec
das
fld
fwait
pop
sbb
(bad)
pop
in
dec
lahf
out
mov
xor
xlat
fcmovbe
sbb
(bad)
xor
push
xchg
jle
rcr
dec
adc
sbb
push
xchg
ss
fstp
pop
xchg
pop
lds
loop
aaa
fnclex
sbb
nop
mov
sub
inc
(bad)
out
mov
xchg
jmp
push
pop
test
push
call
xchg
dec
jnp
sbb
imul
call
loop
jl
push
pop
jmp
and
push
mov
ret
sahf
and
loop
push
cdq
push
dec
adc
jns
pop
or
mov
cmp
dec
xchg
shr
sub
sub
sbb
fstp
imul
pop
push
xchg
jmp
push
pop
mul
dec
push
xchg
cs
fild
xchg
dec
xchg
mov
sub
lea
mov
repnz
ss
fstp
ds
ins
iret
imul
jge
sbb
cmps
dec
pop
imul
xchg
(bad)
fxch
mov
fst
cmp
pop
icebp
jmp
sub
dec
sub
fstp
inc
adc
sbb
sbb
sub
stos
lahf
je
outs
and
imul
pop
xchg
dec
push
repnz
fs
inc
test
push
(bad)
out
jno
push
sbb
mov
fdivr
(bad)
out
jno
push
sbb
add
frstor
dec
xchg
dec
xchg
leave
call
dec
jno
xchg
pop
sbb
gs
imul
jg
loope
xchg
inc
test
loope
loope
pop
lahf
adc
mov
not
imul
dec
cmp
mov
fmul
mov
out
int
cmc
xchg
mov
sbb
retf
out
xchg
mov
out
inc
test
inc
xchg
(bad)
mov
pop
ret
das
fld
int
loope
mov
sbb
inc
dec
icebp
ret
sbb
test
push
pop
not
dec
push
nop
out
xchg
loope
xchg
test
imul
xchg
mov
out
retf
retf
mov
movs
mov
jecxz
add
(bad)
out
mov
xchg
(bad)
call
imul
cmp
pop
icebp
ds
sbb
retf
loop
xchg
mov
fnstsw
cmp
sbb
push
sbb
(bad)
out
xor
inc
xchg
pushf
mov
(bad)
popf
rcl
imul
mov
fcmovne
out
mov
jecxz
cmps
jno
xchg
mov
frstor
dec
(bad)
sub
ins
arpl
popf
frstor
push
(bad)
sub
lods
xchg
mov
out
push
pop
sbb
ficom
xor
imul
sbb
xchg
xchg
int
sbb
pop
jbe
mov
out
mov
out
cmps
dec
pop
imul
arpl
out
sub
or
sbb
inc
push
sbb
jmp
fs
cmps
in
imul
imul
pushf
mov
xchg
(bad)
mov
out
sbb
mov
push
dec
xor
or
not
imul
xchg
int
sbb
pop
jbe
mov
out
mov
out
cmps
jmp
frstor
sub
sub
lods
xchg
mov
out
stos
pop
sbb
ficom
sub
sbb
adc
imul
xchg
int
sbb
pop
jbe
mov
out
mov
out
cmps
mov
frstor
gs
imul
imul
pushf
mov
jecxz
xor
sbb
sub
jmp
in
mov
dec
add
pop
imul
jg
dec
push
call
or
sub
pushf
xchg
mov
out
es
(bad)
sub
icebp
and
push
sbb
mov
cwde
test
cmp
adc
push
sbb
jno
scas
pop
sbb
neg
dec
push
call
push
out
mov
out
cmps
xor
dec
popf
frstor
cmc
pop
imul
imul
pushf
mov
jecxz
xor
sbb
not
das
dec
push
call
push
out
mov
out
cmps
jmp
frstor
lods
pop
imul
imul
pushf
mov
jecxz
xor
sbb
sub
jmp
in
mov
dec
add
pop
imul
xchg
dec
push
call
push
out
(bad)
(bad)
fwait
aad
mov
nop
lods
cmps
jno
imul
push
mov
jno
nop
pop
sbb
repz
mov
icebp
push
or
shl
mov
out
pop
xchg
pushf
xchg
mov
out
es
(bad)
sub
icebp
cmp
ds
pop
or
push
sbb
jmp
fs
cmps
add
dec
cmps
jp
dec
push
sbb
out
sbb
mov
push
dec
adc
imul
or
mov
(bad)
out
mov
fild
not
imul
xchg
int
sbb
pop
jbe
mov
out
mov
out
cmps
adc
dec
popf
frstor
aad
imul
imul
pushf
mov
jecxz
xor
sbb
div
sub
call
push
mov
repnz
arpl
add
stos
in
mov
icebp
scas
or
sbb
mov
nop
fwait
jg
nop
lods
es
sub
ins
jg
fwait
in
mov
dec
add
rcr
mul
dec
push
call
push
mov
repnz
arpl
add
stos
in
mov
icebp
push
or
sbb
mov
icebp
push
or
sbb
inc
push
sbb
jmp
fs
out
stc
sub
lods
xchg
mov
out
push
pop
sbb
ficom
sbb
imul
sbb
xchg
xchg
int
sbb
ins
neg
sub
mov
repnz
loop
xchg
mov
jno
xchg
pop
sbb
loope
imul
jnp
arpl
imul
push
push
call
not
dec
push
fucomip
dec
push
out
dec
lahf
idiv
fsubp
xchg
mov
repnz
fst
loope
xchg
jne
loope
mov
push
lds
sbb
mov
in
inc
test
push
(bad)
out
jno
push
sbb
mov
dec
nop
xchg
test
xchg
hlt
sbb
(bad)
into
call
repz
sbb
pop
sbb
repz
sbb
push
sbb
mov
mov
pushf
test
pushf
shl
loope
stos
mov
out
repz
xchg
mov
sbb
adc
xchg
sti
jmp
ret
fwait
sbb
loope
loopne
loop
xchg
mov
jno
nop
pop
sbb
cmps
add
dec
popf
fnsave
loope
imul
imul
pushf
mov
jecxz
xor
sbb
test
dec
push
call
push
mov
repnz
arpl
add
stos
in
mov
icebp
xchg
push
push
sbb
mov
nop
fwait
jg
nop
lods
cmps
mov
imul
imul
pushf
mov
jecxz
xor
sbb
not
sub
call
jecxz
jmp
push
sbb
xchg
pushf
xchg
mov
out
retf
(bad)
xchg
mov
fwait
hlt
mov
out
retf
repnz
mov
jmp
stos
mov
out
mov
bound
push
xchg
cs
xchg
pushf
xchg
mov
out
pop
pop
sbb
mov
sbb
sbb
xchg
jmp
loopne
add
xchg
sbb
out
xchg
mov
call
out
xchg
mov
pushf
xchg
or
nop
pop
sbb
retf
jmp
push
push
sbb
mov
xchg
out
loope
xchg
int
out
into
and
imul
nop
lods
sub
out
mov
xchg
pushf
imul
cmp
pushf
lods
mov
out
retf
xchg
mov
dec
sub
imul
in
xchg
mov
dec
cmp
out
int
sbb
xchg
mov
lods
lahf
mov
out
cmp
out
mov
fwait
in
mov
dec
add
rcr
idiv
scas
push
neg
popa
dec
push
sbb
mov
arpl
add
rcr
stos
in
mov
icebp
into
jno
sbb
mov
nop
fwait
dec
out
nop
lods
cmps
inc
imul
imul
pushf
mov
jecxz
xor
sbb
mul
dec
push
call
push
mov
repnz
arpl
add
stos
in
mov
icebp
ds
sbb
mov
out
mov
frstor
imul
sub
sbb
xchg
pushf
imul
cmp
loope
and
xchg
int
adc
xchg
mov
fldenv
out
mov
and
mov
out
cmps
sbb
imul
arpl
cmps
adc
push
sbb
jno
nop
pop
sbb
idiv
push
dec
push
call
push
mov
repnz
arpl
add
stos
in
mov
icebp
(bad)
jo
sbb
mov
nop
fwait
mov
loope
xchg
(bad)
fdiv
push
jo
sbb
inc
push
sbb
jmp
fs
out
stc
sub
lods
xchg
mov
out
ret
imul
adc
jl
pop
imul
icebp
adc
sbb
mov
icebp
pop
jo
sbb
inc
push
sbb
jmp
fs
cmps
cmp
jp
dec
push
sbb
out
sbb
mov
push
dec
sub
imul
or
not
imul
xchg
int
sbb
pop
jbe
mov
push
out
mov
out
cmps
add
imul
arpl
call
icebp
mov
inc
push
sbb
jmp
fs
aad
sub
lods
xchg
mov
out
mov
ficom
cmp
sbb
adc
imul
xchg
int
sbb
pop
jbe
mov
out
mov
out
cmps
shl
dec
popf
frstor
xchg
and
dec
cmps
adc
push
sbb
icebp
adc
sbb
sub
jmp
in
mov
dec
add
pop
imul
outs
push
dec
push
call
push
out
mov
out
cmps
cdq
and
dec
popf
frstor
out
xor
jae
sbb
inc
push
sbb
jmp
fs
out
stc
sub
lods
xchg
mov
out
adc
sbb
ficom
add
pop
imul
icebp
and
sbb
mov
icebp
outs
jae
sbb
inc
push
sbb
jmp
fs
out
stc
sub
lods
xchg
mov
out
push
sbb
ficom
add
imul
icebp
jp
push
sbb
mov
cwde
popf
dec
or
imul
adc
push
sbb
jno
scas
pop
sbb
idiv
push
dec
push
call
jecxz
cmp
fwait
in
mov
dec
add
imul
mov
scas
pop
neg
popa
dec
push
sbb
mov
arpl
add
stos
in
mov
icebp
into
jb
sbb
mov
jno
nop
pop
sbb
test
inc
not
dec
push
mov
repnz
arpl
add
stos
in
mov
icebp
push
jb
sbb
mov
mov
pushf
test
pushf
stos
mov
out
mov
add
push
mov
repnz
(bad)
dec
dec
push
dec
loopne
loop
xchg
mov
jno
xchg
pop
sbb
adc
jnp
icebp
and
cmps
adc
push
sbb
jno
scas
pop
sbb
not
push
dec
push
call
push
out
mov
out
cmps
in
imul
arpl
cmps
adc
push
sbb
jno
scas
pop
sbb
test
dec
push
call
push
sbb
not
imul
xchg
int
sbb
ins
mul
dec
push
mov
repnz
loop
xchg
mov
jno
xchg
pop
sbb
imul
jnp
into
les
dec
loope
xchg
mov
out
(bad)
and
adc
dec
je
add
add
sbb
pop
out
inc
neg
push
dec
push
nop
out
cmps
loope
xchg
iret
fadd
fidiv
cdq
and
je
out
jmp
sti
loop
xchg
mov
lods
xor
sbb
stos
icebp
xchg
mov
icebp
xchg
js
sbb
idiv
fwait
dec
out
nop
lods
sbb
push
xchg
out
mov
inc
inc
mov
iret
repnz
push
dec
aam
sbb
out
mov
fwait
loope
mov
nop
lods
mov
imul
dec
add
ret
pop
imul
out
mov
dec
cmp
sbb
out
xchg
(bad)
fnstenv
es
les
dec
xchg
pushf
xchg
mov
out
es
sbb
imul
fwait
mov
call
xchg
pop
xchg
jb
imul
push
jno
xchg
pop
sbb
add
pop
imul
sbb
test
mov
jno
xchg
pop
sbb
xchg
ret
es
lds
dec
jbe
imul
loop
loope
call
adc
imul
fidivr
(bad)
sti
cwde
xchg
sbb
imul
mov
xchg
(bad)
fstp
xchg
dec
xchg
pop
arpl
sbb
call
loope
loopne
push
xchg
outs
dec
pop
sbb
xchg
pushf
out
loope
loop
aaa
loope
mov
ret
push
nop
lods
int
sbb
cmps
push
imul
arpl
dec
sbb
xchg
mov
mov
out
cmps
sub
imul
pop
mov
out
sti
mov
aas
pop
dec
push
xchg
ds
xchg
xchg
pop
mov
out
sbb
out
sbb
sub
mov
xchg
dec
out
lods
sbb
sbb
nop
out
ss
xchg
mov
mov
call
in
mov
lods
repz
out
scas
sub
imul
adc
ret
data16
mov
dec
popa
dec
xchg
xchg
pop
mov
out
sbb
out
sbb
sub
mov
pushf
sub
imul
iret
sub
cmps
pop
dec
push
nop
out
(bad)
out
iret
jmp
jae
and
xchg
out
jmp
push
dec
push
icebp
ds
sbb
cmps
and
imul
push
push
xchg
out
cli
jecxz
xchg
push
jbe
mov
push
jno
xchg
pop
sbb
dec
push
sbb
cmps
or
xchg
mov
fisttp
fisubr
idiv
stos
cmps
inc
sbb
not
xchg
mov
jno
dec
push
sbb
retf
loop
xchg
mov
xchg
out
cli
jecxz
xchg
push
idiv
dec
push
out
(bad)
out
mov
mov
ret
xchg
mov
xchg
xchg
mov
out
(bad)
jecxz
xchg
mov
mov
out
stos
in
mov
icebp
and
mov
nop
out
shl
out
inc
fisubr
mul
pop
dec
push
sub
dec
jbe
mov
push
xchg
out
mov
out
push
div
xchg
addr16
lods
ret
fwait
lods
xchg
mov
dec
out
loop
xchg
mov
icebp
cli
jbe
sbb
(bad)
fwait
popf
xchg
mov
jae
and
xchg
out
mul
out
push
test
dec
push
call
xchg
fisubr
pop
sbb
fstp
dec
push
sbb
mov
sbb
mov
sbb
push
js
out
cmps
loopne
xchg
dec
push
cwde
lods
push
pop
sbb
fwait
mov
sbb
xchg
pop
xchg
pushf
iret
mov
out
ret
fwait
mov
add
sbb
outs
je
add
sbb
retf
loop
xchg
mov
jae
cmps
jmp
fldenv
sbb
loope
ret
mov
out
imul
xor
(bad)
out
es
sub
fs
push
xchg
out
mov
out
push
div
scas
pop
fcomp
movs
xor
imul
in
mov
dec
add
ret
cmps
cmp
fisub
imul
cmps
sbb
sub
sbb
fwait
push
mov
and
mov
dec
jno
ss
sbb
int
mov
inc
jbe
fwait
dec
push
icebp
push
jp
sbb
dec
pop
sbb
fwait
in
mov
dec
cmp
je
add
pop
imul
in
mov
dec
or
out
int
adc
imul
call
cmc
add
xchg
mov
cwde
lods
push
jns
imul
out
dec
lahf
fdivp
jle
sbb
retf
stos
in
mov
icebp
ss
sbb
fld
sbb
stc
nop
out
ds
xchg
(bad)
(bad)
ds
out
jmp
imul
iret
mov
out
jmp
xchg
mov
repnz
dec
jmp
in
mov
fidiv
inc
shr
stos
popf
cmc
jnp
dec
dec
loopne
or
loop
das
loope
mov
ins
arpl
xchg
fisttp
mov
loope
mov
ins
cmps
movs
sub
xchg
fisttp
cmp
icebp
(bad)
jge
sbb
mov
ds
push
sbb
mov
ds
adc
fs
dec
out
push
adc
jnp
dec
jae
cmps
movs
sub
xchg
fucomip
mov
das
fld1
xor
sbb
nop
cs
xchg
pop
jae
xchg
jmp
pop
dec
push
call
out
call
push
sbb
loopne
das
dec
sbb
cmps
cmp
imul
inc
mov
ficom
loopne
das
dec
sbb
fcomp
loop
das
pop
sbb
add
imul
pop
ins
dec
adc
fs
dec
out
out
push
sbb
cmps
cmc
sub
xchg
pop
xchg
push
je
cmp
dec
je
add
jecxz
dec
push
nop
lods
iret
icebp
out
dec
push
jae
sbb
mov
cs
dec
cmp
imul
inc
pop
dec
push
xchg
cs
inc
xor
cmps
push
je
push
icebp
jmp
xchg
ss
mov
nop
xchg
addr16
lods
not
loop
cmps
stc
xchg
mov
fisubr
pop
push
imul
xlat
scas
loope
cmp
(bad)
sub
pop
imul
fbld
adc
jmp
out
mov
out
cmps
xchg
sub
arpl
ins
je
stos
ror
inc
div
pop
dec
push
nop
xchg
mov
(bad)
out
(bad)
fldcw
stos
push
cmc
inc
lods
retf
mov
push
imul
xlat
scas
loope
cmp
(bad)
cmps
jno
imul
pop
jp
loope
mov
fidivr
mov
fisttp
jp
sbb
mov
adc
xchg
out
mov
adc
imul
add
pop
push
sbb
adc
test
xchg
cld
rcr
sbb
lea
imul
cmp
inc
adc
in
in
xor
fdivr
pop
dec
push
nop
fwait
dec
out
nop
lods
sbb
push
icebp
xor
sbb
xchg
popf
rcl
imul
mov
xchg
pop
jecxz
cmps
cmp
frstor
dec
(bad)
sub
icebp
cs
sbb
mov
cwde
popf
fnstenv
imul
xor
xchg
pop
sbb
retf
push
stc
xchg
mov
icebp
push
push
sbb
mov
icebp
mov
sbb
inc
push
sbb
jmp
fs
out
stc
sub
pushf
imul
sub
popf
frstor
movs
sub
cmps
adc
push
sbb
icebp
ret
sbb
sub
jmp
sbb
push
ret
ret
mov
dec
sub
sbb
fimul
or
sbb
adc
imul
xchg
int
sbb
pop
jbe
mov
xchg
out
dec
(bad)
out
push
test
inc
xchg
jmp
add
pop
imul
sbb
retf
imul
adc
not
imul
xchg
int
sbb
pop
jbe
mov
xchg
out
dec
(bad)
out
push
test
push
call
push
mov
repnz
arpl
add
imul
sbb
xchg
xchg
sbb
movs
imul
lds
dec
xchg
movs
imul
sub
popf
fnstsw
imul
pop
rcr
fwait
sbb
outs
rcr
fwait
sbb
xchg
sub
imul
or
loop
jmp
(bad)
sub
imul
sbb
xchg
xchg
int
sbb
pop
jbe
mov
xchg
out
dec
(bad)
out
push
not
pop
dec
push
call
push
xchg
out
dec
(bad)
out
push
mul
scas
inc
imul
dec
push
mov
repnz
arpl
imul
sbb
fisubr
imul
adc
dec
rcr
fwait
sbb
into
sub
imul
adc
mov
out
(bad)
xchg
mov
fild
not
imul
xchg
int
sbb
test
dec
push
mov
repnz
push
stc
xchg
mov
jno
xchg
pop
sbb
repz
stc
xchg
mov
icebp
jle
push
sbb
mov
jno
nop
pop
sbb
retf
push
stc
xchg
mov
icebp
dec
jl
sbb
mov
icebp
mov
sbb
inc
push
sbb
jmp
fs
out
stc
sub
pushf
imul
sub
popf
frstor
push
lds
dec
xchg
pushf
imul
sub
popf
frstor
out
sub
jg
sbb
inc
push
sbb
jmp
fs
out
stc
sub
pushf
imul
sub
popf
frstor
add
sub
pushf
imul
sub
popf
frstor
jns
imul
imul
pushf
mov
jecxz
xor
jno
scas
pop
sbb
retf
push
stc
xchg
mov
icebp
out
jg
sbb
mov
cwde
popf
fnsave
sbb
imul
mov
jno
xchg
pop
sbb
retf
push
stc
xchg
mov
icebp
push
jg
sbb
mov
icebp
jbe
push
sbb
inc
push
sbb
jmp
fs
out
stc
sub
pushf
imul
sub
popf
frstor
push
(bad)
sub
pushf
imul
sub
popf
frstor
std
sub
cmps
adc
push
sbb
jno
scas
pop
sbb
retf
push
stc
xchg
mov
icebp
push
push
sbb
mov
mov
pushf
test
pushf
xchg
div
or
repnz
(bad)
dec
dec
push
dec
out
push
stc
xchg
mov
jno
xchg
pop
sbb
repz
stc
xchg
mov
icebp
idiv
sbb
mov
icebp
push
jle
sbb
inc
push
sbb
jmp
fs
out
stc
sub
pushf
imul
sub
popf
frstor
rol
dec
xchg
pushf
imul
sub
popf
frstor
lock
sub
icebp
push
jle
sbb
inc
push
sbb
jmp
fs
out
stc
sub
pushf
imul
sub
popf
frstor
or
imul
imul
pushf
mov
jecxz
xor
icebp
outs
jle
sbb
sub
jmp
sbb
push
ret
ret
mov
dec
xor
or
sahf
ret
pop
imul
sbb
inc
sbb
ficom
add
sbb
dec
je
add
sbb
pop
dec
add
sbb
fwait
in
mov
cwde
lods
xchg
sbb
fwait
sbb
inc
xor
imul
(bad)
mov
out
sbb
(bad)
dec
(bad)
out
sbb
lods
xchg
xchg
loope
sub
in
mov
icebp
push
gs
sbb
pop
repnz
(bad)
out
xor
adc
sti
cwde
xchg
sbb
imul
loop
(bad)
out
mov
fwait
popf
nop
mov
nop
lods
int
test
mov
push
sbb
adc
dec
sub
sbb
dec
adc
sbb
loop
mov
xchg
mov
loope
test
loope
loop
not
dec
push
dec
cmp
imul
fidivr
dec
enter
imul
retf
mov
out
pop
je
out
mov
icebp
stos
pusha
push
sbb
dec
pop
sbb
fwait
lods
xchg
mov
dec
add
ret
es
lds
dec
jbe
imul
mov
cmp
stos
inc
call
dec
push
sbb
retf
loop
xchg
mov
xchg
out
cli
jecxz
xchg
push
mul
inc
dec
push
nop
xchg
dec
out
lods
mov
mov
out
stos
in
mov
icebp
inc
mov
out
mov
adc
dec
push
jno
xchg
pop
sbb
retf
loop
xchg
mov
icebp
ret
sbb
retf
stos
in
mov
xchg
out
mov
out
push
test
stos
loope
loop
xchg
xchg
mov
loope
mov
fiadd
or
retf
cmps
out
mov
icebp
jle
push
sbb
mov
cwde
lods
pop
pop
sbb
fwait
mov
imul
out
stos
loopne
xchg
dec
push
sbb
mov
sbb
push
js
out
cmps
loopne
xchg
dec
push
cwde
lods
cmp
ret
fwait
mov
adc
xchg
pop
xchg
pushf
iret
mov
out
ret
fwait
mov
add
sbb
outs
je
add
sbb
retf
loop
xchg
mov
jae
cmps
loope
imul
fs
imul
ret
mov
out
mov
sbb
out
xchg
(bad)
(bad)
fsubrp
jecxz
xchg
es
sub
fs
push
xchg
out
mov
out
push
imul
scas
pop
fcomp
movs
xor
imul
in
mov
dec
add
ret
cmps
xor
fbld
imul
cmps
sbb
xor
sahf
pushf
adc
loope
push
fwait
xchg
mov
and
popf
inc
call
mov
xor
imul
xor
dec
push
sbb
retf
mov
xchg
mov
dec
add
jno
xchg
pop
sbb
retf
mov
xchg
mov
icebp
ds
loope
call
mov
sbb
sbb
xchg
pushf
out
loope
cmp
loope
scas
inc
pop
fldenv
sbb
je
xchg
sti
mov
xchg
mov
pushf
out
loope
cmp
lahf
out
adc
push
sbb
retf
and
mov
out
(bad)
out
cmps
push
into
xchg
mov
fist
not
dec
push
jno
xchg
pop
sbb
push
jbe
mov
push
dec
xor
or
add
pop
imul
test
mov
out
movs
and
loop
pop
jmp
loope
pop
xchg
loope
call
lds
call
mov
xchg
mov
add
inc
lahf
test
sbb
imul
div
push
sbb
retf
stos
in
mov
icebp
mov
mov
loope
mov
sti
mov
daa
inc
dec
push
out
jmp
imul
div
lahf
out
gs
sbb
inc
shr
stos
popf
cmc
jnp
dec
dec
loopne
push
cmps
pushf
sub
js
mov
dec
imul
ds
sbb
or
out
inc
not
dec
push
xchg
ds
dec
imul
xor
xchg
fistp
sbb
aas
dec
dec
push
mov
pushf
test
(bad)
outs
aaa
sbb
imul
cmps
sbb
imul
xor
sbb
or
dec
add
jno
adc
add
sbb
(bad)
fdiv
sbb
cmps
inc
dec
push
nop
xchg
mov
xchg
fsubp
or
dec
cmp
dec
dec
icebp
push
imul
inc
xor
(bad)
sti
mov
sbb
sbb
dec
cmps
sbb
mov
imul
xchg
cmp
icebp
xchg
pushw
sbb
mov
fisub
imul
mov
sbb
fwait
sbb
cmps
stc
xor
je
xchg
cmp
xchg
out
dec
out
out
push
neg
mov
call
push
ins
outs
(bad)
out
bnd
jmp
jae
sbb
mov
dec
push
nop
lods
movs
mov
xor
stos
popf
cmc
sbb
fld
cwde
pushf
in
sbb
fstp
push
repnz
pop
xchg
push
jbe
mov
push
xchg
cs
push
sbb
mov
xchg
pop
lahf
push
je
add
sub
inc
addr16
sbb
out
mov
pop
imul
in
cmp
popf
fnsave
pop
in
cmp
jno
dec
push
sbb
mul
inc
dec
push
jg
or
push
fmul
loopne
xchg
inc
bound
stos
popf
cmc
sbb
pop
jne
jno
cmps
push
sbb
clc
nop
cs
fild
dec
je
add
sbb
dec
je
add
sbb
dec
jbe
push
push
jae
and
jae
and
icebp
push
addr16
sbb
mov
out
(bad)
(bad)
pop
loope
mov
and
out
retf
imul
sbb
cs
cmps
sbb
popa
xor
je
cmp
cs
into
mov
xor
je
cmp
cs
bound
xor
je
cmp
cs
push
mov
cmps
push
xor
lahf
div
sbb
sbb
dec
dec
jae
mov
xor
nop
push
pushw
sbb
dec
dec
jae
mov
cmp
nop
inc
pushw
sbb
dec
dec
jae
mov
mov
or
icebp
jb
push
sbb
dec
dec
jae
mov
ins
retf
icebp
bound
sbb
mov
je
cmp
cs
jle
pop
imul
sbb
cs
mov
std
imul
cmp
cs
fidivr
imul
cmp
cs
(bad)
mov
imul
inc
dec
push
out
(bad)
(bad)
pop
in
loop
inc
inc
mov
push
and
dec
adc
je
xchg
jnp
test
dec
neg
dec
push
mov
add
pop
imul
pop
cmps
sbb
and
in
jnp
mov
dec
dec
push
mov
add
pop
imul
pop
into
mov
imul
sub
sbb
mov
sub
rcr
xor
xchg
dec
jbe
in
push
push
jae
mov
xor
xchg
sbb
mov
sub
fistp
sbb
mov
dec
jbe
in
push
push
jae
mov
add
mov
mov
sub
rcr
cmp
sbb
mov
jbe
in
push
push
jae
mov
xor
nop
into
push
loope
dec
rcr
add
sbb
xor
in
push
push
jae
mov
cmp
nop
jmp
loope
mov
jnp
mov
dec
dec
push
mov
add
pop
imul
pop
retf
imul
fidivr
(bad)
sti
call
mov
icebp
les
push
jno
xchg
pop
sbb
loope
loop
jbe
mov
push
dec
or
out
int
or
inc
sbb
cmp
imul
pop
ja
push
xchg
cs
cmp
imul
pop
jp
pop
imul
loopne
loop
cs
xor
sbb
dec
jbe
imul
jno
xchg
pop
sbb
scas
lds
es
sbb
mul
dec
dec
push
mov
add
sub
rcr
add
jae
lds
inc
or
call
or
dec
sahf
dec
add
(bad)
je
add
imul
xchg
dec
xchg
loope
mov
fiadd
dec
loope
pop
rcr
add
sub
out
pop
sbb
ficomp
sbb
pop
loope
or
call
or
dec
sahf
dec
add
(bad)
je
or
mov
add
add
sbb
dec
je
add
sbb
repnz
imul
imul
jg
sbb
imul
add
jae
mov
sbb
push
imul
add
sub
rcr
add
sub
out
pop
sbb
pop
jbe
imul
jno
dec
push
dec
add
lds
es
je
adc
sbb
bound
pop
cmp
sbb
dec
loope
pop
rcr
add
sub
out
pop
sbb
pop
jbe
imul
jno
dec
push
dec
add
pop
imul
ret
je
adc
imul
mov
xchg
jnp
xchg
dec
je
xchg
jnp
mov
add
mov
xor
dec
push
sbb
es
sub
ret
mov
push
jae
cmps
std
cmp
hlt
nop
mov
sub
imul
jae
data16
jbe
imul
inc
es
sbb
jbe
mov
push
jno
xchg
pop
sbb
dec
div
jg
pop
sbb
dec
loope
pop
rcr
add
sub
out
pop
sbb
sub
in
sbb
or
dec
sahf
dec
add
fwait
ret
sub
sbb
in
test
push
sbb
xor
pop
imul
sub
sbb
cmps
sub
ins
mov
push
jae
es
sbb
loope
adc
sbb
and
out
jp
pop
imul
pop
cs
sbb
je
add
push
sbb
fs
dec
sahf
dec
add
fwait
ret
sub
sbb
in
sahf
mov
aaa
or
sbb
dec
loope
pop
rcr
add
sub
out
pop
sbb
bound
sbb
and
dec
push
sbb
loopne
sbb
sbb
lds
pop
sbb
dec
not
dec
dec
push
mov
and
and
out
jp
pop
imul
pop
or
jae
es
sbb
jbe
push
push
jno
dec
push
dec
add
(bad)
je
add
sbb
mov
pushf
test
fnstenv
mov
sub
imul
jae
es
sbb
jbe
imul
jg
push
sbb
dec
push
sbb
es
ret
sub
ret
mov
push
jae
cmps
pop
cmp
mov
jae
mov
sub
imul
jae
and
jno
dec
push
sbb
lea
sbb
push
sbb
jbe
mov
push
jno
xchg
pop
sbb
dec
not
dec
dec
push
mov
add
sub
rcr
add
sub
out
pop
sbb
pop
jbe
imul
pop
dec
push
sbb
sub
imul
js
pop
sbb
xchg
lds
and
icebp
mov
mov
push
out
jp
pop
imul
pop
or
jae
es
sbb
jbe
imul
imul
add
pop
imul
ret
je
adc
sbb
mov
xchg
jnp
xchg
dec
je
xchg
jnp
mov
add
sbb
(bad)
sbb
je
add
cdq
cmp
ret
dec
jbe
mov
push
jno
dec
push
sbb
in
call
jnp
xchg
dec
je
xchg
jnp
mov
add
push
sbb
fstp
imul
add
cdq
cmp
mov
mov
push
jno
dec
push
sbb
in
add
mov
fiadd
dec
loope
pop
rcr
add
sub
out
pop
sbb
push
je
add
or
dec
sahf
dec
add
pop
ret
sub
sbb
push
icebp
mov
sbb
sbb
out
jp
pop
imul
pop
cs
jae
es
imul
add
cdq
cmp
ret
dec
jbe
mov
push
jno
dec
push
sbb
in
xchg
dec
je
xchg
jnp
xchg
dec
je
xchg
jnp
mov
add
push
sbb
mov
imul
add
cdq
cmp
std
shr
jbe
mov
push
jae
cmps
ins
cmp
mov
icebp
xor
aaa
loope
mov
sahf
xchg
mov
inc
xor
stos
popf
cmc
jae
dec
cmps
pop
and
add
loop
jbe
mov
push
out
inc
div
pushf
mov
nop
lods
es
dec
icebp
ja
loope
call
rcr
loop
aaa
loope
mov
jnp
xchg
dec
neg
dec
dec
push
xchg
cs
sbb
push
out
jp
pop
imul
loopne
loop
cs
xor
sbb
dec
jbe
imul
jno
xchg
pop
sbb
scas
lds
es
sbb
test
dec
push
mov
add
sub
rcr
add
jae
lds
inc
or
call
or
dec
sahf
dec
add
(bad)
je
adc
sbb
sbb
push
or
sbb
dec
loope
pop
rcr
add
sub
out
pop
sbb
bound
sbb
pop
loope
or
call
or
dec
sahf
dec
add
(bad)
je
adc
sbb
jle
sub
sbb
dec
je
add
sbb
dec
je
add
sbb
repnz
imul
imul
jg
test
imul
add
jae
mov
sbb
xchg
push
push
sbb
dec
loope
pop
rcr
add
sub
out
pop
sbb
sub
pop
je
add
cdq
cmp
ret
dec
jbe
mov
push
jae
cmps
icebp
push
imul
test
cwde
test
sbb
fs
sub
sbb
or
div
push
xchg
pop
sbb
dec
jbe
push
push
out
cmps
sbb
mov
imul
sti
in
pop
sbb
or
and
jno
dec
push
sbb
mul
dec
push
bnd
push
jae
es
sbb
loope
adc
sbb
and
out
jp
pop
imul
pop
cs
sbb
je
add
arpl
dec
push
cdq
cmp
ret
dec
jbe
mov
push
jae
cmps
dec
push
imul
retf
nop
xchg
dec
out
lods
and
out
jp
pop
imul
pop
cs
sbb
je
add
mov
dec
push
jno
dec
sahf
dec
add
fwait
ret
sub
sbb
in
xor
sahf
mov
jae
mov
sub
imul
jae
es
sbb
je
add
sbb
push
sbb
jbe
mov
push
jno
xchg
pop
sbb
dec
test
dec
push
mov
add
sub
rcr
add
sub
out
pop
sbb
pop
je
add
push
sbb
fstp
imul
imul
sub
pop
imul
retf
sbb
jle
pop
imul
sub
jmp
nop
lods
and
out
jp
pop
imul
pop
or
jno
dec
push
sbb
out
push
sbb
jp
imul
add
pop
imul
ret
je
adc
sbb
out
test
dec
je
xchg
jnp
xchg
dec
je
xchg
jnp
mov
add
jbe
imul
retf
dec
push
sbb
dec
push
sbb
es
sub
ret
mov
push
jae
cmps
cmp
(bad)
enter
imul
jae
mov
pop
retf
nop
es
sbb
jbe
imul
jne
push
sbb
jbe
mov
push
jno
xchg
pop
sbb
dec
div
jbe
push
mov
add
sub
rcr
add
sub
out
pop
sbb
pop
jbe
imul
xchg
dec
push
sbb
push
jbe
imul
cmp
pop
sbb
xchg
lds
and
icebp
ficom
sbb
out
mov
out
jp
pop
imul
pop
cs
jno
dec
push
sbb
arpl
dec
push
cdq
cmp
mov
mov
push
jno
dec
push
sbb
in
add
aaa
push
sbb
dec
loope
pop
rcr
add
sub
out
pop
sbb
push
je
add
je
add
cdq
cmp
ret
dec
jbe
mov
push
jno
dec
push
sbb
in
xchg
dec
je
xchg
jnp
xchg
dec
je
xchg
jnp
mov
add
je
add
sbb
dec
jno
xchg
pop
sbb
dec
les
es
sbb
neg
jbe
push
mov
add
sub
rcr
add
sub
out
pop
sbb
pop
jbe
imul
sub
sbb
push
jbe
imul
jno
xchg
pop
sbb
mov
pop
imul
cmps
push
push
sbb
(bad)
mov
jmp
push
out
mov
pop
icebp
loop
test
mov
inc
xor
stos
popf
cmc
jae
dec
dec
aam
sub
mov
pop
cmc
loop
je
add
push
sbb
sbb
jno
dec
push
cdq
xchg
cmp
icebp
not
loop
popf
out
inc
call
sbb
xor
nop
test
imul
push
mov
fisubr
mov
xchg
loope
test
fst
mov
dec
out
pop
jbe
fisttp
jno
dec
push
cdq
add
out
int
add
loop
sub
push
out
mov
dec
mov
push
jno
xchg
pop
sbb
test
mov
call
fisubr
and
jae
ret
pop
loope
mov
or
jae
pop
imul
sbb
mul
mov
call
xchg
fidiv
inc
shr
mov
dec
dec
aad
xor
(bad)
out
sbb
std
pop
sbb
mov
pushf
imul
add
mul
ja
push
mov
repnz
inc
out
xor
sbb
pop
jbe
fisttp
xchg
out
dec
loope
xchg
push
imul
jae
push
nop
fwait
addr16
nop
lods
into
arpl
imul
pop
sbb
retf
push
out
mov
icebp
jb
push
sbb
xor
sbb
pop
jbe
fisttp
xchg
out
dec
loope
xchg
push
neg
jae
push
cdq
push
mov
ins
jp
or
imul
push
imul
push
xchg
fucomip
xor
sbb
pop
jbe
fimul
xchg
out
dec
loope
xchg
push
not
jl
push
cdq
push
mov
ins
jp
push
test
dec
xchg
pushf
imul
push
imul
xchg
dec
imul
sub
sbb
or
imul
out
cmp
jno
call
retf
push
out
mov
icebp
loop
push
sbb
mov
sahf
fs
inc
imul
in
scas
pop
imul
sbb
or
imul
out
cmp
jno
call
retf
push
out
mov
icebp
ds
push
sbb
xor
adc
pop
jbe
(bad)
xchg
out
dec
loope
xchg
push
mul
jl
push
cdq
push
mov
ins
jp
aas
stos
sub
pushf
imul
push
imul
xchg
inc
imul
ja
pop
imul
sbb
or
imul
out
(bad)
(bad)
fwait
in
mov
nop
lods
into
arpl
cmp
jno
cld
pop
sbb
retf
push
out
mov
icebp
xchg
sbb
dec
je
add
pop
imul
shr
xchg
pushf
imul
xchg
dec
div
(bad)
mov
jno
xchg
pop
sbb
lock
pop
imul
xchg
dec
test
loope
stos
imul
sbb
fidiv
loop
jmp
out
mov
fild
adc
test
stos
dec
dec
cmp
imul
test
out
xchg
(bad)
fst
jae
push
xchg
aaa
dec
pop
dec
cmp
popf
frstor
fisubr
and
dec
sbb
sbb
inc
inc
mov
sbb
(bad)
sti
cwde
xchg
sbb
dec
dec
aad
daa
pop
push
iret
call
cwde
test
sbb
ins
stos
sub
pushf
xchg
xor
fbstp
push
mov
repnz
out
xchg
into
mov
sbb
pop
jbe
(bad)
xchg
out
mov
mul
jle
push
cdq
(bad)
mov
imul
mov
pushf
mov
dec
sub
jmp
jbe
(bad)
xchg
out
mov
not
jle
push
mov
pushf
test
pushf
(bad)
mov
sahf
movs
cwde
mov
out
cmp
jno
std
pop
sbb
retf
repz
xchg
mov
icebp
retf
sbb
repz
loope
mov
ins
jp
pop
stos
sub
pushf
xchg
cdq
or
dec
sahf
movs
cwde
mov
out
cmp
jno
std
pop
sbb
retf
repz
xchg
mov
icebp
push
pop
push
sbb
repz
loope
mov
ins
jp
push
stos
sub
pushf
xchg
dec
or
dec
xchg
jmp
jmp
in
loope
mov
ins
jp
jb
sub
pushf
xchg
sub
movs
cwde
mov
out
cmp
jno
std
pop
sbb
retf
repz
xchg
mov
icebp
jb
push
sbb
repz
loope
mov
ins
jp
mov
sub
pushf
xchg
loope
imul
cwde
mov
out
cmp
jno
std
pop
sbb
retf
repz
xchg
mov
icebp
mov
sbb
mov
(bad)
out
xchg
mov
fucomip
repz
loope
mov
ins
jp
imul
xchg
mov
movs
cwde
mov
out
cmp
jno
cli
pop
sbb
retf
repz
xchg
mov
icebp
into
pop
push
sbb
repz
loope
mov
ins
jp
lods
sub
pushf
xchg
xchg
or
retf
or
xchg
out
mov
test
mov
jmp
jno
out
pop
sbb
shr
mov
fnstsw
fwait
icebp
pushf
mov
cdq
(bad)
mov
push
call
mov
push
out
jne
sbb
lock
pusha
dec
push
nop
fwait
mov
jmp
xor
and
jno
out
pop
sbb
int
adc
retf
repnz
mov
fldenv
sbb
neg
push
mov
out
dec
adc
jmp
loop
xchg
mov
push
out
jne
sbb
mov
and
sbb
fcomp
not
dec
jmp
out
xchg
mov
(bad)
retf
out
xchg
mov
jno
xchg
pop
sbb
retf
loop
xchg
mov
icebp
jmp
call
push
or
sbb
fisttp
stos
mov
fnstsw
je
aam
mov
jne
loope
mov
push
in
add
imul
jns
nop
push
jns
mov
or
jno
xchg
pop
sbb
retf
loop
xchg
mov
icebp
jle
push
sbb
mov
jbe
retf
jno
xchg
pop
sbb
retf
loop
xchg
mov
icebp
xchg
pop
push
sbb
mov
repnz
es
sbb
xchg
mov
out
cmps
cmp
stos
aaa
dec
push
out
(bad)
(bad)
fwait
leave
pushf
mov
nop
lods
ret
fwait
in
mov
dec
add
pop
imul
in
mov
dec
xor
sbb
sbb
pushf
xchg
mov
out
cmps
ror
imul
jg
fwait
in
mov
dec
sbb
imul
in
mov
call
out
xchg
push
jbe
mov
push
xchg
out
mov
out
push
mul
dec
push
call
loop
xchg
mov
icebp
into
pop
push
sbb
dec
jbe
mov
push
xchg
out
mov
out
push
mul
mov
call
jge
imul
xchg
mov
out
mov
dec
adc
pushf
xchg
mov
out
mov
into
out
xchg
mov
fucomip
repz
xchg
mov
push
in
jp
sbb
stos
loope
mov
jno
out
pop
sbb
stos
(bad)
pop
imul
in
mov
dec
or
imul
or
shr
mov
dec
cmp
imul
in
mov
dec
cmp
imul
int
mov
repnz
lds
cdq
xlat
dec
loop
xchg
mov
ins
jnp
fwait
int
mov
fucomip
dec
loop
xchg
mov
repnz
int
mov
call
imul
loop
shr
xchg
mov
fist
xchg
pushf
xchg
mov
out
es
xchg
pushf
xchg
mov
out
cmps
popa
packssdw
fnstsw
fwait
in
mov
dec
or
rcr
loopne
xchg
sbb
stos
js
push
xchg
(bad)
xchg
out
ret
bound
jnp
je
sub
in
xchg
mov
cwde
popf
in
sbb
fwait
in
mov
dec
xchg
sti
jmp
dec
push
xchg
out
mov
out
push
imul
dec
push
xchg
(bad)
mov
out
sbb
out
xor
sbb
dec
or
xchg
pushf
xchg
mov
out
and
out
mov
cld
imul
je
add
inc
js
push
dec
sbb
in
mov
dec
cmp
loope
xchg
and
call
inc
ficom
out
inc
jecxz
xchg
mov
cmc
xchg
mov
icebp
ss
push
sbb
mov
jbe
sbb
push
icebp
pop
pop
push
sbb
cmps
mov
xchg
mov
inc
xor
xchg
cld
shr
or
or
dec
dec
cmp
mov
rcr
fiadd
fisubr
jno
dec
add
sub
imul
mov
stos
cmp
dec
sbb
sbb
pop
icebp
bound
sbb
iret
cmc
xchg
push
xchg
cs
mov
fisubr
sbb
push
sbb
(bad)
out
mov
fwait
lods
xchg
dec
test
dec
idiv
dec
push
jno
dec
push
sbb
fidivr
or
imul
jp
push
dec
sub
imul
fimul
jno
dec
push
sbb
retf
scas
not
not
jnp
push
jae
mov
fisub
adc
fnstsw
loope
imul
jne
push
sbb
dec
push
sub
enter
pop
imul
cwde
test
add
imul
retf
push
dec
loop
jmp
fcom
sahf
inc
nop
lods
int
pop
loop
xchg
mov
mov
lods
hlt
xchg
mov
repnz
cmps
ins
or
(bad)
std
repz
hlt
int
or
nop
stos
mov
fnstsw
je
aam
mov
mov
cdq
(bad)
mov
mov
lods
hlt
xchg
mov
xchg
out
std
repz
jb
outs
stos
iret
frstor
push
fucomip
in
out
dec
idiv
jg
push
nop
test
inc
fcomp
mov
sub
retf
mov
jno
out
pop
sbb
add
imul
xchg
inc
or
imul
pop
jns
push
jae
ret
fwait
xchg
retf
scas
not
push
sbb
retf
xor
sub
retf
mov
icebp
mov
mov
jae
ret
fwait
xchg
dec
nop
pop
icebp
pop
inc
push
sbb
mov
jbe
mov
push
jno
out
pop
sbb
mov
pop
imul
xchg
dec
idiv
(bad)
sub
out
ret
sub
dec
dec
push
sbb
xchg
pop
sbb
fidivr
shr
jbe
retf
or
icebp
push
pop
push
sbb
xchg
aaa
shl
xchg
movs
inc
mov
pop
iret
sub
add
dec
push
jmp
push
jno
out
pop
sbb
mov
pop
imul
mov
dec
neg
dec
push
xchg
(bad)
lods
repz
ret
sub
dec
dec
push
sbb
xchg
pop
sbb
fidivr
shr
jbe
cmc
nop
jle
push
sbb
mov
(bad)
lock
ret
sub
mov
dec
push
sbb
xchg
xchg
fiadd
dec
je
add
sbb
dec
jbe
imul
imul
sbb
(bad)
pop
lods
add
add
icebp
mov
lods
or
xchg
test
sti
icebp
out
push
test
push
xchg
out
icebp
out
int
out
into
and
imul
jae
ret
imul
mov
imul
and
xchg
test
es
stc
sub
ins
fbld
lahf
bnd
push
sbb
push
xchg
test
sti
icebp
out
push
imul
dec
push
xchg
out
icebp
out
int
out
into
and
imul
jae
ret
imul
mov
imul
and
xchg
test
es
stc
sub
ins
fbld
loope
fbld
cmps
int
dec
push
out
mov
fwait
test
out
(bad)
repz
(bad)
fst
(bad)
pop
stc
retf
pop
imul
aad
dec
in
sub
pop
stos
es
imul
xor
sbb
pop
int
dec
popa
sbb
push
icebp
rol
sbb
or
cwde
sbb
lds
push
sbb
dec
test
xchg
fstp
push
sbb
(bad)
xor
mov
sbb
fstp
push
sbb
pop
movs
cmp
je
xchg
jnp
xchg
dec
je
add
sbb
dec
je
add
sbb
push
jno
xchg
pop
sbb
scas
lds
and
icebp
outs
pop
push
sbb
dec
sbb
dec
je
add
pop
gs
push
jae
cmps
mov
(bad)
ins
adc
dec
and
imul
inc
es
sub
add
push
jno
xchg
pop
sbb
cmps
cmp
dec
xchg
pushf
(bad)
mov
mov
(bad)
push
jae
push
loope
(bad)
mov
mov
xchg
mov
sbb
xchg
rol
(bad)
retf
cmps
hlt
xchg
mov
xchg
out
loop
out
push
jbe
fisttp
jno
xchg
pop
sbb
push
stos
pop
imul
sbb
not
scas
push
pop
fstp
dec
popf
cmp
cli
pop
sbb
sbb
or
sbb
push
icebp
jmp
loope
loop
aaa
shl
xchg
pushf
ret
mov
push
jae
repnz
dec
not
gs
push
dec
add
sbb
fwait
mov
mov
dec
add
sbb
push
ins
pop
imul
imul
icebp
add
sbb
dec
jbe
push
push
jae
mov
sbb
nop
xor
sbb
push
mul
test
and
imul
std
cmp
je
add
sbb
or
dec
sbb
sbb
fisubr
inc
inc
mov
(bad)
sti
cwde
xchg
sbb
dec
dec
aam
and
iret
fnstcw
dec
push
xchg
cs
popf
loope
inc
call
int
sbb
sbb
not
arpl
and
dec
push
sbb
sbb
and
push
push
ins
jo
nop/reserved
adc
push
jbe
sbb
call
inc
push
sbb
jae
lods
sub
push
out
call
sub
sub
cli
pop
sbb
(bad)
fwait
cmc
xchg
mov
nop
xchg
dec
out
lods
es
loope
xchg
cli
out
int
or
retf
mul
xchg
mov
pushf
mov
loope
cmp
loope
jp
push
sbb
adc
out
(bad)
in
mov
out
or
adc
pop
and
out
retf
(bad)
in
mov
icebp
outs
lds
xor
xchg
out
ja
ins
je
fwait
std
xchg
mov
xor
xchg
jecxz
xchg
int
sbb
xchg
mov
mov
sahf
push
add
pushf
(bad)
mov
out
retf
ret
mov
xchg
out
scas
jecxz
xchg
gs
rcl
je
xchg
jnp
mov
dec
push
cwde
pushf
bound
sbb
and
or
sbb
push
imul
fisttp
mov
jmp
cmp
cli
pop
sbb
and
or
sbb
dec
dec
icebp
xchg
movs
loope
xor
and
or
sbb
push
imul
add
pop
sbb
pop
mul
dec
push
nop
xchg
dec
out
lods
out
push
xchg
dec
daa
pop
arpl
jle
dec
push
jae
cmps
sbb
dec
test
rcr
push
or
ins
arpl
adc
imul
xor
dec
jmp
in
mov
fiadd
lds
loop
out
xchg
mov
out
add
push
dec
mov
push
dec
push
sub
and
sub
sub
sub
xor
sub
cmp
sub
add
sub
or
sub
adc
sub
pushf
mov
push
sbb
dec
loope
jnp
std
adc
xchg
mov
out
dec
bound
push
dec
mov
adc
sub
add
push
or
imul
not
sbb
loope
xchg
dec
loope
jnp
adc
mov
fwait
rcl
mov
sbb
jmp
in
mov
xchg
out
xchg
jecxz
xchg
push
not
out
cmps
jecxz
xchg
iret
fstp
xor
mov
loope
mov
imul
out
dec
loope
xchg
push
loope
adc
sbb
into
mov
sbb
outs
je
add
dec
mov
push
jae
cmps
dec
adc
loope
adc
sbb
cmps
call
loope
mov
fsubp
retf
pop
out
mov
pushf
sahf
mov
out
retf
call
cdq
push
ds
pop
imul
icebp
dec
push
sbb
mov
sbb
fwait
sbb
call
dec
push
xchg
out
loope
xchg
int
out
into
and
imul
call
jbe
mov
xchg
test
xchg
sbb
loope
scas
inc
and
xchg
dec
push
ins
dec
and
jae
es
sbb
mov
popf
retf
icebp
push
inc
push
sbb
neg
(bad)
loop
mul
xchg
mov
fsubp
retf
pop
out
mov
xchg
out
mov
jbe
mov
push
xchg
out
mov
neg
scas
pop
jbe
imul
out
dec
loope
xchg
push
loope
ja
pop
sbb
into
mov
sbb
outs
je
add
pop
mov
push
jae
cmps
dec
adc
loope
ja
pop
sbb
cmps
call
xchg
push
loope
call
jb
sbb
mov
loope
cmp
jae
and
jno
cdq
pop
sbb
dec
idiv
popa
dec
push
out
push
mov
cmps
rcl
imul
outs
dec
push
fucomip
dec
loope
xchg
dec
cmc
and
clc
fwait
sbb
pop
out
mov
sub
dec
and
adc
dec
jbe
mov
cmps
std
adc
loope
ja
pop
sbb
cmps
pushf
sbb
imul
sbb
cmps
nop
xchg
addr16
lods
ret
fwait
sbb
jmp
xchg
mov
jno
xchg
pop
sbb
retf
jmp
xchg
mov
icebp
inc
sbb
mov
jno
dec
push
sbb
retf
pop
out
mov
out
into
mov
adc
sahf
movs
push
loope
imul
jae
and
jno
cdq
pop
sbb
dec
div
dec
push
out
into
mov
adc
not
outs
dec
push
cwde
test
sbb
fwait
sbb
jmp
xchg
mov
jno
xchg
pop
sbb
retf
jmp
xchg
mov
icebp
inc
inc
push
sbb
mov
jno
dec
push
sbb
retf
pop
out
mov
out
bound
adc
sahf
movs
push
loope
imul
jae
and
jno
cdq
pop
sbb
dec
neg
bound
out
bound
adc
idiv
xchg
jg
nop
lods
ret
fwait
sbb
jmp
xchg
mov
jno
cdq
pop
sbb
retf
jmp
xchg
mov
icebp
scas
inc
push
sbb
mov
jno
dec
push
sbb
retf
pop
out
mov
out
sbb
adc
sahf
movs
push
loope
imul
jae
and
jno
cdq
pop
sbb
dec
test
sbb
adc
mul
push
dec
loope
xchg
int
out
into
and
imul
call
je
add
pop
imul
push
inc
push
sbb
test
dec
push
lock
dec
push
sbb
mov
repnz
inc
test
xchg
mov
out
retf
xchg
mov
and
push
xor
jae
and
jno
cdq
pop
sbb
dec
idiv
arpl
out
sbb
push
imul
imul
out
dec
xchg
pushf
xchg
mov
out
dec
ins
mov
loop
xchg
pushf
push
loope
cmp
fwait
in
xchg
mov
dec
add
pop
imul
in
xchg
mov
dec
adc
or
mov
sbb
fwait
sbb
xchg
dec
neg
dec
push
cdq
(bad)
dec
loope
xchg
dec
imul
dec
je
add
pop
imul
(bad)
dec
push
sbb
test
push
lock
dec
push
sbb
mov
repnz
inc
test
xchg
mov
out
retf
xchg
mov
and
push
xor
jae
and
jno
cwde
pop
sbb
dec
div
dec
push
out
outs
sbb
dec
not
dec
push
cdq
out
mov
out
dec
xchg
xchg
push
loope
call
jb
sbb
mov
scas
(bad)
mov
out
ja
imul
out
xchg
(bad)
fst
push
xchg
pushf
sahf
mov
out
es
sub
pushf
sahf
mov
out
cmps
adc
imul
jnp
mov
(bad)
loop
mul
xchg
mov
pushf
xor
sbb
dec
je
add
sbb
dec
push
sbb
es
xchg
dec
test
mov
sbb
imul
fidivr
mov
and
cli
pop
sbb
pop
xchg
data16
pop
imul
out
into
and
imul
nop
test
push
xchg
(bad)
mov
dec
jno
xlat
pop
sbb
test
dec
push
jae
ret
fwait
jmp
add
mov
out
mov
mov
xchg
sahf
mov
out
xchg
pop
jmp
pop
sbb
mov
sbb
fucomi
in
mov
dec
out
jmp
xchg
mov
out
mov
lea
dec
je
out
out
in
mov
jae
es
stc
sub
lods
lahf
mov
out
sbb
imul
icebp
jp
push
sbb
mul
imul
outs
and
jae
es
sbb
jbe
sti
push
push
icebp
ror
sbb
retf
jmp
test
loope
loopne
cli
in
mov
fiadd
dec
je
add
lods
lahf
mov
out
cli
sbb
imul
mov
or
call
push
ins
xchg
(bad)
fnsave
ret
mov
xchg
mov
dec
cmp
mov
lahf
mov
out
mov
push
xchg
out
mov
je
add
stos
in
xchg
mov
icebp
mov
push
sbb
imul
dec
push
fisubr
stos
pop
imul
imul
xor
and
jno
cli
pop
sbb
aaa
(bad)
pop
imul
lods
sub
sbb
sahf
icebp
in
ret
call
mov
adc
nop
mov
out
sbb
stc
nop
out
scas
jecxz
xchg
(bad)
fptan
jp
imul
inc
loope
arpl
inc
inc
xor
xchg
cld
call
sbb
adc
sub
loope
mov
fsubp
or
and
dec
push
sbb
sbb
popf
fs
adc
jnp
mov
xchg
jnp
test
dec
test
mov
xchg
ficom
test
sahf
mov
outs
dec
push
and
mov
out
bound
sbb
inc
rcr
push
inc
loope
ja
pop
sbb
(bad)
out
mov
pop
in
loop
and
sbb
inc
loope
inc
rcr
or
sbb
sub
hlt
nop
sub
hlt
nop
inc
dec
push
sbb
xchg
dec
imul
dec
push
ins
pusha
mov
icebp
test
icebp
jp
push
sbb
xchg
dec
imul
jae
lods
sub
ins
jge
sub
sahf
dec
push
sbb
test
fldcw
mov
sub
test
ins
ins
lds
cmp
push
push
and
mov
xchg
jbe
sbb
nop
add
test
sub
ins
lds
sbb
push
push
and
sbb
ss
cmp
nop
add
pop
retf
imul
xchg
jbe
sbb
mov
or
push
inc
dec
dec
cmp
sbb
sbb
imul
inc
mov
mov
adc
dec
push
sbb
cmp
sti
dec
push
sbb
cmp
cwde
or
mov
dec
push
sbb
cmp
sti
dec
push
sbb
cmp
cwde
or
mov
dec
push
sbb
cmp
sti
dec
push
sbb
cmp
cwde
or
mov
dec
push
sbb
cmp
sti
dec
push
sbb
xchg
cld
cmp
mul
lods
into
and
push
ins
je
loop
pop
dec
sbb
sbb
ficom
loop
loop
stos
cmp
nop
lods
or
sbb
and
pop
mov
add
bound
ds
cwde
movs
pop
pop
lock
stos
cmp
call
neg
imul
push
je
cmp
inc
shr
pop
push
sbb
push
sbb
sbb
imul
cmp
imul
cmp
xchg
mov
out
mov
mov
xchg
xchg
push
xchg
lds
arpl
xchg
gs
dec
in
mov
das
push
(bad)
push
sbb
cmp
or
mov
dec
push
sbb
cmp
or
mov
dec
push
sbb
cmp
or
mov
dec
push
sbb
cmp
or
mov
dec
push
sbb
cmp
or
mov
dec
push
sbb
cmp
or
mov
dec
push
sbb
cmp
or
mov
dec
push
sbb
cmp
or
mov
dec
push
sbb
cmp
or
mov
dec
push
sbb
cmp
or
mov
dec
push
sbb
cmp
or
mov
dec
push
sbb
cmp
or
mov
dec
push
sbb
cmp
or
mov
dec
push
sbb
cmp
or
mov
dec
push
sbb
cmp
or
mov
dec
push
sbb
cmp
or
mov
dec
push
sbb
cmp
sti
dec
push
sbb
cmp
sti
dec
push
sbb
cmp
sti
dec
push
sbb
cmp
sti
dec
push
sbb
cmp
sti
dec
push
sbb
cmp
sti
dec
push
sbb
cmp
sti
dec
push
sbb
cmp
sti
dec
push
sbb
cmp
sti
dec
push
sbb
cmp
sti
dec
push
sbb
cmp
sti
dec
push
sbb
cmp
sti
dec
push
sbb
cmp
sti
dec
push
sbb
cmp
sti
dec
push
sbb
cmp
sti
dec
push
sbb
cmp
sti
dec
push
sbb
cmp
cwde
or
mov
dec
push
sbb
cmp
cwde
or
mov
dec
push
sbb
cmp
cwde
or
mov
dec
push
sbb
cmp
cwde
or
mov
dec
push
sbb
cmp
cwde
or
mov
dec
push
sbb
cmp
cwde
or
mov
dec
push
sbb
cmp
cwde
or
mov
dec
push
sbb
cmp
cwde
or
mov
dec
push
sbb
cmp
cwde
or
mov
dec
push
sbb
cmp
cwde
or
mov
dec
push
sbb
cmp
cwde
or
mov
dec
push
sbb
cmp
cwde
or
mov
dec
push
sbb
cmp
cwde
or
mov
dec
push
sbb
cmp
cwde
or
mov
dec
push
sbb
cmp
lahf
or
mov
dec
push
sbb
cmp
sti
dec
push
sbb
cmp
lahf
or
mov
dec
push
sbb
cmp
sti
dec
push
sbb
cmp
lahf
or
mov
dec
push
sbb
cmp
sti
dec
push
sbb
cmp
lahf
or
mov
dec
push
sbb
cmp
sti
dec
push
sbb
cmp
lahf
or
mov
dec
push
sbb
cmp
sti
dec
push
sbb
cmp
lahf
or
mov
dec
push
sbb
cmp
sti
dec
push
sbb
cmp
lahf
or
mov
dec
push
sbb
cmp
sti
dec
push
sbb
cmp
lahf
or
mov
dec
push
sbb
cmp
sti
dec
push
sbb
cmp
or
mov
dec
push
sbb
cmp
or
mov
dec
push
sbb
cmp
or
mov
dec
push
sbb
cmp
or
mov
dec
push
sbb
cmp
or
mov
dec
push
sbb
cmp
or
mov
dec
push
sbb
cmp
or
mov
dec
push
sbb
cmp
or
mov
dec
push
sbb
cmp
or
mov
dec
push
sbb
cmp
or
mov
dec
push
sbb
cmp
or
mov
dec
push
sbb
cmp
or
mov
dec
push
sbb
cmp
or
mov
dec
push
sbb
cmp
or
mov
dec
push
sbb
cmp
sti
dec
push
sbb
cmp
sti
dec
push
sbb
cmp
sti
dec
push
sbb
cmp
sti
dec
push
sbb
cmp
sti
dec
push
sbb
cmp
sti
dec
push
sbb
cmp
sti
dec
push
sbb
cmp
sti
dec
push
sbb
cmp
sti
dec
push
sbb
cmp
sti
dec
push
sbb
cmp
sti
dec
push
sbb
cmp
sti
dec
push
sbb
cmp
lahf
or
mov
dec
push
sbb
cmp
lahf
or
mov
dec
push
sbb
cmp
lahf
or
mov
dec
push
sbb
cmp
lahf
or
mov
dec
push
sbb
cmp
lahf
or
mov
dec
push
sbb
cmp
lahf
or
mov
dec
push
sbb
cmp
lahf
or
mov
dec
push
sbb
cmp
lahf
or
mov
dec
push
sbb
cmp
lahf
or
mov
dec
push
sbb
cmp
lahf
or
mov
dec
push
sbb
cmp
lahf
or
mov
dec
push
sbb
cmp
lahf
or
mov
dec
push
sbb
cmp
lahf
or
mov
dec
push
sbb
cmp
lahf
or
mov
dec
push
sbb
cmp
lahf
or
mov
dec
push
sbb
cmp
lahf
or
mov
dec
push
.byte
.byte
