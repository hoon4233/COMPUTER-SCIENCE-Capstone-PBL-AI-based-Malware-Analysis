jg
jmp
add
fisttp
or
sub
fbld
lds
lds
(bad)
or
sub
stos
jmp
pop
cld
mov
and
ret
sub
stos
dec
mov
stos
sub
iret
mov
dec
sub
outs
xor
lds
stos
mov
fisttp
jne
(bad)
or
adc
sbb
and
lds
stos
xor
push
jl
add
sub
stos
stos
mov
jbe
retf
(bad)
mov
sbb
inc
dec
pusha
cmp
push
or
loopne
push
dec
or
ja
push
and
adc
push
jge
in
sub
inc
pop
std
jg
xor
lds
mov
mov
cmp
dec
push
stos
sub
cs
dec
or
ins
pop
sub
push
test
rol
dec
push
mov
inc
mov
inc
mov
sub
es
mov
cmps
dec
or
push
sbb
inc
pop
sub
lds
and
in
cmp
push
cmp
lds
or
dec
stos
mov
dec
jle
pop
adc
or
push
sbb
jmp
xchg
adc
dec
stos
mov
dec
push
hlt
jbe
pop
and
adc
jne
add
data16
mov
not
int3
scas
movs
and
retf
push
xlat
mov
outs
and
add
mov
inc
idiv
cmps
inc
adc
ret
add
mov
mov
push
sbb
arpl
mov
mov
sub
or
and
mov
inc
enter
or
mov
stos
sub
inc
adc
or
call
dec
or
xlat
cmp
sti
xlat
jnp
sbb
loopne
push
dec
or
in
inc
neg
sar
scas
nop
dec
or
jae
in
jmp
xor
stos
pop
dec
mov
sub
inc
shr
sbb
bound
sub
stos
ret
cdq
ins
or
dec
or
xlat
es
push
pusha
xor
push
or
dec
(bad)
sub
sub
pop
pop
std
jg
ins
inc
js
xor
dec
iret
add
sub
xchg
bound
sub
sub
push
pusha
mov
xor
and
push
neg
xlat
jnp
sbb
or
sub
int3
mov
xchg
mov
dec
or
sub
push
nop
pop
inc
stos
sub
pop
std
jg
xchg
mov
sbb
bound
inc
dec
pusha
stos
sub
ret
or
dec
stos
shl
sub
mov
scas
sbb
dec
clc
sbb
mov
ins
inc
dec
test
fdivr
not
add
sub
cs
not
loopne
pop
dec
or
shr
shr
cwde
or
test
sbb
push
loopne
sub
sub
inc
xor
fild
push
mov
sbb
pop
iret
(bad)
lea
mov
and
int
mov
(bad)
mov
push
jae
retf
(bad)
mov
sbb
add
fldenv
mov
out
aam
bound
sub
shr
or
neg
and
sub
dec
add
dec
cmp
maskmovq
xor
adc
sub
hlt
inc
lea
or
aam
jg
sub
pop
pop
dec
cmp
push
mov
ror
lods
nop
dec
or
sar
sub
retf
(bad)
mov
icebp
dec
fldenv
ret
dec
push
js
adc
xlat
cmp
pop
inc
loopne
push
dec
or
out
inc
(bad)
fild
enter
jge
xlat
cmp
pop
push
bound
pop
mov
lea
or
out
mov
push
ror
sub
fild
enter
enter
adc
adc
push
les
std
jg
jge
xchg
fbstp
gs
(bad)
rcr
sub
int
pop
sub
ins
push
sub
or
lock
jmp
or
call
or
sbb
movs
xchg
dec
or
cmp
push
ins
mov
pop
stos
xchg
jmp
jb
stos
pop
mov
out
aam
sbb
sub
ja
pop
pop
dec
sub
movs
ds
mov
sub
mov
sub
or
shl
fld
or
and
int
push
push
cmp
xchg
ins
mov
sub
adc
loope
pop
and
test
dec
loopne
pop
dec
or
jle
sbb
lds
out
retf
hlt
push
(bad)
mov
stos
pop
jnp
cs
not
or
fcomi
push
(bad)
mov
scas
pop
cli
dec
stos
mov
int
push
push
cmp
xchg
out
cmp
ins
lods
dec
or
jecxz
mov
mov
pop
mov
je
aas
sub
or
je
movs
sub
mov
push
mov
fcomi
push
(bad)
mov
jae
mov
or
test
sub
push
ja
push
(bad)
jmp
or
adc
mov
or
and
jg
inc
push
cmps
inc
shr
dec
adc
hlt
(bad)
dec
pop
pop
and
mov
leave
push
aaa
addr16
pop
sub
jns
xchg
div
fisub
ins
inc
into
scas
xor
cmc
jae
retf
(bad)
mov
sbb
jne
iret
out
aam
sub
test
sub
into
aam
dec
push
mov
movs
cs
fnstcw
or
sti
add
jns
leave
pop
ret
lods
jmp
(bad)
fdiv
mov
(bad)
sbb
outs
ja
xlat
(bad)
mov
fistp
into
scas
xor
out
aam
retf
(bad)
pop
push
ja
push
(bad)
jmp
or
cmp
and
iret
out
aam
push
push
push
dec
jl
push
sbb
mov
adc
repnz
inc
cmps
daa
lock
adc
dec
inc
cmp
xor
sub
(bad)
retf
(bad)
pop
push
sbb
retf
(bad)
mov
lds
xchg
xchg
jle
lock
rol
iret
push
sub
mov
cmps
inc
adc
jmp
aad
mul
ins
mov
(bad)
and
pop
ret
jbe
dec
stos
jle
jp
xlat
mov
and
dec
cld
jle
sbb
xlat
mov
outs
or
push
(bad)
jmp
or
inc
mov
pcmpeqw
shl
and
mov
mov
sub
into
shr
or
xlat
push
or
and
shr
pop
fild
dec
adc
dec
cmp
jae
retf
(bad)
mov
sbb
pop
inc
mov
ins
push
adc
sub
adc
dec
jl
mov
stos
jmp
xlat
sbb
neg
sub
adc
mov
sub
(bad)
dec
push
mov
js
mov
sbb
or
jmp
or
sbb
scas
rol
mov
or
dec
dec
or
sub
test
fcomp
pusha
mov
jmp
lea
pop
iret
(bad)
dec
inc
mov
xchg
pop
aaa
call
mov
jle
mov
scas
inc
dec
test
fcomp
loopne
pop
dec
or
jmp
enter
xchg
imul
cmp
fmul
enter
test
push
sub
pop
sbb
and
iret
out
pop
dec
or
mov
sub
sub
inc
pop
inc
shl
call
xor
call
pop
and
idiv
stos
sub
dec
pop
dec
or
jle
mov
and
and
dec
shl
jmp
xor
push
xlat
dec
or
das
int
rcr
mov
cmps
daa
retf
sub
out
and
jo
push
xor
mov
push
mov
in
dec
stos
sub
adc
mov
dec
stos
js
cmp
xor
imul
mov
stos
movs
retf
jmp
push
pop
inc
loopne
pop
dec
or
sub
sti
dec
push
test
leave
mov
push
js
push
xlat
mov
outs
and
not
jge
stos
imul
dec
or
mov
bound
stos
movs
or
sti
mov
dec
pop
and
mov
mov
or
sub
or
int
push
sub
mov
dec
or
dec
mov
sub
mov
stos
sub
and
jmp
add
pushf
or
and
xor
pop
dec
mov
sub
je
push
sub
lock
retf
shr
daa
fild
dec
push
and
shl
jmp
iret
out
enter
ins
mov
out
shr
pop
push
test
fcomp
test
enter
mov
dec
or
lds
mov
jno
cld
or
dec
push
test
dec
add
sbb
mov
ret
call
or
sti
mov
dec
or
and
jge
sub
cs
mov
push
js
xchg
or
pop
and
mov
aas
sub
and
add
pop
iret
scas
push
cli
dec
stos
xlat
mov
stos
mov
xchg
not
cmp
adc
stos
fild
not
mov
sub
add
mov
dec
stos
js
cmp
imul
rol
dec
pop
adc
lock
stos
pusha
not
sub
stos
mov
retf
fcom
sub
sbb
clc
jle
mov
push
fld
and
dec
lock
jg
and
(bad)
lock
iret
sub
or
ins
inc
mov
mov
xchg
jge
out
or
stos
sub
and
(bad)
lock
iret
inc
pop
xbegin
push
cmp
imul
inc
sub
dec
xor
pop
inc
xor
pop
dec
mov
aam
sub
ret
dec
test
push
pusha
cmp
cmp
add
fild
stos
sub
or
xlat
inc
enter
ins
push
sub
lock
iret
sub
or
jns
pop
or
stos
iret
pushf
or
inc
ins
(bad)
lock
iret
(bad)
dec
push
mov
dec
cmp
push
add
dec
xor
dec
jecxz
mov
jle
xchg
push
dec
xor
push
dec
mov
aam
adc
lds
test
cmp
xlat
mov
into
aam
mov
aam
jl
xlat
cmp
ret
sbb
dec
stos
rol
sub
lock
and
shr
or
sub
ret
sub
jmp
dec
xchg
jmp
sub
sub
sti
sar
stos
sub
dec
mov
xlat
push
mov
mov
add
cli
jp
jge
xlat
cmp
inc
xchg
and
stos
inc
dec
test
fcomp
bound
sub
stos
sub
out
add
push
pop
mov
xchg
inc
dec
or
jbe
shr
in
adc
sub
sub
xor
iret
retf
jle
dec
or
lock
shl
jmp
lea
mov
stos
inc
stos
call
(bad)
sub
fdiv
int3
push
(bad)
mov
inc
test
inc
enter
add
lock
retf
shr
jg
sub
sbb
lods
xor
xlat
(bad)
rol
popf
xor
xlat
ret
lea
mov
sti
ror
xlat
int
cmps
stos
jae
or
or
loop
jecxz
cmp
or
lods
scas
not
push
test
sti
mov
(bad)
dec
push
and
and
hlt
mov
push
js
push
cs
js
xor
or
aam
enter
add
lock
retf
lods
mov
push
xlat
push
test
sti
mov
(bad)
dec
push
and
or
sub
test
mov
and
or
push
mov
mov
dec
xlat
jp
sub
lea
mov
stos
jmp
xlat
sbb
mov
imul
mov
sub
sub
dec
pop
das
mov
repz
push
(bad)
mov
movs
lods
in
bts
and
ret
jbe
dec
stos
movs
retf
cmc
push
(bad)
mov
inc
cmp
not
add
out
sub
push
nop
pop
popa
stos
sub
not
(bad)
retf
movs
lahf
retf
mov
push
xlat
dec
or
inc
mov
push
push
mov
push
js
pop
or
loopne
pop
dec
or
in
inc
pop
sbb
cld
not
mov
js
dec
stos
sub
lods
pop
xlat
mov
stos
stos
jae
pop
push
or
(bad)
shr
sub
fisttp
dec
pusha
sti
mov
or
mov
add
xlat
mov
stos
pop
imul
sub
mov
xlat
mov
cld
sar
cmps
adc
cmp
ins
lods
cli
not
dec
or
jmp
push
test
sub
mov
jae
push
sub
mov
pusha
adc
or
es
mov
push
xlat
sbb
call
xor
fbld
mov
stos
sub
shr
movs
dec
push
pusha
sti
mov
or
mov
add
xlat
mov
stos
pop
imul
sub
mov
xlat
mov
cld
shl
cmps
adc
cmp
ins
lods
cli
not
dec
or
mov
test
sub
mov
jae
push
sub
mov
pusha
adc
or
es
mov
push
xlat
sbb
push
fnsave
xor
fbld
mov
stos
sub
shr
pushf
dec
push
pusha
sti
mov
or
mov
add
xlat
mov
stos
pop
inc
iret
cs
mov
push
sub
stos
nop
fisubr
sub
not
(bad)
retf
shr
mov
dec
pusha
sti
mov
or
mov
add
xlat
mov
stos
pop
inc
iret
cs
mov
push
sub
stos
inc
dec
pusha
ror
or
ret
js
dec
stos
shl
xlat
int
cmps
adc
cmp
es
push
test
aad
not
sbb
mov
outs
and
not
jge
inc
dec
pusha
fcmovne
or
es
mov
push
xlat
sbb
pop
fdiv
xor
fbld
mov
stos
sub
sub
dec
jge
out
dec
js
push
or
lods
mov
push
xlat
push
loopne
shl
into
scas
pop
cli
dec
stos
sub
pop
or
stos
iret
pushf
or
sub
lock
xlat
mov
stos
rcl
(bad)
rcr
lea
xlat
mov
and
ret
lea
mov
sti
mov
mov
and
mov
mul
inc
lea
dec
or
lods
div
push
xlat
push
sub
mov
push
js
xor
sub
lock
retf
sub
or
int
jg
mov
stos
mov
lea
push
sub
mov
xlat
mov
stos
daa
shr
add
stos
dec
mov
mov
xlat
mov
stos
sub
lods
fdivp
push
xlat
push
test
mov
lea
mov
sti
mov
iret
jecxz
je
or
lods
call
leave
or
and
push
adc
dec
or
ins
mov
imul
xor
cs
mov
push
js
lea
mov
sti
mov
dec
or
jmp
popa
stos
sub
movs
lods
dec
or
sub
lea
mov
sti
mov
mov
and
mov
xchg
mov
cmp
inc
xchg
dec
or
(bad)
mov
and
push
adc
mov
jae
xchg
sub
retf
fldcw
fistp
movs
retf
in
push
(bad)
mov
and
push
adc
mov
imul
pusha
test
dec
mov
inc
or
(bad)
mov
push
popf
mov
push
xlat
es
or
test
aad
not
lahf
(bad)
sub
outs
and
lods
inc
xlat
mov
stos
rcr
sub
inc
jns
or
sub
not
(bad)
retf
push
popf
mov
lea
mov
sti
inc
sub
jmp
xlat
mov
sti
rcl
stos
sub
int3
mov
xlat
mov
test
xlat
mov
and
ret
lea
xlat
mov
sti
movs
sti
cwde
push
(bad)
mov
inc
cmp
out
adc
or
mov
mov
or
sub
push
mov
mov
and
mov
xchg
shl
jmp
jne
sub
fsubr
dec
or
(bad)
loop
push
xlat
dec
test
test
mov
dec
sub
mov
push
js
xor
or
aam
retf
xchg
das
dec
or
sub
lods
out
push
xlat
push
sub
mov
push
js
xor
sub
lock
retf
sub
or
int
sbb
mov
stos
shr
inc
jge
or
dec
dec
or
out
retf
js
(bad)
mov
stos
mov
mov
cs
mov
push
movs
retf
mov
pop
es
not
int
mov
sub
pop
(bad)
ret
mov
sub
pop
or
lods
and
sbb
and
xor
xor
stos
daa
retf
data16
sub
push
mov
ret
lea
xlat
mov
sti
inc
ds
das
xlat
mov
sti
mov
dec
or
and
or
(bad)
mov
movs
lods
inc
or
xlat
mov
sti
inc
dec
neg
fdiv
adc
and
mov
mov
jg
and
int
push
sub
dec
sub
int
repz
movs
lods
popf
or
xlat
mov
stos
daa
retf
sub
cs
mov
push
js
mov
inc
test
add
out
or
push
mov
retf
push
push
aad
sub
mov
movs
lods
ror
sub
imul
sub
mov
lods
mov
push
xlat
push
pusha
test
or
lods
mov
push
xlat
push
loopne
inc
dec
or
in
pop
xor
ret
cmc
push
(bad)
mov
arpl
push
mov
mov
mov
push
je
cmc
push
movs
retf
imul
not
ret
mov
js
repz
mov
and
lods
mov
push
xlat
push
pusha
repz
lods
mov
push
xlat
push
loopne
inc
dec
or
in
pop
xor
repz
fild
neg
mov
dec
dec
retf
push
push
(bad)
mov
push
(bad)
mov
and
mov
mov
(bad)
mov
xor
push
(bad)
mov
sub
retf
movs
push
(bad)
mov
and
mov
mov
(bad)
mov
and
mov
mov
sub
les
in
push
(bad)
mov
les
rcl
mov
push
fdiv
(bad)
lods
mov
push
xlat
dec
sub
mov
push
js
cmp
mov
clc
mov
push
sub
add
lods
sahf
not
push
sbb
ins
or
cwde
mov
push
mov
mov
push
sub
add
lods
call
xlat
sbb
and
push
sbb
xchg
not
push
sbb
push
sbb
sub
lea
mov
sti
mov
cmps
cmp
push
cmc
jae
retf
(bad)
mov
retf
sub
xchg
mov
sub
stos
js
or
jle
or
sbb
sbb
mov
dec
mul
pop
stos
iret
out
aam
or
sub
leave
inc
dec
or
in
dec
mov
adc
stos
sub
mov
mov
mov
push
or
cld
movs
es
ins
mov
push
xlat
mov
mov
or
stos
sub
and
retf
and
iret
out
hlt
test
jge
sbb
stos
ret
in
out
aam
not
push
lock
in
or
jmp
sar
iret
ret
test
dec
stos
inc
dec
bound
sub
shr
mov
sub
ins
jg
aas
iret
sub
push
les
std
mov
or
imul
xlat
dec
jl
push
xor
dec
or
jmp
int
mov
invd
stos
stos
imul
imul
jmp
dec
iret
scas
(bad)
ror
sub
or
mov
xlat
dec
stos
sub
or
sub
dec
xor
pop
sbb
sub
movs
movs
xor
stos
sub
stos
sub
and
dec
or
pushf
or
sub
push
loope
sub
push
sub
jg
sub
outs
pop
ds
push
sub
mov
or
dec
or
imul
cs
dec
or
imul
imul
stos
ret
dec
imul
mov
(bad)
loope
sub
push
sub
cmps
cmc
stos
sub
scas
pop
cli
dec
stos
fimul
xor
dec
sbb
das
jg
inc
adc
cmps
cmp
xor
dec
stos
cmp
dec
xor
stos
mov
sbb
not
adc
dec
or
das
jg
inc
cmp
stos
nop
hlt
adc
sub
sub
dec
or
and
not
adc
dec
add
das
jg
inc
ror
(bad)
aam
sub
cmps
xor
dec
stos
and
dec
xor
stos
jmp
invd
inc
enter
fimul
xor
dec
or
das
jg
inc
xchg
dec
or
mov
ror
sub
or
pushf
mov
push
fimul
xor
dec
or
das
jg
inc
mov
mov
mov
sub
or
mov
dec
jl
push
imul
test
dec
mov
push
dec
test
stos
sub
mov
sub
push
loope
sub
or
ror
stos
mov
stos
sub
cmps
fldcw
mov
or
sub
test
stos
sub
cmps
mov
scas
pop
cli
dec
stos
stos
dec
xor
dec
or
dec
or
mov
ror
sub
cmp
xchg
or
mov
or
sub
pop
outs
les
or
dec
stos
daa
clc
or
mov
rol
lods
xlat
push
cmp
dec
or
sub
aam
mov
cs
inc
adc
dec
dec
inc
adc
or
out
in
imul
stos
ret
imul
adc
dec
stos
test
dec
mov
push
cmps
push
stos
sub
arpl
scas
sub
sub
mov
or
daa
retf
sub
pop
outs
les
or
dec
stos
mov
pop
sbb
sub
stos
sub
out
fild
scas
pop
out
dec
stos
stos
scas
mov
mov
xor
movs
lods
enter
into
jne
push
inc
cwde
jmp
mov
pop
mov
mov
or
and
dec
xor
or
stos
jae
xor
or
cmp
cmp
mov
or
test
fimul
(bad)
xor
dec
mov
loopne
shl
xbegin
dec
mov
or
dec
mov
(bad)
dec
pop
test
(bad)
scas
pop
inc
mov
fisttp
lods
stos
dec
add
push
inc
cwde
jmp
dec
jecxz
mov
inc
cwde
jmp
les
and
xor
imul
stos
mov
jmp
ja
cmps
mov
iret
stc
jnp
dec
or
or
dec
jecxz
mov
inc
cwde
jmp
les
and
mov
scas
and
dec
stos
mov
jmp
or
repz
fistp
ror
sub
dec
stos
sbb
mov
dec
mov
adc
jmp
or
inc
stos
mov
sub
scas
pop
cli
dec
stos
inc
inc
mov
sub
sub
sbb
imul
dec
stos
mov
or
and
and
push
pop
inc
adc
xchg
jmp
pop
inc
mov
or
sub
inc
adc
pop
inc
mov
jle
jmp
pop
inc
push
adc
stos
mov
test
sub
lock
rol
iret
hlt
jbe
retf
(bad)
mov
sbb
cmp
jns
or
mov
adc
test
sbb
mov
out
or
mov
dec
or
lock
jmp
ins
inc
sub
dec
add
mov
mov
ror
inc
pop
dec
or
xlat
dec
jl
push
mov
clc
dec
mov
inc
or
out
or
stos
sub
ins
ins
xchg
or
pop
hlt
dec
stos
mov
cmp
sub
stos
mov
(bad)
iret
out
pushf
dec
or
sub
jne
movs
cmp
adc
jmp
out
rcr
stos
sub
es
stos
pop
push
cmp
(bad)
rcr
ins
rcr
sub
dec
vmread
shr
or
cs
dec
shl
or
jge
movs
or
pop
dec
dec
or
mov
push
pop
out
bound
inc
dec
neg
int3
cmps
ret
retf
mov
cmp
stos
xlat
cmp
inc
ins
adc
stos
xlat
dec
jl
push
test
rcr
ficomp
mov
pop
mov
or
ins
stos
jecxz
nop
out
stos
sub
sub
sbb
ins
ins
mov
(bad)
jl
sub
(bad)
retf
(bad)
pop
push
mov
mov
inc
push
stos
sub
stos
sbb
inc
inc
dec
bound
rcr
test
rcr
(bad)
and
es
mov
jge
xlat
pop
cmp
dec
sub
movs
add
ins
mov
imul
xchg
(bad)
mov
add
cmp
mov
scas
pop
cli
dec
stos
xlat
cmp
rcl
sbb
hlt
jne
pop
and
int
cmps
jnp
pop
and
xor
mov
fistp
mov
stos
sub
lahf
daa
clc
dec
pushf
sub
stos
sub
and
dec
pushf
sub
stos
sub
mov
clc
dec
pushf
sub
stos
sub
mov
sub
imul
and
mov
dec
or
mov
sub
out
xlat
inc
mov
jmp
push
ja
movs
lods
(bad)
stos
sub
repnz
clc
sbb
adc
stos
mov
inc
mov
ficom
repnz
dec
pop
sbb
pop
and
movs
sahf
dec
push
xchg
ror
pop
adc
sbb
daa
ret
or
inc
repnz
stos
js
mov
sub
sbb
cmp
sbb
cli
repnz
stos
jp
loopne
je
or
ins
mov
arpl
lds
movs
sbb
scas
sub
test
mov
inc
sub
dec
pop
mov
dec
or
scas
mov
dec
or
daa
clc
dec
push
inc
mov
adc
ficom
push
or
daa
into
dec
push
sub
imul
test
ss
pop
sbb
lods
sub
inc
and
int
test
pop
push
adc
dec
or
sbb
dec
pop
sbb
pop
pop
xor
fbld
(bad)
lock
dec
mov
mov
ret
pop
xchg
sub
mov
and
or
push
dec
jge
mov
dec
or
je
lock
dec
mov
mov
into
xor
sub
dec
and
int
scas
daa
clc
or
adc
cmp
xchg
ror
pop
popa
mov
lds
movs
sbb
scas
sub
stos
lock
scas
mov
pop
test
sub
push
stos
cmps
or
jge
cmp
sub
pop
and
push
mov
mov
into
xor
sub
ss
int
test
jb
stos
pop
jge
push
stos
cmps
or
sahf
dec
push
xchg
adc
dec
or
sub
fidiv
cmps
add
sub
(bad)
cmp
pop
mov
ret
scas
cmp
or
stos
daa
int3
mov
cmc
jae
retf
(bad)
mov
sbb
jl
push
sbb
movs
adc
xlat
movs
movntps
or
and
mov
or
ror
pop
pop
dec
and
and
xchg
out
cmp
inc
ror
stos
mov
push
sub
inc
mov
test
mov
(bad)
lock
lock
loopne
fidiv
jl
push
pop
sbb
sub
fisttp
jae
stos
sub
mov
inc
xor
dec
cmp
dec
cwde
jmp
ja
push
pop
cmps
jecxz
mov
push
test
aaa
dec
sub
dec
rol
repnz
fsub
ins
mov
cmp
(bad)
sbb
sub
repz
pop
lds
stos
repnz
ror
stos
clc
int
scas
mov
jge
es
push
or
jge
cmp
xlat
addr16
or
scas
mov
cmps
sub
sahf
sbb
push
dec
neg
sub
mov
adc
loope
pop
and
not
dec
loopne
jno
or
jle
loopne
shl
xlat
push
xlat
dec
loopne
jb
or
pop
dec
into
cs
xchg
not
lea
mov
stos
stos
dec
jl
push
movntps
dec
jge
daa
clc
lea
mov
sub
push
fbstp
into
mov
div
pop
sbb
xlat
into
xor
dec
repnz
stos
sub
or
inc
mov
push
mov
mov
popa
daa
ret
add
adc
dec
stos
jns
add
sub
adc
sti
mov
or
mov
popa
ss
add
div
dec
stos
jns
jmp
mov
lahf
cmp
cmps
dec
repnz
mov
sbb
sub
dec
pop
sbb
xlat
and
or
stos
daa
retf
inc
push
xlat
mov
(bad)
mov
push
jmp
pop
sub
push
aam
stos
sub
(bad)
or
cmp
pop
xor
cmp
xlat
dec
jl
push
mov
retf
xchg
not
mov
dec
or
mov
push
mov
mov
scas
pop
cli
dec
stos
mov
mov
js
movs
push
push
pop
xor
(bad)
lea
mov
call
or
sub
ins
stos
mov
sbb
xlat
or
stos
adc
cld
inc
xlat
mov
jl
retf
mov
mov
inc
jmp
dec
jl
push
mov
les
test
xlat
dec
or
out
xlat
mov
jae
mov
inc
or
and
add
sub
push
test
not
xchg
sub
mov
inc
push
mul
repnz
loop
jmp
mov
lahf
xchg
int
scas
adc
mov
(bad)
mov
fisub
or
stos
pop
xchg
mov
or
sub
(bad)
lea
div
retf
stos
cmp
sub
dec
clc
stos
sub
mov
mov
mov
repnz
mov
stos
sub
movs
nop
not
imul
(bad)
mov
movs
scas
adc
push
xlat
mov
fistp
xlat
push
xlat
cmps
xchg
cld
sub
jmp
dec
or
mov
dec
sub
sbb
or
dec
stos
mov
mov
push
fsub
popf
pop
(bad)
mov
push
dec
xor
dec
or
aam
add
mov
mov
and
(bad)
xchg
leave
inc
sub
hlt
stos
loop
add
xlat
mov
push
fsub
or
pop
cli
dec
stos
test
jmp
xlat
mov
fidiv
push
push
push
loopne
jg
or
lods
out
(bad)
push
xlat
(bad)
retf
dec
xor
sub
ds
not
jo
sub
lea
div
(bad)
push
xlat
lds
sub
push
or
xlat
mov
mov
pushf
jne
mov
test
xlat
mov
test
fdiv
sub
inc
push
test
nop
xchg
not
mov
inc
in
sbb
stos
mov
mov
cs
xchg
not
sub
xchg
not
mov
cs
xchg
not
jmp
xlat
mov
fsubrp
or
mov
mov
inc
and
cmp
xchg
not
add
inc
inc
or
div
or
movs
sahf
(bad)
inc
xlat
mov
dec
sub
test
mov
and
add
sbb
dec
stos
daa
clc
popf
pop
(bad)
mov
push
dec
cmp
(bad)
popf
pop
(bad)
mov
ret
sub
stos
jp
xchg
std
sub
cs
xchg
not
pop
cs
dec
or
daa
retf
sub
fsub
or
pop
inc
mov
and
das
adc
or
sub
lea
mov
and
or
xlat
ret
dec
test
div
(bad)
push
xlat
dec
mov
int3
xchg
not
mov
and
push
mov
fmul
loopne
test
or
ss
xchg
sub
sbb
fmul
loopne
test
or
and
clc
sub
dec
mov
ret
xor
pop
cli
dec
stos
daa
clc
popf
or
mov
push
dec
sbb
xlat
into
lea
div
push
xchg
ror
pop
pop
sub
int
push
movs
or
scas
mov
mov
sub
retf
cld
inc
xlat
mov
push
add
dec
nop
xchg
stos
xlat
push
xlat
cmp
sub
dec
pop
sbb
xlat
(bad)
repnz
ins
das
dec
mov
sub
sub
or
adc
dec
jge
test
xor
stos
pop
inc
mov
sub
test
movs
shl
add
jmp
(bad)
and
mov
clc
lea
mov
sti
xlat
sti
aam
xlat
mov
push
cld
xchg
not
icebp
push
xlat
int
cmps
test
jmp
xlat
mov
fild
lods
pop
(bad)
mov
stos
mov
mov
dec
sub
shr
dec
leave
dec
sub
push
mov
mov
and
imul
fsub
cld
inc
xlat
mov
scas
sub
jnp
dec
jl
push
loope
aam
imul
lods
mov
pop
sbb
xlat
and
or
stos
daa
retf
daa
push
xlat
mov
cmc
jae
retf
(bad)
mov
sbb
add
into
mov
imul
push
sub
jne
movs
jnp
push
push
mov
sub
pop
mov
gs
xor
movs
xor
es
test
shld
(bad)
es
test
push
jne
fisub
bound
sub
push
and
inc
mov
mov
ins
mov
inc
and
dec
pop
sub
jne
cmp
adc
push
or
ins
xchg
pop
sub
sub
or
stos
sub
out
xlat
dec
pop
sbb
sub
(bad)
inc
lds
mov
sbb
movs
sahf
or
or
sub
dec
push
sub
call
retf
push
sub
add
ror
mov
sub
dec
push
sub
call
call
dec
mov
cmp
ins
mov
movs
sahf
or
or
sub
or
ins
mov
and
sub
inc
mov
stos
sub
add
dec
xor
sub
dec
push
sub
dec
pop
sub
jne
daa
inc
mov
xlat
mov
ins
ins
mov
or
pop
(bad)
fisubr
into
dec
push
sub
or
push
mov
dec
push
mov
sbb
movs
sahf
dec
xor
fisubr
dec
push
sub
out
xlat
adc
loope
pop
and
pop
pop
clc
jle
sbb
cmc
shl
and
dec
dec
or
dec
push
mov
dec
or
inc
dec
loopne
jp
or
fxch
rcl
stos
sub
icebp
and
movs
push
sub
push
fisubr
mov
dec
jecxz
addr16
stos
push
mov
sub
jbe
shr
in
adc
or
sub
pop
adc
data16
test
dec
mov
jne
or
lea
mov
and
ret
jge
jle
jge
movs
retf
or
mov
inc
inc
sbb
stos
movs
retf
or
mov
inc
daa
dec
or
faddp
lock
iret
hlt
jbe
retf
(bad)
mov
aas
jnp
test
dec
bound
and
inc
fstp
retf
(bad)
mov
sbb
sbb
into
popa
dec
or
sub
mov
inc
dec
bound
test
jge
sar
stos
sub
into
sub
mov
mov
xor
pop
dec
sub
int
stos
sbb
dec
cld
and
and
std
rcl
stos
sub
retf
sub
pop
pop
shr
stc
sub
out
aam
loope
sub
dec
mov
and
sub
or
and
dec
cmps
mov
ret
dec
push
mov
mov
pop
inc
cmp
cmps
aas
cli
sub
out
aam
push
sub
and
loope
pop
and
int
cmps
jnp
pop
adc
es
in
mov
mov
inc
into
or
sub
ret
sub
imul
add
pop
or
xlat
cmp
call
inc
or
rol
iret
shr
or
sub
loopne
jns
or
ins
inc
sub
jb
stos
pop
mov
push
aam
pop
push
pop
inc
pop
inc
cmp
stos
inc
dec
test
aam
bound
sub
loopne
jns
or
rcl
stos
sub
lock
iret
(bad)
dec
pop
mov
test
sub
cmc
jae
retf
(bad)
mov
sbb
and
jg
and
and
ret
test
or
inc
dec
pusha
stos
sub
push
pop
inc
loopne
jns
or
out
int
push
pop
dec
cmp
jbe
push
fild
iret
shr
or
sub
loopne
jns
or
sub
dec
push
js
jge
xlat
cmp
sub
loopne
js
or
mov
mov
loope
pop
and
pop
pop
std
jg
jge
out
or
daa
dec
inc
and
ins
mov
stos
sub
jo
xchg
jecxz
daa
clc
or
sub
je
mov
dec
retf
mov
push
pop
inc
pusha
jmp
or
sub
mov
jg
inc
cmp
scas
ss
pusha
sahf
enter
mov
mov
call
sar
and
xor
sub
or
sub
es
adc
add
fadd
dec
push
mov
sbb
std
inc
callw
cmps
imul
dec
mov
adc
loope
pop
and
pop
pop
std
jg
push
mov
ins
mov
in
xchg
addr16
aam
inc
stos
sub
xor
dec
loopne
jnp
or
sbb
or
js
cmp
mov
or
in
inc
dec
xchg
fistp
ret
push
scas
dec
stos
rcr
sub
sub
(bad)
retf
(bad)
pop
push
ja
push
(bad)
jmp
or
sbb
and
shl
jmp
iret
out
retf
sub
or
dec
cmps
or
dec
stos
or
push
mov
dec
stos
xchg
dec
or
lock
and
into
jne
sub
push
int
or
mov
lds
daa
stc
dec
test
pop
idiv
dec
mov
inc
mov
out
sub
dec
dec
inc
test
imul
les
outs
or
test
imul
and
mov
push
ret
ins
mov
dec
or
daa
clc
dec
scas
fxch
enter
loopne
push
mov
fisubr
gs
sub
jne
sub
fbld
lock
shl
jmp
dec
cmps
daa
stc
or
jge
pop
sbb
addr16
call
inc
mov
imul
cmps
and
add
pop
leave
(bad)
dec
ja
or
and
pop
sbb
dec
cmp
inc
mov
movs
lahf
sbb
movs
xchg
and
dec
or
ins
inc
pop
sbb
inc
cmp
inc
mov
stos
ins
stos
sub
adc
loope
push
cmp
fidiv
cmp
fimul
cmp
cmp
ficomp
cmp
ficomp
cmp
ficomp
cmp
ficomp
jmp
leave
or
cmp
fimul
cmp
cmp
ficomp
cmp
ficomp
cmp
ficomp
mov
mov
sub
stos
sub
repz
dec
lock
push
jb
stos
mov
ficomp
cmp
ficomp
cmp
ficomp
cmp
ficomp
cmp
ficomp
cmp
ficomp
push
xlat
dec
sbb
sub
xchg
sub
push
push
dec
mov
jmp
push
lea
mov
dec
sbb
sub
bound
ja
cwde
cmp
ficomp
cmp
push
or
mov
fisub
push
ficomp
cmp
ficomp
cmp
ficomp
cmp
ficomp
push
push
fidivr
fwait
mov
mov
cmp
ficomp
jmp
sub
cwde
cmp
cmp
or
cmp
fisub
push
ficomp
cmp
ficomp
cmp
ficomp
cmp
ficomp
push
push
fidivr
fwait
mov
mov
cmp
ficomp
cmp
pop
cmc
push
jmp
pop
and
int
lahf
jnp
pop
and
sub
sub
push
sbb
or
mov
mov
ins
inc
mov
mov
pop
mov
xchg
dec
enter
mov
or
stos
sub
mov
jg
or
sub
mov
cmps
popa
pop
xlat
mov
and
(bad)
pop
push
test
rep
pop
dec
into
out
ror
add
(bad)
dec
jnp
mov
stos
sub
bts
dec
pop
sbb
add
leave
and
xchg
pop
rol
retf
mov
scas
ss
fnstcw
ja
cmp
shr
cmp
out
addr16
inc
mov
stos
sub
mov
push
clc
inc
push
add
and
jg
and
bound
sub
dec
pop
js
out
in
dec
pop
sbb
lock
clc
sti
movs
or
movs
sahf
sbb
stos
clc
push
loopne
dec
or
cs
dec
pop
js
shr
dec
or
in
push
hlt
push
dec
or
sub
stos
mov
int
or
movs
lahf
or
adc
not
push
(bad)
jmp
or
sbb
and
jg
and
cmps
xchg
in
dec
mov
sub
cli
mov
test
push
and
test
and
mov
sub
setp
cmps
ds
enter
and
mov
(bad)
retf
mov
sub
movs
sahf
xor
push
dec
cmp
gs
xor
stos
mov
cmps
pop
movs
sahf
xor
push
dec
neg
sub
xlat
test
mov
pop
gs
or
and
or
lock
or
test
cmps
pop
inc
rol
stos
stos
mov
or
repz
stos
mov
iret
into
xchg
arpl
and
dec
dec
push
mov
dec
cmp
mov
or
xchg
ins
mov
jb
call
ret
pop
xor
xchg
mov
sub
sub
or
cld
repz
stos
sub
push
push
xor
sar
inc
add
aam
mov
or
lahf
mov
imul
pop
add
fcom
push
loopne
gs
or
ins
xchg
loopne
gs
or
push
xchg
pop
sbb
(bad)
retf
pushf
leave
dec
cmp
and
iret
out
adc
shr
push
push
xor
dec
pop
inc
xor
mov
loopne
dec
stos
mov
iret
into
cmp
dec
or
lock
dec
pop
mov
dec
cmp
mov
or
xchg
ins
mov
mov
sub
dec
pop
ret
pop
sbb
xchg
or
fadd
sbb
call
fcom
push
or
adc
clc
fyl2x
(bad)
xlat
test
mov
inc
lahf
jmp
dec
and
inc
xor
test
movs
sahf
sbb
jp
lds
int3
repz
stos
mov
dec
and
inc
cmps
adc
fdivr
sub
(bad)
shr
sub
loopne
aam
imul
in
inc
bound
inc
dec
bound
push
jb
stos
sub
dec
dec
inc
dec
test
rcr
fmulp
sbb
mov
pop
fild
into
push
pop
stos
loopne
pusha
dec
or
shl
jmp
adc
jmp
or
dec
pop
std
jg
jns
mov
test
les
mov
or
movs
push
div
mov
pop
dec
or
lea
mov
and
cmps
jmp
sub
js
sub
cli
mov
mov
push
push
and
sahf
push
and
int
jmp
not
sub
dec
jecxz
ror
(bad)
xlat
hlt
(bad)
dec
pop
pop
and
mov
leave
push
aaa
addr16
pop
sub
jae
push
xlat
mov
out
xlat
dec
sub
jb
fucom
mov
stos
rol
stos
sub
retf
dec
jge
out
retf
or
ins
lods
dec
not
test
xlat
mov
push
js
cwde
or
pusha
pop
test
push
xlat
push
loopne
arpl
and
addr16
and
and
shr
or
sub
ret
sub
jmp
retf
repz
xlat
mov
inc
sub
retf
cld
push
xlat
mov
pop
add
add
mov
cmps
cmp
sub
stos
movs
retf
clc
push
xlat
mov
ret
sub
stos
inc
mov
jmp
aad
test
sti
cld
push
xlat
mov
pop
outs
dec
or
mov
jbe
or
lods
mov
push
xlat
push
loopne
bound
sub
cmps
inc
stos
sub
lea
mov
sti
inc
xchg
xlat
jmp
(bad)
mov
sti
inc
dec
or
sub
scas
pop
cli
dec
stos
inc
(bad)
xlat
jmp
push
test
xlat
mov
push
js
or
sub
clc
inc
and
jmp
push
pusha
test
and
stos
stos
mov
adc
in
cli
js
pop
cld
mov
add
mov
mov
push
mov
cli
dec
stos
test
dec
mov
aam
test
rcr
test
aam
bound
sub
shr
or
neg
and
sbb
jb
stos
pop
mov
out
rol
lock
rol
iret
push
pop
mov
shr
or
neg
aam
addr16
dec
neg
aam
dec
loop
dec
push
cmc
jae
retf
(bad)
mov
jns
(bad)
mov
mov
fidivr
pop
in
sub
stos
js
jge
xlat
cmp
push
pop
inc
neg
and
mov
adc
jge
in
cld
xchg
mov
lock
or
ins
pop
pop
push
pop
pop
neg
and
jge
ror
sub
int3
mov
adc
(bad)
mov
icebp
jmp
movs
sbb
stos
movs
or
sti
movs
or
sti
inc
dec
pusha
lods
sub
sub
shr
jge
xlat
cmp
inc
lea
or
sbb
adc
neg
xor
or
neg
aam
mov
imul
aam
(bad)
jecxz
dec
cmp
pop
mov
or
pop
push
or
loope
pop
and
int
mov
cmp
dec
mov
(bad)
dec
mov
mov
iret
stos
push
dec
or
sub
test
iret
ins
cs
test
aam
pusha
mov
dec
or
sub
add
push
or
sbb
adc
jle
or
sub
hlt
inc
add
or
xlat
cmp
inc
sub
mov
mov
arpl
sub
sub
or
ja
shr
in
cli
js
pop
adc
inc
test
mov
mov
stos
sub
sub
or
stos
js
out
in
sub
out
shr
hlt
jle
dec
xor
sar
daa
and
dec
lock
jg
jmp
jbe
stos
inc
mov
stos
sub
shr
or
dec
xchg
dec
stos
shr
stos
sub
hlt
jle
dec
add
dec
cmp
pop
adc
jnp
jle
dec
loopne
outs
dec
or
ins
mov
cmc
loope
mov
imul
and
lds
ret
sbb
and
retf
(bad)
mov
sbb
pop
inc
xor
mov
popa
xor
xchg
addr16
mov
je
jnp
xchg
push
inc
jge
mov
xbegin
fidivr
cmps
scas
in
sub
outs
and
lock
pop
mov
test
dec
or
ror
enter
dec
sub
or
in
inc
rcr
add
xor
sub
sub
rol
mov
mov
dec
mov
ds
or
sub
mov
xbegin
inc
ins
dec
or
out
iret
gs
popa
pop
or
mov
mov
mov
sub
dec
push
mov
sbb
and
dec
lock
and
inc
das
iret
dec
push
mov
stos
ja
push
(bad)
jmp
or
sbb
lds
jp
pop
sbb
fwait
out
sub
out
rol
iret
jp
int
mov
jmp
or
sub
cmp
inc
inc
mov
fisub
mov
clc
or
stos
mov
dec
nop
pop
mov
dec
dec
mov
sub
jecxz
stc
jne
daa
clc
xor
mov
dec
or
fbstp
imul
sub
adc
int3
in
lods
leave
inc
sub
pop
pop
mov
sbb
icebp
test
stos
sub
int3
mov
daa
stc
dec
push
adc
lock
adc
jmp
or
cmps
mov
sub
std
jg
jb
popf
push
pop
popf
js
stos
stos
jmp
push
(bad)
mov
sub
dec
sbb
retf
lock
(bad)
mov
push
pop
inc
loopne
fdiv
sub
mov
xchg
and
sub
dec
jge
jnp
out
jmp
shr
sub
dec
stos
sub
lea
mov
adc
dec
or
(bad)
mov
cs
mov
push
mov
mov
push
lock
push
sbb
popf
jg
mov
es
je
scas
sub
shr
jmp
aam
not
inc
stos
sub
not
(bad)
into
push
pop
inc
pusha
scas
sub
inc
lds
or
mov
(bad)
lea
mov
and
int
push
push
cmp
and
and
and
dec
repnz
shl
push
xlat
int
mov
sub
dec
stos
sub
int3
mov
sub
test
mov
inc
inc
or
stos
xchg
inc
or
stos
mov
(bad)
cmp
clc
dec
push
neg
aam
not
dec
stos
sub
int3
mov
sub
add
ror
repnz
push
ins
loopne
ins
dec
or
dec
dec
or
mov
mov
ret
push
xchg
dec
stos
jg
cmp
sub
outs
cmp
push
jecxz
dec
dec
retf
rcl
ins
ror
sub
add
ror
repnz
push
pop
pusha
pop
enter
popf
mov
push
xlat
cmps
sub
sub
outs
and
aas
je
dec
neg
aam
not
dec
stos
sub
int3
mov
sub
add
ror
repnz
push
pop
pusha
pop
enter
popf
mov
push
xlat
cmps
jecxz
sub
outs
and
clc
pop
into
(bad)
lea
mov
and
cmps
xchg
out
sub
mov
fbstp
sub
or
stos
xchg
sub
call
lds
cld
inc
jo
jmp
ins
dec
or
in
pop
neg
or
sbb
sub
mov
push
js
sub
pop
inc
inc
or
stos
stos
mov
popa
or
stos
xchg
inc
or
stos
mov
(bad)
cmp
clc
dec
push
neg
aam
not
dec
stos
sub
int3
mov
sub
test
mov
and
addr16
and
cmps
add
sub
mov
fbstp
sbb
fsubr
hlt
push
(bad)
mov
sub
test
or
push
popf
mov
push
xlat
cmps
pop
out
sub
outs
and
mov
sub
xor
mov
push
sub
or
or
jp
mov
xlat
mov
cld
inc
jo
jmp
imul
in
pop
mov
pusha
or
sub
loopne
sub
pop
rcr
push
test
xchg
nop
not
sbb
cmp
lods
nop
not
push
neg
cmp
lea
mov
sti
inc
sahf
(bad)
jmp
imul
in
outs
loopne
imul
and
stos
mov
icebp
sub
dec
jne
rol
stos
sub
imul
sbb
push
aam
not
ss
dec
pop
inc
ins
or
sbb
or
or
stos
mov
(bad)
cmp
clc
dec
push
neg
aam
not
dec
stos
sub
int3
mov
sub
push
push
or
and
stos
mov
icebp
sub
dec
jne
inc
test
jmp
xlat
mov
inc
xor
add
or
stos
xchg
inc
or
stos
mov
(bad)
cmp
clc
dec
push
neg
aam
not
dec
stos
sub
int3
mov
sub
hlt
push
(bad)
mov
ret
mov
dec
stos
js
mov
outs
cmp
fwait
jmp
sub
xor
mov
push
sub
nop
dec
stos
xlat
sti
hlt
push
(bad)
mov
sbb
or
in
inc
mov
je
or
lea
mov
and
cmps
push
jmp
sub
xor
mov
push
sub
scas
dec
stos
xlat
sti
hlt
push
(bad)
mov
aad
dec
or
in
inc
loopne
push
or
and
stos
mov
icebp
sub
dec
jne
shl
sub
imul
sbb
push
aam
not
ss
dec
pop
inc
or
mov
sub
or
int
pop
xlat
mov
stos
ror
stos
sub
imul
sub
push
nop
mov
push
sub
not
dec
lea
xlat
mov
nop
lods
mov
push
xlat
cmp
not
dec
mov
xlat
mov
movs
sahf
jb
and
not
stos
sub
pop
ror
retf
(bad)
lock
dec
or
mov
ret
ds
mov
push
mov
sbb
push
jg
push
je
dec
test
sub
push
jg
xchg
sub
outs
cmp
clc
sbb
into
push
lods
div
push
xlat
iret
mov
xlat
mov
sub
dec
or
mov
pop
xlat
mov
push
pop
push
test
sub
push
js
lea
mov
sti
inc
sub
jmp
imul
test
or
and
stos
mov
icebp
sub
dec
jne
inc
adc
jmp
xlat
mov
inc
gs
stos
stos
mov
and
addr16
and
cmps
or
sub
mov
fbstp
sbb
jecxz
dec
stos
xlat
sti
hlt
push
(bad)
mov
mov
or
in
inc
loopne
push
dec
or
ror
mov
sub
test
mov
sub
into
or
xlat
mov
and
ja
pop
xlat
mov
movs
stos
out
push
xlat
(bad)
lea
mov
and
dec
clc
and
cmps
sub
(bad)
lea
mov
inc
jo
or
xlat
mov
movs
lods
add
clc
sbb
into
and
or
xchg
lods
mov
push
xlat
inc
mov
sub
and
(bad)
lea
mov
push
pop
pop
pusha
repnz
lods
mov
loopne
push
inc
test
fdiv
imul
test
or
dec
(bad)
mov
xlat
mov
sub
inc
xor
sub
lea
lods
dec
cld
push
aad
pop
inc
jno
or
aad
pop
inc
xor
not
mov
pop
xlat
mov
push
pop
push
neg
fdiv
hlt
push
(bad)
mov
ret
dec
nop
dec
stos
js
rcl
imul
jmp
dec
dec
retf
mov
aad
sub
mov
push
mov
dec
or
and
stos
mov
icebp
sub
dec
jne
inc
adc
jmp
xlat
mov
inc
in
jno
stos
stos
mov
inc
test
inc
or
stos
mov
(bad)
cmp
ret
jne
dec
neg
aam
not
aaa
stos
sub
int3
mov
sub
add
ror
repnz
push
pop
pusha
pop
enter
popf
mov
push
xlat
cmps
jae
sub
outs
and
test
mov
imul
fdiv
or
popf
mov
push
xlat
sbb
imul
in
inc
sub
and
not
(bad)
jmp
xlat
mov
inc
add
mov
inc
shl
xchg
inc
or
stos
mov
(bad)
cmp
push
jne
dec
neg
aam
not
aaa
stos
sub
int3
mov
sub
add
ror
repnz
push
pop
pusha
pusha
test
popf
mov
push
xlat
cmps
jmp
sub
outs
and
clc
sbb
into
inc
mov
or
sub
call
mov
(bad)
cmp
clc
dec
push
neg
aam
not
ss
sub
int3
mov
sub
test
mov
inc
dec
jo
stos
xchg
inc
or
stos
mov
(bad)
or
mov
sub
xor
mov
and
sbb
test
stos
sub
int3
mov
sub
add
ror
repnz
push
pop
pusha
div
or
push
popf
mov
push
xlat
cmps
inc
xchg
sub
outs
and
out
dec
dec
or
jo
stos
xchg
inc
or
stos
mov
(bad)
cmp
ret
jne
dec
neg
aam
not
ss
sub
int3
mov
sub
add
ror
repnz
push
pop
pusha
pop
enter
popf
mov
push
xlat
cmps
repz
sub
outs
and
mov
sub
xor
mov
push
sub
jae
stos
xchg
sub
call
lds
cld
inc
jo
jmp
adc
pop
pusha
xor
or
not
cmps
mov
outs
and
clc
pop
into
(bad)
lea
xlat
mov
and
cmps
imul
dec
or
fbstp
sbb
fsubr
hlt
push
(bad)
mov
sub
inc
pusha
mov
or
push
popf
mov
push
xlat
cmps
addr16
sub
outs
and
mov
sub
xor
mov
push
sub
scas
dec
stos
xlat
sti
hlt
push
(bad)
mov
loope
dec
or
in
inc
pusha
mov
or
push
popf
mov
push
xlat
cmps
aas
xchg
sub
outs
and
clc
sbb
into
inc
lds
stos
xchg
inc
or
stos
mov
(bad)
cmp
clc
dec
push
neg
aam
not
xor
mov
aad
pop
and
push
pusha
test
rol
mov
sub
add
ror
repnz
push
pop
pusha
pop
enter
popf
mov
push
xlat
cmps
ret
xchg
sub
outs
and
clc
sbb
into
ret
sub
hlt
push
(bad)
mov
sbb
or
in
inc
loopne
adc
or
and
stos
mov
icebp
sub
dec
jne
inc
mov
mov
inc
movs
jb
stos
stos
mov
inc
popa
jb
stos
xchg
cmps
or
mov
imul
push
xlat
mov
cld
inc
cmps
aad
sub
loopne
adc
or
in
pop
loopne
adc
or
and
stos
mov
icebp
sub
dec
jne
inc
mov
mov
inc
adc
mov
ret
not
hlt
push
(bad)
mov
adc
sbb
scas
xor
sub
pop
ror
repnz
push
pop
pusha
pop
enter
popf
mov
push
xlat
cmps
not
and
mov
sub
xor
mov
push
sub
jne
stos
xchg
sub
call
lds
cld
inc
jo
jmp
adc
sub
pop
pusha
jnp
or
push
popf
mov
push
xlat
cmps
mov
outs
and
shr
or
sub
ret
sub
jmp
cmp
inc
sbb
stos
mov
mov
ins
inc
dec
or
(bad)
mov
sbb
sub
mov
xlat
mov
cld
js
mov
push
popf
cmps
not
cmps
xchg
shl
stos
sub
test
mov
mov
aad
sub
dec
sub
mov
push
ja
push
(bad)
jmp
or
dec
pop
adc
pusha
jo
mov
mov
out
xlat
dec
jecxz
test
dec
pop
sbb
mov
retf
not
mov
inc
cmc
je
stos
inc
dec
pusha
sub
lods
mov
push
xlat
push
pusha
stos
sub
inc
enter
stos
mov
ins
mov
and
xor
pop
lock
sub
inc
jbe
dec
pusha
stos
sub
inc
xchg
mov
aam
sub
shl
dec
pusha
inc
hlt
or
ret
sub
sub
cmp
push
xlat
int
mov
mov
jmp
or
dec
pop
std
jg
mov
cmp
pop
iret
(bad)
lea
aad
mul
out
int
aaa
aad
imul
adc
aas
call
retf
cwde
push
xlat
mov
out
and
or
sub
stos
mov
mov
push
add
sub
(bad)
into
sub
dec
pop
inc
pop
jns
stos
mov
dec
or
push
xlat
mov
inc
jne
or
xlat
mov
push
mov
aas
stos
sub
pop
mov
xlat
mov
jmp
dec
test
sub
and
(bad)
lock
iret
std
shl
sub
(bad)
(bad)
mov
push
popf
out
cmc
push
xlat
cmps
pop
pushf
sub
cs
mov
push
xlat
sti
nop
push
xlat
mov
lods
pop
dec
or
jge
and
mov
push
movs
sbb
scas
mov
mov
jmp
dec
test
sub
and
or
dec
loopne
sbb
(bad)
push
xlat
and
shr
lea
aad
idiv
sar
sub
lock
or
sub
scas
sub
lods
cli
cmc
push
xlat
push
pusha
add
or
ret
pushf
xchg
dec
stos
inc
dec
or
xlat
mov
outs
or
enter
loopne
sbb
cmps
bound
(bad)
mov
ret
sub
or
xlat
mov
lods
cli
cmc
push
xlat
push
loopne
sbb
or
cmc
push
xlat
mov
cmp
mov
push
popf
ret
xlat
mov
and
mov
push
popf
(bad)
cmc
push
xlat
mov
or
mov
std
movs
retf
mov
inc
adc
and
inc
enter
loopne
sbb
cmps
or
hlt
or
lods
mov
push
xlat
push
loopne
adc
and
jg
and
ret
lea
aad
idiv
movs
retf
hlt
push
xlat
mov
inc
xchg
jbe
stos
rcr
das
aad
imul
out
dec
outs
stos
sub
shr
lea
(bad)
mov
sti
shl
sub
int3
mov
retf
mov
xlat
mov
stos
sub
les
or
(bad)
(bad)
aad
mul
out
mov
stos
sub
int
retf
loopne
xlat
mov
stos
stos
repz
mov
fbstp
iret
shl
inc
adc
or
xlat
mov
inc
retf
push
jno
lea
aad
idiv
movs
retf
mov
xlat
mov
shr
or
or
shr
or
lods
mov
push
xlat
push
bound
sub
movs
lods
mov
mov
inc
std
jge
stos
test
dec
neg
mov
pop
xlat
jmp
push
test
aam
not
iret
pushf
sub
outs
cmp
imul
add
hlt
push
xlat
mov
ret
pop
xchg
dec
stos
ror
stos
sub
retf
mov
ror
rol
stos
sub
(bad)
rcl
imul
xlat
mov
scas
pop
xchg
jo
and
stos
push
dec
or
jp
stos
stos
repz
push
xlat
mov
fbld
or
dec
loopne
sbb
or
aas
adc
stos
fild
not
pusha
scas
sub
lods
mov
push
xlat
push
pop
inc
in
jp
stos
inc
dec
pusha
shl
or
lods
mov
push
xlat
push
loopne
xchg
mov
sub
inc
xor
fimul
mov
stos
mov
mov
mov
xlat
mov
sub
adc
stos
sub
cmc
push
xlat
dec
test
pushf
mov
push
js
arpl
dec
adc
stos
jle
(bad)
cwde
sub
stos
xlat
sti
lods
push
xlat
mov
jno
dec
or
cmc
push
xlat
cmps
mov
sub
cs
not
adc
adc
jmp
inc
cmp
pop
cld
mov
dec
repnz
mov
dec
mov
jg
and
mov
mov
sub
retf
sbb
push
pop
inc
loopne
sbb
and
sub
mov
sub
retf
sbb
clc
ror
int
sbb
sub
xlat
cmp
(bad)
inc
mov
movs
lahf
sbb
stos
clc
inc
mov
mov
rcr
call
pushf
imul
lock
dec
mov
xbegin
sahf
sub
outs
and
jge
mov
push
loopne
sbb
push
pop
inc
pop
sbb
mov
out
cs
dec
sti
ror
stos
sub
dec
push
movs
or
scas
daa
stc
pop
push
movs
or
test
sub
push
sub
mov
lods
sub
dec
fsub
pop
or
ror
sub
dec
push
js
or
inc
retf
sub
shr
sbb
mov
mov
jle
mov
sub
out
rcr
pop
inc
popa
jg
stos
jle
jnp
sub
out
rcl
push
lock
pop
and
test
dec
loopne
sbb
clc
jle
xor
icebp
in
jo
adc
retf
mov
xlat
mov
mov
dec
mov
or
xlat
mov
lods
mov
push
xlat
push
pusha
int
or
inc
int
or
daa
retf
sub
push
sbb
mov
inc
cdq
jp
stos
stos
mov
mov
popf
xchg
push
xlat
mov
cmps
rcr
stos
sub
mov
dec
mov
mov
ins
sbb
lea
enter
aaa
dec
or
lods
bnd
cs
sbb
and
call
push
jle
sub
not
cmp
sub
int3
mov
xlat
sti
ror
neg
and
sti
test
dec
adc
scas
not
cmp
movs
or
mov
hlt
jbe
shr
in
adc
or
sub
add
nop
mov
mov
xlat
push
xlat
(bad)
into
sbb
into
clc
inc
dec
or
sub
jb
xchg
jmp
jb
stos
pop
mov
ins
inc
inc
xor
repnz
add
jge
dec
stos
jnp
pop
lahf
sub
outs
and
dec
retf
sub
dec
mov
mov
fcom
sbb
add
jmp
enter
ror
sub
int3
mov
sub
add
ror
repnz
push
pop
pusha
pop
enter
lods
dec
call
test
in
inc
mov
xor
stos
shl
stos
sub
add
ror
repnz
push
addr16
sbb
adc
or
movs
repz
mov
ret
jo
dec
stos
movs
repz
mov
inc
mov
or
push
jge
stos
xchg
inc
or
stos
mov
(bad)
cmp
clc
dec
push
test
sub
xchg
cwde
sub
outs
and
aas
je
dec
test
sub
(bad)
cwde
sub
outs
and
clc
pop
into
(bad)
lea
mov
and
cmps
aas
cwde
sub
mov
fbstp
sbb
fsubr
or
mov
inc
jge
or
cmp
stos
xchg
inc
or
stos
mov
(bad)
add
mov
sub
xor
mov
es
dec
call
repz
or
es
dec
call
pop
sbb
sub
pop
neg
cmp
sbb
test
sub
sub
test
sub
fistp
cmp
mov
mov
fbstp
sbb
fsubr
or
mov
inc
stc
jl
stos
stos
mov
ret
and
or
mov
inc
xchg
jl
stos
stos
mov
sub
dec
pop
stos
sub
mov
sub
xor
mov
push
sub
scas
dec
stos
movs
retf
or
mov
inc
mov
mov
ret
sub
or
mov
inc
push
jl
stos
stos
mov
inc
adc
xchg
inc
or
stos
mov
(bad)
add
mov
sub
xor
mov
es
dec
call
repz
or
es
dec
call
mov
dec
or
in
pop
pusha
xor
or
lods
dec
call
test
dec
or
in
inc
loopne
sbb
adc
dec
or
ror
mov
sub
lea
rol
sub
int3
mov
mov
or
lods
dec
call
inc
sbb
sub
inc
loopne
sbb
adc
dec
or
ror
mov
sub
lea
rol
mov
sub
lea
sar
stos
sub
int3
mov
sub
add
ror
repnz
push
pop
pusha
pop
enter
lods
dec
call
and
in
inc
mov
pop
or
lods
dec
call
test
or
lods
dec
call
in
sbb
sub
pop
loopne
sbb
adc
dec
or
ror
mov
sub
lea
ror
stos
sub
int3
mov
sub
lea
sar
sub
int3
mov
sub
xlat
push
xlat
(bad)
into
inc
cmc
jle
stos
xchg
inc
or
stos
mov
(bad)
cmp
clc
dec
push
test
sub
repz
sub
outs
and
mov
sub
xor
mov
jl
mov
mov
dec
pop
es
dec
call
mov
xchg
dec
call
or
in
pop
loopne
sbb
adc
dec
or
ror
mov
sub
lea
shr
stos
sub
int3
mov
sub
lea
rcr
stos
sub
int3
mov
sub
in
sbb
adc
dec
or
ror
mov
sub
lea
shr
stos
sub
int3
mov
sub
add
ror
repnz
push
addr16
sbb
adc
or
movs
repz
mov
ret
jo
dec
stos
movs
repz
mov
inc
sub
mov
ret
clc
xchg
dec
stos
movs
retf
or
mov
inc
cmp
mov
shr
or
sub
shr
or
mov
retf
hlt
je
mov
ins
outs
xor
stos
movs
retf
or
mov
inc
cmp
dec
test
rcl
test
sub
mov
inc
lds
stos
xlat
sti
hlt
je
mov
sub
call
mov
in
je
mov
ins
ja
push
(bad)
jmp
or
dec
pop
std
jg
inc
cld
mov
adc
jmp
push
xlat
mov
call
or
jne
pop
inc
and
es
or
mov
not
dec
dec
mov
mov
ins
rcr
stos
sub
loopne
pop
dec
or
mov
fsubrp
sub
sub
inc
pop
bound
xlat
mov
inc
in
or
sub
lea
aad
idiv
inc
loope
jmp
push
pusha
test
mov
sub
call
dec
or
sub
or
xlat
mov
lods
cli
cmc
push
xlat
push
loopne
add
adc
or
test
not
neg
mov
lea
aad
idiv
rcr
xlat
int
cmps
and
or
sub
lea
mov
sti
shl
stos
sub
lea
aad
idiv
movs
retf
hlt
push
xlat
mov
inc
mov
or
xlat
(bad)
lea
aad
mul
shl
and
and
shr
lea
(bad)
mov
sti
rcl
sub
int3
mov
mov
push
mov
mov
push
ins
dec
or
xlat
mov
stos
sub
push
mov
not
adc
out
retf
loopne
xlat
mov
stos
mov
mov
push
js
fmul
mov
lods
jmp
nop
mov
push
js
or
sub
shr
or
sub
lea
mov
sti
inc
dec
loopne
add
mov
sub
push
popf
out
push
xlat
cmps
retf
sub
mov
push
dec
or
(bad)
rcl
mov
and
mov
or
mov
ret
cmp
aam
sub
lea
mov
sti
shl
stos
sub
int3
mov
xlat
mov
inc
push
iret
iret
cmps
push
dec
or
lods
mov
push
xlat
push
pusha
fdivp
or
inc
or
mov
imul
inc
sub
inc
inc
or
xlat
mov
and
jb
fchs
inc
(bad)
movs
lods
inc
or
sub
loope
dec
or
sub
or
xlat
mov
std
rol
call
bound
dec
test
mov
cmps
outs
sbb
mov
outs
and
not
pop
das
in
or
xlat
mov
clc
rcr
push
xlat
int
mov
pushf
dec
or
mov
retf
test
mov
inc
popa
or
xchg
push
xlat
mov
push
popf
(bad)
push
xlat
cmps
icebp
jge
mov
ins
test
dec
neg
mov
or
stos
sub
add
dec
loopne
add
sti
inc
inc
aam
sub
loopne
add
or
in
pop
add
addr16
mov
shl
stos
mov
mov
inc
adc
pop
push
popf
(bad)
push
xlat
cmps
stc
jl
mov
outs
and
sub
push
xlat
int
cwde
js
neg
mov
cwde
fist
int3
cmps
mov
retf
jl
xlat
mov
ins
jle
repz
iret
cs
not
or
xlat
mov
inc
xchg
or
neg
mov
and
rol
iret
push
popf
jmp
sub
cs
not
push
(bad)
jmp
inc
cmp
add
jb
xchg
mov
or
and
sbb
or
ins
mov
dec
sub
cmp
ret
pop
test
sar
stos
sub
into
clc
jle
pop
mov
dec
mov
ja
or
dec
pop
mov
or
add
jl
or
ror
sub
or
ins
mov
shr
pusha
xlat
jbe
or
sub
inc
and
stos
mov
mov
ins
inc
mov
inc
cdq
data16
jle
aaa
mov
dec
pop
inc
inc
imul
inc
cs
lock
iret
hlt
jbe
shr
in
adc
or
sub
pop
adc
dec
and
nop
fmul
stos
sub
out
xlat
(bad)
iret
shr
and
ror
and
inc
(bad)
fisubr
enter
mul
mov
loopne
add
shr
jge
movs
retf
or
mov
inc
pusha
push
push
stos
mov
xlat
mov
stos
pop
dec
sbb
adc
stos
inc
dec
pop
inc
mov
or
ja
shr
in
sub
inc
pop
adc
data16
test
dec
outs
ins
ins
mov
stos
ret
adc
stc
dec
push
js
push
ja
dec
test
fcomp
loopne
add
es
mov
dec
stos
sub
sahf
test
dec
stos
rcr
sub
out
(bad)
int
test
div
dec
test
fcomp
loopne
add
sub
push
test
fcomp
bound
sub
or
data16
sub
push
ins
mov
sbb
mov
push
and
lea
xchg
mov
xor
lock
iret
shr
or
sub
shr
or
sub
cwde
stos
sub
stos
inc
dec
bound
add
and
and
std
inc
jle
sahf
lods
out
dec
stos
rol
stos
sub
(bad)
cmp
or
sub
bound
imul
shr
bound
push
loopne
add
shr
bound
imul
shr
bound
push
dec
or
sar
and
and
std
inc
jle
sahf
add
dec
stos
sar
sub
std
inc
jle
sahf
or
dec
stos
shr
sub
std
inc
jle
sahf
mov
pop
and
inc
jle
sahf
pop
out
dec
stos
ror
sub
lock
iret
shr
bound
imul
shr
bound
imul
shr
bound
push
loopne
cmovle
shr
bound
push
loopne
cmovle
and
dec
lock
adc
jge
in
cli
jg
out
xacquire
push
fild
iret
rcl
cmp
inc
adc
outs
popf
jmp
es
sub
xlat
jnp
imul
rcl
cmp
inc
xor
stos
mov
jmp
bound
jnp
or
loopne
cmovle
and
jg
and
and
push
sbb
cmps
out
sub
(bad)
mov
or
test
stos
inc
mov
sahf
add
dec
stos
shr
push
sbb
cmps
ret
lea
dec
stos
stos
mov
enter
mov
sahf
xor
dec
stos
ror
push
sbb
cmps
scas
lea
dec
stos
ror
enter
mov
sahf
add
dec
stos
rcl
stos
sub
push
sbb
cmps
mov
mov
or
test
stos
inc
mov
sahf
or
dec
stos
shl
stos
sub
lock
rol
iret
rcl
cmp
inc
jno
or
sub
(bad)
sub
xlat
jnp
or
loopne
push
dec
or
loope
pop
and
int
mov
jno
push
stos
sub
std
jo
dec
neg
and
sub
sbb
cs
imul
in
pop
stos
mov
(bad)
or
stos
sub
sti
shl
stos
sub
dec
pop
js
loopne
or
addr16
and
push
sbb
and
std
mov
mov
and
fcomp
bound
sub
pop
ret
hlt
xchg
dec
stos
inc
scas
shr
sub
or
push
dec
or
ins
out
dec
stos
inc
dec
neg
inc
dec
pop
rcl
sub
sub
cmp
sbb
sub
sti
inc
mov
jmp
push
bound
sub
or
imul
xor
dec
bound
imul
and
and
fmul
loopne
js
pop
sar
stos
test
pusha
ja
or
ret
repnz
dec
stos
inc
dec
loopne
or
out
dec
stos
inc
dec
bound
inc
dec
bound
inc
dec
pusha
pop
sub
shr
or
and
inc
aad
or
loop
or
sbb
or
imul
inc
dec
neg
inc
dec
neg
inc
pop
pusha
popf
sub
ror
sub
sti
inc
and
jmp
push
bound
sub
je
push
bound
imul
or
bound
sub
rol
or
repz
ret
repnz
dec
stos
inc
dec
loopne
or
in
dec
stos
inc
dec
neg
inc
dec
neg
inc
pop
pusha
jp
dec
or
mov
stos
inc
pushaw
stos
sub
ret
out
dec
stos
inc
xchg
shr
sub
inc
icebp
push
stos
mov
jmp
or
sub
or
sub
or
cmp
jo
sub
adc
add
or
repnz
ret
repnz
dec
stos
inc
dec
loopne
or
or
cmp
dec
stos
inc
dec
neg
inc
dec
neg
inc
sub
inc
in
stos
sub
ret
sub
sti
inc
xchg
xlat
jmp
push
bound
sub
loopne
imul
shr
dec
stos
sub
inc
add
stos
inc
cmp
jmp
imul
xlat
jnp
imul
shr
cmp
shr
cmp
ret
add
or
sub
rcl
stos
test
pusha
ja
or
ret
lods
xchg
dec
stos
inc
dec
loopne
or
or
test
dec
stos
mov
mov
xlat
jnp
xor
dec
bound
push
pusha
xchg
dec
or
adc
mov
add
sub
sti
inc
xchg
xlat
jmp
push
bound
sub
and
imul
shr
cmp
shr
cmp
sar
xor
into
dec
or
sub
or
repnz
ret
repnz
dec
stos
inc
dec
loopne
or
or
mov
bound
imul
or
bound
sub
imul
sub
ret
sub
sti
inc
sbb
shl
dec
bound
sub
jl
push
bound
imul
or
bound
sub
ret
jmp
or
js
dec
jno
dec
pusha
jno
or
shr
js
mov
or
sub
or
sub
or
cmp
cmc
stos
sub
call
or
repnz
ret
repnz
dec
stos
inc
dec
loopne
or
or
ror
mov
mov
xlat
jnp
xor
dec
bound
imul
loope
dec
or
mov
stos
inc
dec
or
push
pusha
jno
or
shr
xchg
mov
shr
cmp
shr
cmp
shl
and
sub
cmp
dec
or
cmp
or
test
stos
inc
dec
or
sub
das
mov
shr
cmp
shr
cmp
shl
mov
sub
sar
stos
test
pusha
cmp
xchg
dec
stos
inc
dec
or
sub
mov
push
or
shl
and
and
push
sbb
and
push
sbb
and
rol
aam
sub
mov
js
aam
push
pusha
stos
repnz
ret
sub
rcl
xor
dec
bound
imul
or
bound
sub
sar
stos
test
pusha
ja
or
ret
sub
stos
sub
stos
mov
mov
lahf
mov
or
sub
or
aas
es
stos
sub
add
dec
or
ss
icebp
or
ret
rcl
loopne
or
or
daa
lock
xlat
test
mov
cmps
jle
xlat
mov
cmc
loope
pop
and
int
mov
or
adc
push
neg
and
sub
sbb
mov
in
pop
stos
mov
shl
and
and
push
sbb
cmps
sti
mov
dec
test
fcomp
pop
inc
lds
stos
test
dec
bound
imul
push
add
cld
sti
mov
mov
or
sub
sti
inc
xchg
xlat
jmp
push
pusha
stos
sub
inc
xchg
outs
or
sub
push
sbb
and
sti
inc
jb
out
shl
pop
stos
cmps
ins
sti
inc
pop
bound
js
shl
pusha
jno
or
shr
mov
mov
or
fisttp
xor
sbb
and
push
sbb
es
sub
out
shl
pop
stos
cmps
ins
sti
inc
pop
bound
js
aam
push
pusha
jno
or
shr
aaa
mov
dec
stos
retf
mov
shr
or
sub
shr
or
sub
mov
sub
stos
inc
dec
bound
or
and
and
std
inc
jle
sahf
sub
dec
stos
shr
push
sbb
and
push
sbb
and
ror
cmp
or
test
stos
inc
dec
loopne
aaa
dec
or
rcl
stos
mov
mov
repnz
shr
dec
stos
sub
sahf
rcl
stos
rcr
stos
sub
jge
push
bound
sub
or
push
or
push
cmp
ds
shr
inc
stos
sub
sahf
rcl
stos
rcl
stos
sub
or
dec
or
imul
shr
cmp
shr
cmp
ret
add
or
inc
xor
test
into
pop
ret
hlt
xchg
dec
stos
inc
retf
shr
sub
inc
adc
stos
mov
test
mov
sub
or
sub
or
add
or
inc
loopne
stos
sub
or
test
stos
inc
dec
loopne
ss
or
add
dec
stos
shl
push
xlat
and
push
sbb
and
push
sbb
and
ret
test
and
sub
ret
sub
sti
inc
sbb
shl
dec
bound
sub
jl
push
adc
dec
neg
inc
dec
neg
inc
pop
(bad)
int3
inc
leave
or
sub
stos
sub
ret
push
dec
stos
inc
xchg
shr
sub
inc
push
push
or
sub
push
sbb
and
push
sbb
and
ret
aad
or
sub
ret
sub
sti
inc
pop
shr
sub
shl
dec
bound
sub
clc
imul
xor
dec
bound
imul
adc
dec
or
mov
stos
inc
dec
or
push
pusha
jno
or
shr
add
mov
shr
cmp
shr
cmp
sar
in
stos
sub
dec
sub
shl
or
icebp
or
ret
repnz
dec
stos
inc
dec
loopne
xor
out
dec
stos
inc
dec
neg
inc
dec
neg
inc
pop
pusha
push
sub
ret
xlat
dec
or
sub
ret
jg
dec
stos
inc
xchg
shr
sub
inc
mov
or
sub
push
sbb
and
push
sbb
and
ret
stos
dec
or
inc
dec
or
js
cwde
or
pusha
stos
repnz
ret
sub
shr
stos
sub
adc
push
pop
or
sbb
dec
stos
inc
dec
neg
inc
push
bound
inc
dec
or
js
aam
push
pusha
stos
repnz
ret
sub
shr
sub
and
dec
bound
imul
or
bound
inc
pop
pusha
stos
sub
pop
ret
hlt
xchg
dec
stos
inc
dec
shr
sub
or
xor
or
or
dec
stos
inc
dec
neg
inc
dec
neg
inc
pop
pusha
xor
dec
or
push
push
pusha
stos
sub
pop
ret
retf
xchg
dec
stos
inc
mov
jmp
popf
push
or
sub
adc
test
push
xlat
adc
jmp
or
sbb
sub
jge
stos
sub
ret
test
or
inc
dec
pusha
stos
sub
push
pop
inc
loopne
xor
and
int
push
daa
retf
sub
stos
jle
xor
mov
push
mov
push
or
out
or
scas
sub
es
mov
pop
es
mov
push
pop
pop
pusha
xchg
pushf
or
ret
sub
sub
sub
push
xlat
int
mov
adc
fsub
or
pusha
stc
icebp
or
ret
jl
dec
stos
xlat
cmp
pop
inc
loopne
into
mov
sub
push
sub
add
shr
push
js
jge
inc
jae
jmp
sub
loopne
mov
mov
dec
dec
or
dec
inc
mov
xchg
(bad)
mov
dec
or
aaa
inc
push
sub
out
stos
sub
stos
sbb
test
sub
pop
mov
dec
sbb
cmps
adc
sub
pop
stos
sub
pop
rol
(bad)
jne
mov
xlat
dec
jge
inc
repz
stos
xlat
mov
sti
shr
sub
jne
sub
sbb
lock
movs
retf
or
pop
inc
and
xor
test
pop
pusha
pop
cwde
or
lods
dec
not
loopne
aas
dec
or
mov
push
sub
sbb
cmp
dec
stos
movs
retf
or
pop
inc
icebp
pop
or
pop
pop
pusha
fwait
cdq
or
lods
dec
not
loopne
aas
dec
or
push
mov
fidivr
es
sbb
test
sub
mov
(bad)
xlat
dec
jge
inc
sub
stos
xlat
mov
sti
rcr
stos
sub
clc
pop
into
(bad)
lea
mov
and
into
jne
and
sbb
stos
dec
movs
retf
or
pop
inc
pop
pop
or
pop
pop
pusha
or
dec
not
loopne
aas
dec
or
push
mov
fidivr
xlat
sbb
test
sub
dec
mov
xlat
inc
jge
inc
dec
mov
stos
xlat
mov
sti
shl
sub
clc
sbb
into
sub
add
cmp
sub
push
test
sub
pop
mov
xlat
inc
jge
inc
ja
jmp
xlat
mov
sti
shl
push
cmp
ret
jge
dec
stos
movs
retf
or
pop
inc
leave
pop
or
inc
or
jmp
push
test
sub
or
int3
mov
ret
adc
mov
xor
dec
loopne
aad
test
shr
and
lock
xlat
mov
ins
shl
xlat
adc
jmp
std
jg
jge
xchg
jmp
cmp
lock
iret
and
sbb
shl
dec
or
je
or
jnp
or
mov
inc
enter
or
rol
stos
sub
push
lock
or
jge
in
sub
jp
stos
sub
dec
mov
xbegin
adc
test
cs
mov
pusha
fstp
mov
loopne
ds
or
push
or
sub
call
(bad)
push
xlat
mov
push
(bad)
sbb
test
dec
stos
movs
retf
in
xlat
mov
inc
rcr
test
sti
push
xlat
mov
fidivr
es
sbb
test
lds
(bad)
mov
add
sti
push
xlat
mov
fidivr
es
sbb
test
lds
cmps
mov
(bad)
sbb
sub
dec
stos
movs
retf
in
xlat
mov
inc
mov
repz
push
xlat
mov
fidivr
adc
push
test
lds
jae
sub
inc
dec
je
stos
test
sti
push
xlat
mov
fidivr
es
push
test
lds
push
mov
(bad)
sbb
addr16
dec
stos
movs
retf
in
xlat
mov
inc
imul
push
xlat
mov
fidivr
es
test
lds
das
mov
sub
sti
push
xlat
mov
fidivr
sbb
dec
test
lds
movsx
dec
mov
(bad)
sbb
cmp
stos
movs
retf
in
xlat
mov
inc
lds
stos
test
sti
push
xlat
mov
fidivr
rcr
dec
test
lds
fstp
fild
not
mov
(bad)
sbb
sar
stos
movs
retf
in
xlat
mov
inc
test
stos
test
sti
push
xlat
mov
fidivr
or
push
test
lds
fwait
mov
(bad)
sbb
or
dec
stos
movs
retf
in
xlat
mov
inc
push
pop
or
sub
lea
mov
sti
ror
xlat
xbegin
ja
mov
and
es
push
pusha
and
or
inc
ret
mov
sbb
lods
cmps
call
mov
shl
mov
sar
lahf
sub
and
jg
and
iret
into
into
aaa
dec
or
pop
out
dec
stos
shr
mov
xlat
mov
imul
(bad)
test
sub
sub
dec
pop
das
in
or
xlat
mov
movs
lods
jbe
stos
sub
mov
aam
not
sub
xlat
mov
push
sub
lea
mov
sti
inc
jnp
jmp
aam
idiv
rol
stos
sub
int3
cmps
nop
imul
stos
sub
call
into
sub
dec
jl
shl
sub
retf
cmp
sub
and
mov
leave
push
aaa
addr16
pop
sub
mul
int
retf
mov
or
mov
ret
add
hlt
push
xlat
mov
inc
and
mov
pusha
cmp
xchg
dec
stos
movs
retf
hlt
push
xlat
mov
inc
fstp
stos
stos
mov
inc
popa
or
aam
not
adc
fild
not
test
aam
not
sbb
dec
test
aam
not
mov
test
or
lods
mov
push
xlat
push
loopne
aas
dec
or
in
pop
test
aam
not
pop
mov
aam
not
or
movs
retf
hlt
push
xlat
mov
ret
rcl
hlt
push
xlat
mov
inc
pop
pop
or
sub
lea
mov
sti
shr
stos
sub
ret
fcom
hlt
push
xlat
mov
inc
movs
shl
push
stos
mov
call
dec
or
lods
mov
push
xlat
int
scas
js
fistp
lods
mov
push
xlat
test
mov
mov
ins
stos
repz
xlat
mov
movs
scas
jns
stos
sub
test
inc
stos
shr
sub
lea
mov
sti
shl
mov
sub
lea
mov
sti
shl
sub
lea
mov
sti
shl
sub
lea
mov
inc
push
lds
sub
daa
fidivr
lds
ins
lods
dec
hlt
push
xlat
mov
inc
daa
mov
jae
mov
sub
dec
jg
test
dec
neg
shl
hlt
push
xlat
mov
ret
(bad)
xchg
dec
stos
movs
retf
hlt
push
xlat
mov
inc
push
pop
or
lods
mov
push
xlat
push
loopne
cmp
and
ret
mov
(bad)
mov
cld
sar
stos
sub
mov
fbstp
sbb
inc
push
loopne
cmp
and
imul
mov
mov
ins
movs
retf
hlt
push
xlat
mov
push
popf
mov
arpl
aam
not
arpl
aam
not
mov
shl
or
rol
stos
sub
lea
mov
sti
inc
dec
neg
fdiv
jp
sub
shr
inc
mov
loope
or
xlat
mov
clc
xlat
sti
in
xlat
mov
or
mov
sub
inc
sub
mov
push
xlat
sti
in
xlat
mov
stc
cmp
sub
sub
stos
sub
dec
fdiv
dec
loopne
cmp
loopne
push
xlat
adc
loope
or
jge
in
adc
or
sub
or
add
dec
or
mov
dec
pusha
stos
sub
inc
cmp
retf
lods
inc
xlat
mov
imul
ins
pop
or
cmp
or
mov
lea
xor
dec
iret
scas
js
dec
stos
mov
mov
pusha
sti
mov
or
pop
or
sub
cwde
or
loopne
cmp
inc
sbb
stos
js
adc
sbb
or
(bad)
mov
sti
xlat
cmp
inc
loope
or
mov
lods
jmp
push
xlat
push
loopne
mov
imul
in
pop
xor
movs
lods
push
or
pushf
or
mov
push
imul
test
dec
loopne
cmp
or
sti
add
jns
leave
pop
ret
lods
jmp
(bad)
fdiv
mov
(bad)
repnz
mov
stos
ret
js
lds
or
mov
js
sub
cli
mov
mov
push
push
and
sahf
push
and
int
retf
cmp
jmp
lea
retf
mov
mov
push
or
xlat
mov
inc
or
stos
mov
cmp
ins
lods
jecxz
push
xlat
jge
xchg
lea
fisubr
jae
dec
test
mov
movsx
dec
bound
xlat
mov
lods
jmp
push
xlat
push
loopne
cmp
lods
in
in
xlat
push
loopne
in
mov
sub
xlat
sbb
lds
iret
push
xlat
int
mov
dec
test
mov
idiv
sub
loopne
daa
dec
or
xchg
xchg
dec
stos
inc
fisubr
jae
dec
pusha
jmp
invd
inc
mov
or
mov
mov
or
push
mov
sub
pop
dec
jmp
pop
lock
ret
mov
mov
jmp
push
loopne
cmp
es
data16
xlat
ret
cmp
adc
sub
stos
inc
fisubr
jae
dec
pusha
mov
pop
or
mov
mov
mov
dec
mov
sub
pop
dec
jmp
or
or
ret
mov
mov
jmp
imul
sub
push
test
xchg
mov
into
jge
dec
mov
sub
pop
(bad)
(bad)
rcr
sub
shr
shr
or
mov
or
inc
or
sub
shr
loopne
daa
dec
or
mul
push
test
popf
mov
dec
movs
sub
es
mov
imul
test
or
movs
cmp
push
(bad)
mov
cld
xlat
cmp
inc
dec
test
nop
push
bound
sub
pop
stos
sub
or
movs
retf
mov
inc
inc
pop
or
xlat
mov
arpl
push
mov
inc
dec
test
nop
sbb
xchg
sti
out
xlat
sbb
ficomp
bound
inc
dec
pusha
pop
enter
pop
cli
loopne
daa
dec
or
in
and
stos
fild
not
mov
push
fld
stos
movs
dec
jmp
out
enter
lock
retf
or
dec
stos
mov
mov
dec
imul
stos
sub
inc
cdq
inc
or
lock
jmp
or
sub
stos
shl
stos
sub
dec
jnp
or
stos
sub
shr
(bad)
mov
lock
dec
mov
mov
cs
mov
iret
out
xchg
dec
or
sub
stos
out
or
stos
sub
and
dec
shl
jmp
dec
pop
js
jnp
sub
stos
xlat
jnp
xor
dec
bound
inc
dec
bound
sub
stos
inc
scas
shr
sub
inc
int
or
sub
retf
ds
dec
or
mov
dec
bound
sub
inc
xor
not
or
gs
or
test
daa
ret
mov
mov
jbe
push
pop
inc
sub
stos
mov
mov
push
rcl
stos
sub
sti
xlat
(bad)
test
or
mov
mov
lea
(bad)
mov
sti
inc
and
push
pusha
sti
pushf
or
ret
sub
sub
rcr
and
fs
push
or
mov
stos
sub
mov
adc
stos
movs
retf
mov
shr
or
out
dec
stos
inc
dec
bound
sub
loopne
and
or
lods
out
push
xlat
push
bound
pop
push
or
sub
inc
loope
or
sub
stos
inc
mov
or
xchg
jmp
jecxz
movs
or
sti
rcr
stos
sub
rol
ins
stos
pop
inc
mov
dec
bound
int3
push
loopne
es
or
jbe
shr
pop
and
iret
in
sub
clc
jle
mov
sub
pop
adc
stos
fild
iret
and
mov
inc
mov
sub
aam
int
test
sub
aaa
and
xchg
cmp
stos
daa
retf
sub
mov
xor
stos
sub
daa
push
inc
or
sub
sub
dec
or
inc
or
push
or
es
jo
dec
neg
rcl
xlat
(bad)
lea
mov
and
dec
lock
es
push
neg
shl
push
xlat
int
mov
xlat
mov
cs
mov
push
js
mov
inc
int
or
lods
dec
or
xlat
mov
push
sbb
cmps
ret
cmps
sub
imul
hlt
mov
push
add
fcom
mov
inc
sub
popf
addr16
test
aaa
lds
sub
loopne
mov
mov
ds
not
jl
inc
dec
sub
mov
push
add
rcl
mov
and
lea
mov
sti
inc
dec
bound
imul
and
addr16
int
iret
pushf
or
stos
daa
retf
sub
iret
pushf
or
or
dec
stos
mov
mov
stos
sub
xor
stos
pop
inc
neg
shr
xchg
pop
cli
dec
stos
sub
repnz
dec
or
mov
dec
xlat
mov
inc
pusha
dec
or
mov
invd
xchg
ins
inc
pop
cs
or
and
or
dec
or
sub
mov
and
adc
mov
push
mov
dec
or
ins
pop
sub
test
dec
xor
pop
or
scas
pop
out
dec
stos
pop
jb
scas
sbb
dec
stos
pop
jp
scas
fcom
dec
stos
pop
bound
scas
mov
push
scas
push
out
dec
stos
pop
push
xor
pop
pop
xor
pop
inc
xor
daa
retf
mov
stos
xlat
cmp
inc
popf
inc
or
xlat
mov
scas
push
out
dec
stos
pop
pop
xor
pop
inc
xor
pop
inc
pusha
sbb
pop
or
loopne
and
or
xlat
mov
stos
xlat
cmp
inc
pop
inc
or
sub
push
lock
push
sub
lods
ja
mov
stos
movs
retf
rcl
mov
inc
inc
inc
or
xlat
mov
xchg
cs
or
sar
and
imul
aad
not
cmp
inc
in
or
xlat
mov
fimul
and
shr
pop
jae
dec
bound
sub
or
inc
or
sub
lea
mov
and
mov
stos
test
js
push
or
imul
aad
not
cmp
inc
inc
inc
or
xlat
mov
arpl
push
mov
stos
mov
fnstenv
scas
dec
stos
movs
shl
push
xlat
mov
inc
aam
not
add
xlat
mov
stos
pop
outs
bound
lock
shr
cmps
mov
lods
out
dec
stos
rcl
stos
sub
mov
cmp
pop
iret
(bad)
lea
mov
and
ret
lea
mov
sti
movs
retf
stc
push
xlat
mov
ret
add
retf
stc
push
xlat
mov
inc
inc
inc
or
xlat
dec
or
xlat
mov
push
sbb
cmps
(bad)
aad
not
sub
sub
ret
es
dec
stos
inc
dec
loopne
and
push
sbb
cmps
jecxz
sub
dec
sub
or
movs
mov
push
xlat
int
push
push
cmp
sub
pop
jl
inc
dec
bound
sub
inc
and
xlat
jnp
ds
dec
or
dec
or
xlat
mov
inc
adc
mov
push
mov
mov
xchg
sbb
or
adc
sub
sub
ret
iret
cdq
dec
stos
inc
dec
loopne
and
push
sbb
cmps
jg
sub
fld
or
lods
mov
push
xlat
dec
sub
mov
push
adc
jp
test
dec
test
aad
not
lea
mov
sti
inc
arpl
jmp
aad
idiv
shl
stos
sub
int3
mov
sub
lea
mov
sti
xlat
jnp
or
loopne
and
sub
dec
jge
inc
dec
bound
sub
inc
jns
or
push
loopne
and
inc
fisttp
stos
movs
retf
cmc
push
xlat
mov
lods
mov
pusha
xchg
or
lods
mov
loopne
and
sub
pop
pusha
push
sub
lods
mov
push
xlat
push
neg
ror
stos
sub
mov
(bad)
mov
stos
pop
outs
bound
dec
shr
out
sub
sahf
add
dec
stos
rcl
stos
sub
mov
or
xlat
mov
lods
mov
pusha
or
or
lods
mov
loopne
and
sub
pop
pusha
push
sub
lods
mov
push
xlat
push
neg
rcl
sub
mov
(bad)
mov
stos
pop
outs
bound
dec
shr
(bad)
mov
add
dec
stos
sar
sub
test
aad
not
imul
test
or
sub
sub
sub
ret
add
dec
stos
inc
dec
loopne
and
push
sbb
cmps
imul
dec
or
mov
push
xlat
dec
jecxz
daa
clc
lea
mov
and
xor
push
dec
xor
push
outs
bound
dec
shr
sbb
add
dec
stos
ror
test
shl
lea
mov
xchg
sub
sub
mov
stos
sub
lea
mov
sti
movs
retf
stc
push
xlat
mov
ret
add
retf
stc
push
xlat
mov
inc
in
inc
or
xlat
dec
or
xlat
mov
push
sbb
cmps
daa
lods
sub
push
aad
not
sub
sub
ret
cmp
loopne
das
dec
or
xchg
jmp
loope
sub
ins
lods
mov
push
xlat
dec
jecxz
daa
clc
lea
mov
and
xor
push
dec
xor
push
outs
bound
dec
shr
push
lods
sub
sahf
or
dec
stos
rol
sub
mov
shl
test
mov
sub
mov
sub
or
rol
shl
jp
test
dec
test
aad
not
lea
mov
sti
inc
arpl
jmp
aad
idiv
shl
mov
sub
cmc
push
xlat
lds
and
and
shr
or
sub
ret
sub
jmp
push
xchg
jmp
sub
inc
dec
bound
fdiv
or
fistp
test
stos
xchg
jmp
jb
stos
pop
mov
push
les
pusha
fwait
mov
or
not
iret
scas
sub
stos
movs
retf
in
xlat
mov
shr
clc
dec
push
neg
fdiv
or
pop
aad
imul
loopne
dec
sub
or
shl
es
sbb
es
cmc
push
xlat
sbb
not
or
lods
mov
bound
sub
test
sti
clc
push
xlat
mov
push
sub
push
sbb
cmps
mov
stos
inc
dec
bound
inc
dec
or
push
dec
or
lods
mov
lock
or
sub
test
inc
cwde
or
mov
push
mov
mov
fnsetpm(287
push
xlat
mov
clc
inc
fisubr
pop
(bad)
mov
inc
lds
stos
inc
dec
test
les
or
les
clc
push
xlat
mov
jns
dec
or
sar
and
mov
pop
(bad)
mov
inc
dec
dec
or
push
or
inc
dec
pusha
(bad)
pushf
or
ret
push
xchg
dec
stos
inc
push
mov
stos
sub
loopne
movs
mov
sub
push
bound
imul
and
jg
and
movs
sbb
neg
cmp
add
dec
or
jmp
inc
and
pop
cld
mov
and
stc
mov
mov
stos
sub
cs
dec
or
daa
retf
iret
stos
sub
sahf
lods
out
dec
stos
pop
inc
neg
shr
stos
sub
iret
push
ins
dec
or
sub
add
test
scas
sub
sahf
test
dec
stos
pop
inc
neg
sar
stos
sub
xchg
mov
mov
push
or
dec
or
push
jnp
xor
dec
loopne
sub
or
sar
sub
jge
xlat
jnp
xor
dec
loopne
sub
or
sub
sbb
adc
dec
jge
xlat
jnp
imul
nop
sbb
cmp
sub
dec
jge
xlat
jnp
or
loopne
sub
inc
and
mov
dec
mov
jg
nop
sbb
cmp
and
jne
sub
lds
and
addr16
jne
xchg
lds
nop
sbb
cmp
and
jne
xor
adc
nop
sbb
cmp
and
jne
das
mov
fisubr
lds
mov
pop
pop
neg
cmp
loopne
sub
or
(bad)
lock
iret
hlt
jbe
shr
or
fisttp
cmp
mov
cmps
fisttp
cmp
mov
mov
mov
mov
mov
mov
mov
mov
or
cmp
mov
xchg
or
cmp
mov
fisttp
cmp
mov
lahf
fisttp
cmp
sbb
adc
out
into
aaa
mov
bound
rcr
stos
sub
int3
mov
call
or
stos
outs
into
aaa
mov
mov
inc
mov
and
sub
(bad)
cpuid
call
outs
jl
inc
dec
loopne
sub
shr
bound
xlat
mov
(bad)
jmp
mov
pop
or
sub
or
adc
cmp
or
xlat
scas
or
and
adc
mov
push
scas
mov
add
xlat
lds
fadd
movsx
fbld
ins
push
imul
mov
jmp
or
cmp
mov
out
fisttp
cmp
mov
jecxz
or
cmp
mov
out
or
cmp
mov
sti
fisttp
cmp
mov
(bad)
fisttp
cmp
mov
repz
cmp
mov
neg
or
cmp
mov
retf
fisttp
cmp
mov
iret
fisttp
cmp
mov
ret
fisttp
cmp
mov
(bad)
fisttp
cmp
mov
fcmovnu
or
cmp
mov
(bad)
or
cmp
mov
rcr
or
cmp
mov
xlat
fisttp
cmp
mov
sub
or
cmp
mov
das
fisttp
cmp
mov
and
or
cmp
mov
daa
fisttp
cmp
mov
cmp
or
cmp
mov
aas
fisttp
cmp
mov
xor
or
cmp
mov
aaa
fisttp
cmp
mov
or
or
cmp
mov
pand
cmp
mov
add
or
cmp
mov
pop
fisttp
cmp
mov
sbb
or
cmp
mov
pop
fisttp
cmp
mov
adc
or
cmp
mov
pop
fisttp
cmp
mov
imul
or
mov
mov
outs
fisttp
cmp
mov
arpl
or
cmp
mov
fisttp
or
mov
mov
jnp
or
cmp
mov
jg
or
cmp
mov
jae
or
cmp
mov
ja
or
cmp
mov
dec
fisttp
cmp
mov
dec
fisttp
cmp
mov
inc
fisttp
cmp
mov
inc
fisttp
cmp
mov
push
fisttp
cmp
mov
push
fisttp
cmp
mov
stos
fmul
cmp
mov
scas
fmul
cmp
mov
mov
mov
mov
cmps
fmul
cmp
mov
mov
mov
mov
mov
mov
mov
mov
or
cmp
mov
mov
or
cmp
mov
mov
or
cmp
mov
(bad)
fmul
cmp
mov
sbb
or
mov
mov
xchg
or
cmp
mov
fmul
cmp
mov
lahf
fmul
cmp
mov
xchg
fmul
cmp
mov
xchg
fmul
cmp
mov
jmp
or
cmp
mov
out
fmul
cmp
mov
jecxz
or
cmp
mov
out
or
cmp
mov
sti
fmul
cmp
mov
(bad)
fmul
cmp
mov
repz
cmp
mov
neg
or
cmp
mov
retf
fmul
cmp
mov
iret
fmul
cmp
mov
fcmovnu
or
cmp
mov
(bad)
or
cmp
mov
rcr
or
cmp
mov
xlat
fmul
cmp
mov
sub
or
cmp
mov
daa
fmul
cmp
mov
cmp
or
cmp
mov
aas
fmul
cmp
mov
xor
or
cmp
mov
aaa
fmul
cmp
mov
or
or
cmp
mov
paddusb
cmp
mov
add
or
cmp
mov
pop
fmul
cmp
mov
adc
or
cmp
mov
pop
fmul
cmp
mov
imul
or
mov
mov
outs
fmul
cmp
mov
arpl
or
cmp
mov
fmul
or
mov
mov
jnp
or
cmp
mov
jg
or
cmp
mov
jae
or
cmp
mov
ja
or
cmp
mov
dec
fmul
cmp
mov
dec
fmul
cmp
mov
inc
fmul
cmp
mov
inc
fmul
cmp
mov
pop
fmul
cmp
mov
pop
fmul
cmp
mov
push
fmul
cmp
mov
push
fmul
cmp
