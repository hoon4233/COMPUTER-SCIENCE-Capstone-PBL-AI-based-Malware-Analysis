push
and
inc
add
push
loope
or
mov
add
add
adc
or
add
int3
xor
push
(bad)
push
xor
int3
add
or
or
or
mov
and
int3
add
and
loope
push
loope
and
mov
adc
loope
push
push
and
mov
push
or
inc
push
push
and
loope
xor
call
adc
dec
mov
inc
and
loope
add
inc
add
add
loope
push
(bad)
pop
xor
push
loope
push
adc
add
inc
inc
add
push
push
push
call
add
loope
(bad)
(bad)
(bad)
inc
inc
add
call
push
mov
dec
add
or
add
add
inc
and
call
(bad)
add
add
loope
add
add
call
lahf
jae
sbb
mov
outs
out
and
jmp
test
outs
lock
dec
arpl
test
push
inc
sub
xchg
fwait
and
dec
ja
lea
pop
dec
sub
jecxz
jecxz
pop
dec
sub
test
mov
mov
in
add
out
repnz
push
dec
pop
jecxz
lea
fstp
hlt
stos
inc
inc
xor
jmp
jecxz
test
jb
mov
xchg
popf
push
jmp
xchg
cmps
lea
pop
hlt
lods
pop
dec
aaa
aam
mov
xchg
pop
inc
sub
test
mov
cmps
lea
pop
jmp
bound
stc
mov
gs
(bad)
xchg
xchg
xor
mov
mov
push
inc
pop
clc
lea
stos
push
fs
test
jmp
fs
test
popf
inc
push
sub
(bad)
pushf
data16
jecxz
inc
dec
sub
mov
dec
cld
push
hlt
mov
dec
push
xchg
mov
into
mov
loope
inc
sti
xor
mov
jno
jmp
call
stos
push
dec
sbb
lea
mov
loope
push
jmp
repnz
cmps
pop
push
or
mov
fild
aaa
clc
(bad)
lea
push
jmp
call
ins
sub
mov
mov
inc
sub
test
xor
in
call
dec
cmp
xchg
mov
scas
jge
cmp
mov
push
cli
pop
cmc
stos
and
in
cwde
jno
sbb
mov
sub
xchg
pushf
jne
cmp
stos
push
push
aaa
hlt
xchg
stos
dec
loopne
jecxz
push
dec
cmp
loope
jecxz
pop
inc
sub
leave
sbb
mov
test
mov
mov
stos
inc
push
or
test
mov
and
ror
push
stos
add
loop
xchg
sbb
stos
push
pop
sub
inc
jmp
xchg
data16
fwait
or
adc
mov
dec
jmp
icebp
lods
adc
xlat
(bad)
adc
jo
mov
sar
into
fst
mov
or
fnstenv
jmp
mov
pop
cmps
popf
pop
push
ss
test
push
mov
adc
iret
rcr
scas
and
mov
aam
adc
jge
or
pop
mov
pop
adc
fld1
push
jecxz
in
push
dec
ja
cdq
lea
mov
or
movs
rol
adc
dec
cmp
mov
ficomp
cmp
mov
mov
loope
adc
adc
iret
rcl
(bad)
pop
div
iret
cwde
dec
call
adc
iret
rcl
mov
or
adc
push
mov
or
mov
sbb
mov
(bad)
(bad)
and
adc
rcr
adc
push
xor
sbb
mov
adc
mov
dec
mov
add
push
in
adc
mul
ficom
mov
or
mov
jb
scas
pop
inc
cmp
adc
push
iret
fst
mov
and
mov
scas
pop
inc
pop
mov
inc
mov
add
push
xlat
fisub
mov
adc
xchg
xchg
inc
mov
add
imul
dec
cmp
rcr
or
sbb
fiadd
ja
rcr
or
inc
mov
add
jbe
mov
scas
pop
inc
pop
mov
inc
mov
mov
add
mov
xchg
xchg
inc
mov
sbb
ins
test
inc
xchg
inc
dec
cmp
rcr
or
sbb
fiadd
adc
adc
adc
dec
in
adc
mul
ficomp
mov
push
ja
rcr
and
adc
xchg
xchg
inc
mov
movs
iret
ficom
mov
mov
xor
adc
pusha
test
pop
mov
sbb
popa
movs
loope
push
out
out
add
inc
mov
push
or
cmps
rol
push
mov
inc
cmp
adc
push
iret
ficom
mov
and
mov
scas
pop
inc
pop
cmps
xlat
(bad)
adc
or
mov
adc
out
add
inc
mov
mov
pop
div
iret
cwde
dec
call
or
cmps
iret
rcl
mov
or
adc
outs
cmps
iret
fstp
mov
adc
loope
push
out
out
add
inc
mov
push
or
mov
jb
scas
pop
inc
cmp
adc
push
mov
sbb
xchg
add
dec
ds
fcom
or
inc
mov
mov
add
mov
xchg
xchg
inc
mov
add
ins
mov
inc
mov
xor
adc
push
mov
adc
or
add
ja
(bad)
(bad)
and
or
mov
jb
scas
pop
inc
cmp
adc
pusha
movs
iret
fstp
mov
or
adc
push
iret
fst
sbb
outs
cmps
loope
push
out
out
add
inc
mov
sbb
pusha
mov
pop
div
iret
cwde
dec
call
adc
iret
fst
mov
or
adc
push
mov
adc
fsubr
or
add
ja
(bad)
(bad)
and
sbb
aad
or
dec
mov
repnz
mov
sbb
fist
mov
adc
loope
push
out
out
add
inc
mov
mov
pop
div
iret
cwde
dec
call
adc
iret
fst
pop
mov
xor
adc
imul
test
add
ja
rcr
and
adc
xchg
xchg
dec
mov
or
ja
(bad)
fisttp
jb
scas
pop
inc
cmp
adc
pusha
mov
pop
mov
or
jbe
mov
scas
pop
inc
pop
test
pop
mov
pop
or
movs
shr
or
add
ja
(bad)
(bad)
and
sbb
rcl
or
inc
mov
sbb
fst
mov
sbb
aad
or
inc
mov
add
imul
mov
sbb
aaa
mul
ficomp
mov
push
imul
div
iret
cwde
dec
call
adc
iret
fist
mov
or
adc
pusha
cmps
iret
fcom
dec
mov
xchg
into
cwde
dec
in
adc
mul
rcl
inc
mov
add
imul
adc
xchg
xchg
inc
mov
add
push
mov
dec
cmp
rcr
or
sbb
fiadd
sbb
rcr
pop
mov
adc
loope
push
out
out
add
inc
test
add
ja
aam
or
inc
xchg
inc
dec
cmp
rcr
or
sbb
fisub
sbb
loope
and
push
push
call
fidiv
sub
lahf
out
call
iret
xor
push
loope
sti
and
and
xchg
(bad)
xor
sub
pop
xchg
call
xchg
inc
ds
xchg
loope
push
xchg
ins
xchg
cmp
mov
call
fidiv
sub
mov
call
stc
xor
push
loope
shl
jnp
hlt
sbb
pop
cwde
xchg
les
(bad)
jb
scas
sbb
pop
xchg
call
xchg
inc
adc
loope
push
mov
push
outs
cmps
loope
sub
dec
mov
stos
(bad)
and
and
(bad)
and
and
xchg
stos
popa
(bad)
jb
scas
jbe
pop
xchg
call
xchg
inc
push
xchg
loope
push
lds
xchg
cmp
fsub
call
fidiv
sub
shl
lea
and
mov
and
and
xchg
mov
(bad)
jb
scas
push
cwde
jle
jb
xlat
inc
jl
xchg
loope
push
out
adc
repnz
sub
push
jecxz
xor
sub
xchg
and
and
mov
mov
and
xchg
xchg
jb
push
fisub
rol
aas
jb
mov
pop
ja
sti
ret
and
cdq
sbb
stos
cmps
dec
pop
jg
int
pop
outs
mov
stos
retf
push
ror
jno
repnz
jmp
cmp
jb
jbe
pop
ja
sti
ret
cs
rcl
adc
mov
xor
push
in
das
(bad)
jb
push
repz
test
add
pop
sbb
in
dec
(bad)
bound
ss
and
mov
stc
loope
and
sahf
pop
stc
imul
(bad)
add
jno
push
ja
pop
push
loop
stos
retf
sbb
movs
sbb
jmp
add
mov
mov
fs
retf
fwait
call
dec
stc
dec
push
loop
bound
and
mov
mov
adc
lahf
mov
sahf
stos
sub
and
and
sbb
push
jp
cdq
adc
js
xchg
xor
shr
push
jmp
push
movlps
and
dec
fdivr
push
xor
pop
sbb
jo
mov
and
hlt
inc
add
fidivr
pop
sub
repnz
xchg
push
test
mov
pop
xchg
loope
rol
jl
and
push
mov
and
mov
cmp
fadd
sub
mov
xchg
adc
push
sub
repnz
out
ins
jmp
push
inc
xchg
shl
sahf
push
mov
lds
fidivr
dec
fnclex
aas
pop
loopne
add
aas
cmp
sub
(bad)
jno
mov
sbb
outs
mov
fwait
mov
fmulp
ja
shl
and
or
push
jge
(bad)
jb
pop
idiv
push
mov
mov
xor
nop
mov
and
jle
imul
push
xor
les
shl
addr16
inc
add
pop
sub
aam
popa
imul
push
jg
or
add
pop
push
addr16
in
pop
push
jnp
shr
cs
xchg
out
and
push
retf
or
xor
mov
mov
and
mov
jne
jo
fidiv
and
outs
xchg
sbb
fisubr
add
cmp
call
push
jg
or
push
popf
(bad)
fisttp
mov
mov
(bad)
scas
jns
jbe
sub
mov
sub
test
and
and
dec
fnclex
and
jnp
dec
call
mov
(bad)
jne
(bad)
mov
(bad)
adc
addr16
push
outs
mov
out
inc
mov
rcr
ins
ins
jmp
jae
mov
in
adc
loopne
mov
in
adc
dec
and
shl
inc
inc
or
mov
push
mov
mov
cdq
in
mov
inc
inc
add
mov
aas
cmp
inc
and
test
xchg
rcr
fnstenv
icebp
push
mov
cmp
(bad)
test
add
adc
outs
inc
bound
cmp
sub
inc
and
add
call
rcl
adc
pushf
fild
ins
leave
push
and
in
inc
and
repz
add
cmps
push
or
inc
jbe
mov
loope
mov
push
jb
mov
push
xchg
adc
inc
and
fidiv
and
shl
fcmovne
ja
rcr
scas
jo
cmps
pop
repnz
imul
cli
xchg
fidiv
stos
pop
sti
in
dec
mov
dec
sti
in
dec
lea
dec
iret
shr
jb
and
mov
ja
(bad)
push
mov
adc
out
xchg
sbb
pop
mov
and
fadd
push
(bad)
test
sbb
pop
mov
and
inc
mov
pop
xchg
loope
ja
and
retf
loop
sub
inc
push
ficom
out
lea
(bad)
sahf
jb
mov
leave
call
push
jnp
mov
xchg
xchg
jnp
mov
stc
sti
cmp
fisub
retf
int3
cwde
fidiv
and
outs
mov
cmps
dec
pop
mov
call
stos
fst
cdq
sbb
mov
mov
jnp
(bad)
jmp
add
inc
retf
rcl
cmp
(bad)
mov
pop
dec
mov
jns
cmp
fnsave
repnz
adc
mov
rcl
popa
mov
fwait
call
add
ss
shl
pop
inc
push
bound
jo
xchg
mov
mov
or
mov
(bad)
call
in
repnz
pop
sub
iret
sub
ja
adc
popf
and
int
pop
sbb
in
repnz
rcl
dec
pop
ja
bnd
inc
xchg
aam
ins
loop
jp
and
(bad)
sub
gs
arpl
or
bound
dec
mov
and
jbe
mov
(bad)
push
mov
in
les
(bad)
mov
je
stc
ret
jbe
cdq
pop
xchg
loope
loop
ja
mov
and
test
(bad)
push
addr16
cwde
jno
jmp
add
add
inc
aaa
sbb
jecxz
ja
inc
push
sub
rcl
sub
xor
fwait
call
add
jb
in
pop
ja
sub
push
rol
cmps
or
add
add
pop
es
mov
sub
add
mov
addr16
retf
xchg
mov
fcom
in
fwait
(bad)
jb
pop
arpl
fstp
and
push
ja
in
nop
push
mov
mov
jb
(bad)
push
mov
aas
stc
stos
sbb
sub
in
fwait
call
pop
retf
xor
rcl
ins
jns
cli
fisttp
ins
popf
mov
adc
stos
pop
sti
in
dec
mov
dec
sti
in
dec
lea
dec
mov
and
mov
outs
mov
jnp
mov
sub
cmps
push
outs
push
pop
call
cdq
mov
push
ds
je
pop
popa
xchg
arpl
and
mov
jnp
push
xchg
int3
test
sub
mov
retf
push
inc
xor
in
arpl
adc
fcomp
fisttp
or
fdiv
or
lods
adc
push
jg
fcomp
ss
mov
cmp
stc
repz
arpl
loop
mov
sbb
repz
fnclex
jmp
jae
sti
loop
jae
daa
out
shl
pop
aam
mov
(bad)
(bad)
(bad)
push
mov
xchg
add
ja
loope
out
and
aaa
xor
mov
xchg
push
mov
aas
xor
test
inc
sahf
xor
mov
fsubr
pop
sbb
mov
jne
imul
add
push
jae
or
movs
sub
dec
and
(bad)
push
xchg
(bad)
sti
mov
(bad)
mov
and
and
push
fadd
inc
mov
shl
daa
stc
dec
push
addr16
cwde
jno
jmp
add
add
xchg
loopne
and
sti
test
mov
dec
mov
push
fnstenv
and
jb
jns
ja
rcl
add
loop
sbb
fidiv
and
xchg
mov
and
jb
fidiv
sbb
push
in
fstp
jbe
adc
ja
rcr
jle
mov
push
mov
push
outs
(bad)
repz
fisttp
stc
repz
les
and
rcr
mov
fbstp
and
mov
jb
lea
pop
xor
pop
adc
aas
retf
pop
sub
sub
ins
push
call
mov
fsub
ins
sbb
push
daa
cmps
jb
and
rcl
dec
pop
ja
stc
dec
(bad)
mov
pop
ja
clc
dec
data16
pop
xchg
push
or
and
or
inc
shr
test
popa
test
sbb
mov
stos
(bad)
stos
xor
jmp
mov
ins
push
pop
dec
(bad)
(bad)
shr
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
call
and
add
mov
mov
call
adc
inc
add
push
vpcomb
inc
push
(bad)
or
inc
and
pop
or
and
and
int3
mov
adc
xor
push
mov
add
and
mov
add
mov
loope
and
int3
mov
xor
push
inc
pop
loope
int3
adc
push
add
inc
or
add
adc
loope
inc
or
inc
inc
push
adc
adc
and
inc
pop
inc
inc
inc
adc
or
xor
add
mov
adc
add
add
call
or
and
(bad)
push
add
push
add
add
push
push
int3
add
call
loope
jmp
add
mov
add
loope
int3
add
mov
add
push
(bad)
call
call
or
push
push
mov
(bad)
call
xor
inc
xor
and
mov
int3
int3
int3
int3
xor
push
mov
add
int3
int3
int3
int3
int3
int3
push
mov
push
dec
dec
pop
xor
mov
mov
inc
inc
inc
inc
add
loop
call
jmp
push
xor
add
inc
adc
inc
inc
adc
loope
add
and
adc
or
mov
adc
push
int3
inc
adc
adc
mov
push
int3
xor
push
add
inc
inc
add
push
push
add
and
add
or
(bad)
(bad)
int3
loope
add
push
inc
adc
call
inc
and
(bad)
or
xor
or
mov
call
push
xor
pop
push
adc
push
add
or
mov
xor
mov
push
push
inc
xor
int3
call
or
loope
inc
inc
loope
or
push
loope
(bad)
(bad)
loope
adc
push
mov
or
add
loope
xor
call
and
and
xor
dec
push
call
and
push
push
(bad)
push
push
add
(bad)
push
or
inc
mov
(bad)
jmp
push
push
jmp
adc
add
inc
call
inc
(bad)
call
inc
and
loope
mov
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
push
push
mov
test
jne
call
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
lods
mov
mov
cmp
jne
xor
inc
jcxz
jmp
inc
pop
pop
ret
push
adc
inc
(bad)
adc
mov
int3
add
int3
adc
dec
dec
mov
adc
call
(bad)
dec
inc
push
adc
and
and
xor
(bad)
mov
or
add
push
and
int3
adc
adc
and
pop
mov
xor
mov
push
adc
push
add
pop
push
push
add
inc
loope
adc
push
add
call
loope
inc
add
push
mov
xor
adc
loope
jmp
xor
inc
loope
mov
call
mov
mov
inc
or
loope
xor
mov
inc
add
push
mov
or
(bad)
push
inc
xor
xor
(bad)
push
loope
mov
push
call
pop
call
or
dec
mov
and
inc
and
call
push
push
add
(bad)
jmp
inc
push
mov
add
mov
xor
add
push
int3
add
adc
(bad)
dec
and
inc
mov
and
and
xor
adc
mov
(bad)
mov
push
or
add
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
test
je
push
push
call
pop
pop
mov
pop
ret
int3
int3
int3
int3
mov
jp
stos
jbe
dec
inc
jns
int3
int3
int3
push
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
sub
mov
mov
jne
xor
and
mov
mov
inc
lods
test
jne
mov
dec
dec
mov
jne
or
add
push
push
mov
mov
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
push
push
call
add
pop
or
(bad)
dec
xor
(bad)
xor
call
add
xor
push
inc
add
int3
call
inc
push
add
or
inc
push
int3
int3
inc
push
loope
int3
push
push
(bad)
xor
add
int3
or
adc
adc
xor
inc
push
add
int3
or
and
adc
loope
mov
mov
xor
dec
push
or
push
call
inc
add
inc
(bad)
push
add
pop
and
call
inc
xor
add
int3
push
inc
mov
mov
adc
push
and
and
adc
mov
add
add
adc
push
call
adc
add
inc
adc
or
push
push
push
add
push
push
inc
push
add
(bad)
loope
push
inc
push
mov
inc
loope
and
and
push
inc
loope
or
adc
int3
inc
push
push
inc
push
mov
mov
add
push
mov
test
jne
les
mov
pop
inc
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
test
je
mov
push
push
call
test
jne
je
push
call
add
mov
test
je
push
push
pop
mov
mov
inc
dec
mov
inc
dec
dec
inc
dec
add
inc
push
xor
push
mov
lods
inc
test
jne
mov
pop
dec
cmp
je
pop
inc
loop
push
call
add
test
mov
mov
mov
mov
je
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
jmp
lea
mov
cmp
jne
test
je
mov
cmp
jne
call
pop
pop
mov
push
push
mov
call
add
add
test
jne
xor
jmp
sbb
sbb
test
jne
mov
mov
lock
test
je
mov
call
mov
push
call
mov
cdq
add
mov
cmp
jne
test
je
push
push
mov
call
call
push
pop
test
jne
and
add
add
rcr
mov
test
jne
ret
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
xor
lock
test
je
mov
call
mov
cdq
push
mov
push
mov
mov
and
bswap
pop
add
mov
lods
cmp
mov
je
sub
jmp
mov
mov
cmp
jne
test
je
push
push
push
mov
push
mov
and
inc
mov
add
add
mov
pop
dec
dec
dec
dec
mov
add
pop
mov
add
mov
mov
jmp
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
xor
lock
test
je
mov
call
mov
mov
mov
cld
push
pop
inc
mov
xchg
add
inc
add
dec
dec
dec
dec
add
movzx
mov
dec
lea
dec
mov
dec
dec
dec
dec
mov
add
test
jne
pusha
add
pusha
add
add
add
test
je
push
push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
xor
push
push
push
push
push
lea
mov
mov
mov
mov
mov
mov
call
mov
mov
add
sub
adc
inc
push
adc
and
push
add
or
adc
inc
inc
push
mov
mov
push
loope
push
add
mov
loope
int3
adc
add
mov
inc
int3
(bad)
push
int3
int3
push
loope
mov
loope
adc
push
loope
call
call
add
call
loope
push
int3
push
mov
and
or
adc
push
(bad)
or
call
xor
or
add
add
add
inc
mov
mov
inc
add
or
(bad)
or
loope
call
and
and
xor
loope
dec
inc
loope
inc
adc
and
mov
popa
xor
cs
add
aaa
cmp
xor
xor
xor
add
jo
arpl
xor
jo
add
inc
inc
add
add
or
add
or
or
push
sldt
or
adc
add
jo
adc
add
jo
adc
push
pop
add
or
sbb
add
jo
sbb
add
jo
sbb
push
pop
add
or
and
add
jo
and
add
jo
and
push
mov
mov
lods
xor
pop
shr
dec
dec
dec
push
stos
pop
test
jne
mov
mov
mov
loop
inc
ret
mov
sbb
sub
mov
sbb
add
adc
xor
lock
cmp
je
mov
call
mov
mov
cmp
adc
push
adc
loop
ret
je
push
push
call
add
mov
cdq
mov
cmp
jne
cmp
je
push
push
mov
call
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
mov
push
call
push
push
push
mov
push
call
mov
mov
mov
mov
mov
push
call
mov
push
mov
push
call
mov
push
push
call
mov
mov
mov
mov
push
mov
push
call
mov
lea
push
call
push
push
call
mov
mov
push
mov
push
call
add
test
jne
xor
jmp
push
push
push
lea
push
call
test
je
lea
push
call
lea
push
call
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
push
mov
push
push
push
push
push
push
push
push
push
push
push
call
mov
cmp
jne
xor
jmp
push
mov
push
call
mov
push
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
cmp
ja
cmp
je
cmp
ja
cmp
je
cmp
je
cmp
je
jmp
cmp
je
jmp
cmp
je
cmp
je
cmp
je
jmp
mov
mov
mov
push
call
push
call
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
call
mov
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
push
push
push
mov
push
call
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
xor
jmp
jmp
mov
push
call
mov
mov
test
je
call
jmp
mov
shr
and
movzx
add
mov
mov
shr
and
movzx
cmp
jne
push
push
push
mov
push
call
jmp
mov
shr
and
movzx
mov
mov
mov
cmp
je
cmp
je
jmp
push
push
mov
push
push
mov
push
call
jmp
mov
push
call
jmp
mov
push
mov
push
mov
push
mov
push
call
jmp
jmp
lea
push
mov
push
call
mov
push
call
push
push
mov
push
mov
push
mov
push
call
push
lea
push
call
lea
push
mov
push
call
jmp
push
push
push
mov
push
call
mov
mov
add
mov
jmp
push
call
jmp
mov
jmp
mov
add
mov
cmp
jge
mov
push
push
mov
push
mov
push
call
jmp
push
push
push
mov
push
call
jmp
mov
push
mov
push
mov
push
mov
push
call
jmp
xor
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
cmp
je
cmp
je
jmp
mov
jmp
mov
and
movzx
cmp
je
mov
and
movzx
cmp
jne
mov
and
movzx
push
mov
push
call
mov
jmp
xor
mov
pop
ret
push
mov
sub
push
call
mov
mov
cmp
jne
mov
inc
test
je
cmp
jne
cmp
jne
inc
jmp
cmp
jle
inc
cmp
jg
mov
test
je
cmp
jle
and
lea
push
call
call
push
push
call
test
pop
pop
je
movzx
jmp
push
pop
push
push
push
push
call
push
call
mov
call
push
call
pop
leave
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
pop
push
push
mov
call
pop
mov
pop
ret
mov
test
je
mov
lea
push
push
call
pop
pop
ret
mov
imul
push
push
call
push
call
ret
