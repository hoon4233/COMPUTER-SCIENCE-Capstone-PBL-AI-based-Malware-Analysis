xor
pop
mov
inc
add
ss
inc
cmp
mov
mov
cmc
push
push
dec
mov
outs
(bad)
jno
adc
xor
jge
and
sbb
add
mov
mov
mov
jmp
ds
adc
xchg
add
adc
mov
mov
mov
ss
out
mov
repnz
(bad)
sbb
add
or
push
loopne
dec
popa
push
push
pop
add
add
inc
or
add
pop
nop
ficomp
in
mov
call
mov
inc
adc
mov
out
jbe
push
sbb
add
add
mov
adc
nop
fnstenv
pop
into
mov
mov
or
test
cmp
gs
push
push
xchg
pop
adc
add
je
mov
add
mov
lds
pusha
push
push
mov
mov
add
inc
sbb
mov
inc
sbb
add
push
xchg
xor
xchg
imul
fld
js
mov
das
jmp
leave
xchg
sbb
gs
ret
out
cli
sbb
mov
mov
or
dec
mov
mov
mov
cli
jmp
pop
(bad)
arpl
push
icebp
mov
ror
ret
test
ss
pop
ss
ds
ins
pop
outs
add
xor
add
outs
or
ja
add
mov
or
div
mov
frstor
and
jno
dec
leave
xor
fnstenv
cmp
add
lds
fdivrp
jle
ss
sbb
ss
pop
inc
ins
mov
inc
cmc
xchg
sbb
mov
repnz
adc
in
mov
fst
fs
arpl
fnstenv
and
add
mov
call
gs
data16
ss
fnstenv
pop
add
rcr
and
je
push
icebp
sub
sbb
xor
fnstenv
sub
lds
leave
xor
fnstenv
cmp
lds
fimul
sbb
xchg
add
int3
mov
call
shl
popa
mov
fidiv
push
mov
mov
xchg
add
(bad)
adc
sbb
sbb
sbb
sbb
add
inc
sbb
cmc
jp
ss
nop
into
sub
nop
icebp
xchg
out
add
(bad)
jne
sbb
cli
push
jno
dec
add
mov
cli
push
dec
(bad)
jp
ss
mov
add
jmp
div
ins
nop
stos
je
lea
leave
push
call
call
add
xor
pop
frstor
sub
mov
adc
xor
out
ja
sub
out
pop
pop
sbb
sbb
loop
pushf
(bad)
mov
out
ret
ins
int3
ret
dec
mov
push
push
cmps
les
jne
std
idiv
mov
xor
nop
icebp
mov
data16
outs
add
add
push
pop
add
jne
ficom
(bad)
adc
jno
sub
out
inc
out
sbb
jne
pop
add
jne
fisub
(bad)
out
stc
call
adc
jno
sub
out
sbb
xor
jmp
mov
inc
lock
icebp
xor
pop
imul
dec
pusha
push
mov
nop
into
xor
nop
icebp
mov
ins
sbb
xor
push
leave
jo
out
or
add
xor
repnz
jo
out
sbb
leave
jo
out
stc
call
nop
lock
jne
fiadd
imul
xor
repnz
add
sbb
leave
fisub
in
ficom
jne
icebp
inc
clc
(bad)
push
lods
and
jae
cmp
add
inc
sbb
pusha
cld
sbb
push
clc
nop
hlt
sub
nop
arpl
call
rol
cli
jmp
mov
mov
cmp
adc
pmullw
jne
icebp
call
add
ret
ins
es
inc
in
mov
icebp
jne
mov
mov
idiv
inc
jmp
mov
inc
and
ret
leave
inc
cld
xchg
jae
mov
mov
call
cmp
sbb
cmp
and
jmp
fisttp
mov
ret
mov
imul
cld
mov
pop
outs
ss
jne
lea
ins
mov
out
mov
out
jge
pop
ss
sbb
mov
xchg
jae
mov
mov
call
cmp
sbb
cmp
inc
or
pushf
aaa
add
cs
shr
nop
into
sub
xchg
arpl
xchg
sbb
add
jge
dec
in
mov
pop
fisttp
xor
ret
test
add
test
ss
push
xor
inc
push
mov
dec
gs
push
xchg
imul
pop
retf
pop
and
(bad)
sub
mov
out
es
movd
sbb
dec
bound
addr16
out
fadd
cli
push
idiv
pop
xor
mov
inc
mov
lea
jo
fisub
mov
mov
push
cld
xchg
jae
(bad)
sbb
ins
int3
ret
dec
mov
push
mov
inc
in
ins
in
mov
cld
cmc
jbe
add
shr
icebp
jmp
add
mov
dec
bound
addr16
out
fadd
cli
push
idiv
pop
xor
mov
inc
mov
lea
jo
fisub
cli
add
xchg
jae
(bad)
sbb
retf
sbb
pop
pop
inc
inc
push
nop
rcl
popa
mov
mov
stc
loope
dec
sbb
add
nop
shr
xchg
jae
(bad)
xor
mov
mov
ins
xor
pop
fst
and
jns
xchg
jae
mov
aaa
(bad)
mov
rol
leave
fisub
in
push
push
dec
mov
cmp
loope
ret
dec
rol
jo
jno
test
in
jbe
leave
cli
mov
pop
adc
lds
dec
fisub
out
push
mov
push
dec
ficomp
(bad)
out
xchg
cmp
push
add
inc
loope
ret
ins
int3
ret
dec
mov
mov
mov
clc
xor
mov
out
or
add
ss
inc
ss
or
outs
add
retf
jae
sbb
add
mov
imul
cld
gs
push
xchg
inc
or
push
into
add
nop
icebp
xchg
sbb
mov
dec
mov
mov
leave
jae
xchg
cs
push
adc
ret
leave
xor
icebp
retf
jbe
sbb
pop
inc
cmc
push
mov
mov
sbb
pusha
push
mov
sub
jl
out
inc
push
add
mov
add
icebp
xchg
outs
add
div
sbb
cmp
cmps
push
add
add
add
jne
aas
lds
pusha
ins
fsubr
je
push
pop
add
call
nop
cmc
xor
adc
or
div
nop
mov
jmp
mov
leave
adc
nop
cmc
test
imul
test
stos
lds
ins
xor
pop
fisttp
mov
pop
std
mov
pusha
in
add
leave
cli
pop
sub
pop
pop
inc
inc
push
nop
sar
call
dec
pusha
push
mov
nop
out
sub
nop
cmc
test
out
add
and
sbb
cmp
adc
ss
jl
je
mov
aaa
fisttp
stos
je
add
movs
pushf
stos
je
push
xchg
push
cli
push
adc
add
jecxz
mov
jmp
leave
mov
cwde
lds
sbb
ins
jmp
ss
(bad)
out
cli
jne
fidiv
add
test
and
enter
outs
(bad)
jmp
mov
or
leave
cli
add
inc
or
sbb
in
bound
ss
mov
mov
inc
or
push
cli
push
add
dec
icebp
add
mov
add
xchg
or
call
les
cli
call
ss
nop
out
xor
nop
cmc
cli
add
xchg
jae
cmp
rol
add
sbb
movs
sbb
add
fsubr
out
mov
cwde
fst
xor
outs
add
and
sbb
pusha
add
add
fsub
enter
push
ret
xor
mov
inc
icebp
xchg
test
pop
mov
data16
mov
adc
ss
or
or
push
cmp
sbb
sbb
or
ins
push
ins
pushf
stos
je
push
xchg
jae
push
xchg
push
cli
adc
ss
cld
nop
out
repnz
mov
jmp
leave
mov
call
test
leave
sti
dec
cdq
mov
ss
mov
leave
xchg
xchg
sbb
add
jmp
dec
add
adc
pop
ss
call
mov
jo
je
mov
cdq
inc
ss
inc
sbb
jno
mov
data16
out
or
fsubr
aad
test
leave
sti
call
cmovo
push
mov
jmp
leave
xchg
sbb
pop
shl
push
mov
mov
sbb
push
mov
nop
into
add
nop
icebp
xor
nop
lds
sbb
repnz
jae
mov
mov
xor
add
ss
ins
and
inc
in
add
mov
out
ror
bound
xchg
or
mov
inc
sbb
cmp
xor
inc
adc
ins
nop
stos
je
call
call
mov
lock
icebp
stos
bnd
aas
lds
pusha
cld
sbb
inc
hlt
nop
icebp
xchg
ss
mov
xchg
ins
les
out
dec
nop
into
xor
nop
icebp
xchg
ss
repnz
(bad)
and
jno
and
jo
repnz
inc
adc
add
push
js
call
and
ss
mov
cmp
or
call
add
cli
jne
pop
xor
shr
add
add
jae
mov
pop
add
push
pop
add
inc
jno
stos
inc
sbb
sbb
mov
pop
pop
push
pop
add
add
mov
xchg
out
test
ss
nop
hlt
outs
add
jo
out
icebp
call
mov
shl
pop
fimul
push
mov
pop
push
out
icebp
call
out
icebp
call
inc
push
mov
mov
ficomp
jo
ss
push
dec
(bad)
icebp
pop
inc
das
test
add
add
fcom
leave
sti
call
pop
or
pop
ss
arpl
add
(bad)
out
add
enter
jnp
jmp
outs
or
push
mov
or
ss
idiv
mov
cli
mov
mov
pop
pop
ss
je
ss
pop
imul
mov
mov
dec
fmulp
sti
out
xchg
adc
je
add
test
stc
inc
add
jecxz
mov
jmp
leave
mov
xchg
mov
jmp
leave
push
mov
dec
mov
mov
aas
lds
mov
cmp
ss
(bad)
out
ins
mov
je
mov
mov
out
cmp
sbb
add
rcl
scas
or
ss
pop
addr16
jmp
leave
push
mov
dec
mov
mov
aas
lds
pushf
inc
or
mov
ss
mov
leave
sti
push
sar
jmp
mov
or
into
cli
(bad)
out
fnsave
sar
(bad)
out
push
mov
ss
js
add
jmp
leave
push
mov
dec
mov
mov
aas
lds
pushf
adc
mov
sbb
xor
movs
retf
cli
(bad)
out
or
aaa
ins
xchg
je
lea
in
mov
fnstsw
mov
jg
mov
xor
cmp
jmp
cli
add
cmp
xsaveopt
inc
push
xchg
mov
jmp
leave
push
push
icebp
ret
ja
sbb
sub
xor
pop
ss
(bad)
out
mov
idiv
mov
cli
mov
mov
jo
je
add
mov
add
outs
add
test
push
mov
ss
ss
leave
cli
sbb
cmp
out
add
push
xchg
mov
jmp
leave
push
call
call
add
ret
leave
sti
call
ss
fcom
(bad)
inc
sbb
mov
ss
out
in
leave
cli
sbb
cmp
out
add
push
xchg
mov
jmp
leave
push
call
call
add
ret
leave
sti
call
ss
fsubr
je
push
icebp
call
and
cli
add
inc
and
pop
loope
pop
mov
dec
fimul
les
ss
fidiv
add
sbb
outs
add
test
ss
push
leave
cli
sbb
cmp
out
add
push
xchg
mov
jmp
leave
push
call
call
add
ret
leave
sti
call
ss
sbb
outs
add
test
ss
and
leave
cli
sbb
cmp
out
add
lods
out
cli
add
ss
repnz
ss
push
test
ret
call
add
ret
leave
sti
call
ss
mov
dec
xchg
out
icebp
jmp
mov
or
leave
cli
add
inc
inc
push
pop
loope
pop
mov
dec
fidivr
les
ss
jae
ins
fwait
jmp
add
(bad)
out
in
sahf
in
leave
cli
sbb
cmp
out
add
lods
out
cli
add
ss
add
aad
test
cmc
xchg
sbb
popf
les
jno
mov
sbb
data16
out
xchg
adc
ss
jae
ins
jo
je
push
icebp
jle
jmp
mov
or
leave
cli
add
inc
xrstors
add
aad
ss
(bad)
out
jo
fbstp
jno
pop
ss
(bad)
out
in
aaa
jecxz
cli
pop
repnz
ret
add
sbb
cmps
push
repnz
add
sbb
cmp
enter
pop
add
sbb
(bad)
mov
aaa
fisttp
out
cli
push
xchg
mov
jmp
leave
push
mov
leave
push
pop
nop
jae
or
cmp
lea
mov
dec
mov
mov
mov
and
ss
iret
sbb
loop
(bad)
out
mov
xor
mov
call
and
mov
xor
shl
pushf
mov
(bad)
data16
adc
fidiv
add
sbb
mov
dec
mov
cli
push
xchg
mov
jmp
leave
push
mov
leave
push
sbb
out
xor
nop
cmc
mov
dec
pop
mov
test
mov
add
inc
in
lds
pushf
jae
add
mov
cli
push
xchg
mov
jmp
leave
push
mov
leave
xchg
rcr
ss
fsubr
aad
test
cmc
xchg
or
xchg
mov
jmp
leave
push
mov
mov
out
cmp
rcl
int
sbb
test
mov
add
adc
dec
sbb
enter
push
cli
push
and
add
nop
cmc
xchg
or
cwde
frstor
or
mov
dec
mov
cli
push
xchg
push
cli
push
cmp
test
jae
add
and
xchg
sbb
mov
out
cli
push
xchg
mov
jmp
leave
push
call
call
(bad)
out
in
bndldx
add
outs
sbb
mov
xor
mov
out
jmp
test
leave
sti
dec
pusha
repnz
mov
dec
(bad)
outs
sbb
xchg
or
mov
xchg
jmp
leave
pop
add
leave
mov
xchg
mov
jmp
leave
push
lea
jmp
add
ss
nop
out
cli
xor
mov
mov
lds
(bad)
out
mov
out
sub
sbb
mov
call
add
xchg
sbb
(bad)
lea
ins
test
je
mov
mov
out
cmp
sbb
add
rcl
xor
sbb
test
or
add
jmp
leave
push
mov
mov
out
imul
sbb
xchg
sbb
fld
sbb
outs
add
mov
mov
xor
mov
sbb
mov
jg
cmp
cli
add
mov
cli
mov
or
cmp
leave
xchg
or
add
mov
leave
sti
call
pop
add
mul
out
push
mov
leave
push
je
jae
mov
pop
fisttp
sbb
and
add
(bad)
out
mov
dec
pop
popf
repz
mov
dec
mov
add
inc
in
out
xchg
ss
push
sbb
add
(bad)
out
or
mov
jmp
leave
push
push
leave
mov
out
cli
mov
mov
out
and
fcomp
out
mov
call
add
arpl
out
or
call
setge
add
imul
xor
leave
in
std
jmp
cli
sbb
mov
pop
mov
cli
mov
aaa
fisttp
out
cli
add
mov
add
ss
leave
sti
call
ss
fcom
sub
in
sti
dec
pop
repnz
mov
dec
fidiv
les
enter
leave
inc
and
cmp
enter
push
cli
std
out
sub
cli
push
xchg
mov
jmp
leave
mov
in
das
jne
add
fdiv
out
mov
jae
mov
dec
pop
pop
repnz
mov
dec
ficom
sbb
xchg
or
mov
ss
xchg
mov
jmp
leave
push
mov
leave
push
or
mov
jmp
leave
mov
and
or
xchg
mov
jmp
leave
push
mov
leave
push
or
mov
jmp
leave
mov
xchg
mov
jmp
leave
push
mov
leave
push
or
mov
jmp
leave
mov
and
or
call
jne
lock
enter
cmc
cmp
mov
dec
mov
xchg
sbb
mov
mov
out
or
add
mov
aam
enter
cmp
dec
xor
test
leave
sti
dec
xor
test
leave
sti
dec
xor
fdiv
out
mov
xchg
mov
jmp
leave
push
mov
leave
push
or
mov
jmp
imul
cld
pop
cli
push
jno
adc
add
ss
add
ss
push
dec
mov
loope
jae
sbb
sub
mov
icebp
inc
cld
sbb
add
mov
aaa
sti
mov
pop
sbb
add
add
sar
call
jne
fisttp
ror
std
(bad)
(bad)
pop
retf
out
out
xor
sbb
add
mov
inc
lds
js
nop
into
repnz
jae
mov
jge
fstp
push
sbb
ret
leave
cli
jmp
imul
jge
add
leave
(bad)
add
cmp
sub
mov
jno
rol
add
and
jae
in
jecxz
ss
pop
jg
add
mov
imul
cmc
adc
xchg
imul
nop
(bad)
repnz
jae
mov
leave
add
je
mov
mov
add
jbe
add
jae
mov
pop
lds
mov
xchg
or
enter
rcr
jmp
add
ss
lahf
inc
add
mov
xchg
inc
test
sbb
lods
inc
sbb
lds
xchg
movs
pop
add
or
add
or
out
adc
stos
inc
sbb
jne
ss
inc
sbb
lds
fnstcw
loopne
jbe
inc
jmp
ja
jmp
cdq
cmp
neg
push
or
out
xor
pop
ss
adc
jmp
add
repnz
add
mov
shl
pop
fimul
sbb
add
mov
add
add
xor
pop
ss
or
xor
fist
sbb
mov
idiv
mov
test
or
cmps
adc
leave
cli
(bad)
out
xor
je
pop
(bad)
xor
loopne
sbb
test
sbb
leave
repz
adc
xor
(bad)
add
ss
cmps
inc
add
scas
pop
ss
add
(bad)
(bad)
out
repz
sbb
xor
(bad)
add
ss
imul
scas
pop
ss
sbb
test
sbb
add
mov
cli
(bad)
out
xor
je
pop
(bad)
xor
add
ss
mov
pop
int
fdiv
add
add
jmp
out
jge
pop
ss
add
cwde
fistp
or
pop
fisttp
add
movs
in
mov
add
inc
sbb
repnz
jae
mov
mov
sbb
rol
lods
pop
ss
sbb
add
mov
add
add
aaa
add
mov
ss
inc
sbb
add
mov
add
add
xor
pop
xchg
sbb
cmps
add
ss
loop
add
scas
pop
ss
jmp
sub
in
in
ss
inc
sbb
mov
sbb
mov
nop
mov
xchg
push
mov
or
sbb
lds
std
or
cli
and
mov
test
sbb
jns
and
add
(bad)
cmp
test
pop
fnstsw
call
rol
xor
sbb
cmp
sub
xor
enter
rcr
inc
jmp
pop
(bad)
aaa
add
add
shl
pop
jmp
pop
ss
pop
cmp
mov
jo
add
mov
les
scas
xor
pop
ss
sbb
add
mov
inc
mov
sbb
test
fnstenv
add
add
test
jbe
push
out
or
jmp
push
add
mov
add
inc
push
mov
sbb
or
cmp
sbb
and
inc
mov
repnz
inc
push
sbb
inc
sbb
dec
cdq
dec
test
cdq
inc
add
ss
jae
mov
mov
cmps
in
ja
imul
loope
pop
ss
push
mov
test
call
xor
mov
or
jbe
add
cs
pop
mov
add
adc
out
or
mov
cmp
mov
shl
pop
(bad)
mov
call
jmp
mov
or
xchg
xor
test
je
call
movs
inc
sbb
cmp
adc
in
cli
add
nop
(bad)
sub
mov
pop
lds
xor
inc
ins
int3
ret
dec
popa
mov
mov
pop
std
mov
leave
add
je
push
icebp
mul
mov
inc
add
leave
popa
sbb
cmps
pop
test
pop
std
mov
pop
sub
pop
ss
call
mov
pop
inc
retf
push
call
mov
pop
dec
retf
push
call
mov
mov
ret
cld
inc
add
test
cmps
pop
test
cmc
push
mov
mov
je
pusha
push
mov
nop
out
sub
nop
cmc
cli
add
jno
iret
inc
sbb
adc
add
add
ss
rol
add
add
ret
jbe
add
mov
clc
sbb
mov
dec
rol
pusha
rcr
mov
aaa
sbb
repnz
jae
mov
mov
aam
icebp
inc
fcomp
ss
add
shl
pop
mov
fld
sbb
add
inc
sbb
jge
pop
ss
xor
add
mov
icebp
and
add
add
xchg
ss
sub
mov
xchg
dec
mov
add
mov
pop
add
inc
std
data16
adc
mov
shl
pop
cmps
mov
xchg
jae
push
jae
mov
outs
add
outs
add
xor
jne
fcompp
arpl
mov
data16
jne
mov
add
sti
push
add
les
outs
add
inc
movs
push
pop
add
jmp
mov
rcr
mov
leave
jo
icebp
add
sbb
add
je
lea
jmp
inc
std
data16
adc
xchg
jae
jmp
mov
inc
mov
inc
push
nop
rol
cld
adc
jae
mov
inc
stc
shl
jae
mov
inc
adc
jnp
mov
gs
ss
nop
arpl
mov
add
outs
add
in
push
out
std
push
mov
cli
jmp
adc
xchg
jae
jmp
mov
sub
ss
inc
fcom
arpl
push
or
mov
out
jge
pop
ss
jne
pop
cli
dec
stos
inc
sbb
add
mov
mov
or
pusha
push
mov
pop
adc
je
xor
cmp
add
ss
push
add
or
add
ss
push
add
or
add
ss
push
add
or
add
ss
push
add
or
add
or
jae
lea
add
and
inc
call
cmp
add
push
leave
inc
sbb
mov
daa
cmpxchg8b
pushf
mov
dec
adc
and
or
nop
int3
xchg
sbb
mov
(bad)
vmptrld
mov
or
ins
pop
mov
call
cmp
ins
push
outs
rcl
add
dec
ficomp
mov
leave
outs
ror
cli
inc
add
in
lahf
inc
ss
enter
adc
xchg
sbb
into
xchg
sbb
jae
lea
add
loope
in
add
arpl
mov
ss
and
add
not
and
add
call
fbstp
jmp
leave
cli
add
cdq
or
add
bound
sbb
mov
add
jbe
clc
call
jne
mov
or
ins
and
mov
adc
test
adc
nop
out
push
inc
or
out
add
test
sbb
test
xor
gs
into
dec
and
std
xor
test
xor
push
nop
into
xchg
sbb
inc
mov
mov
add
add
and
add
cmp
ins
sbb
adc
xchg
sbb
mov
add
jae
mov
inc
sbb
add
call
adc
aaa
add
sbb
mov
jle
cmp
aaa
jo
nop
into
xchg
sbb
cmp
cdq
or
add
clc
call
cmp
inc
or
ins
xor
call
ss
pop
sbb
mov
mov
inc
or
add
call
xor
std
out
pop
pop
inc
inc
push
nop
rol
push
out
jge
pop
mov
fstp
xor
fld
and
test
icebp
xor
test
icebp
xor
inc
mov
call
fild
jmp
call
inc
sbb
mov
or
out
xchg
or
and
mov
in
pop
out
leave
cli
pop
out
jge
pop
or
sbb
add
add
ss
call
fcomp
jae
mov
leave
inc
cld
mov
cmovo
imul
daa
xchg
xor
mov
aaa
mov
nop
jae
mov
aaa
fild
leave
mov
aad
pop
ret
pop
aaa
mov
mov
movs
inc
sbb
xchg
out
test
jecxz
fild
leave
mov
add
jae
(bad)
sbb
sub
dec
into
mov
out
jge
pop
ss
out
std
lea
add
leave
mov
add
jae
(bad)
push
fisttp
sbb
imul
sar
cli
xor
push
inc
sbb
jno
out
xchg
adc
cmc
push
mov
mov
sbb
in
cmovb
add
loope
leave
cli
(bad)
pushf
aad
jmp
ss
sti
inc
ss
sub
test
jmp
xor
leave
cli
add
add
out
jo
push
add
and
ss
add
cli
add
or
out
cmp
sbb
jmp
cmp
call
leave
outs
retf
or
dec
fsubrp
pop
sbb
mov
nop
xor
imul
outs
retf
or
dec
mul
add
leave
cli
xor
data16
inc
sbb
sub
xchg
mov
xor
and
(bad)
out
or
out
lds
cdq
or
loop
je
add
mov
jmp
leave
ret
test
fsqrt
call
cmp
(bad)
fcom
pop
and
add
add
cmp
(bad)
fcom
pop
mov
mov
out
jge
pop
test
sbb
adc
nop
mov
(bad)
leave
cli
add
xchg
mov
mov
fcomp
adc
cli
and
sbb
cli
xor
frstor
sbb
add
pop
sbb
mov
call
mov
into
jmp
es
out
out
jae
xchg
mov
fsubp
leave
push
call
out
jge
pop
xchg
sbb
mov
sbb
ins
jmp
ss
jmp
leave
mov
(bad)
leave
cli
call
call
shr
movs
cdq
call
cwde
add
cli
jmp
pop
cli
mov
imul
add
aam
add
xor
mov
add
cmp
adc
call
xor
jmp
xor
mov
sbb
adc
add
cli
jmp
mov
add
ss
add
inc
mov
ins
retf
jecxz
cli
pop
cwde
mov
out
out
add
test
leave
cli
add
jo
setg
jmp
leave
add
je
jmp
jns
sbb
in
inc
sbb
add
out
out
(bad)
adc
nop
mov
xchg
sbb
cli
sar
mov
fcomp
pop
sar
push
dec
in
or
nop
mov
cli
mov
out
nop
out
(bad)
jmp
sbb
add
mov
add
mov
out
out
test
sbb
add
add
cdq
mov
(bad)
leave
add
int
ss
jmp
ss
jmp
mov
cmp
sbb
mov
call
cwde
(bad)
leave
cli
mov
nop
cwde
(bad)
leave
cli
sbb
push
add
leave
mov
xchg
mov
push
add
leave
mov
xchg
mov
(bad)
leave
mov
jae
mov
dec
leave
mov
(bad)
leave
cli
call
xchg
mov
(bad)
leave
cmp
movs
jmp
mov
nop
mov
(bad)
leave
add
vpsubd
cdq
mov
(bad)
leave
add
add
push
outs
add
leave
(bad)
jmp
cli
(bad)
fcomp
or
cmp
lods
(bad)
leave
cli
jmp
leave
add
je
imul
(bad)
mov
(bad)
leave
cli
sub
or
push
adc
sti
xor
adc
push
movs
inc
sbb
cli
push
dec
fiadd
test
test
jns
add
add
mov
add
mov
push
add
ins
cmp
test
sub
xor
leave
cli
mov
ss
out
inc
add
leave
cli
(bad)
pushf
xchg
(bad)
out
xchg
sbb
mov
(bad)
leave
cli
mov
jle
cmp
inc
sub
add
mov
test
sbb
mov
mov
add
push
add
xor
test
sbb
dec
repnz
cli
add
push
adc
sti
xor
mov
xchg
(bad)
out
and
add
lock
add
aaa
add
call
loope
out
out
adc
icebp
out
out
add
xor
(bad)
pop
xchg
es
cmp
in
xor
mov
xchg
(bad)
out
out
xchg
mov
movs
ret
leave
cli
(bad)
push
test
aaa
add
sub
ss
cmp
xor
jo
cdq
or
add
ss
cmp
xor
add
int
scas
mov
fsubp
leave
or
xchg
test
aaa
jno
push
add
out
(bad)
out
cli
mov
jmp
cld
jmp
mov
or
mov
(bad)
leave
add
hlt
test
add
leave
(bad)
fadd
lock
loope
xor
adc
(bad)
leave
cli
mov
fsqrt
call
leave
add
shl
xor
pop
ss
cs
cli
sbb
mov
(bad)
out
lds
cdq
or
loop
je
add
mov
sti
out
pop
pop
inc
inc
push
nop
rol
push
xchg
imul
jmp
add
lock
sti
sbb
jge
pop
ss
repz
hlt
add
nop
arpl
lea
xor
mov
lds
xor
mov
lds
ret
mov
mov
ins
cmp
pop
int
xor
inc
jecxz
out
push
xchg
xor
aas
inc
or
jo
cdq
jae
add
cmp
inc
jecxz
test
daa
ja
cwde
jae
nop
cmp
add
jmp
xchg
xor
aas
inc
or
or
cwde
pop
stc
add
int
imul
cmp
fs
or
sbb
add
add
jae
add
pop
(bad)
mov
mov
aaa
mov
call
or
mov
inc
xor
mov
aaa
repz
sbb
jo
call
add
jae
add
pop
(bad)
mov
mov
aaa
and
sbb
add
add
inc
loop
test
sub
sbb
mov
and
add
neg
cmp
sti
sbb
mov
stc
push
cmp
(bad)
pop
into
add
imul
cmp
aam
pop
mov
sti
sbb
jo
fs
add
mov
leave
mov
gs
inc
les
xor
add
sti
sbb
mov
loop
pop
pop
shl
push
mov
addr16
push
dec
popa
mov
(bad)
stc
imul
mov
mov
add
call
nop
mov
stc
nop
icebp
out
push
cdq
or
pop
ins
xor
inc
cs
add
call
dec
call
add
aad
inc
loope
(bad)
pop
inc
ins
int3
ret
dec
mov
add
add
pusha
push
mov
nop
into
repnz
mov
(bad)
leave
mov
cwde
shl
mov
pusha
cli
jne
mov
cli
push
icebp
pop
pop
add
mov
cli
push
icebp
and
adc
icebp
xor
nop
into
sub
nop
icebp
pop
pop
shl
push
mov
popa
mov
xor
pop
add
or
in
mov
ss
mov
mov
adc
pusha
push
mov
nop
into
sub
nop
icebp
outs
add
add
push
pop
push
push
out
or
add
inc
adc
pop
mov
add
add
pop
(bad)
pop
add
add
mov
add
inc
in
mov
lds
dec
pop
inc
call
nop
jae
mov
aaa
std
mov
pop
add
je
mov
cmc
jmp
mov
cmc
jmp
jmp
call
dec
fdivp
push
sbb
mov
fisttp
loope
loop
pop
fimul
fisub
in
gs
push
cmps
and
pop
ds
add
outs
add
outs
add
add
or
mov
add
mov
std
mov
mov
jmp
shl
outs
add
outs
add
lea
ss
inc
pop
add
mov
mov
call
cmp
sbb
mov
pop
add
push
out
or
sti
push
add
pop
add
push
pop
sbb
call
dec
ficomp
sbb
test
imul
add
imul
cld
addr16
push
dec
mov
clc
sub
mov
mov
shl
pop
into
mov
jae
ins
sbb
add
push
pop
add
jne
fcompp
push
sbb
mov
call
jmp
pop
pop
push
pop
add
add
mov
ret
mov
jo
out
or
or
sbb
fisttp
add
mov
pop
lds
push
loopne
dec
pusha
push
mov
inc
in
arpl
outs
inc
add
inc
in
mov
sub
out
pop
push
add
sbb
inc
cmp
hlt
dec
leave
jo
jno
test
ss
cmp
je
call
call
imul
sbb
add
inc
sbb
push
push
sbb
xchg
adc
pop
adc
retf
sub
mov
pop
cli
jmp
mov
sbb
(bad)
sbb
dec
or
ins
sub
je
call
call
ret
dec
mov
push
push
xchg
imul
in
arpl
mov
in
inc
clc
nop
jae
push
icebp
fist
sbb
push
and
push
push
icebp
jecxz
add
mov
or
bnd
mov
cld
test
jno
test
ss
pop
inc
ins
int3
ret
dec
mov
push
push
dec
lea
in
push
mov
idiv
mov
arpl
pop
aam
add
push
in
add
dec
test
sbb
mul
sbb
test
aaa
jo
jg
inc
loop
mov
cmp
push
pop
test
dec
cmp
call
add
mov
push
sbb
and
sbb
mov
mov
leave
add
or
add
ss
(bad)
imul
imul
icebp
call
jge
xor
add
pop
in
add
shl
pop
out
mov
cdq
pop
sti
add
std
mov
idiv
mov
mov
cmp
xsave
shl
push
mov
aam
scas
(bad)
inc
in
jnp
mov
sbb
dec
loop
xlat
mov
aaa
inc
in
jae
xsaveopt
mov
mov
xor
push
adc
pop
sar
idiv
mov
mov
cmp
or
adc
std
mov
mov
sub
mov
inc
push
xchg
nop
mov
inc
add
ss
mov
mov
xchg
je
cmps
xchg
nop
mov
or
inc
mov
xchg
nop
mov
xchg
nop
mov
nop
mov
xchg
nop
mov
nop
mov
inc
add
ss
mov
mov
xchg
je
cmps
xchg
nop
mov
or
sbb
xchg
nop
mov
fst
cmc
cmps
xchg
nop
mov
nop
mov
add
out
gs
mov
add
nop
mov
cmp
cmps
sub
daa
jbe
nop
xchg
cs
nop
mov
xchg
nop
xchg
or
cmps
xor
mov
add
mov
xchg
nop
mov
xchg
nop
call
enter
nop
js
xchg
nop
mov
clc
call
es
add
inc
add
mov
test
lds
add
ins
ficom
nop
mov
inc
add
cmps
xchg
pop
mov
std
add
cmps
xchg
nop
mov
xchg
mov
cmps
xchg
nop
mov
les
retf
cmps
xchg
nop
mov
nop
mov
xchg
nop
mov
repnz
mov
xchg
nop
mov
nop
mov
mov
pop
xor
add
cmps
xchg
nop
mov
not
sbb
inc
add
cmps
xchg
je
cmps
xchg
nop
mov
xchg
mov
cmps
xchg
nop
mov
les
retf
cmps
xchg
nop
mov
nop
mov
xchg
nop
mov
repnz
mov
xchg
nop
mov
nop
mov
dec
ins
mov
xor
add
cmps
xchg
nop
mov
not
mov
in
cmp
retf
cli
ret
fisub
in
ficom
push
dec
popa
mov
push
mov
lea
sub
mov
sbb
mov
sub
mov
xor
mov
jg
inc
hlt
sbb
in
in
ss
add
mov
push
call
inc
mov
test
ss
fbstp
add
sbb
aaa
dec
ss
jmp
add
add
adc
iret
sub
add
mov
mov
cld
mov
mov
or
jo
and
jg
daa
mov
aaa
cmc
inc
push
adc
sar
or
sbb
add
or
mov
or
xchg
es
inc
inc
add
nop
sbb
add
call
push
add
mov
push
lea
mov
enter
fidiv
sbb
mov
xor
mov
jae
mov
data16
aaa
cmc
push
icebp
imul
mov
and
out
repnz
jae
mov
mov
push
jg
inc
hlt
push
add
fwait
cmp
jmp
imul
cld
mov
sub
pusha
push
mov
cwde
fcomp
or
ss
dec
dec
ss
ror
div
aaa
iret
shl
(bad)
stc
push
pop
iret
mov
outs
mov
xchg
arpl
mov
pop
cmc
mov
mov
enter
add
shl
pop
add
mov
ret
lea
jmp
jnp
leave
cli
sbb
mov
adc
or
cmp
rol
mov
ss
call
nop
dec
in
push
push
cmp
rol
jmp
ss
sbb
int
pop
ss
call
jae
outs
add
sti
inc
add
jae
push
icebp
mov
rcr
cli
enter
inc
cld
repnz
nop
out
push
inc
in
adc
aam
add
cld
sbb
ss
add
and
jb
xchg
(bad)
pop
mov
fst
mov
xor
in
pop
ss
nop
mov
lock
xor
sbb
enter
inc
clc
imul
inc
push
ss
aas
push
ss
mov
mov
vpmaxud
mov
enter
jmp
sbb
add
add
jns
add
leave
mov
push
adc
xlat
nop
or
int
outs
inc
jno
enter
fld
sbb
enter
in
mov
fnstsw
movs
int3
aam
add
sbb
jae
mov
mov
mov
sub
xchg
xor
sbb
enter
inc
hlt
imul
fcom
je
mov
adc
mov
add
lock
ss
add
and
jb
mov
enter
mov
mul
out
or
mov
nop
cmp
sub
mov
enter
mov
mul
out
or
mov
nop
cmp
and
sbb
cmp
fcomp
xor
int
ss
call
call
push
pop
add
add
jbe
jne
fsubp
dec
sbb
mov
mov
scas
dec
ss
call
dec
leave
jo
icebp
arpl
sbb
jo
icebp
(bad)
dec
add
gs
lahf
push
ss
mov
(bad)
sub
inc
pop
inc
ins
int3
ret
dec
mov
pop
add
gs
push
cmps
cdq
dec
arpl
mov
out
mov
std
out
mov
cwde
xor
pop
ss
add
mov
cwde
fadd
fwait
push
ss
adc
(bad)
div
idiv
pop
fmul
sbb
sar
xchg
pop
mov
sti
jmp
mov
ret
(bad)
pop
leave
add
aaa
fisubr
sbb
or
push
push
adc
jmp
sub
nop
out
mov
mov
popa
xchg
mov
cli
sbb
pop
leave
cmp
outs
std
ret
test
leave
cli
call
fisubr
dec
sbb
mov
out
hlt
add
pop
lock
mov
jmp
leave
aaa
mov
pop
cmc
mov
mov
cli
push
jno
mov
sbb
icebp
pop
mov
dec
fimul
dec
sbb
outs
add
outs
add
outs
add
add
sti
in
cli
push
icebp
lahf
dec
add
mov
cli
jmp
mov
je
push
icebp
jmp
add
mov
dec
xor
add
lock
cli
push
jno
pop
add
pop
stc
int
ss
mov
retf
cli
push
aaa
dec
add
leave
mov
in
cli
call
out
jge
pop
ss
push
xchg
mov
(bad)
out
push
call
cwde
lock
mov
dec
pop
fyl2x
pop
mov
dec
pop
add
dec
sbb
add
inc
sbb
icebp
pop
ss
int
je
lea
ins
add
ss
xor
lds
sbb
jecxz
pushf
fdivrp
jmp
mov
hlt
inc
sbb
icebp
pop
ss
add
ss
adc
add
pop
inc
ins
int3
ret
dec
mov
push
push
dec
mov
xlat
cmp
add
inc
sbb
inc
hlt
nop
icebp
xchg
mov
data16
outs
add
add
push
pop
add
jne
fdivrp
dec
sbb
mov
idiv
mov
mov
call
add
inc
loope
jo
dec
pop
add
sbb
jo
out
stc
call
out
stc
call
cwde
rcl
sbb
pop
pop
inc
inc
push
nop
rcl
imul
dec
sbb
cli
jne
(bad)
dec
sbb
outs
add
jo
out
adc
jne
fidivr
sbb
xchg
add
ret
dec
mov
jbe
sbb
add
lea
jmp
jne
leave
jo
icebp
cmp
sbb
xor
inc
imul
nop
rol
add
push
mov
out
ror
fisubr
add
mov
inc
cld
dec
pop
add
add
outs
add
cli
jne
leave
jo
icebp
and
sbb
lds
(bad)
leave
jo
out
adc
ins
sub
out
adc
daa
push
ss
jmp
not
add
jmp
jmp
ss
add
ror
fnstenv
leave
fisub
in
ficom
adc
jae
xchg
jae
mov
nop
into
add
nop
icebp
mov
idiv
mov
ret
push
sbb
sbb
sbb
outs
add
inc
or
ins
ds
mov
fld
xor
fnsave
lea
push
jae
outs
add
inc
adc
xchg
push
ss
jmp
outs
push
ss
mov
aaa
std
mov
leave
jo
icebp
imul
mov
add
leave
fisub
in
fimul
push
dec
mov
shl
sub
mov
call
je
fidivr
call
nop
jae
mov
out
ror
sbb
inc
add
jae
jne
pop
lds
or
jno
add
push
pop
add
add
aas
dec
add
xchg
add
stc
sbb
mov
adc
jo
sub
out
adc
into
sub
nop
icebp
cli
xor
icebp
mov
inc
push
loopne
mov
mov
inc
cld
nop
test
mov
test
outs
ins
add
mov
mov
adc
push
mov
pop
adc
sbb
cwde
jae
pop
pop
ss
and
std
sub
mov
sbb
push
jmp
call
add
clc
xor
mov
lock
sbb
add
rcr
test
sbb
inc
and
fidiv
cmp
sbb
mov
jle
cmp
cmp
sbb
ss
idiv
inc
loope
inc
cld
nop
out
inc
jmp
mov
in
aas
pop
ss
cld
nop
hlt
xor
nop
arpl
or
inc
sbb
out
adc
add
aaa
(bad)
mov
fcomp
into
out
push
sub
out
adc
into
mov
shl
jae
mov
pop
inc
inc
push
nop
rol
push
xchg
imul
aaa
pop
mov
mov
in
idiv
inc
std
mov
leave
inc
sbb
mov
mov
ret
pop
inc
call
nop
jae
xor
div
and
mov
add
lds
mov
sub
ss
and
jb
push
ret
ss
jge
cmp
mov
add
mov
mov
popa
dec
mov
add
les
out
repz
rol
fs
inc
mov
sbb
xchg
or
cmp
clc
imul
fcom
jmp
xchg
jae
pop
inc
ins
int3
ret
dec
mov
pop
add
rol
sbb
push
cmps
or
mov
shl
add
(bad)
out
xchg
sbb
ret
lea
cli
jne
fsubp
out
out
xchg
adc
add
(bad)
ja
sbb
xchg
sbb
push
icebp
cmp
sbb
(bad)
cmp
xor
nop
lock
jne
fisubr
test
leave
clc
jmp
shl
pushf
loop
std
out
mov
imul
xchg
int
clc
call
add
mov
ss
(bad)
out
repz
jge
add
add
ss
add
out
std
out
les
and
mov
nop
shl
retf
cli
add
fs
leave
ror
cli
sbb
test
test
add
hlt
inc
sbb
jo
icebp
fild
sbb
hlt
inc
sbb
mov
out
cli
call
call
add
scas
repnz
call
repz
ss
mov
leave
sti
push
add
mov
or
inc
inc
add
(bad)
ltr
ss
mul
mov
add
pop
ss
add
mov
jmp
leave
push
push
dec
ficomp
sbb
xchg
or
add
add
scas
repnz
call
repz
ss
mov
leave
sti
push
arpl
sbb
hlt
inc
sbb
mov
out
cli
call
call
add
scas
repnz
call
repz
ss
mov
leave
sti
push
sub
sbb
jmp
ss
add
xor
icebp
test
sbb
pushf
mul
mov
dec
pop
cmp
pop
ss
call
call
adc
je
mov
ins
and
je
push
icebp
xchg
inc
add
mov
adc
lock
ss
jnp
ss
add
xor
jno
test
mov
out
cli
call
call
add
cmp
out
in
xchg
sbb
in
inc
pop
ss
add
xor
jno
test
mov
out
cli
call
call
add
pop
push
icebp
pop
ss
mov
leave
sti
push
jg
add
mov
or
xor
sbb
pushf
mul
mov
add
pop
ss
add
mov
jmp
leave
push
push
dec
fdivp
inc
sbb
xchg
or
ret
call
mov
scas
repnz
dec
pop
clc
lock
mov
dec
fmulp
inc
sbb
mov
dec
leave
jo
xchg
mov
jmp
leave
push
push
dec
fisubr
les
fimul
or
ss
cli
sbb
es
mov
scas
repnz
dec
mov
cli
push
jno
hlt
inc
sbb
ja
ss
(bad)
mov
addr16
add
(bad)
ltr
ss
mul
mov
add
jmp
(bad)
out
jne
sbb
xchg
adc
sub
mov
cdq
out
iret
xchg
sbb
push
push
out
stc
jmp
leave
in
dec
pop
ss
pop
pop
ss
add
xor
jno
test
mov
out
cli
call
call
add
pop
xchg
lock
ss
jne
mov
cli
push
jno
cmc
inc
sbb
fistp
add
mov
adc
add
and
js
jno
cmc
inc
sbb
mov
out
cli
call
call
mov
ret
call
mov
scas
repnz
call
repz
ss
mov
leave
sti
push
fwait
inc
add
mov
or
pop
inc
add
(bad)
ltr
ss
mul
mov
add
pop
ss
add
mov
jmp
leave
push
push
dec
ficom
sbb
xchg
or
add
out
in
pop
sbb
add
jmp
ss
xor
mov
call
jmp
mov
cli
add
cmp
enter
mov
ss
mov
jmp
leave
mov
xchg
mov
jmp
leave
push
mov
push
cmp
nop
into
mov
cdq
out
iret
xchg
js
mov
mov
mov
fnstsw
loop
fadd
mov
rol
movs
ss
pop
call
ss
scas
pop
ss
test
leave
clc
call
leave
test
sbb
or
out
icebp
jmp
leave
cli
jne
mov
cli
push
xchg
mov
jmp
leave
push
push
dec
fidiv
sbb
xchg
add
repnz
mov
jmp
leave
mov
icebp
jae
add
(bad)
ltr
ss
mul
mov
add
jmp
retf
out
popa
inc
sbb
xchg
adc
and
or
ss
cli
sbb
push
push
out
stc
jmp
leave
in
aas
pop
ss
sti
pop
ss
add
xor
jno
test
mov
out
cli
call
call
std
out
add
hlt
out
cli
mov
or
retf
cli
setnp
sub
retf
cli
mov
aaa
cmc
mov
fild
inc
add
enter
aaa
add
add
leave
add
add
mov
int3
sub
add
add
ss
(bad)
out
xchg
ss
(bad)
out
sub
retf
cli
jmp
pop
jmp
ret
out
in
imul
sbb
mov
call
add
(bad)
jg
mov
mov
shl
pushf
repnz
std
out
add
retf
cli
mov
mov
cli
push
push
add
jmp
leave
push
call
xchg
mov
jmp
leave
push
call
call
std
out
mov
out
cli
jmp
mov
leave
clc
call
leave
push
push
dec
fsubrp
inc
sbb
xchg
add
ret
call
mov
scas
repnz
call
lock
ss
mov
leave
sti
push
rol
sbb
inc
add
(bad)
ltr
ss
mul
mov
add
jmp
retf
out
lds
ss
adc
jns
sbb
mov
cdq
out
iret
xchg
sbb
push
push
out
stc
jmp
leave
in
fwait
pop
ss
lock
mov
out
cmc
jmp
leave
in
add
add
(bad)
out
add
leave
cli
push
out
std
jmp
leave
push
call
call
(bad)
out
lds
pushf
mov
jmp
pop
aas
lock
ss
mov
leave
sti
push
jnp
add
mov
or
aas
inc
add
(bad)
ltr
ss
mul
mov
add
jmp
retf
out
sub
les
mov
ret
call
mov
scas
repnz
call
lock
ss
mov
leave
sti
push
retf
cmp
sbb
cmp
sbb
pushf
mul
mov
add
jmp
(bad)
out
fnstsw
sbb
xchg
adc
lock
ss
mov
leave
sti
push
repz
sbb
or
sbb
jecxz
pushf
(bad)
cli
std
out
ret
call
mov
scas
repnz
call
aas
sbb
mov
cdq
out
iret
push
mov
ins
ds
imul
sbb
cmp
sbb
pushf
mul
mov
add
jmp
retf
out
pop
aas
sbb
xchg
adc
sbb
or
ss
cli
sbb
push
push
out
stc
jmp
leave
in
aaa
es
lock
ror
nop
lock
out
ss
add
xor
jno
test
mov
out
cli
call
call
add
scas
repnz
call
sbb
mov
cdq
out
iret
push
mov
ins
ds
fwait
cmp
sbb
cmc
inc
sbb
mov
out
cli
call
call
mov
fidiv
sbb
mov
cdq
out
iret
xchg
sbb
push
push
out
stc
jmp
leave
in
xchg
daa
ss
sbb
je
jmp
test
sbb
xchg
adc
cmp
sbb
mov
cdq
out
iret
xchg
sbb
push
push
out
stc
jmp
leave
in
pop
daa
ss
sbb
je
jmp
dec
sbb
xchg
adc
repnz
mov
jmp
leave
mov
icebp
ret
cmp
sbb
pushf
mul
mov
add
jmp
(bad)
out
adc
sbb
xchg
adc
cli
push
xchg
mov
jmp
leave
push
push
dec
(bad)
cmp
or
mov
sbb
mov
cdq
out
iret
xchg
sbb
push
push
out
stc
jmp
leave
in
shl
add
lock
mov
jno
cmc
inc
sbb
mov
out
cli
call
call
add
scas
repnz
call
repz
ss
mov
leave
sti
push
mov
ror
cmp
sbb
pushf
mul
mov
and
sbb
mov
dec
pop
in
out
pop
ss
call
call
mov
fisub
or
ss
cli
sbb
push
push
out
stc
jmp
leave
in
aas
and
add
fdivp
je
jmp
sub
adc
in
cmp
ss
cdq
out
iret
xchg
sbb
push
push
out
stc
jmp
leave
in
pop
and
add
out
dec
and
cmp
sbb
pushf
mul
mov
add
and
ss
push
xchg
mov
jmp
leave
push
push
dec
fisubr
les
pop
aad
pop
ss
mov
leave
sti
push
(bad)
cmp
sbb
outs
add
outs
add
ins
add
ss
jmp
xor
ss
std
out
cmc
add
mov
cli
(bad)
out
mov
add
push
push
out
stc
jmp
leave
cli
mov
leave
clc
push
cmps
cmp
sbb
mov
out
cli
call
out
stc
jmp
leave
in
shl
ss
add
ror
nop
lock
call
xchg
mov
jmp
leave
out
or
(bad)
repnz
mov
jmp
leave
mov
inc
push
mov
cwde
fimul
mov
nop
into
repnz
mov
(bad)
out
mov
fbstp
add
or
mov
push
add
pop
mov
pop
mov
dec
fmulp
cmp
outs
add
jmp
leave
cli
push
jno
add
lock
xchg
add
mov
ja
jae
ins
cmp
je
push
jno
add
lock
ins
(bad)
div
ret
fadd
jno
jmp
sbb
add
mov
fdiv
leave
cli
sbb
mov
sub
mov
inc
inc
push
nop
rol
dec
pusha
push
mov
mov
shl
pushf
mov
jmp
mov
clc
jmp
mov
mov
add
mov
mov
xchg
jae
mov
mov
cwde
icebp
fwait
inc
sbb
xor
nop
lock
sbb
in
pop
and
add
push
sbb
inc
mov
std
xor
mov
cmp
js
leave
cli
jmp
xor
sbb
mov
mov
cli
lea
add
nop
mov
push
call
nop
mov
std
out
cli
mov
retf
cli
push
xor
jo
leave
cli
jmp
icebp
aaa
sbb
mov
mov
cli
lea
add
out
push
or
mov
mov
mov
shl
pushf
pop
clc
jmp
mov
inc
add
push
add
mov
cli
mov
pop
std
mov
pop
adc
movs
in
cli
push
icebp
cmp
add
fisub
sbb
push
call
jno
add
sbb
cli
push
jno
jmp
sbb
out
pop
ss
add
ss
je
cli
call
inc
push
push
icebp
xchg
add
pop
vpacksswb
sbb
in
cli
in
cli
mov
pop
std
mov
pop
add
sbb
mov
dec
mov
cli
push
icebp
push
xor
sbb
mov
in
cli
jmp
mov
in
cli
jmp
mov
in
cli
jmp
mov
dec
fsubp
icebp
out
xchg
cmp
cli
or
inc
push
push
icebp
or
add
mov
ret
fild
mov
pushf
retf
out
in
mov
loope
std
mov
mov
cli
push
xchg
mov
(bad)
out
push
call
icebp
add
jmp
mov
cli
mov
pop
std
mov
pop
inc
push
mov
cli
push
icebp
aas
cmp
sbb
xor
nop
icebp
ret
enter
ss
(bad)
out
add
sbb
arpl
pushf
fdivrp
jmp
ss
mov
ret
mov
jmp
ss
jg
sub
leave
cli
add
mov
ret
mov
jmp
in
dec
test
pop
xchg
mov
std
out
push
lea
outs
add
outs
and
outs
add
mov
dec
pop
add
add
test
(bad)
ss
std
out
in
lahf
sub
and
add
leave
mov
in
cli
push
jno
jmp
sbb
cli
push
icebp
cmps
cmp
adc
mov
std
out
add
push
pushf
retf
out
ins
jne
je
call
nop
cmc
or
ins
sub
add
add
leave
add
pushf
push
clc
jmp
or
jb
aas
fidiv
add
xor
add
add
mov
nop
in
cli
add
ins
add
ss
add
add
sbb
cli
push
dec
ficomp
add
jmp
sbb
cli
push
icebp
jbe
jmp
mov
or
leave
cli
add
inc
and
out
out
sbb
xchg
cdq
std
out
add
add
fisttp
cmp
(bad)
out
add
std
out
push
call
nop
into
repnz
mov
std
out
mov
dec
ficom
sbb
outs
add
and
sub
aaa
std
mov
leave
mov
in
cli
call
xchg
mov
std
out
pop
pop
inc
inc
add
arpl
dec
popa
mov
mov
out
ror
mov
add
ror
ins
ds
scas
sub
push
mov
leave
jo
icebp
xchg
xor
sbb
stc
mov
shl
pop
fimul
xchg
add
mov
call
nop
hlt
arpl
sub
add
(bad)
push
adc
dec
rol
adc
dec
pop
add
add
inc
add
jge
aaa
or
xor
xchg
jae
push
nop
mov
cmps
xor
sbb
or
add
sbb
mov
sbb
mov
out
or
scas
jae
lea
add
fdivrp
xor
ss
jne
cmp
push
sbb
mov
in
inc
adc
in
fild
ss
(bad)
xchg
jb
add
sbb
or
or
add
push
jae
push
push
jae
outs
add
out
add
mov
std
mov
pop
cli
push
icebp
dec
add
mov
in
pop
sub
add
add
mov
ret
into
pop
pop
inc
inc
push
nop
sar
call
dec
pusha
push
mov
jge
and
arpl
out
ror
nop
icebp
add
nop
icebp
ret
(bad)
cli
call
add
loopne
leave
push
lea
ins
div
pop
add
rcl
xchg
add
ss
xor
mov
dec
leave
mov
stc
leave
cli
call
call
jmp
jo
icebp
aaa
xor
sbb
ret
jbe
pusha
fidiv
inc
pop
sbb
test
in
cmp
loopne
leave
push
lea
push
call
adc
jno
dec
leave
mov
stc
leave
cli
call
call
jmp
jo
icebp
fwait
xor
sub
mov
out
or
pushf
xor
repnz
inc
push
mov
mov
fisub
sbb
push
push
dec
mov
cmp
sub
mov
add
test
jmp
push
push
icebp
pop
xor
sbb
ret
mov
mov
call
cmp
sbb
mov
pop
or
push
icebp
in
mov
or
hlt
inc
sbb
pop
sub
add
lock
ror
xchg
mov
(bad)
leave
mov
jno
hlt
inc
sbb
cli
push
icebp
mov
add
mov
or
stos
xor
sbb
pushf
mul
mov
add
jmp
jmp
in
mov
fnstsw
mov
idiv
mov
cli
mov
fisubr
sbb
mov
cdq
out
iret
xchg
sbb
sub
dec
add
add
scas
repnz
dec
mov
cli
push
jno
jmp
sbb
cli
push
icebp
jnp
add
mov
adc
sbb
add
(bad)
ltr
ss
mul
mov
add
jmp
jmp
in
dec
sub
ds
aaa
call
ss
out
in
aaa
sub
ds
sub
mov
icebp
(bad)
add
(bad)
ltr
ss
mul
mov
add
jmp
jmp
in
or
ds
(bad)
sub
add
add
xor
icebp
xor
sbb
pushf
mul
mov
dec
pop
pop
out
pop
mov
dec
fisubr
les
leave
jo
jno
hlt
inc
sbb
cli
push
jno
hlt
inc
sbb
cli
push
icebp
mov
rcl
add
sbb
in
arpl
ss
add
xor
jno
test
add
leave
cli
push
icebp
mov
add
mov
or
hlt
inc
sbb
cli
push
icebp
pop
add
mov
or
ss
and
ss
add
xor
jno
test
add
leave
cli
push
icebp
ja
add
mov
or
hlt
inc
sbb
cli
push
icebp
sbb
add
mov
or
fbstp
add
(bad)
ltr
ss
mul
mov
add
sub
add
add
mov
push
xchg
mov
call
call
add
push
call
call
add
ror
nop
lock
mov
ss
add
xor
jno
test
add
leave
cli
push
icebp
lahf
aaa
add
mov
or
jmp
sbb
cli
push
icebp
mov
ror
addr16
add
(bad)
ltr
ss
mul
mov
add
jmp
jmp
in
outs
sub
add
sbb
je
lea
in
pop
sub
add
lock
mov
icebp
daa
aaa
add
(bad)
ltr
ss
mul
mov
add
jmp
jmp
in
das
sub
add
jne
mov
cli
push
jno
jmp
sbb
cli
push
icebp
(bad)
sbb
xor
sbb
pushf
mul
mov
add
jmp
jmp
in
jmp
ss
add
je
lea
in
xlat
sub
add
lock
mov
icebp
mov
ltr
ss
mul
mov
add
jmp
jmp
in
stos
sub
add
sub
icebp
xor
cld
mov
mov
adc
ss
loopne
leave
push
push
xchg
mov
call
call
add
scas
repnz
call
repz
mov
dec
ficom
sbb
xchg
adc
and
leave
cli
mov
pop
fucomi
pop
mov
dec
fidiv
xor
ss
adc
cmc
xor
ss
cdq
out
iret
xchg
sbb
adc
lds
xchg
mov
loopne
leave
push
call
call
add
scas
repnz
call
xor
ss
cdq
out
iret
push
lea
ins
pop
div
movs
ss
out
in
scas
sub
add
shl
je
lea
in
mov
fnstsw
outs
add
outs
add
outs
add
add
cmp
add
jmp
mov
or
lea
in
mov
sbb
cli
push
dec
mov
cli
push
out
stc
(bad)
leave
in
xchg
xor
add
jmp
fidiv
rcr
idiv
mov
cli
mov
pop
lds
xor
inc
push
mov
cwde
fiadd
push
dec
mov
sub
ss
test
leave
cli
mov
mov
pushf
in
cli
add
icebp
xor
xchg
imul
sbb
pop
add
leave
test
sbb
add
out
mov
sti
out
mov
icebp
shr
add
in
iret
ss
call
icebp
ins
add
je
call
nop
mov
std
out
outs
adc
mov
dec
ficomp
sbb
ins
add
ss
jmp
ins
scas
div
lods
fadd
jno
add
in
leave
xchg
cmp
pop
add
pop
add
sbb
mov
dec
mov
cli
push
icebp
jecxz
add
mov
ret
xchg
clc
jmp
mov
dec
fdivp
stc
out
xchg
adc
dec
pop
add
pop
movs
out
pop
mov
dec
fiadd
sbb
mov
dec
mov
cli
push
icebp
pop
sub
sbb
fsubp
out
mov
nop
into
add
nop
icebp
outs
inc
jae
mov
dec
fidiv
les
mov
sti
jmp
jb
add
icebp
and
leave
cli
add
ss
jmp
ss
jg
sub
leave
cli
add
mov
pop
pop
ss
jmp
in
add
xchg
mov
std
out
push
lea
outs
add
outs
and
outs
add
mov
dec
pop
add
add
test
xchg
aaa
add
std
out
in
pop
xor
add
add
leave
mov
in
cli
push
jno
jmp
sbb
cli
push
icebp
jnp
add
mov
adc
mov
sti
out
add
lods
xor
add
jmp
ins
jne
je
call
nop
lock
ins
sub
add
add
leave
add
pushf
dec
(bad)
jmp
or
jb
aas
repz
add
sbb
lock
in
jmp
ss
mov
pop
add
sbb
mov
dec
pusha
in
arpl
ss
out
pop
mov
dec
fimul
mov
leave
xchg
adc
or
mov
sti
out
push
push
icebp
dec
bnd
mov
or
test
mov
ss
mov
retf
cli
call
push
call
cwde
fst
or
mov
dec
leave
mov
in
cli
call
nop
lock
in
add
std
out
in
fbstp
ss
add
xchg
add
ins
or
je
push
icebp
mov
rcl
jo
jno
jmp
sbb
xchg
sub
mov
call
repz
leave
mov
in
cli
call
call
pushf
in
cli
xor
push
push
out
xchg
std
out
in
scas
iret
leave
cli
sbb
test
push
add
sub
ss
retf
cli
call
ss
add
mov
dec
ficomp
sbb
mov
sbb
mov
jae
cli
mov
retf
cli
push
sti
sub
sbb
mov
in
cli
call
xchg
mov
std
out
out
push
nop
into
add
nop
icebp
pop
pop
inc
inc
add
arpl
dec
popa
mov
mov
outs
jmp
add
loope
sbb
mov
leave
jo
icebp
out
sub
sbb
pop
adc
inc
call
nop
lock
lds
add
scas
ds
add
leave
jo
xchg
bound
add
cdq
daa
sbb
push
call
xchg
jae
push
jae
push
push
jae
outs
add
xchg
sub
sbb
add
inc
in
mov
in
inc
xor
add
push
icebp
jecxz
add
pusha
in
(bad)
ds
mov
mov
pop
leave
fisub
in
ss
daa
sbb
push
push
cmps
jno
or
mov
lea
add
or
mov
ret
or
inc
add
(bad)
dec
mov
pop
std
mov
pop
cli
nop
mov
dec
pusha
in
jae
ss
or
mov
lock
push
call
call
add
mov
repnz
clc
xor
mov
jae
push
call
nop
lock
scas
inc
push
loopne
cmc
and
pop
dec
lea
into
repnz
jae
mov
push
ret
aaa
add
xor
mov
sti
push
jno
jmp
sbb
push
sub
mov
outs
add
add
sbb
xor
stos
pop
add
(bad)
call
inc
sbb
sub
les
mov
add
add
add
scas
pop
ss
xor
add
add
push
cli
inc
out
mov
out
std
or
fisub
in
push
push
cmps
lahf
jne
pop
mov
ret
pop
pop
push
pop
add
push
pop
add
add
outs
add
outs
push
jae
in
(bad)
xor
add
(bad)
cmp
add
xor
add
pop
xor
add
xor
add
lods
pop
ss
wrmsr
ss
mov
pop
add
jae
cli
xor
icebp
iret
sub
push
jae
cli
xor
icebp
fild
push
jae
cli
xor
icebp
out
sub
add
mov
outs
xor
add
ret
xor
add
xor
add
mov
ss
xor
add
mov
sbb
xor
add
pop
ss
xchg
xor
add
add
pop
add
jae
cli
xor
icebp
dec
sub
push
jae
cli
xor
icebp
pop
sub
idiv
mov
outs
add
xor
inc
sbb
push
sub
outs
add
xor
inc
sbb
inc
sub
ss
idiv
mov
pop
pop
shl
push
mov
addr16
mov
nop
into
xor
nop
icebp
outs
cld
out
in
lods
pop
ss
ret
ds
add
mov
pop
stc
jmp
test
sbb
mov
cld
out
test
ds
add
mov
pop
stc
jmp
mov
sbb
xchg
daa
sbb
mov
out
ror
in
xor
ja
call
mov
pop
ror
out
sub
ds
sbb
jbe
call
mov
pop
ror
out
sbb
ds
sub
adc
inc
sbb
mov
outs
cld
out
sub
pop
ds
add
pop
stc
jmp
stos
inc
sbb
add
sub
jbe
push
jae
cli
xor
icebp
ret
and
sbb
sub
mov
sbb
fldenv
sbb
cmps
sbb
ja
push
jae
cli
xor
icebp
out
add
mov
ret
cmc
push
mov
mov
sbb
popa
mov
mov
pop
std
mov
pop
lock
pop
ss
jne
fidiv
out
mov
jno
call
push
leave
cli
sbb
cmps
or
sbb
add
pop
add
add
mov
mov
pop
(bad)
push
push
icebp
out
and
sbb
sub
stos
inc
sbb
xchg
jae
sub
mov
inc
jmp
ss
add
mov
push
jno
call
add
ss
stos
aas
ss
add
cli
xor
jae
push
push
mov
cmc
xor
push
push
pop
adc
test
cli
call
in
pop
outs
add
inc
and
sbb
mov
out
ror
sbb
xor
ja
push
leave
xor
add
add
mov
jae
ins
or
mov
push
jno
call
call
mov
pop
add
push
pop
add
pop
add
push
jae
outs
add
outs
adc
inc
and
sbb
outs
xor
add
scas
pop
ss
iret
cmp
add
xor
ja
push
leave
xor
add
add
outs
fs
ins
add
ss
push
jno
call
call
mov
mov
sti
sub
add
xor
ja
push
leave
xor
add
add
outs
js
push
ins
add
ss
push
jno
call
call
mov
pop
add
inc
sbb
sub
mov
sbb
enter
jno
add
push
jno
jmp
in
pop
outs
add
jnp
add
xchg
or
out
xor
out
inc
mov
outs
adc
add
sbb
add
outs
sub
add
in
pop
ss
loop
je
push
ficom
and
mov
add
xor
ja
push
leave
xor
je
push
pop
popa
push
jae
ins
add
mov
push
jno
jmp
call
mov
mov
sub
push
jae
ins
inc
sbb
add
add
pop
js
pop
outs
add
add
sbb
xor
mov
add
add
cli
xor
jae
cli
xor
jno
add
sbb
mov
add
add
mov
push
jno
jmp
call
mov
pop
add
inc
sbb
sub
mov
sbb
add
outs
cmp
pushf
add
add
ss
add
mov
push
jno
jmp
call
mov
mov
aaa
sbb
repnz
jae
mov
fiadd
cli
out
outs
add
add
scas
pop
outs
add
add
pop
outs
adc
ins
out
ss
add
add
in
pop
ss
loop
je
push
fdivp
and
cmps
nop
stos
je
xor
pop
add
inc
sbb
sub
mov
sbb
cwde
ss
add
pop
adc
sbb
ins
add
ss
push
jno
call
call
mov
pop
add
inc
sbb
sub
mov
sbb
jle
sbb
ret
sbb
add
push
jno
jmp
in
pop
outs
add
inc
add
xchg
xor
add
add
scas
pop
outs
add
add
pop
outs
adc
add
add
outs
fs
add
in
pop
ss
loop
je
push
fidivr
and
cmps
lock
add
mov
pop
add
inc
sbb
sub
mov
sbb
dec
pop
dec
add
ss
mov
sbb
add
inc
sbb
in
pop
outs
add
retf
daa
add
xchg
xchg
mov
outs
add
add
scas
pop
outs
add
add
pop
outs
sbb
add
sbb
add
outs
adc
ss
icebp
pop
ss
or
je
push
icebp
mul
add
xchg
xor
pop
outs
add
add
pop
outs
sbb
add
add
outs
adc
ss
mov
ss
or
je
push
icebp
mov
add
xchg
sbb
xor
mov
jae
cli
xor
jae
cli
xor
jae
outs
sub
add
push
jno
hlt
inc
sbb
in
pop
ss
add
ss
add
pop
add
inc
sbb
sub
mov
sbb
jge
lock
outs
adc
ss
icebp
pop
ss
or
je
push
icebp
cmp
add
xchg
and
add
add
scas
pop
outs
add
add
pop
outs
pop
jno
add
add
outs
push
jno
add
jmp
ss
add
je
push
(bad)
and
cmps
cwde
stos
je
call
mov
shl
pop
ror
out
pop
leave
fisub
in
ficomp
adc
mov
ret
call
or
into
repz
mov
inc
add
out
mul
leave
xchg
or
mov
xor
mov
jae
cli
xor
icebp
push
and
sbb
inc
in
nop
icebp
mov
push
call
jae
cli
xor
jae
push
mov
inc
in
data16
sbb
add
add
je
push
jno
pop
add
fisub
and
cmps
inc
test
leave
xor
ja
push
outs
cmp
jae
sub
call
jae
ins
add
mov
push
jno
call
call
mov
mov
ret
leave
xor
ja
push
leave
xor
add
add
mov
jae
ins
or
mov
push
jno
call
call
mov
pop
add
push
pop
add
pop
add
push
jae
outs
add
outs
adc
(bad)
push
pusha
outs
xor
add
scas
pop
ss
dec
cmp
add
xor
ja
push
leave
xor
je
push
pop
popa
push
pop
adc
test
jmp
pop
outs
add
ja
add
xchg
in
lods
pop
ss
sbb
mov
jno
jmp
push
out
in
lods
pop
ss
sti
push
ss
add
ins
inc
sbb
add
inc
sbb
loope
sbb
test
sub
pop
add
push
aaa
add
lods
pop
ss
mov
pop
add
add
ss
xor
icebp
xchg
add
pop
add
inc
sbb
sub
mov
sbb
add
outs
xor
outs
jp
xor
fyl2x
pop
ss
(bad)
cmc
je
push
fisub
sub
add
inc
icebp
mov
xor
ja
push
leave
xor
je
push
jae
outs
adc
cwde
add
add
je
push
jae
in
pop
push
ss
add
add
add
inc
sbb
sub
mov
sbb
cwde
ss
adc
ss
push
jno
jmp
in
pop
outs
add
pop
sbb
sbb
test
jecxz
add
xor
jae
cli
xor
jae
outs
addr16
add
add
ss
add
ss
push
jno
call
call
mov
pop
add
inc
sbb
sub
mov
sbb
in
add
add
pop
popa
push
jno
jmp
in
pop
outs
add
lahf
sbb
sbb
test
lahf
cmp
cli
xor
jae
cli
xor
jae
outs
push
jno
add
add
ss
add
ss
push
jno
call
call
mov
pop
add
inc
sbb
sub
mov
sbb
std
aaa
add
add
pop
sbb
ss
inc
sbb
in
pop
outs
add
pop
sbb
sbb
outs
add
add
scas
pop
outs
add
add
pop
outs
adc
add
add
outs
push
jno
add
jmp
ss
loop
je
push
fdivrp
sbb
stos
je
push
leave
xor
ja
push
leave
xor
je
push
pop
xchg
sbb
outs
sub
sbb
inc
add
jmp
add
ss
mov
add
into
xor
nop
icebp
outs
add
add
scas
pop
outs
add
add
pop
outs
sbb
outs
inc
jae
ins
add
mov
push
jno
jmp
add
ss
add
mov
jae
cli
xor
jae
cli
xor
jae
outs
fs
outs
adc
ss
icebp
pop
ss
or
je
push
icebp
jnp
add
xchg
and
add
add
scas
pop
outs
add
add
pop
outs
pop
jno
add
add
outs
push
jno
add
jmp
ss
add
je
push
ficom
sbb
stos
je
call
nop
into
xor
nop
icebp
in
cmps
in
leave
cli
pop
inc
inc
push
nop
rol
push
cmps
arpl
xor
ss
add
outs
add
outs
add
add
or
fistp
add
mov
or
ss
call
nop
cmc
test
mov
sbb
xchg
ss
xor
mov
pop
(bad)
push
lea
lea
jmp
aas
fnsave
sbb
add
jmp
mov
sbb
imul
pop
pop
add
pop
bnd
push
out
or
ins
ds
cmp
leave
cli
sbb
mov
aas
lds
add
mov
jo
jno
rol
add
sbb
cli
sbb
mov
sub
mov
inc
push
mov
cwde
fiadd
add
ss
push
cmps
push
pop
into
dec
mov
out
mov
(bad)
out
mov
cwde
lock
adc
ss
call
cli
jmp
in
mov
daa
sub
add
scas
repnz
nop
in
pop
out
js
sbb
push
xchg
mov
jmp
leave
push
call
cdq
dec
cli
add
pushf
fdiv
pushf
ss
jmp
in
arpl
ss
mov
mov
call
inc
adc
mov
mov
jmp
leave
push
call
cdq
dec
cli
add
daa
ins
sbb
pushf
ss
jmp
in
das
add
add
jne
pop
cmp
pop
mov
dec
ficomp
mov
cli
push
ins
daa
ins
pop
(bad)
pushf
ss
jmp
in
sti
push
ss
jne
pop
fadd
pop
mov
dec
fsubp
pop
sbb
test
ds
jno
les
mov
cli
push
icebp
sti
adc
sbb
adc
lods
test
mov
jmp
leave
push
call
cwde
fadd
sub
test
cmp
adc
lds
mov
cli
push
icebp
scas
adc
sbb
adc
or
inc
add
push
call
cdq
dec
cli
or
daa
ins
xor
je
lea
in
imul
add
add
mov
call
adc
push
test
out
push
call
cdq
dec
cli
push
ins
daa
ins
fdiv
pushf
ss
jmp
in
aaa
push
ss
push
jno
out
inc
sbb
cli
push
jno
stos
inc
sbb
inc
in
leave
ins
inc
bnd
push
jno
stos
inc
sbb
pop
std
out
ins
sar
add
add
pop
cmc
mov
fbstp
(bad)
out
pop
pop
shl
add
dec
mov
push
push
xchg
inc
or
inc
mov
shl
pop
into
mov
nop
lds
dec
fmulp
sbb
mov
mov
gs
call
call
push
gs
xchg
add
add
add
imul
dec
mov
or
push
cmps
test
cmc
idiv
mov
cli
mov
mov
ret
push
xchg
mov
mul
leave
push
call
icebp
iret
pop
add
(bad)
ss
mul
mov
cli
and
adc
mov
sub
leave
cli
push
icebp
pop
adc
sbb
ret
and
adc
mov
sub
leave
cli
push
icebp
daa
adc
sbb
cli
add
(bad)
fidiv
pushf
fcomi
jmp
in
test
std
jmp
xor
jno
mov
sub
leave
cli
push
icebp
jmp
add
mov
and
ss
mov
mul
leave
mov
cdq
mov
clc
out
add
pop
xchg
ret
pop
mov
dec
fidiv
mov
pop
inc
adc
mov
inc
add
push
call
cdq
mov
clc
out
add
pop
iret
ret
pop
mov
dec
fiadd
lock
mov
cdq
mov
clc
out
or
ret
mov
dec
fisub
sbb
test
adc
push
xchg
mov
mul
leave
push
call
cdq
mov
clc
out
pcmpeqw
pop
mov
pop
mov
dec
fisubr
adc
sbb
mov
cdq
mov
clc
out
push
jne
pop
in
ret
pop
mov
dec
fimul
adc
jmp
push
xchg
mov
mul
leave
push
call
cdq
mov
clc
out
or
pop
daa
les
mov
dec
(bad)
adc
test
pop
inc
adc
leave
hlt
inc
add
push
call
jno
mov
sbb
cli
push
icebp
mov
jmp
mov
pop
dec
ss
add
mov
cmps
in
out
xchg
or
cli
and
adc
mov
mul
leave
add
add
ss
pop
add
imul
test
aaa
dec
add
lock
lock
jae
ins
jo
je
call
call
jmp
aas
lds
pushf
repz
add
fucomip
add
test
sbb
xor
out
or
cdq
mov
cld
out
aas
setl
add
sbb
cmp
leave
cli
add
lock
dec
pop
cmp
pop
mov
dec
faddp
sbb
ss
adc
leave
cli
add
in
jg
ss
bound
(bad)
div
idiv
pop
fmul
sbb
sar
inc
cmp
cmp
ss
inc
sbb
aaa
jno
mov
sbb
jmp
mov
dec
ficom
sbb
test
inc
aaa
add
inc
sbb
jmp
mov
dec
fidivr
les
fld
sbb
add
clc
out
push
call
cwde
fdivr
test
into
cli
dec
sbb
test
enter
fiadd
sbb
ss
or
je
lea
in
pop
add
add
test
enter
ficomp
sbb
mov
call
clc
out
push
push
xchg
mov
clc
out
push
call
call
cld
loope
cli
push
icebp
fist
add
mov
sbb
leave
cli
mov
pop
add
in
inc
add
push
call
call
push
sbb
add
jmp
mov
add
sbb
pop
mov
repz
loope
or
out
std
clc
out
ins
nop
test
add
add
push
call
call
add
push
call
xchg
mov
(bad)
out
push
call
nop
mov
mul
leave
out
es
mov
mul
leave
test
sbb
xchg
mov
mul
leave
ret
test
sti
jmp
ss
(bad)
mov
xchg
sbb
mov
pop
cmc
mov
leave
mov
loope
cli
lea
ins
fdivp
je
lea
in
retf
(bad)
add
test
into
cli
dec
adc
test
sar
xchg
mov
(bad)
out
push
call
xchg
mov
mul
leave
mov
push
push
fisubr
adc
mov
xchg
mov
clc
out
push
jmp
int
sbb
mov
xor
mov
xchg
mov
clc
out
push
call
xchg
mov
(bad)
out
push
mov
jns
sbb
lahf
or
add
jmp
outs
add
xor
out
ins
push
jbe
push
pop
add
add
and
test
retf
dec
gs
mov
into
cli
push
xchg
leave
jmp
mov
or
cmc
or
push
mov
std
out
cli
mov
into
cli
push
lahf
pop
add
mov
ret
push
icebp
mov
add
outs
in
(bad)
jecxz
cli
pop
inc
ins
int3
ret
push
mov
mov
sbb
in
pop
or
add
(bad)
inc
mov
pop
fisttp
dec
ss
add
ins
add
sub
add
leave
or
ins
and
(bad)
daa
add
dec
or
add
ins
sbb
mov
xchg
xor
dec
fwait
inc
add
out
add
nop
cmc
ins
push
mov
add
add
add
mov
ss
outs
or
add
add
imul
jno
add
sbb
cli
push
out
or
add
ins
nop
test
add
jmp
in
jb
leave
cli
sbb
cmp
out
add
add
mov
js
je
or
adc
pop
ss
add
mov
shl
pushf
stos
jmp
call
mov
addr16
out
fadd
cli
push
idiv
pop
xor
mov
inc
mov
mov
xchg
mov
ret
test
fnsave
call
push
cmp
retf
adc
(bad)
div
idiv
pop
fmul
sbb
sar
xchg
js
test
scas
(bad)
call
mov
cli
cmp
inc
(bad)
cdq
call
outs
or
rol
ins
cmp
test
sub
lds
mov
pop
xchg
mov
ss
aam
je
lea
in
dec
or
mov
cli
push
xchg
mov
out
out
push
call
xchg
mov
in
out
push
call
xchg
mov
in
out
push
call
call
add
pop
add
jmp
in
inc
or
add
mov
pop
add
imul
add
cmc
ins
(bad)
repz
push
jno
out
inc
sbb
scas
pop
ss
fisttp
ss
jmp
mov
add
add
push
mov
add
pop
mov
nop
test
add
add
mov
sbb
test
mov
xchg
add
pop
ss
repz
mov
idiv
mov
cli
mov
pop
mov
pop
ss
nop
test
add
add
movs
inc
sbb
jne
sbb
mov
xchg
add
and
ss
jmp
sub
inc
sbb
mov
ss
into
repz
push
icebp
or
add
mov
inc
xchg
mov
xor
mov
lds
add
aad
test
cmc
outs
add
outs
add
outs
add
add
scas
pop
ss
mov
ss
ret
ret
add
outs
add
push
call
fidiv
call
ss
lea
in
imul
add
jmp
mov
call
cmp
sbb
push
mov
mov
dec
leave
jo
icebp
ret
or
sbb
pop
mov
sbb
repz
ss
jne
fsubp
nop
test
push
add
call
ss
lea
in
mov
ss
jmp
mov
call
cmp
sbb
push
mov
mov
dec
leave
jo
icebp
stos
or
sbb
pop
mov
sbb
repz
ss
jne
fimul
jne
fisub
push
sbb
mov
idiv
mov
cli
mov
(bad)
lea
call
loopne
add
int3
xchg
xor
inc
fnstcw
(bad)
push
jae
in
iret
push
ss
add
add
nop
mov
icebp
inc
fcomp
ss
fcom
xchg
adc
fcomp
jae
add
ss
add
ss
pcmpgtw
add
ss
call
jae
cli
xor
jae
outs
add
outs
add
outs
add
add
in
pop
ss
jmp
sbb
sbb
add
test
outs
add
arpl
add
pop
add
call
cmp
add
fadd
icebp
sbb
add
pop
xchg
pop
ss
call
nop
mov
in
out
mov
sub
mov
icebp
jecxz
add
pop
add
out
lods
in
out
ret
fdivr
call
lds
test
mov
cli
push
jno
rol
js
pop
ss
push
fnsave
sbb
add
jmp
mov
sbb
div
call
call
nop
out
add
nop
cmc
mov
dec
pop
add
jae
outs
add
in
sub
ss
add
mov
cli
push
jae
outs
add
jo
sbb
sbb
or
sbb
push
call
jae
ins
hlt
sbb
add
add
cmp
inc
std
in
xlat
pop
ss
add
mov
ror
sbb
outs
add
outs
add
or
sbb
lds
imul
dec
mov
pop
add
gs
push
cmps
vmread
adc
add
clc
or
sbb
push
mov
add
ss
aam
ss
add
mov
add
cmp
sbb
add
add
or
push
add
sbb
or
call
setge
add
in
pop
ss
xor
icebp
out
jmp
mov
cli
sbb
pop
jmp
call
call
jmp
mov
ret
out
clc
jmp
data16
mov
retf
cli
push
sbb
add
aas
lds
popf
mov
or
leave
cli
push
out
inc
mov
ss
adc
add
mov
sbb
leave
cli
xor
mov
xor
cmp
ins
sub
push
mov
std
out
xchg
sbb
leave
cli
sub
aad
cs
add
pushf
sar
jmp
sbb
cli
push
xchg
mov
std
out
cs
retf
cli
dec
add
inc
test
cmp
out
mov
std
out
mov
call
setge
add
sbb
cmps
ins
fnsave
idiv
and
je
add
ss
mov
cdq
or
pop
ss
adc
je
call
inc
mov
ret
xor
clc
nop
icebp
movs
add
or
jae
in
sbb
add
add
shl
pushf
(bad)
jmp
mov
inc
add
jae
setl
add
sbb
jo
icebp
and
add
fbstp
pop
sbb
mov
out
ror
nop
icebp
mov
mov
cli
cmp
mov
sbb
cmp
mov
sbb
cmp
lods
inc
sbb
cmp
test
sbb
cmp
mov
sbb
cmp
mov
sbb
cmp
mov
sbb
cmp
stos
inc
sbb
cmp
stos
inc
sbb
adc
ss
adc
fisttp
add
mov
cli
cmp
mov
sbb
cmp
mov
sbb
cmp
lods
inc
sbb
push
out
adc
add
cli
call
leave
jo
icebp
lahf
or
sbb
add
jmp
xchg
sbb
ret
out
clc
jmp
in
fwait
adc
sar
jmp
fistp
sbb
test
adc
jno
add
add
leave
cli
push
out
in
lods
pop
ss
call
ss
jmp
ss
jae
outs
add
out
inc
sbb
jae
add
lods
pop
ss
pop
adc
add
add
pop
xchg
mov
std
out
ret
test
retf
cli
call
mov
je
je
add
mov
add
ss
call
ss
jmp
data16
xor
icebp
scas
ltr
mov
cli
adc
inc
and
std
add
jno
test
cwde
add
leave
cli
push
icebp
sbb
or
leave
cli
add
inc
and
push
jae
in
fist
ss
inc
sbb
lea
sbb
in
push
ss
add
ror
nop
icebp
mov
dec
mov
cli
push
jno
out
inc
sbb
cli
push
icebp
mov
rcl
leave
add
add
leave
cli
push
out
sbb
adc
add
jmp
ss
jae
outs
add
out
inc
sbb
jae
add
movs
pop
ss
pop
adc
add
add
xchg
out
test
ss
call
push
pop
out
jmp
icebp
add
add
leave
xor
jbe
call
lock
sbb
add
leave
cli
add
or
mov
ss
jmp
mov
cli
jmp
(bad)
and
outs
add
in
inc
sbb
out
aas
add
movs
pop
ss
mov
pushf
xor
jmp
leave
add
pushf
ss
jmp
or
add
mov
cli
jmp
data16
dec
pop
xor
pop
mov
dec
fisubr
les
pop
cli
add
mov
dec
leave
xor
or
add
jmp
leave
add
push
pop
into
jmp
icebp
dec
or
sbb
xor
xor
add
add
mov
and
leave
cli
mov
mov
cli
push
xchg
mov
std
out
push
push
xchg
mov
std
out
push
call
call
add
push
jmp
stos
inc
sbb
mov
mov
sbb
push
pop
add
add
in
movups
add
inc
sbb
mov
sahf
sbb
add
mov
mov
cli
push
xchg
mov
std
out
push
push
xchg
mov
std
out
push
call
call
add
push
jmp
stos
inc
sbb
cmp
sbb
test
sbb
push
pop
add
add
in
cmps
adc
add
inc
sbb
push
or
ss
sbb
add
jmp
mov
call
cmp
sbb
and
jno
jae
outs
add
in
inc
sbb
imul
add
add
pop
adc
add
add
mov
(bad)
out
add
test
enter
mov
add
leave
cli
cmp
dec
add
dec
and
push
jae
in
xor
ss
inc
sbb
in
sbb
in
ret
add
jmp
aaa
pop
and
into
sub
nop
icebp
mov
dec
mov
cli
push
jno
out
inc
sbb
cli
push
icebp
ror
sbb
add
add
leave
cli
push
out
and
dec
push
ss
jmp
ss
jae
outs
add
in
inc
sbb
mov
add
addr16
ss
add
mov
(bad)
out
add
test
enter
mov
add
leave
cli
cmp
dec
add
dec
and
push
jae
in
jnp
ss
inc
sbb
sub
or
ss
jmp
aaa
mov
call
add
mov
enter
vmptrld
mov
dec
aaa
ss
jmp
data16
dec
pop
xor
pop
mov
dec
ficomp
or
ss
or
sbb
sbb
sbb
add
inc
sbb
mov
test
enter
into
repnz
mov
std
out
mov
nop
icebp
outs
add
outs
add
xor
out
in
mov
ss
inc
sbb
jo
xchg
cmp
enter
cmp
ss
nop
cmc
outs
add
push
push
jno
lods
inc
sbb
mov
out
cli
call
jae
mov
dec
pop
pop
push
out
icebp
(bad)
out
in
iret
sbb
add
jmp
mov
call
cmp
sbb
push
mov
cli
push
dec
mov
cli
push
out
icebp
(bad)
out
in
mov
sbb
cli
push
jae
ins
sbb
je
jmp
lea
dec
add
(bad)
out
in
sbb
jb
inc
sbb
int
sbb
outs
add
outs
add
outs
add
add
mov
sbb
ret
out
jmp
pop
add
hlt
out
cli
call
xchg
cmp
enter
cmp
ss
nop
cmc
outs
add
push
push
jno
mov
sbb
mov
out
cli
call
jae
mov
dec
pop
add
jmp
xor
out
in
out
sbb
aaa
std
mov
leave
mov
out
cli
call
fidiv
jne
pop
ss
sbb
test
sbb
add
inc
rol
js
pop
ss
push
fnsave
sbb
add
jmp
mov
sbb
cli
xor
icebp
rol
add
mov
sbb
leave
cli
mov
fst
ins
and
jne
leave
jo
out
or
add
pop
leave
(bad)
add
in
adc
inc
or
or
jae
mov
mov
add
sbb
sbb
ss
mov
mov
adc
cmp
cmp
mov
sbb
jmp
test
sbb
lods
add
ss
xor
mov
and
in
lods
pop
ss
out
test
sbb
mov
inc
sbb
jmp
stos
inc
sbb
jns
sbb
ds
ins
cmp
inc
add
pop
add
sbb
ret
sub
jmp
stos
inc
sbb
push
add
ss
ins
cmp
inc
add
or
add
mov
out
jae
mov
or
add
je
je
add
xor
icebp
and
add
or
add
je
je
add
xor
icebp
iret
push
add
fld
mov
pop
std
mov
pop
fidivr
sub
test
sbb
mov
mov
add
mov
mov
sbb
mov
stos
inc
sbb
add
and
ja
mov
aaa
std
mov
or
add
add
push
stos
inc
sbb
mov
mov
sbb
add
sub
jbe
cmp
mov
sbb
mov
stos
inc
sbb
fidiv
jo
out
adc
push
icebp
inc
add
sbb
add
fisubr
pop
shl
adc
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
push
mov
addr16
call
nop
icebp
test
cmp
push
mov
push
add
adc
jno
nop
icebp
inc
jmp
jno
aas
cmp
jmp
jno
mov
sbb
std
and
add
mov
add
jmp
add
push
push
in
out
test
pop
xor
sbb
add
or
jmp
repnz
mov
xor
mov
mov
repnz
fmul
cmp
adc
repz
jb
add
ds
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
cli
and
mov
