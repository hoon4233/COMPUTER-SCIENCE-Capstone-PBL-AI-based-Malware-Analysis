out
aaa
(bad)
call
in
movzx
cmp
ja
jmp
or
ret
adc
aaa
outs
pop
pusha
pop
pop
or
add
push
(bad)
fcomip
(bad)
call
add
int3
add
push
mov
cmp
sti
stc
mov
pop
push
or
pop
xor
pop
(bad)
in
jg
mov
test
jne
push
inc
mov
not
jle
lea
ret
push
lea
push
push
mov
jg
mov
xor
cdq
sub
and
sbb
mov
std
std
push
sbb
xchg
add
mov
push
mov
mov
and
pop
fsubr
sbb
call
ror
jne
cmp
je
nop
inc
or
pusha
pusha
cmp
loopne
jb
popa
(bad)
call
iret
mov
mov
pop
pop
or
mov
push
mov
sbb
mov
lock
pop
js
cmp
je
xor
xor
push
pop
push
jg
cmp
sbb
add
add
(bad)
mov
cmp
jge
jo
mov
add
ins
cmps
pop
mov
inc
add
dec
je
add
sbb
push
dec
pop
mov
mov
pop
mov
mov
and
pop
enter
ret
std
mov
test
inc
cld
inc
lock
idiv
imul
call
push
mov
mov
shr
and
cmp
je
and
shl
xor
push
push
cmp
ja
or
jbe
test
jne
mov
std
out
idiv
push
test
mov
shr
mov
adc
es
and
std
in
and
add
sbb
ror
lds
cld
xchg
add
imul
mov
add
cmp
add
push
rcl
test
add
mov
cmps
xor
cmp
adc
xchg
hlt
mov
shr
jmp
je
cld
stos
loop
or
sbb
movs
(bad)
jmp
cmp
jle
pop
push
fdivr
push
push
imul
push
cmp
mov
daa
aas
jmp
bound
inc
arpl
das
data16
sbb
pop
arpl
aaa
idiv
repnz
fcom
xor
push
add
adc
out
jno
cmp
lahf
cdq
adc
add
pop
ins
js
push
in
push
and
add
lahf
add
lock
or
xchg
add
retf
enter
(bad)
inc
sbb
xchg
retf
test
ins
fld
mov
call
adc
sub
pop
dec
mov
sbb
jg
test
jb
mov
repnz
mov
out
rcl
(bad)
loopne
shr
xchg
inc
imul
rol
neg
js
mov
jg
push
lea
push
jns
sub
push
movs
std
add
or
jb
call
pop
push
mov
loope
shl
push
neg
jne
jb
fisub
jo
jne
inc
xor
sbb
mov
cmp
push
xchg
and
int
data16
lds
xchg
or
and
mov
add
add
or
mov
mov
or
jne
adc
or
mov
out
loopne
je
or
sub
push
add
sub
aam
fst
adc
neg
popf
(bad)
sbb
sahf
pop
xor
jmp
mov
add
push
(bad)
cdq
mov
mov
(bad)
push
push
scas
loopne
sbb
pop
mov
pop
ret
mov
and
inc
adc
or
sub
hlt
test
lahf
or
and
cwde
or
push
cmp
push
leave
sub
and
dec
or
scas
pop
xchg
dec
sub
sub
sbb
gs
jne
daa
jnp
jmp
add
dec
xor
pop
push
lds
xchg
mov
pop
pop
je
sub
push
add
or
sub
push
pop
or
pop
inc
cmps
xchg
popa
xor
pop
shl
and
and
test
lahf
ds
push
add
and
jg
inc
mov
(bad)
push
jge
test
ds
xor
shr
je
xor
adc
mov
aaa
mov
pop
mov
push
cmps
pop
pop
pop
push
xchg
xor
push
(bad)
cs
ins
mov
cdq
sbb
mov
in
fidiv
sbb
(bad)
sub
inc
es
into
sbb
inc
popw
mov
mov
sbb
jo
pop
scas
sub
aad
test
and
arpl
jne
push
rcl
sub
cwde
xor
add
push
or
push
adc
(bad)
aas
std
push
arpl
cmp
mov
test
push
add
and
aas
sbb
jne
mov
jmp
push
pop
inc
xchg
push
add
push
and
sti
dec
jg
add
xor
stos
jp
adc
fbld
lds
push
test
pusha
out
push
mov
mov
je
push
jl
cmp
mov
js
enter
mov
stos
jge
dec
push
dec
je
add
clc
dec
push
or
push
push
or
out
scas
cmp
add
jo
nop
not
jle
aaa
enter
add
adc
xchg
xchg
dec
in
jmp
cmps
test
dec
push
rcr
adc
mov
ja
adc
cmp
cld
(bad)
jg
xor
fidivr
outs
je
adc
das
js
jge
jne
mov
imul
inc
je
add
int3
xchg
ror
mov
stc
add
lea
movaps
adc
and
rol
push
call
cdq
sbb
pop
inc
or
xor
or
and
test
and
pop
fs
pop
aaa
cmps
sub
dec
imul
add
mov
push
mov
mov
and
add
and
push
xor
out
stos
std
or
mov
and
or
cmp
and
call
hlt
mov
and
fiadd
fist
or
and
fld
sar
in
push
push
test
sub
inc
cmps
movs
loop
dec
je
dec
jne
sub
and
pop
test
mov
jmp
sbb
lock
in
pop
ja
cwde
(bad)
mov
iret
xchg
xchg
xchg
pop
add
dec
xchg
call
scas
push
or
sbb
add
retf
xchg
repnz
enter
(bad)
not
pop
shl
enter
or
or
(bad)
add
dec
imul
mov
fldcw
adc
xchg
(bad)
mov
shr
cmps
push
xchg
popa
lea
sti
adc
adc
fwait
scas
adc
cmp
sahf
popa
jo
sar
lock
mov
and
popf
or
shl
sbb
shl
add
call
sbb
sbb
push
jecxz
and
mov
mov
mov
jmp
cld
and
or
cwde
jle
xor
adc
loope
adc
fmul
cld
js
daa
mov
test
sbb
jmp
xchg
mov
mov
ror
loope
inc
or
ror
int3
scas
arpl
and
add
jne
nop
inc
pop
not
jmp
in
leave
or
jbe
sub
mov
cmp
mov
rcr
lahf
xlat
out
mov
adc
sub
lahf
push
ror
add
xor
scas
rol
sub
push
push
loope
xchg
or
jl
cmp
ss
adc
adc
popa
pop
adc
sub
test
jl
ja
mov
aam
pop
adc
mov
cdq
mov
repnz
rol
pushf
or
dec
dec
jns
cmp
push
enter
sbb
inc
mov
cmps
or
sub
imul
or
pop
leave
and
js
pushf
nop
out
adc
inc
cmp
in
xor
bound
rcl
jmp
mov
sahf
ret
dec
pop
or
mov
jns
add
add
sbb
mov
jne
cs
jl
jecxz
je
jne
popf
sbb
lds
addr16
stc
add
mov
cmp
inc
sub
mov
add
scas
push
add
push
mov
push
jne
adc
add
imul
seto
cmc
jmp
push
loop
push
inc
aam
mov
jnp
jmp
push
sbb
pop
xor
add
cmp
outs
(bad)
sbb
mov
and
sahf
out
aas
dec
xchg
sbb
push
ja
xchg
popf
mov
mov
hlt
add
adc
mov
xor
xor
pop
push
add
cdq
xor
pop
(bad)
(bad)
imul
sub
mov
add
outs
add
sub
cdq
xor
outs
add
imul
rcl
je
dec
push
mov
jg
je
push
xlat
mov
and
adc
cmp
mov
jbe
call
mov
cmp
mov
cmp
push
(bad)
pop
adc
inc
jns
add
cmps
jge
movs
adc
dec
ds
sbb
shr
test
push
push
or
mov
clc
fucomip
or
loopne
jno
fistp
jne
mov
lods
inc
xchg
jp
push
push
mov
pushf
loope
repz
std
aas
mov
xchg
cs
and
push
mov
(bad)
cmp
sahf
je
rol
jl
(bad)
jmp
retf
and
(bad)
inc
cmc
adc
sbb
xor
adc
jmp
pop
popf
mov
sub
jo
sbb
je
adc
les
adc
fs
ror
test
ror
ss
stc
or
cmps
lods
adc
outs
inc
ins
mov
adc
jne
popa
cmp
loope
mov
pop
or
sub
call
xor
inc
and
shr
mov
loopne
sbb
stos
lds
ins
shl
xchg
aas
test
test
rcl
push
loopne
das
add
cmp
dec
cmp
jmp
sbb
ror
and
inc
shr
jp
sub
or
adc
or
xchg
and
or
add
mov
loopne
shr
jb
adc
and
ins
pop
or
jg
jge
or
loope
inc
inc
xor
cmp
and
sahf
mov
test
xlat
sbb
add
and
or
cli
inc
inc
test
imul
sbb
add
ja
je
aaa
movs
loope
mov
lea
jmp
jbe
add
jmp
dec
call
lods
inc
out
adc
retf
jne
mov
push
das
fdivr
push
xor
inc
xchg
add
mov
xor
add
adc
push
push
mov
enter
rcr
add
push
stc
mov
aam
mov
jecxz
push
pop
push
pop
in
iret
cwde
loop
pop
adc
inc
push
sub
je
push
cmps
adc
dec
sbb
dec
cmp
dec
and
test
nop
clc
xlat
mov
(bad)
std
mov
mov
je
mov
ror
sub
fs
jbe
rcr
ficomp
stos
ins
pop
pop
jno
sbb
int3
mov
mov
and
(bad)
je
jmp
mov
adc
dec
push
loop
outs
cmps
lods
jp
and
cmp
test
add
cld
mov
add
and
sub
fld
je
or
or
push
add
test
push
jmp
shr
cmp
xor
ret
or
xor
or
inc
mov
xchg
sbb
jns
imul
arpl
movs
inc
adc
(bad)
enter
mov
xor
hlt
jae
aad
pop
pop
jbe
aaa
dec
inc
push
jmp
or
push
xor
in
push
add
sbb
dec
jb
mov
push
cmps
push
sbb
test
fwait
mov
bound
cmp
outs
mov
(bad)
retf
inc
fs
push
loopne
push
push
add
out
in
dec
inc
in
cli
inc
jmp
fimul
mov
mov
ds
aas
leave
cld
shr
mov
xchg
std
daa
scas
mov
mov
sub
shl
or
sub
mov
jne
loope
mov
lods
sbb
ret
push
loope
ret
loope
adc
mov
jge
jmp
shr
outs
mov
jb
mov
inc
lock
xchg
(bad)
aas
(bad)
lock
imul
add
test
clc
inc
push
mov
or
js
push
lock
outs
call
or
adc
push
and
cld
mov
fdiv
shl
test
inc
and
cmp
stc
jg
lock
leave
ja
or
ret
mov
lods
jp
sub
and
cmp
dec
in
inc
in
stos
sbb
and
dec
loopne
or
mov
or
xor
leave
sbb
nop
push
js
push
adc
add
neg
retf
and
sub
sar
dec
add
loopne
pop
and
rol
cmps
je
and
jno
cmp
xchg
retf
adc
add
dec
loopne
arpl
loop
test
ja
movs
pop
cmps
sbb
push
nop
add
jecxz
lds
pop
and
ja
pop
and
sub
jbe
sbb
enter
mov
and
ss
jne
iret
cmp
or
add
outs
jle
mov
mov
mov
sbb
mov
xor
mov
push
dec
xchg
jns
inc
inc
enter
je
pop
and
xchg
je
je
in
jns
jb
dec
jns
sbb
or
jae
inc
repnz
nop
push
imul
inc
enter
enter
and
test
or
jb
and
sbb
jo
jno
leave
inc
repnz
dec
mov
inc
enter
jo
jo
xchg
pop
and
push
jo
mov
or
outs
sub
xchg
(bad)
push
jg
inc
nop
add
data16
mov
(bad)
or
inc
push
jb
jl
outs
xor
xchg
and
xor
and
adc
enter
scas
nop
adc
sbb
push
outs
pop
and
or
pop
and
inc
xchg
mov
and
dec
ins
jns
pop
xor
add
or
js
bound
inc
(bad)
sbb
cmp
call
jae
cwde
and
punpcklbw
push
fcomp
aad
adc
inc
ins
cmps
mov
sub
inc
shr
cli
add
and
xor
pop
jo
lds
das
je
jecxz
add
inc
sbb
lock
lds
cmpxchg
lock
cmps
sub
(bad)
jno
cmp
add
pop
icebp
push
push
adc
sbb
cmp
(bad)
xchg
mov
and
sbb
mov
out
xchg
mov
push
pop
jmp
test
jb
push
or
das
push
add
push
add
inc
xor
es
push
xor
fwait
xchg
or
jmp
jge
lahf
or
imul
fidiv
movs
pop
push
inc
push
cmp
inc
repnz
lahf
inc
push
icebp
addr16
push
popa
in
xor
ret
pop
mov
jo
push
sub
leave
fmul
dec
xchg
jns
out
ret
dec
xor
movs
enter
xchg
in
push
pop
shl
mov
xor
js
jns
xor
in
or
fs
adc
data16
movs
loop
das
es
mov
call
nop
xor
inc
dec
add
mov
and
and
in
aad
test
inc
push
fwait
fs
mov
arpl
nop
adc
enter
pop
arpl
nop
mov
dec
add
and
push
bound
cmp
add
lods
xor
(bad)
nop
pusha
jae
and
cmp
shl
in
and
xchg
adc
pop
test
xchg
out
pop
add
cmp
out
pop
sub
cmps
and
inc
cmovge
sar
cmp
mov
test
daa
vaddss
test
pop
sub
je
and
sbb
in
das
mov
test
inc
push
mov
and
cmp
add
pop
inc
push
and
and
pop
mov
inc
dec
aad
shr
sub
add
enter
nop
xor
xor
pop
inc
enter
pop
push
and
inc
and
pop
sbb
imul
pop
out
rcl
test
outs
into
lods
cmp
cs
pop
cs
pop
adc
cmp
in
jmp
bound
inc
xor
daa
adc
sub
fadd
sub
ror
or
scas
nop
inc
adc
pop
(bad)
push
int3
int3
dec
push
mov
repnz
cmp
leave
je
push
sbb
jo
pop
push
mov
es
add
mov
or
xor
push
jb
push
push
loope
xchg
mov
and
push
movs
mov
into
push
(bad)
mov
push
loopne
pusha
and
adc
push
adc
jo
pushf
inc
mov
and
in
push
sbb
xchg
cmp
dec
sub
pop
cmp
push
jbe
add
or
push
shl
xchg
pop
lock
cmp
or
sbb
aad
sbb
ret
(bad)
xacquire
push
cmp
inc
mov
aam
call
push
push
leave
adc
add
(bad)
cmp
fwait
dec
popa
dec
nop
pop
xor
sbb
adc
retf
dec
shl
or
adc
sub
pop
xor
loop
leave
adc
xchg
dec
fcomip
or
adc
dec
out
dec
nop
pop
xor
test
and
in
repnz
adc
dec
mov
nop
pop
xor
jo
xchg
jno
and
stc
inc
enter
dec
jge
repnz
mov
and
pushf
and
push
or
dec
mov
dec
or
or
cmp
add
pop
cmp
pop
add
dec
cmps
dec
cmp
addr16
xchg
cli
mov
dec
mov
sbb
loope
ins
pop
xor
pop
cmp
adc
xor
dec
jo
or
or
inc
push
dec
and
mov
xchg
dec
mov
xchg
inc
enter
call
inc
outs
inc
inc
push
or
and
das
mov
push
jg
dec
add
inc
cwde
daa
inc
inc
and
add
cmp
leave
and
mov
inc
repnz
cmp
leave
adc
inc
xchg
inc
repnz
mov
inc
inc
push
inc
jb
enter
ret
cmp
inc
pop
icebp
add
add
arpl
jmp
in
jns
sub
jns
sbb
rol
leave
inc
repnz
jo
mov
xchg
inc
enter
add
and
popa
inc
push
sbb
ins
and
sbb
aas
jns
push
leave
inc
repnz
inc
pop
adc
inc
jbe
xchg
inc
enter
aas
push
aas
jns
pop
and
push
aas
sbb
in
and
imul
ds
push
leave
inc
inc
pop
ds
mov
inc
fs
xchg
pop
cmp
cmp
xchg
xchg
cmp
mov
pop
pop
inc
(bad)
pop
jne
mov
add
ret
mov
pop
and
or
mov
rcr
push
ja
and
cmc
add
xor
add
not
les
stos
mov
add
push
add
aaa
mov
add
jge
add
jne
and
jns
enter
add
jge
add
mov
sbb
pop
je
push
gs
and
mov
call
cmp
mov
or
je
adc
sub
and
or
xchg
or
and
aad
add
or
das
enter
add
or
enter
int
cmp
dec
repz
add
xlat
xchg
mov
jbe
pcmpeqb
ss
rcr
xor
lahf
cmp
ins
sbb
sub
sub
cmp
xchg
add
adc
push
stos
push
ficom
bound
mov
jnp
mov
sbb
pop
out
loop
cmp
loopne
pop
cli
test
jg
in
je
push
push
(bad)
mov
and
sub
ficom
mov
lods
sti
ins
shl
dec
jns
std
movs
jle
in
mov
std
jmp
add
je
mov
rcr
cmp
enter
int3
add
loope
dec
push
add
mov
enter
push
cmp
cmp
add
bound
and
stc
mov
add
pop
jo
add
add
iret
mov
mov
pop
rdpmc
mov
nop
add
xor
pop
je
hlt
push
mov
mov
jne
cmc
(bad)
shl
adc
clc
or
mov
call
push
sbb
cmp
add
jp
xor
and
sbb
pop
popa
add
and
adc
setne
pop
(bad)
aam
test
leave
add
das
dec
enter
jge
je
and
or
sub
pop
dec
call
retf
pop
jmp
aas
xchg
cmp
(bad)
and
adc
leave
push
or
inc
mov
sbb
out
or
fwait
pop
pop
and
jo
test
arpl
retf
sub
mov
rol
add
pop
xor
jmp
pop
add
lahf
pop
cmps
sahf
movsx
add
imul
push
xchg
xor
jecxz
call
jne
leave
dec
jmp
ds
adc
add
push
jb
leave
cdq
nop
or
add
loope
retf
in
xchg
in
xlat
add
stos
pop
arpl
inc
stc
fsubr
push
sub
inc
pop
cmp
int
sub
out
mov
add
push
inc
out
sub
iret
xor
rcr
or
inc
je
mov
xor
movs
push
jmp
dec
(bad)
adc
nop
xor
mov
push
je
push
pop
adc
jmp
cmps
je
in
cs
xor
aas
test
in
pop
shl
icebp
cmc
jae
adc
sbb
les
cwde
add
nop
xchg
pusha
inc
push
outs
inc
movs
add
mov
ss
xchg
add
es
adc
inc
pop
arpl
xor
inc
ss
adc
inc
push
scas
and
add
jns
dec
pop
adc
inc
in
fwait
leave
ret
add
cmc
pop
clc
jne
or
or
sar
les
je
pop
sqrtps
inc
lds
enter
add
mov
fwait
sub
xor
cmp
in
int
bound
ret
sbb
es
xacquire
sub
dec
sbb
sbb
imul
jns
inc
sbb
adc
enter
dec
push
sbb
test
cmp
add
mov
stc
icebp
test
adc
stos
or
mov
or
jmp
fadd
pop
xchg
jne
mov
xor
je
shl
(bad)
(bad)
sbb
(bad)
cld
sbb
jo
repnz
les
fdivr
in
cmp
pop
repnz
sbb
fistp
or
enter
mov
inc
retf
and
jbe
mov
mov
adc
or
xchg
jmp
inc
or
and
push
in
call
xchg
lock
cmps
push
xor
loope
mov
add
add
mov
(bad)
imul
cwde
or
sbb
call
or
sbb
add
and
call
adc
fs
xor
jmp
sub
add
sbb
or
xchg
adc
js
adc
and
jmp
pop
mov
push
pop
pop
das
add
inc
push
adc
xchg
add
aaa
imul
adc
or
inc
pop
fcmovnbe
outs
cmp
add
pop
xor
movsx
mov
mov
cdq
js
and
add
mov
and
xor
xor
enter
sub
sbb
push
jnp
mov
xor
mov
jne
push
and
call
cmp
adc
leave
jg
jl
test
jae
mov
sbb
(bad)
cmp
fdivr
rcl
inc
cld
xor
jb
outs
imul
and
js
outs
and
jne
jbe
mov
es
adc
adc
pop
js
jg
jl
pop
in
mov
push
push
jae
mov
ffree
xchg
xchg
enter
xor
mov
sbb
lds
stos
ret
jnp
and
gs
ds
out
mov
mov
xchg
mov
outs
and
or
xchg
xchg
mov
and
sub
mov
es
push
cmc
inc
push
jb
sub
in
je
cmp
or
push
or
mov
or
sub
pusha
and
pop
push
fldl2t
jno
sub
add
jb
ins
add
shl
add
call
(bad)
push
add
inc
and
pop
adc
xchg
into
and
mov
sub
adc
jmp
and
ret
add
add
jne
sub
mov
sub
sbb
xchg
push
jmp
or
in
and
out
sbb
or
adc
loope
cs
xor
sub
sub
scas
adc
adc
or
and
push
dec
adc
xor
mov
lock
call
mov
stos
es
lock
(bad)
bound
leave
repz
(bad)
xchg
inc
and
add
xor
repz
lds
das
and
cmp
or
pushf
xor
add
popa
inc
jge
xchg
pop
mov
and
push
adc
adc
loopne
repnz
add
or
sub
jo
xchg
mov
loop
push
or
aam
mov
or
push
push
adc
or
mov
les
pop
fucomip
xor
xlat
push
inc
ins
inc
cmp
dec
inc
add
lea
pop
cmc
push
fwait
adc
add
or
shl
and
sub
inc
ins
add
jb
jno
xor
rcr
push
daa
xor
and
loope
lock
cmp
mov
mov
jo
cmp
and
and
ss
adc
fisub
and
add
adc
dec
jo
ins
into
xchg
jnp
add
pop
daa
xchg
push
(bad)
and
in
daa
sbb
fld
or
(bad)
push
sbb
cmp
jae
add
sbb
xor
enter
mov
js
push
xor
inc
adc
or
jmp
and
xor
jbe
shl
sub
xlat
push
mov
sub
jg
or
add
lods
jmp
lahf
xor
scas
pop
pop
lahf
sub
sti
arpl
pop
leave
xor
inc
pop
and
mov
adc
lea
rol
lock
cmp
leave
adc
adc
cmps
jo
jl
add
and
add
pop
push
adc
xchg
sbb
and
leave
push
and
and
enter
xchg
iret
sbb
shl
adc
dec
ss
push
leave
push
or
and
mov
popf
(bad)
outs
sbb
mov
cmp
and
dec
sbb
inc
push
inc
and
dec
fmul
sbb
push
loopne
pop
mov
cmp
add
int3
mov
imul
ins
call
xchg
pop
cmp
push
push
lds
add
pop
mov
das
cmp
dec
adc
or
or
ins
mov
push
jb
xchg
int
jae
sbb
in
add
daa
mov
(bad)
shl
pop
ja
fadd
or
or
lock
mov
dec
push
and
or
mov
xor
sbb
push
je
jp
dec
jmp
addr16
popf
pop
ror
pop
inc
rol
adc
xchg
cmp
clc
push
(bad)
in
sar
pop
adc
rcr
push
pop
mov
aam
mov
leave
push
push
test
or
call
adc
repnz
push
xchg
aaa
push
lods
mov
add
dec
mov
dec
and
nop
inc
rol
and
xchg
jge
pop
or
and
cmp
cmp
ret
inc
adc
cs
dec
adc
cmp
add
adc
and
mov
and
lahf
mov
pushf
popa
jmp
nop
daa
jl
xchg
jmp
pusha
xor
stos
xchg
(bad)
clc
cmp
push
push
loop
jb
js
adc
jecxz
daa
sub
mov
xchg
add
xor
jo
cmp
adc
jo
inc
cmp
mov
ins
push
scas
push
dec
add
gs
fs
cmp
sub
xchg
and
enter
jbe
movs
add
sbb
add
jbe
pop
std
call
dec
loopne
sbb
cmp
jle
test
add
jmp
outs
jmp
push
push
call
fwait
mov
sbb
mov
xchg
xchg
xor
xor
xor
sbb
adc
push
or
cmp
push
mov
xor
sbb
fwait
rcr
adc
adc
or
and
sbb
xor
mov
or
shr
cmp
test
xchg
xchg
push
dec
fiadd
mov
xor
fwait
cmp
add
cmc
test
add
in
dec
cmp
test
rcl
or
pop
sbb
sub
push
sbb
or
adc
(bad)
repz
and
push
adc
or
adc
sub
or
mov
int
push
add
aad
or
(bad)
push
mov
in
movs
add
push
and
shr
mov
les
push
test
ja
adc
stos
ret
pop
push
or
inc
sbb
test
in
push
add
or
lds
mov
xlat
xchg
xchg
xor
inc
xchg
lods
mov
jo
and
or
fadd
je
fnstsw
adc
aas
outs
sbb
cmp
xchg
in
sub
and
dec
and
sbb
push
and
or
lea
lds
and
and
scas
adc
mov
idiv
push
and
mov
shl
push
add
mov
and
and
add
ret
dec
and
sbb
cmp
jb
push
dec
jg
imul
sbb
repnz
rcl
cld
sbb
xchg
stc
add
or
fnstsw
sub
lahf
repz
cld
mov
sub
add
add
dec
pushf
push
push
cmp
or
xchg
inc
jnp
sbb
sbb
mov
fwait
jnp
mov
fwait
inc
es
dec
or
test
mov
inc
lock
mov
cmp
(bad)
xchg
outs
or
stos
push
sbb
addr16
leave
inc
xor
jb
xchg
dec
and
fisttp
mov
and
cmp
cs
mov
cmc
or
imul
push
mov
jnp
push
mov
push
ins
and
cmp
mov
loope
jl
mov
mov
shl
movs
pop
push
into
fwait
dec
pop
sahf
xchg
dec
dec
dec
xchg
inc
lods
sbb
mov
cmp
cmp
mov
adc
aaa
push
or
or
cmp
movs
call
pop
add
xor
push
enter
sub
xor
ins
aam
push
cmp
xchg
sbb
push
(bad)
xchg
push
xor
ins
mov
pop
sti
add
pop
lds
sub
sahf
ret
push
call
(bad)
push
mov
jmp
inc
xchg
jae
ins
in
jmp
lods
or
jno
lds
jo
mov
cmp
dec
add
mov
or
push
es
mov
ss
daa
sub
dec
cmp
dec
jno
stos
ss
int
push
jecxz
sbb
push
push
mov
cs
ins
dec
loopne
out
inc
and
cmps
fnstcw
int
hlt
dec
push
test
push
pop
push
fldcw
pop
mov
pop
jge
test
mov
pop
cdq
pusha
mov
ins
sub
sub
xor
outs
xor
push
aaa
dec
cmp
cmp
add
fldcw
cwde
aas
sub
int3
inc
rol
std
cmps
inc
mov
xor
add
or
lahf
test
movups
adc
adc
sbb
sbb
sar
lahf
sbb
and
and
xor
es
sub
cmp
sub
cwde
xor
push
femms
fwait
(bad)
xchg
addr16
xor
pop
xor
imul
sbb
and
cmp
push
ss
sub
pop
jno
je
(bad)
sub
xchg
push
jae
pop
jae
retf
mov
ins
push
ja
jbe
js
fstp
imul
push
mov
in
pop
jp
xor
mov
add
mov
retf
mov
pop
mov
adc
or
aaa
movs
lock
sub
(bad)
int
mov
push
mov
add
jnp
loopne
mov
std
inc
loopne
dec
aam
fild
fmul
test
jne
push
or
mov
cmps
dec
test
lock
xor
int
dec
sbb
add
jnp
mov
cmps
or
adc
cmp
push
cmp
in
cwde
inc
sub
inc
adc
je
or
jo
sbb
cld
test
lea
add
idiv
adc
mov
inc
add
cmc
add
ror
push
scas
lock
mov
sub
cmp
ja
pusha
add
xchg
(bad)
cmp
dec
fcom
inc
jne
test
mov
add
push
adc
lock
daa
sbb
jnp
and
or
push
xchg
or
cmp
xchg
sbb
lea
cmp
or
aaa
jb
jmp
jmp
xchg
lock
fiadd
jne
and
fsubrp
adc
xor
fadd
in
in
sub
or
inc
pop
test
leave
and
(bad)
nop
clc
or
add
in
and
and
fs
scas
xor
in
mov
jl
mov
inc
inc
mov
stos
adc
movs
call
and
out
or
mov
pusha
mov
ss
pusha
in
pusha
or
pop
ins
pop
add
inc
sti
add
or
push
fadd
sub
inc
icebp
mov
and
push
mov
ret
xchg
popf
sbb
scas
add
ins
pop
outs
adc
sbb
mov
aas
mov
xor
add
mov
pop
jo
or
cdq
movs
or
add
push
add
add
dec
inc
pop
add
push
add
fwait
adc
call
sar
paddsb
add
xor
jo
es
xchg
mov
cmps
fld
pop
and
cmp
pop
repnz
stos
(bad)
out
add
xor
pop
push
inc
(bad)
fnstsw
in
scas
push
cwde
inc
sar
and
(bad)
mov
js
push
xor
iret
in
inc
jo
ret
ja
pushf
jge
pop
sbb
add
and
push
inc
add
xor
mov
sbb
mov
cwde
rol
shl
mov
or
pop
add
add
mov
jmp
outs
adc
adc
(bad)
dec
inc
mov
sahf
ror
inc
jae
into
add
cmp
lock
jmp
std
sub
jb
int
add
or
(bad)
cld
mov
jp
inc
jne
leave
mov
inc
mov
stos
jle
mov
and
jl
ror
add
mov
lock
out
adc
outs
out
xor
xchg
dec
mov
mov
mov
or
ins
sar
push
mov
(bad)
test
cmp
fs
push
and
mov
add
mov
lea
sbb
in
add
mov
imul
push
fnstcw
lea
add
test
lea
push
jno
jge
sub
xchg
xor
add
setne
adc
inc
pop
cmp
sbb
in
cmp
sbb
cmp
or
mov
pop
fcom
push
movs
mov
sbb
xor
add
inc
fldcw
xor
push
xchg
push
mov
push
cmp
pop
push
in
pop
(bad)
xor
xor
je
jns
cmp
push
ret
mov
adc
mov
and
sub
mov
test
xchg
add
cwde
push
adc
shr
sar
in
test
mov
jmp
lea
cmp
fild
mov
in
cmp
and
out
dec
push
add
stos
test
movs
add
sub
push
lea
in
aad
push
pop
jle
jge
mov
pop
popf
iret
test
popf
cmp
mov
js
push
push
push
mov
loop
or
adc
xchg
jmp
mov
jmp
dec
add
and
daa
(bad)
sbb
scas
pop
call
imul
call
hlt
je
sub
push
jne
lea
ss
add
xor
xchg
mov
sbb
xor
sbb
scas
mov
retf
daa
loope
push
push
cmp
or
inc
xchg
add
stos
cs
or
mov
xor
push
inc
sbb
adc
adc
jbe
add
add
push
popa
mov
cmp
xor
mov
dec
std
and
sub
loopne
xor
je
jmp
pusha
ret
fwait
out
and
iret
dec
jmp
jecxz
enter
or
es
rcl
or
rcl
repz
add
dec
add
mov
push
dec
inc
or
jmp
cmp
into
xchg
and
mov
xchg
xchg
and
jecxz
cmp
mov
and
cmp
jl
mov
xchg
add
push
shl
push
aas
push
and
add
sbb
cs
xchg
pop
cmp
ret
adc
loope
aaa
or
xor
jl
adc
clc
rcl
inc
cmp
jne
pop
cmp
jecxz
fs
jns
mov
cdq
fild
aad
test
mov
and
add
scas
enter
and
mov
adc
and
sub
adc
lea
scas
lock
pop
xor
aas
fadd
pop
pop
stos
mov
cmp
ss
or
into
or
test
outs
mov
inc
add
inc
adc
xor
dec
and
enter
mov
lock
int
mov
inc
xor
adc
xor
aad
mov
rol
sub
xor
mov
shl
leave
jno
mov
inc
jmp
push
mov
mul
mov
adc
enter
into
or
inc
cmp
sub
and
or
enter
inc
cmp
out
add
pop
ja
ss
jmp
and
(bad)
pop
jmp
or
pop
outs
pop
sbb
div
loope
jo
xor
clc
jae
aad
ss
clc
call
adc
ror
xor
mov
dec
mov
not
sbb
xor
xchg
cmp
add
sbb
push
stc
cmp
pop
add
pop
add
ror
shr
sbb
out
adc
cmc
ins
out
aam
or
inc
mov
fwait
inc
mov
add
clc
jg
push
cmp
shl
xor
mov
or
dec
lock
and
mov
xor
into
aaa
stc
mov
cmp
jne
sbb
inc
cmp
jne
(bad)
push
add
or
push
mul
nop
push
adc
xchg
jns
mov
sub
lahf
arpl
dec
ss
test
xchg
dec
add
or
imul
sbb
call
jne
xchg
pusha
into
pop
fst
shl
inc
fwait
dec
ret
or
mov
ret
dec
jne
xor
std
test
push
xor
nop
shl
movs
xor
data16
out
add
push
mov
movs
mov
iret
mov
jbe
adc
and
mov
mov
loop
xchg
rol
sbb
scas
jmp
or
aaa
cmp
clc
imul
repz
and
jns
shl
mov
mov
je
push
adc
sbb
mov
lea
in
xlat
adc
mov
ret
test
dec
enter
mov
xchg
cmp
or
add
lock
push
push
mov
mov
pop
test
push
add
or
sub
mov
aaa
sub
in
lods
ror
enter
dec
mov
jge
lea
mov
jbe
jle
shl
cmp
je
loop
jge
ror
arpl
jl
mov
retf
or
test
jns
xchg
je
lahf
mov
xchg
pop
test
je
jp
js
rol
mov
mov
cmp
shl
jl
sub
sbb
call
jae
lahf
lahf
dec
enter
js
sbb
js
xor
cmp
mov
ret
cmp
add
std
or
lea
popa
je
cmp
sti
not
jmp
neg
jmp
sub
cmp
fadd
ss
mov
scas
xor
add
test
loopne
les
cmp
jbe
push
das
dec
mov
xor
push
ds
test
fisttp
sbb
jne
push
test
xchg
inc
imul
cmp
or
pop
cmp
xor
add
sub
and
inc
pusha
mov
hlt
push
sbb
hlt
and
or
mov
or
jb
sbb
sbb
jo
push
xchg
dec
pop
mov
jl
cmp
jbe
fbld
aas
pushf
adc
mov
movs
xchg
pop
scas
in
jns
mov
(bad)
add
imul
stos
add
in
daa
out
in
out
in
xchg
sub
push
and
scas
nop
data16
lahf
loop
data16
or
sub
cs
ret
jo
pop
ret
mov
cmp
inc
add
jno
hlt
add
add
arpl
shl
push
inc
inc
push
fst
not
test
xchg
sub
push
(bad)
pop
xor
jmp
js
outs
leave
dec
pop
jae
jecxz
pop
fwait
push
mov
test
je
sub
adc
add
lea
or
cdq
ds
test
aam
inc
lahf
js
sub
add
(bad)
pop
sbb
pop
fidivr
repnz
and
jne
lock
shr
push
rol
push
or
stos
sbb
rol
ror
es
scas
mov
sbb
push
pop
or
cmp
adc
xchg
and
sub
dec
pop
add
mov
mov
jne
jp
stos
inc
clc
push
iret
or
push
push
shr
inc
jmp
fwait
mov
mov
dec
test
cmp
or
(bad)
popf
dec
jne
and
in
add
push
mov
ret
sbb
dec
sbb
ret
pop
pop
adc
and
mov
cmp
pop
sbb
js
or
sbb
movs
or
cmp
xchg
cmp
and
dec
fcom
lea
repz
cmp
es
jns
and
pop
adc
or
repnz
stos
aas
sub
cld
(bad)
(bad)
out
inc
sbb
fwait
stos
jl
mov
ret
inc
pop
and
cmp
and
sbb
pop
sti
jle
or
add
neg
pop
ret
test
mov
push
mov
inc
dec
jge
lock
movq
mov
shl
and
mov
jmp
cmp
movs
push
fwait
adc
push
jno
jg
leave
push
adc
test
push
popf
sbb
test
pusha
bound
daa
mov
je
adc
jno
hlt
push
cmp
dec
and
sub
test
(bad)
hlt
mov
and
add
sub
add
pop
adc
push
ret
les
xchg
push
icebp
and
cmp
and
dec
add
push
mov
xchg
cmp
je
cmp
scas
pushf
retf
cmp
stos
sbb
cmp
je
jbe
pop
cmps
adc
arpl
xor
dec
popf
cmp
dec
dec
fwait
mov
or
add
cmp
add
xchg
add
rcr
add
std
mov
adc
push
sbb
arpl
add
lods
popa
xchg
xchg
jne
ror
std
dec
pusha
xchg
retf
adc
mov
sar
cmp
adc
adc
ja
cmps
add
cmp
or
or
cmp
push
push
dec
jae
dec
jl
jl
sub
pop
rol
pop
(bad)
sub
inc
sub
xchg
sbb
jnp
jle
(bad)
jnp
and
sar
loopne
fdiv
mov
test
lods
jbe
int
cld
inc
push
jns
add
enter
out
enter
jg
test
pop
mov
jno
test
sub
jne
inc
enter
in
or
or
fcomp
push
enter
sbb
cmps
sub
push
and
aam
or
mov
cs
aas
and
mov
enter
xchg
shr
dec
cmps
mov
dec
push
add
scas
test
lods
inc
ret
push
jb
test
shl
inc
xor
or
rcl
cmps
and
xor
cwde
shr
inc
xor
pop
xchg
nop
jae
or
out
idiv
jne
not
fld
jl
enter
js
in
sbb
add
int
pop
cwde
jge
xor
mov
push
pop
mov
and
lock
push
std
or
inc
ret
pop
push
movs
je
sbb
pop
and
clc
add
or
add
sub
xor
ror
test
push
enter
ja
fadd
test
xor
jo
es
test
in
sbb
mov
or
mov
mov
push
dec
cmps
(bad)
adc
push
out
mov
into
lahf
pop
repnz
mov
jl
sbb
xchg
inc
and
jb
hlt
and
imul
mov
sub
sub
stos
aam
inc
or
sub
fprem
push
addr16
adc
rol
outs
push
xor
mov
call
out
(bad)
or
mov
pop
test
aam
mov
inc
add
mov
adc
and
sub
sbb
xchg
cwde
test
and
mov
sub
jnp
fs
in
mov
add
pop
fcmovne
xor
pop
test
inc
mov
push
jnp
nop
pop
and
add
push
add
add
adc
or
and
add
xchg
and
adc
(bad)
std
add
jmp
mov
inc
cwde
push
sub
mov
inc
ja
ins
adc
push
ds
pop
mov
or
jmp
mov
cmp
or
jl
inc
loopne
movs
mov
cmp
jg
inc
xor
or
and
xor
mov
add
pop
dec
js
or
or
dec
ja
cmp
jb
mov
add
rcl
inc
aam
fdivr
inc
or
xor
add
inc
or
push
and
dec
sar
dec
aam
pop
or
add
retf
clc
sbb
xor
enter
or
push
lea
add
pop
or
mov
inc
popa
push
ret
cmp
inc
leave
dec
rol
je
rol
push
ds
jge
arpl
sub
dec
or
mov
jg
inc
enter
dec
pop
movaps
rol
and
xchg
jno
dec
add
jbe
sub
mov
mov
cmp
jbe
pop
add
out
cmp
push
add
div
push
mov
jmp
ret
dec
pop
jg
cmp
jns
pop
movzx
sbb
aas
dec
cmp
jbe
inc
outs
pusha
fbstp
vmovups
ror
jbe
push
cmps
sbb
xchg
sbb
mov
jns
xor
pushw
call
cld
cmp
adc
jl
sub
mov
je
fwait
out
add
xor
add
cmp
jo
out
cmps
add
add
(bad)
jmp
jne
mov
dec
push
inc
xchg
xor
mov
cld
popa
cs
push
pop
mov
push
in
add
adc
adc
add
pop
mov
add
xchg
xchg
mov
jo
jnp
jne
test
xchg
mov
add
inc
and
xor
push
xchg
cmp
dec
or
test
shl
inc
add
ret
push
ins
inc
dec
jmp
xor
add
adc
mov
(bad)
jge
jo
xor
(bad)
repnz
enter
leave
sbb
and
sbb
inc
add
pop
dec
or
loope
pop
inc
xchg
in
jne
inc
and
retf
mov
add
add
mov
push
dec
pop
pop
dec
cmp
and
add
jp
pop
push
push
dec
cs
inc
sar
pop
jno
add
(bad)
add
jb
test
lds
or
xor
pop
popf
out
in
lods
add
mov
xchg
or
xchg
xchg
push
inc
inc
(bad)
jp
xor
movs
sbb
push
loop
mov
arpl
imul
add
xor
mov
leave
xor
pop
or
inc
mov
jmp
dec
dec
in
or
sub
mov
or
jae
mov
dec
adc
inc
mov
add
cmps
loopne
jae
pop
ror
loopne
pop
jmp
ins
mov
dec
push
and
sbb
adc
repnz
lock
sub
rol
mov
cmp
sub
and
cmp
data16
xor
xchg
xchg
fnstcw
add
add
xor
aaa
adc
cmp
sub
test
lods
movs
and
and
in
clc
push
out
out
and
sub
nop
mov
dec
fbld
ins
dec
rol
(bad)
xor
ror
xchg
gs
dec
cmp
call
and
mov
les
shl
pop
enter
push
(bad)
int3
in
loopne
dec
jns
jne
mov
shl
push
in
sbb
inc
movs
fdivr
jno
ins
iret
outs
les
add
adc
adc
sbb
outs
inc
in
jmp
mov
adc
xor
xor
pop
leave
push
call
add
loop
adc
sti
or
out
or
jmp
sub
jmp
mov
loopne
and
arpl
sbb
ins
loopne
aad
xor
outs
add
add
xor
add
pop
outs
clc
inc
or
loope
lock
mov
scas
adc
les
jecxz
clc
push
imul
je
mov
fwait
sub
cmp
daa
adc
add
adc
aad
pop
(bad)
sti
(bad)
ds
mov
retf
es
add
cmp
push
push
cmp
call
iret
and
fdivr
dec
scas
adc
data16
mov
or
in
jl
inc
fiadd
xor
out
inc
xlat
xchg
mov
stos
aam
or
add
and
mov
sti
mov
sub
ja
dec
hlt
push
ret
sub
sbb
mov
and
xor
mov
rol
cmps
push
inc
repz
and
jbe
adc
cld
(bad)
in
je
push
imul
jmp
sub
add
mov
inc
bnd
push
add
fcom
test
adc
js
call
shl
adc
es
jo
cmp
or
and
es
(bad)
jne
popa
add
fidivr
cwde
push
repz
push
add
ja
loop
test
mov
mov
mov
test
out
or
add
add
test
retf
fistp
cmp
or
mov
ror
js
add
and
push
dec
jge
mov
jge
mov
aam
add
fwait
push
lods
cmp
cmp
out
cmc
lods
push
movs
stos
ins
cmp
lock
repnz
lods
mov
or
add
add
add
add
add
or
cmc
or
or
mov
rol
xlat
je
pop
enter
xchg
jae
retf
or
fnsave
loope
fisttp
fnstcw
int
jmp
jmp
mov
fwait
out
xchg
retf
mov
xor
lods
sub
cmp
jne
mov
xor
and
jne
mov
lea
std
imul
add
jne
movsx
int3
add
out
clc
call
jo
cmp
jbe
mov
sub
jmp
shr
(bad)
pop
popa
in
aas
stos
(bad)
jg
or
mov
add
xchg
imul
push
push
mov
mov
mov
add
(bad)
jg
pop
inc
push
xor
cmp
jae
sub
ds
clc
add
jae
lea
sub
lods
push
fadd
inc
or
pop
cld
jmp
sub
test
mov
js
les
int3
rcl
fcomp
lea
push
mov
push
popa
xor
scas
add
cmp
aam
pop
sbb
lea
push
push
or
cmp
jge
retf
mov
add
clc
ins
jb
mov
inc
pop
ins
pusha
inc
and
xor
or
push
pop
mov
adc
push
call
mov
xchg
push
jo
mov
arpl
cmp
jb
and
cmp
hlt
lods
shr
dec
jb
pop
pop
sbb
(bad)
test
pop
ja
retf
cmp
shl
mov
cs
mov
lds
push
push
push
add
pusha
cmp
sub
jge
in
test
push
jl
xor
(bad)
cs
(bad)
mov
test
(bad)
push
push
(bad)
(bad)
sti
(bad)
add
mov
std
rcl
mov
xor
sti
mov
add
or
sub
jge
push
gs
add
fdiv
scas
sbb
(bad)
dec
js
int
xchg
dec
leave
(bad)
or
xchg
fsub
das
sbb
mov
lea
jle
ja
sub
mov
push
cmovo
call
sbb
xor
xchg
xchg
jbe
mov
or
push
cs
fist
cmc
inc
cmp
fsubr
jg
mov
dec
mov
fisubr
daa
or
mov
and
sub
push
aas
les
sub
dec
xor
dec
fdivr
mov
xchg
add
add
mov
add
adc
push
push
(bad)
imul
sbb
add
test
mov
shl
lods
jge
adc
inc
lea
jae
shr
mov
xchg
add
mov
adc
inc
pop
mov
(bad)
xor
push
out
sahf
loopne
fisub
je
fbstp
add
cmp
je
aam
fdiv
retf
lock
push
push
add
int3
cdq
mov
cmp
add
icebp
rcl
mov
leave
xchg
mov
fcom
jae
fcom
js
int
lods
add
push
and
js
ret
cs
les
in
jle
lock
push
imul
mov
mov
and
fadd
inc
or
sub
add
cmp
dec
js
or
add
icebp
clc
add
(bad)
sub
jnp
jbe
push
add
lea
cld
jns
push
push
cmp
adc
mov
sbb
std
das
push
add
sub
add
add
push
daa
call
cmp
add
loope
mov
jb
lea
clc
mov
sahf
int3
int
jecxz
shl
mov
movs
les
and
stos
scas
scas
cmp
mov
push
adc
inc
rcr
mov
(bad)
lock
cmp
fmul
icebp
push
sub
push
int3
pushf
mov
repz
add
jnp
xchg
push
push
mov
mov
hlt
clc
in
repnz
or
sti
jp
iret
sub
ins
jle
jo
popa
mov
mov
ins
mov
sbb
add
push
xor
test
hlt
sub
push
push
push
push
push
push
xor
lods
sub
cld
loop
sbb
add
ss
test
fisubr
in
jmp
outs
pop
adc
retf
sub
cwde
in
jmp
(bad)
out
xchg
jo
pop
or
inc
cmp
jb
lea
xchg
mov
lea
lea
inc
data16
or
cli
or
adc
ds
cmp
jmp
push
or
push
mov
(bad)
jae
xchg
sub
pop
test
ins
shr
cmp
push
inc
je
loop
push
sub
sub
push
and
popa
lock
(bad)
push
dec
lea
pop
cmp
push
pop
xchg
mov
les
push
mov
inc
sbb
and
dec
shl
adc
cwde
push
mov
sbb
hlt
mov
test
push
pcmpeqb
lea
mov
jmp
pop
xor
movs
mov
je
imul
push
scas
mov
pop
mov
sub
push
popa
stc
js
adc
xor
setne
mov
dec
jo
cs
cmp
mov
mov
inc
rol
xchg
sbb
sub
or
mov
pop
imul
adc
jl
and
push
mov
test
add
push
retf
inc
and
mov
cmps
jle
sbb
dec
push
aaa
sub
mov
shl
jno
ror
ror
adc
mov
mov
cmp
jb
mov
cmp
popa
test
push
sar
mov
push
sbb
mov
fadd
mov
dec
sahf
call
outs
test
aas
jmp
sub
shl
push
popf
jg
push
pusha
stos
xor
push
pop
or
push
lea
js
xchg
adc
dec
jne
neg
sbb
inc
pop
bound
stos
sub
or
or
call
cmp
lea
xor
pop
nop
ds
ja
cld
or
xor
stc
and
add
sub
mov
ds
lods
push
add
lods
shr
lods
clc
dec
or
adc
add
add
pop
add
add
les
or
sub
lock
add
jle
or
jmp
ins
pusha
push
adc
and
push
xor
pop
sub
cmp
inc
or
stos
les
lahf
aas
pop
aas
jp
sub
icebp
add
xchg
cmp
jbe
jl
pop
repnz
and
call
add
jns
adc
sbb
jecxz
jns
adc
or
call
call
enter
rcl
rcl
add
das
dec
enter
push
ss
es
or
push
push
iret
or
inc
imul
ret
sar
dec
push
push
lea
js
mov
jmp
adc
mov
outs
call
data16
xor
and
or
add
and
aam
and
dec
pusha
adc
lahf
jle
ds
jne
les
rcl
fdivrp
cmp
das
adc
push
cs
movs
xor
sub
mov
test
in
jle
push
enter
add
fmul
rcr
sti
or
cwde
sbb
sbb
jo
and
push
ins
sbb
push
jmp
das
add
mov
push
push
mov
pop
lahf
popa
dec
dec
popf
sub
loop
aaa
inc
inc
and
inc
sbb
loopne
jmp
adc
xchg
mov
cli
mov
sbb
xor
push
and
std
enter
enter
cmp
sbb
and
or
inc
inc
jb
xchg
ret
sbb
(bad)
mov
adc
jmp
inc
ds
(bad)
pop
shl
addr16
push
and
dec
or
and
shr
jp
cdq
lock
cwde
imul
aas
jnp
arpl
add
mov
gs
rcr
fstp
push
add
mov
jae
pop
aas
add
pop
ins
dec
mov
xchg
pop
lea
pop
jae
das
jo
pop
adc
pop
out
jae
int
jns
mov
cld
popa
pminsw
or
or
test
push
cmp
pop
inc
lea
lea
mov
jne
and
cmps
add
push
pop
jne
mov
mov
inc
push
dec
bound
and
je
push
in
ins
xchg
mov
or
mov
push
pop
fmul
or
cmp
cmp
jle
sbb
es
jl
cs
fwait
mov
inc
jge
pop
mov
movs
rol
jbe
pop
jb
push
push
mov
int
lds
adc
push
bound
jmp
jge
retf
cmp
jg
lea
test
push
push
add
aaa
clc
jbe
cwde
or
stos
or
ror
lea
ror
push
cli
(bad)
jmp
aaa
mov
sbb
pop
or
int
aam
cmp
idiv
pop
sar
jmp
int3
adc
int
jne
enter
and
les
in
rcl
imul
xchg
push
lods
call
out
inc
cmp
jb
and
mov
cmp
shl
sbb
sbb
movs
cld
lea
mov
test
cli
nop
mov
or
cmp
xor
sub
dec
or
mov
push
lods
mov
add
add
add
sahf
push
or
xchg
add
sbb
pushfw
daa
sbb
xor
mov
ja
pop
(bad)
je
mov
aaa
jne
enter
mov
pop
mov
adc
xchg
lea
shl
stc
pop
ja
mov
ss
cwde
or
dec
xor
jmp
call
popf
jnp
xchg
adc
add
mov
inc
add
test
js
ror
mov
je
pop
int3
adc
or
and
adc
add
push
aaa
ins
sub
loop
add
shl
jae
add
or
pop
cmp
add
rcr
sbb
jo
add
or
jle
sub
pop
or
pop
test
dec
jne
mov
out
fld
jae
call
je
(bad)
xor
push
repnz
mov
xor
pop
add
add
sbb
sbb
adc
lds
add
nop
call
jbe
mov
pop
sub
xchg
mov
test
out
xor
mov
sar
add
cmps
mov
int3
add
push
add
fsubr
rcl
add
ins
xor
sbb
push
fsubr
je
cmp
sbb
push
fs
mov
(bad)
in
xchg
lods
cmp
cmp
out
jne
push
cmp
clc
adc
mov
push
lea
mov
sar
push
push
pop
dec
mov
int
int3
add
or
mov
xchg
pop
push
in
pop
ret
add
jmp
scas
fiadd
push
push
imul
mov
adc
ds
sti
cmp
daa
pop
ret
mov
fisubr
or
into
stc
pop
sbb
(bad)
mov
push
xor
fdivr
mov
stc
mov
mov
or
stos
cmc
add
(bad)
lock
pop
mov
mov
hlt
clc
cli
std
dec
jnp
mov
cmp
adc
pop
jmp
and
pop
push
add
stc
push
lea
mov
dec
mov
dec
cld
pop
nop
cmp
jge
add
ins
fwait
push
mov
jnp
pop
push
push
fwait
je
cmc
or
loopne
fistp
or
push
add
xor
inc
ret
adc
rcr
lods
dec
mov
push
pop
test
mov
jle
jle
js
cmp
fnstsw
lds
ror
push
mov
add
inc
add
push
daa
inc
sub
jecxz
iret
pop
(bad)
adc
fwait
and
xor
adc
push
cmc
xchg
and
rcl
jecxz
mov
rol
pop
push
inc
sar
mov
icebp
fidiv
mov
sub
scas
adc
and
pop
out
into
mov
scas
aam
dec
pusha
jl
(bad)
cld
add
xor
pop
add
push
ins
sub
pop
ret
shl
arpl
cmp
ja
sub
mov
mov
mov
mov
push
pusha
add
ss
sub
mov
push
js
xchg
or
mov
sub
mov
pop
inc
push
push
jle
sbb
inc
add
leave
shl
jmp
fild
(bad)
add
push
loope
out
in
popa
mov
jge
dec
sar
je
dec
repnz
(bad)
cmc
mov
sbb
or
mov
or
(bad)
mov
mov
push
(bad)
leave
push
popa
(bad)
in
mov
icebp
or
mov
dec
and
push
add
push
or
fild
sbb
push
test
jg
bound
ja
push
add
add
sub
and
inc
retf
xlat
mov
push
or
pusha
adc
mov
mov
sub
jne
mov
or
imul
or
jmp
nop
shl
sbb
sbb
aas
add
cmp
jge
mov
sti
out
rcl
cmp
ja
arpl
lock
jmp
mov
mov
push
jmp
mov
sbb
ds
push
jne
xor
sbb
or
jbe
mov
lods
mov
cmps
inc
test
mov
push
scas
push
cmp
call
jno
mov
int3
pop
xchg
pop
adc
inc
jp
xchg
daa
pusha
pop
or
mov
adc
push
inc
sub
pop
push
mov
or
or
and
iret
rol
mov
xor
fs
jmp
loop
jmp
push
jnp
stos
and
in
movs
xchg
or
nop
sti
out
repnz
add
repz
ss
outs
mov
jnp
add
inc
mov
push
ins
test
pop
cmp
jne
add
mov
cmp
jne
sbb
sub
push
cmps
xor
or
movs
push
mov
(bad)
aaa
add
pop
jg
mov
and
inc
lds
inc
stc
mov
sar
mov
mov
cmps
idiv
in
rol
jbe
push
jmp
je
mov
push
aam
nop
loopne
jp
cmc
jmp
popf
cdq
je
ins
xchg
push
push
lds
sub
mov
xor
sub
mov
jno
test
clc
push
shr
push
(bad)
adc
mov
test
sbb
sub
dec
call
aam
pop
xor
and
or
cmp
call
inc
jne
fisubr
add
dec
adc
or
and
dec
push
test
es
repz
nop
adc
je
add
or
add
dec
and
rol
mov
loopne
xor
shl
mov
lea
cmp
les
mov
jno
xchg
aad
aad
push
(bad)
mov
jg
inc
cdq
inc
and
and
fwait
mov
xchg
dec
inc
call
xor
mov
test
je
lea
fst
shl
mov
push
call
sbb
inc
or
pop
add
loop
mov
jne
or
add
cmp
adc
mov
xchg
mov
xchg
add
add
sub
push
add
les
into
fs
xchg
pop
rcl
rcl
std
lock
mov
aad
in
jo
pop
add
mov
out
inc
push
jp
lds
clc
fist
cmp
jne
bound
push
add
xor
or
scas
push
ror
mov
cmp
jne
into
mov
xor
inc
pop
sar
les
in
dec
js
mov
push
lock
stos
pop
sub
add
cmp
ds
mov
sbb
pop
rcl
inc
add
hlt
dec
or
fs
lahf
mov
sbb
and
jns
rcr
add
pop
push
or
call
in
fs
cwde
sub
or
inc
cdq
add
mov
and
pop
mov
daa
lahf
push
add
push
test
adc
gs
loope
add
test
leave
cmp
jl
pop
jno
inc
sub
repnz
lock
sbb
je
and
or
ins
fincstp
loop
seto
neg
or
mov
lods
ror
setb
or
scas
loopne
ret
test
mov
out
jbe
or
adc
and
mov
mov
dec
pop
jmp
(bad)
in
test
lods
mov
ror
dec
sbb
mov
stos
mov
dec
adc
push
in
inc
push
test
mov
test
sub
je
xor
iret
jecxz
retf
push
xor
mov
(bad)
test
push
jbe
push
push
adc
fild
cs
into
or
fiadd
push
rcl
xor
jge
or
adc
mov
or
inc
mov
shl
inc
adc
dec
pop
dec
adc
mov
arpl
cmp
add
ins
adc
ret
in
into
cwde
adc
int
add
push
jo
and
sub
iret
(bad)
lods
push
rcr
(bad)
and
pop
ret
xchg
mov
(bad)
bound
and
iret
sbb
jmp
add
add
sbb
xchg
sbb
mov
add
aam
pop
adc
mov
sbb
fimul
or
movs
mov
das
inc
add
xor
sti
cmp
mov
mov
xchg
push
cmp
add
dec
push
or
lea
mov
adc
ins
js
cs
or
push
or
jge
or
push
push
inc
xchg
enter
mov
outs
das
push
dec
pop
ror
shl
lods
inc
stc
mov
inc
sub
hlt
sbb
xchg
mov
add
pop
add
adc
jb
loop
dec
add
mov
mov
jnp
adc
cmps
adc
push
or
push
fiadd
jae
outs
or
call
or
cmp
popa
daa
nop
or
inc
scas
loope
sbb
push
adc
jg
ins
mov
pop
dec
mov
pop
mov
and
lock
sbb
or
adc
sti
mov
icebp
adc
fdiv
shl
movs
push
xchg
push
pop
fcmovnbe
call
adc
movs
ror
pop
adc
(bad)
int
jns
jmp
retf
nop
inc
mov
pusha
and
cld
shr
ret
xchg
xchg
jo
int
add
pop
or
das
movs
ror
inc
in
repnz
add
mov
mov
in
loop
push
and
(bad)
jo
sahf
add
pop
data16
jmp
ficom
icebp
adc
call
push
pop
imul
pop
xor
out
add
fistp
jnp
push
adc
dec
mov
add
push
cmp
xor
test
push
push
xlat
stos
xor
(bad)
push
push
push
push
pop
pushf
and
call
sub
sub
lods
call
jmp
pop
(bad)
xor
cmp
push
setge
je
add
mov
push
pop
sub
xor
adc
dec
sbb
push
ss
test
or
hlt
push
ins
dec
mov
pop
cmp
add
add
(bad)
push
add
mov
inc
loop
movs
adc
mov
sub
mov
iret
cli
retf
mov
or
add
mov
mov
bound
jl
inc
mov
fdiv
add
push
test
shr
sbb
sbb
clc
adc
scas
dec
or
or
sub
xor
fnsave
sar
popa
fdiv
(bad)
aas
add
add
cdq
sub
mov
sar
pop
call
jg
ret
scas
cmovl
adc
sbb
retf
neg
mov
and
push
mov
es
mov
mov
hlt
mov
mul
inc
fsubr
loopne
mov
out
add
out
dec
add
add
or
inc
fistp
xlat
sub
shl
inc
repnz
cmp
jl
stc
inc
pop
stc
outs
ror
xchg
fadd
mov
or
ret
sar
cs
cmp
xor
test
in
sbb
das
fdiv
pop
xor
inc
inc
loopne
aaa
addr16
outs
std
cld
mov
sar
cmp
adc
sbb
and
jp
jmp
cld
mov
ror
mov
mov
cmp
inc
clc
and
cmp
jne
add
jne
int3
jle
mov
dec
sbb
ret
and
jmp
retf
pop
(bad)
xor
cwde
pop
dec
js
adc
jecxz
add
sbb
xchg
cmp
je
adc
add
pushf
jmp
mov
mov
(bad)
and
pop
xor
ret
ret
in
adc
push
or
push
std
lock
and
in
into
in
jmp
ror
popf
fcomp
loopne
scas
inc
xor
xchg
mov
loopne
mov
test
shr
jge
pop
add
xor
xchg
lds
rcr
(bad)
movs
cmps
mov
fist
sbb
dec
mov
push
movs
sub
wrmsr
stos
sbb
add
mov
cmp
jmp
cs
sbb
xor
data16
or
push
out
jmp
and
pusha
xchg
ror
loopne
cmps
out
sar
hlt
mov
daa
loopne
mov
adc
pop
sahf
or
popf
xor
adc
loope
xchg
push
push
test
cmp
adc
pop
jnp
cmp
xchg
fild
jbe
into
jne
cld
int3
mov
jecxz
fild
call
mov
jne
mov
mov
mov
push
mov
pushf
cmp
mov
fisttp
mov
dec
das
je
xor
adc
cmp
jg
xchg
inc
adc
sub
or
xor
std
add
loope
fnsetpm(287
sbb
jb
popf
shr
in
in
push
clc
adc
mov
lods
fstp
mov
ret
in
mov
cmc
or
in
mov
push
cmp
add
neg
add
xchg
pop
or
inc
sub
loopne
inc
mov
es
sbb
mov
and
dec
(bad)
xchg
jne
add
iret
xor
pop
in
mov
push
call
cld
lods
adc
mov
test
add
test
push
pop
push
cmp
xchg
jae
dec
sbb
mov
push
pop
stos
(bad)
mov
aam
je
pop
cmp
mov
fbstp
imul
mov
mov
and
pusha
pop
(bad)
iret
dec
jb
xor
sbb
push
aam
add
fwait
jge
inc
mov
fdivr
push
mov
js
cld
cmp
test
ins
(bad)
sub
dec
adc
sti
add
cld
loopne
sub
mov
push
push
loope
leave
push
dec
ins
fbld
and
jecxz
ins
and
imul
xor
sub
mov
int
dec
cmp
pushf
cld
inc
test
lds
rcr
push
cmp
xor
test
cdq
into
or
loopne
sbb
loop
sti
push
xchg
test
pop
or
dec
shl
cwde
(bad)
clc
sub
or
aad
mov
sub
inc
(bad)
and
push
les
mov
jmp
cmp
loope
bound
push
adc
loop
imul
push
movs
daa
jecxz
lahf
aas
ins
xor
mov
jb
mov
stos
sbb
xchg
add
and
or
inc
cmp
lahf
pop
sub
mov
or
or
adc
pop
sub
pop
mov
out
shl
sub
nop
loop
sahf
or
xor
daa
mov
mov
arpl
in
jno
loopne
std
ja
fucomip
imul
jle
sar
or
sub
mul
les
dec
mov
pop
mov
jp
jne
push
ja
hlt
inc
pop
hlt
daa
jecxz
js
jo
add
int
cmps
xor
aas
data16
in
cmps
js
dec
hlt
adc
out
dec
push
movs
or
cwde
xor
movs
push
out
push
dec
sbb
cdq
movs
push
clc
dec
cmp
jl
bound
or
hlt
inc
sbb
push
popf
mov
cmp
or
ror
mov
xchg
retf
cmp
cmp
or
jl
aas
inc
fsubr
fmul
or
into
mov
mov
test
push
dec
sub
imul
adc
addr16
test
loopne
pop
inc
sahf
and
inc
ror
jne
sbb
adc
loope
jbe
shl
ror
dec
add
add
and
cli
ficomp
jne
jnp
mov
rcl
add
clc
sbb
pop
lea
cmp
int
daa
mov
pop
adc
add
test
movs
xchg
add
movaps
imul
add
push
stos
inc
pop
inc
or
aas
sbb
(bad)
in
nop
cmp
in
sbb
mov
mov
jge
push
je
add
mov
mov
add
test
addr16
cs
add
icebp
shr
xor
clc
sub
cmp
mov
pusha
push
jmp
(bad)
dec
shr
imul
add
add
add
adc
sbb
or
sub
in
aas
push
out
xor
cmp
es
aaa
lea
cdq
add
int3
mov
icebp
imul
scas
push
into
add
xor
add
add
cdq
push
jg
imul
test
iret
push
mov
xor
adc
mov
inc
sub
mov
sbb
lods
std
xchg
mov
fisttp
jmp
int
inc
cmp
jb
mov
clc
aam
ror
mov
xchg
js
mov
inc
ja
xor
mov
pop
jbe
jbe
mov
les
mov
jns
and
dec
push
inc
jb
or
and
push
push
stc
or
push
cmps
adc
and
js
call
(bad)
xchg
fsubr
jl
sub
and
movs
cmps
(bad)
add
inc
xor
add
xchg
nop
cmp
mov
mov
push
push
sub
mov
(bad)
jne
pushf
je
or
push
mov
and
cmp
push
sub
enter
push
jge
mov
jne
mov
inc
sti
jle
dec
mov
sub
adc
add
add
add
js
out
dec
or
sahf
adc
frstor
cmp
dec
push
les
leave
mov
xchg
and
lock
cmp
xchg
js
stos
fadd
add
xor
fwait
cmp
cmp
jne
fs
mov
cmp
mov
sbb
jbe
mov
cmp
inc
adc
sbb
fdivr
sbb
loopne
pop
add
jbe
pusha
inc
sub
push
add
sbb
ret
inc
loopne
dec
les
jg
dec
nop
mov
sbb
sbb
mov
add
out
adc
call
add
push
(bad)
and
push
sbb
push
dec
ficomp
mov
jne
push
js
out
hlt
lock
jne
sub
add
pop
shl
pop
pop
sbb
jle
dec
(bad)
test
push
push
inc
add
ret
mov
pushf
dec
sbb
imul
cmps
or
pusha
addr16
(bad)
(bad)
mov
cs
scas
xor
repz
sbb
int3
dec
sub
and
ja
inc
jg
mov
pop
push
pusha
or
pop
cmp
add
sbb
adc
add
int3
pop
add
pop
dec
xor
mov
cmps
imul
sbb
add
dec
and
add
enter
or
adc
cld
fs
push
mov
sbb
ret
ins
add
mov
ja
mov
push
adc
nop
ret
dec
in
jo
adc
inc
adc
arpl
int
stos
in
aas
in
in
fisttp
or
mov
adc
or
ins
pop
add
lods
popa
test
mov
cs
or
in
xor
out
cmp
or
arpl
pop
jno
out
push
add
mov
pop
inc
add
xchg
sar
mov
xchg
aam
call
cs
fdiv
imul
in
pop
inc
shr
mov
push
jmp
(bad)
mov
das
nop
clc
fdivr
add
scas
jbe
mov
inc
add
ss
cli
inc
bound
fild
xchg
add
lods
jl
dec
inc
jge
pop
adc
das
mov
daa
sbb
sti
or
push
sub
pop
xchg
jmp
push
or
loop
fisttp
sahf
push
jl
jb
jp
call
fsubrp
or
pop
push
add
sub
nop
je
pop
adc
add
pop
(bad)
or
mov
test
dec
fidivr
dec
adc
loopne
movzx
clc
pop
sub
cs
adc
movs
mov
imul
or
enter
mov
ficom
or
mov
jno
pop
sar
cmp
icebp
or
adc
bound
push
mov
ins
lea
adc
xchg
add
fiadd
adc
mov
mov
or
adc
push
xor
add
dec
(bad)
or
cmp
push
jb
or
nop
inc
or
dec
call
or
shl
cli
or
int3
push
push
cmp
mov
idiv
lock
inc
shl
mov
inc
mov
sahf
or
stc
outs
(bad)
push
cmps
xchg
fsub
cmp
test
mov
add
retf
pop
mov
inc
inc
outs
jae
push
xchg
inc
(bad)
sbb
lock
mov
pop
cld
imul
ja
xchg
push
cmp
push
push
or
test
inc
fsubrp
dec
cmps
push
gs
fidivr
jge
je
(bad)
pop
or
movs
fsubr
add
pusha
cmp
fnsave
adc
out
cmp
push
xor
push
mov
sbb
sbb
(bad)
sub
sbb
retf
nop
jbe
sbb
int3
or
adc
stos
push
mov
dec
das
xor
mov
(bad)
clc
mov
cmps
ret
ret
dec
push
jmp
sahf
out
cmp
add
jno
push
push
add
fdivr
out
or
dec
add
rol
pop
or
jnp
xor
adc
or
popf
pop
movs
or
mov
add
or
imul
pop
push
cmp
or
neg
add
retf
add
jns
out
or
hlt
(bad)
call
add
and
sub
dec
loopne
pop
and
cs
lods
shr
xor
add
(bad)
xchg
je
sbb
pop
fadd
call
sahf
call
ret
cmp
xchg
arpl
jge
repz
xchg
cmp
je
add
mov
or
je
cmp
push
fimul
jb
sub
sar
nop
xchg
sub
dec
cmp
xchg
add
mov
mov
adc
mov
nop
cmp
test
add
js
xor
cmp
sbb
adc
lahf
xchg
es
out
daa
sahf
sar
cmp
push
es
pop
repz
jnp
dec
dec
gs
pop
or
clc
adc
call
pop
xor
out
jmp
into
jb
cmp
jb
cmp
mov
xlat
std
sub
push
lea
add
push
mov
shr
mov
bound
clc
push
hlt
cmp
and
fistp
xchg
adc
leave
push
sub
ret
add
rol
ds
sub
loop
xchg
adc
or
shl
mov
lods
icebp
add
mov
sar
ss
pop
mov
xchg
xchg
sub
xor
ud0
push
jns
inc
popa
push
out
mov
test
or
xor
push
or
or
inc
jne
movs
sahf
(bad)
cmp
sbb
dec
dec
cmp
into
sub
add
mov
es
push
cmps
xor
out
call
cmp
je
inc
pop
(bad)
mov
push
ret
mov
adc
je
test
cs
lods
push
push
pushf
push
sub
mov
add
mov
test
inc
rcl
aad
add
(bad)
sbb
add
add
mov
loopne
(bad)
outs
inc
dec
fdiv
sub
inc
fidivr
sahf
add
sub
push
pop
push
nop
push
cli
dec
xor
mov
cmp
add
addr16
xor
rol
fcmovb
test
pop
dec
pop
movs
popf
jbe
cmp
mov
das
xchg
retf
pop
pop
pusha
fs
mov
sbb
test
mov
inc
push
adc
mov
add
mov
cmp
sub
jg
adc
ds
adc
push
scas
dec
retf
pop
mov
lea
ficomp
push
nop
pop
pop
dec
arpl
add
push
sbb
sub
fwait
push
cmps
nop
adc
jno
leave
dec
dec
pushf
cmp
sub
jmp
mov
test
xchg
dec
mov
inc
sub
mov
adc
call
or
adc
inc
dec
mov
sub
mov
jne
inc
jmp
js
clc
adc
mov
push
ret
cmp
mov
dec
jmp
adc
adc
mov
test
push
xchg
cmps
lahf
sbb
rol
pop
cmc
push
fistp
cmp
ja
xor
scas
adc
mov
neg
in
ins
mov
push
push
es
dec
xchg
mov
call
mov
push
push
mov
dec
addr16
shr
sub
cli
fstp
adc
mov
add
push
mov
cmp
sbb
dec
sub
fdiv
sub
out
dec
or
cmc
pop
(bad)
int
mov
dec
sub
mov
sbb
pop
or
push
cs
loope
mov
push
cmp
dec
jecxz
push
push
adc
pushf
and
das
mov
push
sbb
aaa
and
add
jb
sbb
ja
(bad)
in
cmps
add
push
cmp
dec
das
pop
stc
test
inc
sbb
jmp
inc
add
dec
xor
pop
pop
cmps
add
or
inc
and
popa
js
dec
jno
inc
mov
jo
push
or
push
and
out
dec
(bad)
push
js
pop
sbb
ficomp
xor
jl
(bad)
neg
sbb
mov
add
adc
mov
or
or
je
fs
cdq
add
jb
pop
mov
mov
test
jle
lea
cdq
test
ins
mov
adc
clc
jmp
(bad)
cmc
jo
cmp
iret
adc
es
adc
retf
add
xchg
fiadd
aas
adc
mov
xor
ror
popf
or
out
jmp
inc
pop
push
(bad)
mov
sub
mov
(bad)
and
mov
pushf
or
in
lock
outs
push
xchg
call
mov
add
sbb
aad
mov
cmp
test
cmp
adc
jecxz
inc
inc
push
iret
(bad)
sbb
adc
push
and
aaa
rcl
rcl
scas
push
shr
xchg
cmp
jl
sub
test
arpl
adc
pop
(bad)
lods
xor
pop
sti
div
test
add
xor
ins
ret
pop
not
cld
ret
push
sub
fldcw
scas
aam
loop
sbb
add
pop
bound
and
or
fwait
lock
aas
cld
fstp
lahf
cmps
rcpps
(bad)
aam
nop
add
and
push
sub
mov
pop
(bad)
mul
out
mov
fld
inc
mov
lahf
cli
dec
sub
add
pushf
popf
xchg
mov
jns
push
pop
sub
add
dec
sbb
fs
jns
and
push
mov
sbb
je
xchg
stos
shl
sub
jb
lahf
outs
popa
xor
daa
loop
aam
je
xchg
aad
addr16
pop
adc
dec
(bad)
push
inc
out
sub
pop
shl
inc
xor
and
lods
jge
sbb
ins
fs
push
fs
sub
pusha
lock
push
xchg
and
xchg
push
push
fnstcw
mov
mov
jp
push
bound
sbb
bnd
daa
push
push
xchg
xor
jl
jg
pop
and
adc
rcr
cmp
pusha
aad
push
pop
jmp
pop
lahf
mov
inc
mov
bound
mov
jl
es
lahf
sahf
loop
(bad)
js
mov
les
stc
dec
hlt
cmpps
push
xchg
inc
push
mov
hlt
push
push
inc
int
cs
jle
mov
mov
mov
mov
or
and
mov
pop
xchg
loopne
rep
pop
pop
mov
wbinvd
mov
sahf
or
clc
into
and
fsubr
push
mov
and
movs
dec
jns
jp
sbb
xlat
add
pop
sbb
inc
lock
push
ret
push
lods
xlat
les
cmovbe
fldenv
push
rol
pop
pop
dec
jmp
and
xor
xor
mov
enter
mov
ror
ins
mov
ins
pop
repnz
jg
data16
fld
enter
fisttp
dec
(bad)
(bad)
jns
hlt
mov
mov
sbb
push
add
hlt
pusha
jnp
mov
adc
pop
or
loop
dec
pop
add
push
(bad)
and
sbb
in
and
cmp
push
or
xor
fidiv
and
in
lods
test
fimul
shl
movs
jo
xor
(bad)
ss
pop
sbb
out
adc
and
and
adc
add
fbld
jge
hlt
dec
adc
fwait
push
push
pop
or
sub
das
inc
or
or
inc
sub
movs
add
or
xor
mov
jbe
stos
sub
arpl
scas
xchg
adc
je
jnp
adc
cld
test
dec
cmp
dec
stc
mov
or
loopne
imul
xor
inc
adc
icebp
mov
pop
inc
cld
inc
cmp
call
pop
in
inc
push
xchg
out
dec
leave
dec
xor
jmp
call
mov
cmp
hlt
cdq
clc
mov
aaa
inc
push
daa
stos
cld
bsf
pop
dec
ja
shr
cmp
jae
pop
push
sub
push
cmp
out
das
jb
jo
movs
xchg
fwait
mov
retf
add
rol
pop
hlt
cmp
inc
adc
jg
push
mov
sub
push
sbb
dec
sub
pusha
inc
movs
jno
push
mov
into
mov
les
jl
pop
add
add
ret
inc
or
inc
jnp
xchg
push
cli
(bad)
mov
jno
jne
push
jle
push
xchg
mov
push
nop
pop
and
add
push
or
test
adc
rol
jno
dec
mov
and
in
xchg
lock
jg
inc
pop
push
and
inc
pop
aam
ja
sub
mov
xchg
push
push
stos
cmp
aas
mov
sar
jmp
cmc
jmp
ss
push
jg
dec
(bad)
xor
and
int3
call
adc
mov
aaa
mov
movs
popf
and
rol
leave
retf
sahf
mov
mov
loopne
mov
lock
jnp
mov
sar
pop
test
ret
adc
push
not
sub
mov
gs
ret
adc
xlat
jbe
sub
adc
cdq
mov
test
cmp
dec
enter
fistp
or
xor
(bad)
pop
lock
pop
mov
mov
sbb
in
cmps
cwde
loope
or
fcomp
cmps
je
xlat
push
dec
shl
pop
loopne
(bad)
inc
push
and
ret
jmp
call
in
ret
lds
(bad)
(bad)
mov
pop
dec
push
jae
rcl
call
cmp
out
push
pop
aas
clc
dec
cmp
sub
mov
div
mov
test
mov
int3
sahf
jg
or
mov
push
mov
stc
xor
mov
movs
in
cmps
adc
cmp
and
jb
pop
jg
out
sbb
push
mov
add
sub
dec
das
adc
enter
mov
xchg
push
xchg
nop
push
and
mov
add
xchg
sti
rcl
cmp
nop
jo
push
fld
lock
vorps
pop
loop
cmp
jmp
pop
rcr
sub
adc
mov
mov
shl
add
(bad)
sbb
ror
std
scas
popa
sub
sar
je
jmp
popf
aas
cmp
data16
pop
cmp
jb
dec
popa
lods
ins
movs
xor
sbb
mov
xchg
test
or
sbb
add
mov
pop
pop
icebp
mov
inc
enter
in
lods
xor
sbb
sub
inc
push
enter
fcom
fdivr
retf
repnz
add
das
sub
push
push
mov
retf
sub
stc
xor
in
fs
gs
push
add
and
neg
test
lahf
je
sbb
sub
ret
cs
add
push
ins
dec
xchg
push
mov
push
js
cs
mov
sub
mov
xor
adc
enter
sbb
inc
aam
and
dec
add
adc
fcomip
xor
jo
ror
mov
pop
lock
int3
or
or
mov
popf
js
mov
sbb
shl
ror
adc
shl
outs
sbb
movs
cmp
inc
push
xchg
inc
push
mov
inc
push
outs
push
cmp
pop
sar
push
or
push
enter
or
push
cmp
cmp
test
ss
and
cmp
retf
shl
test
inc
inc
xchg
repnz
dec
mov
icebp
mov
jg
jbe
call
jb
arpl
loope
xor
and
cmp
pop
push
test
dec
or
mov
lods
jmp
int
sbb
neg
pop
jmp
mov
cmc
cld
out
in
mov
push
lea
imul
sbb
enter
or
mov
mov
and
in
sub
add
pop
fistp
push
mov
xchg
loop
mov
pop
mov
das
pop
or
dec
xchg
xchg
sbb
dec
sub
adc
cmp
(bad)
mov
pop
fild
and
fimul
pop
rol
lea
gs
and
sub
call
mov
cmp
jae
push
push
jg
cmp
sub
call
iret
sahf
(bad)
(bad)
les
aad
pusha
mov
jnp
repnz
or
push
cmp
fnstsw
mov
sbb
and
dec
jp
fcom
and
loopne
movs
xor
push
int3
aas
fs
imul
pop
adc
push
cmp
paddusb
mov
mov
mov
aaa
adc
stc
or
retf
shl
rcl
fcmovu
nop
out
ror
mov
loopne
mov
pop
cli
dec
add
das
xchg
retf
movs
push
or
adc
(bad)
imul
sbb
std
cmp
or
lea
movs
adc
xor
inc
adc
cwde
inc
sub
jl
jmp
or
cmp
xchg
retf
ja
cmc
inc
inc
dec
dec
out
mov
(bad)
xchg
enter
enter
jb
jp
xchg
retf
in
add
inc
xchg
lods
xchg
cs
retf
in
mov
mov
pop
ret
into
shl
jmp
ret
dec
sti
dec
aam
movs
inc
shl
dec
fadd
loopne
fadd
xchg
retf
ret
cmp
out
mov
out
repnz
(bad)
in
pop
jns
inc
dec
inc
ja
retf
or
dec
sub
pop
cs
retf
xor
cmp
xchg
or
pop
es
(bad)
mov
jbe
xchg
pushw
pop
xchg
retf
in
jb
jp
rol
mov
push
test
push
int
add
jge
add
ins
xchg
fcmovnbe
push
rol
push
push
push
sbb
pop
inc
test
sti
or
pop
jmp
adc
(bad)
sti
sti
push
push
ins
mov
jg
cmp
stos
repnz
sub
push
mov
cmp
movs
inc
inc
inc
adc
pop
test
je
iret
push
stc
rcr
dec
jne
push
xchg
sub
sbb
cmc
push
inc
lock
repz
mov
scas
add
or
xor
cmc
and
jl
ret
push
inc
and
imul
sbb
popf
mov
mov
ins
sub
cld
aaa
dec
xor
mov
sub
mul
adc
jno
pop
sub
div
shl
ds
xor
jmp
jb
push
movs
push
pop
mov
cld
std
pop
call
push
(bad)
stc
mov
test
(bad)
fisub
and
shr
push
jge
or
lea
stc
mov
mov
pusha
pop
or
ins
or
popa
pop
mov
fcomp
pop
aaa
mov
sub
push
ja
mov
pop
cmp
mov
cmp
push
push
sub
outs
cdq
test
push
dec
sti
test
add
sub
ret
mov
mov
jns
les
sbb
test
xchg
add
in
cwde
test
xchg
sti
in
pop
adc
fadd
hlt
int3
add
sti
and
mov
loopne
xor
pusha
div
seto
arpl
sub
mov
inc
pop
jo
xor
inc
outs
imul
fcom
push
faddp
mov
inc
test
jne
lea
sub
mov
dec
jl
test
mov
inc
test
clc
mov
lahf
add
dec
add
push
adc
test
fmul
mov
push
mov
mov
mov
inc
pop
fnclex
ja
sub
lea
gs
inc
inc
fld
in
jbe
mov
cmp
inc
mov
and
cmp
or
xlat
ss
sub
add
aad
rol
add
jno
in
jae
mov
(bad)
dec
test
push
mov
test
mov
cmp
push
mov
and
mov
rcr
inc
add
xchg
fs
push
or
dec
push
lea
push
push
pop
push
add
xchg
ret
cmc
and
pop
cmp
ret
lea
dec
add
push
push
loopne
mov
cs
stc
call
push
mov
retf
push
mov
jl
inc
dec
and
and
dec
fsubr
adc
sbb
add
rcr
xchg
rcl
enter
cmps
cmp
lea
enter
push
push
xlat
jg
rcl
out
lods
mov
jbe
push
push
push
loopne
outs
mov
and
pop
cmp
call
add
add
ret
psubq
arpl
push
mov
and
test
pop
(bad)
xor
xchg
out
cmp
mul
or
cmp
push
xchg
stos
cli
lea
in
call
shr
cmp
(bad)
sbb
push
cmp
(bad)
mov
adc
mov
push
pop
enter
and
lds
jge
mov
test
pop
push
lea
pop
mov
ss
or
push
fwait
xchg
dec
jnp
pop
cmp
add
test
mov
sbb
or
add
or
push
adc
cmp
sub
mov
push
call
rol
dec
dec
shr
out
je
xlat
adc
sub
repz
ret
inc
jb
je
push
and
dec
sbb
push
sbb
test
pop
mov
cmp
(bad)
xlat
and
cmps
adc
cmp
clc
scas
jo
jns
in
call
out
sub
adc
mov
mov
xor
and
xlat
pop
sub
push
movs
xchg
sbb
or
cwde
ror
push
push
cmp
outs
mov
and
pop
and
je
push
pop
clc
or
push
mov
xchg
cmp
xor
js
es
add
cmp
sbb
and
jmp
inc
cwde
xchg
cld
push
(bad)
add
pop
int3
cmc
scas
xchg
sub
or
xchg
mov
popf
mov
cmp
adc
hlt
bound
jmp
rcl
xor
mov
out
(bad)
fs
ret
jne
fidivr
push
pop
test
jns
test
mov
xchg
inc
push
cmp
fcom
cmp
cmp
mov
popa
adc
push
dec
add
add
mov
add
popf
clc
pusha
rol
pop
out
and
ret
sub
push
jg
sbb
cmp
xor
dec
lock
xor
jo
jmp
mov
dec
push
in
mov
adc
cld
jmp
cmp
add
mov
cmp
fisttp
(bad)
pop
inc
(bad)
into
cmp
jl
ror
add
lods
push
xchg
add
leave
inc
mov
push
test
inc
std
outs
mov
mov
mov
mov
sub
lock
aaa
cmp
mov
ss
data16
cmp
cmp
push
mov
scas
cmp
(bad)
je
clc
mov
mov
push
and
sar
inc
sbb
push
fild
or
std
xchg
mov
inc
loopne
mov
push
jecxz
ins
inc
pop
jl
stos
popa
sti
ins
inc
mov
lea
xchg
sbb
retf
loope
mov
pop
ror
inc
pusha
add
mov
icebp
push
or
push
jne
cmc
inc
xor
js
xchg
sub
loope
inc
fistp
(bad)
mov
ret
jne
test
pop
daa
ss
mov
fcomp
jge
or
mov
into
bound
push
aam
fst
scas
in
ins
(bad)
mov
shr
jae
cmp
mov
mov
pushf
add
mov
add
push
mov
test
jp
shl
rol
jl
pop
add
nop
jnp
jmp
lods
pushf
shr
mov
pop
ret
pop
inc
fidivr
add
das
(bad)
xor
(bad)
cld
cld
cld
push
pop
cmc
and
sar
jl
xor
(bad)
(bad)
adc
inc
lea
push
cmc
call
sbb
mov
xchg
pop
(bad)
shr
mov
push
(bad)
sub
fisubr
pop
js
adc
cwde
adc
pushf
fs
sbb
push
mov
cmps
pushf
adc
add
sbb
adc
jmp
xlat
fcmovbe
gs
ret
icebp
mov
rol
push
aaa
sbb
and
(bad)
cmp
push
test
ds
cmp
aas
cs
adc
sub
cld
enter
sub
leave
push
enter
or
pop
int3
dec
sahf
pop
inc
push
pop
test
push
test
push
xchg
dec
pop
les
xchg
pop
pop
pop
in
retf
clc
mov
fist
adc
stos
pop
mov
xchg
enter
jo
enter
mov
cld
mov
sub
(bad)
les
dec
arpl
xor
loop
jp
popa
mov
mov
fwait
shl
retf
xor
dec
jecxz
push
or
adc
push
aam
rcr
mov
push
add
cmp
gs
push
push
push
mov
pop
mov
cld
icebp
popf
push
arpl
xor
repz
stc
lea
lods
add
sbb
cli
and
mov
sub
ret
jne
jmp
sub
adc
loopne
pop
sbb
ss
add
pop
xchg
(bad)
mov
adc
ja
dec
dec
or
add
push
push
inc
dec
and
push
lea
stc
pop
pop
ret
xor
xchg
push
loopne
xchg
fnstcw
ror
pop
test
push
pop
xor
push
push
adc
repz
push
and
scas
add
pop
nop
in
pushf
outs
imul
repz
push
into
fdiv
push
push
aam
pop
mov
push
pop
push
xor
cmp
daa
outs
ror
call
push
inc
aaa
and
push
or
jbe
les
dec
inc
xchg
nop
mov
cmp
and
mov
cmp
cs
ror
(bad)
or
fisub
inc
jmp
cmp
cmp
or
pop
sub
out
nop
or
sub
jo
inc
je
mov
pop
lea
dec
sub
pop
dec
push
aaa
fild
sti
push
test
jmp
aam
nop
or
std
test
jns
test
push
inc
cmp
jbe
lea
sub
jb
xchg
cli
inc
cmp
je
sub
inc
push
fistp
mov
adc
mov
mov
inc
mov
pop
pop
xor
cmp
test
movs
loope
mov
mov
cmp
hlt
(bad)
ror
add
mov
mov
sub
loopne
push
jmp
call
lea
movs
cmp
adc
pop
lds
cmp
test
jns
add
je
mov
sub
je
inc
mov
cmp
jb
scas
jle
enter
sub
inc
inc
imul
cs
dec
cld
push
xlat
call
call
out
mov
fwait
jmp
and
mov
xchg
sub
test
mov
push
rol
pop
scas
int3
shl
and
mov
getsec
jmp
lahf
or
pop
sub
push
neg
call
add
mul
push
loopne
sbb
and
inc
shl
push
lock
fadd
and
jecxz
add
jmp
sbb
push
aaa
mov
jne
test
or
push
das
outs
sbb
push
jmp
icebp
jne
test
popa
jg
ror
in
add
mov
jmp
dec
outs
fmul
xor
jne
mov
push
adc
in
sub
fbstp
fwait
imul
sar
add
(bad)
jp
scas
jmp
pop
ja
cld
push
mov
xchg
outs
xchg
outs
mov
jbe
out
outs
rcr
pshufw
dec
and
rcl
(bad)
iret
out
je
inc
jne
je
pusha
shr
add
bsf
xchg
inc
pop
sub
es
push
adc
mov
inc
(bad)
call
cmp
xor
(bad)
fisubr
ffree
add
mov
inc
es
or
and
das
sbb
enter
(bad)
jmp
push
shr
cmps
jae
push
and
pop
jl
nop
test
add
sub
jbe
gs
jbe
ss
rcl
cmp
mov
mov
add
rcl
jnp
add
daa
aas
push
adc
add
and
imul
add
jno
pop
pop
add
add
test
adc
cdq
jo
and
ror
push
inc
cmp
xlat
or
mov
test
dec
xchg
sahf
cwde
push
push
adc
xchg
fs
mov
aad
call
xchg
cmp
call
mov
cmp
or
cmps
or
add
xchg
xlat
les
call
push
imul
rol
xor
mov
dec
fiadd
(bad)
pop
mov
push
aam
push
cs
add
out
js
jl
cld
inc
not
mov
and
sub
mov
or
jl
mov
or
push
pop
mov
xor
push
or
xchg
xchg
test
fcomp
xchg
jno
test
fidivr
outs
sub
mov
and
and
movs
ds
clc
push
out
jp
adc
test
mov
or
cmps
(bad)
jg
inc
cwde
call
imul
ss
std
je
dec
xor
sub
xor
in
jb
call
or
aam
lahf
aaa
sbb
pop
and
jno
sub
adc
adc
sbb
loope
xor
mov
inc
mov
add
xchg
or
idiv
pop
imul
in
cmp
lea
jns
(bad)
jl
jmp
adc
mov
movs
fidiv
ret
call
mov
ins
pushf
inc
mov
xchg
retf
mov
mov
fcom
pop
in
dec
int
in
or
or
pop
loop
mul
cmps
and
mov
daa
fnstsw
mov
daa
sbb
(bad)
ficom
push
clc
int3
or
inc
retf
xchg
mov
mov
push
fs
xchg
cmp
inc
and
(bad)
es
push
push
xor
mov
jl
dec
jnp
ffreep
and
inc
loopne
imul
or
pop
and
data16
rcr
mov
nop
pop
mov
and
(bad)
rcl
and
add
xchg
cmp
pop
loope
mov
rcr
mov
pop
mov
lea
lahf
adc
jecxz
pop
into
push
pop
repnz
loopne
repnz
add
daa
jno
push
xor
add
nop
pop
push
out
sti
dec
test
cmp
sti
sbb
xor
je
sahf
inc
and
cmps
jns
pop
inc
add
add
inc
inc
(bad)
les
arpl
inc
pop
pop
sub
je
gs
dec
sub
adc
cmp
xchg
mov
jmp
sbb
mov
add
push
mov
and
push
cmp
jno
cmp
mov
mov
and
mov
push
inc
mov
jno
push
lods
call
sahf
mov
dec
adc
fnsave
lock
int
jmp
dec
mov
mov
xchg
lahf
dec
aaa
jno
rcl
mov
nop
sti
adc
push
pop
cwde
or
ja
add
cmps
rcr
sub
and
dec
shl
sahf
test
pop
imul
jae
adc
push
push
test
sub
xor
les
dec
dec
dec
adc
dec
pusha
cmp
fidivr
stc
jbe
mov
fld
sbb
rcl
daa
cmp
ret
push
mov
(bad)
mov
movs
jno
test
pop
mov
jno
dec
cmp
xor
or
test
push
movs
js
aas
sar
jl
cmp
mov
mov
test
cwde
cwde
jns
pop
add
dec
xor
push
test
mov
push
sub
dec
cmp
pop
out
mov
mov
cmc
sub
(bad)
rol
add
shr
mov
call
ror
cli
add
or
push
call
inc
xor
ret
loope
and
inc
stos
rol
sbb
pop
pop
add
pop
mov
xor
fbld
in
sbb
mov
mov
(bad)
sbb
jae
push
aaa
adc
data16
movs
cwde
sbb
sbb
mov
xchg
mov
sbb
(bad)
fild
sbb
jle
dec
je
pop
inc
push
mov
inc
call
dec
xchg
add
push
sbb
add
pop
js
push
mov
dec
add
test
pop
dec
sbb
lea
fcomp
fcomp
sahf
and
sub
aas
(bad)
not
icebp
arpl
js
call
outs
sub
retf
cld
push
push
fwait
or
dec
inc
data16
push
neg
fdivp
ins
cmp
test
ret
and
mul
ror
mov
sbb
or
dec
or
dec
add
out
sbb
cli
nop
dec
add
lock
lock
jne
jo
jmp
push
test
fbld
pusha
and
je
push
push
pop
dec
std
js
push
mov
jmp
ja
lea
push
inc
mov
in
adc
or
cmp
xor
adc
cmps
sbb
(bad)
aaa
mov
jne
add
adc
sbb
inc
add
cmp
iret
add
add
and
jmp
push
push
icebp
push
mov
rol
adc
xor
ins
fwait
stos
xor
scas
cmc
push
push
sti
inc
jg
mov
push
mov
inc
cmp
sar
add
mov
aaa
(bad)
xor
shl
call
cmp
test
pop
sub
iret
adc
mov
imul
dec
test
pop
push
dec
rcr
sbb
je
push
or
mul
inc
aas
sbb
cld
cmp
inc
xor
aas
mov
and
jg
inc
xchg
scas
in
or
hlt
fist
add
and
pop
imul
loope
and
or
cmp
shl
jns
pusha
sbb
hlt
jl
mov
cli
add
xor
fnstcw
je
sub
mov
add
sub
jne
enter
rol
retf
xor
jmp
dec
jmp
js
add
push
push
or
test
jne
add
or
add
xor
pop
dec
pop
push
je
stc
or
or
jecxz
mov
mov
test
xchg
cdq
dec
cmp
and
sub
cmp
mov
(bad)
sti
push
xchg
js
pop
jge
pop
inc
jmp
push
mov
dec
sub
shr
jg
push
mov
aas
cmp
sbb
xchg
mov
test
or
out
cmp
and
cmp
mov
jno
ror
jge
pop
cmps
cmp
cmp
lea
pop
xor
sub
rcr
sar
mov
js
enter
es
test
jne
ret
and
lods
repnz
push
popa
sub
cwde
sub
add
nop
ins
aaa
or
inc
cmp
jnp
xchg
or
sub
movzx
pop
fs
dec
pop
std
dec
mov
sub
sbb
popf
js
loop
xor
cli
mov
xlat
lock
jmp
pop
jne
mov
mov
mov
test
adc
push
pop
dec
push
or
cwde
xchg
out
fwait
adc
sbb
test
in
xchg
lea
pop
or
fs
adc
and
push
sbb
pushf
fidiv
lea
dec
sbb
out
sbb
and
leave
std
push
dec
lods
std
sub
fist
add
cmp
pop
sub
mov
imul
std
jbe
mov
cmps
push
add
cld
frndint
cmps
sub
cmp
sub
dec
cwde
inc
mov
clc
jmp
sbb
mov
jmp
xchg
sbb
and
sub
mov
out
and
push
cs
outs
inc
das
mov
(bad)
loopne
repnz
inc
pop
inc
pop
mov
test
cmp
sub
push
int3
adc
retf
sbb
(bad)
xor
xor
sbb
push
and
mov
je
cmp
fsubrp
fbstp
frstor
cmps
push
push
mov
adc
cmp
pop
sar
or
ss
test
std
sbb
jl
pusha
enter
pop
clc
dec
loopne
pop
test
push
push
into
push
adc
adc
or
sbb
xor
lods
jl
aaa
jb
adc
leave
rol
xor
les
shl
js
and
sar
hlt
jmp
mov
ss
jmp
xor
jbe
add
inc
dec
les
test
loope
outs
loope
ja
cwde
(bad)
push
shr
arpl
in
inc
push
paddusb
ret
in
xchg
cmp
push
js
mov
mov
jmp
push
push
inc
retf
pop
data16
xchg
push
pusha
mov
push
push
and
(bad)
jmp
jb
adc
xor
mov
pop
dec
jl
pop
add
jle
xchg
mov
cld
movs
sar
cdq
mov
sbb
lods
push
icebp
das
and
mov
push
fbstp
adc
mov
mov
mov
or
ins
daa
movs
lds
retf
pop
leavew
mov
ret
or
push
sete
mov
rcl
ret
or
mov
add
or
add
cmp
ins
jo
ja
jle
push
push
xchg
xlat
xchg
pop
sbb
ret
ds
(bad)
jbe
mov
ss
jae
jmp
or
or
pop
sub
clc
jo
data16
add
int
add
mov
jmp
adc
mov
mov
adc
iret
lock
les
fcomp
sar
rcr
adc
sbb
pminub
fadd
fimul
pop
adc
cli
xchg
(bad)
push
pop
jp
mov
lea
stos
jns
add
cmp
je
add
inc
add
push
aad
je
push
in
xor
inc
outs
fistp
inc
mov
cmp
cmp
ins
inc
test
jne
cmc
mov
push
and
stos
jmp
cmp
adc
add
add
aas
jne
or
jmp
clc
addr16
cli
popf
push
push
icebp
loopne
xor
push
icebp
ret
je
push
fdivr
cld
jns
ss
lea
xor
daa
ud0
cmp
test
movs
add
js
or
add
sbb
sbb
add
push
dec
jge
push
in
mov
mov
fstp
ins
sub
mov
push
mov
sbb
jl
pop
pop
mov
jbe
loop
scas
jmp
in
mov
and
stc
sar
(bad)
pop
sub
jbe
inc
inc
add
mov
js
mov
and
shl
sbb
mov
pusha
(bad)
je
add
rol
jns
mov
pop
add
xor
mov
pusha
(bad)
jno
push
clc
std
pop
mov
cmp
pushf
rcl
pop
(bad)
add
or
xchg
or
pop
push
jmp
adc
push
xchg
sub
add
out
sbb
mov
les
cmp
or
add
cmp
xor
pop
ja
dec
or
stc
loopne
addr16
pop
and
or
push
xor
jge
js
add
cmp
jbe
add
jb
daa
mov
sar
add
dec
jne
ficom
sbb
add
mov
add
or
jb
rep
add
pusha
call
inc
jb
add
enter
test
je
lea
jl
iret
jnp
test
mov
and
mov
mov
mov
fnstenv
add
inc
mov
push
movs
shl
dec
add
add
nop
inc
add
add
or
push
inc
push
cmp
(bad)
lahf
out
sub
sbb
mov
mov
jns
out
call
out
sahf
out
hlt
hlt
clc
clc
ficom
sahf
cld
cld
inc
(bad)
stc
repz
loope
add
sbb
jmp
push
iret
test
nop
inc
push
fild
inc
cmp
sbb
lea
dec
scas
mov
pop
and
std
(bad)
fmul
fwait
pop
cld
out
mov
neg
ror
enter
sub
jns
cld
nop
or
push
xor
fiadd
jl
sub
add
push
adc
inc
push
out
push
add
lods
pop
push
mov
cmp
pop
add
loop
cmp
and
mov
mov
repz
repz
jae
sbb
sbb
adc
repz
adc
adc
or
leave
repz
add
mov
ret
repz
dec
push
adc
cmp
mov
test
pop
adc
and
sbb
mov
scas
not
test
ins
lods
sbb
sub
cmp
jle
popf
adc
int3
daa
push
and
jmp
(bad)
and
jnp
arpl
jmp
xchg
mov
xchg
and
retf
loope
inc
pop
pop
je
xchg
lock
retf
test
jne
jmp
je
cmp
pop
sbb
push
jbe
jmp
je
sub
enter
mov
mov
add
loope
loop
sbb
ins
pop
in
loope
dec
xchg
es
hlt
mov
inc
mov
or
xrelease
jo
xor
sub
ss
cld
ds
or
jl
and
retf
cld
mov
jle
mov
push
lea
mov
lds
lock
xchg
outs
sub
shr
inc
mov
out
inc
in
xchg
enter
mov
inc
ins
or
mov
inc
jmp
cmp
mov
dec
sbb
jmp
sub
sub
pop
es
movs
and
jmp
dec
inc
adc
(bad)
cmp
nop
mov
je
(bad)
dec
push
mov
mov
cmp
je
cmp
and
pop
in
adc
ins
xor
jne
mov
repz
add
mov
retf
enter
mov
ins
or
sbb
retf
or
adc
add
add
jmp
lock
lahf
cmp
sub
and
adc
sbb
iret
in
jg
or
inc
cld
jb
jne
push
clc
jbe
add
shr
or
or
ror
loopne
mov
or
jmp
or
scas
push
adc
rol
std
add
aas
mov
mov
sbb
stos
clc
loopne
cmp
xor
sub
jne
jbe
aas
mul
add
cwde
pop
dec
push
jmp
(bad)
jmp
and
rol
(bad)
mov
cmp
(bad)
mov
(bad)
xor
xor
lds
mov
xlat
push
push
mov
es
fcomp
push
xchg
fiadd
dec
nop
push
fisttp
(bad)
jae
sti
loopne
outs
push
push
mov
or
outs
icebp
push
push
or
addr16
(bad)
iret
nop
xchg
cwde
aam
xchg
je
ret
jmp
xor
mov
cmp
cmp
fldenv
push
pop
(bad)
pop
mov
xchg
pop
(bad)
cmc
pop
or
or
ins
inc
imul
lea
pop
ret
mov
lea
push
xor
lods
fcomp
jbe
mov
add
cmp
je
test
je
sub
mov
or
push
adc
jmp
div
retf
retf
icebp
inc
enter
(bad)
cwde
loope
xor
and
or
push
arpl
(bad)
in
inc
inc
cld
cmp
je
repz
pop
add
cmp
je
test
je
shr
and
dec
pusha
aas
iret
fadd
aam
xchg
pop
addr16
movs
mov
or
mov
ja
je
lock
adc
cdq
sahf
ror
or
adc
dec
retf
pop
sub
sub
and
mov
inc
mov
xor
cmp
inc
nop
add
xchg
retf
xor
idiv
jp
add
ret
add
xchg
adc
dec
push
ins
les
ret
out
mov
call
mov
ror
sub
mov
test
push
jp
cmp
lds
pop
cmp
nop
cld
cmps
imul
sub
sub
jne
xadd
add
cmp
adc
adc
xor
movs
shl
adc
sbb
mov
xchg
mov
icebp
movs
jne
test
pop
shr
jmp
dec
pop
push
in
or
adc
sub
cmp
mov
out
add
inc
popa
push
mov
jae
xchg
and
icebp
jmp
movs
pop
xchg
adc
or
pop
inc
call
mov
loopne
inc
push
push
pop
sub
add
mov
ficom
add
in
xchg
xchg
xchg
fs
ret
push
jle
ins
pop
adc
lock
adc
push
or
sbb
mov
pop
int3
sub
or
lods
frstor
adc
jmp
shl
aam
ret
add
dec
sub
sub
ror
jle
mov
movs
sub
dec
jne
pusha
or
sub
sub
xor
outs
dec
mov
ss
sub
add
and
sahf
sbb
push
inc
dec
add
stos
xchg
repnz
mov
es
or
push
lea
sub
pop
shl
enter
fwait
sbb
scas
je
lock
xchg
clc
adc
sbb
sub
jmp
std
stos
adc
mov
sub
add
mov
inc
push
jmp
mov
jmp
pop
jge
xchg
fs
fs
je
add
pop
mov
clc
mov
dec
and
les
cwde
xor
cmp
add
lock
mov
out
pop
jmp
cld
cdq
push
push
jl
add
dec
(bad)
jnp
shl
jo
call
cli
xor
dec
or
into
ret
not
cmp
loop
outs
jbe
js
cmps
arpl
jbe
popf
cmp
jbe
and
test
rol
push
xor
add
fadd
pop
push
fcmovu
call
shl
fidiv
shl
sbb
in
in
shl
pop
outs
pop
cmps
cmp
push
clc
dec
mov
mov
lods
inc
cli
add
lea
sahf
enter
int3
or
mov
xchg
(bad)
adc
lock
xchg
push
inc
aam
ds
outs
xchg
enter
xchg
ret
push
mov
jmp
mov
gs
cdq
adc
mov
call
std
data16
xor
inc
and
retf
sbb
push
and
jo
or
adc
bound
push
fs
xchg
sbb
push
jmp
cld
arpl
imul
nop
xor
cmp
jmp
les
mov
jmp
cmp
in
dec
dec
lahf
add
(bad)
imul
add
cmp
ins
xor
add
add
or
add
cli
pop
test
pop
adc
adc
sub
sbb
(bad)
(bad)
repz
jge
mov
push
cmps
jae
mov
xlat
cwde
stos
sbb
mov
sub
xor
dec
pushf
or
sbb
ret
loop
dec
retf
mov
jg
adc
dec
add
mov
xchg
dec
xchg
rol
push
icebp
cmp
push
pop
xor
shl
sbb
call
repnz
lock
fcomp
mov
xor
dec
mov
call
adc
lock
outs
add
cmps
(bad)
sub
stos
in
cmps
test
outs
ss
xchg
adc
mov
adc
in
call
mov
loopne
cmp
ins
test
ret
jmp
mov
sbb
sub
fidivr
dec
add
scas
enter
and
shr
mov
mov
or
(bad)
aad
mov
dec
cmp
inc
jne
pushf
xchg
loope
mov
and
shufps
out
shr
fstp
or
push
push
sar
inc
cld
add
or
inc
ds
div
cmp
jae
(bad)
jmp
inc
sbb
and
in
cmps
dec
jp
or
push
add
aaa
ret
(bad)
pop
add
je
and
cmp
jae
sub
hlt
add
push
pop
add
adc
mov
call
(bad)
xchg
(bad)
loop
adc
into
out
sub
xchg
sub
cs
enter
adc
sbb
pop
pushf
faddp
sti
icebp
or
sbb
sbb
cs
fidivr
addr16
and
adc
add
jmp
(bad)
dec
sbb
mov
fadd
mov
jne
or
cli
adc
push
test
sbb
or
pop
fsubr
popf
and
hlt
xor
add
push
dec
cwde
sub
or
dec
outs
loope
pop
xor
(bad)
inc
push
jmp
mov
dec
cmp
ja
add
js
inc
jnp
(bad)
lods
pusha
lds
sbb
cmp
ret
hlt
or
pop
pop
loope
sub
cmps
or
ret
ret
nop
stos
scas
cmp
push
cmp
rcl
int3
or
cli
xchg
sbb
pop
jl
ret
lahf
pop
cmp
adc
rcl
inc
sub
jmp
idiv
scas
cmp
or
jle
and
ficom
pop
sub
push
push
shl
inc
data16
add
in
data16
jmp
cdq
pop
mov
out
xor
push
adc
pop
pop
mov
ret
add
jle
jmp
enter
sub
(bad)
and
xor
pop
sti
pop
pop
jns
clc
and
push
jne
(bad)
rol
or
rcr
icebp
pop
(bad)
jmp
addr16
xor
test
push
rcl
add
pop
retf
xchg
shr
shl
adc
mov
cmp
xchg
aaa
or
(bad)
jmp
sti
push
dec
cld
pop
cwde
add
push
adc
push
add
call
cli
pop
jl
jg
cmp
jbe
call
mov
mov
mov
mov
push
jae
jo
dec
xchg
cmovp
cld
sbb
lock
sbb
sti
lea
iret
mov
push
mov
push
pop
cmp
jae
mov
test
aam
add
cmp
cmc
add
sbb
imul
out
inc
loope
add
jmp
inc
push
lea
cdq
shl
test
sbb
or
xor
ror
and
push
xchg
std
outs
lods
sbb
pop
(bad)
mov
nop
jg
push
lahf
and
sbb
pop
js
repnz
inc
jle
push
and
or
pop
and
mov
inc
or
xchg
icebp
outs
pop
dec
pop
les
adc
mov
jg
push
dec
popa
push
dec
ror
mov
int3
outs
mov
test
js
pop
add
xor
push
ret
mov
cwde
pop
in
mov
sbb
(bad)
fld
xchg
and
out
fbstp
mov
and
and
mov
sbb
data16
(bad)
jmp
(bad)
call
mov
lock
adc
call
add
pop
sti
stc
add
jo
test
mov
js
cmp
es
push
shl
xchg
pushf
sbb
jo
jo
neg
or
dec
js
out
inc
cmp
sub
cmp
add
sbb
add
mov
pop
movs
or
mov
movs
adc
push
and
pushf
call
pop
movs
or
inc
pop
and
mov
rol
rcr
push
loopne
iret
loopne
lock
add
mov
or
and
sbb
pop
inc
scas
mov
cmp
add
push
xor
push
loope
dec
xchg
inc
push
retf
mov
mov
mov
adc
sbb
cmp
inc
add
scas
icebp
pop
outs
jae
xor
xchg
or
sbb
loop
data16
or
rcl
inc
mov
iret
xor
dec
scas
popf
gs
inc
adc
mov
jne
push
cwde
rcr
adc
dec
(bad)
sti
sbb
loopne
fiadd
lock
xlat
call
push
jl
loope
inc
xlat
sahf
adc
add
push
jg
mov
jmp
mov
add
leave
cmp
retf
sub
prefetch
leave
fadd
imul
sub
push
paddusb
ins
std
in
and
mov
or
sahf
dec
cmp
adc
cmp
movaps
add
or
imul
outs
movs
(bad)
cmp
dec
adc
retf
test
or
ins
mov
push
addps
xchg
mov
adc
(bad)
jg
cmp
xchg
daa
sbb
addr16
sbb
(bad)
xlat
inc
gs
mov
dec
jne
and
je
push
inc
aaa
sub
jne
sub
push
ret
mov
adc
mov
mov
div
fisttp
imul
push
add
sub
add
ret
bound
out
(bad)
sub
push
and
or
or
sbb
or
jmp
and
out
xchg
add
stos
pusha
sar
pop
(bad)
jmp
ja
imul
fmul
mov
fs
pop
imul
stos
jg
or
add
test
cld
push
push
push
pop
movzx
push
aaa
les
pop
add
enter
adc
cmp
adc
push
mov
out
int3
sub
imul
push
mov
pusha
arpl
je
pop
and
adc
sub
adc
pop
or
iret
in
jne
push
add
add
ss
add
sbb
push
or
sub
pop
cmp
ja
pop
mov
jns
jbe
lea
adc
sbb
jle
out
add
ror
inc
adc
ret
mov
jne
push
clc
jbe
add
jne
fiadd
cmp
pushf
test
or
pop
cmp
mov
or
(bad)
dec
rol
adc
sbb
sbb
push
or
adc
rol
cmp
push
sub
mov
adc
sub
cmp
(bad)
(bad)
or
repz
nop
push
add
lods
es
push
mov
jb
mov
in
push
repnz
sbb
dec
adc
push
cmp
iret
add
add
jl
cmp
jg
add
mov
(bad)
stos
add
sub
jo
jge
lods
mov
push
push
push
push
or
aad
arpl
data16
jno
cwde
mov
sub
add
(bad)
sub
xchg
pop
fistp
movs
sar
test
cmp
add
xor
add
fist
int3
mov
cmp
loope
pop
loopne
add
es
fs
and
pop
das
push
or
or
xor
clc
pop
add
jo
test
adc
xchg
call
jns
sub
pushf
xchg
xchg
aam
xchg
lea
std
cld
shl
leave
fist
or
stos
mov
stos
movs
xlat
inc
lods
cmp
(bad)
sar
jecxz
pop
xchg
rcr
cmp
or
add
inc
cmp
mov
mov
or
stos
push
push
pop
test
xor
xor
adc
add
inc
mov
retf
pop
rcl
inc
or
(bad)
sar
stc
and
mov
inc
je
mov
add
lods
sub
adc
cli
or
ret
mov
mov
inc
inc
mov
shl
outs
jb
or
push
scas
(bad)
xchg
dec
mov
sbb
fistp
cmp
mov
inc
cmp
jb
mov
push
push
pusha
aad
loopne
push
cmc
addr16
inc
loope
sub
jne
mov
scas
imul
inc
outs
add
add
jne
adc
aaa
out
mov
cld
jne
mov
push
cmp
jne
(bad)
xor
repz
jne
call
into
dec
ins
popa
or
jmp
movzx
rep
fiadd
push
dec
movs
inc
adc
(bad)
jmp
data16
iret
iret
std
std
jmp
cld
cld
jmp
fisttp
push
adc
xor
inc
sbb
jb
sbb
dec
inc
adc
inc
movs
or
sub
mov
inc
adc
out
sti
or
inc
inc
aas
imul
and
loop
adc
ins
mov
push
sub
inc
es
cmp
stos
mov
out
adc
xor
popa
sub
sub
dec
add
lods
daa
jo
aad
ret
ja
pop
in
pop
ds
push
add
mov
mov
sub
push
loope
inc
cmc
add
ja
push
xor
adc
sub
push
(bad)
rcr
or
mov
and
jno
mov
jp
xor
mov
enter
outs
xor
sar
add
sbb
sbb
or
hlt
pop
adc
push
push
xor
pop
pop
sbb
add
jp
call
out
mov
push
in
push
xor
jmp
fst
dec
in
sbb
push
adc
dec
repz
jmp
repz
loop
dec
sahf
and
and
pop
imul
mov
pop
sbb
inc
dec
jg
fadd
fadd
jne
adc
das
jle
call
push
popa
lsl
mov
add
leave
daa
jo
push
xchg
jge
in
nop
dec
icebp
mov
rcr
pop
fs
push
ret
jmp
pop
(bad)
fnsave
jo
sbb
jge
mov
xchg
test
sbb
xchg
data16
aam
pop
or
push
push
push
jmp
cmp
sbb
neg
push
xor
mov
aas
adc
cmp
pop
repz
ss
or
jmp
xchg
cwde
stc
mov
data16
dec
or
leave
pop
cmp
mov
xor
mov
clc
xor
or
out
mov
jo
mov
and
jne
aad
test
and
inc
ins
gs
loope
xor
xchg
std
mov
push
push
daa
push
pop
add
ret
movs
push
and
retf
es
push
inc
fsub
aaa
test
sbb
inc
loop
jo
sub
pop
dec
pop
xor
mov
dec
(bad)
mov
xor
dec
push
in
push
clc
pop
push
stos
cmp
outs
pop
xlat
fwait
inc
xor
ror
in
push
sahf
cmp
jg
loop
pop
pop
je
(bad)
pop
or
ds
push
inc
adc
and
push
sub
inc
push
pusha
mov
xchg
dec
jne
shl
jge
aaa
add
pop
jle
adc
div
fild
xchg
or
mov
dec
ins
mov
shl
push
mov
inc
inc
cli
or
add
sub
jle
pusha
out
ins
mov
bound
add
jbe
sbb
shl
dec
pop
jb
or
mov
pop
inc
push
popf
inc
imul
push
cmovbe
ins
sub
loop
outs
push
xchg
out
enter
ins
and
lea
cmc
sub
out
sub
sbb
fsubr
loopne
or
pop
pop
pop
popf
aam
sar
clc
jns
jns
or
test
movs
sar
pushf
(bad)
fild
xor
test
mov
retf
stc
lods
sbb
cld
xor
adc
das
fadd
in
or
xchg
inc
adc
add
mov
push
inc
and
aaa
inc
stos
xor
mov
and
add
push
or
or
ror
cld
pop
fwait
sub
and
pop
push
add
ret
les
test
push
xor
mov
ret
jmp
sbb
sub
push
sbb
sti
dec
test
aas
jbe
shl
ss
aas
ins
sbb
int
mov
or
pop
dec
xor
adc
inc
or
mov
in
inc
cmps
sub
push
xchg
xor
jae
cmc
push
or
mov
retf
retf
shl
jns
(bad)
dec
rol
pusha
je
aas
inc
je
lock
jmp
cdq
add
movs
jl
push
pop
xor
jo
div
sar
sbb
mov
sub
imul
fcom
add
fadd
mov
or
je
xchg
repnz
jb
adc
xlat
add
clc
adc
inc
(bad)
cmp
jmp
sbb
out
xchg
mov
or
xchg
rcl
pushf
and
stos
outs
mov
or
add
sub
cmp
ins
(bad)
or
xor
mov
push
add
mov
sub
sbb
jle
add
mov
cmp
sub
sbb
ret
and
jl
push
adc
in
test
add
retf
int3
cmp
push
dec
and
not
and
or
mov
in
popf
xchg
test
fst
jnp
in
dec
aam
push
sbb
ins
icebp
stos
mov
fimul
or
dec
cmps
mov
pop
jle
in
psllw
mov
add
dec
push
(bad)
pop
fldenv
mov
addr16
sub
jo
mov
pop
rcl
mov
in
pop
add
jns
in
sbb
sub
cmp
pop
and
shl
int3
imul
or
jecxz
jmp
sub
and
mov
call
(bad)
jae
pop
adc
push
jmp
jb
iret
adc
sbb
sbb
adc
push
and
imul
fst
sbb
ret
movs
clc
pop
arpl
adc
data16
mov
mov
jae
push
and
cmp
sub
add
add
shr
sbb
out
mov
es
fadd
out
add
les
mov
mov
push
ins
and
lahf
and
test
jp
add
mov
stos
mov
stos
xchg
jo
ret
clc
push
rol
adc
jns
ins
adc
add
out
loopne
into
and
cmps
loopne
loopne
lahf
and
imul
adc
cmp
mov
mov
dec
sbb
ret
and
retf
(bad)
sar
mov
pop
dec
adc
cmp
addr16
sbb
xchg
dec
ja
popf
imul
sub
xor
sub
sbb
cmp
pusha
mov
imul
add
clc
mov
or
pusha
rcl
scas
sub
lea
leave
fstp
and
jno
loop
pop
or
jl
std
mov
pop
sub
je
push
or
jne
xor
cld
(bad)
fcom
jp
loopne
or
or
push
push
mov
aas
pop
lea
mov
mov
sub
je
or
cmp
mov
jmp
jge
dec
ja
xor
jmp
pop
sub
jmp
or
dec
xor
mov
jno
mov
inc
ds
js
mov
pop
push
(bad)
cmp
sub
ins
pop
dec
inc
lock
(bad)
pushf
mov
cmps
jge
inc
sub
cs
sbb
mov
mov
fcom
aas
fmul
not
sbb
or
add
adc
ins
fnstsw
push
push
mov
fs
mov
loopne
jmp
inc
(bad)
loopne
ds
push
inc
add
ins
or
sub
ror
bound
sub
adc
test
xor
jl
mov
and
cmp
jne
sub
test
or
jp
pop
xor
mov
xlat
data16
dec
jae
int
cwde
(bad)
xor
inc
cs
pop
nop
inc
je
addr16
shr
pop
adc
mov
daa
dec
mov
ja
std
cli
je
cmp
pusha
and
xchg
loopne
push
xchg
and
sub
je
sbb
push
or
jo
jle
push
rol
inc
adc
or
and
mov
cmp
js
dec
jb
nop
and
in
test
jae
xor
fdivp
sub
daa
pop
test
push
mov
mov
mov
mov
sub
mov
push
cs
gs
aas
sti
in
xlat
lds
push
pop
int3
push
inc
lea
into
inc
test
xor
xchg
jp
lea
sub
or
sar
add
pushf
jbe
mov
mov
jmp
jne
mov
pop
mov
jmp
ret
loope
mov
mov
xchg
ins
adc
repz
sbb
div
lods
adc
push
or
or
(bad)
cmp
xchg
(bad)
in
or
jb
jo
(bad)
or
adc
mov
sbb
rol
nop
push
pushf
add
add
sub
arpl
mov
imul
sub
jno
imul
adc
das
cmp
stos
push
cmp
pop
lds
push
cmp
and
js
or
rol
sub
lea
or
movs
push
ins
mov
aam
cld
dec
push
xchg
and
fdiv
cdq
adc
jbe
push
inc
xor
sub
test
xchg
das
pop
or
loope
(bad)
out
jne
mov
cmp
inc
call
and
cmc
pop
sbb
mov
pop
push
lea
mov
dec
and
(bad)
cmp
jle
push
mov
pushf
imul
jmp
jmp
jns
stc
je
or
push
adc
jmp
pusha
pop
mov
sar
shl
add
mov
or
mov
out
dec
lods
add
je
push
push
push
cmc
or
cwde
adc
sbb
aaa
push
and
or
push
xor
inc
push
ret
dec
ins
ins
push
fnstsw
jge
je
dec
dec
mov
and
xor
test
jle
(bad)
popf
and
or
add
call
or
mov
fisub
inc
add
cmp
and
mov
xchg
jns
sub
test
jb
call
fdiv
add
xor
hlt
cmps
jno
mov
xchg
cwde
sbb
call
repnz
fs
enter
retf
cmps
mov
or
add
mov
fwait
dec
sbb
shr
xchg
cmc
lea
out
and
xlat
add
idiv
fsub
fimul
ror
or
inc
sti
cld
pop
mov
xchg
out
test
inc
cmp
mov
mov
mov
and
push
loopne
pop
ja
mov
add
mov
push
cmp
test
sbb
push
shr
sar
pop
or
or
rcr
mov
(bad)
xchg
mov
jo
outs
or
enter
add
cmp
add
movs
aad
fmul
xor
jne
dec
pop
bound
jb
in
push
pop
add
and
xor
cmp
cld
adc
icebp
mov
jge
sub
sbb
jge
imul
retf
sbb
je
add
in
lods
es
sub
(bad)
loopne
call
mov
push
or
inc
ins
je
daa
daa
mov
jl
add
add
sti
aas
ins
jne
inc
sub
pop
aad
pop
scas
pop
adc
and
loopne
mov
jne
cmp
jne
push
ja
push
inc
mov
xor
movs
inc
fs
icebp
pop
push
call
outs
loope
xor
cmps
rcr
js
pop
leave
dec
retf
mov
and
scas
mov
inc
cmp
cdq
mov
or
outs
dec
loopne
pusha
xchg
loopne
sahf
das
pop
or
scas
ret
pop
jo
push
clc
sub
pop
and
repnz
sbb
je
pop
push
or
inc
dec
sbb
(bad)
and
test
test
mov
inc
imul
popf
cld
in
pushf
adc
icebp
cwde
ret
dec
cs
push
sub
iret
mov
pop
test
and
pop
cmp
inc
daa
cmps
and
stc
adc
leave
jo
adc
sbb
add
push
js
mov
repnz
or
dec
(bad)
retf
mov
jnp
add
mov
stos
pop
and
add
xor
mov
sbb
add
lods
mov
xchg
aas
jl
dec
fisubr
pop
enter
mov
enter
sub
jno
xor
or
mov
or
inc
cmp
into
je
dec
add
(bad)
in
cdq
jbe
(bad)
adc
movs
adc
cmp
pop
call
outs
dec
call
addr16
jno
idiv
outs
jne
ins
shl
or
je
xchg
sbb
pop
jo
mov
add
dec
xchg
push
mov
or
iret
je
mov
adc
leave
cmp
cwde
in
add
mov
mov
dec
jnp
add
mov
shl
mov
jne
pop
mov
push
cmp
jle
and
mov
mov
push
imul
ins
loop
xchg
inc
xchg
sbb
jge
imul
dec
mov
sub
aad
push
div
int
sub
adc
add
loopne
pop
push
scas
jl
jecxz
adc
mov
push
repnz
scas
jl
popf
push
push
mov
pop
cmp
rcr
push
inc
mov
lods
xor
sub
or
out
push
inc
enter
mov
jmp
(bad)
jae
mov
das
test
pop
pop
vorps
add
adc
jo
mov
push
xor
nop
aad
dec
add
rol
repz
pop
adc
push
and
pop
xchg
dec
sbb
sbb
jmp
imul
mov
add
loope
sbb
xor
fadd
imul
nop
fiadd
outs
(bad)
(bad)
scas
jecxz
or
sbb
les
daa
mov
or
jne
and
xor
lea
add
jg
cmp
gs
cmps
push
(bad)
xchg
in
mov
cmp
in
call
cmp
dec
jmp
lea
sub
inc
xor
loopne
bound
mov
cmp
je
jecxz
mov
add
inc
jmp
dec
cs
movlps
xor
std
nop
and
stos
pushf
jmp
push
adc
mov
pop
jmp
dec
sbb
inc
push
cmc
mov
xor
rol
mov
push
or
push
sub
add
jmp
test
sbb
shr
cmp
dec
cmp
sti
pop
pop
cmp
and
loopne
add
int3
mov
mov
(bad)
lock
xchg
mov
mov
lods
adc
mov
mov
dec
lahf
fstp
mov
mov
loope
pop
daa
je
push
push
mov
jbe
push
fs
nop
xor
dec
push
dec
(bad)
jmp
cmp
sub
sbb
or
rcr
(bad)
int
adc
lahf
inc
mov
mov
add
inc
scas
loopne
int3
adc
xor
loope
xchg
mov
adc
neg
pop
mov
mov
push
or
inc
mov
lahf
jle
mov
jl
mov
and
jmp
fwait
ins
inc
mov
fadd
or
or
repz
cs
(bad)
cmp
loopne
inc
(bad)
je
int
mov
aam
or
sub
in
push
adc
or
xor
push
pop
shl
and
add
pop
push
pop
cmp
and
push
mov
sbb
cwde
push
bound
push
push
mov
es
pop
in
arpl
dec
cli
or
mov
movs
sbb
push
pop
inc
xchg
xchg
and
jl
cmp
movntq
test
add
sar
and
sub
push
inc
clc
push
imul
rcr
add
rcl
mov
sub
lods
adc
add
dec
pop
or
test
pusha
add
or
add
mov
into
scas
add
hlt
inc
std
ins
mov
ja
dec
xchg
iret
daa
(bad)
scas
stos
sub
je
xchg
cmp
int
(bad)
pop
push
data16
out
dec
pop
xchg
and
cmps
ror
mov
loop
push
lea
loopne
xor
rol
call
repnz
rcr
mov
pop
ret
push
xchg
cmp
push
push
xor
sbb
adc
in
test
xor
das
sbb
rcr
sbb
cmp
das
test
add
push
lea
add
std
cmp
leave
sar
in
and
mov
ficom
loop
or
add
adc
shl
rcl
cs
sbb
mov
cmp
clc
mov
push
movntq
jno
mov
cdq
add
in
test
mov
push
lds
test
adc
jmp
inc
push
mov
aas
nop
inc
shr
(bad)
pop
pusha
xor
out
mov
cmp
mov
push
push
sub
or
xchg
add
and
jp
add
mov
mov
nop
and
mov
fsub
loop
cmp
cmc
call
push
hlt
mov
add
pop
loop
or
mov
in
push
lea
and
retf
mov
push
outs
fsub
sahf
add
jg
jns
mov
xchg
add
call
jmp
push
adc
les
pusha
mov
add
popf
mov
in
mov
pusha
fsub
push
xchg
data16
xchg
sub
inc
pop
xchg
add
cmp
jecxz
add
fs
push
or
rcr
cmp
jo
addr16
div
mov
ins
mov
int
push
test
ja
or
add
add
rcl
cmp
add
outs
xchg
repnz
movzx
test
mov
ss
sbb
mov
jp
xchg
push
jmp
leave
in
cmp
lahf
xor
dec
jae
sbb
je
jp
pop
dec
mov
push
sbb
sbb
jecxz
add
cmp
jb
loopne
jge
mov
mov
inc
mov
sbb
add
dec
xor
ret
mov
lea
mov
std
xchg
retf
ss
loope
xor
sub
fs
xor
jae
sub
mov
cmp
jne
je
add
push
sbb
adc
mov
sub
xchg
and
inc
fisttp
je
mov
cmp
daa
ret
sub
clc
and
ins
inc
cmps
int
add
movs
pop
jbe
mov
in
pop
jns
sub
adc
fiadd
into
jg
idiv
push
in
add
sbb
test
sub
adc
cmp
add
and
jb
add
daa
sub
jne
lea
pusha
lods
stc
cmp
jo
mov
add
shl
test
sbb
cld
add
push
mov
sbb
mov
sub
sti
mov
cmc
sub
xor
add
loope
pusha
mov
push
lea
sub
push
jo
retf
jmp
pop
pop
mov
pop
mov
loop
stos
or
outs
sbb
sbb
aas
push
jae
leave
js
movs
cmp
cmp
ja
xchg
add
call
ins
lods
inc
sub
aad
cmp
sti
add
jbe
lds
or
jmp
xchg
cwde
inc
je
xor
cmp
xchg
and
sbb
pop
rol
or
cmp
adc
xor
pop
loop
push
movs
xor
sbb
and
(bad)
mov
xlat
test
xor
cld
jb
dec
pop
and
cli
jmp
mov
out
shl
mov
movsx
inc
xchg
inc
int3
in
mov
inc
pop
sub
sub
inc
das
and
dec
in
push
xchg
in
pop
mov
enter
pop
sbb
mov
fisub
js
adc
add
loopne
adc
pop
adc
inc
shl
fimul
mov
ffreep
xchg
data16
xor
jbe
mov
xor
push
push
push
mov
pushf
or
fmul
clc
idiv
cmc
rcr
je
xchg
or
add
and
add
jmp
push
adc
enter
shl
shl
push
icebp
xchg
pop
out
pop
and
mov
adc
jmp
inc
adc
add
or
push
mov
dec
or
jl
push
pop
push
or
sbb
ror
add
out
pop
aas
loope
xchg
imul
fild
sub
xchg
xor
sbb
adc
cmp
adc
xor
(bad)
jmp
push
shl
mov
sub
pop
dec
adc
push
push
push
pop
push
pop
mov
pop
jne
pop
push
xor
and
imul
or
idiv
push
stos
mov
jge
inc
adc
jb
or
(bad)
jg
or
add
add
in
dec
xchg
mov
test
adc
adc
pop
push
lahf
(bad)
daa
mov
or
sbb
jg
nop
call
mov
cmp
jae
jnp
pop
dec
int3
or
mov
dec
add
addr16
int
mov
xor
test
(bad)
jb
or
push
cmp
xchg
call
xchg
add
mov
outs
js
fidivr
fidivr
add
add
jge
rol
push
add
inc
xchg
lock
push
xor
adc
scas
add
pusha
pop
or
add
lock
or
ror
and
into
js
adc
sub
shl
mov
mov
adc
cli
jb
add
xor
loopne
jp
or
je
or
adc
int3
pop
push
sub
test
push
add
jns
push
push
push
sbb
pop
fild
xchg
sbb
inc
dec
cmp
xchg
test
jg
adc
dec
add
jmp
(bad)
mov
test
pop
cmp
jmp
sub
inc
xchg
xchg
cmc
adc
shl
ds
aaa
ret
sbb
add
addr16
out
cwde
ret
or
je
inc
(bad)
popf
or
push
fld
lds
mov
add
lods
mov
add
mul
push
mov
jle
adc
lea
push
xchg
sub
inc
adc
adc
cmp
dec
hlt
clc
loop
aaa
xchg
xlat
(bad)
add
mov
mov
inc
adc
push
daa
daa
mov
dec
test
pop
mov
ja
call
mov
mov
jmp
pop
mov
sti
or
xchg
pop
enter
xchg
ret
xchg
mov
xchg
rol
or
fwait
jmp
and
sar
icebp
jno
call
push
pop
clc
ins
sub
out
jge
add
cmp
je
rol
add
or
xchg
xchg
push
das
mov
popf
(bad)
mov
sub
test
add
xchg
adc
scas
fwait
das
lea
fimul
es
add
pop
rol
fild
loopne
je
xchg
movq
push
dec
adc
push
and
mov
sahf
dec
push
pop
outs
inc
or
jns
mov
jbe
jle
out
outs
call
jg
lea
jne
and
in
sub
in
test
mov
in
pop
ffreep
lea
lea
inc
out
repz
rol
add
mov
xor
dec
mov
xor
xchg
mov
inc
inc
push
test
pop
pop
aam
retf
ret
mov
push
mov
inc
push
mov
dec
cmp
shr
dec
pop
fiadd
mov
or
shl
push
popa
adc
sar
ret
movs
jl
and
sbb
sub
loope
adc
or
fisubr
ins
icebp
mov
push
or
arpl
sub
cs
cli
xchg
fs
sbb
arpl
mov
pop
add
shl
or
and
mov
pop
inc
pop
sub
mov
arpl
mov
mov
mov
test
enter
sbb
xor
push
add
call
sti
inc
loop
js
outs
daa
cld
inc
enter
mov
pop
adc
mov
push
pop
mul
xor
sti
aaa
add
add
push
lea
xchg
hlt
mov
in
(bad)
jne
dec
sti
xor
cld
ficom
push
push
out
mov
inc
sub
push
sub
cmp
mov
rol
fmul
xlat
push
std
dec
and
mov
mov
inc
push
sbb
lods
jmp
and
je
adc
push
sub
nop
mov
aaa
mov
loope
push
lahf
mov
leave
sub
mov
cmp
imul
sti
sbb
enter
and
or
inc
mov
cld
jmp
(bad)
dec
inc
or
mov
cli
push
retf
mov
xchg
(bad)
iret
inc
jo
sbb
cmp
ja
test
dec
and
xor
add
inc
add
xor
stos
ss
mov
push
xor
adc
fsubr
fidivr
inc
push
loope
dec
aad
jmp
dec
jmp
mov
rcl
and
lods
xor
mov
lods
dec
out
icebp
(bad)
(bad)
jne
sub
push
adc
jo
pop
sub
test
(bad)
aas
jmp
inc
std
jne
je
fld
movs
mov
add
ja
inc
and
and
(bad)
pop
ffreep
jl
lds
adc
or
push
sbb
inc
fistp
add
mov
and
and
xor
call
je
push
jmp
push
push
imul
(bad)
jmp
inc
lea
push
scas
cli
(bad)
stos
aas
rol
jnp
jae
cmp
outs
inc
call
jge
movs
rol
adc
mov
mov
test
(bad)
loopne
jmp
leave
inc
push
lea
(bad)
ins
sub
xchg
sbb
fmul
jmp
cli
popa
sub
and
std
sti
fs
cmp
or
call
(bad)
mov
add
or
sbb
mov
add
inc
or
xor
(bad)
ss
idiv
cmp
inc
mov
mov
lock
mov
fwait
and
pop
fsub
xor
and
dec
repz
loopne
mov
loop
jle
sbb
idiv
jle
xlat
loop
xor
inc
dec
jne
dec
jge
dec
out
stos
mov
cwde
ins
cwde
add
mov
rcl
cmps
cmp
xor
push
es
movs
push
(bad)
fmul
inc
xor
je
mov
push
ss
cmps
loop
push
and
pop
adc
xor
xchg
ins
mov
sti
rep
and
adc
xor
jno
movs
push
mov
shl
inc
call
push
test
push
mov
aam
sbb
xlat
test
jmp
adc
in
add
ror
ins
inc
imul
imul
clc
add
rcr
dec
out
inc
sub
inc
jmp
(bad)
cmp
or
mov
mov
add
jmp
aad
out
aaa
pop
sbb
jmp
ja
pop
sbb
daa
cli
push
mov
pop
jmp
int3
inc
mov
and
sub
daa
loopne
xor
add
sar
mov
adc
and
mov
mov
in
xor
jecxz
xchg
sbb
sbb
ror
xchg
(bad)
adc
jbe
les
aaa
cmp
ret
mov
sbb
dec
or
aam
sbb
sub
rol
or
inc
push
jo
sub
dec
mov
cmp
sbb
outs
fidivr
je
es
pop
cmp
jne
sbb
pop
adc
nop
data16
inc
jne
mov
fstp
data16
stos
cmps
cmp
les
xor
(bad)
or
(bad)
xchg
js
call
sbb
sbb
cwde
daa
sbb
imul
jle
out
sub
fadd
or
sbb
cmp
imul
cld
push
inc
add
clc
lock
jns
daa
mov
(bad)
cmc
or
fbstp
dec
mov
push
(bad)
outs
pop
push
sbb
xchg
jbe
out
ficomp
pop
and
dec
cdq
fs
fistp
clc
lock
jo
and
ins
or
popa
enter
or
ins
leave
call
add
mov
xor
or
xchg
cs
sbb
ins
rol
inc
inc
xlat
and
pusha
or
or
in
push
test
daa
or
(bad)
push
push
scas
pop
das
push
push
fistp
pop
push
stos
lods
pushf
inc
mov
cmp
jle
add
mov
inc
or
add
sbb
lahf
lea
int3
inc
push
cmc
lods
xchg
sub
cmps
or
jbe
sub
bound
add
xchg
loope
mov
push
imul
xor
inc
pusha
loope
pop
dec
icebp
dec
test
pop
and
cmp
inc
outs
or
inc
or
push
jmp
sbb
jbe
xor
(bad)
xchg
xchg
clc
pop
pop
retf
leave
(bad)
push
inc
lock
clc
fistp
lea
test
inc
sub
xchg
adc
xchg
pop
jb
sub
and
jb
inc
inc
xor
cmp
inc
test
jle
sbb
test
ins
sahf
and
loop
mov
cmp
jmp
push
sbb
inc
adc
xchg
nop
pop
sub
mov
xchg
xchg
push
sbb
ins
jg
jge
pop
daa
mov
pop
add
icebp
sub
retf
stos
adc
ret
das
ret
jge
push
jno
xchg
mov
mov
xlat
retf
add
mov
jns
cmp
ret
popf
add
getsec
pop
inc
fadd
int3
enter
push
ins
int3
sbb
ror
jbe
and
ja
shl
je
ror
xchg
stc
adc
adc
cli
and
sar
adc
jp
(bad)
mov
xor
or
jmp
in
fst
sub
scas
xor
fs
nop
inc
pop
and
mov
(bad)
mov
xchg
test
stc
les
jmp
fwait
call
inc
cmps
inc
jnp
xlat
add
sbb
aam
push
pop
mov
pop
clc
lahf
call
int3
inc
add
add
popa
mov
and
test
add
loop
ret
mov
adc
clc
mov
mov
inc
cli
ins
xor
push
clc
pop
jp
out
stc
add
sub
mov
sbb
daa
sbb
pop
add
or
hlt
out
shl
push
and
jno
lds
jne
fs
and
lods
mov
mov
or
push
jb
push
xor
push
and
inc
or
add
sub
add
push
xor
inc
fisttp
mov
inc
push
test
stc
cmp
add
pop
add
push
inc
dec
mov
or
or
call
pop
ins
les
push
push
(bad)
(bad)
xor
mov
stos
mov
add
xchg
mov
shl
and
lods
sub
lea
pushf
push
adc
mov
xor
adc
clc
nop
sub
push
push
popa
mov
pusha
cmp
add
cwde
sar
in
xchg
push
aam
xlat
push
leave
bound
out
jmp
push
add
movs
add
lods
sbb
scas
adc
inc
jb
inc
mov
stos
add
inc
clc
cmp
pop
jb
push
pop
push
or
add
aaa
ds
test
xlat
jo
push
cmc
je
in
pop
push
add
jne
push
cmp
repnz
jae
enter
push
sbb
push
or
packsswb
mov
jb
or
cvtps2pi
adc
repnz
pop
mov
imul
jle
cmps
mov
and
(bad)
fisub
icebp
sub
sbb
add
adc
push
and
mov
sahf
add
std
sbb
daa
adc
and
mov
sbb
adc
jno
inc
push
ja
adc
aad
jmp
pusha
pop
scas
pop
sbb
pop
lods
adc
ret
mov
inc
bound
or
or
and
fisubr
push
xchg
retf
mov
or
or
das
out
jbe
mov
add
cmp
dec
retf
test
(bad)
adc
repz
mov
xor
mov
and
lds
cmp
add
mov
loopne
ins
or
or
je
add
repz
inc
add
sub
add
and
fiadd
push
dec
jmp
loopne
ret
xchg
add
cmp
mov
fstp
scas
push
add
add
ss
mov
xchg
inc
add
mov
mov
icebp
or
xchg
retf
xchg
mov
or
aas
push
es
add
cmp
mov
stos
test
xor
pop
dec
imul
out
or
or
test
or
mov
stos
rol
cmp
inc
pop
jmp
je
cmp
cmp
pop
aaa
leave
and
and
mov
mov
rcr
push
mov
in
mov
adc
jg
xchg
ret
jb
movsx
(bad)
jle
je
clc
imul
bound
push
lock
mov
add
repz
inc
test
sub
jmp
jl
hlt
mov
xlat
pop
add
push
ds
and
sbb
arpl
add
pop
cli
mov
adc
mov
mov
shr
mov
popa
push
in
add
mov
dec
jne
jne
cmp
xor
xchg
dec
push
imul
fwait
add
leave
inc
mov
sub
sar
mov
das
add
sub
or
adc
mov
ret
test
jl
js
cmps
pop
jno
xchg
adc
xchg
mov
inc
and
push
pusha
leave
lea
dec
xchg
mov
and
push
jl
push
in
clc
add
or
add
add
ja
or
pop
dec
cmp
mov
pop
hlt
jle
push
les
mov
sbb
shl
push
shl
bound
push
mov
xor
push
push
add
xchg
sbb
movs
fdiv
or
xchg
pushf
jmp
retf
fs
pop
jl
pop
pop
mov
loop
retf
data16
loopne
or
xchg
cmps
cmp
call
iret
xchg
add
inc
adc
mov
sbb
(bad)
sbb
pusha
in
xor
add
outs
or
call
cdq
rcr
mov
sbb
in
mov
adc
aaa
and
sbb
inc
push
clc
mov
adc
jne
adc
rcr
xor
outs
mov
loop
(bad)
sbb
cmp
cmp
inc
cmps
pop
adc
sbb
dec
cmp
sbb
or
cmp
dec
shl
jecxz
mov
add
adc
enter
or
rcr
mov
ror
pop
mov
movs
push
stos
rol
repz
cmp
adc
test
nop
jle
pop
cmp
inc
push
cmp
or
sbb
mov
mov
add
push
mov
popa
shr
in
dec
mov
(bad)
(bad)
push
or
dec
sub
or
or
or
mov
stos
add
or
cld
inc
add
push
les
jl
mov
lock
ins
inc
shr
push
and
cmp
jb
adc
repz
fiadd
xchg
ret
adc
pop
je
(bad)
ins
jbe
in
cdq
aam
mov
cmp
movs
push
hlt
jg
pop
sub
add
jl
arpl
push
jmp
cmp
or
je
xchg
mov
push
mov
sbb
xor
rcr
jmp
outs
sub
cmc
pop
inc
iret
je
pop
add
test
pop
aam
jmp
sbb
push
add
mov
xchg
loope
mov
cmp
sbb
adc
jnp
pop
rcl
adc
leave
clc
arpl
aas
dec
je
dec
jne
cmps
add
cs
shl
jno
push
or
sbb
cmp
inc
xor
cmp
ficomp
sub
sub
push
inc
ja
cdq
sub
xchg
sbb
aaa
and
push
icebp
enter
pushf
sar
inc
call
dec
or
test
sub
dec
shr
xchg
loop
std
js
or
mov
add
aaa
dec
retf
lea
xor
in
sub
and
and
add
push
xlat
adc
push
xchg
lods
movs
xor
test
sbb
mov
jb
cdq
dec
(bad)
push
cmp
outs
inc
loopne
jae
and
push
lea
cmp
jl
cmp
add
inc
mov
shl
add
push
hlt
add
clc
das
rol
pop
lock
jne
add
xchg
or
out
or
add
je
mov
jae
les
sbb
sbb
and
xor
rcl
cmp
add
and
out
or
push
mov
call
cmc
and
xor
int3
push
lods
or
das
or
cmps
lods
fs
adc
scas
or
xchg
mov
or
std
mov
hlt
jne
adc
fcmovnu
out
add
or
push
aad
das
enter
add
adc
pop
or
sub
dec
pop
jle
(bad)
cmps
jg
mov
pop
add
or
add
jecxz
xchg
push
xchg
scas
sub
add
lea
push
push
in
push
add
ins
add
adc
shr
int3
jg
jg
sbb
pop
movs
add
mov
add
pop
mov
aam
add
jecxz
test
jae
mov
js
(bad)
sub
inc
xchg
add
or
pop
ins
and
dec
hlt
adc
test
pop
pop
dec
push
call
sbb
nop
lea
repz
fiadd
and
and
jbe
ret
push
add
push
sbb
in
and
dec
jg
adc
ja
fld1
or
adc
xchg
hlt
or
mov
and
or
jge
lock
(bad)
adc
cmp
int3
sbb
adc
retf
ins
pop
cwde
sbb
cmps
mov
push
gs
scas
cmp
jg
dec
xchg
adc
push
xor
jae
scas
add
jno
and
sbb
test
jns
inc
bound
pop
jp
and
sbb
es
loopne
or
adc
push
or
jnp
es
xchg
inc
xor
jmp
pop
cmp
ins
and
add
push
mov
cmp
(bad)
bnd
pusha
push
adc
cmp
fcos
mov
xlat
je
cmp
arpl
mov
and
cmp
jb
test
xchg
or
lock
rol
data16
jo
sbb
(bad)
out
fs
mov
push
call
mov
add
push
cmp
ret
cmc
pop
adc
sub
pop
adc
daa
clc
add
push
or
push
push
push
jl
pop
out
sbb
push
call
call
dec
retf
das
xor
(bad)
sti
jmp
ficom
enter
xchg
inc
js
push
loopne
cmp
inc
xor
in
add
pop
jl
int3
sbb
and
xchg
call
arpl
jo
cmp
loopne
gs
push
test
push
push
xor
cmp
add
cld
je
add
mov
pop
es
rol
mov
jmp
stc
hlt
jle
sub
push
push
inc
pop
pop
into
jmp
jle
inc
inc
add
or
rol
fldcw
xor
or
sub
add
dec
push
jmp
add
inc
push
xchg
sbb
inc
loopne
push
jg
cmp
jbe
push
sub
mov
js
(bad)
(bad)
jmp
das
aam
pop
xchg
loopne
out
sbb
push
enter
mov
or
cld
or
imul
mov
sbb
or
xor
adc
je
leave
add
ret
aad
jo
sub
or
or
test
xor
cmp
cld
adc
inc
or
xor
(bad)
or
push
inc
and
cld
cmp
mov
add
or
popa
aad
jne
imul
inc
out
repz
jmp
repnz
sbb
ret
sahf
lods
dec
scas
jmp
or
inc
add
sbb
out
dec
leave
out
lock
mov
dec
sub
scas
adc
lds
dec
adc
and
loope
or
mov
mov
ja
pop
jmp
fdivr
lods
push
add
push
cmps
adc
mov
in
sbb
and
mov
gs
xchg
jg
test
inc
push
xchg
aam
arpl
clc
sub
je
add
add
cmps
cmp
sahf
hlt
(bad)
sub
addr16
add
inc
and
or
ds
mov
mov
adc
rcr
inc
enter
daa
rol
or
(bad)
jmp
rcr
or
div
aam
jg
ins
mul
inc
mul
add
jb
cmp
or
mov
pusha
mov
dec
cwde
and
adc
hlt
xchg
add
mov
sbb
adc
daa
mov
test
adc
push
push
dec
push
mov
je
mov
push
mov
and
jg
lea
in
pop
sub
das
into
in
fdivr
dec
inc
mov
cmp
je
cmps
mov
add
inc
push
push
sub
sbb
es
pushf
xchg
out
rcl
xchg
loopne
ss
adc
rcr
mov
loopne
add
lds
out
push
mov
dec
loopne
adc
movs
movs
mov
aad
xchg
sti
es
pop
or
lahf
call
rol
mov
aam
jb
xchg
out
pminsw
jmp
popf
xor
pop
or
add
bound
sbb
or
sbb
mov
adc
mov
mov
mov
mov
mov
mov
sbb
xor
mov
fnsave
and
pop
sbb
hlt
hlt
stc
push
dec
out
clc
dec
je
or
inc
repnz
aaa
pop
imul
ins
jne
ret
or
cmps
pusha
sub
fsubr
mov
enter
js
add
mov
inc
xor
movs
xchg
push
jnp
add
call
imul
sub
js
sub
movs
mov
lea
xchg
outs
test
jmp
call
jmp
sub
push
or
or
dec
xchg
mov
mov
repz
movs
hlt
lea
imul
stc
dec
push
sub
je
test
sti
ror
cmp
xchg
pop
aaa
jne
xchg
push
mov
das
mov
jne
pop
cmps
mov
sbb
pusha
mov
or
fsubr
sbb
mov
ja
cmp
or
addr16
xor
addr16
add
push
ins
cmp
push
adc
pop
in
dec
add
sub
mov
adc
dec
mov
sbb
test
shl
mov
adc
inc
mov
mov
dec
jmp
fucom
outs
push
mov
push
push
dec
dec
push
or
push
cmp
fsincos
rcl
setp
aaa
inc
jmp
mov
call
dec
aaa
dec
jmp
sub
sbb
cmp
loope
xchg
push
sbb
retf
sub
push
adc
add
sbb
std
cmps
inc
push
jb
clc
sti
sti
clc
sti
cmp
sub
ins
push
jb
imul
mov
adc
mov
lds
lahf
push
sub
sti
mov
xchg
pop
rol
ret
sti
movs
std
cmc
or
jne
movs
addr16
mov
jmp
cmp
sbb
pop
rol
btc
and
mov
jmp
mov
adc
pop
sub
rcl
sub
rcl
int
mov
(bad)
cmp
shr
inc
cwde
and
outs
fld
sti
loope
xchg
sub
cmp
test
in
or
sti
test
data16
rol
cmp
inc
test
ror
jecxz
push
retf
or
push
inc
mov
pop
pusha
cld
std
test
retf
sti
clc
sti
sti
xchg
xor
int3
das
push
loope
mov
into
xor
xchg
mov
(bad)
sub
sti
inc
inc
inc
leave
and
dec
mov
nop
and
in
sti
hlt
sti
hlt
sti
dec
mov
clc
sti
inc
xchg
ror
mov
add
cmps
je
sbb
dec
sti
leave
add
and
sti
mov
fadd
in
sti
out
imul
dec
ror
sti
aaa
cmc
sbb
push
out
xor
dec
fsubrp
xchg
sbb
push
repnz
sar
ret
pop
test
sti
stos
clc
sti
call
add
sub
sub
adc
and
cmp
in
or
add
mov
jne
add
inc
dec
cmp
adc
aas
dec
sub
dec
jmp
mov
add
mov
and
adc
test
mov
xor
adc
movs
inc
aam
xchg
jle
mov
add
or
sbb
cdq
xor
loop
fwait
xor
cdq
adc
xor
cwde
jp
hlt
retf
jl
mov
daa
add
cmp
push
pop
int
out
adc
fldenv
push
cmp
add
nop
outs
push
push
sbb
and
ret
retf
xchg
fwait
(bad)
sti
(bad)
sti
sbb
adc
mov
pop
xchg
mov
movs
sbb
add
popf
cmp
test
cs
test
ins
push
push
pop
in
add
aaa
ss
rep
mov
or
mov
push
jne
rcr
dec
iret
and
jb
hlt
div
mov
or
addr16
mov
idiv
icebp
sub
sbb
cmp
adc
in
inc
bnd
lea
lea
or
cmp
inc
adc
jae
inc
in
mov
mov
nop
jmp
pop
sbb
push
ret
lods
add
inc
add
cmp
mov
dec
add
lock
jl
into
enter
push
hlt
test
dec
jmp
mov
pushw
pop
jmp
ret
dec
dec
and
and
mov
mov
loop
mov
mov
xor
push
outs
xchg
fs
shr
sbb
xor
out
dec
adc
dec
(bad)
sub
add
stos
enter
add
adc
sbb
test
leave
pusha
xlat
inc
fnstsw
cdq
clc
cmp
rol
or
or
fidivr
dec
sbb
ficom
cli
es
ins
shl
adc
or
push
push
xchg
sbb
retf
lock
into
mov
or
add
data16
push
adc
call
sbb
fmul
adc
mov
fwait
inc
aaa
add
adc
push
adc
js
add
fcom
(bad)
sbb
xor
sbb
push
(bad)
xchg
cmp
pop
test
add
mov
or
stos
add
les
call
es
or
jae
pop
jmp
adc
adc
mov
pusha
push
sbb
fdivr
outs
push
ret
push
sub
push
lock
and
aas
jb
mov
int
dec
jbe
dec
push
cdq
in
mov
nop
movs
out
add
and
clc
shl
fimul
shl
arpl
das
inc
xchg
xchg
das
fwait
or
pop
push
push
jb
pop
sbb
mov
add
add
or
icebp
inc
cmp
fldcw
loopne
daa
jg
(bad)
xor
pop
mov
not
xor
stc
xchg
lods
sub
push
dec
inc
mov
jg
push
jmp
in
add
sub
mov
or
jnp
cld
push
push
dec
or
sar
mov
(bad)
cmp
push
adc
xor
mov
jmp
test
xor
xor
jmp
inc
test
mov
in
jle
mov
(bad)
push
push
test
(bad)
push
mov
mov
fdivr
sar
cmps
add
(bad)
hlt
retf
sbb
je
or
sbb
stos
sbb
add
jle
push
pop
and
or
dec
cmp
and
adc
push
dec
sbb
aam
lds
jne
out
add
adc
add
push
jle
stos
xchg
ror
div
adc
cmp
add
jmp
ror
fcom
hlt
hlt
je
mov
add
fist
loopne
es
loop
mov
dec
ss
and
fld
mov
mov
sub
(bad)
mov
xchg
mov
cmp
inc
mov
inc
ja
lods
xchg
dec
jae
cmp
je
mov
or
jns
mov
mov
push
push
aas
(bad)
clc
lock
mov
pusha
lods
and
push
add
ror
dec
jmp
push
data16
xor
bound
lock
lea
push
or
or
cld
(bad)
xchg
scas
pop
pusha
ffree
mov
add
adc
push
or
montmul
cmps
and
push
mov
mov
arpl
enter
pusha
call
cmp
adc
xchg
lods
sub
shl
jb
mov
jne
dec
or
lock
adc
imul
jmp
fcom
sub
pushf
inc
fst
jnp
fwait
inc
or
cmp
or
xor
and
out
add
ficomp
or
cmp
cwde
fldenv
test
jmp
or
(bad)
fnstenv
push
(bad)
push
cld
push
jg
dec
out
mov
add
jmp
xor
push
dec
int
pmullw
sub
in
aas
imul
sub
sub
dec
sbb
adc
mov
dec
es
in
sub
add
add
ror
nop
and
pop
xor
mov
add
sub
or
and
add
pop
and
inc
add
test
cld
pop
pop
je
inc
add
ret
and
cdq
mov
pop
lock
push
mov
dec
xor
outs
jo
push
and
adc
(bad)
lods
or
lock
jne
push
add
cdq
add
add
xor
in
test
jns
cmp
fldcw
es
xchg
or
mov
jb
mov
mov
adc
in
or
enter
adc
test
shl
in
and
and
add
in
fs
aad
add
or
nop
sub
mov
jbe
data16
xchg
inc
push
daa
xchg
inc
add
ja
xchg
xchg
dec
sub
imul
in
in
add
adc
push
sbb
leave
out
movs
test
add
retf
int3
es
stc
or
mov
loopne
add
cmp
mov
add
jge
pop
pop
inc
add
pop
jge
and
in
fsubr
mov
xchg
inc
inc
add
and
leave
sbb
jg
adc
clc
mov
pop
or
and
add
mov
inc
cs
mov
or
or
je
mov
lea
ins
les
test
and
in
pop
mov
mov
je
out
ins
enter
mov
jb
inc
dec
fxch
nop
pop
add
outs
test
inc
jb
scas
test
movs
push
jb
sbb
test
and
add
pop
packsswb
sbb
aaa
lods
in
sar
or
xor
or
mov
pop
adc
sbb
leave
sbb
call
or
mov
std
xor
mov
jmp
lea
or
push
inc
push
sahf
or
fisubr
addr16
xor
retf
adc
popa
and
pop
enter
pop
clc
nop
mov
push
pop
or
xor
add
fwait
loope
push
shl
or
stos
add
add
outs
pop
pop
adc
test
in
dec
adc
mov
std
mov
push
lods
adc
jmp
push
add
in
popa
push
push
add
adc
shl
adc
add
jmp
ficom
or
add
jb
push
inc
call
inc
push
gs
pop
xor
mov
inc
mov
inc
rcr
das
sub
shl
push
jne
out
daa
sbb
in
or
xchg
add
xor
jecxz
inc
dec
fdiv
mov
ror
ins
cmp
add
cmp
inc
jmp
lock
into
xlat
push
or
jb
inc
adc
call
jmp
inc
inc
inc
pop
je
pop
es
pusha
in
ds
pop
int
or
cmp
pop
inc
enter
or
mov
mov
adc
add
js
divps
xchg
xor
add
add
ss
mov
cs
pop
and
or
sbb
fcmovu
xor
xor
inc
pop
es
mov
arpl
xchg
pop
adc
retf
push
or
cwde
iret
or
enter
cmp
js
out
dec
inc
mov
add
sbb
jmp
adc
mov
sbb
jmp
adc
std
sub
lea
pop
mov
xchg
dec
inc
int
(bad)
pop
jo
inc
ror
int
out
lea
cs
adc
mov
mov
add
push
push
add
loop
clc
push
mov
pop
jne
cli
adc
fisubr
pop
pop
and
je
(bad)
leave
in
mov
lock
or
mov
push
sar
inc
push
adc
call
lods
(bad)
je
sbb
gs
cld
sub
jb
push
inc
jno
pop
dec
dec
(bad)
call
push
out
mov
or
mov
scas
rcr
mov
shl
in
mov
sub
les
push
xor
sub
test
or
adc
shl
test
leave
adc
inc
mov
xchg
mov
push
and
sub
cmp
arpl
add
and
sbb
lds
mov
sbb
or
mov
pop
mov
xor
(bad)
add
mov
jnp
jbe
fs
mov
lock
and
sbb
cmp
xchg
test
nop
sub
lea
inc
scas
or
cs
jb
in
mov
lea
cmp
xchg
push
adc
fs
sub
sbb
xor
pop
rcl
push
loopne
sahf
pop
pop
ins
push
xor
mov
cmp
addr16
or
adc
pusha
push
lods
sbb
push
mov
mov
pop
or
neg
lock
gs
mov
xor
dec
mov
push
jae
lock
cdq
and
dec
lock
xchg
and
xor
and
mov
mov
test
cs
dec
ret
or
int3
loopne
loope
add
(bad)
lfs
add
and
leave
add
or
dec
sub
shr
dec
jmp
aam
into
pop
jne
ror
push
cmp
popf
cli
cmp
iret
je
inc
inc
fs
or
fisubr
pushf
or
push
mov
hlt
push
imul
pop
jno
sar
sti
inc
mov
lock
je
ret
adc
mov
in
les
retf
(bad)
enter
pop
add
push
fsubr
aad
cmp
jle
push
cli
pop
ja
xchg
sar
idiv
pop
mov
or
push
pop
ror
addr16
ja
fwait
and
pop
mov
rcl
pusha
enter
out
addr16
or
je
sub
mov
jns
inc
xchg
ss
ss
and
mov
arpl
mov
popa
cli
les
popf
pop
sub
bound
nop
add
leave
ss
leave
ss
cmp
nop
fld
repnz
mov
and
icebp
xchg
push
inc
js
nop
inc
rcr
cmp
imul
mov
mov
mov
pop
and
imul
adc
and
xor
daa
daa
inc
les
inc
cmp
daa
daa
daa
das
es
pop
aam
lea
and
in
cdq
in
push
jo
rcr
in
xchg
cmps
mov
lea
xor
pop
dec
push
enter
ret
mov
je
lea
nop
sub
jns
clc
push
sbb
push
mov
push
jns
xor
test
jecxz
pop
add
mov
jnp
xor
xchg
fsubr
int3
mov
in
retf
int3
and
xchg
mov
and
fdiv
and
fisttp
daa
std
or
xchg
xchg
in
in
mov
jnp
mov
call
xor
and
lahf
dec
push
xchg
cli
mov
mov
mov
xchg
xor
shl
mov
pushf
dec
repnz
call
inc
cs
inc
leave
adc
mov
xor
xor
lods
pop
push
cdq
in
jae
(bad)
mov
addr16
retf
lods
retf
enter
xor
pop
call
push
cwde
lods
enter
pop
dec
mov
or
(bad)
or
mov
add
enter
adc
jb
aam
in
and
xchg
pop
sub
inc
mov
retf
inc
push
jo
mov
dec
and
dec
jb
les
in
xor
in
push
dec
mov
mov
int3
jmp
add
jl
sub
jmp
adc
ret
jle
add
or
fnsave
and
je
cs
jns
dec
movs
push
sub
sub
loop
out
enter
inc
pop
dec
jg
test
je
add
push
stos
or
mul
mov
adc
scas
cmp
pop
or
rol
sbb
pop
push
fadd
mov
add
sub
ret
xor
movs
mov
xchg
js
sbb
rol
mov
ror
jmp
xchg
cld
push
call
mov
push
adc
mov
dec
cld
sub
iret
mov
jg
lock
ror
lods
ret
xor
and
fcom
inc
ret
test
jo
popa
shl
dec
push
push
push
lea
in
ret
mov
cmp
shl
ror
lock
sar
inc
(bad)
movsx
and
sbb
mov
or
mov
loopne
sbb
sub
cmc
cmp
mov
sbb
or
xchg
ror
cdq
pusha
dec
adc
jne
or
mov
fwait
and
inc
adc
and
adc
mov
fadd
rol
and
sub
inc
mov
add
and
mov
add
inc
addr16
pop
push
and
mov
cmp
and
sbb
mov
mov
movs
add
ror
xchg
xor
in
mov
fst
je
jmp
mov
retf
sub
ret
dec
push
cmp
or
sub
scas
xchg
adc
sti
jbe
arpl
jp
cli
add
and
add
jg
pop
and
and
sbb
pop
adc
sbb
inc
mov
adc
cmp
jbe
mov
lahf
ud2
push
in
add
call
add
inc
nop
(bad)
push
ja
jmp
clc
push
in
push
test
mov
je
movs
es
push
mov
cmps
loopne
inc
dec
mov
push
add
xchg
jo
adc
lock
dec
mov
and
or
or
icebp
bound
sbb
imul
push
push
jae
sti
ud2
fisttp
into
xchg
rcl
adc
es
cmp
push
adc
sbb
sbb
pop
daa
into
pusha
jge
mov
inc
and
test
or
fadd
aaa
rcr
cli
sub
(bad)
push
dec
hlt
mov
add
adc
and
adc
arpl
in
push
inc
vpaddw
adc
jl
cmp
jne
xchg
and
sub
pop
iret
ins
clc
bound
fld
push
dec
outs
test
cmc
popa
or
lods
xor
ror
fist
jge
mov
shr
xor
xchg
ins
and
ret
je
adc
adc
sbb
clc
scas
xor
and
pop
add
inc
mov
sub
jmp
cmp
xchg
sbb
aas
sar
push
mov
inc
bound
js
sub
jae
and
popa
mov
les
or
mov
ror
fadd
cli
in
or
or
cmp
sar
mov
stos
adc
or
adc
hlt
jmp
pop
xor
or
cmc
jmp
div
or
push
push
jmp
adc
pusha
sbb
rcr
jno
sbb
mov
loopne
or
mov
ror
add
(bad)
leave
not
jne
add
add
or
mov
sbb
sub
inc
or
ds
je
mov
inc
aam
fbstp
popa
mov
sub
or
les
sbb
out
add
inc
mov
inc
mov
or
ret
sub
add
es
or
push
adc
adc
and
sbb
cmp
sbb
jne
movs
mov
ds
push
xchg
jmp
and
add
inc
stos
movs
ret
xchg
fadd
or
jmp
sub
je
ret
mov
ja
movs
cmovns
dec
mov
jmp
shl
and
dec
pop
imul
xchg
rcl
push
dec
in
in
cmp
test
or
and
sti
or
add
jmp
lods
push
loop
ret
iret
adc
add
inc
out
dec
sbb
iret
and
sti
mov
jle
cmp
outs
add
int3
and
je
mov
sub
lds
xchg
sahf
lock
sbb
push
push
xor
jle
and
and
inc
outs
add
call
sub
fdivp
in
in
push
or
adc
fld
sbb
sbb
xchg
xchg
xchg
sub
xor
adc
daa
mov
ss
and
inc
cmovs
daa
daa
push
push
pop
add
pop
pusha
fs
ins
jo
js
sub
sbb
and
mov
test
xor
xor
pushf
mov
leave
and
rol
leave
and
enter
dec
fwait
sar
xor
and
in
xor
and
in
aam
leave
and
dec
hlt
clc
cld
ror
add
add
add
mov
add
adc
xor
sbb
xchg
dec
xor
and
sub
dec
xor
and
cmp
xor
dec
cdq
fiadd
fs
dec
es
pop
pusha
bound
cwde
sbb
mov
add
dec
and
pop
cs
clc
mov
out
jbe
cmp
adc
rcl
pop
jb
xchg
or
adc
fcomp
pop
adc
sbb
xchg
dec
cs
sbb
and
in
retf
and
jb
fs
add
inc
xchg
pop
cs
fs
cs
dec
pop
adc
mov
mov
mov
lahf
fild
add
ins
xchg
stos
add
jmp
adc
xchg
inc
lock
push
xor
mov
(bad)
(bad)
ror
rcr
sub
addr16
clc
xchg
or
push
xchg
push
out
adc
arpl
push
xor
adc
pop
sub
adc
cld
mov
loope
ret
xor
sub
push
cmp
mov
aam
js
sbb
cmps
fild
in
add
xor
test
adc
and
rol
add
add
leave
in
push
mov
add
pop
adc
xchg
add
daa
call
push
scas
add
sub
push
cmp
or
jbe
push
or
mov
cli
add
fisubr
mov
call
mov
adc
add
jmp
ins
cmp
fild
mov
cmp
xchg
cmp
icebp
inc
pop
cmc
or
push
or
dec
push
mov
push
xor
or
mov
dec
or
or
push
push
pop
pop
bound
mov
inc
mov
cmp
daa
mov
dec
les
sbb
mov
adc
call
sti
and
jne
xor
inc
and
pop
push
and
dec
inc
daa
push
pop
popw
pop
dec
es
pop
ret
mov
and
sbb
shl
add
push
rcr
mov
push
push
das
mov
loop
add
mov
lock
dec
js
mov
movs
mov
mov
test
shr
add
push
jmp
loopne
push
test
enter
jl
out
mov
lock
sbb
js
pop
sbb
add
xor
mov
xor
pop
push
jmp
xor
jne
push
xchg
inc
mov
sahf
jge
lahf
lods
inc
add
loope
ror
and
pop
jmp
loopne
mov
test
dec
add
js
jbe
movs
lock
sub
pusha
ror
inc
add
sub
or
dec
sub
ret
or
daa
add
xlat
pop
add
test
pop
add
sub
aaa
cs
fwait
xor
mov
push
jecxz
cmp
outs
inc
jmp
or
sub
mov
adc
fs
pushf
adc
inc
inc
nop
in
mov
bound
push
clc
mov
ins
out
or
mov
pop
xchg
aad
cmp
pop
(bad)
dec
imul
test
test
mov
repnz
fmul
(bad)
or
push
jmp
or
lods
pop
out
dec
sbb
inc
push
pop
cmc
adc
cs
inc
add
sbb
lea
inc
cmp
and
(bad)
ficomp
ror
imul
xlat
or
stos
fstp
push
pop
stos
inc
xchg
bound
pop
or
out
rcr
xor
ficomp
xor
sbb
jbe
out
dec
pop
mov
pop
mov
dec
hlt
inc
push
sub
mov
mov
jno
cmp
mov
daa
test
das
add
inc
adc
in
jmp
pop
pop
mov
cli
inc
adc
or
lock
cmp
sbb
dec
pop
adc
pop
or
js
mov
pop
or
xchg
lea
fnstenv
aaa
pop
adc
push
pop
or
and
xor
pusha
loope
add
retf
dec
test
adc
xchg
sub
or
dec
adc
push
push
cmp
(bad)
dec
sub
jmp
jo
fld
sti
and
pop
pop
or
sbb
mov
and
inc
(bad)
imul
and
ins
ss
push
mov
xchg
sbb
mov
repz
mov
adc
inc
and
xchg
aas
xor
hlt
lock
cmp
daa
outs
sbb
inc
add
mov
loope
pop
or
fwait
enter
sub
mov
mov
push
push
push
test
js
xchg
stos
sub
pop
outs
sub
add
add
enter
stc
mov
shl
jp
out
call
or
je
das
icebp
pop
shl
and
or
mov
je
push
and
cmc
ja
cmp
jb
cmp
ja
cmp
adc
pop
and
aas
(bad)
cmp
push
cs
adc
add
adc
mov
fnstenv
call
loope
movs
or
add
ret
jns
data16
ins
or
sub
adc
cmp
addr16
call
mov
retf
(bad)
call
loopne
add
adc
push
cmp
shl
inc
or
or
inc
cmp
jmp
sub
adc
ins
mov
pop
fist
std
or
and
cmp
mov
mov
in
imul
mov
jb
pop
adc
adc
pusha
enter
push
mov
push
xor
add
ins
sub
test
or
cmp
sub
dec
sbb
push
cs
sub
and
popa
fadd
sar
retf
and
add
push
cmp
fdiv
(bad)
rol
aad
aam
push
sub
es
hlt
sbb
iret
sub
shl
aam
and
xchg
mov
mov
and
fdecstp
xchg
fimul
adc
sbb
addr16
mov
adc
nop
lods
sbb
adc
or
mov
push
add
xchg
add
cwde
lods
fld
scas
cmps
adc
retf
push
pusha
xchg
sbb
mov
rcr
lock
mov
jno
fwait
sbb
xor
sbb
push
pop
cmp
ja
cli
ret
inc
add
call
lods
or
test
rep
mov
push
sbb
(bad)
pop
popa
jns
loopne
int
inc
xchg
(bad)
or
add
pop
test
pop
gs
adc
push
xor
lea
or
lock
xor
mov
push
push
(bad)
mov
mov
xor
pushf
inc
sub
lea
dec
hlt
movs
outs
mov
and
xchg
outs
nop
dec
xor
mov
add
inc
sti
aam
or
and
add
in
and
cld
mov
popa
retf
mov
pop
pop
ret
jb
arpl
xchg
dec
mov
sbb
sbb
in
lods
inc
dec
add
cmp
fcom
sar
or
mov
(bad)
dec
and
mov
adc
add
jb
clc
xchg
test
pop
ja
in
adc
jg
dec
jb
nop
(bad)
aad
dec
jnp
sbb
and
and
dec
fsub
stos
mov
std
push
shr
paddsb
aas
ret
dec
call
add
gs
inc
push
(bad)
fs
sar
add
xchg
out
pushf
sti
sti
dec
adc
jno
int3
aas
lock
push
adc
clc
movs
fild
fcom
or
adc
cmps
jmp
jo
or
mov
cld
dec
pop
inc
mov
outs
adc
fsubr
ret
push
ja
pusha
movs
shr
cmp
inc
sub
(bad)
pop
fild
xchg
inc
mov
mov
int3
je
adc
stc
sub
xchg
movs
jmp
shl
add
repz
test
pop
and
loopne
jg
mov
push
mov
mov
inc
out
das
add
ss
sti
(bad)
mov
add
popa
add
ins
add
ins
push
(bad)
fdivrp
jb
sub
add
je
jne
arpl
push
outs
and
(bad)
and
add
and
jg
sub
cmp
dec
add
pop
add
dec
add
loopne
add
mov
push
push
dec
and
inc
push
inc
and
mov
add
push
frstor
jmp
imul
mov
pop
xchg
es
cmps
pusha
add
and
sub
sbb
and
in
push
cmp
sbb
push
mov
push
xor
daa
fstp
mov
xor
xor
xor
add
in
xchg
cmp
xor
in
xor
xor
push
in
in
je
outs
arpl
sahf
out
in
arpl
je
dec
dec
dec
je
je
(bad)
jns
dec
je
je
imul
imul
outs
daa
gs
adc
addr16
aaa
ins
(bad)
prefetch
and
sti
out
call
dec
dec
push
inc
dec
dec
inc
and
inc
mov
xor
jbe
jno
ss
jbe
adc
out
sahf
out
xor
xor
xor
imul
imul
out
sahf
jo
es
arpl
jg
(bad)
in
in
xor
xor
xor
mov
xor
leave
leave
leave
leave
ja
ja
dec
sub
enter
bound
dec
dec
dec
bound
(bad)
stc
jbe
bound
imul
cmp
push
gs
gs
cmp
repz
iret
imul
sbb
add
push
push
cmp
ins
push
arpl
faddp
std
inc
push
push
dec
push
fidiv
fs
xchg
out
sub
arpl
sub
sub
(bad)
xchg
xchg
xchg
xchg
xor
out
(bad)
xchg
xor
sub
idiv
repz
xor
xor
jns
out
arpl
arpl
jns
out
arpl
popf
out
sahf
fs
ss
xor
cmp
cmp
xor
xor
pushf
jae
jge
ins
gs
push
xchg
sar
inc
mov
jmp
imul
js
loopne
mov
push
fstp
lock
(bad)
cmp
xor
imul
pop
pop
pop
sub
sub
pop
int
imul
pop
aaa
sub
das
ins
das
mov
sub
push
mov
outs
in
fisub
(bad)
sar
cmp
add
cmp
add
or
cli
inc
jae
push
loopne
cmps
push
arpl
pop
in
or
jnp
jnp
mov
popa
xor
jl
and
or
ficom
das
retf
add
(bad)
dec
sub
lods
sti
mov
add
xor
sub
jg
mov
data16
popa
add
cmp
in
mov
add
ret
(bad)
iret
add
add
pop
push
jo
and
das
cli
(bad)
mov
dec
inc
dec
pop
cmp
jne
gs
arpl
push
std
ins
outs
je
jge
out
js
rcl
bound
push
outs
inc
jo
scas
pop
cmp
ins
add
popa
push
xor
push
jp
add
push
xor
(bad)
push
outs
jbe
jb
imul
sub
xor
(bad)
dec
inc
inc
pop
push
push
and
ins
aad
sti
(bad)
push
outs
and
ss
outs
mov
sub
js
jg
jbe
sub
ja
and
cmp
outs
jb
and
fist
mov
dec
jg
jbe
in
sbb
and
imul
mov
push
or
sub
lods
lds
daa
mov
dec
pop
inc
and
inc
sti
or
and
push
pop
push
sbb
call
jae
cdq
inc
push
mov
outs
scas
and
pop
iret
mov
jnp
div
mov
and
sahf
or
sbb
push
push
pop
cmp
cmp
lods
inc
imul
xor
call
push
pop
or
inc
xor
jnp
pop
outs
or
jns
movs
lea
dec
add
jp
push
ret
(bad)
outs
add
mov
imul
jb
jo
or
inc
imul
cld
addr16
cmp
xchg
xchg
das
ins
pop
and
adc
ins
das
rcr
sub
mov
inc
push
sbb
addr16
xor
cmps
ffree
inc
scas
inc
cs
outs
pop
dec
dec
sbb
sbb
cmp
cmp
pop
and
mov
mov
adc
sti
xor
out
dec
mov
rcl
xchg
add
fs
inc
outs
cmp
in
imul
jae
data16
arpl
outs
and
lods
mov
popa
fs
jae
add
inc
iret
arpl
rcr
pop
sub
pop
ror
rcr
xchg
jbe
imul
jnp
data16
jne
fs
in
outs
inc
(bad)
out
and
add
and
jne
fs
adc
mov
jmp
iret
retf
movs
pushf
(bad)
ds
daa
inc
dec
stos
out
or
pop
cmp
stos
jmp
dec
cmp
push
inc
outs
push
inc
pop
fsub
ret
fst
xchg
pop
mov
addr16
sub
xchg
mov
xchg
mov
xchg
cmp
push
out
outs
arpl
sar
popa
sti
repnz
outs
mul
and
je
jne
mov
aas
or
xlat
outs
add
push
push
add
pop
push
shl
mov
es
mov
arpl
das
adc
pmaxub
outs
pop
inc
inc
add
sub
add
loopne
test
dec
sti
outs
fild
cmp
fidiv
movq
xor
pop
xor
popf
test
das
jo
ds
dec
mov
inc
push
push
push
inc
inc
aaa
push
mov
push
dec
ds
push
inc
push
inc
inc
in
in
out
jge
inc
inc
push
inc
inc
pop
daa
and
aaa
dec
jae
mov
push
push
push
aas
inc
inc
mov
outs
jnp
aas
push
push
mov
out
push
dec
pop
dec
push
push
push
dec
loop
pop
pop
pop
pop
divps
inc
or
ss
sahf
inc
jle
scas
inc
and
mov
or
dec
inc
les
jns
ret
pop
inc
push
push
adc
xchg
mov
cs
push
inc
inc
dec
jne
jne
xor
es
iret
jl
push
push
sbb
add
pop
inc
push
cmps
xor
xor
aaa
cli
push
mov
sub
popa
js
ins
push
cmp
shl
stos
sbb
inc
popa
arpl
mov
mov
dec
push
xchg
and
jae
mov
xor
or
xor
mov
arpl
inc
and
aas
jecxz
sbb
cmp
pusha
and
gs
mov
xchg
mov
loop
data16
and
gs
pop
or
and
je
xor
sbb
popa
add
mov
xchg
ins
add
jo
dec
gs
pcmpgtw
lds
sbb
push
jae
popa
(bad)
cs
dec
or
outs
cmps
outs
mov
xor
mov
jle
inc
push
push
jl
fisubr
xor
xchg
cmp
dec
mov
push
cmp
xchg
or
inc
out
aaa
add
xchg
arpl
ins
das
push
ds
loop
mov
pusha
xor
in
test
adc
and
inc
or
cmp
out
data16
lds
les
sbb
ins
xchg
inc
mov
lea
add
sti
mov
dec
inc
cmp
inc
dec
inc
inc
push
pop
inc
mov
dec
sbb
test
sbb
sub
xor
rdmsr
xor
mov
cmp
arpl
dec
push
dec
je
idiv
push
push
inc
push
pop
inc
push
dec
push
and
push
data16
cmps
rcl
dec
push
push
push
pop
ja
inc
dec
push
push
das
pop
push
pop
inc
mov
inc
inc
inc
inc
mov
or
es
inc
inc
test
inc
inc
inc
inc
cdq
retf
inc
dec
dec
dec
adc
adc
add
fdivr
adc
enter
jno
(bad)
(bad)
pop
add
movs
in
inc
or
imul
sar
lahf
jge
je
adc
mov
call
push
add
mov
mov
mov
test
xchg
scas
inc
mov
inc
inc
(bad)
mov
outs
adc
ins
xchg
pushf
jg
sub
dec
test
sub
fidiv
fild
xor
sti
add
or
imul
pop
je
imul
inc
sbb
ins
ins
jo
and
and
aad
push
div
outs
jne
out
ins
jns
inc
jae
jae
popa
jbe
rol
push
sub
add
sub
lds
je
les
clc
in
stos
sbb
movs
das
jno
test
(bad)
xlat
sub
cs
push
or
cmp
ins
inc
sub
test
popa
dec
je
mov
push
mov
push
dec
lods
mov
dec
pop
das
push
push
inc
cmp
sbb
adc
lods
pop
xchg
outs
addr16
mov
add
movs
ret
adc
cs
cmp
lods
adc
xor
scas
add
pop
xor
add
ds
push
and
add
test
sbb
add
pusha
xor
dec
push
out
mov
xchg
adc
int3
pop
retf
das
jg
or
xchg
sub
arpl
cwde
scas
(bad)
outs
add
mov
in
inc
inc
bound
sub
xchg
daa
je
mov
cmps
daa
mov
and
adc
dec
pop
sub
mov
popa
and
bswap
or
sub
data16
or
xchg
pop
add
jnp
add
cmp
daa
inc
xchg
sbb
xor
dec
xor
mov
(bad)
xor
aas
xor
push
mov
sub
mov
fld
jb
bound
push
cwde
or
stos
dec
cmps
mov
arpl
test
inc
sub
add
fdiv
push
aaa
pop
adc
or
pop
addr16
jne
jnp
mov
popa
adc
(bad)
dec
data16
xor
and
inc
out
lea
adc
xor
pop
pop
or
xchg
dec
ret
xor
outs
imul
adc
mov
jle
lahf
dec
dec
ror
fist
sub
adc
outs
mov
ret
mov
movs
iret
mov
loope
mov
sub
scas
inc
inc
or
arpl
or
jb
retf
xor
pusha
push
xor
cmp
or
cmp
and
outs
daa
jmp
cmp
lods
bsr
mov
pop
mov
ja
and
push
or
mov
xchg
push
xor
aaa
jae
xor
push
mul
aam
jne
fist
inc
sub
mov
out
mov
ret
(bad)
jns
push
push
sub
(bad)
mov
lahf
mov
add
dec
push
push
push
jns
hlt
movs
out
mov
arpl
cmps
fs
sbb
jecxz
popa
xor
bound
out
mov
xchg
push
mov
adc
mov
mov
adc
push
jo
mov
mov
pop
dec
mov
sub
call
fs
iret
sbb
mov
push
in
jno
xor
xor
outs
outs
xor
pusha
das
shl
out
add
xchg
xor
pop
or
dec
outs
jg
pop
aad
xor
inc
mov
ins
pop
mov
jo
xor
popa
jo
je
push
test
sahf
push
jb
je
dec
xchg
outs
fxch
pop
aas
xor
add
daa
jno
pop
ds
ds
sbb
ja
not
(bad)
out
es
push
push
dec
pop
aaa
mov
(bad)
mov
inc
cmp
mov
dec
xchg
lock
enter
addr16
sar
inc
ins
pop
dec
js
xchg
(bad)
addr16
mov
packuswb
aas
test
outs
pop
inc
push
dec
inc
inc
sbb
jo
inc
mov
inc
cmp
je
dec
push
inc
jbe
push
adc
fild
arpl
push
pop
jns
jae
push
pop
dec
push
iret
pop
pop
sar
les
repz
mov
cmp
repz
cmp
out
sahf
addr16
cld
lock
fwait
sahf
mov
cld
addr16
jo
dec
gs
push
call
popa
loop
scas
jbe
js
push
push
cwde
imul
fnstsw
add
imul
gs
gs
js
jb
repz
xchg
or
adc
add
sbb
sub
xor
inc
push
dec
add
pop
outs
jl
enter
dec
loopne
or
sub
cmp
dec
dec
push
cmc
pop
push
movzx
dec
add
movmskps
push
imul
inc
(bad)
sbb
neg
pop
push
sub
stos
je
call
lea
pop
push
push
push
pop
push
data16
(bad)
inc
or
movs
adc
sahf
mov
xchg
ja
das
add
je
push
sub
pop
rol
cmp
inc
inc
push
inc
rcr
inc
or
push
pop
pop
mov
inc
mul
movs
mov
push
adc
add
pop
mov
imul
jge
ud2
xlat
sbb
int
aad
mov
push
out
int3
(bad)
ins
fwait
jae
leave
xchg
mov
jae
fwait
mov
or
rep
fdivp
(bad)
adc
adc
push
add
pusha
out
fisub
adc
rol
(bad)
jnp
fwait
mov
push
ss
ja
(bad)
xchg
dec
int
push
pop
call
add
pop
popa
inc
sub
inc
pop
jg
mov
mov
das
test
inc
ins
or
(bad)
sti
not
adc
push
loope
aas
add
add
fstp
adc
jg
sahf
test
push
jo
outs
xor
rol
mov
dec
es
cwde
sbb
ins
xchg
push
xchg
out
adc
ror
not
js
sbb
pop
mov
lock
ficomp
outs
push
and
out
mov
add
cld
xor
jnp
mov
sar
out
adc
cmp
or
cmp
cmp
jb
aas
xor
jns
dec
add
xor
dec
test
add
(bad)
bound
add
dec
xor
and
adc
push
or
loop
loop
loopne
push
outs
push
xor
push
jns
gs
imul
sbb
dec
outs
push
cmps
mov
and
(bad)
fimul
pop
push
add
mov
cmp
mov
(bad)
jmp
xchg
adc
dec
scas
repz
fidiv
outs
xchg
stos
fild
sub
test
pop
ss
jne
xchg
ja
xlat
adc
xor
and
loopne
adc
push
bound
in
jne
arpl
jne
das
pushaw
stos
pop
lods
jle
fwait
outs
inc
scas
ins
mov
xchg
xor
jo
pop
mov
mov
pop
cmp
add
ja
inc
pop
pop
add
mul
push
ins
xlat
ficom
and
push
fimul
imul
pop
mov
jnp
sbb
xor
fdivr
pop
mov
iret
data16
ja
pop
imul
mov
inc
pop
adc
imul
add
test
add
repz
mov
fcomp
ret
inc
mov
or
cmp
imul
ins
mov
jae
imul
mov
arpl
mov
add
imul
mov
mul
push
je
ja
imul
mov
push
ins
ror
daa
repnz
mov
imul
sub
call
arpl
data16
jg
inc
cmps
arpl
lock
xchg
shl
js
outs
and
or
jb
mov
out
jge
fwait
jns
cs
cmp
or
dec
add
mov
dec
add
shl
lock
add
pop
sbb
push
pusha
inc
add
ins
out
int
scas
je
mov
mov
and
mov
movs
shr
gs
enter
push
pop
or
aas
hlt
fidiv
jo
pop
sub
imul
mov
sub
fs
fisttp
out
jnp
adc
sbb
mov
push
push
gs
dec
cmp
maxps
push
mov
mov
pusha
outs
scas
mov
iret
popa
iret
cs
jo
inc
jnp
fisubr
adc
or
das
fisubr
fisubr
push
jp
jo
retf
push
inc
dec
(bad)
push
push
mov
inc
add
(bad)
mov
arpl
push
(bad)
mov
inc
fdivp
imul
icebp
ds
div
mov
jo
mov
add
or
mov
inc
inc
push
jo
inc
dec
xchg
adc
xor
pop
xor
(bad)
fiadd
pop
and
push
js
loop
push
jmp
jb
jp
xor
in
jg
stos
aaa
push
aaa
mov
fwait
push
scas
xor
xlat
nop
or
jno
aas
cwde
sbb
push
mov
pop
xchg
jo
arpl
aaa
and
clts
cmp
inc
imul
mov
cmps
je
jo
das
das
ja
or
ret
jp
xor
xor
jnp
out
fnsave
sbb
sbb
sbb
jno
sbb
arpl
inc
aaa
cmp
js
fs
int
fistp
push
js
addr16
clc
pop
mov
cmp
dec
mov
jae
mov
inc
addr16
(bad)
push
push
dec
jno
bound
pusha
bound
inc
ins
imul
imul
in
mov
fs
ins
cs
xlat
pop
dec
xchg
ja
dec
imul
mov
jne
pop
neg
cmps
mov
or
neg
mov
(bad)
jae
cmp
pop
ins
or
fadd
das
push
pop
call
pop
(bad)
and
xor
je
fs
ins
arpl
sub
arpl
or
mov
or
gs
cmp
repnz
xor
xor
push
outs
mov
cmp
xor
das
push
bound
ins
jp
push
add
fs
xor
ins
es
call
jg
sub
sub
push
outs
cmp
mov
xchg
jno
mov
stos
push
mov
outs
das
pop
data16
ffree
sti
jae
cmp
js
sub
fdivp
(bad)
pop
xchg
inc
cs
inc
jno
addr16
push
pop
inc
retf
scas
mov
ja
push
stos
sbb
daa
aas
rcr
xlat
mov
(bad)
jmp
jnp
bnd
push
adc
ror
sbb
jne
js
or
pop
push
push
mov
jnp
es
dec
data16
jne
or
jno
imul
mov
outs
bound
dec
add
adc
gs
jecxz
push
sti
add
outs
pop
mov
outs
mov
adc
loope
push
movs
loopne
add
add
or
add
or
or
add
push
jb
and
or
pop
mov
ror
repnz
push
jecxz
mov
sub
push
sbb
cmp
push
popa
mov
push
cmp
mov
jmp
adc
jmp
fidivr
dec
mov
stos
jae
sbb
cmp
imul
(bad)
push
mov
sahf
outs
cmps
cs
ja
or
ja
scas
cs
jl
pop
jo
addr16
ins
das
aam
outs
ror
outs
repz
mov
(bad)
outs
sub
or
xchg
pop
shl
gs
inc
gs
movs
push
cwde
pusha
cmps
xchg
fsubr
fsubr
push
(bad)
sub
sbb
pop
fadd
and
pop
inc
popa
adc
repnz
cmp
push
mul
ret
mov
push
outs
imul
or
out
mov
sub
or
xlat
and
inc
mov
ja
cwde
sub
ins
xlat
add
sbb
push
add
test
mov
pop
popa
mov
fld
cmp
js
je
jb
inc
cmp
fsub
ret
out
inc
gs
pop
test
mov
push
je
ror
mov
bound
dec
outs
sbb
popa
jae
inc
gs
or
jbe
push
outs
jo
jo
pop
lea
popa
addr16
outs
js
fist
sub
pop
call
pop
outs
jne
adc
add
sub
adc
push
add
add
add
out
push
scas
push
and
push
pop
pop
or
aaa
xor
push
push
pop
xor
(bad)
stc
mov
push
add
pusha
push
fstp
pop
sub
add
sbb
mov
ins
daa
jae
jmp
sub
add
and
add
das
das
das
and
pushf
jl
iret
dec
cmovno
sub
test
rol
jbe
dec
pop
pop
jmp
arpl
push
repz
inc
ds
push
xlat
ja
dec
pop
jns
mov
(bad)
pop
pop
div
sub
loopne
inc
sub
push
clc
sbb
add
inc
add
pop
pop
(bad)
fnsave
jns
lods
fidiv
mov
out
(bad)
cs
fistp
arpl
pop
jmp
call
loopne
ret
sub
pop
jbe
sahf
push
dec
xchg
ds
ins
arpl
mov
(bad)
mov
xor
repz
inc
cmp
cmp
fs
dec
jno
jnp
and
jns
add
das
das
adc
dec
dec
imul
push
inc
inc
dec
gs
bound
dec
outs
jbe
dec
sub
push
mov
je
inc
jne
jne
dec
fcomp
inc
jnp
push
outs
xchg
inc
jo
imul
bound
push
inc
popa
outs
adc
into
mov
xchg
out
jnp
jns
jg
addr16
in
addr16
scas
push
jb
xor
and
xor
push
gs
sbb
dec
cmp
dec
int3
and
jbe
jae
pop
dec
inc
aas
add
dec
mov
and
jae
mov
or
push
inc
jne
inc
adc
add
inc
ins
xchg
test
xor
pop
sub
mov
and
cwde
sub
das
xor
xor
xor
(bad)
(bad)
jmp
cmp
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
or
mov
push
xchg
pop
pop
dec
(bad)
call
pop
pop
pop
pop
pusha
popa
bound
addr16
ins
outs
call
inc
add
mov
jns
jnp
jge
sub
jg
sahf
jb
add
test
out
add
or
and
dec
or
cmp
inc
inc
mov
dec
mov
mov
(bad)
outs
test
or
sub
scas
pop
aaa
inc
pop
or
jns
mov
push
dec
adc
scas
ins
mov
and
ret
inc
sbb
test
mov
mov
cmps
fidiv
jp
les
jg
mov
mov
adc
and
add
(bad)
test
icebp
push
push
ret
retf
(bad)
pop
push
jp
push
inc
loopne
mov
jne
les
ret
pop
push
cs
mov
dec
fwait
loopne
pop
sub
cmp
inc
das
sahf
call
or
lahf
and
xchg
push
xlat
pop
mov
or
cmp
add
daa
push
push
ret
mov
xchg
clc
xchg
je
adc
mov
jo
stos
mov
fbld
mov
ror
xor
movs
sbb
sbb
test
fidivr
cs
sub
daa
bound
add
outs
and
push
stc
xor
cmp
push
nop
push
test
stos
pop
sahf
aaa
jg
and
lods
shr
fs
fist
scas
jne
call
jne
sub
inc
mov
mov
nop
xor
stos
inc
fimul
sbb
pop
add
add
fistp
shl
lahf
outs
aas
or
add
cmp
xchg
push
mov
and
push
sbb
add
imul
sbb
mov
inc
shl
fcomi
outs
popa
mov
dec
fbld
and
push
out
sbb
add
aas
inc
pop
inc
outs
inc
pop
stos
nop
imul
push
pop
push
daa
mov
sub
xor
adc
and
fidivr
mov
xor
addr16
cmp
ror
or
cmp
das
inc
mov
or
loopne
in
xchg
adc
rcr
inc
mov
adc
mov
sbb
push
in
xchg
and
pop
mov
and
cmp
scas
lock
jns
jp
cld
mov
inc
mov
ins
mov
inc
or
or
mov
or
mov
add
push
repz
xchg
out
dec
data16
js
pop
xchg
ss
mov
repnz
add
push
outs
imul
outs
aas
add
imul
adc
add
add
hlt
int
push
sub
mov
dec
sub
cmp
inc
pop
push
rcr
jb
ins
push
jg
or
js
jo
add
add
leave
jae
mov
or
sbb
leave
jae
or
pop
nop
xchg
xchg
xchg
dec
pop
jb
mov
mov
add
out
add
push
aad
and
and
and
adc
xchg
sbb
adc
add
ins
add
add
jb
shl
add
movs
or
fs
adc
add
add
fild
ja
in
je
or
add
mov
pop
sub
push
test
out
aas
ins
frstor
add
inc
xchg
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
(bad)
(bad)
(bad)
jmp
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
(bad)
(bad)
inc
ret
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
(bad)
(bad)
jmp
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
push
mov
test
adc
inc
adc
shr
add
push
ins
aas
inc
arpl
inc
mov
ins
and
jb
ins
ud2
xor
ins
popa
mov
mov
retf
gs
jns
inc
gs
in
lods
stc
out
cmp
dec
inc
jb
jns
xor
mov
daa
pop
and
bound
ret
mov
loopne
add
(bad)
je
add
jecxz
and
ins
mov
cmp
popa
outs
push
push
jbe
call
arpl
or
loopne
(bad)
push
inc
pusha
or
pusha
inc
jbe
(bad)
push
sbb
jns
ins
and
lea
xchg
xchg
(bad)
dec
cmp
add
aam
imul
dec
cmp
push
sub
and
and
dec
lahf
sahf
(bad)
adc
gs
fninit
xchg
pop
pop
pop
push
push
jae
or
push
cmp
cmp
sbb
mov
ins
ins
jae
adc
jo
das
outs
gs
mov
mov
mov
pusha
cmp
out
das
push
push
push
push
dec
test
loope
xchg
lds
in
cmp
mov
and
mov
imul
push
imul
sbb
fistp
xor
jae
(bad)
and
jg
sbb
push
push
bound
sub
xor
push
or
imul
mov
(bad)
mov
mov
popw
pop
lods
in
repz
push
jl
cmp
or
idiv
mov
push
das
push
sub
cmp
push
addr16
jle
sub
pop
pop
loope
sub
jae
xchg
jle
sub
jnp
jne
sub
sub
(bad)
into
or
mov
push
ds
push
cmp
sub
jne
dec
xchg
scas
ret
fs
jb
imul
adc
xor
gs
pop
xor
xor
jb
addr16
sbb
enter
push
inc
into
push
enter
sub
out
movs
sbb
(bad)
mov
jns
test
nop
test
js
jns
iret
repz
dec
out
xchg
out
scas
cmp
cmp
out
sahf
xor
sbb
adc
sahf
out
adc
add
repz
mov
cld
clc
hlt
lock
iret
repz
call
aam
iret
repz
int3
enter
cmp
repz
iret
repz
test
mov
iret
repz
pop
push
cmp
jns
out
(bad)
cld
fdivr
out
cmp
ret
lock
repz
(bad)
sar
repz
pusha
inc
and
cld
jns
out
aam
and
iret
out
shl
test
rcr
repz
inc
sub
dec
outs
cwde
pop
call
sub
adc
clc
push
or
or
outs
cmp
adc
mov
test
sbb
call
in
pop
adc
test
dec
test
inc
pop
push
cmps
or
mov
das
dec
(bad)
enter
in
lods
fistp
cld
push
leave
or
pusha
dec
inc
mov
inc
push
inc
in
cmp
add
ss
add
inc
mov
lds
cmps
push
outs
repnz
push
mov
aam
test
add
push
mov
retf
adc
pop
add
test
clc
jbe
dec
and
or
sbb
cmps
dec
sbb
inc
push
idiv
outs
add
sbb
dec
ss
das
retf
and
addr16
out
mov
dec
test
fadd
or
push
retf
sbb
nop
in
out
ss
add
int3
int
and
idiv
je
or
add
fdiv
mov
movs
mov
xor
scas
lods
jb
out
(bad)
xlat
retf
mov
stos
sbb
add
lods
or
cmp
retf
dec
sub
sbb
nop
out
test
sub
popa
addr16
push
jb
mov
pop
mov
ja
push
jl
xchg
and
dec
sub
jg
ins
push
dec
lods
jg
mov
dec
add
ja
mov
outs
clc
inc
inc
and
mov
cmps
fs
cmp
dec
push
pop
cmps
outs
add
mov
call
add
mov
mov
mov
int
enter
add
sbb
pop
ror
cmp
inc
xor
pop
dec
push
push
cmp
rol
xchg
inc
sahf
adc
jecxz
into
cmps
into
fcom
pop
and
pop
jle
add
xchg
inc
or
dec
add
mov
mov
(bad)
pop
mov
or
mov
inc
pop
dec
js
test
test
mov
and
hlt
sbb
cmps
ror
jnp
call
sub
xor
jns
popa
test
mov
sahf
or
pop
pop
xor
inc
fdiv
pop
sar
adc
add
into
in
rol
mov
adc
call
sub
sar
imul
pop
jo
mov
fadd
cmps
push
test
sahf
repz
adc
push
cmp
mov
enter
pusha
mov
out
mov
pop
nop
mov
cmp
out
push
push
dec
rol
(bad)
clc
(bad)
(bad)
pop
inc
and
push
xor
dec
sbb
pop
mov
ja
pusha
dec
movs
jb
dec
nop
mov
mov
test
jnp
and
adc
mov
add
push
cmps
iret
sti
add
(bad)
dec
mov
iret
adc
aaa
iret
sar
xchg
xlat
(bad)
scas
mov
pusha
daa
jbe
fst
mov
jmp
inc
mov
or
loopne
jae
inc
daa
lods
out
pop
add
mov
push
xchg
push
(bad)
pusha
ucomiss
sbb
jo
in
cmp
lods
(bad)
stos
sbb
aam
or
je
xchg
xor
add
mov
in
das
mov
add
xchg
pushf
mov
pop
aad
and
push
cmp
inc
xor
aad
daa
push
test
outs
push
js
mov
cwde
scas
pop
jb
pushf
sub
dec
xor
lock
cs
push
nop
adc
sub
xlat
jnp
fisttp
dec
push
cmp
ds
jbe
mov
or
es
(bad)
jg
add
cmps
call
inc
outs
(bad)
lock
in
cmp
fdivr
add
push
adc
fs
pop
pop
mov
dec
mov
(bad)
adc
sbb
call
push
ds
stc
in
dec
pushf
jo
xchg
add
adc
sbb
push
cmp
xchg
leave
ins
jbe
pop
lds
in
add
push
sbb
sub
not
shl
out
add
mov
aas
mov
and
mov
daa
mov
aas
push
mov
fimul
jg
dec
je
ficom
loop
push
jno
popf
out
jg
lahf
aas
jbe
pop
cmp
retf
dec
in
mov
xchg
pushf
and
or
and
hlt
out
lock
mov
scas
inc
int3
push
aad
div
fcmove
fcmovu
daa
in
push
(bad)
and
aas
mov
jmp
inc
hlt
outs
cvtdq2ps
outs
stc
rol
stos
not
ret
(bad)
scas
add
imul
setae
jb
mov
pushf
fld
xchg
jo
bound
sub
push
mov
aad
ds
adc
lahf
add
out
adc
push
dec
ds
jecxz
mov
add
cmp
mov
stos
sub
xchg
push
add
repz
push
(bad)
xor
and
repz
and
adc
or
int
cmp
add
addr16
clc
jns
out
hlt
in
in
aam
jns
out
les
sahf
lods
test
mov
out
xchg
nop
mov
out
jl
je
sahf
out
sahf
ins
push
jns
out
push
dec
inc
cmp
out
sahf
out
and
adc
iret
out
sahf
or
add
data16
hlt
iret
repz
lock
call
repz
fcom
ror
dec
push
into
lock
dec
sbb
push
mov
lods
out
leave
repz
mov
jns
cwde
xchg
nop
mov
je
fs
repz
mov
inc
cmp
adc
and
mov
out
retf
or
add
cld
hlt
cmp
repz
call
cmp
repz
ror
enter
iret
(bad)
sar
cmp
mov
es
repz
pop
clc
cmp
aas
mov
int
js
aam
(bad)
sbb
lock
pop
sub
stos
mov
and
(bad)
cld
push
cdq
test
call
pop
jb
(bad)
aas
and
or
jae
fs
ins
test
add
outs
je
add
mov
and
outs
and
add
outs
and
ins
sub
outs
adc
or
sbb
or
dec
push
jo
mov
adc
inc
jg
and
mov
or
outs
imul
addr16
xor
mov
ja
mov
nop
push
and
(bad)
inc
xlat
add
sbb
outs
jbe
jo
add
adc
cmp
adc
rcl
outs
enter
sahf
outs
jb
xchg
push
push
add
pop
push
icebp
daa
dec
ds
popa
jo
jae
inc
rep
or
or
test
ds
inc
xor
inc
inc
xor
mov
fild
fadd
and
or
shl
arpl
add
ja
sub
pusha
outs
dec
and
xor
outs
inc
or
push
add
xor
imul
imul
sub
add
outs
popa
arpl
or
cmps
mov
cld
movs
inc
lahf
add
gs
nop
cld
adc
add
and
push
pop
jb
jo
popf
inc
add
jae
jb
inc
dec
adc
das
jae
bound
add
popa
push
dec
es
js
and
inc
imul
push
test
and
mov
and
jb
jne
xor
push
push
inc
add
ja
cmp
sub
push
scas
mov
popa
jbe
adc
ret
fistp
add
rcl
invd
outs
je
inc
repnz
outs
je
add
jb
xor
xor
inc
sub
mov
ror
repnz
ss
push
dec
inc
mov
fsub
loopne
pop
adc
add
pushf
mov
mov
ins
mov
and
in
dec
cs
pop
lds
out
jno
xchg
sub
mov
or
add
inc
sbb
bnd
jbe
or
mov
xor
cld
das
adc
outs
or
js
jae
add
add
jno
inc
jnp
data16
arpl
sbb
cdq
xchg
add
push
mov
nop
sub
adc
pop
add
mov
outs
int
test
xor
add
nop
je
add
das
cmp
jb
or
push
aam
add
cmp
push
inc
aam
mov
and
add
sub
imul
inc
sti
add
lock
div
inc
and
pop
adc
or
push
add
rol
outs
jae
inc
push
push
xor
and
push
movs
mov
test
or
ficom
je
add
push
popf
dec
fs
mov
ja
jae
sub
add
das
push
(bad)
gs
ins
jae
in
and
inc
xor
add
pop
push
scas
add
jbe
jo
scas
dec
lds
pop
wbinvd
adc
outs
adc
ins
fild
outs
or
out
mov
jo
imul
cs
test
mov
dec
push
out
push
and
push
sub
mov
push
out
or
add
add
or
push
fwait
pop
add
dec
nop
dec
add
popa
cld
push
pop
test
arpl
jo
xor
add
nop
or
jae
or
ins
loopne
sbb
mov
adc
pop
shl
arpl
push
mov
ins
imul
mov
jb
shr
xor
out
mov
outs
add
aam
ins
stos
out
xchg
and
jb
je
arpl
inc
pop
xor
ins
ins
fild
push
shl
stc
jl
adc
xchg
sub
mov
in
(bad)
inc
push
inc
xor
xor
outs
or
je
movs
add
fadd
push
sbb
push
add
outs
scas
daa
dec
movs
out
and
outs
add
pushf
inc
pop
and
add
xchg
or
xchg
arpl
add
mov
xchg
jp
and
nop
pop
leave
add
popa
add
outs
jae
and
fimul
fild
or
xchg
jo
adc
enter
adc
cdq
inc
dec
ins
add
leave
add
xor
dec
leave
add
or
lahf
add
sbb
mov
pop
out
outs
jb
imul
mov
outs
arpl
outs
inc
and
add
popa
outs
outs
mov
pop
outs
jb
ffreep
fidiv
or
outs
sbb
cld
dec
add
fs
sbb
ficom
outs
or
jno
enter
mov
bound
mov
outs
enter
add
popa
js
mov
pusha
xor
inc
bound
add
and
ja
fs
icebp
ss
push
jae
bound
outs
or
mov
mov
push
and
fs
jne
push
push
nop
fs
or
mov
rol
outs
lahf
mov
pop
jno
jae
jne
scas
sub
ja
ja
push
add
and
and
leave
add
pop
cmps
jmp
mov
shr
inc
adc
nop
in
dec
sub
out
add
scas
inc
call
jno
jno
scas
add
add
push
movs
pop
adc
pop
fadd
add
outs
adc
inc
push
add
(bad)
fisttp
leave
add
leave
adc
test
test
jp
and
and
add
outs
jae
add
or
outs
jae
mov
gs
inc
jb
jo
sbb
scas
nop
adc
or
nop
and
nop
and
add
adc
pop
push
jae
je
dec
add
add
pushf
fcmovb
test
jmp
outs
outs
outs
in
and
add
(bad)
fild
inc
enter
gs
test
add
rol
fild
ins
or
popa
add
outs
jae
mov
outs
jae
pop
leave
adc
jo
test
or
inc
xor
ins
add
daa
xchg
inc
addr16
add
or
sar
add
jo
jae
ins
adc
xchg
call
and
push
push
outs
inc
add
ins
loopne
imul
loop
(bad)
and
add
ins
mov
lahf
outs
mov
fsubr
push
outs
xchg
push
aad
jg
push
or
dec
adc
mov
jb
ins
push
cld
add
inc
and
jae
jb
mov
inc
outs
jg
inc
adc
(bad)
mov
dec
ret
inc
jl
inc
inc
and
je
add
add
test
add
outs
pop
leave
enter
pop
dec
pop
mov
(bad)
mov
push
popa
pop
adc
add
nop
outs
adc
jb
dec
nop
je
outs
mov
fdivr
add
or
inc
push
movs
jle
jae
and
arpl
inc
jbe
outs
jae
das
nop
and
adc
jmp
js
enter
jg
or
jg
inc
add
js
and
cmps
aaa
pusha
(bad)
pusha
imul
and
or
cs
ins
(bad)
sbb
jg
cld
and
add
add
jne
dec
jb
in
jbe
add
outs
gs
adc
add
add
pushf
outs
outs
or
je
imul
pop
out
bound
leave
and
mov
or
mov
add
add
pop
(bad)
fild
inc
adc
add
popa
push
mov
add
in
das
add
jne
bound
ja
inc
enter
ins
imul
retf
rcl
aas
jle
mov
outs
mov
popa
js
bound
mov
and
add
pop
stos
inc
pop
iret
leave
add
scas
jne
jmp
push
popa
add
or
or
cmp
cmp
nop
pop
xor
jae
adc
xchg
pop
outs
jb
mov
outs
mov
nop
js
js
jb
push
test
ins
dec
nop
dec
nop
ins
ins
dec
cmp
lds
xor
sub
(bad)
out
mov
jae
xchg
inc
add
(bad)
jg
dec
xchg
and
jg
xor
pop
xor
bound
mov
sub
call
das
(bad)
stos
lahf
popa
jb
ins
xor
bound
or
or
xchg
shr
fwait
push
pop
fild
push
rcr
or
mov
jnp
pop
fbld
adc
rol
jae
bound
nop
outs
adc
popa
outs
fbstp
pop
pushf
test
jae
push
adc
and
pop
sub
sub
adc
lods
mov
in
mov
outs
jg
adc
jg
lods
mov
mov
cmp
fisubr
cmps
mov
(bad)
fbld
stos
cwde
jmp
push
xor
pop
(bad)
(bad)
(bad)
push
lds
and
jg
cmp
xor
mov
in
dec
or
ins
sub
in
or
arpl
pop
and
add
mov
push
enter
popa
cmp
add
lods
fisubr
outs
jg
pop
nop
pop
pop
pop
nop
pop
nop
pop
pop
pop
push
pop
nop
pop
pop
outs
pop
mov
nop
pxor
mov
inc
cmp
add
add
in
push
add
fbld
push
fbstp
jmp
and
fbld
leave
add
leave
add
leave
add
leave
add
les
ins
adc
outs
mov
arpl
les
mov
jmp
pop
nop
jl
popa
popa
and
and
and
and
cmp
jo
ror
loopne
aam
or
outs
gs
retf
jne
add
arpl
xor
and
in
rol
rcl
add
adc
pop
nop
mov
jbe
fbld
and
xor
outs
pop
mov
add
outs
adc
sub
lahf
outs
jo
and
inc
lods
sbb
mov
lods
sbb
fild
mov
push
and
in
pop
loop
push
jb
les
je
pop
mov
outs
mov
inc
mov
push
outs
jbe
and
das
arpl
stos
sub
inc
ja
mov
fs
outs
outs
jo
and
or
add
stos
mov
repnz
or
out
js
push
pusha
outs
add
outs
add
mov
stos
stos
ins
jae
push
or
test
fwait
add
stos
je
je
and
and
inc
mov
sub
add
in
imul
dec
sti
ins
xor
gs
cmps
inc
cmps
fistp
jo
add
xor
inc
cs
inc
popa
movs
push
outs
in
xor
ins
xor
ins
jb
xor
and
pop
and
fild
dec
mov
fidiv
popa
jo
inc
sbb
push
xor
mov
rcr
inc
lahf
add
aaa
imul
xor
out
mov
jmp
outs
lods
or
imul
dec
add
xor
stos
icebp
pusha
or
inc
popa
dec
inc
out
jb
fs
add
add
loope
gs
outs
enter
mov
or
lods
sbb
out
jno
test
or
dec
inc
outs
add
push
push
xchg
sbb
je
outs
jo
add
and
imul
dec
sub
jb
inc
cs
sub
cmps
push
or
inc
out
dec
and
inc
cmp
and
enter
cmp
bound
enter
jne
adc
xchg
xchg
jecxz
jae
jo
and
sub
mov
push
mov
sahf
pop
mov
add
fild
mov
je
jo
mov
movs
lahf
outs
mov
push
cwde
inc
add
add
dec
jo
cmps
or
or
adc
xchg
popa
add
bound
inc
mov
xchg
adc
or
cdq
add
gs
adc
add
jne
dec
push
nop
add
sqrtps
ins
imul
fisub
outs
xor
xor
js
leave
inc
push
clts
imul
outs
movs
and
pop
ins
outs
inc
push
test
add
and
and
or
inc
(bad)
and
jo
xor
add
xor
or
outs
pusha
outs
mov
add
add
test
push
stos
dec
outs
outs
add
push
rcl
outs
outs
test
adc
cmp
or
add
add
or
outs
fisttp
ror
sub
xchg
outs
adc
imul
jae
add
sbb
or
ror
adc
add
push
add
out
mov
outs
add
add
jbe
cmp
add
es
mov
xchg
or
mov
inc
push
jmp
xchg
mov
inc
outs
dec
nop
cmp
or
and
xor
nop
and
or
sub
inc
fwait
dec
inc
outs
mov
outs
adc
stos
push
add
shl
jo
pusha
jmp
or
stos
push
outs
outs
dec
push
and
jo
push
rol
push
and
jo
xor
adc
dec
jmp
cwde
and
cli
inc
push
bound
or
push
ret
stos
(bad)
das
add
adc
inc
fisub
sub
inc
lea
and
in
add
pop
inc
les
sub
adc
xor
push
push
out
jo
sub
ins
ror
inc
mov
pop
or
jne
pusha
scas
nop
aaa
outs
je
jae
inc
pop
outs
jnp
adc
inc
outs
outs
ins
or
and
ds
ss
in
xchg
fisttp
shr
orps
repz
inc
and
push
enter
or
sti
fild
iret
fbstp
test
jg
xor
xchg
and
add
enter
mov
outs
push
lods
and
retf
push
fild
cdq
fiadd
arpl
mov
repnz
mov
mov
add
stos
add
(bad)
test
adc
fisubr
dec
leave
adc
pop
add
xor
inc
add
adc
movs
idiv
adc
pop
mov
pop
test
pshufw
sbb
adc
push
push
dec
mov
sbb
pop
outs
jg
mov
outs
fiadd
lods
sbb
push
xor
pop
or
and
arpl
mov
and
dec
push
add
dec
cs
das
jg
adc
outs
jg
repnz
mov
fiadd
outs
jg
inc
xor
adc
movs
mov
iret
push
dec
leave
add
add
jg
xor
jns
fiadd
mov
sbb
jg
add
sub
adc
popa
popa
call
enter
pusha
clc
jne
and
and
jne
and
and
jne
and
and
test
jae
cmps
sub
pop
push
jmp
ins
mov
lea
inc
outs
jmp
jmp
cmp
mov
xchg
add
movs
bound
outs
lods
push
enter
push
in
sub
outs
xor
retf
mov
popa
push
mov
adc
shr
movs
sub
mov
scas
(bad)
fild
or
mov
mov
or
sbb
add
outs
or
hlt
add
jb
invd
or
mov
outs
inc
sbb
stos
adc
push
inc
jecxz
mov
inc
test
xchg
add
adc
sahf
test
jae
push
adc
inc
and
add
push
dec
cs
adc
pop
adc
add
pop
fndisi(8087
shl
inc
cmps
adc
outs
nop
cmps
in
sahf
add
adc
iret
(bad)
fisttp
adc
or
or
or
or
or
or
or
or
es
xchg
scas
mov
outs
mov
mov
inc
aam
or
jb
mov
outs
or
inc
js
xor
xor
aad
outs
fistp
add
adc
or
inc
add
or
cdq
(bad)
movs
inc
(bad)
inc
leave
inc
stos
outs
aas
mov
and
or
adc
pop
mov
adc
inc
outs
add
sub
sbb
ja
outs
inc
mov
and
and
push
fidivr
inc
(bad)
stos
push
sbb
stos
dec
pop
popf
fs
xchg
mov
add
xchg
test
das
xchg
mov
popa
push
cmp
and
popf
out
mov
mov
aas
or
add
or
outs
mov
or
outs
pop
pop
and
pop
mov
inc
push
arpl
lahf
jg
lea
stc
xchg
int
(bad)
les
or
in
add
add
sub
adc
xchg
xchg
nop
popa
outs
ficom
movs
sub
dec
cmp
jg
mov
sahf
(bad)
bnd
outs
out
loope
xchg
lahf
out
call
ins
outs
fs
push
fsubr
cmp
leave
stos
pop
mov
into
(bad)
fcom
fbld
sar
adc
jg
outs
xor
outs
mov
outs
jg
cmp
sbb
xchg
dec
adc
nop
mov
and
dec
push
push
mov
mov
push
inc
ins
push
inc
sub
outs
add
add
inc
es
pop
pop
gs
dec
mov
and
push
ret
or
cmps
mov
jl
xor
or
leave
add
mov
adc
add
pop
jo
div
outs
mov
arpl
add
add
or
mov
outs
add
and
fbld
mov
mov
(bad)
loopne
xor
das
ins
bound
xor
test
fwait
cmp
sbb
pop
xor
add
jg
dec
mov
and
je
xchg
mov
inc
push
imul
and
push
and
xchg
adc
shl
cmp
adc
and
or
nop
pushf
xor
pop
and
outs
outs
jo
jp
push
rol
or
scas
add
add
repnz
enter
arpl
adc
(bad)
test
inc
jg
pop
stos
mov
xchg
jb
movsx
pop
lds
js
mov
mov
mov
xor
add
inc
adc
test
outs
mov
push
push
sub
mov
ins
mov
jle
jle
add
out
push
inc
and
das
xor
and
pop
test
ins
outs
jb
cld
mov
add
push
lea
add
inc
lahf
or
inc
add
lahf
stos
dec
and
outs
pop
jae
jae
dec
and
lahf
push
cmp
mov
imul
or
outs
add
xchg
and
add
and
mov
cmp
daa
hlt
inc
push
pop
add
adc
movs
add
and
iret
adc
jb
ins
inc
(bad)
popa
ror
ins
ins
inc
add
add
xchg
pop
aam
jg
enter
fs
sub
xor
out
jno
rcr
and
inc
mov
inc
ins
outs
sub
push
adc
stos
outs
add
rcr
outs
fs
lds
or
psubusw
add
outs
or
data16
push
mov
aas
add
dec
test
pshufw
and
add
popa
sub
mov
adc
adc
xchg
cld
xchg
pushf
imul
xchg
dec
jle
je
or
inc
xor
push
mov
aad
ins
outs
or
cmp
fs
push
outs
or
rcl
ins
outs
or
push
adc
dec
dec
push
test
call
jae
xchg
pop
aas
push
and
cmp
xchg
scas
movs
outs
outs
das
pop
les
pop
outs
jb
fisttp
aas
adc
add
and
inc
and
and
add
jno
and
adc
sbb
cld
jae
(bad)
in
adc
fisubr
fisub
aam
jbe
popa
js
mov
mov
outs
enter
ja
fs
xor
aam
stc
outs
adc
outs
ja
inc
sub
fs
add
add
push
fs
ins
jno
fbld
fs
stos
outs
push
dec
lea
js
in
adc
popa
add
sub
mov
or
dec
mov
mov
outs
test
xchg
lea
and
dec
gs
pop
and
outs
ja
sbb
add
push
pop
loope
push
aad
jo
jo
adc
stos
inc
clts
add
test
sbb
adc
cmp
test
cmp
adc
inc
xchg
(bad)
lahf
inc
xor
push
xor
push
test
mov
pop
adc
add
mov
pop
add
add
inc
jnp
inc
movq
jb
xor
or
fs
jmp
aam
jg
and
add
mov
mov
xor
aas
pusha
xor
nop
push
mov
mov
fild
add
and
and
outs
leave
add
push
mov
rcl
outs
scas
popf
mov
popa
ja
sub
ja
push
or
or
add
and
aas
push
mov
cmps
test
cmps
sar
cmp
fadd
inc
jb
pop
jmp
add
add
mov
(bad)
mov
in
outs
jb
fiadd
and
dec
(bad)
adc
sbb
fidivr
jo
push
dec
mov
pop
fild
movs
push
adc
add
lods
outs
dec
sub
inc
sub
cs
add
ja
stos
add
sub
jae
inc
jecxz
fist
outs
outs
popf
mov
movq
sbb
jbe
jne
inc
push
adc
sahf
and
xor
bound
cmc
aas
or
fnstsw
imul
adc
ins
push
adc
add
(bad)
test
push
mov
and
push
sbb
push
dec
or
xchg
scas
jae
or
stos
mov
inc
pusha
inc
dec
outs
inc
dec
add
ret
popa
js
push
add
lods
sbb
xchg
push
adc
clc
pop
add
push
push
sub
jae
push
add
add
bound
sub
add
jmp
pop
rcl
add
xor
adc
and
xchg
or
adc
push
push
sar
add
fs
scas
rcr
in
or
mov
and
sbb
sub
adc
add
pop
push
ins
add
rcr
adc
adc
or
add
in
jae
inc
push
add
or
mov
push
ins
outs
or
jae
dec
push
push
outs
or
pop
gs
jo
jb
outs
push
inc
stos
frstor
push
call
and
sub
adc
in
push
sbb
xor
add
or
dec
adc
inc
(bad)
outs
leave
add
sub
fbld
mov
es
es
sbb
mov
lds
aad
dec
sbb
inc
push
dec
add
add
lds
pop
inc
xor
and
lahf
and
scas
fs
and
mov
mov
invd
push
sub
jg
ret
pop
pop
lahf
adc
inc
add
lahf
sub
add
push
or
and
mov
xor
or
jo
das
daa
cmp
push
or
test
in
push
mov
inc
imul
out
cmp
inc
mov
add
add
sbb
add
in
or
and
inc
pop
xlat
sbb
inc
ja
inc
add
mov
or
in
sbb
pop
mov
add
not
test
or
push
movups
or
mov
push
mov
add
sub
mov
ins
outs
mov
mov
pop
fbstp
popa
jae
ror
cmps
mov
and
(bad)
mov
cmp
inc
and
and
ja
add
dec
adc
iret
rep
sahf
or
fs
hlt
in
in
add
fmul
iret
repz
fadd
aam
les
lods
movs
iret
iret
repz
pushf
xchg
mov
mov
adc
inc
ins
rol
dec
jg
mov
fs
sahf
out
sahf
pop
push
dec
inc
cmp
mov
(bad)
or
iret
add
aad
jg
stos
or
push
jne
dec
add
add
jo
inc
femms
add
push
add
or
outs
ss
pop
jg
dec
fimul
push
and
add
pop
in
xchg
sub
sub
in
je
mov
jo
add
pop
inc
loop
sbb
fisub
inc
inc
je
inc
mov
sbb
dec
inc
in
inc
sbb
and
mov
cmp
aas
push
dec
push
les
mov
jo
in
push
pop
les
mov
add
inc
retf
inc
popa
inc
aaa
pop
(bad)
fstp
ja
mov
cmp
cmp
outs
je
or
or
ins
call
mov
and
mov
push
xor
push
xchg
retf
push
and
dec
mov
(bad)
mov
sar
(bad)
push
add
add
push
pusha
pop
pop
and
aas
inc
dec
push
dec
inc
pop
cmp
push
pop
inc
out
inc
mov
adc
mov
adc
sub
dec
ins
jo
cs
or
push
ret
dec
mov
pop
mov
dec
dec
inc
push
ins
jne
cmps
dec
je
outs
je
xor
and
inc
xor
add
adc
mov
cmp
push
dec
outs
ins
xor
adc
or
rol
aam
push
xor
mov
ins
dec
arpl
dec
jbe
add
inc
jns
add
popa
bound
sub
cwde
jp
les
inc
pop
pusha
unpcklps
repz
push
lock
push
pop
in
mov
mul
sub
into
or
cmp
shr
out
add
push
jae
mov
sub
push
dec
inc
aaa
xor
(bad)
out
fiadd
push
push
xor
das
xor
xor
xor
dec
jo
gs
mov
outs
(bad)
add
dec
or
imul
dec
jo
bound
cs
es
add
and
and
cmp
cmp
sub
dec
(bad)
ss
sub
cmp
(bad)
stos
dec
loop
out
sub
cmp
and
or
out
sahf
mul
rol
adc
adc
pop
jo
lahf
and
add
add
lahf
dec
xor
lock
and
bound
jbe
mov
aaa
add
pop
aaa
mov
test
push
repz
sub
(bad)
sbb
or
or
daa
daa
or
aaa
or
jbe
jne
or
daa
adc
adc
jmp
pop
inc
fucomi
jbe
inc
push
addr16
das
push
nop
outs
mov
mov
ins
push
and
iret
repz
jb
pop
or
or
jb
jns
or
xchg
sub
cmp
push
and
aas
xlat
pop
sbb
addr16
mov
xchg
mov
aas
push
mov
inc
pop
lahf
and
add
add
or
retf
adc
adc
test
and
bound
mov
add
je
sub
stc
pop
add
pop
add
lock
add
movs
add
pop
cmp
cmp
cmps
fisttp
mov
cld
adc
xchg
sub
sub
cdq
pusha
daa
mov
cmp
cld
dec
inc
mov
iret
mov
in
call
cmp
add
mov
repnz
xor
fcomp
loopne
jb
jle
jns
mov
inc
lods
cwde
push
iret
repz
xchg
nop
mov
repz
jo
pop
push
repz
repz
cmp
xor
iret
repz
sub
and
sbb
ss
repz
adc
lods
clc
cmp
in
jns
call
fcom
repz
repz
cmp
pushf
nop
jl
or
iret
repz
pusha
pop
push
dec
cmp
repz
cmp
sbb
jns
out
stos
hlt
loopne
mov
out
movs
pushf
xchg
mov
repz
test
ins
fs
popf
cmp
repz
cmp
adc
cmp
out
or
iret
repz
lods
movs
pushf
mov
add
inc
xor
mov
or
enter
cmps
push
mov
jbe
push
pop
and
ror
and
mov
bound
add
pop
jbe
fld
add
pop
push
rol
ins
inc
leave
ja
jg
pop
les
dec
mov
pop
mov
mov
dec
fadd
add
push
sbb
stos
push
call
add
add
pop
and
or
ret
imul
sbb
adc
add
mov
imul
cmps
cmp
or
mov
dec
add
sub
inc
iret
and
fs
add
and
retf
mov
pushf
cmps
mov
outs
add
jns
test
and
inc
jne
outs
xor
or
add
sub
rcl
push
ror
pop
mov
push
cmp
gs
not
cs
js
and
jge
rcr
xor
or
ins
adc
outs
adc
imul
or
inc
xchg
and
inc
jb
arpl
sbb
push
push
adc
add
mov
mov
ins
mov
retf
arpl
push
add
inc
imul
mov
push
add
jb
push
int3
inc
shr
inc
adc
fidiv
and
sub
mov
push
imul
pop
dec
push
loopne
sahf
data16
pusha
call
sbb
outs
sub
mov
push
cmp
pusha
stos
jns
sbb
not
inc
aas
daa
sbb
loopne
adc
push
jnp
jo
pop
pop
nop
xor
jo
cmp
pop
ins
lock
push
inc
sbb
es
pushw
pop
sbb
not
(bad)
push
adc
or
cld
inc
imul
add
ins
sub
pop
cdq
not
mov
pop
adc
pop
cmp
ja
jmp
enter
add
lods
ret
gs
mov
dec
sub
push
movs
ins
add
ins
push
pop
pop
and
mov
mov
cld
mov
pop
sbb
dec
icebp
mov
xchg
(bad)
rcl
ja
sbb
push
outs
imul
push
jne
jns
push
imul
sub
clc
inc
outs
jbe
mov
sahf
movs
jecxz
lahf
inc
sub
mov
jne
or
stos
or
nop
or
add
xchg
add
mov
or
or
sub
sub
movs
cmps
jbe
mov
pop
dec
stos
xor
dec
add
mov
pop
and
fnsave
fs
dec
cmp
mov
adc
adc
fwait
imul
in
mov
mov
sub
dec
inc
push
adc
or
enter
jmp
inc
outs
jns
jo
pop
movs
(bad)
push
popa
push
jo
add
xor
aam
cmp
inc
jle
inc
add
pop
lds
sbb
mov
and
clc
pop
jmp
repz
add
sti
sub
or
iret
outs
bound
addr16
cmp
rcr
outs
push
adc
popf
inc
popf
xor
mov
push
xchg
das
(bad)
inc
inc
pop
ins
ins
clc
int3
mov
je
sahf
aam
call
mov
arpl
(bad)
nop
sbb
push
sbb
jae
pop
sar
sbb
inc
sub
mov
adc
ja
aam
icebp
(bad)
into
out
mov
dec
add
sub
ins
ret
add
jge
not
fmul
or
inc
ins
jb
or
(bad)
ficomp
sahf
cmp
or
and
outs
jae
xor
pop
inc
pop
jne
popa
xor
cld
cmp
mov
push
lahf
cmps
xor
bound
push
or
xor
popa
mov
sub
fdivr
and
xchg
cld
pop
dec
xchg
sub
sahf
pop
jnp
pop
push
push
int3
aam
call
add
mov
cmps
imul
pop
lods
push
dec
jno
sbb
test
loopne
sbb
popa
mov
loope
sti
or
mov
push
dec
push
jo
sbb
rcr
les
dec
icebp
xchg
aaa
dec
rcl
fsubrp
ins
int3
ins
xchg
test
sub
lds
jb
or
sub
data16
dec
inc
xchg
cld
jno
cmp
cmp
das
fs
xchg
mov
call
xchg
mov
add
outs
outs
imul
cmp
ins
shl
data16
mov
add
cmp
retf
imul
pop
push
pop
movs
cmc
mov
inc
jne
sbb
cmp
lods
push
and
ins
jecxz
push
mov
test
test
or
add
sbb
inc
or
add
jnp
das
add
and
xor
and
dec
push
div
jmp
dec
adc
adc
add
xor
out
(bad)
cmp
inc
add
dec
sbb
cmp
push
pusha
jmp
xor
and
pop
add
add
add
sahf
add
(bad)
pop
sti
mov
jbe
push
add
add
add
inc
call
add
jns
add
fild
js
and
jle
and
inc
pop
inc
inc
add
stc
add
or
mov
cmp
(bad)
add
imul
enter
or
(bad)
ror
sbb
and
pop
imul
scas
and
add
out
out
out
pop
enter
or
push
scas
add
mov
add
add
fild
lods
pop
dec
or
ds
jge
xor
push
push
sbb
xor
sub
mov
jp
popf
mov
and
cwde
scas
es
cmp
dec
or
sbb
adc
or
add
popa
ret
test
adc
lods
ins
cmp
xchg
add
xor
cmp
and
inc
add
in
push
mov
add
and
jl
fbstp
nop
lock
add
inc
push
aas
test
or
or
lods
loope
leave
test
push
add
(bad)
sub
add
pop
sub
lods
imul
add
pop
add
inc
xor
daa
mov
mov
aaa
cmp
mov
xchg
sbb
add
cmp
pop
inc
xor
pop
xor
pop
add
add
dec
push
ins
stos
mov
pusha
outs
push
push
push
push
sub
adc
xor
push
push
or
test
je
push
dec
pop
xor
jmp
gs
add
add
sub
sub
idiv
pop
push
and
push
or
dec
inc
inc
mov
mov
and
and
cmp
call
add
add
xor
(bad)
frstor
sub
sbb
add
jbe
test
add
inc
dec
inc
cmp
in
fs
jg
push
xor
sbb
cmp
cmovo
cmp
sti
in
fimul
sbb
pop
ds
push
push
cmp
aas
aas
inc
or
aas
(bad)
(bad)
outs
pop
inc
adc
adc
cmp
and
push
aaa
inc
out
sub
push
test
cmp
test
lds
push
out
jp
sub
sbb
in
sahf
fistp
add
mov
push
lock
fs
mov
inc
ret
ds
or
aam
or
(bad)
(bad)
dec
sbb
sbb
sbb
and
nop
cmp
push
or
add
jp
(bad)
fcomip
or
adc
mov
daa
adc
or
sbb
or
or
(bad)
(bad)
or
or
jae
sbb
sbb
or
sub
sub
sbb
mov
sbb
sub
pop
adc
sbb
xchg
imul
dec
mov
sti
fst
xchg
or
add
jg
inc
bound
adc
and
sub
sub
pop
xchg
or
add
sub
(bad)
(bad)
mov
sbb
adc
pop
push
add
or
inc
xor
inc
dec
adc
std
sbb
aaa
mov
unpckhps
cmp
and
sub
sar
lock
adc
or
inc
pop
dec
sbb
or
adc
xor
call
in
pusha
adc
xor
inc
mov
pop
loopne
out
clc
cmp
and
push
and
or
pop
lock
sbb
inc
scas
push
mov
dec
lods
int
add
sub
push
adc
or
pop
cld
scas
cli
adc
cmp
adc
adc
aas
shl
or
or
jbe
cmp
inc
dec
or
sbb
or
aas
adc
inc
xor
popa
or
sub
dec
and
loope
ss
in
push
sbb
imul
(bad)
aas
repnz
ja
cmp
push
add
es
adc
out
jo
push
xchg
add
cs
add
loope
sti
or
ja
adc
pop
lock
add
bound
or
(bad)
jg
nop
push
adc
adc
adc
pop
ss
or
and
stos
call
sbb
adc
xor
push
push
or
ins
xor
pop
call
or
outs
out
add
push
and
or
adc
cld
mov
cdq
jbe
sbb
adc
dec
or
jl
or
push
jl
push
push
cmp
add
sbb
sbb
ficom
fst
cmp
pop
dec
sbb
or
(bad)
das
les
push
push
comiss
sub
and
sbb
inc
dec
inc
push
ss
cmps
xor
sbb
xor
jo
sbb
and
rdmsr
push
or
pop
or
das
and
push
push
sbb
inc
cmp
cmp
aaa
sbb
pop
dec
inc
out
call
arpl
dec
mov
inc
jo
dec
sub
or
add
sar
(bad)
call
clts
dec
push
xor
adc
inc
cmps
push
push
inc
push
jp
mov
push
aaa
xor
jbe
jnp
dec
sub
inc
pop
or
pop
mov
or
in
pusha
or
or
add
scas
call
adc
adc
ret
bound
cmp
sahf
js
sbb
adc
pusha
inc
shl
fisttp
lock
lock
cmp
(bad)
pop
push
outs
sbb
adc
xor
mov
push
inc
fcom
aas
pop
adc
mov
sbb
or
adc
and
ins
push
mov
scas
clc
jg
imul
sub
adc
gs
dec
and
sar
jle
jo
cmp
push
je
daa
sub
push
inc
adc
das
add
mov
mov
sub
or
sbb
rol
pop
sbb
(bad)
jmp
sub
dec
pop
or
sub
and
movs
or
cmp
(bad)
fld
or
test
fisub
sahf
or
xor
push
stos
ficomp
and
aas
xor
es
pop
stc
push
cmp
mov
sub
sub
lds
adc
or
lock
pop
and
push
jmp
and
or
sbb
lock
pop
mov
pop
bound
xchg
outs
adc
xor
mov
std
add
lock
movs
dec
(bad)
jo
mov
and
push
call
(bad)
jp
fimul
ret
cmp
add
scas
push
std
add
sbb
cmp
adc
sub
std
and
add
ds
dec
add
mov
mov
and
into
loopne
adc
sub
push
or
jp
adc
pop
jo
add
sub
adc
jl
scas
pop
add
popa
mov
push
sub
aam
add
or
cmp
sbb
cmp
add
pop
mov
pop
lock
adc
jg
cmp
lock
add
and
loopne
and
popa
adc
adc
or
(bad)
adc
and
pop
lock
js
xor
inc
pop
popf
xor
mov
jmp
or
or
pop
mov
sahf
and
push
and
es
sub
adc
xor
cs
adc
and
cmp
and
daa
or
ss
push
in
or
and
or
xor
outs
pop
jne
adc
sbb
pop
sbb
or
dec
adc
dec
dec
push
ret
cs
in
shr
pop
cli
xor
or
or
(bad)
and
es
or
mov
push
cmp
je
int3
push
cmps
cs
adc
jo
xchg
lods
sahf
cmps
outs
add
ror
fsubp
inc
sbb
rcr
outs
push
push
xor
adc
push
push
daa
push
add
cwde
and
or
xchg
mov
jle
xor
adc
bound
(bad)
aaa
push
pushf
or
add
add
int3
lock
or
add
shl
adc
sbb
(bad)
sbb
movs
popa
add
out
xor
fwait
sbb
add
and
sar
(bad)
outs
test
or
or
int3
les
mov
jg
cdq
shl
fiadd
pop
call
lock
icebp
inc
fnsave
xor
cmp
inc
jle
pop
loopne
mov
mov
or
cwde
pop
mov
lock
add
dec
jo
xor
outs
into
or
or
inc
push
push
jg
and
mov
push
or
mov
scas
add
popf
push
jne
dec
adc
and
or
cld
xchg
out
pop
hlt
mov
jmp
adc
es
inc
gs
mov
push
xor
dec
mov
dec
adc
push
ror
jp
or
sub
imul
call
inc
mov
adc
int3
mov
jg
add
cmp
xor
push
daa
and
sbb
fmul
add
enter
or
dec
add
or
ins
sub
lock
xor
jl
lods
ss
lock
add
adc
xchg
or
and
sub
inc
js
adc
xor
test
fwait
xor
mov
jge
lock
add
fmul
add
(bad)
push
add
pop
cmp
into
adc
cs
adc
ss
or
adc
imul
push
push
sub
sub
or
or
iret
push
sub
mov
mov
sub
dec
imul
pop
and
cwde
sbb
and
or
pop
repz
jmp
adc
adc
and
adc
sub
out
mov
dec
or
and
pop
pop
mov
mov
adc
jl
or
and
or
sub
and
add
xor
push
int3
cmp
adc
adc
push
not
gs
sbb
push
sbb
add
add
das
or
rol
cmp
cmp
rcl
or
loopne
jo
push
and
or
add
add
lock
lock
adc
pop
push
out
mov
dec
mov
sbb
cmp
adc
imul
or
mov
or
cmps
bound
dec
aam
aad
dec
add
sub
adc
outs
call
cld
stos
sbb
inc
into
and
pusha
mov
inc
cmp
and
and
lods
in
clc
(bad)
add
add
sbb
movs
add
add
test
cmp
out
and
movs
dec
scas
or
cmp
jg
dec
add
jg
mov
or
or
pop
add
jae
(bad)
fistp
add
imul
out
dec
jo
pop
adc
add
scas
ins
es
movbe
movs
pop
idiv
imul
jmp
push
mov
fsubr
adc
add
es
xor
dec
xchg
add
pop
add
in
jb
add
adc
and
add
and
add
jb
popa
je
sahf
and
mov
outs
adc
mov
add
pushf
jg
data16
jmp
arpl
out
pop
add
jns
add
push
xor
xor
cmps
cmp
mov
into
push
jmp
and
inc
add
cmp
jne
pusha
mov
lea
push
or
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
popa
xor
ret
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
dec
add
add
loope
adc
