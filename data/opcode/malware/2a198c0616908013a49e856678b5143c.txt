push
inc
add
add
add
add
add
add
pop
add
add
add
pop
add
push
inc
add
or
add
push
sub
add
add
push
add
add
sub
add
push
sub
add
add
add
or
push
sub
add
xor
cmp
add
add
add
add
pop
lea
add
or
or
or
pop
add
xchg
pushf
pop
pop
pop
or
add
or
push
push
add
or
or
add
sub
sbb
or
jb
add
add
add
push
lea
add
or
add
jo
xor
add
pop
lea
add
add
or
or
push
mov
add
add
add
push
es
adc
add
or
cmp
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
jo
adc
add
jo
adc
add
jo
adc
add
jo
adc
add
jo
adc
add
jo
adc
add
jo
adc
add
jo
adc
add
jo
adc
add
jo
adc
add
jo
adc
add
or
add
add
add
sub
add
or
add
add
push
je
add
add
add
or
add
add
pop
lea
add
add
push
adc
push
jb
add
push
sub
add
push
je
add
sbb
jo
lds
lea
add
add
movups
push
jb
push
add
adc
sub
add
push
je
add
sbb
add
adc
add
add
lea
add
add
adc
adc
pop
adc
sub
add
push
je
add
sbb
push
push
adc
sub
add
push
or
add
adc
shl
add
lea
add
add
or
add
je
add
add
pop
adc
or
add
or
pop
adc
push
add
or
pop
sub
add
adc
adc
push
sub
add
push
or
push
add
inc
add
pop
lea
add
add
adc
adc
push
mov
add
push
je
add
add
or
or
pop
add
or
add
je
add
add
or
pop
add
pop
pop
add
or
lea
add
add
adc
adc
pop
lea
add
add
adc
adc
add
adc
or
add
ficom
adc
adc
outs
pop
add
or
or
add
fiadd
sub
add
add
pusha
add
add
add
adc
add
or
add
adc
add
sbb
add
add
add
add
add
or
push
add
add
or
pop
add
or
add
sub
sub
add
xor
add
add
adc
sub
add
or
outs
or
pop
adc
adc
adc
addr16
add
or
add
je
add
add
sub
add
or
or
outs
or
add
jb
pop
add
lea
add
add
push
adc
push
add
adc
pop
add
lea
add
add
pop
adc
push
jb
pop
add
adc
pop
jb
pop
add
adc
sbb
adc
adc
sub
add
or
add
add
adc
xor
add
adc
add
add
dec
add
add
add
push
sub
add
add
or
add
add
adc
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
adc
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
adc
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
adc
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
adc
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
adc
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
adc
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
adc
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
adc
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
adc
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
adc
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
adc
add
sub
stc
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
inc
push
inc
inc
push
fsub
ficom
lea
es
into
mov
jg
fwait
pop
(bad)
mov
dec
out
ret
mov
dec
jmp
pop
fcmovnb
hlt
scas
sub
dec
inc
(bad)
sbb
daa
sbb
stc
cmp
popa
mov
inc
call
out
jg
add
add
add
cmps
add
add
add
add
add
jge
add
mov
add
aas
add
add
add
in
add
stos
add
add
add
add
push
add
add
add
add
add
cmc
add
add
add
add
add
add
pop
add
cmp
xor
dec
add
dec
sub
dec
or
dec
sub
dec
sub
dec
fs
xor
dec
pop
dec
ja
sbb
dec
and
dec
inc
dec
inc
dec
ins
dec
sbb
adc
or
add
add
dec
adc
dec
push
dec
pop
dec
cmp
dec
sub
dec
cmp
dec
je
inc
dec
jae
add
dec
addr16
push
dec
push
dec
adc
dec
or
and
dec
xor
dec
daa
dec
pop
dec
ja
jne
pop
dec
jmp
add
jbe
ss
or
dec
dec
jg
jne
pop
dec
sbb
dec
dec
dec
jns
sbb
dec
imul
xor
dec
sub
sbb
xchg
add
dec
or
dec
arpl
dec
dec
dec
pop
dec
jl
adc
dec
add
cs
push
dec
ja
ins
dec
das
dec
pop
dec
dec
dec
addr16
jb
pop
dec
or
dec
pop
dec
ins
dec
aas
dec
cs
jae
outs
dec
popa
dec
pop
dec
aas
dec
jg
bound
dec
xor
dec
pop
dec
(bad)
fiadd
add
dec
or
dec
push
dec
sub
dec
xor
dec
ja
ss
push
dec
adc
es
jg
sub
dec
add
dec
dec
dec
jl
add
dec
imul
dec
arpl
dec
xor
jnp
jno
dec
dec
inc
dec
arpl
dec
sbb
adc
add
push
dec
pop
dec
adc
dec
adc
dec
dec
dec
dec
dec
ins
dec
jb
es
sbb
dec
es
push
dec
sub
dec
inc
dec
ds
dec
dec
pusha
dec
jne
sub
dec
sub
dec
or
dec
cmp
dec
jns
and
dec
cmp
dec
ins
dec
adc
add
adc
dec
pop
dec
sbb
dec
sub
dec
sbb
pop
dec
js
aaa
dec
and
dec
sub
dec
sbb
dec
dec
dec
dec
dec
jle
daa
dec
pop
dec
push
dec
pop
dec
add
inc
add
sub
dec
inc
dec
sbb
dec
cmp
dec
adc
dec
add
dec
ja
gs
sbb
inc
dec
outs
dec
xor
dec
sub
adc
dec
jno
add
inc
and
dec
add
dec
and
dec
pop
dec
dec
outs
dec
pop
dec
jp
sbb
jbe
popa
dec
push
dec
and
dec
js
inc
dec
outs
dec
push
dec
dec
pop
dec
ja
jns
sub
or
dec
jae
outs
dec
jns
pusha
dec
ins
dec
or
dec
pop
dec
cmp
dec
fs
gs
popa
dec
or
push
dec
adc
dec
and
dec
jp
push
dec
sub
dec
dec
dec
ja
and
dec
push
dec
jbe
aas
dec
pop
dec
add
ins
dec
pusha
dec
or
dec
jb
outs
dec
add
dec
adc
dec
xchg
std
add
inc
sub
xor
dec
jnp
add
dec
add
dec
imul
dec
xor
dec
push
dec
dec
dec
cmp
jo
sbb
ja
jb
dec
dec
and
dec
cmp
dec
sbb
dec
push
dec
dec
dec
adc
dec
adc
dec
dec
add
sub
dec
or
dec
jp
pop
dec
inc
dec
cs
jo
js
cmp
dec
add
inc
dec
imul
push
dec
pop
dec
push
dec
sub
pop
dec
push
dec
sbb
arpl
add
add
dec
push
dec
and
pop
dec
ins
dec
adc
dec
add
dec
pop
dec
adc
dec
dec
push
dec
xor
dec
pop
dec
push
dec
push
dec
pop
dec
and
dec
xor
dec
xor
dec
fs
add
dec
jae
add
dec
push
dec
mul
dec
inc
dec
add
dec
cs
fs
push
dec
or
dec
inc
dec
pop
dec
push
dec
pop
dec
jge
pop
dec
or
dec
xor
inc
dec
je
push
dec
push
dec
adc
dec
outs
dec
fs
inc
fld
add
sbb
dec
aas
dec
and
dec
or
dec
inc
dec
cmovle
dec
sub
dec
jnp
push
dec
sbb
dec
dec
dec
inc
dec
sub
dec
add
inc
dec
xor
dec
push
dec
adc
dec
add
dec
sbb
dec
das
dec
add
xchg
sbb
add
dec
adc
sub
dec
inc
dec
pop
dec
ins
dec
sub
dec
push
pop
dec
pop
dec
imul
pop
dec
ja
adc
dec
jno
arpl
dec
aas
dec
mov
push
dec
cmp
dec
jle
es
and
dec
inc
dec
push
dec
add
dec
adc
dec
push
dec
inc
dec
pop
dec
dec
dec
cmp
dec
adc
dec
xor
dec
push
dec
cmp
dec
cmp
dec
adc
xchg
add
dec
ja
inc
dec
cmp
dec
add
dec
push
dec
aas
dec
or
dec
fs
push
dec
jo
sub
dec
sub
dec
jp
inc
dec
ss
push
dec
adc
adc
dec
add
inc
dec
xor
inc
dec
sbb
dec
and
mov
dec
sbb
dec
inc
dec
pop
dec
push
dec
add
dec
or
dec
jle
add
dec
xor
pop
dec
inc
dec
pop
dec
and
dec
outs
dec
push
dec
jle
or
dec
jne
loopne
add
xor
dec
inc
dec
or
dec
jb
adc
dec
pop
dec
jb
cmp
dec
gs
cs
pop
dec
xor
dec
imul
dec
push
dec
push
dec
push
dec
idiv
add
cmp
add
dec
jg
outs
dec
arpl
dec
addr16
dec
dec
sub
dec
adc
dec
sub
dec
popa
dec
xor
dec
dec
jo
xor
xor
dec
adc
dec
add
sub
xor
dec
bound
dec
outs
dec
xor
dec
adc
dec
pop
dec
cmp
dec
cs
cmp
dec
add
dec
dec
dec
jnp
sub
dec
imul
dec
dec
xor
dec
sbb
add
jnp
add
dec
sub
ins
dec
xor
dec
and
dec
dec
dec
pop
dec
arpl
dec
jb
sbb
dec
ds
pop
dec
aas
dec
imul
inc
mov
cli
cwde
repnz
push
arpl
repnz
mov
ins
push
dec
xor
xchg
jecxz
std
pusha
or
repnz
push
fst
jecxz
ret
dec
cwde
mov
xor
jns
xor
mov
add
cmp
jbe
xchg
jne
ret
dec
push
jmp
je
mov
les
sub
movs
int
xchg
call
xor
cli
cmp
pcmpeqd
adc
adc
push
lahf
lods
mov
add
lds
pusha
jns
out
pop
add
xchg
pop
or
fdivrp
and
cmc
and
jno
repz
add
fimul
adc
pop
out
in
sub
add
mov
int
enter
aas
fsubrp
and
std
cmps
repz
in
cmp
pop
pop
arpl
mov
clc
out
jg
and
inc
rcr
inc
enter
es
inc
mov
movs
imul
stos
ret
jae
addr16
jne
pop
mov
imul
iret
call
test
movs
data16
enter
and
pop
jecxz
add
gs
push
mov
jae
in
adc
int
into
cmps
mov
fist
addr16
xor
test
sub
add
mov
push
mov
enter
repz
sti
jg
push
jmp
jmp
pop
jg
rcl
push
pop
cmps
mov
clc
cmp
and
test
push
popa
mov
fiadd
hlt
push
sbb
test
or
cmp
inc
sub
sahf
aaa
add
xor
rol
movs
adc
loope
shl
add
sar
or
int3
jle
inc
shr
inc
dec
(bad)
daa
dec
movs
(bad)
jns
adc
dec
jmp
fsubr
repnz
call
cld
sub
mov
mov
push
mov
ds
mov
je
adc
push
mov
and
int3
xor
pop
test
repnz
inc
es
lods
inc
push
cdq
jo
ja
out
pushf
jecxz
rol
dec
in
and
inc
movs
mov
call
push
mov
jmp
test
hlt
hlt
mov
(bad)
popa
xor
mov
adc
out
push
xchg
ror
mov
inc
jmp
inc
xor
test
xor
lods
inc
sub
cdq
pop
push
or
in
xchg
cld
adc
mov
scas
mov
inc
popf
or
sub
daa
scas
mov
mov
retf
jp
lods
call
ret
pushf
pop
dec
jmp
cmps
push
mov
adc
lds
ja
adc
or
loope
push
add
mov
xor
test
inc
inc
push
add
ja
jmp
jne
(bad)
stos
mov
js
mov
push
rcr
aam
mov
jbe
(bad)
fst
ret
xlat
movs
test
dec
mov
cld
cmp
push
xor
mov
pop
adc
test
adc
or
imul
sub
stos
scas
fisttp
sbb
mov
pop
int3
or
jmp
dec
jle
push
xchg
outs
sub
mov
pop
outs
(bad)
mov
push
inc
jl
rol
jge
lods
mov
test
sbb
and
imul
inc
sub
outs
sbb
push
xchg
mov
xchg
loope
xor
in
daa
add
xor
bound
sub
not
(bad)
xor
pop
sbb
jl
push
(bad)
into
pop
daa
sbb
(bad)
lods
(bad)
(bad)
add
(bad)
dec
adc
pop
add
adc
and
xchg
lods
push
push
sub
and
iret
scas
aaa
cli
mov
std
lods
inc
ret
jnp
dec
leave
push
mov
loope
fs
cmps
jge
aad
xchg
dec
(bad)
or
fnsave
sbb
and
jp
push
pop
sbb
jae
or
jns
pop
gs
(bad)
sbb
sbb
pop
lds
jmp
ds
(bad)
daa
fidiv
or
dec
cmps
movs
push
cmp
leave
(bad)
mov
add
(bad)
mov
and
xor
or
cmc
std
lods
jb
cmp
dec
out
adc
and
xchg
dec
sbb
pop
fstp
fwait
stc
enter
push
out
mov
or
jbe
or
in
push
cmp
stos
ja
ins
mov
lock
daa
xor
xchg
mov
je
pop
mov
dec
inc
jo
sub
add
test
jns
stc
popa
jmp
cdq
cmc
add
repz
jmp
cmc
xlat
mov
adc
dec
shl
jno
cmps
cmp
sub
dec
call
outs
in
fnstsw
(bad)
or
push
mov
jmp
or
dec
loope
(bad)
shr
ret
sbb
iret
or
int
cmp
(bad)
xchg
lahf
cmp
mov
mov
xor
jge
xchg
iret
push
imul
clc
xor
sub
or
in
pop
ss
cwde
sbb
call
inc
lock
xchg
sbb
xor
out
outs
(bad)
push
rcr
mov
mov
loopne
imul
sbb
and
ins
(bad)
sub
push
(bad)
(bad)
and
pop
(bad)
jb
out
mov
(bad)
fbstp
sbb
cli
shl
jnp
xor
inc
cmc
pop
inc
ins
cmp
ins
push
xor
mov
inc
in
pop
adc
push
adc
jecxz
add
mov
hlt
into
jbe
xor
or
and
into
scas
fdivr
jmp
fidiv
sti
mov
mov
rol
adc
push
into
inc
popa
dec
xlat
iret
pusha
out
mov
aaa
mov
(bad)
imul
cmp
mov
jl
xchg
das
stos
rcr
test
jno
(bad)
cli
test
call
add
jnp
or
lea
push
push
adc
xchg
test
inc
add
cld
ficomp
(bad)
cmps
scas
or
movs
sub
aaa
retf
aaa
add
dec
xor
push
ins
fs
das
fidivr
jb
daa
adc
xchg
ja
sbb
mov
bound
xor
js
ins
pop
sub
mov
out
push
xor
pop
push
sar
call
lea
sbb
push
xchg
outs
jmp
fwait
sub
adc
bound
mov
push
dec
adc
je
mov
push
jge
push
mov
in
loopne
pop
push
ds
sub
call
inc
sub
call
test
dec
loope
mov
mov
dec
(bad)
cmc
mov
sub
jo
jl
fldcw
inc
xor
test
add
das
or
mov
xchg
add
jge
(bad)
mov
imul
adc
jb
xchg
in
and
xor
dec
adc
lods
loop
sub
inc
imul
push
dec
enter
jge
dec
sbb
cld
loopne
adc
cmp
out
inc
mov
dec
cmps
shl
sbb
call
sub
or
ret
pushf
pushf
cmp
outs
repz
loopne
pusha
test
js
xchg
xchg
ss
pop
lock
cld
xor
movs
loop
enter
(bad)
mov
outs
pop
xor
push
test
repz
mov
out
ins
ficom
aas
sbb
lods
xchg
loopne
cdq
(bad)
ficomp
dec
cmp
aas
test
aam
sbb
inc
inc
mov
mov
aad
and
or
jg
pop
mov
call
jle
dec
iret
dec
inc
add
(bad)
adc
sub
sbb
loope
in
mov
outs
cmp
cli
les
scas
addr16
sbb
mov
(bad)
stc
dec
mov
push
pop
mov
fdivrp
aad
mov
cmps
push
out
mov
call
mov
out
cmp
mov
ret
sub
jae
test
popa
movs
data16
int3
ss
add
pop
push
sub
and
lods
cdq
fmul
add
and
dec
data16
inc
mov
icebp
shl
cmp
mov
dec
dec
sbb
iret
fcomp
ss
in
mov
fcmovu
cli
sbb
lock
(bad)
xchg
arpl
imul
add
shl
and
sub
jbe
dec
lods
(bad)
jmp
(bad)
mov
pop
sub
pop
dec
or
or
add
(bad)
fistp
pop
ficomp
pop
arpl
(bad)
loope
fild
dec
pop
shr
or
cwde
fwait
xchg
mov
cwde
aam
jge
xchg
cmp
dec
mov
dec
cli
test
push
pop
pushf
mov
test
and
sbb
aam
jmp
or
test
ins
fsub
leave
lods
mov
xchg
cmps
fist
jae
cmp
cmp
cmp
mov
push
repnz
push
dec
mov
outs
xchg
inc
ss
cmc
dec
xor
sub
test
es
(bad)
push
loopne
xlat
shld
mov
push
in
in
pushf
nop
(bad)
out
es
out
cmps
sub
and
in
movs
fdiv
push
ins
out
nop
std
add
aas
cwde
pop
mov
pop
inc
jbe
push
das
out
arpl
mov
mov
ror
fs
out
add
fild
shl
mov
mov
fwait
ins
jo
scas
add
aas
add
inc
dec
leave
push
push
pop
add
stc
or
adc
addr16
and
lahf
mov
sbb
popf
(bad)
lds
mov
out
mov
je
xor
fwait
les
cmps
pusha
inc
mov
pop
fnsave
mov
jmp
fld
mov
adc
xchg
add
jge
cmp
or
popf
cwde
retf
ficom
(bad)
fstp
xor
mov
sbb
xlat
test
leave
cmp
mov
clc
retf
cmp
push
jns
mov
inc
mov
xor
adc
nop
lods
sub
jg
inc
mov
lahf
fbld
mov
dec
xchg
enter
inc
mov
mov
add
js
xchg
xchg
es
sub
push
sub
cdq
dec
mov
pop
outs
fstp
bound
bound
mov
iret
sbb
or
(bad)
sbb
cmps
pop
inc
out
sub
ret
push
(bad)
dec
mov
sbb
sub
or
loop
xchg
add
(bad)
fucomp
loop
popa
mov
aaa
mov
and
jg
(bad)
out
mov
mov
pop
cld
push
and
aaa
or
gs
stc
cmps
cmp
out
cmps
and
jo
test
imul
jmp
push
and
rcr
pop
(bad)
loopne
das
pop
and
and
sbb
or
or
sub
adc
sahf
adc
mov
loope
jmp
add
fmul
cmp
mov
sbb
out
mov
pop
test
je
gs
inc
gs
mov
inc
mov
inc
scas
and
dec
(bad)
jae
hlt
add
xor
loopne
gs
shl
(bad)
or
add
(bad)
and
fst
mov
inc
cli
repz
ins
push
dec
sahf
enter
les
sbb
sub
and
int
test
pop
push
adc
mov
cwde
ficomp
adc
push
push
mov
and
sub
fstp
test
loope
cdq
mov
adc
push
push
fist
(bad)
loopne
call
mov
outs
fxch
mov
pop
adc
enter
push
sub
xchg
mov
pop
add
jg
dec
push
scas
mov
lds
lds
jno
jg
popa
cmp
js
test
push
inc
imul
movs
cwde
jmp
xor
shl
ret
pusha
pop
leave
inc
ror
mov
mov
in
or
aas
dec
repz
and
(bad)
mov
jmp
cmps
push
movs
xchg
retf
in
mov
sub
jo
bound
jmp
out
dec
(bad)
xchg
imul
jb
loopne
cmps
shl
test
jl
adc
aam
lods
nop
mov
fimul
push
out
mov
retf
test
lods
cmps
adc
xchg
mov
stos
jp
popa
jno
(bad)
cmp
or
test
add
xchg
sahf
jg
sbb
das
mov
and
jg
retf
ins
xchg
mov
and
out
jb
jnp
add
or
in
jecxz
out
cmp
pushf
sti
xlat
sti
push
dec
arpl
pop
mov
in
pop
daa
loopne
xor
out
jae
fmul
and
cmc
mov
push
dec
xchg
cmp
jle
cs
stos
xor
mov
cwde
iret
push
mov
and
int
cmp
jo
cli
pop
cmp
add
jmp
adc
mov
popa
leave
sti
and
imul
popa
mov
inc
jb
(bad)
ror
inc
cmc
and
sbb
mov
inc
repnz
mov
nop
ins
test
stos
cmps
out
dec
(bad)
pop
xchg
fwait
retf
jp
outs
mov
fs
pop
fistp
call
aad
push
xor
xor
mov
cmps
outs
shl
iret
pop
pop
sbb
test
jmp
mov
inc
pop
dec
ja
inc
mov
fsubr
fsubr
test
push
sub
lods
cmps
inc
je
push
sti
inc
lock
clc
mov
mov
cdq
retf
mov
sub
mov
(bad)
aas
dec
aas
loopne
fisttp
mov
mov
into
sbb
in
push
pop
xchg
and
and
mov
jno
inc
xor
popa
xlat
mov
(bad)
loop
imul
jp
clc
sub
pslld
adc
rol
adc
mov
mov
mov
mov
les
pop
aas
(bad)
mov
dec
pop
pop
lock
int3
xchg
mov
in
xor
dec
jmp
mov
sar
daa
icebp
pop
and
out
jp
mov
aaa
stos
sub
jns
retf
pop
xor
push
data16
sti
or
jl
ins
icebp
arpl
or
in
and
mov
ss
mov
addr16
or
rol
fldl2t
sahf
lods
inc
sub
sub
in
mov
fnstcw
xor
adc
jnp
ds
aas
sahf
mov
(bad)
shl
xor
popf
mov
mov
stos
or
mov
jne
dec
sub
test
daa
out
mov
add
dec
(bad)
rcl
push
adc
imul
sbb
cmp
mov
inc
imul
dec
or
scas
xor
pop
adc
dec
xor
ror
mov
aaa
fnstcw
dec
imul
into
mov
retf
sbb
xchg
loope
fimul
mov
push
pusha
and
sbb
cmps
cmps
lods
fwait
loope
mov
iret
inc
jg
xchg
xchg
inc
(bad)
(bad)
aas
mov
xchg
gs
in
(bad)
dec
imul
cmps
sub
or
stos
fs
(bad)
aas
dec
add
stos
pusha
pop
cmp
push
xchg
add
jb
fdivr
sub
sub
adc
mov
sbb
mov
or
and
leave
jge
jae
rcl
das
movs
loop
jmp
sub
mov
out
add
xor
lock
loope
cmp
aad
mov
sub
pop
lds
test
mov
dec
inc
cmp
(bad)
sub
cli
pop
(bad)
mov
jo
pop
into
stc
nop
pop
(bad)
cmp
add
inc
fs
test
sub
int3
adc
xchg
aam
or
pop
pusha
(bad)
cmc
xor
mov
enter
push
jge
mov
sub
sub
push
mov
pop
cmp
and
in
sbb
mov
push
out
dec
test
jae
(bad)
sbb
xchg
lods
add
add
ins
push
pop
dec
jno
bound
scas
add
aas
jecxz
sar
adc
or
loopne
loop
test
stos
add
jecxz
adc
xor
jo
scas
popf
xor
sbb
lds
and
hlt
xchg
out
mov
(bad)
std
dec
cmps
addr16
sbb
(bad)
sub
xor
(bad)
imul
jmp
aaa
dec
pop
pop
loop
mov
mov
dec
mov
sahf
(bad)
jns
and
xchg
inc
xchg
dec
fsubp
add
jno
call
outs
out
inc
jg
cmp
imul
lahf
inc
ja
in
and
pop
std
sub
add
int3
pop
mov
es
adc
(bad)
adc
jl
push
inc
cli
stos
cwde
rol
and
push
repz
jge
or
push
sbb
xchg
dec
das
jo
inc
sahf
jmp
xor
jb
inc
gs
inc
pop
cld
push
mov
fld
mov
cmps
jmp
or
cmps
push
call
rcl
xchg
dec
test
retf
fscale
add
jmp
jp
pushf
xor
aam
xchg
gs
inc
adc
jmp
loop
jp
popa
paddw
call
fist
sbb
inc
cmp
sub
(bad)
repnz
pop
mov
repnz
mov
adc
retf
retf
mov
fwait
cwde
pop
pop
jge
ror
test
test
mov
movs
xor
sbb
sub
xor
sar
inc
cmp
xor
and
mov
xor
xor
cwde
ins
mov
shl
mov
pop
push
or
sub
mov
xor
out
mov
cmp
mov
push
leave
jge
add
call
add
into
ja
cmp
(bad)
sub
arpl
in
fsubr
mov
dec
dec
xchg
and
dec
and
fild
cmp
fnstsw
sbb
pop
jg
cmp
or
jmp
mov
and
adc
das
cmp
pusha
inc
pop
outs
or
loope
lds
xor
mov
mov
add
(bad)
aad
jbe
inc
push
xchg
pop
and
mov
icebp
sbb
ret
int3
je
add
addr16
les
pop
xchg
jmp
rcl
add
in
jl
out
gs
mov
mov
adc
adc
mov
sbb
dec
pminsw
mov
mov
in
cld
ins
scas
sar
lahf
jo
nop
cs
push
xor
pop
push
mov
data16
popa
fld
lahf
cmps
ret
jmp
xchg
mov
xor
or
mov
push
sbb
shr
loopne
mov
jne
cmps
fcom
rol
dec
mov
scas
ret
sub
arpl
mov
pop
gs
and
xchg
sub
jbe
mov
xchg
push
sbb
and
xchg
sti
jg
call
call
cwde
inc
sbb
push
mov
mov
cmp
fs
pop
les
das
cwde
call
aad
repnz
jge
inc
lds
in
rol
in
adc
inc
lods
jp
adc
mov
ret
mov
push
lods
push
xchg
scas
cld
mov
mov
xor
imul
popa
out
jp
les
sub
retf
sub
iret
shr
neg
fcomp
sub
sub
mov
icebp
lea
pushf
jb
xchg
mov
or
push
cwde
pop
xchg
daa
cmp
pop
cmp
(bad)
(bad)
xchg
out
aam
pop
inc
sbb
cwde
test
sbb
scas
cli
and
ja
outs
test
cld
inc
rol
ss
fwait
add
in
cmp
push
xchg
mov
cmp
out
inc
stos
mov
cmps
std
xor
pop
pusha
push
xlat
ins
xor
cli
push
mov
cmp
test
and
pop
icebp
pop
rcr
xchg
or
aaa
rcl
inc
sbb
sub
push
aam
rcl
jae
addr16
movs
rol
call
dec
lods
mov
(bad)
jge
gs
xchg
inc
push
outs
push
push
out
adc
addr16
movs
mov
test
jb
in
fcom
sar
mov
sub
jb
loop
(bad)
aad
movs
fwait
jmp
or
sahf
inc
into
add
movs
xchg
mov
bound
out
xchg
pop
pop
cli
jnp
jnp
pop
cmps
jbe
jmp
mov
push
cmp
add
xchg
sub
movntq
ins
aam
push
push
movs
cmps
push
arpl
stos
jne
dec
call
rcl
out
hlt
dec
int
jg
xor
hlt
(bad)
ins
cs
push
div
or
or
xor
js
inc
dec
(bad)
fmul
outs
int3
push
pop
mov
retf
jecxz
adc
xchg
add
jge
push
setp
push
movs
aam
inc
mov
mov
aam
rol
xchg
je
adc
xchg
mov
xchg
out
push
and
lds
ret
cli
imul
pop
(bad)
imul
mov
loope
jno
mov
aaa
adc
icebp
cs
(bad)
loop
lahf
rol
cmp
adc
rcl
sbb
repnz
frstor
icebp
(bad)
(bad)
jp
(bad)
les
popf
pushf
mov
cwde
jg
mov
and
fist
(bad)
jmp
mov
pop
sbb
xchg
dec
popa
popf
daa
scas
movs
push
fadd
ja
pop
push
mov
cmp
pusha
outs
add
in
add
js
scas
out
xchg
pusha
jno
les
test
jmp
pushf
rol
add
pop
mov
mov
jl
lods
pop
xchg
mov
out
mov
call
cmc
movs
sub
dec
push
and
retf
lahf
mov
push
xor
pop
push
pop
test
sbb
fcom
or
in
push
es
cdq
or
xchg
mov
sti
adc
mov
out
jmp
cmp
adc
out
pop
xchg
pop
pop
loopne
addr16
ret
dec
test
js
cmc
sbb
popa
popa
int
sti
in
cmps
mov
and
(bad)
sub
sti
mov
inc
push
mov
ds
arpl
cmp
cdq
push
dec
fwait
pusha
mov
(bad)
lahf
and
in
mov
cmp
mov
js
jae
mov
mov
outs
cmp
xor
rol
(bad)
das
loope
loopne
sbb
std
stc
add
mov
fnstcw
mov
adc
dec
mov
xor
(bad)
fprem1
inc
adc
loope
fiadd
test
mov
test
pop
adc
push
ins
mov
xor
out
push
data16
loop
loop
ret
sbb
fldcw
ror
out
das
jo
fcmovb
lods
addr16
jge
mov
arpl
mov
pushf
daa
out
pop
or
popf
push
sbb
(bad)
cdq
aas
test
lock
and
jae
xchg
jo
outs
jb
mov
movs
push
outs
cmc
mov
sbb
mov
loope
fbld
jae
stos
js
call
loopne
and
mov
adc
xchg
pop
retf
movs
movs
adc
fwait
dec
faddp
jns
push
ror
jle
(bad)
mov
out
(bad)
pop
ins
lahf
mov
mov
call
call
jge
popa
aas
dec
or
ret
in
aad
nop
scas
or
push
pop
sbb
pop
inc
out
sbb
cmp
cdq
sub
repz
mov
enter
cmp
and
push
outs
leave
in
movs
push
mov
adc
aaa
push
ds
jle
stos
std
dec
out
mov
adc
and
imul
lods
inc
retf
repz
sbb
pop
ins
stos
push
inc
sbb
cmp
add
jnp
neg
cmp
fst
mov
and
mov
xchg
bound
lds
pop
ds
jle
shl
xchg
nop
out
sahf
push
sub
je
leave
test
scas
pop
sbb
sti
cmps
jmp
or
cmp
leave
sub
push
outs
pop
aaa
cdq
clc
inc
sar
adc
cmps
or
mov
mov
imul
mov
dec
jl
add
dec
adc
leave
jmp
mov
into
call
ins
push
std
iret
into
scas
push
cmps
sub
imul
ja
mov
sub
mov
not
fimul
push
jecxz
xor
rcr
xchg
arpl
test
jnp
aam
cmp
das
(bad)
das
test
mov
cs
mov
dec
fidiv
xor
fsub
rol
jl
add
lods
jle
std
pop
fld
xor
add
sub
mov
popf
shr
mov
stc
leave
in
mov
mov
add
hlt
rcr
in
dec
out
cmp
aad
retf
cmps
mov
push
add
pop
mov
add
cs
inc
out
mov
inc
sbb
dec
test
cdq
jp
push
push
add
push
add
and
loop
add
test
arpl
xchg
neg
push
cmp
leave
mov
dec
pop
inc
es
lock
neg
xor
fwait
add
mov
mov
push
imul
sub
inc
dec
fiadd
cmp
rol
xlat
add
dec
xchg
mov
rcr
cmp
outs
rol
in
fbstp
and
push
imul
jmp
aad
fdivr
inc
retf
scas
adc
inc
add
cli
jl
dec
out
(bad)
aaa
mov
retf
adc
mov
ret
push
popfw
es
mov
mov
mov
into
xor
pop
or
mov
mov
imul
cmp
ror
loop
or
mov
mov
adc
cli
sub
popa
outs
add
mul
xchg
xchg
mov
mov
jg
push
test
inc
pop
dec
pop
jnp
add
jmp
adc
xor
das
xor
or
cli
push
adc
add
rol
push
mov
push
mov
adc
faddp
(bad)
xlat
adc
pusha
inc
inc
out
into
sub
dec
inc
xchg
in
xchg
ins
inc
add
lods
mov
pop
xchg
fiadd
xchg
scas
add
mov
ret
pop
out
inc
shl
movs
push
mov
push
addr16
dec
cli
or
imul
in
jmp
inc
lock
push
cmp
xchg
sbb
retf
push
popf
add
jno
fild
call
mov
or
xor
mov
cmp
cdq
dec
dec
mov
cmp
adc
and
ins
pop
cmps
dec
xor
push
sbb
in
add
ins
adc
clc
call
cmp
and
xor
ds
call
fistp
mov
cmp
jb
jg
xor
inc
sti
repnz
sbb
ror
mov
sti
nop
sub
call
dec
(bad)
sub
out
sub
mov
mov
stc
adc
add
cli
hlt
jp
xchg
push
pop
fld
(bad)
ins
bound
in
pop
cmps
pop
int3
push
stc
inc
dec
xor
jbe
cmps
xor
cmps
arpl
shl
mov
jl
or
push
push
test
mov
xchg
(bad)
adc
jno
dec
pop
jmp
inc
cli
mov
sub
mov
sub
xchg
movs
xor
or
jns
mov
out
cld
es
sub
mov
fnstcw
push
test
aam
test
push
dec
jb
das
ret
das
mov
sar
cmps
je
ror
sub
scas
sbb
out
dec
data16
and
aad
sbb
or
ret
dec
jo
sbb
mov
push
adc
sub
mov
sar
push
and
add
xor
das
lahf
sti
mov
in
dec
sahf
inc
xor
std
pushf
sti
and
ret
imul
stos
dec
div
or
out
ins
xchg
das
das
dec
into
xchg
add
xor
popa
movs
xchg
push
xor
(bad)
push
sub
xor
out
or
test
mov
mov
cmp
push
sub
iret
and
(bad)
iret
pusha
and
cs
outs
int
cmps
or
jge
inc
(bad)
and
jge
nop
mov
mov
popf
cs
gs
mov
test
je
add
out
(bad)
fldcw
stos
sbb
std
mov
pushf
lock
jbe
cmp
out
jo
div
lods
xor
imul
fidivr
ret
rcr
jle
test
or
mov
test
or
mov
arpl
xchg
sbb
jg
push
xchg
xlat
sbb
jmp
dec
mov
adc
sub
or
bound
mov
push
retf
mov
inc
rol
out
jb
popa
xchg
add
hlt
out
jp
jmp
xor
das
dec
les
mov
call
hlt
lods
int
jne
sahf
and
cld
sbb
mov
neg
mov
mov
mov
out
sbb
pushf
aaa
loop
cmp
cdq
dec
mov
loope
stc
xor
or
imul
out
lock
lds
adc
add
mov
dec
or
leave
xchg
xor
retf
in
sbb
add
jo
mov
out
mov
bound
xchg
fistp
fisub
fwait
jbe
imul
mov
rcr
ins
sub
rcr
pop
imul
out
dec
xor
sbb
fist
xlat
mov
sahf
(bad)
cwde
fisub
push
xor
jmp
adc
inc
imul
es
and
ror
push
int3
mov
add
call
es
daa
loopne
int
inc
dec
std
(bad)
dec
xchg
push
adc
sub
pop
fidiv
fmul
aad
xor
(bad)
cmp
cmp
mov
in
aam
cdq
leave
adc
cmp
mov
sub
out
sbb
call
push
or
lods
aas
cmps
mov
sbb
cmp
xchg
lock
retf
cmc
(bad)
cmps
cmp
cmp
mov
fs
push
rcr
scas
add
es
cmps
ret
gs
jne
movs
inc
xchg
jno
daa
dec
add
movs
std
push
gs
or
push
dec
mov
jae
push
shl
or
inc
xchg
push
mov
(bad)
enter
test
pop
push
or
aas
cmp
loopne
xor
clc
mov
mov
jns
mov
call
sbb
push
sub
stc
push
fcomp
gs
dec
dec
mov
and
push
xchg
sub
in
adc
adc
sbb
add
in
dec
repz
jcxz
push
fstp
inc
mov
adc
fisub
push
add
pop
rcr
and
inc
inc
lods
popa
test
dec
retf
xchg
stos
push
mov
fdiv
push
push
inc
dec
pop
and
out
jne
mov
pop
xchg
xlat
xor
(bad)
mov
mov
(bad)
xor
mov
add
xor
inc
mov
mov
pusha
es
mov
mov
xor
vandps
inc
(bad)
je
mov
cmp
cbw
dec
cmp
dec
mov
mov
sub
std
push
inc
push
adc
(bad)
call
sbb
cmp
xchg
jae
sbb
enter
sub
push
(bad)
in
test
fwait
mov
mov
int3
cli
arpl
leave
popa
lahf
inc
loop
shr
je
dec
add
mov
jge
inc
push
dec
movs
sti
adc
stos
inc
cli
ficomp
fdivr
test
or
and
cmc
repnz
xor
arpl
movs
push
ins
pop
out
or
and
xchg
lea
sbb
and
inc
imul
aam
in
(bad)
out
jns
clc
push
add
int3
sub
out
pop
add
jp
ins
dec
mov
mov
cmps
sub
push
dec
imul
jb
sub
out
mov
mov
and
(bad)
pop
stos
mov
sbb
dec
adc
push
pop
lock
lds
mov
out
jge
add
scas
in
jge
int3
out
es
mov
mov
or
sbb
outs
fdivr
enter
call
scas
mov
and
rcl
shl
mov
mov
loop
mov
dec
jno
(bad)
(bad)
(bad)
jp
mov
fsubr
push
jmp
mov
sub
and
mov
cmp
jnp
ds
add
dec
in
xor
std
or
repz
pusha
pop
and
dec
sar
mov
jb
js
das
dec
or
and
sub
repnz
mov
fwait
test
or
or
scas
jl
aaa
fwait
xchg
scas
add
jl
pop
xor
js
pop
das
jl
mov
mov
scas
pop
and
cmp
cmp
dec
movs
inc
inc
retf
add
push
enter
mov
sub
mov
leave
lods
adc
sti
add
cmp
test
sti
jae
mov
mov
call
inc
pushf
test
push
and
cmps
imul
js
rcl
fnstenv
ins
js
mov
xchg
sbb
mov
dec
ss
sub
(bad)
movs
sbb
out
adc
mov
sbb
sub
stos
adc
pop
xchg
pop
clc
addr16
add
or
outs
inc
mov
enter
ret
sub
adc
fild
sbb
fimul
imul
punpckhbw
cmp
mov
xchg
pusha
inc
ds
pop
jmp
and
add
mov
pop
(bad)
shr
hlt
sahf
in
xchg
dec
sub
test
imul
out
mov
push
stos
ret
retf
or
sbb
or
sbb
ss
pop
inc
pop
mov
adc
clc
dec
sbb
inc
pop
sub
and
fiadd
add
inc
iret
pop
fadd
jecxz
add
jp
sbb
add
test
je
mov
(bad)
jmp
int3
jae
push
xor
inc
sub
mov
cdq
inc
xor
mov
sbb
xchg
outs
aaa
or
cmp
int3
mov
das
mov
mov
mov
(bad)
pop
xchg
scas
jbe
and
retf
dec
call
pop
add
xlat
xlat
dec
rol
cmp
outs
sbb
jmp
xchg
mov
add
inc
jmp
pop
int3
bsr
xor
popf
imul
cmp
popa
mov
loopne
pusha
fild
dec
sub
cmp
dec
pop
in
and
iret
popa
in
push
mov
loopne
stc
jge
rcr
xchg
bound
xchg
test
xchg
sbb
mov
cdq
or
daa
sub
inc
jmp
add
movs
jns
js
xchg
sub
(bad)
lahf
or
inc
inc
cld
sub
push
(bad)
fcomp
add
jmp
inc
shl
push
pushf
hlt
sub
packsswb
out
into
mov
aad
mov
jmp
sahf
adc
sahf
xchg
cs
or
(bad)
(bad)
icebp
sbb
jecxz
xchg
fidiv
sahf
ror
jle
les
adc
jmp
jmp
adc
cmps
adc
lock
pop
sbb
or
sbb
push
mov
jl
aad
or
loop
pop
jmp
lahf
retf
dec
aas
outs
inc
outs
pop
dec
fsubr
popf
push
pop
adc
movs
cli
jl
xchg
sub
sti
rcr
or
pop
lea
inc
fcomp
jp
(bad)
jb
imul
mov
push
push
push
jb
sbb
sub
rcl
pop
les
in
sub
mov
jno
mov
scas
pop
movs
pop
jb
popf
pop
std
sbb
inc
ja
xchg
cmp
in
mov
dec
jg
mov
cmc
push
cmp
cdq
or
push
push
(bad)
push
loop
lods
into
out
adc
jmp
and
loop
mov
sub
in
cld
fisttp
mov
mov
fs
lods
sub
jl
movs
mov
test
jmp
dec
dec
push
loop
fisub
add
dec
mov
jmp
call
cld
push
(bad)
cli
push
popa
ins
jl
test
jbe
repnz
movs
adc
push
stos
fwait
outs
je
sub
pop
arpl
(bad)
mov
dec
imul
clc
cwde
sub
sahf
cmc
inc
and
dec
xor
jae
mov
jle
mov
xchg
mov
cli
pop
push
add
xchg
out
daa
and
mov
imul
mov
cdq
xchg
scas
inc
fdivr
dec
das
push
sub
bound
or
xor
sahf
bound
mov
rep
pop
cmps
adc
pushf
jecxz
ja
push
jg
pop
(bad)
rcl
cwde
ds
shl
rol
stos
mov
stc
int3
fcmovne
repnz
push
sub
div
sub
ret
out
mov
call
sub
lods
stc
push
mov
pop
sbb
das
adc
mov
pusha
jo
(bad)
jae
pop
pop
in
loop
cmps
or
and
sbb
pop
pop
clc
add
ror
cwde
test
inc
jns
pop
sbb
lea
fldenv
das
fisubr
pop
or
leave
push
mov
vpunpcklqdq
mov
in
inc
mov
dec
stc
or
(bad)
stc
dec
mov
mov
ret
push
adc
mov
gs
mov
jmp
and
sbb
stc
ret
cmps
ins
pushf
fwait
xor
dec
push
adc
mov
shl
jbe
mov
retf
jmp
(bad)
enter
push
mov
adc
addr16
popf
fcmovnu
push
pop
mov
push
dec
jmp
shl
jmp
and
xchg
(bad)
in
cmp
sbb
push
sub
call
and
jp
pop
repnz
adc
stc
push
lock
fcom
ret
mov
clc
xchg
add
dec
icebp
pusha
pop
pop
js
pop
adc
inc
mov
fs
out
mov
fs
fbld
mov
cmp
add
cmp
out
popf
dec
outs
(bad)
adc
sahf
mov
cmp
mov
dec
cmp
rol
lock
iret
mov
fwait
hlt
mov
or
xchg
jb
mov
pusha
rol
retf
pop
pushf
int3
(bad)
sub
xor
sub
dec
mov
mov
aam
test
scas
push
ins
(bad)
outs
(bad)
das
fsubr
xchg
rol
mov
out
rol
sar
nop
call
pop
push
inc
arpl
dec
aas
scas
lods
es
jae
test
loopne
dec
fbstp
into
jmp
mul
hlt
jp
mov
not
pushf
push
loope
inc
pop
icebp
adc
popa
push
pop
mov
cmp
pop
gs
ds
inc
es
pop
jno
mov
xchg
shl
push
es
fdivrp
fstp
aaa
add
(bad)
loopne
xor
pop
jg
in
ss
jns
push
cs
push
and
sti
sbb
and
nop
adc
jbe
adc
ror
sub
mov
pusha
sahf
jg
fcomip
cs
xchg
cli
xor
push
xchg
(bad)
cmp
cwde
out
dec
jg
cmps
xlat
cmp
aad
sti
mov
mov
enter
pop
fs
cmc
mov
sbb
xchg
shl
(bad)
pusha
leave
push
or
xor
(bad)
outs
std
add
test
and
and
repnz
test
mov
shl
and
loope
aaa
sub
push
xchg
lea
mov
and
mov
pop
inc
test
outs
mov
or
push
jns
cpuid
cmp
xchg
imul
cmc
fst
adc
test
ret
leave
pop
and
sbb
cdq
mov
pop
or
jmp
fnsave
les
popf
dec
inc
into
xchg
cmp
sbb
xchg
jle
pusha
mov
mov
xchg
xlat
pop
adc
lock
inc
dec
je
call
xor
xor
mov
sub
mov
ficomp
adc
pop
inc
ret
rcr
outs
enter
(bad)
imul
mov
sbb
pop
jbe
out
ins
pop
mov
pop
xor
sbb
sahf
popa
or
push
lods
mov
sub
stc
mov
inc
int3
adc
repz
and
push
or
or
mov
jbe
in
push
mov
jge
cli
jno
mov
loope
loopne
add
xor
or
sub
mov
inc
cmp
and
rcl
in
sub
js
sub
add
fsubr
rcl
sub
mov
mov
loopne
out
dec
gs
mov
fst
in
cdq
call
dec
jb
mov
sbb
rep
sbb
jg
cmp
and
std
pop
sub
mov
dec
test
sbb
cmc
dec
js
jns
dec
in
pusha
xchg
daa
rcl
xor
jl
daa
retf
ror
vunpckhps
jns
add
ror
mov
cmp
test
pop
dec
shl
rcr
(bad)
movs
xlat
jbe
and
and
jns
sub
aaa
push
fidivr
call
or
nop
in
mov
add
je
and
jnp
push
push
mov
stos
jnp
int3
stos
jnp
mov
loope
inc
xchg
push
popa
clc
loop
adc
and
ds
loopne
or
cmp
mov
inc
cmc
dec
pop
stos
add
sbb
xchg
pop
and
or
jns
jnp
js
inc
dec
adc
aas
mov
dec
mov
lahf
cli
dec
xchg
push
pop
mov
stos
mov
dec
mov
push
cmp
mov
cld
inc
jnp
mov
outs
mov
not
stos
stc
add
sub
les
xor
adc
aaa
bound
hlt
sub
bnd
xchg
cmp
dec
iret
mov
nop
sbb
popf
add
out
add
pop
xchg
pop
iret
jno
leave
jns
int
sub
daa
sbb
mov
inc
in
cmp
add
mov
mov
aas
xor
je
ja
push
pop
loopne
jno
or
aam
xor
popf
pop
mov
test
pop
pop
mov
je
retf
jle
add
pop
mov
cmp
mov
popa
mov
mov
in
mov
iret
push
cmp
xchg
icebp
sahf
jno
pop
mov
repnz
inc
shr
les
(bad)
or
jbe
push
cld
add
(bad)
hlt
gs
mov
xor
jg
pop
lahf
xor
jmp
cli
jnp
(bad)
push
bnd
push
mov
popf
adc
mov
or
push
test
loop
(bad)
cmp
and
jns
sub
and
outs
stos
cmp
mov
not
fidivr
cwde
dec
adc
sbb
outs
jmp
adc
pop
sub
scas
mov
out
fcmovne
or
xchg
hlt
icebp
xor
aas
xchg
push
mov
mov
mov
cmp
mov
test
loopne
fldenv
sar
push
or
mov
pop
(bad)
push
sti
lods
adc
or
aam
mov
(bad)
push
js
mov
data16
ins
dec
and
or
test
inc
inc
ins
lods
movs
push
pop
jne
or
jae
ins
in
xor
mov
scas
(bad)
cli
(bad)
inc
sbb
out
sti
imul
or
pop
mov
jo
pop
jmp
xchg
in
mov
(bad)
sti
iret
pop
(bad)
in
sbb
sub
movs
push
cmc
lods
icebp
dec
sbb
dec
gs
imul
ret
mov
inc
retf
sub
mov
icebp
mov
xchg
jmp
mov
xor
mov
out
dec
xor
dec
fistp
inc
aam
repz
test
ins
dec
push
cwde
lds
xchg
dec
cmc
pop
div
int
push
pop
fsubrp
mov
and
lods
lahf
enter
dec
mov
ins
add
lods
in
push
sub
xor
push
xchg
aam
xchg
inc
jecxz
mov
jmp
mov
repz
shr
pop
out
mov
mov
mov
repz
push
(bad)
xlat
ja
pop
adc
pop
mov
push
shl
xor
or
cmp
cmp
and
aas
xchg
cwde
cdq
cmp
out
mov
std
in
leave
dec
rcr
add
pop
popa
and
or
clc
das
popa
cmp
jo
push
xor
(bad)
xchg
and
cwde
fs
pop
cs
bound
xchg
sbb
mov
in
out
jg
jnp
loop
xor
shl
jnp
stos
xchg
jmp
xor
pop
xchg
lods
repz
sbb
lods
dec
add
scas
(bad)
jle
retf
das
inc
out
in
ret
ins
jne
mov
es
xor
xor
jo
dec
cmp
xor
inc
mov
iret
add
int3
cmp
or
sbb
mov
pop
xor
fsubr
push
ins
arpl
jne
inc
repnz
dec
xchg
sbb
fucomp
mov
js
jae
retf
dec
dec
and
sbb
gs
and
push
sub
xchg
xchg
push
cmps
outs
dec
loopne
(bad)
rcl
inc
push
icebp
lahf
(bad)
push
sbb
ret
dec
cmps
pusha
pop
add
adc
jle
inc
or
sbb
xchg
mov
jmp
cmp
fucomip
ror
cmps
mov
jo
out
push
cdq
mov
push
out
in
scas
shl
cmp
test
hlt
loop
dec
mov
jae
and
cmps
(bad)
push
mov
ss
push
nop
(bad)
ja
cdq
jmp
es
lods
push
jns
js
add
jge
fdiv
sub
mul
or
loopne
xor
fcomp
jecxz
movs
push
cld
xchg
cmp
add
(bad)
pop
(bad)
push
scas
sub
adc
or
push
call
mov
cmp
cli
cmp
add
aas
addr16
sahf
adc
hlt
aam
cmp
addr16
inc
inc
jl
scas
test
scas
popf
sub
lods
xlat
adc
popf
push
push
xchg
xchg
or
mov
xchg
mov
mov
dec
cmp
mov
inc
mov
mov
jo
gs
cwde
movs
ffreep
mov
popf
and
cmp
data16
(bad)
mov
movs
xor
push
loopne
cmp
movs
push
mov
mov
mov
retf
and
add
xor
sub
repnz
mov
dec
sub
and
xchg
add
cmp
stos
push
ins
and
sti
and
shr
fist
sbb
ss
xor
sbb
pop
jle
mov
aas
sbb
and
dec
fisubr
in
jg
idiv
mov
jecxz
movs
jg
add
retf
push
cmp
mov
xchg
push
jnp
imul
dec
push
es
or
int
and
sub
mov
and
std
dec
cmps
sub
xchg
jmp
jmp
test
ror
jo
inc
or
in
mov
mov
aad
pop
mov
dec
pop
cmps
sub
sub
lea
ds
mov
pop
mov
ror
jle
xchg
sahf
gs
imul
fs
and
neg
sub
ficom
or
test
jecxz
retf
or
xor
out
cli
jo
and
dec
xchg
or
pop
push
xchg
lahf
xchg
inc
sub
gs
(bad)
mov
dec
xchg
inc
dec
push
loope
popf
xlat
xor
outs
inc
in
jno
test
rcl
push
push
push
mov
iret
pop
mov
int
adc
scas
jae
and
cmp
cdq
pop
ins
pop
and
mov
pop
in
lods
jmp
pop
dec
jle
repnz
aas
pop
mov
mov
(bad)
sub
test
add
push
aas
push
cld
sar
retf
js
into
(bad)
jecxz
push
retf
call
dec
movs
aam
pop
add
fcom
push
mov
push
(bad)
cmp
mov
dec
in
xchg
push
loope
and
ss
pop
and
mov
in
xchg
cmp
and
and
rcr
add
mov
ja
cld
ret
lds
push
(bad)
mov
shl
xchg
mov
popa
lods
jp
imul
pop
ror
jo
add
mov
push
bound
mov
jnp
in
or
dec
mov
call
push
sbb
setb
adc
shr
push
add
movs
enter
rol
stc
mov
in
fld
sbb
icebp
push
lock
mov
scas
pop
ins
push
cs
mov
stos
dec
ffreep
stos
pop
lock
je
and
push
data16
ins
scas
rcr
inc
push
(bad)
rol
add
popf
pop
loopne
out
popa
outs
outs
push
push
jnp
push
pushf
mov
xchg
ins
pop
call
add
ret
mov
(bad)
fisubr
in
jge
in
sbb
mov
rol
cmps
xchg
push
adc
pop
pop
fiadd
push
jne
dec
enter
repz
dec
pop
jle
xor
xchg
iret
imul
popa
sub
push
retf
pop
jmp
mov
lods
movs
outs
or
and
push
outs
iret
jmp
pop
add
adc
ficomp
out
mov
cmp
icebp
add
es
add
push
lods
pop
pop
pusha
xchg
xchg
iret
ja
dec
stos
sub
stos
mov
jbe
lods
sub
and
loop
adc
jecxz
in
dec
inc
xor
dec
or
jns
rcl
mov
sbb
xor
test
or
movs
sub
fild
dec
cdq
xchg
and
mov
(bad)
xor
inc
lahf
rcl
push
sar
mov
(bad)
and
icebp
add
outs
adc
mov
and
addr16
inc
pop
xor
xchg
test
inc
fimul
inc
xchg
clc
mov
inc
sub
fild
dec
mov
mov
xor
inc
ins
push
fidivr
push
clc
arpl
ins
jno
cmps
sar
push
jno
inc
push
ja
cdq
xchg
dec
icebp
lds
sub
and
adc
jg
pop
inc
imul
stc
call
arpl
mov
in
movs
and
add
xor
clc
mov
std
test
mov
mov
push
sub
inc
and
mov
je
xchg
pop
stos
pop
or
out
ins
imul
mov
mov
add
test
xchg
jg
or
or
hlt
dec
idiv
mov
sbb
clc
psubb
mov
movs
pop
lock
jp
and
mov
mov
push
loope
jmp
add
push
xchg
or
xchg
mov
stos
push
pop
sbb
mov
sub
dec
pop
mov
arpl
mov
adc
and
sbb
ds
sub
jecxz
pop
out
xchg
mov
gs
test
sbb
call
xor
xlat
sti
shl
cmp
mov
push
stos
mov
or
and
mov
shl
imul
or
mov
outs
pop
es
xor
(bad)
loop
test
mov
sbb
push
not
jecxz
mov
jmp
inc
enter
es
std
int
in
inc
jb
sbb
xchg
cmp
pop
mov
leave
push
out
out
clc
test
or
pop
dec
iret
fdiv
add
adc
les
fistp
mov
and
inc
cmp
jle
loop
push
sahf
pop
cmp
push
iret
pop
mov
add
hlt
xor
lds
fist
popa
push
dec
jb
stos
rcr
dec
pop
and
or
fst
outs
or
icebp
sbb
cmps
or
adc
addr16
fld
push
adc
adc
mov
pop
mov
push
(bad)
adc
jmp
mov
adc
xchg
sub
js
imul
mov
dec
rol
xor
into
cmps
shr
adc
cvtpi2ps
shr
push
cmps
push
xchg
xchg
xchg
jle
lock
inc
sub
inc
cmp
mov
and
in
cmp
ficom
cmp
aaa
push
lods
in
pop
ss
jmp
jle
xor
or
stc
aaa
cmps
dec
or
enter
inc
jmp
xor
pop
loopne
mov
or
jb
jnp
shl
jle
dec
or
mov
das
aam
jmp
enter
xchg
push
xchg
ds
mov
adc
pop
xor
add
push
dec
jae
(bad)
loop
xor
arpl
cmp
inc
cdq
cld
retf
xor
nop
aas
ins
inc
pushf
push
test
dec
jno
mov
cld
out
hlt
call
cmp
ins
enter
test
dec
mov
mov
mov
mov
fistp
pushf
aad
push
cmp
sahf
mov
repnz
add
retf
loopne
inc
stc
aam
les
or
xlat
inc
outs
or
pop
ret
hlt
call
data16
in
pop
(bad)
lods
mov
sbb
inc
inc
and
iret
out
pop
xchg
sub
fadd
or
cmp
sbb
push
ja
cld
nop
repnz
movs
xor
subps
movs
mov
push
shr
sbb
mov
ror
cmps
cmp
sub
aad
iret
pop
or
push
jb
ret
cmp
xlat
aad
mov
popa
sub
sub
and
(bad)
lock
dec
out
in
push
sbb
mov
inc
mov
or
fisubr
pushf
and
sahf
add
loope
mov
(bad)
(bad)
mov
pop
shl
sbb
jo
ret
icebp
sub
out
mov
mov
adc
fdivr
mov
pop
ret
push
pop
pushf
cmp
cmp
test
inc
cmp
push
adc
cmp
pop
xlat
bound
mov
add
and
(bad)
pusha
push
repz
shl
clc
push
pop
test
cmp
int
sub
retf
xchg
addr16
push
xor
push
pop
repnz
retf
mov
mov
xor
repnz
icebp
cmp
mov
xchg
(bad)
imul
test
mov
push
repnz
imul
pop
or
xor
movs
loopne
xchg
sub
sbb
push
and
mov
jbe
push
cmp
fcmovne
and
mov
ds
repz
jp
xor
inc
stc
sub
mov
mov
out
pushf
rcr
test
dec
sub
jno
mov
loopne
cmps
and
cmp
in
add
cmp
in
stc
inc
fmul
sbb
sub
fisubr
aas
dec
add
lods
jecxz
(bad)
xor
int3
cwde
xchg
push
jne
mov
mov
ja
aad
mov
adc
repz
ins
push
push
xor
xchg
cmp
xor
fwait
sub
int3
fsub
enter
ja
das
cdq
and
movs
bound
sub
in
xchg
out
ret
push
aas
ss
xchg
mov
shr
cmps
jg
adc
mov
rol
mov
(bad)
mov
or
mov
fsubr
xor
or
mov
and
popf
mov
or
shl
jbe
mov
cli
push
mov
mov
pusha
loopne
pop
add
pop
hlt
pusha
sti
test
loopne
sbb
loope
aaa
mov
movs
aam
fcomp
iret
cs
outs
cmp
outs
pusha
sbb
push
stc
call
xchg
xchg
(bad)
xor
into
cli
int
or
les
mov
cmp
(bad)
lds
push
push
pop
iret
call
and
cmc
jg
or
mov
mov
rcl
pop
pop
pop
jnp
scas
dec
rcr
shr
call
retf
cmp
mov
jbe
test
inc
adc
dec
fidivr
cmps
and
xchg
jae
pop
in
dec
out
stos
jbe
sbb
push
rol
push
sbb
call
jmp
out
das
dec
inc
xchg
out
xchg
mov
add
ins
adc
xlat
rcr
mov
sub
pusha
shl
jb
push
dec
sbb
ins
sub
je
sub
dec
push
inc
(bad)
pusha
ss
mov
cld
bound
and
push
(bad)
dec
sub
pop
inc
push
cmps
mov
test
mov
into
mov
push
iret
mov
jnp
push
not
repnz
in
daa
mov
popf
add
inc
dec
add
mov
retf
mov
mov
es
cmp
stos
repnz
arpl
iret
mov
pop
(bad)
std
js
mov
xchg
ret
imul
repz
test
push
lds
mov
sti
mov
in
xor
mov
cdq
add
mov
xor
xor
or
push
out
fucom
stc
out
xlat
nop
lahf
shl
mov
push
push
fs
cmp
ss
bt
ret
mov
fwait
ja
or
nop
loop
adc
push
out
test
retf
loope
mov
rol
enter
std
cmps
cli
pushf
mov
pop
push
cmc
xchg
bound
in
dec
mov
data16
and
pop
cmp
inc
test
push
jnp
mov
jb
sbb
(bad)
ret
mov
cmc
mov
stos
mov
movs
xchg
push
cmp
ret
ret
scas
bound
dec
(bad)
les
adc
ret
jb
xor
mov
push
inc
xor
outs
add
in
outs
ds
nop
cmp
pop
out
stc
cdq
(bad)
mov
inc
add
rol
fmul
mov
jb
mov
add
popa
pop
outs
lods
loopne
pop
cmc
adc
mov
cli
aaa
pop
add
div
fwait
pop
(bad)
(bad)
sub
adc
xchg
sub
imul
call
movs
mov
test
(bad)
pop
int3
xchg
jecxz
inc
mov
inc
dec
cmp
int3
data16
outs
xchg
dec
rol
jp
adc
add
mov
fsub
loope
adc
mov
inc
dec
neg
jno
jb
xor
clc
imul
lahf
arpl
jns
push
pop
lods
add
inc
pusha
xchg
repnz
shl
pop
pop
push
out
not
xor
dec
popa
cld
xchg
or
jns
mov
sbb
test
fwait
stos
idiv
sub
sbb
adc
push
and
xor
inc
push
mov
movs
cmp
data16
lods
ror
mov
rcr
fldcw
jnp
jne
jne
jbe
xchg
ret
movs
jge
ret
xlat
and
je
ret
adc
loop
jg
test
jb
dec
mov
aas
(bad)
jmp
sahf
cli
cmps
sbb
or
fwait
jle
and
and
stos
cmp
aas
dec
movs
rol
push
pop
cmp
sbb
add
aas
cld
ins
jno
lahf
and
adc
je
stos
ss
add
sbb
pushf
movs
mov
pop
mov
(bad)
in
or
dec
mov
loope
cdq
(bad)
mul
imul
bound
lods
lahf
sbb
xchg
addr16
lock
leave
retf
test
xchg
pop
jl
fsub
js
loopne
mov
xchg
inc
in
fst
or
pop
in
(bad)
push
(bad)
inc
cmp
xchg
rcl
xchg
daa
mov
inc
aad
cmp
adc
sub
fisub
pusha
sahf
mov
movs
or
cdq
aas
sbb
fadd
mov
cwde
cli
pop
cmp
mov
dec
out
(bad)
arpl
cmp
xor
clc
push
jno
mov
nop
push
jcxz
test
dec
add
cmps
mov
mov
and
adc
xchg
and
outs
adc
inc
sub
int3
mov
add
push
sub
scas
mov
(bad)
out
xchg
sub
sub
jmp
or
cmp
xchg
jnp
pop
addr16
lds
mov
leave
repz
pop
movs
(bad)
fcomp
mov
add
dec
push
xchg
mov
mov
or
cmp
sbb
mov
(bad)
adc
mov
inc
push
jl
sbb
dec
aas
not
test
mov
mov
pop
fs
lock
push
sub
jo
mov
and
fldcw
ins
int
mov
std
pop
dec
jae
pop
fucomip
(bad)
xchg
imul
push
lds
stos
je
daa
inc
inc
xchg
xchg
inc
sar
xor
xchg
or
out
cld
stos
or
xchg
xchg
or
pop
dec
push
xchg
and
ret
add
mov
les
jno
pop
leave
xchg
or
lahf
repz
push
call
lods
cmp
sbb
inc
xchg
cld
(bad)
jecxz
call
ss
mov
mov
scas
add
cli
in
ret
mov
xor
xor
and
pop
ret
test
mov
ror
outs
aaa
dec
jb
jl
call
xor
push
(bad)
sar
movs
sbb
test
repnz
shr
outs
mov
cwde
fsub
jnp
sar
sub
mov
mov
dec
(bad)
(bad)
or
mov
imul
jge
add
hlt
mov
jg
xor
and
jnp
mov
and
pop
and
les
jbe
gs
pop
outs
adc
dec
ror
dec
cmp
sbb
out
mov
cli
xchg
lds
sti
out
push
add
jo
rol
shl
inc
add
loope
lock
icebp
inc
pop
push
es
push
pop
movs
ror
mov
cwde
mov
pop
mov
fdiv
sbb
stos
test
popf
lds
in
and
iret
mov
jbe
push
mov
call
jo
or
fnsave
mov
shr
dec
or
dec
add
adc
xlat
ret
stc
inc
mov
push
or
data16
aad
aam
test
out
cmp
jmp
ret
push
cli
shr
sbb
dec
repnz
adc
inc
mov
pop
xlat
pop
cmp
mul
fs
add
iret
into
jno
std
and
inc
jecxz
popf
add
inc
bound
div
adc
loopne
nop
mov
mov
push
add
call
sub
loopne
push
lds
adc
scas
popa
stc
or
mov
clc
je
inc
daa
sub
jns
arpl
xor
int3
stos
fnsave
xlat
mov
sbb
mov
shl
sbb
lds
push
jns
jge
daa
cmp
mov
ret
test
pop
adc
jecxz
add
cmc
or
(bad)
push
test
inc
das
idiv
cdq
clc
pop
sbb
scas
shl
outs
enter
pop
or
sbb
stos
fidiv
sbb
add
mov
jg
in
loope
imul
mov
int
and
add
shr
mov
jo
loope
and
pushf
sbb
jg
daa
jge
jmp
and
xlat
mov
push
enter
add
popa
(bad)
cmp
mov
cmp
scas
xor
out
mov
shl
pushf
lock
aaa
xchg
ficom
rcr
dec
repz
fstp
cmp
adc
adc
fs
jne
loope
mov
out
adc
sbb
xor
adc
in
and
cmc
xchg
sub
fdivr
inc
and
gs
test
(bad)
fld
adc
jmp
sbb
cmp
mov
cmps
push
stos
mov
pop
cmc
mov
push
dec
add
das
adc
outs
std
pop
and
movs
cli
add
sbb
(bad)
bound
inc
sbb
dec
sbb
dec
rcl
outs
pop
add
add
xor
daa
sub
adc
stc
push
ins
xor
mov
add
or
pop
mov
xchg
sti
xor
jae
fild
add
pop
mov
ins
icebp
or
cmp
jno
or
mov
fs
test
loope
out
jmp
mov
(bad)
jmp
mov
fs
mov
inc
and
mov
bound
mov
stos
pop
or
push
into
xlat
cmp
add
lods
jmp
rep
ss
pop
(bad)
pop
jmp
sbb
pop
adc
cli
sub
and
daa
and
push
xlat
sbb
out
js
sbb
sahf
jb
sub
sub
pop
js
(bad)
jns
push
lods
inc
jnp
jmp
mov
rcr
jge
addr16
in
xchg
add
push
push
dec
adc
cli
repnz
test
xor
icebp
and
pop
sub
lds
or
int3
jp
(bad)
jbe
int3
mov
fimul
lea
mov
adc
ds
ja
pmullw
(bad)
mov
(bad)
rcr
stos
xchg
ins
pusha
lock
adc
inc
stc
xchg
inc
das
sub
imul
sbb
and
xlat
xor
cli
push
push
push
(bad)
sti
xchg
dec
jle
aad
repnz
fidivr
inc
inc
add
mov
movs
ins
loopne
adc
cdq
cmp
and
cmps
ret
push
sbb
xchg
xchg
rcr
dec
lods
xor
lods
push
sub
test
cmp
cmps
lock
movs
mov
(bad)
rcr
pop
add
cwde
cs
int3
pop
inc
cdq
addr16
mov
add
shl
jmp
xchg
dec
hlt
sahf
mov
mov
iret
sbb
inc
lods
scas
xchg
(bad)
in
lock
dec
and
mov
pop
inc
adc
xlat
xchg
mov
xor
mov
pusha
xor
xchg
ja
and
retf
shr
pop
out
pop
cmps
inc
sbb
imul
sub
ror
in
(bad)
loope
loop
(bad)
les
mov
jmp
(bad)
push
cmp
adc
add
sbb
mov
aas
jbe
leave
loopne
mov
push
ja
sbb
pusha
retf
inc
pusha
xor
rol
push
add
js
mov
pop
arpl
jg
call
jmp
dec
es
adc
add
outs
stos
cli
cmc
adc
sahf
ins
loop
fucomp
aam
inc
sahf
sub
shl
adc
shl
into
jne
mov
(bad)
out
mov
or
enter
call
xlat
inc
dec
leave
lds
mov
inc
shl
(bad)
div
jns
sar
(bad)
pusha
(bad)
(bad)
popa
and
add
cwde
hlt
mov
clc
test
cmp
xlat
push
test
(bad)
pop
hlt
sub
mov
push
push
ret
js
push
sbb
pop
mov
ror
jb
aaa
jo
or
enter
sbb
cmp
out
dec
ret
mov
dec
pop
mov
cld
aam
mov
adc
in
xchg
inc
adc
loop
xor
not
(bad)
mov
mov
lock
js
jp
and
mov
jns
gs
imul
sub
mov
dec
rol
push
mov
lock
mov
push
(bad)
out
xor
ds
dec
pop
shr
aam
sub
inc
sahf
(bad)
fist
mov
aam
mov
push
push
xchg
mov
pop
sub
push
and
(bad)
pop
or
sub
cmp
mov
jb
(bad)
stc
dec
popf
mov
sbb
push
inc
xor
xchg
ins
aas
iret
dec
push
sbb
out
shl
xlat
mov
pop
push
ins
pusha
(bad)
xchg
add
sub
dec
(bad)
fisttp
jnp
(bad)
cmp
shr
stc
adc
push
cmps
mov
sbb
and
or
das
ja
or
adc
push
inc
ficom
ja
and
add
mov
bound
iret
out
add
das
sub
jmp
dec
addr16
out
mov
or
movs
jg
outs
mov
iret
sub
mov
xor
add
out
xor
fnstsw
call
push
pop
pop
sub
cmp
aad
pop
jg
cmc
daa
adc
adc
pop
jmp
pop
mov
push
sbb
mov
je
(bad)
fsubp
xlat
call
xor
pop
inc
test
mov
pop
not
call
sub
jmp
dec
mov
cmp
(bad)
fwait
pop
in
jbe
les
arpl
mov
sbb
lahf
mov
fld
push
pop
sbb
loop
movs
stos
setns
sub
push
xor
aaa
stos
cmp
or
adc
jmp
pop
scas
stos
stos
(bad)
jp
pushf
daa
push
iret
pop
jmp
div
shl
jns
jg
cld
or
push
aad
mov
lods
xor
scas
repnz
sar
nop
outs
leave
cs
pop
sbb
and
inc
retf
mov
jns
cmp
cmps
cmps
or
cld
mov
push
jo
xor
ins
xchg
mov
(bad)
shl
iret
shr
sub
andps
or
in
scas
outs
test
cs
sub
bound
push
add
cwde
pusha
call
retf
or
aas
stc
push
pop
cmps
push
out
mov
es
ror
rol
aas
jb
inc
jnp
dec
push
dec
mov
int3
fcmovnbe
sbb
dec
cli
xchg
leave
rcl
std
sub
popa
jo
jle
mov
test
test
iret
outs
sbb
cmps
cdq
xor
(bad)
jae
aas
data16
jnp
je
(bad)
cmp
xor
mov
add
mov
mov
xor
daa
imul
add
in
cmc
push
or
push
jge
outs
adc
pop
ds
nop
cdq
int
pop
std
arpl
xor
aas
push
and
(bad)
sbb
mov
jne
rcr
sub
enter
push
pusha
xchg
or
sbb
mov
sbb
and
lahf
movs
scas
mov
pop
mov
cmps
push
pop
mov
retf
repnz
push
jmp
mov
cwde
lea
dec
arpl
icebp
push
pushf
push
push
xchg
icebp
pop
fadd
xor
dec
call
push
(bad)
int3
movs
push
add
sbb
into
shl
sti
jmp
mov
push
push
pop
aad
(bad)
sti
cmps
adc
and
jl
and
jmp
add
sub
sub
imul
and
movs
push
cmp
pop
cmp
adc
in
(bad)
cmp
pop
sub
jo
sub
sub
cs
dec
addr16
dec
jecxz
mov
movs
xchg
cmp
in
jmp
lods
jb
and
sti
fadd
retf
aaa
enter
shl
loope
enter
sub
rcl
icebp
mov
cwde
sti
mov
aam
pushf
outs
pop
int3
test
push
mov
out
(bad)
cld
xlat
daa
nop
dec
xlat
mov
mov
test
add
arpl
out
fsub
sbb
mov
jae
mov
jns
xchg
cmp
stc
mov
std
stos
push
ret
and
dec
retf
pusha
xchg
sbb
jns
int
or
or
push
mov
push
xchg
jo
stos
mov
sbb
mov
movs
imul
mov
clc
mov
sub
sbb
(bad)
and
add
arpl
sub
and
pop
dec
outs
jge
shr
pop
test
cs
movs
fidivr
push
adc
or
pop
sbb
(bad)
rcr
push
fstp
enter
jl
or
cmp
shr
(bad)
jae
pop
and
mov
push
in
retf
adc
aam
adc
mov
dec
int3
sub
add
inc
xchg
or
(bad)
cmps
pop
pop
sbb
aas
sub
test
sub
jae
psubusb
push
ins
mov
mov
cmc
call
lods
lods
xor
mov
push
xor
addr16
mov
loop
add
pop
add
mov
sub
pop
mov
push
jmp
adc
sub
xchg
dec
(bad)
jae
mov
mov
mov
fcomp
push
add
pop
add
fyl2xp1
push
lods
pop
sub
std
test
out
outs
dec
mov
popf
pop
jg
lods
aas
fld
sbb
hlt
cmp
jecxz
addr16
add
mov
pop
jo
push
push
arpl
or
xchg
add
cmp
inc
outs
push
sub
std
fwait
push
fs
arpl
adc
pop
push
add
dec
xor
pop
std
adc
jmp
sbb
or
pop
and
popf
cmp
mov
dec
xchg
scas
adc
xor
jg
xchg
lods
and
fstp
repz
add
js
xor
mov
dec
sbb
mov
mov
push
and
xlat
xor
jnp
jnp
pop
inc
mov
dec
jns
xor
mov
rcl
jo
mov
mov
pop
sub
jmp
je
inc
imul
lods
stos
rcl
dec
and
lock
lea
inc
ds
xor
push
xchg
sbb
retf
add
ins
xor
add
call
loope
outs
fisub
(bad)
xor
push
sahf
mov
push
inc
xlat
out
add
mov
sbb
and
sbb
xchg
jb
sub
fs
inc
arpl
mov
daa
push
add
ds
xor
pop
adc
add
jmp
mov
call
mov
xor
iret
ins
movs
add
ficomp
stc
gs
xor
das
call
jb
sbb
in
stos
lahf
inc
jno
scas
fs
imul
adc
shl
fcom
cwde
int
jne
addr16
push
aam
repnz
and
push
mov
jmp
out
xchg
iret
cld
xchg
xor
xchg
ins
mov
cmp
mov
mov
shl
dec
mov
sub
mov
nop
movs
inc
mov
sub
jg
fwait
xchg
hlt
push
mov
jg
ss
loopne
test
push
fstp
pop
adc
inc
add
sbb
frstor
fcom
iret
xor
out
adc
iret
iret
sbb
pop
repnz
int3
mov
(bad)
aaa
push
jmp
rcl
pop
out
xchg
cmp
rcl
inc
enter
and
movs
mov
mov
fisttp
out
aas
mov
adc
arpl
mov
(bad)
into
adc
jo
cs
test
cmp
cmp
ds
enter
cdq
(bad)
jmp
scas
mov
mov
fiadd
aad
mov
inc
cs
xor
ror
outs
xor
lds
arpl
push
arpl
loope
mov
mov
inc
jmp
fwait
jle
push
xchg
pminub
dec
push
and
test
jg
jecxz
mov
jle
inc
mov
add
ror
xlat
aad
mov
sahf
mov
jecxz
lahf
xchg
sti
call
mov
mov
pop
sti
dec
sti
icebp
ins
jge
sub
pop
pop
pop
arpl
shr
xchg
call
std
cli
push
clc
imul
ja
ror
cmp
mov
push
jmp
and
pop
cs
or
call
popa
or
out
js
fwait
adc
sbb
push
into
mov
xchg
cmp
mov
fnstenv
and
push
cs
ret
ja
movs
xchg
or
js
test
jns
inc
add
lods
jg
repz
fidivr
aad
stc
xchg
lock
sbb
push
ss
jmp
cdq
das
sbb
jge
aad
test
nop
dec
cld
cmp
fdiv
dec
sbb
ret
cwde
aas
mov
es
pop
popf
arpl
iret
sti
retf
lock
mov
dec
mov
xchg
xchg
inc
test
test
out
sti
cmp
fnop
push
gs
xchg
icebp
scas
retf
inc
lahf
inc
test
push
cdq
push
loop
loope
rcr
sub
mov
push
icebp
push
(bad)
mul
(bad)
pop
ret
int
pop
push
test
sahf
fist
rol
xchg
js
jecxz
rcr
mov
cmp
scas
pop
movs
xchg
dec
std
leave
int3
cdq
xor
out
xor
cmp
mov
adc
xor
dec
adc
gs
adc
js
shr
ror
sbb
inc
ins
xchg
fild
sti
mov
dec
mov
adc
scas
push
aas
adc
cwde
jmp
repnz
xor
rcl
sbb
mov
xchg
fdecstp
cmp
icebp
xchg
mov
movs
jmp
arpl
clc
out
mov
je
int3
gs
push
jge
inc
jae
fnstenv
mov
sbb
mov
dec
ror
mov
hlt
enter
stos
out
cmp
aaa
push
out
and
sbb
jnp
inc
inc
sti
push
ror
push
lds
mov
imul
repnz
rol
adc
out
mov
aas
cmp
cmps
ds
shl
add
in
imul
sbb
mov
in
and
sub
sbb
repnz
sbb
dec
cmp
pop
imul
sbb
pop
(bad)
aaa
jo
and
push
fdiv
(bad)
push
(bad)
imul
cmps
pop
sahf
jl
test
test
jmp
sub
xor
mov
mov
sub
out
adc
mov
call
(bad)
mov
rol
stos
sbb
pop
mov
pop
jmp
xchg
add
inc
sub
ins
je
xchg
lds
cmps
or
sbb
jge
cld
xchg
stos
rcl
jg
jp
imul
cmp
icebp
mov
shr
outs
mov
add
inc
push
das
ins
out
mov
jmp
mov
jl
mov
dec
ja
add
(bad)
jae
pop
add
sbb
adc
xor
(bad)
adc
mov
popa
sub
mov
adc
xor
cwde
sbb
inc
outs
fnstenv
and
lods
jmp
aad
or
pop
push
nop
pop
cld
idiv
pop
in
psubusw
call
dec
push
and
xchg
inc
sub
mov
(bad)
sub
pop
mov
cmps
jne
inc
xchg
les
and
cmp
mov
mov
xchg
or
in
xchg
aaa
addr16
xor
cmp
mov
in
inc
sbb
jnp
inc
add
test
sbb
inc
sbb
mov
jp
(bad)
jns
mov
mov
outs
or
sub
movs
pop
and
mov
mov
ret
inc
pushf
ret
test
in
inc
(bad)
jne
adc
add
rcl
jae
add
cs
test
pop
lods
outs
sub
(bad)
add
inc
test
lods
mov
out
mov
stc
js
mov
les
jo
je
xchg
xchg
jns
lock
imul
outs
into
jne
xchg
imul
repz
sti
or
addr16
das
push
mov
loop
lods
mov
pop
and
mov
ficom
out
or
ret
addr16
jo
mov
ds
jnp
adc
inc
mov
popf
cmp
movs
or
lods
mov
cmp
sbb
scas
sti
mov
xchg
or
retf
xor
lahf
or
xchg
xchg
sti
cmp
cmp
sub
cmps
fimul
jmp
push
sub
fcmovnb
(bad)
iret
push
inc
cdq
dec
movs
shl
inc
sub
imul
sub
imul
(bad)
mov
mov
pop
push
mov
popf
bound
jb
jmp
jns
das
and
mov
jl
push
mov
sbb
in
repnz
mov
cld
out
push
retf
or
cs
jecxz
call
cmp
and
int3
cmp
mov
pop
add
pop
cmp
ds
addr16
xchg
push
adc
cmp
inc
faddp
xor
mov
jo
sbb
lds
mov
cdq
lods
int
pop
idiv
sbb
sub
mov
jmp
std
jno
ins
jbe
cmp
call
and
aad
pushf
mov
add
push
jbe
inc
icebp
mov
or
lahf
mov
ins
shl
jmp
test
push
xchg
mov
arpl
imul
or
mov
into
cmps
dec
cmp
lods
mov
bound
mov
or
das
lods
inc
xchg
fs
xchg
out
(bad)
out
icebp
mov
or
test
cmp
(bad)
fidiv
test
jle
inc
scas
xchg
lock
cmp
mov
enter
push
jg
call
xchg
mov
push
mov
je
xchg
dec
add
imul
xor
push
popf
xor
jmp
lea
push
xor
and
fwait
in
mov
fcomp
dec
push
pop
sub
lahf
sub
mov
push
stos
rcr
fisubr
xor
popa
push
test
sbb
xor
mov
cmps
fisub
xor
imul
retf
fucom
in
std
mov
adc
push
push
inc
bound
pop
xchg
sub
jae
inc
or
fldenv
or
push
add
dec
fs
xchg
sbb
push
jecxz
in
scas
or
mov
xchg
dec
inc
mov
int
dec
shr
and
push
je
rcl
lahf
call
stos
ins
cwde
pop
jno
sub
push
mov
cli
int3
adc
mov
xchg
sar
ror
aam
shl
std
xor
movs
jp
or
loopne
jne
adc
mov
dec
das
and
jbe
test
dec
mov
inc
adc
mov
mov
in
push
retf
fnsave
lods
test
gs
or
mov
add
cli
in
rcr
and
sub
jb
sbb
sub
inc
les
out
das
in
(bad)
fild
out
mov
int3
adc
or
enter
ja
fild
fwait
xor
mov
cmps
ror
cli
add
loopne
aas
mov
inc
push
push
pop
jb
xchg
loopne
xor
jo
(bad)
aam
fistp
inc
lea
xor
cwde
shr
arpl
jge
sub
adc
or
dec
mov
retf
mov
(bad)
scas
in
mov
adc
mov
xchg
and
push
push
int
jl
in
add
mov
dec
jmp
loop
mov
xchg
test
out
mov
push
jmp
out
sbb
xor
ds
push
xchg
repnz
bound
es
inc
push
std
ficomp
ds
sbb
out
shl
inc
adc
or
and
outs
push
add
sbb
jnp
call
out
adc
adc
scas
pop
push
push
pop
popf
mov
jno
and
pop
sti
or
nop
jne
push
mov
inc
inc
cdq
adc
jl
or
sbb
push
lds
mov
push
lods
mov
cld
fbstp
or
bound
mov
push
test
pop
xor
xchg
outs
or
and
scas
ja
or
fdivr
and
jmp
repz
cmp
xor
push
and
loope
std
push
sub
cmps
lods
cmp
into
rol
mov
and
xchg
(bad)
sbb
stos
xchg
(bad)
int
out
pop
xor
repz
jecxz
aad
lock
(bad)
(bad)
push
mov
mov
mov
or
fmul
inc
adc
cmp
loop
mov
bound
adc
or
xchg
and
dec
popf
push
scas
mov
out
jge
jnp
dec
out
pop
and
push
inc
(bad)
mov
add
retf
mov
repnz
pop
push
scas
mov
mov
push
aaa
out
addr16
xlat
fild
and
push
pop
jmp
daa
or
inc
or
jo
out
or
jg
sub
pop
fdiv
adc
or
mov
aaa
or
mov
xor
add
fwait
mov
xchg
inc
xchg
ffree
inc
xor
mov
cli
pushf
neg
stos
mov
xor
test
pusha
scas
es
aaa
repnz
add
jae
or
jno
movs
pop
mov
sub
dec
jmp
pop
pop
outs
push
adc
shl
enter
outs
push
push
ja
enter
(bad)
cwde
inc
dec
outs
mov
xor
sbb
jnp
sbb
mov
(bad)
js
sbb
fdiv
mov
xchg
adc
mov
sub
loopne
mov
xchg
add
and
and
cmc
pop
cmp
stc
je
xor
xchg
in
pop
mov
adc
cmp
int3
loope
jp
push
loop
imul
dec
xor
jne
call
mov
cmp
jnp
jl
cld
jne
ss
mov
xor
inc
loope
dec
cmovge
out
jne
retf
(bad)
pop
arpl
mov
out
or
ins
std
inc
iret
(bad)
jno
js
outs
mov
ds
sub
add
xchg
or
jmp
ds
adc
imul
(bad)
loope
lods
mov
xchg
mov
jne
sar
and
mov
arpl
adc
sub
fwait
mov
add
mov
outs
arpl
or
ficom
outs
push
scas
pop
shl
adc
cmp
fst
jecxz
xor
ins
mov
sub
fstp
mov
mov
mov
dec
and
mov
and
mov
std
mov
push
out
dec
push
cmps
sub
mov
mov
adc
and
(bad)
or
retf
dec
and
leave
aas
pop
cmp
lods
jmp
jle
pop
test
push
repz
xor
test
call
cli
aaa
ss
or
mov
loopne
and
enter
movs
out
cmp
push
cli
jae
add
mov
mov
ins
pushf
das
(bad)
loopne
pop
mov
push
mov
and
or
inc
(bad)
imul
sbb
mov
mov
push
test
adc
mov
cli
mov
gs
in
es
push
jle
ror
and
sub
push
and
js
jmp
push
popf
pop
lods
fidivr
ins
mov
pop
fisttp
out
int
cwde
and
jmp
sub
jmp
div
mov
arpl
bound
in
sbb
pop
test
sti
popf
adc
jp
jnp
sbb
mov
stos
shl
cmps
lock
pushf
fst
cmps
cmc
ja
jle
mov
mov
pop
inc
fidivr
dec
rcl
dec
jp
and
repnz
mov
test
inc
add
xchg
add
push
jne
fist
xchg
test
dec
adc
xor
dec
sti
loopne
jmp
inc
mov
mov
adc
shr
add
test
xchg
mov
inc
sbb
rcl
int3
not
xor
push
(bad)
aam
jg
aas
mov
adc
das
shr
fldcw
dec
pop
repz
xchg
hlt
sbb
or
add
mov
hlt
retf
jmp
or
jae
div
pop
out
mov
pop
push
pop
shr
shl
xchg
stos
out
jbe
and
mov
(bad)
nop
mov
leave
out
xchg
push
dec
pop
in
push
enter
xchg
pop
je
and
cmp
pop
(bad)
adc
inc
std
cmp
xchg
xchg
push
imul
iret
jns
push
ins
and
and
push
sbb
or
sub
ss
xlat
pop
shl
mov
push
aaa
and
dec
inc
sub
xlat
inc
sbb
stos
xchg
mov
push
cmp
repz
ds
jg
cli
add
nop
cmp
push
pop
data16
in
pop
push
push
bound
loopne
pop
cmps
je
pop
test
or
inc
mov
gs
dec
int3
daa
aas
xor
xchg
push
inc
stos
ja
imul
add
enter
je
xor
xchg
popf
retf
call
or
sahf
pusha
scas
sbb
mov
mov
call
(bad)
and
jg
scas
jmp
jg
mov
jne
xchg
sbb
iret
adc
test
mov
jbe
add
aaa
and
fwait
mov
xor
mov
retf
pusha
mov
scas
in
add
pop
push
and
xchg
dec
stos
shl
xchg
jno
test
std
in
inc
js
mov
and
adc
loope
loope
es
push
(bad)
mov
out
mov
rcr
xchg
aas
sub
add
mov
or
test
ror
cmp
sbb
test
neg
fcom
out
and
xchg
and
lahf
data16
jbe
and
sbb
push
jns
xor
into
fidiv
jecxz
test
ficom
adc
adc
pop
mov
ret
loop
xchg
mov
addr16
imul
add
lods
or
inc
cmp
cmp
cmps
inc
inc
mov
sub
popa
dec
xchg
les
jae
or
scas
iret
std
aam
sub
(bad)
mov
mov
fild
mov
mov
arpl
leave
xchg
lock
dec
icebp
dec
scas
into
xchg
psubb
mov
sub
aam
and
mov
repz
push
xchg
xor
cmp
mov
adc
add
adc
jp
test
call
in
iret
(bad)
pop
mul
ins
test
test
mov
mov
xchg
pusha
and
jbe
push
je
movs
xor
xor
jmp
mov
cmp
clc
sub
mov
adc
pusha
add
aam
or
out
mov
ja
dec
dec
or
jb
sub
clc
mov
jae
mov
inc
push
ja
add
push
push
mov
cmp
movs
push
jbe
mov
imul
enter
adc
ja
popa
xor
inc
jne
jl
jbe
das
jno
inc
push
pop
mov
bnd
push
popf
pop
or
cmp
test
jmp
out
add
in
adc
and
call
imul
in
mov
adc
push
sar
fsub
adc
mov
sbb
shl
in
into
mov
mov
inc
repz
psrad
iret
sub
mov
lar
gs
dec
jecxz
cs
mov
dec
jnp
cmc
pop
jnp
and
int
pusha
jno
xor
xor
xchg
mov
jo
lods
scas
or
sub
jo
ins
and
test
cdq
xor
mov
mov
shl
lahf
dec
cmp
cmp
jge
stos
mov
es
fdivr
mov
add
les
outs
adc
cli
inc
pop
and
mov
shr
pushf
or
inc
adc
aas
cwde
icebp
jg
cmps
jecxz
cmp
lds
sub
lock
leave
jmp
(bad)
push
ss
inc
bnd
xchg
sub
xchg
ja
scas
jecxz
jge
push
mov
add
fwait
rcr
pop
push
xor
fbld
or
mov
vpmadcswd
push
jbe
xor
movs
aaa
xor
or
adc
xchg
jns
lea
xor
sub
mov
sub
test
repz
xor
dec
fisttp
jb
adc
imul
(bad)
pop
add
cmps
push
jmp
pop
or
dec
aam
jbe
pop
jb
xor
adc
push
pop
xor
lods
les
and
(bad)
leave
sbb
pop
out
or
jl
xchg
aas
int
loope
mov
icebp
xor
stc
jno
cmps
retf
cmp
cs
test
es
mov
xor
push
iret
iret
jmp
jp
mov
push
ficom
sbb
adc
pop
jne
ja
dec
dec
cmp
test
inc
fstp
sub
jl
das
push
adc
add
jmp
inc
xor
or
cmp
jge
fisttp
xchg
stc
inc
(bad)
mov
retf
sahf
in
jo
xchg
cmp
jno
scas
pop
add
and
push
imul
fs
push
arpl
cs
cmp
jno
sahf
into
jmp
jp
jne
outs
(bad)
jbe
das
lds
cwde
out
mov
sub
pop
icebp
rcl
inc
nop
ins
push
das
cli
xlat
mov
stc
dec
test
test
mov
adc
sbb
sbb
ins
add
in
(bad)
in
data16
push
jl
adc
je
pop
pop
les
push
jecxz
fdivp
jecxz
jmp
nop
stc
inc
test
pop
daa
jle
jp
xchg
movs
ror
dec
sbb
into
es
or
dec
(bad)
mov
mov
push
inc
sbb
and
push
je
cwde
call
out
sub
rcl
hlt
add
js
mov
dec
push
pop
mov
inc
cmp
sbb
sbb
pop
push
imul
psrlq
ror
fdiv
ret
jno
dec
jmp
cmp
fimul
sub
dec
mov
sbb
cld
outs
or
repz
mov
mov
mov
sub
(bad)
xor
movs
or
jle
out
div
push
stos
or
inc
int3
lahf
cmp
dec
test
jne
sub
jmp
jecxz
sub
cmp
adc
push
pop
out
mov
mov
inc
enter
out
jae
pop
shr
dec
lods
les
cmp
mov
jbe
(bad)
out
addr16
and
aaa
enter
pop
jg
jbe
aam
xor
ss
pop
push
out
jnp
(bad)
test
sbb
lods
je
dec
cs
scas
stos
int3
xor
in
xor
sbb
dec
sbb
imul
pop
bound
outs
cmp
push
cmc
xchg
arpl
xor
inc
pusha
jmp
sar
mov
sbb
clc
mov
pusha
inc
dec
inc
sub
test
pop
add
int3
and
mov
mov
sub
leave
ins
ficom
retf
shr
jbe
test
xor
sar
rcr
fistp
mov
add
pusha
pop
xchg
fisubr
shr
push
xchg
sub
stos
push
je
push
lea
fsubr
cmp
pop
adc
ds
or
mov
cld
nop
adc
pusha
das
inc
daa
call
cmp
jg
shl
and
mov
pop
int
sub
jbe
int
stos
in
adc
sub
outs
sub
mov
loop
hlt
fs
xchg
xlat
ret
xchg
pmaxub
ret
outs
test
iret
xor
retf
and
push
mov
inc
sub
dec
xlat
cmp
(bad)
rcr
dec
mov
mov
pop
mov
sbb
rcl
add
mov
inc
xor
xor
add
test
lods
and
xor
xor
mov
movs
jns
xlat
loopne
mov
adc
or
out
leave
clc
xchg
pop
daa
stos
je
mov
push
mov
jecxz
cli
int3
das
addr16
sahf
cs
hlt
xor
sub
ins
fsubp
push
pop
pop
cmp
xor
repz
dec
ins
lock
cmp
(bad)
lahf
scas
or
dec
mov
mov
jl
movs
in
dec
inc
repz
ja
mov
or
adc
sub
push
push
loop
inc
mov
cmp
in
(bad)
mov
jb
and
mov
adc
mov
nop
bound
btr
cmc
test
mov
sub
sbb
inc
outs
jecxz
cmps
sbb
and
cwde
and
or
xchg
mov
sub
test
fiadd
pop
not
es
jl
out
cmp
stc
mov
push
push
mov
imul
shl
jae
inc
pop
sbb
or
out
lods
aad
mov
xchg
dec
jg
imul
jne
movs
jle
popf
sub
call
fst
das
add
ins
int
xor
dec
sub
cmp
cmp
cld
pop
movs
rcl
xor
jnp
(bad)
mov
xor
test
mov
or
sbb
retf
scas
int
jl
inc
xchg
ins
and
(bad)
lods
(bad)
repnz
adc
rcl
and
nop
lods
inc
or
and
pop
dec
cmp
stos
mov
clc
sbb
inc
ffree
fcomip
sar
push
pop
jp
adc
repz
pop
jne
xchg
ins
add
(bad)
push
jg
(bad)
sti
dec
adc
das
cmp
or
outs
loope
inc
jl
xor
mov
sti
fdivr
mov
mov
ss
mov
push
(bad)
in
cdq
ja
jmp
in
cdq
pushf
gs
add
fisub
lahf
loopne
repz
rcl
push
sub
stos
out
cmp
mov
popf
pusha
stos
jmp
or
int3
in
fs
jl
sar
ret
jb
(bad)
rcl
mov
jo
inc
cmp
push
mov
out
movs
xor
retf
inc
scas
sub
mov
mov
pop
jo
pop
loopne
mov
pop
(bad)
int3
xor
adc
ja
push
add
nop
dec
ins
cmps
sbb
repnz
out
aam
stc
cmp
in
sbb
lods
push
jmp
mov
jl
pop
scas
aad
iret
pop
loop
add
mov
mov
add
push
test
mov
leave
enter
xchg
xor
inc
and
gs
xchg
push
test
ins
mov
nop
aad
(bad)
jb
sbb
jae
add
shr
sbb
imul
std
popa
cwde
push
cmp
xchg
push
inc
mov
or
inc
popf
push
data16
ror
cs
pop
iret
or
jbe
into
das
int
fwait
and
xchg
pop
bound
inc
cmc
cwde
(bad)
das
sbb
xchg
cmps
stc
and
pop
and
pop
jne
movs
sub
(bad)
pop
cdq
mov
outs
fsubr
jmp
scas
retf
sbb
aam
retf
mov
js
jmp
aam
retf
adc
int
ds
xchg
scas
mov
es
fild
ins
shr
xchg
sub
(bad)
verw
mov
jno
je
scas
sar
add
xchg
or
sbb
cs
es
mov
cmps
ret
out
aas
enter
movs
iret
sub
in
inc
xchg
jmp
and
sbb
pusha
mov
dec
push
pop
mov
push
sbb
test
or
adc
mov
repnz
mov
fcom
imul
je
or
xor
mov
dec
lea
fadd
and
pop
or
jge
(bad)
enter
xor
push
ret
les
push
out
and
inc
dec
aam
ss
hlt
xor
jae
(bad)
cmc
daa
int
outs
out
adc
cmp
mov
dec
loope
pop
mov
loope
loop
add
je
enter
test
shl
sub
ins
mov
lods
sub
add
out
int3
daa
mov
jecxz
inc
inc
dec
fidivr
dec
imul
jb
outs
aaa
add
pop
xor
cdq
(bad)
cdq
in
sbb
xchg
mov
int
pop
outs
addr16
mov
xchg
inc
xchg
xchg
iret
and
pop
cs
ror
push
jmp
repnz
inc
clc
jbe
bound
(bad)
in
repnz
push
adc
in
and
dec
js
outs
les
scas
cli
movs
inc
icebp
cdq
inc
inc
cmp
push
sub
push
jecxz
stc
call
push
xchg
lods
retf
inc
mov
or
cs
jmp
stc
std
sbb
mov
aad
fild
add
call
psubd
mov
add
mov
call
inc
adc
jb
(bad)
pop
ret
lea
test
cld
jno
mov
push
sub
sbb
fst
sar
xor
sti
test
cmp
cli
or
mov
xchg
push
fld
pop
pop
adc
pop
adc
into
xchg
call
sbb
jl
sbb
jl
mov
jp
pushf
push
call
and
and
mov
mov
inc
adc
adc
mov
add
or
popf
fdivr
mov
sub
push
cs
retf
mov
mov
xchg
outs
inc
fcmovb
xor
add
ja
mov
pop
and
jle
mov
push
xlat
pusha
mov
bound
inc
imul
std
inc
out
fsubp
in
stos
test
adc
jno
(bad)
popf
jo
loope
call
outs
dec
test
test
jb
bound
mov
cmp
or
inc
movs
call
lahf
int
xchg
iret
sub
push
or
pop
add
lock
and
jmp
push
xchg
fsubr
mov
mov
mov
bound
repz
add
loope
mov
jg
mul
cmps
imul
test
xor
aam
cmp
test
sub
jp
pop
fnstenv
call
idiv
ds
adc
iret
jb
mov
or
push
jbe
jmp
cmp
aaa
sti
sbb
outs
mov
cwde
sub
dec
inc
inc
cld
add
xor
cmc
xor
test
movs
mov
scas
js
pop
jge
xor
push
sub
mov
jle
inc
loop
popa
push
xchg
jmp
ja
in
div
loopne
push
adc
inc
out
mov
mov
rol
stos
bound
repnz
push
mov
xor
xor
mov
mov
imul
sti
jnp
add
or
fist
mov
outs
push
adc
dec
icebp
mov
xchg
cmp
adc
cwde
call
xor
aam
shl
and
loope
or
mov
sti
hlt
dec
inc
pushf
cmp
pop
push
mov
iret
inc
pop
jnp
push
stos
lahf
fwait
mov
ja
aas
xchg
sub
loope
push
js
mov
mov
minps
xchg
neg
or
add
mov
inc
mov
dec
std
mov
jnp
xchg
shl
add
ror
test
sar
pop
push
rcr
xchg
sti
inc
xchg
or
mov
cld
sahf
xor
pop
ret
push
cmp
cdq
and
pop
icebp
pop
add
js
aam
movs
dec
mov
fucomp
mov
rcr
pop
rcr
add
sti
sub
push
add
and
loope
cli
scas
cli
je
mov
fidiv
xor
rcl
inc
mov
jne
dec
bound
std
and
cmp
mov
mov
jns
xor
fimul
sahf
sub
jbe
dec
out
rol
addr16
jno
mov
imul
adc
jmp
cmp
sti
mov
rcl
xor
sub
sub
aas
push
sub
pushf
data16
pop
(bad)
out
jl
and
pop
inc
mov
arpl
or
fwait
movs
pop
mov
in
sbb
mov
inc
jmp
cmc
xchg
lock
xchg
stc
mov
or
jo
addr16
mov
push
les
sub
mul
shl
int
rcr
iret
adc
cmp
and
jl
dec
mov
test
inc
sub
(bad)
or
sbb
add
add
inc
mov
pop
jbe
or
and
dec
push
dec
pop
sbb
add
out
cli
out
imul
clc
pop
cmp
lods
and
rcl
scas
imul
mov
(bad)
jge
jmp
mov
loop
mov
mov
mov
les
js
data16
jle
jnp
xlat
dec
fsub
adc
jmp
ss
mov
pop
push
sbb
call
sub
ret
(bad)
dec
int3
test
or
fist
xor
adc
sbb
ficom
mov
dec
arpl
fmul
cmp
in
stos
or
push
mov
cdq
sahf
jno
xchg
mov
ja
out
push
cli
mov
pop
and
int3
lahf
cwde
test
sub
(bad)
xchg
hlt
cmp
jae
xor
cmp
mov
das
and
stc
out
cmps
mov
test
xchg
retf
enter
mov
retf
fidivr
add
es
xchg
dec
add
lea
inc
sbb
int3
loopne
add
clc
mov
fs
push
jnp
daa
sti
inc
jg
outs
ret
mov
scas
push
out
pop
mov
cs
pop
inc
xor
xlat
dec
aam
in
enter
pop
fwait
mov
xor
jmp
out
sbb
xor
sub
jne
mov
xlat
jo
mov
aaa
inc
adc
cmp
into
or
jge
sbb
mov
inc
add
sub
lods
hlt
call
cli
scas
inc
mov
inc
and
fadd
jne
dec
inc
shl
add
ins
xor
outs
xchg
(bad)
mov
xor
ret
inc
mov
lea
and
jmp
(bad)
mov
and
gs
outs
mov
add
xor
fistp
test
retf
sbb
ja
or
aas
cld
(bad)
pop
xchg
(bad)
int
fisub
test
jge
cmp
mov
pop
pop
shl
adc
cmp
loopne
shr
retf
repnz
mov
cmp
inc
mov
idiv
out
or
hlt
xor
imul
jp
push
cmp
jns
into
sub
jp
les
cmp
test
mov
aad
cld
test
dec
inc
lods
gs
addr16
jae
aaa
mov
nop
sbb
test
stos
dec
or
ret
sub
jecxz
mov
pushf
dec
mov
push
adc
addr16
repz
push
mov
icebp
inc
add
push
sbb
hlt
mov
stos
pushf
stos
xor
(bad)
and
clc
inc
inc
pop
js
out
mov
lahf
jmp
sbb
cmc
sub
push
mov
daa
or
xchg
fidivr
retf
lock
inc
pop
fidiv
aam
inc
sbb
dec
push
ret
dec
cmp
or
cmp
nop
dec
cmps
out
(bad)
push
push
stc
sub
mov
test
ss
xor
sub
xor
push
sub
fwait
push
sbb
lods
ror
fcmovbe
int3
push
fiadd
mov
sahf
bound
mov
fwait
loope
(bad)
out
push
cmp
mov
lea
scas
aam
outs
lahf
loop
pushf
jmp
in
shl
data16
sbb
jno
push
leave
sbb
push
ds
cmps
dec
fnsave
ins
mov
ficomp
es
push
mov
movs
jmp
loope
sub
in
data16
nop
movs
loope
out
inc
sbb
lds
push
push
aas
fdivr
cmps
jae
popa
lds
sub
ins
int
ret
sbb
int
clc
sbb
mov
jmp
mov
(bad)
cmp
fcomp
imul
or
data16
fstp
adc
push
in
mov
pop
sar
inc
adc
jle
fnstenv
or
adc
and
mov
lods
test
sub
stos
dec
or
dec
nop
pushf
aam
sub
sub
push
mov
dec
push
retf
mov
repz
leave
outs
loope
call
setae
cmp
arpl
push
mov
and
dec
stc
(bad)
adc
lods
ror
jnp
add
pop
icebp
cmp
cmps
inc
pop
or
dec
and
xchg
mov
mov
xor
xchg
ins
add
retf
mov
jb
(bad)
aaa
ins
dec
(bad)
(bad)
lods
repz
mov
xchg
outs
mov
jne
popa
sbb
sub
jecxz
enter
push
lock
jmp
xor
mov
pop
inc
push
jmp
mov
test
add
mov
jle
push
or
or
test
ss
into
dec
das
stos
lock
and
popf
pusha
inc
scas
test
adc
loop
sub
pop
cmps
push
ficomp
pop
jecxz
loope
hlt
iret
and
aaa
lea
push
(bad)
std
sbb
pop
mov
out
popa
push
push
push
dec
and
ror
dec
or
add
out
or
not
mov
je
lock
cmp
xchg
dec
das
inc
es
mov
call
xchg
cmp
std
mov
pop
lds
mov
mov
cmp
mov
push
and
rol
in
loopne
dec
sbb
fwait
pop
out
jecxz
push
xchg
mov
sahf
pop
mov
xor
or
jno
xchg
add
cs
inc
retf
adc
mov
inc
xor
mov
ds
mov
leave
cmp
dec
sub
loopne
pop
cmp
jne
imul
cdq
mov
pop
test
dec
out
out
test
bnd
dec
call
stos
xor
aaa
cwde
repz
idiv
inc
jecxz
mov
adc
mov
mov
cmp
lock
xor
xchg
movs
and
jecxz
jecxz
inc
popa
add
dec
fidiv
jbe
add
lds
popf
mov
mov
repz
pop
inc
cmp
rol
popa
clc
mov
enter
sbb
fsubr
ss
sbb
inc
sub
push
inc
inc
pop
push
cld
push
cdq
or
std
iret
inc
jne
not
or
cmp
or
xor
xchg
cmp
call
mov
sub
push
(bad)
(bad)
sbb
idiv
stc
push
shl
push
dec
jp
jg
stc
sbb
mov
fsubr
mov
out
and
test
int3
sbb
jge
push
outs
(bad)
test
jbe
(bad)
sbb
inc
rcl
pop
(bad)
pop
or
cld
loop
mov
aaa
cs
outs
dec
in
mov
xchg
xor
ret
mov
fstp
lods
stc
movs
aaa
jbe
add
ins
push
shl
mov
pop
cdq
add
outs
jmp
fcom
and
and
mov
movs
(bad)
ss
pop
cmps
int3
cmps
push
push
and
jae
(bad)
in
imul
aad
retf
in
shl
and
adc
lods
mov
stos
sahf
std
cmps
or
mov
adc
mov
sbb
push
mov
or
cmp
xor
push
inc
add
nop
sbb
mov
test
idiv
or
mov
ja
in
cli
push
neg
retf
sbb
es
jp
jmp
xchg
mul
int
sbb
push
(bad)
sub
jg
ror
mov
pop
test
sbb
stos
test
imul
jns
xchg
daa
xchg
test
xlat
push
mov
rdtsc
dec
cmp
nop
out
sub
or
jp
add
fucomip
(bad)
mov
pop
ins
pop
test
mov
fcomp
loop
add
ds
dec
xchg
and
or
pop
push
test
aam
xor
cli
rcr
arpl
xor
mov
add
pusha
mov
cmp
cmp
push
ins
push
lahf
loope
loop
sub
cmp
mov
mov
jno
and
add
xlat
test
js
imul
pop
xor
movs
ror
jno
std
movs
or
cmp
sub
sub
sbb
repnz
jno
lods
pop
or
xchg
test
fadd
leave
bound
in
sbb
rcr
lahf
pop
fcomp
mov
in
jp
push
sub
cmp
dec
xchg
getsec
mov
addr16
stc
fsub
popa
xor
jle
imul
mov
mov
mov
mov
test
jae
aaa
(bad)
add
scas
jb
push
adc
int
mov
(bad)
xchg
or
stos
mov
inc
mov
push
pop
bound
lea
xchg
xchg
mov
test
mov
xrelease
(bad)
mov
sub
(bad)
movs
frstor
stos
push
dec
(bad)
mov
ficom
out
bswap
cmp
adc
lea
pushw
dec
out
ficom
xor
mov
(bad)
cmp
pusha
dec
ds
or
inc
fcmovne
popf
(bad)
jge
or
sbb
pop
ret
add
daa
xor
sbb
js
mov
jg
mov
out
pop
fwait
dec
cmp
imul
push
jmp
ja
cld
aaa
cmps
xchg
xor
mov
or
sbb
scas
out
(bad)
sbb
and
xor
cld
out
int
sub
cwde
xchg
xchg
cdq
pop
jnp
mov
pop
mov
repz
pop
or
bound
out
test
push
dec
popf
nop
adc
fadd
iret
lahf
sub
enter
push
cmp
mov
xor
mov
out
adc
sbb
sbb
test
adc
sub
pop
fadd
mov
pop
cld
push
inc
fs
cmp
jmp
in
mov
dec
test
inc
bound
xor
jecxz
mov
retf
repnz
jge
data16
push
out
fldenv
out
sub
or
or
or
in
(bad)
sbb
(bad)
xchg
movs
add
jmp
inc
xchg
cmc
xchg
xchg
rol
movs
jl
mov
push
cwde
cs
fsub
mov
inc
aam
inc
aas
clc
adc
pop
push
mov
dec
in
les
sysret
xor
dec
scas
int3
inc
out
push
lock
das
jb
fdiv
mov
fcomi
push
pop
ins
data16
jbe
dec
dec
sub
sti
jno
int
addr16
out
shl
(bad)
out
mov
cmp
ret
and
loop
ret
out
stos
adc
adc
push
adc
and
dec
(bad)
dec
adc
dec
push
loopne
imul
jp
adc
xchg
test
mov
jecxz
adc
stos
push
mov
std
test
adc
mov
leave
ds
dec
in
pop
mov
es
xor
inc
mov
or
xor
mov
inc
pop
add
add
push
add
dec
popa
add
mov
enter
mov
fisubr
inc
and
jecxz
mov
in
sub
nop
ret
push
das
hlt
mov
les
sub
pop
pop
(bad)
pusha
and
in
or
push
jno
aad
xor
int
(bad)
push
push
cwde
std
jo
das
push
lods
mov
bound
dec
repz
sbb
stos
movs
cmps
mov
popa
sub
inc
push
das
pop
movs
test
cwde
pop
jg
mov
dec
mov
(bad)
sbb
je
push
in
sbb
xchg
push
or
and
fwait
aas
cmp
les
test
daa
sbb
ret
je
retf
inc
jmp
add
in
(bad)
inc
lods
push
xor
push
pop
popf
xchg
adc
mov
(bad)
pop
push
cmp
retf
sbb
aad
pop
arpl
(bad)
sub
in
jecxz
(bad)
jo
call
lock
xor
arpl
pop
icebp
dec
jmp
and
xor
xor
cmc
aaa
push
(bad)
rcr
add
pop
jae
jecxz
pop
pop
cli
inc
sar
pusha
arpl
or
push
or
inc
cli
inc
xor
std
sub
or
or
add
push
cmc
sbb
push
push
test
pop
retf
movs
outs
inc
mov
xor
repz
shr
sub
nop
loopne
add
shr
sub
fdivr
iret
mov
pop
mov
out
and
retf
je
push
adc
dec
inc
fs
jmp
jnp
js
das
cmp
retf
jp
in
mov
jle
adc
cmps
fdiv
jle
pop
imul
mov
movs
into
jl
std
jno
je
(bad)
fcmovnbe
xchg
lods
cdq
add
sbb
xlat
dec
xchg
gs
sahf
add
out
pop
les
push
jp
pop
mov
out
pop
or
push
jne
push
and
and
pop
xor
jg
add
or
jge
pop
fiadd
mov
add
fst
xchg
scas
cmp
cmp
cdq
dec
in
cdq
in
mov
dec
pop
mov
cdq
lods
sbb
movs
callw
mov
adc
xchg
mov
ins
or
pusha
inc
retf
push
xchg
(bad)
aam
cmp
cmp
adc
sub
in
mov
ret
mov
xlat
call
jmp
pop
jb
enter
call
ins
dec
jge
xchg
imul
mov
lods
push
sbb
sbb
rcr
gs
fmul
fs
and
jne
sub
mov
sti
or
jbe
(bad)
rol
lock
sub
mov
aas
inc
daa
inc
mov
call
xchg
inc
cmp
add
dec
pop
mov
outs
aas
inc
sbb
call
dec
lahf
jecxz
xchg
add
clc
mov
mov
push
popa
movs
in
sbb
push
jp
movs
test
or
out
or
mov
jae
movs
or
lds
scas
repnz
call
inc
adc
cmc
pusha
mov
mov
push
cmp
cmp
xchg
ret
pop
xor
mov
sbb
dec
sbb
adc
test
fsub
xor
add
iret
or
adc
jge
and
(bad)
adc
mov
gs
rcr
add
sbb
out
mov
xchg
(bad)
mov
ss
hlt
js
retf
jl
jb
cmp
in
bound
(bad)
in
cmc
mov
cld
mov
(bad)
cmp
mov
jmp
adc
mov
sub
int
jg
js
sbb
fdiv
pop
div
cmp
into
mov
push
xor
jge
pop
icebp
call
xor
xor
mov
inc
popa
xlat
mov
lea
mov
mov
(bad)
iret
mov
retf
inc
lds
inc
add
fild
jbe
mov
pop
movs
arpl
in
mov
and
hlt
das
cld
test
fldcw
repnz
cli
adc
jecxz
or
pop
mov
and
cwde
stos
jmp
sub
push
lods
sti
ror
int3
mov
cwde
xchg
ja
aas
add
clc
mov
lds
sub
outs
dec
push
add
repz
or
mov
loope
and
pop
pushf
sub
fbstp
sbb
push
sbb
inc
fnsave
inc
push
push
int
imul
xor
iret
scas
mov
jnp
cmp
inc
mov
stos
aas
(bad)
pop
sub
mov
sub
repz
or
inc
xchg
sbb
xchg
jae
mov
jnp
mov
mov
inc
test
jae
(bad)
push
arpl
mov
mov
jb
xchg
pop
mov
repnz
push
dec
in
repnz
pop
jno
sbb
sbb
ja
scas
mov
dec
pop
movs
mov
outs
push
iret
inc
add
push
mov
(bad)
ja
idiv
mov
add
dec
jb
push
or
mov
cmp
jns
dec
jo
fild
xor
fisttp
(bad)
jno
push
cmp
add
jmp
loop
cmp
push
ss
int3
dec
push
cmp
pop
jo
add
sbb
jmp
pusha
cwde
arpl
mov
into
sub
mov
and
cmps
or
adc
fsubr
pop
cwde
mov
lahf
xor
loop
lods
add
nop
mov
jl
mov
test
aad
lea
and
xor
test
xchg
xor
(bad)
lahf
mov
retf
cmp
sahf
fucom
jbe
pop
mov
repz
fcmovnbe
in
lds
icebp
call
jb
xor
sbb
mov
add
ret
test
ja
inc
mov
fwait
int3
out
lahf
inc
sub
fsubr
jmp
or
cdq
jle
icebp
mov
dec
cmp
jnp
pop
cs
jmp
dec
add
xchg
mov
std
sub
cmc
ds
add
mov
(bad)
(bad)
push
cmps
(bad)
retf
push
push
cmps
push
jmp
pusha
jle
xor
js
jle
push
lods
and
nop
out
leave
mov
cmc
cdq
stos
lahf
repnz
sar
outs
leave
dec
pushf
dec
xor
aas
mov
sbb
fbstp
mov
imul
xchg
fnstsw
retf
(bad)
xchg
mov
lea
sbb
je
cmp
jne
pop
movs
hlt
(bad)
pop
push
mov
cmp
jle
add
jbe
xchg
js
cmps
mov
push
(bad)
ja
cmp
jo
push
int
mov
jge
lea
repz
out
push
mov
stc
je
cwde
stos
call
xor
jbe
iret
(bad)
cli
(bad)
int3
add
fimul
xchg
or
xor
ret
add
and
std
sbb
or
jmp
das
mov
clc
add
sub
fldcw
outs
(bad)
xor
leave
mov
lds
pop
push
xchg
icebp
dec
pop
and
push
or
daa
out
sti
mov
xor
inc
rol
retf
mov
lods
push
fwait
sar
imul
inc
test
call
out
stc
pop
clc
daa
adc
xchg
mov
xchg
xchg
(bad)
jb
mov
out
dec
add
jne
mov
push
js
les
into
push
mov
nop
cld
mov
loope
das
loope
nop
out
mov
leave
imul
xor
jp
sbb
test
push
sbb
data16
(bad)
xchg
je
cmps
hlt
clc
(bad)
cli
sbb
jbe
xor
adc
cld
adc
xor
mov
mov
pop
mov
das
lods
pop
pop
jmp
fisubr
gs
in
xchg
ss
in
arpl
mov
xor
retf
adc
xor
inc
sbb
leave
mov
leave
inc
sub
dec
ins
cmp
rcr
xchg
mov
fwait
(bad)
cld
and
(bad)
cmp
adc
call
mul
test
sbb
outs
add
data16
mov
fimul
pop
fst
xor
lods
xchg
out
popf
es
inc
in
and
out
dec
imul
mov
ins
mov
mov
inc
push
fs
jo
scas
dec
mov
jp
fisub
fsub
ss
ret
adc
xor
les
dec
mov
jecxz
xchg
daa
outs
xor
ja
fild
cmp
fdivr
cmp
out
pop
stos
mov
mov
dec
mov
jecxz
or
inc
mov
icebp
aas
ret
push
or
push
cs
adc
inc
jl
mov
les
clc
fldenv
sub
sbb
and
cwde
sar
out
loop
pop
or
mov
div
pop
imul
call
in
or
pop
aas
mov
jne
mov
rcr
push
xchg
scas
fsubr
mov
xor
lock
js
fldenv
cmp
pop
mov
or
xchg
sbb
mov
pushf
inc
dec
push
mov
cmps
lock
mov
les
jns
ds
pusha
xchg
mov
ret
into
loope
mov
fwait
repnz
cmps
pop
cmp
add
sbb
cmp
pcmpeqd
loopne
icebp
or
test
inc
cmps
stos
popa
fiadd
add
push
dec
in
mov
cmc
loopne
gs
xor
fsub
sbb
xor
push
adc
xor
dec
lds
retf
bound
test
dec
out
data16
out
push
mov
mov
jl
push
pop
loop
sub
repnz
aaa
mov
movs
popf
push
xor
or
mov
push
addr16
(bad)
iret
pop
mov
fimul
imul
add
xor
js
out
addr16
sbb
dec
jmp
cmp
jg
mov
cmps
imul
fs
and
call
out
cmps
(bad)
xor
int
fnstcw
xor
pop
push
pop
out
std
int
mov
int3
in
stos
inc
add
(bad)
call
sub
jecxz
mov
inc
mov
js
stos
mov
or
ret
push
lock
sub
data16
(bad)
mov
dec
add
mov
(bad)
(bad)
loopne
in
pop
pusha
imul
jle
jb
mov
and
loopne
xor
or
add
jge
fbld
fwait
mov
cwde
std
fwait
out
out
movs
and
sub
or
sbb
mov
mov
xchg
test
frndint
arpl
xor
xor
fstp
in
mov
inc
test
sub
(bad)
ins
(bad)
cmps
sbb
sub
adc
xchg
popf
loopne
imul
mov
adc
jecxz
xchg
fiadd
stos
out
pop
pop
pushf
stos
push
adc
jmp
(bad)
loopne
enter
push
and
dec
imul
cmp
call
xor
outs
xchg
pop
movs
cmps
pop
xchg
pop
ins
dec
adc
pop
or
imul
lahf
xchg
mov
scas
jb
iret
(bad)
mov
jl
(bad)
cmp
iret
cmp
sub
sbb
ds
jle
pop
push
out
adc
pop
push
pusha
lds
pop
leave
xchg
xchg
ret
sub
cdq
or
add
shl
mov
pop
enter
int3
mov
push
cmps
pop
cmp
and
pop
push
cmp
int
mov
retf
loop
mov
aaa
jo
pop
jle
xchg
lea
sbb
jmp
cs
scas
mov
mov
xor
push
inc
push
mov
lea
jmp
daa
mul
aaa
xor
or
and
lods
adc
add
push
movs
test
dec
or
adc
fidiv
lds
jge
(bad)
bound
ins
adc
push
test
mov
popf
pop
hlt
neg
test
jge
and
xchg
push
pop
jne
pop
loop
aam
mov
cdq
dec
xchg
loopne
(bad)
push
pop
cdq
fnstcw
ja
or
xor
out
(bad)
sub
int3
lds
cwde
xchg
sub
imul
pushf
or
xchg
clc
xchg
sti
jno
in
test
push
iret
pop
mov
scas
mov
jnp
shr
pop
or
lahf
adc
pop
(bad)
cld
ds
mov
fidivr
fistp
out
jmp
movs
mov
pop
sbb
icebp
ja
mov
mov
test
xchg
aad
out
int3
jecxz
pop
mov
push
push
dec
jmp
fs
jle
push
ins
ret
jle
push
addr16
or
movs
jg
out
lock
in
dec
sahf
mov
repnz
popa
dec
add
shl
push
out
mov
xchg
aad
leave
pop
iret
push
cmp
movs
sub
sbb
fiadd
pop
lods
lahf
mov
clc
push
les
shl
into
cmc
add
mov
xor
jnp
sbb
and
(bad)
sbb
les
sub
jle
loope
xchg
or
outs
mov
mov
outs
icebp
mov
push
stos
jmp
pop
imul
push
inc
inc
sbb
pop
dec
mov
push
xor
push
cmp
sub
jl
addr16
movs
aad
mov
mov
jp
add
(bad)
cwde
pusha
push
fisubr
pusha
inc
sti
cmp
in
adc
cmp
mov
mov
jb
stc
dec
cmp
adc
(bad)
rol
adc
inc
out
ret
ret
jns
(bad)
jne
data16
xor
inc
jno
and
mov
es
(bad)
sub
data16
pushf
or
inc
push
js
sub
inc
push
sub
je
mov
mul
mov
mov
pusha
pop
push
aas
mov
stos
in
push
xor
jmp
js
add
xchg
inc
add
out
push
icebp
aaa
cwde
aas
ja
or
jbe
out
push
pusha
cmp
fst
sub
dec
adc
pusha
add
push
pop
mov
or
push
shl
push
xor
mov
in
out
cs
hlt
psubusw
xchg
cli
movs
mov
std
pushf
mov
call
sub
mov
push
adc
xchg
sbb
in
sahf
mov
jle
cmp
popa
cmc
or
mov
or
into
jne
push
or
in
outs
jmp
add
xchg
scas
mov
in
icebp
cmp
hlt
cli
push
adc
and
mov
jmp
(bad)
pop
inc
mov
sbb
test
xor
add
movs
mov
cmp
hlt
mov
lock
jnp
and
loopne
in
ficom
mov
xchg
test
mov
shl
xchg
sub
into
mov
arpl
sub
bound
xchg
mov
mov
aas
xchg
lds
or
loope
int
jge
cdq
(bad)
vmread
jns
out
cmp
push
dec
add
dec
sub
scas
lods
gs
or
xor
dec
xchg
cwde
adc
cmp
mov
loope
test
or
cmps
push
imul
inc
cmp
ret
jnp
test
sub
cli
dec
xor
pusha
fcom
jp
test
mov
out
mov
imul
fstp
int
push
and
dec
adc
popf
sub
dec
das
pop
inc
mov
stos
cmp
push
arpl
pop
push
mov
xor
iret
push
sbb
push
push
jecxz
pop
pop
add
pop
jns
scas
xor
jne
mov
xor
jnp
mov
outs
in
pop
mov
mov
xor
add
push
test
jp
add
in
pop
ja
sti
call
outs
test
inc
push
xor
adc
lds
xchg
repnz
mov
push
cmp
mov
fwait
jmp
mov
ret
outs
sub
xchg
into
xchg
inc
rcr
xor
push
xchg
sub
or
and
pop
jo
ror
cli
xor
hlt
gs
in
xor
dec
push
movs
push
popa
(bad)
mov
mov
in
jmp
jg
pushf
lahf
and
add
cwde
mov
adc
cmp
inc
mov
jmp
mov
adc
or
shl
push
mov
dec
dec
lock
ss
pop
out
adc
ss
out
sahf
xor
mov
adc
jmp
bound
or
mov
mov
test
cmp
xor
mov
ds
xchg
mov
cmps
cmp
inc
adc
or
mov
in
fs
jb
cs
loop
xchg
xor
mov
sbb
shr
sahf
cld
dec
mov
sub
lea
mov
gs
sti
(bad)
aad
test
rcl
stos
js
xor
sbb
stos
scas
data16
lock
push
clc
jmp
push
(bad)
neg
mov
cld
les
shr
add
into
movs
outs
cdq
inc
pop
out
xor
xor
cmp
ret
pop
xor
jmp
fs
mov
jbe
aad
xchg
enter
call
stc
push
movs
dec
add
rol
xor
mov
test
hlt
retf
stos
and
xor
fmul
pop
cli
scas
clc
pop
mov
psrlq
das
xor
cmp
mov
mov
jae
js
pusha
test
hlt
lea
pushf
ret
dec
or
icebp
push
cld
inc
cmps
push
xchg
inc
fcom
push
jmp
cmps
xor
xchg
jno
fld
sti
and
dec
push
mov
jl
hlt
fld
mov
in
addr16
jns
in
sbb
nop
and
test
sub
mov
gs
jns
xchg
les
mov
(bad)
leave
push
ror
repnz
gs
cdq
ds
pusha
hlt
sub
imul
push
adc
test
mov
cmps
cdq
and
inc
in
stos
scas
mov
mul
sbb
mov
fwait
cli
adc
call
aas
inc
jo
inc
cmps
arpl
mov
pop
loop
adc
xor
mov
jae
inc
das
fisub
add
mov
out
iret
shr
fwait
adc
mov
test
imul
jbe
scas
jbe
cs
inc
mov
cmps
pop
sbb
pop
enter
mov
push
push
sbb
push
mov
lahf
xchg
cwde
mov
xor
xchg
retf
pop
test
fisttp
xor
inc
mov
mov
and
push
lahf
dec
loopne
or
inc
push
jp
push
jmpw
sbb
jg
(bad)
jmp
shl
fidivr
push
scas
mov
push
mov
jmp
mov
and
cmp
mov
push
mov
xchg
pop
lds
fild
xlat
int3
xchg
push
jb
jg
es
jbe
call
adc
pop
inc
ja
mov
sbb
inc
es
cmp
jbe
stos
fist
prefetcht1
pop
jns
pop
inc
inc
int3
inc
xor
js
cmp
ret
dec
test
out
and
out
mov
popf
mov
loop
mov
sbb
push
ds
jl
jb
cmp
ja
push
aad
movs
xlat
adc
stos
pop
leave
cmp
sub
cmp
jno
sbb
mov
push
inc
cmp
cwde
sub
fst
test
push
nop
pop
cwde
xchg
xchg
adc
adc
cwde
ficomp
js
mov
test
xchg
test
loope
pop
and
mov
cmp
ror
fdecstp
xor
mov
sub
sbb
iret
fist
jb
in
in
call
add
mov
add
pop
das
cmps
pusha
push
sub
jno
push
mov
aam
cmc
add
push
scas
xor
jne
call
mov
xchg
pop
es
retf
inc
mov
pop
ins
ret
fsub
sahf
xor
shl
and
test
sub
daa
fisub
jae
adc
popa
xchg
inc
aad
ror
mov
clc
sbb
sub
mov
mov
mov
mov
cli
addr16
cmp
scas
aam
inc
pop
daa
(bad)
xchg
mov
mov
loopne
shr
daa
or
mov
mov
mov
sbb
repz
jmp
sbb
loopne
call
std
fwait
lods
aad
xor
scas
xchg
dec
inc
add
jle
test
ret
jmp
sbb
test
xchg
ja
xor
adc
add
sbb
outs
xor
fnstcw
jbe
xor
cmc
or
in
sbb
dec
pop
dec
inc
ja
les
inc
sbb
rcr
aad
pushf
repnz
jne
sbb
stc
popf
addr16
adc
outs
test
push
or
daa
pop
xchg
or
mov
adc
and
rcl
fist
add
dec
ins
adc
repnz
das
mov
sub
pop
scas
pop
dec
test
jg
sbb
jno
aas
retf
fild
sbb
sub
lahf
imul
fld
pop
push
inc
pop
out
mov
(bad)
xchg
xor
add
out
dec
sbb
retf
inc
mov
cdq
jl
sub
mov
jno
loop
or
js
adc
ror
cmps
aaa
add
jmp
outs
inc
out
fisub
cmp
xchg
jbe
and
inc
jo
or
test
fdivr
sbb
cwde
and
cmc
rcl
push
dec
pop
push
sub
jno
stos
fsubr
(bad)
dec
cdq
out
push
sbb
push
xchg
repz
jae
cmps
push
clc
inc
mov
sub
push
les
push
call
lods
xchg
pushf
pop
dec
pop
push
inc
pop
mov
pusha
adc
mov
xchg
dec
push
jae
add
aad
xor
xor
mov
mov
dec
mov
pop
mov
fs
jmp
mov
ret
sub
jae
cmps
ins
pop
fs
ror
int
fs
xor
fist
mov
icebp
daa
mov
inc
mov
shl
jns
mov
hlt
ret
mov
ds
cmc
test
fisub
icebp
or
in
ins
jg
call
xchg
dec
push
(bad)
mov
fwait
ins
jmp
mov
popa
xchg
cli
jbe
jbe
mov
dec
mov
dec
daa
fsub
jns
sti
fnstcw
imul
pop
push
and
leave
xchg
mov
pop
cld
jmp
imul
lods
mov
cmp
jbe
cmp
addr16
sar
xor
scas
enter
xchg
add
int
lods
cmp
push
push
push
or
jecxz
and
in
(bad)
retf
push
xor
push
xchg
ja
data16
(bad)
icebp
jmp
dec
inc
out
or
ucomiss
ret
lock
adc
out
arpl
mov
call
cmp
sbb
adc
jle
sub
cmps
pop
push
(bad)
loope
ds
cli
in
push
daa
fcom
imul
repnz
stos
test
(bad)
and
dec
mov
pop
mov
aaa
xor
repnz
mov
aaa
pop
ins
inc
dec
add
lds
in
adc
int
adc
and
out
cwde
and
cmp
mov
sahf
pop
adc
xchg
cmp
inc
scas
fmul
dec
mov
jecxz
cld
aaa
scas
xchg
mov
jne
mov
pop
or
ins
test
int
cwde
test
jo
jmp
les
sti
push
mul
add
inc
rcr
jp
dec
and
mov
rcl
inc
xchg
push
test
repz
test
leave
std
pop
(bad)
sbb
push
sahf
aas
rol
jae
pop
cdq
adc
cmp
cmc
sub
adc
std
jno
mov
xchg
cmp
push
xchg
adc
rcl
cmp
adc
jnp
test
scas
iret
iret
cmc
inc
xlat
jp
adc
sub
ret
aad
ins
stc
test
rcr
repz
jmp
cmp
call
les
imul
daa
stc
xor
shl
push
in
addr16
dec
outs
cmp
jp
ins
inc
(bad)
adc
retf
stos
jl
stc
dec
outs
xor
dec
fst
sbb
fild
pop
ins
imul
movs
or
ds
shl
lods
cwde
daa
mov
sub
push
xchg
out
jae
test
fs
xchg
inc
pop
inc
sbb
pop
xchg
cli
adc
ret
jge
jne
mov
push
jno
dec
jns
fcomp
popa
push
aam
sahf
fs
fild
rcl
add
mov
xchg
sar
mov
push
loope
add
adc
sbb
and
and
mov
jae
(bad)
scas
dec
fldcw
fistp
ficomp
add
push
sbb
push
dec
in
aaa
iret
jo
out
and
mov
aas
push
in
mov
jmp
push
or
(bad)
stos
pop
rcr
mov
cmp
xor
scas
aad
repnz
add
jmp
jl
call
(bad)
cli
jp
fst
sbb
pop
push
dec
and
inc
jle
or
pop
xchg
xchg
jg
retf
dec
push
dec
adc
repnz
cmc
sti
repz
test
fnstcw
mov
jbe
xchg
movs
lahf
mov
or
cs
enter
mov
aas
dec
fbld
jo
add
pop
sti
hlt
xor
lahf
sub
(bad)
jnp
cwde
add
inc
mov
push
mov
daa
psraw
adc
ins
sub
out
ja
jno
sahf
jp
scas
push
mov
and
or
in
rol
rcl
dec
aam
jle
push
mov
xor
movs
add
add
mov
inc
into
test
ret
hlt
xchg
iret
repnz
jp
xor
and
(bad)
cmp
lods
repnz
mov
jge
mov
out
or
inc
test
push
cmp
jp
pop
mov
mov
mov
cmp
in
jo
iret
in
scas
add
xchg
ss
pop
dec
arpl
sbb
jbe
in
int
sbb
retf
pop
mov
pop
test
adc
and
jp
out
clc
sub
cmp
jo
popf
and
lods
push
inc
jns
sub
add
dec
(bad)
pop
add
dec
xchg
dec
jne
xor
mov
cmps
iret
es
lahf
xor
sbb
jns
ins
shl
add
imul
sbb
js
and
sub
lock
outs
cld
(bad)
mov
adc
(bad)
int
(bad)
mov
pcmpgtd
sub
scas
inc
xchg
mov
std
cmp
xchg
pop
jae
jno
test
cwde
adc
lahf
int
sbb
adc
ins
inc
push
mov
mov
push
loop
sub
loop
xchg
mov
in
scas
mov
call
ss
xor
clc
in
xor
and
inc
inc
jns
movs
or
mov
movs
pushf
mov
pushf
dec
das
dec
jne
jmp
sub
mov
mov
neg
xlat
loop
shl
inc
xchg
loopne
dec
scas
lock
push
test
jns
mov
xchg
das
mov
popf
or
int
cmp
ret
(bad)
movs
stc
jns
int3
scas
ret
std
mov
push
xor
repnz
fdiv
repnz
mov
mov
fidiv
in
ret
mov
(bad)
(bad)
int3
add
mov
mov
fdivr
and
inc
outs
es
mov
mov
fisub
popa
push
jne
(bad)
repnz
jns
cmp
shr
pop
fdivr
inc
arpl
mov
jb
outs
ror
dec
(bad)
ds
jbe
mov
and
jb
int
sub
test
mov
jbe
aaa
mov
mov
pop
popf
mov
jl
es
sbb
test
das
mov
(bad)
popf
dec
mov
pop
fdivr
sub
fidiv
xor
test
or
and
cwde
jae
shl
xor
fdiv
jmp
iret
adc
ret
dec
jnp
cmp
js
xchg
cmp
jl
pop
adc
push
(bad)
mov
add
rcl
add
hlt
jg
pop
stos
ret
cmps
mov
mov
(bad)
xor
pop
into
sub
mov
xlat
int3
inc
imul
or
sbb
xor
dec
es
push
jle
xchg
fdiv
mov
cmc
movs
or
xor
movs
ins
movs
out
mov
pop
int3
add
(bad)
adc
je
outs
or
push
xchg
pop
or
jbe
mov
stos
xor
pop
out
lahf
out
test
or
pushf
mov
fadd
call
nop
mov
xor
cs
out
outs
add
or
cmps
(bad)
mov
aam
int3
fcom
mov
mov
cmp
sbb
inc
cmps
jno
jne
pushf
inc
arpl
push
stos
mov
or
ds
adc
test
fimul
lea
das
xchg
js
lahf
leave
inc
int3
or
and
pop
bt
jns
push
xchg
test
sub
add
jne
push
mov
cmp
out
adc
mov
and
ret
call
xchg
scas
repz
(bad)
sti
xchg
ss
sub
lock
iret
sub
sbb
test
jl
mov
(bad)
int
loopne
mov
pop
add
addr16
mov
cmp
in
movs
ror
inc
sub
gs
jmp
pushf
loope
je
push
dec
inc
sub
ins
and
mov
rcl
(bad)
out
cmp
cmps
js
pop
mov
mov
sbb
adc
or
sbb
jge
ror
(bad)
push
loopne
iret
mov
jl
add
dec
fcom
pop
lahf
retf
jb
mov
ins
mov
(bad)
xchg
shl
shl
cs
outs
or
scas
pop
pop
pop
mov
out
test
jle
pop
push
ret
or
mov
mov
add
imul
push
jg
pop
mov
test
bound
mov
(bad)
mov
xchg
mov
dec
aas
call
mov
fcom
fiadd
loop
mov
mov
inc
out
addr16
clc
jge
int3
xor
iret
test
pop
inc
sub
pmulhuw
stc
nop
lea
or
out
hlt
test
dec
adc
scas
loop
adc
inc
sbb
or
pop
std
leave
out
call
mov
pop
rcr
cwde
gs
mov
inc
iret
aas
jns
inc
sti
adc
aam
jecxz
jp
fnstenv
jg
rol
add
fiadd
jnp
mul
mov
adc
lods
mov
shr
push
fsubr
pop
xor
test
cld
fs
ret
xchg
cmp
adc
cmp
dec
pop
hlt
imul
fnstsw
loope
mov
mov
mov
enter
xchg
jmp
xor
fwait
lahf
xchg
xchg
arpl
fsubr
and
pop
push
inc
retf
and
inc
cmp
dec
or
dec
nop
pop
leave
pop
push
pop
leave
stos
and
xor
cmp
add
sbb
iret
pop
rcr
loop
jmp
mov
mov
sbb
xchg
mov
pop
scas
sub
lds
pop
test
add
mov
pop
dec
jmp
mov
dec
mov
and
ins
push
push
cmps
xor
scas
mov
fdivr
shl
adc
fcomp
jp
pop
xor
cmp
adc
div
(bad)
jmp
cdq
lahf
adc
sub
and
jbe
mov
(bad)
or
repnz
test
(bad)
(bad)
js
and
adc
add
xchg
push
cmp
cmp
out
dec
pop
test
neg
je
and
add
jno
jp
mov
lods
sub
scas
jno
fsubr
mov
test
and
dec
add
ins
ds
cmp
mov
inc
retf
test
(bad)
xor
rcr
cmp
(bad)
mov
dec
push
shr
fxch
enter
mov
movs
cmp
imul
cmc
jmp
addr16
and
add
pop
sub
push
out
je
hlt
jb
aam
dec
pop
test
lods
test
shl
aas
mov
jo
mov
loope
sbb
stc
push
out
mov
out
(bad)
pop
clc
jae
clc
mov
mov
sbb
jae
xchg
sbb
push
xchg
pop
push
jmp
inc
add
cmp
icebp
push
clc
psllw
dec
mov
jmp
popf
sbb
cmp
cwde
enter
enter
in
(bad)
inc
(bad)
cld
jne
adc
movs
sti
into
mov
jb
int3
push
cwde
push
fmul
xchg
mov
scas
mov
sbb
push
dec
call
js
cwde
jl
mov
lods
lock
out
mov
jns
pop
mov
xor
mov
pop
popf
push
cmps
lock
popf
push
mov
popa
(bad)
imul
adc
lods
pop
neg
rcr
mov
lods
sbb
fld
push
mov
fcomp
jg
xchg
fistp
(bad)
xor
cld
sub
icebp
add
loope
xor
hlt
ror
xchg
inc
jg
mov
mov
aam
fs
mov
(bad)
lods
add
ss
adc
lds
add
(bad)
xlat
jne
jno
xchg
fs
or
dec
add
pop
fldenv
and
je
and
pop
ret
mul
mov
movs
mov
popf
ret
loopne
adc
nop
rol
sub
sar
out
retf
pop
ins
rcl
add
in
je
mov
stos
lahf
mov
lods
sbb
mov
fdivr
pop
pop
xor
jp
xchg
cmp
add
cmp
iret
pushf
or
jo
(bad)
mov
xchg
sub
pop
out
hlt
call
dec
jecxz
dec
das
enter
retf
stos
ja
retf
jle
dec
xchg
(bad)
and
sbb
xor
dec
sti
mov
jg
xchg
ret
mov
sbb
and
imul
out
sub
push
dec
jle
mov
adc
repnz
repz
and
ror
jbe
lds
outs
in
and
jmp
(bad)
mul
inc
cli
jmp
movs
pusha
xor
add
jecxz
ss
and
test
jb
or
adc
cmps
pop
data16
mov
ins
inc
dec
jecxz
sub
movs
fsubr
stos
xchg
mov
pushf
add
mov
loopne
in
fwait
xchg
mov
cmc
dec
lods
jae
mov
mov
mov
outs
pop
call
ins
stos
fisubr
fbstp
scas
mov
add
fbld
imul
stc
ret
ret
adc
xchg
test
cmps
call
iret
cmp
sbb
pushf
int
sbb
test
mov
test
out
adc
sub
loop
not
xchg
stos
out
repz
sbb
dec
cmp
enter
xor
jl
loopne
pop
sbb
cld
(bad)
cmp
adc
cwde
xchg
ins
sub
iret
jecxz
mov
adc
rcl
dec
pushf
aad
or
test
push
scas
aam
xchg
jmp
je
mov
jle
xchg
sbb
movs
pop
out
loopne
mov
or
jmp
mov
imul
cmp
dec
dec
xchg
mov
lea
js
and
clc
movs
stc
scas
jno
add
pop
xchg
lea
pop
outs
stos
pop
movs
jl
jnp
sbb
ret
jecxz
and
jnp
cmp
rol
pop
xor
and
pop
inc
movs
sbb
xchg
pop
sti
mov
add
sahf
rcl
cli
addr16
add
aam
je
lds
push
stc
dec
fmul
(bad)
push
stos
push
lods
ins
inc
ins
mov
sub
dec
mov
pop
ins
loope
in
and
push
mov
or
(bad)
jle
leave
fmulp
dec
sub
les
or
sete
in
sti
ins
jge
mov
cdq
mov
imul
sahf
push
xchg
adc
inc
in
fimul
jb
pushf
dec
pushf
leave
jo
ins
icebp
dec
pop
ror
cmp
mov
adc
aas
mov
test
adc
mov
int3
xchg
lods
push
xor
rcr
push
sub
movs
pusha
(bad)
cmc
aaa
aas
sub
pop
data16
cmp
mov
mov
cs
dec
inc
in
xor
mov
lds
mov
ss
pop
jp
add
mov
bound
push
mov
sub
stos
adc
fadd
jne
adc
iret
xchg
out
lahf
ja
xor
ds
dec
xor
add
inc
rcl
xchg
and
in
inc
dec
js
jp
ror
lods
dec
in
mov
test
in
dec
cmp
pop
sub
out
pop
mov
add
js
outs
push
popa
bound
mov
adc
scas
fwait
adc
lods
repnz
push
pop
sub
mov
xchg
jne
mov
adc
cwde
retf
push
int3
add
icebp
dec
idiv
xor
or
add
xor
std
and
fld
or
fwait
and
add
js
dec
sub
mov
cmps
mov
stos
dec
push
xor
loopne
inc
test
mov
lahf
sti
mov
(bad)
mov
stos
xlat
(bad)
cmc
pop
ficom
jmp
(bad)
xchg
daa
mov
das
xor
cmp
xchg
inc
iret
push
dec
jne
push
jge
xor
sti
fist
lea
jns
inc
scas
push
add
mov
xchg
movs
nop
loope
test
movs
cwde
or
sbb
mov
push
movs
or
mov
out
out
mov
inc
int
mov
pop
xor
movs
dec
and
ret
xchg
add
cmp
into
pop
cli
rcl
jmp
fsub
add
shl
(bad)
fwait
cwde
cmc
sbb
or
mov
sub
xor
ds
popf
test
(bad)
fldenv
(bad)
aas
jno
(bad)
xchg
push
xor
test
sbb
outs
aaa
push
cmp
cwde
xor
dec
test
adc
aad
pop
mov
adc
xchg
xchg
pop
cmps
mov
dec
movs
fs
jbe
(bad)
mov
std
or
push
aam
mov
push
es
xor
and
mov
out
mov
out
stos
dec
in
in
jae
jecxz
jns
fldcw
jo
shl
dec
and
adc
mov
pop
xlat
sub
outs
jmp
sahf
outs
push
test
and
xor
ja
es
ficom
adc
sahf
pop
xor
mov
popf
mov
sbb
inc
ja
sahf
sub
mov
int3
adc
xchg
movs
mov
cmovno
ins
cmp
mov
in
popa
aam
movs
jbe
inc
dec
mov
cmps
fimul
mov
dec
fst
stc
mov
std
test
adc
and
xchg
pop
mov
add
adc
hlt
mov
scas
push
in
dec
dec
nop
push
or
and
mov
test
dec
push
test
(bad)
cmc
mov
jle
test
jnp
push
fstp
movs
inc
ins
(bad)
aaa
lahf
mov
stos
mov
ja
mov
xchg
lds
jo
push
mov
arpl
psubusb
sub
add
or
fiadd
shr
scas
pop
or
inc
out
cwde
outs
dec
or
or
cmps
sub
mov
cmc
das
lea
sbb
stos
in
out
cmp
xor
or
popf
pusha
inc
xchg
movs
retf
call
lea
pop
aas
sbb
sub
jnp
stos
jbe
or
cmp
add
neg
and
cmp
pushf
fwait
loop
xchg
fisttp
je
xchg
fstp
xlat
and
push
test
jg
jecxz
push
xor
mov
call
xchg
and
ds
(bad)
enter
add
jecxz
jne
rcr
test
popa
push
sub
push
add
addr16
outs
loop
je
dec
sahf
pop
je
add
or
inc
gs
fdivrp
inc
ret
in
xlat
jnp
std
mov
xchg
adc
mov
inc
mov
(bad)
lds
adc
jbe
or
outs
jmp
test
fld
adc
mov
xlat
mov
xlat
xchg
and
and
sysexit
or
popf
fidivr
bound
mov
push
cld
jl
sub
jge
push
sbb
in
mov
add
sbb
dec
(bad)
mov
popa
test
(bad)
fnstcw
push
pop
mov
or
jecxz
cmc
mov
inc
dec
jbe
ret
xchg
jns
stos
rcr
jno
jle
ins
sub
jmp
leave
sbb
cmp
pop
add
test
mov
gs
fwait
nop
mov
arpl
jmp
push
add
outs
jae
hlt
loopne
nop
lahf
xchg
add
test
adc
cmp
cmp
xchg
jle
or
and
adc
lods
nop
push
jge
mov
in
lds
je
xor
or
xor
add
push
dec
adc
ss
int
dec
pusha
imul
dec
lds
jns
lods
dec
shr
sub
es
leave
retf
scas
(bad)
fsub
mov
adc
mov
or
and
sbb
inc
leave
cli
out
pop
jmp
ja
adc
into
pop
sbb
add
dec
cmc
sbb
push
jb
or
in
jno
pusha
or
jo
sbb
inc
mov
jo
cmp
xor
outs
daa
xchg
rep
sbb
pop
test
icebp
xchg
cmps
movs
pop
icebp
cwde
push
pop
or
adc
inc
mov
fldenv
cdq
jecxz
inc
int3
fidivr
mov
arpl
mov
icebp
adc
ror
lock
inc
ret
dec
pop
cmp
add
add
sti
inc
dec
call
je
or
jp
scas
jb
popa
push
sub
or
jp
pop
in
arpl
xchg
loope
sub
rcr
gs
mov
or
jns
mov
gs
repz
pusha
jmp
xor
dec
cmps
je
mov
mov
ins
xor
jb
mov
enter
retf
aam
cmps
aaa
jg
cmp
xor
or
aad
mov
outs
outs
aas
imul
stos
cwde
test
inc
mov
pop
lea
(bad)
xor
aad
or
in
mov
int
pop
or
ret
test
pop
fcmovnu
imul
adc
and
xor
mov
or
out
popa
sar
mov
hlt
ret
dec
jecxz
ss
stos
xchg
mov
inc
in
adc
jb
lea
pop
scas
cmp
mov
(bad)
es
popf
add
ins
in
inc
out
push
dec
sub
mov
mov
or
aas
lahf
loopne
xchg
or
fdivr
movs
or
mov
xchg
push
and
test
mov
cmp
mov
stos
mov
iret
and
bndldx
push
sbb
lods
lods
xor
fidiv
and
xor
aad
bound
adc
call
xor
push
add
loopne
(bad)
adc
or
es
push
mov
jecxz
cld
mov
dec
adc
lock
cmps
jge
popa
jmp
and
int
test
push
add
xchg
cmp
cwde
jns
test
in
dec
sbb
into
addr16
rol
jae
(bad)
ds
push
nop
cld
test
jl
jbe
push
xor
adc
pushf
and
fmul
mov
mov
or
cs
xor
add
scas
inc
mov
and
adc
into
in
jp
jns
push
sbb
push
xor
outs
call
imul
(bad)
sbb
mov
sub
imul
sub
push
out
mov
imul
lea
push
push
cmc
ins
imul
int3
aad
jnp
les
mov
mov
pop
dec
icebp
add
pop
fmul
cmps
xchg
mov
xor
and
cmc
rcl
cdq
(bad)
jecxz
cli
icebp
daa
and
faddp
xor
lock
inc
xor
pop
xor
scas
in
xor
movs
aaa
das
outs
loope
shl
popa
xlat
add
lods
add
mov
std
popa
cmp
fld
rol
or
cmp
dec
pop
mov
jno
mov
inc
aas
dec
ret
(bad)
inc
into
cmps
add
popa
and
jp
sub
adc
sbb
in
out
adc
push
fldcw
icebp
jmp
out
cdq
push
adc
popf
std
cmp
or
add
jl
nop
add
cmps
sub
pushf
mov
and
into
push
pop
add
mov
fstp
pusha
jo
jns
pop
repnz
bound
repz
jecxz
adc
std
fs
inc
pop
jno
dec
in
jge
mov
jbe
mov
sub
cmp
mov
adc
imul
push
or
les
daa
add
xchg
xchg
cld
push
sbb
ret
jne
scas
scas
push
xchg
jbe
mov
xchg
int
out
hlt
jg
fisttp
xchg
adc
popa
(bad)
jbe
iret
fidivr
xchg
test
sbb
iret
xchg
clc
aad
mov
push
ror
shl
push
pop
mov
mov
adc
mov
mov
mov
mov
rcr
jmp
fsub
ss
cmp
add
inc
cmps
xchg
aas
or
rcr
retf
setae
cs
loopne
int3
loopne
int
xlat
or
aad
pop
movlps
out
ss
push
loope
push
mov
mov
xchg
(bad)
jmp
mov
adc
pop
add
shl
push
imul
or
dec
pushf
add
mov
out
jl
dec
stc
mov
imul
sti
cmps
in
and
pusha
jns
mov
icebp
dec
(bad)
and
sub
mov
(bad)
iret
lahf
push
push
add
push
sbb
call
jo
aas
pop
scas
loop
sbb
scas
pop
add
mov
outs
inc
and
jnp
loope
jp
sbb
lods
inc
data16
fcomp
shl
sti
inc
xchg
sub
xchg
nop
inc
or
cmp
ret
cld
xchg
clc
outs
ficomp
xor
cmp
xchg
frstor
push
call
xor
xor
(bad)
xor
add
jno
xlat
cmp
in
int
pusha
test
jo
stc
sub
mov
in
inc
xchg
loop
jo
cmp
cmp
push
dec
mov
ret
fwait
es
dec
jle
push
push
aas
mov
mov
ins
fbld
jmp
sbb
mov
mov
jns
xor
jge
lods
outs
inc
mov
std
mov
cmp
jmp
xor
push
in
sbb
fld
inc
push
(bad)
pop
add
cmp
movs
test
push
gs
cli
jae
gs
es
xor
and
nop
movs
mov
xchg
arpl
push
(bad)
clc
loope
xor
sub
add
pop
repz
lahf
sar
push
gs
repnz
pop
not
push
lods
fild
xchg
mov
adc
popa
packsswb
sti
fimul
sbb
div
mov
add
das
jecxz
add
movs
xlat
or
xlat
repz
pop
mov
dec
dec
es
mov
push
add
imul
xchg
bound
and
es
les
push
mov
retf
fild
cmp
mov
in
mov
jl
imul
je
xchg
rcl
cwde
jl
push
(bad)
cli
adc
(bad)
leave
cld
in
scas
sub
aad
shl
jl
add
adc
imul
inc
out
push
xor
(bad)
xchg
ja
and
loop
loope
jnp
out
mov
out
(bad)
xchg
enter
or
adc
aam
mov
fistp
(bad)
loopne
stos
and
or
test
sbb
retf
mov
xor
(bad)
out
xchg
sub
pop
xor
retf
xchg
fstp
jg
dec
jnp
pop
cmps
cdq
jmp
outs
or
cmp
push
test
gs
or
jbe
shl
jmp
leave
push
or
xchg
outs
call
into
jb
adc
test
out
daa
sti
retf
adc
inc
mov
cmp
mov
mov
in
call
sbb
test
jns
into
int3
stos
retf
call
ds
sub
mov
dec
(bad)
mov
in
jae
inc
or
push
sbb
xor
pushf
enter
add
jo
mov
jmp
out
mov
sbb
(bad)
js
into
dec
out
pop
aam
xor
in
sub
xor
cmps
push
sti
out
xor
sub
in
adc
mov
imul
jnp
inc
(bad)
mov
dec
pop
push
fild
aaa
xchg
lods
imul
xchg
sti
xlat
jp
aaa
std
xor
mov
repnz
test
sbb
dec
dec
xchg
test
mov
cmp
push
mov
(bad)
test
sar
xor
hlt
aaa
sahf
gs
push
dec
jmp
and
dec
mov
dec
aaa
jb
inc
pushf
mov
maxps
dec
mov
fisub
ins
xlat
mov
popf
daa
ret
stos
retf
mov
mov
pop
push
in
inc
scas
cld
adc
jnp
(bad)
push
(bad)
ret
clc
xchg
mov
xchg
fcmovne
push
jo
addr16
xor
mov
leave
es
cmp
lods
jecxz
or
repz
mov
(bad)
aas
adc
inc
cmp
in
out
pusha
mov
add
dec
pop
movs
cmp
test
xchg
aam
jg
stos
xlat
sar
ss
cs
mov
sbb
xor
cmp
xchg
xor
sub
arpl
sub
push
jns
mov
out
jns
fisub
sar
pop
(bad)
daa
call
sub
push
scas
aam
mov
js
adc
dec
pop
fnclex
inc
(bad)
sub
xchg
pusha
cdq
stos
push
in
mov
adc
repnz
pop
jge
push
(bad)
sbb
out
jae
cld
and
and
mov
or
out
adc
mov
mov
mov
test
jbe
js
xor
sbb
or
loope
ss
cli
push
adc
pop
adc
movs
jmp
jo
inc
movs
outs
push
ret
adc
dec
ret
dec
stc
jnp
(bad)
cmp
imul
lahf
ficom
adc
inc
mov
vmovshdup
cmp
outs
fwait
das
cmp
mov
mov
(bad)
mov
aas
std
add
popf
fbld
inc
(bad)
std
lock
gs
cli
mov
xchg
jne
addr16
push
sbb
or
xchg
fwait
pop
inc
push
inc
scas
mov
jno
mov
or
test
sbb
test
mov
call
fsub
mov
repz
push
sbb
test
or
outs
sub
or
enter
and
add
xchg
dec
shl
xor
jp
out
jmp
movs
dec
sbb
sub
into
pop
mov
pop
pusha
jp
mov
sbb
push
popa
movs
rol
cmp
daa
inc
dec
push
or
hlt
sbb
sub
sbb
lahf
leave
cdq
test
jge
(bad)
fdivr
fwait
hlt
lahf
or
adc
add
repz
lock
mov
push
or
dec
sub
faddp
sbb
xchg
adc
mov
and
shl
in
shl
push
mov
cmp
stos
mov
mov
repz
mov
retf
cmp
xchg
mov
fisubr
gs
jmp
(bad)
xor
mov
xor
sbb
adc
cdq
jl
sbb
xlat
jno
cmps
push
pop
sqrtps
cmps
stc
mov
hlt
jle
dec
imul
inc
ins
shr
cmp
mov
pop
retf
mov
scas
jge
and
mov
adc
xchg
ret
xor
inc
pop
ins
inc
jnp
mov
cli
mov
scas
xor
ret
sub
jnp
(bad)
adc
fwait
cwde
nop
cmp
push
test
daa
mov
repz
imul
ja
push
and
int3
mov
xor
std
loopne
dec
mov
daa
dec
fisub
in
push
iret
pop
cdq
pop
and
clc
(bad)
push
pop
mov
adc
and
inc
mov
push
xchg
mov
jbe
icebp
inc
inc
pop
or
cwde
xchg
or
inc
sbb
inc
xlat
push
ss
push
cmp
dec
test
call
mov
bound
fsubr
xchg
sub
cmp
imul
cmps
adc
shl
or
xor
jg
adc
jae
aas
jb
mov
sahf
lods
(bad)
outs
xchg
scas
ffreep
pop
in
mov
pop
aas
jge
rcr
cmps
lea
out
mov
scas
lods
mov
jo
leave
nop
lea
dec
out
clc
nop
xor
push
or
dec
outs
pop
add
es
mov
std
inc
pop
sbb
nop
loop
push
ja
ins
mov
loop
call
scas
in
cmp
out
es
jno
xchg
popf
jmp
xchg
dec
adc
mov
jae
add
push
xchg
xor
pop
pop
sbb
outs
ss
sub
push
leave
mov
sahf
push
fucom
dec
loope
sbb
in
sub
stc
loop
and
inc
xchg
cwde
into
out
push
test
jmp
sub
inc
sbb
out
loop
add
mov
lods
loopne
sub
in
iret
xchg
cli
adc
push
xchg
inc
sub
popa
sub
rcr
test
and
stos
jnp
mov
adc
imul
call
(bad)
or
mov
repz
fsub
adc
dec
in
pop
sar
test
mov
pop
jmp
jns
and
rcr
rcr
iret
lea
push
cmp
std
sbb
ins
popa
add
gs
arpl
or
repnz
fwait
xchg
sub
cmp
sahf
sbb
mov
(bad)
mov
(bad)
lods
ss
scas
aaa
cdq
mov
leave
dec
sar
cmp
ret
pop
lods
stos
dec
lods
lods
leave
jb
fiadd
imul
pop
or
mov
jmp
inc
fdivr
and
push
lock
mov
pop
test
in
dec
sti
xor
pop
fcmove
jns
movs
adc
outs
sbb
ins
mov
mov
xlat
pop
ja
inc
mov
sbb
mov
inc
aaa
jns
push
pop
cmps
xchg
loop
mov
sub
push
add
fiadd
mov
push
push
mov
pushf
xor
sub
sbb
push
inc
outs
retf
jne
cmp
inc
xor
sbb
jnp
rcl
out
fucomp
push
std
(bad)
and
adc
xchg
loopne
sub
sbb
sbb
(bad)
pop
retf
gs
jecxz
or
jmp
dec
sbb
dec
pop
sub
aam
js
dec
into
push
aas
adc
xlat
mov
adc
scas
push
jno
pop
inc
and
js
mov
xor
mov
mov
dec
aam
ins
adc
pop
mov
pop
repnz
pop
out
cmps
popa
jne
jmp
push
test
xor
mov
push
sub
mov
jmp
loop
pop
lock
fidiv
xor
fistp
jns
mov
jae
sti
pop
fsub
(bad)
and
leave
fisub
mov
mov
add
pushf
or
mov
repnz
arpl
jbe
arpl
fdivr
and
popf
jns
cmp
icebp
sar
lds
clc
push
sahf
mov
cs
ds
cmp
std
xchg
cmc
dec
out
xchg
or
rol
pop
lods
and
popf
cmp
retf
and
in
pop
leave
lods
out
imul
call
mov
lock
sub
push
call
enter
xor
sbb
xlat
es
xchg
sub
cwde
dec
xor
js
sbb
das
(bad)
mov
mov
cmps
loop
push
sbb
movs
loop
aam
cmp
pushf
ror
inc
push
pop
mov
cdq
xor
ret
mov
sub
movs
retf
push
cmps
loopne
fwait
mov
fwait
and
jns
xlat
xor
and
mov
pop
loope
cmp
push
fldcw
xchg
popa
inc
repz
into
imul
pop
pop
mov
aam
enter
jmp
add
cmp
jp
mov
dec
std
sbb
repz
shr
ins
pop
sub
mov
ret
xchg
cmp
js
add
or
mov
movs
cmp
jg
sub
adc
fisub
mov
sbb
sub
test
sbb
addr16
or
jns
inc
sbb
sbb
adc
loope
add
push
arpl
and
fcomp
xor
shr
sbb
jp
jmp
jmp
jns
mov
adc
shr
rcl
jbe
xor
in
mov
fisubr
test
test
fwait
pop
sbb
mov
repnz
xchg
push
cdq
or
or
adc
push
xchg
int
and
sti
shl
repnz
dec
cmp
jbe
popf
jno
sub
cmp
mov
fsubr
repnz
xchg
retf
inc
loope
inc
(bad)
jno
enter
xor
and
iret
add
xlat
(bad)
aas
nop
pop
arpl
push
rcl
shr
call
std
aad
enter
push
sbb
and
mov
mov
mov
arpl
dec
push
adc
stos
pop
retf
popf
hlt
sub
xchg
cli
sbb
test
push
ss
xchg
fdivr
sub
mov
cli
inc
out
pop
and
bndldx
iret
pop
jns
mov
pusha
data16
adc
or
icebp
out
pop
mov
jle
or
repnz
push
cli
mov
mov
pop
inc
sar
test
xchg
inc
repnz
inc
sbb
push
inc
in
js
push
out
fwait
pushf
adc
inc
add
mov
cs
out
adc
cs
out
xchg
stc
push
jo
out
cmp
jecxz
movs
cmps
add
lods
(bad)
fcmovnb
xor
sbb
pop
mov
popa
jae
push
out
outs
dec
adc
mov
jge
mov
loopne
test
mov
mov
pop
clc
enter
cmpxchg
fisttp
cmps
(bad)
mov
outs
xchg
add
mov
push
nop
sub
or
ret
sbb
out
gs
mov
push
jg
or
push
jbe
test
cmps
pop
mov
mov
ins
inc
or
mov
xchg
xor
retf
and
fcos
inc
mov
(bad)
pop
sbb
pop
add
dec
xor
into
jg
imul
int3
ror
push
mov
sbb
xor
js
xchg
mov
mov
cmc
pop
je
dec
(bad)
into
into
push
xchg
(bad)
out
or
lods
add
xor
jge
js
pop
loope
xchg
xor
add
sub
test
jno
add
mov
or
ds
add
pushf
dec
inc
cmps
sti
fsub
inc
and
mov
fld
mov
push
jg
je
mov
pop
push
cmc
pop
call
jge
mov
lods
repz
pop
adc
pop
and
mov
or
cmp
jmp
dec
int
dec
pop
call
stc
(bad)
sbb
or
pop
test
sbb
xor
and
pusha
push
ins
int3
pop
xor
adc
push
jns
pusha
dec
ds
mov
imul
sbb
xchg
lock
cmc
(bad)
jo
mov
jns
pop
call
xchg
add
fldenv
pop
fbld
jb
das
sub
neg
shr
aad
out
push
xchg
ss
cmp
mov
popa
(bad)
in
lods
and
mov
enter
cs
int3
mov
cmp
enter
mov
or
les
adc
fwait
loop
jg
add
les
xor
idiv
sbb
test
int3
mov
neg
pop
ins
std
js
rol
xchg
pop
pop
lahf
add
ret
xchg
je
outs
pusha
push
inc
fistp
int3
hlt
es
jmp
inc
mov
loope
bound
stc
stc
push
mov
xchg
inc
scas
sbb
ja
and
sub
loope
jmp
cmp
jle
icebp
hlt
mul
dec
jno
call
fstp
xor
sbb
imul
clc
mov
jnp
pusha
cli
dec
push
and
sub
cmp
mov
fadd
ds
adc
push
out
push
and
or
fist
adc
inc
push
mov
jb
inc
jbe
lea
dec
jbe
inc
cmc
sbb
sub
retf
inc
push
sub
jp
mov
cmp
add
call
jmp
adc
jmp
cdq
test
bound
push
sbb
pop
clc
push
lods
xor
pop
inc
in
sub
call
and
push
pop
scas
scas
icebp
loop
aad
cmp
leave
mov
xchg
in
push
(bad)
mov
mov
push
scas
mov
push
xchg
or
xchg
cs
push
jle
stc
mov
retf
int3
push
popf
scas
cld
fwait
or
xchg
cmps
xchg
add
and
aad
arpl
push
push
pusha
cwde
loop
xchg
dec
jle
push
out
in
cmp
jmp
xchg
inc
(bad)
in
mov
adc
xor
cmp
mov
nop
xor
in
test
lock
dec
movs
pushf
movs
int
imul
cmp
mov
mov
mov
xchg
jno
adc
adc
jmp
lahf
das
sub
cdq
fidivr
in
inc
adc
push
data16
and
in
cwde
mov
sub
gs
jb
rol
adc
mov
mov
sbb
mov
jne
mov
iret
je
mov
jle
cmps
mov
in
repnz
jnp
cmps
test
inc
jbe
stos
jle
inc
and
add
stc
mov
pop
pop
loope
movs
fist
neg
lea
rol
inc
and
sti
jmp
sub
sahf
outs
hlt
jecxz
add
xchg
out
cmps
xor
xchg
pop
(bad)
and
aaa
sub
xchg
lods
adc
mov
jno
adc
jle
pusha
push
cmc
aam
adc
fisub
imul
sbb
mov
stc
pop
jecxz
mov
test
js
sar
pop
out
movs
xchg
jle
push
pop
loop
mov
(bad)
imul
ins
sti
cmp
mov
add
pop
mov
jg
retf
mov
fs
add
or
loope
push
mov
imul
jbe
mov
nop
or
push
in
in
fldenv
dec
mov
and
xchg
sub
jb
push
jo
clc
jns
mov
and
stos
leave
jmp
not
aaa
cmps
and
bound
bound
or
xor
add
sub
pop
pop
mov
test
outs
mov
mov
sub
icebp
pop
push
jle
pop
cli
or
repnz
(bad)
sub
sbb
es
sub
cmp
(bad)
cmc
loopne
jmp
js
pop
xchg
es
add
dec
loopne
sti
shl
add
xor
retf
xchg
xor
retf
mov
inc
lods
pop
xchg
fnsetpm(287
and
les
xor
lds
cli
inc
sti
mov
dec
(bad)
movs
sub
fs
dec
hlt
mov
xor
pop
jl
scas
jns
call
fwait
enter
dec
sbb
icebp
cmp
xor
or
cmp
scas
push
call
adc
mov
xchg
retf
jge
(bad)
xchg
inc
fisttp
in
fwait
shl
pusha
cmps
jg
xchg
mov
sub
faddp
and
scas
xlat
in
and
rcr
sti
dec
pop
xor
pop
out
xchg
outs
xor
pop
loope
cli
or
xchg
popf
fidiv
jle
lea
in
test
in
pop
mov
mov
aaa
cmp
cmps
popf
inc
(bad)
mov
(bad)
pop
inc
push
loop
mov
and
sub
pushf
or
pop
pop
jae
test
sub
mov
or
cld
ficom
adc
shl
scas
add
(bad)
cmp
mov
mov
mov
inc
dec
retf
ret
mov
jg
stos
sti
add
jle
pop
cmp
mov
add
leave
sub
pop
test
dec
call
dec
shl
div
stc
cmc
sub
jecxz
xor
mov
pop
fcom
enter
ja
mov
mov
pop
imul
inc
sbb
push
mov
mov
jns
and
push
enter
movaps
arpl
dec
repz
push
in
outs
cmp
jecxz
dec
fs
out
stc
and
xor
repz
repz
xchg
sub
rcr
std
sub
ins
std
push
std
jmp
int
pop
dec
inc
jbe
dec
rol
bound
movs
mov
adc
mov
cwde
and
xchg
dec
scas
sub
ss
push
jg
cmc
adc
pop
rol
adc
arpl
jo
sbb
mov
xor
es
cmp
cmp
xchg
xor
outs
xchg
pop
inc
push
cmp
sbb
neg
mov
fisubr
fistp
pop
lahf
rol
xchg
ret
call
push
outs
sbb
(bad)
adc
sub
pop
inc
pop
sbb
out
in
pop
popf
push
or
(bad)
lds
and
fcmovnu
mov
das
jecxz
pop
sub
mov
or
sub
idiv
mov
pop
xchg
mov
fwait
xchg
in
or
das
loopne
ins
cwde
in
enter
call
sti
add
cmp
sahf
les
push
icebp
mov
xchg
cmps
xchg
push
or
shl
js
retf
in
mov
out
cmc
fbld
or
ja
popa
sahf
inc
mov
push
mov
in
mov
jecxz
mov
stos
xor
ss
test
stos
fld1
pop
arpl
and
rcl
leave
imul
push
pusha
and
cs
in
mov
adc
sbb
inc
xchg
rcl
dec
mov
sbb
inc
jge
or
jmp
movs
push
mov
daa
inc
cmp
sbb
lock
push
sub
aas
adc
inc
or
psadbw
mov
bound
xor
push
inc
xchg
outs
shl
hlt
sbb
enter
retf
mov
(bad)
(bad)
sti
pop
in
jo
cmps
les
cmp
cmps
mov
out
outs
or
movs
ds
in
je
icebp
adc
sub
int3
test
out
cdq
repz
repz
rcl
mov
adc
fisub
pop
or
or
cli
icebp
inc
push
push
adc
jl
clc
fwait
inc
xor
rcr
add
popa
dec
sbb
in
jne
inc
push
sub
mov
in
mov
or
(bad)
lahf
adc
sub
fnstenv
and
xchg
push
jmp
mov
sti
(bad)
test
or
mul
ffree
je
and
dec
mov
aas
cmp
sub
leave
or
test
mov
fcmovbe
cwde
cwde
imul
mov
mov
fmul
jmp
and
fistp
test
fdiv
push
jp
dec
xchg
(bad)
pop
push
xor
lods
jecxz
jle
xor
pop
and
push
mov
cmps
mov
out
stos
dec
mov
lock
xor
ja
pop
out
std
std
mov
add
mov
xchg
out
leave
mov
lock
mov
test
mov
icebp
leave
lds
fwait
movq
pop
dec
xchg
std
cmc
enter
push
retf
fdivr
jb
lods
outs
mov
mov
ins
arpl
out
mov
scas
mov
dec
dec
das
or
hlt
daa
dec
retf
push
cmp
movs
imul
mov
sub
inc
sbb
push
xchg
dec
stc
mov
xor
ins
test
sub
out
frstor
mov
jbe
mov
popf
aam
fisttp
cmp
adc
daa
jns
fbld
and
arpl
adc
mov
cmps
or
cmp
dec
imul
mov
lock
(bad)
lds
pop
pop
push
stos
xor
push
ror
mov
aaa
std
pop
dec
mov
in
and
mov
cdq
pop
enter
push
xchg
and
loop
mov
or
jl
lods
test
cvtdq2ps
mov
lahf
sbb
call
cmc
mov
mov
fdivr
jbe
sbb
pusha
mov
jecxz
mov
xchg
fdivr
or
mov
lock
ret
test
adc
mov
jns
push
jecxz
xor
enter
out
sub
xlat
mov
ins
aad
into
inc
arpl
cli
test
push
addr16
inc
adc
push
shr
pop
push
shl
jp
push
mov
jle
dec
mov
sti
sbb
xchg
in
ror
mov
cmp
ds
das
clc
pop
dec
jge
test
jnp
mov
lods
scas
or
lods
lods
jnp
ret
xchg
adc
mov
mov
fist
movs
cli
dec
mov
mov
dec
out
inc
in
xor
pop
xor
je
imul
xor
fiadd
and
jns
js
inc
mov
mov
mov
stc
(bad)
(bad)
jmp
popf
and
jmp
cdq
retf
rcpps
(bad)
xchg
xor
push
mov
dec
int3
scas
sbb
push
pop
or
cmp
push
dec
rcr
push
and
das
jmp
jmp
mov
jp
arpl
ins
aam
jns
xchg
push
leave
pop
das
dec
loop
inc
cmp
cmp
je
ret
jnp
or
dec
push
and
jae
(bad)
pop
(bad)
imul
lock
sub
add
nop
inc
mov
xor
movs
in
mov
ror
inc
sub
pop
daa
push
xchg
cwde
int
adc
cmps
mov
js
dec
mov
xor
ror
out
(bad)
push
jle
sub
addr16
or
(bad)
scas
fdiv
push
outs
imul
js
add
xor
fmulp
adc
push
mov
inc
dec
sbb
scas
je
ret
sub
scas
dec
repnz
ss
sub
and
out
jbe
lods
cmps
loop
scas
mov
adc
loop
dec
or
dec
call
test
sbb
retf
jl
dec
mov
scas
call
xchg
mov
jge
hlt
xchg
call
pop
call
pop
leave
xchg
pop
stos
stos
mov
mov
icebp
in
stos
mov
mov
cmp
push
cld
das
sub
cmp
pop
jno
add
jb
cmp
cmps
sar
xchg
mov
sbb
imul
fwait
in
dec
test
xlat
push
fmul
jecxz
or
jmp
sbb
inc
xor
retf
or
cmps
jge
dec
aaa
jmp
cmps
(bad)
cmc
daa
aad
push
lods
jae
int
jo
dec
sbb
mov
adc
dec
out
xchg
das
test
enter
cmp
fist
je
dec
call
fwait
pop
jo
jle
test
loope
pop
mov
scas
aaa
arpl
enter
mov
sub
jmp
rcl
cmp
cs
pop
arpl
mov
jl
push
loope
push
pop
xor
test
bound
imul
inc
vsqrtpd
sahf
lahf
sub
add
mov
nop
mov
aad
(bad)
push
push
es
cdq
cwde
bound
bound
jno
ins
retf
add
cwde
cli
cmps
das
xchg
jmp
lock
loope
cmp
stos
out
(bad)
and
aad
pop
mov
mov
int
cmp
lds
inc
jg
retf
cmc
pop
sbb
inc
imul
cmp
mov
mov
cmp
icebp
or
xchg
adc
lahf
jmp
pop
enter
add
dec
or
out
out
mov
jo
int
in
push
sbb
es
add
xlat
jmp
loop
dec
fucomi
clc
fs
test
inc
sahf
inc
(bad)
hlt
fnstcw
xchg
and
mov
xchg
xchg
dec
jae
adc
int3
ret
div
xor
jg
add
mov
nop
in
imul
pusha
cwde
shl
test
ins
imul
retf
aad
pushf
adc
sub
or
inc
daa
mov
add
shl
mov
xor
lods
pushf
xchg
xor
cmc
hlt
xor
and
jmp
xchg
adc
cs
push
or
fisttp
jg
jno
(bad)
push
test
pushf
imul
pop
inc
leave
adc
mov
xchg
rcr
push
addr16
pop
rcr
in
push
pushf
pop
xchg
stos
sbb
adc
adc
cmps
cmc
(bad)
dec
nop
lods
or
pop
sbb
adc
cld
add
lock
lahf
push
push
mov
or
pop
or
fidiv
popf
and
add
xchg
add
sbb
push
enter
mov
(bad)
mov
fimul
shr
mov
loopne
sbb
and
push
pop
fs
push
mov
inc
inc
in
mov
dec
cdq
imul
xor
add
imul
sti
inc
cwde
test
lea
inc
jno
and
sbb
out
jb
xor
frstor
aad
adc
sub
out
mov
jne
in
dec
fwait
inc
mov
cdq
into
add
jmp
loope
retf
aad
sub
stc
imul
mov
adc
addr16
pop
je
and
pop
enter
mov
add
sbb
cwde
sbb
call
jmp
jno
pusha
inc
push
xchg
das
pop
sahf
scas
cs
mov
jns
mov
adc
retf
jle
mov
out
adc
push
std
aad
dec
add
(bad)
lea
and
mov
sbb
int
test
mov
jns
jmp
pop
mov
imul
push
iret
or
dec
cmp
mov
retf
sub
retf
add
ficomp
mov
cmp
jg
hlt
(bad)
aas
sub
sahf
xchg
and
iret
cmp
stc
inc
fbstp
mov
aas
cmp
mov
mov
xor
cmp
push
push
xor
push
in
out
pop
mov
scas
jmp
adc
(bad)
dec
pop
add
arpl
clc
rcl
mov
ret
sbb
sub
adc
inc
jg
mov
dec
jg
test
cwde
(bad)
xchg
push
push
or
inc
bound
mov
xor
inc
leave
sbb
adc
(bad)
xor
xchg
mov
out
mov
ins
sbb
xor
jno
and
imul
jg
aas
pop
mov
fst
cmp
push
sahf
jle
icebp
out
cmp
imul
xlat
push
ret
out
shr
adc
aaa
stos
push
inc
(bad)
xchg
ret
(bad)
int3
retf
fs
es
xchg
cmps
and
inc
or
adc
mov
(bad)
in
(bad)
push
push
jbe
jge
inc
fidiv
push
push
retf
sbb
rcr
jp
adc
ret
sahf
popf
and
xor
loop
retf
mov
pop
rol
sub
sub
lods
or
sbb
ja
mov
push
jl
jg
pop
sub
inc
rcr
sub
xor
aas
les
int
or
pop
rcl
push
add
adc
sub
(bad)
cmc
or
sbb
jns
int3
lahf
xor
test
cdq
ins
push
dec
aad
rol
cmp
mov
inc
sbb
lods
jle
arpl
dec
fcomp
sub
dec
mov
dec
into
or
retf
or
ja
loopne
pop
stc
icebp
pop
pop
out
sbb
das
jne
mov
jp
cdq
dec
(bad)
in
ins
mov
xor
enter
cmp
lahf
mov
leave
inc
or
push
aam
popf
sub
(bad)
in
dec
dec
(bad)
mov
sar
(bad)
jge
push
dec
(bad)
lock
inc
ror
xor
cmps
xor
mov
(bad)
dec
fs
les
out
mov
setnp
or
cmp
popa
ret
cwde
dec
lahf
sub
in
sbb
(bad)
aas
mov
push
mov
dec
xor
ins
loope
sub
inc
and
push
mov
aaa
sbb
xchg
adc
fdiv
mov
add
xchg
sub
out
addr16
(bad)
dec
pop
pop
aas
outs
popa
sbb
arpl
push
mov
sbb
pop
nop
mov
adc
add
aam
dec
sbb
ins
fst
ss
call
mov
xor
aas
cmp
shl
mov
in
dec
mov
movs
pop
sbb
add
jl
cld
(bad)
retf
xchg
out
dec
jns
pop
test
push
dec
scas
out
xor
or
(bad)
cwde
(bad)
icebp
and
cwde
(bad)
jge
popf
test
cmp
jmp
and
jp
push
stc
out
add
scas
not
inc
adc
adc
sbb
pushf
xor
ja
xor
popa
dec
cmps
jle
lea
in
jecxz
xor
inc
ret
rcl
fistp
loop
jbe
in
xchg
mov
or
ins
aam
push
sbb
rcr
cld
sub
into
cmps
clc
psubw
rol
adc
aaa
test
mov
push
icebp
outs
dec
test
aas
inc
pop
aam
add
mov
into
cmp
sbb
adc
mov
hlt
inc
push
xchg
dec
push
sbb
ret
ret
or
xchg
dec
jns
imul
sbb
jmp
add
(bad)
xchg
test
adc
dec
leave
cmp
and
lods
inc
sub
xchg
shl
or
fmul
retf
int
retf
aad
(bad)
jb
mov
int3
sub
fwait
cdq
push
add
cmps
dec
pop
pusha
mov
in
stos
add
clc
dec
call
jno
and
xor
test
rcr
dec
retf
push
scas
mov
lahf
retf
mov
jl
sahf
and
adc
cmc
jle
jno
mov
mov
pop
cmp
push
and
mov
jle
sbb
call
outs
xlat
into
das
jmp
test
fsubr
and
pop
call
cmp
and
fstp
shl
mov
daa
je
sub
dec
jnp
sahf
inc
cmp
pop
(bad)
aad
nop
repnz
mov
pop
jo
dec
loope
or
pusha
stos
mov
push
cmp
mov
mov
xchg
clc
in
or
xor
mov
dec
dec
inc
(bad)
scas
push
dec
and
sbb
and
out
cmp
call
mov
das
lahf
(bad)
scas
mov
mov
adc
call
out
mov
repz
test
sbb
in
out
test
sbb
inc
arpl
imul
sahf
retf
aad
mov
pop
xchg
pop
into
loope
xchg
fadd
outs
int
arpl
fist
movs
scas
(bad)
mov
test
xor
sub
mov
inc
fist
cmp
jmp
jmp
pop
dec
imul
les
scas
fldenv
and
push
add
pushf
and
lods
jbe
push
sti
neg
out
ret
dec
popa
adc
cld
js
lock
pop
out
sahf
dec
rcr
addr16
fcom
enter
sbb
xor
add
or
shl
add
pop
and
mov
test
push
pop
loope
mov
fistp
or
jmp
or
out
xor
mov
mov
push
iret
pop
dec
mov
xchg
cli
stos
cmp
(bad)
out
jne
enter
cmps
pushf
add
push
inc
test
pop
movs
jge
inc
rdmsr
xor
mov
inc
xor
sahf
fcmovnbe
inc
out
jne
mov
loopne
in
fdiv
cld
cmp
adc
or
mov
jmp
std
push
scas
lods
lea
jge
fwait
test
mov
int
xor
inc
mov
add
call
fisubr
iret
mov
fist
movs
jmp
mov
pop
js
and
pop
push
pusha
push
je
ret
dec
or
push
call
addr16
int
mov
out
push
and
pop
dec
enter
cmps
movs
add
jns
cdq
fcomp
add
and
push
and
fisttp
fisttp
cwde
push
lds
inc
xlat
test
clc
xchg
jl
rol
dec
sbb
xchg
aam
sbb
mov
mov
and
fdivr
fbstp
clc
adc
sub
enter
xchg
pop
xor
fwait
pushf
pop
sub
dec
mov
in
pushf
sti
add
sar
fucomi
mov
out
inc
out
lods
push
idiv
stos
sbb
and
nop
call
or
fisub
mov
cmp
shl
dec
inc
aaa
arpl
and
daa
xor
xlat
je
adc
sbb
and
in
cmps
inc
xor
fiadd
es
fild
pop
lahf
mov
push
push
cmps
inc
cwde
jae
int
lods
push
dec
in
out
popa
dec
sbb
fisubr
jle
jmp
push
xchg
adc
out
fiadd
sbb
push
xchg
lahf
dec
fwait
mov
fstp
sbb
cmc
add
lea
jne
(bad)
sbb
cld
push
cmp
cli
mov
loop
lds
loop
xchg
ret
std
cmp
nop
xchg
in
outs
dec
fldenv
cmps
and
jecxz
pusha
popf
icebp
imul
mov
mov
ins
and
(bad)
inc
add
xchg
loope
sti
clc
jmp
repnz
or
or
and
(bad)
loope
or
push
(bad)
cli
mov
or
dec
jb
ror
bt
(bad)
pop
push
inc
or
mov
cmp
push
sub
(bad)
stos
sub
mov
loope
xor
lock
nop
ret
call
mov
fwait
adc
jmp
inc
test
mov
mov
call
shl
mov
out
mov
dec
cli
cdq
movs
int
or
inc
xchg
pop
and
cmp
mov
in
mov
jb
fmulp
add
ja
aam
aam
jnp
ficomp
inc
inc
mov
mov
adc
add
mov
or
mov
mov
cld
mov
pop
fadd
(bad)
popa
cmc
push
push
mov
fisub
adc
adc
push
jne
push
inc
das
repz
sbb
test
int
inc
push
jmp
jmp
retf
sti
cld
rcr
sbb
or
xchg
fstp
nop
fs
in
or
loopne
or
cmps
mov
add
xor
icebp
scas
(bad)
icebp
or
lds
stos
inc
xlat
fild
pop
xor
or
mov
das
rol
lods
addr16
int
rcl
in
inc
mov
inc
mov
scas
push
push
dec
(bad)
rcl
add
ins
or
(bad)
mov
cmp
pusha
mov
fs
dec
sbb
add
pop
dec
ret
adc
into
idiv
jbe
push
add
mov
sbb
sbb
lock
xlat
jno
jmp
pmuludq
inc
popa
fxch
or
mov
adc
cmc
les
nop
push
icebp
mov
adc
hlt
push
data16
add
das
mov
test
xchg
inc
push
sbb
fmul
or
xchg
sbb
jecxz
ror
push
js
(bad)
sar
cwde
test
mov
ret
ds
or
xor
push
mov
jmp
push
and
cmc
hlt
push
inc
cs
mul
lods
lahf
mov
xchg
(bad)
xchg
mov
or
shl
ins
aaa
mov
das
aad
js
(bad)
mov
mov
pop
in
hlt
add
add
rcr
fst
or
pop
rcl
xor
cmps
sub
sub
adc
icebp
ret
pop
int
and
xor
pop
cld
mov
xchg
sub
daa
mov
cmp
cld
mov
mov
jecxz
pushf
jg
sbb
shr
jo
add
jle
into
mov
jne
fisttp
jns
cmps
ds
pop
out
dec
mov
inc
jp
add
lahf
shl
xor
add
clc
mov
test
mov
push
int3
inc
std
push
mov
mov
push
adc
push
dec
imul
(bad)
mov
test
loop
adc
or
(bad)
or
mov
pusha
mul
pop
aam
ret
jne
adc
ret
loop
jle
pushf
jl
(bad)
lods
or
pop
mov
inc
xchg
push
xor
or
sbb
dec
jo
push
lea
mov
mov
dec
pop
sbb
cli
dec
inc
outs
jo
inc
fsubr
lods
js
mov
mov
push
and
cmp
dec
aaa
mov
xlat
or
imul
pop
fisub
ins
jmp
mov
int3
push
sbb
jnp
dec
inc
xchg
aas
ret
xor
jo
mov
and
add
idiv
inc
jno
rol
lods
or
add
adc
mov
dec
js
arpl
dec
rol
psubb
jmp
stos
cmp
(bad)
popa
pusha
(bad)
nop
dec
xor
push
fisub
jge
mov
(bad)
xlat
add
mov
sub
fwait
scas
fwait
inc
jmp
jp
lahf
mov
mov
cwde
inc
jae
das
arpl
sub
outs
jmp
or
xor
push
sub
or
mov
shr
div
idiv
into
mov
outs
scas
jne
pop
popf
mov
or
xor
jecxz
mov
cmps
fmul
pop
je
push
xchg
(bad)
addr16
call
or
(bad)
sbb
mov
jmp
hlt
xchg
ins
mov
pushf
sbb
(bad)
loop
xchg
ret
or
sub
seta
sbb
call
dec
pop
mov
ins
push
or
xor
or
and
push
sbb
rep
inc
sti
cmp
cmps
or
(bad)
cmp
aaa
sbb
xor
pusha
lods
mov
movs
jl
daa
fst
mov
jne
push
pop
fcmovu
imul
repz
mov
sbb
or
sbb
push
or
mov
scas
vpsubb
jbe
test
adc
and
retf
xor
jmp
sub
fdecstp
dec
push
icebp
fwait
xor
loop
xchg
jl
jb
cmp
stos
mov
call
retf
mov
imul
es
cmp
ret
jmp
push
push
push
mov
sbb
ins
fwait
mov
nop
jno
push
cld
imul
stc
cmp
adc
movs
xchg
adc
push
inc
fwait
popa
push
rol
ret
jne
inc
bound
sar
cli
movs
mov
shl
mov
inc
test
and
or
in
shl
fdivr
pop
jns
cld
outs
inc
shl
out
sub
mov
das
mov
dec
adc
not
jae
mov
call
(bad)
aam
xchg
and
in
mov
icebp
popf
or
sub
pop
sbb
jo
mov
bound
push
(bad)
in
cli
aas
sub
fdivr
cld
mov
mov
(bad)
xor
push
imul
scas
pop
dec
scas
inc
jmp
or
xchg
push
clc
scas
shr
inc
xchg
xchg
mov
mov
jmp
add
push
sub
je
pop
jno
inc
sbb
popf
dec
das
cmp
xor
mov
arpl
aas
das
fwait
cmp
mov
add
cld
jno
addr16
sub
jbe
arpl
test
mov
imul
daa
sub
cmp
cmp
mov
xchg
movs
jmp
outs
cmp
dec
push
ret
cmp
xchg
xor
mov
dec
xor
adc
xor
sti
mov
mov
cmp
out
mov
and
bound
mov
jo
mov
stos
shl
dec
jo
pushf
dec
push
inc
dec
push
jl
jb
xor
and
lea
mov
bound
test
and
push
inc
dec
mov
ret
sbb
retf
cld
push
mov
dec
in
loop
xor
push
cmp
jmp
cmp
jbe
cs
sahf
js
cli
mov
int
test
fst
lds
std
pcmpgtd
aaa
xchg
ja
push
or
xchg
mov
or
inc
pop
sub
inc
mov
sub
or
ds
(bad)
jbe
icebp
dec
cmp
outs
jmp
arpl
test
pop
outs
mov
mov
hlt
shl
sahf
pop
add
fbstp
mov
mov
push
loop
jo
sahf
sbb
clc
push
adc
aam
sbb
loopne
pop
ss
xchg
mov
nop
xor
mov
arpl
xor
adc
add
mov
into
jg
repnz
cmp
inc
rol
mov
sbb
xchg
repnz
dec
mov
in
outs
xor
outs
fsubp
stc
inc
in
pop
fist
xlat
and
outs
mov
lahf
scas
aas
sbb
std
or
sub
sub
sub
pop
xchg
cwde
leave
repnz
and
shr
and
or
lods
dec
adc
popf
pop
ins
movs
jmp
ss
(bad)
mov
ret
cmp
mov
jns
jb
scas
pusha
xor
pop
xchg
ret
push
adc
out
rcr
add
and
pop
mov
jecxz
add
dec
or
push
cmps
lea
fsubr
in
add
xchg
mov
mov
jmp
adc
jo
lds
pop
pusha
movs
loop
out
xor
test
mov
inc
mov
in
fdivr
mov
icebp
(bad)
outs
loope
es
mov
jae
cmps
mov
data16
repnz
dec
ins
ss
pop
add
dec
add
mov
fadd
adc
pop
pop
ins
imul
out
stos
cmc
loopne
xchg
ins
add
mov
cmps
test
fldenv
std
je
(bad)
adc
jno
jl
mov
pusha
jo
inc
jle
pop
in
ja
rcr
dec
or
fiadd
push
mov
(bad)
xchg
out
cld
cs
pop
xchg
(bad)
ins
cmps
test
ficom
cmp
sar
loop
loope
xor
push
sbb
out
pusha
mov
mov
hlt
inc
xlat
fidiv
out
inc
xor
in
xchg
xchg
mov
loope
aas
mov
sub
clc
push
enter
adc
fnstenv
cld
pop
pop
shr
push
rcl
aad
pop
mov
cmp
adc
cmc
add
test
pop
mov
inc
retf
xchg
jbe
mov
xchg
mov
and
jne
pop
mov
push
inc
out
gs
xchg
mov
jmp
add
xor
adc
sub
xchg
hlt
adc
xlat
das
and
mov
in
rcr
fldenv
repnz
xor
push
daa
inc
jge
imul
xchg
cli
cmc
sbb
idiv
and
les
rcr
(bad)
dec
clc
push
xor
inc
movs
push
mov
push
inc
out
bound
fs
int
mov
jle
jecxz
xchg
jmp
xor
push
das
jb
ret
push
lds
pop
mov
mov
add
add
cdq
aam
repnz
in
mov
test
or
jge
xchg
(bad)
bound
scas
int3
sub
sub
or
sbb
fwait
xchg
add
cmp
push
fimul
cmps
dec
pop
rcr
ss
ret
fisubr
in
or
cld
or
lock
dec
xchg
sahf
or
loop
mov
and
mov
adc
push
or
xor
pop
nop
and
push
les
xchg
test
(bad)
push
out
sub
jmp
test
fdiv
call
inc
loopne
add
retf
lahf
adc
pop
(bad)
repnz
bound
movs
xchg
adc
dec
or
pop
test
icebp
mov
ds
dec
or
jae
js
aas
repz
jp
leave
push
das
jbe
std
mov
add
dec
popa
jb
(bad)
daa
or
movs
fimul
lds
hlt
cmps
scas
add
clc
add
(bad)
fnsave
pop
push
push
(bad)
xor
ins
mov
movs
pop
popf
daa
or
aam
ret
out
call
push
and
mov
push
or
das
ret
sbb
je
hlt
lea
daa
pop
inc
inc
lea
lods
imul
jmp
iret
and
nop
pop
and
sub
aas
push
add
cwde
adc
jmp
nop
sbb
lods
les
pushf
push
adc
mov
jmp
pop
popf
test
push
clc
cdq
jae
pusha
push
xchg
mov
lds
lods
adc
ficom
mov
jnp
lds
rcr
mov
dec
ret
imul
in
add
fs
inc
adc
pop
jle
mov
push
in
push
test
xchg
rcr
mov
inc
and
out
push
dec
push
or
push
jge
or
dec
test
xchg
and
mov
jno
sub
popa
test
cmp
xchg
jle
lds
sub
sbb
and
sbb
sbb
mov
fisttp
call
and
push
pop
push
mov
fs
addr16
push
icebp
sti
pop
mov
popf
cmc
pushf
inc
adc
(bad)
iret
retf
stc
and
pop
rcr
leave
aam
scas
ss
shl
push
pop
retf
mov
mov
jbe
xor
outs
hlt
jbe
or
fisub
push
ins
adc
sub
ret
imul
push
nop
(bad)
shl
mov
into
test
pushf
jle
pop
mov
retf
ds
stos
sub
repz
add
shr
fsub
mov
das
push
adc
inc
jecxz
dec
cmps
add
cmp
pop
call
xor
mov
lock
xchg
test
fisttp
jb
pop
jmp
push
out
mov
retf
popa
scas
pop
sub
aad
push
jp
dec
leave
pop
or
icebp
inc
div
cmp
mov
xor
cmp
push
(bad)
stc
int
rcl
movs
cli
adc
mov
lock
jg
loope
sbb
sbb
jp
movs
(bad)
ja
iret
sub
jns
mov
add
push
retf
pusha
sub
pop
pop
clc
inc
xchg
clc
xor
test
dec
xchg
cld
pop
push
leave
jecxz
(bad)
push
std
mov
leave
xchg
xlat
jns
in
aas
addr16
shl
adc
sysenter
fisub
jbe
mov
fwait
rcr
xchg
div
pop
push
push
cmp
(bad)
loop
sbb
icebp
sbb
sbb
rcl
push
and
push
xchg
sar
rol
xchg
gs
add
dec
fist
ror
lea
or
mov
adc
into
dec
loop
(bad)
cs
mov
dec
ret
popf
cmp
xchg
jbe
cmps
mov
sbb
out
ret
jmp
mov
(bad)
mov
aad
shl
retf
mov
stc
mov
scas
stos
mov
test
sbb
cmp
sbb
xchg
xchg
inc
repz
pop
jge
inc
push
push
add
mov
mov
rcr
mov
jmp
sahf
cmps
lahf
xor
(bad)
outs
dec
popa
in
cmp
dec
and
ss
jno
loope
push
pop
cs
in
mov
sub
daa
dec
and
cmps
call
mov
outs
dec
arpl
fdiv
outs
stos
adc
cmp
sbb
out
stos
call
jnp
loope
je
mov
mov
xor
fwait
jns
pop
test
fstp
pusha
mov
inc
outs
mov
les
fnsave
lods
cmp
jno
outs
sub
sbb
push
add
in
retf
adc
mov
popf
loope
jp
out
aas
fs
sub
icebp
rol
xor
sub
push
mov
test
xor
dec
clc
imul
shl
add
push
(bad)
loopne
rcl
aaa
test
ins
mov
test
pop
dec
mov
cwde
pop
gs
retf
es
add
dec
sub
xchg
xchg
imul
imul
out
push
lea
aam
cdq
and
pop
sbb
mov
fisttp
and
pop
fwait
(bad)
mov
mov
adc
(bad)
sbb
stc
out
ja
pop
push
push
stos
ror
xchg
or
inc
lock
movs
dec
cwde
push
or
dec
enter
mov
sahf
xchg
pop
and
sub
in
adc
ja
lea
es
repz
mov
push
jg
lds
(bad)
adc
ds
aas
ins
cmp
jmp
cmc
push
in
jno
sti
xchg
xchg
in
xchg
lods
out
mov
call
xchg
sbb
int3
sub
and
cmc
cmp
(bad)
adc
test
mov
add
mov
mov
lahf
sbb
call
push
add
fwait
sbb
or
xor
test
test
not
(bad)
ins
in
cmp
stc
pop
xor
adc
sar
mov
cli
or
sbb
mov
add
aas
shr
push
cmp
push
and
jg
sar
ins
jae
cmp
sub
loopne
jle
add
out
sbb
dec
stc
mov
fisub
xchg
mov
add
ins
dec
cld
bound
movs
mov
(bad)
loopne
ret
iret
sub
mov
outs
popf
lock
mov
jmp
mov
inc
call
sahf
adc
lea
fidiv
es
fld
imul
les
push
push
popf
mov
cli
mov
mov
jp
dec
pop
mov
jmp
inc
push
mov
adc
push
push
mov
in
jg
int3
nop
jb
jg
push
movs
mov
adc
stc
push
lahf
push
jl
mov
pop
dec
inc
and
mov
(bad)
call
jns
jo
fbstp
dec
sti
lea
mov
cmp
xchg
test
inc
dec
add
inc
mov
xor
jle
mov
xchg
retf
popa
add
fsub
(bad)
cmc
sbb
ja
sub
push
ins
pop
outs
(bad)
pushf
clc
sub
mov
mov
pop
adc
and
lds
imul
gs
cmp
clc
push
jp
(bad)
push
adc
hlt
sub
mov
pop
aaa
test
les
push
jmp
popf
sar
pusha
movs
jo
push
cmp
inc
push
xor
push
adc
adc
xlat
cs
not
push
cld
shl
cwde
inc
add
pop
push
mov
popf
xor
inc
pop
mov
loope
(bad)
cmp
aaa
inc
shr
add
or
add
xchg
add
and
dec
pop
sar
ss
jbe
add
mov
pushf
mov
ds
cmps
cmp
or
stc
inc
xlat
and
push
xchg
cmp
cs
mov
(bad)
fmul
cmps
cwde
sbb
(bad)
mov
cmps
xchg
pop
pop
cmp
dec
fcmove
fs
mov
retf
sub
aam
sub
pop
mov
stos
pop
loopne
xor
mov
mov
push
push
cs
outs
loopne
sahf
mov
cdq
xlat
ret
jne
adc
mov
pop
push
call
loop
sub
mov
xchg
dec
ret
dec
sbb
mov
pusha
jno
xor
daa
fild
mov
rcr
movs
mov
icebp
and
jno
xlat
rcr
sbb
xlat
dec
xor
aad
pushf
cli
lods
lock
mov
or
imul
fstp
stos
(bad)
iret
js
aad
cmp
mov
shl
inc
cmp
jbe
ret
xor
loopne
pop
movs
and
inc
mov
fisttp
in
cld
inc
mov
mov
mov
jae
jnp
test
stc
and
pop
mov
test
pop
adc
xchg
mov
pop
mov
mov
rol
fwait
test
icebp
push
repz
fdiv
lods
div
push
jne
ret
fnstcw
je
pop
sub
push
test
scas
inc
out
xchg
adc
iret
push
and
jmp
mov
jge
jp
cmp
mov
das
ror
cmps
fdiv
fisttp
push
dec
cmps
xor
adc
inc
inc
mov
ins
xchg
mov
mov
mov
dec
mov
or
ins
cli
mov
or
inc
sbb
and
out
jg
shr
sahf
aad
call
push
mov
int
xchg
jmp
ret
test
xor
jmp
cmp
ud1
pop
test
enter
ds
add
dec
ja
fdiv
mov
stos
(bad)
sub
ror
jg
dec
jp
inc
mov
mov
movs
iret
js
in
imul
adc
sbb
arpl
das
push
repz
mov
xchg
pop
inc
(bad)
into
xor
ret
mov
adc
cmp
aas
pop
xor
dec
inc
ja
jp
loope
add
jmp
pop
inc
xchg
shl
jmp
test
mov
and
loope
aam
jecxz
fucomi
scas
out
aad
cs
in
cmp
fwait
adc
cdq
xchg
es
pushf
sub
clc
dec
add
mov
lea
mov
and
and
mov
push
cdq
pop
mov
cmp
jb
and
push
dec
movs
aas
fs
in
scas
fidivr
mov
lds
enter
pop
and
jl
ja
aad
test
(bad)
sub
adc
(bad)
in
adc
sti
rol
cmp
dec
mov
xor
repz
repz
daa
das
add
sbb
add
jecxz
iret
adc
ja
ret
mov
xchg
pop
in
fcomp
pop
pop
fwait
jno
imul
cmps
(bad)
jl
ret
cmp
and
movs
add
mov
dec
fld
cmp
ret
inc
and
lock
or
pop
pop
mov
gs
cmc
aaa
es
push
xor
mov
ret
loop
enter
ins
sar
dec
sub
lods
cmp
xchg
sbb
cmovo
lea
mov
mov
lods
stc
mov
xor
stc
adc
cmp
stc
call
inc
sub
lods
pop
xchg
(bad)
mov
jmp
and
add
sub
mov
jecxz
xor
(bad)
xor
mov
mov
push
sbb
pop
outs
mov
and
sub
scas
sbb
pop
adc
mov
mov
in
push
adc
xchg
ins
cmp
repnz
ja
inc
dec
adc
test
inc
cld
std
rcr
call
inc
lds
xlat
add
pusha
test
scas
hlt
out
sub
scas
push
dec
bound
jns
pop
into
push
mov
into
sbb
les
dec
or
inc
cmc
xor
icebp
cmp
stc
data16
mov
movs
les
out
dec
test
loop
imul
scas
inc
fdiv
sar
push
jmp
pop
outs
test
enter
fcomp
icebp
xor
in
push
inc
xorps
fldcw
mov
or
in
movs
jg
int
in
cwde
sar
mov
addr16
retf
cmps
(bad)
adc
xchg
ja
fimul
test
or
shl
jmp
repz
es
mov
mov
sbb
xor
cld
call
ret
out
fcmovnu
lahf
cwde
mov
mov
rcl
inc
add
(bad)
sub
out
mov
jecxz
popf
(bad)
ftst
mov
add
mov
jbe
addr16
jmp
sar
or
pop
test
stos
and
int
cmps
cmp
inc
pusha
inc
ss
leave
pop
mov
adc
pop
in
sbb
adc
dec
test
lods
addr16
inc
rcr
int
(bad)
jbe
movntps
pop
dec
lahf
sbb
xchg
imul
or
lock
ret
imul
sub
add
stc
mov
push
imul
dec
mov
std
lods
clc
js
inc
vmread
in
dec
or
outs
out
pop
test
cmp
in
mov
jbe
pop
stos
add
and
scas
out
inc
call
push
aad
dec
cwde
pop
icebp
outs
call
mov
sbb
or
sbb
cmps
cwde
lea
in
cld
in
sub
loop
pop
push
cmp
and
loopne
inc
sub
out
les
xor
push
ds
jno
je
gs
data16
pop
jp
bound
ds
mov
test
mov
mov
adc
out
add
stos
mov
(bad)
xor
adc
push
mov
mov
or
in
adc
jge
and
and
or
and
mov
cmp
push
outs
lea
push
mov
jle
bound
pop
mov
mov
das
leave
pop
push
or
mov
sub
mov
test
int
rol
ja
fisub
adc
or
scas
mov
daa
sbb
in
push
std
jb
mov
test
cmps
lods
inc
jno
pop
cmps
push
stos
jg
in
adc
push
sbb
lea
jne
(bad)
ficom
mov
cmps
adc
cdq
out
pushf
or
stos
gs
mov
push
push
jmp
adc
lock
test
add
lods
stos
repnz
sub
cdq
mov
(bad)
shr
outs
xor
sub
in
mov
jecxz
push
inc
dec
imul
or
out
mov
inc
and
push
fisubr
daa
mov
pop
pop
adc
call
popa
inc
int
dec
repz
pop
movs
(bad)
ror
(bad)
(bad)
dec
lods
outs
jno
jl
jge
arpl
iret
sub
inc
cmps
out
in
lock
mov
add
cli
cmps
(bad)
repz
mov
imul
ror
int
sar
mov
mov
and
xchg
loope
or
out
test
add
scas
xor
xchg
pop
enter
je
jge
cmp
mov
movs
add
xchg
push
stos
(bad)
cmp
cmp
repnz
retf
adc
(bad)
fdivr
into
dec
dec
loop
cwde
popf
mov
inc
mov
mov
cli
inc
aaa
pop
outs
pop
cmps
outs
jns
call
mov
adc
mov
mov
test
aam
dec
test
sub
cmp
adc
bound
icebp
mov
arpl
out
xchg
shr
push
dec
mov
fmulp
add
adc
dec
(bad)
fist
mov
popf
pop
clc
or
leave
int
cmp
push
nop
push
pop
pop
lods
fadd
sahf
(bad)
sbb
or
sbb
test
test
loope
mov
fwait
mov
aad
cmp
(bad)
xor
sbb
outs
fs
shr
ret
push
mov
int
imul
(bad)
fsub
adc
(bad)
fsubr
or
sub
jg
add
ss
popw
int3
mov
sbb
mov
outs
push
mov
push
adc
dec
push
add
add
loop
mov
dec
dec
and
out
mov
fcmovu
add
dec
cmp
rol
aad
mov
fwait
sbb
sbb
and
in
mov
push
cmp
jbe
or
sbb
pop
or
sub
or
mov
stos
jge
jbe
or
push
dec
cwde
jmp
adc
shr
sahf
je
mov
dec
into
and
mov
xor
test
mov
inc
clc
push
pop
adc
cdq
(bad)
mov
call
adc
out
add
and
add
loopne
out
xlat
popa
(bad)
fldenv
pop
rcl
push
mov
sub
fs
push
mov
mov
and
xchg
icebp
(bad)
mov
aaa
jg
xchg
push
cdq
dec
push
mov
aaa
push
retf
pop
cmp
push
cmps
dec
push
mov
sub
push
jmp
inc
sub
and
inc
add
xor
cmp
imul
jle
fisub
jle
mov
ret
cwde
jmp
div
pop
lds
jnp
cmp
ret
scas
(bad)
loope
push
push
out
sub
call
aas
mov
popa
fnsave
in
loopne
aam
in
xchg
xchg
sti
aaa
push
(bad)
pop
jle
inc
inc
jnp
cld
addr16
inc
mov
and
out
xchg
and
push
movs
scas
xor
mov
xchg
inc
jg
jl
popa
sub
xchg
out
adc
mov
call
inc
mov
xor
imul
ds
cli
dec
sbb
fstp
mov
rcl
mov
hlt
ds
pop
(bad)
out
les
mov
inc
pop
sar
jmp
pop
mov
repz
stos
pop
les
add
bound
dec
mov
mov
xchg
call
cld
mov
jmp
scas
xchg
inc
add
and
rep
out
in
fstp
cmc
mov
or
test
pop
pop
je
dec
jbe
inc
scas
movs
loope
cmps
add
in
mov
pop
cmp
imul
mov
xchg
mov
retf
iret
and
adc
mov
repnz
xchg
pop
inc
sub
cmps
jecxz
mov
push
ins
fild
inc
sub
cmp
test
sbb
jnp
jg
sbb
dec
sbb
pop
outs
jmp
jl
pop
out
adc
imul
jnp
repz
jo
jecxz
leave
rcl
and
jp
cmp
or
inc
daa
jle
repnz
in
sub
out
adc
pop
clc
cmc
xchg
imul
cmp
mov
dec
add
in
mov
sbb
jb
pop
adc
mov
cmp
mov
stos
ret
dec
xchg
pushf
mov
add
sbb
inc
jne
(bad)
std
test
fidivr
movs
in
aad
xchg
push
ret
adc
dec
in
cmp
(bad)
fcmovb
std
and
std
imul
into
hlt
jp
or
int3
mov
sub
arpl
(bad)
(bad)
dec
xchg
cmp
pop
pop
sub
std
dec
xchg
daa
jne
jnp
xchg
loope
shl
mov
les
pop
ja
mov
inc
nop
xchg
imul
cmp
paddd
cs
mov
je
fwait
xchg
std
cli
fdivr
and
push
adc
and
jnp
jecxz
(bad)
or
push
sub
lds
sub
mov
int
js
mov
add
loope
movs
repnz
add
in
dec
mov
fwait
adc
sub
xor
or
or
sbb
xor
push
cmp
cmc
mov
aaa
sbb
mov
(bad)
scas
clc
(bad)
(bad)
inc
ret
out
ja
and
stc
jbe
test
leave
jae
cmc
shl
sti
cmp
add
call
adc
or
nop
cdq
ins
mov
shl
xor
adc
pop
add
jmp
aas
inc
adc
fnstsw
fmul
jae
sbb
repnz
inc
test
es
fstp
cmp
aaa
int3
jae
mov
(bad)
lahf
inc
adc
adc
test
adc
in
int3
xchg
jmp
fs
sub
and
sbb
and
push
xchg
mov
mov
ror
stos
pop
popa
mov
ret
mov
test
cmp
mov
and
or
das
jle
dec
mov
or
cdq
(bad)
lock
and
test
rcl
adc
pop
pop
or
addr16
sub
push
or
dec
adc
sub
ret
jne
xchg
jp
jnp
mov
inc
add
adc
das
cmc
out
lock
xchg
jge
mov
dec
jbe
test
inc
sbb
mov
or
jg
adc
cs
imul
pop
cmps
jo
pop
or
ror
jo
mov
mov
aas
mov
scas
not
mov
xlat
rol
ds
mov
lods
in
sbb
push
cmps
daa
sti
ret
xor
mov
(bad)
pop
and
test
aas
stos
pusha
(bad)
adc
shl
pop
bound
lods
sbb
mov
jg
dec
(bad)
test
cmp
movs
or
push
ret
movs
and
jmp
mov
adc
(bad)
leave
add
cmc
int
outs
clc
stos
test
jmp
or
cmp
jecxz
out
test
inc
stos
mov
mov
dec
or
sub
loopne
mov
outs
js
mov
or
xchg
sbb
inc
push
jo
(bad)
popf
inc
add
(bad)
fild
ins
iret
push
cdq
adc
adc
aaa
jge
call
cmp
inc
mov
sbb
or
xchg
mov
xchg
stos
popf
push
inc
push
xchg
sub
mov
jl
cmp
dec
in
dec
jp
mov
and
in
sub
jge
stos
rcr
cmp
mov
mov
sub
xchg
les
les
dec
movs
imul
sbb
pop
xchg
(bad)
pop
jns
scas
in
cmps
aad
push
mov
jb
test
iret
jo
jbe
(bad)
mov
je
dec
cmc
pushw
inc
mov
sbb
jo
ret
xchg
or
sbb
adc
out
or
into
das
sub
xchg
ins
mov
mov
loop
dec
js
dec
inc
stos
inc
fcmovbe
cmp
sub
push
lahf
xchg
pop
and
inc
add
div
inc
xchg
and
pop
shr
out
jae
lds
stos
stos
and
pslld
retf
xchg
popa
clc
mov
pop
xchg
(bad)
aam
fcmove
mov
xor
cmp
in
add
adc
test
add
(bad)
out
shl
ja
loopne
mov
xor
and
cmp
mov
das
add
fs
add
add
and
push
mov
int
shl
jmp
lds
js
inc
icebp
aad
scas
pop
adc
les
(bad)
cmps
push
push
mov
push
dec
cmp
add
fdiv
and
xor
push
mov
cdq
cmp
std
or
bnd
sahf
push
adc
mov
dec
leave
inc
mov
mov
jns
inc
fnstenv
aaa
cmp
fs
xchg
and
or
jno
xrelease
ror
cs
fsubr
dec
mov
add
dec
mov
stos
aam
xchg
xchg
xchg
stc
mov
dec
outs
movs
aad
in
push
dec
xchg
jecxz
repnz
xor
cmp
cmp
push
shr
je
daa
push
and
jmp
mov
faddp
icebp
popa
add
(bad)
cmc
xor
out
mov
add
dec
aam
jmp
ret
dec
imul
dec
or
xchg
imul
in
mov
mov
dec
aam
mov
and
push
clc
ret
rcr
xchg
(bad)
aam
fdiv
loope
popf
lea
jmp
out
cmp
jb
adc
popa
fisttp
not
int
mov
sub
jno
pop
fistp
fcom
inc
xlat
add
and
cmp
fsub
cmp
arpl
pop
add
std
dec
push
inc
addr16
jecxz
fldenv
dec
les
dec
xchg
je
daa
arpl
movs
push
hlt
pop
fmul
add
sub
add
sbb
sub
pop
dec
inc
repz
cmc
out
fwait
aad
dec
in
sub
jne
fsub
nop
aam
pop
inc
out
dec
cmp
xor
push
ret
mov
xor
mov
clc
cli
mov
xchg
das
jmp
inc
jle
out
pop
jb
dec
mov
outs
mov
retf
loopne
retf
pop
adc
jne
xchg
mov
pop
mov
in
jns
adc
push
inc
inc
push
xor
xchg
nop
std
or
xor
or
mov
out
daa
pop
nop
xor
add
loope
loopne
out
pop
jmp
rcr
ret
cdq
pusha
sub
rcl
(bad)
in
rcl
lods
mov
pop
push
sub
loope
xor
dec
inc
das
add
jg
pop
not
retf
jge
sub
push
inc
call
push
ins
add
ret
rcl
loopne
push
nop
and
mov
fsub
mov
aaa
add
jo
dec
pop
cmp
in
pop
inc
ds
dec
aaa
cmp
jae
out
sbb
dec
neg
loopne
rcr
(bad)
push
jp
mov
repnz
seta
fcom
mov
scas
push
cmp
xor
push
ret
push
movs
sbb
jbe
movs
dec
in
mov
pop
mov
ins
dec
adc
fwait
jecxz
loopne
or
dec
int
sbb
int3
leave
pushf
aad
mov
(bad)
aas
aad
dec
fistp
jno
cwde
movs
pop
(bad)
hlt
push
mov
cmps
stc
mov
sub
jno
scas
dec
jl
jmp
cld
jmp
and
bound
or
sub
test
in
mov
dec
and
stc
sbb
imul
dec
pop
xchg
neg
dec
test
shl
inc
aaa
mov
xlat
pop
das
les
pop
mov
adc
int3
js
lds
mov
inc
call
mov
lods
adc
cli
pop
jns
adc
icebp
jno
stc
aam
sub
push
int
xchg
std
das
rcl
adc
ficom
es
xor
cs
rol
outs
aad
cmp
mov
ins
shl
mov
cli
add
movs
movs
ror
push
test
or
xor
hlt
mov
out
fcomip
in
sub
ror
cs
adc
push
xchg
movs
fsubr
in
test
mov
loope
nop
mov
mov
jne
adc
dec
sbb
jne
lahf
pop
ficom
mov
jns
pop
call
je
push
xor
sub
loope
ins
bound
movs
pop
imul
stos
std
sub
out
arpl
jecxz
add
or
cmps
pop
scas
add
loope
xchg
hlt
jno
jl
inc
jo
jmp
push
cdq
sub
ret
hlt
sar
hlt
jg
jmp
push
adc
scas
xchg
or
mov
int3
jb
inc
test
outs
dec
lock
sbb
dec
test
mov
sbb
and
fmul
fist
cmp
rcl
add
or
mov
add
or
sbb
aad
cli
test
adc
imul
aad
xchg
fild
cmp
xlat
push
mov
(bad)
retf
mov
mov
mov
sbb
sbb
adc
fisub
and
mov
inc
int
jno
sbb
push
aam
sbb
sahf
cwde
xchg
cdq
shr
dec
adc
push
sahf
adc
(bad)
cli
into
dec
loope
gs
sbb
and
scas
push
ins
cld
les
daa
jbe
lds
mov
dec
sbb
mov
fwait
pop
cmp
lea
out
push
retf
mov
push
push
mov
cmps
mov
out
mov
stos
stos
jge
pop
cmp
(bad)
popa
push
mov
bound
stos
cli
stos
stos
ins
cmps
das
test
mov
repz
aas
adc
lahf
mov
dec
or
dec
push
mov
cmovl
sub
sub
xchg
dec
fmul
jmp
dec
(bad)
out
xor
cmp
arpl
dec
dec
gs
mov
xor
ret
adc
sub
int3
and
mov
outs
mov
aad
sub
rol
ret
fcmovne
sbb
xor
outs
mov
inc
jo
ins
sbb
fwait
xor
mov
inc
mov
iret
iret
out
adc
bound
mov
in
loop
push
aam
add
add
sbb
dec
mov
sub
add
push
(bad)
adc
push
xchg
xor
cmp
sahf
stos
adc
push
dec
inc
sbb
pop
je
out
popa
xchg
sbb
aaa
inc
cmp
mov
pop
xor
addr16
mov
iret
mov
mov
push
jmp
jl
push
outs
ffreep
or
into
fs
js
mov
push
push
daa
xor
push
sbb
sub
add
cli
dec
mov
pushf
push
xchg
jecxz
rcr
arpl
inc
push
jbe
cmp
popa
ja
sbb
rcl
jnp
fisttp
test
in
xor
jecxz
add
mov
cmp
popf
xchg
pusha
dec
xor
test
rcl
or
pop
cdq
aaa
mov
loope
dec
ret
push
pop
cmp
or
xlat
push
sbb
leave
pop
pop
adc
mov
push
jno
inc
icebp
stos
nop
cs
inc
jns
mov
ds
icebp
rcl
add
and
sub
int
or
test
inc
call
jge
aam
inc
in
jmp
mov
cmp
scas
mov
xchg
dec
xor
dec
cmps
cmp
call
lock
je
scas
int3
stc
out
add
iret
adc
adc
test
xor
pop
mov
pop
jbe
push
lds
cmp
cmp
loopne
neg
sbb
add
bound
jns
(bad)
cmp
imul
or
mov
inc
mov
push
fmul
fsub
out
xchg
and
aam
cmp
sub
fidiv
dec
dec
loop
or
(bad)
mov
arpl
pop
xor
mov
jge
mov
xchg
sub
out
mov
dec
repnz
imul
sub
aad
icebp
dec
retf
add
popa
inc
push
ds
fld
xlat
mov
mov
not
test
aad
imul
sub
les
mov
mov
and
(bad)
outs
mov
cwde
jmp
(bad)
push
icebp
jne
scas
inc
ficomp
and
xor
add
in
(bad)
int3
xlat
pop
dec
sub
imul
out
test
fxch
js
xchg
adc
jnp
scas
inc
loopne
mov
in
mov
mov
cmc
or
cmp
mov
and
pop
push
cld
xlat
dec
xor
mov
cmps
int3
push
ja
cmp
stos
jo
sbb
xor
and
sar
pop
inc
(bad)
mov
clc
(bad)
jmp
mov
jge
cmp
je
cmp
ret
mov
jbe
sbb
ja
sub
xor
xchg
push
or
out
cs
pop
inc
into
mov
xchg
xchg
call
cwde
mov
pop
adc
adc
or
xchg
imul
les
xchg
test
stc
adc
jmp
ja
cmps
sbb
xlat
push
push
ret
dec
push
mov
mov
mov
arpl
or
pusha
push
inc
or
movs
xchg
retf
push
out
cmps
sahf
dec
ret
sbb
cwde
(bad)
push
pop
(bad)
(bad)
adc
jbe
xor
jmp
or
gs
jle
sub
imul
ds
loop
(bad)
test
push
cwde
lds
(bad)
mov
loopne
pop
sbb
cmp
mov
push
ja
sbb
outs
pop
sbb
(bad)
lea
xchg
dec
xlat
mov
xchg
je
aaa
mov
or
int3
int
leave
xor
int
or
loope
jp
pop
or
dec
push
into
or
ss
or
out
out
and
fstp
retf
cld
fcom
jmp
cwde
test
jmp
das
ret
addr16
cli
fsubr
push
cmp
push
iret
call
std
ror
mov
push
cmp
pop
loope
mov
dec
dec
idiv
dec
in
mov
out
dec
addr16
dec
or
stos
cmp
in
adc
pop
or
xor
jge
mov
inc
or
push
adc
js
out
rcl
repz
mov
adc
cmc
sti
push
and
mov
mov
sub
sub
and
iret
mov
cmp
fwait
aas
es
mov
inc
out
push
movs
cld
lahf
mov
add
xor
(bad)
push
xor
imul
sub
imul
sbb
test
mov
sub
(bad)
div
fucomp
(bad)
(bad)
push
push
in
pusha
mul
mov
adc
loop
jecxz
fbstp
pop
mov
jecxz
pusha
bound
outs
xchg
sub
push
fiadd
mov
xlat
cmc
jno
ficom
mov
addr16
dec
lds
int3
mov
jo
pop
sub
inc
mov
call
dec
fimul
dec
xor
jne
retf
push
jne
sub
and
adc
add
idiv
mov
ins
sub
xor
and
xor
add
inc
xchg
mov
xchg
adc
cwde
mov
in
call
lods
mov
and
and
ficom
mov
rcl
xor
xchg
mov
daa
cmc
and
jbe
lods
daa
inc
pop
data16
test
fs
or
jmp
movs
dec
fs
ja
dec
(bad)
pop
dec
test
or
mov
fisubr
aaa
call
inc
js
loopne
mov
push
mov
or
loope
das
jnp
sbb
mov
xchg
icebp
ss
jecxz
and
cmp
jae
movs
push
loope
pop
xchg
mul
adc
and
lea
mov
fisttp
fld
jo
xchg
xchg
cwde
faddp
xchg
pusha
in
or
test
and
xchg
(bad)
test
js
aas
popa
leave
add
je
jp
sti
daa
pop
movs
dec
or
dec
ret
rcr
sbb
fisttp
stc
mov
cwde
add
or
sub
stos
mov
xchg
lock
jns
arpl
xor
leave
xor
sub
ss
dec
shr
test
jecxz
dec
mov
aas
adc
dec
(bad)
(bad)
cmc
add
mov
imul
sbb
sub
in
xor
cwde
leave
sbb
test
inc
xor
(bad)
xchg
fyl2xp1
int
and
push
dec
xchg
cli
xor
jmp
repz
das
mov
fwait
sbb
clc
push
jp
xor
retf
scas
xor
xor
stc
mul
lods
test
ins
stc
push
cs
pop
leave
mov
mov
cmp
sbb
and
or
popa
out
mov
xchg
test
jno
enter
cs
pop
mov
shl
jb
push
mov
cmp
push
mov
(bad)
shl
aad
jbe
inc
in
data16
fs
mov
loope
sub
jle
push
(bad)
faddp
daa
mov
inc
mov
and
push
add
jecxz
pop
xor
std
and
or
cdq
in
pop
jl
ja
test
clc
push
call
std
xor
gs
lods
cmp
mov
push
movs
sub
xchg
xor
jp
and
sahf
sub
lods
data16
xor
jns
inc
mov
sbb
mov
popf
inc
(bad)
lock
in
hlt
hlt
popa
or
aas
ror
cwde
out
inc
adc
iret
mov
fisub
pop
sbb
xor
sub
push
dec
ins
mov
jle
retf
addr16
sub
xor
xchg
jecxz
mov
enter
outs
movs
and
es
sub
cwde
imul
pop
and
enter
sbb
je
imul
xor
enter
dec
pop
xor
pop
xor
lods
and
sub
adc
in
or
inc
in
hlt
ja
test
out
fld
repz
fcmove
lds
add
and
xor
or
and
repz
aas
pop
ja
sbb
fist
lea
cmp
sahf
sbb
test
fmul
sbb
cwde
fwait
xchg
loope
add
fimul
nop
jbe
pushf
jnp
clc
in
mov
jbe
sub
in
sbb
pop
(bad)
clc
pop
fldenv
adc
mov
rcl
arpl
jp
sbb
pushf
leave
or
xor
int3
pop
sbb
js
popf
mov
fstp
fmul
lods
fwait
and
bound
jnp
add
jmp
and
lock
cli
mov
aad
and
xor
xor
into
jo
xchg
dec
into
pop
xchg
sub
xchg
sub
in
call
mov
dec
adc
push
das
cmp
xchg
loop
(bad)
push
cwde
data16
inc
sub
push
nop
mov
adc
push
retf
imul
iret
mov
aad
mov
xchg
fild
loopne
rol
dec
shl
push
out
out
sbb
(bad)
xchg
idiv
mov
addr16
(bad)
(bad)
in
call
rol
pushf
retf
cmp
xor
xchg
push
xchg
retf
jno
daa
mov
addr16
repz
mov
sub
fsub
pop
retf
push
div
popa
(bad)
rol
mov
in
stc
cmps
imul
add
mov
stos
(bad)
in
(bad)
adc
mov
xchg
xchg
es
mov
icebp
jmp
mov
retf
mov
test
iret
movs
jle
cmp
popa
cmp
pop
mov
and
xlat
or
out
mov
sub
punpcklwd
mov
or
out
jae
arpl
cmp
sub
or
xchg
push
jmp
cmp
jmp
push
ror
push
loop
jae
imul
mov
mov
add
jle
mov
call
fcmovnu
shr
lds
sbb
jnp
add
inc
sub
sub
cs
sbb
push
ret
cwde
arpl
push
sub
imul
push
mov
aaa
repnz
and
cdq
scas
xor
push
and
or
and
push
mov
jl
in
inc
out
jnp
sahf
pop
push
imul
leave
adc
push
cmp
shr
sahf
dec
rcl
stos
sbb
out
(bad)
jmp
add
pop
(bad)
xor
div
inc
add
popa
mov
mov
aad
inc
ror
rcl
pop
(bad)
xchg
jmp
push
adc
daa
outs
cmp
xchg
gs
mov
dec
or
retf
sbb
loop
call
jbe
test
cdq
pop
fs
repz
sub
or
xchg
jl
push
ret
sbb
rcl
cmp
in
ficom
(bad)
fldcw
add
jns
pop
xor
or
sbb
and
jmp
(bad)
pop
sub
push
pop
add
sub
and
lahf
lahf
mov
inc
cli
jb
call
push
sbb
popf
jecxz
adc
dec
mov
sahf
in
idiv
jae
push
cmc
adc
mov
(bad)
call
ins
movs
xor
pop
outs
into
jb
repnz
inc
mov
mov
sub
or
sbb
xlat
and
jb
dec
imul
fcomip
outs
and
icebp
or
jecxz
das
mov
lods
sbb
loope
push
inc
mov
sub
mov
xchg
iret
fild
dec
pop
push
adc
push
loop
xchg
loope
jne
rcr
(bad)
mov
imul
sub
cmp
scas
mov
sub
ins
jmp
sbb
dec
sub
ss
and
xor
les
daa
fwait
pusha
pop
inc
mov
lods
add
or
xor
jo
xchg
pushf
(bad)
cmp
mov
sbb
cmps
xor
xor
rcl
repnz
xchg
scas
inc
clc
xor
repz
cmp
fwait
mov
jl
std
sahf
popf
or
jns
xchg
das
sbb
test
mov
bound
jmp
inc
aas
add
in
ret
xchg
push
es
(bad)
je
mov
dec
pop
mov
push
and
cld
xor
or
pop
and
cwde
mov
ins
cmp
loopne
or
pop
adc
dec
mov
jmp
jo
aad
shl
data16
and
std
push
sub
and
mov
retf
leave
(bad)
pop
sbb
js
or
in
pop
out
cmp
cmp
inc
loop
pop
jge
sbb
push
(bad)
shl
mov
mov
mov
pop
add
mov
aad
xor
jmp
add
rcr
inc
(bad)
das
mov
adc
dec
fucomp
mul
jnp
rcl
xlat
xchg
adc
xor
jg
adc
bound
jg
dec
into
(bad)
in
outs
push
fs
out
stos
cli
ror
cmp
cmp
mov
retf
repz
inc
call
push
popf
cmp
mov
aad
out
inc
pop
bnd
test
mov
cmp
iret
mov
sbb
leave
sbb
repnz
cmp
sbb
add
push
xor
jns
addr16
mov
pop
jmp
mov
sub
retf
jl
lahf
outs
ret
sbb
dec
aaa
lds
retf
inc
or
call
jb
sbb
xor
(bad)
dec
out
push
inc
jecxz
pop
add
add
pop
fdiv
cmc
jb
iret
cs
hlt
data16
cmp
push
pop
loop
fadd
ins
clc
mov
nop
outs
jecxz
mov
imul
fbld
pusha
mov
sti
mov
cmp
jmp
iret
inc
jge
fbstp
outs
shl
sti
and
mov
jl
mov
mov
popf
and
sbb
dec
jg
jns
in
lds
dec
add
jb
or
jnp
pushf
fist
or
(bad)
xor
jbe
fdiv
icebp
or
lock
and
or
mov
push
adc
sbb
test
push
push
jle
adc
and
jb
inc
jg
add
xor
xchg
xchg
or
loope
cmp
or
and
fsubr
loopne
shl
mov
xor
add
xchg
push
div
add
sub
and
gs
jmp
dec
add
retf
ins
mov
push
cwde
mov
jnp
jmp
jne
xchg
int
out
pusha
push
bound
iret
out
js
jnp
call
pop
and
ret
(bad)
and
and
mov
jae
mov
dec
out
dec
adc
call
(bad)
imul
inc
stos
in
imul
gs
test
add
retf
pop
mov
loope
out
js
push
in
mov
mov
loop
movs
scas
mov
pop
loop
mov
inc
mov
jmp
mov
jg
mov
xor
sar
mov
cmp
loopne
mov
shl
leave
imul
ss
xchg
pusha
inc
xor
sub
int3
inc
fcom
xchg
cmps
lds
shr
ror
xchg
cld
sti
pop
stc
add
lahf
pop
movs
aad
mov
jmp
ror
repnz
stos
cmps
(bad)
lock
repz
(bad)
pop
dec
cdq
xor
sub
sub
push
jbe
aam
aam
push
jnp
or
jae
xchg
popf
jg
push
sbb
call
cmp
lods
outs
pop
inc
call
stos
mov
ret
ins
pop
sub
mov
popa
inc
std
add
dec
jbe
mov
mov
fcom
ret
jmp
inc
in
lds
(bad)
and
loop
xchg
or
adc
out
jge
inc
or
sub
fisttp
cdq
mov
mov
int3
dec
jno
cmps
or
xor
nop
and
inc
rol
stos
outs
dec
cmp
and
mov
scas
adc
cmp
push
jns
dec
and
movs
mov
add
sbb
cwde
jmp
jmp
imul
arpl
cmp
push
sub
mov
jg
idiv
adc
adc
push
dec
add
mov
inc
ja
addr16
pop
push
add
shl
and
adc
outs
mov
(bad)
imul
aas
in
outs
add
add
stos
mov
xchg
cs
mov
es
dec
lds
sub
xor
mov
xchg
scas
nop
cmp
cmp
sub
mov
and
or
test
dec
jns
jo
or
in
lea
push
daa
popa
jno
jo
cs
sahf
jmp
jge
out
jle
sbb
or
shr
push
inc
cmp
push
xor
ficom
jg
or
or
je
mov
int
xor
inc
mov
sub
xor
add
adc
scas
(bad)
les
push
xchg
cmp
cmp
das
cmp
fmul
cld
call
out
adc
xchg
ss
movs
xor
maskmovq
div
(bad)
jb
ja
inc
aam
xchg
jmp
and
fsub
jle
int
test
out
add
sub
and
pop
push
and
xbegin
xlat
jae
sbb
movs
cs
pop
enter
xor
jecxz
sub
out
sub
retf
into
sar
fwait
and
mov
mov
jl
adc
lock
and
dec
push
sbb
ret
xor
mov
cmp
popf
dec
cli
fwait
jnp
jo
adc
es
or
repz
xor
mov
idiv
daa
add
retfw
rol
jp
scas
pop
mov
sub
pop
dec
jmp
test
ins
out
js
add
push
add
cli
cmp
int
inc
sbb
dec
mov
mov
add
sbb
adc
fwait
or
or
sub
mov
es
arpl
push
rcr
xchg
fs
lods
fld
ret
daa
dec
imul
lock
out
add
ins
data16
gs
leave
xchg
daa
sub
sbb
pop
test
stos
inc
stc
sub
movs
sbb
mov
sahf
call
fstp
les
xchg
mov
push
ja
or
inc
test
fimul
int3
cwde
xor
add
add
test
mov
push
lock
mov
(bad)
pop
jns
jnp
add
(bad)
or
mov
dec
lea
push
ss
hlt
push
fcom
loope
sti
jo
push
dec
adc
mov
xor
pop
fiadd
and
fwait
mov
fwait
jmp
cmp
jp
push
sub
pop
push
sub
int
mov
cmc
leave
ss
jno
into
aam
mov
mov
mov
jl
mov
out
and
or
xchg
sub
psubsw
mov
dec
push
or
repz
cwde
mov
mov
inc
sahf
cwde
mov
shl
ins
xor
jg
lds
sbb
fstp
lock
and
inc
jnp
dec
push
lahf
or
out
lods
dec
cld
pminub
nop
mov
sti
sub
in
inc
sbb
and
jp
pop
iret
cmc
lds
mov
sar
leave
sar
bnd
jmp
outs
jnp
sub
mov
inc
adc
mov
jae
ins
ds
scas
ins
aad
cmp
mov
cmps
jle
mov
(bad)
(bad)
jle
push
fstp
dec
enter
out
jge
in
push
hlt
hlt
mov
mov
dec
pop
sahf
jecxz
loope
dec
out
inc
pushf
cld
xchg
rcl
lods
sar
call
xchg
mul
or
adc
repz
setge
std
mov
pop
add
and
xchg
mov
cli
aas
mov
adc
adc
das
call
popf
arpl
dec
cdq
and
jle
cmp
vpcomuw
mov
pop
inc
hlt
pop
mov
dec
imul
mov
mov
out
das
out
mov
adc
les
cmps
out
sbb
cmp
aaa
xor
clc
sbb
mov
into
fmul
int3
push
xchg
dec
push
push
inc
cmps
pushf
jmp
or
jmp
mov
cmp
mov
sub
clc
stos
sub
aam
cmp
nop
mov
add
jnp
ins
and
push
mov
(bad)
fsubp
in
xor
int3
mov
jmp
stc
adc
and
jp
cmp
mov
(bad)
fcomip
imul
(bad)
in
inc
adc
mov
movs
push
or
outs
test
push
jp
int
dec
(bad)
mov
pushf
ficom
pop
adc
jg
jp
or
stos
mov
imul
rcr
sar
lods
or
js
jp
jmp
lods
loope
mov
xor
cmp
mov
dec
popf
sbb
int3
or
cmp
cdq
out
cmp
or
sar
xchg
imul
xchg
push
pop
pop
push
cmp
inc
pop
mov
in
fcomp
popa
popa
call
cmp
imul
inc
ror
mov
ficomp
lea
fcmovnu
jb
fsub
ins
pop
xor
les
dec
inc
mov
out
leave
sub
jne
loopne
and
pusha
or
fs
mov
into
fcmovu
scas
cwde
ins
lahf
popa
nop
ret
xchg
adc
stc
hlt
imul
xor
or
dec
mov
mov
sbb
dec
xchg
push
packsswb
cwde
jge
stc
xor
call
adc
hlt
lds
retf
xchg
out
pop
cli
xchg
mov
nop
cmps
in
in
nop
jae
mov
xor
movs
inc
in
gs
mov
add
(bad)
xor
fstp
sub
pop
clc
mov
ficom
hlt
div
and
shr
retf
icebp
imul
fist
mov
ret
dec
add
int
push
ins
xchg
sbb
lock
js
repz
cmp
bound
add
lods
call
mov
int3
bound
and
jg
xchg
mov
ins
pop
cdq
scas
pop
popf
xchg
push
xlat
and
lds
retf
clc
fimul
sti
retf
imul
dec
adc
bndldx
fimul
cld
in
pushf
loop
jae
pop
cmp
stos
pop
jle
clc
and
xor
add
imul
or
sti
rol
or
mov
scas
lea
or
sub
(bad)
fisttp
adc
shr
movs
adc
lods
dec
int
fcom
ror
daa
mov
iret
dec
xlat
pushf
int3
pop
xor
fcomp
enter
les
jbe
or
add
int
shr
jae
and
dec
fmul
(bad)
iret
jmp
cli
outs
xor
xor
add
ret
sbb
mov
inc
cmp
ins
fdiv
in
pusha
cmc
fs
pop
xchg
es
mov
aas
jns
inc
popf
jmp
mov
jns
push
mov
xor
ret
aam
sbb
daa
sbb
sub
or
cli
cmps
fwait
jb
sub
scas
ins
inc
xor
dec
imul
adc
sub
push
cmp
(bad)
jl
add
add
jmp
adc
xchg
pop
imul
jae
ss
mov
pop
pop
inc
fisubr
xchg
push
inc
mul
xlat
dec
cmp
add
ss
xchg
outs
jg
sbb
cld
sub
sub
sbb
mov
adc
aam
inc
js
mov
push
push
sbb
retf
or
popw
jae
pop
pop
clc
rcr
fisttp
jo
les
mov
mov
xchg
imul
es
mov
in
iret
jle
out
jae
jbe
shl
inc
ja
xchg
push
daa
ficom
sub
push
ins
sbb
clc
rol
test
pop
mov
(bad)
fild
movs
clc
mov
out
lods
xchg
mov
xor
es
(bad)
out
jl
inc
(bad)
fild
xor
leave
inc
or
call
test
jle
add
cld
pop
inc
fsubrp
movs
jae
mov
test
sti
out
gs
test
daa
jnp
and
jle
push
and
inc
lock
stos
push
fdiv
sbb
mov
pop
mov
push
add
sub
sahf
test
imul
sbb
(bad)
je
mov
(bad)
push
imul
call
inc
cmp
and
call
dec
(bad)
icebp
mov
xchg
xor
add
xor
mov
push
mov
cmp
push
pop
test
dec
fadd
clc
xor
or
daa
dec
call
cmp
add
int
or
aam
adc
cs
clc
out
cwde
enter
(bad)
mov
out
mov
(bad)
std
(bad)
dec
movs
add
outs
adc
lea
or
sbb
fistp
mov
mov
jle
jl
inc
mov
fild
add
shl
inc
js
lods
sbb
ss
push
lds
mov
aam
int
mov
mov
es
xchg
push
pop
stos
jg
adc
sbb
ja
sub
in
lods
aaa
movs
(bad)
xchg
out
xchg
push
dec
cmp
adc
lock
mov
jns
dec
mov
jp
iret
(bad)
push
jge
push
icebp
or
movs
retf
pop
pop
in
dec
nop
addr16
invd
push
push
mov
add
inc
mov
sahf
adc
dec
les
sbb
movs
or
lods
dec
mov
push
and
outs
lea
popf
imul
repnz
mov
cdq
xor
lods
scas
jecxz
pop
or
fisubr
das
les
lea
std
aam
adc
xchg
mov
push
and
mov
rol
inc
jmp
jecxz
test
add
add
pop
imul
std
test
xbegin
jmp
mov
out
mul
out
mov
lods
cld
adc
ds
ja
mov
in
div
sbb
sar
cmps
cmps
sbb
cmps
mov
das
int3
xchg
mov
shr
les
or
lock
shl
xor
pop
add
fnstcw
fs
adc
or
lock
scas
sbb
mov
xchg
dec
je
repz
adc
fimul
in
add
dec
pop
out
jle
and
fwait
rcr
repz
pop
(bad)
jle
adc
out
lods
loope
pop
and
rol
shl
mov
sahf
rcr
add
je
lahf
repnz
jb
fld
pop
addr16
addr16
mov
jge
push
outs
jo
push
clc
add
xchg
enter
adc
movs
fld
dec
movs
daa
js
(bad)
cdq
call
(bad)
xor
cmp
push
mov
aad
add
push
xor
cmp
cmp
aas
or
addr16
out
xchg
xor
fwait
cmp
inc
xchg
sub
ret
daa
iret
inc
add
push
or
js
xor
pushf
icebp
sub
popf
lea
xchg
ret
push
jae
leave
inc
lock
retf
xchg
cmp
add
not
push
sbb
lds
adc
dec
mov
xchg
pop
psadbw
mov
repz
fild
pop
cdq
in
outs
in
or
movs
cmp
stos
xchg
or
in
(bad)
dec
ret
add
mov
dec
popf
cs
js
mov
nop
dec
and
pop
rcr
adc
das
ret
push
sub
xchg
and
(bad)
movs
mov
sbb
push
cdq
inc
pop
cmp
xor
xor
pop
mov
xchg
ins
mov
cmp
loopne
xor
mov
ja
leave
xchg
jno
cmp
adc
pop
aas
fcom
pop
cmp
and
or
dec
lods
push
clc
mov
jmp
scas
stc
or
daa
in
xchg
and
or
mov
sub
outs
jnp
dec
(bad)
fist
sbb
jb
push
jb
hlt
sub
xchg
loopne
hlt
mov
lock
call
shr
leave
popf
fisub
xchg
mov
popf
in
lds
dec
mov
jbe
loope
jge
arpl
mov
pop
(bad)
outs
neg
sbb
test
mov
xlat
and
dec
fwait
add
int3
(bad)
adc
pop
nop
add
leave
test
mov
cmc
sub
sub
pop
fsub
and
adc
cwde
cmp
add
mov
push
(bad)
(bad)
cmp
pop
in
push
adc
mov
sbb
sbb
cmps
sbb
adc
add
cmps
fisttp
or
int
bound
mov
add
test
out
fwait
or
jge
out
std
daa
(bad)
pop
fcomip
(bad)
(bad)
xor
stos
imul
cld
xor
jne
aad
push
push
rcl
xlat
pop
jg
and
push
repz
mov
jmp
out
int3
bound
ja
inc
adc
mov
xor
cmp
adc
std
repnz
mov
gs
and
sbb
or
sbb
retf
scas
in
test
repz
push
jnp
cld
in
ror
sub
(bad)
inc
in
jmp
aam
sbb
mov
aad
lods
jns
xchg
and
sbb
xchg
outs
cmp
xchg
or
imul
or
cmp
mov
push
mov
retf
sbb
fdecstp
xor
mov
add
mov
rol
dec
cmc
xchg
cmp
add
add
es
es
jmp
adc
loopne
mov
mov
dec
inc
push
mov
out
or
jae
fcmovbe
and
xor
push
dec
mov
jbe
cmps
stc
sub
cmp
fwait
inc
xor
rol
add
mov
mov
jg
gs
xchg
dec
pop
clc
and
sbb
leave
es
das
out
sub
and
cmp
fcomp
push
not
shl
add
pop
pusha
repnz
(bad)
rcr
(bad)
mov
cwde
out
icebp
mov
inc
imul
mov
stos
stos
jmp
out
dec
mov
sub
inc
int3
test
mov
or
test
add
(bad)
out
jbe
js
cld
xor
or
movs
sti
mov
mov
xchg
in
xor
push
inc
mov
mov
pop
fwait
(bad)
stc
pop
or
cld
test
test
loopne
les
xchg
lock
mov
enter
mov
jg
and
(bad)
enter
pop
int
fisub
scas
(bad)
bound
retf
inc
push
mov
push
mov
push
cmp
adc
jl
push
dec
add
and
int3
jg
arpl
sbb
push
shr
xor
add
push
adc
(bad)
(bad)
retf
inc
inc
xchg
mov
jne
inc
mov
lods
in
sti
cli
push
imul
sub
imul
ins
test
cmp
clc
cmp
inc
push
stc
bound
addr16
jmp
bound
pop
cli
ja
fsubr
cmp
loop
mov
clc
pop
je
sub
fidivr
lods
sub
mov
push
and
add
shr
and
scas
adc
mov
fcom
inc
stc
rol
je
mov
pop
xor
jno
jl
inc
inc
cvtpi2ps
aam
sub
ins
mov
cmp
and
ins
nop
cmp
xchg
rcl
sti
push
dec
mov
push
mov
(bad)
(bad)
jle
or
jmp
mov
cmc
mov
repnz
jge
loopne
ret
test
iret
lock
cdq
addr16
mov
(bad)
mov
cmp
or
stos
stos
jbe
pop
into
mov
cs
int
push
rcr
mov
test
stos
(bad)
xor
mul
lea
mov
mov
push
shl
stos
push
mov
popa
xchg
jle
push
push
push
and
sub
dec
pop
jmp
sub
jb
add
test
cdq
pop
inc
jmp
mov
sub
sahf
jge
or
cdq
and
les
sub
loopne
sar
xor
jl
(bad)
icebp
mov
loope
lds
adc
jge
or
cmp
test
cmp
sub
cmp
push
aas
mov
stos
(bad)
loope
ins
imul
pop
cmp
jns
les
sub
jmp
js
push
jno
jno
add
aam
in
inc
ret
jnp
inc
pop
jne
push
shl
cmp
xchg
and
inc
inc
call
mov
push
sub
in
xlat
sbb
out
pop
mov
fmul
in
retf
call
xor
sbb
out
jmp
sub
sub
std
sbb
clc
adc
and
mov
adc
or
dec
lds
(bad)
bound
jo
jae
push
popf
sub
mov
cmp
mov
addr16
popf
popa
out
aaa
or
pop
or
add
xor
call
jmp
pop
in
mov
dec
inc
aaa
jae
test
aaa
pop
div
lds
fisub
rcl
push
out
mov
xchg
nop
adc
xor
call
loope
ja
mov
out
arpl
fst
pop
pop
popf
bound
pushf
(bad)
cmc
mov
stos
leave
fwait
pop
pushf
push
push
xor
jmp
in
icebp
sbb
movups
jbe
and
icebp
mov
out
test
pop
mov
repz
out
push
out
add
xchg
rol
(bad)
iret
rcl
call
xchg
add
or
pop
(bad)
out
push
imul
(bad)
lods
adc
jle
xchg
(bad)
in
dec
scas
ret
hlt
cmc
xor
or
movs
in
jbe
mov
ja
test
sub
add
pop
bound
fisttp
scas
pop
sub
leave
or
jo
rcl
and
mov
xchg
xor
fs
pop
cmps
push
push
inc
sub
and
pop
clc
test
into
pusha
dec
ja
xchg
mov
push
mov
and
data16
das
fsub
sti
cmp
mov
ss
int3
mov
xor
aaa
gs
in
(bad)
inc
cmp
inc
push
sbb
out
dec
ror
and
mov
(bad)
aaa
loop
add
jl
cdq
pop
and
xlat
loope
fnstenv
inc
cmps
cmp
jmp
jae
pop
pop
add
rcr
test
mov
sub
movs
jl
pop
sub
nop
xchg
dec
test
xchg
sub
fisttp
inc
push
mov
mov
adc
xor
shr
test
ins
(bad)
addr16
fadd
pop
and
retf
adc
inc
mov
push
call
add
mov
dec
pop
add
(bad)
fdiv
imul
out
repnz
jnp
fadd
mov
push
cmovb
pop
adc
xor
(bad)
js
aad
pop
xchg
fsubr
xchg
inc
cmc
ja
jb
mov
(bad)
fcom
shl
stc
call
or
stos
xchg
movs
shr
into
movs
cmp
pop
mov
jg
sub
mov
fisub
and
jle
add
(bad)
aad
mov
pop
cli
stos
int3
ds
ins
xor
popf
aaa
xor
cmp
bound
add
and
cmp
shl
and
das
dec
push
adc
pop
add
test
stos
lea
ins
push
sub
and
jge
repz
xor
mov
mov
hlt
in
test
sub
xchg
pop
adc
xchg
pop
orps
rol
jbe
adc
jl
aam
jle
data16
sub
mov
dec
repz
push
rcr
div
shr
(bad)
jmp
inc
sub
jne
(bad)
sbb
lock
adc
mov
jmp
in
shl
xchg
ret
mov
icebp
shl
mov
stos
das
cmp
xor
xor
jns
aas
jg
sbb
pop
call
int
pop
xor
sbb
mov
sub
test
push
std
test
retf
jmp
jp
add
pusha
adc
not
or
(bad)
mov
fidiv
addr16
outs
mov
mov
dec
jp
mov
outs
pusha
js
(bad)
or
int3
jecxz
loopne
fstp
inc
inc
mov
push
adc
push
push
sbb
push
push
es
or
repnz
mov
mov
out
scas
daa
adc
or
js
rol
inc
jl
add
rcr
cmp
mov
in
mov
lods
sbb
add
lahf
inc
ja
sbb
mov
call
sub
xor
ds
adc
loope
jl
pop
mov
loopne
pop
mov
pop
or
sar
mov
mov
adc
or
jmp
dec
mov
das
sbb
js
lahf
popf
jbe
addr16
aaa
mov
mov
fmulp
inc
cli
sbb
mov
movs
sub
outs
jmp
dec
lea
sub
ffreep
xchg
adc
test
xchg
cmp
test
adc
cld
int3
rcl
jl
cdq
and
xchg
xchg
add
jmp
dec
dec
call
movs
add
and
ja
mov
loopne
jnp
pop
imul
cld
movs
sbb
aad
out
retf
dec
sbb
lahf
daa
mov
xlat
and
sub
icebp
pop
or
call
mov
pop
dec
mov
pop
neg
or
(bad)
mov
mov
pop
add
sub
ss
or
fs
xor
pop
or
enter
dec
inc
out
cmp
adc
(bad)
mov
nop
cmp
lahf
sete
jecxz
xor
jae
sbb
mov
sbb
mov
or
dec
add
pop
enter
inc
mov
jle
out
cmps
int3
retf
mov
push
enter
add
scas
or
mov
rol
pusha
add
mov
push
mov
sar
push
pushf
jns
jp
dec
lahf
imul
repnz
aaa
imul
push
shl
aam
outs
ss
mov
jp
jmp
lods
lods
imul
int3
xchg
push
sub
fimul
jns
mov
xchg
jb
in
sti
mov
jle
ja
xchg
dec
cmp
mov
daa
jae
sub
mov
stc
jo
push
pop
adc
dec
aaa
inc
and
inc
dec
pop
mov
cmp
add
lea
mov
xor
mov
mov
sub
std
jmp
test
test
aas
outs
data16
inc
jp
jno
aaa
jns
scas
fadd
iret
cdq
xchg
dec
adc
jno
psrlq
outs
mov
pop
int
cmps
sbb
pop
push
in
pusha
push
mov
lds
fwait
add
mov
sbb
lods
aaa
in
mov
fcmovnbe
push
xchg
div
in
mov
(bad)
push
sub
imul
aas
jnp
adc
sub
mov
test
xlat
(bad)
jmp
sub
xor
mov
ja
cmp
lods
test
pop
jp
or
inc
dec
lods
mov
jns
movs
lods
xlat
std
xchg
repz
adc
(bad)
sbb
or
popf
push
retf
mov
es
add
rol
cmp
xor
mov
lock
call
mov
and
sub
jnp
test
add
pop
call
mov
adc
or
hlt
dec
hlt
ss
es
add
mov
mov
fdiv
mov
sbb
out
mov
sbb
mov
ins
fisttp
addps
lock
stc
fsubrp
xor
sbb
nop
rcl
fcom
push
sti
sub
ja
cdq
pop
inc
push
sbb
jnp
ins
pop
xchg
inc
inc
in
fcom
dec
jns
(bad)
rcr
sbb
sub
in
or
push
jmp
(bad)
dec
cmp
lock
push
pop
cmovae
dec
pop
cmp
dec
and
add
movs
lock
push
es
sub
mov
inc
sub
mul
rep
lea
inc
dec
adc
mov
es
test
dec
popf
icebp
test
adc
mov
dec
push
mov
inc
dec
ror
repz
mov
mov
jmp
push
enter
lods
jns
push
dec
mov
(bad)
sub
mov
rcl
fld
dec
sub
fcmovnu
mov
mov
cmc
cmp
cmp
xor
inc
xchg
fwait
inc
jmp
mov
sub
xlat
jle
into
xchg
pop
mov
cmc
jne
ret
xor
add
inc
fwait
js
fcom
sbb
dec
ret
hlt
test
pop
inc
scas
mov
mov
add
pop
ffreep
icebp
cmp
in
stc
test
jmp
cld
pop
(bad)
mov
push
mov
and
push
and
mov
xchg
mov
shl
dec
js
push
ret
mov
in
xor
mov
stos
ja
shl
mov
popa
pushf
cmp
iret
pushf
jbe
add
neg
iret
dec
movs
sbb
cs
popf
pop
xchg
mov
movs
fst
push
ret
icebp
cmp
test
inc
pop
loop
aas
(bad)
jg
je
cmc
pop
adc
cs
imul
mov
ins
loop
sbb
cld
or
sahf
mov
call
lods
jo
and
xchg
popf
inc
adc
out
mov
out
jp
sahf
xchg
(bad)
cwde
inc
jbe
ss
add
scas
and
inc
into
cmp
test
out
test
loope
jmp
lods
(bad)
fnstcw
and
mov
cmp
inc
xor
add
xor
jecxz
cmp
(bad)
sbb
dec
or
test
and
mov
push
mov
and
and
inc
dec
icebp
and
push
jno
pop
xchg
jne
xchg
int
jg
fistp
mov
addr16
test
push
and
mov
push
and
shl
shl
scas
push
push
bound
xchg
xor
and
int
ja
inc
cmp
jl
movs
ds
lods
xlat
in
jno
cmp
sub
pop
cmp
cmp
je
adc
sti
adc
xchg
cdq
in
in
xchg
mov
loop
fnstenv
mov
xor
das
jmp
addr16
pop
imul
xlat
(bad)
les
cld
sub
and
(bad)
(bad)
xchg
sub
dec
cmovb
xor
adc
mov
clc
cs
dec
or
jmp
and
pop
dec
sbb
call
inc
jns
lock
inc
cmc
shl
ffreep
ficom
retf
sar
lock
pushf
pop
(bad)
cmp
out
or
repz
jmp
cmp
jl
pushf
sub
jmp
xchg
div
das
movs
cmp
imul
ins
add
xchg
clc
lods
jno
inc
ret
mov
retf
mov
cli
cwde
pop
loopne
je
pop
pop
ins
inc
fwait
dec
stos
dec
ins
lods
dec
fnstsw
call
pop
rol
pusha
outs
add
popa
cmp
push
stos
ficom
push
rcr
sbb
rcl
mov
add
sub
inc
popa
aam
in
mov
arpl
into
cmps
jle
out
dec
inc
sbb
push
pushf
jl
cmp
mov
(bad)
arpl
loop
mov
loop
fwait
adc
pop
mov
fldcw
lods
out
sbb
push
adc
out
popa
push
xchg
sbb
fadd
sub
cmp
push
into
mov
ja
out
popa
stos
jle
or
xchg
jp
xchg
mov
in
popa
jl
dec
push
imul
jne
mov
aas
movs
out
imul
cmp
outs
fisttp
sbb
and
shl
in
cmp
lods
(bad)
jo
jg
xor
pop
pop
into
xchg
xchg
adc
in
push
adc
imul
push
retf
in
and
iret
push
lods
jne
(bad)
mov
outs
inc
repz
xor
imul
fistp
inc
or
call
out
add
mov
rol
bound
mov
inc
jno
xchg
mov
mov
icebp
enter
and
test
cmp
ds
push
(bad)
cmps
bound
std
pop
jne
cmps
xchg
cmp
dec
mov
out
cmp
adc
jp
mov
dec
ja
test
in
imul
xchg
adc
je
and
test
or
jge
jle
xchg
mov
iret
add
add
jns
or
jmp
fstp
cmp
dec
xor
add
adc
mov
push
jecxz
and
sbb
or
imul
sub
ins
daa
mov
js
movs
sahf
or
sbb
push
ret
xchg
jne
cmp
clc
and
add
add
cmps
les
mov
push
lahf
sbb
sahf
mov
mov
shl
inc
clc
jmp
pop
push
js
jmp
ins
ds
push
nop
mov
por
fwait
sub
mov
sbb
call
std
or
call
cdq
daa
stc
dec
mul
xchg
scas
std
gs
pop
xor
push
je
loope
or
xchg
inc
mov
push
inc
rcl
fsub
adc
fucom
cld
inc
(bad)
sbb
and
cli
jae
ss
(bad)
fsub
dec
mov
(bad)
sub
xor
call
or
out
jp
xchg
xor
push
or
leave
aam
jnp
jmp
cmp
(bad)
scas
xchg
jbe
jmp
jmp
mov
fist
fwait
xor
icebp
cmp
(bad)
jae
cmp
adc
rcr
mov
in
jge
mov
mov
popf
and
mov
sub
mov
mov
les
pop
adc
out
int3
ficom
cmps
bound
gs
dec
inc
and
je
or
push
sbb
dec
inc
sub
daa
aam
mov
jno
and
jo
or
mov
das
movs
jae
test
cmp
mov
or
mov
movs
les
out
mov
cmc
fmul
xor
lahf
es
shl
out
test
fs
mov
ret
(bad)
xor
movs
fnsave
sar
icebp
and
or
les
out
pop
and
sub
mov
or
aaa
cmps
add
stc
(bad)
imul
into
shr
ja
punpckhdq
and
retf
add
xor
test
rcr
dec
inc
jns
mov
push
push
popa
rol
jae
neg
sbb
movsx
retf
aad
ficomp
jo
xor
xor
int
xor
xor
adc
pop
mov
pop
inc
ror
popa
mov
dec
add
add
xor
and
fisubr
mov
mov
daa
sbb
mov
shr
loopne
push
and
out
inc
loopne
cmps
cmps
repnz
xor
aaa
enter
mov
pop
sub
not
mov
cmp
fcmovbe
xor
mov
ins
stos
iret
arpl
cmps
into
inc
ss
imul
in
dec
aaa
hlt
xor
pop
dec
mov
mov
pop
sub
test
mov
dec
ret
xor
in
neg
and
inc
jne
mov
fucom
adc
mov
adc
rcl
call
sbb
push
(bad)
neg
cmp
cdq
and
sub
xlat
cli
push
cli
xchg
mov
xor
in
pop
xor
add
mov
xor
or
and
jae
cdq
fcom
inc
lods
stc
lods
cmps
xor
in
js
and
and
leave
fsub
push
scas
push
scas
imul
xor
outs
in
push
mov
add
or
mov
inc
mov
icebp
sbb
adc
cmp
les
faddp
mov
imul
mov
test
xchg
int
push
push
jns
out
fcomp
mul
jecxz
cmp
fstp
bound
sub
xchg
add
jns
pop
jae
or
sahf
daa
pop
adc
fistp
mov
xchg
test
xchg
comiss
mov
jecxz
retf
inc
jno
push
or
dec
cmp
stos
mov
sti
cmp
lods
das
cmp
dec
popa
xchg
and
ins
test
sub
mov
les
call
add
ins
rcr
cmp
out
dec
in
jge
aaa
fcomi
cmp
jmp
adc
add
popa
jp
mov
inc
aad
jne
in
cmp
test
xchg
stos
jp
gs
xchg
imul
retf
pushf
not
movs
dec
push
dec
outs
cs
xchg
dec
test
xchg
clc
mov
aas
sub
rol
ds
pusha
rep
jl
call
aas
popa
out
xor
inc
mov
out
push
jb
xchg
and
retf
mov
fxch
pop
popf
loope
jbe
fadd
add
mov
adc
or
pop
(bad)
retf
push
dec
iret
xor
mov
fnstsw
push
loopne
test
(bad)
cmp
jg
push
es
and
cmp
rol
cwde
dec
ret
ds
fisttp
sub
inc
in
movs
repnz
outs
addr16
mov
pop
pop
mov
iret
ins
jmp
sahf
xchg
jle
int
je
or
(bad)
retf
cmps
or
mov
xor
sub
movs
es
in
inc
or
out
jb
mov
mov
loopne
mov
loopne
jo
and
and
xor
fld
xchg
jb
fidiv
fcomp
ds
add
mov
fld
adc
fild
(bad)
mov
mul
stc
push
std
ins
scas
xor
loope
fld
or
jp
mov
jmp
leave
lock
mov
jl
dec
call
sti
enter
ss
mov
daa
xchg
mov
loop
enter
sbb
push
xor
inc
cmp
mov
aas
jge
add
mov
fwait
clc
or
fimul
aaa
ins
out
rcr
test
ss
movs
xchg
mov
pop
mov
pop
jmp
clc
push
cmp
ins
inc
adc
jp
and
or
fisub
scas
cli
pop
inc
dec
scas
fcom
cmc
adc
or
dec
lock
mov
in
or
sbb
push
hlt
and
add
inc
test
test
daa
dec
ins
(bad)
fbstp
push
and
retf
fisub
out
lea
mov
mov
sbb
sti
xchg
gs
pop
inc
sbb
mov
xlat
(bad)
jbe
xchg
lock
ret
or
and
mul
fptan
ficom
stos
cld
add
jle
adc
hlt
mov
rol
scas
mov
in
fcmovne
imul
or
loopne
mov
sub
cmp
sub
mov
mov
out
(bad)
mov
test
leave
lea
mov
pop
cmp
arpl
fwait
fwait
and
(bad)
sbb
mov
xchg
xlat
push
shl
inc
enter
rol
ds
or
nop
pop
cmp
mov
mov
loop
retf
cmp
xlat
jne
and
retf
addr16
or
fist
ss
jg
lock
cdq
into
ja
sbb
in
jb
sbb
imul
adc
xlat
(bad)
sub
mov
xchg
mov
mov
fdivr
jne
call
test
(bad)
fcomp
xor
sti
std
bound
or
sbb
mov
inc
in
xchg
push
xor
add
inc
iret
jbe
or
call
xchg
jg
dec
adc
or
js
in
and
sub
mov
(bad)
or
pop
(bad)
daa
jmp
or
nop
gs
out
in
in
sahf
lds
jge
sbb
mov
ss
in
mov
pop
adc
mov
ss
int
test
addr16
push
push
out
sub
das
mov
iret
shr
fdivr
mul
hlt
bound
push
sub
in
mov
push
cmp
push
jge
sub
stc
cmps
aam
jecxz
add
push
cmp
ror
push
xchg
cwde
stc
or
sahf
jb
test
xchg
and
(bad)
(bad)
xor
aas
scas
dec
cmp
inc
pop
call
pop
push
out
jge
sub
lahf
sti
sbb
add
and
inc
push
mov
shl
sbb
cmp
xchg
in
adc
sbb
jo
lds
daa
or
push
add
imul
mov
int
(bad)
sahf
lods
ds
push
push
inc
fs
jl
out
mov
pop
idiv
sahf
push
mov
dec
sub
ret
fld
push
jle
sbb
call
jo
xlat
push
xchg
sub
and
pop
stos
div
ins
jmp
jmp
das
dec
jno
push
iret
es
cmps
cmp
fs
pop
lahf
cmc
lods
mov
cld
movs
fwait
in
and
push
mov
in
stc
and
dec
push
xchg
push
cmp
loopne
jo
jae
test
jno
sbb
je
cmp
dec
pop
pop
sub
mov
sub
dec
mov
jg
aam
xchg
cwde
repnz
jo
adc
aas
ds
fs
arpl
in
leave
or
call
pop
and
rcl
dec
adc
pop
aas
lahf
mov
or
jg
ja
mov
pop
adc
mov
test
shl
cdq
mov
inc
lock
outs
inc
pop
test
imul
leave
jecxz
std
pop
nop
mov
jecxz
and
jno
xchg
dec
gs
clc
mov
jmp
cmps
fdivrp
fiadd
aas
in
or
ins
mov
sbb
jo
add
cs
add
or
repz
adc
repz
rcr
xor
push
jp
dec
test
dec
dec
ja
ret
das
adc
inc
mov
shr
icebp
xchg
cmc
xlat
mov
xchg
cmp
push
or
ds
sub
outs
test
sahf
xchg
mov
stc
fimul
hlt
or
and
xchg
mov
sti
call
jne
ficomp
jmp
push
pop
xchg
jle
add
js
cmp
jno
jle
jecxz
jb
inc
aaa
sbb
in
and
push
pop
jle
cmps
inc
xor
xchg
xchg
inc
(bad)
cli
xsaveopt
(bad)
xor
pushw
aas
dec
cmp
jg
leave
inc
(bad)
fdiv
mov
(bad)
adc
add
sbb
setbe
push
pop
and
dec
push
enter
cmp
push
(bad)
cmp
pop
jg
cmp
mov
pop
dec
push
inc
sub
pop
call
mov
inc
inc
lea
or
inc
sub
retf
push
mov
push
jbe
sub
xchg
sbb
fidivr
jne
(bad)
in
ss
lds
hlt
dec
in
in
dec
popa
or
inc
xlat
ja
push
or
cs
fs
(bad)
js
mov
or
inc
mov
ja
dec
push
xchg
jne
pop
push
dec
and
gs
test
fcomip
push
sbb
fdiv
cmp
adc
fistp
retf
sbb
(bad)
push
stc
mov
into
cmp
sub
xor
addr16
and
xlat
inc
ror
ret
das
pop
pushf
cli
adc
in
add
or
adc
xor
pop
pop
jecxz
inc
mov
xor
add
scas
xchg
fnstenv
push
shr
xchg
in
leave
fldenv
cmp
call
ret
ds
and
test
addr16
cs
pop
push
ss
stos
mov
test
leave
adc
dec
adc
shl
js
vpor
jg
push
pop
push
sbb
fmul
loopne
lods
mov
inc
and
adc
and
iret
in
cld
sbb
pop
cmp
dec
or
mov
test
cld
test
pop
inc
(bad)
out
inc
lods
or
out
jle
pop
or
out
cli
cmp
sbb
(bad)
jle
in
ds
adc
xor
sahf
stc
fbstp
jle
sub
mov
test
inc
adc
imul
jmp
cmc
fadd
adc
inc
out
sbb
je
mov
add
inc
pop
or
xacquire
mov
push
sub
sahf
shl
xchg
bnd
data16
and
jae
sub
xor
aam
push
popf
adc
dec
aad
dec
lock
sub
and
pop
call
(bad)
adc
stos
push
aam
cld
imul
scas
pop
iret
jo
jle
cmp
pop
mov
jmp
jmp
repz
cmp
mov
xchg
push
add
inc
or
or
xor
or
jg
pop
mov
and
cmps
and
les
jbe
scas
cld
test
stos
pusha
jns
out
pusha
or
add
clc
gs
xor
sti
ds
pop
scas
xchg
and
push
ret
sar
cli
retf
repz
out
pop
(bad)
jmp
mov
adc
out
inc
mov
mov
jbe
dec
mov
add
stc
sub
cmp
shr
mov
jle
inc
jg
inc
and
cld
push
scas
mov
shr
js
xchg
mov
sub
or
fisttp
sub
mov
mov
xor
popa
mov
dec
dec
in
inc
out
movs
mov
cmps
movs
stos
xlat
adc
fld
cmp
aam
push
(bad)
retf
lods
in
pop
aas
data16
jnp
pop
mov
push
and
xor
iret
int3
lds
xchg
jecxz
push
jmp
inc
cmc
push
imul
in
test
cwde
test
fild
pusha
mov
fs
call
jnp
adc
fdiv
(bad)
ja
inc
jle
cmp
push
aam
pop
add
fsubr
nop
mov
add
sub
lods
inc
loope
vpmullw
hlt
jb
mov
inc
push
cdq
mov
ds
scas
xchg
lods
mov
retf
popa
call
jecxz
loop
push
pop
dec
lock
popf
xlat
push
mov
jae
xchg
push
push
jb
cmp
and
mov
into
jge
add
sub
outs
cli
cmp
pop
(bad)
and
bound
inc
add
xchg
les
mov
in
pop
ds
mov
js
xor
data16
int
rol
addr16
mov
push
mov
out
xchg
jg
cmp
dec
push
xchg
div
icebp
and
sahf
mov
fadd
cmps
mov
jbe
bound
ret
xor
dec
movs
(bad)
jmp
daa
add
mov
mov
and
gs
inc
push
push
sti
and
(bad)
pop
push
dec
mov
test
stos
or
cmp
mov
or
cmp
sar
jp
jmp
dec
dec
stc
xlat
push
lods
adc
push
add
cmps
xchg
and
in
mov
push
mov
cmp
sbb
push
call
fcomp
xor
ins
cs
pop
sub
stos
sbb
dec
xchg
xor
jns
fidiv
(bad)
cmc
xor
scas
jnp
xchg
mov
adc
push
push
enter
ins
push
jo
ret
lea
sub
adc
enter
out
fwait
psrld
and
jp
add
jo
xlat
(bad)
enter
cmp
mov
pop
sbb
jb
sub
xchg
into
mov
pushf
mov
mov
pop
dec
push
cmp
cld
inc
outs
xchg
adc
sbb
js
je
xchg
or
cmp
sti
stc
ror
mov
cmp
ret
out
lds
sub
mov
jmp
mov
pop
(bad)
aaa
test
xchg
pop
nop
out
dec
arpl
addr16
and
cwde
pushf
cli
inc
push
enter
adc
imul
mov
mov
inc
lods
xchg
ja
mov
xchg
mov
xchg
(bad)
cmp
(bad)
js
ds
mov
mov
mov
jp
and
lods
sub
add
lahf
pusha
loope
imul
pop
dec
mov
push
(bad)
in
mov
inc
retf
add
jge
mov
push
out
neg
pop
idiv
mov
mov
int3
arpl
mov
and
adc
iret
out
popf
dec
repnz
cld
push
sti
pop
jae
sahf
xor
inc
(bad)
fbstp
mov
mov
jge
sub
sbb
retf
mov
mov
stos
outs
or
imul
cwde
jle
cmps
xor
das
in
mov
xchg
lahf
jle
adc
and
and
lods
leave
das
sub
in
push
outs
mov
repnz
in
mov
pop
xor
mov
(bad)
arpl
push
sub
adc
sbb
dec
aam
mov
jbe
mov
pusha
leave
data16
lahf
test
ret
dec
retf
lds
ins
inc
cli
loop
mov
outs
int
ins
icebp
(bad)
enter
pop
sbb
jno
lods
xor
cmp
mov
jo
inc
or
enter
imul
ret
outs
push
test
sbb
and
push
push
retf
jmp
shl
mov
sub
fcmovnbe
test
mov
mov
sub
ret
mov
mov
arpl
and
sti
rcl
cmc
inc
mov
cwde
clc
jb
lahf
mov
sahf
sub
mov
inc
repz
cmp
(bad)
push
out
jne
loop
pop
inc
mov
pop
pop
xchg
mov
mov
imul
cmp
push
xor
dec
ds
inc
daa
inc
cmp
shl
loop
bound
add
pop
mov
cmp
imul
mov
and
mov
inc
adc
mov
adc
inc
out
add
dec
add
mov
sbb
jle
push
dec
div
sub
mov
scas
ss
inc
push
ins
mov
lock
outs
cdq
adc
xor
out
adc
into
pop
ins
mov
dec
sub
scas
test
lods
out
pushf
sbb
fisttp
data16
xchg
dec
pusha
cwde
sahf
retf
inc
jecxz
retf
sbb
xlat
pop
mov
mov
push
in
movs
mov
cmps
and
fistp
hlt
icebp
adc
(bad)
jecxz
movs
mov
movups
xchg
repnz
scas
(bad)
and
add
push
push
in
(bad)
addr16
(bad)
jns
mov
cmp
imul
fdivr
ss
jns
mov
fwait
inc
popa
xor
retf
arpl
lea
shl
ins
out
xchg
cmc
inc
jns
push
pop
mov
and
into
out
mov
and
popf
xchg
jbe
pop
push
jno
cmp
int
cmp
ret
dec
sbb
call
sbb
imul
in
add
movs
and
mov
cmc
jmp
inc
adc
or
mov
cld
cwde
jge
sub
in
push
push
sub
test
repz
movs
jb
stc
dec
add
pop
xchg
repnz
jbe
mov
cmp
aad
push
call
fldenv
sub
stos
lds
aam
add
jle
cmps
jb
dec
or
mov
xor
xor
in
dec
loop
ins
and
xchg
test
enter
xor
pop
nop
and
mov
sbb
pop
pop
mov
clc
and
in
cmps
jmp
mov
call
pop
pop
fbstp
(bad)
aas
push
sbb
jg
stc
jl
xor
test
adc
or
mov
cmps
cmp
repz
xor
inc
sub
out
repz
dec
in
adc
mov
(bad)
mov
push
enter
adc
xchg
arpl
stos
jg
cmp
inc
push
lds
mov
pop
inc
pop
xor
xor
or
sbb
xor
jmp
ret
mov
push
jae
dec
pop
fcomp
cwde
aas
sbb
sbb
mov
sahf
pop
mov
mov
cmp
fcmovu
cli
cmp
cmp
inc
dec
push
mov
mov
fcom
data16
and
ins
or
inc
mov
dec
sub
fs
xchg
mov
push
add
xlat
push
ins
mov
bound
pushf
idiv
push
dec
ja
xchg
pop
mov
mov
iret
(bad)
aad
push
loop
push
aas
es
push
mov
ins
push
idiv
push
pop
shl
xor
fs
or
jg
enter
and
sub
in
into
mov
sbb
pop
jae
mov
dec
pop
inc
sub
and
or
ret
cwde
xor
sub
test
xchg
lahf
or
push
bound
and
or
sar
repnz
out
movs
cs
arpl
(bad)
mov
cmp
ficom
cld
out
test
and
pop
lods
out
add
call
popf
popf
jmp
outs
into
inc
ret
sub
ss
and
cmps
jne
cmc
jmp
or
(bad)
sar
xchg
jecxz
ja
jnp
jne
ins
xchg
sub
xor
or
xor
scas
out
push
jbe
sbb
add
mov
cmc
sub
ins
das
jl
out
ja
sbb
cwde
fdiv
cmc
sahf
aam
sqrtps
ss
clc
into
lahf
dec
mov
ins
pop
sbb
addr16
inc
outs
bound
out
popf
jnp
sbb
pop
cmp
and
cmp
push
mov
repnz
in
adc
(bad)
loop
iret
mov
cmps
jl
and
jae
retf
outs
ret
push
nop
or
out
inc
mov
dec
ins
ins
mov
jmp
daa
pop
mov
repz
loope
mov
cmp
das
mov
cmp
sahf
les
add
pop
mov
test
mov
add
ds
loopne
jmp
cmps
lahf
gs
(bad)
iret
adc
pop
cmp
repnz
jmp
loope
scas
adc
push
cmp
inc
mov
push
jg
dec
aam
xor
push
retf
sbb
adc
mov
jno
push
xor
add
mov
loope
adc
shr
(bad)
pusha
cdq
ins
push
fmulp
jno
fdiv
fs
xor
push
in
lods
dec
and
cmc
mov
pop
popf
xlat
(bad)
loop
int
inc
popf
fwait
pop
enter
dec
cmp
lock
jg
out
add
jmp
pusha
or
jg
xchg
sbb
sub
inc
fist
xor
dec
(bad)
xor
or
scas
jne
inc
mov
cdq
sub
icebp
mov
lahf
outs
inc
pop
icebp
mov
es
lods
int3
outs
adc
in
loopne
retf
in
cli
pop
in
and
in
or
test
pop
jno
pop
fistp
neg
and
ja
push
cmp
call
fxch
mov
cmc
sti
loopne
dec
pop
outs
sub
(bad)
mov
xchg
xchg
jne
cmps
xor
mov
dec
inc
cwde
add
jnp
sbb
repnz
test
aas
lahf
icebp
or
arpl
mov
pop
data16
xor
ret
in
or
cmp
cs
sar
cli
xor
pop
imul
test
scas
(bad)
(bad)
dec
lods
shl
retf
jle
into
loop
or
loop
cmps
mov
sub
add
xchg
dec
int3
out
ficom
popf
jmp
fwait
(bad)
pop
mov
ds
lds
lea
jno
and
outs
push
dec
test
(bad)
jmp
jecxz
mov
or
retf
xor
xor
and
addr16
or
xor
dec
retf
fnstenv
and
fisttp
push
sbb
lock
in
push
mov
cli
pop
or
pop
frndint
retf
pop
cmp
push
js
inc
mov
fld
jg
xchg
out
jmp
mov
sbb
pushf
xchg
lea
mov
das
outs
daa
jbe
lods
add
or
loope
push
inc
(bad)
and
cld
adc
dec
jp
aaa
sar
xor
ds
or
inc
not
pop
xchg
and
dec
std
jle
sbb
retf
aaa
sbb
daa
mov
sbb
adc
cli
xchg
cmp
repnz
cmp
scas
jp
jmp
in
xlat
shl
imul
ret
hlt
and
dec
or
sbb
mov
or
fsubr
dec
retf
sub
cdq
xchg
sahf
jecxz
movd
xchg
sbb
fimul
fbstp
in
and
in
push
mov
lock
out
in
out
push
lods
out
xchg
push
jnp
shl
nop
adc
push
scas
mov
arpl
push
clc
std
add
into
out
repz
add
mov
scas
test
sbb
stos
test
xchg
loop
cli
std
add
inc
xor
xchg
cmp
(bad)
push
aam
jp
in
xchg
loopne
xchg
xchg
mov
rol
in
pop
pusha
leave
push
push
push
xchg
je
or
enter
pushf
mov
add
out
fstp
jg
mov
jl
(bad)
pop
rol
mov
das
fnstenv
push
or
(bad)
in
xor
add
cmps
into
enter
pop
mov
idiv
addr16
enter
jo
aam
test
stos
push
inc
cwde
jbe
mov
cmp
mov
fadd
out
mov
jp
dec
cmp
adc
aaa
cmps
fidiv
popf
arpl
push
push
(bad)
sbb
outs
test
mov
or
popa
out
int3
jns
call
cmovg
or
xlat
jmp
xor
mov
ror
push
mov
sbb
cmc
sub
dec
outs
ret
imul
mov
dec
sub
sub
movups
shl
push
std
pop
pop
inc
push
xor
dec
(bad)
cli
idiv
inc
sub
fmul
ins
jmp
pop
pushf
dec
xchg
addr16
mov
out
push
loope
jnp
stc
pop
arpl
cmc
cmps
or
fadd
jo
sbb
stos
int3
arpl
sbb
add
jle
push
(bad)
cmp
mov
shl
mov
cld
call
std
fwait
pusha
ja
addr16
out
pop
popa
xchg
imul
mov
add
enter
ret
(bad)
imul
dec
push
jae
inc
lock
int3
fdivp
movs
pop
ret
inc
mov
aad
mov
mov
mov
add
mov
dec
in
push
mov
std
or
pop
enter
bnd
xchg
cmp
jbe
adc
sti
xor
jae
test
mov
rol
repnz
cmp
sbb
sub
dec
jl
clc
bound
adc
rcl
call
ret
int
cmp
mov
xchg
and
fcomp
ins
mov
sub
les
push
mov
push
push
mov
mov
aaa
js
dec
pop
mov
pop
loope
mov
scas
stos
frstor
add
push
jmp
shr
push
push
pop
nop
add
fdivr
mov
fbld
xor
or
pop
retf
out
mov
aam
pop
je
and
mov
popf
clc
addr16
out
shl
mov
je
inc
scas
jns
and
dec
(bad)
mov
inc
mov
xchg
ins
xor
fld
gs
je
(bad)
push
movs
adc
pop
add
push
and
mov
mov
xchg
add
popf
or
xor
stc
xchg
jne
ror
cmps
dec
ins
call
jnp
leave
lea
mov
push
sub
jo
xchg
mov
cs
and
and
push
dec
sbb
or
fdiv
out
mov
ss
adc
cmps
(bad)
clc
or
movs
jae
(bad)
jbe
mov
or
scas
or
sahf
int
sub
cld
sub
push
ja
cmp
xchg
mov
mov
in
arpl
lea
imul
cli
into
cmp
repnz
add
add
xchg
lea
sar
icebp
test
mov
aaa
mov
fstp
(bad)
push
cmc
cmps
idiv
jne
(bad)
neg
sub
shr
outs
add
dec
fidiv
ret
mov
mov
test
gs
jne
sbb
cld
pop
call
mov
push
cld
cwde
aad
movs
pop
xlat
dec
xchg
add
xor
mov
cmp
fstp
sub
call
outs
lds
sbb
add
gs
cli
lds
enter
mov
data16
jge
fld
retf
int3
add
retf
ret
add
xor
and
out
mov
lods
dec
push
lods
test
mov
mov
ja
cmp
adc
or
mov
popa
ret
adc
loope
fcom
sub
or
stc
cli
rcr
std
sbb
aaa
push
gs
dec
leave
sbb
repz
cmp
mov
or
push
lods
xchg
add
xor
pop
or
pop
pop
dec
add
sar
scas
fsub
int
lock
pop
daa
inc
jns
(bad)
and
mov
dec
pop
and
(bad)
fwait
loop
out
jno
fidivr
xlat
cmp
push
sub
mov
jle
add
mov
sbb
cmc
push
lock
xchg
out
cdq
popf
xchg
pushf
out
lods
or
lock
lods
arpl
inc
fdiv
fild
push
sbb
inc
popf
push
dec
sbb
cwde
ds
imul
inc
add
mov
pmuludq
inc
add
je
retf
mov
jge
ins
xchg
or
cwde
fdiv
add
pop
dec
xchg
or
pop
popa
int3
and
fisub
sub
mov
jg
and
es
jnp
sbb
popa
sbb
fldenv
hlt
movs
jbe
cld
bnd
cmps
jmp
and
mov
cdq
sbb
mov
popf
lods
sbb
cmp
jmp
js
hlt
adc
adc
es
push
xor
xchg
or
pop
aam
push
sti
out
xor
mov
in
pop
in
xor
mov
mov
add
cmps
add
mov
jmp
pop
adc
sub
pop
sbb
enter
(bad)
ss
shl
fsubr
mov
push
jg
mov
add
and
sti
mov
shl
sbb
xchg
mov
mov
ins
cmp
cmp
sahf
repz
add
cdq
xor
fild
sbb
bound
loopne
rcl
(bad)
pop
ss
push
sar
or
push
inc
add
mov
lahf
jns
in
cmp
ins
xchg
mov
add
push
mov
sub
and
or
jg
ins
and
test
int3
call
das
and
mov
out
mov
clc
loop
dec
mov
(bad)
sub
jns
aaa
fs
mov
xchg
pop
(bad)
or
cld
inc
imul
jne
pop
int3
ins
leave
lea
out
push
pop
lea
(bad)
scas
sbb
jo
(bad)
jnp
repnz
and
xchg
out
mov
lahf
cmps
add
xor
scas
jmp
sub
es
mov
mov
jb
cs
(bad)
(bad)
sub
and
and
rol
cdq
or
and
stos
mov
jno
add
in
inc
push
xor
mov
xchg
call
xor
fnstenv
(bad)
or
xchg
mov
ds
rcr
add
mov
out
and
mov
adc
sbb
jg
push
in
xchg
fstp
jl
jmp
cld
sub
paddd
pop
jl
ss
ret
je
movs
sub
xlat
add
outs
xor
add
jmp
out
xor
lods
ins
mov
inc
inc
retf
jne
or
mov
lea
fldcw
lea
mov
push
in
ja
ret
popf
mov
fimul
sbb
imul
adc
test
outs
pop
sub
loopne
and
lea
das
jg
enter
mov
adc
sbb
xor
mov
cmp
xchg
outs
js
lods
push
jge
adc
jp
fnsave
mov
ins
mov
aaa
jnp
stos
push
xchg
xchg
sbb
pusha
jae
mov
inc
popf
pop
xor
jl
jle
or
vunpckhpd
dec
inc
push
xchg
fwait
jnp
cs
cmc
sub
fdivrp
jo
enter
add
cmp
jns
mov
jmp
lock
cmp
add
into
jne
adc
push
aaa
mov
dec
aam
inc
pop
add
(bad)
enter
enter
(bad)
(bad)
(bad)
lods
fdiv
xor
inc
fist
sti
sub
(bad)
int3
add
movs
mov
fcomp
lock
test
das
data16
cmp
fsub
ds
jne
sar
jge
sub
int
xor
push
cwde
add
xchg
jg
dec
(bad)
das
xchg
add
ds
cwde
xor
pop
mov
dec
sbb
mov
popa
pusha
inc
int3
inc
mov
addr16
and
xor
or
dec
test
push
lds
pop
jmp
push
in
fs
scas
ret
mov
in
xor
mov
pop
in
jle
imul
loop
out
inc
mov
xor
shl
nop
mov
jb
inc
xchg
jo
rcl
or
inc
ret
fldcw
jae
in
jne
in
popw
sti
adc
dec
cmps
sub
(bad)
arpl
ins
adc
or
xor
lds
sub
pop
cmp
inc
xchg
jno
(bad)
jae
ret
aas
ss
inc
mov
lds
inc
loop
cmc
sbb
push
mov
bound
ret
or
dec
inc
dec
and
test
dec
retf
shld
mov
adc
jmp
and
in
out
cmp
pop
or
adc
(bad)
cmps
push
pusha
pop
sbb
and
packsswb
lods
mov
ds
adc
pop
lds
xchg
adc
dec
popa
mov
mov
aas
jp
rcl
mov
jl
xlat
jmp
mov
mov
sbb
mov
fucomi
or
push
cmps
retf
and
dec
xor
adc
sub
retf
or
sbb
sbb
mov
pop
(bad)
cmc
pop
pop
jbe
aas
nop
or
stc
add
cmp
pop
test
pop
sbb
jno
cmp
enter
fbld
stos
and
add
shr
mov
movs
cmp
sub
fdiv
(bad)
in
push
fprem1
fwait
mov
mov
cmp
sbb
jp
mov
inc
cmp
inc
jne
jl
mov
dec
aaa
inc
sbb
jnp
nop
loopne
movs
neg
xor
xchg
pop
(bad)
leave
add
pushf
scas
fdivp
popf
xchg
or
or
inc
xchg
in
mov
cmps
sar
lds
stos
ret
push
add
scas
jle
or
mov
xchg
xor
sbb
xlat
in
out
sbb
fsubp
rol
fimul
pop
xor
jb
loope
push
in
loop
xor
add
sbb
jmp
cdq
xchg
scas
push
retf
add
ds
lods
lds
add
cld
int3
jae
outs
ret
repz
cmp
test
inc
rcr
int3
inc
mov
ja
inc
int3
fcomp
bound
jbe
(bad)
jbe
mov
xor
add
pop
sub
(bad)
in
inc
xor
movs
jl
retf
shr
je
fwait
mov
adc
jno
cmp
or
or
or
leave
add
fcomp
jge
xor
push
cld
ds
or
mov
fdivr
pop
xor
jnp
out
pop
mov
out
adc
or
data16
or
retf
cmp
and
call
mov
lods
dec
dec
push
movs
sub
xor
jp
and
in
paddd
mov
push
pop
mov
js
mul
mov
fldenv
jmp
cwde
xor
je
adc
lds
pop
push
lds
add
cdq
cwde
sub
mov
push
inc
xchg
xchg
call
push
jg
mov
xchg
in
and
cmc
inc
push
mov
mov
cmp
cs
mov
and
mov
cs
movs
sbb
nop
(bad)
call
xchg
ds
rcl
retf
ret
fcmove
push
stos
int3
pop
jmp
fist
mov
jmp
test
sub
mov
push
daa
dec
mov
add
popa
and
ins
retf
ins
inc
scas
fld
lea
adc
cli
and
loop
cld
les
sahf
repnz
cmp
jp
sbb
ins
in
adc
shl
jns
mov
ins
sbb
pusha
(bad)
aam
mov
jae
sbb
mov
or
cmps
int
dec
add
dec
xor
data16
ret
dec
movs
push
xor
mov
mov
pusha
mov
aaa
dec
and
xchg
push
push
adc
shl
popa
mov
aas
add
jno
pop
ins
xchg
int
sbb
and
cs
inc
fs
out
jmp
or
out
dec
or
xchg
into
fs
fcmovnb
inc
icebp
push
add
or
test
test
fisub
push
imul
sysenter
push
mov
out
imul
cmp
cli
daa
jge
sbb
jmp
fdivp
pusha
push
inc
pushf
(bad)
jge
push
xor
push
adc
jecxz
outs
lahf
pop
inc
mov
sar
sub
je
mov
mov
mov
xchg
jl
push
imul
push
imul
(bad)
lar
mov
mov
xchg
retf
sbb
pop
pop
pop
(bad)
fdivr
inc
jno
ror
mov
lods
or
scas
ins
outs
add
lods
adc
shl
jge
sbb
(bad)
aad
push
mov
mov
movs
out
lds
aam
leave
push
push
mov
push
lods
dec
popa
pusha
mov
hlt
fstp
pop
adc
lods
lock
es
sbb
jge
push
mov
imul
jecxz
rcr
jle
pop
cmp
push
loopne
and
push
(bad)
repnz
mov
adc
fnstcw
stc
sub
jne
xchg
in
fsub
pushf
dec
(bad)
bound
js
cwde
fisttp
adc
shl
out
out
ror
loope
adc
or
int
ds
(bad)
cmps
mov
and
mov
sub
push
fsubr
faddp
fldcw
xchg
jmp
jo
pop
pusha
xor
sahf
mov
scas
jmp
jo
push
aad
add
xor
mov
movs
rcr
out
test
push
mov
mov
sahf
sub
mov
retf
popf
sbb
add
xor
loopne
xor
pop
inc
enter
into
loopne
xor
arpl
mov
sub
call
loopne
pop
stos
(bad)
int
push
mov
pushf
int
cmp
inc
and
push
ret
mov
cmps
leave
movs
fadd
xor
aaa
mov
leave
pop
add
push
jb
std
inc
inc
sbb
repnz
and
mov
mov
aaa
cmps
push
sysret
mov
adc
xor
dec
xor
add
ror
or
jge
jmp
adc
mov
or
sub
mov
push
(bad)
iret
cmp
ds
xlat
aas
sbb
(bad)
addr16
aas
arpl
add
out
scas
mov
jno
pushf
jns
or
cmp
imul
mov
jb
xchg
icebp
loopne
mov
pusha
clc
fcom
pop
cmp
loope
jns
mul
daa
mov
pop
shl
dec
loop
inc
inc
add
in
arpl
mov
imul
mov
ja
mov
mov
out
and
ss
(bad)
mov
jp
adc
stc
push
sahf
and
in
cmc
sub
fisub
sub
test
push
push
pushf
inc
ds
popa
into
scas
xlat
sbb
arpl
iret
xchg
push
or
mov
sub
mov
aas
sbb
sbb
cmp
into
ret
and
fdivrp
pop
outs
je
sub
push
xchg
std
pop
aad
test
inc
and
jg
mov
jo
xor
(bad)
out
dec
push
cmc
sub
jbe
in
scas
sbb
stos
das
xlat
psrlq
outs
sbb
ja
dec
inc
iret
leave
std
cmc
cmp
outs
call
sbb
jno
into
stos
adc
cmc
int3
enter
arpl
adc
dec
mov
pop
ss
mov
(bad)
in
loopne
sub
xchg
inc
shl
or
mov
jg
shl
out
out
mov
sahf
in
inc
fdivr
movs
leave
mov
(bad)
ficom
jne
and
sti
and
add
in
jb
xor
or
call
loope
push
xor
sub
cmp
dec
push
dec
mov
sub
sbb
ins
mov
cmp
retf
out
or
cmc
out
mov
jb
shl
popa
and
adc
in
(bad)
ja
fwait
push
inc
popf
adc
sub
add
jp
or
in
xchg
xchg
test
pop
pop
cli
in
sti
stos
out
retf
mov
inc
test
xor
mov
es
sti
mov
out
mov
dec
xchg
jp
lds
das
jecxz
xor
ja
pop
push
cwde
movs
scas
push
dec
and
pop
mov
aam
pusha
lods
icebp
pop
cmps
jmp
jl
lock
adc
test
repz
dec
ret
add
retf
outs
mov
mov
iret
jne
mov
xchg
mov
and
cmp
add
sbb
push
out
mov
dec
xchg
and
or
ret
cwde
adc
outs
add
leave
sub
pop
lds
data16
das
aaa
dec
sahf
dec
xor
and
gs
retf
fs
(bad)
fnstsw
add
add
mov
cmp
mov
mov
jae
fidivr
and
xchg
push
sub
jge
dec
jmp
(bad)
gs
call
sub
sub
mov
rol
jnp
ret
mov
inc
dec
mov
js
pop
push
or
push
push
iret
sti
mov
enter
jp
clc
test
pushf
xchg
(bad)
or
fld
out
xlat
js
stc
mov
push
stos
xchg
or
fdivr
adc
sub
lods
lahf
test
push
test
xor
push
sub
shl
or
and
add
add
adc
push
scas
js
sbb
add
pop
lock
cmp
mov
repnz
(bad)
add
(bad)
(bad)
sub
lds
test
inc
(bad)
(bad)
dec
test
leave
out
inc
add
pop
dec
push
xchg
bound
cli
fisubr
pop
sbb
jns
xor
imul
ror
xor
jmp
cmp
scas
adc
dec
inc
(bad)
retf
mov
jne
adc
mov
mov
ins
adc
mov
sub
push
in
ror
int3
sbb
dec
fnstcw
xlat
in
je
sbb
dec
ficomp
fwait
add
dec
mov
add
inc
xor
das
or
outs
stos
in
imul
xchg
add
mov
lea
sub
in
push
adc
jae
lock
push
adc
movs
jae
cs
add
in
cmps
int3
pop
or
aas
cmp
sub
xor
cmps
dec
xor
addr16
aaa
adc
repnz
xchg
dec
jle
cmp
iret
sbb
cdq
mov
daa
fisub
mov
cmp
loope
push
adc
cmp
push
loopne
push
stos
xchg
mov
mov
retf
jo
loope
and
mov
mov
in
xor
daa
dec
mov
out
push
es
adc
jne
pusha
dec
(bad)
mov
mov
xor
cmp
cmp
mov
mov
icebp
push
sbb
rcl
dec
mov
sbb
sub
and
and
sahf
ja
call
and
(bad)
cmps
cmp
push
sub
fnstsw
cld
xchg
jle
add
ins
push
or
xchg
mov
pop
mov
shl
rcl
cmps
outs
stc
movs
xchg
in
mov
dec
fdivr
mov
stos
and
push
add
mov
mov
inc
cmps
jl
ins
push
icebp
arpl
loop
xchg
push
add
sub
enter
stos
push
pop
daa
aam
push
jl
xchg
mov
test
xchg
mov
sar
cmp
das
sar
das
call
mov
jmp
pop
test
mov
add
mov
add
jmp
fstp
xchg
out
adc
movs
sub
sbb
ss
icebp
(bad)
in
jecxz
jne
je
test
js
xchg
pop
cmp
rcl
stos
aas
sbb
lds
ja
bound
test
dec
mov
addr16
push
adc
pop
dec
push
out
out
nop
jmp
pop
out
in
sbb
les
mov
(bad)
pushf
mov
pop
fs
jle
in
shl
jbe
cmp
mov
add
movs
adc
(bad)
xlat
call
jl
inc
test
jno
or
pop
out
lea
mov
xchg
aam
jne
out
fwait
mov
cmp
push
push
mov
mov
or
add
cmps
movs
cmp
stos
stc
adc
test
gs
mov
scas
or
outs
test
mov
les
sbb
out
jge
repnz
jno
or
rdtsc
jbe
loope
stos
mov
add
or
mov
push
cmp
and
add
sub
in
mov
sub
mov
lods
pop
and
push
stos
or
les
cmp
aam
(bad)
(bad)
mov
pop
stc
pop
(bad)
scas
je
sub
pop
scas
cli
repnz
mov
fisub
std
mov
(bad)
stc
out
inc
and
mov
mov
ins
add
push
pop
(bad)
shr
xchg
mov
repnz
(bad)
hlt
jp
das
stc
xchg
push
xchg
xchg
ins
fbstp
sub
sub
cmps
cmp
neg
pop
mov
call
jge
daa
aaa
mov
mov
mov
out
jmp
mov
ins
mov
jo
call
lds
mov
dec
adc
dec
daa
xor
lahf
mov
cmp
push
out
mov
ja
cdq
fld
imul
sub
jnp
(bad)
aad
shr
lds
jae
addr16
push
and
push
imul
call
stos
(bad)
push
adc
push
fisttp
repz
xchg
ins
jecxz
mov
cmp
sub
sbb
loop
pop
jo
or
test
mov
inc
or
ret
mov
adc
dec
xchg
dec
push
icebp
push
ins
cmp
or
(bad)
pop
inc
jge
cmc
data16
fdivr
fwait
inc
adc
jns
inc
enter
jo
out
lea
cmp
mov
cmp
in
mov
add
xchg
push
and
mov
cmp
inc
nop
add
push
jle
mov
jmp
or
sub
sbb
in
or
aaa
(bad)
xor
les
xor
je
jo
xor
pushf
(bad)
cmp
imul
sub
inc
mov
dec
xchg
popf
sbb
dec
(bad)
iret
outs
mov
xor
les
or
fisttp
push
push
arpl
dec
(bad)
adc
xor
cmps
arpl
mov
xor
sub
or
faddp
es
stos
sub
mov
call
mov
mov
test
ds
mov
addr16
mov
pop
cmp
pop
jg
push
je
xchg
in
mov
jmp
es
in
adc
in
inc
int
push
inc
push
jl
sub
jp
cmp
and
out
retf
repnz
mov
pop
in
inc
adc
inc
or
push
imul
stos
push
push
jge
js
push
dec
xchg
push
sub
jg
movs
sub
je
xchg
inc
leave
loop
lods
mov
sub
inc
mov
adc
imul
and
test
jge
es
lock
shl
test
jp
sbb
xchg
fild
imul
jmp
fcmovnb
jne
mov
push
sub
mov
clc
cmp
retf
std
inc
je
(bad)
pop
mov
mov
pop
dec
call
movs
lahf
mov
sbb
popa
mov
fstp
fdivr
imul
cmp
pop
popa
xchg
sbb
xchg
ins
fcomp
inc
sti
adc
mov
mov
mov
lahf
mov
mov
xlat
and
test
mov
popf
into
dec
cmc
fisttp
stos
test
mov
pop
repz
aam
out
(bad)
xchg
or
frstor
rcl
dec
and
cmp
(bad)
sbb
mov
dec
inc
ja
xchg
xor
dec
out
xchg
(bad)
fwait
cs
xor
cmp
bnd
(bad)
call
sub
or
inc
stc
fisub
xor
fist
push
add
mov
cmp
cmp
lock
and
je
es
aas
jnp
jne
(bad)
sub
add
mov
lds
cld
scas
push
jp
push
scas
icebp
adc
ins
shl
gs
loop
cdq
xor
add
repz
test
out
adc
jns
ret
imul
jmp
bound
ins
jno
sbb
mov
push
adc
cmp
fst
lea
pop
push
pushf
or
jp
inc
neg
push
push
push
cmp
and
imul
jno
arpl
mul
sub
mov
xchg
push
ret
aaa
add
loope
pop
icebp
retf
mov
mov
pop
loop
mov
adc
xchg
fs
inc
add
je
cmp
cmp
mov
push
lds
aaa
hlt
test
mov
cld
dec
imul
pop
sbb
imul
movs
inc
adc
xor
mov
push
xor
mov
sub
fmulp
push
adc
and
sti
mov
cmp
xor
outs
cmc
or
shl
in
scas
test
sahf
imul
or
out
dec
mov
push
imul
xor
fnstcw
mov
sbb
mov
mov
adc
mov
or
sbb
sub
das
push
ds
cmp
mov
int
add
pop
push
or
and
je
mov
xor
sbb
and
sbb
xor
adc
sbb
inc
xchg
mov
cli
dec
sbb
jp
cld
fcom
pop
mov
scas
xlat
and
addr16
mov
or
mov
(bad)
repnz
nop
ja
aas
fbld
fild
pushw
adc
xor
retf
popa
mov
mov
jae
and
cmp
sbb
sahf
cmp
popa
hlt
sub
xchg
cmp
bound
(bad)
gs
ret
ret
dec
jl
pmulhw
jnp
mov
pop
cli
add
rcr
repz
or
jo
mov
lds
fwait
call
clc
xchg
mov
je
jne
xor
sbb
mov
or
rcl
jno
dec
jge
das
call
inc
and
xchg
ja
lock
sbb
xor
sbb
xchg
fbstp
loopne
mov
jnp
push
retf
in
mov
outs
jno
aad
pop
cdq
mov
mov
mov
dec
jge
mov
jne
clc
out
mov
int
test
rcl
pop
add
(bad)
fidiv
enter
push
cmp
sub
jl
push
ret
icebp
fcomp
outs
sbb
test
ss
mov
xor
sahf
mov
(bad)
sbb
imul
in
fstp
lds
std
(bad)
xchg
cmp
arpl
cwde
ss
(bad)
hlt
scas
or
out
inc
mov
pop
(bad)
xchg
aaa
movs
inc
inc
int
popa
ins
jp
retf
sub
xor
mov
in
inc
dec
out
mov
and
ret
arpl
or
push
dec
fldenv
mov
aad
daa
retf
mov
sar
or
push
push
jl
mov
retf
adc
arpl
push
mov
sub
jecxz
xor
cwde
sbb
adc
pop
add
clc
mov
mov
iret
ds
or
mov
(bad)
call
jns
icebp
inc
fsub
daa
cdq
stos
imul
retf
pusha
adc
mov
mov
inc
pop
cwde
(bad)
jns
dec
aad
push
xor
jns
pusha
int3
pusha
(bad)
fild
mov
pop
dec
mov
pusha
into
cmps
fnsave
and
or
and
lods
stc
repnz
in
adc
pop
mov
stos
enter
cmp
add
dec
mov
push
cdq
aad
sbb
lahf
add
cdq
out
cwde
mov
es
je
repz
shl
jmp
dec
je
(bad)
xor
xor
xor
repnz
mov
push
enter
jbe
sub
dec
xchg
pop
or
test
movs
jle
mov
mov
sbb
mov
xor
test
ror
mov
mov
xor
add
adc
sahf
hlt
pop
pop
push
imul
xchg
sub
test
stos
bnd
in
lods
dec
in
xor
xor
aas
popa
inc
jmp
bound
test
mov
mov
adc
dec
std
sub
mov
cmp
in
push
addr16
jnp
adc
cld
inc
fimul
pop
in
push
jmp
ins
sbb
lea
pop
and
mov
fdiv
popa
cmp
es
daa
or
cdq
popa
inc
sbb
leave
or
fnstenv
cmova
pop
pop
push
jmp
in
push
outs
movs
ja
aaa
fcomp
ficomp
fcom
imul
aad
test
fst
adc
ret
jo
push
movs
pop
cli
daa
adc
dec
inc
sti
punpcklwd
dec
xor
sub
(bad)
push
jbe
mov
mov
(bad)
into
push
scas
xchg
mov
jge
adc
and
dec
stos
jp
into
rsm
pop
pop
push
sbb
xor
mov
mov
jno
pushf
adc
add
sub
out
cmp
mov
push
adc
inc
rcl
adc
(bad)
adc
pop
pop
inc
shr
cmp
clc
dec
adc
inc
adc
adc
mov
ret
jg
popa
jae
push
test
sar
fwait
sub
fimul
pusha
mov
mov
out
jno
sub
imul
add
adc
div
add
cmp
out
gs
push
cli
(bad)
test
mov
push
mov
mul
ds
sar
cmp
or
clc
out
nop
shrd
xchg
(bad)
out
lds
xlat
cmp
and
mov
mov
and
mov
xchg
leave
mov
jnp
cmp
fldcw
test
inc
xor
lods
sub
add
out
cmp
pusha
push
or
and
mov
out
outs
push
cdq
dec
pop
mov
or
mov
add
xor
nop
pop
cmp
leave
lds
inc
cwd
pushf
jne
mov
jle
xlat
lahf
fs
fdivr
mov
repnz
(bad)
fld
push
in
jo
movs
imul
retf
pop
jg
mov
jle
or
dec
arpl
aad
test
jl
sbb
sbb
xor
shl
adc
sub
mov
sub
loop
ret
xchg
xlat
loopne
(bad)
mov
(bad)
cmps
cli
mov
aad
mov
cli
frstor
mov
popa
les
sbb
cmp
jo
mov
lea
jns
div
jmp
enter
ss
clc
enter
mov
mov
add
(bad)
neg
mov
jle
xchg
jmp
xor
or
mov
mov
pop
loope
jmp
dec
cmove
aas
fs
mov
mov
call
inc
add
mov
ror
imul
jne
mov
es
mov
clc
xlat
or
mov
in
ins
imul
push
mov
mov
outs
sbb
adc
dec
mov
fwait
xor
loope
dec
jnp
and
aas
jp
adc
cmc
push
adc
and
cwde
fs
push
jmp
int
(bad)
loopne
(bad)
je
(bad)
retf
pop
xchg
xor
movs
imul
xor
mov
not
jge
mov
lods
(bad)
out
add
(bad)
leave
dec
jle
xchg
push
es
mov
sbb
imul
sbb
sbb
push
jge
cld
aad
icebp
push
dec
shl
mov
sahf
xlat
es
jo
jnp
sbb
aaa
mov
out
and
scas
stos
xchg
cli
out
loope
xor
pop
dec
es
xor
shr
aaa
mov
fistp
cwde
push
int3
call
sub
sub
lahf
or
(bad)
cmp
or
adc
add
sub
fild
cmp
aaa
imul
push
adc
mul
jmp
adc
push
mov
mov
xor
push
jns
xchg
and
scas
xchg
pop
and
aad
ficomp
(bad)
or
(bad)
mov
dec
jg
dec
push
adc
adc
jmp
mov
je
and
lahf
idiv
xor
jge
in
mov
rcr
sub
repnz
or
xchg
mov
js
in
lahf
and
iret
stos
jge
pushf
test
ficomp
es
daa
jne
push
idiv
pop
stos
push
xor
mov
mov
mov
retf
xchg
sub
or
shr
das
out
pop
test
movs
retf
and
pop
rcr
cmp
sbb
popf
call
retf
sub
aad
and
sahf
xlat
ja
xchg
push
mov
jp
dec
add
in
fnstsw
fisttp
cmp
mov
or
pop
mov
into
(bad)
lahf
mov
push
jmp
jle
ret
rol
(bad)
sub
(bad)
outs
aaa
pop
retf
(bad)
push
cmp
mov
pop
imul
out
push
aam
sub
push
movq
aam
jnp
test
mov
mov
dec
dec
push
dec
cs
push
(bad)
enter
mov
jl
mov
push
das
scas
in
sub
lods
jns
or
mov
fdivr
stos
jl
xor
out
and
dec
in
stc
ret
shl
enter
repz
imul
retf
jne
ins
stos
icebp
fimul
icebp
mov
std
adc
movs
jecxz
mov
and
pop
xchg
ret
movs
push
dec
out
aaa
lds
jnp
fwait
scas
or
sub
mov
retf
rcl
popa
xchg
add
lock
pop
cdq
popf
rcr
dec
sub
enter
pusha
mov
sub
test
clc
jo
jo
push
test
hlt
sbb
jp
inc
cdq
mov
imul
ja
in
das
sti
mov
inc
pop
aas
and
(bad)
arpl
pushf
push
mov
cmc
in
lds
dec
je
jne
add
jmp
cwde
leave
mov
mov
mov
or
and
push
xchg
or
fcomp
cmp
xchg
push
iret
sbb
jl
dec
cmps
cmp
icebp
dec
add
aaa
call
mov
loopne
dec
fdiv
push
cmp
or
dec
pop
push
loopne
push
pop
mov
cs
enter
(bad)
sbb
jp
call
ret
(bad)
pop
jae
jmp
inc
sub
lods
fbld
mov
das
mov
xor
jmp
xchg
inc
sti
xor
xlat
fist
fstp
adc
mov
and
pop
or
jae
cmp
imul
outs
jo
and
loopne
out
(bad)
loopne
lea
mov
or
inc
add
sbb
sahf
(bad)
adc
push
or
ds
fwait
popa
mov
mov
xchg
cmps
inc
jle
sbb
xchg
popa
in
test
test
rcr
sub
cmp
mov
movs
sub
sbb
sbb
dec
push
jno
test
outs
and
ss
mov
loope
mov
ins
(bad)
pop
imul
sub
in
xor
outs
xchg
pop
xor
outs
push
fmul
shl
cmp
mov
adc
jbe
mov
addr16
test
cmp
hlt
out
nop
loope
mov
out
xchg
and
xchg
push
mov
jecxz
sbb
mov
push
pop
mov
dec
xchg
sbb
mov
data16
fcmovu
ror
and
xchg
sbb
outs
mov
xchg
mov
and
pop
mov
cmp
nop
enter
clc
cmp
popf
out
in
mov
push
inc
(bad)
adc
stc
cmp
lock
adc
or
jg
jmp
outs
pop
repnz
adc
ds
push
loop
adc
sub
sub
scas
sub
pop
mov
and
(bad)
(bad)
inc
mov
fild
aam
jns
jmp
xchg
int
stos
inc
(bad)
cmp
jno
not
aam
fmul
mov
rol
daa
sub
mov
loop
jg
adc
lods
xlat
out
mov
cmp
sub
sub
scas
clc
sub
push
mov
pop
push
xchg
or
add
sub
add
sub
xchg
push
adc
aad
inc
(bad)
call
and
sub
mov
mov
sbb
adc
lods
lods
jecxz
imul
(bad)
jp
fldcw
mov
fmul
in
fimul
sbb
push
mov
imul
mov
shr
mov
sbb
push
xchg
or
pop
repz
sbb
loope
push
fstp
outs
xlat
nop
push
mov
gs
mov
je
fisttp
mov
ins
lods
loope
mov
clc
xor
jp
adc
jp
movs
push
push
sbb
sub
ins
int
push
sub
push
add
push
cmp
sbb
test
gs
pop
leave
push
imul
adc
mov
push
dec
dec
or
lds
jmp
aad
test
call
mov
push
ror
mov
movs
fs
mov
push
mov
fidivr
xchg
push
pop
ret
imul
nop
mov
mov
scas
pop
aaa
pop
sub
lods
inc
test
add
int3
mov
mov
pop
fimul
pop
out
inc
movs
mov
popa
outs
push
inc
dec
stos
cmp
das
mov
lahf
test
scas
sbb
mov
push
jbe
pop
mov
addr16
sbb
call
pop
mov
xchg
xchg
push
jecxz
mov
cmp
and
push
push
lea
in
es
mov
scas
test
aam
inc
js
jb
cmps
lds
dec
jnp
push
inc
cmp
cmp
adc
adc
cld
add
repnz
outs
jle
pop
inc
retf
rep
xor
cmp
adc
fisttp
enter
push
mov
in
pop
in
dec
idiv
aas
(bad)
into
mov
push
cs
mov
mov
and
xor
daa
ret
rcl
add
mov
pusha
cmp
pop
sbb
(bad)
bound
push
jg
js
jmp
mov
xor
cmp
hlt
in
stc
or
repnz
pop
in
or
adc
dec
sub
inc
rol
fwait
sbb
stos
and
sbb
(bad)
ror
ss
xchg
lods
lods
push
lods
(bad)
or
mov
out
scas
xlat
fild
inc
sub
jnp
cmp
push
sub
movs
mov
push
dec
inc
xchg
mov
fdivr
jg
push
test
xor
rol
mov
mov
push
pop
xchg
test
mov
test
loopne
sub
mov
inc
(bad)
rol
out
or
xchg
mov
sar
push
cli
out
sahf
fdivr
lds
and
mov
dec
(bad)
lock
sbb
adc
mov
call
aaa
mov
jmp
push
in
mov
push
mov
xlat
adc
sbb
add
jae
dec
adc
daa
fiadd
lods
iret
mov
fs
loope
sub
mov
arpl
daa
mov
imul
(bad)
ins
add
sub
dec
pop
idiv
sbb
data16
(bad)
repnz
(bad)
out
sub
(bad)
in
mov
ret
mov
ja
sub
sbb
sbb
rol
adc
pop
mov
inc
xor
rol
jmp
rcr
sub
inc
cmp
lds
test
and
das
and
popf
test
sahf
inc
xchg
dec
mov
mov
retf
inc
xchg
pop
test
repnz
bound
call
cmps
rol
pop
xor
jmp
out
inc
push
mov
je
or
std
aas
pop
into
mov
mov
pop
push
and
hlt
mov
shl
stos
or
les
arpl
or
adc
add
in
push
icebp
mov
imul
push
inc
cld
das
mov
mov
les
fsubr
add
dec
mov
mov
neg
xlat
add
mov
es
push
and
fadd
cmp
xchg
add
sbb
das
mov
pop
pushf
mov
loop
fimul
arpl
pop
ret
mov
pop
xchg
ja
jnp
dec
repz
add
add
fsubr
xchg
jp
xchg
ins
mov
add
sbb
lea
xchg
sub
xchg
xchg
fs
clc
sbb
out
shl
in
aaa
xor
sub
sbb
es
mov
fwait
xchg
pop
sar
jl
adc
dec
pop
pop
call
cmp
add
popf
enter
push
mul
inc
in
in
mov
ss
pop
(bad)
push
rcr
pusha
ss
dec
icebp
jecxz
stos
jge
test
fimul
ror
xor
push
xchg
into
sbb
xor
jne
in
ret
mov
scas
dec
mov
js
xchg
xor
push
stos
push
dec
pop
pop
jno
adc
jnp
enter
or
pop
stos
test
cli
xor
shl
sbb
ror
aaa
adc
(bad)
sub
fdiv
cli
into
push
mov
rcl
mov
push
ret
sbb
dec
jmp
fs
jb
and
xor
rcl
sbb
repnz
sahf
push
xchg
cmp
or
into
sub
mov
in
pop
cmp
cmp
iret
mov
fadd
inc
popa
rol
leave
inc
mov
mov
mov
stc
mov
movs
jle
loop
cld
xchg
and
and
pop
outs
into
or
dec
lds
push
mov
add
add
loopne
repz
push
jmp
sub
shr
lods
pop
mov
sbb
or
arpl
xchg
fnstsw
inc
pop
push
int
je
push
stos
aas
data16
bndstx
in
jo
lahf
jmp
pop
(bad)
enter
(bad)
arpl
std
(bad)
pop
out
jo
call
mov
cli
cld
cmp
lock
lock
cwde
pop
in
sbb
shl
bswap
and
adc
dec
xchg
mov
ds
fnstcw
cmp
push
pop
mov
neg
push
push
ins
cmp
pop
xor
xchg
int
stos
(bad)
mov
outs
inc
mov
jmp
push
adc
mov
sub
cmp
pop
add
sbb
mov
add
xchg
push
out
inc
xchg
sbb
out
push
cmc
ja
mov
rcl
inc
out
cmp
leave
stc
pop
out
pop
loopne
sub
cmp
sbb
ret
inc
push
pushf
dec
fwait
lods
(bad)
pop
fistp
repz
cmp
jo
mov
rol
jmp
dec
push
jb
mov
pop
retf
mov
stos
movs
mov
mov
mov
push
mov
add
push
mov
xchg
cld
jo
std
jge
push
jle
and
sbb
and
loop
out
push
cmp
pop
mov
xchg
or
adc
mov
ins
xchg
and
cmp
movs
ja
shl
lods
ins
cmc
dec
sub
push
xor
int3
inc
aad
adc
push
pop
pop
arpl
fcom
xchg
pop
fdivr
pushf
sar
pop
mov
mov
sbb
imul
enter
lods
les
jl
pop
or
test
sahf
mov
and
adc
mov
adc
xchg
lock
scas
or
xor
lods
lds
inc
jle
sbb
int
fdivr
sbb
pop
outs
rcl
dec
xor
mov
ror
mov
push
hlt
(bad)
push
lds
repnz
shl
xor
lahf
imul
gs
out
cmp
lahf
mov
ds
clc
pop
pop
sbb
mov
push
scas
mov
jae
std
jb
mov
mov
mov
aas
das
test
mov
aaa
pop
ror
retfw
cmp
pop
xor
pop
cdq
out
scas
stos
pop
pushf
xor
fcom
fmul
lea
sbb
push
sbb
pop
push
test
fmul
cmps
dec
jae
cs
lahf
mov
cmp
sbb
jnp
mov
pop
pop
sti
mov
daa
(bad)
cli
add
rcl
inc
fldenv
add
pop
lock
jp
or
cmp
jecxz
mov
arpl
xor
jns
mov
movs
pop
(bad)
lods
mov
and
scas
jae
jl
call
mov
out
je
or
and
lods
nop
out
mov
sub
cmc
repnz
push
push
jecxz
retf
mov
sub
ins
mov
inc
dec
xor
das
mov
lahf
fimul
dec
les
repnz
mov
mov
mov
ins
jmp
mov
inc
pushf
add
adc
loopne
cwde
lds
mov
lock
inc
out
pop
in
into
adc
std
hlt
retf
and
mov
jmp
mov
xor
cdq
sub
mov
(bad)
pop
aad
sub
stc
xor
mov
xor
sar
sub
push
lock
jge
cmc
xchg
and
mov
push
push
and
pop
pop
mov
jp
push
pop
stos
das
or
stc
xchg
push
rcl
sar
push
stos
xor
cmp
xor
add
adc
jl
lods
enter
arpl
add
or
xchg
xor
(bad)
fnstenv
push
jbe
jb
inc
das
push
jl
jmp
js
sub
in
xchg
lds
and
sub
jmp
popf
dec
in
loopne
adc
sub
add
inc
scas
cld
ins
cld
adc
int3
pop
lahf
lahf
fisttp
not
push
imul
cmp
in
xchg
adc
stc
push
push
push
mov
add
fcomp
sbb
inc
fisub
push
adc
aam
jmp
jp
or
pop
jecxz
in
iret
xchg
and
or
aas
mov
jns
pop
xor
cdq
loopne
push
xchg
add
clc
aam
xor
mov
fnstcw
mov
inc
ds
add
jecxz
ins
jnp
movs
test
sbb
out
in
cmp
and
sub
inc
outs
stos
retf
fistp
int
sub
sbb
xor
mov
adc
add
(bad)
call
jmp
mov
cmp
dec
sti
test
jp
push
popf
mov
lock
mov
and
pop
cmp
lds
mov
fild
cmp
add
mov
out
and
cmp
cmps
inc
fild
fdiv
xor
and
xacquire
dec
sbb
call
jp
(bad)
xor
mov
xchg
rol
out
icebp
add
imul
inc
add
les
adc
jb
pop
das
cli
sbb
add
out
call
aam
je
stc
repz
mov
aad
popf
dec
sub
iret
rcl
mov
pop
add
xor
xchg
pop
push
repnz
xchg
dec
xchg
or
mov
jge
jecxz
mul
mov
jmp
(bad)
fild
add
div
jge
lock
mov
cmp
jmp
icebp
imul
sbb
(bad)
jne
pop
xor
pop
sbb
int
and
call
mov
sub
or
fistp
or
(bad)
and
and
push
or
out
xchg
into
adc
cld
adc
bswap
inc
cmp
xor
jl
xchg
ret
dec
xlat
cmp
lods
in
retf
loop
inc
movs
lahf
leave
lea
push
push
lock
les
xchg
and
bound
pop
fwait
push
cmp
imul
cmc
stc
mov
mul
(bad)
clc
rcr
adc
and
pop
or
cmp
ss
jo
es
(bad)
int
in
dec
pop
and
push
scas
dec
clc
fadd
mov
mov
push
jns
cdq
xor
sahf
sbb
fcmovnbe
loope
ja
mov
add
mov
cld
jg
test
mov
adc
ret
rcl
(bad)
push
sti
out
xchg
rcl
shl
cmps
mov
(bad)
xor
mov
inc
or
jmp
fidiv
adc
or
push
xor
ds
(bad)
popa
out
xchg
loop
mov
dec
mov
push
aas
stos
adc
ja
and
push
mov
fs
push
jno
cmp
adc
(bad)
jnp
mov
sub
mov
mov
xchg
lock
fsub
daa
pop
adc
sbb
fwait
and
movs
pop
(bad)
cmp
aas
in
(bad)
cli
stos
call
in
mov
or
retf
pusha
dec
les
sti
data16
sbb
cmp
push
push
data16
xchg
add
bound
pop
xchg
xchg
stos
xchg
add
(bad)
xor
mov
mov
test
mov
dec
push
xchg
inc
adc
fchs
mov
xchg
xchg
push
pop
dec
hlt
push
shl
addr16
inc
and
push
dec
daa
sub
mov
push
ss
adc
popf
or
fdivp
shr
adc
mov
nop
out
sbb
mov
sub
xchg
mov
in
dec
xlat
mov
push
xor
push
call
imul
lea
pop
loopne
rol
mov
scas
and
sti
test
pop
inc
imul
lahf
jnp
jp
stc
mov
pop
push
imul
adc
stc
scas
in
mov
inc
scas
rcl
fldenv
xlat
jne
jns
into
pop
pop
pop
sub
test
jmp
dec
int
aaa
sbb
or
cs
cmp
push
enter
adc
lock
pop
jp
mov
dec
sub
test
imul
mov
xchg
cmp
xor
retf
and
mov
add
pushf
sub
pop
das
lahf
add
nop
add
cmp
mov
mov
push
inc
test
mov
lea
jmp
or
and
je
sub
movs
inc
out
sub
xchg
es
sahf
cdq
jl
fist
cmc
xchg
xchg
mov
fs
in
dec
dec
ja
xor
pop
inc
shl
sbb
test
(bad)
sbb
push
imul
pop
pop
rcr
mov
mov
in
inc
cs
lock
out
dec
dec
sbb
jnp
push
ret
fdivp
xor
cmp
enter
lahf
aam
xchg
xchg
jne
and
adc
ror
(bad)
call
pop
call
cmp
mov
xchg
stos
mov
loop
mov
call
pop
movs
imul
iret
sub
fcmovne
or
in
and
add
push
sbb
(bad)
(bad)
arpl
fidivr
xor
pop
cmp
aad
add
xchg
mov
and
cmps
or
add
aaa
push
dec
or
mov
adc
xchg
stos
pop
xor
ret
inc
mov
lds
dec
push
sbb
ret
mov
inc
enter
pop
fcom
mov
push
fnstenv
mov
ret
fdivr
sub
fidiv
dec
loope
in
clc
mov
fdivr
ins
aas
cmc
mov
call
and
loop
pop
out
js
inc
pop
dec
mov
sbb
push
jge
cmps
mov
cmc
into
add
mov
dec
fcomi
sbb
xlat
cmp
sub
add
or
fs
bound
and
mov
sbb
jo
cmp
adc
jge
lock
fdivr
aaa
cmp
iret
movs
or
cmp
sub
and
jb
or
xchg
and
cmc
int3
mov
xor
sbb
push
leave
and
ins
fcmove
and
jmp
dec
xchg
out
dec
test
mov
outs
lock
loopne
and
aam
xchg
sbb
dec
xchg
sbb
out
inc
add
mov
movs
mov
xchg
xchg
dec
test
jmp
adc
daa
das
scas
xchg
cmps
ja
popa
push
je
(bad)
je
test
jbe
adc
dec
push
test
xchg
xor
sub
pop
add
aam
sub
xchg
pop
sbb
or
mov
test
out
adc
loopne
mov
pop
xchg
stos
(bad)
pop
fld
push
sub
and
xor
ret
jg
adc
mov
mov
jns
int3
cli
jp
aaa
mov
cmp
(bad)
inc
lahf
or
cmps
mov
pushw
jae
lds
or
shr
mov
cmp
out
outs
in
dec
fsubrp
sub
scas
arpl
add
jl
mov
add
sub
inc
xlat
adc
sub
xlat
sub
xchg
aas
and
pop
jae
adc
fyl2x
pop
add
icebp
adc
mov
mov
pop
repnz
adc
movs
xchg
add
aas
movs
push
xlat
push
mov
dec
cmp
adc
fisttp
sbb
lds
mov
in
sbb
and
cmp
add
xchg
fmul
loop
ins
jae
pop
xchg
sbb
mov
inc
out
pop
sub
mov
adc
push
cmps
xchg
hlt
push
push
test
inc
repz
add
sub
mov
loopne
jp
mov
std
mov
repz
mov
bound
cli
call
fs
in
xor
pop
sbb
mov
xor
cmp
jo
iret
test
inc
test
xchg
call
jge
mov
jg
push
jbe
mov
rcl
dec
mov
mov
int3
mov
call
test
sub
popa
mov
sbb
icebp
mov
test
icebp
push
mov
xor
rcl
mov
push
gs
out
(bad)
outs
jae
xchg
daa
mov
std
push
aad
jb
cmc
dec
pop
sub
test
lahf
mov
fimul
aam
gs
jge
arpl
fs
cld
call
stc
or
mov
(bad)
jle
mov
xchg
mov
push
lods
fs
xchg
daa
cld
sbb
dec
xchg
mov
push
movs
add
pusha
bound
jg
mov
test
xor
pop
fs
pop
loopne
inc
dec
sti
mov
add
ret
push
iret
ds
in
sub
aaa
pop
sub
or
clc
sbb
daa
jmp
push
mov
test
mov
mov
mov
or
ror
scas
mov
fs
xchg
mov
popa
sub
ins
xchg
push
bound
pop
(bad)
jle
add
pop
push
xchg
out
adc
adc
pop
dec
jns
cmc
sbb
iret
cs
push
into
pop
inc
sti
into
std
shr
pop
cmc
push
push
jnp
lahf
les
test
stos
dec
cdq
js
dec
popf
popa
inc
add
and
std
mov
rol
add
(bad)
dec
(bad)
(bad)
or
lods
ja
repz
cli
inc
enterw
or
pop
cmp
ja
sub
outs
cmps
aad
push
push
or
imul
jnp
cdq
or
cmp
shr
jnp
and
mov
push
and
fstp
push
inc
ret
push
adc
mul
js
sbb
mov
push
pop
mov
loop
adc
inc
in
push
cmp
shl
mov
sbb
movs
mov
cmp
ins
jb
sub
test
gs
add
ret
outs
lods
mov
pop
int3
and
mov
or
(bad)
rcr
xor
test
cmp
jo
leave
jl
sbb
mov
jmp
test
or
test
pop
in
ficomp
and
lahf
add
loope
(bad)
movs
jl
mov
inc
or
push
or
aaa
pop
call
mov
jno
ds
in
mov
shl
test
mov
pop
add
hlt
mov
push
arpl
arpl
add
dec
sub
inc
mov
mov
jne
or
push
fsubrp
jp
push
popa
scas
xor
repnz
ja
sti
lock
dec
rol
(bad)
and
xchg
or
pop
retf
call
rcr
push
(bad)
push
adc
jecxz
xor
ja
lea
xchg
mov
mov
sub
lea
push
adc
cmp
push
loope
add
adc
ss
sbb
jb
sub
lds
cmp
mov
arpl
dec
pop
fist
out
jb
fld
cmp
mov
fsub
enter
mov
loop
jo
psrlq
data16
pop
push
adc
stos
pop
fst
call
mov
outs
cmp
xchg
cs
pop
repz
jg
push
pop
sbb
mov
test
std
push
or
fadd
add
adc
inc
jp
cmps
retf
aam
call
stos
iret
fwait
sbb
test
pop
loopne
push
out
push
jae
outs
outs
popf
or
popf
in
out
xlat
xor
pop
mov
movs
icebp
cmps
pop
scas
adc
dec
add
out
sub
(bad)
fmul
add
(bad)
arpl
adc
repz
out
cld
or
iret
aas
ret
pushw
push
daa
jl
inc
stc
xchg
or
loopne
(bad)
call
lahf
fisttp
sbb
cmp
loopne
push
dec
xchg
out
imul
clc
xchg
xor
xor
jecxz
pop
stos
aam
xchg
xchg
or
xor
xchg
out
loope
arpl
and
and
cmps
mov
sahf
stos
xchg
cmp
mov
sbb
iret
push
xchg
adc
mov
mov
fdivr
into
icebp
push
out
pop
(bad)
or
shl
jno
into
pop
cmp
xchg
ja
jae
jb
adc
movups
push
jp
mov
mov
mov
(bad)
(bad)
outs
icebp
cmp
xlat
push
stc
add
jl
mov
repz
jbe
dec
ds
(bad)
test
scas
loop
push
test
adc
int
iret
and
add
mov
(bad)
mov
mov
push
imul
stos
repnz
xor
mov
lods
mov
xchg
mov
mov
jnp
push
int
add
adc
adc
clc
jge
xchg
test
or
add
jmp
or
adc
std
aas
lods
int3
add
fsub
imul
cmc
inc
xor
cmp
mov
clc
fsub
sbb
int
pop
ret
daa
ins
pop
inc
lock
xchg
mov
add
outs
jle
ret
retf
mov
jns
adc
rcr
cli
dec
mov
adc
xor
and
stos
xor
cmps
aaa
sahf
ret
push
pop
daa
mov
movs
leave
cmp
add
push
xchg
dec
mov
mov
xchg
adc
push
xchg
dec
sar
pop
repnz
loopne
loop
das
add
cmp
mov
jae
cmp
xchg
inc
fldenv
inc
rol
cmp
into
mov
sar
aas
pop
xchg
stos
mov
inc
mov
pop
jbe
or
aas
adc
retf
das
cmp
inc
mov
lock
xchg
mov
jg
cmp
inc
jg
pop
int3
mov
mov
sahf
inc
(bad)
fmul
fidiv
or
inc
push
xchg
pop
out
cmp
pop
fcomp
cmp
jae
cmp
xor
add
pop
rol
or
jl
push
cmps
xchg
fldcw
jmp
xchg
mov
inc
add
ss
or
scas
in
out
mov
ins
pop
(bad)
push
xchg
iret
out
add
sub
rol
cs
inc
jne
mov
push
or
out
leave
sbb
xchg
mov
push
dec
out
fmul
(bad)
and
or
xor
jecxz
mov
add
fldenv
js
xor
adc
xchg
retf
xchg
and
clc
mov
add
or
or
sub
nop
push
fisub
and
jle
cmp
adc
sbb
ins
(bad)
dec
jle
shr
int
sbb
sar
cli
dec
inc
daa
cmc
push
movs
dec
mov
fimul
mov
dec
into
in
movs
cli
push
sub
xor
lods
mov
movs
fbld
js
dec
sets
mov
clc
fndisi(8087
sahf
and
xchg
fmul
and
in
push
and
int
jne
pop
(bad)
xchg
scas
push
adc
repnz
ins
xchg
xor
mov
jnp
pop
pop
mov
fdivr
mov
mov
cmp
jnp
lods
lods
inc
arpl
inc
xor
mov
aam
mov
lods
adc
repnz
or
sub
inc
pop
cs
and
cmp
mov
das
pop
mov
adc
hlt
or
test
dec
or
or
nop
push
int
inc
jae
jecxz
(bad)
in
add
rcr
std
pusha
xchg
inc
or
lock
push
(bad)
adc
sbb
mov
leave
jecxz
sbb
mov
mov
mov
arpl
xlat
xlat
adc
add
sub
scas
std
repnz
fimul
mov
popa
test
jl
scas
sub
cmc
pop
xor
adc
xchg
sbb
fwait
ja
cmp
fcom
ins
or
or
dec
sbb
xchg
cmc
outs
adc
mov
ret
rcl
int3
outs
ins
adc
fld
inc
test
jae
push
inc
xlat
hlt
push
xor
mov
xchg
stc
jl
retf
sub
mov
add
sar
retf
loope
cmp
mov
push
shr
mov
mov
sbb
adc
js
scas
adc
push
rol
pop
mov
inc
push
repz
aaa
dec
sar
jecxz
push
lock
dec
pop
lahf
inc
and
dec
mov
cmc
scas
inc
sub
fucom
ins
popa
shl
sahf
sar
ds
jle
jmp
aad
push
bound
lods
daa
push
wrmsr
enter
retf
inc
dec
cmp
adc
xchg
pop
jmp
push
pusha
inc
pushf
inc
into
dec
inc
mov
push
shl
mov
sub
ret
mov
add
ins
adc
and
xchg
cmp
lods
mov
jae
sbb
imul
cmc
inc
(bad)
mov
or
(bad)
push
rcr
mov
push
ins
repnz
int
push
cs
mov
mov
aaa
fs
out
enter
ins
jo
es
outs
std
and
push
nop
xchg
cmp
call
mov
pusha
jmp
retf
fdiv
jo
xor
push
inc
add
adc
jbe
and
lock
(bad)
retf
(bad)
cmc
inc
rcl
cli
call
int
mov
adc
bnd
inc
jmp
add
pop
xchg
xor
jo
or
ror
int
dec
add
and
push
dec
or
cmp
push
mov
inc
add
stc
fnsave
dec
and
pop
add
xlat
in
fild
adc
adc
mov
sbb
push
inc
pop
inc
lds
mov
test
mov
repnz
pushf
pop
ja
cdq
jo
pop
dec
outs
dec
push
push
fstp
ja
mov
dec
push
push
cmps
sub
retf
fild
xlat
adc
movs
das
sar
sar
sbb
and
pop
cmp
ret
sub
adc
bound
arpl
or
jbe
ret
fld
aaa
mov
pop
push
fsub
test
in
jnp
mov
push
jmp
ss
push
ja
xor
shl
idiv
lea
pusha
inc
sub
and
cwde
xchg
(bad)
loop
sbb
lds
mov
fst
pop
lea
pop
mov
sbb
mov
enter
push
jl
leave
test
repnz
jge
jle
es
push
sbb
test
inc
xchg
push
sbb
sub
out
xor
push
add
or
add
sub
(bad)
jmp
inc
ins
or
push
pop
and
(bad)
jae
mov
test
sbb
sub
pop
xlat
and
adc
and
push
add
pop
and
cmps
shl
clc
inc
pushf
shr
mov
ret
scas
in
aad
movs
dec
sti
das
(bad)
fiadd
pop
inc
xchg
outs
add
leave
inc
outs
adc
adc
out
sub
into
test
mov
add
sub
pop
cli
mov
in
pop
sub
and
sub
cli
dec
movs
int
mov
sbb
sahf
and
ret
or
ja
and
cdq
lds
mov
retf
add
cmps
sub
fsub
mov
add
setb
push
fcmovbe
ss
sbb
jbe
or
jle
fld
mov
dec
add
lods
loop
loop
test
xor
cmp
and
pop
mov
mov
ins
xchg
(bad)
maxps
mov
jle
das
fnsave
cmp
adc
int
pop
cmp
xor
in
cld
xor
cli
sbb
xchg
jns
retf
xor
sub
test
jo
or
sbb
cs
cmp
xlat
adc
fwait
fwait
dec
and
dec
je
sar
pushf
or
pop
shr
retf
sar
jmp
push
lock
iret
idiv
lods
adc
ret
(bad)
inc
ins
das
mov
push
sub
jmp
movs
push
das
in
repz
mov
popf
push
push
rcr
cmp
inc
push
arpl
fdivr
push
sbb
inc
pop
push
and
xchg
mov
xchg
(bad)
pop
(bad)
shl
mov
pop
xchg
push
(bad)
int
and
sbb
int3
add
icebp
enter
(bad)
fbstp
xor
js
xor
dec
mov
div
and
mov
fadd
test
es
out
jnp
inc
xchg
jl
fisttp
das
dec
dec
sub
push
(bad)
(bad)
out
and
push
daa
and
sahf
sbb
push
jmp
bound
pushf
or
adc
jne
lds
xchg
xor
sbb
cmc
retf
sahf
cmp
xor
imul
mov
lods
add
(bad)
mov
jmp
aas
jle
mov
jb
or
js
adc
dec
jb
repnz
push
ficom
adc
in
aaa
add
inc
push
lahf
lahf
add
mov
jae
ror
mov
jl
push
xchg
mov
aaa
in
retf
aad
mov
test
fs
(bad)
loopne
mov
push
ret
fsub
jecxz
scas
jp
mov
pop
mov
adc
lods
jge
xchg
(bad)
lock
pusha
inc
(bad)
fwait
es
and
or
mov
adc
cmps
add
fs
sub
jp
shr
cmc
cwde
hlt
jg
(bad)
test
popa
mov
fisttp
pop
dec
lods
cmp
xor
mov
retf
push
xor
sti
call
adc
ja
repnz
aam
inc
xchg
mov
pusha
and
push
fcmovu
(bad)
test
lods
sub
loopne
(bad)
mov
add
mul
jl
mov
pop
es
std
jae
sahf
scas
repnz
cmp
inc
and
pusha
stos
(bad)
sti
sbb
push
jge
mov
mov
das
and
popa
cdq
or
adc
pop
js
retf
push
dec
jnp
sub
jge
jo
test
aaa
inc
jmp
das
mov
out
pop
xor
inc
in
call
dec
jl
xchg
dec
gs
adc
stos
sahf
push
mov
cmp
push
sbb
sub
call
fwait
push
adc
mov
jmp
loop
clc
rcr
call
popf
xlat
stos
inc
dec
add
vpmulhuw
push
enter
jne
xchg
ins
les
push
das
xchg
add
push
mov
je
dec
xor
int
dec
adc
sbb
push
or
sar
sbb
cmp
addr16
sub
imul
cli
div
(bad)
in
ficomp
shr
xor
ret
aad
(bad)
aad
or
scas
jbe
jne
pushf
cdq
push
mov
jnp
pop
adc
inc
movs
test
dec
stos
inc
ins
cmp
jne
into
push
loop
arpl
ins
imul
mov
adc
aaa
push
jbe
or
xor
adc
je
movs
cmp
jge
jl
jp
xchg
(bad)
cmp
pop
imul
xchg
test
fnsave
retf
adc
sub
adc
pop
xchg
mov
push
or
scas
test
jne
ficom
outs
sbb
pop
adc
and
jle
sbb
inc
in
ror
and
jb
cwde
xor
mov
jb
xchg
xor
fiadd
jecxz
sbb
push
sub
lock
stos
adc
das
jge
add
cdq
mov
mov
(bad)
push
jae
xchg
mov
out
pop
test
push
out
mov
dec
sbb
ror
mov
pop
repnz
sbb
lods
ins
ret
popa
jecxz
nop
clc
pop
cmp
fbstp
lock
fwait
adc
add
cmps
mov
add
ins
repnz
adc
mov
(bad)
out
leave
add
fsub
mov
fs
push
loop
fist
mov
stos
pop
cli
test
mov
retf
xchg
sbb
mov
out
loope
add
xchg
fnstsw
inc
push
mov
retf
xor
adc
xchg
push
xchg
mov
imul
push
and
fs
sbb
sbb
fimul
stos
sbb
fstp
jae
scas
jns
dec
pop
nop
mov
and
lds
cwde
dec
lods
retf
enter
sub
test
shl
sbb
lahf
jns
add
add
sahf
push
xchg
xor
dec
add
mov
lahf
jl
fild
add
pop
mov
mov
daa
jnp
pop
xor
ja
ffree
dec
sbb
or
or
mov
and
test
movs
addr16
mov
in
test
(bad)
enter
enter
sbb
inc
cmp
pop
outs
xor
inc
scas
inc
clc
stos
pop
cs
inc
enter
iret
add
iret
cmp
and
push
mul
push
jle
retf
xchg
or
inc
retf
inc
ins
sbb
pushf
mov
loop
retf
mov
ds
sbb
mov
into
pusha
or
lods
clc
loopne
add
cdq
sbb
pop
or
pop
push
sbb
jp
add
inc
shl
lea
jp
and
jne
push
mov
adc
daa
xlat
or
out
mov
xor
push
bound
mov
sub
or
pop
(bad)
js
test
jmp
iret
icebp
mov
add
or
dec
push
mov
mov
jg
mov
rcl
jo
leave
jbe
neg
jns
int3
gs
popf
cs
add
mov
adc
movs
ins
or
adc
in
jnp
sar
cli
push
in
fistp
cmps
jno
cli
push
arpl
inc
jp
scas
idiv
pop
mov
lods
ins
(bad)
sahf
mov
mov
outs
mov
scas
(bad)
adc
mov
enter
(bad)
cmps
mov
pop
js
imul
pop
xchg
sub
pop
push
pop
je
adc
enter
lock
xor
or
shl
jmp
cmps
cmc
mov
call
daa
cmp
push
loopne
or
call
xchg
test
lods
ret
dec
call
ja
xchg
inc
xchg
imul
xlat
push
cmc
jae
(bad)
pusha
xlat
pop
call
ficom
neg
outs
xchg
push
cwde
dec
jmp
lods
cwde
xchg
pop
sub
fldcw
(bad)
test
mov
sub
adc
and
sbb
hlt
adc
lea
repz
js
fcomp
js
inc
jae
inc
mov
rcr
shl
xchg
adc
mov
out
mov
mov
jae
ja
xlat
addr16
repnz
adc
out
pmaxub
call
mov
in
jno
gs
inc
cld
(bad)
cmp
and
pop
ds
fist
or
dec
(bad)
ret
out
daa
test
nop
add
xor
clc
stos
sub
shr
std
cli
xor
or
data16
jno
repnz
mov
pop
(bad)
(bad)
fadd
jnp
test
push
cwde
xor
adc
shl
leave
xor
and
icebp
(bad)
data16
push
cld
call
lock
ficom
sysret
addr16
dec
jns
inc
dec
movs
add
xchg
add
push
imul
fstp
xchg
mov
dec
mov
inc
in
add
sahf
mov
cmp
stc
xor
ja
in
and
out
mov
sbb
stc
(bad)
test
dec
in
inc
lds
jo
jl
mov
std
cmp
dec
sbb
call
push
push
inc
pop
loop
scas
and
pusha
scas
lock
mov
jnp
cmp
aaa
das
adc
addr16
jbe
test
and
cmps
pop
xor
lods
gs
xchg
movs
inc
fld
cwde
mov
pop
or
lods
dec
mov
mov
xor
fnsave
inc
(bad)
sahf
sbb
add
out
or
call
cmps
ss
jbe
popf
std
mov
jge
aaa
mov
adc
jp
add
mov
(bad)
sar
mov
push
inc
xchg
or
jnp
inc
outs
cmp
scas
add
mov
xchg
fcomp
jb
ret
int
adc
imul
scas
enter
and
hlt
xor
movs
(bad)
pop
je
jge
jp
fs
in
fimul
jg
int3
xor
pushf
lock
mov
mov
add
leave
xchg
jecxz
push
and
add
movs
gs
add
jo
adc
js
cmps
xchg
imul
add
cmc
jo
jnp
std
pusha
mov
bound
pop
mov
jg
sbb
test
mov
dec
and
add
jg
inc
push
clc
cmp
or
cmp
sbb
xchg
data16
movs
add
(bad)
repz
dec
and
fwait
add
sub
mov
jbe
xor
push
outs
std
lea
(bad)
les
sbb
out
shl
das
gs
push
and
arpl
cs
sbb
(bad)
lods
pop
push
push
fimul
hlt
aaa
mov
adc
xor
iret
out
sti
enter
xchg
not
stos
pop
sub
add
imul
jmp
sub
lds
cli
pop
jbe
xor
sub
ficomp
js
cmp
cmps
ins
push
movs
out
mov
repnz
enter
mov
aaa
jo
xchg
vmwrite
not
sbb
mov
dec
test
ror
mov
popa
cmp
js
mov
pusha
add
out
dec
fdivrp
dec
out
ja
call
jnp
dec
shl
cmp
xor
xor
xchg
lods
inc
pop
test
push
(bad)
push
inc
sub
fst
inc
jns
xchg
and
inc
scas
ins
rol
out
ins
xor
fidiv
add
or
loopne
and
cmp
pop
cmps
adc
psubb
ds
call
jne
xchg
add
daa
scas
je
or
fsub
sahf
jns
xchg
popa
xor
mov
fwait
xchg
push
mov
out
or
push
imul
(bad)
sub
jge
jo
cmc
push
pushf
push
nop
jns
push
ss
imul
and
xor
mov
(bad)
retf
xchg
scas
fcomp
cmp
stos
xor
pop
and
inc
imul
xchg
lahf
xor
mov
pop
rcl
dec
out
daa
xchg
pminub
cwde
leave
push
sub
or
cmp
icebp
inc
mov
pop
mov
das
pop
popa
stc
jbe
stos
dec
xchg
mov
push
ficom
mov
out
cli
cwde
dec
pop
mov
in
mov
push
rcl
xor
mov
sub
std
inc
pop
icebp
clc
sbb
aam
cld
mov
mov
sbb
xor
shr
popf
lahf
jno
shr
imul
mov
jnp
push
pusha
or
fdiv
dec
inc
aad
xchg
jns
push
cmps
xchg
inc
jle
test
or
pop
call
sbb
sub
in
das
mov
sbb
mov
fwait
push
mov
iret
push
in
dec
pop
cmps
jl
test
mov
fld
fild
lds
enter
call
and
mov
lds
dec
sub
xchg
mov
(bad)
pusha
mov
cdq
add
movs
mov
or
jmp
jge
jmp
mov
mov
and
not
xchg
sub
cdq
add
call
mov
jle
xor
jns
cld
mov
jne
pop
call
loope
push
stos
adc
add
loop
es
mov
fld
pop
mov
xor
mov
push
sub
xchg
pop
(bad)
dec
cs
das
mov
jmp
fistp
inc
xor
daa
sub
cmp
push
sbb
add
(bad)
mov
mov
pop
into
jns
or
scas
mov
jae
outs
cmp
jne
movs
jne
push
sbb
inc
or
mov
stc
lds
daa
jmp
gs
jo
neg
adc
popf
mov
into
xor
inc
das
pop
inc
mov
mov
shl
sub
cmp
scas
aad
enter
ja
push
sbb
repnz
(bad)
cmp
test
jns
cmp
arpl
mov
push
dec
cmovp
pop
xor
sub
fisttp
mov
cwde
jns
je
repnz
push
adc
cmc
mov
data16
xor
outs
in
lods
imul
and
cmps
push
or
or
cmc
mov
clc
out
jae
shl
mov
add
(bad)
or
mov
or
and
mov
outs
mov
push
mov
ja
data16
inc
adc
fisub
int
je
cmp
or
and
scas
in
aaa
(bad)
or
ror
loopne
cmovo
leave
bound
dec
push
jmp
xchg
sub
mov
ins
adc
cmps
sahf
dec
sbb
jae
adc
fdiv
sti
daa
mov
scas
cdq
lea
jmp
ins
imul
push
mov
sub
push
pop
jmp
mov
mov
or
jmp
cld
idiv
cdq
idiv
add
enter
mov
lock
ror
sub
dec
and
add
cmp
dec
cmc
xchg
cli
clc
mov
xor
pop
aas
cmovs
cwde
(bad)
xchg
mov
inc
xor
jns
aad
addr16
mov
outs
adc
out
outs
jecxz
push
jl
into
fwait
and
data16
cmc
jb
jmp
adc
dec
ss
loopne
fbstp
mov
aad
das
jmp
adc
stos
mov
mov
inc
lods
fisttp
ss
aas
inc
mov
std
test
dec
in
(bad)
or
ins
xor
pop
push
or
adc
sar
(bad)
jo
mov
repz
rcr
add
cld
fsub
mov
cmc
out
mov
cmc
xchg
pop
outs
sub
mov
mov
jl
pop
movs
cmp
mov
mov
sar
and
sbb
lock
shl
dec
cld
push
sbb
mov
cmp
clc
scas
and
push
(bad)
test
mov
add
ret
sub
mov
push
push
push
sub
mov
inc
test
mov
pop
das
fdiv
push
mov
mul
add
pop
js
aam
xor
clc
aas
cmp
in
(bad)
cmp
mov
dec
ins
push
jecxz
jb
in
pop
in
out
push
xor
push
xor
int
jne
mov
pop
jnp
std
and
mov
fcomp
cld
sbb
dec
jge
mov
out
mov
xor
or
mov
ins
jmp
ja
mov
int3
cmp
dec
or
jg
mov
inc
js
jge
aas
or
cwde
dec
movs
outs
xchg
test
popf
xchg
inc
pop
and
cmps
fistp
shl
out
mov
dec
test
ja
dec
scas
mov
push
repnz
lidtd
mov
sbb
(bad)
cdq
fcom
xchg
scas
jp
jmp
cmc
mov
or
push
ds
mov
(bad)
jg
xor
add
push
cld
int3
in
jl
mov
les
push
(bad)
es
shr
out
mov
inc
cmps
pop
push
mov
or
or
fs
retf
repnz
mov
or
mov
mov
ins
xor
stos
xor
sbb
xchg
lds
inc
(bad)
pop
gs
pushf
adc
retf
xchg
fdivr
sub
aad
jo
popa
dec
adc
mov
stos
push
jns
push
sbb
leave
xchg
leave
sbb
into
pop
movs
pop
scas
and
les
inc
inc
fsub
or
inc
pop
or
push
pop
adc
into
add
jno
pop
pop
fld
fisubr
aam
dec
add
imul
lahf
pusha
sar
adc
mov
jmp
jae
int3
sbb
rol
jno
jl
dec
in
jne
lahf
sbb
inc
push
cdq
sub
add
xor
pushf
adc
sbb
fdivr
repz
mov
cwde
iret
or
xchg
or
push
loopne
or
pop
push
sti
aaa
cld
pop
xchg
mov
pop
sub
mov
out
or
jne
and
mov
lods
push
mov
cmc
ds
(bad)
jecxz
inc
out
fbstp
add
mov
in
mov
and
mov
in
jp
xchg
mov
rcl
out
add
dec
xchg
das
inc
push
jmp
mov
xor
je
out
pop
icebp
and
xchg
mov
sbb
leave
rcr
loope
(bad)
loope
and
in
mov
pop
or
and
jmp
jl
mov
stc
js
or
in
imul
in
mov
xchg
inc
mov
xchg
jne
dec
movs
dec
mov
movs
xor
inc
in
cs
push
lock
aas
xchg
outs
cmp
mov
into
jmp
test
addr16
int
(bad)
push
hlt
pop
xor
stos
lock
add
xor
ror
mov
or
sar
outs
xchg
push
inc
lods
inc
popa
cmps
pop
mov
out
fldcw
xchg
or
loope
push
dec
pop
fdivr
fwait
push
(bad)
dec
pusha
arpl
and
inc
xor
movs
shl
pop
fwait
mov
ret
stos
jbe
pop
call
js
mov
inc
mov
or
in
inc
mov
pop
cmp
xchg
xor
adc
pop
gs
repnz
dec
cmp
std
in
fmulp
stos
ins
add
mov
outs
xchg
loopne
pop
ret
jns
add
push
int
mov
pop
(bad)
sti
adc
inc
iret
ins
dec
jle
xor
imul
xchg
in
jecxz
pop
pop
jno
jge
dec
int
jae
jge
xchg
(bad)
and
and
aad
push
jb
rol
rcr
je
adc
cmps
and
test
xor
xor
push
lahf
and
aaa
aad
add
cmps
mov
aam
xchg
xor
xchg
retf
sti
add
mov
ret
cwde
stc
xchg
or
(bad)
icebp
xchg
inc
cmps
dec
leave
cmps
xor
jecxz
cmp
and
clc
call
es
xchg
fidivr
(bad)
or
jmp
mov
sub
cmp
stc
sub
or
adc
pop
clc
cmp
push
test
sbb
loope
xchg
pop
xchg
fimul
push
jno
stos
inc
lock
adc
sbb
mov
imul
nop
cmps
(bad)
retf
and
inc
ror
dec
call
(bad)
push
scas
das
jno
cdq
sub
sub
dec
repz
add
(bad)
xor
daa
inc
jle
adc
add
push
dec
mov
mov
bound
ss
mov
xor
(bad)
xor
push
ss
push
popf
dec
pop
popa
pop
xchg
(bad)
sbb
icebp
pop
outs
pop
pop
popf
fcomp
mov
in
inc
jb
and
pop
pop
mov
ret
push
sub
loopne
pushf
test
imul
push
mov
out
rol
scas
sub
sub
cmpps
mov
sbb
loope
or
inc
cmp
es
cmp
(bad)
rcr
iret
inc
adc
jmp
adc
mov
mov
xchg
sti
ja
mov
outs
loop
pop
out
lods
sub
inc
cmp
test
mov
push
sub
push
ins
inc
cs
test
mov
(bad)
add
sbb
dec
aad
sti
xchg
push
mov
ficom
lods
rcl
jmp
inc
pop
mov
jg
cmp
or
retf
pop
jmp
cwde
xchg
stos
(bad)
cmp
mov
stc
sbb
jo
and
pop
inc
or
mov
mov
arpl
cld
cdq
sub
push
nop
mov
add
adc
imul
sbb
mov
push
(bad)
sub
div
rol
aas
dec
mov
call
lea
and
hlt
call
out
(bad)
mov
int3
inc
pop
fidivr
or
jge
pop
mov
and
lock
in
add
or
pop
or
loop
mov
mov
dec
or
repz
or
ins
cmp
cmps
sbb
fsubrp
test
cmps
inc
inc
lahf
jg
mov
(bad)
sub
(bad)
icebp
(bad)
ror
sbb
(bad)
les
pop
and
addr16
or
mov
and
jmp
dec
cli
jae
rcl
mov
ins
fiadd
lea
rcl
and
fwait
and
ret
xchg
lods
nop
dec
ret
ror
icebp
ror
inc
xchg
rol
jo
mov
mov
push
ror
neg
sub
mov
mov
sbb
stos
mov
add
xor
scas
sar
mov
mov
fnstcw
fdiv
pop
movs
mov
mov
mov
lods
es
test
cmps
das
sbb
or
mov
outs
daa
cwde
mov
jg
or
xchg
or
and
movs
add
repnz
cmp
frstor
mov
pop
call
pop
cwde
loopne
push
jnp
imul
mov
int3
(bad)
sbb
jmp
cdq
shl
fs
sub
mov
stos
mov
loopne
mov
push
jg
jnp
or
int
mov
sub
inc
ret
xchg
pusha
xor
push
adc
or
idiv
push
out
mov
ins
loopne
fist
test
jns
and
mov
push
or
or
xor
lea
es
jne
gs
push
pop
inc
pop
xchg
ss
pop
cmp
dec
test
inc
jmp
clc
(bad)
xchg
neg
stos
ret
fs
lds
add
jl
das
cmp
add
mov
repz
pop
aad
cwde
aaa
mov
xor
xchg
out
and
idiv
(bad)
mov
sub
hlt
and
cmp
mov
adc
seta
mov
push
fld
cmp
imul
jmp
call
cmp
data16
imul
ror
mov
adc
(bad)
in
cmp
dec
cmps
in
add
dec
ins
out
mov
pop
mov
shl
(bad)
test
inc
rcr
dec
dec
das
int3
(bad)
in
or
jle
lock
sub
sub
sbb
loope
xlat
mov
(bad)
cmp
jg
outs
aas
push
retf
scas
sar
lock
xor
and
sub
fucom
fld
and
aaa
call
rcr
sti
mov
sahf
xor
lahf
inc
xor
je
jnp
scas
in
fdivr
jge
add
imul
push
push
into
and
xor
mov
ins
cmp
add
test
ret
in
pop
push
mov
inc
ins
mov
mov
lods
std
sub
mov
adc
repz
inc
mov
adc
retf
scas
frstor
data16
int3
sbb
test
sub
cmps
std
fldcw
push
movs
arpl
dec
cld
jo
ds
push
sar
daa
add
inc
ss
sub
xchg
movs
sbb
cmc
popa
sub
popf
test
pop
(bad)
mov
les
add
lea
(bad)
call
push
sub
pop
mov
pop
ret
mov
adc
ficom
aam
iret
lods
mov
dec
cmp
cwde
fild
(bad)
fidiv
and
in
(bad)
inc
pop
popf
mov
jbe
add
test
retf
out
je
fxch
(bad)
mov
data16
push
(bad)
out
sub
mov
cwde
inc
retf
pop
dec
jno
in
pop
fwait
test
shl
xchg
(bad)
pop
je
and
popa
fstp
pop
ins
in
xor
movs
mov
pop
jecxz
cli
push
lds
dec
daa
psubd
cmp
loop
call
fstp
jle
xor
xchg
and
nop
xchg
xchg
in
sub
aam
retf
inc
jle
mov
js
sub
pop
out
dec
pop
or
or
in
cmps
div
test
add
mov
adc
inc
mov
or
ja
pusha
inc
dec
ins
jle
mov
dec
pushf
and
dec
push
hlt
bnd
dec
mov
jg
int
jo
adc
out
push
adc
sbb
(bad)
fdivr
movs
and
mov
push
aam
rol
xchg
repnz
(bad)
(bad)
ins
sbb
or
ss
xor
or
nop
adc
push
pop
cmp
rol
xchg
inc
mov
aad
ds
jmp
gs
dec
fldenv
xor
movs
sbb
mov
iret
xchg
(bad)
fild
rcr
sar
aam
xchg
ja
popa
inc
loope
add
cmp
cld
push
mov
ja
in
xchg
cmps
mov
jp
add
pop
inc
jecxz
push
mov
mov
(bad)
xor
and
retf
or
call
into
push
movs
push
in
xor
jge
pop
sbb
pop
aas
retf
ficom
hlt
ds
retf
retf
sti
cmc
xchg
mov
cmc
lods
daa
loop
nop
jl
aad
sub
fadd
inc
ss
or
lods
inc
test
into
dec
pop
retf
push
inc
sub
pop
adc
in
repnz
push
in
fwait
mov
add
add
mov
dec
call
adc
nop
int
loope
ret
and
add
fsubr
ins
and
fcomp
pusha
jno
movs
and
call
cwde
fisttp
retf
mov
mov
repz
sub
jae
jmp
mov
sbb
inc
xchg
in
jecxz
or
mov
cs
pushf
jmp
shl
pop
iret
mov
ins
or
pop
xor
test
dec
adc
leave
or
lahf
iret
sub
lock
cmp
cmp
mov
jle
cmp
retf
jp
lea
jmp
mov
call
and
mov
push
add
daa
in
mov
mov
jp
mov
aas
repnz
sbb
xchg
xor
ins
lahf
out
mov
adc
push
loopne
sbb
not
dec
pushf
ss
jb
ins
aam
imul
aad
ret
cmp
(bad)
cmc
ret
sub
bound
enter
or
and
jb
jge
sbb
repz
mov
or
ins
in
bound
jge
ds
mov
pop
nop
test
ret
mov
pop
lock
arpl
or
pop
scas
call
cmps
push
out
inc
xor
push
cld
sub
dec
fucom
aaa
fwait
pop
push
fidiv
push
adc
add
sbb
add
xor
(bad)
jmp
inc
add
js
outs
jbe
xlat
cmc
or
adc
cs
mov
pop
lds
loopne
cmp
fcmovnbe
inc
and
(bad)
jmp
dec
loope
or
repnz
mov
jl
scas
aas
shr
in
add
inc
int
push
pop
outs
lods
and
test
fwait
xchg
jbe
mov
cmp
cmp
ds
gs
jl
in
jb
(bad)
int3
jmp
lea
popa
fwait
sbb
mov
pop
mov
jae
inc
xor
outs
push
xchg
and
imul
mov
in
push
cmp
mov
hlt
inc
aam
cmp
pop
or
out
mov
fist
imul
fisub
add
mov
jo
jbe
and
push
fsub
dec
bound
cdq
mov
sbb
or
in
sbb
xchg
or
dec
inc
fsub
fistp
sub
fld
push
xor
push
push
jp
mov
dec
aas
gs
push
xchg
pop
jno
fmul
(bad)
cmps
dec
mov
inc
xor
out
jmp
mov
push
ins
rol
adc
xor
jge
or
xor
hlt
lea
inc
dec
mov
int
or
xchg
shl
xor
fiadd
adc
mov
jmp
or
pop
mov
inc
mov
adc
in
ins
sub
cmp
mul
jae
in
push
dec
in
pop
mov
mov
add
shl
or
fdiv
inc
test
add
sbb
xchg
xor
sub
aas
int3
add
mov
rep
xor
pop
xchg
push
and
inc
adc
lahf
scas
add
mov
sbb
push
neg
or
mov
mov
xchg
lea
pop
fimul
dec
imul
sub
jae
test
add
sbb
popf
ret
jae
xor
leave
mov
in
jns
sub
add
not
cmp
fs
dec
sub
lahf
cmps
das
aam
xor
inc
test
mov
fild
push
xor
int3
add
or
mov
inc
inc
out
(bad)
sub
arpl
cmp
pop
pusha
in
sbb
aas
pop
js
cmp
push
cmp
lahf
call
push
fistp
push
retf
xor
out
push
push
leave
stos
leave
fnsave
jle
dec
fnsave
inc
mov
xor
xor
or
xchg
sahf
outs
in
fidiv
test
mov
mov
cs
movs
adc
mov
sbb
mov
ret
inc
xor
mov
push
ret
fidivr
xchg
lea
or
jmp
cmp
pusha
stos
pop
(bad)
xchg
fadd
add
sub
and
sbb
dec
movs
test
pop
jmp
rol
xlat
adc
ja
adc
inc
add
jg
xor
mov
and
jmp
clc
retf
inc
mov
sbb
test
(bad)
icebp
pop
or
mov
xor
aaa
dec
xchg
sbb
sub
in
retf
leave
pop
xchg
push
sbb
xchg
out
shl
and
jp
cmp
mov
outs
and
(bad)
test
mov
cld
mov
pop
stc
cmps
sub
ins
jb
mov
sbb
lahf
shl
adc
xchg
fcompp
mov
mov
cld
je
jecxz
lea
pusha
inc
sbb
jp
das
cmc
test
out
out
cwde
jle
mov
movs
push
xchg
xchg
or
jmp
and
cmps
pop
add
dec
retf
arpl
sbb
mov
and
fs
mov
sbb
loop
mov
xor
push
jmp
retf
push
xor
mov
out
popa
aad
xor
repnz
pop
mov
(bad)
pop
push
cmp
int
sub
pop
and
test
jecxz
in
pop
adc
cmps
adc
jb
mov
add
shr
sub
mov
xchg
sbb
in
inc
dec
test
stos
push
jle
push
mov
dec
jg
lods
xchg
js
mov
mov
mov
cmp
mov
retf
(bad)
xor
mov
sbb
jno
inc
add
cld
sbb
mov
ins
inc
add
mov
add
inc
push
cld
mov
daa
(bad)
pop
cwde
bound
sar
les
pop
sar
cmp
enter
bound
xchg
ja
jg
(bad)
fs
xor
mov
daa
inc
mov
push
stos
les
inc
sbb
std
out
adc
adc
add
inc
imul
jno
test
or
(bad)
call
jmp
js
push
mov
sub
push
mov
jp
sub
int3
fadd
jno
pop
pop
mov
idiv
push
and
sub
sahf
cmp
mov
test
sbb
push
mov
adc
movs
mov
sub
(bad)
sti
call
das
cmp
out
xchg
push
sbb
cmp
pusha
xchg
int
mov
jmp
inc
xor
(bad)
jbe
add
xor
push
jmp
int
gs
popf
mov
sub
xchg
bound
repnz
enter
ss
mov
push
xor
mov
mov
ins
out
add
repz
pushf
mov
out
mov
mov
sub
adc
or
xor
in
popf
int3
cmp
pop
jle
enter
push
mov
xor
ins
fcomp
leave
loopne
xor
pop
(bad)
xor
icebp
(bad)
sbb
sbb
ficom
and
inc
fistp
mov
sub
mov
pushf
cmp
xor
jne
pop
mov
imul
rcr
sub
push
mov
fld
push
pop
pop
call
mov
jp
fsubr
mov
xor
ror
add
xor
ds
(bad)
fist
pop
in
gs
out
sbb
jno
scas
jmp
jns
inc
dec
sbb
and
pop
pop
fistp
fld
lock
xchg
push
ror
or
js
ins
test
adc
push
xor
adc
xor
data16
in
and
cmp
fisubr
leave
jns
sahf
push
mov
push
pop
dec
test
add
jb
mov
xchg
jge
and
test
stos
mov
xor
mov
mov
dec
jmp
in
mov
xchg
loopne
aaa
xor
call
in
mov
js
jmp
div
sbb
push
mov
mov
sub
test
pop
cmps
retf
mov
loope
sub
xor
jne
inc
js
mov
loopne
push
je
je
cmps
mov
sar
cmp
dec
pop
and
aaa
mov
in
pop
movs
mov
sub
repnz
fmul
enter
fist
mov
pop
cmp
push
bound
xchg
retf
cmp
push
mov
mov
pop
(bad)
cwde
sbb
lahf
dec
cs
imul
mov
push
mov
dec
mov
push
cmps
cld
cs
ret
stos
or
jns
xor
xchg
add
sbb
mov
mov
rcr
repz
dec
sbb
(bad)
jne
je
xor
inc
sar
(bad)
loope
retf
clc
adc
xchg
in
push
rol
fsubr
cli
data16
push
leave
pop
xchg
and
movs
jne
das
or
repnz
lock
fs
arpl
cmc
xchg
test
dec
mov
cld
js
cmp
iret
sbb
or
push
int3
push
mov
in
dec
fs
cmp
in
sbb
fs
call
push
xchg
nop
cmps
xor
mov
rol
jo
aaa
(bad)
mov
sar
cmps
shl
sahf
aaa
movsx
xchg
sub
(bad)
out
rcl
test
shl
(bad)
mov
mov
sbb
cmps
cdq
lock
ret
cmp
mov
mov
push
mov
dec
ret
sub
pop
cdq
lods
mov
cmp
sub
pop
cmps
(bad)
mov
sub
ins
jb
mov
cmc
jmp
xor
xchg
add
xor
fimul
outs
jnp
or
mov
or
push
inc
out
sbb
dec
and
xor
xor
and
push
ror
push
call
pop
movs
sub
mov
sub
adc
and
dec
inc
xor
xchg
rcl
adc
xchg
adc
xchg
sbb
sti
in
cmp
mov
jno
loopne
dec
loopne
add
test
aaa
scas
inc
push
mov
sbb
xchg
lods
test
mov
mov
retf
jmp
jb
call
jmp
mov
sub
xor
mov
inc
jne
sub
adc
lea
repnz
rcr
fs
cld
hlt
xchg
loop
push
shl
sub
add
jae
mov
inc
push
cmp
gs
mov
or
or
xor
jne
ins
ret
mov
mov
mov
xor
imul
cmp
aam
popa
mov
adc
dec
fnsave
lds
es
jns
popa
movs
jle
mov
sbb
test
push
retf
or
dec
mov
test
outs
je
mov
sbb
mov
ret
mov
loope
dec
stc
dec
icebp
xor
fdivp
lahf
inc
shr
imul
mov
or
in
mov
scas
loop
or
jmp
inc
and
mov
dec
bound
inc
fstp
add
les
adc
cmc
dec
(bad)
cs
and
cmp
fnstcw
popa
and
test
sti
lods
or
fld
int
popf
mov
call
adc
xchg
dec
mov
pushf
lock
cmp
ins
and
rcl
stos
mov
pop
pop
fcmovnbe
mov
scas
rcr
test
and
retf
jl
push
ficom
mov
or
jbe
test
cmp
push
and
jle
mov
lods
mov
xchg
add
or
lahf
das
lods
js
mov
movs
movs
(bad)
retf
enter
and
cmc
daa
mov
cmp
ins
add
dec
sub
lods
inc
mov
pop
or
sar
add
sub
xchg
mov
adc
neg
fwait
out
out
push
sahf
cmp
in
sbb
xchg
retf
push
lds
add
mov
movs
je
jmp
cld
inc
inc
xlat
mov
adc
pushf
loopne
in
pushf
add
add
or
rcl
loopne
data16
out
mov
in
sbb
mov
in
dec
cmp
cmp
je
xor
(bad)
cmp
js
push
cmc
repnz
fst
xlat
rcr
imul
dec
xchg
and
lock
mov
ss
leave
lods
fmul
cwde
shr
mov
pusha
xor
js
inc
and
adc
fnsave
(bad)
mov
div
cwde
std
clc
pop
leave
pop
dec
dec
sbb
cmps
lea
call
jp
xchg
dec
sbb
fs
call
jno
mov
jmp
jl
fsub
push
bound
out
ss
frstor
sbb
jecxz
outs
adc
mov
stc
mov
icebp
mov
pop
mov
xor
pop
mov
xchg
outs
leave
adc
push
rcr
jge
lea
cwde
pusha
ficom
cmp
jmp
pop
mov
jns
mov
rol
lock
call
rcr
xor
lods
push
shr
shl
and
in
out
popa
out
out
inc
adc
sbb
mov
je
adc
jo
cs
stc
mov
out
xchg
inc
pop
mov
ss
into
sbb
neg
push
stos
out
fwait
push
pop
movs
push
sbb
sub
pop
daa
cmp
add
(bad)
xchg
xlat
lahf
inc
cli
sti
mov
and
pop
xchg
mov
xchg
sbb
std
sub
iret
stc
inc
cmp
xor
push
xor
aam
or
leave
out
and
arpl
mov
xlat
sti
jecxz
ins
fistp
pop
push
rol
sub
mov
add
fild
aam
push
sub
mov
sub
adc
or
repnz
repnz
lods
mov
lea
pop
add
call
lea
push
lods
jmp
xchg
push
fst
shr
add
stos
das
scas
add
xchg
add
or
outs
out
call
push
push
inc
es
mov
les
mov
xchg
test
cmps
mov
pushf
je
cwde
ror
fist
imul
and
pop
inc
nop
sbb
int
scas
cmp
and
mov
out
loope
lea
ds
retf
sub
cmp
scas
fcomi
dec
popa
es
aad
out
mov
not
and
push
push
mov
mov
and
pop
hlt
inc
push
jb
lods
call
xchg
mov
mov
cdq
bound
xor
arpl
adc
xlat
popf
pop
pop
push
lods
shl
fcomp
cmps
imul
inc
in
in
mov
movs
and
mov
xor
sahf
add
sti
xchg
cmp
cmp
in
adc
sahf
adc
(bad)
repnz
mov
sub
fs
out
dec
jbe
mov
mov
(bad)
movs
iret
add
and
out
pusha
fisub
dec
scas
pop
pop
mov
in
inc
jmp
mov
or
stos
clc
and
je
jmp
sbb
mov
dec
pop
mov
sub
into
pop
jbe
sbb
hlt
pop
movs
out
mov
cmp
sub
pop
add
dec
ret
imul
pop
inc
int
ds
pop
outs
sub
mov
mov
jo
dec
data16
push
mov
jl
xor
push
jge
xor
mov
lds
lods
mov
push
into
lock
cs
push
out
ja
ins
test
bound
jne
xor
fisttp
(bad)
cwde
sub
lock
adc
jo
cli
sar
push
fwait
cmp
xor
(bad)
cmp
ror
les
outs
cld
lds
mov
jns
jle
xchg
cmps
(bad)
cs
add
dec
dec
fwait
pop
pop
out
dec
sti
or
mov
movs
push
shl
push
add
cmp
push
repnz
pop
out
dec
outs
dec
ins
ins
sar
ins
ja
sub
cmp
iret
movs
in
(bad)
fnsave
adc
sbb
pop
mov
xor
mov
test
cmps
bound
mov
push
jno
(bad)
xchg
nop
jbe
movs
retf
pop
(bad)
push
ja
pushf
sbb
aas
xor
lock
jl
loop
in
dec
cwde
int3
push
cmp
inc
push
enter
xchg
(bad)
int
into
fcomp
call
cmp
xor
xor
mov
lahf
mov
mov
scas
adc
sub
xchg
pop
ror
mov
into
xchg
or
movs
lea
push
test
adc
ds
adc
fcmovne
les
dec
dec
cmp
cmp
jle
fimul
add
add
cmps
adc
dec
out
repz
dec
pop
add
adc
into
ins
ins
outs
sub
cmp
(bad)
mov
addr16
pop
or
adc
clc
popa
outs
shr
loopne
jg
jne
dec
arpl
push
adc
stos
fisubr
pop
mov
mov
hlt
mov
xor
push
enter
push
mov
mov
mov
mov
ficom
sub
mov
cs
out
in
add
xchg
bound
cmps
pop
xchg
jle
push
fild
sbb
(bad)
pushf
int
sbb
and
dec
mov
pop
jmp
ror
push
mov
sbb
les
sub
es
nop
xor
sahf
rol
push
pushf
inc
daa
sub
xchg
push
rcl
push
loopne
out
sub
mov
sahf
cmp
stos
sbb
inc
stc
xchg
clc
mov
xchg
mov
mov
out
cli
jmp
xchg
mov
fstp
mov
push
stos
repz
mov
add
lea
mov
jmp
iret
add
inc
push
cs
icebp
jge
push
pop
jmp
into
je
xchg
pusha
loop
mov
hlt
mov
nop
xchg
cdq
ret
inc
jne
adc
adc
addr16
popa
add
(bad)
scas
pushf
sbb
scas
ja
call
arpl
std
dec
call
cmp
dec
xor
push
lahf
(bad)
lahf
push
sbb
xchg
pop
xlat
sbb
mov
gs
xchg
leave
mov
ins
out
ret
inc
push
(bad)
in
icebp
adc
jno
pushf
jno
add
outs
cmp
sar
or
mov
cmc
xor
lock
sub
js
mov
je
hlt
and
push
xor
mov
outs
retf
(bad)
out
mov
icebp
lods
mov
jbe
test
pop
pusha
inc
ja
inc
int
mov
cmp
push
movs
cld
outs
pusha
clc
call
push
aas
ja
out
iret
rcr
fs
mov
sub
(bad)
iret
(bad)
fucom
test
je
enter
mov
arpl
scas
dec
adc
pop
inc
add
add
or
lods
cmp
retfw
or
movhps
or
push
xchg
repz
test
and
leave
sub
sahf
mov
addr16
es
ror
xor
xchg
or
pop
shl
scas
jmp
aam
dec
and
stos
sbb
lahf
mov
popa
stos
neg
or
or
push
imul
jg
outs
shl
rcr
loopne
cmp
push
setg
adc
aas
cwde
sbb
icebp
pop
mov
or
cmc
(bad)
jmp
ror
call
test
cmp
int3
leave
xor
fcom
adc
scas
pop
into
pop
fcom
mov
cmp
mov
aam
and
mov
adc
shr
popa
call
push
mov
xor
sub
adc
mov
neg
sub
lods
mov
imul
adc
popa
dec
out
inc
jns
ja
xor
test
inc
jge
add
mov
test
sub
jns
inc
in
retf
cmp
ret
repnz
push
pop
mov
push
adc
test
(bad)
jmp
and
cmp
loop
jb
cmp
movs
and
pop
pop
inc
ins
mov
push
nop
sbb
popa
lods
mov
push
inc
xchg
cld
jmp
jle
jae
jb
xor
aam
jmp
pusha
dec
push
js
mov
(bad)
and
sbb
jnp
pop
shr
sub
or
(bad)
mov
pop
(bad)
fadd
adc
xor
test
test
retf
rcl
dec
div
inc
vshufpd
add
xor
movs
arpl
clc
jb
sbb
adc
movs
(bad)
ficomp
jmp
cmp
push
lods
adc
sahf
fwait
jecxz
icebp
pop
ja
lods
iret
enter
push
adc
iret
jmp
daa
or
bound
sub
mov
cmps
es
sahf
mov
lahf
inc
push
je
dec
mov
retf
cli
and
inc
pop
ds
retf
push
adc
fadd
dec
xlat
lds
sahf
mov
inc
sbb
and
stc
(bad)
sub
inc
ds
add
sti
mov
xchg
pushf
sbb
xor
push
dec
int3
pop
xchg
pop
jno
add
mov
clc
repz
loopne
adc
mov
mov
aam
cld
mov
cmp
mov
gs
mov
rcl
jne
stc
mov
pop
test
jo
(bad)
(bad)
es
pop
and
cli
aad
sbb
or
dec
pusha
arpl
push
push
xor
cmp
dec
mov
popf
imul
psrlq
xor
adc
sub
out
js
fbld
(bad)
adc
pop
xchg
jo
cmp
mov
das
data16
mov
call
fs
push
sub
and
jg
ins
pop
dec
aad
ds
adc
xchg
loope
mov
pop
ror
jnp
cmps
(bad)
mov
pop
(bad)
cmp
imul
cmc
pop
xchg
xchg
push
(bad)
jp
mov
cmp
mov
mov
xor
inc
fistp
jne
retf
outs
aaa
jo
int
push
outs
fwait
sahf
mov
loop
fcom
add
dec
push
adc
push
mov
imul
sar
adc
inc
iret
cmp
fmul
mov
cmp
jbe
pusha
retf
mov
scas
and
sbb
mov
xchg
pop
or
xchg
jp
mov
sub
pop
and
pop
out
pusha
lods
cmp
fnstenv
mov
cli
hlt
or
pop
out
idiv
inc
xchg
push
fucomip
stos
dec
das
jecxz
shrd
loopne
data16
push
stos
jecxz
add
gs
out
scas
shl
push
pop
ds
xor
std
jg
add
call
cmp
adc
arpl
or
mov
pop
add
dec
loope
loope
pop
arpl
and
inc
call
js
retf
iret
imul
sbb
fbld
aad
xchg
pop
xchg
out
enter
in
xchg
lds
(bad)
lahf
jp
cmp
(bad)
out
adc
add
lods
fsub
lahf
lea
fs
push
pop
jae
scas
xlat
nop
in
mov
jecxz
imul
loopne
and
aaa
lods
mov
sti
cmps
clc
jmp
(bad)
jno
sub
shl
int3
or
sbb
js
mov
fcomp
fdivr
push
shl
dec
adc
mov
adc
repz
cmp
ins
test
inc
ficomp
ins
pop
push
and
xchg
aas
push
sub
repz
fdivp
add
cmps
pop
or
retf
out
cmp
aaa
mov
popf
jnp
jo
or
cmp
adc
pop
(bad)
aas
in
data16
hlt
jne
push
lock
sbb
repnz
inc
xchg
or
push
dec
(bad)
fidivr
pop
and
pop
jg
mov
inc
pop
fwait
xchg
dec
std
in
test
inc
pop
sub
mov
mov
ins
mov
test
int
dec
in
pop
cmc
imul
test
rcr
dec
in
ss
fs
sbb
call
fidivr
push
mov
cmp
pop
push
jmp
imul
test
xor
and
mov
jle
das
add
stos
sub
jbe
stos
jnp
pusha
inc
dec
pop
dec
sahf
sub
(bad)
dec
add
cmp
in
(bad)
jns
icebp
push
mov
pop
dec
fnstenv
scas
mov
sub
loop
or
or
mov
mov
sub
cmp
aaa
in
daa
push
rol
fsub
repz
and
daa
pop
and
mov
dec
mov
in
add
fwait
dec
loopne
pop
mov
pop
push
sub
and
cmps
das
cld
jne
mov
sub
cmps
icebp
fistp
int3
adc
int
aam
retf
or
cs
push
jno
test
ss
in
push
lods
mov
or
cmp
jns
(bad)
out
xchg
fsubr
(bad)
sbb
cs
cmps
push
rol
dec
mov
js
xchg
xchg
jge
jne
cmp
lock
inc
in
mov
lahf
mov
lahf
retf
aad
mov
loopne
stos
xor
mov
cmp
mov
dec
sbb
add
scas
push
test
(bad)
pop
hlt
push
dec
nop
push
pop
xlat
or
cmp
test
cmps
popf
sbb
arpl
push
pop
fisub
or
(bad)
jmp
fdivr
sar
sub
shl
cmp
hlt
adc
mov
lods
sub
or
retf
int3
push
xor
jl
push
fidivr
xchg
sti
mov
test
mov
push
aad
imul
loope
pop
sbb
pushf
loope
mov
cmc
into
or
lds
jmp
test
in
adc
push
clc
outs
stos
pop
imul
fistp
cld
cmp
mov
xor
jmp
pop
shl
gs
xor
add
add
jns
jbe
nop
lea
ins
adc
mov
jg
addr16
pop
fcmovu
push
sub
adc
imul
(bad)
loope
adc
xchg
push
jl
jnp
jle
ss
in
push
fcomp
aam
call
mov
pushf
shl
lock
or
stos
push
push
sub
pop
test
mov
cmp
fs
xor
inc
cmp
dec
dec
aas
jbe
cmp
repnz
fisttp
daa
jo
inc
pop
shl
movs
cmp
das
inc
xor
jge
or
loope
pop
out
imul
xor
cmps
jecxz
nop
test
jmp
dec
leave
sub
pop
jns
xchg
and
sbb
sti
icebp
jl
mov
push
cld
dec
xchg
adc
loopne
adc
loop
repnz
pushf
mov
mov
sbb
(bad)
jne
outs
mov
cdq
out
mov
mov
stc
cmp
repnz
jmp
push
mov
mov
jge
xchg
pop
ins
in
fst
dec
int3
mov
lods
test
cmp
inc
sbb
adc
out
pusha
pop
add
jg
pop
mov
fcom
outs
xor
mov
sbb
jmp
xchg
fnstenv
fistp
fidiv
jg
or
cmps
imul
retf
repz
gs
push
arpl
xor
inc
mov
hlt
das
sub
popa
je
cmc
mov
mov
out
mov
test
std
(bad)
call
mov
cmp
jmp
push
test
inc
inc
jns
mov
pop
xor
(bad)
add
or
sub
neg
push
iret
sub
pop
cmp
jo
cmp
mov
stc
xchg
adc
jecxz
out
aam
or
and
mov
push
push
test
cmp
fcos
in
test
xchg
js
aas
xchg
fcomp
sbb
jle
pop
xchg
xor
mov
xchg
jb
mov
and
sub
jmp
xchg
push
adc
das
xlat
cdq
pop
(bad)
sbb
bnd
and
icebp
pushf
out
int
sub
jmp
lds
add
pop
sub
sub
cmp
mov
neg
and
mov
cmp
pushf
rcl
in
xor
nop
pop
mov
fmul
test
lock
push
cmps
adc
call
mov
cmovno
(bad)
dec
rcl
fmul
cli
test
mov
pop
pop
jecxz
adc
or
aaa
aam
mov
or
pop
xchg
mov
sahf
cdq
into
push
jnp
sbb
jne
retf
jle
sbb
sti
pop
jmp
addr16
push
pop
stos
cmp
fst
mov
retf
aad
xor
mov
shl
das
not
rcl
loop
jne
imul
repz
push
movs
stos
in
mov
mov
mov
(bad)
pop
pop
mov
jl
lds
mov
fisttp
cmc
cmp
push
dec
addr16
sbb
xchg
xchg
test
fs
out
inc
and
jp
out
xlat
bound
sar
js
mov
ret
popa
xor
pop
xor
loopne
adc
mul
adc
inc
scas
mov
dec
inc
stos
fimul
test
rcl
addr16
mov
int
outs
movs
in
push
push
sub
pop
aam
js
and
int
dec
shl
arpl
ins
dec
icebp
jbe
jns
test
out
sub
cmps
fsub
aad
call
add
push
xchg
add
mov
in
stos
adc
and
ss
int
hlt
mov
out
repnz
mov
cmp
mov
xchg
ret
sbb
int3
xor
leave
aam
daa
dec
pop
or
into
mov
jno
and
mov
jmp
push
sub
nop
mov
xchg
mov
cmp
imul
dec
pop
shl
adc
push
rcl
fsub
je
(bad)
sub
fidivr
fbstp
and
adc
mov
pop
pop
mov
fsub
test
add
mov
mov
test
or
xchg
pop
xchg
or
push
push
push
and
add
int3
(bad)
nop
ror
pop
mov
daa
scas
or
lock
mov
adc
dec
outs
inc
retf
cmp
mov
test
ja
push
xchg
imul
cmp
pushf
push
sbb
loop
lock
shl
test
push
stos
and
mov
mov
scas
cmp
out
nop
loopne
inc
mov
pushf
push
sti
mov
repz
xor
jne
mov
das
std
into
pop
pop
fstp
retf
and
outs
xlat
pop
fnstenv
out
pop
xchg
xor
dec
out
retf
mov
sub
mov
mov
dec
(bad)
lods
(bad)
sub
or
inc
out
inc
int
cmp
mov
clc
lods
retf
add
ret
shl
test
ret
jge
push
loop
imul
add
push
je
test
xchg
pop
popf
sub
inc
push
mov
ja
jnp
push
stc
sub
popf
sbb
jmp
test
xor
outs
retf
cli
sub
mov
daa
cmp
add
add
dec
mov
mov
(bad)
jns
mov
jp
push
xor
adc
push
mov
nop
pushf
imul
xchg
nop
xor
loope
jbe
push
xor
xchg
or
add
jb
mov
sbb
sub
ins
or
jmp
in
add
into
aaa
shl
xlat
push
ja
pop
nop
push
push
lock
imul
dec
jns
pop
inc
jne
daa
mov
cmc
push
xor
mov
sbb
inc
sub
mov
sti
std
or
int3
cmp
test
scas
pop
inc
imul
cdq
retf
popa
popa
push
sbb
dec
fs
ror
mov
mov
add
std
ins
mov
mov
xchg
cmp
push
adc
test
dec
inc
repz
ins
add
cs
lods
pushf
mov
clc
sbb
mov
inc
mov
cmc
adc
retf
push
stos
push
cmp
and
push
fwait
add
sub
push
add
dec
sbb
movs
stc
jge
cmp
xchg
cmovb
mov
mov
mov
sbb
das
jg
movs
mov
pusha
idiv
and
mul
out
cwde
xchg
aad
adc
dec
jo
minps
movs
mov
out
push
jbe
cmp
(bad)
jne
sahf
iret
out
nop
mov
scas
push
add
adc
pop
not
sbb
loopne
(bad)
xor
mov
dec
outs
cmc
mov
fld
out
adc
clc
jge
fidivr
or
mov
mov
dec
mov
lock
mov
mov
movs
clc
sub
mov
mov
stos
stc
push
add
jae
dec
inc
fsubr
ins
int3
dec
sbb
pop
call
mov
adc
pop
fisubr
out
rcr
imul
loop
cmp
gs
adc
pushf
lahf
dec
cmps
jl
add
mov
ret
mov
test
mov
or
aam
push
sahf
imul
dec
inc
stos
cmp
xchg
retf
je
(bad)
jge
pushf
cwde
and
push
div
dec
mov
push
cmp
jmp
ds
(bad)
sahf
shr
in
in
cmp
in
test
retf
jne
dec
xchg
outs
pushf
mov
fwait
push
pop
jne
mov
loopne
mov
ds
inc
outs
mov
push
pushf
pop
xchg
out
fs
fmul
fstp
mov
push
adc
xor
not
aas
mov
imul
dec
jecxz
out
sub
fisubr
mov
lock
ss
cmc
stc
jae
mov
mov
adc
lahf
mov
iret
movs
retf
push
or
pop
sbb
jno
mov
lock
ins
out
in
sbb
xor
or
sub
jge
dec
inc
ja
jecxz
xor
mov
loope
xchg
test
cli
pop
stos
dec
(bad)
ret
jmp
pop
inc
cmp
ret
mov
xchg
xor
and
ja
or
add
and
xchg
xor
ss
push
fisub
jmp
aad
jns
imul
mov
shl
aam
mov
and
fstp
dec
sahf
mov
jle
sbb
jmp
xor
add
gs
loopne
push
jecxz
pop
inc
adc
je
inc
outs
and
mov
cld
outs
shr
lahf
(bad)
sbb
sub
not
arpl
xchg
int3
jmp
retf
ds
xchg
out
jo
hlt
mov
into
inc
(bad)
repnz
(bad)
loopne
mov
jb
mov
xchg
imul
aad
pop
pop
movs
and
pop
inc
dec
(bad)
xor
xor
loop
inc
(bad)
xlat
cld
adc
inc
ja
inc
cmp
sahf
cdq
sti
or
pop
add
in
push
pop
inc
(bad)
mov
jge
cmp
jne
cmps
out
call
lds
loop
dec
cdq
mul
shr
xchg
in
dec
cmp
pop
sbb
(bad)
in
test
(bad)
leave
cmp
sbb
ret
lods
pop
xor
mov
call
aaa
xor
popf
fnstsw
xchg
push
mov
pop
fidiv
push
gs
fadd
cmp
dec
jge
frndint
clc
scas
jmp
test
stos
popf
cld
rol
mov
cmps
mov
push
xchg
push
mov
lock
(bad)
xchg
cmp
push
push
dec
clc
stc
mov
sub
inc
daa
dec
fstp
loope
mul
into
cs
fbld
cmp
push
mov
push
ret
aad
push
in
or
ret
cwde
add
and
sub
mov
cmp
iret
test
cli
xlat
mov
fwait
push
pushf
stos
adc
mov
test
(bad)
je
(bad)
nop
push
test
inc
les
sbb
das
xor
dec
xchg
popf
and
jnp
dec
push
in
xor
mov
and
ret
movs
clc
sahf
test
and
sbb
fldenv
push
push
push
push
test
xchg
jge
pop
scas
jl
and
cmp
mov
push
or
pop
outs
push
scas
push
fs
hlt
mov
xor
pop
aas
lods
sbb
lods
icebp
and
gs
lods
scas
push
dec
xor
in
ret
ret
push
in
out
jecxz
out
jae
into
(bad)
jmp
xor
div
jbe
inc
int
(bad)
ss
adc
loopne
xchg
jmp
ins
fisttp
push
or
mov
cmp
sub
add
inc
jo
sar
inc
jbe
int3
pop
fs
not
(bad)
ss
pop
imul
jmp
out
sti
in
inc
mov
push
inc
es
xchg
(bad)
jae
mov
or
icebp
cmc
gs
sub
xchg
and
(bad)
mov
int3
pop
iret
data16
in
jl
addr16
(bad)
jmp
add
shr
sbb
add
leave
cld
out
jnp
xchg
ror
pusha
icebp
jmp
dec
mov
arpl
fst
nop
cmc
push
jb
mov
jle
sbb
daa
pop
pcmpgtb
push
ja
pop
lahf
cmp
xor
sub
jbe
cmps
xor
repz
ret
sti
and
push
push
rcl
push
mov
(bad)
popf
pop
lock
aaa
cmps
or
inc
fmul
push
sub
lds
and
inc
pop
fild
dec
retf
push
ss
into
xchg
mov
bound
jne
mov
cmp
mov
dec
push
cld
cs
and
fwait
repz
xchg
mov
arpl
shl
jg
xchg
jb
inc
push
pop
cdq
(bad)
std
xor
aas
xchg
sub
inc
nop
lods
xor
loop
xchg
or
pop
aaa
sub
xor
retf
push
movs
loope
(bad)
push
jo
mov
int3
push
dec
sbb
bound
sbb
pushf
pop
jl
jle
xchg
cld
dec
mov
mov
mov
hlt
jns
ret
dec
or
or
inc
jp
mov
and
jmp
or
scas
mov
shl
pop
push
jo
movs
mov
into
fwait
rcr
out
lds
loope
ja
cmps
lods
push
repz
sbb
mov
mov
adc
or
fs
sub
adc
and
mov
out
in
jg
push
add
test
ror
or
push
cmp
shr
test
(bad)
dec
cmc
mov
int3
jo
popw
sahf
mov
pop
call
cmp
add
xor
jno
lahf
jg
sahf
into
hlt
pop
fwait
rol
ror
scas
data16
fbld
aas
ror
sti
or
push
mov
sbb
mov
and
dec
mov
pop
into
mov
push
mov
(bad)
fwait
scas
outs
cmp
stc
sub
mov
and
pop
cmp
fst
ret
pushf
pop
sub
push
cmc
fcom
jnp
aad
test
inc
mov
push
jle
inc
mov
mov
push
adc
es
out
mov
jp
push
(bad)
sbb
mov
out
aas
xchg
push
xor
dec
sub
or
xchg
les
(bad)
jmp
mov
in
sbb
iret
jo
je
in
in
aas
outs
popf
jns
xchg
les
cmps
jge
es
loop
clc
inc
inc
xchg
xchg
pop
and
fsqrt
adc
sbb
pop
jmp
inc
inc
push
scas
add
fcom
daa
jle
ds
pop
inc
inc
pop
mov
les
std
dec
mov
sbb
push
daa
movs
jns
pusha
test
push
jae
out
data16
xchg
push
xchg
out
pop
dec
push
jnp
xchg
pop
lock
mov
sbb
inc
pop
mov
and
sbb
push
cmps
xlat
rol
inc
inc
dec
push
pop
xor
and
lock
shl
fimul
xor
repnz
cmp
les
movs
dec
sbb
jbe
dec
outs
das
shr
cli
cmp
clc
dec
(bad)
jnp
mov
iret
jno
inc
mov
aas
sar
lds
pushf
mov
mov
xchg
nop
out
sbb
sub
inc
mov
xchg
add
inc
jecxz
xchg
xor
mov
inc
ds
jg
jno
repnz
pop
or
inc
pusha
pop
push
imul
push
gs
sub
inc
std
adc
mov
mov
jo
and
xchg
xlat
xchg
dec
mov
sbb
cmp
outs
arpl
nop
in
int3
not
int3
les
repz
in
mov
stc
inc
ins
sub
jbe
inc
pop
add
int
mov
popa
sbb
stos
std
fistp
cmc
std
test
push
mov
mov
sbb
ja
xchg
cmps
retf
dec
test
cmc
xchg
dec
push
mov
daa
add
and
fsub
adc
(bad)
shr
sbb
cmp
xchg
enter
push
bound
jb
or
fist
ins
and
and
fwait
add
stos
and
addr16
mov
inc
add
(bad)
adc
sbb
adc
aas
sub
mov
pop
ficomp
cmp
inc
mov
imul
std
dec
sbb
xchg
mov
pop
fist
adc
mov
call
cmp
inc
or
dec
pushf
jae
xor
jecxz
jle
clc
aam
fld
inc
cmp
sbb
inc
data16
or
xchg
fstp
xchg
mov
cwde
out
or
sbb
out
data16
cmc
(bad)
fimul
or
stc
data16
sbb
sbb
enter
mov
mov
loope
lahf
imul
xchg
out
jns
add
inc
shr
sub
data16
sbb
out
jae
in
cmp
xchg
xchg
push
mov
retf
aad
mov
or
mov
es
jbe
into
sub
push
jle
push
inc
mov
push
mov
cli
out
add
pop
(bad)
lock
bound
dec
sub
ja
cmp
sub
xor
or
adc
mov
sahf
(bad)
sar
sub
adc
sbb
loopne
dec
push
add
test
push
jle
sub
imul
adc
sbb
icebp
sti
mov
push
ret
call
sar
adc
push
mov
xlat
daa
or
daa
or
rcl
ret
stos
sti
mov
xchg
add
out
pop
mov
jg
data16
leave
loope
shl
ja
leave
adc
out
cmp
sbb
jno
fist
cmp
(bad)
fadd
cmp
or
pop
mov
sbb
pop
jg
pop
shl
sub
and
sub
es
cdq
sbb
cmc
stos
inc
push
outs
cmp
sbb
jns
sbb
mov
(bad)
pop
push
enter
stos
ds
hlt
cld
(bad)
jmp
or
fnclex
ins
add
sbb
pop
in
mov
lds
mul
test
push
xchg
(bad)
inc
mov
or
or
pusha
invd
dec
ficomp
lock
inc
fiadd
push
mov
imul
mov
xor
jb
adc
mov
and
shr
pop
jnp
psrlw
cmps
daa
jge
mov
mov
or
int
out
adc
ds
out
test
div
pop
adc
daa
nop
dec
rol
sub
data16
in
call
int
and
daa
fdiv
pop
jge
sub
dec
inc
or
aad
push
sub
pop
ins
out
in
hlt
repnz
mov
mov
loope
mov
enter
inc
push
shl
push
and
dec
jne
iret
cli
cmp
imul
hlt
fist
stos
sbb
mov
in
pop
fidiv
ret
outs
and
xchg
mov
cli
iret
push
mov
mov
jae
fs
gs
add
dec
in
dec
test
mov
fisub
mov
mov
sub
pop
adc
sbb
test
push
mov
call
adc
mov
mov
dec
and
imul
push
mov
(bad)
sahf
daa
icebp
and
div
add
aaa
neg
ret
pop
xchg
out
sar
loope
xor
lods
jnp
or
mov
(bad)
xchg
jmp
sub
inc
addr16
pop
fs
push
pushf
xchg
xchg
xchg
loopne
loope
mov
stos
js
enter
inc
add
jns
inc
xchg
out
aaa
enter
mov
retf
push
adc
pop
cmp
nop
pop
mov
mov
ins
fst
jmp
mov
xchg
adc
lds
xchg
(bad)
push
outs
shr
cmc
call
(bad)
loopne
dec
rcl
add
addr16
les
mov
call
add
test
mov
test
fiadd
daa
out
(bad)
dec
lahf
jge
cmp
out
mov
dec
lods
popa
scas
add
push
lods
call
call
test
jno
jg
xor
and
and
sub
jno
cwde
(bad)
aam
xchg
in
jmp
add
or
fsubr
imul
sub
(bad)
loop
(bad)
das
out
bound
repz
movs
push
xor
test
lods
jmp
das
mov
jle
(bad)
push
jo
dec
movs
fimul
jno
test
outs
stos
in
cmp
imul
idiv
mov
jns
repnz
stos
and
push
jge
nop
xor
jne
das
jo
cmp
fidiv
push
(bad)
repnz
push
cmp
fldenv
inc
pop
stos
sbb
sub
inc
sbb
xor
push
nop
mov
mov
pop
xchg
dec
and
jecxz
ror
shr
mov
in
retf
add
lds
jo
(bad)
shl
cmps
das
add
push
jns
push
dec
lods
pop
mov
mov
loopne
lahf
ror
in
lods
ds
push
test
push
jns
mov
mov
ins
and
push
loope
jb
mov
fcmovnbe
xchg
jmp
cdq
pop
pop
mov
loop
xor
inc
push
push
or
popa
popa
inc
pop
pop
mov
(bad)
clc
add
not
sbb
or
es
jmp
fldcw
inc
mov
and
sbb
fst
pop
pop
mov
into
cwde
(bad)
iret
fdiv
shrd
sbb
sbb
lea
retf
pop
fcom
add
aas
les
and
out
dec
xor
scas
in
dec
mov
sub
add
int
les
sub
mov
pop
jmp
and
and
mov
mov
inc
dec
jbe
dec
fwait
cmp
ret
and
cmps
xchg
pop
shl
sbb
jbe
(bad)
xor
adc
(bad)
popf
inc
outs
pop
or
add
(bad)
(bad)
dec
js
pop
add
mov
cmp
push
inc
in
xchg
push
sahf
das
mov
inc
dec
mov
jge
jl
test
scas
or
mul
mov
mov
mov
int
shr
push
aam
adc
xor
rcr
sbb
out
rol
call
test
cmp
daa
hlt
and
test
dec
(bad)
mov
addr16
scas
mov
or
shr
jmp
xchg
mov
(bad)
sahf
xor
pop
int
lea
loopne
shr
mov
mov
shl
aaa
scas
mov
mov
cmps
dec
jne
lahf
retf
xchg
in
jns
dec
or
sti
xchg
test
jmp
xchg
mov
adc
mov
push
push
xchg
loope
ret
sbb
(bad)
cli
outs
jmp
mov
aam
test
aaa
sbb
mov
out
cmp
in
sahf
rcr
pop
mov
jmp
fisubr
aad
push
fdiv
loopne
je
or
mov
into
sub
sub
inc
es
jmp
push
mov
pop
call
and
xor
jp
inc
aas
jae
mov
jge
or
mov
cmc
mov
and
jl
pop
mov
xchg
bound
pop
pop
or
dec
jg
in
jae
mov
scas
jbe
call
ja
addr16
(bad)
shl
cld
push
outs
sub
pop
mov
call
dec
mov
cs
pop
lds
mov
mov
test
outs
ins
inc
aad
in
add
aad
test
cmp
and
mov
push
and
adc
(bad)
lock
adc
add
or
jle
ins
nop
(bad)
adc
push
jmp
in
add
or
xchg
xor
inc
js
mov
clc
je
or
shr
jo
dec
das
xchg
pop
cwde
sar
outs
or
test
sub
jecxz
es
into
movs
mul
push
mov
adc
daa
stos
stos
jmp
jl
(bad)
inc
test
mov
jge
xchg
pop
(bad)
aas
inc
ja
test
dec
lods
shl
int3
adc
mov
push
ret
(bad)
cmc
shr
stc
(bad)
loopne
add
sti
test
fdiv
js
mov
mov
enter
xchg
mov
mov
xchg
sbb
js
jmp
sub
ret
add
sbb
jmp
les
jbe
xlat
popf
jns
enter
test
int3
pusha
push
jp
stc
(bad)
push
and
call
fwait
test
and
movs
xchg
dec
jle
jle
cmp
jecxz
mov
and
ins
das
sahf
and
inc
mov
lds
aaa
push
xchg
aam
(bad)
jmp
pop
jge
jg
jne
inc
arpl
adc
cmc
int
ret
add
retf
(bad)
ins
les
jb
add
or
out
icebp
xchg
cld
popf
ja
mov
push
retf
leave
jnp
and
(bad)
imul
test
dec
lods
jg
mov
push
inc
pop
and
imul
popa
js
jge
sbb
inc
(bad)
mov
or
popf
pop
mov
dec
(bad)
dec
adc
cmp
adc
adc
leave
call
xor
(bad)
pop
cmp
fwait
sub
or
mov
scas
push
enter
sti
imul
sub
aad
fnsave
popa
das
lahf
and
fsubr
or
or
adc
mov
and
pop
js
fld
jb
loopne
rcr
sbb
push
mov
outs
std
mov
int3
pop
xchg
into
sbb
mov
jle
adc
pushf
jo
out
sub
jbe
imul
jno
stos
je
ins
xchg
pop
lods
lds
fcmovne
pop
jno
dec
and
cwde
lods
(bad)
neg
movs
jle
fidiv
mov
out
xor
mov
push
push
dec
or
outs
repnz
scas
popf
or
pop
in
movs
fild
cmp
adc
mul
test
push
loop
in
bound
fld
mov
mov
fldenv
pop
xchg
fdiv
dec
sub
dec
mov
fcom
mov
out
mov
mov
or
repz
enter
add
test
(bad)
(bad)
ins
dec
dec
add
jle
mov
mov
shl
add
in
aaa
fst
aas
or
scas
int3
jne
or
test
xchg
lahf
(bad)
mov
mov
out
sbb
call
call
mov
stos
add
lock
sub
xchg
in
cdq
pop
mov
push
test
cmp
jle
mov
arpl
mov
fdivr
lea
inc
dec
adc
and
cdq
mov
pop
jle
cld
push
adc
lea
(bad)
xor
movs
scas
or
mov
jo
arpl
data16
push
arpl
popa
cmp
shl
mov
pop
xchg
push
sub
or
sub
hlt
pop
push
add
fucomip
mov
scas
out
repz
push
popf
mov
test
push
(bad)
loope
mov
retf
fstp
push
test
mov
or
xchg
sbb
mov
and
fdivr
fisttp
adc
cmc
sbb
pop
xor
and
push
sub
xchg
jb
dec
mov
call
mov
adc
aaa
xchg
fimul
retf
and
sbb
cmc
push
xlat
es
test
mov
xlat
push
dec
push
or
in
icebp
pop
or
add
or
jnp
jecxz
add
outs
mov
cs
xor
sti
add
inc
bound
cdq
lds
dec
daa
test
dec
pop
lahf
movs
inc
sub
mov
int3
mov
call
mov
stos
in
mov
push
dec
mov
dec
jmp
call
fwait
adc
int3
cwde
mov
pop
sub
imul
push
ss
add
(bad)
imul
and
adc
fistp
and
jo
cmps
rcr
inc
pusha
popa
jp
mov
scas
add
stos
dec
push
xchg
xor
not
pop
sub
xor
and
add
mov
push
retf
and
jb
scas
mov
int3
sub
mov
and
inc
jns
stos
adc
test
ins
retf
sbb
outs
scas
mov
ss
ret
xor
jg
xor
nop
(bad)
div
aas
imul
inc
loop
sbb
cwde
adc
scas
pop
push
add
sahf
mov
sbb
dec
inc
(bad)
push
cs
pop
jmp
cmp
pop
mov
(bad)
adc
lods
aaa
aaa
retf
call
ins
and
test
ja
and
cdq
and
push
pop
mov
retf
mov
rol
shl
cdq
add
adc
stos
rol
inc
or
es
(bad)
adc
xlat
pusha
ret
inc
je
js
fild
idiv
adc
out
in
repnz
mov
sahf
and
retf
(bad)
loop
pop
mov
pop
mov
popf
pushf
in
jnp
push
pop
add
mov
pop
fst
xchg
pop
popf
into
xchg
cmp
lea
add
jl
mov
lds
xchg
mov
cmp
mov
jmp
push
add
ficomp
ins
dec
push
xor
push
xor
and
mov
dec
nop
jge
ja
mov
dec
or
sub
xor
jge
adc
and
jne
pop
xchg
push
jns
inc
inc
fld
scas
fdivr
xchg
pushf
sahf
mov
mov
xlat
adc
mov
or
add
rol
add
out
cmp
pop
pop
movs
add
outs
ja
aas
div
push
add
lea
addr16
inc
pop
xchg
mov
push
adc
dec
aaa
in
jnp
mov
add
daa
fldenv
inc
sub
into
or
jae
jns
xchg
or
sub
push
mov
xchg
mov
movs
xor
fstp
mov
pop
cdq
add
jne
jnp
ret
lods
jo
shl
aam
ror
or
sub
pop
retf
cmp
mov
add
int3
push
cmp
in
sahf
sbb
hlt
aaa
test
stos
mov
adc
sbb
xor
mov
sub
ficom
push
push
lds
mov
pushf
outs
int3
outs
call
jl
mov
mov
out
(bad)
das
ret
sar
inc
test
sbb
loopne
stos
(bad)
mov
call
add
fwait
add
lds
mov
aam
dec
ins
jnp
out
xchg
sbb
mov
adc
and
sbb
in
mov
cmps
push
dec
lar
into
je
(bad)
mov
jl
(bad)
and
cmp
adc
in
adc
loopne
test
sub
sub
xchg
jo
xchg
dec
nop
clc
jns
lods
bound
scas
mov
or
outs
sub
sbb
je
mov
add
add
int3
adc
mov
mov
push
mov
fdivr
mov
pop
daa
dec
sbb
aad
loopne
cld
aaa
mov
sub
adc
jle
add
lahf
xchg
das
icebp
push
mov
xlat
xor
mov
jg
jno
ins
adc
mov
or
xchg
out
shr
xchg
push
jne
cmp
jecxz
xor
fs
std
sar
out
call
inc
rol
call
mov
pop
pop
sahf
pop
jl
imul
popa
jl
dec
dec
mov
or
cmps
pop
ret
es
dec
loopne
sbb
mov
push
popf
push
ret
in
add
jmp
sub
lock
psubusw
data16
mov
dec
int
push
cmp
ins
mov
sub
gs
and
adc
ss
call
loop
pop
jmp
xchg
jmp
and
repnz
push
in
dec
into
inc
popa
adc
inc
mov
es
scas
ins
add
push
or
je
cmc
(bad)
in
sub
hlt
das
and
in
movs
fcom
leave
int3
aam
dec
mov
outs
jecxz
push
fnstsw
adc
jle
in
fs
fst
retf
je
push
dec
sahf
sbb
mov
mov
addr16
sti
cmc
(bad)
adc
cmp
fist
mov
call
scas
inc
and
out
sbb
mov
mov
sbb
fs
xchg
pushf
cmps
jmp
or
sbb
clc
xchg
(bad)
cli
(bad)
pusha
xchg
pop
sub
movs
test
in
mov
mov
sbb
lahf
xchg
(bad)
xchg
dec
xchg
inc
add
xchg
out
arpl
pop
dec
dec
mov
adc
test
jnp
add
adc
adc
test
xor
lahf
in
addr16
pop
jecxz
in
nop
sbb
cmp
add
arpl
jecxz
das
movs
push
cmps
dec
data16
nop
out
cmp
ja
mov
adc
jo
jl
es
push
je
mov
jmp
jl
out
add
pop
sti
push
jns
adc
cmps
jp
shr
outs
xor
and
jle
mov
mov
xchg
pushf
mov
add
xor
das
out
add
es
imul
dec
inc
ret
xchg
retf
in
cli
xchg
shl
ins
mov
and
aad
xchg
push
and
xchg
push
in
gs
jae
loope
mov
or
mov
js
sub
js
adc
pop
sbb
lods
mov
out
inc
addr16
push
dec
push
outs
adc
ds
push
fwait
stos
mov
int
xor
mov
out
shr
cmp
lock
mov
movs
dec
adc
sub
bound
mov
into
int3
xchg
out
fmul
dec
dec
stc
test
cs
jnp
fist
cmps
shr
aam
push
mov
retf
lahf
mov
stc
jns
rcl
sub
std
cdq
dec
stos
hlt
ror
or
ins
popa
sub
and
mov
adc
aam
sub
cld
pop
cmp
sbb
adc
mov
mov
xchg
cmp
stos
mov
mov
xor
pop
push
mov
mov
mov
cld
ror
cdq
dec
mov
mov
nop
and
mov
fnstsw
jae
int
sub
cmps
mov
shl
xor
int
out
ins
(bad)
and
add
test
fwait
adc
dec
cmp
js
xchg
sub
pop
fcomp
sub
jp
mov
adc
scas
lahf
nop
outs
mov
and
push
inc
mov
or
dec
shl
in
mov
or
xor
inc
sub
pop
dec
test
and
and
adc
mov
jmp
mov
iret
xchg
xor
and
or
jne
mov
sti
or
fwait
cmps
out
fnstcw
mov
inc
and
clc
push
jmp
push
pop
xchg
test
in
ret
fisubr
dec
dec
jle
xchg
int3
or
bound
push
cld
pop
mov
push
cmp
mov
pop
mov
cld
pop
jno
das
mov
push
cmp
cmp
iret
js
adc
arpl
outs
rcl
pop
jns
std
jecxz
call
inc
test
call
push
out
outs
setbe
xor
adc
push
cwde
mov
scas
out
cmp
pop
adc
cmc
gs
or
ss
bound
inc
mov
pop
sbb
jmp
mov
push
xchg
pusha
aas
lods
push
pop
mov
push
pop
aas
cmp
int3
or
ss
test
sub
in
push
xor
fcomip
adc
js
xchg
(bad)
shr
jns
cmp
xchg
fsub
ins
xlat
outs
rcl
fnstcw
add
pop
repz
mov
xchg
loope
inc
dec
add
call
cmp
or
imul
jmp
jnp
mov
add
mov
xlat
data16
adc
pop
inc
jae
pop
retf
rol
xor
mov
push
daa
test
lds
add
xchg
lods
int
stc
out
retf
xor
out
pcmpeqb
sahf
pop
nop
mov
movs
and
pop
std
pop
mov
or
lods
jb
fisub
lods
sti
mov
push
lea
out
mov
fcom
ret
ret
xchg
mov
xor
jmp
jb
ins
in
or
(bad)
mov
repz
inc
mov
mov
lods
in
ss
mov
mov
popa
add
pop
sub
or
fild
std
dec
and
cli
mov
or
add
mov
cwde
inc
xor
lods
aam
cmp
push
pop
in
push
mov
jmp
dec
or
inc
pop
sar
cmp
mov
(bad)
push
push
jl
mov
jne
push
xor
iret
lock
jnp
cld
dec
cmp
inc
mov
or
das
jmp
cmps
(bad)
cs
imul
(bad)
cld
data16
mov
(bad)
xor
adc
in
inc
bound
mov
push
test
jne
pop
in
xor
mov
add
clc
xchg
push
add
pop
sub
cmp
mov
push
inc
retf
fisttp
outs
adc
and
popf
retf
cld
push
ins
ss
pushf
mov
and
leave
adc
call
pop
test
imul
dec
mov
js
inc
or
movs
or
jmp
dec
in
out
ficomp
xchg
xor
push
push
ds
cs
pop
add
popf
out
into
mov
adc
daa
daa
popa
xchg
push
sti
enter
scas
or
pop
fwait
retf
bound
add
pusha
sahf
sbb
inc
call
cmp
add
cmps
into
mov
xchg
adc
jge
and
fdiv
jbe
idiv
xor
ficomp
inc
xchg
mov
mov
(bad)
xor
pop
pop
pop
pop
push
pop
sub
or
cwde
xor
test
adc
mov
mov
aaa
xor
push
dec
dec
cmc
in
xchg
xchg
jbe
sub
inc
sti
out
mov
loope
pcmpgtd
stc
or
sbb
or
xchg
fild
jg
test
xchg
mov
popf
sbb
imul
cld
xor
dec
cmps
adc
push
push
mov
ret
push
cmps
cmps
cmp
ins
sbb
jg
mov
sub
cmps
mov
inc
jmp
adc
sbb
sub
mov
pop
icebp
rcl
cmps
stc
sti
test
cwde
lods
mov
add
ss
xor
fst
fucompp
cmp
mov
in
fsub
in
push
mov
aas
push
(bad)
imul
push
inc
ret
mov
in
mov
arpl
sbb
scas
rcl
and
rcr
push
cmp
cmps
je
stos
gs
xrelease
lods
adc
not
pusha
push
xchg
int3
sbb
mov
dec
gs
add
mov
int
aam
dec
out
movs
aas
repz
mov
xchg
sub
fiadd
test
cdq
cmps
sub
cwde
ss
inc
push
mov
les
imul
(bad)
gs
fimul
aaa
mov
xor
inc
into
scas
out
mov
call
rcl
ds
sub
add
lea
jae
jecxz
mov
in
call
pusha
cmc
in
adc
std
arpl
imul
sbb
aaa
sbb
das
(bad)
jge
(bad)
repnz
jb
jno
mov
rcl
rcl
fimul
push
(bad)
or
fs
cdq
rcl
clc
mov
push
ds
je
add
setnp
aad
cld
call
and
push
das
adc
xor
or
xor
adc
jb
pop
add
xchg
xchg
pop
or
jp
and
or
xor
mov
out
xlat
loop
pop
mov
xchg
fidivr
rcr
pushf
jne
les
xchg
push
mov
lods
outs
cdq
jae
xchg
push
call
mov
pop
popf
add
inc
pop
mov
pop
cmp
cli
popf
pop
outs
add
data16
or
ins
adc
add
outs
clc
stos
inc
mov
dec
push
jae
cdq
out
in
inc
jle
xlat
loop
inc
mov
adc
dec
cmp
and
sub
fdivr
push
std
in
adc
fcmovbe
cmp
sahf
fwait
sbb
pop
xchg
icebp
daa
jp
mov
frstor
cli
imul
shl
das
out
jae
arpl
jge
dec
mov
dec
xor
cld
push
add
pop
ret
mov
iret
je
adc
mov
xor
push
pop
sub
inc
addr16
pop
cmp
push
dec
es
ficom
(bad)
daa
dec
call
add
and
out
out
retf
int3
fcomp
pop
js
mov
xlat
inc
dec
xlat
add
inc
push
add
xor
inc
pop
out
data16
mov
das
call
scas
cmp
dec
xchg
adc
dec
ins
enter
ins
(bad)
cmp
xchg
fwait
das
and
sbb
das
cmps
inc
sub
jne
push
or
inc
stos
xchg
sub
mov
leave
push
mov
cmps
add
popa
sub
dec
cs
js
cmp
jbe
push
mov
pop
mov
mov
bound
fistp
cmc
lods
cmp
mov
(bad)
jmp
lahf
ins
add
jnp
jno
mov
mov
hlt
into
jbe
mov
mov
test
and
pop
mov
sbb
std
rcl
scas
mov
jecxz
inc
int3
les
mov
mov
scas
into
outs
stos
push
push
(bad)
jmp
pop
pop
(bad)
aas
out
bound
sub
ror
mov
dec
rcl
sar
mov
adc
pop
xchg
dec
add
sbb
iret
mov
and
inc
mov
inc
xor
outs
mov
repnz
add
mov
push
mov
sbb
ins
pop
adc
fcomp
pop
xchg
and
xor
stos
nop
mov
hlt
jb
ins
int
push
and
pop
lea
std
cdq
ins
movs
xor
sbb
bound
outs
das
arpl
xlat
scas
add
xor
in
jp
rcr
cmp
pop
and
xchg
addr16
lods
pop
mov
in
mov
mov
aas
cmps
aaa
mov
retf
std
test
sbb
xchg
loop
push
out
push
movs
stos
pop
mov
sub
mov
int
mov
xor
aam
stc
ins
sar
mov
pop
movs
jmp
xor
and
xchg
push
(bad)
leave
jp
push
push
push
outs
sub
xchg
jne
popf
lds
aaa
sbb
or
add
jns
push
push
inc
daa
jb
mov
inc
mov
adc
retf
mov
push
adc
pusha
out
pop
pop
mov
mov
or
mov
adc
stc
ja
fisttp
in
sub
out
push
ins
pushf
imul
jle
dec
dec
les
movs
or
ja
pop
popf
mov
aas
adc
int
in
mov
ss
sti
push
and
push
test
mov
xchg
xchg
out
jmp
sbb
xor
test
(bad)
or
mov
dec
xchg
loopne
jb
mov
lods
push
jno
into
outs
sbb
and
xor
test
add
rol
xchg
pop
pop
or
mov
jmp
sub
jecxz
mov
mov
push
mov
imul
ret
ins
inc
add
cmps
ins
add
jno
xor
lods
inc
test
lea
ins
rcr
jmp
mov
push
mov
push
mov
xchg
pusha
cmc
sbb
aad
fld
retf
loope
mov
mov
outs
mov
pop
push
repz
(bad)
icebp
sahf
cld
and
fistp
mov
or
das
arpl
daa
or
inc
cmp
not
repz
mov
cmp
fmulp
mov
ret
aam
popf
ja
xchg
(bad)
mov
dec
pop
test
pop
je
pop
push
jns
outs
dec
mov
ds
test
add
pop
leave
pop
mov
xor
mov
repz
pop
cmps
push
xchg
fisttp
les
out
mov
maxps
(bad)
pop
mov
js
movntq
out
repz
fcomp
jne
ds
and
xchg
xlat
jbe
xrelease
xchg
xor
push
pop
loope
pop
into
or
add
pusha
lods
or
xor
stc
scas
rcr
stos
jmp
inc
out
scas
neg
cwde
inc
push
inc
ror
test
add
mov
shl
pop
jmp
or
inc
and
clc
xor
adc
mov
(bad)
lods
jp
cmps
adc
ins
(bad)
jmp
enter
cmc
inc
pushf
std
cs
shl
cmp
xor
mov
pop
push
or
mov
(bad)
out
xchg
jmp
movzx
mov
lahf
(bad)
jns
adc
sbb
pop
ret
sti
sbb
stos
gs
xchg
jb
ins
cdq
iret
sub
mov
loope
movs
in
add
(bad)
cmps
sbb
shl
sub
pop
or
into
loope
xor
addr16
aam
call
mov
add
cmp
jnp
add
inc
ins
out
addr16
fs
pop
mov
push
xchg
jmp
mov
add
inc
stos
(bad)
and
mov
arpl
(bad)
out
ret
push
mov
aam
pop
add
std
iret
aam
cmp
push
xlat
aaa
and
adc
push
xchg
int
xchg
nop
gs
mov
pop
sbb
fidiv
shr
mov
and
add
add
mov
lods
push
cmp
mov
pop
imul
std
cmps
inc
stos
popf
xor
dec
fwait
inc
cdq
out
xor
sahf
xchg
xchg
pop
or
jl
dec
idiv
add
xor
add
sbb
jbe
and
sbb
xchg
add
repnz
js
mov
push
cmp
fadd
xlat
cmp
jmp
mov
xlat
jl
js
aas
rcl
mov
xchg
outs
call
mov
ror
lods
pop
outs
and
pop
xchg
dec
jmp
inc
pop
sahf
add
jecxz
scas
xor
adc
mov
xchg
sub
dec
sub
aaa
sbb
(bad)
das
adc
mov
xchg
xor
mov
(bad)
daa
lods
jbe
pop
and
fstp
push
jecxz
mov
leave
cmps
and
loopne
sub
mov
add
in
std
shr
mov
mov
out
arpl
cmc
retf
and
push
xor
push
fwait
dec
stos
or
dec
inc
shl
aam
xor
js
pop
repnz
xlat
push
loop
std
aad
lds
inc
sbb
movs
or
scas
fidiv
sar
cdq
mov
gs
call
out
pop
test
lods
sbb
fadd
cmp
call
jb
fadd
ja
test
xlat
pop
clc
movs
std
jae
mov
sbb
and
jmp
test
je
push
shl
xor
adc
dec
sbb
mov
jno
jmp
shr
jb
sub
push
in
pop
(bad)
push
jle
cmp
mov
jo
mov
sbb
xchg
aas
iret
aas
or
lock
daa
push
cdq
mov
lea
mov
sbb
push
mov
pushf
(bad)
sti
xor
aas
ja
pop
add
pop
xor
mov
xchg
(bad)
mov
mov
mov
cmp
aad
add
(bad)
pop
aam
repnz
dec
inc
arpl
fs
popa
and
movs
es
push
test
sti
movs
inc
ficom
pop
addr16
and
mov
mov
push
xlat
xchg
call
cdq
sub
sbb
cli
xchg
nop
fisub
popf
sbb
bound
adc
pop
shl
mov
lock
xor
call
jo
sub
jae
int
and
cwde
adc
rcr
leave
sub
push
fnstenv
call
mov
push
push
mov
pop
sbb
rcl
imul
in
(bad)
out
mov
jmp
jge
xor
icebp
std
jge
mov
out
jbe
jo
push
repz
(bad)
bound
push
not
push
mov
push
imul
stc
push
pop
sub
cmp
add
dec
and
int3
and
cmp
popf
add
mov
sahf
in
cs
mov
sbb
push
dec
xor
cs
das
(bad)
mov
dec
add
call
scas
jg
shl
or
test
pushf
jmp
add
data16
shr
repnz
lds
mov
and
fs
inc
ja
adc
mov
cmp
out
cmc
adc
stos
not
xor
(bad)
movs
dec
fistp
mov
int3
or
in
push
sub
add
lea
xor
push
bound
ins
leave
dec
mov
in
mov
popf
out
out
pop
mov
es
(bad)
in
or
mov
es
mov
sbb
shr
push
lods
pop
push
scas
leave
retf
ret
xor
(bad)
or
test
jmp
sbb
ret
popa
pop
gs
rol
int
mov
call
xor
test
mov
movs
outs
loop
xchg
mov
hlt
or
fld
daa
dec
ret
ds
or
out
cmp
adc
xchg
imul
sub
jbe
mov
push
(bad)
jnp
mov
jmp
daa
mov
sbb
rcr
cmp
retf
ds
fsub
ret
in
cmp
inc
mov
xor
jp
out
sbb
xlat
jle
pop
jecxz
je
jnp
inc
dec
cmp
pop
mov
push
sub
call
push
stos
xor
inc
adc
jg
sub
pop
dec
lock
inc
int
stos
pop
iret
sbb
push
xor
adc
lock
test
test
jno
adc
call
cwde
repnz
push
mov
in
cmp
not
ss
sbb
push
aas
inc
xchg
int
fs
sub
add
and
pop
add
lock
mov
or
xchg
fld
das
or
xor
sub
inc
inc
pop
lods
test
xchg
push
cmc
sbb
mov
popf
and
sub
nop
(bad)
pop
and
rol
push
cmp
inc
add
int3
or
push
xchg
rol
pop
cmps
push
mov
pushf
mov
add
add
dec
dec
sar
inc
xchg
js
bound
cmp
setb
call
aas
mov
push
int
jp
movs
sub
into
inc
dec
mov
pop
xchg
dec
iret
mov
lds
(bad)
jns
je
clc
shr
pushf
mov
pop
jnp
push
call
add
test
shl
shl
or
sbb
movs
fstp
push
scas
in
jg
mov
push
fwait
cmp
jg
out
jns
push
nop
jno
mov
pop
mov
sar
ret
jbe
push
out
cmp
xor
mov
movs
imul
xor
aad
and
pop
pushf
sahf
cmp
jge
cmp
pop
mul
inc
push
jo
(bad)
jne
dec
imul
fdivr
mov
sti
aaa
repz
(bad)
cmps
repnz
dec
mov
pop
jns
out
jae
shl
jecxz
mov
mov
enter
inc
test
xor
test
and
or
imul
outs
cli
xor
mov
movs
mov
and
shl
rol
shl
das
sub
mov
jns
aaa
dec
shr
push
add
scas
dec
test
gs
clc
pop
cmp
mov
sbb
dec
in
add
repz
fcmovnb
arpl
movs
int
sti
xchg
rcr
mov
cmp
xor
in
lock
inc
cmp
cmps
fadd
repnz
jmp
xchg
icebp
ins
inc
fild
ins
pop
enter
out
mov
inc
mov
loopne
dec
js
arpl
out
iret
cmp
leave
popf
ret
out
call
fsub
mov
xor
push
xchg
pop
push
mov
adc
cld
lods
retf
xchg
xor
pop
jg
mov
sub
sbb
add
push
cld
push
push
pop
add
mov
aad
shl
in
sar
push
test
ins
adc
std
xlat
push
inc
xor
cmps
sbb
inc
ret
push
sub
fisub
int
es
into
fdivr
in
in
mov
or
adc
xchg
adc
call
movs
push
add
push
ins
inc
or
and
xchg
push
cmp
shl
sub
data16
cwde
je
pop
rol
pop
sub
jge
mov
mov
(bad)
push
xchg
fprem
xchg
push
fwait
inc
ror
jne
test
dec
ja
adc
imul
mov
mov
xlat
xchg
cmp
inc
cmp
out
or
adc
mov
js
shr
jl
cmps
xchg
lea
add
out
js
sbb
addr16
repnz
aam
adc
xor
enter
cmc
sbb
add
dec
or
in
pop
outs
mov
push
pop
dec
pop
loopne
sar
data16
mov
sub
inc
ins
mov
inc
mov
add
mov
or
loope
adc
fstp
push
mov
lods
loopne
jmp
loop
pop
ja
daa
or
fst
cld
ror
in
add
pusha
int3
out
push
rol
mov
push
test
clc
jnp
nop
fstp
nop
retf
leave
push
push
or
fptan
ins
push
pop
jns
or
sbb
pop
xor
ss
or
rcr
mov
nop
or
fs
hlt
and
enter
icebp
push
sbb
dec
icebp
out
addr16
or
ret
stos
pop
cmp
xchg
test
or
(bad)
cmp
gs
jne
mov
jmp
inc
xor
xchg
repz
or
(bad)
shl
in
adc
xor
test
or
jae
test
pop
pop
add
mov
inc
call
std
retf
sbb
cdq
jp
add
cmps
adc
pop
inc
fcom
push
mov
sbb
pop
jae
loopne
stc
shl
mov
loope
pop
push
jmp
cmp
sub
xor
mov
mov
retf
mov
push
or
jns
out
dec
aas
div
mov
sbb
mov
add
mov
pop
or
push
loopne
pop
fcomp
xlat
and
xchg
and
ins
pop
les
push
test
lock
add
jno
sbb
push
icebp
fsubp
test
inc
and
mov
in
cmp
fs
retf
or
sbb
scas
aas
aas
push
xchg
stos
dec
rol
push
mov
or
lea
mov
loope
add
push
xchg
shl
div
and
mov
jmp
dec
das
dec
ds
ins
sbb
mov
cvtpi2ps
and
push
mov
mov
jge
loope
mov
add
hlt
mov
(bad)
mov
aam
adc
sbb
add
pop
fiadd
sbb
jnp
test
dec
xchg
aas
cs
dec
popf
jge
push
or
xor
xchg
mov
pop
cli
xchg
jmp
cdq
test
mov
cmp
ror
and
jae
mov
mov
xor
dec
sbb
cld
ror
jae
and
pop
stos
in
and
mov
xchg
add
xorps
(bad)
pushf
call
in
mov
mov
lods
popf
inc
mov
add
(bad)
dec
dec
xchg
sbb
push
jbe
fdivr
fsubr
sbb
les
or
dec
inc
in
pop
push
fnstenv
xor
lock
pop
je
mov
cmp
in
repnz
sahf
cld
cwde
adc
inc
fimul
adc
daa
jmp
mov
stc
lods
sub
jne
inc
scas
cmp
push
imul
and
pusha
ja
sub
js
ds
xchg
ds
xchg
(bad)
cmp
push
add
mov
xchg
iret
push
mov
adc
mov
push
(bad)
scas
ficom
lahf
or
fwait
(bad)
cmps
bound
mov
add
jo
sub
pop
imul
scas
add
pop
pop
or
push
xor
inc
mov
shr
mov
push
mov
fst
jae
and
mov
stos
push
adc
jno
in
adc
mov
mov
(bad)
int3
and
sub
xchg
in
jge
pusha
in
loope
in
adc
xchg
adc
sub
out
fcomip
cmps
xchg
rcr
jne
mov
add
push
inc
fcmovnb
adc
in
ret
sahf
lahf
and
cmp
add
cdq
aaa
push
(bad)
rcr
clc
imul
(bad)
out
scas
jne
ins
jmp
dec
adc
jnp
xor
(bad)
mov
mul
mov
push
jo
rcl
or
xchg
jl
ins
int3
jnp
and
out
add
pusha
add
in
inc
cmp
retf
ins
loope
add
pop
mov
jg
or
outs
mov
scas
dec
add
iret
or
jle
adc
dec
icebp
push
js
push
call
(bad)
adc
cmp
daa
jle
lds
and
push
test
push
or
fdivr
ficomp
fistp
outs
xchg
sub
iret
(bad)
cmp
or
or
pop
int3
mov
lods
ds
add
cmp
dec
adc
push
add
outs
push
inc
cmp
mov
je
and
(bad)
aas
sub
mov
retf
and
dec
test
mov
mov
(bad)
mov
pop
bound
or
adc
jle
and
pop
lods
dec
jno
outs
push
add
dec
in
jne
mov
dec
das
mov
push
xor
xchg
jns
imul
test
aas
dec
je
cmp
add
xchg
cwde
cmps
(bad)
mov
int
push
arpl
mov
adc
movs
popf
in
or
lods
pop
lock
aam
xor
(bad)
cdq
xchg
mov
mov
mov
xor
leave
bts
push
bound
mov
adc
adc
add
jns
inc
xchg
xor
add
(bad)
std
sub
fimul
jae
sahf
(bad)
popa
pop
sub
aaa
ds
mov
loop
cmp
mov
out
sub
pop
mov
cmp
popa
xchg
out
ret
push
mov
sbb
sbb
adc
repnz
or
or
xor
add
xchg
xchg
out
in
mov
mov
cmc
rcl
mov
push
mov
cmps
mov
movs
loop
nop
fist
scas
jle
xchg
or
(bad)
sti
inc
jle
mov
mov
icebp
dec
je
mov
dec
ins
les
sahf
test
dec
loopne
or
jg
sbb
int3
or
sbb
xchg
mov
pop
scas
add
data16
or
jmp
sub
pop
into
xor
(bad)
and
cmp
cmps
dec
js
fist
and
sbb
imul
mov
mov
and
xchg
inc
mov
mov
cmp
or
rcr
or
jne
rcl
stos
cmp
shl
sub
fidivr
sbb
je
aam
idiv
retf
out
jl
daa
outs
push
push
pop
adc
cmp
adc
dec
outs
push
mov
das
cs
(bad)
jmp
cmp
ret
xchg
or
dec
data16
jmp
pop
aad
out
cmp
xchg
js
outs
leave
cmc
(bad)
xor
inc
xor
fsubr
mov
loop
mov
mov
(bad)
out
pop
xchg
add
popf
shl
fst
enter
xor
in
mov
inc
stos
fdiv
in
push
sub
arpl
sub
inc
push
mov
mov
pop
les
in
mov
out
xchg
das
mov
mul
xor
out
mov
(bad)
and
inc
sub
adc
outs
mov
and
mov
xor
outs
push
nop
cs
in
stc
gs
inc
inc
mov
mov
fnstenv
fsub
(bad)
sti
stos
push
inc
popa
cmp
adc
aaa
mov
push
push
(bad)
xlat
pop
pop
push
addr16
mov
ins
mov
bound
sbb
inc
call
inc
add
and
les
into
mov
mov
lahf
ins
jb
ins
mov
(bad)
lods
or
not
lods
imul
sar
mov
outs
or
mov
mov
mov
scas
lods
sahf
dec
pop
push
dec
repz
jae
mov
or
sbb
pop
loope
jo
mov
xchg
mov
adc
push
fs
sub
jo
xor
xchg
and
jp
jbe
mov
fxch
loop
stc
(bad)
xchg
jnp
rcl
fcomp
mov
imul
add
sub
push
popf
add
inc
adc
xor
sub
push
inc
push
mov
push
imul
inc
push
nop
(bad)
or
or
adc
in
push
pop
imul
ud1
sbb
lea
lahf
arpl
call
or
inc
std
pop
push
pop
sbb
mov
mov
shr
sub
popa
xor
or
(bad)
ins
cli
dec
leave
mov
push
pop
xchg
ror
lods
lods
add
ins
push
mov
jne
pop
imul
xor
cmp
(bad)
mov
lahf
jg
sub
or
aad
addr16
dec
jge
mov
push
or
xchg
loope
inc
sub
or
mov
inc
adc
loope
and
fwait
and
cmp
push
(bad)
jb
sbb
out
ror
sub
jns
dec
jecxz
jle
jp
loopne
dec
sub
add
dec
cdq
call
push
pop
push
inc
cs
dec
repnz
sub
(bad)
push
sub
(bad)
mov
sub
ret
sbb
inc
sbb
or
(bad)
call
ret
jle
cmp
cdq
add
inc
ds
scas
xchg
sub
xchg
sbb
dec
ret
icebp
xor
int
mov
sbb
les
adc
cdq
jge
(bad)
icebp
stos
aad
stos
sar
add
pusha
stos
pop
mov
fild
sub
stc
jnp
cs
icebp
push
jnp
mov
mov
leave
push
adc
or
(bad)
out
fist
push
cmp
adc
ret
push
mov
mov
repnz
xor
dec
aaa
adc
or
test
xor
out
jb
push
xchg
retf
xchg
out
and
mov
ins
xchg
xchg
xor
xchg
fdivr
fld
or
lea
cmps
ror
xchg
jno
lds
pop
out
out
iret
sbb
sub
push
nop
xchg
inc
enter
pop
rcl
pop
mov
out
(bad)
lahf
xchg
ja
push
int
mov
push
ins
enter
fidivr
ins
ins
mov
xchg
test
repz
lea
int
sub
stos
and
cmps
movs
test
push
pop
push
push
rcr
cwde
jecxz
cmp
adc
int3
shl
fstp
sar
jle
xchg
loope
inc
dec
dec
test
leave
outs
inc
popa
jecxz
push
jge
inc
inc
dec
dec
nop
aaa
push
(bad)
pop
dec
xor
and
push
cmp
pop
scas
loop
shl
mov
cmc
retf
adc
inc
lea
add
mov
aas
int
enter
ss
(bad)
stc
jecxz
pop
cmc
test
xor
sub
adc
ins
scas
fdiv
xor
nop
pop
popf
and
sbb
rcr
jl
(bad)
and
xchg
jle
sub
sub
push
ds
ins
leave
dec
mov
adc
fldcw
les
pop
or
inc
in
popa
sub
retf
test
pop
(bad)
jmp
stos
jmp
sahf
retf
sub
xchg
xor
inc
lds
loopne
call
push
mov
pop
xchg
imul
ss
iret
jo
xchg
mov
cmc
test
das
jmp
adc
aad
push
mov
add
xor
lea
scas
repnz
xchg
clc
mov
in
dec
sbb
loop
in
ror
lods
rcl
dec
and
dec
and
or
(bad)
sub
mov
fisubr
je
ja
loopne
cli
sbb
cmc
clc
mov
int3
pop
ss
add
ss
jbe
retf
sub
push
push
lds
push
sbb
or
(bad)
fldcw
and
pop
icebp
xor
jnp
xchg
cmc
hlt
or
sub
xor
xchg
lea
xchg
sbb
call
sub
(bad)
fwait
xchg
in
in
xor
rcl
and
jecxz
sbb
push
je
cmp
(bad)
fdivr
mov
mov
ficomp
jo
mov
(bad)
call
fcomp
daa
mov
add
fs
(bad)
push
jb
ror
(bad)
(bad)
mov
and
ret
ja
retf
push
popf
push
dec
fcmovu
loop
lds
mov
fimul
pop
mov
mov
xor
xor
push
(bad)
out
sub
and
sahf
mov
fwait
lock
(bad)
(bad)
jmp
lahf
adc
(bad)
push
add
adc
pop
nop
xchg
ins
mov
mov
fwait
push
mov
adc
jae
pop
mov
bound
dec
stc
cwde
cmp
fadd
mov
int3
into
out
add
jnp
add
neg
jmp
mov
mov
or
sub
stc
rcl
ds
imul
xchg
int
dec
out
xor
mov
rcr
dec
push
cmp
jo
mov
push
cmp
idiv
iret
sbb
sbb
mov
xlat
inc
popa
shl
ror
and
xchg
jp
add
lods
shufps
shl
je
cmps
stc
jl
or
pop
jmp
repnz
cmp
adc
aaa
aad
mov
xchg
out
pop
test
sub
mov
stos
add
jnp
aam
jbe
pop
imul
mov
retf
fs
pop
jge
or
jmp
ror
(bad)
mov
dec
lods
cmp
push
leave
(bad)
(bad)
aam
lock
adc
xor
xor
stc
sbb
push
sub
jg
mov
lods
stos
pop
mov
mov
shr
fnstenv
rcr
mov
in
sbb
ret
das
push
sbb
fisttp
js
cmp
jns
sub
add
xchg
(bad)
pop
pop
cmp
xchg
push
mul
adc
pushf
dec
mov
jns
sub
jle
cs
mov
repnz
pop
xchg
sbb
call
mov
pop
sub
and
test
sub
push
in
jno
pop
(bad)
lmsw
and
fist
add
mov
pop
arpl
and
and
std
fsubr
add
add
js
repnz
pop
jp
pop
push
rol
inc
sbb
into
mov
cmp
dec
imul
ror
mov
iret
dec
xor
out
xor
xchg
xchg
xor
add
ins
dec
jbe
fld
aas
or
icebp
jb
adc
xchg
enter
push
shr
mov
sbb
mov
add
mov
gs
lahf
xchg
div
jecxz
fcomp
fdivr
add
loop
mov
cmps
hlt
dec
leave
mov
mul
dec
pusha
idiv
cld
pop
retf
pop
or
iret
mov
pop
adc
jg
test
loop
push
cmps
mov
cmps
enter
jp
adc
sub
sbb
xor
jmp
es
adc
loopne
lock
cmp
jl
xchg
retf
mov
popf
mov
cli
(bad)
ja
add
out
subps
sub
mov
popa
jbe
push
in
push
outs
push
psubusw
push
retf
inc
push
lea
cli
outs
xor
mov
scas
sti
test
mov
(bad)
(bad)
in
retf
jmp
mov
inc
pop
sbb
in
mov
push
push
mov
push
pop
fcom
or
imul
in
add
imul
sub
mov
and
add
mov
jno
mov
push
push
jmp
sub
or
jmp
xchg
xor
xor
pop
fld
sbb
les
jns
pop
fstp
lods
or
fcmovnb
add
scas
data16
inc
mov
mov
ror
out
sbb
loopne
fstp
mov
sbb
mov
push
lods
adc
out
cwde
xchg
xchg
gs
fs
mov
sub
adc
test
sub
out
(bad)
out
sub
dec
push
fld
mov
and
cwde
mov
push
xchg
jle
fnstsw
pop
out
fmul
icebp
push
jb
inc
push
jp
jns
loop
test
inc
jg
ret
sbb
cmp
in
daa
xor
fstp
mov
sub
addr16
shl
push
xchg
jp
fcomi
and
xor
mov
xchg
cmp
cdq
movs
cs
cld
and
shr
xchg
sub
xchg
xchg
xor
push
fiadd
fsub
or
add
inc
mov
ss
sub
dec
jl
cmps
xor
sbb
mov
mov
adc
push
push
mov
sti
loopne
aam
stos
mov
push
and
or
and
call
es
and
rcl
jae
xor
in
dec
pop
outs
aas
inc
enter
test
shr
ins
xchg
ret
stos
mov
cdq
push
xlat
cmp
jle
loope
arpl
cmc
xor
add
aaa
cmp
cwde
or
jae
xor
mov
retf
jo
mov
dec
pop
inc
int3
gs
pusha
push
jge
gs
dec
xor
xor
je
pop
and
sbb
inc
mov
adc
and
and
jge
or
xlat
mov
and
add
push
inc
not
jns
push
lock
movs
scas
cmps
out
mov
iret
push
inc
xchg
dec
sar
jecxz
adc
in
aas
mov
dec
test
pop
popa
xor
jbe
dec
lahf
push
xor
inc
clc
(bad)
fld
mov
adc
jno
xchg
mov
je
add
pop
fbstp
stos
shl
test
jecxz
jl
out
xor
ret
cmp
push
xchg
push
retf
inc
xchg
ret
adc
jae
fs
mov
and
xor
and
out
push
stc
test
ds
retf
int3
pop
cmp
and
jg
cdq
xchg
sbb
add
adc
cli
mov
dec
xlat
jecxz
xchg
push
repz
rcr
sub
push
add
(bad)
jb
cmp
pushf
or
aaa
int
inc
in
aad
rol
inc
mov
lds
push
inc
int
and
mov
jbe
mov
xor
sub
stos
icebp
fidiv
push
es
hlt
scas
inc
mov
cmp
mov
rcr
sti
xchg
scas
sbb
cld
cmp
mov
pop
leave
fwait
or
test
xchg
mov
movs
cmp
mov
cmps
frstor
jmp
mov
jg
retf
jp
inc
repnz
mov
xor
adc
out
pop
dec
push
sbb
mov
outs
sti
fsubr
aad
xor
nop
daa
sbb
add
leave
pop
sbb
pushf
popa
mov
es
push
or
push
(bad)
mov
ins
add
gs
popa
sbb
repnz
stos
aad
or
fcomip
ds
push
xlat
add
popf
pop
nop
mov
push
cmp
sbb
dec
inc
mov
pusha
mov
hlt
or
add
inc
cld
clc
xchg
scas
mov
adc
in
cmp
or
or
arpl
clc
xchg
leave
xchg
pmullw
ins
jecxz
fucomi
sub
dec
mov
std
mov
jg
inc
add
jbe
and
mov
inc
and
test
dec
retf
pop
add
xchg
loope
or
repz
ja
push
jl
(bad)
pop
loope
inc
push
push
jp
cmp
mov
and
pop
sub
out
push
jp
or
(bad)
fstp
dec
xor
ds
iret
sbb
hlt
ficomp
push
mov
push
jae
ret
pop
jecxz
inc
in
mov
pop
sbb
test
test
imul
fs
sbb
(bad)
aad
dec
add
xchg
das
sti
xchg
mov
fst
inc
mov
inc
and
in
aas
lock
mov
fs
xchg
adc
push
loope
jmp
not
lods
mov
sbb
dec
lods
pop
sbb
(bad)
push
retf
pop
adc
rcr
adc
add
jo
cmp
cmps
xchg
mov
fwait
pop
imul
pushf
stos
add
or
or
jle
std
or
bound
push
cmp
mov
(bad)
aas
ret
pop
inc
add
jp
push
out
(bad)
mov
or
sbb
sub
mov
adc
imul
aaa
push
jnp
jne
jle
shr
xchg
push
xor
retf
test
int3
out
retf
xchg
movs
xor
inc
sub
sub
aam
mov
sub
data16
sti
fcmovnu
xchg
inc
xor
xor
bound
jb
rcr
lea
ror
and
inc
out
mov
xchg
push
sar
fisub
mov
ins
jns
lock
mov
mov
sbb
into
shl
xchg
sub
add
and
jle
mov
push
leave
push
cld
outs
test
xor
xor
imul
adc
xchg
jmp
sub
fsub
or
fdivrp
ret
inc
mov
outs
cs
xlat
cmp
stc
mov
inc
mov
popa
lds
cdq
pushf
test
adc
or
sub
xchg
xor
sbb
pop
pop
test
and
sbb
inc
shr
call
lods
sbb
leave
fwait
lea
inc
out
lea
mov
pop
mov
out
cmp
mov
adc
imul
loope
cmps
(bad)
jmp
xchg
sar
sbb
inc
ja
mov
jg
cdq
dec
sbb
xchg
je
mov
sbb
pop
mov
sub
out
in
jns
push
sar
push
sbb
pop
inc
imul
pop
jl
mov
cwde
(bad)
call
sub
addr16
fstp
int3
jo
jle
cld
ds
and
add
pop
adc
lahf
sub
inc
xor
sub
or
(bad)
pop
test
fistp
sub
test
and
aam
xor
in
movs
lds
leave
adc
aaa
jge
cmc
je
push
and
imul
adc
pop
mov
jbe
lea
inc
sbb
loop
pop
(bad)
jl
sbb
mov
mov
mov
shl
mov
push
cmp
dec
dec
push
cmp
ror
cdq
mov
mov
adc
dec
sbb
fisub
jnp
pop
jne
das
mov
cmp
push
aad
xchg
pop
xchg
pop
stos
dec
dec
jo
cmps
push
inc
mov
or
push
jge
xchg
mov
mov
sub
arpl
leave
push
aaa
xor
jmp
mov
push
ret
cmp
mov
jl
call
and
push
sbb
fnstcw
fucomip
xor
out
inc
pop
add
xchg
in
xchg
test
inc
pop
fmul
dec
jmp
cwde
xchg
shl
xor
inc
or
jp
jb
and
push
outs
jl
ins
cdq
and
mov
mov
cld
cli
pop
movs
cmps
mov
(bad)
fcomp
ret
mov
popf
call
sbb
leave
jae
sbb
xchg
call
jae
or
movs
icebp
lea
mov
in
addr16
lahf
enter
enter
into
clc
aad
aas
jmp
and
mov
mov
cwde
es
sti
bound
repz
stos
adc
test
fs
sbb
push
pop
test
add
cdq
and
pop
add
sub
out
jl
adc
je
push
mov
data16
and
hlt
mov
enter
xchg
ins
sub
add
and
lods
out
in
or
push
dec
popa
mov
mov
mov
outs
rcl
dec
rcl
fimul
gs
cld
mov
mov
jne
and
fisub
dec
fadd
mov
out
inc
cld
inc
rol
stos
adc
ror
lahf
xchg
icebp
push
ret
es
sar
sub
push
in
dec
stc
sbb
mov
sar
ins
mov
bound
call
push
inc
add
scas
das
dec
pop
add
push
inc
adc
call
sub
rcr
jl
push
in
fld
or
js
cmps
inc
loopne
in
out
int
psubusw
xchg
loope
cmp
push
pusha
out
xlat
loope
div
rol
shl
lods
es
dec
xor
addr16
ficomp
adc
push
stc
jno
mov
push
fld
jae
adc
adc
das
mov
lea
dec
or
and
jecxz
xchg
mov
ins
jmp
pop
jnp
call
xchg
loop
sub
mov
mov
adc
mov
jecxz
jge
add
pop
mov
imul
xor
jl
fs
push
test
push
(bad)
ror
jns
mov
pop
push
add
test
pop
das
add
or
ss
fcom
out
(bad)
sbb
xchg
call
inc
mov
pop
pop
es
xchg
stc
call
adc
pop
mov
rol
inc
fmul
inc
addr16
sub
aam
rcr
pop
xchg
(bad)
popa
or
sub
test
add
dec
adc
shl
lock
into
out
xlat
shl
(bad)
and
push
inc
enter
mov
push
std
std
mul
add
pop
call
stos
les
mov
aam
movs
push
pop
inc
out
into
add
push
ds
icebp
push
cmp
sbb
jl
call
lods
inc
ja
ret
inc
fstp
mov
add
sub
adc
sahf
push
add
cmp
popa
add
xlat
imul
mov
and
lods
cld
push
fld
push
xchg
xor
fucomp
ss
mov
jmp
test
or
pop
push
xchg
push
add
bnd
mov
mov
cmc
lods
fstp
mov
mov
push
and
push
enter
ds
shld
jae
fs
pop
sar
or
ins
loopne
test
push
jns
sbb
sub
pop
popa
mov
in
adc
in
or
xor
xlat
packssdw
push
pop
adc
xchg
out
xchg
add
inc
call
mov
repnz
out
in
sti
dec
aam
adc
pop
nop
dec
push
mov
(bad)
test
mov
xor
js
scas
push
inc
lods
outs
jl
or
mov
in
xchg
neg
mov
dec
inc
lock
mov
push
lods
push
push
sbb
cmp
fst
stos
leave
mov
dec
pop
rcl
dec
mov
xchg
xchg
enter
sub
hlt
call
dec
test
pop
xor
arpl
add
(bad)
in
sbb
(bad)
loopne
mov
cmc
ret
lock
xor
mov
push
ror
xor
or
push
push
or
inc
test
cld
push
fistp
push
in
push
ja
mov
pop
jl
xor
inc
push
je
mov
lods
jl
mov
test
sbb
pushf
xchg
lods
sub
stos
mov
and
inc
fiadd
in
pushf
popa
cs
adc
loope
ret
js
fld
out
enter
jle
pop
mov
mov
cmp
mov
sub
imul
inc
or
lds
popf
push
dec
jno
icebp
aad
mov
push
shl
hlt
xor
mov
add
ror
and
adc
enter
ins
loopne
sub
cmp
or
mov
xchg
shl
and
sti
and
xlat
ins
add
pop
out
es
retf
push
ins
jmp
movs
fnstcw
xor
(bad)
stc
cmp
jnp
add
pop
jp
cmp
jno
ins
push
es
jo
xor
mov
imul
push
jecxz
fadd
mov
add
arpl
test
stos
mov
sahf
popa
push
lods
outs
addr16
shr
lods
or
(bad)
mov
in
popf
into
pop
jno
mov
push
sar
mov
mov
or
inc
shl
xchg
sub
aam
push
pushf
inc
mov
mov
cwde
cmp
inc
jo
push
ret
es
aaa
hlt
adc
inc
sbb
je
pop
fist
stos
jp
or
push
sbb
adc
xor
mov
ret
fcom
cli
scas
mov
mov
mov
jmp
iret
xchg
mov
mov
daa
leave
rcr
cli
loop
js
imul
fisttp
mov
(bad)
jge
rcr
and
mov
fwait
loopne
xchg
adc
lea
icebp
test
mov
cmp
cmps
push
jnp
icebp
mov
(bad)
in
scas
jmp
xchg
movsx
ror
dec
adc
mov
div
in
add
pop
adc
scas
(bad)
xor
sbb
or
(bad)
ins
mov
stc
add
in
not
sbb
jne
div
mul
dec
mov
or
shl
mov
ins
mov
imul
movs
lock
sbb
in
xchg
cld
sbb
fld
inc
inc
mov
xchg
pop
push
repz
push
sahf
dec
jns
cmp
test
sub
and
xor
je
(bad)
sbb
frstor
add
push
cmp
inc
test
xchg
fmul
jmp
test
jmp
aas
dec
add
fbstp
sub
and
inc
popa
dec
cmps
xor
adc
arpl
mov
jne
ds
dec
daa
and
shr
jb
ret
sub
mov
sbb
push
jp
fcmovb
test
(bad)
mov
inc
cmps
das
(bad)
jge
int
addr16
adc
xor
pop
cmps
dec
out
in
das
(bad)
mov
or
adc
xor
leave
shl
inc
push
inc
scas
into
or
sar
nop
jmp
outs
xchg
into
loope
pop
push
mov
add
aad
imul
retf
leave
into
arpl
aas
pop
dec
outs
xchg
inc
and
jb
imul
mov
daa
fcmovne
pop
jg
adc
je
mov
inc
mov
adc
adc
pop
movs
inc
aam
jge
das
cdq
sahf
loop
mov
int
stos
push
test
adc
and
pop
ret
and
mov
popa
pop
cmp
jmp
push
dec
in
aam
mov
jns
pop
repnz
test
cmp
movs
jmp
iret
mov
cdq
pop
push
je
push
stos
repnz
les
mov
shl
in
fisubr
scas
into
cmps
(bad)
into
adc
(bad)
fdivr
jle
cmp
les
sub
mov
sub
(bad)
scas
movs
cdq
out
cmp
jge
addr16
and
shr
neg
cmps
cwde
push
xchg
sub
ss
push
pop
pop
xchg
cdq
dec
pushf
adc
jmp
xor
and
loopne
pop
mov
cmp
fmul
pop
jge
bound
xchg
adc
adc
xchg
mov
adc
retf
cwde
mov
aaa
loope
mov
lds
jae
icebp
adc
dec
cmp
mov
gs
or
push
shr
sub
xor
into
test
xchg
mov
pop
pushf
inc
(bad)
lock
ror
xchg
push
popa
adc
cmp
jb
jbe
retf
call
inc
cmps
inc
fisttp
fidiv
sub
out
push
pop
jb
movs
adc
sti
inc
lock
div
sar
and
sahf
hlt
and
cmp
sbb
adc
rol
fidiv
mov
push
dec
int
mov
mov
call
dec
jnp
pop
pop
not
cmps
dec
cmp
scas
out
loope
or
cmp
out
aad
xchg
pop
sub
mov
lahf
mov
rcr
jns
adc
f2xm1
ins
fadd
push
enter
(bad)
in
retf
icebp
adc
loopne
pop
push
mov
cmp
mov
jnp
int3
push
push
adc
(bad)
shr
std
mov
and
mov
aad
mov
dec
movs
pop
mov
add
cwde
out
fwait
inc
hlt
sbb
leave
mov
sub
loopne
stos
aas
cmp
pop
and
int
lods
sub
jbe
outs
pop
call
or
xchg
mov
jmp
movs
mov
not
dec
out
(bad)
fsubr
sub
push
shl
ins
out
xchg
rcl
push
sar
sub
and
stos
xchg
leave
jg
inc
gs
call
cli
cdq
outs
ret
fisub
es
imul
in
movs
jae
xchg
cmp
and
adc
mov
add
repz
int
inc
sub
ret
in
js
cdq
mov
adc
loop
mov
jge
repz
sahf
imul
lahf
dec
dec
or
into
inc
pop
mov
pushf
or
imul
dec
repz
sub
jo
ins
sub
test
loopne
rcl
and
add
rcr
(bad)
lods
out
retf
add
inc
xchg
mov
adc
mov
pop
enter
jnp
fistp
syscall
xchg
mov
loope
not
jbe
adc
(bad)
fdiv
enter
push
cmp
mov
push
dec
aas
mov
sbb
and
hlt
mov
cdq
fs
sub
sbb
xchg
pop
icebp
bound
inc
repz
inc
add
shr
bound
xchg
sub
enter
cmp
and
lods
popa
adc
mov
es
pop
ss
push
(bad)
jle
mov
mov
pop
pop
mov
in
mov
mov
jae
fnstenv
dec
cmc
pop
stos
add
inc
mul
mov
aad
sbb
stos
pop
loopne
fistp
dec
imul
mov
outs
mov
mov
xor
loopne
adc
sub
ror
and
push
push
imul
adc
sti
ret
inc
dec
sahf
jp
push
test
cmps
inc
or
push
xchg
(bad)
xor
push
add
popf
jmp
hlt
aam
xor
mov
sub
mov
sbb
add
jno
xor
and
pusha
pop
xor
xchg
and
repz
ss
inc
mov
cmps
mov
mov
hlt
and
pop
mov
jecxz
mov
in
dec
(bad)
jl
ja
xchg
test
add
inc
fs
ss
enter
inc
shl
shr
cld
mov
je
dec
lea
fld
xchg
pop
sub
pop
jb
mov
cld
stos
dec
mov
test
sub
fwait
imul
sti
mov
sbb
sahf
add
cmc
sub
adc
lock
jb
and
int
cli
pusha
icebp
push
jmp
mov
jno
mov
ret
xchg
xchg
cdq
outs
xchg
xchg
aad
lahf
cs
add
push
jmp
pushf
adc
pop
dec
sbb
in
push
jmp
std
test
(bad)
xchg
cmps
iret
pop
push
hlt
jae
or
ret
cmp
xchg
sbb
add
cmc
cs
iret
inc
adc
hlt
push
aam
ret
mov
cmc
mov
dec
push
stos
adc
fs
mov
faddp
(bad)
cmc
ficomp
inc
adc
daa
(bad)
jp
mov
cwde
popa
ret
clc
add
lahf
cmp
xrelease
shl
and
pop
repz
imul
pushf
cwde
xchg
loopne
mov
cmp
jl
mov
fnstsw
xor
mov
cmp
(bad)
scas
repz
xchg
out
ficom
sbb
jge
sub
scas
add
ja
xchg
ss
dec
dec
ror
and
mov
int
sar
mov
jae
jno
in
sti
arpl
mov
pop
retf
dec
xchg
pop
or
syscall
fs
xchg
les
sub
jg
and
test
jne
mov
mov
aas
xor
inc
mov
rcr
xlat
cli
mov
add
pop
shl
mov
mov
test
mov
inc
pop
neg
jns
and
rcr
fcomp
jg
(bad)
xchg
mov
or
push
stos
aas
inc
lea
rcr
dec
adc
push
inc
pop
imul
cmp
and
mov
mov
add
push
cmps
add
scas
mov
sbb
sbb
mov
jno
fs
xor
mov
(bad)
xchg
sar
ret
out
pop
fistp
inc
dec
stos
loopne
sub
(bad)
pop
push
and
mov
call
je
clc
cmp
pop
jne
mov
mov
imul
mov
repz
jecxz
sub
pop
sti
jle
test
xchg
(bad)
xchg
lods
pusha
add
xor
hlt
jno
loopne
rol
cli
int3
jge
out
in
xchg
mov
pop
loopne
pop
mov
push
pop
inc
jae
ja
adc
jne
cli
push
out
popa
dec
mov
int
jl
push
sub
ret
jne
sti
pop
jno
shl
push
pop
xor
out
clc
mov
pop
jb
jnp
sbb
movs
(bad)
jno
popa
fwait
daa
add
and
push
fdivr
jno
or
push
arpl
dec
fadd
dec
or
scas
jge
jne
or
pop
and
aad
cmp
dec
mov
inc
jne
aad
out
dec
dec
push
mov
outs
xlat
xlat
pop
mov
mov
inc
stos
dec
addr16
sbb
int3
jle
push
arpl
xchg
and
stos
clc
xor
mov
add
pop
push
xor
dec
mov
xor
adc
xchg
scas
mov
loop
inc
sub
pop
neg
shl
jno
daa
add
xchg
sar
fisubr
xchg
arpl
jns
fcomp
adc
adc
aad
and
dec
sti
call
cmps
out
test
fucomip
sub
cmp
test
test
add
scas
aas
aaa
sub
vpaddsw
sbb
mov
cld
arpl
test
int
dec
xchg
bound
call
dec
cli
mov
popa
jbe
xchg
mov
icebp
jb
mov
mov
add
out
mov
push
in
add
ret
fild
or
cmc
das
mov
jnp
cmp
sbb
into
pop
sar
xchg
sbb
or
jg
mov
xchg
in
xchg
pop
jp
int3
inc
cmc
sub
push
cmps
popf
inc
jmp
and
add
jl
leave
sub
add
div
not
sub
jge
cmp
dec
fcmovu
sar
xchg
test
aas
jnp
daa
fisubr
icebp
ins
sbb
fnop
hlt
push
jg
sub
lock
xor
inc
pop
femms
add
jp
cmc
jp
sub
daa
jmp
xchg
xor
add
pop
data16
mov
bound
xchg
push
inc
das
and
int3
rol
cmp
push
cs
sub
push
add
jg
add
xchg
inc
mov
dec
sbb
add
int
clc
and
add
mov
out
jne
ins
and
hlt
xchg
dec
daa
scas
pop
aas
pop
adc
ror
and
cmp
cmps
sub
loop
aas
pop
ja
nop
cwde
scas
aam
inc
inc
(bad)
nop
and
cmp
mov
cmp
and
fdivp
(bad)
mov
out
lahf
or
and
sar
in
stc
dec
xchg
mov
inc
and
dec
test
jae
icebp
sub
cmp
jecxz
bnd
xor
xchg
xor
mov
mov
pop
dec
sbb
sar
cli
inc
mov
lea
imul
ss
and
jg
popf
mov
mov
inc
aam
ins
aam
in
stc
stc
add
bound
out
imul
xchg
rcl
jns
and
jp
inc
jle
out
inc
out
fist
lods
aaa
in
stos
arpl
xchg
cwde
jmp
test
mov
xor
out
xor
lods
mov
sbb
mov
cmp
rcr
je
sbb
inc
out
push
push
loop
in
ins
mov
fcomip
pusha
stos
in
push
dec
jae
jo
mov
retf
rol
adc
je
jg
add
inc
xor
jne
mov
loope
mov
push
push
inc
test
sar
scas
repnz
and
xor
xchg
cs
xchg
fdivr
push
xor
sar
and
jge
lods
cmp
xchg
out
mov
(bad)
pop
inc
ds
loope
loopne
cmps
jle
mov
jns
data16
in
fwait
jg
dec
mov
adc
(bad)
sub
adc
inc
jae
pushf
test
cli
int
int3
adc
aas
(bad)
xchg
bound
xor
xor
nop
pop
jp
leave
pop
movs
dec
cdq
or
jno
and
mov
sbb
retf
out
int
xor
je
add
int
fisubr
sbb
rcl
in
jl
not
or
out
xor
mov
fisttp
fwait
mov
rcl
out
inc
(bad)
pusha
adc
popa
add
and
inc
mov
into
xor
clc
cmc
(bad)
xchg
int
jp
inc
cld
sub
div
out
push
xlat
inc
and
das
aad
movs
rcl
aaa
imul
cld
inc
xchg
jb
ret
pop
mov
outs
jle
xchg
repnz
in
and
xor
xchg
inc
lahf
xchg
movs
and
rcl
ret
mov
mov
mov
gs
sub
js
js
fs
enter
or
icebp
sti
test
mov
mov
mov
xchg
xor
and
and
push
push
push
sbb
pop
mov
or
xchg
jo
(bad)
sti
add
stc
iret
nop
jg
mov
popa
and
int
jg
aaa
in
mov
(bad)
adc
scas
cmps
cmp
fisttp
jle
and
je
xchg
and
add
pop
out
or
mov
cmp
cmps
dec
repz
popa
test
xchg
pusha
inc
mov
push
(bad)
jle
movs
mul
fdiv
add
or
sbb
inc
jecxz
lods
mov
pop
inc
out
add
mov
xlat
inc
fcom
sbb
popf
ss
adc
out
leave
mov
arpl
rol
cmp
cmps
(bad)
lods
inc
shl
jecxz
clc
inc
or
xor
cmc
loope
mov
dec
add
ja
fdivrp
fdivp
and
stc
test
daa
scas
data16
and
jae
movs
out
mov
in
push
jmp
cdq
push
cmp
xor
adc
fdivr
inc
mov
lock
jl
in
or
sub
mov
sub
xchg
xchg
adc
aad
mov
pushf
movs
(bad)
in
fdivr
mov
stos
fcomp
(bad)
cmp
push
sbb
jl
push
mov
shr
sbb
arpl
outs
xchg
adc
leave
pushf
jle
jecxz
out
mov
add
jge
lods
jmp
adc
sub
add
push
jo
xchg
in
sub
sub
mov
mov
fisub
sbb
sbb
push
xchg
(bad)
in
jp
icebp
add
stos
shl
out
xchg
aad
gs
cmp
jge
lods
inc
jae
push
add
cmp
jb
mov
sbb
adc
loop
into
mov
test
xor
xchg
pushf
adc
jns
ins
and
xchg
push
div
xor
ret
push
xlat
mov
cmc
and
call
sub
inc
mov
xchg
pop
das
cmp
fisttp
call
adc
leave
mov
inc
pop
fist
and
test
fdivr
clc
xchg
jle
push
cmps
loopne
int
xor
sub
or
lods
jnp
aas
adc
mov
xlat
cli
outs
int3
fist
int3
cmp
inc
adc
iret
and
or
push
mov
jle
xchg
int3
loopne
pushf
cmp
jmp
out
mov
pop
cmp
dec
sbb
sahf
adc
sbb
fnstcw
push
cmp
retf
and
loope
sub
or
iret
lahf
xchg
add
inc
pop
mov
cmp
push
cwde
push
and
cdq
(bad)
sahf
adc
adc
mov
mov
pop
and
daa
mov
cmp
jb
jb
pop
gs
xor
jmp
fsub
fsub
dec
pop
out
or
push
xchg
sub
jae
lahf
mov
mov
mov
mov
pop
enter
jl
dec
cld
addr16
cwde
inc
rcr
adc
sub
inc
sbb
(bad)
sub
pusha
xor
mov
ss
arpl
inc
std
(bad)
mov
adc
mov
dec
(bad)
jmp
and
out
pop
test
pop
int
inc
xor
retf
mov
shl
dec
adc
sbb
or
addr16
das
mov
out
mov
in
dec
push
sbb
ss
add
and
mov
hlt
inc
mov
lock
fimul
pusha
jo
jns
and
add
xchg
popa
xchg
lds
sub
ss
add
outs
jnp
mov
jp
ficom
shl
mov
mov
repnz
jl
jb
jmp
ins
bound
fiadd
cmp
cdq
cmp
popa
dec
ret
dec
pop
fdiv
lahf
dec
pop
pop
cmc
mov
rcr
xchg
pop
mov
mov
out
or
das
lds
stos
lahf
mov
pop
jp
sbb
sbb
enter
aam
adc
and
in
push
add
retf
adc
test
imul
pop
inc
mov
adc
push
pop
pushf
test
popf
or
jmp
lods
ins
pop
(bad)
in
push
ss
test
dec
dec
lahf
and
scas
inc
aaa
aaa
ds
jecxz
xlat
sub
dec
imul
mov
mov
add
nop
jbe
ins
not
(bad)
(bad)
jns
ret
add
inc
mov
sub
dec
jne
out
ins
sbb
popa
jne
add
adc
xchg
js
sub
std
iret
jns
mov
dec
sahf
sub
lds
stos
outs
jbe
or
sbb
and
imul
rcr
or
shl
inc
bound
cmp
mov
aaa
je
push
repz
call
lahf
cs
inc
(bad)
ins
repz
daa
ret
aam
les
test
lock
jb
push
pop
sbb
xchg
and
adc
(bad)
cwde
jle
cmc
ins
dec
ret
int3
adc
(bad)
lahf
mov
xor
sbb
ds
cwde
xlat
sub
push
fst
bound
sbb
repz
or
rcl
rol
cs
and
mov
mov
stc
ins
sbb
dec
xor
inc
aad
test
push
push
jecxz
scas
pushf
jbe
mov
jle
cmp
sbb
sub
nop
jl
mov
hlt
pop
loop
or
xor
and
jecxz
call
sub
mov
and
dec
das
pop
(bad)
xor
xor
sub
scas
mov
fadd
sub
pop
pop
dec
mov
xchg
imul
sub
add
jbe
and
add
or
pop
mov
in
iret
push
xchg
call
xchg
fdiv
push
mov
into
shl
in
call
mov
fld
jmp
sub
mov
(bad)
enter
adc
and
call
dec
push
push
push
mov
cmp
dec
mov
or
mov
sbb
inc
imul
xor
sbb
outs
pop
inc
mov
into
mov
ret
inc
pusha
les
cli
xchg
mov
movs
push
or
mov
cmp
mov
enter
clc
ja
sub
jl
movs
(bad)
loopne
mov
addr16
sbb
cli
cmp
sbb
lock
into
sub
retf
xchg
lds
push
push
ins
cmp
stos
test
mov
cmp
rcl
push
int3
sbb
aas
cmp
movs
fldcw
les
adc
mov
and
and
cmp
out
ss
fdiv
stc
mov
scas
pop
xchg
inc
or
mov
pop
mov
push
inc
out
not
sbb
push
(bad)
mov
push
popa
jb
push
into
sbb
popa
push
rol
retf
fidiv
es
push
pop
mov
fdiv
rol
jle
pushf
ins
mov
xchg
jmp
imul
jmp
les
rcr
add
loopne
in
adc
adc
fcmovbe
mov
sub
and
add
retf
out
rcl
bound
pop
cmp
xchg
call
into
mov
mov
aas
add
data16
jl
shl
gs
adc
repz
das
cmp
ds
fwait
clc
test
pop
out
je
out
scas
es
out
rol
lods
xchg
add
ds
ins
jl
arpl
jle
xor
mov
xchg
and
mov
sub
and
(bad)
pop
sahf
adc
pushf
or
(bad)
jle
daa
jbe
jg
cmc
outs
ret
push
jne
movs
or
sub
rcl
ret
push
fsub
call
call
and
rcl
ffree
gs
inc
(bad)
xchg
ja
or
or
nop
out
pop
lods
mov
and
(bad)
lahf
pop
mov
add
outs
push
mov
ins
jp
fsubr
rcl
out
cld
stos
scas
sbb
sub
mov
out
sahf
pop
sbb
fs
pop
xchg
mov
mov
leave
inc
sbb
mov
cmp
push
jbe
and
fs
jno
jne
popa
inc
mov
pop
clc
ss
adc
out
mov
or
out
xor
(bad)
fnsave
iret
scas
mov
or
mov
rol
pop
adc
fsubr
fidiv
jmp
aam
idiv
push
shl
and
jmp
shl
cmp
xor
lea
xchg
mov
shl
xchg
gs
imul
lods
fadd
int3
or
mov
scas
fidivr
add
fs
xor
je
push
fpatan
jge
dec
movs
mov
xor
xchg
(bad)
push
mov
inc
fstp
xlat
pop
retf
pop
int
das
stos
fdivr
mov
iret
jns
ret
rol
gs
int
inc
jmp
jmp
lahf
call
push
inc
push
sti
sub
scas
retf
mov
pextrw
jb
in
loope
lahf
cmp
aam
dec
popf
arpl
movs
movs
jo
adc
and
enter
fdivr
cs
dec
jbe
mov
clc
out
dec
test
pop
add
fistp
xchg
xchg
add
cmps
mov
sub
add
xchg
xchg
adc
fbstp
or
jnp
mov
adc
adc
xor
push
not
inc
jp
cs
xchg
sub
mov
in
int3
inc
je
xchg
fisttp
dec
mov
mov
aam
lods
(bad)
push
std
stos
(bad)
xor
add
fnsave
inc
aas
xchg
mov
das
fisttp
sar
fsubr
jg
(bad)
mov
push
pop
mov
iret
sbb
in
xor
add
push
ficom
and
data16
ret
inc
enter
aaa
ins
add
sahf
push
mov
sub
leave
xchg
and
or
lods
jmp
popf
jno
xchg
dec
aaa
mov
(bad)
mov
jecxz
jb
sbb
mov
xchg
leave
push
dec
out
mov
rcr
push
lds
rcr
sbb
or
or
push
or
mov
cli
mov
jnp
mov
nop
dec
rcl
push
iret
nop
mov
jb
mov
in
les
bound
cmp
adc
sbb
out
clc
aas
nop
and
add
mov
jno
mov
xor
mov
ss
dec
cmp
mov
sbb
loop
mov
xlat
push
add
outs
outs
mov
out
cmp
mov
cmp
sbb
rcr
jno
pop
add
les
fs
mov
dec
inc
daa
rcr
inc
sub
shl
icebp
fisub
data16
cmc
add
dec
push
mov
pop
mov
inc
aaa
inc
adc
pop
jge
int
and
xchg
xchg
cs
push
mov
call
sbb
xor
ins
xchg
mov
mov
movs
out
in
ds
jmp
rcl
jns
test
adc
jb
sbb
xor
cld
push
push
add
icebp
dec
and
out
fsubr
cmps
xor
xor
xchg
enter
jmp
inc
lea
pop
out
in
mov
dec
xor
mov
mov
push
push
xor
ds
push
call
loop
inc
dec
(bad)
and
inc
inc
sbb
sub
hlt
push
retf
sbb
jmp
outs
sbb
xor
data16
or
mov
jb
mov
adc
inc
cmc
aad
js
hlt
adc
lods
ds
rol
or
outs
mov
fcomp
cmc
fcom
push
and
inc
cmp
test
repz
push
jns
pop
inc
enter
mov
cli
das
xor
(bad)
push
outs
jmp
ret
neg
mov
retf
ins
imul
sbb
mov
or
sahf
dec
fadd
jae
adc
int3
es
pop
jp
xchg
(bad)
cmc
mov
inc
mov
fs
std
icebp
aam
adc
ret
inc
retf
div
mov
(bad)
inc
rep
pushf
not
pand
rol
ds
cmps
jp
dec
into
not
dec
jo
cwde
ss
jae
aam
inc
sub
or
sub
jge
mov
(bad)
cmp
fs
lea
pop
sub
outs
sbb
add
sub
addr16
outs
pop
cmc
push
pop
js
pushf
(bad)
out
jno
pop
and
push
lahf
add
mov
div
jns
xchg
addr16
scas
das
cmc
mov
stos
pop
adc
add
mov
inc
(bad)
popa
out
mov
and
cmps
fwait
sub
mov
push
jmp
dec
pop
ins
rcl
retf
rcr
cdq
adc
pop
push
(bad)
hlt
mov
inc
add
mov
(bad)
jno
sub
cmps
aaa
inc
lock
mov
jbe
sti
addr16
mov
mov
add
dec
push
mov
stos
into
sbb
popf
sub
or
lods
leave
stos
adc
and
je
add
adc
xchg
shl
inc
sbb
lahf
sbb
cmc
fld
mov
jle
xor
xchg
pusha
sbb
lods
test
addr16
cmp
cld
repz
test
xchg
add
movs
aad
jge
mov
xchg
loopne
mov
mov
xchg
and
add
imul
pop
adc
dec
add
pop
push
retf
add
ins
mov
mov
imul
scas
cmp
(bad)
out
mov
(bad)
mov
cld
xor
sub
out
add
scas
fmul
outs
xchg
xor
push
fcomp
inc
arpl
daa
cld
adc
inc
xor
es
test
mov
and
push
xor
dec
retf
sub
lods
xor
sub
lds
ins
sbb
je
mov
jmp
dec
(bad)
jnp
xchg
pop
imul
outs
ficomp
fwait
xchg
dec
or
xor
mov
inc
shl
loope
push
test
mov
hlt
xor
xchg
ins
scas
jmp
mov
mov
test
xchg
adc
sub
push
cwde
jecxz
scas
les
gs
sar
push
(bad)
loop
pop
mov
mov
nop
movs
loop
xor
shl
add
sbb
and
fiadd
loope
xchg
xor
mov
pop
cmps
xlat
retf
fwait
es
cmps
ss
rcl
pop
(bad)
lea
in
cmp
ins
pushf
jno
dec
fbld
and
or
repnz
dec
pop
jo
cwde
mov
xchg
rol
ret
(bad)
sub
movs
aad
jno
jecxz
and
jecxz
add
(bad)
and
in
push
pop
xchg
repz
popa
stos
fs
push
dec
xchg
call
mov
mov
adc
fistp
cld
in
sub
push
xor
enter
loopne
daa
mov
xor
cmps
jg
sub
sub
jg
in
push
add
inc
cwde
mov
pop
dec
cwde
add
ss
jp
or
sbb
dec
xchg
add
xchg
push
les
outs
xor
and
mov
xchg
aaa
push
jbe
dec
mov
pushf
stos
sub
or
dec
stos
jae
push
and
mov
adc
xor
mov
xchg
out
mov
cs
fmulp
test
jne
dec
jecxz
mov
cmp
jge
sbb
adc
(bad)
fdiv
enter
test
aas
lods
arpl
inc
call
icebp
gs
xlat
xor
js
adc
mov
dec
ja
bound
cmc
jnp
mov
ss
in
push
mov
rol
pop
sbb
sbb
outs
push
iret
xor
jb
fistp
add
leave
cmp
psrld
std
dec
inc
cmps
push
dec
mov
push
ss
nop
sub
or
das
in
xchg
in
out
call
lock
inc
ds
ja
or
sahf
test
jbe
pop
icebp
aad
or
lahf
sbb
mov
es
xchg
fwait
jnp
dec
mov
jp
jo
and
pop
addr16
les
push
call
repnz
ins
les
pop
scas
adc
pop
(bad)
gs
les
not
mov
mov
xchg
jae
dec
test
push
cmps
cwde
sub
xor
arpl
mov
ins
pop
sub
fwait
clc
cwde
and
inc
mul
xchg
test
(bad)
fisttp
pop
hlt
int
mov
fld
cli
sub
sbb
ja
mov
aaa
inc
addr16
cmp
xor
outs
jl
enter
sbb
shl
sbb
dec
enter
add
fwait
loopne
xor
into
mov
stos
cmp
cli
xor
jmp
dec
mov
(bad)
dec
leave
push
adc
add
hlt
push
(bad)
xchg
xor
outs
out
or
sbb
sbb
fsubr
cwde
and
sti
rol
(bad)
xchg
mov
jg
jmp
or
mov
ins
jle
cmps
or
test
xchg
cmp
test
jp
xor
cmp
call
add
out
pop
les
pop
mov
jp
sub
fsub
pop
sbb
cdq
jmp
pop
push
ins
pop
add
push
mov
rcl
mov
jecxz
rcr
adc
push
mov
fidiv
in
cwde
sub
pop
jbe
cmp
fimul
and
xor
xchg
adc
add
pop
sbb
xor
dec
aad
cmp
jp
add
pusha
mov
scas
div
cmp
cmps
lods
sub
jno
inc
mov
add
js
lahf
xchg
vcvttpd2dq
std
cld
jmp
popf
loop
dec
cld
enter
dec
aam
arpl
ss
loop
mov
rcr
sub
cdq
mov
sub
jb
nop
jecxz
push
pushf
mov
xchg
xor
xchg
mov
popa
test
sahf
mulps
sar
not
mov
shl
loope
xchg
cmp
cmps
jg
push
out
jb
mov
mov
scas
(bad)
push
retf
icebp
inc
jl
jmp
adc
and
or
sbb
push
retf
add
fsubrp
push
pop
(bad)
mov
aas
fdivr
mov
sub
cmp
(bad)
sub
fisubr
and
imul
mov
mov
es
adc
(bad)
popa
loopne
mov
add
movs
mov
cmp
ficomp
cmp
nop
(bad)
mov
cs
xlat
ins
icebp
dec
push
inc
fst
and
lods
and
test
jle
sub
outs
mov
loop
lock
sti
inc
sub
shl
mov
data16
cwde
jne
dec
addr16
je
sub
xchg
xchg
cmp
(bad)
(bad)
stc
and
(bad)
or
or
lea
mov
mov
jnp
jge
mov
daa
ret
mov
lds
sub
pop
outs
icebp
in
je
xor
rol
xchg
pop
pop
aas
pusha
stos
stos
inc
xchg
cld
jno
(bad)
sub
sbb
sub
sub
stos
dec
cld
cmp
cmp
ds
(bad)
adc
push
iret
dec
or
sbb
push
jecxz
add
dec
cmp
stos
jmp
mov
adc
stc
leave
jb
dec
sbb
aad
add
in
cld
dec
loopne
cmp
adc
xor
cmps
rcr
or
xor
stc
add
push
loopne
mov
fisubr
loop
cwde
sbb
in
icebp
sbb
push
(bad)
cs
cs
cwde
(bad)
mov
mov
cmps
cmp
xchg
(bad)
in
(bad)
ins
retf
mov
xor
xchg
(bad)
div
iret
leave
loopne
test
in
pop
(bad)
into
adc
fisubr
cli
je
jmp
or
fadd
dec
sbb
sub
cmovo
aam
jne
pop
imul
leave
daa
jg
jg
fild
jae
or
jns
xor
dec
xor
jg
pop
mov
mov
cmp
adc
sbb
sahf
jge
rcl
lods
mov
hlt
out
out
pop
push
cmp
dec
pop
int3
call
sub
xor
xchg
cmp
lods
ins
jno
out
clc
adc
xor
pop
ret
push
ss
pop
sub
bnd
xor
dec
popf
out
dec
push
sub
aad
mov
movs
push
test
push
cmps
and
test
retf
push
imul
mov
mov
(bad)
stos
popf
shl
push
arpl
or
in
mov
pop
xchg
into
mov
repz
sbb
xchg
and
sub
sub
or
stc
(bad)
enter
nop
sbb
push
lds
std
or
sbb
mov
jae
mov
cmp
and
cmp
movs
push
(bad)
mov
scas
(bad)
mov
sbb
sbb
push
out
jle
jbe
lods
in
xchg
rcl
sbb
xor
mov
(bad)
test
ins
call
fnsave
bound
pop
mov
lods
add
cmp
call
mov
ficomp
stos
or
out
icebp
push
adc
xchg
sbb
mov
sbb
mov
int3
in
nop
loopne
retf
mov
xlat
add
pop
mov
leave
mov
movs
ret
mov
mov
xchg
es
dec
mov
aam
iret
shl
sub
adc
lods
dec
hlt
adc
add
inc
stos
fstp
jnp
mov
jmp
out
inc
sub
int
sbb
jle
xor
push
dec
sbb
xchg
ss
fdiv
loop
xor
pop
adc
ret
outs
ins
popa
xlat
(bad)
out
cmp
aam
shr
xor
repz
nop
inc
enter
xchg
add
fmul
out
xlat
stos
jne
xchg
in
lods
adc
and
movs
and
dec
sub
ins
movs
inc
xchg
(bad)
mov
dec
mov
loopne
sub
dec
xchg
cdq
scas
jb
mov
pop
mov
sub
push
pop
inc
mov
and
jecxz
jecxz
mov
sbb
fistp
addr16
or
dec
fldcw
cmp
test
mov
push
retf
jbe
dec
paddusw
dec
lahf
or
push
pop
rcl
inc
in
adc
aad
mov
imul
out
imul
mov
popf
in
xor
mov
iret
sub
cwde
ss
dec
jmp
in
(bad)
pusha
scas
inc
adc
mov
xor
mov
loop
xlat
push
or
iret
(bad)
dec
push
sub
mov
push
adc
cmc
test
fist
xor
xor
test
cs
add
mov
fisub
jnp
pop
xor
inc
xchg
ror
pop
cwde
stc
push
cmp
je
pop
ins
ds
adc
daa
fwait
jbe
repnz
jo
or
xchg
add
xor
cmp
pop
adc
xchg
xlat
dec
imul
ins
je
dec
fiadd
and
lods
xchg
scas
dec
adc
shr
dec
and
mov
adc
sbb
scas
sub
std
clc
lea
cmp
out
aas
lods
adc
dec
cs
pushf
movs
adc
cmp
mov
push
ins
inc
push
test
sar
pop
xchg
mov
fiadd
jmp
xchg
mov
inc
ret
mov
mov
mov
jb
add
test
jl
mov
data16
and
xchg
arpl
and
bound
movs
out
addr16
in
mov
in
cmp
arpl
dec
adc
lds
popa
adc
fnsave
pushf
or
out
fiadd
ret
xchg
jl
or
les
push
jb
fimul
fld
dec
push
cmp
mov
pop
mov
pop
lods
push
inc
xchg
fdivr
movs
sbb
mov
xor
sub
ins
adc
push
add
mov
push
sbb
ror
mov
mov
inc
pop
loopne
xchg
mov
and
adc
inc
inc
imul
add
jno
xchg
sub
ja
add
add
pop
out
pop
and
pop
out
test
movs
ins
mov
xchg
sbb
push
loopne
test
push
gs
popa
scas
shl
pop
imul
sar
xor
xor
pop
lods
mov
xchg
mov
ret
scas
mov
inc
bound
pop
add
mov
mov
ret
ror
jmp
mov
jns
cdq
icebp
push
pop
mov
loope
idiv
dec
ret
xlat
div
aaa
cs
clc
jbe
jg
jmp
sub
in
popa
inc
cmp
inc
fidiv
jg
fdivp
dec
mov
(bad)
hlt
push
xchg
xchg
ficom
cmp
mov
das
outs
leave
scas
inc
fistp
jb
mov
cld
loop
je
dec
push
add
xlat
addr16
(bad)
adc
loope
jge
dec
out
mov
pop
out
add
pop
cmp
in
xor
packsswb
adc
popa
popf
psubq
repz
and
xchg
jmp
outs
movs
test
pop
(bad)
scas
xor
mov
out
add
bound
popf
fnstenv
and
ss
test
dec
test
dec
int
rol
jle
sbb
loop
or
(bad)
fsubr
repnz
and
test
fwait
or
aaa
test
inc
inc
and
push
pop
sub
scas
mov
inc
in
sub
sahf
pop
pop
cwde
loopne
hlt
nop
cmp
or
mov
mov
adc
pop
scas
scas
lds
aas
ins
ss
xor
push
mov
popf
test
xor
fdiv
stc
or
jne
les
in
lods
pop
(bad)
sbb
push
fnsetpm(287
or
lods
jbe
mov
ret
adc
(bad)
ret
cmp
mov
dec
in
jnp
lds
xor
retf
xor
xor
aad
gs
jmp
cs
fld
js
fs
out
aad
std
data16
aaa
clc
dec
mov
je
or
js
arpl
cdq
repnz
lahf
rol
xchg
fld
lock
cmp
loope
lahf
mov
pop
sub
pop
cmp
mov
and
cld
mov
(bad)
dec
xor
mov
ins
jle
gs
test
ret
adc
ins
cmp
add
mov
icebp
dec
gs
scas
fild
popf
add
sbb
or
xchg
rcr
(bad)
stc
mov
popa
jnp
adc
cwde
or
and
pusha
nop
push
add
pop
fstp
vmwrite
xchg
adc
mov
pop
mov
mov
movs
enter
mov
(bad)
adc
call
push
std
mov
(bad)
scas
sub
aas
fs
fsincos
push
icebp
pusha
ret
xor
stc
cld
ret
fimul
fdivr
lods
jp
jp
sbb
retf
jno
and
jg
aaa
jmp
dec
mov
ret
and
pop
fcom
ds
addr16
aaa
dec
inc
inc
ficomp
jg
add
inc
dec
lods
retf
out
mov
(bad)
in
dec
mov
iret
cmp
pop
xor
ror
cmp
outs
mov
leave
fbld
nop
xchg
mov
pop
lds
outs
jmp
dec
iret
push
mov
mov
mov
ja
inc
add
mov
mov
dec
adc
inc
cld
(bad)
out
stos
mov
mov
or
mov
mov
dec
push
dec
or
fiadd
xchg
jg
test
mov
or
xor
ret
aaa
push
fisttp
adc
xchg
sub
and
push
jl
cmps
xchg
push
std
call
push
adc
(bad)
hlt
mov
cmps
aam
cs
dec
(bad)
out
pop
scas
jge
mov
stos
in
inc
out
test
or
fiadd
cmp
call
jle
jns
cmp
rcl
push
scas
paddd
and
mul
add
cmp
nop
xor
and
and
jno
xor
xor
pop
out
pop
jle
fld
shl
xchg
call
pop
mov
iret
jne
test
fldcw
mov
shr
mov
jmp
adc
add
push
bound
jle
pop
sar
popf
leave
and
das
jo
enter
test
jmp
add
retf
lock
add
popa
dec
int3
add
ret
ret
jecxz
and
or
pusha
cld
fidiv
or
jge
xchg
sbb
sub
fimul
ret
mov
push
push
xor
sub
and
mov
cmc
sub
mov
and
add
inc
add
movs
(bad)
inc
sub
mov
retf
imul
sub
mov
test
shr
popf
call
mov
mov
fdivr
std
add
xchg
adc
jno
cmp
and
ret
sbb
scas
mov
test
dec
cld
dec
movs
mov
movs
or
scas
aaa
je
(bad)
jnp
add
hlt
pushf
outs
fadd
int3
inc
iret
shl
(bad)
ins
mov
sbb
sahf
into
jnp
js
mov
dec
std
fdiv
mov
or
(bad)
dec
in
sbb
xchg
xchg
cmp
stos
or
(bad)
mov
ss
ror
sbb
popa
xchg
cs
and
mov
xchg
fs
jne
call
aad
int3
into
cmc
sbb
or
or
pushf
xchg
lds
sbb
cld
scas
adc
sbb
movs
imul
mov
out
ss
aas
data16
pop
jg
movs
test
jmp
scas
mov
test
mov
test
jp
mov
sbb
cmp
popa
dec
cmp
aaa
mov
shr
cmc
cmps
xor
mov
xor
out
aad
fbstp
mov
sub
adc
mov
call
stos
pop
repz
xor
push
add
rcl
arpl
sbb
dec
das
pop
jmp
lds
mov
cmp
repnz
adc
push
and
gs
and
lds
ja
int
out
fstp
mov
push
(bad)
sub
es
test
mov
xchg
mov
adc
push
iret
dec
mov
std
push
mov
cmps
pop
push
cmps
sbb
out
(bad)
pop
push
jl
sbb
push
pop
movs
loopne
rcl
add
jmp
out
sub
es
sbb
cld
xor
les
xchg
mov
sbb
mov
dec
cdq
scas
vpavgb
cmps
jmp
(bad)
cmp
test
(bad)
retf
call
inc
jno
shl
adc
push
pop
div
mov
call
js
dec
mov
sbb
mov
pop
leave
jecxz
clc
mov
mov
adc
push
jbe
mov
cmp
push
adc
clc
dec
adc
push
jae
cmp
in
cmp
sub
mov
mov
dec
test
(bad)
or
std
xchg
jns
push
cdq
inc
push
aaa
push
fadd
pop
add
dec
jbe
jb
loop
mov
imul
sub
xchg
(bad)
push
ret
mov
test
pop
sub
jmp
sbb
push
pop
and
scas
(bad)
and
test
or
cmc
fldcw
call
jge
mov
in
pop
inc
mov
in
jae
jno
mov
push
call
push
cld
cdq
pop
push
cmp
fistp
fcom
(bad)
sbb
data16
add
mov
inc
add
or
je
mov
vpsrld
jae
out
inc
arpl
adc
pop
xchg
stc
iret
gs
pop
cmp
ja
xor
sbb
in
into
mov
jnp
nop
cmp
sub
fcom
lods
and
add
ret
jb
sbb
lods
jp
mov
mov
jmp
out
popa
adc
jge
jnp
outs
add
push
stos
daa
add
fistp
mov
dec
sub
mov
push
and
jl
dec
icebp
inc
jmp
loope
cmp
lods
mov
jno
and
cmp
shr
push
fdiv
cmp
push
sub
iret
cmp
fidiv
cmp
pop
jmp
inc
sti
les
cmp
push
outs
adc
(bad)
ja
out
inc
mov
xor
jl
sub
stc
ins
cmc
add
scas
pop
repnz
cmps
add
xor
push
stc
push
repz
jmp
mov
hlt
out
mov
loop
pop
fwait
std
ret
push
addr16
outs
in
xchg
inc
inc
xchg
jno
mov
xchg
imul
jne
inc
pop
xor
pop
jp
sbb
pushf
cli
dec
imul
pop
push
fnstcw
push
fwait
jne
adc
xchg
ds
mov
jo
mov
test
bnd
retf
push
mov
call
mov
inc
ja
std
xor
dec
stc
call
stos
fs
std
daa
pushf
test
das
inc
stos
or
pop
push
stos
add
inc
dec
jle
sub
mov
sbb
push
fs
add
mov
mov
pop
sbb
xchg
in
in
cdq
ins
inc
lods
loope
pop
cld
cmc
test
hlt
adc
mul
xchg
test
inc
dec
push
push
bound
movs
btr
xchg
stos
hlt
sub
bsr
fldenv
adc
mov
ins
xchg
mov
cdq
sub
jne
mov
fiadd
hlt
in
leave
jae
shl
retf
or
push
inc
xor
aad
inc
inc
jge
movs
std
arpl
cli
pusha
in
pop
push
lahf
jg
jg
int
mov
in
mov
call
bound
push
loop
ds
dec
pop
sub
rol
jns
cmp
xchg
into
pushf
loope
push
in
or
pop
(bad)
jge
loope
pop
call
mov
sar
(bad)
push
mov
jle
dec
jmp
cmp
mov
jne
xor
nop
adc
imul
xor
dec
ja
xor
sub
xor
popa
retf
sar
cmp
jo
retf
imul
mov
in
lock
dec
movups
outs
push
mov
cmp
cli
mov
pushf
and
stos
push
jmp
or
mov
pop
sbb
sub
and
sbb
add
arpl
jecxz
sub
cli
cmp
enter
add
or
mov
les
clc
lods
mov
mov
test
push
cmps
xor
pop
mov
scas
jp
fbstp
push
sub
stos
cli
pop
pop
mov
pop
js
aaa
or
cmp
rcr
xor
or
push
dec
sbb
mov
xor
jae
mov
cwde
xor
movs
add
add
imul
stos
dec
inc
and
mov
mov
rcl
cmp
ror
mov
sbb
sbb
push
dec
lahf
mov
ja
lods
xor
loopne
jbe
popa
push
mov
sbb
stc
aam
xor
sahf
imul
mov
cli
gs
ret
sbb
cmps
cmps
mov
cmp
into
test
xchg
push
outs
mov
outs
ins
fcmove
push
push
movs
fild
jae
repnz
sahf
outs
clc
push
cs
les
jmp
push
pushf
pop
mov
xchg
nop
xlat
push
mov
dec
fist
outs
les
out
sbb
jo
leave
shr
inc
push
lods
push
mov
popf
and
repz
pushf
jnp
in
in
pop
icebp
out
test
scas
jne
dec
push
cmp
out
or
iret
enter
xchg
ror
ret
inc
xchg
lock
mov
push
adc
mov
cmp
xor
outs
xor
sbb
mul
mov
cli
mov
std
(bad)
in
and
xlat
dec
hlt
push
jbe
fxtract
shl
jbe
add
lods
sub
add
ret
stc
ret
stos
neg
dec
or
mov
loop
lods
scas
mov
fistp
push
outs
push
dec
dec
xor
mov
xchg
xchg
push
xchg
mov
push
bound
shl
xchg
lahf
mov
test
outs
mov
and
jl
retf
test
add
dec
mov
fsubr
cmps
push
sbb
ret
sbb
mov
ret
inc
inc
hlt
mov
xchg
cmp
and
or
shr
call
(bad)
ficomp
push
and
jmp
ficom
iret
test
out
push
ins
adc
lods
push
out
xor
xchg
fdivr
data16
mov
retf
add
dec
outs
push
sub
div
dec
and
and
and
test
mov
push
xchg
out
js
icebp
into
pop
cs
pand
mov
add
shl
dec
adc
add
xchg
mov
push
mov
xor
adc
scas
stos
call
retf
rcl
popf
fild
int3
fwait
sti
in
xor
shr
js
mov
lods
fmul
gs
inc
jmp
xchg
inc
jo
icebp
stos
jle
pop
lods
clc
jo
pop
ror
mov
push
fild
add
js
and
aam
popa
shl
outs
lock
inc
mov
mov
dec
ret
mov
inc
repz
adc
mov
push
leave
sbb
mov
mov
shl
icebp
dec
mov
mov
fldcw
aas
gs
mov
sbb
sti
mov
or
xchg
mov
stc
xor
in
adc
jb
(bad)
pop
jnp
adc
retf
scas
dec
add
(bad)
iret
loopne
jp
stos
xor
dec
sahf
xchg
dec
(bad)
push
loope
push
jno
pop
xor
push
sub
and
dec
js
cmp
out
and
out
sbb
gs
adc
jnp
mov
inc
mov
loope
mov
mov
adc
in
clc
sub
xor
(bad)
jmp
scas
cmps
stc
push
cs
imul
in
add
cwde
sbb
rol
sub
push
out
mov
shl
popa
in
mov
and
std
lahf
mov
shr
xor
or
xor
jge
add
jae
mov
enter
jecxz
cli
ret
lds
call
ret
sbb
loopne
inc
scas
sbb
adc
dec
aad
push
xchg
mov
movhps
xchg
xor
popf
dec
or
fistp
movs
inc
mov
lods
ret
ret
mov
aas
(bad)
stc
bound
fistp
mov
cmp
cld
jg
daa
jno
mov
or
adc
ret
add
inc
jo
inc
imul
push
push
inc
push
rol
xor
int3
imul
mov
div
mov
mov
in
mov
ds
fidiv
xor
fsubr
stos
int3
or
sbb
adc
adc
cs
movs
int
push
sub
scas
fstp
xchg
inc
out
sahf
sti
cmp
fstp
ins
ret
and
or
xchg
pop
pop
mov
sub
sub
xchg
lods
clc
in
mov
push
add
cmp
(bad)
loope
in
cdq
ret
stos
movs
out
sub
imul
jnp
fistp
and
push
(bad)
mov
in
dec
int3
jmp
add
cmp
pop
sahf
add
jmp
xor
clc
xor
inc
scas
xchg
test
mov
cld
lods
std
fdiv
std
movs
retf
fadd
sbb
lahf
rol
aad
js
push
adc
mov
popa
or
idiv
fist
pop
push
mov
sbb
cmp
jmp
xor
add
pushf
mov
int
in
xor
push
mov
adc
sub
aas
cli
pushf
and
xor
daa
pop
jmp
dec
mov
es
fwait
lock
xchg
and
add
pcmpeqd
sub
sbb
jl
sbb
fild
cmps
(bad)
in
ins
mov
das
mov
lods
mov
daa
adc
xchg
xchg
or
je
(bad)
outs
inc
les
je
mov
mov
in
cmps
dec
bound
mov
or
sbb
push
daa
dec
push
in
or
je
rol
cmp
cmp
xchg
push
aam
aaa
sub
outs
push
adc
xchg
cmps
add
out
mov
repz
fidiv
xor
jecxz
mov
(bad)
jno
lock
std
xchg
add
out
xlat
mov
aaa
pminub
xchg
and
jle
push
fucom
add
cmp
es
jns
add
jge
dec
mov
mov
bound
les
mov
(bad)
in
jae
sbb
test
ds
xor
adc
pop
gs
fdiv
popa
shl
xor
cdq
push
retf
or
cdq
adc
in
jbe
loopne
icebp
into
int
leave
test
stos
test
mov
(bad)
mov
add
shl
mov
repz
push
fldcw
int3
xor
cmps
rcr
lock
push
pop
mov
cmp
fstp
ds
xchg
and
ja
xchg
movs
dec
outs
or
clc
sbb
cmps
imul
lods
sub
or
adc
lds
stos
push
loopne
ret
mov
inc
cdq
jo
fild
cmp
jns
inc
adc
mov
addr16
jge
loope
pop
add
mov
cmp
push
ds
fld
jmp
sahf
int3
das
ss
dec
(bad)
fldenv
add
ds
mov
mov
add
ret
jmp
sti
adc
pop
repnz
xchg
dec
push
mov
mov
jne
sar
movs
pop
imul
push
retf
lods
mov
data16
(bad)
out
enter
cmp
sbb
popf
or
mov
aas
xchg
adc
sub
inc
jno
imul
xchg
pop
dec
or
xchg
xchg
sar
jbe
mov
cmp
call
mov
mov
sub
inc
mov
adc
out
dec
mov
push
inc
(bad)
icebp
mov
ret
imul
pop
mov
cs
test
ja
iret
pop
scas
inc
scas
popa
jmp
test
iret
icebp
adc
das
in
cmp
sbb
inc
dec
rcl
test
call
xchg
inc
(bad)
adc
sahf
in
dec
call
inc
lods
dec
sub
outs
inc
adc
sub
or
jmp
nop
xor
in
sub
popa
int
fs
retf
gs
dec
je
sbb
dec
sbb
lods
adc
mov
xor
mov
enter
adc
jmp
and
push
and
not
out
call
add
mov
push
shr
out
mov
xor
dec
icebp
ja
lods
mov
popa
mov
dec
adc
sbb
in
pop
or
idiv
mov
pop
ss
jge
add
pop
pusha
push
add
imul
push
cwde
push
lods
jno
xchg
mov
test
and
cmp
int
cwde
(bad)
xor
push
dec
out
and
movs
xchg
stos
lea
inc
push
imul
xchg
jecxz
shl
xchg
retf
jmp
cmp
fsubr
test
into
ja
fimul
in
xchg
xchg
and
inc
stc
inc
mov
sub
mov
fisubr
push
jge
cmp
inc
adc
pop
adc
push
push
mov
xchg
test
enter
xchg
movs
in
hlt
pop
inc
push
mov
scas
repz
cld
dec
nop
mov
mov
test
test
cmp
adc
sti
adc
inc
or
xor
add
outs
jl
lds
mov
mov
cmc
push
test
loopne
frstor
in
cmp
cmps
sub
(bad)
cmp
adc
div
dec
jnp
cld
pop
adc
sbb
js
pop
cli
xor
leave
xor
pop
dec
sbb
sbb
cmp
cmp
neg
mov
mov
xchg
loop
sti
mov
jg
bswap
mov
cmp
ror
loope
push
jo
bound
jnp
fcomp
mov
add
pushf
mov
adc
sub
call
ret
jg
or
mov
jmp
or
xchg
mov
lds
xor
pop
cmp
loopne
dec
mov
iret
jae
rol
xchg
iret
add
fld
xchg
test
ficomp
cmps
jecxz
cdq
xlat
inc
mov
ins
jne
pop
fld
xchg
pushf
out
cmc
mov
lds
fs
retf
cwde
jmp
push
fcmovnb
ins
sub
mov
cdq
mov
mov
ret
jmp
xchg
loop
jle
cdq
mov
pushf
add
push
into
mov
push
xchg
sar
test
adc
cmp
pop
das
aas
loope
stos
retf
retf
mov
jno
sub
sub
cmp
cmps
in
jle
cmc
xor
loopne
sbb
or
outs
jns
cmp
and
push
retf
push
sub
fiadd
int3
push
push
neg
cld
and
sub
lahf
icebp
pop
push
mov
call
push
mov
inc
in
std
(bad)
std
out
pop
add
push
push
arpl
out
stos
and
xchg
or
adc
pop
xlat
sub
add
rcr
push
fldcw
ins
push
aam
shr
xchg
inc
push
adc
dec
jne
mov
(bad)
in
push
inc
push
icebp
inc
xchg
aam
bndldx
inc
fwait
out
int3
mov
jnp
popf
add
mov
add
push
ins
cdq
mov
push
jg
mov
sbb
in
ror
jl
inc
ret
js
xor
out
popf
jbe
outs
pop
shr
and
jnp
jmp
imul
aas
call
mov
jmp
test
pusha
jl
pop
std
dec
mov
push
jmp
dec
mov
and
das
pusha
jne
fsub
aaa
mov
and
cmp
or
arpl
scas
sbb
push
cmps
dec
pop
xor
cwde
push
aaa
call
mov
add
loop
cld
in
inc
inc
dec
dec
outs
in
int
inc
jb
pushf
popf
jecxz
lods
lock
add
xor
mov
cmp
mov
jae
not
loope
xor
xor
jmp
mov
mov
sub
call
mov
fst
sbb
sub
cmp
mov
cmpxchg
clc
in
cmps
(bad)
(bad)
push
mov
add
mov
dec
nop
dec
mov
outs
stc
lds
dec
mov
xor
sbb
mov
cmps
xor
hlt
rol
aam
mov
adc
pushf
mov
mov
fistp
cmc
outs
xchg
jae
mov
test
xlat
jo
out
dec
cld
out
jmp
lods
mov
aam
sahf
mov
mov
inc
mov
mov
pop
repz
retf
and
in
mov
xchg
xchg
mov
push
pushf
mov
xor
aad
cdq
adc
sbb
shr
xchg
std
fs
call
ret
and
sub
sbb
or
data16
push
or
adc
xchg
cli
sub
data16
cmp
jo
mov
daa
not
mov
jl
rol
cmp
imul
inc
data16
inc
push
xchg
enter
fsubp
shl
fstp
out
adc
cmc
sub
lock
lahf
pushf
pop
fstp
rcr
jne
push
movs
lods
shl
push
xchg
enter
cmc
psubusw
pop
data16
std
and
ret
xor
es
push
adc
jnp
dec
push
and
mov
mov
mov
and
add
cmp
adc
xor
inc
push
jbe
push
sub
int
push
test
daa
out
sub
dec
mov
imul
inc
inc
lods
jg
das
ins
add
jne
lfs
mov
ds
pop
test
hlt
jp
xchg
cmp
(bad)
repnz
mov
xchg
xor
jo
add
(bad)
retf
jne
xor
cmp
xor
mov
jge
add
std
ret
call
cmp
push
or
ja
pop
stc
mov
mov
dec
out
scas
je
daa
retf
mov
push
js
xor
(bad)
(bad)
ins
adc
inc
pop
leave
test
or
(bad)
xor
leave
cld
daa
dec
sbb
in
arpl
enter
push
(bad)
mov
push
jns
out
lods
xor
sbb
mov
inc
cwde
test
rcr
fwait
mov
rcl
xor
push
or
into
jle
in
mov
test
fimul
cdq
movs
les
and
dec
push
pop
stos
pop
jle
ins
jb
movs
(bad)
in
mov
push
jl
retf
shl
add
xor
add
inc
ss
pop
mov
inc
fadd
xor
and
leave
xor
xlat
cwde
imul
cli
xchg
mov
loop
test
mov
or
or
movd
adc
aam
(bad)
addr16
mov
mov
jbe
shl
std
in
push
push
shl
(bad)
shr
ja
inc
ret
retf
cmp
cmps
cwde
cld
in
or
stc
shl
sub
xchg
mov
push
hlt
pop
cdq
jae
xor
(bad)
adc
fimul
mov
adc
ret
mov
shl
push
xor
loopne
fs
push
or
iret
out
(bad)
adc
add
fdiv
es
pop
xchg
cwde
test
inc
sbb
or
or
jmp
xchg
out
loopne
jp
or
jno
movs
push
clc
jle
push
cmp
mov
scas
jl
cs
pop
sub
lods
imul
pop
leave
sbb
jl
jns
ins
ss
sbb
jp
pop
add
push
xor
add
xchg
(bad)
mov
lds
xor
cwde
repz
mov
and
ins
stos
sahf
mov
clc
cs
std
adc
xor
push
or
fidiv
inc
cmc
pop
sub
jecxz
addr16
mov
mov
ret
outs
and
add
call
arpl
out
xchg
xchg
imul
push
push
rcl
mov
cld
cmp
cmp
sbb
mov
popa
out
ret
hlt
daa
out
loop
outs
cmp
fwait
aad
js
out
pop
jl
push
jle
mov
adc
imul
pop
movs
ss
ret
ja
push
int3
aaa
mov
ficom
jbe
gs
xor
aad
push
xor
push
stos
fcomi
loope
mov
mov
jp
rcr
push
pop
lods
cld
bound
and
int
adc
mov
and
out
out
outs
retf
leave
sar
xor
dec
pusha
popa
add
or
fsub
fadd
mov
mov
adc
test
mov
ins
xchg
mov
adc
mov
lea
mov
aad
cmp
iret
repnz
jbe
xchg
xchg
or
cmp
adc
jp
and
fisub
repnz
mov
and
inc
inc
inc
inc
popa
cmp
xlat
pop
xlat
mov
ret
std
and
jmp
sti
int
test
xchg
loop
lea
dec
lock
dec
in
pop
mov
adc
ficom
and
movs
inc
aad
inc
popf
or
and
inc
pop
xchg
hlt
js
xor
sub
ja
push
aad
lds
and
ret
push
in
loop
mov
dec
add
call
test
pop
add
ins
sub
ret
lahf
and
ror
loop
(bad)
mov
outs
pop
dec
push
pop
cmp
test
enter
cmp
mov
ins
pop
jne
sbb
sub
dec
in
cdq
lea
lea
cdq
push
outs
addr16
fcomp
repnz
out
ins
fwait
bound
ja
dec
mov
push
fnstenv
xchg
pop
mov
inc
and
icebp
inc
lahf
inc
mov
test
push
cs
push
lds
nop
push
sbb
stc
inc
and
inc
mov
retf
repnz
in
xchg
scas
push
mov
xor
imul
lds
aas
or
sub
adc
out
cmps
mov
(bad)
xchg
aad
clc
stos
inc
mov
aas
stos
jg
fwait
je
cmp
stc
dec
(bad)
mov
add
pop
adc
sbb
mov
cmp
test
adc
xchg
cmps
xchg
push
adc
sub
out
sbb
mov
mov
(bad)
iret
and
xchg
cmp
aad
mov
sbb
js
test
jmp
add
and
mov
pop
icebp
mov
mov
inc
or
inc
(bad)
or
jne
xor
mov
aaa
outs
pushf
inc
fiadd
xchg
adc
jg
pop
sbb
mov
shl
pop
icebp
rcr
(bad)
push
dec
push
and
ins
pop
aaa
retf
and
mov
inc
dec
into
or
movs
push
lea
jg
and
ins
ins
loope
or
data16
mov
das
repnz
jae
cwde
les
push
cmp
inc
sub
fsubr
xor
jmp
dec
dec
jo
cmp
loopne
sub
cmp
add
xor
in
sbb
dec
and
jl
push
addr16
lea
outs
xchg
(bad)
aad
stos
inc
push
pop
rcr
cwde
add
cmps
sahf
fisttp
rcl
cmp
movs
sbb
aaa
pop
dec
mov
les
sub
sbb
xchg
mov
stc
mov
jno
inc
jb
adc
cmp
inc
inc
jg
mov
das
test
outs
jecxz
lahf
mov
mov
xchg
or
sub
cmp
pop
mov
adc
inc
sub
pop
cmp
or
addr16
sbb
jno
inc
mov
xchg
cwde
sti
in
and
jno
jns
mov
cmp
sbb
cmps
stc
mov
mov
dec
jl
xor
xchg
fisttp
cmp
test
xchg
cdq
or
inc
fistp
addr16
and
push
mov
mov
push
aas
das
call
loope
or
mov
pop
xchg
inc
xor
(bad)
fadd
cmps
cmps
add
mov
jge
and
pop
imul
(bad)
call
cs
dec
lock
call
mov
cmp
scas
cld
fs
jge
loop
rol
or
sbb
loop
iret
adc
sub
cmp
les
sub
add
jnp
cmc
cmp
jg
(bad)
outs
adc
retf
dec
dec
ins
xor
sbb
inc
xchg
repnz
retf
sub
push
jno
mov
xchg
add
cmp
inc
int3
sbb
jnp
xor
push
movs
push
test
jl
inc
or
push
out
cmc
add
xchg
shl
shl
mov
dec
in
xor
(bad)
xchg
push
retf
jns
xchg
mov
aad
adc
xchg
jp
in
je
out
push
mov
or
out
stos
ror
int
jge
leave
xor
add
cwde
cmp
aad
loope
lods
mov
mov
xchg
movs
ja
cli
xchg
xchg
add
movzx
adc
fist
inc
sub
je
sti
xchg
and
stos
and
aas
dec
adc
mov
call
sbb
in
retf
sub
pusha
int3
out
pushf
cmp
xchg
loope
inc
(bad)
fwait
mov
cmp
pop
dec
lods
(bad)
dec
shl
fdivr
(bad)
mov
fwait
stc
inc
mov
retf
pop
jle
aas
cli
ss
cmp
fmul
push
jns
cmps
mov
push
in
(bad)
fwait
jne
mov
jmp
outs
mov
dec
ja
adc
sar
mov
js
push
pusha
push
mov
cmp
dec
fnsave
cwde
jp
loope
cmp
jnp
fsubr
stc
(bad)
sti
cli
gs
inc
jp
pop
addr16
clc
xchg
cmps
xor
cdq
xchg
adc
jnp
adc
inc
frstor
call
add
bound
imul
mov
xchg
fld
aaa
and
lods
(bad)
mov
stos
shl
mov
push
ja
xor
lods
or
xchg
sahf
adc
pop
cmps
div
jne
mov
jp
and
xor
je
adc
imul
mov
int
lods
fnstsw
cli
fsubr
jns
push
test
or
ins
(bad)
lods
call
ins
dec
mov
(bad)
dec
fcomp
into
xor
dec
and
aad
btr
or
jmp
xchg
sub
test
jge
scas
loop
xchg
mov
stos
fadd
sub
aam
mov
out
inc
lds
xchg
(bad)
std
iret
addr16
jo
and
mov
or
lock
popf
mov
pop
push
outs
pop
adc
jcxz
gs
(bad)
sub
mov
adc
xchg
test
inc
jns
cmp
inc
mov
daa
add
cmp
mov
clc
xchg
das
mov
adc
cli
aam
jmp
cmp
pop
and
dec
jo
pop
fisttp
imul
stos
mov
fidivr
inc
pop
pushf
inc
div
les
mov
outs
inc
pop
or
pop
xchg
popf
xor
loop
jge
repz
xchg
int
sbb
(bad)
adc
ins
fsub
icebp
repz
push
dec
icebp
xchg
out
push
movs
dec
ins
add
aaa
aad
cmp
repnz
enter
dec
in
dec
arpl
retf
add
mov
mov
mov
das
mov
ja
jmp
icebp
jns
jae
jge
test
test
cld
loope
int
fistp
xchg
mov
nop
scas
dec
pop
dec
popf
add
movs
jmp
imul
push
cmps
mov
out
ins
ja
mov
mov
mov
addr16
imul
or
repnz
mov
jbe
jecxz
xor
inc
mov
push
cmp
jnp
shl
in
xor
adc
outs
lods
jge
popa
push
fwait
rcr
shl
gs
add
shl
sub
xor
xchg
cmp
scas
daa
push
es
arpl
repz
leave
repz
xchg
dec
and
pop
vdivps
fcomp
jmp
push
cmps
push
(bad)
xchg
daa
mov
push
inc
mov
ss
mov
xchg
push
aad
scas
in
and
shr
fwait
daa
mov
mov
(bad)
test
js
imul
sub
push
xchg
cdq
pop
std
(bad)
xlat
mov
fcomp
cmps
ins
inc
cmp
sbb
dec
push
jno
test
aad
gs
jp
sbb
xor
mov
out
and
xchg
outs
or
in
and
fmul
inc
pop
loope
inc
ja
or
or
jle
inc
add
call
ret
mov
jnp
pushf
jb
scas
adc
das
in
inc
rcl
vmovaps
loopne
fiadd
inc
pop
pop
lods
inc
adc
aaa
mov
jmp
dec
xor
lea
xor
jns
xchg
dec
or
pushf
sub
test
fidiv
fistp
(bad)
xchg
std
push
scas
push
iret
dec
sbb
mov
enter
push
cmp
cmp
fimul
pop
aaa
xor
add
xor
cwde
mov
jp
mov
movs
fisttp
iret
pop
adc
fwait
xor
dec
popf
fwait
mov
loopne
cmps
neg
mov
xlat
mov
rcr
sar
push
fdiv
repnz
cmc
mov
jns
jecxz
hlt
mov
leave
mov
stos
test
inc
test
cmps
push
popa
xlat
xor
ja
int3
push
or
fnstcw
xchg
and
mov
jmp
loopne
inc
into
mov
das
nop
add
inc
cli
mov
jb
pop
mov
test
(bad)
(bad)
push
ja
cmps
outs
pop
and
sbb
mov
mov
test
push
popf
inc
dec
je
fwait
or
adc
pop
(bad)
push
mov
test
mov
jl
aaa
shl
add
aad
adc
push
sbb
retf
adc
pop
pop
sti
addr16
or
popf
sub
inc
and
cmps
imul
jbe
and
sub
adc
cmc
mov
test
in
mov
sbb
sub
cmp
imul
jne
popf
cmp
xor
pusha
jl
or
iret
out
jl
in
sar
mov
cli
push
stos
test
dec
jmp
rcr
mov
inc
push
inc
clc
mov
push
sbb
push
and
xchg
push
mov
(bad)
aas
repnz
jge
mov
add
push
arpl
dec
push
call
sahf
dec
push
adc
es
mov
mov
dec
push
int
adc
add
adc
mov
push
movs
repz
mov
jbe
mov
clc
or
push
fimul
repnz
cld
add
outs
inc
xchg
aad
fdivr
jne
and
sti
pop
(bad)
jno
push
sti
fcmovnbe
xchg
sub
popa
stos
mov
xor
and
scas
lods
sbb
out
pop
dec
cli
xor
out
push
mov
fisubr
cwde
cmps
jo
push
jle
xor
test
jb
and
es
jg
out
cwde
push
fild
xchg
or
sbb
lea
rol
add
leave
push
mov
sar
or
xchg
retf
fidivr
inc
sub
mov
leave
sub
gs
and
or
loop
fadd
inc
pop
push
mov
cmps
xchg
jg
jge
pop
pusha
hlt
dec
mov
adc
jno
hlt
push
or
lea
clc
(bad)
sub
cld
(bad)
rcl
mov
xlat
loop
cwde
mov
int3
ins
and
mov
xchg
aas
mov
mov
pop
rcr
test
jp
movs
pop
xchg
test
stc
mov
inc
xor
sbb
test
jmp
jecxz
mov
imul
loopne
sbb
fs
mov
and
ins
or
cli
inc
popa
jnp
fwait
mov
jo
xor
dec
out
jnp
cmp
out
xor
jns
pop
mov
lds
push
add
lds
cmp
fs
mov
mov
or
icebp
call
adc
loope
xchg
sar
dec
ins
or
jge
call
sbb
mov
pushf
inc
pop
gs
pop
enter
(bad)
mov
popf
push
or
lahf
clc
cmp
add
stc
lods
push
jp
mov
in
mov
pop
push
(bad)
pusha
xchg
pop
add
mov
pop
into
in
cmp
mov
mov
xor
fcmovnbe
adc
xor
ficomp
mov
fsubr
cmp
or
cmc
jp
gs
test
mov
or
loop
sub
ins
xor
sbb
cmp
cmp
lods
mov
mov
jle
ds
xchg
call
mov
int
test
sbb
sub
xchg
sub
add
scas
ja
loopne
aam
sub
cdq
fstp
aad
or
mov
inc
or
xchg
call
mov
pop
pusha
call
cmp
loop
adc
arpl
mov
mov
adc
repz
loopne
pop
lods
add
je
in
lods
fucom
stc
jge
shr
div
pusha
inc
ds
dec
bts
xor
sar
adc
stos
push
jne
pop
mov
pop
mov
into
ds
movs
ret
rol
aaa
out
lods
ja
aad
xor
dec
push
rcl
push
pop
ds
pusha
sbb
outs
sbb
aad
call
mov
retf
(bad)
call
lds
pop
xchg
mov
xor
iret
daa
or
xchg
sbb
or
mov
leave
mov
data16
leave
sbb
add
push
arpl
sub
add
imul
push
or
xchg
adc
xor
fnstsw
repnz
and
cmps
bound
mov
fst
inc
sbb
aad
sbb
movups
out
xor
iret
sub
add
xchg
or
retf
sub
add
out
push
push
imul
sub
and
imul
and
hlt
or
test
sbb
fmul
or
popa
sub
mov
xlat
ja
xor
dec
lds
mov
adc
mov
jne
push
ret
inc
mov
retf
sti
rcr
or
push
or
push
mov
pushf
mov
push
jbe
mov
mov
(bad)
adc
iret
(bad)
sub
mov
dec
out
int
arpl
gs
in
mov
sub
js
outs
lahf
sbb
cmp
mov
sbb
gs
mov
xadd
dec
sub
shl
push
jno
mov
ret
nop
in
paddusb
(bad)
sbb
mul
ror
mov
jb
test
mov
jmp
ds
call
or
shr
cmp
jo
mov
rol
jle
add
push
jle
icebp
or
pop
cmp
xchg
pop
dec
sbb
iret
scas
dec
push
test
ins
jle
ret
sbb
dec
xchg
mov
pop
das
sar
jmp
ins
in
or
push
adc
cmp
es
fimul
cmps
movs
xchg
inc
(bad)
stos
(bad)
shl
push
cdq
fcomp
iret
push
push
jmp
imul
loopne
hlt
icebp
shl
add
(bad)
shl
inc
and
add
cmp
shr
cmps
xor
jnp
js
cdq
jmp
push
sbb
enter
and
popf
sbb
cdq
mov
adc
mov
imul
add
(bad)
sub
push
pop
mov
fcomp
mov
add
dec
push
div
mov
jne
pusha
or
cmp
outs
pop
mov
or
cmp
std
and
xor
mov
or
adc
jns
pop
push
cmps
aaa
inc
jne
adc
fcmove
add
xchg
loope
mov
lods
xchg
popa
mov
mov
cmp
les
pop
jmp
rcr
pop
fs
cmp
push
scas
mov
inc
pop
popa
clc
and
lods
cmp
enter
jbe
mov
pushf
mov
xor
sub
push
ret
add
aad
mov
mov
xor
fidiv
push
stos
retf
sbb
aaa
mov
cmps
imul
sub
in
xchg
cli
out
cs
mov
kmovb
push
add
ins
inc
and
inc
jge
cwde
rcl
mov
clc
mov
and
mov
and
stc
push
inc
cwde
in
ror
xor
ins
fnstenv
std
hlt
and
jo
mov
push
mov
cdq
mov
lds
lahf
inc
push
in
sub
arpl
movs
xchg
jle
loope
(bad)
jmp
mov
popf
(bad)
push
pop
adc
aas
mov
mov
dec
mov
mov
dec
mov
push
icebp
popf
dec
into
out
aam
push
lock
in
idiv
sbb
add
call
test
aas
jmp
test
pop
jae
fsub
out
push
retf
or
clc
cmc
and
inc
rcr
add
icebp
or
sub
arpl
(bad)
push
pop
pop
pusha
popa
xchg
xor
test
xor
xchg
xchg
dec
cld
adc
mov
pop
inc
in
push
and
dec
ret
cmp
imul
mov
push
rcr
push
pop
div
jecxz
out
jle
stc
movs
sbb
or
cmp
add
outs
jae
jmp
xor
mov
cwde
iret
sbb
sub
fcomp
mov
cmp
push
std
sub
cmp
cld
adc
pop
les
inc
dec
sbb
xchg
outs
xchg
call
out
(bad)
jnp
mov
rcr
sub
out
or
retf
pushf
fld
or
push
pop
loopne
adc
jle
add
jge
xor
xchg
retf
mov
scas
ror
mov
xchg
retf
push
or
(bad)
lds
int
dec
addr16
jne
jg
mov
or
pop
jnp
rcr
sub
adc
mov
popa
pop
xor
dec
add
xor
outs
push
jg
xor
ja
arpl
and
(bad)
shl
or
push
adc
icebp
out
push
add
imul
cwde
cmp
cmps
xchg
ins
pop
pop
hlt
add
stos
add
inc
mov
lahf
mov
xor
ficomp
outs
loop
in
popf
repz
pushf
sar
sbb
mov
mov
ins
ret
mov
cmp
fsubr
fisubr
sub
cdq
sub
scas
outs
push
pop
(bad)
mov
mov
xor
xchg
or
add
ins
jle
lahf
cmp
fsincos
mov
xchg
and
pusha
lahf
cmp
mov
std
sbb
lahf
mov
push
movs
add
shl
pop
lods
aaa
gs
inc
stc
movs
fmul
popa
dec
repz
or
jecxz
dec
mov
popf
jno
jnp
hlt
cmp
add
(bad)
mov
fnstsw
cmp
or
push
repz
sar
mov
push
cmp
fisubr
mov
loope
xchg
xor
jmp
rcl
fadd
sbb
mov
xchg
dec
mov
aaa
jmp
jno
out
cli
push
push
push
sub
ins
call
in
sbb
lock
rcr
jnp
cmp
inc
cmps
in
sahf
call
xchg
nop
or
fadd
fadd
adc
jmp
jmp
fisub
adc
jbe
jl
inc
xchg
mov
mov
js
mov
ins
stos
ss
mov
add
mov
sub
gs
jecxz
dec
pop
dec
jb
dec
dec
std
xor
in
repnz
in
lahf
test
das
or
mov
mov
ins
dec
fs
sbb
adc
dec
sbb
push
ins
test
adc
nop
adc
jge
dec
mov
xchg
leave
into
popw
jmp
sub
cmp
and
sbb
add
mov
call
ret
test
or
(bad)
imul
add
ss
add
mov
jae
bound
inc
jo
out
adc
mov
mov
outs
loop
popa
in
xchg
mov
sub
mov
icebp
push
rcr
sti
fdiv
or
scas
dec
stc
mov
push
fs
xor
ss
cmc
mov
add
and
pop
pop
jo
cmp
cld
fs
or
in
in
lahf
rol
push
cs
inc
mov
mov
add
arpl
and
jb
add
push
adc
cmp
mov
add
lods
sbb
ins
mov
and
add
jne
dec
mov
push
stos
xchg
pop
fwait
test
movs
push
lods
add
jmp
mov
outs
mov
xchg
pop
test
popf
aaa
cmp
or
and
mov
pop
mov
test
adc
sub
pop
dec
xor
add
or
mov
xor
inc
sbb
cmp
mov
pushf
imul
inc
rcr
pop
in
cmp
jne
mov
cmp
adc
stos
fsub
inc
push
icebp
pop
call
jg
sti
inc
push
imul
clc
mov
push
xlat
push
int3
int
fistp
into
imul
mov
add
or
into
xlat
add
cli
adc
maxps
inc
pop
push
mov
in
pusha
cwde
mov
pop
and
add
push
xchg
cmp
aam
dec
cmps
cwde
mov
jnp
mov
imul
sbb
or
and
test
mov
xchg
mov
sti
mov
in
cdq
fistp
pop
sar
mov
push
call
add
gs
cmp
mov
and
push
push
xlat
daa
sbb
jecxz
jbe
wbinvd
fimul
(bad)
adc
clc
cmp
add
test
and
or
dec
dec
sub
shl
push
jno
push
out
ficomp
stos
cmps
inc
xchg
int
je
mov
push
add
in
or
inc
and
sbb
sbb
rcl
add
in
sbb
(bad)
iret
and
inc
bound
test
lods
xchg
ja
pop
jle
lods
stos
add
lahf
xchg
sbb
retf
imul
cli
xchg
xchg
mov
mov
sbb
lods
out
xlat
ficomp
pop
inc
and
out
rcr
(bad)
inc
je
movs
repz
fimul
shl
in
add
or
mov
push
jmp
jp
shr
sub
mov
cmp
ret
sbb
sub
push
lock
imul
xchg
int
jl
jne
call
sub
mov
jecxz
mov
mov
jg
adc
movzx
pop
mov
sub
mov
xor
shr
xchg
xor
loopne
mov
es
push
popf
call
out
rcr
add
lock
js
loop
dec
mov
lea
movs
into
pop
fcmovnu
and
pop
adc
test
xchg
xchg
jmp
mov
cmp
jae
dec
inc
mov
or
call
fmul
call
clc
mov
push
cmp
mov
cs
clc
out
stos
or
pop
test
ret
sar
xlat
stos
repz
mov
xor
iret
dec
(bad)
push
dec
mov
test
push
dec
cli
fnstsw
adc
lahf
dec
push
daa
lods
lock
mov
hlt
fisub
xor
mov
sub
add
dec
mov
inc
mov
adc
ret
xchg
arpl
xchg
fwait
popf
xor
enter
fstp
lds
adc
jp
es
mov
lahf
xlat
retf
dec
loope
gs
sbb
ja
sub
sbb
into
sbb
scas
dec
and
sbb
jg
sbb
mov
push
add
das
lods
sbb
imul
jmp
sub
es
rcl
test
fxch
mov
mov
scas
and
call
aaa
jbe
sub
inc
outs
fnstsw
(bad)
sbb
ds
out
cmps
cmp
mov
dec
mov
jno
ret
addr16
in
push
mov
and
xchg
sub
shl
cli
into
mov
xor
or
fisub
or
mov
mov
jg
or
and
not
lods
push
dec
adc
jg
aad
and
(bad)
sbb
ror
mov
dec
push
inc
mov
aas
pop
xor
cli
cmc
dec
outs
mov
jo
mov
ins
leave
mov
test
inc
mov
adc
sub
xchg
test
outs
retf
ss
jg
add
ja
imul
jmp
push
lahf
or
popa
out
adc
mov
sub
shl
in
sub
pusha
adc
pop
xchg
nop
or
adc
jns
xchg
mov
inc
and
das
loopne
repnz
in
aam
in
and
je
neg
mov
leave
aaa
xchg
xchg
pop
cld
imul
dec
fadd
dec
out
jmp
xor
sub
adc
xor
mov
adc
or
dec
out
cmp
bound
pop
xchg
(bad)
test
sub
scas
fcomip
pusha
ror
in
(bad)
scas
das
xlat
pop
mov
mov
dec
stos
pop
leave
and
loop
or
xlat
mov
test
scas
or
mov
(bad)
lea
es
xchg
pop
pushf
cmp
out
bound
call
aas
xor
sahf
cmp
adc
jge
cdq
dec
retf
jo
and
sbb
sub
shr
jae
shl
int3
pusha
das
lahf
out
xlat
popa
inc
outs
sub
adc
int
mov
aad
ror
(bad)
inc
or
pop
sub
ins
lds
jecxz
sahf
(bad)
sub
push
and
fwait
in
jb
retf
xchg
movd
imul
lea
pop
pop
lea
jl
dec
shr
sub
push
pushf
(bad)
mov
outs
xchg
inc
out
in
dec
sbb
call
sti
(bad)
jne
inc
add
add
and
jbe
icebp
imul
jb
jb
mov
(bad)
fisubr
outs
and
jo
push
in
fyl2xp1
je
push
lds
mov
jbe
movs
add
xchg
adc
test
xchg
cmp
in
aaa
(bad)
sub
dec
sbb
inc
add
push
jns
sub
inc
sti
push
pop
jmp
ror
or
in
dec
arpl
sar
int3
dec
loope
ja
pop
and
(bad)
out
jae
xlat
outs
fsubr
sbb
jns
xchg
imul
gs
into
push
sbb
les
add
pop
not
jb
clc
js
popa
movs
add
shl
ror
ret
push
pop
sbb
xchg
sub
cmps
aaa
js
mov
push
xchg
jb
test
in
aad
cld
mov
jl
mov
ret
es
mov
or
(bad)
outs
add
mov
lahf
add
dec
inc
mov
jb
sub
pusha
repnz
push
movs
(bad)
xor
mov
xchg
sub
mov
mov
mov
sbb
out
pop
sbb
or
arpl
dec
mov
inc
ins
scas
pop
xor
add
adc
xchg
add
jp
and
pop
pop
addr16
in
sti
cmp
sub
push
and
or
into
pop
and
(bad)
push
ret
jno
push
std
xlat
and
iret
addps
sub
cmp
lahf
mov
les
mov
dec
shl
test
leave
sub
cmp
inc
repz
sbb
mov
adc
pop
adc
jne
ror
sbb
inc
sbb
out
cld
fs
ins
hlt
push
jae
cmps
sub
inc
fwait
dec
test
xor
cmps
das
rol
pop
rcl
lahf
mov
dec
sub
syscall
not
daa
adc
xor
aaa
cmp
retf
and
push
inc
xchg
xchg
dec
clc
jecxz
pop
in
push
test
stos
mov
adc
enter
mov
sub
test
add
or
pop
jg
aaa
lahf
dec
es
adc
dec
jns
mov
jno
imul
mov
aas
sar
loopne
adc
mov
mov
push
add
sahf
cmp
repnz
test
stos
mov
(bad)
fsubr
cmp
add
adc
sub
retf
test
lds
cmp
cmp
loop
mov
adc
int3
fs
scas
test
sbb
fmul
add
fimul
inc
and
dec
test
pop
mov
mov
in
push
push
sbb
outs
mov
pop
(bad)
jae
out
ds
aas
adc
mov
push
or
xchg
sub
xlat
cmp
clc
xor
loopne
add
mov
rcl
cmps
dec
js
mov
mov
int3
cmp
cmp
retf
push
push
push
daa
stos
add
push
cld
movs
int
mov
aad
mov
xor
and
xlat
cmp
adc
jl
push
cmp
daa
pusha
sub
out
lea
inc
push
and
sub
sbb
loopne
dec
mov
out
sbb
imul
test
pop
rcr
jp
cld
fs
(bad)
mov
icebp
sub
adc
lods
push
movs
mov
loope
nop
enter
int
adc
sahf
jecxz
test
aam
fbstp
cmc
and
jne
imul
mov
jmp
sbb
push
lahf
rcl
xor
or
dec
out
int
lods
jl
mov
lahf
add
push
ds
test
and
push
ror
ret
xchg
repnz
xor
jbe
fisubr
ds
test
cmp
mov
fimul
mov
cli
jecxz
loope
(bad)
sub
xchg
xor
dec
push
stos
js
cmc
jnp
inc
dec
cld
mov
inc
add
aam
out
jp
push
mov
sub
mov
aaa
jns
repz
xor
shr
mov
test
test
imul
cmp
cdq
add
inc
xor
add
xor
loope
adc
imul
sub
pop
pop
movs
div
jg
mov
sahf
cmp
cli
or
jmp
test
xchg
test
jge
lods
mov
mov
bound
jmp
sahf
xchg
ja
push
xchg
(bad)
fsub
cs
sbb
retf
rcl
mov
imul
mov
lahf
and
push
push
into
repz
and
les
adc
mov
sub
mov
rol
fist
mov
adc
jno
dec
jne
dec
(bad)
mov
(bad)
mov
xor
sbb
jnp
xlat
cmc
pop
mul
shl
mov
dec
out
mov
dec
inc
cwde
jb
jp
jns
cmps
push
or
push
sbb
gs
bound
pop
enter
pop
mov
sar
cmp
dec
pushf
mov
popa
xchg
lds
push
scas
(bad)
jle
movs
mov
fnstcw
(bad)
jbe
dec
into
and
rcr
in
push
inc
cmp
ins
(bad)
stc
add
add
fisub
jns
and
dec
sti
jp
xchg
cmp
pop
mov
jle
jle
push
(bad)
and
in
lds
nop
fst
mov
sub
mov
in
and
mov
inc
sub
out
sub
mov
(bad)
xchg
in
lock
sbb
or
xor
clc
xchg
mov
(bad)
mov
outs
imul
push
and
cmps
sbb
xor
mov
bnd
loopne
ins
sub
adc
add
push
sbb
iret
fmul
xchg
cwde
into
pop
popa
out
ins
inc
pop
mov
cmps
mov
aas
fcom
lock
leave
movs
sbb
pop
push
push
call
fsubr
test
mov
push
mov
mov
dec
clc
pop
jne
push
je
dec
xor
mov
je
ret
push
and
mov
pop
popf
push
aam
xchg
(bad)
scas
push
cmc
adc
ins
xchg
push
movs
aad
inc
sahf
sbb
(bad)
cdq
je
inc
mov
lds
jnp
jne
mov
mov
cmc
in
cmp
(bad)
mov
inc
jmp
xchg
sbb
std
cmp
int3
addr16
mov
mov
add
and
int
lahf
(bad)
div
sbb
es
push
(bad)
mov
or
inc
aaa
sahf
fstp
shl
lahf
xor
stos
dec
fdivp
xchg
ret
add
rcr
dec
rol
xchg
add
mov
sahf
cmp
add
xchg
icebp
out
shr
sbb
jns
pop
sti
cmp
inc
jnp
scas
jns
jae
scas
or
adc
cmp
pop
mov
sbb
xchg
es
push
xchg
call
leave
xchg
sahf
dec
and
push
repnz
cmps
sbb
xor
rcl
push
inc
sar
out
sbb
add
stos
adc
and
cmp
test
pop
push
in
cmps
sub
scas
rol
addr16
fcomp
scas
dec
leave
mov
add
int
pop
jo
mov
pop
std
mul
adc
jno
xchg
and
stos
sub
mov
sbb
sub
and
mov
popa
leave
inc
push
test
jns
jnp
das
adc
mov
rol
aad
enter
pop
ret
pop
icebp
dec
cmp
sti
rcl
jo
pop
dec
push
and
in
jbe
lock
inc
pop
aam
jg
mov
das
or
add
sbb
and
not
xchg
in
mov
fbstp
inc
mov
ror
mov
sub
pop
and
sub
pop
(bad)
enter
cmc
gs
adc
retf
jge
sbb
push
stc
and
stos
and
and
mov
mov
push
mov
sub
mov
dec
mul
and
adc
mov
lods
jae
es
push
(bad)
mov
mov
sbb
mov
mov
int3
enter
shr
jno
es
pop
cli
inc
sbb
or
movs
in
in
in
sbb
mov
in
ins
mov
movs
lods
dec
leave
inc
xchg
mov
iret
push
stc
mov
push
in
dec
cli
les
mov
sbb
add
inc
or
gs
mov
out
retf
adc
jmp
mov
ja
xchg
mov
push
or
ins
ret
jae
cld
(bad)
sbb
imul
inc
mov
(bad)
fsub
outs
shl
into
enter
pop
ja
and
push
mov
not
fstp
lock
icebp
mov
jmp
test
pop
sbb
pop
jmp
jae
out
pusha
push
mov
push
hlt
cld
outs
add
es
imul
and
imul
pushf
lods
in
cmp
mov
push
push
pushf
sbb
push
cmc
pop
xchg
sbb
jns
or
scas
or
stc
mov
dec
and
ret
inc
ret
xchg
in
xchg
mov
mov
xchg
cld
and
push
xor
(bad)
outs
xor
jecxz
pushf
stc
xchg
call
pop
dec
mov
clc
xor
cmp
popa
(bad)
adc
retf
inc
out
cmp
cs
inc
outs
adc
test
sub
enter
daa
mov
dec
xor
add
mul
sub
imul
sub
into
lods
lods
outs
pop
ss
lods
into
hlt
aad
scas
lahf
push
loopne
sbb
sub
jmp
enter
fstp
jnp
out
push
(bad)
adc
inc
retf
lods
ins
push
sbb
mov
outs
add
push
cmp
retf
int
xor
nop
fwait
idiv
cwde
scas
xchg
mov
sub
ds
test
or
xchg
out
mov
inc
push
xlat
add
and
jl
jmp
or
mov
repnz
loopne
into
xor
push
das
leave
je
or
inc
cmp
call
out
push
test
fwait
jae
mov
lahf
call
fsubr
int3
adc
bound
push
daa
shl
cli
mov
cwde
enter
inc
add
into
aad
cmp
mov
mov
pop
dec
dec
pushf
sub
fnstcw
mov
xchg
sbb
in
cmps
ficom
call
inc
sahf
cmc
jecxz
dec
jp
les
xchg
outs
dec
mov
push
jo
cdq
jl
jge
out
sub
call
xor
outs
cwde
xchg
xor
mov
adc
test
call
imul
cmp
ja
icebp
bound
mov
jns
push
pop
mov
mov
(bad)
jo
xchg
jle
xchg
push
push
adc
sahf
ds
fcmovb
xchg
xchg
iret
iret
cmp
fidiv
fs
adc
(bad)
jmp
push
jecxz
scas
pop
cwde
cli
icebp
daa
daa
iret
pushf
adc
jb
xchg
add
adc
mov
push
inc
ror
or
or
test
sbb
sub
div
sbb
jmp
sub
mov
daa
dec
movs
xchg
pop
pop
mov
adc
adc
jmp
mov
pusha
sub
or
shl
add
in
pop
into
cmp
(bad)
sti
das
outs
ret
lods
mov
fsubrp
call
loop
cwde
inc
xor
push
jb
dec
daa
mov
inc
sahf
pop
mov
mov
jno
pop
int
xchg
push
sahf
std
or
pusha
hlt
pop
xor
nop
push
adc
jmp
push
adc
jge
mov
loop
pop
cmps
inc
div
iret
jns
popf
add
daa
retf
xor
ins
mov
je
aad
and
into
sub
mov
(bad)
xlat
into
fs
push
fs
mov
push
mov
mov
js
cmp
gs
adc
mov
pop
stos
gs
mov
loope
fsqrt
push
xor
sbb
std
sbb
and
mov
jb
push
jno
cmps
mov
jnp
aaa
call
cmp
inc
mov
fcomp
das
(bad)
call
ja
(bad)
jns
es
jmp
aad
and
inc
repnz
push
add
xchg
lea
aaa
retf
rcr
cmp
outs
shl
adc
sbb
ret
cmp
out
jmp
and
push
xchg
loopne
push
xor
rol
mov
fwait
xchg
aad
or
add
add
adc
mov
and
inc
test
popa
push
push
hlt
test
and
in
outs
cld
add
sbb
jb
mov
pusha
add
dec
fsubr
and
sbb
jg
(bad)
sub
icebp
out
test
mov
sti
cmp
fwait
push
inc
cdq
hlt
cmp
hlt
shl
(bad)
dec
dec
mov
ja
frstor
adc
jg
sub
push
push
dec
mov
(bad)
not
lods
sub
pop
push
out
sysenter
xor
sbb
loop
or
xlat
xchg
mov
rol
hlt
inc
push
int
dec
cmps
push
mov
and
jb
jmp
out
es
adc
es
imul
xchg
adc
test
inc
cmps
dec
push
mov
mov
retf
jmp
into
mov
pop
vmovaps
inc
iret
dec
jmp
les
cmp
movntps
outs
dec
mov
outs
repz
ror
mov
shl
sub
out
or
out
les
sbb
(bad)
xor
mov
push
jno
mov
cmps
adc
adc
adc
adc
popa
push
clc
add
dec
push
stos
cmp
xor
fild
mov
adc
frstor
and
aam
in
xor
(bad)
aam
inc
adc
mov
or
ins
adc
imul
push
cmc
mov
and
or
cmc
rol
dec
pusha
adc
mov
fild
sbb
add
or
mov
cmp
mov
mov
scas
retf
xor
add
adc
outs
aaa
push
inc
sbb
xchg
ret
hlt
retf
add
daa
xor
push
sbb
jne
test
cwde
adc
mov
mov
test
sub
pop
mov
int3
adc
and
into
shl
(bad)
fcmovnb
popa
or
inc
int
mov
pop
les
data16
setp
xchg
cwde
and
push
(bad)
cmp
xchg
sub
mov
sbb
cld
add
xor
add
pop
aaa
cmp
loope
repz
das
add
shl
in
push
xchg
xchg
inc
dec
call
adc
adc
call
mov
adc
jle
jle
and
xor
inc
shr
mov
or
sbb
mov
cmps
jbe
xor
jae
pop
xchg
jb
mov
cmp
lock
jnp
push
inc
mov
mov
popa
test
and
(bad)
dec
jmp
fcmovnb
sub
ins
fcom
stos
stos
popf
frstorw
imul
out
fcmovnb
dec
push
xchg
sbb
loop
out
call
sub
and
das
xor
or
mov
loopne
and
push
mov
xchg
pop
mov
push
shl
rcr
mov
loop
mov
jnp
jmp
push
lds
add
add
jg
fiadd
inc
in
jo
add
inc
psllw
(bad)
and
xchg
iret
neg
(bad)
ss
cmp
push
mov
mov
xor
dec
ficomp
pop
or
or
lods
lock
lahf
pop
and
stos
aas
hlt
jae
adc
dec
xchg
jp
jnp
int3
push
add
mov
test
shl
jmp
ins
or
bnd
mov
mov
repz
lds
or
loop
push
fmul
aad
cmp
and
mov
xor
(bad)
hlt
test
push
outs
push
mov
push
leave
xchg
out
cmp
push
js
addr16
int3
adc
push
(bad)
pop
aam
xchg
mov
imul
xchg
inc
jo
cmp
push
test
ins
adc
popa
outs
add
pop
and
pop
jb
call
mov
push
out
pop
fistp
cmp
adc
pop
test
nop
dec
shr
arpl
int
jg
sub
cmp
(bad)
mov
mov
xor
or
ror
ins
jb
inc
mov
pop
xor
lods
inc
jnp
adc
jae
cmps
add
mov
loopne
out
test
shr
call
sar
inc
aas
or
and
cdq
jp
mov
adc
aaa
rcl
xchg
out
xchg
cld
iret
dec
inc
pop
mov
push
cmp
lea
jg
in
fnsave
jle
fstp
pushf
mov
jle
pop
xchg
stos
or
stos
mov
push
test
les
or
mov
shr
movs
in
js
popf
outs
xchg
add
jo
pop
jge
icebp
(bad)
jp
ss
push
mov
cmc
xlat
(bad)
mov
in
f2xm1
jne
ret
ins
cmp
sar
fldlg2
fdiv
lods
cmp
push
imul
shl
push
(bad)
outs
rol
sub
scas
mov
mov
inc
lds
cmps
add
xchg
enter
mov
cmp
add
daa
mov
popa
push
jmp
adc
cmp
add
or
lahf
pop
retf
movs
pop
out
jle
and
cli
dec
pop
add
pop
(bad)
mov
mov
cmc
or
ficom
shl
fimul
sbb
xchg
add
mov
out
adc
sub
test
rcr
jns
sbb
xor
fs
push
xchg
xlat
xchg
shl
stos
cli
ja
sub
sub
inc
dec
(bad)
lock
xchg
pushf
xchg
mov
and
jg
mov
jae
adc
push
clc
pop
loope
div
repz
and
test
sub
push
gs
xchg
(bad)
sub
dec
push
add
fldcw
int3
add
push
ss
js
out
xchg
cmp
js
int
cmp
in
push
cmp
movs
xchg
fucom
imul
cmp
fisubr
jns
or
sbb
or
xchg
jns
xchg
fld
or
jns
pop
xlat
jns
in
and
sbb
add
or
call
out
push
xchg
rcr
daa
xor
xor
jle
push
out
mov
ss
jg
aad
add
sub
adc
sbb
mov
pop
xchg
data16
add
fs
pop
lea
pop
add
mov
popa
jmp
add
ins
loop
dec
popf
leave
jb
daa
fdivr
mov
pop
mov
fwait
jecxz
adc
mov
inc
int3
or
jecxz
cs
pop
sub
or
sub
and
dec
mov
cmp
ret
lahf
in
sbb
xchg
fldenv
jo
push
scas
sub
pushf
sbb
push
repnz
pop
push
mov
or
gs
ss
(bad)
xchg
fld
sub
push
sbb
imul
(bad)
ins
dec
add
ja
test
neg
xor
std
xchg
out
outs
jmp
jle
mov
xor
push
in
gs
lea
push
jmp
sub
inc
or
data16
add
xchg
jb
sbb
and
call
ja
mov
(bad)
cwde
pop
mov
lds
push
adc
or
or
xor
xchg
into
ficomp
dec
popa
enter
sbb
and
stc
(bad)
adc
fwait
mov
lahf
loop
repz
scas
loope
mov
in
rcl
mov
sub
test
popf
enter
fistp
mov
lock
repnz
dec
push
sbb
xor
in
aas
cs
adc
int3
and
dec
push
jo
fadd
stos
call
push
dec
add
call
sbb
adc
dec
xor
fdiv
sti
in
pushf
(bad)
test
push
inc
ins
or
out
neg
add
test
inc
jno
les
jle
rol
fidiv
ret
xchg
xor
jmp
and
pop
(bad)
pcmpgtb
test
(bad)
add
into
mov
mov
push
(bad)
adc
fstp
test
mov
mov
xchg
mov
aas
push
lds
mov
mov
addr16
and
stc
(bad)
push
push
sahf
lea
stc
out
inc
cmps
stc
pop
inc
out
(bad)
xor
pusha
icebp
xchg
mov
jle
nop
sub
rol
or
rcl
cmc
dec
stc
(bad)
sub
jmp
adc
xor
shl
test
(bad)
dec
jge
call
frstor
and
or
sbb
inc
out
xchg
mov
pop
dec
out
popf
xchg
jp
loopne
mul
icebp
mov
popa
jb
movs
scas
(bad)
loopne
mov
sbb
dec
pop
inc
test
arpl
sbb
mov
mov
test
xchg
out
jne
mov
lock
adc
sbb
popa
jl
add
xlat
sar
mov
push
mov
sbb
xchg
(bad)
stos
sub
frstor
aas
out
jl
dec
add
push
test
or
xor
out
stos
jle
push
fstp
inc
cmps
stc
sbb
xchg
jns
shr
cmc
das
aad
sbb
pop
pop
dec
psubusb
mov
out
mov
mov
jbe
dec
push
(bad)
ja
stc
ret
adc
out
sbb
clc
ins
loopne
mov
bound
mov
cmp
pop
xor
jbe
arpl
movs
adc
sub
dec
jbe
cmp
add
sub
inc
jno
int3
jno
push
sub
push
jmp
(bad)
into
popa
(bad)
out
bound
mov
jp
stc
or
pop
(bad)
aas
mov
or
add
push
pushf
xchg
mov
inc
xor
rol
js
mov
fdiv
xchg
and
mov
fmul
cwde
push
imul
mov
sub
(bad)
inc
sbb
cmc
jbe
pusha
cwde
xchg
enter
loopne
push
pop
inc
int3
cmp
gs
aam
hlt
dec
xchg
(bad)
leave
in
gs
aaa
mov
jge
aad
and
add
jl
pop
fmul
sbb
nop
test
movs
jmp
inc
lahf
and
mov
and
pop
test
jb
adc
xchg
push
shr
cmc
push
xchg
xor
bound
xchg
sahf
lods
cmps
mov
or
pop
call
std
mov
add
cdq
shl
dec
and
out
dec
aam
lods
mov
dec
test
(bad)
je
cmp
inc
cmps
cmp
push
mov
in
outs
inc
outs
pop
dec
mov
pop
cmps
mov
pop
stos
mov
movs
aas
jmp
adc
xor
cli
jl
dec
add
idiv
(bad)
and
pop
xor
lahf
or
push
hlt
(bad)
je
jle
inc
add
push
dec
jns
clc
mov
jmp
xchg
out
rcr
shl
out
pushf
into
(bad)
int
mov
sbb
pop
and
(bad)
call
lahf
xchg
jno
cmp
and
push
mov
aas
cmp
xor
adc
cmc
jne
pop
fild
arpl
sub
cmp
jmp
adc
mov
adc
dec
pop
mov
repnz
clc
mov
or
or
cmp
jmp
mov
and
fistp
idiv
enter
test
int
fimul
fstp
push
mov
lahf
dec
mov
fnstsw
pop
xor
gs
fild
mov
mov
repz
lods
jne
das
push
les
fild
aaa
mov
ret
dec
fcom
xor
cmc
jmp
push
sbb
sbb
rcr
js
(bad)
jge
das
inc
mov
movs
das
loopne
ret
(bad)
push
cmp
jmp
or
outs
or
jp
cmp
pushf
pop
stc
mov
lds
dec
in
xchg
mov
and
mov
cwde
mov
inc
sub
sbb
movs
rcr
cmps
or
aam
repnz
mov
push
jmp
fdivr
add
imul
sub
iret
test
xor
retf
das
bsr
rol
jl
mov
(bad)
mov
cli
inc
push
mov
out
inc
fwait
xor
loop
pop
(bad)
jae
test
or
or
retf
dec
shl
sbb
shl
jl
mov
jmp
jmp
jne
mov
gs
and
ja
sub
push
jg
stos
add
xlat
pusha
jle
call
lds
mov
mov
test
pop
xchg
inc
les
xchg
call
push
mov
xchg
add
and
jmp
neg
retf
(bad)
or
out
pop
(bad)
xchg
cld
repnz
cld
inc
inc
movs
stos
aas
adc
icebp
shl
sbb
mov
cmp
dec
ficomp
mov
add
mov
push
mov
adc
push
add
cdq
xchg
iret
add
inc
cmp
adc
push
retf
sbb
js
cmp
pop
xor
sub
int3
jo
shr
push
adc
data16
das
xchg
lods
pop
retf
retf
mov
jp
sbb
fs
call
stos
bound
mov
mov
or
(bad)
enter
pop
cmp
push
xchg
xchg
outs
adc
ret
aam
mov
jae
inc
dec
push
popf
xchg
inc
pop
mov
inc
xchg
mov
sub
push
cmp
in
bound
(bad)
iret
pushf
jno
mov
outs
jo
push
cmp
add
gs
gs
ss
je
push
fisttp
cmp
lds
jle
enter
aam
fild
sbb
ja
xchg
fs
xlat
cmp
add
push
lahf
cdq
pop
test
fcomp
adc
push
push
nop
mov
jns
das
imul
xlat
push
mov
mov
cwde
jg
dec
in
mov
inc
ffree
out
int
call
icebp
ja
sbb
add
bound
xchg
inc
xchg
push
dec
jp
in
xchg
xchg
mov
(bad)
shl
mov
jl
or
scas
mov
lds
dec
and
inc
call
pop
xchg
test
call
int3
push
into
repz
test
cmp
test
movs
lahf
nop
or
dec
repnz
cmc
imul
push
enter
mov
pushf
movs
outs
(bad)
cmp
dec
sub
out
cdq
push
push
mov
xor
and
lds
mov
mov
jno
test
push
sbb
hlt
fadd
pop
pop
pop
push
fwait
sbb
lods
xchg
mov
and
or
jb
int
imul
ficom
or
jmp
jle
adc
xchg
xlat
inc
mov
inc
ins
and
cmp
pop
jp
je
cmp
or
cmp
xor
mov
pop
btr
ins
cld
fisub
(bad)
outs
inc
cmp
jp
jnp
scas
inc
adc
add
cdq
jecxz
or
hlt
stos
sbb
stos
aam
jg
jae
call
xor
push
push
lea
add
cmp
jmp
cmp
fisubr
call
test
icebp
jmp
fild
test
dec
push
adc
xchg
dec
call
push
push
add
mov
mov
ins
push
jae
push
pop
and
fcomp
loopne
retf
dec
xchg
fwait
push
(bad)
mov
in
shl
push
push
push
jg
jno
fs
in
cdq
dec
cmps
ret
outs
sub
imul
jno
xchg
enter
mov
retf
popf
std
test
icebp
mov
adc
daa
shr
lods
in
(bad)
xchg
inc
mov
cdq
mov
mov
cmp
push
sbb
and
int3
in
clc
fsub
adc
adc
sub
pop
mov
shl
xor
mov
mov
and
ret
push
rcr
push
scas
lock
mov
sbb
jecxz
jmp
repnz
pop
fsubr
mov
xchg
xchg
jb
xchg
add
cmp
jnp
mov
dec
add
xchg
sub
mov
cmp
xchg
aam
mov
add
push
fsubr
or
pop
dec
mov
jge
repz
mov
sub
loopne
(bad)
lahf
cmp
jl
push
mov
cld
inc
mov
(bad)
scas
or
pop
cmps
(bad)
in
ret
xchg
cmp
(bad)
into
fcom
or
mov
dec
imul
ja
lea
mov
inc
adc
outs
ret
out
fst
fsubr
adc
mov
stc
mov
mov
lahf
movs
mov
in
pop
ror
test
add
dec
test
adc
xchg
add
jae
imul
popf
push
iret
je
movs
adc
fbld
sub
add
dec
bound
or
shr
psubw
mov
pop
out
and
cmp
push
dec
jecxz
cmp
mov
sub
aas
dec
in
scas
cs
add
shl
xchg
loopne
sub
arpl
sbb
adc
test
sbb
test
add
sub
(bad)
mov
xchg
cmp
mov
stc
inc
in
pusha
mov
jne
cmp
icebp
mov
pop
out
repnz
jl
(bad)
jnp
loop
ret
inc
pop
retf
mov
adc
or
or
jle
loope
push
cmp
xor
fwait
shl
test
lds
aam
or
iret
test
mov
movs
enter
mov
pop
inc
dec
int
sbb
fadd
dec
xor
popf
xchg
fs
inc
test
je
cmp
fnstsw
mov
jge
frstor
nop
jl
inc
jns
in
ret
add
ins
adc
jmp
inc
inc
outs
push
scas
cld
jns
or
aaa
dec
sub
mov
push
jecxz
sbb
aad
push
mov
fnstcw
stos
pop
(bad)
mov
aad
jle
jns
hlt
fild
fsub
shl
cs
push
push
or
add
ret
adc
test
and
jmp
mov
jp
das
pop
(bad)
fimul
mov
mov
sub
xchg
lods
push
rol
fist
lds
outs
jns
dec
mov
lods
mov
ins
jmp
pusha
push
sub
test
jo
or
in
mov
stos
stos
add
popa
push
pop
mov
or
xor
mov
imul
je
into
sub
push
cmp
inc
xor
cmp
pop
daa
in
or
sub
jno
mov
jno
stos
lea
dec
retf
push
cmc
test
push
div
xchg
mov
and
daa
jecxz
ffree
cwde
call
test
das
and
or
sti
data16
dec
ret
lahf
inc
mov
sub
pop
inc
push
mov
xchg
iret
frstor
cwde
(bad)
jne
call
das
pop
and
mov
pusha
(bad)
xchg
mov
and
div
mov
pop
in
adc
and
dec
aaa
ret
fsubr
mov
cwde
or
pop
fcmovne
or
jbe
dec
push
push
das
addr16
hlt
mov
xchg
fs
and
stos
mov
fild
lds
pop
(bad)
loopne
stos
and
(bad)
nop
adc
sbb
xchg
xchg
(bad)
cmp
cmp
jg
xchg
aad
sar
mov
add
repz
jge
shr
frstor
jae
push
out
outs
shl
enter
xchg
aam
mov
add
xchg
sahf
jmp
aaa
stos
push
sahf
arpl
sub
dec
xlat
dec
add
enter
into
mov
mov
adc
dec
popf
cmp
push
xor
gs
jg
jle
enter
inc
mov
dec
into
aad
cmps
inc
outs
jp
jmp
or
adc
cmc
mov
rcl
and
fdiv
inc
inc
xlat
or
leave
bound
pop
or
mov
and
imul
inc
cs
ret
mov
jge
sbb
mov
mov
adc
(bad)
stc
mov
push
and
push
push
inc
test
into
loope
jnp
(bad)
adc
imul
pop
fbld
cmp
ins
dec
lock
jbe
call
sbb
(bad)
mov
pop
ret
jg
pop
shr
ds
mov
add
movs
cmps
mov
sub
mov
sbb
(bad)
jg
imul
popa
add
or
add
push
popa
nop
or
xor
out
or
(bad)
outs
(bad)
ret
push
addr16
mov
jmp
jb
xchg
outs
and
xor
pop
jb
add
add
lock
cli
fwait
ds
fstp
fsub
adc
mov
rcl
xor
pusha
sbb
mov
movs
inc
push
mov
movs
dec
stc
mov
xor
rcr
mov
and
pop
dec
push
pop
mov
(bad)
and
or
inc
sub
aad
jl
pop
stos
jb
pop
mov
leave
addr16
in
(bad)
adc
sub
add
adc
mov
xchg
in
fisttp
mov
cs
and
stc
mov
pop
lods
xchg
jae
push
jb
retf
adc
fs
push
jge
in
cmp
loopne
pop
xchg
pop
cmp
mov
sub
mov
pop
(bad)
mov
adc
push
mov
pop
sub
mov
sub
test
jb
retf
jo
dec
jns
jecxz
pop
ins
or
test
into
sar
sbb
retf
pop
fcmovb
pop
add
ret
jae
sti
iret
mov
and
cmp
add
dec
xchg
inc
pushf
test
loop
mov
xor
push
clc
sub
ret
xor
xor
hlt
xchg
daa
cli
xchg
in
cmp
aam
xchg
jbe
mov
inc
iret
movs
(bad)
pop
xor
out
repz
mov
sub
push
pop
add
les
sbb
cmp
fistp
mov
adc
in
add
enter
jo
and
test
and
(bad)
sbb
jmp
in
imul
or
lods
fild
mov
fld
int
leave
jns
inc
add
adc
fdiv
pushf
jecxz
aas
jb
fist
and
dec
sahf
jmp
ret
add
mov
fisubr
popa
and
push
jnp
fidiv
arpl
xchg
outs
add
out
mov
inc
xchg
out
scas
xchg
xor
aam
mov
pusha
pusha
sub
inc
aas
jmp
dec
jg
push
mov
xchg
adc
cld
add
ins
dec
adc
xchg
outs
sub
(bad)
add
mov
mov
sti
xchg
push
imul
ins
add
push
sbb
dec
add
test
data16
mov
inc
in
sub
rcl
aaa
movs
stos
sub
sbb
addr16
sub
pop
(bad)
lods
nop
mov
mov
fsubr
add
inc
in
in
ins
dec
cmp
gs
das
mov
push
sbb
mov
lea
in
push
xor
test
stos
in
inc
xchg
xor
jne
cmp
outs
push
cs
xor
sub
mov
jmp
(bad)
cmp
cld
add
jbe
les
call
xor
fimul
sbb
mov
imul
dec
iret
loope
aad
push
adc
mov
shl
ror
push
(bad)
cmps
mov
outs
inc
or
sbb
ins
imul
cdq
xor
lock
shr
cmp
xor
mov
fcom
arpl
mov
scas
add
push
mov
mov
and
cmp
ds
cmp
sub
int3
cmps
nop
or
mov
cmps
repz
test
leave
mov
rol
jb
xchg
add
shr
push
loope
pop
mov
aas
sar
jg
iret
pop
fbstp
lock
imul
jge
push
mov
sbb
icebp
retf
xor
ret
das
jge
adc
mov
mov
inc
mov
pop
xor
popa
xor
sbb
ja
sub
lea
or
sbb
call
sbb
ret
dec
(bad)
jmp
sub
(bad)
cmps
or
xchg
jae
jne
shl
mov
push
sub
dec
pop
sub
jl
jg
push
push
xchg
shr
ja
dec
(bad)
lahf
fisttp
pop
mov
outs
mov
out
sar
dec
cmp
inc
ds
sbb
add
xlat
mov
sub
jns
inc
jmp
cmps
ror
adc
jle
inc
out
rcl
fidiv
loop
cmp
ror
sub
sbb
mov
cmp
mov
mov
lock
cmp
inc
les
cli
push
sbb
xor
mov
sub
in
push
push
js
loopne
(bad)
ja
mov
push
imul
sub
cmps
jmp
pop
das
je
or
mov
dec
mov
adc
dec
(bad)
iret
adc
neg
stos
aas
sahf
mov
movs
test
push
std
jno
aaa
aam
add
xor
mov
aas
adc
gs
sbb
jns
loop
inc
fcomp
std
add
add
push
aam
std
das
sti
fistp
xor
movs
jecxz
hlt
(bad)
rcl
stos
es
pop
das
inc
in
inc
out
or
scas
test
mov
daa
loope
aaa
xor
icebp
xchg
ret
jae
inc
add
pop
addr16
or
jnp
push
or
sbb
daa
and
xchg
dec
cmp
test
add
inc
retf
sub
ds
aaa
dec
jne
sub
push
ficomp
mov
xor
dec
in
retf
inc
(bad)
xchg
add
addr16
retf
jp
cmp
aam
(bad)
add
push
cmps
mov
popf
mov
xchg
jle
retf
pop
es
gs
rol
xchg
not
sahf
inc
cmp
xchg
or
aaa
jecxz
add
lock
adc
daa
or
scas
pop
xchg
sbb
cmps
mov
dec
test
sbb
jno
mov
fmul
or
icebp
popf
cli
leave
adc
cdq
mov
ss
sar
outs
lods
jmp
jecxz
retf
fdiv
adc
int3
xchg
cs
xor
dec
out
pop
mov
out
(bad)
add
int
retf
xchg
fidivr
sbb
pop
(bad)
mov
xor
xchg
call
out
rcr
xchg
dec
pushf
jns
lea
inc
ins
fmulp
repnz
fmul
pushf
sub
sub
in
dec
mov
aaa
test
xchg
into
sbb
icebp
xor
(bad)
pop
and
pop
clc
jns
clc
ins
xor
push
dec
sub
mov
mov
xor
sbb
(bad)
(bad)
pusha
xor
ss
imul
dec
out
mov
pop
and
sub
ja
push
add
mov
cmp
into
pop
inc
mov
outs
sbb
push
js
add
ret
aam
not
lock
ja
rcr
mov
pop
push
pop
arpl
mov
xor
xor
into
loop
test
inc
and
push
push
xor
cmp
cli
cmp
inc
mov
xor
sahf
jo
cs
xchg
ret
sub
pop
push
movs
cmps
or
and
stc
dec
pop
mov
push
pop
lods
cwde
mov
sub
cmp
mov
mov
out
ficom
gs
cmps
iret
lea
pop
retf
xchg
sub
add
jns
jmp
push
out
xlat
and
(bad)
std
push
out
dec
push
adc
imul
(bad)
or
push
(bad)
fsubr
ds
aad
pop
sub
inc
pop
mov
retf
pop
xchg
jl
dec
pop
mov
jmp
(bad)
push
push
dec
xor
sbb
retf
sbb
push
lods
and
int
and
jg
mov
add
mov
sbb
loopne
dec
sbb
jb
cmp
or
sbb
cmps
cmp
mov
inc
retf
nop
sub
fcomip
inc
mov
ret
xor
ja
ret
out
push
mov
neg
pop
pop
test
lods
ss
imul
lock
cli
fwait
imul
mov
into
mov
mov
ret
les
inc
out
cdq
retf
dec
lods
jbe
mov
xor
into
and
dec
pop
stos
push
pop
jnp
xchg
mov
les
jns
rep
inc
dec
adc
data16
xchg
jmp
jbe
test
jne
and
not
xlat
stos
das
scas
shl
mov
jmp
call
mov
cs
jbe
jo
adc
xchg
mov
dec
mov
mov
inc
out
shr
hlt
add
jae
xor
sub
adc
adc
sub
jg
cs
clc
mov
loop
sbb
sbb
cmp
cmp
or
test
fimul
fdivr
fcom
scas
retf
cmp
mov
fisubr
mov
cmp
idiv
adc
push
pushf
pusha
pop
and
mov
mov
mov
lea
(bad)
xchg
jl
add
pusha
sbb
outs
imul
out
push
shl
cmovb
jecxz
dec
retf
add
stos
inc
push
jl
adc
pop
sub
cmp
dec
jns
es
je
popf
xor
jge
out
sbb
pop
inc
dec
xchg
pusha
arpl
retf
fsub
fsubr
xchg
mov
jns
cmp
ja
inc
dec
js
jae
sbb
mov
jmp
jmp
lock
xchg
adc
push
push
cmp
popf
loop
clc
add
cmp
cmp
int3
or
ins
mov
call
mov
loop
fucomi
das
and
enter
sub
jno
mov
aas
es
aad
cmp
sub
popa
pop
stc
pop
and
xchg
xchg
inc
mov
out
xor
mov
leave
adc
add
pop
mov
aam
jp
fisubr
fist
fist
adc
dec
and
mov
jl
ret
xchg
pop
(bad)
jmp
xchg
xor
push
adc
call
mov
repz
sbb
in
add
jo
sbb
xor
repz
pop
or
push
jmp
repnz
test
add
lahf
xchg
sub
xor
cmp
and
js
fstp
repz
ins
mov
imul
adc
jns
inc
jo
out
add
shr
neg
mov
(bad)
pusha
repz
test
mov
mov
stos
mov
jecxz
clc
pop
mov
mov
adc
sub
sub
inc
out
(bad)
adc
call
mov
jo
add
outs
cmp
cmp
and
add
pminsw
push
and
add
sub
shl
pop
imul
sbb
pop
sub
xchg
test
daa
adc
leave
inc
outs
pusha
push
ret
aas
sub
or
inc
xor
dec
sub
jnp
mov
xchg
add
xchg
push
in
ret
add
push
test
jmp
fstp
out
mov
sbb
ins
ror
movs
cmc
cmp
cwde
(bad)
ins
cli
retf
nop
jnp
ss
sti
out
fld
shr
stc
test
add
shl
sbb
cmc
cdq
adc
push
add
pop
ins
xor
inc
add
(bad)
mov
lods
cli
addr16
xor
in
test
dec
mov
loope
test
mov
fst
arpl
jae
cmp
sub
test
inc
or
dec
push
mov
pop
imul
pop
dec
cmps
ins
imul
dec
jb
push
mov
iret
sbb
into
xchg
int
call
add
mov
mov
pop
out
in
xor
sbb
jno
(bad)
test
mov
cmc
push
mov
push
aas
lock
adc
mov
xchg
jecxz
(bad)
lds
dec
pop
push
(bad)
(bad)
xlat
sahf
arpl
inc
push
push
push
dec
mov
fwait
xchg
outs
adc
and
jmp
push
xor
xchg
jecxz
out
xor
push
outs
mov
xlat
xchg
popa
scas
sub
sbb
mov
cmps
(bad)
and
sub
mov
jp
std
pushf
push
mov
mov
push
das
repnz
xor
xchg
push
jmp
add
jno
iret
adc
cmp
pushf
sbb
mov
mov
in
jge
mov
mov
mov
xor
sbb
repnz
adc
fstp
jecxz
sti
xor
fcomp
add
fdivr
test
sub
inc
or
dec
sbb
mov
inc
jno
out
inc
leave
out
pusha
xchg
push
mov
xchg
xchg
jns
imul
jle
dec
and
lea
cmps
mov
imul
pop
jb
sub
sub
shl
ja
dec
mov
jmp
sbb
xchg
hlt
in
push
mov
shr
xlat
sub
cld
push
inc
(bad)
and
push
adc
jnp
or
out
jmp
mov
mov
jle
aaa
pop
mov
nop
push
mov
cmp
test
or
out
shrd
pop
popa
dec
into
je
and
sbb
or
mov
imul
dec
mov
in
inc
sub
pop
fsincos
pop
jmp
and
jmp
adc
fbstp
int3
ss
pushf
and
cli
or
imul
jl
cmp
nop
loopne
push
or
add
outs
pop
lahf
fldcw
lahf
out
out
fmul
fs
cmp
dec
jae
sar
sbb
xor
dec
lods
mov
pop
fucom
pop
jmp
and
and
cmp
adc
enter
ins
in
cwde
sub
and
jp
mov
cmp
mov
jg
xor
mov
lods
popf
mov
retf
fs
mov
das
mov
sub
xchg
push
xchg
sub
cmp
jge
mov
add
sbb
jle
pop
and
sbb
je
mov
jmp
mov
add
inc
scas
bound
mov
push
push
sahf
inc
popa
jns
push
pop
sbb
loop
aam
add
or
pusha
mov
adc
dec
or
pushf
sbb
push
xor
inc
(bad)
jmp
fimul
stos
xchg
pop
adc
dec
js
pushf
sbb
xor
iret
and
jp
jmp
(bad)
movs
ja
lea
popf
imul
arpl
mov
mov
fist
int
push
inc
leave
inc
or
stc
shl
and
lahf
sbb
cmps
les
sub
cmp
out
dec
arpl
int3
pop
or
scas
lea
out
pop
fcom
adc
push
xor
ror
pop
push
imul
mov
shl
call
jb
fistp
dec
sbb
and
inc
ja
mov
loop
fldcw
xchg
aam
sbb
enter
mov
jb
mov
or
stos
xchg
es
pop
aaa
cmc
test
xchg
xchg
sbb
and
cli
dec
jl
shr
mov
sub
mov
cmp
lahf
gs
bnd
ja
cmps
mov
imul
inc
or
jnp
ror
push
test
frstor
cmp
ins
xchg
and
pop
in
stos
cmp
pusha
outs
shr
cmc
js
ins
and
mov
cmps
into
sti
sub
test
stc
or
jmp
push
mov
cwde
jae
lds
jnp
jne
outs
outs
loop
jmp
pop
pop
dec
retf
cmp
hlt
in
jle
mov
enter
mov
push
pushf
in
fpatan
cmp
aas
add
adc
ja
mov
sti
pop
das
cld
fidivr
div
pop
cmp
in
cmp
adc
test
aad
xor
dec
push
outs
in
dec
or
test
ja
sbb
inc
push
jne
jno
cmp
je
movs
mov
adc
pusha
or
cmps
mov
in
xchg
mov
popa
cmc
dec
cmp
pop
cmp
inc
push
cli
adc
test
out
xchg
dec
(bad)
sbb
nop
inc
aas
loope
or
sbb
(bad)
xchg
jmp
out
mov
dec
iret
cmp
fwait
pop
(bad)
fsub
(bad)
shl
lods
pop
(bad)
out
inc
aad
jecxz
add
adc
or
mov
iret
aaa
shr
popf
scas
push
inc
inc
xlat
imul
pop
push
ss
mov
mov
xchg
mov
outs
jl
rol
je
clc
mov
sub
or
imul
push
mov
cdq
(bad)
pop
div
popa
mov
leave
sub
inc
cld
jnp
fbld
cli
fidiv
xor
das
dec
cmps
rol
int
jbe
xor
popf
cmp
sbb
bound
cmp
and
lods
enter
sar
mov
xchg
inc
in
xchg
dec
scas
retf
std
push
jmp
mov
add
xlat
adc
push
push
cwde
and
mov
mov
jmp
pop
leave
jnp
mov
inc
xchg
je
cmp
lock
cmp
and
(bad)
and
test
add
sub
test
xor
xchg
(bad)
nop
push
cmp
sahf
retf
(bad)
imul
out
lods
outs
cmp
outs
xchg
inc
retf
jno
and
mov
jb
outs
dec
bnd
inc
scas
ret
xchg
mov
push
xlat
in
mov
cmps
adc
sub
clc
jbe
call
and
retf
cmp
pusha
fisttp
retf
xor
push
rcr
mov
inc
add
stos
cmps
sub
div
(bad)
lahf
add
pop
sbb
pop
pop
lods
mov
pop
jmp
mov
(bad)
ror
lds
mov
inc
cmp
ins
jmp
mov
mov
adc
imul
shl
rcl
pop
es
and
nop
pop
nop
cmp
or
clc
jle
jmp
adc
xor
pop
dec
retf
fwait
add
inc
and
jmp
js
sbb
jmp
call
or
fisttp
imul
mov
das
inc
dec
inc
in
add
cmp
push
jp
jmp
icebp
jle
dec
bound
aad
pushf
adc
xlat
sub
and
cli
or
adc
jmp
push
adc
repnz
dec
ja
int
jae
loope
add
ror
inc
fisubr
sub
shl
(bad)
(bad)
add
add
outs
xor
stos
xchg
adc
stc
in
lock
push
inc
mov
mov
popa
stos
pop
loop
lahf
fisttp
cld
data16
adc
in
icebp
sbb
cwde
xchg
xchg
mov
sbb
pop
lods
add
fwait
icebp
test
xchg
cmp
pushf
scas
ja
(bad)
ins
loop
leave
in
cmps
xor
dec
jg
mov
pop
sub
mov
loop
cmp
sub
loop
dec
adc
pop
add
jns
jne
xchg
cmp
cmps
jmp
or
xor
lahf
lods
sbb
hlt
ja
(bad)
push
les
jb
and
(bad)
jns
into
jo
lahf
int3
cmp
enter
fwait
aad
jbe
scas
and
lock
out
scas
push
inc
sub
push
xchg
ficomp
fiadd
and
fisttp
pop
mov
in
inc
mov
jnp
sub
jo
retw
cdq
bound
stos
jne
sbb
dec
and
fild
fstp
ret
(bad)
xor
cs
je
fidiv
lahf
call
lods
test
shr
xchg
pop
mov
mov
adc
xchg
or
ins
loope
pop
add
jp
inc
add
mov
push
ret
dec
aaa
in
mov
jp
mov
inc
xchg
mov
xchg
inc
add
sub
cmp
ficomp
jp
repnz
lods
xor
inc
push
ss
dec
loope
shr
pushf
(bad)
outs
call
and
ror
aad
movs
pusha
or
pop
add
call
gs
rcl
out
xor
(bad)
jmp
mov
mov
sub
les
cs
cld
test
popa
cld
mov
int3
data16
icebp
jg
imul
fnsave
sub
test
mov
in
loope
sbb
les
ror
jmp
pop
shl
aaa
ins
aas
sub
retf
xchg
inc
int
mov
xchg
xchg
cli
pop
and
in
test
sbb
sub
out
repz
and
xchg
ficomp
retf
into
push
dec
inc
adc
add
out
fnstenv
mov
adc
mov
imul
shl
mov
cmps
pop
nop
ins
adc
sub
xchg
ins
popa
push
mov
and
push
ds
sub
sbb
inc
(bad)
icebp
dec
or
push
or
or
xchg
or
in
int3
xchg
adc
rcr
sar
push
push
sahf
loop
popa
in
fisubr
and
jg
and
js
jbe
adc
pop
(bad)
sbb
xor
sub
dec
pop
fwait
ret
add
push
fisttp
pop
lods
fwait
jg
leave
mov
in
inc
mov
jnp
xchg
dec
pop
and
xor
fimul
hlt
scas
jecxz
call
dec
shl
mov
adc
or
or
add
js
push
xor
cmps
test
jmp
retf
aaa
add
int3
cli
xchg
jbe
sub
cmp
mov
mov
mov
xchg
lahf
popf
add
je
js
lea
push
imul
mov
cmp
leave
sub
cld
inc
mov
leave
adc
leave
mov
or
out
cmp
cwde
std
mov
push
invd
hlt
bnd
dec
sbb
lods
add
mov
push
sub
(bad)
mov
xchg
lds
stos
cmps
out
in
call
sub
xchg
inc
popf
sbb
(bad)
inc
or
enter
aas
ins
and
xlat
mov
xor
pop
dec
pop
dec
out
cmc
in
xchg
in
or
hlt
daa
gs
sbb
mov
ror
test
test
sbb
loopne
xor
jb
into
icebp
inc
jecxz
mov
cmp
dec
sub
jle
test
mov
jae
or
dec
bnd
cmp
push
(bad)
shld
test
mov
mov
or
push
dec
mov
pop
ds
jmp
or
hlt
lock
or
jmp
popa
aaa
dec
stos
xor
pop
stc
ret
xor
sti
sub
sub
retf
sbb
sti
push
xchg
xchg
lods
cmp
cmp
or
sahf
std
mov
or
dec
and
sbb
sub
int
push
leave
imul
fild
arpl
jl
mov
dec
xchg
xor
outs
sbb
pop
ds
das
pop
jp
es
push
(bad)
pop
inc
add
cmps
add
xchg
pushf
jle
cld
xor
enter
(bad)
push
add
mov
fild
cmp
ret
jg
inc
lahf
mov
push
out
idiv
and
ss
mov
mov
fdiv
addr16
in
out
push
int3
mov
cli
mov
jl
mov
and
arpl
retf
movs
rcl
test
stos
mov
(bad)
mov
sub
push
sub
jne
cs
hlt
pusha
jne
ins
inc
mov
adc
dec
rcr
sub
push
js
je
movs
fld
inc
jb
cmc
jp
aas
cwde
push
xlat
dec
xchg
pushf
xor
repz
sub
stos
pop
lock
or
popf
jmp
scas
and
mov
adc
movs
popa
lods
push
into
(bad)
sbb
jmp
fisubr
fdiv
cmc
inc
dec
mov
mov
dec
sti
(bad)
mov
clc
and
pop
fs
inc
pushf
mov
push
dec
fst
les
and
neg
ret
sbb
sub
jnp
adc
sub
jg
lods
retf
dec
out
ss
je
bound
pushf
stos
jnp
sbb
push
jp
sub
or
aam
int
fldenv
dec
pop
pushf
or
loope
je
daa
hlt
out
adc
pop
pop
lea
stos
(bad)
clc
sub
stc
xor
imul
les
loopne
iret
rcl
or
outs
adc
push
mov
loope
mov
mov
mov
leave
mov
pop
push
js
xchg
imul
adc
bound
pop
mov
repz
xchg
mov
fidivr
xor
inc
jecxz
in
clc
scas
or
pop
push
adc
cmp
out
repnz
sbb
out
pop
jnp
and
cli
cmp
jno
or
add
mov
mov
stos
stc
stos
sub
je
(bad)
mov
adc
dec
loopne
mov
mov
outs
jno
xchg
sub
dec
or
sbb
push
addr16
mov
(bad)
mov
ficomp
mov
jns
xchg
add
or
shl
cmp
std
inc
pop
push
dec
std
jecxz
inc
das
lea
pinsrw
xchg
std
aaa
int
cli
sbb
jbe
in
pop
or
push
inc
test
out
jo
ret
js
sub
and
fcmovbe
pop
mul
test
lods
mov
fdiv
push
xlat
dec
mov
mov
push
add
out
push
test
fcomp
lahf
cmps
stos
call
in
mov
outs
jnp
xchg
sub
in
sub
push
or
inc
push
cmp
add
fidivr
out
mov
js
xor
or
push
push
cmps
dec
outs
mov
pop
fs
sub
je
dec
ja
inc
iret
jbe
mov
or
dec
inc
push
ret
dec
(bad)
fstp
mov
and
dec
mov
int
enter
aad
popa
cmp
cmp
push
sbb
mov
arpl
test
xchg
mov
aad
ins
fisttp
xor
repnz
rcl
fs
mov
adc
push
mov
xor
jnp
cmc
pop
fdivr
jg
test
jp
fild
pop
jg
cwde
cwde
mov
sub
test
cmp
(bad)
push
add
jecxz
add
sar
pop
outs
mov
pusha
into
in
ret
pop
ficomp
add
or
lahf
mov
sub
mov
add
das
and
mov
xor
and
cs
in
push
inc
mov
(bad)
jecxz
stc
cs
push
les
lock
lea
jne
and
pop
xor
mov
xchg
mov
push
das
addr16
mov
popa
xchg
int3
stos
or
push
jge
aaa
sbb
dec
sbb
das
adc
cmp
jg
hlt
stc
call
add
or
cmc
mov
fnstsw
pop
sub
and
pop
jae
sub
jae
(bad)
add
shr
cmp
in
fwait
lock
mov
pop
xchg
push
xchg
xchg
dec
daa
xchg
rcl
mov
cmp
mov
mov
xor
out
popa
sub
mov
sar
jns
xchg
xchg
sbb
sbb
cmp
sbb
push
in
ja
movs
lods
cmp
mov
mov
xor
lea
aad
pushw
repnz
inc
jp
inc
sub
lock
cmp
jnp
in
jp
pop
retf
mov
ret
inc
das
add
mov
jge
xor
jno
scas
mov
arpl
xchg
pusha
pusha
dec
mov
adc
adc
mov
(bad)
std
xor
in
pop
jmp
rcl
repnz
mov
fsqrt
mov
mov
sbb
sbb
(bad)
data16
xchg
sbb
mov
pusha
and
in
test
and
adc
jmp
jnp
cmp
push
dec
aam
ja
in
mov
and
push
and
repz
ret
mov
lahf
push
ins
sbb
out
movs
inc
lds
pop
cmp
jecxz
stos
push
cmp
(bad)
(bad)
jge
(bad)
retf
dec
arpl
sti
mov
or
sub
cmp
xor
cmp
mov
xor
pusha
cmp
cmp
cmp
push
and
out
ss
(bad)
jp
push
push
add
mov
out
xchg
dec
test
xchg
retf
fnsave
xor
push
iret
xchg
repnz
bound
in
pop
mov
sbb
ins
add
loop
jecxz
ror
xor
xchg
dec
or
inc
push
sub
ja
loope
sub
inc
jb
fwait
addr16
daa
arpl
xor
mov
adc
pop
mov
jge
dec
outs
or
xchg
scas
sub
scas
movs
stos
push
mov
pop
lock
mov
mov
in
and
or
in
xchg
dec
xchg
mov
test
sysexit
pop
into
jns
js
xchg
adc
pop
rcr
mov
mov
mov
sub
inc
inc
fidiv
in
pop
aas
repz
mov
scas
out
sub
loopne
and
sub
mov
clc
bnd
cmps
js
jne
mov
sbb
mov
dec
jge
or
or
jl
ds
rcl
not
(bad)
in
inc
adc
(bad)
retf
dec
cmps
push
test
inc
retf
add
mov
jno
jecxz
mov
cmp
sbb
add
div
stc
adc
test
push
add
das
mov
and
(bad)
sbb
xor
shr
movs
add
xchg
popf
call
pop
stc
inc
pushf
sbb
shl
ins
push
xchg
clc
jmp
add
mov
adc
test
jp
ret
std
fptan
outs
xor
out
inc
addr16
cmps
cmps
cmps
pop
leave
hlt
mov
lahf
stos
sub
mov
mov
or
mov
mov
push
sbb
or
push
sub
xchg
pop
mov
ret
mov
cdq
and
sbb
cmp
push
adc
popf
mov
mov
xchg
test
push
jp
push
mov
pop
les
xchg
mov
mov
mov
pop
inc
loopne
out
inc
sbb
ror
addr16
mov
pushf
retf
out
adc
and
fisttp
dec
sbb
ins
movs
(bad)
nop
pop
dec
adc
in
lahf
cld
inc
push
pop
fisttp
ret
mov
xor
xor
mov
xchg
bound
fcomp
retf
sub
aad
and
xor
xor
shr
fsub
mov
xchg
dec
sbb
mov
addr16
push
jmp
pop
nop
retf
inc
int
sub
mov
enter
pop
fnsave
inc
sub
sbb
out
jne
ja
cmp
mov
and
shl
mov
in
jmp
xlat
xlat
adc
push
or
pop
sar
and
and
imul
mov
iret
fdivr
cld
cwde
cmp
sub
xchg
mov
sbb
pop
icebp
pop
jmp
sbb
repnz
push
dec
arpl
pop
jecxz
out
push
ror
(bad)
lea
mov
fisubr
pop
outs
outs
retf
push
movs
leave
pop
push
inc
mov
sub
fstp
cmp
and
popf
xor
cmp
mov
pop
lods
cmp
in
jge
fsubr
mov
jp
and
xor
jg
sbb
cmp
pop
jl
sub
dec
inc
jno
dec
jp
and
mov
sbb
push
call
lods
ret
mov
stos
sti
imul
scas
cmp
imul
jecxz
lods
mov
rcl
inc
popa
outs
fsubrp
mov
retf
ror
sbb
(bad)
pop
inc
les
pop
push
or
mov
adc
loop
ret
pop
xlat
xchg
cmp
stos
sub
jg
sar
fimul
lods
retf
stc
xor
movs
call
sub
ins
xchg
jle
(bad)
loopne
push
adc
jmp
enter
xor
inc
rcr
pop
adc
leave
xor
popf
cwde
lds
mov
mov
jno
imul
(bad)
stc
xchg
push
aaa
cmc
inc
in
out
xor
and
adc
xchg
(bad)
(bad)
push
cmp
xor
pop
adc
fcmovbe
add
inc
imul
ss
adc
ror
punpckldq
push
mov
sar
dec
cmps
retf
das
xor
gs
mov
mov
add
cmp
scas
popf
leave
inc
enter
aaa
pop
ja
xchg
dec
fwait
(bad)
dec
rcr
cdq
mov
mov
adc
jb
mov
mov
push
inc
mov
sbb
pop
and
pusha
mov
scas
les
xchg
repnz
push
cld
dec
add
mov
sub
inc
inc
mov
movs
and
lahf
sahf
xchg
mov
sub
rcr
call
inc
cwde
jne
mov
or
(bad)
jbe
cmp
out
mov
push
fst
or
add
push
ret
inc
push
mov
ins
enter
mov
dec
enter
sub
xchg
scas
shr
xor
int
fadd
push
pushf
mov
pop
mov
les
sbb
xchg
pop
pop
ins
inc
test
mov
cwde
outs
icebp
test
sub
popf
movs
sub
loop
jge
inc
fdiv
pop
movs
mov
shl
in
rcl
inc
xor
push
(bad)
enter
xchg
jns
pop
arpl
iret
xchg
scas
out
or
dec
dec
(bad)
cwde
out
ss
jmp
jge
aas
call
jecxz
mov
and
ds
cld
push
xor
enter
outs
jmp
mov
sbb
cwde
jbe
inc
jmp
out
pushf
ror
jle
ret
pop
lds
das
mov
or
xchg
js
xchg
mov
cld
stos
pop
sub
mov
int3
xchg
cwde
dec
pop
test
imul
dec
pop
icebp
and
pop
jecxz
std
shl
or
call
adc
push
(bad)
and
xor
ret
jb
fisttp
(bad)
jne
or
pop
rol
mov
jp
mov
sbb
mov
out
or
jne
lods
xor
mov
inc
fs
(bad)
icebp
mov
out
and
int3
and
jge
aaa
outs
adc
inc
mov
inc
push
daa
es
and
mov
shr
or
adc
push
mov
leave
inc
cld
retf
pushf
in
call
inc
arpl
push
add
addr16
(bad)
es
lock
xchg
adc
dec
ret
xchg
bt
sbb
pop
mov
imul
das
jo
xlat
test
mov
(bad)
inc
pop
imul
int3
(bad)
pop
add
mov
test
jbe
popa
sub
jle
jge
mov
in
or
mov
xchg
retf
fst
pop
inc
or
lahf
(bad)
lds
stos
jge
xor
retf
xor
jl
add
ja
or
push
lahf
dec
mov
xchg
mov
jmp
pop
inc
push
jp
hlt
mov
xchg
shr
sub
jo
dec
fnsave
cmc
scas
pop
cld
add
fisub
neg
sti
adc
mov
popf
xchg
fs
jb
popf
pop
imul
mov
mov
ins
xor
div
adc
les
fsubr
(bad)
cs
div
mov
xor
mov
and
add
mov
mov
cmp
sahf
dec
cli
adc
adc
cmp
shl
mov
pop
jbe
shr
dec
call
bound
(bad)
mov
jmp
movs
pop
jecxz
aad
call
fwait
dec
mov
in
retf
pusha
add
push
mov
int3
in
mov
lods
cmp
ins
jg
dec
in
out
mov
retf
cmp
cmps
mov
xchg
pop
jbe
or
outs
or
jg
fistp
or
loope
hlt
cs
in
lock
or
popf
mov
retf
xor
adc
jnp
retf
push
rcl
cli
ins
xlat
aas
xor
scas
jno
neg
and
jbe
lahf
or
rcr
aas
sbb
(bad)
push
jb
imul
jmp
outs
mov
retf
shl
xchg
je
push
jp
ret
inc
call
mov
push
ja
outs
jg
add
xor
je
retf
cs
loope
mov
pop
stc
or
clc
mov
in
adc
cmc
and
test
out
jmp
xor
push
push
repz
sub
mov
mov
rcr
mov
mov
xchg
ret
(bad)
push
ins
ins
pop
call
mov
cmp
jo
dec
mov
cli
fdiv
cwde
dec
fimul
xor
mov
jge
fcom
inc
mov
dec
cmps
dec
sbb
retf
cld
ins
cmp
loope
add
fild
xor
dec
add
sbb
adc
hlt
test
js
and
sub
inc
mov
jne
inc
jmp
xchg
das
add
fwait
mov
popf
xchg
or
scas
(bad)
mov
not
jns
sbb
sub
xchg
adc
push
jb
xchg
bound
mov
sbb
jl
jmp
push
clc
jne
mov
ja
dec
repz
push
jne
cmps
out
sub
jne
dec
push
sti
aas
nop
out
inc
aam
xchg
pop
arpl
(bad)
mov
pushf
sub
mov
and
inc
push
in
xchg
jg
jmp
xchg
adc
ret
pop
pusha
adc
popa
inc
jb
out
repnz
cmps
mov
jl
push
pusha
adc
gs
sbb
jmp
jae
xchg
mov
push
scas
adc
xchg
fpatan
cmps
cs
out
ss
rol
jg
xchg
jbe
in
and
in
aam
movs
sbb
or
add
and
mul
mov
nop
mov
sar
ins
dec
inc
sbb
mov
or
cld
fwait
cmps
sbb
movs
mov
test
mov
jmp
addr16
ja
and
dec
adc
lock
xchg
mov
shr
pop
cmp
loopne
xchg
pop
jg
cmp
jmp
cwde
call
sub
lahf
nop
ret
fidiv
mov
sbb
cwde
xchg
sub
pop
inc
pusha
out
mov
mov
stos
push
addr16
stos
xor
cmps
adc
aaa
push
or
in
addr16
into
push
imul
loope
sti
fs
xchg
idiv
outs
test
lea
outs
mov
fldcw
retf
lods
sub
jecxz
repz
mov
aaa
lock
and
pushf
imul
mov
dec
jg
xchg
or
jp
sbb
fcom
sbb
sbb
(bad)
pop
call
jnp
sbb
(bad)
pop
push
sbb
dec
mov
(bad)
jo
inc
or
je
stos
pushf
scas
mov
icebp
and
or
jmp
lods
(bad)
mov
jnp
imul
loop
(bad)
fwait
cmc
pop
int3
sub
inc
sub
enter
fbstp
outs
cwde
push
xor
mov
sbb
pop
xchg
inc
mov
in
scas
lock
daa
ins
les
fistp
ins
or
in
in
cmp
xor
int
and
cmp
cwde
xchg
stc
pop
jecxz
dec
or
push
es
(bad)
scas
push
leave
push
pop
(bad)
iret
fnstcw
inc
and
mov
ret
cmp
cmp
iret
add
push
in
or
ret
sti
(bad)
(bad)
push
xor
and
faddp
cmp
pop
cs
sub
imul
dec
outs
bound
push
xchg
jne
je
inc
cmp
mov
in
mov
or
push
dec
loopne
into
(bad)
sbb
sub
(bad)
fldcw
into
fstp
cmp
cwde
cmp
je
pop
inc
push
ja
(bad)
or
or
test
push
jg
stc
pushf
sti
rcl
in
cmp
xchg
push
fsin
test
scas
popf
cld
bound
push
sbb
inc
std
add
cs
or
or
hlt
mov
aad
lods
jg
aam
pusha
(bad)
clc
icebp
pushf
sub
pop
mov
in
mov
rcr
loopne
dec
retf
scas
dec
lea
xchg
cmp
push
cmp
cmc
aaa
clc
fdivr
or
mov
mov
mov
cmp
(bad)
cmp
sub
jp
mov
jg
(bad)
and
add
movs
test
xchg
(bad)
dec
dec
inc
test
test
ds
mov
push
xor
ins
inc
sub
dec
sbb
sbb
jg
fist
test
dec
sub
daa
mov
xor
leave
mov
ret
jmp
cli
mov
ds
fisttp
mov
mov
pop
paddusb
jecxz
push
dec
inc
mov
movs
sar
push
inc
enter
sub
in
rcl
js
test
dec
les
outs
clc
jmp
mov
inc
hlt
clc
jmp
inc
push
pop
scas
loope
cmp
jns
(bad)
das
xchg
or
lock
sbb
clc
inc
bound
rep
adc
clc
mov
inc
sbb
and
inc
xor
rcr
push
push
sbb
lahf
dec
mov
pop
add
jo
dec
xor
sbb
push
sar
push
lods
sub
dec
mov
addr16
popf
in
jle
in
stc
retf
add
cmp
mov
out
cmp
enter
inc
test
lea
mov
xor
in
stos
mov
ja
aas
arpl
(bad)
sbb
daa
jmp
sbb
add
bound
mov
mov
xchg
sti
fst
or
push
adc
rcl
adc
in
dec
mov
push
mov
or
(bad)
les
cs
pop
pop
cmp
pop
das
fimul
repnz
fpatan
or
mov
out
icebp
sbb
adc
push
or
jae
sbb
cbw
ja
and
cmp
pop
push
loope
adc
pop
and
aam
and
les
imul
add
ja
call
cmp
add
bound
fist
sub
aas
imul
fisttp
dec
fimul
popa
call
pop
pop
mov
jnp
iret
or
dec
pop
sar
jg
add
fdivr
lahf
in
std
sub
push
fist
adc
imul
pop
mov
mov
adc
sub
mov
mov
mov
popf
jo
cld
jecxz
mov
dec
pop
mov
push
lahf
sub
icebp
sub
mov
mov
sbb
sbb
leave
sub
test
fcmovne
jns
mov
add
jns
fs
mov
mov
xchg
xchg
sub
ins
jmp
jmp
adc
inc
xchg
xor
cwde
lods
rcr
jae
mov
ror
push
popf
jns
jp
mov
fbld
xchg
idiv
bound
xor
mov
inc
xchg
adc
push
ja
ins
call
clc
in
sub
push
push
ins
imul
lahf
sub
mov
add
fs
sub
mulps
jnp
les
sar
test
ja
sbb
xchg
leave
jmp
fwait
add
inc
or
add
je
rcl
cdq
dec
push
addr16
cmp
gs
addr16
enter
cmp
jp
push
in
pop
mov
adc
or
adc
and
jo
jb
shr
add
pushf
clc
rol
inc
inc
dec
mov
in
pop
push
push
call
inc
inc
ret
jno
dec
push
aam
cld
lahf
sti
cmp
sti
jbe
fldenv
ss
push
xor
add
gs
cmc
push
fsub
cmp
ja
jmp
inc
push
add
xchg
inc
dec
push
or
xor
fnstsw
mov
push
nop
inc
imul
push
pop
xor
cmp
dec
fs
cmp
pop
scas
popf
xor
jae
or
ss
jbe
stc
je
mov
in
jns
pushf
push
imul
or
les
jne
lods
lahf
sbb
hlt
inc
inc
dec
(bad)
jg
jmp
and
scas
or
(bad)
divps
inc
rcr
xor
sbb
cmp
add
sahf
inc
or
pushf
out
dec
ret
cmp
xor
pop
sbb
(bad)
repnz
push
xchg
xor
pop
sub
in
loop
mov
sub
jno
cmp
call
scas
or
les
fiadd
test
pop
and
pop
sbb
pop
jge
xor
lds
jne
dec
jmp
fwait
sub
cld
mov
xchg
(bad)
icebp
in
or
lahf
or
xchg
cwde
(bad)
ss
jge
cwde
(bad)
pop
jmp
add
cmp
daa
pop
test
out
push
and
push
jmp
push
xlat
mov
scas
imul
sbb
mov
call
fbstp
test
or
dec
sub
lods
iret
jnp
xchg
push
pop
daa
outs
sar
fistp
lods
mov
(bad)
rcl
xor
ficom
arpl
cmc
outs
inc
and
add
inc
cmp
or
sbb
adc
aad
push
push
push
mov
stos
call
pop
dec
mov
lahf
mov
cmp
dec
sub
pop
pop
outs
cmp
iret
xchg
retf
pop
lea
test
and
scas
jne
dec
dec
fcmovnbe
mov
cmp
loopne
in
outs
push
mov
jbe
mov
jnp
pop
fidivr
sar
and
mov
jecxz
xor
out
sbb
xchg
dec
ss
fdivr
mov
sub
cwde
call
out
push
scas
ret
call
aas
jae
jo
adc
fcomp
pop
stos
dec
shl
repnz
fistp
mov
dec
mov
and
and
aad
add
(bad)
(bad)
adc
iret
xor
dec
(bad)
(bad)
adc
add
fs
outs
add
dec
jg
mov
pushf
retf
cwde
movs
cmc
or
jbe
push
ins
mov
push
pop
adc
out
dec
lods
and
jnp
sub
inc
pop
mov
add
cld
mov
or
jb
popa
cmps
cmp
addr16
scas
jmp
add
push
int
faddp
arpl
cld
xor
test
popf
mov
jo
(bad)
and
sti
repz
ins
inc
jno
pushf
inc
mov
and
xchg
or
add
pop
inc
retf
push
adc
(bad)
mov
push
push
sbb
int3
(bad)
pushaw
cs
xor
jl
pop
imul
mov
xor
gs
jno
and
jle
test
addr16
cmp
cli
out
icebp
pushf
(bad)
lods
(bad)
int3
xor
(bad)
in
inc
sti
(bad)
int3
and
and
loopne
jae
outs
daa
fwait
pop
lea
push
jae
and
jle
(bad)
cld
lods
iret
out
das
nop
aas
xor
sbb
sub
sahf
repnz
ror
jmp
outs
add
enter
les
and
pushf
pop
push
xchg
pop
out
fsubr
pushf
adc
and
inc
inc
pop
mov
outs
loop
call
je
xchg
lods
cmps
je
cmp
into
gs
mov
push
fimul
in
mov
aad
in
inc
adc
(bad)
dec
lds
fld
jo
sub
sbb
mov
cmp
and
clc
mov
mov
sbb
xlat
std
ja
clc
dec
adc
or
rcl
xchg
fidiv
cld
cli
repz
mov
ret
(bad)
out
add
ror
int3
pop
and
jnp
xor
aam
sti
add
pop
dec
cmp
mov
pop
fild
scas
push
push
mov
pop
mov
push
inc
push
daa
cmp
mov
test
inc
xchg
sahf
and
adc
add
ss
mov
mov
jge
push
repnz
adc
mov
mov
jnp
imul
aaa
inc
rcl
fmul
or
xor
cmps
cld
jnp
cmp
xlat
pop
scas
adc
call
jmp
cwde
add
fidivr
adc
mov
inc
fwait
or
fadd
and
or
fisttp
mov
retf
mov
pop
adc
mov
jnp
aaa
xchg
dec
das
mov
add
leave
jno
sbb
sbb
cdq
adc
imul
rcr
mov
sbb
(bad)
out
add
(bad)
stc
dec
and
mov
hlt
mov
out
sbb
pop
icebp
cdq
ss
mov
adc
cmp
data16
imul
xchg
xor
js
cmp
jmp
cwde
push
fldenv
and
fs
pusha
ins
mov
std
add
aad
ret
std
cld
inc
out
xor
dec
jl
call
sti
mov
cmp
sbb
push
or
addr16
cmp
sub
inc
pusha
adc
inc
pop
push
push
call
mov
scas
stos
lahf
sub
sbb
fwait
out
dec
push
rcl
cmps
cmp
inc
cmp
daa
sbb
sub
stos
xchg
into
xor
pusha
jmp
pop
rol
aad
ja
sub
test
mov
jo
adc
test
jne
test
jmp
mov
cmp
mov
inc
call
inc
(bad)
shl
popf
in
push
push
call
and
stos
(bad)
enter
out
aam
retf
dec
test
stos
xor
cmp
cmps
or
add
fs
cmp
into
retf
enter
test
cmp
(bad)
in
in
inc
cli
pop
jmp
aaa
cld
cld
aaa
mov
data16
ret
mov
jecxz
xlat
outs
mov
mov
js
(bad)
dec
ror
add
jmp
pop
adc
sbb
sub
cmp
jnp
mov
call
outs
cmp
das
out
mov
and
bnd
jge
pop
mov
add
outs
xchg
fld
cld
test
repnz
mov
cmp
mov
inc
out
test
test
push
xor
(bad)
xchg
mov
xor
stos
retf
push
mov
sti
fdiv
jmp
hlt
lds
loop
iret
inc
and
mov
cmp
pusha
mov
mov
xchg
(bad)
adc
cmp
stos
jmp
stos
xchg
push
loopne
lea
mov
push
pop
out
sahf
xlat
inc
pop
movs
cld
xor
rcr
ins
or
pop
mov
adc
xchg
pushf
xchg
shl
pop
ins
adc
sub
data16
fsub
(bad)
inc
jae
xchg
cli
sar
cmp
jno
xor
mov
mov
mov
inc
test
push
inc
jle
jnp
and
mov
stos
(bad)
(bad)
lock
jmp
mul
xchg
push
jne
ss
mov
push
data16
push
in
sbb
out
push
out
push
xchg
vmovaps
jg
int3
and
loop
leave
dec
jl
or
dec
push
push
shl
pop
mov
out
fisubr
stos
dec
jmp
cli
ss
push
mov
or
aam
test
repnz
add
or
shl
cmp
mov
outs
and
out
adc
jne
out
mov
pop
sbb
out
mov
sbb
stos
fucomip
inc
sbb
in
cmp
xor
imul
jb
ret
jge
stos
(bad)
push
mov
stos
sub
(bad)
xor
cmp
neg
stc
and
popa
mov
mov
scas
dec
cmp
cs
pop
inc
out
dec
adc
adc
cmps
xchg
dec
mov
iret
jmp
mov
dec
mov
test
out
cmps
fnstcw
repz
cmps
cmp
pop
aad
lock
cmc
lods
pushf
cli
add
dec
pop
in
and
ret
arpl
ret
cld
jp
pop
mov
xchg
jecxz
and
dec
xor
sub
dec
pop
clc
jmp
movs
pushf
ficom
out
hlt
add
shl
test
sbb
rcl
cmp
xchg
or
jmp
sbb
stos
mov
mov
outs
dec
mov
push
dec
movs
mov
mov
inc
rcr
jb
test
imul
fsubr
gs
mov
arpl
fsub
dec
jns
mov
sbb
push
(bad)
daa
mov
ret
out
(bad)
out
dec
(bad)
mov
inc
xlat
or
dec
inc
retf
xchg
add
or
or
popa
sahf
sub
scas
xor
out
adc
and
jge
fistp
pop
inc
sub
adc
pop
(bad)
cdq
cmp
iret
vmread
and
jle
xor
pop
push
fsubr
cmp
out
or
dec
sbb
dec
inc
ins
inc
mov
je
jecxz
add
pop
fiadd
fisubr
sar
inc
nop
sbb
mov
(bad)
jecxz
int3
sub
loopne
sbb
push
cmp
repnz
adc
inc
loop
pop
pop
mov
lock
mov
clc
fisub
stc
outs
pop
clc
and
shl
mov
sti
ja
test
scas
ret
(bad)
loope
outs
stos
(bad)
sub
setbe
jns
sub
adc
add
mov
les
lods
in
push
enter
dec
or
push
xchg
je
shr
jae
int
adc
iret
loop
lahf
mov
outs
repnz
add
xchg
xor
inc
ds
jne
mov
addr16
mov
pop
or
fcmovne
or
adc
mov
mul
pop
hlt
shr
(bad)
pop
ja
scas
push
add
or
dec
add
xchg
pop
sbb
je
nop
das
mov
sbb
retf
or
mov
icebp
inc
ret
pop
fdiv
pop
cmps
jmp
stos
test
or
mov
jmp
repnz
pusha
adc
in
fcmovb
outs
jp
or
f2xm1
xor
cld
es
pop
adc
pop
pop
not
shr
sbb
jle
inc
jmp
les
pop
add
shr
pushf
(bad)
cli
lahf
retf
(bad)
sbb
je
iret
inc
scas
sti
add
adc
jmp
or
lahf
scas
push
xchg
push
outs
xchg
aad
dec
mov
addr16
lods
or
int3
add
int
or
mov
add
and
test
push
mov
(bad)
test
jbe
inc
xchg
push
lahf
push
stos
pop
xchg
mov
addr16
sub
hlt
pusha
mov
test
mov
add
ins
mov
inc
(bad)
not
stos
stos
mov
lods
out
fimul
enter
imul
or
jmp
imul
loopne
loop
cmps
add
movs
lods
dec
jb
rep
stos
bnd
arpl
sbb
mov
mov
or
mov
push
inc
inc
dec
js
adc
xor
ja
or
repz
movs
stos
xchg
sbb
(bad)
add
jbe
dec
dec
mov
nop
mov
sbb
xor
add
xchg
pop
xchg
xor
sbb
gs
jae
adc
or
stos
cmp
jmp
xor
xchg
dec
stos
fidivr
sub
clc
scas
ret
and
add
mov
adc
xchg
jle
fbstp
mov
sub
stos
and
or
mov
mov
rcr
repnz
jb
or
rol
or
mov
xchg
or
pusha
lea
lea
mov
and
int3
xor
sub
push
mov
and
fimul
pop
(bad)
sbb
mov
dec
popa
lods
int3
dec
mov
cdq
loopne
and
aaa
xor
push
add
inc
scas
mov
repnz
ror
mov
mov
lea
hlt
ja
fdivr
jmp
into
cwde
pop
mov
add
push
js
and
loope
xor
inc
and
stc
add
cmps
push
aad
xor
std
rol
or
push
adc
xchg
jl
popf
and
add
mov
fs
mov
cs
xchg
pop
idiv
mov
mov
test
mov
xchg
xchg
inc
test
shr
or
inc
xor
sbb
ficomp
cli
push
in
xchg
mov
mov
cmp
jmp
pop
imul
repz
and
ror
addr16
sub
lods
int3
mov
shr
aad
out
mov
sub
fdiv
jle
loop
push
call
cwde
lahf
sub
pop
push
lods
ret
nop
inc
cmp
sbb
mov
arpl
inc
mov
aaa
test
xor
mov
dec
ja
sbb
aas
or
jmp
sbb
push
xor
mov
test
pop
clc
iret
mov
jg
sbb
dec
sub
mov
fwait
cmp
popf
or
in
jae
es
push
and
sbb
xor
adc
mov
adc
and
and
ret
dec
adc
xchg
dec
lahf
scas
popa
idiv
in
dec
mov
lahf
test
arpl
adc
stos
xor
popf
mov
inc
dec
cmc
iret
es
mov
or
sbb
push
push
pop
ss
inc
arpl
push
push
jmp
scas
test
mov
mov
dec
shl
and
add
and
into
arpl
jnp
ds
shr
pop
fst
(bad)
(bad)
sub
push
fadd
jg
mov
popf
xchg
jge
mov
pop
inc
stos
mov
add
cmp
aad
mov
mov
js
jg
mov
xchg
push
test
int
xbegin
xor
push
ret
sti
jp
push
cmp
ins
aas
or
and
icebp
jge
jp
(bad)
sub
in
sub
adc
push
mov
push
shl
mov
inc
dec
push
sub
dec
xchg
nop
pop
cmp
loope
mov
push
add
bound
push
pop
dec
push
out
jmp
inc
arpl
sbb
jge
and
sub
jl
or
cld
in
jnp
pop
push
stos
mov
test
mov
mul
es
scas
popf
pop
movs
(bad)
call
jl
mov
jl
es
and
add
pop
push
jge
(bad)
clc
sbb
lds
icebp
stos
or
repz
fcmovu
jp
xchg
sbb
rol
ja
cmp
fild
ficomp
hlt
sbb
nop
loope
dec
mov
stc
add
jnp
div
and
dec
test
xchg
out
cmp
pop
scas
and
rcl
fild
sub
sbb
push
or
pop
mov
retf
mov
mov
mov
in
mov
cmc
pop
jl
xchg
add
inc
and
jp
cmp
pop
clc
popf
ins
fnstsw
mov
sbb
fldcw
adc
sub
jns
add
push
dec
xor
lock
rcl
pop
dec
mov
sub
mov
loopne
mov
dec
inc
movs
imul
out
lds
jl
jo
sbb
leave
jae
data16
inc
retf
jmp
repnz
not
add
jns
fst
scas
add
js
mov
jmp
lock
jnp
lods
nop
pop
adc
cmp
stc
fbld
xchg
ins
sahf
xlat
jecxz
pop
mov
jp
xchg
mov
enter
jmp
adc
mov
scas
mov
aad
lods
push
mov
push
xor
(bad)
mov
cmc
mov
cmps
dec
rcr
scas
adc
mov
push
mov
push
ja
jno
repz
jb
xor
dec
daa
mov
es
mov
dec
and
inc
push
or
inc
outs
mov
ror
pop
stos
in
sbb
iret
fdiv
jo
lds
dec
test
lock
push
int
rcl
les
sub
push
push
add
or
pop
cmp
addps
pushf
mov
dec
out
add
jge
jg
cdq
iret
sub
jmp
pop
bnd
sub
(bad)
scas
popa
popf
jne
jecxz
adc
push
sub
mov
sti
dec
es
xlat
cmp
cmp
inc
jae
out
mov
lea
adc
xor
push
or
outs
sub
dec
and
iret
icebp
sbb
xlat
pop
js
dec
stc
retf
push
aaa
imul
and
pop
leave
pop
imul
mov
lea
xchg
ror
add
movs
push
mov
inc
push
jb
int3
sub
or
adc
jl
xlat
add
(bad)
pop
std
fs
aaa
mov
pop
cmp
es
cmp
mov
cmps
cs
sub
xor
jns
sbb
mov
dec
xchg
lds
out
cmp
dec
dec
pushf
call
ds
dec
sbb
lock
xchg
push
loope
push
pop
jbe
jl
nop
jo
add
inc
mov
mov
mov
push
pushf
cmps
xor
loope
das
jg
inc
test
and
or
arpl
mov
dec
cdq
mov
cmp
sti
sub
inc
idiv
xor
imul
cmp
xor
and
into
pop
outs
inc
push
and
inc
dec
or
leave
test
cs
cmc
into
pushf
popa
dec
jae
fisttp
jmp
inc
fidivr
mov
out
lea
inc
pop
mov
push
push
and
in
std
dec
imul
hlt
dec
jp
test
shr
or
data16
fwait
jp
sub
in
adc
scas
xor
mov
xchg
jae
adc
nop
xchg
mov
mov
inc
jl
jmp
push
addr16
scas
inc
xor
cmps
out
dec
cmp
sub
mov
lods
ins
mov
push
cmp
ins
sahf
and
mov
and
call
jns
pop
add
imul
out
pop
mov
push
jmp
aaa
mov
stos
sar
lea
jne
and
sub
push
out
rcr
sub
mov
test
push
jnp
icebp
jns
add
gs
call
fdivr
pop
cwde
mov
nop
cmp
lahf
xchg
jge
repz
jge
imul
pushf
sbb
mov
scas
sub
outs
sbb
xor
cdq
dec
add
icebp
mov
mov
sbb
cld
ins
dec
pop
mov
dec
mov
popa
outs
rcl
sbb
push
(bad)
ds
sub
sbb
pop
dec
out
fcmove
push
lock
rol
das
or
or
inc
fild
xor
loop
out
mov
or
xchg
push
cmps
mov
stc
lock
shl
mov
sub
pop
loope
ja
xchg
or
cmp
add
addr16
xor
les
loop
xor
jbe
or
jno
add
and
jmp
movs
adc
cmp
dec
outs
ret
scas
std
(bad)
lahf
xchg
push
push
(bad)
cld
inc
(bad)
iret
jmp
js
(bad)
ret
jp
aam
aaa
sub
and
pop
sbb
cmp
dec
add
and
in
out
xor
stc
sar
or
or
and
add
jge
add
sub
fstp
ss
scas
xorps
inc
push
(bad)
fcmovnu
dec
dec
sub
shl
lea
add
fisub
add
jmp
mov
inc
cmp
arpl
sar
dec
scas
push
mov
mov
cli
sbb
mov
push
dec
inc
aad
fmul
lods
sar
repnz
mov
mov
not
paddq
adc
loope
or
and
inc
mov
loope
jg
mov
or
in
iret
cmp
fimul
add
xchg
dec
mov
aad
(bad)
mov
leave
fmul
out
jns
ds
xchg
push
push
sub
fisttp
mov
mov
xor
mov
ja
hlt
add
sbb
std
mov
fld
hlt
test
scas
cmp
loopne
jge
jne
bound
arpl
xor
mov
sbb
mov
add
in
arpl
sahf
pop
xchg
push
mov
loope
cmps
xor
lock
shl
loop
pop
dec
sbb
mov
sbb
out
push
lahf
mov
xchg
ins
xor
pusha
loopne
aaa
mov
jp
mov
mov
in
push
xchg
out
cli
cld
aam
lahf
add
mov
stc
out
cmp
in
cld
dec
pop
cwde
and
daa
rcl
stos
add
inc
rcl
dec
stos
inc
jge
call
inc
fild
test
mov
push
addr16
mov
push
mov
in
inc
mov
inc
push
adc
mov
pusha
(bad)
pop
xchg
xchg
or
mov
ret
push
je
jns
inc
rep
shl
mov
mov
add
pop
ja
cmp
fild
xor
aas
and
aad
popf
add
fiadd
jns
mov
pop
mov
movs
cmp
sar
lds
fwait
push
and
xchg
adc
aam
fs
mov
lods
ja
fcmovb
sub
pop
cmp
xchg
loop
shl
icebp
push
push
mov
in
loope
(bad)
arpl
out
mov
pop
fisubr
bts
ss
push
lahf
push
mov
clc
cmp
test
jmp
hlt
xchg
nop
xchg
cmp
push
sbb
or
mov
mov
or
shl
js
inc
es
ins
cmp
dec
rcr
sbb
scas
add
mov
stc
int3
arpl
mov
mov
icebp
dec
inc
xchg
push
or
inc
std
xor
fldcw
shr
rcl
loope
nop
outs
inc
jnp
xchg
dec
ds
nop
shl
pop
call
xor
sahf
jge
pushf
push
push
sub
pop
ss
or
xchg
inc
leave
mov
retf
cmp
outs
stc
aad
push
ds
inc
fcomip
mov
outs
xchg
loopne
add
repnz
xchg
adc
xchg
sbb
pop
daa
jne
retf
rcl
adc
inc
test
cmp
bound
push
fbstp
movs
mov
mov
and
aaa
sbb
inc
pop
leave
lock
cs
mov
cmp
adc
dec
or
xchg
and
push
das
rcl
(bad)
shl
xor
inc
cmp
arpl
lods
leave
xchg
dec
xchg
mov
leave
cdq
cdq
and
rcl
icebp
dec
pop
cmps
aam
fs
inc
adc
cld
cmp
pop
jecxz
adc
sbb
dec
sahf
ins
push
aam
xor
cmp
jle
lods
or
mov
cdq
rcr
jmp
mov
inc
repz
sbb
jg
sbb
push
adc
xchg
or
sub
pop
add
mov
cs
ins
mov
mov
fucom
mov
test
or
pop
in
aaa
mov
mov
js
push
mov
imul
aam
fsub
dec
test
mov
add
pop
repnz
out
add
test
aaa
(bad)
cmps
pop
pop
xor
pop
test
in
adc
fnstenv
in
jmp
scas
push
je
push
sbb
jmp
add
leave
call
add
retf
xchg
call
aaa
out
dec
push
call
pop
mov
push
push
pop
cmc
(bad)
mov
stc
movs
xchg
pop
push
xchg
pop
mov
pop
mov
xchg
jecxz
xor
daa
and
test
or
and
sbb
inc
mov
cmp
sbb
cmp
jle
pop
mov
push
cmps
rcl
pop
inc
lds
push
or
sar
in
sti
pop
mov
retf
xchg
rcl
je
inc
and
js
aas
movs
icebp
adc
mov
mov
jmp
xchg
loop
jecxz
xor
jae
cli
jecxz
(bad)
sti
out
cmps
fwait
pop
adc
jno
push
jecxz
push
adc
push
cmc
mov
fscale
ins
(bad)
jne
mov
push
in
(bad)
scas
add
lock
inc
xchg
and
jl
outs
mov
out
jo
lock
out
ficom
mov
loop
mov
cdq
jge
dec
in
fnsave
aam
or
in
or
xor
out
stc
mov
loop
add
test
pusha
retf
sti
xor
clc
push
dec
inc
call
cmps
xchg
xor
scas
cmp
xchg
pop
xor
in
cmp
adc
sbb
out
push
pop
xor
jae
mov
cmp
dec
xor
rol
xor
and
mov
aam
(bad)
mov
sti
inc
jp
mov
std
xor
and
sub
leave
gs
and
mov
dec
icebp
test
mov
sbb
jbe
cmp
xchg
add
in
mov
mov
jl
mov
test
pop
test
sbb
arpl
cli
xchg
sbb
aad
push
mov
mov
mov
es
cmc
mov
xchg
ds
or
sar
lea
mov
mov
loop
sbb
fmul
ret
dec
mov
sub
xor
inc
mov
inc
pop
sub
das
pop
add
test
(bad)
es
pop
loop
outs
aam
hlt
push
mov
xor
jmp
ins
mov
cmc
cmp
ins
mov
xchg
test
(bad)
inc
cmps
or
jb
xchg
jmp
lea
nop
cmc
js
mov
out
sti
add
mov
scas
dec
mov
adc
push
mov
mul
push
call
imul
std
out
or
std
jns
xchg
(bad)
mov
adc
lods
dec
cdq
not
xchg
fwait
jle
and
leave
or
fwait
dec
mov
loopne
jns
ds
sti
ja
jnp
sbb
mov
inc
repnz
(bad)
lea
inc
fstp
fdivr
pop
and
int3
and
add
mov
(bad)
and
sub
call
(bad)
leave
mov
out
repz
inc
mov
adc
clc
jl
add
popf
cmp
or
call
add
pop
shl
mov
sbb
sbb
xchg
sbb
loope
and
ins
or
xchg
mov
mov
in
fstp
mov
cmps
(bad)
lds
adc
mov
jl
jnp
pop
jl
test
jge
pop
sbb
call
ds
retf
ret
imul
adc
sub
ret
loopne
std
leave
jne
nop
movs
movs
out
imul
hlt
(bad)
fdivr
push
xor
dec
pusha
inc
push
push
daa
xor
pop
fild
stc
mov
mov
cmp
adc
hlt
fwait
sbb
push
mov
mov
push
sbb
inc
jp
sbb
add
cmp
cmp
loop
adc
xchg
movs
sbb
push
pop
push
push
ret
xor
test
push
sahf
sbb
cmp
mov
sahf
cmp
xor
push
add
adc
leave
lea
adc
in
fnsave
aas
stos
add
pop
std
pushf
or
cmc
into
pushf
stos
push
ds
cmp
scas
call
push
push
mov
add
stos
or
in
and
cmp
(bad)
clc
fisub
(bad)
les
aaa
mov
daa
dec
mov
pop
and
jmp
in
fwait
shl
int
sbb
xor
lods
outs
(bad)
retf
pusha
pusha
or
inc
fsub
jno
pop
fisttp
jnp
sub
mov
in
das
out
mov
pop
ins
pop
inc
retf
mov
(bad)
add
push
push
fs
(bad)
sbb
inc
faddp
jmp
jecxz
mov
repz
or
in
aaa
lahf
push
gs
mov
sahf
xchg
push
cs
xor
in
mov
test
mov
mov
fdivr
add
jg
xor
rcl
(bad)
fdivr
std
je
ret
ja
int3
xor
add
not
icebp
aaa
xchg
jle
stc
mov
sar
int
or
adc
push
cmps
mov
int3
popa
xor
push
and
add
adc
xchg
or
popa
sbb
add
push
cmp
pop
sub
fcmovu
rol
cmps
mov
nop
jnp
hlt
xchg
scas
pusha
cmp
imul
xor
test
ds
mov
rol
les
mov
das
loopne
popa
test
mov
cdq
dec
pusha
pop
in
or
dec
ret
jbe
fcomp
sbb
loop
mov
mov
cmovnp
jb
daa
or
add
fisttp
idiv
ret
jns
inc
sbb
xor
sar
repnz
repnz
arpl
add
adc
mov
imul
xchg
mov
mov
fsubr
inc
mov
in
mov
mov
xchg
xor
dec
in
ds
push
cwde
int3
mov
jmp
out
je
mov
push
xchg
movs
and
pop
movs
mov
leave
sub
lods
(bad)
cmps
aam
and
lods
sub
or
or
jecxz
retf
jmp
cs
jbe
sbb
les
mov
cmc
fisub
push
dec
fdiv
jb
jmp
jmp
(bad)
jecxz
out
xchg
mov
dec
jae
aaa
adc
and
test
addr16
jge
push
pusha
pop
arpl
adc
mov
(bad)
(bad)
iret
sahf
add
and
ret
scas
cmp
xor
mov
sub
retf
cmps
add
jae
jno
dec
adc
popa
int
pushf
ja
aam
call
pushf
imul
icebp
xor
outs
imul
adc
aad
out
adc
fnsave
mov
add
add
push
push
out
lods
(bad)
push
jmp
rcr
push
mov
cmp
enter
sbb
or
scas
imul
fstp
mov
fmul
hlt
jp
out
ret
aad
add
mov
jmp
cmp
outs
retf
cdq
push
div
fidiv
ret
inc
add
(bad)
inc
inc
test
or
aas
xchg
es
and
in
mov
call
in
icebp
and
xchg
rol
(bad)
into
cwde
lock
int3
outs
je
push
xor
mov
cmp
ins
pop
add
jno
lock
cmp
jecxz
add
imul
mov
movs
and
outs
adc
sub
inc
sbb
mov
rcl
add
imul
or
xchg
ds
adc
rcr
stos
sub
es
pop
dec
push
push
push
xchg
ror
pop
sbb
push
inc
mov
jbe
mov
pop
add
sub
imul
ror
mov
int3
add
unpckhps
mov
call
movs
jmp
xchg
xchg
in
das
call
xor
push
cmp
xor
popa
add
lock
push
fsubr
fiadd
cmp
or
and
xchg
jl
cmp
(bad)
dec
shl
push
sahf
lods
cmps
xor
out
push
cmp
pop
ins
xchg
nop
stc
daa
ja
in
repz
pop
movs
test
add
cmps
fdivr
enter
and
in
imul
ds
dec
and
fsubr
in
push
in
data16
xor
cmp
enter
xchg
loopne
pop
mov
mov
mov
mov
add
or
pusha
in
and
jmp
sahf
fwait
pop
or
sbb
cmp
aaa
ja
cmps
in
aad
out
or
xchg
jl
jnp
or
sbb
bound
add
fld
movs
ins
cld
pop
xor
dec
xor
lods
mov
pop
shl
cmp
lahf
push
push
lock
xor
jl
fisub
jb
mov
mov
sub
cmp
aam
push
jno
lds
inc
cmps
hlt
mov
js
cmp
dec
mov
push
and
scas
push
pop
add
stos
shr
je
cs
sahf
and
les
(bad)
sti
jle
test
fdiv
mov
int3
hlt
stc
xor
jo
mov
mov
shl
popf
dec
push
outs
ss
in
mov
sahf
mov
ds
mov
mov
mov
test
sub
cmp
and
sub
fild
stc
xchg
jge
int3
adc
cmp
dec
dec
add
clc
mov
fsub
popa
cmc
cmp
(bad)
ret
xchg
inc
inc
mov
adc
call
mov
test
mov
dec
inc
stc
dec
mov
adc
sar
and
sub
dec
stos
push
mov
shl
sbb
fcomp
stos
stos
sbb
xlat
stc
out
sub
push
xchg
jmp
fsub
xor
and
ds
sub
retf
cmp
ins
fsub
mov
pushf
xchg
jae
int3
mov
mov
xchg
mov
cli
ud1
ret
cmp
add
xlat
test
mov
rcl
dec
pop
mov
pop
outs
cs
loopne
pop
sbb
mov
add
jne
cdq
pop
out
dec
xchg
push
mov
ficomp
push
scas
inc
add
or
add
loop
sbb
out
xor
daa
retf
cmps
mov
jbe
inc
mov
mov
out
rcl
aam
dec
inc
jle
aam
stos
ret
adc
push
mov
std
test
sub
mov
dec
fistp
add
lea
pop
ins
mov
jno
sbb
jb
arpl
add
les
nop
out
adc
mov
jne
fsubr
int3
adc
(bad)
pop
pusha
push
lods
push
stos
mov
push
pop
sbb
inc
fsub
pop
test
(bad)
sub
(bad)
adc
fwait
gs
scas
ficom
cmp
xor
ret
push
xor
test
adc
mov
lds
pop
clc
push
pop
daa
push
test
js
repnz
push
xchg
(bad)
push
dec
dec
jmp
fstp
jae
jmp
jb
imul
les
ja
cwde
mov
cli
mov
ins
setg
hlt
inc
ds
cwde
loope
iret
stos
xlat
hlt
loopne
lods
int
ja
push
sbb
or
jecxz
dec
and
push
push
sub
push
out
cmp
nop
inc
sub
push
retf
adc
aad
mov
add
mov
pop
xchg
xchg
ins
rol
or
repnz
mov
jo
dec
adc
sub
pop
and
pop
pop
pushf
and
dec
cli
sub
push
test
add
dec
adc
inc
mov
and
sbb
test
int3
fcmovne
test
add
loope
test
inc
mov
jno
xchg
inc
imul
fcomp
and
xchg
addr16
sbb
imul
loope
dec
adc
jae
sub
push
mov
stos
fdiv
aas
(bad)
ror
(bad)
pop
ins
xlat
and
out
lock
mov
std
mov
mov
xchg
add
mov
dec
cdq
rcpps
fistp
cs
(bad)
idiv
jb
add
out
int3
call
retf
cld
fdiv
aam
lahf
and
or
dec
sub
repz
or
cli
pop
repnz
(bad)
shl
and
lock
or
fld
mov
cmp
or
sub
sbb
xchg
push
cmp
scas
and
outs
je
out
outs
or
add
pop
lahf
cmp
pop
mov
or
pusha
ficomp
popa
cmp
stos
lds
out
cmp
add
and
dec
and
pop
xchg
inc
mov
mov
push
xlat
mov
jle
dec
(bad)
mov
loope
idiv
outs
mov
test
test
jmp
popf
lods
cmp
imul
addr16
test
sahf
jmp
je
(bad)
test
hlt
fdivr
mov
add
(bad)
int3
adc
cmp
push
cmps
daa
mov
mov
mov
jo
mov
mov
lahf
inc
mov
int
std
pushf
ins
(bad)
dec
lahf
jp
adc
xor
shl
ins
mov
xor
push
sub
fmul
sbb
pop
call
imul
jmp
call
retf
ret
pop
stos
(bad)
xor
fs
lds
call
or
cmp
out
dec
fcom
popf
adc
adc
repnz
ret
or
and
shl
push
pop
cmc
idiv
jbe
mov
ret
cdq
mov
jnp
fs
loop
mov
jmp
mov
call
in
xchg
xchg
repz
adc
push
mul
shr
mov
xchg
mov
test
dec
pop
out
cmp
std
jp
inc
cs
popa
mov
ins
xchg
jle
jp
push
pop
shl
xor
iret
(bad)
lods
data16
(bad)
addr16
(bad)
ret
cdq
push
pop
adc
and
lock
aaa
xchg
xchg
outs
(bad)
mov
sti
xchg
cmp
fwait
sahf
fucomi
and
cmp
xor
mov
jnp
test
aas
cld
lea
adc
mov
mov
cmp
cmp
in
xor
mov
imul
sbb
nop
sub
push
jns
cld
retf
aaa
gs
push
xchg
out
mov
sbb
mov
mov
retf
js
ret
cmp
mov
xchg
(bad)
dec
push
push
ja
mov
jbe
add
ds
adc
add
mov
sahf
dec
mov
push
fsub
sbb
leave
pusha
fld
xchg
fmul
pop
dec
addr16
stos
es
mov
mov
dec
int
fisttp
jno
cmp
fistp
ins
pop
gs
es
xchg
mov
sbb
inc
in
sub
or
inc
adc
clc
loop
or
fisub
jecxz
outs
or
sub
fcom
add
push
jae
adc
ret
sub
repz
fwait
jge
std
shl
lds
xlat
mov
mov
mov
adc
pop
outs
xor
xchg
inc
xchg
mov
sub
and
mov
sahf
xchg
rol
and
pop
add
sbb
cmp
adc
push
ja
ret
scas
in
ror
pop
xor
sahf
clc
cmps
into
mov
loopne
sahf
xor
retf
sbb
dec
aaa
test
and
cmp
shl
addr16
sub
xor
cmc
adc
movs
(bad)
cli
push
push
test
pop
jp
inc
mov
loop
fsub
ja
jne
(bad)
sbb
jl
outs
pop
in
aas
mov
out
in
or
scas
dec
mov
xor
dec
iret
pusha
cmp
add
push
daa
adc
or
sgdtd
out
and
sbb
add
imul
mov
int
xchg
cld
repz
mov
fwait
ror
retf
cli
jno
mov
add
mov
dec
sub
pop
mov
shl
adc
pop
mov
lock
dec
shl
loopne
and
sahf
rcl
jo
and
inc
push
jno
div
or
inc
fcom
jecxz
pop
inc
inc
in
inc
mov
mov
or
rol
mov
aad
mov
ret
aaa
mov
xor
and
ret
xchg
test
push
dec
sbb
arpl
loope
fcom
retf
xor
call
mov
inc
sub
test
imul
pop
push
jge
or
jbe
out
and
imul
or
lahf
jae
jb
retf
pop
rep
sahf
add
mov
jg
pop
mov
or
out
lea
dec
inc
sar
push
and
add
or
aaa
ret
nop
dec
ss
in
mov
push
shl
das
mov
pop
and
fcomp
movs
or
js
pop
sub
fstp
cmp
adc
popf
stos
in
neg
sbb
les
cmp
jbe
ds
inc
sbb
rol
inc
or
pop
add
xor
xchg
mov
mov
push
xor
or
sar
cmc
sub
lods
in
cmc
push
(bad)
mov
mov
dec
loop
and
sbb
jo
inc
data16
leave
mov
add
fs
adc
cmp
fnsetpm(287
outs
ror
dec
lock
in
jl
mov
pop
push
into
mov
sbb
and
add
dec
enter
dec
test
pop
jl
adc
sub
popf
aaa
or
out
jmp
mov
xor
pop
and
sbb
pop
scas
jo
mov
jg
push
pop
call
xchg
in
jle
mov
mov
xlat
fnsave
mov
add
and
popf
data16
xor
fidivr
pop
aad
dec
mov
nop
(bad)
adc
mov
or
xor
sub
clc
inc
and
inc
push
rol
fisub
mov
out
jno
das
(bad)
loop
jmp
mov
sub
sub
jg
pusha
xchg
cwde
lods
mov
or
push
sbb
push
sti
fisubr
sahf
scas
dec
in
push
ror
jne
xlat
dec
sub
ret
xchg
add
mov
inc
test
shl
jae
jecxz
cld
push
xor
lock
aaa
cmc
mov
out
sbb
mov
pusha
inc
sti
xbegin
push
inc
fldenv
jle
clc
xchg
push
mov
cmp
aam
enter
test
retf
add
xor
(bad)
cld
out
jae
leave
or
rcr
jbe
or
rol
mov
xor
pop
push
enter
add
cmp
inc
jg
in
or
pop
mov
cmc
loopne
jle
popa
gs
and
push
or
push
ja
xchg
iret
fwait
sub
sahf
jne
inc
sbb
gs
int3
rcr
jmp
rcr
or
(bad)
cmp
std
shl
(bad)
and
mov
sbb
xlat
sub
out
out
cdq
push
mov
pop
cmp
sbb
aas
push
hlt
jo
iret
inc
es
enter
cld
xchg
jmp
jge
inc
mov
test
jle
shl
loop
pop
sar
jns
ins
lock
mov
mov
push
sahf
jbe
xchg
sbb
and
mov
nop
(bad)
mul
mov
inc
data16
loopne
loopne
jle
and
test
mov
stc
sar
xchg
dec
mov
sub
mov
jecxz
and
xor
adc
mov
daa
(bad)
push
xchg
retf
std
pushf
xor
mov
add
push
push
inc
bswap
adc
lea
imul
sbb
repnz
test
pop
int
lahf
push
mov
ud2
xor
adc
cli
aam
push
cmp
pop
movs
sub
stos
icebp
js
(bad)
outs
pop
scas
pop
stos
cmp
push
ja
dec
xor
loopne
mov
call
dec
xchg
sahf
push
sbb
mov
mov
cmps
xchg
xor
or
aad
jl
xor
add
jnp
fcmovnb
loop
retf
mov
bnd
mov
lods
jl
cmp
fst
sbb
inc
pop
int3
loopne
inc
cs
stos
mov
int3
pop
pop
movs
sti
test
sub
clc
sub
imul
pop
and
mov
or
push
mov
rcl
bound
xor
scas
push
test
js
int3
cmp
fld
enter
ja
mov
xchg
sbb
call
cmc
cmps
out
sbb
push
xor
inc
mov
xchg
imul
mov
jl
in
ja
lods
bound
cmp
aas
push
mov
ret
cli
sbb
fstp
adc
sbb
xchg
retf
add
add
ds
inc
xor
neg
or
aaa
and
mov
les
scas
mov
xor
jns
loopne
adc
pusha
xchg
mov
xchg
sbb
daa
mov
cdq
retf
outs
xor
daa
in
mov
rcr
sti
aad
mov
inc
lds
nop
imul
jle
rol
xchg
cmc
(bad)
and
loop
sbb
int
adc
xchg
or
int3
adc
push
into
loopne
cdq
mov
cmps
pop
pop
xor
sahf
(bad)
movs
sbb
adc
mov
push
pop
or
xor
fld1
in
outs
adc
jmp
pop
test
pop
stc
bound
popf
push
add
mov
push
cmp
int3
mov
cmps
mov
mov
mov
in
push
sti
mov
xor
lahf
ds
push
dec
dec
movs
cli
arpl
jne
xor
cli
xor
rcl
or
xchg
jb
dec
xor
push
or
mov
sub
out
cmps
lahf
xor
aaa
mov
dec
or
cmp
sbb
and
int
sahf
xchg
in
outs
rcl
xor
fisubr
push
dec
call
mov
sub
pop
or
aas
mov
sub
push
fcomp
fcmovnbe
dec
push
js
add
mov
sbb
cmp
pop
cmps
(bad)
jecxz
inc
dec
add
cli
popa
push
inc
push
fiadd
pop
adc
adc
and
pop
cwde
clc
xor
sti
vpmacsdqh
lods
lods
push
cdq
and
adc
cmp
pop
in
and
or
iret
lock
popf
cmp
repz
and
hlt
mov
gs
stc
xchg
std
jbe
lods
pop
ss
or
inc
or
sub
xchg
je
sub
push
popf
sbb
jne
dec
loopne
xor
fld
cmp
loop
push
(bad)
or
jns
cmp
jb
lods
push
aam
pushf
dec
mov
ds
pop
mov
dec
push
loop
sbb
mov
popa
retf
frstor
xchg
hlt
fnsave
je
xchg
jnp
loopne
ret
repnz
push
pop
addr16
aam
mov
adc
shr
xchg
scas
hlt
stos
add
enter
inc
sub
imul
push
in
push
jns
lahf
rcr
mov
jge
ret
or
xchg
pop
call
mov
int3
or
push
test
(bad)
jns
jns
push
xchg
adc
(bad)
int3
mov
add
adc
es
jnp
arpl
test
lds
push
sbb
mov
mov
out
scas
mov
sti
rcr
xor
nop
sub
(bad)
mov
mov
push
sbb
pop
and
and
mov
mov
jl
pusha
sub
hlt
cmp
adc
push
cmc
loopne
js
fsub
xchg
pop
movs
ja
ja
xchg
jno
dec
push
push
add
sbb
xor
pushf
in
aad
cmp
mov
inc
nop
jg
movs
(bad)
call
mov
xchg
jp
into
sar
mov
repz
ds
jno
aaa
fidivr
adc
in
cmp
out
inc
loopne
mov
add
add
and
ins
dec
cmc
adc
mov
pop
das
and
sbb
adc
icebp
cs
pop
fldcw
add
dec
jno
pusha
ins
outs
mov
pop
js
test
push
aas
push
dec
jge
cmp
das
lock
sub
inc
jecxz
inc
cld
jbe
push
(bad)
jbe
push
sbb
out
jl
scas
mov
(bad)
push
setnp
jo
xchg
mov
xchg
pop
test
in
fneni(8087
into
pop
sar
sub
fisubr
enter
(bad)
loop
xchg
enter
aaa
xor
(bad)
ret
mov
xor
mov
add
pop
stos
sub
addr16
push
dec
push
popa
shl
or
inc
repz
ret
out
repz
push
pop
les
mov
nop
test
sti
dec
push
xchg
xor
daa
test
adc
aad
mov
dec
into
pop
inc
aam
in
bound
adc
xor
mov
and
push
lds
mov
cmc
add
cmp
and
push
xor
mov
xor
cmp
or
loopne
pop
popf
shl
aaa
icebp
or
or
xlat
aad
xchg
and
add
ja
std
jnp
outs
cmps
dec
enter
push
dec
fst
add
pop
aam
das
pop
aam
cs
bound
pusha
lock
adc
push
mov
daa
mov
in
cmp
and
test
cmc
mov
or
dec
cs
cmps
gs
and
sti
push
es
push
in
inc
fucomip
xor
pop
jb
push
das
mov
push
mov
push
test
mov
sub
sub
and
dec
jae
inc
jp
(bad)
mov
push
test
mov
fcmove
enter
mov
sbb
inc
pop
sub
cmp
adc
xchg
sbb
ficomp
scas
jg
mov
pop
xor
iret
jnp
ret
call
mov
sti
mov
pushf
mov
xor
movs
add
add
dec
sbb
repnz
mul
xor
mov
sbb
mov
xchg
stc
test
mov
imul
(bad)
pop
cli
popf
cmp
std
add
push
in
stos
xchg
xchg
das
daa
fstp
sub
xchg
mov
sub
adc
jbe
and
inc
adc
cmp
jnp
lds
nop
mov
repz
dec
clc
call
imul
dec
xlat
popa
adc
push
xlat
adc
out
jo
sbb
xchg
fld
inc
jle
inc
hlt
inc
fldcw
cmp
out
adc
pcmpgtd
inc
(bad)
fmul
lock
add
pop
xor
inc
(bad)
mov
data16
add
and
mov
cmc
icebp
add
bound
pop
arpl
gs
dec
out
out
mov
jl
dec
ficomp
into
cmps
or
pop
scas
imul
out
or
xlat
jae
mov
enter
dec
sbb
dec
add
sub
push
jb
dec
je
loope
cwde
(bad)
iret
ret
and
push
in
xor
cli
or
in
das
xchg
inc
sub
leave
pop
data16
jl
les
daa
pop
mov
test
loopne
cdq
mov
pop
push
mov
push
call
pop
fist
sbb
stos
xchg
xor
inc
xor
push
into
jno
mov
shr
popf
sub
fwait
jmp
inc
xchg
jmp
and
and
jmp
movs
sub
pop
test
or
push
idiv
pop
dec
xchg
lea
adc
sub
mov
push
(bad)
cli
and
sbb
sub
inc
or
aad
cmps
mov
clc
add
xor
or
xor
dec
cld
outs
cmp
mov
and
mov
push
imul
add
push
inc
sub
or
mov
push
xchg
push
jle
shl
retf
scas
jg
out
adc
adc
add
and
mov
xchg
test
sbb
pusha
dec
mov
shl
jne
push
mov
out
add
fmulp
dec
gs
jl
popf
push
jbe
ja
movlps
ja
mov
jns
pop
out
inc
xchg
push
mov
cmp
push
or
add
fs
jno
aam
xor
xchg
pop
sbb
fistp
test
movs
sbb
cmp
add
sti
jp
test
inc
inc
shl
pop
xchg
push
dec
dec
cmp
mov
mov
arpl
rol
sub
gs
cmps
call
pop
fisub
retf
test
loope
pop
lds
xchg
jnp
mov
xor
clc
mov
mov
push
leave
inc
int3
mul
fnsave
aaa
les
outs
popf
data16
cmp
mov
xchg
cmp
cmp
fdivp
push
xor
jnp
jp
sub
adc
cmc
scas
sub
mov
inc
loopne
arpl
pop
retf
sbb
scas
std
jl
adc
push
or
hlt
sub
jae
and
hlt
add
sbb
adc
sub
imul
dec
push
(bad)
pop
ja
pop
cmp
(bad)
hlt
enter
xchg
mov
ins
ficom
ds
mov
fstp
repz
xchg
popa
inc
arpl
push
mov
add
adc
lods
enter
xchg
cmp
or
jns
aad
cdq
and
retf
ja
out
arpl
sar
out
dec
push
jecxz
and
cwde
pop
xor
inc
adc
cli
add
xchg
push
xchg
ins
push
sbb
add
repz
mov
popa
jmp
or
aad
or
clc
mov
and
xchg
ins
and
xor
pop
mov
ins
mov
add
inc
jns
loopne
test
and
retf
xchg
pop
sbb
test
xchg
pop
cli
push
das
jns
div
ficom
pop
in
retf
sbb
adc
bsr
pop
and
or
iret
adc
jnp
ret
jnp
mov
addr16
mov
fwait
ins
jo
mov
ss
loop
pop
ficomp
call
fidivr
jmp
out
loopne
jle
ret
cmps
js
and
fadd
pushf
and
xchg
jb
and
push
xchg
call
xor
sahf
add
pop
sbb
test
sub
movs
push
pushf
xor
das
pop
(bad)
cmp
mov
in
cmp
jl
xchg
jno
ins
xchg
call
pop
mov
call
ds
retf
inc
test
(bad)
std
popf
nop
push
jp
and
mov
aam
mov
pushf
scas
ja
in
sti
das
ss
xchg
add
pop
mov
mov
es
sub
test
add
xor
jle
sub
outs
mov
add
test
stc
dec
mov
cwde
into
or
shl
push
adc
mov
inc
push
stc
or
jns
jmp
or
push
imul
xchg
xor
loope
inc
repnz
inc
(bad)
shr
mov
hlt
ret
xrelease
scas
or
fiadd
loop
ror
in
fcomip
sar
inc
xchg
aaa
jnp
int
sbb
fimul
ins
pushf
enter
std
fisub
dec
nop
mov
pop
sub
pop
and
retf
sub
loope
ins
jmp
xor
push
dec
cmp
mov
dec
adc
(bad)
sbb
ror
cmp
mov
or
mov
adc
(bad)
pop
ss
dec
jo
dec
dec
or
pop
and
pushf
scas
lds
mov
and
adc
add
pop
test
push
xchg
inc
out
adc
mov
les
shr
stos
les
dec
dec
dec
xlat
mov
mov
fistp
jne
mov
jb
cmps
cs
stos
loop
rdtsc
mov
mov
mov
pusha
retf
mov
xchg
cmp
movs
cs
shl
out
out
push
cmp
loope
or
push
sub
movs
inc
call
pop
test
push
call
jnp
xchg
cmps
mov
mov
and
fisub
dec
mov
scas
jb
add
sbb
xchg
push
cmp
inc
pop
enter
ja
mov
push
sbb
and
or
and
push
adc
fdivr
idiv
jae
mov
xchg
stos
sbb
push
xchg
gs
push
mov
sub
sbb
or
xor
mov
inc
cs
das
test
xchg
nop
arpl
pop
xchg
jo
loopne
xor
shl
test
fcomip
fild
bound
sbb
out
cmc
fcomp
ret
lds
ret
icebp
sub
xchg
fsubr
div
add
cdq
jmp
and
pop
retf
and
cmp
push
mov
push
mov
das
mov
test
mov
adc
movs
ds
mov
or
sub
popf
in
(bad)
scas
sub
outs
rol
(bad)
xchg
inc
out
or
(bad)
in
bound
mov
adc
pop
mov
sbb
mov
adc
xchg
jecxz
adc
xor
hlt
mov
test
cwde
xor
sub
cmp
add
and
dec
push
mov
popf
push
ds
mov
fnsave
dec
loope
lods
ror
int3
or
fist
pop
mov
das
mul
sar
dec
lahf
loope
lahf
pop
push
sti
jl
shr
pop
fimul
add
in
cld
call
aam
sub
rol
add
test
cmps
stc
pusha
mov
repz
aam
dec
adc
(bad)
mov
js
or
es
mov
fcmove
sbb
ins
mov
cmps
std
pop
sbb
dec
pop
retf
lahf
sbb
mov
adc
push
scas
sub
rol
popw
imul
scas
jno
sbb
fwait
mov
dec
cwde
fidivr
xchg
push
cmp
inc
movs
(bad)
pushf
fadd
ret
movs
add
popa
fisubr
jae
cmp
daa
js
add
(bad)
enter
mov
or
inc
jl
test
dec
push
adc
jbe
jmp
jo
bound
lods
jb
and
int
imul
mov
es
push
neg
je
in
outs
push
scas
dec
push
dec
xor
add
movs
dec
les
fistp
pusha
lock
int
into
pop
dec
ret
add
inc
add
or
lea
movs
cmp
inc
mov
bound
cmp
mov
dec
icebp
mov
or
imul
add
add
push
inc
and
retf
(bad)
(bad)
arpl
outs
mov
dec
add
popf
cmp
and
xchg
pop
xchg
out
cmps
stos
shr
ror
xor
jg
jl
xlat
rcr
xchg
xchg
outs
sub
in
retf
push
sub
cmp
jge
mov
pmulhuw
sub
push
test
adc
dec
leave
call
adc
xchg
cmps
(bad)
lods
mov
push
fldpi
mov
push
ins
adc
ins
lds
cmp
xor
es
mov
xchg
retf
sbb
out
out
dec
push
add
mov
mov
dec
popf
les
in
push
pop
pop
iret
adc
cld
test
stos
xlat
or
and
retf
mov
mov
pop
popa
push
call
xor
in
push
push
pop
mov
fwait
inc
cli
test
js
mov
mov
hlt
sub
jae
xchg
fsub
fadd
in
mov
or
pop
xor
lea
cmps
mov
add
sbb
test
ds
push
addr16
hlt
(bad)
inc
aam
push
in
mov
push
pusha
push
imul
mov
jb
push
cmp
fucomp
cli
cmc
mov
ds
mov
jge
lock
adc
ret
ficom
daa
in
fwait
push
test
pop
add
lea
in
mov
sub
mov
adc
shr
sub
lds
xchg
push
enter
mov
dec
or
mov
adc
add
fs
inc
sti
or
sbb
pop
sbb
sub
adc
mov
(bad)
mov
cld
mov
(bad)
mov
xor
mov
push
cwde
mov
dec
cmp
movs
or
mov
jbe
pop
or
popa
call
adc
sbb
sbb
scas
dec
jns
stos
in
jle
inc
jmp
aas
inc
pushf
dec
jp
dec
inc
in
add
addr16
push
cs
inc
scas
mov
pop
(bad)
push
push
fsub
popa
jle
(bad)
fist
mov
push
test
push
mov
add
lock
jge
movs
aaa
or
mov
xchg
dec
dec
mov
adc
jle
or
adc
adc
ins
or
xchg
sar
xchg
ins
nop
(bad)
cmp
dec
adc
leave
jbe
add
(bad)
push
mov
sti
xchg
add
daa
or
pop
jecxz
and
loopne
not
imul
retf
stc
inc
jecxz
push
ret
add
or
or
mov
js
lahf
sbb
adc
push
iret
daa
repz
popa
popf
outs
adc
sub
sub
jo
hlt
popa
push
in
imul
inc
mov
or
jl
(bad)
add
sti
in
icebp
cli
inc
not
inc
mov
iret
pop
scas
pop
sbb
pusha
push
(bad)
cmc
mov
and
jmp
push
mov
mov
jg
mov
mov
arpl
call
inc
aad
cmps
add
mov
in
daa
cmp
stos
fisttp
mov
pop
mov
dec
dec
out
xchg
jmp
xchg
bound
aas
scas
(bad)
inc
shl
push
lods
jo
test
push
add
pushf
pop
aad
je
mov
shl
shl
jns
cwde
test
cmp
mov
clc
fucom
sub
or
jle
movs
pop
ins
retf
cmc
rcr
inc
mov
sbb
pushf
pop
pop
push
inc
pop
data16
jnp
stos
pop
pop
xchg
and
sbb
mov
imul
fldenv
pop
mov
inc
xchg
mov
mov
cmc
sub
sbb
and
push
push
fisubr
call
fistp
jo
arpl
(bad)
sbb
mov
dec
in
ins
push
pop
mov
aas
xchg
xor
es
js
xchg
mov
adc
dec
aam
mov
push
rol
sub
jbe
adc
popf
push
cmp
or
xchg
bound
retf
adc
ja
adc
iret
mov
stc
pusha
sub
mov
cmp
dec
mov
sar
std
or
add
loop
mov
ins
inc
dec
je
scas
mov
and
call
inc
jl
rcl
ret
lods
aad
cmps
les
inc
repz
push
adc
stc
xchg
and
dec
out
(bad)
out
jge
sahf
jp
ins
add
adc
sbb
adc
in
daa
xchg
shl
and
or
cld
cdq
cmps
lods
mov
xchg
popa
sar
mov
add
cmp
push
mov
pop
xor
push
xor
ja
xchg
mov
sub
pushf
fst
or
test
mov
(bad)
scas
retf
cdq
jo
mov
pop
xlat
jp
mov
outs
scas
test
pop
inc
mov
and
sti
push
jbe
xchg
ror
daa
loopne
jno
cdq
lea
nop
jmp
cmp
in
cmps
call
mov
cmp
or
outs
adc
adc
and
lods
mov
lods
ret
enter
pop
out
push
lds
push
sbb
xchg
or
xchg
(bad)
aad
jmp
retf
sbb
xchg
in
call
mov
sbb
xchg
pop
sub
add
push
xchg
stos
cwde
clc
sahf
jge
mov
lahf
jmp
jmp
add
movs
arpl
sub
shl
inc
aad
jno
jnp
mov
sub
imul
push
xor
jbe
in
(bad)
cmp
and
test
inc
jbe
and
ds
fmulp
add
sbb
push
(bad)
mov
movs
bound
jnp
leave
adc
shr
xor
push
cmc
repz
adc
push
jmp
push
jmp
enter
cmp
test
fdiv
sbb
xor
sub
xchg
push
movs
loope
test
dec
pushf
pop
mov
jmp
hlt
fidivr
and
xchg
lahf
push
mul
mov
push
add
and
test
fsub
adc
mov
stos
add
aaa
mov
dec
xchg
push
inc
popa
add
sub
scas
sbb
adc
shr
cli
lea
scas
cli
mov
pop
addr16
sbb
adc
adc
jecxz
out
push
jb
mov
fwait
adc
out
fnsave
leave
xchg
lahf
mov
icebp
ret
sbb
movs
inc
fsubr
mov
dec
mov
icebp
sti
and
popf
mul
xchg
mov
xlat
mov
add
cmp
in
cmp
xchg
adc
lahf
push
retf
push
aad
into
rcl
or
mov
(bad)
loopne
jnp
lea
ss
push
mov
jg
sub
mov
pop
cmc
sbb
test
neg
sbb
dec
dec
jp
arpl
ret
clc
add
or
inc
popa
and
inc
aaa
icebp
push
daa
les
cli
fld
adc
or
jl
dec
or
addr16
outs
adc
push
loope
dec
and
push
push
cld
sbb
mul
pop
lods
shr
addps
mov
fcom
pop
inc
mov
add
movs
inc
and
je
ret
mov
(bad)
mov
std
jecxz
xchg
and
xor
stos
mov
fs
mov
mov
jb
xlat
add
lahf
(bad)
std
mov
das
xor
(bad)
or
fs
push
(bad)
dec
mov
jmp
sub
rcl
sbb
cmps
cmp
cwde
mov
adc
and
retf
mov
lds
cwde
or
rcl
ins
add
mov
(bad)
scas
cmp
stos
and
mov
(bad)
jl
cmp
adc
test
ret
and
xchg
out
xchg
pop
jecxz
xor
cmp
aam
inc
lds
imul
mov
and
mov
add
add
(bad)
and
mov
cmc
repnz
jne
fiadd
push
jmp
xor
ja
imul
sbb
xor
sub
cmps
popa
mov
retf
loop
xor
das
dec
ins
inc
ins
push
mov
sbb
in
sti
rep
push
cli
push
addr16
xor
push
mov
pop
dec
xor
adc
push
adc
push
cmp
fstp
ins
dec
push
retf
and
push
pop
push
aam
push
(bad)
add
dec
push
pop
dec
jbe
push
mov
(bad)
push
inc
mov
sbb
scas
sub
rcl
push
and
(bad)
std
sub
fcomp
pop
xor
adc
mov
fstp
fisubr
imul
das
adc
mov
cmps
ins
pop
xor
div
aam
into
lahf
fisttp
ss
and
mov
jp
in
lods
mov
lods
inc
sbb
mov
add
mov
clc
in
mov
sbb
js
xchg
test
rcr
cmps
jg
(bad)
mov
repnz
mov
ror
add
jg
adc
mov
mov
sub
xchg
mov
pushf
or
cs
outs
xor
cvtps2pi
imul
imul
sbb
mov
sub
jecxz
(bad)
push
dec
lahf
jg
jno
repnz
adc
sbb
or
iret
movs
cli
inc
into
push
mov
sbb
int3
inc
push
lea
jo
into
inc
cmp
mov
mov
adc
inc
or
xchg
push
dec
dec
xor
dec
mov
cmp
xchg
cld
lahf
and
sbb
sub
xchg
sbb
(bad)
and
aam
fstp
repz
pop
hlt
mov
xchg
(bad)
pop
leave
adc
cmp
cmps
scas
test
xchg
jbe
or
push
cs
out
cmc
xchg
mov
sbb
icebp
div
jnp
cdq
jae
adc
sub
mov
(bad)
aas
out
and
pop
cmp
clc
push
or
mov
xor
test
scas
sahf
or
popf
jmp
repnz
popf
mov
clc
int
mov
sbb
adc
dec
fwait
loop
lds
jbe
shr
inc
mov
cmp
jne
fst
inc
aad
cs
pop
call
pop
pop
jecxz
sbb
cmp
mov
dec
sub
mov
mov
dec
jle
fnstsw
test
lds
test
push
in
jg
enter
sbb
xor
(bad)
(bad)
je
sbb
fld
xchg
fadd
xchg
mov
call
sub
clc
cmp
mul
movs
or
daa
movs
les
lea
add
sbb
ret
add
or
pop
push
ret
dec
mov
mov
dec
jg
(bad)
jmp
xor
dec
loopne
loope
aad
jle
into
xchg
cli
jp
fcmovbe
dec
xchg
add
mov
in
jb
test
push
loopne
sub
repnz
mov
adc
cmp
push
in
mov
fisttp
xchg
clc
mov
mov
ja
cs
xor
add
mov
sti
test
xchg
ror
inc
iret
inc
cwde
nop
(bad)
add
sti
add
outs
mov
fist
dec
jns
popf
les
test
or
icebp
movs
xor
adc
xchg
xchg
push
stos
std
mov
mov
adc
iret
xor
jno
sub
in
lds
stos
dec
in
cli
jecxz
push
xor
mov
or
add
sub
cmp
xchg
dec
xchg
or
jmp
sbb
inc
enter
mov
push
jae
jl
xchg
push
push
es
pushf
jecxz
repnz
ret
pusha
mov
cmp
add
jle
mov
imul
add
jecxz
and
and
jge
pushf
pushf
jo
mov
stos
or
push
push
or
fwait
sbb
scas
mov
movs
mov
hlt
sbb
cmps
mov
jmp
std
jmp
sub
cmp
lds
xor
mov
aaa
mov
sub
test
dec
retw
pop
mov
xchg
lods
and
ja
lea
mov
mov
jmp
icebp
sahf
xchg
mov
clc
dec
mov
icebp
adc
leave
sbb
mov
cmp
push
mov
mov
xor
addr16
int3
sahf
ret
fs
ins
div
cli
adc
xor
mov
fsubr
inc
ins
mov
dec
mov
adc
push
out
(bad)
fdivr
(bad)
gs
gs
xbegin
movs
xchg
ror
sub
xchg
shl
cs
cld
inc
add
cdq
mov
push
cmc
cld
call
jns
and
mov
inc
cmps
enter
repnz
bound
rcr
loop
mov
add
sbb
xlat
fdivr
or
retf
lods
mov
aaa
cwde
inc
in
aam
mov
sahf
sub
mov
push
mov
adc
outs
fadd
jb
sub
ja
(bad)
mov
lods
xor
mov
sahf
mov
pushf
push
lock
into
(bad)
xchg
ror
xchg
lods
cmps
dec
xchg
ds
leave
jb
add
fistp
loope
lods
or
movs
fst
jbe
(bad)
clc
dec
mov
jecxz
lea
push
out
sbb
aaa
inc
ret
xchg
dec
and
jns
mov
aam
arpl
(bad)
jg
in
repz
(bad)
xchg
add
mov
(bad)
mov
out
xchg
nop
popa
push
mov
xchg
jg
mov
fiadd
add
push
jo
cmps
add
rep
inc
ds
xchg
lods
sub
adc
xchg
jp
sbb
pusha
jns
cmp
iret
in
inc
aaa
cmp
add
ins
push
mov
xor
mov
test
add
shr
inc
and
cmp
adc
in
rol
out
pop
out
mov
adc
xor
add
add
ins
test
xor
ja
repnz
xor
lods
adc
mov
inc
fs
mov
add
cmp
mov
or
(bad)
xor
jb
mov
mov
dec
std
test
(bad)
cmc
push
or
jl
push
xchg
ins
popa
mov
dec
add
in
xchg
cmc
sbb
xchg
jl
jp
pop
mov
sub
push
xchg
xor
xlat
frstpm(287
sbb
in
loope
xchg
call
gs
fnstcw
push
push
inc
call
cmp
outs
ds
push
shl
jmp
inc
cmp
fidivr
pop
and
fldenv
ss
xor
and
pop
scas
jb
jne
jo
scas
movs
das
inc
shl
mov
pop
push
fsubr
xchg
outs
xor
inc
xor
jecxz
fsubr
mov
mov
(bad)
mov
retf
gs
cdq
shr
ds
xchg
jecxz
out
sub
mov
aad
mov
mov
mov
icebp
test
add
popa
xchg
repz
rol
ins
les
pusha
mov
cmp
mov
inc
sub
add
call
xor
xor
adc
xor
fcomp
les
pop
fsubr
mov
leave
cmp
ror
(bad)
call
sbb
mov
jp
or
movs
ins
pop
popa
call
add
cmp
cld
stos
movs
push
lds
stos
jnp
inc
cmp
pusha
and
cwde
fmul
xor
pop
and
rcl
mul
pushf
je
adc
jle
stc
jo
pop
pop
dec
jg
push
sub
mov
shl
aas
dec
cmc
mov
dec
dec
stos
int
jmp
cmp
add
dec
inc
movs
das
mov
jmp
icebp
mov
mov
xor
pop
add
push
push
fs
mov
and
fimul
js
sub
cmps
out
adc
push
lahf
xor
cmps
and
daa
stos
inc
in
push
out
fwait
daa
adc
mov
xchg
pop
dec
mov
xchg
not
jbe
out
mov
les
add
ret
cmp
or
arpl
lods
xlat
enter
lds
xchg
xor
(bad)
cmps
xchg
iret
ret
dec
add
inc
inc
outs
ror
mov
mov
cli
gs
jmp
repz
mov
add
and
dec
mov
xchg
mov
aad
sbb
cmps
cmp
sbb
fist
std
dec
mov
mov
jbe
xor
ja
(bad)
mov
and
sbb
cmps
pop
push
ss
test
in
mov
and
into
mov
push
xrelease
dec
mov
jmp
and
scas
not
adc
imul
int3
xor
enter
and
(bad)
cmps
loopne
jne
daa
mov
loope
dec
push
jg
sub
fbld
test
jo
cli
out
(bad)
imul
lea
mov
pop
(bad)
retf
mov
or
lods
shl
fwait
ins
div
xchg
mov
mov
or
add
jae
inc
cmps
div
mov
cmp
pop
into
mov
loopne
movs
fist
imul
jmp
outs
aam
xchg
xor
sub
clc
pop
bound
add
xor
hlt
or
div
(bad)
xchg
jb
jecxz
inc
jmp
ret
fistp
aad
and
jb
or
fnsave
aaa
in
test
iret
sar
stos
sub
addr16
push
pushfw
lock
cmps
mov
call
test
cli
imul
push
mov
mov
inc
push
pop
js
mov
pushf
jnp
jo
outs
lock
push
cdq
and
bnd
retf
mov
(bad)
push
add
arpl
push
fst
mov
pop
sar
ds
sar
add
scas
js
sub
xor
mov
rol
(bad)
(bad)
std
pop
mov
push
xchg
jp
mov
in
mov
mov
inc
movs
loope
adc
fidiv
jecxz
loop
outs
sbb
movs
mov
jecxz
(bad)
mov
out
and
and
jnp
xchg
mov
xor
jo
lods
jl
xchg
cld
imul
mov
stos
fistp
xor
xchg
or
(bad)
fcom
jae
or
or
and
push
mov
ror
mov
mov
pop
imul
retf
icebp
sub
jg
dec
cmp
mov
out
pusha
(bad)
(bad)
fnstcw
and
cmps
adc
and
leave
fdivr
ins
sub
jns
add
out
push
repz
push
loop
xor
push
in
in
rcr
sti
fcomp
jae
ret
(bad)
and
(bad)
mov
xor
adc
loope
mov
cs
jae
or
dec
stos
data16
hlt
sti
push
pop
cmps
sub
xchg
inc
stos
add
xchg
adc
ja
std
leave
(bad)
sbb
das
xchg
mov
int
cwde
xlat
sub
adc
dec
jge
rcl
jmp
push
lods
or
repz
ins
dec
pop
push
cmps
pop
mov
nop
fnsave
mov
shl
test
push
(bad)
and
mov
cmps
in
cdq
dec
jnp
and
out
pushf
jmp
call
gs
dec
add
xchg
not
es
outs
retf
test
fucomi
cmp
inc
adc
cmp
xchg
scas
mov
push
or
jmp
repnz
popa
adc
lahf
sti
jb
pop
(bad)
sub
gs
sbb
leave
sahf
shl
imul
xchg
ss
and
retf
push
xchg
(bad)
jge
les
jle
adc
jnp
scas
sub
sub
arpl
mov
cmps
aad
dec
inc
sar
lea
inc
jbe
retf
in
sub
retf
cmp
aam
sub
push
xchg
sub
sbb
cmp
push
push
add
xchg
push
add
pop
jecxz
aad
scas
repz
jmp
xchg
out
mov
mov
jle
mov
pop
mov
sbb
mov
mov
hlt
loope
jmp
rcr
adc
and
imul
pop
add
jns
imul
mov
div
dec
and
in
mov
icebp
or
repz
call
jg
gs
or
movs
ret
push
xchg
icebp
ins
adc
fnstsw
push
jns
(bad)
push
popa
les
fstp
xchg
mov
gs
movs
push
sub
adc
or
iret
mov
out
outs
(bad)
pop
jecxz
sbb
mov
jbe
inc
cdq
std
cmps
leave
ds
lock
cmp
mov
imul
or
cwde
mov
dec
dec
sub
pop
iret
sbb
test
push
out
shl
cmc
sbb
push
loop
dec
fs
(bad)
scas
in
dec
sbb
pop
cmp
cmp
call
das
dec
enter
and
cld
stc
inc
inc
sub
mov
mov
sub
sar
cli
push
movs
lods
pop
mov
leave
jg
mov
repnz
add
mov
test
ins
mov
retf
movs
fwait
mov
jo
jo
stc
int3
sub
xchg
jecxz
sub
adc
cli
ret
jg
mov
sbb
call
ja
pop
pusha
stos
lds
mov
loopne
mov
fs
(bad)
(bad)
mov
cmps
imul
and
jb
mov
and
dec
or
mov
dec
inc
adc
cmp
es
jb
and
jo
inc
and
xchg
mov
jns
or
jno
js
jbe
sbb
std
out
addr16
add
rcl
call
and
push
pop
add
push
mov
sahf
cmp
aaa
adc
cwde
adc
pop
and
add
mov
cmp
sbb
dec
test
jmp
lock
(bad)
cwde
pusha
call
xor
ds
jnp
ins
das
push
repnz
cmps
lea
mov
stos
lea
popf
cmp
jb
adc
mov
jmp
pusha
dec
xchg
or
jno
mov
jae
in
sub
outs
sub
mov
rcl
sbb
imul
jl
test
sub
test
xchg
mov
or
imul
retf
fisubr
push
loope
jl
sub
mov
sub
imul
cmps
jo
pushf
xor
iret
jo
and
test
jo
fdiv
out
mov
cdq
inc
inc
shl
aaa
pop
pushw
mov
add
jle
sub
jmp
mov
dec
lds
in
shr
dec
addr16
div
push
or
push
sub
dec
add
and
add
cmp
imul
(bad)
pop
mov
movs
mov
popa
mov
xchg
adc
add
loopne
cmps
and
mov
(bad)
adc
cmp
xor
pop
movs
sbb
popa
(bad)
ret
shr
sub
cmps
outs
jmp
jmp
loopne
iret
adc
(bad)
sti
loop
cli
call
(bad)
pop
dec
mov
mov
ffreep
mov
loopne
mov
test
push
adc
adc
xchg
adc
loope
and
push
mov
dec
mov
push
lods
push
lds
xchg
iret
xlat
inc
or
cmp
pop
aas
mov
repnz
dec
dec
sar
dec
out
ins
sbb
fild
mov
dec
adc
jo
push
add
cmp
or
inc
imul
mov
mov
inc
adc
xchg
psrlq
jbe
stos
in
popf
in
popf
cmp
je
and
iret
iret
js
lds
xor
jne
sbb
fstp
xor
push
and
mov
sub
in
popa
adc
xchg
daa
fst
inc
cmp
mov
xchg
xchg
sbb
push
out
jp
call
or
into
ss
push
xchg
add
call
out
and
pop
xchg
adc
add
mov
data16
call
mov
xlat
sbb
jecxz
xchg
sbb
adc
mov
push
(bad)
xchg
sahf
push
xchg
mov
mov
pop
mov
xchg
arpl
sahf
push
stos
fs
push
call
xchg
mov
ret
mov
pop
neg
pushf
sbb
mov
or
pop
mov
in
pop
in
mov
fwait
movs
cmc
popf
repz
stos
jns
ds
lahf
loopne
test
dec
mul
jnp
adc
mov
xchg
jo
push
jno
add
adc
iret
or
lahf
add
aas
retf
xlat
push
inc
cmp
mov
inc
jle
or
fstp
jmp
push
fwait
push
jp
xlat
outs
adc
jb
loopne
dec
repnz
inc
addr16
dec
or
popa
call
sub
cmps
fs
push
sub
lock
xor
out
stos
sbb
lds
gs
and
inc
and
mov
fptan
inc
(bad)
adc
hlt
push
jno
sub
jle
sbb
mov
popf
and
inc
jle
es
mov
jo
add
sbb
add
pop
xchg
enter
add
lods
mov
pop
pop
push
mov
ja
mov
adc
adc
in
bound
sbb
addr16
inc
push
sbb
and
cmp
mov
shl
lea
ror
and
call
loope
sti
pop
inc
loopne
cli
sub
call
inc
inc
inc
outs
push
data16
sbb
inc
int
sti
lods
scas
xchg
xchg
pushf
and
cmp
daa
ins
mov
mov
mov
je
bound
in
inc
mov
stc
xor
xor
mov
mov
dec
and
xchg
mov
ret
aam
es
mov
and
pop
sub
cmps
js
aad
cli
and
mov
mov
into
bound
scas
add
movs
scas
jno
mov
(bad)
pop
call
sti
fsub
mov
jle
(bad)
mov
add
mov
repz
adc
out
pop
nop
loopne
(bad)
push
sub
inc
arpl
test
xchg
imul
adc
push
sti
jo
test
mov
bnd
cmp
loope
push
sub
aam
sbb
pop
fdiv
lds
sbb
in
pop
retf
rol
imul
xor
ret
inc
dec
int3
xor
out
(bad)
out
sbb
(bad)
xchg
les
arpl
fcomp
jmp
ja
popf
or
dec
mov
call
cmp
adc
jae
fldenv
stc
sub
std
imul
sbb
cmp
mov
sub
add
stos
inc
mov
scas
or
(bad)
jbe
mov
cmp
and
hlt
fld
div
pop
lahf
retf
nop
outs
add
aaa
ds
sub
mov
sbb
xchg
retf
jmp
inc
adc
mov
sbb
int3
sub
stos
and
in
xchg
popf
xchg
jmp
shl
add
outs
jle
push
clc
addr16
pushw
mov
sub
retf
je
loop
mov
push
sub
clc
in
and
in
outs
fidivr
inc
hlt
int3
inc
sbb
movs
out
pop
add
and
sub
ins
cmc
mov
aas
rcl
cs
mov
std
fimul
mov
pop
fadd
out
leave
out
push
fld
jns
jmp
and
add
cmc
aam
add
sbb
(bad)
mov
(bad)
(bad)
mov
leave
fldenv
and
nop
mov
sar
ficom
daa
jns
mov
add
scas
cwde
and
aam
sahf
xor
jecxz
les
(bad)
arpl
ss
xchg
loopne
add
cli
lds
jbe
sbb
sub
mov
xor
jae
adc
ins
aas
mov
add
inc
pop
ret
sahf
adc
pushf
xchg
xor
inc
rol
call
fist
add
aam
mov
sub
fst
addr16
gs
sbb
cmps
xchg
inc
push
mov
fnstsw
xor
gs
shl
in
ret
adc
inc
cwde
in
cli
cs
jo
adc
out
dec
ins
xchg
dec
jmp
mov
(bad)
dec
pop
sti
test
and
mov
repnz
scas
cmp
ins
mov
cmp
imul
or
lock
aam
mov
inc
cmp
not
das
movs
loop
push
xadd
lods
adc
xor
(bad)
mov
push
(bad)
int3
pusha
sub
outs
data16
out
or
mov
lods
out
mov
jnp
or
inc
inc
inc
mov
and
cmc
xchg
jmp
idiv
add
sub
out
popf
sub
jne
rcr
fsubr
not
mov
cmp
push
lds
(bad)
fdivr
gs
xor
jbe
daa
pop
or
inc
dec
cmp
sub
jno
mov
pop
aaa
mov
push
mov
mov
dec
rcr
test
or
std
add
iret
ins
push
movs
pop
pop
xlat
scas
outs
and
xor
arpl
into
sub
daa
lahf
call
lods
mov
iret
inc
xchg
jae
(bad)
jno
or
sbb
hlt
lahf
pop
push
std
sbb
pop
xor
push
scas
cmps
push
mov
retf
shr
adc
push
(bad)
std
mov
bound
scas
cmps
cmc
call
mov
or
add
aaa
(bad)
loope
sub
push
out
cmps
mov
lock
in
fcomp
cs
popw
outs
pop
clc
(bad)
dec
xchg
xor
mov
movs
test
sub
inc
xchg
in
sbb
clc
sub
push
sbb
xor
or
sar
ret
fsub
lahf
pop
pop
pushf
add
out
dec
jle
les
fadd
(bad)
rol
fwait
jo
push
push
daa
cmp
jmp
dec
in
cli
jcxz
fidivr
(bad)
jb
and
or
inc
inc
push
pop
cmc
cdq
into
fwait
add
jo
jo
lds
out
xchg
popf
and
cmc
sti
std
data16
movs
nop
int
inc
cmp
(bad)
out
mov
lods
fiadd
hlt
jecxz
lea
in
lods
sbb
cwde
push
adc
cmc
add
in
and
sti
popa
mov
sahf
dec
not
es
jo
mov
sti
dec
and
dec
imul
shr
cmps
sbb
int
add
push
xchg
es
imul
jle
fdivr
mov
test
sbb
(bad)
mov
mov
inc
jae
cmps
jne
push
xchg
and
mov
adc
mov
pop
mov
jne
loopne
push
enter
xor
and
les
(bad)
xor
ins
cmp
pop
mov
dec
pop
pop
jnp
sub
dec
loop
jb
push
fisttp
sbb
lahf
test
inc
je
fsub
jl
and
shl
test
xchg
(bad)
stos
mov
in
(bad)
dec
or
pop
xchg
mov
outs
shl
or
xchg
fwait
and
dec
push
rcr
xor
js
jmp
cmp
add
pop
sbb
test
jmp
bound
fmul
fadd
xchg
je
jge
jecxz
cmps
pusha
push
pop
mov
push
pusha
frstpm(287
push
loop
jge
xchg
fstp
dec
sbb
add
push
stos
(bad)
in
and
sub
enter
cwde
push
pop
aaa
jo
pop
sub
mov
xchg
mov
repz
sbb
jbe
mov
leave
test
and
xchg
pop
dec
ja
adc
and
loop
cwde
std
popa
cmps
mov
pop
dec
push
inc
(bad)
popf
and
mov
shl
int3
xor
inc
fs
sub
dec
stc
retf
scas
loopne
pusha
daa
sar
(bad)
movs
repnz
call
pop
fstp
jae
inc
mov
test
lods
inc
cmps
fidiv
xchg
shl
adc
xchg
and
and
dec
mov
jbe
not
es
fwait
lock
rcr
mov
out
mov
imul
test
lea
shl
cmp
gs
push
in
cmp
in
xor
lock
ret
stos
push
pop
push
or
jmp
ds
imul
push
add
inc
cdq
ror
test
ja
adc
cmp
jmp
xchg
sbb
mov
daa
xchg
ins
sbb
and
test
pop
add
inc
stos
lods
iret
pop
add
and
into
mov
sar
enter
sbb
shl
out
ror
mov
cld
pop
mov
in
jbe
mov
retf
ss
rcr
adc
not
jne
jl
(bad)
jns
dec
addr16
cwde
or
fisubr
mov
in
addr16
jns
add
fdiv
scas
fs
rcl
ss
rol
int
ffree
pop
out
aas
xchg
idiv
mov
repz
mov
loope
xor
rcl
push
outs
js
stos
fiadd
out
and
fld
jmp
(bad)
(bad)
push
pop
icebp
ins
das
retf
add
adc
gs
mov
ficomp
lods
sub
repz
and
dec
addr16
stos
call
mov
repnz
lds
dec
mov
cmp
test
pusha
or
pop
enter
xor
sbb
ficom
fucom
add
fisttp
cmc
call
sub
mov
push
(bad)
fwait
dec
imul
xchg
mov
jmp
cli
sub
sub
adc
pop
retf
hlt
adc
sbb
sar
inc
sub
pop
jmp
push
gs
leave
movs
pop
test
jp
imul
call
add
pop
cmps
jmp
inc
mov
test
fbld
push
cwde
test
loopne
movs
outs
push
lods
fiadd
push
push
jb
cmp
rcr
fnstsw
jp
mov
out
adc
call
or
mov
dec
pop
aad
xor
cmp
push
mov
sub
cs
dec
inc
mov
pop
shr
push
adc
mov
frstor
stos
mov
ja
push
mov
lock
pop
and
jl
cwde
pop
sahf
push
xchg
stos
sbb
inc
mov
mov
int3
or
xchg
test
add
inc
mov
cmp
getsec
sub
outs
and
inc
retf
rol
leave
push
push
frstor
aas
addr16
cmps
xchg
cdq
cld
mov
add
loop
loopne
test
dec
xchg
cmc
aas
push
push
push
pop
loop
jae
fild
add
js
in
pop
mov
iret
test
xchg
pop
popf
mov
arpl
or
inc
sub
pop
mov
or
mov
adc
inc
pop
loop
cmp
mov
test
cmp
dec
cli
add
and
cmp
mov
xchg
inc
pop
sahf
mov
sub
jmp
mov
enter
lahf
add
ja
(bad)
stc
mov
cmovno
outs
jnp
gs
leave
cmp
push
mov
and
test
or
ins
iret
sub
inc
push
ffree
mov
cld
(bad)
mov
daa
outs
add
sti
or
mov
stc
(bad)
lods
dec
shl
in
les
sbb
or
mov
scas
(bad)
adc
(bad)
lods
stos
ins
xor
movs
sar
xchg
call
sub
les
jge
jp
test
pop
mov
icebp
iret
nop
icebp
out
add
sub
sub
push
cmp
out
inc
sbb
movs
adc
cmp
mov
aaa
ja
adc
mov
adc
fisttp
xchg
xor
push
in
xor
aam
(bad)
mov
out
out
fbstp
mov
xchg
outs
fisubr
push
jle
adc
es
xlat
sti
dec
mov
fisttp
xor
push
bound
push
ja
inc
xor
ret
cli
mov
es
inc
leave
xchg
dec
daa
xlat
or
rcl
mov
xchg
add
cmp
add
mov
and
clc
xchg
add
clc
pop
sbb
gs
mov
inc
xor
lea
sub
(bad)
cmps
and
je
pusha
cmp
rol
add
pop
int
aam
shr
jnp
pop
in
jmp
test
adc
inc
out
cmp
pop
and
(bad)
xchg
jmp
xchg
daa
or
mov
iret
loop
outs
test
and
or
mov
xor
cmp
xchg
push
lds
mov
fst
cli
jp
add
adc
mov
push
jb
dec
xchg
and
cvtps2pi
mov
(bad)
mov
xor
aaa
inc
dec
xor
jge
xor
nop
adc
sbb
loope
test
pusha
xchg
pop
scas
mov
push
sbb
dec
movs
int
jp
movs
inc
in
xchg
jns
call
arpl
sbb
rcl
pop
loopne
xchg
push
fimul
jbe
add
(bad)
rcr
push
int3
inc
mov
jb
jmp
aaa
pop
repnz
or
sbb
loopne
push
repnz
or
stos
inc
sbb
and
daa
and
mov
repnz
(bad)
jmp
(bad)
xor
and
popa
or
test
cmp
mov
test
jg
in
xor
xchg
add
lods
inc
nop
icebp
adc
call
mov
push
mov
dec
or
icebp
out
fidiv
push
hlt
cmc
out
cmc
js
outs
scas
mov
mov
and
retf
inc
pop
mov
and
xchg
fidiv
scas
mov
ret
or
(bad)
jmp
sub
into
push
add
loope
ror
ja
in
loope
adc
sbb
int
addr16
xchg
fadd
fwait
mov
xor
fs
pop
div
clc
in
xor
outs
outs
pop
in
xor
retf
push
add
and
jmp
jge
mov
inc
push
mov
retf
ja
cmp
test
int
inc
mov
frstor
mov
pop
mov
xchg
jns
cmp
popf
xchg
sub
cmps
ficomp
fs
(bad)
sar
sbb
cmp
sbb
aas
je
add
jbe
int3
movs
pop
gs
mov
push
mov
fnstsw
pop
inc
mov
nop
push
push
mov
aam
sbb
lahf
in
mov
aad
sub
das
test
xchg
cmps
lock
pop
imul
xor
es
adc
(bad)
fldenv
scas
lea
jecxz
push
mov
dec
ffree
sub
cs
sbb
mov
leave
xor
adc
mov
pop
xor
jp
call
out
(bad)
movs
cmc
push
cdq
retf
jns
jnp
or
test
adc
push
xor
mov
das
push
idiv
dec
int3
xchg
ins
int3
sbb
aas
lods
jge
dec
(bad)
scas
pop
add
xchg
add
jno
aas
or
call
and
dec
sti
cmp
out
sahf
push
call
daa
shr
inc
xchg
shl
daa
pop
mov
loopne
mov
jne
pop
sti
fnstcw
mov
mov
inc
ins
loopne
sub
out
jns
test
sub
repz
aas
imul
ret
jmp
jmp
clc
push
mov
outs
imul
(bad)
in
mov
(bad)
xor
inc
int3
cmp
and
inc
add
fist
stos
fimul
jl
in
test
mov
retf
mov
jmp
pop
pushf
mov
les
adc
imul
out
lods
rcl
nop
push
add
ficomp
xchg
lahf
test
(bad)
fadd
clc
xchg
add
fcom
inc
push
jne
dec
addr16
pop
leave
pop
mov
or
scas
inc
xchg
rol
cwde
cmps
xor
shl
out
adc
inc
stc
scas
dec
aad
dec
outs
rcl
sub
addr16
ja
cmc
jge
fs
stc
mov
push
sbb
sbb
and
pop
push
and
jmp
jbe
mov
add
pop
cdq
in
inc
lock
dec
sbb
and
and
mov
iret
test
int
xlat
bound
ror
shr
jecxz
movs
repnz
jmp
fidiv
ins
(bad)
jbe
imul
cmc
adc
test
jl
mov
sbb
imul
lock
test
enter
repz
movs
push
mov
cmps
arpl
jl
clc
movzx
out
outs
shr
push
fwait
mov
mov
sbb
push
add
mov
shl
xor
jmp
dec
and
test
mov
jmp
xor
test
jnp
sub
xchg
xor
dec
mov
xchg
jno
sub
fs
sub
test
sbb
add
or
stos
out
sub
mov
fsubr
jle
mov
xchg
lahf
add
xor
(bad)
ds
pop
adc
(bad)
(bad)
(bad)
scas
and
xchg
mov
int3
out
fistp
fdiv
mov
ins
xchg
fild
test
out
push
rcl
ins
shr
and
jns
push
movs
jp
out
or
adc
jbe
and
repz
add
mov
leave
mov
loope
pop
(bad)
push
xchg
lea
loopne
gs
sub
mov
daa
jo
sub
out
jb
cmp
jmp
pushf
mov
pusha
mov
push
loopne
fist
into
(bad)
mul
out
ss
fmul
in
retf
repz
shl
cwde
es
xor
in
xor
je
jge
hlt
stos
js
jmp
xchg
push
rcr
adc
push
movs
jns
or
xabort
push
icebp
fst
mov
(bad)
not
sub
add
pop
ja
jbe
mov
in
cmps
push
fsub
adc
mov
cmp
not
sbb
rcl
pop
inc
test
out
mov
retf
hlt
xor
xchg
ins
mov
out
push
mov
dec
mov
loop
xchg
or
xchg
(bad)
lahf
fsub
hlt
push
call
cs
cmp
lods
push
or
call
and
cmp
jbe
pushf
xchg
fbstp
fdiv
mov
push
xor
jge
loop
inc
sub
cmp
jmp
cwde
jl
(bad)
movs
mov
dec
mov
inc
jno
push
sar
cs
or
aam
xchg
(bad)
and
loop
push
mul
dec
xchg
dec
push
mov
imul
mov
sbb
jno
test
xchg
mov
or
inc
inc
rcl
mov
jae
xchg
iret
jge
jp
ins
mov
jae
mov
ret
inc
inc
in
outs
call
(bad)
add
xor
fnsave
daa
mov
(bad)
jne
xchg
rcr
cmps
icebp
outs
mov
shl
movs
call
out
dec
loopne
pop
or
aaa
popa
cmc
mov
add
xchg
inc
div
xor
(bad)
stc
dec
push
mov
aas
pop
int
bound
or
mov
cmp
shl
in
les
mov
pop
jle
bound
jno
jge
sbb
clc
(bad)
sub
enter
mov
sbb
adc
dec
inc
sbb
in
inc
cwde
(bad)
out
pop
cmc
imul
aam
jo
cmp
jo
inc
aaa
(bad)
gs
xor
adc
imul
mov
add
shr
push
enter
adc
jbe
loop
adc
mov
push
inc
loope
pop
or
loopne
adc
cmp
aad
icebp
and
jb
dec
cmp
mul
xchg
mov
cmp
js
sub
retf
sub
je
cmp
dec
cmp
stos
mov
call
lahf
cmps
pusha
adc
cmp
push
jg
ret
frstor
push
mov
ret
fcomp
pushf
xchg
or
mov
sar
aas
popf
and
add
in
add
adc
sub
jnp
or
push
ret
(bad)
bound
mov
je
or
mov
xor
outs
mov
sbb
aad
push
imul
fucomip
(bad)
in
test
add
mov
outs
mov
retf
ins
xor
imul
fild
cmp
fld
rcr
test
jge
cmp
out
mov
push
mov
or
xchg
inc
dec
push
mov
xchg
(bad)
and
outs
jo
je
or
dec
mov
mov
xor
in
stos
fstp
cli
in
iret
fst
loopne
(bad)
dec
loope
scas
mov
movs
je
aad
into
mov
hlt
out
mov
xchg
mov
or
mov
dec
and
iret
ss
lds
xor
jnp
mov
gs
shl
or
pop
std
dec
cmp
int
ss
push
icebp
mov
rol
push
sbb
mov
cmp
gs
(bad)
rol
scas
xchg
test
adc
jp
lods
mov
(bad)
dec
adc
cmp
cmc
cmps
or
(bad)
cmp
sti
ret
cmp
mov
aaa
jmp
fbstp
dec
inc
jbe
retf
cmps
or
pop
sub
jo
and
or
mov
out
fwait
or
mov
cmp
ja
sar
xchg
loop
pop
cmp
loopne
out
adc
je
movs
jnp
sbb
cs
loopne
lods
test
mov
cmp
cmp
pop
das
xor
and
mov
dec
xor
repz
adc
rcr
mov
cmps
jb
xchg
add
push
push
sbb
mov
sbb
pushf
test
mov
sahf
xor
and
icebp
dec
pop
pushw
pop
push
inc
shr
push
mov
into
inc
inc
xchg
movs
(bad)
es
dec
enter
fcom
sub
or
push
add
cwde
add
loope
scas
(bad)
repnz
pop
call
mov
mov
xchg
jbe
fs
test
mov
dec
js
aas
pop
xor
in
mov
inc
sbb
cmps
pop
js
and
push
xor
call
pop
dec
inc
retf
cmp
aad
adc
cmps
ffree
leave
add
mov
test
or
pop
mov
test
outs
iret
add
adc
mov
add
pushf
inc
adc
iret
cli
push
add
in
hlt
add
fiadd
push
mov
mov
out
mov
xor
mov
pop
cmp
xor
jne
shl
pop
mov
scas
or
push
jge
(bad)
push
push
sbb
xchg
add
sbb
pop
fisttp
outs
cwde
mov
mov
push
aad
call
cmc
xor
jmp
jae
test
inc
xlat
stos
sti
pop
gs
sub
(bad)
mov
std
cwde
les
pop
(bad)
imul
dec
mov
push
int3
sbb
inc
call
fs
pop
xchg
push
mov
idiv
sub
add
or
add
aam
inc
pop
scas
test
lock
jecxz
sub
mov
fdiv
lods
stos
inc
sbb
call
adc
clc
mov
aaa
mov
les
or
in
iret
fimul
sub
inc
dec
fdivrp
mov
push
mov
rol
add
clc
nop
pop
pop
mov
mov
add
and
fcmovnu
ss
ror
mov
jbe
mov
and
mov
(bad)
call
jnp
fsub
imul
and
and
sbb
and
fstp
in
shl
ror
mov
adc
inc
jae
or
loope
ret
aas
ins
xor
sub
cmp
mov
mov
cld
or
popa
rcr
push
sti
and
mov
and
stos
xchg
(bad)
scas
leave
adc
push
dec
lods
sub
cmp
cdq
xchg
pop
loop
and
sub
cmp
inc
mov
test
in
or
mov
je
mov
inc
pop
add
and
mov
add
mov
int
xchg
das
in
xor
mov
dec
inc
xchg
loopne
jl
mov
sbb
jmp
or
inc
jnp
push
push
push
aas
sbb
icebp
repz
call
icebp
daa
mov
dec
adc
outs
call
cmps
mov
hlt
sar
xchg
pop
mov
mov
inc
xchg
loop
mov
jge
je
dec
cli
mov
loopne
fistp
xchg
mov
pop
fwait
xchg
cmc
out
ficom
sub
sub
inc
shl
and
(bad)
jno
or
adc
sub
into
pop
xor
adc
mov
shr
out
fist
mov
dec
mov
rcl
sbb
inc
cld
pmaxub
out
call
je
or
ins
out
fild
fcmovb
scas
and
jnp
jge
ja
jnp
pop
ss
aas
pop
sbb
jle
pop
add
fisubr
sub
mov
xchg
xor
add
push
jecxz
jnp
ret
ins
adc
xchg
sub
cwde
lods
adc
retf
js
mov
xchg
in
cld
jno
jo
scas
fs
data16
cmp
pop
jg
int3
dec
and
dec
adc
xchg
in
mov
cmp
and
adc
pop
pop
call
leave
or
fiadd
jmp
ins
cmp
mov
out
push
cld
push
enter
cmp
add
sbb
or
rcl
mov
jns
push
daa
sbb
fnsave
out
loope
jmp
jecxz
sbb
cmp
fcomp
pop
in
inc
(bad)
adc
retf
jmp
mov
jmp
test
aad
xchg
arpl
push
sahf
dec
fsub
pop
sbb
push
inc
into
jae
out
popa
pop
add
rol
xchg
push
sti
xor
out
jne
mov
int
pop
test
lea
xchg
add
sbb
mov
mov
push
pushf
add
push
jb
push
dec
loop
pop
in
hlt
iret
pop
add
jae
leave
pop
xchg
pop
push
adc
adc
repz
mov
push
imul
pop
xchg
xor
jecxz
jae
or
sub
out
or
ds
mov
sub
(bad)
clc
inc
in
fsubr
out
inc
inc
imul
mov
movd
add
mov
mov
xlat
add
add
gs
add
push
cwde
sbb
inc
mov
test
and
push
fs
jo
jbe
test
jns
mov
sub
iret
add
call
push
sbb
movs
std
add
jp
ins
or
aaa
add
cmps
cwde
fbstp
push
and
es
dec
or
push
push
add
cs
pop
push
xlat
popf
ins
jo
(bad)
mov
pop
xchg
sti
dec
in
mov
jns
and
sub
fdiv
outs
push
mov
ficomp
dec
rol
test
jmp
mov
lods
dec
pusha
sub
enter
push
add
cmp
jbe
je
mov
lahf
pop
xchg
scas
cmp
add
pop
jp
or
in
and
(bad)
movs
mov
test
les
sti
cmc
jno
jo
mov
stos
in
jl
pop
and
pop
pop
xlat
les
mov
sub
aas
rol
inc
(bad)
push
mov
xor
ds
jmp
mov
jae
push
scas
mov
xchg
adc
imul
scas
add
bound
add
addr16
stos
add
aas
adc
adc
test
movs
xchg
movs
out
scas
int3
mov
sar
add
inc
xchg
inc
shl
or
push
das
cwde
loope
mov
imul
mov
or
sub
pusha
mov
cmp
stos
mov
repnz
stos
into
cmp
not
push
inc
cmps
aad
repnz
fwait
push
ja
retf
inc
hlt
retf
fisttp
mov
cmp
mov
jnp
mov
in
mul
push
jb
mov
sbb
movs
cmps
in
gs
push
rol
xchg
inc
adc
jg
mov
pushf
push
movs
outs
xchg
xchg
xor
inc
dec
mov
ins
retf
dec
and
pop
dec
or
mov
and
xchg
pop
leave
jnp
pop
mov
lods
push
dec
shr
sub
sbb
cmc
repz
test
inc
jge
dec
(bad)
icebp
sub
rcl
mov
stos
jmp
sub
inc
bound
call
push
push
enter
lea
cmps
imul
mov
pop
or
adc
shr
cmp
out
sbb
push
scas
cdq
xor
pop
ins
cwde
dec
xchg
sahf
jnp
sub
int3
pop
popa
and
test
fdivr
jb
out
imul
push
retf
sbb
xchg
xchg
mov
pushfw
add
dec
out
xchg
std
mov
and
test
pop
sub
jo
xchg
je
in
add
loop
out
sbb
scas
aaa
push
sub
sar
pop
call
push
cs
push
and
pop
cmp
cmps
jns
or
cmc
xor
into
sub
add
sar
test
in
mov
add
and
cmp
fcom
cs
cmps
inc
cmp
rcr
xchg
jmp
and
int3
sub
add
aad
push
push
jg
pop
sub
sub
adc
loop
jns
pop
jb
pop
repz
(bad)
idiv
mov
xchg
in
pop
jne
xor
pushf
ror
and
clc
into
add
sar
out
mov
pop
dec
jb
pop
mov
cmc
mov
lods
jle
dec
mov
jg
fmul
je
mov
sbb
hlt
(bad)
push
xchg
test
cmp
out
mov
jno
mov
pop
aas
out
mov
mov
ins
(bad)
dec
sbb
mov
dec
xchg
mov
test
ds
push
cli
mov
adc
imul
pop
not
mov
cmps
xchg
jg
mov
xchg
mov
xchg
mov
in
(bad)
sbb
pop
fisttp
pop
jno
mov
dec
and
leave
jg
push
jge
xor
mov
fs
test
xor
int
mov
aas
xlat
inc
nop
and
sub
push
inc
mul
mov
aam
call
mov
retf
stos
cmp
shl
or
pop
xchg
xor
addr16
in
sbb
mov
or
adc
dec
cmp
mov
xchg
and
mov
ret
sahf
mov
cmps
or
and
ret
add
bound
mov
push
imul
out
rcl
repnz
add
mov
out
ds
adc
mov
push
add
or
std
stos
xchg
push
jns
(bad)
mov
cmp
pop
mov
les
jg
mov
and
mov
loopne
mov
cmp
mov
xchg
movs
dec
ror
std
pop
sbb
or
inc
jmp
adc
xchg
call
scas
les
jno
inc
outs
push
(bad)
sbb
ins
fdivr
iret
into
cmp
push
add
inc
scas
and
xchg
mov
jp
outs
sahf
daa
enter
das
dec
pop
adc
(bad)
stos
fstp
jl
or
call
retf
sub
push
loope
mov
adc
call
lods
in
xchg
test
in
jb
out
psubsb
pop
inc
mov
ja
and
out
rol
ja
mov
mov
sub
fs
les
pop
repnz
dec
popf
push
nop
adc
xchg
rol
retf
ret
mov
bound
daa
in
popa
es
mov
(bad)
out
mov
cli
sbb
stos
out
loopne
push
out
iret
retf
sbb
fsub
and
cmp
movs
(bad)
jmp
push
cmp
cmps
arpl
gs
mov
jbe
enter
call
loop
fwait
and
add
cmp
out
xor
cmp
cmps
retf
push
mov
(bad)
push
and
stc
xor
add
je
mov
scas
sbb
dec
ds
xchg
or
out
loopne
xor
scas
pop
clc
(bad)
sar
mov
cmp
ss
fldcw
imul
fistp
mov
retf
das
es
mov
push
or
dec
mov
clc
sbb
xchg
mov
outs
cli
xor
mov
nop
adc
inc
push
loop
cld
mov
je
sbb
ins
add
add
jo
dec
push
sub
jns
aam
fbld
cmp
in
push
and
ss
push
xor
add
mov
pushf
mov
in
lods
cwde
or
push
sbb
cmc
add
or
push
cli
aam
push
repz
xchg
or
or
cld
mov
mul
push
fisubr
pop
out
dec
jbe
mov
inc
or
cwde
imul
mov
(bad)
cmps
add
pop
mov
daa
jne
mov
fild
pop
mov
dec
sub
dec
out
jae
leave
movs
cmps
leave
mov
cwde
pop
jmp
iret
into
inc
xchg
ret
or
lods
daa
mov
leave
or
aaa
dec
jge
add
(bad)
stos
in
adc
sar
xchg
std
mov
movs
popa
sbb
outs
jbe
push
stos
movs
(bad)
movs
outs
cmp
push
and
inc
add
sbb
lds
sbb
jmp
sub
inc
pop
and
outs
xchg
jae
popf
adc
adc
adc
xchg
stc
cwde
add
data16
add
jg
bound
mov
mov
lods
in
or
mov
xchg
(bad)
jecxz
rol
and
fs
mov
(bad)
fwait
and
cwde
cmp
lahf
mov
stos
jmp
jecxz
or
and
je
sub
test
mov
and
mov
lods
push
iret
ret
dec
push
shl
xchg
add
cwde
fistp
add
gs
sub
arpl
or
mov
push
dec
adc
mov
int
xchg
jns
out
cmp
add
test
in
add
idiv
(bad)
inc
and
(bad)
in
sbb
popf
push
test
or
pop
mov
mov
lahf
mov
js
xchg
pop
pop
inc
add
pop
pop
daa
dec
ja
retf
cmovbe
das
rcr
jp
cvtps2pd
retf
or
mov
push
add
sbb
fst
jge
mov
pop
push
mov
cmc
ss
sti
xchg
jle
movs
mov
xlat
sub
or
arpl
lods
jo
sub
enter
in
mov
mov
push
jb
shl
pop
xor
push
adc
xchg
and
mov
lock
add
int3
call
mov
(bad)
in
fcomp
pop
(bad)
cmp
push
jbe
clc
push
pop
sahf
icebp
jo
sub
jecxz
or
cdq
mov
add
cwde
xchg
mov
xchg
dec
push
cmps
sub
pop
jns
jnp
push
adc
bound
dec
pop
loop
add
sar
pop
push
mov
xor
cmp
mov
mov
jno
and
jmp
repnz
fmul
xchg
iret
das
addr16
push
mov
mov
push
test
fcomp
dec
xor
cmps
call
repnz
and
adc
je
cdq
sbb
stos
mov
outs
leave
mov
pop
inc
pop
xor
movs
lods
jne
xor
sub
pop
(bad)
fsub
call
pop
dec
adc
(bad)
sub
xor
adc
push
add
rcl
xchg
es
cmc
push
xchg
arpl
dec
sbb
clc
push
movs
les
js
adc
cmps
jno
adc
mov
dec
inc
shl
daa
fsub
inc
pop
push
stc
mov
dec
jmp
push
pop
jle
shr
add
inc
popf
jnp
adc
jg
add
in
mov
and
sbb
inc
rcr
lods
outs
test
jmp
shr
mov
jo
or
or
mov
popf
pop
or
lods
jb
inc
rcr
dec
jmp
inc
repnz
xor
popf
ins
outs
xchg
fild
sub
and
aas
push
cs
cmp
sub
dec
cs
pop
sub
cmp
imul
or
loop
std
aas
lods
or
mov
out
push
fcom
(bad)
and
dec
cmps
popf
das
sub
add
pop
add
xor
sbb
retf
test
in
mov
ds
ss
loope
sbb
enter
in
rol
mov
cmp
lahf
dec
arpl
mov
mov
popf
xchg
dec
rcl
xor
lods
int
jo
push
sub
xchg
jmp
pop
jne
shl
push
dec
out
mov
leave
enter
rol
xchg
adc
inc
adc
add
icebp
or
shr
push
mov
iret
add
xor
repnz
into
dec
bound
xchg
(bad)
or
aaa
mov
jae
test
push
outs
sbb
xchg
inc
movs
stos
dec
psubsb
add
ins
and
cli
movs
or
nop
ins
inc
or
in
outs
xchg
jne
int
fmulp
jecxz
dec
xchg
cmp
les
sub
into
ds
leave
jbe
adc
adc
arpl
call
or
stos
jbe
or
mov
xor
scas
imul
push
aad
xor
lods
dec
sub
cmp
mov
push
push
and
mov
(bad)
daa
shr
mov
nop
xchg
jno
and
xchg
xchg
and
call
icebp
mov
in
and
cmps
outs
dec
and
xor
push
dec
pusha
test
pop
sub
inc
xchg
xor
addr16
inc
int3
out
call
push
fmulp
scas
add
jae
loope
out
fild
bound
or
iret
(bad)
stos
bnd
xor
mov
je
lods
daa
sahf
mov
jecxz
push
ss
cmp
aas
jae
pushf
xchg
dec
pop
mov
icebp
fnstcw
fstp
dec
icebp
scas
xlat
hlt
mov
ret
pusha
les
push
lahf
mov
retf
cmp
shl
scas
jnp
and
inc
push
xchg
pushf
shl
sbb
cmp
out
adc
sub
jg
arpl
and
les
std
call
in
xor
jmp
inc
sysexit
xchg
nop
add
adc
push
fcos
cmp
add
inc
repz
bound
mov
call
gs
in
mov
repz
lea
retf
and
test
hlt
imul
sbb
inc
mov
or
xchg
xabort
inc
call
clc
int
mov
xor
or
fisttp
inc
shr
stos
les
and
pop
pop
call
sbb
dec
scas
jb
jecxz
or
sbb
push
mov
mov
mov
fcomp
adc
jno
imul
xor
stc
mov
into
test
push
pushf
mov
sar
(bad)
cmp
adc
cmp
xor
xchg
pop
in
cmp
scas
jbe
mov
add
add
out
jmp
ins
ror
out
cmp
cmps
ror
cli
push
add
nop
push
jbe
mov
cmp
add
mov
lea
mov
dec
push
add
mov
mov
movs
(bad)
fidiv
mov
fdivr
xor
jl
lock
test
call
jb
or
push
and
lock
repz
inc
outs
jae
aaa
enter
dec
xchg
cld
test
rcr
adc
mov
(bad)
retf
aad
scas
and
adc
inc
cmp
sub
dec
push
and
fstp
scas
dec
jmp
inc
lods
fwait
mov
cdq
push
jo
lods
lahf
push
pop
popa
fsubr
push
cmp
sti
jns
dec
pop
inc
pop
inc
sbb
jb
popf
out
cmps
cmps
and
xor
cmps
jge
jge
mov
scas
sbb
jb
jae
mov
lds
repnz
xchg
sub
retf
rdtsc
jns
aad
or
mov
xlat
in
mov
pop
sub
push
sbb
pop
xor
push
xchg
add
(bad)
mov
daa
dec
loope
mov
inc
push
xchg
add
xchg
mov
sti
icebp
xor
cmp
xchg
cmps
mov
loopne
push
or
pop
stos
dec
add
loopne
fist
ins
imul
add
data16
mov
mov
test
cmc
int
out
ret
xor
xor
jecxz
sub
sbb
popa
xchg
jecxz
jnp
mov
dec
cld
add
ret
sub
sbb
mov
xor
rcl
xchg
popa
mov
cmp
inc
jne
imul
retf
ins
mov
xchg
and
inc
cwde
pop
add
pusha
mov
mov
and
cmp
pop
stc
mov
lahf
sbb
xchg
jge
xchg
(bad)
shr
(bad)
fld
mov
fadd
pop
dec
jnp
or
pop
jmp
add
leave
(bad)
jl
jo
pop
shr
jg
pop
sub
ret
add
(bad)
xchg
jmp
ret
in
push
int3
add
test
sub
leave
lahf
popa
adc
pop
adc
into
inc
movs
inc
dec
mov
jbe
inc
ficomp
(bad)
jmp
pop
sub
ret
sahf
nop
dec
jae
ins
pop
and
pusha
jecxz
inc
sub
mov
or
call
mov
imul
sub
jecxz
out
adc
jnp
sbb
jne
leave
iret
sub
pop
sbb
scas
jae
push
or
fst
test
sub
and
ds
xchg
add
cmp
pop
sar
cwde
jne
test
movs
cmp
cmp
or
inc
jl
sub
and
mov
pop
jecxz
fneni(8087
jg
pop
xchg
les
sbb
and
xor
fcomp
mov
lods
xchg
cmp
jp
push
out
sbb
dec
cld
(bad)
retf
pop
dec
push
loope
out
sub
cmp
js
daa
mov
fdivr
push
push
mov
les
sub
inc
test
dec
out
in
les
fnstcw
xor
in
rol
les
push
mov
xchg
mov
xlat
bound
and
mov
push
mov
dec
leave
xchg
and
inc
pop
fwait
rcl
dec
adc
cs
pop
aaa
xor
mov
adc
cmc
pop
jbe
sub
loope
or
out
lds
xchg
xchg
xchg
mov
pop
dec
or
jae
sub
adc
outs
push
add
mov
test
mov
sub
mov
cmp
add
xchg
shr
sub
cmps
add
(bad)
lock
cmp
sbb
push
into
pop
pusha
pop
pop
adc
pushf
int
fwait
retf
xchg
pop
pop
xor
in
loope
xor
clc
ds
mov
push
jle
push
inc
push
les
add
arpl
jmp
cwde
add
addr16
xchg
push
or
aas
add
rol
adc
or
cmp
cmc
ins
in
jmp
or
out
lahf
cmp
adc
jl
scas
or
or
jmp
pop
rcr
ins
imul
mov
mov
adc
pop
enter
outs
frstor
add
and
adc
or
aam
jmp
pop
lods
mov
push
xor
cmc
jp
out
cmp
xor
call
jns
push
xor
jnp
xchg
push
jecxz
test
out
sbb
xchg
pop
ror
fbld
pop
loopne
cmc
fld
jnp
bound
dec
fnsave
stc
add
out
mov
lods
xchg
lods
fistp
cdq
shr
xor
sbb
int
push
push
mov
and
push
sub
ins
mov
and
sbb
mov
ss
mov
add
xchg
mov
outs
mul
jns
lahf
cli
je
popa
dec
dec
stos
xor
rol
dec
sbb
mov
ret
jbe
or
cmp
bound
xor
stc
push
movs
pop
xchg
and
inc
outs
mov
inc
add
add
adc
push
dec
push
push
data16
mov
rcr
(bad)
int
aas
dec
jns
in
repz
jl
lock
fdivr
das
ss
push
shl
push
fs
push
xchg
neg
je
mov
cmc
inc
jl
mov
enter
movs
mov
popa
in
push
mov
inc
scas
rol
push
ror
inc
add
bound
sbb
or
push
lea
dec
test
xchg
add
and
jge
jno
retf
ja
push
and
jno
or
mov
ja
int
daa
sar
fisttp
ror
pop
mov
repz
add
test
sbb
mov
mov
push
adc
loop
sub
(bad)
xchg
xchg
stc
sahf
dec
(bad)
dec
pop
jnp
clc
dec
xchg
jns
xlat
scas
daa
ja
ins
repnz
lahf
mov
inc
cmc
dec
jnp
mov
sar
mov
mov
out
call
fs
lea
cmp
fiadd
mov
fsub
jno
(bad)
xchg
and
mov
mov
jns
adc
push
fld
idiv
jmp
nop
mov
xchg
sbb
mov
mov
out
adc
sub
jg
call
std
jns
rcr
out
stos
push
clc
mov
pop
jne
push
je
arpl
adc
cs
out
shl
cmp
pop
mov
sub
pusha
pop
add
adc
in
sahf
ja
jbe
test
int
(bad)
mov
mov
xchg
in
mov
aam
mov
inc
add
mov
cmp
es
jmp
fxch
jbe
adc
popa
and
stos
pushf
inc
inc
sbb
adc
mov
les
dec
aam
in
stos
xor
sbb
das
jecxz
cmp
retf
loop
pushf
sbb
cmp
or
rcl
jmp
push
addr16
jl
retf
dec
mov
xor
gs
cmp
mov
jno
inc
call
cmp
pop
in
xchg
sbb
in
pop
fs
mul
mov
adc
inc
sar
add
std
and
aas
mov
fmul
shl
ror
gs
bound
cmc
pop
dec
mov
repnz
sti
sbb
mov
cmp
fs
test
push
jmp
cmp
test
xor
cs
cmp
(bad)
and
push
add
cmp
mov
shl
mov
pop
mul
je
dec
inc
jb
and
ins
dec
iret
adc
fwait
stos
and
test
aad
and
mov
popa
jno
call
push
dec
(bad)
jb
cmp
ins
adc
in
sbb
mov
sub
test
(bad)
fwait
xchg
iret
and
and
mov
adc
mov
ds
jp
jp
and
sbb
pop
pop
sub
or
inc
retf
xor
pop
repnz
mov
fsub
push
mov
xor
xor
jp
into
fiadd
pop
pop
cwde
scas
jl
stc
or
xchg
aaa
sbb
aas
lahf
mov
pop
js
iret
jns
mov
push
add
in
jno
mov
int
dec
lods
ss
xchg
xchg
pop
xor
sbb
adc
push
iret
dec
add
jno
call
mov
icebp
adc
loopne
inc
cmp
cld
xchg
loopne
pop
mov
xlat
adc
xchg
pop
cmps
xor
add
cwde
dec
inc
sub
dec
xchg
imul
mov
mov
add
test
sub
(bad)
in
push
popf
je
jmp
mov
push
or
in
subps
(bad)
adc
dec
mov
xchg
je
xor
vmaxss
shl
push
loop
call
ror
and
add
cmp
dec
sti
ins
jmp
mov
xor
push
xor
fnstenv
adc
jp
adc
xlat
cmp
cmps
leave
dec
cmp
shl
or
(bad)
enter
in
cmp
adc
cmp
dec
pop
mov
adc
sahf
aam
aas
mov
bound
mov
jb
dec
add
push
sub
popf
or
and
sub
xor
aam
(bad)
xchg
in
dec
pop
iret
push
shl
inc
jbe
inc
mov
out
cs
pop
inc
dec
mov
retf
and
sub
sub
loope
mov
push
aaa
shl
cmp
jno
pop
enter
jge
popf
or
inc
mov
aam
int3
push
mov
lods
lock
and
sub
dec
jmp
test
dec
int
sbb
repz
mov
sar
jmp
pop
outs
popa
cli
dec
pop
or
enter
stos
xlat
mov
aam
xchg
push
adc
repnz
mov
xor
mov
add
mov
shr
and
sbb
ret
mov
fs
pop
dec
xor
push
pop
dec
mov
inc
mov
sub
adc
pop
xor
daa
xchg
stos
sbb
inc
pop
pop
jmp
inc
fdivr
dec
scas
mov
mov
xchg
adc
mov
fisubr
xor
add
movs
xor
add
ins
xor
inc
mov
pop
stos
and
inc
ret
cmp
jne
in
(bad)
shr
xlat
add
add
mov
xor
cli
shl
sub
jge
xchg
shr
bound
xchg
or
loopne
fsub
pop
adc
inc
scas
push
into
ins
jmp
scas
push
(bad)
jge
pop
push
cmp
dec
mov
pushf
xchg
jg
and
push
mov
inc
mov
xlat
push
cs
jno
inc
repz
or
jns
sub
sbb
mov
xchg
dec
jnp
jge
addr16
cmc
test
lods
stos
mov
scas
pop
ins
jo
pop
xor
or
adc
(bad)
aam
pop
mov
push
and
cmp
loopne
dec
mov
data16
aam
fbld
adc
add
xchg
add
stc
in
or
pop
cmp
rcr
push
bound
cs
adc
gs
mov
cwde
imul
ret
jb
in
repnz
aad
ins
mov
cmps
xlat
adc
sbb
sbb
add
maskmovq
mul
in
xor
mov
fwait
push
cmp
dec
adc
imul
rcr
push
in
xor
mov
mov
mov
xchg
hlt
cmp
jl
mov
mov
mov
cmp
movs
pop
inc
pop
push
mov
xor
jb
xchg
test
lahf
dec
lods
ss
xchg
pushf
neg
test
add
jl
ficomp
pop
mov
dec
popa
jbe
push
push
mov
and
inc
daa
inc
or
dec
mov
mov
or
loope
lods
inc
cmp
call
stos
mov
outs
loope
test
mov
xchg
inc
or
sbb
push
ja
aam
sahf
repnz
sub
lods
inc
scas
fs
ds
cmps
xchg
imul
sub
sbb
int
and
retf
int
push
pop
mov
pop
inc
sub
mov
ds
mov
pop
adc
push
shl
loope
pop
xor
arpl
(bad)
in
inc
pop
adc
dec
dec
mov
call
neg
scas
mov
rcl
push
into
outs
rcl
mov
dec
cmp
ds
arpl
fs
push
retf
int3
sbb
in
add
add
fnstenv
(bad)
bound
test
and
jl
aas
out
test
jmp
addr16
enter
dec
movs
shl
stos
xor
jp
(bad)
cwde
sbb
or
aaa
int3
cmc
xor
out
es
sub
test
mov
retf
les
fcom
scas
jmp
mov
mov
popf
and
xor
lods
add
outs
in
dec
es
cs
into
mov
sbb
cdq
pushf
mov
(bad)
or
repnz
outs
mov
sub
and
popa
loope
inc
mov
outs
ret
push
cmp
or
cdq
push
mov
les
xlat
jmp
fcmovnbe
stc
shl
(bad)
adc
inc
push
pop
int
out
jg
bound
cmp
cli
inc
out
pop
cwde
loope
div
xchg
xchg
push
push
mov
sbb
call
and
movs
call
adc
add
xchg
mov
xchg
addr16
pop
scas
mov
xchg
loop
sbb
scas
inc
retf
jecxz
out
lds
pop
lds
fdiv
pop
loope
shl
ret
div
(bad)
les
dec
sub
pop
adc
or
nop
mov
jne
daa
outs
mov
adc
mov
div
dec
push
scas
push
fiadd
aam
mov
push
rcl
push
xchg
aaa
sub
fnstcw
enter
mov
cmc
in
pop
sbb
bound
ret
mov
fwait
cld
mov
aaa
mov
jg
bnd
inc
mov
fadd
push
jnp
pop
lods
push
jg
adc
mov
retf
cwde
dec
push
pop
xor
iret
mov
idiv
sub
pop
mov
jmp
pop
scas
pop
sub
fistp
nop
lahf
arpl
into
mov
test
dec
(bad)
fs
sbb
adc
ins
mov
mov
dec
inc
push
arpl
adc
add
(bad)
mov
push
js
xchg
push
je
imul
adc
ins
outs
mov
mov
rol
rcr
xchg
test
cdq
sub
daa
movs
out
pop
pop
push
fidiv
loopne
rep
mov
jne
xchg
inc
push
dec
pop
cmp
int
mov
and
aaa
loopne
(bad)
in
jnp
pop
fstp
jl
fimul
ds
xchg
aam
fdivr
cwde
sbb
or
popf
push
imul
xor
jnp
out
lds
jmp
sub
psllq
(bad)
xor
xchg
icebp
pop
xchg
xchg
test
pop
xchg
sbb
sub
shl
push
rcr
aam
ret
sbb
xor
inc
xchg
dec
sti
movs
arpl
jno
lods
iret
adc
and
adc
mov
jl
lods
add
sbb
loop
xchg
cmp
jae
f2xm1
push
fwait
out
repnz
fimul
mov
iret
adc
inc
in
mov
ss
mov
scas
jo
mov
lock
dec
movs
cli
xor
add
add
mov
jae
mov
xchg
xlat
int3
lods
das
ja
xchg
sbb
fcom
(bad)
ins
sbb
pop
jp
pop
retf
jnp
inc
pop
mov
mov
pop
jno
popf
cmp
dec
sub
xchg
sbb
mov
or
mov
stc
cmp
in
adc
loop
(bad)
les
adc
dec
ins
cmc
cwde
(bad)
xor
into
fsubr
jno
adc
push
cmp
or
cmp
jmp
mov
dec
icebp
pushf
sub
cmp
inc
push
mov
sbb
and
cmp
stos
cmp
ss
sar
xor
xor
lds
in
push
daa
in
sbb
pusha
mov
sub
sub
in
cs
test
fsubrp
inc
sub
fst
jb
icebp
add
and
sbb
movs
sub
retf
outs
sbb
shl
dec
scas
inc
sub
ret
popa
mov
jle
ins
pop
je
mov
sub
jge
or
fnstcw
mov
xchg
pop
outs
and
and
sti
jne
sahf
loope
jbe
mov
mov
xor
mov
cmp
(bad)
mov
test
ret
or
jmp
sub
scas
mov
mov
inc
in
xor
push
xor
and
popf
ins
(bad)
and
pop
in
std
sub
pop
sbb
inc
clc
mov
mov
ret
jmp
jmp
jmp
iret
add
sar
or
test
mov
jp
je
add
add
ja
dec
outs
xor
pop
pop
add
cmp
sub
mov
loope
xchg
xor
mov
stos
stos
sbb
cmp
pop
push
jecxz
push
test
loop
inc
xchg
mov
pop
pop
sti
cld
je
lea
jmp
cmc
arpl
pop
xor
call
icebp
pop
cmp
stos
in
loop
fisttp
loop
add
xor
sti
xor
adc
add
xlat
call
lahf
dec
addr16
push
push
pop
jmp
mov
rcl
fwait
ret
mov
dec
jne
push
fcmovb
dec
outs
and
pop
adc
sbb
ficomp
mov
push
loop
call
in
repz
std
mov
inc
mov
mov
add
clc
call
push
mov
cmp
dec
(bad)
scas
das
pop
vmread
ror
jp
stos
xchg
call
into
mov
sub
inc
cld
jmp
add
movs
(bad)
nop
pushf
(bad)
adc
add
sti
add
test
hlt
lds
movs
cs
out
iret
ror
xor
std
test
mov
fsub
add
into
pushf
lods
pusha
cdq
cmp
retf
inc
push
les
pushf
inc
aas
mov
jbe
and
(bad)
adc
push
inc
out
sar
adc
xchg
pop
mov
dec
mov
pushf
sub
hlt
mov
sbb
push
add
pop
xor
pusha
push
sbb
push
sti
push
dec
test
sub
icebp
inc
jecxz
sub
out
fistp
or
arpl
mov
cmp
xchg
sti
jo
xor
jb
aam
cmovo
stos
std
pop
jo
push
xchg
outs
fsubr
popa
jmp
inc
sub
outs
pop
icebp
(bad)
sub
clc
retf
adc
imul
adc
pop
push
out
adc
sub
lahf
stos
addr16
push
jle
mov
push
jno
cli
mov
test
arpl
outs
cmp
mov
cs
fnstcw
jp
stc
push
stos
loop
and
and
push
pop
add
call
add
nop
dec
inc
add
inc
xchg
(bad)
shr
cmp
push
xchg
mov
shl
mov
adc
int3
cli
retf
mov
ins
in
mul
or
xchg
mov
(bad)
adc
hlt
test
fisubr
push
xchg
test
or
into
sub
data16
dec
lahf
into
lods
cwde
mov
xlat
imul
or
test
(bad)
pop
jae
pop
push
in
pop
mov
repnz
xor
loop
out
fstp
repz
add
dec
int
cmc
popf
or
xor
pop
xchg
outs
add
push
inc
fiadd
pop
call
retf
and
loop
push
ins
sub
mov
adc
adc
rcl
sub
xor
int3
les
pop
pop
xor
cmp
jecxz
jns
movs
sbb
lock
jl
jne
cld
call
out
sub
sbb
repz
(bad)
js
std
popa
jo
js
push
bound
push
adc
push
sti
and
and
das
pop
es
xlat
mov
xor
pushf
iret
lods
aas
cmps
mov
mov
outs
mov
inc
dec
jo
fucom
fldenv
dec
push
test
ja
adc
inc
jecxz
lods
jmp
ret
daa
stc
shl
inc
repnz
test
xchg
leave
enter
jb
sbb
jo
lds
and
sbb
cdq
push
xchg
mov
mov
cmp
sbb
adc
push
adc
and
dec
sub
sbb
xchg
mov
pop
xchg
pop
mov
adc
jmp
sub
and
inc
add
xchg
mov
mov
inc
sti
les
dec
in
in
inc
int
ins
adc
stos
xchg
jno
pop
rol
sub
ror
ins
jbe
fmul
jae
mov
adc
mov
sahf
adc
cli
cmc
and
dec
xchg
inc
repz
popa
xor
fwait
push
retf
jae
sub
pop
fld
fs
shl
push
sub
aas
into
test
xor
cmp
shl
bound
dec
inc
neg
scas
stos
fisubr
mov
ins
scas
(bad)
int3
movs
fild
push
jae
mov
mov
movs
xchg
mov
(bad)
fcmovnbe
ftst
popa
test
dec
shl
jmp
mov
xor
push
rcr
xor
add
sub
add
mov
xor
xor
or
cmp
lds
imul
xor
inc
not
sbb
imul
fidivr
js
xor
les
or
ret
xchg
cmps
jge
retf
inc
adc
cmp
lods
mov
or
pop
cld
and
cld
aam
mov
outs
fiadd
stos
add
outs
lock
retf
sbb
sub
int3
aaa
das
popa
es
jbe
inc
jg
inc
fld
rcl
fldenv
ret
popa
sbb
je
add
repz
mov
jno
(bad)
ss
xor
dec
push
dec
pop
(bad)
or
add
mov
xchg
mov
pop
loopne
and
jge
cld
push
pushf
and
cmp
cli
jno
loope
sbb
shr
in
nop
ret
jmp
mov
push
out
mov
inc
out
adc
or
xchg
push
call
arpl
inc
rcl
cld
jnp
add
scas
in
dec
std
sub
pop
(bad)
xor
jle
ret
jne
add
clc
inc
jmp
scas
adc
call
rol
retf
or
cmp
fld
push
int
inc
jg
std
xor
add
push
cli
and
pop
bound
js
cdq
movs
int3
repz
add
xor
pop
loopne
popa
cmp
sub
jecxz
xchg
xchg
std
out
and
add
fimul
sub
pop
jp
jle
out
retf
retf
sbb
cwde
mov
jb
jo
cmps
test
xlat
inc
xchg
aaa
xor
ss
lods
cmp
dec
es
dec
or
xor
mov
and
add
lea
in
movs
pop
sbb
(bad)
std
and
mov
push
adc
xlat
stc
sub
lahf
stos
mov
stos
sub
adc
aam
xor
inc
jo
push
xchg
dec
imul
out
mov
int
movs
mov
outs
sub
adc
jp
cmps
push
gs
call
neg
fwait
inc
add
aad
or
xor
add
test
jns
(bad)
xchg
retf
inc
leave
add
js
into
push
inc
and
inc
jle
js
in
or
sti
sub
bound
out
xchg
or
mov
popf
jle
stos
push
mov
out
sbb
add
into
mov
(bad)
or
and
xor
inc
int
sub
std
bound
push
fs
sbb
inc
lea
repnz
xor
jne
loop
adc
sub
mov
dec
sahf
xlat
stc
imul
shl
adc
test
cs
rol
aas
and
lods
(bad)
imul
xor
(bad)
mov
ss
mov
xchg
pop
and
dec
pop
sbb
xchg
hlt
arpl
out
pop
or
adc
inc
in
lds
inc
or
fwait
jp
mov
and
inc
repz
inc
mov
imul
test
stos
mov
jae
xchg
ds
fs
inc
ret
loopne
lds
ins
jnp
in
arpl
inc
jmp
mov
jns
adc
inc
stc
in
mov
out
div
inc
ret
jne
test
add
pushf
aam
arpl
xchg
inc
mov
sar
xchg
in
test
addr16
jl
jle
push
out
jl
mov
loopne
neg
xchg
lock
call
push
and
xor
es
shl
cs
stos
daa
mov
int
xchg
cld
xor
movs
stc
inc
loopne
xor
add
imul
fdivr
mov
daa
out
xor
mov
ret
xor
inc
mov
in
arpl
mov
mov
and
push
push
adc
mov
cli
dec
imul
and
pop
data16
pop
inc
cmp
pushf
cld
sahf
or
je
retf
pop
xchg
push
pusha
int
ins
fdiv
jmp
movs
call
mov
jae
xlat
push
(bad)
es
rcr
jecxz
shr
(bad)
test
lods
lahf
je
sub
xchg
js
adc
scas
dec
xchg
add
in
mov
ins
sti
pop
loopne
push
mov
xor
movs
rcr
adc
int3
mov
in
(bad)
hlt
ja
addr16
adc
jge
mov
repnz
mov
shr
outs
mov
mov
add
cmp
shr
call
xor
inc
mov
inc
lahf
mov
cwde
cmc
mov
imul
push
xor
leave
es
pop
mov
xchg
das
imul
or
mov
mov
xlat
arpl
jcxz
pop
(bad)
imul
cmp
mov
jnp
cmp
shr
daa
or
jae
pop
(bad)
push
push
popf
jno
xor
inc
dec
(bad)
mov
xchg
xchg
push
push
hlt
push
inc
shl
push
cwde
mov
stc
and
ror
fadd
neg
add
arpl
or
retf
cwde
aad
in
rcr
es
jmp
cs
push
mov
dec
push
int
cmps
xchg
std
pop
(bad)
sti
pusha
int3
jo
jne
jne
sub
call
fcomp
add
hlt
sub
test
outs
sub
imul
and
xchg
or
jo
daa
aaa
ins
aam
add
adc
pop
add
mov
xor
test
xor
push
(bad)
(bad)
(bad)
lea
scas
call
pop
push
addr16
into
test
ins
mov
rol
mov
jle
in
es
(bad)
scas
test
jne
push
dec
and
dec
cld
add
push
or
addr16
push
in
lar
mov
dec
cmp
xchg
xchg
xor
enter
xlat
in
pusha
jl
loop
scas
mov
inc
inc
js
fs
test
mov
xchg
sub
add
dec
mov
int3
mov
xor
adc
fs
dec
out
push
jnp
mov
add
xchg
pop
push
xchg
cmp
or
es
or
pushf
bound
iret
dec
pop
mov
and
mov
sbb
sbb
push
dec
adc
and
push
mov
leave
fistp
scas
push
cmps
inc
int3
lahf
movs
jl
sbb
pop
loope
xchg
ins
dec
adc
push
repz
fs
pop
xor
sbb
ins
ret
fidiv
mov
stmxcsr
jg
push
push
xor
sub
mov
retf
mov
push
mov
lahf
xchg
sub
dec
push
xor
xchg
test
or
dec
addr16
fs
lea
inc
dec
mov
xor
or
mov
mov
sub
mul
aaa
mov
mov
mov
push
loopne
adc
jl
mov
addr16
lahf
rcr
and
popa
ss
mov
add
xor
in
(bad)
cmp
adc
add
dec
xchg
in
mov
fdivr
cmp
and
xchg
mov
sbb
fimul
add
shr
retf
adc
mov
add
jne
cld
sti
or
mov
jp
xchg
dec
jno
ja
icebp
outs
mov
xor
xor
js
ja
fld
test
xchg
xchg
sub
pushf
jbe
jnp
imul
fidiv
cmp
mov
and
dec
lahf
inc
daa
push
cmp
test
jae
cld
adc
and
retf
pop
ret
mov
bound
xor
dec
dec
cld
xor
loope
std
ds
mov
dec
sbb
dec
jb
mul
out
or
sub
imul
mov
jmp
(bad)
jecxz
push
push
xor
ret
in
mov
std
jle
sbb
icebp
mov
js
icebp
mov
mov
pushf
inc
ja
jle
push
gs
mov
xor
or
cmp
push
into
retf
mov
int
aas
xchg
shl
cs
cmc
gs
bnd
or
inc
fdiv
mov
mov
jecxz
sub
push
or
push
in
push
rol
xor
int3
dec
lea
xchg
cwde
xchg
les
mov
sub
(bad)
into
test
std
dec
jb
fidiv
in
push
xor
push
loope
stos
(bad)
pop
sub
or
nop
and
ins
data16
repz
mov
and
ret
jbe
sbb
jge
pop
data16
mov
(bad)
adc
(bad)
push
and
sub
aam
mov
test
icebp
(bad)
cmp
push
pop
pop
popa
lea
in
jmp
imul
frstor
inc
(bad)
cli
dec
dec
mov
call
xchg
call
cli
inc
je
mov
retf
sbb
lea
pop
js
retf
into
sub
(bad)
push
out
outs
dec
addr16
test
xchg
or
xchg
pop
xor
stos
push
in
push
icebp
cld
dec
push
add
sbb
loopne
lock
sbb
cmp
push
les
mov
xor
jg
mov
ds
dec
or
mov
pusha
inc
repz
in
push
xchg
xchg
outs
add
sti
mov
aaa
mov
in
popf
test
xchg
nop
sar
icebp
scas
repnz
ins
cmp
mov
dec
fstp
fwait
push
pop
(bad)
sbb
enter
inc
mov
fnstcw
cmps
sbb
stos
lods
repz
pop
xchg
or
xor
push
xor
jge
jno
outs
inc
repz
adc
stc
xchg
hlt
out
pop
mov
pushf
mov
mov
inc
push
xchg
ficom
cmp
sub
dec
cmp
pop
sub
stc
por
or
sub
push
xchg
scas
xor
pop
fwait
lea
arpl
or
into
and
jns
dec
inc
push
rcr
icebp
add
call
add
dec
jns
xchg
sbb
or
sub
test
or
sub
icebp
test
dec
loopne
lahf
mov
mov
retf
(bad)
out
add
out
retf
xchg
add
xchg
sahf
cmp
xchg
sbb
jnp
lea
push
sub
enter
jmp
xchg
je
scas
sbb
mov
add
popa
or
test
in
ins
and
add
cmp
outs
ffreep
and
mov
and
xchg
bound
push
mov
movs
cmp
or
arpl
adc
out
outs
ja
sbb
cmp
retf
mov
repnz
xor
rcr
mov
or
sub
fld
cvtps2pd
in
push
ins
sbb
cmp
out
rcr
retf
mov
aad
sahf
out
les
adc
(bad)
iret
jae
fcmovbe
out
sbb
and
data16
xchg
pushf
loope
imul
jno
sar
outs
add
xor
add
(bad)
into
mov
lock
imul
shl
(bad)
mov
cs
ds
mov
or
inc
cmp
mov
mov
and
pusha
daa
sbb
sbb
xor
fld
pop
xchg
out
out
lods
sub
pusha
add
shl
fcom
fwait
or
gs
pushf
enter
mov
rcl
and
mov
cmp
out
(bad)
sbb
es
inc
outs
std
xchg
cmp
scas
inc
movs
xchg
pop
and
imul
and
lahf
das
sti
hlt
or
stos
dec
cdq
add
pop
xor
inc
stos
lds
sub
in
push
stos
mov
xor
test
add
rcl
xchg
pop
xchg
push
enter
cmps
push
in
sub
mov
stc
cwde
nop
(bad)
out
out
push
mov
inc
inc
pop
iret
jo
mov
les
jge
ret
jno
pop
jmp
jp
cmp
cmp
outs
in
fst
jmp
std
ins
rcl
cld
imul
mov
push
stc
adc
or
ret
pop
pop
out
xchg
cld
mov
(bad)
sub
dec
jae
sub
jecxz
data16
and
mov
ins
cli
mov
add
(bad)
mov
push
call
pop
mov
mov
mov
add
pop
dec
das
pop
mov
iret
adc
ror
lea
bound
mov
mov
call
ficom
imul
jbe
and
test
mov
movs
lock
cmp
mov
jbe
push
(bad)
pusha
inc
loope
mov
xchg
test
mov
xchg
cwde
and
out
mov
adc
mov
jae
cmp
lds
mov
sbb
aaa
mov
test
imul
dec
cmc
inc
int3
pop
dec
jp
jne
retf
inc
sahf
ds
sbb
mov
push
or
pop
call
dec
call
sbb
repz
stc
inc
inc
mov
jge
pop
jle
adc
mov
test
std
push
mov
sbb
icebp
and
pop
sbb
call
repnz
aas
or
outs
loope
gs
sub
outs
dec
lea
mov
aaa
xchg
pop
mov
cwde
out
or
push
ror
ror
repnz
shr
xchg
mov
das
pop
in
imul
call
push
es
sub
sahf
cmps
jae
pusha
mov
loop
or
pop
mov
cmps
xchg
mov
xor
cld
sahf
push
mov
sub
popf
std
pop
mov
mov
pop
arpl
xchg
jl
or
loop
popa
lea
int
iret
push
stos
nop
(bad)
in
adc
sub
neg
sbb
loopne
cmps
loope
dec
ja
pmuludq
sub
(bad)
dec
jno
inc
out
xor
mov
retf
call
into
push
iret
xor
icebp
add
outs
dec
mov
loope
mov
or
adc
retf
push
jg
popf
call
ret
inc
test
les
jge
fdivrp
jmp
dec
xchg
xchg
sbb
jae
ror
cwde
fisubr
xchg
pop
retf
addr16
fld
(bad)
ja
sbb
mov
xor
dec
mov
cli
mov
ja
lock
cmp
hlt
sahf
xor
es
pop
xchg
out
mov
pop
pop
popa
inc
fidiv
pop
scas
xor
ins
loope
or
push
movs
mov
pushf
sbb
add
mov
fiadd
out
cs
cmp
xor
adc
(bad)
jns
cmp
icebp
fimul
cmps
and
mov
call
aad
mov
xlat
int
xchg
jne
out
mov
rcl
popf
mov
dec
dec
adc
sbb
fisttp
mov
popf
mov
jmp
mov
pop
aaa
jmp
or
pop
retf
inc
inc
fcomip
(bad)
mov
dec
dec
fwait
adc
cmp
das
jbe
int3
mov
push
loop
jae
or
xchg
in
mov
and
push
stc
sub
out
push
xor
std
jb
push
mov
out
sbb
jl
call
push
(bad)
es
or
fwait
aad
gs
and
cmp
pop
jne
loop
sbb
gs
add
push
arpl
arpl
cli
sub
jns
xor
mov
cli
xor
sbb
fisttp
jg
dec
push
add
rcr
les
jne
int
movs
mov
mov
jae
repnz
ins
mov
aaa
xor
mov
nop
sbb
xor
dec
lahf
(bad)
xor
jle
adc
scas
scas
fstp
add
in
jo
cld
(bad)
mov
mov
push
jmp
mov
je
xlat
es
pop
jmp
or
add
(bad)
aam
mov
fst
dec
das
sbb
mov
adc
jne
pop
not
test
es
inc
lahf
call
bound
test
push
mov
jne
movs
cli
xor
mov
or
lods
adc
cmp
popa
popa
hlt
stos
sbb
test
add
popf
dec
fild
lods
xchg
cld
jne
jb
movs
dec
or
lds
inc
(bad)
mov
sub
adc
(bad)
xor
je
sbb
cmp
imul
inc
dec
add
rol
jae
xor
in
pop
mov
aas
dec
call
jne
stos
(bad)
xchg
xchg
or
pop
int
dec
sti
pop
pop
hlt
add
call
pushf
stos
test
addr16
jmp
sub
and
fwait
cld
jnp
jge
dec
cmp
test
ret
adc
das
mov
xor
loope
movs
adc
call
lahf
pop
jmp
inc
mov
cmps
inc
add
add
push
test
or
sbb
push
inc
jmp
mov
inc
retf
sub
inc
gs
out
(bad)
(bad)
sbb
mov
push
data16
ins
mov
fidivr
rol
lds
mov
loope
mov
mov
shrd
cwde
and
dec
int
push
jno
mov
mov
les
(bad)
jmp
push
std
retf
idiv
scas
xor
xchg
xor
sbb
bound
mov
fisttp
mov
pop
pop
(bad)
fistp
push
je
mov
jo
adc
clc
or
sahf
lea
pop
push
out
hlt
scas
cwde
stc
jmp
repnz
push
aam
out
cmc
in
sbb
jecxz
or
out
aad
cld
outs
mov
fst
div
jge
enter
jne
(bad)
cdq
inc
mov
and
in
enter
push
sub
test
mov
call
not
push
mov
inc
xchg
shl
aad
in
sahf
cmp
cmps
sbb
mov
adc
jge
ret
push
and
scas
mov
(bad)
(bad)
xor
mov
outs
xor
daa
fcomp
xchg
pop
das
mov
daa
hlt
call
lds
pop
xchg
test
push
das
in
or
repz
lods
push
adc
push
lods
shl
push
sub
add
sub
add
inc
out
push
pop
jmp
rcr
outs
jl
and
pop
aad
inc
stc
iret
inc
lods
iret
cli
hlt
fucomp
(bad)
out
into
jae
jmp
mov
and
add
add
lods
dec
retf
int
hlt
add
mov
jae
xchg
adc
adc
pushf
jmp
add
jb
cmp
repnz
push
mov
(bad)
popf
mov
das
aad
push
pop
inc
fidivr
and
(bad)
mov
pop
pushf
jo
idiv
scas
mov
scas
mov
pop
pop
xchg
fadd
imul
call
test
aad
xchg
pop
push
call
cmps
add
cmp
jb
in
add
xor
cld
cdq
mov
xor
xchg
dec
mov
xchg
(bad)
jge
retf
xor
out
mov
les
clc
cmps
cmp
mov
dec
stc
mov
pop
out
add
lock
out
repnz
jne
movs
retf
out
push
lea
outs
addr16
and
sbb
test
xchg
fmul
(bad)
into
(bad)
push
xor
stc
xlat
mov
dec
pop
xchg
jge
pushf
mov
mov
int
jp
test
aam
jne
les
fidivr
fsubr
pop
cmp
add
push
in
jne
xor
inc
xor
push
sbb
sahf
test
cmp
mov
test
mov
lock
retf
xor
es
and
clc
inc
in
shr
push
(bad)
push
int
jecxz
ret
(bad)
push
push
lahf
mov
fdivr
pushw
sbb
xlat
xlat
inc
and
hlt
xchg
add
mov
jg
pop
lods
in
stos
adc
mov
test
inc
cs
jmp
inc
cmp
jns
scas
sar
cdq
push
push
pop
stc
loop
xor
cmp
rol
dec
cld
repnz
in
imul
jnp
mov
inc
adc
mov
push
or
ja
pop
mov
ds
cmp
test
cmps
(bad)
rol
pop
cmp
jmp
cmp
push
nop
add
aad
mov
lahf
cs
cmp
repz
inc
jecxz
jne
(bad)
jge
dec
and
jae
js
jno
add
jecxz
or
and
jle
stc
sbb
pop
xchg
mov
cmp
sbb
mov
int3
sbb
jecxz
(bad)
nop
shr
dec
rol
(bad)
aam
inc
les
mov
call
or
not
dec
arpl
xchg
test
add
or
cli
mov
fimul
mov
mov
xor
or
pusha
inc
cmp
and
je
scas
dec
(bad)
out
int3
mov
imul
or
data16
shr
shr
fild
jb
xlat
cmps
inc
into
in
stos
jg
pop
push
jecxz
xchg
jl
mov
inc
sbb
enter
jns
jb
push
shl
popa
les
pop
les
ds
mov
ret
stos
jbe
jae
push
data16
push
in
push
sbb
jecxz
mov
mov
add
out
push
cld
into
inc
(bad)
push
push
dec
sub
imul
mov
sbb
xchg
sub
xchg
loope
pop
mov
mov
cs
inc
rcr
mov
or
sbb
mov
cli
sub
push
in
xchg
dec
and
aas
jo
xor
xor
sbb
xchg
call
xchg
add
mov
xor
dec
sub
xchg
out
scas
je
cli
mov
push
scas
pushw
(bad)
mov
int3
pop
loopne
(bad)
(bad)
cli
cmp
xor
retf
test
fs
ja
mov
cwde
mov
push
adc
ds
cld
mov
gs
jae
mov
(bad)
cmp
inc
int
inc
les
push
and
jns
dec
push
imul
rcr
mov
rcr
mov
xchg
ins
retf
repnz
xchg
dec
leave
in
or
or
sbb
(bad)
fild
ret
pushf
mov
pop
push
mov
pop
fimul
mov
inc
icebp
pop
pop
mov
pop
cmp
pusha
pop
mov
add
popa
inc
inc
mov
ret
pop
movs
inc
das
mov
sar
test
cmc
in
out
stc
enter
and
rol
lea
pop
sahf
in
loop
aas
movs
mov
xchg
and
scas
cwde
xchg
add
imul
inc
add
ins
test
dec
push
nop
clc
popf
add
aad
inc
or
push
mov
push
cld
retf
dec
mov
add
ss
ret
stc
mov
push
data16
sti
not
sahf
outs
out
or
ret
int
lahf
mov
pop
jle
outs
cmp
cmp
and
rol
aam
cwde
ins
mov
push
mov
xor
mov
aad
inc
push
daa
xchg
mov
je
data16
in
movs
ja
in
or
outs
in
fdivr
loope
jb
push
je
not
ja
loopne
cmps
arpl
stos
sahf
inc
cmps
push
loopne
sub
in
test
loope
in
jnp
lds
dec
sbb
sub
std
dec
jge
movs
xor
pop
add
add
ja
imul
div
cdq
lods
fcom
enter
lods
mov
mov
inc
mov
push
test
test
inc
outs
mov
cmp
rep
push
mov
sbb
cmp
add
and
mov
xchg
push
xchg
push
cmp
aad
xor
lahf
je
iret
mov
mov
popa
and
mov
inc
les
test
mov
mov
xor
es
pushf
rol
cwde
and
rcl
sub
js
(bad)
int
mov
fmul
pusha
repnz
mov
cs
into
movs
mov
jbe
jmp
mov
int3
fcomp
jecxz
pop
loopne
xor
cmp
cmp
std
add
cmp
xchg
sbb
mov
push
loop
or
bound
add
inc
cwde
shl
xchg
dec
inc
pop
pop
in
jbe
adc
pop
(bad)
aas
pop
ins
jbe
arpl
adc
(bad)
sub
ss
rcpps
mul
push
lds
test
ja
popa
mov
aad
in
jl
xchg
sbb
jle
sbb
lds
test
(bad)
cmps
cmps
mov
call
pop
xchg
and
daa
dec
add
dec
stos
stos
fiadd
jb
adc
outs
push
repnz
in
or
jne
ds
jne
pushf
(bad)
pop
or
mov
lock
rcl
sbb
add
sahf
push
sbb
adc
pop
ins
sub
in
xchg
sub
pusha
jb
jo
push
pop
push
jmp
in
mov
xchg
int
cmp
ret
movs
inc
mov
inc
lds
stos
pop
cmp
imul
and
(bad)
cld
sbb
imul
cmp
fld
inc
inc
scas
cli
add
jmp
lods
adc
test
aas
fistp
outs
loopne
test
test
leave
sbb
fistp
pop
dec
add
inc
mov
out
sbb
inc
xchg
xchg
ds
jmp
hlt
mov
mov
push
mov
data16
ins
je
or
aas
add
add
xchg
out
sub
mov
aam
cmp
lods
outs
popa
aad
repz
cmc
int3
mov
mov
xchg
sbb
pop
test
shl
mov
mov
imul
in
and
mov
ja
mov
sub
pop
add
cmps
xor
(bad)
test
pop
jl
jne
pop
cmp
or
mov
dec
aaa
outs
dec
adc
jl
pop
pop
inc
pop
jmp
cdq
xchg
or
push
jp
movs
div
in
in
mov
out
out
jge
sti
imul
sbb
popf
jns
loop
aaa
adc
sbb
sbb
cmp
cmp
imul
fldcw
and
scas
cmp
lahf
add
cmps
push
sbb
pop
nop
jecxz
ds
aad
sbb
jge
call
sbb
retf
cmp
mov
cmp
jae
adc
mov
sbb
div
je
fimul
push
push
das
sahf
jge
jp
mov
jg
fdivr
loope
pop
hlt
and
mov
sbb
popf
mov
mov
inc
xchg
xor
ins
aam
cs
pop
call
mov
jae
xor
adc
pushf
mov
sbb
cs
xor
dec
adc
outs
sub
mov
cmp
mov
daa
aam
pop
test
sbb
adc
add
pop
push
mov
mov
sahf
iret
(bad)
js
call
fdivr
sbb
mov
xor
cld
test
js
sbb
idiv
data16
mov
add
push
sub
lea
adc
xchg
jne
mov
dec
or
mov
shr
icebp
xor
fidivr
loope
xor
jg
adc
outs
mov
fnstcw
dec
adc
mov
ret
sub
mov
push
lahf
sahf
mov
scas
inc
arpl
jns
cmps
retf
adc
push
adc
cmovne
loopne
idiv
mov
(bad)
jb
xlat
ja
bswap
popa
sbb
xchg
dec
out
stc
adc
xchg
in
repz
pop
aam
lds
fwait
mov
xchg
mov
jns
lahf
sbb
lahf
jae
call
xor
popf
pop
xchg
dec
sub
out
gs
dec
inc
dec
fimul
sub
cwde
xor
into
jb
xchg
loop
inc
(bad)
popf
xchg
push
xor
mov
arpl
mov
jmp
ficom
shr
pop
xor
dec
pop
add
pop
ins
sbb
jge
push
sub
movs
cmps
sub
cmp
or
cmp
retf
loope
hlt
lahf
shl
pop
repz
shl
jl
fnstcw
retf
das
mov
je
adc
pop
push
push
add
aam
icebp
adc
inc
pop
or
ins
dec
cmp
add
fild
inc
jno
cmp
jbe
stos
adc
call
jmp
dec
adc
cmp
mov
pop
gs
dec
mov
push
add
mov
mov
add
cmps
bnd
cdq
in
es
or
cmp
xchg
push
mov
movs
mov
pop
retf
add
jo
out
test
pop
sub
sar
mov
jp
jp
ins
add
outs
dec
inc
into
ins
push
add
xchg
idiv
add
bound
(bad)
aas
(bad)
mov
inc
mov
ret
sub
les
pop
aam
cli
inc
pop
push
iret
cdq
movs
xchg
xor
clc
cmp
cmp
sti
fbld
sti
push
mov
call
imul
sahf
pop
into
fisubr
or
push
scas
sti
stc
and
call
xlat
jmp
fnsave
shl
sbb
test
out
pop
and
out
ss
dec
ss
jp
mov
push
movs
mov
ds
popf
xchg
adc
lods
inc
add
jmp
mov
ins
test
and
push
lock
push
jbe
or
ret
and
outs
push
lods
mov
js
aad
dec
les
movs
lock
add
leave
hlt
xor
imul
outs
push
xor
sbb
sub
dec
ja
ja
adc
cmp
mov
add
in
stos
mov
jne
stos
mov
rol
mov
xchg
jae
ja
mov
(bad)
out
inc
sub
add
or
(bad)
jmp
jle
scas
mov
mov
retf
loope
movs
ja
add
mov
sahf
xor
push
add
daa
jge
mov
ds
fld
dec
pop
movs
call
les
loopne
pop
or
les
or
daa
cmp
sub
mov
inc
jne
sbb
sar
cmp
leave
xor
cwde
hlt
arpl
ds
sbb
int
sti
out
imul
pop
mov
mov
retf
das
xchg
sbb
imul
push
jp
jbe
(bad)
ffreep
cmp
lods
pop
jg
sbb
xchg
leave
adc
dec
rol
push
or
out
rcr
cli
and
out
loop
cmp
dec
dec
pop
and
mov
jae
jmp
imul
jl
mov
mov
pop
aad
sbb
dec
add
mov
xchg
retf
mov
(bad)
addr16
call
stc
sub
cmp
leave
stos
mov
test
shr
push
shr
(bad)
xor
in
jo
xchg
pop
in
push
movs
cmp
mov
pop
movs
imul
cmp
dec
inc
loop
mov
cmp
push
sub
leave
pop
das
enter
inc
shr
mov
jns
xchg
add
mov
mov
adc
or
test
jmp
jb
jns
and
inc
add
movs
xchg
pop
rcr
mov
rcl
xchg
fcom
push
inc
push
rcr
scas
movs
dec
out
loope
pop
lea
jg
inc
dec
test
mov
pop
xchg
sar
dec
pop
jne
xchg
in
pusha
cmp
cmp
cdq
scas
pushf
xchg
loopne
xchg
push
loope
sub
ins
push
jecxz
fisttp
xchg
push
jo
retf
push
mov
aaa
or
xor
dec
jae
shr
xchg
call
sub
fsubr
mov
aam
call
call
in
(bad)
pusha
pminsw
out
sar
into
jbe
leave
pusha
mov
ss
mov
xor
mov
jmp
(bad)
or
sbb
inc
test
cmps
inc
sar
or
mov
ja
lods
push
lock
mov
push
and
jne
mov
mov
xchg
rol
push
(bad)
pop
xor
je
mov
cs
rcr
or
div
jl
movs
inc
(bad)
cmp
mov
jno
call
js
ror
pop
inc
mov
test
xlat
mov
fld
(bad)
inc
mov
scas
outs
mov
mov
xor
pop
mov
mov
mov
addr16
popf
loope
add
jge
mov
stos
pop
push
mov
sub
xlat
lock
idiv
in
mov
cmp
and
xchg
jo
jmp
pop
sbb
jl
scas
mov
scas
pusha
js
stos
mov
dec
and
adc
sub
repnz
jmp
ins
aas
jecxz
pop
cli
cmp
retf
jo
nop
and
sub
or
loopne
sub
push
sbb
ficomp
mov
jg
shl
shr
popf
xor
pop
xchg
imul
add
jl
cli
or
leave
and
lea
or
shl
xchg
or
loope
pop
xor
add
fs
dec
jne
or
jo
adc
adc
sbb
mov
mov
push
sbb
imul
pushf
fdiv
jno
or
(bad)
push
into
xor
mov
fs
pop
gs
pop
bound
cmps
push
sub
mov
mov
adc
add
push
add
test
daa
mov
std
jle
cmps
xor
nop
mov
movs
(bad)
sbb
adc
jnp
sbb
push
jmp
xor
rol
dec
xchg
fstp
clc
dec
adc
stos
inc
int
push
jmp
xor
jne
add
xchg
je
sub
dec
mov
dec
ins
jnp
rcr
push
inc
xchg
jecxz
pop
mov
cmp
aaa
repz
out
add
dec
jno
call
sub
cmp
dec
addr16
mov
add
adc
pop
xchg
add
inc
out
push
sbb
add
and
sub
sub
aas
add
pop
jno
movs
cld
mov
jmp
fwait
cmp
leave
inc
aam
mov
outs
and
into
shr
pop
out
xchg
sub
fdivr
and
pop
cmp
or
inc
push
inc
mov
rcr
popa
cmp
adc
xor
gs
jb
loop
mov
test
je
inc
cld
cmp
adc
jmp
imul
xor
js
mov
popf
mov
(bad)
(bad)
mov
aam
popa
xchg
loop
in
add
cmp
adc
mov
mov
adc
cmp
xchg
xchg
mov
sub
je
sbb
jb
jecxz
inc
and
and
rol
dec
inc
aam
jne
out
push
mov
pushf
push
ins
inc
(bad)
mov
jo
daa
add
inc
jmp
repz
mov
int
adc
movs
sti
or
pop
out
loopne
adc
stos
mov
add
test
cmp
sub
pop
ins
popa
out
dec
push
or
dec
jmp
push
xor
arpl
(bad)
mov
std
dec
arpl
inc
dec
jmp
outs
pop
repz
pop
pop
fild
test
int
fild
fistp
mov
xor
jns
mov
je
xchg
mov
pop
xchg
aad
js
in
adc
sbb
or
adc
sbb
daa
sbb
jb
add
in
pop
xchg
adc
fbld
or
(bad)
fwait
iret
xchg
sbb
in
jb
mov
jl
mov
stc
icebp
scas
test
jae
cli
js
mov
sub
jl
xor
aam
and
aas
mov
pop
stc
addr16
mov
fdiv
into
pop
(bad)
jae
or
mov
fst
addr16
mov
and
imul
adc
test
push
and
push
loopne
(bad)
ja
daa
push
cmp
jns
ja
inc
adc
outs
popa
aam
pop
inc
call
fnstsw
add
out
xor
fnstcw
repnz
in
test
mov
imul
mov
popa
pop
daa
(bad)
and
in
scas
je
jl
or
push
gs
je
js
outs
inc
cmp
sub
xchg
push
ja
cli
retf
hlt
pop
sbb
test
cmc
out
cmp
xor
mov
jno
cs
add
fwait
cmp
xchg
xchg
fwait
pusha
cld
sbb
ror
mov
dec
dec
xor
mov
cs
xchg
jnp
in
nop
imul
fdivr
dec
push
mov
enter
dec
lds
cmp
popf
and
and
inc
jg
pop
dec
and
sbb
div
loopne
rcl
daa
jne
mov
xor
adc
shl
stos
js
xor
dec
rol
repz
jg
test
mov
mov
add
popa
lahf
arpl
pop
jp
mov
test
adc
mov
das
push
leave
fidivr
das
mov
push
dec
mov
test
and
add
cld
mov
outs
push
adc
addr16
pop
pop
(bad)
sbb
addr16
loop
dec
sub
fsubr
sahf
(bad)
push
lahf
les
cli
dec
lds
je
jb
mov
jo
sbb
push
(bad)
pop
inc
les
sti
leave
jmp
cmp
cdq
cmp
sub
inc
addr16
cmp
int
inc
dec
dec
lock
lds
push
xor
adc
(bad)
std
ja
jmp
or
xchg
dec
ret
push
push
dec
cdq
out
or
mov
mov
pop
jp
cdq
movs
outs
dec
cli
imul
mov
cld
mov
fcomp
cdq
adc
imul
out
(bad)
mov
dec
jbe
shl
ins
push
sbb
and
push
jmp
sub
xchg
push
and
sbb
aad
mov
mov
ficom
and
jnp
add
fs
push
mov
mov
sbb
mov
scas
mov
xchg
cwde
sub
or
mov
pop
xor
jg
or
sub
xchg
fdivr
fmul
push
jmp
pusha
sbb
les
or
mov
inc
aad
das
fcomip
out
cmc
push
(bad)
ins
dec
xchg
daa
clc
dec
push
stos
push
sahf
ins
mov
jmp
fld
cdq
popa
mov
test
jl
repnz
dec
data16
into
out
(bad)
mov
fldenv
(bad)
inc
mov
add
int
push
adc
mov
mov
mov
dec
cmps
jg
jp
cmps
xchg
sbb
jle
mov
dec
xor
pop
call
jg
ins
jne
cmp
or
dec
pushf
inc
and
outs
xlat
sub
into
adc
push
dec
daa
scas
xchg
xchg
or
inc
(bad)
hlt
js
lods
call
push
mov
test
cmp
(bad)
cmp
mov
leave
adc
and
ss
call
xor
jp
cmp
daa
inc
mov
ss
int
rep
cmp
pop
xor
out
push
jmp
mov
ds
add
sbb
xchg
push
stos
mov
sahf
sbb
jae
push
je
jmp
shl
dec
sar
into
sbb
sbb
and
jo
test
sbb
xor
test
xor
mov
push
mov
push
in
loopne
mov
jnp
inc
jmp
push
not
stos
mov
inc
aaa
jo
cmp
mov
lahf
pop
mov
repz
ds
mov
cli
icebp
lods
lods
xchg
stc
loopne
mov
loope
jne
push
jmp
pop
inc
xchg
bound
add
je
into
add
xchg
inc
js
sbb
mov
mov
loop
in
xlat
imul
dec
lahf
pop
pop
mov
push
scas
inc
add
and
sbb
iret
lea
mov
leave
aam
shl
mov
stc
dec
sub
mov
dec
jle
mov
loop
test
gs
movs
mov
mov
add
push
dec
push
in
lahf
dec
pushf
sub
pop
fucomp
outs
sahf
hlt
test
add
add
jg
in
test
jmp
jb
and
mov
mov
lods
outs
cmp
popf
retf
pop
jl
sub
(bad)
xchg
in
mov
xor
in
mov
inc
cmps
cmp
test
rcl
test
jmp
mov
sub
mov
out
fidiv
pushf
(bad)
js
mov
push
or
sbb
lock
xchg
sub
or
inc
and
dec
add
movs
sub
pop
aaa
daa
js
or
repnz
cmp
jecxz
mov
into
cmps
pop
lahf
adc
lea
jno
ja
mov
out
push
imul
inc
jl
or
int3
and
xchg
inc
and
push
adc
inc
jmp
std
lahf
dec
movs
dec
push
lea
jns
fimul
call
pop
je
leave
sbb
or
fmul
imul
gs
push
mov
scas
ret
jecxz
xchg
mov
out
aaa
sar
into
dec
mov
pushf
arpl
loop
sub
inc
pop
sbb
jne
mov
pop
outs
jno
add
jno
mov
adc
jns
lahf
test
xchg
dec
int3
movs
mov
dec
pop
xlat
iret
mov
mov
loopne
test
gs
jle
inc
aas
dec
push
dec
rcl
mov
loope
sahf
test
add
lods
mov
dec
cmp
sub
jmp
and
out
ret
adc
and
outs
sbb
pushf
shl
(bad)
ret
ins
rol
mov
iret
xor
sub
xor
push
hlt
mov
sub
loope
push
out
out
in
ja
cwde
(bad)
and
movs
std
arpl
retf
and
ret
je
out
pop
pop
ins
mov
jmp
arpl
add
inc
fs
repnz
mov
movs
aad
cdq
fstp
mov
cli
push
repz
jo
sub
sbb
fwait
imul
test
outs
test
rcr
loope
sub
or
lods
or
(bad)
mov
sbb
fwait
inc
add
inc
rcl
inc
ins
and
jno
std
pop
jg
push
das
(bad)
fsub
add
xchg
fs
inc
inc
cmp
mov
mov
mov
mov
or
sub
shr
mov
mov
cs
cli
mov
das
and
xor
jmp
sahf
in
add
push
into
sub
std
xchg
popa
adc
or
cmps
jmp
xchg
or
fnstenv
push
dec
dec
test
xchg
cs
loop
enter
add
sub
out
imul
fdivr
push
jmp
data16
sub
mov
(bad)
or
lea
mov
jge
sbb
cmp
mov
ret
mov
aas
popa
pop
xor
push
sub
ins
jl
aam
and
movs
test
inc
mov
mov
mov
int3
adc
pop
dec
sub
jecxz
dec
dec
cwde
aas
lock
sti
mov
cmp
inc
jno
push
and
(bad)
addr16
outs
ficom
loope
popa
sbb
pop
add
jnp
loopne
test
popa
mov
jmp
sbb
and
retf
lahf
push
repnz
(bad)
scas
cmps
mov
mov
rcr
or
push
mov
rol
sbb
gs
popf
cdq
fs
mov
jle
test
ret
add
cmp
mov
addr16
jnp
sub
pop
jmp
dec
loope
jmp
jns
or
xchg
jae
inc
in
mov
push
jnp
loope
js
(bad)
fmul
test
sbb
cmp
shl
jo
loopne
xchg
into
xor
jo
stos
(bad)
fisttp
add
xor
xchg
dec
xor
sbb
repnz
sbb
jle
ins
mov
popa
jp
push
ss
mov
hlt
add
push
js
xor
xchg
ret
xchg
sahf
xchg
mov
ror
out
push
movs
lods
cmp
popf
add
(bad)
pop
adc
fnstsw
or
ror
mov
jnp
and
xor
pop
test
dec
sbb
out
push
dec
adc
fldcw
jnp
cmp
sbb
and
add
mov
or
mov
inc
pop
out
mov
(bad)
mov
mul
xor
pushf
jmp
xor
into
mov
int3
sub
mov
iret
in
adc
into
push
add
sub
stos
cli
(bad)
jnp
xor
xor
and
(bad)
xor
mov
sahf
aam
scas
push
jecxz
fwait
dec
xchg
xchg
in
ficomp
in
jl
cmp
pop
push
nop
push
outs
je
(bad)
jl
mov
addr16
dec
xchg
call
(bad)
ja
and
or
les
cli
or
jns
push
mov
push
push
pop
jmp
sub
xlat
adc
repz
push
in
xor
jns
mov
adc
aaa
out
dec
arpl
or
mov
jmp
push
mov
ja
mov
out
add
lock
jp
mov
mov
push
fdiv
mov
test
push
ret
add
jbe
mov
sub
push
test
and
int
in
adc
mov
sbb
adc
ins
arpl
dec
and
dec
xor
inc
push
mov
icebp
int
jb
fwait
outs
dec
cli
pop
cs
inc
add
mov
and
cmp
add
add
jbe
adc
outs
adc
adc
in
jge
and
push
cmc
push
movs
test
ficomp
dec
jbe
ret
inc
lahf
push
jge
rol
push
xchg
push
(bad)
adc
pop
xchg
cmc
(bad)
stc
ins
jno
push
out
fisub
sub
jno
mov
jne
(bad)
stos
out
inc
sub
out
jle
out
pop
or
xor
mov
cmp
call
fwait
cmp
xchg
xlat
(bad)
imul
loop
lds
sbb
jmp
arpl
hlt
fidiv
mov
jl
pop
inc
test
xchg
fs
rcr
arpl
or
mov
dec
dec
and
out
mov
xchg
push
pop
mov
add
test
fisttp
cmps
add
popa
push
popa
pop
aam
or
addr16
mov
cmp
mov
fcom
adc
cmp
cwde
les
shl
push
cmp
fsubr
pop
xchg
cmp
int
(bad)
jne
mov
stos
jecxz
fadd
repnz
popa
push
cmp
pop
adc
lahf
jne
cwde
push
into
(bad)
repnz
test
ss
xor
lds
mov
rcr
pop
push
push
dec
sub
cmps
out
cwde
jns
push
jle
sbb
fs
jg
rcr
(bad)
(bad)
std
add
pop
in
xchg
leave
in
in
scas
mov
jbe
cmp
and
or
mov
sti
pmaddwd
pusha
cld
cwde
sub
dec
rol
pop
sub
mov
(bad)
mov
hlt
sbb
je
jp
(bad)
jg
sar
mov
popf
push
in
add
push
call
shl
mov
aad
test
and
addr16
lock
cs
es
sub
mov
lahf
pop
jo
inc
sub
mov
addr16
into
pop
test
mov
mov
in
xor
xlat
ins
xor
in
mov
ret
pop
dec
inc
mov
idiv
rcl
nop
test
mov
dec
push
mov
inc
jne
(bad)
cmp
push
jb
movs
inc
aad
mov
call
jno
pop
add
mov
call
sub
je
dec
sub
fsub
in
mov
cmp
cdq
or
pop
cli
dec
bound
(bad)
clc
jne
mov
inc
xchg
xor
mov
mov
cmps
xor
out
dec
fcomi
push
adc
ins
das
dec
stos
jecxz
jb
sbb
inc
lds
xchg
(bad)
ror
inc
pop
cmp
push
stc
adc
lahf
scas
ret
xor
ror
aad
leave
outs
pusha
add
push
packsswb
sbb
sub
or
sar
sahf
scas
psubq
xor
push
pop
push
lock
xchg
cld
outs
in
lea
pop
xchg
cli
pop
dec
in
out
lods
xor
aaa
xchg
in
cmc
mov
inc
test
fld
in
dec
in
xor
jns
adc
gs
mov
mov
dec
add
mov
popa
addr16
loop
dec
arpl
repz
mov
repnz
movs
and
xor
jg
imul
clc
(bad)
popf
(bad)
ja
rcl
cmp
push
pushf
daa
pop
addr16
sub
xchg
pop
cmp
sar
pop
pop
inc
call
enter
sti
stc
mov
push
pop
push
or
dec
retf
push
call
retf
loop
cmc
shl
jb
cmp
cmp
call
dec
add
in
jne
sahf
arpl
push
jnp
neg
cmp
pusha
in
mov
pop
dec
push
iret
xor
lods
fisubr
into
imul
ret
test
int3
je
mov
pop
in
rol
mov
clc
or
push
pop
mov
cmp
lea
out
mov
adc
in
sub
scas
dec
or
mov
or
pop
and
cwde
fwait
(bad)
cmp
test
imul
or
mov
mov
ror
cli
adc
imul
retf
mov
mov
leave
cmps
push
ja
fist
lock
repnz
div
jb
sub
dec
mov
mov
push
jp
sub
sbb
xchg
pop
gs
add
push
and
jo
sti
lds
add
(bad)
cwde
cwde
pop
cmp
mov
cmp
ficom
and
movs
dec
out
imul
retf
retf
xchg
call
out
or
icebp
add
popa
or
scas
stos
adc
or
int
add
les
inc
jb
nop
xlat
imul
scas
rcl
inc
sub
xor
jle
lahf
retf
mov
aad
and
stos
int
add
lods
cmp
fisttp
int
retf
aad
xchg
inc
leave
ja
rol
dec
sbb
out
mov
dec
push
fadd
inc
test
push
dec
icebp
arpl
push
fwait
clc
fist
fidivr
xor
mov
aas
je
pop
and
iret
cmp
add
add
pop
inc
imul
and
xchg
mov
sbb
nop
or
mov
sub
rcl
sub
fst
ds
or
enter
inc
pop
enter
mov
inc
xchg
stos
loopne
call
xor
into
jno
mov
xor
sahf
dec
imul
mov
and
pop
out
mov
pop
mov
xlat
add
loopne
xor
fmul
or
js
cwde
jl
popa
and
sbb
pop
jmp
cmp
fsqrt
adc
test
sub
pop
iret
call
clc
shr
mov
inc
xor
test
mov
add
adc
cmps
es
adc
dec
inc
outs
sar
mov
and
movs
ds
xor
dec
mov
adc
mov
and
mov
test
arpl
movs
retf
rcr
adc
or
jp
ins
and
mov
call
adc
or
add
sub
call
fs
gs
jne
mov
dec
jecxz
cli
sti
fwait
xor
pusha
cmps
(bad)
mov
push
retf
aad
ror
push
mov
and
jmp
xor
pusha
jno
inc
ja
loop
daa
movs
xor
test
jmp
mov
stc
xchg
pop
call
sti
scas
mov
jmp
ja
ficomp
fst
pop
outs
call
inc
mov
pop
xchg
dec
jne
call
adc
jne
xor
jns
ins
aad
aad
pop
enter
pop
push
movs
test
(bad)
shl
inc
mov
xchg
cmp
jp
imul
mov
mov
js
xchg
ret
mov
mov
add
mov
outs
inc
call
pop
ja
sbb
pop
mov
inc
xor
(bad)
pop
pop
cmp
push
js
xchg
jae
inc
and
loope
stos
(bad)
cld
enter
jmp
repz
aam
sbb
sub
in
pop
mov
push
int3
mov
jo
je
jns
repnz
int3
inc
sti
mov
fxch
fild
adc
sar
xlat
les
dec
jecxz
push
or
loopne
loopne
push
(bad)
(bad)
popa
test
scas
mov
call
dec
nop
mov
push
into
jge
or
neg
test
test
adc
add
fnsetpm(287
daa
fwait
out
ret
(bad)
mov
or
mov
jno
in
shr
ss
ins
or
sbb
je
xor
cmp
ja
pop
mov
sbb
sbb
fistp
mov
cli
cdq
push
loopne
and
leave
push
lds
mov
xor
cli
nop
xor
loopne
out
movs
movs
repz
fldenv
sub
xor
pusha
hlt
sbb
mov
or
movs
mov
(bad)
retf
mov
sub
enter
and
dec
dec
jae
mov
mov
in
outs
mov
ss
jno
call
sub
call
mov
in
inc
daa
mov
je
shl
not
jns
sti
xchg
mov
pop
maskmovq
neg
add
mov
pop
inc
xor
jg
mov
ins
sbb
pop
cmp
imul
scas
cs
cmps
loop
and
mov
mov
lods
imul
or
pop
es
or
sbb
pop
mov
(bad)
pop
popa
pop
repnz
sub
adc
jbe
sub
xchg
or
dec
jb
int
aas
in
push
sbb
pop
pop
xchg
push
sub
mov
loop
cmp
xchg
inc
leave
xor
fnstenv
dec
shr
push
push
mov
and
jbe
lock
sub
adc
ins
movs
cmp
(bad)
cmp
ja
and
xchg
mov
mov
repnz
dec
pop
enter
popa
ja
jle
xchg
push
jbe
jl
jne
add
out
mov
aad
aaa
push
push
rol
add
mov
sbb
adc
xchg
or
out
adc
xchg
inc
test
add
lock
push
pushf
push
jle
xchg
xchg
dec
jmp
jg
cs
cmp
sti
mov
mov
inc
mov
loop
dec
repnz
mov
(bad)
shl
sub
neg
icebp
popf
sbb
das
push
add
jle
mov
xor
mov
add
mov
data16
or
add
popf
cmp
(bad)
neg
(bad)
fs
dec
mov
mov
dec
and
sub
mov
int3
jge
or
fcomp
mov
pop
stc
cmc
sbb
dec
adc
push
(bad)
je
sub
leave
fwait
xchg
repz
int
aad
(bad)
(bad)
mov
outs
fnstsw
in
add
iret
sbb
ds
mov
dec
fidiv
dec
mov
out
xchg
(bad)
shl
lds
cmp
or
loop
xor
sub
jns
sub
lds
or
jg
pop
pop
out
jnp
mov
push
data16
dec
ret
sbb
retf
rcl
and
xor
ret
dec
mov
in
pop
xchg
push
sbb
in
out
daa
sti
mov
cdq
stos
inc
dec
xchg
ins
pop
push
(bad)
fistp
idiv
ror
mov
in
clc
jbe
or
add
das
test
xor
cld
xor
cmc
or
jno
mov
jnp
add
mov
jmp
or
inc
outs
(bad)
iret
cdq
push
mov
sub
daa
dec
ficomp
cli
loopne
or
outs
mov
or
in
xchg
sbb
and
or
ss
xchg
xchg
jns
pop
jmp
mov
sbb
or
mov
push
pushw
adc
outs
mov
(bad)
add
push
cli
popa
xor
mov
xchg
add
mov
xchg
jl
loope
pop
push
dec
cli
out
lea
sar
lods
pop
fnsave
movs
mov
adc
cmp
push
inc
cld
inc
int3
jge
push
adc
jmp
shr
icebp
xchg
inc
add
arpl
sti
leave
xchg
outs
push
sub
and
pop
sbb
sbb
popa
lea
shl
mov
mov
inc
push
push
or
mov
sub
or
add
add
test
mov
fisttp
les
lock
push
push
rol
add
mov
rcr
pop
shl
push
sbb
repnz
fwait
popf
add
mov
cdq
repz
mov
sub
clc
mov
shl
inc
cwde
bound
rcl
push
fnsave
in
adc
add
jge
or
sbb
sbb
shl
cmp
sub
lea
cmp
test
sub
pop
xor
push
xlat
fs
xchg
push
iret
cdq
(bad)
daa
clc
jnp
retf
nop
mov
cmp
(bad)
mov
neg
xchg
sub
sbb
sub
push
or
rol
mov
fs
out
fsubr
add
xchg
dec
dec
cmp
push
mov
pop
jge
fsub
pop
inc
int3
pop
push
cli
or
stc
lea
or
icebp
pop
sbb
adc
call
popf
dec
jmp
shl
ss
out
repz
lock
cmp
mov
ret
imul
or
mov
fdivr
sbb
fcmovnbe
int
xchg
dec
sbb
ret
xor
imul
stc
into
push
mov
jmp
xchg
idiv
cmp
pop
call
ja
jge
sbb
jo
add
inc
mov
iret
xor
push
fstp
mov
das
call
je
pop
test
and
inc
popa
cmp
or
mov
dec
fisttp
das
push
lock
pop
mov
lods
mov
xchg
scas
cli
test
data16
or
aas
cmp
mov
sti
and
fucomp
pop
cmp
popa
movs
fcomp
adc
and
jns
xchg
call
xor
aad
test
push
xor
cmps
pusha
mov
ins
ds
inc
jb
mov
in
cmp
in
pushfw
test
ss
push
call
jae
call
jge
out
outs
dec
sub
in
adc
lods
sbb
sub
lahf
js
dec
popa
je
or
and
shl
add
aas
mov
cmc
pop
out
xlat
dec
dec
mov
inc
jl
scas
scas
xchg
lahf
movs
jmp
out
ds
mov
cmp
mov
pop
jle
adc
push
std
push
adc
dec
fldcw
mov
xor
mov
xchg
repz
mov
lods
test
push
dec
add
add
pop
mov
pushf
xchg
mov
sbb
add
lods
mov
inc
idiv
or
stos
lea
sub
in
push
imul
jo
scas
mov
sub
out
and
or
sub
out
retf
ror
mov
loope
mov
shl
sub
(bad)
imul
rcl
cmp
and
stc
repz
jns
(bad)
jno
add
mov
push
xlat
adc
push
and
enter
mov
out
inc
inc
(bad)
pushfw
lods
jmp
jo
out
sub
retf
cmp
in
repnz
or
cmps
mov
iret
sub
retf
xchg
mov
test
dec
dec
hlt
and
ins
in
addr16
loope
push
movs
pop
into
neg
jo
out
or
or
cmps
sub
lods
fild
ins
cdq
lds
mov
popf
loopne
mov
sbb
inc
jle
inc
lods
or
icebp
xchg
mov
mov
mov
(bad)
jae
push
ds
imul
pusha
dec
imul
xor
ret
sub
mov
or
cmps
arpl
dec
jp
lods
cmp
dec
dec
ret
jg
in
sbb
icebp
sub
and
mov
mov
jle
stos
sbb
imul
add
data16
rol
push
out
shl
jecxz
jne
pop
inc
loopne
cwde
xor
test
movs
(bad)
pop
xor
ins
test
imul
xchg
jno
mov
mov
jne
retf
jge
cmp
jno
outs
ss
inc
and
xor
call
clc
fadd
adc
or
or
cmps
fld
cmp
js
imul
pop
lock
out
inc
sbb
xor
pop
fimul
and
push
pop
sar
mov
outs
cmp
xlat
ss
movs
ret
pop
iret
adc
sub
push
inc
push
sti
fmulp
lock
cmp
inc
das
arpl
jno
push
push
adc
xor
adc
(bad)
out
cmp
addr16
inc
push
(bad)
enter
ret
push
data16
arpl
ja
jb
jo
nop
mov
test
mov
dec
mov
sar
mov
lahf
iret
call
mov
mov
mov
cld
adc
cmp
sbb
cld
push
xor
adc
addr16
jb
stos
jl
fadd
fild
out
push
sbb
jmp
dec
cwde
adc
dec
out
loope
iret
enter
inc
shl
push
call
int3
lods
pop
nop
xchg
outs
xchg
mov
pusha
mov
iret
xor
jbe
rcl
mov
inc
sub
sbb
div
jmp
push
mov
mov
or
ja
out
cmp
in
ficom
mov
or
jmp
and
sub
shl
xchg
in
stos
movs
mov
inc
push
push
pop
arpl
daa
fistp
pushf
int
add
icebp
jno
pop
test
add
sub
mov
mov
or
jl
push
fcom
dec
les
fmul
rcl
in
jmp
cmp
call
popa
pop
fisttp
dec
jmp
push
enter
int3
cdq
adc
xchg
retfw
imul
dec
sbb
fistp
retf
push
inc
jnp
movs
loope
fnstcw
loop
popf
mov
mov
cld
rcl
retf
imul
jns
push
inc
fist
pop
xchg
inc
xor
stos
dec
stc
mov
out
xchg
mov
sahf
pop
cmp
ror
jmp
ror
adc
leave
idiv
fidivr
cmp
fwait
stos
cmp
sub
jge
das
dec
jb
inc
in
xchg
rcr
clc
dec
retf
ja
jmp
inc
jns
cmp
sub
call
in
fidiv
daa
jmp
cli
jbe
(bad)
fisubr
stos
sub
push
mov
(bad)
xor
test
outs
sbb
arpl
out
xchg
cmps
call
push
and
mov
push
dec
sbb
ja
and
sub
stc
xor
cmovno
jg
lea
call
push
mov
push
xor
xor
push
mov
cmp
and
add
mov
or
jo
out
cld
fs
mov
retf
out
iret
cdq
xchg
stos
xchg
daa
int
cdq
xor
pop
aaa
movs
test
inc
les
push
push
into
cdq
(bad)
sbb
enter
mov
xor
mov
add
arpl
arpl
xchg
movs
outs
test
push
imul
pop
lock
mov
outs
imul
ror
test
pop
aaa
dec
pop
mov
lahf
add
cld
lds
mov
mov
imul
iret
mov
sub
dec
outs
pop
xlat
fs
dec
repnz
inc
call
inc
add
dec
sar
lock
ins
sbb
sbb
inc
shld
fcomp
mov
jb
jbe
clc
fisub
fcmovb
mov
test
jns
arpl
cmps
ss
cmp
iret
das
retf
out
loopne
js
leave
stos
jns
das
add
lahf
das
xor
xlat
(bad)
(bad)
adc
pushf
jg
mov
(bad)
punpckldq
push
mov
push
inc
mov
pop
test
sbb
mov
in
and
(bad)
repnz
jb
repnz
dec
movs
pop
std
xor
(bad)
je
add
xchg
xlat
xor
mov
xchg
fwait
add
js
(bad)
addr16
into
sbb
ss
movs
(bad)
mov
pop
(bad)
jmp
test
inc
mov
sub
test
rcl
push
dec
mov
or
jecxz
dec
test
xchg
mov
jl
mov
sbb
sbb
cs
popa
sub
dec
sub
inc
mul
aaa
xchg
aaa
add
out
call
or
add
in
cs
es
aaa
mov
jle
inc
lea
dec
jmp
in
sub
call
add
repnz
sub
adc
push
dec
jl
je
add
xchg
rcr
push
sbb
push
pop
stos
mov
(bad)
imul
push
imul
mov
mov
sub
and
bound
jl
bound
cmp
push
pop
push
(bad)
or
outs
pop
aad
push
call
dec
add
push
rol
jmp
jg
aam
ins
out
(bad)
in
inc
outs
jb
xchg
cs
mov
add
dec
or
jp
cmp
mov
lock
je
ja
ja
inc
or
cdq
jmp
xchg
and
lods
and
push
mov
and
mov
add
ins
sbb
(bad)
sub
scas
dec
int3
loope
jne
or
pop
inc
sub
movs
out
outs
push
fdivr
gs
hlt
jmp
aas
iret
mov
rcl
or
jmp
pop
test
adc
jl
mov
push
cmp
aad
out
pusha
mov
fdiv
frstor
cdq
pushf
stos
lock
popa
cli
dec
sub
or
div
retf
bound
nop
jo
fisttp
cmp
jl
pushf
mov
daa
test
push
sub
push
ss
outs
(bad)
popa
movs
ins
das
aad
xor
inc
mov
push
loop
loop
rcr
or
add
cmp
cmp
pop
inc
add
jb
jmp
add
fmul
mov
jae
mov
cmp
push
(bad)
das
ins
xchg
inc
stos
adc
ds
adc
or
stos
jo
scas
into
push
repnz
xor
fbld
push
mov
inc
jne
sub
mov
in
fs
pushf
imul
push
or
sub
or
cmp
pop
pushf
fadd
fidiv
jp
mov
add
adc
mov
and
shr
pop
xchg
pop
sbb
xor
imul
mov
ins
inc
push
mov
stos
add
add
sbb
lods
cld
pop
std
dec
aas
jecxz
test
repnz
outs
fnstenv
jecxz
leave
add
lock
jno
xor
nop
jae
sbb
cmp
adc
sbb
cmp
loop
dec
pop
mov
rcl
xor
fisttp
pop
test
cmp
mov
pop
fimul
pop
and
sbb
or
pushf
enter
shl
pop
in
jge
fdiv
jmp
jbe
mov
repnz
std
call
fimul
xchg
xchg
sti
push
stos
ss
shl
setle
pop
mov
adc
push
cmp
push
and
shl
std
std
gs
pop
xor
ds
bound
imul
xor
ror
xchg
adc
aas
mov
xorps
pop
shl
sbb
int
mov
div
neg
arpl
sub
jnp
jne
or
and
sub
xchg
addr16
push
out
cdq
jo
and
pop
jae
xchg
sub
popf
jne
(bad)
das
sub
push
adc
cmp
push
dec
daa
js
mov
mov
imul
pop
arpl
repz
jp
sub
fwait
cwde
dec
push
inc
sbb
push
ins
mov
rcr
mov
and
mov
shl
and
cwde
dec
ss
cmp
mov
fdecstp
sub
sub
mov
and
mov
push
ins
std
and
or
not
mov
or
inc
push
jmp
out
jnp
mov
or
mov
push
mov
pop
jmp
(bad)
scas
scas
xchg
ds
test
mov
mov
data16
sbb
frndint
push
jns
sbb
mov
lahf
adc
mov
rol
mov
xchg
mov
cmp
iret
(bad)
mov
jae
test
iret
js
cwde
lds
xor
gs
push
in
in
push
loop
test
cmp
pop
jne
pop
and
loop
je
inc
cli
std
or
enter
clc
dec
fldcw
ror
push
inc
inc
mov
fist
jnp
push
xchg
pop
sbb
mov
adc
ja
or
cmp
imul
stos
mov
xor
addr16
or
cmp
jmp
xor
push
js
add
repnz
push
dec
push
leave
retf
pushf
sub
push
stos
jl
inc
push
inc
ins
addr16
jmp
and
(bad)
sar
clc
xchg
dec
and
fcomp
or
jmp
mov
test
rol
push
inc
in
and
adc
and
jp
adc
mov
loopne
(bad)
xor
int
icebp
and
fsub
cmp
cld
leave
dec
scas
js
mov
mov
cwde
dec
mov
xchg
in
popf
dec
xchg
sub
mov
mov
xor
sti
fisttp
lahf
sbb
pop
mov
add
sbb
mov
mov
shr
xor
in
idiv
(bad)
mov
daa
dec
dec
hlt
call
out
adc
inc
imul
lods
pop
mov
xchg
mov
pop
xchg
(bad)
clc
xor
sub
mov
icebp
mov
outs
dec
fdivr
shl
dec
iret
sub
shl
xchg
not
movs
add
vmwrite
or
xor
add
daa
test
imul
int
addr16
and
mov
lea
pop
mov
cmp
addr16
ficom
mov
mov
mov
cmp
xchg
sub
sbb
and
push
xchg
les
or
adc
(bad)
sub
repnz
retf
mov
push
repnz
js
js
xchg
xchg
cmp
cmps
inc
(bad)
mov
es
xor
mov
dec
ret
push
gs
je
fcmovnb
es
dec
sar
icebp
xor
sbb
pop
dec
cmps
sbb
out
and
fisub
add
out
sbb
or
pop
mov
push
jb
mov
cwde
cmps
test
jbe
pusha
gs
jge
jg
cmp
push
and
fidivr
mov
push
jns
out
cmps
xchg
add
cwde
mov
aad
xchg
adc
cmp
ins
dec
adc
dec
stos
xor
mov
out
(bad)
dec
jo
inc
inc
pop
(bad)
(bad)
mov
cmps
ja
dec
ror
sub
push
lea
sbb
mov
push
xchg
cld
xchg
leave
retf
retf
pop
xchg
or
and
(bad)
imul
repnz
lods
gs
sub
push
or
push
out
into
bnd
inc
or
cmp
sbb
repnz
enter
clc
popf
xchg
xor
cmps
(bad)
data16
mov
cmp
in
add
enter
or
mov
adc
pushf
retf
(bad)
xchg
cmp
hlt
fistp
jmp
pop
mov
shr
jns
jne
xor
or
inc
jecxz
add
push
inc
dec
(bad)
jmp
(bad)
jmp
mov
inc
push
retf
outs
es
xlat
les
cmp
jp
lods
and
or
loop
ins
and
loop
cli
ins
mov
js
push
jge
retf
add
pop
cwde
mov
aam
mov
addr16
jo
cs
retf
mov
test
ret
es
ror
fimul
je
(bad)
retf
jecxz
mov
test
(bad)
push
pop
jae
xchg
pushf
out
fdiv
mov
aaa
(bad)
cmc
sbb
ins
cs
out
sub
mov
xchg
inc
stos
inc
cmp
cwde
test
mov
fidivr
imul
xchg
xor
pusha
inc
gs
clc
adc
inc
lds
in
adc
jl
jne
and
xchg
mov
pop
and
mov
or
stos
out
pop
adc
aam
ret
mov
mov
mov
inc
sbb
mov
pop
cmp
js
mov
jnp
loop
js
pop
adc
mov
mov
pop
mov
or
inc
mov
sub
bnd
stc
popf
arpl
or
sub
lods
push
fild
jl
popa
lahf
in
aaa
cmps
mov
outs
or
lahf
adc
xchg
push
js
mov
ror
pop
jne
fisub
pop
mov
and
loop
pop
scas
jp
push
push
sbb
add
cmp
push
sbb
pop
mov
aam
aas
xchg
loope
movs
div
scas
dec
std
nop
sub
test
xchg
pop
mov
std
xlat
out
jns
rcr
lock
pusha
cmc
sub
arpl
lahf
inc
and
lods
ja
xchg
pop
dec
dec
cmps
and
sbb
or
xchg
stos
sub
xchg
mov
les
jmp
test
xchg
je
cmp
out
lods
mul
cld
sbb
xor
movs
push
jnp
pusha
add
imul
fdivr
dec
in
popf
inc
faddp
popf
and
add
or
mov
cmps
sub
leave
hlt
cmp
pop
adc
std
ins
lahf
(bad)
in
into
hlt
mov
or
jmp
sbb
push
ror
jecxz
pop
js
les
dec
mov
jmp
fisub
xchg
aam
fld
pop
pop
hlt
dec
retf
addr16
cld
lods
add
shr
pop
inc
jo
mov
push
(bad)
mov
pop
xor
je
pop
pop
xchg
mov
and
adc
iret
xor
outs
out
lea
lahf
es
and
adc
imul
xchg
push
sub
ja
mov
adc
les
jmp
hlt
or
pop
mov
push
pop
xchg
es
in
mov
shl
jp
les
je
jmp
dec
adc
mov
jmp
xor
cmp
mov
xchg
dec
inc
lea
fstp
inc
div
cmps
in
mov
(bad)
ins
int3
retf
aas
add
push
cmp
mov
jmp
jge
mov
jp
sub
pop
sahf
and
aad
(bad)
inc
push
(bad)
arpl
mov
inc
adc
xor
popa
sti
dec
repz
push
cmp
ins
push
pop
inc
push
dec
call
pop
mov
jg
adc
int
popf
adc
xlat
xchg
ret
call
sub
add
dec
jecxz
xor
(bad)
mov
ror
into
aam
in
cmp
(bad)
(bad)
fcom
add
outs
sub
cmp
fstp
jmp
imul
fcomp
cwde
adc
aas
rcr
outs
in
mov
xor
cwde
data16
repz
in
sub
push
push
add
js
out
mov
mov
outs
xchg
(bad)
jmp
mov
inc
movs
adc
dec
loopne
mov
adc
or
sub
ss
and
push
jo
(bad)
iret
lahf
push
ret
test
ins
dec
or
xchg
ss
push
mov
sahf
dec
imul
mov
sbb
fwait
arpl
loop
mov
pop
xchg
pop
jo
add
pushf
ss
imul
loop
mov
movs
xor
cmp
xchg
adc
aam
push
jb
or
(bad)
in
cmp
mov
jae
enter
jbe
sbb
fs
push
stos
aas
adc
sbb
sbb
jp
sbb
pop
inc
cmp
imul
mov
xchg
dec
push
test
mov
mov
inc
add
jnp
jge
push
mov
loop
inc
stc
cmp
ret
pop
cmps
mov
into
ucomiss
jns
(bad)
cld
cdq
into
imul
push
mov
shl
loope
push
cmps
xchg
push
and
(bad)
and
jno
ins
mov
shr
call
mov
test
sub
jecxz
stc
mov
loope
sbb
cmp
inc
fsubr
les
clc
pop
aas
icebp
int
rol
scas
jecxz
rcr
or
xor
cmp
(bad)
out
inc
xor
mov
push
shl
xor
mov
data16
fnsave
mov
popa
not
jl
jge
push
mov
das
push
daa
add
add
fild
repz
jmp
sbb
lds
push
adc
imul
mov
mov
loop
dec
sahf
fstp
pushf
rcr
cmp
rcr
pusha
pop
xchg
mov
sbb
es
pop
add
mov
retf
add
and
dec
inc
rcr
scas
pop
and
lahf
cmp
ret
bound
shr
mov
pop
dec
xchg
adc
and
dec
sbb
shl
in
inc
jg
cdq
(bad)
and
int
movs
repz
into
ret
fdivr
mov
push
sub
pop
mov
jbe
push
rol
pop
xor
push
lea
lahf
sbb
xchg
mov
rcl
dec
adc
int3
or
ficom
xlat
loope
inc
int3
sub
sub
sub
jns
sbb
xor
cdq
push
xor
dec
sahf
cmp
in
and
inc
gs
ret
test
inc
call
hlt
mov
pop
or
inc
xor
push
(bad)
mov
jno
inc
pop
dec
sbb
stc
fadd
xor
jbe
jbe
sub
mov
cmp
xor
dec
jo
test
aad
in
or
arpl
dec
push
into
sar
push
adc
ins
cmp
in
adc
mov
or
cmp
push
imul
inc
fdiv
xlat
xchg
push
cmps
jno
sub
adc
sub
cmp
xchg
jne
xchg
jmp
ror
inc
and
sti
leave
adc
xor
pop
xchg
daa
pushf
(bad)
hlt
adc
push
or
mov
add
test
int
sar
and
std
pop
(bad)
pop
xor
add
inc
inc
xor
bnd
cvttps2pi
or
gs
sar
mov
in
and
imul
or
dec
pop
movs
push
and
fs
ja
mov
mov
push
ror
pop
dec
lds
inc
cmp
sub
jns
cmp
std
ds
stos
mov
fcom
cmp
dec
shr
xor
retf
daa
mov
sbb
movs
ffree
push
ins
inc
push
nop
mov
xchg
iret
enter
mov
cld
in
icebp
mov
sub
pop
mov
mov
and
add
cwde
xchg
mov
outs
out
ret
xor
dec
imul
pop
popa
inc
xchg
test
pop
inc
dec
push
push
adc
add
dec
pop
mov
pop
and
hlt
shr
and
mov
cmps
adc
pop
inc
cld
xchg
int
fcom
xchg
call
or
hlt
or
dec
lods
mov
repnz
mov
inc
cmp
mov
xchg
jbe
jle
jge
push
or
ror
cmp
jns
cs
stc
jp
jbe
dec
mov
(bad)
fadd
mov
xchg
out
les
movs
test
mov
dec
inc
adc
pop
or
pop
dec
cmp
add
push
cwde
dec
pusha
jl
and
dec
mov
inc
(bad)
mov
packssdw
icebp
xchg
in
neg
imul
jle
push
outs
or
imul
jmp
out
mov
push
cmps
lds
loopne
sub
(bad)
mov
and
pop
cmc
fcomip
xor
cmp
mov
dec
xchg
popf
leave
inc
and
dec
test
lock
fidiv
fnstsw
mov
fldcw
cmp
fs
jmp
call
add
imul
sbb
(bad)
cmp
mov
fnstsw
shr
lods
sbb
dec
test
ins
cmp
mov
daa
mov
add
js
lahf
stc
push
popf
push
and
or
test
(bad)
xor
xor
jo
or
mov
into
fisubr
jne
into
mov
sbb
hlt
imul
sub
mov
add
jnp
data16
jne
aaa
mov
sbb
inc
bound
jmp
mov
sub
movs
cmp
jge
repnz
mov
enter
mov
adc
ins
jp
adc
and
ret
aam
or
scas
add
push
cmps
xor
and
pop
adc
(bad)
leave
out
call
cmp
call
sbb
nop
dec
mov
add
push
cmc
mov
add
mov
xor
push
hlt
gs
cmc
mov
out
sbb
inc
cmps
jg
movs
std
jge
call
div
push
pusha
imul
ds
push
sub
mov
pop
popf
ret
push
stc
or
mov
outs
dec
jecxz
dec
mov
nop
fcmovne
jg
mov
jmp
and
mov
pop
pop
inc
pop
ss
out
xor
mov
sbb
xor
push
pop
xchg
call
psrlw
repz
fstp
div
xor
movs
sar
aad
shl
fistp
mov
js
xchg
xchg
push
lods
mov
es
scas
div
fidivr
retfw
pushf
pop
jo
sti
dec
ins
retf
gs
mov
sbb
clc
int
or
leave
inc
inc
rcl
inc
jge
int
adc
(bad)
hlt
dec
cwde
or
in
nop
repnz
cwde
mov
pmulhw
push
or
gs
dec
xor
ffreep
loopne
cmp
jb
test
stc
mov
dec
ds
sub
retf
add
je
shr
or
mov
scas
addr16
xor
fs
and
icebp
mov
pushf
fwait
pop
jo
and
popf
rol
sbb
sbb
(bad)
enter
adc
test
enter
neg
cmp
xor
ss
xor
mov
ss
fdiv
mov
test
jb
aam
mov
ret
fnstcw
cmp
aas
aaa
pop
movs
xchg
aad
push
dec
mov
or
xor
cmp
je
(bad)
es
mov
call
mov
jmp
imul
xchg
mov
mov
scas
and
push
popa
adc
mov
retf
pop
xchg
test
push
inc
xchg
call
dec
je
xlat
inc
add
mov
inc
and
test
and
loop
add
or
xchg
mov
and
wbinvd
jmp
adc
and
fidivr
outs
pop
push
in
add
and
mov
push
mov
dec
dec
fld
jmp
into
jne
mov
sub
jbe
aas
sub
mov
data16
add
arpl
jge
fwait
mov
test
mov
sbb
repnz
mov
je
les
jo
mov
ror
cs
retf
fidivr
push
ss
fisttp
mov
movs
loope
jo
stc
cmp
pop
hlt
and
adc
mov
xor
(bad)
loope
ret
pushf
arpl
call
loope
scas
pusha
mov
cmp
xchg
sbb
cdq
ret
sbb
std
sahf
jge
mov
and
rcr
(bad)
(bad)
(bad)
cmp
js
mov
push
add
icebp
hlt
mov
dec
sbb
add
push
add
out
pushf
movs
inc
jns
shr
xlat
cmp
retf
mov
xor
cmp
and
xor
or
push
mov
dec
cmp
hlt
mov
adc
xchg
loop
loope
and
sub
cmp
fsub
mov
lock
jl
aam
ds
pop
xor
xor
idiv
test
dec
jle
add
retf
movs
jnp
lock
jmp
clc
lods
mov
icebp
sub
mov
sar
sbb
arpl
mov
xchg
add
repz
mov
out
rcr
jno
mov
cmp
push
lock
add
mov
mov
or
pop
push
imul
inc
jmp
movs
les
adc
mov
ins
cmps
push
add
into
je
daa
cmp
pop
jno
dec
xchg
pusha
rcr
adc
enter
addr16
rol
ret
jle
push
sub
bound
lds
mov
push
sbb
pop
lods
cmp
stc
sbb
lds
and
loopne
add
adc
(bad)
sub
xlat
xchg
mov
fwait
add
inc
sub
in
nop
loop
add
push
mov
cs
retf
push
(bad)
enter
inc
sub
sbb
in
and
cmp
fwait
push
out
aaa
aaa
jmp
push
sbb
adc
cmp
loop
push
or
adc
add
rcl
and
inc
pop
inc
idiv
adc
fdivr
outs
call
sti
les
stc
sti
dec
or
repnz
and
sub
pop
cli
cmps
ffree
je
xchg
pusha
push
xor
cli
mov
ja
mov
js
mov
int3
add
mov
fwait
sub
sub
fmul
popf
ja
(bad)
ins
add
lods
or
jmp
or
inc
xor
sub
jle
fld
or
pop
hlt
bound
test
adc
push
add
sub
loop
sbb
daa
pop
mov
or
cmps
sti
clc
push
mov
jmp
dec
mov
sbb
lods
lods
mov
push
xchg
sbb
bnd
xor
xor
nop
or
jp
add
add
into
cs
dec
movs
ss
pop
dec
pop
arpl
push
inc
shr
fistp
movs
push
scas
xor
(bad)
xchg
cmp
sub
inc
push
test
add
sbb
mov
std
dec
dec
cmp
add
(bad)
fild
es
pushf
(bad)
fst
jb
fwait
lds
or
jge
mov
fcomp
sti
icebp
and
xchg
lea
jns
or
push
retf
cmp
push
pop
cs
fidiv
push
cmps
jge
dec
fcom
pusha
inc
sti
scas
popa
sbb
jb
stc
rol
pushf
sbb
cmp
sub
and
mov
int
loopne
hlt
dec
push
sbb
mov
aam
cmp
nop
cmp
cld
cmp
stc
inc
test
neg
addr16
push
add
inc
push
xor
leave
pop
pushf
sbb
xchg
test
fmul
mov
or
dec
movs
add
out
adc
dec
xchg
int
in
mov
xchg
test
fstp
push
push
xchg
je
push
jo
fs
es
inc
shl
aas
push
pusha
es
mov
mov
push
pop
aam
scas
sahf
loop
(bad)
lock
cdq
cmp
xchg
iret
jns
xchg
aas
jl
aam
das
lds
pop
dec
aas
icebp
mov
xor
in
int3
sbb
iret
ret
jmp
loop
sub
sub
mov
dec
stos
sub
je
jp
push
mov
in
and
push
sub
push
inc
cwde
in
ror
mov
mov
mov
aad
mov
fstp
jae
rcl
hlt
adc
xlat
imul
addr16
inc
fidivr
pop
stos
scas
mov
sub
pop
xor
aam
xor
sub
xor
dec
push
fwait
mov
imul
lahf
dec
pop
js
bound
fisttp
push
sbb
not
sbb
xor
add
call
sub
pop
mov
push
in
sub
lock
iret
add
jb
add
call
ins
sbb
stos
push
out
push
iret
in
push
retf
cld
xor
mov
sub
cmps
cmp
mov
mov
pop
pop
mov
push
and
mov
ss
jno
pop
test
push
push
daa
inc
mov
fnstsw
fadd
cmp
cmp
dec
and
imul
mov
push
mov
add
cmp
pop
out
fidivr
adc
popa
jp
mov
stc
in
xchg
jmp
faddp
pop
add
call
mov
inc
push
leave
fwait
add
xchg
sbb
gs
(bad)
xor
test
lock
mov
xor
fbld
cmps
mov
scas
mov
movs
mov
jnp
test
div
call
ds
stos
jbe
lods
sti
aad
outs
mov
div
(bad)
frndint
push
mov
cmps
jns
push
push
mov
xchg
test
xor
mov
ret
adc
aaa
xchg
out
xchg
leave
out
dec
popa
push
data16
lea
and
jecxz
sub
(bad)
cmp
scas
call
xchg
adc
jge
mov
dec
pop
frstor
(bad)
sar
(bad)
and
add
es
jno
xchg
jecxz
pop
xor
hlt
jl
retf
ins
lock
fld
add
cwde
push
xchg
ins
ret
mov
dec
mov
jne
int3
cld
mov
dec
mov
mov
and
xchg
les
and
in
sbb
mov
mov
fbstp
and
and
mov
adc
xor
add
pop
add
jp
loope
jmp
cwde
sub
ret
ja
inc
shl
and
and
sahf
jp
(bad)
(bad)
adc
pop
ds
mov
not
mov
ja
sub
inc
shr
outs
jo
sbb
mov
inc
push
mov
loop
xor
add
hlt
aam
sbb
pop
jne
std
jae
sbb
in
fadd
sti
fwait
and
push
lods
adc
mov
mov
jno
std
call
sub
xchg
cmc
ds
adc
mov
cmp
dec
dec
dec
pusha
inc
pop
cmc
dec
rep
xchg
bnd
xchg
hlt
outs
pushf
mov
pop
(bad)
sar
mov
cmp
mov
jo
mov
xchg
in
pop
jg
inc
retf
test
jmp
pop
mov
aaa
pop
hlt
es
stos
push
or
aam
dec
cmps
fcmovnb
(bad)
inc
and
push
mov
push
cmp
push
repz
push
sub
cmp
neg
xor
mov
mov
push
xor
adc
fdivr
mov
cmp
sub
mov
mov
in
jbe
gs
in
fisubr
adc
and
popf
popa
mov
dec
shl
push
push
int
jne
cmp
jle
cmp
sbb
loop
xor
pop
mov
xchg
movs
rcl
jae
or
std
sbb
xchg
les
or
mov
xchg
leave
push
sbb
adc
fucomip
fld
aad
mov
sbb
pop
jle
jae
jg
dec
in
mov
mov
push
out
inc
shl
pop
mov
stc
lahf
push
idiv
or
mov
push
shl
dec
push
adc
stos
sbb
jnp
test
shr
scas
jmp
xchg
xchg
mov
xchg
je
int
xchg
(bad)
neg
and
je
adc
(bad)
dec
bswap
or
jo
mov
sub
mov
sbb
fwait
xor
add
fcomp
jg
test
add
jns
cmp
std
or
mov
fwait
push
int
xchg
fdiv
leave
fidivr
retf
push
jp
push
push
pop
push
jb
adc
xchg
popa
jmp
mov
add
push
jne
mov
push
cmp
mov
addr16
sub
mov
std
push
adc
out
test
jns
(bad)
jb
inc
cmp
mov
push
lea
and
sti
rcl
jne
leave
fisttp
push
sbb
jmp
pop
dec
pop
sahf
int3
and
out
or
or
adc
test
rcr
xchg
push
or
ret
ror
mov
xchg
mov
rcl
retf
xchg
or
stos
cwde
cmp
jnp
popa
(bad)
mov
ja
mov
xchg
hlt
inc
jg
in
mov
ror
jp
cwde
add
cmps
fidiv
dec
inc
call
push
and
inc
cmp
lock
mov
sbb
push
pop
addr16
cmp
mov
ss
push
outs
xor
jecxz
push
shr
xchg
mov
push
jle
out
cmp
push
cmp
inc
fsubrp
rdmsr
pop
mov
(bad)
int
call
mov
js
cli
add
add
mov
push
je
test
dec
push
xor
adc
lds
inc
jae
adc
sti
ror
add
cmc
cmps
jmp
in
loopne
scas
mov
scas
scas
push
in
gs
mov
cmp
sub
xchg
push
out
inc
pushf
xor
aas
jge
jecxz
push
or
sub
push
into
xor
xlat
xlat
jge
jle
push
mov
mov
cdq
enter
dec
mov
shr
test
mov
les
arpl
mov
mov
sbb
daa
loop
or
(bad)
inc
stos
push
lahf
retf
pop
aad
repz
shr
iret
xchg
pop
and
fnop
pop
push
and
xor
pusha
sbb
les
xlat
imul
in
push
int3
fist
js
xor
cli
jp
test
pop
cli
movs
inc
pop
xchg
pop
push
mov
add
inc
mov
sbb
xchg
or
mov
or
add
xor
mov
out
lods
popa
dec
fimul
pushf
repnz
pop
mov
test
sub
dec
arpl
jnp
std
push
add
inc
shr
fsub
jo
repnz
or
or
and
inc
adc
lea
cmp
es
sbb
or
push
sti
shr
cmp
mov
or
inc
(bad)
mov
fcomp
jb
cmp
inc
imul
sbb
jo
sbb
mov
repnz
mov
sub
mov
cld
pop
je
push
fdiv
or
mov
int
sub
int
pop
mov
xchg
data16
push
mov
push
fs
ret
ret
xor
(bad)
lea
scas
mov
xchg
fdiv
cmp
xchg
or
mov
ins
and
sbb
jl
inc
call
mov
jne
mov
adc
mov
test
mov
dec
(bad)
outs
xchg
push
(bad)
nop
jmp
jns
dec
and
sub
jge
call
loope
inc
add
loop
jle
loopne
adc
jne
mov
stc
iret
pop
arpl
cmp
mov
pusha
xchg
loopne
ret
aaa
(bad)
sahf
xchg
nop
rcl
int
xchg
mov
push
inc
outs
je
stos
dec
cs
or
push
movs
or
fwait
bound
cmp
and
retf
xchg
rcr
imul
loopne
iret
inc
cmp
ins
in
inc
add
inc
outs
jp
leave
ss
xchg
lods
ins
aad
ss
cmps
mov
loop
ficomp
mov
push
popf
icebp
sahf
cmp
or
ret
inc
lock
cmps
push
aam
dec
dec
jmp
xchg
lods
mov
dec
rol
add
and
pop
push
mov
loop
mov
adc
add
jb
jmp
sahf
and
std
cdq
xchg
inc
push
jle
bound
xor
and
push
sar
in
jo
xor
sti
hlt
mov
dec
pop
sub
adc
shl
push
inc
out
jg
or
daa
jl
mov
add
cmp
and
fdiv
ds
jmp
xor
arpl
out
adc
int
dec
xor
push
mov
imul
(bad)
push
cmps
dec
mov
and
sub
pop
sbb
push
adc
pop
dec
mov
xor
hlt
out
mov
mov
aam
fidivr
adc
xor
jmp
shl
xchg
jns
(bad)
push
and
scas
movs
rcl
push
in
jb
mov
(bad)
adc
gs
xchg
test
ds
cmp
test
in
cmp
xchg
mov
adc
sbb
dec
mov
dec
xchg
mov
add
std
mov
and
in
retf
xchg
call
popf
popa
cmp
cwde
add
out
jae
pop
mov
pop
sbb
or
jp
retf
loope
or
(bad)
in
inc
or
sbb
mov
dec
lds
(bad)
in
lods
inc
push
dec
movs
leave
adc
jle
xchg
clc
ins
jle
sbb
dec
cli
or
push
and
add
jmp
jmp
loopne
mov
mov
shr
mov
push
add
and
sbb
cmp
inc
psrad
pop
enter
fbld
stos
(bad)
mov
or
dec
push
sti
jnp
push
or
imul
push
add
jp
stos
cmc
push
and
or
sbb
cmp
out
xchg
pop
iret
mov
rcl
leave
sbb
cli
pop
sbb
loop
xor
and
sti
test
sbb
lods
sub
xchg
inc
repnz
pop
push
aas
dec
iret
(bad)
sbb
adc
dec
inc
pop
push
xor
repz
int
lahf
fidivr
mov
inc
mov
iret
add
into
sub
ss
paddsb
and
sti
cmp
xor
inc
aad
rcl
mov
sahf
scas
mov
ss
loope
loop
dec
dec
jp
sahf
nop
cmp
mov
jp
push
hlt
enter
outs
lods
or
push
fwait
in
(bad)
push
outs
xchg
cmp
dec
push
je
int3
and
xchg
int
cwde
mov
adc
jae
xchg
xor
and
and
dec
into
mov
cmp
aaa
cld
in
jecxz
outs
out
enterw
lods
js
inc
fwait
daa
sbb
adc
jne
lods
imul
loope
aam
mov
sbb
test
push
out
outs
aad
sub
mov
cmc
scas
sbb
and
movs
and
test
loopne
enter
(bad)
jo
rol
inc
xlat
mov
mov
out
inc
scas
popf
fwait
or
sub
movs
(bad)
rol
in
push
rcl
leave
cmp
movs
pop
test
fisub
addr16
fdiv
jae
adc
jp
push
mov
sbb
jb
fcmovb
lods
pop
push
out
(bad)
sbb
loopne
rcr
xchg
push
mov
fsub
out
sbb
mov
push
repz
shr
push
sub
add
int
jp
daa
mov
mov
inc
clc
inc
sti
jl
pop
dec
in
sub
cdq
or
push
push
mov
std
imul
push
xchg
push
jb
fs
push
or
mov
cmp
mov
jbe
inc
outs
sbb
rcr
sbb
and
aad
cmp
jp
mov
imul
cdq
in
mov
push
or
jmp
add
pop
mov
and
or
inc
xchg
inc
inc
jle
int3
stos
mov
and
cmp
dec
dec
aaa
ja
popf
push
mov
sbb
adc
hlt
lods
rol
cmc
in
(bad)
js
repz
xchg
xchg
and
and
inc
jne
or
test
and
pop
push
sub
jno
xchg
sbb
mov
mov
pushf
test
fwait
mov
mov
mov
cmp
es
xchg
and
retf
xor
out
push
mov
pop
test
cdq
mov
rcr
push
sbb
outs
pmulhw
pop
(bad)
jbe
scas
lea
xchg
sub
stc
sbb
inc
daa
das
mov
out
(bad)
pop
pop
xchg
xor
cwde
call
jae
sahf
push
mul
pop
sbb
jno
sub
cmp
stc
xchg
push
movs
call
xor
lahf
test
fsubr
cmp
jnp
xchg
dec
pop
mov
lahf
call
retf
shl
arpl
popf
aas
cli
cmc
mov
fidiv
jmp
push
in
popa
pop
arpl
pop
and
mov
push
xor
mov
fwait
jmp
adc
pushf
push
cmp
mov
jecxz
repnz
xchg
inc
test
push
cmc
inc
xchg
add
xor
and
fsub
mov
fs
mov
mov
xor
xor
push
xor
loope
adc
adc
mov
test
das
gs
adc
retf
mov
ins
movs
and
sub
mov
outs
idiv
mov
xor
mov
jns
or
jbe
dec
and
les
xlat
lock
clc
in
jnp
dec
ins
cli
stc
or
xor
mov
mov
rcr
daa
out
xor
push
adc
in
add
aas
mov
mov
fadd
sub
add
xlat
test
popa
into
jns
ja
arpl
(bad)
cmp
cli
add
adc
ror
pop
test
dec
and
push
sbb
pop
xchg
mov
imul
(bad)
movs
xor
(bad)
dec
outs
icebp
adc
pushf
outs
jb
stc
stos
mov
sar
sbb
jbe
cmp
bound
cli
scas
xor
stos
pop
inc
stos
jno
mov
popf
jne
mov
xchg
sbb
jns
mov
(bad)
leave
jae
cmp
ficomp
mov
dec
add
aas
aam
jno
mov
xchg
mov
loope
xor
ror
data16
ret
mov
push
push
stos
retf
xchg
push
test
lods
jmp
xchg
fnstcw
test
hlt
jae
loope
cmp
cmp
mov
dec
das
inc
pop
and
cmp
mov
jl
add
inc
mov
test
pop
push
aad
loopne
lods
cld
sbb
push
mov
adc
xor
test
push
(bad)
sub
sub
sbb
aas
push
dec
mov
hlt
xchg
or
sbb
sbb
add
adc
mov
push
idiv
add
push
and
sub
out
mov
inc
sbb
pop
mov
es
mov
dec
rol
rol
in
lea
(bad)
fst
leave
dec
les
into
rol
movs
hlt
sub
(bad)
mov
mov
std
scas
mov
mov
test
(bad)
add
stc
inc
pop
xor
daa
mov
mov
stc
out
aam
repz
int3
std
pop
mov
cli
mov
add
ds
xchg
(bad)
popf
and
(bad)
push
outs
add
mov
mov
cmp
jge
test
or
xchg
mov
fistp
fistp
dec
leave
or
mov
call
mov
xchg
cmc
and
inc
or
push
imul
loop
and
jb
add
stc
inc
arpl
push
push
repz
xor
mov
int3
mov
mov
push
adc
xor
sub
or
or
or
add
pop
repz
js
sbb
adc
add
jo
clc
int3
sub
idiv
faddp
sbb
mov
dec
push
std
jns
jp
call
call
cmp
mov
dec
mov
data16
cwde
fdiv
push
int3
nop
jp
sbb
jmp
mov
or
mov
cmps
cli
mov
nop
scas
ss
pop
imul
and
xor
and
xor
jbe
push
stos
and
repnz
xchg
mov
test
jne
mov
mov
push
mov
sub
imul
add
lock
ret
inc
movs
ret
push
mov
pop
sub
loop
iret
test
push
in
or
xchg
cmps
or
push
xchg
fsub
(bad)
dec
sub
fdiv
sub
add
ficom
call
cmc
pushf
push
jecxz
push
cmp
mov
cmp
push
rol
retf
jg
dec
mov
mov
shl
repnz
xchg
adc
push
and
rcl
mov
js
jp
mov
je
adc
sahf
jg
mov
add
pop
movs
hlt
push
jb
ja
call
jmp
popa
outs
inc
jae
fwait
sbb
(bad)
into
cdq
jae
jbe
sub
stc
mov
dec
cld
ins
ret
mov
xchg
mov
adc
(bad)
clc
mov
cdq
je
scas
cdq
xchg
sub
pop
cmp
pop
xlat
(bad)
lods
pop
(bad)
in
lahf
(bad)
xchg
mov
mov
js
mov
or
pop
cli
(bad)
and
xlat
or
add
push
jmp
sar
add
pop
mov
fdiv
loop
xor
xor
lds
shr
nop
inc
or
imul
push
xchg
or
into
xor
and
inc
fisttp
nop
jns
push
imul
jae
pusha
or
scas
cli
jle
sahf
jp
iret
mov
pop
sbb
inc
out
inc
or
or
fs
daa
dec
xchg
push
and
inc
add
test
rol
add
repz
mov
dec
cmp
xchg
mov
mov
out
xor
mov
and
mov
rcr
dec
jne
add
cs
fisub
mov
or
test
stc
gs
push
jmp
inc
xchg
(bad)
adc
and
sub
inc
pusha
pusha
lods
pop
lods
das
enter
rcl
fadd
sbb
arpl
dec
push
or
ret
and
push
loop
loop
call
ins
dec
fs
push
repz
sub
pop
dec
inc
or
int
pop
pop
xchg
adc
cs
mov
jb
xchg
call
lock
or
jle
loopne
add
ret
and
mov
repz
repnz
cmp
pop
fsubr
add
fninit
pop
fistp
jg
js
add
shl
xor
mov
in
adc
hlt
jmp
and
fdiv
add
fnstsw
push
adc
scas
call
cdq
sub
int3
inc
rcr
sar
ret
shr
xor
scas
test
aad
imul
push
cmp
aas
pop
jmp
loopne
or
mov
retf
or
(bad)
sbb
sbb
(bad)
outs
mov
xchg
jno
mov
repnz
xchg
clc
retf
imul
popf
fadd
bnd
mov
cmps
sar
test
(bad)
imul
test
jecxz
and
ficom
add
xchg
lods
xchg
push
mov
data16
jnp
in
fld
call
pop
push
xor
dec
je
out
jp
sbb
sar
loope
das
movs
aad
xor
imul
test
xor
movs
mov
jecxz
fs
and
test
add
enter
sbb
test
jne
xchg
dec
sub
cs
shl
cmp
and
cmps
mov
xor
shl
imul
loopne
mov
std
in
xor
and
stc
aas
in
adc
mov
dec
mov
not
pop
gs
inc
dec
and
clc
mov
lds
and
das
ss
(bad)
and
mov
xor
add
mov
and
faddp
xchg
in
jne
push
pusha
aaa
jle
(bad)
fist
jns
popa
dec
push
ins
adc
aas
ret
mov
lods
inc
icebp
mov
sbb
mov
jl
jle
fdivr
shl
js
fwait
clc
add
and
lods
sbb
and
(bad)
push
pop
movs
pop
jecxz
pop
pop
inc
add
xchg
and
add
js
jp
adc
fstp
xchg
not
stc
and
cmp
add
pop
int3
sbb
inc
add
xor
fcom
mov
adc
into
ss
xlat
inc
inc
or
dec
in
sub
add
mov
div
cmp
xchg
fld
repnz
idiv
loop
xchg
mov
xchg
popa
sbb
cs
cmp
je
test
je
fcom
mov
mov
sub
lahf
xchg
mov
sub
push
fcom
xchg
adc
sub
and
cdq
fwait
add
pusha
cmc
repz
mov
nop
(bad)
aas
push
ss
sub
imul
aaa
mov
cmp
inc
mov
js
mov
push
xchg
or
push
jl
enter
popf
mov
dec
(bad)
jmp
inc
outs
in
add
stc
inc
imul
inc
fwait
jg
inc
aaa
cdq
jae
cmp
inc
lods
pop
adc
push
push
mov
xor
or
cmc
in
retf
imul
icebp
aam
xchg
loope
fadd
push
popa
adc
push
mov
xchg
xchg
imul
ret
or
repnz
mov
cmps
retf
sub
out
fisub
add
add
mov
fidiv
out
sbb
xchg
jb
movs
add
ret
jb
pop
xchg
mov
mov
adc
or
xchg
shr
stos
xor
inc
pusha
pop
mov
in
and
js
ja
out
cmp
sti
sahf
mov
mov
lock
test
dec
fsub
(bad)
repz
into
xchg
inc
push
lahf
loope
mov
push
out
fs
mov
add
cmp
fimul
aam
cmps
dec
xchg
test
jg
push
dec
xchg
xchg
and
outs
pop
xor
sub
inc
or
lods
inc
mov
sub
sbb
or
repnz
nop
lahf
or
into
mov
jle
out
add
pop
or
push
and
inc
pop
dec
push
mov
je
push
idiv
sub
sbb
sub
imul
outs
push
xchg
outs
sub
dec
xlat
inc
ja
dec
add
xor
aas
mov
sar
add
es
loopne
aaa
mov
sbb
clc
jl
fs
ror
push
and
lds
xchg
sahf
out
ror
ins
xchg
sbb
shl
hlt
in
test
sub
jno
mov
inc
dec
loope
gs
(bad)
sar
jmp
push
xchg
call
retf
sub
mov
push
xchg
and
retf
movs
lods
es
fcmovb
call
mov
movs
xor
stc
push
cmp
mov
sub
cwde
push
mov
fs
leave
sub
dec
pop
or
imul
add
int3
jb
cwde
fnstenv
popa
neg
pop
and
mov
in
sti
mov
jns
dec
sahf
sub
sbb
sub
and
inc
add
pushf
dec
push
lahf
and
inc
pusha
cli
dec
xor
nop
xor
shr
xchg
sti
dec
(bad)
rol
mov
xchg
mov
inc
loopne
sbb
add
push
push
mov
ret
xchg
aam
xchg
dec
mov
sub
outs
aad
adc
and
sbb
inc
push
out
xor
jns
scas
stos
pop
push
sbb
push
cmp
inc
xor
and
xor
nop
aas
adc
add
and
xor
mov
mov
jl
gs
fdivr
xor
add
push
lds
cli
leave
mov
mov
ja
mov
mov
imul
call
mov
ss
(bad)
xor
xchg
(bad)
mov
addr16
cdq
add
add
sbb
push
or
inc
mov
cdq
xchg
push
jp
xchg
inc
mov
pop
pop
inc
les
cdq
and
sahf
retf
pop
ret
call
(bad)
sub
push
adc
or
push
mov
sahf
xor
loopne
xor
fsubr
jns
inc
mov
ds
add
cmp
mov
cmp
js
dec
push
ja
test
pop
cmp
popa
sbb
mov
fimul
push
and
xor
lods
ja
outs
xor
xor
fxch
je
adc
dec
pop
cs
sbb
mov
in
mov
inc
jmp
ficom
add
jnp
inc
push
cs
jle
icebp
jno
daa
or
or
xor
ss
pop
sti
xchg
pop
sub
jg
jmp
mov
jns
mov
std
(bad)
lods
clc
xor
and
dec
movs
or
sub
lahf
cmps
jl
imul
and
inc
mov
pop
out
out
es
jne
hlt
retf
add
gs
data16
sub
jg
rol
out
dec
enter
int
(bad)
xor
call
cmps
inc
xchg
sbb
lock
mov
xchg
push
cmp
xor
sbb
into
xor
xor
pop
cmps
setp
ret
xlat
ss
out
sub
mov
sbb
xor
mov
rcr
xchg
xor
adc
sbb
mov
xchg
push
mov
sbb
rcl
cmps
daa
xchg
push
leave
mov
hlt
stos
jmp
ins
cwde
data16
gs
push
push
pushf
(bad)
repz
call
enter
adc
push
xor
cmp
cld
lods
ins
shr
dec
xor
cmp
cmp
outs
iret
test
into
dec
mov
lods
loope
inc
jge
jo
and
mov
lock
xchg
ja
add
addr16
jge
mov
int
pop
(bad)
push
outs
in
xchg
arpl
mov
aas
ret
xlat
adc
mov
mov
test
mov
pop
gs
popf
inc
cld
and
mov
rol
add
aam
(bad)
into
mov
test
cmp
std
ins
pop
scas
cmp
ins
pop
xchg
pusha
mov
scas
mov
pop
call
mov
rcl
(bad)
ins
je
or
inc
or
push
sbb
sub
in
and
fwait
jno
sbb
pop
outs
inc
test
pop
inc
pop
test
fadd
cmps
(bad)
jnp
mov
cmc
loop
out
rcl
mov
mov
inc
scas
xchg
stos
push
and
gs
add
int3
outs
ret
vmovsd
push
mov
pop
mov
shl
cld
sbb
mov
mov
in
dec
clc
dec
imul
and
push
mov
or
sti
mov
data16
es
inc
and
pop
xor
(bad)
std
out
fstp
or
jb
in
mov
pop
mov
jbe
pop
inc
fsub
popa
push
test
push
in
(bad)
dec
mov
retf
shl
cdq
ret
es
xchg
dec
dec
das
jle
test
and
mov
lods
mov
add
mov
push
call
sub
fist
pop
jg
aas
int
and
ret
cmp
je
pop
stos
push
stos
xor
jge
pop
mov
jmp
in
sbb
inc
sbb
lahf
bound
loope
jp
jecxz
push
icebp
xor
lock
addr16
(bad)
mov
test
inc
stc
or
(bad)
jae
gs
inc
push
js
lods
cli
nop
push
pop
dec
hlt
cs
add
and
add
pop
sub
loopne
nop
jnp
bound
repz
out
fisubr
push
or
aad
ins
ds
mov
jmp
adc
fcomip
(bad)
mov
aaa
sub
add
cmp
inc
dec
mov
icebp
push
jge
mul
sbb
std
in
scas
out
pop
or
aas
ret
or
popa
sub
popf
push
stos
popf
mov
retf
pop
rcl
adc
mov
popa
clc
add
daa
and
stos
sub
push
gs
xor
mov
ret
fdiv
aam
pushf
inc
mov
cmp
add
mov
dec
addr16
jo
or
dec
(bad)
dec
ds
dec
inc
int3
sahf
inc
jae
xor
repnz
(bad)
call
outs
iret
push
xor
daa
(bad)
and
jne
cld
cwde
pop
xchg
clc
pop
pop
push
sbb
repz
pop
push
jp
test
cld
in
outs
test
mov
movs
aaa
shl
or
retf
jae
adc
imul
mov
or
(bad)
popf
cld
jecxz
lods
sub
or
add
pop
cmp
pop
and
mov
inc
aas
imul
enter
int
out
xlat
inc
dec
pusha
push
jmp
or
jge
cmp
xor
dec
or
call
cmp
mov
aad
dec
xchg
pop
sbb
lock
and
mov
fsub
dec
nop
fwait
sub
cli
and
push
out
inc
push
loope
xchg
dec
int
xor
mov
ds
mov
push
addr16
or
push
nop
shl
inc
retf
ffree
dec
fcos
cmp
ds
lea
mov
inc
and
neg
add
or
in
push
push
xchg
or
jecxz
shl
jb
mov
jo
add
sbb
or
ins
stos
(bad)
dec
frstor
out
hlt
gs
cmp
into
push
add
imul
test
jne
pop
cwde
jbe
sbb
cmp
fs
xchg
add
(bad)
push
add
adc
jl
jb
inc
lods
ficomp
xchg
in
or
test
mov
ins
xchg
mov
loope
add
push
pop
or
(bad)
adc
cmp
aas
mov
fmul
dec
in
xchg
gs
loop
lods
push
or
adc
jge
aad
pop
aaa
inc
pusha
cmove
ss
add
push
idiv
push
push
sbb
dec
xor
imul
fdivr
sub
loop
push
and
and
mov
call
or
and
inc
inc
retf
out
das
ja
imul
(bad)
scas
repnz
adc
sar
inc
add
test
add
lods
cld
je
les
dec
sar
adc
dec
dec
jne
mov
(bad)
retf
or
mov
inc
adc
jnp
out
xor
repz
jle
mov
mov
mov
sbb
mov
dec
call
mov
test
xchg
jb
pop
push
jo
arpl
nop
jmp
sbb
mov
or
sub
pop
outs
aaa
retf
cmc
xchg
sahf
jle
sub
pop
bndldx
inc
retf
out
add
push
rcl
xchg
daa
scas
jmp
inc
xor
call
cmc
mov
mov
jb
push
call
cmp
push
pop
daa
cld
fisttp
pop
sahf
cmc
aas
mov
xor
jb
push
int3
mov
repnz
xor
mov
sbb
sbb
test
in
push
jecxz
(bad)
pop
adc
dec
data16
repz
mov
scas
jns
icebp
dec
loopne
fdivr
das
jo
jge
inc
jecxz
cmps
xchg
lea
cmp
dec
sahf
push
mov
or
fld
xor
lds
in
retf
cmp
xchg
mov
and
xor
fcom
fwait
adc
pushf
or
pop
out
xchg
test
inc
cmp
xchg
jb
scas
sahf
lahf
push
xor
js
inc
and
mov
neg
push
lods
ss
shl
jmp
test
xor
loope
pusha
adc
scas
xor
xor
jo
xor
jp
xchg
mov
aam
pop
lahf
inc
xchg
stc
retf
adc
mul
fist
inc
and
push
bound
cmp
prefetch
or
ins
sbb
mov
in
std
push
jl
fistp
into
ror
(bad)
jnp
dec
push
adc
nop
inc
inc
in
test
outs
adc
mov
pop
push
ror
repnz
test
xchg
int
into
call
outs
dec
pop
rcl
loopne
mov
jno
jno
dec
xchg
int3
ror
jecxz
pop
rcl
call
pop
cmp
push
ins
adc
sbb
fs
and
imul
aaa
imul
clc
add
xchg
repnz
or
fwait
mov
scas
enter
ret
iret
push
dec
fldcw
adc
push
fidiv
cwde
mov
ins
xor
jbe
fs
movs
mov
dec
das
sub
xor
dec
push
in
mov
seta
je
inc
clc
push
dec
or
pushf
cmp
cs
out
inc
xlat
adc
cdq
dec
cmps
ret
inc
dec
(bad)
lock
cwde
les
or
ins
adc
and
lock
mov
jmp
loop
xchg
shl
push
daa
lods
mov
dec
ficom
xchg
or
jae
rol
pushf
in
stos
xchg
xlat
mov
scas
ret
sbb
adc
rcr
(bad)
ins
jmp
inc
popa
cmp
test
fsubr
and
je
pop
inc
cs
jae
pop
push
outs
movsx
mov
clc
daa
push
cmps
push
mov
mov
test
ss
lods
das
push
bound
test
in
cmp
int3
mov
xchg
mov
or
movs
xchg
fstp
cwde
stc
cmp
add
adc
push
mov
retf
adc
lods
mov
xchg
pop
jb
cmp
scas
iret
or
fnsave
scas
dec
jmp
xor
dec
pusha
std
mov
ins
and
push
inc
jnp
push
sub
push
cmp
dec
mov
in
das
fcmovnb
pop
aad
enter
stos
dec
pushf
daa
mov
cmps
mov
iret
enter
inc
mov
xor
test
push
mov
push
cmps
jae
inc
and
add
jl
jp
mov
sub
pop
lahf
cmp
add
jae
mov
and
jecxz
xchg
jecxz
gs
add
mov
xchg
aaa
sub
or
test
pop
xor
push
push
xor
jmp
bound
(bad)
mov
cmp
clc
xor
pop
movs
jno
out
jae
fldcw
mov
pop
cdq
mov
jmp
mov
ret
fsub
es
movs
adc
xlat
test
test
cwde
mov
mov
shl
add
mov
ins
dec
or
inc
sub
adc
fld
ret
sbb
adc
jmp
mov
fdivr
aam
fsubr
ja
retf
pop
cli
push
stos
ret
gs
jg
pusha
int
push
retf
pop
lock
ds
mov
nop
xchg
sar
repnz
cmp
and
cmp
sub
pop
cwde
test
sub
push
mov
push
lods
out
cmps
arpl
mov
inc
cmp
sub
sbb
add
sub
mul
mov
ins
pop
(bad)
dec
xchg
icebp
stos
sbb
ror
or
push
ins
div
test
and
in
xchg
cmp
cld
cmps
mov
loop
stos
jmp
cmp
mov
in
mov
lods
and
jmp
mov
mul
cmp
inc
jmp
hlt
push
push
add
mov
jae
dec
int3
pop
jp
cmp
lea
inc
imul
ret
lea
push
mov
pop
mul
inc
mov
outs
push
movs
xchg
call
pop
jnp
cmp
imul
fsubr
pop
cmc
mov
adc
mov
push
scas
in
jns
ror
jecxz
add
xchg
scas
rcr
inc
imul
or
mov
arpl
ror
mov
jne
or
or
and
push
cdq
clc
mov
adc
scas
stc
mov
std
enter
pop
jge
inc
je
fild
es
push
inc
xchg
pop
data16
aas
pushf
stos
inc
and
stos
jecxz
sbb
jle
mov
xchg
cmp
fcmovbe
adc
cmp
or
arpl
mov
adc
das
push
sbb
rcr
sub
push
inc
add
gs
xchg
jno
mov
or
mov
jmp
ins
add
jg
shl
xor
int3
mov
pop
jae
mov
inc
pop
or
xchg
cmp
jg
arpl
(bad)
cdq
and
punpckhdq
pop
retf
stc
rcl
into
mov
repz
retf
mov
cmc
lods
mov
ins
aas
and
ret
inc
popf
jns
jl
jns
int
mov
je
leave
ret
js
xchg
push
add
inc
push
dec
outs
fidiv
dec
or
cdq
js
pop
data16
rol
adc
pop
pop
enter
push
sub
mov
inc
mov
enter
shr
xchg
cmp
es
pop
outs
inc
sub
lds
mov
sub
jge
fldcw
(bad)
movs
mov
pop
xchg
mov
fwait
xchg
dec
rol
sahf
fisub
out
inc
popa
sbb
adc
loop
hlt
mov
and
(bad)
jl
inc
and
sbb
and
push
das
loopne
cwde
mov
mov
sub
xor
sub
mov
imul
addr16
pushf
scas
sbb
test
dec
push
popa
push
adc
push
fs
repz
jbe
inc
inc
dec
je
dec
inc
lods
loopne
repnz
xlat
cmp
dec
pop
in
dec
dec
test
imul
in
add
ss
fnstsw
sub
iret
xor
je
pop
adc
mov
loopne
sub
lds
sub
xchg
cmp
sahf
push
mov
xor
lds
lds
sub
push
and
fisubr
cwde
cli
ins
rcl
ret
(bad)
ins
jns
fdivr
in
je
xor
pop
adc
mov
mov
mov
aas
adc
hlt
jbe
jo
cwde
cli
and
(bad)
mov
jecxz
es
mov
sub
xchg
aaa
movs
or
add
clc
sbb
imul
sahf
repnz
jg
cmc
test
sbb
scas
leave
sahf
out
and
inc
mov
shl
ret
addr16
and
xchg
push
sbb
inc
(bad)
dec
out
dec
jo
test
ds
adc
jne
loopne
mov
sbb
call
inc
push
mov
pop
cwde
aam
push
mov
cmp
pop
hlt
ja
dec
aam
out
fdivr
pop
xchg
sub
das
inc
xor
sti
sub
jno
mov
or
aad
sbb
push
mov
repz
stc
sar
dec
test
stos
sub
xchg
jp
dec
arpl
or
loop
rcr
sub
cmp
and
call
xchg
stos
xchg
in
jge
rol
mov
neg
sbb
(bad)
into
ins
adc
(bad)
xor
and
add
cwde
test
ins
cmp
dec
mov
mov
push
in
sbb
pop
dec
cld
les
arpl
addr16
cwde
fidivr
xor
xchg
jmp
enter
sar
xchg
(bad)
aad
push
dec
cmc
test
sahf
xor
jae
inc
je
ret
jb
mov
lods
dec
lods
xor
cs
call
ds
retf
fld
adc
arpl
jne
out
ds
jl
call
mov
sbb
rcr
dec
sbb
sub
inc
mov
loop
fadd
movs
pop
scas
inc
dec
test
mov
jb
xor
mov
adc
xor
popa
bound
shl
adc
xor
or
dec
push
xchg
les
ret
dec
xchg
xchg
mov
inc
(bad)
shr
cmps
out
push
inc
adc
mov
popa
mov
or
pop
push
add
push
retf
ins
das
fbstp
in
out
lock
mov
dec
test
mov
scas
xor
call
xor
push
xchg
xchg
xchg
pop
push
xchg
dec
daa
imul
pop
mov
cmc
mov
or
mov
mov
sub
and
or
xlat
imul
int
out
movs
(bad)
ror
mov
mul
and
imul
inc
adc
push
xlat
and
xor
or
jns
pop
push
daa
out
xchg
inc
adc
adc
inc
push
pop
add
xchg
std
push
jp
cmc
xchg
mov
imul
xchg
jbe
mov
pusha
fnsave
pop
cwde
push
test
lods
mov
push
leave
sub
push
or
adc
fsubr
jmp
std
adc
std
repnz
and
pop
mov
push
and
not
idiv
ja
inc
push
mov
sti
xchg
mov
je
popa
mov
icebp
lods
and
rcr
stos
ds
call
jecxz
dec
fcom
in
in
les
mov
repnz
and
pop
ret
arpl
call
dec
dec
retf
push
jg
stos
mov
cmp
jmp
pop
add
jle
inc
jno
mov
out
fistp
mov
sti
xchg
sub
sub
fstp
and
pop
mov
int3
ins
pop
ins
cmp
mov
cmp
loope
push
ror
pop
rcr
mov
loop
mov
or
fmulp
sub
or
mov
sbb
jae
ins
cmp
movups
xor
jge
repz
mov
pop
out
and
nop
add
push
push
fist
jo
mov
repnz
mov
scas
icebp
mov
jno
fstp
daa
pop
ss
lock
xor
bound
or
xor
mov
mov
and
add
into
xchg
rol
jecxz
fidiv
enter
xor
sbb
dec
sbb
push
xchg
xor
ret
push
shl
mov
cmp
xchg
push
popa
pusha
fucomp
jne
push
test
adc
xchg
fdivrp
dec
call
push
inc
jne
or
adc
and
shl
pop
add
stos
retf
inc
shr
(bad)
and
sbb
lods
test
cmp
pop
mov
test
pop
xchg
and
daa
lods
les
leave
cmp
and
call
call
push
fcmovb
(bad)
jnp
ffree
sub
test
dec
sub
nop
leave
test
movs
inc
adc
daa
cmc
call
sti
pushf
test
jnp
cmps
mov
arpl
dec
sahf
pop
inc
sub
or
dec
push
adc
mov
pop
push
mov
mov
fdiv
mov
pusha
cwde
push
in
cmp
sbb
dec
test
mov
paddsw
(bad)
aaa
mov
sub
mov
pushf
addr16
dec
push
cdq
jecxz
ins
dec
mov
jo
arpl
mov
call
mov
xchg
adc
ja
dec
mov
jl
dec
ja
jae
lahf
inc
and
ins
(bad)
xor
aas
pop
mov
fnstenv
dec
arpl
inc
adc
mov
cmp
push
mov
mov
xor
in
push
jl
in
sbb
push
and
xor
movs
mov
sar
sub
or
xchg
cmc
aas
mov
push
test
loopne
add
jl
sub
in
int3
xlat
pop
sub
cli
cs
lds
mov
mov
pop
das
dec
or
xor
in
lea
(bad)
xchg
ror
mov
xor
mov
inc
mov
jmp
dec
mov
push
xchg
cmp
push
xor
test
cmp
int3
jae
xchg
dec
in
lds
pop
cmc
adc
fisubr
jns
mov
adc
add
idiv
xor
and
clc
fld
cs
(bad)
js
ins
(bad)
jo
or
sub
(bad)
push
mov
idiv
mov
(bad)
out
je
pop
xor
das
sbb
cmp
imul
xlat
dec
in
pop
loope
aad
xchg
xlat
aam
mov
and
sub
popf
rol
mov
dec
enter
arpl
aas
cmp
into
and
(bad)
outs
or
or
lods
pop
aaa
sub
imul
in
mov
sub
popf
fmul
mov
adc
xor
jp
pop
gs
mov
xor
push
and
mov
jmp
xchg
jecxz
lods
cmps
inc
pushf
xor
jo
dec
cmp
push
pop
out
les
push
sbb
mov
fild
das
xor
xchg
or
rcl
inc
pop
stc
imul
ins
or
loope
and
sub
int
cdq
sahf
cli
shrd
cmp
out
and
out
pop
loopne
pop
push
out
lods
jl
fs
jno
mov
cmp
mov
jge
ss
mov
fstp
pop
pop
shl
xchg
call
js
cli
cmps
xchg
aas
pop
mov
js
sbb
xchg
push
mov
and
aaa
and
test
ins
test
lods
or
loope
xchg
sub
sbb
dec
or
cdq
fstp
push
cmp
sti
xor
jno
dec
retf
dec
call
adc
iret
jno
dec
and
outs
clc
xor
cmps
dec
mov
or
xchg
daa
add
mov
add
in
mov
lods
inc
test
xor
mov
xchg
jne
add
(bad)
daa
mov
inc
mov
xor
inc
pop
sub
mov
pushf
test
test
aad
enter
jp
jge
mov
pop
pop
dec
sti
(bad)
and
mov
int
jbe
mov
pop
push
adc
(bad)
jno
xchg
push
cmp
fdivr
out
add
or
xor
inc
cs
push
mov
bnd
(bad)
gs
mov
cs
push
pop
push
cli
inc
jno
sub
push
xor
pop
mov
enter
popa
push
idiv
push
or
sub
and
jmp
dec
(bad)
fiadd
aam
push
pop
mov
push
mov
retf
push
and
es
icebp
jns
les
(bad)
(bad)
sub
data16
dec
fs
push
arpl
rep
inc
xchg
mov
mov
movs
stos
es
pcmpeqb
pop
inc
cmp
enter
(bad)
jmp
pop
pushf
sbb
mov
mov
popf
fst
lods
test
stos
jp
mov
and
push
mov
into
inc
inc
xor
pop
leave
ins
test
rcr
arpl
sbb
pop
pop
fcmovne
lock
sub
ins
cmp
adc
outs
lea
jb
xor
int3
push
ret
repnz
pop
mov
int3
std
shl
or
imul
pop
sub
je
add
add
mov
movs
and
cmc
or
pop
xchg
push
push
jbe
pop
or
test
cmp
xchg
popa
test
cmp
sbb
aad
out
nop
mov
inc
pop
xchg
add
fisttp
fstp
cmp
or
pusha
and
pop
repnz
adc
mov
inc
mov
dec
sub
or
popa
mov
sbb
dec
ins
call
into
jmp
das
dec
not
and
sar
imul
sub
mov
sbb
xor
jb
es
sbb
adc
sbb
and
test
sar
mov
cmp
cmc
sub
dec
loopne
aam
push
imul
repnz
mov
cmp
mov
xchg
sahf
mov
mov
popa
mov
cwde
iret
xchg
and
inc
fisub
cs
xchg
test
lea
rcl
cwde
movs
jmp
mov
adc
popa
dec
and
hlt
pushf
xchg
sbb
or
add
add
push
xor
in
jnp
lock
jno
rcr
jns
test
sar
cmp
cmp
out
dec
adc
(bad)
mov
xchg
out
(bad)
sbb
and
push
push
pop
rcr
pop
dec
sbb
mov
out
add
out
fadd
mov
xchg
out
push
gs
fdiv
repnz
jb
push
clc
xor
jecxz
and
cmp
jo
test
and
push
shl
adc
in
int
(bad)
fimul
mov
enter
aam
fwait
pushf
mov
gs
les
aam
jp
test
add
sub
xor
inc
les
xchg
(bad)
jb
jp
in
icebp
ror
inc
jl
sbb
scas
stc
scas
push
ins
inc
dec
mov
mov
pop
mov
sbb
inc
pop
jl
retf
jmp
inc
jnp
xchg
int3
jno
push
leave
cmp
push
ss
xchg
mov
or
rcl
xor
ins
test
pop
sbb
std
popf
sbb
pop
dec
cwde
imul
je
repz
nop
lods
sbb
mov
xchg
int3
cmp
fist
rcr
xchg
mov
data16
inc
push
ss
gs
lock
stos
add
push
aas
out
push
in
popa
dec
fadd
push
mov
test
mov
das
popa
and
test
mov
stos
sbb
movq
inc
sbb
sub
test
in
ja
mov
out
repnz
test
js
push
fwait
mov
sbb
adc
inc
aas
or
in
lods
(bad)
xchg
jne
push
add
push
push
and
jge
pop
xchg
outs
or
or
in
out
dec
mov
push
dec
push
or
pop
fdivr
cmp
outs
mov
sub
(bad)
mov
sahf
dec
(bad)
call
in
or
mov
jbe
inc
mov
or
add
fwait
(bad)
fsub
adc
test
jno
loope
mov
adc
imul
jo
cmp
and
bound
inc
scas
xor
add
icebp
mov
test
imul
mov
mov
ins
sbb
add
pop
and
sub
cld
and
add
xchg
push
mov
add
sbb
jl
inc
loopne
xor
xor
adc
cmp
sbb
xor
cmp
imul
jnp
inc
cli
add
add
cmp
nop
jns
sub
xor
dec
sub
pop
dec
gs
cmp
(bad)
rol
xchg
inc
shl
mov
loope
sahf
shl
pusha
push
push
push
shr
pop
fs
cmp
inc
out
jmp
sbb
fs
in
stc
sar
push
sahf
adc
int
test
shl
adc
ret
inc
push
inc
dec
movs
ins
add
mov
les
test
dec
xchg
iret
inc
sub
or
mov
hlt
sbb
pop
movs
(bad)
lods
cmp
sub
jl
ret
and
and
cld
fild
stos
fnstenv
pop
or
test
out
test
xchg
stos
ror
in
jne
push
jo
das
enter
test
les
cmp
xor
sbb
xor
inc
leave
nop
dec
and
div
(bad)
fwait
cli
retf
test
xchg
push
pop
dec
mov
in
sub
xchg
add
xchg
xor
movs
sbb
movs
pop
and
mov
cmps
(bad)
push
fsubr
jmp
pop
jne
jno
cmp
mov
inc
mov
repz
xchg
ja
cdq
push
add
lock
and
fdiv
call
jmp
int3
pop
inc
add
xchg
fmul
add
pop
mov
cmp
scas
mov
loop
shl
(bad)
push
(bad)
lock
add
call
jae
or
jo
or
or
cmp
hlt
jb
mov
scas
dec
mov
adc
sbb
or
and
xchg
ret
pop
or
test
repz
std
cmps
in
push
pop
cld
mov
xchg
pop
mov
loope
cmp
icebp
mov
(bad)
pop
shl
pop
add
int
or
imul
movs
mov
imul
mov
aad
jnp
xchg
mov
or
int
sub
mov
push
fisubr
loopne
sbb
inc
in
test
das
mov
inc
in
arpl
jg
(bad)
xchg
push
push
jge
cli
xchg
test
arpl
add
in
pushf
mov
mov
cmps
inc
ins
lds
(bad)
(bad)
adc
inc
mov
(bad)
dec
jo
test
mul
pop
fs
pop
movs
(bad)
les
inc
test
push
scas
sub
mov
or
xchg
cmp
in
inc
xor
es
xor
lds
mov
push
shl
pop
imul
nop
xor
dec
cs
mov
iret
stos
jmp
dec
jg
mov
ins
(bad)
inc
inc
aam
ja
stos
gs
pop
retf
jnp
xchg
cmp
aad
xor
fnstsw
xchg
mov
dec
xchg
sub
sbb
iret
pop
xlat
cmps
xchg
leave
shr
pop
mov
outs
sar
sbb
out
xchg
sbb
jo
push
xor
adc
mov
push
dec
mov
cli
pop
cmp
adc
bound
push
cmp
std
jg
fld
and
div
push
jnp
sub
mov
push
mov
fsub
enter
mov
fsubp
sbb
sub
retf
and
mov
js
mov
retf
les
mov
push
push
mov
jno
es
jnp
inc
sbb
imul
pop
push
pop
push
dec
test
sbb
add
push
adc
xchg
inc
(bad)
arpl
repz
dec
xor
repz
jnp
cmp
sub
and
lds
xchg
xor
mov
test
mov
fisubr
jmp
hlt
(bad)
jmp
mov
dec
or
xor
cmp
int
loope
jne
sub
mov
je
mov
mov
(bad)
test
mov
nop
addr16
and
aas
sar
sti
add
lods
outs
pop
sbb
jae
jbe
ror
repnz
push
mov
dec
into
neg
mov
sub
sub
imul
stos
out
call
push
hlt
gs
in
cdq
cli
(bad)
inc
test
mov
ss
lds
daa
sbb
jb
mov
pop
inc
or
mov
xlat
cmps
push
int
dec
jmp
add
cdq
jp
stos
jmp
jne
test
ds
xor
cmp
jo
das
(bad)
arpl
dec
ins
and
(bad)
je
jns
cmp
mov
mov
into
xchg
stc
movs
xchg
ret
xlat
sub
ds
fild
and
js
retf
adc
ins
std
adc
jge
lahf
adc
inc
adc
arpl
cwde
jmp
mov
push
jp
jge
stc
jmp
pop
or
icebp
test
push
rol
pop
not
sub
add
sbb
lds
dec
dec
fcomp
mov
and
dec
jb
pop
fidivr
popa
mov
retf
stos
push
xchg
pop
in
mov
iret
xor
push
out
push
ret
push
lods
shl
bound
and
xchg
xchg
xor
or
ret
imul
scas
imul
sti
out
mov
pop
fidivr
cmc
add
aad
shl
xchg
jp
stc
loopne
jp
bound
cmp
daa
sub
pop
jno
mov
int
jl
test
lahf
push
cmps
sub
mov
into
pop
jg
xchg
dec
mov
(bad)
ins
jg
or
pop
lock
ret
pop
mov
add
daa
mov
sbb
dec
sub
xchg
add
adc
jle
in
sbb
add
xor
jmp
popf
jmp
shl
sbb
dec
dec
bound
jo
pop
mov
mov
sub
loopne
push
int3
push
enter
add
add
test
cmp
jmp
ret
call
push
ins
pop
loop
pop
jmp
inc
sbb
loop
les
sub
push
dec
xor
pop
jl
fwait
shl
xchg
ds
adc
inc
movs
jge
out
fsub
jnp
jo
add
loopne
fbld
into
mov
stc
inc
xlat
jb
lahf
inc
mov
stc
xor
mov
pushf
test
test
jl
or
retf
cmp
sbb
cs
aam
hlt
dec
pop
out
push
mov
sbb
push
shl
shr
fs
xor
outs
fisttp
bound
adc
push
call
aaa
and
fdivr
inc
int
push
inc
add
shl
pop
cmp
dec
or
xchg
movlps
xchg
mov
pusha
and
and
out
jo
loopne
out
js
sahf
mov
sub
dec
pop
xchg
(bad)
loopne
daa
and
int
push
xchg
je
sub
rdpmc
(bad)
cld
dec
mov
xor
mov
pop
mov
imul
push
jmp
and
repnz
push
and
lds
and
cmp
or
lods
jecxz
nop
push
sar
movs
ins
pop
rol
pop
sbb
cdq
sub
dec
mov
pop
mov
mov
stos
into
je
aad
push
sub
pop
mov
movs
es
imul
inc
retf
(bad)
sbb
or
dec
sti
or
stos
in
and
jnp
icebp
pop
outs
fwait
cmp
shl
lods
pop
aad
push
xchg
jmp
adc
xchg
add
sub
std
xor
sub
mov
stos
add
sub
adc
push
test
lahf
hlt
shl
retf
ins
adc
sbb
xor
icebp
cmp
test
test
add
rcr
(bad)
int
mov
jmp
mov
(bad)
pop
xchg
mov
nop
sbb
push
aas
jne
into
mov
mov
cmp
rol
sti
sahf
stos
ja
dec
mov
xor
fsubr
sti
nop
leave
cmc
mov
xchg
xchg
in
mov
lods
or
popa
xchg
popf
shl
mov
adc
adc
lock
dec
and
add
popf
xor
fsubr
mov
sbb
xchg
cdq
sub
pop
mov
mov
sbb
cwde
mov
retf
fnstsw
call
stos
cmps
std
shr
test
and
mov
in
mov
sahf
mov
(bad)
(bad)
das
inc
inc
ret
add
xor
pop
rol
outs
sti
test
jp
stos
xchg
pop
sub
dec
jle
aaa
jmp
xchg
ror
mov
cmp
les
and
jecxz
ins
jmp
xchg
inc
lahf
sub
mov
push
sub
add
neg
out
(bad)
dec
pusha
mov
cmp
aas
and
dec
pushf
sbb
xor
cmp
lods
test
or
je
inc
inc
xchg
int3
fcmove
rol
pop
mov
push
out
mov
sub
dec
arpl
lahf
(bad)
mov
xchg
rcl
pop
pusha
into
mov
cmp
dec
aaa
xchg
mov
xchg
inc
pop
ja
xchg
xor
mov
gs
xor
psubsb
loop
pop
scas
mov
pop
xchg
add
scas
jmp
pop
xor
fsub
cdq
fs
or
jecxz
or
sub
retf
iret
add
add
sbb
popa
dec
jecxz
btr
pop
test
xlat
into
js
cwde
xchg
jns
adc
sub
jb
or
sub
inc
es
inc
mov
mov
inc
test
xchg
test
test
aaa
jns
add
retf
push
stc
ins
cli
fisub
mov
fsub
xchg
mov
pushf
fs
aas
mov
scas
inc
aad
pop
stos
mov
fidivr
clc
jmp
fld
inc
daa
rcl
fldz
into
mov
imul
mov
cmc
enter
mov
jmp
and
mov
mov
fmul
jl
pop
cmp
in
sub
sti
arpl
adc
add
cmp
pop
stos
shl
and
pushf
imul
fcmovnbe
push
cmp
int
cmp
fiadd
in
add
setb
push
pop
push
mov
out
mov
mov
jne
cmps
cld
xchg
push
add
outs
xchg
mov
sbb
fwait
sbb
call
ins
es
xor
adc
inc
out
imul
push
and
std
(bad)
xchg
add
cmp
je
cmp
into
dec
stos
div
popf
push
ss
jle
outs
or
(bad)
push
iret
sbb
mov
cmp
in
cmp
aam
pop
ret
mov
xor
and
pop
in
scas
repnz
dec
add
test
cmc
movs
inc
movs
sahf
or
sbb
pop
test
inc
stos
xchg
pusha
cmp
cli
aas
push
jmp
dec
icebp
sbb
stos
sahf
xchg
jmp
xchg
shl
(bad)
leave
xchg
sti
sbb
mov
xchg
pop
pop
lea
jmp
lods
jle
mov
adc
pop
stos
ret
or
inc
mov
jg
lock
jl
pop
and
daa
adc
test
push
xchg
in
ret
cwde
mov
(bad)
xor
inc
xchg
push
je
push
or
add
add
pop
lods
out
fs
and
adc
cmp
jmp
mov
pop
xlat
sbb
pop
mov
and
sbb
jne
mov
daa
add
js
mov
mov
mov
xchg
adc
jno
enter
movs
jno
in
or
(bad)
xor
mov
inc
mov
or
mov
stos
adc
mov
dec
mov
dec
imul
pop
test
gs
mov
cmp
and
mov
inc
loopne
fucomp
jge
in
bound
jo
mov
add
adc
dec
push
add
mov
mov
cwde
in
adc
sahf
mov
push
sbb
pop
pop
sbb
das
call
ds
sub
je
adc
iret
and
iret
or
test
ret
adc
mov
sahf
push
sub
push
mov
aas
daa
loopne
xchg
sub
add
mov
test
imul
dec
push
mov
jmp
cmp
pop
or
fist
xchg
dec
ds
pop
outs
out
pop
lock
je
data16
call
pop
mov
add
(bad)
sbb
jo
or
test
ja
lock
sahf
call
lock
pop
mov
push
dec
cdq
cld
lds
movs
pop
dec
xchg
xor
mov
xchg
fstp
repnz
cmp
push
push
nop
xor
popf
sti
jb
test
popf
sti
adc
sbb
push
push
or
fld
retf
sbb
clc
xchg
(bad)
mov
mov
push
fdivr
sbb
js
mov
div
xchg
sub
pop
loopne
inc
std
add
dec
push
mov
into
mov
lock
and
and
loope
cmp
in
mov
fcomp
ja
dec
jg
cmp
lods
jo
xor
add
xchg
in
mov
push
adc
fs
fadd
and
popf
and
cdq
sub
xchg
popf
or
add
retf
or
shl
je
stos
pop
push
and
sbb
or
call
sub
les
jns
call
jge
ins
imul
xor
sbb
push
or
and
mov
xchg
leave
ror
clc
inc
and
inc
outs
rcr
push
mov
dec
stos
pop
xor
loope
out
push
test
pop
aas
adc
jge
mov
les
fcom
xchg
(bad)
sub
mov
push
xchg
jmp
inc
scas
xchg
sbb
repnz
(bad)
push
cmp
cdq
dec
push
into
fdivr
adc
sbb
lock
pop
aam
movs
push
mov
aad
and
pushf
iret
les
inc
adc
aaa
push
std
lahf
or
outs
mov
adc
inc
loop
pop
add
mov
jmp
xchg
dec
shr
xchg
pushf
lea
xor
mov
cdq
xor
popa
mov
lss
cmp
or
push
mov
sbb
xor
std
push
int3
outs
and
(bad)
repnz
jne
sub
sub
dec
inc
outs
pop
movs
push
mov
cwde
(bad)
push
xor
jae
movs
test
mov
es
inc
jb
je
loopne
adc
call
aad
push
pop
dec
sahf
or
pop
sbb
aas
ret
add
(bad)
sar
rcl
test
imul
or
or
xor
retf
jp
adc
js
(bad)
fist
das
pop
retf
retf
jmp
in
aad
push
fcom
addr16
jmp
movs
(bad)
or
jo
daa
or
and
inc
fwait
cmp
out
or
fisttp
js
pushf
add
inc
dec
inc
jmp
js
(bad)
push
push
jno
mov
xor
lock
fcom
lahf
repz
fwait
mov
pop
ja
sub
mov
jecxz
popa
mov
jge
xchg
cmp
xor
inc
ret
stc
pop
leave
push
dec
dec
daa
sub
les
pop
fs
cmp
int3
inc
cmc
cmps
out
ins
cmps
loopne
ret
mov
ins
mov
pushf
and
pop
push
xchg
cmp
stos
in
imul
and
stos
pop
inc
cld
push
add
jnp
pop
ins
push
imul
add
pop
arpl
sub
cmp
mov
rcr
test
add
retf
fisubr
xchg
jo
in
xchg
cs
jb
sub
ins
mov
iret
jo
mov
mov
push
test
into
mov
aad
cmp
pop
das
xor
(bad)
cli
inc
cmc
sbb
push
sbb
push
xor
lahf
pop
sbb
cmp
xchg
add
mov
daa
adc
in
test
sahf
imul
xchg
or
stos
aad
mov
jle
xlat
cdq
xor
jbe
sub
or
inc
addr16
dec
push
std
movs
mov
call
jbe
mov
fisubr
cdq
rcl
xor
mov
lods
pop
aaa
das
push
adc
xor
and
xor
js
xchg
imul
(bad)
mov
es
fbld
push
xchg
lea
push
and
repnz
jne
sub
jo
(bad)
dec
loope
stos
loopne
(bad)
push
sbb
cmc
inc
cdq
cs
inc
xchg
mov
mov
leave
in
inc
add
outs
xchg
and
jge
sub
pusha
inc
sahf
sbb
sub
cli
mov
add
mov
sub
adc
aas
retf
pop
mov
test
xor
(bad)
mov
pop
dec
ret
mov
or
lock
imul
cmps
xor
xor
outs
out
das
addr16
cdq
sub
scas
lock
cmp
into
ret
int
clc
lds
or
add
outs
cwde
dec
mov
retf
cmp
addr16
pop
and
mov
push
push
scas
pusha
cld
es
add
lods
bound
xor
or
ss
adc
movs
mov
cwde
test
cs
sub
(bad)
fild
add
(bad)
push
enter
daa
leave
in
(bad)
or
adc
pop
(bad)
loope
or
mov
movs
or
mov
mov
cmp
xchg
out
test
sbb
xchg
adc
sub
push
mov
mov
retf
adc
dec
iret
stc
mov
mov
adc
arpl
inc
pop
das
xor
sub
push
dec
push
inc
loop
xchg
out
out
mov
xor
cs
dec
lock
cmp
pop
xor
push
rcl
clc
(bad)
dec
ja
or
in
lods
mov
rcr
in
mov
in
popf
add
nop
xor
sbb
pop
push
arpl
sbb
rcl
scas
mov
cmp
xchg
sub
lock
ins
sub
das
ret
into
in
jle
inc
outs
into
mov
pop
iret
fimul
sub
mov
outs
jne
or
aaa
mov
scas
sar
imul
fwait
mov
adc
jnp
call
sub
test
pusha
sbb
cld
stos
into
or
and
stos
(bad)
leave
repnz
call
adc
psubusb
ins
or
aaa
in
cmp
or
cmps
push
dec
call
adc
xchg
or
ds
iret
mov
arpl
movs
xchg
dec
mov
push
push
(bad)
dec
cmp
xor
(bad)
jecxz
scas
mov
lods
cmc
test
jae
stc
lahf
sub
sar
aam
loop
mov
popa
sub
or
loop
and
mov
xor
in
adc
inc
xor
ficomp
xchg
int
jnp
popf
mov
mov
mov
push
jns
mov
in
push
push
jmp
cli
addps
lods
lods
call
rcr
inc
xchg
stos
or
inc
outs
xor
loopne
cmc
pop
mov
test
push
call
mov
adc
stos
jo
mov
out
cdq
and
addr16
fisttp
test
icebp
adc
adc
test
or
jmp
push
jle
inc
jmp
push
add
pop
xchg
in
push
jo
std
cdq
js
pop
mov
jle
das
push
scas
ret
push
jmp
pop
jmp
jnp
and
cmp
scas
icebp
and
repnz
repz
fs
cmp
shr
jbe
push
dec
clc
jecxz
gs
pop
aas
data16
pusha
jbe
rol
ror
(bad)
std
push
ss
pop
push
cs
mov
es
aad
jge
mov
dec
pop
push
mov
sahf
nop
ret
mov
and
fs
push
loop
jmp
in
in
xchg
in
sti
mov
popa
sar
mov
div
lods
pop
mov
sbb
mov
inc
jmp
inc
jb
outs
imul
xchg
mov
push
mov
scas
xchg
popa
jmp
std
dec
sar
dec
xchg
pop
stc
or
enter
xchg
(bad)
retf
mov
fidivr
cmp
jmp
jnp
loope
jns
inc
dec
popw
cld
gs
sub
out
aaa
dec
pop
ins
fwait
int
mov
push
push
xchg
mov
xchg
mov
ret
rol
dec
or
cmp
pop
xor
outs
cld
(bad)
jmp
mov
rol
mov
xchg
rcl
cmp
out
sar
sub
rcr
rcl
sub
sub
mov
mov
test
test
jmp
jb
inc
ins
pop
leave
pop
xor
cs
in
inc
call
mov
cmp
jmp
sti
mov
int3
sbb
adc
data16
(bad)
jnp
and
pop
call
push
xchg
in
out
cli
out
stc
cmp
add
mov
lahf
test
popa
stos
inc
mov
jl
loopne
jmp
std
imul
and
repz
dec
cmp
xchg
out
jne
fwait
(bad)
(bad)
(bad)
ins
inc
(bad)
push
sbb
ins
shl
aaa
pop
xchg
push
imul
in
bound
xchg
stc
fadd
mov
aad
push
setp
dec
ds
xchg
stc
xchg
ja
gs
xchg
sub
int3
push
add
and
push
cmp
pop
add
call
or
rol
movs
jp
mov
mov
xor
mov
xchg
sub
add
lahf
lock
cmp
test
int3
xor
stos
add
or
pop
xchg
rcl
dec
mov
lods
imul
scas
ret
dec
retf
cmps
ds
jle
sbb
add
(bad)
mov
movs
cmp
mov
jmp
xchg
cmps
jo
jp
and
fistp
sub
jns
cmp
sub
jae
(bad)
and
add
pop
jnp
rol
ss
xchg
repz
rcl
sbb
dec
jnp
dec
sbb
mov
add
cmp
hlt
in
pop
mov
xor
cdq
icebp
inc
cmp
(bad)
outs
ror
cmp
dec
sbb
ins
fs
sub
mov
cmp
or
stc
ror
or
ja
scas
push
add
push
ja
mov
test
mov
lds
xchg
rcl
retf
jnp
fwait
pop
cdq
(bad)
sar
inc
imul
sbb
dec
ja
sbb
inc
push
jb
xor
xchg
jecxz
cld
xchg
add
add
cli
das
and
jmp
inc
mov
idiv
pop
mov
pop
popa
jge
dec
cdq
jae
mov
mov
push
push
push
sbb
sbb
aas
mov
mov
nop
ja
mov
aaa
repnz
call
mov
movs
or
mov
aam
outs
xchg
(bad)
and
adc
mov
out
jle
mov
jb
push
xor
cmp
xor
sti
in
leave
sub
fist
mov
dec
cmp
int3
push
or
das
push
adc
sub
adc
jnp
push
and
add
mov
mov
jle
inc
or
or
(bad)
pushf
shl
in
xor
push
cld
mov
adc
dec
or
cli
adc
fisubr
(bad)
sub
inc
stos
pop
or
mov
arpl
out
jp
adc
dec
int3
pop
aas
adc
add
daa
repz
shl
adc
dec
push
push
fidivr
les
mov
push
aaa
push
jmp
imul
mov
imul
dec
enter
adc
xchg
lock
retf
stos
add
loope
pushf
pop
xor
cmp
push
fsub
pop
lea
sub
dec
add
cmp
retf
in
dec
mov
and
imul
adc
fsubr
or
sbb
or
or
enter
mov
sar
movs
push
shl
rcl
push
into
jne
retf
mov
and
(bad)
(bad)
mov
push
jl
inc
call
loopne
loope
test
push
ret
jb
inc
jmp
or
mov
bound
inc
retf
jmp
pop
aas
or
push
jae
cwde
inc
cmps
mov
fwait
(bad)
out
add
xchg
pop
sub
pop
push
das
xlat
pop
pop
cmps
inc
push
(bad)
retf
stc
xchg
mov
push
mov
mov
pop
pusha
(bad)
in
loop
outs
out
pop
jcxz
fsubr
imul
popa
test
cmp
inc
cs
jmp
pop
inc
jae
cld
and
lods
jg
inc
lea
jo
push
out
adc
inc
xchg
ret
outs
out
and
and
fwait
in
push
jae
sar
loopne
mov
jb
mov
(bad)
pop
or
xor
(bad)
cld
jmp
push
mov
and
mov
pop
fbld
fcomp
add
or
cmps
mov
dec
mov
clc
xor
cmc
mov
call
dec
mov
mov
shr
retf
add
adc
jo
in
test
inc
and
int
mov
pop
rcl
sti
in
fcomp
push
test
mov
fs
in
adc
lock
fist
shr
fs
fidivr
inc
push
push
jns
pop
xchg
push
add
psrad
in
push
arpl
movs
xor
cmp
data16
ins
mov
jecxz
imul
aad
fsub
loope
inc
cli
sbb
neg
dec
es
jle
jmp
push
iret
test
movs
xchg
ret
pop
push
sub
xor
shl
out
cwde
data16
call
out
pop
pop
js
jmp
test
jae
sbb
mov
lea
out
pop
mov
call
cmp
inc
aad
jbe
into
ror
into
mov
mov
sub
scas
push
daa
inc
mov
jp
repnz
stos
add
push
rcl
cwde
pop
loop
outs
int3
ret
adc
xchg
jle
in
test
rep
xchg
xchg
rol
into
cwde
fwait
fs
inc
jg
pushf
xlat
push
(bad)
and
rol
cmp
jmp
ret
loope
push
jb
push
mov
test
mov
mov
sbb
aad
sub
mov
push
scas
sbb
test
jo
and
test
pop
cmp
in
gs
pushf
cmp
dec
sti
outs
addr16
sub
jns
push
dec
sub
xor
in
cmp
xchg
jne
lods
shr
mov
ins
mov
mov
ret
ins
into
hlt
sar
mov
lock
(bad)
sbb
fdivp
adc
jo
push
xchg
mov
or
iret
sbb
adc
mov
xchg
sub
jmp
jne
push
mov
add
inc
add
stos
mov
xchg
cmc
mov
fwait
repz
inc
push
push
cmps
dec
sahf
call
pop
stc
xor
les
popf
and
sub
add
add
gs
inc
neg
ret
adc
xchg
inc
xor
add
int3
in
rcr
ret
fst
in
sub
jle
mul
mov
data16
and
shr
sbb
adc
push
aas
hlt
lock
sbb
adc
scas
test
add
add
xchg
in
mov
bound
or
aam
adc
in
jbe
add
mov
adc
xor
test
pushf
(bad)
jnp
imul
jbe
cmp
lock
retf
ins
inc
sbb
rol
cwde
ret
lods
cmc
clc
sub
inc
out
sti
push
popf
jmp
and
loopne
dec
inc
xor
(bad)
int3
imul
in
clc
sahf
je
inc
je
lods
dec
das
int3
or
mov
pop
call
cmps
pop
add
pop
add
jno
mov
shl
in
jecxz
ss
sub
xchg
movs
dec
mov
add
mov
fidivr
ins
rcl
(bad)
je
or
xor
imul
lods
shr
addr16
xor
cmp
stos
sbb
jg
dec
mov
dec
fidiv
es
xor
cmp
repz
adc
enter
jbe
pushf
jne
jle
cmp
or
ror
cs
out
int
xor
xchg
cdq
add
xchg
push
mov
jb
cmp
movs
pushf
test
popa
out
adc
cmovg
lods
int3
pop
(bad)
call
out
(bad)
mov
jns
jecxz
scas
xor
fs
jg
pop
dec
fnsave
xchg
mov
sar
mov
js
adc
mov
and
xchg
push
fld
lahf
in
cmps
xor
xor
jmp
sub
loope
lock
jp
pop
push
pop
iret
add
mov
shl
test
push
shr
push
jne
out
dec
in
pop
mov
(bad)
push
aam
shl
mov
pop
jle
movs
pop
ss
dec
dec
sti
sub
cmps
push
jl
inc
data16
mov
mov
and
repnz
jecxz
lahf
(bad)
dec
hlt
lock
fcomp
add
or
mov
into
jle
push
les
cs
addr16
add
mov
sbb
psubusw
inc
push
or
ret
jp
dec
and
popf
cmps
fwait
pop
pop
daa
je
xor
xchg
adc
xchg
cld
cmc
add
lahf
mov
pop
mov
pop
dec
bound
loopne
ds
stc
mov
test
mov
ss
loope
xor
(bad)
xchg
mov
sub
xlat
lds
lock
mov
sar
fsubr
cli
push
mov
inc
pop
shr
sbb
jae
cmps
hlt
cmps
or
sbb
xor
cs
in
dec
int3
js
push
jle
jmp
scas
mov
aam
fdivr
sub
call
inc
iret
sub
dec
gs
sbb
add
and
addr16
push
adc
inc
jl
cmc
loopne
call
jae
and
jp
(bad)
out
mov
mov
or
and
and
(bad)
jmp
inc
mov
pop
add
mov
mov
ja
scas
pop
add
mov
adc
stos
push
dec
imul
mov
jae
sbb
lea
inc
push
sub
es
xor
lds
mov
ins
cld
or
dec
jle
jne
mov
push
or
cwde
adc
inc
pop
jno
adc
cmp
jp
xchg
cli
mov
(bad)
push
and
popa
sub
loop
fsubr
cld
push
cmc
clc
inc
add
pop
aam
scas
aad
je
fs
mov
dec
mov
adc
jmp
sub
sbb
fwait
inc
inc
add
bound
xlat
fisub
in
push
imul
or
out
mov
dec
xchg
imul
mov
fs
and
dec
into
lods
jno
xchg
inc
repz
xor
pop
mov
mov
repz
or
mov
pop
mov
cdq
sbb
int3
push
imul
addr16
fld
test
cmp
push
out
dec
lods
mov
cwde
jbe
xchg
sub
fisubr
iret
mov
iret
xchg
adc
sub
xchg
or
mov
mov
jbe
push
sbb
xchg
xchg
cmp
push
(bad)
fwait
shr
(bad)
mov
jmp
ins
and
stos
movs
adc
test
imul
adc
adc
push
cwde
popa
pop
(bad)
jl
push
ret
mov
shr
push
jo
loope
sub
xlat
pop
pop
mov
pop
inc
cmps
(bad)
adc
and
retf
ror
dec
and
mov
sbb
iret
mov
ins
adc
cld
popa
mov
stc
fisttp
pop
dec
sbb
sar
stc
ss
cmp
int3
jmp
jle
cmp
arpl
in
jg
loop
out
sub
repnz
call
inc
cli
cmp
dec
arpl
add
and
test
adc
loopne
mov
pushf
les
fs
out
fdivr
daa
cmp
xchg
pop
inc
gs
inc
enter
dec
and
(bad)
stos
jo
mov
das
retf
outs
gs
and
inc
(bad)
out
add
pop
push
ret
and
aas
les
ror
add
jnp
cmps
out
mov
loope
aas
gs
cmp
push
scas
ja
adc
ret
and
je
inc
pop
test
jecxz
shl
(bad)
sbb
pusha
movs
inc
push
xor
pushf
sub
xlat
pushf
sbb
popa
(bad)
lds
and
std
mov
sbb
push
pop
(bad)
(bad)
jecxz
push
rcl
mov
jmp
adc
out
scas
xchg
adc
mov
dec
push
mov
pusha
outs
push
mov
add
icebp
rcl
adc
mov
inc
mov
sub
xor
xor
gs
add
outs
cwde
xchg
mov
mov
jmp
adc
add
ret
mov
mov
les
push
adc
add
mov
inc
scas
test
jmp
pop
or
cmp
mov
leave
jne
xchg
sti
xor
rol
mov
cwde
or
cmc
test
cmp
int3
cld
push
jae
inc
xchg
mov
cmc
push
xor
fstp
into
(bad)
adc
sbb
cmc
pop
pop
inc
mov
or
out
jns
mov
test
pop
mov
ss
xor
clc
sub
sbb
add
fild
mov
mov
ret
push
out
inc
push
jns
int3
jbe
dec
xchg
scas
xchg
cwde
ret
or
in
inc
fist
arpl
loope
or
in
adc
rol
dec
gs
mov
inc
fst
pop
or
test
loope
sbb
lds
mov
repnz
shr
sbb
es
push
xor
lods
(bad)
je
inc
xor
xor
sbb
movs
stos
ror
fsub
icebp
data16
pop
sbb
outs
out
add
sbb
adc
fist
mov
ins
push
lea
adc
es
cmp
les
pop
xor
shr
imul
push
mov
movs
gs
jl
cmp
mov
sub
sahf
popa
mov
test
adc
add
outs
sub
sub
inc
int3
dec
xchg
mov
movs
movzx
mov
mov
jmp
adc
int
mov
mov
xlat
lods
leave
iret
imul
(bad)
sbb
jmp
pop
ins
clc
(bad)
ror
js
jmp
in
add
sub
and
popf
repz
sbb
retf
add
pop
sub
cmps
enter
cdq
fadd
ins
cmps
retf
inc
lock
and
icebp
hlt
cwde
enter
mov
dec
aad
ja
jge
out
clc
mov
pop
push
sub
aad
test
xor
sub
sub
or
inc
call
clc
cmp
pop
mov
cmps
inc
sub
sub
cmp
lahf
jle
mov
push
inc
in
test
jecxz
xchg
imul
into
mov
mov
cmps
mov
mov
mov
dec
inc
add
mov
movs
test
mov
lea
test
cmp
dec
loop
sub
mov
cdq
iret
xor
push
cmp
cs
jle
xchg
push
(bad)
add
sub
(bad)
jge
mov
mov
jb
dec
or
rol
bound
push
test
ret
and
bswap
adc
retf
mov
or
push
ret
cmp
dec
leave
sub
mov
mov
jmp
mov
es
xor
dec
out
sbb
jle
jo
enter
cmp
out
shr
add
cmc
(bad)
push
cs
push
xchg
and
sub
aas
sbb
fnstenv
add
mov
movs
(bad)
dec
call
dec
jge
(bad)
cmp
je
das
jmp
and
test
pop
dec
ins
or
test
and
fbld
sbb
arpl
push
not
mov
mov
cmp
cmp
scas
jle
xor
mov
mov
psadbw
cld
sub
clc
ds
div
mov
dec
outs
cmp
data16
fnstcw
call
push
xor
or
and
jmp
std
xor
cwde
out
leave
push
imul
pop
cmp
sar
mov
imul
xchg
ja
and
scas
mov
sub
mov
(bad)
fdivr
fdivr
and
fbstp
daa
sub
sbb
retf
push
dec
jl
add
lock
mov
(bad)
test
add
or
dec
cld
imul
jmp
loope
and
sbb
scas
aad
imul
and
icebp
mov
cmps
mov
out
in
es
stos
push
mov
xor
cwde
pop
sbb
jne
xchg
jecxz
pop
pop
push
cli
mov
sbb
stos
cmp
stc
stos
mov
mov
lock
sbb
sti
mov
add
dec
sub
repz
jno
or
mov
enter
push
inc
sbb
adc
xor
gs
(bad)
add
ja
xchg
push
xor
adc
jecxz
and
fadd
pop
jns
cmp
pop
imul
int3
retf
sahf
add
stos
and
add
jmp
cmp
movs
xor
jg
imul
mov
popa
inc
mov
int3
and
xor
adc
retf
mov
mov
or
data16
add
inc
pusha
push
mov
pop
iret
ror
cmp
imul
ret
push
data16
test
pop
dec
mov
lds
sbb
es
sbb
push
xor
loop
push
divps
xchg
inc
cwde
dec
push
mov
in
jb
icebp
mov
into
out
les
lods
(bad)
mov
repz
cmp
sahf
mov
(bad)
hlt
and
shr
scas
xchg
dec
mov
cmp
jne
mov
das
ss
aam
adc
shl
mov
popf
push
lods
xor
mov
lds
cmc
inc
pop
ret
fsub
ret
mov
mov
lds
dec
sub
lods
xor
and
out
xor
mov
push
imul
cli
cwde
ret
cwde
add
mov
mov
push
aam
inc
mov
clc
movs
xor
cmp
addr16
push
fmul
xchg
xor
sbb
jecxz
sub
pop
daa
out
adc
scas
add
sub
jle
data16
jg
inc
mov
mov
fist
sub
adc
(bad)
shr
sbb
or
mov
int
ja
(bad)
pop
fidiv
or
add
xor
add
shl
add
mul
add
jae
mov
rcr
ss
cmps
cs
pop
pop
fild
mov
call
inc
int3
call
or
pushf
rcl
icebp
mov
dec
push
pop
mov
push
int
inc
cli
mov
nop
or
loop
lahf
sar
add
inc
mov
jns
imul
stos
mov
retf
jl
int3
cmc
xchg
adc
imul
xor
sub
cld
mov
mov
push
and
mov
xchg
rcr
out
stos
das
ins
sbb
inc
clc
mov
test
dec
or
xchg
cmp
jle
cmp
dec
ins
daa
ret
xor
rcr
push
dec
retf
sub
rcl
inc
loopne
mov
push
adc
jge
pushf
test
mov
add
dec
or
(bad)
(bad)
xor
(bad)
retf
stos
mov
mov
ffreep
xlat
or
movs
cdq
arpl
inc
xor
lds
xor
pusha
mov
or
fstp
ins
xchg
stos
test
mov
es
dec
sbb
cmc
mov
mov
push
ficomp
push
cmp
mov
hlt
jge
sti
dec
push
mov
push
aaa
pop
mov
arpl
or
mov
adc
rcl
xlat
xor
cs
ficom
aam
or
mov
rsqrtps
add
out
jge
push
cmp
xlat
jmp
dec
jmp
and
ret
pop
mov
rcl
push
nop
repz
xor
sub
outs
sbb
mov
mov
lds
movs
clc
push
xchg
imul
inc
cs
shl
lods
inc
cli
sub
sub
hlt
clc
mov
fcmovbe
(bad)
in
sbb
aam
ja
sbb
cmps
(bad)
adc
movs
dec
mov
stc
fmul
lods
mov
sub
jle
jge
cmp
jl
adc
xor
mov
arpl
getsec
std
ror
cld
pop
loope
arpl
cmp
push
inc
cmps
mov
(bad)
scas
sbb
sub
mov
and
movs
je
inc
loope
lock
xchg
mul
sub
retf
lock
pushf
mov
test
lods
es
mov
retf
or
test
mov
push
dec
mov
hlt
dec
mov
sub
add
pop
mov
pop
xchg
repnz
and
in
push
or
cmp
or
mov
into
cwde
jno
push
and
mov
cwde
adc
push
in
jl
or
xor
aam
sahf
jp
rcl
jnp
and
cmp
retf
ret
cmp
xchg
inc
pop
cmc
addr16
sahf
sub
in
pop
in
sub
pop
mov
sahf
mov
les
(bad)
rcr
mov
call
adc
arpl
push
call
mov
sub
ja
pop
pop
mov
int3
jbe
jg
out
imul
ds
pop
in
retf
push
loop
and
scas
int
jnp
jo
jmp
pop
gs
and
(bad)
xlat
and
ret
bound
pop
lahf
in
rcr
fucomip
add
arpl
in
sub
mov
outs
imul
aam
xchg
fbld
mov
adc
rcl
pop
add
out
jge
inc
cmps
adc
aas
mov
fistp
xor
xchg
pop
jno
jbe
sti
out
rol
jmp
shl
push
mov
push
les
add
xchg
pop
mov
add
cmps
inc
int3
out
pushf
push
sbb
sbb
cmp
(bad)
mov
addr16
mov
adc
jg
sti
cdq
dec
enter
cld
rcl
sub
jle
push
inc
cdq
push
dec
xor
inc
cmp
dec
mov
push
sahf
rcl
ds
dec
repz
fst
(bad)
dec
push
test
push
sahf
inc
push
xchg
sbb
shl
adc
dec
pop
cmc
mul
or
mov
fmul
dec
mov
btr
or
inc
inc
cmp
sbb
mov
xor
in
(bad)
rol
adc
mov
adc
mov
pop
lahf
shl
jp
lods
je
les
sub
xchg
mov
adc
cli
shr
loop
cmp
dec
dec
mov
(bad)
inc
ret
stos
inc
rol
cmp
or
cmp
ja
(bad)
or
dec
adc
or
add
sub
mov
cdq
mov
repz
out
dec
sub
popa
or
out
cwde
xchg
hlt
mov
leave
or
sbb
and
mov
daa
mov
xor
push
sbb
sbb
rcr
mov
inc
stc
mov
pop
jg
outs
mov
cld
or
cmps
rol
inc
scas
movs
inc
pop
fisubr
retf
or
loope
pop
adc
aam
pop
add
sub
cdq
push
popf
out
je
mov
aaa
lods
into
test
or
and
push
push
cmp
or
arpl
sahf
pop
dec
sbb
jmp
xor
pusha
xchg
(bad)
xor
jecxz
dec
int3
je
shr
dec
in
mov
daa
cld
loope
clc
daa
jecxz
jo
push
and
mov
fdiv
lods
faddp
mov
outs
movs
popf
push
push
jbe
jecxz
aam
psrlw
inc
mov
(bad)
test
jb
jae
iret
add
ins
(bad)
and
adc
mov
mov
sub
sub
jo
jb
repnz
hlt
mov
sub
add
inc
cs
and
cmp
pop
mov
lea
outs
pusha
out
fisub
out
adc
mov
hlt
call
out
xchg
aad
push
sti
or
ret
mov
repnz
sar
add
xor
push
push
adc
ret
outs
(bad)
leave
push
jmp
sbb
nop
fcom
rol
aas
mov
(bad)
hlt
mov
(bad)
les
dec
fild
jns
sub
test
cmps
or
push
stos
ja
and
cmps
mov
and
xor
mov
data16
cmp
mov
and
cmps
lods
mov
retf
push
jl
shl
adc
out
test
stc
push
lods
xlat
cmp
fsub
dec
(bad)
adc
xchg
scas
mov
ins
or
push
mov
fsubr
jle
movs
out
repz
retf
jg
xor
xchg
and
cmp
mov
ins
push
js
xadd
dec
push
data16
fisttp
jecxz
cdq
mov
cmc
pusha
mov
stc
jns
(bad)
aam
call
or
inc
bound
int
or
arpl
xchg
sahf
jecxz
das
lea
jne
mov
mov
mov
dec
add
clc
add
jb
xor
bound
jne
cmp
icebp
loope
ss
repz
push
call
rol
mov
push
cmp
retf
xor
or
pop
ins
cmc
addr16
add
mov
cmp
mov
sbb
pusha
(bad)
fs
jae
outs
xchg
jmp
in
pop
js
scas
lock
call
ror
push
inc
ja
inc
out
ins
enter
sbb
jg
mov
mov
cmp
in
sub
mov
test
cmc
fsubr
mov
jle
mov
or
xchg
xor
dec
add
fcomp
or
mov
push
aam
aad
mov
sub
movs
fisubr
inc
dec
mov
pop
jp
repz
jo
inc
scas
outs
pusha
mov
adc
fwait
mov
cmp
pop
sbb
mov
pop
repnz
fwait
cmps
cmp
cdq
repnz
iret
mov
xchg
iret
push
stc
outs
or
out
jb
int3
aas
sub
or
lods
inc
xchg
push
mov
mov
pop
ja
mov
push
jns
dec
lahf
cdq
fistp
sti
mov
mov
mov
mov
or
lock
mov
xor
jp
mov
in
cwde
ret
mov
outs
aas
push
in
adc
add
inc
xor
pusha
call
aas
dec
jno
xor
in
in
sbb
or
loopne
jge
inc
scas
xchg
ds
jp
xor
inc
mov
shr
pushf
out
loopne
imul
jmp
shl
inc
(bad)
not
mov
push
popf
stos
sbb
and
call
enter
push
mov
xchg
mov
xchg
popf
mov
sbb
xchg
in
dec
inc
cmp
test
mov
adc
cmp
pop
mov
fist
inc
in
ss
pop
jp
jae
cmc
dec
push
cmp
fisub
inc
aaa
pop
test
jp
popa
adc
mov
adc
jl
(bad)
fist
jp
xlat
jp
(bad)
dec
aam
cmps
stos
push
push
pop
or
aas
mov
adc
int
scas
jo
out
in
int
test
mov
pop
xor
pop
leave
cmp
cmp
xor
jle
rcr
es
inc
or
out
cs
pop
mov
inc
mov
jecxz
xor
(bad)
cdq
push
push
mov
std
cmp
mov
push
xor
es
dec
inc
or
clc
xchg
mov
dec
inc
jmp
not
(bad)
(bad)
fsub
mov
push
popf
dec
add
cld
cmc
inc
test
cmp
popa
push
push
adc
ret
fcom
repnz
inc
mov
cmovbe
or
adc
repz
std
push
xchg
(bad)
js
add
das
fistp
ret
adc
sbb
mov
icebp
je
push
ja
pop
rol
repnz
call
mov
dec
mov
jno
fist
les
retf
inc
cli
(bad)
jo
fstp
fs
or
push
inc
xchg
jo
addr16
xchg
pop
ins
inc
repz
mov
jo
das
cld
outs
repnz
adc
add
adc
jecxz
iret
into
cmp
leave
loopne
xor
pop
dec
pop
jecxz
and
popf
sbb
cmp
mov
movups
sbb
pop
push
rcl
(bad)
scas
adc
shr
sub
(bad)
xchg
lock
das
pop
adc
push
inc
data16
xor
add
(bad)
dec
lds
mov
push
rcr
add
movs
adc
push
mov
mov
pusha
inc
add
imul
pop
lea
mov
cld
mov
ret
mov
inc
push
add
push
inc
xor
mov
jae
pop
in
and
push
jns
outs
int
mov
call
repnz
or
jo
ds
and
cmp
mov
repnz
adc
dec
das
push
xchg
test
xchg
daa
ins
out
icebp
fistp
sub
xlat
add
out
inc
mov
xor
push
sbb
or
push
scas
xor
(bad)
adc
inc
std
xor
push
aaa
inc
test
je
jne
std
stos
ins
test
cmp
mov
imul
sub
cdq
ficom
jp
push
mov
repz
std
scas
stos
scas
xchg
push
in
int
mov
xor
mov
leave
jg
add
cmc
loop
int3
sub
fcomp
out
jne
(bad)
and
daa
inc
outs
jle
cmp
dec
jno
ror
jmp
test
loop
jbe
jg
add
push
je
xor
out
and
enter
pop
jmp
dec
test
aas
cmps
fdivr
jmp
mov
shr
popa
push
shl
imul
pop
retf
sbb
dec
pop
sete
loope
js
mov
pop
sbb
jg
push
and
iret
pop
adc
lods
loopne
adc
xor
inc
test
loop
mov
and
arpl
mov
scas
fmul
pop
and
lods
mov
mov
push
shl
sub
mov
mov
(bad)
cmc
mov
inc
sti
sti
and
xor
dec
add
xor
mov
in
push
imul
lods
(bad)
mov
or
out
dec
lahf
iret
rcl
ror
scas
jbe
inc
sub
inc
xchg
or
pop
leave
sbb
add
test
dec
repz
cs
and
mov
cwde
hlt
lahf
inc
mov
xchg
fild
pushf
ins
mov
ss
mov
fcmovnu
inc
add
pop
sub
xchg
es
call
cs
fadd
inc
mov
mov
xchg
movs
bound
pop
xchg
adc
push
mov
push
out
mov
mov
out
push
and
ret
xor
fwait
and
mov
div
pop
out
add
inc
sahf
punpcklwd
sbb
pop
add
retf
mov
jno
aaa
dec
mov
add
or
pop
xor
cmp
hlt
ss
push
add
sbb
xor
inc
aad
loope
mov
mov
add
sub
jmp
xor
rcr
addr16
repnz
popf
aam
sub
dec
imul
out
adc
mov
imul
pushfw
stos
dec
dec
or
adc
rcr
push
adc
push
imul
or
push
mov
sbb
fs
push
mov
hlt
das
push
movs
call
jbe
pop
push
add
push
jge
sbb
jno
sub
pusha
sub
dec
push
xchg
js
xor
shl
inc
fidiv
xor
sahf
and
cs
jae
add
jp
(bad)
pop
dec
push
cmc
mov
jae
mov
mov
mov
mov
jne
mov
aas
pop
and
imul
adc
and
test
pop
dec
pop
or
jb
jl
je
xor
scas
xchg
sbb
adc
sub
inc
add
mov
in
mov
enter
and
ffree
cmp
mov
and
push
leave
push
in
scas
cmp
imul
lods
xor
xchg
cmp
fdivp
push
mov
pop
inc
loope
jg
and
out
out
mov
cmp
dec
mov
in
ins
or
push
lods
in
cmp
int3
cdq
enter
and
jmp
jne
fistp
adc
and
xchg
rcl
pop
popa
fs
gs
mov
or
stc
xor
sbb
ins
out
cld
push
push
fwait
push
pop
lods
repz
cld
fild
popf
cld
movs
test
scas
xor
push
pop
retf
iret
in
sbb
jp
or
mov
leave
xlat
les
jge
scas
mov
loop
mov
fidiv
mov
sbb
imul
in
lock
xchg
sub
pop
jmp
ins
lea
and
mov
daa
cwde
das
inc
movs
inc
into
and
jge
mov
push
out
jnp
and
movs
dec
adc
daa
push
test
jge
cwde
sub
je
xlat
das
and
inc
arpl
imul
push
test
sub
shl
jmp
pop
js
call
or
push
aad
ja
xchg
dec
adc
retf
xchg
and
adc
sbb
xor
retf
jae
jg
sbb
outs
fadd
inc
call
inc
mov
je
retf
mov
cwde
mov
mov
(bad)
cmp
sub
add
sti
or
into
mov
jp
cmp
sbb
test
jge
xchg
mov
loop
dec
and
(bad)
int3
repz
cmps
ficom
add
push
mov
xchg
shl
(bad)
sbb
pop
xor
lds
lods
cmps
pop
out
add
adc
sar
push
jae
dec
xor
dec
les
push
bound
sub
or
xor
pop
scas
retf
or
(bad)
sub
mov
jnp
pop
mov
sbb
das
pop
(bad)
int
popf
mov
jmp
jbe
(bad)
mov
(bad)
mov
loopne
call
dec
gs
dec
xor
sbb
dec
sbb
scas
jne
jmp
cmp
ins
mov
sub
fld
add
add
xchg
push
stos
sub
daa
dec
pop
pop
out
movs
popf
jg
push
mov
test
mov
adc
bswap
leave
mov
inc
xchg
in
dec
jbe
inc
or
jp
mov
jb
and
lea
dec
das
xor
cmp
ja
pop
dec
pop
cld
test
and
stc
sbb
scas
test
outs
out
inc
mov
adc
or
cmp
adc
mov
dec
(bad)
and
inc
mov
inc
inc
mov
pop
out
mov
cli
push
push
jmp
inc
mov
ins
sbb
frstor
lods
pop
cld
inc
stos
dec
mov
mov
idiv
nop
adc
daa
in
ja
inc
cdq
(bad)
mov
xor
xor
pop
int3
cmp
or
cmp
mov
pop
or
cmp
fstp
into
xchg
(bad)
jno
sbb
repz
xchg
out
jmp
add
(bad)
mov
push
mov
inc
jnp
adc
sub
cwde
or
js
dec
jge
int
cmp
aaa
call
scas
sub
pop
mov
xchg
loopne
fs
ins
mov
fisub
cs
and
adc
sahf
fbstp
cmps
push
pop
sub
or
sbb
and
pop
imul
std
ficomp
cwde
mov
fldcw
inc
jecxz
jnp
sub
daa
add
jl
dec
jg
lods
hlt
mov
iret
jns
cmp
fstp
sbb
mov
(bad)
sub
push
cmp
jmp
sub
imul
mov
popf
inc
jo
add
adc
and
jge
sbb
dec
push
int
pop
add
les
adc
nop
inc
test
ins
or
div
mov
push
push
xchg
push
xchg
ror
cmp
sti
fst
sbb
in
pop
aad
sbb
push
and
jo
imul
adc
aaa
jno
push
test
jecxz
jl
out
and
iret
aaa
loop
and
les
mov
push
sbb
fs
mov
es
retf
dec
jecxz
movs
sub
into
stc
sbb
or
je
test
and
cmp
sbb
inc
cmp
dec
or
shr
test
dec
retf
jne
mov
jge
push
jecxz
push
push
xchg
(bad)
enter
test
aas
sahf
inc
and
push
and
push
mov
jle
add
in
shl
cmp
test
stos
retf
test
fwait
inc
sbb
mov
push
fs
inc
pop
cmp
ret
ins
(bad)
hlt
clc
out
xor
push
jp
lea
je
cmc
push
lock
pusha
loopne
lods
cdq
sub
cmp
or
mov
pushf
(bad)
out
mov
adc
dec
imul
dec
fst
sbb
sub
mov
fisub
xacquire
pop
push
das
dec
jne
stc
stos
add
call
je
and
and
scas
or
je
xchg
ins
cmp
jl
aas
mov
push
push
mov
enter
or
pop
dec
add
pop
aam
(bad)
scas
fisubr
lahf
ss
ins
cmp
pop
fild
das
or
lods
mov
sbb
cmp
jp
push
cs
movs
scas
out
test
cs
add
xor
arpl
in
push
mov
add
push
enter
lock
pop
adc
mov
je
data16
or
in
fldenv
mul
(bad)
in
cmp
es
lahf
ins
mov
inc
xchg
stos
test
les
mov
stc
sub
cmps
dec
xchg
ja
pop
jge
mov
inc
push
push
pop
mov
jo
mov
ret
fnsave
rcl
cwde
dec
push
xlat
cmc
adc
das
inc
xlat
push
das
out
(bad)
jge
leave
inc
fldcw
and
mov
add
xchg
push
neg
push
jp
xchg
(bad)
cli
aam
movs
push
add
add
push
xor
sbb
lods
jle
(bad)
jo
inc
pop
xor
mov
sahf
mov
mov
or
sbb
xchg
out
(bad)
in
xlat
push
adc
lahf
mov
stos
test
in
adc
js
popf
arpl
sub
lea
xchg
loop
retf
or
mov
pusha
repz
fwait
lods
cmp
push
cmp
ficom
imul
mov
mov
lods
fcmovnb
setb
inc
enter
push
enter
sti
fadd
inc
idiv
test
out
xor
call
ficom
ja
jecxz
add
pushf
in
mov
mov
loope
jbe
loop
fs
sub
jmp
mov
adc
xor
scas
mov
pop
ret
mov
xor
add
inc
mov
mov
in
mov
and
gs
fild
(bad)
movs
(bad)
cmp
bound
sbb
xor
scas
lea
pushf
jg
mov
xchg
test
repnz
jb
repz
ret
xchg
lods
push
sbb
push
dec
clc
out
mov
cmp
push
fs
mov
xchg
in
cmps
sbb
inc
add
sbb
test
add
pushf
cmp
mov
mov
add
mov
lods
xchg
arpl
stc
jmp
call
dec
push
jl
xchg
lahf
dec
imul
in
mov
push
dec
cmp
xor
adc
and
pop
jmp
dec
sbb
jle
adc
loope
in
jae
scas
add
enter
cmps
sbb
push
pop
push
sub
nop
jle
mov
dec
xor
sub
dec
mov
xchg
and
dec
adc
adc
mov
in
stos
movs
fist
dec
call
or
hlt
cmc
adc
xor
jbe
sub
retf
or
sti
add
into
inc
sub
sbb
mov
jle
aad
xchg
jp
cmps
cmc
movs
aaa
jbe
sbb
push
push
xchg
enter
jmp
sbb
add
and
leave
movs
ss
inc
call
inc
stos
out
loop
sbb
xlat
pop
les
add
out
mov
jnp
lods
fadd
lds
pop
pop
leave
dec
dec
or
imul
adc
mov
(bad)
aam
add
ret
jg
push
(bad)
push
arpl
cmp
pop
hlt
push
push
movs
mov
fcom
push
cmps
sbb
cmps
std
mov
inc
repnz
adc
mov
jnp
fadd
lods
stos
adc
scas
daa
outs
test
fsub
xchg
push
out
loop
adc
lds
rcl
lods
sbb
fdivr
test
test
outs
add
mov
pop
les
mov
dec
ins
aad
add
loopne
test
dec
cmp
sbb
add
inc
fld
fimul
dec
sub
outs
sbb
scas
cmp
sbb
fwait
cmp
cmps
mov
aam
and
cmps
loopne
jmp
ror
repnz
sub
push
push
add
xchg
(bad)
scas
call
int
int3
lods
pop
add
sub
jb
dec
sub
sub
mov
jae
outs
test
mov
ds
and
repnz
cwde
leave
aaa
or
cli
mov
rol
repnz
icebp
or
test
hlt
mov
pop
sbb
je
sub
add
fisubr
mov
push
inc
or
jns
mov
aaa
fnstcw
push
stc
(bad)
cld
mov
out
fnstenv
or
jge
mov
mov
adc
arpl
call
or
push
mov
scas
sbb
aas
pop
mov
mov
mov
sbb
mov
push
mov
lods
sbb
add
dec
xor
scas
mov
mov
mov
inc
mov
push
jo
mov
ror
pop
in
or
in
cmp
fist
ret
test
enter
aad
inc
ror
and
leave
les
stos
sub
push
and
loopne
push
fs
cld
jae
int
inc
add
popf
mov
mov
mov
loope
test
out
sti
sbb
dec
xchg
call
sub
sub
jae
out
mov
dec
jl
and
(bad)
ss
je
sub
das
jg
repnz
inc
mov
rcl
fdivr
push
bound
push
imul
cmp
les
mov
arpl
mov
dec
gs
mov
retf
sub
or
add
and
push
ror
mov
jg
mov
add
loop
ja
adc
and
inc
sub
jge
cdq
dec
xor
mov
jae
aam
dec
aam
fsub
inc
cmc
mov
lods
and
sub
xchg
pushf
dec
mov
jg
add
(bad)
mov
les
outs
int
ja
push
jmp
fst
sub
ret
lds
and
mov
jl
test
in
mov
cli
out
mov
fwait
pop
ins
repz
xor
std
xchg
dec
not
push
fstp
cmp
outs
and
add
out
fmul
out
mov
fsubr
aad
iret
mov
cmp
lahf
int
cli
(bad)
rcl
cli
xor
js
dec
cdq
sti
cmp
ds
scas
cmp
mov
mov
fimul
adc
cld
xchg
ror
ror
(bad)
popa
xchg
dec
(bad)
cdq
or
clc
repnz
addr16
cmp
jmp
test
mov
test
add
sti
pop
loop
fcomp
add
ret
xor
out
std
xor
xchg
jno
xchg
xor
adc
aaa
and
(bad)
idiv
and
dec
xchg
xchg
retf
xchg
ror
mov
hlt
addr16
loopne
mov
dec
mov
lods
adc
add
out
cmp
xor
stos
js
(bad)
pop
mov
in
adc
icebp
cmps
dec
call
pop
mov
push
fdivr
mov
mov
jl
xchg
mov
push
outs
xor
cmp
jmp
inc
push
mov
pop
fdivr
xor
inc
sahf
xchg
sti
dec
(bad)
adc
sbb
ins
jmp
stc
jno
movs
xchg
in
jmp
xor
jbe
test
out
lahf
sbb
shl
loope
in
scas
lea
inc
add
jmp
sar
test
(bad)
mov
sub
dec
js
jo
adc
cmp
repz
rol
sub
jo
stos
shl
movs
loop
xchg
movs
or
mov
push
aaa
mov
sub
add
scas
add
push
mov
mov
enter
mov
pusha
cmp
mov
mov
fsubr
movs
inc
daa
es
mov
rcl
sbb
cmp
xchg
pop
(bad)
fisub
cli
in
mov
mov
js
or
pop
pushf
sbb
or
push
cmp
cli
in
jg
adc
mov
sub
rol
xchg
out
sub
mov
jmp
in
pop
fldcw
gs
cmps
xor
js
movs
not
pop
mov
(bad)
xor
adc
inc
push
hlt
rcl
test
dec
rcl
scas
out
xchg
push
jmp
jo
dec
outs
jno
or
jb
pop
adc
push
lods
vpaddsw
loop
inc
or
dec
ins
mov
sub
call
sbb
push
add
and
jo
hlt
pop
adc
lds
dec
shl
les
je
mov
cwde
enter
cmp
test
nop
(bad)
test
push
inc
or
and
dec
dec
neg
xchg
jmp
xor
push
pusha
sub
das
pop
das
shl
push
inc
js
cmp
in
scas
leave
and
mov
or
jg
and
int
loop
inc
loop
cmps
in
repnz
inc
cmp
sbb
add
ja
das
sub
cmp
retf
sahf
pop
adc
mov
fdivp
xchg
cli
retf
xor
es
add
stos
inc
pop
daa
aaa
add
jmp
inc
pop
push
or
scas
sub
sbb
aas
xchg
sar
mov
mov
mov
jo
mov
scas
mov
push
(bad)
scas
retf
add
pop
push
dec
ss
mov
and
dec
jecxz
aam
mov
loop
in
mov
std
test
xchg
adc
(bad)
clc
and
outs
outs
(bad)
add
ss
lsl
dec
leave
mov
pop
cmp
fcomip
std
(bad)
mov
fbld
fs
mov
sbb
out
repnz
rcr
pop
das
pop
out
(bad)
daa
adc
sbb
iret
out
js
in
loop
dec
push
int
ins
xchg
std
xchg
(bad)
stos
ror
and
xor
outs
cmc
or
jo
loopne
xor
or
sbb
inc
hlt
mov
icebp
addr16
mov
test
xchg
neg
jno
lods
xchg
daa
lea
inc
sub
sar
push
cmp
fcmovu
xchg
cmp
int3
add
int
pop
inc
push
pop
pop
loope
sbb
add
fldenv
dec
scas
cmp
inc
sub
(bad)
pushf
dec
in
div
mov
and
inc
aas
int3
(bad)
clc
xchg
shr
sbb
call
lods
imul
enter
xchg
jl
inc
(bad)
out
in
sbb
or
shl
mov
pop
cmps
cmp
hlt
add
stc
hlt
stos
pusha
jl
movs
repnz
dec
dec
je
adc
jecxz
inc
je
dec
push
push
nop
rol
push
(bad)
out
mov
outs
inc
inc
xchg
in
mov
add
ret
dec
xlat
add
addr16
pop
mov
icebp
dec
and
mov
fucomp
gs
cmps
push
pusha
mov
pop
push
add
aaa
xor
mov
dec
jl
lods
cs
xchg
ror
sub
popf
ret
ret
ret
(bad)
adc
mov
inc
jmp
push
dec
cmp
popf
or
cmp
jl
bnd
les
je
test
call
sub
and
mov
xor
ins
mov
aad
shr
jb
jmp
mov
adc
inc
adc
xchg
dec
sub
jg
mov
xchg
outs
cmp
jmp
pop
xor
mov
test
addr16
mov
adc
mov
sub
mov
movs
add
je
push
sahf
jo
arpl
into
imul
lea
xchg
sub
aas
or
das
xor
push
aad
aas
and
fbld
mov
stos
or
jecxz
mov
loopne
int3
xor
lahf
jnp
xlat
aaa
mov
aaa
mov
cmp
cmp
or
gs
retf
cmp
rol
jmp
xchg
std
pop
dec
dec
and
dec
stc
push
push
sub
jb
xchg
add
imul
arpl
fwait
jb
adc
and
sar
mov
outs
aam
adc
stos
add
imul
cwde
jg
in
nop
stos
mov
repz
jno
sbb
or
mov
mov
sub
jle
dec
xor
out
icebp
test
cmp
aaa
ja
cwde
push
loopne
stc
and
outs
repnz
arpl
mov
sbb
jb
xchg
mov
stc
loope
imul
mov
popa
(bad)
mov
pop
push
inc
and
pop
push
and
cmps
and
cmp
adc
sub
shl
repz
adc
sbb
mov
loop
push
clc
stos
dec
pop
mov
xchg
shl
mov
cmp
push
push
enter
adc
mov
imul
daa
inc
xchg
add
inc
jae
or
fsubr
push
test
ds
repnz
sub
push
pop
xor
aad
push
push
repnz
dec
and
cli
mov
or
adc
bound
jne
pop
mov
sbb
or
add
inc
add
lock
popf
add
or
pop
idiv
iret
xor
pop
aad
in
lods
xor
mov
int
retf
ins
adc
test
and
sbb
fxch
mov
and
loopne
jg
aaa
push
push
bound
shl
and
mov
icebp
test
push
xor
jno
jl
stc
xor
jecxz
jne
push
enter
push
jbe
ss
bnd
out
push
sub
fistp
inc
mov
shr
test
jae
dec
mov
jns
or
data16
cmp
xchg
pop
jo
push
mov
sti
aaa
dec
or
fs
and
inc
pushf
ss
les
das
push
outs
icebp
push
inc
data16
xor
mov
ret
xchg
or
cld
outs
inc
enter
ds
inc
fs
cmp
jno
xor
neg
cli
sub
pop
sbb
sbb
pop
pusha
inc
daa
mov
sub
ret
mov
sbb
pop
inc
iret
push
sub
data16
push
add
fbld
addr16
sub
inc
adc
xchg
dec
sbb
mov
popf
out
adc
rcr
cmp
sub
xlat
pop
gs
out
pop
xor
xabort
pop
addr16
retf
cmc
in
shr
out
movs
jl
sar
ss
out
cmp
pop
jecxz
(bad)
repnz
loope
adc
mov
jno
imul
xor
add
sub
inc
(bad)
or
cli
repz
add
iret
ins
mov
repz
loop
ret
dec
out
call
hlt
movs
movs
or
inc
xor
jno
stc
lods
inc
xor
jb
repnz
mov
gs
push
js
loope
rcl
push
push
xchg
movs
mov
and
js
push
and
pushf
movs
clc
lea
mov
retf
call
ror
pop
fwait
add
push
mov
fmul
pop
push
call
or
loopne
out
or
in
and
aad
stos
std
outs
imul
mov
movs
adc
sub
aas
clc
popa
sahf
dec
and
xor
cmps
jb
or
mov
out
(bad)
mov
in
mov
leave
cli
mov
push
push
xchg
enter
lds
fldenv
sub
pushf
add
dec
and
cmps
pop
out
jnp
xchg
dec
xchg
sub
in
out
add
dec
test
push
scas
sub
sti
push
push
popa
mov
cs
pop
fidiv
xor
and
(bad)
std
cmp
call
cmc
and
cwde
(bad)
adc
jo
cmp
stos
cdq
xchg
xor
stos
fwait
(bad)
test
dec
cmp
and
imul
cmps
inc
pop
dec
inc
xchg
and
jg
mov
faddp
mov
inc
pop
cmp
push
and
pop
in
lds
dec
jnp
push
sub
push
shr
mov
dec
sub
adc
pop
xchg
add
sbb
lock
sbb
sub
cmps
push
mov
add
call
mov
sub
or
lea
push
dec
cs
sbb
stos
(bad)
leave
movs
fs
ror
cmp
lods
aas
pusha
jecxz
jmp
test
cdq
retf
mov
test
repz
or
cmp
jmp
stos
inc
mov
enter
push
dec
add
mov
or
je
ret
mov
ficomp
data16
mov
and
dec
xor
sub
add
outs
ret
and
nop
mov
xchg
dec
inc
je
lock
or
movs
mov
push
xchg
sub
dec
xor
ss
in
or
stos
cmp
dec
or
scas
mov
sub
arpl
and
stc
fstp
fwait
jg
shl
test
xchg
icebp
mov
ins
into
(bad)
fmul
aad
pushf
mov
idiv
pop
mov
stos
jmp
ficom
rcl
mov
xchg
jmp
xor
cmp
push
test
add
outs
stc
fimul
test
xchg
cld
jne
xchg
mov
into
lahf
push
jecxz
xchg
pop
(bad)
pop
cdq
adc
cmp
pusha
xchg
fisubr
xchg
aas
adc
cmp
xchg
sbb
adc
cdq
cmp
setnp
pop
scas
sbb
push
stos
mov
xchg
out
test
sbb
xchg
inc
repnz
loope
mov
out
mov
iret
jecxz
retf
(bad)
in
dec
cld
enter
cmps
out
pop
and
rcl
div
push
adc
or
mov
arpl
add
out
jmp
dec
mov
fwait
stos
pop
xchg
pop
movs
dec
fmul
lahf
stos
aas
mov
mov
or
call
jo
mov
imul
pop
(bad)
call
or
inc
add
jno
add
inc
mov
inc
in
retf
fst
mov
add
push
shr
sub
pop
pop
mov
sbb
movs
mov
xchg
add
mov
and
test
mov
jmp
jae
gs
push
push
out
xchg
gs
out
lods
into
jnp
arpl
mov
loop
aad
jns
(bad)
test
out
dec
je
imul
adc
std
into
inc
lock
popa
pop
mov
add
add
repz
fbld
hlt
outs
jmp
and
xchg
les
ja
jo
and
enter
(bad)
int
mul
daa
adc
mov
adc
mov
std
and
mov
push
ror
lea
(bad)
mov
mov
fisub
mov
(bad)
and
cmps
push
outs
mov
inc
fs
mov
scas
sbb
les
jnp
lods
jg
jg
xchg
add
add
pop
inc
pop
dec
shl
mov
aaa
sub
dec
cmp
jmp
push
stc
push
aad
xor
lahf
test
addr16
sbb
test
aam
cld
or
int3
fst
pop
cmp
ss
sub
adc
lock
mov
xlat
inc
mov
inc
mov
cmc
fcomp
cdq
and
je
add
dec
js
push
daa
push
nop
or
popf
ficomp
pop
dec
dec
mov
xchg
adc
cmp
jne
js
xchg
das
sbb
popf
dec
mov
or
aaa
push
xchg
or
call
push
cwde
xchg
retf
pop
nop
sbb
out
int3
js
dec
and
ret
xchg
mov
enter
(bad)
(bad)
outs
sbb
cdq
adc
mov
(bad)
inc
mov
mov
push
pop
retf
pop
pop
test
push
ja
aas
int3
iret
jnp
enter
sbb
ins
hlt
iret
mov
sub
cld
jmp
je
xchg
fidiv
pop
xor
jg
sub
jmp
pusha
push
push
test
xor
test
in
fcom
mov
cmp
retf
iret
dec
rcl
xchg
rcl
add
sbb
cs
neg
adc
bound
nop
sti
pop
pop
fbld
call
push
lods
daa
aaa
bound
leave
dec
push
test
xchg
ins
lea
das
jno
cmp
add
xchg
aas
mov
shl
sbb
jmp
and
fld
es
pop
sbb
mul
mov
sub
lea
or
movs
inc
loope
retf
outs
xchg
fdiv
inc
dec
(bad)
je
pop
cmp
in
ret
mov
cmp
inc
mov
hlt
aam
or
mov
xor
mov
jecxz
dec
es
mov
add
pop
imul
shr
leave
cmp
hlt
or
lds
or
cmp
sbb
inc
push
sti
cdq
cmp
xchg
mov
sub
jge
movs
das
out
mov
push
addr16
ins
sti
xbegin
ficomp
push
movs
jb
or
or
test
mov
nop
sbb
test
jbe
rcr
movs
pop
inc
lods
faddp
and
pop
js
and
sti
mov
and
jge
sbb
pop
outs
cmp
test
int
lods
mov
adc
adc
sbb
scas
jbe
adc
ins
ins
(bad)
cli
mov
push
xor
add
adc
fild
cdq
iret
test
jmp
fbld
scas
push
mov
push
pop
mov
out
in
jecxz
jl
push
(bad)
rdrand
mov
mov
out
stc
and
and
lock
mov
jmp
outs
popa
bound
or
mov
into
dec
rcr
or
or
push
inc
jl
push
cmp
cmp
xor
push
aad
aam
pop
jae
or
mov
out
retf
mov
aad
stc
test
cld
push
les
movs
and
test
fstp
add
mov
dec
daa
jge
xlat
fild
xchg
cmp
(bad)
sbb
bnd
bound
movs
stos
enter
test
into
fwait
sub
sub
movs
jle
and
xor
pop
xchg
push
inc
xchg
loopne
cmp
jb
add
test
cmp
pop
xor
icebp
add
cmp
xchg
push
add
push
sub
ja
enter
ins
les
jmp
mov
sub
mov
adc
jle
dec
mov
push
xchg
mov
jg
pop
pop
loopne
in
sub
lahf
or
cmp
cmc
into
call
xor
ins
sbb
lock
xchg
mul
mov
aad
lods
sub
repz
dec
ins
arpl
imul
std
xor
imul
sub
jb
les
mov
pop
xchg
addr16
pop
cmp
jmp
arpl
pushf
pop
lods
mov
es
adc
sbb
int3
push
sbb
fs
cmp
xchg
mov
lahf
sbb
inc
outs
push
cmps
cs
mov
mov
jmp
jecxz
mov
scas
ret
call
push
jnp
push
mov
push
mov
fcom
(bad)
retf
inc
(bad)
push
scas
sar
into
enter
arpl
js
popa
pop
inc
push
aaa
sub
xchg
pop
inc
or
cmp
pop
sbb
leave
cmp
sbb
test
rcr
xchg
gs
test
fisttp
and
icebp
mov
or
jl
inc
adc
xchg
xchg
xor
jmp
pop
lahf
xchg
jnp
add
in
jmp
sti
push
rcl
pop
lea
(bad)
xchg
in
ss
popa
pushf
push
fidivr
inc
lds
jmp
aam
xor
mov
sahf
out
or
rcr
inc
mov
mov
call
in
jecxz
cmp
int3
and
mov
fsub
imul
pop
mov
test
pop
sahf
jbe
jns
(bad)
sbb
loopne
or
clc
xor
ins
pusha
sbb
mov
retf
test
enter
sbb
lock
stos
jae
pop
push
add
sub
inc
jae
mov
and
mov
stos
jecxz
dec
scas
pop
push
imul
fs
in
popa
push
into
mov
fwait
xor
sbb
inc
push
push
add
xlat
pop
movs
icebp
xlat
mov
jne
dec
clc
push
cmp
xchg
mov
sub
test
mov
jge
mov
jecxz
xchg
push
test
mov
dec
or
es
mov
xchg
loope
inc
push
lds
add
aam
cld
push
iret
mov
mov
pop
sbb
fadd
shl
sub
push
push
jnp
dec
out
adc
sbb
pop
ds
dec
movs
shl
imul
jns
(bad)
push
mov
jbe
lea
mov
pusha
sub
sti
or
sub
fwait
inc
pop
xchg
icebp
es
(bad)
jmp
xor
ret
test
or
neg
jb
ds
mov
pop
sbb
inc
mov
or
cmp
mov
ror
pushf
push
or
test
test
push
xor
sub
leave
push
mov
out
ja
xchg
sti
push
adc
test
test
cli
sub
js
das
movs
mov
jno
clc
mov
fimul
cdq
adc
lds
ins
movs
shr
xchg
jge
sbb
xor
dec
adc
push
inc
fld
(bad)
es
mov
inc
mov
mov
sub
xor
mov
ins
(bad)
stc
enter
cmps
fldl2t
push
sbb
inc
sub
stc
loope
shl
loopne
or
and
retf
test
in
mov
test
test
prefetchnta
or
fcmovu
fs
scas
push
xor
fiadd
lods
push
pushf
fcom
pop
adc
mov
sti
jg
ss
popf
pop
sub
(bad)
cld
dec
gs
xor
enter
pop
aas
mov
mov
fsubr
mov
and
hlt
sbb
fcomp
mov
cmps
rol
and
cmp
and
sti
inc
jge
fwait
pop
fnstcw
mov
push
adc
fwait
movs
and
adc
and
cmp
and
inc
call
push
push
xchg
jmp
pop
pop
jge
push
and
sbb
add
out
adc
mov
test
enter
add
popf
test
aam
cmp
xchg
gs
dec
cmp
mov
int3
push
outs
test
ds
fisttp
xchg
mov
dec
das
mov
push
dec
test
call
xchg
(bad)
cmp
(bad)
inc
add
add
xor
ret
loop
cmp
(bad)
xchg
jmp
adc
dec
pop
outs
cmp
shr
aam
dec
in
aaa
cmp
xor
jnp
cmp
neg
xchg
sbb
scas
jge
pushf
out
cli
push
xchg
dec
sub
arpl
lahf
imul
call
dec
rcr
popa
fld
fimul
(bad)
push
les
mov
inc
or
clc
scas
adc
and
or
xor
das
push
retf
call
das
dec
daa
lods
mov
(bad)
push
add
je
mov
pusha
sub
xchg
cld
and
sbb
fisub
out
mov
xchg
das
cs
push
pushf
aaa
add
(bad)
enter
fsubr
push
jnp
sub
pop
nop
push
mov
pushf
cmp
daa
mov
popf
sbb
dec
dec
xor
dec
(bad)
mov
lock
mov
mov
sbb
mov
out
jnp
xor
mul
ins
sub
pushf
add
xor
sahf
pushf
cmp
ins
sbb
jmp
pop
pop
cmp
dec
imul
xchg
fs
js
cmc
popa
jp
out
cmp
inc
(bad)
jno
push
fild
fdiv
mov
adc
mov
pop
aam
push
sti
test
movs
mov
jmp
push
cwde
jge
cmp
hlt
es
loopne
ss
shr
sbb
fimul
bound
mov
pop
dec
movs
pop
les
fadd
pop
jmp
imul
dec
adc
adc
stos
sbb
pop
stos
adc
dec
dec
jge
push
scas
add
ja
adc
and
out
adc
push
mov
enter
ret
shr
in
xor
and
movs
ins
sar
cmp
xchg
adc
push
retf
outs
ins
mul
test
hlt
cdq
mov
cmc
fisttp
mov
dec
mov
lahf
data16
mov
gs
imul
cmp
not
or
dec
out
(bad)
(bad)
inc
mov
or
add
pushf
sub
pop
scas
or
push
push
mov
pop
fisttp
mov
retf
xchg
fdivrp
mov
mov
mov
movs
call
out
push
icebp
fcom
mov
pop
lock
in
data16
pop
jbe
loopne
stos
mov
imul
push
mov
xchg
inc
xchg
ffreep
fbld
or
xchg
rcr
dec
xor
dec
sub
add
sub
inc
mov
jbe
mov
cmps
adc
push
sub
pushf
pop
mov
out
push
hlt
xchg
jp
leave
jne
out
inc
and
popf
leave
and
mov
ss
lods
ss
push
std
sub
sbb
pushf
lock
jae
lea
outs
ret
mov
add
fsubrp
imul
mov
mov
jmp
xor
xchg
add
ret
xor
(bad)
nop
or
aaa
arpl
imul
xor
inc
repz
push
outs
xchg
cmp
stos
push
ins
stos
in
adc
(bad)
and
call
dec
inc
jnp
and
pop
xor
sbb
jp
fdiv
pop
(bad)
sub
and
inc
ins
jp
jmp
push
rcl
imul
jns
inc
cmp
es
dec
inc
xchg
aaa
sub
jbe
push
mov
mov
out
inc
(bad)
lds
in
xchg
jg
and
mov
stc
or
fld
jnp
cmps
xchg
sub
icebp
shr
mov
loope
xchg
jne
dec
loop
jmp
mov
cld
scas
xor
jb
xor
adc
(bad)
scas
pop
rcl
out
outs
add
cmp
jg
mov
loop
popa
call
loope
js
ret
and
loope
ins
loop
add
test
xchg
jmp
and
into
test
mov
mov
stos
ds
dec
push
cmp
sub
lahf
cmc
push
inc
cmp
push
xor
out
dec
mov
out
dec
ror
mov
push
mov
ret
inc
pop
test
or
or
push
xor
cmps
mov
or
or
nop
sti
cmp
mov
cmp
cmp
sbb
mov
je
jge
sbb
ins
jo
mov
int3
pop
jne
aaa
pusha
cmp
sub
dec
push
xchg
loop
(bad)
lock
add
xchg
stos
loopne
aad
int
or
outs
sub
mov
push
pop
icebp
fwait
test
ds
je
clc
clc
mov
(bad)
jg
pop
push
and
cmp
mov
xchg
pop
mov
int
xor
outs
mov
adc
std
push
stos
mov
mov
mov
scas
movs
dec
sub
sar
cmc
aaa
daa
scas
arpl
mov
test
or
int3
dec
or
in
(bad)
add
test
push
mov
jmp
sbb
repnz
jle
jbe
or
pusha
xor
cdq
pop
mov
mov
sbb
call
sub
pop
gs
lock
mov
mov
retf
popf
aaa
out
cmps
jl
push
lods
retf
fwait
ja
shl
adc
aaa
push
fwait
jne
and
jmp
xchg
or
mov
or
inc
adc
rol
push
adc
rcl
xchg
sbb
or
jge
jno
std
mov
ret
imul
dec
iret
nop
(bad)
imul
jg
add
push
pushf
jg
js
mov
(bad)
mov
mov
mov
adc
imul
jmp
jb
iret
jno
add
sub
mov
int
test
xchg
test
add
jmp
stc
jp
mov
inc
inc
cs
gs
xor
movs
add
cmp
jnp
mov
pop
ja
push
adc
mov
inc
push
and
aaa
in
cmps
jl
fs
scas
arpl
cmp
cmp
dec
push
aam
xchg
nop
int
dec
sahf
pop
push
rcr
out
(bad)
xor
lea
stc
xor
jne
push
sbb
sub
adc
sbb
jns
jo
ja
xor
fsubr
or
push
out
sbb
(bad)
fidiv
ret
pusha
sahf
add
inc
mov
mov
mov
jge
push
lods
arpl
aam
xor
jp
stos
push
outs
jne
aad
inc
jo
push
sti
(bad)
or
sub
lock
aaa
xchg
push
(bad)
mov
popa
icebp
push
pop
lea
xchg
push
xchg
movs
mov
std
punpckhdq
xor
jp
arpl
mov
adc
mov
pop
xchg
loope
pop
xchg
cmp
fldenv
sub
xchg
pop
std
inc
aad
fadd
jmp
ret
(bad)
sbb
icebp
lahf
in
icebp
outs
gs
and
push
xchg
add
mov
aad
leave
lods
aas
push
mov
pop
out
jns
xor
dec
sahf
xchg
sbb
jno
cmc
fadd
dec
push
pusha
les
sbb
push
fistp
push
aad
push
std
jge
pop
cmps
jnp
stos
adc
ret
sahf
(bad)
dec
xor
xchg
adc
aas
jo
push
adc
adc
sti
retf
or
outs
(bad)
sbb
(bad)
sub
outs
adc
pop
(bad)
ficomp
cmp
mov
jle
fistp
xor
cmp
or
aad
or
jle
inc
jmp
js
test
dec
mov
cmp
add
or
sub
mov
inc
lahf
out
jp
fisttp
adc
js
(bad)
aaa
cli
pop
inc
adc
mov
inc
mov
pop
or
(bad)
sti
push
jo
ds
test
push
fs
or
jne
(bad)
jno
outs
test
ins
or
add
xor
pop
cmp
xor
sbb
or
(bad)
fld
js
mov
jp
aaa
lock
or
or
cld
push
and
faddp
add
hlt
in
sbb
mov
cmp
mov
jbe
aam
or
retf
pop
(bad)
inc
sub
test
cli
mov
jne
mov
adc
dec
rcr
ja
mov
xlat
dec
retf
jl
and
jmp
pop
int
push
hlt
imul
dec
aas
lahf
push
rcl
sub
sub
adc
push
xchg
and
cmp
imul
sub
jp
cwde
test
outs
mov
sub
cmc
clc
adc
cmps
pop
mov
push
cdq
sub
js
mov
push
leave
mov
dec
stos
mov
(bad)
or
sbb
icebp
aas
jmp
stos
mov
jp
inc
aaa
shr
fstp
push
call
into
retf
shl
pop
mov
pop
ds
dec
out
and
add
pop
inc
es
pusha
push
sub
pop
ss
imul
shl
fcom
jmp
outs
inc
xchg
add
sbb
jb
(bad)
cli
mov
enter
aam
retf
push
mov
nop
xlat
imul
aad
fadd
and
ror
imul
(bad)
cld
xor
test
shl
addr16
and
or
jne
in
leave
out
sub
sub
add
mov
jmp
cmp
push
(bad)
jb
xchg
dec
pop
leave
cmps
sbb
out
inc
and
imul
ror
icebp
aam
leave
mul
repnz
xchg
sar
popf
dec
mov
or
push
ja
in
xor
jns
add
stos
ins
in
inc
clc
or
sbb
sahf
pop
pop
pop
mov
out
jae
(bad)
in
js
xor
cmp
inc
out
dec
jge
and
rol
(bad)
cmp
out
shl
adc
cmp
es
xlat
xchg
push
or
rol
mov
test
out
jmp
fwait
mov
je
push
pusha
push
clc
loopne
pop
shl
mov
jmp
pop
addr16
xor
push
les
(bad)
test
xor
jne
dec
xor
adc
sbb
lods
or
pop
mov
dec
dec
popf
cs
stos
pop
sub
sub
cdq
mov
xor
sub
enter
sbb
in
aas
mov
retf
jp
fdivr
arpl
push
sub
push
cmp
jge
outs
jb
fiadd
or
pushf
js
addr16
jbe
xor
test
dec
inc
adc
xchg
icebp
hlt
adc
sub
add
mov
ins
test
and
shl
cwde
and
mov
mov
in
cmp
xor
leave
or
pop
add
clc
dec
cmp
mov
pop
jg
(bad)
or
arpl
mov
fisubr
icebp
(bad)
loopne
xchg
popf
sbb
loopne
not
arpl
push
add
jmp
jmp
das
int
iret
sub
stos
dec
push
mov
loope
pop
xor
movs
mov
inc
ret
dec
sub
sub
std
xchg
repz
mov
sar
ds
pop
mov
add
add
enter
repnz
mov
push
in
cs
cmps
pop
jge
add
add
ret
or
inc
inc
shr
mov
popf
nop
push
or
pop
ja
add
jge
mov
mov
sub
or
scas
ja
sbb
jl
sub
cmp
in
pop
sti
jo
inc
sbb
loop
lock
into
jle
mov
push
add
add
sub
add
iret
enter
or
ss
sub
js
jnp
test
pop
add
movs
std
imul
sub
add
call
ficom
sbb
pop
loopne
sub
in
scas
lds
inc
mov
and
retf
pusha
das
jecxz
sub
call
sub
out
loope
ds
mov
bound
mov
fs
fdiv
(bad)
ficomp
sbb
test
jge
cmp
hlt
fs
mov
fimul
ror
loope
pop
mov
xlat
int
aad
inc
mov
pop
mov
push
out
(bad)
dec
retf
and
jb
mov
jp
cs
adc
aad
sub
ins
and
jb
mov
sbb
stos
add
push
inc
pop
hlt
lods
pusha
xchg
stc
push
add
gs
out
jno
sti
cmc
sub
mov
or
push
sub
inc
push
sahf
retf
dec
add
outs
add
xor
sub
dec
xchg
sub
jno
and
cwde
outs
lods
xchg
push
pop
sub
(bad)
(bad)
cwde
in
lods
mov
mov
xchg
pushf
mov
jns
xchg
das
(bad)
dec
and
into
retf
imul
push
mov
mov
pushf
mov
pop
mov
shl
pop
adc
test
scas
fistp
inc
push
jnp
jns
dec
push
fist
dec
mov
sbb
mov
mov
in
fisttp
mov
mov
or
push
pusha
and
sub
mov
gs
test
sti
(bad)
mov
into
dec
dec
sbb
mov
and
cmps
push
out
jb
pop
mov
inc
jb
mov
fwait
sbb
shr
mov
popa
inc
and
push
movs
push
jg
call
cmp
(bad)
lea
cmps
iret
xchg
adc
scas
iret
mov
sbb
and
cmp
std
push
jle
xchg
jle
clc
test
xchg
ja
int3
call
in
cli
mov
dec
cmp
outs
shr
les
(bad)
push
push
push
cmp
sbb
xor
xchg
sbb
ins
mov
nop
pop
sub
call
mov
jmp
int3
shl
jbe
mov
repz
xchg
aam
sbb
fild
sbb
xor
dec
ins
fwait
into
cmp
cmc
sub
nop
mov
mov
inc
dec
add
sbb
mov
loop
fstp
in
push
inc
fs
mov
movs
xor
leave
stc
add
and
int3
imul
in
addr16
aaa
in
test
je
ins
jne
into
inc
jg
push
lods
jo
sbb
inc
xor
mov
cmp
icebp
jne
shr
inc
stc
jnp
pop
xor
pop
retf
add
and
outs
not
add
repnz
loop
jl
add
mov
dec
aam
jge
xor
xchg
inc
fisubr
shr
sub
jbe
mov
mov
adc
popa
mov
test
sbb
ret
movs
repnz
or
mov
and
out
retf
xchg
shl
scas
(bad)
adc
lds
fnstenv
cmp
inc
pop
das
xchg
add
dec
loop
mov
mov
and
dec
les
inc
loop
mov
call
sbb
out
cld
nop
mov
les
loop
out
lock
adc
inc
js
es
push
out
sub
into
push
add
mov
dec
cwde
inc
jg
outs
jle
ret
push
jae
jmp
repz
shr
xor
lock
loope
data16
rol
stc
rcl
gs
dec
in
fwait
popa
loopne
fstp
mov
lea
xacquire
ret
ret
jmp
into
sbb
je
enter
test
sbb
jno
leave
pusha
sbb
repz
lds
std
bound
push
rol
add
pop
(bad)
inc
int3
mov
xchg
loope
mov
clc
cmp
xor
dec
mov
sub
imul
adc
pop
xor
jmp
test
mov
(bad)
loope
cmp
mov
jno
mov
mov
cld
push
rcl
outs
push
mov
in
xlat
mov
push
or
jle
adc
js
ud1
jge
mov
sbb
mov
adc
mov
cmp
pop
or
sub
jmp
in
jmp
jae
(bad)
adc
mov
inc
bound
cmp
and
test
inc
stc
cmp
sub
and
movs
sbb
jecxz
cld
sbb
sbb
(bad)
cmp
mov
dec
sbb
cmc
stos
xor
daa
jno
loope
(bad)
fst
jae
(bad)
mov
daa
xchg
push
push
xor
or
dec
mov
xor
mov
mov
in
mov
jae
mov
sti
les
das
call
rcr
push
div
mov
inc
jb
(bad)
mov
pop
push
int
and
pushf
and
jle
fs
lds
cwde
fsubr
push
jmp
ret
lea
add
(bad)
mov
outs
sub
ins
in
inc
and
jae
push
push
push
enter
inc
dec
sub
mov
push
jmp
lock
and
adc
adc
jg
mov
fmulp
jno
push
mov
test
addr16
mov
aaa
xlat
inc
dec
ins
mov
mov
sahf
das
xchg
cld
push
pop
and
call
and
push
out
int3
sbb
sub
jbe
or
aad
adc
mov
int
popa
cmp
mov
rol
sub
pop
in
ret
hlt
(bad)
fild
(bad)
jle
xchg
aas
push
mov
fisttp
scas
cmp
mov
(bad)
popf
sbb
outs
adc
add
and
jge
out
mov
sbb
jns
lea
call
pop
mov
ins
dec
cmp
loope
je
jmp
mov
or
jg
sahf
stos
push
push
add
and
add
push
mov
lock
mov
(bad)
imul
rol
push
gs
repnz
add
and
fsubp
fnsave
dec
out
xchg
add
mov
add
sbb
xchg
push
add
xchg
cli
mov
and
mov
adc
and
adc
ret
scas
inc
leave
test
cld
jle
dec
xor
sub
hlt
shr
cmc
adc
test
in
shr
and
pop
mov
cld
dec
loop
daa
out
fist
movs
fsub
retf
push
dec
and
mov
mov
arpl
mov
imul
and
into
sbb
call
cmps
test
mov
add
mov
cdq
cmp
stos
jecxz
sub
ds
ror
test
outs
jl
dec
adc
and
test
inc
(bad)
sub
cs
push
out
(bad)
jp
sub
inc
xchg
cmps
mov
jmp
cmps
ror
data16
xlat
faddp
int
pop
xchg
je
sbb
std
arpl
and
fcom
add
shr
ins
call
ins
rcr
out
icebp
and
pop
sbb
inc
cmp
pushf
or
popa
ret
sar
js
aas
add
ja
inc
shl
push
mov
xor
mov
lds
fstp
add
inc
push
ja
mov
fwait
int3
lods
or
adc
sar
push
xchg
or
repnz
pop
(bad)
push
xor
xor
xchg
jne
mov
pop
mov
push
mov
ret
lods
and
adc
cmp
lea
clc
cmps
fwait
in
test
jbe
ror
fcomp
dec
or
mov
je
out
xor
lds
aam
shl
(bad)
loope
xor
popf
sub
add
dec
or
gs
xor
push
in
ja
scas
mov
sub
sbb
fs
nop
retf
cli
inc
or
out
inc
int
lds
dec
imul
test
jne
jle
cmps
pop
or
mov
pop
adc
jg
push
cld
jns
mov
jo
adc
int
add
sbb
adc
popf
push
shr
xchg
shr
mov
sti
push
(bad)
jbe
mov
add
mov
dec
std
pushf
shl
add
mov
shl
fwait
sti
add
fs
dec
fsubr
jecxz
pop
dec
scas
dec
xor
ret
scas
or
stc
fdiv
adc
aad
(bad)
ficom
xchg
leave
mov
sbb
jmp
scas
fs
dec
push
mov
jmp
movs
or
fcom
cmps
(bad)
(bad)
fcmove
inc
cmc
mov
test
fdiv
fld
daa
pop
sbb
dec
aam
jb
retf
popf
jp
cmp
or
out
mov
aaa
xchg
dec
cmp
mov
mov
inc
sbb
inc
outs
or
mov
icebp
dec
or
aad
sbb
jmp
and
in
jnp
pop
in
rcl
scas
lock
lods
xchg
push
je
inc
mov
(bad)
mov
sub
sbb
xchg
mov
adc
data16
fisttp
repnz
jmp
push
xchg
mov
dec
lock
pop
mov
mov
out
loope
sbb
je
sub
xor
les
xor
xchg
shr
retf
push
add
out
mov
je
mov
dec
cdq
xor
dec
in
test
(bad)
fld
push
(bad)
mov
sbb
xor
ret
outs
or
xor
push
in
lock
jo
jae
and
out
xchg
cwde
scas
(bad)
push
out
xor
or
gs
ins
xor
cld
in
pop
sbb
dec
imul
test
idiv
inc
ret
xchg
add
dec
mov
add
pusha
jae
in
fwait
pop
dec
movs
aad
rcr
bound
pop
(bad)
fbstp
pop
jnp
imul
mov
fiadd
pop
stc
ins
add
mov
bound
arpl
adc
ds
sbb
mov
jb
jnp
repz
xchg
sub
loopne
data16
mov
inc
(bad)
jns
xchg
ins
jnp
enter
jnp
or
in
call
cs
inc
ins
div
arpl
stos
frstor
lock
lock
(bad)
ja
mov
pop
(bad)
dec
ins
cmc
sub
ds
ins
cdq
in
and
ficomp
hlt
dec
and
jmp
push
or
xor
cmp
mov
pop
adc
aad
jecxz
out
xchg
(bad)
imul
add
ins
test
jae
cwde
(bad)
sti
pop
movs
(bad)
movs
popf
movs
icebp
arpl
sbb
pop
add
dec
adc
imul
mov
or
scas
ss
dec
xchg
xchg
je
scas
mov
and
(bad)
leave
sub
dec
sub
mov
jecxz
sub
dec
data16
jge
mov
xchg
mov
push
xchg
nop
cmp
jne
(bad)
out
sub
mov
jno
pop
bound
inc
psubd
and
push
in
aad
push
call
imul
outs
sub
hlt
fsub
cmc
jle
inc
cs
mov
cmp
jmp
sbb
(bad)
sub
call
addr16
push
fisttp
loopne
and
mov
(bad)
and
mov
pop
stos
ret
xchg
and
out
jle
pop
call
adc
xor
(bad)
push
pop
adc
pop
push
push
xchg
lea
add
xchg
and
icebp
popa
mov
push
inc
jp
mov
inc
ins
jp
clc
bound
scas
dec
inc
mov
dec
sti
push
add
out
inc
and
sub
idiv
movs
lods
sti
cmp
(bad)
gs
xor
int3
adc
xor
imul
jecxz
jnp
ins
jecxz
pop
outs
sbb
inc
mov
outs
mov
push
sahf
push
neg
idiv
fchs
inc
enter
xlat
sub
in
mov
lods
cmc
jp
sub
mov
ja
stos
sub
cmp
adc
pop
sub
adc
inc
sub
dec
add
cli
leave
sub
pop
out
call
push
inc
je
cld
xor
aaa
in
adc
xor
mov
or
jo
fild
or
jmp
retf
(bad)
adc
movs
ins
fs
push
repnz
repz
cmc
add
xlat
sbb
int3
lock
dec
xchg
aaa
in
test
mov
cs
arpl
xor
ins
stc
popa
add
mov
cmc
adc
mov
pop
sar
push
mov
and
push
and
outs
or
or
cs
loope
ja
cmp
inc
dec
sbb
xchg
cmp
dec
stos
or
int
xchg
mov
and
add
mov
jmp
or
mov
repz
sub
push
int
(bad)
sub
call
add
dec
fldl2e
mov
sahf
lods
popf
cmp
not
test
ficomp
stc
pop
ds
retf
cmp
jns
pusha
pop
xchg
or
ss
int3
fs
cmps
xchg
in
jne
into
sub
in
sbb
lock
cmp
inc
popf
or
jmp
rol
jg
and
and
jg
xor
clc
push
mov
add
fwait
jae
cmps
daa
jo
ins
pop
mov
cdq
sub
adc
cmp
stos
rcl
fcomp
pop
fmul
push
jg
repnz
pop
repz
push
icebp
(bad)
xor
in
les
sti
inc
in
loop
mov
int3
xchg
sub
jle
cwde
jge
addr16
mov
pop
push
and
cli
test
dec
or
loop
retf
test
cmps
pop
or
out
dec
cwde
adc
or
cmp
jnp
(bad)
jae
xor
in
stos
iret
les
and
mov
lock
mov
push
push
push
sar
fcmove
ins
cmps
jmp
shl
test
jbe
(bad)
aam
or
(bad)
loope
pop
test
pop
push
fiadd
inc
iret
mov
div
mov
and
lods
leave
imul
rcl
push
lock
lahf
jb
je
loope
out
pop
or
jns
(bad)
loopne
and
or
in
sbb
dec
out
aas
shl
xchg
sub
or
xchg
mov
xchg
and
mov
adc
push
pop
sahf
push
das
shl
mov
sbb
push
out
fsub
gs
scas
(bad)
jmp
mov
(bad)
pop
repz
aad
mov
and
rol
leave
push
ret
push
mov
push
sbb
call
or
icebp
cmps
push
inc
inc
fidivr
pop
cmps
dec
sub
sbb
aas
xchg
push
mov
inc
push
jp
popa
xchg
inc
mov
mov
xchg
jne
lock
cmp
sbb
call
in
stos
jne
push
scas
stos
adc
mov
ins
xchg
mov
fld
add
out
fbstp
cmp
out
mov
not
iret
jecxz
iret
jnp
call
out
or
nop
xchg
or
(bad)
pop
lahf
and
add
cmc
push
retf
ins
adc
sbb
xchg
cmc
prefetcht1
push
jmp
mov
pop
(bad)
push
push
das
cmps
push
inc
pusha
xchg
pusha
aas
cmp
push
cmps
scas
cdq
mov
push
arpl
xor
sbb
sub
in
add
dec
out
into
clc
and
in
aaa
mov
cmp
enter
les
push
add
movs
retf
jmp
mov
sub
jl
int3
into
or
daa
or
jne
push
leave
mul
mov
ret
fbld
xchg
sbb
mov
push
mov
repz
adc
cmp
add
movs
add
dec
or
(bad)
cmp
dec
jg
(bad)
dec
mov
mov
jge
cmps
sbb
dec
push
aas
in
shl
stc
mov
hlt
sahf
lahf
je
(bad)
mov
inc
in
test
mov
out
adc
lahf
xchg
add
rcr
inc
jg
and
scas
into
xlat
int3
fs
clc
sbb
call
adc
push
cld
aaa
ja
push
pop
xchg
icebp
dec
ror
dec
clc
dec
cwde
rep
mov
jns
call
lea
mov
pop
dec
shr
inc
pop
xchg
mov
nop
add
push
mov
jmp
je
inc
shl
xchg
mov
adc
mov
jb
aad
in
jno
add
mov
aad
dec
stos
ror
push
xor
in
adc
add
mov
xchg
cmp
inc
mov
or
fdivr
or
out
data16
test
add
adc
(bad)
push
jp
pop
ds
mov
or
add
adc
jmp
dec
jbe
aad
mov
nop
cli
mov
enter
rol
adc
outs
test
xchg
fcomp
push
push
mov
add
push
mov
loop
cmp
jmp
and
test
out
xor
neg
mov
mov
mov
and
push
(bad)
mov
aad
sahf
ret
pop
popf
imul
xchg
adc
sub
mov
icebp
jmp
imul
sahf
mov
jae
inc
repz
push
jae
dec
sub
jnp
icebp
inc
inc
out
gs
push
(bad)
push
test
int3
call
cs
sub
ins
sub
dec
test
mov
dec
mov
cmp
pop
cld
int3
lahf
jg
jne
jl
fs
jg
and
pop
inc
test
xchg
add
cwde
xchg
adc
sbb
cmp
sbb
xor
mov
mov
jae
test
sahf
xchg
aaa
push
xlat
pusha
jle
push
inc
ja
pop
mov
push
mov
dec
xchg
or
adc
push
(bad)
push
retf
movs
nop
(bad)
sub
lea
push
dec
mov
call
in
fcomp
inc
int3
mov
lds
shl
xchg
movs
sbb
xor
ja
xor
test
jecxz
outs
sahf
xchg
mov
inc
call
cld
cmps
pop
mov
aam
lahf
retf
call
fidiv
sbb
jb
jno
xor
int3
fs
rcr
inc
cdq
lds
jmp
or
mov
and
repnz
or
repz
fisub
jge
popa
mov
call
jmp
pop
jge
movs
retf
sbb
dec
jge
push
adc
mov
push
ja
call
mul
js
mov
scas
sbb
pop
rcr
retf
sahf
scas
jmp
scas
adc
leave
fmul
fsubr
(bad)
and
js
mov
movs
dec
jne
leave
adc
sysenter
movs
ins
xlat
sub
push
clc
dec
sbb
xchg
fiadd
jns
scas
ja
out
inc
mov
(bad)
aad
pop
xor
test
ds
icebp
iret
out
sub
ret
xchg
inc
mov
xor
mov
add
dec
ret
pop
cli
test
mov
sub
lock
and
or
test
mov
mov
push
repz
jmp
pop
xchg
lods
ficom
daa
inc
xchg
cld
mov
inc
xchg
and
lods
cmp
jae
ds
inc
cmp
enter
push
mov
jne
retf
push
push
push
mov
or
mov
pop
jae
cmp
setb
sahf
and
cs
cld
aas
sbb
fmul
sar
cli
or
test
call
jno
daa
pop
fldenv
int3
les
cmp
ja
rcr
jmp
rcr
test
mov
push
adc
inc
out
loopne
pop
lods
pop
mov
ss
iret
ins
je
outs
adc
ss
stc
jmp
cwde
aas
retf
xor
adc
adc
or
jp
in
inc
jmp
je
sbb
add
std
add
in
fwait
popa
retf
pop
adc
pop
das
inc
xchg
xchg
dec
jns
add
and
scas
ror
imul
aaa
sar
call
pop
cdq
dec
aaa
sbb
or
and
jbe
sub
pop
cmp
mov
aaa
mov
mov
xor
pop
daa
mov
dec
cwde
bnd
xlat
mov
adc
push
mov
pusha
lods
push
ds
dec
pushf
ror
xor
jne
mov
stc
sbb
push
cdq
imul
and
add
mov
xchg
add
aad
xor
mov
out
lahf
and
test
ins
test
scas
(bad)
sub
jge
jbe
je
push
xchg
ror
sbb
mov
out
icebp
dec
pop
bound
xchg
push
out
stc
icebp
or
jns
cs
leave
outs
mov
cwde
shl
mov
jnp
mov
aad
mov
adc
cmp
pop
pop
fstp
xlat
mov
and
push
jno
adc
mov
sub
push
mov
inc
push
jae
jmp
xchg
jo
and
(bad)
mov
in
pop
in
jecxz
pop
adc
push
push
and
rol
sub
mov
pop
xchg
jmp
std
add
push
call
(bad)
ss
mov
outs
mov
pop
adc
mov
cmc
addr16
imul
inc
arpl
push
pop
mov
jmp
jmp
je
int3
daa
mov
scas
or
mov
or
and
inc
in
iret
fidivr
inc
inc
ja
mov
ins
add
mov
or
popf
mov
ins
imul
cmps
repnz
jb
push
xchg
push
and
xchg
xchg
pop
daa
dec
sub
inc
or
dec
ja
cld
cs
xchg
inc
call
loope
jp
add
mov
(bad)
cmp
mov
cs
mov
fs
jge
pop
dec
(bad)
jl
mov
lods
shl
jl
sbb
inc
mov
mov
push
cmp
dec
adc
push
gs
repz
push
nop
jnp
cmc
movs
jne
int
fistp
push
add
and
push
mov
mov
psubusw
ret
mov
mov
and
dec
and
(bad)
push
xchg
out
push
call
push
movs
and
nop
jmp
sub
adc
push
test
inc
dec
popf
sti
mov
sti
test
in
in
fdivr
adc
in
(bad)
xchg
jb
sub
aaa
push
retf
ins
ins
mov
mov
jmp
sub
movs
fstp
jg
and
sub
add
sbb
jnp
push
jecxz
push
mov
in
and
sahf
popf
out
inc
inc
cmp
pop
xlat
stc
adc
xlat
ins
cmp
outs
lea
inc
test
mov
cmp
mov
test
in
leave
pop
pop
sub
mov
aam
push
cmp
cmp
xor
push
(bad)
(bad)
or
out
jmp
icebp
mov
sbb
fadd
xor
inc
mov
test
jp
out
fidivr
loope
fiadd
pushf
pop
sbb
lea
xor
sbb
icebp
stos
sub
inc
ss
scas
mov
mov
mov
stc
fimul
pop
repz
cwde
xlat
inc
xor
ds
into
mov
mov
sub
inc
push
ja
add
xchg
in
ins
mov
dec
sar
ret
sub
or
push
sub
xor
adc
inc
(bad)
ins
sub
mov
sub
cmp
outs
jmp
jnp
retf
ret
sar
inc
adc
ins
pop
sahf
sbb
retf
jge
push
push
mov
cld
out
movs
daa
shr
sub
inc
into
bound
jecxz
(bad)
xor
xchg
dec
stc
adc
pusha
aaa
jmp
jmp
clc
inc
mov
mov
cmps
xor
and
dec
mov
mov
xchg
or
xor
mov
mov
lods
pop
mov
out
ja
clc
loop
mov
scas
mov
mov
cmp
sbb
or
and
add
fnstsw
into
push
repnz
ror
fiadd
and
dec
movs
mov
push
shl
aam
xor
pop
int3
cli
test
and
cld
(bad)
push
mov
inc
cmp
xor
or
loopne
xlat
xor
stc
sbb
jg
dec
int
pop
loop
enter
retf
xor
imul
sub
jle
stos
jmp
iret
mov
fldcw
gs
push
ss
(bad)
out
inc
cs
sti
xchg
clc
(bad)
popf
or
inc
fs
cli
leave
pop
cwde
add
cld
shl
scas
mov
pop
test
aad
stos
inc
mov
test
pop
imul
xor
xchg
icebp
repnz
dec
add
inc
cli
xchg
add
arpl
push
ret
dec
loopne
adc
xchg
dec
in
popf
push
fld
jge
xchg
jle
pop
jp
xchg
fwait
imul
pop
or
fwait
ja
mov
cli
dec
imul
jo
add
ss
xchg
xchg
mov
push
fsubr
int
adc
cdq
mov
pop
das
sub
pop
push
ret
rcr
mov
mul
mov
xor
pop
xchg
inc
push
jmp
das
popf
retf
jo
fld
iret
not
iret
lods
bound
xchg
data16
xor
std
and
add
inc
mov
in
test
inc
adc
fwait
mov
outs
add
jno
fst
push
mov
test
mov
ss
fild
push
je
adc
fild
test
adc
dec
add
mov
shr
retf
cmp
out
or
ja
jnp
add
out
sub
inc
ss
dec
lods
es
in
sbb
xor
in
push
xchg
xchg
mov
pop
push
popa
out
das
daa
xchg
repnz
int
(bad)
pushf
sub
sbb
cmp
fild
popf
enter
inc
mov
mov
or
sbb
mov
mov
mov
cmp
push
push
test
sbb
lds
fwait
int
movs
mov
or
adc
outs
fs
pmuludq
pop
mov
int
dec
stc
push
stos
push
fidivr
(bad)
fsubr
or
jns
sahf
aaa
push
int
add
sbb
pop
mov
pushf
jecxz
inc
cmps
jecxz
es
adc
mov
mov
sbb
aad
shl
out
arpl
or
xor
fisttp
mov
sub
pop
ficom
mov
pop
inc
mov
ja
pop
ins
cmp
dec
ret
jae
bound
popf
ins
loopne
int3
sbb
jg
sub
sbb
dec
enter
fbstp
push
mov
push
shr
enter
adc
jmp
mov
aas
scas
push
mov
int
push
fsubr
out
movs
lea
sbb
lahf
fimul
gs
in
dec
movs
adc
dec
daa
dec
jmp
mov
jae
cld
push
lods
(bad)
push
rcr
retf
or
inc
repz
adc
mov
and
push
cmp
pop
(bad)
jmp
shr
push
xor
dec
sbb
mov
movs
xchg
fcomp
sbb
xor
sub
arpl
mov
add
xchg
pop
idiv
xchg
aaa
jb
(bad)
outs
jge
ds
mov
push
jo
ret
or
enter
jl
mov
fmul
and
jle
out
mov
nop
test
ins
outs
in
inc
std
jle
shl
scas
nop
mov
cmp
and
or
in
mov
xchg
bound
imul
sbb
test
fiadd
cmp
aad
sbb
xchg
dec
mov
mov
ins
movs
mov
aad
lea
dec
loop
and
jp
push
and
cmc
mul
outs
inc
fcomp
pop
push
and
fcom
(bad)
call
adc
lods
js
lods
fimul
out
movs
ds
sbb
loope
scas
pop
pop
cmps
dec
and
out
xor
sub
in
and
lahf
ret
add
and
ret
xchg
cmp
and
xor
jno
push
(bad)
lock
xchg
inc
mov
rcl
pop
(bad)
sbb
in
ins
jb
movs
es
and
fnstcw
hlt
lock
cld
out
push
sahf
jecxz
add
pusha
cmc
ret
mov
fcomi
(bad)
inc
dec
and
push
inc
imul
les
jmp
dec
jl
fisttp
retf
std
jle
sub
pop
les
mov
into
sbb
call
or
xchg
cmps
ret
outs
add
pop
and
(bad)
outs
xchg
out
adc
xchg
call
es
hlt
ficomp
adc
in
jmp
gs
pop
add
sub
lock
inc
dec
in
setg
les
dec
ins
mov
mov
push
push
out
daa
inc
add
loopne
xor
idiv
and
add
pop
mov
retf
mov
cwde
jle
test
and
add
inc
cmp
sbb
lock
loope
cmp
sub
pop
cmps
mov
sbb
ret
call
stos
mov
movs
int
pop
cmps
mov
sbb
sub
outs
add
xlat
add
js
cdq
pop
sbb
dec
es
cmp
adc
inc
test
ja
aas
xchg
ss
push
in
or
jbe
in
pop
add
sub
inc
dec
xchg
mov
xchg
and
imul
retw
repz
pusha
xchg
pushf
js
mov
out
push
movs
loop
arpl
sbb
jmp
mov
xor
mov
or
imul
mov
and
fst
jmp
mul
mov
dec
cdq
(bad)
fadd
pop
mov
inc
push
repz
inc
inc
xchg
fcmovnbe
inc
cwde
shr
xor
int3
das
xchg
mov
loopne
push
mov
cmp
stc
sub
gs
pop
push
cmp
xchg
mov
jl
pop
sbb
or
cli
fild
(bad)
aas
xchg
jg
in
(bad)
punpckhbw
shl
movs
sub
repz
xchg
xchg
rcl
xor
leave
push
add
push
rcr
hlt
fidiv
(bad)
pop
adc
push
je
out
mov
shr
inc
outs
std
push
jl
aam
shl
popa
fistp
pop
test
retf
test
dec
imul
mov
cmp
retf
(bad)
jne
push
loopne
ss
jno
xor
ds
pop
loopne
nop
push
mov
sub
call
mov
out
ror
push
into
dec
leave
inc
dec
daa
push
cs
adc
(bad)
push
inc
cmp
aas
test
add
push
fcom
pop
es
sahf
mov
test
out
push
jo
ins
mov
lods
cmc
adc
(bad)
sahf
mov
adc
jle
adc
cmp
ret
push
popfw
outs
les
push
push
sbb
pusha
loopne
xor
nop
les
cmps
pop
call
scas
or
cmps
rcr
data16
(bad)
inc
shl
mov
push
and
fmul
stc
stc
add
mov
test
inc
(bad)
xor
cmp
sahf
and
imul
push
call
bound
sub
mov
sub
dec
push
icebp
dec
jecxz
xchg
add
aam
in
add
ret
jg
push
or
or
xchg
add
dec
(bad)
cmp
bound
jmp
jbe
add
retf
mov
pop
cs
stos
aas
adc
sub
push
(bad)
jge
mov
(bad)
sbb
pop
adc
imul
pop
add
inc
dec
leave
or
fisttp
imul
inc
imul
fbld
mov
add
sti
and
xchg
adc
pop
fs
(bad)
and
retf
mov
sub
mov
or
adc
xchg
inc
jmp
cmc
bound
ins
stos
jnp
fdivr
shl
jae
mov
sti
add
aam
xchg
xchg
fst
jne
out
push
out
int3
push
test
push
arpl
add
das
ret
jmp
ins
adc
(bad)
test
push
loop
(bad)
(bad)
popf
push
in
in
inc
dec
pop
rcl
mov
or
sbb
test
cmp
mov
xchg
rol
mov
push
push
push
adc
pusha
xor
shl
jbe
loop
iret
fwait
scas
fdivr
mov
nop
and
(bad)
fs
mov
push
psllq
add
mov
or
rol
mov
dec
test
ret
and
jnp
or
ficomp
mov
push
adc
pop
sbb
ret
or
and
test
lds
jle
and
out
cs
cmp
xchg
jno
jo
in
int3
mov
fld
out
xchg
mov
add
clc
cmc
lock
or
cmps
(bad)
inc
fbstp
xchg
xchg
and
jo
cmp
cmps
add
and
addr16
jno
mov
movs
aaa
inc
inc
jno
inc
retf
in
je
pop
ret
mov
xor
sti
sub
push
mov
cdq
imul
ins
mov
(bad)
cld
jns
movs
lea
xor
mov
and
rol
push
sub
int3
mov
push
pushf
xor
pop
xchg
mov
mov
shr
dec
inc
mov
clc
std
retf
imul
stos
adc
jecxz
cwde
and
mov
sbb
fidivr
cdq
daa
and
sbb
push
arpl
movs
sub
aad
aam
mov
and
cld
mov
sub
add
fisttp
enter
inc
into
push
arpl
mov
sbb
push
sub
jbe
jo
mov
mov
outs
push
xor
movs
jbe
test
dec
mov
inc
mov
xchg
cmp
aas
out
mul
clc
inc
test
dec
test
(bad)
cmp
adc
mov
add
sbb
pop
outs
outs
cld
lea
adc
je
pushf
or
xchg
dec
fcom
(bad)
cdq
pop
mov
cmp
mov
cld
or
std
(bad)
sar
cmps
jns
test
into
lods
xor
xor
sub
leave
(bad)
jnp
das
adc
pop
adc
ins
cs
mov
dec
xchg
push
pop
mov
mov
and
lock
ja
push
inc
mov
add
sub
xchg
leave
pusha
xchg
and
pop
dec
fldcw
mov
mov
addr16
pop
pop
cmp
mov
aam
push
xchg
shr
cdq
ret
xchg
add
push
sub
(bad)
and
dec
cmp
into
jle
out
cmps
cmp
popa
sub
adc
iret
pop
jge
lea
jle
(bad)
jmp
mov
xor
data16
sti
or
rcr
push
inc
inc
push
div
movs
lahf
ret
data16
(bad)
int3
mov
pop
stc
jns
(bad)
bound
or
fs
or
mov
aad
call
jg
out
repz
xchg
out
retf
pop
sub
mov
and
dec
icebp
lock
cmp
ss
leave
xchg
sahf
jge
minps
mov
pop
es
test
mov
mov
test
loope
sub
jl
push
mov
mov
or
retf
(bad)
pushf
push
xchg
and
out
xchg
jne
jl
xchg
sbb
sub
nop
popa
rcl
call
mov
sbb
movs
not
xchg
adc
pop
mov
ja
add
pushf
enter
nop
push
xchg
pushf
push
stc
test
in
sbb
int
mov
inc
push
or
ret
shr
(bad)
jge
int3
js
aad
cs
cwde
and
jmp
fisubr
push
cmp
jmp
sub
ja
add
cdq
mov
lods
popf
sub
cmp
inc
adc
push
sub
outs
xchg
nop
and
icebp
into
retf
and
mov
mov
(bad)
push
jb
push
mov
and
xor
sbb
xchg
stos
pop
xor
leave
test
aad
or
adc
push
jp
das
inc
stc
loopne
and
into
out
fimul
cmp
test
aam
push
dec
mov
iret
adc
xchg
xchg
jecxz
mov
outs
test
add
ins
mov
inc
sar
loopne
jne
popa
adc
fwait
ret
adc
aaa
loopne
pop
jmp
call
(bad)
aad
loope
cmp
mov
sbb
pop
outs
jns
xchg
addr16
clc
push
fisub
ror
xor
mov
test
sub
add
xor
mov
clc
pusha
sub
mov
cmps
test
pusha
and
mov
jmp
add
pop
inc
add
(bad)
(bad)
scas
cwde
stc
bound
mov
fsubr
mov
call
or
xchg
popf
sti
adc
cmp
push
jb
push
scas
cmp
mov
idiv
std
rol
not
or
jmp
mov
addr16
sbb
sub
ror
out
mov
sahf
or
cmp
out
lods
out
es
std
fistp
popa
push
jns
sub
xchg
mov
xchg
fmul
and
jmp
push
jecxz
jne
aad
and
repz
icebp
aad
add
aad
sub
xchg
mov
mov
das
xchg
stos
out
sbb
xchg
cmp
retf
mov
mov
not
aad
out
ss
sbb
rcl
push
outs
scas
jo
push
push
sbb
outs
fisub
or
outs
and
adc
inc
mov
fdivr
ret
jl
dec
mov
nop
retf
and
in
jp
xchg
sbb
xchg
add
mov
pop
pop
mov
push
aaa
and
fsub
in
inc
jb
ret
sbb
xlat
je
jle
aaa
sbb
xor
lods
mov
cdq
mov
repz
jb
xchg
push
mul
(bad)
mov
or
cmp
retf
test
and
mov
jl
push
or
mov
std
mov
mov
pop
es
push
clc
stos
xchg
data16
or
fmulp
mov
dec
jne
jb
inc
jl
lds
in
xchg
lea
retf
faddp
iret
inc
(bad)
cmp
mov
shr
inc
test
or
sub
addr16
fld
push
xchg
shl
push
inc
jns
pop
(bad)
or
cmp
in
or
nop
xor
inc
pop
outs
add
call
xlat
push
mov
inc
dec
sbb
mov
fadd
not
or
mov
leave
aad
pop
pop
adc
jne
mov
jae
xor
scas
mov
mov
je
pop
xchg
jbe
lods
jno
mov
(bad)
(bad)
stos
inc
mov
sbb
push
fmul
test
sub
mov
mov
ss
adc
test
jb
nop
xchg
xchg
xor
into
mov
loop
xchg
out
aad
or
mov
adc
pop
pop
cmp
aad
pop
dec
iret
mov
pop
stos
pop
mov
mov
dec
mov
push
or
push
mov
adc
sub
xchg
inc
pop
ins
dec
into
stos
inc
sub
sbb
call
mov
arpl
and
sbb
mov
inc
test
cmp
and
daa
stos
fisttp
popa
stc
ror
or
push
leave
js
inc
mov
fwait
das
or
(bad)
sbb
ins
es
std
mov
out
add
push
xor
sbb
fimul
jbe
mov
imul
mov
daa
aad
xchg
xor
in
add
data16
lods
imul
inc
rcr
daa
or
jmp
nop
sbb
repz
mov
fadd
cmps
data16
mov
iret
mov
jmp
pop
test
dec
daa
mov
sbb
fdivr
push
jg
stos
fs
cwde
mov
xor
int
lods
data16
mov
nop
add
add
xor
push
pop
mov
out
sbb
int
cli
in
aad
popf
or
call
pop
add
dec
fdiv
mov
paddusw
mov
sbb
in
jns
mov
arpl
mov
mov
rcl
fcomp
in
xchg
dec
out
popa
daa
pop
or
dec
mov
sbb
std
cmp
mov
stos
jne
loop
mov
test
dec
xor
sbb
or
jmp
push
mov
int3
sbb
lods
icebp
xor
push
cmp
lods
push
cs
adc
mov
jge
mov
jge
sub
aam
imul
pop
pop
iret
fiadd
dec
out
iret
cmps
jmp
cmp
fs
lahf
repnz
sub
push
into
cmp
maskmovq
idiv
shr
mov
out
push
mov
ins
sbb
mov
in
call
cwde
adc
rcl
or
xchg
nop
imul
mov
test
ret
es
loope
scas
rcl
cmps
in
and
aam
inc
push
ins
scas
mov
mov
(bad)
outs
adc
mov
ss
mov
and
out
and
sahf
jmp
pushf
push
jmp
xchg
setge
bound
js
(bad)
push
dec
test
fwait
into
mov
in
push
cmp
ins
add
jns
ins
inc
add
adc
imul
jmp
push
and
push
test
mov
xchg
sti
outs
mov
xor
sbb
mov
retf
sbb
push
jmp
xchg
sbb
popf
jg
mov
sub
cmp
test
rcl
inc
fimul
lods
inc
mov
shr
pop
sub
out
fs
push
popa
icebp
pop
(bad)
xor
xchg
push
fst
popa
push
xchg
mov
jp
pop
ds
test
mov
mov
jns
sub
xor
dec
hlt
jbe
and
inc
jbe
or
cld
ficomp
iretw
sahf
pop
dec
xchg
xchg
sti
adc
lock
cmps
dec
dec
das
cdq
mov
repnz
(bad)
repnz
push
mov
je
xchg
out
cli
call
or
scas
cdq
retf
nop
arpl
jae
lds
mov
mov
dec
(bad)
fdiv
outs
mov
mov
add
and
fisubr
mov
cmp
mov
out
test
mov
stc
outs
rol
or
add
push
fmul
xchg
shl
add
cmp
cmp
retf
and
inc
jae
test
movs
fst
mov
jmp
or
rcr
clc
rol
jmp
sub
cmp
pushf
movs
std
loope
icebp
fnsave
xchg
pop
sub
xchg
dec
jle
jne
mov
inc
(bad)
jl
shl
inc
mov
cmp
pop
out
je
xor
sub
call
(bad)
mov
arpl
jp
cld
icebp
lds
xchg
sub
mov
cmps
and
sbb
neg
std
sub
jecxz
inc
or
ja
mov
jmp
add
movs
mov
aam
sub
test
nop
stos
mov
outs
add
jo
sbb
lods
sub
mov
jle
int
repnz
cmp
hlt
and
pop
into
fs
xchg
xchg
test
daa
movd
adc
mov
push
cwde
dec
mov
mov
(bad)
jecxz
jecxz
mov
xchg
rol
(bad)
jo
jno
sti
inc
sub
adc
sub
push
shl
(bad)
daa
add
jle
push
call
popa
xor
mov
or
xor
cmp
ss
mov
fist
and
jb
out
mov
fnstsw
mov
cmps
test
mov
dec
shr
mov
add
inc
xchg
test
rol
shl
inc
sub
xchg
fild
sub
fisub
mov
jnp
stos
frstor
push
or
fucom
push
push
out
pop
or
fnstenv
sti
test
dec
push
jecxz
loopne
push
ror
dec
mov
popa
xchg
push
and
cmp
xor
mov
ret
out
xlat
and
les
pop
enter
retf
push
outs
mov
mov
mov
les
jns
aad
push
bound
in
test
rol
fwait
add
pop
cdq
int3
inc
sub
push
loopne
lahf
mov
clc
arpl
mov
or
cli
inc
mov
xchg
add
push
pop
gs
out
pop
scas
outs
pop
test
icebp
cmp
mov
fdivr
nop
sbb
pop
stos
cmc
push
neg
in
ins
and
sbb
icebp
dec
dec
arpl
and
sbb
push
bound
call
inc
jmp
cmps
in
mov
shr
aad
mov
ret
mov
add
mov
mov
rcr
gs
cmp
shl
(bad)
out
fisttp
or
in
outs
inc
jmp
fbstp
cmc
out
push
cld
jmp
mov
daa
loope
retf
pop
xlat
mov
fs
adc
jno
je
dec
pop
add
out
hlt
enter
fld
sbb
jp
movs
movs
rcl
sbb
js
test
sub
dec
ret
sar
repz
std
outs
and
out
ret
lods
ds
retf
adc
push
jecxz
je
dec
jae
dec
jg
js
or
inc
xor
push
stos
inc
aaa
mov
cmps
ficom
ror
cs
repnz
std
dec
push
popa
adc
add
addr16
jle
fist
jno
pop
fdiv
mov
hlt
adc
fld
ins
inc
mov
imul
sahf
mov
mov
addr16
ret
into
movs
push
mov
(bad)
xor
test
in
and
mov
clc
mov
push
or
inc
daa
xchg
hlt
jg
iret
mov
and
mov
push
mov
cmp
xor
push
or
xchg
cmps
cs
out
jmp
or
rcl
sahf
dec
dec
push
je
jb
pushf
xor
sub
mov
mov
sub
xor
(bad)
sub
fnstsw
sub
and
lods
add
mov
jno
retf
xchg
dec
call
mov
mov
loope
pop
xchg
push
fstp
pop
sub
loop
and
repnz
push
shr
cmc
mov
lods
(bad)
sbb
sub
jmp
stos
out
dec
ret
pop
jne
or
xrelease
ret
pusha
push
imul
mov
add
lds
cmc
fdiv
imul
mov
mov
js
xor
int
sahf
stos
lods
or
rcr
enter
push
cmps
int
arpl
and
jg
dec
push
(bad)
mov
pop
mov
daa
lahf
outs
or
les
or
sub
add
mov
dec
jno
rol
out
aaa
test
mov
mov
adc
mov
mov
addr16
xor
mov
push
shr
retf
inc
xor
or
fs
add
or
pop
rcl
frstor
imul
loope
pop
outs
lods
arpl
cmps
sahf
cmp
into
push
(bad)
mov
or
inc
fisttp
push
add
repnz
sar
ins
imul
gs
inc
sbb
call
iret
ds
and
sub
ret
cmps
sbb
out
xor
or
and
aam
mov
idiv
les
xor
adc
or
ss
cmps
jl
mov
dec
cdq
out
popa
add
jmp
pop
add
xchg
pop
sbb
dec
mov
cld
or
pop
inc
sub
push
xor
mov
loope
sub
push
in
dec
sbb
inc
pop
xor
rep
stos
in
pop
push
jmp
bnd
in
mov
jp
mov
and
sub
xor
stos
inc
shr
sbb
mov
sbb
daa
jl
scas
test
jecxz
mov
push
sbb
sbb
popa
jp
popa
jge
mov
fs
jo
xchg
jmp
mov
outs
dec
stos
retf
xchg
lods
cmp
sbb
xchg
jg
xchg
in
loopne
mul
fbld
push
enter
and
sbb
gs
or
push
sbb
sti
inc
dec
xor
jg
sub
push
les
es
add
jnp
xchg
xchg
push
xor
xchg
sbb
hlt
push
outs
ins
xchg
nop
popf
xchg
push
ret
cmp
cmps
jbe
out
dec
out
inc
or
jl
xchg
adc
aam
add
adc
push
xchg
sbb
sbb
retf
clc
leave
jae
bound
test
fs
dec
xor
dec
test
adc
inc
fdiv
lods
cmp
xchg
lahf
or
les
pop
ds
push
fs
add
cmp
mov
xchg
aad
data16
add
xlat
mov
mov
stc
ret
call
adc
add
fisub
cmp
shl
pop
data16
xchg
ins
nop
mov
adc
(bad)
push
shl
test
outs
mov
mov
fwait
ins
and
lahf
aam
retf
mov
repz
les
push
mov
lods
push
ret
jne
mov
xor
in
xor
push
mov
mov
sbb
jle
xor
(bad)
(bad)
inc
fwait
add
test
add
push
pop
jl
stos
xchg
sub
sub
(bad)
mov
pop
fisttp
shr
sub
ins
add
les
(bad)
out
call
ja
adc
cwde
xchg
fimul
jno
fsub
pop
ficom
ins
in
and
das
mov
or
xchg
mov
xor
and
mov
add
jmp
loope
jb
or
es
mov
mov
inc
out
jge
push
mov
ficomp
push
outs
gs
inc
js
xchg
ins
mov
cld
inc
jmp
lods
adc
add
popa
or
inc
jns
(bad)
cmps
sub
xchg
test
daa
sub
pop
adc
cmps
mov
movs
cmp
xor
xor
cwde
add
(bad)
jnp
pop
lock
sub
neg
icebp
dec
dec
call
ror
cmp
inc
adc
(bad)
std
fdiv
sti
in
xor
add
push
inc
inc
inc
rol
pop
loopne
lds
ret
pusha
inc
ficomp
bound
cmp
xchg
inc
lock
fadd
push
xchg
xchg
sbb
jb
into
pop
ret
mov
in
int3
xor
mov
cwde
fstp
sti
cmp
xchg
fild
and
adc
add
xchg
je
(bad)
fstp
movs
popa
outs
icebp
inc
inc
push
or
cmp
in
cmp
movs
mov
cmps
jb
cmp
aad
or
iret
out
das
mov
leave
out
push
imul
outs
lock
out
leave
fstp
lea
div
mov
jno
mov
and
push
adc
push
out
pop
adc
shl
sub
xchg
neg
xchg
dec
(bad)
xor
pop
mov
cmp
sbb
out
jo
inc
push
test
loopne
movs
xchg
cmp
inc
inc
cmp
retf
jmp
retf
xchg
inc
mov
idiv
sbb
iret
mov
imul
jns
frstor
(bad)
lods
stos
das
popa
mov
push
cmp
add
xor
sbb
enter
mov
fiadd
xchg
jmp
jo
aas
imul
ins
loope
fidiv
mov
rcl
cwde
mov
or
push
shl
mov
adc
fisttp
outs
sub
stc
popf
nop
cmp
(bad)
xor
push
push
mov
(bad)
or
ss
mov
adc
fmul
pop
lods
fwait
test
push
rcr
dec
xchg
ins
add
mov
not
not
mov
mov
mov
into
jnp
sub
xlat
bound
xor
int3
push
jne
loope
fwait
inc
jl
pop
jg
test
jb
xchg
int
jo
mov
hlt
xchg
xor
fwait
ins
aas
adc
mov
lea
add
add
add
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
or
add
jle
add
add
or
add
push
je
imul
add
add
nop
pop
add
and
add
sbb
add
and
dec
inc
add
add
sbb
add
and
outs
bound
add
add
add
inc
push
add
or
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
and
add
add
add
add
add
add
fild
push
add
fild
push
add
fild
or
mov
add
add
add
add
add
add
jne
push
add
add
add
add
add
xchg
or
add
add
or
or
add
add
add
add
add
add
add
add
add
add
adc
scas
add
add
add
add
add
leave
add
add
add
add
push
leave
add
add
add
add
add
add
add
adc
popa
pop
leave
add
add
add
add
or
add
add
add
add
or
add
add
add
add
leave
add
add
add
add
or
add
add
add
add
or
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
xchg
add
add
add
add
add
mov
add
add
add
add
add
xchg
add
add
and
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
xchg
add
add
jl
add
add
xchg
add
add
and
add
xchg
add
add
test
add
add
add
add
add
add
add
xchg
add
add
add
xchg
add
add
add
add
add
add
xchg
add
add
add
add
add
xchg
add
add
add
add
add
xchg
add
add
mov
add
add
xchg
add
add
mov
add
add
xchg
add
add
mov
add
add
add
xchg
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
xchg
add
push
adc
sldt
xchg
add
pop
adc
str
and
xchg
add
pop
adc
str
xchg
add
add
and
xchg
add
pop
adc
lldt
xchg
add
pop
adc
ltr
and
xchg
add
adc
ltr
xchg
add
add
add
xchg
add
adc
verw
and
xchg
add
adc
verw
xchg
add
add
and
xchg
add
add
xchg
add
add
and
xchg
add
add
xchg
add
pop
adc
sldt
add
add
xchg
add
pop
adc
sldt
add
add
add
add
add
add
xchg
add
pop
adc
str
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
xchg
add
adc
verr
add
add
add
add
add
add
xchg
add
adc
verw
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
xchg
add
or
add
add
add
add
add
xchg
add
or
add
add
add
add
add
xchg
add
or
add
add
add
add
add
xchg
add
or
add
add
add
add
add
xchg
add
adc
verw
add
add
add
xchg
add
add
add
xchg
add
add
add
add
add
xchg
add
add
and
xchg
add
add
and
xchg
add
or
add
add
and
xchg
add
or
add
add
and
xchg
add
or
add
add
and
xchg
add
or
add
add
and
xchg
add
or
add
add
and
xchg
add
or
add
add
and
xchg
add
add
add
and
xchg
add
adc
verw
and
xchg
add
adc
verw
and
xchg
add
adc
(bad)
lock
xchg
add
adc
(bad)
hlt
and
xchg
add
adc
(bad)
clc
and
xchg
add
adc
(bad)
cld
and
xchg
add
add
add
add
xchg
add
add
add
add
xchg
add
or
add
add
xchg
add
add
add
add
xchg
add
add
add
add
add
xchg
add
or
add
add
add
add
xchg
add
or
add
add
add
add
xchg
add
or
add
add
add
add
xchg
add
or
add
add
add
add
xchg
add
add
add
add
xchg
add
or
add
add
add
add
xchg
add
adc
(bad)
xor
add
add
xchg
add
adc
(bad)
xor
add
add
xchg
add
adc
(bad)
cmp
add
add
xchg
add
adc
(bad)
cmp
add
add
xchg
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
mov
add
add
rol
add
add
add
add
loope
add
add
aas
add
add
add
adc
and
pop
add
add
add
outs
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
inc
xor
imul
push
push
add
dec
inc
and
inc
inc
dec
and
xor
ins
jae
outs
jb
imul
gs
cs
imul
inc
outs
jb
jae
dec
imul
je
push
imul
jae
arpl
in
cdq
in
mov
mov
in
cdq
in
scas
in
mov
mov
in
xchg
in
mov
mov
in
mov
mov
in
mov
mov
in
movs
in
scas
cs
jae
jne
arpl
add
popa
jne
jne
xor
popa
pop
add
outs
pop
bound
pop
cmp
popa
add
xor
data16
jbe
push
dec
cmp
js
push
dec
ins
fs
dec
bound
arpl
jns
je
ins
add
addr16
jno
push
pop
pop
push
pop
add
jb
jo
outs
push
jb
outs
jae
outs
jb
add
jae
gs
cs
arpl
imul
je
addr16
jo
jns
push
jb
outs
jae
outs
jb
inc
imul
arpl
push
push
push
push
pop
inc
jne
dec
push
pop
push
addr16
inc
xor
aaa
xor
push
cmp
jp
push
js
add
push
push
popa
push
cmp
inc
push
dec
add
dec
inc
imul
push
dec
dec
inc
xor
add
ins
ins
gs
imul
imul
popa
je
inc
arpl
jo
outs
jb
jae
ins
jp
pop
push
dec
ss
push
jae
xor
add
xor
push
addr16
fs
xor
inc
jns
add
ins
data16
push
xor
arpl
dec
jno
add
inc
push
addr16
fs
jb
data16
pop
jae
add
imul
inc
push
bound
add
jae
jne
arpl
popa
outs
popa
addr16
push
jns
je
ins
cs
gs
jne
arpl
add
jae
ins
bound
push
jns
je
ins
cs
gs
arpl
outs
add
je
outs
fs
outs
outs
add
arpl
je
outs
outs
add
je
xor
push
je
imul
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
arpl
add
je
dec
gs
jae
je
dec
push
add
je
dec
gs
popa
add
jae
popa
addr16
outs
js
push
push
imul
jae
ins
je
inc
xor
jp
pop
inc
outs
aaa
xor
push
add
jae
jo
xor
add
outs
jo
jb
jns
outs
outs
add
je
jns
add
je
jb
jo
jb
jns
inc
gs
popa
ins
jne
add
popa
jns
ins
inc
push
pop
inc
inc
dec
inc
pop
js
dec
add
inc
inc
push
jb
push
jb
je
add
push
jns
imul
ja
xor
ins
inc
outs
dec
push
dec
xor
aaa
jp
push
inc
add
je
gs
outs
fs
outs
jo
inc
jno
popa
ins
imul
gs
outs
add
gs
imul
dec
imul
je
push
imul
jae
arpl
inc
outs
ins
jo
ins
gs
gs
imul
je
inc
gs
js
imul
push
jbe
push
push
ja
xor
je
push
arpl
dec
jno
jae
push
add
xor
jbe
dec
xor
ss
push
je
jae
imul
inc
push
ja
dec
inc
add
aaa
ins
jne
push
imul
outs
ins
xor
jb
ins
inc
jb
popa
jns
je
jb
bound
add
dec
dec
jb
push
outs
dec
dec
inc
xor
inc
arpl
popa
je
jb
inc
jb
popa
je
dec
outs
jae
popa
outs
arpl
bound
inc
jp
cmp
push
ins
pop
cmp
data16
dec
dec
pushw
inc
pop
pop
cmp
inc
push
inc
jns
dec
ins
push
push
push
dec
cmp
dec
add
cmp
jb
dec
popa
jo
popa
js
ja
ins
jno
ins
inc
jae
dec
fs
dec
push
ss
ss
dec
data16
dec
dec
jne
dec
outs
push
jns
ins
aaa
jns
push
push
push
push
dec
pop
inc
ja
dec
bound
jne
inc
xor
ins
push
inc
cmp
pop
jo
xor
pop
dec
outs
je
jbe
push
xor
push
xor
push
add
inc
push
xor
fs
dec
dec
jns
push
pop
inc
gs
push
ss
inc
je
inc
data16
addr16
outs
push
inc
push
gs
dec
add
pop
pop
imul
ins
inc
jo
outs
imul
push
dec
jne
ja
inc
je
xor
jno
push
pop
dec
js
dec
push
xor
inc
push
add
js
push
ins
xor
dec
push
dec
add
jo
bound
push
inc
cmp
jbe
je
ins
xor
inc
push
jbe
arpl
pop
outs
push
cmp
gs
push
ins
popa
push
jo
push
ins
add
push
xor
xor
jb
push
dec
dec
add
inc
aaa
js
pop
xor
pop
push
push
add
xor
dec
push
xor
ins
inc
push
dec
add
inc
cmp
ss
push
ins
add
dec
ss
imul
ins
data16
add
push
inc
xor
outs
addr16
imul
jno
ja
ins
add
push
dec
inc
jns
jo
add
jns
cmp
gs
xor
add
dec
dec
dec
push
gs
inc
inc
push
gs
ins
aaa
dec
pop
add
dec
gs
imul
dec
xor
jb
js
pop
jns
push
xor
dec
inc
push
jns
push
dec
push
outs
push
dec
popa
gs
xor
add
pop
dec
inc
popa
addr16
inc
jbe
xor
push
jb
inc
xor
dec
xor
push
dec
ss
outs
ja
cmp
push
xor
ja
dec
inc
fs
xor
pop
dec
add
inc
dec
push
popa
push
arpl
add
dec
jbe
inc
cmp
jb
jns
aaa
dec
jp
push
add
jo
dec
push
outs
push
jb
dec
add
outs
push
inc
inc
popa
dec
inc
outs
outs
inc
xor
add
cmp
jne
cmp
add
arpl
bound
dec
outs
xor
add
pop
arpl
pop
ja
outs
pop
push
add
inc
xor
jne
inc
pop
dec
push
add
jne
jo
inc
dec
jno
addr16
add
push
je
push
inc
push
imul
inc
xor
jns
xor
xor
push
imul
ins
aaa
xor
dec
aaa
jns
inc
pop
je
add
pop
cmp
ins
push
outs
inc
pop
xor
push
push
add
je
dec
inc
ja
xor
add
gs
dec
pop
push
imul
jo
xor
inc
pop
jno
jno
push
dec
jp
add
pop
pop
push
pop
push
fs
ins
outs
ins
dec
dec
add
jns
push
dec
pop
data16
ins
jno
dec
xor
pop
push
jo
push
push
jns
popa
ins
je
inc
arpl
jae
dec
jbe
inc
xor
fs
dec
pop
push
xor
push
ins
push
inc
jb
add
ins
inc
inc
dec
inc
push
jbe
jns
dec
xor
push
jbe
popa
js
js
inc
add
bound
xor
xor
xor
xor
je
dec
fs
inc
inc
ins
push
data16
pop
push
jp
xor
inc
cmp
jb
push
dec
jbe
dec
fs
xor
bound
push
data16
jp
gs
outs
jno
jp
add
push
xor
push
pop
push
dec
pop
js
pushw
jne
add
push
js
arpl
push
inc
js
push
push
xor
push
xor
jbe
imul
xor
push
add
ins
popa
dec
push
xor
jb
data16
xor
inc
addr16
arpl
push
add
jbe
push
cmp
inc
xor
push
pop
push
add
dec
push
jne
jae
ins
inc
jns
inc
add
dec
popa
push
outs
arpl
xor
cmp
push
dec
ss
popa
ins
jb
inc
aaa
ja
dec
push
xor
add
inc
ja
dec
jo
xor
pop
push
push
dec
add
ins
push
xor
dec
dec
push
push
jno
cmp
inc
jae
aaa
jne
ss
dec
inc
dec
push
inc
inc
je
inc
add
push
push
xor
imul
ins
add
xor
outs
inc
push
push
push
push
add
outs
outs
imul
jae
inc
outs
arpl
add
push
inc
dec
push
jo
jo
ss
add
popa
imul
outs
pop
ss
xor
arpl
js
outs
inc
outs
dec
ins
pop
addr16
inc
ins
arpl
js
xor
je
inc
push
xor
aaa
inc
ss
inc
dec
add
jp
push
ins
inc
inc
push
push
outs
dec
xor
push
xor
ja
add
push
jns
xor
ins
add
outs
xor
push
push
inc
dec
outs
imul
add
dec
push
inc
dec
xor
jb
popa
pop
js
push
add
inc
fs
xor
inc
dec
cmp
dec
push
add
inc
je
xor
imul
add
inc
push
imul
js
dec
dec
outs
push
pop
xor
ins
ja
dec
inc
push
addr16
addr16
arpl
dec
jae
jae
push
dec
inc
fs
push
arpl
jbe
ss
jns
aaa
push
push
gs
push
outs
ins
fs
dec
dec
add
xor
dec
dec
pop
xor
add
inc
push
arpl
popa
addr16
pop
pop
dec
xor
aaa
jns
jbe
aaa
imul
push
xor
dec
add
xor
push
popa
dec
inc
inc
push
imul
inc
inc
inc
outs
jno
xor
add
gs
xor
dec
xor
add
xor
dec
push
jo
xor
addr16
push
outs
push
inc
add
popa
jne
cmp
cmp
dec
imul
je
push
xor
push
cmp
push
pop
push
cmp
add
addr16
ja
push
inc
dec
jno
inc
push
add
push
cmp
addr16
ja
inc
jp
inc
js
inc
addr16
push
ja
aaa
xor
dec
push
xor
inc
pop
push
imul
jae
dec
xor
dec
data16
jbe
inc
push
push
xor
inc
imul
inc
gs
pop
imul
imul
push
add
imul
inc
dec
outs
dec
add
dec
jo
pop
dec
jne
push
push
jb
imul
je
popa
cmp
inc
dec
push
xor
inc
inc
push
data16
bound
inc
ins
push
jns
xor
jp
ja
jno
push
push
dec
je
push
dec
add
push
push
inc
outs
ja
inc
pop
pop
inc
je
dec
inc
pop
add
dec
popa
inc
push
jbe
ss
inc
jp
dec
jb
inc
jne
push
xor
ins
ins
add
push
js
dec
jb
js
aaa
push
dec
je
xor
ins
inc
add
xor
inc
inc
push
xor
jbe
jb
push
jne
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
jbe
jb
imul
inc
outs
fs
je
jb
bound
add
jae
gs
cs
arpl
imul
add
jae
je
add
add
add
add
add
outs
add
add
add
add
add
or
ins
add
add
add
push
dec
outs
dec
xor
dec
adc
dec
pop
dec
cmp
dec
cs
cmp
dec
add
dec
dec
dec
jnp
sub
dec
imul
dec
dec
xor
dec
add
adc
dec
pop
dec
sbb
dec
sub
dec
sbb
pop
dec
js
aaa
dec
and
dec
sub
dec
sbb
dec
dec
dec
dec
dec
jle
daa
dec
pop
dec
push
dec
pop
dec
add
inc
push
dec
cmp
dec
jle
es
and
dec
inc
dec
push
dec
add
dec
adc
dec
push
dec
inc
dec
pop
dec
dec
dec
cmp
dec
adc
dec
xor
dec
push
dec
cmp
dec
cmp
dec
adc
dec
dec
dec
sbb
dec
aas
dec
and
dec
or
dec
inc
dec
cmovle
dec
sub
dec
jnp
push
dec
sbb
dec
dec
dec
inc
dec
sub
dec
add
inc
dec
xor
dec
push
dec
adc
dec
add
dec
sbb
dec
das
dec
add
add
dec
xor
dec
jnp
add
dec
add
dec
imul
dec
xor
dec
push
dec
dec
dec
cmp
jo
sbb
ja
jb
dec
dec
and
dec
cmp
dec
sbb
dec
push
dec
dec
dec
adc
dec
adc
dec
add
sub
dec
inc
dec
pop
dec
ins
dec
sub
dec
push
pop
dec
pop
dec
imul
pop
dec
ja
adc
dec
jno
arpl
dec
aas
dec
add
add
xor
dec
add
dec
sub
dec
or
dec
sub
dec
sub
dec
fs
xor
dec
pop
dec
ja
sbb
dec
and
dec
inc
dec
inc
dec
ins
dec
sbb
adc
or
dec
cmp
dec
cmovle
dec
pop
dec
ins
dec
adc
dec
add
dec
pop
dec
adc
dec
dec
push
dec
xor
dec
pop
dec
push
dec
push
dec
pop
dec
and
dec
xor
dec
xor
dec
fs
add
dec
jae
add
dec
push
dec
add
pop
dec
inc
dec
inc
dec
or
dec
jb
adc
dec
pop
dec
jb
cmp
dec
gs
cs
pop
dec
xor
dec
imul
dec
push
dec
push
dec
push
dec
add
dec
pop
dec
cmp
dec
fs
gs
popa
dec
or
push
dec
adc
dec
and
dec
jp
push
dec
sub
dec
dec
dec
ja
and
dec
push
dec
jbe
aas
dec
pop
dec
add
ins
dec
pusha
dec
or
dec
jb
outs
dec
add
dec
adc
dec
add
dec
push
dec
pop
dec
adc
dec
adc
dec
dec
dec
dec
dec
ins
dec
jb
es
sbb
dec
es
push
dec
sub
dec
inc
dec
ds
dec
dec
pusha
dec
jne
sub
dec
sub
dec
or
dec
cmp
dec
jns
and
dec
cmp
dec
ins
dec
add
gs
add
dec
jg
outs
dec
arpl
dec
addr16
dec
dec
sub
dec
adc
dec
sub
dec
popa
dec
xor
dec
dec
jo
xor
xor
dec
adc
dec
add
inc
add
dec
push
dec
pop
dec
cmp
dec
sub
dec
cmp
dec
je
inc
dec
jae
add
dec
addr16
push
dec
push
dec
adc
dec
or
and
dec
xor
dec
daa
dec
pop
dec
ja
jne
pop
dec
add
sbb
dec
sbb
dec
cmp
dec
adc
dec
add
dec
ja
gs
sbb
inc
dec
outs
dec
xor
dec
sub
adc
dec
add
cmp
inc
dec
add
dec
cs
fs
push
dec
or
dec
inc
dec
pop
dec
push
dec
pop
dec
jge
pop
dec
or
dec
xor
inc
dec
je
push
dec
push
dec
adc
dec
outs
dec
fs
add
dec
dec
dec
arpl
dec
dec
dec
pop
dec
jl
adc
dec
add
cs
push
dec
ja
ins
dec
das
dec
pop
dec
dec
dec
addr16
jb
pop
dec
or
dec
pop
dec
ins
dec
aas
dec
cs
jae
outs
dec
popa
dec
pop
dec
aas
dec
jg
bound
dec
xor
dec
pop
dec
add
jnp
add
dec
sub
ins
dec
xor
dec
and
dec
dec
dec
pop
dec
arpl
dec
jb
sbb
dec
ds
pop
dec
aas
dec
add
and
dec
inc
dec
cs
jo
js
cmp
dec
add
inc
dec
imul
push
dec
pop
dec
push
dec
sub
pop
dec
push
dec
sbb
sub
jbe
ss
or
dec
dec
jg
jne
pop
dec
sbb
dec
dec
dec
jns
sbb
dec
imul
xor
dec
sub
sbb
inc
and
dec
add
dec
and
dec
pop
dec
dec
outs
dec
pop
dec
jp
sbb
jbe
popa
dec
push
dec
and
dec
js
inc
dec
outs
dec
push
dec
dec
pop
dec
ja
jns
sub
or
dec
jae
outs
dec
jns
pusha
dec
ins
dec
add
or
dec
pop
dec
push
dec
add
dec
or
dec
jle
add
dec
xor
pop
dec
inc
dec
pop
dec
and
dec
outs
dec
push
dec
jle
or
dec
jne
add
sbb
dec
add
dec
sbb
dec
dec
dec
or
dec
push
dec
arpl
dec
outs
dec
ins
dec
aaa
dec
inc
dec
imul
dec
push
dec
fs
das
dec
add
inc
add
jae
add
bound
ins
add
add
add
jae
je
add
add
add
outs
add
jb
arpl
add
add
add
outs
add
jb
arpl
add
popa
add
popa
add
add
add
inc
add
je
dec
add
push
add
je
add
dec
ja
inc
dec
cmp
dec
add
dec
push
dec
aas
dec
or
dec
fs
push
dec
jo
sub
dec
sub
dec
jp
inc
dec
ss
push
dec
adc
adc
dec
add
inc
dec
xor
inc
dec
sbb
dec
and
dec
or
dec
push
dec
sub
dec
xor
dec
ja
ss
push
dec
adc
es
jg
sub
dec
add
dec
dec
dec
jl
add
dec
imul
dec
arpl
dec
xor
jnp
jno
dec
dec
inc
dec
arpl
dec
sbb
pop
push
add
jae
je
add
add
add
jne
jb
imul
add
jb
jns
jo
je
outs
add
jb
popa
add
push
add
imul
add
add
add
outs
add
add
add
xor
jae
je
add
add
add
ins
add
arpl
je
imul
add
jae
jae
add
bound
ins
add
add
dec
add
popa
add
adc
je
jb
jns
push
add
imul
add
push
add
jae
je
add
add
add
ins
add
arpl
je
imul
add
add
add
add
outs
add
outs
add
or
jbe
outs
add
add
or
popa
add
add
pop
outs
add
push
add
jb
popa
add
add
add
jae
add
mov
pop
fisub
mov
mov
or
xor
mov
mov
pop
jg
aad
cmp
add
add
and
sbb
or
add
sbb
add
or
add
adc
adc
add
add
add
add
sbb
sbb
or
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
adc
add
push
adc
add
add
push
add
push
add
push
push
pop
add
sub
add
sub
cmp
sbb
sbb
sbb
push
adc
or
sub
sbb
or
add
push
add
sbb
push
push
or
adc
push
sbb
sbb
push
sbb
sbb
and
add
add
add
add
sbb
sub
add
sbb
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
or
add
or
add
add
sbb
jns
je
ins
cs
arpl
imul
imul
cs
arpl
imul
jae
imul
imul
ins
jae
outs
jb
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
imul
gs
imul
outs
outs
add
add
add
add
add
add
add
add
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
